//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u32 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [gpu_memset_param_0];
	ld.param.u32 	%r2, [gpu_memset_param_1];
	ld.param.u32 	%r3, [gpu_memset_param_2];
	mov.b32	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
	setp.ge.u32	%p1, %r1, %r3;
	@%p1 bra 	BB0_2;

	mul.wide.u32 	%rd2, %r1, 16;
	add.s64 	%rd3, %rd1, %rd2;
	st.global.v4.u32 	[%rd3], {%r2, %r2, %r2, %r2};

BB0_2:
	ret;
}

	// .globl	m01710_m04
.entry m01710_m04(
	.param .u64 .ptr .global .align 4 m01710_m04_param_0,
	.param .u64 .ptr .global .align 4 m01710_m04_param_1,
	.param .u64 .ptr .global .align 4 m01710_m04_param_2,
	.param .u64 .ptr .global .align 4 m01710_m04_param_3,
	.param .u64 .ptr .global .align 1 m01710_m04_param_4,
	.param .u64 .ptr .global .align 1 m01710_m04_param_5,
	.param .u64 .ptr .global .align 4 m01710_m04_param_6,
	.param .u64 .ptr .global .align 4 m01710_m04_param_7,
	.param .u64 .ptr .global .align 4 m01710_m04_param_8,
	.param .u64 .ptr .global .align 4 m01710_m04_param_9,
	.param .u64 .ptr .global .align 4 m01710_m04_param_10,
	.param .u64 .ptr .global .align 4 m01710_m04_param_11,
	.param .u64 .ptr .global .align 4 m01710_m04_param_12,
	.param .u64 .ptr .global .align 4 m01710_m04_param_13,
	.param .u64 .ptr .global .align 4 m01710_m04_param_14,
	.param .u64 .ptr .global .align 4 m01710_m04_param_15,
	.param .u64 .ptr .global .align 4 m01710_m04_param_16,
	.param .u64 .ptr .global .align 4 m01710_m04_param_17,
	.param .u64 .ptr .global .align 1 m01710_m04_param_18,
	.param .u64 .ptr .global .align 4 m01710_m04_param_19,
	.param .u64 .ptr .global .align 4 m01710_m04_param_20,
	.param .u64 .ptr .global .align 4 m01710_m04_param_21,
	.param .u64 .ptr .global .align 4 m01710_m04_param_22,
	.param .u64 .ptr .global .align 4 m01710_m04_param_23,
	.param .u32 m01710_m04_param_24,
	.param .u32 m01710_m04_param_25,
	.param .u32 m01710_m04_param_26,
	.param .u32 m01710_m04_param_27,
	.param .u32 m01710_m04_param_28,
	.param .u32 m01710_m04_param_29,
	.param .u32 m01710_m04_param_30,
	.param .u32 m01710_m04_param_31,
	.param .u32 m01710_m04_param_32,
	.param .u32 m01710_m04_param_33,
	.param .u32 m01710_m04_param_34
)
{
	.local .align 16 .b8 	__local_depot1[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<1078>;
	.reg .b16 	%rs<377>;
	.reg .b32 	%r<11709>;
	.reg .b64 	%rd<2853>;


	mov.u64 	%rd2852, __local_depot1;
	cvta.local.u64 	%SP, %rd2852;
	ld.param.u64 	%rd87, [m01710_m04_param_0];
	ld.param.u64 	%rd88, [m01710_m04_param_1];
	ld.param.u64 	%rd100, [m01710_m04_param_17];
	ld.param.u64 	%rd101, [m01710_m04_param_19];
	ld.param.u32 	%r1939, [m01710_m04_param_24];
	ld.param.u32 	%r1942, [m01710_m04_param_27];
	ld.param.u32 	%r1943, [m01710_m04_param_30];
	ld.param.u32 	%r1944, [m01710_m04_param_31];
	ld.param.u32 	%r1945, [m01710_m04_param_32];
	ld.param.u32 	%r1946, [m01710_m04_param_34];
	mov.u32 	%r1947, %ctaid.x;
	mov.u32 	%r1948, %ntid.x;
	mov.b32	%r1949, %envreg3;
	mad.lo.s32 	%r1950, %r1947, %r1948, %r1949;
	mov.u32 	%r1951, %tid.x;
	add.s32 	%r1, %r1950, %r1951;
	setp.ge.u32	%p1, %r1, %r1946;
	@%p1 bra 	BB1_1618;

	mul.wide.u32 	%rd102, %r1, 80;
	add.s64 	%rd103, %rd87, %rd102;
	ld.global.u32 	%r2, [%rd103];
	ld.global.u32 	%r3, [%rd103+4];
	ld.global.u32 	%r4, [%rd103+8];
	ld.global.u32 	%r5, [%rd103+12];
	ld.global.u32 	%r6, [%rd103+16];
	ld.global.u32 	%r7, [%rd103+20];
	ld.global.u32 	%r8, [%rd103+24];
	ld.global.u32 	%r9, [%rd103+28];
	ld.global.u32 	%r10, [%rd103+64];
	mul.wide.u32 	%rd104, %r1942, 180;
	add.s64 	%rd1, %rd100, %rd104;
	ld.global.u32 	%r11, [%rd1];
	ld.global.u32 	%r12, [%rd1+4];
	ld.global.u32 	%r13, [%rd1+8];
	ld.global.u32 	%r14, [%rd1+12];
	ld.global.u32 	%r15, [%rd1+16];
	ld.global.u32 	%r16, [%rd1+20];
	ld.global.u32 	%r17, [%rd1+24];
	ld.global.u32 	%r18, [%rd1+28];
	ld.global.u32 	%r19, [%rd1+32];
	ld.global.u32 	%r20, [%rd1+36];
	ld.global.u32 	%r21, [%rd1+40];
	ld.global.u32 	%r22, [%rd1+44];
	ld.global.u32 	%r23, [%rd1+48];
	ld.global.u32 	%r24, [%rd1+52];
	setp.eq.s32	%p2, %r1943, 0;
	@%p2 bra 	BB1_1618;

	ld.global.u32 	%r25, [%rd1+128];
	mov.u64 	%rd105, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1953,%dummy}, %rd105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1954}, %rd105;
	}
	shf.r.wrap.b32 	%r1955, %r1954, %r1953, 18;
	shf.r.wrap.b32 	%r1956, %r1953, %r1954, 18;
	mov.b64 	%rd106, {%r1956, %r1955};
	shf.r.wrap.b32 	%r1957, %r1954, %r1953, 14;
	shf.r.wrap.b32 	%r1958, %r1953, %r1954, 14;
	mov.b64 	%rd107, {%r1958, %r1957};
	xor.b64  	%rd108, %rd106, %rd107;
	shf.l.wrap.b32 	%r1959, %r1953, %r1954, 23;
	shf.l.wrap.b32 	%r1960, %r1954, %r1953, 23;
	mov.b64 	%rd109, {%r1960, %r1959};
	xor.b64  	%rd3, %rd108, %rd109;
	mov.u64 	%rd110, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1961}, %rd110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1962,%dummy}, %rd110;
	}
	shf.l.wrap.b32 	%r1963, %r1962, %r1961, 30;
	shf.l.wrap.b32 	%r1964, %r1961, %r1962, 30;
	mov.b64 	%rd111, {%r1964, %r1963};
	shf.r.wrap.b32 	%r1965, %r1961, %r1962, 28;
	shf.r.wrap.b32 	%r1966, %r1962, %r1961, 28;
	mov.b64 	%rd112, {%r1966, %r1965};
	xor.b64  	%rd113, %rd111, %rd112;
	shf.l.wrap.b32 	%r1967, %r1962, %r1961, 25;
	shf.l.wrap.b32 	%r1968, %r1961, %r1962, 25;
	mov.b64 	%rd114, {%r1968, %r1967};
	xor.b64  	%rd4, %rd113, %rd114;
	mov.u64 	%rd115, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1969}, %rd115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1970,%dummy}, %rd115;
	}
	shf.l.wrap.b32 	%r1971, %r1970, %r1969, 3;
	shf.l.wrap.b32 	%r1972, %r1969, %r1970, 3;
	mov.b64 	%rd116, {%r1972, %r1971};
	shf.r.wrap.b32 	%r1973, %r1969, %r1970, 19;
	shf.r.wrap.b32 	%r1974, %r1970, %r1969, 19;
	mov.b64 	%rd117, {%r1974, %r1973};
	xor.b64  	%rd20, %rd117, %rd116;
	shf.r.wrap.b32 	%r1975, %r1969, %r1970, 8;
	shf.r.wrap.b32 	%r1976, %r1970, %r1969, 8;
	mov.b64 	%rd118, {%r1976, %r1975};
	shf.r.wrap.b32 	%r1977, %r1969, %r1970, 1;
	shf.r.wrap.b32 	%r1978, %r1970, %r1969, 1;
	mov.b64 	%rd119, {%r1978, %r1977};
	xor.b64  	%rd21, %rd119, %rd118;
	mov.u32 	%r11513, 0;

BB1_3:
	mov.u32 	%r11515, 0;
	cvt.u64.u32	%rd83, %r11513;
	mul.wide.u32 	%rd120, %r11513, 128;
	add.s64 	%rd121, %rd88, %rd120;
	ld.global.u32 	%r11514, [%rd121];
	setp.eq.s32	%p3, %r11514, 0;
	mov.u32 	%r11690, %r10;
	mov.u32 	%r11689, %r5;
	mov.u32 	%r11688, %r4;
	mov.u32 	%r11687, %r3;
	mov.u32 	%r11686, %r2;
	mov.u32 	%r11685, %r6;
	mov.u32 	%r11684, %r7;
	mov.u32 	%r11683, %r8;
	mov.u32 	%r11682, %r9;
	@%p3 bra 	BB1_1548;
	bra.uni 	BB1_4;

BB1_195:
	setp.ne.s32	%p131, %r40, 31;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p131 bra 	BB1_214;

	mov.u32 	%r11525, 0;
	mov.u32 	%r2556, 8;
	// inline asm
	shf.r.wrap.b32 %r11528, %r11525, %r34, %r2556;
	// inline asm

BB1_197:
	mov.u32 	%r11526, %r11525;
	mov.u32 	%r11527, %r11525;

BB1_189:
	mov.u32 	%r11529, %r11525;
	mov.u32 	%r11530, %r11525;
	mov.u32 	%r11531, %r11525;
	mov.u32 	%r11532, %r11525;

BB1_214:
	and.b32  	%r3098, %r30, 3;
	shl.b32 	%r3099, %r3098, 3;
	mov.u32 	%r3100, -1;
	shl.b32 	%r176, %r3100, %r3099;
	shr.u32 	%r3097, %r30, 2;
	setp.gt.s32	%p173, %r3097, 3;
	@%p173 bra 	BB1_222;

	setp.gt.s32	%p179, %r3097, 1;
	@%p179 bra 	BB1_219;

	setp.eq.s32	%p182, %r3097, 0;
	@%p182 bra 	BB1_233;
	bra.uni 	BB1_217;

BB1_233:
	and.b32  	%r11529, %r11529, %r176;
	bra.uni 	BB1_234;

BB1_222:
	setp.gt.s32	%p174, %r3097, 5;
	@%p174 bra 	BB1_226;

	setp.eq.s32	%p177, %r3097, 4;
	@%p177 bra 	BB1_231;
	bra.uni 	BB1_224;

BB1_231:
	and.b32  	%r11525, %r11525, %r176;
	mov.u32 	%r11529, 0;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	bra.uni 	BB1_234;

BB1_219:
	setp.eq.s32	%p180, %r3097, 2;
	@%p180 bra 	BB1_232;
	bra.uni 	BB1_220;

BB1_232:
	and.b32  	%r11531, %r11531, %r176;
	mov.u32 	%r11529, 0;
	mov.u32 	%r11530, %r11529;
	bra.uni 	BB1_234;

BB1_226:
	setp.eq.s32	%p175, %r3097, 6;
	@%p175 bra 	BB1_229;
	bra.uni 	BB1_227;

BB1_229:
	and.b32  	%r11527, %r11527, %r176;
	mov.u32 	%r11525, 0;
	mov.u32 	%r11526, %r11525;
	bra.uni 	BB1_230;

BB1_217:
	setp.eq.s32	%p183, %r3097, 1;
	@%p183 bra 	BB1_218;
	bra.uni 	BB1_234;

BB1_218:
	and.b32  	%r11530, %r11530, %r176;
	mov.u32 	%r11529, 0;
	bra.uni 	BB1_234;

BB1_224:
	setp.eq.s32	%p178, %r3097, 5;
	@%p178 bra 	BB1_225;
	bra.uni 	BB1_234;

BB1_225:
	and.b32  	%r11526, %r11526, %r176;
	mov.u32 	%r11525, 0;
	bra.uni 	BB1_230;

BB1_220:
	setp.eq.s32	%p181, %r3097, 3;
	@%p181 bra 	BB1_221;
	bra.uni 	BB1_234;

BB1_221:
	and.b32  	%r11532, %r11532, %r176;
	mov.u32 	%r11529, 0;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	bra.uni 	BB1_234;

BB1_227:
	setp.ne.s32	%p176, %r3097, 7;
	@%p176 bra 	BB1_234;

	and.b32  	%r11528, %r11528, %r176;
	mov.u32 	%r11525, 0;
	mov.u32 	%r11526, %r11525;
	mov.u32 	%r11527, %r11525;

BB1_230:
	mov.u32 	%r11529, %r11525;
	mov.u32 	%r11530, %r11525;
	mov.u32 	%r11531, %r11525;
	mov.u32 	%r11532, %r11525;

BB1_234:
	or.b32  	%r11686, %r11529, %r34;
	or.b32  	%r11687, %r11530, %r33;
	or.b32  	%r11688, %r11531, %r32;
	or.b32  	%r11689, %r11532, %r31;
	or.b32  	%r11685, %r11525, %r35;
	or.b32  	%r11684, %r11526, %r36;
	or.b32  	%r11683, %r11527, %r37;
	or.b32  	%r11682, %r11528, %r38;
	bra.uni 	BB1_1547;

BB1_288:
	setp.eq.s32	%p219, %r40, 19;
	@%p219 bra 	BB1_289;
	bra.uni 	BB1_258;

BB1_289:
	mov.u32 	%r3310, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r32, %r31, %r3310;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r33, %r32, %r3310;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r34, %r33, %r3310;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11553, %r34, %r3310;
	// inline asm

BB1_321:
	mov.u32 	%r11554, %r11553;
	mov.u32 	%r11555, %r11553;
	mov.u32 	%r34, %r11553;
	bra.uni 	BB1_334;

BB1_272:
	setp.eq.s32	%p231, %r40, 11;
	@%p231 bra 	BB1_273;
	bra.uni 	BB1_258;

BB1_273:
	mov.u32 	%r3454, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r3454;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r31, %r35, %r3454;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r32, %r31, %r3454;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r33, %r32, %r3454;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3447, %r34, %r33, %r3454;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r11555, %r11553, %r34, %r3454;
	// inline asm
	mov.u32 	%r11554, %r11553;
	mov.u32 	%r34, %r3447;
	bra.uni 	BB1_334;

BB1_303:
	setp.eq.s32	%p208, %r40, 27;
	@%p208 bra 	BB1_304;
	bra.uni 	BB1_258;

BB1_304:
	mov.u32 	%r3198, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r34, %r33, %r3198;
	// inline asm
	mov.u32 	%r36, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r34, %r3198;
	// inline asm

BB1_315:
	mov.u32 	%r35, %r36;
	mov.u32 	%r11553, %r36;
	mov.u32 	%r11554, %r36;
	mov.u32 	%r11555, %r36;
	mov.u32 	%r34, %r36;
	bra.uni 	BB1_334;

BB1_264:
	setp.eq.s32	%p237, %r40, 7;
	@%p237 bra 	BB1_265;
	bra.uni 	BB1_258;

BB1_265:
	mov.u32 	%r3538, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r31, %r35, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r32, %r31, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3527, %r33, %r32, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11555, %r34, %r33, %r3538;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r11554, %r11553, %r34, %r3538;
	// inline asm
	mov.u32 	%r34, %r3527;
	bra.uni 	BB1_334;

BB1_295:
	setp.eq.s32	%p214, %r40, 23;
	@%p214 bra 	BB1_296;
	bra.uni 	BB1_258;

BB1_296:
	mov.u32 	%r3250, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r33, %r32, %r3250;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r34, %r33, %r3250;
	// inline asm
	mov.u32 	%r35, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r34, %r3250;
	// inline asm

BB1_318:
	mov.u32 	%r11553, %r35;
	mov.u32 	%r11554, %r35;
	mov.u32 	%r11555, %r35;
	mov.u32 	%r34, %r35;
	bra.uni 	BB1_334;

BB1_279:
	setp.eq.s32	%p226, %r40, 15;
	@%p226 bra 	BB1_280;
	bra.uni 	BB1_258;

BB1_280:
	mov.u32 	%r3378, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r31, %r35, %r3378;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r32, %r31, %r3378;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r33, %r32, %r3378;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r34, %r33, %r3378;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r34, %r11553, %r34, %r3378;
	// inline asm

BB1_324:
	mov.u32 	%r11554, %r11553;
	mov.u32 	%r11555, %r11553;
	bra.uni 	BB1_334;

BB1_310:
	setp.ne.s32	%p203, %r40, 30;
	@%p203 bra 	BB1_258;

	mov.u32 	%r37, 0;
	mov.u32 	%r3165, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r34, %r3165;
	// inline asm

BB1_333:
	mov.u32 	%r36, %r37;
	mov.u32 	%r35, %r37;
	mov.u32 	%r11553, %r37;
	mov.u32 	%r11554, %r37;
	mov.u32 	%r11555, %r37;
	mov.u32 	%r34, %r37;
	bra.uni 	BB1_334;

BB1_258:
	mov.u32 	%r11553, %r34;
	mov.u32 	%r11554, %r33;
	mov.u32 	%r11555, %r32;
	mov.u32 	%r34, %r31;

BB1_334:
	or.b32  	%r11686, %r11553, %r11545;
	or.b32  	%r11687, %r11554, %r11546;
	or.b32  	%r11688, %r11555, %r11547;
	or.b32  	%r11689, %r34, %r11548;
	or.b32  	%r11685, %r35, %r11541;
	or.b32  	%r11684, %r36, %r11542;
	or.b32  	%r11683, %r37, %r11543;
	or.b32  	%r11682, %r38, %r11544;
	bra.uni 	BB1_1547;

BB1_1311:
	setp.eq.s32	%p934, %r6663, 1;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p934 bra 	BB1_1312;
	bra.uni 	BB1_1390;

BB1_1312:
	mov.u32 	%r7208, 24;
	// inline asm
	shf.r.wrap.b32 %r11635, %r37, %r38, %r7208;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r36, %r37, %r7208;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r35, %r36, %r7208;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r31, %r35, %r7208;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11639, %r32, %r31, %r7208;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11638, %r33, %r32, %r7208;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11637, %r34, %r33, %r7208;
	// inline asm
	mov.u32 	%r7206, 0;
	// inline asm
	shf.r.wrap.b32 %r11636, %r7206, %r34, %r7208;
	// inline asm
	bra.uni 	BB1_1390;

BB1_1343:
	setp.eq.s32	%p911, %r6663, 17;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p911 bra 	BB1_1344;
	bra.uni 	BB1_1390;

BB1_1344:
	mov.u32 	%r6864, 24;
	// inline asm
	shf.r.wrap.b32 %r11635, %r32, %r31, %r6864;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r33, %r32, %r6864;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r34, %r33, %r6864;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11632, %r11636, %r34, %r6864;
	// inline asm
	bra.uni 	BB1_1348;

BB1_1326:
	setp.eq.s32	%p923, %r6663, 9;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p923 bra 	BB1_1327;
	bra.uni 	BB1_1390;

BB1_1327:
	mov.u32 	%r7020, 24;
	// inline asm
	shf.r.wrap.b32 %r11635, %r35, %r36, %r7020;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r31, %r35, %r7020;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r32, %r31, %r7020;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r33, %r32, %r7020;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11639, %r34, %r33, %r7020;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11638, %r11636, %r34, %r7020;
	// inline asm
	mov.u32 	%r11637, %r11636;
	bra.uni 	BB1_1390;

BB1_1359:
	setp.eq.s32	%p900, %r6663, 25;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p900 bra 	BB1_1360;
	bra.uni 	BB1_1390;

BB1_1360:
	mov.u32 	%r6740, 24;
	// inline asm
	shf.r.wrap.b32 %r11635, %r34, %r33, %r6740;
	// inline asm
	mov.u32 	%r11632, 0;
	// inline asm
	shf.r.wrap.b32 %r11634, %r11632, %r34, %r6740;
	// inline asm
	bra.uni 	BB1_1364;

BB1_1318:
	setp.eq.s32	%p929, %r6663, 5;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p929 bra 	BB1_1319;
	bra.uni 	BB1_1390;

BB1_1319:
	mov.u32 	%r7110, 24;
	// inline asm
	shf.r.wrap.b32 %r11635, %r36, %r37, %r7110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r35, %r36, %r7110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r31, %r35, %r7110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r32, %r31, %r7110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11639, %r33, %r32, %r7110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11638, %r34, %r33, %r7110;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11637, %r11636, %r34, %r7110;
	// inline asm
	bra.uni 	BB1_1390;

BB1_1351:
	setp.eq.s32	%p906, %r6663, 21;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p906 bra 	BB1_1352;
	bra.uni 	BB1_1390;

BB1_1352:
	mov.u32 	%r6798, 24;
	// inline asm
	shf.r.wrap.b32 %r11635, %r33, %r32, %r6798;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r34, %r33, %r6798;
	// inline asm
	mov.u32 	%r11632, 0;
	// inline asm
	shf.r.wrap.b32 %r11633, %r11632, %r34, %r6798;
	// inline asm
	bra.uni 	BB1_1365;

BB1_1333:
	setp.eq.s32	%p918, %r6663, 13;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p918 bra 	BB1_1334;
	bra.uni 	BB1_1390;

BB1_1334:
	mov.u32 	%r6938, 24;
	// inline asm
	shf.r.wrap.b32 %r11635, %r31, %r35, %r6938;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r32, %r31, %r6938;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r33, %r32, %r6938;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r34, %r33, %r6938;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11639, %r11636, %r34, %r6938;
	// inline asm
	bra.uni 	BB1_1338;

BB1_1368:
	setp.eq.s32	%p895, %r6663, 29;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p895 bra 	BB1_1369;
	bra.uni 	BB1_1390;

BB1_1369:
	mov.u32 	%r11632, 0;
	mov.u32 	%r6690, 24;
	// inline asm
	shf.r.wrap.b32 %r11635, %r11632, %r34, %r6690;
	// inline asm
	bra.uni 	BB1_1373;

BB1_1314:
	setp.eq.s32	%p932, %r6663, 3;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p932 bra 	BB1_1315;
	bra.uni 	BB1_1390;

BB1_1315:
	mov.u32 	%r7144, 8;
	// inline asm
	shf.r.wrap.b32 %r11635, %r37, %r38, %r7144;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r36, %r37, %r7144;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r35, %r36, %r7144;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r31, %r35, %r7144;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11639, %r32, %r31, %r7144;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11638, %r33, %r32, %r7144;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11637, %r34, %r33, %r7144;
	// inline asm
	mov.u32 	%r7142, 0;
	// inline asm
	shf.r.wrap.b32 %r11636, %r7142, %r34, %r7144;
	// inline asm
	bra.uni 	BB1_1390;

BB1_1346:
	setp.eq.s32	%p909, %r6663, 19;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p909 bra 	BB1_1347;
	bra.uni 	BB1_1390;

BB1_1347:
	mov.u32 	%r6824, 8;
	// inline asm
	shf.r.wrap.b32 %r11635, %r32, %r31, %r6824;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r33, %r32, %r6824;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r34, %r33, %r6824;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11632, %r11636, %r34, %r6824;
	// inline asm

BB1_1348:
	mov.u32 	%r11637, %r11636;
	mov.u32 	%r11638, %r11636;
	mov.u32 	%r11639, %r11636;
	bra.uni 	BB1_1390;

BB1_1329:
	setp.eq.s32	%p921, %r6663, 11;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p921 bra 	BB1_1330;
	bra.uni 	BB1_1390;

BB1_1330:
	mov.u32 	%r6968, 8;
	// inline asm
	shf.r.wrap.b32 %r11635, %r35, %r36, %r6968;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r31, %r35, %r6968;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r32, %r31, %r6968;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r33, %r32, %r6968;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11639, %r34, %r33, %r6968;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11638, %r11636, %r34, %r6968;
	// inline asm
	mov.u32 	%r11637, %r11636;
	bra.uni 	BB1_1390;

BB1_1362:
	setp.eq.s32	%p898, %r6663, 27;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p898 bra 	BB1_1363;
	bra.uni 	BB1_1390;

BB1_1363:
	mov.u32 	%r6712, 8;
	// inline asm
	shf.r.wrap.b32 %r11635, %r34, %r33, %r6712;
	// inline asm
	mov.u32 	%r11632, 0;
	// inline asm
	shf.r.wrap.b32 %r11634, %r11632, %r34, %r6712;
	// inline asm

BB1_1364:
	mov.u32 	%r11633, %r11632;
	bra.uni 	BB1_1365;

BB1_1321:
	setp.eq.s32	%p927, %r6663, 7;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p927 bra 	BB1_1322;
	bra.uni 	BB1_1390;

BB1_1322:
	mov.u32 	%r7052, 8;
	// inline asm
	shf.r.wrap.b32 %r11635, %r36, %r37, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r35, %r36, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r31, %r35, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r32, %r31, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11639, %r33, %r32, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11638, %r34, %r33, %r7052;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11637, %r11636, %r34, %r7052;
	// inline asm
	bra.uni 	BB1_1390;

BB1_1354:
	setp.eq.s32	%p904, %r6663, 23;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p904 bra 	BB1_1355;
	bra.uni 	BB1_1390;

BB1_1355:
	mov.u32 	%r6764, 8;
	// inline asm
	shf.r.wrap.b32 %r11635, %r33, %r32, %r6764;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r34, %r33, %r6764;
	// inline asm
	mov.u32 	%r11632, 0;
	// inline asm
	shf.r.wrap.b32 %r11633, %r11632, %r34, %r6764;
	// inline asm
	bra.uni 	BB1_1365;

BB1_1336:
	setp.eq.s32	%p916, %r6663, 15;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p916 bra 	BB1_1337;
	bra.uni 	BB1_1390;

BB1_1337:
	mov.u32 	%r6892, 8;
	// inline asm
	shf.r.wrap.b32 %r11635, %r31, %r35, %r6892;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r32, %r31, %r6892;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r33, %r32, %r6892;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r34, %r33, %r6892;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11639, %r11636, %r34, %r6892;
	// inline asm

BB1_1338:
	mov.u32 	%r11637, %r11636;
	mov.u32 	%r11638, %r11636;
	bra.uni 	BB1_1390;

BB1_1371:
	setp.ne.s32	%p893, %r6663, 31;
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r11640;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	@%p893 bra 	BB1_1390;

	mov.u32 	%r11632, 0;
	mov.u32 	%r6668, 8;
	// inline asm
	shf.r.wrap.b32 %r11635, %r11632, %r34, %r6668;
	// inline asm

BB1_1373:
	mov.u32 	%r11633, %r11632;
	mov.u32 	%r11634, %r11632;

BB1_1365:
	mov.u32 	%r11636, %r11632;
	mov.u32 	%r11637, %r11632;
	mov.u32 	%r11638, %r11632;
	mov.u32 	%r11639, %r11632;

BB1_1390:
	// inline asm
	prmt.b32 %r7209, %r11635, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7211, %r11634, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7213, %r11633, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7215, %r11632, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7217, %r11639, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7219, %r11638, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7221, %r11637, 0, 0x0123;
	// inline asm
	and.b32  	%r7232, %r30, 3;
	mov.u32 	%r7233, 4;
	sub.s32 	%r7234, %r7233, %r7232;
	shl.b32 	%r7235, %r7234, 2;
	mov.u32 	%r7236, 1985229328;
	shr.u32 	%r7237, %r7236, %r7235;
	and.b32  	%r1430, %r7237, 65535;
	shr.u32 	%r7231, %r30, 2;
	setp.gt.s32	%p935, %r7231, 3;
	@%p935 bra 	BB1_1398;

	setp.gt.s32	%p941, %r7231, 1;
	@%p941 bra 	BB1_1395;

	setp.eq.s32	%p944, %r7231, 0;
	@%p944 bra 	BB1_1408;
	bra.uni 	BB1_1393;

BB1_1408:
	// inline asm
	prmt.b32 %r7378, %r11636, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11647, %r7221, %r7378, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11646, %r7219, %r7221, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11645, %r7217, %r7219, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11644, %r7215, %r7217, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11643, %r7213, %r7215, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11642, %r7211, %r7213, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11641, %r7209, %r7211, %r1430;
	// inline asm
	mov.u32 	%r7409, 0;
	// inline asm
	prmt.b32 %r11640, %r7409, %r7209, %r1430;
	// inline asm
	bra.uni 	BB1_1409;

BB1_1398:
	setp.gt.s32	%p936, %r7231, 5;
	@%p936 bra 	BB1_1402;

	setp.eq.s32	%p939, %r7231, 4;
	@%p939 bra 	BB1_1406;
	bra.uni 	BB1_1400;

BB1_1406:
	// inline asm
	prmt.b32 %r11647, %r7213, %r7215, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11646, %r7211, %r7213, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11645, %r7209, %r7211, %r1430;
	// inline asm
	mov.u32 	%r11640, 0;
	// inline asm
	prmt.b32 %r11644, %r11640, %r7209, %r1430;
	// inline asm
	mov.u32 	%r11641, %r11640;
	mov.u32 	%r11642, %r11640;
	mov.u32 	%r11643, %r11640;
	bra.uni 	BB1_1409;

BB1_1395:
	setp.eq.s32	%p942, %r7231, 2;
	@%p942 bra 	BB1_1407;
	bra.uni 	BB1_1396;

BB1_1407:
	// inline asm
	prmt.b32 %r11647, %r7217, %r7219, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11646, %r7215, %r7217, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11645, %r7213, %r7215, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11644, %r7211, %r7213, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11643, %r7209, %r7211, %r1430;
	// inline asm
	mov.u32 	%r11640, 0;
	// inline asm
	prmt.b32 %r11642, %r11640, %r7209, %r1430;
	// inline asm
	mov.u32 	%r11641, %r11640;
	bra.uni 	BB1_1409;

BB1_1402:
	setp.eq.s32	%p937, %r7231, 6;
	@%p937 bra 	BB1_1405;
	bra.uni 	BB1_1403;

BB1_1405:
	// inline asm
	prmt.b32 %r11647, %r7209, %r7211, %r1430;
	// inline asm
	mov.u32 	%r11640, 0;
	// inline asm
	prmt.b32 %r11646, %r11640, %r7209, %r1430;
	// inline asm
	mov.u32 	%r11641, %r11640;
	mov.u32 	%r11642, %r11640;
	mov.u32 	%r11643, %r11640;
	mov.u32 	%r11644, %r11640;
	mov.u32 	%r11645, %r11640;
	bra.uni 	BB1_1409;

BB1_1393:
	setp.eq.s32	%p945, %r7231, 1;
	mov.u32 	%r11641, %r11640;
	mov.u32 	%r11642, %r11640;
	mov.u32 	%r11643, %r11640;
	mov.u32 	%r11644, %r11640;
	mov.u32 	%r11645, %r11640;
	mov.u32 	%r11646, %r11640;
	mov.u32 	%r11647, %r11640;
	@%p945 bra 	BB1_1394;
	bra.uni 	BB1_1409;

BB1_1394:
	// inline asm
	prmt.b32 %r11647, %r7219, %r7221, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11646, %r7217, %r7219, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11645, %r7215, %r7217, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11644, %r7213, %r7215, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11643, %r7211, %r7213, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11642, %r7209, %r7211, %r1430;
	// inline asm
	mov.u32 	%r11640, 0;
	// inline asm
	prmt.b32 %r11641, %r11640, %r7209, %r1430;
	// inline asm
	bra.uni 	BB1_1409;

BB1_1400:
	setp.eq.s32	%p940, %r7231, 5;
	mov.u32 	%r11641, %r11640;
	mov.u32 	%r11642, %r11640;
	mov.u32 	%r11643, %r11640;
	mov.u32 	%r11644, %r11640;
	mov.u32 	%r11645, %r11640;
	mov.u32 	%r11646, %r11640;
	mov.u32 	%r11647, %r11640;
	@%p940 bra 	BB1_1401;
	bra.uni 	BB1_1409;

BB1_1401:
	// inline asm
	prmt.b32 %r11647, %r7211, %r7213, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11646, %r7209, %r7211, %r1430;
	// inline asm
	mov.u32 	%r11640, 0;
	// inline asm
	prmt.b32 %r11645, %r11640, %r7209, %r1430;
	// inline asm
	mov.u32 	%r11641, %r11640;
	mov.u32 	%r11642, %r11640;
	mov.u32 	%r11643, %r11640;
	mov.u32 	%r11644, %r11640;
	bra.uni 	BB1_1409;

BB1_1396:
	setp.eq.s32	%p943, %r7231, 3;
	mov.u32 	%r11641, %r11640;
	mov.u32 	%r11642, %r11640;
	mov.u32 	%r11643, %r11640;
	mov.u32 	%r11644, %r11640;
	mov.u32 	%r11645, %r11640;
	mov.u32 	%r11646, %r11640;
	mov.u32 	%r11647, %r11640;
	@%p943 bra 	BB1_1397;
	bra.uni 	BB1_1409;

BB1_1397:
	// inline asm
	prmt.b32 %r11647, %r7215, %r7217, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11646, %r7213, %r7215, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11645, %r7211, %r7213, %r1430;
	// inline asm
	// inline asm
	prmt.b32 %r11644, %r7209, %r7211, %r1430;
	// inline asm
	mov.u32 	%r11640, 0;
	// inline asm
	prmt.b32 %r11643, %r11640, %r7209, %r1430;
	// inline asm
	mov.u32 	%r11641, %r11640;
	mov.u32 	%r11642, %r11640;
	bra.uni 	BB1_1409;

BB1_1403:
	setp.ne.s32	%p938, %r7231, 7;
	mov.u32 	%r11641, %r11640;
	mov.u32 	%r11642, %r11640;
	mov.u32 	%r11643, %r11640;
	mov.u32 	%r11644, %r11640;
	mov.u32 	%r11645, %r11640;
	mov.u32 	%r11646, %r11640;
	mov.u32 	%r11647, %r11640;
	@%p938 bra 	BB1_1409;

	mov.u32 	%r11640, 0;
	// inline asm
	prmt.b32 %r11647, %r11640, %r7209, %r1430;
	// inline asm
	mov.u32 	%r11641, %r11640;
	mov.u32 	%r11642, %r11640;
	mov.u32 	%r11643, %r11640;
	mov.u32 	%r11644, %r11640;
	mov.u32 	%r11645, %r11640;
	mov.u32 	%r11646, %r11640;

BB1_1409:
	or.b32  	%r11686, %r11640, %r34;
	or.b32  	%r11687, %r11641, %r33;
	or.b32  	%r11688, %r11642, %r32;
	or.b32  	%r11689, %r11643, %r31;
	or.b32  	%r11685, %r11644, %r35;
	or.b32  	%r11684, %r11645, %r36;
	or.b32  	%r11683, %r11646, %r37;
	or.b32  	%r11682, %r11647, %r38;
	bra.uni 	BB1_1547;

BB1_4:
	mov.u32 	%r38, %r11682;
	mov.u32 	%r37, %r11683;
	mov.u32 	%r36, %r11684;
	mov.u32 	%r35, %r11685;
	mov.u32 	%r34, %r11686;
	mov.u32 	%r33, %r11687;
	mov.u32 	%r32, %r11688;
	mov.u32 	%r31, %r11689;
	mov.u32 	%r30, %r11690;
	shr.u32 	%r39, %r11514, 8;
	bfe.u32 	%r40, %r11514, 8, 8;
	shr.u32 	%r41, %r11514, 16;
	bfe.u32 	%r42, %r11514, 16, 8;
	and.b32  	%r1980, %r11514, 255;
	setp.gt.s32	%p4, %r1980, 93;
	@%p4 bra 	BB1_72;

	setp.gt.s32	%p32, %r1980, 68;
	@%p32 bra 	BB1_38;

	setp.gt.s32	%p46, %r1980, 44;
	@%p46 bra 	BB1_22;

	setp.gt.s32	%p53, %r1980, 41;
	@%p53 bra 	BB1_18;

	setp.eq.s32	%p57, %r1980, 36;
	@%p57 bra 	BB1_1309;
	bra.uni 	BB1_9;

BB1_1309:
	add.s32 	%r11690, %r30, 1;
	setp.gt.u32	%p878, %r11690, 31;
	@%p878 bra 	BB1_778;

	and.b32  	%r6643, %r30, 3;
	shl.b32 	%r6644, %r6643, 3;
	shl.b32 	%r6645, %r40, %r6644;
	setp.lt.u32	%p879, %r30, 4;
	selp.b32	%r6646, %r6645, 0, %p879;
	or.b32  	%r11686, %r6646, %r34;
	and.b32  	%r6647, %r30, -4;
	setp.eq.s32	%p880, %r6647, 4;
	selp.b32	%r6648, %r6645, 0, %p880;
	or.b32  	%r11687, %r6648, %r33;
	setp.eq.s32	%p881, %r6647, 8;
	selp.b32	%r6649, %r6645, 0, %p881;
	or.b32  	%r11688, %r6649, %r32;
	setp.eq.s32	%p882, %r6647, 12;
	selp.b32	%r6650, %r6645, 0, %p882;
	or.b32  	%r11689, %r6650, %r31;
	setp.eq.s32	%p883, %r6647, 16;
	selp.b32	%r6651, %r6645, 0, %p883;
	or.b32  	%r11685, %r6651, %r35;
	setp.eq.s32	%p884, %r6647, 20;
	selp.b32	%r6652, %r6645, 0, %p884;
	or.b32  	%r11684, %r6652, %r36;
	setp.eq.s32	%p885, %r6647, 24;
	selp.b32	%r6653, %r6645, 0, %p885;
	or.b32  	%r11683, %r6653, %r37;
	setp.gt.u32	%p886, %r30, 27;
	selp.b32	%r6654, %r6645, 0, %p886;
	or.b32  	%r11682, %r6654, %r38;
	bra.uni 	BB1_1547;

BB1_72:
	setp.gt.s32	%p5, %r1980, 112;
	@%p5 bra 	BB1_101;

	setp.gt.s32	%p19, %r1980, 104;
	@%p19 bra 	BB1_88;

	setp.gt.s32	%p26, %r1980, 99;
	@%p26 bra 	BB1_78;

	setp.eq.s32	%p30, %r1980, 94;
	@%p30 bra 	BB1_1307;
	bra.uni 	BB1_76;

BB1_1307:
	add.s32 	%r11690, %r30, 1;
	setp.gt.u32	%p877, %r11690, 31;
	@%p877 bra 	BB1_778;

	mov.u32 	%r6642, 24;
	// inline asm
	shf.r.wrap.b32 %r11682, %r37, %r38, %r6642;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r36, %r37, %r6642;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r35, %r36, %r6642;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r31, %r35, %r6642;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r32, %r31, %r6642;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r33, %r32, %r6642;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r34, %r33, %r6642;
	// inline asm
	mov.u32 	%r6640, 0;
	// inline asm
	shf.r.wrap.b32 %r6639, %r6640, %r34, %r6642;
	// inline asm
	or.b32  	%r11686, %r6639, %r40;
	bra.uni 	BB1_1547;

BB1_38:
	setp.gt.s32	%p33, %r1980, 83;
	@%p33 bra 	BB1_57;

	setp.gt.s32	%p40, %r1980, 75;
	@%p40 bra 	BB1_49;

	setp.eq.s32	%p44, %r1980, 69;
	@%p44 bra 	BB1_134;
	bra.uni 	BB1_41;

BB1_134:
	and.b32  	%r2013, %r34, 1077952576;
	shr.u32 	%r2014, %r2013, 1;
	and.b32  	%r2015, %r34, -2139062144;
	shr.u32 	%r2016, %r2015, 2;
	not.b32 	%r2017, %r2016;
	and.b32  	%r2018, %r2014, %r2017;
	and.b32  	%r2019, %r34, 522133279;
	add.s32 	%r2020, %r2019, 522133279;
	mov.u32 	%r2021, -84215046;
	sub.s32 	%r2022, %r2021, %r2019;
	and.b32  	%r2023, %r2018, %r2022;
	and.b32  	%r2024, %r2023, %r2020;
	or.b32  	%r2025, %r2024, %r34;
	and.b32  	%r2026, %r33, 1077952576;
	shr.u32 	%r2027, %r2026, 1;
	and.b32  	%r2028, %r33, -2139062144;
	shr.u32 	%r2029, %r2028, 2;
	not.b32 	%r2030, %r2029;
	and.b32  	%r2031, %r2027, %r2030;
	and.b32  	%r2032, %r33, 522133279;
	add.s32 	%r2033, %r2032, 522133279;
	sub.s32 	%r2034, %r2021, %r2032;
	and.b32  	%r2035, %r2031, %r2034;
	and.b32  	%r2036, %r2035, %r2033;
	or.b32  	%r2037, %r2036, %r33;
	and.b32  	%r2038, %r32, 1077952576;
	shr.u32 	%r2039, %r2038, 1;
	and.b32  	%r2040, %r32, -2139062144;
	shr.u32 	%r2041, %r2040, 2;
	not.b32 	%r2042, %r2041;
	and.b32  	%r2043, %r2039, %r2042;
	and.b32  	%r2044, %r32, 522133279;
	add.s32 	%r2045, %r2044, 522133279;
	sub.s32 	%r2046, %r2021, %r2044;
	and.b32  	%r2047, %r2043, %r2046;
	and.b32  	%r2048, %r2047, %r2045;
	or.b32  	%r2049, %r2048, %r32;
	and.b32  	%r2050, %r31, 1077952576;
	shr.u32 	%r2051, %r2050, 1;
	and.b32  	%r2052, %r31, -2139062144;
	shr.u32 	%r2053, %r2052, 2;
	not.b32 	%r2054, %r2053;
	and.b32  	%r2055, %r2051, %r2054;
	and.b32  	%r2056, %r31, 522133279;
	add.s32 	%r2057, %r2056, 522133279;
	sub.s32 	%r2058, %r2021, %r2056;
	and.b32  	%r2059, %r2055, %r2058;
	and.b32  	%r2060, %r2059, %r2057;
	or.b32  	%r2061, %r2060, %r31;
	and.b32  	%r2062, %r35, 1077952576;
	shr.u32 	%r2063, %r2062, 1;
	and.b32  	%r2064, %r35, -2139062144;
	shr.u32 	%r2065, %r2064, 2;
	not.b32 	%r2066, %r2065;
	and.b32  	%r2067, %r2063, %r2066;
	and.b32  	%r2068, %r35, 522133279;
	add.s32 	%r2069, %r2068, 522133279;
	sub.s32 	%r2070, %r2021, %r2068;
	and.b32  	%r2071, %r2067, %r2070;
	and.b32  	%r2072, %r2071, %r2069;
	or.b32  	%r2073, %r2072, %r35;
	and.b32  	%r2074, %r36, 1077952576;
	shr.u32 	%r2075, %r2074, 1;
	and.b32  	%r2076, %r36, -2139062144;
	shr.u32 	%r2077, %r2076, 2;
	not.b32 	%r2078, %r2077;
	and.b32  	%r2079, %r2075, %r2078;
	and.b32  	%r2080, %r36, 522133279;
	add.s32 	%r2081, %r2080, 522133279;
	sub.s32 	%r2082, %r2021, %r2080;
	and.b32  	%r2083, %r2079, %r2082;
	and.b32  	%r2084, %r2083, %r2081;
	or.b32  	%r2085, %r2084, %r36;
	and.b32  	%r2086, %r37, 1077952576;
	shr.u32 	%r2087, %r2086, 1;
	and.b32  	%r2088, %r37, -2139062144;
	shr.u32 	%r2089, %r2088, 2;
	not.b32 	%r2090, %r2089;
	and.b32  	%r2091, %r2087, %r2090;
	and.b32  	%r2092, %r37, 522133279;
	add.s32 	%r2093, %r2092, 522133279;
	sub.s32 	%r2094, %r2021, %r2092;
	and.b32  	%r2095, %r2091, %r2094;
	and.b32  	%r2096, %r2095, %r2093;
	or.b32  	%r2097, %r2096, %r37;
	and.b32  	%r2098, %r38, 1077952576;
	shr.u32 	%r2099, %r2098, 1;
	and.b32  	%r2100, %r38, -2139062144;
	shr.u32 	%r2101, %r2100, 2;
	not.b32 	%r2102, %r2101;
	and.b32  	%r2103, %r2099, %r2102;
	and.b32  	%r2104, %r38, 522133279;
	add.s32 	%r2105, %r2104, 522133279;
	sub.s32 	%r2106, %r2021, %r2104;
	and.b32  	%r2107, %r2103, %r2106;
	and.b32  	%r2108, %r2107, %r2105;
	or.b32  	%r2109, %r2108, %r38;
	mov.b32	{%rs10, %rs11}, %r2025;
	shr.u16 	%rs12, %rs11, 8;
	setp.eq.s16	%p59, %rs12, 32;
	and.b16  	%rs13, %rs11, 255;
	setp.eq.s16	%p60, %rs13, 32;
	shr.u16 	%rs14, %rs10, 8;
	setp.eq.s16	%p61, %rs14, 32;
	and.b16  	%rs15, %rs10, 255;
	setp.eq.s16	%p62, %rs15, 32;
	selp.b16	%rs16, -1, 0, %p62;
	selp.b16	%rs17, -1, 0, %p61;
	selp.b16	%rs18, -1, 0, %p60;
	selp.b16	%rs19, -1, 0, %p59;
	shr.u16 	%rs20, %rs17, 7;
	cvt.u32.u16	%r2110, %rs20;
	shr.u16 	%rs21, %rs16, 7;
	and.b16  	%rs22, %rs21, 255;
	cvt.u32.u16	%r2111, %rs22;
	prmt.b32 	%r2112, %r2110, %r2111, 30212;
	shr.u16 	%rs23, %rs19, 7;
	cvt.u32.u16	%r2113, %rs23;
	shr.u16 	%rs24, %rs18, 7;
	and.b16  	%rs25, %rs24, 255;
	cvt.u32.u16	%r2114, %rs25;
	prmt.b32 	%r2115, %r2113, %r2114, 30212;
	prmt.b32 	%r2006, %r2115, %r2112, 4180;
	mov.b32	{%rs26, %rs27}, %r2037;
	shr.u16 	%rs28, %rs27, 8;
	setp.eq.s16	%p63, %rs28, 32;
	and.b16  	%rs29, %rs27, 255;
	setp.eq.s16	%p64, %rs29, 32;
	shr.u16 	%rs30, %rs26, 8;
	setp.eq.s16	%p65, %rs30, 32;
	and.b16  	%rs31, %rs26, 255;
	setp.eq.s16	%p66, %rs31, 32;
	selp.b16	%rs32, -1, 0, %p66;
	selp.b16	%rs33, -1, 0, %p65;
	selp.b16	%rs34, -1, 0, %p64;
	selp.b16	%rs35, -1, 0, %p63;
	shr.u16 	%rs36, %rs33, 7;
	cvt.u32.u16	%r2116, %rs36;
	shr.u16 	%rs37, %rs32, 7;
	and.b16  	%rs38, %rs37, 255;
	cvt.u32.u16	%r2117, %rs38;
	prmt.b32 	%r2118, %r2116, %r2117, 30212;
	shr.u16 	%rs39, %rs35, 7;
	cvt.u32.u16	%r2119, %rs39;
	shr.u16 	%rs40, %rs34, 7;
	and.b16  	%rs41, %rs40, 255;
	cvt.u32.u16	%r2120, %rs41;
	prmt.b32 	%r2121, %r2119, %r2120, 30212;
	prmt.b32 	%r2002, %r2121, %r2118, 4180;
	mov.b32	{%rs42, %rs43}, %r2049;
	shr.u16 	%rs44, %rs43, 8;
	setp.eq.s16	%p67, %rs44, 32;
	and.b16  	%rs45, %rs43, 255;
	setp.eq.s16	%p68, %rs45, 32;
	shr.u16 	%rs46, %rs42, 8;
	setp.eq.s16	%p69, %rs46, 32;
	and.b16  	%rs47, %rs42, 255;
	setp.eq.s16	%p70, %rs47, 32;
	selp.b16	%rs48, -1, 0, %p70;
	selp.b16	%rs49, -1, 0, %p69;
	selp.b16	%rs50, -1, 0, %p68;
	selp.b16	%rs51, -1, 0, %p67;
	shr.u16 	%rs52, %rs49, 7;
	cvt.u32.u16	%r2122, %rs52;
	shr.u16 	%rs53, %rs48, 7;
	and.b16  	%rs54, %rs53, 255;
	cvt.u32.u16	%r2123, %rs54;
	prmt.b32 	%r2124, %r2122, %r2123, 30212;
	shr.u16 	%rs55, %rs51, 7;
	cvt.u32.u16	%r2125, %rs55;
	shr.u16 	%rs56, %rs50, 7;
	and.b16  	%rs57, %rs56, 255;
	cvt.u32.u16	%r2126, %rs57;
	prmt.b32 	%r2127, %r2125, %r2126, 30212;
	prmt.b32 	%r1998, %r2127, %r2124, 4180;
	mov.b32	{%rs58, %rs59}, %r2061;
	shr.u16 	%rs60, %rs59, 8;
	setp.eq.s16	%p71, %rs60, 32;
	and.b16  	%rs61, %rs59, 255;
	setp.eq.s16	%p72, %rs61, 32;
	shr.u16 	%rs62, %rs58, 8;
	setp.eq.s16	%p73, %rs62, 32;
	and.b16  	%rs63, %rs58, 255;
	setp.eq.s16	%p74, %rs63, 32;
	selp.b16	%rs64, -1, 0, %p74;
	selp.b16	%rs65, -1, 0, %p73;
	selp.b16	%rs66, -1, 0, %p72;
	selp.b16	%rs67, -1, 0, %p71;
	shr.u16 	%rs68, %rs65, 7;
	cvt.u32.u16	%r2128, %rs68;
	shr.u16 	%rs69, %rs64, 7;
	and.b16  	%rs70, %rs69, 255;
	cvt.u32.u16	%r2129, %rs70;
	prmt.b32 	%r2130, %r2128, %r2129, 30212;
	shr.u16 	%rs71, %rs67, 7;
	cvt.u32.u16	%r2131, %rs71;
	shr.u16 	%rs72, %rs66, 7;
	and.b16  	%rs73, %rs72, 255;
	cvt.u32.u16	%r2132, %rs73;
	prmt.b32 	%r2133, %r2131, %r2132, 30212;
	prmt.b32 	%r1994, %r2133, %r2130, 4180;
	mov.b32	{%rs74, %rs75}, %r2073;
	shr.u16 	%rs76, %rs75, 8;
	setp.eq.s16	%p75, %rs76, 32;
	and.b16  	%rs77, %rs75, 255;
	setp.eq.s16	%p76, %rs77, 32;
	shr.u16 	%rs78, %rs74, 8;
	setp.eq.s16	%p77, %rs78, 32;
	and.b16  	%rs79, %rs74, 255;
	setp.eq.s16	%p78, %rs79, 32;
	selp.b16	%rs80, -1, 0, %p78;
	selp.b16	%rs81, -1, 0, %p77;
	selp.b16	%rs82, -1, 0, %p76;
	selp.b16	%rs83, -1, 0, %p75;
	shr.u16 	%rs84, %rs81, 7;
	cvt.u32.u16	%r2134, %rs84;
	shr.u16 	%rs85, %rs80, 7;
	and.b16  	%rs86, %rs85, 255;
	cvt.u32.u16	%r2135, %rs86;
	prmt.b32 	%r2136, %r2134, %r2135, 30212;
	shr.u16 	%rs87, %rs83, 7;
	cvt.u32.u16	%r2137, %rs87;
	shr.u16 	%rs88, %rs82, 7;
	and.b16  	%rs89, %rs88, 255;
	cvt.u32.u16	%r2138, %rs89;
	prmt.b32 	%r2139, %r2137, %r2138, 30212;
	prmt.b32 	%r1990, %r2139, %r2136, 4180;
	mov.b32	{%rs90, %rs91}, %r2085;
	shr.u16 	%rs92, %rs91, 8;
	setp.eq.s16	%p79, %rs92, 32;
	and.b16  	%rs93, %rs91, 255;
	setp.eq.s16	%p80, %rs93, 32;
	shr.u16 	%rs94, %rs90, 8;
	setp.eq.s16	%p81, %rs94, 32;
	and.b16  	%rs95, %rs90, 255;
	setp.eq.s16	%p82, %rs95, 32;
	selp.b16	%rs96, -1, 0, %p82;
	selp.b16	%rs97, -1, 0, %p81;
	selp.b16	%rs98, -1, 0, %p80;
	selp.b16	%rs99, -1, 0, %p79;
	shr.u16 	%rs100, %rs97, 7;
	cvt.u32.u16	%r2140, %rs100;
	shr.u16 	%rs101, %rs96, 7;
	and.b16  	%rs102, %rs101, 255;
	cvt.u32.u16	%r2141, %rs102;
	prmt.b32 	%r2142, %r2140, %r2141, 30212;
	shr.u16 	%rs103, %rs99, 7;
	cvt.u32.u16	%r2143, %rs103;
	shr.u16 	%rs104, %rs98, 7;
	and.b16  	%rs105, %rs104, 255;
	cvt.u32.u16	%r2144, %rs105;
	prmt.b32 	%r2145, %r2143, %r2144, 30212;
	prmt.b32 	%r1986, %r2145, %r2142, 4180;
	mov.b32	{%rs106, %rs107}, %r2097;
	shr.u16 	%rs108, %rs107, 8;
	setp.eq.s16	%p83, %rs108, 32;
	and.b16  	%rs109, %rs107, 255;
	setp.eq.s16	%p84, %rs109, 32;
	shr.u16 	%rs110, %rs106, 8;
	setp.eq.s16	%p85, %rs110, 32;
	and.b16  	%rs111, %rs106, 255;
	setp.eq.s16	%p86, %rs111, 32;
	selp.b16	%rs112, -1, 0, %p86;
	selp.b16	%rs113, -1, 0, %p85;
	selp.b16	%rs114, -1, 0, %p84;
	selp.b16	%rs115, -1, 0, %p83;
	shr.u16 	%rs116, %rs113, 7;
	cvt.u32.u16	%r2146, %rs116;
	shr.u16 	%rs117, %rs112, 7;
	and.b16  	%rs118, %rs117, 255;
	cvt.u32.u16	%r2147, %rs118;
	prmt.b32 	%r2148, %r2146, %r2147, 30212;
	shr.u16 	%rs119, %rs115, 7;
	cvt.u32.u16	%r2149, %rs119;
	shr.u16 	%rs120, %rs114, 7;
	and.b16  	%rs121, %rs120, 255;
	cvt.u32.u16	%r2150, %rs121;
	prmt.b32 	%r2151, %r2149, %r2150, 30212;
	prmt.b32 	%r1982, %r2151, %r2148, 4180;
	mov.b32	{%rs122, %rs123}, %r2109;
	shr.u16 	%rs124, %rs123, 8;
	setp.eq.s16	%p87, %rs124, 32;
	and.b16  	%rs125, %rs123, 255;
	setp.eq.s16	%p88, %rs125, 32;
	shr.u16 	%rs126, %rs122, 8;
	setp.eq.s16	%p89, %rs126, 32;
	and.b16  	%rs127, %rs122, 255;
	setp.eq.s16	%p90, %rs127, 32;
	selp.b16	%rs128, -1, 0, %p90;
	selp.b16	%rs129, -1, 0, %p89;
	selp.b16	%rs130, -1, 0, %p88;
	selp.b16	%rs131, -1, 0, %p87;
	shr.u16 	%rs132, %rs129, 7;
	cvt.u32.u16	%r2152, %rs132;
	shr.u16 	%rs133, %rs128, 7;
	and.b16  	%rs134, %rs133, 255;
	cvt.u32.u16	%r2153, %rs134;
	prmt.b32 	%r2154, %r2152, %r2153, 30212;
	shr.u16 	%rs135, %rs131, 7;
	cvt.u32.u16	%r2155, %rs135;
	shr.u16 	%rs136, %rs130, 7;
	and.b16  	%rs137, %rs136, 255;
	cvt.u32.u16	%r2156, %rs137;
	prmt.b32 	%r2157, %r2155, %r2156, 30212;
	prmt.b32 	%r1983, %r2157, %r2154, 4180;
	mov.u32 	%r2012, 24;
	// inline asm
	shf.r.wrap.b32 %r1981, %r1982, %r1983, %r2012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1985, %r1986, %r1982, %r2012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1989, %r1990, %r1986, %r2012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1993, %r1994, %r1990, %r2012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1997, %r1998, %r1994, %r2012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2001, %r2002, %r1998, %r2012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2005, %r2006, %r2002, %r2012;
	// inline asm
	mov.u32 	%r2010, 0;
	// inline asm
	shf.r.wrap.b32 %r2009, %r2010, %r2006, %r2012;
	// inline asm
	or.b32  	%r2158, %r2009, 255;
	and.b32  	%r2159, %r2025, 1077952576;
	shr.u32 	%r2160, %r2159, 1;
	and.b32  	%r2161, %r2025, -2139062144;
	shr.u32 	%r2162, %r2161, 2;
	not.b32 	%r2163, %r2162;
	and.b32  	%r2164, %r2160, %r2163;
	and.b32  	%r2165, %r2025, 522133279;
	add.s32 	%r2166, %r2165, 522133279;
	sub.s32 	%r2167, %r2021, %r2165;
	and.b32  	%r2168, %r2164, %r2167;
	and.b32  	%r2169, %r2168, %r2166;
	and.b32  	%r2170, %r2169, %r2158;
	not.b32 	%r2171, %r2170;
	and.b32  	%r11686, %r2025, %r2171;
	and.b32  	%r2172, %r2037, 1077952576;
	shr.u32 	%r2173, %r2172, 1;
	and.b32  	%r2174, %r2037, -2139062144;
	shr.u32 	%r2175, %r2174, 2;
	not.b32 	%r2176, %r2175;
	and.b32  	%r2177, %r2173, %r2176;
	and.b32  	%r2178, %r2037, 522133279;
	add.s32 	%r2179, %r2178, 522133279;
	sub.s32 	%r2180, %r2021, %r2178;
	and.b32  	%r2181, %r2177, %r2180;
	and.b32  	%r2182, %r2181, %r2179;
	and.b32  	%r2183, %r2182, %r2005;
	not.b32 	%r2184, %r2183;
	and.b32  	%r11687, %r2037, %r2184;
	and.b32  	%r2185, %r2049, 1077952576;
	shr.u32 	%r2186, %r2185, 1;
	and.b32  	%r2187, %r2049, -2139062144;
	shr.u32 	%r2188, %r2187, 2;
	not.b32 	%r2189, %r2188;
	and.b32  	%r2190, %r2186, %r2189;
	and.b32  	%r2191, %r2049, 522133279;
	add.s32 	%r2192, %r2191, 522133279;
	sub.s32 	%r2193, %r2021, %r2191;
	and.b32  	%r2194, %r2190, %r2193;
	and.b32  	%r2195, %r2194, %r2192;
	and.b32  	%r2196, %r2195, %r2001;
	not.b32 	%r2197, %r2196;
	and.b32  	%r11688, %r2049, %r2197;
	and.b32  	%r2198, %r2061, 1077952576;
	shr.u32 	%r2199, %r2198, 1;
	and.b32  	%r2200, %r2061, -2139062144;
	shr.u32 	%r2201, %r2200, 2;
	not.b32 	%r2202, %r2201;
	and.b32  	%r2203, %r2199, %r2202;
	and.b32  	%r2204, %r2061, 522133279;
	add.s32 	%r2205, %r2204, 522133279;
	sub.s32 	%r2206, %r2021, %r2204;
	and.b32  	%r2207, %r2203, %r2206;
	and.b32  	%r2208, %r2207, %r2205;
	and.b32  	%r2209, %r2208, %r1997;
	not.b32 	%r2210, %r2209;
	and.b32  	%r11689, %r2061, %r2210;
	and.b32  	%r2211, %r2073, 1077952576;
	shr.u32 	%r2212, %r2211, 1;
	and.b32  	%r2213, %r2073, -2139062144;
	shr.u32 	%r2214, %r2213, 2;
	not.b32 	%r2215, %r2214;
	and.b32  	%r2216, %r2212, %r2215;
	and.b32  	%r2217, %r2073, 522133279;
	add.s32 	%r2218, %r2217, 522133279;
	sub.s32 	%r2219, %r2021, %r2217;
	and.b32  	%r2220, %r2216, %r2219;
	and.b32  	%r2221, %r2220, %r2218;
	and.b32  	%r2222, %r2221, %r1993;
	not.b32 	%r2223, %r2222;
	and.b32  	%r11685, %r2073, %r2223;
	and.b32  	%r2224, %r2085, 1077952576;
	shr.u32 	%r2225, %r2224, 1;
	and.b32  	%r2226, %r2085, -2139062144;
	shr.u32 	%r2227, %r2226, 2;
	not.b32 	%r2228, %r2227;
	and.b32  	%r2229, %r2225, %r2228;
	and.b32  	%r2230, %r2085, 522133279;
	add.s32 	%r2231, %r2230, 522133279;
	sub.s32 	%r2232, %r2021, %r2230;
	and.b32  	%r2233, %r2229, %r2232;
	and.b32  	%r2234, %r2233, %r2231;
	and.b32  	%r2235, %r2234, %r1989;
	not.b32 	%r2236, %r2235;
	and.b32  	%r11684, %r2085, %r2236;
	and.b32  	%r2237, %r2097, 1077952576;
	shr.u32 	%r2238, %r2237, 1;
	and.b32  	%r2239, %r2097, -2139062144;
	shr.u32 	%r2240, %r2239, 2;
	not.b32 	%r2241, %r2240;
	and.b32  	%r2242, %r2238, %r2241;
	and.b32  	%r2243, %r2097, 522133279;
	add.s32 	%r2244, %r2243, 522133279;
	sub.s32 	%r2245, %r2021, %r2243;
	and.b32  	%r2246, %r2242, %r2245;
	and.b32  	%r2247, %r2246, %r2244;
	and.b32  	%r2248, %r2247, %r1985;
	not.b32 	%r2249, %r2248;
	and.b32  	%r11683, %r2097, %r2249;
	and.b32  	%r2250, %r2109, 1077952576;
	shr.u32 	%r2251, %r2250, 1;
	and.b32  	%r2252, %r2109, -2139062144;
	shr.u32 	%r2253, %r2252, 2;
	not.b32 	%r2254, %r2253;
	and.b32  	%r2255, %r2251, %r2254;
	and.b32  	%r2256, %r2109, 522133279;
	add.s32 	%r2257, %r2256, 522133279;
	sub.s32 	%r2258, %r2021, %r2256;
	and.b32  	%r2259, %r2255, %r2258;
	and.b32  	%r2260, %r2259, %r2257;
	and.b32  	%r2261, %r2260, %r1981;
	not.b32 	%r2262, %r2261;
	and.b32  	%r11682, %r2109, %r2262;
	mov.u32 	%r11690, %r30;
	bra.uni 	BB1_1547;

BB1_101:
	setp.gt.s32	%p6, %r1980, 119;
	@%p6 bra 	BB1_116;

	setp.gt.s32	%p13, %r1980, 114;
	@%p13 bra 	BB1_112;

	setp.eq.s32	%p17, %r1980, 113;
	@%p17 bra 	BB1_777;
	bra.uni 	BB1_104;

BB1_777:
	setp.eq.s32	%p506, %r30, 0;
	add.s32 	%r11690, %r30, %r30;
	setp.gt.u32	%p507, %r11690, 31;
	or.pred  	%p508, %p506, %p507;
	@%p508 bra 	BB1_778;

	and.b32  	%r4216, %r34, 255;
	and.b32  	%r4217, %r34, 65280;
	prmt.b32 	%r4218, %r4217, %r4216, 8452;
	bfe.u32 	%r4219, %r34, 16, 8;
	and.b32  	%r4220, %r34, -16777216;
	shr.u32 	%r4221, %r4220, 8;
	or.b32  	%r4222, %r4219, %r4221;
	and.b32  	%r4223, %r33, 65280;
	and.b32  	%r4224, %r33, 255;
	prmt.b32 	%r4225, %r4223, %r4224, 8452;
	bfe.u32 	%r4226, %r33, 16, 8;
	and.b32  	%r4227, %r33, -16777216;
	shr.u32 	%r4228, %r4227, 8;
	or.b32  	%r4229, %r4226, %r4228;
	and.b32  	%r4230, %r32, 65280;
	and.b32  	%r4231, %r32, 255;
	prmt.b32 	%r4232, %r4230, %r4231, 8452;
	bfe.u32 	%r4233, %r32, 16, 8;
	and.b32  	%r4234, %r32, -16777216;
	shr.u32 	%r4235, %r4234, 8;
	or.b32  	%r4236, %r4233, %r4235;
	and.b32  	%r4237, %r31, 65280;
	and.b32  	%r4238, %r31, 255;
	prmt.b32 	%r4239, %r4237, %r4238, 8452;
	bfe.u32 	%r4240, %r31, 16, 8;
	and.b32  	%r4241, %r31, -16777216;
	shr.u32 	%r4242, %r4241, 8;
	or.b32  	%r4243, %r4240, %r4242;
	shl.b32 	%r4244, %r4218, 8;
	or.b32  	%r11686, %r4244, %r4218;
	shl.b32 	%r4245, %r4222, 8;
	or.b32  	%r11687, %r4245, %r4222;
	shl.b32 	%r4246, %r4225, 8;
	or.b32  	%r11688, %r4246, %r4225;
	shl.b32 	%r4247, %r4229, 8;
	or.b32  	%r11689, %r4247, %r4229;
	shl.b32 	%r4248, %r4232, 8;
	or.b32  	%r11685, %r4248, %r4232;
	shl.b32 	%r4249, %r4236, 8;
	or.b32  	%r11684, %r4249, %r4236;
	shl.b32 	%r4250, %r4239, 8;
	or.b32  	%r11683, %r4250, %r4239;
	shl.b32 	%r4251, %r4243, 8;
	or.b32  	%r11682, %r4251, %r4243;
	bra.uni 	BB1_1547;

BB1_22:
	setp.gt.s32	%p47, %r1980, 63;
	@%p47 bra 	BB1_30;

	setp.eq.s32	%p51, %r1980, 45;
	@%p51 bra 	BB1_369;
	bra.uni 	BB1_24;

BB1_369:
	setp.ge.u32	%p269, %r40, %r30;
	@%p269 bra 	BB1_10;

	and.b32  	%r3812, %r39, 3;
	shl.b32 	%r3813, %r3812, 3;
	mov.u32 	%r3814, 255;
	shl.b32 	%r377, %r3814, %r3813;
	not.b32 	%r378, %r377;
	and.b32  	%r379, %r377, 16843009;
	shr.u32 	%r3811, %r40, 2;
	setp.gt.s32	%p270, %r3811, 3;
	@%p270 bra 	BB1_378;

	setp.gt.s32	%p276, %r3811, 1;
	@%p276 bra 	BB1_375;

	setp.eq.s32	%p279, %r3811, 0;
	@%p279 bra 	BB1_388;
	bra.uni 	BB1_373;

BB1_388:
	and.b32  	%r3843, %r34, %r378;
	and.b32  	%r3844, %r377, %r34;
	sub.s32 	%r3845, %r3844, %r379;
	and.b32  	%r3846, %r3845, %r377;
	or.b32  	%r11686, %r3846, %r3843;
	bra.uni 	BB1_613;

BB1_88:
	setp.gt.s32	%p20, %r1980, 107;
	@%p20 bra 	BB1_93;

	setp.eq.s32	%p24, %r1980, 105;
	@%p24 bra 	BB1_1025;
	bra.uni 	BB1_90;

BB1_1025:
	setp.gt.u32	%p692, %r40, %r30;
	add.s32 	%r11690, %r30, 1;
	setp.gt.u32	%p693, %r11690, 31;
	or.pred  	%p694, %p692, %p693;
	@%p694 bra 	BB1_778;

	mov.u32 	%r5189, 24;
	// inline asm
	shf.r.wrap.b32 %r11682, %r37, %r38, %r5189;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r36, %r37, %r5189;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r35, %r36, %r5189;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r31, %r35, %r5189;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r32, %r31, %r5189;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r33, %r32, %r5189;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r34, %r33, %r5189;
	// inline asm
	and.b32  	%r5191, %r39, 3;
	shl.b32 	%r5192, %r5191, 3;
	shl.b32 	%r947, %r42, %r5192;
	mov.u32 	%r5193, 1;
	shl.b32 	%r5194, %r5193, %r5192;
	add.s32 	%r948, %r5194, -1;
	mov.u32 	%r5195, -256;
	shl.b32 	%r949, %r5195, %r5192;
	shr.u32 	%r5190, %r40, 2;
	setp.gt.s32	%p695, %r5190, 3;
	@%p695 bra 	BB1_1034;

	setp.gt.s32	%p701, %r5190, 1;
	@%p701 bra 	BB1_1031;

	setp.eq.s32	%p704, %r5190, 0;
	@%p704 bra 	BB1_1045;
	bra.uni 	BB1_1029;

BB1_1045:
	mov.u32 	%r5218, 0;
	// inline asm
	shf.r.wrap.b32 %r5217, %r5218, %r34, %r5189;
	// inline asm
	and.b32  	%r5221, %r948, %r34;
	or.b32  	%r5222, %r5221, %r947;
	and.b32  	%r5223, %r5217, %r949;
	or.b32  	%r11686, %r5222, %r5223;
	bra.uni 	BB1_1547;

BB1_57:
	setp.gt.s32	%p34, %r1980, 89;
	@%p34 bra 	BB1_67;

	setp.eq.s32	%p38, %r1980, 84;
	@%p38 bra 	BB1_1523;
	bra.uni 	BB1_59;

BB1_1523:
	setp.ge.u32	%p1018, %r40, %r30;
	@%p1018 bra 	BB1_778;

	and.b32  	%r8351, %r39, 3;
	shl.b32 	%r8352, %r8351, 3;
	mov.u32 	%r8353, 32;
	shl.b32 	%r1726, %r8353, %r8352;
	shr.u32 	%r8350, %r40, 2;
	setp.gt.s32	%p1019, %r8350, 3;
	@%p1019 bra 	BB1_1532;

	setp.gt.s32	%p1025, %r8350, 1;
	@%p1025 bra 	BB1_1529;

	setp.eq.s32	%p1028, %r8350, 0;
	@%p1028 bra 	BB1_1542;
	bra.uni 	BB1_1527;

BB1_1542:
	and.b32  	%r8445, %r34, 1077952576;
	shr.u32 	%r8446, %r8445, 1;
	and.b32  	%r8447, %r34, -2139062144;
	shr.u32 	%r8448, %r8447, 2;
	not.b32 	%r8449, %r8448;
	and.b32  	%r8450, %r8446, %r8449;
	and.b32  	%r8451, %r34, 522133279;
	add.s32 	%r8452, %r8451, 522133279;
	mov.u32 	%r8453, -84215046;
	sub.s32 	%r8454, %r8453, %r8451;
	and.b32  	%r8455, %r8450, %r8454;
	and.b32  	%r8456, %r8455, %r8452;
	and.b32  	%r8457, %r8456, %r1726;
	xor.b32  	%r11686, %r8457, %r34;
	bra.uni 	BB1_1024;

BB1_116:
	setp.gt.s32	%p7, %r1980, 121;
	@%p7 bra 	BB1_125;

	setp.eq.s32	%p11, %r1980, 120;
	@%p11 bra 	BB1_1158;
	bra.uni 	BB1_118;

BB1_1158:
	setp.ge.u32	%p767, %r40, %r30;
	add.s32 	%r5798, %r40, %r42;
	setp.gt.u32	%p768, %r5798, %r30;
	or.pred  	%p769, %p767, %p768;
	@%p769 bra 	BB1_778;

	setp.gt.s32	%p770, %r40, 15;
	@%p770 bra 	BB1_1188;

	setp.gt.s32	%p794, %r40, 7;
	@%p794 bra 	BB1_1173;

	setp.gt.s32	%p806, %r40, 3;
	@%p806 bra 	BB1_1166;

	setp.eq.s32	%p812, %r40, 1;
	@%p812 bra 	BB1_1237;

	setp.eq.s32	%p813, %r40, 2;
	@%p813 bra 	BB1_1236;
	bra.uni 	BB1_1164;

BB1_1236:
	mov.u32 	%r6299, 16;
	// inline asm
	shf.r.wrap.b32 %r11686, %r34, %r33, %r6299;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r33, %r32, %r6299;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r32, %r31, %r6299;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6280, %r31, %r35, %r6299;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r35, %r36, %r6299;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r36, %r37, %r6299;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r37, %r38, %r6299;
	// inline asm
	mov.u32 	%r6298, 0;
	// inline asm
	shf.r.wrap.b32 %r11682, %r38, %r6298, %r6299;
	// inline asm
	mov.u32 	%r38, %r6280;
	bra.uni 	BB1_1243;

BB1_18:
	setp.eq.s32	%p54, %r1980, 42;
	@%p54 bra 	BB1_444;

	setp.eq.s32	%p55, %r1980, 43;
	@%p55 bra 	BB1_389;
	bra.uni 	BB1_20;

BB1_389:
	setp.ge.u32	%p281, %r40, %r30;
	@%p281 bra 	BB1_10;

	and.b32  	%r3848, %r39, 3;
	shl.b32 	%r3849, %r3848, 3;
	mov.u32 	%r3850, 255;
	shl.b32 	%r388, %r3850, %r3849;
	not.b32 	%r389, %r388;
	and.b32  	%r390, %r388, 16843009;
	shr.u32 	%r3847, %r40, 2;
	setp.gt.s32	%p282, %r3847, 3;
	@%p282 bra 	BB1_398;

	setp.gt.s32	%p288, %r3847, 1;
	@%p288 bra 	BB1_395;

	setp.eq.s32	%p291, %r3847, 0;
	@%p291 bra 	BB1_408;
	bra.uni 	BB1_393;

BB1_408:
	and.b32  	%r3879, %r34, %r389;
	and.b32  	%r3880, %r388, %r34;
	add.s32 	%r3881, %r3880, %r390;
	and.b32  	%r3882, %r3881, %r388;
	or.b32  	%r11686, %r3882, %r3879;
	bra.uni 	BB1_613;

BB1_78:
	setp.eq.s32	%p27, %r1980, 100;
	@%p27 bra 	BB1_1426;

	setp.eq.s32	%p28, %r1980, 101;
	@%p28 bra 	BB1_135;
	bra.uni 	BB1_80;

BB1_135:
	and.b32  	%r2295, %r34, 1077952576;
	shr.u32 	%r2296, %r2295, 1;
	and.b32  	%r2297, %r34, -2139062144;
	shr.u32 	%r2298, %r2297, 2;
	not.b32 	%r2299, %r2298;
	and.b32  	%r2300, %r2296, %r2299;
	and.b32  	%r2301, %r34, 522133279;
	add.s32 	%r2302, %r2301, 522133279;
	mov.u32 	%r2303, -84215046;
	sub.s32 	%r2304, %r2303, %r2301;
	and.b32  	%r2305, %r2300, %r2304;
	and.b32  	%r2306, %r2305, %r2302;
	or.b32  	%r2307, %r2306, %r34;
	and.b32  	%r2308, %r33, 1077952576;
	shr.u32 	%r2309, %r2308, 1;
	and.b32  	%r2310, %r33, -2139062144;
	shr.u32 	%r2311, %r2310, 2;
	not.b32 	%r2312, %r2311;
	and.b32  	%r2313, %r2309, %r2312;
	and.b32  	%r2314, %r33, 522133279;
	add.s32 	%r2315, %r2314, 522133279;
	sub.s32 	%r2316, %r2303, %r2314;
	and.b32  	%r2317, %r2313, %r2316;
	and.b32  	%r2318, %r2317, %r2315;
	or.b32  	%r2319, %r2318, %r33;
	and.b32  	%r2320, %r32, 1077952576;
	shr.u32 	%r2321, %r2320, 1;
	and.b32  	%r2322, %r32, -2139062144;
	shr.u32 	%r2323, %r2322, 2;
	not.b32 	%r2324, %r2323;
	and.b32  	%r2325, %r2321, %r2324;
	and.b32  	%r2326, %r32, 522133279;
	add.s32 	%r2327, %r2326, 522133279;
	sub.s32 	%r2328, %r2303, %r2326;
	and.b32  	%r2329, %r2325, %r2328;
	and.b32  	%r2330, %r2329, %r2327;
	or.b32  	%r2331, %r2330, %r32;
	and.b32  	%r2332, %r31, 1077952576;
	shr.u32 	%r2333, %r2332, 1;
	and.b32  	%r2334, %r31, -2139062144;
	shr.u32 	%r2335, %r2334, 2;
	not.b32 	%r2336, %r2335;
	and.b32  	%r2337, %r2333, %r2336;
	and.b32  	%r2338, %r31, 522133279;
	add.s32 	%r2339, %r2338, 522133279;
	sub.s32 	%r2340, %r2303, %r2338;
	and.b32  	%r2341, %r2337, %r2340;
	and.b32  	%r2342, %r2341, %r2339;
	or.b32  	%r2343, %r2342, %r31;
	and.b32  	%r2344, %r35, 1077952576;
	shr.u32 	%r2345, %r2344, 1;
	and.b32  	%r2346, %r35, -2139062144;
	shr.u32 	%r2347, %r2346, 2;
	not.b32 	%r2348, %r2347;
	and.b32  	%r2349, %r2345, %r2348;
	and.b32  	%r2350, %r35, 522133279;
	add.s32 	%r2351, %r2350, 522133279;
	sub.s32 	%r2352, %r2303, %r2350;
	and.b32  	%r2353, %r2349, %r2352;
	and.b32  	%r2354, %r2353, %r2351;
	or.b32  	%r2355, %r2354, %r35;
	and.b32  	%r2356, %r36, 1077952576;
	shr.u32 	%r2357, %r2356, 1;
	and.b32  	%r2358, %r36, -2139062144;
	shr.u32 	%r2359, %r2358, 2;
	not.b32 	%r2360, %r2359;
	and.b32  	%r2361, %r2357, %r2360;
	and.b32  	%r2362, %r36, 522133279;
	add.s32 	%r2363, %r2362, 522133279;
	sub.s32 	%r2364, %r2303, %r2362;
	and.b32  	%r2365, %r2361, %r2364;
	and.b32  	%r2366, %r2365, %r2363;
	or.b32  	%r2367, %r2366, %r36;
	and.b32  	%r2368, %r37, 1077952576;
	shr.u32 	%r2369, %r2368, 1;
	and.b32  	%r2370, %r37, -2139062144;
	shr.u32 	%r2371, %r2370, 2;
	not.b32 	%r2372, %r2371;
	and.b32  	%r2373, %r2369, %r2372;
	and.b32  	%r2374, %r37, 522133279;
	add.s32 	%r2375, %r2374, 522133279;
	sub.s32 	%r2376, %r2303, %r2374;
	and.b32  	%r2377, %r2373, %r2376;
	and.b32  	%r2378, %r2377, %r2375;
	or.b32  	%r2379, %r2378, %r37;
	and.b32  	%r2380, %r38, 1077952576;
	shr.u32 	%r2381, %r2380, 1;
	and.b32  	%r2382, %r38, -2139062144;
	shr.u32 	%r2383, %r2382, 2;
	not.b32 	%r2384, %r2383;
	and.b32  	%r2385, %r2381, %r2384;
	and.b32  	%r2386, %r38, 522133279;
	add.s32 	%r2387, %r2386, 522133279;
	sub.s32 	%r2388, %r2303, %r2386;
	and.b32  	%r2389, %r2385, %r2388;
	and.b32  	%r2390, %r2389, %r2387;
	or.b32  	%r2391, %r2390, %r38;
	mov.b32	{%rs138, %rs139}, %r2307;
	shr.u16 	%rs140, %rs139, 8;
	cvt.u16.u32	%rs141, %r39;
	and.b16  	%rs142, %rs141, 255;
	setp.eq.s16	%p91, %rs140, %rs142;
	and.b16  	%rs143, %rs139, 255;
	setp.eq.s16	%p92, %rs143, %rs142;
	shr.u16 	%rs144, %rs138, 8;
	setp.eq.s16	%p93, %rs144, %rs142;
	and.b16  	%rs145, %rs138, 255;
	setp.eq.s16	%p94, %rs145, %rs142;
	selp.b16	%rs146, -1, 0, %p94;
	selp.b16	%rs147, -1, 0, %p93;
	selp.b16	%rs148, -1, 0, %p92;
	selp.b16	%rs149, -1, 0, %p91;
	shr.u16 	%rs150, %rs147, 7;
	cvt.u32.u16	%r2392, %rs150;
	shr.u16 	%rs151, %rs146, 7;
	and.b16  	%rs152, %rs151, 255;
	cvt.u32.u16	%r2393, %rs152;
	prmt.b32 	%r2394, %r2392, %r2393, 30212;
	shr.u16 	%rs153, %rs149, 7;
	cvt.u32.u16	%r2395, %rs153;
	shr.u16 	%rs154, %rs148, 7;
	and.b16  	%rs155, %rs154, 255;
	cvt.u32.u16	%r2396, %rs155;
	prmt.b32 	%r2397, %r2395, %r2396, 30212;
	prmt.b32 	%r2288, %r2397, %r2394, 4180;
	mov.b32	{%rs156, %rs157}, %r2319;
	shr.u16 	%rs158, %rs157, 8;
	setp.eq.s16	%p95, %rs158, %rs142;
	and.b16  	%rs159, %rs157, 255;
	setp.eq.s16	%p96, %rs159, %rs142;
	shr.u16 	%rs160, %rs156, 8;
	setp.eq.s16	%p97, %rs160, %rs142;
	and.b16  	%rs161, %rs156, 255;
	setp.eq.s16	%p98, %rs161, %rs142;
	selp.b16	%rs162, -1, 0, %p98;
	selp.b16	%rs163, -1, 0, %p97;
	selp.b16	%rs164, -1, 0, %p96;
	selp.b16	%rs165, -1, 0, %p95;
	shr.u16 	%rs166, %rs163, 7;
	cvt.u32.u16	%r2398, %rs166;
	shr.u16 	%rs167, %rs162, 7;
	and.b16  	%rs168, %rs167, 255;
	cvt.u32.u16	%r2399, %rs168;
	prmt.b32 	%r2400, %r2398, %r2399, 30212;
	shr.u16 	%rs169, %rs165, 7;
	cvt.u32.u16	%r2401, %rs169;
	shr.u16 	%rs170, %rs164, 7;
	and.b16  	%rs171, %rs170, 255;
	cvt.u32.u16	%r2402, %rs171;
	prmt.b32 	%r2403, %r2401, %r2402, 30212;
	prmt.b32 	%r2284, %r2403, %r2400, 4180;
	mov.b32	{%rs172, %rs173}, %r2331;
	shr.u16 	%rs174, %rs173, 8;
	setp.eq.s16	%p99, %rs174, %rs142;
	and.b16  	%rs175, %rs173, 255;
	setp.eq.s16	%p100, %rs175, %rs142;
	shr.u16 	%rs176, %rs172, 8;
	setp.eq.s16	%p101, %rs176, %rs142;
	and.b16  	%rs177, %rs172, 255;
	setp.eq.s16	%p102, %rs177, %rs142;
	selp.b16	%rs178, -1, 0, %p102;
	selp.b16	%rs179, -1, 0, %p101;
	selp.b16	%rs180, -1, 0, %p100;
	selp.b16	%rs181, -1, 0, %p99;
	shr.u16 	%rs182, %rs179, 7;
	cvt.u32.u16	%r2404, %rs182;
	shr.u16 	%rs183, %rs178, 7;
	and.b16  	%rs184, %rs183, 255;
	cvt.u32.u16	%r2405, %rs184;
	prmt.b32 	%r2406, %r2404, %r2405, 30212;
	shr.u16 	%rs185, %rs181, 7;
	cvt.u32.u16	%r2407, %rs185;
	shr.u16 	%rs186, %rs180, 7;
	and.b16  	%rs187, %rs186, 255;
	cvt.u32.u16	%r2408, %rs187;
	prmt.b32 	%r2409, %r2407, %r2408, 30212;
	prmt.b32 	%r2280, %r2409, %r2406, 4180;
	mov.b32	{%rs188, %rs189}, %r2343;
	shr.u16 	%rs190, %rs189, 8;
	setp.eq.s16	%p103, %rs190, %rs142;
	and.b16  	%rs191, %rs189, 255;
	setp.eq.s16	%p104, %rs191, %rs142;
	shr.u16 	%rs192, %rs188, 8;
	setp.eq.s16	%p105, %rs192, %rs142;
	and.b16  	%rs193, %rs188, 255;
	setp.eq.s16	%p106, %rs193, %rs142;
	selp.b16	%rs194, -1, 0, %p106;
	selp.b16	%rs195, -1, 0, %p105;
	selp.b16	%rs196, -1, 0, %p104;
	selp.b16	%rs197, -1, 0, %p103;
	shr.u16 	%rs198, %rs195, 7;
	cvt.u32.u16	%r2410, %rs198;
	shr.u16 	%rs199, %rs194, 7;
	and.b16  	%rs200, %rs199, 255;
	cvt.u32.u16	%r2411, %rs200;
	prmt.b32 	%r2412, %r2410, %r2411, 30212;
	shr.u16 	%rs201, %rs197, 7;
	cvt.u32.u16	%r2413, %rs201;
	shr.u16 	%rs202, %rs196, 7;
	and.b16  	%rs203, %rs202, 255;
	cvt.u32.u16	%r2414, %rs203;
	prmt.b32 	%r2415, %r2413, %r2414, 30212;
	prmt.b32 	%r2276, %r2415, %r2412, 4180;
	mov.b32	{%rs204, %rs205}, %r2355;
	shr.u16 	%rs206, %rs205, 8;
	setp.eq.s16	%p107, %rs206, %rs142;
	and.b16  	%rs207, %rs205, 255;
	setp.eq.s16	%p108, %rs207, %rs142;
	shr.u16 	%rs208, %rs204, 8;
	setp.eq.s16	%p109, %rs208, %rs142;
	and.b16  	%rs209, %rs204, 255;
	setp.eq.s16	%p110, %rs209, %rs142;
	selp.b16	%rs210, -1, 0, %p110;
	selp.b16	%rs211, -1, 0, %p109;
	selp.b16	%rs212, -1, 0, %p108;
	selp.b16	%rs213, -1, 0, %p107;
	shr.u16 	%rs214, %rs211, 7;
	cvt.u32.u16	%r2416, %rs214;
	shr.u16 	%rs215, %rs210, 7;
	and.b16  	%rs216, %rs215, 255;
	cvt.u32.u16	%r2417, %rs216;
	prmt.b32 	%r2418, %r2416, %r2417, 30212;
	shr.u16 	%rs217, %rs213, 7;
	cvt.u32.u16	%r2419, %rs217;
	shr.u16 	%rs218, %rs212, 7;
	and.b16  	%rs219, %rs218, 255;
	cvt.u32.u16	%r2420, %rs219;
	prmt.b32 	%r2421, %r2419, %r2420, 30212;
	prmt.b32 	%r2272, %r2421, %r2418, 4180;
	mov.b32	{%rs220, %rs221}, %r2367;
	shr.u16 	%rs222, %rs221, 8;
	setp.eq.s16	%p111, %rs222, %rs142;
	and.b16  	%rs223, %rs221, 255;
	setp.eq.s16	%p112, %rs223, %rs142;
	shr.u16 	%rs224, %rs220, 8;
	setp.eq.s16	%p113, %rs224, %rs142;
	and.b16  	%rs225, %rs220, 255;
	setp.eq.s16	%p114, %rs225, %rs142;
	selp.b16	%rs226, -1, 0, %p114;
	selp.b16	%rs227, -1, 0, %p113;
	selp.b16	%rs228, -1, 0, %p112;
	selp.b16	%rs229, -1, 0, %p111;
	shr.u16 	%rs230, %rs227, 7;
	cvt.u32.u16	%r2422, %rs230;
	shr.u16 	%rs231, %rs226, 7;
	and.b16  	%rs232, %rs231, 255;
	cvt.u32.u16	%r2423, %rs232;
	prmt.b32 	%r2424, %r2422, %r2423, 30212;
	shr.u16 	%rs233, %rs229, 7;
	cvt.u32.u16	%r2425, %rs233;
	shr.u16 	%rs234, %rs228, 7;
	and.b16  	%rs235, %rs234, 255;
	cvt.u32.u16	%r2426, %rs235;
	prmt.b32 	%r2427, %r2425, %r2426, 30212;
	prmt.b32 	%r2268, %r2427, %r2424, 4180;
	mov.b32	{%rs236, %rs237}, %r2379;
	shr.u16 	%rs238, %rs237, 8;
	setp.eq.s16	%p115, %rs238, %rs142;
	and.b16  	%rs239, %rs237, 255;
	setp.eq.s16	%p116, %rs239, %rs142;
	shr.u16 	%rs240, %rs236, 8;
	setp.eq.s16	%p117, %rs240, %rs142;
	and.b16  	%rs241, %rs236, 255;
	setp.eq.s16	%p118, %rs241, %rs142;
	selp.b16	%rs242, -1, 0, %p118;
	selp.b16	%rs243, -1, 0, %p117;
	selp.b16	%rs244, -1, 0, %p116;
	selp.b16	%rs245, -1, 0, %p115;
	shr.u16 	%rs246, %rs243, 7;
	cvt.u32.u16	%r2428, %rs246;
	shr.u16 	%rs247, %rs242, 7;
	and.b16  	%rs248, %rs247, 255;
	cvt.u32.u16	%r2429, %rs248;
	prmt.b32 	%r2430, %r2428, %r2429, 30212;
	shr.u16 	%rs249, %rs245, 7;
	cvt.u32.u16	%r2431, %rs249;
	shr.u16 	%rs250, %rs244, 7;
	and.b16  	%rs251, %rs250, 255;
	cvt.u32.u16	%r2432, %rs251;
	prmt.b32 	%r2433, %r2431, %r2432, 30212;
	prmt.b32 	%r2264, %r2433, %r2430, 4180;
	mov.b32	{%rs252, %rs253}, %r2391;
	shr.u16 	%rs254, %rs253, 8;
	setp.eq.s16	%p119, %rs254, %rs142;
	and.b16  	%rs255, %rs253, 255;
	setp.eq.s16	%p120, %rs255, %rs142;
	shr.u16 	%rs256, %rs252, 8;
	setp.eq.s16	%p121, %rs256, %rs142;
	and.b16  	%rs257, %rs252, 255;
	setp.eq.s16	%p122, %rs257, %rs142;
	selp.b16	%rs258, -1, 0, %p122;
	selp.b16	%rs259, -1, 0, %p121;
	selp.b16	%rs260, -1, 0, %p120;
	selp.b16	%rs261, -1, 0, %p119;
	shr.u16 	%rs262, %rs259, 7;
	cvt.u32.u16	%r2434, %rs262;
	shr.u16 	%rs263, %rs258, 7;
	and.b16  	%rs264, %rs263, 255;
	cvt.u32.u16	%r2435, %rs264;
	prmt.b32 	%r2436, %r2434, %r2435, 30212;
	shr.u16 	%rs265, %rs261, 7;
	cvt.u32.u16	%r2437, %rs265;
	shr.u16 	%rs266, %rs260, 7;
	and.b16  	%rs267, %rs266, 255;
	cvt.u32.u16	%r2438, %rs267;
	prmt.b32 	%r2439, %r2437, %r2438, 30212;
	prmt.b32 	%r2265, %r2439, %r2436, 4180;
	mov.u32 	%r2294, 24;
	// inline asm
	shf.r.wrap.b32 %r2263, %r2264, %r2265, %r2294;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2267, %r2268, %r2264, %r2294;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2271, %r2272, %r2268, %r2294;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2275, %r2276, %r2272, %r2294;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2279, %r2280, %r2276, %r2294;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2283, %r2284, %r2280, %r2294;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2287, %r2288, %r2284, %r2294;
	// inline asm
	mov.u32 	%r2292, 0;
	// inline asm
	shf.r.wrap.b32 %r2291, %r2292, %r2288, %r2294;
	// inline asm
	or.b32  	%r2440, %r2291, 255;
	and.b32  	%r2441, %r2307, 1077952576;
	shr.u32 	%r2442, %r2441, 1;
	and.b32  	%r2443, %r2307, -2139062144;
	shr.u32 	%r2444, %r2443, 2;
	not.b32 	%r2445, %r2444;
	and.b32  	%r2446, %r2442, %r2445;
	and.b32  	%r2447, %r2307, 522133279;
	add.s32 	%r2448, %r2447, 522133279;
	sub.s32 	%r2449, %r2303, %r2447;
	and.b32  	%r2450, %r2446, %r2449;
	and.b32  	%r2451, %r2450, %r2448;
	and.b32  	%r2452, %r2451, %r2440;
	not.b32 	%r2453, %r2452;
	and.b32  	%r11686, %r2307, %r2453;
	and.b32  	%r2454, %r2319, 1077952576;
	shr.u32 	%r2455, %r2454, 1;
	and.b32  	%r2456, %r2319, -2139062144;
	shr.u32 	%r2457, %r2456, 2;
	not.b32 	%r2458, %r2457;
	and.b32  	%r2459, %r2455, %r2458;
	and.b32  	%r2460, %r2319, 522133279;
	add.s32 	%r2461, %r2460, 522133279;
	sub.s32 	%r2462, %r2303, %r2460;
	and.b32  	%r2463, %r2459, %r2462;
	and.b32  	%r2464, %r2463, %r2461;
	and.b32  	%r2465, %r2464, %r2287;
	not.b32 	%r2466, %r2465;
	and.b32  	%r11687, %r2319, %r2466;
	and.b32  	%r2467, %r2331, 1077952576;
	shr.u32 	%r2468, %r2467, 1;
	and.b32  	%r2469, %r2331, -2139062144;
	shr.u32 	%r2470, %r2469, 2;
	not.b32 	%r2471, %r2470;
	and.b32  	%r2472, %r2468, %r2471;
	and.b32  	%r2473, %r2331, 522133279;
	add.s32 	%r2474, %r2473, 522133279;
	sub.s32 	%r2475, %r2303, %r2473;
	and.b32  	%r2476, %r2472, %r2475;
	and.b32  	%r2477, %r2476, %r2474;
	and.b32  	%r2478, %r2477, %r2283;
	not.b32 	%r2479, %r2478;
	and.b32  	%r11688, %r2331, %r2479;
	and.b32  	%r2480, %r2343, 1077952576;
	shr.u32 	%r2481, %r2480, 1;
	and.b32  	%r2482, %r2343, -2139062144;
	shr.u32 	%r2483, %r2482, 2;
	not.b32 	%r2484, %r2483;
	and.b32  	%r2485, %r2481, %r2484;
	and.b32  	%r2486, %r2343, 522133279;
	add.s32 	%r2487, %r2486, 522133279;
	sub.s32 	%r2488, %r2303, %r2486;
	and.b32  	%r2489, %r2485, %r2488;
	and.b32  	%r2490, %r2489, %r2487;
	and.b32  	%r2491, %r2490, %r2279;
	not.b32 	%r2492, %r2491;
	and.b32  	%r11689, %r2343, %r2492;
	and.b32  	%r2493, %r2355, 1077952576;
	shr.u32 	%r2494, %r2493, 1;
	and.b32  	%r2495, %r2355, -2139062144;
	shr.u32 	%r2496, %r2495, 2;
	not.b32 	%r2497, %r2496;
	and.b32  	%r2498, %r2494, %r2497;
	and.b32  	%r2499, %r2355, 522133279;
	add.s32 	%r2500, %r2499, 522133279;
	sub.s32 	%r2501, %r2303, %r2499;
	and.b32  	%r2502, %r2498, %r2501;
	and.b32  	%r2503, %r2502, %r2500;
	and.b32  	%r2504, %r2503, %r2275;
	not.b32 	%r2505, %r2504;
	and.b32  	%r11685, %r2355, %r2505;
	and.b32  	%r2506, %r2367, 1077952576;
	shr.u32 	%r2507, %r2506, 1;
	and.b32  	%r2508, %r2367, -2139062144;
	shr.u32 	%r2509, %r2508, 2;
	not.b32 	%r2510, %r2509;
	and.b32  	%r2511, %r2507, %r2510;
	and.b32  	%r2512, %r2367, 522133279;
	add.s32 	%r2513, %r2512, 522133279;
	sub.s32 	%r2514, %r2303, %r2512;
	and.b32  	%r2515, %r2511, %r2514;
	and.b32  	%r2516, %r2515, %r2513;
	and.b32  	%r2517, %r2516, %r2271;
	not.b32 	%r2518, %r2517;
	and.b32  	%r11684, %r2367, %r2518;
	and.b32  	%r2519, %r2379, 1077952576;
	shr.u32 	%r2520, %r2519, 1;
	and.b32  	%r2521, %r2379, -2139062144;
	shr.u32 	%r2522, %r2521, 2;
	not.b32 	%r2523, %r2522;
	and.b32  	%r2524, %r2520, %r2523;
	and.b32  	%r2525, %r2379, 522133279;
	add.s32 	%r2526, %r2525, 522133279;
	sub.s32 	%r2527, %r2303, %r2525;
	and.b32  	%r2528, %r2524, %r2527;
	and.b32  	%r2529, %r2528, %r2526;
	and.b32  	%r2530, %r2529, %r2267;
	not.b32 	%r2531, %r2530;
	and.b32  	%r11683, %r2379, %r2531;
	and.b32  	%r2532, %r2391, 1077952576;
	shr.u32 	%r2533, %r2532, 1;
	and.b32  	%r2534, %r2391, -2139062144;
	shr.u32 	%r2535, %r2534, 2;
	not.b32 	%r2536, %r2535;
	and.b32  	%r2537, %r2533, %r2536;
	and.b32  	%r2538, %r2391, 522133279;
	add.s32 	%r2539, %r2538, 522133279;
	sub.s32 	%r2540, %r2303, %r2538;
	and.b32  	%r2541, %r2537, %r2540;
	and.b32  	%r2542, %r2541, %r2539;
	and.b32  	%r2543, %r2542, %r2263;
	not.b32 	%r2544, %r2543;
	and.b32  	%r11682, %r2391, %r2544;
	mov.u32 	%r11690, %r30;
	bra.uni 	BB1_1547;

BB1_49:
	setp.eq.s32	%p41, %r1980, 76;
	@%p41 bra 	BB1_424;

	setp.eq.s32	%p42, %r1980, 79;
	@%p42 bra 	BB1_1046;
	bra.uni 	BB1_51;

BB1_1046:
	setp.ge.u32	%p706, %r40, %r30;
	add.s32 	%r5224, %r40, %r42;
	setp.gt.u32	%p707, %r5224, %r30;
	or.pred  	%p708, %p706, %p707;
	@%p708 bra 	BB1_778;

	mov.u32 	%r11682, 0;
	setp.gt.s32	%p709, %r42, 15;
	@%p709 bra 	BB1_1080;

	setp.gt.s32	%p733, %r42, 7;
	@%p733 bra 	BB1_1064;

	setp.gt.s32	%p745, %r42, 3;
	@%p745 bra 	BB1_1057;

	setp.gt.s32	%p751, %r42, 1;
	@%p751 bra 	BB1_1054;

	setp.eq.s32	%p754, %r42, 0;
	@%p754 bra 	BB1_1132;
	bra.uni 	BB1_1052;

BB1_1132:
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11604, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	mov.u32 	%r11689, %r31;
	bra.uni 	BB1_1133;

BB1_112:
	setp.eq.s32	%p14, %r1980, 115;
	@%p14 bra 	BB1_972;

	setp.eq.s32	%p15, %r1980, 116;
	@%p15 bra 	BB1_1543;
	bra.uni 	BB1_114;

BB1_1543:
	and.b32  	%r8458, %r34, 1077952576;
	shr.u32 	%r8459, %r8458, 1;
	and.b32  	%r8460, %r34, -2139062144;
	shr.u32 	%r8461, %r8460, 2;
	not.b32 	%r8462, %r8461;
	and.b32  	%r8463, %r8459, %r8462;
	and.b32  	%r8464, %r34, 522133279;
	add.s32 	%r8465, %r8464, 522133279;
	mov.u32 	%r8466, -84215046;
	sub.s32 	%r8467, %r8466, %r8464;
	and.b32  	%r8468, %r8463, %r8467;
	and.b32  	%r8469, %r8468, %r8465;
	xor.b32  	%r11686, %r8469, %r34;
	and.b32  	%r8470, %r33, 1077952576;
	shr.u32 	%r8471, %r8470, 1;
	and.b32  	%r8472, %r33, -2139062144;
	shr.u32 	%r8473, %r8472, 2;
	not.b32 	%r8474, %r8473;
	and.b32  	%r8475, %r8471, %r8474;
	and.b32  	%r8476, %r33, 522133279;
	add.s32 	%r8477, %r8476, 522133279;
	sub.s32 	%r8478, %r8466, %r8476;
	and.b32  	%r8479, %r8475, %r8478;
	and.b32  	%r8480, %r8479, %r8477;
	xor.b32  	%r11687, %r8480, %r33;
	and.b32  	%r8481, %r32, 1077952576;
	shr.u32 	%r8482, %r8481, 1;
	and.b32  	%r8483, %r32, -2139062144;
	shr.u32 	%r8484, %r8483, 2;
	not.b32 	%r8485, %r8484;
	and.b32  	%r8486, %r8482, %r8485;
	and.b32  	%r8487, %r32, 522133279;
	add.s32 	%r8488, %r8487, 522133279;
	sub.s32 	%r8489, %r8466, %r8487;
	and.b32  	%r8490, %r8486, %r8489;
	and.b32  	%r8491, %r8490, %r8488;
	xor.b32  	%r11688, %r8491, %r32;
	and.b32  	%r8492, %r31, 1077952576;
	shr.u32 	%r8493, %r8492, 1;
	and.b32  	%r8494, %r31, -2139062144;
	shr.u32 	%r8495, %r8494, 2;
	not.b32 	%r8496, %r8495;
	and.b32  	%r8497, %r8493, %r8496;
	and.b32  	%r8498, %r31, 522133279;
	add.s32 	%r8499, %r8498, 522133279;
	sub.s32 	%r8500, %r8466, %r8498;
	and.b32  	%r8501, %r8497, %r8500;
	and.b32  	%r8502, %r8501, %r8499;
	xor.b32  	%r11689, %r8502, %r31;
	and.b32  	%r8503, %r35, 1077952576;
	shr.u32 	%r8504, %r8503, 1;
	and.b32  	%r8505, %r35, -2139062144;
	shr.u32 	%r8506, %r8505, 2;
	not.b32 	%r8507, %r8506;
	and.b32  	%r8508, %r8504, %r8507;
	and.b32  	%r8509, %r35, 522133279;
	add.s32 	%r8510, %r8509, 522133279;
	sub.s32 	%r8511, %r8466, %r8509;
	and.b32  	%r8512, %r8508, %r8511;
	and.b32  	%r8513, %r8512, %r8510;
	xor.b32  	%r11685, %r8513, %r35;
	and.b32  	%r8514, %r36, 1077952576;
	shr.u32 	%r8515, %r8514, 1;
	and.b32  	%r8516, %r36, -2139062144;
	shr.u32 	%r8517, %r8516, 2;
	not.b32 	%r8518, %r8517;
	and.b32  	%r8519, %r8515, %r8518;
	and.b32  	%r8520, %r36, 522133279;
	add.s32 	%r8521, %r8520, 522133279;
	sub.s32 	%r8522, %r8466, %r8520;
	and.b32  	%r8523, %r8519, %r8522;
	and.b32  	%r8524, %r8523, %r8521;
	xor.b32  	%r11684, %r8524, %r36;
	and.b32  	%r8525, %r37, 1077952576;
	shr.u32 	%r8526, %r8525, 1;
	and.b32  	%r8527, %r37, -2139062144;
	shr.u32 	%r8528, %r8527, 2;
	not.b32 	%r8529, %r8528;
	and.b32  	%r8530, %r8526, %r8529;
	and.b32  	%r8531, %r37, 522133279;
	add.s32 	%r8532, %r8531, 522133279;
	sub.s32 	%r8533, %r8466, %r8531;
	and.b32  	%r8534, %r8530, %r8533;
	and.b32  	%r8535, %r8534, %r8532;
	xor.b32  	%r11683, %r8535, %r37;
	and.b32  	%r8536, %r38, 1077952576;
	shr.u32 	%r8537, %r8536, 1;
	and.b32  	%r8538, %r38, -2139062144;
	shr.u32 	%r8539, %r8538, 2;
	not.b32 	%r8540, %r8539;
	and.b32  	%r8541, %r8537, %r8540;
	and.b32  	%r8542, %r38, 522133279;
	add.s32 	%r8543, %r8542, 522133279;
	sub.s32 	%r8544, %r8466, %r8542;
	and.b32  	%r8545, %r8541, %r8544;
	and.b32  	%r8546, %r8545, %r8543;
	xor.b32  	%r11682, %r8546, %r38;
	bra.uni 	BB1_1546;

BB1_30:
	setp.eq.s32	%p48, %r1980, 64;
	@%p48 bra 	BB1_947;

	setp.eq.s32	%p49, %r1980, 67;
	@%p49 bra 	BB1_1544;
	bra.uni 	BB1_32;

BB1_1544:
	and.b32  	%r8547, %r34, 1077952576;
	shr.u32 	%r8548, %r8547, 1;
	and.b32  	%r8549, %r34, -2139062144;
	shr.u32 	%r8550, %r8549, 2;
	not.b32 	%r8551, %r8550;
	and.b32  	%r8552, %r8548, %r8551;
	and.b32  	%r8553, %r34, 522133279;
	add.s32 	%r8554, %r8553, 522133279;
	mov.u32 	%r8555, -84215046;
	sub.s32 	%r8556, %r8555, %r8553;
	and.b32  	%r8557, %r8552, %r8556;
	and.b32  	%r8558, %r8557, %r8554;
	not.b32 	%r8559, %r8558;
	and.b32  	%r8560, %r33, 1077952576;
	shr.u32 	%r8561, %r8560, 1;
	and.b32  	%r8562, %r33, -2139062144;
	shr.u32 	%r8563, %r8562, 2;
	not.b32 	%r8564, %r8563;
	and.b32  	%r8565, %r8561, %r8564;
	and.b32  	%r8566, %r33, 522133279;
	add.s32 	%r8567, %r8566, 522133279;
	sub.s32 	%r8568, %r8555, %r8566;
	and.b32  	%r8569, %r8565, %r8568;
	and.b32  	%r8570, %r8569, %r8567;
	not.b32 	%r8571, %r8570;
	and.b32  	%r11687, %r33, %r8571;
	and.b32  	%r8572, %r32, 1077952576;
	shr.u32 	%r8573, %r8572, 1;
	and.b32  	%r8574, %r32, -2139062144;
	shr.u32 	%r8575, %r8574, 2;
	not.b32 	%r8576, %r8575;
	and.b32  	%r8577, %r8573, %r8576;
	and.b32  	%r8578, %r32, 522133279;
	add.s32 	%r8579, %r8578, 522133279;
	sub.s32 	%r8580, %r8555, %r8578;
	and.b32  	%r8581, %r8577, %r8580;
	and.b32  	%r8582, %r8581, %r8579;
	not.b32 	%r8583, %r8582;
	and.b32  	%r11688, %r32, %r8583;
	and.b32  	%r8584, %r31, 1077952576;
	shr.u32 	%r8585, %r8584, 1;
	and.b32  	%r8586, %r31, -2139062144;
	shr.u32 	%r8587, %r8586, 2;
	not.b32 	%r8588, %r8587;
	and.b32  	%r8589, %r8585, %r8588;
	and.b32  	%r8590, %r31, 522133279;
	add.s32 	%r8591, %r8590, 522133279;
	sub.s32 	%r8592, %r8555, %r8590;
	and.b32  	%r8593, %r8589, %r8592;
	and.b32  	%r8594, %r8593, %r8591;
	not.b32 	%r8595, %r8594;
	and.b32  	%r11689, %r31, %r8595;
	and.b32  	%r8596, %r35, 1077952576;
	shr.u32 	%r8597, %r8596, 1;
	and.b32  	%r8598, %r35, -2139062144;
	shr.u32 	%r8599, %r8598, 2;
	not.b32 	%r8600, %r8599;
	and.b32  	%r8601, %r8597, %r8600;
	and.b32  	%r8602, %r35, 522133279;
	add.s32 	%r8603, %r8602, 522133279;
	sub.s32 	%r8604, %r8555, %r8602;
	and.b32  	%r8605, %r8601, %r8604;
	and.b32  	%r8606, %r8605, %r8603;
	not.b32 	%r8607, %r8606;
	and.b32  	%r11685, %r35, %r8607;
	and.b32  	%r8608, %r36, 1077952576;
	shr.u32 	%r8609, %r8608, 1;
	and.b32  	%r8610, %r36, -2139062144;
	shr.u32 	%r8611, %r8610, 2;
	not.b32 	%r8612, %r8611;
	and.b32  	%r8613, %r8609, %r8612;
	and.b32  	%r8614, %r36, 522133279;
	add.s32 	%r8615, %r8614, 522133279;
	sub.s32 	%r8616, %r8555, %r8614;
	and.b32  	%r8617, %r8613, %r8616;
	and.b32  	%r8618, %r8617, %r8615;
	not.b32 	%r8619, %r8618;
	and.b32  	%r11684, %r36, %r8619;
	and.b32  	%r8620, %r37, 1077952576;
	shr.u32 	%r8621, %r8620, 1;
	and.b32  	%r8622, %r37, -2139062144;
	shr.u32 	%r8623, %r8622, 2;
	not.b32 	%r8624, %r8623;
	and.b32  	%r8625, %r8621, %r8624;
	and.b32  	%r8626, %r37, 522133279;
	add.s32 	%r8627, %r8626, 522133279;
	sub.s32 	%r8628, %r8555, %r8626;
	and.b32  	%r8629, %r8625, %r8628;
	and.b32  	%r8630, %r8629, %r8627;
	not.b32 	%r8631, %r8630;
	and.b32  	%r11683, %r37, %r8631;
	and.b32  	%r8632, %r38, 1077952576;
	shr.u32 	%r8633, %r8632, 1;
	and.b32  	%r8634, %r38, -2139062144;
	shr.u32 	%r8635, %r8634, 2;
	not.b32 	%r8636, %r8635;
	and.b32  	%r8637, %r8633, %r8636;
	and.b32  	%r8638, %r38, 522133279;
	add.s32 	%r8639, %r8638, 522133279;
	sub.s32 	%r8640, %r8555, %r8638;
	and.b32  	%r8641, %r8637, %r8640;
	and.b32  	%r8642, %r8641, %r8639;
	not.b32 	%r8643, %r8642;
	and.b32  	%r11682, %r38, %r8643;
	and.b32  	%r8644, %r34, %r8559;
	and.b32  	%r8645, %r8644, 64;
	shr.u32 	%r8646, %r8645, 1;
	shr.u32 	%r8647, %r8644, 2;
	and.b32  	%r8648, %r8644, 522133279;
	add.s32 	%r8649, %r8648, 31;
	sub.s32 	%r8650, %r8555, %r8648;
	not.b32 	%r8651, %r8647;
	and.b32  	%r8652, %r8651, %r8646;
	and.b32  	%r8653, %r8652, %r8650;
	and.b32  	%r8654, %r8653, %r8649;
	or.b32  	%r11686, %r8654, %r8644;
	bra.uni 	BB1_1546;

BB1_93:
	setp.eq.s32	%p21, %r1980, 108;
	@%p21 bra 	BB1_1545;

	setp.eq.s32	%p22, %r1980, 111;
	@%p22 bra 	BB1_999;
	bra.uni 	BB1_95;

BB1_999:
	setp.ge.u32	%p680, %r40, %r30;
	@%p680 bra 	BB1_778;

	and.b32  	%r5150, %r39, 3;
	shl.b32 	%r5151, %r5150, 3;
	shl.b32 	%r929, %r42, %r5151;
	mov.u32 	%r5152, 255;
	shl.b32 	%r5153, %r5152, %r5151;
	not.b32 	%r930, %r5153;
	shr.u32 	%r5149, %r40, 2;
	setp.gt.s32	%p681, %r5149, 3;
	@%p681 bra 	BB1_1009;

	setp.gt.s32	%p687, %r5149, 1;
	@%p687 bra 	BB1_1006;

	setp.eq.s32	%p690, %r5149, 0;
	@%p690 bra 	BB1_1023;
	bra.uni 	BB1_1003;

BB1_1023:
	and.b32  	%r5161, %r34, %r930;
	or.b32  	%r11686, %r5161, %r929;

BB1_1024:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	bra.uni 	BB1_15;

BB1_67:
	setp.eq.s32	%p35, %r1980, 90;
	@%p35 bra 	BB1_780;

	setp.eq.s32	%p36, %r1980, 91;
	@%p36 bra 	BB1_1286;
	bra.uni 	BB1_69;

BB1_1286:
	setp.eq.s32	%p847, %r30, 0;
	mov.u32 	%r11690, 0;
	@%p847 bra 	BB1_1030;

	add.s32 	%r11690, %r30, -1;
	mov.u32 	%r6476, 8;
	// inline asm
	shf.r.wrap.b32 %r11686, %r34, %r33, %r6476;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r33, %r32, %r6476;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r32, %r31, %r6476;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r31, %r35, %r6476;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r35, %r36, %r6476;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r36, %r37, %r6476;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r37, %r38, %r6476;
	// inline asm
	mov.u32 	%r6475, 0;
	// inline asm
	shf.r.wrap.b32 %r11682, %r38, %r6475, %r6476;
	// inline asm
	bra.uni 	BB1_1547;

BB1_125:
	setp.eq.s32	%p8, %r1980, 122;
	@%p8 bra 	BB1_783;

	setp.eq.s32	%p9, %r1980, 123;
	@%p9 bra 	BB1_1305;
	bra.uni 	BB1_127;

BB1_1305:
	setp.eq.s32	%p868, %r30, 0;
	mov.u32 	%r11690, 0;
	@%p868 bra 	BB1_1030;

	add.s32 	%r6597, %r30, -1;
	and.b32  	%r6598, %r6597, 3;
	shl.b32 	%r6599, %r6598, 3;
	and.b32  	%r6600, %r34, 255;
	shl.b32 	%r6601, %r6600, %r6599;
	mov.u32 	%r6596, 8;
	// inline asm
	shf.r.wrap.b32 %r6565, %r34, %r33, %r6596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6569, %r33, %r32, %r6596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6573, %r32, %r31, %r6596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6577, %r31, %r35, %r6596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6581, %r35, %r36, %r6596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6585, %r36, %r37, %r6596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6589, %r37, %r38, %r6596;
	// inline asm
	mov.u32 	%r6595, 0;
	// inline asm
	shf.r.wrap.b32 %r6593, %r38, %r6595, %r6596;
	// inline asm
	setp.lt.u32	%p869, %r6597, 4;
	selp.b32	%r6602, %r6601, 0, %p869;
	or.b32  	%r11686, %r6565, %r6602;
	and.b32  	%r6603, %r6597, -4;
	setp.eq.s32	%p870, %r6603, 4;
	selp.b32	%r6604, %r6601, 0, %p870;
	or.b32  	%r11687, %r6569, %r6604;
	setp.eq.s32	%p871, %r6603, 8;
	selp.b32	%r6605, %r6601, 0, %p871;
	or.b32  	%r11688, %r6573, %r6605;
	setp.eq.s32	%p872, %r6603, 12;
	selp.b32	%r6606, %r6601, 0, %p872;
	or.b32  	%r11689, %r6577, %r6606;
	setp.eq.s32	%p873, %r6603, 16;
	selp.b32	%r6607, %r6601, 0, %p873;
	or.b32  	%r11685, %r6581, %r6607;
	setp.eq.s32	%p874, %r6603, 20;
	selp.b32	%r6608, %r6601, 0, %p874;
	or.b32  	%r11684, %r6585, %r6608;
	setp.eq.s32	%p875, %r6603, 24;
	selp.b32	%r6609, %r6601, 0, %p875;
	or.b32  	%r11683, %r6589, %r6609;
	setp.gt.u32	%p876, %r6597, 27;
	selp.b32	%r6610, %r6601, 0, %p876;
	or.b32  	%r11682, %r6593, %r6610;
	bra.uni 	BB1_1546;

BB1_9:
	setp.eq.s32	%p58, %r1980, 39;
	@%p58 bra 	BB1_973;
	bra.uni 	BB1_10;

BB1_973:
	setp.ge.u32	%p668, %r40, %r30;
	@%p668 bra 	BB1_778;

	and.b32  	%r5117, %r39, 3;
	shl.b32 	%r5118, %r5117, 3;
	mov.u32 	%r5119, 1;
	shl.b32 	%r5120, %r5119, %r5118;
	add.s32 	%r920, %r5120, -1;
	shr.u32 	%r5116, %r40, 2;
	setp.gt.s32	%p669, %r5116, 3;
	@%p669 bra 	BB1_982;

	setp.gt.s32	%p675, %r5116, 1;
	@%p675 bra 	BB1_979;

	setp.eq.s32	%p678, %r5116, 0;
	@%p678 bra 	BB1_998;
	bra.uni 	BB1_977;

BB1_998:
	and.b32  	%r11686, %r920, %r34;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11687, %r11682;
	bra.uni 	BB1_996;

BB1_76:
	setp.eq.s32	%p31, %r1980, 99;
	@%p31 bra 	BB1_77;
	bra.uni 	BB1_10;

BB1_77:
	and.b32  	%r8655, %r34, 1077952576;
	shr.u32 	%r8656, %r8655, 1;
	and.b32  	%r8657, %r34, -2139062144;
	shr.u32 	%r8658, %r8657, 2;
	not.b32 	%r8659, %r8658;
	and.b32  	%r8660, %r8656, %r8659;
	and.b32  	%r8661, %r34, 522133279;
	add.s32 	%r8662, %r8661, 522133279;
	mov.u32 	%r8663, -84215046;
	sub.s32 	%r8664, %r8663, %r8661;
	and.b32  	%r8665, %r8660, %r8664;
	and.b32  	%r8666, %r8665, %r8662;
	or.b32  	%r8667, %r8666, %r34;
	and.b32  	%r8668, %r33, 1077952576;
	shr.u32 	%r8669, %r8668, 1;
	and.b32  	%r8670, %r33, -2139062144;
	shr.u32 	%r8671, %r8670, 2;
	not.b32 	%r8672, %r8671;
	and.b32  	%r8673, %r8669, %r8672;
	and.b32  	%r8674, %r33, 522133279;
	add.s32 	%r8675, %r8674, 522133279;
	sub.s32 	%r8676, %r8663, %r8674;
	and.b32  	%r8677, %r8673, %r8676;
	and.b32  	%r8678, %r8677, %r8675;
	or.b32  	%r11687, %r8678, %r33;
	and.b32  	%r8679, %r32, 1077952576;
	shr.u32 	%r8680, %r8679, 1;
	and.b32  	%r8681, %r32, -2139062144;
	shr.u32 	%r8682, %r8681, 2;
	not.b32 	%r8683, %r8682;
	and.b32  	%r8684, %r8680, %r8683;
	and.b32  	%r8685, %r32, 522133279;
	add.s32 	%r8686, %r8685, 522133279;
	sub.s32 	%r8687, %r8663, %r8685;
	and.b32  	%r8688, %r8684, %r8687;
	and.b32  	%r8689, %r8688, %r8686;
	or.b32  	%r11688, %r8689, %r32;
	and.b32  	%r8690, %r31, 1077952576;
	shr.u32 	%r8691, %r8690, 1;
	and.b32  	%r8692, %r31, -2139062144;
	shr.u32 	%r8693, %r8692, 2;
	not.b32 	%r8694, %r8693;
	and.b32  	%r8695, %r8691, %r8694;
	and.b32  	%r8696, %r31, 522133279;
	add.s32 	%r8697, %r8696, 522133279;
	sub.s32 	%r8698, %r8663, %r8696;
	and.b32  	%r8699, %r8695, %r8698;
	and.b32  	%r8700, %r8699, %r8697;
	or.b32  	%r11689, %r8700, %r31;
	and.b32  	%r8701, %r35, 1077952576;
	shr.u32 	%r8702, %r8701, 1;
	and.b32  	%r8703, %r35, -2139062144;
	shr.u32 	%r8704, %r8703, 2;
	not.b32 	%r8705, %r8704;
	and.b32  	%r8706, %r8702, %r8705;
	and.b32  	%r8707, %r35, 522133279;
	add.s32 	%r8708, %r8707, 522133279;
	sub.s32 	%r8709, %r8663, %r8707;
	and.b32  	%r8710, %r8706, %r8709;
	and.b32  	%r8711, %r8710, %r8708;
	or.b32  	%r11685, %r8711, %r35;
	and.b32  	%r8712, %r36, 1077952576;
	shr.u32 	%r8713, %r8712, 1;
	and.b32  	%r8714, %r36, -2139062144;
	shr.u32 	%r8715, %r8714, 2;
	not.b32 	%r8716, %r8715;
	and.b32  	%r8717, %r8713, %r8716;
	and.b32  	%r8718, %r36, 522133279;
	add.s32 	%r8719, %r8718, 522133279;
	sub.s32 	%r8720, %r8663, %r8718;
	and.b32  	%r8721, %r8717, %r8720;
	and.b32  	%r8722, %r8721, %r8719;
	or.b32  	%r11684, %r8722, %r36;
	and.b32  	%r8723, %r37, 1077952576;
	shr.u32 	%r8724, %r8723, 1;
	and.b32  	%r8725, %r37, -2139062144;
	shr.u32 	%r8726, %r8725, 2;
	not.b32 	%r8727, %r8726;
	and.b32  	%r8728, %r8724, %r8727;
	and.b32  	%r8729, %r37, 522133279;
	add.s32 	%r8730, %r8729, 522133279;
	sub.s32 	%r8731, %r8663, %r8729;
	and.b32  	%r8732, %r8728, %r8731;
	and.b32  	%r8733, %r8732, %r8730;
	or.b32  	%r11683, %r8733, %r37;
	and.b32  	%r8734, %r38, 1077952576;
	shr.u32 	%r8735, %r8734, 1;
	and.b32  	%r8736, %r38, -2139062144;
	shr.u32 	%r8737, %r8736, 2;
	not.b32 	%r8738, %r8737;
	and.b32  	%r8739, %r8735, %r8738;
	and.b32  	%r8740, %r38, 522133279;
	add.s32 	%r8741, %r8740, 522133279;
	sub.s32 	%r8742, %r8663, %r8740;
	and.b32  	%r8743, %r8739, %r8742;
	and.b32  	%r8744, %r8743, %r8741;
	or.b32  	%r11682, %r8744, %r38;
	and.b32  	%r8745, %r8667, 64;
	shr.u32 	%r8746, %r8745, 1;
	and.b32  	%r8747, %r8667, 128;
	shr.u32 	%r8748, %r8747, 2;
	not.b32 	%r8749, %r8748;
	and.b32  	%r8750, %r8746, %r8749;
	and.b32  	%r8751, %r8667, 522133279;
	add.s32 	%r8752, %r8751, 31;
	sub.s32 	%r8753, %r8663, %r8751;
	and.b32  	%r8754, %r8750, %r8753;
	and.b32  	%r8755, %r8754, %r8752;
	not.b32 	%r8756, %r8755;
	or.b32  	%r8757, %r8756, -33;
	and.b32  	%r11686, %r8757, %r8667;
	bra.uni 	BB1_1546;

BB1_41:
	setp.eq.s32	%p45, %r1980, 75;
	@%p45 bra 	BB1_42;
	bra.uni 	BB1_10;

BB1_42:
	setp.lt.u32	%p461, %r30, 2;
	@%p461 bra 	BB1_10;

	setp.gt.s32	%p462, %r30, 16;
	@%p462 bra 	BB1_720;

	setp.gt.s32	%p484, %r30, 8;
	@%p484 bra 	BB1_705;

	setp.gt.s32	%p496, %r30, 4;
	@%p496 bra 	BB1_698;

	setp.eq.s32	%p502, %r30, 2;
	@%p502 bra 	BB1_775;

	setp.eq.s32	%p503, %r30, 3;
	@%p503 bra 	BB1_48;
	bra.uni 	BB1_696;

BB1_48:
	and.b32  	%r4201, %r34, 255;
	shl.b32 	%r4202, %r34, 8;
	and.b32  	%r4203, %r4202, 16711680;
	or.b32  	%r4204, %r4203, %r4201;
	shr.u32 	%r4205, %r34, 8;
	and.b32  	%r4206, %r4205, 65280;
	or.b32  	%r11686, %r4204, %r4206;
	mov.u32 	%r11690, 3;
	bra.uni 	BB1_776;

BB1_104:
	setp.eq.s32	%p18, %r1980, 114;
	@%p18 bra 	BB1_105;
	bra.uni 	BB1_10;

BB1_105:
	mov.u32 	%r7789, 32;
	sub.s32 	%r7788, %r7789, %r30;
	setp.gt.s32	%p973, %r7788, 15;
	@%p973 bra 	BB1_1469;

	setp.gt.s32	%p997, %r7788, 7;
	@%p997 bra 	BB1_1454;

	setp.gt.s32	%p1009, %r7788, 3;
	@%p1009 bra 	BB1_1447;

	setp.eq.s32	%p1015, %r7788, 1;
	@%p1015 bra 	BB1_1519;

	setp.eq.s32	%p1016, %r7788, 2;
	@%p1016 bra 	BB1_1518;
	bra.uni 	BB1_110;

BB1_1518:
	mov.u32 	%r8290, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r8290;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r8290;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r8290;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r31, %r35, %r8290;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8275, %r32, %r31, %r8290;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11680, %r33, %r32, %r8290;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11679, %r34, %r33, %r8290;
	// inline asm
	mov.u32 	%r8288, 0;
	// inline asm
	shf.r.wrap.b32 %r11678, %r8288, %r34, %r8290;
	// inline asm
	mov.u32 	%r34, %r8275;
	bra.uni 	BB1_1522;

BB1_24:
	setp.eq.s32	%p52, %r1980, 46;
	@%p52 bra 	BB1_25;
	bra.uni 	BB1_10;

BB1_25:
	add.s32 	%r3758, %r40, 1;
	setp.ge.u32	%p257, %r3758, %r30;
	@%p257 bra 	BB1_10;

	mov.u32 	%r3786, 8;
	// inline asm
	shf.r.wrap.b32 %r3759, %r34, %r33, %r3786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3763, %r33, %r32, %r3786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3767, %r32, %r31, %r3786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3771, %r31, %r35, %r3786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3775, %r35, %r36, %r3786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3779, %r36, %r37, %r3786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3783, %r37, %r38, %r3786;
	// inline asm
	and.b32  	%r3788, %r39, 3;
	shl.b32 	%r3789, %r3788, 3;
	mov.u32 	%r3790, 255;
	shl.b32 	%r367, %r3790, %r3789;
	not.b32 	%r368, %r367;
	shr.u32 	%r3787, %r40, 2;
	setp.gt.s32	%p258, %r3787, 3;
	@%p258 bra 	BB1_359;

	setp.gt.s32	%p264, %r3787, 1;
	@%p264 bra 	BB1_356;

	setp.eq.s32	%p267, %r3787, 0;
	@%p267 bra 	BB1_29;
	bra.uni 	BB1_354;

BB1_29:
	and.b32  	%r3809, %r34, %r368;
	and.b32  	%r3810, %r3759, %r367;
	or.b32  	%r11686, %r3810, %r3809;
	bra.uni 	BB1_613;

BB1_90:
	setp.eq.s32	%p25, %r1980, 107;
	@%p25 bra 	BB1_91;
	bra.uni 	BB1_10;

BB1_91:
	setp.lt.u32	%p505, %r30, 2;
	@%p505 bra 	BB1_10;

	and.b32  	%r4211, %r34, -65536;
	shl.b32 	%r4212, %r34, 8;
	and.b32  	%r4213, %r4212, 65280;
	or.b32  	%r4214, %r4213, %r4211;
	bfe.u32 	%r4215, %r34, 8, 8;
	or.b32  	%r11686, %r4214, %r4215;

BB1_613:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	bra.uni 	BB1_677;

BB1_59:
	setp.eq.s32	%p39, %r1980, 89;
	@%p39 bra 	BB1_60;
	bra.uni 	BB1_10;

BB1_60:
	setp.gt.u32	%p123, %r40, %r30;
	add.s32 	%r11690, %r40, %r30;
	setp.gt.u32	%p124, %r11690, 31;
	or.pred  	%p125, %p123, %p124;
	@%p125 bra 	BB1_10;

	mov.u32 	%r11529, 0;
	setp.gt.s32	%p126, %r40, 15;
	@%p126 bra 	BB1_164;

	setp.gt.s32	%p150, %r40, 7;
	@%p150 bra 	BB1_148;

	setp.gt.s32	%p162, %r40, 3;
	@%p162 bra 	BB1_141;

	setp.gt.s32	%p168, %r40, 1;
	@%p168 bra 	BB1_138;

	setp.eq.s32	%p171, %r40, 0;
	@%p171 bra 	BB1_66;
	bra.uni 	BB1_136;

BB1_66:
	mov.u32 	%r11525, %r35;
	mov.u32 	%r11526, %r36;
	mov.u32 	%r11527, %r37;
	mov.u32 	%r11528, %r38;
	mov.u32 	%r11529, %r34;
	mov.u32 	%r11530, %r33;
	mov.u32 	%r11531, %r32;
	mov.u32 	%r11532, %r31;
	bra.uni 	BB1_214;

BB1_118:
	setp.eq.s32	%p12, %r1980, 121;
	@%p12 bra 	BB1_119;
	bra.uni 	BB1_10;

BB1_119:
	setp.gt.u32	%p184, %r40, %r30;
	add.s32 	%r11690, %r40, %r30;
	setp.gt.u32	%p185, %r11690, 31;
	or.pred  	%p186, %p184, %p185;
	@%p186 bra 	BB1_10;

	and.b32  	%r3130, %r39, 3;
	shl.b32 	%r3131, %r3130, 3;
	mov.u32 	%r3132, 1;
	shl.b32 	%r3133, %r3132, %r3131;
	add.s32 	%r202, %r3133, -1;
	shr.u32 	%r3129, %r40, 2;
	setp.gt.s32	%p187, %r3129, 3;
	@%p187 bra 	BB1_240;

	setp.gt.s32	%p193, %r3129, 1;
	@%p193 bra 	BB1_237;

	setp.eq.s32	%p196, %r3129, 0;
	@%p196 bra 	BB1_123;
	bra.uni 	BB1_235;

BB1_123:
	and.b32  	%r11545, %r202, %r34;
	mov.u32 	%r11541, 0;
	mov.u32 	%r11542, %r11541;
	mov.u32 	%r11543, %r11541;
	mov.u32 	%r11544, %r11541;
	mov.u32 	%r11546, %r11541;
	bra.uni 	BB1_124;

BB1_444:
	setp.lt.u32	%p317, %r40, %r30;
	setp.gt.u32	%p318, %r30, %r42;
	and.pred  	%p319, %p317, %p318;
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	mov.u32 	%r11689, %r31;
	mov.u32 	%r11690, %r30;
	@!%p319 bra 	BB1_1547;
	bra.uni 	BB1_445;

BB1_445:
	mov.u32 	%r11566, 0;
	setp.gt.s32	%p320, %r40, 15;
	@%p320 bra 	BB1_477;

	setp.gt.s32	%p344, %r40, 7;
	@%p344 bra 	BB1_462;

	setp.gt.s32	%p356, %r40, 3;
	@%p356 bra 	BB1_455;

	setp.gt.s32	%p362, %r40, 1;
	@%p362 bra 	BB1_452;

	setp.eq.s32	%p365, %r40, 0;
	@%p365 bra 	BB1_523;
	bra.uni 	BB1_450;

BB1_523:
	and.b32  	%r11557, %r34, 255;
	bra.uni 	BB1_524;

BB1_20:
	setp.eq.s32	%p56, %r1980, 44;
	@%p56 bra 	BB1_21;
	bra.uni 	BB1_10;

BB1_21:
	setp.ne.s32	%p243, %r40, 0;
	setp.lt.u32	%p244, %r40, %r30;
	and.pred  	%p245, %p243, %p244;
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	mov.u32 	%r11689, %r31;
	mov.u32 	%r11690, %r30;
	@!%p245 bra 	BB1_1547;
	bra.uni 	BB1_335;

BB1_335:
	mov.u32 	%r3733, 24;
	// inline asm
	shf.r.wrap.b32 %r3706, %r37, %r38, %r3733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3710, %r36, %r37, %r3733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3714, %r35, %r36, %r3733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3718, %r31, %r35, %r3733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3722, %r32, %r31, %r3733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3726, %r33, %r32, %r3733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3730, %r34, %r33, %r3733;
	// inline asm
	and.b32  	%r3735, %r39, 3;
	shl.b32 	%r3736, %r3735, 3;
	mov.u32 	%r3737, 255;
	shl.b32 	%r350, %r3737, %r3736;
	not.b32 	%r351, %r350;
	shr.u32 	%r3734, %r40, 2;
	setp.gt.s32	%p246, %r3734, 3;
	@%p246 bra 	BB1_343;

	setp.gt.s32	%p252, %r3734, 1;
	@%p252 bra 	BB1_340;

	setp.eq.s32	%p255, %r3734, 0;
	@%p255 bra 	BB1_353;
	bra.uni 	BB1_338;

BB1_353:
	mov.u32 	%r3753, 0;
	// inline asm
	shf.r.wrap.b32 %r3752, %r3753, %r34, %r3733;
	// inline asm
	and.b32  	%r3756, %r3752, %r350;
	and.b32  	%r3757, %r34, %r351;
	or.b32  	%r11686, %r3756, %r3757;
	bra.uni 	BB1_613;

BB1_1426:
	add.s32 	%r11690, %r30, %r30;
	setp.gt.u32	%p961, %r11690, 31;
	@%p961 bra 	BB1_778;

	and.b32  	%r7610, %r30, 3;
	mov.u32 	%r7611, 4;
	sub.s32 	%r7612, %r7611, %r7610;
	shl.b32 	%r7613, %r7612, 2;
	mov.u32 	%r7614, 1985229328;
	shr.u32 	%r7615, %r7614, %r7613;
	and.b32  	%r1549, %r7615, 65535;
	shr.u32 	%r7609, %r30, 2;
	mov.u32 	%r11666, 0;
	setp.gt.s32	%p962, %r7609, 3;
	@%p962 bra 	BB1_1435;

	setp.gt.s32	%p968, %r7609, 1;
	@%p968 bra 	BB1_1432;

	setp.eq.s32	%p971, %r7609, 0;
	@%p971 bra 	BB1_1445;
	bra.uni 	BB1_1430;

BB1_1445:
	// inline asm
	prmt.b32 %r11673, %r37, %r38, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11672, %r36, %r37, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11671, %r35, %r36, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11670, %r31, %r35, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11669, %r32, %r31, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11668, %r33, %r32, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11667, %r34, %r33, %r1549;
	// inline asm
	mov.u32 	%r7785, 0;
	// inline asm
	prmt.b32 %r11666, %r7785, %r34, %r1549;
	// inline asm
	bra.uni 	BB1_1446;

BB1_80:
	setp.eq.s32	%p29, %r1980, 102;
	@%p29 bra 	BB1_81;
	bra.uni 	BB1_10;

BB1_81:
	add.s32 	%r11690, %r30, %r30;
	setp.gt.u32	%p887, %r11690, 31;
	@%p887 bra 	BB1_778;

	mov.u32 	%r6664, 32;
	sub.s32 	%r6663, %r6664, %r30;
	mov.u32 	%r11640, 0;
	setp.gt.s32	%p888, %r6663, 15;
	@%p888 bra 	BB1_1339;

	setp.gt.s32	%p912, %r6663, 7;
	@%p912 bra 	BB1_1323;

	setp.gt.s32	%p924, %r6663, 3;
	@%p924 bra 	BB1_1316;

	setp.gt.s32	%p930, %r6663, 1;
	@%p930 bra 	BB1_1313;

	setp.eq.s32	%p933, %r6663, 0;
	@%p933 bra 	BB1_87;
	bra.uni 	BB1_1311;

BB1_87:
	mov.u32 	%r11632, %r35;
	mov.u32 	%r11633, %r36;
	mov.u32 	%r11634, %r37;
	mov.u32 	%r11635, %r38;
	mov.u32 	%r11636, %r34;
	mov.u32 	%r11637, %r33;
	mov.u32 	%r11638, %r32;
	mov.u32 	%r11639, %r31;
	bra.uni 	BB1_1390;

BB1_424:
	setp.ge.u32	%p305, %r40, %r30;
	@%p305 bra 	BB1_10;

	and.b32  	%r3920, %r39, 3;
	shl.b32 	%r3921, %r3920, 3;
	mov.u32 	%r3922, 255;
	shl.b32 	%r409, %r3922, %r3921;
	not.b32 	%r410, %r409;
	shr.u32 	%r3919, %r40, 2;
	setp.gt.s32	%p306, %r3919, 3;
	@%p306 bra 	BB1_433;

	setp.gt.s32	%p312, %r3919, 1;
	@%p312 bra 	BB1_430;

	setp.eq.s32	%p315, %r3919, 0;
	@%p315 bra 	BB1_443;
	bra.uni 	BB1_428;

BB1_443:
	and.b32  	%r3951, %r34, %r410;
	and.b32  	%r3952, %r409, %r34;
	shl.b32 	%r3953, %r3952, 1;
	and.b32  	%r3954, %r3953, %r409;
	or.b32  	%r11686, %r3954, %r3951;
	bra.uni 	BB1_613;

BB1_51:
	setp.eq.s32	%p43, %r1980, 82;
	@%p43 bra 	BB1_52;
	bra.uni 	BB1_10;

BB1_52:
	setp.ge.u32	%p293, %r40, %r30;
	@%p293 bra 	BB1_10;

	and.b32  	%r3884, %r39, 3;
	shl.b32 	%r3885, %r3884, 3;
	mov.u32 	%r3886, 255;
	shl.b32 	%r399, %r3886, %r3885;
	not.b32 	%r400, %r399;
	shr.u32 	%r3883, %r40, 2;
	setp.gt.s32	%p294, %r3883, 3;
	@%p294 bra 	BB1_414;

	setp.gt.s32	%p300, %r3883, 1;
	@%p300 bra 	BB1_411;

	setp.eq.s32	%p303, %r3883, 0;
	@%p303 bra 	BB1_56;
	bra.uni 	BB1_409;

BB1_56:
	and.b32  	%r3915, %r34, %r400;
	and.b32  	%r3916, %r399, %r34;
	shr.u32 	%r3917, %r3916, 1;
	and.b32  	%r3918, %r3917, %r399;
	or.b32  	%r11686, %r3918, %r3915;
	bra.uni 	BB1_613;

BB1_972:
	mov.b32	{%rs277, %rs278}, %r34;
	shr.u16 	%rs279, %rs278, 8;
	and.b16  	%rs280, %rs278, 255;
	shr.u16 	%rs281, %rs277, 8;
	cvt.u16.u32	%rs282, %r39;
	and.b16  	%rs283, %rs282, 255;
	and.b16  	%rs284, %rs277, 255;
	setp.eq.s16	%p636, %rs284, %rs283;
	cvt.u16.u32	%rs285, %r41;
	setp.eq.s16	%p637, %rs281, %rs283;
	setp.eq.s16	%p638, %rs280, %rs283;
	setp.eq.s16	%p639, %rs279, %rs283;
	selp.b16	%rs286, %rs285, %rs281, %p637;
	cvt.u32.u16	%r5068, %rs286;
	selp.b16	%rs287, %rs285, %rs277, %p636;
	and.b16  	%rs288, %rs287, 255;
	cvt.u32.u16	%r5069, %rs288;
	prmt.b32 	%r5070, %r5068, %r5069, 30212;
	selp.b16	%rs289, %rs285, %rs279, %p639;
	cvt.u32.u16	%r5071, %rs289;
	selp.b16	%rs290, %rs285, %rs278, %p638;
	and.b16  	%rs291, %rs290, 255;
	cvt.u32.u16	%r5072, %rs291;
	prmt.b32 	%r5073, %r5071, %r5072, 30212;
	prmt.b32 	%r11686, %r5073, %r5070, 4180;
	mov.b32	{%rs292, %rs293}, %r33;
	shr.u16 	%rs294, %rs293, 8;
	and.b16  	%rs295, %rs293, 255;
	shr.u16 	%rs296, %rs292, 8;
	and.b16  	%rs297, %rs292, 255;
	setp.eq.s16	%p640, %rs297, %rs283;
	setp.eq.s16	%p641, %rs296, %rs283;
	setp.eq.s16	%p642, %rs295, %rs283;
	setp.eq.s16	%p643, %rs294, %rs283;
	selp.b16	%rs298, %rs285, %rs296, %p641;
	cvt.u32.u16	%r5074, %rs298;
	selp.b16	%rs299, %rs285, %rs292, %p640;
	and.b16  	%rs300, %rs299, 255;
	cvt.u32.u16	%r5075, %rs300;
	prmt.b32 	%r5076, %r5074, %r5075, 30212;
	selp.b16	%rs301, %rs285, %rs294, %p643;
	cvt.u32.u16	%r5077, %rs301;
	selp.b16	%rs302, %rs285, %rs293, %p642;
	and.b16  	%rs303, %rs302, 255;
	cvt.u32.u16	%r5078, %rs303;
	prmt.b32 	%r5079, %r5077, %r5078, 30212;
	prmt.b32 	%r11687, %r5079, %r5076, 4180;
	mov.b32	{%rs304, %rs305}, %r32;
	shr.u16 	%rs306, %rs305, 8;
	and.b16  	%rs307, %rs305, 255;
	shr.u16 	%rs308, %rs304, 8;
	and.b16  	%rs309, %rs304, 255;
	setp.eq.s16	%p644, %rs309, %rs283;
	setp.eq.s16	%p645, %rs308, %rs283;
	setp.eq.s16	%p646, %rs307, %rs283;
	setp.eq.s16	%p647, %rs306, %rs283;
	selp.b16	%rs310, %rs285, %rs308, %p645;
	cvt.u32.u16	%r5080, %rs310;
	selp.b16	%rs311, %rs285, %rs304, %p644;
	and.b16  	%rs312, %rs311, 255;
	cvt.u32.u16	%r5081, %rs312;
	prmt.b32 	%r5082, %r5080, %r5081, 30212;
	selp.b16	%rs313, %rs285, %rs306, %p647;
	cvt.u32.u16	%r5083, %rs313;
	selp.b16	%rs314, %rs285, %rs305, %p646;
	and.b16  	%rs315, %rs314, 255;
	cvt.u32.u16	%r5084, %rs315;
	prmt.b32 	%r5085, %r5083, %r5084, 30212;
	prmt.b32 	%r11688, %r5085, %r5082, 4180;
	mov.b32	{%rs316, %rs317}, %r31;
	shr.u16 	%rs318, %rs317, 8;
	and.b16  	%rs319, %rs317, 255;
	shr.u16 	%rs320, %rs316, 8;
	and.b16  	%rs321, %rs316, 255;
	setp.eq.s16	%p648, %rs321, %rs283;
	setp.eq.s16	%p649, %rs320, %rs283;
	setp.eq.s16	%p650, %rs319, %rs283;
	setp.eq.s16	%p651, %rs318, %rs283;
	selp.b16	%rs322, %rs285, %rs320, %p649;
	cvt.u32.u16	%r5086, %rs322;
	selp.b16	%rs323, %rs285, %rs316, %p648;
	and.b16  	%rs324, %rs323, 255;
	cvt.u32.u16	%r5087, %rs324;
	prmt.b32 	%r5088, %r5086, %r5087, 30212;
	selp.b16	%rs325, %rs285, %rs318, %p651;
	cvt.u32.u16	%r5089, %rs325;
	selp.b16	%rs326, %rs285, %rs317, %p650;
	and.b16  	%rs327, %rs326, 255;
	cvt.u32.u16	%r5090, %rs327;
	prmt.b32 	%r5091, %r5089, %r5090, 30212;
	prmt.b32 	%r11689, %r5091, %r5088, 4180;
	mov.b32	{%rs328, %rs329}, %r35;
	shr.u16 	%rs330, %rs329, 8;
	and.b16  	%rs331, %rs329, 255;
	shr.u16 	%rs332, %rs328, 8;
	and.b16  	%rs333, %rs328, 255;
	setp.eq.s16	%p652, %rs333, %rs283;
	setp.eq.s16	%p653, %rs332, %rs283;
	setp.eq.s16	%p654, %rs331, %rs283;
	setp.eq.s16	%p655, %rs330, %rs283;
	selp.b16	%rs334, %rs285, %rs332, %p653;
	cvt.u32.u16	%r5092, %rs334;
	selp.b16	%rs335, %rs285, %rs328, %p652;
	and.b16  	%rs336, %rs335, 255;
	cvt.u32.u16	%r5093, %rs336;
	prmt.b32 	%r5094, %r5092, %r5093, 30212;
	selp.b16	%rs337, %rs285, %rs330, %p655;
	cvt.u32.u16	%r5095, %rs337;
	selp.b16	%rs338, %rs285, %rs329, %p654;
	and.b16  	%rs339, %rs338, 255;
	cvt.u32.u16	%r5096, %rs339;
	prmt.b32 	%r5097, %r5095, %r5096, 30212;
	prmt.b32 	%r11685, %r5097, %r5094, 4180;
	mov.b32	{%rs340, %rs341}, %r36;
	shr.u16 	%rs342, %rs341, 8;
	and.b16  	%rs343, %rs341, 255;
	shr.u16 	%rs344, %rs340, 8;
	and.b16  	%rs345, %rs340, 255;
	setp.eq.s16	%p656, %rs345, %rs283;
	setp.eq.s16	%p657, %rs344, %rs283;
	setp.eq.s16	%p658, %rs343, %rs283;
	setp.eq.s16	%p659, %rs342, %rs283;
	selp.b16	%rs346, %rs285, %rs344, %p657;
	cvt.u32.u16	%r5098, %rs346;
	selp.b16	%rs347, %rs285, %rs340, %p656;
	and.b16  	%rs348, %rs347, 255;
	cvt.u32.u16	%r5099, %rs348;
	prmt.b32 	%r5100, %r5098, %r5099, 30212;
	selp.b16	%rs349, %rs285, %rs342, %p659;
	cvt.u32.u16	%r5101, %rs349;
	selp.b16	%rs350, %rs285, %rs341, %p658;
	and.b16  	%rs351, %rs350, 255;
	cvt.u32.u16	%r5102, %rs351;
	prmt.b32 	%r5103, %r5101, %r5102, 30212;
	prmt.b32 	%r11684, %r5103, %r5100, 4180;
	mov.b32	{%rs352, %rs353}, %r37;
	shr.u16 	%rs354, %rs353, 8;
	and.b16  	%rs355, %rs353, 255;
	shr.u16 	%rs356, %rs352, 8;
	and.b16  	%rs357, %rs352, 255;
	setp.eq.s16	%p660, %rs357, %rs283;
	setp.eq.s16	%p661, %rs356, %rs283;
	setp.eq.s16	%p662, %rs355, %rs283;
	setp.eq.s16	%p663, %rs354, %rs283;
	selp.b16	%rs358, %rs285, %rs356, %p661;
	cvt.u32.u16	%r5104, %rs358;
	selp.b16	%rs359, %rs285, %rs352, %p660;
	and.b16  	%rs360, %rs359, 255;
	cvt.u32.u16	%r5105, %rs360;
	prmt.b32 	%r5106, %r5104, %r5105, 30212;
	selp.b16	%rs361, %rs285, %rs354, %p663;
	cvt.u32.u16	%r5107, %rs361;
	selp.b16	%rs362, %rs285, %rs353, %p662;
	and.b16  	%rs363, %rs362, 255;
	cvt.u32.u16	%r5108, %rs363;
	prmt.b32 	%r5109, %r5107, %r5108, 30212;
	prmt.b32 	%r11683, %r5109, %r5106, 4180;
	mov.b32	{%rs364, %rs365}, %r38;
	shr.u16 	%rs366, %rs365, 8;
	and.b16  	%rs367, %rs365, 255;
	shr.u16 	%rs368, %rs364, 8;
	and.b16  	%rs369, %rs364, 255;
	setp.eq.s16	%p664, %rs369, %rs283;
	setp.eq.s16	%p665, %rs368, %rs283;
	setp.eq.s16	%p666, %rs367, %rs283;
	setp.eq.s16	%p667, %rs366, %rs283;
	selp.b16	%rs370, %rs285, %rs368, %p665;
	cvt.u32.u16	%r5110, %rs370;
	selp.b16	%rs371, %rs285, %rs364, %p664;
	and.b16  	%rs372, %rs371, 255;
	cvt.u32.u16	%r5111, %rs372;
	prmt.b32 	%r5112, %r5110, %r5111, 30212;
	selp.b16	%rs373, %rs285, %rs366, %p667;
	cvt.u32.u16	%r5113, %rs373;
	selp.b16	%rs374, %rs285, %rs365, %p666;
	and.b16  	%rs375, %rs374, 255;
	cvt.u32.u16	%r5114, %rs375;
	prmt.b32 	%r5115, %r5113, %r5114, 30212;
	prmt.b32 	%r11682, %r5115, %r5112, 4180;
	mov.u32 	%r11690, %r30;
	bra.uni 	BB1_1547;

BB1_114:
	setp.eq.s32	%p16, %r1980, 117;
	@%p16 bra 	BB1_115;
	bra.uni 	BB1_10;

BB1_115:
	and.b32  	%r8758, %r34, 1077952576;
	shr.u32 	%r8759, %r8758, 1;
	and.b32  	%r8760, %r34, -2139062144;
	shr.u32 	%r8761, %r8760, 2;
	not.b32 	%r8762, %r8761;
	and.b32  	%r8763, %r8759, %r8762;
	and.b32  	%r8764, %r34, 522133279;
	add.s32 	%r8765, %r8764, 522133279;
	mov.u32 	%r8766, -84215046;
	sub.s32 	%r8767, %r8766, %r8764;
	and.b32  	%r8768, %r8763, %r8767;
	and.b32  	%r8769, %r8768, %r8765;
	not.b32 	%r8770, %r8769;
	and.b32  	%r11686, %r34, %r8770;
	and.b32  	%r8771, %r33, 1077952576;
	shr.u32 	%r8772, %r8771, 1;
	and.b32  	%r8773, %r33, -2139062144;
	shr.u32 	%r8774, %r8773, 2;
	not.b32 	%r8775, %r8774;
	and.b32  	%r8776, %r8772, %r8775;
	and.b32  	%r8777, %r33, 522133279;
	add.s32 	%r8778, %r8777, 522133279;
	sub.s32 	%r8779, %r8766, %r8777;
	and.b32  	%r8780, %r8776, %r8779;
	and.b32  	%r8781, %r8780, %r8778;
	not.b32 	%r8782, %r8781;
	and.b32  	%r11687, %r33, %r8782;
	and.b32  	%r8783, %r32, 1077952576;
	shr.u32 	%r8784, %r8783, 1;
	and.b32  	%r8785, %r32, -2139062144;
	shr.u32 	%r8786, %r8785, 2;
	not.b32 	%r8787, %r8786;
	and.b32  	%r8788, %r8784, %r8787;
	and.b32  	%r8789, %r32, 522133279;
	add.s32 	%r8790, %r8789, 522133279;
	sub.s32 	%r8791, %r8766, %r8789;
	and.b32  	%r8792, %r8788, %r8791;
	and.b32  	%r8793, %r8792, %r8790;
	not.b32 	%r8794, %r8793;
	and.b32  	%r11688, %r32, %r8794;
	and.b32  	%r8795, %r31, 1077952576;
	shr.u32 	%r8796, %r8795, 1;
	and.b32  	%r8797, %r31, -2139062144;
	shr.u32 	%r8798, %r8797, 2;
	not.b32 	%r8799, %r8798;
	and.b32  	%r8800, %r8796, %r8799;
	and.b32  	%r8801, %r31, 522133279;
	add.s32 	%r8802, %r8801, 522133279;
	sub.s32 	%r8803, %r8766, %r8801;
	and.b32  	%r8804, %r8800, %r8803;
	and.b32  	%r8805, %r8804, %r8802;
	not.b32 	%r8806, %r8805;
	and.b32  	%r11689, %r31, %r8806;
	and.b32  	%r8807, %r35, 1077952576;
	shr.u32 	%r8808, %r8807, 1;
	and.b32  	%r8809, %r35, -2139062144;
	shr.u32 	%r8810, %r8809, 2;
	not.b32 	%r8811, %r8810;
	and.b32  	%r8812, %r8808, %r8811;
	and.b32  	%r8813, %r35, 522133279;
	add.s32 	%r8814, %r8813, 522133279;
	sub.s32 	%r8815, %r8766, %r8813;
	and.b32  	%r8816, %r8812, %r8815;
	and.b32  	%r8817, %r8816, %r8814;
	not.b32 	%r8818, %r8817;
	and.b32  	%r11685, %r35, %r8818;
	and.b32  	%r8819, %r36, 1077952576;
	shr.u32 	%r8820, %r8819, 1;
	and.b32  	%r8821, %r36, -2139062144;
	shr.u32 	%r8822, %r8821, 2;
	not.b32 	%r8823, %r8822;
	and.b32  	%r8824, %r8820, %r8823;
	and.b32  	%r8825, %r36, 522133279;
	add.s32 	%r8826, %r8825, 522133279;
	sub.s32 	%r8827, %r8766, %r8825;
	and.b32  	%r8828, %r8824, %r8827;
	and.b32  	%r8829, %r8828, %r8826;
	not.b32 	%r8830, %r8829;
	and.b32  	%r11684, %r36, %r8830;
	and.b32  	%r8831, %r37, 1077952576;
	shr.u32 	%r8832, %r8831, 1;
	and.b32  	%r8833, %r37, -2139062144;
	shr.u32 	%r8834, %r8833, 2;
	not.b32 	%r8835, %r8834;
	and.b32  	%r8836, %r8832, %r8835;
	and.b32  	%r8837, %r37, 522133279;
	add.s32 	%r8838, %r8837, 522133279;
	sub.s32 	%r8839, %r8766, %r8837;
	and.b32  	%r8840, %r8836, %r8839;
	and.b32  	%r8841, %r8840, %r8838;
	not.b32 	%r8842, %r8841;
	and.b32  	%r11683, %r37, %r8842;
	and.b32  	%r8843, %r38, 1077952576;
	shr.u32 	%r8844, %r8843, 1;
	and.b32  	%r8845, %r38, -2139062144;
	shr.u32 	%r8846, %r8845, 2;
	not.b32 	%r8847, %r8846;
	and.b32  	%r8848, %r8844, %r8847;
	and.b32  	%r8849, %r38, 522133279;
	add.s32 	%r8850, %r8849, 522133279;
	sub.s32 	%r8851, %r8766, %r8849;
	and.b32  	%r8852, %r8848, %r8851;
	and.b32  	%r8853, %r8852, %r8850;
	not.b32 	%r8854, %r8853;
	and.b32  	%r11682, %r38, %r8854;
	bra.uni 	BB1_1546;

BB1_947:
	mov.u64 	%rd2763, 0;
	add.u64 	%rd122, %SP, 0;
	cvta.to.local.u64 	%rd123, %rd122;
	st.local.v4.u32 	[%rd123], {%r34, %r33, %r32, %r31};
	st.local.v4.u32 	[%rd123+16], {%r35, %r36, %r37, %r38};
	add.u64 	%rd124, %SP, 32;
	cvta.to.local.u64 	%rd125, %rd124;
	st.local.v2.u64 	[%rd125], {%rd2763, %rd2763};
	st.local.v2.u64 	[%rd125+16], {%rd2763, %rd2763};
	cvt.u16.u32	%rs376, %r34;
	setp.eq.s32	%p623, %r30, 0;
	mov.u32 	%r11690, 0;
	@%p623 bra 	BB1_971;

	cvt.u16.u32	%rs2, %r39;
	and.b32  	%r879, %r30, 3;
	setp.eq.s32	%p624, %r879, 0;
	mov.u32 	%r11593, 0;
	mov.u32 	%r11690, %r11593;
	@%p624 bra 	BB1_961;

	setp.eq.s32	%p625, %r879, 1;
	mov.u32 	%r11588, 0;
	@%p625 bra 	BB1_950;
	bra.uni 	BB1_951;

BB1_950:
	mov.u32 	%r11690, %r11588;
	bra.uni 	BB1_958;

BB1_32:
	setp.eq.s32	%p50, %r1980, 68;
	@%p50 bra 	BB1_33;
	bra.uni 	BB1_10;

BB1_33:
	setp.ge.u32	%p826, %r40, %r30;
	@%p826 bra 	BB1_778;

	mov.u32 	%r6407, 8;
	// inline asm
	shf.r.wrap.b32 %r6376, %r34, %r33, %r6407;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r33, %r32, %r6407;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r32, %r31, %r6407;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r31, %r35, %r6407;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r35, %r36, %r6407;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r36, %r37, %r6407;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r37, %r38, %r6407;
	// inline asm
	mov.u32 	%r6406, 0;
	// inline asm
	shf.r.wrap.b32 %r11682, %r38, %r6406, %r6407;
	// inline asm
	and.b32  	%r6409, %r39, 3;
	shl.b32 	%r6410, %r6409, 3;
	mov.u32 	%r6411, 1;
	shl.b32 	%r6412, %r6411, %r6410;
	add.s32 	%r1226, %r6412, -1;
	neg.s32 	%r1227, %r6412;
	shr.u32 	%r6408, %r40, 2;
	setp.gt.s32	%p827, %r6408, 3;
	@%p827 bra 	BB1_1270;

	setp.gt.s32	%p833, %r6408, 1;
	@%p833 bra 	BB1_1267;

	setp.eq.s32	%p836, %r6408, 0;
	@%p836 bra 	BB1_37;
	bra.uni 	BB1_1265;

BB1_37:
	and.b32  	%r6427, %r1226, %r34;
	and.b32  	%r6428, %r6376, %r1227;
	or.b32  	%r11686, %r6428, %r6427;
	bra.uni 	BB1_1285;

BB1_1545:
	and.b32  	%r8855, %r34, 1077952576;
	shr.u32 	%r8856, %r8855, 1;
	and.b32  	%r8857, %r34, -2139062144;
	shr.u32 	%r8858, %r8857, 2;
	not.b32 	%r8859, %r8858;
	and.b32  	%r8860, %r8856, %r8859;
	and.b32  	%r8861, %r34, 522133279;
	add.s32 	%r8862, %r8861, 522133279;
	mov.u32 	%r8863, -84215046;
	sub.s32 	%r8864, %r8863, %r8861;
	and.b32  	%r8865, %r8860, %r8864;
	and.b32  	%r8866, %r8865, %r8862;
	or.b32  	%r11686, %r8866, %r34;
	and.b32  	%r8867, %r33, 1077952576;
	shr.u32 	%r8868, %r8867, 1;
	and.b32  	%r8869, %r33, -2139062144;
	shr.u32 	%r8870, %r8869, 2;
	not.b32 	%r8871, %r8870;
	and.b32  	%r8872, %r8868, %r8871;
	and.b32  	%r8873, %r33, 522133279;
	add.s32 	%r8874, %r8873, 522133279;
	sub.s32 	%r8875, %r8863, %r8873;
	and.b32  	%r8876, %r8872, %r8875;
	and.b32  	%r8877, %r8876, %r8874;
	or.b32  	%r11687, %r8877, %r33;
	and.b32  	%r8878, %r32, 1077952576;
	shr.u32 	%r8879, %r8878, 1;
	and.b32  	%r8880, %r32, -2139062144;
	shr.u32 	%r8881, %r8880, 2;
	not.b32 	%r8882, %r8881;
	and.b32  	%r8883, %r8879, %r8882;
	and.b32  	%r8884, %r32, 522133279;
	add.s32 	%r8885, %r8884, 522133279;
	sub.s32 	%r8886, %r8863, %r8884;
	and.b32  	%r8887, %r8883, %r8886;
	and.b32  	%r8888, %r8887, %r8885;
	or.b32  	%r11688, %r8888, %r32;
	and.b32  	%r8889, %r31, 1077952576;
	shr.u32 	%r8890, %r8889, 1;
	and.b32  	%r8891, %r31, -2139062144;
	shr.u32 	%r8892, %r8891, 2;
	not.b32 	%r8893, %r8892;
	and.b32  	%r8894, %r8890, %r8893;
	and.b32  	%r8895, %r31, 522133279;
	add.s32 	%r8896, %r8895, 522133279;
	sub.s32 	%r8897, %r8863, %r8895;
	and.b32  	%r8898, %r8894, %r8897;
	and.b32  	%r8899, %r8898, %r8896;
	or.b32  	%r11689, %r8899, %r31;
	and.b32  	%r8900, %r35, 1077952576;
	shr.u32 	%r8901, %r8900, 1;
	and.b32  	%r8902, %r35, -2139062144;
	shr.u32 	%r8903, %r8902, 2;
	not.b32 	%r8904, %r8903;
	and.b32  	%r8905, %r8901, %r8904;
	and.b32  	%r8906, %r35, 522133279;
	add.s32 	%r8907, %r8906, 522133279;
	sub.s32 	%r8908, %r8863, %r8906;
	and.b32  	%r8909, %r8905, %r8908;
	and.b32  	%r8910, %r8909, %r8907;
	or.b32  	%r11685, %r8910, %r35;
	and.b32  	%r8911, %r36, 1077952576;
	shr.u32 	%r8912, %r8911, 1;
	and.b32  	%r8913, %r36, -2139062144;
	shr.u32 	%r8914, %r8913, 2;
	not.b32 	%r8915, %r8914;
	and.b32  	%r8916, %r8912, %r8915;
	and.b32  	%r8917, %r36, 522133279;
	add.s32 	%r8918, %r8917, 522133279;
	sub.s32 	%r8919, %r8863, %r8917;
	and.b32  	%r8920, %r8916, %r8919;
	and.b32  	%r8921, %r8920, %r8918;
	or.b32  	%r11684, %r8921, %r36;
	and.b32  	%r8922, %r37, 1077952576;
	shr.u32 	%r8923, %r8922, 1;
	and.b32  	%r8924, %r37, -2139062144;
	shr.u32 	%r8925, %r8924, 2;
	not.b32 	%r8926, %r8925;
	and.b32  	%r8927, %r8923, %r8926;
	and.b32  	%r8928, %r37, 522133279;
	add.s32 	%r8929, %r8928, 522133279;
	sub.s32 	%r8930, %r8863, %r8928;
	and.b32  	%r8931, %r8927, %r8930;
	and.b32  	%r8932, %r8931, %r8929;
	or.b32  	%r11683, %r8932, %r37;
	and.b32  	%r8933, %r38, 1077952576;
	shr.u32 	%r8934, %r8933, 1;
	and.b32  	%r8935, %r38, -2139062144;
	shr.u32 	%r8936, %r8935, 2;
	not.b32 	%r8937, %r8936;
	and.b32  	%r8938, %r8934, %r8937;
	and.b32  	%r8939, %r38, 522133279;
	add.s32 	%r8940, %r8939, 522133279;
	sub.s32 	%r8941, %r8863, %r8939;
	and.b32  	%r8942, %r8938, %r8941;
	and.b32  	%r8943, %r8942, %r8940;
	or.b32  	%r11682, %r8943, %r38;
	bra.uni 	BB1_1546;

BB1_95:
	setp.eq.s32	%p23, %r1980, 112;
	@%p23 bra 	BB1_96;
	bra.uni 	BB1_10;

BB1_96:
	mad.lo.s32 	%r7413, %r40, %r30, %r30;
	setp.gt.u32	%p946, %r7413, 31;
	setp.eq.s32	%p947, %r40, 0;
	or.pred  	%p948, %p946, %p947;
	mov.u32 	%r7412, 0;
	mov.u32 	%r11648, %r7412;
	mov.u32 	%r11690, %r30;
	mov.u32 	%r11689, %r31;
	mov.u32 	%r11688, %r32;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11682, %r38;
	@%p948 bra 	BB1_778;

BB1_97:
	and.b32  	%r7423, %r11690, 3;
	mov.u32 	%r7424, 4;
	sub.s32 	%r7425, %r7424, %r7423;
	shl.b32 	%r7426, %r7425, 2;
	mov.u32 	%r7427, 1985229328;
	shr.u32 	%r7428, %r7427, %r7426;
	and.b32  	%r1493, %r7428, 65535;
	shr.u32 	%r7422, %r11690, 2;
	setp.gt.s32	%p949, %r7422, 3;
	@%p949 bra 	BB1_1415;

	setp.gt.s32	%p955, %r7422, 1;
	@%p955 bra 	BB1_1412;

	setp.eq.s32	%p958, %r7422, 0;
	@%p958 bra 	BB1_100;
	bra.uni 	BB1_1410;

BB1_100:
	// inline asm
	prmt.b32 %r11665, %r37, %r38, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11664, %r36, %r37, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11663, %r35, %r36, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11662, %r31, %r35, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11661, %r32, %r31, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11660, %r33, %r32, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11659, %r34, %r33, %r1493;
	// inline asm
	mov.u32 	%r7598, 0;
	// inline asm
	prmt.b32 %r11658, %r7598, %r34, %r1493;
	// inline asm
	bra.uni 	BB1_1425;

BB1_1415:
	setp.gt.s32	%p950, %r7422, 5;
	@%p950 bra 	BB1_1419;

	setp.eq.s32	%p953, %r7422, 4;
	@%p953 bra 	BB1_1423;
	bra.uni 	BB1_1417;

BB1_1423:
	// inline asm
	prmt.b32 %r11665, %r32, %r31, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11664, %r33, %r32, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11663, %r34, %r33, %r1493;
	// inline asm
	mov.u32 	%r11658, 0;
	// inline asm
	prmt.b32 %r11662, %r11658, %r34, %r1493;
	// inline asm
	mov.u32 	%r11659, %r11658;
	mov.u32 	%r11660, %r11658;
	mov.u32 	%r11661, %r11658;
	bra.uni 	BB1_1425;

BB1_1412:
	setp.eq.s32	%p956, %r7422, 2;
	@%p956 bra 	BB1_1424;
	bra.uni 	BB1_1413;

BB1_1424:
	// inline asm
	prmt.b32 %r11665, %r35, %r36, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11664, %r31, %r35, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11663, %r32, %r31, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11662, %r33, %r32, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11661, %r34, %r33, %r1493;
	// inline asm
	mov.u32 	%r11658, 0;
	// inline asm
	prmt.b32 %r11660, %r11658, %r34, %r1493;
	// inline asm
	mov.u32 	%r11659, %r11658;
	bra.uni 	BB1_1425;

BB1_1419:
	setp.eq.s32	%p951, %r7422, 6;
	@%p951 bra 	BB1_1422;
	bra.uni 	BB1_1420;

BB1_1422:
	// inline asm
	prmt.b32 %r11665, %r34, %r33, %r1493;
	// inline asm
	mov.u32 	%r11658, 0;
	// inline asm
	prmt.b32 %r11664, %r11658, %r34, %r1493;
	// inline asm
	mov.u32 	%r11659, %r11658;
	mov.u32 	%r11660, %r11658;
	mov.u32 	%r11661, %r11658;
	mov.u32 	%r11662, %r11658;
	mov.u32 	%r11663, %r11658;
	bra.uni 	BB1_1425;

BB1_1410:
	setp.eq.s32	%p959, %r7422, 1;
	mov.u32 	%r11658, %r7412;
	mov.u32 	%r11659, %r7412;
	mov.u32 	%r11660, %r7412;
	mov.u32 	%r11661, %r7412;
	mov.u32 	%r11662, %r7412;
	mov.u32 	%r11663, %r7412;
	mov.u32 	%r11664, %r7412;
	mov.u32 	%r11665, %r7412;
	@%p959 bra 	BB1_1411;
	bra.uni 	BB1_1425;

BB1_1411:
	// inline asm
	prmt.b32 %r11665, %r36, %r37, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11664, %r35, %r36, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11663, %r31, %r35, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11662, %r32, %r31, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11661, %r33, %r32, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11660, %r34, %r33, %r1493;
	// inline asm
	mov.u32 	%r11658, 0;
	// inline asm
	prmt.b32 %r11659, %r11658, %r34, %r1493;
	// inline asm
	bra.uni 	BB1_1425;

BB1_1417:
	setp.eq.s32	%p954, %r7422, 5;
	mov.u32 	%r11658, %r7412;
	mov.u32 	%r11659, %r7412;
	mov.u32 	%r11660, %r7412;
	mov.u32 	%r11661, %r7412;
	mov.u32 	%r11662, %r7412;
	mov.u32 	%r11663, %r7412;
	mov.u32 	%r11664, %r7412;
	mov.u32 	%r11665, %r7412;
	@%p954 bra 	BB1_1418;
	bra.uni 	BB1_1425;

BB1_1418:
	// inline asm
	prmt.b32 %r11665, %r33, %r32, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11664, %r34, %r33, %r1493;
	// inline asm
	mov.u32 	%r11658, 0;
	// inline asm
	prmt.b32 %r11663, %r11658, %r34, %r1493;
	// inline asm
	mov.u32 	%r11659, %r11658;
	mov.u32 	%r11660, %r11658;
	mov.u32 	%r11661, %r11658;
	mov.u32 	%r11662, %r11658;
	bra.uni 	BB1_1425;

BB1_1413:
	setp.eq.s32	%p957, %r7422, 3;
	mov.u32 	%r11658, %r7412;
	mov.u32 	%r11659, %r7412;
	mov.u32 	%r11660, %r7412;
	mov.u32 	%r11661, %r7412;
	mov.u32 	%r11662, %r7412;
	mov.u32 	%r11663, %r7412;
	mov.u32 	%r11664, %r7412;
	mov.u32 	%r11665, %r7412;
	@%p957 bra 	BB1_1414;
	bra.uni 	BB1_1425;

BB1_1414:
	// inline asm
	prmt.b32 %r11665, %r31, %r35, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11664, %r32, %r31, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11663, %r33, %r32, %r1493;
	// inline asm
	// inline asm
	prmt.b32 %r11662, %r34, %r33, %r1493;
	// inline asm
	mov.u32 	%r11658, 0;
	// inline asm
	prmt.b32 %r11661, %r11658, %r34, %r1493;
	// inline asm
	mov.u32 	%r11659, %r11658;
	mov.u32 	%r11660, %r11658;
	bra.uni 	BB1_1425;

BB1_1420:
	setp.ne.s32	%p952, %r7422, 7;
	mov.u32 	%r11658, %r7412;
	mov.u32 	%r11659, %r7412;
	mov.u32 	%r11660, %r7412;
	mov.u32 	%r11661, %r7412;
	mov.u32 	%r11662, %r7412;
	mov.u32 	%r11663, %r7412;
	mov.u32 	%r11664, %r7412;
	mov.u32 	%r11665, %r7412;
	@%p952 bra 	BB1_1425;

	mov.u32 	%r11658, 0;
	// inline asm
	prmt.b32 %r11665, %r11658, %r34, %r1493;
	// inline asm
	mov.u32 	%r11659, %r11658;
	mov.u32 	%r11660, %r11658;
	mov.u32 	%r11661, %r11658;
	mov.u32 	%r11662, %r11658;
	mov.u32 	%r11663, %r11658;
	mov.u32 	%r11664, %r11658;

BB1_1425:
	or.b32  	%r11686, %r11658, %r11686;
	or.b32  	%r11687, %r11659, %r11687;
	or.b32  	%r11688, %r11660, %r11688;
	or.b32  	%r11689, %r11661, %r11689;
	or.b32  	%r11685, %r11662, %r11685;
	or.b32  	%r11684, %r11663, %r11684;
	or.b32  	%r11683, %r11664, %r11683;
	or.b32  	%r11682, %r11665, %r11682;
	add.s32 	%r11690, %r11690, %r30;
	add.s32 	%r11648, %r11648, 1;
	setp.lt.u32	%p960, %r11648, %r40;
	@%p960 bra 	BB1_97;
	bra.uni 	BB1_1547;

BB1_780:
	setp.eq.s32	%p509, %r30, 0;
	add.s32 	%r4252, %r40, %r30;
	setp.gt.u32	%p510, %r4252, 31;
	or.pred  	%p511, %p509, %p510;
	@%p511 bra 	BB1_10;

	add.s32 	%r4254, %r30, -1;
	and.b32  	%r4255, %r4254, 3;
	shl.b32 	%r4256, %r4255, 3;
	setp.lt.u32	%p512, %r4254, 4;
	selp.b32	%r4257, %r34, 0, %p512;
	and.b32  	%r4258, %r4254, -4;
	setp.eq.s32	%p513, %r4258, 4;
	selp.b32	%r4259, %r33, 0, %p513;
	setp.eq.s32	%p514, %r4258, 8;
	selp.b32	%r4260, %r32, 0, %p514;
	setp.eq.s32	%p515, %r4258, 12;
	selp.b32	%r4261, %r31, 0, %p515;
	setp.eq.s32	%p516, %r4258, 16;
	selp.b32	%r4262, %r35, 0, %p516;
	setp.eq.s32	%p517, %r4258, 20;
	selp.b32	%r4263, %r36, 0, %p517;
	setp.eq.s32	%p518, %r4258, 24;
	selp.b32	%r4264, %r37, 0, %p518;
	setp.gt.u32	%p519, %r4254, 27;
	selp.b32	%r4265, %r38, 0, %p519;
	or.b32  	%r4266, %r4265, %r4257;
	or.b32  	%r4267, %r4266, %r4259;
	or.b32  	%r4268, %r4267, %r4260;
	or.b32  	%r4269, %r4268, %r4261;
	or.b32  	%r4270, %r4269, %r4262;
	or.b32  	%r4271, %r4270, %r4263;
	or.b32  	%r4272, %r4271, %r4264;
	shr.u32 	%r4273, %r4272, %r4256;
	and.b32  	%r604, %r4273, 255;
	setp.eq.s32	%p520, %r40, 0;
	mov.u32 	%r11567, 0;
	mov.u32 	%r11690, %r30;
	mov.u32 	%r11689, %r31;
	mov.u32 	%r11688, %r32;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11682, %r38;
	@%p520 bra 	BB1_1547;

BB1_782:
	and.b32  	%r4274, %r11690, 3;
	shl.b32 	%r4275, %r4274, 3;
	shl.b32 	%r4276, %r604, %r4275;
	setp.lt.u32	%p521, %r11690, 4;
	selp.b32	%r4277, %r4276, 0, %p521;
	or.b32  	%r11686, %r4277, %r11686;
	and.b32  	%r4278, %r11690, -4;
	setp.eq.s32	%p522, %r4278, 4;
	selp.b32	%r4279, %r4276, 0, %p522;
	or.b32  	%r11687, %r4279, %r11687;
	setp.eq.s32	%p523, %r4278, 8;
	selp.b32	%r4280, %r4276, 0, %p523;
	or.b32  	%r11688, %r4280, %r11688;
	setp.eq.s32	%p524, %r4278, 12;
	selp.b32	%r4281, %r4276, 0, %p524;
	or.b32  	%r11689, %r4281, %r11689;
	setp.eq.s32	%p525, %r4278, 16;
	selp.b32	%r4282, %r4276, 0, %p525;
	or.b32  	%r11685, %r4282, %r11685;
	setp.eq.s32	%p526, %r4278, 20;
	selp.b32	%r4283, %r4276, 0, %p526;
	or.b32  	%r11684, %r4283, %r11684;
	setp.eq.s32	%p527, %r4278, 24;
	selp.b32	%r4284, %r4276, 0, %p527;
	or.b32  	%r11683, %r4284, %r11683;
	setp.gt.u32	%p528, %r11690, 27;
	selp.b32	%r4285, %r4276, 0, %p528;
	or.b32  	%r11682, %r4285, %r11682;
	add.s32 	%r11690, %r11690, 1;
	add.s32 	%r11567, %r11567, 1;
	setp.lt.u32	%p529, %r11567, %r40;
	@%p529 bra 	BB1_782;
	bra.uni 	BB1_1547;

BB1_69:
	setp.eq.s32	%p37, %r1980, 93;
	@%p37 bra 	BB1_70;
	bra.uni 	BB1_10;

BB1_70:
	setp.eq.s32	%p838, %r30, 0;
	mov.u32 	%r11690, 0;
	@%p838 bra 	BB1_1030;

	add.s32 	%r11690, %r30, -1;
	and.b32  	%r6430, %r11690, 3;
	shl.b32 	%r6431, %r6430, 3;
	mov.u32 	%r6432, 1;
	shl.b32 	%r6433, %r6432, %r6431;
	add.s32 	%r6434, %r6433, -1;
	setp.lt.u32	%p839, %r11690, 4;
	selp.b32	%r6435, %r6434, -1, %p839;
	and.b32  	%r11686, %r6435, %r34;
	and.b32  	%r6436, %r11690, -4;
	setp.eq.s32	%p840, %r6436, 4;
	selp.b32	%r6437, %r6434, -1, %p840;
	and.b32  	%r11687, %r6437, %r33;
	setp.eq.s32	%p841, %r6436, 8;
	selp.b32	%r6438, %r6434, -1, %p841;
	and.b32  	%r11688, %r6438, %r32;
	setp.eq.s32	%p842, %r6436, 12;
	selp.b32	%r6439, %r6434, -1, %p842;
	and.b32  	%r11689, %r6439, %r31;
	setp.eq.s32	%p843, %r6436, 16;
	selp.b32	%r6440, %r6434, -1, %p843;
	and.b32  	%r11685, %r6440, %r35;
	setp.eq.s32	%p844, %r6436, 20;
	selp.b32	%r6441, %r6434, -1, %p844;
	and.b32  	%r11684, %r6441, %r36;
	setp.eq.s32	%p845, %r6436, 24;
	selp.b32	%r6442, %r6434, -1, %p845;
	and.b32  	%r11683, %r6442, %r37;
	setp.gt.u32	%p846, %r11690, 27;
	selp.b32	%r6443, %r6434, -1, %p846;
	and.b32  	%r11682, %r6443, %r38;
	bra.uni 	BB1_1547;

BB1_783:
	setp.eq.s32	%p530, %r30, 0;
	add.s32 	%r11690, %r40, %r30;
	setp.gt.u32	%p531, %r11690, 31;
	or.pred  	%p532, %p530, %p531;
	@%p532 bra 	BB1_10;

	and.b32  	%r626, %r34, 255;
	setp.gt.s32	%p533, %r40, 15;
	@%p533 bra 	BB1_814;

	setp.gt.s32	%p557, %r40, 7;
	@%p557 bra 	BB1_798;

	setp.gt.s32	%p569, %r40, 3;
	@%p569 bra 	BB1_791;

	setp.eq.s32	%p575, %r40, 1;
	@%p575 bra 	BB1_863;

	setp.eq.s32	%p576, %r40, 2;
	@%p576 bra 	BB1_862;
	bra.uni 	BB1_789;

BB1_862:
	mov.u32 	%r4786, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r4786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r4786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r4786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r31, %r35, %r4786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r31, %r32, %r31, %r4786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r33, %r32, %r4786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r34, %r33, %r4786;
	// inline asm
	mov.u32 	%r4784, 0;
	// inline asm
	shf.r.wrap.b32 %r11686, %r4784, %r34, %r4786;
	// inline asm
	bra.uni 	BB1_866;

BB1_127:
	setp.eq.s32	%p10, %r1980, 125;
	@%p10 bra 	BB1_128;
	bra.uni 	BB1_10;

BB1_128:
	setp.eq.s32	%p848, %r30, 0;
	mov.u32 	%r11690, 0;
	@%p848 bra 	BB1_1030;

	add.s32 	%r6511, %r30, -1;
	shl.b32 	%r6512, %r6511, 3;
	and.b32  	%r6513, %r6512, 24;
	setp.lt.u32	%p849, %r6511, 4;
	selp.b32	%r6514, %r34, 0, %p849;
	and.b32  	%r6515, %r6511, -4;
	setp.eq.s32	%p850, %r6515, 4;
	selp.b32	%r6516, %r33, 0, %p850;
	setp.eq.s32	%p851, %r6515, 8;
	selp.b32	%r6517, %r32, 0, %p851;
	setp.eq.s32	%p852, %r6515, 12;
	selp.b32	%r6518, %r31, 0, %p852;
	setp.eq.s32	%p853, %r6515, 16;
	selp.b32	%r6519, %r35, 0, %p853;
	setp.eq.s32	%p854, %r6515, 20;
	selp.b32	%r6520, %r36, 0, %p854;
	setp.eq.s32	%p855, %r6515, 24;
	selp.b32	%r6521, %r37, 0, %p855;
	setp.gt.u32	%p856, %r6511, 27;
	selp.b32	%r6522, %r38, 0, %p856;
	or.b32  	%r6523, %r6522, %r6514;
	or.b32  	%r6524, %r6523, %r6516;
	or.b32  	%r6525, %r6524, %r6517;
	or.b32  	%r6526, %r6525, %r6518;
	or.b32  	%r6527, %r6526, %r6519;
	or.b32  	%r6528, %r6527, %r6520;
	or.b32  	%r6529, %r6528, %r6521;
	shr.u32 	%r6530, %r6529, %r6513;
	and.b32  	%r6531, %r6530, 255;
	mov.u32 	%r6509, 24;
	// inline asm
	shf.r.wrap.b32 %r6478, %r37, %r38, %r6509;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r36, %r37, %r6509;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r35, %r36, %r6509;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r31, %r35, %r6509;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r32, %r31, %r6509;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r33, %r32, %r6509;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r34, %r33, %r6509;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r6506, %r11682, %r34, %r6509;
	// inline asm
	or.b32  	%r11686, %r6506, %r6531;
	shl.b32 	%r6532, %r30, 3;
	and.b32  	%r6533, %r6532, 24;
	mov.u32 	%r6534, 1;
	shl.b32 	%r6535, %r6534, %r6533;
	add.s32 	%r1271, %r6535, -1;
	shr.u32 	%r6510, %r30, 2;
	setp.gt.s32	%p857, %r6510, 3;
	@%p857 bra 	BB1_1291;

	setp.gt.s32	%p863, %r6510, 1;
	@%p863 bra 	BB1_1288;

	setp.eq.s32	%p866, %r6510, 0;
	@%p866 bra 	BB1_1304;
	bra.uni 	BB1_132;

BB1_1304:
	and.b32  	%r11686, %r11686, %r1271;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11687, %r11682;
	bra.uni 	BB1_1302;

BB1_378:
	setp.gt.s32	%p271, %r3811, 5;
	@%p271 bra 	BB1_382;

	setp.eq.s32	%p274, %r3811, 4;
	@%p274 bra 	BB1_386;
	bra.uni 	BB1_380;

BB1_386:
	and.b32  	%r3827, %r35, %r378;
	and.b32  	%r3828, %r377, %r35;
	sub.s32 	%r3829, %r3828, %r379;
	and.b32  	%r3830, %r3829, %r377;
	or.b32  	%r11685, %r3830, %r3827;
	bra.uni 	BB1_648;

BB1_1034:
	setp.gt.s32	%p696, %r5190, 5;
	@%p696 bra 	BB1_1038;

	setp.eq.s32	%p699, %r5190, 4;
	@%p699 bra 	BB1_1042;
	bra.uni 	BB1_1036;

BB1_1042:
	and.b32  	%r5205, %r948, %r35;
	or.b32  	%r5206, %r5205, %r947;
	and.b32  	%r5207, %r11685, %r949;
	or.b32  	%r11685, %r5206, %r5207;
	bra.uni 	BB1_752;

BB1_1532:
	setp.gt.s32	%p1020, %r8350, 5;
	@%p1020 bra 	BB1_1536;

	setp.eq.s32	%p1023, %r8350, 4;
	@%p1023 bra 	BB1_1540;
	bra.uni 	BB1_1534;

BB1_1540:
	and.b32  	%r8393, %r35, 1077952576;
	shr.u32 	%r8394, %r8393, 1;
	and.b32  	%r8395, %r35, -2139062144;
	shr.u32 	%r8396, %r8395, 2;
	not.b32 	%r8397, %r8396;
	and.b32  	%r8398, %r8394, %r8397;
	and.b32  	%r8399, %r35, 522133279;
	add.s32 	%r8400, %r8399, 522133279;
	mov.u32 	%r8401, -84215046;
	sub.s32 	%r8402, %r8401, %r8399;
	and.b32  	%r8403, %r8398, %r8402;
	and.b32  	%r8404, %r8403, %r8400;
	and.b32  	%r8405, %r8404, %r1726;
	xor.b32  	%r11685, %r8405, %r35;
	bra.uni 	BB1_1020;

BB1_1188:
	setp.gt.s32	%p771, %r40, 23;
	@%p771 bra 	BB1_1206;

	setp.gt.s32	%p783, %r40, 19;
	@%p783 bra 	BB1_1198;

	setp.gt.s32	%p789, %r40, 17;
	@%p789 bra 	BB1_1194;

	setp.eq.s32	%p792, %r40, 16;
	@%p792 bra 	BB1_1229;
	bra.uni 	BB1_1192;

BB1_1229:
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11686, %r35;
	mov.u32 	%r11687, %r36;
	mov.u32 	%r11688, %r37;
	bra.uni 	BB1_1243;

BB1_1469:
	setp.gt.s32	%p974, %r7788, 23;
	@%p974 bra 	BB1_1485;

	setp.gt.s32	%p986, %r7788, 19;
	@%p986 bra 	BB1_1478;

	setp.gt.s32	%p992, %r7788, 17;
	@%p992 bra 	BB1_1475;

	setp.eq.s32	%p995, %r7788, 16;
	@%p995 bra 	BB1_1508;
	bra.uni 	BB1_1473;

BB1_1508:
	mov.u32 	%r11678, 0;
	mov.u32 	%r38, %r31;
	mov.u32 	%r37, %r32;
	mov.u32 	%r36, %r33;
	mov.u32 	%r35, %r34;
	bra.uni 	BB1_1509;

BB1_398:
	setp.gt.s32	%p283, %r3847, 5;
	@%p283 bra 	BB1_402;

	setp.eq.s32	%p286, %r3847, 4;
	@%p286 bra 	BB1_406;
	bra.uni 	BB1_400;

BB1_406:
	and.b32  	%r3863, %r35, %r389;
	and.b32  	%r3864, %r388, %r35;
	add.s32 	%r3865, %r3864, %r390;
	and.b32  	%r3866, %r3865, %r388;
	or.b32  	%r11685, %r3866, %r3863;
	bra.uni 	BB1_648;

BB1_1080:
	setp.gt.s32	%p710, %r42, 23;
	@%p710 bra 	BB1_1098;

	setp.gt.s32	%p722, %r42, 19;
	@%p722 bra 	BB1_1090;

	setp.gt.s32	%p728, %r42, 17;
	@%p728 bra 	BB1_1086;

	setp.eq.s32	%p731, %r42, 16;
	@%p731 bra 	BB1_1124;
	bra.uni 	BB1_1084;

BB1_1124:
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r35;
	mov.u32 	%r11687, %r36;
	mov.u32 	%r11688, %r37;
	mov.u32 	%r11689, %r38;
	bra.uni 	BB1_1133;

BB1_1009:
	setp.gt.s32	%p682, %r5149, 5;
	@%p682 bra 	BB1_1014;

	setp.eq.s32	%p685, %r5149, 4;
	@%p685 bra 	BB1_1019;
	bra.uni 	BB1_1011;

BB1_1019:
	and.b32  	%r5157, %r35, %r930;
	or.b32  	%r11685, %r5157, %r929;

BB1_1020:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	bra.uni 	BB1_14;

BB1_477:
	setp.gt.s32	%p321, %r40, 23;
	@%p321 bra 	BB1_493;

	setp.gt.s32	%p333, %r40, 19;
	@%p333 bra 	BB1_486;

	setp.gt.s32	%p339, %r40, 17;
	@%p339 bra 	BB1_483;

	setp.eq.s32	%p342, %r40, 16;
	@%p342 bra 	BB1_515;
	bra.uni 	BB1_481;

BB1_515:
	and.b32  	%r11557, %r35, 255;
	bra.uni 	BB1_524;

BB1_1435:
	setp.gt.s32	%p963, %r7609, 5;
	@%p963 bra 	BB1_1439;

	setp.eq.s32	%p966, %r7609, 4;
	@%p966 bra 	BB1_1443;
	bra.uni 	BB1_1437;

BB1_1443:
	// inline asm
	prmt.b32 %r11673, %r32, %r31, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11672, %r33, %r32, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11671, %r34, %r33, %r1549;
	// inline asm
	mov.u32 	%r11666, 0;
	// inline asm
	prmt.b32 %r11670, %r11666, %r34, %r1549;
	// inline asm
	mov.u32 	%r11667, %r11666;
	mov.u32 	%r11668, %r11666;
	mov.u32 	%r11669, %r11666;
	bra.uni 	BB1_1446;

BB1_433:
	setp.gt.s32	%p307, %r3919, 5;
	@%p307 bra 	BB1_437;

	setp.eq.s32	%p310, %r3919, 4;
	@%p310 bra 	BB1_441;
	bra.uni 	BB1_435;

BB1_441:
	and.b32  	%r3935, %r35, %r410;
	and.b32  	%r3936, %r409, %r35;
	shl.b32 	%r3937, %r3936, 1;
	and.b32  	%r3938, %r3937, %r409;
	or.b32  	%r11685, %r3938, %r3935;
	bra.uni 	BB1_648;

BB1_814:
	setp.gt.s32	%p534, %r40, 23;
	@%p534 bra 	BB1_830;

	setp.gt.s32	%p546, %r40, 19;
	@%p546 bra 	BB1_823;

	setp.gt.s32	%p552, %r40, 17;
	@%p552 bra 	BB1_820;

	setp.eq.s32	%p555, %r40, 16;
	@%p555 bra 	BB1_853;
	bra.uni 	BB1_818;

BB1_853:
	mov.u32 	%r11686, 0;
	mov.u32 	%r38, %r31;
	mov.u32 	%r37, %r32;
	mov.u32 	%r36, %r33;
	mov.u32 	%r35, %r34;
	bra.uni 	BB1_854;

BB1_375:
	setp.eq.s32	%p277, %r3811, 2;
	@%p277 bra 	BB1_387;
	bra.uni 	BB1_376;

BB1_387:
	and.b32  	%r3835, %r32, %r378;
	and.b32  	%r3836, %r377, %r32;
	sub.s32 	%r3837, %r3836, %r379;
	and.b32  	%r3838, %r3837, %r377;
	or.b32  	%r11688, %r3838, %r3835;
	bra.uni 	BB1_630;

BB1_1031:
	setp.eq.s32	%p702, %r5190, 2;
	@%p702 bra 	BB1_1043;
	bra.uni 	BB1_1032;

BB1_1043:
	and.b32  	%r5211, %r948, %r32;
	or.b32  	%r5212, %r5211, %r947;
	and.b32  	%r5213, %r11688, %r949;
	or.b32  	%r11688, %r5212, %r5213;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	bra.uni 	BB1_1547;

BB1_1529:
	setp.eq.s32	%p1026, %r8350, 2;
	@%p1026 bra 	BB1_1541;
	bra.uni 	BB1_1530;

BB1_1541:
	and.b32  	%r8419, %r32, 1077952576;
	shr.u32 	%r8420, %r8419, 1;
	and.b32  	%r8421, %r32, -2139062144;
	shr.u32 	%r8422, %r8421, 2;
	not.b32 	%r8423, %r8422;
	and.b32  	%r8424, %r8420, %r8423;
	and.b32  	%r8425, %r32, 522133279;
	add.s32 	%r8426, %r8425, 522133279;
	mov.u32 	%r8427, -84215046;
	sub.s32 	%r8428, %r8427, %r8425;
	and.b32  	%r8429, %r8424, %r8428;
	and.b32  	%r8430, %r8429, %r8426;
	and.b32  	%r8431, %r8430, %r1726;
	xor.b32  	%r11688, %r8431, %r32;
	bra.uni 	BB1_1022;

BB1_1173:
	setp.gt.s32	%p795, %r40, 11;
	@%p795 bra 	BB1_1181;

	setp.gt.s32	%p801, %r40, 9;
	@%p801 bra 	BB1_1178;

	setp.eq.s32	%p804, %r40, 8;
	@%p804 bra 	BB1_1233;
	bra.uni 	BB1_1176;

BB1_1233:
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r38;
	mov.u32 	%r11685, %r37;
	mov.u32 	%r11686, %r32;
	mov.u32 	%r11687, %r31;
	mov.u32 	%r11688, %r35;
	mov.u32 	%r38, %r36;
	bra.uni 	BB1_1243;

BB1_982:
	setp.gt.s32	%p670, %r5116, 5;
	@%p670 bra 	BB1_986;

	setp.eq.s32	%p673, %r5116, 4;
	@%p673 bra 	BB1_993;
	bra.uni 	BB1_984;

BB1_993:
	and.b32  	%r11685, %r920, %r35;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	bra.uni 	BB1_991;

BB1_720:
	setp.gt.s32	%p463, %r30, 23;
	@%p463 bra 	BB1_733;

	setp.gt.s32	%p475, %r30, 19;
	@%p475 bra 	BB1_726;

	setp.eq.s32	%p481, %r30, 17;
	@%p481 bra 	BB1_764;

	setp.eq.s32	%p482, %r30, 18;
	@%p482 bra 	BB1_762;
	bra.uni 	BB1_724;

BB1_762:
	shl.b32 	%r4124, %r35, 8;
	and.b32  	%r4125, %r4124, 65280;
	bfe.u32 	%r4126, %r35, 8, 8;
	or.b32  	%r11685, %r4125, %r4126;
	mov.u32 	%r11690, 18;
	bra.uni 	BB1_763;

BB1_1454:
	setp.gt.s32	%p998, %r7788, 11;
	@%p998 bra 	BB1_1462;

	setp.gt.s32	%p1004, %r7788, 9;
	@%p1004 bra 	BB1_1459;

	setp.eq.s32	%p1007, %r7788, 8;
	@%p1007 bra 	BB1_1514;
	bra.uni 	BB1_1457;

BB1_1514:
	mov.u32 	%r11678, 0;
	mov.u32 	%r38, %r36;
	mov.u32 	%r37, %r35;
	mov.u32 	%r36, %r31;
	mov.u32 	%r35, %r32;
	mov.u32 	%r11679, %r11678;
	mov.u32 	%r11680, %r34;
	mov.u32 	%r34, %r33;
	bra.uni 	BB1_1522;

BB1_359:
	setp.gt.s32	%p259, %r3787, 5;
	@%p259 bra 	BB1_363;

	setp.eq.s32	%p262, %r3787, 4;
	@%p262 bra 	BB1_367;
	bra.uni 	BB1_361;

BB1_367:
	and.b32  	%r3801, %r35, %r368;
	and.b32  	%r3802, %r3775, %r367;
	or.b32  	%r11685, %r3802, %r3801;
	bra.uni 	BB1_648;

BB1_164:
	setp.gt.s32	%p127, %r40, 23;
	@%p127 bra 	BB1_180;

	setp.gt.s32	%p139, %r40, 19;
	@%p139 bra 	BB1_173;

	setp.gt.s32	%p145, %r40, 17;
	@%p145 bra 	BB1_170;

	setp.eq.s32	%p148, %r40, 16;
	@%p148 bra 	BB1_206;
	bra.uni 	BB1_168;

BB1_206:
	mov.u32 	%r11525, %r34;
	mov.u32 	%r11526, %r33;
	mov.u32 	%r11527, %r32;
	mov.u32 	%r11528, %r31;
	bra.uni 	BB1_200;

BB1_240:
	setp.gt.s32	%p188, %r3129, 5;
	@%p188 bra 	BB1_244;

	setp.eq.s32	%p191, %r3129, 4;
	@%p191 bra 	BB1_249;
	bra.uni 	BB1_242;

BB1_249:
	and.b32  	%r11541, %r202, %r35;
	mov.u32 	%r11542, 0;
	mov.u32 	%r11543, %r11542;
	mov.u32 	%r11544, %r11542;
	bra.uni 	BB1_247;

BB1_382:
	setp.eq.s32	%p272, %r3811, 6;
	@%p272 bra 	BB1_385;
	bra.uni 	BB1_383;

BB1_385:
	and.b32  	%r3819, %r37, %r378;
	and.b32  	%r3820, %r377, %r37;
	sub.s32 	%r3821, %r3820, %r379;
	and.b32  	%r3822, %r3821, %r377;
	or.b32  	%r11683, %r3822, %r3819;
	bra.uni 	BB1_665;

BB1_1038:
	setp.eq.s32	%p697, %r5190, 6;
	@%p697 bra 	BB1_1041;
	bra.uni 	BB1_1039;

BB1_1041:
	and.b32  	%r5199, %r948, %r37;
	or.b32  	%r5200, %r5199, %r947;
	and.b32  	%r5201, %r11683, %r949;
	or.b32  	%r11683, %r5200, %r5201;
	bra.uni 	BB1_750;

BB1_1536:
	setp.eq.s32	%p1021, %r8350, 6;
	@%p1021 bra 	BB1_1539;
	bra.uni 	BB1_1537;

BB1_1539:
	and.b32  	%r8367, %r37, 1077952576;
	shr.u32 	%r8368, %r8367, 1;
	and.b32  	%r8369, %r37, -2139062144;
	shr.u32 	%r8370, %r8369, 2;
	not.b32 	%r8371, %r8370;
	and.b32  	%r8372, %r8368, %r8371;
	and.b32  	%r8373, %r37, 522133279;
	add.s32 	%r8374, %r8373, 522133279;
	mov.u32 	%r8375, -84215046;
	sub.s32 	%r8376, %r8375, %r8373;
	and.b32  	%r8377, %r8372, %r8376;
	and.b32  	%r8378, %r8377, %r8374;
	and.b32  	%r8379, %r8378, %r1726;
	xor.b32  	%r11683, %r8379, %r37;
	bra.uni 	BB1_1018;

BB1_1206:
	setp.gt.s32	%p772, %r40, 27;
	@%p772 bra 	BB1_1215;

	setp.gt.s32	%p778, %r40, 25;
	@%p778 bra 	BB1_1211;

	setp.eq.s32	%p781, %r40, 24;
	@%p781 bra 	BB1_1225;
	bra.uni 	BB1_1209;

BB1_1225:
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11686, %r37;
	mov.u32 	%r11687, %r38;
	bra.uni 	BB1_1241;

BB1_1485:
	setp.gt.s32	%p975, %r7788, 27;
	@%p975 bra 	BB1_1493;

	setp.gt.s32	%p981, %r7788, 25;
	@%p981 bra 	BB1_1490;

	setp.eq.s32	%p984, %r7788, 24;
	@%p984 bra 	BB1_1502;
	bra.uni 	BB1_1488;

BB1_1502:
	mov.u32 	%r36, 0;
	mov.u32 	%r38, %r33;
	mov.u32 	%r37, %r34;
	bra.uni 	BB1_1503;

BB1_395:
	setp.eq.s32	%p289, %r3847, 2;
	@%p289 bra 	BB1_407;
	bra.uni 	BB1_396;

BB1_407:
	and.b32  	%r3871, %r32, %r389;
	and.b32  	%r3872, %r388, %r32;
	add.s32 	%r3873, %r3872, %r390;
	and.b32  	%r3874, %r3873, %r388;
	or.b32  	%r11688, %r3874, %r3871;
	bra.uni 	BB1_630;

BB1_1064:
	setp.gt.s32	%p734, %r42, 11;
	@%p734 bra 	BB1_1072;

	setp.gt.s32	%p740, %r42, 9;
	@%p740 bra 	BB1_1069;

	setp.eq.s32	%p743, %r42, 8;
	@%p743 bra 	BB1_1128;
	bra.uni 	BB1_1067;

BB1_1128:
	mov.u32 	%r11685, %r37;
	mov.u32 	%r11684, %r38;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r32;
	mov.u32 	%r11687, %r31;
	mov.u32 	%r11688, %r35;
	mov.u32 	%r11689, %r36;
	bra.uni 	BB1_1133;

BB1_1006:
	setp.eq.s32	%p688, %r5149, 2;
	@%p688 bra 	BB1_1021;
	bra.uni 	BB1_1007;

BB1_1021:
	and.b32  	%r5159, %r32, %r930;
	or.b32  	%r11688, %r5159, %r929;

BB1_1022:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	bra.uni 	BB1_17;

BB1_462:
	setp.gt.s32	%p345, %r40, 11;
	@%p345 bra 	BB1_470;

	setp.gt.s32	%p351, %r40, 9;
	@%p351 bra 	BB1_467;

	setp.eq.s32	%p354, %r40, 8;
	@%p354 bra 	BB1_519;
	bra.uni 	BB1_465;

BB1_519:
	and.b32  	%r11557, %r32, 255;
	bra.uni 	BB1_524;

BB1_343:
	setp.gt.s32	%p247, %r3734, 5;
	@%p247 bra 	BB1_347;

	setp.eq.s32	%p250, %r3734, 4;
	@%p250 bra 	BB1_351;
	bra.uni 	BB1_345;

BB1_351:
	and.b32  	%r3744, %r35, %r351;
	and.b32  	%r3745, %r3718, %r350;
	or.b32  	%r11685, %r3745, %r3744;
	bra.uni 	BB1_648;

BB1_1432:
	setp.eq.s32	%p969, %r7609, 2;
	@%p969 bra 	BB1_1444;
	bra.uni 	BB1_1433;

BB1_1444:
	// inline asm
	prmt.b32 %r11673, %r35, %r36, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11672, %r31, %r35, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11671, %r32, %r31, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11670, %r33, %r32, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11669, %r34, %r33, %r1549;
	// inline asm
	mov.u32 	%r11666, 0;
	// inline asm
	prmt.b32 %r11668, %r11666, %r34, %r1549;
	// inline asm
	mov.u32 	%r11667, %r11666;
	bra.uni 	BB1_1446;

BB1_1339:
	setp.gt.s32	%p889, %r6663, 23;
	@%p889 bra 	BB1_1356;

	setp.gt.s32	%p901, %r6663, 19;
	@%p901 bra 	BB1_1349;

	setp.gt.s32	%p907, %r6663, 17;
	@%p907 bra 	BB1_1345;

	setp.eq.s32	%p910, %r6663, 16;
	@%p910 bra 	BB1_1382;
	bra.uni 	BB1_1343;

BB1_1382:
	mov.u32 	%r11632, %r34;
	mov.u32 	%r11633, %r33;
	mov.u32 	%r11634, %r32;
	mov.u32 	%r11635, %r31;
	bra.uni 	BB1_1376;

BB1_430:
	setp.eq.s32	%p313, %r3919, 2;
	@%p313 bra 	BB1_442;
	bra.uni 	BB1_431;

BB1_442:
	and.b32  	%r3943, %r32, %r410;
	and.b32  	%r3944, %r409, %r32;
	shl.b32 	%r3945, %r3944, 1;
	and.b32  	%r3946, %r3945, %r409;
	or.b32  	%r11688, %r3946, %r3943;
	bra.uni 	BB1_630;

BB1_414:
	setp.gt.s32	%p295, %r3883, 5;
	@%p295 bra 	BB1_418;

	setp.eq.s32	%p298, %r3883, 4;
	@%p298 bra 	BB1_422;
	bra.uni 	BB1_416;

BB1_422:
	and.b32  	%r3899, %r35, %r400;
	and.b32  	%r3900, %r399, %r35;
	shr.u32 	%r3901, %r3900, 1;
	and.b32  	%r3902, %r3901, %r399;
	or.b32  	%r11685, %r3902, %r3899;
	bra.uni 	BB1_648;

BB1_951:
	setp.eq.s32	%p626, %r879, 2;
	mov.u32 	%r11690, 0;
	@%p626 bra 	BB1_952;
	bra.uni 	BB1_953;

BB1_952:
	mov.u32 	%r11585, %r11690;
	bra.uni 	BB1_955;

BB1_1270:
	setp.gt.s32	%p828, %r6408, 5;
	@%p828 bra 	BB1_1274;

	setp.eq.s32	%p831, %r6408, 4;
	@%p831 bra 	BB1_1283;
	bra.uni 	BB1_1272;

BB1_1283:
	and.b32  	%r6419, %r1226, %r35;
	and.b32  	%r6420, %r11685, %r1227;
	or.b32  	%r11685, %r6420, %r6419;
	bra.uni 	BB1_1280;

BB1_798:
	setp.gt.s32	%p558, %r40, 11;
	@%p558 bra 	BB1_806;

	setp.gt.s32	%p564, %r40, 9;
	@%p564 bra 	BB1_803;

	setp.eq.s32	%p567, %r40, 8;
	@%p567 bra 	BB1_858;
	bra.uni 	BB1_801;

BB1_858:
	mov.u32 	%r11686, 0;
	mov.u32 	%r38, %r36;
	mov.u32 	%r37, %r35;
	mov.u32 	%r36, %r31;
	mov.u32 	%r35, %r32;
	mov.u32 	%r11687, %r11686;
	mov.u32 	%r11688, %r34;
	mov.u32 	%r31, %r33;
	bra.uni 	BB1_866;

BB1_1291:
	setp.gt.s32	%p858, %r6510, 5;
	@%p858 bra 	BB1_1295;

	setp.eq.s32	%p861, %r6510, 4;
	@%p861 bra 	BB1_1299;
	bra.uni 	BB1_1293;

BB1_1299:
	and.b32  	%r11685, %r11685, %r1271;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	bra.uni 	BB1_1546;

BB1_402:
	setp.eq.s32	%p284, %r3847, 6;
	@%p284 bra 	BB1_405;
	bra.uni 	BB1_403;

BB1_405:
	and.b32  	%r3855, %r37, %r389;
	and.b32  	%r3856, %r388, %r37;
	add.s32 	%r3857, %r3856, %r390;
	and.b32  	%r3858, %r3857, %r388;
	or.b32  	%r11683, %r3858, %r3855;
	bra.uni 	BB1_665;

BB1_1098:
	setp.gt.s32	%p711, %r42, 27;
	@%p711 bra 	BB1_1108;

	setp.gt.s32	%p717, %r42, 25;
	@%p717 bra 	BB1_1103;

	setp.eq.s32	%p720, %r42, 24;
	@%p720 bra 	BB1_1120;
	bra.uni 	BB1_1101;

BB1_1120:
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r37;
	mov.u32 	%r11687, %r38;
	bra.uni 	BB1_1118;

BB1_1014:
	setp.eq.s32	%p683, %r5149, 6;
	@%p683 bra 	BB1_1017;
	bra.uni 	BB1_1015;

BB1_1017:
	and.b32  	%r5155, %r37, %r930;
	or.b32  	%r11683, %r5155, %r929;

BB1_1018:
	mov.u32 	%r11682, %r38;
	bra.uni 	BB1_12;

BB1_493:
	setp.gt.s32	%p322, %r40, 27;
	@%p322 bra 	BB1_501;

	setp.gt.s32	%p328, %r40, 25;
	@%p328 bra 	BB1_498;

	setp.eq.s32	%p331, %r40, 24;
	@%p331 bra 	BB1_511;
	bra.uni 	BB1_496;

BB1_511:
	and.b32  	%r11557, %r37, 255;
	bra.uni 	BB1_524;

BB1_1439:
	setp.eq.s32	%p964, %r7609, 6;
	@%p964 bra 	BB1_1442;
	bra.uni 	BB1_1440;

BB1_1442:
	// inline asm
	prmt.b32 %r11673, %r34, %r33, %r1549;
	// inline asm
	mov.u32 	%r11666, 0;
	// inline asm
	prmt.b32 %r11672, %r11666, %r34, %r1549;
	// inline asm
	mov.u32 	%r11667, %r11666;
	mov.u32 	%r11668, %r11666;
	mov.u32 	%r11669, %r11666;
	mov.u32 	%r11670, %r11666;
	mov.u32 	%r11671, %r11666;
	bra.uni 	BB1_1446;

BB1_437:
	setp.eq.s32	%p308, %r3919, 6;
	@%p308 bra 	BB1_440;
	bra.uni 	BB1_438;

BB1_440:
	and.b32  	%r3927, %r37, %r410;
	and.b32  	%r3928, %r409, %r37;
	shl.b32 	%r3929, %r3928, 1;
	and.b32  	%r3930, %r3929, %r409;
	or.b32  	%r11683, %r3930, %r3927;
	bra.uni 	BB1_665;

BB1_830:
	setp.gt.s32	%p535, %r40, 27;
	@%p535 bra 	BB1_838;

	setp.gt.s32	%p541, %r40, 25;
	@%p541 bra 	BB1_835;

	setp.eq.s32	%p544, %r40, 24;
	@%p544 bra 	BB1_847;
	bra.uni 	BB1_833;

BB1_847:
	mov.u32 	%r36, 0;
	mov.u32 	%r38, %r33;
	mov.u32 	%r37, %r34;
	bra.uni 	BB1_848;

BB1_373:
	setp.eq.s32	%p280, %r3811, 1;
	@%p280 bra 	BB1_374;
	bra.uni 	BB1_10;

BB1_374:
	and.b32  	%r3839, %r33, %r378;
	and.b32  	%r3840, %r377, %r33;
	sub.s32 	%r3841, %r3840, %r379;
	and.b32  	%r3842, %r3841, %r377;
	or.b32  	%r11687, %r3842, %r3839;
	bra.uni 	BB1_621;

BB1_1029:
	setp.eq.s32	%p705, %r5190, 1;
	@%p705 bra 	BB1_1044;
	bra.uni 	BB1_1030;

BB1_1044:
	and.b32  	%r5214, %r948, %r33;
	or.b32  	%r5215, %r5214, %r947;
	and.b32  	%r5216, %r11687, %r949;
	or.b32  	%r11687, %r5215, %r5216;
	mov.u32 	%r11686, %r34;
	bra.uni 	BB1_1547;

BB1_1527:
	setp.eq.s32	%p1029, %r8350, 1;
	@%p1029 bra 	BB1_1528;
	bra.uni 	BB1_778;

BB1_1528:
	and.b32  	%r8432, %r33, 1077952576;
	shr.u32 	%r8433, %r8432, 1;
	and.b32  	%r8434, %r33, -2139062144;
	shr.u32 	%r8435, %r8434, 2;
	not.b32 	%r8436, %r8435;
	and.b32  	%r8437, %r8433, %r8436;
	and.b32  	%r8438, %r33, 522133279;
	add.s32 	%r8439, %r8438, 522133279;
	mov.u32 	%r8440, -84215046;
	sub.s32 	%r8441, %r8440, %r8438;
	and.b32  	%r8442, %r8437, %r8441;
	and.b32  	%r8443, %r8442, %r8439;
	and.b32  	%r8444, %r8443, %r1726;
	xor.b32  	%r11687, %r8444, %r33;
	bra.uni 	BB1_1005;

BB1_1166:
	setp.gt.s32	%p807, %r40, 5;
	@%p807 bra 	BB1_1170;

	setp.eq.s32	%p810, %r40, 4;
	@%p810 bra 	BB1_1235;
	bra.uni 	BB1_1168;

BB1_1235:
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r38;
	mov.u32 	%r11684, %r37;
	mov.u32 	%r11685, %r36;
	mov.u32 	%r11686, %r33;
	mov.u32 	%r11687, %r32;
	mov.u32 	%r11688, %r31;
	mov.u32 	%r38, %r35;
	bra.uni 	BB1_1243;

BB1_979:
	setp.eq.s32	%p676, %r5116, 2;
	@%p676 bra 	BB1_994;
	bra.uni 	BB1_980;

BB1_994:
	and.b32  	%r11688, %r920, %r32;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	bra.uni 	BB1_997;

BB1_705:
	setp.gt.s32	%p485, %r30, 12;
	@%p485 bra 	BB1_713;

	setp.gt.s32	%p491, %r30, 10;
	@%p491 bra 	BB1_710;

	setp.eq.s32	%p494, %r30, 9;
	@%p494 bra 	BB1_771;
	bra.uni 	BB1_708;

BB1_771:
	or.b32  	%r4170, %r32, %r33;
	and.b32  	%r4171, %r33, 16777215;
	prmt.b32 	%r11687, %r32, %r4171, 1620;
	shr.u32 	%r11688, %r4170, 24;
	mov.u32 	%r11690, 9;
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11689, %r31;
	bra.uni 	BB1_1547;

BB1_1447:
	setp.gt.s32	%p1010, %r7788, 5;
	@%p1010 bra 	BB1_1451;

	setp.eq.s32	%p1013, %r7788, 4;
	@%p1013 bra 	BB1_1516;
	bra.uni 	BB1_1449;

BB1_1516:
	mov.u32 	%r11678, 0;
	mov.u32 	%r38, %r37;
	mov.u32 	%r37, %r36;
	mov.u32 	%r36, %r35;
	mov.u32 	%r35, %r31;
	mov.u32 	%r11679, %r34;
	mov.u32 	%r11680, %r33;
	mov.u32 	%r34, %r32;
	bra.uni 	BB1_1522;

BB1_356:
	setp.eq.s32	%p265, %r3787, 2;
	@%p265 bra 	BB1_368;
	bra.uni 	BB1_357;

BB1_368:
	and.b32  	%r3805, %r32, %r368;
	and.b32  	%r3806, %r3767, %r367;
	or.b32  	%r11688, %r3806, %r3805;
	bra.uni 	BB1_630;

BB1_148:
	setp.gt.s32	%p151, %r40, 11;
	@%p151 bra 	BB1_156;

	setp.gt.s32	%p157, %r40, 9;
	@%p157 bra 	BB1_153;

	setp.eq.s32	%p160, %r40, 8;
	@%p160 bra 	BB1_210;
	bra.uni 	BB1_151;

BB1_210:
	mov.u32 	%r11525, %r32;
	mov.u32 	%r11526, %r31;
	mov.u32 	%r11527, %r35;
	mov.u32 	%r11528, %r36;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r34;
	mov.u32 	%r11532, %r33;
	bra.uni 	BB1_214;

BB1_237:
	setp.eq.s32	%p194, %r3129, 2;
	@%p194 bra 	BB1_250;
	bra.uni 	BB1_238;

BB1_250:
	and.b32  	%r11547, %r202, %r32;
	mov.u32 	%r11541, 0;
	mov.u32 	%r11542, %r11541;
	mov.u32 	%r11543, %r11541;
	mov.u32 	%r11544, %r11541;
	mov.u32 	%r11545, %r34;
	mov.u32 	%r11546, %r33;
	bra.uni 	BB1_251;

BB1_380:
	setp.eq.s32	%p275, %r3811, 5;
	@%p275 bra 	BB1_381;
	bra.uni 	BB1_10;

BB1_381:
	and.b32  	%r3823, %r36, %r378;
	and.b32  	%r3824, %r377, %r36;
	sub.s32 	%r3825, %r3824, %r379;
	and.b32  	%r3826, %r3825, %r377;
	or.b32  	%r11684, %r3826, %r3823;
	bra.uni 	BB1_656;

BB1_1036:
	setp.eq.s32	%p700, %r5190, 5;
	@%p700 bra 	BB1_1037;
	bra.uni 	BB1_1030;

BB1_1037:
	and.b32  	%r5202, %r948, %r36;
	or.b32  	%r5203, %r5202, %r947;
	and.b32  	%r5204, %r11684, %r949;
	or.b32  	%r11684, %r5203, %r5204;
	bra.uni 	BB1_751;

BB1_1534:
	setp.eq.s32	%p1024, %r8350, 5;
	@%p1024 bra 	BB1_1535;
	bra.uni 	BB1_778;

BB1_1535:
	and.b32  	%r8380, %r36, 1077952576;
	shr.u32 	%r8381, %r8380, 1;
	and.b32  	%r8382, %r36, -2139062144;
	shr.u32 	%r8383, %r8382, 2;
	not.b32 	%r8384, %r8383;
	and.b32  	%r8385, %r8381, %r8384;
	and.b32  	%r8386, %r36, 522133279;
	add.s32 	%r8387, %r8386, 522133279;
	mov.u32 	%r8388, -84215046;
	sub.s32 	%r8389, %r8388, %r8386;
	and.b32  	%r8390, %r8385, %r8389;
	and.b32  	%r8391, %r8390, %r8387;
	and.b32  	%r8392, %r8391, %r1726;
	xor.b32  	%r11684, %r8392, %r36;
	bra.uni 	BB1_1013;

BB1_1198:
	setp.gt.s32	%p784, %r40, 21;
	@%p784 bra 	BB1_1202;

	setp.eq.s32	%p787, %r40, 20;
	@%p787 bra 	BB1_1227;
	bra.uni 	BB1_1200;

BB1_1227:
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11686, %r36;
	mov.u32 	%r11687, %r37;
	mov.u32 	%r11688, %r38;
	bra.uni 	BB1_1242;

BB1_1478:
	setp.gt.s32	%p987, %r7788, 21;
	@%p987 bra 	BB1_1482;

	setp.eq.s32	%p990, %r7788, 20;
	@%p990 bra 	BB1_1505;
	bra.uni 	BB1_1480;

BB1_1505:
	mov.u32 	%r35, 0;
	mov.u32 	%r38, %r32;
	mov.u32 	%r37, %r33;
	mov.u32 	%r36, %r34;
	bra.uni 	BB1_1506;

BB1_376:
	setp.eq.s32	%p278, %r3811, 3;
	@%p278 bra 	BB1_377;
	bra.uni 	BB1_10;

BB1_377:
	and.b32  	%r3831, %r31, %r378;
	and.b32  	%r3832, %r377, %r31;
	sub.s32 	%r3833, %r3832, %r379;
	and.b32  	%r3834, %r3833, %r377;
	or.b32  	%r11689, %r3834, %r3831;
	bra.uni 	BB1_638;

BB1_1032:
	setp.eq.s32	%p703, %r5190, 3;
	@%p703 bra 	BB1_1033;
	bra.uni 	BB1_1030;

BB1_1033:
	and.b32  	%r5208, %r948, %r31;
	or.b32  	%r5209, %r5208, %r947;
	and.b32  	%r5210, %r11689, %r949;
	or.b32  	%r11689, %r5209, %r5210;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	bra.uni 	BB1_1547;

BB1_1530:
	setp.eq.s32	%p1027, %r8350, 3;
	@%p1027 bra 	BB1_1531;
	bra.uni 	BB1_778;

BB1_1531:
	and.b32  	%r8406, %r31, 1077952576;
	shr.u32 	%r8407, %r8406, 1;
	and.b32  	%r8408, %r31, -2139062144;
	shr.u32 	%r8409, %r8408, 2;
	not.b32 	%r8410, %r8409;
	and.b32  	%r8411, %r8407, %r8410;
	and.b32  	%r8412, %r31, 522133279;
	add.s32 	%r8413, %r8412, 522133279;
	mov.u32 	%r8414, -84215046;
	sub.s32 	%r8415, %r8414, %r8412;
	and.b32  	%r8416, %r8411, %r8415;
	and.b32  	%r8417, %r8416, %r8413;
	and.b32  	%r8418, %r8417, %r1726;
	xor.b32  	%r11689, %r8418, %r31;
	bra.uni 	BB1_638;

BB1_1181:
	setp.gt.s32	%p796, %r40, 13;
	@%p796 bra 	BB1_1185;

	setp.eq.s32	%p799, %r40, 12;
	@%p799 bra 	BB1_1231;
	bra.uni 	BB1_1183;

BB1_1231:
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r38;
	mov.u32 	%r11686, %r31;
	mov.u32 	%r11687, %r35;
	mov.u32 	%r11688, %r36;
	mov.u32 	%r38, %r37;
	bra.uni 	BB1_1243;

BB1_986:
	setp.eq.s32	%p671, %r5116, 6;
	@%p671 bra 	BB1_992;
	bra.uni 	BB1_987;

BB1_992:
	and.b32  	%r11683, %r920, %r37;
	mov.u32 	%r11682, 0;
	bra.uni 	BB1_989;

BB1_733:
	setp.gt.s32	%p464, %r30, 27;
	@%p464 bra 	BB1_741;

	setp.gt.s32	%p470, %r30, 25;
	@%p470 bra 	BB1_738;

	setp.eq.s32	%p473, %r30, 24;
	@%p473 bra 	BB1_758;
	bra.uni 	BB1_736;

BB1_758:
	and.b32  	%r4089, %r36, 65535;
	shl.b32 	%r4090, %r36, 8;
	and.b32  	%r4091, %r4090, -16777216;
	or.b32  	%r4092, %r4091, %r4089;
	shr.u32 	%r4093, %r36, 8;
	and.b32  	%r4094, %r4093, 16711680;
	or.b32  	%r11684, %r4092, %r4094;
	mov.u32 	%r11690, 24;
	bra.uni 	BB1_760;

BB1_1462:
	setp.gt.s32	%p999, %r7788, 13;
	@%p999 bra 	BB1_1466;

	setp.eq.s32	%p1002, %r7788, 12;
	@%p1002 bra 	BB1_1511;
	bra.uni 	BB1_1464;

BB1_1511:
	mov.u32 	%r11678, 0;
	mov.u32 	%r38, %r35;
	mov.u32 	%r37, %r31;
	mov.u32 	%r36, %r32;
	mov.u32 	%r35, %r33;
	bra.uni 	BB1_1512;

BB1_363:
	setp.eq.s32	%p260, %r3787, 6;
	@%p260 bra 	BB1_366;
	bra.uni 	BB1_364;

BB1_366:
	and.b32  	%r3797, %r37, %r368;
	and.b32  	%r3798, %r3783, %r367;
	or.b32  	%r11683, %r3798, %r3797;
	bra.uni 	BB1_665;

BB1_180:
	setp.gt.s32	%p128, %r40, 27;
	@%p128 bra 	BB1_190;

	setp.gt.s32	%p134, %r40, 25;
	@%p134 bra 	BB1_185;

	setp.eq.s32	%p137, %r40, 24;
	@%p137 bra 	BB1_202;
	bra.uni 	BB1_183;

BB1_202:
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r34;
	mov.u32 	%r11528, %r33;
	bra.uni 	BB1_200;

BB1_244:
	setp.eq.s32	%p189, %r3129, 6;
	@%p189 bra 	BB1_248;
	bra.uni 	BB1_245;

BB1_248:
	and.b32  	%r11543, %r202, %r37;
	mov.u32 	%r11544, 0;
	mov.u32 	%r11541, %r35;
	mov.u32 	%r11542, %r36;
	bra.uni 	BB1_247;

BB1_383:
	setp.ne.s32	%p273, %r3811, 7;
	@%p273 bra 	BB1_10;

	and.b32  	%r3815, %r38, %r378;
	and.b32  	%r3816, %r377, %r38;
	sub.s32 	%r3817, %r3816, %r379;
	and.b32  	%r3818, %r3817, %r377;
	or.b32  	%r11682, %r3818, %r3815;
	bra.uni 	BB1_673;

BB1_1039:
	setp.ne.s32	%p698, %r5190, 7;
	@%p698 bra 	BB1_1030;

	and.b32  	%r5196, %r948, %r38;
	or.b32  	%r5197, %r5196, %r947;
	and.b32  	%r5198, %r11682, %r949;
	or.b32  	%r11682, %r5197, %r5198;
	mov.u32 	%r11683, %r37;
	bra.uni 	BB1_750;

BB1_1030:
	mov.u32 	%r11682, %r38;

BB1_749:
	mov.u32 	%r11683, %r37;

BB1_750:
	mov.u32 	%r11684, %r36;

BB1_751:
	mov.u32 	%r11685, %r35;

BB1_752:
	mov.u32 	%r11686, %r34;

BB1_753:
	mov.u32 	%r11687, %r33;

BB1_754:
	mov.u32 	%r11688, %r32;
	mov.u32 	%r11689, %r31;
	bra.uni 	BB1_1547;

BB1_1537:
	setp.ne.s32	%p1022, %r8350, 7;
	@%p1022 bra 	BB1_778;

	and.b32  	%r8354, %r38, 1077952576;
	shr.u32 	%r8355, %r8354, 1;
	and.b32  	%r8356, %r38, -2139062144;
	shr.u32 	%r8357, %r8356, 2;
	not.b32 	%r8358, %r8357;
	and.b32  	%r8359, %r8355, %r8358;
	and.b32  	%r8360, %r38, 522133279;
	add.s32 	%r8361, %r8360, 522133279;
	mov.u32 	%r8362, -84215046;
	sub.s32 	%r8363, %r8362, %r8360;
	and.b32  	%r8364, %r8359, %r8363;
	and.b32  	%r8365, %r8364, %r8361;
	and.b32  	%r8366, %r8365, %r1726;
	xor.b32  	%r11682, %r8366, %r38;
	bra.uni 	BB1_11;

BB1_1215:
	setp.gt.s32	%p773, %r40, 29;
	@%p773 bra 	BB1_1219;

	setp.eq.s32	%p776, %r40, 28;
	@%p776 bra 	BB1_1223;
	bra.uni 	BB1_1217;

BB1_1223:
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11686, %r38;
	bra.uni 	BB1_1240;

BB1_1493:
	setp.gt.s32	%p976, %r7788, 29;
	@%p976 bra 	BB1_1497;

	setp.eq.s32	%p979, %r7788, 28;
	@%p979 bra 	BB1_1500;
	bra.uni 	BB1_1495;

BB1_1500:
	mov.u32 	%r37, 0;
	mov.u32 	%r38, %r34;
	bra.uni 	BB1_1521;

BB1_393:
	setp.eq.s32	%p292, %r3847, 1;
	@%p292 bra 	BB1_394;
	bra.uni 	BB1_10;

BB1_394:
	and.b32  	%r3875, %r33, %r389;
	and.b32  	%r3876, %r388, %r33;
	add.s32 	%r3877, %r3876, %r390;
	and.b32  	%r3878, %r3877, %r388;
	or.b32  	%r11687, %r3878, %r3875;
	bra.uni 	BB1_621;

BB1_1057:
	setp.gt.s32	%p746, %r42, 5;
	@%p746 bra 	BB1_1061;

	setp.eq.s32	%p749, %r42, 4;
	@%p749 bra 	BB1_1130;
	bra.uni 	BB1_1059;

BB1_1130:
	mov.u32 	%r11685, %r36;
	mov.u32 	%r11684, %r37;
	mov.u32 	%r11683, %r38;
	mov.u32 	%r11604, %r33;
	mov.u32 	%r11687, %r32;
	mov.u32 	%r11688, %r31;
	mov.u32 	%r11689, %r35;
	bra.uni 	BB1_1133;

BB1_1003:
	setp.eq.s32	%p691, %r5149, 1;
	@%p691 bra 	BB1_1004;
	bra.uni 	BB1_778;

BB1_1004:
	and.b32  	%r5160, %r33, %r930;
	or.b32  	%r11687, %r5160, %r929;

BB1_1005:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	bra.uni 	BB1_16;

BB1_455:
	setp.gt.s32	%p357, %r40, 5;
	@%p357 bra 	BB1_459;

	setp.eq.s32	%p360, %r40, 4;
	@%p360 bra 	BB1_521;
	bra.uni 	BB1_457;

BB1_521:
	and.b32  	%r11557, %r33, 255;
	bra.uni 	BB1_524;

BB1_340:
	setp.eq.s32	%p253, %r3734, 2;
	@%p253 bra 	BB1_352;
	bra.uni 	BB1_341;

BB1_352:
	and.b32  	%r3748, %r32, %r351;
	and.b32  	%r3749, %r3726, %r350;
	or.b32  	%r11688, %r3749, %r3748;
	bra.uni 	BB1_630;

BB1_1430:
	setp.eq.s32	%p972, %r7609, 1;
	mov.u32 	%r11667, %r11666;
	mov.u32 	%r11668, %r11666;
	mov.u32 	%r11669, %r11666;
	mov.u32 	%r11670, %r11666;
	mov.u32 	%r11671, %r11666;
	mov.u32 	%r11672, %r11666;
	mov.u32 	%r11673, %r11666;
	@%p972 bra 	BB1_1431;
	bra.uni 	BB1_1446;

BB1_1431:
	// inline asm
	prmt.b32 %r11673, %r36, %r37, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11672, %r35, %r36, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11671, %r31, %r35, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11670, %r32, %r31, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11669, %r33, %r32, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11668, %r34, %r33, %r1549;
	// inline asm
	mov.u32 	%r11666, 0;
	// inline asm
	prmt.b32 %r11667, %r11666, %r34, %r1549;
	// inline asm
	bra.uni 	BB1_1446;

BB1_1323:
	setp.gt.s32	%p913, %r6663, 11;
	@%p913 bra 	BB1_1331;

	setp.gt.s32	%p919, %r6663, 9;
	@%p919 bra 	BB1_1328;

	setp.eq.s32	%p922, %r6663, 8;
	@%p922 bra 	BB1_1386;
	bra.uni 	BB1_1326;

BB1_1386:
	mov.u32 	%r11632, %r32;
	mov.u32 	%r11633, %r31;
	mov.u32 	%r11634, %r35;
	mov.u32 	%r11635, %r36;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r34;
	mov.u32 	%r11639, %r33;
	bra.uni 	BB1_1390;

BB1_428:
	setp.eq.s32	%p316, %r3919, 1;
	@%p316 bra 	BB1_429;
	bra.uni 	BB1_10;

BB1_429:
	and.b32  	%r3947, %r33, %r410;
	and.b32  	%r3948, %r409, %r33;
	shl.b32 	%r3949, %r3948, 1;
	and.b32  	%r3950, %r3949, %r409;
	or.b32  	%r11687, %r3950, %r3947;
	bra.uni 	BB1_621;

BB1_411:
	setp.eq.s32	%p301, %r3883, 2;
	@%p301 bra 	BB1_423;
	bra.uni 	BB1_412;

BB1_423:
	and.b32  	%r3907, %r32, %r400;
	and.b32  	%r3908, %r399, %r32;
	shr.u32 	%r3909, %r3908, 1;
	and.b32  	%r3910, %r3909, %r399;
	or.b32  	%r11688, %r3910, %r3907;
	bra.uni 	BB1_630;

BB1_1267:
	setp.eq.s32	%p834, %r6408, 2;
	@%p834 bra 	BB1_1284;
	bra.uni 	BB1_1268;

BB1_1284:
	and.b32  	%r6423, %r1226, %r32;
	and.b32  	%r6424, %r11688, %r1227;
	or.b32  	%r11688, %r6424, %r6423;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	bra.uni 	BB1_1285;

BB1_791:
	setp.gt.s32	%p570, %r40, 5;
	@%p570 bra 	BB1_795;

	setp.eq.s32	%p573, %r40, 4;
	@%p573 bra 	BB1_860;
	bra.uni 	BB1_793;

BB1_860:
	mov.u32 	%r11686, 0;
	mov.u32 	%r38, %r37;
	mov.u32 	%r37, %r36;
	mov.u32 	%r36, %r35;
	mov.u32 	%r35, %r31;
	mov.u32 	%r11687, %r34;
	mov.u32 	%r11688, %r33;
	mov.u32 	%r31, %r32;
	bra.uni 	BB1_866;

BB1_1288:
	setp.eq.s32	%p864, %r6510, 2;
	@%p864 bra 	BB1_1300;
	bra.uni 	BB1_1289;

BB1_1300:
	and.b32  	%r11688, %r11688, %r1271;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	bra.uni 	BB1_1303;

BB1_400:
	setp.eq.s32	%p287, %r3847, 5;
	@%p287 bra 	BB1_401;
	bra.uni 	BB1_10;

BB1_401:
	and.b32  	%r3859, %r36, %r389;
	and.b32  	%r3860, %r388, %r36;
	add.s32 	%r3861, %r3860, %r390;
	and.b32  	%r3862, %r3861, %r388;
	or.b32  	%r11684, %r3862, %r3859;
	bra.uni 	BB1_656;

BB1_1090:
	setp.gt.s32	%p723, %r42, 21;
	@%p723 bra 	BB1_1094;

	setp.eq.s32	%p726, %r42, 20;
	@%p726 bra 	BB1_1122;
	bra.uni 	BB1_1092;

BB1_1122:
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r36;
	mov.u32 	%r11687, %r37;
	mov.u32 	%r11688, %r38;
	mov.u32 	%r11689, %r11682;
	bra.uni 	BB1_1133;

BB1_1011:
	setp.eq.s32	%p686, %r5149, 5;
	@%p686 bra 	BB1_1012;
	bra.uni 	BB1_778;

BB1_1012:
	and.b32  	%r5156, %r36, %r930;
	or.b32  	%r11684, %r5156, %r929;

BB1_1013:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	bra.uni 	BB1_13;

BB1_486:
	setp.gt.s32	%p334, %r40, 21;
	@%p334 bra 	BB1_490;

	setp.eq.s32	%p337, %r40, 20;
	@%p337 bra 	BB1_513;
	bra.uni 	BB1_488;

BB1_513:
	and.b32  	%r11557, %r36, 255;
	bra.uni 	BB1_524;

BB1_1437:
	setp.eq.s32	%p967, %r7609, 5;
	mov.u32 	%r11667, %r11666;
	mov.u32 	%r11668, %r11666;
	mov.u32 	%r11669, %r11666;
	mov.u32 	%r11670, %r11666;
	mov.u32 	%r11671, %r11666;
	mov.u32 	%r11672, %r11666;
	mov.u32 	%r11673, %r11666;
	@%p967 bra 	BB1_1438;
	bra.uni 	BB1_1446;

BB1_1438:
	// inline asm
	prmt.b32 %r11673, %r33, %r32, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11672, %r34, %r33, %r1549;
	// inline asm
	mov.u32 	%r11666, 0;
	// inline asm
	prmt.b32 %r11671, %r11666, %r34, %r1549;
	// inline asm
	mov.u32 	%r11667, %r11666;
	mov.u32 	%r11668, %r11666;
	mov.u32 	%r11669, %r11666;
	mov.u32 	%r11670, %r11666;
	bra.uni 	BB1_1446;

BB1_435:
	setp.eq.s32	%p311, %r3919, 5;
	@%p311 bra 	BB1_436;
	bra.uni 	BB1_10;

BB1_436:
	and.b32  	%r3931, %r36, %r410;
	and.b32  	%r3932, %r409, %r36;
	shl.b32 	%r3933, %r3932, 1;
	and.b32  	%r3934, %r3933, %r409;
	or.b32  	%r11684, %r3934, %r3931;
	bra.uni 	BB1_656;

BB1_823:
	setp.gt.s32	%p547, %r40, 21;
	@%p547 bra 	BB1_827;

	setp.eq.s32	%p550, %r40, 20;
	@%p550 bra 	BB1_850;
	bra.uni 	BB1_825;

BB1_850:
	mov.u32 	%r35, 0;
	mov.u32 	%r38, %r32;
	mov.u32 	%r37, %r33;
	mov.u32 	%r36, %r34;
	bra.uni 	BB1_851;

BB1_396:
	setp.eq.s32	%p290, %r3847, 3;
	@%p290 bra 	BB1_397;
	bra.uni 	BB1_10;

BB1_397:
	and.b32  	%r3867, %r31, %r389;
	and.b32  	%r3868, %r388, %r31;
	add.s32 	%r3869, %r3868, %r390;
	and.b32  	%r3870, %r3869, %r388;
	or.b32  	%r11689, %r3870, %r3867;
	bra.uni 	BB1_638;

BB1_1072:
	setp.gt.s32	%p735, %r42, 13;
	@%p735 bra 	BB1_1076;

	setp.eq.s32	%p738, %r42, 12;
	@%p738 bra 	BB1_1126;
	bra.uni 	BB1_1074;

BB1_1126:
	mov.u32 	%r11685, %r38;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r31;
	mov.u32 	%r11687, %r35;
	mov.u32 	%r11688, %r36;
	mov.u32 	%r11689, %r37;
	bra.uni 	BB1_1133;

BB1_1007:
	setp.eq.s32	%p689, %r5149, 3;
	@%p689 bra 	BB1_1008;
	bra.uni 	BB1_778;

BB1_1008:
	and.b32  	%r5158, %r31, %r930;
	or.b32  	%r11689, %r5158, %r929;
	bra.uni 	BB1_638;

BB1_470:
	setp.gt.s32	%p346, %r40, 13;
	@%p346 bra 	BB1_474;

	setp.eq.s32	%p349, %r40, 12;
	@%p349 bra 	BB1_517;
	bra.uni 	BB1_472;

BB1_517:
	and.b32  	%r11557, %r31, 255;
	bra.uni 	BB1_524;

BB1_347:
	setp.eq.s32	%p248, %r3734, 6;
	@%p248 bra 	BB1_350;
	bra.uni 	BB1_348;

BB1_350:
	and.b32  	%r3740, %r37, %r351;
	and.b32  	%r3741, %r3710, %r350;
	or.b32  	%r11683, %r3741, %r3740;
	bra.uni 	BB1_665;

BB1_1433:
	setp.eq.s32	%p970, %r7609, 3;
	mov.u32 	%r11667, %r11666;
	mov.u32 	%r11668, %r11666;
	mov.u32 	%r11669, %r11666;
	mov.u32 	%r11670, %r11666;
	mov.u32 	%r11671, %r11666;
	mov.u32 	%r11672, %r11666;
	mov.u32 	%r11673, %r11666;
	@%p970 bra 	BB1_1434;
	bra.uni 	BB1_1446;

BB1_1434:
	// inline asm
	prmt.b32 %r11673, %r31, %r35, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11672, %r32, %r31, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11671, %r33, %r32, %r1549;
	// inline asm
	// inline asm
	prmt.b32 %r11670, %r34, %r33, %r1549;
	// inline asm
	mov.u32 	%r11666, 0;
	// inline asm
	prmt.b32 %r11669, %r11666, %r34, %r1549;
	// inline asm
	mov.u32 	%r11667, %r11666;
	mov.u32 	%r11668, %r11666;
	bra.uni 	BB1_1446;

BB1_1356:
	setp.gt.s32	%p890, %r6663, 27;
	@%p890 bra 	BB1_1366;

	setp.gt.s32	%p896, %r6663, 25;
	@%p896 bra 	BB1_1361;

	setp.eq.s32	%p899, %r6663, 24;
	@%p899 bra 	BB1_1378;
	bra.uni 	BB1_1359;

BB1_1378:
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r34;
	mov.u32 	%r11635, %r33;
	bra.uni 	BB1_1376;

BB1_431:
	setp.eq.s32	%p314, %r3919, 3;
	@%p314 bra 	BB1_432;
	bra.uni 	BB1_10;

BB1_432:
	and.b32  	%r3939, %r31, %r410;
	and.b32  	%r3940, %r409, %r31;
	shl.b32 	%r3941, %r3940, 1;
	and.b32  	%r3942, %r3941, %r409;
	or.b32  	%r11689, %r3942, %r3939;
	bra.uni 	BB1_638;

BB1_418:
	setp.eq.s32	%p296, %r3883, 6;
	@%p296 bra 	BB1_421;
	bra.uni 	BB1_419;

BB1_421:
	and.b32  	%r3891, %r37, %r400;
	and.b32  	%r3892, %r399, %r37;
	shr.u32 	%r3893, %r3892, 1;
	and.b32  	%r3894, %r3893, %r399;
	or.b32  	%r11683, %r3894, %r3891;
	bra.uni 	BB1_665;

BB1_953:
	and.b16  	%rs268, %rs2, 255;
	and.b16  	%rs269, %rs376, 255;
	setp.eq.s16	%p627, %rs269, %rs268;
	mov.u32 	%r11585, 1;
	@%p627 bra 	BB1_955;

	st.local.u8 	[%rd125], %rs376;
	mov.u32 	%r11585, 1;
	mov.u32 	%r11690, %r11585;

BB1_955:
	cvt.u64.u32	%rd131, %r11585;
	add.s64 	%rd132, %rd123, %rd131;
	ld.local.u8 	%rs3, [%rd132];
	and.b16  	%rs270, %rs2, 255;
	setp.eq.s16	%p628, %rs3, %rs270;
	@%p628 bra 	BB1_957;

	cvt.u64.u32	%rd133, %r11690;
	add.s64 	%rd136, %rd125, %rd133;
	st.local.u8 	[%rd136], %rs3;
	add.s32 	%r11690, %r11690, 1;

BB1_957:
	add.s32 	%r11588, %r11585, 1;
	cvt.u64.u32	%rd137, %r11588;
	add.s64 	%rd140, %rd123, %rd137;
	ld.local.u8 	%rs376, [%rd140];

BB1_958:
	and.b16  	%rs271, %rs2, 255;
	and.b16  	%rs272, %rs376, 255;
	setp.eq.s16	%p629, %rs272, %rs271;
	@%p629 bra 	BB1_960;

	cvt.u64.u32	%rd141, %r11690;
	add.s64 	%rd144, %rd125, %rd141;
	st.local.u8 	[%rd144], %rs376;
	add.s32 	%r11690, %r11690, 1;

BB1_960:
	add.s32 	%r11593, %r11588, 1;

BB1_961:
	setp.lt.u32	%p630, %r30, 4;
	@%p630 bra 	BB1_971;

BB1_962:
	cvt.u64.u32	%rd146, %r11593;
	add.s64 	%rd147, %rd123, %rd146;
	ld.local.u8 	%rs6, [%rd147];
	and.b16  	%rs273, %rs2, 255;
	setp.eq.s16	%p631, %rs6, %rs273;
	@%p631 bra 	BB1_964;

	cvt.u64.u32	%rd148, %r11690;
	add.s64 	%rd151, %rd125, %rd148;
	st.local.u8 	[%rd151], %rs6;
	add.s32 	%r11690, %r11690, 1;

BB1_964:
	add.s32 	%r5057, %r11593, 1;
	cvt.u64.u32	%rd152, %r5057;
	add.s64 	%rd153, %rd123, %rd152;
	ld.local.u8 	%rs7, [%rd153];
	setp.eq.s16	%p632, %rs7, %rs273;
	@%p632 bra 	BB1_966;

	cvt.u64.u32	%rd154, %r11690;
	add.s64 	%rd157, %rd125, %rd154;
	st.local.u8 	[%rd157], %rs7;
	add.s32 	%r11690, %r11690, 1;

BB1_966:
	add.s32 	%r5058, %r11593, 2;
	cvt.u64.u32	%rd158, %r5058;
	add.s64 	%rd159, %rd123, %rd158;
	ld.local.u8 	%rs8, [%rd159];
	setp.eq.s16	%p633, %rs8, %rs273;
	@%p633 bra 	BB1_968;

	cvt.u64.u32	%rd160, %r11690;
	add.s64 	%rd163, %rd125, %rd160;
	st.local.u8 	[%rd163], %rs8;
	add.s32 	%r11690, %r11690, 1;

BB1_968:
	add.s32 	%r5059, %r11593, 3;
	cvt.u64.u32	%rd164, %r5059;
	add.s64 	%rd165, %rd123, %rd164;
	ld.local.u8 	%rs9, [%rd165];
	setp.eq.s16	%p634, %rs9, %rs273;
	@%p634 bra 	BB1_970;

	cvt.u64.u32	%rd166, %r11690;
	add.s64 	%rd169, %rd125, %rd166;
	st.local.u8 	[%rd169], %rs9;
	add.s32 	%r11690, %r11690, 1;

BB1_970:
	add.s32 	%r11593, %r11593, 4;
	setp.lt.u32	%p635, %r11593, %r30;
	@%p635 bra 	BB1_962;

BB1_971:
	ld.local.v4.u32 	{%r11686, %r11687, %r11688, %r11689}, [%rd125];
	ld.local.v4.u32 	{%r11685, %r11684, %r11683, %r11682}, [%rd125+16];
	bra.uni 	BB1_1547;

BB1_1274:
	setp.eq.s32	%p829, %r6408, 6;
	@%p829 bra 	BB1_1282;
	bra.uni 	BB1_1275;

BB1_1282:
	and.b32  	%r6415, %r1226, %r37;
	and.b32  	%r6416, %r11683, %r1227;
	or.b32  	%r11683, %r6416, %r6415;
	bra.uni 	BB1_1278;

BB1_806:
	setp.gt.s32	%p559, %r40, 13;
	@%p559 bra 	BB1_810;

	setp.eq.s32	%p562, %r40, 12;
	@%p562 bra 	BB1_856;
	bra.uni 	BB1_808;

BB1_856:
	mov.u32 	%r11686, 0;
	mov.u32 	%r38, %r35;
	mov.u32 	%r37, %r31;
	mov.u32 	%r36, %r32;
	mov.u32 	%r35, %r33;
	mov.u32 	%r11687, %r11686;
	mov.u32 	%r11688, %r11686;
	mov.u32 	%r31, %r34;
	bra.uni 	BB1_866;

BB1_1295:
	setp.eq.s32	%p859, %r6510, 6;
	@%p859 bra 	BB1_1298;
	bra.uni 	BB1_1296;

BB1_1298:
	and.b32  	%r11683, %r11683, %r1271;
	bra.uni 	BB1_1546;

BB1_403:
	setp.ne.s32	%p285, %r3847, 7;
	@%p285 bra 	BB1_10;

	and.b32  	%r3851, %r38, %r389;
	and.b32  	%r3852, %r388, %r38;
	add.s32 	%r3853, %r3852, %r390;
	and.b32  	%r3854, %r3853, %r388;
	or.b32  	%r11682, %r3854, %r3851;
	bra.uni 	BB1_673;

BB1_1108:
	setp.gt.s32	%p712, %r42, 29;
	@%p712 bra 	BB1_1112;

	setp.eq.s32	%p715, %r42, 28;
	@%p715 bra 	BB1_1117;
	bra.uni 	BB1_1110;

BB1_1117:
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r38;
	mov.u32 	%r11687, %r11682;

BB1_1118:
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	bra.uni 	BB1_1133;

BB1_1015:
	setp.ne.s32	%p684, %r5149, 7;
	@%p684 bra 	BB1_778;

	and.b32  	%r5154, %r38, %r930;
	or.b32  	%r11682, %r5154, %r929;
	bra.uni 	BB1_11;

BB1_778:
	mov.u32 	%r11682, %r38;

BB1_673:
	mov.u32 	%r11683, %r37;

BB1_674:
	mov.u32 	%r11684, %r36;

BB1_675:
	mov.u32 	%r11685, %r35;

BB1_676:
	mov.u32 	%r11686, %r34;

BB1_677:
	mov.u32 	%r11687, %r33;

BB1_678:
	mov.u32 	%r11688, %r32;

BB1_679:
	mov.u32 	%r11689, %r31;
	bra.uni 	BB1_1546;

BB1_501:
	setp.gt.s32	%p323, %r40, 29;
	@%p323 bra 	BB1_505;

	setp.eq.s32	%p326, %r40, 28;
	@%p326 bra 	BB1_509;
	bra.uni 	BB1_503;

BB1_509:
	and.b32  	%r11557, %r38, 255;
	bra.uni 	BB1_524;

BB1_1440:
	setp.ne.s32	%p965, %r7609, 7;
	mov.u32 	%r11667, %r11666;
	mov.u32 	%r11668, %r11666;
	mov.u32 	%r11669, %r11666;
	mov.u32 	%r11670, %r11666;
	mov.u32 	%r11671, %r11666;
	mov.u32 	%r11672, %r11666;
	mov.u32 	%r11673, %r11666;
	@%p965 bra 	BB1_1446;

	mov.u32 	%r11666, 0;
	// inline asm
	prmt.b32 %r11673, %r11666, %r34, %r1549;
	// inline asm
	mov.u32 	%r11667, %r11666;
	mov.u32 	%r11668, %r11666;
	mov.u32 	%r11669, %r11666;
	mov.u32 	%r11670, %r11666;
	mov.u32 	%r11671, %r11666;
	mov.u32 	%r11672, %r11666;

BB1_1446:
	or.b32  	%r11686, %r11666, %r34;
	or.b32  	%r11687, %r11667, %r33;
	or.b32  	%r11688, %r11668, %r32;
	or.b32  	%r11689, %r11669, %r31;
	or.b32  	%r11685, %r11670, %r35;
	or.b32  	%r11684, %r11671, %r36;
	or.b32  	%r11683, %r11672, %r37;
	or.b32  	%r11682, %r11673, %r38;
	bra.uni 	BB1_1547;

BB1_438:
	setp.ne.s32	%p309, %r3919, 7;
	@%p309 bra 	BB1_10;

	and.b32  	%r3923, %r38, %r410;
	and.b32  	%r3924, %r409, %r38;
	shl.b32 	%r3925, %r3924, 1;
	and.b32  	%r3926, %r3925, %r409;
	or.b32  	%r11682, %r3926, %r3923;
	bra.uni 	BB1_673;

BB1_838:
	setp.gt.s32	%p536, %r40, 29;
	@%p536 bra 	BB1_842;

	setp.eq.s32	%p539, %r40, 28;
	@%p539 bra 	BB1_845;
	bra.uni 	BB1_840;

BB1_845:
	mov.u32 	%r37, 0;
	mov.u32 	%r38, %r34;
	bra.uni 	BB1_865;

BB1_977:
	setp.eq.s32	%p679, %r5116, 1;
	@%p679 bra 	BB1_995;
	bra.uni 	BB1_978;

BB1_995:
	and.b32  	%r11687, %r920, %r33;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11686, %r34;

BB1_996:
	mov.u32 	%r11688, %r11682;

BB1_997:
	mov.u32 	%r11689, %r11682;
	mov.u32 	%r11690, %r40;
	bra.uni 	BB1_1547;

BB1_698:
	setp.gt.s32	%p497, %r30, 6;
	@%p497 bra 	BB1_702;

	setp.eq.s32	%p500, %r30, 5;
	@%p500 bra 	BB1_774;
	bra.uni 	BB1_700;

BB1_774:
	or.b32  	%r4191, %r33, %r34;
	and.b32  	%r4192, %r34, 16777215;
	prmt.b32 	%r11686, %r33, %r4192, 1620;
	shr.u32 	%r11687, %r4191, 24;
	mov.u32 	%r11690, 5;
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	bra.uni 	BB1_754;

BB1_354:
	setp.eq.s32	%p268, %r3787, 1;
	@%p268 bra 	BB1_355;
	bra.uni 	BB1_10;

BB1_355:
	and.b32  	%r3807, %r33, %r368;
	and.b32  	%r3808, %r3763, %r367;
	or.b32  	%r11687, %r3808, %r3807;
	bra.uni 	BB1_621;

BB1_141:
	setp.gt.s32	%p163, %r40, 5;
	@%p163 bra 	BB1_145;

	setp.eq.s32	%p166, %r40, 4;
	@%p166 bra 	BB1_212;
	bra.uni 	BB1_143;

BB1_212:
	mov.u32 	%r11525, %r31;
	mov.u32 	%r11526, %r35;
	mov.u32 	%r11527, %r36;
	mov.u32 	%r11528, %r37;
	mov.u32 	%r11530, %r34;
	mov.u32 	%r11531, %r33;
	mov.u32 	%r11532, %r32;
	bra.uni 	BB1_214;

BB1_235:
	setp.eq.s32	%p197, %r3129, 1;
	mov.u32 	%r11541, %r35;
	mov.u32 	%r11542, %r36;
	mov.u32 	%r11543, %r37;
	mov.u32 	%r11544, %r38;
	mov.u32 	%r11545, %r34;
	mov.u32 	%r11546, %r33;
	mov.u32 	%r11547, %r32;
	mov.u32 	%r11548, %r31;
	@%p197 bra 	BB1_236;
	bra.uni 	BB1_252;

BB1_236:
	and.b32  	%r11546, %r202, %r33;
	mov.u32 	%r11541, 0;
	mov.u32 	%r11542, %r11541;
	mov.u32 	%r11543, %r11541;
	mov.u32 	%r11544, %r11541;
	mov.u32 	%r11545, %r34;

BB1_124:
	mov.u32 	%r11547, %r11541;

BB1_251:
	mov.u32 	%r11548, %r11541;
	bra.uni 	BB1_252;

BB1_1194:
	setp.eq.s32	%p790, %r40, 18;
	@%p790 bra 	BB1_1228;
	bra.uni 	BB1_1195;

BB1_1228:
	mov.u32 	%r5967, 16;
	// inline asm
	shf.r.wrap.b32 %r11686, %r35, %r36, %r5967;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r36, %r37, %r5967;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r37, %r38, %r5967;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r38, %r38, %r11682, %r5967;
	// inline asm
	bra.uni 	BB1_1197;

BB1_1475:
	setp.eq.s32	%p993, %r7788, 18;
	@%p993 bra 	BB1_1507;
	bra.uni 	BB1_1476;

BB1_1507:
	mov.u32 	%r7958, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r32, %r31, %r7958;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r33, %r32, %r7958;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r34, %r33, %r7958;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11678, %r34, %r7958;
	// inline asm
	bra.uni 	BB1_1509;

BB1_1178:
	setp.eq.s32	%p802, %r40, 10;
	@%p802 bra 	BB1_1232;
	bra.uni 	BB1_1179;

BB1_1232:
	mov.u32 	%r6117, 16;
	// inline asm
	shf.r.wrap.b32 %r11686, %r32, %r31, %r6117;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r31, %r35, %r6117;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r35, %r36, %r6117;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6106, %r36, %r37, %r6117;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r37, %r38, %r6117;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11684, %r38, %r11682, %r6117;
	// inline asm
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r38, %r6106;
	bra.uni 	BB1_1243;

BB1_984:
	setp.eq.s32	%p674, %r5116, 5;
	@%p674 bra 	BB1_985;
	bra.uni 	BB1_978;

BB1_985:
	and.b32  	%r11684, %r920, %r36;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	bra.uni 	BB1_990;

BB1_726:
	setp.gt.s32	%p476, %r30, 21;
	@%p476 bra 	BB1_730;

	setp.eq.s32	%p479, %r30, 20;
	@%p479 bra 	BB1_761;
	bra.uni 	BB1_728;

BB1_761:
	and.b32  	%r4110, %r35, 65535;
	shl.b32 	%r4111, %r35, 8;
	and.b32  	%r4112, %r4111, -16777216;
	or.b32  	%r4113, %r4112, %r4110;
	shr.u32 	%r4114, %r35, 8;
	and.b32  	%r4115, %r4114, 16711680;
	or.b32  	%r11685, %r4113, %r4115;
	mov.u32 	%r11690, 20;
	bra.uni 	BB1_763;

BB1_1459:
	setp.eq.s32	%p1005, %r7788, 10;
	@%p1005 bra 	BB1_1513;
	bra.uni 	BB1_1460;

BB1_1513:
	mov.u32 	%r8108, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r8108;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r31, %r35, %r8108;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r32, %r31, %r8108;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r33, %r32, %r8108;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8101, %r34, %r33, %r8108;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r11680, %r11678, %r34, %r8108;
	// inline asm
	mov.u32 	%r11679, %r11678;
	mov.u32 	%r34, %r8101;
	bra.uni 	BB1_1522;

BB1_361:
	setp.eq.s32	%p263, %r3787, 5;
	@%p263 bra 	BB1_362;
	bra.uni 	BB1_10;

BB1_362:
	and.b32  	%r3799, %r36, %r368;
	and.b32  	%r3800, %r3779, %r367;
	or.b32  	%r11684, %r3800, %r3799;
	bra.uni 	BB1_656;

BB1_173:
	setp.gt.s32	%p140, %r40, 21;
	@%p140 bra 	BB1_177;

	setp.eq.s32	%p143, %r40, 20;
	@%p143 bra 	BB1_204;
	bra.uni 	BB1_175;

BB1_204:
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r34;
	mov.u32 	%r11527, %r33;
	mov.u32 	%r11528, %r32;
	bra.uni 	BB1_200;

BB1_242:
	setp.eq.s32	%p192, %r3129, 5;
	mov.u32 	%r11541, %r35;
	mov.u32 	%r11542, %r36;
	mov.u32 	%r11543, %r37;
	mov.u32 	%r11544, %r38;
	mov.u32 	%r11545, %r34;
	mov.u32 	%r11546, %r33;
	mov.u32 	%r11547, %r32;
	mov.u32 	%r11548, %r31;
	@%p192 bra 	BB1_243;
	bra.uni 	BB1_252;

BB1_243:
	and.b32  	%r11542, %r202, %r36;
	mov.u32 	%r11543, 0;
	mov.u32 	%r11541, %r35;
	mov.u32 	%r11544, %r11543;
	bra.uni 	BB1_247;

BB1_1211:
	setp.eq.s32	%p779, %r40, 26;
	@%p779 bra 	BB1_1224;
	bra.uni 	BB1_1212;

BB1_1224:
	mov.u32 	%r5849, 16;
	// inline asm
	shf.r.wrap.b32 %r11686, %r37, %r38, %r5849;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11687, %r38, %r11682, %r5849;
	// inline asm
	bra.uni 	BB1_1214;

BB1_1490:
	setp.eq.s32	%p982, %r7788, 26;
	@%p982 bra 	BB1_1501;
	bra.uni 	BB1_1491;

BB1_1501:
	mov.u32 	%r7840, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r34, %r33, %r7840;
	// inline asm
	mov.u32 	%r36, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r34, %r7840;
	// inline asm
	bra.uni 	BB1_1503;

BB1_1170:
	setp.eq.s32	%p808, %r40, 6;
	@%p808 bra 	BB1_1234;
	bra.uni 	BB1_1171;

BB1_1234:
	mov.u32 	%r6204, 16;
	// inline asm
	shf.r.wrap.b32 %r11686, %r33, %r32, %r6204;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r32, %r31, %r6204;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r31, %r35, %r6204;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6189, %r35, %r36, %r6204;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r36, %r37, %r6204;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r37, %r38, %r6204;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11683, %r38, %r11682, %r6204;
	// inline asm
	mov.u32 	%r38, %r6189;
	bra.uni 	BB1_1243;

BB1_980:
	setp.eq.s32	%p677, %r5116, 3;
	@%p677 bra 	BB1_981;
	bra.uni 	BB1_978;

BB1_981:
	and.b32  	%r11689, %r920, %r31;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	mov.u32 	%r11690, %r40;
	bra.uni 	BB1_1547;

BB1_713:
	setp.gt.s32	%p486, %r30, 14;
	@%p486 bra 	BB1_717;

	setp.eq.s32	%p489, %r30, 13;
	@%p489 bra 	BB1_768;
	bra.uni 	BB1_715;

BB1_768:
	or.b32  	%r4149, %r31, %r32;
	and.b32  	%r4150, %r32, 16777215;
	prmt.b32 	%r11688, %r31, %r4150, 1620;
	shr.u32 	%r11689, %r4149, 24;
	mov.u32 	%r11690, 13;
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	bra.uni 	BB1_1547;

BB1_1451:
	setp.eq.s32	%p1011, %r7788, 6;
	@%p1011 bra 	BB1_1515;
	bra.uni 	BB1_1452;

BB1_1515:
	mov.u32 	%r8195, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r8195;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r8195;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r31, %r35, %r8195;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r32, %r31, %r8195;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8184, %r33, %r32, %r8195;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11680, %r34, %r33, %r8195;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r11679, %r11678, %r34, %r8195;
	// inline asm
	mov.u32 	%r34, %r8184;
	bra.uni 	BB1_1522;

BB1_357:
	setp.eq.s32	%p266, %r3787, 3;
	@%p266 bra 	BB1_358;
	bra.uni 	BB1_10;

BB1_358:
	and.b32  	%r3803, %r31, %r368;
	and.b32  	%r3804, %r3771, %r367;
	or.b32  	%r11689, %r3804, %r3803;
	bra.uni 	BB1_638;

BB1_156:
	setp.gt.s32	%p152, %r40, 13;
	@%p152 bra 	BB1_160;

	setp.eq.s32	%p155, %r40, 12;
	@%p155 bra 	BB1_208;
	bra.uni 	BB1_158;

BB1_208:
	mov.u32 	%r11525, %r33;
	mov.u32 	%r11526, %r32;
	mov.u32 	%r11527, %r31;
	mov.u32 	%r11528, %r35;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r34;
	bra.uni 	BB1_214;

BB1_238:
	setp.eq.s32	%p195, %r3129, 3;
	mov.u32 	%r11541, %r35;
	mov.u32 	%r11542, %r36;
	mov.u32 	%r11543, %r37;
	mov.u32 	%r11544, %r38;
	mov.u32 	%r11545, %r34;
	mov.u32 	%r11546, %r33;
	mov.u32 	%r11547, %r32;
	mov.u32 	%r11548, %r31;
	@%p195 bra 	BB1_239;
	bra.uni 	BB1_252;

BB1_239:
	and.b32  	%r11548, %r202, %r31;
	mov.u32 	%r11541, 0;
	mov.u32 	%r11542, %r11541;
	mov.u32 	%r11543, %r11541;
	mov.u32 	%r11544, %r11541;
	mov.u32 	%r11545, %r34;
	mov.u32 	%r11546, %r33;
	mov.u32 	%r11547, %r32;
	bra.uni 	BB1_252;

BB1_1202:
	setp.eq.s32	%p785, %r40, 22;
	@%p785 bra 	BB1_1226;
	bra.uni 	BB1_1203;

BB1_1226:
	mov.u32 	%r5904, 16;
	// inline asm
	shf.r.wrap.b32 %r11686, %r36, %r37, %r5904;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r37, %r38, %r5904;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11688, %r38, %r11682, %r5904;
	// inline asm
	bra.uni 	BB1_1205;

BB1_1482:
	setp.eq.s32	%p988, %r7788, 22;
	@%p988 bra 	BB1_1504;
	bra.uni 	BB1_1483;

BB1_1504:
	mov.u32 	%r7895, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r33, %r32, %r7895;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r34, %r33, %r7895;
	// inline asm
	mov.u32 	%r35, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r34, %r7895;
	// inline asm
	bra.uni 	BB1_1506;

BB1_1185:
	setp.eq.s32	%p797, %r40, 14;
	@%p797 bra 	BB1_1230;
	bra.uni 	BB1_1186;

BB1_1230:
	mov.u32 	%r6038, 16;
	// inline asm
	shf.r.wrap.b32 %r11686, %r31, %r35, %r6038;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r35, %r36, %r6038;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r36, %r37, %r6038;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6031, %r37, %r38, %r6038;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11685, %r38, %r11682, %r6038;
	// inline asm
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r38, %r6031;
	bra.uni 	BB1_1243;

BB1_987:
	setp.ne.s32	%p672, %r5116, 7;
	@%p672 bra 	BB1_978;

	and.b32  	%r11682, %r920, %r38;
	mov.u32 	%r11683, %r37;
	bra.uni 	BB1_989;

BB1_978:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;

BB1_989:
	mov.u32 	%r11684, %r36;

BB1_990:
	mov.u32 	%r11685, %r35;

BB1_991:
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	mov.u32 	%r11689, %r31;
	mov.u32 	%r11690, %r40;
	bra.uni 	BB1_1547;

BB1_741:
	setp.gt.s32	%p465, %r30, 29;
	@%p465 bra 	BB1_745;

	setp.eq.s32	%p468, %r30, 28;
	@%p468 bra 	BB1_755;
	bra.uni 	BB1_743;

BB1_755:
	and.b32  	%r4068, %r37, 65535;
	shl.b32 	%r4069, %r37, 8;
	and.b32  	%r4070, %r4069, -16777216;
	or.b32  	%r4071, %r4070, %r4068;
	shr.u32 	%r4072, %r37, 8;
	and.b32  	%r4073, %r4072, 16711680;
	or.b32  	%r11683, %r4071, %r4073;
	mov.u32 	%r11690, 28;
	bra.uni 	BB1_757;

BB1_1466:
	setp.eq.s32	%p1000, %r7788, 14;
	@%p1000 bra 	BB1_1510;
	bra.uni 	BB1_1467;

BB1_1510:
	mov.u32 	%r8029, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r31, %r35, %r8029;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r32, %r31, %r8029;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r33, %r32, %r8029;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r34, %r33, %r8029;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r34, %r11678, %r34, %r8029;
	// inline asm
	bra.uni 	BB1_1512;

BB1_364:
	setp.ne.s32	%p261, %r3787, 7;
	@%p261 bra 	BB1_10;

	mov.u32 	%r3793, 0;
	// inline asm
	shf.r.wrap.b32 %r3791, %r38, %r3793, %r3786;
	// inline asm
	and.b32  	%r3795, %r3791, %r367;
	and.b32  	%r3796, %r38, %r368;
	or.b32  	%r11682, %r3795, %r3796;
	bra.uni 	BB1_673;

BB1_190:
	setp.gt.s32	%p129, %r40, 29;
	@%p129 bra 	BB1_194;

	setp.eq.s32	%p132, %r40, 28;
	@%p132 bra 	BB1_199;
	bra.uni 	BB1_192;

BB1_199:
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r34;
	bra.uni 	BB1_200;

BB1_245:
	setp.ne.s32	%p190, %r3129, 7;
	mov.u32 	%r11541, %r35;
	mov.u32 	%r11542, %r36;
	mov.u32 	%r11543, %r37;
	mov.u32 	%r11544, %r38;
	mov.u32 	%r11545, %r34;
	mov.u32 	%r11546, %r33;
	mov.u32 	%r11547, %r32;
	mov.u32 	%r11548, %r31;
	@%p190 bra 	BB1_252;

	and.b32  	%r11544, %r202, %r38;
	mov.u32 	%r11541, %r35;
	mov.u32 	%r11542, %r36;
	mov.u32 	%r11543, %r37;

BB1_247:
	mov.u32 	%r11545, %r34;
	mov.u32 	%r11546, %r33;
	mov.u32 	%r11547, %r32;
	mov.u32 	%r11548, %r31;

BB1_252:
	setp.gt.s32	%p198, %r40, 15;
	@%p198 bra 	BB1_281;

	setp.gt.s32	%p222, %r40, 7;
	@%p222 bra 	BB1_266;

	setp.gt.s32	%p234, %r40, 3;
	@%p234 bra 	BB1_259;

	setp.eq.s32	%p240, %r40, 1;
	@%p240 bra 	BB1_331;

	setp.eq.s32	%p241, %r40, 2;
	@%p241 bra 	BB1_330;
	bra.uni 	BB1_257;

BB1_330:
	mov.u32 	%r3662, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r3662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r3662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r3662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r31, %r35, %r3662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3647, %r32, %r31, %r3662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11555, %r33, %r32, %r3662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11554, %r34, %r33, %r3662;
	// inline asm
	mov.u32 	%r3660, 0;
	// inline asm
	shf.r.wrap.b32 %r11553, %r3660, %r34, %r3662;
	// inline asm
	mov.u32 	%r34, %r3647;
	bra.uni 	BB1_334;

BB1_281:
	setp.gt.s32	%p199, %r40, 23;
	@%p199 bra 	BB1_297;

	setp.gt.s32	%p211, %r40, 19;
	@%p211 bra 	BB1_290;

	setp.gt.s32	%p217, %r40, 17;
	@%p217 bra 	BB1_287;

	setp.eq.s32	%p220, %r40, 16;
	@%p220 bra 	BB1_320;
	bra.uni 	BB1_285;

BB1_320:
	mov.u32 	%r11553, 0;
	mov.u32 	%r38, %r31;
	mov.u32 	%r37, %r32;
	mov.u32 	%r36, %r33;
	mov.u32 	%r35, %r34;
	bra.uni 	BB1_321;

BB1_266:
	setp.gt.s32	%p223, %r40, 11;
	@%p223 bra 	BB1_274;

	setp.gt.s32	%p229, %r40, 9;
	@%p229 bra 	BB1_271;

	setp.eq.s32	%p232, %r40, 8;
	@%p232 bra 	BB1_326;
	bra.uni 	BB1_269;

BB1_326:
	mov.u32 	%r11553, 0;
	mov.u32 	%r38, %r36;
	mov.u32 	%r37, %r35;
	mov.u32 	%r36, %r31;
	mov.u32 	%r35, %r32;
	mov.u32 	%r11554, %r11553;
	mov.u32 	%r11555, %r34;
	mov.u32 	%r34, %r33;
	bra.uni 	BB1_334;

BB1_297:
	setp.gt.s32	%p200, %r40, 27;
	@%p200 bra 	BB1_305;

	setp.gt.s32	%p206, %r40, 25;
	@%p206 bra 	BB1_302;

	setp.eq.s32	%p209, %r40, 24;
	@%p209 bra 	BB1_314;
	bra.uni 	BB1_300;

BB1_314:
	mov.u32 	%r36, 0;
	mov.u32 	%r38, %r33;
	mov.u32 	%r37, %r34;
	bra.uni 	BB1_315;

BB1_1219:
	setp.eq.s32	%p774, %r40, 31;
	@%p774 bra 	BB1_1238;
	bra.uni 	BB1_1220;

BB1_1238:
	mov.u32 	%r11682, 0;
	mov.u32 	%r6335, 24;
	// inline asm
	shf.r.wrap.b32 %r11686, %r38, %r11682, %r6335;
	// inline asm
	bra.uni 	BB1_1239;

BB1_1497:
	setp.eq.s32	%p977, %r7788, 31;
	@%p977 bra 	BB1_1520;
	bra.uni 	BB1_1498;

BB1_1520:
	mov.u32 	%r37, 0;
	mov.u32 	%r8326, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r34, %r8326;
	// inline asm
	bra.uni 	BB1_1521;

BB1_259:
	setp.gt.s32	%p235, %r40, 5;
	@%p235 bra 	BB1_263;

	setp.eq.s32	%p238, %r40, 4;
	@%p238 bra 	BB1_328;
	bra.uni 	BB1_261;

BB1_328:
	mov.u32 	%r11553, 0;
	mov.u32 	%r38, %r37;
	mov.u32 	%r37, %r36;
	mov.u32 	%r36, %r35;
	mov.u32 	%r35, %r31;
	mov.u32 	%r11554, %r34;
	mov.u32 	%r11555, %r33;
	mov.u32 	%r34, %r32;
	bra.uni 	BB1_334;

BB1_290:
	setp.gt.s32	%p212, %r40, 21;
	@%p212 bra 	BB1_294;

	setp.eq.s32	%p215, %r40, 20;
	@%p215 bra 	BB1_317;
	bra.uni 	BB1_292;

BB1_317:
	mov.u32 	%r35, 0;
	mov.u32 	%r38, %r32;
	mov.u32 	%r37, %r33;
	mov.u32 	%r36, %r34;
	bra.uni 	BB1_318;

BB1_274:
	setp.gt.s32	%p224, %r40, 13;
	@%p224 bra 	BB1_278;

	setp.eq.s32	%p227, %r40, 12;
	@%p227 bra 	BB1_323;
	bra.uni 	BB1_276;

BB1_323:
	mov.u32 	%r11553, 0;
	mov.u32 	%r38, %r35;
	mov.u32 	%r37, %r31;
	mov.u32 	%r36, %r32;
	mov.u32 	%r35, %r33;
	bra.uni 	BB1_324;

BB1_305:
	setp.gt.s32	%p201, %r40, 29;
	@%p201 bra 	BB1_309;

	setp.eq.s32	%p204, %r40, 28;
	@%p204 bra 	BB1_312;
	bra.uni 	BB1_307;

BB1_312:
	mov.u32 	%r37, 0;
	mov.u32 	%r38, %r34;
	bra.uni 	BB1_333;

BB1_1237:
	mov.u32 	%r6331, 8;
	// inline asm
	shf.r.wrap.b32 %r11686, %r34, %r33, %r6331;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r33, %r32, %r6331;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r32, %r31, %r6331;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6312, %r31, %r35, %r6331;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r35, %r36, %r6331;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r36, %r37, %r6331;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r37, %r38, %r6331;
	// inline asm
	mov.u32 	%r6330, 0;
	// inline asm
	shf.r.wrap.b32 %r11682, %r38, %r6330, %r6331;
	// inline asm
	mov.u32 	%r38, %r6312;
	bra.uni 	BB1_1243;

BB1_1164:
	setp.eq.s32	%p814, %r40, 3;
	@%p814 bra 	BB1_1165;
	bra.uni 	BB1_1221;

BB1_1165:
	mov.u32 	%r6267, 24;
	// inline asm
	shf.r.wrap.b32 %r11686, %r34, %r33, %r6267;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r33, %r32, %r6267;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r32, %r31, %r6267;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6248, %r31, %r35, %r6267;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r35, %r36, %r6267;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r36, %r37, %r6267;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r37, %r38, %r6267;
	// inline asm
	mov.u32 	%r6266, 0;
	// inline asm
	shf.r.wrap.b32 %r11682, %r38, %r6266, %r6267;
	// inline asm
	mov.u32 	%r38, %r6248;
	bra.uni 	BB1_1243;

BB1_1054:
	setp.eq.s32	%p752, %r42, 2;
	@%p752 bra 	BB1_1131;
	bra.uni 	BB1_1055;

BB1_1131:
	mov.u32 	%r5744, 16;
	// inline asm
	shf.r.wrap.b32 %r11604, %r34, %r33, %r5744;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r33, %r32, %r5744;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r32, %r31, %r5744;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r31, %r35, %r5744;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r35, %r36, %r5744;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r36, %r37, %r5744;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r37, %r38, %r5744;
	// inline asm
	mov.u32 	%r5743, 0;
	// inline asm
	shf.r.wrap.b32 %r11682, %r38, %r5743, %r5744;
	// inline asm
	bra.uni 	BB1_1133;

BB1_1519:
	mov.u32 	%r8322, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r8322;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r8322;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r8322;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r31, %r35, %r8322;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8307, %r32, %r31, %r8322;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11680, %r33, %r32, %r8322;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11679, %r34, %r33, %r8322;
	// inline asm
	mov.u32 	%r8320, 0;
	// inline asm
	shf.r.wrap.b32 %r11678, %r8320, %r34, %r8322;
	// inline asm
	mov.u32 	%r34, %r8307;
	bra.uni 	BB1_1522;

BB1_110:
	setp.eq.s32	%p1017, %r7788, 3;
	@%p1017 bra 	BB1_1517;
	bra.uni 	BB1_111;

BB1_1517:
	mov.u32 	%r8258, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r8258;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r8258;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r8258;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r31, %r35, %r8258;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8243, %r32, %r31, %r8258;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11680, %r33, %r32, %r8258;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11679, %r34, %r33, %r8258;
	// inline asm
	mov.u32 	%r8256, 0;
	// inline asm
	shf.r.wrap.b32 %r11678, %r8256, %r34, %r8258;
	// inline asm
	mov.u32 	%r34, %r8243;
	bra.uni 	BB1_1522;

BB1_452:
	setp.eq.s32	%p363, %r40, 2;
	@%p363 bra 	BB1_522;
	bra.uni 	BB1_453;

BB1_522:
	bfe.u32 	%r11557, %r34, 16, 8;
	bra.uni 	BB1_524;

BB1_338:
	setp.eq.s32	%p256, %r3734, 1;
	@%p256 bra 	BB1_339;
	bra.uni 	BB1_10;

BB1_339:
	and.b32  	%r3750, %r33, %r351;
	and.b32  	%r3751, %r3730, %r350;
	or.b32  	%r11687, %r3751, %r3750;
	bra.uni 	BB1_621;

BB1_1316:
	setp.gt.s32	%p925, %r6663, 5;
	@%p925 bra 	BB1_1320;

	setp.eq.s32	%p928, %r6663, 4;
	@%p928 bra 	BB1_1388;
	bra.uni 	BB1_1318;

BB1_1388:
	mov.u32 	%r11632, %r31;
	mov.u32 	%r11633, %r35;
	mov.u32 	%r11634, %r36;
	mov.u32 	%r11635, %r37;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r34;
	mov.u32 	%r11638, %r33;
	mov.u32 	%r11639, %r32;
	bra.uni 	BB1_1390;

BB1_409:
	setp.eq.s32	%p304, %r3883, 1;
	@%p304 bra 	BB1_410;
	bra.uni 	BB1_10;

BB1_410:
	and.b32  	%r3911, %r33, %r400;
	and.b32  	%r3912, %r399, %r33;
	shr.u32 	%r3913, %r3912, 1;
	and.b32  	%r3914, %r3913, %r399;
	or.b32  	%r11687, %r3914, %r3911;
	bra.uni 	BB1_621;

BB1_1265:
	setp.eq.s32	%p837, %r6408, 1;
	@%p837 bra 	BB1_1266;
	bra.uni 	BB1_1276;

BB1_1266:
	and.b32  	%r6425, %r1226, %r33;
	and.b32  	%r6426, %r11687, %r1227;
	or.b32  	%r11687, %r6426, %r6425;
	mov.u32 	%r11686, %r34;
	bra.uni 	BB1_1285;

BB1_132:
	setp.eq.s32	%p867, %r6510, 1;
	@%p867 bra 	BB1_1301;
	bra.uni 	BB1_133;

BB1_1301:
	and.b32  	%r11687, %r11687, %r1271;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;

BB1_1302:
	mov.u32 	%r11688, %r11682;

BB1_1303:
	mov.u32 	%r11689, %r11682;
	bra.uni 	BB1_1546;

BB1_1086:
	setp.eq.s32	%p729, %r42, 18;
	@%p729 bra 	BB1_1123;
	bra.uni 	BB1_1087;

BB1_1123:
	mov.u32 	%r5412, 16;
	// inline asm
	shf.r.wrap.b32 %r11604, %r35, %r36, %r5412;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r36, %r37, %r5412;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r37, %r38, %r5412;
	// inline asm
	mov.u32 	%r11685, 0;
	// inline asm
	shf.r.wrap.b32 %r11689, %r38, %r11685, %r5412;
	// inline asm
	bra.uni 	BB1_1089;

BB1_483:
	setp.eq.s32	%p340, %r40, 18;
	@%p340 bra 	BB1_514;
	bra.uni 	BB1_484;

BB1_514:
	bfe.u32 	%r11557, %r35, 16, 8;
	bra.uni 	BB1_524;

BB1_820:
	setp.eq.s32	%p553, %r40, 18;
	@%p553 bra 	BB1_852;
	bra.uni 	BB1_821;

BB1_852:
	mov.u32 	%r4454, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r32, %r31, %r4454;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r33, %r32, %r4454;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r34, %r33, %r4454;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11686, %r34, %r4454;
	// inline asm
	bra.uni 	BB1_854;

BB1_1069:
	setp.eq.s32	%p741, %r42, 10;
	@%p741 bra 	BB1_1127;
	bra.uni 	BB1_1070;

BB1_1127:
	mov.u32 	%r5562, 16;
	// inline asm
	shf.r.wrap.b32 %r11604, %r32, %r31, %r5562;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r31, %r35, %r5562;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r35, %r36, %r5562;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r36, %r37, %r5562;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r37, %r38, %r5562;
	// inline asm
	mov.u32 	%r11683, 0;
	// inline asm
	shf.r.wrap.b32 %r11684, %r38, %r11683, %r5562;
	// inline asm
	mov.u32 	%r11682, %r11683;
	bra.uni 	BB1_1133;

BB1_467:
	setp.eq.s32	%p352, %r40, 10;
	@%p352 bra 	BB1_518;
	bra.uni 	BB1_468;

BB1_518:
	bfe.u32 	%r11557, %r32, 16, 8;
	bra.uni 	BB1_524;

BB1_345:
	setp.eq.s32	%p251, %r3734, 5;
	@%p251 bra 	BB1_346;
	bra.uni 	BB1_10;

BB1_346:
	and.b32  	%r3742, %r36, %r351;
	and.b32  	%r3743, %r3714, %r350;
	or.b32  	%r11684, %r3743, %r3742;
	bra.uni 	BB1_656;

BB1_1349:
	setp.gt.s32	%p902, %r6663, 21;
	@%p902 bra 	BB1_1353;

	setp.eq.s32	%p905, %r6663, 20;
	@%p905 bra 	BB1_1380;
	bra.uni 	BB1_1351;

BB1_1380:
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r34;
	mov.u32 	%r11634, %r33;
	mov.u32 	%r11635, %r32;
	bra.uni 	BB1_1376;

BB1_416:
	setp.eq.s32	%p299, %r3883, 5;
	@%p299 bra 	BB1_417;
	bra.uni 	BB1_10;

BB1_417:
	and.b32  	%r3895, %r36, %r400;
	and.b32  	%r3896, %r399, %r36;
	shr.u32 	%r3897, %r3896, 1;
	and.b32  	%r3898, %r3897, %r399;
	or.b32  	%r11684, %r3898, %r3895;
	bra.uni 	BB1_656;

BB1_1272:
	setp.eq.s32	%p832, %r6408, 5;
	@%p832 bra 	BB1_1273;
	bra.uni 	BB1_1276;

BB1_1273:
	and.b32  	%r6417, %r1226, %r36;
	and.b32  	%r6418, %r11684, %r1227;
	or.b32  	%r11684, %r6418, %r6417;
	bra.uni 	BB1_1279;

BB1_803:
	setp.eq.s32	%p565, %r40, 10;
	@%p565 bra 	BB1_857;
	bra.uni 	BB1_804;

BB1_857:
	mov.u32 	%r4604, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r4604;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r31, %r35, %r4604;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r32, %r31, %r4604;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r33, %r32, %r4604;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r31, %r34, %r33, %r4604;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r11688, %r11686, %r34, %r4604;
	// inline asm
	mov.u32 	%r11687, %r11686;
	bra.uni 	BB1_866;

BB1_1293:
	setp.eq.s32	%p862, %r6510, 5;
	@%p862 bra 	BB1_1294;
	bra.uni 	BB1_133;

BB1_1294:
	and.b32  	%r11684, %r11684, %r1271;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	bra.uni 	BB1_1546;

BB1_1103:
	setp.eq.s32	%p718, %r42, 26;
	@%p718 bra 	BB1_1119;
	bra.uni 	BB1_1104;

BB1_1119:
	mov.u32 	%r5294, 16;
	// inline asm
	shf.r.wrap.b32 %r11604, %r37, %r38, %r5294;
	// inline asm
	mov.u32 	%r11685, 0;
	// inline asm
	shf.r.wrap.b32 %r11687, %r38, %r11685, %r5294;
	// inline asm
	bra.uni 	BB1_1106;

BB1_498:
	setp.eq.s32	%p329, %r40, 26;
	@%p329 bra 	BB1_510;
	bra.uni 	BB1_499;

BB1_510:
	bfe.u32 	%r11557, %r37, 16, 8;
	bra.uni 	BB1_524;

BB1_835:
	setp.eq.s32	%p542, %r40, 26;
	@%p542 bra 	BB1_846;
	bra.uni 	BB1_836;

BB1_846:
	mov.u32 	%r4336, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r34, %r33, %r4336;
	// inline asm
	mov.u32 	%r36, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r34, %r4336;
	// inline asm
	bra.uni 	BB1_848;

BB1_1061:
	setp.eq.s32	%p747, %r42, 6;
	@%p747 bra 	BB1_1129;
	bra.uni 	BB1_1062;

BB1_1129:
	mov.u32 	%r5649, 16;
	// inline asm
	shf.r.wrap.b32 %r11604, %r33, %r32, %r5649;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r32, %r31, %r5649;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r31, %r35, %r5649;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r35, %r36, %r5649;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r36, %r37, %r5649;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r37, %r38, %r5649;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11683, %r38, %r11682, %r5649;
	// inline asm
	bra.uni 	BB1_1133;

BB1_459:
	setp.eq.s32	%p358, %r40, 6;
	@%p358 bra 	BB1_520;
	bra.uni 	BB1_460;

BB1_520:
	bfe.u32 	%r11557, %r33, 16, 8;
	bra.uni 	BB1_524;

BB1_341:
	setp.eq.s32	%p254, %r3734, 3;
	@%p254 bra 	BB1_342;
	bra.uni 	BB1_10;

BB1_342:
	and.b32  	%r3746, %r31, %r351;
	and.b32  	%r3747, %r3722, %r350;
	or.b32  	%r11689, %r3747, %r3746;
	bra.uni 	BB1_638;

BB1_1331:
	setp.gt.s32	%p914, %r6663, 13;
	@%p914 bra 	BB1_1335;

	setp.eq.s32	%p917, %r6663, 12;
	@%p917 bra 	BB1_1384;
	bra.uni 	BB1_1333;

BB1_1384:
	mov.u32 	%r11632, %r33;
	mov.u32 	%r11633, %r32;
	mov.u32 	%r11634, %r31;
	mov.u32 	%r11635, %r35;
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r34;
	bra.uni 	BB1_1390;

BB1_412:
	setp.eq.s32	%p302, %r3883, 3;
	@%p302 bra 	BB1_413;
	bra.uni 	BB1_10;

BB1_413:
	and.b32  	%r3903, %r31, %r400;
	and.b32  	%r3904, %r399, %r31;
	shr.u32 	%r3905, %r3904, 1;
	and.b32  	%r3906, %r3905, %r399;
	or.b32  	%r11689, %r3906, %r3903;
	bra.uni 	BB1_638;

BB1_1268:
	setp.eq.s32	%p835, %r6408, 3;
	@%p835 bra 	BB1_1269;
	bra.uni 	BB1_1276;

BB1_1269:
	and.b32  	%r6421, %r1226, %r31;
	and.b32  	%r6422, %r11689, %r1227;
	or.b32  	%r11689, %r6422, %r6421;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	bra.uni 	BB1_1285;

BB1_795:
	setp.eq.s32	%p571, %r40, 6;
	@%p571 bra 	BB1_859;
	bra.uni 	BB1_796;

BB1_859:
	mov.u32 	%r4691, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r4691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r4691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r31, %r35, %r4691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r32, %r31, %r4691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r31, %r33, %r32, %r4691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r34, %r33, %r4691;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r11687, %r11686, %r34, %r4691;
	// inline asm
	bra.uni 	BB1_866;

BB1_1289:
	setp.eq.s32	%p865, %r6510, 3;
	@%p865 bra 	BB1_1290;
	bra.uni 	BB1_133;

BB1_1290:
	and.b32  	%r11689, %r11689, %r1271;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	bra.uni 	BB1_1546;

BB1_1094:
	setp.eq.s32	%p724, %r42, 22;
	@%p724 bra 	BB1_1121;
	bra.uni 	BB1_1095;

BB1_1121:
	mov.u32 	%r5349, 16;
	// inline asm
	shf.r.wrap.b32 %r11604, %r36, %r37, %r5349;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r37, %r38, %r5349;
	// inline asm
	mov.u32 	%r11685, 0;
	// inline asm
	shf.r.wrap.b32 %r11688, %r38, %r11685, %r5349;
	// inline asm
	bra.uni 	BB1_1097;

BB1_490:
	setp.eq.s32	%p335, %r40, 22;
	@%p335 bra 	BB1_512;
	bra.uni 	BB1_491;

BB1_512:
	bfe.u32 	%r11557, %r36, 16, 8;
	bra.uni 	BB1_524;

BB1_827:
	setp.eq.s32	%p548, %r40, 22;
	@%p548 bra 	BB1_849;
	bra.uni 	BB1_828;

BB1_849:
	mov.u32 	%r4391, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r33, %r32, %r4391;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r34, %r33, %r4391;
	// inline asm
	mov.u32 	%r35, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r34, %r4391;
	// inline asm
	bra.uni 	BB1_851;

BB1_1076:
	setp.eq.s32	%p736, %r42, 14;
	@%p736 bra 	BB1_1125;
	bra.uni 	BB1_1077;

BB1_1125:
	mov.u32 	%r5483, 16;
	// inline asm
	shf.r.wrap.b32 %r11604, %r31, %r35, %r5483;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r35, %r36, %r5483;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r36, %r37, %r5483;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r37, %r38, %r5483;
	// inline asm
	mov.u32 	%r11684, 0;
	// inline asm
	shf.r.wrap.b32 %r11685, %r38, %r11684, %r5483;
	// inline asm
	bra.uni 	BB1_1079;

BB1_474:
	setp.eq.s32	%p347, %r40, 14;
	@%p347 bra 	BB1_516;
	bra.uni 	BB1_475;

BB1_516:
	bfe.u32 	%r11557, %r31, 16, 8;
	bra.uni 	BB1_524;

BB1_348:
	setp.ne.s32	%p249, %r3734, 7;
	@%p249 bra 	BB1_10;

	and.b32  	%r3738, %r38, %r351;
	and.b32  	%r3739, %r3706, %r350;
	or.b32  	%r11682, %r3739, %r3738;
	bra.uni 	BB1_673;

BB1_1366:
	setp.gt.s32	%p891, %r6663, 29;
	@%p891 bra 	BB1_1370;

	setp.eq.s32	%p894, %r6663, 28;
	@%p894 bra 	BB1_1375;
	bra.uni 	BB1_1368;

BB1_1375:
	mov.u32 	%r11632, %r11640;
	mov.u32 	%r11633, %r11640;
	mov.u32 	%r11634, %r11640;
	mov.u32 	%r11635, %r34;

BB1_1376:
	mov.u32 	%r11636, %r11640;
	mov.u32 	%r11637, %r11640;
	mov.u32 	%r11638, %r11640;
	mov.u32 	%r11639, %r11640;
	bra.uni 	BB1_1390;

BB1_419:
	setp.ne.s32	%p297, %r3883, 7;
	@%p297 bra 	BB1_10;

	and.b32  	%r3887, %r38, %r400;
	and.b32  	%r3888, %r399, %r38;
	shr.u32 	%r3889, %r3888, 1;
	and.b32  	%r3890, %r3889, %r399;
	or.b32  	%r11682, %r3890, %r3887;
	bra.uni 	BB1_673;

BB1_1275:
	setp.ne.s32	%p830, %r6408, 7;
	@%p830 bra 	BB1_1276;

	and.b32  	%r6413, %r1226, %r38;
	and.b32  	%r6414, %r11682, %r1227;
	or.b32  	%r11682, %r6414, %r6413;
	bra.uni 	BB1_1277;

BB1_1276:
	mov.u32 	%r11682, %r38;

BB1_1277:
	mov.u32 	%r11683, %r37;

BB1_1278:
	mov.u32 	%r11684, %r36;

BB1_1279:
	mov.u32 	%r11685, %r35;

BB1_1280:
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	mov.u32 	%r11689, %r31;

BB1_1285:
	add.s32 	%r11690, %r30, -1;
	bra.uni 	BB1_1547;

BB1_810:
	setp.eq.s32	%p560, %r40, 14;
	@%p560 bra 	BB1_855;
	bra.uni 	BB1_811;

BB1_855:
	mov.u32 	%r4525, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r31, %r35, %r4525;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r32, %r31, %r4525;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r33, %r32, %r4525;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r34, %r33, %r4525;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r31, %r11686, %r34, %r4525;
	// inline asm
	bra.uni 	BB1_813;

BB1_1296:
	setp.ne.s32	%p860, %r6510, 7;
	@%p860 bra 	BB1_133;

	and.b32  	%r11682, %r6478, %r1271;
	bra.uni 	BB1_1546;

BB1_133:
	mov.u32 	%r11682, %r6478;
	bra.uni 	BB1_1546;

BB1_1112:
	setp.eq.s32	%p713, %r42, 30;
	@%p713 bra 	BB1_1116;
	bra.uni 	BB1_1113;

BB1_1116:
	mov.u32 	%r11685, 0;
	mov.u32 	%r5247, 16;
	// inline asm
	shf.r.wrap.b32 %r11604, %r38, %r11685, %r5247;
	// inline asm
	bra.uni 	BB1_1115;

BB1_505:
	setp.eq.s32	%p324, %r40, 30;
	@%p324 bra 	BB1_508;
	bra.uni 	BB1_506;

BB1_508:
	bfe.u32 	%r11557, %r38, 16, 8;
	bra.uni 	BB1_524;

BB1_842:
	setp.eq.s32	%p537, %r40, 31;
	@%p537 bra 	BB1_864;
	bra.uni 	BB1_843;

BB1_864:
	mov.u32 	%r37, 0;
	mov.u32 	%r4822, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r34, %r4822;
	// inline asm
	bra.uni 	BB1_865;

BB1_138:
	setp.eq.s32	%p169, %r40, 2;
	@%p169 bra 	BB1_213;
	bra.uni 	BB1_139;

BB1_213:
	mov.u32 	%r3064, 16;
	// inline asm
	shf.r.wrap.b32 %r11528, %r37, %r38, %r3064;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r36, %r37, %r3064;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r35, %r36, %r3064;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r31, %r35, %r3064;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11532, %r32, %r31, %r3064;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11531, %r33, %r32, %r3064;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11530, %r34, %r33, %r3064;
	// inline asm
	mov.u32 	%r3062, 0;
	// inline asm
	shf.r.wrap.b32 %r11529, %r3062, %r34, %r3064;
	// inline asm
	bra.uni 	BB1_214;

BB1_1192:
	setp.eq.s32	%p793, %r40, 17;
	@%p793 bra 	BB1_1193;
	bra.uni 	BB1_1221;

BB1_1193:
	mov.u32 	%r5987, 8;
	// inline asm
	shf.r.wrap.b32 %r11686, %r35, %r36, %r5987;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r36, %r37, %r5987;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r37, %r38, %r5987;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r38, %r38, %r11682, %r5987;
	// inline asm
	bra.uni 	BB1_1197;

BB1_1473:
	setp.eq.s32	%p996, %r7788, 17;
	@%p996 bra 	BB1_1474;
	bra.uni 	BB1_111;

BB1_1474:
	mov.u32 	%r7978, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r32, %r31, %r7978;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r33, %r32, %r7978;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r34, %r33, %r7978;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11678, %r34, %r7978;
	// inline asm
	bra.uni 	BB1_1509;

BB1_1176:
	setp.eq.s32	%p805, %r40, 9;
	@%p805 bra 	BB1_1177;
	bra.uni 	BB1_1221;

BB1_1177:
	mov.u32 	%r6143, 8;
	// inline asm
	shf.r.wrap.b32 %r11686, %r32, %r31, %r6143;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r31, %r35, %r6143;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r35, %r36, %r6143;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6132, %r36, %r37, %r6143;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r37, %r38, %r6143;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11684, %r38, %r11682, %r6143;
	// inline asm
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r38, %r6132;
	bra.uni 	BB1_1243;

BB1_1457:
	setp.eq.s32	%p1008, %r7788, 9;
	@%p1008 bra 	BB1_1458;
	bra.uni 	BB1_111;

BB1_1458:
	mov.u32 	%r8134, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r8134;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r31, %r35, %r8134;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r32, %r31, %r8134;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r33, %r32, %r8134;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8127, %r34, %r33, %r8134;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r11680, %r11678, %r34, %r8134;
	// inline asm
	mov.u32 	%r11679, %r11678;
	mov.u32 	%r34, %r8127;
	bra.uni 	BB1_1522;

BB1_170:
	setp.eq.s32	%p146, %r40, 18;
	@%p146 bra 	BB1_205;
	bra.uni 	BB1_171;

BB1_205:
	mov.u32 	%r2732, 16;
	// inline asm
	shf.r.wrap.b32 %r11528, %r32, %r31, %r2732;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r33, %r32, %r2732;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r34, %r33, %r2732;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11525, %r11529, %r34, %r2732;
	// inline asm
	bra.uni 	BB1_200;

BB1_1209:
	setp.eq.s32	%p782, %r40, 25;
	@%p782 bra 	BB1_1210;
	bra.uni 	BB1_1221;

BB1_1210:
	mov.u32 	%r5863, 8;
	// inline asm
	shf.r.wrap.b32 %r11686, %r37, %r38, %r5863;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11687, %r38, %r11682, %r5863;
	// inline asm
	bra.uni 	BB1_1214;

BB1_1488:
	setp.eq.s32	%p985, %r7788, 25;
	@%p985 bra 	BB1_1489;
	bra.uni 	BB1_111;

BB1_1489:
	mov.u32 	%r7854, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r34, %r33, %r7854;
	// inline asm
	mov.u32 	%r36, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r34, %r7854;
	// inline asm
	bra.uni 	BB1_1503;

BB1_1168:
	setp.eq.s32	%p811, %r40, 5;
	@%p811 bra 	BB1_1169;
	bra.uni 	BB1_1221;

BB1_1169:
	mov.u32 	%r6233, 8;
	// inline asm
	shf.r.wrap.b32 %r11686, %r33, %r32, %r6233;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r32, %r31, %r6233;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r31, %r35, %r6233;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6218, %r35, %r36, %r6233;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r36, %r37, %r6233;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r37, %r38, %r6233;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11683, %r38, %r11682, %r6233;
	// inline asm
	mov.u32 	%r38, %r6218;
	bra.uni 	BB1_1243;

BB1_710:
	setp.eq.s32	%p492, %r30, 11;
	@%p492 bra 	BB1_769;
	bra.uni 	BB1_711;

BB1_769:
	and.b32  	%r4159, %r32, 255;
	shl.b32 	%r4160, %r32, 8;
	and.b32  	%r4161, %r4160, 16711680;
	or.b32  	%r4162, %r4161, %r4159;
	shr.u32 	%r4163, %r32, 8;
	and.b32  	%r4164, %r4163, 65280;
	or.b32  	%r11688, %r4162, %r4164;
	mov.u32 	%r11690, 11;
	bra.uni 	BB1_770;

BB1_1449:
	setp.eq.s32	%p1014, %r7788, 5;
	@%p1014 bra 	BB1_1450;
	bra.uni 	BB1_111;

BB1_1450:
	mov.u32 	%r8224, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r8224;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r8224;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r31, %r35, %r8224;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r32, %r31, %r8224;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8213, %r33, %r32, %r8224;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11680, %r34, %r33, %r8224;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r11679, %r11678, %r34, %r8224;
	// inline asm
	mov.u32 	%r34, %r8213;
	bra.uni 	BB1_1522;

BB1_153:
	setp.eq.s32	%p158, %r40, 10;
	@%p158 bra 	BB1_209;
	bra.uni 	BB1_154;

BB1_209:
	mov.u32 	%r2882, 16;
	// inline asm
	shf.r.wrap.b32 %r11528, %r35, %r36, %r2882;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r31, %r35, %r2882;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r32, %r31, %r2882;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r33, %r32, %r2882;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11532, %r34, %r33, %r2882;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11531, %r11529, %r34, %r2882;
	// inline asm
	mov.u32 	%r11530, %r11529;
	bra.uni 	BB1_214;

BB1_1200:
	setp.eq.s32	%p788, %r40, 21;
	@%p788 bra 	BB1_1201;
	bra.uni 	BB1_1221;

BB1_1201:
	mov.u32 	%r5921, 8;
	// inline asm
	shf.r.wrap.b32 %r11686, %r36, %r37, %r5921;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r37, %r38, %r5921;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11688, %r38, %r11682, %r5921;
	// inline asm
	bra.uni 	BB1_1205;

BB1_1480:
	setp.eq.s32	%p991, %r7788, 21;
	@%p991 bra 	BB1_1481;
	bra.uni 	BB1_111;

BB1_1481:
	mov.u32 	%r7912, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r33, %r32, %r7912;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r34, %r33, %r7912;
	// inline asm
	mov.u32 	%r35, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r34, %r7912;
	// inline asm
	bra.uni 	BB1_1506;

BB1_1183:
	setp.eq.s32	%p800, %r40, 13;
	@%p800 bra 	BB1_1184;
	bra.uni 	BB1_1221;

BB1_1184:
	mov.u32 	%r6061, 8;
	// inline asm
	shf.r.wrap.b32 %r11686, %r31, %r35, %r6061;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r35, %r36, %r6061;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r36, %r37, %r6061;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6054, %r37, %r38, %r6061;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11685, %r38, %r11682, %r6061;
	// inline asm
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r38, %r6054;
	bra.uni 	BB1_1243;

BB1_738:
	setp.eq.s32	%p471, %r30, 26;
	@%p471 bra 	BB1_756;
	bra.uni 	BB1_739;

BB1_756:
	shl.b32 	%r4082, %r37, 8;
	and.b32  	%r4083, %r4082, 65280;
	bfe.u32 	%r4084, %r37, 8, 8;
	or.b32  	%r11683, %r4083, %r4084;
	mov.u32 	%r11690, 26;
	bra.uni 	BB1_757;

BB1_1464:
	setp.eq.s32	%p1003, %r7788, 13;
	@%p1003 bra 	BB1_1465;
	bra.uni 	BB1_111;

BB1_1465:
	mov.u32 	%r8052, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r31, %r35, %r8052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r32, %r31, %r8052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r33, %r32, %r8052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r34, %r33, %r8052;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r34, %r11678, %r34, %r8052;
	// inline asm
	bra.uni 	BB1_1512;

BB1_185:
	setp.eq.s32	%p135, %r40, 26;
	@%p135 bra 	BB1_201;
	bra.uni 	BB1_186;

BB1_201:
	mov.u32 	%r2614, 16;
	// inline asm
	shf.r.wrap.b32 %r11528, %r34, %r33, %r2614;
	// inline asm
	mov.u32 	%r11525, 0;
	// inline asm
	shf.r.wrap.b32 %r11527, %r11525, %r34, %r2614;
	// inline asm
	bra.uni 	BB1_188;

BB1_1217:
	setp.eq.s32	%p777, %r40, 29;
	@%p777 bra 	BB1_1218;
	bra.uni 	BB1_1221;

BB1_1218:
	mov.u32 	%r11682, 0;
	mov.u32 	%r5813, 8;
	// inline asm
	shf.r.wrap.b32 %r11686, %r38, %r11682, %r5813;
	// inline asm
	bra.uni 	BB1_1239;

BB1_1495:
	setp.eq.s32	%p980, %r7788, 29;
	@%p980 bra 	BB1_1496;
	bra.uni 	BB1_111;

BB1_1496:
	mov.u32 	%r37, 0;
	mov.u32 	%r7804, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r34, %r7804;
	// inline asm
	bra.uni 	BB1_1521;

BB1_702:
	setp.eq.s32	%p498, %r30, 7;
	@%p498 bra 	BB1_772;
	bra.uni 	BB1_703;

BB1_772:
	and.b32  	%r4180, %r33, 255;
	shl.b32 	%r4181, %r33, 8;
	and.b32  	%r4182, %r4181, 16711680;
	or.b32  	%r4183, %r4182, %r4180;
	shr.u32 	%r4184, %r33, 8;
	and.b32  	%r4185, %r4184, 65280;
	or.b32  	%r11687, %r4183, %r4185;
	mov.u32 	%r11690, 7;
	bra.uni 	BB1_773;

BB1_145:
	setp.eq.s32	%p164, %r40, 6;
	@%p164 bra 	BB1_211;
	bra.uni 	BB1_146;

BB1_211:
	mov.u32 	%r2969, 16;
	// inline asm
	shf.r.wrap.b32 %r11528, %r36, %r37, %r2969;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r35, %r36, %r2969;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r31, %r35, %r2969;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r32, %r31, %r2969;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11532, %r33, %r32, %r2969;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11531, %r34, %r33, %r2969;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11530, %r11529, %r34, %r2969;
	// inline asm
	bra.uni 	BB1_214;

BB1_1195:
	setp.eq.s32	%p791, %r40, 19;
	@%p791 bra 	BB1_1196;
	bra.uni 	BB1_1221;

BB1_1196:
	mov.u32 	%r5947, 24;
	// inline asm
	shf.r.wrap.b32 %r11686, %r35, %r36, %r5947;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r36, %r37, %r5947;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r37, %r38, %r5947;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r38, %r38, %r11682, %r5947;
	// inline asm

BB1_1197:
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	bra.uni 	BB1_1243;

BB1_1476:
	setp.eq.s32	%p994, %r7788, 19;
	@%p994 bra 	BB1_1477;
	bra.uni 	BB1_111;

BB1_1477:
	mov.u32 	%r7938, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r32, %r31, %r7938;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r33, %r32, %r7938;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r34, %r33, %r7938;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11678, %r34, %r7938;
	// inline asm

BB1_1509:
	mov.u32 	%r11679, %r11678;
	mov.u32 	%r11680, %r11678;
	mov.u32 	%r34, %r11678;
	bra.uni 	BB1_1522;

BB1_1179:
	setp.eq.s32	%p803, %r40, 11;
	@%p803 bra 	BB1_1180;
	bra.uni 	BB1_1221;

BB1_1180:
	mov.u32 	%r6091, 24;
	// inline asm
	shf.r.wrap.b32 %r11686, %r32, %r31, %r6091;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r31, %r35, %r6091;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r35, %r36, %r6091;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6080, %r36, %r37, %r6091;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r37, %r38, %r6091;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11684, %r38, %r11682, %r6091;
	// inline asm
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r38, %r6080;
	bra.uni 	BB1_1243;

BB1_730:
	setp.eq.s32	%p477, %r30, 22;
	@%p477 bra 	BB1_759;
	bra.uni 	BB1_731;

BB1_759:
	shl.b32 	%r4103, %r36, 8;
	and.b32  	%r4104, %r4103, 65280;
	bfe.u32 	%r4105, %r36, 8, 8;
	or.b32  	%r11684, %r4104, %r4105;
	mov.u32 	%r11690, 22;
	bra.uni 	BB1_760;

BB1_1460:
	setp.eq.s32	%p1006, %r7788, 11;
	@%p1006 bra 	BB1_1461;
	bra.uni 	BB1_111;

BB1_1461:
	mov.u32 	%r8082, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r8082;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r31, %r35, %r8082;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r32, %r31, %r8082;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r33, %r32, %r8082;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8075, %r34, %r33, %r8082;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r11680, %r11678, %r34, %r8082;
	// inline asm
	mov.u32 	%r11679, %r11678;
	mov.u32 	%r34, %r8075;
	bra.uni 	BB1_1522;

BB1_177:
	setp.eq.s32	%p141, %r40, 22;
	@%p141 bra 	BB1_203;
	bra.uni 	BB1_178;

BB1_203:
	mov.u32 	%r2669, 16;
	// inline asm
	shf.r.wrap.b32 %r11528, %r33, %r32, %r2669;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r34, %r33, %r2669;
	// inline asm
	mov.u32 	%r11525, 0;
	// inline asm
	shf.r.wrap.b32 %r11526, %r11525, %r34, %r2669;
	// inline asm
	bra.uni 	BB1_189;

BB1_1212:
	setp.eq.s32	%p780, %r40, 27;
	@%p780 bra 	BB1_1213;
	bra.uni 	BB1_1221;

BB1_1213:
	mov.u32 	%r5835, 24;
	// inline asm
	shf.r.wrap.b32 %r11686, %r37, %r38, %r5835;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11687, %r38, %r11682, %r5835;
	// inline asm

BB1_1214:
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	bra.uni 	BB1_1241;

BB1_1491:
	setp.eq.s32	%p983, %r7788, 27;
	@%p983 bra 	BB1_1492;
	bra.uni 	BB1_111;

BB1_1492:
	mov.u32 	%r7826, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r34, %r33, %r7826;
	// inline asm
	mov.u32 	%r36, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r34, %r7826;
	// inline asm

BB1_1503:
	mov.u32 	%r35, %r36;
	mov.u32 	%r11678, %r36;
	mov.u32 	%r11679, %r36;
	mov.u32 	%r11680, %r36;
	mov.u32 	%r34, %r36;
	bra.uni 	BB1_1522;

BB1_1171:
	setp.eq.s32	%p809, %r40, 7;
	@%p809 bra 	BB1_1172;
	bra.uni 	BB1_1221;

BB1_1172:
	mov.u32 	%r6175, 24;
	// inline asm
	shf.r.wrap.b32 %r11686, %r33, %r32, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r32, %r31, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r31, %r35, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6160, %r35, %r36, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r36, %r37, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r37, %r38, %r6175;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11683, %r38, %r11682, %r6175;
	// inline asm
	mov.u32 	%r38, %r6160;
	bra.uni 	BB1_1243;

BB1_717:
	setp.eq.s32	%p487, %r30, 15;
	@%p487 bra 	BB1_765;
	bra.uni 	BB1_718;

BB1_765:
	and.b32  	%r4138, %r31, 255;
	shl.b32 	%r4139, %r31, 8;
	and.b32  	%r4140, %r4139, 16711680;
	or.b32  	%r4141, %r4140, %r4138;
	shr.u32 	%r4142, %r31, 8;
	and.b32  	%r4143, %r4142, 65280;
	or.b32  	%r11689, %r4141, %r4143;
	mov.u32 	%r11690, 15;
	bra.uni 	BB1_766;

BB1_1452:
	setp.eq.s32	%p1012, %r7788, 7;
	@%p1012 bra 	BB1_1453;
	bra.uni 	BB1_111;

BB1_1453:
	mov.u32 	%r8166, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r31, %r35, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r32, %r31, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8155, %r33, %r32, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11680, %r34, %r33, %r8166;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r11679, %r11678, %r34, %r8166;
	// inline asm
	mov.u32 	%r34, %r8155;
	bra.uni 	BB1_1522;

BB1_160:
	setp.eq.s32	%p153, %r40, 14;
	@%p153 bra 	BB1_207;
	bra.uni 	BB1_161;

BB1_207:
	mov.u32 	%r2803, 16;
	// inline asm
	shf.r.wrap.b32 %r11528, %r31, %r35, %r2803;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r32, %r31, %r2803;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r33, %r32, %r2803;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r34, %r33, %r2803;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11532, %r11529, %r34, %r2803;
	// inline asm
	bra.uni 	BB1_163;

BB1_1203:
	setp.eq.s32	%p786, %r40, 23;
	@%p786 bra 	BB1_1204;
	bra.uni 	BB1_1221;

BB1_1204:
	mov.u32 	%r5887, 24;
	// inline asm
	shf.r.wrap.b32 %r11686, %r36, %r37, %r5887;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r37, %r38, %r5887;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11688, %r38, %r11682, %r5887;
	// inline asm

BB1_1205:
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	bra.uni 	BB1_1242;

BB1_1483:
	setp.eq.s32	%p989, %r7788, 23;
	@%p989 bra 	BB1_1484;
	bra.uni 	BB1_111;

BB1_1484:
	mov.u32 	%r7878, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r33, %r32, %r7878;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r34, %r33, %r7878;
	// inline asm
	mov.u32 	%r35, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r34, %r7878;
	// inline asm

BB1_1506:
	mov.u32 	%r11678, %r35;
	mov.u32 	%r11679, %r35;
	mov.u32 	%r11680, %r35;
	mov.u32 	%r34, %r35;
	bra.uni 	BB1_1522;

BB1_1186:
	setp.eq.s32	%p798, %r40, 15;
	@%p798 bra 	BB1_1187;
	bra.uni 	BB1_1221;

BB1_1187:
	mov.u32 	%r6015, 24;
	// inline asm
	shf.r.wrap.b32 %r11686, %r31, %r35, %r6015;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r35, %r36, %r6015;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r36, %r37, %r6015;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6008, %r37, %r38, %r6015;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11685, %r38, %r11682, %r6015;
	// inline asm
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r38, %r6008;
	bra.uni 	BB1_1243;

BB1_745:
	setp.eq.s32	%p466, %r30, 30;
	@%p466 bra 	BB1_748;
	bra.uni 	BB1_746;

BB1_748:
	shl.b32 	%r4061, %r38, 8;
	and.b32  	%r4062, %r4061, 65280;
	bfe.u32 	%r4063, %r38, 8, 8;
	or.b32  	%r11682, %r4062, %r4063;
	mov.u32 	%r11690, 30;
	bra.uni 	BB1_749;

BB1_1467:
	setp.eq.s32	%p1001, %r7788, 15;
	@%p1001 bra 	BB1_1468;
	bra.uni 	BB1_111;

BB1_1468:
	mov.u32 	%r8006, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r31, %r35, %r8006;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r32, %r31, %r8006;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r33, %r32, %r8006;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r34, %r33, %r8006;
	// inline asm
	mov.u32 	%r11678, 0;
	// inline asm
	shf.r.wrap.b32 %r34, %r11678, %r34, %r8006;
	// inline asm

BB1_1512:
	mov.u32 	%r11679, %r11678;
	mov.u32 	%r11680, %r11678;
	bra.uni 	BB1_1522;

BB1_194:
	setp.eq.s32	%p130, %r40, 30;
	@%p130 bra 	BB1_198;
	bra.uni 	BB1_195;

BB1_198:
	mov.u32 	%r11525, 0;
	mov.u32 	%r2567, 16;
	// inline asm
	shf.r.wrap.b32 %r11528, %r11525, %r34, %r2567;
	// inline asm
	bra.uni 	BB1_197;

BB1_287:
	setp.eq.s32	%p218, %r40, 18;
	@%p218 bra 	BB1_319;
	bra.uni 	BB1_288;

BB1_319:
	mov.u32 	%r3330, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r32, %r31, %r3330;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r33, %r32, %r3330;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r34, %r33, %r3330;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11553, %r34, %r3330;
	// inline asm
	bra.uni 	BB1_321;

BB1_271:
	setp.eq.s32	%p230, %r40, 10;
	@%p230 bra 	BB1_325;
	bra.uni 	BB1_272;

BB1_325:
	mov.u32 	%r3480, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r3480;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r31, %r35, %r3480;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r32, %r31, %r3480;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r33, %r32, %r3480;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3473, %r34, %r33, %r3480;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r11555, %r11553, %r34, %r3480;
	// inline asm
	mov.u32 	%r11554, %r11553;
	mov.u32 	%r34, %r3473;
	bra.uni 	BB1_334;

BB1_302:
	setp.eq.s32	%p207, %r40, 26;
	@%p207 bra 	BB1_313;
	bra.uni 	BB1_303;

BB1_313:
	mov.u32 	%r3212, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r34, %r33, %r3212;
	// inline asm
	mov.u32 	%r36, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r34, %r3212;
	// inline asm
	bra.uni 	BB1_315;

BB1_1220:
	setp.ne.s32	%p775, %r40, 30;
	@%p775 bra 	BB1_1221;

	mov.u32 	%r11682, 0;
	mov.u32 	%r5802, 16;
	// inline asm
	shf.r.wrap.b32 %r11686, %r38, %r11682, %r5802;
	// inline asm

BB1_1239:
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;

BB1_1240:
	mov.u32 	%r11687, %r11682;

BB1_1241:
	mov.u32 	%r11688, %r11682;

BB1_1242:
	mov.u32 	%r38, %r11682;
	bra.uni 	BB1_1243;

BB1_1221:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	mov.u32 	%r38, %r31;

BB1_1243:
	and.b32  	%r6344, %r41, 3;
	shl.b32 	%r6345, %r6344, 3;
	mov.u32 	%r6346, 1;
	shl.b32 	%r6347, %r6346, %r6345;
	add.s32 	%r1209, %r6347, -1;
	shr.u32 	%r6343, %r42, 2;
	setp.gt.s32	%p815, %r6343, 3;
	@%p815 bra 	BB1_1251;

	setp.gt.s32	%p821, %r6343, 1;
	@%p821 bra 	BB1_1248;

	setp.eq.s32	%p824, %r6343, 0;
	@%p824 bra 	BB1_1264;
	bra.uni 	BB1_1246;

BB1_1264:
	and.b32  	%r11686, %r11686, %r1209;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11687, %r11682;
	bra.uni 	BB1_1262;

BB1_1251:
	setp.gt.s32	%p816, %r6343, 5;
	@%p816 bra 	BB1_1255;

	setp.eq.s32	%p819, %r6343, 4;
	@%p819 bra 	BB1_1259;
	bra.uni 	BB1_1253;

BB1_1259:
	and.b32  	%r11685, %r11685, %r1209;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	bra.uni 	BB1_1247;

BB1_1248:
	setp.eq.s32	%p822, %r6343, 2;
	@%p822 bra 	BB1_1260;
	bra.uni 	BB1_1249;

BB1_1260:
	and.b32  	%r11688, %r11688, %r1209;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	bra.uni 	BB1_1263;

BB1_1255:
	setp.eq.s32	%p817, %r6343, 6;
	@%p817 bra 	BB1_1258;
	bra.uni 	BB1_1256;

BB1_1258:
	and.b32  	%r11683, %r11683, %r1209;
	mov.u32 	%r11682, 0;
	bra.uni 	BB1_1247;

BB1_1246:
	setp.eq.s32	%p825, %r6343, 1;
	@%p825 bra 	BB1_1261;
	bra.uni 	BB1_1247;

BB1_1261:
	and.b32  	%r11687, %r11687, %r1209;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;

BB1_1262:
	mov.u32 	%r11688, %r11682;

BB1_1263:
	mov.u32 	%r11689, %r11682;
	mov.u32 	%r11690, %r42;
	bra.uni 	BB1_1547;

BB1_1253:
	setp.eq.s32	%p820, %r6343, 5;
	@%p820 bra 	BB1_1254;
	bra.uni 	BB1_1247;

BB1_1254:
	and.b32  	%r11684, %r11684, %r1209;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	bra.uni 	BB1_1247;

BB1_1249:
	setp.eq.s32	%p823, %r6343, 3;
	@%p823 bra 	BB1_1250;
	bra.uni 	BB1_1247;

BB1_1250:
	and.b32  	%r11689, %r38, %r1209;
	mov.u32 	%r11682, 0;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11690, %r42;
	bra.uni 	BB1_1547;

BB1_1256:
	setp.ne.s32	%p818, %r6343, 7;
	@%p818 bra 	BB1_1247;

	and.b32  	%r11682, %r11682, %r1209;

BB1_1247:
	mov.u32 	%r11689, %r38;
	mov.u32 	%r11690, %r42;
	bra.uni 	BB1_1547;

BB1_1498:
	setp.ne.s32	%p978, %r7788, 30;
	@%p978 bra 	BB1_111;

	mov.u32 	%r37, 0;
	mov.u32 	%r7793, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r34, %r7793;
	// inline asm

BB1_1521:
	mov.u32 	%r36, %r37;
	mov.u32 	%r35, %r37;
	mov.u32 	%r11678, %r37;
	mov.u32 	%r11679, %r37;
	mov.u32 	%r11680, %r37;
	mov.u32 	%r34, %r37;
	bra.uni 	BB1_1522;

BB1_111:
	mov.u32 	%r11678, %r34;
	mov.u32 	%r11679, %r33;
	mov.u32 	%r11680, %r32;
	mov.u32 	%r34, %r31;

BB1_1522:
	// inline asm
	prmt.b32 %r11686, %r38, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11687, %r37, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11688, %r36, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11689, %r35, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11685, %r34, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11684, %r11680, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11683, %r11679, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11682, %r11678, 0, 0x0123;
	// inline asm
	bra.uni 	BB1_1546;

BB1_263:
	setp.eq.s32	%p236, %r40, 6;
	@%p236 bra 	BB1_327;
	bra.uni 	BB1_264;

BB1_327:
	mov.u32 	%r3567, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r3567;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r3567;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r31, %r35, %r3567;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r32, %r31, %r3567;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3556, %r33, %r32, %r3567;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11555, %r34, %r33, %r3567;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r11554, %r11553, %r34, %r3567;
	// inline asm
	mov.u32 	%r34, %r3556;
	bra.uni 	BB1_334;

BB1_294:
	setp.eq.s32	%p213, %r40, 22;
	@%p213 bra 	BB1_316;
	bra.uni 	BB1_295;

BB1_316:
	mov.u32 	%r3267, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r33, %r32, %r3267;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r34, %r33, %r3267;
	// inline asm
	mov.u32 	%r35, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r34, %r3267;
	// inline asm
	bra.uni 	BB1_318;

BB1_278:
	setp.eq.s32	%p225, %r40, 14;
	@%p225 bra 	BB1_322;
	bra.uni 	BB1_279;

BB1_322:
	mov.u32 	%r3401, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r31, %r35, %r3401;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r32, %r31, %r3401;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r33, %r32, %r3401;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r34, %r33, %r3401;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r34, %r11553, %r34, %r3401;
	// inline asm
	bra.uni 	BB1_324;

BB1_309:
	setp.eq.s32	%p202, %r40, 31;
	@%p202 bra 	BB1_332;
	bra.uni 	BB1_310;

BB1_332:
	mov.u32 	%r37, 0;
	mov.u32 	%r3698, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r34, %r3698;
	// inline asm
	bra.uni 	BB1_333;

BB1_863:
	mov.u32 	%r4818, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r4818;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r4818;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r4818;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r31, %r35, %r4818;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r31, %r32, %r31, %r4818;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r33, %r32, %r4818;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r34, %r33, %r4818;
	// inline asm
	mov.u32 	%r4816, 0;
	// inline asm
	shf.r.wrap.b32 %r11686, %r4816, %r34, %r4818;
	// inline asm
	bra.uni 	BB1_866;

BB1_789:
	setp.eq.s32	%p577, %r40, 3;
	@%p577 bra 	BB1_861;
	bra.uni 	BB1_790;

BB1_861:
	mov.u32 	%r4754, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r4754;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r4754;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r4754;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r31, %r35, %r4754;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r31, %r32, %r31, %r4754;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r33, %r32, %r4754;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r34, %r33, %r4754;
	// inline asm
	mov.u32 	%r4752, 0;
	// inline asm
	shf.r.wrap.b32 %r11686, %r4752, %r34, %r4754;
	// inline asm
	bra.uni 	BB1_866;

BB1_1052:
	setp.eq.s32	%p755, %r42, 1;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p755 bra 	BB1_1053;
	bra.uni 	BB1_1133;

BB1_1053:
	mov.u32 	%r5776, 8;
	// inline asm
	shf.r.wrap.b32 %r11604, %r34, %r33, %r5776;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r33, %r32, %r5776;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r32, %r31, %r5776;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r31, %r35, %r5776;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r35, %r36, %r5776;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r36, %r37, %r5776;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r37, %r38, %r5776;
	// inline asm
	mov.u32 	%r5775, 0;
	// inline asm
	shf.r.wrap.b32 %r11682, %r38, %r5775, %r5776;
	// inline asm
	bra.uni 	BB1_1133;

BB1_775:
	shl.b32 	%r4208, %r34, 8;
	and.b32  	%r4209, %r4208, 65280;
	bfe.u32 	%r4210, %r34, 8, 8;
	or.b32  	%r11686, %r4209, %r4210;
	mov.u32 	%r11690, 2;
	bra.uni 	BB1_776;

BB1_696:
	setp.eq.s32	%p504, %r30, 4;
	@%p504 bra 	BB1_697;
	bra.uni 	BB1_10;

BB1_697:
	and.b32  	%r4194, %r34, 65535;
	shl.b32 	%r4195, %r34, 8;
	and.b32  	%r4196, %r4195, -16777216;
	or.b32  	%r4197, %r4196, %r4194;
	shr.u32 	%r4198, %r34, 8;
	and.b32  	%r4199, %r4198, 16711680;
	or.b32  	%r11686, %r4197, %r4199;
	mov.u32 	%r11690, 4;

BB1_776:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	bra.uni 	BB1_753;

BB1_450:
	setp.eq.s32	%p366, %r40, 1;
	mov.u32 	%r11557, %r11566;
	@%p366 bra 	BB1_451;
	bra.uni 	BB1_524;

BB1_451:
	bfe.u32 	%r11557, %r34, 8, 8;
	bra.uni 	BB1_524;

BB1_1313:
	setp.eq.s32	%p931, %r6663, 2;
	@%p931 bra 	BB1_1389;
	bra.uni 	BB1_1314;

BB1_1389:
	mov.u32 	%r7176, 16;
	// inline asm
	shf.r.wrap.b32 %r11635, %r37, %r38, %r7176;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r36, %r37, %r7176;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r35, %r36, %r7176;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r31, %r35, %r7176;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11639, %r32, %r31, %r7176;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11638, %r33, %r32, %r7176;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11637, %r34, %r33, %r7176;
	// inline asm
	mov.u32 	%r7174, 0;
	// inline asm
	shf.r.wrap.b32 %r11636, %r7174, %r34, %r7176;
	// inline asm
	bra.uni 	BB1_1390;

BB1_1084:
	setp.eq.s32	%p732, %r42, 17;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p732 bra 	BB1_1085;
	bra.uni 	BB1_1133;

BB1_1085:
	mov.u32 	%r5432, 8;
	// inline asm
	shf.r.wrap.b32 %r11604, %r35, %r36, %r5432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r36, %r37, %r5432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r37, %r38, %r5432;
	// inline asm
	mov.u32 	%r11685, 0;
	// inline asm
	shf.r.wrap.b32 %r11689, %r38, %r11685, %r5432;
	// inline asm
	bra.uni 	BB1_1089;

BB1_481:
	setp.eq.s32	%p343, %r40, 17;
	mov.u32 	%r11557, %r11566;
	@%p343 bra 	BB1_482;
	bra.uni 	BB1_524;

BB1_482:
	bfe.u32 	%r11557, %r35, 8, 8;
	bra.uni 	BB1_524;

BB1_818:
	setp.eq.s32	%p556, %r40, 17;
	@%p556 bra 	BB1_819;
	bra.uni 	BB1_790;

BB1_819:
	mov.u32 	%r4474, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r32, %r31, %r4474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r33, %r32, %r4474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r34, %r33, %r4474;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11686, %r34, %r4474;
	// inline asm
	bra.uni 	BB1_854;

BB1_764:
	or.b32  	%r4128, %r31, %r35;
	and.b32  	%r4129, %r31, 16777215;
	prmt.b32 	%r11689, %r35, %r4129, 1620;
	shr.u32 	%r11685, %r4128, 24;
	mov.u32 	%r11690, 17;
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	bra.uni 	BB1_767;

BB1_724:
	setp.eq.s32	%p483, %r30, 19;
	@%p483 bra 	BB1_725;
	bra.uni 	BB1_10;

BB1_725:
	and.b32  	%r4117, %r35, 255;
	shl.b32 	%r4118, %r35, 8;
	and.b32  	%r4119, %r4118, 16711680;
	or.b32  	%r4120, %r4119, %r4117;
	shr.u32 	%r4121, %r35, 8;
	and.b32  	%r4122, %r4121, 65280;
	or.b32  	%r11685, %r4120, %r4122;
	mov.u32 	%r11690, 19;

BB1_763:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	bra.uni 	BB1_752;

BB1_1067:
	setp.eq.s32	%p744, %r42, 9;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p744 bra 	BB1_1068;
	bra.uni 	BB1_1133;

BB1_1068:
	mov.u32 	%r5588, 8;
	// inline asm
	shf.r.wrap.b32 %r11604, %r32, %r31, %r5588;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r31, %r35, %r5588;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r35, %r36, %r5588;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r36, %r37, %r5588;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r37, %r38, %r5588;
	// inline asm
	mov.u32 	%r11683, 0;
	// inline asm
	shf.r.wrap.b32 %r11684, %r38, %r11683, %r5588;
	// inline asm
	mov.u32 	%r11682, %r11683;
	bra.uni 	BB1_1133;

BB1_465:
	setp.eq.s32	%p355, %r40, 9;
	mov.u32 	%r11557, %r11566;
	@%p355 bra 	BB1_466;
	bra.uni 	BB1_524;

BB1_466:
	bfe.u32 	%r11557, %r32, 8, 8;
	bra.uni 	BB1_524;

BB1_1345:
	setp.eq.s32	%p908, %r6663, 18;
	@%p908 bra 	BB1_1381;
	bra.uni 	BB1_1346;

BB1_1381:
	mov.u32 	%r6844, 16;
	// inline asm
	shf.r.wrap.b32 %r11635, %r32, %r31, %r6844;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r33, %r32, %r6844;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r34, %r33, %r6844;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11632, %r11636, %r34, %r6844;
	// inline asm
	bra.uni 	BB1_1348;

BB1_801:
	setp.eq.s32	%p568, %r40, 9;
	@%p568 bra 	BB1_802;
	bra.uni 	BB1_790;

BB1_802:
	mov.u32 	%r4630, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r4630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r31, %r35, %r4630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r32, %r31, %r4630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r33, %r32, %r4630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r31, %r34, %r33, %r4630;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r11688, %r11686, %r34, %r4630;
	// inline asm
	mov.u32 	%r11687, %r11686;
	bra.uni 	BB1_866;

BB1_1101:
	setp.eq.s32	%p721, %r42, 25;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p721 bra 	BB1_1102;
	bra.uni 	BB1_1133;

BB1_1102:
	mov.u32 	%r5308, 8;
	// inline asm
	shf.r.wrap.b32 %r11604, %r37, %r38, %r5308;
	// inline asm
	mov.u32 	%r11685, 0;
	// inline asm
	shf.r.wrap.b32 %r11687, %r38, %r11685, %r5308;
	// inline asm
	bra.uni 	BB1_1106;

BB1_496:
	setp.eq.s32	%p332, %r40, 25;
	mov.u32 	%r11557, %r11566;
	@%p332 bra 	BB1_497;
	bra.uni 	BB1_524;

BB1_497:
	bfe.u32 	%r11557, %r37, 8, 8;
	bra.uni 	BB1_524;

BB1_833:
	setp.eq.s32	%p545, %r40, 25;
	@%p545 bra 	BB1_834;
	bra.uni 	BB1_790;

BB1_834:
	mov.u32 	%r4350, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r34, %r33, %r4350;
	// inline asm
	mov.u32 	%r36, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r34, %r4350;
	// inline asm
	bra.uni 	BB1_848;

BB1_1059:
	setp.eq.s32	%p750, %r42, 5;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p750 bra 	BB1_1060;
	bra.uni 	BB1_1133;

BB1_1060:
	mov.u32 	%r5678, 8;
	// inline asm
	shf.r.wrap.b32 %r11604, %r33, %r32, %r5678;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r32, %r31, %r5678;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r31, %r35, %r5678;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r35, %r36, %r5678;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r36, %r37, %r5678;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r37, %r38, %r5678;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11683, %r38, %r11682, %r5678;
	// inline asm
	bra.uni 	BB1_1133;

BB1_457:
	setp.eq.s32	%p361, %r40, 5;
	mov.u32 	%r11557, %r11566;
	@%p361 bra 	BB1_458;
	bra.uni 	BB1_524;

BB1_458:
	bfe.u32 	%r11557, %r33, 8, 8;
	bra.uni 	BB1_524;

BB1_1328:
	setp.eq.s32	%p920, %r6663, 10;
	@%p920 bra 	BB1_1385;
	bra.uni 	BB1_1329;

BB1_1385:
	mov.u32 	%r6994, 16;
	// inline asm
	shf.r.wrap.b32 %r11635, %r35, %r36, %r6994;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r31, %r35, %r6994;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r32, %r31, %r6994;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r33, %r32, %r6994;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11639, %r34, %r33, %r6994;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11638, %r11636, %r34, %r6994;
	// inline asm
	mov.u32 	%r11637, %r11636;
	bra.uni 	BB1_1390;

BB1_793:
	setp.eq.s32	%p574, %r40, 5;
	@%p574 bra 	BB1_794;
	bra.uni 	BB1_790;

BB1_794:
	mov.u32 	%r4720, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r4720;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r4720;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r31, %r35, %r4720;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r32, %r31, %r4720;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r31, %r33, %r32, %r4720;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r34, %r33, %r4720;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r11687, %r11686, %r34, %r4720;
	// inline asm
	bra.uni 	BB1_866;

BB1_1092:
	setp.eq.s32	%p727, %r42, 21;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p727 bra 	BB1_1093;
	bra.uni 	BB1_1133;

BB1_1093:
	mov.u32 	%r5366, 8;
	// inline asm
	shf.r.wrap.b32 %r11604, %r36, %r37, %r5366;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r37, %r38, %r5366;
	// inline asm
	mov.u32 	%r11685, 0;
	// inline asm
	shf.r.wrap.b32 %r11688, %r38, %r11685, %r5366;
	// inline asm
	bra.uni 	BB1_1097;

BB1_488:
	setp.eq.s32	%p338, %r40, 21;
	mov.u32 	%r11557, %r11566;
	@%p338 bra 	BB1_489;
	bra.uni 	BB1_524;

BB1_489:
	bfe.u32 	%r11557, %r36, 8, 8;
	bra.uni 	BB1_524;

BB1_825:
	setp.eq.s32	%p551, %r40, 21;
	@%p551 bra 	BB1_826;
	bra.uni 	BB1_790;

BB1_826:
	mov.u32 	%r4408, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r33, %r32, %r4408;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r34, %r33, %r4408;
	// inline asm
	mov.u32 	%r35, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r34, %r4408;
	// inline asm
	bra.uni 	BB1_851;

BB1_1074:
	setp.eq.s32	%p739, %r42, 13;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p739 bra 	BB1_1075;
	bra.uni 	BB1_1133;

BB1_1075:
	mov.u32 	%r5506, 8;
	// inline asm
	shf.r.wrap.b32 %r11604, %r31, %r35, %r5506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r35, %r36, %r5506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r36, %r37, %r5506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r37, %r38, %r5506;
	// inline asm
	mov.u32 	%r11684, 0;
	// inline asm
	shf.r.wrap.b32 %r11685, %r38, %r11684, %r5506;
	// inline asm
	bra.uni 	BB1_1079;

BB1_472:
	setp.eq.s32	%p350, %r40, 13;
	mov.u32 	%r11557, %r11566;
	@%p350 bra 	BB1_473;
	bra.uni 	BB1_524;

BB1_473:
	bfe.u32 	%r11557, %r31, 8, 8;
	bra.uni 	BB1_524;

BB1_1361:
	setp.eq.s32	%p897, %r6663, 26;
	@%p897 bra 	BB1_1377;
	bra.uni 	BB1_1362;

BB1_1377:
	mov.u32 	%r6726, 16;
	// inline asm
	shf.r.wrap.b32 %r11635, %r34, %r33, %r6726;
	// inline asm
	mov.u32 	%r11632, 0;
	// inline asm
	shf.r.wrap.b32 %r11634, %r11632, %r34, %r6726;
	// inline asm
	bra.uni 	BB1_1364;

BB1_808:
	setp.eq.s32	%p563, %r40, 13;
	@%p563 bra 	BB1_809;
	bra.uni 	BB1_790;

BB1_809:
	mov.u32 	%r4548, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r31, %r35, %r4548;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r32, %r31, %r4548;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r33, %r32, %r4548;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r34, %r33, %r4548;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r31, %r11686, %r34, %r4548;
	// inline asm
	bra.uni 	BB1_813;

BB1_1110:
	setp.eq.s32	%p716, %r42, 29;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p716 bra 	BB1_1111;
	bra.uni 	BB1_1133;

BB1_1111:
	mov.u32 	%r11685, 0;
	mov.u32 	%r5258, 8;
	// inline asm
	shf.r.wrap.b32 %r11604, %r38, %r11685, %r5258;
	// inline asm
	bra.uni 	BB1_1115;

BB1_503:
	setp.eq.s32	%p327, %r40, 29;
	mov.u32 	%r11557, %r11566;
	@%p327 bra 	BB1_504;
	bra.uni 	BB1_524;

BB1_504:
	bfe.u32 	%r11557, %r38, 8, 8;
	bra.uni 	BB1_524;

BB1_840:
	setp.eq.s32	%p540, %r40, 29;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	@%p540 bra 	BB1_841;
	bra.uni 	BB1_866;

BB1_841:
	mov.u32 	%r37, 0;
	mov.u32 	%r4300, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r34, %r4300;
	// inline asm
	bra.uni 	BB1_865;

BB1_331:
	mov.u32 	%r3694, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r3694;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r3694;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r3694;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r31, %r35, %r3694;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3679, %r32, %r31, %r3694;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11555, %r33, %r32, %r3694;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11554, %r34, %r33, %r3694;
	// inline asm
	mov.u32 	%r3692, 0;
	// inline asm
	shf.r.wrap.b32 %r11553, %r3692, %r34, %r3694;
	// inline asm
	mov.u32 	%r34, %r3679;
	bra.uni 	BB1_334;

BB1_257:
	setp.eq.s32	%p242, %r40, 3;
	@%p242 bra 	BB1_329;
	bra.uni 	BB1_258;

BB1_329:
	mov.u32 	%r3630, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r31, %r35, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3615, %r32, %r31, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11555, %r33, %r32, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11554, %r34, %r33, %r3630;
	// inline asm
	mov.u32 	%r3628, 0;
	// inline asm
	shf.r.wrap.b32 %r11553, %r3628, %r34, %r3630;
	// inline asm
	mov.u32 	%r34, %r3615;
	bra.uni 	BB1_334;

BB1_1055:
	setp.eq.s32	%p753, %r42, 3;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p753 bra 	BB1_1056;
	bra.uni 	BB1_1133;

BB1_1056:
	mov.u32 	%r5712, 24;
	// inline asm
	shf.r.wrap.b32 %r11604, %r34, %r33, %r5712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r33, %r32, %r5712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r32, %r31, %r5712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r31, %r35, %r5712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r35, %r36, %r5712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r36, %r37, %r5712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11683, %r37, %r38, %r5712;
	// inline asm
	mov.u32 	%r5711, 0;
	// inline asm
	shf.r.wrap.b32 %r11682, %r38, %r5711, %r5712;
	// inline asm
	bra.uni 	BB1_1133;

BB1_453:
	setp.eq.s32	%p364, %r40, 3;
	mov.u32 	%r11557, %r11566;
	@%p364 bra 	BB1_454;
	bra.uni 	BB1_524;

BB1_454:
	shr.u32 	%r11557, %r34, 24;
	bra.uni 	BB1_524;

BB1_1320:
	setp.eq.s32	%p926, %r6663, 6;
	@%p926 bra 	BB1_1387;
	bra.uni 	BB1_1321;

BB1_1387:
	mov.u32 	%r7081, 16;
	// inline asm
	shf.r.wrap.b32 %r11635, %r36, %r37, %r7081;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r35, %r36, %r7081;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r31, %r35, %r7081;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r32, %r31, %r7081;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11639, %r33, %r32, %r7081;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11638, %r34, %r33, %r7081;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11637, %r11636, %r34, %r7081;
	// inline asm
	bra.uni 	BB1_1390;

BB1_1087:
	setp.eq.s32	%p730, %r42, 19;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p730 bra 	BB1_1088;
	bra.uni 	BB1_1133;

BB1_1088:
	mov.u32 	%r5392, 24;
	// inline asm
	shf.r.wrap.b32 %r11604, %r35, %r36, %r5392;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r36, %r37, %r5392;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r37, %r38, %r5392;
	// inline asm
	mov.u32 	%r11685, 0;
	// inline asm
	shf.r.wrap.b32 %r11689, %r38, %r11685, %r5392;
	// inline asm

BB1_1089:
	mov.u32 	%r11684, %r11685;
	mov.u32 	%r11683, %r11685;
	mov.u32 	%r11682, %r11685;
	bra.uni 	BB1_1133;

BB1_484:
	setp.eq.s32	%p341, %r40, 19;
	mov.u32 	%r11557, %r11566;
	@%p341 bra 	BB1_485;
	bra.uni 	BB1_524;

BB1_485:
	shr.u32 	%r11557, %r35, 24;
	bra.uni 	BB1_524;

BB1_821:
	setp.eq.s32	%p554, %r40, 19;
	@%p554 bra 	BB1_822;
	bra.uni 	BB1_790;

BB1_822:
	mov.u32 	%r4434, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r32, %r31, %r4434;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r33, %r32, %r4434;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r34, %r33, %r4434;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11686, %r34, %r4434;
	// inline asm

BB1_854:
	mov.u32 	%r11687, %r11686;
	mov.u32 	%r11688, %r11686;
	mov.u32 	%r31, %r11686;
	bra.uni 	BB1_866;

BB1_1070:
	setp.eq.s32	%p742, %r42, 11;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p742 bra 	BB1_1071;
	bra.uni 	BB1_1133;

BB1_1071:
	mov.u32 	%r5536, 24;
	// inline asm
	shf.r.wrap.b32 %r11604, %r32, %r31, %r5536;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r31, %r35, %r5536;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r35, %r36, %r5536;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r36, %r37, %r5536;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r37, %r38, %r5536;
	// inline asm
	mov.u32 	%r11683, 0;
	// inline asm
	shf.r.wrap.b32 %r11684, %r38, %r11683, %r5536;
	// inline asm
	mov.u32 	%r11682, %r11683;
	bra.uni 	BB1_1133;

BB1_468:
	setp.eq.s32	%p353, %r40, 11;
	mov.u32 	%r11557, %r11566;
	@%p353 bra 	BB1_469;
	bra.uni 	BB1_524;

BB1_469:
	shr.u32 	%r11557, %r32, 24;
	bra.uni 	BB1_524;

BB1_1353:
	setp.eq.s32	%p903, %r6663, 22;
	@%p903 bra 	BB1_1379;
	bra.uni 	BB1_1354;

BB1_1379:
	mov.u32 	%r6781, 16;
	// inline asm
	shf.r.wrap.b32 %r11635, %r33, %r32, %r6781;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r34, %r33, %r6781;
	// inline asm
	mov.u32 	%r11632, 0;
	// inline asm
	shf.r.wrap.b32 %r11633, %r11632, %r34, %r6781;
	// inline asm
	bra.uni 	BB1_1365;

BB1_804:
	setp.eq.s32	%p566, %r40, 11;
	@%p566 bra 	BB1_805;
	bra.uni 	BB1_790;

BB1_805:
	mov.u32 	%r4578, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r4578;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r31, %r35, %r4578;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r32, %r31, %r4578;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r33, %r32, %r4578;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r31, %r34, %r33, %r4578;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r11688, %r11686, %r34, %r4578;
	// inline asm
	mov.u32 	%r11687, %r11686;
	bra.uni 	BB1_866;

BB1_1104:
	setp.eq.s32	%p719, %r42, 27;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p719 bra 	BB1_1105;
	bra.uni 	BB1_1133;

BB1_1105:
	mov.u32 	%r5280, 24;
	// inline asm
	shf.r.wrap.b32 %r11604, %r37, %r38, %r5280;
	// inline asm
	mov.u32 	%r11685, 0;
	// inline asm
	shf.r.wrap.b32 %r11687, %r38, %r11685, %r5280;
	// inline asm

BB1_1106:
	mov.u32 	%r11684, %r11685;
	mov.u32 	%r11683, %r11685;
	mov.u32 	%r11682, %r11685;
	bra.uni 	BB1_1107;

BB1_499:
	setp.eq.s32	%p330, %r40, 27;
	mov.u32 	%r11557, %r11566;
	@%p330 bra 	BB1_500;
	bra.uni 	BB1_524;

BB1_500:
	shr.u32 	%r11557, %r37, 24;
	bra.uni 	BB1_524;

BB1_836:
	setp.eq.s32	%p543, %r40, 27;
	@%p543 bra 	BB1_837;
	bra.uni 	BB1_790;

BB1_837:
	mov.u32 	%r4322, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r34, %r33, %r4322;
	// inline asm
	mov.u32 	%r36, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r34, %r4322;
	// inline asm

BB1_848:
	mov.u32 	%r35, %r36;
	mov.u32 	%r11686, %r36;
	mov.u32 	%r11687, %r36;
	mov.u32 	%r11688, %r36;
	mov.u32 	%r31, %r36;
	bra.uni 	BB1_866;

BB1_1062:
	setp.eq.s32	%p748, %r42, 7;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p748 bra 	BB1_1063;
	bra.uni 	BB1_1133;

BB1_1063:
	mov.u32 	%r5620, 24;
	// inline asm
	shf.r.wrap.b32 %r11604, %r33, %r32, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r32, %r31, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r31, %r35, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r35, %r36, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11685, %r36, %r37, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11684, %r37, %r38, %r5620;
	// inline asm
	mov.u32 	%r11682, 0;
	// inline asm
	shf.r.wrap.b32 %r11683, %r38, %r11682, %r5620;
	// inline asm
	bra.uni 	BB1_1133;

BB1_460:
	setp.eq.s32	%p359, %r40, 7;
	mov.u32 	%r11557, %r11566;
	@%p359 bra 	BB1_461;
	bra.uni 	BB1_524;

BB1_461:
	shr.u32 	%r11557, %r33, 24;
	bra.uni 	BB1_524;

BB1_1335:
	setp.eq.s32	%p915, %r6663, 14;
	@%p915 bra 	BB1_1383;
	bra.uni 	BB1_1336;

BB1_1383:
	mov.u32 	%r6915, 16;
	// inline asm
	shf.r.wrap.b32 %r11635, %r31, %r35, %r6915;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11634, %r32, %r31, %r6915;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11633, %r33, %r32, %r6915;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11632, %r34, %r33, %r6915;
	// inline asm
	mov.u32 	%r11636, 0;
	// inline asm
	shf.r.wrap.b32 %r11639, %r11636, %r34, %r6915;
	// inline asm
	bra.uni 	BB1_1338;

BB1_796:
	setp.eq.s32	%p572, %r40, 7;
	@%p572 bra 	BB1_797;
	bra.uni 	BB1_790;

BB1_797:
	mov.u32 	%r4662, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r31, %r35, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r32, %r31, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r31, %r33, %r32, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r34, %r33, %r4662;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r11687, %r11686, %r34, %r4662;
	// inline asm
	bra.uni 	BB1_866;

BB1_1095:
	setp.eq.s32	%p725, %r42, 23;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p725 bra 	BB1_1096;
	bra.uni 	BB1_1133;

BB1_1096:
	mov.u32 	%r5332, 24;
	// inline asm
	shf.r.wrap.b32 %r11604, %r36, %r37, %r5332;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r37, %r38, %r5332;
	// inline asm
	mov.u32 	%r11685, 0;
	// inline asm
	shf.r.wrap.b32 %r11688, %r38, %r11685, %r5332;
	// inline asm

BB1_1097:
	mov.u32 	%r11684, %r11685;
	mov.u32 	%r11683, %r11685;
	mov.u32 	%r11682, %r11685;
	mov.u32 	%r11689, %r11685;
	bra.uni 	BB1_1133;

BB1_491:
	setp.eq.s32	%p336, %r40, 23;
	mov.u32 	%r11557, %r11566;
	@%p336 bra 	BB1_492;
	bra.uni 	BB1_524;

BB1_492:
	shr.u32 	%r11557, %r36, 24;
	bra.uni 	BB1_524;

BB1_828:
	setp.eq.s32	%p549, %r40, 23;
	@%p549 bra 	BB1_829;
	bra.uni 	BB1_790;

BB1_829:
	mov.u32 	%r4374, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r33, %r32, %r4374;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r34, %r33, %r4374;
	// inline asm
	mov.u32 	%r35, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r34, %r4374;
	// inline asm

BB1_851:
	mov.u32 	%r11686, %r35;
	mov.u32 	%r11687, %r35;
	mov.u32 	%r11688, %r35;
	mov.u32 	%r31, %r35;
	bra.uni 	BB1_866;

BB1_1077:
	setp.eq.s32	%p737, %r42, 15;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p737 bra 	BB1_1078;
	bra.uni 	BB1_1133;

BB1_1078:
	mov.u32 	%r5460, 24;
	// inline asm
	shf.r.wrap.b32 %r11604, %r31, %r35, %r5460;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11687, %r35, %r36, %r5460;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11688, %r36, %r37, %r5460;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11689, %r37, %r38, %r5460;
	// inline asm
	mov.u32 	%r11684, 0;
	// inline asm
	shf.r.wrap.b32 %r11685, %r38, %r11684, %r5460;
	// inline asm

BB1_1079:
	mov.u32 	%r11683, %r11684;
	mov.u32 	%r11682, %r11684;
	bra.uni 	BB1_1133;

BB1_475:
	setp.eq.s32	%p348, %r40, 15;
	mov.u32 	%r11557, %r11566;
	@%p348 bra 	BB1_476;
	bra.uni 	BB1_524;

BB1_476:
	shr.u32 	%r11557, %r31, 24;
	bra.uni 	BB1_524;

BB1_1370:
	setp.eq.s32	%p892, %r6663, 30;
	@%p892 bra 	BB1_1374;
	bra.uni 	BB1_1371;

BB1_1374:
	mov.u32 	%r11632, 0;
	mov.u32 	%r6679, 16;
	// inline asm
	shf.r.wrap.b32 %r11635, %r11632, %r34, %r6679;
	// inline asm
	bra.uni 	BB1_1373;

BB1_811:
	setp.eq.s32	%p561, %r40, 15;
	@%p561 bra 	BB1_812;
	bra.uni 	BB1_790;

BB1_812:
	mov.u32 	%r4502, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r31, %r35, %r4502;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r32, %r31, %r4502;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r33, %r32, %r4502;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r34, %r33, %r4502;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	shf.r.wrap.b32 %r31, %r11686, %r34, %r4502;
	// inline asm

BB1_813:
	mov.u32 	%r11687, %r11686;
	mov.u32 	%r11688, %r11686;
	bra.uni 	BB1_866;

BB1_790:
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	bra.uni 	BB1_866;

BB1_1113:
	setp.ne.s32	%p714, %r42, 31;
	mov.u32 	%r11685, %r11682;
	mov.u32 	%r11684, %r11682;
	mov.u32 	%r11683, %r11682;
	mov.u32 	%r11604, %r11682;
	mov.u32 	%r11687, %r11682;
	mov.u32 	%r11688, %r11682;
	mov.u32 	%r11689, %r11682;
	@%p714 bra 	BB1_1133;

	mov.u32 	%r11685, 0;
	mov.u32 	%r5236, 24;
	// inline asm
	shf.r.wrap.b32 %r11604, %r38, %r11685, %r5236;
	// inline asm

BB1_1115:
	mov.u32 	%r11684, %r11685;
	mov.u32 	%r11683, %r11685;
	mov.u32 	%r11682, %r11685;
	mov.u32 	%r11687, %r11685;

BB1_1107:
	mov.u32 	%r11688, %r11685;
	mov.u32 	%r11689, %r11685;

BB1_1133:
	and.b32  	%r5778, %r39, 3;
	shl.b32 	%r5779, %r5778, 3;
	mov.u32 	%r5780, 1;
	shl.b32 	%r5781, %r5780, %r5779;
	add.s32 	%r1074, %r5781, -1;
	neg.s32 	%r1075, %r5781;
	shr.u32 	%r5777, %r40, 2;
	setp.gt.s32	%p756, %r5777, 3;
	@%p756 bra 	BB1_1141;

	setp.gt.s32	%p762, %r5777, 1;
	@%p762 bra 	BB1_1138;

	setp.eq.s32	%p765, %r5777, 0;
	@%p765 bra 	BB1_1156;
	bra.uni 	BB1_1136;

BB1_1156:
	and.b32  	%r5796, %r1074, %r34;
	and.b32  	%r5797, %r11604, %r1075;
	or.b32  	%r11686, %r5797, %r5796;
	bra.uni 	BB1_1157;

BB1_1141:
	setp.gt.s32	%p757, %r5777, 5;
	@%p757 bra 	BB1_1145;

	setp.eq.s32	%p760, %r5777, 4;
	@%p760 bra 	BB1_1154;
	bra.uni 	BB1_1143;

BB1_1154:
	and.b32  	%r5788, %r1074, %r35;
	and.b32  	%r5789, %r11685, %r1075;
	or.b32  	%r11685, %r5789, %r5788;
	bra.uni 	BB1_1151;

BB1_1138:
	setp.eq.s32	%p763, %r5777, 2;
	@%p763 bra 	BB1_1155;
	bra.uni 	BB1_1139;

BB1_1155:
	and.b32  	%r5792, %r1074, %r32;
	and.b32  	%r5793, %r11688, %r1075;
	or.b32  	%r11688, %r5793, %r5792;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	bra.uni 	BB1_1157;

BB1_1145:
	setp.eq.s32	%p758, %r5777, 6;
	@%p758 bra 	BB1_1153;
	bra.uni 	BB1_1146;

BB1_1153:
	and.b32  	%r5784, %r1074, %r37;
	and.b32  	%r5785, %r11683, %r1075;
	or.b32  	%r11683, %r5785, %r5784;
	bra.uni 	BB1_1149;

BB1_1136:
	setp.eq.s32	%p766, %r5777, 1;
	@%p766 bra 	BB1_1137;
	bra.uni 	BB1_1147;

BB1_1137:
	and.b32  	%r5794, %r1074, %r33;
	and.b32  	%r5795, %r11687, %r1075;
	or.b32  	%r11687, %r5795, %r5794;
	mov.u32 	%r11686, %r34;
	bra.uni 	BB1_1157;

BB1_1143:
	setp.eq.s32	%p761, %r5777, 5;
	@%p761 bra 	BB1_1144;
	bra.uni 	BB1_1147;

BB1_1144:
	and.b32  	%r5786, %r1074, %r36;
	and.b32  	%r5787, %r11684, %r1075;
	or.b32  	%r11684, %r5787, %r5786;
	bra.uni 	BB1_1150;

BB1_1139:
	setp.eq.s32	%p764, %r5777, 3;
	@%p764 bra 	BB1_1140;
	bra.uni 	BB1_1147;

BB1_1140:
	and.b32  	%r5790, %r1074, %r31;
	and.b32  	%r5791, %r11689, %r1075;
	or.b32  	%r11689, %r5791, %r5790;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	bra.uni 	BB1_1157;

BB1_1146:
	setp.ne.s32	%p759, %r5777, 7;
	@%p759 bra 	BB1_1147;

	and.b32  	%r5782, %r1074, %r38;
	and.b32  	%r5783, %r11682, %r1075;
	or.b32  	%r11682, %r5783, %r5782;
	bra.uni 	BB1_1148;

BB1_1147:
	mov.u32 	%r11682, %r38;

BB1_1148:
	mov.u32 	%r11683, %r37;

BB1_1149:
	mov.u32 	%r11684, %r36;

BB1_1150:
	mov.u32 	%r11685, %r35;

BB1_1151:
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	mov.u32 	%r11689, %r31;

BB1_1157:
	sub.s32 	%r11690, %r30, %r42;
	bra.uni 	BB1_1547;

BB1_506:
	setp.ne.s32	%p325, %r40, 31;
	mov.u32 	%r11557, %r11566;
	@%p325 bra 	BB1_524;

	shr.u32 	%r11557, %r38, 24;

BB1_524:
	setp.gt.s32	%p367, %r42, 15;
	@%p367 bra 	BB1_556;

	setp.gt.s32	%p391, %r42, 7;
	@%p391 bra 	BB1_541;

	setp.gt.s32	%p403, %r42, 3;
	@%p403 bra 	BB1_534;

	setp.gt.s32	%p409, %r42, 1;
	@%p409 bra 	BB1_531;

	setp.eq.s32	%p412, %r42, 0;
	@%p412 bra 	BB1_602;
	bra.uni 	BB1_529;

BB1_602:
	and.b32  	%r11566, %r34, 255;
	and.b32  	%r4004, %r34, -256;
	or.b32  	%r34, %r11557, %r4004;
	bra.uni 	BB1_603;

BB1_556:
	setp.gt.s32	%p368, %r42, 23;
	@%p368 bra 	BB1_572;

	setp.gt.s32	%p380, %r42, 19;
	@%p380 bra 	BB1_565;

	setp.gt.s32	%p386, %r42, 17;
	@%p386 bra 	BB1_562;

	setp.eq.s32	%p389, %r42, 16;
	@%p389 bra 	BB1_594;
	bra.uni 	BB1_560;

BB1_594:
	and.b32  	%r11566, %r35, 255;
	and.b32  	%r3980, %r35, -256;
	or.b32  	%r35, %r11557, %r3980;
	bra.uni 	BB1_603;

BB1_541:
	setp.gt.s32	%p392, %r42, 11;
	@%p392 bra 	BB1_549;

	setp.gt.s32	%p398, %r42, 9;
	@%p398 bra 	BB1_546;

	setp.eq.s32	%p401, %r42, 8;
	@%p401 bra 	BB1_598;
	bra.uni 	BB1_544;

BB1_598:
	and.b32  	%r11566, %r32, 255;
	and.b32  	%r3992, %r32, -256;
	or.b32  	%r32, %r11557, %r3992;
	bra.uni 	BB1_603;

BB1_572:
	setp.gt.s32	%p369, %r42, 27;
	@%p369 bra 	BB1_580;

	setp.gt.s32	%p375, %r42, 25;
	@%p375 bra 	BB1_577;

	setp.eq.s32	%p378, %r42, 24;
	@%p378 bra 	BB1_590;
	bra.uni 	BB1_575;

BB1_590:
	and.b32  	%r11566, %r37, 255;
	and.b32  	%r3968, %r37, -256;
	or.b32  	%r37, %r11557, %r3968;
	bra.uni 	BB1_603;

BB1_534:
	setp.gt.s32	%p404, %r42, 5;
	@%p404 bra 	BB1_538;

	setp.eq.s32	%p407, %r42, 4;
	@%p407 bra 	BB1_600;
	bra.uni 	BB1_536;

BB1_600:
	and.b32  	%r11566, %r33, 255;
	and.b32  	%r3998, %r33, -256;
	or.b32  	%r33, %r11557, %r3998;
	bra.uni 	BB1_603;

BB1_565:
	setp.gt.s32	%p381, %r42, 21;
	@%p381 bra 	BB1_569;

	setp.eq.s32	%p384, %r42, 20;
	@%p384 bra 	BB1_592;
	bra.uni 	BB1_567;

BB1_592:
	and.b32  	%r11566, %r36, 255;
	and.b32  	%r3974, %r36, -256;
	or.b32  	%r36, %r11557, %r3974;
	bra.uni 	BB1_603;

BB1_549:
	setp.gt.s32	%p393, %r42, 13;
	@%p393 bra 	BB1_553;

	setp.eq.s32	%p396, %r42, 12;
	@%p396 bra 	BB1_596;
	bra.uni 	BB1_551;

BB1_596:
	and.b32  	%r11566, %r31, 255;
	and.b32  	%r3986, %r31, -256;
	or.b32  	%r31, %r11557, %r3986;
	bra.uni 	BB1_603;

BB1_580:
	setp.gt.s32	%p370, %r42, 29;
	@%p370 bra 	BB1_584;

	setp.eq.s32	%p373, %r42, 28;
	@%p373 bra 	BB1_588;
	bra.uni 	BB1_582;

BB1_588:
	and.b32  	%r11566, %r38, 255;
	and.b32  	%r3962, %r38, -256;
	or.b32  	%r38, %r11557, %r3962;
	bra.uni 	BB1_603;

BB1_531:
	setp.eq.s32	%p410, %r42, 2;
	@%p410 bra 	BB1_601;
	bra.uni 	BB1_532;

BB1_601:
	bfe.u32 	%r11566, %r34, 16, 8;
	shl.b32 	%r4000, %r11557, 16;
	and.b32  	%r4001, %r34, -16711681;
	or.b32  	%r34, %r4000, %r4001;
	bra.uni 	BB1_603;

BB1_562:
	setp.eq.s32	%p387, %r42, 18;
	@%p387 bra 	BB1_593;
	bra.uni 	BB1_563;

BB1_593:
	bfe.u32 	%r11566, %r35, 16, 8;
	shl.b32 	%r3976, %r11557, 16;
	and.b32  	%r3977, %r35, -16711681;
	or.b32  	%r35, %r3976, %r3977;
	bra.uni 	BB1_603;

BB1_546:
	setp.eq.s32	%p399, %r42, 10;
	@%p399 bra 	BB1_597;
	bra.uni 	BB1_547;

BB1_597:
	bfe.u32 	%r11566, %r32, 16, 8;
	shl.b32 	%r3988, %r11557, 16;
	and.b32  	%r3989, %r32, -16711681;
	or.b32  	%r32, %r3988, %r3989;
	bra.uni 	BB1_603;

BB1_577:
	setp.eq.s32	%p376, %r42, 26;
	@%p376 bra 	BB1_589;
	bra.uni 	BB1_578;

BB1_589:
	bfe.u32 	%r11566, %r37, 16, 8;
	shl.b32 	%r3964, %r11557, 16;
	and.b32  	%r3965, %r37, -16711681;
	or.b32  	%r37, %r3964, %r3965;
	bra.uni 	BB1_603;

BB1_538:
	setp.eq.s32	%p405, %r42, 6;
	@%p405 bra 	BB1_599;
	bra.uni 	BB1_539;

BB1_599:
	bfe.u32 	%r11566, %r33, 16, 8;
	shl.b32 	%r3994, %r11557, 16;
	and.b32  	%r3995, %r33, -16711681;
	or.b32  	%r33, %r3994, %r3995;
	bra.uni 	BB1_603;

BB1_569:
	setp.eq.s32	%p382, %r42, 22;
	@%p382 bra 	BB1_591;
	bra.uni 	BB1_570;

BB1_591:
	bfe.u32 	%r11566, %r36, 16, 8;
	shl.b32 	%r3970, %r11557, 16;
	and.b32  	%r3971, %r36, -16711681;
	or.b32  	%r36, %r3970, %r3971;
	bra.uni 	BB1_603;

BB1_553:
	setp.eq.s32	%p394, %r42, 14;
	@%p394 bra 	BB1_595;
	bra.uni 	BB1_554;

BB1_595:
	bfe.u32 	%r11566, %r31, 16, 8;
	shl.b32 	%r3982, %r11557, 16;
	and.b32  	%r3983, %r31, -16711681;
	or.b32  	%r31, %r3982, %r3983;
	bra.uni 	BB1_603;

BB1_584:
	setp.eq.s32	%p371, %r42, 30;
	@%p371 bra 	BB1_587;
	bra.uni 	BB1_585;

BB1_587:
	bfe.u32 	%r11566, %r38, 16, 8;
	shl.b32 	%r3958, %r11557, 16;
	and.b32  	%r3959, %r38, -16711681;
	or.b32  	%r38, %r3958, %r3959;
	bra.uni 	BB1_603;

BB1_843:
	setp.ne.s32	%p538, %r40, 30;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	@%p538 bra 	BB1_866;

	mov.u32 	%r37, 0;
	mov.u32 	%r4289, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r34, %r4289;
	// inline asm

BB1_865:
	mov.u32 	%r36, %r37;
	mov.u32 	%r35, %r37;
	mov.u32 	%r11686, %r37;
	mov.u32 	%r11687, %r37;
	mov.u32 	%r11688, %r37;
	mov.u32 	%r31, %r37;

BB1_866:
	@%p533 bra 	BB1_895;

	setp.gt.s32	%p602, %r40, 7;
	@%p602 bra 	BB1_880;

	setp.gt.s32	%p614, %r40, 3;
	@%p614 bra 	BB1_873;

	setp.eq.s32	%p620, %r40, 1;
	@%p620 bra 	BB1_946;

	setp.eq.s32	%p621, %r40, 2;
	@%p621 bra 	BB1_945;
	bra.uni 	BB1_871;

BB1_945:
	shl.b32 	%r5044, %r626, 8;
	or.b32  	%r5045, %r5044, %r626;
	or.b32  	%r11686, %r5045, %r11686;
	bra.uni 	BB1_872;

BB1_895:
	setp.gt.s32	%p579, %r40, 23;
	@%p579 bra 	BB1_911;

	setp.gt.s32	%p591, %r40, 19;
	@%p591 bra 	BB1_904;

	setp.gt.s32	%p597, %r40, 17;
	@%p597 bra 	BB1_901;

	setp.eq.s32	%p600, %r40, 16;
	@%p600 bra 	BB1_936;
	bra.uni 	BB1_899;

BB1_936:
	mov.u32 	%r4944, 64;
	prmt.b32 	%r4945, %r34, %r34, %r4944;
	mov.u32 	%r4946, 1040;
	prmt.b32 	%r4947, %r4945, %r34, %r4946;
	mov.u32 	%r4948, 16912;
	prmt.b32 	%r4949, %r4947, %r34, %r4948;
	or.b32  	%r11686, %r4949, %r11686;
	or.b32  	%r11687, %r4949, %r11687;
	or.b32  	%r11688, %r4949, %r11688;
	or.b32  	%r11689, %r4949, %r31;
	bra.uni 	BB1_937;

BB1_880:
	setp.gt.s32	%p603, %r40, 11;
	@%p603 bra 	BB1_888;

	setp.gt.s32	%p609, %r40, 9;
	@%p609 bra 	BB1_885;

	setp.eq.s32	%p612, %r40, 8;
	@%p612 bra 	BB1_941;
	bra.uni 	BB1_883;

BB1_941:
	mov.u32 	%r5004, 64;
	prmt.b32 	%r5005, %r34, %r34, %r5004;
	mov.u32 	%r5006, 1040;
	prmt.b32 	%r5007, %r5005, %r34, %r5006;
	mov.u32 	%r5008, 16912;
	prmt.b32 	%r5009, %r5007, %r34, %r5008;
	or.b32  	%r11686, %r5009, %r11686;
	or.b32  	%r11687, %r5009, %r11687;
	bra.uni 	BB1_872;

BB1_911:
	setp.gt.s32	%p580, %r40, 27;
	@%p580 bra 	BB1_919;

	setp.gt.s32	%p586, %r40, 25;
	@%p586 bra 	BB1_916;

	setp.eq.s32	%p589, %r40, 24;
	@%p589 bra 	BB1_929;
	bra.uni 	BB1_914;

BB1_929:
	mov.u32 	%r4884, 64;
	prmt.b32 	%r4885, %r34, %r34, %r4884;
	mov.u32 	%r4886, 1040;
	prmt.b32 	%r4887, %r4885, %r34, %r4886;
	mov.u32 	%r4888, 16912;
	prmt.b32 	%r4889, %r4887, %r34, %r4888;
	or.b32  	%r11686, %r4889, %r11686;
	or.b32  	%r11687, %r4889, %r11687;
	or.b32  	%r11688, %r4889, %r11688;
	or.b32  	%r11689, %r4889, %r31;
	or.b32  	%r11685, %r4889, %r35;
	or.b32  	%r11684, %r4889, %r36;
	bra.uni 	BB1_930;

BB1_873:
	setp.gt.s32	%p615, %r40, 5;
	@%p615 bra 	BB1_877;

	setp.eq.s32	%p618, %r40, 4;
	@%p618 bra 	BB1_943;
	bra.uni 	BB1_875;

BB1_943:
	mov.u32 	%r5034, 64;
	prmt.b32 	%r5035, %r34, %r34, %r5034;
	mov.u32 	%r5036, 1040;
	prmt.b32 	%r5037, %r5035, %r34, %r5036;
	mov.u32 	%r5038, 16912;
	prmt.b32 	%r5039, %r5037, %r34, %r5038;
	or.b32  	%r11686, %r5039, %r11686;
	bra.uni 	BB1_872;

BB1_904:
	setp.gt.s32	%p592, %r40, 21;
	@%p592 bra 	BB1_908;

	setp.eq.s32	%p595, %r40, 20;
	@%p595 bra 	BB1_933;
	bra.uni 	BB1_906;

BB1_933:
	mov.u32 	%r4914, 64;
	prmt.b32 	%r4915, %r34, %r34, %r4914;
	mov.u32 	%r4916, 1040;
	prmt.b32 	%r4917, %r4915, %r34, %r4916;
	mov.u32 	%r4918, 16912;
	prmt.b32 	%r4919, %r4917, %r34, %r4918;
	or.b32  	%r11686, %r4919, %r11686;
	or.b32  	%r11687, %r4919, %r11687;
	or.b32  	%r11688, %r4919, %r11688;
	or.b32  	%r11689, %r4919, %r31;
	or.b32  	%r11685, %r4919, %r35;
	bra.uni 	BB1_934;

BB1_888:
	setp.gt.s32	%p604, %r40, 13;
	@%p604 bra 	BB1_892;

	setp.eq.s32	%p607, %r40, 12;
	@%p607 bra 	BB1_939;
	bra.uni 	BB1_890;

BB1_939:
	mov.u32 	%r4974, 64;
	prmt.b32 	%r4975, %r34, %r34, %r4974;
	mov.u32 	%r4976, 1040;
	prmt.b32 	%r4977, %r4975, %r34, %r4976;
	mov.u32 	%r4978, 16912;
	prmt.b32 	%r4979, %r4977, %r34, %r4978;
	or.b32  	%r11686, %r4979, %r11686;
	or.b32  	%r11687, %r4979, %r11687;
	or.b32  	%r11688, %r4979, %r11688;
	bra.uni 	BB1_872;

BB1_919:
	setp.gt.s32	%p581, %r40, 29;
	@%p581 bra 	BB1_923;

	setp.eq.s32	%p584, %r40, 28;
	@%p584 bra 	BB1_927;
	bra.uni 	BB1_921;

BB1_927:
	mov.u32 	%r4854, 64;
	prmt.b32 	%r4855, %r34, %r34, %r4854;
	mov.u32 	%r4856, 1040;
	prmt.b32 	%r4857, %r4855, %r34, %r4856;
	mov.u32 	%r4858, 16912;
	prmt.b32 	%r4859, %r4857, %r34, %r4858;
	or.b32  	%r11686, %r4859, %r11686;
	or.b32  	%r11687, %r4859, %r11687;
	or.b32  	%r11688, %r4859, %r11688;
	or.b32  	%r11689, %r4859, %r31;
	or.b32  	%r11685, %r4859, %r35;
	or.b32  	%r11684, %r4859, %r36;
	or.b32  	%r11683, %r4859, %r37;
	mov.u32 	%r11682, %r38;
	bra.uni 	BB1_1547;

BB1_901:
	setp.eq.s32	%p598, %r40, 18;
	@%p598 bra 	BB1_935;
	bra.uni 	BB1_902;

BB1_935:
	mov.u32 	%r4930, 64;
	prmt.b32 	%r4931, %r34, %r34, %r4930;
	mov.u32 	%r4932, 1040;
	prmt.b32 	%r4933, %r4931, %r34, %r4932;
	mov.u32 	%r4934, 16912;
	prmt.b32 	%r4935, %r4933, %r34, %r4934;
	or.b32  	%r11686, %r4935, %r11686;
	or.b32  	%r11687, %r4935, %r11687;
	or.b32  	%r11688, %r4935, %r11688;
	or.b32  	%r11689, %r4935, %r31;
	shl.b32 	%r4936, %r626, 8;
	or.b32  	%r4937, %r4936, %r626;
	or.b32  	%r11685, %r4937, %r35;
	bra.uni 	BB1_934;

BB1_885:
	setp.eq.s32	%p610, %r40, 10;
	@%p610 bra 	BB1_940;
	bra.uni 	BB1_886;

BB1_940:
	mov.u32 	%r4990, 64;
	prmt.b32 	%r4991, %r34, %r34, %r4990;
	mov.u32 	%r4992, 1040;
	prmt.b32 	%r4993, %r4991, %r34, %r4992;
	mov.u32 	%r4994, 16912;
	prmt.b32 	%r4995, %r4993, %r34, %r4994;
	or.b32  	%r11686, %r4995, %r11686;
	or.b32  	%r11687, %r4995, %r11687;
	shl.b32 	%r4996, %r626, 8;
	or.b32  	%r4997, %r4996, %r626;
	or.b32  	%r11688, %r4997, %r11688;
	bra.uni 	BB1_872;

BB1_916:
	setp.eq.s32	%p587, %r40, 26;
	@%p587 bra 	BB1_928;
	bra.uni 	BB1_917;

BB1_928:
	mov.u32 	%r4870, 64;
	prmt.b32 	%r4871, %r34, %r34, %r4870;
	mov.u32 	%r4872, 1040;
	prmt.b32 	%r4873, %r4871, %r34, %r4872;
	mov.u32 	%r4874, 16912;
	prmt.b32 	%r4875, %r4873, %r34, %r4874;
	or.b32  	%r11686, %r4875, %r11686;
	or.b32  	%r11687, %r4875, %r11687;
	or.b32  	%r11688, %r4875, %r11688;
	or.b32  	%r11689, %r4875, %r31;
	or.b32  	%r11685, %r4875, %r35;
	or.b32  	%r11684, %r4875, %r36;
	shl.b32 	%r4876, %r626, 8;
	or.b32  	%r4877, %r4876, %r626;
	or.b32  	%r11683, %r4877, %r37;
	mov.u32 	%r11682, %r38;
	bra.uni 	BB1_1547;

BB1_877:
	setp.eq.s32	%p616, %r40, 6;
	@%p616 bra 	BB1_942;
	bra.uni 	BB1_878;

BB1_942:
	mov.u32 	%r5020, 64;
	prmt.b32 	%r5021, %r34, %r34, %r5020;
	mov.u32 	%r5022, 1040;
	prmt.b32 	%r5023, %r5021, %r34, %r5022;
	mov.u32 	%r5024, 16912;
	prmt.b32 	%r5025, %r5023, %r34, %r5024;
	or.b32  	%r11686, %r5025, %r11686;
	shl.b32 	%r5026, %r626, 8;
	or.b32  	%r5027, %r5026, %r626;
	or.b32  	%r11687, %r5027, %r11687;
	bra.uni 	BB1_872;

BB1_908:
	setp.eq.s32	%p593, %r40, 22;
	@%p593 bra 	BB1_932;
	bra.uni 	BB1_909;

BB1_932:
	mov.u32 	%r4900, 64;
	prmt.b32 	%r4901, %r34, %r34, %r4900;
	mov.u32 	%r4902, 1040;
	prmt.b32 	%r4903, %r4901, %r34, %r4902;
	mov.u32 	%r4904, 16912;
	prmt.b32 	%r4905, %r4903, %r34, %r4904;
	or.b32  	%r11686, %r4905, %r11686;
	or.b32  	%r11687, %r4905, %r11687;
	or.b32  	%r11688, %r4905, %r11688;
	or.b32  	%r11689, %r4905, %r31;
	or.b32  	%r11685, %r4905, %r35;
	shl.b32 	%r4906, %r626, 8;
	or.b32  	%r4907, %r4906, %r626;
	or.b32  	%r11684, %r4907, %r36;
	bra.uni 	BB1_930;

BB1_892:
	setp.eq.s32	%p605, %r40, 14;
	@%p605 bra 	BB1_938;
	bra.uni 	BB1_893;

BB1_938:
	mov.u32 	%r4960, 64;
	prmt.b32 	%r4961, %r34, %r34, %r4960;
	mov.u32 	%r4962, 1040;
	prmt.b32 	%r4963, %r4961, %r34, %r4962;
	mov.u32 	%r4964, 16912;
	prmt.b32 	%r4965, %r4963, %r34, %r4964;
	or.b32  	%r11686, %r4965, %r11686;
	or.b32  	%r11687, %r4965, %r11687;
	or.b32  	%r11688, %r4965, %r11688;
	shl.b32 	%r4966, %r626, 8;
	or.b32  	%r4967, %r4966, %r626;
	or.b32  	%r11689, %r4967, %r31;
	bra.uni 	BB1_937;

BB1_923:
	setp.eq.s32	%p582, %r40, 30;
	@%p582 bra 	BB1_926;
	bra.uni 	BB1_924;

BB1_926:
	mov.u32 	%r4840, 64;
	prmt.b32 	%r4841, %r34, %r34, %r4840;
	mov.u32 	%r4842, 1040;
	prmt.b32 	%r4843, %r4841, %r34, %r4842;
	mov.u32 	%r4844, 16912;
	prmt.b32 	%r4845, %r4843, %r34, %r4844;
	or.b32  	%r11686, %r4845, %r11686;
	or.b32  	%r11687, %r4845, %r11687;
	or.b32  	%r11688, %r4845, %r11688;
	or.b32  	%r11689, %r4845, %r31;
	or.b32  	%r11685, %r4845, %r35;
	or.b32  	%r11684, %r4845, %r36;
	or.b32  	%r11683, %r4845, %r37;
	shl.b32 	%r4846, %r626, 8;
	or.b32  	%r4847, %r4846, %r626;
	or.b32  	%r11682, %r4847, %r38;
	bra.uni 	BB1_1547;

BB1_946:
	or.b32  	%r11686, %r11686, %r626;
	bra.uni 	BB1_872;

BB1_871:
	setp.eq.s32	%p622, %r40, 3;
	@%p622 bra 	BB1_944;
	bra.uni 	BB1_872;

BB1_944:
	shl.b32 	%r5040, %r626, 8;
	or.b32  	%r5041, %r5040, %r626;
	shl.b32 	%r5042, %r626, 16;
	or.b32  	%r5043, %r5041, %r5042;
	or.b32  	%r11686, %r5043, %r11686;
	bra.uni 	BB1_872;

BB1_529:
	setp.eq.s32	%p413, %r42, 1;
	@%p413 bra 	BB1_530;
	bra.uni 	BB1_603;

BB1_530:
	bfe.u32 	%r11566, %r34, 8, 8;
	shl.b32 	%r4002, %r11557, 8;
	and.b32  	%r4003, %r34, -65281;
	or.b32  	%r34, %r4002, %r4003;
	bra.uni 	BB1_603;

BB1_560:
	setp.eq.s32	%p390, %r42, 17;
	@%p390 bra 	BB1_561;
	bra.uni 	BB1_603;

BB1_561:
	bfe.u32 	%r11566, %r35, 8, 8;
	shl.b32 	%r3978, %r11557, 8;
	and.b32  	%r3979, %r35, -65281;
	or.b32  	%r35, %r3978, %r3979;
	bra.uni 	BB1_603;

BB1_544:
	setp.eq.s32	%p402, %r42, 9;
	@%p402 bra 	BB1_545;
	bra.uni 	BB1_603;

BB1_545:
	bfe.u32 	%r11566, %r32, 8, 8;
	shl.b32 	%r3990, %r11557, 8;
	and.b32  	%r3991, %r32, -65281;
	or.b32  	%r32, %r3990, %r3991;
	bra.uni 	BB1_603;

BB1_575:
	setp.eq.s32	%p379, %r42, 25;
	@%p379 bra 	BB1_576;
	bra.uni 	BB1_603;

BB1_576:
	bfe.u32 	%r11566, %r37, 8, 8;
	shl.b32 	%r3966, %r11557, 8;
	and.b32  	%r3967, %r37, -65281;
	or.b32  	%r37, %r3966, %r3967;
	bra.uni 	BB1_603;

BB1_536:
	setp.eq.s32	%p408, %r42, 5;
	@%p408 bra 	BB1_537;
	bra.uni 	BB1_603;

BB1_537:
	bfe.u32 	%r11566, %r33, 8, 8;
	shl.b32 	%r3996, %r11557, 8;
	and.b32  	%r3997, %r33, -65281;
	or.b32  	%r33, %r3996, %r3997;
	bra.uni 	BB1_603;

BB1_567:
	setp.eq.s32	%p385, %r42, 21;
	@%p385 bra 	BB1_568;
	bra.uni 	BB1_603;

BB1_568:
	bfe.u32 	%r11566, %r36, 8, 8;
	shl.b32 	%r3972, %r11557, 8;
	and.b32  	%r3973, %r36, -65281;
	or.b32  	%r36, %r3972, %r3973;
	bra.uni 	BB1_603;

BB1_551:
	setp.eq.s32	%p397, %r42, 13;
	@%p397 bra 	BB1_552;
	bra.uni 	BB1_603;

BB1_552:
	bfe.u32 	%r11566, %r31, 8, 8;
	shl.b32 	%r3984, %r11557, 8;
	and.b32  	%r3985, %r31, -65281;
	or.b32  	%r31, %r3984, %r3985;
	bra.uni 	BB1_603;

BB1_582:
	setp.eq.s32	%p374, %r42, 29;
	@%p374 bra 	BB1_583;
	bra.uni 	BB1_603;

BB1_583:
	bfe.u32 	%r11566, %r38, 8, 8;
	shl.b32 	%r3960, %r11557, 8;
	and.b32  	%r3961, %r38, -65281;
	or.b32  	%r38, %r3960, %r3961;
	bra.uni 	BB1_603;

BB1_532:
	setp.eq.s32	%p411, %r42, 3;
	@%p411 bra 	BB1_533;
	bra.uni 	BB1_603;

BB1_533:
	shr.u32 	%r11566, %r34, 24;
	and.b32  	%r3999, %r34, 16777215;
	prmt.b32 	%r34, %r11557, %r3999, 1620;
	bra.uni 	BB1_603;

BB1_563:
	setp.eq.s32	%p388, %r42, 19;
	@%p388 bra 	BB1_564;
	bra.uni 	BB1_603;

BB1_564:
	shr.u32 	%r11566, %r35, 24;
	and.b32  	%r3975, %r35, 16777215;
	prmt.b32 	%r35, %r11557, %r3975, 1620;
	bra.uni 	BB1_603;

BB1_547:
	setp.eq.s32	%p400, %r42, 11;
	@%p400 bra 	BB1_548;
	bra.uni 	BB1_603;

BB1_548:
	shr.u32 	%r11566, %r32, 24;
	and.b32  	%r3987, %r32, 16777215;
	prmt.b32 	%r32, %r11557, %r3987, 1620;
	bra.uni 	BB1_603;

BB1_578:
	setp.eq.s32	%p377, %r42, 27;
	@%p377 bra 	BB1_579;
	bra.uni 	BB1_603;

BB1_579:
	shr.u32 	%r11566, %r37, 24;
	and.b32  	%r3963, %r37, 16777215;
	prmt.b32 	%r37, %r11557, %r3963, 1620;
	bra.uni 	BB1_603;

BB1_539:
	setp.eq.s32	%p406, %r42, 7;
	@%p406 bra 	BB1_540;
	bra.uni 	BB1_603;

BB1_540:
	shr.u32 	%r11566, %r33, 24;
	and.b32  	%r3993, %r33, 16777215;
	prmt.b32 	%r33, %r11557, %r3993, 1620;
	bra.uni 	BB1_603;

BB1_570:
	setp.eq.s32	%p383, %r42, 23;
	@%p383 bra 	BB1_571;
	bra.uni 	BB1_603;

BB1_571:
	shr.u32 	%r11566, %r36, 24;
	and.b32  	%r3969, %r36, 16777215;
	prmt.b32 	%r36, %r11557, %r3969, 1620;
	bra.uni 	BB1_603;

BB1_554:
	setp.eq.s32	%p395, %r42, 15;
	@%p395 bra 	BB1_555;
	bra.uni 	BB1_603;

BB1_555:
	shr.u32 	%r11566, %r31, 24;
	and.b32  	%r3981, %r31, 16777215;
	prmt.b32 	%r31, %r11557, %r3981, 1620;
	bra.uni 	BB1_603;

BB1_585:
	setp.ne.s32	%p372, %r42, 31;
	@%p372 bra 	BB1_603;

	shr.u32 	%r11566, %r38, 24;
	and.b32  	%r3957, %r38, 16777215;
	prmt.b32 	%r38, %r11557, %r3957, 1620;

BB1_603:
	@%p320 bra 	BB1_639;

	setp.gt.s32	%p438, %r40, 7;
	@%p438 bra 	BB1_622;

	setp.gt.s32	%p450, %r40, 3;
	@%p450 bra 	BB1_614;

	setp.gt.s32	%p456, %r40, 1;
	@%p456 bra 	BB1_610;

	setp.eq.s32	%p459, %r40, 0;
	@%p459 bra 	BB1_695;
	bra.uni 	BB1_608;

BB1_695:
	and.b32  	%r4052, %r34, -256;
	or.b32  	%r11686, %r11566, %r4052;
	bra.uni 	BB1_613;

BB1_639:
	setp.gt.s32	%p415, %r40, 23;
	@%p415 bra 	BB1_657;

	setp.gt.s32	%p427, %r40, 19;
	@%p427 bra 	BB1_649;

	setp.gt.s32	%p433, %r40, 17;
	@%p433 bra 	BB1_645;

	setp.eq.s32	%p436, %r40, 16;
	@%p436 bra 	BB1_687;
	bra.uni 	BB1_643;

BB1_687:
	and.b32  	%r4028, %r35, -256;
	or.b32  	%r11685, %r11566, %r4028;
	bra.uni 	BB1_648;

BB1_622:
	setp.gt.s32	%p439, %r40, 11;
	@%p439 bra 	BB1_631;

	setp.gt.s32	%p445, %r40, 9;
	@%p445 bra 	BB1_627;

	setp.eq.s32	%p448, %r40, 8;
	@%p448 bra 	BB1_691;
	bra.uni 	BB1_625;

BB1_691:
	and.b32  	%r4040, %r32, -256;
	or.b32  	%r11688, %r11566, %r4040;
	bra.uni 	BB1_630;

BB1_657:
	setp.gt.s32	%p416, %r40, 27;
	@%p416 bra 	BB1_666;

	setp.gt.s32	%p422, %r40, 25;
	@%p422 bra 	BB1_662;

	setp.eq.s32	%p425, %r40, 24;
	@%p425 bra 	BB1_683;
	bra.uni 	BB1_660;

BB1_683:
	and.b32  	%r4016, %r37, -256;
	or.b32  	%r11683, %r11566, %r4016;
	bra.uni 	BB1_665;

BB1_614:
	setp.gt.s32	%p451, %r40, 5;
	@%p451 bra 	BB1_618;

	setp.eq.s32	%p454, %r40, 4;
	@%p454 bra 	BB1_693;
	bra.uni 	BB1_616;

BB1_693:
	and.b32  	%r4046, %r33, -256;
	or.b32  	%r11687, %r11566, %r4046;
	bra.uni 	BB1_621;

BB1_649:
	setp.gt.s32	%p428, %r40, 21;
	@%p428 bra 	BB1_653;

	setp.eq.s32	%p431, %r40, 20;
	@%p431 bra 	BB1_685;
	bra.uni 	BB1_651;

BB1_685:
	and.b32  	%r4022, %r36, -256;
	or.b32  	%r11684, %r11566, %r4022;
	bra.uni 	BB1_656;

BB1_631:
	setp.gt.s32	%p440, %r40, 13;
	@%p440 bra 	BB1_635;

	setp.eq.s32	%p443, %r40, 12;
	@%p443 bra 	BB1_689;
	bra.uni 	BB1_633;

BB1_689:
	and.b32  	%r4034, %r31, -256;
	or.b32  	%r11689, %r4034, %r11566;
	bra.uni 	BB1_638;

BB1_666:
	setp.gt.s32	%p417, %r40, 29;
	@%p417 bra 	BB1_670;

	setp.eq.s32	%p420, %r40, 28;
	@%p420 bra 	BB1_681;
	bra.uni 	BB1_668;

BB1_681:
	and.b32  	%r4010, %r38, -256;
	or.b32  	%r11682, %r11566, %r4010;
	bra.uni 	BB1_673;

BB1_610:
	setp.eq.s32	%p457, %r40, 2;
	@%p457 bra 	BB1_694;
	bra.uni 	BB1_611;

BB1_694:
	and.b32  	%r4048, %r34, -16711681;
	shl.b32 	%r4049, %r11566, 16;
	or.b32  	%r11686, %r4049, %r4048;
	bra.uni 	BB1_613;

BB1_645:
	setp.eq.s32	%p434, %r40, 18;
	@%p434 bra 	BB1_686;
	bra.uni 	BB1_646;

BB1_686:
	and.b32  	%r4024, %r35, -16711681;
	shl.b32 	%r4025, %r11566, 16;
	or.b32  	%r11685, %r4025, %r4024;
	bra.uni 	BB1_648;

BB1_627:
	setp.eq.s32	%p446, %r40, 10;
	@%p446 bra 	BB1_690;
	bra.uni 	BB1_628;

BB1_690:
	and.b32  	%r4036, %r32, -16711681;
	shl.b32 	%r4037, %r11566, 16;
	or.b32  	%r11688, %r4037, %r4036;
	bra.uni 	BB1_630;

BB1_662:
	setp.eq.s32	%p423, %r40, 26;
	@%p423 bra 	BB1_682;
	bra.uni 	BB1_663;

BB1_682:
	and.b32  	%r4012, %r37, -16711681;
	shl.b32 	%r4013, %r11566, 16;
	or.b32  	%r11683, %r4013, %r4012;
	bra.uni 	BB1_665;

BB1_618:
	setp.eq.s32	%p452, %r40, 6;
	@%p452 bra 	BB1_692;
	bra.uni 	BB1_619;

BB1_692:
	and.b32  	%r4042, %r33, -16711681;
	shl.b32 	%r4043, %r11566, 16;
	or.b32  	%r11687, %r4043, %r4042;
	bra.uni 	BB1_621;

BB1_653:
	setp.eq.s32	%p429, %r40, 22;
	@%p429 bra 	BB1_684;
	bra.uni 	BB1_654;

BB1_684:
	and.b32  	%r4018, %r36, -16711681;
	shl.b32 	%r4019, %r11566, 16;
	or.b32  	%r11684, %r4019, %r4018;
	bra.uni 	BB1_656;

BB1_635:
	setp.eq.s32	%p441, %r40, 14;
	@%p441 bra 	BB1_688;
	bra.uni 	BB1_636;

BB1_688:
	and.b32  	%r4030, %r31, -16711681;
	shl.b32 	%r4031, %r11566, 16;
	or.b32  	%r11689, %r4031, %r4030;
	bra.uni 	BB1_638;

BB1_670:
	setp.eq.s32	%p418, %r40, 30;
	@%p418 bra 	BB1_680;
	bra.uni 	BB1_671;

BB1_680:
	and.b32  	%r4006, %r38, -16711681;
	shl.b32 	%r4007, %r11566, 16;
	or.b32  	%r11682, %r4007, %r4006;
	bra.uni 	BB1_673;

BB1_899:
	setp.eq.s32	%p601, %r40, 17;
	@%p601 bra 	BB1_900;
	bra.uni 	BB1_872;

BB1_900:
	mov.u32 	%r4938, 64;
	prmt.b32 	%r4939, %r34, %r34, %r4938;
	mov.u32 	%r4940, 1040;
	prmt.b32 	%r4941, %r4939, %r34, %r4940;
	mov.u32 	%r4942, 16912;
	prmt.b32 	%r4943, %r4941, %r34, %r4942;
	or.b32  	%r11686, %r4943, %r11686;
	or.b32  	%r11687, %r4943, %r11687;
	or.b32  	%r11688, %r4943, %r11688;
	or.b32  	%r11689, %r4943, %r31;
	or.b32  	%r11685, %r35, %r626;
	bra.uni 	BB1_934;

BB1_883:
	setp.eq.s32	%p613, %r40, 9;
	@%p613 bra 	BB1_884;
	bra.uni 	BB1_872;

BB1_884:
	mov.u32 	%r4998, 64;
	prmt.b32 	%r4999, %r34, %r34, %r4998;
	mov.u32 	%r5000, 1040;
	prmt.b32 	%r5001, %r4999, %r34, %r5000;
	mov.u32 	%r5002, 16912;
	prmt.b32 	%r5003, %r5001, %r34, %r5002;
	or.b32  	%r11686, %r5003, %r11686;
	or.b32  	%r11687, %r5003, %r11687;
	or.b32  	%r11688, %r11688, %r626;
	bra.uni 	BB1_872;

BB1_914:
	setp.eq.s32	%p590, %r40, 25;
	@%p590 bra 	BB1_915;
	bra.uni 	BB1_910;

BB1_915:
	mov.u32 	%r4878, 64;
	prmt.b32 	%r4879, %r34, %r34, %r4878;
	mov.u32 	%r4880, 1040;
	prmt.b32 	%r4881, %r4879, %r34, %r4880;
	mov.u32 	%r4882, 16912;
	prmt.b32 	%r4883, %r4881, %r34, %r4882;
	or.b32  	%r11686, %r4883, %r11686;
	or.b32  	%r11687, %r4883, %r11687;
	or.b32  	%r11688, %r4883, %r11688;
	or.b32  	%r11689, %r4883, %r31;
	or.b32  	%r11685, %r4883, %r35;
	or.b32  	%r11684, %r4883, %r36;
	or.b32  	%r11683, %r37, %r626;
	mov.u32 	%r11682, %r38;
	bra.uni 	BB1_1547;

BB1_875:
	setp.eq.s32	%p619, %r40, 5;
	@%p619 bra 	BB1_876;
	bra.uni 	BB1_872;

BB1_876:
	mov.u32 	%r5028, 64;
	prmt.b32 	%r5029, %r34, %r34, %r5028;
	mov.u32 	%r5030, 1040;
	prmt.b32 	%r5031, %r5029, %r34, %r5030;
	mov.u32 	%r5032, 16912;
	prmt.b32 	%r5033, %r5031, %r34, %r5032;
	or.b32  	%r11686, %r5033, %r11686;
	or.b32  	%r11687, %r11687, %r626;
	bra.uni 	BB1_872;

BB1_906:
	setp.eq.s32	%p596, %r40, 21;
	@%p596 bra 	BB1_907;
	bra.uni 	BB1_872;

BB1_907:
	mov.u32 	%r4908, 64;
	prmt.b32 	%r4909, %r34, %r34, %r4908;
	mov.u32 	%r4910, 1040;
	prmt.b32 	%r4911, %r4909, %r34, %r4910;
	mov.u32 	%r4912, 16912;
	prmt.b32 	%r4913, %r4911, %r34, %r4912;
	or.b32  	%r11686, %r4913, %r11686;
	or.b32  	%r11687, %r4913, %r11687;
	or.b32  	%r11688, %r4913, %r11688;
	or.b32  	%r11689, %r4913, %r31;
	or.b32  	%r11685, %r4913, %r35;
	or.b32  	%r11684, %r36, %r626;
	bra.uni 	BB1_930;

BB1_890:
	setp.eq.s32	%p608, %r40, 13;
	@%p608 bra 	BB1_891;
	bra.uni 	BB1_872;

BB1_891:
	mov.u32 	%r4968, 64;
	prmt.b32 	%r4969, %r34, %r34, %r4968;
	mov.u32 	%r4970, 1040;
	prmt.b32 	%r4971, %r4969, %r34, %r4970;
	mov.u32 	%r4972, 16912;
	prmt.b32 	%r4973, %r4971, %r34, %r4972;
	or.b32  	%r11686, %r4973, %r11686;
	or.b32  	%r11687, %r4973, %r11687;
	or.b32  	%r11688, %r4973, %r11688;
	or.b32  	%r11689, %r31, %r626;
	bra.uni 	BB1_937;

BB1_921:
	setp.eq.s32	%p585, %r40, 29;
	@%p585 bra 	BB1_922;
	bra.uni 	BB1_910;

BB1_922:
	mov.u32 	%r4848, 64;
	prmt.b32 	%r4849, %r34, %r34, %r4848;
	mov.u32 	%r4850, 1040;
	prmt.b32 	%r4851, %r4849, %r34, %r4850;
	mov.u32 	%r4852, 16912;
	prmt.b32 	%r4853, %r4851, %r34, %r4852;
	or.b32  	%r11686, %r4853, %r11686;
	or.b32  	%r11687, %r4853, %r11687;
	or.b32  	%r11688, %r4853, %r11688;
	or.b32  	%r11689, %r4853, %r31;
	or.b32  	%r11685, %r4853, %r35;
	or.b32  	%r11684, %r4853, %r36;
	or.b32  	%r11683, %r4853, %r37;
	or.b32  	%r11682, %r38, %r626;
	bra.uni 	BB1_1547;

BB1_902:
	setp.eq.s32	%p599, %r40, 19;
	@%p599 bra 	BB1_903;
	bra.uni 	BB1_872;

BB1_903:
	mov.u32 	%r4920, 64;
	prmt.b32 	%r4921, %r34, %r34, %r4920;
	mov.u32 	%r4922, 1040;
	prmt.b32 	%r4923, %r4921, %r34, %r4922;
	mov.u32 	%r4924, 16912;
	prmt.b32 	%r4925, %r4923, %r34, %r4924;
	or.b32  	%r11686, %r4925, %r11686;
	or.b32  	%r11687, %r4925, %r11687;
	or.b32  	%r11688, %r4925, %r11688;
	or.b32  	%r11689, %r4925, %r31;
	shl.b32 	%r4926, %r626, 8;
	or.b32  	%r4927, %r4926, %r626;
	shl.b32 	%r4928, %r626, 16;
	or.b32  	%r4929, %r4927, %r4928;
	or.b32  	%r11685, %r4929, %r35;

BB1_934:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	bra.uni 	BB1_1547;

BB1_886:
	setp.eq.s32	%p611, %r40, 11;
	@%p611 bra 	BB1_887;
	bra.uni 	BB1_872;

BB1_887:
	mov.u32 	%r4980, 64;
	prmt.b32 	%r4981, %r34, %r34, %r4980;
	mov.u32 	%r4982, 1040;
	prmt.b32 	%r4983, %r4981, %r34, %r4982;
	mov.u32 	%r4984, 16912;
	prmt.b32 	%r4985, %r4983, %r34, %r4984;
	or.b32  	%r11686, %r4985, %r11686;
	or.b32  	%r11687, %r4985, %r11687;
	shl.b32 	%r4986, %r626, 8;
	or.b32  	%r4987, %r4986, %r626;
	shl.b32 	%r4988, %r626, 16;
	or.b32  	%r4989, %r4987, %r4988;
	or.b32  	%r11688, %r4989, %r11688;
	bra.uni 	BB1_872;

BB1_917:
	setp.eq.s32	%p588, %r40, 27;
	@%p588 bra 	BB1_918;
	bra.uni 	BB1_910;

BB1_918:
	mov.u32 	%r4860, 64;
	prmt.b32 	%r4861, %r34, %r34, %r4860;
	mov.u32 	%r4862, 1040;
	prmt.b32 	%r4863, %r4861, %r34, %r4862;
	mov.u32 	%r4864, 16912;
	prmt.b32 	%r4865, %r4863, %r34, %r4864;
	or.b32  	%r11686, %r4865, %r11686;
	or.b32  	%r11687, %r4865, %r11687;
	or.b32  	%r11688, %r4865, %r11688;
	or.b32  	%r11689, %r4865, %r31;
	or.b32  	%r11685, %r4865, %r35;
	or.b32  	%r11684, %r4865, %r36;
	shl.b32 	%r4866, %r626, 8;
	or.b32  	%r4867, %r4866, %r626;
	shl.b32 	%r4868, %r626, 16;
	or.b32  	%r4869, %r4867, %r4868;
	or.b32  	%r11683, %r4869, %r37;
	mov.u32 	%r11682, %r38;
	bra.uni 	BB1_1547;

BB1_878:
	setp.eq.s32	%p617, %r40, 7;
	@%p617 bra 	BB1_879;
	bra.uni 	BB1_872;

BB1_879:
	mov.u32 	%r5010, 64;
	prmt.b32 	%r5011, %r34, %r34, %r5010;
	mov.u32 	%r5012, 1040;
	prmt.b32 	%r5013, %r5011, %r34, %r5012;
	mov.u32 	%r5014, 16912;
	prmt.b32 	%r5015, %r5013, %r34, %r5014;
	or.b32  	%r11686, %r5015, %r11686;
	shl.b32 	%r5016, %r626, 8;
	or.b32  	%r5017, %r5016, %r626;
	shl.b32 	%r5018, %r626, 16;
	or.b32  	%r5019, %r5017, %r5018;
	or.b32  	%r11687, %r5019, %r11687;
	bra.uni 	BB1_872;

BB1_909:
	setp.eq.s32	%p594, %r40, 23;
	@%p594 bra 	BB1_931;
	bra.uni 	BB1_910;

BB1_931:
	mov.u32 	%r4890, 64;
	prmt.b32 	%r4891, %r34, %r34, %r4890;
	mov.u32 	%r4892, 1040;
	prmt.b32 	%r4893, %r4891, %r34, %r4892;
	mov.u32 	%r4894, 16912;
	prmt.b32 	%r4895, %r4893, %r34, %r4894;
	or.b32  	%r11686, %r4895, %r11686;
	or.b32  	%r11687, %r4895, %r11687;
	or.b32  	%r11688, %r4895, %r11688;
	or.b32  	%r11689, %r4895, %r31;
	or.b32  	%r11685, %r4895, %r35;
	shl.b32 	%r4896, %r626, 8;
	or.b32  	%r4897, %r4896, %r626;
	shl.b32 	%r4898, %r626, 16;
	or.b32  	%r4899, %r4897, %r4898;
	or.b32  	%r11684, %r4899, %r36;

BB1_930:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	bra.uni 	BB1_1547;

BB1_893:
	setp.eq.s32	%p606, %r40, 15;
	@%p606 bra 	BB1_894;
	bra.uni 	BB1_872;

BB1_894:
	mov.u32 	%r4950, 64;
	prmt.b32 	%r4951, %r34, %r34, %r4950;
	mov.u32 	%r4952, 1040;
	prmt.b32 	%r4953, %r4951, %r34, %r4952;
	mov.u32 	%r4954, 16912;
	prmt.b32 	%r4955, %r4953, %r34, %r4954;
	or.b32  	%r11686, %r4955, %r11686;
	or.b32  	%r11687, %r4955, %r11687;
	or.b32  	%r11688, %r4955, %r11688;
	shl.b32 	%r4956, %r626, 8;
	or.b32  	%r4957, %r4956, %r626;
	shl.b32 	%r4958, %r626, 16;
	or.b32  	%r4959, %r4957, %r4958;
	or.b32  	%r11689, %r4959, %r31;

BB1_937:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	bra.uni 	BB1_1547;

BB1_872:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11689, %r31;
	bra.uni 	BB1_1547;

BB1_924:
	setp.ne.s32	%p583, %r40, 31;
	@%p583 bra 	BB1_910;

	mov.u32 	%r4830, 64;
	prmt.b32 	%r4831, %r34, %r34, %r4830;
	mov.u32 	%r4832, 1040;
	prmt.b32 	%r4833, %r4831, %r34, %r4832;
	mov.u32 	%r4834, 16912;
	prmt.b32 	%r4835, %r4833, %r34, %r4834;
	or.b32  	%r11686, %r4835, %r11686;
	or.b32  	%r11687, %r4835, %r11687;
	or.b32  	%r11688, %r4835, %r11688;
	or.b32  	%r11689, %r4835, %r31;
	or.b32  	%r11685, %r4835, %r35;
	or.b32  	%r11684, %r4835, %r36;
	or.b32  	%r11683, %r4835, %r37;
	shl.b32 	%r4836, %r626, 8;
	or.b32  	%r4837, %r4836, %r626;
	shl.b32 	%r4838, %r626, 16;
	or.b32  	%r4839, %r4837, %r4838;
	or.b32  	%r11682, %r4839, %r38;
	bra.uni 	BB1_1547;

BB1_910:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11689, %r31;
	bra.uni 	BB1_1547;

BB1_608:
	setp.eq.s32	%p460, %r40, 1;
	@%p460 bra 	BB1_609;
	bra.uni 	BB1_10;

BB1_609:
	and.b32  	%r4050, %r34, -65281;
	shl.b32 	%r4051, %r11566, 8;
	or.b32  	%r11686, %r4051, %r4050;
	bra.uni 	BB1_613;

BB1_643:
	setp.eq.s32	%p437, %r40, 17;
	@%p437 bra 	BB1_644;
	bra.uni 	BB1_10;

BB1_644:
	and.b32  	%r4026, %r35, -65281;
	shl.b32 	%r4027, %r11566, 8;
	or.b32  	%r11685, %r4027, %r4026;
	bra.uni 	BB1_648;

BB1_625:
	setp.eq.s32	%p449, %r40, 9;
	@%p449 bra 	BB1_626;
	bra.uni 	BB1_10;

BB1_626:
	and.b32  	%r4038, %r32, -65281;
	shl.b32 	%r4039, %r11566, 8;
	or.b32  	%r11688, %r4039, %r4038;
	bra.uni 	BB1_630;

BB1_660:
	setp.eq.s32	%p426, %r40, 25;
	@%p426 bra 	BB1_661;
	bra.uni 	BB1_10;

BB1_661:
	and.b32  	%r4014, %r37, -65281;
	shl.b32 	%r4015, %r11566, 8;
	or.b32  	%r11683, %r4015, %r4014;
	bra.uni 	BB1_665;

BB1_616:
	setp.eq.s32	%p455, %r40, 5;
	@%p455 bra 	BB1_617;
	bra.uni 	BB1_10;

BB1_617:
	and.b32  	%r4044, %r33, -65281;
	shl.b32 	%r4045, %r11566, 8;
	or.b32  	%r11687, %r4045, %r4044;
	bra.uni 	BB1_621;

BB1_651:
	setp.eq.s32	%p432, %r40, 21;
	@%p432 bra 	BB1_652;
	bra.uni 	BB1_10;

BB1_652:
	and.b32  	%r4020, %r36, -65281;
	shl.b32 	%r4021, %r11566, 8;
	or.b32  	%r11684, %r4021, %r4020;
	bra.uni 	BB1_656;

BB1_633:
	setp.eq.s32	%p444, %r40, 13;
	@%p444 bra 	BB1_634;
	bra.uni 	BB1_10;

BB1_634:
	and.b32  	%r4032, %r31, -65281;
	shl.b32 	%r4033, %r11566, 8;
	or.b32  	%r11689, %r4033, %r4032;
	bra.uni 	BB1_638;

BB1_668:
	setp.eq.s32	%p421, %r40, 29;
	@%p421 bra 	BB1_669;
	bra.uni 	BB1_10;

BB1_669:
	and.b32  	%r4008, %r38, -65281;
	shl.b32 	%r4009, %r11566, 8;
	or.b32  	%r11682, %r4009, %r4008;
	bra.uni 	BB1_673;

BB1_611:
	setp.eq.s32	%p458, %r40, 3;
	@%p458 bra 	BB1_612;
	bra.uni 	BB1_10;

BB1_612:
	and.b32  	%r4047, %r34, 16777215;
	prmt.b32 	%r11686, %r11566, %r4047, 1620;
	bra.uni 	BB1_613;

BB1_646:
	setp.eq.s32	%p435, %r40, 19;
	@%p435 bra 	BB1_647;
	bra.uni 	BB1_10;

BB1_647:
	and.b32  	%r4023, %r35, 16777215;
	prmt.b32 	%r11685, %r11566, %r4023, 1620;

BB1_648:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	bra.uni 	BB1_676;

BB1_628:
	setp.eq.s32	%p447, %r40, 11;
	@%p447 bra 	BB1_629;
	bra.uni 	BB1_10;

BB1_629:
	and.b32  	%r4035, %r32, 16777215;
	prmt.b32 	%r11688, %r11566, %r4035, 1620;

BB1_630:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	bra.uni 	BB1_679;

BB1_663:
	setp.eq.s32	%p424, %r40, 27;
	@%p424 bra 	BB1_664;
	bra.uni 	BB1_10;

BB1_664:
	and.b32  	%r4011, %r37, 16777215;
	prmt.b32 	%r11683, %r11566, %r4011, 1620;

BB1_665:
	mov.u32 	%r11682, %r38;
	bra.uni 	BB1_674;

BB1_619:
	setp.eq.s32	%p453, %r40, 7;
	@%p453 bra 	BB1_620;
	bra.uni 	BB1_10;

BB1_620:
	and.b32  	%r4041, %r33, 16777215;
	prmt.b32 	%r11687, %r11566, %r4041, 1620;

BB1_621:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	bra.uni 	BB1_678;

BB1_654:
	setp.eq.s32	%p430, %r40, 23;
	@%p430 bra 	BB1_655;
	bra.uni 	BB1_10;

BB1_655:
	and.b32  	%r4017, %r36, 16777215;
	prmt.b32 	%r11684, %r11566, %r4017, 1620;

BB1_656:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	bra.uni 	BB1_675;

BB1_636:
	setp.eq.s32	%p442, %r40, 15;
	@%p442 bra 	BB1_637;
	bra.uni 	BB1_10;

BB1_637:
	and.b32  	%r4029, %r31, 16777215;
	prmt.b32 	%r11689, %r11566, %r4029, 1620;

BB1_638:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	bra.uni 	BB1_1546;

BB1_671:
	setp.ne.s32	%p419, %r40, 31;
	@%p419 bra 	BB1_10;

	and.b32  	%r4005, %r38, 16777215;
	prmt.b32 	%r11682, %r11566, %r4005, 1620;
	bra.uni 	BB1_673;

BB1_136:
	setp.eq.s32	%p172, %r40, 1;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p172 bra 	BB1_137;
	bra.uni 	BB1_214;

BB1_137:
	mov.u32 	%r3096, 24;
	// inline asm
	shf.r.wrap.b32 %r11528, %r37, %r38, %r3096;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r36, %r37, %r3096;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r35, %r36, %r3096;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r31, %r35, %r3096;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11532, %r32, %r31, %r3096;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11531, %r33, %r32, %r3096;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11530, %r34, %r33, %r3096;
	// inline asm
	mov.u32 	%r3094, 0;
	// inline asm
	shf.r.wrap.b32 %r11529, %r3094, %r34, %r3096;
	// inline asm
	bra.uni 	BB1_214;

BB1_168:
	setp.eq.s32	%p149, %r40, 17;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p149 bra 	BB1_169;
	bra.uni 	BB1_214;

BB1_169:
	mov.u32 	%r2752, 24;
	// inline asm
	shf.r.wrap.b32 %r11528, %r32, %r31, %r2752;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r33, %r32, %r2752;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r34, %r33, %r2752;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11525, %r11529, %r34, %r2752;
	// inline asm
	bra.uni 	BB1_200;

BB1_708:
	setp.eq.s32	%p495, %r30, 10;
	@%p495 bra 	BB1_709;
	bra.uni 	BB1_10;

BB1_709:
	shl.b32 	%r4166, %r32, 8;
	and.b32  	%r4167, %r4166, 65280;
	bfe.u32 	%r4168, %r32, 8, 8;
	or.b32  	%r11688, %r4167, %r4168;
	mov.u32 	%r11690, 10;
	bra.uni 	BB1_770;

BB1_151:
	setp.eq.s32	%p161, %r40, 9;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p161 bra 	BB1_152;
	bra.uni 	BB1_214;

BB1_152:
	mov.u32 	%r2908, 24;
	// inline asm
	shf.r.wrap.b32 %r11528, %r35, %r36, %r2908;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r31, %r35, %r2908;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r32, %r31, %r2908;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r33, %r32, %r2908;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11532, %r34, %r33, %r2908;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11531, %r11529, %r34, %r2908;
	// inline asm
	mov.u32 	%r11530, %r11529;
	bra.uni 	BB1_214;

BB1_736:
	setp.eq.s32	%p474, %r30, 25;
	@%p474 bra 	BB1_737;
	bra.uni 	BB1_10;

BB1_737:
	or.b32  	%r4086, %r36, %r37;
	and.b32  	%r4087, %r36, 16777215;
	prmt.b32 	%r11684, %r37, %r4087, 1620;
	shr.u32 	%r11683, %r4086, 24;
	mov.u32 	%r11690, 25;
	mov.u32 	%r11682, %r38;
	bra.uni 	BB1_751;

BB1_183:
	setp.eq.s32	%p138, %r40, 25;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p138 bra 	BB1_184;
	bra.uni 	BB1_214;

BB1_184:
	mov.u32 	%r2628, 24;
	// inline asm
	shf.r.wrap.b32 %r11528, %r34, %r33, %r2628;
	// inline asm
	mov.u32 	%r11525, 0;
	// inline asm
	shf.r.wrap.b32 %r11527, %r11525, %r34, %r2628;
	// inline asm
	bra.uni 	BB1_188;

BB1_700:
	setp.eq.s32	%p501, %r30, 6;
	@%p501 bra 	BB1_701;
	bra.uni 	BB1_10;

BB1_701:
	shl.b32 	%r4187, %r33, 8;
	and.b32  	%r4188, %r4187, 65280;
	bfe.u32 	%r4189, %r33, 8, 8;
	or.b32  	%r11687, %r4188, %r4189;
	mov.u32 	%r11690, 6;
	bra.uni 	BB1_773;

BB1_143:
	setp.eq.s32	%p167, %r40, 5;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p167 bra 	BB1_144;
	bra.uni 	BB1_214;

BB1_144:
	mov.u32 	%r2998, 24;
	// inline asm
	shf.r.wrap.b32 %r11528, %r36, %r37, %r2998;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r35, %r36, %r2998;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r31, %r35, %r2998;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r32, %r31, %r2998;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11532, %r33, %r32, %r2998;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11531, %r34, %r33, %r2998;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11530, %r11529, %r34, %r2998;
	// inline asm
	bra.uni 	BB1_214;

BB1_728:
	setp.eq.s32	%p480, %r30, 21;
	@%p480 bra 	BB1_729;
	bra.uni 	BB1_10;

BB1_729:
	or.b32  	%r4107, %r35, %r36;
	and.b32  	%r4108, %r35, 16777215;
	prmt.b32 	%r11685, %r36, %r4108, 1620;
	shr.u32 	%r11684, %r4107, 24;
	mov.u32 	%r11690, 21;
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	bra.uni 	BB1_752;

BB1_175:
	setp.eq.s32	%p144, %r40, 21;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p144 bra 	BB1_176;
	bra.uni 	BB1_214;

BB1_176:
	mov.u32 	%r2686, 24;
	// inline asm
	shf.r.wrap.b32 %r11528, %r33, %r32, %r2686;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r34, %r33, %r2686;
	// inline asm
	mov.u32 	%r11525, 0;
	// inline asm
	shf.r.wrap.b32 %r11526, %r11525, %r34, %r2686;
	// inline asm
	bra.uni 	BB1_189;

BB1_715:
	setp.eq.s32	%p490, %r30, 14;
	@%p490 bra 	BB1_716;
	bra.uni 	BB1_10;

BB1_716:
	shl.b32 	%r4145, %r31, 8;
	and.b32  	%r4146, %r4145, 65280;
	bfe.u32 	%r4147, %r31, 8, 8;
	or.b32  	%r11689, %r4146, %r4147;
	mov.u32 	%r11690, 14;
	bra.uni 	BB1_766;

BB1_158:
	setp.eq.s32	%p156, %r40, 13;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p156 bra 	BB1_159;
	bra.uni 	BB1_214;

BB1_159:
	mov.u32 	%r2826, 24;
	// inline asm
	shf.r.wrap.b32 %r11528, %r31, %r35, %r2826;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r32, %r31, %r2826;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r33, %r32, %r2826;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r34, %r33, %r2826;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11532, %r11529, %r34, %r2826;
	// inline asm
	bra.uni 	BB1_163;

BB1_743:
	setp.eq.s32	%p469, %r30, 29;
	@%p469 bra 	BB1_744;
	bra.uni 	BB1_10;

BB1_744:
	or.b32  	%r4065, %r37, %r38;
	and.b32  	%r4066, %r37, 16777215;
	prmt.b32 	%r11683, %r38, %r4066, 1620;
	shr.u32 	%r11682, %r4065, 24;
	mov.u32 	%r11690, 29;
	bra.uni 	BB1_750;

BB1_192:
	setp.eq.s32	%p133, %r40, 29;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p133 bra 	BB1_193;
	bra.uni 	BB1_214;

BB1_193:
	mov.u32 	%r11525, 0;
	mov.u32 	%r2578, 24;
	// inline asm
	shf.r.wrap.b32 %r11528, %r11525, %r34, %r2578;
	// inline asm
	bra.uni 	BB1_197;

BB1_285:
	setp.eq.s32	%p221, %r40, 17;
	@%p221 bra 	BB1_286;
	bra.uni 	BB1_258;

BB1_286:
	mov.u32 	%r3350, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r32, %r31, %r3350;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r33, %r32, %r3350;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r34, %r33, %r3350;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11553, %r34, %r3350;
	// inline asm
	bra.uni 	BB1_321;

BB1_269:
	setp.eq.s32	%p233, %r40, 9;
	@%p233 bra 	BB1_270;
	bra.uni 	BB1_258;

BB1_270:
	mov.u32 	%r3506, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r3506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r31, %r35, %r3506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r32, %r31, %r3506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r33, %r32, %r3506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3499, %r34, %r33, %r3506;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r11555, %r11553, %r34, %r3506;
	// inline asm
	mov.u32 	%r11554, %r11553;
	mov.u32 	%r34, %r3499;
	bra.uni 	BB1_334;

BB1_300:
	setp.eq.s32	%p210, %r40, 25;
	@%p210 bra 	BB1_301;
	bra.uni 	BB1_258;

BB1_301:
	mov.u32 	%r3226, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r34, %r33, %r3226;
	// inline asm
	mov.u32 	%r36, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r34, %r3226;
	// inline asm
	bra.uni 	BB1_315;

BB1_261:
	setp.eq.s32	%p239, %r40, 5;
	@%p239 bra 	BB1_262;
	bra.uni 	BB1_258;

BB1_262:
	mov.u32 	%r3596, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r3596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r3596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r31, %r35, %r3596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r32, %r31, %r3596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3585, %r33, %r32, %r3596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11555, %r34, %r33, %r3596;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r11554, %r11553, %r34, %r3596;
	// inline asm
	mov.u32 	%r34, %r3585;
	bra.uni 	BB1_334;

BB1_292:
	setp.eq.s32	%p216, %r40, 21;
	@%p216 bra 	BB1_293;
	bra.uni 	BB1_258;

BB1_293:
	mov.u32 	%r3284, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r33, %r32, %r3284;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r34, %r33, %r3284;
	// inline asm
	mov.u32 	%r35, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r34, %r3284;
	// inline asm
	bra.uni 	BB1_318;

BB1_276:
	setp.eq.s32	%p228, %r40, 13;
	@%p228 bra 	BB1_277;
	bra.uni 	BB1_258;

BB1_277:
	mov.u32 	%r3424, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r31, %r35, %r3424;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r32, %r31, %r3424;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r33, %r32, %r3424;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r34, %r33, %r3424;
	// inline asm
	mov.u32 	%r11553, 0;
	// inline asm
	shf.r.wrap.b32 %r34, %r11553, %r34, %r3424;
	// inline asm
	bra.uni 	BB1_324;

BB1_307:
	setp.eq.s32	%p205, %r40, 29;
	@%p205 bra 	BB1_308;
	bra.uni 	BB1_258;

BB1_308:
	mov.u32 	%r37, 0;
	mov.u32 	%r3176, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r34, %r3176;
	// inline asm
	bra.uni 	BB1_333;

BB1_139:
	setp.eq.s32	%p170, %r40, 3;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p170 bra 	BB1_140;
	bra.uni 	BB1_214;

BB1_140:
	mov.u32 	%r3032, 8;
	// inline asm
	shf.r.wrap.b32 %r11528, %r37, %r38, %r3032;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r36, %r37, %r3032;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r35, %r36, %r3032;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r31, %r35, %r3032;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11532, %r32, %r31, %r3032;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11531, %r33, %r32, %r3032;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11530, %r34, %r33, %r3032;
	// inline asm
	mov.u32 	%r3030, 0;
	// inline asm
	shf.r.wrap.b32 %r11529, %r3030, %r34, %r3032;
	// inline asm
	bra.uni 	BB1_214;

BB1_171:
	setp.eq.s32	%p147, %r40, 19;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p147 bra 	BB1_172;
	bra.uni 	BB1_214;

BB1_172:
	mov.u32 	%r2712, 8;
	// inline asm
	shf.r.wrap.b32 %r11528, %r32, %r31, %r2712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r33, %r32, %r2712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r34, %r33, %r2712;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11525, %r11529, %r34, %r2712;
	// inline asm

BB1_200:
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	bra.uni 	BB1_214;

BB1_711:
	setp.eq.s32	%p493, %r30, 12;
	@%p493 bra 	BB1_712;
	bra.uni 	BB1_10;

BB1_712:
	and.b32  	%r4152, %r32, 65535;
	shl.b32 	%r4153, %r32, 8;
	and.b32  	%r4154, %r4153, -16777216;
	or.b32  	%r4155, %r4154, %r4152;
	shr.u32 	%r4156, %r32, 8;
	and.b32  	%r4157, %r4156, 16711680;
	or.b32  	%r11688, %r4155, %r4157;
	mov.u32 	%r11690, 12;

BB1_770:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11689, %r31;
	bra.uni 	BB1_1547;

BB1_154:
	setp.eq.s32	%p159, %r40, 11;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p159 bra 	BB1_155;
	bra.uni 	BB1_214;

BB1_155:
	mov.u32 	%r2856, 8;
	// inline asm
	shf.r.wrap.b32 %r11528, %r35, %r36, %r2856;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r31, %r35, %r2856;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r32, %r31, %r2856;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r33, %r32, %r2856;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11532, %r34, %r33, %r2856;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11531, %r11529, %r34, %r2856;
	// inline asm
	mov.u32 	%r11530, %r11529;
	bra.uni 	BB1_214;

BB1_739:
	setp.eq.s32	%p472, %r30, 27;
	@%p472 bra 	BB1_740;
	bra.uni 	BB1_10;

BB1_740:
	and.b32  	%r4075, %r37, 255;
	shl.b32 	%r4076, %r37, 8;
	and.b32  	%r4077, %r4076, 16711680;
	or.b32  	%r4078, %r4077, %r4075;
	shr.u32 	%r4079, %r37, 8;
	and.b32  	%r4080, %r4079, 65280;
	or.b32  	%r11683, %r4078, %r4080;
	mov.u32 	%r11690, 27;

BB1_757:
	mov.u32 	%r11682, %r38;
	bra.uni 	BB1_750;

BB1_186:
	setp.eq.s32	%p136, %r40, 27;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p136 bra 	BB1_187;
	bra.uni 	BB1_214;

BB1_187:
	mov.u32 	%r2600, 8;
	// inline asm
	shf.r.wrap.b32 %r11528, %r34, %r33, %r2600;
	// inline asm
	mov.u32 	%r11525, 0;
	// inline asm
	shf.r.wrap.b32 %r11527, %r11525, %r34, %r2600;
	// inline asm

BB1_188:
	mov.u32 	%r11526, %r11525;
	bra.uni 	BB1_189;

BB1_703:
	setp.eq.s32	%p499, %r30, 8;
	@%p499 bra 	BB1_704;
	bra.uni 	BB1_10;

BB1_704:
	and.b32  	%r4173, %r33, 65535;
	shl.b32 	%r4174, %r33, 8;
	and.b32  	%r4175, %r4174, -16777216;
	or.b32  	%r4176, %r4175, %r4173;
	shr.u32 	%r4177, %r33, 8;
	and.b32  	%r4178, %r4177, 16711680;
	or.b32  	%r11687, %r4176, %r4178;
	mov.u32 	%r11690, 8;

BB1_773:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;
	mov.u32 	%r11686, %r34;
	bra.uni 	BB1_754;

BB1_146:
	setp.eq.s32	%p165, %r40, 7;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p165 bra 	BB1_147;
	bra.uni 	BB1_214;

BB1_147:
	mov.u32 	%r2940, 8;
	// inline asm
	shf.r.wrap.b32 %r11528, %r36, %r37, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r35, %r36, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r31, %r35, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r32, %r31, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11532, %r33, %r32, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11531, %r34, %r33, %r2940;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11530, %r11529, %r34, %r2940;
	// inline asm
	bra.uni 	BB1_214;

BB1_731:
	setp.eq.s32	%p478, %r30, 23;
	@%p478 bra 	BB1_732;
	bra.uni 	BB1_10;

BB1_732:
	and.b32  	%r4096, %r36, 255;
	shl.b32 	%r4097, %r36, 8;
	and.b32  	%r4098, %r4097, 16711680;
	or.b32  	%r4099, %r4098, %r4096;
	shr.u32 	%r4100, %r36, 8;
	and.b32  	%r4101, %r4100, 65280;
	or.b32  	%r11684, %r4099, %r4101;
	mov.u32 	%r11690, 23;

BB1_760:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	bra.uni 	BB1_751;

BB1_178:
	setp.eq.s32	%p142, %r40, 23;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p142 bra 	BB1_179;
	bra.uni 	BB1_214;

BB1_179:
	mov.u32 	%r2652, 8;
	// inline asm
	shf.r.wrap.b32 %r11528, %r33, %r32, %r2652;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r34, %r33, %r2652;
	// inline asm
	mov.u32 	%r11525, 0;
	// inline asm
	shf.r.wrap.b32 %r11526, %r11525, %r34, %r2652;
	// inline asm
	bra.uni 	BB1_189;

BB1_718:
	setp.eq.s32	%p488, %r30, 16;
	@%p488 bra 	BB1_719;
	bra.uni 	BB1_10;

BB1_719:
	and.b32  	%r4131, %r31, 65535;
	shl.b32 	%r4132, %r31, 8;
	and.b32  	%r4133, %r4132, -16777216;
	or.b32  	%r4134, %r4133, %r4131;
	shr.u32 	%r4135, %r31, 8;
	and.b32  	%r4136, %r4135, 16711680;
	or.b32  	%r11689, %r4134, %r4136;
	mov.u32 	%r11690, 16;

BB1_766:
	mov.u32 	%r11682, %r38;
	mov.u32 	%r11683, %r37;
	mov.u32 	%r11684, %r36;
	mov.u32 	%r11685, %r35;

BB1_767:
	mov.u32 	%r11686, %r34;
	mov.u32 	%r11687, %r33;
	mov.u32 	%r11688, %r32;
	bra.uni 	BB1_1547;

BB1_161:
	setp.eq.s32	%p154, %r40, 15;
	mov.u32 	%r11525, %r11529;
	mov.u32 	%r11526, %r11529;
	mov.u32 	%r11527, %r11529;
	mov.u32 	%r11528, %r11529;
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	mov.u32 	%r11532, %r11529;
	@%p154 bra 	BB1_162;
	bra.uni 	BB1_214;

BB1_162:
	mov.u32 	%r2780, 8;
	// inline asm
	shf.r.wrap.b32 %r11528, %r31, %r35, %r2780;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11527, %r32, %r31, %r2780;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11526, %r33, %r32, %r2780;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11525, %r34, %r33, %r2780;
	// inline asm
	mov.u32 	%r11529, 0;
	// inline asm
	shf.r.wrap.b32 %r11532, %r11529, %r34, %r2780;
	// inline asm

BB1_163:
	mov.u32 	%r11530, %r11529;
	mov.u32 	%r11531, %r11529;
	bra.uni 	BB1_214;

BB1_746:
	setp.ne.s32	%p467, %r30, 31;
	@%p467 bra 	BB1_10;

	and.b32  	%r4054, %r38, 255;
	shl.b32 	%r4055, %r38, 8;
	and.b32  	%r4056, %r4055, 16711680;
	or.b32  	%r4057, %r4056, %r4054;
	shr.u32 	%r4058, %r38, 8;
	and.b32  	%r4059, %r4058, 65280;
	or.b32  	%r11682, %r4057, %r4059;
	mov.u32 	%r11690, 31;
	bra.uni 	BB1_749;

BB1_10:
	mov.u32 	%r11682, %r38;

BB1_11:
	mov.u32 	%r11683, %r37;

BB1_12:
	mov.u32 	%r11684, %r36;

BB1_13:
	mov.u32 	%r11685, %r35;

BB1_14:
	mov.u32 	%r11686, %r34;

BB1_15:
	mov.u32 	%r11687, %r33;

BB1_16:
	mov.u32 	%r11688, %r32;

BB1_17:
	mov.u32 	%r11689, %r31;

BB1_1546:
	mov.u32 	%r11690, %r30;

BB1_1547:
	add.s32 	%r11515, %r11515, 1;
	shl.b64 	%rd172, %rd83, 7;
	add.s64 	%rd173, %rd88, %rd172;
	mul.wide.u32 	%rd174, %r11515, 4;
	add.s64 	%rd175, %rd173, %rd174;
	ld.global.u32 	%r11514, [%rd175];
	setp.ne.s32	%p1030, %r11514, 0;
	@%p1030 bra 	BB1_4;

BB1_1548:
	and.b32  	%r8945, %r11690, 3;
	mov.u32 	%r8946, 4;
	sub.s32 	%r8947, %r8946, %r8945;
	shl.b32 	%r8948, %r8947, 2;
	mov.u32 	%r8949, 1985229328;
	shr.u32 	%r8950, %r8949, %r8948;
	and.b32  	%r1795, %r8950, 65535;
	shr.u32 	%r8944, %r11690, 2;
	setp.gt.s32	%p1031, %r8944, 7;
	@%p1031 bra 	BB1_1564;

	setp.gt.s32	%p1043, %r8944, 3;
	@%p1043 bra 	BB1_1557;

	setp.gt.s32	%p1049, %r8944, 1;
	@%p1049 bra 	BB1_1554;

	setp.eq.s32	%p1052, %r8944, 0;
	@%p1052 bra 	BB1_1589;
	bra.uni 	BB1_1552;

BB1_1589:
	// inline asm
	prmt.b32 %r11703, %r23, %r24, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r22, %r23, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r21, %r22, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11700, %r20, %r21, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11701, %r19, %r20, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11702, %r18, %r19, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11695, %r17, %r18, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11696, %r16, %r17, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11697, %r15, %r16, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11698, %r14, %r15, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11691, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11692, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11693, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r9487, 0;
	// inline asm
	prmt.b32 %r11694, %r9487, %r11, %r1795;
	// inline asm
	bra.uni 	BB1_1590;

BB1_1564:
	setp.gt.s32	%p1032, %r8944, 11;
	@%p1032 bra 	BB1_1572;

	setp.gt.s32	%p1038, %r8944, 9;
	@%p1038 bra 	BB1_1569;

	setp.eq.s32	%p1041, %r8944, 8;
	@%p1041 bra 	BB1_1583;
	bra.uni 	BB1_1567;

BB1_1583:
	// inline asm
	prmt.b32 %r11703, %r15, %r16, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r14, %r15, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11700, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11701, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11691, 0;
	// inline asm
	prmt.b32 %r11702, %r11691, %r11, %r1795;
	// inline asm
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;
	mov.u32 	%r11695, %r11691;
	bra.uni 	BB1_1584;

BB1_1557:
	setp.gt.s32	%p1044, %r8944, 5;
	@%p1044 bra 	BB1_1561;

	setp.eq.s32	%p1047, %r8944, 4;
	@%p1047 bra 	BB1_1587;
	bra.uni 	BB1_1559;

BB1_1587:
	// inline asm
	prmt.b32 %r11703, %r19, %r20, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r18, %r19, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r17, %r18, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11700, %r16, %r17, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11701, %r15, %r16, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11702, %r14, %r15, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11695, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11696, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11697, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11691, 0;
	// inline asm
	prmt.b32 %r11698, %r11691, %r11, %r1795;
	// inline asm
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;
	bra.uni 	BB1_1590;

BB1_1572:
	setp.gt.s32	%p1033, %r8944, 13;
	@%p1033 bra 	BB1_1576;

	setp.eq.s32	%p1036, %r8944, 12;
	@%p1036 bra 	BB1_1579;
	bra.uni 	BB1_1574;

BB1_1579:
	// inline asm
	prmt.b32 %r11703, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11691, 0;
	// inline asm
	prmt.b32 %r11704, %r11691, %r11, %r1795;
	// inline asm
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;
	mov.u32 	%r11695, %r11691;
	mov.u32 	%r11696, %r11691;
	mov.u32 	%r11697, %r11691;
	mov.u32 	%r11698, %r11691;
	mov.u32 	%r11699, %r11691;
	bra.uni 	BB1_1580;

BB1_1554:
	setp.eq.s32	%p1050, %r8944, 2;
	@%p1050 bra 	BB1_1588;
	bra.uni 	BB1_1555;

BB1_1588:
	// inline asm
	prmt.b32 %r11703, %r21, %r22, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r20, %r21, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r19, %r20, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11700, %r18, %r19, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11701, %r17, %r18, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11702, %r16, %r17, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11695, %r15, %r16, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11696, %r14, %r15, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11697, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11698, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11691, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11693, 0;
	// inline asm
	prmt.b32 %r11692, %r11693, %r11, %r1795;
	// inline asm
	mov.u32 	%r11694, %r11693;
	bra.uni 	BB1_1590;

BB1_1569:
	setp.eq.s32	%p1039, %r8944, 10;
	@%p1039 bra 	BB1_1582;
	bra.uni 	BB1_1570;

BB1_1582:
	// inline asm
	prmt.b32 %r11703, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11691, 0;
	// inline asm
	prmt.b32 %r11700, %r11691, %r11, %r1795;
	// inline asm
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;
	mov.u32 	%r11695, %r11691;
	mov.u32 	%r11696, %r11691;
	mov.u32 	%r11697, %r11691;
	mov.u32 	%r11698, %r11691;
	bra.uni 	BB1_1581;

BB1_1561:
	setp.eq.s32	%p1045, %r8944, 6;
	@%p1045 bra 	BB1_1586;
	bra.uni 	BB1_1562;

BB1_1586:
	// inline asm
	prmt.b32 %r11703, %r17, %r18, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r16, %r17, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r15, %r16, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11700, %r14, %r15, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11701, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11702, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11695, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11691, 0;
	// inline asm
	prmt.b32 %r11696, %r11691, %r11, %r1795;
	// inline asm
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;
	bra.uni 	BB1_1585;

BB1_1576:
	setp.eq.s32	%p1034, %r8944, 14;
	@%p1034 bra 	BB1_1578;

	setp.ne.s32	%p1035, %r8944, 15;
	mov.u32 	%r11691, %r14;
	mov.u32 	%r11692, %r13;
	mov.u32 	%r11693, %r12;
	mov.u32 	%r11694, %r11;
	mov.u32 	%r11695, %r18;
	mov.u32 	%r11696, %r17;
	mov.u32 	%r11697, %r16;
	mov.u32 	%r11698, %r15;
	mov.u32 	%r11699, %r22;
	mov.u32 	%r11700, %r21;
	mov.u32 	%r11701, %r20;
	mov.u32 	%r11702, %r19;
	mov.u32 	%r11703, %r24;
	mov.u32 	%r11704, %r23;
	@%p1035 bra 	BB1_1590;

BB1_1578:
	mov.u32 	%r11691, 0;
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;
	mov.u32 	%r11695, %r11691;
	mov.u32 	%r11696, %r11691;
	mov.u32 	%r11697, %r11691;
	mov.u32 	%r11698, %r11691;
	mov.u32 	%r11699, %r11691;
	mov.u32 	%r11700, %r11691;
	mov.u32 	%r11701, %r11691;
	mov.u32 	%r11702, %r11691;
	mov.u32 	%r11703, %r11691;
	mov.u32 	%r11704, %r11691;
	bra.uni 	BB1_1590;

BB1_1552:
	setp.eq.s32	%p1053, %r8944, 1;
	mov.u32 	%r11691, %r14;
	mov.u32 	%r11692, %r13;
	mov.u32 	%r11693, %r12;
	mov.u32 	%r11694, %r11;
	mov.u32 	%r11695, %r18;
	mov.u32 	%r11696, %r17;
	mov.u32 	%r11697, %r16;
	mov.u32 	%r11698, %r15;
	mov.u32 	%r11699, %r22;
	mov.u32 	%r11700, %r21;
	mov.u32 	%r11701, %r20;
	mov.u32 	%r11702, %r19;
	mov.u32 	%r11703, %r24;
	mov.u32 	%r11704, %r23;
	@%p1053 bra 	BB1_1553;
	bra.uni 	BB1_1590;

BB1_1553:
	// inline asm
	prmt.b32 %r11703, %r22, %r23, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r21, %r22, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r20, %r21, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11700, %r19, %r20, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11701, %r18, %r19, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11702, %r17, %r18, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11695, %r16, %r17, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11696, %r15, %r16, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11697, %r14, %r15, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11698, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11691, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11692, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11694, 0;
	// inline asm
	prmt.b32 %r11693, %r11694, %r11, %r1795;
	// inline asm
	bra.uni 	BB1_1590;

BB1_1567:
	setp.eq.s32	%p1042, %r8944, 9;
	mov.u32 	%r11691, %r14;
	mov.u32 	%r11692, %r13;
	mov.u32 	%r11693, %r12;
	mov.u32 	%r11694, %r11;
	mov.u32 	%r11695, %r18;
	mov.u32 	%r11696, %r17;
	mov.u32 	%r11697, %r16;
	mov.u32 	%r11698, %r15;
	mov.u32 	%r11699, %r22;
	mov.u32 	%r11700, %r21;
	mov.u32 	%r11701, %r20;
	mov.u32 	%r11702, %r19;
	mov.u32 	%r11703, %r24;
	mov.u32 	%r11704, %r23;
	@%p1042 bra 	BB1_1568;
	bra.uni 	BB1_1590;

BB1_1568:
	// inline asm
	prmt.b32 %r11703, %r14, %r15, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11700, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11691, 0;
	// inline asm
	prmt.b32 %r11701, %r11691, %r11, %r1795;
	// inline asm
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;
	mov.u32 	%r11695, %r11691;
	mov.u32 	%r11696, %r11691;
	mov.u32 	%r11697, %r11691;
	mov.u32 	%r11698, %r11691;
	mov.u32 	%r11702, %r11691;
	bra.uni 	BB1_1590;

BB1_1559:
	setp.eq.s32	%p1048, %r8944, 5;
	mov.u32 	%r11691, %r14;
	mov.u32 	%r11692, %r13;
	mov.u32 	%r11693, %r12;
	mov.u32 	%r11694, %r11;
	mov.u32 	%r11695, %r18;
	mov.u32 	%r11696, %r17;
	mov.u32 	%r11697, %r16;
	mov.u32 	%r11698, %r15;
	mov.u32 	%r11699, %r22;
	mov.u32 	%r11700, %r21;
	mov.u32 	%r11701, %r20;
	mov.u32 	%r11702, %r19;
	mov.u32 	%r11703, %r24;
	mov.u32 	%r11704, %r23;
	@%p1048 bra 	BB1_1560;
	bra.uni 	BB1_1590;

BB1_1560:
	// inline asm
	prmt.b32 %r11703, %r18, %r19, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r17, %r18, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r16, %r17, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11700, %r15, %r16, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11701, %r14, %r15, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11702, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11695, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11696, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11691, 0;
	// inline asm
	prmt.b32 %r11697, %r11691, %r11, %r1795;
	// inline asm
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;
	mov.u32 	%r11698, %r11691;
	bra.uni 	BB1_1590;

BB1_1574:
	setp.eq.s32	%p1037, %r8944, 13;
	mov.u32 	%r11691, %r14;
	mov.u32 	%r11692, %r13;
	mov.u32 	%r11693, %r12;
	mov.u32 	%r11694, %r11;
	mov.u32 	%r11695, %r18;
	mov.u32 	%r11696, %r17;
	mov.u32 	%r11697, %r16;
	mov.u32 	%r11698, %r15;
	mov.u32 	%r11699, %r22;
	mov.u32 	%r11700, %r21;
	mov.u32 	%r11701, %r20;
	mov.u32 	%r11702, %r19;
	mov.u32 	%r11703, %r24;
	mov.u32 	%r11704, %r23;
	@%p1037 bra 	BB1_1575;
	bra.uni 	BB1_1590;

BB1_1575:
	mov.u32 	%r11691, 0;
	// inline asm
	prmt.b32 %r11703, %r11691, %r11, %r1795;
	// inline asm
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;
	mov.u32 	%r11695, %r11691;
	mov.u32 	%r11696, %r11691;
	mov.u32 	%r11697, %r11691;
	mov.u32 	%r11698, %r11691;
	mov.u32 	%r11699, %r11691;
	mov.u32 	%r11700, %r11691;
	mov.u32 	%r11701, %r11691;
	mov.u32 	%r11702, %r11691;
	mov.u32 	%r11704, %r11691;
	bra.uni 	BB1_1590;

BB1_1555:
	setp.eq.s32	%p1051, %r8944, 3;
	mov.u32 	%r11691, %r14;
	mov.u32 	%r11692, %r13;
	mov.u32 	%r11693, %r12;
	mov.u32 	%r11694, %r11;
	mov.u32 	%r11695, %r18;
	mov.u32 	%r11696, %r17;
	mov.u32 	%r11697, %r16;
	mov.u32 	%r11698, %r15;
	mov.u32 	%r11699, %r22;
	mov.u32 	%r11700, %r21;
	mov.u32 	%r11701, %r20;
	mov.u32 	%r11702, %r19;
	mov.u32 	%r11703, %r24;
	mov.u32 	%r11704, %r23;
	@%p1051 bra 	BB1_1556;
	bra.uni 	BB1_1590;

BB1_1556:
	// inline asm
	prmt.b32 %r11703, %r20, %r21, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r19, %r20, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r18, %r19, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11700, %r17, %r18, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11701, %r16, %r17, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11702, %r15, %r16, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11695, %r14, %r15, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11696, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11697, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11698, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11692, 0;
	// inline asm
	prmt.b32 %r11691, %r11692, %r11, %r1795;
	// inline asm
	mov.u32 	%r11693, %r11692;
	mov.u32 	%r11694, %r11692;
	bra.uni 	BB1_1590;

BB1_1570:
	setp.eq.s32	%p1040, %r8944, 11;
	mov.u32 	%r11691, %r14;
	mov.u32 	%r11692, %r13;
	mov.u32 	%r11693, %r12;
	mov.u32 	%r11694, %r11;
	mov.u32 	%r11695, %r18;
	mov.u32 	%r11696, %r17;
	mov.u32 	%r11697, %r16;
	mov.u32 	%r11698, %r15;
	mov.u32 	%r11699, %r22;
	mov.u32 	%r11700, %r21;
	mov.u32 	%r11701, %r20;
	mov.u32 	%r11702, %r19;
	mov.u32 	%r11703, %r24;
	mov.u32 	%r11704, %r23;
	@%p1040 bra 	BB1_1571;
	bra.uni 	BB1_1590;

BB1_1571:
	// inline asm
	prmt.b32 %r11703, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11691, 0;
	// inline asm
	prmt.b32 %r11699, %r11691, %r11, %r1795;
	// inline asm
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;
	mov.u32 	%r11695, %r11691;
	mov.u32 	%r11696, %r11691;
	mov.u32 	%r11697, %r11691;
	mov.u32 	%r11698, %r11691;

BB1_1580:
	mov.u32 	%r11700, %r11691;

BB1_1581:
	mov.u32 	%r11701, %r11691;
	mov.u32 	%r11702, %r11691;
	bra.uni 	BB1_1590;

BB1_1562:
	setp.eq.s32	%p1046, %r8944, 7;
	mov.u32 	%r11691, %r14;
	mov.u32 	%r11692, %r13;
	mov.u32 	%r11693, %r12;
	mov.u32 	%r11694, %r11;
	mov.u32 	%r11695, %r18;
	mov.u32 	%r11696, %r17;
	mov.u32 	%r11697, %r16;
	mov.u32 	%r11698, %r15;
	mov.u32 	%r11699, %r22;
	mov.u32 	%r11700, %r21;
	mov.u32 	%r11701, %r20;
	mov.u32 	%r11702, %r19;
	mov.u32 	%r11703, %r24;
	mov.u32 	%r11704, %r23;
	@%p1046 bra 	BB1_1563;
	bra.uni 	BB1_1590;

BB1_1563:
	// inline asm
	prmt.b32 %r11703, %r16, %r17, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11704, %r15, %r16, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11699, %r14, %r15, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11700, %r13, %r14, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11701, %r12, %r13, %r1795;
	// inline asm
	// inline asm
	prmt.b32 %r11702, %r11, %r12, %r1795;
	// inline asm
	mov.u32 	%r11691, 0;
	// inline asm
	prmt.b32 %r11695, %r11691, %r11, %r1795;
	// inline asm
	mov.u32 	%r11692, %r11691;
	mov.u32 	%r11693, %r11691;
	mov.u32 	%r11694, %r11691;

BB1_1584:
	mov.u32 	%r11696, %r11691;

BB1_1585:
	mov.u32 	%r11697, %r11691;
	mov.u32 	%r11698, %r11691;

BB1_1590:
	ld.param.u64 	%rd2848, [m01710_m04_param_6];
	ld.param.u32 	%r11496, [m01710_m04_param_25];
	ld.const.u64 	%rd2847, [k_sha512+608];
	ld.const.u64 	%rd2846, [k_sha512+600];
	ld.const.u64 	%rd2845, [k_sha512+592];
	ld.const.u64 	%rd2837, [k_sha512+584];
	ld.const.u64 	%rd2836, [k_sha512+576];
	ld.const.u64 	%rd2835, [k_sha512+568];
	ld.const.u64 	%rd2834, [k_sha512+560];
	ld.const.u64 	%rd2833, [k_sha512+552];
	ld.const.u64 	%rd2832, [k_sha512+544];
	ld.const.u64 	%rd2831, [k_sha512+536];
	ld.const.u64 	%rd2830, [k_sha512+528];
	ld.const.u64 	%rd2829, [k_sha512+520];
	ld.const.u64 	%rd2828, [k_sha512+512];
	ld.const.u64 	%rd2827, [k_sha512+504];
	ld.const.u64 	%rd2826, [k_sha512+496];
	ld.const.u64 	%rd2825, [k_sha512+488];
	ld.const.u64 	%rd2824, [k_sha512+480];
	ld.const.u64 	%rd2823, [k_sha512+472];
	ld.const.u64 	%rd2822, [k_sha512+464];
	ld.const.u64 	%rd2821, [k_sha512+456];
	ld.const.u64 	%rd2820, [k_sha512+448];
	ld.const.u64 	%rd2819, [k_sha512+440];
	ld.const.u64 	%rd2818, [k_sha512+432];
	ld.const.u64 	%rd2817, [k_sha512+424];
	ld.const.u64 	%rd2816, [k_sha512+416];
	ld.const.u64 	%rd2815, [k_sha512+408];
	ld.const.u64 	%rd2814, [k_sha512+400];
	ld.const.u64 	%rd2813, [k_sha512+392];
	ld.const.u64 	%rd2812, [k_sha512+384];
	ld.const.u64 	%rd2811, [k_sha512+376];
	ld.const.u64 	%rd2810, [k_sha512+368];
	ld.const.u64 	%rd2809, [k_sha512+360];
	ld.const.u64 	%rd2808, [k_sha512+352];
	ld.const.u64 	%rd2807, [k_sha512+344];
	ld.const.u64 	%rd2806, [k_sha512+336];
	ld.const.u64 	%rd2805, [k_sha512+328];
	ld.const.u64 	%rd2804, [k_sha512+320];
	ld.const.u64 	%rd2803, [k_sha512+312];
	ld.const.u64 	%rd2802, [k_sha512+304];
	ld.const.u64 	%rd2801, [k_sha512+296];
	ld.const.u64 	%rd2800, [k_sha512+288];
	ld.const.u64 	%rd2799, [k_sha512+280];
	ld.const.u64 	%rd2798, [k_sha512+272];
	ld.const.u64 	%rd2797, [k_sha512+264];
	ld.const.u64 	%rd2796, [k_sha512+256];
	ld.const.u64 	%rd2795, [k_sha512+248];
	ld.const.u64 	%rd2794, [k_sha512+240];
	ld.const.u64 	%rd2793, [k_sha512+232];
	ld.const.u64 	%rd2792, [k_sha512+224];
	ld.const.u64 	%rd2791, [k_sha512+216];
	ld.const.u64 	%rd2790, [k_sha512+208];
	ld.const.u64 	%rd2789, [k_sha512+200];
	ld.const.u64 	%rd2788, [k_sha512+192];
	ld.const.u64 	%rd2787, [k_sha512+184];
	ld.const.u64 	%rd2786, [k_sha512+176];
	ld.const.u64 	%rd2785, [k_sha512+168];
	ld.const.u64 	%rd2784, [k_sha512+160];
	ld.const.u64 	%rd2783, [k_sha512+152];
	ld.const.u64 	%rd2782, [k_sha512+144];
	ld.const.u64 	%rd2781, [k_sha512+136];
	ld.const.u64 	%rd2780, [k_sha512+128];
	ld.const.u64 	%rd2779, [k_sha512+120];
	ld.const.u64 	%rd2778, [k_sha512+112];
	ld.const.u64 	%rd2777, [k_sha512+104];
	ld.const.u64 	%rd2776, [k_sha512+96];
	ld.const.u64 	%rd2775, [k_sha512+88];
	ld.const.u64 	%rd2774, [k_sha512+80];
	ld.const.u64 	%rd2773, [k_sha512+72];
	ld.const.u64 	%rd2772, [k_sha512+64];
	ld.const.u64 	%rd2771, [k_sha512+56];
	ld.const.u64 	%rd2770, [k_sha512+48];
	ld.const.u64 	%rd2769, [k_sha512+40];
	ld.const.u64 	%rd2768, [k_sha512+32];
	ld.const.u64 	%rd2767, [k_sha512+24];
	ld.const.u64 	%rd2766, [k_sha512+16];
	ld.const.u64 	%rd2765, [k_sha512+8];
	ld.const.u64 	%rd2764, [k_sha512];
	or.b32  	%r9490, %r11694, %r11686;
	or.b32  	%r9491, %r11693, %r11687;
	or.b32  	%r9492, %r11692, %r11688;
	or.b32  	%r9493, %r11691, %r11689;
	or.b32  	%r9494, %r11698, %r11685;
	or.b32  	%r9495, %r11697, %r11684;
	or.b32  	%r9496, %r11696, %r11683;
	or.b32  	%r9497, %r11695, %r11682;
	add.s32 	%r9498, %r11690, %r25;
	shr.u32 	%r9499, %r9490, 24;
	shr.u32 	%r9500, %r9490, 8;
	and.b32  	%r9501, %r9500, 65280;
	or.b32  	%r9502, %r9501, %r9499;
	shl.b32 	%r9503, %r9490, 24;
	shl.b32 	%r9504, %r9490, 8;
	and.b32  	%r9505, %r9504, 16711680;
	or.b32  	%r9506, %r9503, %r9505;
	or.b32  	%r9507, %r9506, %r9502;
	shr.u32 	%r9508, %r9491, 24;
	shr.u32 	%r9509, %r9491, 8;
	and.b32  	%r9510, %r9509, 65280;
	or.b32  	%r9511, %r9510, %r9508;
	shl.b32 	%r9512, %r9491, 24;
	shl.b32 	%r9513, %r9491, 8;
	and.b32  	%r9514, %r9513, 16711680;
	or.b32  	%r9515, %r9512, %r9514;
	or.b32  	%r9516, %r9515, %r9511;
	mov.b64	%rd176, {%r9516, %r9507};
	shr.u32 	%r9517, %r9492, 24;
	shr.u32 	%r9518, %r9492, 8;
	and.b32  	%r9519, %r9518, 65280;
	or.b32  	%r9520, %r9519, %r9517;
	shl.b32 	%r9521, %r9492, 24;
	shl.b32 	%r9522, %r9492, 8;
	and.b32  	%r9523, %r9522, 16711680;
	or.b32  	%r9524, %r9521, %r9523;
	or.b32  	%r9525, %r9524, %r9520;
	shr.u32 	%r9526, %r9493, 24;
	shr.u32 	%r9527, %r9493, 8;
	and.b32  	%r9528, %r9527, 65280;
	or.b32  	%r9529, %r9528, %r9526;
	shl.b32 	%r9530, %r9493, 24;
	shl.b32 	%r9531, %r9493, 8;
	and.b32  	%r9532, %r9531, 16711680;
	or.b32  	%r9533, %r9530, %r9532;
	or.b32  	%r9534, %r9533, %r9529;
	mov.b64	%rd177, {%r9534, %r9525};
	shr.u32 	%r9535, %r9494, 24;
	shr.u32 	%r9536, %r9494, 8;
	and.b32  	%r9537, %r9536, 65280;
	or.b32  	%r9538, %r9537, %r9535;
	shl.b32 	%r9539, %r9494, 24;
	shl.b32 	%r9540, %r9494, 8;
	and.b32  	%r9541, %r9540, 16711680;
	or.b32  	%r9542, %r9539, %r9541;
	or.b32  	%r9543, %r9542, %r9538;
	shr.u32 	%r9544, %r9495, 24;
	shr.u32 	%r9545, %r9495, 8;
	and.b32  	%r9546, %r9545, 65280;
	or.b32  	%r9547, %r9546, %r9544;
	shl.b32 	%r9548, %r9495, 24;
	shl.b32 	%r9549, %r9495, 8;
	and.b32  	%r9550, %r9549, 16711680;
	or.b32  	%r9551, %r9548, %r9550;
	or.b32  	%r9552, %r9551, %r9547;
	mov.b64	%rd178, {%r9552, %r9543};
	shr.u32 	%r9553, %r9496, 24;
	shr.u32 	%r9554, %r9496, 8;
	and.b32  	%r9555, %r9554, 65280;
	or.b32  	%r9556, %r9555, %r9553;
	shl.b32 	%r9557, %r9496, 24;
	shl.b32 	%r9558, %r9496, 8;
	and.b32  	%r9559, %r9558, 16711680;
	or.b32  	%r9560, %r9557, %r9559;
	or.b32  	%r9561, %r9560, %r9556;
	shr.u32 	%r9562, %r9497, 24;
	shr.u32 	%r9563, %r9497, 8;
	and.b32  	%r9564, %r9563, 65280;
	or.b32  	%r9565, %r9564, %r9562;
	shl.b32 	%r9566, %r9497, 24;
	shl.b32 	%r9567, %r9497, 8;
	and.b32  	%r9568, %r9567, 16711680;
	or.b32  	%r9569, %r9566, %r9568;
	or.b32  	%r9570, %r9569, %r9565;
	mov.b64	%rd179, {%r9570, %r9561};
	shr.u32 	%r9571, %r11702, 24;
	shr.u32 	%r9572, %r11702, 8;
	and.b32  	%r9573, %r9572, 65280;
	or.b32  	%r9574, %r9573, %r9571;
	shl.b32 	%r9575, %r11702, 24;
	shl.b32 	%r9576, %r11702, 8;
	and.b32  	%r9577, %r9576, 16711680;
	or.b32  	%r9578, %r9575, %r9577;
	or.b32  	%r9579, %r9578, %r9574;
	shr.u32 	%r9580, %r11701, 24;
	shr.u32 	%r9581, %r11701, 8;
	and.b32  	%r9582, %r9581, 65280;
	or.b32  	%r9583, %r9582, %r9580;
	shl.b32 	%r9584, %r11701, 24;
	shl.b32 	%r9585, %r11701, 8;
	and.b32  	%r9586, %r9585, 16711680;
	or.b32  	%r9587, %r9584, %r9586;
	or.b32  	%r9588, %r9587, %r9583;
	mov.b64	%rd180, {%r9588, %r9579};
	shr.u32 	%r9589, %r11700, 24;
	shr.u32 	%r9590, %r11700, 8;
	and.b32  	%r9591, %r9590, 65280;
	or.b32  	%r9592, %r9591, %r9589;
	shl.b32 	%r9593, %r11700, 24;
	shl.b32 	%r9594, %r11700, 8;
	and.b32  	%r9595, %r9594, 16711680;
	or.b32  	%r9596, %r9593, %r9595;
	or.b32  	%r9597, %r9596, %r9592;
	shr.u32 	%r9598, %r11699, 24;
	shr.u32 	%r9599, %r11699, 8;
	and.b32  	%r9600, %r9599, 65280;
	or.b32  	%r9601, %r9600, %r9598;
	shl.b32 	%r9602, %r11699, 24;
	shl.b32 	%r9603, %r11699, 8;
	and.b32  	%r9604, %r9603, 16711680;
	or.b32  	%r9605, %r9602, %r9604;
	or.b32  	%r9606, %r9605, %r9601;
	mov.b64	%rd181, {%r9606, %r9597};
	shr.u32 	%r9607, %r11704, 24;
	shr.u32 	%r9608, %r11704, 8;
	and.b32  	%r9609, %r9608, 65280;
	or.b32  	%r9610, %r9609, %r9607;
	shl.b32 	%r9611, %r11704, 24;
	shl.b32 	%r9612, %r11704, 8;
	and.b32  	%r9613, %r9612, 16711680;
	or.b32  	%r9614, %r9611, %r9613;
	or.b32  	%r9615, %r9614, %r9610;
	shr.u32 	%r9616, %r11703, 24;
	shr.u32 	%r9617, %r11703, 8;
	and.b32  	%r9618, %r9617, 65280;
	or.b32  	%r9619, %r9618, %r9616;
	shl.b32 	%r9620, %r11703, 24;
	shl.b32 	%r9621, %r11703, 8;
	and.b32  	%r9622, %r9621, 16711680;
	or.b32  	%r9623, %r9620, %r9622;
	or.b32  	%r9624, %r9623, %r9619;
	mov.b64	%rd182, {%r9624, %r9615};
	shl.b32 	%r9625, %r9498, 3;
	mov.u32 	%r9626, 0;
	mov.b64	%rd183, {%r9625, %r9626};
	add.s64 	%rd184, %rd176, %rd2764;
	add.s64 	%rd185, %rd184, %rd3;
	add.s64 	%rd186, %rd185, %rd4;
	add.s64 	%rd187, %rd185, 2357225248857953701;
	add.s64 	%rd188, %rd186, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9627,%dummy}, %rd187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9628}, %rd187;
	}
	shf.r.wrap.b32 	%r9629, %r9628, %r9627, 14;
	shf.r.wrap.b32 	%r9630, %r9627, %r9628, 14;
	mov.b64 	%rd189, {%r9630, %r9629};
	shf.r.wrap.b32 	%r9631, %r9628, %r9627, 18;
	shf.r.wrap.b32 	%r9632, %r9627, %r9628, 18;
	mov.b64 	%rd190, {%r9632, %r9631};
	xor.b64  	%rd191, %rd190, %rd189;
	shf.l.wrap.b32 	%r9633, %r9627, %r9628, 23;
	shf.l.wrap.b32 	%r9634, %r9628, %r9627, 23;
	mov.b64 	%rd192, {%r9634, %r9633};
	xor.b64  	%rd193, %rd191, %rd192;
	and.b64  	%rd194, %rd187, -3887949035690463538;
	xor.b64  	%rd195, %rd194, -7276294671716946913;
	add.s64 	%rd196, %rd177, %rd2765;
	add.s64 	%rd197, %rd196, %rd195;
	add.s64 	%rd198, %rd197, %rd193;
	xor.b64  	%rd199, %rd188, -4942790177534073029;
	xor.b64  	%rd200, %rd188, 7640891576956012808;
	and.b64  	%rd201, %rd200, %rd199;
	xor.b64  	%rd202, %rd201, %rd188;
	add.s64 	%rd203, %rd198, %rd202;
	add.s64 	%rd204, %rd198, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9635,%dummy}, %rd188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9636}, %rd188;
	}
	shf.r.wrap.b32 	%r9637, %r9636, %r9635, 28;
	shf.r.wrap.b32 	%r9638, %r9635, %r9636, 28;
	mov.b64 	%rd205, {%r9638, %r9637};
	shf.l.wrap.b32 	%r9639, %r9635, %r9636, 30;
	shf.l.wrap.b32 	%r9640, %r9636, %r9635, 30;
	mov.b64 	%rd206, {%r9640, %r9639};
	xor.b64  	%rd207, %rd206, %rd205;
	shf.l.wrap.b32 	%r9641, %r9635, %r9636, 25;
	shf.l.wrap.b32 	%r9642, %r9636, %r9635, 25;
	mov.b64 	%rd208, {%r9642, %r9641};
	xor.b64  	%rd209, %rd207, %rd208;
	add.s64 	%rd210, %rd203, %rd209;
	add.s64 	%rd211, %rd210, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9643,%dummy}, %rd204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9644}, %rd204;
	}
	shf.r.wrap.b32 	%r9645, %r9644, %r9643, 14;
	shf.r.wrap.b32 	%r9646, %r9643, %r9644, 14;
	mov.b64 	%rd212, {%r9646, %r9645};
	shf.r.wrap.b32 	%r9647, %r9644, %r9643, 18;
	shf.r.wrap.b32 	%r9648, %r9643, %r9644, 18;
	mov.b64 	%rd213, {%r9648, %r9647};
	xor.b64  	%rd214, %rd213, %rd212;
	shf.l.wrap.b32 	%r9649, %r9643, %r9644, 23;
	shf.l.wrap.b32 	%r9650, %r9644, %r9643, 23;
	mov.b64 	%rd215, {%r9650, %r9649};
	xor.b64  	%rd216, %rd214, %rd215;
	xor.b64  	%rd217, %rd187, 5840696475078001361;
	and.b64  	%rd218, %rd204, %rd217;
	xor.b64  	%rd219, %rd218, 5840696475078001361;
	add.s64 	%rd220, %rd178, %rd2766;
	add.s64 	%rd221, %rd220, %rd219;
	add.s64 	%rd222, %rd221, %rd216;
	xor.b64  	%rd223, %rd211, 7640891576956012808;
	xor.b64  	%rd224, %rd211, %rd188;
	and.b64  	%rd225, %rd224, %rd223;
	xor.b64  	%rd226, %rd225, %rd211;
	add.s64 	%rd227, %rd222, %rd226;
	add.s64 	%rd228, %rd222, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9651,%dummy}, %rd211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9652}, %rd211;
	}
	shf.r.wrap.b32 	%r9653, %r9652, %r9651, 28;
	shf.r.wrap.b32 	%r9654, %r9651, %r9652, 28;
	mov.b64 	%rd229, {%r9654, %r9653};
	shf.l.wrap.b32 	%r9655, %r9651, %r9652, 30;
	shf.l.wrap.b32 	%r9656, %r9652, %r9651, 30;
	mov.b64 	%rd230, {%r9656, %r9655};
	xor.b64  	%rd231, %rd230, %rd229;
	shf.l.wrap.b32 	%r9657, %r9651, %r9652, 25;
	shf.l.wrap.b32 	%r9658, %r9652, %r9651, 25;
	mov.b64 	%rd232, {%r9658, %r9657};
	xor.b64  	%rd233, %rd231, %rd232;
	add.s64 	%rd234, %rd227, %rd233;
	add.s64 	%rd235, %rd234, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9659,%dummy}, %rd228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9660}, %rd228;
	}
	shf.r.wrap.b32 	%r9661, %r9660, %r9659, 14;
	shf.r.wrap.b32 	%r9662, %r9659, %r9660, 14;
	mov.b64 	%rd236, {%r9662, %r9661};
	shf.r.wrap.b32 	%r9663, %r9660, %r9659, 18;
	shf.r.wrap.b32 	%r9664, %r9659, %r9660, 18;
	mov.b64 	%rd237, {%r9664, %r9663};
	xor.b64  	%rd238, %rd237, %rd236;
	shf.l.wrap.b32 	%r9665, %r9659, %r9660, 23;
	shf.l.wrap.b32 	%r9666, %r9660, %r9659, 23;
	mov.b64 	%rd239, {%r9666, %r9665};
	xor.b64  	%rd240, %rd238, %rd239;
	xor.b64  	%rd241, %rd204, %rd187;
	and.b64  	%rd242, %rd228, %rd241;
	xor.b64  	%rd243, %rd242, %rd187;
	add.s64 	%rd244, %rd179, %rd2767;
	add.s64 	%rd245, %rd244, %rd243;
	add.s64 	%rd246, %rd245, %rd240;
	xor.b64  	%rd247, %rd235, %rd188;
	xor.b64  	%rd248, %rd235, %rd211;
	and.b64  	%rd249, %rd248, %rd247;
	xor.b64  	%rd250, %rd249, %rd235;
	add.s64 	%rd251, %rd246, %rd250;
	add.s64 	%rd252, %rd246, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9667,%dummy}, %rd235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9668}, %rd235;
	}
	shf.r.wrap.b32 	%r9669, %r9668, %r9667, 28;
	shf.r.wrap.b32 	%r9670, %r9667, %r9668, 28;
	mov.b64 	%rd253, {%r9670, %r9669};
	shf.l.wrap.b32 	%r9671, %r9667, %r9668, 30;
	shf.l.wrap.b32 	%r9672, %r9668, %r9667, 30;
	mov.b64 	%rd254, {%r9672, %r9671};
	xor.b64  	%rd255, %rd254, %rd253;
	shf.l.wrap.b32 	%r9673, %r9667, %r9668, 25;
	shf.l.wrap.b32 	%r9674, %r9668, %r9667, 25;
	mov.b64 	%rd256, {%r9674, %r9673};
	xor.b64  	%rd257, %rd255, %rd256;
	add.s64 	%rd258, %rd251, %rd257;
	add.s64 	%rd259, %rd258, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9675,%dummy}, %rd252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9676}, %rd252;
	}
	shf.r.wrap.b32 	%r9677, %r9676, %r9675, 14;
	shf.r.wrap.b32 	%r9678, %r9675, %r9676, 14;
	mov.b64 	%rd260, {%r9678, %r9677};
	shf.r.wrap.b32 	%r9679, %r9676, %r9675, 18;
	shf.r.wrap.b32 	%r9680, %r9675, %r9676, 18;
	mov.b64 	%rd261, {%r9680, %r9679};
	xor.b64  	%rd262, %rd261, %rd260;
	shf.l.wrap.b32 	%r9681, %r9675, %r9676, 23;
	shf.l.wrap.b32 	%r9682, %r9676, %r9675, 23;
	mov.b64 	%rd263, {%r9682, %r9681};
	xor.b64  	%rd264, %rd262, %rd263;
	xor.b64  	%rd265, %rd228, %rd204;
	and.b64  	%rd266, %rd252, %rd265;
	xor.b64  	%rd267, %rd266, %rd204;
	add.s64 	%rd268, %rd187, %rd180;
	add.s64 	%rd269, %rd268, %rd2768;
	add.s64 	%rd270, %rd269, %rd267;
	add.s64 	%rd271, %rd270, %rd264;
	add.s64 	%rd272, %rd271, %rd188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9683,%dummy}, %rd259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9684}, %rd259;
	}
	shf.r.wrap.b32 	%r9685, %r9684, %r9683, 28;
	shf.r.wrap.b32 	%r9686, %r9683, %r9684, 28;
	mov.b64 	%rd273, {%r9686, %r9685};
	shf.l.wrap.b32 	%r9687, %r9683, %r9684, 30;
	shf.l.wrap.b32 	%r9688, %r9684, %r9683, 30;
	mov.b64 	%rd274, {%r9688, %r9687};
	xor.b64  	%rd275, %rd274, %rd273;
	shf.l.wrap.b32 	%r9689, %r9683, %r9684, 25;
	shf.l.wrap.b32 	%r9690, %r9684, %r9683, 25;
	mov.b64 	%rd276, {%r9690, %r9689};
	xor.b64  	%rd277, %rd275, %rd276;
	xor.b64  	%rd278, %rd259, %rd211;
	xor.b64  	%rd279, %rd259, %rd235;
	and.b64  	%rd280, %rd279, %rd278;
	xor.b64  	%rd281, %rd280, %rd259;
	add.s64 	%rd282, %rd271, %rd281;
	add.s64 	%rd283, %rd282, %rd277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9691,%dummy}, %rd272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9692}, %rd272;
	}
	shf.r.wrap.b32 	%r9693, %r9692, %r9691, 14;
	shf.r.wrap.b32 	%r9694, %r9691, %r9692, 14;
	mov.b64 	%rd284, {%r9694, %r9693};
	shf.r.wrap.b32 	%r9695, %r9692, %r9691, 18;
	shf.r.wrap.b32 	%r9696, %r9691, %r9692, 18;
	mov.b64 	%rd285, {%r9696, %r9695};
	xor.b64  	%rd286, %rd285, %rd284;
	shf.l.wrap.b32 	%r9697, %r9691, %r9692, 23;
	shf.l.wrap.b32 	%r9698, %r9692, %r9691, 23;
	mov.b64 	%rd287, {%r9698, %r9697};
	xor.b64  	%rd288, %rd286, %rd287;
	xor.b64  	%rd289, %rd252, %rd228;
	and.b64  	%rd290, %rd272, %rd289;
	xor.b64  	%rd291, %rd290, %rd228;
	add.s64 	%rd292, %rd204, %rd181;
	add.s64 	%rd293, %rd292, %rd2769;
	add.s64 	%rd294, %rd293, %rd291;
	add.s64 	%rd295, %rd294, %rd288;
	add.s64 	%rd296, %rd295, %rd211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9699,%dummy}, %rd283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9700}, %rd283;
	}
	shf.r.wrap.b32 	%r9701, %r9700, %r9699, 28;
	shf.r.wrap.b32 	%r9702, %r9699, %r9700, 28;
	mov.b64 	%rd297, {%r9702, %r9701};
	shf.l.wrap.b32 	%r9703, %r9699, %r9700, 30;
	shf.l.wrap.b32 	%r9704, %r9700, %r9699, 30;
	mov.b64 	%rd298, {%r9704, %r9703};
	xor.b64  	%rd299, %rd298, %rd297;
	shf.l.wrap.b32 	%r9705, %r9699, %r9700, 25;
	shf.l.wrap.b32 	%r9706, %r9700, %r9699, 25;
	mov.b64 	%rd300, {%r9706, %r9705};
	xor.b64  	%rd301, %rd299, %rd300;
	xor.b64  	%rd302, %rd283, %rd235;
	xor.b64  	%rd303, %rd283, %rd259;
	and.b64  	%rd304, %rd303, %rd302;
	xor.b64  	%rd305, %rd304, %rd283;
	add.s64 	%rd306, %rd295, %rd305;
	add.s64 	%rd307, %rd306, %rd301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9707,%dummy}, %rd296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9708}, %rd296;
	}
	shf.r.wrap.b32 	%r9709, %r9708, %r9707, 14;
	shf.r.wrap.b32 	%r9710, %r9707, %r9708, 14;
	mov.b64 	%rd308, {%r9710, %r9709};
	shf.r.wrap.b32 	%r9711, %r9708, %r9707, 18;
	shf.r.wrap.b32 	%r9712, %r9707, %r9708, 18;
	mov.b64 	%rd309, {%r9712, %r9711};
	xor.b64  	%rd310, %rd309, %rd308;
	shf.l.wrap.b32 	%r9713, %r9707, %r9708, 23;
	shf.l.wrap.b32 	%r9714, %r9708, %r9707, 23;
	mov.b64 	%rd311, {%r9714, %r9713};
	xor.b64  	%rd312, %rd310, %rd311;
	xor.b64  	%rd313, %rd272, %rd252;
	and.b64  	%rd314, %rd296, %rd313;
	xor.b64  	%rd315, %rd314, %rd252;
	add.s64 	%rd316, %rd228, %rd182;
	add.s64 	%rd317, %rd316, %rd2770;
	add.s64 	%rd318, %rd317, %rd315;
	add.s64 	%rd319, %rd318, %rd312;
	add.s64 	%rd320, %rd319, %rd235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9715,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9716}, %rd307;
	}
	shf.r.wrap.b32 	%r9717, %r9716, %r9715, 28;
	shf.r.wrap.b32 	%r9718, %r9715, %r9716, 28;
	mov.b64 	%rd321, {%r9718, %r9717};
	shf.l.wrap.b32 	%r9719, %r9715, %r9716, 30;
	shf.l.wrap.b32 	%r9720, %r9716, %r9715, 30;
	mov.b64 	%rd322, {%r9720, %r9719};
	xor.b64  	%rd323, %rd322, %rd321;
	shf.l.wrap.b32 	%r9721, %r9715, %r9716, 25;
	shf.l.wrap.b32 	%r9722, %r9716, %r9715, 25;
	mov.b64 	%rd324, {%r9722, %r9721};
	xor.b64  	%rd325, %rd323, %rd324;
	xor.b64  	%rd326, %rd307, %rd259;
	xor.b64  	%rd327, %rd307, %rd283;
	and.b64  	%rd328, %rd327, %rd326;
	xor.b64  	%rd329, %rd328, %rd307;
	add.s64 	%rd330, %rd319, %rd329;
	add.s64 	%rd331, %rd330, %rd325;
	add.s64 	%rd332, %rd2771, %rd252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9723,%dummy}, %rd320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9724}, %rd320;
	}
	shf.r.wrap.b32 	%r9725, %r9724, %r9723, 14;
	shf.r.wrap.b32 	%r9726, %r9723, %r9724, 14;
	mov.b64 	%rd333, {%r9726, %r9725};
	shf.r.wrap.b32 	%r9727, %r9724, %r9723, 18;
	shf.r.wrap.b32 	%r9728, %r9723, %r9724, 18;
	mov.b64 	%rd334, {%r9728, %r9727};
	xor.b64  	%rd335, %rd334, %rd333;
	shf.l.wrap.b32 	%r9729, %r9723, %r9724, 23;
	shf.l.wrap.b32 	%r9730, %r9724, %r9723, 23;
	mov.b64 	%rd336, {%r9730, %r9729};
	xor.b64  	%rd337, %rd335, %rd336;
	xor.b64  	%rd338, %rd296, %rd272;
	and.b64  	%rd339, %rd320, %rd338;
	xor.b64  	%rd340, %rd339, %rd272;
	add.s64 	%rd341, %rd332, %rd340;
	add.s64 	%rd342, %rd341, %rd337;
	add.s64 	%rd343, %rd342, %rd259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9731,%dummy}, %rd331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9732}, %rd331;
	}
	shf.r.wrap.b32 	%r9733, %r9732, %r9731, 28;
	shf.r.wrap.b32 	%r9734, %r9731, %r9732, 28;
	mov.b64 	%rd344, {%r9734, %r9733};
	shf.l.wrap.b32 	%r9735, %r9731, %r9732, 30;
	shf.l.wrap.b32 	%r9736, %r9732, %r9731, 30;
	mov.b64 	%rd345, {%r9736, %r9735};
	xor.b64  	%rd346, %rd345, %rd344;
	shf.l.wrap.b32 	%r9737, %r9731, %r9732, 25;
	shf.l.wrap.b32 	%r9738, %r9732, %r9731, 25;
	mov.b64 	%rd347, {%r9738, %r9737};
	xor.b64  	%rd348, %rd346, %rd347;
	xor.b64  	%rd349, %rd331, %rd283;
	xor.b64  	%rd350, %rd331, %rd307;
	and.b64  	%rd351, %rd350, %rd349;
	xor.b64  	%rd352, %rd351, %rd331;
	add.s64 	%rd353, %rd342, %rd352;
	add.s64 	%rd354, %rd353, %rd348;
	add.s64 	%rd355, %rd2772, %rd272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9739,%dummy}, %rd343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9740}, %rd343;
	}
	shf.r.wrap.b32 	%r9741, %r9740, %r9739, 14;
	shf.r.wrap.b32 	%r9742, %r9739, %r9740, 14;
	mov.b64 	%rd356, {%r9742, %r9741};
	shf.r.wrap.b32 	%r9743, %r9740, %r9739, 18;
	shf.r.wrap.b32 	%r9744, %r9739, %r9740, 18;
	mov.b64 	%rd357, {%r9744, %r9743};
	xor.b64  	%rd358, %rd357, %rd356;
	shf.l.wrap.b32 	%r9745, %r9739, %r9740, 23;
	shf.l.wrap.b32 	%r9746, %r9740, %r9739, 23;
	mov.b64 	%rd359, {%r9746, %r9745};
	xor.b64  	%rd360, %rd358, %rd359;
	xor.b64  	%rd361, %rd320, %rd296;
	and.b64  	%rd362, %rd343, %rd361;
	xor.b64  	%rd363, %rd362, %rd296;
	add.s64 	%rd364, %rd355, %rd363;
	add.s64 	%rd365, %rd364, %rd360;
	add.s64 	%rd366, %rd365, %rd283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9747,%dummy}, %rd354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9748}, %rd354;
	}
	shf.r.wrap.b32 	%r9749, %r9748, %r9747, 28;
	shf.r.wrap.b32 	%r9750, %r9747, %r9748, 28;
	mov.b64 	%rd367, {%r9750, %r9749};
	shf.l.wrap.b32 	%r9751, %r9747, %r9748, 30;
	shf.l.wrap.b32 	%r9752, %r9748, %r9747, 30;
	mov.b64 	%rd368, {%r9752, %r9751};
	xor.b64  	%rd369, %rd368, %rd367;
	shf.l.wrap.b32 	%r9753, %r9747, %r9748, 25;
	shf.l.wrap.b32 	%r9754, %r9748, %r9747, 25;
	mov.b64 	%rd370, {%r9754, %r9753};
	xor.b64  	%rd371, %rd369, %rd370;
	xor.b64  	%rd372, %rd354, %rd307;
	xor.b64  	%rd373, %rd354, %rd331;
	and.b64  	%rd374, %rd373, %rd372;
	xor.b64  	%rd375, %rd374, %rd354;
	add.s64 	%rd376, %rd365, %rd375;
	add.s64 	%rd377, %rd376, %rd371;
	add.s64 	%rd378, %rd2773, %rd296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9755,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9756}, %rd366;
	}
	shf.r.wrap.b32 	%r9757, %r9756, %r9755, 14;
	shf.r.wrap.b32 	%r9758, %r9755, %r9756, 14;
	mov.b64 	%rd379, {%r9758, %r9757};
	shf.r.wrap.b32 	%r9759, %r9756, %r9755, 18;
	shf.r.wrap.b32 	%r9760, %r9755, %r9756, 18;
	mov.b64 	%rd380, {%r9760, %r9759};
	xor.b64  	%rd381, %rd380, %rd379;
	shf.l.wrap.b32 	%r9761, %r9755, %r9756, 23;
	shf.l.wrap.b32 	%r9762, %r9756, %r9755, 23;
	mov.b64 	%rd382, {%r9762, %r9761};
	xor.b64  	%rd383, %rd381, %rd382;
	xor.b64  	%rd384, %rd343, %rd320;
	and.b64  	%rd385, %rd366, %rd384;
	xor.b64  	%rd386, %rd385, %rd320;
	add.s64 	%rd387, %rd378, %rd386;
	add.s64 	%rd388, %rd387, %rd383;
	add.s64 	%rd389, %rd388, %rd307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9763,%dummy}, %rd377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9764}, %rd377;
	}
	shf.r.wrap.b32 	%r9765, %r9764, %r9763, 28;
	shf.r.wrap.b32 	%r9766, %r9763, %r9764, 28;
	mov.b64 	%rd390, {%r9766, %r9765};
	shf.l.wrap.b32 	%r9767, %r9763, %r9764, 30;
	shf.l.wrap.b32 	%r9768, %r9764, %r9763, 30;
	mov.b64 	%rd391, {%r9768, %r9767};
	xor.b64  	%rd392, %rd391, %rd390;
	shf.l.wrap.b32 	%r9769, %r9763, %r9764, 25;
	shf.l.wrap.b32 	%r9770, %r9764, %r9763, 25;
	mov.b64 	%rd393, {%r9770, %r9769};
	xor.b64  	%rd394, %rd392, %rd393;
	xor.b64  	%rd395, %rd377, %rd331;
	xor.b64  	%rd396, %rd377, %rd354;
	and.b64  	%rd397, %rd396, %rd395;
	xor.b64  	%rd398, %rd397, %rd377;
	add.s64 	%rd399, %rd388, %rd398;
	add.s64 	%rd400, %rd399, %rd394;
	add.s64 	%rd401, %rd2774, %rd320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9771,%dummy}, %rd389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9772}, %rd389;
	}
	shf.r.wrap.b32 	%r9773, %r9772, %r9771, 14;
	shf.r.wrap.b32 	%r9774, %r9771, %r9772, 14;
	mov.b64 	%rd402, {%r9774, %r9773};
	shf.r.wrap.b32 	%r9775, %r9772, %r9771, 18;
	shf.r.wrap.b32 	%r9776, %r9771, %r9772, 18;
	mov.b64 	%rd403, {%r9776, %r9775};
	xor.b64  	%rd404, %rd403, %rd402;
	shf.l.wrap.b32 	%r9777, %r9771, %r9772, 23;
	shf.l.wrap.b32 	%r9778, %r9772, %r9771, 23;
	mov.b64 	%rd405, {%r9778, %r9777};
	xor.b64  	%rd406, %rd404, %rd405;
	xor.b64  	%rd407, %rd366, %rd343;
	and.b64  	%rd408, %rd389, %rd407;
	xor.b64  	%rd409, %rd408, %rd343;
	add.s64 	%rd410, %rd401, %rd409;
	add.s64 	%rd411, %rd410, %rd406;
	add.s64 	%rd412, %rd411, %rd331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9779,%dummy}, %rd400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9780}, %rd400;
	}
	shf.r.wrap.b32 	%r9781, %r9780, %r9779, 28;
	shf.r.wrap.b32 	%r9782, %r9779, %r9780, 28;
	mov.b64 	%rd413, {%r9782, %r9781};
	shf.l.wrap.b32 	%r9783, %r9779, %r9780, 30;
	shf.l.wrap.b32 	%r9784, %r9780, %r9779, 30;
	mov.b64 	%rd414, {%r9784, %r9783};
	xor.b64  	%rd415, %rd414, %rd413;
	shf.l.wrap.b32 	%r9785, %r9779, %r9780, 25;
	shf.l.wrap.b32 	%r9786, %r9780, %r9779, 25;
	mov.b64 	%rd416, {%r9786, %r9785};
	xor.b64  	%rd417, %rd415, %rd416;
	xor.b64  	%rd418, %rd400, %rd354;
	xor.b64  	%rd419, %rd400, %rd377;
	and.b64  	%rd420, %rd419, %rd418;
	xor.b64  	%rd421, %rd420, %rd400;
	add.s64 	%rd422, %rd411, %rd421;
	add.s64 	%rd423, %rd422, %rd417;
	add.s64 	%rd424, %rd2775, %rd343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9787,%dummy}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9788}, %rd412;
	}
	shf.r.wrap.b32 	%r9789, %r9788, %r9787, 14;
	shf.r.wrap.b32 	%r9790, %r9787, %r9788, 14;
	mov.b64 	%rd425, {%r9790, %r9789};
	shf.r.wrap.b32 	%r9791, %r9788, %r9787, 18;
	shf.r.wrap.b32 	%r9792, %r9787, %r9788, 18;
	mov.b64 	%rd426, {%r9792, %r9791};
	xor.b64  	%rd427, %rd426, %rd425;
	shf.l.wrap.b32 	%r9793, %r9787, %r9788, 23;
	shf.l.wrap.b32 	%r9794, %r9788, %r9787, 23;
	mov.b64 	%rd428, {%r9794, %r9793};
	xor.b64  	%rd429, %rd427, %rd428;
	xor.b64  	%rd430, %rd389, %rd366;
	and.b64  	%rd431, %rd412, %rd430;
	xor.b64  	%rd432, %rd431, %rd366;
	add.s64 	%rd433, %rd424, %rd432;
	add.s64 	%rd434, %rd433, %rd429;
	add.s64 	%rd435, %rd434, %rd354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9795,%dummy}, %rd423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9796}, %rd423;
	}
	shf.r.wrap.b32 	%r9797, %r9796, %r9795, 28;
	shf.r.wrap.b32 	%r9798, %r9795, %r9796, 28;
	mov.b64 	%rd436, {%r9798, %r9797};
	shf.l.wrap.b32 	%r9799, %r9795, %r9796, 30;
	shf.l.wrap.b32 	%r9800, %r9796, %r9795, 30;
	mov.b64 	%rd437, {%r9800, %r9799};
	xor.b64  	%rd438, %rd437, %rd436;
	shf.l.wrap.b32 	%r9801, %r9795, %r9796, 25;
	shf.l.wrap.b32 	%r9802, %r9796, %r9795, 25;
	mov.b64 	%rd439, {%r9802, %r9801};
	xor.b64  	%rd440, %rd438, %rd439;
	xor.b64  	%rd441, %rd423, %rd377;
	xor.b64  	%rd442, %rd423, %rd400;
	and.b64  	%rd443, %rd442, %rd441;
	xor.b64  	%rd444, %rd443, %rd423;
	add.s64 	%rd445, %rd434, %rd444;
	add.s64 	%rd446, %rd445, %rd440;
	add.s64 	%rd447, %rd2776, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9803,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9804}, %rd435;
	}
	shf.r.wrap.b32 	%r9805, %r9804, %r9803, 14;
	shf.r.wrap.b32 	%r9806, %r9803, %r9804, 14;
	mov.b64 	%rd448, {%r9806, %r9805};
	shf.r.wrap.b32 	%r9807, %r9804, %r9803, 18;
	shf.r.wrap.b32 	%r9808, %r9803, %r9804, 18;
	mov.b64 	%rd449, {%r9808, %r9807};
	xor.b64  	%rd450, %rd449, %rd448;
	shf.l.wrap.b32 	%r9809, %r9803, %r9804, 23;
	shf.l.wrap.b32 	%r9810, %r9804, %r9803, 23;
	mov.b64 	%rd451, {%r9810, %r9809};
	xor.b64  	%rd452, %rd450, %rd451;
	xor.b64  	%rd453, %rd412, %rd389;
	and.b64  	%rd454, %rd435, %rd453;
	xor.b64  	%rd455, %rd454, %rd389;
	add.s64 	%rd456, %rd447, %rd455;
	add.s64 	%rd457, %rd456, %rd452;
	add.s64 	%rd458, %rd457, %rd377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9811,%dummy}, %rd446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9812}, %rd446;
	}
	shf.r.wrap.b32 	%r9813, %r9812, %r9811, 28;
	shf.r.wrap.b32 	%r9814, %r9811, %r9812, 28;
	mov.b64 	%rd459, {%r9814, %r9813};
	shf.l.wrap.b32 	%r9815, %r9811, %r9812, 30;
	shf.l.wrap.b32 	%r9816, %r9812, %r9811, 30;
	mov.b64 	%rd460, {%r9816, %r9815};
	xor.b64  	%rd461, %rd460, %rd459;
	shf.l.wrap.b32 	%r9817, %r9811, %r9812, 25;
	shf.l.wrap.b32 	%r9818, %r9812, %r9811, 25;
	mov.b64 	%rd462, {%r9818, %r9817};
	xor.b64  	%rd463, %rd461, %rd462;
	xor.b64  	%rd464, %rd446, %rd400;
	xor.b64  	%rd465, %rd446, %rd423;
	and.b64  	%rd466, %rd465, %rd464;
	xor.b64  	%rd467, %rd466, %rd446;
	add.s64 	%rd468, %rd457, %rd467;
	add.s64 	%rd469, %rd468, %rd463;
	add.s64 	%rd470, %rd2777, %rd389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9819,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9820}, %rd458;
	}
	shf.r.wrap.b32 	%r9821, %r9820, %r9819, 14;
	shf.r.wrap.b32 	%r9822, %r9819, %r9820, 14;
	mov.b64 	%rd471, {%r9822, %r9821};
	shf.r.wrap.b32 	%r9823, %r9820, %r9819, 18;
	shf.r.wrap.b32 	%r9824, %r9819, %r9820, 18;
	mov.b64 	%rd472, {%r9824, %r9823};
	xor.b64  	%rd473, %rd472, %rd471;
	shf.l.wrap.b32 	%r9825, %r9819, %r9820, 23;
	shf.l.wrap.b32 	%r9826, %r9820, %r9819, 23;
	mov.b64 	%rd474, {%r9826, %r9825};
	xor.b64  	%rd475, %rd473, %rd474;
	xor.b64  	%rd476, %rd435, %rd412;
	and.b64  	%rd477, %rd458, %rd476;
	xor.b64  	%rd478, %rd477, %rd412;
	add.s64 	%rd479, %rd470, %rd478;
	add.s64 	%rd480, %rd479, %rd475;
	add.s64 	%rd481, %rd480, %rd400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9827,%dummy}, %rd469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9828}, %rd469;
	}
	shf.r.wrap.b32 	%r9829, %r9828, %r9827, 28;
	shf.r.wrap.b32 	%r9830, %r9827, %r9828, 28;
	mov.b64 	%rd482, {%r9830, %r9829};
	shf.l.wrap.b32 	%r9831, %r9827, %r9828, 30;
	shf.l.wrap.b32 	%r9832, %r9828, %r9827, 30;
	mov.b64 	%rd483, {%r9832, %r9831};
	xor.b64  	%rd484, %rd483, %rd482;
	shf.l.wrap.b32 	%r9833, %r9827, %r9828, 25;
	shf.l.wrap.b32 	%r9834, %r9828, %r9827, 25;
	mov.b64 	%rd485, {%r9834, %r9833};
	xor.b64  	%rd486, %rd484, %rd485;
	xor.b64  	%rd487, %rd469, %rd423;
	xor.b64  	%rd488, %rd469, %rd446;
	and.b64  	%rd489, %rd488, %rd487;
	xor.b64  	%rd490, %rd489, %rd469;
	add.s64 	%rd491, %rd480, %rd490;
	add.s64 	%rd492, %rd491, %rd486;
	add.s64 	%rd493, %rd2778, %rd412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9835,%dummy}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9836}, %rd481;
	}
	shf.r.wrap.b32 	%r9837, %r9836, %r9835, 14;
	shf.r.wrap.b32 	%r9838, %r9835, %r9836, 14;
	mov.b64 	%rd494, {%r9838, %r9837};
	shf.r.wrap.b32 	%r9839, %r9836, %r9835, 18;
	shf.r.wrap.b32 	%r9840, %r9835, %r9836, 18;
	mov.b64 	%rd495, {%r9840, %r9839};
	xor.b64  	%rd496, %rd495, %rd494;
	shf.l.wrap.b32 	%r9841, %r9835, %r9836, 23;
	shf.l.wrap.b32 	%r9842, %r9836, %r9835, 23;
	mov.b64 	%rd497, {%r9842, %r9841};
	xor.b64  	%rd498, %rd496, %rd497;
	xor.b64  	%rd499, %rd458, %rd435;
	and.b64  	%rd500, %rd481, %rd499;
	xor.b64  	%rd501, %rd500, %rd435;
	add.s64 	%rd502, %rd493, %rd501;
	add.s64 	%rd503, %rd502, %rd498;
	add.s64 	%rd504, %rd503, %rd423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9843,%dummy}, %rd492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9844}, %rd492;
	}
	shf.r.wrap.b32 	%r9845, %r9844, %r9843, 28;
	shf.r.wrap.b32 	%r9846, %r9843, %r9844, 28;
	mov.b64 	%rd505, {%r9846, %r9845};
	shf.l.wrap.b32 	%r9847, %r9843, %r9844, 30;
	shf.l.wrap.b32 	%r9848, %r9844, %r9843, 30;
	mov.b64 	%rd506, {%r9848, %r9847};
	xor.b64  	%rd507, %rd506, %rd505;
	shf.l.wrap.b32 	%r9849, %r9843, %r9844, 25;
	shf.l.wrap.b32 	%r9850, %r9844, %r9843, 25;
	mov.b64 	%rd508, {%r9850, %r9849};
	xor.b64  	%rd509, %rd507, %rd508;
	xor.b64  	%rd510, %rd492, %rd446;
	xor.b64  	%rd511, %rd492, %rd469;
	and.b64  	%rd512, %rd511, %rd510;
	xor.b64  	%rd513, %rd512, %rd492;
	add.s64 	%rd514, %rd503, %rd513;
	add.s64 	%rd515, %rd514, %rd509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9851,%dummy}, %rd504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9852}, %rd504;
	}
	shf.r.wrap.b32 	%r9853, %r9852, %r9851, 14;
	shf.r.wrap.b32 	%r9854, %r9851, %r9852, 14;
	mov.b64 	%rd516, {%r9854, %r9853};
	shf.r.wrap.b32 	%r9855, %r9852, %r9851, 18;
	shf.r.wrap.b32 	%r9856, %r9851, %r9852, 18;
	mov.b64 	%rd517, {%r9856, %r9855};
	xor.b64  	%rd518, %rd517, %rd516;
	shf.l.wrap.b32 	%r9857, %r9851, %r9852, 23;
	shf.l.wrap.b32 	%r9858, %r9852, %r9851, 23;
	mov.b64 	%rd519, {%r9858, %r9857};
	xor.b64  	%rd520, %rd518, %rd519;
	xor.b64  	%rd521, %rd481, %rd458;
	and.b64  	%rd522, %rd504, %rd521;
	xor.b64  	%rd523, %rd522, %rd458;
	add.s64 	%rd524, %rd435, %rd183;
	add.s64 	%rd525, %rd524, %rd2779;
	add.s64 	%rd526, %rd525, %rd523;
	add.s64 	%rd527, %rd526, %rd520;
	add.s64 	%rd528, %rd527, %rd446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9859,%dummy}, %rd515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9860}, %rd515;
	}
	shf.r.wrap.b32 	%r9861, %r9860, %r9859, 28;
	shf.r.wrap.b32 	%r9862, %r9859, %r9860, 28;
	mov.b64 	%rd529, {%r9862, %r9861};
	shf.l.wrap.b32 	%r9863, %r9859, %r9860, 30;
	shf.l.wrap.b32 	%r9864, %r9860, %r9859, 30;
	mov.b64 	%rd530, {%r9864, %r9863};
	xor.b64  	%rd531, %rd530, %rd529;
	shf.l.wrap.b32 	%r9865, %r9859, %r9860, 25;
	shf.l.wrap.b32 	%r9866, %r9860, %r9859, 25;
	mov.b64 	%rd532, {%r9866, %r9865};
	xor.b64  	%rd533, %rd531, %rd532;
	xor.b64  	%rd534, %rd515, %rd469;
	xor.b64  	%rd535, %rd515, %rd492;
	and.b64  	%rd536, %rd535, %rd534;
	xor.b64  	%rd537, %rd536, %rd515;
	add.s64 	%rd538, %rd527, %rd537;
	add.s64 	%rd539, %rd538, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9867,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9868}, %rd177;
	}
	shf.r.wrap.b32 	%r9869, %r9868, %r9867, 1;
	shf.r.wrap.b32 	%r9870, %r9867, %r9868, 1;
	mov.b64 	%rd540, {%r9870, %r9869};
	shf.r.wrap.b32 	%r9871, %r9868, %r9867, 8;
	shf.r.wrap.b32 	%r9872, %r9867, %r9868, 8;
	mov.b64 	%rd541, {%r9872, %r9871};
	shr.u64 	%rd542, %rd177, 7;
	xor.b64  	%rd543, %rd540, %rd542;
	xor.b64  	%rd544, %rd543, %rd541;
	add.s64 	%rd545, %rd176, %rd20;
	add.s64 	%rd546, %rd545, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9873,%dummy}, %rd183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9874}, %rd183;
	}
	shf.r.wrap.b32 	%r9875, %r9874, %r9873, 19;
	shf.r.wrap.b32 	%r9876, %r9873, %r9874, 19;
	mov.b64 	%rd547, {%r9876, %r9875};
	shf.l.wrap.b32 	%r9877, %r9873, %r9874, 3;
	shf.l.wrap.b32 	%r9878, %r9874, %r9873, 3;
	mov.b64 	%rd548, {%r9878, %r9877};
	shr.u64 	%rd549, %rd183, 6;
	xor.b64  	%rd550, %rd547, %rd549;
	xor.b64  	%rd551, %rd550, %rd548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9879,%dummy}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9880}, %rd178;
	}
	shf.r.wrap.b32 	%r9881, %r9880, %r9879, 1;
	shf.r.wrap.b32 	%r9882, %r9879, %r9880, 1;
	mov.b64 	%rd552, {%r9882, %r9881};
	shf.r.wrap.b32 	%r9883, %r9880, %r9879, 8;
	shf.r.wrap.b32 	%r9884, %r9879, %r9880, 8;
	mov.b64 	%rd553, {%r9884, %r9883};
	shr.u64 	%rd554, %rd178, 7;
	xor.b64  	%rd555, %rd552, %rd554;
	xor.b64  	%rd556, %rd555, %rd553;
	add.s64 	%rd557, %rd177, %rd551;
	add.s64 	%rd558, %rd557, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9885,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9886}, %rd546;
	}
	shf.r.wrap.b32 	%r9887, %r9886, %r9885, 19;
	shf.r.wrap.b32 	%r9888, %r9885, %r9886, 19;
	mov.b64 	%rd559, {%r9888, %r9887};
	shf.l.wrap.b32 	%r9889, %r9885, %r9886, 3;
	shf.l.wrap.b32 	%r9890, %r9886, %r9885, 3;
	mov.b64 	%rd560, {%r9890, %r9889};
	shr.u64 	%rd561, %rd546, 6;
	xor.b64  	%rd562, %rd559, %rd561;
	xor.b64  	%rd563, %rd562, %rd560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9891,%dummy}, %rd179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9892}, %rd179;
	}
	shf.r.wrap.b32 	%r9893, %r9892, %r9891, 1;
	shf.r.wrap.b32 	%r9894, %r9891, %r9892, 1;
	mov.b64 	%rd564, {%r9894, %r9893};
	shf.r.wrap.b32 	%r9895, %r9892, %r9891, 8;
	shf.r.wrap.b32 	%r9896, %r9891, %r9892, 8;
	mov.b64 	%rd565, {%r9896, %r9895};
	shr.u64 	%rd566, %rd179, 7;
	xor.b64  	%rd567, %rd564, %rd566;
	xor.b64  	%rd568, %rd567, %rd565;
	add.s64 	%rd569, %rd178, %rd563;
	add.s64 	%rd570, %rd569, %rd568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9897,%dummy}, %rd558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9898}, %rd558;
	}
	shf.r.wrap.b32 	%r9899, %r9898, %r9897, 19;
	shf.r.wrap.b32 	%r9900, %r9897, %r9898, 19;
	mov.b64 	%rd571, {%r9900, %r9899};
	shf.l.wrap.b32 	%r9901, %r9897, %r9898, 3;
	shf.l.wrap.b32 	%r9902, %r9898, %r9897, 3;
	mov.b64 	%rd572, {%r9902, %r9901};
	shr.u64 	%rd573, %rd558, 6;
	xor.b64  	%rd574, %rd571, %rd573;
	xor.b64  	%rd575, %rd574, %rd572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9903,%dummy}, %rd180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9904}, %rd180;
	}
	shf.r.wrap.b32 	%r9905, %r9904, %r9903, 1;
	shf.r.wrap.b32 	%r9906, %r9903, %r9904, 1;
	mov.b64 	%rd576, {%r9906, %r9905};
	shf.r.wrap.b32 	%r9907, %r9904, %r9903, 8;
	shf.r.wrap.b32 	%r9908, %r9903, %r9904, 8;
	mov.b64 	%rd577, {%r9908, %r9907};
	shr.u64 	%rd578, %rd180, 7;
	xor.b64  	%rd579, %rd576, %rd578;
	xor.b64  	%rd580, %rd579, %rd577;
	add.s64 	%rd581, %rd179, %rd575;
	add.s64 	%rd582, %rd581, %rd580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9909,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9910}, %rd570;
	}
	shf.r.wrap.b32 	%r9911, %r9910, %r9909, 19;
	shf.r.wrap.b32 	%r9912, %r9909, %r9910, 19;
	mov.b64 	%rd583, {%r9912, %r9911};
	shf.l.wrap.b32 	%r9913, %r9909, %r9910, 3;
	shf.l.wrap.b32 	%r9914, %r9910, %r9909, 3;
	mov.b64 	%rd584, {%r9914, %r9913};
	shr.u64 	%rd585, %rd570, 6;
	xor.b64  	%rd586, %rd583, %rd585;
	xor.b64  	%rd587, %rd586, %rd584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9915,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9916}, %rd181;
	}
	shf.r.wrap.b32 	%r9917, %r9916, %r9915, 1;
	shf.r.wrap.b32 	%r9918, %r9915, %r9916, 1;
	mov.b64 	%rd588, {%r9918, %r9917};
	shf.r.wrap.b32 	%r9919, %r9916, %r9915, 8;
	shf.r.wrap.b32 	%r9920, %r9915, %r9916, 8;
	mov.b64 	%rd589, {%r9920, %r9919};
	shr.u64 	%rd590, %rd181, 7;
	xor.b64  	%rd591, %rd588, %rd590;
	xor.b64  	%rd592, %rd591, %rd589;
	add.s64 	%rd593, %rd180, %rd587;
	add.s64 	%rd594, %rd593, %rd592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9921,%dummy}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9922}, %rd582;
	}
	shf.r.wrap.b32 	%r9923, %r9922, %r9921, 19;
	shf.r.wrap.b32 	%r9924, %r9921, %r9922, 19;
	mov.b64 	%rd595, {%r9924, %r9923};
	shf.l.wrap.b32 	%r9925, %r9921, %r9922, 3;
	shf.l.wrap.b32 	%r9926, %r9922, %r9921, 3;
	mov.b64 	%rd596, {%r9926, %r9925};
	shr.u64 	%rd597, %rd582, 6;
	xor.b64  	%rd598, %rd595, %rd597;
	xor.b64  	%rd599, %rd598, %rd596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9927,%dummy}, %rd182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9928}, %rd182;
	}
	shf.r.wrap.b32 	%r9929, %r9928, %r9927, 1;
	shf.r.wrap.b32 	%r9930, %r9927, %r9928, 1;
	mov.b64 	%rd600, {%r9930, %r9929};
	shf.r.wrap.b32 	%r9931, %r9928, %r9927, 8;
	shf.r.wrap.b32 	%r9932, %r9927, %r9928, 8;
	mov.b64 	%rd601, {%r9932, %r9931};
	shr.u64 	%rd602, %rd182, 7;
	xor.b64  	%rd603, %rd600, %rd602;
	xor.b64  	%rd604, %rd603, %rd601;
	add.s64 	%rd605, %rd181, %rd599;
	add.s64 	%rd606, %rd605, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9933,%dummy}, %rd594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9934}, %rd594;
	}
	shf.r.wrap.b32 	%r9935, %r9934, %r9933, 19;
	shf.r.wrap.b32 	%r9936, %r9933, %r9934, 19;
	mov.b64 	%rd607, {%r9936, %r9935};
	shf.l.wrap.b32 	%r9937, %r9933, %r9934, 3;
	shf.l.wrap.b32 	%r9938, %r9934, %r9933, 3;
	mov.b64 	%rd608, {%r9938, %r9937};
	shr.u64 	%rd609, %rd594, 6;
	xor.b64  	%rd610, %rd607, %rd609;
	xor.b64  	%rd611, %rd610, %rd608;
	add.s64 	%rd612, %rd182, %rd183;
	add.s64 	%rd613, %rd612, %rd611;
	add.s64 	%rd614, %rd613, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9939,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9940}, %rd606;
	}
	shf.r.wrap.b32 	%r9941, %r9940, %r9939, 19;
	shf.r.wrap.b32 	%r9942, %r9939, %r9940, 19;
	mov.b64 	%rd615, {%r9942, %r9941};
	shf.l.wrap.b32 	%r9943, %r9939, %r9940, 3;
	shf.l.wrap.b32 	%r9944, %r9940, %r9939, 3;
	mov.b64 	%rd616, {%r9944, %r9943};
	shr.u64 	%rd617, %rd606, 6;
	xor.b64  	%rd618, %rd615, %rd617;
	xor.b64  	%rd619, %rd618, %rd616;
	add.s64 	%rd620, %rd546, %rd619;
	add.s64 	%rd621, %rd620, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9945,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9946}, %rd614;
	}
	shf.r.wrap.b32 	%r9947, %r9946, %r9945, 19;
	shf.r.wrap.b32 	%r9948, %r9945, %r9946, 19;
	mov.b64 	%rd622, {%r9948, %r9947};
	shf.l.wrap.b32 	%r9949, %r9945, %r9946, 3;
	shf.l.wrap.b32 	%r9950, %r9946, %r9945, 3;
	mov.b64 	%rd623, {%r9950, %r9949};
	shr.u64 	%rd624, %rd614, 6;
	xor.b64  	%rd625, %rd622, %rd624;
	xor.b64  	%rd626, %rd625, %rd623;
	add.s64 	%rd627, %rd558, %rd626;
	add.s64 	%rd628, %rd627, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9951,%dummy}, %rd621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9952}, %rd621;
	}
	shf.r.wrap.b32 	%r9953, %r9952, %r9951, 19;
	shf.r.wrap.b32 	%r9954, %r9951, %r9952, 19;
	mov.b64 	%rd629, {%r9954, %r9953};
	shf.l.wrap.b32 	%r9955, %r9951, %r9952, 3;
	shf.l.wrap.b32 	%r9956, %r9952, %r9951, 3;
	mov.b64 	%rd630, {%r9956, %r9955};
	shr.u64 	%rd631, %rd621, 6;
	xor.b64  	%rd632, %rd629, %rd631;
	xor.b64  	%rd633, %rd632, %rd630;
	add.s64 	%rd634, %rd570, %rd633;
	add.s64 	%rd635, %rd634, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9957,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9958}, %rd628;
	}
	shf.r.wrap.b32 	%r9959, %r9958, %r9957, 19;
	shf.r.wrap.b32 	%r9960, %r9957, %r9958, 19;
	mov.b64 	%rd636, {%r9960, %r9959};
	shf.l.wrap.b32 	%r9961, %r9957, %r9958, 3;
	shf.l.wrap.b32 	%r9962, %r9958, %r9957, 3;
	mov.b64 	%rd637, {%r9962, %r9961};
	shr.u64 	%rd638, %rd628, 6;
	xor.b64  	%rd639, %rd636, %rd638;
	xor.b64  	%rd640, %rd639, %rd637;
	add.s64 	%rd641, %rd582, %rd640;
	add.s64 	%rd642, %rd641, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9963,%dummy}, %rd635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9964}, %rd635;
	}
	shf.r.wrap.b32 	%r9965, %r9964, %r9963, 19;
	shf.r.wrap.b32 	%r9966, %r9963, %r9964, 19;
	mov.b64 	%rd643, {%r9966, %r9965};
	shf.l.wrap.b32 	%r9967, %r9963, %r9964, 3;
	shf.l.wrap.b32 	%r9968, %r9964, %r9963, 3;
	mov.b64 	%rd644, {%r9968, %r9967};
	shr.u64 	%rd645, %rd635, 6;
	xor.b64  	%rd646, %rd643, %rd645;
	xor.b64  	%rd647, %rd646, %rd644;
	add.s64 	%rd648, %rd594, %rd647;
	add.s64 	%rd649, %rd648, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9969,%dummy}, %rd642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9970}, %rd642;
	}
	shf.r.wrap.b32 	%r9971, %r9970, %r9969, 19;
	shf.r.wrap.b32 	%r9972, %r9969, %r9970, 19;
	mov.b64 	%rd650, {%r9972, %r9971};
	shf.l.wrap.b32 	%r9973, %r9969, %r9970, 3;
	shf.l.wrap.b32 	%r9974, %r9970, %r9969, 3;
	mov.b64 	%rd651, {%r9974, %r9973};
	shr.u64 	%rd652, %rd642, 6;
	xor.b64  	%rd653, %rd650, %rd652;
	xor.b64  	%rd654, %rd653, %rd651;
	add.s64 	%rd655, %rd606, %rd654;
	add.s64 	%rd656, %rd655, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9975,%dummy}, %rd649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9976}, %rd649;
	}
	shf.r.wrap.b32 	%r9977, %r9976, %r9975, 19;
	shf.r.wrap.b32 	%r9978, %r9975, %r9976, 19;
	mov.b64 	%rd657, {%r9978, %r9977};
	shf.l.wrap.b32 	%r9979, %r9975, %r9976, 3;
	shf.l.wrap.b32 	%r9980, %r9976, %r9975, 3;
	mov.b64 	%rd658, {%r9980, %r9979};
	shr.u64 	%rd659, %rd649, 6;
	xor.b64  	%rd660, %rd657, %rd659;
	xor.b64  	%rd661, %rd660, %rd658;
	add.s64 	%rd662, %rd614, %rd661;
	add.s64 	%rd663, %rd662, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9981,%dummy}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9982}, %rd656;
	}
	shf.r.wrap.b32 	%r9983, %r9982, %r9981, 19;
	shf.r.wrap.b32 	%r9984, %r9981, %r9982, 19;
	mov.b64 	%rd664, {%r9984, %r9983};
	shf.l.wrap.b32 	%r9985, %r9981, %r9982, 3;
	shf.l.wrap.b32 	%r9986, %r9982, %r9981, 3;
	mov.b64 	%rd665, {%r9986, %r9985};
	shr.u64 	%rd666, %rd656, 6;
	xor.b64  	%rd667, %rd664, %rd666;
	xor.b64  	%rd668, %rd667, %rd665;
	shf.r.wrap.b32 	%r9987, %r9874, %r9873, 1;
	shf.r.wrap.b32 	%r9988, %r9873, %r9874, 1;
	mov.b64 	%rd669, {%r9988, %r9987};
	shf.r.wrap.b32 	%r9989, %r9874, %r9873, 8;
	shf.r.wrap.b32 	%r9990, %r9873, %r9874, 8;
	mov.b64 	%rd670, {%r9990, %r9989};
	shr.u64 	%rd671, %rd183, 7;
	xor.b64  	%rd672, %rd669, %rd671;
	xor.b64  	%rd673, %rd672, %rd670;
	add.s64 	%rd674, %rd621, %rd668;
	add.s64 	%rd675, %rd674, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9991,%dummy}, %rd663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9992}, %rd663;
	}
	shf.r.wrap.b32 	%r9993, %r9992, %r9991, 19;
	shf.r.wrap.b32 	%r9994, %r9991, %r9992, 19;
	mov.b64 	%rd676, {%r9994, %r9993};
	shf.l.wrap.b32 	%r9995, %r9991, %r9992, 3;
	shf.l.wrap.b32 	%r9996, %r9992, %r9991, 3;
	mov.b64 	%rd677, {%r9996, %r9995};
	shr.u64 	%rd678, %rd663, 6;
	xor.b64  	%rd679, %rd676, %rd678;
	xor.b64  	%rd680, %rd679, %rd677;
	shf.r.wrap.b32 	%r9997, %r9886, %r9885, 1;
	shf.r.wrap.b32 	%r9998, %r9885, %r9886, 1;
	mov.b64 	%rd681, {%r9998, %r9997};
	shf.r.wrap.b32 	%r9999, %r9886, %r9885, 8;
	shf.r.wrap.b32 	%r10000, %r9885, %r9886, 8;
	mov.b64 	%rd682, {%r10000, %r9999};
	shr.u64 	%rd683, %rd546, 7;
	xor.b64  	%rd684, %rd681, %rd683;
	xor.b64  	%rd685, %rd684, %rd682;
	add.s64 	%rd686, %rd628, %rd183;
	add.s64 	%rd687, %rd686, %rd680;
	add.s64 	%rd688, %rd687, %rd685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10001,%dummy}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10002}, %rd528;
	}
	shf.r.wrap.b32 	%r10003, %r10002, %r10001, 14;
	shf.r.wrap.b32 	%r10004, %r10001, %r10002, 14;
	mov.b64 	%rd689, {%r10004, %r10003};
	shf.r.wrap.b32 	%r10005, %r10002, %r10001, 18;
	shf.r.wrap.b32 	%r10006, %r10001, %r10002, 18;
	mov.b64 	%rd690, {%r10006, %r10005};
	xor.b64  	%rd691, %rd690, %rd689;
	shf.l.wrap.b32 	%r10007, %r10001, %r10002, 23;
	shf.l.wrap.b32 	%r10008, %r10002, %r10001, 23;
	mov.b64 	%rd692, {%r10008, %r10007};
	xor.b64  	%rd693, %rd691, %rd692;
	xor.b64  	%rd694, %rd481, %rd504;
	and.b64  	%rd695, %rd694, %rd528;
	xor.b64  	%rd696, %rd695, %rd481;
	add.s64 	%rd697, %rd696, %rd458;
	add.s64 	%rd698, %rd697, %rd546;
	add.s64 	%rd699, %rd698, %rd2780;
	add.s64 	%rd700, %rd699, %rd693;
	add.s64 	%rd701, %rd700, %rd469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10009,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10010}, %rd539;
	}
	shf.r.wrap.b32 	%r10011, %r10010, %r10009, 28;
	shf.r.wrap.b32 	%r10012, %r10009, %r10010, 28;
	mov.b64 	%rd702, {%r10012, %r10011};
	shf.l.wrap.b32 	%r10013, %r10009, %r10010, 30;
	shf.l.wrap.b32 	%r10014, %r10010, %r10009, 30;
	mov.b64 	%rd703, {%r10014, %r10013};
	xor.b64  	%rd704, %rd703, %rd702;
	shf.l.wrap.b32 	%r10015, %r10009, %r10010, 25;
	shf.l.wrap.b32 	%r10016, %r10010, %r10009, 25;
	mov.b64 	%rd705, {%r10016, %r10015};
	xor.b64  	%rd706, %rd704, %rd705;
	xor.b64  	%rd707, %rd539, %rd492;
	xor.b64  	%rd708, %rd539, %rd515;
	and.b64  	%rd709, %rd708, %rd707;
	xor.b64  	%rd710, %rd709, %rd539;
	add.s64 	%rd711, %rd700, %rd710;
	add.s64 	%rd712, %rd711, %rd706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10017,%dummy}, %rd701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10018}, %rd701;
	}
	shf.r.wrap.b32 	%r10019, %r10018, %r10017, 14;
	shf.r.wrap.b32 	%r10020, %r10017, %r10018, 14;
	mov.b64 	%rd713, {%r10020, %r10019};
	shf.r.wrap.b32 	%r10021, %r10018, %r10017, 18;
	shf.r.wrap.b32 	%r10022, %r10017, %r10018, 18;
	mov.b64 	%rd714, {%r10022, %r10021};
	xor.b64  	%rd715, %rd714, %rd713;
	shf.l.wrap.b32 	%r10023, %r10017, %r10018, 23;
	shf.l.wrap.b32 	%r10024, %r10018, %r10017, 23;
	mov.b64 	%rd716, {%r10024, %r10023};
	xor.b64  	%rd717, %rd715, %rd716;
	xor.b64  	%rd718, %rd504, %rd528;
	and.b64  	%rd719, %rd701, %rd718;
	xor.b64  	%rd720, %rd719, %rd504;
	add.s64 	%rd721, %rd558, %rd481;
	add.s64 	%rd722, %rd721, %rd2781;
	add.s64 	%rd723, %rd722, %rd720;
	add.s64 	%rd724, %rd723, %rd717;
	add.s64 	%rd725, %rd724, %rd492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10025,%dummy}, %rd712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10026}, %rd712;
	}
	shf.r.wrap.b32 	%r10027, %r10026, %r10025, 28;
	shf.r.wrap.b32 	%r10028, %r10025, %r10026, 28;
	mov.b64 	%rd726, {%r10028, %r10027};
	shf.l.wrap.b32 	%r10029, %r10025, %r10026, 30;
	shf.l.wrap.b32 	%r10030, %r10026, %r10025, 30;
	mov.b64 	%rd727, {%r10030, %r10029};
	xor.b64  	%rd728, %rd727, %rd726;
	shf.l.wrap.b32 	%r10031, %r10025, %r10026, 25;
	shf.l.wrap.b32 	%r10032, %r10026, %r10025, 25;
	mov.b64 	%rd729, {%r10032, %r10031};
	xor.b64  	%rd730, %rd728, %rd729;
	xor.b64  	%rd731, %rd712, %rd515;
	xor.b64  	%rd732, %rd712, %rd539;
	and.b64  	%rd733, %rd732, %rd731;
	xor.b64  	%rd734, %rd733, %rd712;
	add.s64 	%rd735, %rd724, %rd734;
	add.s64 	%rd736, %rd735, %rd730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10033,%dummy}, %rd725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10034}, %rd725;
	}
	shf.r.wrap.b32 	%r10035, %r10034, %r10033, 14;
	shf.r.wrap.b32 	%r10036, %r10033, %r10034, 14;
	mov.b64 	%rd737, {%r10036, %r10035};
	shf.r.wrap.b32 	%r10037, %r10034, %r10033, 18;
	shf.r.wrap.b32 	%r10038, %r10033, %r10034, 18;
	mov.b64 	%rd738, {%r10038, %r10037};
	xor.b64  	%rd739, %rd738, %rd737;
	shf.l.wrap.b32 	%r10039, %r10033, %r10034, 23;
	shf.l.wrap.b32 	%r10040, %r10034, %r10033, 23;
	mov.b64 	%rd740, {%r10040, %r10039};
	xor.b64  	%rd741, %rd739, %rd740;
	xor.b64  	%rd742, %rd701, %rd528;
	and.b64  	%rd743, %rd725, %rd742;
	xor.b64  	%rd744, %rd743, %rd528;
	add.s64 	%rd745, %rd570, %rd504;
	add.s64 	%rd746, %rd745, %rd2782;
	add.s64 	%rd747, %rd746, %rd744;
	add.s64 	%rd748, %rd747, %rd741;
	add.s64 	%rd749, %rd748, %rd515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10041,%dummy}, %rd736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10042}, %rd736;
	}
	shf.r.wrap.b32 	%r10043, %r10042, %r10041, 28;
	shf.r.wrap.b32 	%r10044, %r10041, %r10042, 28;
	mov.b64 	%rd750, {%r10044, %r10043};
	shf.l.wrap.b32 	%r10045, %r10041, %r10042, 30;
	shf.l.wrap.b32 	%r10046, %r10042, %r10041, 30;
	mov.b64 	%rd751, {%r10046, %r10045};
	xor.b64  	%rd752, %rd751, %rd750;
	shf.l.wrap.b32 	%r10047, %r10041, %r10042, 25;
	shf.l.wrap.b32 	%r10048, %r10042, %r10041, 25;
	mov.b64 	%rd753, {%r10048, %r10047};
	xor.b64  	%rd754, %rd752, %rd753;
	xor.b64  	%rd755, %rd736, %rd539;
	xor.b64  	%rd756, %rd736, %rd712;
	and.b64  	%rd757, %rd756, %rd755;
	xor.b64  	%rd758, %rd757, %rd736;
	add.s64 	%rd759, %rd748, %rd758;
	add.s64 	%rd760, %rd759, %rd754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10049,%dummy}, %rd749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10050}, %rd749;
	}
	shf.r.wrap.b32 	%r10051, %r10050, %r10049, 14;
	shf.r.wrap.b32 	%r10052, %r10049, %r10050, 14;
	mov.b64 	%rd761, {%r10052, %r10051};
	shf.r.wrap.b32 	%r10053, %r10050, %r10049, 18;
	shf.r.wrap.b32 	%r10054, %r10049, %r10050, 18;
	mov.b64 	%rd762, {%r10054, %r10053};
	xor.b64  	%rd763, %rd762, %rd761;
	shf.l.wrap.b32 	%r10055, %r10049, %r10050, 23;
	shf.l.wrap.b32 	%r10056, %r10050, %r10049, 23;
	mov.b64 	%rd764, {%r10056, %r10055};
	xor.b64  	%rd765, %rd763, %rd764;
	xor.b64  	%rd766, %rd725, %rd701;
	and.b64  	%rd767, %rd749, %rd766;
	xor.b64  	%rd768, %rd767, %rd701;
	add.s64 	%rd769, %rd582, %rd528;
	add.s64 	%rd770, %rd769, %rd2783;
	add.s64 	%rd771, %rd770, %rd768;
	add.s64 	%rd772, %rd771, %rd765;
	add.s64 	%rd773, %rd772, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10057,%dummy}, %rd760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10058}, %rd760;
	}
	shf.r.wrap.b32 	%r10059, %r10058, %r10057, 28;
	shf.r.wrap.b32 	%r10060, %r10057, %r10058, 28;
	mov.b64 	%rd774, {%r10060, %r10059};
	shf.l.wrap.b32 	%r10061, %r10057, %r10058, 30;
	shf.l.wrap.b32 	%r10062, %r10058, %r10057, 30;
	mov.b64 	%rd775, {%r10062, %r10061};
	xor.b64  	%rd776, %rd775, %rd774;
	shf.l.wrap.b32 	%r10063, %r10057, %r10058, 25;
	shf.l.wrap.b32 	%r10064, %r10058, %r10057, 25;
	mov.b64 	%rd777, {%r10064, %r10063};
	xor.b64  	%rd778, %rd776, %rd777;
	xor.b64  	%rd779, %rd760, %rd712;
	xor.b64  	%rd780, %rd760, %rd736;
	and.b64  	%rd781, %rd780, %rd779;
	xor.b64  	%rd782, %rd781, %rd760;
	add.s64 	%rd783, %rd772, %rd782;
	add.s64 	%rd784, %rd783, %rd778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10065,%dummy}, %rd773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10066}, %rd773;
	}
	shf.r.wrap.b32 	%r10067, %r10066, %r10065, 14;
	shf.r.wrap.b32 	%r10068, %r10065, %r10066, 14;
	mov.b64 	%rd785, {%r10068, %r10067};
	shf.r.wrap.b32 	%r10069, %r10066, %r10065, 18;
	shf.r.wrap.b32 	%r10070, %r10065, %r10066, 18;
	mov.b64 	%rd786, {%r10070, %r10069};
	xor.b64  	%rd787, %rd786, %rd785;
	shf.l.wrap.b32 	%r10071, %r10065, %r10066, 23;
	shf.l.wrap.b32 	%r10072, %r10066, %r10065, 23;
	mov.b64 	%rd788, {%r10072, %r10071};
	xor.b64  	%rd789, %rd787, %rd788;
	xor.b64  	%rd790, %rd749, %rd725;
	and.b64  	%rd791, %rd773, %rd790;
	xor.b64  	%rd792, %rd791, %rd725;
	add.s64 	%rd793, %rd701, %rd594;
	add.s64 	%rd794, %rd793, %rd2784;
	add.s64 	%rd795, %rd794, %rd792;
	add.s64 	%rd796, %rd795, %rd789;
	add.s64 	%rd797, %rd796, %rd712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10073,%dummy}, %rd784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10074}, %rd784;
	}
	shf.r.wrap.b32 	%r10075, %r10074, %r10073, 28;
	shf.r.wrap.b32 	%r10076, %r10073, %r10074, 28;
	mov.b64 	%rd798, {%r10076, %r10075};
	shf.l.wrap.b32 	%r10077, %r10073, %r10074, 30;
	shf.l.wrap.b32 	%r10078, %r10074, %r10073, 30;
	mov.b64 	%rd799, {%r10078, %r10077};
	xor.b64  	%rd800, %rd799, %rd798;
	shf.l.wrap.b32 	%r10079, %r10073, %r10074, 25;
	shf.l.wrap.b32 	%r10080, %r10074, %r10073, 25;
	mov.b64 	%rd801, {%r10080, %r10079};
	xor.b64  	%rd802, %rd800, %rd801;
	xor.b64  	%rd803, %rd784, %rd736;
	xor.b64  	%rd804, %rd784, %rd760;
	and.b64  	%rd805, %rd804, %rd803;
	xor.b64  	%rd806, %rd805, %rd784;
	add.s64 	%rd807, %rd796, %rd806;
	add.s64 	%rd808, %rd807, %rd802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10081,%dummy}, %rd797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10082}, %rd797;
	}
	shf.r.wrap.b32 	%r10083, %r10082, %r10081, 14;
	shf.r.wrap.b32 	%r10084, %r10081, %r10082, 14;
	mov.b64 	%rd809, {%r10084, %r10083};
	shf.r.wrap.b32 	%r10085, %r10082, %r10081, 18;
	shf.r.wrap.b32 	%r10086, %r10081, %r10082, 18;
	mov.b64 	%rd810, {%r10086, %r10085};
	xor.b64  	%rd811, %rd810, %rd809;
	shf.l.wrap.b32 	%r10087, %r10081, %r10082, 23;
	shf.l.wrap.b32 	%r10088, %r10082, %r10081, 23;
	mov.b64 	%rd812, {%r10088, %r10087};
	xor.b64  	%rd813, %rd811, %rd812;
	xor.b64  	%rd814, %rd773, %rd749;
	and.b64  	%rd815, %rd797, %rd814;
	xor.b64  	%rd816, %rd815, %rd749;
	add.s64 	%rd817, %rd725, %rd606;
	add.s64 	%rd818, %rd817, %rd2785;
	add.s64 	%rd819, %rd818, %rd816;
	add.s64 	%rd820, %rd819, %rd813;
	add.s64 	%rd821, %rd820, %rd736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10089,%dummy}, %rd808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10090}, %rd808;
	}
	shf.r.wrap.b32 	%r10091, %r10090, %r10089, 28;
	shf.r.wrap.b32 	%r10092, %r10089, %r10090, 28;
	mov.b64 	%rd822, {%r10092, %r10091};
	shf.l.wrap.b32 	%r10093, %r10089, %r10090, 30;
	shf.l.wrap.b32 	%r10094, %r10090, %r10089, 30;
	mov.b64 	%rd823, {%r10094, %r10093};
	xor.b64  	%rd824, %rd823, %rd822;
	shf.l.wrap.b32 	%r10095, %r10089, %r10090, 25;
	shf.l.wrap.b32 	%r10096, %r10090, %r10089, 25;
	mov.b64 	%rd825, {%r10096, %r10095};
	xor.b64  	%rd826, %rd824, %rd825;
	xor.b64  	%rd827, %rd808, %rd760;
	xor.b64  	%rd828, %rd808, %rd784;
	and.b64  	%rd829, %rd828, %rd827;
	xor.b64  	%rd830, %rd829, %rd808;
	add.s64 	%rd831, %rd820, %rd830;
	add.s64 	%rd832, %rd831, %rd826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10097,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10098}, %rd821;
	}
	shf.r.wrap.b32 	%r10099, %r10098, %r10097, 14;
	shf.r.wrap.b32 	%r10100, %r10097, %r10098, 14;
	mov.b64 	%rd833, {%r10100, %r10099};
	shf.r.wrap.b32 	%r10101, %r10098, %r10097, 18;
	shf.r.wrap.b32 	%r10102, %r10097, %r10098, 18;
	mov.b64 	%rd834, {%r10102, %r10101};
	xor.b64  	%rd835, %rd834, %rd833;
	shf.l.wrap.b32 	%r10103, %r10097, %r10098, 23;
	shf.l.wrap.b32 	%r10104, %r10098, %r10097, 23;
	mov.b64 	%rd836, {%r10104, %r10103};
	xor.b64  	%rd837, %rd835, %rd836;
	xor.b64  	%rd838, %rd797, %rd773;
	and.b64  	%rd839, %rd821, %rd838;
	xor.b64  	%rd840, %rd839, %rd773;
	add.s64 	%rd841, %rd749, %rd614;
	add.s64 	%rd842, %rd841, %rd2786;
	add.s64 	%rd843, %rd842, %rd840;
	add.s64 	%rd844, %rd843, %rd837;
	add.s64 	%rd845, %rd844, %rd760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10105,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10106}, %rd832;
	}
	shf.r.wrap.b32 	%r10107, %r10106, %r10105, 28;
	shf.r.wrap.b32 	%r10108, %r10105, %r10106, 28;
	mov.b64 	%rd846, {%r10108, %r10107};
	shf.l.wrap.b32 	%r10109, %r10105, %r10106, 30;
	shf.l.wrap.b32 	%r10110, %r10106, %r10105, 30;
	mov.b64 	%rd847, {%r10110, %r10109};
	xor.b64  	%rd848, %rd847, %rd846;
	shf.l.wrap.b32 	%r10111, %r10105, %r10106, 25;
	shf.l.wrap.b32 	%r10112, %r10106, %r10105, 25;
	mov.b64 	%rd849, {%r10112, %r10111};
	xor.b64  	%rd850, %rd848, %rd849;
	xor.b64  	%rd851, %rd832, %rd784;
	xor.b64  	%rd852, %rd832, %rd808;
	and.b64  	%rd853, %rd852, %rd851;
	xor.b64  	%rd854, %rd853, %rd832;
	add.s64 	%rd855, %rd844, %rd854;
	add.s64 	%rd856, %rd855, %rd850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10113,%dummy}, %rd845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10114}, %rd845;
	}
	shf.r.wrap.b32 	%r10115, %r10114, %r10113, 14;
	shf.r.wrap.b32 	%r10116, %r10113, %r10114, 14;
	mov.b64 	%rd857, {%r10116, %r10115};
	shf.r.wrap.b32 	%r10117, %r10114, %r10113, 18;
	shf.r.wrap.b32 	%r10118, %r10113, %r10114, 18;
	mov.b64 	%rd858, {%r10118, %r10117};
	xor.b64  	%rd859, %rd858, %rd857;
	shf.l.wrap.b32 	%r10119, %r10113, %r10114, 23;
	shf.l.wrap.b32 	%r10120, %r10114, %r10113, 23;
	mov.b64 	%rd860, {%r10120, %r10119};
	xor.b64  	%rd861, %rd859, %rd860;
	xor.b64  	%rd862, %rd821, %rd797;
	and.b64  	%rd863, %rd845, %rd862;
	xor.b64  	%rd864, %rd863, %rd797;
	add.s64 	%rd865, %rd773, %rd621;
	add.s64 	%rd866, %rd865, %rd2787;
	add.s64 	%rd867, %rd866, %rd864;
	add.s64 	%rd868, %rd867, %rd861;
	add.s64 	%rd869, %rd868, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10121,%dummy}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10122}, %rd856;
	}
	shf.r.wrap.b32 	%r10123, %r10122, %r10121, 28;
	shf.r.wrap.b32 	%r10124, %r10121, %r10122, 28;
	mov.b64 	%rd870, {%r10124, %r10123};
	shf.l.wrap.b32 	%r10125, %r10121, %r10122, 30;
	shf.l.wrap.b32 	%r10126, %r10122, %r10121, 30;
	mov.b64 	%rd871, {%r10126, %r10125};
	xor.b64  	%rd872, %rd871, %rd870;
	shf.l.wrap.b32 	%r10127, %r10121, %r10122, 25;
	shf.l.wrap.b32 	%r10128, %r10122, %r10121, 25;
	mov.b64 	%rd873, {%r10128, %r10127};
	xor.b64  	%rd874, %rd872, %rd873;
	xor.b64  	%rd875, %rd856, %rd808;
	xor.b64  	%rd876, %rd856, %rd832;
	and.b64  	%rd877, %rd876, %rd875;
	xor.b64  	%rd878, %rd877, %rd856;
	add.s64 	%rd879, %rd868, %rd878;
	add.s64 	%rd880, %rd879, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10129,%dummy}, %rd869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10130}, %rd869;
	}
	shf.r.wrap.b32 	%r10131, %r10130, %r10129, 14;
	shf.r.wrap.b32 	%r10132, %r10129, %r10130, 14;
	mov.b64 	%rd881, {%r10132, %r10131};
	shf.r.wrap.b32 	%r10133, %r10130, %r10129, 18;
	shf.r.wrap.b32 	%r10134, %r10129, %r10130, 18;
	mov.b64 	%rd882, {%r10134, %r10133};
	xor.b64  	%rd883, %rd882, %rd881;
	shf.l.wrap.b32 	%r10135, %r10129, %r10130, 23;
	shf.l.wrap.b32 	%r10136, %r10130, %r10129, 23;
	mov.b64 	%rd884, {%r10136, %r10135};
	xor.b64  	%rd885, %rd883, %rd884;
	xor.b64  	%rd886, %rd845, %rd821;
	and.b64  	%rd887, %rd869, %rd886;
	xor.b64  	%rd888, %rd887, %rd821;
	add.s64 	%rd889, %rd797, %rd628;
	add.s64 	%rd890, %rd889, %rd2788;
	add.s64 	%rd891, %rd890, %rd888;
	add.s64 	%rd892, %rd891, %rd885;
	add.s64 	%rd893, %rd892, %rd808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10137,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10138}, %rd880;
	}
	shf.r.wrap.b32 	%r10139, %r10138, %r10137, 28;
	shf.r.wrap.b32 	%r10140, %r10137, %r10138, 28;
	mov.b64 	%rd894, {%r10140, %r10139};
	shf.l.wrap.b32 	%r10141, %r10137, %r10138, 30;
	shf.l.wrap.b32 	%r10142, %r10138, %r10137, 30;
	mov.b64 	%rd895, {%r10142, %r10141};
	xor.b64  	%rd896, %rd895, %rd894;
	shf.l.wrap.b32 	%r10143, %r10137, %r10138, 25;
	shf.l.wrap.b32 	%r10144, %r10138, %r10137, 25;
	mov.b64 	%rd897, {%r10144, %r10143};
	xor.b64  	%rd898, %rd896, %rd897;
	xor.b64  	%rd899, %rd880, %rd832;
	xor.b64  	%rd900, %rd880, %rd856;
	and.b64  	%rd901, %rd900, %rd899;
	xor.b64  	%rd902, %rd901, %rd880;
	add.s64 	%rd903, %rd892, %rd902;
	add.s64 	%rd904, %rd903, %rd898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10145,%dummy}, %rd893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10146}, %rd893;
	}
	shf.r.wrap.b32 	%r10147, %r10146, %r10145, 14;
	shf.r.wrap.b32 	%r10148, %r10145, %r10146, 14;
	mov.b64 	%rd905, {%r10148, %r10147};
	shf.r.wrap.b32 	%r10149, %r10146, %r10145, 18;
	shf.r.wrap.b32 	%r10150, %r10145, %r10146, 18;
	mov.b64 	%rd906, {%r10150, %r10149};
	xor.b64  	%rd907, %rd906, %rd905;
	shf.l.wrap.b32 	%r10151, %r10145, %r10146, 23;
	shf.l.wrap.b32 	%r10152, %r10146, %r10145, 23;
	mov.b64 	%rd908, {%r10152, %r10151};
	xor.b64  	%rd909, %rd907, %rd908;
	xor.b64  	%rd910, %rd869, %rd845;
	and.b64  	%rd911, %rd893, %rd910;
	xor.b64  	%rd912, %rd911, %rd845;
	add.s64 	%rd913, %rd821, %rd635;
	add.s64 	%rd914, %rd913, %rd2789;
	add.s64 	%rd915, %rd914, %rd912;
	add.s64 	%rd916, %rd915, %rd909;
	add.s64 	%rd917, %rd916, %rd832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10153,%dummy}, %rd904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10154}, %rd904;
	}
	shf.r.wrap.b32 	%r10155, %r10154, %r10153, 28;
	shf.r.wrap.b32 	%r10156, %r10153, %r10154, 28;
	mov.b64 	%rd918, {%r10156, %r10155};
	shf.l.wrap.b32 	%r10157, %r10153, %r10154, 30;
	shf.l.wrap.b32 	%r10158, %r10154, %r10153, 30;
	mov.b64 	%rd919, {%r10158, %r10157};
	xor.b64  	%rd920, %rd919, %rd918;
	shf.l.wrap.b32 	%r10159, %r10153, %r10154, 25;
	shf.l.wrap.b32 	%r10160, %r10154, %r10153, 25;
	mov.b64 	%rd921, {%r10160, %r10159};
	xor.b64  	%rd922, %rd920, %rd921;
	xor.b64  	%rd923, %rd904, %rd856;
	xor.b64  	%rd924, %rd904, %rd880;
	and.b64  	%rd925, %rd924, %rd923;
	xor.b64  	%rd926, %rd925, %rd904;
	add.s64 	%rd927, %rd916, %rd926;
	add.s64 	%rd928, %rd927, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10161,%dummy}, %rd917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10162}, %rd917;
	}
	shf.r.wrap.b32 	%r10163, %r10162, %r10161, 14;
	shf.r.wrap.b32 	%r10164, %r10161, %r10162, 14;
	mov.b64 	%rd929, {%r10164, %r10163};
	shf.r.wrap.b32 	%r10165, %r10162, %r10161, 18;
	shf.r.wrap.b32 	%r10166, %r10161, %r10162, 18;
	mov.b64 	%rd930, {%r10166, %r10165};
	xor.b64  	%rd931, %rd930, %rd929;
	shf.l.wrap.b32 	%r10167, %r10161, %r10162, 23;
	shf.l.wrap.b32 	%r10168, %r10162, %r10161, 23;
	mov.b64 	%rd932, {%r10168, %r10167};
	xor.b64  	%rd933, %rd931, %rd932;
	xor.b64  	%rd934, %rd893, %rd869;
	and.b64  	%rd935, %rd917, %rd934;
	xor.b64  	%rd936, %rd935, %rd869;
	add.s64 	%rd937, %rd845, %rd642;
	add.s64 	%rd938, %rd937, %rd2790;
	add.s64 	%rd939, %rd938, %rd936;
	add.s64 	%rd940, %rd939, %rd933;
	add.s64 	%rd941, %rd940, %rd856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10169,%dummy}, %rd928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10170}, %rd928;
	}
	shf.r.wrap.b32 	%r10171, %r10170, %r10169, 28;
	shf.r.wrap.b32 	%r10172, %r10169, %r10170, 28;
	mov.b64 	%rd942, {%r10172, %r10171};
	shf.l.wrap.b32 	%r10173, %r10169, %r10170, 30;
	shf.l.wrap.b32 	%r10174, %r10170, %r10169, 30;
	mov.b64 	%rd943, {%r10174, %r10173};
	xor.b64  	%rd944, %rd943, %rd942;
	shf.l.wrap.b32 	%r10175, %r10169, %r10170, 25;
	shf.l.wrap.b32 	%r10176, %r10170, %r10169, 25;
	mov.b64 	%rd945, {%r10176, %r10175};
	xor.b64  	%rd946, %rd944, %rd945;
	xor.b64  	%rd947, %rd928, %rd880;
	xor.b64  	%rd948, %rd928, %rd904;
	and.b64  	%rd949, %rd948, %rd947;
	xor.b64  	%rd950, %rd949, %rd928;
	add.s64 	%rd951, %rd940, %rd950;
	add.s64 	%rd952, %rd951, %rd946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10177,%dummy}, %rd941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10178}, %rd941;
	}
	shf.r.wrap.b32 	%r10179, %r10178, %r10177, 14;
	shf.r.wrap.b32 	%r10180, %r10177, %r10178, 14;
	mov.b64 	%rd953, {%r10180, %r10179};
	shf.r.wrap.b32 	%r10181, %r10178, %r10177, 18;
	shf.r.wrap.b32 	%r10182, %r10177, %r10178, 18;
	mov.b64 	%rd954, {%r10182, %r10181};
	xor.b64  	%rd955, %rd954, %rd953;
	shf.l.wrap.b32 	%r10183, %r10177, %r10178, 23;
	shf.l.wrap.b32 	%r10184, %r10178, %r10177, 23;
	mov.b64 	%rd956, {%r10184, %r10183};
	xor.b64  	%rd957, %rd955, %rd956;
	xor.b64  	%rd958, %rd917, %rd893;
	and.b64  	%rd959, %rd941, %rd958;
	xor.b64  	%rd960, %rd959, %rd893;
	add.s64 	%rd961, %rd869, %rd649;
	add.s64 	%rd962, %rd961, %rd2791;
	add.s64 	%rd963, %rd962, %rd960;
	add.s64 	%rd964, %rd963, %rd957;
	add.s64 	%rd965, %rd964, %rd880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10185,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10186}, %rd952;
	}
	shf.r.wrap.b32 	%r10187, %r10186, %r10185, 28;
	shf.r.wrap.b32 	%r10188, %r10185, %r10186, 28;
	mov.b64 	%rd966, {%r10188, %r10187};
	shf.l.wrap.b32 	%r10189, %r10185, %r10186, 30;
	shf.l.wrap.b32 	%r10190, %r10186, %r10185, 30;
	mov.b64 	%rd967, {%r10190, %r10189};
	xor.b64  	%rd968, %rd967, %rd966;
	shf.l.wrap.b32 	%r10191, %r10185, %r10186, 25;
	shf.l.wrap.b32 	%r10192, %r10186, %r10185, 25;
	mov.b64 	%rd969, {%r10192, %r10191};
	xor.b64  	%rd970, %rd968, %rd969;
	xor.b64  	%rd971, %rd952, %rd904;
	xor.b64  	%rd972, %rd952, %rd928;
	and.b64  	%rd973, %rd972, %rd971;
	xor.b64  	%rd974, %rd973, %rd952;
	add.s64 	%rd975, %rd964, %rd974;
	add.s64 	%rd976, %rd975, %rd970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10193,%dummy}, %rd965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10194}, %rd965;
	}
	shf.r.wrap.b32 	%r10195, %r10194, %r10193, 14;
	shf.r.wrap.b32 	%r10196, %r10193, %r10194, 14;
	mov.b64 	%rd977, {%r10196, %r10195};
	shf.r.wrap.b32 	%r10197, %r10194, %r10193, 18;
	shf.r.wrap.b32 	%r10198, %r10193, %r10194, 18;
	mov.b64 	%rd978, {%r10198, %r10197};
	xor.b64  	%rd979, %rd978, %rd977;
	shf.l.wrap.b32 	%r10199, %r10193, %r10194, 23;
	shf.l.wrap.b32 	%r10200, %r10194, %r10193, 23;
	mov.b64 	%rd980, {%r10200, %r10199};
	xor.b64  	%rd981, %rd979, %rd980;
	xor.b64  	%rd982, %rd941, %rd917;
	and.b64  	%rd983, %rd965, %rd982;
	xor.b64  	%rd984, %rd983, %rd917;
	add.s64 	%rd985, %rd893, %rd656;
	add.s64 	%rd986, %rd985, %rd2792;
	add.s64 	%rd987, %rd986, %rd984;
	add.s64 	%rd988, %rd987, %rd981;
	add.s64 	%rd989, %rd988, %rd904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10201,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10202}, %rd976;
	}
	shf.r.wrap.b32 	%r10203, %r10202, %r10201, 28;
	shf.r.wrap.b32 	%r10204, %r10201, %r10202, 28;
	mov.b64 	%rd990, {%r10204, %r10203};
	shf.l.wrap.b32 	%r10205, %r10201, %r10202, 30;
	shf.l.wrap.b32 	%r10206, %r10202, %r10201, 30;
	mov.b64 	%rd991, {%r10206, %r10205};
	xor.b64  	%rd992, %rd991, %rd990;
	shf.l.wrap.b32 	%r10207, %r10201, %r10202, 25;
	shf.l.wrap.b32 	%r10208, %r10202, %r10201, 25;
	mov.b64 	%rd993, {%r10208, %r10207};
	xor.b64  	%rd994, %rd992, %rd993;
	xor.b64  	%rd995, %rd976, %rd928;
	xor.b64  	%rd996, %rd976, %rd952;
	and.b64  	%rd997, %rd996, %rd995;
	xor.b64  	%rd998, %rd997, %rd976;
	add.s64 	%rd999, %rd988, %rd998;
	add.s64 	%rd1000, %rd999, %rd994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10209,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10210}, %rd989;
	}
	shf.r.wrap.b32 	%r10211, %r10210, %r10209, 14;
	shf.r.wrap.b32 	%r10212, %r10209, %r10210, 14;
	mov.b64 	%rd1001, {%r10212, %r10211};
	shf.r.wrap.b32 	%r10213, %r10210, %r10209, 18;
	shf.r.wrap.b32 	%r10214, %r10209, %r10210, 18;
	mov.b64 	%rd1002, {%r10214, %r10213};
	xor.b64  	%rd1003, %rd1002, %rd1001;
	shf.l.wrap.b32 	%r10215, %r10209, %r10210, 23;
	shf.l.wrap.b32 	%r10216, %r10210, %r10209, 23;
	mov.b64 	%rd1004, {%r10216, %r10215};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	xor.b64  	%rd1006, %rd965, %rd941;
	and.b64  	%rd1007, %rd989, %rd1006;
	xor.b64  	%rd1008, %rd1007, %rd941;
	add.s64 	%rd1009, %rd917, %rd663;
	add.s64 	%rd1010, %rd1009, %rd2793;
	add.s64 	%rd1011, %rd1010, %rd1008;
	add.s64 	%rd1012, %rd1011, %rd1005;
	add.s64 	%rd1013, %rd1012, %rd928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10217,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10218}, %rd1000;
	}
	shf.r.wrap.b32 	%r10219, %r10218, %r10217, 28;
	shf.r.wrap.b32 	%r10220, %r10217, %r10218, 28;
	mov.b64 	%rd1014, {%r10220, %r10219};
	shf.l.wrap.b32 	%r10221, %r10217, %r10218, 30;
	shf.l.wrap.b32 	%r10222, %r10218, %r10217, 30;
	mov.b64 	%rd1015, {%r10222, %r10221};
	xor.b64  	%rd1016, %rd1015, %rd1014;
	shf.l.wrap.b32 	%r10223, %r10217, %r10218, 25;
	shf.l.wrap.b32 	%r10224, %r10218, %r10217, 25;
	mov.b64 	%rd1017, {%r10224, %r10223};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	xor.b64  	%rd1019, %rd1000, %rd952;
	xor.b64  	%rd1020, %rd1000, %rd976;
	and.b64  	%rd1021, %rd1020, %rd1019;
	xor.b64  	%rd1022, %rd1021, %rd1000;
	add.s64 	%rd1023, %rd1012, %rd1022;
	add.s64 	%rd1024, %rd1023, %rd1018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10225,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10226}, %rd1013;
	}
	shf.r.wrap.b32 	%r10227, %r10226, %r10225, 14;
	shf.r.wrap.b32 	%r10228, %r10225, %r10226, 14;
	mov.b64 	%rd1025, {%r10228, %r10227};
	shf.r.wrap.b32 	%r10229, %r10226, %r10225, 18;
	shf.r.wrap.b32 	%r10230, %r10225, %r10226, 18;
	mov.b64 	%rd1026, {%r10230, %r10229};
	xor.b64  	%rd1027, %rd1026, %rd1025;
	shf.l.wrap.b32 	%r10231, %r10225, %r10226, 23;
	shf.l.wrap.b32 	%r10232, %r10226, %r10225, 23;
	mov.b64 	%rd1028, {%r10232, %r10231};
	xor.b64  	%rd1029, %rd1027, %rd1028;
	xor.b64  	%rd1030, %rd989, %rd965;
	and.b64  	%rd1031, %rd1013, %rd1030;
	xor.b64  	%rd1032, %rd1031, %rd965;
	add.s64 	%rd1033, %rd941, %rd675;
	add.s64 	%rd1034, %rd1033, %rd2794;
	add.s64 	%rd1035, %rd1034, %rd1032;
	add.s64 	%rd1036, %rd1035, %rd1029;
	add.s64 	%rd1037, %rd1036, %rd952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10233,%dummy}, %rd1024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10234}, %rd1024;
	}
	shf.r.wrap.b32 	%r10235, %r10234, %r10233, 28;
	shf.r.wrap.b32 	%r10236, %r10233, %r10234, 28;
	mov.b64 	%rd1038, {%r10236, %r10235};
	shf.l.wrap.b32 	%r10237, %r10233, %r10234, 30;
	shf.l.wrap.b32 	%r10238, %r10234, %r10233, 30;
	mov.b64 	%rd1039, {%r10238, %r10237};
	xor.b64  	%rd1040, %rd1039, %rd1038;
	shf.l.wrap.b32 	%r10239, %r10233, %r10234, 25;
	shf.l.wrap.b32 	%r10240, %r10234, %r10233, 25;
	mov.b64 	%rd1041, {%r10240, %r10239};
	xor.b64  	%rd1042, %rd1040, %rd1041;
	xor.b64  	%rd1043, %rd1024, %rd976;
	xor.b64  	%rd1044, %rd1024, %rd1000;
	and.b64  	%rd1045, %rd1044, %rd1043;
	xor.b64  	%rd1046, %rd1045, %rd1024;
	add.s64 	%rd1047, %rd1036, %rd1046;
	add.s64 	%rd1048, %rd1047, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10241,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10242}, %rd1037;
	}
	shf.r.wrap.b32 	%r10243, %r10242, %r10241, 14;
	shf.r.wrap.b32 	%r10244, %r10241, %r10242, 14;
	mov.b64 	%rd1049, {%r10244, %r10243};
	shf.r.wrap.b32 	%r10245, %r10242, %r10241, 18;
	shf.r.wrap.b32 	%r10246, %r10241, %r10242, 18;
	mov.b64 	%rd1050, {%r10246, %r10245};
	xor.b64  	%rd1051, %rd1050, %rd1049;
	shf.l.wrap.b32 	%r10247, %r10241, %r10242, 23;
	shf.l.wrap.b32 	%r10248, %r10242, %r10241, 23;
	mov.b64 	%rd1052, {%r10248, %r10247};
	xor.b64  	%rd1053, %rd1051, %rd1052;
	xor.b64  	%rd1054, %rd1013, %rd989;
	and.b64  	%rd1055, %rd1037, %rd1054;
	xor.b64  	%rd1056, %rd1055, %rd989;
	add.s64 	%rd1057, %rd965, %rd688;
	add.s64 	%rd1058, %rd1057, %rd2795;
	add.s64 	%rd1059, %rd1058, %rd1056;
	add.s64 	%rd1060, %rd1059, %rd1053;
	add.s64 	%rd1061, %rd1060, %rd976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10249,%dummy}, %rd1048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10250}, %rd1048;
	}
	shf.r.wrap.b32 	%r10251, %r10250, %r10249, 28;
	shf.r.wrap.b32 	%r10252, %r10249, %r10250, 28;
	mov.b64 	%rd1062, {%r10252, %r10251};
	shf.l.wrap.b32 	%r10253, %r10249, %r10250, 30;
	shf.l.wrap.b32 	%r10254, %r10250, %r10249, 30;
	mov.b64 	%rd1063, {%r10254, %r10253};
	xor.b64  	%rd1064, %rd1063, %rd1062;
	shf.l.wrap.b32 	%r10255, %r10249, %r10250, 25;
	shf.l.wrap.b32 	%r10256, %r10250, %r10249, 25;
	mov.b64 	%rd1065, {%r10256, %r10255};
	xor.b64  	%rd1066, %rd1064, %rd1065;
	xor.b64  	%rd1067, %rd1048, %rd1000;
	xor.b64  	%rd1068, %rd1048, %rd1024;
	and.b64  	%rd1069, %rd1068, %rd1067;
	xor.b64  	%rd1070, %rd1069, %rd1048;
	add.s64 	%rd1071, %rd1060, %rd1070;
	add.s64 	%rd1072, %rd1071, %rd1066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10257,%dummy}, %rd675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10258}, %rd675;
	}
	shf.r.wrap.b32 	%r10259, %r10258, %r10257, 19;
	shf.r.wrap.b32 	%r10260, %r10257, %r10258, 19;
	mov.b64 	%rd1073, {%r10260, %r10259};
	shf.l.wrap.b32 	%r10261, %r10257, %r10258, 3;
	shf.l.wrap.b32 	%r10262, %r10258, %r10257, 3;
	mov.b64 	%rd1074, {%r10262, %r10261};
	shr.u64 	%rd1075, %rd675, 6;
	xor.b64  	%rd1076, %rd1073, %rd1075;
	xor.b64  	%rd1077, %rd1076, %rd1074;
	shf.r.wrap.b32 	%r10263, %r9898, %r9897, 1;
	shf.r.wrap.b32 	%r10264, %r9897, %r9898, 1;
	mov.b64 	%rd1078, {%r10264, %r10263};
	shf.r.wrap.b32 	%r10265, %r9898, %r9897, 8;
	shf.r.wrap.b32 	%r10266, %r9897, %r9898, 8;
	mov.b64 	%rd1079, {%r10266, %r10265};
	shr.u64 	%rd1080, %rd558, 7;
	xor.b64  	%rd1081, %rd1078, %rd1080;
	xor.b64  	%rd1082, %rd1081, %rd1079;
	add.s64 	%rd1083, %rd546, %rd635;
	add.s64 	%rd1084, %rd1083, %rd1077;
	add.s64 	%rd1085, %rd1084, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10267,%dummy}, %rd688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10268}, %rd688;
	}
	shf.r.wrap.b32 	%r10269, %r10268, %r10267, 19;
	shf.r.wrap.b32 	%r10270, %r10267, %r10268, 19;
	mov.b64 	%rd1086, {%r10270, %r10269};
	shf.l.wrap.b32 	%r10271, %r10267, %r10268, 3;
	shf.l.wrap.b32 	%r10272, %r10268, %r10267, 3;
	mov.b64 	%rd1087, {%r10272, %r10271};
	shr.u64 	%rd1088, %rd688, 6;
	xor.b64  	%rd1089, %rd1086, %rd1088;
	xor.b64  	%rd1090, %rd1089, %rd1087;
	shf.r.wrap.b32 	%r10273, %r9910, %r9909, 1;
	shf.r.wrap.b32 	%r10274, %r9909, %r9910, 1;
	mov.b64 	%rd1091, {%r10274, %r10273};
	shf.r.wrap.b32 	%r10275, %r9910, %r9909, 8;
	shf.r.wrap.b32 	%r10276, %r9909, %r9910, 8;
	mov.b64 	%rd1092, {%r10276, %r10275};
	shr.u64 	%rd1093, %rd570, 7;
	xor.b64  	%rd1094, %rd1091, %rd1093;
	xor.b64  	%rd1095, %rd1094, %rd1092;
	add.s64 	%rd1096, %rd558, %rd642;
	add.s64 	%rd1097, %rd1096, %rd1090;
	add.s64 	%rd1098, %rd1097, %rd1095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10277,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10278}, %rd1085;
	}
	shf.r.wrap.b32 	%r10279, %r10278, %r10277, 19;
	shf.r.wrap.b32 	%r10280, %r10277, %r10278, 19;
	mov.b64 	%rd1099, {%r10280, %r10279};
	shf.l.wrap.b32 	%r10281, %r10277, %r10278, 3;
	shf.l.wrap.b32 	%r10282, %r10278, %r10277, 3;
	mov.b64 	%rd1100, {%r10282, %r10281};
	shr.u64 	%rd1101, %rd1085, 6;
	xor.b64  	%rd1102, %rd1099, %rd1101;
	xor.b64  	%rd1103, %rd1102, %rd1100;
	shf.r.wrap.b32 	%r10283, %r9922, %r9921, 1;
	shf.r.wrap.b32 	%r10284, %r9921, %r9922, 1;
	mov.b64 	%rd1104, {%r10284, %r10283};
	shf.r.wrap.b32 	%r10285, %r9922, %r9921, 8;
	shf.r.wrap.b32 	%r10286, %r9921, %r9922, 8;
	mov.b64 	%rd1105, {%r10286, %r10285};
	shr.u64 	%rd1106, %rd582, 7;
	xor.b64  	%rd1107, %rd1104, %rd1106;
	xor.b64  	%rd1108, %rd1107, %rd1105;
	add.s64 	%rd1109, %rd570, %rd649;
	add.s64 	%rd1110, %rd1109, %rd1103;
	add.s64 	%rd1111, %rd1110, %rd1108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10287,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10288}, %rd1098;
	}
	shf.r.wrap.b32 	%r10289, %r10288, %r10287, 19;
	shf.r.wrap.b32 	%r10290, %r10287, %r10288, 19;
	mov.b64 	%rd1112, {%r10290, %r10289};
	shf.l.wrap.b32 	%r10291, %r10287, %r10288, 3;
	shf.l.wrap.b32 	%r10292, %r10288, %r10287, 3;
	mov.b64 	%rd1113, {%r10292, %r10291};
	shr.u64 	%rd1114, %rd1098, 6;
	xor.b64  	%rd1115, %rd1112, %rd1114;
	xor.b64  	%rd1116, %rd1115, %rd1113;
	shf.r.wrap.b32 	%r10293, %r9934, %r9933, 1;
	shf.r.wrap.b32 	%r10294, %r9933, %r9934, 1;
	mov.b64 	%rd1117, {%r10294, %r10293};
	shf.r.wrap.b32 	%r10295, %r9934, %r9933, 8;
	shf.r.wrap.b32 	%r10296, %r9933, %r9934, 8;
	mov.b64 	%rd1118, {%r10296, %r10295};
	shr.u64 	%rd1119, %rd594, 7;
	xor.b64  	%rd1120, %rd1117, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1118;
	add.s64 	%rd1122, %rd582, %rd656;
	add.s64 	%rd1123, %rd1122, %rd1116;
	add.s64 	%rd1124, %rd1123, %rd1121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10297,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10298}, %rd1111;
	}
	shf.r.wrap.b32 	%r10299, %r10298, %r10297, 19;
	shf.r.wrap.b32 	%r10300, %r10297, %r10298, 19;
	mov.b64 	%rd1125, {%r10300, %r10299};
	shf.l.wrap.b32 	%r10301, %r10297, %r10298, 3;
	shf.l.wrap.b32 	%r10302, %r10298, %r10297, 3;
	mov.b64 	%rd1126, {%r10302, %r10301};
	shr.u64 	%rd1127, %rd1111, 6;
	xor.b64  	%rd1128, %rd1125, %rd1127;
	xor.b64  	%rd1129, %rd1128, %rd1126;
	shf.r.wrap.b32 	%r10303, %r9940, %r9939, 1;
	shf.r.wrap.b32 	%r10304, %r9939, %r9940, 1;
	mov.b64 	%rd1130, {%r10304, %r10303};
	shf.r.wrap.b32 	%r10305, %r9940, %r9939, 8;
	shf.r.wrap.b32 	%r10306, %r9939, %r9940, 8;
	mov.b64 	%rd1131, {%r10306, %r10305};
	shr.u64 	%rd1132, %rd606, 7;
	xor.b64  	%rd1133, %rd1130, %rd1132;
	xor.b64  	%rd1134, %rd1133, %rd1131;
	add.s64 	%rd1135, %rd594, %rd663;
	add.s64 	%rd1136, %rd1135, %rd1129;
	add.s64 	%rd1137, %rd1136, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10307,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10308}, %rd1124;
	}
	shf.r.wrap.b32 	%r10309, %r10308, %r10307, 19;
	shf.r.wrap.b32 	%r10310, %r10307, %r10308, 19;
	mov.b64 	%rd1138, {%r10310, %r10309};
	shf.l.wrap.b32 	%r10311, %r10307, %r10308, 3;
	shf.l.wrap.b32 	%r10312, %r10308, %r10307, 3;
	mov.b64 	%rd1139, {%r10312, %r10311};
	shr.u64 	%rd1140, %rd1124, 6;
	xor.b64  	%rd1141, %rd1138, %rd1140;
	xor.b64  	%rd1142, %rd1141, %rd1139;
	shf.r.wrap.b32 	%r10313, %r9946, %r9945, 1;
	shf.r.wrap.b32 	%r10314, %r9945, %r9946, 1;
	mov.b64 	%rd1143, {%r10314, %r10313};
	shf.r.wrap.b32 	%r10315, %r9946, %r9945, 8;
	shf.r.wrap.b32 	%r10316, %r9945, %r9946, 8;
	mov.b64 	%rd1144, {%r10316, %r10315};
	shr.u64 	%rd1145, %rd614, 7;
	xor.b64  	%rd1146, %rd1143, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1144;
	add.s64 	%rd1148, %rd606, %rd675;
	add.s64 	%rd1149, %rd1148, %rd1142;
	add.s64 	%rd1150, %rd1149, %rd1147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10317,%dummy}, %rd1137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10318}, %rd1137;
	}
	shf.r.wrap.b32 	%r10319, %r10318, %r10317, 19;
	shf.r.wrap.b32 	%r10320, %r10317, %r10318, 19;
	mov.b64 	%rd1151, {%r10320, %r10319};
	shf.l.wrap.b32 	%r10321, %r10317, %r10318, 3;
	shf.l.wrap.b32 	%r10322, %r10318, %r10317, 3;
	mov.b64 	%rd1152, {%r10322, %r10321};
	shr.u64 	%rd1153, %rd1137, 6;
	xor.b64  	%rd1154, %rd1151, %rd1153;
	xor.b64  	%rd1155, %rd1154, %rd1152;
	shf.r.wrap.b32 	%r10323, %r9952, %r9951, 1;
	shf.r.wrap.b32 	%r10324, %r9951, %r9952, 1;
	mov.b64 	%rd1156, {%r10324, %r10323};
	shf.r.wrap.b32 	%r10325, %r9952, %r9951, 8;
	shf.r.wrap.b32 	%r10326, %r9951, %r9952, 8;
	mov.b64 	%rd1157, {%r10326, %r10325};
	shr.u64 	%rd1158, %rd621, 7;
	xor.b64  	%rd1159, %rd1156, %rd1158;
	xor.b64  	%rd1160, %rd1159, %rd1157;
	add.s64 	%rd1161, %rd614, %rd688;
	add.s64 	%rd1162, %rd1161, %rd1155;
	add.s64 	%rd1163, %rd1162, %rd1160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10327,%dummy}, %rd1150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10328}, %rd1150;
	}
	shf.r.wrap.b32 	%r10329, %r10328, %r10327, 19;
	shf.r.wrap.b32 	%r10330, %r10327, %r10328, 19;
	mov.b64 	%rd1164, {%r10330, %r10329};
	shf.l.wrap.b32 	%r10331, %r10327, %r10328, 3;
	shf.l.wrap.b32 	%r10332, %r10328, %r10327, 3;
	mov.b64 	%rd1165, {%r10332, %r10331};
	shr.u64 	%rd1166, %rd1150, 6;
	xor.b64  	%rd1167, %rd1164, %rd1166;
	xor.b64  	%rd1168, %rd1167, %rd1165;
	shf.r.wrap.b32 	%r10333, %r9958, %r9957, 1;
	shf.r.wrap.b32 	%r10334, %r9957, %r9958, 1;
	mov.b64 	%rd1169, {%r10334, %r10333};
	shf.r.wrap.b32 	%r10335, %r9958, %r9957, 8;
	shf.r.wrap.b32 	%r10336, %r9957, %r9958, 8;
	mov.b64 	%rd1170, {%r10336, %r10335};
	shr.u64 	%rd1171, %rd628, 7;
	xor.b64  	%rd1172, %rd1169, %rd1171;
	xor.b64  	%rd1173, %rd1172, %rd1170;
	add.s64 	%rd1174, %rd1085, %rd621;
	add.s64 	%rd1175, %rd1174, %rd1168;
	add.s64 	%rd1176, %rd1175, %rd1173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10337,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10338}, %rd1163;
	}
	shf.r.wrap.b32 	%r10339, %r10338, %r10337, 19;
	shf.r.wrap.b32 	%r10340, %r10337, %r10338, 19;
	mov.b64 	%rd1177, {%r10340, %r10339};
	shf.l.wrap.b32 	%r10341, %r10337, %r10338, 3;
	shf.l.wrap.b32 	%r10342, %r10338, %r10337, 3;
	mov.b64 	%rd1178, {%r10342, %r10341};
	shr.u64 	%rd1179, %rd1163, 6;
	xor.b64  	%rd1180, %rd1177, %rd1179;
	xor.b64  	%rd1181, %rd1180, %rd1178;
	shf.r.wrap.b32 	%r10343, %r9964, %r9963, 1;
	shf.r.wrap.b32 	%r10344, %r9963, %r9964, 1;
	mov.b64 	%rd1182, {%r10344, %r10343};
	shf.r.wrap.b32 	%r10345, %r9964, %r9963, 8;
	shf.r.wrap.b32 	%r10346, %r9963, %r9964, 8;
	mov.b64 	%rd1183, {%r10346, %r10345};
	shr.u64 	%rd1184, %rd635, 7;
	xor.b64  	%rd1185, %rd1182, %rd1184;
	xor.b64  	%rd1186, %rd1185, %rd1183;
	add.s64 	%rd1187, %rd1098, %rd628;
	add.s64 	%rd1188, %rd1187, %rd1181;
	add.s64 	%rd1189, %rd1188, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10347,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10348}, %rd1176;
	}
	shf.r.wrap.b32 	%r10349, %r10348, %r10347, 19;
	shf.r.wrap.b32 	%r10350, %r10347, %r10348, 19;
	mov.b64 	%rd1190, {%r10350, %r10349};
	shf.l.wrap.b32 	%r10351, %r10347, %r10348, 3;
	shf.l.wrap.b32 	%r10352, %r10348, %r10347, 3;
	mov.b64 	%rd1191, {%r10352, %r10351};
	shr.u64 	%rd1192, %rd1176, 6;
	xor.b64  	%rd1193, %rd1190, %rd1192;
	xor.b64  	%rd1194, %rd1193, %rd1191;
	shf.r.wrap.b32 	%r10353, %r9970, %r9969, 1;
	shf.r.wrap.b32 	%r10354, %r9969, %r9970, 1;
	mov.b64 	%rd1195, {%r10354, %r10353};
	shf.r.wrap.b32 	%r10355, %r9970, %r9969, 8;
	shf.r.wrap.b32 	%r10356, %r9969, %r9970, 8;
	mov.b64 	%rd1196, {%r10356, %r10355};
	shr.u64 	%rd1197, %rd642, 7;
	xor.b64  	%rd1198, %rd1195, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1196;
	add.s64 	%rd1200, %rd1111, %rd635;
	add.s64 	%rd1201, %rd1200, %rd1194;
	add.s64 	%rd1202, %rd1201, %rd1199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10357,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10358}, %rd1189;
	}
	shf.r.wrap.b32 	%r10359, %r10358, %r10357, 19;
	shf.r.wrap.b32 	%r10360, %r10357, %r10358, 19;
	mov.b64 	%rd1203, {%r10360, %r10359};
	shf.l.wrap.b32 	%r10361, %r10357, %r10358, 3;
	shf.l.wrap.b32 	%r10362, %r10358, %r10357, 3;
	mov.b64 	%rd1204, {%r10362, %r10361};
	shr.u64 	%rd1205, %rd1189, 6;
	xor.b64  	%rd1206, %rd1203, %rd1205;
	xor.b64  	%rd1207, %rd1206, %rd1204;
	shf.r.wrap.b32 	%r10363, %r9976, %r9975, 1;
	shf.r.wrap.b32 	%r10364, %r9975, %r9976, 1;
	mov.b64 	%rd1208, {%r10364, %r10363};
	shf.r.wrap.b32 	%r10365, %r9976, %r9975, 8;
	shf.r.wrap.b32 	%r10366, %r9975, %r9976, 8;
	mov.b64 	%rd1209, {%r10366, %r10365};
	shr.u64 	%rd1210, %rd649, 7;
	xor.b64  	%rd1211, %rd1208, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd1209;
	add.s64 	%rd1213, %rd1124, %rd642;
	add.s64 	%rd1214, %rd1213, %rd1207;
	add.s64 	%rd1215, %rd1214, %rd1212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10367,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10368}, %rd1202;
	}
	shf.r.wrap.b32 	%r10369, %r10368, %r10367, 19;
	shf.r.wrap.b32 	%r10370, %r10367, %r10368, 19;
	mov.b64 	%rd1216, {%r10370, %r10369};
	shf.l.wrap.b32 	%r10371, %r10367, %r10368, 3;
	shf.l.wrap.b32 	%r10372, %r10368, %r10367, 3;
	mov.b64 	%rd1217, {%r10372, %r10371};
	shr.u64 	%rd1218, %rd1202, 6;
	xor.b64  	%rd1219, %rd1216, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd1217;
	shf.r.wrap.b32 	%r10373, %r9982, %r9981, 1;
	shf.r.wrap.b32 	%r10374, %r9981, %r9982, 1;
	mov.b64 	%rd1221, {%r10374, %r10373};
	shf.r.wrap.b32 	%r10375, %r9982, %r9981, 8;
	shf.r.wrap.b32 	%r10376, %r9981, %r9982, 8;
	mov.b64 	%rd1222, {%r10376, %r10375};
	shr.u64 	%rd1223, %rd656, 7;
	xor.b64  	%rd1224, %rd1221, %rd1223;
	xor.b64  	%rd1225, %rd1224, %rd1222;
	add.s64 	%rd1226, %rd1137, %rd649;
	add.s64 	%rd1227, %rd1226, %rd1220;
	add.s64 	%rd1228, %rd1227, %rd1225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10377,%dummy}, %rd1215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10378}, %rd1215;
	}
	shf.r.wrap.b32 	%r10379, %r10378, %r10377, 19;
	shf.r.wrap.b32 	%r10380, %r10377, %r10378, 19;
	mov.b64 	%rd1229, {%r10380, %r10379};
	shf.l.wrap.b32 	%r10381, %r10377, %r10378, 3;
	shf.l.wrap.b32 	%r10382, %r10378, %r10377, 3;
	mov.b64 	%rd1230, {%r10382, %r10381};
	shr.u64 	%rd1231, %rd1215, 6;
	xor.b64  	%rd1232, %rd1229, %rd1231;
	xor.b64  	%rd1233, %rd1232, %rd1230;
	shf.r.wrap.b32 	%r10383, %r9992, %r9991, 1;
	shf.r.wrap.b32 	%r10384, %r9991, %r9992, 1;
	mov.b64 	%rd1234, {%r10384, %r10383};
	shf.r.wrap.b32 	%r10385, %r9992, %r9991, 8;
	shf.r.wrap.b32 	%r10386, %r9991, %r9992, 8;
	mov.b64 	%rd1235, {%r10386, %r10385};
	shr.u64 	%rd1236, %rd663, 7;
	xor.b64  	%rd1237, %rd1234, %rd1236;
	xor.b64  	%rd1238, %rd1237, %rd1235;
	add.s64 	%rd1239, %rd1150, %rd656;
	add.s64 	%rd1240, %rd1239, %rd1233;
	add.s64 	%rd1241, %rd1240, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10387,%dummy}, %rd1228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10388}, %rd1228;
	}
	shf.r.wrap.b32 	%r10389, %r10388, %r10387, 19;
	shf.r.wrap.b32 	%r10390, %r10387, %r10388, 19;
	mov.b64 	%rd1242, {%r10390, %r10389};
	shf.l.wrap.b32 	%r10391, %r10387, %r10388, 3;
	shf.l.wrap.b32 	%r10392, %r10388, %r10387, 3;
	mov.b64 	%rd1243, {%r10392, %r10391};
	shr.u64 	%rd1244, %rd1228, 6;
	xor.b64  	%rd1245, %rd1242, %rd1244;
	xor.b64  	%rd1246, %rd1245, %rd1243;
	shf.r.wrap.b32 	%r10393, %r10258, %r10257, 1;
	shf.r.wrap.b32 	%r10394, %r10257, %r10258, 1;
	mov.b64 	%rd1247, {%r10394, %r10393};
	shf.r.wrap.b32 	%r10395, %r10258, %r10257, 8;
	shf.r.wrap.b32 	%r10396, %r10257, %r10258, 8;
	mov.b64 	%rd1248, {%r10396, %r10395};
	shr.u64 	%rd1249, %rd675, 7;
	xor.b64  	%rd1250, %rd1247, %rd1249;
	xor.b64  	%rd1251, %rd1250, %rd1248;
	add.s64 	%rd1252, %rd1163, %rd663;
	add.s64 	%rd1253, %rd1252, %rd1246;
	add.s64 	%rd1254, %rd1253, %rd1251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10397,%dummy}, %rd1241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10398}, %rd1241;
	}
	shf.r.wrap.b32 	%r10399, %r10398, %r10397, 19;
	shf.r.wrap.b32 	%r10400, %r10397, %r10398, 19;
	mov.b64 	%rd1255, {%r10400, %r10399};
	shf.l.wrap.b32 	%r10401, %r10397, %r10398, 3;
	shf.l.wrap.b32 	%r10402, %r10398, %r10397, 3;
	mov.b64 	%rd1256, {%r10402, %r10401};
	shr.u64 	%rd1257, %rd1241, 6;
	xor.b64  	%rd1258, %rd1255, %rd1257;
	xor.b64  	%rd1259, %rd1258, %rd1256;
	shf.r.wrap.b32 	%r10403, %r10268, %r10267, 1;
	shf.r.wrap.b32 	%r10404, %r10267, %r10268, 1;
	mov.b64 	%rd1260, {%r10404, %r10403};
	shf.r.wrap.b32 	%r10405, %r10268, %r10267, 8;
	shf.r.wrap.b32 	%r10406, %r10267, %r10268, 8;
	mov.b64 	%rd1261, {%r10406, %r10405};
	shr.u64 	%rd1262, %rd688, 7;
	xor.b64  	%rd1263, %rd1260, %rd1262;
	xor.b64  	%rd1264, %rd1263, %rd1261;
	add.s64 	%rd1265, %rd1176, %rd675;
	add.s64 	%rd1266, %rd1265, %rd1259;
	add.s64 	%rd1267, %rd1266, %rd1264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10407,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10408}, %rd1254;
	}
	shf.r.wrap.b32 	%r10409, %r10408, %r10407, 19;
	shf.r.wrap.b32 	%r10410, %r10407, %r10408, 19;
	mov.b64 	%rd1268, {%r10410, %r10409};
	shf.l.wrap.b32 	%r10411, %r10407, %r10408, 3;
	shf.l.wrap.b32 	%r10412, %r10408, %r10407, 3;
	mov.b64 	%rd1269, {%r10412, %r10411};
	shr.u64 	%rd1270, %rd1254, 6;
	xor.b64  	%rd1271, %rd1268, %rd1270;
	xor.b64  	%rd1272, %rd1271, %rd1269;
	shf.r.wrap.b32 	%r10413, %r10278, %r10277, 1;
	shf.r.wrap.b32 	%r10414, %r10277, %r10278, 1;
	mov.b64 	%rd1273, {%r10414, %r10413};
	shf.r.wrap.b32 	%r10415, %r10278, %r10277, 8;
	shf.r.wrap.b32 	%r10416, %r10277, %r10278, 8;
	mov.b64 	%rd1274, {%r10416, %r10415};
	shr.u64 	%rd1275, %rd1085, 7;
	xor.b64  	%rd1276, %rd1273, %rd1275;
	xor.b64  	%rd1277, %rd1276, %rd1274;
	add.s64 	%rd1278, %rd1189, %rd688;
	add.s64 	%rd1279, %rd1278, %rd1272;
	add.s64 	%rd1280, %rd1279, %rd1277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10417,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10418}, %rd1061;
	}
	shf.r.wrap.b32 	%r10419, %r10418, %r10417, 14;
	shf.r.wrap.b32 	%r10420, %r10417, %r10418, 14;
	mov.b64 	%rd1281, {%r10420, %r10419};
	shf.r.wrap.b32 	%r10421, %r10418, %r10417, 18;
	shf.r.wrap.b32 	%r10422, %r10417, %r10418, 18;
	mov.b64 	%rd1282, {%r10422, %r10421};
	xor.b64  	%rd1283, %rd1282, %rd1281;
	shf.l.wrap.b32 	%r10423, %r10417, %r10418, 23;
	shf.l.wrap.b32 	%r10424, %r10418, %r10417, 23;
	mov.b64 	%rd1284, {%r10424, %r10423};
	xor.b64  	%rd1285, %rd1283, %rd1284;
	xor.b64  	%rd1286, %rd1013, %rd1037;
	and.b64  	%rd1287, %rd1286, %rd1061;
	xor.b64  	%rd1288, %rd1287, %rd1013;
	add.s64 	%rd1289, %rd1288, %rd989;
	add.s64 	%rd1290, %rd1289, %rd1085;
	add.s64 	%rd1291, %rd1290, %rd2796;
	add.s64 	%rd1292, %rd1291, %rd1285;
	add.s64 	%rd1293, %rd1292, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10425,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10426}, %rd1072;
	}
	shf.r.wrap.b32 	%r10427, %r10426, %r10425, 28;
	shf.r.wrap.b32 	%r10428, %r10425, %r10426, 28;
	mov.b64 	%rd1294, {%r10428, %r10427};
	shf.l.wrap.b32 	%r10429, %r10425, %r10426, 30;
	shf.l.wrap.b32 	%r10430, %r10426, %r10425, 30;
	mov.b64 	%rd1295, {%r10430, %r10429};
	xor.b64  	%rd1296, %rd1295, %rd1294;
	shf.l.wrap.b32 	%r10431, %r10425, %r10426, 25;
	shf.l.wrap.b32 	%r10432, %r10426, %r10425, 25;
	mov.b64 	%rd1297, {%r10432, %r10431};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	xor.b64  	%rd1299, %rd1072, %rd1024;
	xor.b64  	%rd1300, %rd1072, %rd1048;
	and.b64  	%rd1301, %rd1300, %rd1299;
	xor.b64  	%rd1302, %rd1301, %rd1072;
	add.s64 	%rd1303, %rd1292, %rd1302;
	add.s64 	%rd1304, %rd1303, %rd1298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10433,%dummy}, %rd1293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10434}, %rd1293;
	}
	shf.r.wrap.b32 	%r10435, %r10434, %r10433, 14;
	shf.r.wrap.b32 	%r10436, %r10433, %r10434, 14;
	mov.b64 	%rd1305, {%r10436, %r10435};
	shf.r.wrap.b32 	%r10437, %r10434, %r10433, 18;
	shf.r.wrap.b32 	%r10438, %r10433, %r10434, 18;
	mov.b64 	%rd1306, {%r10438, %r10437};
	xor.b64  	%rd1307, %rd1306, %rd1305;
	shf.l.wrap.b32 	%r10439, %r10433, %r10434, 23;
	shf.l.wrap.b32 	%r10440, %r10434, %r10433, 23;
	mov.b64 	%rd1308, {%r10440, %r10439};
	xor.b64  	%rd1309, %rd1307, %rd1308;
	xor.b64  	%rd1310, %rd1037, %rd1061;
	and.b64  	%rd1311, %rd1293, %rd1310;
	xor.b64  	%rd1312, %rd1311, %rd1037;
	add.s64 	%rd1313, %rd1098, %rd1013;
	add.s64 	%rd1314, %rd1313, %rd2797;
	add.s64 	%rd1315, %rd1314, %rd1312;
	add.s64 	%rd1316, %rd1315, %rd1309;
	add.s64 	%rd1317, %rd1316, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10441,%dummy}, %rd1304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10442}, %rd1304;
	}
	shf.r.wrap.b32 	%r10443, %r10442, %r10441, 28;
	shf.r.wrap.b32 	%r10444, %r10441, %r10442, 28;
	mov.b64 	%rd1318, {%r10444, %r10443};
	shf.l.wrap.b32 	%r10445, %r10441, %r10442, 30;
	shf.l.wrap.b32 	%r10446, %r10442, %r10441, 30;
	mov.b64 	%rd1319, {%r10446, %r10445};
	xor.b64  	%rd1320, %rd1319, %rd1318;
	shf.l.wrap.b32 	%r10447, %r10441, %r10442, 25;
	shf.l.wrap.b32 	%r10448, %r10442, %r10441, 25;
	mov.b64 	%rd1321, {%r10448, %r10447};
	xor.b64  	%rd1322, %rd1320, %rd1321;
	xor.b64  	%rd1323, %rd1304, %rd1048;
	xor.b64  	%rd1324, %rd1304, %rd1072;
	and.b64  	%rd1325, %rd1324, %rd1323;
	xor.b64  	%rd1326, %rd1325, %rd1304;
	add.s64 	%rd1327, %rd1316, %rd1326;
	add.s64 	%rd1328, %rd1327, %rd1322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10449,%dummy}, %rd1317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10450}, %rd1317;
	}
	shf.r.wrap.b32 	%r10451, %r10450, %r10449, 14;
	shf.r.wrap.b32 	%r10452, %r10449, %r10450, 14;
	mov.b64 	%rd1329, {%r10452, %r10451};
	shf.r.wrap.b32 	%r10453, %r10450, %r10449, 18;
	shf.r.wrap.b32 	%r10454, %r10449, %r10450, 18;
	mov.b64 	%rd1330, {%r10454, %r10453};
	xor.b64  	%rd1331, %rd1330, %rd1329;
	shf.l.wrap.b32 	%r10455, %r10449, %r10450, 23;
	shf.l.wrap.b32 	%r10456, %r10450, %r10449, 23;
	mov.b64 	%rd1332, {%r10456, %r10455};
	xor.b64  	%rd1333, %rd1331, %rd1332;
	xor.b64  	%rd1334, %rd1293, %rd1061;
	and.b64  	%rd1335, %rd1317, %rd1334;
	xor.b64  	%rd1336, %rd1335, %rd1061;
	add.s64 	%rd1337, %rd1111, %rd1037;
	add.s64 	%rd1338, %rd1337, %rd2798;
	add.s64 	%rd1339, %rd1338, %rd1336;
	add.s64 	%rd1340, %rd1339, %rd1333;
	add.s64 	%rd1341, %rd1340, %rd1048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10457,%dummy}, %rd1328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10458}, %rd1328;
	}
	shf.r.wrap.b32 	%r10459, %r10458, %r10457, 28;
	shf.r.wrap.b32 	%r10460, %r10457, %r10458, 28;
	mov.b64 	%rd1342, {%r10460, %r10459};
	shf.l.wrap.b32 	%r10461, %r10457, %r10458, 30;
	shf.l.wrap.b32 	%r10462, %r10458, %r10457, 30;
	mov.b64 	%rd1343, {%r10462, %r10461};
	xor.b64  	%rd1344, %rd1343, %rd1342;
	shf.l.wrap.b32 	%r10463, %r10457, %r10458, 25;
	shf.l.wrap.b32 	%r10464, %r10458, %r10457, 25;
	mov.b64 	%rd1345, {%r10464, %r10463};
	xor.b64  	%rd1346, %rd1344, %rd1345;
	xor.b64  	%rd1347, %rd1328, %rd1072;
	xor.b64  	%rd1348, %rd1328, %rd1304;
	and.b64  	%rd1349, %rd1348, %rd1347;
	xor.b64  	%rd1350, %rd1349, %rd1328;
	add.s64 	%rd1351, %rd1340, %rd1350;
	add.s64 	%rd1352, %rd1351, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10465,%dummy}, %rd1341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10466}, %rd1341;
	}
	shf.r.wrap.b32 	%r10467, %r10466, %r10465, 14;
	shf.r.wrap.b32 	%r10468, %r10465, %r10466, 14;
	mov.b64 	%rd1353, {%r10468, %r10467};
	shf.r.wrap.b32 	%r10469, %r10466, %r10465, 18;
	shf.r.wrap.b32 	%r10470, %r10465, %r10466, 18;
	mov.b64 	%rd1354, {%r10470, %r10469};
	xor.b64  	%rd1355, %rd1354, %rd1353;
	shf.l.wrap.b32 	%r10471, %r10465, %r10466, 23;
	shf.l.wrap.b32 	%r10472, %r10466, %r10465, 23;
	mov.b64 	%rd1356, {%r10472, %r10471};
	xor.b64  	%rd1357, %rd1355, %rd1356;
	xor.b64  	%rd1358, %rd1317, %rd1293;
	and.b64  	%rd1359, %rd1341, %rd1358;
	xor.b64  	%rd1360, %rd1359, %rd1293;
	add.s64 	%rd1361, %rd1124, %rd1061;
	add.s64 	%rd1362, %rd1361, %rd2799;
	add.s64 	%rd1363, %rd1362, %rd1360;
	add.s64 	%rd1364, %rd1363, %rd1357;
	add.s64 	%rd1365, %rd1364, %rd1072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10473,%dummy}, %rd1352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10474}, %rd1352;
	}
	shf.r.wrap.b32 	%r10475, %r10474, %r10473, 28;
	shf.r.wrap.b32 	%r10476, %r10473, %r10474, 28;
	mov.b64 	%rd1366, {%r10476, %r10475};
	shf.l.wrap.b32 	%r10477, %r10473, %r10474, 30;
	shf.l.wrap.b32 	%r10478, %r10474, %r10473, 30;
	mov.b64 	%rd1367, {%r10478, %r10477};
	xor.b64  	%rd1368, %rd1367, %rd1366;
	shf.l.wrap.b32 	%r10479, %r10473, %r10474, 25;
	shf.l.wrap.b32 	%r10480, %r10474, %r10473, 25;
	mov.b64 	%rd1369, {%r10480, %r10479};
	xor.b64  	%rd1370, %rd1368, %rd1369;
	xor.b64  	%rd1371, %rd1352, %rd1304;
	xor.b64  	%rd1372, %rd1352, %rd1328;
	and.b64  	%rd1373, %rd1372, %rd1371;
	xor.b64  	%rd1374, %rd1373, %rd1352;
	add.s64 	%rd1375, %rd1364, %rd1374;
	add.s64 	%rd1376, %rd1375, %rd1370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10481,%dummy}, %rd1365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10482}, %rd1365;
	}
	shf.r.wrap.b32 	%r10483, %r10482, %r10481, 14;
	shf.r.wrap.b32 	%r10484, %r10481, %r10482, 14;
	mov.b64 	%rd1377, {%r10484, %r10483};
	shf.r.wrap.b32 	%r10485, %r10482, %r10481, 18;
	shf.r.wrap.b32 	%r10486, %r10481, %r10482, 18;
	mov.b64 	%rd1378, {%r10486, %r10485};
	xor.b64  	%rd1379, %rd1378, %rd1377;
	shf.l.wrap.b32 	%r10487, %r10481, %r10482, 23;
	shf.l.wrap.b32 	%r10488, %r10482, %r10481, 23;
	mov.b64 	%rd1380, {%r10488, %r10487};
	xor.b64  	%rd1381, %rd1379, %rd1380;
	xor.b64  	%rd1382, %rd1341, %rd1317;
	and.b64  	%rd1383, %rd1365, %rd1382;
	xor.b64  	%rd1384, %rd1383, %rd1317;
	add.s64 	%rd1385, %rd1293, %rd1137;
	add.s64 	%rd1386, %rd1385, %rd2800;
	add.s64 	%rd1387, %rd1386, %rd1384;
	add.s64 	%rd1388, %rd1387, %rd1381;
	add.s64 	%rd1389, %rd1388, %rd1304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10489,%dummy}, %rd1376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10490}, %rd1376;
	}
	shf.r.wrap.b32 	%r10491, %r10490, %r10489, 28;
	shf.r.wrap.b32 	%r10492, %r10489, %r10490, 28;
	mov.b64 	%rd1390, {%r10492, %r10491};
	shf.l.wrap.b32 	%r10493, %r10489, %r10490, 30;
	shf.l.wrap.b32 	%r10494, %r10490, %r10489, 30;
	mov.b64 	%rd1391, {%r10494, %r10493};
	xor.b64  	%rd1392, %rd1391, %rd1390;
	shf.l.wrap.b32 	%r10495, %r10489, %r10490, 25;
	shf.l.wrap.b32 	%r10496, %r10490, %r10489, 25;
	mov.b64 	%rd1393, {%r10496, %r10495};
	xor.b64  	%rd1394, %rd1392, %rd1393;
	xor.b64  	%rd1395, %rd1376, %rd1328;
	xor.b64  	%rd1396, %rd1376, %rd1352;
	and.b64  	%rd1397, %rd1396, %rd1395;
	xor.b64  	%rd1398, %rd1397, %rd1376;
	add.s64 	%rd1399, %rd1388, %rd1398;
	add.s64 	%rd1400, %rd1399, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10497,%dummy}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10498}, %rd1389;
	}
	shf.r.wrap.b32 	%r10499, %r10498, %r10497, 14;
	shf.r.wrap.b32 	%r10500, %r10497, %r10498, 14;
	mov.b64 	%rd1401, {%r10500, %r10499};
	shf.r.wrap.b32 	%r10501, %r10498, %r10497, 18;
	shf.r.wrap.b32 	%r10502, %r10497, %r10498, 18;
	mov.b64 	%rd1402, {%r10502, %r10501};
	xor.b64  	%rd1403, %rd1402, %rd1401;
	shf.l.wrap.b32 	%r10503, %r10497, %r10498, 23;
	shf.l.wrap.b32 	%r10504, %r10498, %r10497, 23;
	mov.b64 	%rd1404, {%r10504, %r10503};
	xor.b64  	%rd1405, %rd1403, %rd1404;
	xor.b64  	%rd1406, %rd1365, %rd1341;
	and.b64  	%rd1407, %rd1389, %rd1406;
	xor.b64  	%rd1408, %rd1407, %rd1341;
	add.s64 	%rd1409, %rd1317, %rd1150;
	add.s64 	%rd1410, %rd1409, %rd2801;
	add.s64 	%rd1411, %rd1410, %rd1408;
	add.s64 	%rd1412, %rd1411, %rd1405;
	add.s64 	%rd1413, %rd1412, %rd1328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10505,%dummy}, %rd1400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10506}, %rd1400;
	}
	shf.r.wrap.b32 	%r10507, %r10506, %r10505, 28;
	shf.r.wrap.b32 	%r10508, %r10505, %r10506, 28;
	mov.b64 	%rd1414, {%r10508, %r10507};
	shf.l.wrap.b32 	%r10509, %r10505, %r10506, 30;
	shf.l.wrap.b32 	%r10510, %r10506, %r10505, 30;
	mov.b64 	%rd1415, {%r10510, %r10509};
	xor.b64  	%rd1416, %rd1415, %rd1414;
	shf.l.wrap.b32 	%r10511, %r10505, %r10506, 25;
	shf.l.wrap.b32 	%r10512, %r10506, %r10505, 25;
	mov.b64 	%rd1417, {%r10512, %r10511};
	xor.b64  	%rd1418, %rd1416, %rd1417;
	xor.b64  	%rd1419, %rd1400, %rd1352;
	xor.b64  	%rd1420, %rd1400, %rd1376;
	and.b64  	%rd1421, %rd1420, %rd1419;
	xor.b64  	%rd1422, %rd1421, %rd1400;
	add.s64 	%rd1423, %rd1412, %rd1422;
	add.s64 	%rd1424, %rd1423, %rd1418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10513,%dummy}, %rd1413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10514}, %rd1413;
	}
	shf.r.wrap.b32 	%r10515, %r10514, %r10513, 14;
	shf.r.wrap.b32 	%r10516, %r10513, %r10514, 14;
	mov.b64 	%rd1425, {%r10516, %r10515};
	shf.r.wrap.b32 	%r10517, %r10514, %r10513, 18;
	shf.r.wrap.b32 	%r10518, %r10513, %r10514, 18;
	mov.b64 	%rd1426, {%r10518, %r10517};
	xor.b64  	%rd1427, %rd1426, %rd1425;
	shf.l.wrap.b32 	%r10519, %r10513, %r10514, 23;
	shf.l.wrap.b32 	%r10520, %r10514, %r10513, 23;
	mov.b64 	%rd1428, {%r10520, %r10519};
	xor.b64  	%rd1429, %rd1427, %rd1428;
	xor.b64  	%rd1430, %rd1389, %rd1365;
	and.b64  	%rd1431, %rd1413, %rd1430;
	xor.b64  	%rd1432, %rd1431, %rd1365;
	add.s64 	%rd1433, %rd1341, %rd1163;
	add.s64 	%rd1434, %rd1433, %rd2802;
	add.s64 	%rd1435, %rd1434, %rd1432;
	add.s64 	%rd1436, %rd1435, %rd1429;
	add.s64 	%rd1437, %rd1436, %rd1352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10521,%dummy}, %rd1424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10522}, %rd1424;
	}
	shf.r.wrap.b32 	%r10523, %r10522, %r10521, 28;
	shf.r.wrap.b32 	%r10524, %r10521, %r10522, 28;
	mov.b64 	%rd1438, {%r10524, %r10523};
	shf.l.wrap.b32 	%r10525, %r10521, %r10522, 30;
	shf.l.wrap.b32 	%r10526, %r10522, %r10521, 30;
	mov.b64 	%rd1439, {%r10526, %r10525};
	xor.b64  	%rd1440, %rd1439, %rd1438;
	shf.l.wrap.b32 	%r10527, %r10521, %r10522, 25;
	shf.l.wrap.b32 	%r10528, %r10522, %r10521, 25;
	mov.b64 	%rd1441, {%r10528, %r10527};
	xor.b64  	%rd1442, %rd1440, %rd1441;
	xor.b64  	%rd1443, %rd1424, %rd1376;
	xor.b64  	%rd1444, %rd1424, %rd1400;
	and.b64  	%rd1445, %rd1444, %rd1443;
	xor.b64  	%rd1446, %rd1445, %rd1424;
	add.s64 	%rd1447, %rd1436, %rd1446;
	add.s64 	%rd1448, %rd1447, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10529,%dummy}, %rd1437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10530}, %rd1437;
	}
	shf.r.wrap.b32 	%r10531, %r10530, %r10529, 14;
	shf.r.wrap.b32 	%r10532, %r10529, %r10530, 14;
	mov.b64 	%rd1449, {%r10532, %r10531};
	shf.r.wrap.b32 	%r10533, %r10530, %r10529, 18;
	shf.r.wrap.b32 	%r10534, %r10529, %r10530, 18;
	mov.b64 	%rd1450, {%r10534, %r10533};
	xor.b64  	%rd1451, %rd1450, %rd1449;
	shf.l.wrap.b32 	%r10535, %r10529, %r10530, 23;
	shf.l.wrap.b32 	%r10536, %r10530, %r10529, 23;
	mov.b64 	%rd1452, {%r10536, %r10535};
	xor.b64  	%rd1453, %rd1451, %rd1452;
	xor.b64  	%rd1454, %rd1413, %rd1389;
	and.b64  	%rd1455, %rd1437, %rd1454;
	xor.b64  	%rd1456, %rd1455, %rd1389;
	add.s64 	%rd1457, %rd1365, %rd1176;
	add.s64 	%rd1458, %rd1457, %rd2803;
	add.s64 	%rd1459, %rd1458, %rd1456;
	add.s64 	%rd1460, %rd1459, %rd1453;
	add.s64 	%rd1461, %rd1460, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10537,%dummy}, %rd1448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10538}, %rd1448;
	}
	shf.r.wrap.b32 	%r10539, %r10538, %r10537, 28;
	shf.r.wrap.b32 	%r10540, %r10537, %r10538, 28;
	mov.b64 	%rd1462, {%r10540, %r10539};
	shf.l.wrap.b32 	%r10541, %r10537, %r10538, 30;
	shf.l.wrap.b32 	%r10542, %r10538, %r10537, 30;
	mov.b64 	%rd1463, {%r10542, %r10541};
	xor.b64  	%rd1464, %rd1463, %rd1462;
	shf.l.wrap.b32 	%r10543, %r10537, %r10538, 25;
	shf.l.wrap.b32 	%r10544, %r10538, %r10537, 25;
	mov.b64 	%rd1465, {%r10544, %r10543};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	xor.b64  	%rd1467, %rd1448, %rd1400;
	xor.b64  	%rd1468, %rd1448, %rd1424;
	and.b64  	%rd1469, %rd1468, %rd1467;
	xor.b64  	%rd1470, %rd1469, %rd1448;
	add.s64 	%rd1471, %rd1460, %rd1470;
	add.s64 	%rd1472, %rd1471, %rd1466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10545,%dummy}, %rd1461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10546}, %rd1461;
	}
	shf.r.wrap.b32 	%r10547, %r10546, %r10545, 14;
	shf.r.wrap.b32 	%r10548, %r10545, %r10546, 14;
	mov.b64 	%rd1473, {%r10548, %r10547};
	shf.r.wrap.b32 	%r10549, %r10546, %r10545, 18;
	shf.r.wrap.b32 	%r10550, %r10545, %r10546, 18;
	mov.b64 	%rd1474, {%r10550, %r10549};
	xor.b64  	%rd1475, %rd1474, %rd1473;
	shf.l.wrap.b32 	%r10551, %r10545, %r10546, 23;
	shf.l.wrap.b32 	%r10552, %r10546, %r10545, 23;
	mov.b64 	%rd1476, {%r10552, %r10551};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	xor.b64  	%rd1478, %rd1437, %rd1413;
	and.b64  	%rd1479, %rd1461, %rd1478;
	xor.b64  	%rd1480, %rd1479, %rd1413;
	add.s64 	%rd1481, %rd1389, %rd1189;
	add.s64 	%rd1482, %rd1481, %rd2804;
	add.s64 	%rd1483, %rd1482, %rd1480;
	add.s64 	%rd1484, %rd1483, %rd1477;
	add.s64 	%rd1485, %rd1484, %rd1400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10553,%dummy}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10554}, %rd1472;
	}
	shf.r.wrap.b32 	%r10555, %r10554, %r10553, 28;
	shf.r.wrap.b32 	%r10556, %r10553, %r10554, 28;
	mov.b64 	%rd1486, {%r10556, %r10555};
	shf.l.wrap.b32 	%r10557, %r10553, %r10554, 30;
	shf.l.wrap.b32 	%r10558, %r10554, %r10553, 30;
	mov.b64 	%rd1487, {%r10558, %r10557};
	xor.b64  	%rd1488, %rd1487, %rd1486;
	shf.l.wrap.b32 	%r10559, %r10553, %r10554, 25;
	shf.l.wrap.b32 	%r10560, %r10554, %r10553, 25;
	mov.b64 	%rd1489, {%r10560, %r10559};
	xor.b64  	%rd1490, %rd1488, %rd1489;
	xor.b64  	%rd1491, %rd1472, %rd1424;
	xor.b64  	%rd1492, %rd1472, %rd1448;
	and.b64  	%rd1493, %rd1492, %rd1491;
	xor.b64  	%rd1494, %rd1493, %rd1472;
	add.s64 	%rd1495, %rd1484, %rd1494;
	add.s64 	%rd1496, %rd1495, %rd1490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10561,%dummy}, %rd1485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10562}, %rd1485;
	}
	shf.r.wrap.b32 	%r10563, %r10562, %r10561, 14;
	shf.r.wrap.b32 	%r10564, %r10561, %r10562, 14;
	mov.b64 	%rd1497, {%r10564, %r10563};
	shf.r.wrap.b32 	%r10565, %r10562, %r10561, 18;
	shf.r.wrap.b32 	%r10566, %r10561, %r10562, 18;
	mov.b64 	%rd1498, {%r10566, %r10565};
	xor.b64  	%rd1499, %rd1498, %rd1497;
	shf.l.wrap.b32 	%r10567, %r10561, %r10562, 23;
	shf.l.wrap.b32 	%r10568, %r10562, %r10561, 23;
	mov.b64 	%rd1500, {%r10568, %r10567};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	xor.b64  	%rd1502, %rd1461, %rd1437;
	and.b64  	%rd1503, %rd1485, %rd1502;
	xor.b64  	%rd1504, %rd1503, %rd1437;
	add.s64 	%rd1505, %rd1413, %rd1202;
	add.s64 	%rd1506, %rd1505, %rd2805;
	add.s64 	%rd1507, %rd1506, %rd1504;
	add.s64 	%rd1508, %rd1507, %rd1501;
	add.s64 	%rd1509, %rd1508, %rd1424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10569,%dummy}, %rd1496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10570}, %rd1496;
	}
	shf.r.wrap.b32 	%r10571, %r10570, %r10569, 28;
	shf.r.wrap.b32 	%r10572, %r10569, %r10570, 28;
	mov.b64 	%rd1510, {%r10572, %r10571};
	shf.l.wrap.b32 	%r10573, %r10569, %r10570, 30;
	shf.l.wrap.b32 	%r10574, %r10570, %r10569, 30;
	mov.b64 	%rd1511, {%r10574, %r10573};
	xor.b64  	%rd1512, %rd1511, %rd1510;
	shf.l.wrap.b32 	%r10575, %r10569, %r10570, 25;
	shf.l.wrap.b32 	%r10576, %r10570, %r10569, 25;
	mov.b64 	%rd1513, {%r10576, %r10575};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	xor.b64  	%rd1515, %rd1496, %rd1448;
	xor.b64  	%rd1516, %rd1496, %rd1472;
	and.b64  	%rd1517, %rd1516, %rd1515;
	xor.b64  	%rd1518, %rd1517, %rd1496;
	add.s64 	%rd1519, %rd1508, %rd1518;
	add.s64 	%rd1520, %rd1519, %rd1514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10577,%dummy}, %rd1509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10578}, %rd1509;
	}
	shf.r.wrap.b32 	%r10579, %r10578, %r10577, 14;
	shf.r.wrap.b32 	%r10580, %r10577, %r10578, 14;
	mov.b64 	%rd1521, {%r10580, %r10579};
	shf.r.wrap.b32 	%r10581, %r10578, %r10577, 18;
	shf.r.wrap.b32 	%r10582, %r10577, %r10578, 18;
	mov.b64 	%rd1522, {%r10582, %r10581};
	xor.b64  	%rd1523, %rd1522, %rd1521;
	shf.l.wrap.b32 	%r10583, %r10577, %r10578, 23;
	shf.l.wrap.b32 	%r10584, %r10578, %r10577, 23;
	mov.b64 	%rd1524, {%r10584, %r10583};
	xor.b64  	%rd1525, %rd1523, %rd1524;
	xor.b64  	%rd1526, %rd1485, %rd1461;
	and.b64  	%rd1527, %rd1509, %rd1526;
	xor.b64  	%rd1528, %rd1527, %rd1461;
	add.s64 	%rd1529, %rd1437, %rd1215;
	add.s64 	%rd1530, %rd1529, %rd2806;
	add.s64 	%rd1531, %rd1530, %rd1528;
	add.s64 	%rd1532, %rd1531, %rd1525;
	add.s64 	%rd1533, %rd1532, %rd1448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10585,%dummy}, %rd1520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10586}, %rd1520;
	}
	shf.r.wrap.b32 	%r10587, %r10586, %r10585, 28;
	shf.r.wrap.b32 	%r10588, %r10585, %r10586, 28;
	mov.b64 	%rd1534, {%r10588, %r10587};
	shf.l.wrap.b32 	%r10589, %r10585, %r10586, 30;
	shf.l.wrap.b32 	%r10590, %r10586, %r10585, 30;
	mov.b64 	%rd1535, {%r10590, %r10589};
	xor.b64  	%rd1536, %rd1535, %rd1534;
	shf.l.wrap.b32 	%r10591, %r10585, %r10586, 25;
	shf.l.wrap.b32 	%r10592, %r10586, %r10585, 25;
	mov.b64 	%rd1537, {%r10592, %r10591};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	xor.b64  	%rd1539, %rd1520, %rd1472;
	xor.b64  	%rd1540, %rd1520, %rd1496;
	and.b64  	%rd1541, %rd1540, %rd1539;
	xor.b64  	%rd1542, %rd1541, %rd1520;
	add.s64 	%rd1543, %rd1532, %rd1542;
	add.s64 	%rd1544, %rd1543, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10593,%dummy}, %rd1533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10594}, %rd1533;
	}
	shf.r.wrap.b32 	%r10595, %r10594, %r10593, 14;
	shf.r.wrap.b32 	%r10596, %r10593, %r10594, 14;
	mov.b64 	%rd1545, {%r10596, %r10595};
	shf.r.wrap.b32 	%r10597, %r10594, %r10593, 18;
	shf.r.wrap.b32 	%r10598, %r10593, %r10594, 18;
	mov.b64 	%rd1546, {%r10598, %r10597};
	xor.b64  	%rd1547, %rd1546, %rd1545;
	shf.l.wrap.b32 	%r10599, %r10593, %r10594, 23;
	shf.l.wrap.b32 	%r10600, %r10594, %r10593, 23;
	mov.b64 	%rd1548, {%r10600, %r10599};
	xor.b64  	%rd1549, %rd1547, %rd1548;
	xor.b64  	%rd1550, %rd1509, %rd1485;
	and.b64  	%rd1551, %rd1533, %rd1550;
	xor.b64  	%rd1552, %rd1551, %rd1485;
	add.s64 	%rd1553, %rd1461, %rd1228;
	add.s64 	%rd1554, %rd1553, %rd2807;
	add.s64 	%rd1555, %rd1554, %rd1552;
	add.s64 	%rd1556, %rd1555, %rd1549;
	add.s64 	%rd1557, %rd1556, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10601,%dummy}, %rd1544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10602}, %rd1544;
	}
	shf.r.wrap.b32 	%r10603, %r10602, %r10601, 28;
	shf.r.wrap.b32 	%r10604, %r10601, %r10602, 28;
	mov.b64 	%rd1558, {%r10604, %r10603};
	shf.l.wrap.b32 	%r10605, %r10601, %r10602, 30;
	shf.l.wrap.b32 	%r10606, %r10602, %r10601, 30;
	mov.b64 	%rd1559, {%r10606, %r10605};
	xor.b64  	%rd1560, %rd1559, %rd1558;
	shf.l.wrap.b32 	%r10607, %r10601, %r10602, 25;
	shf.l.wrap.b32 	%r10608, %r10602, %r10601, 25;
	mov.b64 	%rd1561, {%r10608, %r10607};
	xor.b64  	%rd1562, %rd1560, %rd1561;
	xor.b64  	%rd1563, %rd1544, %rd1496;
	xor.b64  	%rd1564, %rd1544, %rd1520;
	and.b64  	%rd1565, %rd1564, %rd1563;
	xor.b64  	%rd1566, %rd1565, %rd1544;
	add.s64 	%rd1567, %rd1556, %rd1566;
	add.s64 	%rd1568, %rd1567, %rd1562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10609,%dummy}, %rd1557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10610}, %rd1557;
	}
	shf.r.wrap.b32 	%r10611, %r10610, %r10609, 14;
	shf.r.wrap.b32 	%r10612, %r10609, %r10610, 14;
	mov.b64 	%rd1569, {%r10612, %r10611};
	shf.r.wrap.b32 	%r10613, %r10610, %r10609, 18;
	shf.r.wrap.b32 	%r10614, %r10609, %r10610, 18;
	mov.b64 	%rd1570, {%r10614, %r10613};
	xor.b64  	%rd1571, %rd1570, %rd1569;
	shf.l.wrap.b32 	%r10615, %r10609, %r10610, 23;
	shf.l.wrap.b32 	%r10616, %r10610, %r10609, 23;
	mov.b64 	%rd1572, {%r10616, %r10615};
	xor.b64  	%rd1573, %rd1571, %rd1572;
	xor.b64  	%rd1574, %rd1533, %rd1509;
	and.b64  	%rd1575, %rd1557, %rd1574;
	xor.b64  	%rd1576, %rd1575, %rd1509;
	add.s64 	%rd1577, %rd1485, %rd1241;
	add.s64 	%rd1578, %rd1577, %rd2808;
	add.s64 	%rd1579, %rd1578, %rd1576;
	add.s64 	%rd1580, %rd1579, %rd1573;
	add.s64 	%rd1581, %rd1580, %rd1496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10617,%dummy}, %rd1568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10618}, %rd1568;
	}
	shf.r.wrap.b32 	%r10619, %r10618, %r10617, 28;
	shf.r.wrap.b32 	%r10620, %r10617, %r10618, 28;
	mov.b64 	%rd1582, {%r10620, %r10619};
	shf.l.wrap.b32 	%r10621, %r10617, %r10618, 30;
	shf.l.wrap.b32 	%r10622, %r10618, %r10617, 30;
	mov.b64 	%rd1583, {%r10622, %r10621};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	shf.l.wrap.b32 	%r10623, %r10617, %r10618, 25;
	shf.l.wrap.b32 	%r10624, %r10618, %r10617, 25;
	mov.b64 	%rd1585, {%r10624, %r10623};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	xor.b64  	%rd1587, %rd1568, %rd1520;
	xor.b64  	%rd1588, %rd1568, %rd1544;
	and.b64  	%rd1589, %rd1588, %rd1587;
	xor.b64  	%rd1590, %rd1589, %rd1568;
	add.s64 	%rd1591, %rd1580, %rd1590;
	add.s64 	%rd1592, %rd1591, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10625,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10626}, %rd1581;
	}
	shf.r.wrap.b32 	%r10627, %r10626, %r10625, 14;
	shf.r.wrap.b32 	%r10628, %r10625, %r10626, 14;
	mov.b64 	%rd1593, {%r10628, %r10627};
	shf.r.wrap.b32 	%r10629, %r10626, %r10625, 18;
	shf.r.wrap.b32 	%r10630, %r10625, %r10626, 18;
	mov.b64 	%rd1594, {%r10630, %r10629};
	xor.b64  	%rd1595, %rd1594, %rd1593;
	shf.l.wrap.b32 	%r10631, %r10625, %r10626, 23;
	shf.l.wrap.b32 	%r10632, %r10626, %r10625, 23;
	mov.b64 	%rd1596, {%r10632, %r10631};
	xor.b64  	%rd1597, %rd1595, %rd1596;
	xor.b64  	%rd1598, %rd1557, %rd1533;
	and.b64  	%rd1599, %rd1581, %rd1598;
	xor.b64  	%rd1600, %rd1599, %rd1533;
	add.s64 	%rd1601, %rd1509, %rd1254;
	add.s64 	%rd1602, %rd1601, %rd2809;
	add.s64 	%rd1603, %rd1602, %rd1600;
	add.s64 	%rd1604, %rd1603, %rd1597;
	add.s64 	%rd1605, %rd1604, %rd1520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10633,%dummy}, %rd1592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10634}, %rd1592;
	}
	shf.r.wrap.b32 	%r10635, %r10634, %r10633, 28;
	shf.r.wrap.b32 	%r10636, %r10633, %r10634, 28;
	mov.b64 	%rd1606, {%r10636, %r10635};
	shf.l.wrap.b32 	%r10637, %r10633, %r10634, 30;
	shf.l.wrap.b32 	%r10638, %r10634, %r10633, 30;
	mov.b64 	%rd1607, {%r10638, %r10637};
	xor.b64  	%rd1608, %rd1607, %rd1606;
	shf.l.wrap.b32 	%r10639, %r10633, %r10634, 25;
	shf.l.wrap.b32 	%r10640, %r10634, %r10633, 25;
	mov.b64 	%rd1609, {%r10640, %r10639};
	xor.b64  	%rd1610, %rd1608, %rd1609;
	xor.b64  	%rd1611, %rd1592, %rd1544;
	xor.b64  	%rd1612, %rd1592, %rd1568;
	and.b64  	%rd1613, %rd1612, %rd1611;
	xor.b64  	%rd1614, %rd1613, %rd1592;
	add.s64 	%rd1615, %rd1604, %rd1614;
	add.s64 	%rd1616, %rd1615, %rd1610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10641,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10642}, %rd1605;
	}
	shf.r.wrap.b32 	%r10643, %r10642, %r10641, 14;
	shf.r.wrap.b32 	%r10644, %r10641, %r10642, 14;
	mov.b64 	%rd1617, {%r10644, %r10643};
	shf.r.wrap.b32 	%r10645, %r10642, %r10641, 18;
	shf.r.wrap.b32 	%r10646, %r10641, %r10642, 18;
	mov.b64 	%rd1618, {%r10646, %r10645};
	xor.b64  	%rd1619, %rd1618, %rd1617;
	shf.l.wrap.b32 	%r10647, %r10641, %r10642, 23;
	shf.l.wrap.b32 	%r10648, %r10642, %r10641, 23;
	mov.b64 	%rd1620, {%r10648, %r10647};
	xor.b64  	%rd1621, %rd1619, %rd1620;
	xor.b64  	%rd1622, %rd1581, %rd1557;
	and.b64  	%rd1623, %rd1605, %rd1622;
	xor.b64  	%rd1624, %rd1623, %rd1557;
	add.s64 	%rd1625, %rd1533, %rd1267;
	add.s64 	%rd1626, %rd1625, %rd2810;
	add.s64 	%rd1627, %rd1626, %rd1624;
	add.s64 	%rd1628, %rd1627, %rd1621;
	add.s64 	%rd1629, %rd1628, %rd1544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10649,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10650}, %rd1616;
	}
	shf.r.wrap.b32 	%r10651, %r10650, %r10649, 28;
	shf.r.wrap.b32 	%r10652, %r10649, %r10650, 28;
	mov.b64 	%rd1630, {%r10652, %r10651};
	shf.l.wrap.b32 	%r10653, %r10649, %r10650, 30;
	shf.l.wrap.b32 	%r10654, %r10650, %r10649, 30;
	mov.b64 	%rd1631, {%r10654, %r10653};
	xor.b64  	%rd1632, %rd1631, %rd1630;
	shf.l.wrap.b32 	%r10655, %r10649, %r10650, 25;
	shf.l.wrap.b32 	%r10656, %r10650, %r10649, 25;
	mov.b64 	%rd1633, {%r10656, %r10655};
	xor.b64  	%rd1634, %rd1632, %rd1633;
	xor.b64  	%rd1635, %rd1616, %rd1568;
	xor.b64  	%rd1636, %rd1616, %rd1592;
	and.b64  	%rd1637, %rd1636, %rd1635;
	xor.b64  	%rd1638, %rd1637, %rd1616;
	add.s64 	%rd1639, %rd1628, %rd1638;
	add.s64 	%rd1640, %rd1639, %rd1634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10657,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10658}, %rd1629;
	}
	shf.r.wrap.b32 	%r10659, %r10658, %r10657, 14;
	shf.r.wrap.b32 	%r10660, %r10657, %r10658, 14;
	mov.b64 	%rd1641, {%r10660, %r10659};
	shf.r.wrap.b32 	%r10661, %r10658, %r10657, 18;
	shf.r.wrap.b32 	%r10662, %r10657, %r10658, 18;
	mov.b64 	%rd1642, {%r10662, %r10661};
	xor.b64  	%rd1643, %rd1642, %rd1641;
	shf.l.wrap.b32 	%r10663, %r10657, %r10658, 23;
	shf.l.wrap.b32 	%r10664, %r10658, %r10657, 23;
	mov.b64 	%rd1644, {%r10664, %r10663};
	xor.b64  	%rd1645, %rd1643, %rd1644;
	xor.b64  	%rd1646, %rd1605, %rd1581;
	and.b64  	%rd1647, %rd1629, %rd1646;
	xor.b64  	%rd1648, %rd1647, %rd1581;
	add.s64 	%rd1649, %rd1557, %rd1280;
	add.s64 	%rd1650, %rd1649, %rd2811;
	add.s64 	%rd1651, %rd1650, %rd1648;
	add.s64 	%rd1652, %rd1651, %rd1645;
	add.s64 	%rd1653, %rd1652, %rd1568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10665,%dummy}, %rd1640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10666}, %rd1640;
	}
	shf.r.wrap.b32 	%r10667, %r10666, %r10665, 28;
	shf.r.wrap.b32 	%r10668, %r10665, %r10666, 28;
	mov.b64 	%rd1654, {%r10668, %r10667};
	shf.l.wrap.b32 	%r10669, %r10665, %r10666, 30;
	shf.l.wrap.b32 	%r10670, %r10666, %r10665, 30;
	mov.b64 	%rd1655, {%r10670, %r10669};
	xor.b64  	%rd1656, %rd1655, %rd1654;
	shf.l.wrap.b32 	%r10671, %r10665, %r10666, 25;
	shf.l.wrap.b32 	%r10672, %r10666, %r10665, 25;
	mov.b64 	%rd1657, {%r10672, %r10671};
	xor.b64  	%rd1658, %rd1656, %rd1657;
	xor.b64  	%rd1659, %rd1640, %rd1592;
	xor.b64  	%rd1660, %rd1640, %rd1616;
	and.b64  	%rd1661, %rd1660, %rd1659;
	xor.b64  	%rd1662, %rd1661, %rd1640;
	add.s64 	%rd1663, %rd1652, %rd1662;
	add.s64 	%rd1664, %rd1663, %rd1658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10673,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10674}, %rd1267;
	}
	shf.r.wrap.b32 	%r10675, %r10674, %r10673, 19;
	shf.r.wrap.b32 	%r10676, %r10673, %r10674, 19;
	mov.b64 	%rd1665, {%r10676, %r10675};
	shf.l.wrap.b32 	%r10677, %r10673, %r10674, 3;
	shf.l.wrap.b32 	%r10678, %r10674, %r10673, 3;
	mov.b64 	%rd1666, {%r10678, %r10677};
	shr.u64 	%rd1667, %rd1267, 6;
	xor.b64  	%rd1668, %rd1665, %rd1667;
	xor.b64  	%rd1669, %rd1668, %rd1666;
	shf.r.wrap.b32 	%r10679, %r10288, %r10287, 1;
	shf.r.wrap.b32 	%r10680, %r10287, %r10288, 1;
	mov.b64 	%rd1670, {%r10680, %r10679};
	shf.r.wrap.b32 	%r10681, %r10288, %r10287, 8;
	shf.r.wrap.b32 	%r10682, %r10287, %r10288, 8;
	mov.b64 	%rd1671, {%r10682, %r10681};
	shr.u64 	%rd1672, %rd1098, 7;
	xor.b64  	%rd1673, %rd1670, %rd1672;
	xor.b64  	%rd1674, %rd1673, %rd1671;
	add.s64 	%rd1675, %rd1085, %rd1202;
	add.s64 	%rd1676, %rd1675, %rd1669;
	add.s64 	%rd1677, %rd1676, %rd1674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10683,%dummy}, %rd1280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10684}, %rd1280;
	}
	shf.r.wrap.b32 	%r10685, %r10684, %r10683, 19;
	shf.r.wrap.b32 	%r10686, %r10683, %r10684, 19;
	mov.b64 	%rd1678, {%r10686, %r10685};
	shf.l.wrap.b32 	%r10687, %r10683, %r10684, 3;
	shf.l.wrap.b32 	%r10688, %r10684, %r10683, 3;
	mov.b64 	%rd1679, {%r10688, %r10687};
	shr.u64 	%rd1680, %rd1280, 6;
	xor.b64  	%rd1681, %rd1678, %rd1680;
	xor.b64  	%rd1682, %rd1681, %rd1679;
	shf.r.wrap.b32 	%r10689, %r10298, %r10297, 1;
	shf.r.wrap.b32 	%r10690, %r10297, %r10298, 1;
	mov.b64 	%rd1683, {%r10690, %r10689};
	shf.r.wrap.b32 	%r10691, %r10298, %r10297, 8;
	shf.r.wrap.b32 	%r10692, %r10297, %r10298, 8;
	mov.b64 	%rd1684, {%r10692, %r10691};
	shr.u64 	%rd1685, %rd1111, 7;
	xor.b64  	%rd1686, %rd1683, %rd1685;
	xor.b64  	%rd1687, %rd1686, %rd1684;
	add.s64 	%rd1688, %rd1098, %rd1215;
	add.s64 	%rd1689, %rd1688, %rd1682;
	add.s64 	%rd1690, %rd1689, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10693,%dummy}, %rd1677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10694}, %rd1677;
	}
	shf.r.wrap.b32 	%r10695, %r10694, %r10693, 19;
	shf.r.wrap.b32 	%r10696, %r10693, %r10694, 19;
	mov.b64 	%rd1691, {%r10696, %r10695};
	shf.l.wrap.b32 	%r10697, %r10693, %r10694, 3;
	shf.l.wrap.b32 	%r10698, %r10694, %r10693, 3;
	mov.b64 	%rd1692, {%r10698, %r10697};
	shr.u64 	%rd1693, %rd1677, 6;
	xor.b64  	%rd1694, %rd1691, %rd1693;
	xor.b64  	%rd1695, %rd1694, %rd1692;
	shf.r.wrap.b32 	%r10699, %r10308, %r10307, 1;
	shf.r.wrap.b32 	%r10700, %r10307, %r10308, 1;
	mov.b64 	%rd1696, {%r10700, %r10699};
	shf.r.wrap.b32 	%r10701, %r10308, %r10307, 8;
	shf.r.wrap.b32 	%r10702, %r10307, %r10308, 8;
	mov.b64 	%rd1697, {%r10702, %r10701};
	shr.u64 	%rd1698, %rd1124, 7;
	xor.b64  	%rd1699, %rd1696, %rd1698;
	xor.b64  	%rd1700, %rd1699, %rd1697;
	add.s64 	%rd1701, %rd1111, %rd1228;
	add.s64 	%rd1702, %rd1701, %rd1695;
	add.s64 	%rd1703, %rd1702, %rd1700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10703,%dummy}, %rd1690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10704}, %rd1690;
	}
	shf.r.wrap.b32 	%r10705, %r10704, %r10703, 19;
	shf.r.wrap.b32 	%r10706, %r10703, %r10704, 19;
	mov.b64 	%rd1704, {%r10706, %r10705};
	shf.l.wrap.b32 	%r10707, %r10703, %r10704, 3;
	shf.l.wrap.b32 	%r10708, %r10704, %r10703, 3;
	mov.b64 	%rd1705, {%r10708, %r10707};
	shr.u64 	%rd1706, %rd1690, 6;
	xor.b64  	%rd1707, %rd1704, %rd1706;
	xor.b64  	%rd1708, %rd1707, %rd1705;
	shf.r.wrap.b32 	%r10709, %r10318, %r10317, 1;
	shf.r.wrap.b32 	%r10710, %r10317, %r10318, 1;
	mov.b64 	%rd1709, {%r10710, %r10709};
	shf.r.wrap.b32 	%r10711, %r10318, %r10317, 8;
	shf.r.wrap.b32 	%r10712, %r10317, %r10318, 8;
	mov.b64 	%rd1710, {%r10712, %r10711};
	shr.u64 	%rd1711, %rd1137, 7;
	xor.b64  	%rd1712, %rd1709, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1710;
	add.s64 	%rd1714, %rd1124, %rd1241;
	add.s64 	%rd1715, %rd1714, %rd1708;
	add.s64 	%rd1716, %rd1715, %rd1713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10713,%dummy}, %rd1703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10714}, %rd1703;
	}
	shf.r.wrap.b32 	%r10715, %r10714, %r10713, 19;
	shf.r.wrap.b32 	%r10716, %r10713, %r10714, 19;
	mov.b64 	%rd1717, {%r10716, %r10715};
	shf.l.wrap.b32 	%r10717, %r10713, %r10714, 3;
	shf.l.wrap.b32 	%r10718, %r10714, %r10713, 3;
	mov.b64 	%rd1718, {%r10718, %r10717};
	shr.u64 	%rd1719, %rd1703, 6;
	xor.b64  	%rd1720, %rd1717, %rd1719;
	xor.b64  	%rd1721, %rd1720, %rd1718;
	shf.r.wrap.b32 	%r10719, %r10328, %r10327, 1;
	shf.r.wrap.b32 	%r10720, %r10327, %r10328, 1;
	mov.b64 	%rd1722, {%r10720, %r10719};
	shf.r.wrap.b32 	%r10721, %r10328, %r10327, 8;
	shf.r.wrap.b32 	%r10722, %r10327, %r10328, 8;
	mov.b64 	%rd1723, {%r10722, %r10721};
	shr.u64 	%rd1724, %rd1150, 7;
	xor.b64  	%rd1725, %rd1722, %rd1724;
	xor.b64  	%rd1726, %rd1725, %rd1723;
	add.s64 	%rd1727, %rd1137, %rd1254;
	add.s64 	%rd1728, %rd1727, %rd1721;
	add.s64 	%rd1729, %rd1728, %rd1726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10723,%dummy}, %rd1716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10724}, %rd1716;
	}
	shf.r.wrap.b32 	%r10725, %r10724, %r10723, 19;
	shf.r.wrap.b32 	%r10726, %r10723, %r10724, 19;
	mov.b64 	%rd1730, {%r10726, %r10725};
	shf.l.wrap.b32 	%r10727, %r10723, %r10724, 3;
	shf.l.wrap.b32 	%r10728, %r10724, %r10723, 3;
	mov.b64 	%rd1731, {%r10728, %r10727};
	shr.u64 	%rd1732, %rd1716, 6;
	xor.b64  	%rd1733, %rd1730, %rd1732;
	xor.b64  	%rd1734, %rd1733, %rd1731;
	shf.r.wrap.b32 	%r10729, %r10338, %r10337, 1;
	shf.r.wrap.b32 	%r10730, %r10337, %r10338, 1;
	mov.b64 	%rd1735, {%r10730, %r10729};
	shf.r.wrap.b32 	%r10731, %r10338, %r10337, 8;
	shf.r.wrap.b32 	%r10732, %r10337, %r10338, 8;
	mov.b64 	%rd1736, {%r10732, %r10731};
	shr.u64 	%rd1737, %rd1163, 7;
	xor.b64  	%rd1738, %rd1735, %rd1737;
	xor.b64  	%rd1739, %rd1738, %rd1736;
	add.s64 	%rd1740, %rd1150, %rd1267;
	add.s64 	%rd1741, %rd1740, %rd1734;
	add.s64 	%rd1742, %rd1741, %rd1739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10733,%dummy}, %rd1729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10734}, %rd1729;
	}
	shf.r.wrap.b32 	%r10735, %r10734, %r10733, 19;
	shf.r.wrap.b32 	%r10736, %r10733, %r10734, 19;
	mov.b64 	%rd1743, {%r10736, %r10735};
	shf.l.wrap.b32 	%r10737, %r10733, %r10734, 3;
	shf.l.wrap.b32 	%r10738, %r10734, %r10733, 3;
	mov.b64 	%rd1744, {%r10738, %r10737};
	shr.u64 	%rd1745, %rd1729, 6;
	xor.b64  	%rd1746, %rd1743, %rd1745;
	xor.b64  	%rd1747, %rd1746, %rd1744;
	shf.r.wrap.b32 	%r10739, %r10348, %r10347, 1;
	shf.r.wrap.b32 	%r10740, %r10347, %r10348, 1;
	mov.b64 	%rd1748, {%r10740, %r10739};
	shf.r.wrap.b32 	%r10741, %r10348, %r10347, 8;
	shf.r.wrap.b32 	%r10742, %r10347, %r10348, 8;
	mov.b64 	%rd1749, {%r10742, %r10741};
	shr.u64 	%rd1750, %rd1176, 7;
	xor.b64  	%rd1751, %rd1748, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1749;
	add.s64 	%rd1753, %rd1163, %rd1280;
	add.s64 	%rd1754, %rd1753, %rd1747;
	add.s64 	%rd1755, %rd1754, %rd1752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10743,%dummy}, %rd1742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10744}, %rd1742;
	}
	shf.r.wrap.b32 	%r10745, %r10744, %r10743, 19;
	shf.r.wrap.b32 	%r10746, %r10743, %r10744, 19;
	mov.b64 	%rd1756, {%r10746, %r10745};
	shf.l.wrap.b32 	%r10747, %r10743, %r10744, 3;
	shf.l.wrap.b32 	%r10748, %r10744, %r10743, 3;
	mov.b64 	%rd1757, {%r10748, %r10747};
	shr.u64 	%rd1758, %rd1742, 6;
	xor.b64  	%rd1759, %rd1756, %rd1758;
	xor.b64  	%rd1760, %rd1759, %rd1757;
	shf.r.wrap.b32 	%r10749, %r10358, %r10357, 1;
	shf.r.wrap.b32 	%r10750, %r10357, %r10358, 1;
	mov.b64 	%rd1761, {%r10750, %r10749};
	shf.r.wrap.b32 	%r10751, %r10358, %r10357, 8;
	shf.r.wrap.b32 	%r10752, %r10357, %r10358, 8;
	mov.b64 	%rd1762, {%r10752, %r10751};
	shr.u64 	%rd1763, %rd1189, 7;
	xor.b64  	%rd1764, %rd1761, %rd1763;
	xor.b64  	%rd1765, %rd1764, %rd1762;
	add.s64 	%rd1766, %rd1677, %rd1176;
	add.s64 	%rd1767, %rd1766, %rd1760;
	add.s64 	%rd1768, %rd1767, %rd1765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10753,%dummy}, %rd1755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10754}, %rd1755;
	}
	shf.r.wrap.b32 	%r10755, %r10754, %r10753, 19;
	shf.r.wrap.b32 	%r10756, %r10753, %r10754, 19;
	mov.b64 	%rd1769, {%r10756, %r10755};
	shf.l.wrap.b32 	%r10757, %r10753, %r10754, 3;
	shf.l.wrap.b32 	%r10758, %r10754, %r10753, 3;
	mov.b64 	%rd1770, {%r10758, %r10757};
	shr.u64 	%rd1771, %rd1755, 6;
	xor.b64  	%rd1772, %rd1769, %rd1771;
	xor.b64  	%rd1773, %rd1772, %rd1770;
	shf.r.wrap.b32 	%r10759, %r10368, %r10367, 1;
	shf.r.wrap.b32 	%r10760, %r10367, %r10368, 1;
	mov.b64 	%rd1774, {%r10760, %r10759};
	shf.r.wrap.b32 	%r10761, %r10368, %r10367, 8;
	shf.r.wrap.b32 	%r10762, %r10367, %r10368, 8;
	mov.b64 	%rd1775, {%r10762, %r10761};
	shr.u64 	%rd1776, %rd1202, 7;
	xor.b64  	%rd1777, %rd1774, %rd1776;
	xor.b64  	%rd1778, %rd1777, %rd1775;
	add.s64 	%rd1779, %rd1690, %rd1189;
	add.s64 	%rd1780, %rd1779, %rd1773;
	add.s64 	%rd1781, %rd1780, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10763,%dummy}, %rd1768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10764}, %rd1768;
	}
	shf.r.wrap.b32 	%r10765, %r10764, %r10763, 19;
	shf.r.wrap.b32 	%r10766, %r10763, %r10764, 19;
	mov.b64 	%rd1782, {%r10766, %r10765};
	shf.l.wrap.b32 	%r10767, %r10763, %r10764, 3;
	shf.l.wrap.b32 	%r10768, %r10764, %r10763, 3;
	mov.b64 	%rd1783, {%r10768, %r10767};
	shr.u64 	%rd1784, %rd1768, 6;
	xor.b64  	%rd1785, %rd1782, %rd1784;
	xor.b64  	%rd1786, %rd1785, %rd1783;
	shf.r.wrap.b32 	%r10769, %r10378, %r10377, 1;
	shf.r.wrap.b32 	%r10770, %r10377, %r10378, 1;
	mov.b64 	%rd1787, {%r10770, %r10769};
	shf.r.wrap.b32 	%r10771, %r10378, %r10377, 8;
	shf.r.wrap.b32 	%r10772, %r10377, %r10378, 8;
	mov.b64 	%rd1788, {%r10772, %r10771};
	shr.u64 	%rd1789, %rd1215, 7;
	xor.b64  	%rd1790, %rd1787, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1788;
	add.s64 	%rd1792, %rd1703, %rd1202;
	add.s64 	%rd1793, %rd1792, %rd1786;
	add.s64 	%rd1794, %rd1793, %rd1791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10773,%dummy}, %rd1781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10774}, %rd1781;
	}
	shf.r.wrap.b32 	%r10775, %r10774, %r10773, 19;
	shf.r.wrap.b32 	%r10776, %r10773, %r10774, 19;
	mov.b64 	%rd1795, {%r10776, %r10775};
	shf.l.wrap.b32 	%r10777, %r10773, %r10774, 3;
	shf.l.wrap.b32 	%r10778, %r10774, %r10773, 3;
	mov.b64 	%rd1796, {%r10778, %r10777};
	shr.u64 	%rd1797, %rd1781, 6;
	xor.b64  	%rd1798, %rd1795, %rd1797;
	xor.b64  	%rd1799, %rd1798, %rd1796;
	shf.r.wrap.b32 	%r10779, %r10388, %r10387, 1;
	shf.r.wrap.b32 	%r10780, %r10387, %r10388, 1;
	mov.b64 	%rd1800, {%r10780, %r10779};
	shf.r.wrap.b32 	%r10781, %r10388, %r10387, 8;
	shf.r.wrap.b32 	%r10782, %r10387, %r10388, 8;
	mov.b64 	%rd1801, {%r10782, %r10781};
	shr.u64 	%rd1802, %rd1228, 7;
	xor.b64  	%rd1803, %rd1800, %rd1802;
	xor.b64  	%rd1804, %rd1803, %rd1801;
	add.s64 	%rd1805, %rd1716, %rd1215;
	add.s64 	%rd1806, %rd1805, %rd1799;
	add.s64 	%rd1807, %rd1806, %rd1804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10783,%dummy}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10784}, %rd1794;
	}
	shf.r.wrap.b32 	%r10785, %r10784, %r10783, 19;
	shf.r.wrap.b32 	%r10786, %r10783, %r10784, 19;
	mov.b64 	%rd1808, {%r10786, %r10785};
	shf.l.wrap.b32 	%r10787, %r10783, %r10784, 3;
	shf.l.wrap.b32 	%r10788, %r10784, %r10783, 3;
	mov.b64 	%rd1809, {%r10788, %r10787};
	shr.u64 	%rd1810, %rd1794, 6;
	xor.b64  	%rd1811, %rd1808, %rd1810;
	xor.b64  	%rd1812, %rd1811, %rd1809;
	shf.r.wrap.b32 	%r10789, %r10398, %r10397, 1;
	shf.r.wrap.b32 	%r10790, %r10397, %r10398, 1;
	mov.b64 	%rd1813, {%r10790, %r10789};
	shf.r.wrap.b32 	%r10791, %r10398, %r10397, 8;
	shf.r.wrap.b32 	%r10792, %r10397, %r10398, 8;
	mov.b64 	%rd1814, {%r10792, %r10791};
	shr.u64 	%rd1815, %rd1241, 7;
	xor.b64  	%rd1816, %rd1813, %rd1815;
	xor.b64  	%rd1817, %rd1816, %rd1814;
	add.s64 	%rd1818, %rd1729, %rd1228;
	add.s64 	%rd1819, %rd1818, %rd1812;
	add.s64 	%rd1820, %rd1819, %rd1817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10793,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10794}, %rd1807;
	}
	shf.r.wrap.b32 	%r10795, %r10794, %r10793, 19;
	shf.r.wrap.b32 	%r10796, %r10793, %r10794, 19;
	mov.b64 	%rd1821, {%r10796, %r10795};
	shf.l.wrap.b32 	%r10797, %r10793, %r10794, 3;
	shf.l.wrap.b32 	%r10798, %r10794, %r10793, 3;
	mov.b64 	%rd1822, {%r10798, %r10797};
	shr.u64 	%rd1823, %rd1807, 6;
	xor.b64  	%rd1824, %rd1821, %rd1823;
	xor.b64  	%rd1825, %rd1824, %rd1822;
	shf.r.wrap.b32 	%r10799, %r10408, %r10407, 1;
	shf.r.wrap.b32 	%r10800, %r10407, %r10408, 1;
	mov.b64 	%rd1826, {%r10800, %r10799};
	shf.r.wrap.b32 	%r10801, %r10408, %r10407, 8;
	shf.r.wrap.b32 	%r10802, %r10407, %r10408, 8;
	mov.b64 	%rd1827, {%r10802, %r10801};
	shr.u64 	%rd1828, %rd1254, 7;
	xor.b64  	%rd1829, %rd1826, %rd1828;
	xor.b64  	%rd1830, %rd1829, %rd1827;
	add.s64 	%rd1831, %rd1742, %rd1241;
	add.s64 	%rd1832, %rd1831, %rd1825;
	add.s64 	%rd1833, %rd1832, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10803,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10804}, %rd1820;
	}
	shf.r.wrap.b32 	%r10805, %r10804, %r10803, 19;
	shf.r.wrap.b32 	%r10806, %r10803, %r10804, 19;
	mov.b64 	%rd1834, {%r10806, %r10805};
	shf.l.wrap.b32 	%r10807, %r10803, %r10804, 3;
	shf.l.wrap.b32 	%r10808, %r10804, %r10803, 3;
	mov.b64 	%rd1835, {%r10808, %r10807};
	shr.u64 	%rd1836, %rd1820, 6;
	xor.b64  	%rd1837, %rd1834, %rd1836;
	xor.b64  	%rd1838, %rd1837, %rd1835;
	shf.r.wrap.b32 	%r10809, %r10674, %r10673, 1;
	shf.r.wrap.b32 	%r10810, %r10673, %r10674, 1;
	mov.b64 	%rd1839, {%r10810, %r10809};
	shf.r.wrap.b32 	%r10811, %r10674, %r10673, 8;
	shf.r.wrap.b32 	%r10812, %r10673, %r10674, 8;
	mov.b64 	%rd1840, {%r10812, %r10811};
	shr.u64 	%rd1841, %rd1267, 7;
	xor.b64  	%rd1842, %rd1839, %rd1841;
	xor.b64  	%rd1843, %rd1842, %rd1840;
	add.s64 	%rd1844, %rd1755, %rd1254;
	add.s64 	%rd1845, %rd1844, %rd1838;
	add.s64 	%rd1846, %rd1845, %rd1843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10813,%dummy}, %rd1833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10814}, %rd1833;
	}
	shf.r.wrap.b32 	%r10815, %r10814, %r10813, 19;
	shf.r.wrap.b32 	%r10816, %r10813, %r10814, 19;
	mov.b64 	%rd1847, {%r10816, %r10815};
	shf.l.wrap.b32 	%r10817, %r10813, %r10814, 3;
	shf.l.wrap.b32 	%r10818, %r10814, %r10813, 3;
	mov.b64 	%rd1848, {%r10818, %r10817};
	shr.u64 	%rd1849, %rd1833, 6;
	xor.b64  	%rd1850, %rd1847, %rd1849;
	xor.b64  	%rd1851, %rd1850, %rd1848;
	shf.r.wrap.b32 	%r10819, %r10684, %r10683, 1;
	shf.r.wrap.b32 	%r10820, %r10683, %r10684, 1;
	mov.b64 	%rd1852, {%r10820, %r10819};
	shf.r.wrap.b32 	%r10821, %r10684, %r10683, 8;
	shf.r.wrap.b32 	%r10822, %r10683, %r10684, 8;
	mov.b64 	%rd1853, {%r10822, %r10821};
	shr.u64 	%rd1854, %rd1280, 7;
	xor.b64  	%rd1855, %rd1852, %rd1854;
	xor.b64  	%rd1856, %rd1855, %rd1853;
	add.s64 	%rd1857, %rd1768, %rd1267;
	add.s64 	%rd1858, %rd1857, %rd1851;
	add.s64 	%rd1859, %rd1858, %rd1856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10823,%dummy}, %rd1846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10824}, %rd1846;
	}
	shf.r.wrap.b32 	%r10825, %r10824, %r10823, 19;
	shf.r.wrap.b32 	%r10826, %r10823, %r10824, 19;
	mov.b64 	%rd1860, {%r10826, %r10825};
	shf.l.wrap.b32 	%r10827, %r10823, %r10824, 3;
	shf.l.wrap.b32 	%r10828, %r10824, %r10823, 3;
	mov.b64 	%rd1861, {%r10828, %r10827};
	shr.u64 	%rd1862, %rd1846, 6;
	xor.b64  	%rd1863, %rd1860, %rd1862;
	xor.b64  	%rd1864, %rd1863, %rd1861;
	shf.r.wrap.b32 	%r10829, %r10694, %r10693, 1;
	shf.r.wrap.b32 	%r10830, %r10693, %r10694, 1;
	mov.b64 	%rd1865, {%r10830, %r10829};
	shf.r.wrap.b32 	%r10831, %r10694, %r10693, 8;
	shf.r.wrap.b32 	%r10832, %r10693, %r10694, 8;
	mov.b64 	%rd1866, {%r10832, %r10831};
	shr.u64 	%rd1867, %rd1677, 7;
	xor.b64  	%rd1868, %rd1865, %rd1867;
	xor.b64  	%rd1869, %rd1868, %rd1866;
	add.s64 	%rd1870, %rd1781, %rd1280;
	add.s64 	%rd1871, %rd1870, %rd1864;
	add.s64 	%rd1872, %rd1871, %rd1869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10833,%dummy}, %rd1653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10834}, %rd1653;
	}
	shf.r.wrap.b32 	%r10835, %r10834, %r10833, 14;
	shf.r.wrap.b32 	%r10836, %r10833, %r10834, 14;
	mov.b64 	%rd1873, {%r10836, %r10835};
	shf.r.wrap.b32 	%r10837, %r10834, %r10833, 18;
	shf.r.wrap.b32 	%r10838, %r10833, %r10834, 18;
	mov.b64 	%rd1874, {%r10838, %r10837};
	xor.b64  	%rd1875, %rd1874, %rd1873;
	shf.l.wrap.b32 	%r10839, %r10833, %r10834, 23;
	shf.l.wrap.b32 	%r10840, %r10834, %r10833, 23;
	mov.b64 	%rd1876, {%r10840, %r10839};
	xor.b64  	%rd1877, %rd1875, %rd1876;
	xor.b64  	%rd1878, %rd1605, %rd1629;
	and.b64  	%rd1879, %rd1878, %rd1653;
	xor.b64  	%rd1880, %rd1879, %rd1605;
	add.s64 	%rd1881, %rd1880, %rd1581;
	add.s64 	%rd1882, %rd1881, %rd1677;
	add.s64 	%rd1883, %rd1882, %rd2812;
	add.s64 	%rd1884, %rd1883, %rd1877;
	add.s64 	%rd1885, %rd1884, %rd1592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10841,%dummy}, %rd1664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10842}, %rd1664;
	}
	shf.r.wrap.b32 	%r10843, %r10842, %r10841, 28;
	shf.r.wrap.b32 	%r10844, %r10841, %r10842, 28;
	mov.b64 	%rd1886, {%r10844, %r10843};
	shf.l.wrap.b32 	%r10845, %r10841, %r10842, 30;
	shf.l.wrap.b32 	%r10846, %r10842, %r10841, 30;
	mov.b64 	%rd1887, {%r10846, %r10845};
	xor.b64  	%rd1888, %rd1887, %rd1886;
	shf.l.wrap.b32 	%r10847, %r10841, %r10842, 25;
	shf.l.wrap.b32 	%r10848, %r10842, %r10841, 25;
	mov.b64 	%rd1889, {%r10848, %r10847};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	xor.b64  	%rd1891, %rd1664, %rd1616;
	xor.b64  	%rd1892, %rd1664, %rd1640;
	and.b64  	%rd1893, %rd1892, %rd1891;
	xor.b64  	%rd1894, %rd1893, %rd1664;
	add.s64 	%rd1895, %rd1884, %rd1894;
	add.s64 	%rd1896, %rd1895, %rd1890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10849,%dummy}, %rd1885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10850}, %rd1885;
	}
	shf.r.wrap.b32 	%r10851, %r10850, %r10849, 14;
	shf.r.wrap.b32 	%r10852, %r10849, %r10850, 14;
	mov.b64 	%rd1897, {%r10852, %r10851};
	shf.r.wrap.b32 	%r10853, %r10850, %r10849, 18;
	shf.r.wrap.b32 	%r10854, %r10849, %r10850, 18;
	mov.b64 	%rd1898, {%r10854, %r10853};
	xor.b64  	%rd1899, %rd1898, %rd1897;
	shf.l.wrap.b32 	%r10855, %r10849, %r10850, 23;
	shf.l.wrap.b32 	%r10856, %r10850, %r10849, 23;
	mov.b64 	%rd1900, {%r10856, %r10855};
	xor.b64  	%rd1901, %rd1899, %rd1900;
	xor.b64  	%rd1902, %rd1629, %rd1653;
	and.b64  	%rd1903, %rd1885, %rd1902;
	xor.b64  	%rd1904, %rd1903, %rd1629;
	add.s64 	%rd1905, %rd1690, %rd1605;
	add.s64 	%rd1906, %rd1905, %rd2813;
	add.s64 	%rd1907, %rd1906, %rd1904;
	add.s64 	%rd1908, %rd1907, %rd1901;
	add.s64 	%rd1909, %rd1908, %rd1616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10857,%dummy}, %rd1896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10858}, %rd1896;
	}
	shf.r.wrap.b32 	%r10859, %r10858, %r10857, 28;
	shf.r.wrap.b32 	%r10860, %r10857, %r10858, 28;
	mov.b64 	%rd1910, {%r10860, %r10859};
	shf.l.wrap.b32 	%r10861, %r10857, %r10858, 30;
	shf.l.wrap.b32 	%r10862, %r10858, %r10857, 30;
	mov.b64 	%rd1911, {%r10862, %r10861};
	xor.b64  	%rd1912, %rd1911, %rd1910;
	shf.l.wrap.b32 	%r10863, %r10857, %r10858, 25;
	shf.l.wrap.b32 	%r10864, %r10858, %r10857, 25;
	mov.b64 	%rd1913, {%r10864, %r10863};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	xor.b64  	%rd1915, %rd1896, %rd1640;
	xor.b64  	%rd1916, %rd1896, %rd1664;
	and.b64  	%rd1917, %rd1916, %rd1915;
	xor.b64  	%rd1918, %rd1917, %rd1896;
	add.s64 	%rd1919, %rd1908, %rd1918;
	add.s64 	%rd1920, %rd1919, %rd1914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10865,%dummy}, %rd1909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10866}, %rd1909;
	}
	shf.r.wrap.b32 	%r10867, %r10866, %r10865, 14;
	shf.r.wrap.b32 	%r10868, %r10865, %r10866, 14;
	mov.b64 	%rd1921, {%r10868, %r10867};
	shf.r.wrap.b32 	%r10869, %r10866, %r10865, 18;
	shf.r.wrap.b32 	%r10870, %r10865, %r10866, 18;
	mov.b64 	%rd1922, {%r10870, %r10869};
	xor.b64  	%rd1923, %rd1922, %rd1921;
	shf.l.wrap.b32 	%r10871, %r10865, %r10866, 23;
	shf.l.wrap.b32 	%r10872, %r10866, %r10865, 23;
	mov.b64 	%rd1924, {%r10872, %r10871};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	xor.b64  	%rd1926, %rd1885, %rd1653;
	and.b64  	%rd1927, %rd1909, %rd1926;
	xor.b64  	%rd1928, %rd1927, %rd1653;
	add.s64 	%rd1929, %rd1703, %rd1629;
	add.s64 	%rd1930, %rd1929, %rd2814;
	add.s64 	%rd1931, %rd1930, %rd1928;
	add.s64 	%rd1932, %rd1931, %rd1925;
	add.s64 	%rd1933, %rd1932, %rd1640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10873,%dummy}, %rd1920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10874}, %rd1920;
	}
	shf.r.wrap.b32 	%r10875, %r10874, %r10873, 28;
	shf.r.wrap.b32 	%r10876, %r10873, %r10874, 28;
	mov.b64 	%rd1934, {%r10876, %r10875};
	shf.l.wrap.b32 	%r10877, %r10873, %r10874, 30;
	shf.l.wrap.b32 	%r10878, %r10874, %r10873, 30;
	mov.b64 	%rd1935, {%r10878, %r10877};
	xor.b64  	%rd1936, %rd1935, %rd1934;
	shf.l.wrap.b32 	%r10879, %r10873, %r10874, 25;
	shf.l.wrap.b32 	%r10880, %r10874, %r10873, 25;
	mov.b64 	%rd1937, {%r10880, %r10879};
	xor.b64  	%rd1938, %rd1936, %rd1937;
	xor.b64  	%rd1939, %rd1920, %rd1664;
	xor.b64  	%rd1940, %rd1920, %rd1896;
	and.b64  	%rd1941, %rd1940, %rd1939;
	xor.b64  	%rd1942, %rd1941, %rd1920;
	add.s64 	%rd1943, %rd1932, %rd1942;
	add.s64 	%rd1944, %rd1943, %rd1938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10881,%dummy}, %rd1933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10882}, %rd1933;
	}
	shf.r.wrap.b32 	%r10883, %r10882, %r10881, 14;
	shf.r.wrap.b32 	%r10884, %r10881, %r10882, 14;
	mov.b64 	%rd1945, {%r10884, %r10883};
	shf.r.wrap.b32 	%r10885, %r10882, %r10881, 18;
	shf.r.wrap.b32 	%r10886, %r10881, %r10882, 18;
	mov.b64 	%rd1946, {%r10886, %r10885};
	xor.b64  	%rd1947, %rd1946, %rd1945;
	shf.l.wrap.b32 	%r10887, %r10881, %r10882, 23;
	shf.l.wrap.b32 	%r10888, %r10882, %r10881, 23;
	mov.b64 	%rd1948, {%r10888, %r10887};
	xor.b64  	%rd1949, %rd1947, %rd1948;
	xor.b64  	%rd1950, %rd1909, %rd1885;
	and.b64  	%rd1951, %rd1933, %rd1950;
	xor.b64  	%rd1952, %rd1951, %rd1885;
	add.s64 	%rd1953, %rd1716, %rd1653;
	add.s64 	%rd1954, %rd1953, %rd2815;
	add.s64 	%rd1955, %rd1954, %rd1952;
	add.s64 	%rd1956, %rd1955, %rd1949;
	add.s64 	%rd1957, %rd1956, %rd1664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10889,%dummy}, %rd1944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10890}, %rd1944;
	}
	shf.r.wrap.b32 	%r10891, %r10890, %r10889, 28;
	shf.r.wrap.b32 	%r10892, %r10889, %r10890, 28;
	mov.b64 	%rd1958, {%r10892, %r10891};
	shf.l.wrap.b32 	%r10893, %r10889, %r10890, 30;
	shf.l.wrap.b32 	%r10894, %r10890, %r10889, 30;
	mov.b64 	%rd1959, {%r10894, %r10893};
	xor.b64  	%rd1960, %rd1959, %rd1958;
	shf.l.wrap.b32 	%r10895, %r10889, %r10890, 25;
	shf.l.wrap.b32 	%r10896, %r10890, %r10889, 25;
	mov.b64 	%rd1961, {%r10896, %r10895};
	xor.b64  	%rd1962, %rd1960, %rd1961;
	xor.b64  	%rd1963, %rd1944, %rd1896;
	xor.b64  	%rd1964, %rd1944, %rd1920;
	and.b64  	%rd1965, %rd1964, %rd1963;
	xor.b64  	%rd1966, %rd1965, %rd1944;
	add.s64 	%rd1967, %rd1956, %rd1966;
	add.s64 	%rd1968, %rd1967, %rd1962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10897,%dummy}, %rd1957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10898}, %rd1957;
	}
	shf.r.wrap.b32 	%r10899, %r10898, %r10897, 14;
	shf.r.wrap.b32 	%r10900, %r10897, %r10898, 14;
	mov.b64 	%rd1969, {%r10900, %r10899};
	shf.r.wrap.b32 	%r10901, %r10898, %r10897, 18;
	shf.r.wrap.b32 	%r10902, %r10897, %r10898, 18;
	mov.b64 	%rd1970, {%r10902, %r10901};
	xor.b64  	%rd1971, %rd1970, %rd1969;
	shf.l.wrap.b32 	%r10903, %r10897, %r10898, 23;
	shf.l.wrap.b32 	%r10904, %r10898, %r10897, 23;
	mov.b64 	%rd1972, {%r10904, %r10903};
	xor.b64  	%rd1973, %rd1971, %rd1972;
	xor.b64  	%rd1974, %rd1933, %rd1909;
	and.b64  	%rd1975, %rd1957, %rd1974;
	xor.b64  	%rd1976, %rd1975, %rd1909;
	add.s64 	%rd1977, %rd1885, %rd1729;
	add.s64 	%rd1978, %rd1977, %rd2816;
	add.s64 	%rd1979, %rd1978, %rd1976;
	add.s64 	%rd1980, %rd1979, %rd1973;
	add.s64 	%rd1981, %rd1980, %rd1896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10905,%dummy}, %rd1968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10906}, %rd1968;
	}
	shf.r.wrap.b32 	%r10907, %r10906, %r10905, 28;
	shf.r.wrap.b32 	%r10908, %r10905, %r10906, 28;
	mov.b64 	%rd1982, {%r10908, %r10907};
	shf.l.wrap.b32 	%r10909, %r10905, %r10906, 30;
	shf.l.wrap.b32 	%r10910, %r10906, %r10905, 30;
	mov.b64 	%rd1983, {%r10910, %r10909};
	xor.b64  	%rd1984, %rd1983, %rd1982;
	shf.l.wrap.b32 	%r10911, %r10905, %r10906, 25;
	shf.l.wrap.b32 	%r10912, %r10906, %r10905, 25;
	mov.b64 	%rd1985, {%r10912, %r10911};
	xor.b64  	%rd1986, %rd1984, %rd1985;
	xor.b64  	%rd1987, %rd1968, %rd1920;
	xor.b64  	%rd1988, %rd1968, %rd1944;
	and.b64  	%rd1989, %rd1988, %rd1987;
	xor.b64  	%rd1990, %rd1989, %rd1968;
	add.s64 	%rd1991, %rd1980, %rd1990;
	add.s64 	%rd1992, %rd1991, %rd1986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10913,%dummy}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10914}, %rd1981;
	}
	shf.r.wrap.b32 	%r10915, %r10914, %r10913, 14;
	shf.r.wrap.b32 	%r10916, %r10913, %r10914, 14;
	mov.b64 	%rd1993, {%r10916, %r10915};
	shf.r.wrap.b32 	%r10917, %r10914, %r10913, 18;
	shf.r.wrap.b32 	%r10918, %r10913, %r10914, 18;
	mov.b64 	%rd1994, {%r10918, %r10917};
	xor.b64  	%rd1995, %rd1994, %rd1993;
	shf.l.wrap.b32 	%r10919, %r10913, %r10914, 23;
	shf.l.wrap.b32 	%r10920, %r10914, %r10913, 23;
	mov.b64 	%rd1996, {%r10920, %r10919};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	xor.b64  	%rd1998, %rd1957, %rd1933;
	and.b64  	%rd1999, %rd1981, %rd1998;
	xor.b64  	%rd2000, %rd1999, %rd1933;
	add.s64 	%rd2001, %rd1909, %rd1742;
	add.s64 	%rd2002, %rd2001, %rd2817;
	add.s64 	%rd2003, %rd2002, %rd2000;
	add.s64 	%rd2004, %rd2003, %rd1997;
	add.s64 	%rd2005, %rd2004, %rd1920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10921,%dummy}, %rd1992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10922}, %rd1992;
	}
	shf.r.wrap.b32 	%r10923, %r10922, %r10921, 28;
	shf.r.wrap.b32 	%r10924, %r10921, %r10922, 28;
	mov.b64 	%rd2006, {%r10924, %r10923};
	shf.l.wrap.b32 	%r10925, %r10921, %r10922, 30;
	shf.l.wrap.b32 	%r10926, %r10922, %r10921, 30;
	mov.b64 	%rd2007, {%r10926, %r10925};
	xor.b64  	%rd2008, %rd2007, %rd2006;
	shf.l.wrap.b32 	%r10927, %r10921, %r10922, 25;
	shf.l.wrap.b32 	%r10928, %r10922, %r10921, 25;
	mov.b64 	%rd2009, {%r10928, %r10927};
	xor.b64  	%rd2010, %rd2008, %rd2009;
	xor.b64  	%rd2011, %rd1992, %rd1944;
	xor.b64  	%rd2012, %rd1992, %rd1968;
	and.b64  	%rd2013, %rd2012, %rd2011;
	xor.b64  	%rd2014, %rd2013, %rd1992;
	add.s64 	%rd2015, %rd2004, %rd2014;
	add.s64 	%rd2016, %rd2015, %rd2010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10929,%dummy}, %rd2005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10930}, %rd2005;
	}
	shf.r.wrap.b32 	%r10931, %r10930, %r10929, 14;
	shf.r.wrap.b32 	%r10932, %r10929, %r10930, 14;
	mov.b64 	%rd2017, {%r10932, %r10931};
	shf.r.wrap.b32 	%r10933, %r10930, %r10929, 18;
	shf.r.wrap.b32 	%r10934, %r10929, %r10930, 18;
	mov.b64 	%rd2018, {%r10934, %r10933};
	xor.b64  	%rd2019, %rd2018, %rd2017;
	shf.l.wrap.b32 	%r10935, %r10929, %r10930, 23;
	shf.l.wrap.b32 	%r10936, %r10930, %r10929, 23;
	mov.b64 	%rd2020, {%r10936, %r10935};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	xor.b64  	%rd2022, %rd1981, %rd1957;
	and.b64  	%rd2023, %rd2005, %rd2022;
	xor.b64  	%rd2024, %rd2023, %rd1957;
	add.s64 	%rd2025, %rd1933, %rd1755;
	add.s64 	%rd2026, %rd2025, %rd2818;
	add.s64 	%rd2027, %rd2026, %rd2024;
	add.s64 	%rd2028, %rd2027, %rd2021;
	add.s64 	%rd2029, %rd2028, %rd1944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10937,%dummy}, %rd2016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10938}, %rd2016;
	}
	shf.r.wrap.b32 	%r10939, %r10938, %r10937, 28;
	shf.r.wrap.b32 	%r10940, %r10937, %r10938, 28;
	mov.b64 	%rd2030, {%r10940, %r10939};
	shf.l.wrap.b32 	%r10941, %r10937, %r10938, 30;
	shf.l.wrap.b32 	%r10942, %r10938, %r10937, 30;
	mov.b64 	%rd2031, {%r10942, %r10941};
	xor.b64  	%rd2032, %rd2031, %rd2030;
	shf.l.wrap.b32 	%r10943, %r10937, %r10938, 25;
	shf.l.wrap.b32 	%r10944, %r10938, %r10937, 25;
	mov.b64 	%rd2033, {%r10944, %r10943};
	xor.b64  	%rd2034, %rd2032, %rd2033;
	xor.b64  	%rd2035, %rd2016, %rd1968;
	xor.b64  	%rd2036, %rd2016, %rd1992;
	and.b64  	%rd2037, %rd2036, %rd2035;
	xor.b64  	%rd2038, %rd2037, %rd2016;
	add.s64 	%rd2039, %rd2028, %rd2038;
	add.s64 	%rd2040, %rd2039, %rd2034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10945,%dummy}, %rd2029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10946}, %rd2029;
	}
	shf.r.wrap.b32 	%r10947, %r10946, %r10945, 14;
	shf.r.wrap.b32 	%r10948, %r10945, %r10946, 14;
	mov.b64 	%rd2041, {%r10948, %r10947};
	shf.r.wrap.b32 	%r10949, %r10946, %r10945, 18;
	shf.r.wrap.b32 	%r10950, %r10945, %r10946, 18;
	mov.b64 	%rd2042, {%r10950, %r10949};
	xor.b64  	%rd2043, %rd2042, %rd2041;
	shf.l.wrap.b32 	%r10951, %r10945, %r10946, 23;
	shf.l.wrap.b32 	%r10952, %r10946, %r10945, 23;
	mov.b64 	%rd2044, {%r10952, %r10951};
	xor.b64  	%rd2045, %rd2043, %rd2044;
	xor.b64  	%rd2046, %rd2005, %rd1981;
	and.b64  	%rd2047, %rd2029, %rd2046;
	xor.b64  	%rd2048, %rd2047, %rd1981;
	add.s64 	%rd2049, %rd1957, %rd1768;
	add.s64 	%rd2050, %rd2049, %rd2819;
	add.s64 	%rd2051, %rd2050, %rd2048;
	add.s64 	%rd2052, %rd2051, %rd2045;
	add.s64 	%rd2053, %rd2052, %rd1968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10953,%dummy}, %rd2040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10954}, %rd2040;
	}
	shf.r.wrap.b32 	%r10955, %r10954, %r10953, 28;
	shf.r.wrap.b32 	%r10956, %r10953, %r10954, 28;
	mov.b64 	%rd2054, {%r10956, %r10955};
	shf.l.wrap.b32 	%r10957, %r10953, %r10954, 30;
	shf.l.wrap.b32 	%r10958, %r10954, %r10953, 30;
	mov.b64 	%rd2055, {%r10958, %r10957};
	xor.b64  	%rd2056, %rd2055, %rd2054;
	shf.l.wrap.b32 	%r10959, %r10953, %r10954, 25;
	shf.l.wrap.b32 	%r10960, %r10954, %r10953, 25;
	mov.b64 	%rd2057, {%r10960, %r10959};
	xor.b64  	%rd2058, %rd2056, %rd2057;
	xor.b64  	%rd2059, %rd2040, %rd1992;
	xor.b64  	%rd2060, %rd2040, %rd2016;
	and.b64  	%rd2061, %rd2060, %rd2059;
	xor.b64  	%rd2062, %rd2061, %rd2040;
	add.s64 	%rd2063, %rd2052, %rd2062;
	add.s64 	%rd2064, %rd2063, %rd2058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10961,%dummy}, %rd2053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10962}, %rd2053;
	}
	shf.r.wrap.b32 	%r10963, %r10962, %r10961, 14;
	shf.r.wrap.b32 	%r10964, %r10961, %r10962, 14;
	mov.b64 	%rd2065, {%r10964, %r10963};
	shf.r.wrap.b32 	%r10965, %r10962, %r10961, 18;
	shf.r.wrap.b32 	%r10966, %r10961, %r10962, 18;
	mov.b64 	%rd2066, {%r10966, %r10965};
	xor.b64  	%rd2067, %rd2066, %rd2065;
	shf.l.wrap.b32 	%r10967, %r10961, %r10962, 23;
	shf.l.wrap.b32 	%r10968, %r10962, %r10961, 23;
	mov.b64 	%rd2068, {%r10968, %r10967};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	xor.b64  	%rd2070, %rd2029, %rd2005;
	and.b64  	%rd2071, %rd2053, %rd2070;
	xor.b64  	%rd2072, %rd2071, %rd2005;
	add.s64 	%rd2073, %rd1981, %rd1781;
	add.s64 	%rd2074, %rd2073, %rd2820;
	add.s64 	%rd2075, %rd2074, %rd2072;
	add.s64 	%rd2076, %rd2075, %rd2069;
	add.s64 	%rd2077, %rd2076, %rd1992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10969,%dummy}, %rd2064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10970}, %rd2064;
	}
	shf.r.wrap.b32 	%r10971, %r10970, %r10969, 28;
	shf.r.wrap.b32 	%r10972, %r10969, %r10970, 28;
	mov.b64 	%rd2078, {%r10972, %r10971};
	shf.l.wrap.b32 	%r10973, %r10969, %r10970, 30;
	shf.l.wrap.b32 	%r10974, %r10970, %r10969, 30;
	mov.b64 	%rd2079, {%r10974, %r10973};
	xor.b64  	%rd2080, %rd2079, %rd2078;
	shf.l.wrap.b32 	%r10975, %r10969, %r10970, 25;
	shf.l.wrap.b32 	%r10976, %r10970, %r10969, 25;
	mov.b64 	%rd2081, {%r10976, %r10975};
	xor.b64  	%rd2082, %rd2080, %rd2081;
	xor.b64  	%rd2083, %rd2064, %rd2016;
	xor.b64  	%rd2084, %rd2064, %rd2040;
	and.b64  	%rd2085, %rd2084, %rd2083;
	xor.b64  	%rd2086, %rd2085, %rd2064;
	add.s64 	%rd2087, %rd2076, %rd2086;
	add.s64 	%rd2088, %rd2087, %rd2082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10977,%dummy}, %rd2077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10978}, %rd2077;
	}
	shf.r.wrap.b32 	%r10979, %r10978, %r10977, 14;
	shf.r.wrap.b32 	%r10980, %r10977, %r10978, 14;
	mov.b64 	%rd2089, {%r10980, %r10979};
	shf.r.wrap.b32 	%r10981, %r10978, %r10977, 18;
	shf.r.wrap.b32 	%r10982, %r10977, %r10978, 18;
	mov.b64 	%rd2090, {%r10982, %r10981};
	xor.b64  	%rd2091, %rd2090, %rd2089;
	shf.l.wrap.b32 	%r10983, %r10977, %r10978, 23;
	shf.l.wrap.b32 	%r10984, %r10978, %r10977, 23;
	mov.b64 	%rd2092, {%r10984, %r10983};
	xor.b64  	%rd2093, %rd2091, %rd2092;
	xor.b64  	%rd2094, %rd2053, %rd2029;
	and.b64  	%rd2095, %rd2077, %rd2094;
	xor.b64  	%rd2096, %rd2095, %rd2029;
	add.s64 	%rd2097, %rd2005, %rd1794;
	add.s64 	%rd2098, %rd2097, %rd2821;
	add.s64 	%rd2099, %rd2098, %rd2096;
	add.s64 	%rd2100, %rd2099, %rd2093;
	add.s64 	%rd2101, %rd2100, %rd2016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10985,%dummy}, %rd2088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10986}, %rd2088;
	}
	shf.r.wrap.b32 	%r10987, %r10986, %r10985, 28;
	shf.r.wrap.b32 	%r10988, %r10985, %r10986, 28;
	mov.b64 	%rd2102, {%r10988, %r10987};
	shf.l.wrap.b32 	%r10989, %r10985, %r10986, 30;
	shf.l.wrap.b32 	%r10990, %r10986, %r10985, 30;
	mov.b64 	%rd2103, {%r10990, %r10989};
	xor.b64  	%rd2104, %rd2103, %rd2102;
	shf.l.wrap.b32 	%r10991, %r10985, %r10986, 25;
	shf.l.wrap.b32 	%r10992, %r10986, %r10985, 25;
	mov.b64 	%rd2105, {%r10992, %r10991};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	xor.b64  	%rd2107, %rd2088, %rd2040;
	xor.b64  	%rd2108, %rd2088, %rd2064;
	and.b64  	%rd2109, %rd2108, %rd2107;
	xor.b64  	%rd2110, %rd2109, %rd2088;
	add.s64 	%rd2111, %rd2100, %rd2110;
	add.s64 	%rd2112, %rd2111, %rd2106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10993,%dummy}, %rd2101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10994}, %rd2101;
	}
	shf.r.wrap.b32 	%r10995, %r10994, %r10993, 14;
	shf.r.wrap.b32 	%r10996, %r10993, %r10994, 14;
	mov.b64 	%rd2113, {%r10996, %r10995};
	shf.r.wrap.b32 	%r10997, %r10994, %r10993, 18;
	shf.r.wrap.b32 	%r10998, %r10993, %r10994, 18;
	mov.b64 	%rd2114, {%r10998, %r10997};
	xor.b64  	%rd2115, %rd2114, %rd2113;
	shf.l.wrap.b32 	%r10999, %r10993, %r10994, 23;
	shf.l.wrap.b32 	%r11000, %r10994, %r10993, 23;
	mov.b64 	%rd2116, {%r11000, %r10999};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	xor.b64  	%rd2118, %rd2077, %rd2053;
	and.b64  	%rd2119, %rd2101, %rd2118;
	xor.b64  	%rd2120, %rd2119, %rd2053;
	add.s64 	%rd2121, %rd2029, %rd1807;
	add.s64 	%rd2122, %rd2121, %rd2822;
	add.s64 	%rd2123, %rd2122, %rd2120;
	add.s64 	%rd2124, %rd2123, %rd2117;
	add.s64 	%rd2125, %rd2124, %rd2040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11001,%dummy}, %rd2112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11002}, %rd2112;
	}
	shf.r.wrap.b32 	%r11003, %r11002, %r11001, 28;
	shf.r.wrap.b32 	%r11004, %r11001, %r11002, 28;
	mov.b64 	%rd2126, {%r11004, %r11003};
	shf.l.wrap.b32 	%r11005, %r11001, %r11002, 30;
	shf.l.wrap.b32 	%r11006, %r11002, %r11001, 30;
	mov.b64 	%rd2127, {%r11006, %r11005};
	xor.b64  	%rd2128, %rd2127, %rd2126;
	shf.l.wrap.b32 	%r11007, %r11001, %r11002, 25;
	shf.l.wrap.b32 	%r11008, %r11002, %r11001, 25;
	mov.b64 	%rd2129, {%r11008, %r11007};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	xor.b64  	%rd2131, %rd2112, %rd2064;
	xor.b64  	%rd2132, %rd2112, %rd2088;
	and.b64  	%rd2133, %rd2132, %rd2131;
	xor.b64  	%rd2134, %rd2133, %rd2112;
	add.s64 	%rd2135, %rd2124, %rd2134;
	add.s64 	%rd2136, %rd2135, %rd2130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11009,%dummy}, %rd2125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11010}, %rd2125;
	}
	shf.r.wrap.b32 	%r11011, %r11010, %r11009, 14;
	shf.r.wrap.b32 	%r11012, %r11009, %r11010, 14;
	mov.b64 	%rd2137, {%r11012, %r11011};
	shf.r.wrap.b32 	%r11013, %r11010, %r11009, 18;
	shf.r.wrap.b32 	%r11014, %r11009, %r11010, 18;
	mov.b64 	%rd2138, {%r11014, %r11013};
	xor.b64  	%rd2139, %rd2138, %rd2137;
	shf.l.wrap.b32 	%r11015, %r11009, %r11010, 23;
	shf.l.wrap.b32 	%r11016, %r11010, %r11009, 23;
	mov.b64 	%rd2140, {%r11016, %r11015};
	xor.b64  	%rd2141, %rd2139, %rd2140;
	xor.b64  	%rd2142, %rd2101, %rd2077;
	and.b64  	%rd2143, %rd2125, %rd2142;
	xor.b64  	%rd2144, %rd2143, %rd2077;
	add.s64 	%rd2145, %rd2053, %rd1820;
	add.s64 	%rd2146, %rd2145, %rd2823;
	add.s64 	%rd2147, %rd2146, %rd2144;
	add.s64 	%rd2148, %rd2147, %rd2141;
	add.s64 	%rd2149, %rd2148, %rd2064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11017,%dummy}, %rd2136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11018}, %rd2136;
	}
	shf.r.wrap.b32 	%r11019, %r11018, %r11017, 28;
	shf.r.wrap.b32 	%r11020, %r11017, %r11018, 28;
	mov.b64 	%rd2150, {%r11020, %r11019};
	shf.l.wrap.b32 	%r11021, %r11017, %r11018, 30;
	shf.l.wrap.b32 	%r11022, %r11018, %r11017, 30;
	mov.b64 	%rd2151, {%r11022, %r11021};
	xor.b64  	%rd2152, %rd2151, %rd2150;
	shf.l.wrap.b32 	%r11023, %r11017, %r11018, 25;
	shf.l.wrap.b32 	%r11024, %r11018, %r11017, 25;
	mov.b64 	%rd2153, {%r11024, %r11023};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	xor.b64  	%rd2155, %rd2136, %rd2088;
	xor.b64  	%rd2156, %rd2136, %rd2112;
	and.b64  	%rd2157, %rd2156, %rd2155;
	xor.b64  	%rd2158, %rd2157, %rd2136;
	add.s64 	%rd2159, %rd2148, %rd2158;
	add.s64 	%rd2160, %rd2159, %rd2154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11025,%dummy}, %rd2149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11026}, %rd2149;
	}
	shf.r.wrap.b32 	%r11027, %r11026, %r11025, 14;
	shf.r.wrap.b32 	%r11028, %r11025, %r11026, 14;
	mov.b64 	%rd2161, {%r11028, %r11027};
	shf.r.wrap.b32 	%r11029, %r11026, %r11025, 18;
	shf.r.wrap.b32 	%r11030, %r11025, %r11026, 18;
	mov.b64 	%rd2162, {%r11030, %r11029};
	xor.b64  	%rd2163, %rd2162, %rd2161;
	shf.l.wrap.b32 	%r11031, %r11025, %r11026, 23;
	shf.l.wrap.b32 	%r11032, %r11026, %r11025, 23;
	mov.b64 	%rd2164, {%r11032, %r11031};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	xor.b64  	%rd2166, %rd2125, %rd2101;
	and.b64  	%rd2167, %rd2149, %rd2166;
	xor.b64  	%rd2168, %rd2167, %rd2101;
	add.s64 	%rd2169, %rd2077, %rd1833;
	add.s64 	%rd2170, %rd2169, %rd2824;
	add.s64 	%rd2171, %rd2170, %rd2168;
	add.s64 	%rd2172, %rd2171, %rd2165;
	add.s64 	%rd2173, %rd2172, %rd2088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11033,%dummy}, %rd2160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11034}, %rd2160;
	}
	shf.r.wrap.b32 	%r11035, %r11034, %r11033, 28;
	shf.r.wrap.b32 	%r11036, %r11033, %r11034, 28;
	mov.b64 	%rd2174, {%r11036, %r11035};
	shf.l.wrap.b32 	%r11037, %r11033, %r11034, 30;
	shf.l.wrap.b32 	%r11038, %r11034, %r11033, 30;
	mov.b64 	%rd2175, {%r11038, %r11037};
	xor.b64  	%rd2176, %rd2175, %rd2174;
	shf.l.wrap.b32 	%r11039, %r11033, %r11034, 25;
	shf.l.wrap.b32 	%r11040, %r11034, %r11033, 25;
	mov.b64 	%rd2177, {%r11040, %r11039};
	xor.b64  	%rd2178, %rd2176, %rd2177;
	xor.b64  	%rd2179, %rd2160, %rd2112;
	xor.b64  	%rd2180, %rd2160, %rd2136;
	and.b64  	%rd2181, %rd2180, %rd2179;
	xor.b64  	%rd2182, %rd2181, %rd2160;
	add.s64 	%rd2183, %rd2172, %rd2182;
	add.s64 	%rd2184, %rd2183, %rd2178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11041,%dummy}, %rd2173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11042}, %rd2173;
	}
	shf.r.wrap.b32 	%r11043, %r11042, %r11041, 14;
	shf.r.wrap.b32 	%r11044, %r11041, %r11042, 14;
	mov.b64 	%rd2185, {%r11044, %r11043};
	shf.r.wrap.b32 	%r11045, %r11042, %r11041, 18;
	shf.r.wrap.b32 	%r11046, %r11041, %r11042, 18;
	mov.b64 	%rd2186, {%r11046, %r11045};
	xor.b64  	%rd2187, %rd2186, %rd2185;
	shf.l.wrap.b32 	%r11047, %r11041, %r11042, 23;
	shf.l.wrap.b32 	%r11048, %r11042, %r11041, 23;
	mov.b64 	%rd2188, {%r11048, %r11047};
	xor.b64  	%rd2189, %rd2187, %rd2188;
	xor.b64  	%rd2190, %rd2149, %rd2125;
	and.b64  	%rd2191, %rd2173, %rd2190;
	xor.b64  	%rd2192, %rd2191, %rd2125;
	add.s64 	%rd2193, %rd2101, %rd1846;
	add.s64 	%rd2194, %rd2193, %rd2825;
	add.s64 	%rd2195, %rd2194, %rd2192;
	add.s64 	%rd2196, %rd2195, %rd2189;
	add.s64 	%rd2197, %rd2196, %rd2112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11049,%dummy}, %rd2184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11050}, %rd2184;
	}
	shf.r.wrap.b32 	%r11051, %r11050, %r11049, 28;
	shf.r.wrap.b32 	%r11052, %r11049, %r11050, 28;
	mov.b64 	%rd2198, {%r11052, %r11051};
	shf.l.wrap.b32 	%r11053, %r11049, %r11050, 30;
	shf.l.wrap.b32 	%r11054, %r11050, %r11049, 30;
	mov.b64 	%rd2199, {%r11054, %r11053};
	xor.b64  	%rd2200, %rd2199, %rd2198;
	shf.l.wrap.b32 	%r11055, %r11049, %r11050, 25;
	shf.l.wrap.b32 	%r11056, %r11050, %r11049, 25;
	mov.b64 	%rd2201, {%r11056, %r11055};
	xor.b64  	%rd2202, %rd2200, %rd2201;
	xor.b64  	%rd2203, %rd2184, %rd2136;
	xor.b64  	%rd2204, %rd2184, %rd2160;
	and.b64  	%rd2205, %rd2204, %rd2203;
	xor.b64  	%rd2206, %rd2205, %rd2184;
	add.s64 	%rd2207, %rd2196, %rd2206;
	add.s64 	%rd2208, %rd2207, %rd2202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11057,%dummy}, %rd2197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11058}, %rd2197;
	}
	shf.r.wrap.b32 	%r11059, %r11058, %r11057, 14;
	shf.r.wrap.b32 	%r11060, %r11057, %r11058, 14;
	mov.b64 	%rd2209, {%r11060, %r11059};
	shf.r.wrap.b32 	%r11061, %r11058, %r11057, 18;
	shf.r.wrap.b32 	%r11062, %r11057, %r11058, 18;
	mov.b64 	%rd2210, {%r11062, %r11061};
	xor.b64  	%rd2211, %rd2210, %rd2209;
	shf.l.wrap.b32 	%r11063, %r11057, %r11058, 23;
	shf.l.wrap.b32 	%r11064, %r11058, %r11057, 23;
	mov.b64 	%rd2212, {%r11064, %r11063};
	xor.b64  	%rd2213, %rd2211, %rd2212;
	xor.b64  	%rd2214, %rd2173, %rd2149;
	and.b64  	%rd2215, %rd2197, %rd2214;
	xor.b64  	%rd2216, %rd2215, %rd2149;
	add.s64 	%rd2217, %rd2125, %rd1859;
	add.s64 	%rd2218, %rd2217, %rd2826;
	add.s64 	%rd2219, %rd2218, %rd2216;
	add.s64 	%rd2220, %rd2219, %rd2213;
	add.s64 	%rd2221, %rd2220, %rd2136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11065,%dummy}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11066}, %rd2208;
	}
	shf.r.wrap.b32 	%r11067, %r11066, %r11065, 28;
	shf.r.wrap.b32 	%r11068, %r11065, %r11066, 28;
	mov.b64 	%rd2222, {%r11068, %r11067};
	shf.l.wrap.b32 	%r11069, %r11065, %r11066, 30;
	shf.l.wrap.b32 	%r11070, %r11066, %r11065, 30;
	mov.b64 	%rd2223, {%r11070, %r11069};
	xor.b64  	%rd2224, %rd2223, %rd2222;
	shf.l.wrap.b32 	%r11071, %r11065, %r11066, 25;
	shf.l.wrap.b32 	%r11072, %r11066, %r11065, 25;
	mov.b64 	%rd2225, {%r11072, %r11071};
	xor.b64  	%rd2226, %rd2224, %rd2225;
	xor.b64  	%rd2227, %rd2208, %rd2160;
	xor.b64  	%rd2228, %rd2208, %rd2184;
	and.b64  	%rd2229, %rd2228, %rd2227;
	xor.b64  	%rd2230, %rd2229, %rd2208;
	add.s64 	%rd2231, %rd2220, %rd2230;
	add.s64 	%rd2232, %rd2231, %rd2226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11073,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11074}, %rd2221;
	}
	shf.r.wrap.b32 	%r11075, %r11074, %r11073, 14;
	shf.r.wrap.b32 	%r11076, %r11073, %r11074, 14;
	mov.b64 	%rd2233, {%r11076, %r11075};
	shf.r.wrap.b32 	%r11077, %r11074, %r11073, 18;
	shf.r.wrap.b32 	%r11078, %r11073, %r11074, 18;
	mov.b64 	%rd2234, {%r11078, %r11077};
	xor.b64  	%rd2235, %rd2234, %rd2233;
	shf.l.wrap.b32 	%r11079, %r11073, %r11074, 23;
	shf.l.wrap.b32 	%r11080, %r11074, %r11073, 23;
	mov.b64 	%rd2236, {%r11080, %r11079};
	xor.b64  	%rd2237, %rd2235, %rd2236;
	xor.b64  	%rd2238, %rd2197, %rd2173;
	and.b64  	%rd2239, %rd2221, %rd2238;
	xor.b64  	%rd2240, %rd2239, %rd2173;
	add.s64 	%rd2241, %rd2149, %rd1872;
	add.s64 	%rd2242, %rd2241, %rd2827;
	add.s64 	%rd2243, %rd2242, %rd2240;
	add.s64 	%rd2244, %rd2243, %rd2237;
	add.s64 	%rd2245, %rd2244, %rd2160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11081,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11082}, %rd2232;
	}
	shf.r.wrap.b32 	%r11083, %r11082, %r11081, 28;
	shf.r.wrap.b32 	%r11084, %r11081, %r11082, 28;
	mov.b64 	%rd2246, {%r11084, %r11083};
	shf.l.wrap.b32 	%r11085, %r11081, %r11082, 30;
	shf.l.wrap.b32 	%r11086, %r11082, %r11081, 30;
	mov.b64 	%rd2247, {%r11086, %r11085};
	xor.b64  	%rd2248, %rd2247, %rd2246;
	shf.l.wrap.b32 	%r11087, %r11081, %r11082, 25;
	shf.l.wrap.b32 	%r11088, %r11082, %r11081, 25;
	mov.b64 	%rd2249, {%r11088, %r11087};
	xor.b64  	%rd2250, %rd2248, %rd2249;
	xor.b64  	%rd2251, %rd2232, %rd2184;
	xor.b64  	%rd2252, %rd2232, %rd2208;
	and.b64  	%rd2253, %rd2252, %rd2251;
	xor.b64  	%rd2254, %rd2253, %rd2232;
	add.s64 	%rd2255, %rd2244, %rd2254;
	add.s64 	%rd2256, %rd2255, %rd2250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11089,%dummy}, %rd1859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11090}, %rd1859;
	}
	shf.r.wrap.b32 	%r11091, %r11090, %r11089, 19;
	shf.r.wrap.b32 	%r11092, %r11089, %r11090, 19;
	mov.b64 	%rd2257, {%r11092, %r11091};
	shf.l.wrap.b32 	%r11093, %r11089, %r11090, 3;
	shf.l.wrap.b32 	%r11094, %r11090, %r11089, 3;
	mov.b64 	%rd2258, {%r11094, %r11093};
	shr.u64 	%rd2259, %rd1859, 6;
	xor.b64  	%rd2260, %rd2257, %rd2259;
	xor.b64  	%rd2261, %rd2260, %rd2258;
	shf.r.wrap.b32 	%r11095, %r10704, %r10703, 1;
	shf.r.wrap.b32 	%r11096, %r10703, %r10704, 1;
	mov.b64 	%rd2262, {%r11096, %r11095};
	shf.r.wrap.b32 	%r11097, %r10704, %r10703, 8;
	shf.r.wrap.b32 	%r11098, %r10703, %r10704, 8;
	mov.b64 	%rd2263, {%r11098, %r11097};
	shr.u64 	%rd2264, %rd1690, 7;
	xor.b64  	%rd2265, %rd2262, %rd2264;
	xor.b64  	%rd2266, %rd2265, %rd2263;
	add.s64 	%rd2267, %rd1677, %rd1794;
	add.s64 	%rd2268, %rd2267, %rd2261;
	add.s64 	%rd2269, %rd2268, %rd2266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11099,%dummy}, %rd1872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11100}, %rd1872;
	}
	shf.r.wrap.b32 	%r11101, %r11100, %r11099, 19;
	shf.r.wrap.b32 	%r11102, %r11099, %r11100, 19;
	mov.b64 	%rd2270, {%r11102, %r11101};
	shf.l.wrap.b32 	%r11103, %r11099, %r11100, 3;
	shf.l.wrap.b32 	%r11104, %r11100, %r11099, 3;
	mov.b64 	%rd2271, {%r11104, %r11103};
	shr.u64 	%rd2272, %rd1872, 6;
	xor.b64  	%rd2273, %rd2270, %rd2272;
	xor.b64  	%rd2274, %rd2273, %rd2271;
	shf.r.wrap.b32 	%r11105, %r10714, %r10713, 1;
	shf.r.wrap.b32 	%r11106, %r10713, %r10714, 1;
	mov.b64 	%rd2275, {%r11106, %r11105};
	shf.r.wrap.b32 	%r11107, %r10714, %r10713, 8;
	shf.r.wrap.b32 	%r11108, %r10713, %r10714, 8;
	mov.b64 	%rd2276, {%r11108, %r11107};
	shr.u64 	%rd2277, %rd1703, 7;
	xor.b64  	%rd2278, %rd2275, %rd2277;
	xor.b64  	%rd2279, %rd2278, %rd2276;
	add.s64 	%rd2280, %rd1690, %rd1807;
	add.s64 	%rd2281, %rd2280, %rd2274;
	add.s64 	%rd2282, %rd2281, %rd2279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11109,%dummy}, %rd2269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11110}, %rd2269;
	}
	shf.r.wrap.b32 	%r11111, %r11110, %r11109, 19;
	shf.r.wrap.b32 	%r11112, %r11109, %r11110, 19;
	mov.b64 	%rd2283, {%r11112, %r11111};
	shf.l.wrap.b32 	%r11113, %r11109, %r11110, 3;
	shf.l.wrap.b32 	%r11114, %r11110, %r11109, 3;
	mov.b64 	%rd2284, {%r11114, %r11113};
	shr.u64 	%rd2285, %rd2269, 6;
	xor.b64  	%rd2286, %rd2283, %rd2285;
	xor.b64  	%rd2287, %rd2286, %rd2284;
	shf.r.wrap.b32 	%r11115, %r10724, %r10723, 1;
	shf.r.wrap.b32 	%r11116, %r10723, %r10724, 1;
	mov.b64 	%rd2288, {%r11116, %r11115};
	shf.r.wrap.b32 	%r11117, %r10724, %r10723, 8;
	shf.r.wrap.b32 	%r11118, %r10723, %r10724, 8;
	mov.b64 	%rd2289, {%r11118, %r11117};
	shr.u64 	%rd2290, %rd1716, 7;
	xor.b64  	%rd2291, %rd2288, %rd2290;
	xor.b64  	%rd2292, %rd2291, %rd2289;
	add.s64 	%rd2293, %rd1703, %rd1820;
	add.s64 	%rd2294, %rd2293, %rd2287;
	add.s64 	%rd2295, %rd2294, %rd2292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11119,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11120}, %rd2282;
	}
	shf.r.wrap.b32 	%r11121, %r11120, %r11119, 19;
	shf.r.wrap.b32 	%r11122, %r11119, %r11120, 19;
	mov.b64 	%rd2296, {%r11122, %r11121};
	shf.l.wrap.b32 	%r11123, %r11119, %r11120, 3;
	shf.l.wrap.b32 	%r11124, %r11120, %r11119, 3;
	mov.b64 	%rd2297, {%r11124, %r11123};
	shr.u64 	%rd2298, %rd2282, 6;
	xor.b64  	%rd2299, %rd2296, %rd2298;
	xor.b64  	%rd2300, %rd2299, %rd2297;
	shf.r.wrap.b32 	%r11125, %r10734, %r10733, 1;
	shf.r.wrap.b32 	%r11126, %r10733, %r10734, 1;
	mov.b64 	%rd2301, {%r11126, %r11125};
	shf.r.wrap.b32 	%r11127, %r10734, %r10733, 8;
	shf.r.wrap.b32 	%r11128, %r10733, %r10734, 8;
	mov.b64 	%rd2302, {%r11128, %r11127};
	shr.u64 	%rd2303, %rd1729, 7;
	xor.b64  	%rd2304, %rd2301, %rd2303;
	xor.b64  	%rd2305, %rd2304, %rd2302;
	add.s64 	%rd2306, %rd1716, %rd1833;
	add.s64 	%rd2307, %rd2306, %rd2300;
	add.s64 	%rd2308, %rd2307, %rd2305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11129,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11130}, %rd2295;
	}
	shf.r.wrap.b32 	%r11131, %r11130, %r11129, 19;
	shf.r.wrap.b32 	%r11132, %r11129, %r11130, 19;
	mov.b64 	%rd2309, {%r11132, %r11131};
	shf.l.wrap.b32 	%r11133, %r11129, %r11130, 3;
	shf.l.wrap.b32 	%r11134, %r11130, %r11129, 3;
	mov.b64 	%rd2310, {%r11134, %r11133};
	shr.u64 	%rd2311, %rd2295, 6;
	xor.b64  	%rd2312, %rd2309, %rd2311;
	xor.b64  	%rd2313, %rd2312, %rd2310;
	shf.r.wrap.b32 	%r11135, %r10744, %r10743, 1;
	shf.r.wrap.b32 	%r11136, %r10743, %r10744, 1;
	mov.b64 	%rd2314, {%r11136, %r11135};
	shf.r.wrap.b32 	%r11137, %r10744, %r10743, 8;
	shf.r.wrap.b32 	%r11138, %r10743, %r10744, 8;
	mov.b64 	%rd2315, {%r11138, %r11137};
	shr.u64 	%rd2316, %rd1742, 7;
	xor.b64  	%rd2317, %rd2314, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2315;
	add.s64 	%rd2319, %rd1729, %rd1846;
	add.s64 	%rd2320, %rd2319, %rd2313;
	add.s64 	%rd2321, %rd2320, %rd2318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11139,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11140}, %rd2308;
	}
	shf.r.wrap.b32 	%r11141, %r11140, %r11139, 19;
	shf.r.wrap.b32 	%r11142, %r11139, %r11140, 19;
	mov.b64 	%rd2322, {%r11142, %r11141};
	shf.l.wrap.b32 	%r11143, %r11139, %r11140, 3;
	shf.l.wrap.b32 	%r11144, %r11140, %r11139, 3;
	mov.b64 	%rd2323, {%r11144, %r11143};
	shr.u64 	%rd2324, %rd2308, 6;
	xor.b64  	%rd2325, %rd2322, %rd2324;
	xor.b64  	%rd2326, %rd2325, %rd2323;
	shf.r.wrap.b32 	%r11145, %r10754, %r10753, 1;
	shf.r.wrap.b32 	%r11146, %r10753, %r10754, 1;
	mov.b64 	%rd2327, {%r11146, %r11145};
	shf.r.wrap.b32 	%r11147, %r10754, %r10753, 8;
	shf.r.wrap.b32 	%r11148, %r10753, %r10754, 8;
	mov.b64 	%rd2328, {%r11148, %r11147};
	shr.u64 	%rd2329, %rd1755, 7;
	xor.b64  	%rd2330, %rd2327, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd2328;
	add.s64 	%rd2332, %rd1742, %rd1859;
	add.s64 	%rd2333, %rd2332, %rd2326;
	add.s64 	%rd2334, %rd2333, %rd2331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11149,%dummy}, %rd2321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11150}, %rd2321;
	}
	shf.r.wrap.b32 	%r11151, %r11150, %r11149, 19;
	shf.r.wrap.b32 	%r11152, %r11149, %r11150, 19;
	mov.b64 	%rd2335, {%r11152, %r11151};
	shf.l.wrap.b32 	%r11153, %r11149, %r11150, 3;
	shf.l.wrap.b32 	%r11154, %r11150, %r11149, 3;
	mov.b64 	%rd2336, {%r11154, %r11153};
	shr.u64 	%rd2337, %rd2321, 6;
	xor.b64  	%rd2338, %rd2335, %rd2337;
	xor.b64  	%rd2339, %rd2338, %rd2336;
	shf.r.wrap.b32 	%r11155, %r10764, %r10763, 1;
	shf.r.wrap.b32 	%r11156, %r10763, %r10764, 1;
	mov.b64 	%rd2340, {%r11156, %r11155};
	shf.r.wrap.b32 	%r11157, %r10764, %r10763, 8;
	shf.r.wrap.b32 	%r11158, %r10763, %r10764, 8;
	mov.b64 	%rd2341, {%r11158, %r11157};
	shr.u64 	%rd2342, %rd1768, 7;
	xor.b64  	%rd2343, %rd2340, %rd2342;
	xor.b64  	%rd2344, %rd2343, %rd2341;
	add.s64 	%rd2345, %rd1755, %rd1872;
	add.s64 	%rd2346, %rd2345, %rd2339;
	add.s64 	%rd2347, %rd2346, %rd2344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11159,%dummy}, %rd2334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11160}, %rd2334;
	}
	shf.r.wrap.b32 	%r11161, %r11160, %r11159, 19;
	shf.r.wrap.b32 	%r11162, %r11159, %r11160, 19;
	mov.b64 	%rd2348, {%r11162, %r11161};
	shf.l.wrap.b32 	%r11163, %r11159, %r11160, 3;
	shf.l.wrap.b32 	%r11164, %r11160, %r11159, 3;
	mov.b64 	%rd2349, {%r11164, %r11163};
	shr.u64 	%rd2350, %rd2334, 6;
	xor.b64  	%rd2351, %rd2348, %rd2350;
	xor.b64  	%rd2352, %rd2351, %rd2349;
	shf.r.wrap.b32 	%r11165, %r10774, %r10773, 1;
	shf.r.wrap.b32 	%r11166, %r10773, %r10774, 1;
	mov.b64 	%rd2353, {%r11166, %r11165};
	shf.r.wrap.b32 	%r11167, %r10774, %r10773, 8;
	shf.r.wrap.b32 	%r11168, %r10773, %r10774, 8;
	mov.b64 	%rd2354, {%r11168, %r11167};
	shr.u64 	%rd2355, %rd1781, 7;
	xor.b64  	%rd2356, %rd2353, %rd2355;
	xor.b64  	%rd2357, %rd2356, %rd2354;
	add.s64 	%rd2358, %rd2269, %rd1768;
	add.s64 	%rd2359, %rd2358, %rd2352;
	add.s64 	%rd2360, %rd2359, %rd2357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11169,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11170}, %rd2347;
	}
	shf.r.wrap.b32 	%r11171, %r11170, %r11169, 19;
	shf.r.wrap.b32 	%r11172, %r11169, %r11170, 19;
	mov.b64 	%rd2361, {%r11172, %r11171};
	shf.l.wrap.b32 	%r11173, %r11169, %r11170, 3;
	shf.l.wrap.b32 	%r11174, %r11170, %r11169, 3;
	mov.b64 	%rd2362, {%r11174, %r11173};
	shr.u64 	%rd2363, %rd2347, 6;
	xor.b64  	%rd2364, %rd2361, %rd2363;
	xor.b64  	%rd2365, %rd2364, %rd2362;
	shf.r.wrap.b32 	%r11175, %r10784, %r10783, 1;
	shf.r.wrap.b32 	%r11176, %r10783, %r10784, 1;
	mov.b64 	%rd2366, {%r11176, %r11175};
	shf.r.wrap.b32 	%r11177, %r10784, %r10783, 8;
	shf.r.wrap.b32 	%r11178, %r10783, %r10784, 8;
	mov.b64 	%rd2367, {%r11178, %r11177};
	shr.u64 	%rd2368, %rd1794, 7;
	xor.b64  	%rd2369, %rd2366, %rd2368;
	xor.b64  	%rd2370, %rd2369, %rd2367;
	add.s64 	%rd2371, %rd2282, %rd1781;
	add.s64 	%rd2372, %rd2371, %rd2365;
	add.s64 	%rd2373, %rd2372, %rd2370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11179,%dummy}, %rd2360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11180}, %rd2360;
	}
	shf.r.wrap.b32 	%r11181, %r11180, %r11179, 19;
	shf.r.wrap.b32 	%r11182, %r11179, %r11180, 19;
	mov.b64 	%rd2374, {%r11182, %r11181};
	shf.l.wrap.b32 	%r11183, %r11179, %r11180, 3;
	shf.l.wrap.b32 	%r11184, %r11180, %r11179, 3;
	mov.b64 	%rd2375, {%r11184, %r11183};
	shr.u64 	%rd2376, %rd2360, 6;
	xor.b64  	%rd2377, %rd2374, %rd2376;
	xor.b64  	%rd2378, %rd2377, %rd2375;
	shf.r.wrap.b32 	%r11185, %r10794, %r10793, 1;
	shf.r.wrap.b32 	%r11186, %r10793, %r10794, 1;
	mov.b64 	%rd2379, {%r11186, %r11185};
	shf.r.wrap.b32 	%r11187, %r10794, %r10793, 8;
	shf.r.wrap.b32 	%r11188, %r10793, %r10794, 8;
	mov.b64 	%rd2380, {%r11188, %r11187};
	shr.u64 	%rd2381, %rd1807, 7;
	xor.b64  	%rd2382, %rd2379, %rd2381;
	xor.b64  	%rd2383, %rd2382, %rd2380;
	add.s64 	%rd2384, %rd2295, %rd1794;
	add.s64 	%rd2385, %rd2384, %rd2378;
	add.s64 	%rd2386, %rd2385, %rd2383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11189,%dummy}, %rd2373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11190}, %rd2373;
	}
	shf.r.wrap.b32 	%r11191, %r11190, %r11189, 19;
	shf.r.wrap.b32 	%r11192, %r11189, %r11190, 19;
	mov.b64 	%rd2387, {%r11192, %r11191};
	shf.l.wrap.b32 	%r11193, %r11189, %r11190, 3;
	shf.l.wrap.b32 	%r11194, %r11190, %r11189, 3;
	mov.b64 	%rd2388, {%r11194, %r11193};
	shr.u64 	%rd2389, %rd2373, 6;
	xor.b64  	%rd2390, %rd2387, %rd2389;
	xor.b64  	%rd2391, %rd2390, %rd2388;
	shf.r.wrap.b32 	%r11195, %r10804, %r10803, 1;
	shf.r.wrap.b32 	%r11196, %r10803, %r10804, 1;
	mov.b64 	%rd2392, {%r11196, %r11195};
	shf.r.wrap.b32 	%r11197, %r10804, %r10803, 8;
	shf.r.wrap.b32 	%r11198, %r10803, %r10804, 8;
	mov.b64 	%rd2393, {%r11198, %r11197};
	shr.u64 	%rd2394, %rd1820, 7;
	xor.b64  	%rd2395, %rd2392, %rd2394;
	xor.b64  	%rd2396, %rd2395, %rd2393;
	add.s64 	%rd2397, %rd2308, %rd1807;
	add.s64 	%rd2398, %rd2397, %rd2391;
	add.s64 	%rd2399, %rd2398, %rd2396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11199,%dummy}, %rd2386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11200}, %rd2386;
	}
	shf.r.wrap.b32 	%r11201, %r11200, %r11199, 19;
	shf.r.wrap.b32 	%r11202, %r11199, %r11200, 19;
	mov.b64 	%rd2400, {%r11202, %r11201};
	shf.l.wrap.b32 	%r11203, %r11199, %r11200, 3;
	shf.l.wrap.b32 	%r11204, %r11200, %r11199, 3;
	mov.b64 	%rd2401, {%r11204, %r11203};
	shr.u64 	%rd2402, %rd2386, 6;
	xor.b64  	%rd2403, %rd2400, %rd2402;
	xor.b64  	%rd2404, %rd2403, %rd2401;
	shf.r.wrap.b32 	%r11205, %r10814, %r10813, 1;
	shf.r.wrap.b32 	%r11206, %r10813, %r10814, 1;
	mov.b64 	%rd2405, {%r11206, %r11205};
	shf.r.wrap.b32 	%r11207, %r10814, %r10813, 8;
	shf.r.wrap.b32 	%r11208, %r10813, %r10814, 8;
	mov.b64 	%rd2406, {%r11208, %r11207};
	shr.u64 	%rd2407, %rd1833, 7;
	xor.b64  	%rd2408, %rd2405, %rd2407;
	xor.b64  	%rd2409, %rd2408, %rd2406;
	add.s64 	%rd2410, %rd2321, %rd1820;
	add.s64 	%rd2411, %rd2410, %rd2404;
	add.s64 	%rd2412, %rd2411, %rd2409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11209,%dummy}, %rd2399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11210}, %rd2399;
	}
	shf.r.wrap.b32 	%r11211, %r11210, %r11209, 19;
	shf.r.wrap.b32 	%r11212, %r11209, %r11210, 19;
	mov.b64 	%rd2413, {%r11212, %r11211};
	shf.l.wrap.b32 	%r11213, %r11209, %r11210, 3;
	shf.l.wrap.b32 	%r11214, %r11210, %r11209, 3;
	mov.b64 	%rd2414, {%r11214, %r11213};
	shr.u64 	%rd2415, %rd2399, 6;
	xor.b64  	%rd2416, %rd2413, %rd2415;
	xor.b64  	%rd2417, %rd2416, %rd2414;
	shf.r.wrap.b32 	%r11215, %r10824, %r10823, 1;
	shf.r.wrap.b32 	%r11216, %r10823, %r10824, 1;
	mov.b64 	%rd2418, {%r11216, %r11215};
	shf.r.wrap.b32 	%r11217, %r10824, %r10823, 8;
	shf.r.wrap.b32 	%r11218, %r10823, %r10824, 8;
	mov.b64 	%rd2419, {%r11218, %r11217};
	shr.u64 	%rd2420, %rd1846, 7;
	xor.b64  	%rd2421, %rd2418, %rd2420;
	xor.b64  	%rd2422, %rd2421, %rd2419;
	add.s64 	%rd2423, %rd2334, %rd1833;
	add.s64 	%rd2424, %rd2423, %rd2417;
	add.s64 	%rd2425, %rd2424, %rd2422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11219,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11220}, %rd2245;
	}
	shf.r.wrap.b32 	%r11221, %r11220, %r11219, 14;
	shf.r.wrap.b32 	%r11222, %r11219, %r11220, 14;
	mov.b64 	%rd2426, {%r11222, %r11221};
	shf.r.wrap.b32 	%r11223, %r11220, %r11219, 18;
	shf.r.wrap.b32 	%r11224, %r11219, %r11220, 18;
	mov.b64 	%rd2427, {%r11224, %r11223};
	xor.b64  	%rd2428, %rd2427, %rd2426;
	shf.l.wrap.b32 	%r11225, %r11219, %r11220, 23;
	shf.l.wrap.b32 	%r11226, %r11220, %r11219, 23;
	mov.b64 	%rd2429, {%r11226, %r11225};
	xor.b64  	%rd2430, %rd2428, %rd2429;
	xor.b64  	%rd2431, %rd2197, %rd2221;
	and.b64  	%rd2432, %rd2431, %rd2245;
	xor.b64  	%rd2433, %rd2432, %rd2197;
	add.s64 	%rd2434, %rd2433, %rd2173;
	add.s64 	%rd2435, %rd2434, %rd2269;
	add.s64 	%rd2436, %rd2435, %rd2828;
	add.s64 	%rd2437, %rd2436, %rd2430;
	add.s64 	%rd2438, %rd2437, %rd2184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11227,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11228}, %rd2256;
	}
	shf.r.wrap.b32 	%r11229, %r11228, %r11227, 28;
	shf.r.wrap.b32 	%r11230, %r11227, %r11228, 28;
	mov.b64 	%rd2439, {%r11230, %r11229};
	shf.l.wrap.b32 	%r11231, %r11227, %r11228, 30;
	shf.l.wrap.b32 	%r11232, %r11228, %r11227, 30;
	mov.b64 	%rd2440, {%r11232, %r11231};
	xor.b64  	%rd2441, %rd2440, %rd2439;
	shf.l.wrap.b32 	%r11233, %r11227, %r11228, 25;
	shf.l.wrap.b32 	%r11234, %r11228, %r11227, 25;
	mov.b64 	%rd2442, {%r11234, %r11233};
	xor.b64  	%rd2443, %rd2441, %rd2442;
	xor.b64  	%rd2444, %rd2256, %rd2208;
	xor.b64  	%rd2445, %rd2256, %rd2232;
	and.b64  	%rd2446, %rd2445, %rd2444;
	xor.b64  	%rd2447, %rd2446, %rd2256;
	add.s64 	%rd2448, %rd2437, %rd2447;
	add.s64 	%rd2449, %rd2448, %rd2443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11235,%dummy}, %rd2438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11236}, %rd2438;
	}
	shf.r.wrap.b32 	%r11237, %r11236, %r11235, 14;
	shf.r.wrap.b32 	%r11238, %r11235, %r11236, 14;
	mov.b64 	%rd2450, {%r11238, %r11237};
	shf.r.wrap.b32 	%r11239, %r11236, %r11235, 18;
	shf.r.wrap.b32 	%r11240, %r11235, %r11236, 18;
	mov.b64 	%rd2451, {%r11240, %r11239};
	xor.b64  	%rd2452, %rd2451, %rd2450;
	shf.l.wrap.b32 	%r11241, %r11235, %r11236, 23;
	shf.l.wrap.b32 	%r11242, %r11236, %r11235, 23;
	mov.b64 	%rd2453, {%r11242, %r11241};
	xor.b64  	%rd2454, %rd2452, %rd2453;
	xor.b64  	%rd2455, %rd2221, %rd2245;
	and.b64  	%rd2456, %rd2438, %rd2455;
	xor.b64  	%rd2457, %rd2456, %rd2221;
	add.s64 	%rd2458, %rd2282, %rd2197;
	add.s64 	%rd2459, %rd2458, %rd2829;
	add.s64 	%rd2460, %rd2459, %rd2457;
	add.s64 	%rd2461, %rd2460, %rd2454;
	add.s64 	%rd2462, %rd2461, %rd2208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11243,%dummy}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11244}, %rd2449;
	}
	shf.r.wrap.b32 	%r11245, %r11244, %r11243, 28;
	shf.r.wrap.b32 	%r11246, %r11243, %r11244, 28;
	mov.b64 	%rd2463, {%r11246, %r11245};
	shf.l.wrap.b32 	%r11247, %r11243, %r11244, 30;
	shf.l.wrap.b32 	%r11248, %r11244, %r11243, 30;
	mov.b64 	%rd2464, {%r11248, %r11247};
	xor.b64  	%rd2465, %rd2464, %rd2463;
	shf.l.wrap.b32 	%r11249, %r11243, %r11244, 25;
	shf.l.wrap.b32 	%r11250, %r11244, %r11243, 25;
	mov.b64 	%rd2466, {%r11250, %r11249};
	xor.b64  	%rd2467, %rd2465, %rd2466;
	xor.b64  	%rd2468, %rd2449, %rd2232;
	xor.b64  	%rd2469, %rd2449, %rd2256;
	and.b64  	%rd2470, %rd2469, %rd2468;
	xor.b64  	%rd2471, %rd2470, %rd2449;
	add.s64 	%rd2472, %rd2461, %rd2471;
	add.s64 	%rd2473, %rd2472, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11251,%dummy}, %rd2462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11252}, %rd2462;
	}
	shf.r.wrap.b32 	%r11253, %r11252, %r11251, 14;
	shf.r.wrap.b32 	%r11254, %r11251, %r11252, 14;
	mov.b64 	%rd2474, {%r11254, %r11253};
	shf.r.wrap.b32 	%r11255, %r11252, %r11251, 18;
	shf.r.wrap.b32 	%r11256, %r11251, %r11252, 18;
	mov.b64 	%rd2475, {%r11256, %r11255};
	xor.b64  	%rd2476, %rd2475, %rd2474;
	shf.l.wrap.b32 	%r11257, %r11251, %r11252, 23;
	shf.l.wrap.b32 	%r11258, %r11252, %r11251, 23;
	mov.b64 	%rd2477, {%r11258, %r11257};
	xor.b64  	%rd2478, %rd2476, %rd2477;
	xor.b64  	%rd2479, %rd2438, %rd2245;
	and.b64  	%rd2480, %rd2462, %rd2479;
	xor.b64  	%rd2481, %rd2480, %rd2245;
	add.s64 	%rd2482, %rd2295, %rd2221;
	add.s64 	%rd2483, %rd2482, %rd2830;
	add.s64 	%rd2484, %rd2483, %rd2481;
	add.s64 	%rd2485, %rd2484, %rd2478;
	add.s64 	%rd2486, %rd2485, %rd2232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11259,%dummy}, %rd2473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11260}, %rd2473;
	}
	shf.r.wrap.b32 	%r11261, %r11260, %r11259, 28;
	shf.r.wrap.b32 	%r11262, %r11259, %r11260, 28;
	mov.b64 	%rd2487, {%r11262, %r11261};
	shf.l.wrap.b32 	%r11263, %r11259, %r11260, 30;
	shf.l.wrap.b32 	%r11264, %r11260, %r11259, 30;
	mov.b64 	%rd2488, {%r11264, %r11263};
	xor.b64  	%rd2489, %rd2488, %rd2487;
	shf.l.wrap.b32 	%r11265, %r11259, %r11260, 25;
	shf.l.wrap.b32 	%r11266, %r11260, %r11259, 25;
	mov.b64 	%rd2490, {%r11266, %r11265};
	xor.b64  	%rd2491, %rd2489, %rd2490;
	xor.b64  	%rd2492, %rd2473, %rd2256;
	xor.b64  	%rd2493, %rd2473, %rd2449;
	and.b64  	%rd2494, %rd2493, %rd2492;
	xor.b64  	%rd2495, %rd2494, %rd2473;
	add.s64 	%rd2496, %rd2485, %rd2495;
	add.s64 	%rd2497, %rd2496, %rd2491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11267,%dummy}, %rd2486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11268}, %rd2486;
	}
	shf.r.wrap.b32 	%r11269, %r11268, %r11267, 14;
	shf.r.wrap.b32 	%r11270, %r11267, %r11268, 14;
	mov.b64 	%rd2498, {%r11270, %r11269};
	shf.r.wrap.b32 	%r11271, %r11268, %r11267, 18;
	shf.r.wrap.b32 	%r11272, %r11267, %r11268, 18;
	mov.b64 	%rd2499, {%r11272, %r11271};
	xor.b64  	%rd2500, %rd2499, %rd2498;
	shf.l.wrap.b32 	%r11273, %r11267, %r11268, 23;
	shf.l.wrap.b32 	%r11274, %r11268, %r11267, 23;
	mov.b64 	%rd2501, {%r11274, %r11273};
	xor.b64  	%rd2502, %rd2500, %rd2501;
	xor.b64  	%rd2503, %rd2462, %rd2438;
	and.b64  	%rd2504, %rd2486, %rd2503;
	xor.b64  	%rd2505, %rd2504, %rd2438;
	add.s64 	%rd2506, %rd2308, %rd2245;
	add.s64 	%rd2507, %rd2506, %rd2831;
	add.s64 	%rd2508, %rd2507, %rd2505;
	add.s64 	%rd2509, %rd2508, %rd2502;
	add.s64 	%rd2510, %rd2509, %rd2256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11275,%dummy}, %rd2497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11276}, %rd2497;
	}
	shf.r.wrap.b32 	%r11277, %r11276, %r11275, 28;
	shf.r.wrap.b32 	%r11278, %r11275, %r11276, 28;
	mov.b64 	%rd2511, {%r11278, %r11277};
	shf.l.wrap.b32 	%r11279, %r11275, %r11276, 30;
	shf.l.wrap.b32 	%r11280, %r11276, %r11275, 30;
	mov.b64 	%rd2512, {%r11280, %r11279};
	xor.b64  	%rd2513, %rd2512, %rd2511;
	shf.l.wrap.b32 	%r11281, %r11275, %r11276, 25;
	shf.l.wrap.b32 	%r11282, %r11276, %r11275, 25;
	mov.b64 	%rd2514, {%r11282, %r11281};
	xor.b64  	%rd2515, %rd2513, %rd2514;
	xor.b64  	%rd2516, %rd2497, %rd2449;
	xor.b64  	%rd2517, %rd2497, %rd2473;
	and.b64  	%rd2518, %rd2517, %rd2516;
	xor.b64  	%rd2519, %rd2518, %rd2497;
	add.s64 	%rd2520, %rd2509, %rd2519;
	add.s64 	%rd2521, %rd2520, %rd2515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11283,%dummy}, %rd2510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11284}, %rd2510;
	}
	shf.r.wrap.b32 	%r11285, %r11284, %r11283, 14;
	shf.r.wrap.b32 	%r11286, %r11283, %r11284, 14;
	mov.b64 	%rd2522, {%r11286, %r11285};
	shf.r.wrap.b32 	%r11287, %r11284, %r11283, 18;
	shf.r.wrap.b32 	%r11288, %r11283, %r11284, 18;
	mov.b64 	%rd2523, {%r11288, %r11287};
	xor.b64  	%rd2524, %rd2523, %rd2522;
	shf.l.wrap.b32 	%r11289, %r11283, %r11284, 23;
	shf.l.wrap.b32 	%r11290, %r11284, %r11283, 23;
	mov.b64 	%rd2525, {%r11290, %r11289};
	xor.b64  	%rd2526, %rd2524, %rd2525;
	xor.b64  	%rd2527, %rd2486, %rd2462;
	and.b64  	%rd2528, %rd2510, %rd2527;
	xor.b64  	%rd2529, %rd2528, %rd2462;
	add.s64 	%rd2530, %rd2438, %rd2321;
	add.s64 	%rd2531, %rd2530, %rd2832;
	add.s64 	%rd2532, %rd2531, %rd2529;
	add.s64 	%rd2533, %rd2532, %rd2526;
	add.s64 	%rd2534, %rd2533, %rd2449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11291,%dummy}, %rd2521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11292}, %rd2521;
	}
	shf.r.wrap.b32 	%r11293, %r11292, %r11291, 28;
	shf.r.wrap.b32 	%r11294, %r11291, %r11292, 28;
	mov.b64 	%rd2535, {%r11294, %r11293};
	shf.l.wrap.b32 	%r11295, %r11291, %r11292, 30;
	shf.l.wrap.b32 	%r11296, %r11292, %r11291, 30;
	mov.b64 	%rd2536, {%r11296, %r11295};
	xor.b64  	%rd2537, %rd2536, %rd2535;
	shf.l.wrap.b32 	%r11297, %r11291, %r11292, 25;
	shf.l.wrap.b32 	%r11298, %r11292, %r11291, 25;
	mov.b64 	%rd2538, {%r11298, %r11297};
	xor.b64  	%rd2539, %rd2537, %rd2538;
	xor.b64  	%rd2540, %rd2521, %rd2473;
	xor.b64  	%rd2541, %rd2521, %rd2497;
	and.b64  	%rd2542, %rd2541, %rd2540;
	xor.b64  	%rd2543, %rd2542, %rd2521;
	add.s64 	%rd2544, %rd2533, %rd2543;
	add.s64 	%rd2545, %rd2544, %rd2539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11299,%dummy}, %rd2534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11300}, %rd2534;
	}
	shf.r.wrap.b32 	%r11301, %r11300, %r11299, 14;
	shf.r.wrap.b32 	%r11302, %r11299, %r11300, 14;
	mov.b64 	%rd2546, {%r11302, %r11301};
	shf.r.wrap.b32 	%r11303, %r11300, %r11299, 18;
	shf.r.wrap.b32 	%r11304, %r11299, %r11300, 18;
	mov.b64 	%rd2547, {%r11304, %r11303};
	xor.b64  	%rd2548, %rd2547, %rd2546;
	shf.l.wrap.b32 	%r11305, %r11299, %r11300, 23;
	shf.l.wrap.b32 	%r11306, %r11300, %r11299, 23;
	mov.b64 	%rd2549, {%r11306, %r11305};
	xor.b64  	%rd2550, %rd2548, %rd2549;
	xor.b64  	%rd2551, %rd2510, %rd2486;
	and.b64  	%rd2552, %rd2534, %rd2551;
	xor.b64  	%rd2553, %rd2552, %rd2486;
	add.s64 	%rd2554, %rd2462, %rd2334;
	add.s64 	%rd2555, %rd2554, %rd2833;
	add.s64 	%rd2556, %rd2555, %rd2553;
	add.s64 	%rd2557, %rd2556, %rd2550;
	add.s64 	%rd2558, %rd2557, %rd2473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11307,%dummy}, %rd2545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11308}, %rd2545;
	}
	shf.r.wrap.b32 	%r11309, %r11308, %r11307, 28;
	shf.r.wrap.b32 	%r11310, %r11307, %r11308, 28;
	mov.b64 	%rd2559, {%r11310, %r11309};
	shf.l.wrap.b32 	%r11311, %r11307, %r11308, 30;
	shf.l.wrap.b32 	%r11312, %r11308, %r11307, 30;
	mov.b64 	%rd2560, {%r11312, %r11311};
	xor.b64  	%rd2561, %rd2560, %rd2559;
	shf.l.wrap.b32 	%r11313, %r11307, %r11308, 25;
	shf.l.wrap.b32 	%r11314, %r11308, %r11307, 25;
	mov.b64 	%rd2562, {%r11314, %r11313};
	xor.b64  	%rd2563, %rd2561, %rd2562;
	xor.b64  	%rd2564, %rd2545, %rd2497;
	xor.b64  	%rd2565, %rd2545, %rd2521;
	and.b64  	%rd2566, %rd2565, %rd2564;
	xor.b64  	%rd2567, %rd2566, %rd2545;
	add.s64 	%rd2568, %rd2557, %rd2567;
	add.s64 	%rd2569, %rd2568, %rd2563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11315,%dummy}, %rd2558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11316}, %rd2558;
	}
	shf.r.wrap.b32 	%r11317, %r11316, %r11315, 14;
	shf.r.wrap.b32 	%r11318, %r11315, %r11316, 14;
	mov.b64 	%rd2570, {%r11318, %r11317};
	shf.r.wrap.b32 	%r11319, %r11316, %r11315, 18;
	shf.r.wrap.b32 	%r11320, %r11315, %r11316, 18;
	mov.b64 	%rd2571, {%r11320, %r11319};
	xor.b64  	%rd2572, %rd2571, %rd2570;
	shf.l.wrap.b32 	%r11321, %r11315, %r11316, 23;
	shf.l.wrap.b32 	%r11322, %r11316, %r11315, 23;
	mov.b64 	%rd2573, {%r11322, %r11321};
	xor.b64  	%rd2574, %rd2572, %rd2573;
	xor.b64  	%rd2575, %rd2534, %rd2510;
	and.b64  	%rd2576, %rd2558, %rd2575;
	xor.b64  	%rd2577, %rd2576, %rd2510;
	add.s64 	%rd2578, %rd2486, %rd2347;
	add.s64 	%rd2579, %rd2578, %rd2834;
	add.s64 	%rd2580, %rd2579, %rd2577;
	add.s64 	%rd2581, %rd2580, %rd2574;
	add.s64 	%rd2582, %rd2581, %rd2497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11323,%dummy}, %rd2569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11324}, %rd2569;
	}
	shf.r.wrap.b32 	%r11325, %r11324, %r11323, 28;
	shf.r.wrap.b32 	%r11326, %r11323, %r11324, 28;
	mov.b64 	%rd2583, {%r11326, %r11325};
	shf.l.wrap.b32 	%r11327, %r11323, %r11324, 30;
	shf.l.wrap.b32 	%r11328, %r11324, %r11323, 30;
	mov.b64 	%rd2584, {%r11328, %r11327};
	xor.b64  	%rd2585, %rd2584, %rd2583;
	shf.l.wrap.b32 	%r11329, %r11323, %r11324, 25;
	shf.l.wrap.b32 	%r11330, %r11324, %r11323, 25;
	mov.b64 	%rd2586, {%r11330, %r11329};
	xor.b64  	%rd2587, %rd2585, %rd2586;
	xor.b64  	%rd2588, %rd2569, %rd2521;
	xor.b64  	%rd2589, %rd2569, %rd2545;
	and.b64  	%rd2590, %rd2589, %rd2588;
	xor.b64  	%rd2591, %rd2590, %rd2569;
	add.s64 	%rd2592, %rd2581, %rd2591;
	add.s64 	%rd2593, %rd2592, %rd2587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11331,%dummy}, %rd2582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11332}, %rd2582;
	}
	shf.r.wrap.b32 	%r11333, %r11332, %r11331, 14;
	shf.r.wrap.b32 	%r11334, %r11331, %r11332, 14;
	mov.b64 	%rd2594, {%r11334, %r11333};
	shf.r.wrap.b32 	%r11335, %r11332, %r11331, 18;
	shf.r.wrap.b32 	%r11336, %r11331, %r11332, 18;
	mov.b64 	%rd2595, {%r11336, %r11335};
	xor.b64  	%rd2596, %rd2595, %rd2594;
	shf.l.wrap.b32 	%r11337, %r11331, %r11332, 23;
	shf.l.wrap.b32 	%r11338, %r11332, %r11331, 23;
	mov.b64 	%rd2597, {%r11338, %r11337};
	xor.b64  	%rd2598, %rd2596, %rd2597;
	xor.b64  	%rd2599, %rd2558, %rd2534;
	and.b64  	%rd2600, %rd2582, %rd2599;
	xor.b64  	%rd2601, %rd2600, %rd2534;
	add.s64 	%rd2602, %rd2510, %rd2360;
	add.s64 	%rd2603, %rd2602, %rd2835;
	add.s64 	%rd2604, %rd2603, %rd2601;
	add.s64 	%rd2605, %rd2604, %rd2598;
	add.s64 	%rd2606, %rd2605, %rd2521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11339,%dummy}, %rd2593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11340}, %rd2593;
	}
	shf.r.wrap.b32 	%r11341, %r11340, %r11339, 28;
	shf.r.wrap.b32 	%r11342, %r11339, %r11340, 28;
	mov.b64 	%rd2607, {%r11342, %r11341};
	shf.l.wrap.b32 	%r11343, %r11339, %r11340, 30;
	shf.l.wrap.b32 	%r11344, %r11340, %r11339, 30;
	mov.b64 	%rd2608, {%r11344, %r11343};
	xor.b64  	%rd2609, %rd2608, %rd2607;
	shf.l.wrap.b32 	%r11345, %r11339, %r11340, 25;
	shf.l.wrap.b32 	%r11346, %r11340, %r11339, 25;
	mov.b64 	%rd2610, {%r11346, %r11345};
	xor.b64  	%rd2611, %rd2609, %rd2610;
	xor.b64  	%rd2612, %rd2593, %rd2545;
	xor.b64  	%rd2613, %rd2593, %rd2569;
	and.b64  	%rd2614, %rd2613, %rd2612;
	xor.b64  	%rd2615, %rd2614, %rd2593;
	add.s64 	%rd2616, %rd2605, %rd2615;
	add.s64 	%rd2617, %rd2616, %rd2611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11347,%dummy}, %rd2606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11348}, %rd2606;
	}
	shf.r.wrap.b32 	%r11349, %r11348, %r11347, 14;
	shf.r.wrap.b32 	%r11350, %r11347, %r11348, 14;
	mov.b64 	%rd2618, {%r11350, %r11349};
	shf.r.wrap.b32 	%r11351, %r11348, %r11347, 18;
	shf.r.wrap.b32 	%r11352, %r11347, %r11348, 18;
	mov.b64 	%rd2619, {%r11352, %r11351};
	xor.b64  	%rd2620, %rd2619, %rd2618;
	shf.l.wrap.b32 	%r11353, %r11347, %r11348, 23;
	shf.l.wrap.b32 	%r11354, %r11348, %r11347, 23;
	mov.b64 	%rd2621, {%r11354, %r11353};
	xor.b64  	%rd2622, %rd2620, %rd2621;
	xor.b64  	%rd2623, %rd2582, %rd2558;
	and.b64  	%rd2624, %rd2606, %rd2623;
	xor.b64  	%rd2625, %rd2624, %rd2558;
	add.s64 	%rd2626, %rd2534, %rd2373;
	add.s64 	%rd2627, %rd2626, %rd2836;
	add.s64 	%rd2628, %rd2627, %rd2625;
	add.s64 	%rd2629, %rd2628, %rd2622;
	add.s64 	%rd2630, %rd2629, %rd2545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11355,%dummy}, %rd2617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11356}, %rd2617;
	}
	shf.r.wrap.b32 	%r11357, %r11356, %r11355, 28;
	shf.r.wrap.b32 	%r11358, %r11355, %r11356, 28;
	mov.b64 	%rd2631, {%r11358, %r11357};
	shf.l.wrap.b32 	%r11359, %r11355, %r11356, 30;
	shf.l.wrap.b32 	%r11360, %r11356, %r11355, 30;
	mov.b64 	%rd2632, {%r11360, %r11359};
	xor.b64  	%rd2633, %rd2632, %rd2631;
	shf.l.wrap.b32 	%r11361, %r11355, %r11356, 25;
	shf.l.wrap.b32 	%r11362, %r11356, %r11355, 25;
	mov.b64 	%rd2634, {%r11362, %r11361};
	xor.b64  	%rd2635, %rd2633, %rd2634;
	xor.b64  	%rd2636, %rd2617, %rd2569;
	xor.b64  	%rd2637, %rd2617, %rd2593;
	and.b64  	%rd2638, %rd2637, %rd2636;
	xor.b64  	%rd2639, %rd2638, %rd2617;
	add.s64 	%rd2640, %rd2629, %rd2639;
	add.s64 	%rd2641, %rd2640, %rd2635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11363,%dummy}, %rd2630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11364}, %rd2630;
	}
	shf.r.wrap.b32 	%r11365, %r11364, %r11363, 14;
	shf.r.wrap.b32 	%r11366, %r11363, %r11364, 14;
	mov.b64 	%rd2642, {%r11366, %r11365};
	shf.r.wrap.b32 	%r11367, %r11364, %r11363, 18;
	shf.r.wrap.b32 	%r11368, %r11363, %r11364, 18;
	mov.b64 	%rd2643, {%r11368, %r11367};
	xor.b64  	%rd2644, %rd2643, %rd2642;
	shf.l.wrap.b32 	%r11369, %r11363, %r11364, 23;
	shf.l.wrap.b32 	%r11370, %r11364, %r11363, 23;
	mov.b64 	%rd2645, {%r11370, %r11369};
	xor.b64  	%rd2646, %rd2644, %rd2645;
	xor.b64  	%rd2647, %rd2606, %rd2582;
	and.b64  	%rd2648, %rd2630, %rd2647;
	xor.b64  	%rd2649, %rd2648, %rd2582;
	add.s64 	%rd2650, %rd2558, %rd2386;
	add.s64 	%rd2651, %rd2650, %rd2837;
	add.s64 	%rd2652, %rd2651, %rd2649;
	add.s64 	%rd2653, %rd2652, %rd2646;
	add.s64 	%rd2654, %rd2653, %rd2569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11371,%dummy}, %rd2641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11372}, %rd2641;
	}
	shf.r.wrap.b32 	%r11373, %r11372, %r11371, 28;
	shf.r.wrap.b32 	%r11374, %r11371, %r11372, 28;
	mov.b64 	%rd2655, {%r11374, %r11373};
	shf.l.wrap.b32 	%r11375, %r11371, %r11372, 30;
	shf.l.wrap.b32 	%r11376, %r11372, %r11371, 30;
	mov.b64 	%rd2656, {%r11376, %r11375};
	xor.b64  	%rd2657, %rd2656, %rd2655;
	shf.l.wrap.b32 	%r11377, %r11371, %r11372, 25;
	shf.l.wrap.b32 	%r11378, %r11372, %r11371, 25;
	mov.b64 	%rd2658, {%r11378, %r11377};
	xor.b64  	%rd2659, %rd2657, %rd2658;
	xor.b64  	%rd2660, %rd2641, %rd2593;
	xor.b64  	%rd2661, %rd2641, %rd2617;
	and.b64  	%rd2662, %rd2661, %rd2660;
	xor.b64  	%rd2663, %rd2662, %rd2641;
	add.s64 	%rd2664, %rd2653, %rd2663;
	add.s64 	%rd2665, %rd2664, %rd2659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11379,%dummy}, %rd2654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11380}, %rd2654;
	}
	shf.r.wrap.b32 	%r11381, %r11380, %r11379, 14;
	shf.r.wrap.b32 	%r11382, %r11379, %r11380, 14;
	mov.b64 	%rd2666, {%r11382, %r11381};
	shf.r.wrap.b32 	%r11383, %r11380, %r11379, 18;
	shf.r.wrap.b32 	%r11384, %r11379, %r11380, 18;
	mov.b64 	%rd2667, {%r11384, %r11383};
	xor.b64  	%rd2668, %rd2667, %rd2666;
	shf.l.wrap.b32 	%r11385, %r11379, %r11380, 23;
	shf.l.wrap.b32 	%r11386, %r11380, %r11379, 23;
	mov.b64 	%rd2669, {%r11386, %r11385};
	xor.b64  	%rd2670, %rd2668, %rd2669;
	xor.b64  	%rd2671, %rd2630, %rd2606;
	and.b64  	%rd2672, %rd2654, %rd2671;
	xor.b64  	%rd2673, %rd2672, %rd2606;
	add.s64 	%rd2674, %rd2582, %rd2399;
	add.s64 	%rd2675, %rd2674, %rd2845;
	add.s64 	%rd2676, %rd2675, %rd2673;
	add.s64 	%rd2677, %rd2676, %rd2670;
	add.s64 	%rd2678, %rd2677, %rd2593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11387,%dummy}, %rd2665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11388}, %rd2665;
	}
	shf.r.wrap.b32 	%r11389, %r11388, %r11387, 28;
	shf.r.wrap.b32 	%r11390, %r11387, %r11388, 28;
	mov.b64 	%rd2679, {%r11390, %r11389};
	shf.l.wrap.b32 	%r11391, %r11387, %r11388, 30;
	shf.l.wrap.b32 	%r11392, %r11388, %r11387, 30;
	mov.b64 	%rd2680, {%r11392, %r11391};
	xor.b64  	%rd2681, %rd2680, %rd2679;
	shf.l.wrap.b32 	%r11393, %r11387, %r11388, 25;
	shf.l.wrap.b32 	%r11394, %r11388, %r11387, 25;
	mov.b64 	%rd2682, {%r11394, %r11393};
	xor.b64  	%rd2683, %rd2681, %rd2682;
	xor.b64  	%rd2684, %rd2665, %rd2617;
	xor.b64  	%rd2685, %rd2665, %rd2641;
	and.b64  	%rd2686, %rd2685, %rd2684;
	xor.b64  	%rd2687, %rd2686, %rd2665;
	add.s64 	%rd2688, %rd2677, %rd2687;
	add.s64 	%rd2689, %rd2688, %rd2683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11395,%dummy}, %rd2678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11396}, %rd2678;
	}
	shf.r.wrap.b32 	%r11397, %r11396, %r11395, 14;
	shf.r.wrap.b32 	%r11398, %r11395, %r11396, 14;
	mov.b64 	%rd2690, {%r11398, %r11397};
	shf.r.wrap.b32 	%r11399, %r11396, %r11395, 18;
	shf.r.wrap.b32 	%r11400, %r11395, %r11396, 18;
	mov.b64 	%rd2691, {%r11400, %r11399};
	xor.b64  	%rd2692, %rd2691, %rd2690;
	shf.l.wrap.b32 	%r11401, %r11395, %r11396, 23;
	shf.l.wrap.b32 	%r11402, %r11396, %r11395, 23;
	mov.b64 	%rd2693, {%r11402, %r11401};
	xor.b64  	%rd2694, %rd2692, %rd2693;
	xor.b64  	%rd2695, %rd2654, %rd2630;
	and.b64  	%rd2696, %rd2678, %rd2695;
	xor.b64  	%rd2697, %rd2696, %rd2630;
	add.s64 	%rd2698, %rd2606, %rd2412;
	add.s64 	%rd2699, %rd2698, %rd2846;
	add.s64 	%rd2700, %rd2699, %rd2697;
	add.s64 	%rd2701, %rd2700, %rd2694;
	add.s64 	%rd2702, %rd2701, %rd2617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11403,%dummy}, %rd2689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11404}, %rd2689;
	}
	shf.r.wrap.b32 	%r11405, %r11404, %r11403, 28;
	shf.r.wrap.b32 	%r11406, %r11403, %r11404, 28;
	mov.b64 	%rd2703, {%r11406, %r11405};
	shf.l.wrap.b32 	%r11407, %r11403, %r11404, 30;
	shf.l.wrap.b32 	%r11408, %r11404, %r11403, 30;
	mov.b64 	%rd2704, {%r11408, %r11407};
	xor.b64  	%rd2705, %rd2704, %rd2703;
	shf.l.wrap.b32 	%r11409, %r11403, %r11404, 25;
	shf.l.wrap.b32 	%r11410, %r11404, %r11403, 25;
	mov.b64 	%rd2706, {%r11410, %r11409};
	xor.b64  	%rd2707, %rd2705, %rd2706;
	xor.b64  	%rd2708, %rd2689, %rd2641;
	xor.b64  	%rd2709, %rd2689, %rd2665;
	and.b64  	%rd2710, %rd2709, %rd2708;
	xor.b64  	%rd2711, %rd2710, %rd2689;
	add.s64 	%rd2712, %rd2701, %rd2711;
	add.s64 	%rd2713, %rd2712, %rd2707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11411,%dummy}, %rd2702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11412}, %rd2702;
	}
	shf.r.wrap.b32 	%r11413, %r11412, %r11411, 14;
	shf.r.wrap.b32 	%r11414, %r11411, %r11412, 14;
	mov.b64 	%rd2714, {%r11414, %r11413};
	shf.r.wrap.b32 	%r11415, %r11412, %r11411, 18;
	shf.r.wrap.b32 	%r11416, %r11411, %r11412, 18;
	mov.b64 	%rd2715, {%r11416, %r11415};
	xor.b64  	%rd2716, %rd2715, %rd2714;
	shf.l.wrap.b32 	%r11417, %r11411, %r11412, 23;
	shf.l.wrap.b32 	%r11418, %r11412, %r11411, 23;
	mov.b64 	%rd2717, {%r11418, %r11417};
	xor.b64  	%rd2718, %rd2716, %rd2717;
	xor.b64  	%rd2719, %rd2678, %rd2654;
	and.b64  	%rd2720, %rd2702, %rd2719;
	xor.b64  	%rd2721, %rd2720, %rd2654;
	add.s64 	%rd2722, %rd2630, %rd2425;
	add.s64 	%rd2723, %rd2722, %rd2847;
	add.s64 	%rd2724, %rd2723, %rd2721;
	add.s64 	%rd2725, %rd2724, %rd2718;
	add.s64 	%rd2726, %rd2725, %rd2641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11419,%dummy}, %rd2713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11420}, %rd2713;
	}
	shf.r.wrap.b32 	%r11421, %r11420, %r11419, 28;
	shf.r.wrap.b32 	%r11422, %r11419, %r11420, 28;
	mov.b64 	%rd2727, {%r11422, %r11421};
	shf.l.wrap.b32 	%r11423, %r11419, %r11420, 30;
	shf.l.wrap.b32 	%r11424, %r11420, %r11419, 30;
	mov.b64 	%rd2728, {%r11424, %r11423};
	xor.b64  	%rd2729, %rd2728, %rd2727;
	shf.l.wrap.b32 	%r11425, %r11419, %r11420, 25;
	shf.l.wrap.b32 	%r11426, %r11420, %r11419, 25;
	mov.b64 	%rd2730, {%r11426, %r11425};
	xor.b64  	%rd2731, %rd2729, %rd2730;
	xor.b64  	%rd2732, %rd2713, %rd2665;
	xor.b64  	%rd2733, %rd2713, %rd2689;
	and.b64  	%rd2734, %rd2733, %rd2732;
	xor.b64  	%rd2735, %rd2734, %rd2713;
	add.s64 	%rd2736, %rd2725, %rd2735;
	add.s64 	%rd2737, %rd2736, %rd2731;
	cvt.u32.u64	%r1915, %rd2726;
	shr.u64 	%rd2738, %rd2726, 32;
	cvt.u32.u64	%r1916, %rd2738;
	cvt.u32.u64	%r1917, %rd2737;
	shr.u64 	%rd2739, %rd2737, 32;
	cvt.u32.u64	%r1918, %rd2739;
	and.b32  	%r11427, %r11496, 31;
	shr.u32 	%r11428, %r1915, %r11427;
	and.b32  	%r11429, %r11428, %r1939;
	mul.wide.u32 	%rd2740, %r11429, 4;
	add.s64 	%rd2741, %rd2848, %rd2740;
	and.b32  	%r11430, %r1915, 31;
	mov.u32 	%r11431, 1;
	shl.b32 	%r1919, %r11431, %r11430;
	ld.global.u32 	%r11432, [%rd2741];
	and.b32  	%r11433, %r11432, %r1919;
	setp.eq.s32	%p1054, %r11433, 0;
	@%p1054 bra 	BB1_1617;

	mov.u32 	%r11499, 1;
	ld.param.u32 	%r11498, [m01710_m04_param_25];
	and.b32  	%r11497, %r11498, 31;
	ld.param.u64 	%rd2838, [m01710_m04_param_7];
	shr.u32 	%r11435, %r1916, %r11497;
	and.b32  	%r11436, %r11435, %r1939;
	mul.wide.u32 	%rd2742, %r11436, 4;
	add.s64 	%rd2743, %rd2838, %rd2742;
	and.b32  	%r11437, %r1916, 31;
	shl.b32 	%r1920, %r11499, %r11437;
	ld.global.u32 	%r11439, [%rd2743];
	and.b32  	%r11440, %r11439, %r1920;
	setp.eq.s32	%p1055, %r11440, 0;
	@%p1055 bra 	BB1_1617;

	mov.u32 	%r11502, 1;
	ld.param.u32 	%r11501, [m01710_m04_param_25];
	and.b32  	%r11500, %r11501, 31;
	ld.param.u64 	%rd2839, [m01710_m04_param_8];
	shr.u32 	%r11442, %r1917, %r11500;
	and.b32  	%r11443, %r11442, %r1939;
	mul.wide.u32 	%rd2744, %r11443, 4;
	add.s64 	%rd2745, %rd2839, %rd2744;
	and.b32  	%r11444, %r1917, 31;
	shl.b32 	%r1921, %r11502, %r11444;
	ld.global.u32 	%r11446, [%rd2745];
	and.b32  	%r11447, %r11446, %r1921;
	setp.eq.s32	%p1056, %r11447, 0;
	@%p1056 bra 	BB1_1617;

	mov.u32 	%r11505, 1;
	ld.param.u32 	%r11504, [m01710_m04_param_25];
	and.b32  	%r11503, %r11504, 31;
	ld.param.u64 	%rd2840, [m01710_m04_param_9];
	shr.u32 	%r11449, %r1918, %r11503;
	and.b32  	%r11450, %r11449, %r1939;
	mul.wide.u32 	%rd2746, %r11450, 4;
	add.s64 	%rd2747, %rd2840, %rd2746;
	and.b32  	%r11451, %r1918, 31;
	shl.b32 	%r1922, %r11505, %r11451;
	ld.global.u32 	%r11453, [%rd2747];
	and.b32  	%r11454, %r11453, %r1922;
	setp.eq.s32	%p1057, %r11454, 0;
	@%p1057 bra 	BB1_1617;

	and.b32  	%r11508, %r1915, 31;
	mov.u32 	%r11507, 1;
	shl.b32 	%r11506, %r11507, %r11508;
	ld.param.u64 	%rd2841, [m01710_m04_param_10];
	ld.param.u32 	%r11495, [m01710_m04_param_26];
	and.b32  	%r11455, %r11495, 31;
	shr.u32 	%r11456, %r1915, %r11455;
	and.b32  	%r11457, %r11456, %r1939;
	mul.wide.u32 	%rd2748, %r11457, 4;
	add.s64 	%rd2749, %rd2841, %rd2748;
	ld.global.u32 	%r11458, [%rd2749];
	and.b32  	%r11459, %r11458, %r11506;
	setp.eq.s32	%p1058, %r11459, 0;
	@%p1058 bra 	BB1_1617;

	ld.param.u64 	%rd2842, [m01710_m04_param_11];
	shr.u32 	%r11461, %r1916, %r11455;
	and.b32  	%r11462, %r11461, %r1939;
	mul.wide.u32 	%rd2750, %r11462, 4;
	add.s64 	%rd2751, %rd2842, %rd2750;
	ld.global.u32 	%r11463, [%rd2751];
	and.b32  	%r11464, %r11463, %r1920;
	setp.eq.s32	%p1059, %r11464, 0;
	@%p1059 bra 	BB1_1617;

	ld.param.u64 	%rd2843, [m01710_m04_param_12];
	shr.u32 	%r11466, %r1917, %r11455;
	and.b32  	%r11467, %r11466, %r1939;
	mul.wide.u32 	%rd2752, %r11467, 4;
	add.s64 	%rd2753, %rd2843, %rd2752;
	ld.global.u32 	%r11468, [%rd2753];
	and.b32  	%r11469, %r11468, %r1921;
	setp.eq.s32	%p1060, %r11469, 0;
	@%p1060 bra 	BB1_1617;

	ld.param.u64 	%rd2844, [m01710_m04_param_13];
	shr.u32 	%r11471, %r1918, %r11455;
	and.b32  	%r11472, %r11471, %r1939;
	mul.wide.u32 	%rd2754, %r11472, 4;
	add.s64 	%rd2755, %rd2844, %rd2754;
	ld.global.u32 	%r11473, [%rd2755];
	and.b32  	%r11474, %r11473, %r1922;
	setp.eq.s32	%p1061, %r11474, 0;
	@%p1061 bra 	BB1_1617;

	mov.u32 	%r11706, 0;
	setp.eq.s32	%p1062, %r1944, 0;
	cvt.u64.u32	%rd85, %r1945;
	mov.u32 	%r11475, -1;
	mov.u32 	%r11705, %r1944;
	@%p1062 bra 	BB1_1611;

BB1_1599:
	ld.param.u64 	%rd2849, [m01710_m04_param_15];
	mov.u32 	%r11707, 1;
	shr.u32 	%r1925, %r11705, 1;
	add.s32 	%r11708, %r1925, %r11706;
	cvt.u64.u32	%rd2756, %r11708;
	add.s64 	%rd2757, %rd2756, %rd85;
	shl.b64 	%rd2758, %rd2757, 6;
	add.s64 	%rd86, %rd2849, %rd2758;
	ld.global.u32 	%r1927, [%rd86+28];
	setp.gt.u32	%p1063, %r1918, %r1927;
	@%p1063 bra 	BB1_1609;

	setp.lt.u32	%p1064, %r1918, %r1927;
	mov.u32 	%r11478, -1;
	@%p1064 bra 	BB1_1601;
	bra.uni 	BB1_1602;

BB1_1601:
	mov.u32 	%r11707, %r11478;
	bra.uni 	BB1_1609;

BB1_1602:
	mov.u32 	%r11707, 1;
	ld.global.u32 	%r1928, [%rd86+24];
	setp.gt.u32	%p1065, %r1917, %r1928;
	@%p1065 bra 	BB1_1609;

	setp.lt.u32	%p1066, %r1917, %r1928;
	@%p1066 bra 	BB1_1604;
	bra.uni 	BB1_1605;

BB1_1604:
	mov.u32 	%r11707, %r11478;
	bra.uni 	BB1_1609;

BB1_1605:
	mov.u32 	%r11707, 1;
	ld.global.u32 	%r1929, [%rd86+60];
	setp.gt.u32	%p1067, %r1916, %r1929;
	@%p1067 bra 	BB1_1609;

	setp.lt.u32	%p1068, %r1916, %r1929;
	mov.u32 	%r11707, %r11478;
	@%p1068 bra 	BB1_1609;

	mov.u32 	%r11707, 1;
	ld.global.u32 	%r1930, [%rd86+56];
	setp.gt.u32	%p1069, %r1915, %r1930;
	@%p1069 bra 	BB1_1609;

	setp.lt.u32	%p1070, %r1915, %r1930;
	selp.b32	%r11707, -1, 0, %p1070;

BB1_1609:
	add.s32 	%r11484, %r1925, 1;
	setp.gt.s32	%p1071, %r11707, 0;
	selp.b32	%r11485, %r11484, 0, %p1071;
	add.s32 	%r11706, %r11485, %r11706;
	selp.b32	%r11486, -1, 0, %p1071;
	add.s32 	%r11487, %r11486, %r11705;
	shr.u32 	%r11705, %r11487, 1;
	setp.eq.s32	%p1072, %r11707, 0;
	@%p1072 bra 	BB1_1612;

	setp.ne.s32	%p1073, %r11705, 0;
	@%p1073 bra 	BB1_1599;

BB1_1611:
	mov.u32 	%r11708, %r11475;

BB1_1612:
	setp.eq.s32	%p1074, %r11708, -1;
	@%p1074 bra 	BB1_1617;

	ld.param.u64 	%rd2850, [m01710_m04_param_16];
	add.s32 	%r1936, %r11708, %r1945;
	mul.wide.u32 	%rd2759, %r1936, 4;
	add.s64 	%rd2760, %rd2850, %rd2759;
	atom.global.add.u32 	%r11489, [%rd2760], 1;
	setp.ne.s32	%p1075, %r11489, 0;
	@%p1075 bra 	BB1_1617;

	atom.global.add.u32 	%r1937, [%rd101], 1;
	setp.lt.u32	%p1076, %r1937, %r1944;
	@%p1076 bra 	BB1_1616;
	bra.uni 	BB1_1615;

BB1_1616:
	ld.param.u64 	%rd2851, [m01710_m04_param_14];
	ld.param.u32 	%r11494, [m01710_m04_param_27];
	mul.wide.u32 	%rd2761, %r1937, 20;
	add.s64 	%rd2762, %rd2851, %rd2761;
	st.global.u32 	[%rd2762], %r11494;
	st.global.u32 	[%rd2762+4], %r11708;
	st.global.u32 	[%rd2762+8], %r1936;
	st.global.u32 	[%rd2762+12], %r1;
	st.global.u32 	[%rd2762+16], %r11513;
	bra.uni 	BB1_1617;

BB1_1615:
	atom.global.add.u32 	%r11490, [%rd101], -1;

BB1_1617:
	ld.param.u32 	%r11492, [m01710_m04_param_30];
	add.s32 	%r11513, %r11513, 1;
	setp.lt.u32	%p1077, %r11513, %r11492;
	@%p1077 bra 	BB1_3;

BB1_1618:
	ret;
}

	// .globl	m01710_m08
.entry m01710_m08(
	.param .u64 .ptr .global .align 4 m01710_m08_param_0,
	.param .u64 .ptr .global .align 4 m01710_m08_param_1,
	.param .u64 .ptr .global .align 4 m01710_m08_param_2,
	.param .u64 .ptr .global .align 4 m01710_m08_param_3,
	.param .u64 .ptr .global .align 1 m01710_m08_param_4,
	.param .u64 .ptr .global .align 1 m01710_m08_param_5,
	.param .u64 .ptr .global .align 4 m01710_m08_param_6,
	.param .u64 .ptr .global .align 4 m01710_m08_param_7,
	.param .u64 .ptr .global .align 4 m01710_m08_param_8,
	.param .u64 .ptr .global .align 4 m01710_m08_param_9,
	.param .u64 .ptr .global .align 4 m01710_m08_param_10,
	.param .u64 .ptr .global .align 4 m01710_m08_param_11,
	.param .u64 .ptr .global .align 4 m01710_m08_param_12,
	.param .u64 .ptr .global .align 4 m01710_m08_param_13,
	.param .u64 .ptr .global .align 4 m01710_m08_param_14,
	.param .u64 .ptr .global .align 4 m01710_m08_param_15,
	.param .u64 .ptr .global .align 4 m01710_m08_param_16,
	.param .u64 .ptr .global .align 4 m01710_m08_param_17,
	.param .u64 .ptr .global .align 1 m01710_m08_param_18,
	.param .u64 .ptr .global .align 4 m01710_m08_param_19,
	.param .u64 .ptr .global .align 4 m01710_m08_param_20,
	.param .u64 .ptr .global .align 4 m01710_m08_param_21,
	.param .u64 .ptr .global .align 4 m01710_m08_param_22,
	.param .u64 .ptr .global .align 4 m01710_m08_param_23,
	.param .u32 m01710_m08_param_24,
	.param .u32 m01710_m08_param_25,
	.param .u32 m01710_m08_param_26,
	.param .u32 m01710_m08_param_27,
	.param .u32 m01710_m08_param_28,
	.param .u32 m01710_m08_param_29,
	.param .u32 m01710_m08_param_30,
	.param .u32 m01710_m08_param_31,
	.param .u32 m01710_m08_param_32,
	.param .u32 m01710_m08_param_33,
	.param .u32 m01710_m08_param_34
)
{



	ret;
}

	// .globl	m01710_m16
.entry m01710_m16(
	.param .u64 .ptr .global .align 4 m01710_m16_param_0,
	.param .u64 .ptr .global .align 4 m01710_m16_param_1,
	.param .u64 .ptr .global .align 4 m01710_m16_param_2,
	.param .u64 .ptr .global .align 4 m01710_m16_param_3,
	.param .u64 .ptr .global .align 1 m01710_m16_param_4,
	.param .u64 .ptr .global .align 1 m01710_m16_param_5,
	.param .u64 .ptr .global .align 4 m01710_m16_param_6,
	.param .u64 .ptr .global .align 4 m01710_m16_param_7,
	.param .u64 .ptr .global .align 4 m01710_m16_param_8,
	.param .u64 .ptr .global .align 4 m01710_m16_param_9,
	.param .u64 .ptr .global .align 4 m01710_m16_param_10,
	.param .u64 .ptr .global .align 4 m01710_m16_param_11,
	.param .u64 .ptr .global .align 4 m01710_m16_param_12,
	.param .u64 .ptr .global .align 4 m01710_m16_param_13,
	.param .u64 .ptr .global .align 4 m01710_m16_param_14,
	.param .u64 .ptr .global .align 4 m01710_m16_param_15,
	.param .u64 .ptr .global .align 4 m01710_m16_param_16,
	.param .u64 .ptr .global .align 4 m01710_m16_param_17,
	.param .u64 .ptr .global .align 1 m01710_m16_param_18,
	.param .u64 .ptr .global .align 4 m01710_m16_param_19,
	.param .u64 .ptr .global .align 4 m01710_m16_param_20,
	.param .u64 .ptr .global .align 4 m01710_m16_param_21,
	.param .u64 .ptr .global .align 4 m01710_m16_param_22,
	.param .u64 .ptr .global .align 4 m01710_m16_param_23,
	.param .u32 m01710_m16_param_24,
	.param .u32 m01710_m16_param_25,
	.param .u32 m01710_m16_param_26,
	.param .u32 m01710_m16_param_27,
	.param .u32 m01710_m16_param_28,
	.param .u32 m01710_m16_param_29,
	.param .u32 m01710_m16_param_30,
	.param .u32 m01710_m16_param_31,
	.param .u32 m01710_m16_param_32,
	.param .u32 m01710_m16_param_33,
	.param .u32 m01710_m16_param_34
)
{



	ret;
}

	// .globl	m01710_s04
.entry m01710_s04(
	.param .u64 .ptr .global .align 4 m01710_s04_param_0,
	.param .u64 .ptr .global .align 4 m01710_s04_param_1,
	.param .u64 .ptr .global .align 4 m01710_s04_param_2,
	.param .u64 .ptr .global .align 4 m01710_s04_param_3,
	.param .u64 .ptr .global .align 1 m01710_s04_param_4,
	.param .u64 .ptr .global .align 1 m01710_s04_param_5,
	.param .u64 .ptr .global .align 4 m01710_s04_param_6,
	.param .u64 .ptr .global .align 4 m01710_s04_param_7,
	.param .u64 .ptr .global .align 4 m01710_s04_param_8,
	.param .u64 .ptr .global .align 4 m01710_s04_param_9,
	.param .u64 .ptr .global .align 4 m01710_s04_param_10,
	.param .u64 .ptr .global .align 4 m01710_s04_param_11,
	.param .u64 .ptr .global .align 4 m01710_s04_param_12,
	.param .u64 .ptr .global .align 4 m01710_s04_param_13,
	.param .u64 .ptr .global .align 4 m01710_s04_param_14,
	.param .u64 .ptr .global .align 4 m01710_s04_param_15,
	.param .u64 .ptr .global .align 4 m01710_s04_param_16,
	.param .u64 .ptr .global .align 4 m01710_s04_param_17,
	.param .u64 .ptr .global .align 1 m01710_s04_param_18,
	.param .u64 .ptr .global .align 4 m01710_s04_param_19,
	.param .u64 .ptr .global .align 4 m01710_s04_param_20,
	.param .u64 .ptr .global .align 4 m01710_s04_param_21,
	.param .u64 .ptr .global .align 4 m01710_s04_param_22,
	.param .u64 .ptr .global .align 4 m01710_s04_param_23,
	.param .u32 m01710_s04_param_24,
	.param .u32 m01710_s04_param_25,
	.param .u32 m01710_s04_param_26,
	.param .u32 m01710_s04_param_27,
	.param .u32 m01710_s04_param_28,
	.param .u32 m01710_s04_param_29,
	.param .u32 m01710_s04_param_30,
	.param .u32 m01710_s04_param_31,
	.param .u32 m01710_s04_param_32,
	.param .u32 m01710_s04_param_33,
	.param .u32 m01710_s04_param_34
)
{
	.local .align 16 .b8 	__local_depot4[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<1063>;
	.reg .b16 	%rs<377>;
	.reg .b32 	%r<11610>;
	.reg .b64 	%rd<2817>;


	mov.u64 	%rd2816, __local_depot4;
	cvta.local.u64 	%SP, %rd2816;
	ld.param.u64 	%rd87, [m01710_s04_param_0];
	ld.param.u64 	%rd88, [m01710_s04_param_1];
	ld.param.u64 	%rd90, [m01710_s04_param_15];
	ld.param.u64 	%rd92, [m01710_s04_param_17];
	ld.param.u64 	%rd93, [m01710_s04_param_19];
	ld.param.u32 	%r1921, [m01710_s04_param_27];
	ld.param.u32 	%r1922, [m01710_s04_param_30];
	ld.param.u32 	%r1924, [m01710_s04_param_32];
	ld.param.u32 	%r1925, [m01710_s04_param_34];
	mov.u32 	%r1926, %ctaid.x;
	mov.u32 	%r1927, %ntid.x;
	mov.b32	%r1928, %envreg3;
	mad.lo.s32 	%r1929, %r1926, %r1927, %r1928;
	mov.u32 	%r1930, %tid.x;
	add.s32 	%r1, %r1929, %r1930;
	setp.ge.u32	%p1, %r1, %r1925;
	@%p1 bra 	BB4_1602;

	mul.wide.u32 	%rd94, %r1, 80;
	add.s64 	%rd95, %rd87, %rd94;
	ld.global.u32 	%r2, [%rd95];
	ld.global.u32 	%r3, [%rd95+4];
	ld.global.u32 	%r4, [%rd95+8];
	ld.global.u32 	%r5, [%rd95+12];
	ld.global.u32 	%r6, [%rd95+16];
	ld.global.u32 	%r7, [%rd95+20];
	ld.global.u32 	%r8, [%rd95+24];
	ld.global.u32 	%r9, [%rd95+28];
	ld.global.u32 	%r10, [%rd95+64];
	mul.wide.u32 	%rd96, %r1921, 180;
	add.s64 	%rd1, %rd92, %rd96;
	ld.global.u32 	%r11, [%rd1];
	ld.global.u32 	%r12, [%rd1+4];
	ld.global.u32 	%r13, [%rd1+8];
	ld.global.u32 	%r14, [%rd1+12];
	ld.global.u32 	%r15, [%rd1+16];
	ld.global.u32 	%r16, [%rd1+20];
	ld.global.u32 	%r17, [%rd1+24];
	ld.global.u32 	%r18, [%rd1+28];
	ld.global.u32 	%r19, [%rd1+32];
	ld.global.u32 	%r20, [%rd1+36];
	ld.global.u32 	%r21, [%rd1+40];
	ld.global.u32 	%r22, [%rd1+44];
	ld.global.u32 	%r23, [%rd1+48];
	ld.global.u32 	%r24, [%rd1+52];
	setp.eq.s32	%p2, %r1922, 0;
	@%p2 bra 	BB4_1602;

	ld.global.u32 	%r25, [%rd1+128];
	mul.wide.u32 	%rd97, %r1924, 64;
	add.s64 	%rd98, %rd90, %rd97;
	ld.global.u32 	%r26, [%rd98+56];
	ld.global.u32 	%r27, [%rd98+60];
	ld.global.u32 	%r28, [%rd98+24];
	ld.global.u32 	%r29, [%rd98+28];
	mov.u64 	%rd99, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1932,%dummy}, %rd99;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd99;
	}
	shf.r.wrap.b32 	%r1934, %r1933, %r1932, 18;
	shf.r.wrap.b32 	%r1935, %r1932, %r1933, 18;
	mov.b64 	%rd100, {%r1935, %r1934};
	shf.r.wrap.b32 	%r1936, %r1933, %r1932, 14;
	shf.r.wrap.b32 	%r1937, %r1932, %r1933, 14;
	mov.b64 	%rd101, {%r1937, %r1936};
	xor.b64  	%rd102, %rd100, %rd101;
	shf.l.wrap.b32 	%r1938, %r1932, %r1933, 23;
	shf.l.wrap.b32 	%r1939, %r1933, %r1932, 23;
	mov.b64 	%rd103, {%r1939, %r1938};
	xor.b64  	%rd3, %rd102, %rd103;
	mov.u64 	%rd104, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1940}, %rd104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1941,%dummy}, %rd104;
	}
	shf.l.wrap.b32 	%r1942, %r1941, %r1940, 30;
	shf.l.wrap.b32 	%r1943, %r1940, %r1941, 30;
	mov.b64 	%rd105, {%r1943, %r1942};
	shf.r.wrap.b32 	%r1944, %r1940, %r1941, 28;
	shf.r.wrap.b32 	%r1945, %r1941, %r1940, 28;
	mov.b64 	%rd106, {%r1945, %r1944};
	xor.b64  	%rd107, %rd105, %rd106;
	shf.l.wrap.b32 	%r1946, %r1941, %r1940, 25;
	shf.l.wrap.b32 	%r1947, %r1940, %r1941, 25;
	mov.b64 	%rd108, {%r1947, %r1946};
	xor.b64  	%rd4, %rd107, %rd108;
	mov.u64 	%rd109, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1948}, %rd109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1949,%dummy}, %rd109;
	}
	shf.l.wrap.b32 	%r1950, %r1949, %r1948, 3;
	shf.l.wrap.b32 	%r1951, %r1948, %r1949, 3;
	mov.b64 	%rd110, {%r1951, %r1950};
	shf.r.wrap.b32 	%r1952, %r1948, %r1949, 19;
	shf.r.wrap.b32 	%r1953, %r1949, %r1948, 19;
	mov.b64 	%rd111, {%r1953, %r1952};
	xor.b64  	%rd20, %rd111, %rd110;
	shf.r.wrap.b32 	%r1954, %r1948, %r1949, 8;
	shf.r.wrap.b32 	%r1955, %r1949, %r1948, 8;
	mov.b64 	%rd112, {%r1955, %r1954};
	shf.r.wrap.b32 	%r1956, %r1948, %r1949, 1;
	shf.r.wrap.b32 	%r1957, %r1949, %r1948, 1;
	mov.b64 	%rd113, {%r1957, %r1956};
	xor.b64  	%rd21, %rd113, %rd112;
	mov.u32 	%r11418, 0;

BB4_3:
	mov.u32 	%r11420, 0;
	cvt.u64.u32	%rd83, %r11418;
	mul.wide.u32 	%rd114, %r11418, 128;
	add.s64 	%rd115, %rd88, %rd114;
	ld.global.u32 	%r11419, [%rd115];
	setp.eq.s32	%p3, %r11419, 0;
	mov.u32 	%r11595, %r10;
	mov.u32 	%r11594, %r6;
	mov.u32 	%r11593, %r7;
	mov.u32 	%r11592, %r8;
	mov.u32 	%r11591, %r9;
	mov.u32 	%r11590, %r2;
	mov.u32 	%r11589, %r3;
	mov.u32 	%r11588, %r4;
	mov.u32 	%r11587, %r5;
	@%p3 bra 	BB4_1553;
	bra.uni 	BB4_4;

BB4_194:
	setp.ne.s32	%p131, %r44, 31;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p131 bra 	BB4_213;

	mov.u32 	%r11430, 0;
	mov.u32 	%r2535, 8;
	// inline asm
	shf.r.wrap.b32 %r11433, %r11430, %r39, %r2535;
	// inline asm

BB4_196:
	mov.u32 	%r11431, %r11430;
	mov.u32 	%r11432, %r11430;

BB4_188:
	mov.u32 	%r11434, %r11430;
	mov.u32 	%r11435, %r11430;
	mov.u32 	%r11436, %r11430;
	mov.u32 	%r11437, %r11430;

BB4_213:
	and.b32  	%r3077, %r34, 3;
	shl.b32 	%r3078, %r3077, 3;
	mov.u32 	%r3079, -1;
	shl.b32 	%r180, %r3079, %r3078;
	shr.u32 	%r3076, %r34, 2;
	setp.gt.s32	%p173, %r3076, 3;
	@%p173 bra 	BB4_221;

	setp.gt.s32	%p179, %r3076, 1;
	@%p179 bra 	BB4_218;

	setp.eq.s32	%p182, %r3076, 0;
	@%p182 bra 	BB4_232;
	bra.uni 	BB4_216;

BB4_232:
	and.b32  	%r11434, %r11434, %r180;
	bra.uni 	BB4_233;

BB4_221:
	setp.gt.s32	%p174, %r3076, 5;
	@%p174 bra 	BB4_225;

	setp.eq.s32	%p177, %r3076, 4;
	@%p177 bra 	BB4_230;
	bra.uni 	BB4_223;

BB4_230:
	and.b32  	%r11430, %r11430, %r180;
	mov.u32 	%r11434, 0;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	bra.uni 	BB4_233;

BB4_218:
	setp.eq.s32	%p180, %r3076, 2;
	@%p180 bra 	BB4_231;
	bra.uni 	BB4_219;

BB4_231:
	and.b32  	%r11436, %r11436, %r180;
	mov.u32 	%r11434, 0;
	mov.u32 	%r11435, %r11434;
	bra.uni 	BB4_233;

BB4_225:
	setp.eq.s32	%p175, %r3076, 6;
	@%p175 bra 	BB4_228;
	bra.uni 	BB4_226;

BB4_228:
	and.b32  	%r11432, %r11432, %r180;
	mov.u32 	%r11430, 0;
	mov.u32 	%r11431, %r11430;
	bra.uni 	BB4_229;

BB4_216:
	setp.eq.s32	%p183, %r3076, 1;
	@%p183 bra 	BB4_217;
	bra.uni 	BB4_233;

BB4_217:
	and.b32  	%r11435, %r11435, %r180;
	mov.u32 	%r11434, 0;
	bra.uni 	BB4_233;

BB4_223:
	setp.eq.s32	%p178, %r3076, 5;
	@%p178 bra 	BB4_224;
	bra.uni 	BB4_233;

BB4_224:
	and.b32  	%r11431, %r11431, %r180;
	mov.u32 	%r11430, 0;
	bra.uni 	BB4_229;

BB4_219:
	setp.eq.s32	%p181, %r3076, 3;
	@%p181 bra 	BB4_220;
	bra.uni 	BB4_233;

BB4_220:
	and.b32  	%r11437, %r11437, %r180;
	mov.u32 	%r11434, 0;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	bra.uni 	BB4_233;

BB4_226:
	setp.ne.s32	%p176, %r3076, 7;
	@%p176 bra 	BB4_233;

	and.b32  	%r11433, %r11433, %r180;
	mov.u32 	%r11430, 0;
	mov.u32 	%r11431, %r11430;
	mov.u32 	%r11432, %r11430;

BB4_229:
	mov.u32 	%r11434, %r11430;
	mov.u32 	%r11435, %r11430;
	mov.u32 	%r11436, %r11430;
	mov.u32 	%r11437, %r11430;

BB4_233:
	or.b32  	%r11590, %r11434, %r39;
	or.b32  	%r11589, %r11435, %r40;
	or.b32  	%r11588, %r11436, %r41;
	or.b32  	%r11587, %r11437, %r42;
	or.b32  	%r11594, %r11430, %r35;
	or.b32  	%r11593, %r11431, %r36;
	or.b32  	%r11592, %r11432, %r37;
	or.b32  	%r11591, %r11433, %r38;
	bra.uni 	BB4_1552;

BB4_287:
	setp.eq.s32	%p219, %r44, 19;
	@%p219 bra 	BB4_318;
	bra.uni 	BB4_288;

BB4_318:
	mov.u32 	%r3289, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r41, %r42, %r3289;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r40, %r41, %r3289;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r39, %r40, %r3289;
	// inline asm
	mov.u32 	%r11454, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r11454, %r39, %r3289;
	// inline asm

BB4_319:
	mov.u32 	%r11455, %r11454;
	mov.u32 	%r11456, %r11454;
	mov.u32 	%r11457, %r11454;
	bra.uni 	BB4_335;

BB4_271:
	setp.eq.s32	%p231, %r44, 11;
	@%p231 bra 	BB4_272;
	bra.uni 	BB4_288;

BB4_272:
	mov.u32 	%r3433, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r3433;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r42, %r35, %r3433;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r41, %r42, %r3433;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3422, %r40, %r41, %r3433;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11454, %r39, %r40, %r3433;
	// inline asm
	mov.u32 	%r11456, 0;
	// inline asm
	shf.r.wrap.b32 %r11455, %r11456, %r39, %r3433;
	// inline asm
	mov.u32 	%r11457, %r11456;
	mov.u32 	%r39, %r3422;
	bra.uni 	BB4_335;

BB4_303:
	setp.eq.s32	%p208, %r44, 27;
	@%p208 bra 	BB4_304;
	bra.uni 	BB4_288;

BB4_304:
	mov.u32 	%r3177, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r39, %r40, %r3177;
	// inline asm
	mov.u32 	%r11454, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r11454, %r39, %r3177;
	// inline asm

BB4_305:
	mov.u32 	%r11455, %r11454;
	mov.u32 	%r11456, %r11454;
	mov.u32 	%r11457, %r11454;
	bra.uni 	BB4_333;

BB4_263:
	setp.eq.s32	%p237, %r44, 7;
	@%p237 bra 	BB4_264;
	bra.uni 	BB4_288;

BB4_264:
	mov.u32 	%r3517, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r3517;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r3517;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r42, %r35, %r3517;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3502, %r41, %r42, %r3517;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11454, %r40, %r41, %r3517;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11455, %r39, %r40, %r3517;
	// inline asm
	mov.u32 	%r11457, 0;
	// inline asm
	shf.r.wrap.b32 %r11456, %r11457, %r39, %r3517;
	// inline asm
	mov.u32 	%r39, %r3502;
	bra.uni 	BB4_335;

BB4_294:
	setp.eq.s32	%p214, %r44, 23;
	@%p214 bra 	BB4_295;
	bra.uni 	BB4_288;

BB4_295:
	mov.u32 	%r3229, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r40, %r41, %r3229;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r39, %r40, %r3229;
	// inline asm
	mov.u32 	%r11454, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r11454, %r39, %r3229;
	// inline asm

BB4_296:
	mov.u32 	%r11455, %r11454;
	mov.u32 	%r11456, %r11454;
	mov.u32 	%r11457, %r11454;
	bra.uni 	BB4_334;

BB4_278:
	setp.eq.s32	%p226, %r44, 15;
	@%p226 bra 	BB4_279;
	bra.uni 	BB4_288;

BB4_279:
	mov.u32 	%r3357, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r42, %r35, %r3357;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r41, %r42, %r3357;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r40, %r41, %r3357;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3350, %r39, %r40, %r3357;
	// inline asm
	mov.u32 	%r11455, 0;
	// inline asm
	shf.r.wrap.b32 %r11454, %r11455, %r39, %r3357;
	// inline asm
	mov.u32 	%r11456, %r11455;
	mov.u32 	%r11457, %r11455;
	mov.u32 	%r39, %r3350;
	bra.uni 	BB4_335;

BB4_311:
	setp.ne.s32	%p203, %r44, 30;
	@%p203 bra 	BB4_288;

	mov.u32 	%r11454, 0;
	mov.u32 	%r3144, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r11454, %r39, %r3144;
	// inline asm

BB4_331:
	mov.u32 	%r11455, %r11454;
	mov.u32 	%r11456, %r11454;
	mov.u32 	%r11457, %r11454;

BB4_332:
	mov.u32 	%r37, %r11454;

BB4_333:
	mov.u32 	%r36, %r11454;

BB4_334:
	mov.u32 	%r39, %r11454;
	bra.uni 	BB4_335;

BB4_288:
	mov.u32 	%r11454, %r42;
	mov.u32 	%r11455, %r41;
	mov.u32 	%r11456, %r40;
	mov.u32 	%r11457, %r39;
	mov.u32 	%r39, %r35;

BB4_335:
	or.b32  	%r11590, %r11457, %r11450;
	or.b32  	%r11589, %r11456, %r11451;
	or.b32  	%r11588, %r11455, %r11452;
	or.b32  	%r11587, %r11454, %r11453;
	or.b32  	%r11594, %r39, %r11446;
	or.b32  	%r11593, %r36, %r11447;
	or.b32  	%r11592, %r37, %r11448;
	or.b32  	%r11591, %r38, %r11449;
	bra.uni 	BB4_1552;

BB4_1313:
	setp.eq.s32	%p934, %r6642, 1;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p934 bra 	BB4_1314;
	bra.uni 	BB4_1392;

BB4_1314:
	mov.u32 	%r7187, 24;
	// inline asm
	shf.r.wrap.b32 %r11540, %r37, %r38, %r7187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r36, %r37, %r7187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r35, %r36, %r7187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r42, %r35, %r7187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11544, %r41, %r42, %r7187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11543, %r40, %r41, %r7187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11542, %r39, %r40, %r7187;
	// inline asm
	mov.u32 	%r7185, 0;
	// inline asm
	shf.r.wrap.b32 %r11541, %r7185, %r39, %r7187;
	// inline asm
	bra.uni 	BB4_1392;

BB4_1345:
	setp.eq.s32	%p911, %r6642, 17;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p911 bra 	BB4_1346;
	bra.uni 	BB4_1392;

BB4_1346:
	mov.u32 	%r6843, 24;
	// inline asm
	shf.r.wrap.b32 %r11540, %r41, %r42, %r6843;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r40, %r41, %r6843;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r39, %r40, %r6843;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11537, %r11541, %r39, %r6843;
	// inline asm
	bra.uni 	BB4_1350;

BB4_1328:
	setp.eq.s32	%p923, %r6642, 9;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p923 bra 	BB4_1329;
	bra.uni 	BB4_1392;

BB4_1329:
	mov.u32 	%r6999, 24;
	// inline asm
	shf.r.wrap.b32 %r11540, %r35, %r36, %r6999;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r42, %r35, %r6999;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r41, %r42, %r6999;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r40, %r41, %r6999;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11544, %r39, %r40, %r6999;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11543, %r11541, %r39, %r6999;
	// inline asm
	mov.u32 	%r11542, %r11541;
	bra.uni 	BB4_1392;

BB4_1361:
	setp.eq.s32	%p900, %r6642, 25;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p900 bra 	BB4_1362;
	bra.uni 	BB4_1392;

BB4_1362:
	mov.u32 	%r6719, 24;
	// inline asm
	shf.r.wrap.b32 %r11540, %r39, %r40, %r6719;
	// inline asm
	mov.u32 	%r11537, 0;
	// inline asm
	shf.r.wrap.b32 %r11539, %r11537, %r39, %r6719;
	// inline asm
	bra.uni 	BB4_1366;

BB4_1320:
	setp.eq.s32	%p929, %r6642, 5;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p929 bra 	BB4_1321;
	bra.uni 	BB4_1392;

BB4_1321:
	mov.u32 	%r7089, 24;
	// inline asm
	shf.r.wrap.b32 %r11540, %r36, %r37, %r7089;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r35, %r36, %r7089;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r42, %r35, %r7089;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r41, %r42, %r7089;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11544, %r40, %r41, %r7089;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11543, %r39, %r40, %r7089;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11542, %r11541, %r39, %r7089;
	// inline asm
	bra.uni 	BB4_1392;

BB4_1353:
	setp.eq.s32	%p906, %r6642, 21;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p906 bra 	BB4_1354;
	bra.uni 	BB4_1392;

BB4_1354:
	mov.u32 	%r6777, 24;
	// inline asm
	shf.r.wrap.b32 %r11540, %r40, %r41, %r6777;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r39, %r40, %r6777;
	// inline asm
	mov.u32 	%r11537, 0;
	// inline asm
	shf.r.wrap.b32 %r11538, %r11537, %r39, %r6777;
	// inline asm
	bra.uni 	BB4_1367;

BB4_1335:
	setp.eq.s32	%p918, %r6642, 13;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p918 bra 	BB4_1336;
	bra.uni 	BB4_1392;

BB4_1336:
	mov.u32 	%r6917, 24;
	// inline asm
	shf.r.wrap.b32 %r11540, %r42, %r35, %r6917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r41, %r42, %r6917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r40, %r41, %r6917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r39, %r40, %r6917;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11544, %r11541, %r39, %r6917;
	// inline asm
	bra.uni 	BB4_1340;

BB4_1370:
	setp.eq.s32	%p895, %r6642, 29;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p895 bra 	BB4_1371;
	bra.uni 	BB4_1392;

BB4_1371:
	mov.u32 	%r11537, 0;
	mov.u32 	%r6669, 24;
	// inline asm
	shf.r.wrap.b32 %r11540, %r11537, %r39, %r6669;
	// inline asm
	bra.uni 	BB4_1375;

BB4_1316:
	setp.eq.s32	%p932, %r6642, 3;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p932 bra 	BB4_1317;
	bra.uni 	BB4_1392;

BB4_1317:
	mov.u32 	%r7123, 8;
	// inline asm
	shf.r.wrap.b32 %r11540, %r37, %r38, %r7123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r36, %r37, %r7123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r35, %r36, %r7123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r42, %r35, %r7123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11544, %r41, %r42, %r7123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11543, %r40, %r41, %r7123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11542, %r39, %r40, %r7123;
	// inline asm
	mov.u32 	%r7121, 0;
	// inline asm
	shf.r.wrap.b32 %r11541, %r7121, %r39, %r7123;
	// inline asm
	bra.uni 	BB4_1392;

BB4_1348:
	setp.eq.s32	%p909, %r6642, 19;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p909 bra 	BB4_1349;
	bra.uni 	BB4_1392;

BB4_1349:
	mov.u32 	%r6803, 8;
	// inline asm
	shf.r.wrap.b32 %r11540, %r41, %r42, %r6803;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r40, %r41, %r6803;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r39, %r40, %r6803;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11537, %r11541, %r39, %r6803;
	// inline asm

BB4_1350:
	mov.u32 	%r11542, %r11541;
	mov.u32 	%r11543, %r11541;
	mov.u32 	%r11544, %r11541;
	bra.uni 	BB4_1392;

BB4_1331:
	setp.eq.s32	%p921, %r6642, 11;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p921 bra 	BB4_1332;
	bra.uni 	BB4_1392;

BB4_1332:
	mov.u32 	%r6947, 8;
	// inline asm
	shf.r.wrap.b32 %r11540, %r35, %r36, %r6947;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r42, %r35, %r6947;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r41, %r42, %r6947;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r40, %r41, %r6947;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11544, %r39, %r40, %r6947;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11543, %r11541, %r39, %r6947;
	// inline asm
	mov.u32 	%r11542, %r11541;
	bra.uni 	BB4_1392;

BB4_1364:
	setp.eq.s32	%p898, %r6642, 27;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p898 bra 	BB4_1365;
	bra.uni 	BB4_1392;

BB4_1365:
	mov.u32 	%r6691, 8;
	// inline asm
	shf.r.wrap.b32 %r11540, %r39, %r40, %r6691;
	// inline asm
	mov.u32 	%r11537, 0;
	// inline asm
	shf.r.wrap.b32 %r11539, %r11537, %r39, %r6691;
	// inline asm

BB4_1366:
	mov.u32 	%r11538, %r11537;
	bra.uni 	BB4_1367;

BB4_1323:
	setp.eq.s32	%p927, %r6642, 7;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p927 bra 	BB4_1324;
	bra.uni 	BB4_1392;

BB4_1324:
	mov.u32 	%r7031, 8;
	// inline asm
	shf.r.wrap.b32 %r11540, %r36, %r37, %r7031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r35, %r36, %r7031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r42, %r35, %r7031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r41, %r42, %r7031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11544, %r40, %r41, %r7031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11543, %r39, %r40, %r7031;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11542, %r11541, %r39, %r7031;
	// inline asm
	bra.uni 	BB4_1392;

BB4_1356:
	setp.eq.s32	%p904, %r6642, 23;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p904 bra 	BB4_1357;
	bra.uni 	BB4_1392;

BB4_1357:
	mov.u32 	%r6743, 8;
	// inline asm
	shf.r.wrap.b32 %r11540, %r40, %r41, %r6743;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r39, %r40, %r6743;
	// inline asm
	mov.u32 	%r11537, 0;
	// inline asm
	shf.r.wrap.b32 %r11538, %r11537, %r39, %r6743;
	// inline asm
	bra.uni 	BB4_1367;

BB4_1338:
	setp.eq.s32	%p916, %r6642, 15;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p916 bra 	BB4_1339;
	bra.uni 	BB4_1392;

BB4_1339:
	mov.u32 	%r6871, 8;
	// inline asm
	shf.r.wrap.b32 %r11540, %r42, %r35, %r6871;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r41, %r42, %r6871;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r40, %r41, %r6871;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r39, %r40, %r6871;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11544, %r11541, %r39, %r6871;
	// inline asm

BB4_1340:
	mov.u32 	%r11542, %r11541;
	mov.u32 	%r11543, %r11541;
	bra.uni 	BB4_1392;

BB4_1373:
	setp.ne.s32	%p893, %r6642, 31;
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r11545;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	@%p893 bra 	BB4_1392;

	mov.u32 	%r11537, 0;
	mov.u32 	%r6647, 8;
	// inline asm
	shf.r.wrap.b32 %r11540, %r11537, %r39, %r6647;
	// inline asm

BB4_1375:
	mov.u32 	%r11538, %r11537;
	mov.u32 	%r11539, %r11537;

BB4_1367:
	mov.u32 	%r11541, %r11537;
	mov.u32 	%r11542, %r11537;
	mov.u32 	%r11543, %r11537;
	mov.u32 	%r11544, %r11537;

BB4_1392:
	// inline asm
	prmt.b32 %r7188, %r11540, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7190, %r11539, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7192, %r11538, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7194, %r11537, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7196, %r11544, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7198, %r11543, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7200, %r11542, 0, 0x0123;
	// inline asm
	and.b32  	%r7211, %r34, 3;
	mov.u32 	%r7212, 4;
	sub.s32 	%r7213, %r7212, %r7211;
	shl.b32 	%r7214, %r7213, 2;
	mov.u32 	%r7215, 1985229328;
	shr.u32 	%r7216, %r7215, %r7214;
	and.b32  	%r1434, %r7216, 65535;
	shr.u32 	%r7210, %r34, 2;
	setp.gt.s32	%p935, %r7210, 3;
	@%p935 bra 	BB4_1400;

	setp.gt.s32	%p941, %r7210, 1;
	@%p941 bra 	BB4_1397;

	setp.eq.s32	%p944, %r7210, 0;
	@%p944 bra 	BB4_1410;
	bra.uni 	BB4_1395;

BB4_1410:
	// inline asm
	prmt.b32 %r7357, %r11541, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11552, %r7200, %r7357, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11551, %r7198, %r7200, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11550, %r7196, %r7198, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11549, %r7194, %r7196, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11548, %r7192, %r7194, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11547, %r7190, %r7192, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11546, %r7188, %r7190, %r1434;
	// inline asm
	mov.u32 	%r7388, 0;
	// inline asm
	prmt.b32 %r11545, %r7388, %r7188, %r1434;
	// inline asm
	bra.uni 	BB4_1411;

BB4_1400:
	setp.gt.s32	%p936, %r7210, 5;
	@%p936 bra 	BB4_1404;

	setp.eq.s32	%p939, %r7210, 4;
	@%p939 bra 	BB4_1408;
	bra.uni 	BB4_1402;

BB4_1408:
	// inline asm
	prmt.b32 %r11552, %r7192, %r7194, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11551, %r7190, %r7192, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11550, %r7188, %r7190, %r1434;
	// inline asm
	mov.u32 	%r11545, 0;
	// inline asm
	prmt.b32 %r11549, %r11545, %r7188, %r1434;
	// inline asm
	mov.u32 	%r11546, %r11545;
	mov.u32 	%r11547, %r11545;
	mov.u32 	%r11548, %r11545;
	bra.uni 	BB4_1411;

BB4_1397:
	setp.eq.s32	%p942, %r7210, 2;
	@%p942 bra 	BB4_1409;
	bra.uni 	BB4_1398;

BB4_1409:
	// inline asm
	prmt.b32 %r11552, %r7196, %r7198, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11551, %r7194, %r7196, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11550, %r7192, %r7194, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11549, %r7190, %r7192, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11548, %r7188, %r7190, %r1434;
	// inline asm
	mov.u32 	%r11545, 0;
	// inline asm
	prmt.b32 %r11547, %r11545, %r7188, %r1434;
	// inline asm
	mov.u32 	%r11546, %r11545;
	bra.uni 	BB4_1411;

BB4_1404:
	setp.eq.s32	%p937, %r7210, 6;
	@%p937 bra 	BB4_1407;
	bra.uni 	BB4_1405;

BB4_1407:
	// inline asm
	prmt.b32 %r11552, %r7188, %r7190, %r1434;
	// inline asm
	mov.u32 	%r11545, 0;
	// inline asm
	prmt.b32 %r11551, %r11545, %r7188, %r1434;
	// inline asm
	mov.u32 	%r11546, %r11545;
	mov.u32 	%r11547, %r11545;
	mov.u32 	%r11548, %r11545;
	mov.u32 	%r11549, %r11545;
	mov.u32 	%r11550, %r11545;
	bra.uni 	BB4_1411;

BB4_1395:
	setp.eq.s32	%p945, %r7210, 1;
	mov.u32 	%r11546, %r11545;
	mov.u32 	%r11547, %r11545;
	mov.u32 	%r11548, %r11545;
	mov.u32 	%r11549, %r11545;
	mov.u32 	%r11550, %r11545;
	mov.u32 	%r11551, %r11545;
	mov.u32 	%r11552, %r11545;
	@%p945 bra 	BB4_1396;
	bra.uni 	BB4_1411;

BB4_1396:
	// inline asm
	prmt.b32 %r11552, %r7198, %r7200, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11551, %r7196, %r7198, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11550, %r7194, %r7196, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11549, %r7192, %r7194, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11548, %r7190, %r7192, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11547, %r7188, %r7190, %r1434;
	// inline asm
	mov.u32 	%r11545, 0;
	// inline asm
	prmt.b32 %r11546, %r11545, %r7188, %r1434;
	// inline asm
	bra.uni 	BB4_1411;

BB4_1402:
	setp.eq.s32	%p940, %r7210, 5;
	mov.u32 	%r11546, %r11545;
	mov.u32 	%r11547, %r11545;
	mov.u32 	%r11548, %r11545;
	mov.u32 	%r11549, %r11545;
	mov.u32 	%r11550, %r11545;
	mov.u32 	%r11551, %r11545;
	mov.u32 	%r11552, %r11545;
	@%p940 bra 	BB4_1403;
	bra.uni 	BB4_1411;

BB4_1403:
	// inline asm
	prmt.b32 %r11552, %r7190, %r7192, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11551, %r7188, %r7190, %r1434;
	// inline asm
	mov.u32 	%r11545, 0;
	// inline asm
	prmt.b32 %r11550, %r11545, %r7188, %r1434;
	// inline asm
	mov.u32 	%r11546, %r11545;
	mov.u32 	%r11547, %r11545;
	mov.u32 	%r11548, %r11545;
	mov.u32 	%r11549, %r11545;
	bra.uni 	BB4_1411;

BB4_1398:
	setp.eq.s32	%p943, %r7210, 3;
	mov.u32 	%r11546, %r11545;
	mov.u32 	%r11547, %r11545;
	mov.u32 	%r11548, %r11545;
	mov.u32 	%r11549, %r11545;
	mov.u32 	%r11550, %r11545;
	mov.u32 	%r11551, %r11545;
	mov.u32 	%r11552, %r11545;
	@%p943 bra 	BB4_1399;
	bra.uni 	BB4_1411;

BB4_1399:
	// inline asm
	prmt.b32 %r11552, %r7194, %r7196, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11551, %r7192, %r7194, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11550, %r7190, %r7192, %r1434;
	// inline asm
	// inline asm
	prmt.b32 %r11549, %r7188, %r7190, %r1434;
	// inline asm
	mov.u32 	%r11545, 0;
	// inline asm
	prmt.b32 %r11548, %r11545, %r7188, %r1434;
	// inline asm
	mov.u32 	%r11546, %r11545;
	mov.u32 	%r11547, %r11545;
	bra.uni 	BB4_1411;

BB4_1405:
	setp.ne.s32	%p938, %r7210, 7;
	mov.u32 	%r11546, %r11545;
	mov.u32 	%r11547, %r11545;
	mov.u32 	%r11548, %r11545;
	mov.u32 	%r11549, %r11545;
	mov.u32 	%r11550, %r11545;
	mov.u32 	%r11551, %r11545;
	mov.u32 	%r11552, %r11545;
	@%p938 bra 	BB4_1411;

	mov.u32 	%r11545, 0;
	// inline asm
	prmt.b32 %r11552, %r11545, %r7188, %r1434;
	// inline asm
	mov.u32 	%r11546, %r11545;
	mov.u32 	%r11547, %r11545;
	mov.u32 	%r11548, %r11545;
	mov.u32 	%r11549, %r11545;
	mov.u32 	%r11550, %r11545;
	mov.u32 	%r11551, %r11545;

BB4_1411:
	or.b32  	%r11590, %r11545, %r39;
	or.b32  	%r11589, %r11546, %r40;
	or.b32  	%r11588, %r11547, %r41;
	or.b32  	%r11587, %r11548, %r42;
	or.b32  	%r11594, %r11549, %r35;
	or.b32  	%r11593, %r11550, %r36;
	or.b32  	%r11592, %r11551, %r37;
	or.b32  	%r11591, %r11552, %r38;
	bra.uni 	BB4_1552;

BB4_4:
	mov.u32 	%r42, %r11587;
	mov.u32 	%r41, %r11588;
	mov.u32 	%r40, %r11589;
	mov.u32 	%r39, %r11590;
	mov.u32 	%r38, %r11591;
	mov.u32 	%r37, %r11592;
	mov.u32 	%r36, %r11593;
	mov.u32 	%r35, %r11594;
	mov.u32 	%r34, %r11595;
	shr.u32 	%r43, %r11419, 8;
	bfe.u32 	%r44, %r11419, 8, 8;
	shr.u32 	%r45, %r11419, 16;
	bfe.u32 	%r46, %r11419, 16, 8;
	and.b32  	%r1959, %r11419, 255;
	setp.gt.s32	%p4, %r1959, 93;
	@%p4 bra 	BB4_72;

	setp.gt.s32	%p32, %r1959, 68;
	@%p32 bra 	BB4_38;

	setp.gt.s32	%p46, %r1959, 44;
	@%p46 bra 	BB4_22;

	setp.gt.s32	%p53, %r1959, 41;
	@%p53 bra 	BB4_18;

	setp.eq.s32	%p57, %r1959, 36;
	@%p57 bra 	BB4_1311;
	bra.uni 	BB4_9;

BB4_1311:
	add.s32 	%r11595, %r34, 1;
	setp.gt.u32	%p878, %r11595, 31;
	@%p878 bra 	BB4_975;

	and.b32  	%r6622, %r34, 3;
	shl.b32 	%r6623, %r6622, 3;
	shl.b32 	%r6624, %r44, %r6623;
	setp.lt.u32	%p879, %r34, 4;
	selp.b32	%r6625, %r6624, 0, %p879;
	or.b32  	%r11590, %r6625, %r39;
	and.b32  	%r6626, %r34, -4;
	setp.eq.s32	%p880, %r6626, 4;
	selp.b32	%r6627, %r6624, 0, %p880;
	or.b32  	%r11589, %r6627, %r40;
	setp.eq.s32	%p881, %r6626, 8;
	selp.b32	%r6628, %r6624, 0, %p881;
	or.b32  	%r11588, %r6628, %r41;
	setp.eq.s32	%p882, %r6626, 12;
	selp.b32	%r6629, %r6624, 0, %p882;
	or.b32  	%r11587, %r6629, %r42;
	setp.eq.s32	%p883, %r6626, 16;
	selp.b32	%r6630, %r6624, 0, %p883;
	or.b32  	%r11594, %r6630, %r35;
	setp.eq.s32	%p884, %r6626, 20;
	selp.b32	%r6631, %r6624, 0, %p884;
	or.b32  	%r11593, %r6631, %r36;
	setp.eq.s32	%p885, %r6626, 24;
	selp.b32	%r6632, %r6624, 0, %p885;
	or.b32  	%r11592, %r6632, %r37;
	setp.gt.u32	%p886, %r34, 27;
	selp.b32	%r6633, %r6624, 0, %p886;
	or.b32  	%r11591, %r6633, %r38;
	bra.uni 	BB4_1552;

BB4_72:
	setp.gt.s32	%p5, %r1959, 112;
	@%p5 bra 	BB4_101;

	setp.gt.s32	%p19, %r1959, 104;
	@%p19 bra 	BB4_88;

	setp.gt.s32	%p26, %r1959, 99;
	@%p26 bra 	BB4_78;

	setp.eq.s32	%p30, %r1959, 94;
	@%p30 bra 	BB4_1309;
	bra.uni 	BB4_76;

BB4_1309:
	add.s32 	%r11595, %r34, 1;
	setp.gt.u32	%p877, %r11595, 31;
	@%p877 bra 	BB4_975;

	mov.u32 	%r6621, 24;
	// inline asm
	shf.r.wrap.b32 %r11591, %r37, %r38, %r6621;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r36, %r37, %r6621;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r35, %r36, %r6621;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r42, %r35, %r6621;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r41, %r42, %r6621;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r40, %r41, %r6621;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r39, %r40, %r6621;
	// inline asm
	mov.u32 	%r6619, 0;
	// inline asm
	shf.r.wrap.b32 %r6618, %r6619, %r39, %r6621;
	// inline asm
	or.b32  	%r11590, %r6618, %r44;
	bra.uni 	BB4_1552;

BB4_38:
	setp.gt.s32	%p33, %r1959, 83;
	@%p33 bra 	BB4_57;

	setp.gt.s32	%p40, %r1959, 75;
	@%p40 bra 	BB4_49;

	setp.eq.s32	%p44, %r1959, 69;
	@%p44 bra 	BB4_133;
	bra.uni 	BB4_41;

BB4_133:
	and.b32  	%r1992, %r39, 1077952576;
	shr.u32 	%r1993, %r1992, 1;
	and.b32  	%r1994, %r39, -2139062144;
	shr.u32 	%r1995, %r1994, 2;
	not.b32 	%r1996, %r1995;
	and.b32  	%r1997, %r1993, %r1996;
	and.b32  	%r1998, %r39, 522133279;
	add.s32 	%r1999, %r1998, 522133279;
	mov.u32 	%r2000, -84215046;
	sub.s32 	%r2001, %r2000, %r1998;
	and.b32  	%r2002, %r1997, %r2001;
	and.b32  	%r2003, %r2002, %r1999;
	or.b32  	%r2004, %r2003, %r39;
	and.b32  	%r2005, %r40, 1077952576;
	shr.u32 	%r2006, %r2005, 1;
	and.b32  	%r2007, %r40, -2139062144;
	shr.u32 	%r2008, %r2007, 2;
	not.b32 	%r2009, %r2008;
	and.b32  	%r2010, %r2006, %r2009;
	and.b32  	%r2011, %r40, 522133279;
	add.s32 	%r2012, %r2011, 522133279;
	sub.s32 	%r2013, %r2000, %r2011;
	and.b32  	%r2014, %r2010, %r2013;
	and.b32  	%r2015, %r2014, %r2012;
	or.b32  	%r2016, %r2015, %r40;
	and.b32  	%r2017, %r41, 1077952576;
	shr.u32 	%r2018, %r2017, 1;
	and.b32  	%r2019, %r41, -2139062144;
	shr.u32 	%r2020, %r2019, 2;
	not.b32 	%r2021, %r2020;
	and.b32  	%r2022, %r2018, %r2021;
	and.b32  	%r2023, %r41, 522133279;
	add.s32 	%r2024, %r2023, 522133279;
	sub.s32 	%r2025, %r2000, %r2023;
	and.b32  	%r2026, %r2022, %r2025;
	and.b32  	%r2027, %r2026, %r2024;
	or.b32  	%r2028, %r2027, %r41;
	and.b32  	%r2029, %r42, 1077952576;
	shr.u32 	%r2030, %r2029, 1;
	and.b32  	%r2031, %r42, -2139062144;
	shr.u32 	%r2032, %r2031, 2;
	not.b32 	%r2033, %r2032;
	and.b32  	%r2034, %r2030, %r2033;
	and.b32  	%r2035, %r42, 522133279;
	add.s32 	%r2036, %r2035, 522133279;
	sub.s32 	%r2037, %r2000, %r2035;
	and.b32  	%r2038, %r2034, %r2037;
	and.b32  	%r2039, %r2038, %r2036;
	or.b32  	%r2040, %r2039, %r42;
	and.b32  	%r2041, %r35, 1077952576;
	shr.u32 	%r2042, %r2041, 1;
	and.b32  	%r2043, %r35, -2139062144;
	shr.u32 	%r2044, %r2043, 2;
	not.b32 	%r2045, %r2044;
	and.b32  	%r2046, %r2042, %r2045;
	and.b32  	%r2047, %r35, 522133279;
	add.s32 	%r2048, %r2047, 522133279;
	sub.s32 	%r2049, %r2000, %r2047;
	and.b32  	%r2050, %r2046, %r2049;
	and.b32  	%r2051, %r2050, %r2048;
	or.b32  	%r2052, %r2051, %r35;
	and.b32  	%r2053, %r36, 1077952576;
	shr.u32 	%r2054, %r2053, 1;
	and.b32  	%r2055, %r36, -2139062144;
	shr.u32 	%r2056, %r2055, 2;
	not.b32 	%r2057, %r2056;
	and.b32  	%r2058, %r2054, %r2057;
	and.b32  	%r2059, %r36, 522133279;
	add.s32 	%r2060, %r2059, 522133279;
	sub.s32 	%r2061, %r2000, %r2059;
	and.b32  	%r2062, %r2058, %r2061;
	and.b32  	%r2063, %r2062, %r2060;
	or.b32  	%r2064, %r2063, %r36;
	and.b32  	%r2065, %r37, 1077952576;
	shr.u32 	%r2066, %r2065, 1;
	and.b32  	%r2067, %r37, -2139062144;
	shr.u32 	%r2068, %r2067, 2;
	not.b32 	%r2069, %r2068;
	and.b32  	%r2070, %r2066, %r2069;
	and.b32  	%r2071, %r37, 522133279;
	add.s32 	%r2072, %r2071, 522133279;
	sub.s32 	%r2073, %r2000, %r2071;
	and.b32  	%r2074, %r2070, %r2073;
	and.b32  	%r2075, %r2074, %r2072;
	or.b32  	%r2076, %r2075, %r37;
	and.b32  	%r2077, %r38, 1077952576;
	shr.u32 	%r2078, %r2077, 1;
	and.b32  	%r2079, %r38, -2139062144;
	shr.u32 	%r2080, %r2079, 2;
	not.b32 	%r2081, %r2080;
	and.b32  	%r2082, %r2078, %r2081;
	and.b32  	%r2083, %r38, 522133279;
	add.s32 	%r2084, %r2083, 522133279;
	sub.s32 	%r2085, %r2000, %r2083;
	and.b32  	%r2086, %r2082, %r2085;
	and.b32  	%r2087, %r2086, %r2084;
	or.b32  	%r2088, %r2087, %r38;
	mov.b32	{%rs10, %rs11}, %r2004;
	shr.u16 	%rs12, %rs11, 8;
	setp.eq.s16	%p59, %rs12, 32;
	and.b16  	%rs13, %rs11, 255;
	setp.eq.s16	%p60, %rs13, 32;
	shr.u16 	%rs14, %rs10, 8;
	setp.eq.s16	%p61, %rs14, 32;
	and.b16  	%rs15, %rs10, 255;
	setp.eq.s16	%p62, %rs15, 32;
	selp.b16	%rs16, -1, 0, %p62;
	selp.b16	%rs17, -1, 0, %p61;
	selp.b16	%rs18, -1, 0, %p60;
	selp.b16	%rs19, -1, 0, %p59;
	shr.u16 	%rs20, %rs17, 7;
	cvt.u32.u16	%r2089, %rs20;
	shr.u16 	%rs21, %rs16, 7;
	and.b16  	%rs22, %rs21, 255;
	cvt.u32.u16	%r2090, %rs22;
	prmt.b32 	%r2091, %r2089, %r2090, 30212;
	shr.u16 	%rs23, %rs19, 7;
	cvt.u32.u16	%r2092, %rs23;
	shr.u16 	%rs24, %rs18, 7;
	and.b16  	%rs25, %rs24, 255;
	cvt.u32.u16	%r2093, %rs25;
	prmt.b32 	%r2094, %r2092, %r2093, 30212;
	prmt.b32 	%r1985, %r2094, %r2091, 4180;
	mov.b32	{%rs26, %rs27}, %r2016;
	shr.u16 	%rs28, %rs27, 8;
	setp.eq.s16	%p63, %rs28, 32;
	and.b16  	%rs29, %rs27, 255;
	setp.eq.s16	%p64, %rs29, 32;
	shr.u16 	%rs30, %rs26, 8;
	setp.eq.s16	%p65, %rs30, 32;
	and.b16  	%rs31, %rs26, 255;
	setp.eq.s16	%p66, %rs31, 32;
	selp.b16	%rs32, -1, 0, %p66;
	selp.b16	%rs33, -1, 0, %p65;
	selp.b16	%rs34, -1, 0, %p64;
	selp.b16	%rs35, -1, 0, %p63;
	shr.u16 	%rs36, %rs33, 7;
	cvt.u32.u16	%r2095, %rs36;
	shr.u16 	%rs37, %rs32, 7;
	and.b16  	%rs38, %rs37, 255;
	cvt.u32.u16	%r2096, %rs38;
	prmt.b32 	%r2097, %r2095, %r2096, 30212;
	shr.u16 	%rs39, %rs35, 7;
	cvt.u32.u16	%r2098, %rs39;
	shr.u16 	%rs40, %rs34, 7;
	and.b16  	%rs41, %rs40, 255;
	cvt.u32.u16	%r2099, %rs41;
	prmt.b32 	%r2100, %r2098, %r2099, 30212;
	prmt.b32 	%r1981, %r2100, %r2097, 4180;
	mov.b32	{%rs42, %rs43}, %r2028;
	shr.u16 	%rs44, %rs43, 8;
	setp.eq.s16	%p67, %rs44, 32;
	and.b16  	%rs45, %rs43, 255;
	setp.eq.s16	%p68, %rs45, 32;
	shr.u16 	%rs46, %rs42, 8;
	setp.eq.s16	%p69, %rs46, 32;
	and.b16  	%rs47, %rs42, 255;
	setp.eq.s16	%p70, %rs47, 32;
	selp.b16	%rs48, -1, 0, %p70;
	selp.b16	%rs49, -1, 0, %p69;
	selp.b16	%rs50, -1, 0, %p68;
	selp.b16	%rs51, -1, 0, %p67;
	shr.u16 	%rs52, %rs49, 7;
	cvt.u32.u16	%r2101, %rs52;
	shr.u16 	%rs53, %rs48, 7;
	and.b16  	%rs54, %rs53, 255;
	cvt.u32.u16	%r2102, %rs54;
	prmt.b32 	%r2103, %r2101, %r2102, 30212;
	shr.u16 	%rs55, %rs51, 7;
	cvt.u32.u16	%r2104, %rs55;
	shr.u16 	%rs56, %rs50, 7;
	and.b16  	%rs57, %rs56, 255;
	cvt.u32.u16	%r2105, %rs57;
	prmt.b32 	%r2106, %r2104, %r2105, 30212;
	prmt.b32 	%r1977, %r2106, %r2103, 4180;
	mov.b32	{%rs58, %rs59}, %r2040;
	shr.u16 	%rs60, %rs59, 8;
	setp.eq.s16	%p71, %rs60, 32;
	and.b16  	%rs61, %rs59, 255;
	setp.eq.s16	%p72, %rs61, 32;
	shr.u16 	%rs62, %rs58, 8;
	setp.eq.s16	%p73, %rs62, 32;
	and.b16  	%rs63, %rs58, 255;
	setp.eq.s16	%p74, %rs63, 32;
	selp.b16	%rs64, -1, 0, %p74;
	selp.b16	%rs65, -1, 0, %p73;
	selp.b16	%rs66, -1, 0, %p72;
	selp.b16	%rs67, -1, 0, %p71;
	shr.u16 	%rs68, %rs65, 7;
	cvt.u32.u16	%r2107, %rs68;
	shr.u16 	%rs69, %rs64, 7;
	and.b16  	%rs70, %rs69, 255;
	cvt.u32.u16	%r2108, %rs70;
	prmt.b32 	%r2109, %r2107, %r2108, 30212;
	shr.u16 	%rs71, %rs67, 7;
	cvt.u32.u16	%r2110, %rs71;
	shr.u16 	%rs72, %rs66, 7;
	and.b16  	%rs73, %rs72, 255;
	cvt.u32.u16	%r2111, %rs73;
	prmt.b32 	%r2112, %r2110, %r2111, 30212;
	prmt.b32 	%r1973, %r2112, %r2109, 4180;
	mov.b32	{%rs74, %rs75}, %r2052;
	shr.u16 	%rs76, %rs75, 8;
	setp.eq.s16	%p75, %rs76, 32;
	and.b16  	%rs77, %rs75, 255;
	setp.eq.s16	%p76, %rs77, 32;
	shr.u16 	%rs78, %rs74, 8;
	setp.eq.s16	%p77, %rs78, 32;
	and.b16  	%rs79, %rs74, 255;
	setp.eq.s16	%p78, %rs79, 32;
	selp.b16	%rs80, -1, 0, %p78;
	selp.b16	%rs81, -1, 0, %p77;
	selp.b16	%rs82, -1, 0, %p76;
	selp.b16	%rs83, -1, 0, %p75;
	shr.u16 	%rs84, %rs81, 7;
	cvt.u32.u16	%r2113, %rs84;
	shr.u16 	%rs85, %rs80, 7;
	and.b16  	%rs86, %rs85, 255;
	cvt.u32.u16	%r2114, %rs86;
	prmt.b32 	%r2115, %r2113, %r2114, 30212;
	shr.u16 	%rs87, %rs83, 7;
	cvt.u32.u16	%r2116, %rs87;
	shr.u16 	%rs88, %rs82, 7;
	and.b16  	%rs89, %rs88, 255;
	cvt.u32.u16	%r2117, %rs89;
	prmt.b32 	%r2118, %r2116, %r2117, 30212;
	prmt.b32 	%r1969, %r2118, %r2115, 4180;
	mov.b32	{%rs90, %rs91}, %r2064;
	shr.u16 	%rs92, %rs91, 8;
	setp.eq.s16	%p79, %rs92, 32;
	and.b16  	%rs93, %rs91, 255;
	setp.eq.s16	%p80, %rs93, 32;
	shr.u16 	%rs94, %rs90, 8;
	setp.eq.s16	%p81, %rs94, 32;
	and.b16  	%rs95, %rs90, 255;
	setp.eq.s16	%p82, %rs95, 32;
	selp.b16	%rs96, -1, 0, %p82;
	selp.b16	%rs97, -1, 0, %p81;
	selp.b16	%rs98, -1, 0, %p80;
	selp.b16	%rs99, -1, 0, %p79;
	shr.u16 	%rs100, %rs97, 7;
	cvt.u32.u16	%r2119, %rs100;
	shr.u16 	%rs101, %rs96, 7;
	and.b16  	%rs102, %rs101, 255;
	cvt.u32.u16	%r2120, %rs102;
	prmt.b32 	%r2121, %r2119, %r2120, 30212;
	shr.u16 	%rs103, %rs99, 7;
	cvt.u32.u16	%r2122, %rs103;
	shr.u16 	%rs104, %rs98, 7;
	and.b16  	%rs105, %rs104, 255;
	cvt.u32.u16	%r2123, %rs105;
	prmt.b32 	%r2124, %r2122, %r2123, 30212;
	prmt.b32 	%r1965, %r2124, %r2121, 4180;
	mov.b32	{%rs106, %rs107}, %r2076;
	shr.u16 	%rs108, %rs107, 8;
	setp.eq.s16	%p83, %rs108, 32;
	and.b16  	%rs109, %rs107, 255;
	setp.eq.s16	%p84, %rs109, 32;
	shr.u16 	%rs110, %rs106, 8;
	setp.eq.s16	%p85, %rs110, 32;
	and.b16  	%rs111, %rs106, 255;
	setp.eq.s16	%p86, %rs111, 32;
	selp.b16	%rs112, -1, 0, %p86;
	selp.b16	%rs113, -1, 0, %p85;
	selp.b16	%rs114, -1, 0, %p84;
	selp.b16	%rs115, -1, 0, %p83;
	shr.u16 	%rs116, %rs113, 7;
	cvt.u32.u16	%r2125, %rs116;
	shr.u16 	%rs117, %rs112, 7;
	and.b16  	%rs118, %rs117, 255;
	cvt.u32.u16	%r2126, %rs118;
	prmt.b32 	%r2127, %r2125, %r2126, 30212;
	shr.u16 	%rs119, %rs115, 7;
	cvt.u32.u16	%r2128, %rs119;
	shr.u16 	%rs120, %rs114, 7;
	and.b16  	%rs121, %rs120, 255;
	cvt.u32.u16	%r2129, %rs121;
	prmt.b32 	%r2130, %r2128, %r2129, 30212;
	prmt.b32 	%r1961, %r2130, %r2127, 4180;
	mov.b32	{%rs122, %rs123}, %r2088;
	shr.u16 	%rs124, %rs123, 8;
	setp.eq.s16	%p87, %rs124, 32;
	and.b16  	%rs125, %rs123, 255;
	setp.eq.s16	%p88, %rs125, 32;
	shr.u16 	%rs126, %rs122, 8;
	setp.eq.s16	%p89, %rs126, 32;
	and.b16  	%rs127, %rs122, 255;
	setp.eq.s16	%p90, %rs127, 32;
	selp.b16	%rs128, -1, 0, %p90;
	selp.b16	%rs129, -1, 0, %p89;
	selp.b16	%rs130, -1, 0, %p88;
	selp.b16	%rs131, -1, 0, %p87;
	shr.u16 	%rs132, %rs129, 7;
	cvt.u32.u16	%r2131, %rs132;
	shr.u16 	%rs133, %rs128, 7;
	and.b16  	%rs134, %rs133, 255;
	cvt.u32.u16	%r2132, %rs134;
	prmt.b32 	%r2133, %r2131, %r2132, 30212;
	shr.u16 	%rs135, %rs131, 7;
	cvt.u32.u16	%r2134, %rs135;
	shr.u16 	%rs136, %rs130, 7;
	and.b16  	%rs137, %rs136, 255;
	cvt.u32.u16	%r2135, %rs137;
	prmt.b32 	%r2136, %r2134, %r2135, 30212;
	prmt.b32 	%r1962, %r2136, %r2133, 4180;
	mov.u32 	%r1991, 24;
	// inline asm
	shf.r.wrap.b32 %r1960, %r1961, %r1962, %r1991;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1964, %r1965, %r1961, %r1991;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1968, %r1969, %r1965, %r1991;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1972, %r1973, %r1969, %r1991;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1976, %r1977, %r1973, %r1991;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1980, %r1981, %r1977, %r1991;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1984, %r1985, %r1981, %r1991;
	// inline asm
	mov.u32 	%r1989, 0;
	// inline asm
	shf.r.wrap.b32 %r1988, %r1989, %r1985, %r1991;
	// inline asm
	or.b32  	%r2137, %r1988, 255;
	and.b32  	%r2138, %r2004, 1077952576;
	shr.u32 	%r2139, %r2138, 1;
	and.b32  	%r2140, %r2004, -2139062144;
	shr.u32 	%r2141, %r2140, 2;
	not.b32 	%r2142, %r2141;
	and.b32  	%r2143, %r2139, %r2142;
	and.b32  	%r2144, %r2004, 522133279;
	add.s32 	%r2145, %r2144, 522133279;
	sub.s32 	%r2146, %r2000, %r2144;
	and.b32  	%r2147, %r2143, %r2146;
	and.b32  	%r2148, %r2147, %r2145;
	and.b32  	%r2149, %r2148, %r2137;
	not.b32 	%r2150, %r2149;
	and.b32  	%r11590, %r2004, %r2150;
	and.b32  	%r2151, %r2016, 1077952576;
	shr.u32 	%r2152, %r2151, 1;
	and.b32  	%r2153, %r2016, -2139062144;
	shr.u32 	%r2154, %r2153, 2;
	not.b32 	%r2155, %r2154;
	and.b32  	%r2156, %r2152, %r2155;
	and.b32  	%r2157, %r2016, 522133279;
	add.s32 	%r2158, %r2157, 522133279;
	sub.s32 	%r2159, %r2000, %r2157;
	and.b32  	%r2160, %r2156, %r2159;
	and.b32  	%r2161, %r2160, %r2158;
	and.b32  	%r2162, %r2161, %r1984;
	not.b32 	%r2163, %r2162;
	and.b32  	%r11589, %r2016, %r2163;
	and.b32  	%r2164, %r2028, 1077952576;
	shr.u32 	%r2165, %r2164, 1;
	and.b32  	%r2166, %r2028, -2139062144;
	shr.u32 	%r2167, %r2166, 2;
	not.b32 	%r2168, %r2167;
	and.b32  	%r2169, %r2165, %r2168;
	and.b32  	%r2170, %r2028, 522133279;
	add.s32 	%r2171, %r2170, 522133279;
	sub.s32 	%r2172, %r2000, %r2170;
	and.b32  	%r2173, %r2169, %r2172;
	and.b32  	%r2174, %r2173, %r2171;
	and.b32  	%r2175, %r2174, %r1980;
	not.b32 	%r2176, %r2175;
	and.b32  	%r11588, %r2028, %r2176;
	and.b32  	%r2177, %r2040, 1077952576;
	shr.u32 	%r2178, %r2177, 1;
	and.b32  	%r2179, %r2040, -2139062144;
	shr.u32 	%r2180, %r2179, 2;
	not.b32 	%r2181, %r2180;
	and.b32  	%r2182, %r2178, %r2181;
	and.b32  	%r2183, %r2040, 522133279;
	add.s32 	%r2184, %r2183, 522133279;
	sub.s32 	%r2185, %r2000, %r2183;
	and.b32  	%r2186, %r2182, %r2185;
	and.b32  	%r2187, %r2186, %r2184;
	and.b32  	%r2188, %r2187, %r1976;
	not.b32 	%r2189, %r2188;
	and.b32  	%r11587, %r2040, %r2189;
	and.b32  	%r2190, %r2052, 1077952576;
	shr.u32 	%r2191, %r2190, 1;
	and.b32  	%r2192, %r2052, -2139062144;
	shr.u32 	%r2193, %r2192, 2;
	not.b32 	%r2194, %r2193;
	and.b32  	%r2195, %r2191, %r2194;
	and.b32  	%r2196, %r2052, 522133279;
	add.s32 	%r2197, %r2196, 522133279;
	sub.s32 	%r2198, %r2000, %r2196;
	and.b32  	%r2199, %r2195, %r2198;
	and.b32  	%r2200, %r2199, %r2197;
	and.b32  	%r2201, %r2200, %r1972;
	not.b32 	%r2202, %r2201;
	and.b32  	%r11594, %r2052, %r2202;
	and.b32  	%r2203, %r2064, 1077952576;
	shr.u32 	%r2204, %r2203, 1;
	and.b32  	%r2205, %r2064, -2139062144;
	shr.u32 	%r2206, %r2205, 2;
	not.b32 	%r2207, %r2206;
	and.b32  	%r2208, %r2204, %r2207;
	and.b32  	%r2209, %r2064, 522133279;
	add.s32 	%r2210, %r2209, 522133279;
	sub.s32 	%r2211, %r2000, %r2209;
	and.b32  	%r2212, %r2208, %r2211;
	and.b32  	%r2213, %r2212, %r2210;
	and.b32  	%r2214, %r2213, %r1968;
	not.b32 	%r2215, %r2214;
	and.b32  	%r11593, %r2064, %r2215;
	and.b32  	%r2216, %r2076, 1077952576;
	shr.u32 	%r2217, %r2216, 1;
	and.b32  	%r2218, %r2076, -2139062144;
	shr.u32 	%r2219, %r2218, 2;
	not.b32 	%r2220, %r2219;
	and.b32  	%r2221, %r2217, %r2220;
	and.b32  	%r2222, %r2076, 522133279;
	add.s32 	%r2223, %r2222, 522133279;
	sub.s32 	%r2224, %r2000, %r2222;
	and.b32  	%r2225, %r2221, %r2224;
	and.b32  	%r2226, %r2225, %r2223;
	and.b32  	%r2227, %r2226, %r1964;
	not.b32 	%r2228, %r2227;
	and.b32  	%r11592, %r2076, %r2228;
	and.b32  	%r2229, %r2088, 1077952576;
	shr.u32 	%r2230, %r2229, 1;
	and.b32  	%r2231, %r2088, -2139062144;
	shr.u32 	%r2232, %r2231, 2;
	not.b32 	%r2233, %r2232;
	and.b32  	%r2234, %r2230, %r2233;
	and.b32  	%r2235, %r2088, 522133279;
	add.s32 	%r2236, %r2235, 522133279;
	sub.s32 	%r2237, %r2000, %r2235;
	and.b32  	%r2238, %r2234, %r2237;
	and.b32  	%r2239, %r2238, %r2236;
	and.b32  	%r2240, %r2239, %r1960;
	not.b32 	%r2241, %r2240;
	and.b32  	%r11591, %r2088, %r2241;
	mov.u32 	%r11595, %r34;
	bra.uni 	BB4_1552;

BB4_101:
	setp.gt.s32	%p6, %r1959, 119;
	@%p6 bra 	BB4_115;

	setp.gt.s32	%p13, %r1959, 114;
	@%p13 bra 	BB4_111;

	setp.eq.s32	%p17, %r1959, 113;
	@%p17 bra 	BB4_780;
	bra.uni 	BB4_104;

BB4_780:
	setp.eq.s32	%p506, %r34, 0;
	add.s32 	%r11595, %r34, %r34;
	setp.gt.u32	%p507, %r11595, 31;
	or.pred  	%p508, %p506, %p507;
	@%p508 bra 	BB4_10;

	and.b32  	%r4195, %r39, 255;
	and.b32  	%r4196, %r39, 65280;
	prmt.b32 	%r4197, %r4196, %r4195, 8452;
	bfe.u32 	%r4198, %r39, 16, 8;
	and.b32  	%r4199, %r39, -16777216;
	shr.u32 	%r4200, %r4199, 8;
	or.b32  	%r4201, %r4198, %r4200;
	and.b32  	%r4202, %r40, 65280;
	and.b32  	%r4203, %r40, 255;
	prmt.b32 	%r4204, %r4202, %r4203, 8452;
	bfe.u32 	%r4205, %r40, 16, 8;
	and.b32  	%r4206, %r40, -16777216;
	shr.u32 	%r4207, %r4206, 8;
	or.b32  	%r4208, %r4205, %r4207;
	and.b32  	%r4209, %r41, 65280;
	and.b32  	%r4210, %r41, 255;
	prmt.b32 	%r4211, %r4209, %r4210, 8452;
	bfe.u32 	%r4212, %r41, 16, 8;
	and.b32  	%r4213, %r41, -16777216;
	shr.u32 	%r4214, %r4213, 8;
	or.b32  	%r4215, %r4212, %r4214;
	and.b32  	%r4216, %r42, 65280;
	and.b32  	%r4217, %r42, 255;
	prmt.b32 	%r4218, %r4216, %r4217, 8452;
	bfe.u32 	%r4219, %r42, 16, 8;
	and.b32  	%r4220, %r42, -16777216;
	shr.u32 	%r4221, %r4220, 8;
	or.b32  	%r4222, %r4219, %r4221;
	shl.b32 	%r4223, %r4197, 8;
	or.b32  	%r11590, %r4223, %r4197;
	shl.b32 	%r4224, %r4201, 8;
	or.b32  	%r11589, %r4224, %r4201;
	shl.b32 	%r4225, %r4204, 8;
	or.b32  	%r11588, %r4225, %r4204;
	shl.b32 	%r4226, %r4208, 8;
	or.b32  	%r11587, %r4226, %r4208;
	shl.b32 	%r4227, %r4211, 8;
	or.b32  	%r11594, %r4227, %r4211;
	shl.b32 	%r4228, %r4215, 8;
	or.b32  	%r11593, %r4228, %r4215;
	shl.b32 	%r4229, %r4218, 8;
	or.b32  	%r11592, %r4229, %r4218;
	shl.b32 	%r4230, %r4222, 8;
	or.b32  	%r11591, %r4230, %r4222;
	bra.uni 	BB4_1552;

BB4_22:
	setp.gt.s32	%p47, %r1959, 63;
	@%p47 bra 	BB4_30;

	setp.eq.s32	%p51, %r1959, 45;
	@%p51 bra 	BB4_370;
	bra.uni 	BB4_24;

BB4_370:
	setp.ge.u32	%p269, %r44, %r34;
	@%p269 bra 	BB4_10;

	and.b32  	%r3791, %r43, 3;
	shl.b32 	%r3792, %r3791, 3;
	mov.u32 	%r3793, 255;
	shl.b32 	%r381, %r3793, %r3792;
	not.b32 	%r382, %r381;
	and.b32  	%r383, %r381, 16843009;
	shr.u32 	%r3790, %r44, 2;
	setp.gt.s32	%p270, %r3790, 3;
	@%p270 bra 	BB4_379;

	setp.gt.s32	%p276, %r3790, 1;
	@%p276 bra 	BB4_376;

	setp.eq.s32	%p279, %r3790, 0;
	@%p279 bra 	BB4_389;
	bra.uni 	BB4_374;

BB4_389:
	and.b32  	%r3822, %r39, %r382;
	and.b32  	%r3823, %r381, %r39;
	sub.s32 	%r3824, %r3823, %r383;
	and.b32  	%r3825, %r3824, %r381;
	or.b32  	%r11590, %r3825, %r3822;
	bra.uni 	BB4_614;

BB4_88:
	setp.gt.s32	%p20, %r1959, 107;
	@%p20 bra 	BB4_93;

	setp.eq.s32	%p24, %r1959, 105;
	@%p24 bra 	BB4_1026;
	bra.uni 	BB4_90;

BB4_1026:
	setp.gt.u32	%p692, %r44, %r34;
	add.s32 	%r11595, %r34, 1;
	setp.gt.u32	%p693, %r11595, 31;
	or.pred  	%p694, %p692, %p693;
	@%p694 bra 	BB4_975;

	mov.u32 	%r5168, 24;
	// inline asm
	shf.r.wrap.b32 %r11591, %r37, %r38, %r5168;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r36, %r37, %r5168;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r35, %r36, %r5168;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r42, %r35, %r5168;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r41, %r42, %r5168;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r40, %r41, %r5168;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r39, %r40, %r5168;
	// inline asm
	and.b32  	%r5170, %r43, 3;
	shl.b32 	%r5171, %r5170, 3;
	shl.b32 	%r951, %r46, %r5171;
	mov.u32 	%r5172, 1;
	shl.b32 	%r5173, %r5172, %r5171;
	add.s32 	%r952, %r5173, -1;
	mov.u32 	%r5174, -256;
	shl.b32 	%r953, %r5174, %r5171;
	shr.u32 	%r5169, %r44, 2;
	setp.gt.s32	%p695, %r5169, 3;
	@%p695 bra 	BB4_1035;

	setp.gt.s32	%p701, %r5169, 1;
	@%p701 bra 	BB4_1032;

	setp.eq.s32	%p704, %r5169, 0;
	@%p704 bra 	BB4_1048;
	bra.uni 	BB4_1030;

BB4_1048:
	mov.u32 	%r5197, 0;
	// inline asm
	shf.r.wrap.b32 %r5196, %r5197, %r39, %r5168;
	// inline asm
	and.b32  	%r5200, %r952, %r39;
	or.b32  	%r5201, %r5200, %r951;
	and.b32  	%r5202, %r5196, %r953;
	or.b32  	%r11590, %r5201, %r5202;
	bra.uni 	BB4_1552;

BB4_57:
	setp.gt.s32	%p34, %r1959, 89;
	@%p34 bra 	BB4_67;

	setp.eq.s32	%p38, %r1959, 84;
	@%p38 bra 	BB4_1528;
	bra.uni 	BB4_59;

BB4_1528:
	setp.ge.u32	%p1018, %r44, %r34;
	@%p1018 bra 	BB4_975;

	and.b32  	%r8330, %r43, 3;
	shl.b32 	%r8331, %r8330, 3;
	mov.u32 	%r8332, 32;
	shl.b32 	%r1730, %r8332, %r8331;
	shr.u32 	%r8329, %r44, 2;
	setp.gt.s32	%p1019, %r8329, 3;
	@%p1019 bra 	BB4_1537;

	setp.gt.s32	%p1025, %r8329, 1;
	@%p1025 bra 	BB4_1534;

	setp.eq.s32	%p1028, %r8329, 0;
	@%p1028 bra 	BB4_1547;
	bra.uni 	BB4_1532;

BB4_1547:
	and.b32  	%r8424, %r39, 1077952576;
	shr.u32 	%r8425, %r8424, 1;
	and.b32  	%r8426, %r39, -2139062144;
	shr.u32 	%r8427, %r8426, 2;
	not.b32 	%r8428, %r8427;
	and.b32  	%r8429, %r8425, %r8428;
	and.b32  	%r8430, %r39, 522133279;
	add.s32 	%r8431, %r8430, 522133279;
	mov.u32 	%r8432, -84215046;
	sub.s32 	%r8433, %r8432, %r8430;
	and.b32  	%r8434, %r8429, %r8433;
	and.b32  	%r8435, %r8434, %r8431;
	and.b32  	%r8436, %r8435, %r1730;
	xor.b32  	%r11590, %r8436, %r39;
	bra.uni 	BB4_1025;

BB4_115:
	setp.gt.s32	%p7, %r1959, 121;
	@%p7 bra 	BB4_124;

	setp.eq.s32	%p11, %r1959, 120;
	@%p11 bra 	BB4_1161;
	bra.uni 	BB4_117;

BB4_1161:
	setp.ge.u32	%p767, %r44, %r34;
	add.s32 	%r5777, %r44, %r46;
	setp.gt.u32	%p768, %r5777, %r34;
	or.pred  	%p769, %p767, %p768;
	@%p769 bra 	BB4_975;

	setp.gt.s32	%p770, %r44, 15;
	@%p770 bra 	BB4_1191;

	setp.gt.s32	%p794, %r44, 7;
	@%p794 bra 	BB4_1176;

	setp.gt.s32	%p806, %r44, 3;
	@%p806 bra 	BB4_1169;

	setp.eq.s32	%p812, %r44, 1;
	@%p812 bra 	BB4_1240;

	setp.eq.s32	%p813, %r44, 2;
	@%p813 bra 	BB4_1239;
	bra.uni 	BB4_1167;

BB4_1239:
	mov.u32 	%r6278, 16;
	// inline asm
	shf.r.wrap.b32 %r6247, %r39, %r40, %r6278;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r40, %r41, %r6278;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r41, %r42, %r6278;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r42, %r35, %r6278;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6263, %r35, %r36, %r6278;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r36, %r37, %r6278;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r37, %r38, %r6278;
	// inline asm
	mov.u32 	%r6277, 0;
	// inline asm
	shf.r.wrap.b32 %r11591, %r38, %r6277, %r6278;
	// inline asm
	mov.u32 	%r42, %r6247;
	mov.u32 	%r38, %r6263;
	bra.uni 	BB4_1244;

BB4_18:
	setp.eq.s32	%p54, %r1959, 42;
	@%p54 bra 	BB4_445;

	setp.eq.s32	%p55, %r1959, 43;
	@%p55 bra 	BB4_390;
	bra.uni 	BB4_20;

BB4_390:
	setp.ge.u32	%p281, %r44, %r34;
	@%p281 bra 	BB4_10;

	and.b32  	%r3827, %r43, 3;
	shl.b32 	%r3828, %r3827, 3;
	mov.u32 	%r3829, 255;
	shl.b32 	%r392, %r3829, %r3828;
	not.b32 	%r393, %r392;
	and.b32  	%r394, %r392, 16843009;
	shr.u32 	%r3826, %r44, 2;
	setp.gt.s32	%p282, %r3826, 3;
	@%p282 bra 	BB4_399;

	setp.gt.s32	%p288, %r3826, 1;
	@%p288 bra 	BB4_396;

	setp.eq.s32	%p291, %r3826, 0;
	@%p291 bra 	BB4_409;
	bra.uni 	BB4_394;

BB4_409:
	and.b32  	%r3858, %r39, %r393;
	and.b32  	%r3859, %r392, %r39;
	add.s32 	%r3860, %r3859, %r394;
	and.b32  	%r3861, %r3860, %r392;
	or.b32  	%r11590, %r3861, %r3858;
	bra.uni 	BB4_614;

BB4_78:
	setp.eq.s32	%p27, %r1959, 100;
	@%p27 bra 	BB4_1428;

	setp.eq.s32	%p28, %r1959, 101;
	@%p28 bra 	BB4_134;
	bra.uni 	BB4_80;

BB4_134:
	and.b32  	%r2274, %r39, 1077952576;
	shr.u32 	%r2275, %r2274, 1;
	and.b32  	%r2276, %r39, -2139062144;
	shr.u32 	%r2277, %r2276, 2;
	not.b32 	%r2278, %r2277;
	and.b32  	%r2279, %r2275, %r2278;
	and.b32  	%r2280, %r39, 522133279;
	add.s32 	%r2281, %r2280, 522133279;
	mov.u32 	%r2282, -84215046;
	sub.s32 	%r2283, %r2282, %r2280;
	and.b32  	%r2284, %r2279, %r2283;
	and.b32  	%r2285, %r2284, %r2281;
	or.b32  	%r2286, %r2285, %r39;
	and.b32  	%r2287, %r40, 1077952576;
	shr.u32 	%r2288, %r2287, 1;
	and.b32  	%r2289, %r40, -2139062144;
	shr.u32 	%r2290, %r2289, 2;
	not.b32 	%r2291, %r2290;
	and.b32  	%r2292, %r2288, %r2291;
	and.b32  	%r2293, %r40, 522133279;
	add.s32 	%r2294, %r2293, 522133279;
	sub.s32 	%r2295, %r2282, %r2293;
	and.b32  	%r2296, %r2292, %r2295;
	and.b32  	%r2297, %r2296, %r2294;
	or.b32  	%r2298, %r2297, %r40;
	and.b32  	%r2299, %r41, 1077952576;
	shr.u32 	%r2300, %r2299, 1;
	and.b32  	%r2301, %r41, -2139062144;
	shr.u32 	%r2302, %r2301, 2;
	not.b32 	%r2303, %r2302;
	and.b32  	%r2304, %r2300, %r2303;
	and.b32  	%r2305, %r41, 522133279;
	add.s32 	%r2306, %r2305, 522133279;
	sub.s32 	%r2307, %r2282, %r2305;
	and.b32  	%r2308, %r2304, %r2307;
	and.b32  	%r2309, %r2308, %r2306;
	or.b32  	%r2310, %r2309, %r41;
	and.b32  	%r2311, %r42, 1077952576;
	shr.u32 	%r2312, %r2311, 1;
	and.b32  	%r2313, %r42, -2139062144;
	shr.u32 	%r2314, %r2313, 2;
	not.b32 	%r2315, %r2314;
	and.b32  	%r2316, %r2312, %r2315;
	and.b32  	%r2317, %r42, 522133279;
	add.s32 	%r2318, %r2317, 522133279;
	sub.s32 	%r2319, %r2282, %r2317;
	and.b32  	%r2320, %r2316, %r2319;
	and.b32  	%r2321, %r2320, %r2318;
	or.b32  	%r2322, %r2321, %r42;
	and.b32  	%r2323, %r35, 1077952576;
	shr.u32 	%r2324, %r2323, 1;
	and.b32  	%r2325, %r35, -2139062144;
	shr.u32 	%r2326, %r2325, 2;
	not.b32 	%r2327, %r2326;
	and.b32  	%r2328, %r2324, %r2327;
	and.b32  	%r2329, %r35, 522133279;
	add.s32 	%r2330, %r2329, 522133279;
	sub.s32 	%r2331, %r2282, %r2329;
	and.b32  	%r2332, %r2328, %r2331;
	and.b32  	%r2333, %r2332, %r2330;
	or.b32  	%r2334, %r2333, %r35;
	and.b32  	%r2335, %r36, 1077952576;
	shr.u32 	%r2336, %r2335, 1;
	and.b32  	%r2337, %r36, -2139062144;
	shr.u32 	%r2338, %r2337, 2;
	not.b32 	%r2339, %r2338;
	and.b32  	%r2340, %r2336, %r2339;
	and.b32  	%r2341, %r36, 522133279;
	add.s32 	%r2342, %r2341, 522133279;
	sub.s32 	%r2343, %r2282, %r2341;
	and.b32  	%r2344, %r2340, %r2343;
	and.b32  	%r2345, %r2344, %r2342;
	or.b32  	%r2346, %r2345, %r36;
	and.b32  	%r2347, %r37, 1077952576;
	shr.u32 	%r2348, %r2347, 1;
	and.b32  	%r2349, %r37, -2139062144;
	shr.u32 	%r2350, %r2349, 2;
	not.b32 	%r2351, %r2350;
	and.b32  	%r2352, %r2348, %r2351;
	and.b32  	%r2353, %r37, 522133279;
	add.s32 	%r2354, %r2353, 522133279;
	sub.s32 	%r2355, %r2282, %r2353;
	and.b32  	%r2356, %r2352, %r2355;
	and.b32  	%r2357, %r2356, %r2354;
	or.b32  	%r2358, %r2357, %r37;
	and.b32  	%r2359, %r38, 1077952576;
	shr.u32 	%r2360, %r2359, 1;
	and.b32  	%r2361, %r38, -2139062144;
	shr.u32 	%r2362, %r2361, 2;
	not.b32 	%r2363, %r2362;
	and.b32  	%r2364, %r2360, %r2363;
	and.b32  	%r2365, %r38, 522133279;
	add.s32 	%r2366, %r2365, 522133279;
	sub.s32 	%r2367, %r2282, %r2365;
	and.b32  	%r2368, %r2364, %r2367;
	and.b32  	%r2369, %r2368, %r2366;
	or.b32  	%r2370, %r2369, %r38;
	mov.b32	{%rs138, %rs139}, %r2286;
	shr.u16 	%rs140, %rs139, 8;
	cvt.u16.u32	%rs141, %r43;
	and.b16  	%rs142, %rs141, 255;
	setp.eq.s16	%p91, %rs140, %rs142;
	and.b16  	%rs143, %rs139, 255;
	setp.eq.s16	%p92, %rs143, %rs142;
	shr.u16 	%rs144, %rs138, 8;
	setp.eq.s16	%p93, %rs144, %rs142;
	and.b16  	%rs145, %rs138, 255;
	setp.eq.s16	%p94, %rs145, %rs142;
	selp.b16	%rs146, -1, 0, %p94;
	selp.b16	%rs147, -1, 0, %p93;
	selp.b16	%rs148, -1, 0, %p92;
	selp.b16	%rs149, -1, 0, %p91;
	shr.u16 	%rs150, %rs147, 7;
	cvt.u32.u16	%r2371, %rs150;
	shr.u16 	%rs151, %rs146, 7;
	and.b16  	%rs152, %rs151, 255;
	cvt.u32.u16	%r2372, %rs152;
	prmt.b32 	%r2373, %r2371, %r2372, 30212;
	shr.u16 	%rs153, %rs149, 7;
	cvt.u32.u16	%r2374, %rs153;
	shr.u16 	%rs154, %rs148, 7;
	and.b16  	%rs155, %rs154, 255;
	cvt.u32.u16	%r2375, %rs155;
	prmt.b32 	%r2376, %r2374, %r2375, 30212;
	prmt.b32 	%r2267, %r2376, %r2373, 4180;
	mov.b32	{%rs156, %rs157}, %r2298;
	shr.u16 	%rs158, %rs157, 8;
	setp.eq.s16	%p95, %rs158, %rs142;
	and.b16  	%rs159, %rs157, 255;
	setp.eq.s16	%p96, %rs159, %rs142;
	shr.u16 	%rs160, %rs156, 8;
	setp.eq.s16	%p97, %rs160, %rs142;
	and.b16  	%rs161, %rs156, 255;
	setp.eq.s16	%p98, %rs161, %rs142;
	selp.b16	%rs162, -1, 0, %p98;
	selp.b16	%rs163, -1, 0, %p97;
	selp.b16	%rs164, -1, 0, %p96;
	selp.b16	%rs165, -1, 0, %p95;
	shr.u16 	%rs166, %rs163, 7;
	cvt.u32.u16	%r2377, %rs166;
	shr.u16 	%rs167, %rs162, 7;
	and.b16  	%rs168, %rs167, 255;
	cvt.u32.u16	%r2378, %rs168;
	prmt.b32 	%r2379, %r2377, %r2378, 30212;
	shr.u16 	%rs169, %rs165, 7;
	cvt.u32.u16	%r2380, %rs169;
	shr.u16 	%rs170, %rs164, 7;
	and.b16  	%rs171, %rs170, 255;
	cvt.u32.u16	%r2381, %rs171;
	prmt.b32 	%r2382, %r2380, %r2381, 30212;
	prmt.b32 	%r2263, %r2382, %r2379, 4180;
	mov.b32	{%rs172, %rs173}, %r2310;
	shr.u16 	%rs174, %rs173, 8;
	setp.eq.s16	%p99, %rs174, %rs142;
	and.b16  	%rs175, %rs173, 255;
	setp.eq.s16	%p100, %rs175, %rs142;
	shr.u16 	%rs176, %rs172, 8;
	setp.eq.s16	%p101, %rs176, %rs142;
	and.b16  	%rs177, %rs172, 255;
	setp.eq.s16	%p102, %rs177, %rs142;
	selp.b16	%rs178, -1, 0, %p102;
	selp.b16	%rs179, -1, 0, %p101;
	selp.b16	%rs180, -1, 0, %p100;
	selp.b16	%rs181, -1, 0, %p99;
	shr.u16 	%rs182, %rs179, 7;
	cvt.u32.u16	%r2383, %rs182;
	shr.u16 	%rs183, %rs178, 7;
	and.b16  	%rs184, %rs183, 255;
	cvt.u32.u16	%r2384, %rs184;
	prmt.b32 	%r2385, %r2383, %r2384, 30212;
	shr.u16 	%rs185, %rs181, 7;
	cvt.u32.u16	%r2386, %rs185;
	shr.u16 	%rs186, %rs180, 7;
	and.b16  	%rs187, %rs186, 255;
	cvt.u32.u16	%r2387, %rs187;
	prmt.b32 	%r2388, %r2386, %r2387, 30212;
	prmt.b32 	%r2259, %r2388, %r2385, 4180;
	mov.b32	{%rs188, %rs189}, %r2322;
	shr.u16 	%rs190, %rs189, 8;
	setp.eq.s16	%p103, %rs190, %rs142;
	and.b16  	%rs191, %rs189, 255;
	setp.eq.s16	%p104, %rs191, %rs142;
	shr.u16 	%rs192, %rs188, 8;
	setp.eq.s16	%p105, %rs192, %rs142;
	and.b16  	%rs193, %rs188, 255;
	setp.eq.s16	%p106, %rs193, %rs142;
	selp.b16	%rs194, -1, 0, %p106;
	selp.b16	%rs195, -1, 0, %p105;
	selp.b16	%rs196, -1, 0, %p104;
	selp.b16	%rs197, -1, 0, %p103;
	shr.u16 	%rs198, %rs195, 7;
	cvt.u32.u16	%r2389, %rs198;
	shr.u16 	%rs199, %rs194, 7;
	and.b16  	%rs200, %rs199, 255;
	cvt.u32.u16	%r2390, %rs200;
	prmt.b32 	%r2391, %r2389, %r2390, 30212;
	shr.u16 	%rs201, %rs197, 7;
	cvt.u32.u16	%r2392, %rs201;
	shr.u16 	%rs202, %rs196, 7;
	and.b16  	%rs203, %rs202, 255;
	cvt.u32.u16	%r2393, %rs203;
	prmt.b32 	%r2394, %r2392, %r2393, 30212;
	prmt.b32 	%r2255, %r2394, %r2391, 4180;
	mov.b32	{%rs204, %rs205}, %r2334;
	shr.u16 	%rs206, %rs205, 8;
	setp.eq.s16	%p107, %rs206, %rs142;
	and.b16  	%rs207, %rs205, 255;
	setp.eq.s16	%p108, %rs207, %rs142;
	shr.u16 	%rs208, %rs204, 8;
	setp.eq.s16	%p109, %rs208, %rs142;
	and.b16  	%rs209, %rs204, 255;
	setp.eq.s16	%p110, %rs209, %rs142;
	selp.b16	%rs210, -1, 0, %p110;
	selp.b16	%rs211, -1, 0, %p109;
	selp.b16	%rs212, -1, 0, %p108;
	selp.b16	%rs213, -1, 0, %p107;
	shr.u16 	%rs214, %rs211, 7;
	cvt.u32.u16	%r2395, %rs214;
	shr.u16 	%rs215, %rs210, 7;
	and.b16  	%rs216, %rs215, 255;
	cvt.u32.u16	%r2396, %rs216;
	prmt.b32 	%r2397, %r2395, %r2396, 30212;
	shr.u16 	%rs217, %rs213, 7;
	cvt.u32.u16	%r2398, %rs217;
	shr.u16 	%rs218, %rs212, 7;
	and.b16  	%rs219, %rs218, 255;
	cvt.u32.u16	%r2399, %rs219;
	prmt.b32 	%r2400, %r2398, %r2399, 30212;
	prmt.b32 	%r2251, %r2400, %r2397, 4180;
	mov.b32	{%rs220, %rs221}, %r2346;
	shr.u16 	%rs222, %rs221, 8;
	setp.eq.s16	%p111, %rs222, %rs142;
	and.b16  	%rs223, %rs221, 255;
	setp.eq.s16	%p112, %rs223, %rs142;
	shr.u16 	%rs224, %rs220, 8;
	setp.eq.s16	%p113, %rs224, %rs142;
	and.b16  	%rs225, %rs220, 255;
	setp.eq.s16	%p114, %rs225, %rs142;
	selp.b16	%rs226, -1, 0, %p114;
	selp.b16	%rs227, -1, 0, %p113;
	selp.b16	%rs228, -1, 0, %p112;
	selp.b16	%rs229, -1, 0, %p111;
	shr.u16 	%rs230, %rs227, 7;
	cvt.u32.u16	%r2401, %rs230;
	shr.u16 	%rs231, %rs226, 7;
	and.b16  	%rs232, %rs231, 255;
	cvt.u32.u16	%r2402, %rs232;
	prmt.b32 	%r2403, %r2401, %r2402, 30212;
	shr.u16 	%rs233, %rs229, 7;
	cvt.u32.u16	%r2404, %rs233;
	shr.u16 	%rs234, %rs228, 7;
	and.b16  	%rs235, %rs234, 255;
	cvt.u32.u16	%r2405, %rs235;
	prmt.b32 	%r2406, %r2404, %r2405, 30212;
	prmt.b32 	%r2247, %r2406, %r2403, 4180;
	mov.b32	{%rs236, %rs237}, %r2358;
	shr.u16 	%rs238, %rs237, 8;
	setp.eq.s16	%p115, %rs238, %rs142;
	and.b16  	%rs239, %rs237, 255;
	setp.eq.s16	%p116, %rs239, %rs142;
	shr.u16 	%rs240, %rs236, 8;
	setp.eq.s16	%p117, %rs240, %rs142;
	and.b16  	%rs241, %rs236, 255;
	setp.eq.s16	%p118, %rs241, %rs142;
	selp.b16	%rs242, -1, 0, %p118;
	selp.b16	%rs243, -1, 0, %p117;
	selp.b16	%rs244, -1, 0, %p116;
	selp.b16	%rs245, -1, 0, %p115;
	shr.u16 	%rs246, %rs243, 7;
	cvt.u32.u16	%r2407, %rs246;
	shr.u16 	%rs247, %rs242, 7;
	and.b16  	%rs248, %rs247, 255;
	cvt.u32.u16	%r2408, %rs248;
	prmt.b32 	%r2409, %r2407, %r2408, 30212;
	shr.u16 	%rs249, %rs245, 7;
	cvt.u32.u16	%r2410, %rs249;
	shr.u16 	%rs250, %rs244, 7;
	and.b16  	%rs251, %rs250, 255;
	cvt.u32.u16	%r2411, %rs251;
	prmt.b32 	%r2412, %r2410, %r2411, 30212;
	prmt.b32 	%r2243, %r2412, %r2409, 4180;
	mov.b32	{%rs252, %rs253}, %r2370;
	shr.u16 	%rs254, %rs253, 8;
	setp.eq.s16	%p119, %rs254, %rs142;
	and.b16  	%rs255, %rs253, 255;
	setp.eq.s16	%p120, %rs255, %rs142;
	shr.u16 	%rs256, %rs252, 8;
	setp.eq.s16	%p121, %rs256, %rs142;
	and.b16  	%rs257, %rs252, 255;
	setp.eq.s16	%p122, %rs257, %rs142;
	selp.b16	%rs258, -1, 0, %p122;
	selp.b16	%rs259, -1, 0, %p121;
	selp.b16	%rs260, -1, 0, %p120;
	selp.b16	%rs261, -1, 0, %p119;
	shr.u16 	%rs262, %rs259, 7;
	cvt.u32.u16	%r2413, %rs262;
	shr.u16 	%rs263, %rs258, 7;
	and.b16  	%rs264, %rs263, 255;
	cvt.u32.u16	%r2414, %rs264;
	prmt.b32 	%r2415, %r2413, %r2414, 30212;
	shr.u16 	%rs265, %rs261, 7;
	cvt.u32.u16	%r2416, %rs265;
	shr.u16 	%rs266, %rs260, 7;
	and.b16  	%rs267, %rs266, 255;
	cvt.u32.u16	%r2417, %rs267;
	prmt.b32 	%r2418, %r2416, %r2417, 30212;
	prmt.b32 	%r2244, %r2418, %r2415, 4180;
	mov.u32 	%r2273, 24;
	// inline asm
	shf.r.wrap.b32 %r2242, %r2243, %r2244, %r2273;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2246, %r2247, %r2243, %r2273;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2250, %r2251, %r2247, %r2273;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2254, %r2255, %r2251, %r2273;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2258, %r2259, %r2255, %r2273;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2262, %r2263, %r2259, %r2273;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2266, %r2267, %r2263, %r2273;
	// inline asm
	mov.u32 	%r2271, 0;
	// inline asm
	shf.r.wrap.b32 %r2270, %r2271, %r2267, %r2273;
	// inline asm
	or.b32  	%r2419, %r2270, 255;
	and.b32  	%r2420, %r2286, 1077952576;
	shr.u32 	%r2421, %r2420, 1;
	and.b32  	%r2422, %r2286, -2139062144;
	shr.u32 	%r2423, %r2422, 2;
	not.b32 	%r2424, %r2423;
	and.b32  	%r2425, %r2421, %r2424;
	and.b32  	%r2426, %r2286, 522133279;
	add.s32 	%r2427, %r2426, 522133279;
	sub.s32 	%r2428, %r2282, %r2426;
	and.b32  	%r2429, %r2425, %r2428;
	and.b32  	%r2430, %r2429, %r2427;
	and.b32  	%r2431, %r2430, %r2419;
	not.b32 	%r2432, %r2431;
	and.b32  	%r11590, %r2286, %r2432;
	and.b32  	%r2433, %r2298, 1077952576;
	shr.u32 	%r2434, %r2433, 1;
	and.b32  	%r2435, %r2298, -2139062144;
	shr.u32 	%r2436, %r2435, 2;
	not.b32 	%r2437, %r2436;
	and.b32  	%r2438, %r2434, %r2437;
	and.b32  	%r2439, %r2298, 522133279;
	add.s32 	%r2440, %r2439, 522133279;
	sub.s32 	%r2441, %r2282, %r2439;
	and.b32  	%r2442, %r2438, %r2441;
	and.b32  	%r2443, %r2442, %r2440;
	and.b32  	%r2444, %r2443, %r2266;
	not.b32 	%r2445, %r2444;
	and.b32  	%r11589, %r2298, %r2445;
	and.b32  	%r2446, %r2310, 1077952576;
	shr.u32 	%r2447, %r2446, 1;
	and.b32  	%r2448, %r2310, -2139062144;
	shr.u32 	%r2449, %r2448, 2;
	not.b32 	%r2450, %r2449;
	and.b32  	%r2451, %r2447, %r2450;
	and.b32  	%r2452, %r2310, 522133279;
	add.s32 	%r2453, %r2452, 522133279;
	sub.s32 	%r2454, %r2282, %r2452;
	and.b32  	%r2455, %r2451, %r2454;
	and.b32  	%r2456, %r2455, %r2453;
	and.b32  	%r2457, %r2456, %r2262;
	not.b32 	%r2458, %r2457;
	and.b32  	%r11588, %r2310, %r2458;
	and.b32  	%r2459, %r2322, 1077952576;
	shr.u32 	%r2460, %r2459, 1;
	and.b32  	%r2461, %r2322, -2139062144;
	shr.u32 	%r2462, %r2461, 2;
	not.b32 	%r2463, %r2462;
	and.b32  	%r2464, %r2460, %r2463;
	and.b32  	%r2465, %r2322, 522133279;
	add.s32 	%r2466, %r2465, 522133279;
	sub.s32 	%r2467, %r2282, %r2465;
	and.b32  	%r2468, %r2464, %r2467;
	and.b32  	%r2469, %r2468, %r2466;
	and.b32  	%r2470, %r2469, %r2258;
	not.b32 	%r2471, %r2470;
	and.b32  	%r11587, %r2322, %r2471;
	and.b32  	%r2472, %r2334, 1077952576;
	shr.u32 	%r2473, %r2472, 1;
	and.b32  	%r2474, %r2334, -2139062144;
	shr.u32 	%r2475, %r2474, 2;
	not.b32 	%r2476, %r2475;
	and.b32  	%r2477, %r2473, %r2476;
	and.b32  	%r2478, %r2334, 522133279;
	add.s32 	%r2479, %r2478, 522133279;
	sub.s32 	%r2480, %r2282, %r2478;
	and.b32  	%r2481, %r2477, %r2480;
	and.b32  	%r2482, %r2481, %r2479;
	and.b32  	%r2483, %r2482, %r2254;
	not.b32 	%r2484, %r2483;
	and.b32  	%r11594, %r2334, %r2484;
	and.b32  	%r2485, %r2346, 1077952576;
	shr.u32 	%r2486, %r2485, 1;
	and.b32  	%r2487, %r2346, -2139062144;
	shr.u32 	%r2488, %r2487, 2;
	not.b32 	%r2489, %r2488;
	and.b32  	%r2490, %r2486, %r2489;
	and.b32  	%r2491, %r2346, 522133279;
	add.s32 	%r2492, %r2491, 522133279;
	sub.s32 	%r2493, %r2282, %r2491;
	and.b32  	%r2494, %r2490, %r2493;
	and.b32  	%r2495, %r2494, %r2492;
	and.b32  	%r2496, %r2495, %r2250;
	not.b32 	%r2497, %r2496;
	and.b32  	%r11593, %r2346, %r2497;
	and.b32  	%r2498, %r2358, 1077952576;
	shr.u32 	%r2499, %r2498, 1;
	and.b32  	%r2500, %r2358, -2139062144;
	shr.u32 	%r2501, %r2500, 2;
	not.b32 	%r2502, %r2501;
	and.b32  	%r2503, %r2499, %r2502;
	and.b32  	%r2504, %r2358, 522133279;
	add.s32 	%r2505, %r2504, 522133279;
	sub.s32 	%r2506, %r2282, %r2504;
	and.b32  	%r2507, %r2503, %r2506;
	and.b32  	%r2508, %r2507, %r2505;
	and.b32  	%r2509, %r2508, %r2246;
	not.b32 	%r2510, %r2509;
	and.b32  	%r11592, %r2358, %r2510;
	and.b32  	%r2511, %r2370, 1077952576;
	shr.u32 	%r2512, %r2511, 1;
	and.b32  	%r2513, %r2370, -2139062144;
	shr.u32 	%r2514, %r2513, 2;
	not.b32 	%r2515, %r2514;
	and.b32  	%r2516, %r2512, %r2515;
	and.b32  	%r2517, %r2370, 522133279;
	add.s32 	%r2518, %r2517, 522133279;
	sub.s32 	%r2519, %r2282, %r2517;
	and.b32  	%r2520, %r2516, %r2519;
	and.b32  	%r2521, %r2520, %r2518;
	and.b32  	%r2522, %r2521, %r2242;
	not.b32 	%r2523, %r2522;
	and.b32  	%r11591, %r2370, %r2523;
	mov.u32 	%r11595, %r34;
	bra.uni 	BB4_1552;

BB4_49:
	setp.eq.s32	%p41, %r1959, 76;
	@%p41 bra 	BB4_425;

	setp.eq.s32	%p42, %r1959, 79;
	@%p42 bra 	BB4_1049;
	bra.uni 	BB4_51;

BB4_1049:
	setp.ge.u32	%p706, %r44, %r34;
	add.s32 	%r5203, %r44, %r46;
	setp.gt.u32	%p707, %r5203, %r34;
	or.pred  	%p708, %p706, %p707;
	@%p708 bra 	BB4_975;

	mov.u32 	%r11591, 0;
	setp.gt.s32	%p709, %r46, 15;
	@%p709 bra 	BB4_1083;

	setp.gt.s32	%p733, %r46, 7;
	@%p733 bra 	BB4_1067;

	setp.gt.s32	%p745, %r46, 3;
	@%p745 bra 	BB4_1060;

	setp.gt.s32	%p751, %r46, 1;
	@%p751 bra 	BB4_1057;

	setp.eq.s32	%p754, %r46, 0;
	@%p754 bra 	BB4_1135;
	bra.uni 	BB4_1055;

BB4_1135:
	mov.u32 	%r11594, %r35;
	mov.u32 	%r11593, %r36;
	mov.u32 	%r11592, %r37;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11509, %r39;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11587, %r42;
	bra.uni 	BB4_1136;

BB4_111:
	setp.eq.s32	%p14, %r1959, 115;
	@%p14 bra 	BB4_973;

	setp.eq.s32	%p15, %r1959, 116;
	@%p15 bra 	BB4_1548;
	bra.uni 	BB4_113;

BB4_1548:
	and.b32  	%r8437, %r39, 1077952576;
	shr.u32 	%r8438, %r8437, 1;
	and.b32  	%r8439, %r39, -2139062144;
	shr.u32 	%r8440, %r8439, 2;
	not.b32 	%r8441, %r8440;
	and.b32  	%r8442, %r8438, %r8441;
	and.b32  	%r8443, %r39, 522133279;
	add.s32 	%r8444, %r8443, 522133279;
	mov.u32 	%r8445, -84215046;
	sub.s32 	%r8446, %r8445, %r8443;
	and.b32  	%r8447, %r8442, %r8446;
	and.b32  	%r8448, %r8447, %r8444;
	xor.b32  	%r11590, %r8448, %r39;
	and.b32  	%r8449, %r40, 1077952576;
	shr.u32 	%r8450, %r8449, 1;
	and.b32  	%r8451, %r40, -2139062144;
	shr.u32 	%r8452, %r8451, 2;
	not.b32 	%r8453, %r8452;
	and.b32  	%r8454, %r8450, %r8453;
	and.b32  	%r8455, %r40, 522133279;
	add.s32 	%r8456, %r8455, 522133279;
	sub.s32 	%r8457, %r8445, %r8455;
	and.b32  	%r8458, %r8454, %r8457;
	and.b32  	%r8459, %r8458, %r8456;
	xor.b32  	%r11589, %r8459, %r40;
	and.b32  	%r8460, %r41, 1077952576;
	shr.u32 	%r8461, %r8460, 1;
	and.b32  	%r8462, %r41, -2139062144;
	shr.u32 	%r8463, %r8462, 2;
	not.b32 	%r8464, %r8463;
	and.b32  	%r8465, %r8461, %r8464;
	and.b32  	%r8466, %r41, 522133279;
	add.s32 	%r8467, %r8466, 522133279;
	sub.s32 	%r8468, %r8445, %r8466;
	and.b32  	%r8469, %r8465, %r8468;
	and.b32  	%r8470, %r8469, %r8467;
	xor.b32  	%r11588, %r8470, %r41;
	and.b32  	%r8471, %r42, 1077952576;
	shr.u32 	%r8472, %r8471, 1;
	and.b32  	%r8473, %r42, -2139062144;
	shr.u32 	%r8474, %r8473, 2;
	not.b32 	%r8475, %r8474;
	and.b32  	%r8476, %r8472, %r8475;
	and.b32  	%r8477, %r42, 522133279;
	add.s32 	%r8478, %r8477, 522133279;
	sub.s32 	%r8479, %r8445, %r8477;
	and.b32  	%r8480, %r8476, %r8479;
	and.b32  	%r8481, %r8480, %r8478;
	xor.b32  	%r11587, %r8481, %r42;
	and.b32  	%r8482, %r35, 1077952576;
	shr.u32 	%r8483, %r8482, 1;
	and.b32  	%r8484, %r35, -2139062144;
	shr.u32 	%r8485, %r8484, 2;
	not.b32 	%r8486, %r8485;
	and.b32  	%r8487, %r8483, %r8486;
	and.b32  	%r8488, %r35, 522133279;
	add.s32 	%r8489, %r8488, 522133279;
	sub.s32 	%r8490, %r8445, %r8488;
	and.b32  	%r8491, %r8487, %r8490;
	and.b32  	%r8492, %r8491, %r8489;
	xor.b32  	%r11594, %r8492, %r35;
	and.b32  	%r8493, %r36, 1077952576;
	shr.u32 	%r8494, %r8493, 1;
	and.b32  	%r8495, %r36, -2139062144;
	shr.u32 	%r8496, %r8495, 2;
	not.b32 	%r8497, %r8496;
	and.b32  	%r8498, %r8494, %r8497;
	and.b32  	%r8499, %r36, 522133279;
	add.s32 	%r8500, %r8499, 522133279;
	sub.s32 	%r8501, %r8445, %r8499;
	and.b32  	%r8502, %r8498, %r8501;
	and.b32  	%r8503, %r8502, %r8500;
	xor.b32  	%r11593, %r8503, %r36;
	and.b32  	%r8504, %r37, 1077952576;
	shr.u32 	%r8505, %r8504, 1;
	and.b32  	%r8506, %r37, -2139062144;
	shr.u32 	%r8507, %r8506, 2;
	not.b32 	%r8508, %r8507;
	and.b32  	%r8509, %r8505, %r8508;
	and.b32  	%r8510, %r37, 522133279;
	add.s32 	%r8511, %r8510, 522133279;
	sub.s32 	%r8512, %r8445, %r8510;
	and.b32  	%r8513, %r8509, %r8512;
	and.b32  	%r8514, %r8513, %r8511;
	xor.b32  	%r11592, %r8514, %r37;
	and.b32  	%r8515, %r38, 1077952576;
	shr.u32 	%r8516, %r8515, 1;
	and.b32  	%r8517, %r38, -2139062144;
	shr.u32 	%r8518, %r8517, 2;
	not.b32 	%r8519, %r8518;
	and.b32  	%r8520, %r8516, %r8519;
	and.b32  	%r8521, %r38, 522133279;
	add.s32 	%r8522, %r8521, 522133279;
	sub.s32 	%r8523, %r8445, %r8521;
	and.b32  	%r8524, %r8520, %r8523;
	and.b32  	%r8525, %r8524, %r8522;
	xor.b32  	%r11591, %r8525, %r38;
	bra.uni 	BB4_1551;

BB4_30:
	setp.eq.s32	%p48, %r1959, 64;
	@%p48 bra 	BB4_948;

	setp.eq.s32	%p49, %r1959, 67;
	@%p49 bra 	BB4_1549;
	bra.uni 	BB4_32;

BB4_1549:
	and.b32  	%r8526, %r39, 1077952576;
	shr.u32 	%r8527, %r8526, 1;
	and.b32  	%r8528, %r39, -2139062144;
	shr.u32 	%r8529, %r8528, 2;
	not.b32 	%r8530, %r8529;
	and.b32  	%r8531, %r8527, %r8530;
	and.b32  	%r8532, %r39, 522133279;
	add.s32 	%r8533, %r8532, 522133279;
	mov.u32 	%r8534, -84215046;
	sub.s32 	%r8535, %r8534, %r8532;
	and.b32  	%r8536, %r8531, %r8535;
	and.b32  	%r8537, %r8536, %r8533;
	not.b32 	%r8538, %r8537;
	and.b32  	%r8539, %r40, 1077952576;
	shr.u32 	%r8540, %r8539, 1;
	and.b32  	%r8541, %r40, -2139062144;
	shr.u32 	%r8542, %r8541, 2;
	not.b32 	%r8543, %r8542;
	and.b32  	%r8544, %r8540, %r8543;
	and.b32  	%r8545, %r40, 522133279;
	add.s32 	%r8546, %r8545, 522133279;
	sub.s32 	%r8547, %r8534, %r8545;
	and.b32  	%r8548, %r8544, %r8547;
	and.b32  	%r8549, %r8548, %r8546;
	not.b32 	%r8550, %r8549;
	and.b32  	%r11589, %r40, %r8550;
	and.b32  	%r8551, %r41, 1077952576;
	shr.u32 	%r8552, %r8551, 1;
	and.b32  	%r8553, %r41, -2139062144;
	shr.u32 	%r8554, %r8553, 2;
	not.b32 	%r8555, %r8554;
	and.b32  	%r8556, %r8552, %r8555;
	and.b32  	%r8557, %r41, 522133279;
	add.s32 	%r8558, %r8557, 522133279;
	sub.s32 	%r8559, %r8534, %r8557;
	and.b32  	%r8560, %r8556, %r8559;
	and.b32  	%r8561, %r8560, %r8558;
	not.b32 	%r8562, %r8561;
	and.b32  	%r11588, %r41, %r8562;
	and.b32  	%r8563, %r42, 1077952576;
	shr.u32 	%r8564, %r8563, 1;
	and.b32  	%r8565, %r42, -2139062144;
	shr.u32 	%r8566, %r8565, 2;
	not.b32 	%r8567, %r8566;
	and.b32  	%r8568, %r8564, %r8567;
	and.b32  	%r8569, %r42, 522133279;
	add.s32 	%r8570, %r8569, 522133279;
	sub.s32 	%r8571, %r8534, %r8569;
	and.b32  	%r8572, %r8568, %r8571;
	and.b32  	%r8573, %r8572, %r8570;
	not.b32 	%r8574, %r8573;
	and.b32  	%r11587, %r42, %r8574;
	and.b32  	%r8575, %r35, 1077952576;
	shr.u32 	%r8576, %r8575, 1;
	and.b32  	%r8577, %r35, -2139062144;
	shr.u32 	%r8578, %r8577, 2;
	not.b32 	%r8579, %r8578;
	and.b32  	%r8580, %r8576, %r8579;
	and.b32  	%r8581, %r35, 522133279;
	add.s32 	%r8582, %r8581, 522133279;
	sub.s32 	%r8583, %r8534, %r8581;
	and.b32  	%r8584, %r8580, %r8583;
	and.b32  	%r8585, %r8584, %r8582;
	not.b32 	%r8586, %r8585;
	and.b32  	%r11594, %r35, %r8586;
	and.b32  	%r8587, %r36, 1077952576;
	shr.u32 	%r8588, %r8587, 1;
	and.b32  	%r8589, %r36, -2139062144;
	shr.u32 	%r8590, %r8589, 2;
	not.b32 	%r8591, %r8590;
	and.b32  	%r8592, %r8588, %r8591;
	and.b32  	%r8593, %r36, 522133279;
	add.s32 	%r8594, %r8593, 522133279;
	sub.s32 	%r8595, %r8534, %r8593;
	and.b32  	%r8596, %r8592, %r8595;
	and.b32  	%r8597, %r8596, %r8594;
	not.b32 	%r8598, %r8597;
	and.b32  	%r11593, %r36, %r8598;
	and.b32  	%r8599, %r37, 1077952576;
	shr.u32 	%r8600, %r8599, 1;
	and.b32  	%r8601, %r37, -2139062144;
	shr.u32 	%r8602, %r8601, 2;
	not.b32 	%r8603, %r8602;
	and.b32  	%r8604, %r8600, %r8603;
	and.b32  	%r8605, %r37, 522133279;
	add.s32 	%r8606, %r8605, 522133279;
	sub.s32 	%r8607, %r8534, %r8605;
	and.b32  	%r8608, %r8604, %r8607;
	and.b32  	%r8609, %r8608, %r8606;
	not.b32 	%r8610, %r8609;
	and.b32  	%r11592, %r37, %r8610;
	and.b32  	%r8611, %r38, 1077952576;
	shr.u32 	%r8612, %r8611, 1;
	and.b32  	%r8613, %r38, -2139062144;
	shr.u32 	%r8614, %r8613, 2;
	not.b32 	%r8615, %r8614;
	and.b32  	%r8616, %r8612, %r8615;
	and.b32  	%r8617, %r38, 522133279;
	add.s32 	%r8618, %r8617, 522133279;
	sub.s32 	%r8619, %r8534, %r8617;
	and.b32  	%r8620, %r8616, %r8619;
	and.b32  	%r8621, %r8620, %r8618;
	not.b32 	%r8622, %r8621;
	and.b32  	%r11591, %r38, %r8622;
	and.b32  	%r8623, %r39, %r8538;
	and.b32  	%r8624, %r8623, 64;
	shr.u32 	%r8625, %r8624, 1;
	shr.u32 	%r8626, %r8623, 2;
	and.b32  	%r8627, %r8623, 522133279;
	add.s32 	%r8628, %r8627, 31;
	sub.s32 	%r8629, %r8534, %r8627;
	not.b32 	%r8630, %r8626;
	and.b32  	%r8631, %r8630, %r8625;
	and.b32  	%r8632, %r8631, %r8629;
	and.b32  	%r8633, %r8632, %r8628;
	or.b32  	%r11590, %r8633, %r8623;
	bra.uni 	BB4_1551;

BB4_93:
	setp.eq.s32	%p21, %r1959, 108;
	@%p21 bra 	BB4_1550;

	setp.eq.s32	%p22, %r1959, 111;
	@%p22 bra 	BB4_1000;
	bra.uni 	BB4_95;

BB4_1000:
	setp.ge.u32	%p680, %r44, %r34;
	@%p680 bra 	BB4_975;

	and.b32  	%r5129, %r43, 3;
	shl.b32 	%r5130, %r5129, 3;
	shl.b32 	%r933, %r46, %r5130;
	mov.u32 	%r5131, 255;
	shl.b32 	%r5132, %r5131, %r5130;
	not.b32 	%r934, %r5132;
	shr.u32 	%r5128, %r44, 2;
	setp.gt.s32	%p681, %r5128, 3;
	@%p681 bra 	BB4_1010;

	setp.gt.s32	%p687, %r5128, 1;
	@%p687 bra 	BB4_1007;

	setp.eq.s32	%p690, %r5128, 0;
	@%p690 bra 	BB4_1024;
	bra.uni 	BB4_1004;

BB4_1024:
	and.b32  	%r5140, %r39, %r934;
	or.b32  	%r11590, %r5140, %r933;

BB4_1025:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	bra.uni 	BB4_14;

BB4_67:
	setp.eq.s32	%p35, %r1959, 90;
	@%p35 bra 	BB4_782;

	setp.eq.s32	%p36, %r1959, 91;
	@%p36 bra 	BB4_1289;
	bra.uni 	BB4_69;

BB4_1289:
	setp.eq.s32	%p847, %r34, 0;
	mov.u32 	%r11595, 0;
	@%p847 bra 	BB4_1031;

	add.s32 	%r11595, %r34, -1;
	mov.u32 	%r6455, 8;
	// inline asm
	shf.r.wrap.b32 %r11590, %r39, %r40, %r6455;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r40, %r41, %r6455;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r41, %r42, %r6455;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r42, %r35, %r6455;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r35, %r36, %r6455;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r36, %r37, %r6455;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r37, %r38, %r6455;
	// inline asm
	mov.u32 	%r6454, 0;
	// inline asm
	shf.r.wrap.b32 %r11591, %r38, %r6454, %r6455;
	// inline asm
	bra.uni 	BB4_1552;

BB4_124:
	setp.eq.s32	%p8, %r1959, 122;
	@%p8 bra 	BB4_785;

	setp.eq.s32	%p9, %r1959, 123;
	@%p9 bra 	BB4_1307;
	bra.uni 	BB4_126;

BB4_1307:
	setp.eq.s32	%p868, %r34, 0;
	mov.u32 	%r11595, 0;
	@%p868 bra 	BB4_1031;

	add.s32 	%r6576, %r34, -1;
	and.b32  	%r6577, %r6576, 3;
	shl.b32 	%r6578, %r6577, 3;
	and.b32  	%r6579, %r39, 255;
	shl.b32 	%r6580, %r6579, %r6578;
	mov.u32 	%r6575, 8;
	// inline asm
	shf.r.wrap.b32 %r6544, %r39, %r40, %r6575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6548, %r40, %r41, %r6575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6552, %r41, %r42, %r6575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6556, %r42, %r35, %r6575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6560, %r35, %r36, %r6575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6564, %r36, %r37, %r6575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6568, %r37, %r38, %r6575;
	// inline asm
	mov.u32 	%r6574, 0;
	// inline asm
	shf.r.wrap.b32 %r6572, %r38, %r6574, %r6575;
	// inline asm
	setp.lt.u32	%p869, %r6576, 4;
	selp.b32	%r6581, %r6580, 0, %p869;
	or.b32  	%r11590, %r6544, %r6581;
	and.b32  	%r6582, %r6576, -4;
	setp.eq.s32	%p870, %r6582, 4;
	selp.b32	%r6583, %r6580, 0, %p870;
	or.b32  	%r11589, %r6548, %r6583;
	setp.eq.s32	%p871, %r6582, 8;
	selp.b32	%r6584, %r6580, 0, %p871;
	or.b32  	%r11588, %r6552, %r6584;
	setp.eq.s32	%p872, %r6582, 12;
	selp.b32	%r6585, %r6580, 0, %p872;
	or.b32  	%r11587, %r6556, %r6585;
	setp.eq.s32	%p873, %r6582, 16;
	selp.b32	%r6586, %r6580, 0, %p873;
	or.b32  	%r11594, %r6560, %r6586;
	setp.eq.s32	%p874, %r6582, 20;
	selp.b32	%r6587, %r6580, 0, %p874;
	or.b32  	%r11593, %r6564, %r6587;
	setp.eq.s32	%p875, %r6582, 24;
	selp.b32	%r6588, %r6580, 0, %p875;
	or.b32  	%r11592, %r6568, %r6588;
	setp.gt.u32	%p876, %r6576, 27;
	selp.b32	%r6589, %r6580, 0, %p876;
	or.b32  	%r11591, %r6572, %r6589;
	bra.uni 	BB4_1551;

BB4_9:
	setp.eq.s32	%p58, %r1959, 39;
	@%p58 bra 	BB4_974;
	bra.uni 	BB4_10;

BB4_974:
	setp.ge.u32	%p668, %r44, %r34;
	@%p668 bra 	BB4_975;

	and.b32  	%r5096, %r43, 3;
	shl.b32 	%r5097, %r5096, 3;
	mov.u32 	%r5098, 1;
	shl.b32 	%r5099, %r5098, %r5097;
	add.s32 	%r924, %r5099, -1;
	shr.u32 	%r5095, %r44, 2;
	setp.gt.s32	%p669, %r5095, 3;
	@%p669 bra 	BB4_984;

	setp.gt.s32	%p675, %r5095, 1;
	@%p675 bra 	BB4_981;

	setp.eq.s32	%p678, %r5095, 0;
	@%p678 bra 	BB4_999;
	bra.uni 	BB4_979;

BB4_999:
	and.b32  	%r11590, %r924, %r39;
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	bra.uni 	BB4_997;

BB4_76:
	setp.eq.s32	%p31, %r1959, 99;
	@%p31 bra 	BB4_77;
	bra.uni 	BB4_10;

BB4_77:
	and.b32  	%r8634, %r39, 1077952576;
	shr.u32 	%r8635, %r8634, 1;
	and.b32  	%r8636, %r39, -2139062144;
	shr.u32 	%r8637, %r8636, 2;
	not.b32 	%r8638, %r8637;
	and.b32  	%r8639, %r8635, %r8638;
	and.b32  	%r8640, %r39, 522133279;
	add.s32 	%r8641, %r8640, 522133279;
	mov.u32 	%r8642, -84215046;
	sub.s32 	%r8643, %r8642, %r8640;
	and.b32  	%r8644, %r8639, %r8643;
	and.b32  	%r8645, %r8644, %r8641;
	or.b32  	%r8646, %r8645, %r39;
	and.b32  	%r8647, %r40, 1077952576;
	shr.u32 	%r8648, %r8647, 1;
	and.b32  	%r8649, %r40, -2139062144;
	shr.u32 	%r8650, %r8649, 2;
	not.b32 	%r8651, %r8650;
	and.b32  	%r8652, %r8648, %r8651;
	and.b32  	%r8653, %r40, 522133279;
	add.s32 	%r8654, %r8653, 522133279;
	sub.s32 	%r8655, %r8642, %r8653;
	and.b32  	%r8656, %r8652, %r8655;
	and.b32  	%r8657, %r8656, %r8654;
	or.b32  	%r11589, %r8657, %r40;
	and.b32  	%r8658, %r41, 1077952576;
	shr.u32 	%r8659, %r8658, 1;
	and.b32  	%r8660, %r41, -2139062144;
	shr.u32 	%r8661, %r8660, 2;
	not.b32 	%r8662, %r8661;
	and.b32  	%r8663, %r8659, %r8662;
	and.b32  	%r8664, %r41, 522133279;
	add.s32 	%r8665, %r8664, 522133279;
	sub.s32 	%r8666, %r8642, %r8664;
	and.b32  	%r8667, %r8663, %r8666;
	and.b32  	%r8668, %r8667, %r8665;
	or.b32  	%r11588, %r8668, %r41;
	and.b32  	%r8669, %r42, 1077952576;
	shr.u32 	%r8670, %r8669, 1;
	and.b32  	%r8671, %r42, -2139062144;
	shr.u32 	%r8672, %r8671, 2;
	not.b32 	%r8673, %r8672;
	and.b32  	%r8674, %r8670, %r8673;
	and.b32  	%r8675, %r42, 522133279;
	add.s32 	%r8676, %r8675, 522133279;
	sub.s32 	%r8677, %r8642, %r8675;
	and.b32  	%r8678, %r8674, %r8677;
	and.b32  	%r8679, %r8678, %r8676;
	or.b32  	%r11587, %r8679, %r42;
	and.b32  	%r8680, %r35, 1077952576;
	shr.u32 	%r8681, %r8680, 1;
	and.b32  	%r8682, %r35, -2139062144;
	shr.u32 	%r8683, %r8682, 2;
	not.b32 	%r8684, %r8683;
	and.b32  	%r8685, %r8681, %r8684;
	and.b32  	%r8686, %r35, 522133279;
	add.s32 	%r8687, %r8686, 522133279;
	sub.s32 	%r8688, %r8642, %r8686;
	and.b32  	%r8689, %r8685, %r8688;
	and.b32  	%r8690, %r8689, %r8687;
	or.b32  	%r11594, %r8690, %r35;
	and.b32  	%r8691, %r36, 1077952576;
	shr.u32 	%r8692, %r8691, 1;
	and.b32  	%r8693, %r36, -2139062144;
	shr.u32 	%r8694, %r8693, 2;
	not.b32 	%r8695, %r8694;
	and.b32  	%r8696, %r8692, %r8695;
	and.b32  	%r8697, %r36, 522133279;
	add.s32 	%r8698, %r8697, 522133279;
	sub.s32 	%r8699, %r8642, %r8697;
	and.b32  	%r8700, %r8696, %r8699;
	and.b32  	%r8701, %r8700, %r8698;
	or.b32  	%r11593, %r8701, %r36;
	and.b32  	%r8702, %r37, 1077952576;
	shr.u32 	%r8703, %r8702, 1;
	and.b32  	%r8704, %r37, -2139062144;
	shr.u32 	%r8705, %r8704, 2;
	not.b32 	%r8706, %r8705;
	and.b32  	%r8707, %r8703, %r8706;
	and.b32  	%r8708, %r37, 522133279;
	add.s32 	%r8709, %r8708, 522133279;
	sub.s32 	%r8710, %r8642, %r8708;
	and.b32  	%r8711, %r8707, %r8710;
	and.b32  	%r8712, %r8711, %r8709;
	or.b32  	%r11592, %r8712, %r37;
	and.b32  	%r8713, %r38, 1077952576;
	shr.u32 	%r8714, %r8713, 1;
	and.b32  	%r8715, %r38, -2139062144;
	shr.u32 	%r8716, %r8715, 2;
	not.b32 	%r8717, %r8716;
	and.b32  	%r8718, %r8714, %r8717;
	and.b32  	%r8719, %r38, 522133279;
	add.s32 	%r8720, %r8719, 522133279;
	sub.s32 	%r8721, %r8642, %r8719;
	and.b32  	%r8722, %r8718, %r8721;
	and.b32  	%r8723, %r8722, %r8720;
	or.b32  	%r11591, %r8723, %r38;
	and.b32  	%r8724, %r8646, 64;
	shr.u32 	%r8725, %r8724, 1;
	and.b32  	%r8726, %r8646, 128;
	shr.u32 	%r8727, %r8726, 2;
	not.b32 	%r8728, %r8727;
	and.b32  	%r8729, %r8725, %r8728;
	and.b32  	%r8730, %r8646, 522133279;
	add.s32 	%r8731, %r8730, 31;
	sub.s32 	%r8732, %r8642, %r8730;
	and.b32  	%r8733, %r8729, %r8732;
	and.b32  	%r8734, %r8733, %r8731;
	not.b32 	%r8735, %r8734;
	or.b32  	%r8736, %r8735, -33;
	and.b32  	%r11590, %r8736, %r8646;
	bra.uni 	BB4_1551;

BB4_41:
	setp.eq.s32	%p45, %r1959, 75;
	@%p45 bra 	BB4_42;
	bra.uni 	BB4_10;

BB4_42:
	setp.lt.u32	%p461, %r34, 2;
	@%p461 bra 	BB4_10;

	setp.gt.s32	%p462, %r34, 16;
	@%p462 bra 	BB4_721;

	setp.gt.s32	%p484, %r34, 8;
	@%p484 bra 	BB4_706;

	setp.gt.s32	%p496, %r34, 4;
	@%p496 bra 	BB4_699;

	setp.eq.s32	%p502, %r34, 2;
	@%p502 bra 	BB4_778;

	setp.eq.s32	%p503, %r34, 3;
	@%p503 bra 	BB4_48;
	bra.uni 	BB4_697;

BB4_48:
	and.b32  	%r4180, %r39, 255;
	shl.b32 	%r4181, %r39, 8;
	and.b32  	%r4182, %r4181, 16711680;
	or.b32  	%r4183, %r4182, %r4180;
	shr.u32 	%r4184, %r39, 8;
	and.b32  	%r4185, %r4184, 65280;
	or.b32  	%r11590, %r4183, %r4185;
	mov.u32 	%r11595, 3;
	bra.uni 	BB4_779;

BB4_104:
	setp.eq.s32	%p18, %r1959, 114;
	@%p18 bra 	BB4_105;
	bra.uni 	BB4_10;

BB4_105:
	mov.u32 	%r7768, 32;
	sub.s32 	%r7767, %r7768, %r34;
	setp.gt.s32	%p973, %r7767, 15;
	@%p973 bra 	BB4_1473;

	setp.gt.s32	%p997, %r7767, 7;
	@%p997 bra 	BB4_1458;

	setp.gt.s32	%p1009, %r7767, 3;
	@%p1009 bra 	BB4_1451;

	setp.eq.s32	%p1015, %r7767, 1;
	@%p1015 bra 	BB4_1521;

	setp.eq.s32	%p1016, %r7767, 2;
	@%p1016 bra 	BB4_110;
	bra.uni 	BB4_1449;

BB4_110:
	mov.u32 	%r8269, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r8269;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r8269;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r8269;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8250, %r42, %r35, %r8269;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11579, %r41, %r42, %r8269;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11580, %r40, %r41, %r8269;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11581, %r39, %r40, %r8269;
	// inline asm
	mov.u32 	%r8267, 0;
	// inline asm
	shf.r.wrap.b32 %r11582, %r8267, %r39, %r8269;
	// inline asm
	mov.u32 	%r39, %r8250;
	bra.uni 	BB4_1527;

BB4_24:
	setp.eq.s32	%p52, %r1959, 46;
	@%p52 bra 	BB4_25;
	bra.uni 	BB4_10;

BB4_25:
	add.s32 	%r3737, %r44, 1;
	setp.ge.u32	%p257, %r3737, %r34;
	@%p257 bra 	BB4_10;

	mov.u32 	%r3765, 8;
	// inline asm
	shf.r.wrap.b32 %r3738, %r39, %r40, %r3765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3742, %r40, %r41, %r3765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3746, %r41, %r42, %r3765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3750, %r42, %r35, %r3765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3754, %r35, %r36, %r3765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3758, %r36, %r37, %r3765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3762, %r37, %r38, %r3765;
	// inline asm
	and.b32  	%r3767, %r43, 3;
	shl.b32 	%r3768, %r3767, 3;
	mov.u32 	%r3769, 255;
	shl.b32 	%r371, %r3769, %r3768;
	not.b32 	%r372, %r371;
	shr.u32 	%r3766, %r44, 2;
	setp.gt.s32	%p258, %r3766, 3;
	@%p258 bra 	BB4_360;

	setp.gt.s32	%p264, %r3766, 1;
	@%p264 bra 	BB4_357;

	setp.eq.s32	%p267, %r3766, 0;
	@%p267 bra 	BB4_29;
	bra.uni 	BB4_355;

BB4_29:
	and.b32  	%r3788, %r39, %r372;
	and.b32  	%r3789, %r3738, %r371;
	or.b32  	%r11590, %r3789, %r3788;
	bra.uni 	BB4_614;

BB4_90:
	setp.eq.s32	%p25, %r1959, 107;
	@%p25 bra 	BB4_91;
	bra.uni 	BB4_10;

BB4_91:
	setp.lt.u32	%p505, %r34, 2;
	@%p505 bra 	BB4_10;

	and.b32  	%r4190, %r39, -65536;
	shl.b32 	%r4191, %r39, 8;
	and.b32  	%r4192, %r4191, 65280;
	or.b32  	%r4193, %r4192, %r4190;
	bfe.u32 	%r4194, %r39, 8, 8;
	or.b32  	%r11590, %r4193, %r4194;

BB4_614:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	bra.uni 	BB4_642;

BB4_59:
	setp.eq.s32	%p39, %r1959, 89;
	@%p39 bra 	BB4_60;
	bra.uni 	BB4_10;

BB4_60:
	setp.gt.u32	%p123, %r44, %r34;
	add.s32 	%r11595, %r44, %r34;
	setp.gt.u32	%p124, %r11595, 31;
	or.pred  	%p125, %p123, %p124;
	@%p125 bra 	BB4_10;

	mov.u32 	%r11434, 0;
	setp.gt.s32	%p126, %r44, 15;
	@%p126 bra 	BB4_163;

	setp.gt.s32	%p150, %r44, 7;
	@%p150 bra 	BB4_147;

	setp.gt.s32	%p162, %r44, 3;
	@%p162 bra 	BB4_140;

	setp.gt.s32	%p168, %r44, 1;
	@%p168 bra 	BB4_137;

	setp.eq.s32	%p171, %r44, 0;
	@%p171 bra 	BB4_66;
	bra.uni 	BB4_135;

BB4_66:
	mov.u32 	%r11430, %r35;
	mov.u32 	%r11431, %r36;
	mov.u32 	%r11432, %r37;
	mov.u32 	%r11433, %r38;
	mov.u32 	%r11434, %r39;
	mov.u32 	%r11435, %r40;
	mov.u32 	%r11436, %r41;
	mov.u32 	%r11437, %r42;
	bra.uni 	BB4_213;

BB4_117:
	setp.eq.s32	%p12, %r1959, 121;
	@%p12 bra 	BB4_118;
	bra.uni 	BB4_10;

BB4_118:
	setp.gt.u32	%p184, %r44, %r34;
	add.s32 	%r11595, %r44, %r34;
	setp.gt.u32	%p185, %r11595, 31;
	or.pred  	%p186, %p184, %p185;
	@%p186 bra 	BB4_10;

	and.b32  	%r3109, %r43, 3;
	shl.b32 	%r3110, %r3109, 3;
	mov.u32 	%r3111, 1;
	shl.b32 	%r3112, %r3111, %r3110;
	add.s32 	%r206, %r3112, -1;
	shr.u32 	%r3108, %r44, 2;
	setp.gt.s32	%p187, %r3108, 3;
	@%p187 bra 	BB4_239;

	setp.gt.s32	%p193, %r3108, 1;
	@%p193 bra 	BB4_236;

	setp.eq.s32	%p196, %r3108, 0;
	@%p196 bra 	BB4_122;
	bra.uni 	BB4_234;

BB4_122:
	and.b32  	%r11450, %r206, %r39;
	mov.u32 	%r11446, 0;
	mov.u32 	%r11447, %r11446;
	mov.u32 	%r11448, %r11446;
	mov.u32 	%r11449, %r11446;
	mov.u32 	%r11451, %r11446;
	bra.uni 	BB4_123;

BB4_445:
	setp.lt.u32	%p317, %r44, %r34;
	setp.gt.u32	%p318, %r34, %r46;
	and.pred  	%p319, %p317, %p318;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11592, %r37;
	mov.u32 	%r11593, %r36;
	mov.u32 	%r11594, %r35;
	mov.u32 	%r11595, %r34;
	@!%p319 bra 	BB4_1552;
	bra.uni 	BB4_446;

BB4_446:
	mov.u32 	%r11471, 0;
	setp.gt.s32	%p320, %r44, 15;
	@%p320 bra 	BB4_478;

	setp.gt.s32	%p344, %r44, 7;
	@%p344 bra 	BB4_463;

	setp.gt.s32	%p356, %r44, 3;
	@%p356 bra 	BB4_456;

	setp.gt.s32	%p362, %r44, 1;
	@%p362 bra 	BB4_453;

	setp.eq.s32	%p365, %r44, 0;
	@%p365 bra 	BB4_524;
	bra.uni 	BB4_451;

BB4_524:
	and.b32  	%r11462, %r39, 255;
	bra.uni 	BB4_525;

BB4_20:
	setp.eq.s32	%p56, %r1959, 44;
	@%p56 bra 	BB4_21;
	bra.uni 	BB4_10;

BB4_21:
	setp.ne.s32	%p243, %r44, 0;
	setp.lt.u32	%p244, %r44, %r34;
	and.pred  	%p245, %p243, %p244;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11592, %r37;
	mov.u32 	%r11593, %r36;
	mov.u32 	%r11594, %r35;
	mov.u32 	%r11595, %r34;
	@!%p245 bra 	BB4_1552;
	bra.uni 	BB4_336;

BB4_336:
	mov.u32 	%r3712, 24;
	// inline asm
	shf.r.wrap.b32 %r3685, %r37, %r38, %r3712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3689, %r36, %r37, %r3712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3693, %r35, %r36, %r3712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3697, %r42, %r35, %r3712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3701, %r41, %r42, %r3712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3705, %r40, %r41, %r3712;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3709, %r39, %r40, %r3712;
	// inline asm
	and.b32  	%r3714, %r43, 3;
	shl.b32 	%r3715, %r3714, 3;
	mov.u32 	%r3716, 255;
	shl.b32 	%r354, %r3716, %r3715;
	not.b32 	%r355, %r354;
	shr.u32 	%r3713, %r44, 2;
	setp.gt.s32	%p246, %r3713, 3;
	@%p246 bra 	BB4_344;

	setp.gt.s32	%p252, %r3713, 1;
	@%p252 bra 	BB4_341;

	setp.eq.s32	%p255, %r3713, 0;
	@%p255 bra 	BB4_354;
	bra.uni 	BB4_339;

BB4_354:
	mov.u32 	%r3732, 0;
	// inline asm
	shf.r.wrap.b32 %r3731, %r3732, %r39, %r3712;
	// inline asm
	and.b32  	%r3735, %r3731, %r354;
	and.b32  	%r3736, %r39, %r355;
	or.b32  	%r11590, %r3735, %r3736;
	bra.uni 	BB4_614;

BB4_1428:
	add.s32 	%r11595, %r34, %r34;
	setp.gt.u32	%p961, %r11595, 31;
	@%p961 bra 	BB4_975;

	and.b32  	%r7589, %r34, 3;
	mov.u32 	%r7590, 4;
	sub.s32 	%r7591, %r7590, %r7589;
	shl.b32 	%r7592, %r7591, 2;
	mov.u32 	%r7593, 1985229328;
	shr.u32 	%r7594, %r7593, %r7592;
	and.b32  	%r1553, %r7594, 65535;
	shr.u32 	%r7588, %r34, 2;
	mov.u32 	%r11571, 0;
	setp.gt.s32	%p962, %r7588, 3;
	@%p962 bra 	BB4_1437;

	setp.gt.s32	%p968, %r7588, 1;
	@%p968 bra 	BB4_1434;

	setp.eq.s32	%p971, %r7588, 0;
	@%p971 bra 	BB4_1447;
	bra.uni 	BB4_1432;

BB4_1447:
	// inline asm
	prmt.b32 %r11578, %r37, %r38, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11577, %r36, %r37, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11576, %r35, %r36, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11575, %r42, %r35, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11574, %r41, %r42, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11573, %r40, %r41, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11572, %r39, %r40, %r1553;
	// inline asm
	mov.u32 	%r7764, 0;
	// inline asm
	prmt.b32 %r11571, %r7764, %r39, %r1553;
	// inline asm
	bra.uni 	BB4_1448;

BB4_80:
	setp.eq.s32	%p29, %r1959, 102;
	@%p29 bra 	BB4_81;
	bra.uni 	BB4_10;

BB4_81:
	add.s32 	%r11595, %r34, %r34;
	setp.gt.u32	%p887, %r11595, 31;
	@%p887 bra 	BB4_975;

	mov.u32 	%r6643, 32;
	sub.s32 	%r6642, %r6643, %r34;
	mov.u32 	%r11545, 0;
	setp.gt.s32	%p888, %r6642, 15;
	@%p888 bra 	BB4_1341;

	setp.gt.s32	%p912, %r6642, 7;
	@%p912 bra 	BB4_1325;

	setp.gt.s32	%p924, %r6642, 3;
	@%p924 bra 	BB4_1318;

	setp.gt.s32	%p930, %r6642, 1;
	@%p930 bra 	BB4_1315;

	setp.eq.s32	%p933, %r6642, 0;
	@%p933 bra 	BB4_87;
	bra.uni 	BB4_1313;

BB4_87:
	mov.u32 	%r11537, %r35;
	mov.u32 	%r11538, %r36;
	mov.u32 	%r11539, %r37;
	mov.u32 	%r11540, %r38;
	mov.u32 	%r11541, %r39;
	mov.u32 	%r11542, %r40;
	mov.u32 	%r11543, %r41;
	mov.u32 	%r11544, %r42;
	bra.uni 	BB4_1392;

BB4_425:
	setp.ge.u32	%p305, %r44, %r34;
	@%p305 bra 	BB4_10;

	and.b32  	%r3899, %r43, 3;
	shl.b32 	%r3900, %r3899, 3;
	mov.u32 	%r3901, 255;
	shl.b32 	%r413, %r3901, %r3900;
	not.b32 	%r414, %r413;
	shr.u32 	%r3898, %r44, 2;
	setp.gt.s32	%p306, %r3898, 3;
	@%p306 bra 	BB4_434;

	setp.gt.s32	%p312, %r3898, 1;
	@%p312 bra 	BB4_431;

	setp.eq.s32	%p315, %r3898, 0;
	@%p315 bra 	BB4_444;
	bra.uni 	BB4_429;

BB4_444:
	and.b32  	%r3930, %r39, %r414;
	and.b32  	%r3931, %r413, %r39;
	shl.b32 	%r3932, %r3931, 1;
	and.b32  	%r3933, %r3932, %r413;
	or.b32  	%r11590, %r3933, %r3930;
	bra.uni 	BB4_614;

BB4_51:
	setp.eq.s32	%p43, %r1959, 82;
	@%p43 bra 	BB4_52;
	bra.uni 	BB4_10;

BB4_52:
	setp.ge.u32	%p293, %r44, %r34;
	@%p293 bra 	BB4_10;

	and.b32  	%r3863, %r43, 3;
	shl.b32 	%r3864, %r3863, 3;
	mov.u32 	%r3865, 255;
	shl.b32 	%r403, %r3865, %r3864;
	not.b32 	%r404, %r403;
	shr.u32 	%r3862, %r44, 2;
	setp.gt.s32	%p294, %r3862, 3;
	@%p294 bra 	BB4_415;

	setp.gt.s32	%p300, %r3862, 1;
	@%p300 bra 	BB4_412;

	setp.eq.s32	%p303, %r3862, 0;
	@%p303 bra 	BB4_56;
	bra.uni 	BB4_410;

BB4_56:
	and.b32  	%r3894, %r39, %r404;
	and.b32  	%r3895, %r403, %r39;
	shr.u32 	%r3896, %r3895, 1;
	and.b32  	%r3897, %r3896, %r403;
	or.b32  	%r11590, %r3897, %r3894;
	bra.uni 	BB4_614;

BB4_973:
	mov.b32	{%rs277, %rs278}, %r39;
	shr.u16 	%rs279, %rs278, 8;
	and.b16  	%rs280, %rs278, 255;
	shr.u16 	%rs281, %rs277, 8;
	cvt.u16.u32	%rs282, %r43;
	and.b16  	%rs283, %rs282, 255;
	and.b16  	%rs284, %rs277, 255;
	setp.eq.s16	%p636, %rs284, %rs283;
	cvt.u16.u32	%rs285, %r45;
	setp.eq.s16	%p637, %rs281, %rs283;
	setp.eq.s16	%p638, %rs280, %rs283;
	setp.eq.s16	%p639, %rs279, %rs283;
	selp.b16	%rs286, %rs285, %rs281, %p637;
	cvt.u32.u16	%r5047, %rs286;
	selp.b16	%rs287, %rs285, %rs277, %p636;
	and.b16  	%rs288, %rs287, 255;
	cvt.u32.u16	%r5048, %rs288;
	prmt.b32 	%r5049, %r5047, %r5048, 30212;
	selp.b16	%rs289, %rs285, %rs279, %p639;
	cvt.u32.u16	%r5050, %rs289;
	selp.b16	%rs290, %rs285, %rs278, %p638;
	and.b16  	%rs291, %rs290, 255;
	cvt.u32.u16	%r5051, %rs291;
	prmt.b32 	%r5052, %r5050, %r5051, 30212;
	prmt.b32 	%r11590, %r5052, %r5049, 4180;
	mov.b32	{%rs292, %rs293}, %r40;
	shr.u16 	%rs294, %rs293, 8;
	and.b16  	%rs295, %rs293, 255;
	shr.u16 	%rs296, %rs292, 8;
	and.b16  	%rs297, %rs292, 255;
	setp.eq.s16	%p640, %rs297, %rs283;
	setp.eq.s16	%p641, %rs296, %rs283;
	setp.eq.s16	%p642, %rs295, %rs283;
	setp.eq.s16	%p643, %rs294, %rs283;
	selp.b16	%rs298, %rs285, %rs296, %p641;
	cvt.u32.u16	%r5053, %rs298;
	selp.b16	%rs299, %rs285, %rs292, %p640;
	and.b16  	%rs300, %rs299, 255;
	cvt.u32.u16	%r5054, %rs300;
	prmt.b32 	%r5055, %r5053, %r5054, 30212;
	selp.b16	%rs301, %rs285, %rs294, %p643;
	cvt.u32.u16	%r5056, %rs301;
	selp.b16	%rs302, %rs285, %rs293, %p642;
	and.b16  	%rs303, %rs302, 255;
	cvt.u32.u16	%r5057, %rs303;
	prmt.b32 	%r5058, %r5056, %r5057, 30212;
	prmt.b32 	%r11589, %r5058, %r5055, 4180;
	mov.b32	{%rs304, %rs305}, %r41;
	shr.u16 	%rs306, %rs305, 8;
	and.b16  	%rs307, %rs305, 255;
	shr.u16 	%rs308, %rs304, 8;
	and.b16  	%rs309, %rs304, 255;
	setp.eq.s16	%p644, %rs309, %rs283;
	setp.eq.s16	%p645, %rs308, %rs283;
	setp.eq.s16	%p646, %rs307, %rs283;
	setp.eq.s16	%p647, %rs306, %rs283;
	selp.b16	%rs310, %rs285, %rs308, %p645;
	cvt.u32.u16	%r5059, %rs310;
	selp.b16	%rs311, %rs285, %rs304, %p644;
	and.b16  	%rs312, %rs311, 255;
	cvt.u32.u16	%r5060, %rs312;
	prmt.b32 	%r5061, %r5059, %r5060, 30212;
	selp.b16	%rs313, %rs285, %rs306, %p647;
	cvt.u32.u16	%r5062, %rs313;
	selp.b16	%rs314, %rs285, %rs305, %p646;
	and.b16  	%rs315, %rs314, 255;
	cvt.u32.u16	%r5063, %rs315;
	prmt.b32 	%r5064, %r5062, %r5063, 30212;
	prmt.b32 	%r11588, %r5064, %r5061, 4180;
	mov.b32	{%rs316, %rs317}, %r42;
	shr.u16 	%rs318, %rs317, 8;
	and.b16  	%rs319, %rs317, 255;
	shr.u16 	%rs320, %rs316, 8;
	and.b16  	%rs321, %rs316, 255;
	setp.eq.s16	%p648, %rs321, %rs283;
	setp.eq.s16	%p649, %rs320, %rs283;
	setp.eq.s16	%p650, %rs319, %rs283;
	setp.eq.s16	%p651, %rs318, %rs283;
	selp.b16	%rs322, %rs285, %rs320, %p649;
	cvt.u32.u16	%r5065, %rs322;
	selp.b16	%rs323, %rs285, %rs316, %p648;
	and.b16  	%rs324, %rs323, 255;
	cvt.u32.u16	%r5066, %rs324;
	prmt.b32 	%r5067, %r5065, %r5066, 30212;
	selp.b16	%rs325, %rs285, %rs318, %p651;
	cvt.u32.u16	%r5068, %rs325;
	selp.b16	%rs326, %rs285, %rs317, %p650;
	and.b16  	%rs327, %rs326, 255;
	cvt.u32.u16	%r5069, %rs327;
	prmt.b32 	%r5070, %r5068, %r5069, 30212;
	prmt.b32 	%r11587, %r5070, %r5067, 4180;
	mov.b32	{%rs328, %rs329}, %r35;
	shr.u16 	%rs330, %rs329, 8;
	and.b16  	%rs331, %rs329, 255;
	shr.u16 	%rs332, %rs328, 8;
	and.b16  	%rs333, %rs328, 255;
	setp.eq.s16	%p652, %rs333, %rs283;
	setp.eq.s16	%p653, %rs332, %rs283;
	setp.eq.s16	%p654, %rs331, %rs283;
	setp.eq.s16	%p655, %rs330, %rs283;
	selp.b16	%rs334, %rs285, %rs332, %p653;
	cvt.u32.u16	%r5071, %rs334;
	selp.b16	%rs335, %rs285, %rs328, %p652;
	and.b16  	%rs336, %rs335, 255;
	cvt.u32.u16	%r5072, %rs336;
	prmt.b32 	%r5073, %r5071, %r5072, 30212;
	selp.b16	%rs337, %rs285, %rs330, %p655;
	cvt.u32.u16	%r5074, %rs337;
	selp.b16	%rs338, %rs285, %rs329, %p654;
	and.b16  	%rs339, %rs338, 255;
	cvt.u32.u16	%r5075, %rs339;
	prmt.b32 	%r5076, %r5074, %r5075, 30212;
	prmt.b32 	%r11594, %r5076, %r5073, 4180;
	mov.b32	{%rs340, %rs341}, %r36;
	shr.u16 	%rs342, %rs341, 8;
	and.b16  	%rs343, %rs341, 255;
	shr.u16 	%rs344, %rs340, 8;
	and.b16  	%rs345, %rs340, 255;
	setp.eq.s16	%p656, %rs345, %rs283;
	setp.eq.s16	%p657, %rs344, %rs283;
	setp.eq.s16	%p658, %rs343, %rs283;
	setp.eq.s16	%p659, %rs342, %rs283;
	selp.b16	%rs346, %rs285, %rs344, %p657;
	cvt.u32.u16	%r5077, %rs346;
	selp.b16	%rs347, %rs285, %rs340, %p656;
	and.b16  	%rs348, %rs347, 255;
	cvt.u32.u16	%r5078, %rs348;
	prmt.b32 	%r5079, %r5077, %r5078, 30212;
	selp.b16	%rs349, %rs285, %rs342, %p659;
	cvt.u32.u16	%r5080, %rs349;
	selp.b16	%rs350, %rs285, %rs341, %p658;
	and.b16  	%rs351, %rs350, 255;
	cvt.u32.u16	%r5081, %rs351;
	prmt.b32 	%r5082, %r5080, %r5081, 30212;
	prmt.b32 	%r11593, %r5082, %r5079, 4180;
	mov.b32	{%rs352, %rs353}, %r37;
	shr.u16 	%rs354, %rs353, 8;
	and.b16  	%rs355, %rs353, 255;
	shr.u16 	%rs356, %rs352, 8;
	and.b16  	%rs357, %rs352, 255;
	setp.eq.s16	%p660, %rs357, %rs283;
	setp.eq.s16	%p661, %rs356, %rs283;
	setp.eq.s16	%p662, %rs355, %rs283;
	setp.eq.s16	%p663, %rs354, %rs283;
	selp.b16	%rs358, %rs285, %rs356, %p661;
	cvt.u32.u16	%r5083, %rs358;
	selp.b16	%rs359, %rs285, %rs352, %p660;
	and.b16  	%rs360, %rs359, 255;
	cvt.u32.u16	%r5084, %rs360;
	prmt.b32 	%r5085, %r5083, %r5084, 30212;
	selp.b16	%rs361, %rs285, %rs354, %p663;
	cvt.u32.u16	%r5086, %rs361;
	selp.b16	%rs362, %rs285, %rs353, %p662;
	and.b16  	%rs363, %rs362, 255;
	cvt.u32.u16	%r5087, %rs363;
	prmt.b32 	%r5088, %r5086, %r5087, 30212;
	prmt.b32 	%r11592, %r5088, %r5085, 4180;
	mov.b32	{%rs364, %rs365}, %r38;
	shr.u16 	%rs366, %rs365, 8;
	and.b16  	%rs367, %rs365, 255;
	shr.u16 	%rs368, %rs364, 8;
	and.b16  	%rs369, %rs364, 255;
	setp.eq.s16	%p664, %rs369, %rs283;
	setp.eq.s16	%p665, %rs368, %rs283;
	setp.eq.s16	%p666, %rs367, %rs283;
	setp.eq.s16	%p667, %rs366, %rs283;
	selp.b16	%rs370, %rs285, %rs368, %p665;
	cvt.u32.u16	%r5089, %rs370;
	selp.b16	%rs371, %rs285, %rs364, %p664;
	and.b16  	%rs372, %rs371, 255;
	cvt.u32.u16	%r5090, %rs372;
	prmt.b32 	%r5091, %r5089, %r5090, 30212;
	selp.b16	%rs373, %rs285, %rs366, %p667;
	cvt.u32.u16	%r5092, %rs373;
	selp.b16	%rs374, %rs285, %rs365, %p666;
	and.b16  	%rs375, %rs374, 255;
	cvt.u32.u16	%r5093, %rs375;
	prmt.b32 	%r5094, %r5092, %r5093, 30212;
	prmt.b32 	%r11591, %r5094, %r5091, 4180;
	mov.u32 	%r11595, %r34;
	bra.uni 	BB4_1552;

BB4_113:
	setp.eq.s32	%p16, %r1959, 117;
	@%p16 bra 	BB4_114;
	bra.uni 	BB4_10;

BB4_114:
	and.b32  	%r8737, %r39, 1077952576;
	shr.u32 	%r8738, %r8737, 1;
	and.b32  	%r8739, %r39, -2139062144;
	shr.u32 	%r8740, %r8739, 2;
	not.b32 	%r8741, %r8740;
	and.b32  	%r8742, %r8738, %r8741;
	and.b32  	%r8743, %r39, 522133279;
	add.s32 	%r8744, %r8743, 522133279;
	mov.u32 	%r8745, -84215046;
	sub.s32 	%r8746, %r8745, %r8743;
	and.b32  	%r8747, %r8742, %r8746;
	and.b32  	%r8748, %r8747, %r8744;
	not.b32 	%r8749, %r8748;
	and.b32  	%r11590, %r39, %r8749;
	and.b32  	%r8750, %r40, 1077952576;
	shr.u32 	%r8751, %r8750, 1;
	and.b32  	%r8752, %r40, -2139062144;
	shr.u32 	%r8753, %r8752, 2;
	not.b32 	%r8754, %r8753;
	and.b32  	%r8755, %r8751, %r8754;
	and.b32  	%r8756, %r40, 522133279;
	add.s32 	%r8757, %r8756, 522133279;
	sub.s32 	%r8758, %r8745, %r8756;
	and.b32  	%r8759, %r8755, %r8758;
	and.b32  	%r8760, %r8759, %r8757;
	not.b32 	%r8761, %r8760;
	and.b32  	%r11589, %r40, %r8761;
	and.b32  	%r8762, %r41, 1077952576;
	shr.u32 	%r8763, %r8762, 1;
	and.b32  	%r8764, %r41, -2139062144;
	shr.u32 	%r8765, %r8764, 2;
	not.b32 	%r8766, %r8765;
	and.b32  	%r8767, %r8763, %r8766;
	and.b32  	%r8768, %r41, 522133279;
	add.s32 	%r8769, %r8768, 522133279;
	sub.s32 	%r8770, %r8745, %r8768;
	and.b32  	%r8771, %r8767, %r8770;
	and.b32  	%r8772, %r8771, %r8769;
	not.b32 	%r8773, %r8772;
	and.b32  	%r11588, %r41, %r8773;
	and.b32  	%r8774, %r42, 1077952576;
	shr.u32 	%r8775, %r8774, 1;
	and.b32  	%r8776, %r42, -2139062144;
	shr.u32 	%r8777, %r8776, 2;
	not.b32 	%r8778, %r8777;
	and.b32  	%r8779, %r8775, %r8778;
	and.b32  	%r8780, %r42, 522133279;
	add.s32 	%r8781, %r8780, 522133279;
	sub.s32 	%r8782, %r8745, %r8780;
	and.b32  	%r8783, %r8779, %r8782;
	and.b32  	%r8784, %r8783, %r8781;
	not.b32 	%r8785, %r8784;
	and.b32  	%r11587, %r42, %r8785;
	and.b32  	%r8786, %r35, 1077952576;
	shr.u32 	%r8787, %r8786, 1;
	and.b32  	%r8788, %r35, -2139062144;
	shr.u32 	%r8789, %r8788, 2;
	not.b32 	%r8790, %r8789;
	and.b32  	%r8791, %r8787, %r8790;
	and.b32  	%r8792, %r35, 522133279;
	add.s32 	%r8793, %r8792, 522133279;
	sub.s32 	%r8794, %r8745, %r8792;
	and.b32  	%r8795, %r8791, %r8794;
	and.b32  	%r8796, %r8795, %r8793;
	not.b32 	%r8797, %r8796;
	and.b32  	%r11594, %r35, %r8797;
	and.b32  	%r8798, %r36, 1077952576;
	shr.u32 	%r8799, %r8798, 1;
	and.b32  	%r8800, %r36, -2139062144;
	shr.u32 	%r8801, %r8800, 2;
	not.b32 	%r8802, %r8801;
	and.b32  	%r8803, %r8799, %r8802;
	and.b32  	%r8804, %r36, 522133279;
	add.s32 	%r8805, %r8804, 522133279;
	sub.s32 	%r8806, %r8745, %r8804;
	and.b32  	%r8807, %r8803, %r8806;
	and.b32  	%r8808, %r8807, %r8805;
	not.b32 	%r8809, %r8808;
	and.b32  	%r11593, %r36, %r8809;
	and.b32  	%r8810, %r37, 1077952576;
	shr.u32 	%r8811, %r8810, 1;
	and.b32  	%r8812, %r37, -2139062144;
	shr.u32 	%r8813, %r8812, 2;
	not.b32 	%r8814, %r8813;
	and.b32  	%r8815, %r8811, %r8814;
	and.b32  	%r8816, %r37, 522133279;
	add.s32 	%r8817, %r8816, 522133279;
	sub.s32 	%r8818, %r8745, %r8816;
	and.b32  	%r8819, %r8815, %r8818;
	and.b32  	%r8820, %r8819, %r8817;
	not.b32 	%r8821, %r8820;
	and.b32  	%r11592, %r37, %r8821;
	and.b32  	%r8822, %r38, 1077952576;
	shr.u32 	%r8823, %r8822, 1;
	and.b32  	%r8824, %r38, -2139062144;
	shr.u32 	%r8825, %r8824, 2;
	not.b32 	%r8826, %r8825;
	and.b32  	%r8827, %r8823, %r8826;
	and.b32  	%r8828, %r38, 522133279;
	add.s32 	%r8829, %r8828, 522133279;
	sub.s32 	%r8830, %r8745, %r8828;
	and.b32  	%r8831, %r8827, %r8830;
	and.b32  	%r8832, %r8831, %r8829;
	not.b32 	%r8833, %r8832;
	and.b32  	%r11591, %r38, %r8833;
	bra.uni 	BB4_1551;

BB4_948:
	mov.u64 	%rd2736, 0;
	add.u64 	%rd116, %SP, 0;
	cvta.to.local.u64 	%rd117, %rd116;
	st.local.v4.u32 	[%rd117], {%r39, %r40, %r41, %r42};
	st.local.v4.u32 	[%rd117+16], {%r35, %r36, %r37, %r38};
	add.u64 	%rd118, %SP, 32;
	cvta.to.local.u64 	%rd119, %rd118;
	st.local.v2.u64 	[%rd119], {%rd2736, %rd2736};
	st.local.v2.u64 	[%rd119+16], {%rd2736, %rd2736};
	cvt.u16.u32	%rs376, %r39;
	setp.eq.s32	%p623, %r34, 0;
	mov.u32 	%r11595, 0;
	@%p623 bra 	BB4_972;

	cvt.u16.u32	%rs2, %r43;
	and.b32  	%r883, %r34, 3;
	setp.eq.s32	%p624, %r883, 0;
	mov.u32 	%r11498, 0;
	mov.u32 	%r11595, %r11498;
	@%p624 bra 	BB4_962;

	setp.eq.s32	%p625, %r883, 1;
	mov.u32 	%r11493, 0;
	@%p625 bra 	BB4_951;
	bra.uni 	BB4_952;

BB4_951:
	mov.u32 	%r11595, %r11493;
	bra.uni 	BB4_959;

BB4_32:
	setp.eq.s32	%p50, %r1959, 68;
	@%p50 bra 	BB4_33;
	bra.uni 	BB4_10;

BB4_33:
	setp.ge.u32	%p826, %r44, %r34;
	@%p826 bra 	BB4_975;

	mov.u32 	%r6386, 8;
	// inline asm
	shf.r.wrap.b32 %r6355, %r39, %r40, %r6386;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r40, %r41, %r6386;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r41, %r42, %r6386;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r42, %r35, %r6386;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r35, %r36, %r6386;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r36, %r37, %r6386;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r37, %r38, %r6386;
	// inline asm
	mov.u32 	%r6385, 0;
	// inline asm
	shf.r.wrap.b32 %r11591, %r38, %r6385, %r6386;
	// inline asm
	and.b32  	%r6388, %r43, 3;
	shl.b32 	%r6389, %r6388, 3;
	mov.u32 	%r6390, 1;
	shl.b32 	%r6391, %r6390, %r6389;
	add.s32 	%r1230, %r6391, -1;
	neg.s32 	%r1231, %r6391;
	shr.u32 	%r6387, %r44, 2;
	setp.gt.s32	%p827, %r6387, 3;
	@%p827 bra 	BB4_1272;

	setp.gt.s32	%p833, %r6387, 1;
	@%p833 bra 	BB4_1269;

	setp.eq.s32	%p836, %r6387, 0;
	@%p836 bra 	BB4_37;
	bra.uni 	BB4_1267;

BB4_37:
	and.b32  	%r6406, %r1230, %r39;
	and.b32  	%r6407, %r6355, %r1231;
	or.b32  	%r11590, %r6407, %r6406;
	bra.uni 	BB4_1277;

BB4_1550:
	and.b32  	%r8834, %r39, 1077952576;
	shr.u32 	%r8835, %r8834, 1;
	and.b32  	%r8836, %r39, -2139062144;
	shr.u32 	%r8837, %r8836, 2;
	not.b32 	%r8838, %r8837;
	and.b32  	%r8839, %r8835, %r8838;
	and.b32  	%r8840, %r39, 522133279;
	add.s32 	%r8841, %r8840, 522133279;
	mov.u32 	%r8842, -84215046;
	sub.s32 	%r8843, %r8842, %r8840;
	and.b32  	%r8844, %r8839, %r8843;
	and.b32  	%r8845, %r8844, %r8841;
	or.b32  	%r11590, %r8845, %r39;
	and.b32  	%r8846, %r40, 1077952576;
	shr.u32 	%r8847, %r8846, 1;
	and.b32  	%r8848, %r40, -2139062144;
	shr.u32 	%r8849, %r8848, 2;
	not.b32 	%r8850, %r8849;
	and.b32  	%r8851, %r8847, %r8850;
	and.b32  	%r8852, %r40, 522133279;
	add.s32 	%r8853, %r8852, 522133279;
	sub.s32 	%r8854, %r8842, %r8852;
	and.b32  	%r8855, %r8851, %r8854;
	and.b32  	%r8856, %r8855, %r8853;
	or.b32  	%r11589, %r8856, %r40;
	and.b32  	%r8857, %r41, 1077952576;
	shr.u32 	%r8858, %r8857, 1;
	and.b32  	%r8859, %r41, -2139062144;
	shr.u32 	%r8860, %r8859, 2;
	not.b32 	%r8861, %r8860;
	and.b32  	%r8862, %r8858, %r8861;
	and.b32  	%r8863, %r41, 522133279;
	add.s32 	%r8864, %r8863, 522133279;
	sub.s32 	%r8865, %r8842, %r8863;
	and.b32  	%r8866, %r8862, %r8865;
	and.b32  	%r8867, %r8866, %r8864;
	or.b32  	%r11588, %r8867, %r41;
	and.b32  	%r8868, %r42, 1077952576;
	shr.u32 	%r8869, %r8868, 1;
	and.b32  	%r8870, %r42, -2139062144;
	shr.u32 	%r8871, %r8870, 2;
	not.b32 	%r8872, %r8871;
	and.b32  	%r8873, %r8869, %r8872;
	and.b32  	%r8874, %r42, 522133279;
	add.s32 	%r8875, %r8874, 522133279;
	sub.s32 	%r8876, %r8842, %r8874;
	and.b32  	%r8877, %r8873, %r8876;
	and.b32  	%r8878, %r8877, %r8875;
	or.b32  	%r11587, %r8878, %r42;
	and.b32  	%r8879, %r35, 1077952576;
	shr.u32 	%r8880, %r8879, 1;
	and.b32  	%r8881, %r35, -2139062144;
	shr.u32 	%r8882, %r8881, 2;
	not.b32 	%r8883, %r8882;
	and.b32  	%r8884, %r8880, %r8883;
	and.b32  	%r8885, %r35, 522133279;
	add.s32 	%r8886, %r8885, 522133279;
	sub.s32 	%r8887, %r8842, %r8885;
	and.b32  	%r8888, %r8884, %r8887;
	and.b32  	%r8889, %r8888, %r8886;
	or.b32  	%r11594, %r8889, %r35;
	and.b32  	%r8890, %r36, 1077952576;
	shr.u32 	%r8891, %r8890, 1;
	and.b32  	%r8892, %r36, -2139062144;
	shr.u32 	%r8893, %r8892, 2;
	not.b32 	%r8894, %r8893;
	and.b32  	%r8895, %r8891, %r8894;
	and.b32  	%r8896, %r36, 522133279;
	add.s32 	%r8897, %r8896, 522133279;
	sub.s32 	%r8898, %r8842, %r8896;
	and.b32  	%r8899, %r8895, %r8898;
	and.b32  	%r8900, %r8899, %r8897;
	or.b32  	%r11593, %r8900, %r36;
	and.b32  	%r8901, %r37, 1077952576;
	shr.u32 	%r8902, %r8901, 1;
	and.b32  	%r8903, %r37, -2139062144;
	shr.u32 	%r8904, %r8903, 2;
	not.b32 	%r8905, %r8904;
	and.b32  	%r8906, %r8902, %r8905;
	and.b32  	%r8907, %r37, 522133279;
	add.s32 	%r8908, %r8907, 522133279;
	sub.s32 	%r8909, %r8842, %r8907;
	and.b32  	%r8910, %r8906, %r8909;
	and.b32  	%r8911, %r8910, %r8908;
	or.b32  	%r11592, %r8911, %r37;
	and.b32  	%r8912, %r38, 1077952576;
	shr.u32 	%r8913, %r8912, 1;
	and.b32  	%r8914, %r38, -2139062144;
	shr.u32 	%r8915, %r8914, 2;
	not.b32 	%r8916, %r8915;
	and.b32  	%r8917, %r8913, %r8916;
	and.b32  	%r8918, %r38, 522133279;
	add.s32 	%r8919, %r8918, 522133279;
	sub.s32 	%r8920, %r8842, %r8918;
	and.b32  	%r8921, %r8917, %r8920;
	and.b32  	%r8922, %r8921, %r8919;
	or.b32  	%r11591, %r8922, %r38;
	bra.uni 	BB4_1551;

BB4_95:
	setp.eq.s32	%p23, %r1959, 112;
	@%p23 bra 	BB4_96;
	bra.uni 	BB4_10;

BB4_96:
	mad.lo.s32 	%r7392, %r44, %r34, %r34;
	setp.gt.u32	%p946, %r7392, 31;
	setp.eq.s32	%p947, %r44, 0;
	or.pred  	%p948, %p946, %p947;
	mov.u32 	%r7391, 0;
	mov.u32 	%r11553, %r7391;
	mov.u32 	%r11595, %r34;
	mov.u32 	%r11594, %r35;
	mov.u32 	%r11593, %r36;
	mov.u32 	%r11592, %r37;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11587, %r42;
	@%p948 bra 	BB4_975;

BB4_97:
	and.b32  	%r7402, %r11595, 3;
	mov.u32 	%r7403, 4;
	sub.s32 	%r7404, %r7403, %r7402;
	shl.b32 	%r7405, %r7404, 2;
	mov.u32 	%r7406, 1985229328;
	shr.u32 	%r7407, %r7406, %r7405;
	and.b32  	%r1497, %r7407, 65535;
	shr.u32 	%r7401, %r11595, 2;
	setp.gt.s32	%p949, %r7401, 3;
	@%p949 bra 	BB4_1417;

	setp.gt.s32	%p955, %r7401, 1;
	@%p955 bra 	BB4_1414;

	setp.eq.s32	%p958, %r7401, 0;
	@%p958 bra 	BB4_100;
	bra.uni 	BB4_1412;

BB4_100:
	// inline asm
	prmt.b32 %r11570, %r37, %r38, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11569, %r36, %r37, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11568, %r35, %r36, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11567, %r42, %r35, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11566, %r41, %r42, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11565, %r40, %r41, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11564, %r39, %r40, %r1497;
	// inline asm
	mov.u32 	%r7577, 0;
	// inline asm
	prmt.b32 %r11563, %r7577, %r39, %r1497;
	// inline asm
	bra.uni 	BB4_1427;

BB4_1417:
	setp.gt.s32	%p950, %r7401, 5;
	@%p950 bra 	BB4_1421;

	setp.eq.s32	%p953, %r7401, 4;
	@%p953 bra 	BB4_1425;
	bra.uni 	BB4_1419;

BB4_1425:
	// inline asm
	prmt.b32 %r11570, %r41, %r42, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11569, %r40, %r41, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11568, %r39, %r40, %r1497;
	// inline asm
	mov.u32 	%r11563, 0;
	// inline asm
	prmt.b32 %r11567, %r11563, %r39, %r1497;
	// inline asm
	mov.u32 	%r11564, %r11563;
	mov.u32 	%r11565, %r11563;
	mov.u32 	%r11566, %r11563;
	bra.uni 	BB4_1427;

BB4_1414:
	setp.eq.s32	%p956, %r7401, 2;
	@%p956 bra 	BB4_1426;
	bra.uni 	BB4_1415;

BB4_1426:
	// inline asm
	prmt.b32 %r11570, %r35, %r36, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11569, %r42, %r35, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11568, %r41, %r42, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11567, %r40, %r41, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11566, %r39, %r40, %r1497;
	// inline asm
	mov.u32 	%r11563, 0;
	// inline asm
	prmt.b32 %r11565, %r11563, %r39, %r1497;
	// inline asm
	mov.u32 	%r11564, %r11563;
	bra.uni 	BB4_1427;

BB4_1421:
	setp.eq.s32	%p951, %r7401, 6;
	@%p951 bra 	BB4_1424;
	bra.uni 	BB4_1422;

BB4_1424:
	// inline asm
	prmt.b32 %r11570, %r39, %r40, %r1497;
	// inline asm
	mov.u32 	%r11563, 0;
	// inline asm
	prmt.b32 %r11569, %r11563, %r39, %r1497;
	// inline asm
	mov.u32 	%r11564, %r11563;
	mov.u32 	%r11565, %r11563;
	mov.u32 	%r11566, %r11563;
	mov.u32 	%r11567, %r11563;
	mov.u32 	%r11568, %r11563;
	bra.uni 	BB4_1427;

BB4_1412:
	setp.eq.s32	%p959, %r7401, 1;
	mov.u32 	%r11563, %r7391;
	mov.u32 	%r11564, %r7391;
	mov.u32 	%r11565, %r7391;
	mov.u32 	%r11566, %r7391;
	mov.u32 	%r11567, %r7391;
	mov.u32 	%r11568, %r7391;
	mov.u32 	%r11569, %r7391;
	mov.u32 	%r11570, %r7391;
	@%p959 bra 	BB4_1413;
	bra.uni 	BB4_1427;

BB4_1413:
	// inline asm
	prmt.b32 %r11570, %r36, %r37, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11569, %r35, %r36, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11568, %r42, %r35, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11567, %r41, %r42, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11566, %r40, %r41, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11565, %r39, %r40, %r1497;
	// inline asm
	mov.u32 	%r11563, 0;
	// inline asm
	prmt.b32 %r11564, %r11563, %r39, %r1497;
	// inline asm
	bra.uni 	BB4_1427;

BB4_1419:
	setp.eq.s32	%p954, %r7401, 5;
	mov.u32 	%r11563, %r7391;
	mov.u32 	%r11564, %r7391;
	mov.u32 	%r11565, %r7391;
	mov.u32 	%r11566, %r7391;
	mov.u32 	%r11567, %r7391;
	mov.u32 	%r11568, %r7391;
	mov.u32 	%r11569, %r7391;
	mov.u32 	%r11570, %r7391;
	@%p954 bra 	BB4_1420;
	bra.uni 	BB4_1427;

BB4_1420:
	// inline asm
	prmt.b32 %r11570, %r40, %r41, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11569, %r39, %r40, %r1497;
	// inline asm
	mov.u32 	%r11563, 0;
	// inline asm
	prmt.b32 %r11568, %r11563, %r39, %r1497;
	// inline asm
	mov.u32 	%r11564, %r11563;
	mov.u32 	%r11565, %r11563;
	mov.u32 	%r11566, %r11563;
	mov.u32 	%r11567, %r11563;
	bra.uni 	BB4_1427;

BB4_1415:
	setp.eq.s32	%p957, %r7401, 3;
	mov.u32 	%r11563, %r7391;
	mov.u32 	%r11564, %r7391;
	mov.u32 	%r11565, %r7391;
	mov.u32 	%r11566, %r7391;
	mov.u32 	%r11567, %r7391;
	mov.u32 	%r11568, %r7391;
	mov.u32 	%r11569, %r7391;
	mov.u32 	%r11570, %r7391;
	@%p957 bra 	BB4_1416;
	bra.uni 	BB4_1427;

BB4_1416:
	// inline asm
	prmt.b32 %r11570, %r42, %r35, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11569, %r41, %r42, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11568, %r40, %r41, %r1497;
	// inline asm
	// inline asm
	prmt.b32 %r11567, %r39, %r40, %r1497;
	// inline asm
	mov.u32 	%r11563, 0;
	// inline asm
	prmt.b32 %r11566, %r11563, %r39, %r1497;
	// inline asm
	mov.u32 	%r11564, %r11563;
	mov.u32 	%r11565, %r11563;
	bra.uni 	BB4_1427;

BB4_1422:
	setp.ne.s32	%p952, %r7401, 7;
	mov.u32 	%r11563, %r7391;
	mov.u32 	%r11564, %r7391;
	mov.u32 	%r11565, %r7391;
	mov.u32 	%r11566, %r7391;
	mov.u32 	%r11567, %r7391;
	mov.u32 	%r11568, %r7391;
	mov.u32 	%r11569, %r7391;
	mov.u32 	%r11570, %r7391;
	@%p952 bra 	BB4_1427;

	mov.u32 	%r11563, 0;
	// inline asm
	prmt.b32 %r11570, %r11563, %r39, %r1497;
	// inline asm
	mov.u32 	%r11564, %r11563;
	mov.u32 	%r11565, %r11563;
	mov.u32 	%r11566, %r11563;
	mov.u32 	%r11567, %r11563;
	mov.u32 	%r11568, %r11563;
	mov.u32 	%r11569, %r11563;

BB4_1427:
	or.b32  	%r11590, %r11563, %r11590;
	or.b32  	%r11589, %r11564, %r11589;
	or.b32  	%r11588, %r11565, %r11588;
	or.b32  	%r11587, %r11566, %r11587;
	or.b32  	%r11594, %r11567, %r11594;
	or.b32  	%r11593, %r11568, %r11593;
	or.b32  	%r11592, %r11569, %r11592;
	or.b32  	%r11591, %r11570, %r11591;
	add.s32 	%r11595, %r11595, %r34;
	add.s32 	%r11553, %r11553, 1;
	setp.lt.u32	%p960, %r11553, %r44;
	@%p960 bra 	BB4_97;
	bra.uni 	BB4_1552;

BB4_782:
	setp.eq.s32	%p509, %r34, 0;
	add.s32 	%r4231, %r44, %r34;
	setp.gt.u32	%p510, %r4231, 31;
	or.pred  	%p511, %p509, %p510;
	@%p511 bra 	BB4_10;

	add.s32 	%r4233, %r34, -1;
	and.b32  	%r4234, %r4233, 3;
	shl.b32 	%r4235, %r4234, 3;
	setp.lt.u32	%p512, %r4233, 4;
	selp.b32	%r4236, %r39, 0, %p512;
	and.b32  	%r4237, %r4233, -4;
	setp.eq.s32	%p513, %r4237, 4;
	selp.b32	%r4238, %r40, 0, %p513;
	setp.eq.s32	%p514, %r4237, 8;
	selp.b32	%r4239, %r41, 0, %p514;
	setp.eq.s32	%p515, %r4237, 12;
	selp.b32	%r4240, %r42, 0, %p515;
	setp.eq.s32	%p516, %r4237, 16;
	selp.b32	%r4241, %r35, 0, %p516;
	setp.eq.s32	%p517, %r4237, 20;
	selp.b32	%r4242, %r36, 0, %p517;
	setp.eq.s32	%p518, %r4237, 24;
	selp.b32	%r4243, %r37, 0, %p518;
	setp.gt.u32	%p519, %r4233, 27;
	selp.b32	%r4244, %r38, 0, %p519;
	or.b32  	%r4245, %r4244, %r4236;
	or.b32  	%r4246, %r4245, %r4238;
	or.b32  	%r4247, %r4246, %r4239;
	or.b32  	%r4248, %r4247, %r4240;
	or.b32  	%r4249, %r4248, %r4241;
	or.b32  	%r4250, %r4249, %r4242;
	or.b32  	%r4251, %r4250, %r4243;
	shr.u32 	%r4252, %r4251, %r4235;
	and.b32  	%r608, %r4252, 255;
	setp.eq.s32	%p520, %r44, 0;
	mov.u32 	%r11472, 0;
	mov.u32 	%r11595, %r34;
	mov.u32 	%r11594, %r35;
	mov.u32 	%r11593, %r36;
	mov.u32 	%r11592, %r37;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11587, %r42;
	@%p520 bra 	BB4_1552;

BB4_784:
	and.b32  	%r4253, %r11595, 3;
	shl.b32 	%r4254, %r4253, 3;
	shl.b32 	%r4255, %r608, %r4254;
	setp.lt.u32	%p521, %r11595, 4;
	selp.b32	%r4256, %r4255, 0, %p521;
	or.b32  	%r11590, %r4256, %r11590;
	and.b32  	%r4257, %r11595, -4;
	setp.eq.s32	%p522, %r4257, 4;
	selp.b32	%r4258, %r4255, 0, %p522;
	or.b32  	%r11589, %r4258, %r11589;
	setp.eq.s32	%p523, %r4257, 8;
	selp.b32	%r4259, %r4255, 0, %p523;
	or.b32  	%r11588, %r4259, %r11588;
	setp.eq.s32	%p524, %r4257, 12;
	selp.b32	%r4260, %r4255, 0, %p524;
	or.b32  	%r11587, %r4260, %r11587;
	setp.eq.s32	%p525, %r4257, 16;
	selp.b32	%r4261, %r4255, 0, %p525;
	or.b32  	%r11594, %r4261, %r11594;
	setp.eq.s32	%p526, %r4257, 20;
	selp.b32	%r4262, %r4255, 0, %p526;
	or.b32  	%r11593, %r4262, %r11593;
	setp.eq.s32	%p527, %r4257, 24;
	selp.b32	%r4263, %r4255, 0, %p527;
	or.b32  	%r11592, %r4263, %r11592;
	setp.gt.u32	%p528, %r11595, 27;
	selp.b32	%r4264, %r4255, 0, %p528;
	or.b32  	%r11591, %r4264, %r11591;
	add.s32 	%r11595, %r11595, 1;
	add.s32 	%r11472, %r11472, 1;
	setp.lt.u32	%p529, %r11472, %r44;
	@%p529 bra 	BB4_784;
	bra.uni 	BB4_1552;

BB4_69:
	setp.eq.s32	%p37, %r1959, 93;
	@%p37 bra 	BB4_70;
	bra.uni 	BB4_10;

BB4_70:
	setp.eq.s32	%p838, %r34, 0;
	mov.u32 	%r11595, 0;
	@%p838 bra 	BB4_1031;

	add.s32 	%r11595, %r34, -1;
	and.b32  	%r6409, %r11595, 3;
	shl.b32 	%r6410, %r6409, 3;
	mov.u32 	%r6411, 1;
	shl.b32 	%r6412, %r6411, %r6410;
	add.s32 	%r6413, %r6412, -1;
	setp.lt.u32	%p839, %r11595, 4;
	selp.b32	%r6414, %r6413, -1, %p839;
	and.b32  	%r11590, %r6414, %r39;
	and.b32  	%r6415, %r11595, -4;
	setp.eq.s32	%p840, %r6415, 4;
	selp.b32	%r6416, %r6413, -1, %p840;
	and.b32  	%r11589, %r6416, %r40;
	setp.eq.s32	%p841, %r6415, 8;
	selp.b32	%r6417, %r6413, -1, %p841;
	and.b32  	%r11588, %r6417, %r41;
	setp.eq.s32	%p842, %r6415, 12;
	selp.b32	%r6418, %r6413, -1, %p842;
	and.b32  	%r11587, %r6418, %r42;
	setp.eq.s32	%p843, %r6415, 16;
	selp.b32	%r6419, %r6413, -1, %p843;
	and.b32  	%r11594, %r6419, %r35;
	setp.eq.s32	%p844, %r6415, 20;
	selp.b32	%r6420, %r6413, -1, %p844;
	and.b32  	%r11593, %r6420, %r36;
	setp.eq.s32	%p845, %r6415, 24;
	selp.b32	%r6421, %r6413, -1, %p845;
	and.b32  	%r11592, %r6421, %r37;
	setp.gt.u32	%p846, %r11595, 27;
	selp.b32	%r6422, %r6413, -1, %p846;
	and.b32  	%r11591, %r6422, %r38;
	bra.uni 	BB4_1552;

BB4_785:
	setp.eq.s32	%p530, %r34, 0;
	add.s32 	%r11595, %r44, %r34;
	setp.gt.u32	%p531, %r11595, 31;
	or.pred  	%p532, %p530, %p531;
	@%p532 bra 	BB4_10;

	and.b32  	%r630, %r39, 255;
	setp.gt.s32	%p533, %r44, 15;
	@%p533 bra 	BB4_816;

	setp.gt.s32	%p557, %r44, 7;
	@%p557 bra 	BB4_800;

	setp.gt.s32	%p569, %r44, 3;
	@%p569 bra 	BB4_793;

	setp.eq.s32	%p575, %r44, 1;
	@%p575 bra 	BB4_865;

	setp.eq.s32	%p576, %r44, 2;
	@%p576 bra 	BB4_864;
	bra.uni 	BB4_791;

BB4_864:
	mov.u32 	%r4765, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r4765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r4765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r4765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r42, %r35, %r4765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r41, %r42, %r4765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r40, %r41, %r4765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r39, %r40, %r4765;
	// inline asm
	mov.u32 	%r4763, 0;
	// inline asm
	shf.r.wrap.b32 %r11590, %r4763, %r39, %r4765;
	// inline asm
	bra.uni 	BB4_871;

BB4_126:
	setp.eq.s32	%p10, %r1959, 125;
	@%p10 bra 	BB4_127;
	bra.uni 	BB4_10;

BB4_127:
	setp.eq.s32	%p848, %r34, 0;
	mov.u32 	%r11595, 0;
	@%p848 bra 	BB4_1031;

	add.s32 	%r6490, %r34, -1;
	shl.b32 	%r6491, %r6490, 3;
	and.b32  	%r6492, %r6491, 24;
	setp.lt.u32	%p849, %r6490, 4;
	selp.b32	%r6493, %r39, 0, %p849;
	and.b32  	%r6494, %r6490, -4;
	setp.eq.s32	%p850, %r6494, 4;
	selp.b32	%r6495, %r40, 0, %p850;
	setp.eq.s32	%p851, %r6494, 8;
	selp.b32	%r6496, %r41, 0, %p851;
	setp.eq.s32	%p852, %r6494, 12;
	selp.b32	%r6497, %r42, 0, %p852;
	setp.eq.s32	%p853, %r6494, 16;
	selp.b32	%r6498, %r35, 0, %p853;
	setp.eq.s32	%p854, %r6494, 20;
	selp.b32	%r6499, %r36, 0, %p854;
	setp.eq.s32	%p855, %r6494, 24;
	selp.b32	%r6500, %r37, 0, %p855;
	setp.gt.u32	%p856, %r6490, 27;
	selp.b32	%r6501, %r38, 0, %p856;
	or.b32  	%r6502, %r6501, %r6493;
	or.b32  	%r6503, %r6502, %r6495;
	or.b32  	%r6504, %r6503, %r6496;
	or.b32  	%r6505, %r6504, %r6497;
	or.b32  	%r6506, %r6505, %r6498;
	or.b32  	%r6507, %r6506, %r6499;
	or.b32  	%r6508, %r6507, %r6500;
	shr.u32 	%r6509, %r6508, %r6492;
	and.b32  	%r6510, %r6509, 255;
	mov.u32 	%r6488, 24;
	// inline asm
	shf.r.wrap.b32 %r6457, %r37, %r38, %r6488;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r36, %r37, %r6488;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r35, %r36, %r6488;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r42, %r35, %r6488;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r41, %r42, %r6488;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r40, %r41, %r6488;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r39, %r40, %r6488;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r6485, %r11591, %r39, %r6488;
	// inline asm
	or.b32  	%r11590, %r6485, %r6510;
	shl.b32 	%r6511, %r34, 3;
	and.b32  	%r6512, %r6511, 24;
	mov.u32 	%r6513, 1;
	shl.b32 	%r6514, %r6513, %r6512;
	add.s32 	%r1275, %r6514, -1;
	shr.u32 	%r6489, %r34, 2;
	setp.gt.s32	%p857, %r6489, 3;
	@%p857 bra 	BB4_1294;

	setp.gt.s32	%p863, %r6489, 1;
	@%p863 bra 	BB4_1291;

	setp.eq.s32	%p866, %r6489, 0;
	@%p866 bra 	BB4_1306;
	bra.uni 	BB4_131;

BB4_1306:
	and.b32  	%r11590, %r11590, %r1275;
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	bra.uni 	BB4_1304;

BB4_379:
	setp.gt.s32	%p271, %r3790, 5;
	@%p271 bra 	BB4_383;

	setp.eq.s32	%p274, %r3790, 4;
	@%p274 bra 	BB4_387;
	bra.uni 	BB4_381;

BB4_387:
	and.b32  	%r3806, %r35, %r382;
	and.b32  	%r3807, %r381, %r35;
	sub.s32 	%r3808, %r3807, %r383;
	and.b32  	%r3809, %r3808, %r381;
	or.b32  	%r11594, %r3809, %r3806;
	bra.uni 	BB4_655;

BB4_1035:
	setp.gt.s32	%p696, %r5169, 5;
	@%p696 bra 	BB4_1039;

	setp.eq.s32	%p699, %r5169, 4;
	@%p699 bra 	BB4_1043;
	bra.uni 	BB4_1037;

BB4_1043:
	and.b32  	%r5184, %r952, %r35;
	or.b32  	%r5185, %r5184, %r951;
	and.b32  	%r5186, %r11594, %r953;
	or.b32  	%r11594, %r5185, %r5186;
	mov.u32 	%r11587, %r42;
	bra.uni 	BB4_1044;

BB4_1537:
	setp.gt.s32	%p1020, %r8329, 5;
	@%p1020 bra 	BB4_1541;

	setp.eq.s32	%p1023, %r8329, 4;
	@%p1023 bra 	BB4_1545;
	bra.uni 	BB4_1539;

BB4_1545:
	and.b32  	%r8372, %r35, 1077952576;
	shr.u32 	%r8373, %r8372, 1;
	and.b32  	%r8374, %r35, -2139062144;
	shr.u32 	%r8375, %r8374, 2;
	not.b32 	%r8376, %r8375;
	and.b32  	%r8377, %r8373, %r8376;
	and.b32  	%r8378, %r35, 522133279;
	add.s32 	%r8379, %r8378, 522133279;
	mov.u32 	%r8380, -84215046;
	sub.s32 	%r8381, %r8380, %r8378;
	and.b32  	%r8382, %r8377, %r8381;
	and.b32  	%r8383, %r8382, %r8379;
	and.b32  	%r8384, %r8383, %r1730;
	xor.b32  	%r11594, %r8384, %r35;
	bra.uni 	BB4_655;

BB4_1191:
	setp.gt.s32	%p771, %r44, 23;
	@%p771 bra 	BB4_1207;

	setp.gt.s32	%p783, %r44, 19;
	@%p783 bra 	BB4_1200;

	setp.gt.s32	%p789, %r44, 17;
	@%p789 bra 	BB4_1197;

	setp.eq.s32	%p792, %r44, 16;
	@%p792 bra 	BB4_1229;
	bra.uni 	BB4_1195;

BB4_1229:
	mov.u32 	%r11591, 0;
	mov.u32 	%r11587, %r38;
	mov.u32 	%r11588, %r37;
	mov.u32 	%r11589, %r36;
	mov.u32 	%r42, %r35;
	bra.uni 	BB4_1230;

BB4_1473:
	setp.gt.s32	%p974, %r7767, 23;
	@%p974 bra 	BB4_1490;

	setp.gt.s32	%p986, %r7767, 19;
	@%p986 bra 	BB4_1482;

	setp.gt.s32	%p992, %r7767, 17;
	@%p992 bra 	BB4_1479;

	setp.eq.s32	%p995, %r7767, 16;
	@%p995 bra 	BB4_1514;
	bra.uni 	BB4_1477;

BB4_1514:
	mov.u32 	%r11579, 0;
	mov.u32 	%r11580, %r11579;
	mov.u32 	%r11581, %r11579;
	mov.u32 	%r11582, %r11579;
	mov.u32 	%r38, %r42;
	mov.u32 	%r37, %r41;
	mov.u32 	%r36, %r40;
	bra.uni 	BB4_1527;

BB4_399:
	setp.gt.s32	%p283, %r3826, 5;
	@%p283 bra 	BB4_403;

	setp.eq.s32	%p286, %r3826, 4;
	@%p286 bra 	BB4_407;
	bra.uni 	BB4_401;

BB4_407:
	and.b32  	%r3842, %r35, %r393;
	and.b32  	%r3843, %r392, %r35;
	add.s32 	%r3844, %r3843, %r394;
	and.b32  	%r3845, %r3844, %r392;
	or.b32  	%r11594, %r3845, %r3842;
	bra.uni 	BB4_655;

BB4_1083:
	setp.gt.s32	%p710, %r46, 23;
	@%p710 bra 	BB4_1101;

	setp.gt.s32	%p722, %r46, 19;
	@%p722 bra 	BB4_1093;

	setp.gt.s32	%p728, %r46, 17;
	@%p728 bra 	BB4_1089;

	setp.eq.s32	%p731, %r46, 16;
	@%p731 bra 	BB4_1127;
	bra.uni 	BB4_1087;

BB4_1127:
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r35;
	mov.u32 	%r11589, %r36;
	mov.u32 	%r11588, %r37;
	mov.u32 	%r11587, %r38;
	bra.uni 	BB4_1136;

BB4_1010:
	setp.gt.s32	%p682, %r5128, 5;
	@%p682 bra 	BB4_1015;

	setp.eq.s32	%p685, %r5128, 4;
	@%p685 bra 	BB4_1021;
	bra.uni 	BB4_1012;

BB4_1021:
	and.b32  	%r5136, %r35, %r934;
	or.b32  	%r11594, %r5136, %r933;
	bra.uni 	BB4_655;

BB4_478:
	setp.gt.s32	%p321, %r44, 23;
	@%p321 bra 	BB4_494;

	setp.gt.s32	%p333, %r44, 19;
	@%p333 bra 	BB4_487;

	setp.gt.s32	%p339, %r44, 17;
	@%p339 bra 	BB4_484;

	setp.eq.s32	%p342, %r44, 16;
	@%p342 bra 	BB4_516;
	bra.uni 	BB4_482;

BB4_516:
	and.b32  	%r11462, %r35, 255;
	bra.uni 	BB4_525;

BB4_1437:
	setp.gt.s32	%p963, %r7588, 5;
	@%p963 bra 	BB4_1441;

	setp.eq.s32	%p966, %r7588, 4;
	@%p966 bra 	BB4_1445;
	bra.uni 	BB4_1439;

BB4_1445:
	// inline asm
	prmt.b32 %r11578, %r41, %r42, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11577, %r40, %r41, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11576, %r39, %r40, %r1553;
	// inline asm
	mov.u32 	%r11571, 0;
	// inline asm
	prmt.b32 %r11575, %r11571, %r39, %r1553;
	// inline asm
	mov.u32 	%r11572, %r11571;
	mov.u32 	%r11573, %r11571;
	mov.u32 	%r11574, %r11571;
	bra.uni 	BB4_1448;

BB4_434:
	setp.gt.s32	%p307, %r3898, 5;
	@%p307 bra 	BB4_438;

	setp.eq.s32	%p310, %r3898, 4;
	@%p310 bra 	BB4_442;
	bra.uni 	BB4_436;

BB4_442:
	and.b32  	%r3914, %r35, %r414;
	and.b32  	%r3915, %r413, %r35;
	shl.b32 	%r3916, %r3915, 1;
	and.b32  	%r3917, %r3916, %r413;
	or.b32  	%r11594, %r3917, %r3914;
	bra.uni 	BB4_655;

BB4_816:
	setp.gt.s32	%p534, %r44, 23;
	@%p534 bra 	BB4_833;

	setp.gt.s32	%p546, %r44, 19;
	@%p546 bra 	BB4_825;

	setp.gt.s32	%p552, %r44, 17;
	@%p552 bra 	BB4_822;

	setp.eq.s32	%p555, %r44, 16;
	@%p555 bra 	BB4_857;
	bra.uni 	BB4_820;

BB4_857:
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	mov.u32 	%r11590, %r11587;
	mov.u32 	%r38, %r42;
	mov.u32 	%r37, %r41;
	mov.u32 	%r36, %r40;
	mov.u32 	%r35, %r39;
	bra.uni 	BB4_871;

BB4_376:
	setp.eq.s32	%p277, %r3790, 2;
	@%p277 bra 	BB4_388;
	bra.uni 	BB4_377;

BB4_388:
	and.b32  	%r3814, %r41, %r382;
	and.b32  	%r3815, %r381, %r41;
	sub.s32 	%r3816, %r3815, %r383;
	and.b32  	%r3817, %r3816, %r381;
	or.b32  	%r11588, %r3817, %r3814;
	bra.uni 	BB4_631;

BB4_1032:
	setp.eq.s32	%p702, %r5169, 2;
	@%p702 bra 	BB4_1046;
	bra.uni 	BB4_1033;

BB4_1046:
	and.b32  	%r5190, %r952, %r41;
	or.b32  	%r5191, %r5190, %r951;
	and.b32  	%r5192, %r11588, %r953;
	or.b32  	%r11588, %r5191, %r5192;
	bra.uni 	BB4_1045;

BB4_1534:
	setp.eq.s32	%p1026, %r8329, 2;
	@%p1026 bra 	BB4_1546;
	bra.uni 	BB4_1535;

BB4_1546:
	and.b32  	%r8398, %r41, 1077952576;
	shr.u32 	%r8399, %r8398, 1;
	and.b32  	%r8400, %r41, -2139062144;
	shr.u32 	%r8401, %r8400, 2;
	not.b32 	%r8402, %r8401;
	and.b32  	%r8403, %r8399, %r8402;
	and.b32  	%r8404, %r41, 522133279;
	add.s32 	%r8405, %r8404, 522133279;
	mov.u32 	%r8406, -84215046;
	sub.s32 	%r8407, %r8406, %r8404;
	and.b32  	%r8408, %r8403, %r8407;
	and.b32  	%r8409, %r8408, %r8405;
	and.b32  	%r8410, %r8409, %r1730;
	xor.b32  	%r11588, %r8410, %r41;
	bra.uni 	BB4_1023;

BB4_1176:
	setp.gt.s32	%p795, %r44, 11;
	@%p795 bra 	BB4_1184;

	setp.gt.s32	%p801, %r44, 9;
	@%p801 bra 	BB4_1181;

	setp.eq.s32	%p804, %r44, 8;
	@%p804 bra 	BB4_1236;
	bra.uni 	BB4_1179;

BB4_1236:
	mov.u32 	%r11591, 0;
	mov.u32 	%r11587, %r36;
	mov.u32 	%r11588, %r35;
	mov.u32 	%r11589, %r42;
	mov.u32 	%r42, %r41;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11593, %r38;
	mov.u32 	%r38, %r37;
	bra.uni 	BB4_1244;

BB4_984:
	setp.gt.s32	%p670, %r5095, 5;
	@%p670 bra 	BB4_988;

	setp.eq.s32	%p673, %r5095, 4;
	@%p673 bra 	BB4_994;
	bra.uni 	BB4_986;

BB4_994:
	and.b32  	%r11594, %r924, %r35;
	mov.u32 	%r11591, 0;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11595, %r44;
	bra.uni 	BB4_1552;

BB4_721:
	setp.gt.s32	%p463, %r34, 23;
	@%p463 bra 	BB4_735;

	setp.gt.s32	%p475, %r34, 19;
	@%p475 bra 	BB4_727;

	setp.eq.s32	%p481, %r34, 17;
	@%p481 bra 	BB4_763;

	setp.eq.s32	%p482, %r34, 18;
	@%p482 bra 	BB4_759;
	bra.uni 	BB4_725;

BB4_759:
	shl.b32 	%r4103, %r35, 8;
	and.b32  	%r4104, %r4103, 65280;
	bfe.u32 	%r4105, %r35, 8, 8;
	or.b32  	%r11594, %r4104, %r4105;
	mov.u32 	%r11595, 18;
	bra.uni 	BB4_760;

BB4_1458:
	setp.gt.s32	%p998, %r7767, 11;
	@%p998 bra 	BB4_1466;

	setp.gt.s32	%p1004, %r7767, 9;
	@%p1004 bra 	BB4_1463;

	setp.eq.s32	%p1007, %r7767, 8;
	@%p1007 bra 	BB4_1518;
	bra.uni 	BB4_1461;

BB4_1518:
	mov.u32 	%r11581, 0;
	mov.u32 	%r11579, %r40;
	mov.u32 	%r11580, %r39;
	mov.u32 	%r11582, %r11581;
	mov.u32 	%r38, %r36;
	mov.u32 	%r37, %r35;
	mov.u32 	%r36, %r42;
	mov.u32 	%r39, %r41;
	bra.uni 	BB4_1527;

BB4_360:
	setp.gt.s32	%p259, %r3766, 5;
	@%p259 bra 	BB4_364;

	setp.eq.s32	%p262, %r3766, 4;
	@%p262 bra 	BB4_368;
	bra.uni 	BB4_362;

BB4_368:
	and.b32  	%r3780, %r35, %r372;
	and.b32  	%r3781, %r3754, %r371;
	or.b32  	%r11594, %r3781, %r3780;
	bra.uni 	BB4_655;

BB4_163:
	setp.gt.s32	%p127, %r44, 23;
	@%p127 bra 	BB4_179;

	setp.gt.s32	%p139, %r44, 19;
	@%p139 bra 	BB4_172;

	setp.gt.s32	%p145, %r44, 17;
	@%p145 bra 	BB4_169;

	setp.eq.s32	%p148, %r44, 16;
	@%p148 bra 	BB4_205;
	bra.uni 	BB4_167;

BB4_205:
	mov.u32 	%r11430, %r39;
	mov.u32 	%r11431, %r40;
	mov.u32 	%r11432, %r41;
	mov.u32 	%r11433, %r42;
	bra.uni 	BB4_199;

BB4_239:
	setp.gt.s32	%p188, %r3108, 5;
	@%p188 bra 	BB4_243;

	setp.eq.s32	%p191, %r3108, 4;
	@%p191 bra 	BB4_248;
	bra.uni 	BB4_241;

BB4_248:
	and.b32  	%r11446, %r206, %r35;
	mov.u32 	%r11447, 0;
	mov.u32 	%r11448, %r11447;
	mov.u32 	%r11449, %r11447;
	bra.uni 	BB4_246;

BB4_383:
	setp.eq.s32	%p272, %r3790, 6;
	@%p272 bra 	BB4_386;
	bra.uni 	BB4_384;

BB4_386:
	and.b32  	%r3798, %r37, %r382;
	and.b32  	%r3799, %r381, %r37;
	sub.s32 	%r3800, %r3799, %r383;
	and.b32  	%r3801, %r3800, %r381;
	or.b32  	%r11592, %r3801, %r3798;
	bra.uni 	BB4_672;

BB4_1039:
	setp.eq.s32	%p697, %r5169, 6;
	@%p697 bra 	BB4_1042;
	bra.uni 	BB4_1040;

BB4_1042:
	and.b32  	%r5178, %r952, %r37;
	or.b32  	%r5179, %r5178, %r951;
	and.b32  	%r5180, %r11592, %r953;
	or.b32  	%r11592, %r5179, %r5180;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_770;

BB4_1541:
	setp.eq.s32	%p1021, %r8329, 6;
	@%p1021 bra 	BB4_1544;
	bra.uni 	BB4_1542;

BB4_1544:
	and.b32  	%r8346, %r37, 1077952576;
	shr.u32 	%r8347, %r8346, 1;
	and.b32  	%r8348, %r37, -2139062144;
	shr.u32 	%r8349, %r8348, 2;
	not.b32 	%r8350, %r8349;
	and.b32  	%r8351, %r8347, %r8350;
	and.b32  	%r8352, %r37, 522133279;
	add.s32 	%r8353, %r8352, 522133279;
	mov.u32 	%r8354, -84215046;
	sub.s32 	%r8355, %r8354, %r8352;
	and.b32  	%r8356, %r8351, %r8355;
	and.b32  	%r8357, %r8356, %r8353;
	and.b32  	%r8358, %r8357, %r1730;
	xor.b32  	%r11592, %r8358, %r37;
	bra.uni 	BB4_1020;

BB4_1207:
	setp.gt.s32	%p772, %r44, 27;
	@%p772 bra 	BB4_1216;

	setp.gt.s32	%p778, %r44, 25;
	@%p778 bra 	BB4_1212;

	setp.eq.s32	%p781, %r44, 24;
	@%p781 bra 	BB4_1225;
	bra.uni 	BB4_1210;

BB4_1225:
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r38;
	mov.u32 	%r42, %r37;
	bra.uni 	BB4_1243;

BB4_1490:
	setp.gt.s32	%p975, %r7767, 27;
	@%p975 bra 	BB4_1499;

	setp.gt.s32	%p981, %r7767, 25;
	@%p981 bra 	BB4_1495;

	setp.eq.s32	%p984, %r7767, 24;
	@%p984 bra 	BB4_1508;
	bra.uni 	BB4_1493;

BB4_1508:
	mov.u32 	%r11579, 0;
	mov.u32 	%r11580, %r11579;
	mov.u32 	%r11581, %r11579;
	mov.u32 	%r11582, %r11579;
	mov.u32 	%r38, %r40;
	mov.u32 	%r37, %r39;
	bra.uni 	BB4_1525;

BB4_396:
	setp.eq.s32	%p289, %r3826, 2;
	@%p289 bra 	BB4_408;
	bra.uni 	BB4_397;

BB4_408:
	and.b32  	%r3850, %r41, %r393;
	and.b32  	%r3851, %r392, %r41;
	add.s32 	%r3852, %r3851, %r394;
	and.b32  	%r3853, %r3852, %r392;
	or.b32  	%r11588, %r3853, %r3850;
	bra.uni 	BB4_631;

BB4_1067:
	setp.gt.s32	%p734, %r46, 11;
	@%p734 bra 	BB4_1075;

	setp.gt.s32	%p740, %r46, 9;
	@%p740 bra 	BB4_1072;

	setp.eq.s32	%p743, %r46, 8;
	@%p743 bra 	BB4_1131;
	bra.uni 	BB4_1070;

BB4_1131:
	mov.u32 	%r11594, %r37;
	mov.u32 	%r11593, %r38;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r41;
	mov.u32 	%r11589, %r42;
	mov.u32 	%r11588, %r35;
	mov.u32 	%r11587, %r36;
	bra.uni 	BB4_1136;

BB4_1007:
	setp.eq.s32	%p688, %r5128, 2;
	@%p688 bra 	BB4_1022;
	bra.uni 	BB4_1008;

BB4_1022:
	and.b32  	%r5138, %r41, %r934;
	or.b32  	%r11588, %r5138, %r933;

BB4_1023:
	mov.u32 	%r11587, %r42;
	bra.uni 	BB4_12;

BB4_463:
	setp.gt.s32	%p345, %r44, 11;
	@%p345 bra 	BB4_471;

	setp.gt.s32	%p351, %r44, 9;
	@%p351 bra 	BB4_468;

	setp.eq.s32	%p354, %r44, 8;
	@%p354 bra 	BB4_520;
	bra.uni 	BB4_466;

BB4_520:
	and.b32  	%r11462, %r41, 255;
	bra.uni 	BB4_525;

BB4_344:
	setp.gt.s32	%p247, %r3713, 5;
	@%p247 bra 	BB4_348;

	setp.eq.s32	%p250, %r3713, 4;
	@%p250 bra 	BB4_352;
	bra.uni 	BB4_346;

BB4_352:
	and.b32  	%r3723, %r35, %r355;
	and.b32  	%r3724, %r3697, %r354;
	or.b32  	%r11594, %r3724, %r3723;
	bra.uni 	BB4_655;

BB4_1434:
	setp.eq.s32	%p969, %r7588, 2;
	@%p969 bra 	BB4_1446;
	bra.uni 	BB4_1435;

BB4_1446:
	// inline asm
	prmt.b32 %r11578, %r35, %r36, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11577, %r42, %r35, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11576, %r41, %r42, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11575, %r40, %r41, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11574, %r39, %r40, %r1553;
	// inline asm
	mov.u32 	%r11571, 0;
	// inline asm
	prmt.b32 %r11573, %r11571, %r39, %r1553;
	// inline asm
	mov.u32 	%r11572, %r11571;
	bra.uni 	BB4_1448;

BB4_1341:
	setp.gt.s32	%p889, %r6642, 23;
	@%p889 bra 	BB4_1358;

	setp.gt.s32	%p901, %r6642, 19;
	@%p901 bra 	BB4_1351;

	setp.gt.s32	%p907, %r6642, 17;
	@%p907 bra 	BB4_1347;

	setp.eq.s32	%p910, %r6642, 16;
	@%p910 bra 	BB4_1384;
	bra.uni 	BB4_1345;

BB4_1384:
	mov.u32 	%r11537, %r39;
	mov.u32 	%r11538, %r40;
	mov.u32 	%r11539, %r41;
	mov.u32 	%r11540, %r42;
	bra.uni 	BB4_1378;

BB4_431:
	setp.eq.s32	%p313, %r3898, 2;
	@%p313 bra 	BB4_443;
	bra.uni 	BB4_432;

BB4_443:
	and.b32  	%r3922, %r41, %r414;
	and.b32  	%r3923, %r413, %r41;
	shl.b32 	%r3924, %r3923, 1;
	and.b32  	%r3925, %r3924, %r413;
	or.b32  	%r11588, %r3925, %r3922;
	bra.uni 	BB4_631;

BB4_415:
	setp.gt.s32	%p295, %r3862, 5;
	@%p295 bra 	BB4_419;

	setp.eq.s32	%p298, %r3862, 4;
	@%p298 bra 	BB4_423;
	bra.uni 	BB4_417;

BB4_423:
	and.b32  	%r3878, %r35, %r404;
	and.b32  	%r3879, %r403, %r35;
	shr.u32 	%r3880, %r3879, 1;
	and.b32  	%r3881, %r3880, %r403;
	or.b32  	%r11594, %r3881, %r3878;
	bra.uni 	BB4_655;

BB4_952:
	setp.eq.s32	%p626, %r883, 2;
	mov.u32 	%r11595, 0;
	@%p626 bra 	BB4_953;
	bra.uni 	BB4_954;

BB4_953:
	mov.u32 	%r11490, %r11595;
	bra.uni 	BB4_956;

BB4_1272:
	setp.gt.s32	%p828, %r6387, 5;
	@%p828 bra 	BB4_1278;

	setp.eq.s32	%p831, %r6387, 4;
	@%p831 bra 	BB4_1285;
	bra.uni 	BB4_1274;

BB4_1285:
	and.b32  	%r6398, %r1230, %r35;
	and.b32  	%r6399, %r11594, %r1231;
	or.b32  	%r11594, %r6399, %r6398;
	mov.u32 	%r11587, %r42;
	bra.uni 	BB4_1286;

BB4_800:
	setp.gt.s32	%p558, %r44, 11;
	@%p558 bra 	BB4_808;

	setp.gt.s32	%p564, %r44, 9;
	@%p564 bra 	BB4_805;

	setp.eq.s32	%p567, %r44, 8;
	@%p567 bra 	BB4_861;
	bra.uni 	BB4_803;

BB4_861:
	mov.u32 	%r11589, 0;
	mov.u32 	%r11587, %r40;
	mov.u32 	%r11588, %r39;
	mov.u32 	%r11590, %r11589;
	mov.u32 	%r38, %r36;
	mov.u32 	%r37, %r35;
	mov.u32 	%r36, %r42;
	mov.u32 	%r35, %r41;
	bra.uni 	BB4_871;

BB4_1294:
	setp.gt.s32	%p858, %r6489, 5;
	@%p858 bra 	BB4_1298;

	setp.eq.s32	%p861, %r6489, 4;
	@%p861 bra 	BB4_1302;
	bra.uni 	BB4_1296;

BB4_1302:
	and.b32  	%r11594, %r11594, %r1275;
	mov.u32 	%r11591, 0;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11593, %r11591;
	bra.uni 	BB4_1551;

BB4_403:
	setp.eq.s32	%p284, %r3826, 6;
	@%p284 bra 	BB4_406;
	bra.uni 	BB4_404;

BB4_406:
	and.b32  	%r3834, %r37, %r393;
	and.b32  	%r3835, %r392, %r37;
	add.s32 	%r3836, %r3835, %r394;
	and.b32  	%r3837, %r3836, %r392;
	or.b32  	%r11592, %r3837, %r3834;
	bra.uni 	BB4_672;

BB4_1101:
	setp.gt.s32	%p711, %r46, 27;
	@%p711 bra 	BB4_1111;

	setp.gt.s32	%p717, %r46, 25;
	@%p717 bra 	BB4_1106;

	setp.eq.s32	%p720, %r46, 24;
	@%p720 bra 	BB4_1123;
	bra.uni 	BB4_1104;

BB4_1123:
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r37;
	mov.u32 	%r11589, %r38;
	bra.uni 	BB4_1121;

BB4_1015:
	setp.eq.s32	%p683, %r5128, 6;
	@%p683 bra 	BB4_1019;
	bra.uni 	BB4_1016;

BB4_1019:
	and.b32  	%r5134, %r37, %r934;
	or.b32  	%r11592, %r5134, %r933;

BB4_1020:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	bra.uni 	BB4_16;

BB4_494:
	setp.gt.s32	%p322, %r44, 27;
	@%p322 bra 	BB4_502;

	setp.gt.s32	%p328, %r44, 25;
	@%p328 bra 	BB4_499;

	setp.eq.s32	%p331, %r44, 24;
	@%p331 bra 	BB4_512;
	bra.uni 	BB4_497;

BB4_512:
	and.b32  	%r11462, %r37, 255;
	bra.uni 	BB4_525;

BB4_1441:
	setp.eq.s32	%p964, %r7588, 6;
	@%p964 bra 	BB4_1444;
	bra.uni 	BB4_1442;

BB4_1444:
	// inline asm
	prmt.b32 %r11578, %r39, %r40, %r1553;
	// inline asm
	mov.u32 	%r11571, 0;
	// inline asm
	prmt.b32 %r11577, %r11571, %r39, %r1553;
	// inline asm
	mov.u32 	%r11572, %r11571;
	mov.u32 	%r11573, %r11571;
	mov.u32 	%r11574, %r11571;
	mov.u32 	%r11575, %r11571;
	mov.u32 	%r11576, %r11571;
	bra.uni 	BB4_1448;

BB4_438:
	setp.eq.s32	%p308, %r3898, 6;
	@%p308 bra 	BB4_441;
	bra.uni 	BB4_439;

BB4_441:
	and.b32  	%r3906, %r37, %r414;
	and.b32  	%r3907, %r413, %r37;
	shl.b32 	%r3908, %r3907, 1;
	and.b32  	%r3909, %r3908, %r413;
	or.b32  	%r11592, %r3909, %r3906;
	bra.uni 	BB4_672;

BB4_833:
	setp.gt.s32	%p535, %r44, 27;
	@%p535 bra 	BB4_842;

	setp.gt.s32	%p541, %r44, 25;
	@%p541 bra 	BB4_838;

	setp.eq.s32	%p544, %r44, 24;
	@%p544 bra 	BB4_851;
	bra.uni 	BB4_836;

BB4_851:
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	mov.u32 	%r11590, %r11587;
	mov.u32 	%r38, %r40;
	mov.u32 	%r37, %r39;
	bra.uni 	BB4_869;

BB4_374:
	setp.eq.s32	%p280, %r3790, 1;
	@%p280 bra 	BB4_375;
	bra.uni 	BB4_10;

BB4_375:
	and.b32  	%r3818, %r40, %r382;
	and.b32  	%r3819, %r381, %r40;
	sub.s32 	%r3820, %r3819, %r383;
	and.b32  	%r3821, %r3820, %r381;
	or.b32  	%r11589, %r3821, %r3818;
	bra.uni 	BB4_622;

BB4_1030:
	setp.eq.s32	%p705, %r5169, 1;
	@%p705 bra 	BB4_1047;
	bra.uni 	BB4_1031;

BB4_1047:
	and.b32  	%r5193, %r952, %r40;
	or.b32  	%r5194, %r5193, %r951;
	and.b32  	%r5195, %r11589, %r953;
	or.b32  	%r11589, %r5194, %r5195;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1552;

BB4_1532:
	setp.eq.s32	%p1029, %r8329, 1;
	@%p1029 bra 	BB4_1533;
	bra.uni 	BB4_975;

BB4_1533:
	and.b32  	%r8411, %r40, 1077952576;
	shr.u32 	%r8412, %r8411, 1;
	and.b32  	%r8413, %r40, -2139062144;
	shr.u32 	%r8414, %r8413, 2;
	not.b32 	%r8415, %r8414;
	and.b32  	%r8416, %r8412, %r8415;
	and.b32  	%r8417, %r40, 522133279;
	add.s32 	%r8418, %r8417, 522133279;
	mov.u32 	%r8419, -84215046;
	sub.s32 	%r8420, %r8419, %r8417;
	and.b32  	%r8421, %r8416, %r8420;
	and.b32  	%r8422, %r8421, %r8418;
	and.b32  	%r8423, %r8422, %r1730;
	xor.b32  	%r11589, %r8423, %r40;
	bra.uni 	BB4_1006;

BB4_1169:
	setp.gt.s32	%p807, %r44, 5;
	@%p807 bra 	BB4_1173;

	setp.eq.s32	%p810, %r44, 4;
	@%p810 bra 	BB4_1238;
	bra.uni 	BB4_1171;

BB4_1238:
	mov.u32 	%r11591, 0;
	mov.u32 	%r11587, %r35;
	mov.u32 	%r11588, %r42;
	mov.u32 	%r11589, %r41;
	mov.u32 	%r42, %r40;
	mov.u32 	%r11592, %r38;
	mov.u32 	%r11593, %r37;
	mov.u32 	%r38, %r36;
	bra.uni 	BB4_1244;

BB4_981:
	setp.eq.s32	%p676, %r5095, 2;
	@%p676 bra 	BB4_995;
	bra.uni 	BB4_982;

BB4_995:
	and.b32  	%r11588, %r924, %r41;
	mov.u32 	%r11587, 0;
	mov.u32 	%r11589, %r40;
	bra.uni 	BB4_996;

BB4_706:
	setp.gt.s32	%p485, %r34, 12;
	@%p485 bra 	BB4_714;

	setp.gt.s32	%p491, %r34, 10;
	@%p491 bra 	BB4_711;

	setp.eq.s32	%p494, %r34, 9;
	@%p494 bra 	BB4_774;
	bra.uni 	BB4_709;

BB4_774:
	or.b32  	%r4149, %r40, %r41;
	and.b32  	%r4150, %r40, 16777215;
	prmt.b32 	%r11589, %r41, %r4150, 1620;
	shr.u32 	%r11588, %r4149, 24;
	mov.u32 	%r11595, 9;
	mov.u32 	%r11587, %r42;
	bra.uni 	BB4_767;

BB4_1451:
	setp.gt.s32	%p1010, %r7767, 5;
	@%p1010 bra 	BB4_1455;

	setp.eq.s32	%p1013, %r7767, 4;
	@%p1013 bra 	BB4_1520;
	bra.uni 	BB4_1453;

BB4_1520:
	mov.u32 	%r11582, 0;
	mov.u32 	%r11579, %r41;
	mov.u32 	%r11580, %r40;
	mov.u32 	%r11581, %r39;
	mov.u32 	%r38, %r37;
	mov.u32 	%r37, %r36;
	mov.u32 	%r36, %r35;
	mov.u32 	%r39, %r42;
	bra.uni 	BB4_1527;

BB4_357:
	setp.eq.s32	%p265, %r3766, 2;
	@%p265 bra 	BB4_369;
	bra.uni 	BB4_358;

BB4_369:
	and.b32  	%r3784, %r41, %r372;
	and.b32  	%r3785, %r3746, %r371;
	or.b32  	%r11588, %r3785, %r3784;
	bra.uni 	BB4_631;

BB4_147:
	setp.gt.s32	%p151, %r44, 11;
	@%p151 bra 	BB4_155;

	setp.gt.s32	%p157, %r44, 9;
	@%p157 bra 	BB4_152;

	setp.eq.s32	%p160, %r44, 8;
	@%p160 bra 	BB4_209;
	bra.uni 	BB4_150;

BB4_209:
	mov.u32 	%r11430, %r41;
	mov.u32 	%r11431, %r42;
	mov.u32 	%r11432, %r35;
	mov.u32 	%r11433, %r36;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r39;
	mov.u32 	%r11437, %r40;
	bra.uni 	BB4_213;

BB4_236:
	setp.eq.s32	%p194, %r3108, 2;
	@%p194 bra 	BB4_249;
	bra.uni 	BB4_237;

BB4_249:
	and.b32  	%r11452, %r206, %r41;
	mov.u32 	%r11446, 0;
	mov.u32 	%r11447, %r11446;
	mov.u32 	%r11448, %r11446;
	mov.u32 	%r11449, %r11446;
	mov.u32 	%r11450, %r39;
	mov.u32 	%r11451, %r40;
	bra.uni 	BB4_250;

BB4_381:
	setp.eq.s32	%p275, %r3790, 5;
	@%p275 bra 	BB4_382;
	bra.uni 	BB4_10;

BB4_382:
	and.b32  	%r3802, %r36, %r382;
	and.b32  	%r3803, %r381, %r36;
	sub.s32 	%r3804, %r3803, %r383;
	and.b32  	%r3805, %r3804, %r381;
	or.b32  	%r11593, %r3805, %r3802;
	bra.uni 	BB4_663;

BB4_1037:
	setp.eq.s32	%p700, %r5169, 5;
	@%p700 bra 	BB4_1038;
	bra.uni 	BB4_1031;

BB4_1038:
	and.b32  	%r5181, %r952, %r36;
	or.b32  	%r5182, %r5181, %r951;
	and.b32  	%r5183, %r11593, %r953;
	or.b32  	%r11593, %r5182, %r5183;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11594, %r35;
	bra.uni 	BB4_1552;

BB4_1539:
	setp.eq.s32	%p1024, %r8329, 5;
	@%p1024 bra 	BB4_1540;
	bra.uni 	BB4_975;

BB4_1540:
	and.b32  	%r8359, %r36, 1077952576;
	shr.u32 	%r8360, %r8359, 1;
	and.b32  	%r8361, %r36, -2139062144;
	shr.u32 	%r8362, %r8361, 2;
	not.b32 	%r8363, %r8362;
	and.b32  	%r8364, %r8360, %r8363;
	and.b32  	%r8365, %r36, 522133279;
	add.s32 	%r8366, %r8365, 522133279;
	mov.u32 	%r8367, -84215046;
	sub.s32 	%r8368, %r8367, %r8365;
	and.b32  	%r8369, %r8364, %r8368;
	and.b32  	%r8370, %r8369, %r8366;
	and.b32  	%r8371, %r8370, %r1730;
	xor.b32  	%r11593, %r8371, %r36;
	bra.uni 	BB4_1014;

BB4_1200:
	setp.gt.s32	%p784, %r44, 21;
	@%p784 bra 	BB4_1204;

	setp.eq.s32	%p787, %r44, 20;
	@%p787 bra 	BB4_1227;
	bra.uni 	BB4_1202;

BB4_1227:
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r38;
	mov.u32 	%r11589, %r37;
	mov.u32 	%r42, %r36;
	bra.uni 	BB4_1243;

BB4_1482:
	setp.gt.s32	%p987, %r7767, 21;
	@%p987 bra 	BB4_1486;

	setp.eq.s32	%p990, %r7767, 20;
	@%p990 bra 	BB4_1510;
	bra.uni 	BB4_1484;

BB4_1510:
	mov.u32 	%r11579, 0;
	mov.u32 	%r11580, %r11579;
	mov.u32 	%r11581, %r11579;
	mov.u32 	%r11582, %r11579;
	mov.u32 	%r38, %r41;
	mov.u32 	%r37, %r40;
	mov.u32 	%r36, %r39;
	bra.uni 	BB4_1526;

BB4_377:
	setp.eq.s32	%p278, %r3790, 3;
	@%p278 bra 	BB4_378;
	bra.uni 	BB4_10;

BB4_378:
	and.b32  	%r3810, %r42, %r382;
	and.b32  	%r3811, %r381, %r42;
	sub.s32 	%r3812, %r3811, %r383;
	and.b32  	%r3813, %r3812, %r381;
	or.b32  	%r11587, %r3813, %r3810;
	bra.uni 	BB4_639;

BB4_1033:
	setp.eq.s32	%p703, %r5169, 3;
	@%p703 bra 	BB4_1034;
	bra.uni 	BB4_1031;

BB4_1034:
	and.b32  	%r5187, %r952, %r42;
	or.b32  	%r5188, %r5187, %r951;
	and.b32  	%r5189, %r11587, %r953;
	or.b32  	%r11587, %r5188, %r5189;

BB4_1044:
	mov.u32 	%r11588, %r41;

BB4_1045:
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1552;

BB4_1535:
	setp.eq.s32	%p1027, %r8329, 3;
	@%p1027 bra 	BB4_1536;
	bra.uni 	BB4_975;

BB4_1536:
	and.b32  	%r8385, %r42, 1077952576;
	shr.u32 	%r8386, %r8385, 1;
	and.b32  	%r8387, %r42, -2139062144;
	shr.u32 	%r8388, %r8387, 2;
	not.b32 	%r8389, %r8388;
	and.b32  	%r8390, %r8386, %r8389;
	and.b32  	%r8391, %r42, 522133279;
	add.s32 	%r8392, %r8391, 522133279;
	mov.u32 	%r8393, -84215046;
	sub.s32 	%r8394, %r8393, %r8391;
	and.b32  	%r8395, %r8390, %r8394;
	and.b32  	%r8396, %r8395, %r8392;
	and.b32  	%r8397, %r8396, %r1730;
	xor.b32  	%r11587, %r8397, %r42;
	bra.uni 	BB4_11;

BB4_1184:
	setp.gt.s32	%p796, %r44, 13;
	@%p796 bra 	BB4_1188;

	setp.eq.s32	%p799, %r44, 12;
	@%p799 bra 	BB4_1233;
	bra.uni 	BB4_1186;

BB4_1233:
	mov.u32 	%r11591, 0;
	mov.u32 	%r11587, %r37;
	mov.u32 	%r11588, %r36;
	mov.u32 	%r11589, %r35;
	bra.uni 	BB4_1234;

BB4_988:
	setp.eq.s32	%p671, %r5095, 6;
	@%p671 bra 	BB4_993;
	bra.uni 	BB4_989;

BB4_993:
	and.b32  	%r11592, %r924, %r37;
	mov.u32 	%r11591, 0;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_991;

BB4_735:
	setp.gt.s32	%p464, %r34, 27;
	@%p464 bra 	BB4_743;

	setp.gt.s32	%p470, %r34, 25;
	@%p470 bra 	BB4_740;

	setp.eq.s32	%p473, %r34, 24;
	@%p473 bra 	BB4_755;
	bra.uni 	BB4_738;

BB4_755:
	and.b32  	%r4068, %r36, 65535;
	shl.b32 	%r4069, %r36, 8;
	and.b32  	%r4070, %r4069, -16777216;
	or.b32  	%r4071, %r4070, %r4068;
	shr.u32 	%r4072, %r36, 8;
	and.b32  	%r4073, %r4072, 16711680;
	or.b32  	%r11593, %r4071, %r4073;
	mov.u32 	%r11595, 24;
	bra.uni 	BB4_757;

BB4_1466:
	setp.gt.s32	%p999, %r7767, 13;
	@%p999 bra 	BB4_1470;

	setp.eq.s32	%p1002, %r7767, 12;
	@%p1002 bra 	BB4_1516;
	bra.uni 	BB4_1468;

BB4_1516:
	mov.u32 	%r11580, 0;
	mov.u32 	%r11579, %r39;
	mov.u32 	%r11581, %r11580;
	mov.u32 	%r11582, %r11580;
	mov.u32 	%r38, %r35;
	mov.u32 	%r37, %r42;
	mov.u32 	%r36, %r41;
	mov.u32 	%r39, %r40;
	bra.uni 	BB4_1527;

BB4_364:
	setp.eq.s32	%p260, %r3766, 6;
	@%p260 bra 	BB4_367;
	bra.uni 	BB4_365;

BB4_367:
	and.b32  	%r3776, %r37, %r372;
	and.b32  	%r3777, %r3762, %r371;
	or.b32  	%r11592, %r3777, %r3776;
	bra.uni 	BB4_672;

BB4_179:
	setp.gt.s32	%p128, %r44, 27;
	@%p128 bra 	BB4_189;

	setp.gt.s32	%p134, %r44, 25;
	@%p134 bra 	BB4_184;

	setp.eq.s32	%p137, %r44, 24;
	@%p137 bra 	BB4_201;
	bra.uni 	BB4_182;

BB4_201:
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r39;
	mov.u32 	%r11433, %r40;
	bra.uni 	BB4_199;

BB4_243:
	setp.eq.s32	%p189, %r3108, 6;
	@%p189 bra 	BB4_247;
	bra.uni 	BB4_244;

BB4_247:
	and.b32  	%r11448, %r206, %r37;
	mov.u32 	%r11449, 0;
	mov.u32 	%r11446, %r35;
	mov.u32 	%r11447, %r36;
	bra.uni 	BB4_246;

BB4_384:
	setp.ne.s32	%p273, %r3790, 7;
	@%p273 bra 	BB4_10;

	and.b32  	%r3794, %r38, %r382;
	and.b32  	%r3795, %r381, %r38;
	sub.s32 	%r3796, %r3795, %r383;
	and.b32  	%r3797, %r3796, %r381;
	or.b32  	%r11591, %r3797, %r3794;
	bra.uni 	BB4_680;

BB4_1040:
	setp.ne.s32	%p698, %r5169, 7;
	@%p698 bra 	BB4_1031;

	and.b32  	%r5175, %r952, %r38;
	or.b32  	%r5176, %r5175, %r951;
	and.b32  	%r5177, %r11591, %r953;
	or.b32  	%r11591, %r5176, %r5177;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_769;

BB4_1031:
	mov.u32 	%r11587, %r42;

BB4_765:
	mov.u32 	%r11588, %r41;

BB4_766:
	mov.u32 	%r11589, %r40;

BB4_767:
	mov.u32 	%r11590, %r39;

BB4_768:
	mov.u32 	%r11591, %r38;

BB4_769:
	mov.u32 	%r11592, %r37;

BB4_770:
	mov.u32 	%r11593, %r36;
	mov.u32 	%r11594, %r35;
	bra.uni 	BB4_1552;

BB4_1542:
	setp.ne.s32	%p1022, %r8329, 7;
	@%p1022 bra 	BB4_975;

	and.b32  	%r8333, %r38, 1077952576;
	shr.u32 	%r8334, %r8333, 1;
	and.b32  	%r8335, %r38, -2139062144;
	shr.u32 	%r8336, %r8335, 2;
	not.b32 	%r8337, %r8336;
	and.b32  	%r8338, %r8334, %r8337;
	and.b32  	%r8339, %r38, 522133279;
	add.s32 	%r8340, %r8339, 522133279;
	mov.u32 	%r8341, -84215046;
	sub.s32 	%r8342, %r8341, %r8339;
	and.b32  	%r8343, %r8338, %r8342;
	and.b32  	%r8344, %r8343, %r8340;
	and.b32  	%r8345, %r8344, %r1730;
	xor.b32  	%r11591, %r8345, %r38;
	bra.uni 	BB4_1018;

BB4_1216:
	setp.gt.s32	%p773, %r44, 29;
	@%p773 bra 	BB4_1220;

	setp.eq.s32	%p776, %r44, 28;
	@%p776 bra 	BB4_1223;
	bra.uni 	BB4_1218;

BB4_1223:
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	mov.u32 	%r42, %r38;
	bra.uni 	BB4_1243;

BB4_1499:
	setp.gt.s32	%p976, %r7767, 29;
	@%p976 bra 	BB4_1503;

	setp.eq.s32	%p979, %r7767, 28;
	@%p979 bra 	BB4_1506;
	bra.uni 	BB4_1501;

BB4_1506:
	mov.u32 	%r11579, 0;
	mov.u32 	%r11580, %r11579;
	mov.u32 	%r11581, %r11579;
	mov.u32 	%r11582, %r11579;
	mov.u32 	%r38, %r39;
	bra.uni 	BB4_1524;

BB4_394:
	setp.eq.s32	%p292, %r3826, 1;
	@%p292 bra 	BB4_395;
	bra.uni 	BB4_10;

BB4_395:
	and.b32  	%r3854, %r40, %r393;
	and.b32  	%r3855, %r392, %r40;
	add.s32 	%r3856, %r3855, %r394;
	and.b32  	%r3857, %r3856, %r392;
	or.b32  	%r11589, %r3857, %r3854;
	bra.uni 	BB4_622;

BB4_1060:
	setp.gt.s32	%p746, %r46, 5;
	@%p746 bra 	BB4_1064;

	setp.eq.s32	%p749, %r46, 4;
	@%p749 bra 	BB4_1133;
	bra.uni 	BB4_1062;

BB4_1133:
	mov.u32 	%r11594, %r36;
	mov.u32 	%r11593, %r37;
	mov.u32 	%r11592, %r38;
	mov.u32 	%r11509, %r40;
	mov.u32 	%r11589, %r41;
	mov.u32 	%r11588, %r42;
	mov.u32 	%r11587, %r35;
	bra.uni 	BB4_1136;

BB4_1004:
	setp.eq.s32	%p691, %r5128, 1;
	@%p691 bra 	BB4_1005;
	bra.uni 	BB4_975;

BB4_1005:
	and.b32  	%r5139, %r40, %r934;
	or.b32  	%r11589, %r5139, %r933;

BB4_1006:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	bra.uni 	BB4_13;

BB4_456:
	setp.gt.s32	%p357, %r44, 5;
	@%p357 bra 	BB4_460;

	setp.eq.s32	%p360, %r44, 4;
	@%p360 bra 	BB4_522;
	bra.uni 	BB4_458;

BB4_522:
	and.b32  	%r11462, %r40, 255;
	bra.uni 	BB4_525;

BB4_341:
	setp.eq.s32	%p253, %r3713, 2;
	@%p253 bra 	BB4_353;
	bra.uni 	BB4_342;

BB4_353:
	and.b32  	%r3727, %r41, %r355;
	and.b32  	%r3728, %r3705, %r354;
	or.b32  	%r11588, %r3728, %r3727;
	bra.uni 	BB4_631;

BB4_1432:
	setp.eq.s32	%p972, %r7588, 1;
	mov.u32 	%r11572, %r11571;
	mov.u32 	%r11573, %r11571;
	mov.u32 	%r11574, %r11571;
	mov.u32 	%r11575, %r11571;
	mov.u32 	%r11576, %r11571;
	mov.u32 	%r11577, %r11571;
	mov.u32 	%r11578, %r11571;
	@%p972 bra 	BB4_1433;
	bra.uni 	BB4_1448;

BB4_1433:
	// inline asm
	prmt.b32 %r11578, %r36, %r37, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11577, %r35, %r36, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11576, %r42, %r35, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11575, %r41, %r42, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11574, %r40, %r41, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11573, %r39, %r40, %r1553;
	// inline asm
	mov.u32 	%r11571, 0;
	// inline asm
	prmt.b32 %r11572, %r11571, %r39, %r1553;
	// inline asm
	bra.uni 	BB4_1448;

BB4_1325:
	setp.gt.s32	%p913, %r6642, 11;
	@%p913 bra 	BB4_1333;

	setp.gt.s32	%p919, %r6642, 9;
	@%p919 bra 	BB4_1330;

	setp.eq.s32	%p922, %r6642, 8;
	@%p922 bra 	BB4_1388;
	bra.uni 	BB4_1328;

BB4_1388:
	mov.u32 	%r11537, %r41;
	mov.u32 	%r11538, %r42;
	mov.u32 	%r11539, %r35;
	mov.u32 	%r11540, %r36;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r39;
	mov.u32 	%r11544, %r40;
	bra.uni 	BB4_1392;

BB4_429:
	setp.eq.s32	%p316, %r3898, 1;
	@%p316 bra 	BB4_430;
	bra.uni 	BB4_10;

BB4_430:
	and.b32  	%r3926, %r40, %r414;
	and.b32  	%r3927, %r413, %r40;
	shl.b32 	%r3928, %r3927, 1;
	and.b32  	%r3929, %r3928, %r413;
	or.b32  	%r11589, %r3929, %r3926;
	bra.uni 	BB4_622;

BB4_412:
	setp.eq.s32	%p301, %r3862, 2;
	@%p301 bra 	BB4_424;
	bra.uni 	BB4_413;

BB4_424:
	and.b32  	%r3886, %r41, %r404;
	and.b32  	%r3887, %r403, %r41;
	shr.u32 	%r3888, %r3887, 1;
	and.b32  	%r3889, %r3888, %r403;
	or.b32  	%r11588, %r3889, %r3886;
	bra.uni 	BB4_631;

BB4_1269:
	setp.eq.s32	%p834, %r6387, 2;
	@%p834 bra 	BB4_1288;
	bra.uni 	BB4_1270;

BB4_1288:
	and.b32  	%r6402, %r1230, %r41;
	and.b32  	%r6403, %r11588, %r1231;
	or.b32  	%r11588, %r6403, %r6402;
	bra.uni 	BB4_1287;

BB4_793:
	setp.gt.s32	%p570, %r44, 5;
	@%p570 bra 	BB4_797;

	setp.eq.s32	%p573, %r44, 4;
	@%p573 bra 	BB4_863;
	bra.uni 	BB4_795;

BB4_863:
	mov.u32 	%r11590, 0;
	mov.u32 	%r11587, %r41;
	mov.u32 	%r11588, %r40;
	mov.u32 	%r11589, %r39;
	mov.u32 	%r38, %r37;
	mov.u32 	%r37, %r36;
	mov.u32 	%r36, %r35;
	mov.u32 	%r35, %r42;
	bra.uni 	BB4_871;

BB4_1291:
	setp.eq.s32	%p864, %r6489, 2;
	@%p864 bra 	BB4_1303;
	bra.uni 	BB4_1292;

BB4_1303:
	and.b32  	%r11588, %r11588, %r1275;
	mov.u32 	%r11587, 0;
	bra.uni 	BB4_1304;

BB4_401:
	setp.eq.s32	%p287, %r3826, 5;
	@%p287 bra 	BB4_402;
	bra.uni 	BB4_10;

BB4_402:
	and.b32  	%r3838, %r36, %r393;
	and.b32  	%r3839, %r392, %r36;
	add.s32 	%r3840, %r3839, %r394;
	and.b32  	%r3841, %r3840, %r392;
	or.b32  	%r11593, %r3841, %r3838;
	bra.uni 	BB4_663;

BB4_1093:
	setp.gt.s32	%p723, %r46, 21;
	@%p723 bra 	BB4_1097;

	setp.eq.s32	%p726, %r46, 20;
	@%p726 bra 	BB4_1125;
	bra.uni 	BB4_1095;

BB4_1125:
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r36;
	mov.u32 	%r11589, %r37;
	mov.u32 	%r11588, %r38;
	mov.u32 	%r11587, %r11591;
	bra.uni 	BB4_1136;

BB4_1012:
	setp.eq.s32	%p686, %r5128, 5;
	@%p686 bra 	BB4_1013;
	bra.uni 	BB4_975;

BB4_1013:
	and.b32  	%r5135, %r36, %r934;
	or.b32  	%r11593, %r5135, %r933;

BB4_1014:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11592, %r37;
	bra.uni 	BB4_17;

BB4_487:
	setp.gt.s32	%p334, %r44, 21;
	@%p334 bra 	BB4_491;

	setp.eq.s32	%p337, %r44, 20;
	@%p337 bra 	BB4_514;
	bra.uni 	BB4_489;

BB4_514:
	and.b32  	%r11462, %r36, 255;
	bra.uni 	BB4_525;

BB4_1439:
	setp.eq.s32	%p967, %r7588, 5;
	mov.u32 	%r11572, %r11571;
	mov.u32 	%r11573, %r11571;
	mov.u32 	%r11574, %r11571;
	mov.u32 	%r11575, %r11571;
	mov.u32 	%r11576, %r11571;
	mov.u32 	%r11577, %r11571;
	mov.u32 	%r11578, %r11571;
	@%p967 bra 	BB4_1440;
	bra.uni 	BB4_1448;

BB4_1440:
	// inline asm
	prmt.b32 %r11578, %r40, %r41, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11577, %r39, %r40, %r1553;
	// inline asm
	mov.u32 	%r11571, 0;
	// inline asm
	prmt.b32 %r11576, %r11571, %r39, %r1553;
	// inline asm
	mov.u32 	%r11572, %r11571;
	mov.u32 	%r11573, %r11571;
	mov.u32 	%r11574, %r11571;
	mov.u32 	%r11575, %r11571;
	bra.uni 	BB4_1448;

BB4_436:
	setp.eq.s32	%p311, %r3898, 5;
	@%p311 bra 	BB4_437;
	bra.uni 	BB4_10;

BB4_437:
	and.b32  	%r3910, %r36, %r414;
	and.b32  	%r3911, %r413, %r36;
	shl.b32 	%r3912, %r3911, 1;
	and.b32  	%r3913, %r3912, %r413;
	or.b32  	%r11593, %r3913, %r3910;
	bra.uni 	BB4_663;

BB4_825:
	setp.gt.s32	%p547, %r44, 21;
	@%p547 bra 	BB4_829;

	setp.eq.s32	%p550, %r44, 20;
	@%p550 bra 	BB4_853;
	bra.uni 	BB4_827;

BB4_853:
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	mov.u32 	%r11590, %r11587;
	mov.u32 	%r38, %r41;
	mov.u32 	%r37, %r40;
	mov.u32 	%r36, %r39;
	bra.uni 	BB4_870;

BB4_397:
	setp.eq.s32	%p290, %r3826, 3;
	@%p290 bra 	BB4_398;
	bra.uni 	BB4_10;

BB4_398:
	and.b32  	%r3846, %r42, %r393;
	and.b32  	%r3847, %r392, %r42;
	add.s32 	%r3848, %r3847, %r394;
	and.b32  	%r3849, %r3848, %r392;
	or.b32  	%r11587, %r3849, %r3846;
	bra.uni 	BB4_639;

BB4_1075:
	setp.gt.s32	%p735, %r46, 13;
	@%p735 bra 	BB4_1079;

	setp.eq.s32	%p738, %r46, 12;
	@%p738 bra 	BB4_1129;
	bra.uni 	BB4_1077;

BB4_1129:
	mov.u32 	%r11594, %r38;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r42;
	mov.u32 	%r11589, %r35;
	mov.u32 	%r11588, %r36;
	mov.u32 	%r11587, %r37;
	bra.uni 	BB4_1136;

BB4_1008:
	setp.eq.s32	%p689, %r5128, 3;
	@%p689 bra 	BB4_1009;
	bra.uni 	BB4_975;

BB4_1009:
	and.b32  	%r5137, %r42, %r934;
	or.b32  	%r11587, %r5137, %r933;
	bra.uni 	BB4_11;

BB4_471:
	setp.gt.s32	%p346, %r44, 13;
	@%p346 bra 	BB4_475;

	setp.eq.s32	%p349, %r44, 12;
	@%p349 bra 	BB4_518;
	bra.uni 	BB4_473;

BB4_518:
	and.b32  	%r11462, %r42, 255;
	bra.uni 	BB4_525;

BB4_348:
	setp.eq.s32	%p248, %r3713, 6;
	@%p248 bra 	BB4_351;
	bra.uni 	BB4_349;

BB4_351:
	and.b32  	%r3719, %r37, %r355;
	and.b32  	%r3720, %r3689, %r354;
	or.b32  	%r11592, %r3720, %r3719;
	bra.uni 	BB4_672;

BB4_1435:
	setp.eq.s32	%p970, %r7588, 3;
	mov.u32 	%r11572, %r11571;
	mov.u32 	%r11573, %r11571;
	mov.u32 	%r11574, %r11571;
	mov.u32 	%r11575, %r11571;
	mov.u32 	%r11576, %r11571;
	mov.u32 	%r11577, %r11571;
	mov.u32 	%r11578, %r11571;
	@%p970 bra 	BB4_1436;
	bra.uni 	BB4_1448;

BB4_1436:
	// inline asm
	prmt.b32 %r11578, %r42, %r35, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11577, %r41, %r42, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11576, %r40, %r41, %r1553;
	// inline asm
	// inline asm
	prmt.b32 %r11575, %r39, %r40, %r1553;
	// inline asm
	mov.u32 	%r11571, 0;
	// inline asm
	prmt.b32 %r11574, %r11571, %r39, %r1553;
	// inline asm
	mov.u32 	%r11572, %r11571;
	mov.u32 	%r11573, %r11571;
	bra.uni 	BB4_1448;

BB4_1358:
	setp.gt.s32	%p890, %r6642, 27;
	@%p890 bra 	BB4_1368;

	setp.gt.s32	%p896, %r6642, 25;
	@%p896 bra 	BB4_1363;

	setp.eq.s32	%p899, %r6642, 24;
	@%p899 bra 	BB4_1380;
	bra.uni 	BB4_1361;

BB4_1380:
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r39;
	mov.u32 	%r11540, %r40;
	bra.uni 	BB4_1378;

BB4_432:
	setp.eq.s32	%p314, %r3898, 3;
	@%p314 bra 	BB4_433;
	bra.uni 	BB4_10;

BB4_433:
	and.b32  	%r3918, %r42, %r414;
	and.b32  	%r3919, %r413, %r42;
	shl.b32 	%r3920, %r3919, 1;
	and.b32  	%r3921, %r3920, %r413;
	or.b32  	%r11587, %r3921, %r3918;
	bra.uni 	BB4_639;

BB4_419:
	setp.eq.s32	%p296, %r3862, 6;
	@%p296 bra 	BB4_422;
	bra.uni 	BB4_420;

BB4_422:
	and.b32  	%r3870, %r37, %r404;
	and.b32  	%r3871, %r403, %r37;
	shr.u32 	%r3872, %r3871, 1;
	and.b32  	%r3873, %r3872, %r403;
	or.b32  	%r11592, %r3873, %r3870;
	bra.uni 	BB4_672;

BB4_954:
	and.b16  	%rs268, %rs2, 255;
	and.b16  	%rs269, %rs376, 255;
	setp.eq.s16	%p627, %rs269, %rs268;
	mov.u32 	%r11490, 1;
	@%p627 bra 	BB4_956;

	st.local.u8 	[%rd119], %rs376;
	mov.u32 	%r11490, 1;
	mov.u32 	%r11595, %r11490;

BB4_956:
	cvt.u64.u32	%rd125, %r11490;
	add.s64 	%rd126, %rd117, %rd125;
	ld.local.u8 	%rs3, [%rd126];
	and.b16  	%rs270, %rs2, 255;
	setp.eq.s16	%p628, %rs3, %rs270;
	@%p628 bra 	BB4_958;

	cvt.u64.u32	%rd127, %r11595;
	add.s64 	%rd130, %rd119, %rd127;
	st.local.u8 	[%rd130], %rs3;
	add.s32 	%r11595, %r11595, 1;

BB4_958:
	add.s32 	%r11493, %r11490, 1;
	cvt.u64.u32	%rd131, %r11493;
	add.s64 	%rd134, %rd117, %rd131;
	ld.local.u8 	%rs376, [%rd134];

BB4_959:
	and.b16  	%rs271, %rs2, 255;
	and.b16  	%rs272, %rs376, 255;
	setp.eq.s16	%p629, %rs272, %rs271;
	@%p629 bra 	BB4_961;

	cvt.u64.u32	%rd135, %r11595;
	add.s64 	%rd138, %rd119, %rd135;
	st.local.u8 	[%rd138], %rs376;
	add.s32 	%r11595, %r11595, 1;

BB4_961:
	add.s32 	%r11498, %r11493, 1;

BB4_962:
	setp.lt.u32	%p630, %r34, 4;
	@%p630 bra 	BB4_972;

BB4_963:
	cvt.u64.u32	%rd140, %r11498;
	add.s64 	%rd141, %rd117, %rd140;
	ld.local.u8 	%rs6, [%rd141];
	and.b16  	%rs273, %rs2, 255;
	setp.eq.s16	%p631, %rs6, %rs273;
	@%p631 bra 	BB4_965;

	cvt.u64.u32	%rd142, %r11595;
	add.s64 	%rd145, %rd119, %rd142;
	st.local.u8 	[%rd145], %rs6;
	add.s32 	%r11595, %r11595, 1;

BB4_965:
	add.s32 	%r5036, %r11498, 1;
	cvt.u64.u32	%rd146, %r5036;
	add.s64 	%rd147, %rd117, %rd146;
	ld.local.u8 	%rs7, [%rd147];
	setp.eq.s16	%p632, %rs7, %rs273;
	@%p632 bra 	BB4_967;

	cvt.u64.u32	%rd148, %r11595;
	add.s64 	%rd151, %rd119, %rd148;
	st.local.u8 	[%rd151], %rs7;
	add.s32 	%r11595, %r11595, 1;

BB4_967:
	add.s32 	%r5037, %r11498, 2;
	cvt.u64.u32	%rd152, %r5037;
	add.s64 	%rd153, %rd117, %rd152;
	ld.local.u8 	%rs8, [%rd153];
	setp.eq.s16	%p633, %rs8, %rs273;
	@%p633 bra 	BB4_969;

	cvt.u64.u32	%rd154, %r11595;
	add.s64 	%rd157, %rd119, %rd154;
	st.local.u8 	[%rd157], %rs8;
	add.s32 	%r11595, %r11595, 1;

BB4_969:
	add.s32 	%r5038, %r11498, 3;
	cvt.u64.u32	%rd158, %r5038;
	add.s64 	%rd159, %rd117, %rd158;
	ld.local.u8 	%rs9, [%rd159];
	setp.eq.s16	%p634, %rs9, %rs273;
	@%p634 bra 	BB4_971;

	cvt.u64.u32	%rd160, %r11595;
	add.s64 	%rd163, %rd119, %rd160;
	st.local.u8 	[%rd163], %rs9;
	add.s32 	%r11595, %r11595, 1;

BB4_971:
	add.s32 	%r11498, %r11498, 4;
	setp.lt.u32	%p635, %r11498, %r34;
	@%p635 bra 	BB4_963;

BB4_972:
	ld.local.v4.u32 	{%r11590, %r11589, %r11588, %r11587}, [%rd119];
	ld.local.v4.u32 	{%r11594, %r11593, %r11592, %r11591}, [%rd119+16];
	bra.uni 	BB4_1552;

BB4_1278:
	setp.eq.s32	%p829, %r6387, 6;
	@%p829 bra 	BB4_1284;
	bra.uni 	BB4_1279;

BB4_1284:
	and.b32  	%r6394, %r1230, %r37;
	and.b32  	%r6395, %r11592, %r1231;
	or.b32  	%r11592, %r6395, %r6394;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1282;

BB4_808:
	setp.gt.s32	%p559, %r44, 13;
	@%p559 bra 	BB4_812;

	setp.eq.s32	%p562, %r44, 12;
	@%p562 bra 	BB4_859;
	bra.uni 	BB4_810;

BB4_859:
	mov.u32 	%r11588, 0;
	mov.u32 	%r11587, %r39;
	mov.u32 	%r11589, %r11588;
	mov.u32 	%r11590, %r11588;
	mov.u32 	%r38, %r35;
	mov.u32 	%r37, %r42;
	mov.u32 	%r36, %r41;
	mov.u32 	%r35, %r40;
	bra.uni 	BB4_871;

BB4_1298:
	setp.eq.s32	%p859, %r6489, 6;
	@%p859 bra 	BB4_1301;
	bra.uni 	BB4_1299;

BB4_1301:
	and.b32  	%r11592, %r11592, %r1275;
	bra.uni 	BB4_1551;

BB4_404:
	setp.ne.s32	%p285, %r3826, 7;
	@%p285 bra 	BB4_10;

	and.b32  	%r3830, %r38, %r393;
	and.b32  	%r3831, %r392, %r38;
	add.s32 	%r3832, %r3831, %r394;
	and.b32  	%r3833, %r3832, %r392;
	or.b32  	%r11591, %r3833, %r3830;
	bra.uni 	BB4_680;

BB4_1111:
	setp.gt.s32	%p712, %r46, 29;
	@%p712 bra 	BB4_1115;

	setp.eq.s32	%p715, %r46, 28;
	@%p715 bra 	BB4_1120;
	bra.uni 	BB4_1113;

BB4_1120:
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r38;
	mov.u32 	%r11589, %r11591;

BB4_1121:
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	bra.uni 	BB4_1136;

BB4_1016:
	setp.ne.s32	%p684, %r5128, 7;
	@%p684 bra 	BB4_975;

	and.b32  	%r5133, %r38, %r934;
	or.b32  	%r11591, %r5133, %r933;

BB4_1018:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_15;

BB4_975:
	mov.u32 	%r11587, %r42;

BB4_639:
	mov.u32 	%r11588, %r41;

BB4_640:
	mov.u32 	%r11589, %r40;

BB4_641:
	mov.u32 	%r11590, %r39;

BB4_642:
	mov.u32 	%r11591, %r38;

BB4_643:
	mov.u32 	%r11592, %r37;

BB4_644:
	mov.u32 	%r11593, %r36;

BB4_645:
	mov.u32 	%r11594, %r35;
	bra.uni 	BB4_1551;

BB4_502:
	setp.gt.s32	%p323, %r44, 29;
	@%p323 bra 	BB4_506;

	setp.eq.s32	%p326, %r44, 28;
	@%p326 bra 	BB4_510;
	bra.uni 	BB4_504;

BB4_510:
	and.b32  	%r11462, %r38, 255;
	bra.uni 	BB4_525;

BB4_1442:
	setp.ne.s32	%p965, %r7588, 7;
	mov.u32 	%r11572, %r11571;
	mov.u32 	%r11573, %r11571;
	mov.u32 	%r11574, %r11571;
	mov.u32 	%r11575, %r11571;
	mov.u32 	%r11576, %r11571;
	mov.u32 	%r11577, %r11571;
	mov.u32 	%r11578, %r11571;
	@%p965 bra 	BB4_1448;

	mov.u32 	%r11571, 0;
	// inline asm
	prmt.b32 %r11578, %r11571, %r39, %r1553;
	// inline asm
	mov.u32 	%r11572, %r11571;
	mov.u32 	%r11573, %r11571;
	mov.u32 	%r11574, %r11571;
	mov.u32 	%r11575, %r11571;
	mov.u32 	%r11576, %r11571;
	mov.u32 	%r11577, %r11571;

BB4_1448:
	or.b32  	%r11590, %r11571, %r39;
	or.b32  	%r11589, %r11572, %r40;
	or.b32  	%r11588, %r11573, %r41;
	or.b32  	%r11587, %r11574, %r42;
	or.b32  	%r11594, %r11575, %r35;
	or.b32  	%r11593, %r11576, %r36;
	or.b32  	%r11592, %r11577, %r37;
	or.b32  	%r11591, %r11578, %r38;
	bra.uni 	BB4_1552;

BB4_439:
	setp.ne.s32	%p309, %r3898, 7;
	@%p309 bra 	BB4_10;

	and.b32  	%r3902, %r38, %r414;
	and.b32  	%r3903, %r413, %r38;
	shl.b32 	%r3904, %r3903, 1;
	and.b32  	%r3905, %r3904, %r413;
	or.b32  	%r11591, %r3905, %r3902;
	bra.uni 	BB4_680;

BB4_842:
	setp.gt.s32	%p536, %r44, 29;
	@%p536 bra 	BB4_846;

	setp.eq.s32	%p539, %r44, 28;
	@%p539 bra 	BB4_849;
	bra.uni 	BB4_844;

BB4_849:
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	mov.u32 	%r11590, %r11587;
	mov.u32 	%r38, %r39;
	bra.uni 	BB4_868;

BB4_979:
	setp.eq.s32	%p679, %r5095, 1;
	@%p679 bra 	BB4_998;
	bra.uni 	BB4_980;

BB4_998:
	and.b32  	%r11589, %r924, %r40;
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;

BB4_996:
	mov.u32 	%r11590, %r39;

BB4_997:
	mov.u32 	%r11591, %r11587;
	mov.u32 	%r11592, %r11587;
	mov.u32 	%r11593, %r11587;
	mov.u32 	%r11594, %r11587;
	mov.u32 	%r11595, %r44;
	bra.uni 	BB4_1552;

BB4_699:
	setp.gt.s32	%p497, %r34, 6;
	@%p497 bra 	BB4_703;

	setp.eq.s32	%p500, %r34, 5;
	@%p500 bra 	BB4_777;
	bra.uni 	BB4_701;

BB4_777:
	or.b32  	%r4170, %r39, %r40;
	and.b32  	%r4171, %r39, 16777215;
	prmt.b32 	%r11590, %r40, %r4171, 1620;
	shr.u32 	%r11589, %r4170, 24;
	mov.u32 	%r11595, 5;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	bra.uni 	BB4_768;

BB4_355:
	setp.eq.s32	%p268, %r3766, 1;
	@%p268 bra 	BB4_356;
	bra.uni 	BB4_10;

BB4_356:
	and.b32  	%r3786, %r40, %r372;
	and.b32  	%r3787, %r3742, %r371;
	or.b32  	%r11589, %r3787, %r3786;
	bra.uni 	BB4_622;

BB4_140:
	setp.gt.s32	%p163, %r44, 5;
	@%p163 bra 	BB4_144;

	setp.eq.s32	%p166, %r44, 4;
	@%p166 bra 	BB4_211;
	bra.uni 	BB4_142;

BB4_211:
	mov.u32 	%r11430, %r42;
	mov.u32 	%r11431, %r35;
	mov.u32 	%r11432, %r36;
	mov.u32 	%r11433, %r37;
	mov.u32 	%r11435, %r39;
	mov.u32 	%r11436, %r40;
	mov.u32 	%r11437, %r41;
	bra.uni 	BB4_213;

BB4_234:
	setp.eq.s32	%p197, %r3108, 1;
	mov.u32 	%r11446, %r35;
	mov.u32 	%r11447, %r36;
	mov.u32 	%r11448, %r37;
	mov.u32 	%r11449, %r38;
	mov.u32 	%r11450, %r39;
	mov.u32 	%r11451, %r40;
	mov.u32 	%r11452, %r41;
	mov.u32 	%r11453, %r42;
	@%p197 bra 	BB4_235;
	bra.uni 	BB4_251;

BB4_235:
	and.b32  	%r11451, %r206, %r40;
	mov.u32 	%r11446, 0;
	mov.u32 	%r11447, %r11446;
	mov.u32 	%r11448, %r11446;
	mov.u32 	%r11449, %r11446;
	mov.u32 	%r11450, %r39;

BB4_123:
	mov.u32 	%r11452, %r11446;

BB4_250:
	mov.u32 	%r11453, %r11446;
	bra.uni 	BB4_251;

BB4_1197:
	setp.eq.s32	%p790, %r44, 18;
	@%p790 bra 	BB4_1228;
	bra.uni 	BB4_1198;

BB4_1228:
	mov.u32 	%r5946, 16;
	// inline asm
	shf.r.wrap.b32 %r42, %r35, %r36, %r5946;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r36, %r37, %r5946;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r37, %r38, %r5946;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11587, %r38, %r11591, %r5946;
	// inline asm
	bra.uni 	BB4_1230;

BB4_1479:
	setp.eq.s32	%p993, %r7767, 18;
	@%p993 bra 	BB4_1513;
	bra.uni 	BB4_1480;

BB4_1513:
	mov.u32 	%r7937, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r41, %r42, %r7937;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r40, %r41, %r7937;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r39, %r40, %r7937;
	// inline asm
	mov.u32 	%r11579, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r11579, %r39, %r7937;
	// inline asm
	bra.uni 	BB4_1512;

BB4_1181:
	setp.eq.s32	%p802, %r44, 10;
	@%p802 bra 	BB4_1235;
	bra.uni 	BB4_1182;

BB4_1235:
	mov.u32 	%r6096, 16;
	// inline asm
	shf.r.wrap.b32 %r6073, %r41, %r42, %r6096;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r42, %r35, %r6096;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r35, %r36, %r6096;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r36, %r37, %r6096;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6089, %r37, %r38, %r6096;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11593, %r38, %r11591, %r6096;
	// inline asm
	mov.u32 	%r42, %r6073;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r38, %r6089;
	bra.uni 	BB4_1244;

BB4_986:
	setp.eq.s32	%p674, %r5095, 5;
	@%p674 bra 	BB4_987;
	bra.uni 	BB4_980;

BB4_987:
	and.b32  	%r11593, %r924, %r36;
	mov.u32 	%r11591, 0;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11592, %r11591;
	bra.uni 	BB4_992;

BB4_727:
	setp.gt.s32	%p476, %r34, 21;
	@%p476 bra 	BB4_732;

	setp.eq.s32	%p479, %r34, 20;
	@%p479 bra 	BB4_758;
	bra.uni 	BB4_729;

BB4_758:
	and.b32  	%r4089, %r35, 65535;
	shl.b32 	%r4090, %r35, 8;
	and.b32  	%r4091, %r4090, -16777216;
	or.b32  	%r4092, %r4091, %r4089;
	shr.u32 	%r4093, %r35, 8;
	and.b32  	%r4094, %r4093, 16711680;
	or.b32  	%r11594, %r4092, %r4094;
	mov.u32 	%r11595, 20;
	bra.uni 	BB4_760;

BB4_1463:
	setp.eq.s32	%p1005, %r7767, 10;
	@%p1005 bra 	BB4_1517;
	bra.uni 	BB4_1464;

BB4_1517:
	mov.u32 	%r8087, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r8087;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r42, %r35, %r8087;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r41, %r42, %r8087;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8076, %r40, %r41, %r8087;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11579, %r39, %r40, %r8087;
	// inline asm
	mov.u32 	%r11581, 0;
	// inline asm
	shf.r.wrap.b32 %r11580, %r11581, %r39, %r8087;
	// inline asm
	mov.u32 	%r11582, %r11581;
	mov.u32 	%r39, %r8076;
	bra.uni 	BB4_1527;

BB4_362:
	setp.eq.s32	%p263, %r3766, 5;
	@%p263 bra 	BB4_363;
	bra.uni 	BB4_10;

BB4_363:
	and.b32  	%r3778, %r36, %r372;
	and.b32  	%r3779, %r3758, %r371;
	or.b32  	%r11593, %r3779, %r3778;
	bra.uni 	BB4_663;

BB4_172:
	setp.gt.s32	%p140, %r44, 21;
	@%p140 bra 	BB4_176;

	setp.eq.s32	%p143, %r44, 20;
	@%p143 bra 	BB4_203;
	bra.uni 	BB4_174;

BB4_203:
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r39;
	mov.u32 	%r11432, %r40;
	mov.u32 	%r11433, %r41;
	bra.uni 	BB4_199;

BB4_241:
	setp.eq.s32	%p192, %r3108, 5;
	mov.u32 	%r11446, %r35;
	mov.u32 	%r11447, %r36;
	mov.u32 	%r11448, %r37;
	mov.u32 	%r11449, %r38;
	mov.u32 	%r11450, %r39;
	mov.u32 	%r11451, %r40;
	mov.u32 	%r11452, %r41;
	mov.u32 	%r11453, %r42;
	@%p192 bra 	BB4_242;
	bra.uni 	BB4_251;

BB4_242:
	and.b32  	%r11447, %r206, %r36;
	mov.u32 	%r11448, 0;
	mov.u32 	%r11446, %r35;
	mov.u32 	%r11449, %r11448;
	bra.uni 	BB4_246;

BB4_1212:
	setp.eq.s32	%p779, %r44, 26;
	@%p779 bra 	BB4_1224;
	bra.uni 	BB4_1213;

BB4_1224:
	mov.u32 	%r5828, 16;
	// inline asm
	shf.r.wrap.b32 %r42, %r37, %r38, %r5828;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r11589, %r38, %r11587, %r5828;
	// inline asm
	bra.uni 	BB4_1215;

BB4_1495:
	setp.eq.s32	%p982, %r7767, 26;
	@%p982 bra 	BB4_1507;
	bra.uni 	BB4_1496;

BB4_1507:
	mov.u32 	%r7819, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r39, %r40, %r7819;
	// inline asm
	mov.u32 	%r11579, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r11579, %r39, %r7819;
	// inline asm
	bra.uni 	BB4_1498;

BB4_1173:
	setp.eq.s32	%p808, %r44, 6;
	@%p808 bra 	BB4_1237;
	bra.uni 	BB4_1174;

BB4_1237:
	mov.u32 	%r6183, 16;
	// inline asm
	shf.r.wrap.b32 %r6156, %r40, %r41, %r6183;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r41, %r42, %r6183;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r42, %r35, %r6183;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r35, %r36, %r6183;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6172, %r36, %r37, %r6183;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r37, %r38, %r6183;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11592, %r38, %r11591, %r6183;
	// inline asm
	mov.u32 	%r42, %r6156;
	mov.u32 	%r38, %r6172;
	bra.uni 	BB4_1244;

BB4_982:
	setp.eq.s32	%p677, %r5095, 3;
	@%p677 bra 	BB4_983;
	bra.uni 	BB4_980;

BB4_983:
	and.b32  	%r11587, %r924, %r42;
	mov.u32 	%r11591, 0;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11595, %r44;
	bra.uni 	BB4_1552;

BB4_714:
	setp.gt.s32	%p486, %r34, 14;
	@%p486 bra 	BB4_718;

	setp.eq.s32	%p489, %r34, 13;
	@%p489 bra 	BB4_771;
	bra.uni 	BB4_716;

BB4_771:
	or.b32  	%r4128, %r41, %r42;
	and.b32  	%r4129, %r41, 16777215;
	prmt.b32 	%r11588, %r42, %r4129, 1620;
	shr.u32 	%r11587, %r4128, 24;
	mov.u32 	%r11595, 13;
	bra.uni 	BB4_766;

BB4_1455:
	setp.eq.s32	%p1011, %r7767, 6;
	@%p1011 bra 	BB4_1519;
	bra.uni 	BB4_1456;

BB4_1519:
	mov.u32 	%r8174, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r8174;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r8174;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r42, %r35, %r8174;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8159, %r41, %r42, %r8174;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11579, %r40, %r41, %r8174;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11580, %r39, %r40, %r8174;
	// inline asm
	mov.u32 	%r11582, 0;
	// inline asm
	shf.r.wrap.b32 %r11581, %r11582, %r39, %r8174;
	// inline asm
	mov.u32 	%r39, %r8159;
	bra.uni 	BB4_1527;

BB4_358:
	setp.eq.s32	%p266, %r3766, 3;
	@%p266 bra 	BB4_359;
	bra.uni 	BB4_10;

BB4_359:
	and.b32  	%r3782, %r42, %r372;
	and.b32  	%r3783, %r3750, %r371;
	or.b32  	%r11587, %r3783, %r3782;
	bra.uni 	BB4_639;

BB4_155:
	setp.gt.s32	%p152, %r44, 13;
	@%p152 bra 	BB4_159;

	setp.eq.s32	%p155, %r44, 12;
	@%p155 bra 	BB4_207;
	bra.uni 	BB4_157;

BB4_207:
	mov.u32 	%r11430, %r40;
	mov.u32 	%r11431, %r41;
	mov.u32 	%r11432, %r42;
	mov.u32 	%r11433, %r35;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r39;
	bra.uni 	BB4_213;

BB4_237:
	setp.eq.s32	%p195, %r3108, 3;
	mov.u32 	%r11446, %r35;
	mov.u32 	%r11447, %r36;
	mov.u32 	%r11448, %r37;
	mov.u32 	%r11449, %r38;
	mov.u32 	%r11450, %r39;
	mov.u32 	%r11451, %r40;
	mov.u32 	%r11452, %r41;
	mov.u32 	%r11453, %r42;
	@%p195 bra 	BB4_238;
	bra.uni 	BB4_251;

BB4_238:
	and.b32  	%r11453, %r206, %r42;
	mov.u32 	%r11446, 0;
	mov.u32 	%r11447, %r11446;
	mov.u32 	%r11448, %r11446;
	mov.u32 	%r11449, %r11446;
	mov.u32 	%r11450, %r39;
	mov.u32 	%r11451, %r40;
	mov.u32 	%r11452, %r41;
	bra.uni 	BB4_251;

BB4_1204:
	setp.eq.s32	%p785, %r44, 22;
	@%p785 bra 	BB4_1226;
	bra.uni 	BB4_1205;

BB4_1226:
	mov.u32 	%r5883, 16;
	// inline asm
	shf.r.wrap.b32 %r42, %r36, %r37, %r5883;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r37, %r38, %r5883;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r11588, %r38, %r11587, %r5883;
	// inline asm
	bra.uni 	BB4_1243;

BB4_1486:
	setp.eq.s32	%p988, %r7767, 22;
	@%p988 bra 	BB4_1509;
	bra.uni 	BB4_1487;

BB4_1509:
	mov.u32 	%r7874, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r40, %r41, %r7874;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r39, %r40, %r7874;
	// inline asm
	mov.u32 	%r11579, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r11579, %r39, %r7874;
	// inline asm
	bra.uni 	BB4_1489;

BB4_1188:
	setp.eq.s32	%p797, %r44, 14;
	@%p797 bra 	BB4_1232;
	bra.uni 	BB4_1189;

BB4_1232:
	mov.u32 	%r6017, 16;
	// inline asm
	shf.r.wrap.b32 %r42, %r42, %r35, %r6017;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r35, %r36, %r6017;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r36, %r37, %r6017;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r37, %r38, %r6017;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r38, %r38, %r11591, %r6017;
	// inline asm
	bra.uni 	BB4_1234;

BB4_989:
	setp.ne.s32	%p672, %r5095, 7;
	@%p672 bra 	BB4_980;

	and.b32  	%r11591, %r924, %r38;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11592, %r37;
	bra.uni 	BB4_991;

BB4_980:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11592, %r37;

BB4_991:
	mov.u32 	%r11593, %r36;

BB4_992:
	mov.u32 	%r11594, %r35;
	mov.u32 	%r11595, %r44;
	bra.uni 	BB4_1552;

BB4_743:
	setp.gt.s32	%p465, %r34, 29;
	@%p465 bra 	BB4_747;

	setp.eq.s32	%p468, %r34, 28;
	@%p468 bra 	BB4_752;
	bra.uni 	BB4_745;

BB4_752:
	and.b32  	%r4047, %r37, 65535;
	shl.b32 	%r4048, %r37, 8;
	and.b32  	%r4049, %r4048, -16777216;
	or.b32  	%r4050, %r4049, %r4047;
	shr.u32 	%r4051, %r37, 8;
	and.b32  	%r4052, %r4051, 16711680;
	or.b32  	%r11592, %r4050, %r4052;
	mov.u32 	%r11595, 28;
	bra.uni 	BB4_754;

BB4_1470:
	setp.eq.s32	%p1000, %r7767, 14;
	@%p1000 bra 	BB4_1515;
	bra.uni 	BB4_1471;

BB4_1515:
	mov.u32 	%r8008, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r42, %r35, %r8008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r41, %r42, %r8008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r40, %r41, %r8008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8001, %r39, %r40, %r8008;
	// inline asm
	mov.u32 	%r11580, 0;
	// inline asm
	shf.r.wrap.b32 %r11579, %r11580, %r39, %r8008;
	// inline asm
	mov.u32 	%r11581, %r11580;
	mov.u32 	%r11582, %r11580;
	mov.u32 	%r39, %r8001;
	bra.uni 	BB4_1527;

BB4_365:
	setp.ne.s32	%p261, %r3766, 7;
	@%p261 bra 	BB4_10;

	mov.u32 	%r3772, 0;
	// inline asm
	shf.r.wrap.b32 %r3770, %r38, %r3772, %r3765;
	// inline asm
	and.b32  	%r3774, %r3770, %r371;
	and.b32  	%r3775, %r38, %r372;
	or.b32  	%r11591, %r3774, %r3775;
	bra.uni 	BB4_680;

BB4_189:
	setp.gt.s32	%p129, %r44, 29;
	@%p129 bra 	BB4_193;

	setp.eq.s32	%p132, %r44, 28;
	@%p132 bra 	BB4_198;
	bra.uni 	BB4_191;

BB4_198:
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r39;
	bra.uni 	BB4_199;

BB4_244:
	setp.ne.s32	%p190, %r3108, 7;
	mov.u32 	%r11446, %r35;
	mov.u32 	%r11447, %r36;
	mov.u32 	%r11448, %r37;
	mov.u32 	%r11449, %r38;
	mov.u32 	%r11450, %r39;
	mov.u32 	%r11451, %r40;
	mov.u32 	%r11452, %r41;
	mov.u32 	%r11453, %r42;
	@%p190 bra 	BB4_251;

	and.b32  	%r11449, %r206, %r38;
	mov.u32 	%r11446, %r35;
	mov.u32 	%r11447, %r36;
	mov.u32 	%r11448, %r37;

BB4_246:
	mov.u32 	%r11450, %r39;
	mov.u32 	%r11451, %r40;
	mov.u32 	%r11452, %r41;
	mov.u32 	%r11453, %r42;

BB4_251:
	setp.gt.s32	%p198, %r44, 15;
	@%p198 bra 	BB4_280;

	setp.gt.s32	%p222, %r44, 7;
	@%p222 bra 	BB4_265;

	setp.gt.s32	%p234, %r44, 3;
	@%p234 bra 	BB4_258;

	setp.eq.s32	%p240, %r44, 1;
	@%p240 bra 	BB4_329;

	setp.eq.s32	%p241, %r44, 2;
	@%p241 bra 	BB4_328;
	bra.uni 	BB4_256;

BB4_328:
	mov.u32 	%r3641, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r3641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r3641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r3641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3622, %r42, %r35, %r3641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11454, %r41, %r42, %r3641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11455, %r40, %r41, %r3641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11456, %r39, %r40, %r3641;
	// inline asm
	mov.u32 	%r3639, 0;
	// inline asm
	shf.r.wrap.b32 %r11457, %r3639, %r39, %r3641;
	// inline asm
	mov.u32 	%r39, %r3622;
	bra.uni 	BB4_335;

BB4_280:
	setp.gt.s32	%p199, %r44, 23;
	@%p199 bra 	BB4_297;

	setp.gt.s32	%p211, %r44, 19;
	@%p211 bra 	BB4_289;

	setp.gt.s32	%p217, %r44, 17;
	@%p217 bra 	BB4_286;

	setp.eq.s32	%p220, %r44, 16;
	@%p220 bra 	BB4_321;
	bra.uni 	BB4_284;

BB4_321:
	mov.u32 	%r11454, 0;
	mov.u32 	%r11455, %r11454;
	mov.u32 	%r11456, %r11454;
	mov.u32 	%r11457, %r11454;
	mov.u32 	%r38, %r42;
	mov.u32 	%r37, %r41;
	mov.u32 	%r36, %r40;
	bra.uni 	BB4_335;

BB4_265:
	setp.gt.s32	%p223, %r44, 11;
	@%p223 bra 	BB4_273;

	setp.gt.s32	%p229, %r44, 9;
	@%p229 bra 	BB4_270;

	setp.eq.s32	%p232, %r44, 8;
	@%p232 bra 	BB4_325;
	bra.uni 	BB4_268;

BB4_325:
	mov.u32 	%r11456, 0;
	mov.u32 	%r11454, %r40;
	mov.u32 	%r11455, %r39;
	mov.u32 	%r11457, %r11456;
	mov.u32 	%r38, %r36;
	mov.u32 	%r37, %r35;
	mov.u32 	%r36, %r42;
	mov.u32 	%r39, %r41;
	bra.uni 	BB4_335;

BB4_297:
	setp.gt.s32	%p200, %r44, 27;
	@%p200 bra 	BB4_306;

	setp.gt.s32	%p206, %r44, 25;
	@%p206 bra 	BB4_302;

	setp.eq.s32	%p209, %r44, 24;
	@%p209 bra 	BB4_315;
	bra.uni 	BB4_300;

BB4_315:
	mov.u32 	%r11454, 0;
	mov.u32 	%r11455, %r11454;
	mov.u32 	%r11456, %r11454;
	mov.u32 	%r11457, %r11454;
	mov.u32 	%r38, %r40;
	mov.u32 	%r37, %r39;
	bra.uni 	BB4_333;

BB4_1220:
	setp.eq.s32	%p774, %r44, 31;
	@%p774 bra 	BB4_1241;
	bra.uni 	BB4_1221;

BB4_1241:
	mov.u32 	%r11587, 0;
	mov.u32 	%r6314, 24;
	// inline asm
	shf.r.wrap.b32 %r42, %r38, %r11587, %r6314;
	// inline asm
	bra.uni 	BB4_1242;

BB4_1503:
	setp.eq.s32	%p977, %r7767, 31;
	@%p977 bra 	BB4_1522;
	bra.uni 	BB4_1504;

BB4_1522:
	mov.u32 	%r11579, 0;
	mov.u32 	%r8305, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r11579, %r39, %r8305;
	// inline asm
	bra.uni 	BB4_1523;

BB4_258:
	setp.gt.s32	%p235, %r44, 5;
	@%p235 bra 	BB4_262;

	setp.eq.s32	%p238, %r44, 4;
	@%p238 bra 	BB4_327;
	bra.uni 	BB4_260;

BB4_327:
	mov.u32 	%r11457, 0;
	mov.u32 	%r11454, %r41;
	mov.u32 	%r11455, %r40;
	mov.u32 	%r11456, %r39;
	mov.u32 	%r38, %r37;
	mov.u32 	%r37, %r36;
	mov.u32 	%r36, %r35;
	mov.u32 	%r39, %r42;
	bra.uni 	BB4_335;

BB4_289:
	setp.gt.s32	%p212, %r44, 21;
	@%p212 bra 	BB4_293;

	setp.eq.s32	%p215, %r44, 20;
	@%p215 bra 	BB4_317;
	bra.uni 	BB4_291;

BB4_317:
	mov.u32 	%r11454, 0;
	mov.u32 	%r11455, %r11454;
	mov.u32 	%r11456, %r11454;
	mov.u32 	%r11457, %r11454;
	mov.u32 	%r38, %r41;
	mov.u32 	%r37, %r40;
	mov.u32 	%r36, %r39;
	bra.uni 	BB4_334;

BB4_273:
	setp.gt.s32	%p224, %r44, 13;
	@%p224 bra 	BB4_277;

	setp.eq.s32	%p227, %r44, 12;
	@%p227 bra 	BB4_323;
	bra.uni 	BB4_275;

BB4_323:
	mov.u32 	%r11455, 0;
	mov.u32 	%r11454, %r39;
	mov.u32 	%r11456, %r11455;
	mov.u32 	%r11457, %r11455;
	mov.u32 	%r38, %r35;
	mov.u32 	%r37, %r42;
	mov.u32 	%r36, %r41;
	mov.u32 	%r39, %r40;
	bra.uni 	BB4_335;

BB4_306:
	setp.gt.s32	%p201, %r44, 29;
	@%p201 bra 	BB4_310;

	setp.eq.s32	%p204, %r44, 28;
	@%p204 bra 	BB4_313;
	bra.uni 	BB4_308;

BB4_313:
	mov.u32 	%r11454, 0;
	mov.u32 	%r11455, %r11454;
	mov.u32 	%r11456, %r11454;
	mov.u32 	%r11457, %r11454;
	mov.u32 	%r38, %r39;
	bra.uni 	BB4_332;

BB4_1240:
	mov.u32 	%r6310, 8;
	// inline asm
	shf.r.wrap.b32 %r6279, %r39, %r40, %r6310;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r40, %r41, %r6310;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r41, %r42, %r6310;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r42, %r35, %r6310;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6295, %r35, %r36, %r6310;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r36, %r37, %r6310;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r37, %r38, %r6310;
	// inline asm
	mov.u32 	%r6309, 0;
	// inline asm
	shf.r.wrap.b32 %r11591, %r38, %r6309, %r6310;
	// inline asm
	mov.u32 	%r42, %r6279;
	mov.u32 	%r38, %r6295;
	bra.uni 	BB4_1244;

BB4_1167:
	setp.eq.s32	%p814, %r44, 3;
	@%p814 bra 	BB4_1168;
	bra.uni 	BB4_1190;

BB4_1168:
	mov.u32 	%r6246, 24;
	// inline asm
	shf.r.wrap.b32 %r6215, %r39, %r40, %r6246;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r40, %r41, %r6246;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r41, %r42, %r6246;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r42, %r35, %r6246;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6231, %r35, %r36, %r6246;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r36, %r37, %r6246;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r37, %r38, %r6246;
	// inline asm
	mov.u32 	%r6245, 0;
	// inline asm
	shf.r.wrap.b32 %r11591, %r38, %r6245, %r6246;
	// inline asm
	mov.u32 	%r42, %r6215;
	mov.u32 	%r38, %r6231;
	bra.uni 	BB4_1244;

BB4_1057:
	setp.eq.s32	%p752, %r46, 2;
	@%p752 bra 	BB4_1134;
	bra.uni 	BB4_1058;

BB4_1134:
	mov.u32 	%r5723, 16;
	// inline asm
	shf.r.wrap.b32 %r11509, %r39, %r40, %r5723;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r40, %r41, %r5723;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r41, %r42, %r5723;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r42, %r35, %r5723;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r35, %r36, %r5723;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r36, %r37, %r5723;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r37, %r38, %r5723;
	// inline asm
	mov.u32 	%r5722, 0;
	// inline asm
	shf.r.wrap.b32 %r11591, %r38, %r5722, %r5723;
	// inline asm
	bra.uni 	BB4_1136;

BB4_1521:
	mov.u32 	%r8301, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8282, %r42, %r35, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11579, %r41, %r42, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11580, %r40, %r41, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11581, %r39, %r40, %r8301;
	// inline asm
	mov.u32 	%r8299, 0;
	// inline asm
	shf.r.wrap.b32 %r11582, %r8299, %r39, %r8301;
	// inline asm
	mov.u32 	%r39, %r8282;
	bra.uni 	BB4_1527;

BB4_1449:
	setp.eq.s32	%p1017, %r7767, 3;
	@%p1017 bra 	BB4_1450;
	bra.uni 	BB4_1481;

BB4_1450:
	mov.u32 	%r8237, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r8237;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r8237;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r8237;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8218, %r42, %r35, %r8237;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11579, %r41, %r42, %r8237;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11580, %r40, %r41, %r8237;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11581, %r39, %r40, %r8237;
	// inline asm
	mov.u32 	%r8235, 0;
	// inline asm
	shf.r.wrap.b32 %r11582, %r8235, %r39, %r8237;
	// inline asm
	mov.u32 	%r39, %r8218;
	bra.uni 	BB4_1527;

BB4_453:
	setp.eq.s32	%p363, %r44, 2;
	@%p363 bra 	BB4_523;
	bra.uni 	BB4_454;

BB4_523:
	bfe.u32 	%r11462, %r39, 16, 8;
	bra.uni 	BB4_525;

BB4_339:
	setp.eq.s32	%p256, %r3713, 1;
	@%p256 bra 	BB4_340;
	bra.uni 	BB4_10;

BB4_340:
	and.b32  	%r3729, %r40, %r355;
	and.b32  	%r3730, %r3709, %r354;
	or.b32  	%r11589, %r3730, %r3729;
	bra.uni 	BB4_622;

BB4_1318:
	setp.gt.s32	%p925, %r6642, 5;
	@%p925 bra 	BB4_1322;

	setp.eq.s32	%p928, %r6642, 4;
	@%p928 bra 	BB4_1390;
	bra.uni 	BB4_1320;

BB4_1390:
	mov.u32 	%r11537, %r42;
	mov.u32 	%r11538, %r35;
	mov.u32 	%r11539, %r36;
	mov.u32 	%r11540, %r37;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r39;
	mov.u32 	%r11543, %r40;
	mov.u32 	%r11544, %r41;
	bra.uni 	BB4_1392;

BB4_410:
	setp.eq.s32	%p304, %r3862, 1;
	@%p304 bra 	BB4_411;
	bra.uni 	BB4_10;

BB4_411:
	and.b32  	%r3890, %r40, %r404;
	and.b32  	%r3891, %r403, %r40;
	shr.u32 	%r3892, %r3891, 1;
	and.b32  	%r3893, %r3892, %r403;
	or.b32  	%r11589, %r3893, %r3890;
	bra.uni 	BB4_622;

BB4_1267:
	setp.eq.s32	%p837, %r6387, 1;
	@%p837 bra 	BB4_1268;
	bra.uni 	BB4_1280;

BB4_1268:
	and.b32  	%r6404, %r1230, %r40;
	and.b32  	%r6405, %r11589, %r1231;
	or.b32  	%r11589, %r6405, %r6404;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1277;

BB4_131:
	setp.eq.s32	%p867, %r6489, 1;
	@%p867 bra 	BB4_1305;
	bra.uni 	BB4_132;

BB4_1305:
	and.b32  	%r11589, %r11589, %r1275;
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;

BB4_1304:
	mov.u32 	%r11591, %r11587;
	mov.u32 	%r11592, %r11587;
	mov.u32 	%r11593, %r11587;
	mov.u32 	%r11594, %r11587;
	bra.uni 	BB4_1551;

BB4_1089:
	setp.eq.s32	%p729, %r46, 18;
	@%p729 bra 	BB4_1126;
	bra.uni 	BB4_1090;

BB4_1126:
	mov.u32 	%r5391, 16;
	// inline asm
	shf.r.wrap.b32 %r11509, %r35, %r36, %r5391;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r36, %r37, %r5391;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r37, %r38, %r5391;
	// inline asm
	mov.u32 	%r11594, 0;
	// inline asm
	shf.r.wrap.b32 %r11587, %r38, %r11594, %r5391;
	// inline asm
	bra.uni 	BB4_1092;

BB4_484:
	setp.eq.s32	%p340, %r44, 18;
	@%p340 bra 	BB4_515;
	bra.uni 	BB4_485;

BB4_515:
	bfe.u32 	%r11462, %r35, 16, 8;
	bra.uni 	BB4_525;

BB4_822:
	setp.eq.s32	%p553, %r44, 18;
	@%p553 bra 	BB4_856;
	bra.uni 	BB4_823;

BB4_856:
	mov.u32 	%r4433, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r41, %r42, %r4433;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r40, %r41, %r4433;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r39, %r40, %r4433;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11587, %r39, %r4433;
	// inline asm
	bra.uni 	BB4_855;

BB4_1072:
	setp.eq.s32	%p741, %r46, 10;
	@%p741 bra 	BB4_1130;
	bra.uni 	BB4_1073;

BB4_1130:
	mov.u32 	%r5541, 16;
	// inline asm
	shf.r.wrap.b32 %r11509, %r41, %r42, %r5541;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r42, %r35, %r5541;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r35, %r36, %r5541;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r36, %r37, %r5541;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r37, %r38, %r5541;
	// inline asm
	mov.u32 	%r11592, 0;
	// inline asm
	shf.r.wrap.b32 %r11593, %r38, %r11592, %r5541;
	// inline asm
	mov.u32 	%r11591, %r11592;
	bra.uni 	BB4_1136;

BB4_468:
	setp.eq.s32	%p352, %r44, 10;
	@%p352 bra 	BB4_519;
	bra.uni 	BB4_469;

BB4_519:
	bfe.u32 	%r11462, %r41, 16, 8;
	bra.uni 	BB4_525;

BB4_346:
	setp.eq.s32	%p251, %r3713, 5;
	@%p251 bra 	BB4_347;
	bra.uni 	BB4_10;

BB4_347:
	and.b32  	%r3721, %r36, %r355;
	and.b32  	%r3722, %r3693, %r354;
	or.b32  	%r11593, %r3722, %r3721;
	bra.uni 	BB4_663;

BB4_1351:
	setp.gt.s32	%p902, %r6642, 21;
	@%p902 bra 	BB4_1355;

	setp.eq.s32	%p905, %r6642, 20;
	@%p905 bra 	BB4_1382;
	bra.uni 	BB4_1353;

BB4_1382:
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r39;
	mov.u32 	%r11539, %r40;
	mov.u32 	%r11540, %r41;
	bra.uni 	BB4_1378;

BB4_417:
	setp.eq.s32	%p299, %r3862, 5;
	@%p299 bra 	BB4_418;
	bra.uni 	BB4_10;

BB4_418:
	and.b32  	%r3874, %r36, %r404;
	and.b32  	%r3875, %r403, %r36;
	shr.u32 	%r3876, %r3875, 1;
	and.b32  	%r3877, %r3876, %r403;
	or.b32  	%r11593, %r3877, %r3874;
	bra.uni 	BB4_663;

BB4_1274:
	setp.eq.s32	%p832, %r6387, 5;
	@%p832 bra 	BB4_1275;
	bra.uni 	BB4_1280;

BB4_1275:
	and.b32  	%r6396, %r1230, %r36;
	and.b32  	%r6397, %r11593, %r1231;
	or.b32  	%r11593, %r6397, %r6396;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1276;

BB4_805:
	setp.eq.s32	%p565, %r44, 10;
	@%p565 bra 	BB4_860;
	bra.uni 	BB4_806;

BB4_860:
	mov.u32 	%r4583, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r4583;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r42, %r35, %r4583;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r41, %r42, %r4583;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r40, %r41, %r4583;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r39, %r40, %r4583;
	// inline asm
	mov.u32 	%r11589, 0;
	// inline asm
	shf.r.wrap.b32 %r11588, %r11589, %r39, %r4583;
	// inline asm
	mov.u32 	%r11590, %r11589;
	bra.uni 	BB4_871;

BB4_1296:
	setp.eq.s32	%p862, %r6489, 5;
	@%p862 bra 	BB4_1297;
	bra.uni 	BB4_132;

BB4_1297:
	and.b32  	%r11593, %r11593, %r1275;
	mov.u32 	%r11591, 0;
	mov.u32 	%r11592, %r11591;
	bra.uni 	BB4_1551;

BB4_1106:
	setp.eq.s32	%p718, %r46, 26;
	@%p718 bra 	BB4_1122;
	bra.uni 	BB4_1107;

BB4_1122:
	mov.u32 	%r5273, 16;
	// inline asm
	shf.r.wrap.b32 %r11509, %r37, %r38, %r5273;
	// inline asm
	mov.u32 	%r11594, 0;
	// inline asm
	shf.r.wrap.b32 %r11589, %r38, %r11594, %r5273;
	// inline asm
	bra.uni 	BB4_1109;

BB4_499:
	setp.eq.s32	%p329, %r44, 26;
	@%p329 bra 	BB4_511;
	bra.uni 	BB4_500;

BB4_511:
	bfe.u32 	%r11462, %r37, 16, 8;
	bra.uni 	BB4_525;

BB4_838:
	setp.eq.s32	%p542, %r44, 26;
	@%p542 bra 	BB4_850;
	bra.uni 	BB4_839;

BB4_850:
	mov.u32 	%r4315, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r39, %r40, %r4315;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r11587, %r39, %r4315;
	// inline asm
	bra.uni 	BB4_841;

BB4_1064:
	setp.eq.s32	%p747, %r46, 6;
	@%p747 bra 	BB4_1132;
	bra.uni 	BB4_1065;

BB4_1132:
	mov.u32 	%r5628, 16;
	// inline asm
	shf.r.wrap.b32 %r11509, %r40, %r41, %r5628;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r41, %r42, %r5628;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r42, %r35, %r5628;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r35, %r36, %r5628;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r36, %r37, %r5628;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r37, %r38, %r5628;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11592, %r38, %r11591, %r5628;
	// inline asm
	bra.uni 	BB4_1136;

BB4_460:
	setp.eq.s32	%p358, %r44, 6;
	@%p358 bra 	BB4_521;
	bra.uni 	BB4_461;

BB4_521:
	bfe.u32 	%r11462, %r40, 16, 8;
	bra.uni 	BB4_525;

BB4_342:
	setp.eq.s32	%p254, %r3713, 3;
	@%p254 bra 	BB4_343;
	bra.uni 	BB4_10;

BB4_343:
	and.b32  	%r3725, %r42, %r355;
	and.b32  	%r3726, %r3701, %r354;
	or.b32  	%r11587, %r3726, %r3725;
	bra.uni 	BB4_639;

BB4_1333:
	setp.gt.s32	%p914, %r6642, 13;
	@%p914 bra 	BB4_1337;

	setp.eq.s32	%p917, %r6642, 12;
	@%p917 bra 	BB4_1386;
	bra.uni 	BB4_1335;

BB4_1386:
	mov.u32 	%r11537, %r40;
	mov.u32 	%r11538, %r41;
	mov.u32 	%r11539, %r42;
	mov.u32 	%r11540, %r35;
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r39;
	bra.uni 	BB4_1392;

BB4_413:
	setp.eq.s32	%p302, %r3862, 3;
	@%p302 bra 	BB4_414;
	bra.uni 	BB4_10;

BB4_414:
	and.b32  	%r3882, %r42, %r404;
	and.b32  	%r3883, %r403, %r42;
	shr.u32 	%r3884, %r3883, 1;
	and.b32  	%r3885, %r3884, %r403;
	or.b32  	%r11587, %r3885, %r3882;
	bra.uni 	BB4_639;

BB4_1270:
	setp.eq.s32	%p835, %r6387, 3;
	@%p835 bra 	BB4_1271;
	bra.uni 	BB4_1280;

BB4_1271:
	and.b32  	%r6400, %r1230, %r42;
	and.b32  	%r6401, %r11587, %r1231;
	or.b32  	%r11587, %r6401, %r6400;

BB4_1286:
	mov.u32 	%r11588, %r41;

BB4_1287:
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1277;

BB4_797:
	setp.eq.s32	%p571, %r44, 6;
	@%p571 bra 	BB4_862;
	bra.uni 	BB4_798;

BB4_862:
	mov.u32 	%r4670, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r4670;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r4670;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r42, %r35, %r4670;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r41, %r42, %r4670;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r40, %r41, %r4670;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r39, %r40, %r4670;
	// inline asm
	mov.u32 	%r11590, 0;
	// inline asm
	shf.r.wrap.b32 %r11589, %r11590, %r39, %r4670;
	// inline asm
	bra.uni 	BB4_871;

BB4_1292:
	setp.eq.s32	%p865, %r6489, 3;
	@%p865 bra 	BB4_1293;
	bra.uni 	BB4_132;

BB4_1293:
	and.b32  	%r11587, %r11587, %r1275;
	mov.u32 	%r11591, 0;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11594, %r11591;
	bra.uni 	BB4_1551;

BB4_1097:
	setp.eq.s32	%p724, %r46, 22;
	@%p724 bra 	BB4_1124;
	bra.uni 	BB4_1098;

BB4_1124:
	mov.u32 	%r5328, 16;
	// inline asm
	shf.r.wrap.b32 %r11509, %r36, %r37, %r5328;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r37, %r38, %r5328;
	// inline asm
	mov.u32 	%r11594, 0;
	// inline asm
	shf.r.wrap.b32 %r11588, %r38, %r11594, %r5328;
	// inline asm
	bra.uni 	BB4_1100;

BB4_491:
	setp.eq.s32	%p335, %r44, 22;
	@%p335 bra 	BB4_513;
	bra.uni 	BB4_492;

BB4_513:
	bfe.u32 	%r11462, %r36, 16, 8;
	bra.uni 	BB4_525;

BB4_829:
	setp.eq.s32	%p548, %r44, 22;
	@%p548 bra 	BB4_852;
	bra.uni 	BB4_830;

BB4_852:
	mov.u32 	%r4370, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r40, %r41, %r4370;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r39, %r40, %r4370;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r11587, %r39, %r4370;
	// inline asm
	bra.uni 	BB4_832;

BB4_1079:
	setp.eq.s32	%p736, %r46, 14;
	@%p736 bra 	BB4_1128;
	bra.uni 	BB4_1080;

BB4_1128:
	mov.u32 	%r5462, 16;
	// inline asm
	shf.r.wrap.b32 %r11509, %r42, %r35, %r5462;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r35, %r36, %r5462;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r36, %r37, %r5462;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r37, %r38, %r5462;
	// inline asm
	mov.u32 	%r11593, 0;
	// inline asm
	shf.r.wrap.b32 %r11594, %r38, %r11593, %r5462;
	// inline asm
	bra.uni 	BB4_1082;

BB4_475:
	setp.eq.s32	%p347, %r44, 14;
	@%p347 bra 	BB4_517;
	bra.uni 	BB4_476;

BB4_517:
	bfe.u32 	%r11462, %r42, 16, 8;
	bra.uni 	BB4_525;

BB4_349:
	setp.ne.s32	%p249, %r3713, 7;
	@%p249 bra 	BB4_10;

	and.b32  	%r3717, %r38, %r355;
	and.b32  	%r3718, %r3685, %r354;
	or.b32  	%r11591, %r3718, %r3717;
	bra.uni 	BB4_680;

BB4_1368:
	setp.gt.s32	%p891, %r6642, 29;
	@%p891 bra 	BB4_1372;

	setp.eq.s32	%p894, %r6642, 28;
	@%p894 bra 	BB4_1377;
	bra.uni 	BB4_1370;

BB4_1377:
	mov.u32 	%r11537, %r11545;
	mov.u32 	%r11538, %r11545;
	mov.u32 	%r11539, %r11545;
	mov.u32 	%r11540, %r39;

BB4_1378:
	mov.u32 	%r11541, %r11545;
	mov.u32 	%r11542, %r11545;
	mov.u32 	%r11543, %r11545;
	mov.u32 	%r11544, %r11545;
	bra.uni 	BB4_1392;

BB4_420:
	setp.ne.s32	%p297, %r3862, 7;
	@%p297 bra 	BB4_10;

	and.b32  	%r3866, %r38, %r404;
	and.b32  	%r3867, %r403, %r38;
	shr.u32 	%r3868, %r3867, 1;
	and.b32  	%r3869, %r3868, %r403;
	or.b32  	%r11591, %r3869, %r3866;
	bra.uni 	BB4_680;

BB4_1279:
	setp.ne.s32	%p830, %r6387, 7;
	@%p830 bra 	BB4_1280;

	and.b32  	%r6392, %r1230, %r38;
	and.b32  	%r6393, %r11591, %r1231;
	or.b32  	%r11591, %r6393, %r6392;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1281;

BB4_1280:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;

BB4_1281:
	mov.u32 	%r11592, %r37;

BB4_1282:
	mov.u32 	%r11593, %r36;

BB4_1276:
	mov.u32 	%r11594, %r35;

BB4_1277:
	add.s32 	%r11595, %r34, -1;
	bra.uni 	BB4_1552;

BB4_812:
	setp.eq.s32	%p560, %r44, 14;
	@%p560 bra 	BB4_858;
	bra.uni 	BB4_813;

BB4_858:
	mov.u32 	%r4504, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r42, %r35, %r4504;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r41, %r42, %r4504;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r40, %r41, %r4504;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r39, %r40, %r4504;
	// inline asm
	mov.u32 	%r11588, 0;
	// inline asm
	shf.r.wrap.b32 %r11587, %r11588, %r39, %r4504;
	// inline asm
	bra.uni 	BB4_815;

BB4_1299:
	setp.ne.s32	%p860, %r6489, 7;
	@%p860 bra 	BB4_132;

	and.b32  	%r11591, %r6457, %r1275;
	bra.uni 	BB4_1551;

BB4_132:
	mov.u32 	%r11591, %r6457;
	bra.uni 	BB4_1551;

BB4_1115:
	setp.eq.s32	%p713, %r46, 30;
	@%p713 bra 	BB4_1119;
	bra.uni 	BB4_1116;

BB4_1119:
	mov.u32 	%r11594, 0;
	mov.u32 	%r5226, 16;
	// inline asm
	shf.r.wrap.b32 %r11509, %r38, %r11594, %r5226;
	// inline asm
	bra.uni 	BB4_1118;

BB4_506:
	setp.eq.s32	%p324, %r44, 30;
	@%p324 bra 	BB4_509;
	bra.uni 	BB4_507;

BB4_509:
	bfe.u32 	%r11462, %r38, 16, 8;
	bra.uni 	BB4_525;

BB4_846:
	setp.eq.s32	%p537, %r44, 31;
	@%p537 bra 	BB4_866;
	bra.uni 	BB4_847;

BB4_866:
	mov.u32 	%r11587, 0;
	mov.u32 	%r4801, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r11587, %r39, %r4801;
	// inline asm
	bra.uni 	BB4_867;

BB4_137:
	setp.eq.s32	%p169, %r44, 2;
	@%p169 bra 	BB4_212;
	bra.uni 	BB4_138;

BB4_212:
	mov.u32 	%r3043, 16;
	// inline asm
	shf.r.wrap.b32 %r11433, %r37, %r38, %r3043;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r36, %r37, %r3043;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r35, %r36, %r3043;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r42, %r35, %r3043;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11437, %r41, %r42, %r3043;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11436, %r40, %r41, %r3043;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11435, %r39, %r40, %r3043;
	// inline asm
	mov.u32 	%r3041, 0;
	// inline asm
	shf.r.wrap.b32 %r11434, %r3041, %r39, %r3043;
	// inline asm
	bra.uni 	BB4_213;

BB4_1195:
	setp.eq.s32	%p793, %r44, 17;
	@%p793 bra 	BB4_1196;
	bra.uni 	BB4_1190;

BB4_1196:
	mov.u32 	%r5966, 8;
	// inline asm
	shf.r.wrap.b32 %r42, %r35, %r36, %r5966;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r36, %r37, %r5966;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r37, %r38, %r5966;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11587, %r38, %r11591, %r5966;
	// inline asm
	bra.uni 	BB4_1230;

BB4_1477:
	setp.eq.s32	%p996, %r7767, 17;
	@%p996 bra 	BB4_1478;
	bra.uni 	BB4_1481;

BB4_1478:
	mov.u32 	%r7957, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r41, %r42, %r7957;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r40, %r41, %r7957;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r39, %r40, %r7957;
	// inline asm
	mov.u32 	%r11579, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r11579, %r39, %r7957;
	// inline asm
	bra.uni 	BB4_1512;

BB4_1179:
	setp.eq.s32	%p805, %r44, 9;
	@%p805 bra 	BB4_1180;
	bra.uni 	BB4_1190;

BB4_1180:
	mov.u32 	%r6122, 8;
	// inline asm
	shf.r.wrap.b32 %r6099, %r41, %r42, %r6122;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r42, %r35, %r6122;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r35, %r36, %r6122;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r36, %r37, %r6122;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6115, %r37, %r38, %r6122;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11593, %r38, %r11591, %r6122;
	// inline asm
	mov.u32 	%r42, %r6099;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r38, %r6115;
	bra.uni 	BB4_1244;

BB4_1461:
	setp.eq.s32	%p1008, %r7767, 9;
	@%p1008 bra 	BB4_1462;
	bra.uni 	BB4_1481;

BB4_1462:
	mov.u32 	%r8113, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r8113;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r42, %r35, %r8113;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r41, %r42, %r8113;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8102, %r40, %r41, %r8113;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11579, %r39, %r40, %r8113;
	// inline asm
	mov.u32 	%r11581, 0;
	// inline asm
	shf.r.wrap.b32 %r11580, %r11581, %r39, %r8113;
	// inline asm
	mov.u32 	%r11582, %r11581;
	mov.u32 	%r39, %r8102;
	bra.uni 	BB4_1527;

BB4_169:
	setp.eq.s32	%p146, %r44, 18;
	@%p146 bra 	BB4_204;
	bra.uni 	BB4_170;

BB4_204:
	mov.u32 	%r2711, 16;
	// inline asm
	shf.r.wrap.b32 %r11433, %r41, %r42, %r2711;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r40, %r41, %r2711;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r39, %r40, %r2711;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11430, %r11434, %r39, %r2711;
	// inline asm
	bra.uni 	BB4_199;

BB4_1210:
	setp.eq.s32	%p782, %r44, 25;
	@%p782 bra 	BB4_1211;
	bra.uni 	BB4_1190;

BB4_1211:
	mov.u32 	%r5842, 8;
	// inline asm
	shf.r.wrap.b32 %r42, %r37, %r38, %r5842;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r11589, %r38, %r11587, %r5842;
	// inline asm
	bra.uni 	BB4_1215;

BB4_1493:
	setp.eq.s32	%p985, %r7767, 25;
	@%p985 bra 	BB4_1494;
	bra.uni 	BB4_1481;

BB4_1494:
	mov.u32 	%r7833, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r39, %r40, %r7833;
	// inline asm
	mov.u32 	%r11579, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r11579, %r39, %r7833;
	// inline asm
	bra.uni 	BB4_1498;

BB4_1171:
	setp.eq.s32	%p811, %r44, 5;
	@%p811 bra 	BB4_1172;
	bra.uni 	BB4_1190;

BB4_1172:
	mov.u32 	%r6212, 8;
	// inline asm
	shf.r.wrap.b32 %r6185, %r40, %r41, %r6212;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r41, %r42, %r6212;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r42, %r35, %r6212;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r35, %r36, %r6212;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6201, %r36, %r37, %r6212;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r37, %r38, %r6212;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11592, %r38, %r11591, %r6212;
	// inline asm
	mov.u32 	%r42, %r6185;
	mov.u32 	%r38, %r6201;
	bra.uni 	BB4_1244;

BB4_711:
	setp.eq.s32	%p492, %r34, 11;
	@%p492 bra 	BB4_772;
	bra.uni 	BB4_712;

BB4_772:
	and.b32  	%r4138, %r41, 255;
	shl.b32 	%r4139, %r41, 8;
	and.b32  	%r4140, %r4139, 16711680;
	or.b32  	%r4141, %r4140, %r4138;
	shr.u32 	%r4142, %r41, 8;
	and.b32  	%r4143, %r4142, 65280;
	or.b32  	%r11588, %r4141, %r4143;
	mov.u32 	%r11595, 11;
	bra.uni 	BB4_773;

BB4_1453:
	setp.eq.s32	%p1014, %r7767, 5;
	@%p1014 bra 	BB4_1454;
	bra.uni 	BB4_1481;

BB4_1454:
	mov.u32 	%r8203, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r8203;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r8203;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r42, %r35, %r8203;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8188, %r41, %r42, %r8203;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11579, %r40, %r41, %r8203;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11580, %r39, %r40, %r8203;
	// inline asm
	mov.u32 	%r11582, 0;
	// inline asm
	shf.r.wrap.b32 %r11581, %r11582, %r39, %r8203;
	// inline asm
	mov.u32 	%r39, %r8188;
	bra.uni 	BB4_1527;

BB4_152:
	setp.eq.s32	%p158, %r44, 10;
	@%p158 bra 	BB4_208;
	bra.uni 	BB4_153;

BB4_208:
	mov.u32 	%r2861, 16;
	// inline asm
	shf.r.wrap.b32 %r11433, %r35, %r36, %r2861;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r42, %r35, %r2861;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r41, %r42, %r2861;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r40, %r41, %r2861;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11437, %r39, %r40, %r2861;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11436, %r11434, %r39, %r2861;
	// inline asm
	mov.u32 	%r11435, %r11434;
	bra.uni 	BB4_213;

BB4_1202:
	setp.eq.s32	%p788, %r44, 21;
	@%p788 bra 	BB4_1203;
	bra.uni 	BB4_1190;

BB4_1203:
	mov.u32 	%r5900, 8;
	// inline asm
	shf.r.wrap.b32 %r42, %r36, %r37, %r5900;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r37, %r38, %r5900;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r11588, %r38, %r11587, %r5900;
	// inline asm
	bra.uni 	BB4_1243;

BB4_1484:
	setp.eq.s32	%p991, %r7767, 21;
	@%p991 bra 	BB4_1485;
	bra.uni 	BB4_1481;

BB4_1485:
	mov.u32 	%r7891, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r40, %r41, %r7891;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r39, %r40, %r7891;
	// inline asm
	mov.u32 	%r11579, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r11579, %r39, %r7891;
	// inline asm
	bra.uni 	BB4_1489;

BB4_1186:
	setp.eq.s32	%p800, %r44, 13;
	@%p800 bra 	BB4_1187;
	bra.uni 	BB4_1190;

BB4_1187:
	mov.u32 	%r6040, 8;
	// inline asm
	shf.r.wrap.b32 %r42, %r42, %r35, %r6040;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r35, %r36, %r6040;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r36, %r37, %r6040;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r37, %r38, %r6040;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r38, %r38, %r11591, %r6040;
	// inline asm
	bra.uni 	BB4_1234;

BB4_740:
	setp.eq.s32	%p471, %r34, 26;
	@%p471 bra 	BB4_753;
	bra.uni 	BB4_741;

BB4_753:
	shl.b32 	%r4061, %r37, 8;
	and.b32  	%r4062, %r4061, 65280;
	bfe.u32 	%r4063, %r37, 8, 8;
	or.b32  	%r11592, %r4062, %r4063;
	mov.u32 	%r11595, 26;
	bra.uni 	BB4_754;

BB4_1468:
	setp.eq.s32	%p1003, %r7767, 13;
	@%p1003 bra 	BB4_1469;
	bra.uni 	BB4_1481;

BB4_1469:
	mov.u32 	%r8031, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r42, %r35, %r8031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r41, %r42, %r8031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r40, %r41, %r8031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8024, %r39, %r40, %r8031;
	// inline asm
	mov.u32 	%r11580, 0;
	// inline asm
	shf.r.wrap.b32 %r11579, %r11580, %r39, %r8031;
	// inline asm
	mov.u32 	%r11581, %r11580;
	mov.u32 	%r11582, %r11580;
	mov.u32 	%r39, %r8024;
	bra.uni 	BB4_1527;

BB4_184:
	setp.eq.s32	%p135, %r44, 26;
	@%p135 bra 	BB4_200;
	bra.uni 	BB4_185;

BB4_200:
	mov.u32 	%r2593, 16;
	// inline asm
	shf.r.wrap.b32 %r11433, %r39, %r40, %r2593;
	// inline asm
	mov.u32 	%r11430, 0;
	// inline asm
	shf.r.wrap.b32 %r11432, %r11430, %r39, %r2593;
	// inline asm
	bra.uni 	BB4_187;

BB4_1218:
	setp.eq.s32	%p777, %r44, 29;
	@%p777 bra 	BB4_1219;
	bra.uni 	BB4_1190;

BB4_1219:
	mov.u32 	%r11587, 0;
	mov.u32 	%r5792, 8;
	// inline asm
	shf.r.wrap.b32 %r42, %r38, %r11587, %r5792;
	// inline asm
	bra.uni 	BB4_1242;

BB4_1501:
	setp.eq.s32	%p980, %r7767, 29;
	@%p980 bra 	BB4_1502;
	bra.uni 	BB4_1481;

BB4_1502:
	mov.u32 	%r11579, 0;
	mov.u32 	%r7783, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r11579, %r39, %r7783;
	// inline asm
	bra.uni 	BB4_1523;

BB4_703:
	setp.eq.s32	%p498, %r34, 7;
	@%p498 bra 	BB4_775;
	bra.uni 	BB4_704;

BB4_775:
	and.b32  	%r4159, %r40, 255;
	shl.b32 	%r4160, %r40, 8;
	and.b32  	%r4161, %r4160, 16711680;
	or.b32  	%r4162, %r4161, %r4159;
	shr.u32 	%r4163, %r40, 8;
	and.b32  	%r4164, %r4163, 65280;
	or.b32  	%r11589, %r4162, %r4164;
	mov.u32 	%r11595, 7;
	bra.uni 	BB4_776;

BB4_144:
	setp.eq.s32	%p164, %r44, 6;
	@%p164 bra 	BB4_210;
	bra.uni 	BB4_145;

BB4_210:
	mov.u32 	%r2948, 16;
	// inline asm
	shf.r.wrap.b32 %r11433, %r36, %r37, %r2948;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r35, %r36, %r2948;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r42, %r35, %r2948;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r41, %r42, %r2948;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11437, %r40, %r41, %r2948;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11436, %r39, %r40, %r2948;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11435, %r11434, %r39, %r2948;
	// inline asm
	bra.uni 	BB4_213;

BB4_1198:
	setp.eq.s32	%p791, %r44, 19;
	@%p791 bra 	BB4_1199;
	bra.uni 	BB4_1190;

BB4_1199:
	mov.u32 	%r5926, 24;
	// inline asm
	shf.r.wrap.b32 %r42, %r35, %r36, %r5926;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r36, %r37, %r5926;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r37, %r38, %r5926;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11587, %r38, %r11591, %r5926;
	// inline asm

BB4_1230:
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r38, %r11591;
	bra.uni 	BB4_1244;

BB4_1480:
	setp.eq.s32	%p994, %r7767, 19;
	@%p994 bra 	BB4_1511;
	bra.uni 	BB4_1481;

BB4_1511:
	mov.u32 	%r7917, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r41, %r42, %r7917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r40, %r41, %r7917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r39, %r40, %r7917;
	// inline asm
	mov.u32 	%r11579, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r11579, %r39, %r7917;
	// inline asm

BB4_1512:
	mov.u32 	%r11580, %r11579;
	mov.u32 	%r11581, %r11579;
	mov.u32 	%r11582, %r11579;
	bra.uni 	BB4_1527;

BB4_1182:
	setp.eq.s32	%p803, %r44, 11;
	@%p803 bra 	BB4_1183;
	bra.uni 	BB4_1190;

BB4_1183:
	mov.u32 	%r6070, 24;
	// inline asm
	shf.r.wrap.b32 %r6047, %r41, %r42, %r6070;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r42, %r35, %r6070;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r35, %r36, %r6070;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r36, %r37, %r6070;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6063, %r37, %r38, %r6070;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11593, %r38, %r11591, %r6070;
	// inline asm
	mov.u32 	%r42, %r6047;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r38, %r6063;
	bra.uni 	BB4_1244;

BB4_732:
	setp.eq.s32	%p477, %r34, 22;
	@%p477 bra 	BB4_756;
	bra.uni 	BB4_733;

BB4_756:
	shl.b32 	%r4082, %r36, 8;
	and.b32  	%r4083, %r4082, 65280;
	bfe.u32 	%r4084, %r36, 8, 8;
	or.b32  	%r11593, %r4083, %r4084;
	mov.u32 	%r11595, 22;
	bra.uni 	BB4_757;

BB4_1464:
	setp.eq.s32	%p1006, %r7767, 11;
	@%p1006 bra 	BB4_1465;
	bra.uni 	BB4_1481;

BB4_1465:
	mov.u32 	%r8061, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r8061;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r42, %r35, %r8061;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r41, %r42, %r8061;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8050, %r40, %r41, %r8061;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11579, %r39, %r40, %r8061;
	// inline asm
	mov.u32 	%r11581, 0;
	// inline asm
	shf.r.wrap.b32 %r11580, %r11581, %r39, %r8061;
	// inline asm
	mov.u32 	%r11582, %r11581;
	mov.u32 	%r39, %r8050;
	bra.uni 	BB4_1527;

BB4_176:
	setp.eq.s32	%p141, %r44, 22;
	@%p141 bra 	BB4_202;
	bra.uni 	BB4_177;

BB4_202:
	mov.u32 	%r2648, 16;
	// inline asm
	shf.r.wrap.b32 %r11433, %r40, %r41, %r2648;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r39, %r40, %r2648;
	// inline asm
	mov.u32 	%r11430, 0;
	// inline asm
	shf.r.wrap.b32 %r11431, %r11430, %r39, %r2648;
	// inline asm
	bra.uni 	BB4_188;

BB4_1213:
	setp.eq.s32	%p780, %r44, 27;
	@%p780 bra 	BB4_1214;
	bra.uni 	BB4_1190;

BB4_1214:
	mov.u32 	%r5814, 24;
	// inline asm
	shf.r.wrap.b32 %r42, %r37, %r38, %r5814;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r11589, %r38, %r11587, %r5814;
	// inline asm

BB4_1215:
	mov.u32 	%r11588, %r11587;
	bra.uni 	BB4_1243;

BB4_1496:
	setp.eq.s32	%p983, %r7767, 27;
	@%p983 bra 	BB4_1497;
	bra.uni 	BB4_1481;

BB4_1497:
	mov.u32 	%r7805, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r39, %r40, %r7805;
	// inline asm
	mov.u32 	%r11579, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r11579, %r39, %r7805;
	// inline asm

BB4_1498:
	mov.u32 	%r11580, %r11579;
	mov.u32 	%r11581, %r11579;
	mov.u32 	%r11582, %r11579;
	bra.uni 	BB4_1525;

BB4_1174:
	setp.eq.s32	%p809, %r44, 7;
	@%p809 bra 	BB4_1175;
	bra.uni 	BB4_1190;

BB4_1175:
	mov.u32 	%r6154, 24;
	// inline asm
	shf.r.wrap.b32 %r6127, %r40, %r41, %r6154;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r41, %r42, %r6154;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r42, %r35, %r6154;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r35, %r36, %r6154;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6143, %r36, %r37, %r6154;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r37, %r38, %r6154;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11592, %r38, %r11591, %r6154;
	// inline asm
	mov.u32 	%r42, %r6127;
	mov.u32 	%r38, %r6143;
	bra.uni 	BB4_1244;

BB4_718:
	setp.eq.s32	%p487, %r34, 15;
	@%p487 bra 	BB4_764;
	bra.uni 	BB4_719;

BB4_764:
	and.b32  	%r4117, %r42, 255;
	shl.b32 	%r4118, %r42, 8;
	and.b32  	%r4119, %r4118, 16711680;
	or.b32  	%r4120, %r4119, %r4117;
	shr.u32 	%r4121, %r42, 8;
	and.b32  	%r4122, %r4121, 65280;
	or.b32  	%r11587, %r4120, %r4122;
	mov.u32 	%r11595, 15;
	bra.uni 	BB4_765;

BB4_1456:
	setp.eq.s32	%p1012, %r7767, 7;
	@%p1012 bra 	BB4_1457;
	bra.uni 	BB4_1481;

BB4_1457:
	mov.u32 	%r8145, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r8145;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r8145;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r42, %r35, %r8145;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8130, %r41, %r42, %r8145;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11579, %r40, %r41, %r8145;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11580, %r39, %r40, %r8145;
	// inline asm
	mov.u32 	%r11582, 0;
	// inline asm
	shf.r.wrap.b32 %r11581, %r11582, %r39, %r8145;
	// inline asm
	mov.u32 	%r39, %r8130;
	bra.uni 	BB4_1527;

BB4_159:
	setp.eq.s32	%p153, %r44, 14;
	@%p153 bra 	BB4_206;
	bra.uni 	BB4_160;

BB4_206:
	mov.u32 	%r2782, 16;
	// inline asm
	shf.r.wrap.b32 %r11433, %r42, %r35, %r2782;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r41, %r42, %r2782;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r40, %r41, %r2782;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r39, %r40, %r2782;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11437, %r11434, %r39, %r2782;
	// inline asm
	bra.uni 	BB4_162;

BB4_1205:
	setp.eq.s32	%p786, %r44, 23;
	@%p786 bra 	BB4_1206;
	bra.uni 	BB4_1190;

BB4_1206:
	mov.u32 	%r5866, 24;
	// inline asm
	shf.r.wrap.b32 %r42, %r36, %r37, %r5866;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r37, %r38, %r5866;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r11588, %r38, %r11587, %r5866;
	// inline asm
	bra.uni 	BB4_1243;

BB4_1487:
	setp.eq.s32	%p989, %r7767, 23;
	@%p989 bra 	BB4_1488;
	bra.uni 	BB4_1481;

BB4_1488:
	mov.u32 	%r7857, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r40, %r41, %r7857;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r39, %r40, %r7857;
	// inline asm
	mov.u32 	%r11579, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r11579, %r39, %r7857;
	// inline asm

BB4_1489:
	mov.u32 	%r11580, %r11579;
	mov.u32 	%r11581, %r11579;
	mov.u32 	%r11582, %r11579;
	bra.uni 	BB4_1526;

BB4_1189:
	setp.eq.s32	%p798, %r44, 15;
	@%p798 bra 	BB4_1231;
	bra.uni 	BB4_1190;

BB4_1231:
	mov.u32 	%r5994, 24;
	// inline asm
	shf.r.wrap.b32 %r42, %r42, %r35, %r5994;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r35, %r36, %r5994;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r36, %r37, %r5994;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r37, %r38, %r5994;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r38, %r38, %r11591, %r5994;
	// inline asm

BB4_1234:
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11593, %r11591;
	bra.uni 	BB4_1244;

BB4_747:
	setp.eq.s32	%p466, %r34, 30;
	@%p466 bra 	BB4_750;
	bra.uni 	BB4_748;

BB4_750:
	shl.b32 	%r4040, %r38, 8;
	and.b32  	%r4041, %r4040, 65280;
	bfe.u32 	%r4042, %r38, 8, 8;
	or.b32  	%r11591, %r4041, %r4042;
	mov.u32 	%r11595, 30;
	bra.uni 	BB4_751;

BB4_1471:
	setp.eq.s32	%p1001, %r7767, 15;
	@%p1001 bra 	BB4_1472;
	bra.uni 	BB4_1481;

BB4_1472:
	mov.u32 	%r7985, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r42, %r35, %r7985;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r41, %r42, %r7985;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r40, %r41, %r7985;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r7978, %r39, %r40, %r7985;
	// inline asm
	mov.u32 	%r11580, 0;
	// inline asm
	shf.r.wrap.b32 %r11579, %r11580, %r39, %r7985;
	// inline asm
	mov.u32 	%r11581, %r11580;
	mov.u32 	%r11582, %r11580;
	mov.u32 	%r39, %r7978;
	bra.uni 	BB4_1527;

BB4_193:
	setp.eq.s32	%p130, %r44, 30;
	@%p130 bra 	BB4_197;
	bra.uni 	BB4_194;

BB4_197:
	mov.u32 	%r11430, 0;
	mov.u32 	%r2546, 16;
	// inline asm
	shf.r.wrap.b32 %r11433, %r11430, %r39, %r2546;
	// inline asm
	bra.uni 	BB4_196;

BB4_286:
	setp.eq.s32	%p218, %r44, 18;
	@%p218 bra 	BB4_320;
	bra.uni 	BB4_287;

BB4_320:
	mov.u32 	%r3309, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r41, %r42, %r3309;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r40, %r41, %r3309;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r39, %r40, %r3309;
	// inline asm
	mov.u32 	%r11454, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r11454, %r39, %r3309;
	// inline asm
	bra.uni 	BB4_319;

BB4_270:
	setp.eq.s32	%p230, %r44, 10;
	@%p230 bra 	BB4_324;
	bra.uni 	BB4_271;

BB4_324:
	mov.u32 	%r3459, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r3459;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r42, %r35, %r3459;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r41, %r42, %r3459;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3448, %r40, %r41, %r3459;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11454, %r39, %r40, %r3459;
	// inline asm
	mov.u32 	%r11456, 0;
	// inline asm
	shf.r.wrap.b32 %r11455, %r11456, %r39, %r3459;
	// inline asm
	mov.u32 	%r11457, %r11456;
	mov.u32 	%r39, %r3448;
	bra.uni 	BB4_335;

BB4_302:
	setp.eq.s32	%p207, %r44, 26;
	@%p207 bra 	BB4_314;
	bra.uni 	BB4_303;

BB4_314:
	mov.u32 	%r3191, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r39, %r40, %r3191;
	// inline asm
	mov.u32 	%r11454, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r11454, %r39, %r3191;
	// inline asm
	bra.uni 	BB4_305;

BB4_1221:
	setp.ne.s32	%p775, %r44, 30;
	@%p775 bra 	BB4_1190;

	mov.u32 	%r11587, 0;
	mov.u32 	%r5781, 16;
	// inline asm
	shf.r.wrap.b32 %r42, %r38, %r11587, %r5781;
	// inline asm

BB4_1242:
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;

BB4_1243:
	mov.u32 	%r11591, %r11587;
	mov.u32 	%r11592, %r11587;
	mov.u32 	%r11593, %r11587;
	mov.u32 	%r38, %r11587;
	bra.uni 	BB4_1244;

BB4_1190:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r42, %r39;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11592, %r37;
	mov.u32 	%r11593, %r36;
	mov.u32 	%r38, %r35;

BB4_1244:
	and.b32  	%r6323, %r45, 3;
	shl.b32 	%r6324, %r6323, 3;
	mov.u32 	%r6325, 1;
	shl.b32 	%r6326, %r6325, %r6324;
	add.s32 	%r1213, %r6326, -1;
	shr.u32 	%r6322, %r46, 2;
	setp.gt.s32	%p815, %r6322, 3;
	@%p815 bra 	BB4_1252;

	setp.gt.s32	%p821, %r6322, 1;
	@%p821 bra 	BB4_1249;

	setp.eq.s32	%p824, %r6322, 0;
	@%p824 bra 	BB4_1266;
	bra.uni 	BB4_1247;

BB4_1266:
	and.b32  	%r11590, %r42, %r1213;
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	bra.uni 	BB4_1265;

BB4_1252:
	setp.gt.s32	%p816, %r6322, 5;
	@%p816 bra 	BB4_1256;

	setp.eq.s32	%p819, %r6322, 4;
	@%p819 bra 	BB4_1262;
	bra.uni 	BB4_1254;

BB4_1262:
	and.b32  	%r11594, %r38, %r1213;
	mov.u32 	%r11591, 0;
	mov.u32 	%r11590, %r42;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11595, %r46;
	bra.uni 	BB4_1552;

BB4_1249:
	setp.eq.s32	%p822, %r6322, 2;
	@%p822 bra 	BB4_1263;
	bra.uni 	BB4_1250;

BB4_1263:
	and.b32  	%r11588, %r11588, %r1213;
	mov.u32 	%r11587, 0;
	bra.uni 	BB4_1264;

BB4_1256:
	setp.eq.s32	%p817, %r6322, 6;
	@%p817 bra 	BB4_1261;
	bra.uni 	BB4_1257;

BB4_1261:
	and.b32  	%r11592, %r11592, %r1213;
	mov.u32 	%r11591, 0;
	bra.uni 	BB4_1259;

BB4_1247:
	setp.eq.s32	%p825, %r6322, 1;
	@%p825 bra 	BB4_1248;
	bra.uni 	BB4_1259;

BB4_1248:
	and.b32  	%r11589, %r11589, %r1213;
	mov.u32 	%r11587, 0;
	mov.u32 	%r11588, %r11587;

BB4_1264:
	mov.u32 	%r11590, %r42;

BB4_1265:
	mov.u32 	%r11591, %r11587;
	mov.u32 	%r11592, %r11587;
	mov.u32 	%r11593, %r11587;
	mov.u32 	%r11594, %r11587;
	mov.u32 	%r11595, %r46;
	bra.uni 	BB4_1552;

BB4_1254:
	setp.eq.s32	%p820, %r6322, 5;
	@%p820 bra 	BB4_1255;
	bra.uni 	BB4_1259;

BB4_1255:
	and.b32  	%r11593, %r11593, %r1213;
	mov.u32 	%r11591, 0;
	mov.u32 	%r11590, %r42;
	mov.u32 	%r11592, %r11591;
	bra.uni 	BB4_1260;

BB4_1250:
	setp.eq.s32	%p823, %r6322, 3;
	@%p823 bra 	BB4_1251;
	bra.uni 	BB4_1259;

BB4_1251:
	and.b32  	%r11587, %r11587, %r1213;
	mov.u32 	%r11591, 0;
	mov.u32 	%r11590, %r42;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11595, %r46;
	bra.uni 	BB4_1552;

BB4_1257:
	setp.ne.s32	%p818, %r6322, 7;
	@%p818 bra 	BB4_1259;

	and.b32  	%r11591, %r11591, %r1213;

BB4_1259:
	mov.u32 	%r11590, %r42;

BB4_1260:
	mov.u32 	%r11594, %r38;
	mov.u32 	%r11595, %r46;
	bra.uni 	BB4_1552;

BB4_1504:
	setp.ne.s32	%p978, %r7767, 30;
	@%p978 bra 	BB4_1481;

	mov.u32 	%r11579, 0;
	mov.u32 	%r7772, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r11579, %r39, %r7772;
	// inline asm

BB4_1523:
	mov.u32 	%r11580, %r11579;
	mov.u32 	%r11581, %r11579;
	mov.u32 	%r11582, %r11579;

BB4_1524:
	mov.u32 	%r37, %r11579;

BB4_1525:
	mov.u32 	%r36, %r11579;

BB4_1526:
	mov.u32 	%r39, %r11579;
	bra.uni 	BB4_1527;

BB4_1481:
	mov.u32 	%r11579, %r42;
	mov.u32 	%r11580, %r41;
	mov.u32 	%r11581, %r40;
	mov.u32 	%r11582, %r39;
	mov.u32 	%r39, %r35;

BB4_1527:
	// inline asm
	prmt.b32 %r11590, %r38, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11589, %r37, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11588, %r36, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11587, %r39, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11594, %r11579, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11593, %r11580, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11592, %r11581, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11591, %r11582, 0, 0x0123;
	// inline asm
	bra.uni 	BB4_1551;

BB4_262:
	setp.eq.s32	%p236, %r44, 6;
	@%p236 bra 	BB4_326;
	bra.uni 	BB4_263;

BB4_326:
	mov.u32 	%r3546, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r3546;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r3546;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r42, %r35, %r3546;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3531, %r41, %r42, %r3546;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11454, %r40, %r41, %r3546;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11455, %r39, %r40, %r3546;
	// inline asm
	mov.u32 	%r11457, 0;
	// inline asm
	shf.r.wrap.b32 %r11456, %r11457, %r39, %r3546;
	// inline asm
	mov.u32 	%r39, %r3531;
	bra.uni 	BB4_335;

BB4_293:
	setp.eq.s32	%p213, %r44, 22;
	@%p213 bra 	BB4_316;
	bra.uni 	BB4_294;

BB4_316:
	mov.u32 	%r3246, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r40, %r41, %r3246;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r39, %r40, %r3246;
	// inline asm
	mov.u32 	%r11454, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r11454, %r39, %r3246;
	// inline asm
	bra.uni 	BB4_296;

BB4_277:
	setp.eq.s32	%p225, %r44, 14;
	@%p225 bra 	BB4_322;
	bra.uni 	BB4_278;

BB4_322:
	mov.u32 	%r3380, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r42, %r35, %r3380;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r41, %r42, %r3380;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r40, %r41, %r3380;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3373, %r39, %r40, %r3380;
	// inline asm
	mov.u32 	%r11455, 0;
	// inline asm
	shf.r.wrap.b32 %r11454, %r11455, %r39, %r3380;
	// inline asm
	mov.u32 	%r11456, %r11455;
	mov.u32 	%r11457, %r11455;
	mov.u32 	%r39, %r3373;
	bra.uni 	BB4_335;

BB4_310:
	setp.eq.s32	%p202, %r44, 31;
	@%p202 bra 	BB4_330;
	bra.uni 	BB4_311;

BB4_330:
	mov.u32 	%r11454, 0;
	mov.u32 	%r3677, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r11454, %r39, %r3677;
	// inline asm
	bra.uni 	BB4_331;

BB4_865:
	mov.u32 	%r4797, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r4797;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r4797;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r4797;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r42, %r35, %r4797;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r41, %r42, %r4797;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r40, %r41, %r4797;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r39, %r40, %r4797;
	// inline asm
	mov.u32 	%r4795, 0;
	// inline asm
	shf.r.wrap.b32 %r11590, %r4795, %r39, %r4797;
	// inline asm
	bra.uni 	BB4_871;

BB4_791:
	setp.eq.s32	%p577, %r44, 3;
	@%p577 bra 	BB4_792;
	bra.uni 	BB4_824;

BB4_792:
	mov.u32 	%r4733, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r4733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r4733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r4733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r42, %r35, %r4733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r41, %r42, %r4733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r40, %r41, %r4733;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r39, %r40, %r4733;
	// inline asm
	mov.u32 	%r4731, 0;
	// inline asm
	shf.r.wrap.b32 %r11590, %r4731, %r39, %r4733;
	// inline asm
	bra.uni 	BB4_871;

BB4_1055:
	setp.eq.s32	%p755, %r46, 1;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p755 bra 	BB4_1056;
	bra.uni 	BB4_1136;

BB4_1056:
	mov.u32 	%r5755, 8;
	// inline asm
	shf.r.wrap.b32 %r11509, %r39, %r40, %r5755;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r40, %r41, %r5755;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r41, %r42, %r5755;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r42, %r35, %r5755;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r35, %r36, %r5755;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r36, %r37, %r5755;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r37, %r38, %r5755;
	// inline asm
	mov.u32 	%r5754, 0;
	// inline asm
	shf.r.wrap.b32 %r11591, %r38, %r5754, %r5755;
	// inline asm
	bra.uni 	BB4_1136;

BB4_778:
	shl.b32 	%r4187, %r39, 8;
	and.b32  	%r4188, %r4187, 65280;
	bfe.u32 	%r4189, %r39, 8, 8;
	or.b32  	%r11590, %r4188, %r4189;
	mov.u32 	%r11595, 2;
	bra.uni 	BB4_779;

BB4_697:
	setp.eq.s32	%p504, %r34, 4;
	@%p504 bra 	BB4_698;
	bra.uni 	BB4_10;

BB4_698:
	and.b32  	%r4173, %r39, 65535;
	shl.b32 	%r4174, %r39, 8;
	and.b32  	%r4175, %r4174, -16777216;
	or.b32  	%r4176, %r4175, %r4173;
	shr.u32 	%r4177, %r39, 8;
	and.b32  	%r4178, %r4177, 16711680;
	or.b32  	%r11590, %r4176, %r4178;
	mov.u32 	%r11595, 4;

BB4_779:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	bra.uni 	BB4_768;

BB4_451:
	setp.eq.s32	%p366, %r44, 1;
	mov.u32 	%r11462, %r11471;
	@%p366 bra 	BB4_452;
	bra.uni 	BB4_525;

BB4_452:
	bfe.u32 	%r11462, %r39, 8, 8;
	bra.uni 	BB4_525;

BB4_1315:
	setp.eq.s32	%p931, %r6642, 2;
	@%p931 bra 	BB4_1391;
	bra.uni 	BB4_1316;

BB4_1391:
	mov.u32 	%r7155, 16;
	// inline asm
	shf.r.wrap.b32 %r11540, %r37, %r38, %r7155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r36, %r37, %r7155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r35, %r36, %r7155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r42, %r35, %r7155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11544, %r41, %r42, %r7155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11543, %r40, %r41, %r7155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11542, %r39, %r40, %r7155;
	// inline asm
	mov.u32 	%r7153, 0;
	// inline asm
	shf.r.wrap.b32 %r11541, %r7153, %r39, %r7155;
	// inline asm
	bra.uni 	BB4_1392;

BB4_1087:
	setp.eq.s32	%p732, %r46, 17;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p732 bra 	BB4_1088;
	bra.uni 	BB4_1136;

BB4_1088:
	mov.u32 	%r5411, 8;
	// inline asm
	shf.r.wrap.b32 %r11509, %r35, %r36, %r5411;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r36, %r37, %r5411;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r37, %r38, %r5411;
	// inline asm
	mov.u32 	%r11594, 0;
	// inline asm
	shf.r.wrap.b32 %r11587, %r38, %r11594, %r5411;
	// inline asm
	bra.uni 	BB4_1092;

BB4_482:
	setp.eq.s32	%p343, %r44, 17;
	mov.u32 	%r11462, %r11471;
	@%p343 bra 	BB4_483;
	bra.uni 	BB4_525;

BB4_483:
	bfe.u32 	%r11462, %r35, 8, 8;
	bra.uni 	BB4_525;

BB4_820:
	setp.eq.s32	%p556, %r44, 17;
	@%p556 bra 	BB4_821;
	bra.uni 	BB4_824;

BB4_821:
	mov.u32 	%r4453, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r41, %r42, %r4453;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r40, %r41, %r4453;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r39, %r40, %r4453;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11587, %r39, %r4453;
	// inline asm
	bra.uni 	BB4_855;

BB4_763:
	or.b32  	%r4107, %r35, %r42;
	and.b32  	%r4108, %r42, 16777215;
	prmt.b32 	%r11587, %r35, %r4108, 1620;
	shr.u32 	%r11594, %r4107, 24;
	mov.u32 	%r11595, 17;
	bra.uni 	BB4_761;

BB4_725:
	setp.eq.s32	%p483, %r34, 19;
	@%p483 bra 	BB4_726;
	bra.uni 	BB4_10;

BB4_726:
	and.b32  	%r4096, %r35, 255;
	shl.b32 	%r4097, %r35, 8;
	and.b32  	%r4098, %r4097, 16711680;
	or.b32  	%r4099, %r4098, %r4096;
	shr.u32 	%r4100, %r35, 8;
	and.b32  	%r4101, %r4100, 65280;
	or.b32  	%r11594, %r4099, %r4101;
	mov.u32 	%r11595, 19;

BB4_760:
	mov.u32 	%r11587, %r42;

BB4_761:
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_762;

BB4_1070:
	setp.eq.s32	%p744, %r46, 9;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p744 bra 	BB4_1071;
	bra.uni 	BB4_1136;

BB4_1071:
	mov.u32 	%r5567, 8;
	// inline asm
	shf.r.wrap.b32 %r11509, %r41, %r42, %r5567;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r42, %r35, %r5567;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r35, %r36, %r5567;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r36, %r37, %r5567;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r37, %r38, %r5567;
	// inline asm
	mov.u32 	%r11592, 0;
	// inline asm
	shf.r.wrap.b32 %r11593, %r38, %r11592, %r5567;
	// inline asm
	mov.u32 	%r11591, %r11592;
	bra.uni 	BB4_1136;

BB4_466:
	setp.eq.s32	%p355, %r44, 9;
	mov.u32 	%r11462, %r11471;
	@%p355 bra 	BB4_467;
	bra.uni 	BB4_525;

BB4_467:
	bfe.u32 	%r11462, %r41, 8, 8;
	bra.uni 	BB4_525;

BB4_1347:
	setp.eq.s32	%p908, %r6642, 18;
	@%p908 bra 	BB4_1383;
	bra.uni 	BB4_1348;

BB4_1383:
	mov.u32 	%r6823, 16;
	// inline asm
	shf.r.wrap.b32 %r11540, %r41, %r42, %r6823;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r40, %r41, %r6823;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r39, %r40, %r6823;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11537, %r11541, %r39, %r6823;
	// inline asm
	bra.uni 	BB4_1350;

BB4_803:
	setp.eq.s32	%p568, %r44, 9;
	@%p568 bra 	BB4_804;
	bra.uni 	BB4_824;

BB4_804:
	mov.u32 	%r4609, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r4609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r42, %r35, %r4609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r41, %r42, %r4609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r40, %r41, %r4609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r39, %r40, %r4609;
	// inline asm
	mov.u32 	%r11589, 0;
	// inline asm
	shf.r.wrap.b32 %r11588, %r11589, %r39, %r4609;
	// inline asm
	mov.u32 	%r11590, %r11589;
	bra.uni 	BB4_871;

BB4_1104:
	setp.eq.s32	%p721, %r46, 25;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p721 bra 	BB4_1105;
	bra.uni 	BB4_1136;

BB4_1105:
	mov.u32 	%r5287, 8;
	// inline asm
	shf.r.wrap.b32 %r11509, %r37, %r38, %r5287;
	// inline asm
	mov.u32 	%r11594, 0;
	// inline asm
	shf.r.wrap.b32 %r11589, %r38, %r11594, %r5287;
	// inline asm
	bra.uni 	BB4_1109;

BB4_497:
	setp.eq.s32	%p332, %r44, 25;
	mov.u32 	%r11462, %r11471;
	@%p332 bra 	BB4_498;
	bra.uni 	BB4_525;

BB4_498:
	bfe.u32 	%r11462, %r37, 8, 8;
	bra.uni 	BB4_525;

BB4_836:
	setp.eq.s32	%p545, %r44, 25;
	@%p545 bra 	BB4_837;
	bra.uni 	BB4_824;

BB4_837:
	mov.u32 	%r4329, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r39, %r40, %r4329;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r11587, %r39, %r4329;
	// inline asm
	bra.uni 	BB4_841;

BB4_1062:
	setp.eq.s32	%p750, %r46, 5;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p750 bra 	BB4_1063;
	bra.uni 	BB4_1136;

BB4_1063:
	mov.u32 	%r5657, 8;
	// inline asm
	shf.r.wrap.b32 %r11509, %r40, %r41, %r5657;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r41, %r42, %r5657;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r42, %r35, %r5657;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r35, %r36, %r5657;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r36, %r37, %r5657;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r37, %r38, %r5657;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11592, %r38, %r11591, %r5657;
	// inline asm
	bra.uni 	BB4_1136;

BB4_458:
	setp.eq.s32	%p361, %r44, 5;
	mov.u32 	%r11462, %r11471;
	@%p361 bra 	BB4_459;
	bra.uni 	BB4_525;

BB4_459:
	bfe.u32 	%r11462, %r40, 8, 8;
	bra.uni 	BB4_525;

BB4_1330:
	setp.eq.s32	%p920, %r6642, 10;
	@%p920 bra 	BB4_1387;
	bra.uni 	BB4_1331;

BB4_1387:
	mov.u32 	%r6973, 16;
	// inline asm
	shf.r.wrap.b32 %r11540, %r35, %r36, %r6973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r42, %r35, %r6973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r41, %r42, %r6973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r40, %r41, %r6973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11544, %r39, %r40, %r6973;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11543, %r11541, %r39, %r6973;
	// inline asm
	mov.u32 	%r11542, %r11541;
	bra.uni 	BB4_1392;

BB4_795:
	setp.eq.s32	%p574, %r44, 5;
	@%p574 bra 	BB4_796;
	bra.uni 	BB4_824;

BB4_796:
	mov.u32 	%r4699, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r4699;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r4699;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r42, %r35, %r4699;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r41, %r42, %r4699;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r40, %r41, %r4699;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r39, %r40, %r4699;
	// inline asm
	mov.u32 	%r11590, 0;
	// inline asm
	shf.r.wrap.b32 %r11589, %r11590, %r39, %r4699;
	// inline asm
	bra.uni 	BB4_871;

BB4_1095:
	setp.eq.s32	%p727, %r46, 21;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p727 bra 	BB4_1096;
	bra.uni 	BB4_1136;

BB4_1096:
	mov.u32 	%r5345, 8;
	// inline asm
	shf.r.wrap.b32 %r11509, %r36, %r37, %r5345;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r37, %r38, %r5345;
	// inline asm
	mov.u32 	%r11594, 0;
	// inline asm
	shf.r.wrap.b32 %r11588, %r38, %r11594, %r5345;
	// inline asm
	bra.uni 	BB4_1100;

BB4_489:
	setp.eq.s32	%p338, %r44, 21;
	mov.u32 	%r11462, %r11471;
	@%p338 bra 	BB4_490;
	bra.uni 	BB4_525;

BB4_490:
	bfe.u32 	%r11462, %r36, 8, 8;
	bra.uni 	BB4_525;

BB4_827:
	setp.eq.s32	%p551, %r44, 21;
	@%p551 bra 	BB4_828;
	bra.uni 	BB4_824;

BB4_828:
	mov.u32 	%r4387, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r40, %r41, %r4387;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r39, %r40, %r4387;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r11587, %r39, %r4387;
	// inline asm
	bra.uni 	BB4_832;

BB4_1077:
	setp.eq.s32	%p739, %r46, 13;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p739 bra 	BB4_1078;
	bra.uni 	BB4_1136;

BB4_1078:
	mov.u32 	%r5485, 8;
	// inline asm
	shf.r.wrap.b32 %r11509, %r42, %r35, %r5485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r35, %r36, %r5485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r36, %r37, %r5485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r37, %r38, %r5485;
	// inline asm
	mov.u32 	%r11593, 0;
	// inline asm
	shf.r.wrap.b32 %r11594, %r38, %r11593, %r5485;
	// inline asm
	bra.uni 	BB4_1082;

BB4_473:
	setp.eq.s32	%p350, %r44, 13;
	mov.u32 	%r11462, %r11471;
	@%p350 bra 	BB4_474;
	bra.uni 	BB4_525;

BB4_474:
	bfe.u32 	%r11462, %r42, 8, 8;
	bra.uni 	BB4_525;

BB4_1363:
	setp.eq.s32	%p897, %r6642, 26;
	@%p897 bra 	BB4_1379;
	bra.uni 	BB4_1364;

BB4_1379:
	mov.u32 	%r6705, 16;
	// inline asm
	shf.r.wrap.b32 %r11540, %r39, %r40, %r6705;
	// inline asm
	mov.u32 	%r11537, 0;
	// inline asm
	shf.r.wrap.b32 %r11539, %r11537, %r39, %r6705;
	// inline asm
	bra.uni 	BB4_1366;

BB4_810:
	setp.eq.s32	%p563, %r44, 13;
	@%p563 bra 	BB4_811;
	bra.uni 	BB4_824;

BB4_811:
	mov.u32 	%r4527, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r42, %r35, %r4527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r41, %r42, %r4527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r40, %r41, %r4527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r39, %r40, %r4527;
	// inline asm
	mov.u32 	%r11588, 0;
	// inline asm
	shf.r.wrap.b32 %r11587, %r11588, %r39, %r4527;
	// inline asm
	bra.uni 	BB4_815;

BB4_1113:
	setp.eq.s32	%p716, %r46, 29;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p716 bra 	BB4_1114;
	bra.uni 	BB4_1136;

BB4_1114:
	mov.u32 	%r11594, 0;
	mov.u32 	%r5237, 8;
	// inline asm
	shf.r.wrap.b32 %r11509, %r38, %r11594, %r5237;
	// inline asm
	bra.uni 	BB4_1118;

BB4_504:
	setp.eq.s32	%p327, %r44, 29;
	mov.u32 	%r11462, %r11471;
	@%p327 bra 	BB4_505;
	bra.uni 	BB4_525;

BB4_505:
	bfe.u32 	%r11462, %r38, 8, 8;
	bra.uni 	BB4_525;

BB4_844:
	setp.eq.s32	%p540, %r44, 29;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	@%p540 bra 	BB4_845;
	bra.uni 	BB4_871;

BB4_845:
	mov.u32 	%r11587, 0;
	mov.u32 	%r4279, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r11587, %r39, %r4279;
	// inline asm
	bra.uni 	BB4_867;

BB4_329:
	mov.u32 	%r3673, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r3673;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r3673;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r3673;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3654, %r42, %r35, %r3673;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11454, %r41, %r42, %r3673;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11455, %r40, %r41, %r3673;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11456, %r39, %r40, %r3673;
	// inline asm
	mov.u32 	%r3671, 0;
	// inline asm
	shf.r.wrap.b32 %r11457, %r3671, %r39, %r3673;
	// inline asm
	mov.u32 	%r39, %r3654;
	bra.uni 	BB4_335;

BB4_256:
	setp.eq.s32	%p242, %r44, 3;
	@%p242 bra 	BB4_257;
	bra.uni 	BB4_288;

BB4_257:
	mov.u32 	%r3609, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r37, %r38, %r3609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r36, %r37, %r3609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r35, %r36, %r3609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3590, %r42, %r35, %r3609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11454, %r41, %r42, %r3609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11455, %r40, %r41, %r3609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11456, %r39, %r40, %r3609;
	// inline asm
	mov.u32 	%r3607, 0;
	// inline asm
	shf.r.wrap.b32 %r11457, %r3607, %r39, %r3609;
	// inline asm
	mov.u32 	%r39, %r3590;
	bra.uni 	BB4_335;

BB4_1058:
	setp.eq.s32	%p753, %r46, 3;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p753 bra 	BB4_1059;
	bra.uni 	BB4_1136;

BB4_1059:
	mov.u32 	%r5691, 24;
	// inline asm
	shf.r.wrap.b32 %r11509, %r39, %r40, %r5691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r40, %r41, %r5691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r41, %r42, %r5691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r42, %r35, %r5691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r35, %r36, %r5691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r36, %r37, %r5691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11592, %r37, %r38, %r5691;
	// inline asm
	mov.u32 	%r5690, 0;
	// inline asm
	shf.r.wrap.b32 %r11591, %r38, %r5690, %r5691;
	// inline asm
	bra.uni 	BB4_1136;

BB4_454:
	setp.eq.s32	%p364, %r44, 3;
	mov.u32 	%r11462, %r11471;
	@%p364 bra 	BB4_455;
	bra.uni 	BB4_525;

BB4_455:
	shr.u32 	%r11462, %r39, 24;
	bra.uni 	BB4_525;

BB4_1322:
	setp.eq.s32	%p926, %r6642, 6;
	@%p926 bra 	BB4_1389;
	bra.uni 	BB4_1323;

BB4_1389:
	mov.u32 	%r7060, 16;
	// inline asm
	shf.r.wrap.b32 %r11540, %r36, %r37, %r7060;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r35, %r36, %r7060;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r42, %r35, %r7060;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r41, %r42, %r7060;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11544, %r40, %r41, %r7060;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11543, %r39, %r40, %r7060;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11542, %r11541, %r39, %r7060;
	// inline asm
	bra.uni 	BB4_1392;

BB4_1090:
	setp.eq.s32	%p730, %r46, 19;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p730 bra 	BB4_1091;
	bra.uni 	BB4_1136;

BB4_1091:
	mov.u32 	%r5371, 24;
	// inline asm
	shf.r.wrap.b32 %r11509, %r35, %r36, %r5371;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r36, %r37, %r5371;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r37, %r38, %r5371;
	// inline asm
	mov.u32 	%r11594, 0;
	// inline asm
	shf.r.wrap.b32 %r11587, %r38, %r11594, %r5371;
	// inline asm

BB4_1092:
	mov.u32 	%r11593, %r11594;
	mov.u32 	%r11592, %r11594;
	mov.u32 	%r11591, %r11594;
	bra.uni 	BB4_1136;

BB4_485:
	setp.eq.s32	%p341, %r44, 19;
	mov.u32 	%r11462, %r11471;
	@%p341 bra 	BB4_486;
	bra.uni 	BB4_525;

BB4_486:
	shr.u32 	%r11462, %r35, 24;
	bra.uni 	BB4_525;

BB4_823:
	setp.eq.s32	%p554, %r44, 19;
	@%p554 bra 	BB4_854;
	bra.uni 	BB4_824;

BB4_854:
	mov.u32 	%r4413, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r41, %r42, %r4413;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r40, %r41, %r4413;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r39, %r40, %r4413;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r11587, %r39, %r4413;
	// inline asm

BB4_855:
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	mov.u32 	%r11590, %r11587;
	bra.uni 	BB4_871;

BB4_1073:
	setp.eq.s32	%p742, %r46, 11;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p742 bra 	BB4_1074;
	bra.uni 	BB4_1136;

BB4_1074:
	mov.u32 	%r5515, 24;
	// inline asm
	shf.r.wrap.b32 %r11509, %r41, %r42, %r5515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r42, %r35, %r5515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r35, %r36, %r5515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r36, %r37, %r5515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r37, %r38, %r5515;
	// inline asm
	mov.u32 	%r11592, 0;
	// inline asm
	shf.r.wrap.b32 %r11593, %r38, %r11592, %r5515;
	// inline asm
	mov.u32 	%r11591, %r11592;
	bra.uni 	BB4_1136;

BB4_469:
	setp.eq.s32	%p353, %r44, 11;
	mov.u32 	%r11462, %r11471;
	@%p353 bra 	BB4_470;
	bra.uni 	BB4_525;

BB4_470:
	shr.u32 	%r11462, %r41, 24;
	bra.uni 	BB4_525;

BB4_1355:
	setp.eq.s32	%p903, %r6642, 22;
	@%p903 bra 	BB4_1381;
	bra.uni 	BB4_1356;

BB4_1381:
	mov.u32 	%r6760, 16;
	// inline asm
	shf.r.wrap.b32 %r11540, %r40, %r41, %r6760;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r39, %r40, %r6760;
	// inline asm
	mov.u32 	%r11537, 0;
	// inline asm
	shf.r.wrap.b32 %r11538, %r11537, %r39, %r6760;
	// inline asm
	bra.uni 	BB4_1367;

BB4_806:
	setp.eq.s32	%p566, %r44, 11;
	@%p566 bra 	BB4_807;
	bra.uni 	BB4_824;

BB4_807:
	mov.u32 	%r4557, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r4557;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r42, %r35, %r4557;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r41, %r42, %r4557;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r40, %r41, %r4557;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r39, %r40, %r4557;
	// inline asm
	mov.u32 	%r11589, 0;
	// inline asm
	shf.r.wrap.b32 %r11588, %r11589, %r39, %r4557;
	// inline asm
	mov.u32 	%r11590, %r11589;
	bra.uni 	BB4_871;

BB4_1107:
	setp.eq.s32	%p719, %r46, 27;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p719 bra 	BB4_1108;
	bra.uni 	BB4_1136;

BB4_1108:
	mov.u32 	%r5259, 24;
	// inline asm
	shf.r.wrap.b32 %r11509, %r37, %r38, %r5259;
	// inline asm
	mov.u32 	%r11594, 0;
	// inline asm
	shf.r.wrap.b32 %r11589, %r38, %r11594, %r5259;
	// inline asm

BB4_1109:
	mov.u32 	%r11593, %r11594;
	mov.u32 	%r11592, %r11594;
	mov.u32 	%r11591, %r11594;
	bra.uni 	BB4_1110;

BB4_500:
	setp.eq.s32	%p330, %r44, 27;
	mov.u32 	%r11462, %r11471;
	@%p330 bra 	BB4_501;
	bra.uni 	BB4_525;

BB4_501:
	shr.u32 	%r11462, %r37, 24;
	bra.uni 	BB4_525;

BB4_839:
	setp.eq.s32	%p543, %r44, 27;
	@%p543 bra 	BB4_840;
	bra.uni 	BB4_824;

BB4_840:
	mov.u32 	%r4301, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r39, %r40, %r4301;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r11587, %r39, %r4301;
	// inline asm

BB4_841:
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	mov.u32 	%r11590, %r11587;
	bra.uni 	BB4_869;

BB4_1065:
	setp.eq.s32	%p748, %r46, 7;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p748 bra 	BB4_1066;
	bra.uni 	BB4_1136;

BB4_1066:
	mov.u32 	%r5599, 24;
	// inline asm
	shf.r.wrap.b32 %r11509, %r40, %r41, %r5599;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r41, %r42, %r5599;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r42, %r35, %r5599;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r35, %r36, %r5599;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11594, %r36, %r37, %r5599;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11593, %r37, %r38, %r5599;
	// inline asm
	mov.u32 	%r11591, 0;
	// inline asm
	shf.r.wrap.b32 %r11592, %r38, %r11591, %r5599;
	// inline asm
	bra.uni 	BB4_1136;

BB4_461:
	setp.eq.s32	%p359, %r44, 7;
	mov.u32 	%r11462, %r11471;
	@%p359 bra 	BB4_462;
	bra.uni 	BB4_525;

BB4_462:
	shr.u32 	%r11462, %r40, 24;
	bra.uni 	BB4_525;

BB4_1337:
	setp.eq.s32	%p915, %r6642, 14;
	@%p915 bra 	BB4_1385;
	bra.uni 	BB4_1338;

BB4_1385:
	mov.u32 	%r6894, 16;
	// inline asm
	shf.r.wrap.b32 %r11540, %r42, %r35, %r6894;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11539, %r41, %r42, %r6894;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11538, %r40, %r41, %r6894;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11537, %r39, %r40, %r6894;
	// inline asm
	mov.u32 	%r11541, 0;
	// inline asm
	shf.r.wrap.b32 %r11544, %r11541, %r39, %r6894;
	// inline asm
	bra.uni 	BB4_1340;

BB4_798:
	setp.eq.s32	%p572, %r44, 7;
	@%p572 bra 	BB4_799;
	bra.uni 	BB4_824;

BB4_799:
	mov.u32 	%r4641, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r4641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r4641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r42, %r35, %r4641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r41, %r42, %r4641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r40, %r41, %r4641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r39, %r40, %r4641;
	// inline asm
	mov.u32 	%r11590, 0;
	// inline asm
	shf.r.wrap.b32 %r11589, %r11590, %r39, %r4641;
	// inline asm
	bra.uni 	BB4_871;

BB4_1098:
	setp.eq.s32	%p725, %r46, 23;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p725 bra 	BB4_1099;
	bra.uni 	BB4_1136;

BB4_1099:
	mov.u32 	%r5311, 24;
	// inline asm
	shf.r.wrap.b32 %r11509, %r36, %r37, %r5311;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r37, %r38, %r5311;
	// inline asm
	mov.u32 	%r11594, 0;
	// inline asm
	shf.r.wrap.b32 %r11588, %r38, %r11594, %r5311;
	// inline asm

BB4_1100:
	mov.u32 	%r11593, %r11594;
	mov.u32 	%r11592, %r11594;
	mov.u32 	%r11591, %r11594;
	mov.u32 	%r11587, %r11594;
	bra.uni 	BB4_1136;

BB4_492:
	setp.eq.s32	%p336, %r44, 23;
	mov.u32 	%r11462, %r11471;
	@%p336 bra 	BB4_493;
	bra.uni 	BB4_525;

BB4_493:
	shr.u32 	%r11462, %r36, 24;
	bra.uni 	BB4_525;

BB4_830:
	setp.eq.s32	%p549, %r44, 23;
	@%p549 bra 	BB4_831;
	bra.uni 	BB4_824;

BB4_831:
	mov.u32 	%r4353, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r40, %r41, %r4353;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r39, %r40, %r4353;
	// inline asm
	mov.u32 	%r11587, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r11587, %r39, %r4353;
	// inline asm

BB4_832:
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	mov.u32 	%r11590, %r11587;
	bra.uni 	BB4_870;

BB4_1080:
	setp.eq.s32	%p737, %r46, 15;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p737 bra 	BB4_1081;
	bra.uni 	BB4_1136;

BB4_1081:
	mov.u32 	%r5439, 24;
	// inline asm
	shf.r.wrap.b32 %r11509, %r42, %r35, %r5439;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11589, %r35, %r36, %r5439;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11588, %r36, %r37, %r5439;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11587, %r37, %r38, %r5439;
	// inline asm
	mov.u32 	%r11593, 0;
	// inline asm
	shf.r.wrap.b32 %r11594, %r38, %r11593, %r5439;
	// inline asm

BB4_1082:
	mov.u32 	%r11592, %r11593;
	mov.u32 	%r11591, %r11593;
	bra.uni 	BB4_1136;

BB4_476:
	setp.eq.s32	%p348, %r44, 15;
	mov.u32 	%r11462, %r11471;
	@%p348 bra 	BB4_477;
	bra.uni 	BB4_525;

BB4_477:
	shr.u32 	%r11462, %r42, 24;
	bra.uni 	BB4_525;

BB4_1372:
	setp.eq.s32	%p892, %r6642, 30;
	@%p892 bra 	BB4_1376;
	bra.uni 	BB4_1373;

BB4_1376:
	mov.u32 	%r11537, 0;
	mov.u32 	%r6658, 16;
	// inline asm
	shf.r.wrap.b32 %r11540, %r11537, %r39, %r6658;
	// inline asm
	bra.uni 	BB4_1375;

BB4_813:
	setp.eq.s32	%p561, %r44, 15;
	@%p561 bra 	BB4_814;
	bra.uni 	BB4_824;

BB4_814:
	mov.u32 	%r4481, 8;
	// inline asm
	shf.r.wrap.b32 %r38, %r42, %r35, %r4481;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r41, %r42, %r4481;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r40, %r41, %r4481;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r35, %r39, %r40, %r4481;
	// inline asm
	mov.u32 	%r11588, 0;
	// inline asm
	shf.r.wrap.b32 %r11587, %r11588, %r39, %r4481;
	// inline asm

BB4_815:
	mov.u32 	%r11589, %r11588;
	mov.u32 	%r11590, %r11588;
	bra.uni 	BB4_871;

BB4_824:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_871;

BB4_1116:
	setp.ne.s32	%p714, %r46, 31;
	mov.u32 	%r11594, %r11591;
	mov.u32 	%r11593, %r11591;
	mov.u32 	%r11592, %r11591;
	mov.u32 	%r11509, %r11591;
	mov.u32 	%r11589, %r11591;
	mov.u32 	%r11588, %r11591;
	mov.u32 	%r11587, %r11591;
	@%p714 bra 	BB4_1136;

	mov.u32 	%r11594, 0;
	mov.u32 	%r5215, 24;
	// inline asm
	shf.r.wrap.b32 %r11509, %r38, %r11594, %r5215;
	// inline asm

BB4_1118:
	mov.u32 	%r11593, %r11594;
	mov.u32 	%r11592, %r11594;
	mov.u32 	%r11591, %r11594;
	mov.u32 	%r11589, %r11594;

BB4_1110:
	mov.u32 	%r11588, %r11594;
	mov.u32 	%r11587, %r11594;

BB4_1136:
	and.b32  	%r5757, %r43, 3;
	shl.b32 	%r5758, %r5757, 3;
	mov.u32 	%r5759, 1;
	shl.b32 	%r5760, %r5759, %r5758;
	add.s32 	%r1078, %r5760, -1;
	neg.s32 	%r1079, %r5760;
	shr.u32 	%r5756, %r44, 2;
	setp.gt.s32	%p756, %r5756, 3;
	@%p756 bra 	BB4_1144;

	setp.gt.s32	%p762, %r5756, 1;
	@%p762 bra 	BB4_1141;

	setp.eq.s32	%p765, %r5756, 0;
	@%p765 bra 	BB4_1159;
	bra.uni 	BB4_1139;

BB4_1159:
	and.b32  	%r5775, %r1078, %r39;
	and.b32  	%r5776, %r11509, %r1079;
	or.b32  	%r11590, %r5776, %r5775;
	bra.uni 	BB4_1160;

BB4_1144:
	setp.gt.s32	%p757, %r5756, 5;
	@%p757 bra 	BB4_1148;

	setp.eq.s32	%p760, %r5756, 4;
	@%p760 bra 	BB4_1155;
	bra.uni 	BB4_1146;

BB4_1155:
	and.b32  	%r5767, %r1078, %r35;
	and.b32  	%r5768, %r11594, %r1079;
	or.b32  	%r11594, %r5768, %r5767;
	mov.u32 	%r11587, %r42;
	bra.uni 	BB4_1156;

BB4_1141:
	setp.eq.s32	%p763, %r5756, 2;
	@%p763 bra 	BB4_1158;
	bra.uni 	BB4_1142;

BB4_1158:
	and.b32  	%r5771, %r1078, %r41;
	and.b32  	%r5772, %r11588, %r1079;
	or.b32  	%r11588, %r5772, %r5771;
	bra.uni 	BB4_1157;

BB4_1148:
	setp.eq.s32	%p758, %r5756, 6;
	@%p758 bra 	BB4_1154;
	bra.uni 	BB4_1149;

BB4_1154:
	and.b32  	%r5763, %r1078, %r37;
	and.b32  	%r5764, %r11592, %r1079;
	or.b32  	%r11592, %r5764, %r5763;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1152;

BB4_1139:
	setp.eq.s32	%p766, %r5756, 1;
	@%p766 bra 	BB4_1140;
	bra.uni 	BB4_1150;

BB4_1140:
	and.b32  	%r5773, %r1078, %r40;
	and.b32  	%r5774, %r11589, %r1079;
	or.b32  	%r11589, %r5774, %r5773;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1160;

BB4_1146:
	setp.eq.s32	%p761, %r5756, 5;
	@%p761 bra 	BB4_1147;
	bra.uni 	BB4_1150;

BB4_1147:
	and.b32  	%r5765, %r1078, %r36;
	and.b32  	%r5766, %r11593, %r1079;
	or.b32  	%r11593, %r5766, %r5765;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11594, %r35;
	bra.uni 	BB4_1160;

BB4_1142:
	setp.eq.s32	%p764, %r5756, 3;
	@%p764 bra 	BB4_1143;
	bra.uni 	BB4_1150;

BB4_1143:
	and.b32  	%r5769, %r1078, %r42;
	and.b32  	%r5770, %r11587, %r1079;
	or.b32  	%r11587, %r5770, %r5769;

BB4_1156:
	mov.u32 	%r11588, %r41;

BB4_1157:
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1160;

BB4_1149:
	setp.ne.s32	%p759, %r5756, 7;
	@%p759 bra 	BB4_1150;

	and.b32  	%r5761, %r1078, %r38;
	and.b32  	%r5762, %r11591, %r1079;
	or.b32  	%r11591, %r5762, %r5761;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_1151;

BB4_1150:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;

BB4_1151:
	mov.u32 	%r11592, %r37;

BB4_1152:
	mov.u32 	%r11593, %r36;
	mov.u32 	%r11594, %r35;

BB4_1160:
	sub.s32 	%r11595, %r34, %r46;
	bra.uni 	BB4_1552;

BB4_507:
	setp.ne.s32	%p325, %r44, 31;
	mov.u32 	%r11462, %r11471;
	@%p325 bra 	BB4_525;

	shr.u32 	%r11462, %r38, 24;

BB4_525:
	setp.gt.s32	%p367, %r46, 15;
	@%p367 bra 	BB4_557;

	setp.gt.s32	%p391, %r46, 7;
	@%p391 bra 	BB4_542;

	setp.gt.s32	%p403, %r46, 3;
	@%p403 bra 	BB4_535;

	setp.gt.s32	%p409, %r46, 1;
	@%p409 bra 	BB4_532;

	setp.eq.s32	%p412, %r46, 0;
	@%p412 bra 	BB4_603;
	bra.uni 	BB4_530;

BB4_603:
	and.b32  	%r11471, %r39, 255;
	and.b32  	%r3983, %r39, -256;
	or.b32  	%r39, %r11462, %r3983;
	bra.uni 	BB4_604;

BB4_557:
	setp.gt.s32	%p368, %r46, 23;
	@%p368 bra 	BB4_573;

	setp.gt.s32	%p380, %r46, 19;
	@%p380 bra 	BB4_566;

	setp.gt.s32	%p386, %r46, 17;
	@%p386 bra 	BB4_563;

	setp.eq.s32	%p389, %r46, 16;
	@%p389 bra 	BB4_595;
	bra.uni 	BB4_561;

BB4_595:
	and.b32  	%r11471, %r35, 255;
	and.b32  	%r3959, %r35, -256;
	or.b32  	%r35, %r11462, %r3959;
	bra.uni 	BB4_604;

BB4_542:
	setp.gt.s32	%p392, %r46, 11;
	@%p392 bra 	BB4_550;

	setp.gt.s32	%p398, %r46, 9;
	@%p398 bra 	BB4_547;

	setp.eq.s32	%p401, %r46, 8;
	@%p401 bra 	BB4_599;
	bra.uni 	BB4_545;

BB4_599:
	and.b32  	%r11471, %r41, 255;
	and.b32  	%r3971, %r41, -256;
	or.b32  	%r41, %r11462, %r3971;
	bra.uni 	BB4_604;

BB4_573:
	setp.gt.s32	%p369, %r46, 27;
	@%p369 bra 	BB4_581;

	setp.gt.s32	%p375, %r46, 25;
	@%p375 bra 	BB4_578;

	setp.eq.s32	%p378, %r46, 24;
	@%p378 bra 	BB4_591;
	bra.uni 	BB4_576;

BB4_591:
	and.b32  	%r11471, %r37, 255;
	and.b32  	%r3947, %r37, -256;
	or.b32  	%r37, %r11462, %r3947;
	bra.uni 	BB4_604;

BB4_535:
	setp.gt.s32	%p404, %r46, 5;
	@%p404 bra 	BB4_539;

	setp.eq.s32	%p407, %r46, 4;
	@%p407 bra 	BB4_601;
	bra.uni 	BB4_537;

BB4_601:
	and.b32  	%r11471, %r40, 255;
	and.b32  	%r3977, %r40, -256;
	or.b32  	%r40, %r11462, %r3977;
	bra.uni 	BB4_604;

BB4_566:
	setp.gt.s32	%p381, %r46, 21;
	@%p381 bra 	BB4_570;

	setp.eq.s32	%p384, %r46, 20;
	@%p384 bra 	BB4_593;
	bra.uni 	BB4_568;

BB4_593:
	and.b32  	%r11471, %r36, 255;
	and.b32  	%r3953, %r36, -256;
	or.b32  	%r36, %r11462, %r3953;
	bra.uni 	BB4_604;

BB4_550:
	setp.gt.s32	%p393, %r46, 13;
	@%p393 bra 	BB4_554;

	setp.eq.s32	%p396, %r46, 12;
	@%p396 bra 	BB4_597;
	bra.uni 	BB4_552;

BB4_597:
	and.b32  	%r11471, %r42, 255;
	and.b32  	%r3965, %r42, -256;
	or.b32  	%r42, %r11462, %r3965;
	bra.uni 	BB4_604;

BB4_581:
	setp.gt.s32	%p370, %r46, 29;
	@%p370 bra 	BB4_585;

	setp.eq.s32	%p373, %r46, 28;
	@%p373 bra 	BB4_589;
	bra.uni 	BB4_583;

BB4_589:
	and.b32  	%r11471, %r38, 255;
	and.b32  	%r3941, %r38, -256;
	or.b32  	%r38, %r11462, %r3941;
	bra.uni 	BB4_604;

BB4_532:
	setp.eq.s32	%p410, %r46, 2;
	@%p410 bra 	BB4_602;
	bra.uni 	BB4_533;

BB4_602:
	bfe.u32 	%r11471, %r39, 16, 8;
	shl.b32 	%r3979, %r11462, 16;
	and.b32  	%r3980, %r39, -16711681;
	or.b32  	%r39, %r3979, %r3980;
	bra.uni 	BB4_604;

BB4_563:
	setp.eq.s32	%p387, %r46, 18;
	@%p387 bra 	BB4_594;
	bra.uni 	BB4_564;

BB4_594:
	bfe.u32 	%r11471, %r35, 16, 8;
	shl.b32 	%r3955, %r11462, 16;
	and.b32  	%r3956, %r35, -16711681;
	or.b32  	%r35, %r3955, %r3956;
	bra.uni 	BB4_604;

BB4_547:
	setp.eq.s32	%p399, %r46, 10;
	@%p399 bra 	BB4_598;
	bra.uni 	BB4_548;

BB4_598:
	bfe.u32 	%r11471, %r41, 16, 8;
	shl.b32 	%r3967, %r11462, 16;
	and.b32  	%r3968, %r41, -16711681;
	or.b32  	%r41, %r3967, %r3968;
	bra.uni 	BB4_604;

BB4_578:
	setp.eq.s32	%p376, %r46, 26;
	@%p376 bra 	BB4_590;
	bra.uni 	BB4_579;

BB4_590:
	bfe.u32 	%r11471, %r37, 16, 8;
	shl.b32 	%r3943, %r11462, 16;
	and.b32  	%r3944, %r37, -16711681;
	or.b32  	%r37, %r3943, %r3944;
	bra.uni 	BB4_604;

BB4_539:
	setp.eq.s32	%p405, %r46, 6;
	@%p405 bra 	BB4_600;
	bra.uni 	BB4_540;

BB4_600:
	bfe.u32 	%r11471, %r40, 16, 8;
	shl.b32 	%r3973, %r11462, 16;
	and.b32  	%r3974, %r40, -16711681;
	or.b32  	%r40, %r3973, %r3974;
	bra.uni 	BB4_604;

BB4_570:
	setp.eq.s32	%p382, %r46, 22;
	@%p382 bra 	BB4_592;
	bra.uni 	BB4_571;

BB4_592:
	bfe.u32 	%r11471, %r36, 16, 8;
	shl.b32 	%r3949, %r11462, 16;
	and.b32  	%r3950, %r36, -16711681;
	or.b32  	%r36, %r3949, %r3950;
	bra.uni 	BB4_604;

BB4_554:
	setp.eq.s32	%p394, %r46, 14;
	@%p394 bra 	BB4_596;
	bra.uni 	BB4_555;

BB4_596:
	bfe.u32 	%r11471, %r42, 16, 8;
	shl.b32 	%r3961, %r11462, 16;
	and.b32  	%r3962, %r42, -16711681;
	or.b32  	%r42, %r3961, %r3962;
	bra.uni 	BB4_604;

BB4_585:
	setp.eq.s32	%p371, %r46, 30;
	@%p371 bra 	BB4_588;
	bra.uni 	BB4_586;

BB4_588:
	bfe.u32 	%r11471, %r38, 16, 8;
	shl.b32 	%r3937, %r11462, 16;
	and.b32  	%r3938, %r38, -16711681;
	or.b32  	%r38, %r3937, %r3938;
	bra.uni 	BB4_604;

BB4_847:
	setp.ne.s32	%p538, %r44, 30;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	@%p538 bra 	BB4_871;

	mov.u32 	%r11587, 0;
	mov.u32 	%r4268, 16;
	// inline asm
	shf.r.wrap.b32 %r38, %r11587, %r39, %r4268;
	// inline asm

BB4_867:
	mov.u32 	%r11588, %r11587;
	mov.u32 	%r11589, %r11587;
	mov.u32 	%r11590, %r11587;

BB4_868:
	mov.u32 	%r37, %r11587;

BB4_869:
	mov.u32 	%r36, %r11587;

BB4_870:
	mov.u32 	%r35, %r11587;

BB4_871:
	@%p533 bra 	BB4_900;

	setp.gt.s32	%p602, %r44, 7;
	@%p602 bra 	BB4_885;

	setp.gt.s32	%p614, %r44, 3;
	@%p614 bra 	BB4_878;

	setp.eq.s32	%p620, %r44, 1;
	@%p620 bra 	BB4_947;

	setp.eq.s32	%p621, %r44, 2;
	@%p621 bra 	BB4_946;
	bra.uni 	BB4_876;

BB4_946:
	shl.b32 	%r5023, %r630, 8;
	or.b32  	%r5024, %r5023, %r630;
	or.b32  	%r11590, %r5024, %r11590;
	bra.uni 	BB4_768;

BB4_900:
	setp.gt.s32	%p579, %r44, 23;
	@%p579 bra 	BB4_916;

	setp.gt.s32	%p591, %r44, 19;
	@%p591 bra 	BB4_909;

	setp.gt.s32	%p597, %r44, 17;
	@%p597 bra 	BB4_906;

	setp.eq.s32	%p600, %r44, 16;
	@%p600 bra 	BB4_939;
	bra.uni 	BB4_904;

BB4_939:
	mov.u32 	%r4923, 64;
	prmt.b32 	%r4924, %r39, %r39, %r4923;
	mov.u32 	%r4925, 1040;
	prmt.b32 	%r4926, %r4924, %r39, %r4925;
	mov.u32 	%r4927, 16912;
	prmt.b32 	%r4928, %r4926, %r39, %r4927;
	or.b32  	%r11590, %r4928, %r11590;
	or.b32  	%r11589, %r4928, %r11589;
	or.b32  	%r11588, %r4928, %r11588;
	or.b32  	%r11587, %r4928, %r11587;
	bra.uni 	BB4_768;

BB4_885:
	setp.gt.s32	%p603, %r44, 11;
	@%p603 bra 	BB4_893;

	setp.gt.s32	%p609, %r44, 9;
	@%p609 bra 	BB4_890;

	setp.eq.s32	%p612, %r44, 8;
	@%p612 bra 	BB4_943;
	bra.uni 	BB4_888;

BB4_943:
	mov.u32 	%r4983, 64;
	prmt.b32 	%r4984, %r39, %r39, %r4983;
	mov.u32 	%r4985, 1040;
	prmt.b32 	%r4986, %r4984, %r39, %r4985;
	mov.u32 	%r4987, 16912;
	prmt.b32 	%r4988, %r4986, %r39, %r4987;
	or.b32  	%r11590, %r4988, %r11590;
	or.b32  	%r11589, %r4988, %r11589;
	bra.uni 	BB4_768;

BB4_916:
	setp.gt.s32	%p580, %r44, 27;
	@%p580 bra 	BB4_924;

	setp.gt.s32	%p586, %r44, 25;
	@%p586 bra 	BB4_921;

	setp.eq.s32	%p589, %r44, 24;
	@%p589 bra 	BB4_935;
	bra.uni 	BB4_919;

BB4_935:
	mov.u32 	%r4863, 64;
	prmt.b32 	%r4864, %r39, %r39, %r4863;
	mov.u32 	%r4865, 1040;
	prmt.b32 	%r4866, %r4864, %r39, %r4865;
	mov.u32 	%r4867, 16912;
	prmt.b32 	%r4868, %r4866, %r39, %r4867;
	or.b32  	%r11590, %r4868, %r11590;
	or.b32  	%r11589, %r4868, %r11589;
	or.b32  	%r11588, %r4868, %r11588;
	or.b32  	%r11587, %r4868, %r11587;
	or.b32  	%r11594, %r4868, %r35;
	or.b32  	%r11593, %r4868, %r36;
	bra.uni 	BB4_731;

BB4_878:
	setp.gt.s32	%p615, %r44, 5;
	@%p615 bra 	BB4_882;

	setp.eq.s32	%p618, %r44, 4;
	@%p618 bra 	BB4_945;
	bra.uni 	BB4_880;

BB4_945:
	mov.u32 	%r5013, 64;
	prmt.b32 	%r5014, %r39, %r39, %r5013;
	mov.u32 	%r5015, 1040;
	prmt.b32 	%r5016, %r5014, %r39, %r5015;
	mov.u32 	%r5017, 16912;
	prmt.b32 	%r5018, %r5016, %r39, %r5017;
	or.b32  	%r11590, %r5018, %r11590;
	bra.uni 	BB4_768;

BB4_909:
	setp.gt.s32	%p592, %r44, 21;
	@%p592 bra 	BB4_913;

	setp.eq.s32	%p595, %r44, 20;
	@%p595 bra 	BB4_937;
	bra.uni 	BB4_911;

BB4_937:
	mov.u32 	%r4893, 64;
	prmt.b32 	%r4894, %r39, %r39, %r4893;
	mov.u32 	%r4895, 1040;
	prmt.b32 	%r4896, %r4894, %r39, %r4895;
	mov.u32 	%r4897, 16912;
	prmt.b32 	%r4898, %r4896, %r39, %r4897;
	or.b32  	%r11590, %r4898, %r11590;
	or.b32  	%r11589, %r4898, %r11589;
	or.b32  	%r11588, %r4898, %r11588;
	or.b32  	%r11587, %r4898, %r11587;
	or.b32  	%r11594, %r4898, %r35;
	bra.uni 	BB4_762;

BB4_893:
	setp.gt.s32	%p604, %r44, 13;
	@%p604 bra 	BB4_897;

	setp.eq.s32	%p607, %r44, 12;
	@%p607 bra 	BB4_941;
	bra.uni 	BB4_895;

BB4_941:
	mov.u32 	%r4953, 64;
	prmt.b32 	%r4954, %r39, %r39, %r4953;
	mov.u32 	%r4955, 1040;
	prmt.b32 	%r4956, %r4954, %r39, %r4955;
	mov.u32 	%r4957, 16912;
	prmt.b32 	%r4958, %r4956, %r39, %r4957;
	or.b32  	%r11590, %r4958, %r11590;
	or.b32  	%r11589, %r4958, %r11589;
	or.b32  	%r11588, %r4958, %r11588;
	bra.uni 	BB4_768;

BB4_924:
	setp.gt.s32	%p581, %r44, 29;
	@%p581 bra 	BB4_928;

	setp.eq.s32	%p584, %r44, 28;
	@%p584 bra 	BB4_932;
	bra.uni 	BB4_926;

BB4_932:
	mov.u32 	%r4833, 64;
	prmt.b32 	%r4834, %r39, %r39, %r4833;
	mov.u32 	%r4835, 1040;
	prmt.b32 	%r4836, %r4834, %r39, %r4835;
	mov.u32 	%r4837, 16912;
	prmt.b32 	%r4838, %r4836, %r39, %r4837;
	or.b32  	%r11590, %r4838, %r11590;
	or.b32  	%r11589, %r4838, %r11589;
	or.b32  	%r11588, %r4838, %r11588;
	or.b32  	%r11587, %r4838, %r11587;
	or.b32  	%r11594, %r4838, %r35;
	or.b32  	%r11593, %r4838, %r36;
	or.b32  	%r11592, %r4838, %r37;
	mov.u32 	%r11591, %r38;
	bra.uni 	BB4_1552;

BB4_906:
	setp.eq.s32	%p598, %r44, 18;
	@%p598 bra 	BB4_938;
	bra.uni 	BB4_907;

BB4_938:
	mov.u32 	%r4909, 64;
	prmt.b32 	%r4910, %r39, %r39, %r4909;
	mov.u32 	%r4911, 1040;
	prmt.b32 	%r4912, %r4910, %r39, %r4911;
	mov.u32 	%r4913, 16912;
	prmt.b32 	%r4914, %r4912, %r39, %r4913;
	or.b32  	%r11590, %r4914, %r11590;
	or.b32  	%r11589, %r4914, %r11589;
	or.b32  	%r11588, %r4914, %r11588;
	or.b32  	%r11587, %r4914, %r11587;
	shl.b32 	%r4915, %r630, 8;
	or.b32  	%r4916, %r4915, %r630;
	or.b32  	%r11594, %r4916, %r35;
	bra.uni 	BB4_762;

BB4_890:
	setp.eq.s32	%p610, %r44, 10;
	@%p610 bra 	BB4_942;
	bra.uni 	BB4_891;

BB4_942:
	mov.u32 	%r4969, 64;
	prmt.b32 	%r4970, %r39, %r39, %r4969;
	mov.u32 	%r4971, 1040;
	prmt.b32 	%r4972, %r4970, %r39, %r4971;
	mov.u32 	%r4973, 16912;
	prmt.b32 	%r4974, %r4972, %r39, %r4973;
	or.b32  	%r11590, %r4974, %r11590;
	or.b32  	%r11589, %r4974, %r11589;
	shl.b32 	%r4975, %r630, 8;
	or.b32  	%r4976, %r4975, %r630;
	or.b32  	%r11588, %r4976, %r11588;
	bra.uni 	BB4_768;

BB4_921:
	setp.eq.s32	%p587, %r44, 26;
	@%p587 bra 	BB4_933;
	bra.uni 	BB4_922;

BB4_933:
	mov.u32 	%r4849, 64;
	prmt.b32 	%r4850, %r39, %r39, %r4849;
	mov.u32 	%r4851, 1040;
	prmt.b32 	%r4852, %r4850, %r39, %r4851;
	mov.u32 	%r4853, 16912;
	prmt.b32 	%r4854, %r4852, %r39, %r4853;
	or.b32  	%r11590, %r4854, %r11590;
	or.b32  	%r11589, %r4854, %r11589;
	or.b32  	%r11588, %r4854, %r11588;
	or.b32  	%r11587, %r4854, %r11587;
	or.b32  	%r11594, %r4854, %r35;
	or.b32  	%r11593, %r4854, %r36;
	shl.b32 	%r4855, %r630, 8;
	or.b32  	%r4856, %r4855, %r630;
	or.b32  	%r11592, %r4856, %r37;
	mov.u32 	%r11591, %r38;
	bra.uni 	BB4_1552;

BB4_882:
	setp.eq.s32	%p616, %r44, 6;
	@%p616 bra 	BB4_944;
	bra.uni 	BB4_883;

BB4_944:
	mov.u32 	%r4999, 64;
	prmt.b32 	%r5000, %r39, %r39, %r4999;
	mov.u32 	%r5001, 1040;
	prmt.b32 	%r5002, %r5000, %r39, %r5001;
	mov.u32 	%r5003, 16912;
	prmt.b32 	%r5004, %r5002, %r39, %r5003;
	or.b32  	%r11590, %r5004, %r11590;
	shl.b32 	%r5005, %r630, 8;
	or.b32  	%r5006, %r5005, %r630;
	or.b32  	%r11589, %r5006, %r11589;
	bra.uni 	BB4_768;

BB4_913:
	setp.eq.s32	%p593, %r44, 22;
	@%p593 bra 	BB4_936;
	bra.uni 	BB4_914;

BB4_936:
	mov.u32 	%r4879, 64;
	prmt.b32 	%r4880, %r39, %r39, %r4879;
	mov.u32 	%r4881, 1040;
	prmt.b32 	%r4882, %r4880, %r39, %r4881;
	mov.u32 	%r4883, 16912;
	prmt.b32 	%r4884, %r4882, %r39, %r4883;
	or.b32  	%r11590, %r4884, %r11590;
	or.b32  	%r11589, %r4884, %r11589;
	or.b32  	%r11588, %r4884, %r11588;
	or.b32  	%r11587, %r4884, %r11587;
	or.b32  	%r11594, %r4884, %r35;
	shl.b32 	%r4885, %r630, 8;
	or.b32  	%r4886, %r4885, %r630;
	or.b32  	%r11593, %r4886, %r36;
	bra.uni 	BB4_731;

BB4_897:
	setp.eq.s32	%p605, %r44, 14;
	@%p605 bra 	BB4_940;
	bra.uni 	BB4_898;

BB4_940:
	mov.u32 	%r4939, 64;
	prmt.b32 	%r4940, %r39, %r39, %r4939;
	mov.u32 	%r4941, 1040;
	prmt.b32 	%r4942, %r4940, %r39, %r4941;
	mov.u32 	%r4943, 16912;
	prmt.b32 	%r4944, %r4942, %r39, %r4943;
	or.b32  	%r11590, %r4944, %r11590;
	or.b32  	%r11589, %r4944, %r11589;
	or.b32  	%r11588, %r4944, %r11588;
	shl.b32 	%r4945, %r630, 8;
	or.b32  	%r4946, %r4945, %r630;
	or.b32  	%r11587, %r4946, %r11587;
	bra.uni 	BB4_768;

BB4_928:
	setp.eq.s32	%p582, %r44, 30;
	@%p582 bra 	BB4_931;
	bra.uni 	BB4_929;

BB4_931:
	mov.u32 	%r4819, 64;
	prmt.b32 	%r4820, %r39, %r39, %r4819;
	mov.u32 	%r4821, 1040;
	prmt.b32 	%r4822, %r4820, %r39, %r4821;
	mov.u32 	%r4823, 16912;
	prmt.b32 	%r4824, %r4822, %r39, %r4823;
	or.b32  	%r11590, %r4824, %r11590;
	or.b32  	%r11589, %r4824, %r11589;
	or.b32  	%r11588, %r4824, %r11588;
	or.b32  	%r11587, %r4824, %r11587;
	or.b32  	%r11594, %r4824, %r35;
	or.b32  	%r11593, %r4824, %r36;
	or.b32  	%r11592, %r4824, %r37;
	shl.b32 	%r4825, %r630, 8;
	or.b32  	%r4826, %r4825, %r630;
	or.b32  	%r11591, %r4826, %r38;
	bra.uni 	BB4_1552;

BB4_947:
	or.b32  	%r11590, %r11590, %r630;
	bra.uni 	BB4_768;

BB4_876:
	setp.eq.s32	%p622, %r44, 3;
	@%p622 bra 	BB4_877;
	bra.uni 	BB4_768;

BB4_877:
	shl.b32 	%r5019, %r630, 8;
	or.b32  	%r5020, %r5019, %r630;
	shl.b32 	%r5021, %r630, 16;
	or.b32  	%r5022, %r5020, %r5021;
	or.b32  	%r11590, %r5022, %r11590;
	bra.uni 	BB4_768;

BB4_530:
	setp.eq.s32	%p413, %r46, 1;
	@%p413 bra 	BB4_531;
	bra.uni 	BB4_604;

BB4_531:
	bfe.u32 	%r11471, %r39, 8, 8;
	shl.b32 	%r3981, %r11462, 8;
	and.b32  	%r3982, %r39, -65281;
	or.b32  	%r39, %r3981, %r3982;
	bra.uni 	BB4_604;

BB4_561:
	setp.eq.s32	%p390, %r46, 17;
	@%p390 bra 	BB4_562;
	bra.uni 	BB4_604;

BB4_562:
	bfe.u32 	%r11471, %r35, 8, 8;
	shl.b32 	%r3957, %r11462, 8;
	and.b32  	%r3958, %r35, -65281;
	or.b32  	%r35, %r3957, %r3958;
	bra.uni 	BB4_604;

BB4_545:
	setp.eq.s32	%p402, %r46, 9;
	@%p402 bra 	BB4_546;
	bra.uni 	BB4_604;

BB4_546:
	bfe.u32 	%r11471, %r41, 8, 8;
	shl.b32 	%r3969, %r11462, 8;
	and.b32  	%r3970, %r41, -65281;
	or.b32  	%r41, %r3969, %r3970;
	bra.uni 	BB4_604;

BB4_576:
	setp.eq.s32	%p379, %r46, 25;
	@%p379 bra 	BB4_577;
	bra.uni 	BB4_604;

BB4_577:
	bfe.u32 	%r11471, %r37, 8, 8;
	shl.b32 	%r3945, %r11462, 8;
	and.b32  	%r3946, %r37, -65281;
	or.b32  	%r37, %r3945, %r3946;
	bra.uni 	BB4_604;

BB4_537:
	setp.eq.s32	%p408, %r46, 5;
	@%p408 bra 	BB4_538;
	bra.uni 	BB4_604;

BB4_538:
	bfe.u32 	%r11471, %r40, 8, 8;
	shl.b32 	%r3975, %r11462, 8;
	and.b32  	%r3976, %r40, -65281;
	or.b32  	%r40, %r3975, %r3976;
	bra.uni 	BB4_604;

BB4_568:
	setp.eq.s32	%p385, %r46, 21;
	@%p385 bra 	BB4_569;
	bra.uni 	BB4_604;

BB4_569:
	bfe.u32 	%r11471, %r36, 8, 8;
	shl.b32 	%r3951, %r11462, 8;
	and.b32  	%r3952, %r36, -65281;
	or.b32  	%r36, %r3951, %r3952;
	bra.uni 	BB4_604;

BB4_552:
	setp.eq.s32	%p397, %r46, 13;
	@%p397 bra 	BB4_553;
	bra.uni 	BB4_604;

BB4_553:
	bfe.u32 	%r11471, %r42, 8, 8;
	shl.b32 	%r3963, %r11462, 8;
	and.b32  	%r3964, %r42, -65281;
	or.b32  	%r42, %r3963, %r3964;
	bra.uni 	BB4_604;

BB4_583:
	setp.eq.s32	%p374, %r46, 29;
	@%p374 bra 	BB4_584;
	bra.uni 	BB4_604;

BB4_584:
	bfe.u32 	%r11471, %r38, 8, 8;
	shl.b32 	%r3939, %r11462, 8;
	and.b32  	%r3940, %r38, -65281;
	or.b32  	%r38, %r3939, %r3940;
	bra.uni 	BB4_604;

BB4_533:
	setp.eq.s32	%p411, %r46, 3;
	@%p411 bra 	BB4_534;
	bra.uni 	BB4_604;

BB4_534:
	shr.u32 	%r11471, %r39, 24;
	and.b32  	%r3978, %r39, 16777215;
	prmt.b32 	%r39, %r11462, %r3978, 1620;
	bra.uni 	BB4_604;

BB4_564:
	setp.eq.s32	%p388, %r46, 19;
	@%p388 bra 	BB4_565;
	bra.uni 	BB4_604;

BB4_565:
	shr.u32 	%r11471, %r35, 24;
	and.b32  	%r3954, %r35, 16777215;
	prmt.b32 	%r35, %r11462, %r3954, 1620;
	bra.uni 	BB4_604;

BB4_548:
	setp.eq.s32	%p400, %r46, 11;
	@%p400 bra 	BB4_549;
	bra.uni 	BB4_604;

BB4_549:
	shr.u32 	%r11471, %r41, 24;
	and.b32  	%r3966, %r41, 16777215;
	prmt.b32 	%r41, %r11462, %r3966, 1620;
	bra.uni 	BB4_604;

BB4_579:
	setp.eq.s32	%p377, %r46, 27;
	@%p377 bra 	BB4_580;
	bra.uni 	BB4_604;

BB4_580:
	shr.u32 	%r11471, %r37, 24;
	and.b32  	%r3942, %r37, 16777215;
	prmt.b32 	%r37, %r11462, %r3942, 1620;
	bra.uni 	BB4_604;

BB4_540:
	setp.eq.s32	%p406, %r46, 7;
	@%p406 bra 	BB4_541;
	bra.uni 	BB4_604;

BB4_541:
	shr.u32 	%r11471, %r40, 24;
	and.b32  	%r3972, %r40, 16777215;
	prmt.b32 	%r40, %r11462, %r3972, 1620;
	bra.uni 	BB4_604;

BB4_571:
	setp.eq.s32	%p383, %r46, 23;
	@%p383 bra 	BB4_572;
	bra.uni 	BB4_604;

BB4_572:
	shr.u32 	%r11471, %r36, 24;
	and.b32  	%r3948, %r36, 16777215;
	prmt.b32 	%r36, %r11462, %r3948, 1620;
	bra.uni 	BB4_604;

BB4_555:
	setp.eq.s32	%p395, %r46, 15;
	@%p395 bra 	BB4_556;
	bra.uni 	BB4_604;

BB4_556:
	shr.u32 	%r11471, %r42, 24;
	and.b32  	%r3960, %r42, 16777215;
	prmt.b32 	%r42, %r11462, %r3960, 1620;
	bra.uni 	BB4_604;

BB4_586:
	setp.ne.s32	%p372, %r46, 31;
	@%p372 bra 	BB4_604;

	shr.u32 	%r11471, %r38, 24;
	and.b32  	%r3936, %r38, 16777215;
	prmt.b32 	%r38, %r11462, %r3936, 1620;

BB4_604:
	@%p320 bra 	BB4_646;

	setp.gt.s32	%p438, %r44, 7;
	@%p438 bra 	BB4_623;

	setp.gt.s32	%p450, %r44, 3;
	@%p450 bra 	BB4_615;

	setp.gt.s32	%p456, %r44, 1;
	@%p456 bra 	BB4_611;

	setp.eq.s32	%p459, %r44, 0;
	@%p459 bra 	BB4_696;
	bra.uni 	BB4_609;

BB4_696:
	and.b32  	%r4031, %r39, -256;
	or.b32  	%r11590, %r11471, %r4031;
	bra.uni 	BB4_614;

BB4_646:
	setp.gt.s32	%p415, %r44, 23;
	@%p415 bra 	BB4_664;

	setp.gt.s32	%p427, %r44, 19;
	@%p427 bra 	BB4_656;

	setp.gt.s32	%p433, %r44, 17;
	@%p433 bra 	BB4_652;

	setp.eq.s32	%p436, %r44, 16;
	@%p436 bra 	BB4_688;
	bra.uni 	BB4_650;

BB4_688:
	and.b32  	%r4007, %r35, -256;
	or.b32  	%r11594, %r4007, %r11471;
	bra.uni 	BB4_655;

BB4_623:
	setp.gt.s32	%p439, %r44, 11;
	@%p439 bra 	BB4_632;

	setp.gt.s32	%p445, %r44, 9;
	@%p445 bra 	BB4_628;

	setp.eq.s32	%p448, %r44, 8;
	@%p448 bra 	BB4_692;
	bra.uni 	BB4_626;

BB4_692:
	and.b32  	%r4019, %r41, -256;
	or.b32  	%r11588, %r11471, %r4019;
	bra.uni 	BB4_631;

BB4_664:
	setp.gt.s32	%p416, %r44, 27;
	@%p416 bra 	BB4_673;

	setp.gt.s32	%p422, %r44, 25;
	@%p422 bra 	BB4_669;

	setp.eq.s32	%p425, %r44, 24;
	@%p425 bra 	BB4_684;
	bra.uni 	BB4_667;

BB4_684:
	and.b32  	%r3995, %r37, -256;
	or.b32  	%r11592, %r11471, %r3995;
	bra.uni 	BB4_672;

BB4_615:
	setp.gt.s32	%p451, %r44, 5;
	@%p451 bra 	BB4_619;

	setp.eq.s32	%p454, %r44, 4;
	@%p454 bra 	BB4_694;
	bra.uni 	BB4_617;

BB4_694:
	and.b32  	%r4025, %r40, -256;
	or.b32  	%r11589, %r11471, %r4025;
	bra.uni 	BB4_622;

BB4_656:
	setp.gt.s32	%p428, %r44, 21;
	@%p428 bra 	BB4_660;

	setp.eq.s32	%p431, %r44, 20;
	@%p431 bra 	BB4_686;
	bra.uni 	BB4_658;

BB4_686:
	and.b32  	%r4001, %r36, -256;
	or.b32  	%r11593, %r11471, %r4001;
	bra.uni 	BB4_663;

BB4_632:
	setp.gt.s32	%p440, %r44, 13;
	@%p440 bra 	BB4_636;

	setp.eq.s32	%p443, %r44, 12;
	@%p443 bra 	BB4_690;
	bra.uni 	BB4_634;

BB4_690:
	and.b32  	%r4013, %r42, -256;
	or.b32  	%r11587, %r11471, %r4013;
	bra.uni 	BB4_639;

BB4_673:
	setp.gt.s32	%p417, %r44, 29;
	@%p417 bra 	BB4_677;

	setp.eq.s32	%p420, %r44, 28;
	@%p420 bra 	BB4_682;
	bra.uni 	BB4_675;

BB4_682:
	and.b32  	%r3989, %r38, -256;
	or.b32  	%r11591, %r11471, %r3989;
	bra.uni 	BB4_680;

BB4_611:
	setp.eq.s32	%p457, %r44, 2;
	@%p457 bra 	BB4_695;
	bra.uni 	BB4_612;

BB4_695:
	and.b32  	%r4027, %r39, -16711681;
	shl.b32 	%r4028, %r11471, 16;
	or.b32  	%r11590, %r4028, %r4027;
	bra.uni 	BB4_614;

BB4_652:
	setp.eq.s32	%p434, %r44, 18;
	@%p434 bra 	BB4_687;
	bra.uni 	BB4_653;

BB4_687:
	and.b32  	%r4003, %r35, -16711681;
	shl.b32 	%r4004, %r11471, 16;
	or.b32  	%r11594, %r4004, %r4003;
	bra.uni 	BB4_655;

BB4_628:
	setp.eq.s32	%p446, %r44, 10;
	@%p446 bra 	BB4_691;
	bra.uni 	BB4_629;

BB4_691:
	and.b32  	%r4015, %r41, -16711681;
	shl.b32 	%r4016, %r11471, 16;
	or.b32  	%r11588, %r4016, %r4015;
	bra.uni 	BB4_631;

BB4_669:
	setp.eq.s32	%p423, %r44, 26;
	@%p423 bra 	BB4_683;
	bra.uni 	BB4_670;

BB4_683:
	and.b32  	%r3991, %r37, -16711681;
	shl.b32 	%r3992, %r11471, 16;
	or.b32  	%r11592, %r3992, %r3991;
	bra.uni 	BB4_672;

BB4_619:
	setp.eq.s32	%p452, %r44, 6;
	@%p452 bra 	BB4_693;
	bra.uni 	BB4_620;

BB4_693:
	and.b32  	%r4021, %r40, -16711681;
	shl.b32 	%r4022, %r11471, 16;
	or.b32  	%r11589, %r4022, %r4021;
	bra.uni 	BB4_622;

BB4_660:
	setp.eq.s32	%p429, %r44, 22;
	@%p429 bra 	BB4_685;
	bra.uni 	BB4_661;

BB4_685:
	and.b32  	%r3997, %r36, -16711681;
	shl.b32 	%r3998, %r11471, 16;
	or.b32  	%r11593, %r3998, %r3997;
	bra.uni 	BB4_663;

BB4_636:
	setp.eq.s32	%p441, %r44, 14;
	@%p441 bra 	BB4_689;
	bra.uni 	BB4_637;

BB4_689:
	and.b32  	%r4009, %r42, -16711681;
	shl.b32 	%r4010, %r11471, 16;
	or.b32  	%r11587, %r4010, %r4009;
	bra.uni 	BB4_639;

BB4_677:
	setp.eq.s32	%p418, %r44, 30;
	@%p418 bra 	BB4_681;
	bra.uni 	BB4_678;

BB4_681:
	and.b32  	%r3985, %r38, -16711681;
	shl.b32 	%r3986, %r11471, 16;
	or.b32  	%r11591, %r3986, %r3985;
	bra.uni 	BB4_680;

BB4_904:
	setp.eq.s32	%p601, %r44, 17;
	@%p601 bra 	BB4_905;
	bra.uni 	BB4_768;

BB4_905:
	mov.u32 	%r4917, 64;
	prmt.b32 	%r4918, %r39, %r39, %r4917;
	mov.u32 	%r4919, 1040;
	prmt.b32 	%r4920, %r4918, %r39, %r4919;
	mov.u32 	%r4921, 16912;
	prmt.b32 	%r4922, %r4920, %r39, %r4921;
	or.b32  	%r11590, %r4922, %r11590;
	or.b32  	%r11589, %r4922, %r11589;
	or.b32  	%r11588, %r4922, %r11588;
	or.b32  	%r11587, %r4922, %r11587;
	or.b32  	%r11594, %r35, %r630;
	bra.uni 	BB4_762;

BB4_888:
	setp.eq.s32	%p613, %r44, 9;
	@%p613 bra 	BB4_889;
	bra.uni 	BB4_768;

BB4_889:
	mov.u32 	%r4977, 64;
	prmt.b32 	%r4978, %r39, %r39, %r4977;
	mov.u32 	%r4979, 1040;
	prmt.b32 	%r4980, %r4978, %r39, %r4979;
	mov.u32 	%r4981, 16912;
	prmt.b32 	%r4982, %r4980, %r39, %r4981;
	or.b32  	%r11590, %r4982, %r11590;
	or.b32  	%r11589, %r4982, %r11589;
	or.b32  	%r11588, %r11588, %r630;
	bra.uni 	BB4_768;

BB4_919:
	setp.eq.s32	%p590, %r44, 25;
	@%p590 bra 	BB4_934;
	bra.uni 	BB4_920;

BB4_934:
	mov.u32 	%r4857, 64;
	prmt.b32 	%r4858, %r39, %r39, %r4857;
	mov.u32 	%r4859, 1040;
	prmt.b32 	%r4860, %r4858, %r39, %r4859;
	mov.u32 	%r4861, 16912;
	prmt.b32 	%r4862, %r4860, %r39, %r4861;
	or.b32  	%r11590, %r4862, %r11590;
	or.b32  	%r11589, %r4862, %r11589;
	or.b32  	%r11588, %r4862, %r11588;
	or.b32  	%r11587, %r4862, %r11587;
	or.b32  	%r11594, %r4862, %r35;
	or.b32  	%r11593, %r4862, %r36;
	or.b32  	%r11592, %r37, %r630;
	mov.u32 	%r11591, %r38;
	bra.uni 	BB4_1552;

BB4_880:
	setp.eq.s32	%p619, %r44, 5;
	@%p619 bra 	BB4_881;
	bra.uni 	BB4_768;

BB4_881:
	mov.u32 	%r5007, 64;
	prmt.b32 	%r5008, %r39, %r39, %r5007;
	mov.u32 	%r5009, 1040;
	prmt.b32 	%r5010, %r5008, %r39, %r5009;
	mov.u32 	%r5011, 16912;
	prmt.b32 	%r5012, %r5010, %r39, %r5011;
	or.b32  	%r11590, %r5012, %r11590;
	or.b32  	%r11589, %r11589, %r630;
	bra.uni 	BB4_768;

BB4_911:
	setp.eq.s32	%p596, %r44, 21;
	@%p596 bra 	BB4_912;
	bra.uni 	BB4_768;

BB4_912:
	mov.u32 	%r4887, 64;
	prmt.b32 	%r4888, %r39, %r39, %r4887;
	mov.u32 	%r4889, 1040;
	prmt.b32 	%r4890, %r4888, %r39, %r4889;
	mov.u32 	%r4891, 16912;
	prmt.b32 	%r4892, %r4890, %r39, %r4891;
	or.b32  	%r11590, %r4892, %r11590;
	or.b32  	%r11589, %r4892, %r11589;
	or.b32  	%r11588, %r4892, %r11588;
	or.b32  	%r11587, %r4892, %r11587;
	or.b32  	%r11594, %r4892, %r35;
	or.b32  	%r11593, %r36, %r630;
	bra.uni 	BB4_731;

BB4_895:
	setp.eq.s32	%p608, %r44, 13;
	@%p608 bra 	BB4_896;
	bra.uni 	BB4_768;

BB4_896:
	mov.u32 	%r4947, 64;
	prmt.b32 	%r4948, %r39, %r39, %r4947;
	mov.u32 	%r4949, 1040;
	prmt.b32 	%r4950, %r4948, %r39, %r4949;
	mov.u32 	%r4951, 16912;
	prmt.b32 	%r4952, %r4950, %r39, %r4951;
	or.b32  	%r11590, %r4952, %r11590;
	or.b32  	%r11589, %r4952, %r11589;
	or.b32  	%r11588, %r4952, %r11588;
	or.b32  	%r11587, %r11587, %r630;
	bra.uni 	BB4_768;

BB4_926:
	setp.eq.s32	%p585, %r44, 29;
	@%p585 bra 	BB4_927;
	bra.uni 	BB4_920;

BB4_927:
	mov.u32 	%r4827, 64;
	prmt.b32 	%r4828, %r39, %r39, %r4827;
	mov.u32 	%r4829, 1040;
	prmt.b32 	%r4830, %r4828, %r39, %r4829;
	mov.u32 	%r4831, 16912;
	prmt.b32 	%r4832, %r4830, %r39, %r4831;
	or.b32  	%r11590, %r4832, %r11590;
	or.b32  	%r11589, %r4832, %r11589;
	or.b32  	%r11588, %r4832, %r11588;
	or.b32  	%r11587, %r4832, %r11587;
	or.b32  	%r11594, %r4832, %r35;
	or.b32  	%r11593, %r4832, %r36;
	or.b32  	%r11592, %r4832, %r37;
	or.b32  	%r11591, %r38, %r630;
	bra.uni 	BB4_1552;

BB4_907:
	setp.eq.s32	%p599, %r44, 19;
	@%p599 bra 	BB4_908;
	bra.uni 	BB4_768;

BB4_908:
	mov.u32 	%r4899, 64;
	prmt.b32 	%r4900, %r39, %r39, %r4899;
	mov.u32 	%r4901, 1040;
	prmt.b32 	%r4902, %r4900, %r39, %r4901;
	mov.u32 	%r4903, 16912;
	prmt.b32 	%r4904, %r4902, %r39, %r4903;
	or.b32  	%r11590, %r4904, %r11590;
	or.b32  	%r11589, %r4904, %r11589;
	or.b32  	%r11588, %r4904, %r11588;
	or.b32  	%r11587, %r4904, %r11587;
	shl.b32 	%r4905, %r630, 8;
	or.b32  	%r4906, %r4905, %r630;
	shl.b32 	%r4907, %r630, 16;
	or.b32  	%r4908, %r4906, %r4907;
	or.b32  	%r11594, %r4908, %r35;

BB4_762:
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11592, %r37;
	mov.u32 	%r11593, %r36;
	bra.uni 	BB4_1552;

BB4_891:
	setp.eq.s32	%p611, %r44, 11;
	@%p611 bra 	BB4_892;
	bra.uni 	BB4_768;

BB4_892:
	mov.u32 	%r4959, 64;
	prmt.b32 	%r4960, %r39, %r39, %r4959;
	mov.u32 	%r4961, 1040;
	prmt.b32 	%r4962, %r4960, %r39, %r4961;
	mov.u32 	%r4963, 16912;
	prmt.b32 	%r4964, %r4962, %r39, %r4963;
	or.b32  	%r11590, %r4964, %r11590;
	or.b32  	%r11589, %r4964, %r11589;
	shl.b32 	%r4965, %r630, 8;
	or.b32  	%r4966, %r4965, %r630;
	shl.b32 	%r4967, %r630, 16;
	or.b32  	%r4968, %r4966, %r4967;
	or.b32  	%r11588, %r4968, %r11588;
	bra.uni 	BB4_768;

BB4_922:
	setp.eq.s32	%p588, %r44, 27;
	@%p588 bra 	BB4_923;
	bra.uni 	BB4_920;

BB4_923:
	mov.u32 	%r4839, 64;
	prmt.b32 	%r4840, %r39, %r39, %r4839;
	mov.u32 	%r4841, 1040;
	prmt.b32 	%r4842, %r4840, %r39, %r4841;
	mov.u32 	%r4843, 16912;
	prmt.b32 	%r4844, %r4842, %r39, %r4843;
	or.b32  	%r11590, %r4844, %r11590;
	or.b32  	%r11589, %r4844, %r11589;
	or.b32  	%r11588, %r4844, %r11588;
	or.b32  	%r11587, %r4844, %r11587;
	or.b32  	%r11594, %r4844, %r35;
	or.b32  	%r11593, %r4844, %r36;
	shl.b32 	%r4845, %r630, 8;
	or.b32  	%r4846, %r4845, %r630;
	shl.b32 	%r4847, %r630, 16;
	or.b32  	%r4848, %r4846, %r4847;
	or.b32  	%r11592, %r4848, %r37;
	mov.u32 	%r11591, %r38;
	bra.uni 	BB4_1552;

BB4_883:
	setp.eq.s32	%p617, %r44, 7;
	@%p617 bra 	BB4_884;
	bra.uni 	BB4_768;

BB4_884:
	mov.u32 	%r4989, 64;
	prmt.b32 	%r4990, %r39, %r39, %r4989;
	mov.u32 	%r4991, 1040;
	prmt.b32 	%r4992, %r4990, %r39, %r4991;
	mov.u32 	%r4993, 16912;
	prmt.b32 	%r4994, %r4992, %r39, %r4993;
	or.b32  	%r11590, %r4994, %r11590;
	shl.b32 	%r4995, %r630, 8;
	or.b32  	%r4996, %r4995, %r630;
	shl.b32 	%r4997, %r630, 16;
	or.b32  	%r4998, %r4996, %r4997;
	or.b32  	%r11589, %r4998, %r11589;
	bra.uni 	BB4_768;

BB4_914:
	setp.eq.s32	%p594, %r44, 23;
	@%p594 bra 	BB4_915;
	bra.uni 	BB4_768;

BB4_915:
	mov.u32 	%r4869, 64;
	prmt.b32 	%r4870, %r39, %r39, %r4869;
	mov.u32 	%r4871, 1040;
	prmt.b32 	%r4872, %r4870, %r39, %r4871;
	mov.u32 	%r4873, 16912;
	prmt.b32 	%r4874, %r4872, %r39, %r4873;
	or.b32  	%r11590, %r4874, %r11590;
	or.b32  	%r11589, %r4874, %r11589;
	or.b32  	%r11588, %r4874, %r11588;
	or.b32  	%r11587, %r4874, %r11587;
	or.b32  	%r11594, %r4874, %r35;
	shl.b32 	%r4875, %r630, 8;
	or.b32  	%r4876, %r4875, %r630;
	shl.b32 	%r4877, %r630, 16;
	or.b32  	%r4878, %r4876, %r4877;
	or.b32  	%r11593, %r4878, %r36;
	bra.uni 	BB4_731;

BB4_898:
	setp.eq.s32	%p606, %r44, 15;
	@%p606 bra 	BB4_899;
	bra.uni 	BB4_768;

BB4_899:
	mov.u32 	%r4929, 64;
	prmt.b32 	%r4930, %r39, %r39, %r4929;
	mov.u32 	%r4931, 1040;
	prmt.b32 	%r4932, %r4930, %r39, %r4931;
	mov.u32 	%r4933, 16912;
	prmt.b32 	%r4934, %r4932, %r39, %r4933;
	or.b32  	%r11590, %r4934, %r11590;
	or.b32  	%r11589, %r4934, %r11589;
	or.b32  	%r11588, %r4934, %r11588;
	shl.b32 	%r4935, %r630, 8;
	or.b32  	%r4936, %r4935, %r630;
	shl.b32 	%r4937, %r630, 16;
	or.b32  	%r4938, %r4936, %r4937;
	or.b32  	%r11587, %r4938, %r11587;
	bra.uni 	BB4_768;

BB4_929:
	setp.ne.s32	%p583, %r44, 31;
	@%p583 bra 	BB4_920;

	mov.u32 	%r4809, 64;
	prmt.b32 	%r4810, %r39, %r39, %r4809;
	mov.u32 	%r4811, 1040;
	prmt.b32 	%r4812, %r4810, %r39, %r4811;
	mov.u32 	%r4813, 16912;
	prmt.b32 	%r4814, %r4812, %r39, %r4813;
	or.b32  	%r11590, %r4814, %r11590;
	or.b32  	%r11589, %r4814, %r11589;
	or.b32  	%r11588, %r4814, %r11588;
	or.b32  	%r11587, %r4814, %r11587;
	or.b32  	%r11594, %r4814, %r35;
	or.b32  	%r11593, %r4814, %r36;
	or.b32  	%r11592, %r4814, %r37;
	shl.b32 	%r4815, %r630, 8;
	or.b32  	%r4816, %r4815, %r630;
	shl.b32 	%r4817, %r630, 16;
	or.b32  	%r4818, %r4816, %r4817;
	or.b32  	%r11591, %r4818, %r38;
	bra.uni 	BB4_1552;

BB4_920:
	mov.u32 	%r11591, %r38;
	bra.uni 	BB4_769;

BB4_609:
	setp.eq.s32	%p460, %r44, 1;
	@%p460 bra 	BB4_610;
	bra.uni 	BB4_10;

BB4_610:
	and.b32  	%r4029, %r39, -65281;
	shl.b32 	%r4030, %r11471, 8;
	or.b32  	%r11590, %r4030, %r4029;
	bra.uni 	BB4_614;

BB4_650:
	setp.eq.s32	%p437, %r44, 17;
	@%p437 bra 	BB4_651;
	bra.uni 	BB4_10;

BB4_651:
	and.b32  	%r4005, %r35, -65281;
	shl.b32 	%r4006, %r11471, 8;
	or.b32  	%r11594, %r4006, %r4005;
	bra.uni 	BB4_655;

BB4_626:
	setp.eq.s32	%p449, %r44, 9;
	@%p449 bra 	BB4_627;
	bra.uni 	BB4_10;

BB4_627:
	and.b32  	%r4017, %r41, -65281;
	shl.b32 	%r4018, %r11471, 8;
	or.b32  	%r11588, %r4018, %r4017;
	bra.uni 	BB4_631;

BB4_667:
	setp.eq.s32	%p426, %r44, 25;
	@%p426 bra 	BB4_668;
	bra.uni 	BB4_10;

BB4_668:
	and.b32  	%r3993, %r37, -65281;
	shl.b32 	%r3994, %r11471, 8;
	or.b32  	%r11592, %r3994, %r3993;
	bra.uni 	BB4_672;

BB4_617:
	setp.eq.s32	%p455, %r44, 5;
	@%p455 bra 	BB4_618;
	bra.uni 	BB4_10;

BB4_618:
	and.b32  	%r4023, %r40, -65281;
	shl.b32 	%r4024, %r11471, 8;
	or.b32  	%r11589, %r4024, %r4023;
	bra.uni 	BB4_622;

BB4_658:
	setp.eq.s32	%p432, %r44, 21;
	@%p432 bra 	BB4_659;
	bra.uni 	BB4_10;

BB4_659:
	and.b32  	%r3999, %r36, -65281;
	shl.b32 	%r4000, %r11471, 8;
	or.b32  	%r11593, %r4000, %r3999;
	bra.uni 	BB4_663;

BB4_634:
	setp.eq.s32	%p444, %r44, 13;
	@%p444 bra 	BB4_635;
	bra.uni 	BB4_10;

BB4_635:
	and.b32  	%r4011, %r42, -65281;
	shl.b32 	%r4012, %r11471, 8;
	or.b32  	%r11587, %r4012, %r4011;
	bra.uni 	BB4_639;

BB4_675:
	setp.eq.s32	%p421, %r44, 29;
	@%p421 bra 	BB4_676;
	bra.uni 	BB4_10;

BB4_676:
	and.b32  	%r3987, %r38, -65281;
	shl.b32 	%r3988, %r11471, 8;
	or.b32  	%r11591, %r3988, %r3987;
	bra.uni 	BB4_680;

BB4_612:
	setp.eq.s32	%p458, %r44, 3;
	@%p458 bra 	BB4_613;
	bra.uni 	BB4_10;

BB4_613:
	and.b32  	%r4026, %r39, 16777215;
	prmt.b32 	%r11590, %r11471, %r4026, 1620;
	bra.uni 	BB4_614;

BB4_653:
	setp.eq.s32	%p435, %r44, 19;
	@%p435 bra 	BB4_654;
	bra.uni 	BB4_10;

BB4_654:
	and.b32  	%r4002, %r35, 16777215;
	prmt.b32 	%r11594, %r11471, %r4002, 1620;

BB4_655:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11592, %r37;
	mov.u32 	%r11593, %r36;
	bra.uni 	BB4_1551;

BB4_629:
	setp.eq.s32	%p447, %r44, 11;
	@%p447 bra 	BB4_630;
	bra.uni 	BB4_10;

BB4_630:
	and.b32  	%r4014, %r41, 16777215;
	prmt.b32 	%r11588, %r11471, %r4014, 1620;

BB4_631:
	mov.u32 	%r11587, %r42;
	bra.uni 	BB4_640;

BB4_670:
	setp.eq.s32	%p424, %r44, 27;
	@%p424 bra 	BB4_671;
	bra.uni 	BB4_10;

BB4_671:
	and.b32  	%r3990, %r37, 16777215;
	prmt.b32 	%r11592, %r11471, %r3990, 1620;

BB4_672:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	bra.uni 	BB4_644;

BB4_620:
	setp.eq.s32	%p453, %r44, 7;
	@%p453 bra 	BB4_621;
	bra.uni 	BB4_10;

BB4_621:
	and.b32  	%r4020, %r40, 16777215;
	prmt.b32 	%r11589, %r11471, %r4020, 1620;

BB4_622:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	bra.uni 	BB4_641;

BB4_661:
	setp.eq.s32	%p430, %r44, 23;
	@%p430 bra 	BB4_662;
	bra.uni 	BB4_10;

BB4_662:
	and.b32  	%r3996, %r36, 16777215;
	prmt.b32 	%r11593, %r11471, %r3996, 1620;

BB4_663:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11592, %r37;
	bra.uni 	BB4_645;

BB4_637:
	setp.eq.s32	%p442, %r44, 15;
	@%p442 bra 	BB4_638;
	bra.uni 	BB4_10;

BB4_638:
	and.b32  	%r4008, %r42, 16777215;
	prmt.b32 	%r11587, %r11471, %r4008, 1620;
	bra.uni 	BB4_639;

BB4_678:
	setp.ne.s32	%p419, %r44, 31;
	@%p419 bra 	BB4_10;

	and.b32  	%r3984, %r38, 16777215;
	prmt.b32 	%r11591, %r11471, %r3984, 1620;

BB4_680:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_643;

BB4_135:
	setp.eq.s32	%p172, %r44, 1;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p172 bra 	BB4_136;
	bra.uni 	BB4_213;

BB4_136:
	mov.u32 	%r3075, 24;
	// inline asm
	shf.r.wrap.b32 %r11433, %r37, %r38, %r3075;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r36, %r37, %r3075;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r35, %r36, %r3075;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r42, %r35, %r3075;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11437, %r41, %r42, %r3075;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11436, %r40, %r41, %r3075;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11435, %r39, %r40, %r3075;
	// inline asm
	mov.u32 	%r3073, 0;
	// inline asm
	shf.r.wrap.b32 %r11434, %r3073, %r39, %r3075;
	// inline asm
	bra.uni 	BB4_213;

BB4_167:
	setp.eq.s32	%p149, %r44, 17;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p149 bra 	BB4_168;
	bra.uni 	BB4_213;

BB4_168:
	mov.u32 	%r2731, 24;
	// inline asm
	shf.r.wrap.b32 %r11433, %r41, %r42, %r2731;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r40, %r41, %r2731;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r39, %r40, %r2731;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11430, %r11434, %r39, %r2731;
	// inline asm
	bra.uni 	BB4_199;

BB4_709:
	setp.eq.s32	%p495, %r34, 10;
	@%p495 bra 	BB4_710;
	bra.uni 	BB4_10;

BB4_710:
	shl.b32 	%r4145, %r41, 8;
	and.b32  	%r4146, %r4145, 65280;
	bfe.u32 	%r4147, %r41, 8, 8;
	or.b32  	%r11588, %r4146, %r4147;
	mov.u32 	%r11595, 10;
	bra.uni 	BB4_773;

BB4_150:
	setp.eq.s32	%p161, %r44, 9;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p161 bra 	BB4_151;
	bra.uni 	BB4_213;

BB4_151:
	mov.u32 	%r2887, 24;
	// inline asm
	shf.r.wrap.b32 %r11433, %r35, %r36, %r2887;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r42, %r35, %r2887;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r41, %r42, %r2887;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r40, %r41, %r2887;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11437, %r39, %r40, %r2887;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11436, %r11434, %r39, %r2887;
	// inline asm
	mov.u32 	%r11435, %r11434;
	bra.uni 	BB4_213;

BB4_738:
	setp.eq.s32	%p474, %r34, 25;
	@%p474 bra 	BB4_739;
	bra.uni 	BB4_10;

BB4_739:
	or.b32  	%r4065, %r36, %r37;
	and.b32  	%r4066, %r36, 16777215;
	prmt.b32 	%r11593, %r37, %r4066, 1620;
	shr.u32 	%r11592, %r4065, 24;
	mov.u32 	%r11595, 25;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11594, %r35;
	bra.uni 	BB4_1552;

BB4_182:
	setp.eq.s32	%p138, %r44, 25;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p138 bra 	BB4_183;
	bra.uni 	BB4_213;

BB4_183:
	mov.u32 	%r2607, 24;
	// inline asm
	shf.r.wrap.b32 %r11433, %r39, %r40, %r2607;
	// inline asm
	mov.u32 	%r11430, 0;
	// inline asm
	shf.r.wrap.b32 %r11432, %r11430, %r39, %r2607;
	// inline asm
	bra.uni 	BB4_187;

BB4_701:
	setp.eq.s32	%p501, %r34, 6;
	@%p501 bra 	BB4_702;
	bra.uni 	BB4_10;

BB4_702:
	shl.b32 	%r4166, %r40, 8;
	and.b32  	%r4167, %r4166, 65280;
	bfe.u32 	%r4168, %r40, 8, 8;
	or.b32  	%r11589, %r4167, %r4168;
	mov.u32 	%r11595, 6;
	bra.uni 	BB4_776;

BB4_142:
	setp.eq.s32	%p167, %r44, 5;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p167 bra 	BB4_143;
	bra.uni 	BB4_213;

BB4_143:
	mov.u32 	%r2977, 24;
	// inline asm
	shf.r.wrap.b32 %r11433, %r36, %r37, %r2977;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r35, %r36, %r2977;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r42, %r35, %r2977;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r41, %r42, %r2977;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11437, %r40, %r41, %r2977;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11436, %r39, %r40, %r2977;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11435, %r11434, %r39, %r2977;
	// inline asm
	bra.uni 	BB4_213;

BB4_729:
	setp.eq.s32	%p480, %r34, 21;
	@%p480 bra 	BB4_730;
	bra.uni 	BB4_10;

BB4_730:
	or.b32  	%r4086, %r35, %r36;
	and.b32  	%r4087, %r35, 16777215;
	prmt.b32 	%r11594, %r36, %r4087, 1620;
	shr.u32 	%r11593, %r4086, 24;
	mov.u32 	%r11595, 21;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;

BB4_731:
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11592, %r37;
	bra.uni 	BB4_1552;

BB4_174:
	setp.eq.s32	%p144, %r44, 21;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p144 bra 	BB4_175;
	bra.uni 	BB4_213;

BB4_175:
	mov.u32 	%r2665, 24;
	// inline asm
	shf.r.wrap.b32 %r11433, %r40, %r41, %r2665;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r39, %r40, %r2665;
	// inline asm
	mov.u32 	%r11430, 0;
	// inline asm
	shf.r.wrap.b32 %r11431, %r11430, %r39, %r2665;
	// inline asm
	bra.uni 	BB4_188;

BB4_716:
	setp.eq.s32	%p490, %r34, 14;
	@%p490 bra 	BB4_717;
	bra.uni 	BB4_10;

BB4_717:
	shl.b32 	%r4124, %r42, 8;
	and.b32  	%r4125, %r4124, 65280;
	bfe.u32 	%r4126, %r42, 8, 8;
	or.b32  	%r11587, %r4125, %r4126;
	mov.u32 	%r11595, 14;
	bra.uni 	BB4_765;

BB4_157:
	setp.eq.s32	%p156, %r44, 13;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p156 bra 	BB4_158;
	bra.uni 	BB4_213;

BB4_158:
	mov.u32 	%r2805, 24;
	// inline asm
	shf.r.wrap.b32 %r11433, %r42, %r35, %r2805;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r41, %r42, %r2805;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r40, %r41, %r2805;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r39, %r40, %r2805;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11437, %r11434, %r39, %r2805;
	// inline asm
	bra.uni 	BB4_162;

BB4_745:
	setp.eq.s32	%p469, %r34, 29;
	@%p469 bra 	BB4_746;
	bra.uni 	BB4_10;

BB4_746:
	or.b32  	%r4044, %r37, %r38;
	and.b32  	%r4045, %r37, 16777215;
	prmt.b32 	%r11592, %r38, %r4045, 1620;
	shr.u32 	%r11591, %r4044, 24;
	mov.u32 	%r11595, 29;
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_770;

BB4_191:
	setp.eq.s32	%p133, %r44, 29;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p133 bra 	BB4_192;
	bra.uni 	BB4_213;

BB4_192:
	mov.u32 	%r11430, 0;
	mov.u32 	%r2557, 24;
	// inline asm
	shf.r.wrap.b32 %r11433, %r11430, %r39, %r2557;
	// inline asm
	bra.uni 	BB4_196;

BB4_284:
	setp.eq.s32	%p221, %r44, 17;
	@%p221 bra 	BB4_285;
	bra.uni 	BB4_288;

BB4_285:
	mov.u32 	%r3329, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r41, %r42, %r3329;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r40, %r41, %r3329;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r39, %r40, %r3329;
	// inline asm
	mov.u32 	%r11454, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r11454, %r39, %r3329;
	// inline asm
	bra.uni 	BB4_319;

BB4_268:
	setp.eq.s32	%p233, %r44, 9;
	@%p233 bra 	BB4_269;
	bra.uni 	BB4_288;

BB4_269:
	mov.u32 	%r3485, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r35, %r36, %r3485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r42, %r35, %r3485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r41, %r42, %r3485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3474, %r40, %r41, %r3485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11454, %r39, %r40, %r3485;
	// inline asm
	mov.u32 	%r11456, 0;
	// inline asm
	shf.r.wrap.b32 %r11455, %r11456, %r39, %r3485;
	// inline asm
	mov.u32 	%r11457, %r11456;
	mov.u32 	%r39, %r3474;
	bra.uni 	BB4_335;

BB4_300:
	setp.eq.s32	%p210, %r44, 25;
	@%p210 bra 	BB4_301;
	bra.uni 	BB4_288;

BB4_301:
	mov.u32 	%r3205, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r39, %r40, %r3205;
	// inline asm
	mov.u32 	%r11454, 0;
	// inline asm
	shf.r.wrap.b32 %r37, %r11454, %r39, %r3205;
	// inline asm
	bra.uni 	BB4_305;

BB4_260:
	setp.eq.s32	%p239, %r44, 5;
	@%p239 bra 	BB4_261;
	bra.uni 	BB4_288;

BB4_261:
	mov.u32 	%r3575, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r36, %r37, %r3575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r35, %r36, %r3575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r42, %r35, %r3575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3560, %r41, %r42, %r3575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11454, %r40, %r41, %r3575;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11455, %r39, %r40, %r3575;
	// inline asm
	mov.u32 	%r11457, 0;
	// inline asm
	shf.r.wrap.b32 %r11456, %r11457, %r39, %r3575;
	// inline asm
	mov.u32 	%r39, %r3560;
	bra.uni 	BB4_335;

BB4_291:
	setp.eq.s32	%p216, %r44, 21;
	@%p216 bra 	BB4_292;
	bra.uni 	BB4_288;

BB4_292:
	mov.u32 	%r3263, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r40, %r41, %r3263;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r39, %r40, %r3263;
	// inline asm
	mov.u32 	%r11454, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r11454, %r39, %r3263;
	// inline asm
	bra.uni 	BB4_296;

BB4_275:
	setp.eq.s32	%p228, %r44, 13;
	@%p228 bra 	BB4_276;
	bra.uni 	BB4_288;

BB4_276:
	mov.u32 	%r3403, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r42, %r35, %r3403;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r37, %r41, %r42, %r3403;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r36, %r40, %r41, %r3403;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3396, %r39, %r40, %r3403;
	// inline asm
	mov.u32 	%r11455, 0;
	// inline asm
	shf.r.wrap.b32 %r11454, %r11455, %r39, %r3403;
	// inline asm
	mov.u32 	%r11456, %r11455;
	mov.u32 	%r11457, %r11455;
	mov.u32 	%r39, %r3396;
	bra.uni 	BB4_335;

BB4_308:
	setp.eq.s32	%p205, %r44, 29;
	@%p205 bra 	BB4_309;
	bra.uni 	BB4_288;

BB4_309:
	mov.u32 	%r11454, 0;
	mov.u32 	%r3155, 24;
	// inline asm
	shf.r.wrap.b32 %r38, %r11454, %r39, %r3155;
	// inline asm
	bra.uni 	BB4_331;

BB4_138:
	setp.eq.s32	%p170, %r44, 3;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p170 bra 	BB4_139;
	bra.uni 	BB4_213;

BB4_139:
	mov.u32 	%r3011, 8;
	// inline asm
	shf.r.wrap.b32 %r11433, %r37, %r38, %r3011;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r36, %r37, %r3011;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r35, %r36, %r3011;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r42, %r35, %r3011;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11437, %r41, %r42, %r3011;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11436, %r40, %r41, %r3011;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11435, %r39, %r40, %r3011;
	// inline asm
	mov.u32 	%r3009, 0;
	// inline asm
	shf.r.wrap.b32 %r11434, %r3009, %r39, %r3011;
	// inline asm
	bra.uni 	BB4_213;

BB4_170:
	setp.eq.s32	%p147, %r44, 19;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p147 bra 	BB4_171;
	bra.uni 	BB4_213;

BB4_171:
	mov.u32 	%r2691, 8;
	// inline asm
	shf.r.wrap.b32 %r11433, %r41, %r42, %r2691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r40, %r41, %r2691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r39, %r40, %r2691;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11430, %r11434, %r39, %r2691;
	// inline asm

BB4_199:
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	bra.uni 	BB4_213;

BB4_712:
	setp.eq.s32	%p493, %r34, 12;
	@%p493 bra 	BB4_713;
	bra.uni 	BB4_10;

BB4_713:
	and.b32  	%r4131, %r41, 65535;
	shl.b32 	%r4132, %r41, 8;
	and.b32  	%r4133, %r4132, -16777216;
	or.b32  	%r4134, %r4133, %r4131;
	shr.u32 	%r4135, %r41, 8;
	and.b32  	%r4136, %r4135, 16711680;
	or.b32  	%r11588, %r4134, %r4136;
	mov.u32 	%r11595, 12;

BB4_773:
	mov.u32 	%r11587, %r42;
	bra.uni 	BB4_766;

BB4_153:
	setp.eq.s32	%p159, %r44, 11;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p159 bra 	BB4_154;
	bra.uni 	BB4_213;

BB4_154:
	mov.u32 	%r2835, 8;
	// inline asm
	shf.r.wrap.b32 %r11433, %r35, %r36, %r2835;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r42, %r35, %r2835;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r41, %r42, %r2835;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r40, %r41, %r2835;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11437, %r39, %r40, %r2835;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11436, %r11434, %r39, %r2835;
	// inline asm
	mov.u32 	%r11435, %r11434;
	bra.uni 	BB4_213;

BB4_741:
	setp.eq.s32	%p472, %r34, 27;
	@%p472 bra 	BB4_742;
	bra.uni 	BB4_10;

BB4_742:
	and.b32  	%r4054, %r37, 255;
	shl.b32 	%r4055, %r37, 8;
	and.b32  	%r4056, %r4055, 16711680;
	or.b32  	%r4057, %r4056, %r4054;
	shr.u32 	%r4058, %r37, 8;
	and.b32  	%r4059, %r4058, 65280;
	or.b32  	%r11592, %r4057, %r4059;
	mov.u32 	%r11595, 27;

BB4_754:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	bra.uni 	BB4_770;

BB4_185:
	setp.eq.s32	%p136, %r44, 27;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p136 bra 	BB4_186;
	bra.uni 	BB4_213;

BB4_186:
	mov.u32 	%r2579, 8;
	// inline asm
	shf.r.wrap.b32 %r11433, %r39, %r40, %r2579;
	// inline asm
	mov.u32 	%r11430, 0;
	// inline asm
	shf.r.wrap.b32 %r11432, %r11430, %r39, %r2579;
	// inline asm

BB4_187:
	mov.u32 	%r11431, %r11430;
	bra.uni 	BB4_188;

BB4_704:
	setp.eq.s32	%p499, %r34, 8;
	@%p499 bra 	BB4_705;
	bra.uni 	BB4_10;

BB4_705:
	and.b32  	%r4152, %r40, 65535;
	shl.b32 	%r4153, %r40, 8;
	and.b32  	%r4154, %r4153, -16777216;
	or.b32  	%r4155, %r4154, %r4152;
	shr.u32 	%r4156, %r40, 8;
	and.b32  	%r4157, %r4156, 16711680;
	or.b32  	%r11589, %r4155, %r4157;
	mov.u32 	%r11595, 8;

BB4_776:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	bra.uni 	BB4_767;

BB4_145:
	setp.eq.s32	%p165, %r44, 7;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p165 bra 	BB4_146;
	bra.uni 	BB4_213;

BB4_146:
	mov.u32 	%r2919, 8;
	// inline asm
	shf.r.wrap.b32 %r11433, %r36, %r37, %r2919;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r35, %r36, %r2919;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r42, %r35, %r2919;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r41, %r42, %r2919;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11437, %r40, %r41, %r2919;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11436, %r39, %r40, %r2919;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11435, %r11434, %r39, %r2919;
	// inline asm
	bra.uni 	BB4_213;

BB4_733:
	setp.eq.s32	%p478, %r34, 23;
	@%p478 bra 	BB4_734;
	bra.uni 	BB4_10;

BB4_734:
	and.b32  	%r4075, %r36, 255;
	shl.b32 	%r4076, %r36, 8;
	and.b32  	%r4077, %r4076, 16711680;
	or.b32  	%r4078, %r4077, %r4075;
	shr.u32 	%r4079, %r36, 8;
	and.b32  	%r4080, %r4079, 65280;
	or.b32  	%r11593, %r4078, %r4080;
	mov.u32 	%r11595, 23;

BB4_757:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	mov.u32 	%r11591, %r38;
	mov.u32 	%r11592, %r37;
	mov.u32 	%r11594, %r35;
	bra.uni 	BB4_1552;

BB4_177:
	setp.eq.s32	%p142, %r44, 23;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p142 bra 	BB4_178;
	bra.uni 	BB4_213;

BB4_178:
	mov.u32 	%r2631, 8;
	// inline asm
	shf.r.wrap.b32 %r11433, %r40, %r41, %r2631;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r39, %r40, %r2631;
	// inline asm
	mov.u32 	%r11430, 0;
	// inline asm
	shf.r.wrap.b32 %r11431, %r11430, %r39, %r2631;
	// inline asm
	bra.uni 	BB4_188;

BB4_719:
	setp.eq.s32	%p488, %r34, 16;
	@%p488 bra 	BB4_720;
	bra.uni 	BB4_10;

BB4_720:
	and.b32  	%r4110, %r42, 65535;
	shl.b32 	%r4111, %r42, 8;
	and.b32  	%r4112, %r4111, -16777216;
	or.b32  	%r4113, %r4112, %r4110;
	shr.u32 	%r4114, %r42, 8;
	and.b32  	%r4115, %r4114, 16711680;
	or.b32  	%r11587, %r4113, %r4115;
	mov.u32 	%r11595, 16;
	bra.uni 	BB4_765;

BB4_160:
	setp.eq.s32	%p154, %r44, 15;
	mov.u32 	%r11430, %r11434;
	mov.u32 	%r11431, %r11434;
	mov.u32 	%r11432, %r11434;
	mov.u32 	%r11433, %r11434;
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	mov.u32 	%r11437, %r11434;
	@%p154 bra 	BB4_161;
	bra.uni 	BB4_213;

BB4_161:
	mov.u32 	%r2759, 8;
	// inline asm
	shf.r.wrap.b32 %r11433, %r42, %r35, %r2759;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11432, %r41, %r42, %r2759;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11431, %r40, %r41, %r2759;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11430, %r39, %r40, %r2759;
	// inline asm
	mov.u32 	%r11434, 0;
	// inline asm
	shf.r.wrap.b32 %r11437, %r11434, %r39, %r2759;
	// inline asm

BB4_162:
	mov.u32 	%r11435, %r11434;
	mov.u32 	%r11436, %r11434;
	bra.uni 	BB4_213;

BB4_748:
	setp.ne.s32	%p467, %r34, 31;
	@%p467 bra 	BB4_10;

	and.b32  	%r4033, %r38, 255;
	shl.b32 	%r4034, %r38, 8;
	and.b32  	%r4035, %r4034, 16711680;
	or.b32  	%r4036, %r4035, %r4033;
	shr.u32 	%r4037, %r38, 8;
	and.b32  	%r4038, %r4037, 65280;
	or.b32  	%r11591, %r4036, %r4038;
	mov.u32 	%r11595, 31;

BB4_751:
	mov.u32 	%r11587, %r42;
	mov.u32 	%r11588, %r41;
	mov.u32 	%r11589, %r40;
	mov.u32 	%r11590, %r39;
	bra.uni 	BB4_769;

BB4_10:
	mov.u32 	%r11587, %r42;

BB4_11:
	mov.u32 	%r11588, %r41;

BB4_12:
	mov.u32 	%r11589, %r40;

BB4_13:
	mov.u32 	%r11590, %r39;

BB4_14:
	mov.u32 	%r11591, %r38;

BB4_15:
	mov.u32 	%r11592, %r37;

BB4_16:
	mov.u32 	%r11593, %r36;

BB4_17:
	mov.u32 	%r11594, %r35;

BB4_1551:
	mov.u32 	%r11595, %r34;

BB4_1552:
	add.s32 	%r11420, %r11420, 1;
	shl.b64 	%rd166, %rd83, 7;
	add.s64 	%rd167, %rd88, %rd166;
	mul.wide.u32 	%rd168, %r11420, 4;
	add.s64 	%rd169, %rd167, %rd168;
	ld.global.u32 	%r11419, [%rd169];
	setp.ne.s32	%p1030, %r11419, 0;
	@%p1030 bra 	BB4_4;

BB4_1553:
	and.b32  	%r8924, %r11595, 3;
	mov.u32 	%r8925, 4;
	sub.s32 	%r8926, %r8925, %r8924;
	shl.b32 	%r8927, %r8926, 2;
	mov.u32 	%r8928, 1985229328;
	shr.u32 	%r8929, %r8928, %r8927;
	and.b32  	%r1799, %r8929, 65535;
	shr.u32 	%r8923, %r11595, 2;
	setp.gt.s32	%p1031, %r8923, 7;
	@%p1031 bra 	BB4_1569;

	setp.gt.s32	%p1043, %r8923, 3;
	@%p1043 bra 	BB4_1562;

	setp.gt.s32	%p1049, %r8923, 1;
	@%p1049 bra 	BB4_1559;

	setp.eq.s32	%p1052, %r8923, 0;
	@%p1052 bra 	BB4_1594;
	bra.uni 	BB4_1557;

BB4_1594:
	// inline asm
	prmt.b32 %r11608, %r23, %r24, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r22, %r23, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r21, %r22, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11605, %r20, %r21, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11606, %r19, %r20, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11607, %r18, %r19, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11600, %r17, %r18, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11601, %r16, %r17, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11602, %r15, %r16, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11603, %r14, %r15, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11596, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11597, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11598, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r9466, 0;
	// inline asm
	prmt.b32 %r11599, %r9466, %r11, %r1799;
	// inline asm
	bra.uni 	BB4_1595;

BB4_1569:
	setp.gt.s32	%p1032, %r8923, 11;
	@%p1032 bra 	BB4_1577;

	setp.gt.s32	%p1038, %r8923, 9;
	@%p1038 bra 	BB4_1574;

	setp.eq.s32	%p1041, %r8923, 8;
	@%p1041 bra 	BB4_1588;
	bra.uni 	BB4_1572;

BB4_1588:
	// inline asm
	prmt.b32 %r11608, %r15, %r16, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r14, %r15, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11605, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11606, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11596, 0;
	// inline asm
	prmt.b32 %r11607, %r11596, %r11, %r1799;
	// inline asm
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;
	mov.u32 	%r11600, %r11596;
	bra.uni 	BB4_1589;

BB4_1562:
	setp.gt.s32	%p1044, %r8923, 5;
	@%p1044 bra 	BB4_1566;

	setp.eq.s32	%p1047, %r8923, 4;
	@%p1047 bra 	BB4_1592;
	bra.uni 	BB4_1564;

BB4_1592:
	// inline asm
	prmt.b32 %r11608, %r19, %r20, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r18, %r19, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r17, %r18, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11605, %r16, %r17, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11606, %r15, %r16, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11607, %r14, %r15, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11600, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11601, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11602, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11596, 0;
	// inline asm
	prmt.b32 %r11603, %r11596, %r11, %r1799;
	// inline asm
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;
	bra.uni 	BB4_1595;

BB4_1577:
	setp.gt.s32	%p1033, %r8923, 13;
	@%p1033 bra 	BB4_1581;

	setp.eq.s32	%p1036, %r8923, 12;
	@%p1036 bra 	BB4_1584;
	bra.uni 	BB4_1579;

BB4_1584:
	// inline asm
	prmt.b32 %r11608, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11596, 0;
	// inline asm
	prmt.b32 %r11609, %r11596, %r11, %r1799;
	// inline asm
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;
	mov.u32 	%r11600, %r11596;
	mov.u32 	%r11601, %r11596;
	mov.u32 	%r11602, %r11596;
	mov.u32 	%r11603, %r11596;
	mov.u32 	%r11604, %r11596;
	bra.uni 	BB4_1585;

BB4_1559:
	setp.eq.s32	%p1050, %r8923, 2;
	@%p1050 bra 	BB4_1593;
	bra.uni 	BB4_1560;

BB4_1593:
	// inline asm
	prmt.b32 %r11608, %r21, %r22, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r20, %r21, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r19, %r20, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11605, %r18, %r19, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11606, %r17, %r18, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11607, %r16, %r17, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11600, %r15, %r16, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11601, %r14, %r15, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11602, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11603, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11596, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11598, 0;
	// inline asm
	prmt.b32 %r11597, %r11598, %r11, %r1799;
	// inline asm
	mov.u32 	%r11599, %r11598;
	bra.uni 	BB4_1595;

BB4_1574:
	setp.eq.s32	%p1039, %r8923, 10;
	@%p1039 bra 	BB4_1587;
	bra.uni 	BB4_1575;

BB4_1587:
	// inline asm
	prmt.b32 %r11608, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11596, 0;
	// inline asm
	prmt.b32 %r11605, %r11596, %r11, %r1799;
	// inline asm
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;
	mov.u32 	%r11600, %r11596;
	mov.u32 	%r11601, %r11596;
	mov.u32 	%r11602, %r11596;
	mov.u32 	%r11603, %r11596;
	bra.uni 	BB4_1586;

BB4_1566:
	setp.eq.s32	%p1045, %r8923, 6;
	@%p1045 bra 	BB4_1591;
	bra.uni 	BB4_1567;

BB4_1591:
	// inline asm
	prmt.b32 %r11608, %r17, %r18, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r16, %r17, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r15, %r16, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11605, %r14, %r15, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11606, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11607, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11600, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11596, 0;
	// inline asm
	prmt.b32 %r11601, %r11596, %r11, %r1799;
	// inline asm
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;
	bra.uni 	BB4_1590;

BB4_1581:
	setp.eq.s32	%p1034, %r8923, 14;
	@%p1034 bra 	BB4_1583;

	setp.ne.s32	%p1035, %r8923, 15;
	mov.u32 	%r11596, %r14;
	mov.u32 	%r11597, %r13;
	mov.u32 	%r11598, %r12;
	mov.u32 	%r11599, %r11;
	mov.u32 	%r11600, %r18;
	mov.u32 	%r11601, %r17;
	mov.u32 	%r11602, %r16;
	mov.u32 	%r11603, %r15;
	mov.u32 	%r11604, %r22;
	mov.u32 	%r11605, %r21;
	mov.u32 	%r11606, %r20;
	mov.u32 	%r11607, %r19;
	mov.u32 	%r11608, %r24;
	mov.u32 	%r11609, %r23;
	@%p1035 bra 	BB4_1595;

BB4_1583:
	mov.u32 	%r11596, 0;
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;
	mov.u32 	%r11600, %r11596;
	mov.u32 	%r11601, %r11596;
	mov.u32 	%r11602, %r11596;
	mov.u32 	%r11603, %r11596;
	mov.u32 	%r11604, %r11596;
	mov.u32 	%r11605, %r11596;
	mov.u32 	%r11606, %r11596;
	mov.u32 	%r11607, %r11596;
	mov.u32 	%r11608, %r11596;
	mov.u32 	%r11609, %r11596;
	bra.uni 	BB4_1595;

BB4_1557:
	setp.eq.s32	%p1053, %r8923, 1;
	mov.u32 	%r11596, %r14;
	mov.u32 	%r11597, %r13;
	mov.u32 	%r11598, %r12;
	mov.u32 	%r11599, %r11;
	mov.u32 	%r11600, %r18;
	mov.u32 	%r11601, %r17;
	mov.u32 	%r11602, %r16;
	mov.u32 	%r11603, %r15;
	mov.u32 	%r11604, %r22;
	mov.u32 	%r11605, %r21;
	mov.u32 	%r11606, %r20;
	mov.u32 	%r11607, %r19;
	mov.u32 	%r11608, %r24;
	mov.u32 	%r11609, %r23;
	@%p1053 bra 	BB4_1558;
	bra.uni 	BB4_1595;

BB4_1558:
	// inline asm
	prmt.b32 %r11608, %r22, %r23, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r21, %r22, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r20, %r21, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11605, %r19, %r20, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11606, %r18, %r19, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11607, %r17, %r18, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11600, %r16, %r17, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11601, %r15, %r16, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11602, %r14, %r15, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11603, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11596, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11597, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11599, 0;
	// inline asm
	prmt.b32 %r11598, %r11599, %r11, %r1799;
	// inline asm
	bra.uni 	BB4_1595;

BB4_1572:
	setp.eq.s32	%p1042, %r8923, 9;
	mov.u32 	%r11596, %r14;
	mov.u32 	%r11597, %r13;
	mov.u32 	%r11598, %r12;
	mov.u32 	%r11599, %r11;
	mov.u32 	%r11600, %r18;
	mov.u32 	%r11601, %r17;
	mov.u32 	%r11602, %r16;
	mov.u32 	%r11603, %r15;
	mov.u32 	%r11604, %r22;
	mov.u32 	%r11605, %r21;
	mov.u32 	%r11606, %r20;
	mov.u32 	%r11607, %r19;
	mov.u32 	%r11608, %r24;
	mov.u32 	%r11609, %r23;
	@%p1042 bra 	BB4_1573;
	bra.uni 	BB4_1595;

BB4_1573:
	// inline asm
	prmt.b32 %r11608, %r14, %r15, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11605, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11596, 0;
	// inline asm
	prmt.b32 %r11606, %r11596, %r11, %r1799;
	// inline asm
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;
	mov.u32 	%r11600, %r11596;
	mov.u32 	%r11601, %r11596;
	mov.u32 	%r11602, %r11596;
	mov.u32 	%r11603, %r11596;
	mov.u32 	%r11607, %r11596;
	bra.uni 	BB4_1595;

BB4_1564:
	setp.eq.s32	%p1048, %r8923, 5;
	mov.u32 	%r11596, %r14;
	mov.u32 	%r11597, %r13;
	mov.u32 	%r11598, %r12;
	mov.u32 	%r11599, %r11;
	mov.u32 	%r11600, %r18;
	mov.u32 	%r11601, %r17;
	mov.u32 	%r11602, %r16;
	mov.u32 	%r11603, %r15;
	mov.u32 	%r11604, %r22;
	mov.u32 	%r11605, %r21;
	mov.u32 	%r11606, %r20;
	mov.u32 	%r11607, %r19;
	mov.u32 	%r11608, %r24;
	mov.u32 	%r11609, %r23;
	@%p1048 bra 	BB4_1565;
	bra.uni 	BB4_1595;

BB4_1565:
	// inline asm
	prmt.b32 %r11608, %r18, %r19, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r17, %r18, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r16, %r17, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11605, %r15, %r16, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11606, %r14, %r15, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11607, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11600, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11601, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11596, 0;
	// inline asm
	prmt.b32 %r11602, %r11596, %r11, %r1799;
	// inline asm
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;
	mov.u32 	%r11603, %r11596;
	bra.uni 	BB4_1595;

BB4_1579:
	setp.eq.s32	%p1037, %r8923, 13;
	mov.u32 	%r11596, %r14;
	mov.u32 	%r11597, %r13;
	mov.u32 	%r11598, %r12;
	mov.u32 	%r11599, %r11;
	mov.u32 	%r11600, %r18;
	mov.u32 	%r11601, %r17;
	mov.u32 	%r11602, %r16;
	mov.u32 	%r11603, %r15;
	mov.u32 	%r11604, %r22;
	mov.u32 	%r11605, %r21;
	mov.u32 	%r11606, %r20;
	mov.u32 	%r11607, %r19;
	mov.u32 	%r11608, %r24;
	mov.u32 	%r11609, %r23;
	@%p1037 bra 	BB4_1580;
	bra.uni 	BB4_1595;

BB4_1580:
	mov.u32 	%r11596, 0;
	// inline asm
	prmt.b32 %r11608, %r11596, %r11, %r1799;
	// inline asm
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;
	mov.u32 	%r11600, %r11596;
	mov.u32 	%r11601, %r11596;
	mov.u32 	%r11602, %r11596;
	mov.u32 	%r11603, %r11596;
	mov.u32 	%r11604, %r11596;
	mov.u32 	%r11605, %r11596;
	mov.u32 	%r11606, %r11596;
	mov.u32 	%r11607, %r11596;
	mov.u32 	%r11609, %r11596;
	bra.uni 	BB4_1595;

BB4_1560:
	setp.eq.s32	%p1051, %r8923, 3;
	mov.u32 	%r11596, %r14;
	mov.u32 	%r11597, %r13;
	mov.u32 	%r11598, %r12;
	mov.u32 	%r11599, %r11;
	mov.u32 	%r11600, %r18;
	mov.u32 	%r11601, %r17;
	mov.u32 	%r11602, %r16;
	mov.u32 	%r11603, %r15;
	mov.u32 	%r11604, %r22;
	mov.u32 	%r11605, %r21;
	mov.u32 	%r11606, %r20;
	mov.u32 	%r11607, %r19;
	mov.u32 	%r11608, %r24;
	mov.u32 	%r11609, %r23;
	@%p1051 bra 	BB4_1561;
	bra.uni 	BB4_1595;

BB4_1561:
	// inline asm
	prmt.b32 %r11608, %r20, %r21, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r19, %r20, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r18, %r19, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11605, %r17, %r18, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11606, %r16, %r17, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11607, %r15, %r16, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11600, %r14, %r15, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11601, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11602, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11603, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11597, 0;
	// inline asm
	prmt.b32 %r11596, %r11597, %r11, %r1799;
	// inline asm
	mov.u32 	%r11598, %r11597;
	mov.u32 	%r11599, %r11597;
	bra.uni 	BB4_1595;

BB4_1575:
	setp.eq.s32	%p1040, %r8923, 11;
	mov.u32 	%r11596, %r14;
	mov.u32 	%r11597, %r13;
	mov.u32 	%r11598, %r12;
	mov.u32 	%r11599, %r11;
	mov.u32 	%r11600, %r18;
	mov.u32 	%r11601, %r17;
	mov.u32 	%r11602, %r16;
	mov.u32 	%r11603, %r15;
	mov.u32 	%r11604, %r22;
	mov.u32 	%r11605, %r21;
	mov.u32 	%r11606, %r20;
	mov.u32 	%r11607, %r19;
	mov.u32 	%r11608, %r24;
	mov.u32 	%r11609, %r23;
	@%p1040 bra 	BB4_1576;
	bra.uni 	BB4_1595;

BB4_1576:
	// inline asm
	prmt.b32 %r11608, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11596, 0;
	// inline asm
	prmt.b32 %r11604, %r11596, %r11, %r1799;
	// inline asm
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;
	mov.u32 	%r11600, %r11596;
	mov.u32 	%r11601, %r11596;
	mov.u32 	%r11602, %r11596;
	mov.u32 	%r11603, %r11596;

BB4_1585:
	mov.u32 	%r11605, %r11596;

BB4_1586:
	mov.u32 	%r11606, %r11596;
	mov.u32 	%r11607, %r11596;
	bra.uni 	BB4_1595;

BB4_1567:
	setp.eq.s32	%p1046, %r8923, 7;
	mov.u32 	%r11596, %r14;
	mov.u32 	%r11597, %r13;
	mov.u32 	%r11598, %r12;
	mov.u32 	%r11599, %r11;
	mov.u32 	%r11600, %r18;
	mov.u32 	%r11601, %r17;
	mov.u32 	%r11602, %r16;
	mov.u32 	%r11603, %r15;
	mov.u32 	%r11604, %r22;
	mov.u32 	%r11605, %r21;
	mov.u32 	%r11606, %r20;
	mov.u32 	%r11607, %r19;
	mov.u32 	%r11608, %r24;
	mov.u32 	%r11609, %r23;
	@%p1046 bra 	BB4_1568;
	bra.uni 	BB4_1595;

BB4_1568:
	// inline asm
	prmt.b32 %r11608, %r16, %r17, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11609, %r15, %r16, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11604, %r14, %r15, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11605, %r13, %r14, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11606, %r12, %r13, %r1799;
	// inline asm
	// inline asm
	prmt.b32 %r11607, %r11, %r12, %r1799;
	// inline asm
	mov.u32 	%r11596, 0;
	// inline asm
	prmt.b32 %r11600, %r11596, %r11, %r1799;
	// inline asm
	mov.u32 	%r11597, %r11596;
	mov.u32 	%r11598, %r11596;
	mov.u32 	%r11599, %r11596;

BB4_1589:
	mov.u32 	%r11601, %r11596;

BB4_1590:
	mov.u32 	%r11602, %r11596;
	mov.u32 	%r11603, %r11596;

BB4_1595:
	ld.const.u64 	%rd2813, [k_sha512+608];
	ld.const.u64 	%rd2812, [k_sha512+600];
	ld.const.u64 	%rd2811, [k_sha512+592];
	ld.const.u64 	%rd2810, [k_sha512+584];
	ld.const.u64 	%rd2809, [k_sha512+576];
	ld.const.u64 	%rd2808, [k_sha512+568];
	ld.const.u64 	%rd2807, [k_sha512+560];
	ld.const.u64 	%rd2806, [k_sha512+552];
	ld.const.u64 	%rd2805, [k_sha512+544];
	ld.const.u64 	%rd2804, [k_sha512+536];
	ld.const.u64 	%rd2803, [k_sha512+528];
	ld.const.u64 	%rd2802, [k_sha512+520];
	ld.const.u64 	%rd2801, [k_sha512+512];
	ld.const.u64 	%rd2800, [k_sha512+504];
	ld.const.u64 	%rd2799, [k_sha512+496];
	ld.const.u64 	%rd2798, [k_sha512+488];
	ld.const.u64 	%rd2797, [k_sha512+480];
	ld.const.u64 	%rd2796, [k_sha512+472];
	ld.const.u64 	%rd2795, [k_sha512+464];
	ld.const.u64 	%rd2794, [k_sha512+456];
	ld.const.u64 	%rd2793, [k_sha512+448];
	ld.const.u64 	%rd2792, [k_sha512+440];
	ld.const.u64 	%rd2791, [k_sha512+432];
	ld.const.u64 	%rd2790, [k_sha512+424];
	ld.const.u64 	%rd2789, [k_sha512+416];
	ld.const.u64 	%rd2788, [k_sha512+408];
	ld.const.u64 	%rd2787, [k_sha512+400];
	ld.const.u64 	%rd2786, [k_sha512+392];
	ld.const.u64 	%rd2785, [k_sha512+384];
	ld.const.u64 	%rd2784, [k_sha512+376];
	ld.const.u64 	%rd2783, [k_sha512+368];
	ld.const.u64 	%rd2782, [k_sha512+360];
	ld.const.u64 	%rd2781, [k_sha512+352];
	ld.const.u64 	%rd2780, [k_sha512+344];
	ld.const.u64 	%rd2779, [k_sha512+336];
	ld.const.u64 	%rd2778, [k_sha512+328];
	ld.const.u64 	%rd2777, [k_sha512+320];
	ld.const.u64 	%rd2776, [k_sha512+312];
	ld.const.u64 	%rd2775, [k_sha512+304];
	ld.const.u64 	%rd2774, [k_sha512+296];
	ld.const.u64 	%rd2773, [k_sha512+288];
	ld.const.u64 	%rd2772, [k_sha512+280];
	ld.const.u64 	%rd2771, [k_sha512+272];
	ld.const.u64 	%rd2770, [k_sha512+264];
	ld.const.u64 	%rd2769, [k_sha512+256];
	ld.const.u64 	%rd2768, [k_sha512+248];
	ld.const.u64 	%rd2767, [k_sha512+240];
	ld.const.u64 	%rd2766, [k_sha512+232];
	ld.const.u64 	%rd2765, [k_sha512+224];
	ld.const.u64 	%rd2764, [k_sha512+216];
	ld.const.u64 	%rd2763, [k_sha512+208];
	ld.const.u64 	%rd2762, [k_sha512+200];
	ld.const.u64 	%rd2761, [k_sha512+192];
	ld.const.u64 	%rd2760, [k_sha512+184];
	ld.const.u64 	%rd2759, [k_sha512+176];
	ld.const.u64 	%rd2758, [k_sha512+168];
	ld.const.u64 	%rd2757, [k_sha512+160];
	ld.const.u64 	%rd2756, [k_sha512+152];
	ld.const.u64 	%rd2755, [k_sha512+144];
	ld.const.u64 	%rd2754, [k_sha512+136];
	ld.const.u64 	%rd2753, [k_sha512+128];
	ld.const.u64 	%rd2752, [k_sha512+120];
	ld.const.u64 	%rd2751, [k_sha512+112];
	ld.const.u64 	%rd2750, [k_sha512+104];
	ld.const.u64 	%rd2749, [k_sha512+96];
	ld.const.u64 	%rd2748, [k_sha512+88];
	ld.const.u64 	%rd2747, [k_sha512+80];
	ld.const.u64 	%rd2746, [k_sha512+72];
	ld.const.u64 	%rd2745, [k_sha512+64];
	ld.const.u64 	%rd2744, [k_sha512+56];
	ld.const.u64 	%rd2743, [k_sha512+48];
	ld.const.u64 	%rd2742, [k_sha512+40];
	ld.const.u64 	%rd2741, [k_sha512+32];
	ld.const.u64 	%rd2740, [k_sha512+24];
	ld.const.u64 	%rd2739, [k_sha512+16];
	ld.const.u64 	%rd2738, [k_sha512+8];
	ld.const.u64 	%rd2737, [k_sha512];
	or.b32  	%r9469, %r11599, %r11590;
	or.b32  	%r9470, %r11598, %r11589;
	or.b32  	%r9471, %r11597, %r11588;
	or.b32  	%r9472, %r11596, %r11587;
	or.b32  	%r9473, %r11603, %r11594;
	or.b32  	%r9474, %r11602, %r11593;
	or.b32  	%r9475, %r11601, %r11592;
	or.b32  	%r9476, %r11600, %r11591;
	add.s32 	%r9477, %r11595, %r25;
	shr.u32 	%r9478, %r9469, 24;
	shr.u32 	%r9479, %r9469, 8;
	and.b32  	%r9480, %r9479, 65280;
	or.b32  	%r9481, %r9480, %r9478;
	shl.b32 	%r9482, %r9469, 24;
	shl.b32 	%r9483, %r9469, 8;
	and.b32  	%r9484, %r9483, 16711680;
	or.b32  	%r9485, %r9482, %r9484;
	or.b32  	%r9486, %r9485, %r9481;
	shr.u32 	%r9487, %r9470, 24;
	shr.u32 	%r9488, %r9470, 8;
	and.b32  	%r9489, %r9488, 65280;
	or.b32  	%r9490, %r9489, %r9487;
	shl.b32 	%r9491, %r9470, 24;
	shl.b32 	%r9492, %r9470, 8;
	and.b32  	%r9493, %r9492, 16711680;
	or.b32  	%r9494, %r9491, %r9493;
	or.b32  	%r9495, %r9494, %r9490;
	mov.b64	%rd170, {%r9495, %r9486};
	shr.u32 	%r9496, %r9471, 24;
	shr.u32 	%r9497, %r9471, 8;
	and.b32  	%r9498, %r9497, 65280;
	or.b32  	%r9499, %r9498, %r9496;
	shl.b32 	%r9500, %r9471, 24;
	shl.b32 	%r9501, %r9471, 8;
	and.b32  	%r9502, %r9501, 16711680;
	or.b32  	%r9503, %r9500, %r9502;
	or.b32  	%r9504, %r9503, %r9499;
	shr.u32 	%r9505, %r9472, 24;
	shr.u32 	%r9506, %r9472, 8;
	and.b32  	%r9507, %r9506, 65280;
	or.b32  	%r9508, %r9507, %r9505;
	shl.b32 	%r9509, %r9472, 24;
	shl.b32 	%r9510, %r9472, 8;
	and.b32  	%r9511, %r9510, 16711680;
	or.b32  	%r9512, %r9509, %r9511;
	or.b32  	%r9513, %r9512, %r9508;
	mov.b64	%rd171, {%r9513, %r9504};
	shr.u32 	%r9514, %r9473, 24;
	shr.u32 	%r9515, %r9473, 8;
	and.b32  	%r9516, %r9515, 65280;
	or.b32  	%r9517, %r9516, %r9514;
	shl.b32 	%r9518, %r9473, 24;
	shl.b32 	%r9519, %r9473, 8;
	and.b32  	%r9520, %r9519, 16711680;
	or.b32  	%r9521, %r9518, %r9520;
	or.b32  	%r9522, %r9521, %r9517;
	shr.u32 	%r9523, %r9474, 24;
	shr.u32 	%r9524, %r9474, 8;
	and.b32  	%r9525, %r9524, 65280;
	or.b32  	%r9526, %r9525, %r9523;
	shl.b32 	%r9527, %r9474, 24;
	shl.b32 	%r9528, %r9474, 8;
	and.b32  	%r9529, %r9528, 16711680;
	or.b32  	%r9530, %r9527, %r9529;
	or.b32  	%r9531, %r9530, %r9526;
	mov.b64	%rd172, {%r9531, %r9522};
	shr.u32 	%r9532, %r9475, 24;
	shr.u32 	%r9533, %r9475, 8;
	and.b32  	%r9534, %r9533, 65280;
	or.b32  	%r9535, %r9534, %r9532;
	shl.b32 	%r9536, %r9475, 24;
	shl.b32 	%r9537, %r9475, 8;
	and.b32  	%r9538, %r9537, 16711680;
	or.b32  	%r9539, %r9536, %r9538;
	or.b32  	%r9540, %r9539, %r9535;
	shr.u32 	%r9541, %r9476, 24;
	shr.u32 	%r9542, %r9476, 8;
	and.b32  	%r9543, %r9542, 65280;
	or.b32  	%r9544, %r9543, %r9541;
	shl.b32 	%r9545, %r9476, 24;
	shl.b32 	%r9546, %r9476, 8;
	and.b32  	%r9547, %r9546, 16711680;
	or.b32  	%r9548, %r9545, %r9547;
	or.b32  	%r9549, %r9548, %r9544;
	mov.b64	%rd173, {%r9549, %r9540};
	shr.u32 	%r9550, %r11607, 24;
	shr.u32 	%r9551, %r11607, 8;
	and.b32  	%r9552, %r9551, 65280;
	or.b32  	%r9553, %r9552, %r9550;
	shl.b32 	%r9554, %r11607, 24;
	shl.b32 	%r9555, %r11607, 8;
	and.b32  	%r9556, %r9555, 16711680;
	or.b32  	%r9557, %r9554, %r9556;
	or.b32  	%r9558, %r9557, %r9553;
	shr.u32 	%r9559, %r11606, 24;
	shr.u32 	%r9560, %r11606, 8;
	and.b32  	%r9561, %r9560, 65280;
	or.b32  	%r9562, %r9561, %r9559;
	shl.b32 	%r9563, %r11606, 24;
	shl.b32 	%r9564, %r11606, 8;
	and.b32  	%r9565, %r9564, 16711680;
	or.b32  	%r9566, %r9563, %r9565;
	or.b32  	%r9567, %r9566, %r9562;
	mov.b64	%rd174, {%r9567, %r9558};
	shr.u32 	%r9568, %r11605, 24;
	shr.u32 	%r9569, %r11605, 8;
	and.b32  	%r9570, %r9569, 65280;
	or.b32  	%r9571, %r9570, %r9568;
	shl.b32 	%r9572, %r11605, 24;
	shl.b32 	%r9573, %r11605, 8;
	and.b32  	%r9574, %r9573, 16711680;
	or.b32  	%r9575, %r9572, %r9574;
	or.b32  	%r9576, %r9575, %r9571;
	shr.u32 	%r9577, %r11604, 24;
	shr.u32 	%r9578, %r11604, 8;
	and.b32  	%r9579, %r9578, 65280;
	or.b32  	%r9580, %r9579, %r9577;
	shl.b32 	%r9581, %r11604, 24;
	shl.b32 	%r9582, %r11604, 8;
	and.b32  	%r9583, %r9582, 16711680;
	or.b32  	%r9584, %r9581, %r9583;
	or.b32  	%r9585, %r9584, %r9580;
	mov.b64	%rd175, {%r9585, %r9576};
	shr.u32 	%r9586, %r11609, 24;
	shr.u32 	%r9587, %r11609, 8;
	and.b32  	%r9588, %r9587, 65280;
	or.b32  	%r9589, %r9588, %r9586;
	shl.b32 	%r9590, %r11609, 24;
	shl.b32 	%r9591, %r11609, 8;
	and.b32  	%r9592, %r9591, 16711680;
	or.b32  	%r9593, %r9590, %r9592;
	or.b32  	%r9594, %r9593, %r9589;
	shr.u32 	%r9595, %r11608, 24;
	shr.u32 	%r9596, %r11608, 8;
	and.b32  	%r9597, %r9596, 65280;
	or.b32  	%r9598, %r9597, %r9595;
	shl.b32 	%r9599, %r11608, 24;
	shl.b32 	%r9600, %r11608, 8;
	and.b32  	%r9601, %r9600, 16711680;
	or.b32  	%r9602, %r9599, %r9601;
	or.b32  	%r9603, %r9602, %r9598;
	mov.b64	%rd176, {%r9603, %r9594};
	shl.b32 	%r9604, %r9477, 3;
	mov.u32 	%r9605, 0;
	mov.b64	%rd177, {%r9604, %r9605};
	add.s64 	%rd178, %rd170, %rd2737;
	add.s64 	%rd179, %rd178, %rd3;
	add.s64 	%rd180, %rd179, %rd4;
	add.s64 	%rd181, %rd179, 2357225248857953701;
	add.s64 	%rd182, %rd180, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9606,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9607}, %rd181;
	}
	shf.r.wrap.b32 	%r9608, %r9607, %r9606, 14;
	shf.r.wrap.b32 	%r9609, %r9606, %r9607, 14;
	mov.b64 	%rd183, {%r9609, %r9608};
	shf.r.wrap.b32 	%r9610, %r9607, %r9606, 18;
	shf.r.wrap.b32 	%r9611, %r9606, %r9607, 18;
	mov.b64 	%rd184, {%r9611, %r9610};
	xor.b64  	%rd185, %rd184, %rd183;
	shf.l.wrap.b32 	%r9612, %r9606, %r9607, 23;
	shf.l.wrap.b32 	%r9613, %r9607, %r9606, 23;
	mov.b64 	%rd186, {%r9613, %r9612};
	xor.b64  	%rd187, %rd185, %rd186;
	and.b64  	%rd188, %rd181, -3887949035690463538;
	xor.b64  	%rd189, %rd188, -7276294671716946913;
	add.s64 	%rd190, %rd171, %rd2738;
	add.s64 	%rd191, %rd190, %rd189;
	add.s64 	%rd192, %rd191, %rd187;
	xor.b64  	%rd193, %rd182, -4942790177534073029;
	xor.b64  	%rd194, %rd182, 7640891576956012808;
	and.b64  	%rd195, %rd194, %rd193;
	xor.b64  	%rd196, %rd195, %rd182;
	add.s64 	%rd197, %rd192, %rd196;
	add.s64 	%rd198, %rd192, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9614,%dummy}, %rd182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9615}, %rd182;
	}
	shf.r.wrap.b32 	%r9616, %r9615, %r9614, 28;
	shf.r.wrap.b32 	%r9617, %r9614, %r9615, 28;
	mov.b64 	%rd199, {%r9617, %r9616};
	shf.l.wrap.b32 	%r9618, %r9614, %r9615, 30;
	shf.l.wrap.b32 	%r9619, %r9615, %r9614, 30;
	mov.b64 	%rd200, {%r9619, %r9618};
	xor.b64  	%rd201, %rd200, %rd199;
	shf.l.wrap.b32 	%r9620, %r9614, %r9615, 25;
	shf.l.wrap.b32 	%r9621, %r9615, %r9614, 25;
	mov.b64 	%rd202, {%r9621, %r9620};
	xor.b64  	%rd203, %rd201, %rd202;
	add.s64 	%rd204, %rd197, %rd203;
	add.s64 	%rd205, %rd204, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9622,%dummy}, %rd198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9623}, %rd198;
	}
	shf.r.wrap.b32 	%r9624, %r9623, %r9622, 14;
	shf.r.wrap.b32 	%r9625, %r9622, %r9623, 14;
	mov.b64 	%rd206, {%r9625, %r9624};
	shf.r.wrap.b32 	%r9626, %r9623, %r9622, 18;
	shf.r.wrap.b32 	%r9627, %r9622, %r9623, 18;
	mov.b64 	%rd207, {%r9627, %r9626};
	xor.b64  	%rd208, %rd207, %rd206;
	shf.l.wrap.b32 	%r9628, %r9622, %r9623, 23;
	shf.l.wrap.b32 	%r9629, %r9623, %r9622, 23;
	mov.b64 	%rd209, {%r9629, %r9628};
	xor.b64  	%rd210, %rd208, %rd209;
	xor.b64  	%rd211, %rd181, 5840696475078001361;
	and.b64  	%rd212, %rd198, %rd211;
	xor.b64  	%rd213, %rd212, 5840696475078001361;
	add.s64 	%rd214, %rd172, %rd2739;
	add.s64 	%rd215, %rd214, %rd213;
	add.s64 	%rd216, %rd215, %rd210;
	xor.b64  	%rd217, %rd205, 7640891576956012808;
	xor.b64  	%rd218, %rd205, %rd182;
	and.b64  	%rd219, %rd218, %rd217;
	xor.b64  	%rd220, %rd219, %rd205;
	add.s64 	%rd221, %rd216, %rd220;
	add.s64 	%rd222, %rd216, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9630,%dummy}, %rd205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9631}, %rd205;
	}
	shf.r.wrap.b32 	%r9632, %r9631, %r9630, 28;
	shf.r.wrap.b32 	%r9633, %r9630, %r9631, 28;
	mov.b64 	%rd223, {%r9633, %r9632};
	shf.l.wrap.b32 	%r9634, %r9630, %r9631, 30;
	shf.l.wrap.b32 	%r9635, %r9631, %r9630, 30;
	mov.b64 	%rd224, {%r9635, %r9634};
	xor.b64  	%rd225, %rd224, %rd223;
	shf.l.wrap.b32 	%r9636, %r9630, %r9631, 25;
	shf.l.wrap.b32 	%r9637, %r9631, %r9630, 25;
	mov.b64 	%rd226, {%r9637, %r9636};
	xor.b64  	%rd227, %rd225, %rd226;
	add.s64 	%rd228, %rd221, %rd227;
	add.s64 	%rd229, %rd228, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9638,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9639}, %rd222;
	}
	shf.r.wrap.b32 	%r9640, %r9639, %r9638, 14;
	shf.r.wrap.b32 	%r9641, %r9638, %r9639, 14;
	mov.b64 	%rd230, {%r9641, %r9640};
	shf.r.wrap.b32 	%r9642, %r9639, %r9638, 18;
	shf.r.wrap.b32 	%r9643, %r9638, %r9639, 18;
	mov.b64 	%rd231, {%r9643, %r9642};
	xor.b64  	%rd232, %rd231, %rd230;
	shf.l.wrap.b32 	%r9644, %r9638, %r9639, 23;
	shf.l.wrap.b32 	%r9645, %r9639, %r9638, 23;
	mov.b64 	%rd233, {%r9645, %r9644};
	xor.b64  	%rd234, %rd232, %rd233;
	xor.b64  	%rd235, %rd198, %rd181;
	and.b64  	%rd236, %rd222, %rd235;
	xor.b64  	%rd237, %rd236, %rd181;
	add.s64 	%rd238, %rd173, %rd2740;
	add.s64 	%rd239, %rd238, %rd237;
	add.s64 	%rd240, %rd239, %rd234;
	xor.b64  	%rd241, %rd229, %rd182;
	xor.b64  	%rd242, %rd229, %rd205;
	and.b64  	%rd243, %rd242, %rd241;
	xor.b64  	%rd244, %rd243, %rd229;
	add.s64 	%rd245, %rd240, %rd244;
	add.s64 	%rd246, %rd240, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9646,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9647}, %rd229;
	}
	shf.r.wrap.b32 	%r9648, %r9647, %r9646, 28;
	shf.r.wrap.b32 	%r9649, %r9646, %r9647, 28;
	mov.b64 	%rd247, {%r9649, %r9648};
	shf.l.wrap.b32 	%r9650, %r9646, %r9647, 30;
	shf.l.wrap.b32 	%r9651, %r9647, %r9646, 30;
	mov.b64 	%rd248, {%r9651, %r9650};
	xor.b64  	%rd249, %rd248, %rd247;
	shf.l.wrap.b32 	%r9652, %r9646, %r9647, 25;
	shf.l.wrap.b32 	%r9653, %r9647, %r9646, 25;
	mov.b64 	%rd250, {%r9653, %r9652};
	xor.b64  	%rd251, %rd249, %rd250;
	add.s64 	%rd252, %rd245, %rd251;
	add.s64 	%rd253, %rd252, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9654,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9655}, %rd246;
	}
	shf.r.wrap.b32 	%r9656, %r9655, %r9654, 14;
	shf.r.wrap.b32 	%r9657, %r9654, %r9655, 14;
	mov.b64 	%rd254, {%r9657, %r9656};
	shf.r.wrap.b32 	%r9658, %r9655, %r9654, 18;
	shf.r.wrap.b32 	%r9659, %r9654, %r9655, 18;
	mov.b64 	%rd255, {%r9659, %r9658};
	xor.b64  	%rd256, %rd255, %rd254;
	shf.l.wrap.b32 	%r9660, %r9654, %r9655, 23;
	shf.l.wrap.b32 	%r9661, %r9655, %r9654, 23;
	mov.b64 	%rd257, {%r9661, %r9660};
	xor.b64  	%rd258, %rd256, %rd257;
	xor.b64  	%rd259, %rd222, %rd198;
	and.b64  	%rd260, %rd246, %rd259;
	xor.b64  	%rd261, %rd260, %rd198;
	add.s64 	%rd262, %rd181, %rd174;
	add.s64 	%rd263, %rd262, %rd2741;
	add.s64 	%rd264, %rd263, %rd261;
	add.s64 	%rd265, %rd264, %rd258;
	add.s64 	%rd266, %rd265, %rd182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9662,%dummy}, %rd253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9663}, %rd253;
	}
	shf.r.wrap.b32 	%r9664, %r9663, %r9662, 28;
	shf.r.wrap.b32 	%r9665, %r9662, %r9663, 28;
	mov.b64 	%rd267, {%r9665, %r9664};
	shf.l.wrap.b32 	%r9666, %r9662, %r9663, 30;
	shf.l.wrap.b32 	%r9667, %r9663, %r9662, 30;
	mov.b64 	%rd268, {%r9667, %r9666};
	xor.b64  	%rd269, %rd268, %rd267;
	shf.l.wrap.b32 	%r9668, %r9662, %r9663, 25;
	shf.l.wrap.b32 	%r9669, %r9663, %r9662, 25;
	mov.b64 	%rd270, {%r9669, %r9668};
	xor.b64  	%rd271, %rd269, %rd270;
	xor.b64  	%rd272, %rd253, %rd205;
	xor.b64  	%rd273, %rd253, %rd229;
	and.b64  	%rd274, %rd273, %rd272;
	xor.b64  	%rd275, %rd274, %rd253;
	add.s64 	%rd276, %rd265, %rd275;
	add.s64 	%rd277, %rd276, %rd271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9670,%dummy}, %rd266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9671}, %rd266;
	}
	shf.r.wrap.b32 	%r9672, %r9671, %r9670, 14;
	shf.r.wrap.b32 	%r9673, %r9670, %r9671, 14;
	mov.b64 	%rd278, {%r9673, %r9672};
	shf.r.wrap.b32 	%r9674, %r9671, %r9670, 18;
	shf.r.wrap.b32 	%r9675, %r9670, %r9671, 18;
	mov.b64 	%rd279, {%r9675, %r9674};
	xor.b64  	%rd280, %rd279, %rd278;
	shf.l.wrap.b32 	%r9676, %r9670, %r9671, 23;
	shf.l.wrap.b32 	%r9677, %r9671, %r9670, 23;
	mov.b64 	%rd281, {%r9677, %r9676};
	xor.b64  	%rd282, %rd280, %rd281;
	xor.b64  	%rd283, %rd246, %rd222;
	and.b64  	%rd284, %rd266, %rd283;
	xor.b64  	%rd285, %rd284, %rd222;
	add.s64 	%rd286, %rd198, %rd175;
	add.s64 	%rd287, %rd286, %rd2742;
	add.s64 	%rd288, %rd287, %rd285;
	add.s64 	%rd289, %rd288, %rd282;
	add.s64 	%rd290, %rd289, %rd205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9678,%dummy}, %rd277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9679}, %rd277;
	}
	shf.r.wrap.b32 	%r9680, %r9679, %r9678, 28;
	shf.r.wrap.b32 	%r9681, %r9678, %r9679, 28;
	mov.b64 	%rd291, {%r9681, %r9680};
	shf.l.wrap.b32 	%r9682, %r9678, %r9679, 30;
	shf.l.wrap.b32 	%r9683, %r9679, %r9678, 30;
	mov.b64 	%rd292, {%r9683, %r9682};
	xor.b64  	%rd293, %rd292, %rd291;
	shf.l.wrap.b32 	%r9684, %r9678, %r9679, 25;
	shf.l.wrap.b32 	%r9685, %r9679, %r9678, 25;
	mov.b64 	%rd294, {%r9685, %r9684};
	xor.b64  	%rd295, %rd293, %rd294;
	xor.b64  	%rd296, %rd277, %rd229;
	xor.b64  	%rd297, %rd277, %rd253;
	and.b64  	%rd298, %rd297, %rd296;
	xor.b64  	%rd299, %rd298, %rd277;
	add.s64 	%rd300, %rd289, %rd299;
	add.s64 	%rd301, %rd300, %rd295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9686,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9687}, %rd290;
	}
	shf.r.wrap.b32 	%r9688, %r9687, %r9686, 14;
	shf.r.wrap.b32 	%r9689, %r9686, %r9687, 14;
	mov.b64 	%rd302, {%r9689, %r9688};
	shf.r.wrap.b32 	%r9690, %r9687, %r9686, 18;
	shf.r.wrap.b32 	%r9691, %r9686, %r9687, 18;
	mov.b64 	%rd303, {%r9691, %r9690};
	xor.b64  	%rd304, %rd303, %rd302;
	shf.l.wrap.b32 	%r9692, %r9686, %r9687, 23;
	shf.l.wrap.b32 	%r9693, %r9687, %r9686, 23;
	mov.b64 	%rd305, {%r9693, %r9692};
	xor.b64  	%rd306, %rd304, %rd305;
	xor.b64  	%rd307, %rd266, %rd246;
	and.b64  	%rd308, %rd290, %rd307;
	xor.b64  	%rd309, %rd308, %rd246;
	add.s64 	%rd310, %rd222, %rd176;
	add.s64 	%rd311, %rd310, %rd2743;
	add.s64 	%rd312, %rd311, %rd309;
	add.s64 	%rd313, %rd312, %rd306;
	add.s64 	%rd314, %rd313, %rd229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9694,%dummy}, %rd301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9695}, %rd301;
	}
	shf.r.wrap.b32 	%r9696, %r9695, %r9694, 28;
	shf.r.wrap.b32 	%r9697, %r9694, %r9695, 28;
	mov.b64 	%rd315, {%r9697, %r9696};
	shf.l.wrap.b32 	%r9698, %r9694, %r9695, 30;
	shf.l.wrap.b32 	%r9699, %r9695, %r9694, 30;
	mov.b64 	%rd316, {%r9699, %r9698};
	xor.b64  	%rd317, %rd316, %rd315;
	shf.l.wrap.b32 	%r9700, %r9694, %r9695, 25;
	shf.l.wrap.b32 	%r9701, %r9695, %r9694, 25;
	mov.b64 	%rd318, {%r9701, %r9700};
	xor.b64  	%rd319, %rd317, %rd318;
	xor.b64  	%rd320, %rd301, %rd253;
	xor.b64  	%rd321, %rd301, %rd277;
	and.b64  	%rd322, %rd321, %rd320;
	xor.b64  	%rd323, %rd322, %rd301;
	add.s64 	%rd324, %rd313, %rd323;
	add.s64 	%rd325, %rd324, %rd319;
	add.s64 	%rd326, %rd2744, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9702,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9703}, %rd314;
	}
	shf.r.wrap.b32 	%r9704, %r9703, %r9702, 14;
	shf.r.wrap.b32 	%r9705, %r9702, %r9703, 14;
	mov.b64 	%rd327, {%r9705, %r9704};
	shf.r.wrap.b32 	%r9706, %r9703, %r9702, 18;
	shf.r.wrap.b32 	%r9707, %r9702, %r9703, 18;
	mov.b64 	%rd328, {%r9707, %r9706};
	xor.b64  	%rd329, %rd328, %rd327;
	shf.l.wrap.b32 	%r9708, %r9702, %r9703, 23;
	shf.l.wrap.b32 	%r9709, %r9703, %r9702, 23;
	mov.b64 	%rd330, {%r9709, %r9708};
	xor.b64  	%rd331, %rd329, %rd330;
	xor.b64  	%rd332, %rd290, %rd266;
	and.b64  	%rd333, %rd314, %rd332;
	xor.b64  	%rd334, %rd333, %rd266;
	add.s64 	%rd335, %rd326, %rd334;
	add.s64 	%rd336, %rd335, %rd331;
	add.s64 	%rd337, %rd336, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9710,%dummy}, %rd325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9711}, %rd325;
	}
	shf.r.wrap.b32 	%r9712, %r9711, %r9710, 28;
	shf.r.wrap.b32 	%r9713, %r9710, %r9711, 28;
	mov.b64 	%rd338, {%r9713, %r9712};
	shf.l.wrap.b32 	%r9714, %r9710, %r9711, 30;
	shf.l.wrap.b32 	%r9715, %r9711, %r9710, 30;
	mov.b64 	%rd339, {%r9715, %r9714};
	xor.b64  	%rd340, %rd339, %rd338;
	shf.l.wrap.b32 	%r9716, %r9710, %r9711, 25;
	shf.l.wrap.b32 	%r9717, %r9711, %r9710, 25;
	mov.b64 	%rd341, {%r9717, %r9716};
	xor.b64  	%rd342, %rd340, %rd341;
	xor.b64  	%rd343, %rd325, %rd277;
	xor.b64  	%rd344, %rd325, %rd301;
	and.b64  	%rd345, %rd344, %rd343;
	xor.b64  	%rd346, %rd345, %rd325;
	add.s64 	%rd347, %rd336, %rd346;
	add.s64 	%rd348, %rd347, %rd342;
	add.s64 	%rd349, %rd2745, %rd266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9718,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9719}, %rd337;
	}
	shf.r.wrap.b32 	%r9720, %r9719, %r9718, 14;
	shf.r.wrap.b32 	%r9721, %r9718, %r9719, 14;
	mov.b64 	%rd350, {%r9721, %r9720};
	shf.r.wrap.b32 	%r9722, %r9719, %r9718, 18;
	shf.r.wrap.b32 	%r9723, %r9718, %r9719, 18;
	mov.b64 	%rd351, {%r9723, %r9722};
	xor.b64  	%rd352, %rd351, %rd350;
	shf.l.wrap.b32 	%r9724, %r9718, %r9719, 23;
	shf.l.wrap.b32 	%r9725, %r9719, %r9718, 23;
	mov.b64 	%rd353, {%r9725, %r9724};
	xor.b64  	%rd354, %rd352, %rd353;
	xor.b64  	%rd355, %rd314, %rd290;
	and.b64  	%rd356, %rd337, %rd355;
	xor.b64  	%rd357, %rd356, %rd290;
	add.s64 	%rd358, %rd349, %rd357;
	add.s64 	%rd359, %rd358, %rd354;
	add.s64 	%rd360, %rd359, %rd277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9726,%dummy}, %rd348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9727}, %rd348;
	}
	shf.r.wrap.b32 	%r9728, %r9727, %r9726, 28;
	shf.r.wrap.b32 	%r9729, %r9726, %r9727, 28;
	mov.b64 	%rd361, {%r9729, %r9728};
	shf.l.wrap.b32 	%r9730, %r9726, %r9727, 30;
	shf.l.wrap.b32 	%r9731, %r9727, %r9726, 30;
	mov.b64 	%rd362, {%r9731, %r9730};
	xor.b64  	%rd363, %rd362, %rd361;
	shf.l.wrap.b32 	%r9732, %r9726, %r9727, 25;
	shf.l.wrap.b32 	%r9733, %r9727, %r9726, 25;
	mov.b64 	%rd364, {%r9733, %r9732};
	xor.b64  	%rd365, %rd363, %rd364;
	xor.b64  	%rd366, %rd348, %rd301;
	xor.b64  	%rd367, %rd348, %rd325;
	and.b64  	%rd368, %rd367, %rd366;
	xor.b64  	%rd369, %rd368, %rd348;
	add.s64 	%rd370, %rd359, %rd369;
	add.s64 	%rd371, %rd370, %rd365;
	add.s64 	%rd372, %rd2746, %rd290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9734,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9735}, %rd360;
	}
	shf.r.wrap.b32 	%r9736, %r9735, %r9734, 14;
	shf.r.wrap.b32 	%r9737, %r9734, %r9735, 14;
	mov.b64 	%rd373, {%r9737, %r9736};
	shf.r.wrap.b32 	%r9738, %r9735, %r9734, 18;
	shf.r.wrap.b32 	%r9739, %r9734, %r9735, 18;
	mov.b64 	%rd374, {%r9739, %r9738};
	xor.b64  	%rd375, %rd374, %rd373;
	shf.l.wrap.b32 	%r9740, %r9734, %r9735, 23;
	shf.l.wrap.b32 	%r9741, %r9735, %r9734, 23;
	mov.b64 	%rd376, {%r9741, %r9740};
	xor.b64  	%rd377, %rd375, %rd376;
	xor.b64  	%rd378, %rd337, %rd314;
	and.b64  	%rd379, %rd360, %rd378;
	xor.b64  	%rd380, %rd379, %rd314;
	add.s64 	%rd381, %rd372, %rd380;
	add.s64 	%rd382, %rd381, %rd377;
	add.s64 	%rd383, %rd382, %rd301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9742,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9743}, %rd371;
	}
	shf.r.wrap.b32 	%r9744, %r9743, %r9742, 28;
	shf.r.wrap.b32 	%r9745, %r9742, %r9743, 28;
	mov.b64 	%rd384, {%r9745, %r9744};
	shf.l.wrap.b32 	%r9746, %r9742, %r9743, 30;
	shf.l.wrap.b32 	%r9747, %r9743, %r9742, 30;
	mov.b64 	%rd385, {%r9747, %r9746};
	xor.b64  	%rd386, %rd385, %rd384;
	shf.l.wrap.b32 	%r9748, %r9742, %r9743, 25;
	shf.l.wrap.b32 	%r9749, %r9743, %r9742, 25;
	mov.b64 	%rd387, {%r9749, %r9748};
	xor.b64  	%rd388, %rd386, %rd387;
	xor.b64  	%rd389, %rd371, %rd325;
	xor.b64  	%rd390, %rd371, %rd348;
	and.b64  	%rd391, %rd390, %rd389;
	xor.b64  	%rd392, %rd391, %rd371;
	add.s64 	%rd393, %rd382, %rd392;
	add.s64 	%rd394, %rd393, %rd388;
	add.s64 	%rd395, %rd2747, %rd314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9750,%dummy}, %rd383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9751}, %rd383;
	}
	shf.r.wrap.b32 	%r9752, %r9751, %r9750, 14;
	shf.r.wrap.b32 	%r9753, %r9750, %r9751, 14;
	mov.b64 	%rd396, {%r9753, %r9752};
	shf.r.wrap.b32 	%r9754, %r9751, %r9750, 18;
	shf.r.wrap.b32 	%r9755, %r9750, %r9751, 18;
	mov.b64 	%rd397, {%r9755, %r9754};
	xor.b64  	%rd398, %rd397, %rd396;
	shf.l.wrap.b32 	%r9756, %r9750, %r9751, 23;
	shf.l.wrap.b32 	%r9757, %r9751, %r9750, 23;
	mov.b64 	%rd399, {%r9757, %r9756};
	xor.b64  	%rd400, %rd398, %rd399;
	xor.b64  	%rd401, %rd360, %rd337;
	and.b64  	%rd402, %rd383, %rd401;
	xor.b64  	%rd403, %rd402, %rd337;
	add.s64 	%rd404, %rd395, %rd403;
	add.s64 	%rd405, %rd404, %rd400;
	add.s64 	%rd406, %rd405, %rd325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9758,%dummy}, %rd394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9759}, %rd394;
	}
	shf.r.wrap.b32 	%r9760, %r9759, %r9758, 28;
	shf.r.wrap.b32 	%r9761, %r9758, %r9759, 28;
	mov.b64 	%rd407, {%r9761, %r9760};
	shf.l.wrap.b32 	%r9762, %r9758, %r9759, 30;
	shf.l.wrap.b32 	%r9763, %r9759, %r9758, 30;
	mov.b64 	%rd408, {%r9763, %r9762};
	xor.b64  	%rd409, %rd408, %rd407;
	shf.l.wrap.b32 	%r9764, %r9758, %r9759, 25;
	shf.l.wrap.b32 	%r9765, %r9759, %r9758, 25;
	mov.b64 	%rd410, {%r9765, %r9764};
	xor.b64  	%rd411, %rd409, %rd410;
	xor.b64  	%rd412, %rd394, %rd348;
	xor.b64  	%rd413, %rd394, %rd371;
	and.b64  	%rd414, %rd413, %rd412;
	xor.b64  	%rd415, %rd414, %rd394;
	add.s64 	%rd416, %rd405, %rd415;
	add.s64 	%rd417, %rd416, %rd411;
	add.s64 	%rd418, %rd2748, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9766,%dummy}, %rd406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9767}, %rd406;
	}
	shf.r.wrap.b32 	%r9768, %r9767, %r9766, 14;
	shf.r.wrap.b32 	%r9769, %r9766, %r9767, 14;
	mov.b64 	%rd419, {%r9769, %r9768};
	shf.r.wrap.b32 	%r9770, %r9767, %r9766, 18;
	shf.r.wrap.b32 	%r9771, %r9766, %r9767, 18;
	mov.b64 	%rd420, {%r9771, %r9770};
	xor.b64  	%rd421, %rd420, %rd419;
	shf.l.wrap.b32 	%r9772, %r9766, %r9767, 23;
	shf.l.wrap.b32 	%r9773, %r9767, %r9766, 23;
	mov.b64 	%rd422, {%r9773, %r9772};
	xor.b64  	%rd423, %rd421, %rd422;
	xor.b64  	%rd424, %rd383, %rd360;
	and.b64  	%rd425, %rd406, %rd424;
	xor.b64  	%rd426, %rd425, %rd360;
	add.s64 	%rd427, %rd418, %rd426;
	add.s64 	%rd428, %rd427, %rd423;
	add.s64 	%rd429, %rd428, %rd348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9774,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9775}, %rd417;
	}
	shf.r.wrap.b32 	%r9776, %r9775, %r9774, 28;
	shf.r.wrap.b32 	%r9777, %r9774, %r9775, 28;
	mov.b64 	%rd430, {%r9777, %r9776};
	shf.l.wrap.b32 	%r9778, %r9774, %r9775, 30;
	shf.l.wrap.b32 	%r9779, %r9775, %r9774, 30;
	mov.b64 	%rd431, {%r9779, %r9778};
	xor.b64  	%rd432, %rd431, %rd430;
	shf.l.wrap.b32 	%r9780, %r9774, %r9775, 25;
	shf.l.wrap.b32 	%r9781, %r9775, %r9774, 25;
	mov.b64 	%rd433, {%r9781, %r9780};
	xor.b64  	%rd434, %rd432, %rd433;
	xor.b64  	%rd435, %rd417, %rd371;
	xor.b64  	%rd436, %rd417, %rd394;
	and.b64  	%rd437, %rd436, %rd435;
	xor.b64  	%rd438, %rd437, %rd417;
	add.s64 	%rd439, %rd428, %rd438;
	add.s64 	%rd440, %rd439, %rd434;
	add.s64 	%rd441, %rd2749, %rd360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9782,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9783}, %rd429;
	}
	shf.r.wrap.b32 	%r9784, %r9783, %r9782, 14;
	shf.r.wrap.b32 	%r9785, %r9782, %r9783, 14;
	mov.b64 	%rd442, {%r9785, %r9784};
	shf.r.wrap.b32 	%r9786, %r9783, %r9782, 18;
	shf.r.wrap.b32 	%r9787, %r9782, %r9783, 18;
	mov.b64 	%rd443, {%r9787, %r9786};
	xor.b64  	%rd444, %rd443, %rd442;
	shf.l.wrap.b32 	%r9788, %r9782, %r9783, 23;
	shf.l.wrap.b32 	%r9789, %r9783, %r9782, 23;
	mov.b64 	%rd445, {%r9789, %r9788};
	xor.b64  	%rd446, %rd444, %rd445;
	xor.b64  	%rd447, %rd406, %rd383;
	and.b64  	%rd448, %rd429, %rd447;
	xor.b64  	%rd449, %rd448, %rd383;
	add.s64 	%rd450, %rd441, %rd449;
	add.s64 	%rd451, %rd450, %rd446;
	add.s64 	%rd452, %rd451, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9790,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9791}, %rd440;
	}
	shf.r.wrap.b32 	%r9792, %r9791, %r9790, 28;
	shf.r.wrap.b32 	%r9793, %r9790, %r9791, 28;
	mov.b64 	%rd453, {%r9793, %r9792};
	shf.l.wrap.b32 	%r9794, %r9790, %r9791, 30;
	shf.l.wrap.b32 	%r9795, %r9791, %r9790, 30;
	mov.b64 	%rd454, {%r9795, %r9794};
	xor.b64  	%rd455, %rd454, %rd453;
	shf.l.wrap.b32 	%r9796, %r9790, %r9791, 25;
	shf.l.wrap.b32 	%r9797, %r9791, %r9790, 25;
	mov.b64 	%rd456, {%r9797, %r9796};
	xor.b64  	%rd457, %rd455, %rd456;
	xor.b64  	%rd458, %rd440, %rd394;
	xor.b64  	%rd459, %rd440, %rd417;
	and.b64  	%rd460, %rd459, %rd458;
	xor.b64  	%rd461, %rd460, %rd440;
	add.s64 	%rd462, %rd451, %rd461;
	add.s64 	%rd463, %rd462, %rd457;
	add.s64 	%rd464, %rd2750, %rd383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9798,%dummy}, %rd452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9799}, %rd452;
	}
	shf.r.wrap.b32 	%r9800, %r9799, %r9798, 14;
	shf.r.wrap.b32 	%r9801, %r9798, %r9799, 14;
	mov.b64 	%rd465, {%r9801, %r9800};
	shf.r.wrap.b32 	%r9802, %r9799, %r9798, 18;
	shf.r.wrap.b32 	%r9803, %r9798, %r9799, 18;
	mov.b64 	%rd466, {%r9803, %r9802};
	xor.b64  	%rd467, %rd466, %rd465;
	shf.l.wrap.b32 	%r9804, %r9798, %r9799, 23;
	shf.l.wrap.b32 	%r9805, %r9799, %r9798, 23;
	mov.b64 	%rd468, {%r9805, %r9804};
	xor.b64  	%rd469, %rd467, %rd468;
	xor.b64  	%rd470, %rd429, %rd406;
	and.b64  	%rd471, %rd452, %rd470;
	xor.b64  	%rd472, %rd471, %rd406;
	add.s64 	%rd473, %rd464, %rd472;
	add.s64 	%rd474, %rd473, %rd469;
	add.s64 	%rd475, %rd474, %rd394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9806,%dummy}, %rd463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9807}, %rd463;
	}
	shf.r.wrap.b32 	%r9808, %r9807, %r9806, 28;
	shf.r.wrap.b32 	%r9809, %r9806, %r9807, 28;
	mov.b64 	%rd476, {%r9809, %r9808};
	shf.l.wrap.b32 	%r9810, %r9806, %r9807, 30;
	shf.l.wrap.b32 	%r9811, %r9807, %r9806, 30;
	mov.b64 	%rd477, {%r9811, %r9810};
	xor.b64  	%rd478, %rd477, %rd476;
	shf.l.wrap.b32 	%r9812, %r9806, %r9807, 25;
	shf.l.wrap.b32 	%r9813, %r9807, %r9806, 25;
	mov.b64 	%rd479, {%r9813, %r9812};
	xor.b64  	%rd480, %rd478, %rd479;
	xor.b64  	%rd481, %rd463, %rd417;
	xor.b64  	%rd482, %rd463, %rd440;
	and.b64  	%rd483, %rd482, %rd481;
	xor.b64  	%rd484, %rd483, %rd463;
	add.s64 	%rd485, %rd474, %rd484;
	add.s64 	%rd486, %rd485, %rd480;
	add.s64 	%rd487, %rd2751, %rd406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9814,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9815}, %rd475;
	}
	shf.r.wrap.b32 	%r9816, %r9815, %r9814, 14;
	shf.r.wrap.b32 	%r9817, %r9814, %r9815, 14;
	mov.b64 	%rd488, {%r9817, %r9816};
	shf.r.wrap.b32 	%r9818, %r9815, %r9814, 18;
	shf.r.wrap.b32 	%r9819, %r9814, %r9815, 18;
	mov.b64 	%rd489, {%r9819, %r9818};
	xor.b64  	%rd490, %rd489, %rd488;
	shf.l.wrap.b32 	%r9820, %r9814, %r9815, 23;
	shf.l.wrap.b32 	%r9821, %r9815, %r9814, 23;
	mov.b64 	%rd491, {%r9821, %r9820};
	xor.b64  	%rd492, %rd490, %rd491;
	xor.b64  	%rd493, %rd452, %rd429;
	and.b64  	%rd494, %rd475, %rd493;
	xor.b64  	%rd495, %rd494, %rd429;
	add.s64 	%rd496, %rd487, %rd495;
	add.s64 	%rd497, %rd496, %rd492;
	add.s64 	%rd498, %rd497, %rd417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9822,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9823}, %rd486;
	}
	shf.r.wrap.b32 	%r9824, %r9823, %r9822, 28;
	shf.r.wrap.b32 	%r9825, %r9822, %r9823, 28;
	mov.b64 	%rd499, {%r9825, %r9824};
	shf.l.wrap.b32 	%r9826, %r9822, %r9823, 30;
	shf.l.wrap.b32 	%r9827, %r9823, %r9822, 30;
	mov.b64 	%rd500, {%r9827, %r9826};
	xor.b64  	%rd501, %rd500, %rd499;
	shf.l.wrap.b32 	%r9828, %r9822, %r9823, 25;
	shf.l.wrap.b32 	%r9829, %r9823, %r9822, 25;
	mov.b64 	%rd502, {%r9829, %r9828};
	xor.b64  	%rd503, %rd501, %rd502;
	xor.b64  	%rd504, %rd486, %rd440;
	xor.b64  	%rd505, %rd486, %rd463;
	and.b64  	%rd506, %rd505, %rd504;
	xor.b64  	%rd507, %rd506, %rd486;
	add.s64 	%rd508, %rd497, %rd507;
	add.s64 	%rd509, %rd508, %rd503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9830,%dummy}, %rd498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9831}, %rd498;
	}
	shf.r.wrap.b32 	%r9832, %r9831, %r9830, 14;
	shf.r.wrap.b32 	%r9833, %r9830, %r9831, 14;
	mov.b64 	%rd510, {%r9833, %r9832};
	shf.r.wrap.b32 	%r9834, %r9831, %r9830, 18;
	shf.r.wrap.b32 	%r9835, %r9830, %r9831, 18;
	mov.b64 	%rd511, {%r9835, %r9834};
	xor.b64  	%rd512, %rd511, %rd510;
	shf.l.wrap.b32 	%r9836, %r9830, %r9831, 23;
	shf.l.wrap.b32 	%r9837, %r9831, %r9830, 23;
	mov.b64 	%rd513, {%r9837, %r9836};
	xor.b64  	%rd514, %rd512, %rd513;
	xor.b64  	%rd515, %rd475, %rd452;
	and.b64  	%rd516, %rd498, %rd515;
	xor.b64  	%rd517, %rd516, %rd452;
	add.s64 	%rd518, %rd429, %rd177;
	add.s64 	%rd519, %rd518, %rd2752;
	add.s64 	%rd520, %rd519, %rd517;
	add.s64 	%rd521, %rd520, %rd514;
	add.s64 	%rd522, %rd521, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9838,%dummy}, %rd509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9839}, %rd509;
	}
	shf.r.wrap.b32 	%r9840, %r9839, %r9838, 28;
	shf.r.wrap.b32 	%r9841, %r9838, %r9839, 28;
	mov.b64 	%rd523, {%r9841, %r9840};
	shf.l.wrap.b32 	%r9842, %r9838, %r9839, 30;
	shf.l.wrap.b32 	%r9843, %r9839, %r9838, 30;
	mov.b64 	%rd524, {%r9843, %r9842};
	xor.b64  	%rd525, %rd524, %rd523;
	shf.l.wrap.b32 	%r9844, %r9838, %r9839, 25;
	shf.l.wrap.b32 	%r9845, %r9839, %r9838, 25;
	mov.b64 	%rd526, {%r9845, %r9844};
	xor.b64  	%rd527, %rd525, %rd526;
	xor.b64  	%rd528, %rd509, %rd463;
	xor.b64  	%rd529, %rd509, %rd486;
	and.b64  	%rd530, %rd529, %rd528;
	xor.b64  	%rd531, %rd530, %rd509;
	add.s64 	%rd532, %rd521, %rd531;
	add.s64 	%rd533, %rd532, %rd527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9846,%dummy}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9847}, %rd171;
	}
	shf.r.wrap.b32 	%r9848, %r9847, %r9846, 1;
	shf.r.wrap.b32 	%r9849, %r9846, %r9847, 1;
	mov.b64 	%rd534, {%r9849, %r9848};
	shf.r.wrap.b32 	%r9850, %r9847, %r9846, 8;
	shf.r.wrap.b32 	%r9851, %r9846, %r9847, 8;
	mov.b64 	%rd535, {%r9851, %r9850};
	shr.u64 	%rd536, %rd171, 7;
	xor.b64  	%rd537, %rd534, %rd536;
	xor.b64  	%rd538, %rd537, %rd535;
	add.s64 	%rd539, %rd170, %rd20;
	add.s64 	%rd540, %rd539, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9852,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9853}, %rd177;
	}
	shf.r.wrap.b32 	%r9854, %r9853, %r9852, 19;
	shf.r.wrap.b32 	%r9855, %r9852, %r9853, 19;
	mov.b64 	%rd541, {%r9855, %r9854};
	shf.l.wrap.b32 	%r9856, %r9852, %r9853, 3;
	shf.l.wrap.b32 	%r9857, %r9853, %r9852, 3;
	mov.b64 	%rd542, {%r9857, %r9856};
	shr.u64 	%rd543, %rd177, 6;
	xor.b64  	%rd544, %rd541, %rd543;
	xor.b64  	%rd545, %rd544, %rd542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9858,%dummy}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9859}, %rd172;
	}
	shf.r.wrap.b32 	%r9860, %r9859, %r9858, 1;
	shf.r.wrap.b32 	%r9861, %r9858, %r9859, 1;
	mov.b64 	%rd546, {%r9861, %r9860};
	shf.r.wrap.b32 	%r9862, %r9859, %r9858, 8;
	shf.r.wrap.b32 	%r9863, %r9858, %r9859, 8;
	mov.b64 	%rd547, {%r9863, %r9862};
	shr.u64 	%rd548, %rd172, 7;
	xor.b64  	%rd549, %rd546, %rd548;
	xor.b64  	%rd550, %rd549, %rd547;
	add.s64 	%rd551, %rd171, %rd545;
	add.s64 	%rd552, %rd551, %rd550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9864,%dummy}, %rd540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9865}, %rd540;
	}
	shf.r.wrap.b32 	%r9866, %r9865, %r9864, 19;
	shf.r.wrap.b32 	%r9867, %r9864, %r9865, 19;
	mov.b64 	%rd553, {%r9867, %r9866};
	shf.l.wrap.b32 	%r9868, %r9864, %r9865, 3;
	shf.l.wrap.b32 	%r9869, %r9865, %r9864, 3;
	mov.b64 	%rd554, {%r9869, %r9868};
	shr.u64 	%rd555, %rd540, 6;
	xor.b64  	%rd556, %rd553, %rd555;
	xor.b64  	%rd557, %rd556, %rd554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9870,%dummy}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9871}, %rd173;
	}
	shf.r.wrap.b32 	%r9872, %r9871, %r9870, 1;
	shf.r.wrap.b32 	%r9873, %r9870, %r9871, 1;
	mov.b64 	%rd558, {%r9873, %r9872};
	shf.r.wrap.b32 	%r9874, %r9871, %r9870, 8;
	shf.r.wrap.b32 	%r9875, %r9870, %r9871, 8;
	mov.b64 	%rd559, {%r9875, %r9874};
	shr.u64 	%rd560, %rd173, 7;
	xor.b64  	%rd561, %rd558, %rd560;
	xor.b64  	%rd562, %rd561, %rd559;
	add.s64 	%rd563, %rd172, %rd557;
	add.s64 	%rd564, %rd563, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9876,%dummy}, %rd552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9877}, %rd552;
	}
	shf.r.wrap.b32 	%r9878, %r9877, %r9876, 19;
	shf.r.wrap.b32 	%r9879, %r9876, %r9877, 19;
	mov.b64 	%rd565, {%r9879, %r9878};
	shf.l.wrap.b32 	%r9880, %r9876, %r9877, 3;
	shf.l.wrap.b32 	%r9881, %r9877, %r9876, 3;
	mov.b64 	%rd566, {%r9881, %r9880};
	shr.u64 	%rd567, %rd552, 6;
	xor.b64  	%rd568, %rd565, %rd567;
	xor.b64  	%rd569, %rd568, %rd566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9882,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9883}, %rd174;
	}
	shf.r.wrap.b32 	%r9884, %r9883, %r9882, 1;
	shf.r.wrap.b32 	%r9885, %r9882, %r9883, 1;
	mov.b64 	%rd570, {%r9885, %r9884};
	shf.r.wrap.b32 	%r9886, %r9883, %r9882, 8;
	shf.r.wrap.b32 	%r9887, %r9882, %r9883, 8;
	mov.b64 	%rd571, {%r9887, %r9886};
	shr.u64 	%rd572, %rd174, 7;
	xor.b64  	%rd573, %rd570, %rd572;
	xor.b64  	%rd574, %rd573, %rd571;
	add.s64 	%rd575, %rd173, %rd569;
	add.s64 	%rd576, %rd575, %rd574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9888,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9889}, %rd564;
	}
	shf.r.wrap.b32 	%r9890, %r9889, %r9888, 19;
	shf.r.wrap.b32 	%r9891, %r9888, %r9889, 19;
	mov.b64 	%rd577, {%r9891, %r9890};
	shf.l.wrap.b32 	%r9892, %r9888, %r9889, 3;
	shf.l.wrap.b32 	%r9893, %r9889, %r9888, 3;
	mov.b64 	%rd578, {%r9893, %r9892};
	shr.u64 	%rd579, %rd564, 6;
	xor.b64  	%rd580, %rd577, %rd579;
	xor.b64  	%rd581, %rd580, %rd578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9894,%dummy}, %rd175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9895}, %rd175;
	}
	shf.r.wrap.b32 	%r9896, %r9895, %r9894, 1;
	shf.r.wrap.b32 	%r9897, %r9894, %r9895, 1;
	mov.b64 	%rd582, {%r9897, %r9896};
	shf.r.wrap.b32 	%r9898, %r9895, %r9894, 8;
	shf.r.wrap.b32 	%r9899, %r9894, %r9895, 8;
	mov.b64 	%rd583, {%r9899, %r9898};
	shr.u64 	%rd584, %rd175, 7;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	add.s64 	%rd587, %rd174, %rd581;
	add.s64 	%rd588, %rd587, %rd586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9900,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9901}, %rd576;
	}
	shf.r.wrap.b32 	%r9902, %r9901, %r9900, 19;
	shf.r.wrap.b32 	%r9903, %r9900, %r9901, 19;
	mov.b64 	%rd589, {%r9903, %r9902};
	shf.l.wrap.b32 	%r9904, %r9900, %r9901, 3;
	shf.l.wrap.b32 	%r9905, %r9901, %r9900, 3;
	mov.b64 	%rd590, {%r9905, %r9904};
	shr.u64 	%rd591, %rd576, 6;
	xor.b64  	%rd592, %rd589, %rd591;
	xor.b64  	%rd593, %rd592, %rd590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9906,%dummy}, %rd176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9907}, %rd176;
	}
	shf.r.wrap.b32 	%r9908, %r9907, %r9906, 1;
	shf.r.wrap.b32 	%r9909, %r9906, %r9907, 1;
	mov.b64 	%rd594, {%r9909, %r9908};
	shf.r.wrap.b32 	%r9910, %r9907, %r9906, 8;
	shf.r.wrap.b32 	%r9911, %r9906, %r9907, 8;
	mov.b64 	%rd595, {%r9911, %r9910};
	shr.u64 	%rd596, %rd176, 7;
	xor.b64  	%rd597, %rd594, %rd596;
	xor.b64  	%rd598, %rd597, %rd595;
	add.s64 	%rd599, %rd175, %rd593;
	add.s64 	%rd600, %rd599, %rd598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9912,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9913}, %rd588;
	}
	shf.r.wrap.b32 	%r9914, %r9913, %r9912, 19;
	shf.r.wrap.b32 	%r9915, %r9912, %r9913, 19;
	mov.b64 	%rd601, {%r9915, %r9914};
	shf.l.wrap.b32 	%r9916, %r9912, %r9913, 3;
	shf.l.wrap.b32 	%r9917, %r9913, %r9912, 3;
	mov.b64 	%rd602, {%r9917, %r9916};
	shr.u64 	%rd603, %rd588, 6;
	xor.b64  	%rd604, %rd601, %rd603;
	xor.b64  	%rd605, %rd604, %rd602;
	add.s64 	%rd606, %rd176, %rd177;
	add.s64 	%rd607, %rd606, %rd605;
	add.s64 	%rd608, %rd607, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9918,%dummy}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9919}, %rd600;
	}
	shf.r.wrap.b32 	%r9920, %r9919, %r9918, 19;
	shf.r.wrap.b32 	%r9921, %r9918, %r9919, 19;
	mov.b64 	%rd609, {%r9921, %r9920};
	shf.l.wrap.b32 	%r9922, %r9918, %r9919, 3;
	shf.l.wrap.b32 	%r9923, %r9919, %r9918, 3;
	mov.b64 	%rd610, {%r9923, %r9922};
	shr.u64 	%rd611, %rd600, 6;
	xor.b64  	%rd612, %rd609, %rd611;
	xor.b64  	%rd613, %rd612, %rd610;
	add.s64 	%rd614, %rd540, %rd613;
	add.s64 	%rd615, %rd614, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9924,%dummy}, %rd608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9925}, %rd608;
	}
	shf.r.wrap.b32 	%r9926, %r9925, %r9924, 19;
	shf.r.wrap.b32 	%r9927, %r9924, %r9925, 19;
	mov.b64 	%rd616, {%r9927, %r9926};
	shf.l.wrap.b32 	%r9928, %r9924, %r9925, 3;
	shf.l.wrap.b32 	%r9929, %r9925, %r9924, 3;
	mov.b64 	%rd617, {%r9929, %r9928};
	shr.u64 	%rd618, %rd608, 6;
	xor.b64  	%rd619, %rd616, %rd618;
	xor.b64  	%rd620, %rd619, %rd617;
	add.s64 	%rd621, %rd552, %rd620;
	add.s64 	%rd622, %rd621, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9930,%dummy}, %rd615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9931}, %rd615;
	}
	shf.r.wrap.b32 	%r9932, %r9931, %r9930, 19;
	shf.r.wrap.b32 	%r9933, %r9930, %r9931, 19;
	mov.b64 	%rd623, {%r9933, %r9932};
	shf.l.wrap.b32 	%r9934, %r9930, %r9931, 3;
	shf.l.wrap.b32 	%r9935, %r9931, %r9930, 3;
	mov.b64 	%rd624, {%r9935, %r9934};
	shr.u64 	%rd625, %rd615, 6;
	xor.b64  	%rd626, %rd623, %rd625;
	xor.b64  	%rd627, %rd626, %rd624;
	add.s64 	%rd628, %rd564, %rd627;
	add.s64 	%rd629, %rd628, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9936,%dummy}, %rd622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9937}, %rd622;
	}
	shf.r.wrap.b32 	%r9938, %r9937, %r9936, 19;
	shf.r.wrap.b32 	%r9939, %r9936, %r9937, 19;
	mov.b64 	%rd630, {%r9939, %r9938};
	shf.l.wrap.b32 	%r9940, %r9936, %r9937, 3;
	shf.l.wrap.b32 	%r9941, %r9937, %r9936, 3;
	mov.b64 	%rd631, {%r9941, %r9940};
	shr.u64 	%rd632, %rd622, 6;
	xor.b64  	%rd633, %rd630, %rd632;
	xor.b64  	%rd634, %rd633, %rd631;
	add.s64 	%rd635, %rd576, %rd634;
	add.s64 	%rd636, %rd635, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9942,%dummy}, %rd629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9943}, %rd629;
	}
	shf.r.wrap.b32 	%r9944, %r9943, %r9942, 19;
	shf.r.wrap.b32 	%r9945, %r9942, %r9943, 19;
	mov.b64 	%rd637, {%r9945, %r9944};
	shf.l.wrap.b32 	%r9946, %r9942, %r9943, 3;
	shf.l.wrap.b32 	%r9947, %r9943, %r9942, 3;
	mov.b64 	%rd638, {%r9947, %r9946};
	shr.u64 	%rd639, %rd629, 6;
	xor.b64  	%rd640, %rd637, %rd639;
	xor.b64  	%rd641, %rd640, %rd638;
	add.s64 	%rd642, %rd588, %rd641;
	add.s64 	%rd643, %rd642, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9948,%dummy}, %rd636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9949}, %rd636;
	}
	shf.r.wrap.b32 	%r9950, %r9949, %r9948, 19;
	shf.r.wrap.b32 	%r9951, %r9948, %r9949, 19;
	mov.b64 	%rd644, {%r9951, %r9950};
	shf.l.wrap.b32 	%r9952, %r9948, %r9949, 3;
	shf.l.wrap.b32 	%r9953, %r9949, %r9948, 3;
	mov.b64 	%rd645, {%r9953, %r9952};
	shr.u64 	%rd646, %rd636, 6;
	xor.b64  	%rd647, %rd644, %rd646;
	xor.b64  	%rd648, %rd647, %rd645;
	add.s64 	%rd649, %rd600, %rd648;
	add.s64 	%rd650, %rd649, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9954,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9955}, %rd643;
	}
	shf.r.wrap.b32 	%r9956, %r9955, %r9954, 19;
	shf.r.wrap.b32 	%r9957, %r9954, %r9955, 19;
	mov.b64 	%rd651, {%r9957, %r9956};
	shf.l.wrap.b32 	%r9958, %r9954, %r9955, 3;
	shf.l.wrap.b32 	%r9959, %r9955, %r9954, 3;
	mov.b64 	%rd652, {%r9959, %r9958};
	shr.u64 	%rd653, %rd643, 6;
	xor.b64  	%rd654, %rd651, %rd653;
	xor.b64  	%rd655, %rd654, %rd652;
	add.s64 	%rd656, %rd608, %rd655;
	add.s64 	%rd657, %rd656, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9960,%dummy}, %rd650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9961}, %rd650;
	}
	shf.r.wrap.b32 	%r9962, %r9961, %r9960, 19;
	shf.r.wrap.b32 	%r9963, %r9960, %r9961, 19;
	mov.b64 	%rd658, {%r9963, %r9962};
	shf.l.wrap.b32 	%r9964, %r9960, %r9961, 3;
	shf.l.wrap.b32 	%r9965, %r9961, %r9960, 3;
	mov.b64 	%rd659, {%r9965, %r9964};
	shr.u64 	%rd660, %rd650, 6;
	xor.b64  	%rd661, %rd658, %rd660;
	xor.b64  	%rd662, %rd661, %rd659;
	shf.r.wrap.b32 	%r9966, %r9853, %r9852, 1;
	shf.r.wrap.b32 	%r9967, %r9852, %r9853, 1;
	mov.b64 	%rd663, {%r9967, %r9966};
	shf.r.wrap.b32 	%r9968, %r9853, %r9852, 8;
	shf.r.wrap.b32 	%r9969, %r9852, %r9853, 8;
	mov.b64 	%rd664, {%r9969, %r9968};
	shr.u64 	%rd665, %rd177, 7;
	xor.b64  	%rd666, %rd663, %rd665;
	xor.b64  	%rd667, %rd666, %rd664;
	add.s64 	%rd668, %rd615, %rd662;
	add.s64 	%rd669, %rd668, %rd667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9970,%dummy}, %rd657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9971}, %rd657;
	}
	shf.r.wrap.b32 	%r9972, %r9971, %r9970, 19;
	shf.r.wrap.b32 	%r9973, %r9970, %r9971, 19;
	mov.b64 	%rd670, {%r9973, %r9972};
	shf.l.wrap.b32 	%r9974, %r9970, %r9971, 3;
	shf.l.wrap.b32 	%r9975, %r9971, %r9970, 3;
	mov.b64 	%rd671, {%r9975, %r9974};
	shr.u64 	%rd672, %rd657, 6;
	xor.b64  	%rd673, %rd670, %rd672;
	xor.b64  	%rd674, %rd673, %rd671;
	shf.r.wrap.b32 	%r9976, %r9865, %r9864, 1;
	shf.r.wrap.b32 	%r9977, %r9864, %r9865, 1;
	mov.b64 	%rd675, {%r9977, %r9976};
	shf.r.wrap.b32 	%r9978, %r9865, %r9864, 8;
	shf.r.wrap.b32 	%r9979, %r9864, %r9865, 8;
	mov.b64 	%rd676, {%r9979, %r9978};
	shr.u64 	%rd677, %rd540, 7;
	xor.b64  	%rd678, %rd675, %rd677;
	xor.b64  	%rd679, %rd678, %rd676;
	add.s64 	%rd680, %rd622, %rd177;
	add.s64 	%rd681, %rd680, %rd674;
	add.s64 	%rd682, %rd681, %rd679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9980,%dummy}, %rd522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9981}, %rd522;
	}
	shf.r.wrap.b32 	%r9982, %r9981, %r9980, 14;
	shf.r.wrap.b32 	%r9983, %r9980, %r9981, 14;
	mov.b64 	%rd683, {%r9983, %r9982};
	shf.r.wrap.b32 	%r9984, %r9981, %r9980, 18;
	shf.r.wrap.b32 	%r9985, %r9980, %r9981, 18;
	mov.b64 	%rd684, {%r9985, %r9984};
	xor.b64  	%rd685, %rd684, %rd683;
	shf.l.wrap.b32 	%r9986, %r9980, %r9981, 23;
	shf.l.wrap.b32 	%r9987, %r9981, %r9980, 23;
	mov.b64 	%rd686, {%r9987, %r9986};
	xor.b64  	%rd687, %rd685, %rd686;
	xor.b64  	%rd688, %rd475, %rd498;
	and.b64  	%rd689, %rd688, %rd522;
	xor.b64  	%rd690, %rd689, %rd475;
	add.s64 	%rd691, %rd690, %rd452;
	add.s64 	%rd692, %rd691, %rd540;
	add.s64 	%rd693, %rd692, %rd2753;
	add.s64 	%rd694, %rd693, %rd687;
	add.s64 	%rd695, %rd694, %rd463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9988,%dummy}, %rd533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9989}, %rd533;
	}
	shf.r.wrap.b32 	%r9990, %r9989, %r9988, 28;
	shf.r.wrap.b32 	%r9991, %r9988, %r9989, 28;
	mov.b64 	%rd696, {%r9991, %r9990};
	shf.l.wrap.b32 	%r9992, %r9988, %r9989, 30;
	shf.l.wrap.b32 	%r9993, %r9989, %r9988, 30;
	mov.b64 	%rd697, {%r9993, %r9992};
	xor.b64  	%rd698, %rd697, %rd696;
	shf.l.wrap.b32 	%r9994, %r9988, %r9989, 25;
	shf.l.wrap.b32 	%r9995, %r9989, %r9988, 25;
	mov.b64 	%rd699, {%r9995, %r9994};
	xor.b64  	%rd700, %rd698, %rd699;
	xor.b64  	%rd701, %rd533, %rd486;
	xor.b64  	%rd702, %rd533, %rd509;
	and.b64  	%rd703, %rd702, %rd701;
	xor.b64  	%rd704, %rd703, %rd533;
	add.s64 	%rd705, %rd694, %rd704;
	add.s64 	%rd706, %rd705, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9996,%dummy}, %rd695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9997}, %rd695;
	}
	shf.r.wrap.b32 	%r9998, %r9997, %r9996, 14;
	shf.r.wrap.b32 	%r9999, %r9996, %r9997, 14;
	mov.b64 	%rd707, {%r9999, %r9998};
	shf.r.wrap.b32 	%r10000, %r9997, %r9996, 18;
	shf.r.wrap.b32 	%r10001, %r9996, %r9997, 18;
	mov.b64 	%rd708, {%r10001, %r10000};
	xor.b64  	%rd709, %rd708, %rd707;
	shf.l.wrap.b32 	%r10002, %r9996, %r9997, 23;
	shf.l.wrap.b32 	%r10003, %r9997, %r9996, 23;
	mov.b64 	%rd710, {%r10003, %r10002};
	xor.b64  	%rd711, %rd709, %rd710;
	xor.b64  	%rd712, %rd498, %rd522;
	and.b64  	%rd713, %rd695, %rd712;
	xor.b64  	%rd714, %rd713, %rd498;
	add.s64 	%rd715, %rd552, %rd475;
	add.s64 	%rd716, %rd715, %rd2754;
	add.s64 	%rd717, %rd716, %rd714;
	add.s64 	%rd718, %rd717, %rd711;
	add.s64 	%rd719, %rd718, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10004,%dummy}, %rd706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10005}, %rd706;
	}
	shf.r.wrap.b32 	%r10006, %r10005, %r10004, 28;
	shf.r.wrap.b32 	%r10007, %r10004, %r10005, 28;
	mov.b64 	%rd720, {%r10007, %r10006};
	shf.l.wrap.b32 	%r10008, %r10004, %r10005, 30;
	shf.l.wrap.b32 	%r10009, %r10005, %r10004, 30;
	mov.b64 	%rd721, {%r10009, %r10008};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.l.wrap.b32 	%r10010, %r10004, %r10005, 25;
	shf.l.wrap.b32 	%r10011, %r10005, %r10004, 25;
	mov.b64 	%rd723, {%r10011, %r10010};
	xor.b64  	%rd724, %rd722, %rd723;
	xor.b64  	%rd725, %rd706, %rd509;
	xor.b64  	%rd726, %rd706, %rd533;
	and.b64  	%rd727, %rd726, %rd725;
	xor.b64  	%rd728, %rd727, %rd706;
	add.s64 	%rd729, %rd718, %rd728;
	add.s64 	%rd730, %rd729, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10012,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10013}, %rd719;
	}
	shf.r.wrap.b32 	%r10014, %r10013, %r10012, 14;
	shf.r.wrap.b32 	%r10015, %r10012, %r10013, 14;
	mov.b64 	%rd731, {%r10015, %r10014};
	shf.r.wrap.b32 	%r10016, %r10013, %r10012, 18;
	shf.r.wrap.b32 	%r10017, %r10012, %r10013, 18;
	mov.b64 	%rd732, {%r10017, %r10016};
	xor.b64  	%rd733, %rd732, %rd731;
	shf.l.wrap.b32 	%r10018, %r10012, %r10013, 23;
	shf.l.wrap.b32 	%r10019, %r10013, %r10012, 23;
	mov.b64 	%rd734, {%r10019, %r10018};
	xor.b64  	%rd735, %rd733, %rd734;
	xor.b64  	%rd736, %rd695, %rd522;
	and.b64  	%rd737, %rd719, %rd736;
	xor.b64  	%rd738, %rd737, %rd522;
	add.s64 	%rd739, %rd564, %rd498;
	add.s64 	%rd740, %rd739, %rd2755;
	add.s64 	%rd741, %rd740, %rd738;
	add.s64 	%rd742, %rd741, %rd735;
	add.s64 	%rd743, %rd742, %rd509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10020,%dummy}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10021}, %rd730;
	}
	shf.r.wrap.b32 	%r10022, %r10021, %r10020, 28;
	shf.r.wrap.b32 	%r10023, %r10020, %r10021, 28;
	mov.b64 	%rd744, {%r10023, %r10022};
	shf.l.wrap.b32 	%r10024, %r10020, %r10021, 30;
	shf.l.wrap.b32 	%r10025, %r10021, %r10020, 30;
	mov.b64 	%rd745, {%r10025, %r10024};
	xor.b64  	%rd746, %rd745, %rd744;
	shf.l.wrap.b32 	%r10026, %r10020, %r10021, 25;
	shf.l.wrap.b32 	%r10027, %r10021, %r10020, 25;
	mov.b64 	%rd747, {%r10027, %r10026};
	xor.b64  	%rd748, %rd746, %rd747;
	xor.b64  	%rd749, %rd730, %rd533;
	xor.b64  	%rd750, %rd730, %rd706;
	and.b64  	%rd751, %rd750, %rd749;
	xor.b64  	%rd752, %rd751, %rd730;
	add.s64 	%rd753, %rd742, %rd752;
	add.s64 	%rd754, %rd753, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10028,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10029}, %rd743;
	}
	shf.r.wrap.b32 	%r10030, %r10029, %r10028, 14;
	shf.r.wrap.b32 	%r10031, %r10028, %r10029, 14;
	mov.b64 	%rd755, {%r10031, %r10030};
	shf.r.wrap.b32 	%r10032, %r10029, %r10028, 18;
	shf.r.wrap.b32 	%r10033, %r10028, %r10029, 18;
	mov.b64 	%rd756, {%r10033, %r10032};
	xor.b64  	%rd757, %rd756, %rd755;
	shf.l.wrap.b32 	%r10034, %r10028, %r10029, 23;
	shf.l.wrap.b32 	%r10035, %r10029, %r10028, 23;
	mov.b64 	%rd758, {%r10035, %r10034};
	xor.b64  	%rd759, %rd757, %rd758;
	xor.b64  	%rd760, %rd719, %rd695;
	and.b64  	%rd761, %rd743, %rd760;
	xor.b64  	%rd762, %rd761, %rd695;
	add.s64 	%rd763, %rd576, %rd522;
	add.s64 	%rd764, %rd763, %rd2756;
	add.s64 	%rd765, %rd764, %rd762;
	add.s64 	%rd766, %rd765, %rd759;
	add.s64 	%rd767, %rd766, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10036,%dummy}, %rd754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10037}, %rd754;
	}
	shf.r.wrap.b32 	%r10038, %r10037, %r10036, 28;
	shf.r.wrap.b32 	%r10039, %r10036, %r10037, 28;
	mov.b64 	%rd768, {%r10039, %r10038};
	shf.l.wrap.b32 	%r10040, %r10036, %r10037, 30;
	shf.l.wrap.b32 	%r10041, %r10037, %r10036, 30;
	mov.b64 	%rd769, {%r10041, %r10040};
	xor.b64  	%rd770, %rd769, %rd768;
	shf.l.wrap.b32 	%r10042, %r10036, %r10037, 25;
	shf.l.wrap.b32 	%r10043, %r10037, %r10036, 25;
	mov.b64 	%rd771, {%r10043, %r10042};
	xor.b64  	%rd772, %rd770, %rd771;
	xor.b64  	%rd773, %rd754, %rd706;
	xor.b64  	%rd774, %rd754, %rd730;
	and.b64  	%rd775, %rd774, %rd773;
	xor.b64  	%rd776, %rd775, %rd754;
	add.s64 	%rd777, %rd766, %rd776;
	add.s64 	%rd778, %rd777, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10044,%dummy}, %rd767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10045}, %rd767;
	}
	shf.r.wrap.b32 	%r10046, %r10045, %r10044, 14;
	shf.r.wrap.b32 	%r10047, %r10044, %r10045, 14;
	mov.b64 	%rd779, {%r10047, %r10046};
	shf.r.wrap.b32 	%r10048, %r10045, %r10044, 18;
	shf.r.wrap.b32 	%r10049, %r10044, %r10045, 18;
	mov.b64 	%rd780, {%r10049, %r10048};
	xor.b64  	%rd781, %rd780, %rd779;
	shf.l.wrap.b32 	%r10050, %r10044, %r10045, 23;
	shf.l.wrap.b32 	%r10051, %r10045, %r10044, 23;
	mov.b64 	%rd782, {%r10051, %r10050};
	xor.b64  	%rd783, %rd781, %rd782;
	xor.b64  	%rd784, %rd743, %rd719;
	and.b64  	%rd785, %rd767, %rd784;
	xor.b64  	%rd786, %rd785, %rd719;
	add.s64 	%rd787, %rd695, %rd588;
	add.s64 	%rd788, %rd787, %rd2757;
	add.s64 	%rd789, %rd788, %rd786;
	add.s64 	%rd790, %rd789, %rd783;
	add.s64 	%rd791, %rd790, %rd706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10052,%dummy}, %rd778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10053}, %rd778;
	}
	shf.r.wrap.b32 	%r10054, %r10053, %r10052, 28;
	shf.r.wrap.b32 	%r10055, %r10052, %r10053, 28;
	mov.b64 	%rd792, {%r10055, %r10054};
	shf.l.wrap.b32 	%r10056, %r10052, %r10053, 30;
	shf.l.wrap.b32 	%r10057, %r10053, %r10052, 30;
	mov.b64 	%rd793, {%r10057, %r10056};
	xor.b64  	%rd794, %rd793, %rd792;
	shf.l.wrap.b32 	%r10058, %r10052, %r10053, 25;
	shf.l.wrap.b32 	%r10059, %r10053, %r10052, 25;
	mov.b64 	%rd795, {%r10059, %r10058};
	xor.b64  	%rd796, %rd794, %rd795;
	xor.b64  	%rd797, %rd778, %rd730;
	xor.b64  	%rd798, %rd778, %rd754;
	and.b64  	%rd799, %rd798, %rd797;
	xor.b64  	%rd800, %rd799, %rd778;
	add.s64 	%rd801, %rd790, %rd800;
	add.s64 	%rd802, %rd801, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10060,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10061}, %rd791;
	}
	shf.r.wrap.b32 	%r10062, %r10061, %r10060, 14;
	shf.r.wrap.b32 	%r10063, %r10060, %r10061, 14;
	mov.b64 	%rd803, {%r10063, %r10062};
	shf.r.wrap.b32 	%r10064, %r10061, %r10060, 18;
	shf.r.wrap.b32 	%r10065, %r10060, %r10061, 18;
	mov.b64 	%rd804, {%r10065, %r10064};
	xor.b64  	%rd805, %rd804, %rd803;
	shf.l.wrap.b32 	%r10066, %r10060, %r10061, 23;
	shf.l.wrap.b32 	%r10067, %r10061, %r10060, 23;
	mov.b64 	%rd806, {%r10067, %r10066};
	xor.b64  	%rd807, %rd805, %rd806;
	xor.b64  	%rd808, %rd767, %rd743;
	and.b64  	%rd809, %rd791, %rd808;
	xor.b64  	%rd810, %rd809, %rd743;
	add.s64 	%rd811, %rd719, %rd600;
	add.s64 	%rd812, %rd811, %rd2758;
	add.s64 	%rd813, %rd812, %rd810;
	add.s64 	%rd814, %rd813, %rd807;
	add.s64 	%rd815, %rd814, %rd730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10068,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10069}, %rd802;
	}
	shf.r.wrap.b32 	%r10070, %r10069, %r10068, 28;
	shf.r.wrap.b32 	%r10071, %r10068, %r10069, 28;
	mov.b64 	%rd816, {%r10071, %r10070};
	shf.l.wrap.b32 	%r10072, %r10068, %r10069, 30;
	shf.l.wrap.b32 	%r10073, %r10069, %r10068, 30;
	mov.b64 	%rd817, {%r10073, %r10072};
	xor.b64  	%rd818, %rd817, %rd816;
	shf.l.wrap.b32 	%r10074, %r10068, %r10069, 25;
	shf.l.wrap.b32 	%r10075, %r10069, %r10068, 25;
	mov.b64 	%rd819, {%r10075, %r10074};
	xor.b64  	%rd820, %rd818, %rd819;
	xor.b64  	%rd821, %rd802, %rd754;
	xor.b64  	%rd822, %rd802, %rd778;
	and.b64  	%rd823, %rd822, %rd821;
	xor.b64  	%rd824, %rd823, %rd802;
	add.s64 	%rd825, %rd814, %rd824;
	add.s64 	%rd826, %rd825, %rd820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10076,%dummy}, %rd815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10077}, %rd815;
	}
	shf.r.wrap.b32 	%r10078, %r10077, %r10076, 14;
	shf.r.wrap.b32 	%r10079, %r10076, %r10077, 14;
	mov.b64 	%rd827, {%r10079, %r10078};
	shf.r.wrap.b32 	%r10080, %r10077, %r10076, 18;
	shf.r.wrap.b32 	%r10081, %r10076, %r10077, 18;
	mov.b64 	%rd828, {%r10081, %r10080};
	xor.b64  	%rd829, %rd828, %rd827;
	shf.l.wrap.b32 	%r10082, %r10076, %r10077, 23;
	shf.l.wrap.b32 	%r10083, %r10077, %r10076, 23;
	mov.b64 	%rd830, {%r10083, %r10082};
	xor.b64  	%rd831, %rd829, %rd830;
	xor.b64  	%rd832, %rd791, %rd767;
	and.b64  	%rd833, %rd815, %rd832;
	xor.b64  	%rd834, %rd833, %rd767;
	add.s64 	%rd835, %rd743, %rd608;
	add.s64 	%rd836, %rd835, %rd2759;
	add.s64 	%rd837, %rd836, %rd834;
	add.s64 	%rd838, %rd837, %rd831;
	add.s64 	%rd839, %rd838, %rd754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10084,%dummy}, %rd826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10085}, %rd826;
	}
	shf.r.wrap.b32 	%r10086, %r10085, %r10084, 28;
	shf.r.wrap.b32 	%r10087, %r10084, %r10085, 28;
	mov.b64 	%rd840, {%r10087, %r10086};
	shf.l.wrap.b32 	%r10088, %r10084, %r10085, 30;
	shf.l.wrap.b32 	%r10089, %r10085, %r10084, 30;
	mov.b64 	%rd841, {%r10089, %r10088};
	xor.b64  	%rd842, %rd841, %rd840;
	shf.l.wrap.b32 	%r10090, %r10084, %r10085, 25;
	shf.l.wrap.b32 	%r10091, %r10085, %r10084, 25;
	mov.b64 	%rd843, {%r10091, %r10090};
	xor.b64  	%rd844, %rd842, %rd843;
	xor.b64  	%rd845, %rd826, %rd778;
	xor.b64  	%rd846, %rd826, %rd802;
	and.b64  	%rd847, %rd846, %rd845;
	xor.b64  	%rd848, %rd847, %rd826;
	add.s64 	%rd849, %rd838, %rd848;
	add.s64 	%rd850, %rd849, %rd844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10092,%dummy}, %rd839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10093}, %rd839;
	}
	shf.r.wrap.b32 	%r10094, %r10093, %r10092, 14;
	shf.r.wrap.b32 	%r10095, %r10092, %r10093, 14;
	mov.b64 	%rd851, {%r10095, %r10094};
	shf.r.wrap.b32 	%r10096, %r10093, %r10092, 18;
	shf.r.wrap.b32 	%r10097, %r10092, %r10093, 18;
	mov.b64 	%rd852, {%r10097, %r10096};
	xor.b64  	%rd853, %rd852, %rd851;
	shf.l.wrap.b32 	%r10098, %r10092, %r10093, 23;
	shf.l.wrap.b32 	%r10099, %r10093, %r10092, 23;
	mov.b64 	%rd854, {%r10099, %r10098};
	xor.b64  	%rd855, %rd853, %rd854;
	xor.b64  	%rd856, %rd815, %rd791;
	and.b64  	%rd857, %rd839, %rd856;
	xor.b64  	%rd858, %rd857, %rd791;
	add.s64 	%rd859, %rd767, %rd615;
	add.s64 	%rd860, %rd859, %rd2760;
	add.s64 	%rd861, %rd860, %rd858;
	add.s64 	%rd862, %rd861, %rd855;
	add.s64 	%rd863, %rd862, %rd778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10100,%dummy}, %rd850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10101}, %rd850;
	}
	shf.r.wrap.b32 	%r10102, %r10101, %r10100, 28;
	shf.r.wrap.b32 	%r10103, %r10100, %r10101, 28;
	mov.b64 	%rd864, {%r10103, %r10102};
	shf.l.wrap.b32 	%r10104, %r10100, %r10101, 30;
	shf.l.wrap.b32 	%r10105, %r10101, %r10100, 30;
	mov.b64 	%rd865, {%r10105, %r10104};
	xor.b64  	%rd866, %rd865, %rd864;
	shf.l.wrap.b32 	%r10106, %r10100, %r10101, 25;
	shf.l.wrap.b32 	%r10107, %r10101, %r10100, 25;
	mov.b64 	%rd867, {%r10107, %r10106};
	xor.b64  	%rd868, %rd866, %rd867;
	xor.b64  	%rd869, %rd850, %rd802;
	xor.b64  	%rd870, %rd850, %rd826;
	and.b64  	%rd871, %rd870, %rd869;
	xor.b64  	%rd872, %rd871, %rd850;
	add.s64 	%rd873, %rd862, %rd872;
	add.s64 	%rd874, %rd873, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10108,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10109}, %rd863;
	}
	shf.r.wrap.b32 	%r10110, %r10109, %r10108, 14;
	shf.r.wrap.b32 	%r10111, %r10108, %r10109, 14;
	mov.b64 	%rd875, {%r10111, %r10110};
	shf.r.wrap.b32 	%r10112, %r10109, %r10108, 18;
	shf.r.wrap.b32 	%r10113, %r10108, %r10109, 18;
	mov.b64 	%rd876, {%r10113, %r10112};
	xor.b64  	%rd877, %rd876, %rd875;
	shf.l.wrap.b32 	%r10114, %r10108, %r10109, 23;
	shf.l.wrap.b32 	%r10115, %r10109, %r10108, 23;
	mov.b64 	%rd878, {%r10115, %r10114};
	xor.b64  	%rd879, %rd877, %rd878;
	xor.b64  	%rd880, %rd839, %rd815;
	and.b64  	%rd881, %rd863, %rd880;
	xor.b64  	%rd882, %rd881, %rd815;
	add.s64 	%rd883, %rd791, %rd622;
	add.s64 	%rd884, %rd883, %rd2761;
	add.s64 	%rd885, %rd884, %rd882;
	add.s64 	%rd886, %rd885, %rd879;
	add.s64 	%rd887, %rd886, %rd802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10116,%dummy}, %rd874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10117}, %rd874;
	}
	shf.r.wrap.b32 	%r10118, %r10117, %r10116, 28;
	shf.r.wrap.b32 	%r10119, %r10116, %r10117, 28;
	mov.b64 	%rd888, {%r10119, %r10118};
	shf.l.wrap.b32 	%r10120, %r10116, %r10117, 30;
	shf.l.wrap.b32 	%r10121, %r10117, %r10116, 30;
	mov.b64 	%rd889, {%r10121, %r10120};
	xor.b64  	%rd890, %rd889, %rd888;
	shf.l.wrap.b32 	%r10122, %r10116, %r10117, 25;
	shf.l.wrap.b32 	%r10123, %r10117, %r10116, 25;
	mov.b64 	%rd891, {%r10123, %r10122};
	xor.b64  	%rd892, %rd890, %rd891;
	xor.b64  	%rd893, %rd874, %rd826;
	xor.b64  	%rd894, %rd874, %rd850;
	and.b64  	%rd895, %rd894, %rd893;
	xor.b64  	%rd896, %rd895, %rd874;
	add.s64 	%rd897, %rd886, %rd896;
	add.s64 	%rd898, %rd897, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10124,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10125}, %rd887;
	}
	shf.r.wrap.b32 	%r10126, %r10125, %r10124, 14;
	shf.r.wrap.b32 	%r10127, %r10124, %r10125, 14;
	mov.b64 	%rd899, {%r10127, %r10126};
	shf.r.wrap.b32 	%r10128, %r10125, %r10124, 18;
	shf.r.wrap.b32 	%r10129, %r10124, %r10125, 18;
	mov.b64 	%rd900, {%r10129, %r10128};
	xor.b64  	%rd901, %rd900, %rd899;
	shf.l.wrap.b32 	%r10130, %r10124, %r10125, 23;
	shf.l.wrap.b32 	%r10131, %r10125, %r10124, 23;
	mov.b64 	%rd902, {%r10131, %r10130};
	xor.b64  	%rd903, %rd901, %rd902;
	xor.b64  	%rd904, %rd863, %rd839;
	and.b64  	%rd905, %rd887, %rd904;
	xor.b64  	%rd906, %rd905, %rd839;
	add.s64 	%rd907, %rd815, %rd629;
	add.s64 	%rd908, %rd907, %rd2762;
	add.s64 	%rd909, %rd908, %rd906;
	add.s64 	%rd910, %rd909, %rd903;
	add.s64 	%rd911, %rd910, %rd826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10132,%dummy}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10133}, %rd898;
	}
	shf.r.wrap.b32 	%r10134, %r10133, %r10132, 28;
	shf.r.wrap.b32 	%r10135, %r10132, %r10133, 28;
	mov.b64 	%rd912, {%r10135, %r10134};
	shf.l.wrap.b32 	%r10136, %r10132, %r10133, 30;
	shf.l.wrap.b32 	%r10137, %r10133, %r10132, 30;
	mov.b64 	%rd913, {%r10137, %r10136};
	xor.b64  	%rd914, %rd913, %rd912;
	shf.l.wrap.b32 	%r10138, %r10132, %r10133, 25;
	shf.l.wrap.b32 	%r10139, %r10133, %r10132, 25;
	mov.b64 	%rd915, {%r10139, %r10138};
	xor.b64  	%rd916, %rd914, %rd915;
	xor.b64  	%rd917, %rd898, %rd850;
	xor.b64  	%rd918, %rd898, %rd874;
	and.b64  	%rd919, %rd918, %rd917;
	xor.b64  	%rd920, %rd919, %rd898;
	add.s64 	%rd921, %rd910, %rd920;
	add.s64 	%rd922, %rd921, %rd916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10140,%dummy}, %rd911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10141}, %rd911;
	}
	shf.r.wrap.b32 	%r10142, %r10141, %r10140, 14;
	shf.r.wrap.b32 	%r10143, %r10140, %r10141, 14;
	mov.b64 	%rd923, {%r10143, %r10142};
	shf.r.wrap.b32 	%r10144, %r10141, %r10140, 18;
	shf.r.wrap.b32 	%r10145, %r10140, %r10141, 18;
	mov.b64 	%rd924, {%r10145, %r10144};
	xor.b64  	%rd925, %rd924, %rd923;
	shf.l.wrap.b32 	%r10146, %r10140, %r10141, 23;
	shf.l.wrap.b32 	%r10147, %r10141, %r10140, 23;
	mov.b64 	%rd926, {%r10147, %r10146};
	xor.b64  	%rd927, %rd925, %rd926;
	xor.b64  	%rd928, %rd887, %rd863;
	and.b64  	%rd929, %rd911, %rd928;
	xor.b64  	%rd930, %rd929, %rd863;
	add.s64 	%rd931, %rd839, %rd636;
	add.s64 	%rd932, %rd931, %rd2763;
	add.s64 	%rd933, %rd932, %rd930;
	add.s64 	%rd934, %rd933, %rd927;
	add.s64 	%rd935, %rd934, %rd850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10148,%dummy}, %rd922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10149}, %rd922;
	}
	shf.r.wrap.b32 	%r10150, %r10149, %r10148, 28;
	shf.r.wrap.b32 	%r10151, %r10148, %r10149, 28;
	mov.b64 	%rd936, {%r10151, %r10150};
	shf.l.wrap.b32 	%r10152, %r10148, %r10149, 30;
	shf.l.wrap.b32 	%r10153, %r10149, %r10148, 30;
	mov.b64 	%rd937, {%r10153, %r10152};
	xor.b64  	%rd938, %rd937, %rd936;
	shf.l.wrap.b32 	%r10154, %r10148, %r10149, 25;
	shf.l.wrap.b32 	%r10155, %r10149, %r10148, 25;
	mov.b64 	%rd939, {%r10155, %r10154};
	xor.b64  	%rd940, %rd938, %rd939;
	xor.b64  	%rd941, %rd922, %rd874;
	xor.b64  	%rd942, %rd922, %rd898;
	and.b64  	%rd943, %rd942, %rd941;
	xor.b64  	%rd944, %rd943, %rd922;
	add.s64 	%rd945, %rd934, %rd944;
	add.s64 	%rd946, %rd945, %rd940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10156,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10157}, %rd935;
	}
	shf.r.wrap.b32 	%r10158, %r10157, %r10156, 14;
	shf.r.wrap.b32 	%r10159, %r10156, %r10157, 14;
	mov.b64 	%rd947, {%r10159, %r10158};
	shf.r.wrap.b32 	%r10160, %r10157, %r10156, 18;
	shf.r.wrap.b32 	%r10161, %r10156, %r10157, 18;
	mov.b64 	%rd948, {%r10161, %r10160};
	xor.b64  	%rd949, %rd948, %rd947;
	shf.l.wrap.b32 	%r10162, %r10156, %r10157, 23;
	shf.l.wrap.b32 	%r10163, %r10157, %r10156, 23;
	mov.b64 	%rd950, {%r10163, %r10162};
	xor.b64  	%rd951, %rd949, %rd950;
	xor.b64  	%rd952, %rd911, %rd887;
	and.b64  	%rd953, %rd935, %rd952;
	xor.b64  	%rd954, %rd953, %rd887;
	add.s64 	%rd955, %rd863, %rd643;
	add.s64 	%rd956, %rd955, %rd2764;
	add.s64 	%rd957, %rd956, %rd954;
	add.s64 	%rd958, %rd957, %rd951;
	add.s64 	%rd959, %rd958, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10164,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10165}, %rd946;
	}
	shf.r.wrap.b32 	%r10166, %r10165, %r10164, 28;
	shf.r.wrap.b32 	%r10167, %r10164, %r10165, 28;
	mov.b64 	%rd960, {%r10167, %r10166};
	shf.l.wrap.b32 	%r10168, %r10164, %r10165, 30;
	shf.l.wrap.b32 	%r10169, %r10165, %r10164, 30;
	mov.b64 	%rd961, {%r10169, %r10168};
	xor.b64  	%rd962, %rd961, %rd960;
	shf.l.wrap.b32 	%r10170, %r10164, %r10165, 25;
	shf.l.wrap.b32 	%r10171, %r10165, %r10164, 25;
	mov.b64 	%rd963, {%r10171, %r10170};
	xor.b64  	%rd964, %rd962, %rd963;
	xor.b64  	%rd965, %rd946, %rd898;
	xor.b64  	%rd966, %rd946, %rd922;
	and.b64  	%rd967, %rd966, %rd965;
	xor.b64  	%rd968, %rd967, %rd946;
	add.s64 	%rd969, %rd958, %rd968;
	add.s64 	%rd970, %rd969, %rd964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10172,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10173}, %rd959;
	}
	shf.r.wrap.b32 	%r10174, %r10173, %r10172, 14;
	shf.r.wrap.b32 	%r10175, %r10172, %r10173, 14;
	mov.b64 	%rd971, {%r10175, %r10174};
	shf.r.wrap.b32 	%r10176, %r10173, %r10172, 18;
	shf.r.wrap.b32 	%r10177, %r10172, %r10173, 18;
	mov.b64 	%rd972, {%r10177, %r10176};
	xor.b64  	%rd973, %rd972, %rd971;
	shf.l.wrap.b32 	%r10178, %r10172, %r10173, 23;
	shf.l.wrap.b32 	%r10179, %r10173, %r10172, 23;
	mov.b64 	%rd974, {%r10179, %r10178};
	xor.b64  	%rd975, %rd973, %rd974;
	xor.b64  	%rd976, %rd935, %rd911;
	and.b64  	%rd977, %rd959, %rd976;
	xor.b64  	%rd978, %rd977, %rd911;
	add.s64 	%rd979, %rd887, %rd650;
	add.s64 	%rd980, %rd979, %rd2765;
	add.s64 	%rd981, %rd980, %rd978;
	add.s64 	%rd982, %rd981, %rd975;
	add.s64 	%rd983, %rd982, %rd898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10180,%dummy}, %rd970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10181}, %rd970;
	}
	shf.r.wrap.b32 	%r10182, %r10181, %r10180, 28;
	shf.r.wrap.b32 	%r10183, %r10180, %r10181, 28;
	mov.b64 	%rd984, {%r10183, %r10182};
	shf.l.wrap.b32 	%r10184, %r10180, %r10181, 30;
	shf.l.wrap.b32 	%r10185, %r10181, %r10180, 30;
	mov.b64 	%rd985, {%r10185, %r10184};
	xor.b64  	%rd986, %rd985, %rd984;
	shf.l.wrap.b32 	%r10186, %r10180, %r10181, 25;
	shf.l.wrap.b32 	%r10187, %r10181, %r10180, 25;
	mov.b64 	%rd987, {%r10187, %r10186};
	xor.b64  	%rd988, %rd986, %rd987;
	xor.b64  	%rd989, %rd970, %rd922;
	xor.b64  	%rd990, %rd970, %rd946;
	and.b64  	%rd991, %rd990, %rd989;
	xor.b64  	%rd992, %rd991, %rd970;
	add.s64 	%rd993, %rd982, %rd992;
	add.s64 	%rd994, %rd993, %rd988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10188,%dummy}, %rd983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10189}, %rd983;
	}
	shf.r.wrap.b32 	%r10190, %r10189, %r10188, 14;
	shf.r.wrap.b32 	%r10191, %r10188, %r10189, 14;
	mov.b64 	%rd995, {%r10191, %r10190};
	shf.r.wrap.b32 	%r10192, %r10189, %r10188, 18;
	shf.r.wrap.b32 	%r10193, %r10188, %r10189, 18;
	mov.b64 	%rd996, {%r10193, %r10192};
	xor.b64  	%rd997, %rd996, %rd995;
	shf.l.wrap.b32 	%r10194, %r10188, %r10189, 23;
	shf.l.wrap.b32 	%r10195, %r10189, %r10188, 23;
	mov.b64 	%rd998, {%r10195, %r10194};
	xor.b64  	%rd999, %rd997, %rd998;
	xor.b64  	%rd1000, %rd959, %rd935;
	and.b64  	%rd1001, %rd983, %rd1000;
	xor.b64  	%rd1002, %rd1001, %rd935;
	add.s64 	%rd1003, %rd911, %rd657;
	add.s64 	%rd1004, %rd1003, %rd2766;
	add.s64 	%rd1005, %rd1004, %rd1002;
	add.s64 	%rd1006, %rd1005, %rd999;
	add.s64 	%rd1007, %rd1006, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10196,%dummy}, %rd994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10197}, %rd994;
	}
	shf.r.wrap.b32 	%r10198, %r10197, %r10196, 28;
	shf.r.wrap.b32 	%r10199, %r10196, %r10197, 28;
	mov.b64 	%rd1008, {%r10199, %r10198};
	shf.l.wrap.b32 	%r10200, %r10196, %r10197, 30;
	shf.l.wrap.b32 	%r10201, %r10197, %r10196, 30;
	mov.b64 	%rd1009, {%r10201, %r10200};
	xor.b64  	%rd1010, %rd1009, %rd1008;
	shf.l.wrap.b32 	%r10202, %r10196, %r10197, 25;
	shf.l.wrap.b32 	%r10203, %r10197, %r10196, 25;
	mov.b64 	%rd1011, {%r10203, %r10202};
	xor.b64  	%rd1012, %rd1010, %rd1011;
	xor.b64  	%rd1013, %rd994, %rd946;
	xor.b64  	%rd1014, %rd994, %rd970;
	and.b64  	%rd1015, %rd1014, %rd1013;
	xor.b64  	%rd1016, %rd1015, %rd994;
	add.s64 	%rd1017, %rd1006, %rd1016;
	add.s64 	%rd1018, %rd1017, %rd1012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10204,%dummy}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10205}, %rd1007;
	}
	shf.r.wrap.b32 	%r10206, %r10205, %r10204, 14;
	shf.r.wrap.b32 	%r10207, %r10204, %r10205, 14;
	mov.b64 	%rd1019, {%r10207, %r10206};
	shf.r.wrap.b32 	%r10208, %r10205, %r10204, 18;
	shf.r.wrap.b32 	%r10209, %r10204, %r10205, 18;
	mov.b64 	%rd1020, {%r10209, %r10208};
	xor.b64  	%rd1021, %rd1020, %rd1019;
	shf.l.wrap.b32 	%r10210, %r10204, %r10205, 23;
	shf.l.wrap.b32 	%r10211, %r10205, %r10204, 23;
	mov.b64 	%rd1022, {%r10211, %r10210};
	xor.b64  	%rd1023, %rd1021, %rd1022;
	xor.b64  	%rd1024, %rd983, %rd959;
	and.b64  	%rd1025, %rd1007, %rd1024;
	xor.b64  	%rd1026, %rd1025, %rd959;
	add.s64 	%rd1027, %rd935, %rd669;
	add.s64 	%rd1028, %rd1027, %rd2767;
	add.s64 	%rd1029, %rd1028, %rd1026;
	add.s64 	%rd1030, %rd1029, %rd1023;
	add.s64 	%rd1031, %rd1030, %rd946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10212,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10213}, %rd1018;
	}
	shf.r.wrap.b32 	%r10214, %r10213, %r10212, 28;
	shf.r.wrap.b32 	%r10215, %r10212, %r10213, 28;
	mov.b64 	%rd1032, {%r10215, %r10214};
	shf.l.wrap.b32 	%r10216, %r10212, %r10213, 30;
	shf.l.wrap.b32 	%r10217, %r10213, %r10212, 30;
	mov.b64 	%rd1033, {%r10217, %r10216};
	xor.b64  	%rd1034, %rd1033, %rd1032;
	shf.l.wrap.b32 	%r10218, %r10212, %r10213, 25;
	shf.l.wrap.b32 	%r10219, %r10213, %r10212, 25;
	mov.b64 	%rd1035, {%r10219, %r10218};
	xor.b64  	%rd1036, %rd1034, %rd1035;
	xor.b64  	%rd1037, %rd1018, %rd970;
	xor.b64  	%rd1038, %rd1018, %rd994;
	and.b64  	%rd1039, %rd1038, %rd1037;
	xor.b64  	%rd1040, %rd1039, %rd1018;
	add.s64 	%rd1041, %rd1030, %rd1040;
	add.s64 	%rd1042, %rd1041, %rd1036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10220,%dummy}, %rd1031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10221}, %rd1031;
	}
	shf.r.wrap.b32 	%r10222, %r10221, %r10220, 14;
	shf.r.wrap.b32 	%r10223, %r10220, %r10221, 14;
	mov.b64 	%rd1043, {%r10223, %r10222};
	shf.r.wrap.b32 	%r10224, %r10221, %r10220, 18;
	shf.r.wrap.b32 	%r10225, %r10220, %r10221, 18;
	mov.b64 	%rd1044, {%r10225, %r10224};
	xor.b64  	%rd1045, %rd1044, %rd1043;
	shf.l.wrap.b32 	%r10226, %r10220, %r10221, 23;
	shf.l.wrap.b32 	%r10227, %r10221, %r10220, 23;
	mov.b64 	%rd1046, {%r10227, %r10226};
	xor.b64  	%rd1047, %rd1045, %rd1046;
	xor.b64  	%rd1048, %rd1007, %rd983;
	and.b64  	%rd1049, %rd1031, %rd1048;
	xor.b64  	%rd1050, %rd1049, %rd983;
	add.s64 	%rd1051, %rd959, %rd682;
	add.s64 	%rd1052, %rd1051, %rd2768;
	add.s64 	%rd1053, %rd1052, %rd1050;
	add.s64 	%rd1054, %rd1053, %rd1047;
	add.s64 	%rd1055, %rd1054, %rd970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10228,%dummy}, %rd1042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10229}, %rd1042;
	}
	shf.r.wrap.b32 	%r10230, %r10229, %r10228, 28;
	shf.r.wrap.b32 	%r10231, %r10228, %r10229, 28;
	mov.b64 	%rd1056, {%r10231, %r10230};
	shf.l.wrap.b32 	%r10232, %r10228, %r10229, 30;
	shf.l.wrap.b32 	%r10233, %r10229, %r10228, 30;
	mov.b64 	%rd1057, {%r10233, %r10232};
	xor.b64  	%rd1058, %rd1057, %rd1056;
	shf.l.wrap.b32 	%r10234, %r10228, %r10229, 25;
	shf.l.wrap.b32 	%r10235, %r10229, %r10228, 25;
	mov.b64 	%rd1059, {%r10235, %r10234};
	xor.b64  	%rd1060, %rd1058, %rd1059;
	xor.b64  	%rd1061, %rd1042, %rd994;
	xor.b64  	%rd1062, %rd1042, %rd1018;
	and.b64  	%rd1063, %rd1062, %rd1061;
	xor.b64  	%rd1064, %rd1063, %rd1042;
	add.s64 	%rd1065, %rd1054, %rd1064;
	add.s64 	%rd1066, %rd1065, %rd1060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10236,%dummy}, %rd669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10237}, %rd669;
	}
	shf.r.wrap.b32 	%r10238, %r10237, %r10236, 19;
	shf.r.wrap.b32 	%r10239, %r10236, %r10237, 19;
	mov.b64 	%rd1067, {%r10239, %r10238};
	shf.l.wrap.b32 	%r10240, %r10236, %r10237, 3;
	shf.l.wrap.b32 	%r10241, %r10237, %r10236, 3;
	mov.b64 	%rd1068, {%r10241, %r10240};
	shr.u64 	%rd1069, %rd669, 6;
	xor.b64  	%rd1070, %rd1067, %rd1069;
	xor.b64  	%rd1071, %rd1070, %rd1068;
	shf.r.wrap.b32 	%r10242, %r9877, %r9876, 1;
	shf.r.wrap.b32 	%r10243, %r9876, %r9877, 1;
	mov.b64 	%rd1072, {%r10243, %r10242};
	shf.r.wrap.b32 	%r10244, %r9877, %r9876, 8;
	shf.r.wrap.b32 	%r10245, %r9876, %r9877, 8;
	mov.b64 	%rd1073, {%r10245, %r10244};
	shr.u64 	%rd1074, %rd552, 7;
	xor.b64  	%rd1075, %rd1072, %rd1074;
	xor.b64  	%rd1076, %rd1075, %rd1073;
	add.s64 	%rd1077, %rd540, %rd629;
	add.s64 	%rd1078, %rd1077, %rd1071;
	add.s64 	%rd1079, %rd1078, %rd1076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10246,%dummy}, %rd682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10247}, %rd682;
	}
	shf.r.wrap.b32 	%r10248, %r10247, %r10246, 19;
	shf.r.wrap.b32 	%r10249, %r10246, %r10247, 19;
	mov.b64 	%rd1080, {%r10249, %r10248};
	shf.l.wrap.b32 	%r10250, %r10246, %r10247, 3;
	shf.l.wrap.b32 	%r10251, %r10247, %r10246, 3;
	mov.b64 	%rd1081, {%r10251, %r10250};
	shr.u64 	%rd1082, %rd682, 6;
	xor.b64  	%rd1083, %rd1080, %rd1082;
	xor.b64  	%rd1084, %rd1083, %rd1081;
	shf.r.wrap.b32 	%r10252, %r9889, %r9888, 1;
	shf.r.wrap.b32 	%r10253, %r9888, %r9889, 1;
	mov.b64 	%rd1085, {%r10253, %r10252};
	shf.r.wrap.b32 	%r10254, %r9889, %r9888, 8;
	shf.r.wrap.b32 	%r10255, %r9888, %r9889, 8;
	mov.b64 	%rd1086, {%r10255, %r10254};
	shr.u64 	%rd1087, %rd564, 7;
	xor.b64  	%rd1088, %rd1085, %rd1087;
	xor.b64  	%rd1089, %rd1088, %rd1086;
	add.s64 	%rd1090, %rd552, %rd636;
	add.s64 	%rd1091, %rd1090, %rd1084;
	add.s64 	%rd1092, %rd1091, %rd1089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10256,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10257}, %rd1079;
	}
	shf.r.wrap.b32 	%r10258, %r10257, %r10256, 19;
	shf.r.wrap.b32 	%r10259, %r10256, %r10257, 19;
	mov.b64 	%rd1093, {%r10259, %r10258};
	shf.l.wrap.b32 	%r10260, %r10256, %r10257, 3;
	shf.l.wrap.b32 	%r10261, %r10257, %r10256, 3;
	mov.b64 	%rd1094, {%r10261, %r10260};
	shr.u64 	%rd1095, %rd1079, 6;
	xor.b64  	%rd1096, %rd1093, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1094;
	shf.r.wrap.b32 	%r10262, %r9901, %r9900, 1;
	shf.r.wrap.b32 	%r10263, %r9900, %r9901, 1;
	mov.b64 	%rd1098, {%r10263, %r10262};
	shf.r.wrap.b32 	%r10264, %r9901, %r9900, 8;
	shf.r.wrap.b32 	%r10265, %r9900, %r9901, 8;
	mov.b64 	%rd1099, {%r10265, %r10264};
	shr.u64 	%rd1100, %rd576, 7;
	xor.b64  	%rd1101, %rd1098, %rd1100;
	xor.b64  	%rd1102, %rd1101, %rd1099;
	add.s64 	%rd1103, %rd564, %rd643;
	add.s64 	%rd1104, %rd1103, %rd1097;
	add.s64 	%rd1105, %rd1104, %rd1102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10266,%dummy}, %rd1092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10267}, %rd1092;
	}
	shf.r.wrap.b32 	%r10268, %r10267, %r10266, 19;
	shf.r.wrap.b32 	%r10269, %r10266, %r10267, 19;
	mov.b64 	%rd1106, {%r10269, %r10268};
	shf.l.wrap.b32 	%r10270, %r10266, %r10267, 3;
	shf.l.wrap.b32 	%r10271, %r10267, %r10266, 3;
	mov.b64 	%rd1107, {%r10271, %r10270};
	shr.u64 	%rd1108, %rd1092, 6;
	xor.b64  	%rd1109, %rd1106, %rd1108;
	xor.b64  	%rd1110, %rd1109, %rd1107;
	shf.r.wrap.b32 	%r10272, %r9913, %r9912, 1;
	shf.r.wrap.b32 	%r10273, %r9912, %r9913, 1;
	mov.b64 	%rd1111, {%r10273, %r10272};
	shf.r.wrap.b32 	%r10274, %r9913, %r9912, 8;
	shf.r.wrap.b32 	%r10275, %r9912, %r9913, 8;
	mov.b64 	%rd1112, {%r10275, %r10274};
	shr.u64 	%rd1113, %rd588, 7;
	xor.b64  	%rd1114, %rd1111, %rd1113;
	xor.b64  	%rd1115, %rd1114, %rd1112;
	add.s64 	%rd1116, %rd576, %rd650;
	add.s64 	%rd1117, %rd1116, %rd1110;
	add.s64 	%rd1118, %rd1117, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10276,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10277}, %rd1105;
	}
	shf.r.wrap.b32 	%r10278, %r10277, %r10276, 19;
	shf.r.wrap.b32 	%r10279, %r10276, %r10277, 19;
	mov.b64 	%rd1119, {%r10279, %r10278};
	shf.l.wrap.b32 	%r10280, %r10276, %r10277, 3;
	shf.l.wrap.b32 	%r10281, %r10277, %r10276, 3;
	mov.b64 	%rd1120, {%r10281, %r10280};
	shr.u64 	%rd1121, %rd1105, 6;
	xor.b64  	%rd1122, %rd1119, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1120;
	shf.r.wrap.b32 	%r10282, %r9919, %r9918, 1;
	shf.r.wrap.b32 	%r10283, %r9918, %r9919, 1;
	mov.b64 	%rd1124, {%r10283, %r10282};
	shf.r.wrap.b32 	%r10284, %r9919, %r9918, 8;
	shf.r.wrap.b32 	%r10285, %r9918, %r9919, 8;
	mov.b64 	%rd1125, {%r10285, %r10284};
	shr.u64 	%rd1126, %rd600, 7;
	xor.b64  	%rd1127, %rd1124, %rd1126;
	xor.b64  	%rd1128, %rd1127, %rd1125;
	add.s64 	%rd1129, %rd588, %rd657;
	add.s64 	%rd1130, %rd1129, %rd1123;
	add.s64 	%rd1131, %rd1130, %rd1128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10286,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10287}, %rd1118;
	}
	shf.r.wrap.b32 	%r10288, %r10287, %r10286, 19;
	shf.r.wrap.b32 	%r10289, %r10286, %r10287, 19;
	mov.b64 	%rd1132, {%r10289, %r10288};
	shf.l.wrap.b32 	%r10290, %r10286, %r10287, 3;
	shf.l.wrap.b32 	%r10291, %r10287, %r10286, 3;
	mov.b64 	%rd1133, {%r10291, %r10290};
	shr.u64 	%rd1134, %rd1118, 6;
	xor.b64  	%rd1135, %rd1132, %rd1134;
	xor.b64  	%rd1136, %rd1135, %rd1133;
	shf.r.wrap.b32 	%r10292, %r9925, %r9924, 1;
	shf.r.wrap.b32 	%r10293, %r9924, %r9925, 1;
	mov.b64 	%rd1137, {%r10293, %r10292};
	shf.r.wrap.b32 	%r10294, %r9925, %r9924, 8;
	shf.r.wrap.b32 	%r10295, %r9924, %r9925, 8;
	mov.b64 	%rd1138, {%r10295, %r10294};
	shr.u64 	%rd1139, %rd608, 7;
	xor.b64  	%rd1140, %rd1137, %rd1139;
	xor.b64  	%rd1141, %rd1140, %rd1138;
	add.s64 	%rd1142, %rd600, %rd669;
	add.s64 	%rd1143, %rd1142, %rd1136;
	add.s64 	%rd1144, %rd1143, %rd1141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10296,%dummy}, %rd1131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10297}, %rd1131;
	}
	shf.r.wrap.b32 	%r10298, %r10297, %r10296, 19;
	shf.r.wrap.b32 	%r10299, %r10296, %r10297, 19;
	mov.b64 	%rd1145, {%r10299, %r10298};
	shf.l.wrap.b32 	%r10300, %r10296, %r10297, 3;
	shf.l.wrap.b32 	%r10301, %r10297, %r10296, 3;
	mov.b64 	%rd1146, {%r10301, %r10300};
	shr.u64 	%rd1147, %rd1131, 6;
	xor.b64  	%rd1148, %rd1145, %rd1147;
	xor.b64  	%rd1149, %rd1148, %rd1146;
	shf.r.wrap.b32 	%r10302, %r9931, %r9930, 1;
	shf.r.wrap.b32 	%r10303, %r9930, %r9931, 1;
	mov.b64 	%rd1150, {%r10303, %r10302};
	shf.r.wrap.b32 	%r10304, %r9931, %r9930, 8;
	shf.r.wrap.b32 	%r10305, %r9930, %r9931, 8;
	mov.b64 	%rd1151, {%r10305, %r10304};
	shr.u64 	%rd1152, %rd615, 7;
	xor.b64  	%rd1153, %rd1150, %rd1152;
	xor.b64  	%rd1154, %rd1153, %rd1151;
	add.s64 	%rd1155, %rd608, %rd682;
	add.s64 	%rd1156, %rd1155, %rd1149;
	add.s64 	%rd1157, %rd1156, %rd1154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10306,%dummy}, %rd1144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10307}, %rd1144;
	}
	shf.r.wrap.b32 	%r10308, %r10307, %r10306, 19;
	shf.r.wrap.b32 	%r10309, %r10306, %r10307, 19;
	mov.b64 	%rd1158, {%r10309, %r10308};
	shf.l.wrap.b32 	%r10310, %r10306, %r10307, 3;
	shf.l.wrap.b32 	%r10311, %r10307, %r10306, 3;
	mov.b64 	%rd1159, {%r10311, %r10310};
	shr.u64 	%rd1160, %rd1144, 6;
	xor.b64  	%rd1161, %rd1158, %rd1160;
	xor.b64  	%rd1162, %rd1161, %rd1159;
	shf.r.wrap.b32 	%r10312, %r9937, %r9936, 1;
	shf.r.wrap.b32 	%r10313, %r9936, %r9937, 1;
	mov.b64 	%rd1163, {%r10313, %r10312};
	shf.r.wrap.b32 	%r10314, %r9937, %r9936, 8;
	shf.r.wrap.b32 	%r10315, %r9936, %r9937, 8;
	mov.b64 	%rd1164, {%r10315, %r10314};
	shr.u64 	%rd1165, %rd622, 7;
	xor.b64  	%rd1166, %rd1163, %rd1165;
	xor.b64  	%rd1167, %rd1166, %rd1164;
	add.s64 	%rd1168, %rd1079, %rd615;
	add.s64 	%rd1169, %rd1168, %rd1162;
	add.s64 	%rd1170, %rd1169, %rd1167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10316,%dummy}, %rd1157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10317}, %rd1157;
	}
	shf.r.wrap.b32 	%r10318, %r10317, %r10316, 19;
	shf.r.wrap.b32 	%r10319, %r10316, %r10317, 19;
	mov.b64 	%rd1171, {%r10319, %r10318};
	shf.l.wrap.b32 	%r10320, %r10316, %r10317, 3;
	shf.l.wrap.b32 	%r10321, %r10317, %r10316, 3;
	mov.b64 	%rd1172, {%r10321, %r10320};
	shr.u64 	%rd1173, %rd1157, 6;
	xor.b64  	%rd1174, %rd1171, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1172;
	shf.r.wrap.b32 	%r10322, %r9943, %r9942, 1;
	shf.r.wrap.b32 	%r10323, %r9942, %r9943, 1;
	mov.b64 	%rd1176, {%r10323, %r10322};
	shf.r.wrap.b32 	%r10324, %r9943, %r9942, 8;
	shf.r.wrap.b32 	%r10325, %r9942, %r9943, 8;
	mov.b64 	%rd1177, {%r10325, %r10324};
	shr.u64 	%rd1178, %rd629, 7;
	xor.b64  	%rd1179, %rd1176, %rd1178;
	xor.b64  	%rd1180, %rd1179, %rd1177;
	add.s64 	%rd1181, %rd1092, %rd622;
	add.s64 	%rd1182, %rd1181, %rd1175;
	add.s64 	%rd1183, %rd1182, %rd1180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10326,%dummy}, %rd1170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10327}, %rd1170;
	}
	shf.r.wrap.b32 	%r10328, %r10327, %r10326, 19;
	shf.r.wrap.b32 	%r10329, %r10326, %r10327, 19;
	mov.b64 	%rd1184, {%r10329, %r10328};
	shf.l.wrap.b32 	%r10330, %r10326, %r10327, 3;
	shf.l.wrap.b32 	%r10331, %r10327, %r10326, 3;
	mov.b64 	%rd1185, {%r10331, %r10330};
	shr.u64 	%rd1186, %rd1170, 6;
	xor.b64  	%rd1187, %rd1184, %rd1186;
	xor.b64  	%rd1188, %rd1187, %rd1185;
	shf.r.wrap.b32 	%r10332, %r9949, %r9948, 1;
	shf.r.wrap.b32 	%r10333, %r9948, %r9949, 1;
	mov.b64 	%rd1189, {%r10333, %r10332};
	shf.r.wrap.b32 	%r10334, %r9949, %r9948, 8;
	shf.r.wrap.b32 	%r10335, %r9948, %r9949, 8;
	mov.b64 	%rd1190, {%r10335, %r10334};
	shr.u64 	%rd1191, %rd636, 7;
	xor.b64  	%rd1192, %rd1189, %rd1191;
	xor.b64  	%rd1193, %rd1192, %rd1190;
	add.s64 	%rd1194, %rd1105, %rd629;
	add.s64 	%rd1195, %rd1194, %rd1188;
	add.s64 	%rd1196, %rd1195, %rd1193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10336,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10337}, %rd1183;
	}
	shf.r.wrap.b32 	%r10338, %r10337, %r10336, 19;
	shf.r.wrap.b32 	%r10339, %r10336, %r10337, 19;
	mov.b64 	%rd1197, {%r10339, %r10338};
	shf.l.wrap.b32 	%r10340, %r10336, %r10337, 3;
	shf.l.wrap.b32 	%r10341, %r10337, %r10336, 3;
	mov.b64 	%rd1198, {%r10341, %r10340};
	shr.u64 	%rd1199, %rd1183, 6;
	xor.b64  	%rd1200, %rd1197, %rd1199;
	xor.b64  	%rd1201, %rd1200, %rd1198;
	shf.r.wrap.b32 	%r10342, %r9955, %r9954, 1;
	shf.r.wrap.b32 	%r10343, %r9954, %r9955, 1;
	mov.b64 	%rd1202, {%r10343, %r10342};
	shf.r.wrap.b32 	%r10344, %r9955, %r9954, 8;
	shf.r.wrap.b32 	%r10345, %r9954, %r9955, 8;
	mov.b64 	%rd1203, {%r10345, %r10344};
	shr.u64 	%rd1204, %rd643, 7;
	xor.b64  	%rd1205, %rd1202, %rd1204;
	xor.b64  	%rd1206, %rd1205, %rd1203;
	add.s64 	%rd1207, %rd1118, %rd636;
	add.s64 	%rd1208, %rd1207, %rd1201;
	add.s64 	%rd1209, %rd1208, %rd1206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10346,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10347}, %rd1196;
	}
	shf.r.wrap.b32 	%r10348, %r10347, %r10346, 19;
	shf.r.wrap.b32 	%r10349, %r10346, %r10347, 19;
	mov.b64 	%rd1210, {%r10349, %r10348};
	shf.l.wrap.b32 	%r10350, %r10346, %r10347, 3;
	shf.l.wrap.b32 	%r10351, %r10347, %r10346, 3;
	mov.b64 	%rd1211, {%r10351, %r10350};
	shr.u64 	%rd1212, %rd1196, 6;
	xor.b64  	%rd1213, %rd1210, %rd1212;
	xor.b64  	%rd1214, %rd1213, %rd1211;
	shf.r.wrap.b32 	%r10352, %r9961, %r9960, 1;
	shf.r.wrap.b32 	%r10353, %r9960, %r9961, 1;
	mov.b64 	%rd1215, {%r10353, %r10352};
	shf.r.wrap.b32 	%r10354, %r9961, %r9960, 8;
	shf.r.wrap.b32 	%r10355, %r9960, %r9961, 8;
	mov.b64 	%rd1216, {%r10355, %r10354};
	shr.u64 	%rd1217, %rd650, 7;
	xor.b64  	%rd1218, %rd1215, %rd1217;
	xor.b64  	%rd1219, %rd1218, %rd1216;
	add.s64 	%rd1220, %rd1131, %rd643;
	add.s64 	%rd1221, %rd1220, %rd1214;
	add.s64 	%rd1222, %rd1221, %rd1219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10356,%dummy}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10357}, %rd1209;
	}
	shf.r.wrap.b32 	%r10358, %r10357, %r10356, 19;
	shf.r.wrap.b32 	%r10359, %r10356, %r10357, 19;
	mov.b64 	%rd1223, {%r10359, %r10358};
	shf.l.wrap.b32 	%r10360, %r10356, %r10357, 3;
	shf.l.wrap.b32 	%r10361, %r10357, %r10356, 3;
	mov.b64 	%rd1224, {%r10361, %r10360};
	shr.u64 	%rd1225, %rd1209, 6;
	xor.b64  	%rd1226, %rd1223, %rd1225;
	xor.b64  	%rd1227, %rd1226, %rd1224;
	shf.r.wrap.b32 	%r10362, %r9971, %r9970, 1;
	shf.r.wrap.b32 	%r10363, %r9970, %r9971, 1;
	mov.b64 	%rd1228, {%r10363, %r10362};
	shf.r.wrap.b32 	%r10364, %r9971, %r9970, 8;
	shf.r.wrap.b32 	%r10365, %r9970, %r9971, 8;
	mov.b64 	%rd1229, {%r10365, %r10364};
	shr.u64 	%rd1230, %rd657, 7;
	xor.b64  	%rd1231, %rd1228, %rd1230;
	xor.b64  	%rd1232, %rd1231, %rd1229;
	add.s64 	%rd1233, %rd1144, %rd650;
	add.s64 	%rd1234, %rd1233, %rd1227;
	add.s64 	%rd1235, %rd1234, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10366,%dummy}, %rd1222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10367}, %rd1222;
	}
	shf.r.wrap.b32 	%r10368, %r10367, %r10366, 19;
	shf.r.wrap.b32 	%r10369, %r10366, %r10367, 19;
	mov.b64 	%rd1236, {%r10369, %r10368};
	shf.l.wrap.b32 	%r10370, %r10366, %r10367, 3;
	shf.l.wrap.b32 	%r10371, %r10367, %r10366, 3;
	mov.b64 	%rd1237, {%r10371, %r10370};
	shr.u64 	%rd1238, %rd1222, 6;
	xor.b64  	%rd1239, %rd1236, %rd1238;
	xor.b64  	%rd1240, %rd1239, %rd1237;
	shf.r.wrap.b32 	%r10372, %r10237, %r10236, 1;
	shf.r.wrap.b32 	%r10373, %r10236, %r10237, 1;
	mov.b64 	%rd1241, {%r10373, %r10372};
	shf.r.wrap.b32 	%r10374, %r10237, %r10236, 8;
	shf.r.wrap.b32 	%r10375, %r10236, %r10237, 8;
	mov.b64 	%rd1242, {%r10375, %r10374};
	shr.u64 	%rd1243, %rd669, 7;
	xor.b64  	%rd1244, %rd1241, %rd1243;
	xor.b64  	%rd1245, %rd1244, %rd1242;
	add.s64 	%rd1246, %rd1157, %rd657;
	add.s64 	%rd1247, %rd1246, %rd1240;
	add.s64 	%rd1248, %rd1247, %rd1245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10376,%dummy}, %rd1235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10377}, %rd1235;
	}
	shf.r.wrap.b32 	%r10378, %r10377, %r10376, 19;
	shf.r.wrap.b32 	%r10379, %r10376, %r10377, 19;
	mov.b64 	%rd1249, {%r10379, %r10378};
	shf.l.wrap.b32 	%r10380, %r10376, %r10377, 3;
	shf.l.wrap.b32 	%r10381, %r10377, %r10376, 3;
	mov.b64 	%rd1250, {%r10381, %r10380};
	shr.u64 	%rd1251, %rd1235, 6;
	xor.b64  	%rd1252, %rd1249, %rd1251;
	xor.b64  	%rd1253, %rd1252, %rd1250;
	shf.r.wrap.b32 	%r10382, %r10247, %r10246, 1;
	shf.r.wrap.b32 	%r10383, %r10246, %r10247, 1;
	mov.b64 	%rd1254, {%r10383, %r10382};
	shf.r.wrap.b32 	%r10384, %r10247, %r10246, 8;
	shf.r.wrap.b32 	%r10385, %r10246, %r10247, 8;
	mov.b64 	%rd1255, {%r10385, %r10384};
	shr.u64 	%rd1256, %rd682, 7;
	xor.b64  	%rd1257, %rd1254, %rd1256;
	xor.b64  	%rd1258, %rd1257, %rd1255;
	add.s64 	%rd1259, %rd1170, %rd669;
	add.s64 	%rd1260, %rd1259, %rd1253;
	add.s64 	%rd1261, %rd1260, %rd1258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10386,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10387}, %rd1248;
	}
	shf.r.wrap.b32 	%r10388, %r10387, %r10386, 19;
	shf.r.wrap.b32 	%r10389, %r10386, %r10387, 19;
	mov.b64 	%rd1262, {%r10389, %r10388};
	shf.l.wrap.b32 	%r10390, %r10386, %r10387, 3;
	shf.l.wrap.b32 	%r10391, %r10387, %r10386, 3;
	mov.b64 	%rd1263, {%r10391, %r10390};
	shr.u64 	%rd1264, %rd1248, 6;
	xor.b64  	%rd1265, %rd1262, %rd1264;
	xor.b64  	%rd1266, %rd1265, %rd1263;
	shf.r.wrap.b32 	%r10392, %r10257, %r10256, 1;
	shf.r.wrap.b32 	%r10393, %r10256, %r10257, 1;
	mov.b64 	%rd1267, {%r10393, %r10392};
	shf.r.wrap.b32 	%r10394, %r10257, %r10256, 8;
	shf.r.wrap.b32 	%r10395, %r10256, %r10257, 8;
	mov.b64 	%rd1268, {%r10395, %r10394};
	shr.u64 	%rd1269, %rd1079, 7;
	xor.b64  	%rd1270, %rd1267, %rd1269;
	xor.b64  	%rd1271, %rd1270, %rd1268;
	add.s64 	%rd1272, %rd1183, %rd682;
	add.s64 	%rd1273, %rd1272, %rd1266;
	add.s64 	%rd1274, %rd1273, %rd1271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10396,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10397}, %rd1055;
	}
	shf.r.wrap.b32 	%r10398, %r10397, %r10396, 14;
	shf.r.wrap.b32 	%r10399, %r10396, %r10397, 14;
	mov.b64 	%rd1275, {%r10399, %r10398};
	shf.r.wrap.b32 	%r10400, %r10397, %r10396, 18;
	shf.r.wrap.b32 	%r10401, %r10396, %r10397, 18;
	mov.b64 	%rd1276, {%r10401, %r10400};
	xor.b64  	%rd1277, %rd1276, %rd1275;
	shf.l.wrap.b32 	%r10402, %r10396, %r10397, 23;
	shf.l.wrap.b32 	%r10403, %r10397, %r10396, 23;
	mov.b64 	%rd1278, {%r10403, %r10402};
	xor.b64  	%rd1279, %rd1277, %rd1278;
	xor.b64  	%rd1280, %rd1007, %rd1031;
	and.b64  	%rd1281, %rd1280, %rd1055;
	xor.b64  	%rd1282, %rd1281, %rd1007;
	add.s64 	%rd1283, %rd1282, %rd983;
	add.s64 	%rd1284, %rd1283, %rd1079;
	add.s64 	%rd1285, %rd1284, %rd2769;
	add.s64 	%rd1286, %rd1285, %rd1279;
	add.s64 	%rd1287, %rd1286, %rd994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10404,%dummy}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10405}, %rd1066;
	}
	shf.r.wrap.b32 	%r10406, %r10405, %r10404, 28;
	shf.r.wrap.b32 	%r10407, %r10404, %r10405, 28;
	mov.b64 	%rd1288, {%r10407, %r10406};
	shf.l.wrap.b32 	%r10408, %r10404, %r10405, 30;
	shf.l.wrap.b32 	%r10409, %r10405, %r10404, 30;
	mov.b64 	%rd1289, {%r10409, %r10408};
	xor.b64  	%rd1290, %rd1289, %rd1288;
	shf.l.wrap.b32 	%r10410, %r10404, %r10405, 25;
	shf.l.wrap.b32 	%r10411, %r10405, %r10404, 25;
	mov.b64 	%rd1291, {%r10411, %r10410};
	xor.b64  	%rd1292, %rd1290, %rd1291;
	xor.b64  	%rd1293, %rd1066, %rd1018;
	xor.b64  	%rd1294, %rd1066, %rd1042;
	and.b64  	%rd1295, %rd1294, %rd1293;
	xor.b64  	%rd1296, %rd1295, %rd1066;
	add.s64 	%rd1297, %rd1286, %rd1296;
	add.s64 	%rd1298, %rd1297, %rd1292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10412,%dummy}, %rd1287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10413}, %rd1287;
	}
	shf.r.wrap.b32 	%r10414, %r10413, %r10412, 14;
	shf.r.wrap.b32 	%r10415, %r10412, %r10413, 14;
	mov.b64 	%rd1299, {%r10415, %r10414};
	shf.r.wrap.b32 	%r10416, %r10413, %r10412, 18;
	shf.r.wrap.b32 	%r10417, %r10412, %r10413, 18;
	mov.b64 	%rd1300, {%r10417, %r10416};
	xor.b64  	%rd1301, %rd1300, %rd1299;
	shf.l.wrap.b32 	%r10418, %r10412, %r10413, 23;
	shf.l.wrap.b32 	%r10419, %r10413, %r10412, 23;
	mov.b64 	%rd1302, {%r10419, %r10418};
	xor.b64  	%rd1303, %rd1301, %rd1302;
	xor.b64  	%rd1304, %rd1031, %rd1055;
	and.b64  	%rd1305, %rd1287, %rd1304;
	xor.b64  	%rd1306, %rd1305, %rd1031;
	add.s64 	%rd1307, %rd1092, %rd1007;
	add.s64 	%rd1308, %rd1307, %rd2770;
	add.s64 	%rd1309, %rd1308, %rd1306;
	add.s64 	%rd1310, %rd1309, %rd1303;
	add.s64 	%rd1311, %rd1310, %rd1018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10420,%dummy}, %rd1298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10421}, %rd1298;
	}
	shf.r.wrap.b32 	%r10422, %r10421, %r10420, 28;
	shf.r.wrap.b32 	%r10423, %r10420, %r10421, 28;
	mov.b64 	%rd1312, {%r10423, %r10422};
	shf.l.wrap.b32 	%r10424, %r10420, %r10421, 30;
	shf.l.wrap.b32 	%r10425, %r10421, %r10420, 30;
	mov.b64 	%rd1313, {%r10425, %r10424};
	xor.b64  	%rd1314, %rd1313, %rd1312;
	shf.l.wrap.b32 	%r10426, %r10420, %r10421, 25;
	shf.l.wrap.b32 	%r10427, %r10421, %r10420, 25;
	mov.b64 	%rd1315, {%r10427, %r10426};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	xor.b64  	%rd1317, %rd1298, %rd1042;
	xor.b64  	%rd1318, %rd1298, %rd1066;
	and.b64  	%rd1319, %rd1318, %rd1317;
	xor.b64  	%rd1320, %rd1319, %rd1298;
	add.s64 	%rd1321, %rd1310, %rd1320;
	add.s64 	%rd1322, %rd1321, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10428,%dummy}, %rd1311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10429}, %rd1311;
	}
	shf.r.wrap.b32 	%r10430, %r10429, %r10428, 14;
	shf.r.wrap.b32 	%r10431, %r10428, %r10429, 14;
	mov.b64 	%rd1323, {%r10431, %r10430};
	shf.r.wrap.b32 	%r10432, %r10429, %r10428, 18;
	shf.r.wrap.b32 	%r10433, %r10428, %r10429, 18;
	mov.b64 	%rd1324, {%r10433, %r10432};
	xor.b64  	%rd1325, %rd1324, %rd1323;
	shf.l.wrap.b32 	%r10434, %r10428, %r10429, 23;
	shf.l.wrap.b32 	%r10435, %r10429, %r10428, 23;
	mov.b64 	%rd1326, {%r10435, %r10434};
	xor.b64  	%rd1327, %rd1325, %rd1326;
	xor.b64  	%rd1328, %rd1287, %rd1055;
	and.b64  	%rd1329, %rd1311, %rd1328;
	xor.b64  	%rd1330, %rd1329, %rd1055;
	add.s64 	%rd1331, %rd1105, %rd1031;
	add.s64 	%rd1332, %rd1331, %rd2771;
	add.s64 	%rd1333, %rd1332, %rd1330;
	add.s64 	%rd1334, %rd1333, %rd1327;
	add.s64 	%rd1335, %rd1334, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10436,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10437}, %rd1322;
	}
	shf.r.wrap.b32 	%r10438, %r10437, %r10436, 28;
	shf.r.wrap.b32 	%r10439, %r10436, %r10437, 28;
	mov.b64 	%rd1336, {%r10439, %r10438};
	shf.l.wrap.b32 	%r10440, %r10436, %r10437, 30;
	shf.l.wrap.b32 	%r10441, %r10437, %r10436, 30;
	mov.b64 	%rd1337, {%r10441, %r10440};
	xor.b64  	%rd1338, %rd1337, %rd1336;
	shf.l.wrap.b32 	%r10442, %r10436, %r10437, 25;
	shf.l.wrap.b32 	%r10443, %r10437, %r10436, 25;
	mov.b64 	%rd1339, {%r10443, %r10442};
	xor.b64  	%rd1340, %rd1338, %rd1339;
	xor.b64  	%rd1341, %rd1322, %rd1066;
	xor.b64  	%rd1342, %rd1322, %rd1298;
	and.b64  	%rd1343, %rd1342, %rd1341;
	xor.b64  	%rd1344, %rd1343, %rd1322;
	add.s64 	%rd1345, %rd1334, %rd1344;
	add.s64 	%rd1346, %rd1345, %rd1340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10444,%dummy}, %rd1335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10445}, %rd1335;
	}
	shf.r.wrap.b32 	%r10446, %r10445, %r10444, 14;
	shf.r.wrap.b32 	%r10447, %r10444, %r10445, 14;
	mov.b64 	%rd1347, {%r10447, %r10446};
	shf.r.wrap.b32 	%r10448, %r10445, %r10444, 18;
	shf.r.wrap.b32 	%r10449, %r10444, %r10445, 18;
	mov.b64 	%rd1348, {%r10449, %r10448};
	xor.b64  	%rd1349, %rd1348, %rd1347;
	shf.l.wrap.b32 	%r10450, %r10444, %r10445, 23;
	shf.l.wrap.b32 	%r10451, %r10445, %r10444, 23;
	mov.b64 	%rd1350, {%r10451, %r10450};
	xor.b64  	%rd1351, %rd1349, %rd1350;
	xor.b64  	%rd1352, %rd1311, %rd1287;
	and.b64  	%rd1353, %rd1335, %rd1352;
	xor.b64  	%rd1354, %rd1353, %rd1287;
	add.s64 	%rd1355, %rd1118, %rd1055;
	add.s64 	%rd1356, %rd1355, %rd2772;
	add.s64 	%rd1357, %rd1356, %rd1354;
	add.s64 	%rd1358, %rd1357, %rd1351;
	add.s64 	%rd1359, %rd1358, %rd1066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10452,%dummy}, %rd1346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10453}, %rd1346;
	}
	shf.r.wrap.b32 	%r10454, %r10453, %r10452, 28;
	shf.r.wrap.b32 	%r10455, %r10452, %r10453, 28;
	mov.b64 	%rd1360, {%r10455, %r10454};
	shf.l.wrap.b32 	%r10456, %r10452, %r10453, 30;
	shf.l.wrap.b32 	%r10457, %r10453, %r10452, 30;
	mov.b64 	%rd1361, {%r10457, %r10456};
	xor.b64  	%rd1362, %rd1361, %rd1360;
	shf.l.wrap.b32 	%r10458, %r10452, %r10453, 25;
	shf.l.wrap.b32 	%r10459, %r10453, %r10452, 25;
	mov.b64 	%rd1363, {%r10459, %r10458};
	xor.b64  	%rd1364, %rd1362, %rd1363;
	xor.b64  	%rd1365, %rd1346, %rd1298;
	xor.b64  	%rd1366, %rd1346, %rd1322;
	and.b64  	%rd1367, %rd1366, %rd1365;
	xor.b64  	%rd1368, %rd1367, %rd1346;
	add.s64 	%rd1369, %rd1358, %rd1368;
	add.s64 	%rd1370, %rd1369, %rd1364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10460,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10461}, %rd1359;
	}
	shf.r.wrap.b32 	%r10462, %r10461, %r10460, 14;
	shf.r.wrap.b32 	%r10463, %r10460, %r10461, 14;
	mov.b64 	%rd1371, {%r10463, %r10462};
	shf.r.wrap.b32 	%r10464, %r10461, %r10460, 18;
	shf.r.wrap.b32 	%r10465, %r10460, %r10461, 18;
	mov.b64 	%rd1372, {%r10465, %r10464};
	xor.b64  	%rd1373, %rd1372, %rd1371;
	shf.l.wrap.b32 	%r10466, %r10460, %r10461, 23;
	shf.l.wrap.b32 	%r10467, %r10461, %r10460, 23;
	mov.b64 	%rd1374, {%r10467, %r10466};
	xor.b64  	%rd1375, %rd1373, %rd1374;
	xor.b64  	%rd1376, %rd1335, %rd1311;
	and.b64  	%rd1377, %rd1359, %rd1376;
	xor.b64  	%rd1378, %rd1377, %rd1311;
	add.s64 	%rd1379, %rd1287, %rd1131;
	add.s64 	%rd1380, %rd1379, %rd2773;
	add.s64 	%rd1381, %rd1380, %rd1378;
	add.s64 	%rd1382, %rd1381, %rd1375;
	add.s64 	%rd1383, %rd1382, %rd1298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10468,%dummy}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10469}, %rd1370;
	}
	shf.r.wrap.b32 	%r10470, %r10469, %r10468, 28;
	shf.r.wrap.b32 	%r10471, %r10468, %r10469, 28;
	mov.b64 	%rd1384, {%r10471, %r10470};
	shf.l.wrap.b32 	%r10472, %r10468, %r10469, 30;
	shf.l.wrap.b32 	%r10473, %r10469, %r10468, 30;
	mov.b64 	%rd1385, {%r10473, %r10472};
	xor.b64  	%rd1386, %rd1385, %rd1384;
	shf.l.wrap.b32 	%r10474, %r10468, %r10469, 25;
	shf.l.wrap.b32 	%r10475, %r10469, %r10468, 25;
	mov.b64 	%rd1387, {%r10475, %r10474};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	xor.b64  	%rd1389, %rd1370, %rd1322;
	xor.b64  	%rd1390, %rd1370, %rd1346;
	and.b64  	%rd1391, %rd1390, %rd1389;
	xor.b64  	%rd1392, %rd1391, %rd1370;
	add.s64 	%rd1393, %rd1382, %rd1392;
	add.s64 	%rd1394, %rd1393, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10476,%dummy}, %rd1383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10477}, %rd1383;
	}
	shf.r.wrap.b32 	%r10478, %r10477, %r10476, 14;
	shf.r.wrap.b32 	%r10479, %r10476, %r10477, 14;
	mov.b64 	%rd1395, {%r10479, %r10478};
	shf.r.wrap.b32 	%r10480, %r10477, %r10476, 18;
	shf.r.wrap.b32 	%r10481, %r10476, %r10477, 18;
	mov.b64 	%rd1396, {%r10481, %r10480};
	xor.b64  	%rd1397, %rd1396, %rd1395;
	shf.l.wrap.b32 	%r10482, %r10476, %r10477, 23;
	shf.l.wrap.b32 	%r10483, %r10477, %r10476, 23;
	mov.b64 	%rd1398, {%r10483, %r10482};
	xor.b64  	%rd1399, %rd1397, %rd1398;
	xor.b64  	%rd1400, %rd1359, %rd1335;
	and.b64  	%rd1401, %rd1383, %rd1400;
	xor.b64  	%rd1402, %rd1401, %rd1335;
	add.s64 	%rd1403, %rd1311, %rd1144;
	add.s64 	%rd1404, %rd1403, %rd2774;
	add.s64 	%rd1405, %rd1404, %rd1402;
	add.s64 	%rd1406, %rd1405, %rd1399;
	add.s64 	%rd1407, %rd1406, %rd1322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10484,%dummy}, %rd1394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10485}, %rd1394;
	}
	shf.r.wrap.b32 	%r10486, %r10485, %r10484, 28;
	shf.r.wrap.b32 	%r10487, %r10484, %r10485, 28;
	mov.b64 	%rd1408, {%r10487, %r10486};
	shf.l.wrap.b32 	%r10488, %r10484, %r10485, 30;
	shf.l.wrap.b32 	%r10489, %r10485, %r10484, 30;
	mov.b64 	%rd1409, {%r10489, %r10488};
	xor.b64  	%rd1410, %rd1409, %rd1408;
	shf.l.wrap.b32 	%r10490, %r10484, %r10485, 25;
	shf.l.wrap.b32 	%r10491, %r10485, %r10484, 25;
	mov.b64 	%rd1411, {%r10491, %r10490};
	xor.b64  	%rd1412, %rd1410, %rd1411;
	xor.b64  	%rd1413, %rd1394, %rd1346;
	xor.b64  	%rd1414, %rd1394, %rd1370;
	and.b64  	%rd1415, %rd1414, %rd1413;
	xor.b64  	%rd1416, %rd1415, %rd1394;
	add.s64 	%rd1417, %rd1406, %rd1416;
	add.s64 	%rd1418, %rd1417, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10492,%dummy}, %rd1407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10493}, %rd1407;
	}
	shf.r.wrap.b32 	%r10494, %r10493, %r10492, 14;
	shf.r.wrap.b32 	%r10495, %r10492, %r10493, 14;
	mov.b64 	%rd1419, {%r10495, %r10494};
	shf.r.wrap.b32 	%r10496, %r10493, %r10492, 18;
	shf.r.wrap.b32 	%r10497, %r10492, %r10493, 18;
	mov.b64 	%rd1420, {%r10497, %r10496};
	xor.b64  	%rd1421, %rd1420, %rd1419;
	shf.l.wrap.b32 	%r10498, %r10492, %r10493, 23;
	shf.l.wrap.b32 	%r10499, %r10493, %r10492, 23;
	mov.b64 	%rd1422, {%r10499, %r10498};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	xor.b64  	%rd1424, %rd1383, %rd1359;
	and.b64  	%rd1425, %rd1407, %rd1424;
	xor.b64  	%rd1426, %rd1425, %rd1359;
	add.s64 	%rd1427, %rd1335, %rd1157;
	add.s64 	%rd1428, %rd1427, %rd2775;
	add.s64 	%rd1429, %rd1428, %rd1426;
	add.s64 	%rd1430, %rd1429, %rd1423;
	add.s64 	%rd1431, %rd1430, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10500,%dummy}, %rd1418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10501}, %rd1418;
	}
	shf.r.wrap.b32 	%r10502, %r10501, %r10500, 28;
	shf.r.wrap.b32 	%r10503, %r10500, %r10501, 28;
	mov.b64 	%rd1432, {%r10503, %r10502};
	shf.l.wrap.b32 	%r10504, %r10500, %r10501, 30;
	shf.l.wrap.b32 	%r10505, %r10501, %r10500, 30;
	mov.b64 	%rd1433, {%r10505, %r10504};
	xor.b64  	%rd1434, %rd1433, %rd1432;
	shf.l.wrap.b32 	%r10506, %r10500, %r10501, 25;
	shf.l.wrap.b32 	%r10507, %r10501, %r10500, 25;
	mov.b64 	%rd1435, {%r10507, %r10506};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	xor.b64  	%rd1437, %rd1418, %rd1370;
	xor.b64  	%rd1438, %rd1418, %rd1394;
	and.b64  	%rd1439, %rd1438, %rd1437;
	xor.b64  	%rd1440, %rd1439, %rd1418;
	add.s64 	%rd1441, %rd1430, %rd1440;
	add.s64 	%rd1442, %rd1441, %rd1436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10508,%dummy}, %rd1431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10509}, %rd1431;
	}
	shf.r.wrap.b32 	%r10510, %r10509, %r10508, 14;
	shf.r.wrap.b32 	%r10511, %r10508, %r10509, 14;
	mov.b64 	%rd1443, {%r10511, %r10510};
	shf.r.wrap.b32 	%r10512, %r10509, %r10508, 18;
	shf.r.wrap.b32 	%r10513, %r10508, %r10509, 18;
	mov.b64 	%rd1444, {%r10513, %r10512};
	xor.b64  	%rd1445, %rd1444, %rd1443;
	shf.l.wrap.b32 	%r10514, %r10508, %r10509, 23;
	shf.l.wrap.b32 	%r10515, %r10509, %r10508, 23;
	mov.b64 	%rd1446, {%r10515, %r10514};
	xor.b64  	%rd1447, %rd1445, %rd1446;
	xor.b64  	%rd1448, %rd1407, %rd1383;
	and.b64  	%rd1449, %rd1431, %rd1448;
	xor.b64  	%rd1450, %rd1449, %rd1383;
	add.s64 	%rd1451, %rd1359, %rd1170;
	add.s64 	%rd1452, %rd1451, %rd2776;
	add.s64 	%rd1453, %rd1452, %rd1450;
	add.s64 	%rd1454, %rd1453, %rd1447;
	add.s64 	%rd1455, %rd1454, %rd1370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10516,%dummy}, %rd1442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10517}, %rd1442;
	}
	shf.r.wrap.b32 	%r10518, %r10517, %r10516, 28;
	shf.r.wrap.b32 	%r10519, %r10516, %r10517, 28;
	mov.b64 	%rd1456, {%r10519, %r10518};
	shf.l.wrap.b32 	%r10520, %r10516, %r10517, 30;
	shf.l.wrap.b32 	%r10521, %r10517, %r10516, 30;
	mov.b64 	%rd1457, {%r10521, %r10520};
	xor.b64  	%rd1458, %rd1457, %rd1456;
	shf.l.wrap.b32 	%r10522, %r10516, %r10517, 25;
	shf.l.wrap.b32 	%r10523, %r10517, %r10516, 25;
	mov.b64 	%rd1459, {%r10523, %r10522};
	xor.b64  	%rd1460, %rd1458, %rd1459;
	xor.b64  	%rd1461, %rd1442, %rd1394;
	xor.b64  	%rd1462, %rd1442, %rd1418;
	and.b64  	%rd1463, %rd1462, %rd1461;
	xor.b64  	%rd1464, %rd1463, %rd1442;
	add.s64 	%rd1465, %rd1454, %rd1464;
	add.s64 	%rd1466, %rd1465, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10524,%dummy}, %rd1455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10525}, %rd1455;
	}
	shf.r.wrap.b32 	%r10526, %r10525, %r10524, 14;
	shf.r.wrap.b32 	%r10527, %r10524, %r10525, 14;
	mov.b64 	%rd1467, {%r10527, %r10526};
	shf.r.wrap.b32 	%r10528, %r10525, %r10524, 18;
	shf.r.wrap.b32 	%r10529, %r10524, %r10525, 18;
	mov.b64 	%rd1468, {%r10529, %r10528};
	xor.b64  	%rd1469, %rd1468, %rd1467;
	shf.l.wrap.b32 	%r10530, %r10524, %r10525, 23;
	shf.l.wrap.b32 	%r10531, %r10525, %r10524, 23;
	mov.b64 	%rd1470, {%r10531, %r10530};
	xor.b64  	%rd1471, %rd1469, %rd1470;
	xor.b64  	%rd1472, %rd1431, %rd1407;
	and.b64  	%rd1473, %rd1455, %rd1472;
	xor.b64  	%rd1474, %rd1473, %rd1407;
	add.s64 	%rd1475, %rd1383, %rd1183;
	add.s64 	%rd1476, %rd1475, %rd2777;
	add.s64 	%rd1477, %rd1476, %rd1474;
	add.s64 	%rd1478, %rd1477, %rd1471;
	add.s64 	%rd1479, %rd1478, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10532,%dummy}, %rd1466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10533}, %rd1466;
	}
	shf.r.wrap.b32 	%r10534, %r10533, %r10532, 28;
	shf.r.wrap.b32 	%r10535, %r10532, %r10533, 28;
	mov.b64 	%rd1480, {%r10535, %r10534};
	shf.l.wrap.b32 	%r10536, %r10532, %r10533, 30;
	shf.l.wrap.b32 	%r10537, %r10533, %r10532, 30;
	mov.b64 	%rd1481, {%r10537, %r10536};
	xor.b64  	%rd1482, %rd1481, %rd1480;
	shf.l.wrap.b32 	%r10538, %r10532, %r10533, 25;
	shf.l.wrap.b32 	%r10539, %r10533, %r10532, 25;
	mov.b64 	%rd1483, {%r10539, %r10538};
	xor.b64  	%rd1484, %rd1482, %rd1483;
	xor.b64  	%rd1485, %rd1466, %rd1418;
	xor.b64  	%rd1486, %rd1466, %rd1442;
	and.b64  	%rd1487, %rd1486, %rd1485;
	xor.b64  	%rd1488, %rd1487, %rd1466;
	add.s64 	%rd1489, %rd1478, %rd1488;
	add.s64 	%rd1490, %rd1489, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10540,%dummy}, %rd1479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10541}, %rd1479;
	}
	shf.r.wrap.b32 	%r10542, %r10541, %r10540, 14;
	shf.r.wrap.b32 	%r10543, %r10540, %r10541, 14;
	mov.b64 	%rd1491, {%r10543, %r10542};
	shf.r.wrap.b32 	%r10544, %r10541, %r10540, 18;
	shf.r.wrap.b32 	%r10545, %r10540, %r10541, 18;
	mov.b64 	%rd1492, {%r10545, %r10544};
	xor.b64  	%rd1493, %rd1492, %rd1491;
	shf.l.wrap.b32 	%r10546, %r10540, %r10541, 23;
	shf.l.wrap.b32 	%r10547, %r10541, %r10540, 23;
	mov.b64 	%rd1494, {%r10547, %r10546};
	xor.b64  	%rd1495, %rd1493, %rd1494;
	xor.b64  	%rd1496, %rd1455, %rd1431;
	and.b64  	%rd1497, %rd1479, %rd1496;
	xor.b64  	%rd1498, %rd1497, %rd1431;
	add.s64 	%rd1499, %rd1407, %rd1196;
	add.s64 	%rd1500, %rd1499, %rd2778;
	add.s64 	%rd1501, %rd1500, %rd1498;
	add.s64 	%rd1502, %rd1501, %rd1495;
	add.s64 	%rd1503, %rd1502, %rd1418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10548,%dummy}, %rd1490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10549}, %rd1490;
	}
	shf.r.wrap.b32 	%r10550, %r10549, %r10548, 28;
	shf.r.wrap.b32 	%r10551, %r10548, %r10549, 28;
	mov.b64 	%rd1504, {%r10551, %r10550};
	shf.l.wrap.b32 	%r10552, %r10548, %r10549, 30;
	shf.l.wrap.b32 	%r10553, %r10549, %r10548, 30;
	mov.b64 	%rd1505, {%r10553, %r10552};
	xor.b64  	%rd1506, %rd1505, %rd1504;
	shf.l.wrap.b32 	%r10554, %r10548, %r10549, 25;
	shf.l.wrap.b32 	%r10555, %r10549, %r10548, 25;
	mov.b64 	%rd1507, {%r10555, %r10554};
	xor.b64  	%rd1508, %rd1506, %rd1507;
	xor.b64  	%rd1509, %rd1490, %rd1442;
	xor.b64  	%rd1510, %rd1490, %rd1466;
	and.b64  	%rd1511, %rd1510, %rd1509;
	xor.b64  	%rd1512, %rd1511, %rd1490;
	add.s64 	%rd1513, %rd1502, %rd1512;
	add.s64 	%rd1514, %rd1513, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10556,%dummy}, %rd1503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10557}, %rd1503;
	}
	shf.r.wrap.b32 	%r10558, %r10557, %r10556, 14;
	shf.r.wrap.b32 	%r10559, %r10556, %r10557, 14;
	mov.b64 	%rd1515, {%r10559, %r10558};
	shf.r.wrap.b32 	%r10560, %r10557, %r10556, 18;
	shf.r.wrap.b32 	%r10561, %r10556, %r10557, 18;
	mov.b64 	%rd1516, {%r10561, %r10560};
	xor.b64  	%rd1517, %rd1516, %rd1515;
	shf.l.wrap.b32 	%r10562, %r10556, %r10557, 23;
	shf.l.wrap.b32 	%r10563, %r10557, %r10556, 23;
	mov.b64 	%rd1518, {%r10563, %r10562};
	xor.b64  	%rd1519, %rd1517, %rd1518;
	xor.b64  	%rd1520, %rd1479, %rd1455;
	and.b64  	%rd1521, %rd1503, %rd1520;
	xor.b64  	%rd1522, %rd1521, %rd1455;
	add.s64 	%rd1523, %rd1431, %rd1209;
	add.s64 	%rd1524, %rd1523, %rd2779;
	add.s64 	%rd1525, %rd1524, %rd1522;
	add.s64 	%rd1526, %rd1525, %rd1519;
	add.s64 	%rd1527, %rd1526, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10564,%dummy}, %rd1514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10565}, %rd1514;
	}
	shf.r.wrap.b32 	%r10566, %r10565, %r10564, 28;
	shf.r.wrap.b32 	%r10567, %r10564, %r10565, 28;
	mov.b64 	%rd1528, {%r10567, %r10566};
	shf.l.wrap.b32 	%r10568, %r10564, %r10565, 30;
	shf.l.wrap.b32 	%r10569, %r10565, %r10564, 30;
	mov.b64 	%rd1529, {%r10569, %r10568};
	xor.b64  	%rd1530, %rd1529, %rd1528;
	shf.l.wrap.b32 	%r10570, %r10564, %r10565, 25;
	shf.l.wrap.b32 	%r10571, %r10565, %r10564, 25;
	mov.b64 	%rd1531, {%r10571, %r10570};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	xor.b64  	%rd1533, %rd1514, %rd1466;
	xor.b64  	%rd1534, %rd1514, %rd1490;
	and.b64  	%rd1535, %rd1534, %rd1533;
	xor.b64  	%rd1536, %rd1535, %rd1514;
	add.s64 	%rd1537, %rd1526, %rd1536;
	add.s64 	%rd1538, %rd1537, %rd1532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10572,%dummy}, %rd1527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10573}, %rd1527;
	}
	shf.r.wrap.b32 	%r10574, %r10573, %r10572, 14;
	shf.r.wrap.b32 	%r10575, %r10572, %r10573, 14;
	mov.b64 	%rd1539, {%r10575, %r10574};
	shf.r.wrap.b32 	%r10576, %r10573, %r10572, 18;
	shf.r.wrap.b32 	%r10577, %r10572, %r10573, 18;
	mov.b64 	%rd1540, {%r10577, %r10576};
	xor.b64  	%rd1541, %rd1540, %rd1539;
	shf.l.wrap.b32 	%r10578, %r10572, %r10573, 23;
	shf.l.wrap.b32 	%r10579, %r10573, %r10572, 23;
	mov.b64 	%rd1542, {%r10579, %r10578};
	xor.b64  	%rd1543, %rd1541, %rd1542;
	xor.b64  	%rd1544, %rd1503, %rd1479;
	and.b64  	%rd1545, %rd1527, %rd1544;
	xor.b64  	%rd1546, %rd1545, %rd1479;
	add.s64 	%rd1547, %rd1455, %rd1222;
	add.s64 	%rd1548, %rd1547, %rd2780;
	add.s64 	%rd1549, %rd1548, %rd1546;
	add.s64 	%rd1550, %rd1549, %rd1543;
	add.s64 	%rd1551, %rd1550, %rd1466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10580,%dummy}, %rd1538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10581}, %rd1538;
	}
	shf.r.wrap.b32 	%r10582, %r10581, %r10580, 28;
	shf.r.wrap.b32 	%r10583, %r10580, %r10581, 28;
	mov.b64 	%rd1552, {%r10583, %r10582};
	shf.l.wrap.b32 	%r10584, %r10580, %r10581, 30;
	shf.l.wrap.b32 	%r10585, %r10581, %r10580, 30;
	mov.b64 	%rd1553, {%r10585, %r10584};
	xor.b64  	%rd1554, %rd1553, %rd1552;
	shf.l.wrap.b32 	%r10586, %r10580, %r10581, 25;
	shf.l.wrap.b32 	%r10587, %r10581, %r10580, 25;
	mov.b64 	%rd1555, {%r10587, %r10586};
	xor.b64  	%rd1556, %rd1554, %rd1555;
	xor.b64  	%rd1557, %rd1538, %rd1490;
	xor.b64  	%rd1558, %rd1538, %rd1514;
	and.b64  	%rd1559, %rd1558, %rd1557;
	xor.b64  	%rd1560, %rd1559, %rd1538;
	add.s64 	%rd1561, %rd1550, %rd1560;
	add.s64 	%rd1562, %rd1561, %rd1556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10588,%dummy}, %rd1551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10589}, %rd1551;
	}
	shf.r.wrap.b32 	%r10590, %r10589, %r10588, 14;
	shf.r.wrap.b32 	%r10591, %r10588, %r10589, 14;
	mov.b64 	%rd1563, {%r10591, %r10590};
	shf.r.wrap.b32 	%r10592, %r10589, %r10588, 18;
	shf.r.wrap.b32 	%r10593, %r10588, %r10589, 18;
	mov.b64 	%rd1564, {%r10593, %r10592};
	xor.b64  	%rd1565, %rd1564, %rd1563;
	shf.l.wrap.b32 	%r10594, %r10588, %r10589, 23;
	shf.l.wrap.b32 	%r10595, %r10589, %r10588, 23;
	mov.b64 	%rd1566, {%r10595, %r10594};
	xor.b64  	%rd1567, %rd1565, %rd1566;
	xor.b64  	%rd1568, %rd1527, %rd1503;
	and.b64  	%rd1569, %rd1551, %rd1568;
	xor.b64  	%rd1570, %rd1569, %rd1503;
	add.s64 	%rd1571, %rd1479, %rd1235;
	add.s64 	%rd1572, %rd1571, %rd2781;
	add.s64 	%rd1573, %rd1572, %rd1570;
	add.s64 	%rd1574, %rd1573, %rd1567;
	add.s64 	%rd1575, %rd1574, %rd1490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10596,%dummy}, %rd1562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10597}, %rd1562;
	}
	shf.r.wrap.b32 	%r10598, %r10597, %r10596, 28;
	shf.r.wrap.b32 	%r10599, %r10596, %r10597, 28;
	mov.b64 	%rd1576, {%r10599, %r10598};
	shf.l.wrap.b32 	%r10600, %r10596, %r10597, 30;
	shf.l.wrap.b32 	%r10601, %r10597, %r10596, 30;
	mov.b64 	%rd1577, {%r10601, %r10600};
	xor.b64  	%rd1578, %rd1577, %rd1576;
	shf.l.wrap.b32 	%r10602, %r10596, %r10597, 25;
	shf.l.wrap.b32 	%r10603, %r10597, %r10596, 25;
	mov.b64 	%rd1579, {%r10603, %r10602};
	xor.b64  	%rd1580, %rd1578, %rd1579;
	xor.b64  	%rd1581, %rd1562, %rd1514;
	xor.b64  	%rd1582, %rd1562, %rd1538;
	and.b64  	%rd1583, %rd1582, %rd1581;
	xor.b64  	%rd1584, %rd1583, %rd1562;
	add.s64 	%rd1585, %rd1574, %rd1584;
	add.s64 	%rd1586, %rd1585, %rd1580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10604,%dummy}, %rd1575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10605}, %rd1575;
	}
	shf.r.wrap.b32 	%r10606, %r10605, %r10604, 14;
	shf.r.wrap.b32 	%r10607, %r10604, %r10605, 14;
	mov.b64 	%rd1587, {%r10607, %r10606};
	shf.r.wrap.b32 	%r10608, %r10605, %r10604, 18;
	shf.r.wrap.b32 	%r10609, %r10604, %r10605, 18;
	mov.b64 	%rd1588, {%r10609, %r10608};
	xor.b64  	%rd1589, %rd1588, %rd1587;
	shf.l.wrap.b32 	%r10610, %r10604, %r10605, 23;
	shf.l.wrap.b32 	%r10611, %r10605, %r10604, 23;
	mov.b64 	%rd1590, {%r10611, %r10610};
	xor.b64  	%rd1591, %rd1589, %rd1590;
	xor.b64  	%rd1592, %rd1551, %rd1527;
	and.b64  	%rd1593, %rd1575, %rd1592;
	xor.b64  	%rd1594, %rd1593, %rd1527;
	add.s64 	%rd1595, %rd1503, %rd1248;
	add.s64 	%rd1596, %rd1595, %rd2782;
	add.s64 	%rd1597, %rd1596, %rd1594;
	add.s64 	%rd1598, %rd1597, %rd1591;
	add.s64 	%rd1599, %rd1598, %rd1514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10612,%dummy}, %rd1586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10613}, %rd1586;
	}
	shf.r.wrap.b32 	%r10614, %r10613, %r10612, 28;
	shf.r.wrap.b32 	%r10615, %r10612, %r10613, 28;
	mov.b64 	%rd1600, {%r10615, %r10614};
	shf.l.wrap.b32 	%r10616, %r10612, %r10613, 30;
	shf.l.wrap.b32 	%r10617, %r10613, %r10612, 30;
	mov.b64 	%rd1601, {%r10617, %r10616};
	xor.b64  	%rd1602, %rd1601, %rd1600;
	shf.l.wrap.b32 	%r10618, %r10612, %r10613, 25;
	shf.l.wrap.b32 	%r10619, %r10613, %r10612, 25;
	mov.b64 	%rd1603, {%r10619, %r10618};
	xor.b64  	%rd1604, %rd1602, %rd1603;
	xor.b64  	%rd1605, %rd1586, %rd1538;
	xor.b64  	%rd1606, %rd1586, %rd1562;
	and.b64  	%rd1607, %rd1606, %rd1605;
	xor.b64  	%rd1608, %rd1607, %rd1586;
	add.s64 	%rd1609, %rd1598, %rd1608;
	add.s64 	%rd1610, %rd1609, %rd1604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10620,%dummy}, %rd1599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10621}, %rd1599;
	}
	shf.r.wrap.b32 	%r10622, %r10621, %r10620, 14;
	shf.r.wrap.b32 	%r10623, %r10620, %r10621, 14;
	mov.b64 	%rd1611, {%r10623, %r10622};
	shf.r.wrap.b32 	%r10624, %r10621, %r10620, 18;
	shf.r.wrap.b32 	%r10625, %r10620, %r10621, 18;
	mov.b64 	%rd1612, {%r10625, %r10624};
	xor.b64  	%rd1613, %rd1612, %rd1611;
	shf.l.wrap.b32 	%r10626, %r10620, %r10621, 23;
	shf.l.wrap.b32 	%r10627, %r10621, %r10620, 23;
	mov.b64 	%rd1614, {%r10627, %r10626};
	xor.b64  	%rd1615, %rd1613, %rd1614;
	xor.b64  	%rd1616, %rd1575, %rd1551;
	and.b64  	%rd1617, %rd1599, %rd1616;
	xor.b64  	%rd1618, %rd1617, %rd1551;
	add.s64 	%rd1619, %rd1527, %rd1261;
	add.s64 	%rd1620, %rd1619, %rd2783;
	add.s64 	%rd1621, %rd1620, %rd1618;
	add.s64 	%rd1622, %rd1621, %rd1615;
	add.s64 	%rd1623, %rd1622, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10628,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10629}, %rd1610;
	}
	shf.r.wrap.b32 	%r10630, %r10629, %r10628, 28;
	shf.r.wrap.b32 	%r10631, %r10628, %r10629, 28;
	mov.b64 	%rd1624, {%r10631, %r10630};
	shf.l.wrap.b32 	%r10632, %r10628, %r10629, 30;
	shf.l.wrap.b32 	%r10633, %r10629, %r10628, 30;
	mov.b64 	%rd1625, {%r10633, %r10632};
	xor.b64  	%rd1626, %rd1625, %rd1624;
	shf.l.wrap.b32 	%r10634, %r10628, %r10629, 25;
	shf.l.wrap.b32 	%r10635, %r10629, %r10628, 25;
	mov.b64 	%rd1627, {%r10635, %r10634};
	xor.b64  	%rd1628, %rd1626, %rd1627;
	xor.b64  	%rd1629, %rd1610, %rd1562;
	xor.b64  	%rd1630, %rd1610, %rd1586;
	and.b64  	%rd1631, %rd1630, %rd1629;
	xor.b64  	%rd1632, %rd1631, %rd1610;
	add.s64 	%rd1633, %rd1622, %rd1632;
	add.s64 	%rd1634, %rd1633, %rd1628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10636,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10637}, %rd1623;
	}
	shf.r.wrap.b32 	%r10638, %r10637, %r10636, 14;
	shf.r.wrap.b32 	%r10639, %r10636, %r10637, 14;
	mov.b64 	%rd1635, {%r10639, %r10638};
	shf.r.wrap.b32 	%r10640, %r10637, %r10636, 18;
	shf.r.wrap.b32 	%r10641, %r10636, %r10637, 18;
	mov.b64 	%rd1636, {%r10641, %r10640};
	xor.b64  	%rd1637, %rd1636, %rd1635;
	shf.l.wrap.b32 	%r10642, %r10636, %r10637, 23;
	shf.l.wrap.b32 	%r10643, %r10637, %r10636, 23;
	mov.b64 	%rd1638, {%r10643, %r10642};
	xor.b64  	%rd1639, %rd1637, %rd1638;
	xor.b64  	%rd1640, %rd1599, %rd1575;
	and.b64  	%rd1641, %rd1623, %rd1640;
	xor.b64  	%rd1642, %rd1641, %rd1575;
	add.s64 	%rd1643, %rd1551, %rd1274;
	add.s64 	%rd1644, %rd1643, %rd2784;
	add.s64 	%rd1645, %rd1644, %rd1642;
	add.s64 	%rd1646, %rd1645, %rd1639;
	add.s64 	%rd1647, %rd1646, %rd1562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10644,%dummy}, %rd1634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10645}, %rd1634;
	}
	shf.r.wrap.b32 	%r10646, %r10645, %r10644, 28;
	shf.r.wrap.b32 	%r10647, %r10644, %r10645, 28;
	mov.b64 	%rd1648, {%r10647, %r10646};
	shf.l.wrap.b32 	%r10648, %r10644, %r10645, 30;
	shf.l.wrap.b32 	%r10649, %r10645, %r10644, 30;
	mov.b64 	%rd1649, {%r10649, %r10648};
	xor.b64  	%rd1650, %rd1649, %rd1648;
	shf.l.wrap.b32 	%r10650, %r10644, %r10645, 25;
	shf.l.wrap.b32 	%r10651, %r10645, %r10644, 25;
	mov.b64 	%rd1651, {%r10651, %r10650};
	xor.b64  	%rd1652, %rd1650, %rd1651;
	xor.b64  	%rd1653, %rd1634, %rd1586;
	xor.b64  	%rd1654, %rd1634, %rd1610;
	and.b64  	%rd1655, %rd1654, %rd1653;
	xor.b64  	%rd1656, %rd1655, %rd1634;
	add.s64 	%rd1657, %rd1646, %rd1656;
	add.s64 	%rd1658, %rd1657, %rd1652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10652,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10653}, %rd1261;
	}
	shf.r.wrap.b32 	%r10654, %r10653, %r10652, 19;
	shf.r.wrap.b32 	%r10655, %r10652, %r10653, 19;
	mov.b64 	%rd1659, {%r10655, %r10654};
	shf.l.wrap.b32 	%r10656, %r10652, %r10653, 3;
	shf.l.wrap.b32 	%r10657, %r10653, %r10652, 3;
	mov.b64 	%rd1660, {%r10657, %r10656};
	shr.u64 	%rd1661, %rd1261, 6;
	xor.b64  	%rd1662, %rd1659, %rd1661;
	xor.b64  	%rd1663, %rd1662, %rd1660;
	shf.r.wrap.b32 	%r10658, %r10267, %r10266, 1;
	shf.r.wrap.b32 	%r10659, %r10266, %r10267, 1;
	mov.b64 	%rd1664, {%r10659, %r10658};
	shf.r.wrap.b32 	%r10660, %r10267, %r10266, 8;
	shf.r.wrap.b32 	%r10661, %r10266, %r10267, 8;
	mov.b64 	%rd1665, {%r10661, %r10660};
	shr.u64 	%rd1666, %rd1092, 7;
	xor.b64  	%rd1667, %rd1664, %rd1666;
	xor.b64  	%rd1668, %rd1667, %rd1665;
	add.s64 	%rd1669, %rd1079, %rd1196;
	add.s64 	%rd1670, %rd1669, %rd1663;
	add.s64 	%rd1671, %rd1670, %rd1668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10662,%dummy}, %rd1274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10663}, %rd1274;
	}
	shf.r.wrap.b32 	%r10664, %r10663, %r10662, 19;
	shf.r.wrap.b32 	%r10665, %r10662, %r10663, 19;
	mov.b64 	%rd1672, {%r10665, %r10664};
	shf.l.wrap.b32 	%r10666, %r10662, %r10663, 3;
	shf.l.wrap.b32 	%r10667, %r10663, %r10662, 3;
	mov.b64 	%rd1673, {%r10667, %r10666};
	shr.u64 	%rd1674, %rd1274, 6;
	xor.b64  	%rd1675, %rd1672, %rd1674;
	xor.b64  	%rd1676, %rd1675, %rd1673;
	shf.r.wrap.b32 	%r10668, %r10277, %r10276, 1;
	shf.r.wrap.b32 	%r10669, %r10276, %r10277, 1;
	mov.b64 	%rd1677, {%r10669, %r10668};
	shf.r.wrap.b32 	%r10670, %r10277, %r10276, 8;
	shf.r.wrap.b32 	%r10671, %r10276, %r10277, 8;
	mov.b64 	%rd1678, {%r10671, %r10670};
	shr.u64 	%rd1679, %rd1105, 7;
	xor.b64  	%rd1680, %rd1677, %rd1679;
	xor.b64  	%rd1681, %rd1680, %rd1678;
	add.s64 	%rd1682, %rd1092, %rd1209;
	add.s64 	%rd1683, %rd1682, %rd1676;
	add.s64 	%rd1684, %rd1683, %rd1681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10672,%dummy}, %rd1671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10673}, %rd1671;
	}
	shf.r.wrap.b32 	%r10674, %r10673, %r10672, 19;
	shf.r.wrap.b32 	%r10675, %r10672, %r10673, 19;
	mov.b64 	%rd1685, {%r10675, %r10674};
	shf.l.wrap.b32 	%r10676, %r10672, %r10673, 3;
	shf.l.wrap.b32 	%r10677, %r10673, %r10672, 3;
	mov.b64 	%rd1686, {%r10677, %r10676};
	shr.u64 	%rd1687, %rd1671, 6;
	xor.b64  	%rd1688, %rd1685, %rd1687;
	xor.b64  	%rd1689, %rd1688, %rd1686;
	shf.r.wrap.b32 	%r10678, %r10287, %r10286, 1;
	shf.r.wrap.b32 	%r10679, %r10286, %r10287, 1;
	mov.b64 	%rd1690, {%r10679, %r10678};
	shf.r.wrap.b32 	%r10680, %r10287, %r10286, 8;
	shf.r.wrap.b32 	%r10681, %r10286, %r10287, 8;
	mov.b64 	%rd1691, {%r10681, %r10680};
	shr.u64 	%rd1692, %rd1118, 7;
	xor.b64  	%rd1693, %rd1690, %rd1692;
	xor.b64  	%rd1694, %rd1693, %rd1691;
	add.s64 	%rd1695, %rd1105, %rd1222;
	add.s64 	%rd1696, %rd1695, %rd1689;
	add.s64 	%rd1697, %rd1696, %rd1694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10682,%dummy}, %rd1684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10683}, %rd1684;
	}
	shf.r.wrap.b32 	%r10684, %r10683, %r10682, 19;
	shf.r.wrap.b32 	%r10685, %r10682, %r10683, 19;
	mov.b64 	%rd1698, {%r10685, %r10684};
	shf.l.wrap.b32 	%r10686, %r10682, %r10683, 3;
	shf.l.wrap.b32 	%r10687, %r10683, %r10682, 3;
	mov.b64 	%rd1699, {%r10687, %r10686};
	shr.u64 	%rd1700, %rd1684, 6;
	xor.b64  	%rd1701, %rd1698, %rd1700;
	xor.b64  	%rd1702, %rd1701, %rd1699;
	shf.r.wrap.b32 	%r10688, %r10297, %r10296, 1;
	shf.r.wrap.b32 	%r10689, %r10296, %r10297, 1;
	mov.b64 	%rd1703, {%r10689, %r10688};
	shf.r.wrap.b32 	%r10690, %r10297, %r10296, 8;
	shf.r.wrap.b32 	%r10691, %r10296, %r10297, 8;
	mov.b64 	%rd1704, {%r10691, %r10690};
	shr.u64 	%rd1705, %rd1131, 7;
	xor.b64  	%rd1706, %rd1703, %rd1705;
	xor.b64  	%rd1707, %rd1706, %rd1704;
	add.s64 	%rd1708, %rd1118, %rd1235;
	add.s64 	%rd1709, %rd1708, %rd1702;
	add.s64 	%rd1710, %rd1709, %rd1707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10692,%dummy}, %rd1697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10693}, %rd1697;
	}
	shf.r.wrap.b32 	%r10694, %r10693, %r10692, 19;
	shf.r.wrap.b32 	%r10695, %r10692, %r10693, 19;
	mov.b64 	%rd1711, {%r10695, %r10694};
	shf.l.wrap.b32 	%r10696, %r10692, %r10693, 3;
	shf.l.wrap.b32 	%r10697, %r10693, %r10692, 3;
	mov.b64 	%rd1712, {%r10697, %r10696};
	shr.u64 	%rd1713, %rd1697, 6;
	xor.b64  	%rd1714, %rd1711, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd1712;
	shf.r.wrap.b32 	%r10698, %r10307, %r10306, 1;
	shf.r.wrap.b32 	%r10699, %r10306, %r10307, 1;
	mov.b64 	%rd1716, {%r10699, %r10698};
	shf.r.wrap.b32 	%r10700, %r10307, %r10306, 8;
	shf.r.wrap.b32 	%r10701, %r10306, %r10307, 8;
	mov.b64 	%rd1717, {%r10701, %r10700};
	shr.u64 	%rd1718, %rd1144, 7;
	xor.b64  	%rd1719, %rd1716, %rd1718;
	xor.b64  	%rd1720, %rd1719, %rd1717;
	add.s64 	%rd1721, %rd1131, %rd1248;
	add.s64 	%rd1722, %rd1721, %rd1715;
	add.s64 	%rd1723, %rd1722, %rd1720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10702,%dummy}, %rd1710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10703}, %rd1710;
	}
	shf.r.wrap.b32 	%r10704, %r10703, %r10702, 19;
	shf.r.wrap.b32 	%r10705, %r10702, %r10703, 19;
	mov.b64 	%rd1724, {%r10705, %r10704};
	shf.l.wrap.b32 	%r10706, %r10702, %r10703, 3;
	shf.l.wrap.b32 	%r10707, %r10703, %r10702, 3;
	mov.b64 	%rd1725, {%r10707, %r10706};
	shr.u64 	%rd1726, %rd1710, 6;
	xor.b64  	%rd1727, %rd1724, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1725;
	shf.r.wrap.b32 	%r10708, %r10317, %r10316, 1;
	shf.r.wrap.b32 	%r10709, %r10316, %r10317, 1;
	mov.b64 	%rd1729, {%r10709, %r10708};
	shf.r.wrap.b32 	%r10710, %r10317, %r10316, 8;
	shf.r.wrap.b32 	%r10711, %r10316, %r10317, 8;
	mov.b64 	%rd1730, {%r10711, %r10710};
	shr.u64 	%rd1731, %rd1157, 7;
	xor.b64  	%rd1732, %rd1729, %rd1731;
	xor.b64  	%rd1733, %rd1732, %rd1730;
	add.s64 	%rd1734, %rd1144, %rd1261;
	add.s64 	%rd1735, %rd1734, %rd1728;
	add.s64 	%rd1736, %rd1735, %rd1733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10712,%dummy}, %rd1723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10713}, %rd1723;
	}
	shf.r.wrap.b32 	%r10714, %r10713, %r10712, 19;
	shf.r.wrap.b32 	%r10715, %r10712, %r10713, 19;
	mov.b64 	%rd1737, {%r10715, %r10714};
	shf.l.wrap.b32 	%r10716, %r10712, %r10713, 3;
	shf.l.wrap.b32 	%r10717, %r10713, %r10712, 3;
	mov.b64 	%rd1738, {%r10717, %r10716};
	shr.u64 	%rd1739, %rd1723, 6;
	xor.b64  	%rd1740, %rd1737, %rd1739;
	xor.b64  	%rd1741, %rd1740, %rd1738;
	shf.r.wrap.b32 	%r10718, %r10327, %r10326, 1;
	shf.r.wrap.b32 	%r10719, %r10326, %r10327, 1;
	mov.b64 	%rd1742, {%r10719, %r10718};
	shf.r.wrap.b32 	%r10720, %r10327, %r10326, 8;
	shf.r.wrap.b32 	%r10721, %r10326, %r10327, 8;
	mov.b64 	%rd1743, {%r10721, %r10720};
	shr.u64 	%rd1744, %rd1170, 7;
	xor.b64  	%rd1745, %rd1742, %rd1744;
	xor.b64  	%rd1746, %rd1745, %rd1743;
	add.s64 	%rd1747, %rd1157, %rd1274;
	add.s64 	%rd1748, %rd1747, %rd1741;
	add.s64 	%rd1749, %rd1748, %rd1746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10722,%dummy}, %rd1736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10723}, %rd1736;
	}
	shf.r.wrap.b32 	%r10724, %r10723, %r10722, 19;
	shf.r.wrap.b32 	%r10725, %r10722, %r10723, 19;
	mov.b64 	%rd1750, {%r10725, %r10724};
	shf.l.wrap.b32 	%r10726, %r10722, %r10723, 3;
	shf.l.wrap.b32 	%r10727, %r10723, %r10722, 3;
	mov.b64 	%rd1751, {%r10727, %r10726};
	shr.u64 	%rd1752, %rd1736, 6;
	xor.b64  	%rd1753, %rd1750, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1751;
	shf.r.wrap.b32 	%r10728, %r10337, %r10336, 1;
	shf.r.wrap.b32 	%r10729, %r10336, %r10337, 1;
	mov.b64 	%rd1755, {%r10729, %r10728};
	shf.r.wrap.b32 	%r10730, %r10337, %r10336, 8;
	shf.r.wrap.b32 	%r10731, %r10336, %r10337, 8;
	mov.b64 	%rd1756, {%r10731, %r10730};
	shr.u64 	%rd1757, %rd1183, 7;
	xor.b64  	%rd1758, %rd1755, %rd1757;
	xor.b64  	%rd1759, %rd1758, %rd1756;
	add.s64 	%rd1760, %rd1671, %rd1170;
	add.s64 	%rd1761, %rd1760, %rd1754;
	add.s64 	%rd1762, %rd1761, %rd1759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10732,%dummy}, %rd1749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10733}, %rd1749;
	}
	shf.r.wrap.b32 	%r10734, %r10733, %r10732, 19;
	shf.r.wrap.b32 	%r10735, %r10732, %r10733, 19;
	mov.b64 	%rd1763, {%r10735, %r10734};
	shf.l.wrap.b32 	%r10736, %r10732, %r10733, 3;
	shf.l.wrap.b32 	%r10737, %r10733, %r10732, 3;
	mov.b64 	%rd1764, {%r10737, %r10736};
	shr.u64 	%rd1765, %rd1749, 6;
	xor.b64  	%rd1766, %rd1763, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1764;
	shf.r.wrap.b32 	%r10738, %r10347, %r10346, 1;
	shf.r.wrap.b32 	%r10739, %r10346, %r10347, 1;
	mov.b64 	%rd1768, {%r10739, %r10738};
	shf.r.wrap.b32 	%r10740, %r10347, %r10346, 8;
	shf.r.wrap.b32 	%r10741, %r10346, %r10347, 8;
	mov.b64 	%rd1769, {%r10741, %r10740};
	shr.u64 	%rd1770, %rd1196, 7;
	xor.b64  	%rd1771, %rd1768, %rd1770;
	xor.b64  	%rd1772, %rd1771, %rd1769;
	add.s64 	%rd1773, %rd1684, %rd1183;
	add.s64 	%rd1774, %rd1773, %rd1767;
	add.s64 	%rd1775, %rd1774, %rd1772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10742,%dummy}, %rd1762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10743}, %rd1762;
	}
	shf.r.wrap.b32 	%r10744, %r10743, %r10742, 19;
	shf.r.wrap.b32 	%r10745, %r10742, %r10743, 19;
	mov.b64 	%rd1776, {%r10745, %r10744};
	shf.l.wrap.b32 	%r10746, %r10742, %r10743, 3;
	shf.l.wrap.b32 	%r10747, %r10743, %r10742, 3;
	mov.b64 	%rd1777, {%r10747, %r10746};
	shr.u64 	%rd1778, %rd1762, 6;
	xor.b64  	%rd1779, %rd1776, %rd1778;
	xor.b64  	%rd1780, %rd1779, %rd1777;
	shf.r.wrap.b32 	%r10748, %r10357, %r10356, 1;
	shf.r.wrap.b32 	%r10749, %r10356, %r10357, 1;
	mov.b64 	%rd1781, {%r10749, %r10748};
	shf.r.wrap.b32 	%r10750, %r10357, %r10356, 8;
	shf.r.wrap.b32 	%r10751, %r10356, %r10357, 8;
	mov.b64 	%rd1782, {%r10751, %r10750};
	shr.u64 	%rd1783, %rd1209, 7;
	xor.b64  	%rd1784, %rd1781, %rd1783;
	xor.b64  	%rd1785, %rd1784, %rd1782;
	add.s64 	%rd1786, %rd1697, %rd1196;
	add.s64 	%rd1787, %rd1786, %rd1780;
	add.s64 	%rd1788, %rd1787, %rd1785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10752,%dummy}, %rd1775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10753}, %rd1775;
	}
	shf.r.wrap.b32 	%r10754, %r10753, %r10752, 19;
	shf.r.wrap.b32 	%r10755, %r10752, %r10753, 19;
	mov.b64 	%rd1789, {%r10755, %r10754};
	shf.l.wrap.b32 	%r10756, %r10752, %r10753, 3;
	shf.l.wrap.b32 	%r10757, %r10753, %r10752, 3;
	mov.b64 	%rd1790, {%r10757, %r10756};
	shr.u64 	%rd1791, %rd1775, 6;
	xor.b64  	%rd1792, %rd1789, %rd1791;
	xor.b64  	%rd1793, %rd1792, %rd1790;
	shf.r.wrap.b32 	%r10758, %r10367, %r10366, 1;
	shf.r.wrap.b32 	%r10759, %r10366, %r10367, 1;
	mov.b64 	%rd1794, {%r10759, %r10758};
	shf.r.wrap.b32 	%r10760, %r10367, %r10366, 8;
	shf.r.wrap.b32 	%r10761, %r10366, %r10367, 8;
	mov.b64 	%rd1795, {%r10761, %r10760};
	shr.u64 	%rd1796, %rd1222, 7;
	xor.b64  	%rd1797, %rd1794, %rd1796;
	xor.b64  	%rd1798, %rd1797, %rd1795;
	add.s64 	%rd1799, %rd1710, %rd1209;
	add.s64 	%rd1800, %rd1799, %rd1793;
	add.s64 	%rd1801, %rd1800, %rd1798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10762,%dummy}, %rd1788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10763}, %rd1788;
	}
	shf.r.wrap.b32 	%r10764, %r10763, %r10762, 19;
	shf.r.wrap.b32 	%r10765, %r10762, %r10763, 19;
	mov.b64 	%rd1802, {%r10765, %r10764};
	shf.l.wrap.b32 	%r10766, %r10762, %r10763, 3;
	shf.l.wrap.b32 	%r10767, %r10763, %r10762, 3;
	mov.b64 	%rd1803, {%r10767, %r10766};
	shr.u64 	%rd1804, %rd1788, 6;
	xor.b64  	%rd1805, %rd1802, %rd1804;
	xor.b64  	%rd1806, %rd1805, %rd1803;
	shf.r.wrap.b32 	%r10768, %r10377, %r10376, 1;
	shf.r.wrap.b32 	%r10769, %r10376, %r10377, 1;
	mov.b64 	%rd1807, {%r10769, %r10768};
	shf.r.wrap.b32 	%r10770, %r10377, %r10376, 8;
	shf.r.wrap.b32 	%r10771, %r10376, %r10377, 8;
	mov.b64 	%rd1808, {%r10771, %r10770};
	shr.u64 	%rd1809, %rd1235, 7;
	xor.b64  	%rd1810, %rd1807, %rd1809;
	xor.b64  	%rd1811, %rd1810, %rd1808;
	add.s64 	%rd1812, %rd1723, %rd1222;
	add.s64 	%rd1813, %rd1812, %rd1806;
	add.s64 	%rd1814, %rd1813, %rd1811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10772,%dummy}, %rd1801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10773}, %rd1801;
	}
	shf.r.wrap.b32 	%r10774, %r10773, %r10772, 19;
	shf.r.wrap.b32 	%r10775, %r10772, %r10773, 19;
	mov.b64 	%rd1815, {%r10775, %r10774};
	shf.l.wrap.b32 	%r10776, %r10772, %r10773, 3;
	shf.l.wrap.b32 	%r10777, %r10773, %r10772, 3;
	mov.b64 	%rd1816, {%r10777, %r10776};
	shr.u64 	%rd1817, %rd1801, 6;
	xor.b64  	%rd1818, %rd1815, %rd1817;
	xor.b64  	%rd1819, %rd1818, %rd1816;
	shf.r.wrap.b32 	%r10778, %r10387, %r10386, 1;
	shf.r.wrap.b32 	%r10779, %r10386, %r10387, 1;
	mov.b64 	%rd1820, {%r10779, %r10778};
	shf.r.wrap.b32 	%r10780, %r10387, %r10386, 8;
	shf.r.wrap.b32 	%r10781, %r10386, %r10387, 8;
	mov.b64 	%rd1821, {%r10781, %r10780};
	shr.u64 	%rd1822, %rd1248, 7;
	xor.b64  	%rd1823, %rd1820, %rd1822;
	xor.b64  	%rd1824, %rd1823, %rd1821;
	add.s64 	%rd1825, %rd1736, %rd1235;
	add.s64 	%rd1826, %rd1825, %rd1819;
	add.s64 	%rd1827, %rd1826, %rd1824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10782,%dummy}, %rd1814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10783}, %rd1814;
	}
	shf.r.wrap.b32 	%r10784, %r10783, %r10782, 19;
	shf.r.wrap.b32 	%r10785, %r10782, %r10783, 19;
	mov.b64 	%rd1828, {%r10785, %r10784};
	shf.l.wrap.b32 	%r10786, %r10782, %r10783, 3;
	shf.l.wrap.b32 	%r10787, %r10783, %r10782, 3;
	mov.b64 	%rd1829, {%r10787, %r10786};
	shr.u64 	%rd1830, %rd1814, 6;
	xor.b64  	%rd1831, %rd1828, %rd1830;
	xor.b64  	%rd1832, %rd1831, %rd1829;
	shf.r.wrap.b32 	%r10788, %r10653, %r10652, 1;
	shf.r.wrap.b32 	%r10789, %r10652, %r10653, 1;
	mov.b64 	%rd1833, {%r10789, %r10788};
	shf.r.wrap.b32 	%r10790, %r10653, %r10652, 8;
	shf.r.wrap.b32 	%r10791, %r10652, %r10653, 8;
	mov.b64 	%rd1834, {%r10791, %r10790};
	shr.u64 	%rd1835, %rd1261, 7;
	xor.b64  	%rd1836, %rd1833, %rd1835;
	xor.b64  	%rd1837, %rd1836, %rd1834;
	add.s64 	%rd1838, %rd1749, %rd1248;
	add.s64 	%rd1839, %rd1838, %rd1832;
	add.s64 	%rd1840, %rd1839, %rd1837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10792,%dummy}, %rd1827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10793}, %rd1827;
	}
	shf.r.wrap.b32 	%r10794, %r10793, %r10792, 19;
	shf.r.wrap.b32 	%r10795, %r10792, %r10793, 19;
	mov.b64 	%rd1841, {%r10795, %r10794};
	shf.l.wrap.b32 	%r10796, %r10792, %r10793, 3;
	shf.l.wrap.b32 	%r10797, %r10793, %r10792, 3;
	mov.b64 	%rd1842, {%r10797, %r10796};
	shr.u64 	%rd1843, %rd1827, 6;
	xor.b64  	%rd1844, %rd1841, %rd1843;
	xor.b64  	%rd1845, %rd1844, %rd1842;
	shf.r.wrap.b32 	%r10798, %r10663, %r10662, 1;
	shf.r.wrap.b32 	%r10799, %r10662, %r10663, 1;
	mov.b64 	%rd1846, {%r10799, %r10798};
	shf.r.wrap.b32 	%r10800, %r10663, %r10662, 8;
	shf.r.wrap.b32 	%r10801, %r10662, %r10663, 8;
	mov.b64 	%rd1847, {%r10801, %r10800};
	shr.u64 	%rd1848, %rd1274, 7;
	xor.b64  	%rd1849, %rd1846, %rd1848;
	xor.b64  	%rd1850, %rd1849, %rd1847;
	add.s64 	%rd1851, %rd1762, %rd1261;
	add.s64 	%rd1852, %rd1851, %rd1845;
	add.s64 	%rd1853, %rd1852, %rd1850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10802,%dummy}, %rd1840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10803}, %rd1840;
	}
	shf.r.wrap.b32 	%r10804, %r10803, %r10802, 19;
	shf.r.wrap.b32 	%r10805, %r10802, %r10803, 19;
	mov.b64 	%rd1854, {%r10805, %r10804};
	shf.l.wrap.b32 	%r10806, %r10802, %r10803, 3;
	shf.l.wrap.b32 	%r10807, %r10803, %r10802, 3;
	mov.b64 	%rd1855, {%r10807, %r10806};
	shr.u64 	%rd1856, %rd1840, 6;
	xor.b64  	%rd1857, %rd1854, %rd1856;
	xor.b64  	%rd1858, %rd1857, %rd1855;
	shf.r.wrap.b32 	%r10808, %r10673, %r10672, 1;
	shf.r.wrap.b32 	%r10809, %r10672, %r10673, 1;
	mov.b64 	%rd1859, {%r10809, %r10808};
	shf.r.wrap.b32 	%r10810, %r10673, %r10672, 8;
	shf.r.wrap.b32 	%r10811, %r10672, %r10673, 8;
	mov.b64 	%rd1860, {%r10811, %r10810};
	shr.u64 	%rd1861, %rd1671, 7;
	xor.b64  	%rd1862, %rd1859, %rd1861;
	xor.b64  	%rd1863, %rd1862, %rd1860;
	add.s64 	%rd1864, %rd1775, %rd1274;
	add.s64 	%rd1865, %rd1864, %rd1858;
	add.s64 	%rd1866, %rd1865, %rd1863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10812,%dummy}, %rd1647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10813}, %rd1647;
	}
	shf.r.wrap.b32 	%r10814, %r10813, %r10812, 14;
	shf.r.wrap.b32 	%r10815, %r10812, %r10813, 14;
	mov.b64 	%rd1867, {%r10815, %r10814};
	shf.r.wrap.b32 	%r10816, %r10813, %r10812, 18;
	shf.r.wrap.b32 	%r10817, %r10812, %r10813, 18;
	mov.b64 	%rd1868, {%r10817, %r10816};
	xor.b64  	%rd1869, %rd1868, %rd1867;
	shf.l.wrap.b32 	%r10818, %r10812, %r10813, 23;
	shf.l.wrap.b32 	%r10819, %r10813, %r10812, 23;
	mov.b64 	%rd1870, {%r10819, %r10818};
	xor.b64  	%rd1871, %rd1869, %rd1870;
	xor.b64  	%rd1872, %rd1599, %rd1623;
	and.b64  	%rd1873, %rd1872, %rd1647;
	xor.b64  	%rd1874, %rd1873, %rd1599;
	add.s64 	%rd1875, %rd1874, %rd1575;
	add.s64 	%rd1876, %rd1875, %rd1671;
	add.s64 	%rd1877, %rd1876, %rd2785;
	add.s64 	%rd1878, %rd1877, %rd1871;
	add.s64 	%rd1879, %rd1878, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10820,%dummy}, %rd1658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10821}, %rd1658;
	}
	shf.r.wrap.b32 	%r10822, %r10821, %r10820, 28;
	shf.r.wrap.b32 	%r10823, %r10820, %r10821, 28;
	mov.b64 	%rd1880, {%r10823, %r10822};
	shf.l.wrap.b32 	%r10824, %r10820, %r10821, 30;
	shf.l.wrap.b32 	%r10825, %r10821, %r10820, 30;
	mov.b64 	%rd1881, {%r10825, %r10824};
	xor.b64  	%rd1882, %rd1881, %rd1880;
	shf.l.wrap.b32 	%r10826, %r10820, %r10821, 25;
	shf.l.wrap.b32 	%r10827, %r10821, %r10820, 25;
	mov.b64 	%rd1883, {%r10827, %r10826};
	xor.b64  	%rd1884, %rd1882, %rd1883;
	xor.b64  	%rd1885, %rd1658, %rd1610;
	xor.b64  	%rd1886, %rd1658, %rd1634;
	and.b64  	%rd1887, %rd1886, %rd1885;
	xor.b64  	%rd1888, %rd1887, %rd1658;
	add.s64 	%rd1889, %rd1878, %rd1888;
	add.s64 	%rd1890, %rd1889, %rd1884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10828,%dummy}, %rd1879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10829}, %rd1879;
	}
	shf.r.wrap.b32 	%r10830, %r10829, %r10828, 14;
	shf.r.wrap.b32 	%r10831, %r10828, %r10829, 14;
	mov.b64 	%rd1891, {%r10831, %r10830};
	shf.r.wrap.b32 	%r10832, %r10829, %r10828, 18;
	shf.r.wrap.b32 	%r10833, %r10828, %r10829, 18;
	mov.b64 	%rd1892, {%r10833, %r10832};
	xor.b64  	%rd1893, %rd1892, %rd1891;
	shf.l.wrap.b32 	%r10834, %r10828, %r10829, 23;
	shf.l.wrap.b32 	%r10835, %r10829, %r10828, 23;
	mov.b64 	%rd1894, {%r10835, %r10834};
	xor.b64  	%rd1895, %rd1893, %rd1894;
	xor.b64  	%rd1896, %rd1623, %rd1647;
	and.b64  	%rd1897, %rd1879, %rd1896;
	xor.b64  	%rd1898, %rd1897, %rd1623;
	add.s64 	%rd1899, %rd1684, %rd1599;
	add.s64 	%rd1900, %rd1899, %rd2786;
	add.s64 	%rd1901, %rd1900, %rd1898;
	add.s64 	%rd1902, %rd1901, %rd1895;
	add.s64 	%rd1903, %rd1902, %rd1610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10836,%dummy}, %rd1890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10837}, %rd1890;
	}
	shf.r.wrap.b32 	%r10838, %r10837, %r10836, 28;
	shf.r.wrap.b32 	%r10839, %r10836, %r10837, 28;
	mov.b64 	%rd1904, {%r10839, %r10838};
	shf.l.wrap.b32 	%r10840, %r10836, %r10837, 30;
	shf.l.wrap.b32 	%r10841, %r10837, %r10836, 30;
	mov.b64 	%rd1905, {%r10841, %r10840};
	xor.b64  	%rd1906, %rd1905, %rd1904;
	shf.l.wrap.b32 	%r10842, %r10836, %r10837, 25;
	shf.l.wrap.b32 	%r10843, %r10837, %r10836, 25;
	mov.b64 	%rd1907, {%r10843, %r10842};
	xor.b64  	%rd1908, %rd1906, %rd1907;
	xor.b64  	%rd1909, %rd1890, %rd1634;
	xor.b64  	%rd1910, %rd1890, %rd1658;
	and.b64  	%rd1911, %rd1910, %rd1909;
	xor.b64  	%rd1912, %rd1911, %rd1890;
	add.s64 	%rd1913, %rd1902, %rd1912;
	add.s64 	%rd1914, %rd1913, %rd1908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10844,%dummy}, %rd1903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10845}, %rd1903;
	}
	shf.r.wrap.b32 	%r10846, %r10845, %r10844, 14;
	shf.r.wrap.b32 	%r10847, %r10844, %r10845, 14;
	mov.b64 	%rd1915, {%r10847, %r10846};
	shf.r.wrap.b32 	%r10848, %r10845, %r10844, 18;
	shf.r.wrap.b32 	%r10849, %r10844, %r10845, 18;
	mov.b64 	%rd1916, {%r10849, %r10848};
	xor.b64  	%rd1917, %rd1916, %rd1915;
	shf.l.wrap.b32 	%r10850, %r10844, %r10845, 23;
	shf.l.wrap.b32 	%r10851, %r10845, %r10844, 23;
	mov.b64 	%rd1918, {%r10851, %r10850};
	xor.b64  	%rd1919, %rd1917, %rd1918;
	xor.b64  	%rd1920, %rd1879, %rd1647;
	and.b64  	%rd1921, %rd1903, %rd1920;
	xor.b64  	%rd1922, %rd1921, %rd1647;
	add.s64 	%rd1923, %rd1697, %rd1623;
	add.s64 	%rd1924, %rd1923, %rd2787;
	add.s64 	%rd1925, %rd1924, %rd1922;
	add.s64 	%rd1926, %rd1925, %rd1919;
	add.s64 	%rd1927, %rd1926, %rd1634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10852,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10853}, %rd1914;
	}
	shf.r.wrap.b32 	%r10854, %r10853, %r10852, 28;
	shf.r.wrap.b32 	%r10855, %r10852, %r10853, 28;
	mov.b64 	%rd1928, {%r10855, %r10854};
	shf.l.wrap.b32 	%r10856, %r10852, %r10853, 30;
	shf.l.wrap.b32 	%r10857, %r10853, %r10852, 30;
	mov.b64 	%rd1929, {%r10857, %r10856};
	xor.b64  	%rd1930, %rd1929, %rd1928;
	shf.l.wrap.b32 	%r10858, %r10852, %r10853, 25;
	shf.l.wrap.b32 	%r10859, %r10853, %r10852, 25;
	mov.b64 	%rd1931, {%r10859, %r10858};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	xor.b64  	%rd1933, %rd1914, %rd1658;
	xor.b64  	%rd1934, %rd1914, %rd1890;
	and.b64  	%rd1935, %rd1934, %rd1933;
	xor.b64  	%rd1936, %rd1935, %rd1914;
	add.s64 	%rd1937, %rd1926, %rd1936;
	add.s64 	%rd1938, %rd1937, %rd1932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10860,%dummy}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10861}, %rd1927;
	}
	shf.r.wrap.b32 	%r10862, %r10861, %r10860, 14;
	shf.r.wrap.b32 	%r10863, %r10860, %r10861, 14;
	mov.b64 	%rd1939, {%r10863, %r10862};
	shf.r.wrap.b32 	%r10864, %r10861, %r10860, 18;
	shf.r.wrap.b32 	%r10865, %r10860, %r10861, 18;
	mov.b64 	%rd1940, {%r10865, %r10864};
	xor.b64  	%rd1941, %rd1940, %rd1939;
	shf.l.wrap.b32 	%r10866, %r10860, %r10861, 23;
	shf.l.wrap.b32 	%r10867, %r10861, %r10860, 23;
	mov.b64 	%rd1942, {%r10867, %r10866};
	xor.b64  	%rd1943, %rd1941, %rd1942;
	xor.b64  	%rd1944, %rd1903, %rd1879;
	and.b64  	%rd1945, %rd1927, %rd1944;
	xor.b64  	%rd1946, %rd1945, %rd1879;
	add.s64 	%rd1947, %rd1710, %rd1647;
	add.s64 	%rd1948, %rd1947, %rd2788;
	add.s64 	%rd1949, %rd1948, %rd1946;
	add.s64 	%rd1950, %rd1949, %rd1943;
	add.s64 	%rd1951, %rd1950, %rd1658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10868,%dummy}, %rd1938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10869}, %rd1938;
	}
	shf.r.wrap.b32 	%r10870, %r10869, %r10868, 28;
	shf.r.wrap.b32 	%r10871, %r10868, %r10869, 28;
	mov.b64 	%rd1952, {%r10871, %r10870};
	shf.l.wrap.b32 	%r10872, %r10868, %r10869, 30;
	shf.l.wrap.b32 	%r10873, %r10869, %r10868, 30;
	mov.b64 	%rd1953, {%r10873, %r10872};
	xor.b64  	%rd1954, %rd1953, %rd1952;
	shf.l.wrap.b32 	%r10874, %r10868, %r10869, 25;
	shf.l.wrap.b32 	%r10875, %r10869, %r10868, 25;
	mov.b64 	%rd1955, {%r10875, %r10874};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	xor.b64  	%rd1957, %rd1938, %rd1890;
	xor.b64  	%rd1958, %rd1938, %rd1914;
	and.b64  	%rd1959, %rd1958, %rd1957;
	xor.b64  	%rd1960, %rd1959, %rd1938;
	add.s64 	%rd1961, %rd1950, %rd1960;
	add.s64 	%rd1962, %rd1961, %rd1956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10876,%dummy}, %rd1951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10877}, %rd1951;
	}
	shf.r.wrap.b32 	%r10878, %r10877, %r10876, 14;
	shf.r.wrap.b32 	%r10879, %r10876, %r10877, 14;
	mov.b64 	%rd1963, {%r10879, %r10878};
	shf.r.wrap.b32 	%r10880, %r10877, %r10876, 18;
	shf.r.wrap.b32 	%r10881, %r10876, %r10877, 18;
	mov.b64 	%rd1964, {%r10881, %r10880};
	xor.b64  	%rd1965, %rd1964, %rd1963;
	shf.l.wrap.b32 	%r10882, %r10876, %r10877, 23;
	shf.l.wrap.b32 	%r10883, %r10877, %r10876, 23;
	mov.b64 	%rd1966, {%r10883, %r10882};
	xor.b64  	%rd1967, %rd1965, %rd1966;
	xor.b64  	%rd1968, %rd1927, %rd1903;
	and.b64  	%rd1969, %rd1951, %rd1968;
	xor.b64  	%rd1970, %rd1969, %rd1903;
	add.s64 	%rd1971, %rd1879, %rd1723;
	add.s64 	%rd1972, %rd1971, %rd2789;
	add.s64 	%rd1973, %rd1972, %rd1970;
	add.s64 	%rd1974, %rd1973, %rd1967;
	add.s64 	%rd1975, %rd1974, %rd1890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10884,%dummy}, %rd1962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10885}, %rd1962;
	}
	shf.r.wrap.b32 	%r10886, %r10885, %r10884, 28;
	shf.r.wrap.b32 	%r10887, %r10884, %r10885, 28;
	mov.b64 	%rd1976, {%r10887, %r10886};
	shf.l.wrap.b32 	%r10888, %r10884, %r10885, 30;
	shf.l.wrap.b32 	%r10889, %r10885, %r10884, 30;
	mov.b64 	%rd1977, {%r10889, %r10888};
	xor.b64  	%rd1978, %rd1977, %rd1976;
	shf.l.wrap.b32 	%r10890, %r10884, %r10885, 25;
	shf.l.wrap.b32 	%r10891, %r10885, %r10884, 25;
	mov.b64 	%rd1979, {%r10891, %r10890};
	xor.b64  	%rd1980, %rd1978, %rd1979;
	xor.b64  	%rd1981, %rd1962, %rd1914;
	xor.b64  	%rd1982, %rd1962, %rd1938;
	and.b64  	%rd1983, %rd1982, %rd1981;
	xor.b64  	%rd1984, %rd1983, %rd1962;
	add.s64 	%rd1985, %rd1974, %rd1984;
	add.s64 	%rd1986, %rd1985, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10892,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10893}, %rd1975;
	}
	shf.r.wrap.b32 	%r10894, %r10893, %r10892, 14;
	shf.r.wrap.b32 	%r10895, %r10892, %r10893, 14;
	mov.b64 	%rd1987, {%r10895, %r10894};
	shf.r.wrap.b32 	%r10896, %r10893, %r10892, 18;
	shf.r.wrap.b32 	%r10897, %r10892, %r10893, 18;
	mov.b64 	%rd1988, {%r10897, %r10896};
	xor.b64  	%rd1989, %rd1988, %rd1987;
	shf.l.wrap.b32 	%r10898, %r10892, %r10893, 23;
	shf.l.wrap.b32 	%r10899, %r10893, %r10892, 23;
	mov.b64 	%rd1990, {%r10899, %r10898};
	xor.b64  	%rd1991, %rd1989, %rd1990;
	xor.b64  	%rd1992, %rd1951, %rd1927;
	and.b64  	%rd1993, %rd1975, %rd1992;
	xor.b64  	%rd1994, %rd1993, %rd1927;
	add.s64 	%rd1995, %rd1903, %rd1736;
	add.s64 	%rd1996, %rd1995, %rd2790;
	add.s64 	%rd1997, %rd1996, %rd1994;
	add.s64 	%rd1998, %rd1997, %rd1991;
	add.s64 	%rd1999, %rd1998, %rd1914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10900,%dummy}, %rd1986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10901}, %rd1986;
	}
	shf.r.wrap.b32 	%r10902, %r10901, %r10900, 28;
	shf.r.wrap.b32 	%r10903, %r10900, %r10901, 28;
	mov.b64 	%rd2000, {%r10903, %r10902};
	shf.l.wrap.b32 	%r10904, %r10900, %r10901, 30;
	shf.l.wrap.b32 	%r10905, %r10901, %r10900, 30;
	mov.b64 	%rd2001, {%r10905, %r10904};
	xor.b64  	%rd2002, %rd2001, %rd2000;
	shf.l.wrap.b32 	%r10906, %r10900, %r10901, 25;
	shf.l.wrap.b32 	%r10907, %r10901, %r10900, 25;
	mov.b64 	%rd2003, {%r10907, %r10906};
	xor.b64  	%rd2004, %rd2002, %rd2003;
	xor.b64  	%rd2005, %rd1986, %rd1938;
	xor.b64  	%rd2006, %rd1986, %rd1962;
	and.b64  	%rd2007, %rd2006, %rd2005;
	xor.b64  	%rd2008, %rd2007, %rd1986;
	add.s64 	%rd2009, %rd1998, %rd2008;
	add.s64 	%rd2010, %rd2009, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10908,%dummy}, %rd1999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10909}, %rd1999;
	}
	shf.r.wrap.b32 	%r10910, %r10909, %r10908, 14;
	shf.r.wrap.b32 	%r10911, %r10908, %r10909, 14;
	mov.b64 	%rd2011, {%r10911, %r10910};
	shf.r.wrap.b32 	%r10912, %r10909, %r10908, 18;
	shf.r.wrap.b32 	%r10913, %r10908, %r10909, 18;
	mov.b64 	%rd2012, {%r10913, %r10912};
	xor.b64  	%rd2013, %rd2012, %rd2011;
	shf.l.wrap.b32 	%r10914, %r10908, %r10909, 23;
	shf.l.wrap.b32 	%r10915, %r10909, %r10908, 23;
	mov.b64 	%rd2014, {%r10915, %r10914};
	xor.b64  	%rd2015, %rd2013, %rd2014;
	xor.b64  	%rd2016, %rd1975, %rd1951;
	and.b64  	%rd2017, %rd1999, %rd2016;
	xor.b64  	%rd2018, %rd2017, %rd1951;
	add.s64 	%rd2019, %rd1927, %rd1749;
	add.s64 	%rd2020, %rd2019, %rd2791;
	add.s64 	%rd2021, %rd2020, %rd2018;
	add.s64 	%rd2022, %rd2021, %rd2015;
	add.s64 	%rd2023, %rd2022, %rd1938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10916,%dummy}, %rd2010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10917}, %rd2010;
	}
	shf.r.wrap.b32 	%r10918, %r10917, %r10916, 28;
	shf.r.wrap.b32 	%r10919, %r10916, %r10917, 28;
	mov.b64 	%rd2024, {%r10919, %r10918};
	shf.l.wrap.b32 	%r10920, %r10916, %r10917, 30;
	shf.l.wrap.b32 	%r10921, %r10917, %r10916, 30;
	mov.b64 	%rd2025, {%r10921, %r10920};
	xor.b64  	%rd2026, %rd2025, %rd2024;
	shf.l.wrap.b32 	%r10922, %r10916, %r10917, 25;
	shf.l.wrap.b32 	%r10923, %r10917, %r10916, 25;
	mov.b64 	%rd2027, {%r10923, %r10922};
	xor.b64  	%rd2028, %rd2026, %rd2027;
	xor.b64  	%rd2029, %rd2010, %rd1962;
	xor.b64  	%rd2030, %rd2010, %rd1986;
	and.b64  	%rd2031, %rd2030, %rd2029;
	xor.b64  	%rd2032, %rd2031, %rd2010;
	add.s64 	%rd2033, %rd2022, %rd2032;
	add.s64 	%rd2034, %rd2033, %rd2028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10924,%dummy}, %rd2023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10925}, %rd2023;
	}
	shf.r.wrap.b32 	%r10926, %r10925, %r10924, 14;
	shf.r.wrap.b32 	%r10927, %r10924, %r10925, 14;
	mov.b64 	%rd2035, {%r10927, %r10926};
	shf.r.wrap.b32 	%r10928, %r10925, %r10924, 18;
	shf.r.wrap.b32 	%r10929, %r10924, %r10925, 18;
	mov.b64 	%rd2036, {%r10929, %r10928};
	xor.b64  	%rd2037, %rd2036, %rd2035;
	shf.l.wrap.b32 	%r10930, %r10924, %r10925, 23;
	shf.l.wrap.b32 	%r10931, %r10925, %r10924, 23;
	mov.b64 	%rd2038, {%r10931, %r10930};
	xor.b64  	%rd2039, %rd2037, %rd2038;
	xor.b64  	%rd2040, %rd1999, %rd1975;
	and.b64  	%rd2041, %rd2023, %rd2040;
	xor.b64  	%rd2042, %rd2041, %rd1975;
	add.s64 	%rd2043, %rd1951, %rd1762;
	add.s64 	%rd2044, %rd2043, %rd2792;
	add.s64 	%rd2045, %rd2044, %rd2042;
	add.s64 	%rd2046, %rd2045, %rd2039;
	add.s64 	%rd2047, %rd2046, %rd1962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10932,%dummy}, %rd2034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10933}, %rd2034;
	}
	shf.r.wrap.b32 	%r10934, %r10933, %r10932, 28;
	shf.r.wrap.b32 	%r10935, %r10932, %r10933, 28;
	mov.b64 	%rd2048, {%r10935, %r10934};
	shf.l.wrap.b32 	%r10936, %r10932, %r10933, 30;
	shf.l.wrap.b32 	%r10937, %r10933, %r10932, 30;
	mov.b64 	%rd2049, {%r10937, %r10936};
	xor.b64  	%rd2050, %rd2049, %rd2048;
	shf.l.wrap.b32 	%r10938, %r10932, %r10933, 25;
	shf.l.wrap.b32 	%r10939, %r10933, %r10932, 25;
	mov.b64 	%rd2051, {%r10939, %r10938};
	xor.b64  	%rd2052, %rd2050, %rd2051;
	xor.b64  	%rd2053, %rd2034, %rd1986;
	xor.b64  	%rd2054, %rd2034, %rd2010;
	and.b64  	%rd2055, %rd2054, %rd2053;
	xor.b64  	%rd2056, %rd2055, %rd2034;
	add.s64 	%rd2057, %rd2046, %rd2056;
	add.s64 	%rd2058, %rd2057, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10940,%dummy}, %rd2047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10941}, %rd2047;
	}
	shf.r.wrap.b32 	%r10942, %r10941, %r10940, 14;
	shf.r.wrap.b32 	%r10943, %r10940, %r10941, 14;
	mov.b64 	%rd2059, {%r10943, %r10942};
	shf.r.wrap.b32 	%r10944, %r10941, %r10940, 18;
	shf.r.wrap.b32 	%r10945, %r10940, %r10941, 18;
	mov.b64 	%rd2060, {%r10945, %r10944};
	xor.b64  	%rd2061, %rd2060, %rd2059;
	shf.l.wrap.b32 	%r10946, %r10940, %r10941, 23;
	shf.l.wrap.b32 	%r10947, %r10941, %r10940, 23;
	mov.b64 	%rd2062, {%r10947, %r10946};
	xor.b64  	%rd2063, %rd2061, %rd2062;
	xor.b64  	%rd2064, %rd2023, %rd1999;
	and.b64  	%rd2065, %rd2047, %rd2064;
	xor.b64  	%rd2066, %rd2065, %rd1999;
	add.s64 	%rd2067, %rd1975, %rd1775;
	add.s64 	%rd2068, %rd2067, %rd2793;
	add.s64 	%rd2069, %rd2068, %rd2066;
	add.s64 	%rd2070, %rd2069, %rd2063;
	add.s64 	%rd2071, %rd2070, %rd1986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10948,%dummy}, %rd2058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10949}, %rd2058;
	}
	shf.r.wrap.b32 	%r10950, %r10949, %r10948, 28;
	shf.r.wrap.b32 	%r10951, %r10948, %r10949, 28;
	mov.b64 	%rd2072, {%r10951, %r10950};
	shf.l.wrap.b32 	%r10952, %r10948, %r10949, 30;
	shf.l.wrap.b32 	%r10953, %r10949, %r10948, 30;
	mov.b64 	%rd2073, {%r10953, %r10952};
	xor.b64  	%rd2074, %rd2073, %rd2072;
	shf.l.wrap.b32 	%r10954, %r10948, %r10949, 25;
	shf.l.wrap.b32 	%r10955, %r10949, %r10948, 25;
	mov.b64 	%rd2075, {%r10955, %r10954};
	xor.b64  	%rd2076, %rd2074, %rd2075;
	xor.b64  	%rd2077, %rd2058, %rd2010;
	xor.b64  	%rd2078, %rd2058, %rd2034;
	and.b64  	%rd2079, %rd2078, %rd2077;
	xor.b64  	%rd2080, %rd2079, %rd2058;
	add.s64 	%rd2081, %rd2070, %rd2080;
	add.s64 	%rd2082, %rd2081, %rd2076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10956,%dummy}, %rd2071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10957}, %rd2071;
	}
	shf.r.wrap.b32 	%r10958, %r10957, %r10956, 14;
	shf.r.wrap.b32 	%r10959, %r10956, %r10957, 14;
	mov.b64 	%rd2083, {%r10959, %r10958};
	shf.r.wrap.b32 	%r10960, %r10957, %r10956, 18;
	shf.r.wrap.b32 	%r10961, %r10956, %r10957, 18;
	mov.b64 	%rd2084, {%r10961, %r10960};
	xor.b64  	%rd2085, %rd2084, %rd2083;
	shf.l.wrap.b32 	%r10962, %r10956, %r10957, 23;
	shf.l.wrap.b32 	%r10963, %r10957, %r10956, 23;
	mov.b64 	%rd2086, {%r10963, %r10962};
	xor.b64  	%rd2087, %rd2085, %rd2086;
	xor.b64  	%rd2088, %rd2047, %rd2023;
	and.b64  	%rd2089, %rd2071, %rd2088;
	xor.b64  	%rd2090, %rd2089, %rd2023;
	add.s64 	%rd2091, %rd1999, %rd1788;
	add.s64 	%rd2092, %rd2091, %rd2794;
	add.s64 	%rd2093, %rd2092, %rd2090;
	add.s64 	%rd2094, %rd2093, %rd2087;
	add.s64 	%rd2095, %rd2094, %rd2010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10964,%dummy}, %rd2082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10965}, %rd2082;
	}
	shf.r.wrap.b32 	%r10966, %r10965, %r10964, 28;
	shf.r.wrap.b32 	%r10967, %r10964, %r10965, 28;
	mov.b64 	%rd2096, {%r10967, %r10966};
	shf.l.wrap.b32 	%r10968, %r10964, %r10965, 30;
	shf.l.wrap.b32 	%r10969, %r10965, %r10964, 30;
	mov.b64 	%rd2097, {%r10969, %r10968};
	xor.b64  	%rd2098, %rd2097, %rd2096;
	shf.l.wrap.b32 	%r10970, %r10964, %r10965, 25;
	shf.l.wrap.b32 	%r10971, %r10965, %r10964, 25;
	mov.b64 	%rd2099, {%r10971, %r10970};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	xor.b64  	%rd2101, %rd2082, %rd2034;
	xor.b64  	%rd2102, %rd2082, %rd2058;
	and.b64  	%rd2103, %rd2102, %rd2101;
	xor.b64  	%rd2104, %rd2103, %rd2082;
	add.s64 	%rd2105, %rd2094, %rd2104;
	add.s64 	%rd2106, %rd2105, %rd2100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10972,%dummy}, %rd2095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10973}, %rd2095;
	}
	shf.r.wrap.b32 	%r10974, %r10973, %r10972, 14;
	shf.r.wrap.b32 	%r10975, %r10972, %r10973, 14;
	mov.b64 	%rd2107, {%r10975, %r10974};
	shf.r.wrap.b32 	%r10976, %r10973, %r10972, 18;
	shf.r.wrap.b32 	%r10977, %r10972, %r10973, 18;
	mov.b64 	%rd2108, {%r10977, %r10976};
	xor.b64  	%rd2109, %rd2108, %rd2107;
	shf.l.wrap.b32 	%r10978, %r10972, %r10973, 23;
	shf.l.wrap.b32 	%r10979, %r10973, %r10972, 23;
	mov.b64 	%rd2110, {%r10979, %r10978};
	xor.b64  	%rd2111, %rd2109, %rd2110;
	xor.b64  	%rd2112, %rd2071, %rd2047;
	and.b64  	%rd2113, %rd2095, %rd2112;
	xor.b64  	%rd2114, %rd2113, %rd2047;
	add.s64 	%rd2115, %rd2023, %rd1801;
	add.s64 	%rd2116, %rd2115, %rd2795;
	add.s64 	%rd2117, %rd2116, %rd2114;
	add.s64 	%rd2118, %rd2117, %rd2111;
	add.s64 	%rd2119, %rd2118, %rd2034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10980,%dummy}, %rd2106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10981}, %rd2106;
	}
	shf.r.wrap.b32 	%r10982, %r10981, %r10980, 28;
	shf.r.wrap.b32 	%r10983, %r10980, %r10981, 28;
	mov.b64 	%rd2120, {%r10983, %r10982};
	shf.l.wrap.b32 	%r10984, %r10980, %r10981, 30;
	shf.l.wrap.b32 	%r10985, %r10981, %r10980, 30;
	mov.b64 	%rd2121, {%r10985, %r10984};
	xor.b64  	%rd2122, %rd2121, %rd2120;
	shf.l.wrap.b32 	%r10986, %r10980, %r10981, 25;
	shf.l.wrap.b32 	%r10987, %r10981, %r10980, 25;
	mov.b64 	%rd2123, {%r10987, %r10986};
	xor.b64  	%rd2124, %rd2122, %rd2123;
	xor.b64  	%rd2125, %rd2106, %rd2058;
	xor.b64  	%rd2126, %rd2106, %rd2082;
	and.b64  	%rd2127, %rd2126, %rd2125;
	xor.b64  	%rd2128, %rd2127, %rd2106;
	add.s64 	%rd2129, %rd2118, %rd2128;
	add.s64 	%rd2130, %rd2129, %rd2124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10988,%dummy}, %rd2119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10989}, %rd2119;
	}
	shf.r.wrap.b32 	%r10990, %r10989, %r10988, 14;
	shf.r.wrap.b32 	%r10991, %r10988, %r10989, 14;
	mov.b64 	%rd2131, {%r10991, %r10990};
	shf.r.wrap.b32 	%r10992, %r10989, %r10988, 18;
	shf.r.wrap.b32 	%r10993, %r10988, %r10989, 18;
	mov.b64 	%rd2132, {%r10993, %r10992};
	xor.b64  	%rd2133, %rd2132, %rd2131;
	shf.l.wrap.b32 	%r10994, %r10988, %r10989, 23;
	shf.l.wrap.b32 	%r10995, %r10989, %r10988, 23;
	mov.b64 	%rd2134, {%r10995, %r10994};
	xor.b64  	%rd2135, %rd2133, %rd2134;
	xor.b64  	%rd2136, %rd2095, %rd2071;
	and.b64  	%rd2137, %rd2119, %rd2136;
	xor.b64  	%rd2138, %rd2137, %rd2071;
	add.s64 	%rd2139, %rd2047, %rd1814;
	add.s64 	%rd2140, %rd2139, %rd2796;
	add.s64 	%rd2141, %rd2140, %rd2138;
	add.s64 	%rd2142, %rd2141, %rd2135;
	add.s64 	%rd2143, %rd2142, %rd2058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10996,%dummy}, %rd2130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10997}, %rd2130;
	}
	shf.r.wrap.b32 	%r10998, %r10997, %r10996, 28;
	shf.r.wrap.b32 	%r10999, %r10996, %r10997, 28;
	mov.b64 	%rd2144, {%r10999, %r10998};
	shf.l.wrap.b32 	%r11000, %r10996, %r10997, 30;
	shf.l.wrap.b32 	%r11001, %r10997, %r10996, 30;
	mov.b64 	%rd2145, {%r11001, %r11000};
	xor.b64  	%rd2146, %rd2145, %rd2144;
	shf.l.wrap.b32 	%r11002, %r10996, %r10997, 25;
	shf.l.wrap.b32 	%r11003, %r10997, %r10996, 25;
	mov.b64 	%rd2147, {%r11003, %r11002};
	xor.b64  	%rd2148, %rd2146, %rd2147;
	xor.b64  	%rd2149, %rd2130, %rd2082;
	xor.b64  	%rd2150, %rd2130, %rd2106;
	and.b64  	%rd2151, %rd2150, %rd2149;
	xor.b64  	%rd2152, %rd2151, %rd2130;
	add.s64 	%rd2153, %rd2142, %rd2152;
	add.s64 	%rd2154, %rd2153, %rd2148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11004,%dummy}, %rd2143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11005}, %rd2143;
	}
	shf.r.wrap.b32 	%r11006, %r11005, %r11004, 14;
	shf.r.wrap.b32 	%r11007, %r11004, %r11005, 14;
	mov.b64 	%rd2155, {%r11007, %r11006};
	shf.r.wrap.b32 	%r11008, %r11005, %r11004, 18;
	shf.r.wrap.b32 	%r11009, %r11004, %r11005, 18;
	mov.b64 	%rd2156, {%r11009, %r11008};
	xor.b64  	%rd2157, %rd2156, %rd2155;
	shf.l.wrap.b32 	%r11010, %r11004, %r11005, 23;
	shf.l.wrap.b32 	%r11011, %r11005, %r11004, 23;
	mov.b64 	%rd2158, {%r11011, %r11010};
	xor.b64  	%rd2159, %rd2157, %rd2158;
	xor.b64  	%rd2160, %rd2119, %rd2095;
	and.b64  	%rd2161, %rd2143, %rd2160;
	xor.b64  	%rd2162, %rd2161, %rd2095;
	add.s64 	%rd2163, %rd2071, %rd1827;
	add.s64 	%rd2164, %rd2163, %rd2797;
	add.s64 	%rd2165, %rd2164, %rd2162;
	add.s64 	%rd2166, %rd2165, %rd2159;
	add.s64 	%rd2167, %rd2166, %rd2082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11012,%dummy}, %rd2154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11013}, %rd2154;
	}
	shf.r.wrap.b32 	%r11014, %r11013, %r11012, 28;
	shf.r.wrap.b32 	%r11015, %r11012, %r11013, 28;
	mov.b64 	%rd2168, {%r11015, %r11014};
	shf.l.wrap.b32 	%r11016, %r11012, %r11013, 30;
	shf.l.wrap.b32 	%r11017, %r11013, %r11012, 30;
	mov.b64 	%rd2169, {%r11017, %r11016};
	xor.b64  	%rd2170, %rd2169, %rd2168;
	shf.l.wrap.b32 	%r11018, %r11012, %r11013, 25;
	shf.l.wrap.b32 	%r11019, %r11013, %r11012, 25;
	mov.b64 	%rd2171, {%r11019, %r11018};
	xor.b64  	%rd2172, %rd2170, %rd2171;
	xor.b64  	%rd2173, %rd2154, %rd2106;
	xor.b64  	%rd2174, %rd2154, %rd2130;
	and.b64  	%rd2175, %rd2174, %rd2173;
	xor.b64  	%rd2176, %rd2175, %rd2154;
	add.s64 	%rd2177, %rd2166, %rd2176;
	add.s64 	%rd2178, %rd2177, %rd2172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11020,%dummy}, %rd2167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11021}, %rd2167;
	}
	shf.r.wrap.b32 	%r11022, %r11021, %r11020, 14;
	shf.r.wrap.b32 	%r11023, %r11020, %r11021, 14;
	mov.b64 	%rd2179, {%r11023, %r11022};
	shf.r.wrap.b32 	%r11024, %r11021, %r11020, 18;
	shf.r.wrap.b32 	%r11025, %r11020, %r11021, 18;
	mov.b64 	%rd2180, {%r11025, %r11024};
	xor.b64  	%rd2181, %rd2180, %rd2179;
	shf.l.wrap.b32 	%r11026, %r11020, %r11021, 23;
	shf.l.wrap.b32 	%r11027, %r11021, %r11020, 23;
	mov.b64 	%rd2182, {%r11027, %r11026};
	xor.b64  	%rd2183, %rd2181, %rd2182;
	xor.b64  	%rd2184, %rd2143, %rd2119;
	and.b64  	%rd2185, %rd2167, %rd2184;
	xor.b64  	%rd2186, %rd2185, %rd2119;
	add.s64 	%rd2187, %rd2095, %rd1840;
	add.s64 	%rd2188, %rd2187, %rd2798;
	add.s64 	%rd2189, %rd2188, %rd2186;
	add.s64 	%rd2190, %rd2189, %rd2183;
	add.s64 	%rd2191, %rd2190, %rd2106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11028,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11029}, %rd2178;
	}
	shf.r.wrap.b32 	%r11030, %r11029, %r11028, 28;
	shf.r.wrap.b32 	%r11031, %r11028, %r11029, 28;
	mov.b64 	%rd2192, {%r11031, %r11030};
	shf.l.wrap.b32 	%r11032, %r11028, %r11029, 30;
	shf.l.wrap.b32 	%r11033, %r11029, %r11028, 30;
	mov.b64 	%rd2193, {%r11033, %r11032};
	xor.b64  	%rd2194, %rd2193, %rd2192;
	shf.l.wrap.b32 	%r11034, %r11028, %r11029, 25;
	shf.l.wrap.b32 	%r11035, %r11029, %r11028, 25;
	mov.b64 	%rd2195, {%r11035, %r11034};
	xor.b64  	%rd2196, %rd2194, %rd2195;
	xor.b64  	%rd2197, %rd2178, %rd2130;
	xor.b64  	%rd2198, %rd2178, %rd2154;
	and.b64  	%rd2199, %rd2198, %rd2197;
	xor.b64  	%rd2200, %rd2199, %rd2178;
	add.s64 	%rd2201, %rd2190, %rd2200;
	add.s64 	%rd2202, %rd2201, %rd2196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11036,%dummy}, %rd2191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11037}, %rd2191;
	}
	shf.r.wrap.b32 	%r11038, %r11037, %r11036, 14;
	shf.r.wrap.b32 	%r11039, %r11036, %r11037, 14;
	mov.b64 	%rd2203, {%r11039, %r11038};
	shf.r.wrap.b32 	%r11040, %r11037, %r11036, 18;
	shf.r.wrap.b32 	%r11041, %r11036, %r11037, 18;
	mov.b64 	%rd2204, {%r11041, %r11040};
	xor.b64  	%rd2205, %rd2204, %rd2203;
	shf.l.wrap.b32 	%r11042, %r11036, %r11037, 23;
	shf.l.wrap.b32 	%r11043, %r11037, %r11036, 23;
	mov.b64 	%rd2206, {%r11043, %r11042};
	xor.b64  	%rd2207, %rd2205, %rd2206;
	xor.b64  	%rd2208, %rd2167, %rd2143;
	and.b64  	%rd2209, %rd2191, %rd2208;
	xor.b64  	%rd2210, %rd2209, %rd2143;
	add.s64 	%rd2211, %rd2119, %rd1853;
	add.s64 	%rd2212, %rd2211, %rd2799;
	add.s64 	%rd2213, %rd2212, %rd2210;
	add.s64 	%rd2214, %rd2213, %rd2207;
	add.s64 	%rd2215, %rd2214, %rd2130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11044,%dummy}, %rd2202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11045}, %rd2202;
	}
	shf.r.wrap.b32 	%r11046, %r11045, %r11044, 28;
	shf.r.wrap.b32 	%r11047, %r11044, %r11045, 28;
	mov.b64 	%rd2216, {%r11047, %r11046};
	shf.l.wrap.b32 	%r11048, %r11044, %r11045, 30;
	shf.l.wrap.b32 	%r11049, %r11045, %r11044, 30;
	mov.b64 	%rd2217, {%r11049, %r11048};
	xor.b64  	%rd2218, %rd2217, %rd2216;
	shf.l.wrap.b32 	%r11050, %r11044, %r11045, 25;
	shf.l.wrap.b32 	%r11051, %r11045, %r11044, 25;
	mov.b64 	%rd2219, {%r11051, %r11050};
	xor.b64  	%rd2220, %rd2218, %rd2219;
	xor.b64  	%rd2221, %rd2202, %rd2154;
	xor.b64  	%rd2222, %rd2202, %rd2178;
	and.b64  	%rd2223, %rd2222, %rd2221;
	xor.b64  	%rd2224, %rd2223, %rd2202;
	add.s64 	%rd2225, %rd2214, %rd2224;
	add.s64 	%rd2226, %rd2225, %rd2220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11052,%dummy}, %rd2215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11053}, %rd2215;
	}
	shf.r.wrap.b32 	%r11054, %r11053, %r11052, 14;
	shf.r.wrap.b32 	%r11055, %r11052, %r11053, 14;
	mov.b64 	%rd2227, {%r11055, %r11054};
	shf.r.wrap.b32 	%r11056, %r11053, %r11052, 18;
	shf.r.wrap.b32 	%r11057, %r11052, %r11053, 18;
	mov.b64 	%rd2228, {%r11057, %r11056};
	xor.b64  	%rd2229, %rd2228, %rd2227;
	shf.l.wrap.b32 	%r11058, %r11052, %r11053, 23;
	shf.l.wrap.b32 	%r11059, %r11053, %r11052, 23;
	mov.b64 	%rd2230, {%r11059, %r11058};
	xor.b64  	%rd2231, %rd2229, %rd2230;
	xor.b64  	%rd2232, %rd2191, %rd2167;
	and.b64  	%rd2233, %rd2215, %rd2232;
	xor.b64  	%rd2234, %rd2233, %rd2167;
	add.s64 	%rd2235, %rd2143, %rd1866;
	add.s64 	%rd2236, %rd2235, %rd2800;
	add.s64 	%rd2237, %rd2236, %rd2234;
	add.s64 	%rd2238, %rd2237, %rd2231;
	add.s64 	%rd2239, %rd2238, %rd2154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11060,%dummy}, %rd2226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11061}, %rd2226;
	}
	shf.r.wrap.b32 	%r11062, %r11061, %r11060, 28;
	shf.r.wrap.b32 	%r11063, %r11060, %r11061, 28;
	mov.b64 	%rd2240, {%r11063, %r11062};
	shf.l.wrap.b32 	%r11064, %r11060, %r11061, 30;
	shf.l.wrap.b32 	%r11065, %r11061, %r11060, 30;
	mov.b64 	%rd2241, {%r11065, %r11064};
	xor.b64  	%rd2242, %rd2241, %rd2240;
	shf.l.wrap.b32 	%r11066, %r11060, %r11061, 25;
	shf.l.wrap.b32 	%r11067, %r11061, %r11060, 25;
	mov.b64 	%rd2243, {%r11067, %r11066};
	xor.b64  	%rd2244, %rd2242, %rd2243;
	xor.b64  	%rd2245, %rd2226, %rd2178;
	xor.b64  	%rd2246, %rd2226, %rd2202;
	and.b64  	%rd2247, %rd2246, %rd2245;
	xor.b64  	%rd2248, %rd2247, %rd2226;
	add.s64 	%rd2249, %rd2238, %rd2248;
	add.s64 	%rd2250, %rd2249, %rd2244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11068,%dummy}, %rd1853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11069}, %rd1853;
	}
	shf.r.wrap.b32 	%r11070, %r11069, %r11068, 19;
	shf.r.wrap.b32 	%r11071, %r11068, %r11069, 19;
	mov.b64 	%rd2251, {%r11071, %r11070};
	shf.l.wrap.b32 	%r11072, %r11068, %r11069, 3;
	shf.l.wrap.b32 	%r11073, %r11069, %r11068, 3;
	mov.b64 	%rd2252, {%r11073, %r11072};
	shr.u64 	%rd2253, %rd1853, 6;
	xor.b64  	%rd2254, %rd2251, %rd2253;
	xor.b64  	%rd2255, %rd2254, %rd2252;
	shf.r.wrap.b32 	%r11074, %r10683, %r10682, 1;
	shf.r.wrap.b32 	%r11075, %r10682, %r10683, 1;
	mov.b64 	%rd2256, {%r11075, %r11074};
	shf.r.wrap.b32 	%r11076, %r10683, %r10682, 8;
	shf.r.wrap.b32 	%r11077, %r10682, %r10683, 8;
	mov.b64 	%rd2257, {%r11077, %r11076};
	shr.u64 	%rd2258, %rd1684, 7;
	xor.b64  	%rd2259, %rd2256, %rd2258;
	xor.b64  	%rd2260, %rd2259, %rd2257;
	add.s64 	%rd2261, %rd1671, %rd1788;
	add.s64 	%rd2262, %rd2261, %rd2255;
	add.s64 	%rd2263, %rd2262, %rd2260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11078,%dummy}, %rd1866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11079}, %rd1866;
	}
	shf.r.wrap.b32 	%r11080, %r11079, %r11078, 19;
	shf.r.wrap.b32 	%r11081, %r11078, %r11079, 19;
	mov.b64 	%rd2264, {%r11081, %r11080};
	shf.l.wrap.b32 	%r11082, %r11078, %r11079, 3;
	shf.l.wrap.b32 	%r11083, %r11079, %r11078, 3;
	mov.b64 	%rd2265, {%r11083, %r11082};
	shr.u64 	%rd2266, %rd1866, 6;
	xor.b64  	%rd2267, %rd2264, %rd2266;
	xor.b64  	%rd2268, %rd2267, %rd2265;
	shf.r.wrap.b32 	%r11084, %r10693, %r10692, 1;
	shf.r.wrap.b32 	%r11085, %r10692, %r10693, 1;
	mov.b64 	%rd2269, {%r11085, %r11084};
	shf.r.wrap.b32 	%r11086, %r10693, %r10692, 8;
	shf.r.wrap.b32 	%r11087, %r10692, %r10693, 8;
	mov.b64 	%rd2270, {%r11087, %r11086};
	shr.u64 	%rd2271, %rd1697, 7;
	xor.b64  	%rd2272, %rd2269, %rd2271;
	xor.b64  	%rd2273, %rd2272, %rd2270;
	add.s64 	%rd2274, %rd1684, %rd1801;
	add.s64 	%rd2275, %rd2274, %rd2268;
	add.s64 	%rd2276, %rd2275, %rd2273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11088,%dummy}, %rd2263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11089}, %rd2263;
	}
	shf.r.wrap.b32 	%r11090, %r11089, %r11088, 19;
	shf.r.wrap.b32 	%r11091, %r11088, %r11089, 19;
	mov.b64 	%rd2277, {%r11091, %r11090};
	shf.l.wrap.b32 	%r11092, %r11088, %r11089, 3;
	shf.l.wrap.b32 	%r11093, %r11089, %r11088, 3;
	mov.b64 	%rd2278, {%r11093, %r11092};
	shr.u64 	%rd2279, %rd2263, 6;
	xor.b64  	%rd2280, %rd2277, %rd2279;
	xor.b64  	%rd2281, %rd2280, %rd2278;
	shf.r.wrap.b32 	%r11094, %r10703, %r10702, 1;
	shf.r.wrap.b32 	%r11095, %r10702, %r10703, 1;
	mov.b64 	%rd2282, {%r11095, %r11094};
	shf.r.wrap.b32 	%r11096, %r10703, %r10702, 8;
	shf.r.wrap.b32 	%r11097, %r10702, %r10703, 8;
	mov.b64 	%rd2283, {%r11097, %r11096};
	shr.u64 	%rd2284, %rd1710, 7;
	xor.b64  	%rd2285, %rd2282, %rd2284;
	xor.b64  	%rd2286, %rd2285, %rd2283;
	add.s64 	%rd2287, %rd1697, %rd1814;
	add.s64 	%rd2288, %rd2287, %rd2281;
	add.s64 	%rd2289, %rd2288, %rd2286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11098,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11099}, %rd2276;
	}
	shf.r.wrap.b32 	%r11100, %r11099, %r11098, 19;
	shf.r.wrap.b32 	%r11101, %r11098, %r11099, 19;
	mov.b64 	%rd2290, {%r11101, %r11100};
	shf.l.wrap.b32 	%r11102, %r11098, %r11099, 3;
	shf.l.wrap.b32 	%r11103, %r11099, %r11098, 3;
	mov.b64 	%rd2291, {%r11103, %r11102};
	shr.u64 	%rd2292, %rd2276, 6;
	xor.b64  	%rd2293, %rd2290, %rd2292;
	xor.b64  	%rd2294, %rd2293, %rd2291;
	shf.r.wrap.b32 	%r11104, %r10713, %r10712, 1;
	shf.r.wrap.b32 	%r11105, %r10712, %r10713, 1;
	mov.b64 	%rd2295, {%r11105, %r11104};
	shf.r.wrap.b32 	%r11106, %r10713, %r10712, 8;
	shf.r.wrap.b32 	%r11107, %r10712, %r10713, 8;
	mov.b64 	%rd2296, {%r11107, %r11106};
	shr.u64 	%rd2297, %rd1723, 7;
	xor.b64  	%rd2298, %rd2295, %rd2297;
	xor.b64  	%rd2299, %rd2298, %rd2296;
	add.s64 	%rd2300, %rd1710, %rd1827;
	add.s64 	%rd2301, %rd2300, %rd2294;
	add.s64 	%rd2302, %rd2301, %rd2299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11108,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11109}, %rd2289;
	}
	shf.r.wrap.b32 	%r11110, %r11109, %r11108, 19;
	shf.r.wrap.b32 	%r11111, %r11108, %r11109, 19;
	mov.b64 	%rd2303, {%r11111, %r11110};
	shf.l.wrap.b32 	%r11112, %r11108, %r11109, 3;
	shf.l.wrap.b32 	%r11113, %r11109, %r11108, 3;
	mov.b64 	%rd2304, {%r11113, %r11112};
	shr.u64 	%rd2305, %rd2289, 6;
	xor.b64  	%rd2306, %rd2303, %rd2305;
	xor.b64  	%rd2307, %rd2306, %rd2304;
	shf.r.wrap.b32 	%r11114, %r10723, %r10722, 1;
	shf.r.wrap.b32 	%r11115, %r10722, %r10723, 1;
	mov.b64 	%rd2308, {%r11115, %r11114};
	shf.r.wrap.b32 	%r11116, %r10723, %r10722, 8;
	shf.r.wrap.b32 	%r11117, %r10722, %r10723, 8;
	mov.b64 	%rd2309, {%r11117, %r11116};
	shr.u64 	%rd2310, %rd1736, 7;
	xor.b64  	%rd2311, %rd2308, %rd2310;
	xor.b64  	%rd2312, %rd2311, %rd2309;
	add.s64 	%rd2313, %rd1723, %rd1840;
	add.s64 	%rd2314, %rd2313, %rd2307;
	add.s64 	%rd2315, %rd2314, %rd2312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11118,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11119}, %rd2302;
	}
	shf.r.wrap.b32 	%r11120, %r11119, %r11118, 19;
	shf.r.wrap.b32 	%r11121, %r11118, %r11119, 19;
	mov.b64 	%rd2316, {%r11121, %r11120};
	shf.l.wrap.b32 	%r11122, %r11118, %r11119, 3;
	shf.l.wrap.b32 	%r11123, %r11119, %r11118, 3;
	mov.b64 	%rd2317, {%r11123, %r11122};
	shr.u64 	%rd2318, %rd2302, 6;
	xor.b64  	%rd2319, %rd2316, %rd2318;
	xor.b64  	%rd2320, %rd2319, %rd2317;
	shf.r.wrap.b32 	%r11124, %r10733, %r10732, 1;
	shf.r.wrap.b32 	%r11125, %r10732, %r10733, 1;
	mov.b64 	%rd2321, {%r11125, %r11124};
	shf.r.wrap.b32 	%r11126, %r10733, %r10732, 8;
	shf.r.wrap.b32 	%r11127, %r10732, %r10733, 8;
	mov.b64 	%rd2322, {%r11127, %r11126};
	shr.u64 	%rd2323, %rd1749, 7;
	xor.b64  	%rd2324, %rd2321, %rd2323;
	xor.b64  	%rd2325, %rd2324, %rd2322;
	add.s64 	%rd2326, %rd1736, %rd1853;
	add.s64 	%rd2327, %rd2326, %rd2320;
	add.s64 	%rd2328, %rd2327, %rd2325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11128,%dummy}, %rd2315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11129}, %rd2315;
	}
	shf.r.wrap.b32 	%r11130, %r11129, %r11128, 19;
	shf.r.wrap.b32 	%r11131, %r11128, %r11129, 19;
	mov.b64 	%rd2329, {%r11131, %r11130};
	shf.l.wrap.b32 	%r11132, %r11128, %r11129, 3;
	shf.l.wrap.b32 	%r11133, %r11129, %r11128, 3;
	mov.b64 	%rd2330, {%r11133, %r11132};
	shr.u64 	%rd2331, %rd2315, 6;
	xor.b64  	%rd2332, %rd2329, %rd2331;
	xor.b64  	%rd2333, %rd2332, %rd2330;
	shf.r.wrap.b32 	%r11134, %r10743, %r10742, 1;
	shf.r.wrap.b32 	%r11135, %r10742, %r10743, 1;
	mov.b64 	%rd2334, {%r11135, %r11134};
	shf.r.wrap.b32 	%r11136, %r10743, %r10742, 8;
	shf.r.wrap.b32 	%r11137, %r10742, %r10743, 8;
	mov.b64 	%rd2335, {%r11137, %r11136};
	shr.u64 	%rd2336, %rd1762, 7;
	xor.b64  	%rd2337, %rd2334, %rd2336;
	xor.b64  	%rd2338, %rd2337, %rd2335;
	add.s64 	%rd2339, %rd1749, %rd1866;
	add.s64 	%rd2340, %rd2339, %rd2333;
	add.s64 	%rd2341, %rd2340, %rd2338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11138,%dummy}, %rd2328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11139}, %rd2328;
	}
	shf.r.wrap.b32 	%r11140, %r11139, %r11138, 19;
	shf.r.wrap.b32 	%r11141, %r11138, %r11139, 19;
	mov.b64 	%rd2342, {%r11141, %r11140};
	shf.l.wrap.b32 	%r11142, %r11138, %r11139, 3;
	shf.l.wrap.b32 	%r11143, %r11139, %r11138, 3;
	mov.b64 	%rd2343, {%r11143, %r11142};
	shr.u64 	%rd2344, %rd2328, 6;
	xor.b64  	%rd2345, %rd2342, %rd2344;
	xor.b64  	%rd2346, %rd2345, %rd2343;
	shf.r.wrap.b32 	%r11144, %r10753, %r10752, 1;
	shf.r.wrap.b32 	%r11145, %r10752, %r10753, 1;
	mov.b64 	%rd2347, {%r11145, %r11144};
	shf.r.wrap.b32 	%r11146, %r10753, %r10752, 8;
	shf.r.wrap.b32 	%r11147, %r10752, %r10753, 8;
	mov.b64 	%rd2348, {%r11147, %r11146};
	shr.u64 	%rd2349, %rd1775, 7;
	xor.b64  	%rd2350, %rd2347, %rd2349;
	xor.b64  	%rd2351, %rd2350, %rd2348;
	add.s64 	%rd2352, %rd2263, %rd1762;
	add.s64 	%rd2353, %rd2352, %rd2346;
	add.s64 	%rd2354, %rd2353, %rd2351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11148,%dummy}, %rd2341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11149}, %rd2341;
	}
	shf.r.wrap.b32 	%r11150, %r11149, %r11148, 19;
	shf.r.wrap.b32 	%r11151, %r11148, %r11149, 19;
	mov.b64 	%rd2355, {%r11151, %r11150};
	shf.l.wrap.b32 	%r11152, %r11148, %r11149, 3;
	shf.l.wrap.b32 	%r11153, %r11149, %r11148, 3;
	mov.b64 	%rd2356, {%r11153, %r11152};
	shr.u64 	%rd2357, %rd2341, 6;
	xor.b64  	%rd2358, %rd2355, %rd2357;
	xor.b64  	%rd2359, %rd2358, %rd2356;
	shf.r.wrap.b32 	%r11154, %r10763, %r10762, 1;
	shf.r.wrap.b32 	%r11155, %r10762, %r10763, 1;
	mov.b64 	%rd2360, {%r11155, %r11154};
	shf.r.wrap.b32 	%r11156, %r10763, %r10762, 8;
	shf.r.wrap.b32 	%r11157, %r10762, %r10763, 8;
	mov.b64 	%rd2361, {%r11157, %r11156};
	shr.u64 	%rd2362, %rd1788, 7;
	xor.b64  	%rd2363, %rd2360, %rd2362;
	xor.b64  	%rd2364, %rd2363, %rd2361;
	add.s64 	%rd2365, %rd2276, %rd1775;
	add.s64 	%rd2366, %rd2365, %rd2359;
	add.s64 	%rd2367, %rd2366, %rd2364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11158,%dummy}, %rd2354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11159}, %rd2354;
	}
	shf.r.wrap.b32 	%r11160, %r11159, %r11158, 19;
	shf.r.wrap.b32 	%r11161, %r11158, %r11159, 19;
	mov.b64 	%rd2368, {%r11161, %r11160};
	shf.l.wrap.b32 	%r11162, %r11158, %r11159, 3;
	shf.l.wrap.b32 	%r11163, %r11159, %r11158, 3;
	mov.b64 	%rd2369, {%r11163, %r11162};
	shr.u64 	%rd2370, %rd2354, 6;
	xor.b64  	%rd2371, %rd2368, %rd2370;
	xor.b64  	%rd2372, %rd2371, %rd2369;
	shf.r.wrap.b32 	%r11164, %r10773, %r10772, 1;
	shf.r.wrap.b32 	%r11165, %r10772, %r10773, 1;
	mov.b64 	%rd2373, {%r11165, %r11164};
	shf.r.wrap.b32 	%r11166, %r10773, %r10772, 8;
	shf.r.wrap.b32 	%r11167, %r10772, %r10773, 8;
	mov.b64 	%rd2374, {%r11167, %r11166};
	shr.u64 	%rd2375, %rd1801, 7;
	xor.b64  	%rd2376, %rd2373, %rd2375;
	xor.b64  	%rd2377, %rd2376, %rd2374;
	add.s64 	%rd2378, %rd2289, %rd1788;
	add.s64 	%rd2379, %rd2378, %rd2372;
	add.s64 	%rd2380, %rd2379, %rd2377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11168,%dummy}, %rd2367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11169}, %rd2367;
	}
	shf.r.wrap.b32 	%r11170, %r11169, %r11168, 19;
	shf.r.wrap.b32 	%r11171, %r11168, %r11169, 19;
	mov.b64 	%rd2381, {%r11171, %r11170};
	shf.l.wrap.b32 	%r11172, %r11168, %r11169, 3;
	shf.l.wrap.b32 	%r11173, %r11169, %r11168, 3;
	mov.b64 	%rd2382, {%r11173, %r11172};
	shr.u64 	%rd2383, %rd2367, 6;
	xor.b64  	%rd2384, %rd2381, %rd2383;
	xor.b64  	%rd2385, %rd2384, %rd2382;
	shf.r.wrap.b32 	%r11174, %r10783, %r10782, 1;
	shf.r.wrap.b32 	%r11175, %r10782, %r10783, 1;
	mov.b64 	%rd2386, {%r11175, %r11174};
	shf.r.wrap.b32 	%r11176, %r10783, %r10782, 8;
	shf.r.wrap.b32 	%r11177, %r10782, %r10783, 8;
	mov.b64 	%rd2387, {%r11177, %r11176};
	shr.u64 	%rd2388, %rd1814, 7;
	xor.b64  	%rd2389, %rd2386, %rd2388;
	xor.b64  	%rd2390, %rd2389, %rd2387;
	add.s64 	%rd2391, %rd2302, %rd1801;
	add.s64 	%rd2392, %rd2391, %rd2385;
	add.s64 	%rd2393, %rd2392, %rd2390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11178,%dummy}, %rd2380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11179}, %rd2380;
	}
	shf.r.wrap.b32 	%r11180, %r11179, %r11178, 19;
	shf.r.wrap.b32 	%r11181, %r11178, %r11179, 19;
	mov.b64 	%rd2394, {%r11181, %r11180};
	shf.l.wrap.b32 	%r11182, %r11178, %r11179, 3;
	shf.l.wrap.b32 	%r11183, %r11179, %r11178, 3;
	mov.b64 	%rd2395, {%r11183, %r11182};
	shr.u64 	%rd2396, %rd2380, 6;
	xor.b64  	%rd2397, %rd2394, %rd2396;
	xor.b64  	%rd2398, %rd2397, %rd2395;
	shf.r.wrap.b32 	%r11184, %r10793, %r10792, 1;
	shf.r.wrap.b32 	%r11185, %r10792, %r10793, 1;
	mov.b64 	%rd2399, {%r11185, %r11184};
	shf.r.wrap.b32 	%r11186, %r10793, %r10792, 8;
	shf.r.wrap.b32 	%r11187, %r10792, %r10793, 8;
	mov.b64 	%rd2400, {%r11187, %r11186};
	shr.u64 	%rd2401, %rd1827, 7;
	xor.b64  	%rd2402, %rd2399, %rd2401;
	xor.b64  	%rd2403, %rd2402, %rd2400;
	add.s64 	%rd2404, %rd2315, %rd1814;
	add.s64 	%rd2405, %rd2404, %rd2398;
	add.s64 	%rd2406, %rd2405, %rd2403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11188,%dummy}, %rd2393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11189}, %rd2393;
	}
	shf.r.wrap.b32 	%r11190, %r11189, %r11188, 19;
	shf.r.wrap.b32 	%r11191, %r11188, %r11189, 19;
	mov.b64 	%rd2407, {%r11191, %r11190};
	shf.l.wrap.b32 	%r11192, %r11188, %r11189, 3;
	shf.l.wrap.b32 	%r11193, %r11189, %r11188, 3;
	mov.b64 	%rd2408, {%r11193, %r11192};
	shr.u64 	%rd2409, %rd2393, 6;
	xor.b64  	%rd2410, %rd2407, %rd2409;
	xor.b64  	%rd2411, %rd2410, %rd2408;
	shf.r.wrap.b32 	%r11194, %r10803, %r10802, 1;
	shf.r.wrap.b32 	%r11195, %r10802, %r10803, 1;
	mov.b64 	%rd2412, {%r11195, %r11194};
	shf.r.wrap.b32 	%r11196, %r10803, %r10802, 8;
	shf.r.wrap.b32 	%r11197, %r10802, %r10803, 8;
	mov.b64 	%rd2413, {%r11197, %r11196};
	shr.u64 	%rd2414, %rd1840, 7;
	xor.b64  	%rd2415, %rd2412, %rd2414;
	xor.b64  	%rd2416, %rd2415, %rd2413;
	add.s64 	%rd2417, %rd2328, %rd1827;
	add.s64 	%rd2418, %rd2417, %rd2411;
	add.s64 	%rd2419, %rd2418, %rd2416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11198,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11199}, %rd2239;
	}
	shf.r.wrap.b32 	%r11200, %r11199, %r11198, 14;
	shf.r.wrap.b32 	%r11201, %r11198, %r11199, 14;
	mov.b64 	%rd2420, {%r11201, %r11200};
	shf.r.wrap.b32 	%r11202, %r11199, %r11198, 18;
	shf.r.wrap.b32 	%r11203, %r11198, %r11199, 18;
	mov.b64 	%rd2421, {%r11203, %r11202};
	xor.b64  	%rd2422, %rd2421, %rd2420;
	shf.l.wrap.b32 	%r11204, %r11198, %r11199, 23;
	shf.l.wrap.b32 	%r11205, %r11199, %r11198, 23;
	mov.b64 	%rd2423, {%r11205, %r11204};
	xor.b64  	%rd2424, %rd2422, %rd2423;
	xor.b64  	%rd2425, %rd2191, %rd2215;
	and.b64  	%rd2426, %rd2425, %rd2239;
	xor.b64  	%rd2427, %rd2426, %rd2191;
	add.s64 	%rd2428, %rd2427, %rd2167;
	add.s64 	%rd2429, %rd2428, %rd2263;
	add.s64 	%rd2430, %rd2429, %rd2801;
	add.s64 	%rd2431, %rd2430, %rd2424;
	add.s64 	%rd2432, %rd2431, %rd2178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11206,%dummy}, %rd2250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11207}, %rd2250;
	}
	shf.r.wrap.b32 	%r11208, %r11207, %r11206, 28;
	shf.r.wrap.b32 	%r11209, %r11206, %r11207, 28;
	mov.b64 	%rd2433, {%r11209, %r11208};
	shf.l.wrap.b32 	%r11210, %r11206, %r11207, 30;
	shf.l.wrap.b32 	%r11211, %r11207, %r11206, 30;
	mov.b64 	%rd2434, {%r11211, %r11210};
	xor.b64  	%rd2435, %rd2434, %rd2433;
	shf.l.wrap.b32 	%r11212, %r11206, %r11207, 25;
	shf.l.wrap.b32 	%r11213, %r11207, %r11206, 25;
	mov.b64 	%rd2436, {%r11213, %r11212};
	xor.b64  	%rd2437, %rd2435, %rd2436;
	xor.b64  	%rd2438, %rd2250, %rd2202;
	xor.b64  	%rd2439, %rd2250, %rd2226;
	and.b64  	%rd2440, %rd2439, %rd2438;
	xor.b64  	%rd2441, %rd2440, %rd2250;
	add.s64 	%rd2442, %rd2431, %rd2441;
	add.s64 	%rd2443, %rd2442, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11214,%dummy}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11215}, %rd2432;
	}
	shf.r.wrap.b32 	%r11216, %r11215, %r11214, 14;
	shf.r.wrap.b32 	%r11217, %r11214, %r11215, 14;
	mov.b64 	%rd2444, {%r11217, %r11216};
	shf.r.wrap.b32 	%r11218, %r11215, %r11214, 18;
	shf.r.wrap.b32 	%r11219, %r11214, %r11215, 18;
	mov.b64 	%rd2445, {%r11219, %r11218};
	xor.b64  	%rd2446, %rd2445, %rd2444;
	shf.l.wrap.b32 	%r11220, %r11214, %r11215, 23;
	shf.l.wrap.b32 	%r11221, %r11215, %r11214, 23;
	mov.b64 	%rd2447, {%r11221, %r11220};
	xor.b64  	%rd2448, %rd2446, %rd2447;
	xor.b64  	%rd2449, %rd2215, %rd2239;
	and.b64  	%rd2450, %rd2432, %rd2449;
	xor.b64  	%rd2451, %rd2450, %rd2215;
	add.s64 	%rd2452, %rd2276, %rd2191;
	add.s64 	%rd2453, %rd2452, %rd2802;
	add.s64 	%rd2454, %rd2453, %rd2451;
	add.s64 	%rd2455, %rd2454, %rd2448;
	add.s64 	%rd2456, %rd2455, %rd2202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11222,%dummy}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11223}, %rd2443;
	}
	shf.r.wrap.b32 	%r11224, %r11223, %r11222, 28;
	shf.r.wrap.b32 	%r11225, %r11222, %r11223, 28;
	mov.b64 	%rd2457, {%r11225, %r11224};
	shf.l.wrap.b32 	%r11226, %r11222, %r11223, 30;
	shf.l.wrap.b32 	%r11227, %r11223, %r11222, 30;
	mov.b64 	%rd2458, {%r11227, %r11226};
	xor.b64  	%rd2459, %rd2458, %rd2457;
	shf.l.wrap.b32 	%r11228, %r11222, %r11223, 25;
	shf.l.wrap.b32 	%r11229, %r11223, %r11222, 25;
	mov.b64 	%rd2460, {%r11229, %r11228};
	xor.b64  	%rd2461, %rd2459, %rd2460;
	xor.b64  	%rd2462, %rd2443, %rd2226;
	xor.b64  	%rd2463, %rd2443, %rd2250;
	and.b64  	%rd2464, %rd2463, %rd2462;
	xor.b64  	%rd2465, %rd2464, %rd2443;
	add.s64 	%rd2466, %rd2455, %rd2465;
	add.s64 	%rd2467, %rd2466, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11230,%dummy}, %rd2456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11231}, %rd2456;
	}
	shf.r.wrap.b32 	%r11232, %r11231, %r11230, 14;
	shf.r.wrap.b32 	%r11233, %r11230, %r11231, 14;
	mov.b64 	%rd2468, {%r11233, %r11232};
	shf.r.wrap.b32 	%r11234, %r11231, %r11230, 18;
	shf.r.wrap.b32 	%r11235, %r11230, %r11231, 18;
	mov.b64 	%rd2469, {%r11235, %r11234};
	xor.b64  	%rd2470, %rd2469, %rd2468;
	shf.l.wrap.b32 	%r11236, %r11230, %r11231, 23;
	shf.l.wrap.b32 	%r11237, %r11231, %r11230, 23;
	mov.b64 	%rd2471, {%r11237, %r11236};
	xor.b64  	%rd2472, %rd2470, %rd2471;
	xor.b64  	%rd2473, %rd2432, %rd2239;
	and.b64  	%rd2474, %rd2456, %rd2473;
	xor.b64  	%rd2475, %rd2474, %rd2239;
	add.s64 	%rd2476, %rd2289, %rd2215;
	add.s64 	%rd2477, %rd2476, %rd2803;
	add.s64 	%rd2478, %rd2477, %rd2475;
	add.s64 	%rd2479, %rd2478, %rd2472;
	add.s64 	%rd2480, %rd2479, %rd2226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11238,%dummy}, %rd2467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11239}, %rd2467;
	}
	shf.r.wrap.b32 	%r11240, %r11239, %r11238, 28;
	shf.r.wrap.b32 	%r11241, %r11238, %r11239, 28;
	mov.b64 	%rd2481, {%r11241, %r11240};
	shf.l.wrap.b32 	%r11242, %r11238, %r11239, 30;
	shf.l.wrap.b32 	%r11243, %r11239, %r11238, 30;
	mov.b64 	%rd2482, {%r11243, %r11242};
	xor.b64  	%rd2483, %rd2482, %rd2481;
	shf.l.wrap.b32 	%r11244, %r11238, %r11239, 25;
	shf.l.wrap.b32 	%r11245, %r11239, %r11238, 25;
	mov.b64 	%rd2484, {%r11245, %r11244};
	xor.b64  	%rd2485, %rd2483, %rd2484;
	xor.b64  	%rd2486, %rd2467, %rd2250;
	xor.b64  	%rd2487, %rd2467, %rd2443;
	and.b64  	%rd2488, %rd2487, %rd2486;
	xor.b64  	%rd2489, %rd2488, %rd2467;
	add.s64 	%rd2490, %rd2479, %rd2489;
	add.s64 	%rd2491, %rd2490, %rd2485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11246,%dummy}, %rd2480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11247}, %rd2480;
	}
	shf.r.wrap.b32 	%r11248, %r11247, %r11246, 14;
	shf.r.wrap.b32 	%r11249, %r11246, %r11247, 14;
	mov.b64 	%rd2492, {%r11249, %r11248};
	shf.r.wrap.b32 	%r11250, %r11247, %r11246, 18;
	shf.r.wrap.b32 	%r11251, %r11246, %r11247, 18;
	mov.b64 	%rd2493, {%r11251, %r11250};
	xor.b64  	%rd2494, %rd2493, %rd2492;
	shf.l.wrap.b32 	%r11252, %r11246, %r11247, 23;
	shf.l.wrap.b32 	%r11253, %r11247, %r11246, 23;
	mov.b64 	%rd2495, {%r11253, %r11252};
	xor.b64  	%rd2496, %rd2494, %rd2495;
	xor.b64  	%rd2497, %rd2456, %rd2432;
	and.b64  	%rd2498, %rd2480, %rd2497;
	xor.b64  	%rd2499, %rd2498, %rd2432;
	add.s64 	%rd2500, %rd2302, %rd2239;
	add.s64 	%rd2501, %rd2500, %rd2804;
	add.s64 	%rd2502, %rd2501, %rd2499;
	add.s64 	%rd2503, %rd2502, %rd2496;
	add.s64 	%rd2504, %rd2503, %rd2250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11254,%dummy}, %rd2491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11255}, %rd2491;
	}
	shf.r.wrap.b32 	%r11256, %r11255, %r11254, 28;
	shf.r.wrap.b32 	%r11257, %r11254, %r11255, 28;
	mov.b64 	%rd2505, {%r11257, %r11256};
	shf.l.wrap.b32 	%r11258, %r11254, %r11255, 30;
	shf.l.wrap.b32 	%r11259, %r11255, %r11254, 30;
	mov.b64 	%rd2506, {%r11259, %r11258};
	xor.b64  	%rd2507, %rd2506, %rd2505;
	shf.l.wrap.b32 	%r11260, %r11254, %r11255, 25;
	shf.l.wrap.b32 	%r11261, %r11255, %r11254, 25;
	mov.b64 	%rd2508, {%r11261, %r11260};
	xor.b64  	%rd2509, %rd2507, %rd2508;
	xor.b64  	%rd2510, %rd2491, %rd2443;
	xor.b64  	%rd2511, %rd2491, %rd2467;
	and.b64  	%rd2512, %rd2511, %rd2510;
	xor.b64  	%rd2513, %rd2512, %rd2491;
	add.s64 	%rd2514, %rd2503, %rd2513;
	add.s64 	%rd2515, %rd2514, %rd2509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11262,%dummy}, %rd2504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11263}, %rd2504;
	}
	shf.r.wrap.b32 	%r11264, %r11263, %r11262, 14;
	shf.r.wrap.b32 	%r11265, %r11262, %r11263, 14;
	mov.b64 	%rd2516, {%r11265, %r11264};
	shf.r.wrap.b32 	%r11266, %r11263, %r11262, 18;
	shf.r.wrap.b32 	%r11267, %r11262, %r11263, 18;
	mov.b64 	%rd2517, {%r11267, %r11266};
	xor.b64  	%rd2518, %rd2517, %rd2516;
	shf.l.wrap.b32 	%r11268, %r11262, %r11263, 23;
	shf.l.wrap.b32 	%r11269, %r11263, %r11262, 23;
	mov.b64 	%rd2519, {%r11269, %r11268};
	xor.b64  	%rd2520, %rd2518, %rd2519;
	xor.b64  	%rd2521, %rd2480, %rd2456;
	and.b64  	%rd2522, %rd2504, %rd2521;
	xor.b64  	%rd2523, %rd2522, %rd2456;
	add.s64 	%rd2524, %rd2432, %rd2315;
	add.s64 	%rd2525, %rd2524, %rd2805;
	add.s64 	%rd2526, %rd2525, %rd2523;
	add.s64 	%rd2527, %rd2526, %rd2520;
	add.s64 	%rd2528, %rd2527, %rd2443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11270,%dummy}, %rd2515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11271}, %rd2515;
	}
	shf.r.wrap.b32 	%r11272, %r11271, %r11270, 28;
	shf.r.wrap.b32 	%r11273, %r11270, %r11271, 28;
	mov.b64 	%rd2529, {%r11273, %r11272};
	shf.l.wrap.b32 	%r11274, %r11270, %r11271, 30;
	shf.l.wrap.b32 	%r11275, %r11271, %r11270, 30;
	mov.b64 	%rd2530, {%r11275, %r11274};
	xor.b64  	%rd2531, %rd2530, %rd2529;
	shf.l.wrap.b32 	%r11276, %r11270, %r11271, 25;
	shf.l.wrap.b32 	%r11277, %r11271, %r11270, 25;
	mov.b64 	%rd2532, {%r11277, %r11276};
	xor.b64  	%rd2533, %rd2531, %rd2532;
	xor.b64  	%rd2534, %rd2515, %rd2467;
	xor.b64  	%rd2535, %rd2515, %rd2491;
	and.b64  	%rd2536, %rd2535, %rd2534;
	xor.b64  	%rd2537, %rd2536, %rd2515;
	add.s64 	%rd2538, %rd2527, %rd2537;
	add.s64 	%rd2539, %rd2538, %rd2533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11278,%dummy}, %rd2528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11279}, %rd2528;
	}
	shf.r.wrap.b32 	%r11280, %r11279, %r11278, 14;
	shf.r.wrap.b32 	%r11281, %r11278, %r11279, 14;
	mov.b64 	%rd2540, {%r11281, %r11280};
	shf.r.wrap.b32 	%r11282, %r11279, %r11278, 18;
	shf.r.wrap.b32 	%r11283, %r11278, %r11279, 18;
	mov.b64 	%rd2541, {%r11283, %r11282};
	xor.b64  	%rd2542, %rd2541, %rd2540;
	shf.l.wrap.b32 	%r11284, %r11278, %r11279, 23;
	shf.l.wrap.b32 	%r11285, %r11279, %r11278, 23;
	mov.b64 	%rd2543, {%r11285, %r11284};
	xor.b64  	%rd2544, %rd2542, %rd2543;
	xor.b64  	%rd2545, %rd2504, %rd2480;
	and.b64  	%rd2546, %rd2528, %rd2545;
	xor.b64  	%rd2547, %rd2546, %rd2480;
	add.s64 	%rd2548, %rd2456, %rd2328;
	add.s64 	%rd2549, %rd2548, %rd2806;
	add.s64 	%rd2550, %rd2549, %rd2547;
	add.s64 	%rd2551, %rd2550, %rd2544;
	add.s64 	%rd2552, %rd2551, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11286,%dummy}, %rd2539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11287}, %rd2539;
	}
	shf.r.wrap.b32 	%r11288, %r11287, %r11286, 28;
	shf.r.wrap.b32 	%r11289, %r11286, %r11287, 28;
	mov.b64 	%rd2553, {%r11289, %r11288};
	shf.l.wrap.b32 	%r11290, %r11286, %r11287, 30;
	shf.l.wrap.b32 	%r11291, %r11287, %r11286, 30;
	mov.b64 	%rd2554, {%r11291, %r11290};
	xor.b64  	%rd2555, %rd2554, %rd2553;
	shf.l.wrap.b32 	%r11292, %r11286, %r11287, 25;
	shf.l.wrap.b32 	%r11293, %r11287, %r11286, 25;
	mov.b64 	%rd2556, {%r11293, %r11292};
	xor.b64  	%rd2557, %rd2555, %rd2556;
	xor.b64  	%rd2558, %rd2539, %rd2491;
	xor.b64  	%rd2559, %rd2539, %rd2515;
	and.b64  	%rd2560, %rd2559, %rd2558;
	xor.b64  	%rd2561, %rd2560, %rd2539;
	add.s64 	%rd2562, %rd2551, %rd2561;
	add.s64 	%rd2563, %rd2562, %rd2557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11294,%dummy}, %rd2552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11295}, %rd2552;
	}
	shf.r.wrap.b32 	%r11296, %r11295, %r11294, 14;
	shf.r.wrap.b32 	%r11297, %r11294, %r11295, 14;
	mov.b64 	%rd2564, {%r11297, %r11296};
	shf.r.wrap.b32 	%r11298, %r11295, %r11294, 18;
	shf.r.wrap.b32 	%r11299, %r11294, %r11295, 18;
	mov.b64 	%rd2565, {%r11299, %r11298};
	xor.b64  	%rd2566, %rd2565, %rd2564;
	shf.l.wrap.b32 	%r11300, %r11294, %r11295, 23;
	shf.l.wrap.b32 	%r11301, %r11295, %r11294, 23;
	mov.b64 	%rd2567, {%r11301, %r11300};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	xor.b64  	%rd2569, %rd2528, %rd2504;
	and.b64  	%rd2570, %rd2552, %rd2569;
	xor.b64  	%rd2571, %rd2570, %rd2504;
	add.s64 	%rd2572, %rd2480, %rd2341;
	add.s64 	%rd2573, %rd2572, %rd2807;
	add.s64 	%rd2574, %rd2573, %rd2571;
	add.s64 	%rd2575, %rd2574, %rd2568;
	add.s64 	%rd2576, %rd2575, %rd2491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11302,%dummy}, %rd2563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11303}, %rd2563;
	}
	shf.r.wrap.b32 	%r11304, %r11303, %r11302, 28;
	shf.r.wrap.b32 	%r11305, %r11302, %r11303, 28;
	mov.b64 	%rd2577, {%r11305, %r11304};
	shf.l.wrap.b32 	%r11306, %r11302, %r11303, 30;
	shf.l.wrap.b32 	%r11307, %r11303, %r11302, 30;
	mov.b64 	%rd2578, {%r11307, %r11306};
	xor.b64  	%rd2579, %rd2578, %rd2577;
	shf.l.wrap.b32 	%r11308, %r11302, %r11303, 25;
	shf.l.wrap.b32 	%r11309, %r11303, %r11302, 25;
	mov.b64 	%rd2580, {%r11309, %r11308};
	xor.b64  	%rd2581, %rd2579, %rd2580;
	xor.b64  	%rd2582, %rd2563, %rd2515;
	xor.b64  	%rd2583, %rd2563, %rd2539;
	and.b64  	%rd2584, %rd2583, %rd2582;
	xor.b64  	%rd2585, %rd2584, %rd2563;
	add.s64 	%rd2586, %rd2575, %rd2585;
	add.s64 	%rd2587, %rd2586, %rd2581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11310,%dummy}, %rd2576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11311}, %rd2576;
	}
	shf.r.wrap.b32 	%r11312, %r11311, %r11310, 14;
	shf.r.wrap.b32 	%r11313, %r11310, %r11311, 14;
	mov.b64 	%rd2588, {%r11313, %r11312};
	shf.r.wrap.b32 	%r11314, %r11311, %r11310, 18;
	shf.r.wrap.b32 	%r11315, %r11310, %r11311, 18;
	mov.b64 	%rd2589, {%r11315, %r11314};
	xor.b64  	%rd2590, %rd2589, %rd2588;
	shf.l.wrap.b32 	%r11316, %r11310, %r11311, 23;
	shf.l.wrap.b32 	%r11317, %r11311, %r11310, 23;
	mov.b64 	%rd2591, {%r11317, %r11316};
	xor.b64  	%rd2592, %rd2590, %rd2591;
	xor.b64  	%rd2593, %rd2552, %rd2528;
	and.b64  	%rd2594, %rd2576, %rd2593;
	xor.b64  	%rd2595, %rd2594, %rd2528;
	add.s64 	%rd2596, %rd2504, %rd2354;
	add.s64 	%rd2597, %rd2596, %rd2808;
	add.s64 	%rd2598, %rd2597, %rd2595;
	add.s64 	%rd2599, %rd2598, %rd2592;
	add.s64 	%rd2600, %rd2599, %rd2515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11318,%dummy}, %rd2587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11319}, %rd2587;
	}
	shf.r.wrap.b32 	%r11320, %r11319, %r11318, 28;
	shf.r.wrap.b32 	%r11321, %r11318, %r11319, 28;
	mov.b64 	%rd2601, {%r11321, %r11320};
	shf.l.wrap.b32 	%r11322, %r11318, %r11319, 30;
	shf.l.wrap.b32 	%r11323, %r11319, %r11318, 30;
	mov.b64 	%rd2602, {%r11323, %r11322};
	xor.b64  	%rd2603, %rd2602, %rd2601;
	shf.l.wrap.b32 	%r11324, %r11318, %r11319, 25;
	shf.l.wrap.b32 	%r11325, %r11319, %r11318, 25;
	mov.b64 	%rd2604, {%r11325, %r11324};
	xor.b64  	%rd2605, %rd2603, %rd2604;
	xor.b64  	%rd2606, %rd2587, %rd2539;
	xor.b64  	%rd2607, %rd2587, %rd2563;
	and.b64  	%rd2608, %rd2607, %rd2606;
	xor.b64  	%rd2609, %rd2608, %rd2587;
	add.s64 	%rd2610, %rd2599, %rd2609;
	add.s64 	%rd2611, %rd2610, %rd2605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11326,%dummy}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11327}, %rd2600;
	}
	shf.r.wrap.b32 	%r11328, %r11327, %r11326, 14;
	shf.r.wrap.b32 	%r11329, %r11326, %r11327, 14;
	mov.b64 	%rd2612, {%r11329, %r11328};
	shf.r.wrap.b32 	%r11330, %r11327, %r11326, 18;
	shf.r.wrap.b32 	%r11331, %r11326, %r11327, 18;
	mov.b64 	%rd2613, {%r11331, %r11330};
	xor.b64  	%rd2614, %rd2613, %rd2612;
	shf.l.wrap.b32 	%r11332, %r11326, %r11327, 23;
	shf.l.wrap.b32 	%r11333, %r11327, %r11326, 23;
	mov.b64 	%rd2615, {%r11333, %r11332};
	xor.b64  	%rd2616, %rd2614, %rd2615;
	xor.b64  	%rd2617, %rd2576, %rd2552;
	and.b64  	%rd2618, %rd2600, %rd2617;
	xor.b64  	%rd2619, %rd2618, %rd2552;
	add.s64 	%rd2620, %rd2528, %rd2367;
	add.s64 	%rd2621, %rd2620, %rd2809;
	add.s64 	%rd2622, %rd2621, %rd2619;
	add.s64 	%rd2623, %rd2622, %rd2616;
	add.s64 	%rd2624, %rd2623, %rd2539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11334,%dummy}, %rd2611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11335}, %rd2611;
	}
	shf.r.wrap.b32 	%r11336, %r11335, %r11334, 28;
	shf.r.wrap.b32 	%r11337, %r11334, %r11335, 28;
	mov.b64 	%rd2625, {%r11337, %r11336};
	shf.l.wrap.b32 	%r11338, %r11334, %r11335, 30;
	shf.l.wrap.b32 	%r11339, %r11335, %r11334, 30;
	mov.b64 	%rd2626, {%r11339, %r11338};
	xor.b64  	%rd2627, %rd2626, %rd2625;
	shf.l.wrap.b32 	%r11340, %r11334, %r11335, 25;
	shf.l.wrap.b32 	%r11341, %r11335, %r11334, 25;
	mov.b64 	%rd2628, {%r11341, %r11340};
	xor.b64  	%rd2629, %rd2627, %rd2628;
	xor.b64  	%rd2630, %rd2611, %rd2563;
	xor.b64  	%rd2631, %rd2611, %rd2587;
	and.b64  	%rd2632, %rd2631, %rd2630;
	xor.b64  	%rd2633, %rd2632, %rd2611;
	add.s64 	%rd2634, %rd2623, %rd2633;
	add.s64 	%rd2635, %rd2634, %rd2629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11342,%dummy}, %rd2624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11343}, %rd2624;
	}
	shf.r.wrap.b32 	%r11344, %r11343, %r11342, 14;
	shf.r.wrap.b32 	%r11345, %r11342, %r11343, 14;
	mov.b64 	%rd2636, {%r11345, %r11344};
	shf.r.wrap.b32 	%r11346, %r11343, %r11342, 18;
	shf.r.wrap.b32 	%r11347, %r11342, %r11343, 18;
	mov.b64 	%rd2637, {%r11347, %r11346};
	xor.b64  	%rd2638, %rd2637, %rd2636;
	shf.l.wrap.b32 	%r11348, %r11342, %r11343, 23;
	shf.l.wrap.b32 	%r11349, %r11343, %r11342, 23;
	mov.b64 	%rd2639, {%r11349, %r11348};
	xor.b64  	%rd2640, %rd2638, %rd2639;
	xor.b64  	%rd2641, %rd2600, %rd2576;
	and.b64  	%rd2642, %rd2624, %rd2641;
	xor.b64  	%rd2643, %rd2642, %rd2576;
	add.s64 	%rd2644, %rd2552, %rd2380;
	add.s64 	%rd2645, %rd2644, %rd2810;
	add.s64 	%rd2646, %rd2645, %rd2643;
	add.s64 	%rd2647, %rd2646, %rd2640;
	add.s64 	%rd2648, %rd2647, %rd2563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11350,%dummy}, %rd2635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11351}, %rd2635;
	}
	shf.r.wrap.b32 	%r11352, %r11351, %r11350, 28;
	shf.r.wrap.b32 	%r11353, %r11350, %r11351, 28;
	mov.b64 	%rd2649, {%r11353, %r11352};
	shf.l.wrap.b32 	%r11354, %r11350, %r11351, 30;
	shf.l.wrap.b32 	%r11355, %r11351, %r11350, 30;
	mov.b64 	%rd2650, {%r11355, %r11354};
	xor.b64  	%rd2651, %rd2650, %rd2649;
	shf.l.wrap.b32 	%r11356, %r11350, %r11351, 25;
	shf.l.wrap.b32 	%r11357, %r11351, %r11350, 25;
	mov.b64 	%rd2652, {%r11357, %r11356};
	xor.b64  	%rd2653, %rd2651, %rd2652;
	xor.b64  	%rd2654, %rd2635, %rd2587;
	xor.b64  	%rd2655, %rd2635, %rd2611;
	and.b64  	%rd2656, %rd2655, %rd2654;
	xor.b64  	%rd2657, %rd2656, %rd2635;
	add.s64 	%rd2658, %rd2647, %rd2657;
	add.s64 	%rd2659, %rd2658, %rd2653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11358,%dummy}, %rd2648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11359}, %rd2648;
	}
	shf.r.wrap.b32 	%r11360, %r11359, %r11358, 14;
	shf.r.wrap.b32 	%r11361, %r11358, %r11359, 14;
	mov.b64 	%rd2660, {%r11361, %r11360};
	shf.r.wrap.b32 	%r11362, %r11359, %r11358, 18;
	shf.r.wrap.b32 	%r11363, %r11358, %r11359, 18;
	mov.b64 	%rd2661, {%r11363, %r11362};
	xor.b64  	%rd2662, %rd2661, %rd2660;
	shf.l.wrap.b32 	%r11364, %r11358, %r11359, 23;
	shf.l.wrap.b32 	%r11365, %r11359, %r11358, 23;
	mov.b64 	%rd2663, {%r11365, %r11364};
	xor.b64  	%rd2664, %rd2662, %rd2663;
	xor.b64  	%rd2665, %rd2624, %rd2600;
	and.b64  	%rd2666, %rd2648, %rd2665;
	xor.b64  	%rd2667, %rd2666, %rd2600;
	add.s64 	%rd2668, %rd2576, %rd2393;
	add.s64 	%rd2669, %rd2668, %rd2811;
	add.s64 	%rd2670, %rd2669, %rd2667;
	add.s64 	%rd2671, %rd2670, %rd2664;
	add.s64 	%rd2672, %rd2671, %rd2587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11366,%dummy}, %rd2659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11367}, %rd2659;
	}
	shf.r.wrap.b32 	%r11368, %r11367, %r11366, 28;
	shf.r.wrap.b32 	%r11369, %r11366, %r11367, 28;
	mov.b64 	%rd2673, {%r11369, %r11368};
	shf.l.wrap.b32 	%r11370, %r11366, %r11367, 30;
	shf.l.wrap.b32 	%r11371, %r11367, %r11366, 30;
	mov.b64 	%rd2674, {%r11371, %r11370};
	xor.b64  	%rd2675, %rd2674, %rd2673;
	shf.l.wrap.b32 	%r11372, %r11366, %r11367, 25;
	shf.l.wrap.b32 	%r11373, %r11367, %r11366, 25;
	mov.b64 	%rd2676, {%r11373, %r11372};
	xor.b64  	%rd2677, %rd2675, %rd2676;
	xor.b64  	%rd2678, %rd2659, %rd2611;
	xor.b64  	%rd2679, %rd2659, %rd2635;
	and.b64  	%rd2680, %rd2679, %rd2678;
	xor.b64  	%rd2681, %rd2680, %rd2659;
	add.s64 	%rd2682, %rd2671, %rd2681;
	add.s64 	%rd2683, %rd2682, %rd2677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11374,%dummy}, %rd2672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11375}, %rd2672;
	}
	shf.r.wrap.b32 	%r11376, %r11375, %r11374, 14;
	shf.r.wrap.b32 	%r11377, %r11374, %r11375, 14;
	mov.b64 	%rd2684, {%r11377, %r11376};
	shf.r.wrap.b32 	%r11378, %r11375, %r11374, 18;
	shf.r.wrap.b32 	%r11379, %r11374, %r11375, 18;
	mov.b64 	%rd2685, {%r11379, %r11378};
	xor.b64  	%rd2686, %rd2685, %rd2684;
	shf.l.wrap.b32 	%r11380, %r11374, %r11375, 23;
	shf.l.wrap.b32 	%r11381, %r11375, %r11374, 23;
	mov.b64 	%rd2687, {%r11381, %r11380};
	xor.b64  	%rd2688, %rd2686, %rd2687;
	xor.b64  	%rd2689, %rd2648, %rd2624;
	and.b64  	%rd2690, %rd2672, %rd2689;
	xor.b64  	%rd2691, %rd2690, %rd2624;
	add.s64 	%rd2692, %rd2600, %rd2406;
	add.s64 	%rd2693, %rd2692, %rd2812;
	add.s64 	%rd2694, %rd2693, %rd2691;
	add.s64 	%rd2695, %rd2694, %rd2688;
	add.s64 	%rd2696, %rd2695, %rd2611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11382,%dummy}, %rd2683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11383}, %rd2683;
	}
	shf.r.wrap.b32 	%r11384, %r11383, %r11382, 28;
	shf.r.wrap.b32 	%r11385, %r11382, %r11383, 28;
	mov.b64 	%rd2697, {%r11385, %r11384};
	shf.l.wrap.b32 	%r11386, %r11382, %r11383, 30;
	shf.l.wrap.b32 	%r11387, %r11383, %r11382, 30;
	mov.b64 	%rd2698, {%r11387, %r11386};
	xor.b64  	%rd2699, %rd2698, %rd2697;
	shf.l.wrap.b32 	%r11388, %r11382, %r11383, 25;
	shf.l.wrap.b32 	%r11389, %r11383, %r11382, 25;
	mov.b64 	%rd2700, {%r11389, %r11388};
	xor.b64  	%rd2701, %rd2699, %rd2700;
	xor.b64  	%rd2702, %rd2683, %rd2635;
	xor.b64  	%rd2703, %rd2683, %rd2659;
	and.b64  	%rd2704, %rd2703, %rd2702;
	xor.b64  	%rd2705, %rd2704, %rd2683;
	add.s64 	%rd2706, %rd2695, %rd2705;
	add.s64 	%rd2707, %rd2706, %rd2701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11390,%dummy}, %rd2696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11391}, %rd2696;
	}
	shf.r.wrap.b32 	%r11392, %r11391, %r11390, 14;
	shf.r.wrap.b32 	%r11393, %r11390, %r11391, 14;
	mov.b64 	%rd2708, {%r11393, %r11392};
	shf.r.wrap.b32 	%r11394, %r11391, %r11390, 18;
	shf.r.wrap.b32 	%r11395, %r11390, %r11391, 18;
	mov.b64 	%rd2709, {%r11395, %r11394};
	xor.b64  	%rd2710, %rd2709, %rd2708;
	shf.l.wrap.b32 	%r11396, %r11390, %r11391, 23;
	shf.l.wrap.b32 	%r11397, %r11391, %r11390, 23;
	mov.b64 	%rd2711, {%r11397, %r11396};
	xor.b64  	%rd2712, %rd2710, %rd2711;
	xor.b64  	%rd2713, %rd2672, %rd2648;
	and.b64  	%rd2714, %rd2696, %rd2713;
	xor.b64  	%rd2715, %rd2714, %rd2648;
	add.s64 	%rd2716, %rd2624, %rd2419;
	add.s64 	%rd2717, %rd2716, %rd2813;
	add.s64 	%rd2718, %rd2717, %rd2715;
	add.s64 	%rd2719, %rd2718, %rd2712;
	add.s64 	%rd85, %rd2719, %rd2635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11398,%dummy}, %rd2707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11399}, %rd2707;
	}
	shf.r.wrap.b32 	%r11400, %r11399, %r11398, 28;
	shf.r.wrap.b32 	%r11401, %r11398, %r11399, 28;
	mov.b64 	%rd2720, {%r11401, %r11400};
	shf.l.wrap.b32 	%r11402, %r11398, %r11399, 30;
	shf.l.wrap.b32 	%r11403, %r11399, %r11398, 30;
	mov.b64 	%rd2721, {%r11403, %r11402};
	xor.b64  	%rd2722, %rd2721, %rd2720;
	shf.l.wrap.b32 	%r11404, %r11398, %r11399, 25;
	shf.l.wrap.b32 	%r11405, %r11399, %r11398, 25;
	mov.b64 	%rd2723, {%r11405, %r11404};
	xor.b64  	%rd2724, %rd2722, %rd2723;
	xor.b64  	%rd2725, %rd2707, %rd2659;
	xor.b64  	%rd2726, %rd2707, %rd2683;
	and.b64  	%rd2727, %rd2726, %rd2725;
	xor.b64  	%rd2728, %rd2727, %rd2707;
	add.s64 	%rd2729, %rd2719, %rd2728;
	add.s64 	%rd86, %rd2729, %rd2724;
	cvt.u32.u64	%r11406, %rd85;
	setp.ne.s32	%p1054, %r11406, %r26;
	@%p1054 bra 	BB4_1601;

	shr.u64 	%rd2730, %rd86, 32;
	cvt.u32.u64	%r11407, %rd2730;
	shr.u64 	%rd2731, %rd85, 32;
	cvt.u32.u64	%r11408, %rd2731;
	setp.eq.s32	%p1055, %r11408, %r27;
	cvt.u32.u64	%r11409, %rd86;
	setp.eq.s32	%p1056, %r11409, %r28;
	and.pred  	%p1057, %p1055, %p1056;
	setp.eq.s32	%p1058, %r11407, %r29;
	and.pred  	%p1059, %p1057, %p1058;
	@!%p1059 bra 	BB4_1601;
	bra.uni 	BB4_1597;

BB4_1597:
	ld.param.u64 	%rd2814, [m01710_s04_param_16];
	mul.wide.u32 	%rd2732, %r1924, 4;
	add.s64 	%rd2733, %rd2814, %rd2732;
	atom.global.add.u32 	%r11410, [%rd2733], 1;
	setp.ne.s32	%p1060, %r11410, 0;
	@%p1060 bra 	BB4_1601;

	ld.param.u32 	%r11417, [m01710_s04_param_31];
	atom.global.add.u32 	%r1919, [%rd93], 1;
	setp.lt.u32	%p1061, %r1919, %r11417;
	@%p1061 bra 	BB4_1600;
	bra.uni 	BB4_1599;

BB4_1600:
	ld.param.u64 	%rd2815, [m01710_s04_param_14];
	ld.param.u32 	%r11416, [m01710_s04_param_27];
	mov.u32 	%r11415, 0;
	mul.wide.u32 	%rd2734, %r1919, 20;
	add.s64 	%rd2735, %rd2815, %rd2734;
	st.global.u32 	[%rd2735], %r11416;
	st.global.u32 	[%rd2735+4], %r11415;
	st.global.u32 	[%rd2735+8], %r1924;
	st.global.u32 	[%rd2735+12], %r1;
	st.global.u32 	[%rd2735+16], %r11418;
	bra.uni 	BB4_1601;

BB4_1599:
	atom.global.add.u32 	%r11411, [%rd93], -1;

BB4_1601:
	ld.param.u32 	%r11413, [m01710_s04_param_30];
	add.s32 	%r11418, %r11418, 1;
	setp.lt.u32	%p1062, %r11418, %r11413;
	@%p1062 bra 	BB4_3;

BB4_1602:
	ret;
}

	// .globl	m01710_s08
.entry m01710_s08(
	.param .u64 .ptr .global .align 4 m01710_s08_param_0,
	.param .u64 .ptr .global .align 4 m01710_s08_param_1,
	.param .u64 .ptr .global .align 4 m01710_s08_param_2,
	.param .u64 .ptr .global .align 4 m01710_s08_param_3,
	.param .u64 .ptr .global .align 1 m01710_s08_param_4,
	.param .u64 .ptr .global .align 1 m01710_s08_param_5,
	.param .u64 .ptr .global .align 4 m01710_s08_param_6,
	.param .u64 .ptr .global .align 4 m01710_s08_param_7,
	.param .u64 .ptr .global .align 4 m01710_s08_param_8,
	.param .u64 .ptr .global .align 4 m01710_s08_param_9,
	.param .u64 .ptr .global .align 4 m01710_s08_param_10,
	.param .u64 .ptr .global .align 4 m01710_s08_param_11,
	.param .u64 .ptr .global .align 4 m01710_s08_param_12,
	.param .u64 .ptr .global .align 4 m01710_s08_param_13,
	.param .u64 .ptr .global .align 4 m01710_s08_param_14,
	.param .u64 .ptr .global .align 4 m01710_s08_param_15,
	.param .u64 .ptr .global .align 4 m01710_s08_param_16,
	.param .u64 .ptr .global .align 4 m01710_s08_param_17,
	.param .u64 .ptr .global .align 1 m01710_s08_param_18,
	.param .u64 .ptr .global .align 4 m01710_s08_param_19,
	.param .u64 .ptr .global .align 4 m01710_s08_param_20,
	.param .u64 .ptr .global .align 4 m01710_s08_param_21,
	.param .u64 .ptr .global .align 4 m01710_s08_param_22,
	.param .u64 .ptr .global .align 4 m01710_s08_param_23,
	.param .u32 m01710_s08_param_24,
	.param .u32 m01710_s08_param_25,
	.param .u32 m01710_s08_param_26,
	.param .u32 m01710_s08_param_27,
	.param .u32 m01710_s08_param_28,
	.param .u32 m01710_s08_param_29,
	.param .u32 m01710_s08_param_30,
	.param .u32 m01710_s08_param_31,
	.param .u32 m01710_s08_param_32,
	.param .u32 m01710_s08_param_33,
	.param .u32 m01710_s08_param_34
)
{



	ret;
}

	// .globl	m01710_s16
.entry m01710_s16(
	.param .u64 .ptr .global .align 4 m01710_s16_param_0,
	.param .u64 .ptr .global .align 4 m01710_s16_param_1,
	.param .u64 .ptr .global .align 4 m01710_s16_param_2,
	.param .u64 .ptr .global .align 4 m01710_s16_param_3,
	.param .u64 .ptr .global .align 1 m01710_s16_param_4,
	.param .u64 .ptr .global .align 1 m01710_s16_param_5,
	.param .u64 .ptr .global .align 4 m01710_s16_param_6,
	.param .u64 .ptr .global .align 4 m01710_s16_param_7,
	.param .u64 .ptr .global .align 4 m01710_s16_param_8,
	.param .u64 .ptr .global .align 4 m01710_s16_param_9,
	.param .u64 .ptr .global .align 4 m01710_s16_param_10,
	.param .u64 .ptr .global .align 4 m01710_s16_param_11,
	.param .u64 .ptr .global .align 4 m01710_s16_param_12,
	.param .u64 .ptr .global .align 4 m01710_s16_param_13,
	.param .u64 .ptr .global .align 4 m01710_s16_param_14,
	.param .u64 .ptr .global .align 4 m01710_s16_param_15,
	.param .u64 .ptr .global .align 4 m01710_s16_param_16,
	.param .u64 .ptr .global .align 4 m01710_s16_param_17,
	.param .u64 .ptr .global .align 1 m01710_s16_param_18,
	.param .u64 .ptr .global .align 4 m01710_s16_param_19,
	.param .u64 .ptr .global .align 4 m01710_s16_param_20,
	.param .u64 .ptr .global .align 4 m01710_s16_param_21,
	.param .u64 .ptr .global .align 4 m01710_s16_param_22,
	.param .u64 .ptr .global .align 4 m01710_s16_param_23,
	.param .u32 m01710_s16_param_24,
	.param .u32 m01710_s16_param_25,
	.param .u32 m01710_s16_param_26,
	.param .u32 m01710_s16_param_27,
	.param .u32 m01710_s16_param_28,
	.param .u32 m01710_s16_param_29,
	.param .u32 m01710_s16_param_30,
	.param .u32 m01710_s16_param_31,
	.param .u32 m01710_s16_param_32,
	.param .u32 m01710_s16_param_33,
	.param .u32 m01710_s16_param_34
)
{



	ret;
}


  