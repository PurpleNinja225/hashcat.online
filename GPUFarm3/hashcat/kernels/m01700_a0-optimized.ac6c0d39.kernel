//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 4 .b8 c_append_helper[4096] = {255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255};
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u64 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd2, [gpu_memset_param_0];
	ld.param.u32 	%r1, [gpu_memset_param_1];
	ld.param.u64 	%rd3, [gpu_memset_param_2];
	mov.b32	%r2, %envreg3;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mad.lo.s32 	%r5, %r3, %r4, %r2;
	mov.u32 	%r6, %tid.x;
	add.s32 	%r7, %r5, %r6;
	cvt.s64.s32	%rd1, %r7;
	setp.ge.u64	%p1, %rd1, %rd3;
	@%p1 bra 	BB0_2;

	shl.b64 	%rd4, %rd1, 4;
	add.s64 	%rd5, %rd2, %rd4;
	st.global.v4.u32 	[%rd5], {%r1, %r1, %r1, %r1};

BB0_2:
	ret;
}

	// .globl	m01700_m04
.entry m01700_m04(
	.param .u64 .ptr .global .align 4 m01700_m04_param_0,
	.param .u64 .ptr .const .align 4 m01700_m04_param_1,
	.param .u64 .ptr .global .align 4 m01700_m04_param_2,
	.param .u64 .ptr .global .align 4 m01700_m04_param_3,
	.param .u64 .ptr .global .align 1 m01700_m04_param_4,
	.param .u64 .ptr .global .align 1 m01700_m04_param_5,
	.param .u64 .ptr .global .align 4 m01700_m04_param_6,
	.param .u64 .ptr .global .align 4 m01700_m04_param_7,
	.param .u64 .ptr .global .align 4 m01700_m04_param_8,
	.param .u64 .ptr .global .align 4 m01700_m04_param_9,
	.param .u64 .ptr .global .align 4 m01700_m04_param_10,
	.param .u64 .ptr .global .align 4 m01700_m04_param_11,
	.param .u64 .ptr .global .align 4 m01700_m04_param_12,
	.param .u64 .ptr .global .align 4 m01700_m04_param_13,
	.param .u64 .ptr .global .align 4 m01700_m04_param_14,
	.param .u64 .ptr .global .align 4 m01700_m04_param_15,
	.param .u64 .ptr .global .align 4 m01700_m04_param_16,
	.param .u64 .ptr .global .align 4 m01700_m04_param_17,
	.param .u64 .ptr .global .align 1 m01700_m04_param_18,
	.param .u64 .ptr .global .align 4 m01700_m04_param_19,
	.param .u64 .ptr .global .align 4 m01700_m04_param_20,
	.param .u64 .ptr .global .align 4 m01700_m04_param_21,
	.param .u64 .ptr .global .align 4 m01700_m04_param_22,
	.param .u64 .ptr .global .align 4 m01700_m04_param_23,
	.param .u32 m01700_m04_param_24,
	.param .u32 m01700_m04_param_25,
	.param .u32 m01700_m04_param_26,
	.param .u32 m01700_m04_param_27,
	.param .u32 m01700_m04_param_28,
	.param .u32 m01700_m04_param_29,
	.param .u32 m01700_m04_param_30,
	.param .u32 m01700_m04_param_31,
	.param .u32 m01700_m04_param_32,
	.param .u32 m01700_m04_param_33,
	.param .u64 m01700_m04_param_34
)
{
	.local .align 16 .b8 	__local_depot1[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<786>;
	.reg .b16 	%rs<24>;
	.reg .b32 	%r<11075>;
	.reg .b64 	%rd<2877>;


	mov.u64 	%rd2876, __local_depot1;
	cvta.local.u64 	%SP, %rd2876;
	ld.param.u64 	%rd91, [m01700_m04_param_0];
	ld.param.u64 	%rd92, [m01700_m04_param_1];
	ld.param.u64 	%rd104, [m01700_m04_param_19];
	ld.param.u32 	%r1582, [m01700_m04_param_24];
	ld.param.u32 	%r1586, [m01700_m04_param_30];
	ld.param.u32 	%r1587, [m01700_m04_param_31];
	ld.param.u32 	%r1588, [m01700_m04_param_32];
	ld.param.u64 	%rd105, [m01700_m04_param_34];
	mov.u32 	%r1589, %ctaid.x;
	mov.u32 	%r1590, %ntid.x;
	mov.b32	%r1591, %envreg3;
	mad.lo.s32 	%r1592, %r1589, %r1590, %r1591;
	mov.u32 	%r1593, %tid.x;
	add.s32 	%r1, %r1592, %r1593;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd105;
	@%p1 bra 	BB1_1044;

	mul.lo.s64 	%rd106, %rd1, 260;
	add.s64 	%rd107, %rd91, %rd106;
	ld.global.u32 	%r2, [%rd107];
	ld.global.u32 	%r3, [%rd107+4];
	ld.global.u32 	%r4, [%rd107+8];
	ld.global.u32 	%r5, [%rd107+12];
	ld.global.u32 	%r6, [%rd107+16];
	ld.global.u32 	%r7, [%rd107+20];
	ld.global.u32 	%r8, [%rd107+24];
	ld.global.u32 	%r9, [%rd107+28];
	ld.global.u32 	%r10, [%rd107+256];
	setp.eq.s32	%p2, %r1586, 0;
	@%p2 bra 	BB1_1044;

	mov.u64 	%rd108, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1596,%dummy}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd108;
	}
	shf.r.wrap.b32 	%r1598, %r1597, %r1596, 18;
	shf.r.wrap.b32 	%r1599, %r1596, %r1597, 18;
	mov.b64 	%rd109, {%r1599, %r1598};
	shf.r.wrap.b32 	%r1600, %r1597, %r1596, 14;
	shf.r.wrap.b32 	%r1601, %r1596, %r1597, 14;
	mov.b64 	%rd110, {%r1601, %r1600};
	xor.b64  	%rd111, %rd109, %rd110;
	shf.l.wrap.b32 	%r1602, %r1596, %r1597, 23;
	shf.l.wrap.b32 	%r1603, %r1597, %r1596, 23;
	mov.b64 	%rd112, {%r1603, %r1602};
	xor.b64  	%rd3, %rd111, %rd112;
	mov.u64 	%rd113, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1604}, %rd113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd113;
	}
	shf.l.wrap.b32 	%r1606, %r1605, %r1604, 30;
	shf.l.wrap.b32 	%r1607, %r1604, %r1605, 30;
	mov.b64 	%rd114, {%r1607, %r1606};
	shf.r.wrap.b32 	%r1608, %r1604, %r1605, 28;
	shf.r.wrap.b32 	%r1609, %r1605, %r1604, 28;
	mov.b64 	%rd115, {%r1609, %r1608};
	xor.b64  	%rd116, %rd114, %rd115;
	shf.l.wrap.b32 	%r1610, %r1605, %r1604, 25;
	shf.l.wrap.b32 	%r1611, %r1604, %r1605, 25;
	mov.b64 	%rd117, {%r1611, %r1610};
	xor.b64  	%rd4, %rd116, %rd117;
	mov.u64 	%rd118, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1612}, %rd118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1613,%dummy}, %rd118;
	}
	shf.l.wrap.b32 	%r1614, %r1613, %r1612, 3;
	shf.l.wrap.b32 	%r1615, %r1612, %r1613, 3;
	mov.b64 	%rd119, {%r1615, %r1614};
	shf.r.wrap.b32 	%r1616, %r1612, %r1613, 19;
	shf.r.wrap.b32 	%r1617, %r1613, %r1612, 19;
	mov.b64 	%rd120, {%r1617, %r1616};
	xor.b64  	%rd20, %rd120, %rd119;
	shf.r.wrap.b32 	%r1618, %r1612, %r1613, 8;
	shf.r.wrap.b32 	%r1619, %r1613, %r1612, 8;
	mov.b64 	%rd121, {%r1619, %r1618};
	shf.r.wrap.b32 	%r1620, %r1612, %r1613, 1;
	shf.r.wrap.b32 	%r1621, %r1613, %r1612, 1;
	mov.b64 	%rd122, {%r1621, %r1620};
	xor.b64  	%rd21, %rd122, %rd121;
	mov.u32 	%r10871, 0;

BB1_3:
	mov.u32 	%r10881, 0;
	cvt.u64.u32	%rd83, %r10871;
	mul.wide.u32 	%rd123, %r10871, 128;
	add.s64 	%rd124, %rd92, %rd123;
	ld.const.u32 	%r10880, [%rd124];
	setp.eq.s32	%p3, %r10880, 0;
	mov.u32 	%r11070, %r10;
	mov.u32 	%r11061, %r5;
	mov.u32 	%r11060, %r4;
	mov.u32 	%r11059, %r3;
	mov.u32 	%r11058, %r2;
	mov.u32 	%r11057, %r9;
	mov.u32 	%r11056, %r8;
	mov.u32 	%r11055, %r7;
	mov.u32 	%r11054, %r6;
	@%p3 bra 	BB1_1016;
	bra.uni 	BB1_4;

BB1_758:
	mov.u32 	%r6485, 8;
	// inline asm
	shf.r.wrap.b32 %r11058, %r35, %r34, %r6485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r34, %r33, %r6485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r33, %r32, %r6485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11061, %r32, %r39, %r6485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r39, %r38, %r6485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11055, %r38, %r37, %r6485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11056, %r37, %r36, %r6485;
	// inline asm
	mov.u32 	%r6484, 0;
	// inline asm
	shf.r.wrap.b32 %r11057, %r36, %r6484, %r6485;
	// inline asm
	bra.uni 	BB1_1015;

BB1_499:
	setp.gt.s32	%p463, %r5203, 5;
	@%p463 bra 	BB1_504;

	setp.eq.s32	%p466, %r5203, 4;
	@%p466 bra 	BB1_511;
	bra.uni 	BB1_501;

BB1_511:
	and.b32  	%r5218, %r696, %r39;
	or.b32  	%r5219, %r5218, %r695;
	and.b32  	%r5220, %r11062, %r697;
	or.b32  	%r11054, %r5219, %r5220;
	mov.u32 	%r11055, %r11063;
	bra.uni 	BB1_503;

BB1_657:
	setp.gt.s32	%p538, %r41, 23;
	@%p538 bra 	BB1_674;

	setp.gt.s32	%p550, %r41, 19;
	@%p550 bra 	BB1_666;

	setp.gt.s32	%p556, %r41, 17;
	@%p556 bra 	BB1_663;

	setp.eq.s32	%p559, %r41, 16;
	@%p559 bra 	BB1_698;
	bra.uni 	BB1_661;

BB1_698:
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11058, %r39;
	mov.u32 	%r11059, %r38;
	mov.u32 	%r11060, %r37;
	bra.uni 	BB1_712;

BB1_956:
	setp.gt.s32	%p716, %r7865, 23;
	@%p716 bra 	BB1_972;

	setp.gt.s32	%p728, %r7865, 19;
	@%p728 bra 	BB1_965;

	setp.gt.s32	%p734, %r7865, 17;
	@%p734 bra 	BB1_962;

	setp.eq.s32	%p737, %r7865, 16;
	@%p737 bra 	BB1_994;
	bra.uni 	BB1_960;

BB1_994:
	mov.u32 	%r11065, 0;
	mov.u32 	%r11069, %r35;
	mov.u32 	%r11068, %r34;
	mov.u32 	%r11067, %r33;
	mov.u32 	%r11066, %r32;
	bra.uni 	BB1_995;

BB1_548:
	setp.gt.s32	%p477, %r43, 23;
	@%p477 bra 	BB1_566;

	setp.gt.s32	%p489, %r43, 19;
	@%p489 bra 	BB1_558;

	setp.gt.s32	%p495, %r43, 17;
	@%p495 bra 	BB1_554;

	setp.eq.s32	%p498, %r43, 16;
	@%p498 bra 	BB1_592;
	bra.uni 	BB1_552;

BB1_592:
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r39;
	mov.u32 	%r11067, %r38;
	mov.u32 	%r11068, %r37;
	mov.u32 	%r11069, %r36;
	bra.uni 	BB1_601;

BB1_920:
	setp.gt.s32	%p705, %r7686, 5;
	@%p705 bra 	BB1_924;

	setp.eq.s32	%p708, %r7686, 4;
	@%p708 bra 	BB1_928;
	bra.uni 	BB1_922;

BB1_928:
	// inline asm
	prmt.b32 %r11045, %r33, %r32, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11044, %r34, %r33, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11043, %r35, %r34, %r1297;
	// inline asm
	mov.u32 	%r11038, 0;
	// inline asm
	prmt.b32 %r11042, %r11038, %r35, %r1297;
	// inline asm
	mov.u32 	%r11039, %r11038;
	mov.u32 	%r11040, %r11038;
	mov.u32 	%r11041, %r11038;
	bra.uni 	BB1_931;

BB1_755:
	and.b32  	%r6439, %r11070, 3;
	shl.b32 	%r6440, %r6439, 3;
	mov.u32 	%r6441, 1;
	shl.b32 	%r6442, %r6441, %r6440;
	add.s32 	%r6443, %r6442, -1;
	setp.lt.u32	%p606, %r11070, 4;
	selp.b32	%r6444, %r6443, -1, %p606;
	and.b32  	%r11058, %r6444, %r35;
	and.b32  	%r6445, %r11070, -4;
	setp.eq.s32	%p607, %r6445, 4;
	selp.b32	%r6446, %r6443, -1, %p607;
	and.b32  	%r11059, %r6446, %r34;
	setp.eq.s32	%p608, %r6445, 8;
	selp.b32	%r6447, %r6443, -1, %p608;
	and.b32  	%r11060, %r6447, %r33;
	setp.eq.s32	%p609, %r6445, 12;
	selp.b32	%r6448, %r6443, -1, %p609;
	and.b32  	%r11061, %r6448, %r32;
	setp.eq.s32	%p610, %r6445, 16;
	selp.b32	%r6449, %r6443, -1, %p610;
	and.b32  	%r11054, %r6449, %r39;
	setp.eq.s32	%p611, %r6445, 20;
	selp.b32	%r6450, %r6443, -1, %p611;
	and.b32  	%r11055, %r6450, %r38;
	setp.eq.s32	%p612, %r6445, 24;
	selp.b32	%r6451, %r6443, -1, %p612;
	and.b32  	%r11056, %r6451, %r37;
	setp.gt.u32	%p613, %r11070, 27;
	selp.b32	%r6452, %r6443, -1, %p613;
	and.b32  	%r11057, %r6452, %r36;
	bra.uni 	BB1_1015;

BB1_363:
	setp.gt.s32	%p272, %r41, 23;
	@%p272 bra 	BB1_379;

	setp.gt.s32	%p284, %r41, 19;
	@%p284 bra 	BB1_372;

	setp.gt.s32	%p290, %r41, 17;
	@%p290 bra 	BB1_369;

	setp.eq.s32	%p293, %r41, 16;
	@%p293 bra 	BB1_401;
	bra.uni 	BB1_367;

BB1_401:
	mov.u32 	%r10945, 0;
	mov.u32 	%r10941, %r35;
	mov.u32 	%r10942, %r34;
	mov.u32 	%r10943, %r33;
	mov.u32 	%r39, %r32;
	bra.uni 	BB1_402;

BB1_761:
	shl.b32 	%r6521, %r11070, 3;
	and.b32  	%r6522, %r6521, 24;
	ld.const.u32 	%r6523, [%rd88];
	and.b32  	%r6524, %r6523, %r35;
	ld.const.u32 	%r6525, [%rd88+4];
	and.b32  	%r6526, %r6525, %r34;
	or.b32  	%r6527, %r6526, %r6524;
	ld.const.u32 	%r6528, [%rd88+8];
	and.b32  	%r6529, %r6528, %r33;
	or.b32  	%r6530, %r6527, %r6529;
	ld.const.u32 	%r6531, [%rd88+12];
	and.b32  	%r6532, %r6531, %r32;
	or.b32  	%r6533, %r6530, %r6532;
	ld.const.u32 	%r6534, [%rd88+16];
	and.b32  	%r6535, %r6534, %r39;
	or.b32  	%r6536, %r6533, %r6535;
	ld.const.u32 	%r6537, [%rd88+20];
	and.b32  	%r6538, %r6537, %r38;
	or.b32  	%r6539, %r6536, %r6538;
	ld.const.u32 	%r6540, [%rd88+24];
	and.b32  	%r6541, %r6540, %r37;
	or.b32  	%r6542, %r6539, %r6541;
	ld.const.u32 	%r6543, [%rd88+28];
	and.b32  	%r6544, %r6543, %r36;
	or.b32  	%r6545, %r6542, %r6544;
	shr.u32 	%r6546, %r6545, %r6522;
	and.b32  	%r6547, %r6546, 255;
	mov.u32 	%r6518, 24;
	// inline asm
	shf.r.wrap.b32 %r6487, %r37, %r36, %r6518;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11056, %r38, %r37, %r6518;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11055, %r39, %r38, %r6518;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r32, %r39, %r6518;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11061, %r33, %r32, %r6518;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r34, %r33, %r6518;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r35, %r34, %r6518;
	// inline asm
	mov.u32 	%r11057, 0;
	// inline asm
	shf.r.wrap.b32 %r6515, %r11057, %r35, %r6518;
	// inline asm
	or.b32  	%r11058, %r6515, %r6547;
	shl.b32 	%r6548, %r23, 3;
	and.b32  	%r6549, %r6548, 24;
	mov.u32 	%r6550, 1;
	shl.b32 	%r6551, %r6550, %r6549;
	add.s32 	%r1019, %r6551, -1;
	shr.u32 	%r6519, %r23, 2;
	setp.gt.s32	%p616, %r6519, 3;
	@%p616 bra 	BB1_770;

	setp.gt.s32	%p622, %r6519, 1;
	@%p622 bra 	BB1_767;

	setp.eq.s32	%p625, %r6519, 0;
	@%p625 bra 	BB1_782;
	bra.uni 	BB1_764;

BB1_782:
	and.b32  	%r11058, %r11058, %r1019;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11059, %r11054;
	bra.uni 	BB1_766;

BB1_496:
	setp.eq.s32	%p469, %r5203, 2;
	@%p469 bra 	BB1_512;
	bra.uni 	BB1_497;

BB1_512:
	and.b32  	%r5224, %r696, %r33;
	or.b32  	%r5225, %r5224, %r695;
	and.b32  	%r5226, %r11068, %r697;
	or.b32  	%r11060, %r5225, %r5226;
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11061, %r11069;
	bra.uni 	BB1_1015;

BB1_642:
	setp.gt.s32	%p562, %r41, 11;
	@%p562 bra 	BB1_650;

	setp.gt.s32	%p568, %r41, 9;
	@%p568 bra 	BB1_647;

	setp.eq.s32	%p571, %r41, 8;
	@%p571 bra 	BB1_702;
	bra.uni 	BB1_645;

BB1_702:
	mov.u32 	%r11056, 0;
	mov.u32 	%r11054, %r37;
	mov.u32 	%r11055, %r36;
	mov.u32 	%r11057, %r11056;
	mov.u32 	%r11058, %r33;
	mov.u32 	%r11059, %r32;
	mov.u32 	%r11060, %r39;
	mov.u32 	%r36, %r38;
	bra.uni 	BB1_712;

BB1_474:
	setp.gt.s32	%p448, %r5121, 5;
	@%p448 bra 	BB1_478;

	setp.eq.s32	%p451, %r5121, 4;
	@%p451 bra 	BB1_484;
	bra.uni 	BB1_476;

BB1_484:
	and.b32  	%r11054, %r669, %r39;
	mov.u32 	%r11055, 0;
	mov.u32 	%r11056, %r11055;
	mov.u32 	%r11057, %r11055;
	bra.uni 	BB1_482;

BB1_941:
	setp.gt.s32	%p740, %r7865, 11;
	@%p740 bra 	BB1_949;

	setp.gt.s32	%p746, %r7865, 9;
	@%p746 bra 	BB1_946;

	setp.eq.s32	%p749, %r7865, 8;
	@%p749 bra 	BB1_1001;
	bra.uni 	BB1_944;

BB1_1001:
	mov.u32 	%r11065, 0;
	mov.u32 	%r11069, %r33;
	mov.u32 	%r11068, %r32;
	mov.u32 	%r11067, %r39;
	mov.u32 	%r11066, %r38;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11063, %r35;
	mov.u32 	%r11062, %r34;
	bra.uni 	BB1_1008;

BB1_145:
	setp.gt.s32	%p131, %r41, 23;
	@%p131 bra 	BB1_161;

	setp.gt.s32	%p143, %r41, 19;
	@%p143 bra 	BB1_154;

	setp.gt.s32	%p149, %r41, 17;
	@%p149 bra 	BB1_151;

	setp.eq.s32	%p152, %r41, 16;
	@%p152 bra 	BB1_186;
	bra.uni 	BB1_149;

BB1_186:
	mov.u32 	%r11066, 0;
	mov.u32 	%r11062, %r35;
	mov.u32 	%r11063, %r34;
	mov.u32 	%r11064, %r33;
	mov.u32 	%r11065, %r32;
	bra.uni 	BB1_187;

BB1_221:
	setp.gt.s32	%p192, %r3164, 5;
	@%p192 bra 	BB1_225;

	setp.eq.s32	%p195, %r3164, 4;
	@%p195 bra 	BB1_230;
	bra.uni 	BB1_223;

BB1_230:
	and.b32  	%r11062, %r233, %r39;
	mov.u32 	%r11063, 0;
	mov.u32 	%r11064, %r11063;
	mov.u32 	%r11065, %r11063;
	bra.uni 	BB1_228;

BB1_504:
	setp.eq.s32	%p464, %r5203, 6;
	@%p464 bra 	BB1_507;
	bra.uni 	BB1_505;

BB1_507:
	and.b32  	%r5212, %r696, %r37;
	or.b32  	%r5213, %r5212, %r695;
	and.b32  	%r5214, %r11064, %r697;
	or.b32  	%r11056, %r5213, %r5214;
	bra.uni 	BB1_508;

BB1_674:
	setp.gt.s32	%p539, %r41, 27;
	@%p539 bra 	BB1_683;

	setp.gt.s32	%p545, %r41, 25;
	@%p545 bra 	BB1_679;

	setp.eq.s32	%p548, %r41, 24;
	@%p548 bra 	BB1_692;
	bra.uni 	BB1_677;

BB1_692:
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11058, %r37;
	mov.u32 	%r11059, %r36;
	bra.uni 	BB1_710;

BB1_972:
	setp.gt.s32	%p717, %r7865, 27;
	@%p717 bra 	BB1_981;

	setp.gt.s32	%p723, %r7865, 25;
	@%p723 bra 	BB1_977;

	setp.eq.s32	%p726, %r7865, 24;
	@%p726 bra 	BB1_990;
	bra.uni 	BB1_975;

BB1_990:
	mov.u32 	%r11069, 0;
	mov.u32 	%r11068, %r11069;
	mov.u32 	%r11067, %r35;
	mov.u32 	%r11066, %r34;
	bra.uni 	BB1_1007;

BB1_532:
	setp.gt.s32	%p501, %r43, 11;
	@%p501 bra 	BB1_540;

	setp.gt.s32	%p507, %r43, 9;
	@%p507 bra 	BB1_537;

	setp.eq.s32	%p510, %r43, 8;
	@%p510 bra 	BB1_596;
	bra.uni 	BB1_535;

BB1_596:
	mov.u32 	%r11062, %r37;
	mov.u32 	%r11063, %r36;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r33;
	mov.u32 	%r11067, %r32;
	mov.u32 	%r11068, %r39;
	mov.u32 	%r11069, %r38;
	bra.uni 	BB1_601;

BB1_917:
	setp.eq.s32	%p711, %r7686, 2;
	@%p711 bra 	BB1_929;
	bra.uni 	BB1_918;

BB1_929:
	// inline asm
	prmt.b32 %r11045, %r39, %r38, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11044, %r32, %r39, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11043, %r33, %r32, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11042, %r34, %r33, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11041, %r35, %r34, %r1297;
	// inline asm
	mov.u32 	%r11038, 0;
	// inline asm
	prmt.b32 %r11040, %r11038, %r35, %r1297;
	// inline asm
	mov.u32 	%r11039, %r11038;
	bra.uni 	BB1_931;

BB1_817:
	setp.gt.s32	%p632, %r6698, 23;
	@%p632 bra 	BB1_834;

	setp.gt.s32	%p644, %r6698, 19;
	@%p644 bra 	BB1_827;

	setp.gt.s32	%p650, %r6698, 17;
	@%p650 bra 	BB1_823;

	setp.eq.s32	%p653, %r6698, 16;
	@%p653 bra 	BB1_860;
	bra.uni 	BB1_821;

BB1_860:
	mov.u32 	%r11069, %r35;
	mov.u32 	%r11068, %r34;
	mov.u32 	%r11067, %r33;
	mov.u32 	%r11066, %r32;
	bra.uni 	BB1_854;

BB1_740:
	setp.gt.s32	%p595, %r6417, 5;
	@%p595 bra 	BB1_745;

	setp.eq.s32	%p598, %r6417, 4;
	@%p598 bra 	BB1_750;
	bra.uni 	BB1_742;

BB1_750:
	and.b32  	%r6428, %r974, %r39;
	and.b32  	%r6429, %r11062, %r975;
	or.b32  	%r11054, %r6429, %r6428;
	mov.u32 	%r11055, %r11063;
	bra.uni 	BB1_744;

BB1_348:
	setp.gt.s32	%p296, %r41, 11;
	@%p296 bra 	BB1_356;

	setp.gt.s32	%p302, %r41, 9;
	@%p302 bra 	BB1_353;

	setp.eq.s32	%p305, %r41, 8;
	@%p305 bra 	BB1_408;
	bra.uni 	BB1_351;

BB1_408:
	mov.u32 	%r10945, 0;
	mov.u32 	%r10941, %r33;
	mov.u32 	%r10942, %r32;
	mov.u32 	%r10943, %r39;
	mov.u32 	%r39, %r38;
	mov.u32 	%r10946, %r10945;
	mov.u32 	%r10947, %r35;
	mov.u32 	%r35, %r34;
	bra.uni 	BB1_416;

BB1_566:
	setp.gt.s32	%p478, %r43, 27;
	@%p478 bra 	BB1_576;

	setp.gt.s32	%p484, %r43, 25;
	@%p484 bra 	BB1_571;

	setp.eq.s32	%p487, %r43, 24;
	@%p487 bra 	BB1_588;
	bra.uni 	BB1_569;

BB1_588:
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r37;
	mov.u32 	%r11067, %r36;
	bra.uni 	BB1_586;

BB1_924:
	setp.eq.s32	%p706, %r7686, 6;
	@%p706 bra 	BB1_927;
	bra.uni 	BB1_925;

BB1_927:
	// inline asm
	prmt.b32 %r11045, %r35, %r34, %r1297;
	// inline asm
	mov.u32 	%r11038, 0;
	// inline asm
	prmt.b32 %r11044, %r11038, %r35, %r1297;
	// inline asm
	mov.u32 	%r11039, %r11038;
	mov.u32 	%r11040, %r11038;
	mov.u32 	%r11041, %r11038;
	mov.u32 	%r11042, %r11038;
	mov.u32 	%r11043, %r11038;
	bra.uni 	BB1_931;

BB1_379:
	setp.gt.s32	%p273, %r41, 27;
	@%p273 bra 	BB1_388;

	setp.gt.s32	%p279, %r41, 25;
	@%p279 bra 	BB1_384;

	setp.eq.s32	%p282, %r41, 24;
	@%p282 bra 	BB1_397;
	bra.uni 	BB1_382;

BB1_397:
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r35;
	mov.u32 	%r39, %r34;
	bra.uni 	BB1_415;

BB1_770:
	setp.gt.s32	%p617, %r6519, 5;
	@%p617 bra 	BB1_774;

	setp.eq.s32	%p620, %r6519, 4;
	@%p620 bra 	BB1_779;
	bra.uni 	BB1_772;

BB1_779:
	and.b32  	%r11054, %r11054, %r1019;
	mov.u32 	%r11055, 0;
	mov.u32 	%r11056, %r11055;
	mov.u32 	%r11057, %r11055;
	bra.uni 	BB1_1014;

BB1_493:
	setp.eq.s32	%p472, %r5203, 1;
	@%p472 bra 	BB1_494;
	bra.uni 	BB1_111;

BB1_494:
	and.b32  	%r5227, %r696, %r34;
	or.b32  	%r5228, %r5227, %r695;
	and.b32  	%r5229, %r11067, %r697;
	or.b32  	%r11059, %r5228, %r5229;
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11058, %r35;

BB1_495:
	mov.u32 	%r11060, %r11068;
	mov.u32 	%r11061, %r11069;
	bra.uni 	BB1_1015;

BB1_635:
	setp.gt.s32	%p574, %r41, 5;
	@%p574 bra 	BB1_639;

	setp.eq.s32	%p577, %r41, 4;
	@%p577 bra 	BB1_704;
	bra.uni 	BB1_637;

BB1_704:
	mov.u32 	%r11057, 0;
	mov.u32 	%r11054, %r38;
	mov.u32 	%r11055, %r37;
	mov.u32 	%r11056, %r36;
	mov.u32 	%r11058, %r34;
	mov.u32 	%r11059, %r33;
	mov.u32 	%r11060, %r32;
	mov.u32 	%r36, %r39;
	bra.uni 	BB1_712;

BB1_471:
	setp.eq.s32	%p454, %r5121, 2;
	@%p454 bra 	BB1_485;
	bra.uni 	BB1_472;

BB1_485:
	and.b32  	%r11060, %r669, %r33;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	bra.uni 	BB1_486;

BB1_934:
	setp.gt.s32	%p752, %r7865, 5;
	@%p752 bra 	BB1_938;

	setp.eq.s32	%p755, %r7865, 4;
	@%p755 bra 	BB1_1003;
	bra.uni 	BB1_936;

BB1_1003:
	mov.u32 	%r11065, 0;
	mov.u32 	%r11069, %r32;
	mov.u32 	%r11068, %r39;
	mov.u32 	%r11067, %r38;
	mov.u32 	%r11066, %r37;
	mov.u32 	%r11064, %r35;
	mov.u32 	%r11063, %r34;
	mov.u32 	%r11062, %r33;
	bra.uni 	BB1_1008;

BB1_129:
	setp.gt.s32	%p155, %r41, 11;
	@%p155 bra 	BB1_137;

	setp.gt.s32	%p161, %r41, 9;
	@%p161 bra 	BB1_134;

	setp.eq.s32	%p164, %r41, 8;
	@%p164 bra 	BB1_191;
	bra.uni 	BB1_132;

BB1_191:
	mov.u32 	%r11066, 0;
	mov.u32 	%r11062, %r33;
	mov.u32 	%r11063, %r32;
	mov.u32 	%r11064, %r39;
	mov.u32 	%r11065, %r38;
	mov.u32 	%r11067, %r11066;
	mov.u32 	%r11068, %r35;
	mov.u32 	%r11069, %r34;
	bra.uni 	BB1_195;

BB1_218:
	setp.eq.s32	%p198, %r3164, 2;
	@%p198 bra 	BB1_231;
	bra.uni 	BB1_219;

BB1_231:
	and.b32  	%r11068, %r233, %r33;
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	bra.uni 	BB1_232;

BB1_501:
	setp.eq.s32	%p467, %r5203, 5;
	@%p467 bra 	BB1_502;
	bra.uni 	BB1_111;

BB1_502:
	and.b32  	%r5215, %r696, %r38;
	or.b32  	%r5216, %r5215, %r695;
	and.b32  	%r5217, %r11063, %r697;
	or.b32  	%r11055, %r5216, %r5217;
	mov.u32 	%r11054, %r39;

BB1_503:
	mov.u32 	%r11056, %r11064;
	bra.uni 	BB1_509;

BB1_666:
	setp.gt.s32	%p551, %r41, 21;
	@%p551 bra 	BB1_670;

	setp.eq.s32	%p554, %r41, 20;
	@%p554 bra 	BB1_694;
	bra.uni 	BB1_668;

BB1_694:
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11058, %r38;
	mov.u32 	%r11059, %r37;
	mov.u32 	%r11060, %r36;
	bra.uni 	BB1_711;

BB1_965:
	setp.gt.s32	%p729, %r7865, 21;
	@%p729 bra 	BB1_969;

	setp.eq.s32	%p732, %r7865, 20;
	@%p732 bra 	BB1_992;
	bra.uni 	BB1_967;

BB1_992:
	mov.u32 	%r11069, 0;
	mov.u32 	%r11068, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11066, %r33;
	bra.uni 	BB1_1007;

BB1_497:
	setp.eq.s32	%p470, %r5203, 3;
	@%p470 bra 	BB1_498;
	bra.uni 	BB1_111;

BB1_498:
	and.b32  	%r5221, %r696, %r32;
	or.b32  	%r5222, %r5221, %r695;
	and.b32  	%r5223, %r11069, %r697;
	or.b32  	%r11061, %r5222, %r5223;
	bra.uni 	BB1_739;

BB1_650:
	setp.gt.s32	%p563, %r41, 13;
	@%p563 bra 	BB1_654;

	setp.eq.s32	%p566, %r41, 12;
	@%p566 bra 	BB1_700;
	bra.uni 	BB1_652;

BB1_700:
	mov.u32 	%r11055, 0;
	mov.u32 	%r11054, %r36;
	mov.u32 	%r11056, %r11055;
	mov.u32 	%r11057, %r11055;
	mov.u32 	%r11058, %r32;
	mov.u32 	%r11059, %r39;
	mov.u32 	%r11060, %r38;
	mov.u32 	%r36, %r37;
	bra.uni 	BB1_712;

BB1_478:
	setp.eq.s32	%p449, %r5121, 6;
	@%p449 bra 	BB1_483;
	bra.uni 	BB1_479;

BB1_483:
	and.b32  	%r11056, %r669, %r37;
	mov.u32 	%r11057, 0;
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	bra.uni 	BB1_482;

BB1_949:
	setp.gt.s32	%p741, %r7865, 13;
	@%p741 bra 	BB1_953;

	setp.eq.s32	%p744, %r7865, 12;
	@%p744 bra 	BB1_999;
	bra.uni 	BB1_951;

BB1_999:
	mov.u32 	%r11065, 0;
	mov.u32 	%r11069, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11067, %r32;
	mov.u32 	%r11066, %r39;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11062, %r35;
	bra.uni 	BB1_1008;

BB1_161:
	setp.gt.s32	%p132, %r41, 27;
	@%p132 bra 	BB1_170;

	setp.gt.s32	%p138, %r41, 25;
	@%p138 bra 	BB1_166;

	setp.eq.s32	%p141, %r41, 24;
	@%p141 bra 	BB1_182;
	bra.uni 	BB1_164;

BB1_182:
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r35;
	mov.u32 	%r11065, %r34;
	bra.uni 	BB1_180;

BB1_225:
	setp.eq.s32	%p193, %r3164, 6;
	@%p193 bra 	BB1_229;
	bra.uni 	BB1_226;

BB1_229:
	and.b32  	%r11064, %r233, %r37;
	mov.u32 	%r11065, 0;
	mov.u32 	%r11062, %r39;
	mov.u32 	%r11063, %r38;
	bra.uni 	BB1_228;

BB1_505:
	setp.ne.s32	%p465, %r5203, 7;
	@%p465 bra 	BB1_111;

	and.b32  	%r5209, %r696, %r36;
	or.b32  	%r5210, %r5209, %r695;
	and.b32  	%r5211, %r11065, %r697;
	or.b32  	%r11057, %r5210, %r5211;
	bra.uni 	BB1_748;

BB1_683:
	setp.gt.s32	%p540, %r41, 29;
	@%p540 bra 	BB1_687;

	setp.eq.s32	%p543, %r41, 28;
	@%p543 bra 	BB1_690;
	bra.uni 	BB1_685;

BB1_690:
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11058, %r36;
	bra.uni 	BB1_709;

BB1_981:
	setp.gt.s32	%p718, %r7865, 29;
	@%p718 bra 	BB1_985;

	setp.eq.s32	%p721, %r7865, 28;
	@%p721 bra 	BB1_988;
	bra.uni 	BB1_983;

BB1_988:
	mov.u32 	%r11069, 0;
	mov.u32 	%r11068, %r11069;
	mov.u32 	%r11067, %r11069;
	mov.u32 	%r11066, %r35;
	bra.uni 	BB1_1007;

BB1_525:
	setp.gt.s32	%p513, %r43, 5;
	@%p513 bra 	BB1_529;

	setp.eq.s32	%p516, %r43, 4;
	@%p516 bra 	BB1_598;
	bra.uni 	BB1_527;

BB1_598:
	mov.u32 	%r11062, %r38;
	mov.u32 	%r11063, %r37;
	mov.u32 	%r11064, %r36;
	mov.u32 	%r11066, %r34;
	mov.u32 	%r11067, %r33;
	mov.u32 	%r11068, %r32;
	mov.u32 	%r11069, %r39;
	bra.uni 	BB1_601;

BB1_915:
	setp.eq.s32	%p714, %r7686, 1;
	mov.u32 	%r11039, %r11038;
	mov.u32 	%r11040, %r11038;
	mov.u32 	%r11041, %r11038;
	mov.u32 	%r11042, %r11038;
	mov.u32 	%r11043, %r11038;
	mov.u32 	%r11044, %r11038;
	mov.u32 	%r11045, %r11038;
	@%p714 bra 	BB1_916;
	bra.uni 	BB1_931;

BB1_916:
	// inline asm
	prmt.b32 %r11045, %r38, %r37, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11044, %r39, %r38, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11043, %r32, %r39, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11042, %r33, %r32, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11041, %r34, %r33, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11040, %r35, %r34, %r1297;
	// inline asm
	mov.u32 	%r11038, 0;
	// inline asm
	prmt.b32 %r11039, %r11038, %r35, %r1297;
	// inline asm
	bra.uni 	BB1_931;

BB1_801:
	setp.gt.s32	%p656, %r6698, 11;
	@%p656 bra 	BB1_809;

	setp.gt.s32	%p662, %r6698, 9;
	@%p662 bra 	BB1_806;

	setp.eq.s32	%p665, %r6698, 8;
	@%p665 bra 	BB1_864;
	bra.uni 	BB1_804;

BB1_864:
	mov.u32 	%r11069, %r33;
	mov.u32 	%r11068, %r32;
	mov.u32 	%r11067, %r39;
	mov.u32 	%r11066, %r38;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r35;
	mov.u32 	%r11062, %r34;
	bra.uni 	BB1_868;

BB1_445:
	setp.eq.s32	%p363, %r620, 2;
	mov.u32 	%r11070, 0;
	@%p363 bra 	BB1_446;
	bra.uni 	BB1_447;

BB1_446:
	mov.u32 	%r10957, %r11070;
	bra.uni 	BB1_449;

BB1_736:
	setp.eq.s32	%p601, %r6417, 2;
	@%p601 bra 	BB1_751;
	bra.uni 	BB1_737;

BB1_751:
	and.b32  	%r6432, %r974, %r33;
	and.b32  	%r6433, %r11068, %r975;
	or.b32  	%r11060, %r6433, %r6432;
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	bra.uni 	BB1_752;

BB1_341:
	setp.gt.s32	%p308, %r41, 5;
	@%p308 bra 	BB1_345;

	setp.eq.s32	%p311, %r41, 4;
	@%p311 bra 	BB1_410;
	bra.uni 	BB1_343;

BB1_410:
	mov.u32 	%r10945, 0;
	mov.u32 	%r10941, %r32;
	mov.u32 	%r10942, %r39;
	mov.u32 	%r10943, %r38;
	mov.u32 	%r39, %r37;
	mov.u32 	%r10946, %r35;
	mov.u32 	%r10947, %r34;
	mov.u32 	%r35, %r33;
	bra.uni 	BB1_416;

BB1_558:
	setp.gt.s32	%p490, %r43, 21;
	@%p490 bra 	BB1_562;

	setp.eq.s32	%p493, %r43, 20;
	@%p493 bra 	BB1_590;
	bra.uni 	BB1_560;

BB1_590:
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r38;
	mov.u32 	%r11067, %r37;
	mov.u32 	%r11068, %r36;
	mov.u32 	%r11069, %r11065;
	bra.uni 	BB1_601;

BB1_922:
	setp.eq.s32	%p709, %r7686, 5;
	mov.u32 	%r11039, %r11038;
	mov.u32 	%r11040, %r11038;
	mov.u32 	%r11041, %r11038;
	mov.u32 	%r11042, %r11038;
	mov.u32 	%r11043, %r11038;
	mov.u32 	%r11044, %r11038;
	mov.u32 	%r11045, %r11038;
	@%p709 bra 	BB1_923;
	bra.uni 	BB1_931;

BB1_923:
	// inline asm
	prmt.b32 %r11045, %r34, %r33, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11044, %r35, %r34, %r1297;
	// inline asm
	mov.u32 	%r11038, 0;
	// inline asm
	prmt.b32 %r11043, %r11038, %r35, %r1297;
	// inline asm
	mov.u32 	%r11039, %r11038;
	mov.u32 	%r11040, %r11038;
	mov.u32 	%r11041, %r11038;
	mov.u32 	%r11042, %r11038;
	bra.uni 	BB1_931;

BB1_372:
	setp.gt.s32	%p285, %r41, 21;
	@%p285 bra 	BB1_376;

	setp.eq.s32	%p288, %r41, 20;
	@%p288 bra 	BB1_399;
	bra.uni 	BB1_374;

BB1_399:
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r35;
	mov.u32 	%r10943, %r34;
	mov.u32 	%r39, %r33;
	bra.uni 	BB1_415;

BB1_767:
	setp.eq.s32	%p623, %r6519, 2;
	@%p623 bra 	BB1_780;
	bra.uni 	BB1_768;

BB1_780:
	and.b32  	%r11060, %r11060, %r1019;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	bra.uni 	BB1_781;

BB1_540:
	setp.gt.s32	%p502, %r43, 13;
	@%p502 bra 	BB1_544;

	setp.eq.s32	%p505, %r43, 12;
	@%p505 bra 	BB1_594;
	bra.uni 	BB1_542;

BB1_594:
	mov.u32 	%r11062, %r36;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r32;
	mov.u32 	%r11067, %r39;
	mov.u32 	%r11068, %r38;
	mov.u32 	%r11069, %r37;
	bra.uni 	BB1_601;

BB1_918:
	setp.eq.s32	%p712, %r7686, 3;
	mov.u32 	%r11039, %r11038;
	mov.u32 	%r11040, %r11038;
	mov.u32 	%r11041, %r11038;
	mov.u32 	%r11042, %r11038;
	mov.u32 	%r11043, %r11038;
	mov.u32 	%r11044, %r11038;
	mov.u32 	%r11045, %r11038;
	@%p712 bra 	BB1_919;
	bra.uni 	BB1_931;

BB1_919:
	// inline asm
	prmt.b32 %r11045, %r32, %r39, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11044, %r33, %r32, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11043, %r34, %r33, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11042, %r35, %r34, %r1297;
	// inline asm
	mov.u32 	%r11038, 0;
	// inline asm
	prmt.b32 %r11041, %r11038, %r35, %r1297;
	// inline asm
	mov.u32 	%r11039, %r11038;
	mov.u32 	%r11040, %r11038;
	bra.uni 	BB1_931;

BB1_834:
	setp.gt.s32	%p633, %r6698, 27;
	@%p633 bra 	BB1_844;

	setp.gt.s32	%p639, %r6698, 25;
	@%p639 bra 	BB1_839;

	setp.eq.s32	%p642, %r6698, 24;
	@%p642 bra 	BB1_856;
	bra.uni 	BB1_837;

BB1_856:
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r35;
	mov.u32 	%r11066, %r34;
	bra.uni 	BB1_854;

BB1_745:
	setp.eq.s32	%p596, %r6417, 6;
	@%p596 bra 	BB1_749;
	bra.uni 	BB1_746;

BB1_749:
	and.b32  	%r6424, %r974, %r37;
	and.b32  	%r6425, %r11064, %r975;
	or.b32  	%r11056, %r6425, %r6424;

BB1_508:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	bra.uni 	BB1_509;

BB1_356:
	setp.gt.s32	%p297, %r41, 13;
	@%p297 bra 	BB1_360;

	setp.eq.s32	%p300, %r41, 12;
	@%p300 bra 	BB1_405;
	bra.uni 	BB1_358;

BB1_405:
	mov.u32 	%r10945, 0;
	mov.u32 	%r10941, %r34;
	mov.u32 	%r10942, %r33;
	mov.u32 	%r10943, %r32;
	bra.uni 	BB1_406;

BB1_576:
	setp.gt.s32	%p479, %r43, 29;
	@%p479 bra 	BB1_580;

	setp.eq.s32	%p482, %r43, 28;
	@%p482 bra 	BB1_585;
	bra.uni 	BB1_578;

BB1_585:
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r36;
	mov.u32 	%r11067, %r11065;

BB1_586:
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	bra.uni 	BB1_601;

BB1_925:
	setp.ne.s32	%p707, %r7686, 7;
	mov.u32 	%r11039, %r11038;
	mov.u32 	%r11040, %r11038;
	mov.u32 	%r11041, %r11038;
	mov.u32 	%r11042, %r11038;
	mov.u32 	%r11043, %r11038;
	mov.u32 	%r11044, %r11038;
	mov.u32 	%r11045, %r11038;
	@%p707 bra 	BB1_931;

	mov.u32 	%r11038, 0;
	// inline asm
	prmt.b32 %r11045, %r11038, %r35, %r1297;
	// inline asm
	mov.u32 	%r11039, %r11038;
	mov.u32 	%r11040, %r11038;
	mov.u32 	%r11041, %r11038;
	mov.u32 	%r11042, %r11038;
	mov.u32 	%r11043, %r11038;
	mov.u32 	%r11044, %r11038;

BB1_931:
	or.b32  	%r11058, %r11038, %r35;
	or.b32  	%r11059, %r11039, %r34;
	or.b32  	%r11060, %r11040, %r33;
	or.b32  	%r11061, %r11041, %r32;
	or.b32  	%r11054, %r11042, %r39;
	or.b32  	%r11055, %r11043, %r38;
	or.b32  	%r11056, %r11044, %r37;
	or.b32  	%r11057, %r11045, %r36;
	bra.uni 	BB1_1015;

BB1_388:
	setp.gt.s32	%p274, %r41, 29;
	@%p274 bra 	BB1_392;

	setp.eq.s32	%p277, %r41, 28;
	@%p277 bra 	BB1_395;
	bra.uni 	BB1_390;

BB1_395:
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r39, %r35;
	bra.uni 	BB1_415;

BB1_774:
	setp.eq.s32	%p618, %r6519, 6;
	@%p618 bra 	BB1_778;
	bra.uni 	BB1_775;

BB1_778:
	and.b32  	%r11056, %r11056, %r1019;
	bra.uni 	BB1_1014;

BB1_468:
	setp.eq.s32	%p457, %r5121, 1;
	@%p457 bra 	BB1_469;
	bra.uni 	BB1_480;

BB1_469:
	and.b32  	%r11059, %r669, %r34;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11058, %r35;

BB1_470:
	mov.u32 	%r11060, %r11054;

BB1_486:
	mov.u32 	%r11061, %r11054;
	mov.u32 	%r11070, %r41;
	bra.uni 	BB1_1015;

BB1_122:
	setp.gt.s32	%p167, %r41, 5;
	@%p167 bra 	BB1_126;

	setp.eq.s32	%p170, %r41, 4;
	@%p170 bra 	BB1_193;
	bra.uni 	BB1_124;

BB1_193:
	mov.u32 	%r11066, 0;
	mov.u32 	%r11062, %r32;
	mov.u32 	%r11063, %r39;
	mov.u32 	%r11064, %r38;
	mov.u32 	%r11065, %r37;
	mov.u32 	%r11067, %r35;
	mov.u32 	%r11068, %r34;
	mov.u32 	%r11069, %r33;
	bra.uni 	BB1_195;

BB1_216:
	setp.eq.s32	%p201, %r3164, 1;
	mov.u32 	%r11062, %r39;
	mov.u32 	%r11063, %r38;
	mov.u32 	%r11064, %r37;
	mov.u32 	%r11065, %r36;
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11069, %r32;
	@%p201 bra 	BB1_217;
	bra.uni 	BB1_233;

BB1_217:
	and.b32  	%r11067, %r233, %r34;
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	mov.u32 	%r11066, %r35;

BB1_104:
	mov.u32 	%r11068, %r11062;

BB1_232:
	mov.u32 	%r11069, %r11062;
	bra.uni 	BB1_233;

BB1_663:
	setp.eq.s32	%p557, %r41, 18;
	@%p557 bra 	BB1_697;
	bra.uni 	BB1_664;

BB1_697:
	mov.u32 	%r5976, 16;
	// inline asm
	shf.r.wrap.b32 %r11058, %r39, %r38, %r5976;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r38, %r37, %r5976;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r37, %r36, %r5976;
	// inline asm
	mov.u32 	%r11054, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r36, %r11054, %r5976;
	// inline asm
	bra.uni 	BB1_696;

BB1_962:
	setp.eq.s32	%p735, %r7865, 18;
	@%p735 bra 	BB1_993;
	bra.uni 	BB1_963;

BB1_993:
	mov.u32 	%r8035, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r33, %r32, %r8035;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r34, %r33, %r8035;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r35, %r34, %r8035;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r11065, %r35, %r8035;
	// inline asm
	bra.uni 	BB1_995;

BB1_647:
	setp.eq.s32	%p569, %r41, 10;
	@%p569 bra 	BB1_701;
	bra.uni 	BB1_648;

BB1_701:
	mov.u32 	%r6126, 16;
	// inline asm
	shf.r.wrap.b32 %r11058, %r33, %r32, %r6126;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r32, %r39, %r6126;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r39, %r38, %r6126;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6115, %r38, %r37, %r6126;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r37, %r36, %r6126;
	// inline asm
	mov.u32 	%r11056, 0;
	// inline asm
	shf.r.wrap.b32 %r11055, %r36, %r11056, %r6126;
	// inline asm
	mov.u32 	%r11057, %r11056;
	mov.u32 	%r36, %r6115;
	bra.uni 	BB1_712;

BB1_476:
	setp.eq.s32	%p452, %r5121, 5;
	@%p452 bra 	BB1_477;
	bra.uni 	BB1_480;

BB1_477:
	and.b32  	%r11055, %r669, %r38;
	mov.u32 	%r11056, 0;
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11057, %r11056;
	bra.uni 	BB1_482;

BB1_946:
	setp.eq.s32	%p747, %r7865, 10;
	@%p747 bra 	BB1_1000;
	bra.uni 	BB1_947;

BB1_1000:
	mov.u32 	%r8185, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r39, %r38, %r8185;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r32, %r39, %r8185;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r33, %r32, %r8185;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r34, %r33, %r8185;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r35, %r34, %r8185;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r11065, %r35, %r8185;
	// inline asm
	mov.u32 	%r11064, %r11065;
	bra.uni 	BB1_1008;

BB1_154:
	setp.gt.s32	%p144, %r41, 21;
	@%p144 bra 	BB1_158;

	setp.eq.s32	%p147, %r41, 20;
	@%p147 bra 	BB1_184;
	bra.uni 	BB1_156;

BB1_184:
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r35;
	mov.u32 	%r11064, %r34;
	mov.u32 	%r11065, %r33;
	bra.uni 	BB1_180;

BB1_223:
	setp.eq.s32	%p196, %r3164, 5;
	mov.u32 	%r11062, %r39;
	mov.u32 	%r11063, %r38;
	mov.u32 	%r11064, %r37;
	mov.u32 	%r11065, %r36;
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11069, %r32;
	@%p196 bra 	BB1_224;
	bra.uni 	BB1_233;

BB1_224:
	and.b32  	%r11063, %r233, %r38;
	mov.u32 	%r11064, 0;
	mov.u32 	%r11062, %r39;
	mov.u32 	%r11065, %r11064;
	bra.uni 	BB1_228;

BB1_679:
	setp.eq.s32	%p546, %r41, 26;
	@%p546 bra 	BB1_691;
	bra.uni 	BB1_680;

BB1_691:
	mov.u32 	%r5858, 16;
	// inline asm
	shf.r.wrap.b32 %r11058, %r37, %r36, %r5858;
	// inline asm
	mov.u32 	%r11054, 0;
	// inline asm
	shf.r.wrap.b32 %r11059, %r36, %r11054, %r5858;
	// inline asm
	bra.uni 	BB1_682;

BB1_977:
	setp.eq.s32	%p724, %r7865, 26;
	@%p724 bra 	BB1_989;
	bra.uni 	BB1_978;

BB1_989:
	mov.u32 	%r7917, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r35, %r34, %r7917;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r11069, %r35, %r7917;
	// inline asm
	bra.uni 	BB1_980;

BB1_639:
	setp.eq.s32	%p575, %r41, 6;
	@%p575 bra 	BB1_703;
	bra.uni 	BB1_640;

BB1_703:
	mov.u32 	%r6213, 16;
	// inline asm
	shf.r.wrap.b32 %r11058, %r34, %r33, %r6213;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r33, %r32, %r6213;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r32, %r39, %r6213;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6198, %r39, %r38, %r6213;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r38, %r37, %r6213;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11055, %r37, %r36, %r6213;
	// inline asm
	mov.u32 	%r11057, 0;
	// inline asm
	shf.r.wrap.b32 %r11056, %r36, %r11057, %r6213;
	// inline asm
	mov.u32 	%r36, %r6198;
	bra.uni 	BB1_712;

BB1_472:
	setp.eq.s32	%p455, %r5121, 3;
	@%p455 bra 	BB1_473;
	bra.uni 	BB1_480;

BB1_473:
	and.b32  	%r11061, %r669, %r32;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11070, %r41;
	bra.uni 	BB1_1015;

BB1_938:
	setp.eq.s32	%p753, %r7865, 6;
	@%p753 bra 	BB1_1002;
	bra.uni 	BB1_939;

BB1_1002:
	mov.u32 	%r8272, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r38, %r37, %r8272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r39, %r38, %r8272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r32, %r39, %r8272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r33, %r32, %r8272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r34, %r33, %r8272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r35, %r34, %r8272;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r11065, %r35, %r8272;
	// inline asm
	bra.uni 	BB1_1008;

BB1_137:
	setp.gt.s32	%p156, %r41, 13;
	@%p156 bra 	BB1_141;

	setp.eq.s32	%p159, %r41, 12;
	@%p159 bra 	BB1_189;
	bra.uni 	BB1_139;

BB1_189:
	mov.u32 	%r11066, 0;
	mov.u32 	%r11062, %r34;
	mov.u32 	%r11063, %r33;
	mov.u32 	%r11064, %r32;
	mov.u32 	%r11065, %r39;
	mov.u32 	%r11067, %r11066;
	mov.u32 	%r11068, %r11066;
	mov.u32 	%r11069, %r35;
	bra.uni 	BB1_195;

BB1_219:
	setp.eq.s32	%p199, %r3164, 3;
	mov.u32 	%r11062, %r39;
	mov.u32 	%r11063, %r38;
	mov.u32 	%r11064, %r37;
	mov.u32 	%r11065, %r36;
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11069, %r32;
	@%p199 bra 	BB1_220;
	bra.uni 	BB1_233;

BB1_220:
	and.b32  	%r11069, %r233, %r32;
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11068, %r33;
	bra.uni 	BB1_233;

BB1_670:
	setp.eq.s32	%p552, %r41, 22;
	@%p552 bra 	BB1_693;
	bra.uni 	BB1_671;

BB1_693:
	mov.u32 	%r5913, 16;
	// inline asm
	shf.r.wrap.b32 %r11058, %r38, %r37, %r5913;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r37, %r36, %r5913;
	// inline asm
	mov.u32 	%r11054, 0;
	// inline asm
	shf.r.wrap.b32 %r11060, %r36, %r11054, %r5913;
	// inline asm
	bra.uni 	BB1_673;

BB1_969:
	setp.eq.s32	%p730, %r7865, 22;
	@%p730 bra 	BB1_991;
	bra.uni 	BB1_970;

BB1_991:
	mov.u32 	%r7972, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r34, %r33, %r7972;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r35, %r34, %r7972;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r11069, %r35, %r7972;
	// inline asm
	bra.uni 	BB1_1007;

BB1_654:
	setp.eq.s32	%p564, %r41, 14;
	@%p564 bra 	BB1_699;
	bra.uni 	BB1_655;

BB1_699:
	mov.u32 	%r6047, 16;
	// inline asm
	shf.r.wrap.b32 %r11058, %r32, %r39, %r6047;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r39, %r38, %r6047;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r38, %r37, %r6047;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6040, %r37, %r36, %r6047;
	// inline asm
	mov.u32 	%r11055, 0;
	// inline asm
	shf.r.wrap.b32 %r11054, %r36, %r11055, %r6047;
	// inline asm
	mov.u32 	%r11056, %r11055;
	mov.u32 	%r11057, %r11055;
	mov.u32 	%r36, %r6040;
	bra.uni 	BB1_712;

BB1_479:
	setp.ne.s32	%p450, %r5121, 7;
	@%p450 bra 	BB1_480;

	and.b32  	%r11057, %r669, %r36;
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	bra.uni 	BB1_482;

BB1_480:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;

BB1_482:
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11061, %r32;
	mov.u32 	%r11070, %r41;
	bra.uni 	BB1_1015;

BB1_953:
	setp.eq.s32	%p742, %r7865, 14;
	@%p742 bra 	BB1_998;
	bra.uni 	BB1_954;

BB1_998:
	mov.u32 	%r8106, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r32, %r39, %r8106;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r33, %r32, %r8106;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r34, %r33, %r8106;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r35, %r34, %r8106;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r11065, %r35, %r8106;
	// inline asm
	bra.uni 	BB1_997;

BB1_170:
	setp.gt.s32	%p133, %r41, 29;
	@%p133 bra 	BB1_174;

	setp.eq.s32	%p136, %r41, 28;
	@%p136 bra 	BB1_179;
	bra.uni 	BB1_172;

BB1_179:
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r35;
	bra.uni 	BB1_180;

BB1_226:
	setp.ne.s32	%p194, %r3164, 7;
	mov.u32 	%r11062, %r39;
	mov.u32 	%r11063, %r38;
	mov.u32 	%r11064, %r37;
	mov.u32 	%r11065, %r36;
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11069, %r32;
	@%p194 bra 	BB1_233;

	and.b32  	%r11065, %r233, %r36;
	mov.u32 	%r11062, %r39;
	mov.u32 	%r11063, %r38;
	mov.u32 	%r11064, %r37;

BB1_228:
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11069, %r32;

BB1_233:
	setp.gt.s32	%p202, %r41, 15;
	@%p202 bra 	BB1_262;

	setp.gt.s32	%p226, %r41, 7;
	@%p226 bra 	BB1_247;

	setp.gt.s32	%p238, %r41, 3;
	@%p238 bra 	BB1_240;

	setp.eq.s32	%p244, %r41, 1;
	@%p244 bra 	BB1_311;

	setp.eq.s32	%p245, %r41, 2;
	@%p245 bra 	BB1_310;
	bra.uni 	BB1_238;

BB1_310:
	mov.u32 	%r3697, 16;
	// inline asm
	shf.r.wrap.b32 %r3666, %r37, %r36, %r3697;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r38, %r37, %r3697;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r39, %r38, %r3697;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r32, %r39, %r3697;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3682, %r33, %r32, %r3697;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10929, %r34, %r33, %r3697;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10928, %r35, %r34, %r3697;
	// inline asm
	mov.u32 	%r3695, 0;
	// inline asm
	shf.r.wrap.b32 %r10927, %r3695, %r35, %r3697;
	// inline asm
	mov.u32 	%r39, %r3666;
	mov.u32 	%r35, %r3682;
	bra.uni 	BB1_315;

BB1_262:
	setp.gt.s32	%p203, %r41, 23;
	@%p203 bra 	BB1_278;

	setp.gt.s32	%p215, %r41, 19;
	@%p215 bra 	BB1_271;

	setp.gt.s32	%p221, %r41, 17;
	@%p221 bra 	BB1_268;

	setp.eq.s32	%p224, %r41, 16;
	@%p224 bra 	BB1_300;
	bra.uni 	BB1_266;

BB1_300:
	mov.u32 	%r10927, 0;
	mov.u32 	%r10923, %r35;
	mov.u32 	%r10924, %r34;
	mov.u32 	%r10925, %r33;
	mov.u32 	%r39, %r32;
	bra.uni 	BB1_301;

BB1_247:
	setp.gt.s32	%p227, %r41, 11;
	@%p227 bra 	BB1_255;

	setp.gt.s32	%p233, %r41, 9;
	@%p233 bra 	BB1_252;

	setp.eq.s32	%p236, %r41, 8;
	@%p236 bra 	BB1_307;
	bra.uni 	BB1_250;

BB1_307:
	mov.u32 	%r10927, 0;
	mov.u32 	%r10923, %r33;
	mov.u32 	%r10924, %r32;
	mov.u32 	%r10925, %r39;
	mov.u32 	%r39, %r38;
	mov.u32 	%r10928, %r10927;
	mov.u32 	%r10929, %r35;
	mov.u32 	%r35, %r34;
	bra.uni 	BB1_315;

BB1_278:
	setp.gt.s32	%p204, %r41, 27;
	@%p204 bra 	BB1_287;

	setp.gt.s32	%p210, %r41, 25;
	@%p210 bra 	BB1_283;

	setp.eq.s32	%p213, %r41, 24;
	@%p213 bra 	BB1_296;
	bra.uni 	BB1_281;

BB1_296:
	mov.u32 	%r10923, 0;
	mov.u32 	%r10924, %r10923;
	mov.u32 	%r10925, %r35;
	mov.u32 	%r39, %r34;
	bra.uni 	BB1_314;

BB1_687:
	setp.eq.s32	%p541, %r41, 31;
	@%p541 bra 	BB1_707;
	bra.uni 	BB1_688;

BB1_707:
	mov.u32 	%r11054, 0;
	mov.u32 	%r6344, 24;
	// inline asm
	shf.r.wrap.b32 %r11058, %r36, %r11054, %r6344;
	// inline asm
	bra.uni 	BB1_708;

BB1_985:
	setp.eq.s32	%p719, %r7865, 31;
	@%p719 bra 	BB1_1005;
	bra.uni 	BB1_986;

BB1_1005:
	mov.u32 	%r11069, 0;
	mov.u32 	%r8403, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r11069, %r35, %r8403;
	// inline asm
	bra.uni 	BB1_1006;

BB1_240:
	setp.gt.s32	%p239, %r41, 5;
	@%p239 bra 	BB1_244;

	setp.eq.s32	%p242, %r41, 4;
	@%p242 bra 	BB1_309;
	bra.uni 	BB1_242;

BB1_309:
	mov.u32 	%r10927, 0;
	mov.u32 	%r10923, %r32;
	mov.u32 	%r10924, %r39;
	mov.u32 	%r10925, %r38;
	mov.u32 	%r39, %r37;
	mov.u32 	%r10928, %r35;
	mov.u32 	%r10929, %r34;
	mov.u32 	%r35, %r33;
	bra.uni 	BB1_315;

BB1_271:
	setp.gt.s32	%p216, %r41, 21;
	@%p216 bra 	BB1_275;

	setp.eq.s32	%p219, %r41, 20;
	@%p219 bra 	BB1_298;
	bra.uni 	BB1_273;

BB1_298:
	mov.u32 	%r10923, 0;
	mov.u32 	%r10924, %r35;
	mov.u32 	%r10925, %r34;
	mov.u32 	%r39, %r33;
	bra.uni 	BB1_314;

BB1_255:
	setp.gt.s32	%p228, %r41, 13;
	@%p228 bra 	BB1_259;

	setp.eq.s32	%p231, %r41, 12;
	@%p231 bra 	BB1_304;
	bra.uni 	BB1_257;

BB1_304:
	mov.u32 	%r10927, 0;
	mov.u32 	%r10923, %r34;
	mov.u32 	%r10924, %r33;
	mov.u32 	%r10925, %r32;
	bra.uni 	BB1_305;

BB1_287:
	setp.gt.s32	%p205, %r41, 29;
	@%p205 bra 	BB1_291;

	setp.eq.s32	%p208, %r41, 28;
	@%p208 bra 	BB1_294;
	bra.uni 	BB1_289;

BB1_294:
	mov.u32 	%r10923, 0;
	mov.u32 	%r10924, %r10923;
	mov.u32 	%r10925, %r10923;
	mov.u32 	%r39, %r35;
	bra.uni 	BB1_314;

BB1_706:
	mov.u32 	%r6340, 8;
	// inline asm
	shf.r.wrap.b32 %r11058, %r35, %r34, %r6340;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r34, %r33, %r6340;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r33, %r32, %r6340;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6321, %r32, %r39, %r6340;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r39, %r38, %r6340;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11055, %r38, %r37, %r6340;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11056, %r37, %r36, %r6340;
	// inline asm
	mov.u32 	%r6339, 0;
	// inline asm
	shf.r.wrap.b32 %r11057, %r36, %r6339, %r6340;
	// inline asm
	mov.u32 	%r36, %r6321;
	bra.uni 	BB1_712;

BB1_633:
	setp.eq.s32	%p581, %r41, 3;
	@%p581 bra 	BB1_634;
	bra.uni 	BB1_665;

BB1_634:
	mov.u32 	%r6276, 24;
	// inline asm
	shf.r.wrap.b32 %r11058, %r35, %r34, %r6276;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r34, %r33, %r6276;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r33, %r32, %r6276;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6257, %r32, %r39, %r6276;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r39, %r38, %r6276;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11055, %r38, %r37, %r6276;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11056, %r37, %r36, %r6276;
	// inline asm
	mov.u32 	%r6275, 0;
	// inline asm
	shf.r.wrap.b32 %r11057, %r36, %r6275, %r6276;
	// inline asm
	mov.u32 	%r36, %r6257;
	bra.uni 	BB1_712;

BB1_522:
	setp.eq.s32	%p519, %r43, 2;
	@%p519 bra 	BB1_599;
	bra.uni 	BB1_523;

BB1_599:
	mov.u32 	%r5753, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r35, %r34, %r5753;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r34, %r33, %r5753;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r33, %r32, %r5753;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r32, %r39, %r5753;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r39, %r38, %r5753;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r38, %r37, %r5753;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r37, %r36, %r5753;
	// inline asm
	mov.u32 	%r5752, 0;
	// inline asm
	shf.r.wrap.b32 %r11065, %r36, %r5752, %r5753;
	// inline asm
	bra.uni 	BB1_601;

BB1_1004:
	mov.u32 	%r8399, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r37, %r36, %r8399;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r38, %r37, %r8399;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r39, %r38, %r8399;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r32, %r39, %r8399;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r33, %r32, %r8399;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r34, %r33, %r8399;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r35, %r34, %r8399;
	// inline asm
	mov.u32 	%r8397, 0;
	// inline asm
	shf.r.wrap.b32 %r11065, %r8397, %r35, %r8399;
	// inline asm
	bra.uni 	BB1_1008;

BB1_932:
	setp.eq.s32	%p759, %r7865, 3;
	@%p759 bra 	BB1_933;
	bra.uni 	BB1_955;

BB1_933:
	mov.u32 	%r8335, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r37, %r36, %r8335;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r38, %r37, %r8335;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r39, %r38, %r8335;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r32, %r39, %r8335;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r33, %r32, %r8335;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r34, %r33, %r8335;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r35, %r34, %r8335;
	// inline asm
	mov.u32 	%r8333, 0;
	// inline asm
	shf.r.wrap.b32 %r11065, %r8333, %r35, %r8335;
	// inline asm
	bra.uni 	BB1_1008;

BB1_794:
	setp.gt.s32	%p668, %r6698, 5;
	@%p668 bra 	BB1_798;

	setp.eq.s32	%p671, %r6698, 4;
	@%p671 bra 	BB1_866;
	bra.uni 	BB1_796;

BB1_866:
	mov.u32 	%r11069, %r32;
	mov.u32 	%r11068, %r39;
	mov.u32 	%r11067, %r38;
	mov.u32 	%r11066, %r37;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r35;
	mov.u32 	%r11063, %r34;
	mov.u32 	%r11062, %r33;
	bra.uni 	BB1_868;

BB1_734:
	setp.eq.s32	%p604, %r6417, 1;
	@%p604 bra 	BB1_735;
	bra.uni 	BB1_111;

BB1_735:
	and.b32  	%r6434, %r974, %r34;
	and.b32  	%r6435, %r11067, %r975;
	or.b32  	%r11059, %r6435, %r6434;
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11058, %r35;

BB1_32:
	mov.u32 	%r11060, %r11068;

BB1_752:
	mov.u32 	%r11061, %r11069;
	bra.uni 	BB1_1015;

BB1_554:
	setp.eq.s32	%p496, %r43, 18;
	@%p496 bra 	BB1_591;
	bra.uni 	BB1_555;

BB1_591:
	mov.u32 	%r5421, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r39, %r38, %r5421;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r38, %r37, %r5421;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r37, %r36, %r5421;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r36, %r11062, %r5421;
	// inline asm
	bra.uni 	BB1_557;

BB1_369:
	setp.eq.s32	%p291, %r41, 18;
	@%p291 bra 	BB1_400;
	bra.uni 	BB1_370;

BB1_400:
	mov.u32 	%r4194, 16;
	// inline asm
	shf.r.wrap.b32 %r39, %r33, %r32, %r4194;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r34, %r33, %r4194;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r35, %r34, %r4194;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r10945, %r35, %r4194;
	// inline asm
	bra.uni 	BB1_402;

BB1_764:
	setp.eq.s32	%p626, %r6519, 1;
	@%p626 bra 	BB1_765;
	bra.uni 	BB1_776;

BB1_765:
	and.b32  	%r11059, %r11059, %r1019;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;

BB1_766:
	mov.u32 	%r11060, %r11054;

BB1_781:
	mov.u32 	%r11061, %r11054;
	bra.uni 	BB1_1014;

BB1_537:
	setp.eq.s32	%p508, %r43, 10;
	@%p508 bra 	BB1_595;
	bra.uni 	BB1_538;

BB1_595:
	mov.u32 	%r5571, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r33, %r32, %r5571;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r32, %r39, %r5571;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r39, %r38, %r5571;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r38, %r37, %r5571;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r37, %r36, %r5571;
	// inline asm
	mov.u32 	%r11064, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r36, %r11064, %r5571;
	// inline asm
	mov.u32 	%r11065, %r11064;
	bra.uni 	BB1_601;

BB1_827:
	setp.gt.s32	%p645, %r6698, 21;
	@%p645 bra 	BB1_831;

	setp.eq.s32	%p648, %r6698, 20;
	@%p648 bra 	BB1_858;
	bra.uni 	BB1_829;

BB1_858:
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11066, %r33;
	bra.uni 	BB1_854;

BB1_742:
	setp.eq.s32	%p599, %r6417, 5;
	@%p599 bra 	BB1_743;
	bra.uni 	BB1_111;

BB1_743:
	and.b32  	%r6426, %r974, %r38;
	and.b32  	%r6427, %r11063, %r975;
	or.b32  	%r11055, %r6427, %r6426;
	mov.u32 	%r11054, %r39;

BB1_744:
	mov.u32 	%r11056, %r11064;

BB1_509:
	mov.u32 	%r11057, %r11065;
	bra.uni 	BB1_510;

BB1_353:
	setp.eq.s32	%p303, %r41, 10;
	@%p303 bra 	BB1_407;
	bra.uni 	BB1_354;

BB1_407:
	mov.u32 	%r4344, 16;
	// inline asm
	shf.r.wrap.b32 %r4321, %r39, %r38, %r4344;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r32, %r39, %r4344;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r33, %r32, %r4344;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r34, %r33, %r4344;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4337, %r35, %r34, %r4344;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r10945, %r35, %r4344;
	// inline asm
	mov.u32 	%r39, %r4321;
	mov.u32 	%r10946, %r10945;
	mov.u32 	%r35, %r4337;
	bra.uni 	BB1_416;

BB1_571:
	setp.eq.s32	%p485, %r43, 26;
	@%p485 bra 	BB1_587;
	bra.uni 	BB1_572;

BB1_587:
	mov.u32 	%r5303, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r37, %r36, %r5303;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r36, %r11062, %r5303;
	// inline asm
	bra.uni 	BB1_574;

BB1_384:
	setp.eq.s32	%p280, %r41, 26;
	@%p280 bra 	BB1_396;
	bra.uni 	BB1_385;

BB1_396:
	mov.u32 	%r4076, 16;
	// inline asm
	shf.r.wrap.b32 %r39, %r35, %r34, %r4076;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r10941, %r35, %r4076;
	// inline asm
	bra.uni 	BB1_387;

BB1_772:
	setp.eq.s32	%p621, %r6519, 5;
	@%p621 bra 	BB1_773;
	bra.uni 	BB1_776;

BB1_773:
	and.b32  	%r11055, %r11055, %r1019;
	mov.u32 	%r11056, 0;
	mov.u32 	%r11057, %r11056;
	bra.uni 	BB1_1014;

BB1_529:
	setp.eq.s32	%p514, %r43, 6;
	@%p514 bra 	BB1_597;
	bra.uni 	BB1_530;

BB1_597:
	mov.u32 	%r5658, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r34, %r33, %r5658;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r33, %r32, %r5658;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r32, %r39, %r5658;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r39, %r38, %r5658;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r38, %r37, %r5658;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r37, %r36, %r5658;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r36, %r11065, %r5658;
	// inline asm
	bra.uni 	BB1_601;

BB1_809:
	setp.gt.s32	%p657, %r6698, 13;
	@%p657 bra 	BB1_813;

	setp.eq.s32	%p660, %r6698, 12;
	@%p660 bra 	BB1_862;
	bra.uni 	BB1_811;

BB1_862:
	mov.u32 	%r11069, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11067, %r32;
	mov.u32 	%r11066, %r39;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r35;
	bra.uni 	BB1_868;

BB1_447:
	and.b16  	%rs14, %rs2, 255;
	and.b16  	%rs15, %rs23, 255;
	setp.eq.s16	%p364, %rs15, %rs14;
	mov.u32 	%r10957, 1;
	@%p364 bra 	BB1_449;

	st.local.u8 	[%rd85], %rs23;
	mov.u32 	%r10957, 1;
	mov.u32 	%r11070, %r10957;

BB1_449:
	cvt.u64.u32	%rd150, %r10957;
	add.s64 	%rd151, %rd84, %rd150;
	ld.local.u8 	%rs3, [%rd151];
	and.b16  	%rs16, %rs2, 255;
	setp.eq.s16	%p365, %rs3, %rs16;
	@%p365 bra 	BB1_451;

	cvt.u64.u32	%rd152, %r11070;
	add.s64 	%rd155, %rd85, %rd152;
	st.local.u8 	[%rd155], %rs3;
	add.s32 	%r11070, %r11070, 1;

BB1_451:
	add.s32 	%r10960, %r10957, 1;
	cvt.u64.u32	%rd156, %r10960;
	add.s64 	%rd159, %rd84, %rd156;
	ld.local.u8 	%rs23, [%rd159];

BB1_452:
	and.b16  	%rs17, %rs2, 255;
	and.b16  	%rs18, %rs23, 255;
	setp.eq.s16	%p366, %rs18, %rs17;
	@%p366 bra 	BB1_454;

	cvt.u64.u32	%rd160, %r11070;
	add.s64 	%rd163, %rd85, %rd160;
	st.local.u8 	[%rd163], %rs23;
	add.s32 	%r11070, %r11070, 1;

BB1_454:
	add.s32 	%r10965, %r10960, 1;

BB1_455:
	setp.lt.u32	%p367, %r23, 4;
	@%p367 bra 	BB1_465;

BB1_456:
	cvt.u64.u32	%rd165, %r10965;
	add.s64 	%rd166, %rd84, %rd165;
	ld.local.u8 	%rs6, [%rd166];
	and.b16  	%rs19, %rs2, 255;
	setp.eq.s16	%p368, %rs6, %rs19;
	@%p368 bra 	BB1_458;

	cvt.u64.u32	%rd167, %r11070;
	add.s64 	%rd170, %rd85, %rd167;
	st.local.u8 	[%rd170], %rs6;
	add.s32 	%r11070, %r11070, 1;

BB1_458:
	add.s32 	%r4805, %r10965, 1;
	cvt.u64.u32	%rd171, %r4805;
	add.s64 	%rd172, %rd84, %rd171;
	ld.local.u8 	%rs7, [%rd172];
	setp.eq.s16	%p369, %rs7, %rs19;
	@%p369 bra 	BB1_460;

	cvt.u64.u32	%rd173, %r11070;
	add.s64 	%rd176, %rd85, %rd173;
	st.local.u8 	[%rd176], %rs7;
	add.s32 	%r11070, %r11070, 1;

BB1_460:
	add.s32 	%r4806, %r10965, 2;
	cvt.u64.u32	%rd177, %r4806;
	add.s64 	%rd178, %rd84, %rd177;
	ld.local.u8 	%rs8, [%rd178];
	setp.eq.s16	%p370, %rs8, %rs19;
	@%p370 bra 	BB1_462;

	cvt.u64.u32	%rd179, %r11070;
	add.s64 	%rd182, %rd85, %rd179;
	st.local.u8 	[%rd182], %rs8;
	add.s32 	%r11070, %r11070, 1;

BB1_462:
	add.s32 	%r4807, %r10965, 3;
	cvt.u64.u32	%rd183, %r4807;
	add.s64 	%rd184, %rd84, %rd183;
	ld.local.u8 	%rs9, [%rd184];
	setp.eq.s16	%p371, %rs9, %rs19;
	@%p371 bra 	BB1_464;

	cvt.u64.u32	%rd185, %r11070;
	add.s64 	%rd188, %rd85, %rd185;
	st.local.u8 	[%rd188], %rs9;
	add.s32 	%r11070, %r11070, 1;

BB1_464:
	add.s32 	%r10965, %r10965, 4;
	setp.lt.u32	%p372, %r10965, %r23;
	@%p372 bra 	BB1_456;

BB1_465:
	ld.local.v4.u32 	{%r11058, %r11059, %r11060, %r11061}, [%rd85];
	ld.local.v4.u32 	{%r11054, %r11055, %r11056, %r11057}, [%rd85+16];
	bra.uni 	BB1_1015;

BB1_737:
	setp.eq.s32	%p602, %r6417, 3;
	@%p602 bra 	BB1_738;
	bra.uni 	BB1_111;

BB1_738:
	and.b32  	%r6430, %r974, %r32;
	and.b32  	%r6431, %r11069, %r975;
	or.b32  	%r11061, %r6431, %r6430;

BB1_739:
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	bra.uni 	BB1_1015;

BB1_345:
	setp.eq.s32	%p309, %r41, 6;
	@%p309 bra 	BB1_409;
	bra.uni 	BB1_346;

BB1_409:
	mov.u32 	%r4431, 16;
	// inline asm
	shf.r.wrap.b32 %r4404, %r38, %r37, %r4431;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r39, %r38, %r4431;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r32, %r39, %r4431;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r33, %r32, %r4431;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4420, %r34, %r33, %r4431;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r35, %r34, %r4431;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r10945, %r35, %r4431;
	// inline asm
	mov.u32 	%r39, %r4404;
	mov.u32 	%r35, %r4420;
	bra.uni 	BB1_416;

BB1_562:
	setp.eq.s32	%p491, %r43, 22;
	@%p491 bra 	BB1_589;
	bra.uni 	BB1_563;

BB1_589:
	mov.u32 	%r5358, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r38, %r37, %r5358;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r37, %r36, %r5358;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r36, %r11062, %r5358;
	// inline asm
	bra.uni 	BB1_565;

BB1_376:
	setp.eq.s32	%p286, %r41, 22;
	@%p286 bra 	BB1_398;
	bra.uni 	BB1_377;

BB1_398:
	mov.u32 	%r4131, 16;
	// inline asm
	shf.r.wrap.b32 %r39, %r34, %r33, %r4131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r35, %r34, %r4131;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r10941, %r35, %r4131;
	// inline asm
	bra.uni 	BB1_415;

BB1_768:
	setp.eq.s32	%p624, %r6519, 3;
	@%p624 bra 	BB1_769;
	bra.uni 	BB1_776;

BB1_769:
	and.b32  	%r11061, %r11061, %r1019;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	bra.uni 	BB1_1014;

BB1_544:
	setp.eq.s32	%p503, %r43, 14;
	@%p503 bra 	BB1_593;
	bra.uni 	BB1_545;

BB1_593:
	mov.u32 	%r5492, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r32, %r39, %r5492;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r39, %r38, %r5492;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r38, %r37, %r5492;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r37, %r36, %r5492;
	// inline asm
	mov.u32 	%r11063, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r36, %r11063, %r5492;
	// inline asm
	bra.uni 	BB1_547;

BB1_844:
	setp.gt.s32	%p634, %r6698, 29;
	@%p634 bra 	BB1_848;

	setp.eq.s32	%p637, %r6698, 28;
	@%p637 bra 	BB1_853;
	bra.uni 	BB1_846;

BB1_853:
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r35;

BB1_854:
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	bra.uni 	BB1_868;

BB1_746:
	setp.ne.s32	%p597, %r6417, 7;
	@%p597 bra 	BB1_111;

	and.b32  	%r6422, %r974, %r36;
	and.b32  	%r6423, %r11065, %r975;
	or.b32  	%r11057, %r6423, %r6422;

BB1_748:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	bra.uni 	BB1_510;

BB1_111:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;

BB1_510:
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11061, %r32;
	bra.uni 	BB1_1015;

BB1_360:
	setp.eq.s32	%p298, %r41, 14;
	@%p298 bra 	BB1_404;
	bra.uni 	BB1_361;

BB1_404:
	mov.u32 	%r4265, 16;
	// inline asm
	shf.r.wrap.b32 %r39, %r32, %r39, %r4265;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r33, %r32, %r4265;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r34, %r33, %r4265;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r35, %r34, %r4265;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r10945, %r35, %r4265;
	// inline asm
	bra.uni 	BB1_406;

BB1_580:
	setp.eq.s32	%p480, %r43, 30;
	@%p480 bra 	BB1_584;
	bra.uni 	BB1_581;

BB1_584:
	mov.u32 	%r11062, 0;
	mov.u32 	%r5256, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r36, %r11062, %r5256;
	// inline asm
	bra.uni 	BB1_583;

BB1_392:
	setp.eq.s32	%p275, %r41, 31;
	@%p275 bra 	BB1_413;
	bra.uni 	BB1_393;

BB1_413:
	mov.u32 	%r10941, 0;
	mov.u32 	%r4562, 8;
	// inline asm
	shf.r.wrap.b32 %r39, %r10941, %r35, %r4562;
	// inline asm
	bra.uni 	BB1_414;

BB1_775:
	setp.ne.s32	%p619, %r6519, 7;
	@%p619 bra 	BB1_776;

	and.b32  	%r11057, %r6487, %r1019;
	bra.uni 	BB1_1014;

BB1_776:
	mov.u32 	%r11057, %r6487;
	bra.uni 	BB1_1014;

BB1_119:
	setp.eq.s32	%p173, %r41, 2;
	@%p173 bra 	BB1_194;
	bra.uni 	BB1_120;

BB1_194:
	mov.u32 	%r3099, 16;
	// inline asm
	shf.r.wrap.b32 %r11065, %r37, %r36, %r3099;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r38, %r37, %r3099;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r39, %r38, %r3099;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r32, %r39, %r3099;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r33, %r32, %r3099;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r34, %r33, %r3099;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r35, %r34, %r3099;
	// inline asm
	mov.u32 	%r3097, 0;
	// inline asm
	shf.r.wrap.b32 %r11066, %r3097, %r35, %r3099;
	// inline asm
	bra.uni 	BB1_195;

BB1_661:
	setp.eq.s32	%p560, %r41, 17;
	@%p560 bra 	BB1_662;
	bra.uni 	BB1_665;

BB1_662:
	mov.u32 	%r5996, 8;
	// inline asm
	shf.r.wrap.b32 %r11058, %r39, %r38, %r5996;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r38, %r37, %r5996;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r37, %r36, %r5996;
	// inline asm
	mov.u32 	%r11054, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r36, %r11054, %r5996;
	// inline asm
	bra.uni 	BB1_696;

BB1_960:
	setp.eq.s32	%p738, %r7865, 17;
	@%p738 bra 	BB1_961;
	bra.uni 	BB1_955;

BB1_961:
	mov.u32 	%r8055, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r33, %r32, %r8055;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r34, %r33, %r8055;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r35, %r34, %r8055;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r11065, %r35, %r8055;
	// inline asm
	bra.uni 	BB1_995;

BB1_645:
	setp.eq.s32	%p572, %r41, 9;
	@%p572 bra 	BB1_646;
	bra.uni 	BB1_665;

BB1_646:
	mov.u32 	%r6152, 8;
	// inline asm
	shf.r.wrap.b32 %r11058, %r33, %r32, %r6152;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r32, %r39, %r6152;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r39, %r38, %r6152;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6141, %r38, %r37, %r6152;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r37, %r36, %r6152;
	// inline asm
	mov.u32 	%r11056, 0;
	// inline asm
	shf.r.wrap.b32 %r11055, %r36, %r11056, %r6152;
	// inline asm
	mov.u32 	%r11057, %r11056;
	mov.u32 	%r36, %r6141;
	bra.uni 	BB1_712;

BB1_944:
	setp.eq.s32	%p750, %r7865, 9;
	@%p750 bra 	BB1_945;
	bra.uni 	BB1_955;

BB1_945:
	mov.u32 	%r8211, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r39, %r38, %r8211;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r32, %r39, %r8211;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r33, %r32, %r8211;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r34, %r33, %r8211;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r35, %r34, %r8211;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r11065, %r35, %r8211;
	// inline asm
	mov.u32 	%r11064, %r11065;
	bra.uni 	BB1_1008;

BB1_151:
	setp.eq.s32	%p150, %r41, 18;
	@%p150 bra 	BB1_185;
	bra.uni 	BB1_152;

BB1_185:
	mov.u32 	%r2767, 16;
	// inline asm
	shf.r.wrap.b32 %r11065, %r33, %r32, %r2767;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r34, %r33, %r2767;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r35, %r34, %r2767;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r11066, %r35, %r2767;
	// inline asm
	bra.uni 	BB1_187;

BB1_677:
	setp.eq.s32	%p549, %r41, 25;
	@%p549 bra 	BB1_678;
	bra.uni 	BB1_665;

BB1_678:
	mov.u32 	%r5872, 8;
	// inline asm
	shf.r.wrap.b32 %r11058, %r37, %r36, %r5872;
	// inline asm
	mov.u32 	%r11054, 0;
	// inline asm
	shf.r.wrap.b32 %r11059, %r36, %r11054, %r5872;
	// inline asm
	bra.uni 	BB1_682;

BB1_975:
	setp.eq.s32	%p727, %r7865, 25;
	@%p727 bra 	BB1_976;
	bra.uni 	BB1_955;

BB1_976:
	mov.u32 	%r7931, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r35, %r34, %r7931;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r11069, %r35, %r7931;
	// inline asm
	bra.uni 	BB1_980;

BB1_637:
	setp.eq.s32	%p578, %r41, 5;
	@%p578 bra 	BB1_638;
	bra.uni 	BB1_665;

BB1_638:
	mov.u32 	%r6242, 8;
	// inline asm
	shf.r.wrap.b32 %r11058, %r34, %r33, %r6242;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r33, %r32, %r6242;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r32, %r39, %r6242;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6227, %r39, %r38, %r6242;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r38, %r37, %r6242;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11055, %r37, %r36, %r6242;
	// inline asm
	mov.u32 	%r11057, 0;
	// inline asm
	shf.r.wrap.b32 %r11056, %r36, %r11057, %r6242;
	// inline asm
	mov.u32 	%r36, %r6227;
	bra.uni 	BB1_712;

BB1_936:
	setp.eq.s32	%p756, %r7865, 5;
	@%p756 bra 	BB1_937;
	bra.uni 	BB1_955;

BB1_937:
	mov.u32 	%r8301, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r38, %r37, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r39, %r38, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r32, %r39, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r33, %r32, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r34, %r33, %r8301;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r35, %r34, %r8301;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r11065, %r35, %r8301;
	// inline asm
	bra.uni 	BB1_1008;

BB1_134:
	setp.eq.s32	%p162, %r41, 10;
	@%p162 bra 	BB1_190;
	bra.uni 	BB1_135;

BB1_190:
	mov.u32 	%r2917, 16;
	// inline asm
	shf.r.wrap.b32 %r11065, %r39, %r38, %r2917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r32, %r39, %r2917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r33, %r32, %r2917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r34, %r33, %r2917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r35, %r34, %r2917;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r11066, %r35, %r2917;
	// inline asm
	mov.u32 	%r11067, %r11066;
	bra.uni 	BB1_195;

BB1_668:
	setp.eq.s32	%p555, %r41, 21;
	@%p555 bra 	BB1_669;
	bra.uni 	BB1_665;

BB1_669:
	mov.u32 	%r5930, 8;
	// inline asm
	shf.r.wrap.b32 %r11058, %r38, %r37, %r5930;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r37, %r36, %r5930;
	// inline asm
	mov.u32 	%r11054, 0;
	// inline asm
	shf.r.wrap.b32 %r11060, %r36, %r11054, %r5930;
	// inline asm
	bra.uni 	BB1_673;

BB1_967:
	setp.eq.s32	%p733, %r7865, 21;
	@%p733 bra 	BB1_968;
	bra.uni 	BB1_955;

BB1_968:
	mov.u32 	%r7989, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r34, %r33, %r7989;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r35, %r34, %r7989;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r11069, %r35, %r7989;
	// inline asm
	bra.uni 	BB1_1007;

BB1_652:
	setp.eq.s32	%p567, %r41, 13;
	@%p567 bra 	BB1_653;
	bra.uni 	BB1_665;

BB1_653:
	mov.u32 	%r6070, 8;
	// inline asm
	shf.r.wrap.b32 %r11058, %r32, %r39, %r6070;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r39, %r38, %r6070;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r38, %r37, %r6070;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6063, %r37, %r36, %r6070;
	// inline asm
	mov.u32 	%r11055, 0;
	// inline asm
	shf.r.wrap.b32 %r11054, %r36, %r11055, %r6070;
	// inline asm
	mov.u32 	%r11056, %r11055;
	mov.u32 	%r11057, %r11055;
	mov.u32 	%r36, %r6063;
	bra.uni 	BB1_712;

BB1_951:
	setp.eq.s32	%p745, %r7865, 13;
	@%p745 bra 	BB1_952;
	bra.uni 	BB1_955;

BB1_952:
	mov.u32 	%r8129, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r32, %r39, %r8129;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r33, %r32, %r8129;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r34, %r33, %r8129;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r35, %r34, %r8129;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r11065, %r35, %r8129;
	// inline asm
	bra.uni 	BB1_997;

BB1_166:
	setp.eq.s32	%p139, %r41, 26;
	@%p139 bra 	BB1_181;
	bra.uni 	BB1_167;

BB1_181:
	mov.u32 	%r2649, 16;
	// inline asm
	shf.r.wrap.b32 %r11065, %r35, %r34, %r2649;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r11062, %r35, %r2649;
	// inline asm
	bra.uni 	BB1_169;

BB1_685:
	setp.eq.s32	%p544, %r41, 29;
	@%p544 bra 	BB1_686;
	bra.uni 	BB1_665;

BB1_686:
	mov.u32 	%r11054, 0;
	mov.u32 	%r5822, 8;
	// inline asm
	shf.r.wrap.b32 %r11058, %r36, %r11054, %r5822;
	// inline asm
	bra.uni 	BB1_708;

BB1_983:
	setp.eq.s32	%p722, %r7865, 29;
	@%p722 bra 	BB1_984;
	bra.uni 	BB1_955;

BB1_984:
	mov.u32 	%r11069, 0;
	mov.u32 	%r7881, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r11069, %r35, %r7881;
	// inline asm
	bra.uni 	BB1_1006;

BB1_126:
	setp.eq.s32	%p168, %r41, 6;
	@%p168 bra 	BB1_192;
	bra.uni 	BB1_127;

BB1_192:
	mov.u32 	%r3004, 16;
	// inline asm
	shf.r.wrap.b32 %r11065, %r38, %r37, %r3004;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r39, %r38, %r3004;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r32, %r39, %r3004;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r33, %r32, %r3004;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r34, %r33, %r3004;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r35, %r34, %r3004;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r11066, %r35, %r3004;
	// inline asm
	bra.uni 	BB1_195;

BB1_664:
	setp.eq.s32	%p558, %r41, 19;
	@%p558 bra 	BB1_695;
	bra.uni 	BB1_665;

BB1_695:
	mov.u32 	%r5956, 24;
	// inline asm
	shf.r.wrap.b32 %r11058, %r39, %r38, %r5956;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r38, %r37, %r5956;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r37, %r36, %r5956;
	// inline asm
	mov.u32 	%r11054, 0;
	// inline asm
	shf.r.wrap.b32 %r36, %r36, %r11054, %r5956;
	// inline asm

BB1_696:
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	bra.uni 	BB1_712;

BB1_963:
	setp.eq.s32	%p736, %r7865, 19;
	@%p736 bra 	BB1_964;
	bra.uni 	BB1_955;

BB1_964:
	mov.u32 	%r8015, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r33, %r32, %r8015;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r34, %r33, %r8015;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r35, %r34, %r8015;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r11065, %r35, %r8015;
	// inline asm

BB1_995:
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11062, %r11065;
	bra.uni 	BB1_1008;

BB1_648:
	setp.eq.s32	%p570, %r41, 11;
	@%p570 bra 	BB1_649;
	bra.uni 	BB1_665;

BB1_649:
	mov.u32 	%r6100, 24;
	// inline asm
	shf.r.wrap.b32 %r11058, %r33, %r32, %r6100;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r32, %r39, %r6100;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r39, %r38, %r6100;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6089, %r38, %r37, %r6100;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r37, %r36, %r6100;
	// inline asm
	mov.u32 	%r11056, 0;
	// inline asm
	shf.r.wrap.b32 %r11055, %r36, %r11056, %r6100;
	// inline asm
	mov.u32 	%r11057, %r11056;
	mov.u32 	%r36, %r6089;
	bra.uni 	BB1_712;

BB1_947:
	setp.eq.s32	%p748, %r7865, 11;
	@%p748 bra 	BB1_948;
	bra.uni 	BB1_955;

BB1_948:
	mov.u32 	%r8159, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r39, %r38, %r8159;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r32, %r39, %r8159;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r33, %r32, %r8159;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r34, %r33, %r8159;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r35, %r34, %r8159;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r11065, %r35, %r8159;
	// inline asm
	mov.u32 	%r11064, %r11065;
	bra.uni 	BB1_1008;

BB1_158:
	setp.eq.s32	%p145, %r41, 22;
	@%p145 bra 	BB1_183;
	bra.uni 	BB1_159;

BB1_183:
	mov.u32 	%r2704, 16;
	// inline asm
	shf.r.wrap.b32 %r11065, %r34, %r33, %r2704;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r35, %r34, %r2704;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r11062, %r35, %r2704;
	// inline asm
	bra.uni 	BB1_180;

BB1_680:
	setp.eq.s32	%p547, %r41, 27;
	@%p547 bra 	BB1_681;
	bra.uni 	BB1_665;

BB1_681:
	mov.u32 	%r5844, 24;
	// inline asm
	shf.r.wrap.b32 %r11058, %r37, %r36, %r5844;
	// inline asm
	mov.u32 	%r11054, 0;
	// inline asm
	shf.r.wrap.b32 %r11059, %r36, %r11054, %r5844;
	// inline asm

BB1_682:
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	bra.uni 	BB1_710;

BB1_978:
	setp.eq.s32	%p725, %r7865, 27;
	@%p725 bra 	BB1_979;
	bra.uni 	BB1_955;

BB1_979:
	mov.u32 	%r7903, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r35, %r34, %r7903;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r11069, %r35, %r7903;
	// inline asm

BB1_980:
	mov.u32 	%r11068, %r11069;
	bra.uni 	BB1_1007;

BB1_640:
	setp.eq.s32	%p576, %r41, 7;
	@%p576 bra 	BB1_641;
	bra.uni 	BB1_665;

BB1_641:
	mov.u32 	%r6184, 24;
	// inline asm
	shf.r.wrap.b32 %r11058, %r34, %r33, %r6184;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r33, %r32, %r6184;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r32, %r39, %r6184;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6169, %r39, %r38, %r6184;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r38, %r37, %r6184;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11055, %r37, %r36, %r6184;
	// inline asm
	mov.u32 	%r11057, 0;
	// inline asm
	shf.r.wrap.b32 %r11056, %r36, %r11057, %r6184;
	// inline asm
	mov.u32 	%r36, %r6169;
	bra.uni 	BB1_712;

BB1_939:
	setp.eq.s32	%p754, %r7865, 7;
	@%p754 bra 	BB1_940;
	bra.uni 	BB1_955;

BB1_940:
	mov.u32 	%r8243, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r38, %r37, %r8243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r39, %r38, %r8243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r32, %r39, %r8243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r33, %r32, %r8243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r34, %r33, %r8243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r35, %r34, %r8243;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r11065, %r35, %r8243;
	// inline asm
	bra.uni 	BB1_1008;

BB1_141:
	setp.eq.s32	%p157, %r41, 14;
	@%p157 bra 	BB1_188;
	bra.uni 	BB1_142;

BB1_188:
	mov.u32 	%r2838, 16;
	// inline asm
	shf.r.wrap.b32 %r11065, %r32, %r39, %r2838;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r33, %r32, %r2838;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r34, %r33, %r2838;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r35, %r34, %r2838;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r11066, %r35, %r2838;
	// inline asm
	bra.uni 	BB1_144;

BB1_671:
	setp.eq.s32	%p553, %r41, 23;
	@%p553 bra 	BB1_672;
	bra.uni 	BB1_665;

BB1_672:
	mov.u32 	%r5896, 24;
	// inline asm
	shf.r.wrap.b32 %r11058, %r38, %r37, %r5896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r37, %r36, %r5896;
	// inline asm
	mov.u32 	%r11054, 0;
	// inline asm
	shf.r.wrap.b32 %r11060, %r36, %r11054, %r5896;
	// inline asm

BB1_673:
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	bra.uni 	BB1_711;

BB1_970:
	setp.eq.s32	%p731, %r7865, 23;
	@%p731 bra 	BB1_971;
	bra.uni 	BB1_955;

BB1_971:
	mov.u32 	%r7955, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r34, %r33, %r7955;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r35, %r34, %r7955;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r11069, %r35, %r7955;
	// inline asm
	bra.uni 	BB1_1007;

BB1_655:
	setp.eq.s32	%p565, %r41, 15;
	@%p565 bra 	BB1_656;
	bra.uni 	BB1_665;

BB1_656:
	mov.u32 	%r6024, 24;
	// inline asm
	shf.r.wrap.b32 %r11058, %r32, %r39, %r6024;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r39, %r38, %r6024;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r38, %r37, %r6024;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6017, %r37, %r36, %r6024;
	// inline asm
	mov.u32 	%r11055, 0;
	// inline asm
	shf.r.wrap.b32 %r11054, %r36, %r11055, %r6024;
	// inline asm
	mov.u32 	%r11056, %r11055;
	mov.u32 	%r11057, %r11055;
	mov.u32 	%r36, %r6017;
	bra.uni 	BB1_712;

BB1_954:
	setp.eq.s32	%p743, %r7865, 15;
	@%p743 bra 	BB1_996;
	bra.uni 	BB1_955;

BB1_996:
	mov.u32 	%r8083, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r32, %r39, %r8083;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r33, %r32, %r8083;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r34, %r33, %r8083;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r35, %r34, %r8083;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r11065, %r35, %r8083;
	// inline asm

BB1_997:
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11063, %r11065;
	bra.uni 	BB1_1008;

BB1_174:
	setp.eq.s32	%p134, %r41, 30;
	@%p134 bra 	BB1_178;
	bra.uni 	BB1_175;

BB1_178:
	mov.u32 	%r11062, 0;
	mov.u32 	%r2602, 16;
	// inline asm
	shf.r.wrap.b32 %r11065, %r11062, %r35, %r2602;
	// inline asm
	bra.uni 	BB1_177;

BB1_268:
	setp.eq.s32	%p222, %r41, 18;
	@%p222 bra 	BB1_299;
	bra.uni 	BB1_269;

BB1_299:
	mov.u32 	%r3365, 16;
	// inline asm
	shf.r.wrap.b32 %r39, %r33, %r32, %r3365;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r34, %r33, %r3365;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r35, %r34, %r3365;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r10923, %r10927, %r35, %r3365;
	// inline asm
	bra.uni 	BB1_301;

BB1_252:
	setp.eq.s32	%p234, %r41, 10;
	@%p234 bra 	BB1_306;
	bra.uni 	BB1_253;

BB1_306:
	mov.u32 	%r3515, 16;
	// inline asm
	shf.r.wrap.b32 %r3492, %r39, %r38, %r3515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r32, %r39, %r3515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r33, %r32, %r3515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r34, %r33, %r3515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3508, %r35, %r34, %r3515;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r10929, %r10927, %r35, %r3515;
	// inline asm
	mov.u32 	%r39, %r3492;
	mov.u32 	%r10928, %r10927;
	mov.u32 	%r35, %r3508;
	bra.uni 	BB1_315;

BB1_283:
	setp.eq.s32	%p211, %r41, 26;
	@%p211 bra 	BB1_295;
	bra.uni 	BB1_284;

BB1_295:
	mov.u32 	%r3247, 16;
	// inline asm
	shf.r.wrap.b32 %r39, %r35, %r34, %r3247;
	// inline asm
	mov.u32 	%r10923, 0;
	// inline asm
	shf.r.wrap.b32 %r10925, %r10923, %r35, %r3247;
	// inline asm
	bra.uni 	BB1_286;

BB1_688:
	setp.ne.s32	%p542, %r41, 30;
	@%p542 bra 	BB1_665;

	mov.u32 	%r11054, 0;
	mov.u32 	%r5811, 16;
	// inline asm
	shf.r.wrap.b32 %r11058, %r36, %r11054, %r5811;
	// inline asm

BB1_708:
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;

BB1_709:
	mov.u32 	%r11059, %r11054;

BB1_710:
	mov.u32 	%r11060, %r11054;

BB1_711:
	mov.u32 	%r36, %r11054;
	bra.uni 	BB1_712;

BB1_665:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r36, %r32;

BB1_712:
	and.b32  	%r6353, %r42, 3;
	shl.b32 	%r6354, %r6353, 3;
	mov.u32 	%r6355, 1;
	shl.b32 	%r6356, %r6355, %r6354;
	add.s32 	%r957, %r6356, -1;
	shr.u32 	%r6352, %r43, 2;
	setp.gt.s32	%p582, %r6352, 3;
	@%p582 bra 	BB1_721;

	setp.gt.s32	%p588, %r6352, 1;
	@%p588 bra 	BB1_718;

	setp.eq.s32	%p591, %r6352, 0;
	@%p591 bra 	BB1_733;
	bra.uni 	BB1_715;

BB1_733:
	and.b32  	%r11058, %r11058, %r957;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11059, %r11054;
	bra.uni 	BB1_717;

BB1_721:
	setp.gt.s32	%p583, %r6352, 5;
	@%p583 bra 	BB1_725;

	setp.eq.s32	%p586, %r6352, 4;
	@%p586 bra 	BB1_730;
	bra.uni 	BB1_723;

BB1_730:
	and.b32  	%r11054, %r11054, %r957;
	mov.u32 	%r11055, 0;
	mov.u32 	%r11056, %r11055;
	mov.u32 	%r11057, %r11055;
	bra.uni 	BB1_727;

BB1_718:
	setp.eq.s32	%p589, %r6352, 2;
	@%p589 bra 	BB1_731;
	bra.uni 	BB1_719;

BB1_731:
	and.b32  	%r11060, %r11060, %r957;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	bra.uni 	BB1_732;

BB1_725:
	setp.eq.s32	%p584, %r6352, 6;
	@%p584 bra 	BB1_729;
	bra.uni 	BB1_726;

BB1_729:
	and.b32  	%r11056, %r11056, %r957;
	mov.u32 	%r11057, 0;
	bra.uni 	BB1_727;

BB1_715:
	setp.eq.s32	%p592, %r6352, 1;
	@%p592 bra 	BB1_716;
	bra.uni 	BB1_727;

BB1_716:
	and.b32  	%r11059, %r11059, %r957;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;

BB1_717:
	mov.u32 	%r11060, %r11054;

BB1_732:
	mov.u32 	%r11061, %r11054;
	mov.u32 	%r11070, %r43;
	bra.uni 	BB1_1015;

BB1_723:
	setp.eq.s32	%p587, %r6352, 5;
	@%p587 bra 	BB1_724;
	bra.uni 	BB1_727;

BB1_724:
	and.b32  	%r11055, %r11055, %r957;
	mov.u32 	%r11056, 0;
	mov.u32 	%r11057, %r11056;
	bra.uni 	BB1_727;

BB1_719:
	setp.eq.s32	%p590, %r6352, 3;
	@%p590 bra 	BB1_720;
	bra.uni 	BB1_727;

BB1_720:
	and.b32  	%r11061, %r36, %r957;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11070, %r43;
	bra.uni 	BB1_1015;

BB1_726:
	setp.ne.s32	%p585, %r6352, 7;
	@%p585 bra 	BB1_727;

	and.b32  	%r11057, %r11057, %r957;

BB1_727:
	mov.u32 	%r11061, %r36;
	mov.u32 	%r11070, %r43;
	bra.uni 	BB1_1015;

BB1_986:
	setp.ne.s32	%p720, %r7865, 30;
	@%p720 bra 	BB1_955;

	mov.u32 	%r11069, 0;
	mov.u32 	%r7870, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r11069, %r35, %r7870;
	// inline asm

BB1_1006:
	mov.u32 	%r11068, %r11069;
	mov.u32 	%r11067, %r11069;

BB1_1007:
	mov.u32 	%r11065, %r11069;
	mov.u32 	%r11064, %r11069;
	mov.u32 	%r11063, %r11069;
	mov.u32 	%r11062, %r11069;
	bra.uni 	BB1_1008;

BB1_955:
	mov.u32 	%r11069, %r39;
	mov.u32 	%r11068, %r38;
	mov.u32 	%r11067, %r37;
	mov.u32 	%r11066, %r36;
	mov.u32 	%r11065, %r35;
	mov.u32 	%r11064, %r34;
	mov.u32 	%r11063, %r33;
	mov.u32 	%r11062, %r32;

BB1_1008:
	// inline asm
	prmt.b32 %r11058, %r11066, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11059, %r11067, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11060, %r11068, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11061, %r11069, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11054, %r11062, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11055, %r11063, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11056, %r11064, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r11057, %r11065, 0, 0x0123;
	// inline asm
	bra.uni 	BB1_1014;

BB1_244:
	setp.eq.s32	%p240, %r41, 6;
	@%p240 bra 	BB1_308;
	bra.uni 	BB1_245;

BB1_308:
	mov.u32 	%r3602, 16;
	// inline asm
	shf.r.wrap.b32 %r3575, %r38, %r37, %r3602;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r39, %r38, %r3602;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r32, %r39, %r3602;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r33, %r32, %r3602;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3591, %r34, %r33, %r3602;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10929, %r35, %r34, %r3602;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r10928, %r10927, %r35, %r3602;
	// inline asm
	mov.u32 	%r39, %r3575;
	mov.u32 	%r35, %r3591;
	bra.uni 	BB1_315;

BB1_275:
	setp.eq.s32	%p217, %r41, 22;
	@%p217 bra 	BB1_297;
	bra.uni 	BB1_276;

BB1_297:
	mov.u32 	%r3302, 16;
	// inline asm
	shf.r.wrap.b32 %r39, %r34, %r33, %r3302;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r35, %r34, %r3302;
	// inline asm
	mov.u32 	%r10923, 0;
	// inline asm
	shf.r.wrap.b32 %r10924, %r10923, %r35, %r3302;
	// inline asm
	bra.uni 	BB1_314;

BB1_259:
	setp.eq.s32	%p229, %r41, 14;
	@%p229 bra 	BB1_303;
	bra.uni 	BB1_260;

BB1_303:
	mov.u32 	%r3436, 16;
	// inline asm
	shf.r.wrap.b32 %r39, %r32, %r39, %r3436;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r33, %r32, %r3436;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r34, %r33, %r3436;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r35, %r34, %r3436;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r10927, %r35, %r3436;
	// inline asm
	bra.uni 	BB1_305;

BB1_291:
	setp.eq.s32	%p206, %r41, 31;
	@%p206 bra 	BB1_312;
	bra.uni 	BB1_292;

BB1_312:
	mov.u32 	%r10923, 0;
	mov.u32 	%r3733, 8;
	// inline asm
	shf.r.wrap.b32 %r39, %r10923, %r35, %r3733;
	// inline asm
	bra.uni 	BB1_313;

BB1_412:
	mov.u32 	%r4558, 24;
	// inline asm
	shf.r.wrap.b32 %r4527, %r37, %r36, %r4558;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r38, %r37, %r4558;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r39, %r38, %r4558;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r32, %r39, %r4558;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4543, %r33, %r32, %r4558;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r34, %r33, %r4558;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r35, %r34, %r4558;
	// inline asm
	mov.u32 	%r4556, 0;
	// inline asm
	shf.r.wrap.b32 %r10945, %r4556, %r35, %r4558;
	// inline asm
	mov.u32 	%r39, %r4527;
	mov.u32 	%r35, %r4543;
	bra.uni 	BB1_416;

BB1_339:
	setp.eq.s32	%p315, %r41, 3;
	@%p315 bra 	BB1_340;
	bra.uni 	BB1_362;

BB1_340:
	mov.u32 	%r4494, 8;
	// inline asm
	shf.r.wrap.b32 %r4463, %r37, %r36, %r4494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r38, %r37, %r4494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r39, %r38, %r4494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r32, %r39, %r4494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4479, %r33, %r32, %r4494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r34, %r33, %r4494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r35, %r34, %r4494;
	// inline asm
	mov.u32 	%r4492, 0;
	// inline asm
	shf.r.wrap.b32 %r10945, %r4492, %r35, %r4494;
	// inline asm
	mov.u32 	%r39, %r4463;
	mov.u32 	%r35, %r4479;
	bra.uni 	BB1_416;

BB1_520:
	setp.eq.s32	%p522, %r43, 1;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p522 bra 	BB1_521;
	bra.uni 	BB1_601;

BB1_521:
	mov.u32 	%r5785, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r35, %r34, %r5785;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r34, %r33, %r5785;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r33, %r32, %r5785;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r32, %r39, %r5785;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r39, %r38, %r5785;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r38, %r37, %r5785;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r37, %r36, %r5785;
	// inline asm
	mov.u32 	%r5784, 0;
	// inline asm
	shf.r.wrap.b32 %r11065, %r36, %r5784, %r5785;
	// inline asm
	bra.uni 	BB1_601;

BB1_791:
	setp.eq.s32	%p674, %r6698, 2;
	@%p674 bra 	BB1_867;
	bra.uni 	BB1_792;

BB1_867:
	mov.u32 	%r7211, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r37, %r36, %r7211;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r38, %r37, %r7211;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r39, %r38, %r7211;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r32, %r39, %r7211;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r33, %r32, %r7211;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r34, %r33, %r7211;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r35, %r34, %r7211;
	// inline asm
	mov.u32 	%r7209, 0;
	// inline asm
	shf.r.wrap.b32 %r11065, %r7209, %r35, %r7211;
	// inline asm
	bra.uni 	BB1_868;

BB1_552:
	setp.eq.s32	%p499, %r43, 17;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p499 bra 	BB1_553;
	bra.uni 	BB1_601;

BB1_553:
	mov.u32 	%r5441, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r39, %r38, %r5441;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r38, %r37, %r5441;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r37, %r36, %r5441;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r36, %r11062, %r5441;
	// inline asm
	bra.uni 	BB1_557;

BB1_367:
	setp.eq.s32	%p294, %r41, 17;
	@%p294 bra 	BB1_368;
	bra.uni 	BB1_362;

BB1_368:
	mov.u32 	%r4214, 24;
	// inline asm
	shf.r.wrap.b32 %r39, %r33, %r32, %r4214;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r34, %r33, %r4214;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r35, %r34, %r4214;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r10945, %r35, %r4214;
	// inline asm
	bra.uni 	BB1_402;

BB1_535:
	setp.eq.s32	%p511, %r43, 9;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p511 bra 	BB1_536;
	bra.uni 	BB1_601;

BB1_536:
	mov.u32 	%r5597, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r33, %r32, %r5597;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r32, %r39, %r5597;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r39, %r38, %r5597;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r38, %r37, %r5597;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r37, %r36, %r5597;
	// inline asm
	mov.u32 	%r11064, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r36, %r11064, %r5597;
	// inline asm
	mov.u32 	%r11065, %r11064;
	bra.uni 	BB1_601;

BB1_823:
	setp.eq.s32	%p651, %r6698, 18;
	@%p651 bra 	BB1_859;
	bra.uni 	BB1_824;

BB1_859:
	mov.u32 	%r6879, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r33, %r32, %r6879;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r34, %r33, %r6879;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r35, %r34, %r6879;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r11065, %r35, %r6879;
	// inline asm
	bra.uni 	BB1_826;

BB1_351:
	setp.eq.s32	%p306, %r41, 9;
	@%p306 bra 	BB1_352;
	bra.uni 	BB1_362;

BB1_352:
	mov.u32 	%r4370, 24;
	// inline asm
	shf.r.wrap.b32 %r4347, %r39, %r38, %r4370;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r32, %r39, %r4370;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r33, %r32, %r4370;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r34, %r33, %r4370;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4363, %r35, %r34, %r4370;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r10945, %r35, %r4370;
	// inline asm
	mov.u32 	%r39, %r4347;
	mov.u32 	%r10946, %r10945;
	mov.u32 	%r35, %r4363;
	bra.uni 	BB1_416;

BB1_569:
	setp.eq.s32	%p488, %r43, 25;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p488 bra 	BB1_570;
	bra.uni 	BB1_601;

BB1_570:
	mov.u32 	%r5317, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r37, %r36, %r5317;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r36, %r11062, %r5317;
	// inline asm
	bra.uni 	BB1_574;

BB1_382:
	setp.eq.s32	%p283, %r41, 25;
	@%p283 bra 	BB1_383;
	bra.uni 	BB1_362;

BB1_383:
	mov.u32 	%r4090, 24;
	// inline asm
	shf.r.wrap.b32 %r39, %r35, %r34, %r4090;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r10941, %r35, %r4090;
	// inline asm
	bra.uni 	BB1_387;

BB1_527:
	setp.eq.s32	%p517, %r43, 5;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p517 bra 	BB1_528;
	bra.uni 	BB1_601;

BB1_528:
	mov.u32 	%r5687, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r34, %r33, %r5687;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r33, %r32, %r5687;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r32, %r39, %r5687;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r39, %r38, %r5687;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r38, %r37, %r5687;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r37, %r36, %r5687;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r36, %r11065, %r5687;
	// inline asm
	bra.uni 	BB1_601;

BB1_806:
	setp.eq.s32	%p663, %r6698, 10;
	@%p663 bra 	BB1_863;
	bra.uni 	BB1_807;

BB1_863:
	mov.u32 	%r7029, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r39, %r38, %r7029;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r32, %r39, %r7029;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r33, %r32, %r7029;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r34, %r33, %r7029;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r35, %r34, %r7029;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r11065, %r35, %r7029;
	// inline asm
	mov.u32 	%r11064, %r11065;
	bra.uni 	BB1_868;

BB1_343:
	setp.eq.s32	%p312, %r41, 5;
	@%p312 bra 	BB1_344;
	bra.uni 	BB1_362;

BB1_344:
	mov.u32 	%r4460, 24;
	// inline asm
	shf.r.wrap.b32 %r4433, %r38, %r37, %r4460;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r39, %r38, %r4460;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r32, %r39, %r4460;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r33, %r32, %r4460;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4449, %r34, %r33, %r4460;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r35, %r34, %r4460;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r10945, %r35, %r4460;
	// inline asm
	mov.u32 	%r39, %r4433;
	mov.u32 	%r35, %r4449;
	bra.uni 	BB1_416;

BB1_560:
	setp.eq.s32	%p494, %r43, 21;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p494 bra 	BB1_561;
	bra.uni 	BB1_601;

BB1_561:
	mov.u32 	%r5375, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r38, %r37, %r5375;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r37, %r36, %r5375;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r36, %r11062, %r5375;
	// inline asm
	bra.uni 	BB1_565;

BB1_374:
	setp.eq.s32	%p289, %r41, 21;
	@%p289 bra 	BB1_375;
	bra.uni 	BB1_362;

BB1_375:
	mov.u32 	%r4148, 24;
	// inline asm
	shf.r.wrap.b32 %r39, %r34, %r33, %r4148;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r35, %r34, %r4148;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r10941, %r35, %r4148;
	// inline asm
	bra.uni 	BB1_415;

BB1_542:
	setp.eq.s32	%p506, %r43, 13;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p506 bra 	BB1_543;
	bra.uni 	BB1_601;

BB1_543:
	mov.u32 	%r5515, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r32, %r39, %r5515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r39, %r38, %r5515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r38, %r37, %r5515;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r37, %r36, %r5515;
	// inline asm
	mov.u32 	%r11063, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r36, %r11063, %r5515;
	// inline asm
	bra.uni 	BB1_547;

BB1_839:
	setp.eq.s32	%p640, %r6698, 26;
	@%p640 bra 	BB1_855;
	bra.uni 	BB1_840;

BB1_855:
	mov.u32 	%r6761, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r35, %r34, %r6761;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r11069, %r35, %r6761;
	// inline asm
	bra.uni 	BB1_842;

BB1_358:
	setp.eq.s32	%p301, %r41, 13;
	@%p301 bra 	BB1_359;
	bra.uni 	BB1_362;

BB1_359:
	mov.u32 	%r4288, 24;
	// inline asm
	shf.r.wrap.b32 %r39, %r32, %r39, %r4288;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r33, %r32, %r4288;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r34, %r33, %r4288;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r35, %r34, %r4288;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r10945, %r35, %r4288;
	// inline asm
	bra.uni 	BB1_406;

BB1_578:
	setp.eq.s32	%p483, %r43, 29;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p483 bra 	BB1_579;
	bra.uni 	BB1_601;

BB1_579:
	mov.u32 	%r11062, 0;
	mov.u32 	%r5267, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r36, %r11062, %r5267;
	// inline asm
	bra.uni 	BB1_583;

BB1_390:
	setp.eq.s32	%p278, %r41, 29;
	@%p278 bra 	BB1_391;
	bra.uni 	BB1_362;

BB1_391:
	mov.u32 	%r10941, 0;
	mov.u32 	%r4040, 24;
	// inline asm
	shf.r.wrap.b32 %r39, %r10941, %r35, %r4040;
	// inline asm
	bra.uni 	BB1_414;

BB1_311:
	mov.u32 	%r3729, 24;
	// inline asm
	shf.r.wrap.b32 %r3698, %r37, %r36, %r3729;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r38, %r37, %r3729;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r39, %r38, %r3729;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r32, %r39, %r3729;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3714, %r33, %r32, %r3729;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10929, %r34, %r33, %r3729;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10928, %r35, %r34, %r3729;
	// inline asm
	mov.u32 	%r3727, 0;
	// inline asm
	shf.r.wrap.b32 %r10927, %r3727, %r35, %r3729;
	// inline asm
	mov.u32 	%r39, %r3698;
	mov.u32 	%r35, %r3714;
	bra.uni 	BB1_315;

BB1_238:
	setp.eq.s32	%p246, %r41, 3;
	@%p246 bra 	BB1_239;
	bra.uni 	BB1_261;

BB1_239:
	mov.u32 	%r3665, 8;
	// inline asm
	shf.r.wrap.b32 %r3634, %r37, %r36, %r3665;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r38, %r37, %r3665;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r39, %r38, %r3665;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r32, %r39, %r3665;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3650, %r33, %r32, %r3665;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10929, %r34, %r33, %r3665;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10928, %r35, %r34, %r3665;
	// inline asm
	mov.u32 	%r3663, 0;
	// inline asm
	shf.r.wrap.b32 %r10927, %r3663, %r35, %r3665;
	// inline asm
	mov.u32 	%r39, %r3634;
	mov.u32 	%r35, %r3650;
	bra.uni 	BB1_315;

BB1_523:
	setp.eq.s32	%p520, %r43, 3;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p520 bra 	BB1_524;
	bra.uni 	BB1_601;

BB1_524:
	mov.u32 	%r5721, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r35, %r34, %r5721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r34, %r33, %r5721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r33, %r32, %r5721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r32, %r39, %r5721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r39, %r38, %r5721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r38, %r37, %r5721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r37, %r36, %r5721;
	// inline asm
	mov.u32 	%r5720, 0;
	// inline asm
	shf.r.wrap.b32 %r11065, %r36, %r5720, %r5721;
	// inline asm
	bra.uni 	BB1_601;

BB1_798:
	setp.eq.s32	%p669, %r6698, 6;
	@%p669 bra 	BB1_865;
	bra.uni 	BB1_799;

BB1_865:
	mov.u32 	%r7116, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r38, %r37, %r7116;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r39, %r38, %r7116;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r32, %r39, %r7116;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r33, %r32, %r7116;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r34, %r33, %r7116;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r35, %r34, %r7116;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r11065, %r35, %r7116;
	// inline asm
	bra.uni 	BB1_868;

BB1_555:
	setp.eq.s32	%p497, %r43, 19;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p497 bra 	BB1_556;
	bra.uni 	BB1_601;

BB1_556:
	mov.u32 	%r5401, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r39, %r38, %r5401;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r38, %r37, %r5401;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r37, %r36, %r5401;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r36, %r11062, %r5401;
	// inline asm

BB1_557:
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	bra.uni 	BB1_601;

BB1_370:
	setp.eq.s32	%p292, %r41, 19;
	@%p292 bra 	BB1_371;
	bra.uni 	BB1_362;

BB1_371:
	mov.u32 	%r4174, 8;
	// inline asm
	shf.r.wrap.b32 %r39, %r33, %r32, %r4174;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r34, %r33, %r4174;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r35, %r34, %r4174;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r10945, %r35, %r4174;
	// inline asm

BB1_402:
	mov.u32 	%r10946, %r10945;
	mov.u32 	%r10947, %r10945;
	mov.u32 	%r35, %r10945;
	bra.uni 	BB1_416;

BB1_538:
	setp.eq.s32	%p509, %r43, 11;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p509 bra 	BB1_539;
	bra.uni 	BB1_601;

BB1_539:
	mov.u32 	%r5545, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r33, %r32, %r5545;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r32, %r39, %r5545;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r39, %r38, %r5545;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r38, %r37, %r5545;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r37, %r36, %r5545;
	// inline asm
	mov.u32 	%r11064, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r36, %r11064, %r5545;
	// inline asm
	mov.u32 	%r11065, %r11064;
	bra.uni 	BB1_601;

BB1_831:
	setp.eq.s32	%p646, %r6698, 22;
	@%p646 bra 	BB1_857;
	bra.uni 	BB1_832;

BB1_857:
	mov.u32 	%r6816, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r34, %r33, %r6816;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r35, %r34, %r6816;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r11069, %r35, %r6816;
	// inline asm
	bra.uni 	BB1_843;

BB1_354:
	setp.eq.s32	%p304, %r41, 11;
	@%p304 bra 	BB1_355;
	bra.uni 	BB1_362;

BB1_355:
	mov.u32 	%r4318, 8;
	// inline asm
	shf.r.wrap.b32 %r4295, %r39, %r38, %r4318;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r32, %r39, %r4318;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r33, %r32, %r4318;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r34, %r33, %r4318;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4311, %r35, %r34, %r4318;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r10945, %r35, %r4318;
	// inline asm
	mov.u32 	%r39, %r4295;
	mov.u32 	%r10946, %r10945;
	mov.u32 	%r35, %r4311;
	bra.uni 	BB1_416;

BB1_572:
	setp.eq.s32	%p486, %r43, 27;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p486 bra 	BB1_573;
	bra.uni 	BB1_601;

BB1_573:
	mov.u32 	%r5289, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r37, %r36, %r5289;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r36, %r11062, %r5289;
	// inline asm

BB1_574:
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	bra.uni 	BB1_575;

BB1_385:
	setp.eq.s32	%p281, %r41, 27;
	@%p281 bra 	BB1_386;
	bra.uni 	BB1_362;

BB1_386:
	mov.u32 	%r4062, 8;
	// inline asm
	shf.r.wrap.b32 %r39, %r35, %r34, %r4062;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r10941, %r35, %r4062;
	// inline asm

BB1_387:
	mov.u32 	%r10942, %r10941;
	bra.uni 	BB1_415;

BB1_530:
	setp.eq.s32	%p515, %r43, 7;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p515 bra 	BB1_531;
	bra.uni 	BB1_601;

BB1_531:
	mov.u32 	%r5629, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r34, %r33, %r5629;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r33, %r32, %r5629;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r32, %r39, %r5629;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r39, %r38, %r5629;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r38, %r37, %r5629;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r37, %r36, %r5629;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r36, %r11065, %r5629;
	// inline asm
	bra.uni 	BB1_601;

BB1_813:
	setp.eq.s32	%p658, %r6698, 14;
	@%p658 bra 	BB1_861;
	bra.uni 	BB1_814;

BB1_861:
	mov.u32 	%r6950, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r32, %r39, %r6950;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r33, %r32, %r6950;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r34, %r33, %r6950;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r35, %r34, %r6950;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r11065, %r35, %r6950;
	// inline asm
	bra.uni 	BB1_816;

BB1_346:
	setp.eq.s32	%p310, %r41, 7;
	@%p310 bra 	BB1_347;
	bra.uni 	BB1_362;

BB1_347:
	mov.u32 	%r4402, 8;
	// inline asm
	shf.r.wrap.b32 %r4375, %r38, %r37, %r4402;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r39, %r38, %r4402;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r32, %r39, %r4402;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r33, %r32, %r4402;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4391, %r34, %r33, %r4402;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r35, %r34, %r4402;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r10945, %r35, %r4402;
	// inline asm
	mov.u32 	%r39, %r4375;
	mov.u32 	%r35, %r4391;
	bra.uni 	BB1_416;

BB1_563:
	setp.eq.s32	%p492, %r43, 23;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p492 bra 	BB1_564;
	bra.uni 	BB1_601;

BB1_564:
	mov.u32 	%r5341, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r38, %r37, %r5341;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r37, %r36, %r5341;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r36, %r11062, %r5341;
	// inline asm

BB1_565:
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	mov.u32 	%r11069, %r11062;
	bra.uni 	BB1_601;

BB1_377:
	setp.eq.s32	%p287, %r41, 23;
	@%p287 bra 	BB1_378;
	bra.uni 	BB1_362;

BB1_378:
	mov.u32 	%r4114, 8;
	// inline asm
	shf.r.wrap.b32 %r39, %r34, %r33, %r4114;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r35, %r34, %r4114;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r10941, %r35, %r4114;
	// inline asm
	bra.uni 	BB1_415;

BB1_545:
	setp.eq.s32	%p504, %r43, 15;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p504 bra 	BB1_546;
	bra.uni 	BB1_601;

BB1_546:
	mov.u32 	%r5469, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r32, %r39, %r5469;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r39, %r38, %r5469;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r38, %r37, %r5469;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r37, %r36, %r5469;
	// inline asm
	mov.u32 	%r11063, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r36, %r11063, %r5469;
	// inline asm

BB1_547:
	mov.u32 	%r11064, %r11063;
	mov.u32 	%r11065, %r11063;
	bra.uni 	BB1_601;

BB1_848:
	setp.eq.s32	%p635, %r6698, 30;
	@%p635 bra 	BB1_852;
	bra.uni 	BB1_849;

BB1_852:
	mov.u32 	%r11069, 0;
	mov.u32 	%r6714, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r11069, %r35, %r6714;
	// inline asm
	bra.uni 	BB1_851;

BB1_361:
	setp.eq.s32	%p299, %r41, 15;
	@%p299 bra 	BB1_403;
	bra.uni 	BB1_362;

BB1_403:
	mov.u32 	%r4242, 8;
	// inline asm
	shf.r.wrap.b32 %r39, %r32, %r39, %r4242;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r33, %r32, %r4242;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r34, %r33, %r4242;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r35, %r34, %r4242;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r10945, %r35, %r4242;
	// inline asm

BB1_406:
	mov.u32 	%r10946, %r10945;
	mov.u32 	%r10947, %r10945;
	bra.uni 	BB1_416;

BB1_581:
	setp.ne.s32	%p481, %r43, 31;
	mov.u32 	%r11062, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11066, %r11065;
	mov.u32 	%r11067, %r11065;
	mov.u32 	%r11068, %r11065;
	mov.u32 	%r11069, %r11065;
	@%p481 bra 	BB1_601;

	mov.u32 	%r11062, 0;
	mov.u32 	%r5245, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r36, %r11062, %r5245;
	// inline asm

BB1_583:
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	mov.u32 	%r11067, %r11062;

BB1_575:
	mov.u32 	%r11068, %r11062;
	mov.u32 	%r11069, %r11062;

BB1_601:
	and.b32  	%r5787, %r40, 3;
	shl.b32 	%r5788, %r5787, 3;
	mov.u32 	%r5789, 1;
	shl.b32 	%r5790, %r5789, %r5788;
	add.s32 	%r822, %r5790, -1;
	neg.s32 	%r823, %r5790;
	shr.u32 	%r5786, %r41, 2;
	setp.gt.s32	%p523, %r5786, 3;
	@%p523 bra 	BB1_609;

	setp.gt.s32	%p529, %r5786, 1;
	@%p529 bra 	BB1_606;

	setp.eq.s32	%p532, %r5786, 0;
	@%p532 bra 	BB1_623;
	bra.uni 	BB1_604;

BB1_623:
	and.b32  	%r5805, %r822, %r35;
	and.b32  	%r5806, %r11066, %r823;
	or.b32  	%r11058, %r5806, %r5805;
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11059, %r11067;
	bra.uni 	BB1_624;

BB1_609:
	setp.gt.s32	%p524, %r5786, 5;
	@%p524 bra 	BB1_614;

	setp.eq.s32	%p527, %r5786, 4;
	@%p527 bra 	BB1_621;
	bra.uni 	BB1_611;

BB1_621:
	and.b32  	%r5797, %r822, %r39;
	and.b32  	%r5798, %r11062, %r823;
	or.b32  	%r11054, %r5798, %r5797;
	mov.u32 	%r11055, %r11063;
	bra.uni 	BB1_613;

BB1_606:
	setp.eq.s32	%p530, %r5786, 2;
	@%p530 bra 	BB1_622;
	bra.uni 	BB1_607;

BB1_622:
	and.b32  	%r5801, %r822, %r33;
	and.b32  	%r5802, %r11068, %r823;
	or.b32  	%r11060, %r5802, %r5801;
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	bra.uni 	BB1_625;

BB1_614:
	setp.eq.s32	%p525, %r5786, 6;
	@%p525 bra 	BB1_618;
	bra.uni 	BB1_615;

BB1_618:
	and.b32  	%r5793, %r822, %r37;
	and.b32  	%r5794, %r11064, %r823;
	or.b32  	%r11056, %r5794, %r5793;
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	bra.uni 	BB1_619;

BB1_604:
	setp.eq.s32	%p533, %r5786, 1;
	@%p533 bra 	BB1_605;
	bra.uni 	BB1_616;

BB1_605:
	and.b32  	%r5803, %r822, %r34;
	and.b32  	%r5804, %r11067, %r823;
	or.b32  	%r11059, %r5804, %r5803;
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11058, %r35;

BB1_624:
	mov.u32 	%r11060, %r11068;

BB1_625:
	mov.u32 	%r11061, %r11069;
	bra.uni 	BB1_626;

BB1_611:
	setp.eq.s32	%p528, %r5786, 5;
	@%p528 bra 	BB1_612;
	bra.uni 	BB1_616;

BB1_612:
	and.b32  	%r5795, %r822, %r38;
	and.b32  	%r5796, %r11063, %r823;
	or.b32  	%r11055, %r5796, %r5795;
	mov.u32 	%r11054, %r39;

BB1_613:
	mov.u32 	%r11056, %r11064;

BB1_619:
	mov.u32 	%r11057, %r11065;
	bra.uni 	BB1_620;

BB1_607:
	setp.eq.s32	%p531, %r5786, 3;
	@%p531 bra 	BB1_608;
	bra.uni 	BB1_616;

BB1_608:
	and.b32  	%r5799, %r822, %r32;
	and.b32  	%r5800, %r11069, %r823;
	or.b32  	%r11061, %r5800, %r5799;
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	bra.uni 	BB1_626;

BB1_615:
	setp.ne.s32	%p526, %r5786, 7;
	@%p526 bra 	BB1_616;

	and.b32  	%r5791, %r822, %r36;
	and.b32  	%r5792, %r11065, %r823;
	or.b32  	%r11057, %r5792, %r5791;
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	bra.uni 	BB1_620;

BB1_616:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;

BB1_620:
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11061, %r32;

BB1_626:
	sub.s32 	%r11070, %r23, %r43;
	bra.uni 	BB1_1015;

BB1_393:
	setp.ne.s32	%p276, %r41, 30;
	@%p276 bra 	BB1_362;

	mov.u32 	%r10941, 0;
	mov.u32 	%r4029, 16;
	// inline asm
	shf.r.wrap.b32 %r39, %r10941, %r35, %r4029;
	// inline asm

BB1_414:
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;

BB1_415:
	mov.u32 	%r10945, %r10941;
	mov.u32 	%r10946, %r10941;
	mov.u32 	%r10947, %r10941;
	mov.u32 	%r35, %r10941;
	bra.uni 	BB1_416;

BB1_362:
	mov.u32 	%r10941, %r39;
	mov.u32 	%r10942, %r38;
	mov.u32 	%r10943, %r37;
	mov.u32 	%r39, %r36;
	mov.u32 	%r10945, %r35;
	mov.u32 	%r10946, %r34;
	mov.u32 	%r10947, %r33;
	mov.u32 	%r35, %r32;

BB1_416:
	and.b32  	%r4571, %r40, 3;
	shl.b32 	%r4572, %r4571, 3;
	mov.u32 	%r4573, 1;
	shl.b32 	%r4574, %r4573, %r4572;
	add.s32 	%r595, %r4574, -1;
	shr.u32 	%r4570, %r41, 2;
	setp.gt.s32	%p316, %r4570, 3;
	@%p316 bra 	BB1_424;

	setp.gt.s32	%p322, %r4570, 1;
	@%p322 bra 	BB1_421;

	setp.eq.s32	%p325, %r4570, 0;
	@%p325 bra 	BB1_436;
	bra.uni 	BB1_419;

BB1_436:
	and.b32  	%r11066, %r11066, %r595;
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	mov.u32 	%r11067, %r11062;
	bra.uni 	BB1_437;

BB1_424:
	setp.gt.s32	%p317, %r4570, 5;
	@%p317 bra 	BB1_428;

	setp.eq.s32	%p320, %r4570, 4;
	@%p320 bra 	BB1_434;
	bra.uni 	BB1_426;

BB1_434:
	and.b32  	%r11062, %r11066, %r595;
	mov.u32 	%r11063, 0;
	mov.u32 	%r11064, %r11063;
	mov.u32 	%r11065, %r11063;
	bra.uni 	BB1_432;

BB1_421:
	setp.eq.s32	%p323, %r4570, 2;
	@%p323 bra 	BB1_435;
	bra.uni 	BB1_422;

BB1_435:
	and.b32  	%r11068, %r11066, %r595;
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	mov.u32 	%r11067, %r11066;
	bra.uni 	BB1_438;

BB1_428:
	setp.eq.s32	%p318, %r4570, 6;
	@%p318 bra 	BB1_433;
	bra.uni 	BB1_429;

BB1_433:
	and.b32  	%r11064, %r11066, %r595;
	mov.u32 	%r11065, 0;
	mov.u32 	%r11062, %r11066;
	mov.u32 	%r11063, %r11066;
	bra.uni 	BB1_432;

BB1_419:
	setp.eq.s32	%p326, %r4570, 1;
	@%p326 bra 	BB1_420;
	bra.uni 	BB1_430;

BB1_420:
	and.b32  	%r11067, %r11066, %r595;
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;

BB1_437:
	mov.u32 	%r11068, %r11062;

BB1_438:
	mov.u32 	%r11069, %r11062;
	bra.uni 	BB1_439;

BB1_426:
	setp.eq.s32	%p321, %r4570, 5;
	@%p321 bra 	BB1_427;
	bra.uni 	BB1_430;

BB1_427:
	and.b32  	%r11063, %r11066, %r595;
	mov.u32 	%r11064, 0;
	mov.u32 	%r11062, %r11066;
	mov.u32 	%r11065, %r11064;
	bra.uni 	BB1_432;

BB1_422:
	setp.eq.s32	%p324, %r4570, 3;
	@%p324 bra 	BB1_423;
	bra.uni 	BB1_430;

BB1_423:
	and.b32  	%r11069, %r11066, %r595;
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	mov.u32 	%r11067, %r11066;
	mov.u32 	%r11068, %r11066;
	bra.uni 	BB1_439;

BB1_429:
	setp.ne.s32	%p319, %r4570, 7;
	@%p319 bra 	BB1_430;

	and.b32  	%r11065, %r11066, %r595;
	mov.u32 	%r11062, %r11066;
	mov.u32 	%r11063, %r11066;
	mov.u32 	%r11064, %r11066;
	bra.uni 	BB1_432;

BB1_430:
	mov.u32 	%r11062, %r11066;
	mov.u32 	%r11063, %r11066;
	mov.u32 	%r11064, %r11066;
	mov.u32 	%r11065, %r11066;

BB1_432:
	mov.u32 	%r11067, %r11066;
	mov.u32 	%r11068, %r11066;
	mov.u32 	%r11069, %r11066;

BB1_439:
	or.b32  	%r11058, %r11066, %r10945;
	or.b32  	%r11059, %r11067, %r10946;
	or.b32  	%r11060, %r11068, %r10947;
	or.b32  	%r11061, %r11069, %r35;
	or.b32  	%r11054, %r11062, %r10941;
	or.b32  	%r11055, %r11063, %r10942;
	or.b32  	%r11056, %r11064, %r10943;
	or.b32  	%r11057, %r11065, %r39;
	bra.uni 	BB1_1015;

BB1_117:
	setp.eq.s32	%p176, %r41, 1;
	@%p176 bra 	BB1_118;
	bra.uni 	BB1_195;

BB1_118:
	mov.u32 	%r3131, 24;
	// inline asm
	shf.r.wrap.b32 %r11065, %r37, %r36, %r3131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r38, %r37, %r3131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r39, %r38, %r3131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r32, %r39, %r3131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r33, %r32, %r3131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r34, %r33, %r3131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r35, %r34, %r3131;
	// inline asm
	mov.u32 	%r3129, 0;
	// inline asm
	shf.r.wrap.b32 %r11066, %r3129, %r35, %r3131;
	// inline asm
	bra.uni 	BB1_195;

BB1_149:
	setp.eq.s32	%p153, %r41, 17;
	@%p153 bra 	BB1_150;
	bra.uni 	BB1_195;

BB1_150:
	mov.u32 	%r2787, 24;
	// inline asm
	shf.r.wrap.b32 %r11065, %r33, %r32, %r2787;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r34, %r33, %r2787;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r35, %r34, %r2787;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r11066, %r35, %r2787;
	// inline asm
	bra.uni 	BB1_187;

BB1_132:
	setp.eq.s32	%p165, %r41, 9;
	@%p165 bra 	BB1_133;
	bra.uni 	BB1_195;

BB1_133:
	mov.u32 	%r2943, 24;
	// inline asm
	shf.r.wrap.b32 %r11065, %r39, %r38, %r2943;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r32, %r39, %r2943;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r33, %r32, %r2943;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r34, %r33, %r2943;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r35, %r34, %r2943;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r11066, %r35, %r2943;
	// inline asm
	mov.u32 	%r11067, %r11066;
	bra.uni 	BB1_195;

BB1_164:
	setp.eq.s32	%p142, %r41, 25;
	@%p142 bra 	BB1_165;
	bra.uni 	BB1_195;

BB1_165:
	mov.u32 	%r2663, 24;
	// inline asm
	shf.r.wrap.b32 %r11065, %r35, %r34, %r2663;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r11062, %r35, %r2663;
	// inline asm
	bra.uni 	BB1_169;

BB1_124:
	setp.eq.s32	%p171, %r41, 5;
	@%p171 bra 	BB1_125;
	bra.uni 	BB1_195;

BB1_125:
	mov.u32 	%r3033, 24;
	// inline asm
	shf.r.wrap.b32 %r11065, %r38, %r37, %r3033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r39, %r38, %r3033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r32, %r39, %r3033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r33, %r32, %r3033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r34, %r33, %r3033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r35, %r34, %r3033;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r11066, %r35, %r3033;
	// inline asm
	bra.uni 	BB1_195;

BB1_156:
	setp.eq.s32	%p148, %r41, 21;
	@%p148 bra 	BB1_157;
	bra.uni 	BB1_195;

BB1_157:
	mov.u32 	%r2721, 24;
	// inline asm
	shf.r.wrap.b32 %r11065, %r34, %r33, %r2721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r35, %r34, %r2721;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r11062, %r35, %r2721;
	// inline asm
	bra.uni 	BB1_180;

BB1_139:
	setp.eq.s32	%p160, %r41, 13;
	@%p160 bra 	BB1_140;
	bra.uni 	BB1_195;

BB1_140:
	mov.u32 	%r2861, 24;
	// inline asm
	shf.r.wrap.b32 %r11065, %r32, %r39, %r2861;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r33, %r32, %r2861;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r34, %r33, %r2861;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r35, %r34, %r2861;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r11066, %r35, %r2861;
	// inline asm
	bra.uni 	BB1_144;

BB1_172:
	setp.eq.s32	%p137, %r41, 29;
	@%p137 bra 	BB1_173;
	bra.uni 	BB1_195;

BB1_173:
	mov.u32 	%r11062, 0;
	mov.u32 	%r2613, 24;
	// inline asm
	shf.r.wrap.b32 %r11065, %r11062, %r35, %r2613;
	// inline asm
	bra.uni 	BB1_177;

BB1_266:
	setp.eq.s32	%p225, %r41, 17;
	@%p225 bra 	BB1_267;
	bra.uni 	BB1_261;

BB1_267:
	mov.u32 	%r3385, 24;
	// inline asm
	shf.r.wrap.b32 %r39, %r33, %r32, %r3385;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r34, %r33, %r3385;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r35, %r34, %r3385;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r10923, %r10927, %r35, %r3385;
	// inline asm
	bra.uni 	BB1_301;

BB1_250:
	setp.eq.s32	%p237, %r41, 9;
	@%p237 bra 	BB1_251;
	bra.uni 	BB1_261;

BB1_251:
	mov.u32 	%r3541, 24;
	// inline asm
	shf.r.wrap.b32 %r3518, %r39, %r38, %r3541;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r32, %r39, %r3541;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r33, %r32, %r3541;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r34, %r33, %r3541;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3534, %r35, %r34, %r3541;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r10929, %r10927, %r35, %r3541;
	// inline asm
	mov.u32 	%r39, %r3518;
	mov.u32 	%r10928, %r10927;
	mov.u32 	%r35, %r3534;
	bra.uni 	BB1_315;

BB1_281:
	setp.eq.s32	%p214, %r41, 25;
	@%p214 bra 	BB1_282;
	bra.uni 	BB1_261;

BB1_282:
	mov.u32 	%r3261, 24;
	// inline asm
	shf.r.wrap.b32 %r39, %r35, %r34, %r3261;
	// inline asm
	mov.u32 	%r10923, 0;
	// inline asm
	shf.r.wrap.b32 %r10925, %r10923, %r35, %r3261;
	// inline asm
	bra.uni 	BB1_286;

BB1_242:
	setp.eq.s32	%p243, %r41, 5;
	@%p243 bra 	BB1_243;
	bra.uni 	BB1_261;

BB1_243:
	mov.u32 	%r3631, 24;
	// inline asm
	shf.r.wrap.b32 %r3604, %r38, %r37, %r3631;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r39, %r38, %r3631;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r32, %r39, %r3631;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r33, %r32, %r3631;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3620, %r34, %r33, %r3631;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10929, %r35, %r34, %r3631;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r10928, %r10927, %r35, %r3631;
	// inline asm
	mov.u32 	%r39, %r3604;
	mov.u32 	%r35, %r3620;
	bra.uni 	BB1_315;

BB1_273:
	setp.eq.s32	%p220, %r41, 21;
	@%p220 bra 	BB1_274;
	bra.uni 	BB1_261;

BB1_274:
	mov.u32 	%r3319, 24;
	// inline asm
	shf.r.wrap.b32 %r39, %r34, %r33, %r3319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r35, %r34, %r3319;
	// inline asm
	mov.u32 	%r10923, 0;
	// inline asm
	shf.r.wrap.b32 %r10924, %r10923, %r35, %r3319;
	// inline asm
	bra.uni 	BB1_314;

BB1_257:
	setp.eq.s32	%p232, %r41, 13;
	@%p232 bra 	BB1_258;
	bra.uni 	BB1_261;

BB1_258:
	mov.u32 	%r3459, 24;
	// inline asm
	shf.r.wrap.b32 %r39, %r32, %r39, %r3459;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r33, %r32, %r3459;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r34, %r33, %r3459;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r35, %r34, %r3459;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r10927, %r35, %r3459;
	// inline asm
	bra.uni 	BB1_305;

BB1_289:
	setp.eq.s32	%p209, %r41, 29;
	@%p209 bra 	BB1_290;
	bra.uni 	BB1_261;

BB1_290:
	mov.u32 	%r10923, 0;
	mov.u32 	%r3211, 24;
	// inline asm
	shf.r.wrap.b32 %r39, %r10923, %r35, %r3211;
	// inline asm
	bra.uni 	BB1_313;

BB1_120:
	setp.eq.s32	%p174, %r41, 3;
	@%p174 bra 	BB1_121;
	bra.uni 	BB1_195;

BB1_121:
	mov.u32 	%r3067, 8;
	// inline asm
	shf.r.wrap.b32 %r11065, %r37, %r36, %r3067;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r38, %r37, %r3067;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r39, %r38, %r3067;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r32, %r39, %r3067;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r33, %r32, %r3067;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r34, %r33, %r3067;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r35, %r34, %r3067;
	// inline asm
	mov.u32 	%r3065, 0;
	// inline asm
	shf.r.wrap.b32 %r11066, %r3065, %r35, %r3067;
	// inline asm
	bra.uni 	BB1_195;

BB1_152:
	setp.eq.s32	%p151, %r41, 19;
	@%p151 bra 	BB1_153;
	bra.uni 	BB1_195;

BB1_153:
	mov.u32 	%r2747, 8;
	// inline asm
	shf.r.wrap.b32 %r11065, %r33, %r32, %r2747;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r34, %r33, %r2747;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r35, %r34, %r2747;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r11066, %r35, %r2747;
	// inline asm

BB1_187:
	mov.u32 	%r11067, %r11066;
	mov.u32 	%r11068, %r11066;
	mov.u32 	%r11069, %r11066;
	bra.uni 	BB1_195;

BB1_135:
	setp.eq.s32	%p163, %r41, 11;
	@%p163 bra 	BB1_136;
	bra.uni 	BB1_195;

BB1_136:
	mov.u32 	%r2891, 8;
	// inline asm
	shf.r.wrap.b32 %r11065, %r39, %r38, %r2891;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r32, %r39, %r2891;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r33, %r32, %r2891;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r34, %r33, %r2891;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r35, %r34, %r2891;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r11066, %r35, %r2891;
	// inline asm
	mov.u32 	%r11067, %r11066;
	bra.uni 	BB1_195;

BB1_167:
	setp.eq.s32	%p140, %r41, 27;
	@%p140 bra 	BB1_168;
	bra.uni 	BB1_195;

BB1_168:
	mov.u32 	%r2635, 8;
	// inline asm
	shf.r.wrap.b32 %r11065, %r35, %r34, %r2635;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r11062, %r35, %r2635;
	// inline asm

BB1_169:
	mov.u32 	%r11063, %r11062;
	bra.uni 	BB1_180;

BB1_127:
	setp.eq.s32	%p169, %r41, 7;
	@%p169 bra 	BB1_128;
	bra.uni 	BB1_195;

BB1_128:
	mov.u32 	%r2975, 8;
	// inline asm
	shf.r.wrap.b32 %r11065, %r38, %r37, %r2975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r39, %r38, %r2975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r32, %r39, %r2975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r33, %r32, %r2975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r34, %r33, %r2975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r35, %r34, %r2975;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r11066, %r35, %r2975;
	// inline asm
	bra.uni 	BB1_195;

BB1_159:
	setp.eq.s32	%p146, %r41, 23;
	@%p146 bra 	BB1_160;
	bra.uni 	BB1_195;

BB1_160:
	mov.u32 	%r2687, 8;
	// inline asm
	shf.r.wrap.b32 %r11065, %r34, %r33, %r2687;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r35, %r34, %r2687;
	// inline asm
	mov.u32 	%r11062, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r11062, %r35, %r2687;
	// inline asm
	bra.uni 	BB1_180;

BB1_142:
	setp.eq.s32	%p158, %r41, 15;
	@%p158 bra 	BB1_143;
	bra.uni 	BB1_195;

BB1_143:
	mov.u32 	%r2815, 8;
	// inline asm
	shf.r.wrap.b32 %r11065, %r32, %r39, %r2815;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r33, %r32, %r2815;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r34, %r33, %r2815;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r35, %r34, %r2815;
	// inline asm
	mov.u32 	%r11066, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r11066, %r35, %r2815;
	// inline asm

BB1_144:
	mov.u32 	%r11067, %r11066;
	mov.u32 	%r11068, %r11066;
	bra.uni 	BB1_195;

BB1_175:
	setp.ne.s32	%p135, %r41, 31;
	@%p135 bra 	BB1_195;

	mov.u32 	%r11062, 0;
	mov.u32 	%r2591, 8;
	// inline asm
	shf.r.wrap.b32 %r11065, %r11062, %r35, %r2591;
	// inline asm

BB1_177:
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;

BB1_180:
	mov.u32 	%r11066, %r11062;
	mov.u32 	%r11067, %r11062;
	mov.u32 	%r11068, %r11062;
	mov.u32 	%r11069, %r11062;

BB1_195:
	and.b32  	%r3133, %r23, 3;
	shl.b32 	%r3134, %r3133, 3;
	mov.u32 	%r3135, -1;
	shl.b32 	%r207, %r3135, %r3134;
	shr.u32 	%r3132, %r23, 2;
	setp.gt.s32	%p177, %r3132, 3;
	@%p177 bra 	BB1_203;

	setp.gt.s32	%p183, %r3132, 1;
	@%p183 bra 	BB1_200;

	setp.eq.s32	%p186, %r3132, 0;
	@%p186 bra 	BB1_214;
	bra.uni 	BB1_198;

BB1_214:
	and.b32  	%r11066, %r11066, %r207;
	bra.uni 	BB1_215;

BB1_203:
	setp.gt.s32	%p178, %r3132, 5;
	@%p178 bra 	BB1_207;

	setp.eq.s32	%p181, %r3132, 4;
	@%p181 bra 	BB1_212;
	bra.uni 	BB1_205;

BB1_212:
	and.b32  	%r11062, %r11062, %r207;
	mov.u32 	%r11066, 0;
	mov.u32 	%r11067, %r11066;
	mov.u32 	%r11068, %r11066;
	mov.u32 	%r11069, %r11066;
	bra.uni 	BB1_215;

BB1_200:
	setp.eq.s32	%p184, %r3132, 2;
	@%p184 bra 	BB1_213;
	bra.uni 	BB1_201;

BB1_213:
	and.b32  	%r11068, %r11068, %r207;
	mov.u32 	%r11066, 0;
	mov.u32 	%r11067, %r11066;
	bra.uni 	BB1_215;

BB1_207:
	setp.eq.s32	%p179, %r3132, 6;
	@%p179 bra 	BB1_210;
	bra.uni 	BB1_208;

BB1_210:
	and.b32  	%r11064, %r11064, %r207;
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	bra.uni 	BB1_211;

BB1_198:
	setp.eq.s32	%p187, %r3132, 1;
	@%p187 bra 	BB1_199;
	bra.uni 	BB1_215;

BB1_199:
	and.b32  	%r11067, %r11067, %r207;
	mov.u32 	%r11066, 0;
	bra.uni 	BB1_215;

BB1_205:
	setp.eq.s32	%p182, %r3132, 5;
	@%p182 bra 	BB1_206;
	bra.uni 	BB1_215;

BB1_206:
	and.b32  	%r11063, %r11063, %r207;
	mov.u32 	%r11062, 0;
	bra.uni 	BB1_211;

BB1_201:
	setp.eq.s32	%p185, %r3132, 3;
	@%p185 bra 	BB1_202;
	bra.uni 	BB1_215;

BB1_202:
	and.b32  	%r11069, %r11069, %r207;
	mov.u32 	%r11066, 0;
	mov.u32 	%r11067, %r11066;
	mov.u32 	%r11068, %r11066;
	bra.uni 	BB1_215;

BB1_208:
	setp.ne.s32	%p180, %r3132, 7;
	@%p180 bra 	BB1_215;

	and.b32  	%r11065, %r11065, %r207;
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;

BB1_211:
	mov.u32 	%r11066, %r11062;
	mov.u32 	%r11067, %r11062;
	mov.u32 	%r11068, %r11062;
	mov.u32 	%r11069, %r11062;

BB1_215:
	or.b32  	%r11058, %r11066, %r35;
	or.b32  	%r11059, %r11067, %r34;
	or.b32  	%r11060, %r11068, %r33;
	or.b32  	%r11061, %r11069, %r32;
	or.b32  	%r11054, %r11062, %r39;
	or.b32  	%r11055, %r11063, %r38;
	or.b32  	%r11056, %r11064, %r37;
	or.b32  	%r11057, %r11065, %r36;
	bra.uni 	BB1_1015;

BB1_269:
	setp.eq.s32	%p223, %r41, 19;
	@%p223 bra 	BB1_270;
	bra.uni 	BB1_261;

BB1_270:
	mov.u32 	%r3345, 8;
	// inline asm
	shf.r.wrap.b32 %r39, %r33, %r32, %r3345;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r34, %r33, %r3345;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r35, %r34, %r3345;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r10923, %r10927, %r35, %r3345;
	// inline asm

BB1_301:
	mov.u32 	%r10928, %r10927;
	mov.u32 	%r10929, %r10927;
	mov.u32 	%r35, %r10927;
	bra.uni 	BB1_315;

BB1_253:
	setp.eq.s32	%p235, %r41, 11;
	@%p235 bra 	BB1_254;
	bra.uni 	BB1_261;

BB1_254:
	mov.u32 	%r3489, 8;
	// inline asm
	shf.r.wrap.b32 %r3466, %r39, %r38, %r3489;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r32, %r39, %r3489;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r33, %r32, %r3489;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r34, %r33, %r3489;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3482, %r35, %r34, %r3489;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r10929, %r10927, %r35, %r3489;
	// inline asm
	mov.u32 	%r39, %r3466;
	mov.u32 	%r10928, %r10927;
	mov.u32 	%r35, %r3482;
	bra.uni 	BB1_315;

BB1_284:
	setp.eq.s32	%p212, %r41, 27;
	@%p212 bra 	BB1_285;
	bra.uni 	BB1_261;

BB1_285:
	mov.u32 	%r3233, 8;
	// inline asm
	shf.r.wrap.b32 %r39, %r35, %r34, %r3233;
	// inline asm
	mov.u32 	%r10923, 0;
	// inline asm
	shf.r.wrap.b32 %r10925, %r10923, %r35, %r3233;
	// inline asm

BB1_286:
	mov.u32 	%r10924, %r10923;
	bra.uni 	BB1_314;

BB1_245:
	setp.eq.s32	%p241, %r41, 7;
	@%p241 bra 	BB1_246;
	bra.uni 	BB1_261;

BB1_246:
	mov.u32 	%r3573, 8;
	// inline asm
	shf.r.wrap.b32 %r3546, %r38, %r37, %r3573;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r39, %r38, %r3573;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r32, %r39, %r3573;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r33, %r32, %r3573;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3562, %r34, %r33, %r3573;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10929, %r35, %r34, %r3573;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r10928, %r10927, %r35, %r3573;
	// inline asm
	mov.u32 	%r39, %r3546;
	mov.u32 	%r35, %r3562;
	bra.uni 	BB1_315;

BB1_276:
	setp.eq.s32	%p218, %r41, 23;
	@%p218 bra 	BB1_277;
	bra.uni 	BB1_261;

BB1_277:
	mov.u32 	%r3285, 8;
	// inline asm
	shf.r.wrap.b32 %r39, %r34, %r33, %r3285;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r35, %r34, %r3285;
	// inline asm
	mov.u32 	%r10923, 0;
	// inline asm
	shf.r.wrap.b32 %r10924, %r10923, %r35, %r3285;
	// inline asm
	bra.uni 	BB1_314;

BB1_260:
	setp.eq.s32	%p230, %r41, 15;
	@%p230 bra 	BB1_302;
	bra.uni 	BB1_261;

BB1_302:
	mov.u32 	%r3413, 8;
	// inline asm
	shf.r.wrap.b32 %r39, %r32, %r39, %r3413;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10925, %r33, %r32, %r3413;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10924, %r34, %r33, %r3413;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10923, %r35, %r34, %r3413;
	// inline asm
	mov.u32 	%r10927, 0;
	// inline asm
	shf.r.wrap.b32 %r35, %r10927, %r35, %r3413;
	// inline asm

BB1_305:
	mov.u32 	%r10928, %r10927;
	mov.u32 	%r10929, %r10927;
	bra.uni 	BB1_315;

BB1_292:
	setp.ne.s32	%p207, %r41, 30;
	@%p207 bra 	BB1_261;

	mov.u32 	%r10923, 0;
	mov.u32 	%r3200, 16;
	// inline asm
	shf.r.wrap.b32 %r39, %r10923, %r35, %r3200;
	// inline asm

BB1_313:
	mov.u32 	%r10924, %r10923;
	mov.u32 	%r10925, %r10923;

BB1_314:
	mov.u32 	%r10927, %r10923;
	mov.u32 	%r10928, %r10923;
	mov.u32 	%r10929, %r10923;
	mov.u32 	%r35, %r10923;
	bra.uni 	BB1_315;

BB1_261:
	mov.u32 	%r10923, %r39;
	mov.u32 	%r10924, %r38;
	mov.u32 	%r10925, %r37;
	mov.u32 	%r39, %r36;
	mov.u32 	%r10927, %r35;
	mov.u32 	%r10928, %r34;
	mov.u32 	%r10929, %r33;
	mov.u32 	%r35, %r32;

BB1_315:
	or.b32  	%r11058, %r10927, %r11066;
	or.b32  	%r11059, %r10928, %r11067;
	or.b32  	%r11060, %r10929, %r11068;
	or.b32  	%r11061, %r35, %r11069;
	or.b32  	%r11054, %r10923, %r11062;
	or.b32  	%r11055, %r10924, %r11063;
	or.b32  	%r11056, %r10925, %r11064;
	or.b32  	%r11057, %r39, %r11065;
	bra.uni 	BB1_1015;

BB1_789:
	setp.eq.s32	%p677, %r6698, 1;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p677 bra 	BB1_790;
	bra.uni 	BB1_868;

BB1_790:
	mov.u32 	%r7243, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r37, %r36, %r7243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r38, %r37, %r7243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r39, %r38, %r7243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r32, %r39, %r7243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r33, %r32, %r7243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r34, %r33, %r7243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r35, %r34, %r7243;
	// inline asm
	mov.u32 	%r7241, 0;
	// inline asm
	shf.r.wrap.b32 %r11065, %r7241, %r35, %r7243;
	// inline asm
	bra.uni 	BB1_868;

BB1_821:
	setp.eq.s32	%p654, %r6698, 17;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p654 bra 	BB1_822;
	bra.uni 	BB1_868;

BB1_822:
	mov.u32 	%r6899, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r33, %r32, %r6899;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r34, %r33, %r6899;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r35, %r34, %r6899;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r11065, %r35, %r6899;
	// inline asm
	bra.uni 	BB1_826;

BB1_804:
	setp.eq.s32	%p666, %r6698, 9;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p666 bra 	BB1_805;
	bra.uni 	BB1_868;

BB1_805:
	mov.u32 	%r7055, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r39, %r38, %r7055;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r32, %r39, %r7055;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r33, %r32, %r7055;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r34, %r33, %r7055;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r35, %r34, %r7055;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r11065, %r35, %r7055;
	// inline asm
	mov.u32 	%r11064, %r11065;
	bra.uni 	BB1_868;

BB1_837:
	setp.eq.s32	%p643, %r6698, 25;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p643 bra 	BB1_838;
	bra.uni 	BB1_868;

BB1_838:
	mov.u32 	%r6775, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r35, %r34, %r6775;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r11069, %r35, %r6775;
	// inline asm
	bra.uni 	BB1_842;

BB1_796:
	setp.eq.s32	%p672, %r6698, 5;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p672 bra 	BB1_797;
	bra.uni 	BB1_868;

BB1_797:
	mov.u32 	%r7145, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r38, %r37, %r7145;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r39, %r38, %r7145;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r32, %r39, %r7145;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r33, %r32, %r7145;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r34, %r33, %r7145;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r35, %r34, %r7145;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r11065, %r35, %r7145;
	// inline asm
	bra.uni 	BB1_868;

BB1_829:
	setp.eq.s32	%p649, %r6698, 21;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p649 bra 	BB1_830;
	bra.uni 	BB1_868;

BB1_830:
	mov.u32 	%r6833, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r34, %r33, %r6833;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r35, %r34, %r6833;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r11069, %r35, %r6833;
	// inline asm
	bra.uni 	BB1_843;

BB1_811:
	setp.eq.s32	%p661, %r6698, 13;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p661 bra 	BB1_812;
	bra.uni 	BB1_868;

BB1_812:
	mov.u32 	%r6973, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r32, %r39, %r6973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r33, %r32, %r6973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r34, %r33, %r6973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r35, %r34, %r6973;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r11065, %r35, %r6973;
	// inline asm
	bra.uni 	BB1_816;

BB1_846:
	setp.eq.s32	%p638, %r6698, 29;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p638 bra 	BB1_847;
	bra.uni 	BB1_868;

BB1_847:
	mov.u32 	%r11069, 0;
	mov.u32 	%r6725, 24;
	// inline asm
	shf.r.wrap.b32 %r11066, %r11069, %r35, %r6725;
	// inline asm
	bra.uni 	BB1_851;

BB1_792:
	setp.eq.s32	%p675, %r6698, 3;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p675 bra 	BB1_793;
	bra.uni 	BB1_868;

BB1_793:
	mov.u32 	%r7179, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r37, %r36, %r7179;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r38, %r37, %r7179;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r39, %r38, %r7179;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r32, %r39, %r7179;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r33, %r32, %r7179;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r34, %r33, %r7179;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r35, %r34, %r7179;
	// inline asm
	mov.u32 	%r7177, 0;
	// inline asm
	shf.r.wrap.b32 %r11065, %r7177, %r35, %r7179;
	// inline asm
	bra.uni 	BB1_868;

BB1_824:
	setp.eq.s32	%p652, %r6698, 19;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p652 bra 	BB1_825;
	bra.uni 	BB1_868;

BB1_825:
	mov.u32 	%r6859, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r33, %r32, %r6859;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r34, %r33, %r6859;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r35, %r34, %r6859;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11069, %r11065, %r35, %r6859;
	// inline asm

BB1_826:
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11063, %r11065;
	mov.u32 	%r11062, %r11065;
	bra.uni 	BB1_868;

BB1_807:
	setp.eq.s32	%p664, %r6698, 11;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p664 bra 	BB1_808;
	bra.uni 	BB1_868;

BB1_808:
	mov.u32 	%r7003, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r39, %r38, %r7003;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r32, %r39, %r7003;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r33, %r32, %r7003;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r34, %r33, %r7003;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r35, %r34, %r7003;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11063, %r11065, %r35, %r7003;
	// inline asm
	mov.u32 	%r11064, %r11065;
	bra.uni 	BB1_868;

BB1_840:
	setp.eq.s32	%p641, %r6698, 27;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p641 bra 	BB1_841;
	bra.uni 	BB1_868;

BB1_841:
	mov.u32 	%r6747, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r35, %r34, %r6747;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11067, %r11069, %r35, %r6747;
	// inline asm

BB1_842:
	mov.u32 	%r11068, %r11069;
	bra.uni 	BB1_843;

BB1_799:
	setp.eq.s32	%p670, %r6698, 7;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p670 bra 	BB1_800;
	bra.uni 	BB1_868;

BB1_800:
	mov.u32 	%r7087, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r38, %r37, %r7087;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r39, %r38, %r7087;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r32, %r39, %r7087;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r33, %r32, %r7087;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r34, %r33, %r7087;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r35, %r34, %r7087;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11064, %r11065, %r35, %r7087;
	// inline asm
	bra.uni 	BB1_868;

BB1_832:
	setp.eq.s32	%p647, %r6698, 23;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p647 bra 	BB1_833;
	bra.uni 	BB1_868;

BB1_833:
	mov.u32 	%r6799, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r34, %r33, %r6799;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r35, %r34, %r6799;
	// inline asm
	mov.u32 	%r11069, 0;
	// inline asm
	shf.r.wrap.b32 %r11068, %r11069, %r35, %r6799;
	// inline asm
	bra.uni 	BB1_843;

BB1_814:
	setp.eq.s32	%p659, %r6698, 15;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p659 bra 	BB1_815;
	bra.uni 	BB1_868;

BB1_815:
	mov.u32 	%r6927, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r32, %r39, %r6927;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r33, %r32, %r6927;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r34, %r33, %r6927;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r35, %r34, %r6927;
	// inline asm
	mov.u32 	%r11065, 0;
	// inline asm
	shf.r.wrap.b32 %r11062, %r11065, %r35, %r6927;
	// inline asm

BB1_816:
	mov.u32 	%r11064, %r11065;
	mov.u32 	%r11063, %r11065;
	bra.uni 	BB1_868;

BB1_849:
	setp.ne.s32	%p636, %r6698, 31;
	mov.u32 	%r11069, %r11012;
	mov.u32 	%r11068, %r11012;
	mov.u32 	%r11067, %r11012;
	mov.u32 	%r11066, %r11012;
	mov.u32 	%r11065, %r11012;
	mov.u32 	%r11064, %r11012;
	mov.u32 	%r11063, %r11012;
	mov.u32 	%r11062, %r11012;
	@%p636 bra 	BB1_868;

	mov.u32 	%r11069, 0;
	mov.u32 	%r6703, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r11069, %r35, %r6703;
	// inline asm

BB1_851:
	mov.u32 	%r11068, %r11069;
	mov.u32 	%r11067, %r11069;

BB1_843:
	mov.u32 	%r11065, %r11069;
	mov.u32 	%r11064, %r11069;
	mov.u32 	%r11063, %r11069;
	mov.u32 	%r11062, %r11069;

BB1_868:
	// inline asm
	prmt.b32 %r7244, %r11066, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7246, %r11067, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7248, %r11068, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7250, %r11069, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7252, %r11062, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7254, %r11063, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7256, %r11064, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7258, %r11065, 0, 0x0123;
	// inline asm
	shr.u32 	%r7268, %r23, 2;
	setp.gt.s32	%p678, %r7268, 3;
	@%p678 bra 	BB1_876;

	setp.gt.s32	%p684, %r7268, 1;
	@%p684 bra 	BB1_873;

	setp.eq.s32	%p687, %r7268, 0;
	@%p687 bra 	BB1_886;
	bra.uni 	BB1_871;

BB1_886:
	and.b32  	%r7483, %r23, 3;
	mov.u32 	%r7484, 4;
	sub.s32 	%r7485, %r7484, %r7483;
	shl.b32 	%r7486, %r7485, 2;
	mov.u32 	%r7487, 1985229328;
	shr.u32 	%r7488, %r7487, %r7486;
	and.b32  	%r7482, %r7488, 65535;
	// inline asm
	prmt.b32 %r11019, %r7256, %r7258, %r7482;
	// inline asm
	// inline asm
	prmt.b32 %r11018, %r7254, %r7256, %r7482;
	// inline asm
	// inline asm
	prmt.b32 %r11017, %r7252, %r7254, %r7482;
	// inline asm
	// inline asm
	prmt.b32 %r11016, %r7250, %r7252, %r7482;
	// inline asm
	// inline asm
	prmt.b32 %r11015, %r7248, %r7250, %r7482;
	// inline asm
	// inline asm
	prmt.b32 %r11014, %r7246, %r7248, %r7482;
	// inline asm
	// inline asm
	prmt.b32 %r11013, %r7244, %r7246, %r7482;
	// inline asm
	mov.u32 	%r7480, 0;
	// inline asm
	prmt.b32 %r11012, %r7480, %r7244, %r7482;
	// inline asm
	bra.uni 	BB1_887;

BB1_876:
	setp.gt.s32	%p679, %r7268, 5;
	@%p679 bra 	BB1_880;

	setp.eq.s32	%p682, %r7268, 4;
	@%p682 bra 	BB1_884;
	bra.uni 	BB1_878;

BB1_884:
	and.b32  	%r7349, %r23, 3;
	mov.u32 	%r7350, 4;
	sub.s32 	%r7351, %r7350, %r7349;
	shl.b32 	%r7352, %r7351, 2;
	mov.u32 	%r7353, 1985229328;
	shr.u32 	%r7354, %r7353, %r7352;
	and.b32  	%r7344, %r7354, 65535;
	// inline asm
	prmt.b32 %r11019, %r7248, %r7250, %r7344;
	// inline asm
	// inline asm
	prmt.b32 %r11018, %r7246, %r7248, %r7344;
	// inline asm
	// inline asm
	prmt.b32 %r11017, %r7244, %r7246, %r7344;
	// inline asm
	mov.u32 	%r11012, 0;
	// inline asm
	prmt.b32 %r11016, %r11012, %r7244, %r7344;
	// inline asm
	mov.u32 	%r11013, %r11012;
	mov.u32 	%r11014, %r11012;
	mov.u32 	%r11015, %r11012;
	bra.uni 	BB1_887;

BB1_873:
	setp.eq.s32	%p685, %r7268, 2;
	@%p685 bra 	BB1_885;
	bra.uni 	BB1_874;

BB1_885:
	and.b32  	%r7410, %r23, 3;
	mov.u32 	%r7411, 4;
	sub.s32 	%r7412, %r7411, %r7410;
	shl.b32 	%r7413, %r7412, 2;
	mov.u32 	%r7414, 1985229328;
	shr.u32 	%r7415, %r7414, %r7413;
	and.b32  	%r7407, %r7415, 65535;
	// inline asm
	prmt.b32 %r11019, %r7252, %r7254, %r7407;
	// inline asm
	// inline asm
	prmt.b32 %r11018, %r7250, %r7252, %r7407;
	// inline asm
	// inline asm
	prmt.b32 %r11017, %r7248, %r7250, %r7407;
	// inline asm
	// inline asm
	prmt.b32 %r11016, %r7246, %r7248, %r7407;
	// inline asm
	// inline asm
	prmt.b32 %r11015, %r7244, %r7246, %r7407;
	// inline asm
	mov.u32 	%r11012, 0;
	// inline asm
	prmt.b32 %r11014, %r11012, %r7244, %r7407;
	// inline asm
	mov.u32 	%r11013, %r11012;
	bra.uni 	BB1_887;

BB1_880:
	setp.eq.s32	%p680, %r7268, 6;
	@%p680 bra 	BB1_883;
	bra.uni 	BB1_881;

BB1_883:
	and.b32  	%r7300, %r23, 3;
	mov.u32 	%r7301, 4;
	sub.s32 	%r7302, %r7301, %r7300;
	shl.b32 	%r7303, %r7302, 2;
	mov.u32 	%r7304, 1985229328;
	shr.u32 	%r7305, %r7304, %r7303;
	and.b32  	%r7293, %r7305, 65535;
	// inline asm
	prmt.b32 %r11019, %r7244, %r7246, %r7293;
	// inline asm
	mov.u32 	%r11012, 0;
	// inline asm
	prmt.b32 %r11018, %r11012, %r7244, %r7293;
	// inline asm
	mov.u32 	%r11013, %r11012;
	mov.u32 	%r11014, %r11012;
	mov.u32 	%r11015, %r11012;
	mov.u32 	%r11016, %r11012;
	mov.u32 	%r11017, %r11012;
	bra.uni 	BB1_887;

BB1_871:
	setp.eq.s32	%p688, %r7268, 1;
	mov.u32 	%r11013, %r11012;
	mov.u32 	%r11014, %r11012;
	mov.u32 	%r11015, %r11012;
	mov.u32 	%r11016, %r11012;
	mov.u32 	%r11017, %r11012;
	mov.u32 	%r11018, %r11012;
	mov.u32 	%r11019, %r11012;
	@%p688 bra 	BB1_872;
	bra.uni 	BB1_887;

BB1_872:
	and.b32  	%r7445, %r23, 3;
	mov.u32 	%r7446, 4;
	sub.s32 	%r7447, %r7446, %r7445;
	shl.b32 	%r7448, %r7447, 2;
	mov.u32 	%r7449, 1985229328;
	shr.u32 	%r7450, %r7449, %r7448;
	and.b32  	%r7443, %r7450, 65535;
	// inline asm
	prmt.b32 %r11019, %r7254, %r7256, %r7443;
	// inline asm
	// inline asm
	prmt.b32 %r11018, %r7252, %r7254, %r7443;
	// inline asm
	// inline asm
	prmt.b32 %r11017, %r7250, %r7252, %r7443;
	// inline asm
	// inline asm
	prmt.b32 %r11016, %r7248, %r7250, %r7443;
	// inline asm
	// inline asm
	prmt.b32 %r11015, %r7246, %r7248, %r7443;
	// inline asm
	// inline asm
	prmt.b32 %r11014, %r7244, %r7246, %r7443;
	// inline asm
	mov.u32 	%r11012, 0;
	// inline asm
	prmt.b32 %r11013, %r11012, %r7244, %r7443;
	// inline asm
	bra.uni 	BB1_887;

BB1_878:
	setp.eq.s32	%p683, %r7268, 5;
	mov.u32 	%r11013, %r11012;
	mov.u32 	%r11014, %r11012;
	mov.u32 	%r11015, %r11012;
	mov.u32 	%r11016, %r11012;
	mov.u32 	%r11017, %r11012;
	mov.u32 	%r11018, %r11012;
	mov.u32 	%r11019, %r11012;
	@%p683 bra 	BB1_879;
	bra.uni 	BB1_887;

BB1_879:
	and.b32  	%r7323, %r23, 3;
	mov.u32 	%r7324, 4;
	sub.s32 	%r7325, %r7324, %r7323;
	shl.b32 	%r7326, %r7325, 2;
	mov.u32 	%r7327, 1985229328;
	shr.u32 	%r7328, %r7327, %r7326;
	and.b32  	%r7317, %r7328, 65535;
	// inline asm
	prmt.b32 %r11019, %r7246, %r7248, %r7317;
	// inline asm
	// inline asm
	prmt.b32 %r11018, %r7244, %r7246, %r7317;
	// inline asm
	mov.u32 	%r11012, 0;
	// inline asm
	prmt.b32 %r11017, %r11012, %r7244, %r7317;
	// inline asm
	mov.u32 	%r11013, %r11012;
	mov.u32 	%r11014, %r11012;
	mov.u32 	%r11015, %r11012;
	mov.u32 	%r11016, %r11012;
	bra.uni 	BB1_887;

BB1_874:
	setp.eq.s32	%p686, %r7268, 3;
	mov.u32 	%r11013, %r11012;
	mov.u32 	%r11014, %r11012;
	mov.u32 	%r11015, %r11012;
	mov.u32 	%r11016, %r11012;
	mov.u32 	%r11017, %r11012;
	mov.u32 	%r11018, %r11012;
	mov.u32 	%r11019, %r11012;
	@%p686 bra 	BB1_875;
	bra.uni 	BB1_887;

BB1_875:
	and.b32  	%r7378, %r23, 3;
	mov.u32 	%r7379, 4;
	sub.s32 	%r7380, %r7379, %r7378;
	shl.b32 	%r7381, %r7380, 2;
	mov.u32 	%r7382, 1985229328;
	shr.u32 	%r7383, %r7382, %r7381;
	and.b32  	%r7374, %r7383, 65535;
	// inline asm
	prmt.b32 %r11019, %r7250, %r7252, %r7374;
	// inline asm
	// inline asm
	prmt.b32 %r11018, %r7248, %r7250, %r7374;
	// inline asm
	// inline asm
	prmt.b32 %r11017, %r7246, %r7248, %r7374;
	// inline asm
	// inline asm
	prmt.b32 %r11016, %r7244, %r7246, %r7374;
	// inline asm
	mov.u32 	%r11012, 0;
	// inline asm
	prmt.b32 %r11015, %r11012, %r7244, %r7374;
	// inline asm
	mov.u32 	%r11013, %r11012;
	mov.u32 	%r11014, %r11012;
	bra.uni 	BB1_887;

BB1_881:
	setp.ne.s32	%p681, %r7268, 7;
	mov.u32 	%r11013, %r11012;
	mov.u32 	%r11014, %r11012;
	mov.u32 	%r11015, %r11012;
	mov.u32 	%r11016, %r11012;
	mov.u32 	%r11017, %r11012;
	mov.u32 	%r11018, %r11012;
	mov.u32 	%r11019, %r11012;
	@%p681 bra 	BB1_887;

	and.b32  	%r7280, %r23, 3;
	mov.u32 	%r7281, 4;
	sub.s32 	%r7282, %r7281, %r7280;
	shl.b32 	%r7283, %r7282, 2;
	mov.u32 	%r7284, 1985229328;
	shr.u32 	%r7285, %r7284, %r7283;
	and.b32  	%r7272, %r7285, 65535;
	mov.u32 	%r11012, 0;
	// inline asm
	prmt.b32 %r11019, %r11012, %r7244, %r7272;
	// inline asm
	mov.u32 	%r11013, %r11012;
	mov.u32 	%r11014, %r11012;
	mov.u32 	%r11015, %r11012;
	mov.u32 	%r11016, %r11012;
	mov.u32 	%r11017, %r11012;
	mov.u32 	%r11018, %r11012;

BB1_887:
	or.b32  	%r11058, %r11012, %r35;
	or.b32  	%r11059, %r11013, %r34;
	or.b32  	%r11060, %r11014, %r33;
	or.b32  	%r11061, %r11015, %r32;
	or.b32  	%r11054, %r11016, %r39;
	or.b32  	%r11055, %r11017, %r38;
	or.b32  	%r11056, %r11018, %r37;
	or.b32  	%r11057, %r11019, %r36;
	bra.uni 	BB1_1015;

BB1_4:
	mov.u32 	%r39, %r11054;
	mov.u32 	%r38, %r11055;
	mov.u32 	%r37, %r11056;
	mov.u32 	%r36, %r11057;
	mov.u32 	%r35, %r11058;
	mov.u32 	%r34, %r11059;
	mov.u32 	%r33, %r11060;
	mov.u32 	%r32, %r11061;
	mov.u32 	%r23, %r11070;
	shr.u32 	%r40, %r10880, 8;
	bfe.u32 	%r41, %r10880, 8, 8;
	shr.u32 	%r42, %r10880, 16;
	bfe.u32 	%r43, %r10880, 16, 8;
	add.u64 	%rd125, %SP, 32;
	cvta.to.local.u64 	%rd84, %rd125;
	add.u64 	%rd126, %SP, 0;
	cvta.to.local.u64 	%rd85, %rd126;
	and.b32  	%r1624, %r40, 252;
	cvt.u64.u32	%rd127, %r1624;
	add.s64 	%rd86, %rd85, %rd127;
	add.s64 	%rd87, %rd84, %rd127;
	add.s32 	%r11070, %r23, -1;
	mul.wide.u32 	%rd128, %r11070, 64;
	mov.u64 	%rd129, c_append_helper;
	add.s64 	%rd88, %rd129, %rd128;
	and.b32  	%r1623, %r10880, 255;
	setp.gt.s32	%p4, %r1623, 93;
	@%p4 bra 	BB1_57;

	setp.gt.s32	%p32, %r1623, 68;
	@%p32 bra 	BB1_33;

	setp.gt.s32	%p46, %r1623, 44;
	@%p46 bra 	BB1_19;

	setp.gt.s32	%p53, %r1623, 41;
	@%p53 bra 	BB1_15;

	setp.eq.s32	%p57, %r1623, 36;
	@%p57 bra 	BB1_787;
	bra.uni 	BB1_9;

BB1_787:
	add.s32 	%r11070, %r23, 1;
	setp.gt.u32	%p629, %r11070, 31;
	@%p629 bra 	BB1_108;

	mov.u32 	%r6667, 64;
	prmt.b32 	%r6668, %r41, %r41, %r6667;
	mov.u32 	%r6669, 1040;
	prmt.b32 	%r6670, %r6668, %r41, %r6669;
	mov.u32 	%r6671, 16912;
	prmt.b32 	%r6672, %r6670, %r41, %r6671;
	mul.wide.u32 	%rd189, %r23, 64;
	add.s64 	%rd191, %rd129, %rd189;
	ld.const.u32 	%r6673, [%rd191];
	and.b32  	%r6674, %r6673, %r6672;
	or.b32  	%r11058, %r6674, %r35;
	ld.const.u32 	%r6675, [%rd191+4];
	and.b32  	%r6676, %r6675, %r6672;
	or.b32  	%r11059, %r6676, %r34;
	ld.const.u32 	%r6677, [%rd191+8];
	and.b32  	%r6678, %r6677, %r6672;
	or.b32  	%r11060, %r6678, %r33;
	ld.const.u32 	%r6679, [%rd191+12];
	and.b32  	%r6680, %r6679, %r6672;
	or.b32  	%r11061, %r6680, %r32;
	ld.const.u32 	%r6681, [%rd191+16];
	and.b32  	%r6682, %r6681, %r6672;
	or.b32  	%r11054, %r6682, %r39;
	ld.const.u32 	%r6683, [%rd191+20];
	and.b32  	%r6684, %r6683, %r6672;
	or.b32  	%r11055, %r6684, %r38;
	ld.const.u32 	%r6685, [%rd191+24];
	and.b32  	%r6686, %r6685, %r6672;
	or.b32  	%r11056, %r6686, %r37;
	ld.const.u32 	%r6687, [%rd191+28];
	and.b32  	%r6688, %r6687, %r6672;
	or.b32  	%r11057, %r6688, %r36;
	bra.uni 	BB1_1015;

BB1_57:
	setp.gt.s32	%p5, %r1623, 112;
	@%p5 bra 	BB1_82;

	setp.gt.s32	%p19, %r1623, 104;
	@%p19 bra 	BB1_73;

	setp.gt.s32	%p26, %r1623, 99;
	@%p26 bra 	BB1_63;

	setp.eq.s32	%p30, %r1623, 94;
	@%p30 bra 	BB1_785;
	bra.uni 	BB1_61;

BB1_785:
	add.s32 	%r11070, %r23, 1;
	setp.gt.u32	%p628, %r11070, 31;
	@%p628 bra 	BB1_108;

	mov.u32 	%r6666, 24;
	// inline asm
	shf.r.wrap.b32 %r11057, %r37, %r36, %r6666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11056, %r38, %r37, %r6666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11055, %r39, %r38, %r6666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r32, %r39, %r6666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11061, %r33, %r32, %r6666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r34, %r33, %r6666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r35, %r34, %r6666;
	// inline asm
	mov.u32 	%r6664, 0;
	// inline asm
	shf.r.wrap.b32 %r6663, %r6664, %r35, %r6666;
	// inline asm
	or.b32  	%r11058, %r6663, %r41;
	bra.uni 	BB1_1015;

BB1_33:
	setp.gt.s32	%p33, %r1623, 83;
	@%p33 bra 	BB1_44;

	setp.gt.s32	%p40, %r1623, 75;
	@%p40 bra 	BB1_39;

	setp.eq.s32	%p44, %r1623, 69;
	@%p44 bra 	BB1_110;
	bra.uni 	BB1_36;

BB1_110:
	setp.eq.s32	%p59, %r23, 0;
	mov.u32 	%r11070, 0;
	@%p59 bra 	BB1_111;

	mov.u32 	%r1741, 0;
	mov.u32 	%r1754, 8;
	// inline asm
	bfe.u32 %r1627, %r35, %r1741, %r1754;
	// inline asm
	setp.eq.s32	%p60, %r1627, 32;
	selp.u32	%r1755, 1, 0, %p60;
	// inline asm
	bfe.u32 %r1631, %r35, %r1754, %r1754;
	// inline asm
	setp.eq.s32	%p61, %r1631, 32;
	or.b32  	%r1756, %r1755, 2;
	selp.b32	%r1757, %r1756, %r1755, %p61;
	mov.u32 	%r1749, 16;
	// inline asm
	bfe.u32 %r1635, %r35, %r1749, %r1754;
	// inline asm
	setp.eq.s32	%p62, %r1635, 32;
	or.b32  	%r1758, %r1757, 4;
	selp.b32	%r1759, %r1758, %r1757, %p62;
	mov.u32 	%r1753, 24;
	// inline asm
	bfe.u32 %r1639, %r35, %r1753, %r1754;
	// inline asm
	setp.eq.s32	%p63, %r1639, 32;
	or.b32  	%r1760, %r1759, 8;
	selp.b32	%r44, %r1760, %r1759, %p63;
	// inline asm
	bfe.u32 %r1643, %r34, %r1741, %r1754;
	// inline asm
	setp.eq.s32	%p64, %r1643, 32;
	selp.u32	%r1761, 1, 0, %p64;
	// inline asm
	bfe.u32 %r1647, %r34, %r1754, %r1754;
	// inline asm
	setp.eq.s32	%p65, %r1647, 32;
	or.b32  	%r1762, %r1761, 2;
	selp.b32	%r1763, %r1762, %r1761, %p65;
	// inline asm
	bfe.u32 %r1651, %r34, %r1749, %r1754;
	// inline asm
	setp.eq.s32	%p66, %r1651, 32;
	or.b32  	%r1764, %r1763, 4;
	selp.b32	%r1765, %r1764, %r1763, %p66;
	// inline asm
	bfe.u32 %r1655, %r34, %r1753, %r1754;
	// inline asm
	setp.eq.s32	%p67, %r1655, 32;
	or.b32  	%r1766, %r1765, 8;
	selp.b32	%r45, %r1766, %r1765, %p67;
	// inline asm
	bfe.u32 %r1659, %r33, %r1741, %r1754;
	// inline asm
	setp.eq.s32	%p68, %r1659, 32;
	selp.u32	%r1767, 1, 0, %p68;
	// inline asm
	bfe.u32 %r1663, %r33, %r1754, %r1754;
	// inline asm
	setp.eq.s32	%p69, %r1663, 32;
	or.b32  	%r1768, %r1767, 2;
	selp.b32	%r1769, %r1768, %r1767, %p69;
	// inline asm
	bfe.u32 %r1667, %r33, %r1749, %r1754;
	// inline asm
	setp.eq.s32	%p70, %r1667, 32;
	or.b32  	%r1770, %r1769, 4;
	selp.b32	%r1771, %r1770, %r1769, %p70;
	// inline asm
	bfe.u32 %r1671, %r33, %r1753, %r1754;
	// inline asm
	setp.eq.s32	%p71, %r1671, 32;
	or.b32  	%r1772, %r1771, 8;
	selp.b32	%r46, %r1772, %r1771, %p71;
	// inline asm
	bfe.u32 %r1675, %r32, %r1741, %r1754;
	// inline asm
	setp.eq.s32	%p72, %r1675, 32;
	selp.u32	%r1773, 1, 0, %p72;
	// inline asm
	bfe.u32 %r1679, %r32, %r1754, %r1754;
	// inline asm
	setp.eq.s32	%p73, %r1679, 32;
	or.b32  	%r1774, %r1773, 2;
	selp.b32	%r1775, %r1774, %r1773, %p73;
	// inline asm
	bfe.u32 %r1683, %r32, %r1749, %r1754;
	// inline asm
	setp.eq.s32	%p74, %r1683, 32;
	or.b32  	%r1776, %r1775, 4;
	selp.b32	%r1777, %r1776, %r1775, %p74;
	// inline asm
	bfe.u32 %r1687, %r32, %r1753, %r1754;
	// inline asm
	setp.eq.s32	%p75, %r1687, 32;
	or.b32  	%r1778, %r1777, 8;
	selp.b32	%r47, %r1778, %r1777, %p75;
	// inline asm
	bfe.u32 %r1691, %r39, %r1741, %r1754;
	// inline asm
	setp.eq.s32	%p76, %r1691, 32;
	selp.u32	%r1779, 1, 0, %p76;
	// inline asm
	bfe.u32 %r1695, %r39, %r1754, %r1754;
	// inline asm
	setp.eq.s32	%p77, %r1695, 32;
	or.b32  	%r1780, %r1779, 2;
	selp.b32	%r1781, %r1780, %r1779, %p77;
	// inline asm
	bfe.u32 %r1699, %r39, %r1749, %r1754;
	// inline asm
	setp.eq.s32	%p78, %r1699, 32;
	or.b32  	%r1782, %r1781, 4;
	selp.b32	%r1783, %r1782, %r1781, %p78;
	// inline asm
	bfe.u32 %r1703, %r39, %r1753, %r1754;
	// inline asm
	setp.eq.s32	%p79, %r1703, 32;
	or.b32  	%r1784, %r1783, 8;
	selp.b32	%r1785, %r1784, %r1783, %p79;
	// inline asm
	bfe.u32 %r1707, %r38, %r1741, %r1754;
	// inline asm
	setp.eq.s32	%p80, %r1707, 32;
	selp.u32	%r1786, 1, 0, %p80;
	// inline asm
	bfe.u32 %r1711, %r38, %r1754, %r1754;
	// inline asm
	setp.eq.s32	%p81, %r1711, 32;
	or.b32  	%r1787, %r1786, 2;
	selp.b32	%r1788, %r1787, %r1786, %p81;
	// inline asm
	bfe.u32 %r1715, %r38, %r1749, %r1754;
	// inline asm
	setp.eq.s32	%p82, %r1715, 32;
	or.b32  	%r1789, %r1788, 4;
	selp.b32	%r1790, %r1789, %r1788, %p82;
	// inline asm
	bfe.u32 %r1719, %r38, %r1753, %r1754;
	// inline asm
	setp.eq.s32	%p83, %r1719, 32;
	or.b32  	%r1791, %r1790, 8;
	selp.b32	%r1792, %r1791, %r1790, %p83;
	// inline asm
	bfe.u32 %r1723, %r37, %r1741, %r1754;
	// inline asm
	setp.eq.s32	%p84, %r1723, 32;
	selp.u32	%r1793, 1, 0, %p84;
	// inline asm
	bfe.u32 %r1727, %r37, %r1754, %r1754;
	// inline asm
	setp.eq.s32	%p85, %r1727, 32;
	or.b32  	%r1794, %r1793, 2;
	selp.b32	%r1795, %r1794, %r1793, %p85;
	// inline asm
	bfe.u32 %r1731, %r37, %r1749, %r1754;
	// inline asm
	setp.eq.s32	%p86, %r1731, 32;
	or.b32  	%r1796, %r1795, 4;
	selp.b32	%r1797, %r1796, %r1795, %p86;
	// inline asm
	bfe.u32 %r1735, %r37, %r1753, %r1754;
	// inline asm
	setp.eq.s32	%p87, %r1735, 32;
	or.b32  	%r1798, %r1797, 8;
	selp.b32	%r1799, %r1798, %r1797, %p87;
	// inline asm
	bfe.u32 %r1739, %r36, %r1741, %r1754;
	// inline asm
	setp.eq.s32	%p88, %r1739, 32;
	selp.u32	%r1800, 1, 0, %p88;
	// inline asm
	bfe.u32 %r1743, %r36, %r1754, %r1754;
	// inline asm
	setp.eq.s32	%p89, %r1743, 32;
	or.b32  	%r1801, %r1800, 2;
	selp.b32	%r1802, %r1801, %r1800, %p89;
	// inline asm
	bfe.u32 %r1747, %r36, %r1749, %r1754;
	// inline asm
	setp.eq.s32	%p90, %r1747, 32;
	or.b32  	%r1803, %r1802, 4;
	selp.b32	%r1804, %r1803, %r1802, %p90;
	// inline asm
	bfe.u32 %r1751, %r36, %r1753, %r1754;
	// inline asm
	setp.eq.s32	%p91, %r1751, 32;
	or.b32  	%r1805, %r1804, 8;
	selp.b32	%r1806, %r1805, %r1804, %p91;
	and.b32  	%r1807, %r35, 1077952576;
	shr.u32 	%r1808, %r1807, 1;
	and.b32  	%r1809, %r35, -2139062144;
	shr.u32 	%r1810, %r1809, 2;
	not.b32 	%r1811, %r1810;
	and.b32  	%r1812, %r1808, %r1811;
	and.b32  	%r1813, %r35, 522133279;
	add.s32 	%r1814, %r1813, 522133279;
	mov.u32 	%r1815, -84215046;
	sub.s32 	%r1816, %r1815, %r1813;
	and.b32  	%r1817, %r1812, %r1816;
	and.b32  	%r1818, %r1817, %r1814;
	or.b32  	%r48, %r1818, %r35;
	and.b32  	%r1819, %r34, 1077952576;
	shr.u32 	%r1820, %r1819, 1;
	and.b32  	%r1821, %r34, -2139062144;
	shr.u32 	%r1822, %r1821, 2;
	not.b32 	%r1823, %r1822;
	and.b32  	%r1824, %r1820, %r1823;
	and.b32  	%r1825, %r34, 522133279;
	add.s32 	%r1826, %r1825, 522133279;
	sub.s32 	%r1827, %r1815, %r1825;
	and.b32  	%r1828, %r1824, %r1827;
	and.b32  	%r1829, %r1828, %r1826;
	or.b32  	%r11059, %r1829, %r34;
	and.b32  	%r1830, %r33, 1077952576;
	shr.u32 	%r1831, %r1830, 1;
	and.b32  	%r1832, %r33, -2139062144;
	shr.u32 	%r1833, %r1832, 2;
	not.b32 	%r1834, %r1833;
	and.b32  	%r1835, %r1831, %r1834;
	and.b32  	%r1836, %r33, 522133279;
	add.s32 	%r1837, %r1836, 522133279;
	sub.s32 	%r1838, %r1815, %r1836;
	and.b32  	%r1839, %r1835, %r1838;
	and.b32  	%r1840, %r1839, %r1837;
	or.b32  	%r11060, %r1840, %r33;
	and.b32  	%r1841, %r32, 1077952576;
	shr.u32 	%r1842, %r1841, 1;
	and.b32  	%r1843, %r32, -2139062144;
	shr.u32 	%r1844, %r1843, 2;
	not.b32 	%r1845, %r1844;
	and.b32  	%r1846, %r1842, %r1845;
	and.b32  	%r1847, %r32, 522133279;
	add.s32 	%r1848, %r1847, 522133279;
	sub.s32 	%r1849, %r1815, %r1847;
	and.b32  	%r1850, %r1846, %r1849;
	and.b32  	%r1851, %r1850, %r1848;
	or.b32  	%r11061, %r1851, %r32;
	and.b32  	%r1852, %r39, 1077952576;
	shr.u32 	%r1853, %r1852, 1;
	and.b32  	%r1854, %r39, -2139062144;
	shr.u32 	%r1855, %r1854, 2;
	not.b32 	%r1856, %r1855;
	and.b32  	%r1857, %r1853, %r1856;
	and.b32  	%r1858, %r39, 522133279;
	add.s32 	%r1859, %r1858, 522133279;
	sub.s32 	%r1860, %r1815, %r1858;
	and.b32  	%r1861, %r1857, %r1860;
	and.b32  	%r1862, %r1861, %r1859;
	or.b32  	%r11054, %r1862, %r39;
	and.b32  	%r1863, %r38, 1077952576;
	shr.u32 	%r1864, %r1863, 1;
	and.b32  	%r1865, %r38, -2139062144;
	shr.u32 	%r1866, %r1865, 2;
	not.b32 	%r1867, %r1866;
	and.b32  	%r1868, %r1864, %r1867;
	and.b32  	%r1869, %r38, 522133279;
	add.s32 	%r1870, %r1869, 522133279;
	sub.s32 	%r1871, %r1815, %r1869;
	and.b32  	%r1872, %r1868, %r1871;
	and.b32  	%r1873, %r1872, %r1870;
	or.b32  	%r11055, %r1873, %r38;
	and.b32  	%r1874, %r37, 1077952576;
	shr.u32 	%r1875, %r1874, 1;
	and.b32  	%r1876, %r37, -2139062144;
	shr.u32 	%r1877, %r1876, 2;
	not.b32 	%r1878, %r1877;
	and.b32  	%r1879, %r1875, %r1878;
	and.b32  	%r1880, %r37, 522133279;
	add.s32 	%r1881, %r1880, 522133279;
	sub.s32 	%r1882, %r1815, %r1880;
	and.b32  	%r1883, %r1879, %r1882;
	and.b32  	%r1884, %r1883, %r1881;
	or.b32  	%r11056, %r1884, %r37;
	and.b32  	%r1885, %r36, 1077952576;
	shr.u32 	%r1886, %r1885, 1;
	and.b32  	%r1887, %r36, -2139062144;
	shr.u32 	%r1888, %r1887, 2;
	not.b32 	%r1889, %r1888;
	and.b32  	%r1890, %r1886, %r1889;
	and.b32  	%r1891, %r36, 522133279;
	add.s32 	%r1892, %r1891, 522133279;
	sub.s32 	%r1893, %r1815, %r1891;
	and.b32  	%r1894, %r1890, %r1893;
	and.b32  	%r1895, %r1894, %r1892;
	or.b32  	%r11057, %r1895, %r36;
	and.b32  	%r1896, %r48, 64;
	shr.u32 	%r1897, %r1896, 1;
	and.b32  	%r1898, %r48, 128;
	shr.u32 	%r1899, %r1898, 2;
	not.b32 	%r1900, %r1899;
	and.b32  	%r1901, %r1897, %r1900;
	and.b32  	%r56, %r48, 522133279;
	add.s32 	%r1902, %r56, 31;
	sub.s32 	%r57, %r1815, %r56;
	and.b32  	%r1903, %r1901, %r57;
	and.b32  	%r1904, %r1903, %r1902;
	not.b32 	%r1905, %r1904;
	or.b32  	%r1906, %r1905, -33;
	and.b32  	%r11058, %r1906, %r48;
	add.s32 	%r1907, %r45, %r44;
	add.s32 	%r1908, %r1907, %r46;
	add.s32 	%r1909, %r1908, %r47;
	add.s32 	%r1910, %r1909, %r1785;
	add.s32 	%r1911, %r1910, %r1792;
	add.s32 	%r1912, %r1911, %r1799;
	neg.s32 	%r1913, %r1806;
	setp.eq.s32	%p92, %r1912, %r1913;
	@%p92 bra 	BB1_1014;

	shl.b32 	%r1914, %r45, 1;
	bfe.u32 	%r1915, %r44, 3, 28;
	or.b32  	%r1916, %r1914, %r1915;
	shr.u32 	%r1917, %r1916, 4;
	shl.b32 	%r1918, %r46, 1;
	or.b32  	%r1919, %r1918, %r1917;
	shr.u32 	%r1920, %r1919, 4;
	shl.b32 	%r1921, %r47, 1;
	or.b32  	%r1922, %r1921, %r1920;
	and.b32  	%r1923, %r48, 1077952576;
	shr.u32 	%r1924, %r1923, 1;
	and.b32  	%r1925, %r48, -2139062144;
	shr.u32 	%r1926, %r1925, 2;
	not.b32 	%r1927, %r1926;
	and.b32  	%r1928, %r1924, %r1927;
	and.b32  	%r1929, %r1928, %r57;
	add.s32 	%r1930, %r56, 522133279;
	and.b32  	%r1931, %r1929, %r1930;
	shl.b32 	%r1932, %r44, 13;
	and.b32  	%r1933, %r1931, %r1932;
	and.b32  	%r1934, %r1933, 8192;
	xor.b32  	%r1935, %r11058, %r1934;
	shl.b32 	%r1936, %r44, 20;
	and.b32  	%r1937, %r1931, %r1936;
	and.b32  	%r1938, %r1937, 2097152;
	xor.b32  	%r1939, %r1935, %r1938;
	shl.b32 	%r1940, %r44, 27;
	and.b32  	%r1941, %r1931, %r1940;
	and.b32  	%r1942, %r1941, 536870912;
	xor.b32  	%r11058, %r1939, %r1942;
	and.b32  	%r1943, %r11059, 1077952576;
	shr.u32 	%r1944, %r1943, 1;
	and.b32  	%r1945, %r11059, -2139062144;
	shr.u32 	%r1946, %r1945, 2;
	not.b32 	%r1947, %r1946;
	and.b32  	%r1948, %r1944, %r1947;
	and.b32  	%r1949, %r11059, 522133279;
	add.s32 	%r1950, %r1949, 522133279;
	sub.s32 	%r1952, %r1815, %r1949;
	and.b32  	%r1953, %r1948, %r1952;
	and.b32  	%r1954, %r1953, %r1950;
	shl.b32 	%r1955, %r44, 2;
	and.b32  	%r1956, %r1954, %r1955;
	and.b32  	%r1957, %r1956, 32;
	xor.b32  	%r1958, %r1957, %r11059;
	shl.b32 	%r1959, %r1916, 12;
	and.b32  	%r1960, %r1954, %r1959;
	and.b32  	%r1961, %r1960, 8192;
	xor.b32  	%r1962, %r1958, %r1961;
	shl.b32 	%r1963, %r1916, 19;
	and.b32  	%r1964, %r1954, %r1963;
	and.b32  	%r1965, %r1964, 2097152;
	xor.b32  	%r1966, %r1962, %r1965;
	shl.b32 	%r1967, %r1916, 26;
	and.b32  	%r1968, %r1954, %r1967;
	and.b32  	%r1969, %r1968, 536870912;
	xor.b32  	%r11059, %r1966, %r1969;
	and.b32  	%r1970, %r11060, 1077952576;
	shr.u32 	%r1971, %r1970, 1;
	and.b32  	%r1972, %r11060, -2139062144;
	shr.u32 	%r1973, %r1972, 2;
	not.b32 	%r1974, %r1973;
	and.b32  	%r1975, %r1971, %r1974;
	and.b32  	%r1976, %r11060, 522133279;
	add.s32 	%r1977, %r1976, 522133279;
	sub.s32 	%r1978, %r1815, %r1976;
	and.b32  	%r1979, %r1975, %r1978;
	and.b32  	%r1980, %r1979, %r1977;
	shl.b32 	%r1981, %r1916, 1;
	and.b32  	%r1982, %r1980, %r1981;
	and.b32  	%r1983, %r1982, 32;
	xor.b32  	%r1984, %r1983, %r11060;
	shl.b32 	%r1985, %r1919, 12;
	and.b32  	%r1986, %r1980, %r1985;
	and.b32  	%r1987, %r1986, 8192;
	xor.b32  	%r1988, %r1984, %r1987;
	shl.b32 	%r1989, %r1919, 19;
	and.b32  	%r1990, %r1980, %r1989;
	and.b32  	%r1991, %r1990, 2097152;
	xor.b32  	%r1992, %r1988, %r1991;
	shl.b32 	%r1993, %r1919, 26;
	and.b32  	%r1994, %r1980, %r1993;
	and.b32  	%r1995, %r1994, 536870912;
	xor.b32  	%r11060, %r1992, %r1995;
	and.b32  	%r1996, %r11061, 1077952576;
	shr.u32 	%r1997, %r1996, 1;
	and.b32  	%r1998, %r11061, -2139062144;
	shr.u32 	%r1999, %r1998, 2;
	not.b32 	%r2000, %r1999;
	and.b32  	%r2001, %r1997, %r2000;
	and.b32  	%r2002, %r11061, 522133279;
	add.s32 	%r2003, %r2002, 522133279;
	sub.s32 	%r2004, %r1815, %r2002;
	and.b32  	%r2005, %r2001, %r2004;
	and.b32  	%r2006, %r2005, %r2003;
	shl.b32 	%r2007, %r1919, 1;
	and.b32  	%r2008, %r2006, %r2007;
	and.b32  	%r2009, %r2008, 32;
	xor.b32  	%r2010, %r2009, %r11061;
	shl.b32 	%r2011, %r1922, 12;
	and.b32  	%r2012, %r2006, %r2011;
	and.b32  	%r2013, %r2012, 8192;
	xor.b32  	%r2014, %r2010, %r2013;
	shl.b32 	%r2015, %r1922, 19;
	and.b32  	%r2016, %r2006, %r2015;
	and.b32  	%r2017, %r2016, 2097152;
	xor.b32  	%r2018, %r2014, %r2017;
	shl.b32 	%r2019, %r1922, 26;
	and.b32  	%r2020, %r2006, %r2019;
	and.b32  	%r2021, %r2020, 536870912;
	xor.b32  	%r11061, %r2018, %r2021;
	and.b32  	%r2022, %r11054, 1077952576;
	shr.u32 	%r2023, %r2022, 1;
	and.b32  	%r2024, %r11054, -2139062144;
	shr.u32 	%r2025, %r2024, 2;
	not.b32 	%r2026, %r2025;
	and.b32  	%r2027, %r2023, %r2026;
	and.b32  	%r2028, %r11054, 522133279;
	add.s32 	%r2029, %r2028, 522133279;
	sub.s32 	%r2030, %r1815, %r2028;
	and.b32  	%r2031, %r2027, %r2030;
	and.b32  	%r2032, %r2031, %r2029;
	and.b32  	%r2033, %r2032, %r1932;
	and.b32  	%r2034, %r2033, 8192;
	xor.b32  	%r2035, %r11054, %r2034;
	and.b32  	%r2036, %r2032, %r1936;
	and.b32  	%r2037, %r2036, 2097152;
	xor.b32  	%r2038, %r2035, %r2037;
	and.b32  	%r2039, %r2032, %r1940;
	and.b32  	%r2040, %r2039, 536870912;
	xor.b32  	%r11054, %r2038, %r2040;
	and.b32  	%r2041, %r11055, 1077952576;
	shr.u32 	%r2042, %r2041, 1;
	and.b32  	%r2043, %r11055, -2139062144;
	shr.u32 	%r2044, %r2043, 2;
	not.b32 	%r2045, %r2044;
	and.b32  	%r2046, %r2042, %r2045;
	and.b32  	%r2047, %r11055, 522133279;
	add.s32 	%r2048, %r2047, 522133279;
	sub.s32 	%r2049, %r1815, %r2047;
	and.b32  	%r2050, %r2046, %r2049;
	and.b32  	%r2051, %r2050, %r2048;
	and.b32  	%r2052, %r2051, %r1955;
	and.b32  	%r2053, %r2052, 32;
	xor.b32  	%r2054, %r2053, %r11055;
	and.b32  	%r2055, %r2051, %r1959;
	and.b32  	%r2056, %r2055, 8192;
	xor.b32  	%r2057, %r2054, %r2056;
	and.b32  	%r2058, %r2051, %r1963;
	and.b32  	%r2059, %r2058, 2097152;
	xor.b32  	%r2060, %r2057, %r2059;
	and.b32  	%r2061, %r2051, %r1967;
	and.b32  	%r2062, %r2061, 536870912;
	xor.b32  	%r11055, %r2060, %r2062;
	and.b32  	%r2063, %r11056, 1077952576;
	shr.u32 	%r2064, %r2063, 1;
	and.b32  	%r2065, %r11056, -2139062144;
	shr.u32 	%r2066, %r2065, 2;
	not.b32 	%r2067, %r2066;
	and.b32  	%r2068, %r2064, %r2067;
	and.b32  	%r2069, %r11056, 522133279;
	add.s32 	%r2070, %r2069, 522133279;
	sub.s32 	%r2071, %r1815, %r2069;
	and.b32  	%r2072, %r2068, %r2071;
	and.b32  	%r2073, %r2072, %r2070;
	and.b32  	%r2074, %r2073, %r1981;
	and.b32  	%r2075, %r2074, 32;
	xor.b32  	%r2076, %r2075, %r11056;
	and.b32  	%r2077, %r2073, %r1985;
	and.b32  	%r2078, %r2077, 8192;
	xor.b32  	%r2079, %r2076, %r2078;
	and.b32  	%r2080, %r2073, %r1989;
	and.b32  	%r2081, %r2080, 2097152;
	xor.b32  	%r2082, %r2079, %r2081;
	and.b32  	%r2083, %r2073, %r1993;
	and.b32  	%r2084, %r2083, 536870912;
	xor.b32  	%r11056, %r2082, %r2084;
	and.b32  	%r2085, %r11057, 1077952576;
	shr.u32 	%r2086, %r2085, 1;
	and.b32  	%r2087, %r11057, -2139062144;
	shr.u32 	%r2088, %r2087, 2;
	not.b32 	%r2089, %r2088;
	and.b32  	%r2090, %r2086, %r2089;
	and.b32  	%r2091, %r11057, 522133279;
	add.s32 	%r2092, %r2091, 522133279;
	sub.s32 	%r2093, %r1815, %r2091;
	and.b32  	%r2094, %r2090, %r2093;
	and.b32  	%r2095, %r2094, %r2092;
	and.b32  	%r2096, %r2095, %r2007;
	and.b32  	%r2097, %r2096, 32;
	xor.b32  	%r2098, %r2097, %r11057;
	and.b32  	%r2099, %r2095, %r2011;
	and.b32  	%r2100, %r2099, 8192;
	xor.b32  	%r2101, %r2098, %r2100;
	and.b32  	%r2102, %r2095, %r2015;
	and.b32  	%r2103, %r2102, 2097152;
	xor.b32  	%r2104, %r2101, %r2103;
	and.b32  	%r2105, %r2095, %r2019;
	and.b32  	%r2106, %r2105, 536870912;
	xor.b32  	%r11057, %r2104, %r2106;
	bra.uni 	BB1_1014;

BB1_82:
	setp.gt.s32	%p6, %r1623, 119;
	@%p6 bra 	BB1_96;

	setp.gt.s32	%p13, %r1623, 114;
	@%p13 bra 	BB1_92;

	setp.eq.s32	%p17, %r1623, 113;
	@%p17 bra 	BB1_327;
	bra.uni 	BB1_85;

BB1_327:
	setp.eq.s32	%p260, %r23, 0;
	add.s32 	%r11070, %r23, %r23;
	setp.gt.u32	%p261, %r11070, 31;
	or.pred  	%p262, %p260, %p261;
	@%p262 bra 	BB1_108;

	and.b32  	%r3942, %r35, 255;
	and.b32  	%r3943, %r35, 65280;
	prmt.b32 	%r11066, %r3943, %r3942, 8452;
	bfe.u32 	%r3944, %r35, 16, 8;
	and.b32  	%r3945, %r35, -16777216;
	shr.u32 	%r3946, %r3945, 8;
	or.b32  	%r11067, %r3944, %r3946;
	and.b32  	%r3947, %r34, 65280;
	and.b32  	%r3948, %r34, 255;
	prmt.b32 	%r11068, %r3947, %r3948, 8452;
	bfe.u32 	%r3949, %r34, 16, 8;
	and.b32  	%r3950, %r34, -16777216;
	shr.u32 	%r3951, %r3950, 8;
	or.b32  	%r11069, %r3949, %r3951;
	and.b32  	%r3952, %r33, 65280;
	and.b32  	%r3953, %r33, 255;
	prmt.b32 	%r11062, %r3952, %r3953, 8452;
	bfe.u32 	%r3954, %r33, 16, 8;
	and.b32  	%r3955, %r33, -16777216;
	shr.u32 	%r3956, %r3955, 8;
	or.b32  	%r11063, %r3954, %r3956;
	and.b32  	%r3957, %r32, 65280;
	and.b32  	%r3958, %r32, 255;
	prmt.b32 	%r11064, %r3957, %r3958, 8452;
	bfe.u32 	%r3959, %r32, 16, 8;
	and.b32  	%r3960, %r32, -16777216;
	shr.u32 	%r3961, %r3960, 8;
	or.b32  	%r11065, %r3959, %r3961;
	shl.b32 	%r3962, %r11066, 8;
	or.b32  	%r11058, %r3962, %r11066;
	shl.b32 	%r3963, %r11067, 8;
	or.b32  	%r11059, %r3963, %r11067;
	shl.b32 	%r3964, %r11068, 8;
	or.b32  	%r11060, %r3964, %r11068;
	shl.b32 	%r3965, %r11069, 8;
	or.b32  	%r11061, %r3965, %r11069;
	shl.b32 	%r3966, %r11062, 8;
	or.b32  	%r11054, %r3966, %r11062;
	shl.b32 	%r3967, %r11063, 8;
	or.b32  	%r11055, %r3967, %r11063;
	shl.b32 	%r3968, %r11064, 8;
	or.b32  	%r11056, %r3968, %r11064;
	shl.b32 	%r3969, %r11065, 8;
	or.b32  	%r11057, %r3969, %r11065;
	bra.uni 	BB1_1015;

BB1_19:
	setp.gt.s32	%p47, %r1623, 63;
	@%p47 bra 	BB1_24;

	setp.eq.s32	%p51, %r1623, 45;
	@%p51 bra 	BB1_318;
	bra.uni 	BB1_21;

BB1_318:
	setp.ge.u32	%p251, %r41, %r23;
	@%p251 bra 	BB1_108;

	and.b32  	%r3842, %r40, 3;
	shl.b32 	%r3843, %r3842, 3;
	mov.u32 	%r3844, 255;
	shl.b32 	%r3845, %r3844, %r3843;
	not.b32 	%r3846, %r3845;
	and.b32  	%r3847, %r3845, 16843009;
	st.local.v4.u32 	[%rd84], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd84+16], {%r39, %r38, %r37, %r36};
	ld.local.u32 	%r3848, [%rd87];
	and.b32  	%r3849, %r3848, %r3846;
	and.b32  	%r3850, %r3848, %r3845;
	sub.s32 	%r3851, %r3850, %r3847;
	and.b32  	%r3852, %r3851, %r3845;
	or.b32  	%r3853, %r3852, %r3849;
	st.local.u32 	[%rd87], %r3853;
	bra.uni 	BB1_326;

BB1_73:
	setp.gt.s32	%p20, %r1623, 107;
	@%p20 bra 	BB1_78;

	setp.eq.s32	%p24, %r1623, 105;
	@%p24 bra 	BB1_489;
	bra.uni 	BB1_75;

BB1_489:
	setp.gt.u32	%p459, %r41, %r23;
	add.s32 	%r11070, %r23, 1;
	setp.gt.u32	%p460, %r11070, 31;
	or.pred  	%p461, %p459, %p460;
	@%p461 bra 	BB1_108;

	mov.u32 	%r5202, 24;
	// inline asm
	shf.r.wrap.b32 %r11065, %r37, %r36, %r5202;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r38, %r37, %r5202;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r39, %r38, %r5202;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r32, %r39, %r5202;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r33, %r32, %r5202;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r34, %r33, %r5202;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r35, %r34, %r5202;
	// inline asm
	mov.u32 	%r5200, 0;
	// inline asm
	shf.r.wrap.b32 %r11066, %r5200, %r35, %r5202;
	// inline asm
	and.b32  	%r5204, %r40, 3;
	shl.b32 	%r5205, %r5204, 3;
	shl.b32 	%r695, %r43, %r5205;
	mov.u32 	%r5206, 1;
	shl.b32 	%r5207, %r5206, %r5205;
	add.s32 	%r696, %r5207, -1;
	mov.u32 	%r5208, -256;
	shl.b32 	%r697, %r5208, %r5205;
	shr.u32 	%r5203, %r41, 2;
	setp.gt.s32	%p462, %r5203, 3;
	@%p462 bra 	BB1_499;

	setp.gt.s32	%p468, %r5203, 1;
	@%p468 bra 	BB1_496;

	setp.eq.s32	%p471, %r5203, 0;
	@%p471 bra 	BB1_513;
	bra.uni 	BB1_493;

BB1_513:
	and.b32  	%r5230, %r696, %r35;
	or.b32  	%r5231, %r5230, %r695;
	and.b32  	%r5232, %r11066, %r697;
	or.b32  	%r11058, %r5231, %r5232;
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11059, %r11067;
	bra.uni 	BB1_495;

BB1_44:
	setp.gt.s32	%p34, %r1623, 89;
	@%p34 bra 	BB1_54;

	setp.eq.s32	%p38, %r1623, 84;
	@%p38 bra 	BB1_1009;
	bra.uni 	BB1_46;

BB1_1009:
	setp.ge.u32	%p760, %r41, %r23;
	@%p760 bra 	BB1_108;

	st.local.v4.u32 	[%rd84], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd84+16], {%r39, %r38, %r37, %r36};
	and.b32  	%r8427, %r40, 3;
	shl.b32 	%r8428, %r8427, 3;
	mov.u32 	%r8429, 32;
	shl.b32 	%r8430, %r8429, %r8428;
	ld.local.u32 	%r8431, [%rd87];
	and.b32  	%r8432, %r8431, 1077952576;
	shr.u32 	%r8433, %r8432, 1;
	shr.u32 	%r8434, %r8431, 2;
	not.b32 	%r8435, %r8434;
	and.b32  	%r8436, %r8431, 522133279;
	add.s32 	%r8437, %r8436, 522133279;
	mov.u32 	%r8438, -84215046;
	sub.s32 	%r8439, %r8438, %r8436;
	and.b32  	%r8440, %r8430, %r8435;
	and.b32  	%r8441, %r8440, %r8433;
	and.b32  	%r8442, %r8441, %r8439;
	and.b32  	%r8443, %r8442, %r8437;
	xor.b32  	%r8444, %r8443, %r8431;
	st.local.u32 	[%rd87], %r8444;
	bra.uni 	BB1_326;

BB1_96:
	setp.gt.s32	%p7, %r1623, 121;
	@%p7 bra 	BB1_105;

	setp.eq.s32	%p11, %r1623, 120;
	@%p11 bra 	BB1_627;
	bra.uni 	BB1_98;

BB1_627:
	setp.ge.u32	%p534, %r41, %r23;
	add.s32 	%r5807, %r41, %r43;
	setp.gt.u32	%p535, %r5807, %r23;
	or.pred  	%p536, %p534, %p535;
	@%p536 bra 	BB1_108;

	setp.gt.s32	%p537, %r41, 15;
	@%p537 bra 	BB1_657;

	setp.gt.s32	%p561, %r41, 7;
	@%p561 bra 	BB1_642;

	setp.gt.s32	%p573, %r41, 3;
	@%p573 bra 	BB1_635;

	setp.eq.s32	%p579, %r41, 1;
	@%p579 bra 	BB1_706;

	setp.eq.s32	%p580, %r41, 2;
	@%p580 bra 	BB1_705;
	bra.uni 	BB1_633;

BB1_705:
	mov.u32 	%r6308, 16;
	// inline asm
	shf.r.wrap.b32 %r11058, %r35, %r34, %r6308;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11059, %r34, %r33, %r6308;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11060, %r33, %r32, %r6308;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6289, %r32, %r39, %r6308;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11054, %r39, %r38, %r6308;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11055, %r38, %r37, %r6308;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11056, %r37, %r36, %r6308;
	// inline asm
	mov.u32 	%r6307, 0;
	// inline asm
	shf.r.wrap.b32 %r11057, %r36, %r6307, %r6308;
	// inline asm
	mov.u32 	%r36, %r6289;
	bra.uni 	BB1_712;

BB1_15:
	setp.eq.s32	%p54, %r1623, 42;
	@%p54 bra 	BB1_324;

	setp.eq.s32	%p55, %r1623, 43;
	@%p55 bra 	BB1_320;
	bra.uni 	BB1_17;

BB1_320:
	setp.ge.u32	%p252, %r41, %r23;
	@%p252 bra 	BB1_108;

	and.b32  	%r3862, %r40, 3;
	shl.b32 	%r3863, %r3862, 3;
	mov.u32 	%r3864, 255;
	shl.b32 	%r3865, %r3864, %r3863;
	not.b32 	%r3866, %r3865;
	and.b32  	%r3867, %r3865, 16843009;
	st.local.v4.u32 	[%rd84], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd84+16], {%r39, %r38, %r37, %r36};
	ld.local.u32 	%r3868, [%rd87];
	and.b32  	%r3869, %r3868, %r3866;
	and.b32  	%r3870, %r3868, %r3865;
	add.s32 	%r3871, %r3870, %r3867;
	and.b32  	%r3872, %r3871, %r3865;
	or.b32  	%r3873, %r3872, %r3869;
	st.local.u32 	[%rd87], %r3873;
	bra.uni 	BB1_326;

BB1_63:
	setp.eq.s32	%p27, %r1623, 100;
	@%p27 bra 	BB1_911;

	setp.eq.s32	%p28, %r1623, 101;
	@%p28 bra 	BB1_114;
	bra.uni 	BB1_65;

BB1_114:
	setp.eq.s32	%p93, %r23, 0;
	mov.u32 	%r11070, 0;
	@%p93 bra 	BB1_111;

	mov.u32 	%r2222, 0;
	mov.u32 	%r2235, 8;
	// inline asm
	bfe.u32 %r2108, %r35, %r2222, %r2235;
	// inline asm
	setp.eq.s32	%p94, %r2108, %r41;
	selp.u32	%r2236, 1, 0, %p94;
	// inline asm
	bfe.u32 %r2112, %r35, %r2235, %r2235;
	// inline asm
	setp.eq.s32	%p95, %r2112, %r41;
	or.b32  	%r2237, %r2236, 2;
	selp.b32	%r2238, %r2237, %r2236, %p95;
	mov.u32 	%r2230, 16;
	// inline asm
	bfe.u32 %r2116, %r35, %r2230, %r2235;
	// inline asm
	setp.eq.s32	%p96, %r2116, %r41;
	or.b32  	%r2239, %r2238, 4;
	selp.b32	%r2240, %r2239, %r2238, %p96;
	mov.u32 	%r2234, 24;
	// inline asm
	bfe.u32 %r2120, %r35, %r2234, %r2235;
	// inline asm
	setp.eq.s32	%p97, %r2120, %r41;
	or.b32  	%r2241, %r2240, 8;
	selp.b32	%r67, %r2241, %r2240, %p97;
	// inline asm
	bfe.u32 %r2124, %r34, %r2222, %r2235;
	// inline asm
	setp.eq.s32	%p98, %r2124, %r41;
	selp.u32	%r2242, 1, 0, %p98;
	// inline asm
	bfe.u32 %r2128, %r34, %r2235, %r2235;
	// inline asm
	setp.eq.s32	%p99, %r2128, %r41;
	or.b32  	%r2243, %r2242, 2;
	selp.b32	%r2244, %r2243, %r2242, %p99;
	// inline asm
	bfe.u32 %r2132, %r34, %r2230, %r2235;
	// inline asm
	setp.eq.s32	%p100, %r2132, %r41;
	or.b32  	%r2245, %r2244, 4;
	selp.b32	%r2246, %r2245, %r2244, %p100;
	// inline asm
	bfe.u32 %r2136, %r34, %r2234, %r2235;
	// inline asm
	setp.eq.s32	%p101, %r2136, %r41;
	or.b32  	%r2247, %r2246, 8;
	selp.b32	%r68, %r2247, %r2246, %p101;
	// inline asm
	bfe.u32 %r2140, %r33, %r2222, %r2235;
	// inline asm
	setp.eq.s32	%p102, %r2140, %r41;
	selp.u32	%r2248, 1, 0, %p102;
	// inline asm
	bfe.u32 %r2144, %r33, %r2235, %r2235;
	// inline asm
	setp.eq.s32	%p103, %r2144, %r41;
	or.b32  	%r2249, %r2248, 2;
	selp.b32	%r2250, %r2249, %r2248, %p103;
	// inline asm
	bfe.u32 %r2148, %r33, %r2230, %r2235;
	// inline asm
	setp.eq.s32	%p104, %r2148, %r41;
	or.b32  	%r2251, %r2250, 4;
	selp.b32	%r2252, %r2251, %r2250, %p104;
	// inline asm
	bfe.u32 %r2152, %r33, %r2234, %r2235;
	// inline asm
	setp.eq.s32	%p105, %r2152, %r41;
	or.b32  	%r2253, %r2252, 8;
	selp.b32	%r69, %r2253, %r2252, %p105;
	// inline asm
	bfe.u32 %r2156, %r32, %r2222, %r2235;
	// inline asm
	setp.eq.s32	%p106, %r2156, %r41;
	selp.u32	%r2254, 1, 0, %p106;
	// inline asm
	bfe.u32 %r2160, %r32, %r2235, %r2235;
	// inline asm
	setp.eq.s32	%p107, %r2160, %r41;
	or.b32  	%r2255, %r2254, 2;
	selp.b32	%r2256, %r2255, %r2254, %p107;
	// inline asm
	bfe.u32 %r2164, %r32, %r2230, %r2235;
	// inline asm
	setp.eq.s32	%p108, %r2164, %r41;
	or.b32  	%r2257, %r2256, 4;
	selp.b32	%r2258, %r2257, %r2256, %p108;
	// inline asm
	bfe.u32 %r2168, %r32, %r2234, %r2235;
	// inline asm
	setp.eq.s32	%p109, %r2168, %r41;
	or.b32  	%r2259, %r2258, 8;
	selp.b32	%r70, %r2259, %r2258, %p109;
	// inline asm
	bfe.u32 %r2172, %r39, %r2222, %r2235;
	// inline asm
	setp.eq.s32	%p110, %r2172, %r41;
	selp.u32	%r2260, 1, 0, %p110;
	// inline asm
	bfe.u32 %r2176, %r39, %r2235, %r2235;
	// inline asm
	setp.eq.s32	%p111, %r2176, %r41;
	or.b32  	%r2261, %r2260, 2;
	selp.b32	%r2262, %r2261, %r2260, %p111;
	// inline asm
	bfe.u32 %r2180, %r39, %r2230, %r2235;
	// inline asm
	setp.eq.s32	%p112, %r2180, %r41;
	or.b32  	%r2263, %r2262, 4;
	selp.b32	%r2264, %r2263, %r2262, %p112;
	// inline asm
	bfe.u32 %r2184, %r39, %r2234, %r2235;
	// inline asm
	setp.eq.s32	%p113, %r2184, %r41;
	or.b32  	%r2265, %r2264, 8;
	selp.b32	%r2266, %r2265, %r2264, %p113;
	// inline asm
	bfe.u32 %r2188, %r38, %r2222, %r2235;
	// inline asm
	setp.eq.s32	%p114, %r2188, %r41;
	selp.u32	%r2267, 1, 0, %p114;
	// inline asm
	bfe.u32 %r2192, %r38, %r2235, %r2235;
	// inline asm
	setp.eq.s32	%p115, %r2192, %r41;
	or.b32  	%r2268, %r2267, 2;
	selp.b32	%r2269, %r2268, %r2267, %p115;
	// inline asm
	bfe.u32 %r2196, %r38, %r2230, %r2235;
	// inline asm
	setp.eq.s32	%p116, %r2196, %r41;
	or.b32  	%r2270, %r2269, 4;
	selp.b32	%r2271, %r2270, %r2269, %p116;
	// inline asm
	bfe.u32 %r2200, %r38, %r2234, %r2235;
	// inline asm
	setp.eq.s32	%p117, %r2200, %r41;
	or.b32  	%r2272, %r2271, 8;
	selp.b32	%r2273, %r2272, %r2271, %p117;
	// inline asm
	bfe.u32 %r2204, %r37, %r2222, %r2235;
	// inline asm
	setp.eq.s32	%p118, %r2204, %r41;
	selp.u32	%r2274, 1, 0, %p118;
	// inline asm
	bfe.u32 %r2208, %r37, %r2235, %r2235;
	// inline asm
	setp.eq.s32	%p119, %r2208, %r41;
	or.b32  	%r2275, %r2274, 2;
	selp.b32	%r2276, %r2275, %r2274, %p119;
	// inline asm
	bfe.u32 %r2212, %r37, %r2230, %r2235;
	// inline asm
	setp.eq.s32	%p120, %r2212, %r41;
	or.b32  	%r2277, %r2276, 4;
	selp.b32	%r2278, %r2277, %r2276, %p120;
	// inline asm
	bfe.u32 %r2216, %r37, %r2234, %r2235;
	// inline asm
	setp.eq.s32	%p121, %r2216, %r41;
	or.b32  	%r2279, %r2278, 8;
	selp.b32	%r2280, %r2279, %r2278, %p121;
	// inline asm
	bfe.u32 %r2220, %r36, %r2222, %r2235;
	// inline asm
	setp.eq.s32	%p122, %r2220, %r41;
	selp.u32	%r2281, 1, 0, %p122;
	// inline asm
	bfe.u32 %r2224, %r36, %r2235, %r2235;
	// inline asm
	setp.eq.s32	%p123, %r2224, %r41;
	or.b32  	%r2282, %r2281, 2;
	selp.b32	%r2283, %r2282, %r2281, %p123;
	// inline asm
	bfe.u32 %r2228, %r36, %r2230, %r2235;
	// inline asm
	setp.eq.s32	%p124, %r2228, %r41;
	or.b32  	%r2284, %r2283, 4;
	selp.b32	%r2285, %r2284, %r2283, %p124;
	// inline asm
	bfe.u32 %r2232, %r36, %r2234, %r2235;
	// inline asm
	setp.eq.s32	%p125, %r2232, %r41;
	or.b32  	%r2286, %r2285, 8;
	selp.b32	%r2287, %r2286, %r2285, %p125;
	and.b32  	%r2288, %r35, 1077952576;
	shr.u32 	%r2289, %r2288, 1;
	and.b32  	%r2290, %r35, -2139062144;
	shr.u32 	%r2291, %r2290, 2;
	not.b32 	%r2292, %r2291;
	and.b32  	%r2293, %r2289, %r2292;
	and.b32  	%r2294, %r35, 522133279;
	add.s32 	%r2295, %r2294, 522133279;
	mov.u32 	%r2296, -84215046;
	sub.s32 	%r2297, %r2296, %r2294;
	and.b32  	%r2298, %r2293, %r2297;
	and.b32  	%r2299, %r2298, %r2295;
	or.b32  	%r71, %r2299, %r35;
	and.b32  	%r2300, %r34, 1077952576;
	shr.u32 	%r2301, %r2300, 1;
	and.b32  	%r2302, %r34, -2139062144;
	shr.u32 	%r2303, %r2302, 2;
	not.b32 	%r2304, %r2303;
	and.b32  	%r2305, %r2301, %r2304;
	and.b32  	%r2306, %r34, 522133279;
	add.s32 	%r2307, %r2306, 522133279;
	sub.s32 	%r2308, %r2296, %r2306;
	and.b32  	%r2309, %r2305, %r2308;
	and.b32  	%r2310, %r2309, %r2307;
	or.b32  	%r11059, %r2310, %r34;
	and.b32  	%r2311, %r33, 1077952576;
	shr.u32 	%r2312, %r2311, 1;
	and.b32  	%r2313, %r33, -2139062144;
	shr.u32 	%r2314, %r2313, 2;
	not.b32 	%r2315, %r2314;
	and.b32  	%r2316, %r2312, %r2315;
	and.b32  	%r2317, %r33, 522133279;
	add.s32 	%r2318, %r2317, 522133279;
	sub.s32 	%r2319, %r2296, %r2317;
	and.b32  	%r2320, %r2316, %r2319;
	and.b32  	%r2321, %r2320, %r2318;
	or.b32  	%r11060, %r2321, %r33;
	and.b32  	%r2322, %r32, 1077952576;
	shr.u32 	%r2323, %r2322, 1;
	and.b32  	%r2324, %r32, -2139062144;
	shr.u32 	%r2325, %r2324, 2;
	not.b32 	%r2326, %r2325;
	and.b32  	%r2327, %r2323, %r2326;
	and.b32  	%r2328, %r32, 522133279;
	add.s32 	%r2329, %r2328, 522133279;
	sub.s32 	%r2330, %r2296, %r2328;
	and.b32  	%r2331, %r2327, %r2330;
	and.b32  	%r2332, %r2331, %r2329;
	or.b32  	%r11061, %r2332, %r32;
	and.b32  	%r2333, %r39, 1077952576;
	shr.u32 	%r2334, %r2333, 1;
	and.b32  	%r2335, %r39, -2139062144;
	shr.u32 	%r2336, %r2335, 2;
	not.b32 	%r2337, %r2336;
	and.b32  	%r2338, %r2334, %r2337;
	and.b32  	%r2339, %r39, 522133279;
	add.s32 	%r2340, %r2339, 522133279;
	sub.s32 	%r2341, %r2296, %r2339;
	and.b32  	%r2342, %r2338, %r2341;
	and.b32  	%r2343, %r2342, %r2340;
	or.b32  	%r11054, %r2343, %r39;
	and.b32  	%r2344, %r38, 1077952576;
	shr.u32 	%r2345, %r2344, 1;
	and.b32  	%r2346, %r38, -2139062144;
	shr.u32 	%r2347, %r2346, 2;
	not.b32 	%r2348, %r2347;
	and.b32  	%r2349, %r2345, %r2348;
	and.b32  	%r2350, %r38, 522133279;
	add.s32 	%r2351, %r2350, 522133279;
	sub.s32 	%r2352, %r2296, %r2350;
	and.b32  	%r2353, %r2349, %r2352;
	and.b32  	%r2354, %r2353, %r2351;
	or.b32  	%r11055, %r2354, %r38;
	and.b32  	%r2355, %r37, 1077952576;
	shr.u32 	%r2356, %r2355, 1;
	and.b32  	%r2357, %r37, -2139062144;
	shr.u32 	%r2358, %r2357, 2;
	not.b32 	%r2359, %r2358;
	and.b32  	%r2360, %r2356, %r2359;
	and.b32  	%r2361, %r37, 522133279;
	add.s32 	%r2362, %r2361, 522133279;
	sub.s32 	%r2363, %r2296, %r2361;
	and.b32  	%r2364, %r2360, %r2363;
	and.b32  	%r2365, %r2364, %r2362;
	or.b32  	%r11056, %r2365, %r37;
	and.b32  	%r2366, %r36, 1077952576;
	shr.u32 	%r2367, %r2366, 1;
	and.b32  	%r2368, %r36, -2139062144;
	shr.u32 	%r2369, %r2368, 2;
	not.b32 	%r2370, %r2369;
	and.b32  	%r2371, %r2367, %r2370;
	and.b32  	%r2372, %r36, 522133279;
	add.s32 	%r2373, %r2372, 522133279;
	sub.s32 	%r2374, %r2296, %r2372;
	and.b32  	%r2375, %r2371, %r2374;
	and.b32  	%r2376, %r2375, %r2373;
	or.b32  	%r11057, %r2376, %r36;
	and.b32  	%r2377, %r71, 64;
	shr.u32 	%r2378, %r2377, 1;
	and.b32  	%r2379, %r71, 128;
	shr.u32 	%r2380, %r2379, 2;
	not.b32 	%r2381, %r2380;
	and.b32  	%r2382, %r2378, %r2381;
	and.b32  	%r79, %r71, 522133279;
	add.s32 	%r2383, %r79, 31;
	sub.s32 	%r80, %r2296, %r79;
	and.b32  	%r2384, %r2382, %r80;
	and.b32  	%r2385, %r2384, %r2383;
	not.b32 	%r2386, %r2385;
	or.b32  	%r2387, %r2386, -33;
	and.b32  	%r11058, %r2387, %r71;
	add.s32 	%r2388, %r68, %r67;
	add.s32 	%r2389, %r2388, %r69;
	add.s32 	%r2390, %r2389, %r70;
	add.s32 	%r2391, %r2390, %r2266;
	add.s32 	%r2392, %r2391, %r2273;
	add.s32 	%r2393, %r2392, %r2280;
	neg.s32 	%r2394, %r2287;
	setp.eq.s32	%p126, %r2393, %r2394;
	@%p126 bra 	BB1_1014;

	shl.b32 	%r2395, %r68, 1;
	bfe.u32 	%r2396, %r67, 3, 28;
	or.b32  	%r2397, %r2395, %r2396;
	shr.u32 	%r2398, %r2397, 4;
	shl.b32 	%r2399, %r69, 1;
	or.b32  	%r2400, %r2399, %r2398;
	shr.u32 	%r2401, %r2400, 4;
	shl.b32 	%r2402, %r70, 1;
	or.b32  	%r2403, %r2402, %r2401;
	and.b32  	%r2404, %r71, 1077952576;
	shr.u32 	%r2405, %r2404, 1;
	and.b32  	%r2406, %r71, -2139062144;
	shr.u32 	%r2407, %r2406, 2;
	not.b32 	%r2408, %r2407;
	and.b32  	%r2409, %r2405, %r2408;
	and.b32  	%r2410, %r2409, %r80;
	add.s32 	%r2411, %r79, 522133279;
	and.b32  	%r2412, %r2410, %r2411;
	shl.b32 	%r2413, %r67, 13;
	and.b32  	%r2414, %r2412, %r2413;
	and.b32  	%r2415, %r2414, 8192;
	xor.b32  	%r2416, %r11058, %r2415;
	shl.b32 	%r2417, %r67, 20;
	and.b32  	%r2418, %r2412, %r2417;
	and.b32  	%r2419, %r2418, 2097152;
	xor.b32  	%r2420, %r2416, %r2419;
	shl.b32 	%r2421, %r67, 27;
	and.b32  	%r2422, %r2412, %r2421;
	and.b32  	%r2423, %r2422, 536870912;
	xor.b32  	%r11058, %r2420, %r2423;
	and.b32  	%r2424, %r11059, 1077952576;
	shr.u32 	%r2425, %r2424, 1;
	and.b32  	%r2426, %r11059, -2139062144;
	shr.u32 	%r2427, %r2426, 2;
	not.b32 	%r2428, %r2427;
	and.b32  	%r2429, %r2425, %r2428;
	and.b32  	%r2430, %r11059, 522133279;
	add.s32 	%r2431, %r2430, 522133279;
	sub.s32 	%r2433, %r2296, %r2430;
	and.b32  	%r2434, %r2429, %r2433;
	and.b32  	%r2435, %r2434, %r2431;
	shl.b32 	%r2436, %r67, 2;
	and.b32  	%r2437, %r2435, %r2436;
	and.b32  	%r2438, %r2437, 32;
	xor.b32  	%r2439, %r2438, %r11059;
	shl.b32 	%r2440, %r2397, 12;
	and.b32  	%r2441, %r2435, %r2440;
	and.b32  	%r2442, %r2441, 8192;
	xor.b32  	%r2443, %r2439, %r2442;
	shl.b32 	%r2444, %r2397, 19;
	and.b32  	%r2445, %r2435, %r2444;
	and.b32  	%r2446, %r2445, 2097152;
	xor.b32  	%r2447, %r2443, %r2446;
	shl.b32 	%r2448, %r2397, 26;
	and.b32  	%r2449, %r2435, %r2448;
	and.b32  	%r2450, %r2449, 536870912;
	xor.b32  	%r11059, %r2447, %r2450;
	and.b32  	%r2451, %r11060, 1077952576;
	shr.u32 	%r2452, %r2451, 1;
	and.b32  	%r2453, %r11060, -2139062144;
	shr.u32 	%r2454, %r2453, 2;
	not.b32 	%r2455, %r2454;
	and.b32  	%r2456, %r2452, %r2455;
	and.b32  	%r2457, %r11060, 522133279;
	add.s32 	%r2458, %r2457, 522133279;
	sub.s32 	%r2459, %r2296, %r2457;
	and.b32  	%r2460, %r2456, %r2459;
	and.b32  	%r2461, %r2460, %r2458;
	shl.b32 	%r2462, %r2397, 1;
	and.b32  	%r2463, %r2461, %r2462;
	and.b32  	%r2464, %r2463, 32;
	xor.b32  	%r2465, %r2464, %r11060;
	shl.b32 	%r2466, %r2400, 12;
	and.b32  	%r2467, %r2461, %r2466;
	and.b32  	%r2468, %r2467, 8192;
	xor.b32  	%r2469, %r2465, %r2468;
	shl.b32 	%r2470, %r2400, 19;
	and.b32  	%r2471, %r2461, %r2470;
	and.b32  	%r2472, %r2471, 2097152;
	xor.b32  	%r2473, %r2469, %r2472;
	shl.b32 	%r2474, %r2400, 26;
	and.b32  	%r2475, %r2461, %r2474;
	and.b32  	%r2476, %r2475, 536870912;
	xor.b32  	%r11060, %r2473, %r2476;
	and.b32  	%r2477, %r11061, 1077952576;
	shr.u32 	%r2478, %r2477, 1;
	and.b32  	%r2479, %r11061, -2139062144;
	shr.u32 	%r2480, %r2479, 2;
	not.b32 	%r2481, %r2480;
	and.b32  	%r2482, %r2478, %r2481;
	and.b32  	%r2483, %r11061, 522133279;
	add.s32 	%r2484, %r2483, 522133279;
	sub.s32 	%r2485, %r2296, %r2483;
	and.b32  	%r2486, %r2482, %r2485;
	and.b32  	%r2487, %r2486, %r2484;
	shl.b32 	%r2488, %r2400, 1;
	and.b32  	%r2489, %r2487, %r2488;
	and.b32  	%r2490, %r2489, 32;
	xor.b32  	%r2491, %r2490, %r11061;
	shl.b32 	%r2492, %r2403, 12;
	and.b32  	%r2493, %r2487, %r2492;
	and.b32  	%r2494, %r2493, 8192;
	xor.b32  	%r2495, %r2491, %r2494;
	shl.b32 	%r2496, %r2403, 19;
	and.b32  	%r2497, %r2487, %r2496;
	and.b32  	%r2498, %r2497, 2097152;
	xor.b32  	%r2499, %r2495, %r2498;
	shl.b32 	%r2500, %r2403, 26;
	and.b32  	%r2501, %r2487, %r2500;
	and.b32  	%r2502, %r2501, 536870912;
	xor.b32  	%r11061, %r2499, %r2502;
	and.b32  	%r2503, %r11054, 1077952576;
	shr.u32 	%r2504, %r2503, 1;
	and.b32  	%r2505, %r11054, -2139062144;
	shr.u32 	%r2506, %r2505, 2;
	not.b32 	%r2507, %r2506;
	and.b32  	%r2508, %r2504, %r2507;
	and.b32  	%r2509, %r11054, 522133279;
	add.s32 	%r2510, %r2509, 522133279;
	sub.s32 	%r2511, %r2296, %r2509;
	and.b32  	%r2512, %r2508, %r2511;
	and.b32  	%r2513, %r2512, %r2510;
	and.b32  	%r2514, %r2513, %r2413;
	and.b32  	%r2515, %r2514, 8192;
	xor.b32  	%r2516, %r11054, %r2515;
	and.b32  	%r2517, %r2513, %r2417;
	and.b32  	%r2518, %r2517, 2097152;
	xor.b32  	%r2519, %r2516, %r2518;
	and.b32  	%r2520, %r2513, %r2421;
	and.b32  	%r2521, %r2520, 536870912;
	xor.b32  	%r11054, %r2519, %r2521;
	and.b32  	%r2522, %r11055, 1077952576;
	shr.u32 	%r2523, %r2522, 1;
	and.b32  	%r2524, %r11055, -2139062144;
	shr.u32 	%r2525, %r2524, 2;
	not.b32 	%r2526, %r2525;
	and.b32  	%r2527, %r2523, %r2526;
	and.b32  	%r2528, %r11055, 522133279;
	add.s32 	%r2529, %r2528, 522133279;
	sub.s32 	%r2530, %r2296, %r2528;
	and.b32  	%r2531, %r2527, %r2530;
	and.b32  	%r2532, %r2531, %r2529;
	and.b32  	%r2533, %r2532, %r2436;
	and.b32  	%r2534, %r2533, 32;
	xor.b32  	%r2535, %r2534, %r11055;
	and.b32  	%r2536, %r2532, %r2440;
	and.b32  	%r2537, %r2536, 8192;
	xor.b32  	%r2538, %r2535, %r2537;
	and.b32  	%r2539, %r2532, %r2444;
	and.b32  	%r2540, %r2539, 2097152;
	xor.b32  	%r2541, %r2538, %r2540;
	and.b32  	%r2542, %r2532, %r2448;
	and.b32  	%r2543, %r2542, 536870912;
	xor.b32  	%r11055, %r2541, %r2543;
	and.b32  	%r2544, %r11056, 1077952576;
	shr.u32 	%r2545, %r2544, 1;
	and.b32  	%r2546, %r11056, -2139062144;
	shr.u32 	%r2547, %r2546, 2;
	not.b32 	%r2548, %r2547;
	and.b32  	%r2549, %r2545, %r2548;
	and.b32  	%r2550, %r11056, 522133279;
	add.s32 	%r2551, %r2550, 522133279;
	sub.s32 	%r2552, %r2296, %r2550;
	and.b32  	%r2553, %r2549, %r2552;
	and.b32  	%r2554, %r2553, %r2551;
	and.b32  	%r2555, %r2554, %r2462;
	and.b32  	%r2556, %r2555, 32;
	xor.b32  	%r2557, %r2556, %r11056;
	and.b32  	%r2558, %r2554, %r2466;
	and.b32  	%r2559, %r2558, 8192;
	xor.b32  	%r2560, %r2557, %r2559;
	and.b32  	%r2561, %r2554, %r2470;
	and.b32  	%r2562, %r2561, 2097152;
	xor.b32  	%r2563, %r2560, %r2562;
	and.b32  	%r2564, %r2554, %r2474;
	and.b32  	%r2565, %r2564, 536870912;
	xor.b32  	%r11056, %r2563, %r2565;
	and.b32  	%r2566, %r11057, 1077952576;
	shr.u32 	%r2567, %r2566, 1;
	and.b32  	%r2568, %r11057, -2139062144;
	shr.u32 	%r2569, %r2568, 2;
	not.b32 	%r2570, %r2569;
	and.b32  	%r2571, %r2567, %r2570;
	and.b32  	%r2572, %r11057, 522133279;
	add.s32 	%r2573, %r2572, 522133279;
	sub.s32 	%r2574, %r2296, %r2572;
	and.b32  	%r2575, %r2571, %r2574;
	and.b32  	%r2576, %r2575, %r2573;
	and.b32  	%r2577, %r2576, %r2488;
	and.b32  	%r2578, %r2577, 32;
	xor.b32  	%r2579, %r2578, %r11057;
	and.b32  	%r2580, %r2576, %r2492;
	and.b32  	%r2581, %r2580, 8192;
	xor.b32  	%r2582, %r2579, %r2581;
	and.b32  	%r2583, %r2576, %r2496;
	and.b32  	%r2584, %r2583, 2097152;
	xor.b32  	%r2585, %r2582, %r2584;
	and.b32  	%r2586, %r2576, %r2500;
	and.b32  	%r2587, %r2586, 536870912;
	xor.b32  	%r11057, %r2585, %r2587;
	bra.uni 	BB1_1014;

BB1_39:
	setp.eq.s32	%p41, %r1623, 76;
	@%p41 bra 	BB1_322;

	setp.eq.s32	%p42, %r1623, 79;
	@%p42 bra 	BB1_514;
	bra.uni 	BB1_41;

BB1_514:
	setp.ge.u32	%p473, %r41, %r23;
	add.s32 	%r5233, %r41, %r43;
	setp.gt.u32	%p474, %r5233, %r23;
	or.pred  	%p475, %p473, %p474;
	@%p475 bra 	BB1_108;

	mov.u32 	%r11065, 0;
	setp.gt.s32	%p476, %r43, 15;
	@%p476 bra 	BB1_548;

	setp.gt.s32	%p500, %r43, 7;
	@%p500 bra 	BB1_532;

	setp.gt.s32	%p512, %r43, 3;
	@%p512 bra 	BB1_525;

	setp.gt.s32	%p518, %r43, 1;
	@%p518 bra 	BB1_522;

	setp.eq.s32	%p521, %r43, 0;
	@%p521 bra 	BB1_600;
	bra.uni 	BB1_520;

BB1_600:
	mov.u32 	%r11062, %r39;
	mov.u32 	%r11063, %r38;
	mov.u32 	%r11064, %r37;
	mov.u32 	%r11065, %r36;
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11069, %r32;
	bra.uni 	BB1_601;

BB1_92:
	setp.eq.s32	%p14, %r1623, 115;
	@%p14 bra 	BB1_466;

	setp.eq.s32	%p15, %r1623, 116;
	@%p15 bra 	BB1_1011;
	bra.uni 	BB1_94;

BB1_1011:
	and.b32  	%r8453, %r35, 1077952576;
	shr.u32 	%r8454, %r8453, 1;
	and.b32  	%r8455, %r35, -2139062144;
	shr.u32 	%r8456, %r8455, 2;
	not.b32 	%r8457, %r8456;
	and.b32  	%r8458, %r8454, %r8457;
	and.b32  	%r8459, %r35, 522133279;
	add.s32 	%r8460, %r8459, 522133279;
	mov.u32 	%r8461, -84215046;
	sub.s32 	%r8462, %r8461, %r8459;
	and.b32  	%r8463, %r8458, %r8462;
	and.b32  	%r8464, %r8463, %r8460;
	xor.b32  	%r11058, %r8464, %r35;
	and.b32  	%r8465, %r34, 1077952576;
	shr.u32 	%r8466, %r8465, 1;
	and.b32  	%r8467, %r34, -2139062144;
	shr.u32 	%r8468, %r8467, 2;
	not.b32 	%r8469, %r8468;
	and.b32  	%r8470, %r8466, %r8469;
	and.b32  	%r8471, %r34, 522133279;
	add.s32 	%r8472, %r8471, 522133279;
	sub.s32 	%r8473, %r8461, %r8471;
	and.b32  	%r8474, %r8470, %r8473;
	and.b32  	%r8475, %r8474, %r8472;
	xor.b32  	%r11059, %r8475, %r34;
	and.b32  	%r8476, %r33, 1077952576;
	shr.u32 	%r8477, %r8476, 1;
	and.b32  	%r8478, %r33, -2139062144;
	shr.u32 	%r8479, %r8478, 2;
	not.b32 	%r8480, %r8479;
	and.b32  	%r8481, %r8477, %r8480;
	and.b32  	%r8482, %r33, 522133279;
	add.s32 	%r8483, %r8482, 522133279;
	sub.s32 	%r8484, %r8461, %r8482;
	and.b32  	%r8485, %r8481, %r8484;
	and.b32  	%r8486, %r8485, %r8483;
	xor.b32  	%r11060, %r8486, %r33;
	and.b32  	%r8487, %r32, 1077952576;
	shr.u32 	%r8488, %r8487, 1;
	and.b32  	%r8489, %r32, -2139062144;
	shr.u32 	%r8490, %r8489, 2;
	not.b32 	%r8491, %r8490;
	and.b32  	%r8492, %r8488, %r8491;
	and.b32  	%r8493, %r32, 522133279;
	add.s32 	%r8494, %r8493, 522133279;
	sub.s32 	%r8495, %r8461, %r8493;
	and.b32  	%r8496, %r8492, %r8495;
	and.b32  	%r8497, %r8496, %r8494;
	xor.b32  	%r11061, %r8497, %r32;
	and.b32  	%r8498, %r39, 1077952576;
	shr.u32 	%r8499, %r8498, 1;
	and.b32  	%r8500, %r39, -2139062144;
	shr.u32 	%r8501, %r8500, 2;
	not.b32 	%r8502, %r8501;
	and.b32  	%r8503, %r8499, %r8502;
	and.b32  	%r8504, %r39, 522133279;
	add.s32 	%r8505, %r8504, 522133279;
	sub.s32 	%r8506, %r8461, %r8504;
	and.b32  	%r8507, %r8503, %r8506;
	and.b32  	%r8508, %r8507, %r8505;
	xor.b32  	%r11054, %r8508, %r39;
	and.b32  	%r8509, %r38, 1077952576;
	shr.u32 	%r8510, %r8509, 1;
	and.b32  	%r8511, %r38, -2139062144;
	shr.u32 	%r8512, %r8511, 2;
	not.b32 	%r8513, %r8512;
	and.b32  	%r8514, %r8510, %r8513;
	and.b32  	%r8515, %r38, 522133279;
	add.s32 	%r8516, %r8515, 522133279;
	sub.s32 	%r8517, %r8461, %r8515;
	and.b32  	%r8518, %r8514, %r8517;
	and.b32  	%r8519, %r8518, %r8516;
	xor.b32  	%r11055, %r8519, %r38;
	and.b32  	%r8520, %r37, 1077952576;
	shr.u32 	%r8521, %r8520, 1;
	and.b32  	%r8522, %r37, -2139062144;
	shr.u32 	%r8523, %r8522, 2;
	not.b32 	%r8524, %r8523;
	and.b32  	%r8525, %r8521, %r8524;
	and.b32  	%r8526, %r37, 522133279;
	add.s32 	%r8527, %r8526, 522133279;
	sub.s32 	%r8528, %r8461, %r8526;
	and.b32  	%r8529, %r8525, %r8528;
	and.b32  	%r8530, %r8529, %r8527;
	xor.b32  	%r11056, %r8530, %r37;
	and.b32  	%r8531, %r36, 1077952576;
	shr.u32 	%r8532, %r8531, 1;
	and.b32  	%r8533, %r36, -2139062144;
	shr.u32 	%r8534, %r8533, 2;
	not.b32 	%r8535, %r8534;
	and.b32  	%r8536, %r8532, %r8535;
	and.b32  	%r8537, %r36, 522133279;
	add.s32 	%r8538, %r8537, 522133279;
	sub.s32 	%r8539, %r8461, %r8537;
	and.b32  	%r8540, %r8536, %r8539;
	and.b32  	%r8541, %r8540, %r8538;
	xor.b32  	%r11057, %r8541, %r36;
	bra.uni 	BB1_1014;

BB1_24:
	setp.eq.s32	%p48, %r1623, 64;
	@%p48 bra 	BB1_440;

	setp.eq.s32	%p49, %r1623, 67;
	@%p49 bra 	BB1_1012;
	bra.uni 	BB1_26;

BB1_1012:
	and.b32  	%r8542, %r35, 1077952576;
	shr.u32 	%r8543, %r8542, 1;
	and.b32  	%r8544, %r35, -2139062144;
	shr.u32 	%r8545, %r8544, 2;
	not.b32 	%r8546, %r8545;
	and.b32  	%r8547, %r8543, %r8546;
	and.b32  	%r8548, %r35, 522133279;
	add.s32 	%r8549, %r8548, 522133279;
	mov.u32 	%r8550, -84215046;
	sub.s32 	%r8551, %r8550, %r8548;
	and.b32  	%r8552, %r8547, %r8551;
	and.b32  	%r8553, %r8552, %r8549;
	not.b32 	%r8554, %r8553;
	and.b32  	%r8555, %r35, %r8554;
	and.b32  	%r8556, %r34, 1077952576;
	shr.u32 	%r8557, %r8556, 1;
	and.b32  	%r8558, %r34, -2139062144;
	shr.u32 	%r8559, %r8558, 2;
	not.b32 	%r8560, %r8559;
	and.b32  	%r8561, %r8557, %r8560;
	and.b32  	%r8562, %r34, 522133279;
	add.s32 	%r8563, %r8562, 522133279;
	sub.s32 	%r8564, %r8550, %r8562;
	and.b32  	%r8565, %r8561, %r8564;
	and.b32  	%r8566, %r8565, %r8563;
	not.b32 	%r8567, %r8566;
	and.b32  	%r11059, %r34, %r8567;
	and.b32  	%r8568, %r33, 1077952576;
	shr.u32 	%r8569, %r8568, 1;
	and.b32  	%r8570, %r33, -2139062144;
	shr.u32 	%r8571, %r8570, 2;
	not.b32 	%r8572, %r8571;
	and.b32  	%r8573, %r8569, %r8572;
	and.b32  	%r8574, %r33, 522133279;
	add.s32 	%r8575, %r8574, 522133279;
	sub.s32 	%r8576, %r8550, %r8574;
	and.b32  	%r8577, %r8573, %r8576;
	and.b32  	%r8578, %r8577, %r8575;
	not.b32 	%r8579, %r8578;
	and.b32  	%r11060, %r33, %r8579;
	and.b32  	%r8580, %r32, 1077952576;
	shr.u32 	%r8581, %r8580, 1;
	and.b32  	%r8582, %r32, -2139062144;
	shr.u32 	%r8583, %r8582, 2;
	not.b32 	%r8584, %r8583;
	and.b32  	%r8585, %r8581, %r8584;
	and.b32  	%r8586, %r32, 522133279;
	add.s32 	%r8587, %r8586, 522133279;
	sub.s32 	%r8588, %r8550, %r8586;
	and.b32  	%r8589, %r8585, %r8588;
	and.b32  	%r8590, %r8589, %r8587;
	not.b32 	%r8591, %r8590;
	and.b32  	%r11061, %r32, %r8591;
	and.b32  	%r8592, %r39, 1077952576;
	shr.u32 	%r8593, %r8592, 1;
	and.b32  	%r8594, %r39, -2139062144;
	shr.u32 	%r8595, %r8594, 2;
	not.b32 	%r8596, %r8595;
	and.b32  	%r8597, %r8593, %r8596;
	and.b32  	%r8598, %r39, 522133279;
	add.s32 	%r8599, %r8598, 522133279;
	sub.s32 	%r8600, %r8550, %r8598;
	and.b32  	%r8601, %r8597, %r8600;
	and.b32  	%r8602, %r8601, %r8599;
	not.b32 	%r8603, %r8602;
	and.b32  	%r11054, %r39, %r8603;
	and.b32  	%r8604, %r38, 1077952576;
	shr.u32 	%r8605, %r8604, 1;
	and.b32  	%r8606, %r38, -2139062144;
	shr.u32 	%r8607, %r8606, 2;
	not.b32 	%r8608, %r8607;
	and.b32  	%r8609, %r8605, %r8608;
	and.b32  	%r8610, %r38, 522133279;
	add.s32 	%r8611, %r8610, 522133279;
	sub.s32 	%r8612, %r8550, %r8610;
	and.b32  	%r8613, %r8609, %r8612;
	and.b32  	%r8614, %r8613, %r8611;
	not.b32 	%r8615, %r8614;
	and.b32  	%r11055, %r38, %r8615;
	and.b32  	%r8616, %r37, 1077952576;
	shr.u32 	%r8617, %r8616, 1;
	and.b32  	%r8618, %r37, -2139062144;
	shr.u32 	%r8619, %r8618, 2;
	not.b32 	%r8620, %r8619;
	and.b32  	%r8621, %r8617, %r8620;
	and.b32  	%r8622, %r37, 522133279;
	add.s32 	%r8623, %r8622, 522133279;
	sub.s32 	%r8624, %r8550, %r8622;
	and.b32  	%r8625, %r8621, %r8624;
	and.b32  	%r8626, %r8625, %r8623;
	not.b32 	%r8627, %r8626;
	and.b32  	%r11056, %r37, %r8627;
	and.b32  	%r8628, %r36, 1077952576;
	shr.u32 	%r8629, %r8628, 1;
	and.b32  	%r8630, %r36, -2139062144;
	shr.u32 	%r8631, %r8630, 2;
	not.b32 	%r8632, %r8631;
	and.b32  	%r8633, %r8629, %r8632;
	and.b32  	%r8634, %r36, 522133279;
	add.s32 	%r8635, %r8634, 522133279;
	sub.s32 	%r8636, %r8550, %r8634;
	and.b32  	%r8637, %r8633, %r8636;
	and.b32  	%r8638, %r8637, %r8635;
	not.b32 	%r8639, %r8638;
	and.b32  	%r11057, %r36, %r8639;
	and.b32  	%r8640, %r8555, 1077952576;
	shr.u32 	%r8641, %r8640, 1;
	and.b32  	%r8642, %r8555, 128;
	shr.u32 	%r8643, %r8642, 2;
	and.b32  	%r8644, %r8555, 522133279;
	add.s32 	%r8645, %r8644, 522133279;
	sub.s32 	%r8646, %r8550, %r8644;
	xor.b32  	%r8647, %r8643, 32;
	and.b32  	%r8648, %r8647, %r8641;
	and.b32  	%r8649, %r8648, %r8646;
	and.b32  	%r8650, %r8649, %r8645;
	or.b32  	%r11058, %r8650, %r8555;
	bra.uni 	BB1_1014;

BB1_78:
	setp.eq.s32	%p21, %r1623, 108;
	@%p21 bra 	BB1_1013;

	setp.eq.s32	%p22, %r1623, 111;
	@%p22 bra 	BB1_487;
	bra.uni 	BB1_80;

BB1_487:
	setp.ge.u32	%p458, %r41, %r23;
	@%p458 bra 	BB1_108;

	and.b32  	%r5154, %r40, 3;
	shl.b32 	%r5155, %r5154, 3;
	shl.b32 	%r5156, %r43, %r5155;
	mov.u32 	%r5157, 255;
	shl.b32 	%r5158, %r5157, %r5155;
	not.b32 	%r5159, %r5158;
	st.local.v4.u32 	[%rd84], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd84+16], {%r39, %r38, %r37, %r36};
	ld.local.u32 	%r5160, [%rd87];
	and.b32  	%r5161, %r5160, %r5159;
	or.b32  	%r5162, %r5161, %r5156;
	st.local.u32 	[%rd87], %r5162;
	bra.uni 	BB1_326;

BB1_54:
	setp.eq.s32	%p35, %r1623, 90;
	@%p35 bra 	BB1_329;

	setp.eq.s32	%p36, %r1623, 91;
	@%p36 bra 	BB1_756;
	bra.uni 	BB1_56;

BB1_756:
	setp.eq.s32	%p614, %r23, 0;
	mov.u32 	%r6453, 0;
	@%p614 bra 	BB1_757;
	bra.uni 	BB1_758;

BB1_757:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11061, %r32;
	mov.u32 	%r11070, %r6453;
	bra.uni 	BB1_1015;

BB1_105:
	setp.eq.s32	%p8, %r1623, 122;
	@%p8 bra 	BB1_333;

	setp.eq.s32	%p9, %r1623, 123;
	@%p9 bra 	BB1_783;
	bra.uni 	BB1_107;

BB1_783:
	setp.eq.s32	%p627, %r23, 0;
	mov.u32 	%r11070, 0;
	@%p627 bra 	BB1_111;

	mov.u32 	%r6612, 8;
	// inline asm
	shf.r.wrap.b32 %r6581, %r35, %r34, %r6612;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6585, %r34, %r33, %r6612;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6589, %r33, %r32, %r6612;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6593, %r32, %r39, %r6612;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6597, %r39, %r38, %r6612;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6601, %r38, %r37, %r6612;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6605, %r37, %r36, %r6612;
	// inline asm
	mov.u32 	%r6611, 0;
	// inline asm
	shf.r.wrap.b32 %r6609, %r36, %r6611, %r6612;
	// inline asm
	mov.u32 	%r6613, 64;
	prmt.b32 	%r6614, %r35, %r35, %r6613;
	mov.u32 	%r6615, 1040;
	prmt.b32 	%r6616, %r6614, %r35, %r6615;
	mov.u32 	%r6617, 16912;
	prmt.b32 	%r6618, %r6616, %r35, %r6617;
	ld.const.u32 	%r6619, [%rd88];
	and.b32  	%r6620, %r6619, %r6618;
	or.b32  	%r11058, %r6620, %r6581;
	ld.const.u32 	%r6621, [%rd88+4];
	and.b32  	%r6622, %r6621, %r6618;
	or.b32  	%r11059, %r6622, %r6585;
	ld.const.u32 	%r6623, [%rd88+8];
	and.b32  	%r6624, %r6623, %r6618;
	or.b32  	%r11060, %r6624, %r6589;
	ld.const.u32 	%r6625, [%rd88+12];
	and.b32  	%r6626, %r6625, %r6618;
	or.b32  	%r11061, %r6626, %r6593;
	ld.const.u32 	%r6627, [%rd88+16];
	and.b32  	%r6628, %r6627, %r6618;
	or.b32  	%r11054, %r6628, %r6597;
	ld.const.u32 	%r6629, [%rd88+20];
	and.b32  	%r6630, %r6629, %r6618;
	or.b32  	%r11055, %r6630, %r6601;
	ld.const.u32 	%r6631, [%rd88+24];
	and.b32  	%r6632, %r6631, %r6618;
	or.b32  	%r11056, %r6632, %r6605;
	ld.const.u32 	%r6633, [%rd88+28];
	and.b32  	%r6634, %r6633, %r6618;
	or.b32  	%r11057, %r6634, %r6609;
	bra.uni 	BB1_1014;

BB1_9:
	setp.eq.s32	%p58, %r1623, 39;
	@%p58 bra 	BB1_10;
	bra.uni 	BB1_108;

BB1_10:
	setp.ge.u32	%p446, %r41, %r23;
	@%p446 bra 	BB1_108;

	and.b32  	%r5122, %r40, 3;
	shl.b32 	%r5123, %r5122, 3;
	mov.u32 	%r5124, 1;
	shl.b32 	%r5125, %r5124, %r5123;
	add.s32 	%r669, %r5125, -1;
	shr.u32 	%r5121, %r41, 2;
	setp.gt.s32	%p447, %r5121, 3;
	@%p447 bra 	BB1_474;

	setp.gt.s32	%p453, %r5121, 1;
	@%p453 bra 	BB1_471;

	setp.eq.s32	%p456, %r5121, 0;
	@%p456 bra 	BB1_14;
	bra.uni 	BB1_468;

BB1_14:
	and.b32  	%r11058, %r669, %r35;
	mov.u32 	%r11054, 0;
	mov.u32 	%r11055, %r11054;
	mov.u32 	%r11056, %r11054;
	mov.u32 	%r11057, %r11054;
	mov.u32 	%r11059, %r11054;
	bra.uni 	BB1_470;

BB1_61:
	setp.eq.s32	%p31, %r1623, 99;
	@%p31 bra 	BB1_62;
	bra.uni 	BB1_108;

BB1_62:
	and.b32  	%r8651, %r35, 1077952576;
	shr.u32 	%r8652, %r8651, 1;
	and.b32  	%r8653, %r35, -2139062144;
	shr.u32 	%r8654, %r8653, 2;
	not.b32 	%r8655, %r8654;
	and.b32  	%r8656, %r8652, %r8655;
	and.b32  	%r8657, %r35, 522133279;
	add.s32 	%r8658, %r8657, 522133279;
	mov.u32 	%r8659, -84215046;
	sub.s32 	%r8660, %r8659, %r8657;
	and.b32  	%r8661, %r8656, %r8660;
	and.b32  	%r8662, %r8661, %r8658;
	or.b32  	%r8663, %r8662, %r35;
	and.b32  	%r8664, %r34, 1077952576;
	shr.u32 	%r8665, %r8664, 1;
	and.b32  	%r8666, %r34, -2139062144;
	shr.u32 	%r8667, %r8666, 2;
	not.b32 	%r8668, %r8667;
	and.b32  	%r8669, %r8665, %r8668;
	and.b32  	%r8670, %r34, 522133279;
	add.s32 	%r8671, %r8670, 522133279;
	sub.s32 	%r8672, %r8659, %r8670;
	and.b32  	%r8673, %r8669, %r8672;
	and.b32  	%r8674, %r8673, %r8671;
	or.b32  	%r11059, %r8674, %r34;
	and.b32  	%r8675, %r33, 1077952576;
	shr.u32 	%r8676, %r8675, 1;
	and.b32  	%r8677, %r33, -2139062144;
	shr.u32 	%r8678, %r8677, 2;
	not.b32 	%r8679, %r8678;
	and.b32  	%r8680, %r8676, %r8679;
	and.b32  	%r8681, %r33, 522133279;
	add.s32 	%r8682, %r8681, 522133279;
	sub.s32 	%r8683, %r8659, %r8681;
	and.b32  	%r8684, %r8680, %r8683;
	and.b32  	%r8685, %r8684, %r8682;
	or.b32  	%r11060, %r8685, %r33;
	and.b32  	%r8686, %r32, 1077952576;
	shr.u32 	%r8687, %r8686, 1;
	and.b32  	%r8688, %r32, -2139062144;
	shr.u32 	%r8689, %r8688, 2;
	not.b32 	%r8690, %r8689;
	and.b32  	%r8691, %r8687, %r8690;
	and.b32  	%r8692, %r32, 522133279;
	add.s32 	%r8693, %r8692, 522133279;
	sub.s32 	%r8694, %r8659, %r8692;
	and.b32  	%r8695, %r8691, %r8694;
	and.b32  	%r8696, %r8695, %r8693;
	or.b32  	%r11061, %r8696, %r32;
	and.b32  	%r8697, %r39, 1077952576;
	shr.u32 	%r8698, %r8697, 1;
	and.b32  	%r8699, %r39, -2139062144;
	shr.u32 	%r8700, %r8699, 2;
	not.b32 	%r8701, %r8700;
	and.b32  	%r8702, %r8698, %r8701;
	and.b32  	%r8703, %r39, 522133279;
	add.s32 	%r8704, %r8703, 522133279;
	sub.s32 	%r8705, %r8659, %r8703;
	and.b32  	%r8706, %r8702, %r8705;
	and.b32  	%r8707, %r8706, %r8704;
	or.b32  	%r11054, %r8707, %r39;
	and.b32  	%r8708, %r38, 1077952576;
	shr.u32 	%r8709, %r8708, 1;
	and.b32  	%r8710, %r38, -2139062144;
	shr.u32 	%r8711, %r8710, 2;
	not.b32 	%r8712, %r8711;
	and.b32  	%r8713, %r8709, %r8712;
	and.b32  	%r8714, %r38, 522133279;
	add.s32 	%r8715, %r8714, 522133279;
	sub.s32 	%r8716, %r8659, %r8714;
	and.b32  	%r8717, %r8713, %r8716;
	and.b32  	%r8718, %r8717, %r8715;
	or.b32  	%r11055, %r8718, %r38;
	and.b32  	%r8719, %r37, 1077952576;
	shr.u32 	%r8720, %r8719, 1;
	and.b32  	%r8721, %r37, -2139062144;
	shr.u32 	%r8722, %r8721, 2;
	not.b32 	%r8723, %r8722;
	and.b32  	%r8724, %r8720, %r8723;
	and.b32  	%r8725, %r37, 522133279;
	add.s32 	%r8726, %r8725, 522133279;
	sub.s32 	%r8727, %r8659, %r8725;
	and.b32  	%r8728, %r8724, %r8727;
	and.b32  	%r8729, %r8728, %r8726;
	or.b32  	%r11056, %r8729, %r37;
	and.b32  	%r8730, %r36, 1077952576;
	shr.u32 	%r8731, %r8730, 1;
	and.b32  	%r8732, %r36, -2139062144;
	shr.u32 	%r8733, %r8732, 2;
	not.b32 	%r8734, %r8733;
	and.b32  	%r8735, %r8731, %r8734;
	and.b32  	%r8736, %r36, 522133279;
	add.s32 	%r8737, %r8736, 522133279;
	sub.s32 	%r8738, %r8659, %r8736;
	and.b32  	%r8739, %r8735, %r8738;
	and.b32  	%r8740, %r8739, %r8737;
	or.b32  	%r11057, %r8740, %r36;
	and.b32  	%r8741, %r8663, 64;
	shr.u32 	%r8742, %r8741, 1;
	and.b32  	%r8743, %r8663, 128;
	shr.u32 	%r8744, %r8743, 2;
	not.b32 	%r8745, %r8744;
	and.b32  	%r8746, %r8742, %r8745;
	and.b32  	%r8747, %r8663, 522133279;
	add.s32 	%r8748, %r8747, 31;
	sub.s32 	%r8749, %r8659, %r8747;
	and.b32  	%r8750, %r8746, %r8749;
	and.b32  	%r8751, %r8750, %r8748;
	not.b32 	%r8752, %r8751;
	or.b32  	%r8753, %r8752, -33;
	and.b32  	%r11058, %r8753, %r8663;
	bra.uni 	BB1_1014;

BB1_36:
	setp.eq.s32	%p45, %r1623, 75;
	@%p45 bra 	BB1_37;
	bra.uni 	BB1_108;

BB1_37:
	setp.lt.u32	%p258, %r23, 2;
	@%p258 bra 	BB1_108;

	st.local.v4.u32 	[%rd84], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd84+16], {%r39, %r38, %r37, %r36};
	add.s32 	%r3928, %r23, -2;
	cvt.s64.s32	%rd136, %r3928;
	add.s64 	%rd139, %rd84, %rd136;
	ld.local.u8 	%rs12, [%rd139];
	ld.local.u8 	%rs13, [%rd139+1];
	st.local.u8 	[%rd139], %rs13;
	st.local.u8 	[%rd139+1], %rs12;
	bra.uni 	BB1_326;

BB1_85:
	setp.eq.s32	%p18, %r1623, 114;
	@%p18 bra 	BB1_86;
	bra.uni 	BB1_108;

BB1_86:
	mov.u32 	%r7866, 32;
	sub.s32 	%r7865, %r7866, %r23;
	setp.gt.s32	%p715, %r7865, 15;
	@%p715 bra 	BB1_956;

	setp.gt.s32	%p739, %r7865, 7;
	@%p739 bra 	BB1_941;

	setp.gt.s32	%p751, %r7865, 3;
	@%p751 bra 	BB1_934;

	setp.eq.s32	%p757, %r7865, 1;
	@%p757 bra 	BB1_1004;

	setp.eq.s32	%p758, %r7865, 2;
	@%p758 bra 	BB1_91;
	bra.uni 	BB1_932;

BB1_91:
	mov.u32 	%r8367, 16;
	// inline asm
	shf.r.wrap.b32 %r11066, %r37, %r36, %r8367;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r38, %r37, %r8367;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r39, %r38, %r8367;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r32, %r39, %r8367;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r33, %r32, %r8367;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r34, %r33, %r8367;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r35, %r34, %r8367;
	// inline asm
	mov.u32 	%r8365, 0;
	// inline asm
	shf.r.wrap.b32 %r11065, %r8365, %r35, %r8367;
	// inline asm
	bra.uni 	BB1_1008;

BB1_21:
	setp.eq.s32	%p52, %r1623, 46;
	@%p52 bra 	BB1_22;
	bra.uni 	BB1_108;

BB1_22:
	add.s32 	%r3791, %r41, 1;
	setp.ge.u32	%p250, %r3791, %r23;
	@%p250 bra 	BB1_108;

	mov.u32 	%r3823, 8;
	// inline asm
	shf.r.wrap.b32 %r3792, %r35, %r34, %r3823;
	// inline asm
	st.local.u32 	[%rd84], %r3792;
	// inline asm
	shf.r.wrap.b32 %r3796, %r34, %r33, %r3823;
	// inline asm
	st.local.u32 	[%rd84+4], %r3796;
	// inline asm
	shf.r.wrap.b32 %r3800, %r33, %r32, %r3823;
	// inline asm
	st.local.u32 	[%rd84+8], %r3800;
	// inline asm
	shf.r.wrap.b32 %r3804, %r32, %r39, %r3823;
	// inline asm
	st.local.u32 	[%rd84+12], %r3804;
	// inline asm
	shf.r.wrap.b32 %r3808, %r39, %r38, %r3823;
	// inline asm
	st.local.u32 	[%rd84+16], %r3808;
	// inline asm
	shf.r.wrap.b32 %r3812, %r38, %r37, %r3823;
	// inline asm
	st.local.u32 	[%rd84+20], %r3812;
	// inline asm
	shf.r.wrap.b32 %r3816, %r37, %r36, %r3823;
	// inline asm
	st.local.u32 	[%rd84+24], %r3816;
	mov.u32 	%r3822, 0;
	// inline asm
	shf.r.wrap.b32 %r3820, %r36, %r3822, %r3823;
	// inline asm
	st.local.u32 	[%rd84+28], %r3820;
	and.b32  	%r3824, %r40, 3;
	shl.b32 	%r3825, %r3824, 3;
	mov.u32 	%r3826, 255;
	shl.b32 	%r3827, %r3826, %r3825;
	not.b32 	%r3828, %r3827;
	st.local.v4.u32 	[%rd85], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd85+16], {%r39, %r38, %r37, %r36};
	ld.local.u32 	%r3829, [%rd86];
	and.b32  	%r3830, %r3829, %r3828;
	ld.local.u32 	%r3831, [%rd87];
	and.b32  	%r3832, %r3831, %r3827;
	or.b32  	%r3833, %r3832, %r3830;
	st.local.u32 	[%rd86], %r3833;
	bra.uni 	BB1_317;

BB1_75:
	setp.eq.s32	%p25, %r1623, 107;
	@%p25 bra 	BB1_76;
	bra.uni 	BB1_108;

BB1_76:
	setp.lt.u32	%p259, %r23, 2;
	@%p259 bra 	BB1_108;

	and.b32  	%r3937, %r35, -65536;
	shl.b32 	%r3938, %r35, 8;
	and.b32  	%r3939, %r3938, 65280;
	or.b32  	%r3940, %r3939, %r3937;
	bfe.u32 	%r3941, %r35, 8, 8;
	or.b32  	%r11058, %r3940, %r3941;
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;
	bra.uni 	BB1_109;

BB1_46:
	setp.eq.s32	%p39, %r1623, 89;
	@%p39 bra 	BB1_47;
	bra.uni 	BB1_108;

BB1_47:
	setp.gt.u32	%p127, %r41, %r23;
	add.s32 	%r11070, %r41, %r23;
	setp.gt.u32	%p128, %r11070, 31;
	or.pred  	%p129, %p127, %p128;
	@%p129 bra 	BB1_108;

	setp.gt.s32	%p130, %r41, 15;
	@%p130 bra 	BB1_145;

	setp.gt.s32	%p154, %r41, 7;
	@%p154 bra 	BB1_129;

	setp.gt.s32	%p166, %r41, 3;
	@%p166 bra 	BB1_122;

	setp.gt.s32	%p172, %r41, 1;
	@%p172 bra 	BB1_119;

	setp.eq.s32	%p175, %r41, 0;
	@%p175 bra 	BB1_53;
	bra.uni 	BB1_117;

BB1_53:
	mov.u32 	%r11062, %r39;
	mov.u32 	%r11063, %r38;
	mov.u32 	%r11064, %r37;
	mov.u32 	%r11065, %r36;
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11069, %r32;
	bra.uni 	BB1_195;

BB1_98:
	setp.eq.s32	%p12, %r1623, 121;
	@%p12 bra 	BB1_99;
	bra.uni 	BB1_108;

BB1_99:
	setp.gt.u32	%p188, %r41, %r23;
	add.s32 	%r11070, %r41, %r23;
	setp.gt.u32	%p189, %r11070, 31;
	or.pred  	%p190, %p188, %p189;
	@%p190 bra 	BB1_108;

	and.b32  	%r3165, %r40, 3;
	shl.b32 	%r3166, %r3165, 3;
	mov.u32 	%r3167, 1;
	shl.b32 	%r3168, %r3167, %r3166;
	add.s32 	%r233, %r3168, -1;
	shr.u32 	%r3164, %r41, 2;
	setp.gt.s32	%p191, %r3164, 3;
	@%p191 bra 	BB1_221;

	setp.gt.s32	%p197, %r3164, 1;
	@%p197 bra 	BB1_218;

	setp.eq.s32	%p200, %r3164, 0;
	@%p200 bra 	BB1_103;
	bra.uni 	BB1_216;

BB1_103:
	and.b32  	%r11066, %r233, %r35;
	mov.u32 	%r11062, 0;
	mov.u32 	%r11063, %r11062;
	mov.u32 	%r11064, %r11062;
	mov.u32 	%r11065, %r11062;
	mov.u32 	%r11067, %r11062;
	bra.uni 	BB1_104;

BB1_324:
	setp.gt.u32	%p255, %r23, %r43;
	setp.lt.u32	%p256, %r41, %r23;
	and.pred  	%p257, %p256, %p255;
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11061, %r32;
	mov.u32 	%r11070, %r23;
	@!%p257 bra 	BB1_1015;
	bra.uni 	BB1_325;

BB1_325:
	st.local.v4.u32 	[%rd84], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd84+16], {%r39, %r38, %r37, %r36};
	cvt.u64.u32	%rd132, %r41;
	add.s64 	%rd133, %rd84, %rd132;
	ld.local.u8 	%rs10, [%rd133];
	cvt.u64.u32	%rd134, %r43;
	add.s64 	%rd135, %rd84, %rd134;
	ld.local.u8 	%rs11, [%rd135];
	st.local.u8 	[%rd133], %rs11;
	st.local.u8 	[%rd135], %rs10;
	bra.uni 	BB1_326;

BB1_17:
	setp.eq.s32	%p56, %r1623, 44;
	@%p56 bra 	BB1_18;
	bra.uni 	BB1_108;

BB1_18:
	setp.lt.u32	%p247, %r41, %r23;
	setp.ne.s32	%p248, %r41, 0;
	and.pred  	%p249, %p248, %p247;
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11061, %r32;
	mov.u32 	%r11070, %r23;
	@!%p249 bra 	BB1_1015;
	bra.uni 	BB1_316;

BB1_316:
	mov.u32 	%r3772, 24;
	// inline asm
	shf.r.wrap.b32 %r3741, %r37, %r36, %r3772;
	// inline asm
	st.local.u32 	[%rd84+28], %r3741;
	// inline asm
	shf.r.wrap.b32 %r3745, %r38, %r37, %r3772;
	// inline asm
	st.local.u32 	[%rd84+24], %r3745;
	// inline asm
	shf.r.wrap.b32 %r3749, %r39, %r38, %r3772;
	// inline asm
	st.local.u32 	[%rd84+20], %r3749;
	// inline asm
	shf.r.wrap.b32 %r3753, %r32, %r39, %r3772;
	// inline asm
	st.local.u32 	[%rd84+16], %r3753;
	// inline asm
	shf.r.wrap.b32 %r3757, %r33, %r32, %r3772;
	// inline asm
	st.local.u32 	[%rd84+12], %r3757;
	// inline asm
	shf.r.wrap.b32 %r3761, %r34, %r33, %r3772;
	// inline asm
	st.local.u32 	[%rd84+8], %r3761;
	// inline asm
	shf.r.wrap.b32 %r3765, %r35, %r34, %r3772;
	// inline asm
	st.local.u32 	[%rd84+4], %r3765;
	mov.u32 	%r3770, 0;
	// inline asm
	shf.r.wrap.b32 %r3769, %r3770, %r35, %r3772;
	// inline asm
	st.local.u32 	[%rd84], %r3769;
	and.b32  	%r3773, %r40, 3;
	shl.b32 	%r3774, %r3773, 3;
	mov.u32 	%r3775, 255;
	shl.b32 	%r3776, %r3775, %r3774;
	not.b32 	%r3777, %r3776;
	st.local.v4.u32 	[%rd85], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd85+16], {%r39, %r38, %r37, %r36};
	ld.local.u32 	%r3778, [%rd86];
	and.b32  	%r3779, %r3778, %r3777;
	ld.local.u32 	%r3780, [%rd87];
	and.b32  	%r3781, %r3780, %r3776;
	or.b32  	%r3782, %r3781, %r3779;
	st.local.u32 	[%rd86], %r3782;

BB1_317:
	ld.local.v4.u32 	{%r11058, %r11059, %r11060, %r11061}, [%rd85];
	ld.local.v4.u32 	{%r11054, %r11055, %r11056, %r11057}, [%rd85+16];
	bra.uni 	BB1_1014;

BB1_911:
	add.s32 	%r11070, %r23, %r23;
	setp.gt.u32	%p703, %r11070, 31;
	@%p703 bra 	BB1_108;

	shr.u32 	%r7686, %r23, 2;
	and.b32  	%r7687, %r23, 3;
	mov.u32 	%r7688, 4;
	sub.s32 	%r7689, %r7688, %r7687;
	shl.b32 	%r7690, %r7689, 2;
	mov.u32 	%r7691, 1985229328;
	shr.u32 	%r7692, %r7691, %r7690;
	and.b32  	%r1297, %r7692, 65535;
	mov.u32 	%r11038, 0;
	setp.gt.s32	%p704, %r7686, 3;
	@%p704 bra 	BB1_920;

	setp.gt.s32	%p710, %r7686, 1;
	@%p710 bra 	BB1_917;

	setp.eq.s32	%p713, %r7686, 0;
	@%p713 bra 	BB1_930;
	bra.uni 	BB1_915;

BB1_930:
	// inline asm
	prmt.b32 %r11045, %r37, %r36, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11044, %r38, %r37, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11043, %r39, %r38, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11042, %r32, %r39, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11041, %r33, %r32, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11040, %r34, %r33, %r1297;
	// inline asm
	// inline asm
	prmt.b32 %r11039, %r35, %r34, %r1297;
	// inline asm
	mov.u32 	%r7862, 0;
	// inline asm
	prmt.b32 %r11038, %r7862, %r35, %r1297;
	// inline asm
	bra.uni 	BB1_931;

BB1_65:
	setp.eq.s32	%p29, %r1623, 102;
	@%p29 bra 	BB1_66;
	bra.uni 	BB1_108;

BB1_66:
	add.s32 	%r11070, %r23, %r23;
	setp.gt.u32	%p630, %r11070, 31;
	@%p630 bra 	BB1_108;

	mov.u32 	%r6699, 32;
	sub.s32 	%r6698, %r6699, %r23;
	mov.u32 	%r11012, 0;
	setp.gt.s32	%p631, %r6698, 15;
	@%p631 bra 	BB1_817;

	setp.gt.s32	%p655, %r6698, 7;
	@%p655 bra 	BB1_801;

	setp.gt.s32	%p667, %r6698, 3;
	@%p667 bra 	BB1_794;

	setp.gt.s32	%p673, %r6698, 1;
	@%p673 bra 	BB1_791;

	setp.eq.s32	%p676, %r6698, 0;
	@%p676 bra 	BB1_72;
	bra.uni 	BB1_789;

BB1_72:
	mov.u32 	%r11069, %r39;
	mov.u32 	%r11068, %r38;
	mov.u32 	%r11067, %r37;
	mov.u32 	%r11066, %r36;
	mov.u32 	%r11065, %r35;
	mov.u32 	%r11064, %r34;
	mov.u32 	%r11063, %r33;
	mov.u32 	%r11062, %r32;
	bra.uni 	BB1_868;

BB1_322:
	setp.ge.u32	%p254, %r41, %r23;
	@%p254 bra 	BB1_108;

	and.b32  	%r3901, %r40, 3;
	shl.b32 	%r3902, %r3901, 3;
	mov.u32 	%r3903, 255;
	shl.b32 	%r3904, %r3903, %r3902;
	not.b32 	%r3905, %r3904;
	st.local.v4.u32 	[%rd84], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd84+16], {%r39, %r38, %r37, %r36};
	ld.local.u32 	%r3906, [%rd87];
	and.b32  	%r3907, %r3906, %r3905;
	and.b32  	%r3908, %r3906, %r3904;
	shl.b32 	%r3909, %r3908, 1;
	and.b32  	%r3910, %r3909, %r3904;
	or.b32  	%r3911, %r3910, %r3907;
	st.local.u32 	[%rd87], %r3911;
	bra.uni 	BB1_326;

BB1_41:
	setp.eq.s32	%p43, %r1623, 82;
	@%p43 bra 	BB1_42;
	bra.uni 	BB1_108;

BB1_42:
	setp.ge.u32	%p253, %r41, %r23;
	@%p253 bra 	BB1_108;

	and.b32  	%r3882, %r40, 3;
	shl.b32 	%r3883, %r3882, 3;
	mov.u32 	%r3884, 255;
	shl.b32 	%r3885, %r3884, %r3883;
	not.b32 	%r3886, %r3885;
	st.local.v4.u32 	[%rd84], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd84+16], {%r39, %r38, %r37, %r36};
	ld.local.u32 	%r3887, [%rd87];
	and.b32  	%r3888, %r3887, %r3886;
	and.b32  	%r3889, %r3887, %r3885;
	shr.u32 	%r3890, %r3889, 1;
	and.b32  	%r3891, %r3890, %r3885;
	or.b32  	%r3892, %r3891, %r3888;
	st.local.u32 	[%rd87], %r3892;

BB1_326:
	ld.local.v4.u32 	{%r11058, %r11059, %r11060, %r11061}, [%rd84];
	ld.local.v4.u32 	{%r11054, %r11055, %r11056, %r11057}, [%rd84+16];
	bra.uni 	BB1_1014;

BB1_466:
	mov.u32 	%r4930, 0;
	mov.u32 	%r4943, 8;
	// inline asm
	bfe.u32 %r4816, %r35, %r4930, %r4943;
	// inline asm
	setp.eq.s32	%p373, %r4816, %r41;
	selp.u32	%r4944, 1, 0, %p373;
	// inline asm
	bfe.u32 %r4820, %r35, %r4943, %r4943;
	// inline asm
	setp.eq.s32	%p374, %r4820, %r41;
	or.b32  	%r4945, %r4944, 2;
	selp.b32	%r4946, %r4945, %r4944, %p374;
	mov.u32 	%r4938, 16;
	// inline asm
	bfe.u32 %r4824, %r35, %r4938, %r4943;
	// inline asm
	setp.eq.s32	%p375, %r4824, %r41;
	or.b32  	%r4947, %r4946, 4;
	selp.b32	%r4948, %r4947, %r4946, %p375;
	mov.u32 	%r4942, 24;
	// inline asm
	bfe.u32 %r4828, %r35, %r4942, %r4943;
	// inline asm
	setp.eq.s32	%p376, %r4828, %r41;
	or.b32  	%r4949, %r4948, 8;
	selp.b32	%r653, %r4949, %r4948, %p376;
	// inline asm
	bfe.u32 %r4832, %r34, %r4930, %r4943;
	// inline asm
	setp.eq.s32	%p377, %r4832, %r41;
	selp.u32	%r4950, 1, 0, %p377;
	// inline asm
	bfe.u32 %r4836, %r34, %r4943, %r4943;
	// inline asm
	setp.eq.s32	%p378, %r4836, %r41;
	or.b32  	%r4951, %r4950, 2;
	selp.b32	%r4952, %r4951, %r4950, %p378;
	// inline asm
	bfe.u32 %r4840, %r34, %r4938, %r4943;
	// inline asm
	setp.eq.s32	%p379, %r4840, %r41;
	or.b32  	%r4953, %r4952, 4;
	selp.b32	%r4954, %r4953, %r4952, %p379;
	// inline asm
	bfe.u32 %r4844, %r34, %r4942, %r4943;
	// inline asm
	setp.eq.s32	%p380, %r4844, %r41;
	or.b32  	%r4955, %r4954, 8;
	selp.b32	%r654, %r4955, %r4954, %p380;
	// inline asm
	bfe.u32 %r4848, %r33, %r4930, %r4943;
	// inline asm
	setp.eq.s32	%p381, %r4848, %r41;
	selp.u32	%r4956, 1, 0, %p381;
	// inline asm
	bfe.u32 %r4852, %r33, %r4943, %r4943;
	// inline asm
	setp.eq.s32	%p382, %r4852, %r41;
	or.b32  	%r4957, %r4956, 2;
	selp.b32	%r4958, %r4957, %r4956, %p382;
	// inline asm
	bfe.u32 %r4856, %r33, %r4938, %r4943;
	// inline asm
	setp.eq.s32	%p383, %r4856, %r41;
	or.b32  	%r4959, %r4958, 4;
	selp.b32	%r4960, %r4959, %r4958, %p383;
	// inline asm
	bfe.u32 %r4860, %r33, %r4942, %r4943;
	// inline asm
	setp.eq.s32	%p384, %r4860, %r41;
	or.b32  	%r4961, %r4960, 8;
	selp.b32	%r655, %r4961, %r4960, %p384;
	// inline asm
	bfe.u32 %r4864, %r32, %r4930, %r4943;
	// inline asm
	setp.eq.s32	%p385, %r4864, %r41;
	selp.u32	%r4962, 1, 0, %p385;
	// inline asm
	bfe.u32 %r4868, %r32, %r4943, %r4943;
	// inline asm
	setp.eq.s32	%p386, %r4868, %r41;
	or.b32  	%r4963, %r4962, 2;
	selp.b32	%r4964, %r4963, %r4962, %p386;
	// inline asm
	bfe.u32 %r4872, %r32, %r4938, %r4943;
	// inline asm
	setp.eq.s32	%p387, %r4872, %r41;
	or.b32  	%r4965, %r4964, 4;
	selp.b32	%r4966, %r4965, %r4964, %p387;
	// inline asm
	bfe.u32 %r4876, %r32, %r4942, %r4943;
	// inline asm
	setp.eq.s32	%p388, %r4876, %r41;
	or.b32  	%r4967, %r4966, 8;
	selp.b32	%r656, %r4967, %r4966, %p388;
	// inline asm
	bfe.u32 %r4880, %r39, %r4930, %r4943;
	// inline asm
	setp.eq.s32	%p389, %r4880, %r41;
	selp.u32	%r4968, 1, 0, %p389;
	// inline asm
	bfe.u32 %r4884, %r39, %r4943, %r4943;
	// inline asm
	setp.eq.s32	%p390, %r4884, %r41;
	or.b32  	%r4969, %r4968, 2;
	selp.b32	%r4970, %r4969, %r4968, %p390;
	// inline asm
	bfe.u32 %r4888, %r39, %r4938, %r4943;
	// inline asm
	setp.eq.s32	%p391, %r4888, %r41;
	or.b32  	%r4971, %r4970, 4;
	selp.b32	%r4972, %r4971, %r4970, %p391;
	// inline asm
	bfe.u32 %r4892, %r39, %r4942, %r4943;
	// inline asm
	setp.eq.s32	%p392, %r4892, %r41;
	or.b32  	%r4973, %r4972, 8;
	selp.b32	%r657, %r4973, %r4972, %p392;
	// inline asm
	bfe.u32 %r4896, %r38, %r4930, %r4943;
	// inline asm
	setp.eq.s32	%p393, %r4896, %r41;
	selp.u32	%r4974, 1, 0, %p393;
	// inline asm
	bfe.u32 %r4900, %r38, %r4943, %r4943;
	// inline asm
	setp.eq.s32	%p394, %r4900, %r41;
	or.b32  	%r4975, %r4974, 2;
	selp.b32	%r4976, %r4975, %r4974, %p394;
	// inline asm
	bfe.u32 %r4904, %r38, %r4938, %r4943;
	// inline asm
	setp.eq.s32	%p395, %r4904, %r41;
	or.b32  	%r4977, %r4976, 4;
	selp.b32	%r4978, %r4977, %r4976, %p395;
	// inline asm
	bfe.u32 %r4908, %r38, %r4942, %r4943;
	// inline asm
	setp.eq.s32	%p396, %r4908, %r41;
	or.b32  	%r4979, %r4978, 8;
	selp.b32	%r658, %r4979, %r4978, %p396;
	// inline asm
	bfe.u32 %r4912, %r37, %r4930, %r4943;
	// inline asm
	setp.eq.s32	%p397, %r4912, %r41;
	selp.u32	%r4980, 1, 0, %p397;
	// inline asm
	bfe.u32 %r4916, %r37, %r4943, %r4943;
	// inline asm
	setp.eq.s32	%p398, %r4916, %r41;
	or.b32  	%r4981, %r4980, 2;
	selp.b32	%r4982, %r4981, %r4980, %p398;
	// inline asm
	bfe.u32 %r4920, %r37, %r4938, %r4943;
	// inline asm
	setp.eq.s32	%p399, %r4920, %r41;
	or.b32  	%r4983, %r4982, 4;
	selp.b32	%r4984, %r4983, %r4982, %p399;
	// inline asm
	bfe.u32 %r4924, %r37, %r4942, %r4943;
	// inline asm
	setp.eq.s32	%p400, %r4924, %r41;
	or.b32  	%r4985, %r4984, 8;
	selp.b32	%r659, %r4985, %r4984, %p400;
	// inline asm
	bfe.u32 %r4928, %r36, %r4930, %r4943;
	// inline asm
	setp.eq.s32	%p401, %r4928, %r41;
	selp.u32	%r4986, 1, 0, %p401;
	// inline asm
	bfe.u32 %r4932, %r36, %r4943, %r4943;
	// inline asm
	setp.eq.s32	%p402, %r4932, %r41;
	or.b32  	%r4987, %r4986, 2;
	selp.b32	%r4988, %r4987, %r4986, %p402;
	// inline asm
	bfe.u32 %r4936, %r36, %r4938, %r4943;
	// inline asm
	setp.eq.s32	%p403, %r4936, %r41;
	or.b32  	%r4989, %r4988, 4;
	selp.b32	%r4990, %r4989, %r4988, %p403;
	// inline asm
	bfe.u32 %r4940, %r36, %r4942, %r4943;
	// inline asm
	setp.eq.s32	%p404, %r4940, %r41;
	or.b32  	%r4991, %r4990, 8;
	selp.b32	%r660, %r4991, %r4990, %p404;
	add.s32 	%r4992, %r654, %r653;
	add.s32 	%r4993, %r4992, %r655;
	add.s32 	%r4994, %r4993, %r656;
	add.s32 	%r4995, %r4994, %r657;
	add.s32 	%r4996, %r4995, %r658;
	add.s32 	%r4997, %r4996, %r659;
	neg.s32 	%r4998, %r660;
	setp.eq.s32	%p405, %r4997, %r4998;
	@%p405 bra 	BB1_108;

	and.b32  	%r4999, %r653, 1;
	setp.eq.b32	%p406, %r4999, 1;
	not.pred 	%p407, %p406;
	and.b32  	%r5000, %r35, -256;
	or.b32  	%r5001, %r43, %r5000;
	selp.b32	%r5002, %r35, %r5001, %p407;
	and.b32  	%r5003, %r653, 2;
	setp.eq.s32	%p408, %r5003, 0;
	and.b32  	%r5004, %r5002, -65281;
	shl.b32 	%r5005, %r43, 8;
	or.b32  	%r5006, %r5004, %r5005;
	selp.b32	%r5007, %r5002, %r5006, %p408;
	and.b32  	%r5008, %r653, 4;
	setp.eq.s32	%p409, %r5008, 0;
	and.b32  	%r5009, %r5007, -16711681;
	shl.b32 	%r5010, %r43, 16;
	or.b32  	%r5011, %r5009, %r5010;
	selp.b32	%r5012, %r5007, %r5011, %p409;
	and.b32  	%r5013, %r653, 8;
	setp.eq.s32	%p410, %r5013, 0;
	and.b32  	%r5014, %r5012, 16777215;
	prmt.b32 	%r5015, %r42, %r5014, 1620;
	selp.b32	%r11058, %r5012, %r5015, %p410;
	and.b32  	%r5016, %r654, 1;
	setp.eq.b32	%p411, %r5016, 1;
	not.pred 	%p412, %p411;
	and.b32  	%r5017, %r34, -256;
	or.b32  	%r5018, %r43, %r5017;
	selp.b32	%r5019, %r34, %r5018, %p412;
	and.b32  	%r5020, %r654, 2;
	setp.eq.s32	%p413, %r5020, 0;
	and.b32  	%r5021, %r5019, -65281;
	or.b32  	%r5022, %r5021, %r5005;
	selp.b32	%r5023, %r5019, %r5022, %p413;
	and.b32  	%r5024, %r654, 4;
	setp.eq.s32	%p414, %r5024, 0;
	and.b32  	%r5025, %r5023, -16711681;
	or.b32  	%r5026, %r5025, %r5010;
	selp.b32	%r5027, %r5023, %r5026, %p414;
	and.b32  	%r5028, %r654, 8;
	setp.eq.s32	%p415, %r5028, 0;
	and.b32  	%r5029, %r5027, 16777215;
	prmt.b32 	%r5030, %r42, %r5029, 1620;
	selp.b32	%r11059, %r5027, %r5030, %p415;
	and.b32  	%r5031, %r655, 1;
	setp.eq.b32	%p416, %r5031, 1;
	not.pred 	%p417, %p416;
	and.b32  	%r5032, %r33, -256;
	or.b32  	%r5033, %r43, %r5032;
	selp.b32	%r5034, %r33, %r5033, %p417;
	and.b32  	%r5035, %r655, 2;
	setp.eq.s32	%p418, %r5035, 0;
	and.b32  	%r5036, %r5034, -65281;
	or.b32  	%r5037, %r5036, %r5005;
	selp.b32	%r5038, %r5034, %r5037, %p418;
	and.b32  	%r5039, %r655, 4;
	setp.eq.s32	%p419, %r5039, 0;
	and.b32  	%r5040, %r5038, -16711681;
	or.b32  	%r5041, %r5040, %r5010;
	selp.b32	%r5042, %r5038, %r5041, %p419;
	and.b32  	%r5043, %r655, 8;
	setp.eq.s32	%p420, %r5043, 0;
	and.b32  	%r5044, %r5042, 16777215;
	prmt.b32 	%r5045, %r42, %r5044, 1620;
	selp.b32	%r11060, %r5042, %r5045, %p420;
	and.b32  	%r5046, %r656, 1;
	setp.eq.b32	%p421, %r5046, 1;
	not.pred 	%p422, %p421;
	and.b32  	%r5047, %r32, -256;
	or.b32  	%r5048, %r43, %r5047;
	selp.b32	%r5049, %r32, %r5048, %p422;
	and.b32  	%r5050, %r656, 2;
	setp.eq.s32	%p423, %r5050, 0;
	and.b32  	%r5051, %r5049, -65281;
	or.b32  	%r5052, %r5051, %r5005;
	selp.b32	%r5053, %r5049, %r5052, %p423;
	and.b32  	%r5054, %r656, 4;
	setp.eq.s32	%p424, %r5054, 0;
	and.b32  	%r5055, %r5053, -16711681;
	or.b32  	%r5056, %r5055, %r5010;
	selp.b32	%r5057, %r5053, %r5056, %p424;
	and.b32  	%r5058, %r656, 8;
	setp.eq.s32	%p425, %r5058, 0;
	and.b32  	%r5059, %r5057, 16777215;
	prmt.b32 	%r5060, %r42, %r5059, 1620;
	selp.b32	%r11061, %r5057, %r5060, %p425;
	and.b32  	%r5061, %r657, 1;
	setp.eq.b32	%p426, %r5061, 1;
	not.pred 	%p427, %p426;
	and.b32  	%r5062, %r39, -256;
	or.b32  	%r5063, %r43, %r5062;
	selp.b32	%r5064, %r39, %r5063, %p427;
	and.b32  	%r5065, %r657, 2;
	setp.eq.s32	%p428, %r5065, 0;
	and.b32  	%r5066, %r5064, -65281;
	or.b32  	%r5067, %r5066, %r5005;
	selp.b32	%r5068, %r5064, %r5067, %p428;
	and.b32  	%r5069, %r657, 4;
	setp.eq.s32	%p429, %r5069, 0;
	and.b32  	%r5070, %r5068, -16711681;
	or.b32  	%r5071, %r5070, %r5010;
	selp.b32	%r5072, %r5068, %r5071, %p429;
	and.b32  	%r5073, %r657, 8;
	setp.eq.s32	%p430, %r5073, 0;
	and.b32  	%r5074, %r5072, 16777215;
	prmt.b32 	%r5075, %r42, %r5074, 1620;
	selp.b32	%r11054, %r5072, %r5075, %p430;
	and.b32  	%r5076, %r658, 1;
	setp.eq.b32	%p431, %r5076, 1;
	not.pred 	%p432, %p431;
	and.b32  	%r5077, %r38, -256;
	or.b32  	%r5078, %r43, %r5077;
	selp.b32	%r5079, %r38, %r5078, %p432;
	and.b32  	%r5080, %r658, 2;
	setp.eq.s32	%p433, %r5080, 0;
	and.b32  	%r5081, %r5079, -65281;
	or.b32  	%r5082, %r5081, %r5005;
	selp.b32	%r5083, %r5079, %r5082, %p433;
	and.b32  	%r5084, %r658, 4;
	setp.eq.s32	%p434, %r5084, 0;
	and.b32  	%r5085, %r5083, -16711681;
	or.b32  	%r5086, %r5085, %r5010;
	selp.b32	%r5087, %r5083, %r5086, %p434;
	and.b32  	%r5088, %r658, 8;
	setp.eq.s32	%p435, %r5088, 0;
	and.b32  	%r5089, %r5087, 16777215;
	prmt.b32 	%r5090, %r42, %r5089, 1620;
	selp.b32	%r11055, %r5087, %r5090, %p435;
	and.b32  	%r5091, %r659, 1;
	setp.eq.b32	%p436, %r5091, 1;
	not.pred 	%p437, %p436;
	and.b32  	%r5092, %r37, -256;
	or.b32  	%r5093, %r43, %r5092;
	selp.b32	%r5094, %r37, %r5093, %p437;
	and.b32  	%r5095, %r659, 2;
	setp.eq.s32	%p438, %r5095, 0;
	and.b32  	%r5096, %r5094, -65281;
	or.b32  	%r5097, %r5096, %r5005;
	selp.b32	%r5098, %r5094, %r5097, %p438;
	and.b32  	%r5099, %r659, 4;
	setp.eq.s32	%p439, %r5099, 0;
	and.b32  	%r5100, %r5098, -16711681;
	or.b32  	%r5101, %r5100, %r5010;
	selp.b32	%r5102, %r5098, %r5101, %p439;
	and.b32  	%r5103, %r659, 8;
	setp.eq.s32	%p440, %r5103, 0;
	and.b32  	%r5104, %r5102, 16777215;
	prmt.b32 	%r5105, %r42, %r5104, 1620;
	selp.b32	%r11056, %r5102, %r5105, %p440;
	and.b32  	%r5106, %r660, 1;
	setp.eq.b32	%p441, %r5106, 1;
	not.pred 	%p442, %p441;
	and.b32  	%r5107, %r36, -256;
	or.b32  	%r5108, %r43, %r5107;
	selp.b32	%r5109, %r36, %r5108, %p442;
	and.b32  	%r5110, %r660, 2;
	setp.eq.s32	%p443, %r5110, 0;
	and.b32  	%r5111, %r5109, -65281;
	or.b32  	%r5112, %r5111, %r5005;
	selp.b32	%r5113, %r5109, %r5112, %p443;
	and.b32  	%r5114, %r660, 4;
	setp.eq.s32	%p444, %r5114, 0;
	and.b32  	%r5115, %r5113, -16711681;
	or.b32  	%r5116, %r5115, %r5010;
	selp.b32	%r5117, %r5113, %r5116, %p444;
	and.b32  	%r5118, %r660, 8;
	setp.eq.s32	%p445, %r5118, 0;
	and.b32  	%r5119, %r5117, 16777215;
	prmt.b32 	%r5120, %r42, %r5119, 1620;
	selp.b32	%r11057, %r5117, %r5120, %p445;
	bra.uni 	BB1_1014;

BB1_94:
	setp.eq.s32	%p16, %r1623, 117;
	@%p16 bra 	BB1_95;
	bra.uni 	BB1_108;

BB1_95:
	and.b32  	%r8754, %r35, 1077952576;
	shr.u32 	%r8755, %r8754, 1;
	and.b32  	%r8756, %r35, -2139062144;
	shr.u32 	%r8757, %r8756, 2;
	not.b32 	%r8758, %r8757;
	and.b32  	%r8759, %r8755, %r8758;
	and.b32  	%r8760, %r35, 522133279;
	add.s32 	%r8761, %r8760, 522133279;
	mov.u32 	%r8762, -84215046;
	sub.s32 	%r8763, %r8762, %r8760;
	and.b32  	%r8764, %r8759, %r8763;
	and.b32  	%r8765, %r8764, %r8761;
	not.b32 	%r8766, %r8765;
	and.b32  	%r11058, %r35, %r8766;
	and.b32  	%r8767, %r34, 1077952576;
	shr.u32 	%r8768, %r8767, 1;
	and.b32  	%r8769, %r34, -2139062144;
	shr.u32 	%r8770, %r8769, 2;
	not.b32 	%r8771, %r8770;
	and.b32  	%r8772, %r8768, %r8771;
	and.b32  	%r8773, %r34, 522133279;
	add.s32 	%r8774, %r8773, 522133279;
	sub.s32 	%r8775, %r8762, %r8773;
	and.b32  	%r8776, %r8772, %r8775;
	and.b32  	%r8777, %r8776, %r8774;
	not.b32 	%r8778, %r8777;
	and.b32  	%r11059, %r34, %r8778;
	and.b32  	%r8779, %r33, 1077952576;
	shr.u32 	%r8780, %r8779, 1;
	and.b32  	%r8781, %r33, -2139062144;
	shr.u32 	%r8782, %r8781, 2;
	not.b32 	%r8783, %r8782;
	and.b32  	%r8784, %r8780, %r8783;
	and.b32  	%r8785, %r33, 522133279;
	add.s32 	%r8786, %r8785, 522133279;
	sub.s32 	%r8787, %r8762, %r8785;
	and.b32  	%r8788, %r8784, %r8787;
	and.b32  	%r8789, %r8788, %r8786;
	not.b32 	%r8790, %r8789;
	and.b32  	%r11060, %r33, %r8790;
	and.b32  	%r8791, %r32, 1077952576;
	shr.u32 	%r8792, %r8791, 1;
	and.b32  	%r8793, %r32, -2139062144;
	shr.u32 	%r8794, %r8793, 2;
	not.b32 	%r8795, %r8794;
	and.b32  	%r8796, %r8792, %r8795;
	and.b32  	%r8797, %r32, 522133279;
	add.s32 	%r8798, %r8797, 522133279;
	sub.s32 	%r8799, %r8762, %r8797;
	and.b32  	%r8800, %r8796, %r8799;
	and.b32  	%r8801, %r8800, %r8798;
	not.b32 	%r8802, %r8801;
	and.b32  	%r11061, %r32, %r8802;
	and.b32  	%r8803, %r39, 1077952576;
	shr.u32 	%r8804, %r8803, 1;
	and.b32  	%r8805, %r39, -2139062144;
	shr.u32 	%r8806, %r8805, 2;
	not.b32 	%r8807, %r8806;
	and.b32  	%r8808, %r8804, %r8807;
	and.b32  	%r8809, %r39, 522133279;
	add.s32 	%r8810, %r8809, 522133279;
	sub.s32 	%r8811, %r8762, %r8809;
	and.b32  	%r8812, %r8808, %r8811;
	and.b32  	%r8813, %r8812, %r8810;
	not.b32 	%r8814, %r8813;
	and.b32  	%r11054, %r39, %r8814;
	and.b32  	%r8815, %r38, 1077952576;
	shr.u32 	%r8816, %r8815, 1;
	and.b32  	%r8817, %r38, -2139062144;
	shr.u32 	%r8818, %r8817, 2;
	not.b32 	%r8819, %r8818;
	and.b32  	%r8820, %r8816, %r8819;
	and.b32  	%r8821, %r38, 522133279;
	add.s32 	%r8822, %r8821, 522133279;
	sub.s32 	%r8823, %r8762, %r8821;
	and.b32  	%r8824, %r8820, %r8823;
	and.b32  	%r8825, %r8824, %r8822;
	not.b32 	%r8826, %r8825;
	and.b32  	%r11055, %r38, %r8826;
	and.b32  	%r8827, %r37, 1077952576;
	shr.u32 	%r8828, %r8827, 1;
	and.b32  	%r8829, %r37, -2139062144;
	shr.u32 	%r8830, %r8829, 2;
	not.b32 	%r8831, %r8830;
	and.b32  	%r8832, %r8828, %r8831;
	and.b32  	%r8833, %r37, 522133279;
	add.s32 	%r8834, %r8833, 522133279;
	sub.s32 	%r8835, %r8762, %r8833;
	and.b32  	%r8836, %r8832, %r8835;
	and.b32  	%r8837, %r8836, %r8834;
	not.b32 	%r8838, %r8837;
	and.b32  	%r11056, %r37, %r8838;
	and.b32  	%r8839, %r36, 1077952576;
	shr.u32 	%r8840, %r8839, 1;
	and.b32  	%r8841, %r36, -2139062144;
	shr.u32 	%r8842, %r8841, 2;
	not.b32 	%r8843, %r8842;
	and.b32  	%r8844, %r8840, %r8843;
	and.b32  	%r8845, %r36, 522133279;
	add.s32 	%r8846, %r8845, 522133279;
	sub.s32 	%r8847, %r8762, %r8845;
	and.b32  	%r8848, %r8844, %r8847;
	and.b32  	%r8849, %r8848, %r8846;
	not.b32 	%r8850, %r8849;
	and.b32  	%r11057, %r36, %r8850;
	bra.uni 	BB1_1014;

BB1_440:
	mov.u32 	%r11070, 0;
	mov.u32 	%r4730, 8;
	// inline asm
	bfe.u32 %r4603, %r35, %r11070, %r4730;
	// inline asm
	setp.eq.s32	%p327, %r4603, %r41;
	selp.u32	%r4731, 1, 0, %p327;
	// inline asm
	bfe.u32 %r4607, %r35, %r4730, %r4730;
	// inline asm
	setp.eq.s32	%p328, %r4607, %r41;
	or.b32  	%r4732, %r4731, 2;
	selp.b32	%r4733, %r4732, %r4731, %p328;
	mov.u32 	%r4725, 16;
	// inline asm
	bfe.u32 %r4611, %r35, %r4725, %r4730;
	// inline asm
	setp.eq.s32	%p329, %r4611, %r41;
	or.b32  	%r4734, %r4733, 4;
	selp.b32	%r4735, %r4734, %r4733, %p329;
	mov.u32 	%r4729, 24;
	// inline asm
	bfe.u32 %r4615, %r35, %r4729, %r4730;
	// inline asm
	setp.eq.s32	%p330, %r4615, %r41;
	or.b32  	%r4736, %r4735, 8;
	selp.b32	%r4737, %r4736, %r4735, %p330;
	// inline asm
	bfe.u32 %r4619, %r34, %r11070, %r4730;
	// inline asm
	setp.eq.s32	%p331, %r4619, %r41;
	selp.u32	%r4738, 1, 0, %p331;
	// inline asm
	bfe.u32 %r4623, %r34, %r4730, %r4730;
	// inline asm
	setp.eq.s32	%p332, %r4623, %r41;
	or.b32  	%r4739, %r4738, 2;
	selp.b32	%r4740, %r4739, %r4738, %p332;
	// inline asm
	bfe.u32 %r4627, %r34, %r4725, %r4730;
	// inline asm
	setp.eq.s32	%p333, %r4627, %r41;
	or.b32  	%r4741, %r4740, 4;
	selp.b32	%r4742, %r4741, %r4740, %p333;
	// inline asm
	bfe.u32 %r4631, %r34, %r4729, %r4730;
	// inline asm
	setp.eq.s32	%p334, %r4631, %r41;
	or.b32  	%r4743, %r4742, 8;
	selp.b32	%r4744, %r4743, %r4742, %p334;
	// inline asm
	bfe.u32 %r4635, %r33, %r11070, %r4730;
	// inline asm
	setp.eq.s32	%p335, %r4635, %r41;
	selp.u32	%r4745, 1, 0, %p335;
	// inline asm
	bfe.u32 %r4639, %r33, %r4730, %r4730;
	// inline asm
	setp.eq.s32	%p336, %r4639, %r41;
	or.b32  	%r4746, %r4745, 2;
	selp.b32	%r4747, %r4746, %r4745, %p336;
	// inline asm
	bfe.u32 %r4643, %r33, %r4725, %r4730;
	// inline asm
	setp.eq.s32	%p337, %r4643, %r41;
	or.b32  	%r4748, %r4747, 4;
	selp.b32	%r4749, %r4748, %r4747, %p337;
	// inline asm
	bfe.u32 %r4647, %r33, %r4729, %r4730;
	// inline asm
	setp.eq.s32	%p338, %r4647, %r41;
	or.b32  	%r4750, %r4749, 8;
	selp.b32	%r4751, %r4750, %r4749, %p338;
	// inline asm
	bfe.u32 %r4651, %r32, %r11070, %r4730;
	// inline asm
	setp.eq.s32	%p339, %r4651, %r41;
	selp.u32	%r4752, 1, 0, %p339;
	// inline asm
	bfe.u32 %r4655, %r32, %r4730, %r4730;
	// inline asm
	setp.eq.s32	%p340, %r4655, %r41;
	or.b32  	%r4753, %r4752, 2;
	selp.b32	%r4754, %r4753, %r4752, %p340;
	// inline asm
	bfe.u32 %r4659, %r32, %r4725, %r4730;
	// inline asm
	setp.eq.s32	%p341, %r4659, %r41;
	or.b32  	%r4755, %r4754, 4;
	selp.b32	%r4756, %r4755, %r4754, %p341;
	// inline asm
	bfe.u32 %r4663, %r32, %r4729, %r4730;
	// inline asm
	setp.eq.s32	%p342, %r4663, %r41;
	or.b32  	%r4757, %r4756, 8;
	selp.b32	%r4758, %r4757, %r4756, %p342;
	// inline asm
	bfe.u32 %r4667, %r39, %r11070, %r4730;
	// inline asm
	setp.eq.s32	%p343, %r4667, %r41;
	selp.u32	%r4759, 1, 0, %p343;
	// inline asm
	bfe.u32 %r4671, %r39, %r4730, %r4730;
	// inline asm
	setp.eq.s32	%p344, %r4671, %r41;
	or.b32  	%r4760, %r4759, 2;
	selp.b32	%r4761, %r4760, %r4759, %p344;
	// inline asm
	bfe.u32 %r4675, %r39, %r4725, %r4730;
	// inline asm
	setp.eq.s32	%p345, %r4675, %r41;
	or.b32  	%r4762, %r4761, 4;
	selp.b32	%r4763, %r4762, %r4761, %p345;
	// inline asm
	bfe.u32 %r4679, %r39, %r4729, %r4730;
	// inline asm
	setp.eq.s32	%p346, %r4679, %r41;
	or.b32  	%r4764, %r4763, 8;
	selp.b32	%r4765, %r4764, %r4763, %p346;
	// inline asm
	bfe.u32 %r4683, %r38, %r11070, %r4730;
	// inline asm
	setp.eq.s32	%p347, %r4683, %r41;
	selp.u32	%r4766, 1, 0, %p347;
	// inline asm
	bfe.u32 %r4687, %r38, %r4730, %r4730;
	// inline asm
	setp.eq.s32	%p348, %r4687, %r41;
	or.b32  	%r4767, %r4766, 2;
	selp.b32	%r4768, %r4767, %r4766, %p348;
	// inline asm
	bfe.u32 %r4691, %r38, %r4725, %r4730;
	// inline asm
	setp.eq.s32	%p349, %r4691, %r41;
	or.b32  	%r4769, %r4768, 4;
	selp.b32	%r4770, %r4769, %r4768, %p349;
	// inline asm
	bfe.u32 %r4695, %r38, %r4729, %r4730;
	// inline asm
	setp.eq.s32	%p350, %r4695, %r41;
	or.b32  	%r4771, %r4770, 8;
	selp.b32	%r4772, %r4771, %r4770, %p350;
	// inline asm
	bfe.u32 %r4699, %r37, %r11070, %r4730;
	// inline asm
	setp.eq.s32	%p351, %r4699, %r41;
	selp.u32	%r4773, 1, 0, %p351;
	// inline asm
	bfe.u32 %r4703, %r37, %r4730, %r4730;
	// inline asm
	setp.eq.s32	%p352, %r4703, %r41;
	or.b32  	%r4774, %r4773, 2;
	selp.b32	%r4775, %r4774, %r4773, %p352;
	// inline asm
	bfe.u32 %r4707, %r37, %r4725, %r4730;
	// inline asm
	setp.eq.s32	%p353, %r4707, %r41;
	or.b32  	%r4776, %r4775, 4;
	selp.b32	%r4777, %r4776, %r4775, %p353;
	// inline asm
	bfe.u32 %r4711, %r37, %r4729, %r4730;
	// inline asm
	setp.eq.s32	%p354, %r4711, %r41;
	or.b32  	%r4778, %r4777, 8;
	selp.b32	%r4779, %r4778, %r4777, %p354;
	// inline asm
	bfe.u32 %r4715, %r36, %r11070, %r4730;
	// inline asm
	setp.eq.s32	%p355, %r4715, %r41;
	selp.u32	%r4780, 1, 0, %p355;
	// inline asm
	bfe.u32 %r4719, %r36, %r4730, %r4730;
	// inline asm
	setp.eq.s32	%p356, %r4719, %r41;
	or.b32  	%r4781, %r4780, 2;
	selp.b32	%r4782, %r4781, %r4780, %p356;
	// inline asm
	bfe.u32 %r4723, %r36, %r4725, %r4730;
	// inline asm
	setp.eq.s32	%p357, %r4723, %r41;
	or.b32  	%r4783, %r4782, 4;
	selp.b32	%r4784, %r4783, %r4782, %p357;
	// inline asm
	bfe.u32 %r4727, %r36, %r4729, %r4730;
	// inline asm
	setp.eq.s32	%p358, %r4727, %r41;
	or.b32  	%r4785, %r4784, 8;
	selp.b32	%r4786, %r4785, %r4784, %p358;
	add.s32 	%r4787, %r4744, %r4737;
	add.s32 	%r4788, %r4787, %r4751;
	add.s32 	%r4789, %r4788, %r4758;
	add.s32 	%r4790, %r4789, %r4765;
	add.s32 	%r4791, %r4790, %r4772;
	add.s32 	%r4792, %r4791, %r4779;
	neg.s32 	%r4793, %r4786;
	setp.eq.s32	%p359, %r4792, %r4793;
	@%p359 bra 	BB1_108;

	mov.u64 	%rd2787, 0;
	st.local.v4.u32 	[%rd84], {%r35, %r34, %r33, %r32};
	st.local.v4.u32 	[%rd84+16], {%r39, %r38, %r37, %r36};
	st.local.v2.u64 	[%rd85], {%rd2787, %rd2787};
	st.local.v2.u64 	[%rd85+16], {%rd2787, %rd2787};
	cvt.u16.u32	%rs23, %r35;
	setp.eq.s32	%p360, %r23, 0;
	@%p360 bra 	BB1_465;

	cvt.u16.u32	%rs2, %r40;
	and.b32  	%r620, %r23, 3;
	setp.eq.s32	%p361, %r620, 0;
	mov.u32 	%r10965, 0;
	mov.u32 	%r11070, %r10965;
	@%p361 bra 	BB1_455;

	setp.eq.s32	%p362, %r620, 1;
	mov.u32 	%r10960, 0;
	@%p362 bra 	BB1_444;
	bra.uni 	BB1_445;

BB1_444:
	mov.u32 	%r11070, %r10960;
	bra.uni 	BB1_452;

BB1_26:
	setp.eq.s32	%p50, %r1623, 68;
	@%p50 bra 	BB1_27;
	bra.uni 	BB1_108;

BB1_27:
	setp.ge.u32	%p593, %r41, %r23;
	@%p593 bra 	BB1_108;

	mov.u32 	%r6416, 8;
	// inline asm
	shf.r.wrap.b32 %r11066, %r35, %r34, %r6416;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11067, %r34, %r33, %r6416;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11068, %r33, %r32, %r6416;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11069, %r32, %r39, %r6416;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11062, %r39, %r38, %r6416;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11063, %r38, %r37, %r6416;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r11064, %r37, %r36, %r6416;
	// inline asm
	mov.u32 	%r6415, 0;
	// inline asm
	shf.r.wrap.b32 %r11065, %r36, %r6415, %r6416;
	// inline asm
	and.b32  	%r6418, %r40, 3;
	shl.b32 	%r6419, %r6418, 3;
	mov.u32 	%r6420, 1;
	shl.b32 	%r6421, %r6420, %r6419;
	add.s32 	%r974, %r6421, -1;
	neg.s32 	%r975, %r6421;
	shr.u32 	%r6417, %r41, 2;
	setp.gt.s32	%p594, %r6417, 3;
	@%p594 bra 	BB1_740;

	setp.gt.s32	%p600, %r6417, 1;
	@%p600 bra 	BB1_736;

	setp.eq.s32	%p603, %r6417, 0;
	@%p603 bra 	BB1_31;
	bra.uni 	BB1_734;

BB1_31:
	and.b32  	%r6436, %r974, %r35;
	and.b32  	%r6437, %r11066, %r975;
	or.b32  	%r11058, %r6437, %r6436;
	mov.u32 	%r11054, %r11062;
	mov.u32 	%r11055, %r11063;
	mov.u32 	%r11056, %r11064;
	mov.u32 	%r11057, %r11065;
	mov.u32 	%r11059, %r11067;
	bra.uni 	BB1_32;

BB1_1013:
	and.b32  	%r8851, %r35, 1077952576;
	shr.u32 	%r8852, %r8851, 1;
	and.b32  	%r8853, %r35, -2139062144;
	shr.u32 	%r8854, %r8853, 2;
	not.b32 	%r8855, %r8854;
	and.b32  	%r8856, %r8852, %r8855;
	and.b32  	%r8857, %r35, 522133279;
	add.s32 	%r8858, %r8857, 522133279;
	mov.u32 	%r8859, -84215046;
	sub.s32 	%r8860, %r8859, %r8857;
	and.b32  	%r8861, %r8856, %r8860;
	and.b32  	%r8862, %r8861, %r8858;
	or.b32  	%r11058, %r8862, %r35;
	and.b32  	%r8863, %r34, 1077952576;
	shr.u32 	%r8864, %r8863, 1;
	and.b32  	%r8865, %r34, -2139062144;
	shr.u32 	%r8866, %r8865, 2;
	not.b32 	%r8867, %r8866;
	and.b32  	%r8868, %r8864, %r8867;
	and.b32  	%r8869, %r34, 522133279;
	add.s32 	%r8870, %r8869, 522133279;
	sub.s32 	%r8871, %r8859, %r8869;
	and.b32  	%r8872, %r8868, %r8871;
	and.b32  	%r8873, %r8872, %r8870;
	or.b32  	%r11059, %r8873, %r34;
	and.b32  	%r8874, %r33, 1077952576;
	shr.u32 	%r8875, %r8874, 1;
	and.b32  	%r8876, %r33, -2139062144;
	shr.u32 	%r8877, %r8876, 2;
	not.b32 	%r8878, %r8877;
	and.b32  	%r8879, %r8875, %r8878;
	and.b32  	%r8880, %r33, 522133279;
	add.s32 	%r8881, %r8880, 522133279;
	sub.s32 	%r8882, %r8859, %r8880;
	and.b32  	%r8883, %r8879, %r8882;
	and.b32  	%r8884, %r8883, %r8881;
	or.b32  	%r11060, %r8884, %r33;
	and.b32  	%r8885, %r32, 1077952576;
	shr.u32 	%r8886, %r8885, 1;
	and.b32  	%r8887, %r32, -2139062144;
	shr.u32 	%r8888, %r8887, 2;
	not.b32 	%r8889, %r8888;
	and.b32  	%r8890, %r8886, %r8889;
	and.b32  	%r8891, %r32, 522133279;
	add.s32 	%r8892, %r8891, 522133279;
	sub.s32 	%r8893, %r8859, %r8891;
	and.b32  	%r8894, %r8890, %r8893;
	and.b32  	%r8895, %r8894, %r8892;
	or.b32  	%r11061, %r8895, %r32;
	and.b32  	%r8896, %r39, 1077952576;
	shr.u32 	%r8897, %r8896, 1;
	and.b32  	%r8898, %r39, -2139062144;
	shr.u32 	%r8899, %r8898, 2;
	not.b32 	%r8900, %r8899;
	and.b32  	%r8901, %r8897, %r8900;
	and.b32  	%r8902, %r39, 522133279;
	add.s32 	%r8903, %r8902, 522133279;
	sub.s32 	%r8904, %r8859, %r8902;
	and.b32  	%r8905, %r8901, %r8904;
	and.b32  	%r8906, %r8905, %r8903;
	or.b32  	%r11054, %r8906, %r39;
	and.b32  	%r8907, %r38, 1077952576;
	shr.u32 	%r8908, %r8907, 1;
	and.b32  	%r8909, %r38, -2139062144;
	shr.u32 	%r8910, %r8909, 2;
	not.b32 	%r8911, %r8910;
	and.b32  	%r8912, %r8908, %r8911;
	and.b32  	%r8913, %r38, 522133279;
	add.s32 	%r8914, %r8913, 522133279;
	sub.s32 	%r8915, %r8859, %r8913;
	and.b32  	%r8916, %r8912, %r8915;
	and.b32  	%r8917, %r8916, %r8914;
	or.b32  	%r11055, %r8917, %r38;
	and.b32  	%r8918, %r37, 1077952576;
	shr.u32 	%r8919, %r8918, 1;
	and.b32  	%r8920, %r37, -2139062144;
	shr.u32 	%r8921, %r8920, 2;
	not.b32 	%r8922, %r8921;
	and.b32  	%r8923, %r8919, %r8922;
	and.b32  	%r8924, %r37, 522133279;
	add.s32 	%r8925, %r8924, 522133279;
	sub.s32 	%r8926, %r8859, %r8924;
	and.b32  	%r8927, %r8923, %r8926;
	and.b32  	%r8928, %r8927, %r8925;
	or.b32  	%r11056, %r8928, %r37;
	and.b32  	%r8929, %r36, 1077952576;
	shr.u32 	%r8930, %r8929, 1;
	and.b32  	%r8931, %r36, -2139062144;
	shr.u32 	%r8932, %r8931, 2;
	not.b32 	%r8933, %r8932;
	and.b32  	%r8934, %r8930, %r8933;
	and.b32  	%r8935, %r36, 522133279;
	add.s32 	%r8936, %r8935, 522133279;
	sub.s32 	%r8937, %r8859, %r8935;
	and.b32  	%r8938, %r8934, %r8937;
	and.b32  	%r8939, %r8938, %r8936;
	or.b32  	%r11057, %r8939, %r36;
	bra.uni 	BB1_1014;

BB1_80:
	setp.eq.s32	%p23, %r1623, 112;
	@%p23 bra 	BB1_81;
	bra.uni 	BB1_108;

BB1_81:
	mad.lo.s32 	%r7489, %r41, %r23, %r23;
	setp.gt.u32	%p689, %r7489, 31;
	@%p689 bra 	BB1_108;

	setp.eq.s32	%p690, %r41, 0;
	mov.u32 	%r7490, 0;
	mov.u32 	%r11020, %r7490;
	mov.u32 	%r11070, %r23;
	mov.u32 	%r11061, %r32;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11057, %r36;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11054, %r39;
	@%p690 bra 	BB1_889;
	bra.uni 	BB1_890;

BB1_889:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11061, %r32;
	mov.u32 	%r11062, %r39;
	mov.u32 	%r11063, %r38;
	mov.u32 	%r11064, %r37;
	mov.u32 	%r11065, %r36;
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11069, %r32;
	bra.uni 	BB1_1014;

BB1_890:
	and.b32  	%r7500, %r11070, 3;
	mov.u32 	%r7501, 4;
	sub.s32 	%r7502, %r7501, %r7500;
	shl.b32 	%r7503, %r7502, 2;
	mov.u32 	%r7504, 1985229328;
	shr.u32 	%r7505, %r7504, %r7503;
	and.b32  	%r1241, %r7505, 65535;
	shr.u32 	%r7499, %r11070, 2;
	setp.gt.s32	%p691, %r7499, 3;
	@%p691 bra 	BB1_898;

	setp.gt.s32	%p697, %r7499, 1;
	@%p697 bra 	BB1_895;

	setp.eq.s32	%p700, %r7499, 0;
	@%p700 bra 	BB1_908;
	bra.uni 	BB1_893;

BB1_908:
	// inline asm
	prmt.b32 %r11037, %r37, %r36, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11036, %r38, %r37, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11035, %r39, %r38, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11034, %r32, %r39, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11033, %r33, %r32, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11032, %r34, %r33, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11031, %r35, %r34, %r1241;
	// inline asm
	mov.u32 	%r7675, 0;
	// inline asm
	prmt.b32 %r11030, %r7675, %r35, %r1241;
	// inline asm
	bra.uni 	BB1_909;

BB1_898:
	setp.gt.s32	%p692, %r7499, 5;
	@%p692 bra 	BB1_902;

	setp.eq.s32	%p695, %r7499, 4;
	@%p695 bra 	BB1_906;
	bra.uni 	BB1_900;

BB1_906:
	// inline asm
	prmt.b32 %r11037, %r33, %r32, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11036, %r34, %r33, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11035, %r35, %r34, %r1241;
	// inline asm
	mov.u32 	%r11030, 0;
	// inline asm
	prmt.b32 %r11034, %r11030, %r35, %r1241;
	// inline asm
	mov.u32 	%r11031, %r11030;
	mov.u32 	%r11032, %r11030;
	mov.u32 	%r11033, %r11030;
	bra.uni 	BB1_909;

BB1_895:
	setp.eq.s32	%p698, %r7499, 2;
	@%p698 bra 	BB1_907;
	bra.uni 	BB1_896;

BB1_907:
	// inline asm
	prmt.b32 %r11037, %r39, %r38, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11036, %r32, %r39, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11035, %r33, %r32, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11034, %r34, %r33, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11033, %r35, %r34, %r1241;
	// inline asm
	mov.u32 	%r11030, 0;
	// inline asm
	prmt.b32 %r11032, %r11030, %r35, %r1241;
	// inline asm
	mov.u32 	%r11031, %r11030;
	bra.uni 	BB1_909;

BB1_902:
	setp.eq.s32	%p693, %r7499, 6;
	@%p693 bra 	BB1_905;
	bra.uni 	BB1_903;

BB1_905:
	// inline asm
	prmt.b32 %r11037, %r35, %r34, %r1241;
	// inline asm
	mov.u32 	%r11030, 0;
	// inline asm
	prmt.b32 %r11036, %r11030, %r35, %r1241;
	// inline asm
	mov.u32 	%r11031, %r11030;
	mov.u32 	%r11032, %r11030;
	mov.u32 	%r11033, %r11030;
	mov.u32 	%r11034, %r11030;
	mov.u32 	%r11035, %r11030;
	bra.uni 	BB1_909;

BB1_893:
	setp.eq.s32	%p701, %r7499, 1;
	mov.u32 	%r11030, %r7490;
	mov.u32 	%r11031, %r7490;
	mov.u32 	%r11032, %r7490;
	mov.u32 	%r11033, %r7490;
	mov.u32 	%r11034, %r7490;
	mov.u32 	%r11035, %r7490;
	mov.u32 	%r11036, %r7490;
	mov.u32 	%r11037, %r7490;
	@%p701 bra 	BB1_894;
	bra.uni 	BB1_909;

BB1_894:
	// inline asm
	prmt.b32 %r11037, %r38, %r37, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11036, %r39, %r38, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11035, %r32, %r39, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11034, %r33, %r32, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11033, %r34, %r33, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11032, %r35, %r34, %r1241;
	// inline asm
	mov.u32 	%r11030, 0;
	// inline asm
	prmt.b32 %r11031, %r11030, %r35, %r1241;
	// inline asm
	bra.uni 	BB1_909;

BB1_900:
	setp.eq.s32	%p696, %r7499, 5;
	mov.u32 	%r11030, %r7490;
	mov.u32 	%r11031, %r7490;
	mov.u32 	%r11032, %r7490;
	mov.u32 	%r11033, %r7490;
	mov.u32 	%r11034, %r7490;
	mov.u32 	%r11035, %r7490;
	mov.u32 	%r11036, %r7490;
	mov.u32 	%r11037, %r7490;
	@%p696 bra 	BB1_901;
	bra.uni 	BB1_909;

BB1_901:
	// inline asm
	prmt.b32 %r11037, %r34, %r33, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11036, %r35, %r34, %r1241;
	// inline asm
	mov.u32 	%r11030, 0;
	// inline asm
	prmt.b32 %r11035, %r11030, %r35, %r1241;
	// inline asm
	mov.u32 	%r11031, %r11030;
	mov.u32 	%r11032, %r11030;
	mov.u32 	%r11033, %r11030;
	mov.u32 	%r11034, %r11030;
	bra.uni 	BB1_909;

BB1_896:
	setp.eq.s32	%p699, %r7499, 3;
	mov.u32 	%r11030, %r7490;
	mov.u32 	%r11031, %r7490;
	mov.u32 	%r11032, %r7490;
	mov.u32 	%r11033, %r7490;
	mov.u32 	%r11034, %r7490;
	mov.u32 	%r11035, %r7490;
	mov.u32 	%r11036, %r7490;
	mov.u32 	%r11037, %r7490;
	@%p699 bra 	BB1_897;
	bra.uni 	BB1_909;

BB1_897:
	// inline asm
	prmt.b32 %r11037, %r32, %r39, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11036, %r33, %r32, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11035, %r34, %r33, %r1241;
	// inline asm
	// inline asm
	prmt.b32 %r11034, %r35, %r34, %r1241;
	// inline asm
	mov.u32 	%r11030, 0;
	// inline asm
	prmt.b32 %r11033, %r11030, %r35, %r1241;
	// inline asm
	mov.u32 	%r11031, %r11030;
	mov.u32 	%r11032, %r11030;
	bra.uni 	BB1_909;

BB1_903:
	setp.ne.s32	%p694, %r7499, 7;
	mov.u32 	%r11030, %r7490;
	mov.u32 	%r11031, %r7490;
	mov.u32 	%r11032, %r7490;
	mov.u32 	%r11033, %r7490;
	mov.u32 	%r11034, %r7490;
	mov.u32 	%r11035, %r7490;
	mov.u32 	%r11036, %r7490;
	mov.u32 	%r11037, %r7490;
	@%p694 bra 	BB1_909;

	mov.u32 	%r11030, 0;
	// inline asm
	prmt.b32 %r11037, %r11030, %r35, %r1241;
	// inline asm
	mov.u32 	%r11031, %r11030;
	mov.u32 	%r11032, %r11030;
	mov.u32 	%r11033, %r11030;
	mov.u32 	%r11034, %r11030;
	mov.u32 	%r11035, %r11030;
	mov.u32 	%r11036, %r11030;

BB1_909:
	or.b32  	%r11058, %r11030, %r11058;
	or.b32  	%r11059, %r11031, %r11059;
	or.b32  	%r11060, %r11032, %r11060;
	or.b32  	%r11061, %r11033, %r11061;
	or.b32  	%r11054, %r11034, %r11054;
	or.b32  	%r11055, %r11035, %r11055;
	or.b32  	%r11056, %r11036, %r11056;
	or.b32  	%r11057, %r11037, %r11057;
	add.s32 	%r11070, %r11070, %r23;
	add.s32 	%r11020, %r11020, 1;
	setp.lt.u32	%p702, %r11020, %r41;
	@%p702 bra 	BB1_890;

	mov.u32 	%r11062, %r39;
	mov.u32 	%r11063, %r38;
	mov.u32 	%r11064, %r37;
	mov.u32 	%r11065, %r36;
	mov.u32 	%r11066, %r35;
	mov.u32 	%r11067, %r34;
	mov.u32 	%r11068, %r33;
	mov.u32 	%r11069, %r32;
	bra.uni 	BB1_1015;

BB1_329:
	setp.eq.s32	%p263, %r23, 0;
	add.s32 	%r3970, %r41, %r23;
	setp.gt.u32	%p264, %r3970, 31;
	or.pred  	%p265, %p263, %p264;
	@%p265 bra 	BB1_108;

	setp.eq.s32	%p266, %r41, 0;
	@%p266 bra 	BB1_108;

	ld.const.u32 	%r3972, [%rd88];
	ld.const.u32 	%r3973, [%rd88+4];
	ld.const.u32 	%r3974, [%rd88+8];
	ld.const.u32 	%r3975, [%rd88+12];
	ld.const.u32 	%r3976, [%rd88+16];
	ld.const.u32 	%r3977, [%rd88+20];
	ld.const.u32 	%r3978, [%rd88+24];
	ld.const.u32 	%r3979, [%rd88+28];
	and.b32  	%r3980, %r3979, %r36;
	and.b32  	%r3981, %r3978, %r37;
	and.b32  	%r3982, %r3977, %r38;
	and.b32  	%r3983, %r3976, %r39;
	and.b32  	%r3984, %r3975, %r32;
	and.b32  	%r3985, %r3974, %r33;
	and.b32  	%r3986, %r3973, %r34;
	and.b32  	%r3987, %r3972, %r35;
	or.b32  	%r3988, %r3986, %r3987;
	or.b32  	%r3989, %r3988, %r3985;
	or.b32  	%r3990, %r3989, %r3984;
	or.b32  	%r3991, %r3990, %r3983;
	or.b32  	%r3992, %r3991, %r3982;
	or.b32  	%r3993, %r3992, %r3981;
	or.b32  	%r3994, %r3993, %r3980;
	add.s32 	%r3995, %r23, -1;
	and.b32  	%r3996, %r3995, 3;
	shl.b32 	%r3997, %r3996, 3;
	shr.u32 	%r3998, %r3994, %r3997;
	and.b32  	%r3999, %r3998, 255;
	mov.u32 	%r4000, 64;
	prmt.b32 	%r4001, %r3999, %r3999, %r4000;
	mov.u32 	%r4002, 1040;
	prmt.b32 	%r4003, %r4001, %r3999, %r4002;
	mov.u32 	%r4004, 16912;
	prmt.b32 	%r456, %r4003, %r3999, %r4004;
	mov.u32 	%r10931, 0;

BB1_332:
	mul.wide.u32 	%rd140, %r23, 64;
	add.s64 	%rd142, %rd129, %rd140;
	ld.const.u32 	%r4005, [%rd142];
	and.b32  	%r4006, %r4005, %r456;
	or.b32  	%r35, %r4006, %r35;
	ld.const.u32 	%r4007, [%rd142+4];
	and.b32  	%r4008, %r4007, %r456;
	or.b32  	%r34, %r4008, %r34;
	ld.const.u32 	%r4009, [%rd142+8];
	and.b32  	%r4010, %r4009, %r456;
	or.b32  	%r33, %r4010, %r33;
	ld.const.u32 	%r4011, [%rd142+12];
	and.b32  	%r4012, %r4011, %r456;
	or.b32  	%r32, %r4012, %r32;
	ld.const.u32 	%r4013, [%rd142+16];
	and.b32  	%r4014, %r4013, %r456;
	or.b32  	%r39, %r4014, %r39;
	ld.const.u32 	%r4015, [%rd142+20];
	and.b32  	%r4016, %r4015, %r456;
	or.b32  	%r38, %r4016, %r38;
	ld.const.u32 	%r4017, [%rd142+24];
	and.b32  	%r4018, %r4017, %r456;
	or.b32  	%r37, %r4018, %r37;
	ld.const.u32 	%r4019, [%rd142+28];
	and.b32  	%r4020, %r4019, %r456;
	or.b32  	%r36, %r4020, %r36;
	add.s32 	%r23, %r23, 1;
	add.s32 	%r10931, %r10931, 1;
	setp.lt.u32	%p267, %r10931, %r41;
	@%p267 bra 	BB1_332;
	bra.uni 	BB1_108;

BB1_56:
	setp.eq.s32	%p37, %r1623, 93;
	@%p37 bra 	BB1_753;
	bra.uni 	BB1_108;

BB1_753:
	setp.eq.s32	%p605, %r23, 0;
	mov.u32 	%r6438, 0;
	@%p605 bra 	BB1_754;
	bra.uni 	BB1_755;

BB1_754:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11061, %r32;
	mov.u32 	%r11070, %r6438;
	bra.uni 	BB1_1015;

BB1_333:
	setp.eq.s32	%p268, %r23, 0;
	add.s32 	%r11070, %r41, %r23;
	setp.gt.u32	%p269, %r11070, 31;
	or.pred  	%p270, %p268, %p269;
	@%p270 bra 	BB1_108;

	mov.u32 	%r4021, 64;
	prmt.b32 	%r4022, %r35, %r35, %r4021;
	mov.u32 	%r4023, 1040;
	prmt.b32 	%r4024, %r4022, %r35, %r4023;
	mov.u32 	%r4025, 16912;
	prmt.b32 	%r11066, %r4024, %r35, %r4025;
	setp.gt.s32	%p271, %r41, 15;
	@%p271 bra 	BB1_363;

	setp.gt.s32	%p295, %r41, 7;
	@%p295 bra 	BB1_348;

	setp.gt.s32	%p307, %r41, 3;
	@%p307 bra 	BB1_341;

	setp.eq.s32	%p313, %r41, 1;
	@%p313 bra 	BB1_412;

	setp.eq.s32	%p314, %r41, 2;
	@%p314 bra 	BB1_411;
	bra.uni 	BB1_339;

BB1_411:
	mov.u32 	%r4526, 16;
	// inline asm
	shf.r.wrap.b32 %r4495, %r37, %r36, %r4526;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r38, %r37, %r4526;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r39, %r38, %r4526;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r32, %r39, %r4526;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4511, %r33, %r32, %r4526;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r34, %r33, %r4526;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r35, %r34, %r4526;
	// inline asm
	mov.u32 	%r4524, 0;
	// inline asm
	shf.r.wrap.b32 %r10945, %r4524, %r35, %r4526;
	// inline asm
	mov.u32 	%r39, %r4495;
	mov.u32 	%r35, %r4511;
	bra.uni 	BB1_416;

BB1_107:
	setp.eq.s32	%p10, %r1623, 125;
	@%p10 bra 	BB1_759;
	bra.uni 	BB1_108;

BB1_759:
	setp.eq.s32	%p615, %r23, 0;
	mov.u32 	%r6486, 0;
	@%p615 bra 	BB1_760;
	bra.uni 	BB1_761;

BB1_760:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;
	mov.u32 	%r11058, %r35;
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11061, %r32;
	mov.u32 	%r11070, %r6486;
	bra.uni 	BB1_1015;

BB1_108:
	mov.u32 	%r11054, %r39;
	mov.u32 	%r11055, %r38;
	mov.u32 	%r11056, %r37;
	mov.u32 	%r11057, %r36;
	mov.u32 	%r11058, %r35;

BB1_109:
	mov.u32 	%r11059, %r34;
	mov.u32 	%r11060, %r33;
	mov.u32 	%r11061, %r32;

BB1_1014:
	mov.u32 	%r11070, %r23;

BB1_1015:
	add.s32 	%r10881, %r10881, 1;
	shl.b64 	%rd192, %rd83, 7;
	add.s64 	%rd193, %rd92, %rd192;
	mul.wide.u32 	%rd194, %r10881, 4;
	add.s64 	%rd195, %rd193, %rd194;
	ld.const.u32 	%r10880, [%rd195];
	setp.ne.s32	%p761, %r10880, 0;
	@%p761 bra 	BB1_4;

BB1_1016:
	ld.param.u64 	%rd2873, [m01700_m04_param_6];
	ld.param.u32 	%r10853, [m01700_m04_param_25];
	ld.const.u64 	%rd2872, [k_sha512+608];
	ld.const.u64 	%rd2871, [k_sha512+600];
	ld.const.u64 	%rd2862, [k_sha512+592];
	ld.const.u64 	%rd2861, [k_sha512+584];
	ld.const.u64 	%rd2860, [k_sha512+576];
	ld.const.u64 	%rd2859, [k_sha512+568];
	ld.const.u64 	%rd2858, [k_sha512+560];
	ld.const.u64 	%rd2857, [k_sha512+552];
	ld.const.u64 	%rd2856, [k_sha512+544];
	ld.const.u64 	%rd2855, [k_sha512+536];
	ld.const.u64 	%rd2854, [k_sha512+528];
	ld.const.u64 	%rd2853, [k_sha512+520];
	ld.const.u64 	%rd2852, [k_sha512+512];
	ld.const.u64 	%rd2851, [k_sha512+504];
	ld.const.u64 	%rd2850, [k_sha512+496];
	ld.const.u64 	%rd2849, [k_sha512+488];
	ld.const.u64 	%rd2848, [k_sha512+480];
	ld.const.u64 	%rd2847, [k_sha512+472];
	ld.const.u64 	%rd2846, [k_sha512+464];
	ld.const.u64 	%rd2845, [k_sha512+456];
	ld.const.u64 	%rd2844, [k_sha512+448];
	ld.const.u64 	%rd2843, [k_sha512+440];
	ld.const.u64 	%rd2842, [k_sha512+432];
	ld.const.u64 	%rd2841, [k_sha512+424];
	ld.const.u64 	%rd2840, [k_sha512+416];
	ld.const.u64 	%rd2839, [k_sha512+408];
	ld.const.u64 	%rd2838, [k_sha512+400];
	ld.const.u64 	%rd2837, [k_sha512+392];
	ld.const.u64 	%rd2836, [k_sha512+384];
	ld.const.u64 	%rd2835, [k_sha512+376];
	ld.const.u64 	%rd2834, [k_sha512+368];
	ld.const.u64 	%rd2833, [k_sha512+360];
	ld.const.u64 	%rd2832, [k_sha512+352];
	ld.const.u64 	%rd2831, [k_sha512+344];
	ld.const.u64 	%rd2830, [k_sha512+336];
	ld.const.u64 	%rd2829, [k_sha512+328];
	ld.const.u64 	%rd2828, [k_sha512+320];
	ld.const.u64 	%rd2827, [k_sha512+312];
	ld.const.u64 	%rd2826, [k_sha512+304];
	ld.const.u64 	%rd2825, [k_sha512+296];
	ld.const.u64 	%rd2824, [k_sha512+288];
	ld.const.u64 	%rd2823, [k_sha512+280];
	ld.const.u64 	%rd2822, [k_sha512+272];
	ld.const.u64 	%rd2821, [k_sha512+264];
	ld.const.u64 	%rd2820, [k_sha512+256];
	ld.const.u64 	%rd2819, [k_sha512+248];
	ld.const.u64 	%rd2818, [k_sha512+240];
	ld.const.u64 	%rd2817, [k_sha512+232];
	ld.const.u64 	%rd2816, [k_sha512+224];
	ld.const.u64 	%rd2815, [k_sha512+216];
	ld.const.u64 	%rd2814, [k_sha512+208];
	ld.const.u64 	%rd2813, [k_sha512+200];
	ld.const.u64 	%rd2812, [k_sha512+192];
	ld.const.u64 	%rd2811, [k_sha512+184];
	ld.const.u64 	%rd2810, [k_sha512+176];
	ld.const.u64 	%rd2809, [k_sha512+168];
	ld.const.u64 	%rd2808, [k_sha512+160];
	ld.const.u64 	%rd2807, [k_sha512+152];
	ld.const.u64 	%rd2806, [k_sha512+144];
	ld.const.u64 	%rd2805, [k_sha512+136];
	ld.const.u64 	%rd2804, [k_sha512+128];
	ld.const.u64 	%rd2803, [k_sha512+120];
	ld.const.u64 	%rd2802, [k_sha512+112];
	ld.const.u64 	%rd2801, [k_sha512+104];
	ld.const.u64 	%rd2800, [k_sha512+96];
	ld.const.u64 	%rd2799, [k_sha512+88];
	ld.const.u64 	%rd2798, [k_sha512+80];
	ld.const.u64 	%rd2797, [k_sha512+72];
	ld.const.u64 	%rd2796, [k_sha512+64];
	ld.const.u64 	%rd2795, [k_sha512+56];
	ld.const.u64 	%rd2794, [k_sha512+48];
	ld.const.u64 	%rd2793, [k_sha512+40];
	ld.const.u64 	%rd2792, [k_sha512+32];
	ld.const.u64 	%rd2791, [k_sha512+24];
	ld.const.u64 	%rd2790, [k_sha512+16];
	ld.const.u64 	%rd2789, [k_sha512+8];
	ld.const.u64 	%rd2788, [k_sha512];
	mul.wide.u32 	%rd196, %r11070, 64;
	mov.u64 	%rd197, c_append_helper;
	add.s64 	%rd198, %rd197, %rd196;
	ld.const.u32 	%r8968, [%rd198];
	and.b32  	%r8969, %r8968, -2139062144;
	or.b32  	%r8941, %r8969, %r11058;
	ld.const.u32 	%r8970, [%rd198+4];
	and.b32  	%r8971, %r8970, -2139062144;
	or.b32  	%r8943, %r8971, %r11059;
	ld.const.u32 	%r8972, [%rd198+8];
	and.b32  	%r8973, %r8972, -2139062144;
	or.b32  	%r8945, %r8973, %r11060;
	ld.const.u32 	%r8974, [%rd198+12];
	and.b32  	%r8975, %r8974, -2139062144;
	or.b32  	%r8947, %r8975, %r11061;
	ld.const.u32 	%r8976, [%rd198+16];
	and.b32  	%r8977, %r8976, -2139062144;
	or.b32  	%r8949, %r8977, %r11054;
	ld.const.u32 	%r8978, [%rd198+20];
	and.b32  	%r8979, %r8978, -2139062144;
	or.b32  	%r8951, %r8979, %r11055;
	ld.const.u32 	%r8980, [%rd198+24];
	and.b32  	%r8981, %r8980, -2139062144;
	or.b32  	%r8953, %r8981, %r11056;
	ld.const.u32 	%r8982, [%rd198+28];
	and.b32  	%r8983, %r8982, -2139062144;
	or.b32  	%r8955, %r8983, %r11057;
	// inline asm
	prmt.b32 %r8940, %r8941, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8942, %r8943, 0, 0x0123;
	// inline asm
	mov.b64	%rd199, {%r8942, %r8940};
	// inline asm
	prmt.b32 %r8944, %r8945, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8946, %r8947, 0, 0x0123;
	// inline asm
	mov.b64	%rd200, {%r8946, %r8944};
	// inline asm
	prmt.b32 %r8948, %r8949, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8950, %r8951, 0, 0x0123;
	// inline asm
	mov.b64	%rd201, {%r8950, %r8948};
	// inline asm
	prmt.b32 %r8952, %r8953, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8954, %r8955, 0, 0x0123;
	// inline asm
	mov.b64	%rd202, {%r8954, %r8952};
	mov.u32 	%r8967, 0;
	// inline asm
	prmt.b32 %r8956, %r8967, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8958, %r8967, 0, 0x0123;
	// inline asm
	mov.b64	%rd203, {%r8958, %r8956};
	// inline asm
	prmt.b32 %r8960, %r8967, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8962, %r8967, 0, 0x0123;
	// inline asm
	mov.b64	%rd204, {%r8962, %r8960};
	// inline asm
	prmt.b32 %r8964, %r8967, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8966, %r8967, 0, 0x0123;
	// inline asm
	mov.b64	%rd205, {%r8966, %r8964};
	shl.b32 	%r8984, %r11070, 3;
	mov.b64	%rd206, {%r8984, %r8967};
	add.s64 	%rd207, %rd199, %rd2788;
	add.s64 	%rd208, %rd207, %rd3;
	add.s64 	%rd209, %rd208, %rd4;
	add.s64 	%rd210, %rd208, 2357225248857953701;
	add.s64 	%rd211, %rd209, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8985,%dummy}, %rd210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8986}, %rd210;
	}
	shf.r.wrap.b32 	%r8987, %r8986, %r8985, 14;
	shf.r.wrap.b32 	%r8988, %r8985, %r8986, 14;
	mov.b64 	%rd212, {%r8988, %r8987};
	shf.r.wrap.b32 	%r8989, %r8986, %r8985, 18;
	shf.r.wrap.b32 	%r8990, %r8985, %r8986, 18;
	mov.b64 	%rd213, {%r8990, %r8989};
	xor.b64  	%rd214, %rd213, %rd212;
	shf.l.wrap.b32 	%r8991, %r8985, %r8986, 23;
	shf.l.wrap.b32 	%r8992, %r8986, %r8985, 23;
	mov.b64 	%rd215, {%r8992, %r8991};
	xor.b64  	%rd216, %rd214, %rd215;
	and.b64  	%rd217, %rd210, -3887949035690463538;
	xor.b64  	%rd218, %rd217, -7276294671716946913;
	add.s64 	%rd219, %rd200, %rd2789;
	add.s64 	%rd220, %rd219, %rd218;
	add.s64 	%rd221, %rd220, %rd216;
	xor.b64  	%rd222, %rd211, -4942790177534073029;
	xor.b64  	%rd223, %rd211, 7640891576956012808;
	and.b64  	%rd224, %rd223, %rd222;
	xor.b64  	%rd225, %rd224, %rd211;
	add.s64 	%rd226, %rd221, %rd225;
	add.s64 	%rd227, %rd221, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8993,%dummy}, %rd211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8994}, %rd211;
	}
	shf.r.wrap.b32 	%r8995, %r8994, %r8993, 28;
	shf.r.wrap.b32 	%r8996, %r8993, %r8994, 28;
	mov.b64 	%rd228, {%r8996, %r8995};
	shf.l.wrap.b32 	%r8997, %r8993, %r8994, 30;
	shf.l.wrap.b32 	%r8998, %r8994, %r8993, 30;
	mov.b64 	%rd229, {%r8998, %r8997};
	xor.b64  	%rd230, %rd229, %rd228;
	shf.l.wrap.b32 	%r8999, %r8993, %r8994, 25;
	shf.l.wrap.b32 	%r9000, %r8994, %r8993, 25;
	mov.b64 	%rd231, {%r9000, %r8999};
	xor.b64  	%rd232, %rd230, %rd231;
	add.s64 	%rd233, %rd226, %rd232;
	add.s64 	%rd234, %rd233, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9001,%dummy}, %rd227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9002}, %rd227;
	}
	shf.r.wrap.b32 	%r9003, %r9002, %r9001, 14;
	shf.r.wrap.b32 	%r9004, %r9001, %r9002, 14;
	mov.b64 	%rd235, {%r9004, %r9003};
	shf.r.wrap.b32 	%r9005, %r9002, %r9001, 18;
	shf.r.wrap.b32 	%r9006, %r9001, %r9002, 18;
	mov.b64 	%rd236, {%r9006, %r9005};
	xor.b64  	%rd237, %rd236, %rd235;
	shf.l.wrap.b32 	%r9007, %r9001, %r9002, 23;
	shf.l.wrap.b32 	%r9008, %r9002, %r9001, 23;
	mov.b64 	%rd238, {%r9008, %r9007};
	xor.b64  	%rd239, %rd237, %rd238;
	xor.b64  	%rd240, %rd210, 5840696475078001361;
	and.b64  	%rd241, %rd227, %rd240;
	xor.b64  	%rd242, %rd241, 5840696475078001361;
	add.s64 	%rd243, %rd201, %rd2790;
	add.s64 	%rd244, %rd243, %rd242;
	add.s64 	%rd245, %rd244, %rd239;
	xor.b64  	%rd246, %rd234, 7640891576956012808;
	xor.b64  	%rd247, %rd234, %rd211;
	and.b64  	%rd248, %rd247, %rd246;
	xor.b64  	%rd249, %rd248, %rd234;
	add.s64 	%rd250, %rd245, %rd249;
	add.s64 	%rd251, %rd245, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9009,%dummy}, %rd234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9010}, %rd234;
	}
	shf.r.wrap.b32 	%r9011, %r9010, %r9009, 28;
	shf.r.wrap.b32 	%r9012, %r9009, %r9010, 28;
	mov.b64 	%rd252, {%r9012, %r9011};
	shf.l.wrap.b32 	%r9013, %r9009, %r9010, 30;
	shf.l.wrap.b32 	%r9014, %r9010, %r9009, 30;
	mov.b64 	%rd253, {%r9014, %r9013};
	xor.b64  	%rd254, %rd253, %rd252;
	shf.l.wrap.b32 	%r9015, %r9009, %r9010, 25;
	shf.l.wrap.b32 	%r9016, %r9010, %r9009, 25;
	mov.b64 	%rd255, {%r9016, %r9015};
	xor.b64  	%rd256, %rd254, %rd255;
	add.s64 	%rd257, %rd250, %rd256;
	add.s64 	%rd258, %rd257, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9017,%dummy}, %rd251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9018}, %rd251;
	}
	shf.r.wrap.b32 	%r9019, %r9018, %r9017, 14;
	shf.r.wrap.b32 	%r9020, %r9017, %r9018, 14;
	mov.b64 	%rd259, {%r9020, %r9019};
	shf.r.wrap.b32 	%r9021, %r9018, %r9017, 18;
	shf.r.wrap.b32 	%r9022, %r9017, %r9018, 18;
	mov.b64 	%rd260, {%r9022, %r9021};
	xor.b64  	%rd261, %rd260, %rd259;
	shf.l.wrap.b32 	%r9023, %r9017, %r9018, 23;
	shf.l.wrap.b32 	%r9024, %r9018, %r9017, 23;
	mov.b64 	%rd262, {%r9024, %r9023};
	xor.b64  	%rd263, %rd261, %rd262;
	xor.b64  	%rd264, %rd227, %rd210;
	and.b64  	%rd265, %rd251, %rd264;
	xor.b64  	%rd266, %rd265, %rd210;
	add.s64 	%rd267, %rd202, %rd2791;
	add.s64 	%rd268, %rd267, %rd266;
	add.s64 	%rd269, %rd268, %rd263;
	xor.b64  	%rd270, %rd258, %rd211;
	xor.b64  	%rd271, %rd258, %rd234;
	and.b64  	%rd272, %rd271, %rd270;
	xor.b64  	%rd273, %rd272, %rd258;
	add.s64 	%rd274, %rd269, %rd273;
	add.s64 	%rd275, %rd269, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9025,%dummy}, %rd258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9026}, %rd258;
	}
	shf.r.wrap.b32 	%r9027, %r9026, %r9025, 28;
	shf.r.wrap.b32 	%r9028, %r9025, %r9026, 28;
	mov.b64 	%rd276, {%r9028, %r9027};
	shf.l.wrap.b32 	%r9029, %r9025, %r9026, 30;
	shf.l.wrap.b32 	%r9030, %r9026, %r9025, 30;
	mov.b64 	%rd277, {%r9030, %r9029};
	xor.b64  	%rd278, %rd277, %rd276;
	shf.l.wrap.b32 	%r9031, %r9025, %r9026, 25;
	shf.l.wrap.b32 	%r9032, %r9026, %r9025, 25;
	mov.b64 	%rd279, {%r9032, %r9031};
	xor.b64  	%rd280, %rd278, %rd279;
	add.s64 	%rd281, %rd274, %rd280;
	add.s64 	%rd282, %rd281, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9033,%dummy}, %rd275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9034}, %rd275;
	}
	shf.r.wrap.b32 	%r9035, %r9034, %r9033, 14;
	shf.r.wrap.b32 	%r9036, %r9033, %r9034, 14;
	mov.b64 	%rd283, {%r9036, %r9035};
	shf.r.wrap.b32 	%r9037, %r9034, %r9033, 18;
	shf.r.wrap.b32 	%r9038, %r9033, %r9034, 18;
	mov.b64 	%rd284, {%r9038, %r9037};
	xor.b64  	%rd285, %rd284, %rd283;
	shf.l.wrap.b32 	%r9039, %r9033, %r9034, 23;
	shf.l.wrap.b32 	%r9040, %r9034, %r9033, 23;
	mov.b64 	%rd286, {%r9040, %r9039};
	xor.b64  	%rd287, %rd285, %rd286;
	xor.b64  	%rd288, %rd251, %rd227;
	and.b64  	%rd289, %rd275, %rd288;
	xor.b64  	%rd290, %rd289, %rd227;
	add.s64 	%rd291, %rd210, %rd203;
	add.s64 	%rd292, %rd291, %rd2792;
	add.s64 	%rd293, %rd292, %rd290;
	add.s64 	%rd294, %rd293, %rd287;
	add.s64 	%rd295, %rd294, %rd211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9041,%dummy}, %rd282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9042}, %rd282;
	}
	shf.r.wrap.b32 	%r9043, %r9042, %r9041, 28;
	shf.r.wrap.b32 	%r9044, %r9041, %r9042, 28;
	mov.b64 	%rd296, {%r9044, %r9043};
	shf.l.wrap.b32 	%r9045, %r9041, %r9042, 30;
	shf.l.wrap.b32 	%r9046, %r9042, %r9041, 30;
	mov.b64 	%rd297, {%r9046, %r9045};
	xor.b64  	%rd298, %rd297, %rd296;
	shf.l.wrap.b32 	%r9047, %r9041, %r9042, 25;
	shf.l.wrap.b32 	%r9048, %r9042, %r9041, 25;
	mov.b64 	%rd299, {%r9048, %r9047};
	xor.b64  	%rd300, %rd298, %rd299;
	xor.b64  	%rd301, %rd282, %rd234;
	xor.b64  	%rd302, %rd282, %rd258;
	and.b64  	%rd303, %rd302, %rd301;
	xor.b64  	%rd304, %rd303, %rd282;
	add.s64 	%rd305, %rd294, %rd304;
	add.s64 	%rd306, %rd305, %rd300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9049,%dummy}, %rd295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9050}, %rd295;
	}
	shf.r.wrap.b32 	%r9051, %r9050, %r9049, 14;
	shf.r.wrap.b32 	%r9052, %r9049, %r9050, 14;
	mov.b64 	%rd307, {%r9052, %r9051};
	shf.r.wrap.b32 	%r9053, %r9050, %r9049, 18;
	shf.r.wrap.b32 	%r9054, %r9049, %r9050, 18;
	mov.b64 	%rd308, {%r9054, %r9053};
	xor.b64  	%rd309, %rd308, %rd307;
	shf.l.wrap.b32 	%r9055, %r9049, %r9050, 23;
	shf.l.wrap.b32 	%r9056, %r9050, %r9049, 23;
	mov.b64 	%rd310, {%r9056, %r9055};
	xor.b64  	%rd311, %rd309, %rd310;
	xor.b64  	%rd312, %rd275, %rd251;
	and.b64  	%rd313, %rd295, %rd312;
	xor.b64  	%rd314, %rd313, %rd251;
	add.s64 	%rd315, %rd227, %rd204;
	add.s64 	%rd316, %rd315, %rd2793;
	add.s64 	%rd317, %rd316, %rd314;
	add.s64 	%rd318, %rd317, %rd311;
	add.s64 	%rd319, %rd318, %rd234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9057,%dummy}, %rd306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9058}, %rd306;
	}
	shf.r.wrap.b32 	%r9059, %r9058, %r9057, 28;
	shf.r.wrap.b32 	%r9060, %r9057, %r9058, 28;
	mov.b64 	%rd320, {%r9060, %r9059};
	shf.l.wrap.b32 	%r9061, %r9057, %r9058, 30;
	shf.l.wrap.b32 	%r9062, %r9058, %r9057, 30;
	mov.b64 	%rd321, {%r9062, %r9061};
	xor.b64  	%rd322, %rd321, %rd320;
	shf.l.wrap.b32 	%r9063, %r9057, %r9058, 25;
	shf.l.wrap.b32 	%r9064, %r9058, %r9057, 25;
	mov.b64 	%rd323, {%r9064, %r9063};
	xor.b64  	%rd324, %rd322, %rd323;
	xor.b64  	%rd325, %rd306, %rd258;
	xor.b64  	%rd326, %rd306, %rd282;
	and.b64  	%rd327, %rd326, %rd325;
	xor.b64  	%rd328, %rd327, %rd306;
	add.s64 	%rd329, %rd318, %rd328;
	add.s64 	%rd330, %rd329, %rd324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9065,%dummy}, %rd319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9066}, %rd319;
	}
	shf.r.wrap.b32 	%r9067, %r9066, %r9065, 14;
	shf.r.wrap.b32 	%r9068, %r9065, %r9066, 14;
	mov.b64 	%rd331, {%r9068, %r9067};
	shf.r.wrap.b32 	%r9069, %r9066, %r9065, 18;
	shf.r.wrap.b32 	%r9070, %r9065, %r9066, 18;
	mov.b64 	%rd332, {%r9070, %r9069};
	xor.b64  	%rd333, %rd332, %rd331;
	shf.l.wrap.b32 	%r9071, %r9065, %r9066, 23;
	shf.l.wrap.b32 	%r9072, %r9066, %r9065, 23;
	mov.b64 	%rd334, {%r9072, %r9071};
	xor.b64  	%rd335, %rd333, %rd334;
	xor.b64  	%rd336, %rd295, %rd275;
	and.b64  	%rd337, %rd319, %rd336;
	xor.b64  	%rd338, %rd337, %rd275;
	add.s64 	%rd339, %rd251, %rd205;
	add.s64 	%rd340, %rd339, %rd2794;
	add.s64 	%rd341, %rd340, %rd338;
	add.s64 	%rd342, %rd341, %rd335;
	add.s64 	%rd343, %rd342, %rd258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9073,%dummy}, %rd330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9074}, %rd330;
	}
	shf.r.wrap.b32 	%r9075, %r9074, %r9073, 28;
	shf.r.wrap.b32 	%r9076, %r9073, %r9074, 28;
	mov.b64 	%rd344, {%r9076, %r9075};
	shf.l.wrap.b32 	%r9077, %r9073, %r9074, 30;
	shf.l.wrap.b32 	%r9078, %r9074, %r9073, 30;
	mov.b64 	%rd345, {%r9078, %r9077};
	xor.b64  	%rd346, %rd345, %rd344;
	shf.l.wrap.b32 	%r9079, %r9073, %r9074, 25;
	shf.l.wrap.b32 	%r9080, %r9074, %r9073, 25;
	mov.b64 	%rd347, {%r9080, %r9079};
	xor.b64  	%rd348, %rd346, %rd347;
	xor.b64  	%rd349, %rd330, %rd282;
	xor.b64  	%rd350, %rd330, %rd306;
	and.b64  	%rd351, %rd350, %rd349;
	xor.b64  	%rd352, %rd351, %rd330;
	add.s64 	%rd353, %rd342, %rd352;
	add.s64 	%rd354, %rd353, %rd348;
	add.s64 	%rd355, %rd2795, %rd275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9081,%dummy}, %rd343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9082}, %rd343;
	}
	shf.r.wrap.b32 	%r9083, %r9082, %r9081, 14;
	shf.r.wrap.b32 	%r9084, %r9081, %r9082, 14;
	mov.b64 	%rd356, {%r9084, %r9083};
	shf.r.wrap.b32 	%r9085, %r9082, %r9081, 18;
	shf.r.wrap.b32 	%r9086, %r9081, %r9082, 18;
	mov.b64 	%rd357, {%r9086, %r9085};
	xor.b64  	%rd358, %rd357, %rd356;
	shf.l.wrap.b32 	%r9087, %r9081, %r9082, 23;
	shf.l.wrap.b32 	%r9088, %r9082, %r9081, 23;
	mov.b64 	%rd359, {%r9088, %r9087};
	xor.b64  	%rd360, %rd358, %rd359;
	xor.b64  	%rd361, %rd319, %rd295;
	and.b64  	%rd362, %rd343, %rd361;
	xor.b64  	%rd363, %rd362, %rd295;
	add.s64 	%rd364, %rd355, %rd363;
	add.s64 	%rd365, %rd364, %rd360;
	add.s64 	%rd366, %rd365, %rd282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9089,%dummy}, %rd354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9090}, %rd354;
	}
	shf.r.wrap.b32 	%r9091, %r9090, %r9089, 28;
	shf.r.wrap.b32 	%r9092, %r9089, %r9090, 28;
	mov.b64 	%rd367, {%r9092, %r9091};
	shf.l.wrap.b32 	%r9093, %r9089, %r9090, 30;
	shf.l.wrap.b32 	%r9094, %r9090, %r9089, 30;
	mov.b64 	%rd368, {%r9094, %r9093};
	xor.b64  	%rd369, %rd368, %rd367;
	shf.l.wrap.b32 	%r9095, %r9089, %r9090, 25;
	shf.l.wrap.b32 	%r9096, %r9090, %r9089, 25;
	mov.b64 	%rd370, {%r9096, %r9095};
	xor.b64  	%rd371, %rd369, %rd370;
	xor.b64  	%rd372, %rd354, %rd306;
	xor.b64  	%rd373, %rd354, %rd330;
	and.b64  	%rd374, %rd373, %rd372;
	xor.b64  	%rd375, %rd374, %rd354;
	add.s64 	%rd376, %rd365, %rd375;
	add.s64 	%rd377, %rd376, %rd371;
	add.s64 	%rd378, %rd2796, %rd295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9097,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9098}, %rd366;
	}
	shf.r.wrap.b32 	%r9099, %r9098, %r9097, 14;
	shf.r.wrap.b32 	%r9100, %r9097, %r9098, 14;
	mov.b64 	%rd379, {%r9100, %r9099};
	shf.r.wrap.b32 	%r9101, %r9098, %r9097, 18;
	shf.r.wrap.b32 	%r9102, %r9097, %r9098, 18;
	mov.b64 	%rd380, {%r9102, %r9101};
	xor.b64  	%rd381, %rd380, %rd379;
	shf.l.wrap.b32 	%r9103, %r9097, %r9098, 23;
	shf.l.wrap.b32 	%r9104, %r9098, %r9097, 23;
	mov.b64 	%rd382, {%r9104, %r9103};
	xor.b64  	%rd383, %rd381, %rd382;
	xor.b64  	%rd384, %rd343, %rd319;
	and.b64  	%rd385, %rd366, %rd384;
	xor.b64  	%rd386, %rd385, %rd319;
	add.s64 	%rd387, %rd378, %rd386;
	add.s64 	%rd388, %rd387, %rd383;
	add.s64 	%rd389, %rd388, %rd306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9105,%dummy}, %rd377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9106}, %rd377;
	}
	shf.r.wrap.b32 	%r9107, %r9106, %r9105, 28;
	shf.r.wrap.b32 	%r9108, %r9105, %r9106, 28;
	mov.b64 	%rd390, {%r9108, %r9107};
	shf.l.wrap.b32 	%r9109, %r9105, %r9106, 30;
	shf.l.wrap.b32 	%r9110, %r9106, %r9105, 30;
	mov.b64 	%rd391, {%r9110, %r9109};
	xor.b64  	%rd392, %rd391, %rd390;
	shf.l.wrap.b32 	%r9111, %r9105, %r9106, 25;
	shf.l.wrap.b32 	%r9112, %r9106, %r9105, 25;
	mov.b64 	%rd393, {%r9112, %r9111};
	xor.b64  	%rd394, %rd392, %rd393;
	xor.b64  	%rd395, %rd377, %rd330;
	xor.b64  	%rd396, %rd377, %rd354;
	and.b64  	%rd397, %rd396, %rd395;
	xor.b64  	%rd398, %rd397, %rd377;
	add.s64 	%rd399, %rd388, %rd398;
	add.s64 	%rd400, %rd399, %rd394;
	add.s64 	%rd401, %rd2797, %rd319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9113,%dummy}, %rd389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9114}, %rd389;
	}
	shf.r.wrap.b32 	%r9115, %r9114, %r9113, 14;
	shf.r.wrap.b32 	%r9116, %r9113, %r9114, 14;
	mov.b64 	%rd402, {%r9116, %r9115};
	shf.r.wrap.b32 	%r9117, %r9114, %r9113, 18;
	shf.r.wrap.b32 	%r9118, %r9113, %r9114, 18;
	mov.b64 	%rd403, {%r9118, %r9117};
	xor.b64  	%rd404, %rd403, %rd402;
	shf.l.wrap.b32 	%r9119, %r9113, %r9114, 23;
	shf.l.wrap.b32 	%r9120, %r9114, %r9113, 23;
	mov.b64 	%rd405, {%r9120, %r9119};
	xor.b64  	%rd406, %rd404, %rd405;
	xor.b64  	%rd407, %rd366, %rd343;
	and.b64  	%rd408, %rd389, %rd407;
	xor.b64  	%rd409, %rd408, %rd343;
	add.s64 	%rd410, %rd401, %rd409;
	add.s64 	%rd411, %rd410, %rd406;
	add.s64 	%rd412, %rd411, %rd330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9121,%dummy}, %rd400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9122}, %rd400;
	}
	shf.r.wrap.b32 	%r9123, %r9122, %r9121, 28;
	shf.r.wrap.b32 	%r9124, %r9121, %r9122, 28;
	mov.b64 	%rd413, {%r9124, %r9123};
	shf.l.wrap.b32 	%r9125, %r9121, %r9122, 30;
	shf.l.wrap.b32 	%r9126, %r9122, %r9121, 30;
	mov.b64 	%rd414, {%r9126, %r9125};
	xor.b64  	%rd415, %rd414, %rd413;
	shf.l.wrap.b32 	%r9127, %r9121, %r9122, 25;
	shf.l.wrap.b32 	%r9128, %r9122, %r9121, 25;
	mov.b64 	%rd416, {%r9128, %r9127};
	xor.b64  	%rd417, %rd415, %rd416;
	xor.b64  	%rd418, %rd400, %rd354;
	xor.b64  	%rd419, %rd400, %rd377;
	and.b64  	%rd420, %rd419, %rd418;
	xor.b64  	%rd421, %rd420, %rd400;
	add.s64 	%rd422, %rd411, %rd421;
	add.s64 	%rd423, %rd422, %rd417;
	add.s64 	%rd424, %rd2798, %rd343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9129,%dummy}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9130}, %rd412;
	}
	shf.r.wrap.b32 	%r9131, %r9130, %r9129, 14;
	shf.r.wrap.b32 	%r9132, %r9129, %r9130, 14;
	mov.b64 	%rd425, {%r9132, %r9131};
	shf.r.wrap.b32 	%r9133, %r9130, %r9129, 18;
	shf.r.wrap.b32 	%r9134, %r9129, %r9130, 18;
	mov.b64 	%rd426, {%r9134, %r9133};
	xor.b64  	%rd427, %rd426, %rd425;
	shf.l.wrap.b32 	%r9135, %r9129, %r9130, 23;
	shf.l.wrap.b32 	%r9136, %r9130, %r9129, 23;
	mov.b64 	%rd428, {%r9136, %r9135};
	xor.b64  	%rd429, %rd427, %rd428;
	xor.b64  	%rd430, %rd389, %rd366;
	and.b64  	%rd431, %rd412, %rd430;
	xor.b64  	%rd432, %rd431, %rd366;
	add.s64 	%rd433, %rd424, %rd432;
	add.s64 	%rd434, %rd433, %rd429;
	add.s64 	%rd435, %rd434, %rd354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9137,%dummy}, %rd423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9138}, %rd423;
	}
	shf.r.wrap.b32 	%r9139, %r9138, %r9137, 28;
	shf.r.wrap.b32 	%r9140, %r9137, %r9138, 28;
	mov.b64 	%rd436, {%r9140, %r9139};
	shf.l.wrap.b32 	%r9141, %r9137, %r9138, 30;
	shf.l.wrap.b32 	%r9142, %r9138, %r9137, 30;
	mov.b64 	%rd437, {%r9142, %r9141};
	xor.b64  	%rd438, %rd437, %rd436;
	shf.l.wrap.b32 	%r9143, %r9137, %r9138, 25;
	shf.l.wrap.b32 	%r9144, %r9138, %r9137, 25;
	mov.b64 	%rd439, {%r9144, %r9143};
	xor.b64  	%rd440, %rd438, %rd439;
	xor.b64  	%rd441, %rd423, %rd377;
	xor.b64  	%rd442, %rd423, %rd400;
	and.b64  	%rd443, %rd442, %rd441;
	xor.b64  	%rd444, %rd443, %rd423;
	add.s64 	%rd445, %rd434, %rd444;
	add.s64 	%rd446, %rd445, %rd440;
	add.s64 	%rd447, %rd2799, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9145,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9146}, %rd435;
	}
	shf.r.wrap.b32 	%r9147, %r9146, %r9145, 14;
	shf.r.wrap.b32 	%r9148, %r9145, %r9146, 14;
	mov.b64 	%rd448, {%r9148, %r9147};
	shf.r.wrap.b32 	%r9149, %r9146, %r9145, 18;
	shf.r.wrap.b32 	%r9150, %r9145, %r9146, 18;
	mov.b64 	%rd449, {%r9150, %r9149};
	xor.b64  	%rd450, %rd449, %rd448;
	shf.l.wrap.b32 	%r9151, %r9145, %r9146, 23;
	shf.l.wrap.b32 	%r9152, %r9146, %r9145, 23;
	mov.b64 	%rd451, {%r9152, %r9151};
	xor.b64  	%rd452, %rd450, %rd451;
	xor.b64  	%rd453, %rd412, %rd389;
	and.b64  	%rd454, %rd435, %rd453;
	xor.b64  	%rd455, %rd454, %rd389;
	add.s64 	%rd456, %rd447, %rd455;
	add.s64 	%rd457, %rd456, %rd452;
	add.s64 	%rd458, %rd457, %rd377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9153,%dummy}, %rd446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9154}, %rd446;
	}
	shf.r.wrap.b32 	%r9155, %r9154, %r9153, 28;
	shf.r.wrap.b32 	%r9156, %r9153, %r9154, 28;
	mov.b64 	%rd459, {%r9156, %r9155};
	shf.l.wrap.b32 	%r9157, %r9153, %r9154, 30;
	shf.l.wrap.b32 	%r9158, %r9154, %r9153, 30;
	mov.b64 	%rd460, {%r9158, %r9157};
	xor.b64  	%rd461, %rd460, %rd459;
	shf.l.wrap.b32 	%r9159, %r9153, %r9154, 25;
	shf.l.wrap.b32 	%r9160, %r9154, %r9153, 25;
	mov.b64 	%rd462, {%r9160, %r9159};
	xor.b64  	%rd463, %rd461, %rd462;
	xor.b64  	%rd464, %rd446, %rd400;
	xor.b64  	%rd465, %rd446, %rd423;
	and.b64  	%rd466, %rd465, %rd464;
	xor.b64  	%rd467, %rd466, %rd446;
	add.s64 	%rd468, %rd457, %rd467;
	add.s64 	%rd469, %rd468, %rd463;
	add.s64 	%rd470, %rd2800, %rd389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9161,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9162}, %rd458;
	}
	shf.r.wrap.b32 	%r9163, %r9162, %r9161, 14;
	shf.r.wrap.b32 	%r9164, %r9161, %r9162, 14;
	mov.b64 	%rd471, {%r9164, %r9163};
	shf.r.wrap.b32 	%r9165, %r9162, %r9161, 18;
	shf.r.wrap.b32 	%r9166, %r9161, %r9162, 18;
	mov.b64 	%rd472, {%r9166, %r9165};
	xor.b64  	%rd473, %rd472, %rd471;
	shf.l.wrap.b32 	%r9167, %r9161, %r9162, 23;
	shf.l.wrap.b32 	%r9168, %r9162, %r9161, 23;
	mov.b64 	%rd474, {%r9168, %r9167};
	xor.b64  	%rd475, %rd473, %rd474;
	xor.b64  	%rd476, %rd435, %rd412;
	and.b64  	%rd477, %rd458, %rd476;
	xor.b64  	%rd478, %rd477, %rd412;
	add.s64 	%rd479, %rd470, %rd478;
	add.s64 	%rd480, %rd479, %rd475;
	add.s64 	%rd481, %rd480, %rd400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9169,%dummy}, %rd469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9170}, %rd469;
	}
	shf.r.wrap.b32 	%r9171, %r9170, %r9169, 28;
	shf.r.wrap.b32 	%r9172, %r9169, %r9170, 28;
	mov.b64 	%rd482, {%r9172, %r9171};
	shf.l.wrap.b32 	%r9173, %r9169, %r9170, 30;
	shf.l.wrap.b32 	%r9174, %r9170, %r9169, 30;
	mov.b64 	%rd483, {%r9174, %r9173};
	xor.b64  	%rd484, %rd483, %rd482;
	shf.l.wrap.b32 	%r9175, %r9169, %r9170, 25;
	shf.l.wrap.b32 	%r9176, %r9170, %r9169, 25;
	mov.b64 	%rd485, {%r9176, %r9175};
	xor.b64  	%rd486, %rd484, %rd485;
	xor.b64  	%rd487, %rd469, %rd423;
	xor.b64  	%rd488, %rd469, %rd446;
	and.b64  	%rd489, %rd488, %rd487;
	xor.b64  	%rd490, %rd489, %rd469;
	add.s64 	%rd491, %rd480, %rd490;
	add.s64 	%rd492, %rd491, %rd486;
	add.s64 	%rd493, %rd2801, %rd412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9177,%dummy}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9178}, %rd481;
	}
	shf.r.wrap.b32 	%r9179, %r9178, %r9177, 14;
	shf.r.wrap.b32 	%r9180, %r9177, %r9178, 14;
	mov.b64 	%rd494, {%r9180, %r9179};
	shf.r.wrap.b32 	%r9181, %r9178, %r9177, 18;
	shf.r.wrap.b32 	%r9182, %r9177, %r9178, 18;
	mov.b64 	%rd495, {%r9182, %r9181};
	xor.b64  	%rd496, %rd495, %rd494;
	shf.l.wrap.b32 	%r9183, %r9177, %r9178, 23;
	shf.l.wrap.b32 	%r9184, %r9178, %r9177, 23;
	mov.b64 	%rd497, {%r9184, %r9183};
	xor.b64  	%rd498, %rd496, %rd497;
	xor.b64  	%rd499, %rd458, %rd435;
	and.b64  	%rd500, %rd481, %rd499;
	xor.b64  	%rd501, %rd500, %rd435;
	add.s64 	%rd502, %rd493, %rd501;
	add.s64 	%rd503, %rd502, %rd498;
	add.s64 	%rd504, %rd503, %rd423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9185,%dummy}, %rd492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9186}, %rd492;
	}
	shf.r.wrap.b32 	%r9187, %r9186, %r9185, 28;
	shf.r.wrap.b32 	%r9188, %r9185, %r9186, 28;
	mov.b64 	%rd505, {%r9188, %r9187};
	shf.l.wrap.b32 	%r9189, %r9185, %r9186, 30;
	shf.l.wrap.b32 	%r9190, %r9186, %r9185, 30;
	mov.b64 	%rd506, {%r9190, %r9189};
	xor.b64  	%rd507, %rd506, %rd505;
	shf.l.wrap.b32 	%r9191, %r9185, %r9186, 25;
	shf.l.wrap.b32 	%r9192, %r9186, %r9185, 25;
	mov.b64 	%rd508, {%r9192, %r9191};
	xor.b64  	%rd509, %rd507, %rd508;
	xor.b64  	%rd510, %rd492, %rd446;
	xor.b64  	%rd511, %rd492, %rd469;
	and.b64  	%rd512, %rd511, %rd510;
	xor.b64  	%rd513, %rd512, %rd492;
	add.s64 	%rd514, %rd503, %rd513;
	add.s64 	%rd515, %rd514, %rd509;
	add.s64 	%rd516, %rd2802, %rd435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9193,%dummy}, %rd504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9194}, %rd504;
	}
	shf.r.wrap.b32 	%r9195, %r9194, %r9193, 14;
	shf.r.wrap.b32 	%r9196, %r9193, %r9194, 14;
	mov.b64 	%rd517, {%r9196, %r9195};
	shf.r.wrap.b32 	%r9197, %r9194, %r9193, 18;
	shf.r.wrap.b32 	%r9198, %r9193, %r9194, 18;
	mov.b64 	%rd518, {%r9198, %r9197};
	xor.b64  	%rd519, %rd518, %rd517;
	shf.l.wrap.b32 	%r9199, %r9193, %r9194, 23;
	shf.l.wrap.b32 	%r9200, %r9194, %r9193, 23;
	mov.b64 	%rd520, {%r9200, %r9199};
	xor.b64  	%rd521, %rd519, %rd520;
	xor.b64  	%rd522, %rd481, %rd458;
	and.b64  	%rd523, %rd504, %rd522;
	xor.b64  	%rd524, %rd523, %rd458;
	add.s64 	%rd525, %rd516, %rd524;
	add.s64 	%rd526, %rd525, %rd521;
	add.s64 	%rd527, %rd526, %rd446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9201,%dummy}, %rd515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9202}, %rd515;
	}
	shf.r.wrap.b32 	%r9203, %r9202, %r9201, 28;
	shf.r.wrap.b32 	%r9204, %r9201, %r9202, 28;
	mov.b64 	%rd528, {%r9204, %r9203};
	shf.l.wrap.b32 	%r9205, %r9201, %r9202, 30;
	shf.l.wrap.b32 	%r9206, %r9202, %r9201, 30;
	mov.b64 	%rd529, {%r9206, %r9205};
	xor.b64  	%rd530, %rd529, %rd528;
	shf.l.wrap.b32 	%r9207, %r9201, %r9202, 25;
	shf.l.wrap.b32 	%r9208, %r9202, %r9201, 25;
	mov.b64 	%rd531, {%r9208, %r9207};
	xor.b64  	%rd532, %rd530, %rd531;
	xor.b64  	%rd533, %rd515, %rd469;
	xor.b64  	%rd534, %rd515, %rd492;
	and.b64  	%rd535, %rd534, %rd533;
	xor.b64  	%rd536, %rd535, %rd515;
	add.s64 	%rd537, %rd526, %rd536;
	add.s64 	%rd538, %rd537, %rd532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9209,%dummy}, %rd527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9210}, %rd527;
	}
	shf.r.wrap.b32 	%r9211, %r9210, %r9209, 14;
	shf.r.wrap.b32 	%r9212, %r9209, %r9210, 14;
	mov.b64 	%rd539, {%r9212, %r9211};
	shf.r.wrap.b32 	%r9213, %r9210, %r9209, 18;
	shf.r.wrap.b32 	%r9214, %r9209, %r9210, 18;
	mov.b64 	%rd540, {%r9214, %r9213};
	xor.b64  	%rd541, %rd540, %rd539;
	shf.l.wrap.b32 	%r9215, %r9209, %r9210, 23;
	shf.l.wrap.b32 	%r9216, %r9210, %r9209, 23;
	mov.b64 	%rd542, {%r9216, %r9215};
	xor.b64  	%rd543, %rd541, %rd542;
	xor.b64  	%rd544, %rd504, %rd481;
	and.b64  	%rd545, %rd527, %rd544;
	xor.b64  	%rd546, %rd545, %rd481;
	add.s64 	%rd547, %rd458, %rd206;
	add.s64 	%rd548, %rd547, %rd2803;
	add.s64 	%rd549, %rd548, %rd546;
	add.s64 	%rd550, %rd549, %rd543;
	add.s64 	%rd551, %rd550, %rd469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9217,%dummy}, %rd538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9218}, %rd538;
	}
	shf.r.wrap.b32 	%r9219, %r9218, %r9217, 28;
	shf.r.wrap.b32 	%r9220, %r9217, %r9218, 28;
	mov.b64 	%rd552, {%r9220, %r9219};
	shf.l.wrap.b32 	%r9221, %r9217, %r9218, 30;
	shf.l.wrap.b32 	%r9222, %r9218, %r9217, 30;
	mov.b64 	%rd553, {%r9222, %r9221};
	xor.b64  	%rd554, %rd553, %rd552;
	shf.l.wrap.b32 	%r9223, %r9217, %r9218, 25;
	shf.l.wrap.b32 	%r9224, %r9218, %r9217, 25;
	mov.b64 	%rd555, {%r9224, %r9223};
	xor.b64  	%rd556, %rd554, %rd555;
	xor.b64  	%rd557, %rd538, %rd492;
	xor.b64  	%rd558, %rd538, %rd515;
	and.b64  	%rd559, %rd558, %rd557;
	xor.b64  	%rd560, %rd559, %rd538;
	add.s64 	%rd561, %rd550, %rd560;
	add.s64 	%rd562, %rd561, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9225,%dummy}, %rd200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9226}, %rd200;
	}
	shf.r.wrap.b32 	%r9227, %r9226, %r9225, 1;
	shf.r.wrap.b32 	%r9228, %r9225, %r9226, 1;
	mov.b64 	%rd563, {%r9228, %r9227};
	shf.r.wrap.b32 	%r9229, %r9226, %r9225, 8;
	shf.r.wrap.b32 	%r9230, %r9225, %r9226, 8;
	mov.b64 	%rd564, {%r9230, %r9229};
	shr.u64 	%rd565, %rd200, 7;
	xor.b64  	%rd566, %rd563, %rd565;
	xor.b64  	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd199, %rd20;
	add.s64 	%rd569, %rd568, %rd567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9231,%dummy}, %rd206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9232}, %rd206;
	}
	shf.r.wrap.b32 	%r9233, %r9232, %r9231, 19;
	shf.r.wrap.b32 	%r9234, %r9231, %r9232, 19;
	mov.b64 	%rd570, {%r9234, %r9233};
	shf.l.wrap.b32 	%r9235, %r9231, %r9232, 3;
	shf.l.wrap.b32 	%r9236, %r9232, %r9231, 3;
	mov.b64 	%rd571, {%r9236, %r9235};
	shr.u64 	%rd572, %rd206, 6;
	xor.b64  	%rd573, %rd570, %rd572;
	xor.b64  	%rd574, %rd573, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9237,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9238}, %rd201;
	}
	shf.r.wrap.b32 	%r9239, %r9238, %r9237, 1;
	shf.r.wrap.b32 	%r9240, %r9237, %r9238, 1;
	mov.b64 	%rd575, {%r9240, %r9239};
	shf.r.wrap.b32 	%r9241, %r9238, %r9237, 8;
	shf.r.wrap.b32 	%r9242, %r9237, %r9238, 8;
	mov.b64 	%rd576, {%r9242, %r9241};
	shr.u64 	%rd577, %rd201, 7;
	xor.b64  	%rd578, %rd575, %rd577;
	xor.b64  	%rd579, %rd578, %rd576;
	add.s64 	%rd580, %rd200, %rd574;
	add.s64 	%rd581, %rd580, %rd579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9243,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9244}, %rd569;
	}
	shf.r.wrap.b32 	%r9245, %r9244, %r9243, 19;
	shf.r.wrap.b32 	%r9246, %r9243, %r9244, 19;
	mov.b64 	%rd582, {%r9246, %r9245};
	shf.l.wrap.b32 	%r9247, %r9243, %r9244, 3;
	shf.l.wrap.b32 	%r9248, %r9244, %r9243, 3;
	mov.b64 	%rd583, {%r9248, %r9247};
	shr.u64 	%rd584, %rd569, 6;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9249,%dummy}, %rd202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9250}, %rd202;
	}
	shf.r.wrap.b32 	%r9251, %r9250, %r9249, 1;
	shf.r.wrap.b32 	%r9252, %r9249, %r9250, 1;
	mov.b64 	%rd587, {%r9252, %r9251};
	shf.r.wrap.b32 	%r9253, %r9250, %r9249, 8;
	shf.r.wrap.b32 	%r9254, %r9249, %r9250, 8;
	mov.b64 	%rd588, {%r9254, %r9253};
	shr.u64 	%rd589, %rd202, 7;
	xor.b64  	%rd590, %rd587, %rd589;
	xor.b64  	%rd591, %rd590, %rd588;
	add.s64 	%rd592, %rd201, %rd586;
	add.s64 	%rd593, %rd592, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9255,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9256}, %rd581;
	}
	shf.r.wrap.b32 	%r9257, %r9256, %r9255, 19;
	shf.r.wrap.b32 	%r9258, %r9255, %r9256, 19;
	mov.b64 	%rd594, {%r9258, %r9257};
	shf.l.wrap.b32 	%r9259, %r9255, %r9256, 3;
	shf.l.wrap.b32 	%r9260, %r9256, %r9255, 3;
	mov.b64 	%rd595, {%r9260, %r9259};
	shr.u64 	%rd596, %rd581, 6;
	xor.b64  	%rd597, %rd594, %rd596;
	xor.b64  	%rd598, %rd597, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9261,%dummy}, %rd203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9262}, %rd203;
	}
	shf.r.wrap.b32 	%r9263, %r9262, %r9261, 1;
	shf.r.wrap.b32 	%r9264, %r9261, %r9262, 1;
	mov.b64 	%rd599, {%r9264, %r9263};
	shf.r.wrap.b32 	%r9265, %r9262, %r9261, 8;
	shf.r.wrap.b32 	%r9266, %r9261, %r9262, 8;
	mov.b64 	%rd600, {%r9266, %r9265};
	shr.u64 	%rd601, %rd203, 7;
	xor.b64  	%rd602, %rd599, %rd601;
	xor.b64  	%rd603, %rd602, %rd600;
	add.s64 	%rd604, %rd202, %rd598;
	add.s64 	%rd605, %rd604, %rd603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9267,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9268}, %rd593;
	}
	shf.r.wrap.b32 	%r9269, %r9268, %r9267, 19;
	shf.r.wrap.b32 	%r9270, %r9267, %r9268, 19;
	mov.b64 	%rd606, {%r9270, %r9269};
	shf.l.wrap.b32 	%r9271, %r9267, %r9268, 3;
	shf.l.wrap.b32 	%r9272, %r9268, %r9267, 3;
	mov.b64 	%rd607, {%r9272, %r9271};
	shr.u64 	%rd608, %rd593, 6;
	xor.b64  	%rd609, %rd606, %rd608;
	xor.b64  	%rd610, %rd609, %rd607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9273,%dummy}, %rd204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9274}, %rd204;
	}
	shf.r.wrap.b32 	%r9275, %r9274, %r9273, 1;
	shf.r.wrap.b32 	%r9276, %r9273, %r9274, 1;
	mov.b64 	%rd611, {%r9276, %r9275};
	shf.r.wrap.b32 	%r9277, %r9274, %r9273, 8;
	shf.r.wrap.b32 	%r9278, %r9273, %r9274, 8;
	mov.b64 	%rd612, {%r9278, %r9277};
	shr.u64 	%rd613, %rd204, 7;
	xor.b64  	%rd614, %rd611, %rd613;
	xor.b64  	%rd615, %rd614, %rd612;
	add.s64 	%rd616, %rd203, %rd610;
	add.s64 	%rd617, %rd616, %rd615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9279,%dummy}, %rd605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9280}, %rd605;
	}
	shf.r.wrap.b32 	%r9281, %r9280, %r9279, 19;
	shf.r.wrap.b32 	%r9282, %r9279, %r9280, 19;
	mov.b64 	%rd618, {%r9282, %r9281};
	shf.l.wrap.b32 	%r9283, %r9279, %r9280, 3;
	shf.l.wrap.b32 	%r9284, %r9280, %r9279, 3;
	mov.b64 	%rd619, {%r9284, %r9283};
	shr.u64 	%rd620, %rd605, 6;
	xor.b64  	%rd621, %rd618, %rd620;
	xor.b64  	%rd622, %rd621, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9285,%dummy}, %rd205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9286}, %rd205;
	}
	shf.r.wrap.b32 	%r9287, %r9286, %r9285, 1;
	shf.r.wrap.b32 	%r9288, %r9285, %r9286, 1;
	mov.b64 	%rd623, {%r9288, %r9287};
	shf.r.wrap.b32 	%r9289, %r9286, %r9285, 8;
	shf.r.wrap.b32 	%r9290, %r9285, %r9286, 8;
	mov.b64 	%rd624, {%r9290, %r9289};
	shr.u64 	%rd625, %rd205, 7;
	xor.b64  	%rd626, %rd623, %rd625;
	xor.b64  	%rd627, %rd626, %rd624;
	add.s64 	%rd628, %rd204, %rd622;
	add.s64 	%rd629, %rd628, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9291,%dummy}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9292}, %rd617;
	}
	shf.r.wrap.b32 	%r9293, %r9292, %r9291, 19;
	shf.r.wrap.b32 	%r9294, %r9291, %r9292, 19;
	mov.b64 	%rd630, {%r9294, %r9293};
	shf.l.wrap.b32 	%r9295, %r9291, %r9292, 3;
	shf.l.wrap.b32 	%r9296, %r9292, %r9291, 3;
	mov.b64 	%rd631, {%r9296, %r9295};
	shr.u64 	%rd632, %rd617, 6;
	xor.b64  	%rd633, %rd630, %rd632;
	xor.b64  	%rd634, %rd633, %rd631;
	add.s64 	%rd635, %rd205, %rd206;
	add.s64 	%rd636, %rd635, %rd634;
	add.s64 	%rd637, %rd636, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9297,%dummy}, %rd629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9298}, %rd629;
	}
	shf.r.wrap.b32 	%r9299, %r9298, %r9297, 19;
	shf.r.wrap.b32 	%r9300, %r9297, %r9298, 19;
	mov.b64 	%rd638, {%r9300, %r9299};
	shf.l.wrap.b32 	%r9301, %r9297, %r9298, 3;
	shf.l.wrap.b32 	%r9302, %r9298, %r9297, 3;
	mov.b64 	%rd639, {%r9302, %r9301};
	shr.u64 	%rd640, %rd629, 6;
	xor.b64  	%rd641, %rd638, %rd640;
	xor.b64  	%rd642, %rd641, %rd639;
	add.s64 	%rd643, %rd569, %rd642;
	add.s64 	%rd644, %rd643, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9303,%dummy}, %rd637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9304}, %rd637;
	}
	shf.r.wrap.b32 	%r9305, %r9304, %r9303, 19;
	shf.r.wrap.b32 	%r9306, %r9303, %r9304, 19;
	mov.b64 	%rd645, {%r9306, %r9305};
	shf.l.wrap.b32 	%r9307, %r9303, %r9304, 3;
	shf.l.wrap.b32 	%r9308, %r9304, %r9303, 3;
	mov.b64 	%rd646, {%r9308, %r9307};
	shr.u64 	%rd647, %rd637, 6;
	xor.b64  	%rd648, %rd645, %rd647;
	xor.b64  	%rd649, %rd648, %rd646;
	add.s64 	%rd650, %rd581, %rd649;
	add.s64 	%rd651, %rd650, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9309,%dummy}, %rd644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9310}, %rd644;
	}
	shf.r.wrap.b32 	%r9311, %r9310, %r9309, 19;
	shf.r.wrap.b32 	%r9312, %r9309, %r9310, 19;
	mov.b64 	%rd652, {%r9312, %r9311};
	shf.l.wrap.b32 	%r9313, %r9309, %r9310, 3;
	shf.l.wrap.b32 	%r9314, %r9310, %r9309, 3;
	mov.b64 	%rd653, {%r9314, %r9313};
	shr.u64 	%rd654, %rd644, 6;
	xor.b64  	%rd655, %rd652, %rd654;
	xor.b64  	%rd656, %rd655, %rd653;
	add.s64 	%rd657, %rd593, %rd656;
	add.s64 	%rd658, %rd657, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9315,%dummy}, %rd651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9316}, %rd651;
	}
	shf.r.wrap.b32 	%r9317, %r9316, %r9315, 19;
	shf.r.wrap.b32 	%r9318, %r9315, %r9316, 19;
	mov.b64 	%rd659, {%r9318, %r9317};
	shf.l.wrap.b32 	%r9319, %r9315, %r9316, 3;
	shf.l.wrap.b32 	%r9320, %r9316, %r9315, 3;
	mov.b64 	%rd660, {%r9320, %r9319};
	shr.u64 	%rd661, %rd651, 6;
	xor.b64  	%rd662, %rd659, %rd661;
	xor.b64  	%rd663, %rd662, %rd660;
	add.s64 	%rd664, %rd605, %rd663;
	add.s64 	%rd665, %rd664, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9321,%dummy}, %rd658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9322}, %rd658;
	}
	shf.r.wrap.b32 	%r9323, %r9322, %r9321, 19;
	shf.r.wrap.b32 	%r9324, %r9321, %r9322, 19;
	mov.b64 	%rd666, {%r9324, %r9323};
	shf.l.wrap.b32 	%r9325, %r9321, %r9322, 3;
	shf.l.wrap.b32 	%r9326, %r9322, %r9321, 3;
	mov.b64 	%rd667, {%r9326, %r9325};
	shr.u64 	%rd668, %rd658, 6;
	xor.b64  	%rd669, %rd666, %rd668;
	xor.b64  	%rd670, %rd669, %rd667;
	add.s64 	%rd671, %rd617, %rd670;
	add.s64 	%rd672, %rd671, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9327,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9328}, %rd665;
	}
	shf.r.wrap.b32 	%r9329, %r9328, %r9327, 19;
	shf.r.wrap.b32 	%r9330, %r9327, %r9328, 19;
	mov.b64 	%rd673, {%r9330, %r9329};
	shf.l.wrap.b32 	%r9331, %r9327, %r9328, 3;
	shf.l.wrap.b32 	%r9332, %r9328, %r9327, 3;
	mov.b64 	%rd674, {%r9332, %r9331};
	shr.u64 	%rd675, %rd665, 6;
	xor.b64  	%rd676, %rd673, %rd675;
	xor.b64  	%rd677, %rd676, %rd674;
	add.s64 	%rd678, %rd629, %rd677;
	add.s64 	%rd679, %rd678, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9333,%dummy}, %rd672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9334}, %rd672;
	}
	shf.r.wrap.b32 	%r9335, %r9334, %r9333, 19;
	shf.r.wrap.b32 	%r9336, %r9333, %r9334, 19;
	mov.b64 	%rd680, {%r9336, %r9335};
	shf.l.wrap.b32 	%r9337, %r9333, %r9334, 3;
	shf.l.wrap.b32 	%r9338, %r9334, %r9333, 3;
	mov.b64 	%rd681, {%r9338, %r9337};
	shr.u64 	%rd682, %rd672, 6;
	xor.b64  	%rd683, %rd680, %rd682;
	xor.b64  	%rd684, %rd683, %rd681;
	add.s64 	%rd685, %rd637, %rd684;
	add.s64 	%rd686, %rd685, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9339,%dummy}, %rd679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9340}, %rd679;
	}
	shf.r.wrap.b32 	%r9341, %r9340, %r9339, 19;
	shf.r.wrap.b32 	%r9342, %r9339, %r9340, 19;
	mov.b64 	%rd687, {%r9342, %r9341};
	shf.l.wrap.b32 	%r9343, %r9339, %r9340, 3;
	shf.l.wrap.b32 	%r9344, %r9340, %r9339, 3;
	mov.b64 	%rd688, {%r9344, %r9343};
	shr.u64 	%rd689, %rd679, 6;
	xor.b64  	%rd690, %rd687, %rd689;
	xor.b64  	%rd691, %rd690, %rd688;
	shf.r.wrap.b32 	%r9345, %r9232, %r9231, 1;
	shf.r.wrap.b32 	%r9346, %r9231, %r9232, 1;
	mov.b64 	%rd692, {%r9346, %r9345};
	shf.r.wrap.b32 	%r9347, %r9232, %r9231, 8;
	shf.r.wrap.b32 	%r9348, %r9231, %r9232, 8;
	mov.b64 	%rd693, {%r9348, %r9347};
	shr.u64 	%rd694, %rd206, 7;
	xor.b64  	%rd695, %rd692, %rd694;
	xor.b64  	%rd696, %rd695, %rd693;
	add.s64 	%rd697, %rd644, %rd691;
	add.s64 	%rd698, %rd697, %rd696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9349,%dummy}, %rd686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9350}, %rd686;
	}
	shf.r.wrap.b32 	%r9351, %r9350, %r9349, 19;
	shf.r.wrap.b32 	%r9352, %r9349, %r9350, 19;
	mov.b64 	%rd699, {%r9352, %r9351};
	shf.l.wrap.b32 	%r9353, %r9349, %r9350, 3;
	shf.l.wrap.b32 	%r9354, %r9350, %r9349, 3;
	mov.b64 	%rd700, {%r9354, %r9353};
	shr.u64 	%rd701, %rd686, 6;
	xor.b64  	%rd702, %rd699, %rd701;
	xor.b64  	%rd703, %rd702, %rd700;
	shf.r.wrap.b32 	%r9355, %r9244, %r9243, 1;
	shf.r.wrap.b32 	%r9356, %r9243, %r9244, 1;
	mov.b64 	%rd704, {%r9356, %r9355};
	shf.r.wrap.b32 	%r9357, %r9244, %r9243, 8;
	shf.r.wrap.b32 	%r9358, %r9243, %r9244, 8;
	mov.b64 	%rd705, {%r9358, %r9357};
	shr.u64 	%rd706, %rd569, 7;
	xor.b64  	%rd707, %rd704, %rd706;
	xor.b64  	%rd708, %rd707, %rd705;
	add.s64 	%rd709, %rd651, %rd206;
	add.s64 	%rd710, %rd709, %rd703;
	add.s64 	%rd711, %rd710, %rd708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9359,%dummy}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9360}, %rd551;
	}
	shf.r.wrap.b32 	%r9361, %r9360, %r9359, 14;
	shf.r.wrap.b32 	%r9362, %r9359, %r9360, 14;
	mov.b64 	%rd712, {%r9362, %r9361};
	shf.r.wrap.b32 	%r9363, %r9360, %r9359, 18;
	shf.r.wrap.b32 	%r9364, %r9359, %r9360, 18;
	mov.b64 	%rd713, {%r9364, %r9363};
	xor.b64  	%rd714, %rd713, %rd712;
	shf.l.wrap.b32 	%r9365, %r9359, %r9360, 23;
	shf.l.wrap.b32 	%r9366, %r9360, %r9359, 23;
	mov.b64 	%rd715, {%r9366, %r9365};
	xor.b64  	%rd716, %rd714, %rd715;
	xor.b64  	%rd717, %rd504, %rd527;
	and.b64  	%rd718, %rd717, %rd551;
	xor.b64  	%rd719, %rd718, %rd504;
	add.s64 	%rd720, %rd719, %rd481;
	add.s64 	%rd721, %rd720, %rd569;
	add.s64 	%rd722, %rd721, %rd2804;
	add.s64 	%rd723, %rd722, %rd716;
	add.s64 	%rd724, %rd723, %rd492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9367,%dummy}, %rd562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9368}, %rd562;
	}
	shf.r.wrap.b32 	%r9369, %r9368, %r9367, 28;
	shf.r.wrap.b32 	%r9370, %r9367, %r9368, 28;
	mov.b64 	%rd725, {%r9370, %r9369};
	shf.l.wrap.b32 	%r9371, %r9367, %r9368, 30;
	shf.l.wrap.b32 	%r9372, %r9368, %r9367, 30;
	mov.b64 	%rd726, {%r9372, %r9371};
	xor.b64  	%rd727, %rd726, %rd725;
	shf.l.wrap.b32 	%r9373, %r9367, %r9368, 25;
	shf.l.wrap.b32 	%r9374, %r9368, %r9367, 25;
	mov.b64 	%rd728, {%r9374, %r9373};
	xor.b64  	%rd729, %rd727, %rd728;
	xor.b64  	%rd730, %rd562, %rd515;
	xor.b64  	%rd731, %rd562, %rd538;
	and.b64  	%rd732, %rd731, %rd730;
	xor.b64  	%rd733, %rd732, %rd562;
	add.s64 	%rd734, %rd723, %rd733;
	add.s64 	%rd735, %rd734, %rd729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9375,%dummy}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9376}, %rd724;
	}
	shf.r.wrap.b32 	%r9377, %r9376, %r9375, 14;
	shf.r.wrap.b32 	%r9378, %r9375, %r9376, 14;
	mov.b64 	%rd736, {%r9378, %r9377};
	shf.r.wrap.b32 	%r9379, %r9376, %r9375, 18;
	shf.r.wrap.b32 	%r9380, %r9375, %r9376, 18;
	mov.b64 	%rd737, {%r9380, %r9379};
	xor.b64  	%rd738, %rd737, %rd736;
	shf.l.wrap.b32 	%r9381, %r9375, %r9376, 23;
	shf.l.wrap.b32 	%r9382, %r9376, %r9375, 23;
	mov.b64 	%rd739, {%r9382, %r9381};
	xor.b64  	%rd740, %rd738, %rd739;
	xor.b64  	%rd741, %rd527, %rd551;
	and.b64  	%rd742, %rd724, %rd741;
	xor.b64  	%rd743, %rd742, %rd527;
	add.s64 	%rd744, %rd581, %rd504;
	add.s64 	%rd745, %rd744, %rd2805;
	add.s64 	%rd746, %rd745, %rd743;
	add.s64 	%rd747, %rd746, %rd740;
	add.s64 	%rd748, %rd747, %rd515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9383,%dummy}, %rd735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9384}, %rd735;
	}
	shf.r.wrap.b32 	%r9385, %r9384, %r9383, 28;
	shf.r.wrap.b32 	%r9386, %r9383, %r9384, 28;
	mov.b64 	%rd749, {%r9386, %r9385};
	shf.l.wrap.b32 	%r9387, %r9383, %r9384, 30;
	shf.l.wrap.b32 	%r9388, %r9384, %r9383, 30;
	mov.b64 	%rd750, {%r9388, %r9387};
	xor.b64  	%rd751, %rd750, %rd749;
	shf.l.wrap.b32 	%r9389, %r9383, %r9384, 25;
	shf.l.wrap.b32 	%r9390, %r9384, %r9383, 25;
	mov.b64 	%rd752, {%r9390, %r9389};
	xor.b64  	%rd753, %rd751, %rd752;
	xor.b64  	%rd754, %rd735, %rd538;
	xor.b64  	%rd755, %rd735, %rd562;
	and.b64  	%rd756, %rd755, %rd754;
	xor.b64  	%rd757, %rd756, %rd735;
	add.s64 	%rd758, %rd747, %rd757;
	add.s64 	%rd759, %rd758, %rd753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9391,%dummy}, %rd748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9392}, %rd748;
	}
	shf.r.wrap.b32 	%r9393, %r9392, %r9391, 14;
	shf.r.wrap.b32 	%r9394, %r9391, %r9392, 14;
	mov.b64 	%rd760, {%r9394, %r9393};
	shf.r.wrap.b32 	%r9395, %r9392, %r9391, 18;
	shf.r.wrap.b32 	%r9396, %r9391, %r9392, 18;
	mov.b64 	%rd761, {%r9396, %r9395};
	xor.b64  	%rd762, %rd761, %rd760;
	shf.l.wrap.b32 	%r9397, %r9391, %r9392, 23;
	shf.l.wrap.b32 	%r9398, %r9392, %r9391, 23;
	mov.b64 	%rd763, {%r9398, %r9397};
	xor.b64  	%rd764, %rd762, %rd763;
	xor.b64  	%rd765, %rd724, %rd551;
	and.b64  	%rd766, %rd748, %rd765;
	xor.b64  	%rd767, %rd766, %rd551;
	add.s64 	%rd768, %rd593, %rd527;
	add.s64 	%rd769, %rd768, %rd2806;
	add.s64 	%rd770, %rd769, %rd767;
	add.s64 	%rd771, %rd770, %rd764;
	add.s64 	%rd772, %rd771, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9399,%dummy}, %rd759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9400}, %rd759;
	}
	shf.r.wrap.b32 	%r9401, %r9400, %r9399, 28;
	shf.r.wrap.b32 	%r9402, %r9399, %r9400, 28;
	mov.b64 	%rd773, {%r9402, %r9401};
	shf.l.wrap.b32 	%r9403, %r9399, %r9400, 30;
	shf.l.wrap.b32 	%r9404, %r9400, %r9399, 30;
	mov.b64 	%rd774, {%r9404, %r9403};
	xor.b64  	%rd775, %rd774, %rd773;
	shf.l.wrap.b32 	%r9405, %r9399, %r9400, 25;
	shf.l.wrap.b32 	%r9406, %r9400, %r9399, 25;
	mov.b64 	%rd776, {%r9406, %r9405};
	xor.b64  	%rd777, %rd775, %rd776;
	xor.b64  	%rd778, %rd759, %rd562;
	xor.b64  	%rd779, %rd759, %rd735;
	and.b64  	%rd780, %rd779, %rd778;
	xor.b64  	%rd781, %rd780, %rd759;
	add.s64 	%rd782, %rd771, %rd781;
	add.s64 	%rd783, %rd782, %rd777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9407,%dummy}, %rd772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9408}, %rd772;
	}
	shf.r.wrap.b32 	%r9409, %r9408, %r9407, 14;
	shf.r.wrap.b32 	%r9410, %r9407, %r9408, 14;
	mov.b64 	%rd784, {%r9410, %r9409};
	shf.r.wrap.b32 	%r9411, %r9408, %r9407, 18;
	shf.r.wrap.b32 	%r9412, %r9407, %r9408, 18;
	mov.b64 	%rd785, {%r9412, %r9411};
	xor.b64  	%rd786, %rd785, %rd784;
	shf.l.wrap.b32 	%r9413, %r9407, %r9408, 23;
	shf.l.wrap.b32 	%r9414, %r9408, %r9407, 23;
	mov.b64 	%rd787, {%r9414, %r9413};
	xor.b64  	%rd788, %rd786, %rd787;
	xor.b64  	%rd789, %rd748, %rd724;
	and.b64  	%rd790, %rd772, %rd789;
	xor.b64  	%rd791, %rd790, %rd724;
	add.s64 	%rd792, %rd605, %rd551;
	add.s64 	%rd793, %rd792, %rd2807;
	add.s64 	%rd794, %rd793, %rd791;
	add.s64 	%rd795, %rd794, %rd788;
	add.s64 	%rd796, %rd795, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9415,%dummy}, %rd783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9416}, %rd783;
	}
	shf.r.wrap.b32 	%r9417, %r9416, %r9415, 28;
	shf.r.wrap.b32 	%r9418, %r9415, %r9416, 28;
	mov.b64 	%rd797, {%r9418, %r9417};
	shf.l.wrap.b32 	%r9419, %r9415, %r9416, 30;
	shf.l.wrap.b32 	%r9420, %r9416, %r9415, 30;
	mov.b64 	%rd798, {%r9420, %r9419};
	xor.b64  	%rd799, %rd798, %rd797;
	shf.l.wrap.b32 	%r9421, %r9415, %r9416, 25;
	shf.l.wrap.b32 	%r9422, %r9416, %r9415, 25;
	mov.b64 	%rd800, {%r9422, %r9421};
	xor.b64  	%rd801, %rd799, %rd800;
	xor.b64  	%rd802, %rd783, %rd735;
	xor.b64  	%rd803, %rd783, %rd759;
	and.b64  	%rd804, %rd803, %rd802;
	xor.b64  	%rd805, %rd804, %rd783;
	add.s64 	%rd806, %rd795, %rd805;
	add.s64 	%rd807, %rd806, %rd801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9423,%dummy}, %rd796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9424}, %rd796;
	}
	shf.r.wrap.b32 	%r9425, %r9424, %r9423, 14;
	shf.r.wrap.b32 	%r9426, %r9423, %r9424, 14;
	mov.b64 	%rd808, {%r9426, %r9425};
	shf.r.wrap.b32 	%r9427, %r9424, %r9423, 18;
	shf.r.wrap.b32 	%r9428, %r9423, %r9424, 18;
	mov.b64 	%rd809, {%r9428, %r9427};
	xor.b64  	%rd810, %rd809, %rd808;
	shf.l.wrap.b32 	%r9429, %r9423, %r9424, 23;
	shf.l.wrap.b32 	%r9430, %r9424, %r9423, 23;
	mov.b64 	%rd811, {%r9430, %r9429};
	xor.b64  	%rd812, %rd810, %rd811;
	xor.b64  	%rd813, %rd772, %rd748;
	and.b64  	%rd814, %rd796, %rd813;
	xor.b64  	%rd815, %rd814, %rd748;
	add.s64 	%rd816, %rd724, %rd617;
	add.s64 	%rd817, %rd816, %rd2808;
	add.s64 	%rd818, %rd817, %rd815;
	add.s64 	%rd819, %rd818, %rd812;
	add.s64 	%rd820, %rd819, %rd735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9431,%dummy}, %rd807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9432}, %rd807;
	}
	shf.r.wrap.b32 	%r9433, %r9432, %r9431, 28;
	shf.r.wrap.b32 	%r9434, %r9431, %r9432, 28;
	mov.b64 	%rd821, {%r9434, %r9433};
	shf.l.wrap.b32 	%r9435, %r9431, %r9432, 30;
	shf.l.wrap.b32 	%r9436, %r9432, %r9431, 30;
	mov.b64 	%rd822, {%r9436, %r9435};
	xor.b64  	%rd823, %rd822, %rd821;
	shf.l.wrap.b32 	%r9437, %r9431, %r9432, 25;
	shf.l.wrap.b32 	%r9438, %r9432, %r9431, 25;
	mov.b64 	%rd824, {%r9438, %r9437};
	xor.b64  	%rd825, %rd823, %rd824;
	xor.b64  	%rd826, %rd807, %rd759;
	xor.b64  	%rd827, %rd807, %rd783;
	and.b64  	%rd828, %rd827, %rd826;
	xor.b64  	%rd829, %rd828, %rd807;
	add.s64 	%rd830, %rd819, %rd829;
	add.s64 	%rd831, %rd830, %rd825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9439,%dummy}, %rd820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9440}, %rd820;
	}
	shf.r.wrap.b32 	%r9441, %r9440, %r9439, 14;
	shf.r.wrap.b32 	%r9442, %r9439, %r9440, 14;
	mov.b64 	%rd832, {%r9442, %r9441};
	shf.r.wrap.b32 	%r9443, %r9440, %r9439, 18;
	shf.r.wrap.b32 	%r9444, %r9439, %r9440, 18;
	mov.b64 	%rd833, {%r9444, %r9443};
	xor.b64  	%rd834, %rd833, %rd832;
	shf.l.wrap.b32 	%r9445, %r9439, %r9440, 23;
	shf.l.wrap.b32 	%r9446, %r9440, %r9439, 23;
	mov.b64 	%rd835, {%r9446, %r9445};
	xor.b64  	%rd836, %rd834, %rd835;
	xor.b64  	%rd837, %rd796, %rd772;
	and.b64  	%rd838, %rd820, %rd837;
	xor.b64  	%rd839, %rd838, %rd772;
	add.s64 	%rd840, %rd748, %rd629;
	add.s64 	%rd841, %rd840, %rd2809;
	add.s64 	%rd842, %rd841, %rd839;
	add.s64 	%rd843, %rd842, %rd836;
	add.s64 	%rd844, %rd843, %rd759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9447,%dummy}, %rd831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9448}, %rd831;
	}
	shf.r.wrap.b32 	%r9449, %r9448, %r9447, 28;
	shf.r.wrap.b32 	%r9450, %r9447, %r9448, 28;
	mov.b64 	%rd845, {%r9450, %r9449};
	shf.l.wrap.b32 	%r9451, %r9447, %r9448, 30;
	shf.l.wrap.b32 	%r9452, %r9448, %r9447, 30;
	mov.b64 	%rd846, {%r9452, %r9451};
	xor.b64  	%rd847, %rd846, %rd845;
	shf.l.wrap.b32 	%r9453, %r9447, %r9448, 25;
	shf.l.wrap.b32 	%r9454, %r9448, %r9447, 25;
	mov.b64 	%rd848, {%r9454, %r9453};
	xor.b64  	%rd849, %rd847, %rd848;
	xor.b64  	%rd850, %rd831, %rd783;
	xor.b64  	%rd851, %rd831, %rd807;
	and.b64  	%rd852, %rd851, %rd850;
	xor.b64  	%rd853, %rd852, %rd831;
	add.s64 	%rd854, %rd843, %rd853;
	add.s64 	%rd855, %rd854, %rd849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9455,%dummy}, %rd844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9456}, %rd844;
	}
	shf.r.wrap.b32 	%r9457, %r9456, %r9455, 14;
	shf.r.wrap.b32 	%r9458, %r9455, %r9456, 14;
	mov.b64 	%rd856, {%r9458, %r9457};
	shf.r.wrap.b32 	%r9459, %r9456, %r9455, 18;
	shf.r.wrap.b32 	%r9460, %r9455, %r9456, 18;
	mov.b64 	%rd857, {%r9460, %r9459};
	xor.b64  	%rd858, %rd857, %rd856;
	shf.l.wrap.b32 	%r9461, %r9455, %r9456, 23;
	shf.l.wrap.b32 	%r9462, %r9456, %r9455, 23;
	mov.b64 	%rd859, {%r9462, %r9461};
	xor.b64  	%rd860, %rd858, %rd859;
	xor.b64  	%rd861, %rd820, %rd796;
	and.b64  	%rd862, %rd844, %rd861;
	xor.b64  	%rd863, %rd862, %rd796;
	add.s64 	%rd864, %rd772, %rd637;
	add.s64 	%rd865, %rd864, %rd2810;
	add.s64 	%rd866, %rd865, %rd863;
	add.s64 	%rd867, %rd866, %rd860;
	add.s64 	%rd868, %rd867, %rd783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9463,%dummy}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9464}, %rd855;
	}
	shf.r.wrap.b32 	%r9465, %r9464, %r9463, 28;
	shf.r.wrap.b32 	%r9466, %r9463, %r9464, 28;
	mov.b64 	%rd869, {%r9466, %r9465};
	shf.l.wrap.b32 	%r9467, %r9463, %r9464, 30;
	shf.l.wrap.b32 	%r9468, %r9464, %r9463, 30;
	mov.b64 	%rd870, {%r9468, %r9467};
	xor.b64  	%rd871, %rd870, %rd869;
	shf.l.wrap.b32 	%r9469, %r9463, %r9464, 25;
	shf.l.wrap.b32 	%r9470, %r9464, %r9463, 25;
	mov.b64 	%rd872, {%r9470, %r9469};
	xor.b64  	%rd873, %rd871, %rd872;
	xor.b64  	%rd874, %rd855, %rd807;
	xor.b64  	%rd875, %rd855, %rd831;
	and.b64  	%rd876, %rd875, %rd874;
	xor.b64  	%rd877, %rd876, %rd855;
	add.s64 	%rd878, %rd867, %rd877;
	add.s64 	%rd879, %rd878, %rd873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9471,%dummy}, %rd868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9472}, %rd868;
	}
	shf.r.wrap.b32 	%r9473, %r9472, %r9471, 14;
	shf.r.wrap.b32 	%r9474, %r9471, %r9472, 14;
	mov.b64 	%rd880, {%r9474, %r9473};
	shf.r.wrap.b32 	%r9475, %r9472, %r9471, 18;
	shf.r.wrap.b32 	%r9476, %r9471, %r9472, 18;
	mov.b64 	%rd881, {%r9476, %r9475};
	xor.b64  	%rd882, %rd881, %rd880;
	shf.l.wrap.b32 	%r9477, %r9471, %r9472, 23;
	shf.l.wrap.b32 	%r9478, %r9472, %r9471, 23;
	mov.b64 	%rd883, {%r9478, %r9477};
	xor.b64  	%rd884, %rd882, %rd883;
	xor.b64  	%rd885, %rd844, %rd820;
	and.b64  	%rd886, %rd868, %rd885;
	xor.b64  	%rd887, %rd886, %rd820;
	add.s64 	%rd888, %rd796, %rd644;
	add.s64 	%rd889, %rd888, %rd2811;
	add.s64 	%rd890, %rd889, %rd887;
	add.s64 	%rd891, %rd890, %rd884;
	add.s64 	%rd892, %rd891, %rd807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9479,%dummy}, %rd879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9480}, %rd879;
	}
	shf.r.wrap.b32 	%r9481, %r9480, %r9479, 28;
	shf.r.wrap.b32 	%r9482, %r9479, %r9480, 28;
	mov.b64 	%rd893, {%r9482, %r9481};
	shf.l.wrap.b32 	%r9483, %r9479, %r9480, 30;
	shf.l.wrap.b32 	%r9484, %r9480, %r9479, 30;
	mov.b64 	%rd894, {%r9484, %r9483};
	xor.b64  	%rd895, %rd894, %rd893;
	shf.l.wrap.b32 	%r9485, %r9479, %r9480, 25;
	shf.l.wrap.b32 	%r9486, %r9480, %r9479, 25;
	mov.b64 	%rd896, {%r9486, %r9485};
	xor.b64  	%rd897, %rd895, %rd896;
	xor.b64  	%rd898, %rd879, %rd831;
	xor.b64  	%rd899, %rd879, %rd855;
	and.b64  	%rd900, %rd899, %rd898;
	xor.b64  	%rd901, %rd900, %rd879;
	add.s64 	%rd902, %rd891, %rd901;
	add.s64 	%rd903, %rd902, %rd897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9487,%dummy}, %rd892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9488}, %rd892;
	}
	shf.r.wrap.b32 	%r9489, %r9488, %r9487, 14;
	shf.r.wrap.b32 	%r9490, %r9487, %r9488, 14;
	mov.b64 	%rd904, {%r9490, %r9489};
	shf.r.wrap.b32 	%r9491, %r9488, %r9487, 18;
	shf.r.wrap.b32 	%r9492, %r9487, %r9488, 18;
	mov.b64 	%rd905, {%r9492, %r9491};
	xor.b64  	%rd906, %rd905, %rd904;
	shf.l.wrap.b32 	%r9493, %r9487, %r9488, 23;
	shf.l.wrap.b32 	%r9494, %r9488, %r9487, 23;
	mov.b64 	%rd907, {%r9494, %r9493};
	xor.b64  	%rd908, %rd906, %rd907;
	xor.b64  	%rd909, %rd868, %rd844;
	and.b64  	%rd910, %rd892, %rd909;
	xor.b64  	%rd911, %rd910, %rd844;
	add.s64 	%rd912, %rd820, %rd651;
	add.s64 	%rd913, %rd912, %rd2812;
	add.s64 	%rd914, %rd913, %rd911;
	add.s64 	%rd915, %rd914, %rd908;
	add.s64 	%rd916, %rd915, %rd831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9495,%dummy}, %rd903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9496}, %rd903;
	}
	shf.r.wrap.b32 	%r9497, %r9496, %r9495, 28;
	shf.r.wrap.b32 	%r9498, %r9495, %r9496, 28;
	mov.b64 	%rd917, {%r9498, %r9497};
	shf.l.wrap.b32 	%r9499, %r9495, %r9496, 30;
	shf.l.wrap.b32 	%r9500, %r9496, %r9495, 30;
	mov.b64 	%rd918, {%r9500, %r9499};
	xor.b64  	%rd919, %rd918, %rd917;
	shf.l.wrap.b32 	%r9501, %r9495, %r9496, 25;
	shf.l.wrap.b32 	%r9502, %r9496, %r9495, 25;
	mov.b64 	%rd920, {%r9502, %r9501};
	xor.b64  	%rd921, %rd919, %rd920;
	xor.b64  	%rd922, %rd903, %rd855;
	xor.b64  	%rd923, %rd903, %rd879;
	and.b64  	%rd924, %rd923, %rd922;
	xor.b64  	%rd925, %rd924, %rd903;
	add.s64 	%rd926, %rd915, %rd925;
	add.s64 	%rd927, %rd926, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9503,%dummy}, %rd916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9504}, %rd916;
	}
	shf.r.wrap.b32 	%r9505, %r9504, %r9503, 14;
	shf.r.wrap.b32 	%r9506, %r9503, %r9504, 14;
	mov.b64 	%rd928, {%r9506, %r9505};
	shf.r.wrap.b32 	%r9507, %r9504, %r9503, 18;
	shf.r.wrap.b32 	%r9508, %r9503, %r9504, 18;
	mov.b64 	%rd929, {%r9508, %r9507};
	xor.b64  	%rd930, %rd929, %rd928;
	shf.l.wrap.b32 	%r9509, %r9503, %r9504, 23;
	shf.l.wrap.b32 	%r9510, %r9504, %r9503, 23;
	mov.b64 	%rd931, {%r9510, %r9509};
	xor.b64  	%rd932, %rd930, %rd931;
	xor.b64  	%rd933, %rd892, %rd868;
	and.b64  	%rd934, %rd916, %rd933;
	xor.b64  	%rd935, %rd934, %rd868;
	add.s64 	%rd936, %rd844, %rd658;
	add.s64 	%rd937, %rd936, %rd2813;
	add.s64 	%rd938, %rd937, %rd935;
	add.s64 	%rd939, %rd938, %rd932;
	add.s64 	%rd940, %rd939, %rd855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9511,%dummy}, %rd927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9512}, %rd927;
	}
	shf.r.wrap.b32 	%r9513, %r9512, %r9511, 28;
	shf.r.wrap.b32 	%r9514, %r9511, %r9512, 28;
	mov.b64 	%rd941, {%r9514, %r9513};
	shf.l.wrap.b32 	%r9515, %r9511, %r9512, 30;
	shf.l.wrap.b32 	%r9516, %r9512, %r9511, 30;
	mov.b64 	%rd942, {%r9516, %r9515};
	xor.b64  	%rd943, %rd942, %rd941;
	shf.l.wrap.b32 	%r9517, %r9511, %r9512, 25;
	shf.l.wrap.b32 	%r9518, %r9512, %r9511, 25;
	mov.b64 	%rd944, {%r9518, %r9517};
	xor.b64  	%rd945, %rd943, %rd944;
	xor.b64  	%rd946, %rd927, %rd879;
	xor.b64  	%rd947, %rd927, %rd903;
	and.b64  	%rd948, %rd947, %rd946;
	xor.b64  	%rd949, %rd948, %rd927;
	add.s64 	%rd950, %rd939, %rd949;
	add.s64 	%rd951, %rd950, %rd945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9519,%dummy}, %rd940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9520}, %rd940;
	}
	shf.r.wrap.b32 	%r9521, %r9520, %r9519, 14;
	shf.r.wrap.b32 	%r9522, %r9519, %r9520, 14;
	mov.b64 	%rd952, {%r9522, %r9521};
	shf.r.wrap.b32 	%r9523, %r9520, %r9519, 18;
	shf.r.wrap.b32 	%r9524, %r9519, %r9520, 18;
	mov.b64 	%rd953, {%r9524, %r9523};
	xor.b64  	%rd954, %rd953, %rd952;
	shf.l.wrap.b32 	%r9525, %r9519, %r9520, 23;
	shf.l.wrap.b32 	%r9526, %r9520, %r9519, 23;
	mov.b64 	%rd955, {%r9526, %r9525};
	xor.b64  	%rd956, %rd954, %rd955;
	xor.b64  	%rd957, %rd916, %rd892;
	and.b64  	%rd958, %rd940, %rd957;
	xor.b64  	%rd959, %rd958, %rd892;
	add.s64 	%rd960, %rd868, %rd665;
	add.s64 	%rd961, %rd960, %rd2814;
	add.s64 	%rd962, %rd961, %rd959;
	add.s64 	%rd963, %rd962, %rd956;
	add.s64 	%rd964, %rd963, %rd879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9527,%dummy}, %rd951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9528}, %rd951;
	}
	shf.r.wrap.b32 	%r9529, %r9528, %r9527, 28;
	shf.r.wrap.b32 	%r9530, %r9527, %r9528, 28;
	mov.b64 	%rd965, {%r9530, %r9529};
	shf.l.wrap.b32 	%r9531, %r9527, %r9528, 30;
	shf.l.wrap.b32 	%r9532, %r9528, %r9527, 30;
	mov.b64 	%rd966, {%r9532, %r9531};
	xor.b64  	%rd967, %rd966, %rd965;
	shf.l.wrap.b32 	%r9533, %r9527, %r9528, 25;
	shf.l.wrap.b32 	%r9534, %r9528, %r9527, 25;
	mov.b64 	%rd968, {%r9534, %r9533};
	xor.b64  	%rd969, %rd967, %rd968;
	xor.b64  	%rd970, %rd951, %rd903;
	xor.b64  	%rd971, %rd951, %rd927;
	and.b64  	%rd972, %rd971, %rd970;
	xor.b64  	%rd973, %rd972, %rd951;
	add.s64 	%rd974, %rd963, %rd973;
	add.s64 	%rd975, %rd974, %rd969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9535,%dummy}, %rd964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9536}, %rd964;
	}
	shf.r.wrap.b32 	%r9537, %r9536, %r9535, 14;
	shf.r.wrap.b32 	%r9538, %r9535, %r9536, 14;
	mov.b64 	%rd976, {%r9538, %r9537};
	shf.r.wrap.b32 	%r9539, %r9536, %r9535, 18;
	shf.r.wrap.b32 	%r9540, %r9535, %r9536, 18;
	mov.b64 	%rd977, {%r9540, %r9539};
	xor.b64  	%rd978, %rd977, %rd976;
	shf.l.wrap.b32 	%r9541, %r9535, %r9536, 23;
	shf.l.wrap.b32 	%r9542, %r9536, %r9535, 23;
	mov.b64 	%rd979, {%r9542, %r9541};
	xor.b64  	%rd980, %rd978, %rd979;
	xor.b64  	%rd981, %rd940, %rd916;
	and.b64  	%rd982, %rd964, %rd981;
	xor.b64  	%rd983, %rd982, %rd916;
	add.s64 	%rd984, %rd892, %rd672;
	add.s64 	%rd985, %rd984, %rd2815;
	add.s64 	%rd986, %rd985, %rd983;
	add.s64 	%rd987, %rd986, %rd980;
	add.s64 	%rd988, %rd987, %rd903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9543,%dummy}, %rd975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9544}, %rd975;
	}
	shf.r.wrap.b32 	%r9545, %r9544, %r9543, 28;
	shf.r.wrap.b32 	%r9546, %r9543, %r9544, 28;
	mov.b64 	%rd989, {%r9546, %r9545};
	shf.l.wrap.b32 	%r9547, %r9543, %r9544, 30;
	shf.l.wrap.b32 	%r9548, %r9544, %r9543, 30;
	mov.b64 	%rd990, {%r9548, %r9547};
	xor.b64  	%rd991, %rd990, %rd989;
	shf.l.wrap.b32 	%r9549, %r9543, %r9544, 25;
	shf.l.wrap.b32 	%r9550, %r9544, %r9543, 25;
	mov.b64 	%rd992, {%r9550, %r9549};
	xor.b64  	%rd993, %rd991, %rd992;
	xor.b64  	%rd994, %rd975, %rd927;
	xor.b64  	%rd995, %rd975, %rd951;
	and.b64  	%rd996, %rd995, %rd994;
	xor.b64  	%rd997, %rd996, %rd975;
	add.s64 	%rd998, %rd987, %rd997;
	add.s64 	%rd999, %rd998, %rd993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9551,%dummy}, %rd988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9552}, %rd988;
	}
	shf.r.wrap.b32 	%r9553, %r9552, %r9551, 14;
	shf.r.wrap.b32 	%r9554, %r9551, %r9552, 14;
	mov.b64 	%rd1000, {%r9554, %r9553};
	shf.r.wrap.b32 	%r9555, %r9552, %r9551, 18;
	shf.r.wrap.b32 	%r9556, %r9551, %r9552, 18;
	mov.b64 	%rd1001, {%r9556, %r9555};
	xor.b64  	%rd1002, %rd1001, %rd1000;
	shf.l.wrap.b32 	%r9557, %r9551, %r9552, 23;
	shf.l.wrap.b32 	%r9558, %r9552, %r9551, 23;
	mov.b64 	%rd1003, {%r9558, %r9557};
	xor.b64  	%rd1004, %rd1002, %rd1003;
	xor.b64  	%rd1005, %rd964, %rd940;
	and.b64  	%rd1006, %rd988, %rd1005;
	xor.b64  	%rd1007, %rd1006, %rd940;
	add.s64 	%rd1008, %rd916, %rd679;
	add.s64 	%rd1009, %rd1008, %rd2816;
	add.s64 	%rd1010, %rd1009, %rd1007;
	add.s64 	%rd1011, %rd1010, %rd1004;
	add.s64 	%rd1012, %rd1011, %rd927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9559,%dummy}, %rd999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9560}, %rd999;
	}
	shf.r.wrap.b32 	%r9561, %r9560, %r9559, 28;
	shf.r.wrap.b32 	%r9562, %r9559, %r9560, 28;
	mov.b64 	%rd1013, {%r9562, %r9561};
	shf.l.wrap.b32 	%r9563, %r9559, %r9560, 30;
	shf.l.wrap.b32 	%r9564, %r9560, %r9559, 30;
	mov.b64 	%rd1014, {%r9564, %r9563};
	xor.b64  	%rd1015, %rd1014, %rd1013;
	shf.l.wrap.b32 	%r9565, %r9559, %r9560, 25;
	shf.l.wrap.b32 	%r9566, %r9560, %r9559, 25;
	mov.b64 	%rd1016, {%r9566, %r9565};
	xor.b64  	%rd1017, %rd1015, %rd1016;
	xor.b64  	%rd1018, %rd999, %rd951;
	xor.b64  	%rd1019, %rd999, %rd975;
	and.b64  	%rd1020, %rd1019, %rd1018;
	xor.b64  	%rd1021, %rd1020, %rd999;
	add.s64 	%rd1022, %rd1011, %rd1021;
	add.s64 	%rd1023, %rd1022, %rd1017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9567,%dummy}, %rd1012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9568}, %rd1012;
	}
	shf.r.wrap.b32 	%r9569, %r9568, %r9567, 14;
	shf.r.wrap.b32 	%r9570, %r9567, %r9568, 14;
	mov.b64 	%rd1024, {%r9570, %r9569};
	shf.r.wrap.b32 	%r9571, %r9568, %r9567, 18;
	shf.r.wrap.b32 	%r9572, %r9567, %r9568, 18;
	mov.b64 	%rd1025, {%r9572, %r9571};
	xor.b64  	%rd1026, %rd1025, %rd1024;
	shf.l.wrap.b32 	%r9573, %r9567, %r9568, 23;
	shf.l.wrap.b32 	%r9574, %r9568, %r9567, 23;
	mov.b64 	%rd1027, {%r9574, %r9573};
	xor.b64  	%rd1028, %rd1026, %rd1027;
	xor.b64  	%rd1029, %rd988, %rd964;
	and.b64  	%rd1030, %rd1012, %rd1029;
	xor.b64  	%rd1031, %rd1030, %rd964;
	add.s64 	%rd1032, %rd940, %rd686;
	add.s64 	%rd1033, %rd1032, %rd2817;
	add.s64 	%rd1034, %rd1033, %rd1031;
	add.s64 	%rd1035, %rd1034, %rd1028;
	add.s64 	%rd1036, %rd1035, %rd951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9575,%dummy}, %rd1023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9576}, %rd1023;
	}
	shf.r.wrap.b32 	%r9577, %r9576, %r9575, 28;
	shf.r.wrap.b32 	%r9578, %r9575, %r9576, 28;
	mov.b64 	%rd1037, {%r9578, %r9577};
	shf.l.wrap.b32 	%r9579, %r9575, %r9576, 30;
	shf.l.wrap.b32 	%r9580, %r9576, %r9575, 30;
	mov.b64 	%rd1038, {%r9580, %r9579};
	xor.b64  	%rd1039, %rd1038, %rd1037;
	shf.l.wrap.b32 	%r9581, %r9575, %r9576, 25;
	shf.l.wrap.b32 	%r9582, %r9576, %r9575, 25;
	mov.b64 	%rd1040, {%r9582, %r9581};
	xor.b64  	%rd1041, %rd1039, %rd1040;
	xor.b64  	%rd1042, %rd1023, %rd975;
	xor.b64  	%rd1043, %rd1023, %rd999;
	and.b64  	%rd1044, %rd1043, %rd1042;
	xor.b64  	%rd1045, %rd1044, %rd1023;
	add.s64 	%rd1046, %rd1035, %rd1045;
	add.s64 	%rd1047, %rd1046, %rd1041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9583,%dummy}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9584}, %rd1036;
	}
	shf.r.wrap.b32 	%r9585, %r9584, %r9583, 14;
	shf.r.wrap.b32 	%r9586, %r9583, %r9584, 14;
	mov.b64 	%rd1048, {%r9586, %r9585};
	shf.r.wrap.b32 	%r9587, %r9584, %r9583, 18;
	shf.r.wrap.b32 	%r9588, %r9583, %r9584, 18;
	mov.b64 	%rd1049, {%r9588, %r9587};
	xor.b64  	%rd1050, %rd1049, %rd1048;
	shf.l.wrap.b32 	%r9589, %r9583, %r9584, 23;
	shf.l.wrap.b32 	%r9590, %r9584, %r9583, 23;
	mov.b64 	%rd1051, {%r9590, %r9589};
	xor.b64  	%rd1052, %rd1050, %rd1051;
	xor.b64  	%rd1053, %rd1012, %rd988;
	and.b64  	%rd1054, %rd1036, %rd1053;
	xor.b64  	%rd1055, %rd1054, %rd988;
	add.s64 	%rd1056, %rd964, %rd698;
	add.s64 	%rd1057, %rd1056, %rd2818;
	add.s64 	%rd1058, %rd1057, %rd1055;
	add.s64 	%rd1059, %rd1058, %rd1052;
	add.s64 	%rd1060, %rd1059, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9591,%dummy}, %rd1047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9592}, %rd1047;
	}
	shf.r.wrap.b32 	%r9593, %r9592, %r9591, 28;
	shf.r.wrap.b32 	%r9594, %r9591, %r9592, 28;
	mov.b64 	%rd1061, {%r9594, %r9593};
	shf.l.wrap.b32 	%r9595, %r9591, %r9592, 30;
	shf.l.wrap.b32 	%r9596, %r9592, %r9591, 30;
	mov.b64 	%rd1062, {%r9596, %r9595};
	xor.b64  	%rd1063, %rd1062, %rd1061;
	shf.l.wrap.b32 	%r9597, %r9591, %r9592, 25;
	shf.l.wrap.b32 	%r9598, %r9592, %r9591, 25;
	mov.b64 	%rd1064, {%r9598, %r9597};
	xor.b64  	%rd1065, %rd1063, %rd1064;
	xor.b64  	%rd1066, %rd1047, %rd999;
	xor.b64  	%rd1067, %rd1047, %rd1023;
	and.b64  	%rd1068, %rd1067, %rd1066;
	xor.b64  	%rd1069, %rd1068, %rd1047;
	add.s64 	%rd1070, %rd1059, %rd1069;
	add.s64 	%rd1071, %rd1070, %rd1065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9599,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9600}, %rd1060;
	}
	shf.r.wrap.b32 	%r9601, %r9600, %r9599, 14;
	shf.r.wrap.b32 	%r9602, %r9599, %r9600, 14;
	mov.b64 	%rd1072, {%r9602, %r9601};
	shf.r.wrap.b32 	%r9603, %r9600, %r9599, 18;
	shf.r.wrap.b32 	%r9604, %r9599, %r9600, 18;
	mov.b64 	%rd1073, {%r9604, %r9603};
	xor.b64  	%rd1074, %rd1073, %rd1072;
	shf.l.wrap.b32 	%r9605, %r9599, %r9600, 23;
	shf.l.wrap.b32 	%r9606, %r9600, %r9599, 23;
	mov.b64 	%rd1075, {%r9606, %r9605};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	xor.b64  	%rd1077, %rd1036, %rd1012;
	and.b64  	%rd1078, %rd1060, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd1012;
	add.s64 	%rd1080, %rd988, %rd711;
	add.s64 	%rd1081, %rd1080, %rd2819;
	add.s64 	%rd1082, %rd1081, %rd1079;
	add.s64 	%rd1083, %rd1082, %rd1076;
	add.s64 	%rd1084, %rd1083, %rd999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9607,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9608}, %rd1071;
	}
	shf.r.wrap.b32 	%r9609, %r9608, %r9607, 28;
	shf.r.wrap.b32 	%r9610, %r9607, %r9608, 28;
	mov.b64 	%rd1085, {%r9610, %r9609};
	shf.l.wrap.b32 	%r9611, %r9607, %r9608, 30;
	shf.l.wrap.b32 	%r9612, %r9608, %r9607, 30;
	mov.b64 	%rd1086, {%r9612, %r9611};
	xor.b64  	%rd1087, %rd1086, %rd1085;
	shf.l.wrap.b32 	%r9613, %r9607, %r9608, 25;
	shf.l.wrap.b32 	%r9614, %r9608, %r9607, 25;
	mov.b64 	%rd1088, {%r9614, %r9613};
	xor.b64  	%rd1089, %rd1087, %rd1088;
	xor.b64  	%rd1090, %rd1071, %rd1023;
	xor.b64  	%rd1091, %rd1071, %rd1047;
	and.b64  	%rd1092, %rd1091, %rd1090;
	xor.b64  	%rd1093, %rd1092, %rd1071;
	add.s64 	%rd1094, %rd1083, %rd1093;
	add.s64 	%rd1095, %rd1094, %rd1089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9615,%dummy}, %rd698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9616}, %rd698;
	}
	shf.r.wrap.b32 	%r9617, %r9616, %r9615, 19;
	shf.r.wrap.b32 	%r9618, %r9615, %r9616, 19;
	mov.b64 	%rd1096, {%r9618, %r9617};
	shf.l.wrap.b32 	%r9619, %r9615, %r9616, 3;
	shf.l.wrap.b32 	%r9620, %r9616, %r9615, 3;
	mov.b64 	%rd1097, {%r9620, %r9619};
	shr.u64 	%rd1098, %rd698, 6;
	xor.b64  	%rd1099, %rd1096, %rd1098;
	xor.b64  	%rd1100, %rd1099, %rd1097;
	shf.r.wrap.b32 	%r9621, %r9256, %r9255, 1;
	shf.r.wrap.b32 	%r9622, %r9255, %r9256, 1;
	mov.b64 	%rd1101, {%r9622, %r9621};
	shf.r.wrap.b32 	%r9623, %r9256, %r9255, 8;
	shf.r.wrap.b32 	%r9624, %r9255, %r9256, 8;
	mov.b64 	%rd1102, {%r9624, %r9623};
	shr.u64 	%rd1103, %rd581, 7;
	xor.b64  	%rd1104, %rd1101, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1102;
	add.s64 	%rd1106, %rd569, %rd658;
	add.s64 	%rd1107, %rd1106, %rd1100;
	add.s64 	%rd1108, %rd1107, %rd1105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9625,%dummy}, %rd711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9626}, %rd711;
	}
	shf.r.wrap.b32 	%r9627, %r9626, %r9625, 19;
	shf.r.wrap.b32 	%r9628, %r9625, %r9626, 19;
	mov.b64 	%rd1109, {%r9628, %r9627};
	shf.l.wrap.b32 	%r9629, %r9625, %r9626, 3;
	shf.l.wrap.b32 	%r9630, %r9626, %r9625, 3;
	mov.b64 	%rd1110, {%r9630, %r9629};
	shr.u64 	%rd1111, %rd711, 6;
	xor.b64  	%rd1112, %rd1109, %rd1111;
	xor.b64  	%rd1113, %rd1112, %rd1110;
	shf.r.wrap.b32 	%r9631, %r9268, %r9267, 1;
	shf.r.wrap.b32 	%r9632, %r9267, %r9268, 1;
	mov.b64 	%rd1114, {%r9632, %r9631};
	shf.r.wrap.b32 	%r9633, %r9268, %r9267, 8;
	shf.r.wrap.b32 	%r9634, %r9267, %r9268, 8;
	mov.b64 	%rd1115, {%r9634, %r9633};
	shr.u64 	%rd1116, %rd593, 7;
	xor.b64  	%rd1117, %rd1114, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1115;
	add.s64 	%rd1119, %rd581, %rd665;
	add.s64 	%rd1120, %rd1119, %rd1113;
	add.s64 	%rd1121, %rd1120, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9635,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9636}, %rd1108;
	}
	shf.r.wrap.b32 	%r9637, %r9636, %r9635, 19;
	shf.r.wrap.b32 	%r9638, %r9635, %r9636, 19;
	mov.b64 	%rd1122, {%r9638, %r9637};
	shf.l.wrap.b32 	%r9639, %r9635, %r9636, 3;
	shf.l.wrap.b32 	%r9640, %r9636, %r9635, 3;
	mov.b64 	%rd1123, {%r9640, %r9639};
	shr.u64 	%rd1124, %rd1108, 6;
	xor.b64  	%rd1125, %rd1122, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1123;
	shf.r.wrap.b32 	%r9641, %r9280, %r9279, 1;
	shf.r.wrap.b32 	%r9642, %r9279, %r9280, 1;
	mov.b64 	%rd1127, {%r9642, %r9641};
	shf.r.wrap.b32 	%r9643, %r9280, %r9279, 8;
	shf.r.wrap.b32 	%r9644, %r9279, %r9280, 8;
	mov.b64 	%rd1128, {%r9644, %r9643};
	shr.u64 	%rd1129, %rd605, 7;
	xor.b64  	%rd1130, %rd1127, %rd1129;
	xor.b64  	%rd1131, %rd1130, %rd1128;
	add.s64 	%rd1132, %rd593, %rd672;
	add.s64 	%rd1133, %rd1132, %rd1126;
	add.s64 	%rd1134, %rd1133, %rd1131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9645,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9646}, %rd1121;
	}
	shf.r.wrap.b32 	%r9647, %r9646, %r9645, 19;
	shf.r.wrap.b32 	%r9648, %r9645, %r9646, 19;
	mov.b64 	%rd1135, {%r9648, %r9647};
	shf.l.wrap.b32 	%r9649, %r9645, %r9646, 3;
	shf.l.wrap.b32 	%r9650, %r9646, %r9645, 3;
	mov.b64 	%rd1136, {%r9650, %r9649};
	shr.u64 	%rd1137, %rd1121, 6;
	xor.b64  	%rd1138, %rd1135, %rd1137;
	xor.b64  	%rd1139, %rd1138, %rd1136;
	shf.r.wrap.b32 	%r9651, %r9292, %r9291, 1;
	shf.r.wrap.b32 	%r9652, %r9291, %r9292, 1;
	mov.b64 	%rd1140, {%r9652, %r9651};
	shf.r.wrap.b32 	%r9653, %r9292, %r9291, 8;
	shf.r.wrap.b32 	%r9654, %r9291, %r9292, 8;
	mov.b64 	%rd1141, {%r9654, %r9653};
	shr.u64 	%rd1142, %rd617, 7;
	xor.b64  	%rd1143, %rd1140, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1141;
	add.s64 	%rd1145, %rd605, %rd679;
	add.s64 	%rd1146, %rd1145, %rd1139;
	add.s64 	%rd1147, %rd1146, %rd1144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9655,%dummy}, %rd1134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9656}, %rd1134;
	}
	shf.r.wrap.b32 	%r9657, %r9656, %r9655, 19;
	shf.r.wrap.b32 	%r9658, %r9655, %r9656, 19;
	mov.b64 	%rd1148, {%r9658, %r9657};
	shf.l.wrap.b32 	%r9659, %r9655, %r9656, 3;
	shf.l.wrap.b32 	%r9660, %r9656, %r9655, 3;
	mov.b64 	%rd1149, {%r9660, %r9659};
	shr.u64 	%rd1150, %rd1134, 6;
	xor.b64  	%rd1151, %rd1148, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1149;
	shf.r.wrap.b32 	%r9661, %r9298, %r9297, 1;
	shf.r.wrap.b32 	%r9662, %r9297, %r9298, 1;
	mov.b64 	%rd1153, {%r9662, %r9661};
	shf.r.wrap.b32 	%r9663, %r9298, %r9297, 8;
	shf.r.wrap.b32 	%r9664, %r9297, %r9298, 8;
	mov.b64 	%rd1154, {%r9664, %r9663};
	shr.u64 	%rd1155, %rd629, 7;
	xor.b64  	%rd1156, %rd1153, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd1154;
	add.s64 	%rd1158, %rd617, %rd686;
	add.s64 	%rd1159, %rd1158, %rd1152;
	add.s64 	%rd1160, %rd1159, %rd1157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9665,%dummy}, %rd1147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9666}, %rd1147;
	}
	shf.r.wrap.b32 	%r9667, %r9666, %r9665, 19;
	shf.r.wrap.b32 	%r9668, %r9665, %r9666, 19;
	mov.b64 	%rd1161, {%r9668, %r9667};
	shf.l.wrap.b32 	%r9669, %r9665, %r9666, 3;
	shf.l.wrap.b32 	%r9670, %r9666, %r9665, 3;
	mov.b64 	%rd1162, {%r9670, %r9669};
	shr.u64 	%rd1163, %rd1147, 6;
	xor.b64  	%rd1164, %rd1161, %rd1163;
	xor.b64  	%rd1165, %rd1164, %rd1162;
	shf.r.wrap.b32 	%r9671, %r9304, %r9303, 1;
	shf.r.wrap.b32 	%r9672, %r9303, %r9304, 1;
	mov.b64 	%rd1166, {%r9672, %r9671};
	shf.r.wrap.b32 	%r9673, %r9304, %r9303, 8;
	shf.r.wrap.b32 	%r9674, %r9303, %r9304, 8;
	mov.b64 	%rd1167, {%r9674, %r9673};
	shr.u64 	%rd1168, %rd637, 7;
	xor.b64  	%rd1169, %rd1166, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1167;
	add.s64 	%rd1171, %rd629, %rd698;
	add.s64 	%rd1172, %rd1171, %rd1165;
	add.s64 	%rd1173, %rd1172, %rd1170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9675,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9676}, %rd1160;
	}
	shf.r.wrap.b32 	%r9677, %r9676, %r9675, 19;
	shf.r.wrap.b32 	%r9678, %r9675, %r9676, 19;
	mov.b64 	%rd1174, {%r9678, %r9677};
	shf.l.wrap.b32 	%r9679, %r9675, %r9676, 3;
	shf.l.wrap.b32 	%r9680, %r9676, %r9675, 3;
	mov.b64 	%rd1175, {%r9680, %r9679};
	shr.u64 	%rd1176, %rd1160, 6;
	xor.b64  	%rd1177, %rd1174, %rd1176;
	xor.b64  	%rd1178, %rd1177, %rd1175;
	shf.r.wrap.b32 	%r9681, %r9310, %r9309, 1;
	shf.r.wrap.b32 	%r9682, %r9309, %r9310, 1;
	mov.b64 	%rd1179, {%r9682, %r9681};
	shf.r.wrap.b32 	%r9683, %r9310, %r9309, 8;
	shf.r.wrap.b32 	%r9684, %r9309, %r9310, 8;
	mov.b64 	%rd1180, {%r9684, %r9683};
	shr.u64 	%rd1181, %rd644, 7;
	xor.b64  	%rd1182, %rd1179, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1180;
	add.s64 	%rd1184, %rd637, %rd711;
	add.s64 	%rd1185, %rd1184, %rd1178;
	add.s64 	%rd1186, %rd1185, %rd1183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9685,%dummy}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9686}, %rd1173;
	}
	shf.r.wrap.b32 	%r9687, %r9686, %r9685, 19;
	shf.r.wrap.b32 	%r9688, %r9685, %r9686, 19;
	mov.b64 	%rd1187, {%r9688, %r9687};
	shf.l.wrap.b32 	%r9689, %r9685, %r9686, 3;
	shf.l.wrap.b32 	%r9690, %r9686, %r9685, 3;
	mov.b64 	%rd1188, {%r9690, %r9689};
	shr.u64 	%rd1189, %rd1173, 6;
	xor.b64  	%rd1190, %rd1187, %rd1189;
	xor.b64  	%rd1191, %rd1190, %rd1188;
	shf.r.wrap.b32 	%r9691, %r9316, %r9315, 1;
	shf.r.wrap.b32 	%r9692, %r9315, %r9316, 1;
	mov.b64 	%rd1192, {%r9692, %r9691};
	shf.r.wrap.b32 	%r9693, %r9316, %r9315, 8;
	shf.r.wrap.b32 	%r9694, %r9315, %r9316, 8;
	mov.b64 	%rd1193, {%r9694, %r9693};
	shr.u64 	%rd1194, %rd651, 7;
	xor.b64  	%rd1195, %rd1192, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1193;
	add.s64 	%rd1197, %rd1108, %rd644;
	add.s64 	%rd1198, %rd1197, %rd1191;
	add.s64 	%rd1199, %rd1198, %rd1196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9695,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9696}, %rd1186;
	}
	shf.r.wrap.b32 	%r9697, %r9696, %r9695, 19;
	shf.r.wrap.b32 	%r9698, %r9695, %r9696, 19;
	mov.b64 	%rd1200, {%r9698, %r9697};
	shf.l.wrap.b32 	%r9699, %r9695, %r9696, 3;
	shf.l.wrap.b32 	%r9700, %r9696, %r9695, 3;
	mov.b64 	%rd1201, {%r9700, %r9699};
	shr.u64 	%rd1202, %rd1186, 6;
	xor.b64  	%rd1203, %rd1200, %rd1202;
	xor.b64  	%rd1204, %rd1203, %rd1201;
	shf.r.wrap.b32 	%r9701, %r9322, %r9321, 1;
	shf.r.wrap.b32 	%r9702, %r9321, %r9322, 1;
	mov.b64 	%rd1205, {%r9702, %r9701};
	shf.r.wrap.b32 	%r9703, %r9322, %r9321, 8;
	shf.r.wrap.b32 	%r9704, %r9321, %r9322, 8;
	mov.b64 	%rd1206, {%r9704, %r9703};
	shr.u64 	%rd1207, %rd658, 7;
	xor.b64  	%rd1208, %rd1205, %rd1207;
	xor.b64  	%rd1209, %rd1208, %rd1206;
	add.s64 	%rd1210, %rd1121, %rd651;
	add.s64 	%rd1211, %rd1210, %rd1204;
	add.s64 	%rd1212, %rd1211, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9705,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9706}, %rd1199;
	}
	shf.r.wrap.b32 	%r9707, %r9706, %r9705, 19;
	shf.r.wrap.b32 	%r9708, %r9705, %r9706, 19;
	mov.b64 	%rd1213, {%r9708, %r9707};
	shf.l.wrap.b32 	%r9709, %r9705, %r9706, 3;
	shf.l.wrap.b32 	%r9710, %r9706, %r9705, 3;
	mov.b64 	%rd1214, {%r9710, %r9709};
	shr.u64 	%rd1215, %rd1199, 6;
	xor.b64  	%rd1216, %rd1213, %rd1215;
	xor.b64  	%rd1217, %rd1216, %rd1214;
	shf.r.wrap.b32 	%r9711, %r9328, %r9327, 1;
	shf.r.wrap.b32 	%r9712, %r9327, %r9328, 1;
	mov.b64 	%rd1218, {%r9712, %r9711};
	shf.r.wrap.b32 	%r9713, %r9328, %r9327, 8;
	shf.r.wrap.b32 	%r9714, %r9327, %r9328, 8;
	mov.b64 	%rd1219, {%r9714, %r9713};
	shr.u64 	%rd1220, %rd665, 7;
	xor.b64  	%rd1221, %rd1218, %rd1220;
	xor.b64  	%rd1222, %rd1221, %rd1219;
	add.s64 	%rd1223, %rd1134, %rd658;
	add.s64 	%rd1224, %rd1223, %rd1217;
	add.s64 	%rd1225, %rd1224, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9715,%dummy}, %rd1212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9716}, %rd1212;
	}
	shf.r.wrap.b32 	%r9717, %r9716, %r9715, 19;
	shf.r.wrap.b32 	%r9718, %r9715, %r9716, 19;
	mov.b64 	%rd1226, {%r9718, %r9717};
	shf.l.wrap.b32 	%r9719, %r9715, %r9716, 3;
	shf.l.wrap.b32 	%r9720, %r9716, %r9715, 3;
	mov.b64 	%rd1227, {%r9720, %r9719};
	shr.u64 	%rd1228, %rd1212, 6;
	xor.b64  	%rd1229, %rd1226, %rd1228;
	xor.b64  	%rd1230, %rd1229, %rd1227;
	shf.r.wrap.b32 	%r9721, %r9334, %r9333, 1;
	shf.r.wrap.b32 	%r9722, %r9333, %r9334, 1;
	mov.b64 	%rd1231, {%r9722, %r9721};
	shf.r.wrap.b32 	%r9723, %r9334, %r9333, 8;
	shf.r.wrap.b32 	%r9724, %r9333, %r9334, 8;
	mov.b64 	%rd1232, {%r9724, %r9723};
	shr.u64 	%rd1233, %rd672, 7;
	xor.b64  	%rd1234, %rd1231, %rd1233;
	xor.b64  	%rd1235, %rd1234, %rd1232;
	add.s64 	%rd1236, %rd1147, %rd665;
	add.s64 	%rd1237, %rd1236, %rd1230;
	add.s64 	%rd1238, %rd1237, %rd1235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9725,%dummy}, %rd1225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9726}, %rd1225;
	}
	shf.r.wrap.b32 	%r9727, %r9726, %r9725, 19;
	shf.r.wrap.b32 	%r9728, %r9725, %r9726, 19;
	mov.b64 	%rd1239, {%r9728, %r9727};
	shf.l.wrap.b32 	%r9729, %r9725, %r9726, 3;
	shf.l.wrap.b32 	%r9730, %r9726, %r9725, 3;
	mov.b64 	%rd1240, {%r9730, %r9729};
	shr.u64 	%rd1241, %rd1225, 6;
	xor.b64  	%rd1242, %rd1239, %rd1241;
	xor.b64  	%rd1243, %rd1242, %rd1240;
	shf.r.wrap.b32 	%r9731, %r9340, %r9339, 1;
	shf.r.wrap.b32 	%r9732, %r9339, %r9340, 1;
	mov.b64 	%rd1244, {%r9732, %r9731};
	shf.r.wrap.b32 	%r9733, %r9340, %r9339, 8;
	shf.r.wrap.b32 	%r9734, %r9339, %r9340, 8;
	mov.b64 	%rd1245, {%r9734, %r9733};
	shr.u64 	%rd1246, %rd679, 7;
	xor.b64  	%rd1247, %rd1244, %rd1246;
	xor.b64  	%rd1248, %rd1247, %rd1245;
	add.s64 	%rd1249, %rd1160, %rd672;
	add.s64 	%rd1250, %rd1249, %rd1243;
	add.s64 	%rd1251, %rd1250, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9735,%dummy}, %rd1238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9736}, %rd1238;
	}
	shf.r.wrap.b32 	%r9737, %r9736, %r9735, 19;
	shf.r.wrap.b32 	%r9738, %r9735, %r9736, 19;
	mov.b64 	%rd1252, {%r9738, %r9737};
	shf.l.wrap.b32 	%r9739, %r9735, %r9736, 3;
	shf.l.wrap.b32 	%r9740, %r9736, %r9735, 3;
	mov.b64 	%rd1253, {%r9740, %r9739};
	shr.u64 	%rd1254, %rd1238, 6;
	xor.b64  	%rd1255, %rd1252, %rd1254;
	xor.b64  	%rd1256, %rd1255, %rd1253;
	shf.r.wrap.b32 	%r9741, %r9350, %r9349, 1;
	shf.r.wrap.b32 	%r9742, %r9349, %r9350, 1;
	mov.b64 	%rd1257, {%r9742, %r9741};
	shf.r.wrap.b32 	%r9743, %r9350, %r9349, 8;
	shf.r.wrap.b32 	%r9744, %r9349, %r9350, 8;
	mov.b64 	%rd1258, {%r9744, %r9743};
	shr.u64 	%rd1259, %rd686, 7;
	xor.b64  	%rd1260, %rd1257, %rd1259;
	xor.b64  	%rd1261, %rd1260, %rd1258;
	add.s64 	%rd1262, %rd1173, %rd679;
	add.s64 	%rd1263, %rd1262, %rd1256;
	add.s64 	%rd1264, %rd1263, %rd1261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9745,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9746}, %rd1251;
	}
	shf.r.wrap.b32 	%r9747, %r9746, %r9745, 19;
	shf.r.wrap.b32 	%r9748, %r9745, %r9746, 19;
	mov.b64 	%rd1265, {%r9748, %r9747};
	shf.l.wrap.b32 	%r9749, %r9745, %r9746, 3;
	shf.l.wrap.b32 	%r9750, %r9746, %r9745, 3;
	mov.b64 	%rd1266, {%r9750, %r9749};
	shr.u64 	%rd1267, %rd1251, 6;
	xor.b64  	%rd1268, %rd1265, %rd1267;
	xor.b64  	%rd1269, %rd1268, %rd1266;
	shf.r.wrap.b32 	%r9751, %r9616, %r9615, 1;
	shf.r.wrap.b32 	%r9752, %r9615, %r9616, 1;
	mov.b64 	%rd1270, {%r9752, %r9751};
	shf.r.wrap.b32 	%r9753, %r9616, %r9615, 8;
	shf.r.wrap.b32 	%r9754, %r9615, %r9616, 8;
	mov.b64 	%rd1271, {%r9754, %r9753};
	shr.u64 	%rd1272, %rd698, 7;
	xor.b64  	%rd1273, %rd1270, %rd1272;
	xor.b64  	%rd1274, %rd1273, %rd1271;
	add.s64 	%rd1275, %rd1186, %rd686;
	add.s64 	%rd1276, %rd1275, %rd1269;
	add.s64 	%rd1277, %rd1276, %rd1274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9755,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9756}, %rd1264;
	}
	shf.r.wrap.b32 	%r9757, %r9756, %r9755, 19;
	shf.r.wrap.b32 	%r9758, %r9755, %r9756, 19;
	mov.b64 	%rd1278, {%r9758, %r9757};
	shf.l.wrap.b32 	%r9759, %r9755, %r9756, 3;
	shf.l.wrap.b32 	%r9760, %r9756, %r9755, 3;
	mov.b64 	%rd1279, {%r9760, %r9759};
	shr.u64 	%rd1280, %rd1264, 6;
	xor.b64  	%rd1281, %rd1278, %rd1280;
	xor.b64  	%rd1282, %rd1281, %rd1279;
	shf.r.wrap.b32 	%r9761, %r9626, %r9625, 1;
	shf.r.wrap.b32 	%r9762, %r9625, %r9626, 1;
	mov.b64 	%rd1283, {%r9762, %r9761};
	shf.r.wrap.b32 	%r9763, %r9626, %r9625, 8;
	shf.r.wrap.b32 	%r9764, %r9625, %r9626, 8;
	mov.b64 	%rd1284, {%r9764, %r9763};
	shr.u64 	%rd1285, %rd711, 7;
	xor.b64  	%rd1286, %rd1283, %rd1285;
	xor.b64  	%rd1287, %rd1286, %rd1284;
	add.s64 	%rd1288, %rd1199, %rd698;
	add.s64 	%rd1289, %rd1288, %rd1282;
	add.s64 	%rd1290, %rd1289, %rd1287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9765,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9766}, %rd1277;
	}
	shf.r.wrap.b32 	%r9767, %r9766, %r9765, 19;
	shf.r.wrap.b32 	%r9768, %r9765, %r9766, 19;
	mov.b64 	%rd1291, {%r9768, %r9767};
	shf.l.wrap.b32 	%r9769, %r9765, %r9766, 3;
	shf.l.wrap.b32 	%r9770, %r9766, %r9765, 3;
	mov.b64 	%rd1292, {%r9770, %r9769};
	shr.u64 	%rd1293, %rd1277, 6;
	xor.b64  	%rd1294, %rd1291, %rd1293;
	xor.b64  	%rd1295, %rd1294, %rd1292;
	shf.r.wrap.b32 	%r9771, %r9636, %r9635, 1;
	shf.r.wrap.b32 	%r9772, %r9635, %r9636, 1;
	mov.b64 	%rd1296, {%r9772, %r9771};
	shf.r.wrap.b32 	%r9773, %r9636, %r9635, 8;
	shf.r.wrap.b32 	%r9774, %r9635, %r9636, 8;
	mov.b64 	%rd1297, {%r9774, %r9773};
	shr.u64 	%rd1298, %rd1108, 7;
	xor.b64  	%rd1299, %rd1296, %rd1298;
	xor.b64  	%rd1300, %rd1299, %rd1297;
	add.s64 	%rd1301, %rd1212, %rd711;
	add.s64 	%rd1302, %rd1301, %rd1295;
	add.s64 	%rd1303, %rd1302, %rd1300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9775,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9776}, %rd1084;
	}
	shf.r.wrap.b32 	%r9777, %r9776, %r9775, 14;
	shf.r.wrap.b32 	%r9778, %r9775, %r9776, 14;
	mov.b64 	%rd1304, {%r9778, %r9777};
	shf.r.wrap.b32 	%r9779, %r9776, %r9775, 18;
	shf.r.wrap.b32 	%r9780, %r9775, %r9776, 18;
	mov.b64 	%rd1305, {%r9780, %r9779};
	xor.b64  	%rd1306, %rd1305, %rd1304;
	shf.l.wrap.b32 	%r9781, %r9775, %r9776, 23;
	shf.l.wrap.b32 	%r9782, %r9776, %r9775, 23;
	mov.b64 	%rd1307, {%r9782, %r9781};
	xor.b64  	%rd1308, %rd1306, %rd1307;
	xor.b64  	%rd1309, %rd1036, %rd1060;
	and.b64  	%rd1310, %rd1309, %rd1084;
	xor.b64  	%rd1311, %rd1310, %rd1036;
	add.s64 	%rd1312, %rd1311, %rd1012;
	add.s64 	%rd1313, %rd1312, %rd1108;
	add.s64 	%rd1314, %rd1313, %rd2820;
	add.s64 	%rd1315, %rd1314, %rd1308;
	add.s64 	%rd1316, %rd1315, %rd1023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9783,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9784}, %rd1095;
	}
	shf.r.wrap.b32 	%r9785, %r9784, %r9783, 28;
	shf.r.wrap.b32 	%r9786, %r9783, %r9784, 28;
	mov.b64 	%rd1317, {%r9786, %r9785};
	shf.l.wrap.b32 	%r9787, %r9783, %r9784, 30;
	shf.l.wrap.b32 	%r9788, %r9784, %r9783, 30;
	mov.b64 	%rd1318, {%r9788, %r9787};
	xor.b64  	%rd1319, %rd1318, %rd1317;
	shf.l.wrap.b32 	%r9789, %r9783, %r9784, 25;
	shf.l.wrap.b32 	%r9790, %r9784, %r9783, 25;
	mov.b64 	%rd1320, {%r9790, %r9789};
	xor.b64  	%rd1321, %rd1319, %rd1320;
	xor.b64  	%rd1322, %rd1095, %rd1047;
	xor.b64  	%rd1323, %rd1095, %rd1071;
	and.b64  	%rd1324, %rd1323, %rd1322;
	xor.b64  	%rd1325, %rd1324, %rd1095;
	add.s64 	%rd1326, %rd1315, %rd1325;
	add.s64 	%rd1327, %rd1326, %rd1321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9791,%dummy}, %rd1316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9792}, %rd1316;
	}
	shf.r.wrap.b32 	%r9793, %r9792, %r9791, 14;
	shf.r.wrap.b32 	%r9794, %r9791, %r9792, 14;
	mov.b64 	%rd1328, {%r9794, %r9793};
	shf.r.wrap.b32 	%r9795, %r9792, %r9791, 18;
	shf.r.wrap.b32 	%r9796, %r9791, %r9792, 18;
	mov.b64 	%rd1329, {%r9796, %r9795};
	xor.b64  	%rd1330, %rd1329, %rd1328;
	shf.l.wrap.b32 	%r9797, %r9791, %r9792, 23;
	shf.l.wrap.b32 	%r9798, %r9792, %r9791, 23;
	mov.b64 	%rd1331, {%r9798, %r9797};
	xor.b64  	%rd1332, %rd1330, %rd1331;
	xor.b64  	%rd1333, %rd1060, %rd1084;
	and.b64  	%rd1334, %rd1316, %rd1333;
	xor.b64  	%rd1335, %rd1334, %rd1060;
	add.s64 	%rd1336, %rd1121, %rd1036;
	add.s64 	%rd1337, %rd1336, %rd2821;
	add.s64 	%rd1338, %rd1337, %rd1335;
	add.s64 	%rd1339, %rd1338, %rd1332;
	add.s64 	%rd1340, %rd1339, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9799,%dummy}, %rd1327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9800}, %rd1327;
	}
	shf.r.wrap.b32 	%r9801, %r9800, %r9799, 28;
	shf.r.wrap.b32 	%r9802, %r9799, %r9800, 28;
	mov.b64 	%rd1341, {%r9802, %r9801};
	shf.l.wrap.b32 	%r9803, %r9799, %r9800, 30;
	shf.l.wrap.b32 	%r9804, %r9800, %r9799, 30;
	mov.b64 	%rd1342, {%r9804, %r9803};
	xor.b64  	%rd1343, %rd1342, %rd1341;
	shf.l.wrap.b32 	%r9805, %r9799, %r9800, 25;
	shf.l.wrap.b32 	%r9806, %r9800, %r9799, 25;
	mov.b64 	%rd1344, {%r9806, %r9805};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	xor.b64  	%rd1346, %rd1327, %rd1071;
	xor.b64  	%rd1347, %rd1327, %rd1095;
	and.b64  	%rd1348, %rd1347, %rd1346;
	xor.b64  	%rd1349, %rd1348, %rd1327;
	add.s64 	%rd1350, %rd1339, %rd1349;
	add.s64 	%rd1351, %rd1350, %rd1345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9807,%dummy}, %rd1340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9808}, %rd1340;
	}
	shf.r.wrap.b32 	%r9809, %r9808, %r9807, 14;
	shf.r.wrap.b32 	%r9810, %r9807, %r9808, 14;
	mov.b64 	%rd1352, {%r9810, %r9809};
	shf.r.wrap.b32 	%r9811, %r9808, %r9807, 18;
	shf.r.wrap.b32 	%r9812, %r9807, %r9808, 18;
	mov.b64 	%rd1353, {%r9812, %r9811};
	xor.b64  	%rd1354, %rd1353, %rd1352;
	shf.l.wrap.b32 	%r9813, %r9807, %r9808, 23;
	shf.l.wrap.b32 	%r9814, %r9808, %r9807, 23;
	mov.b64 	%rd1355, {%r9814, %r9813};
	xor.b64  	%rd1356, %rd1354, %rd1355;
	xor.b64  	%rd1357, %rd1316, %rd1084;
	and.b64  	%rd1358, %rd1340, %rd1357;
	xor.b64  	%rd1359, %rd1358, %rd1084;
	add.s64 	%rd1360, %rd1134, %rd1060;
	add.s64 	%rd1361, %rd1360, %rd2822;
	add.s64 	%rd1362, %rd1361, %rd1359;
	add.s64 	%rd1363, %rd1362, %rd1356;
	add.s64 	%rd1364, %rd1363, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9815,%dummy}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9816}, %rd1351;
	}
	shf.r.wrap.b32 	%r9817, %r9816, %r9815, 28;
	shf.r.wrap.b32 	%r9818, %r9815, %r9816, 28;
	mov.b64 	%rd1365, {%r9818, %r9817};
	shf.l.wrap.b32 	%r9819, %r9815, %r9816, 30;
	shf.l.wrap.b32 	%r9820, %r9816, %r9815, 30;
	mov.b64 	%rd1366, {%r9820, %r9819};
	xor.b64  	%rd1367, %rd1366, %rd1365;
	shf.l.wrap.b32 	%r9821, %r9815, %r9816, 25;
	shf.l.wrap.b32 	%r9822, %r9816, %r9815, 25;
	mov.b64 	%rd1368, {%r9822, %r9821};
	xor.b64  	%rd1369, %rd1367, %rd1368;
	xor.b64  	%rd1370, %rd1351, %rd1095;
	xor.b64  	%rd1371, %rd1351, %rd1327;
	and.b64  	%rd1372, %rd1371, %rd1370;
	xor.b64  	%rd1373, %rd1372, %rd1351;
	add.s64 	%rd1374, %rd1363, %rd1373;
	add.s64 	%rd1375, %rd1374, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9823,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9824}, %rd1364;
	}
	shf.r.wrap.b32 	%r9825, %r9824, %r9823, 14;
	shf.r.wrap.b32 	%r9826, %r9823, %r9824, 14;
	mov.b64 	%rd1376, {%r9826, %r9825};
	shf.r.wrap.b32 	%r9827, %r9824, %r9823, 18;
	shf.r.wrap.b32 	%r9828, %r9823, %r9824, 18;
	mov.b64 	%rd1377, {%r9828, %r9827};
	xor.b64  	%rd1378, %rd1377, %rd1376;
	shf.l.wrap.b32 	%r9829, %r9823, %r9824, 23;
	shf.l.wrap.b32 	%r9830, %r9824, %r9823, 23;
	mov.b64 	%rd1379, {%r9830, %r9829};
	xor.b64  	%rd1380, %rd1378, %rd1379;
	xor.b64  	%rd1381, %rd1340, %rd1316;
	and.b64  	%rd1382, %rd1364, %rd1381;
	xor.b64  	%rd1383, %rd1382, %rd1316;
	add.s64 	%rd1384, %rd1147, %rd1084;
	add.s64 	%rd1385, %rd1384, %rd2823;
	add.s64 	%rd1386, %rd1385, %rd1383;
	add.s64 	%rd1387, %rd1386, %rd1380;
	add.s64 	%rd1388, %rd1387, %rd1095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9831,%dummy}, %rd1375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9832}, %rd1375;
	}
	shf.r.wrap.b32 	%r9833, %r9832, %r9831, 28;
	shf.r.wrap.b32 	%r9834, %r9831, %r9832, 28;
	mov.b64 	%rd1389, {%r9834, %r9833};
	shf.l.wrap.b32 	%r9835, %r9831, %r9832, 30;
	shf.l.wrap.b32 	%r9836, %r9832, %r9831, 30;
	mov.b64 	%rd1390, {%r9836, %r9835};
	xor.b64  	%rd1391, %rd1390, %rd1389;
	shf.l.wrap.b32 	%r9837, %r9831, %r9832, 25;
	shf.l.wrap.b32 	%r9838, %r9832, %r9831, 25;
	mov.b64 	%rd1392, {%r9838, %r9837};
	xor.b64  	%rd1393, %rd1391, %rd1392;
	xor.b64  	%rd1394, %rd1375, %rd1327;
	xor.b64  	%rd1395, %rd1375, %rd1351;
	and.b64  	%rd1396, %rd1395, %rd1394;
	xor.b64  	%rd1397, %rd1396, %rd1375;
	add.s64 	%rd1398, %rd1387, %rd1397;
	add.s64 	%rd1399, %rd1398, %rd1393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9839,%dummy}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9840}, %rd1388;
	}
	shf.r.wrap.b32 	%r9841, %r9840, %r9839, 14;
	shf.r.wrap.b32 	%r9842, %r9839, %r9840, 14;
	mov.b64 	%rd1400, {%r9842, %r9841};
	shf.r.wrap.b32 	%r9843, %r9840, %r9839, 18;
	shf.r.wrap.b32 	%r9844, %r9839, %r9840, 18;
	mov.b64 	%rd1401, {%r9844, %r9843};
	xor.b64  	%rd1402, %rd1401, %rd1400;
	shf.l.wrap.b32 	%r9845, %r9839, %r9840, 23;
	shf.l.wrap.b32 	%r9846, %r9840, %r9839, 23;
	mov.b64 	%rd1403, {%r9846, %r9845};
	xor.b64  	%rd1404, %rd1402, %rd1403;
	xor.b64  	%rd1405, %rd1364, %rd1340;
	and.b64  	%rd1406, %rd1388, %rd1405;
	xor.b64  	%rd1407, %rd1406, %rd1340;
	add.s64 	%rd1408, %rd1316, %rd1160;
	add.s64 	%rd1409, %rd1408, %rd2824;
	add.s64 	%rd1410, %rd1409, %rd1407;
	add.s64 	%rd1411, %rd1410, %rd1404;
	add.s64 	%rd1412, %rd1411, %rd1327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9847,%dummy}, %rd1399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9848}, %rd1399;
	}
	shf.r.wrap.b32 	%r9849, %r9848, %r9847, 28;
	shf.r.wrap.b32 	%r9850, %r9847, %r9848, 28;
	mov.b64 	%rd1413, {%r9850, %r9849};
	shf.l.wrap.b32 	%r9851, %r9847, %r9848, 30;
	shf.l.wrap.b32 	%r9852, %r9848, %r9847, 30;
	mov.b64 	%rd1414, {%r9852, %r9851};
	xor.b64  	%rd1415, %rd1414, %rd1413;
	shf.l.wrap.b32 	%r9853, %r9847, %r9848, 25;
	shf.l.wrap.b32 	%r9854, %r9848, %r9847, 25;
	mov.b64 	%rd1416, {%r9854, %r9853};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	xor.b64  	%rd1418, %rd1399, %rd1351;
	xor.b64  	%rd1419, %rd1399, %rd1375;
	and.b64  	%rd1420, %rd1419, %rd1418;
	xor.b64  	%rd1421, %rd1420, %rd1399;
	add.s64 	%rd1422, %rd1411, %rd1421;
	add.s64 	%rd1423, %rd1422, %rd1417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9855,%dummy}, %rd1412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9856}, %rd1412;
	}
	shf.r.wrap.b32 	%r9857, %r9856, %r9855, 14;
	shf.r.wrap.b32 	%r9858, %r9855, %r9856, 14;
	mov.b64 	%rd1424, {%r9858, %r9857};
	shf.r.wrap.b32 	%r9859, %r9856, %r9855, 18;
	shf.r.wrap.b32 	%r9860, %r9855, %r9856, 18;
	mov.b64 	%rd1425, {%r9860, %r9859};
	xor.b64  	%rd1426, %rd1425, %rd1424;
	shf.l.wrap.b32 	%r9861, %r9855, %r9856, 23;
	shf.l.wrap.b32 	%r9862, %r9856, %r9855, 23;
	mov.b64 	%rd1427, {%r9862, %r9861};
	xor.b64  	%rd1428, %rd1426, %rd1427;
	xor.b64  	%rd1429, %rd1388, %rd1364;
	and.b64  	%rd1430, %rd1412, %rd1429;
	xor.b64  	%rd1431, %rd1430, %rd1364;
	add.s64 	%rd1432, %rd1340, %rd1173;
	add.s64 	%rd1433, %rd1432, %rd2825;
	add.s64 	%rd1434, %rd1433, %rd1431;
	add.s64 	%rd1435, %rd1434, %rd1428;
	add.s64 	%rd1436, %rd1435, %rd1351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9863,%dummy}, %rd1423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9864}, %rd1423;
	}
	shf.r.wrap.b32 	%r9865, %r9864, %r9863, 28;
	shf.r.wrap.b32 	%r9866, %r9863, %r9864, 28;
	mov.b64 	%rd1437, {%r9866, %r9865};
	shf.l.wrap.b32 	%r9867, %r9863, %r9864, 30;
	shf.l.wrap.b32 	%r9868, %r9864, %r9863, 30;
	mov.b64 	%rd1438, {%r9868, %r9867};
	xor.b64  	%rd1439, %rd1438, %rd1437;
	shf.l.wrap.b32 	%r9869, %r9863, %r9864, 25;
	shf.l.wrap.b32 	%r9870, %r9864, %r9863, 25;
	mov.b64 	%rd1440, {%r9870, %r9869};
	xor.b64  	%rd1441, %rd1439, %rd1440;
	xor.b64  	%rd1442, %rd1423, %rd1375;
	xor.b64  	%rd1443, %rd1423, %rd1399;
	and.b64  	%rd1444, %rd1443, %rd1442;
	xor.b64  	%rd1445, %rd1444, %rd1423;
	add.s64 	%rd1446, %rd1435, %rd1445;
	add.s64 	%rd1447, %rd1446, %rd1441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9871,%dummy}, %rd1436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9872}, %rd1436;
	}
	shf.r.wrap.b32 	%r9873, %r9872, %r9871, 14;
	shf.r.wrap.b32 	%r9874, %r9871, %r9872, 14;
	mov.b64 	%rd1448, {%r9874, %r9873};
	shf.r.wrap.b32 	%r9875, %r9872, %r9871, 18;
	shf.r.wrap.b32 	%r9876, %r9871, %r9872, 18;
	mov.b64 	%rd1449, {%r9876, %r9875};
	xor.b64  	%rd1450, %rd1449, %rd1448;
	shf.l.wrap.b32 	%r9877, %r9871, %r9872, 23;
	shf.l.wrap.b32 	%r9878, %r9872, %r9871, 23;
	mov.b64 	%rd1451, {%r9878, %r9877};
	xor.b64  	%rd1452, %rd1450, %rd1451;
	xor.b64  	%rd1453, %rd1412, %rd1388;
	and.b64  	%rd1454, %rd1436, %rd1453;
	xor.b64  	%rd1455, %rd1454, %rd1388;
	add.s64 	%rd1456, %rd1364, %rd1186;
	add.s64 	%rd1457, %rd1456, %rd2826;
	add.s64 	%rd1458, %rd1457, %rd1455;
	add.s64 	%rd1459, %rd1458, %rd1452;
	add.s64 	%rd1460, %rd1459, %rd1375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9879,%dummy}, %rd1447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9880}, %rd1447;
	}
	shf.r.wrap.b32 	%r9881, %r9880, %r9879, 28;
	shf.r.wrap.b32 	%r9882, %r9879, %r9880, 28;
	mov.b64 	%rd1461, {%r9882, %r9881};
	shf.l.wrap.b32 	%r9883, %r9879, %r9880, 30;
	shf.l.wrap.b32 	%r9884, %r9880, %r9879, 30;
	mov.b64 	%rd1462, {%r9884, %r9883};
	xor.b64  	%rd1463, %rd1462, %rd1461;
	shf.l.wrap.b32 	%r9885, %r9879, %r9880, 25;
	shf.l.wrap.b32 	%r9886, %r9880, %r9879, 25;
	mov.b64 	%rd1464, {%r9886, %r9885};
	xor.b64  	%rd1465, %rd1463, %rd1464;
	xor.b64  	%rd1466, %rd1447, %rd1399;
	xor.b64  	%rd1467, %rd1447, %rd1423;
	and.b64  	%rd1468, %rd1467, %rd1466;
	xor.b64  	%rd1469, %rd1468, %rd1447;
	add.s64 	%rd1470, %rd1459, %rd1469;
	add.s64 	%rd1471, %rd1470, %rd1465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9887,%dummy}, %rd1460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9888}, %rd1460;
	}
	shf.r.wrap.b32 	%r9889, %r9888, %r9887, 14;
	shf.r.wrap.b32 	%r9890, %r9887, %r9888, 14;
	mov.b64 	%rd1472, {%r9890, %r9889};
	shf.r.wrap.b32 	%r9891, %r9888, %r9887, 18;
	shf.r.wrap.b32 	%r9892, %r9887, %r9888, 18;
	mov.b64 	%rd1473, {%r9892, %r9891};
	xor.b64  	%rd1474, %rd1473, %rd1472;
	shf.l.wrap.b32 	%r9893, %r9887, %r9888, 23;
	shf.l.wrap.b32 	%r9894, %r9888, %r9887, 23;
	mov.b64 	%rd1475, {%r9894, %r9893};
	xor.b64  	%rd1476, %rd1474, %rd1475;
	xor.b64  	%rd1477, %rd1436, %rd1412;
	and.b64  	%rd1478, %rd1460, %rd1477;
	xor.b64  	%rd1479, %rd1478, %rd1412;
	add.s64 	%rd1480, %rd1388, %rd1199;
	add.s64 	%rd1481, %rd1480, %rd2827;
	add.s64 	%rd1482, %rd1481, %rd1479;
	add.s64 	%rd1483, %rd1482, %rd1476;
	add.s64 	%rd1484, %rd1483, %rd1399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9895,%dummy}, %rd1471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9896}, %rd1471;
	}
	shf.r.wrap.b32 	%r9897, %r9896, %r9895, 28;
	shf.r.wrap.b32 	%r9898, %r9895, %r9896, 28;
	mov.b64 	%rd1485, {%r9898, %r9897};
	shf.l.wrap.b32 	%r9899, %r9895, %r9896, 30;
	shf.l.wrap.b32 	%r9900, %r9896, %r9895, 30;
	mov.b64 	%rd1486, {%r9900, %r9899};
	xor.b64  	%rd1487, %rd1486, %rd1485;
	shf.l.wrap.b32 	%r9901, %r9895, %r9896, 25;
	shf.l.wrap.b32 	%r9902, %r9896, %r9895, 25;
	mov.b64 	%rd1488, {%r9902, %r9901};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	xor.b64  	%rd1490, %rd1471, %rd1423;
	xor.b64  	%rd1491, %rd1471, %rd1447;
	and.b64  	%rd1492, %rd1491, %rd1490;
	xor.b64  	%rd1493, %rd1492, %rd1471;
	add.s64 	%rd1494, %rd1483, %rd1493;
	add.s64 	%rd1495, %rd1494, %rd1489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9903,%dummy}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9904}, %rd1484;
	}
	shf.r.wrap.b32 	%r9905, %r9904, %r9903, 14;
	shf.r.wrap.b32 	%r9906, %r9903, %r9904, 14;
	mov.b64 	%rd1496, {%r9906, %r9905};
	shf.r.wrap.b32 	%r9907, %r9904, %r9903, 18;
	shf.r.wrap.b32 	%r9908, %r9903, %r9904, 18;
	mov.b64 	%rd1497, {%r9908, %r9907};
	xor.b64  	%rd1498, %rd1497, %rd1496;
	shf.l.wrap.b32 	%r9909, %r9903, %r9904, 23;
	shf.l.wrap.b32 	%r9910, %r9904, %r9903, 23;
	mov.b64 	%rd1499, {%r9910, %r9909};
	xor.b64  	%rd1500, %rd1498, %rd1499;
	xor.b64  	%rd1501, %rd1460, %rd1436;
	and.b64  	%rd1502, %rd1484, %rd1501;
	xor.b64  	%rd1503, %rd1502, %rd1436;
	add.s64 	%rd1504, %rd1412, %rd1212;
	add.s64 	%rd1505, %rd1504, %rd2828;
	add.s64 	%rd1506, %rd1505, %rd1503;
	add.s64 	%rd1507, %rd1506, %rd1500;
	add.s64 	%rd1508, %rd1507, %rd1423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9911,%dummy}, %rd1495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9912}, %rd1495;
	}
	shf.r.wrap.b32 	%r9913, %r9912, %r9911, 28;
	shf.r.wrap.b32 	%r9914, %r9911, %r9912, 28;
	mov.b64 	%rd1509, {%r9914, %r9913};
	shf.l.wrap.b32 	%r9915, %r9911, %r9912, 30;
	shf.l.wrap.b32 	%r9916, %r9912, %r9911, 30;
	mov.b64 	%rd1510, {%r9916, %r9915};
	xor.b64  	%rd1511, %rd1510, %rd1509;
	shf.l.wrap.b32 	%r9917, %r9911, %r9912, 25;
	shf.l.wrap.b32 	%r9918, %r9912, %r9911, 25;
	mov.b64 	%rd1512, {%r9918, %r9917};
	xor.b64  	%rd1513, %rd1511, %rd1512;
	xor.b64  	%rd1514, %rd1495, %rd1447;
	xor.b64  	%rd1515, %rd1495, %rd1471;
	and.b64  	%rd1516, %rd1515, %rd1514;
	xor.b64  	%rd1517, %rd1516, %rd1495;
	add.s64 	%rd1518, %rd1507, %rd1517;
	add.s64 	%rd1519, %rd1518, %rd1513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9919,%dummy}, %rd1508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9920}, %rd1508;
	}
	shf.r.wrap.b32 	%r9921, %r9920, %r9919, 14;
	shf.r.wrap.b32 	%r9922, %r9919, %r9920, 14;
	mov.b64 	%rd1520, {%r9922, %r9921};
	shf.r.wrap.b32 	%r9923, %r9920, %r9919, 18;
	shf.r.wrap.b32 	%r9924, %r9919, %r9920, 18;
	mov.b64 	%rd1521, {%r9924, %r9923};
	xor.b64  	%rd1522, %rd1521, %rd1520;
	shf.l.wrap.b32 	%r9925, %r9919, %r9920, 23;
	shf.l.wrap.b32 	%r9926, %r9920, %r9919, 23;
	mov.b64 	%rd1523, {%r9926, %r9925};
	xor.b64  	%rd1524, %rd1522, %rd1523;
	xor.b64  	%rd1525, %rd1484, %rd1460;
	and.b64  	%rd1526, %rd1508, %rd1525;
	xor.b64  	%rd1527, %rd1526, %rd1460;
	add.s64 	%rd1528, %rd1436, %rd1225;
	add.s64 	%rd1529, %rd1528, %rd2829;
	add.s64 	%rd1530, %rd1529, %rd1527;
	add.s64 	%rd1531, %rd1530, %rd1524;
	add.s64 	%rd1532, %rd1531, %rd1447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9927,%dummy}, %rd1519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9928}, %rd1519;
	}
	shf.r.wrap.b32 	%r9929, %r9928, %r9927, 28;
	shf.r.wrap.b32 	%r9930, %r9927, %r9928, 28;
	mov.b64 	%rd1533, {%r9930, %r9929};
	shf.l.wrap.b32 	%r9931, %r9927, %r9928, 30;
	shf.l.wrap.b32 	%r9932, %r9928, %r9927, 30;
	mov.b64 	%rd1534, {%r9932, %r9931};
	xor.b64  	%rd1535, %rd1534, %rd1533;
	shf.l.wrap.b32 	%r9933, %r9927, %r9928, 25;
	shf.l.wrap.b32 	%r9934, %r9928, %r9927, 25;
	mov.b64 	%rd1536, {%r9934, %r9933};
	xor.b64  	%rd1537, %rd1535, %rd1536;
	xor.b64  	%rd1538, %rd1519, %rd1471;
	xor.b64  	%rd1539, %rd1519, %rd1495;
	and.b64  	%rd1540, %rd1539, %rd1538;
	xor.b64  	%rd1541, %rd1540, %rd1519;
	add.s64 	%rd1542, %rd1531, %rd1541;
	add.s64 	%rd1543, %rd1542, %rd1537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9935,%dummy}, %rd1532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9936}, %rd1532;
	}
	shf.r.wrap.b32 	%r9937, %r9936, %r9935, 14;
	shf.r.wrap.b32 	%r9938, %r9935, %r9936, 14;
	mov.b64 	%rd1544, {%r9938, %r9937};
	shf.r.wrap.b32 	%r9939, %r9936, %r9935, 18;
	shf.r.wrap.b32 	%r9940, %r9935, %r9936, 18;
	mov.b64 	%rd1545, {%r9940, %r9939};
	xor.b64  	%rd1546, %rd1545, %rd1544;
	shf.l.wrap.b32 	%r9941, %r9935, %r9936, 23;
	shf.l.wrap.b32 	%r9942, %r9936, %r9935, 23;
	mov.b64 	%rd1547, {%r9942, %r9941};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	xor.b64  	%rd1549, %rd1508, %rd1484;
	and.b64  	%rd1550, %rd1532, %rd1549;
	xor.b64  	%rd1551, %rd1550, %rd1484;
	add.s64 	%rd1552, %rd1460, %rd1238;
	add.s64 	%rd1553, %rd1552, %rd2830;
	add.s64 	%rd1554, %rd1553, %rd1551;
	add.s64 	%rd1555, %rd1554, %rd1548;
	add.s64 	%rd1556, %rd1555, %rd1471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9943,%dummy}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9944}, %rd1543;
	}
	shf.r.wrap.b32 	%r9945, %r9944, %r9943, 28;
	shf.r.wrap.b32 	%r9946, %r9943, %r9944, 28;
	mov.b64 	%rd1557, {%r9946, %r9945};
	shf.l.wrap.b32 	%r9947, %r9943, %r9944, 30;
	shf.l.wrap.b32 	%r9948, %r9944, %r9943, 30;
	mov.b64 	%rd1558, {%r9948, %r9947};
	xor.b64  	%rd1559, %rd1558, %rd1557;
	shf.l.wrap.b32 	%r9949, %r9943, %r9944, 25;
	shf.l.wrap.b32 	%r9950, %r9944, %r9943, 25;
	mov.b64 	%rd1560, {%r9950, %r9949};
	xor.b64  	%rd1561, %rd1559, %rd1560;
	xor.b64  	%rd1562, %rd1543, %rd1495;
	xor.b64  	%rd1563, %rd1543, %rd1519;
	and.b64  	%rd1564, %rd1563, %rd1562;
	xor.b64  	%rd1565, %rd1564, %rd1543;
	add.s64 	%rd1566, %rd1555, %rd1565;
	add.s64 	%rd1567, %rd1566, %rd1561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9951,%dummy}, %rd1556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9952}, %rd1556;
	}
	shf.r.wrap.b32 	%r9953, %r9952, %r9951, 14;
	shf.r.wrap.b32 	%r9954, %r9951, %r9952, 14;
	mov.b64 	%rd1568, {%r9954, %r9953};
	shf.r.wrap.b32 	%r9955, %r9952, %r9951, 18;
	shf.r.wrap.b32 	%r9956, %r9951, %r9952, 18;
	mov.b64 	%rd1569, {%r9956, %r9955};
	xor.b64  	%rd1570, %rd1569, %rd1568;
	shf.l.wrap.b32 	%r9957, %r9951, %r9952, 23;
	shf.l.wrap.b32 	%r9958, %r9952, %r9951, 23;
	mov.b64 	%rd1571, {%r9958, %r9957};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	xor.b64  	%rd1573, %rd1532, %rd1508;
	and.b64  	%rd1574, %rd1556, %rd1573;
	xor.b64  	%rd1575, %rd1574, %rd1508;
	add.s64 	%rd1576, %rd1484, %rd1251;
	add.s64 	%rd1577, %rd1576, %rd2831;
	add.s64 	%rd1578, %rd1577, %rd1575;
	add.s64 	%rd1579, %rd1578, %rd1572;
	add.s64 	%rd1580, %rd1579, %rd1495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9959,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9960}, %rd1567;
	}
	shf.r.wrap.b32 	%r9961, %r9960, %r9959, 28;
	shf.r.wrap.b32 	%r9962, %r9959, %r9960, 28;
	mov.b64 	%rd1581, {%r9962, %r9961};
	shf.l.wrap.b32 	%r9963, %r9959, %r9960, 30;
	shf.l.wrap.b32 	%r9964, %r9960, %r9959, 30;
	mov.b64 	%rd1582, {%r9964, %r9963};
	xor.b64  	%rd1583, %rd1582, %rd1581;
	shf.l.wrap.b32 	%r9965, %r9959, %r9960, 25;
	shf.l.wrap.b32 	%r9966, %r9960, %r9959, 25;
	mov.b64 	%rd1584, {%r9966, %r9965};
	xor.b64  	%rd1585, %rd1583, %rd1584;
	xor.b64  	%rd1586, %rd1567, %rd1519;
	xor.b64  	%rd1587, %rd1567, %rd1543;
	and.b64  	%rd1588, %rd1587, %rd1586;
	xor.b64  	%rd1589, %rd1588, %rd1567;
	add.s64 	%rd1590, %rd1579, %rd1589;
	add.s64 	%rd1591, %rd1590, %rd1585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9967,%dummy}, %rd1580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9968}, %rd1580;
	}
	shf.r.wrap.b32 	%r9969, %r9968, %r9967, 14;
	shf.r.wrap.b32 	%r9970, %r9967, %r9968, 14;
	mov.b64 	%rd1592, {%r9970, %r9969};
	shf.r.wrap.b32 	%r9971, %r9968, %r9967, 18;
	shf.r.wrap.b32 	%r9972, %r9967, %r9968, 18;
	mov.b64 	%rd1593, {%r9972, %r9971};
	xor.b64  	%rd1594, %rd1593, %rd1592;
	shf.l.wrap.b32 	%r9973, %r9967, %r9968, 23;
	shf.l.wrap.b32 	%r9974, %r9968, %r9967, 23;
	mov.b64 	%rd1595, {%r9974, %r9973};
	xor.b64  	%rd1596, %rd1594, %rd1595;
	xor.b64  	%rd1597, %rd1556, %rd1532;
	and.b64  	%rd1598, %rd1580, %rd1597;
	xor.b64  	%rd1599, %rd1598, %rd1532;
	add.s64 	%rd1600, %rd1508, %rd1264;
	add.s64 	%rd1601, %rd1600, %rd2832;
	add.s64 	%rd1602, %rd1601, %rd1599;
	add.s64 	%rd1603, %rd1602, %rd1596;
	add.s64 	%rd1604, %rd1603, %rd1519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9975,%dummy}, %rd1591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9976}, %rd1591;
	}
	shf.r.wrap.b32 	%r9977, %r9976, %r9975, 28;
	shf.r.wrap.b32 	%r9978, %r9975, %r9976, 28;
	mov.b64 	%rd1605, {%r9978, %r9977};
	shf.l.wrap.b32 	%r9979, %r9975, %r9976, 30;
	shf.l.wrap.b32 	%r9980, %r9976, %r9975, 30;
	mov.b64 	%rd1606, {%r9980, %r9979};
	xor.b64  	%rd1607, %rd1606, %rd1605;
	shf.l.wrap.b32 	%r9981, %r9975, %r9976, 25;
	shf.l.wrap.b32 	%r9982, %r9976, %r9975, 25;
	mov.b64 	%rd1608, {%r9982, %r9981};
	xor.b64  	%rd1609, %rd1607, %rd1608;
	xor.b64  	%rd1610, %rd1591, %rd1543;
	xor.b64  	%rd1611, %rd1591, %rd1567;
	and.b64  	%rd1612, %rd1611, %rd1610;
	xor.b64  	%rd1613, %rd1612, %rd1591;
	add.s64 	%rd1614, %rd1603, %rd1613;
	add.s64 	%rd1615, %rd1614, %rd1609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9983,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9984}, %rd1604;
	}
	shf.r.wrap.b32 	%r9985, %r9984, %r9983, 14;
	shf.r.wrap.b32 	%r9986, %r9983, %r9984, 14;
	mov.b64 	%rd1616, {%r9986, %r9985};
	shf.r.wrap.b32 	%r9987, %r9984, %r9983, 18;
	shf.r.wrap.b32 	%r9988, %r9983, %r9984, 18;
	mov.b64 	%rd1617, {%r9988, %r9987};
	xor.b64  	%rd1618, %rd1617, %rd1616;
	shf.l.wrap.b32 	%r9989, %r9983, %r9984, 23;
	shf.l.wrap.b32 	%r9990, %r9984, %r9983, 23;
	mov.b64 	%rd1619, {%r9990, %r9989};
	xor.b64  	%rd1620, %rd1618, %rd1619;
	xor.b64  	%rd1621, %rd1580, %rd1556;
	and.b64  	%rd1622, %rd1604, %rd1621;
	xor.b64  	%rd1623, %rd1622, %rd1556;
	add.s64 	%rd1624, %rd1532, %rd1277;
	add.s64 	%rd1625, %rd1624, %rd2833;
	add.s64 	%rd1626, %rd1625, %rd1623;
	add.s64 	%rd1627, %rd1626, %rd1620;
	add.s64 	%rd1628, %rd1627, %rd1543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9991,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9992}, %rd1615;
	}
	shf.r.wrap.b32 	%r9993, %r9992, %r9991, 28;
	shf.r.wrap.b32 	%r9994, %r9991, %r9992, 28;
	mov.b64 	%rd1629, {%r9994, %r9993};
	shf.l.wrap.b32 	%r9995, %r9991, %r9992, 30;
	shf.l.wrap.b32 	%r9996, %r9992, %r9991, 30;
	mov.b64 	%rd1630, {%r9996, %r9995};
	xor.b64  	%rd1631, %rd1630, %rd1629;
	shf.l.wrap.b32 	%r9997, %r9991, %r9992, 25;
	shf.l.wrap.b32 	%r9998, %r9992, %r9991, 25;
	mov.b64 	%rd1632, {%r9998, %r9997};
	xor.b64  	%rd1633, %rd1631, %rd1632;
	xor.b64  	%rd1634, %rd1615, %rd1567;
	xor.b64  	%rd1635, %rd1615, %rd1591;
	and.b64  	%rd1636, %rd1635, %rd1634;
	xor.b64  	%rd1637, %rd1636, %rd1615;
	add.s64 	%rd1638, %rd1627, %rd1637;
	add.s64 	%rd1639, %rd1638, %rd1633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9999,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10000}, %rd1628;
	}
	shf.r.wrap.b32 	%r10001, %r10000, %r9999, 14;
	shf.r.wrap.b32 	%r10002, %r9999, %r10000, 14;
	mov.b64 	%rd1640, {%r10002, %r10001};
	shf.r.wrap.b32 	%r10003, %r10000, %r9999, 18;
	shf.r.wrap.b32 	%r10004, %r9999, %r10000, 18;
	mov.b64 	%rd1641, {%r10004, %r10003};
	xor.b64  	%rd1642, %rd1641, %rd1640;
	shf.l.wrap.b32 	%r10005, %r9999, %r10000, 23;
	shf.l.wrap.b32 	%r10006, %r10000, %r9999, 23;
	mov.b64 	%rd1643, {%r10006, %r10005};
	xor.b64  	%rd1644, %rd1642, %rd1643;
	xor.b64  	%rd1645, %rd1604, %rd1580;
	and.b64  	%rd1646, %rd1628, %rd1645;
	xor.b64  	%rd1647, %rd1646, %rd1580;
	add.s64 	%rd1648, %rd1556, %rd1290;
	add.s64 	%rd1649, %rd1648, %rd2834;
	add.s64 	%rd1650, %rd1649, %rd1647;
	add.s64 	%rd1651, %rd1650, %rd1644;
	add.s64 	%rd1652, %rd1651, %rd1567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10007,%dummy}, %rd1639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10008}, %rd1639;
	}
	shf.r.wrap.b32 	%r10009, %r10008, %r10007, 28;
	shf.r.wrap.b32 	%r10010, %r10007, %r10008, 28;
	mov.b64 	%rd1653, {%r10010, %r10009};
	shf.l.wrap.b32 	%r10011, %r10007, %r10008, 30;
	shf.l.wrap.b32 	%r10012, %r10008, %r10007, 30;
	mov.b64 	%rd1654, {%r10012, %r10011};
	xor.b64  	%rd1655, %rd1654, %rd1653;
	shf.l.wrap.b32 	%r10013, %r10007, %r10008, 25;
	shf.l.wrap.b32 	%r10014, %r10008, %r10007, 25;
	mov.b64 	%rd1656, {%r10014, %r10013};
	xor.b64  	%rd1657, %rd1655, %rd1656;
	xor.b64  	%rd1658, %rd1639, %rd1591;
	xor.b64  	%rd1659, %rd1639, %rd1615;
	and.b64  	%rd1660, %rd1659, %rd1658;
	xor.b64  	%rd1661, %rd1660, %rd1639;
	add.s64 	%rd1662, %rd1651, %rd1661;
	add.s64 	%rd1663, %rd1662, %rd1657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10015,%dummy}, %rd1652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10016}, %rd1652;
	}
	shf.r.wrap.b32 	%r10017, %r10016, %r10015, 14;
	shf.r.wrap.b32 	%r10018, %r10015, %r10016, 14;
	mov.b64 	%rd1664, {%r10018, %r10017};
	shf.r.wrap.b32 	%r10019, %r10016, %r10015, 18;
	shf.r.wrap.b32 	%r10020, %r10015, %r10016, 18;
	mov.b64 	%rd1665, {%r10020, %r10019};
	xor.b64  	%rd1666, %rd1665, %rd1664;
	shf.l.wrap.b32 	%r10021, %r10015, %r10016, 23;
	shf.l.wrap.b32 	%r10022, %r10016, %r10015, 23;
	mov.b64 	%rd1667, {%r10022, %r10021};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	xor.b64  	%rd1669, %rd1628, %rd1604;
	and.b64  	%rd1670, %rd1652, %rd1669;
	xor.b64  	%rd1671, %rd1670, %rd1604;
	add.s64 	%rd1672, %rd1580, %rd1303;
	add.s64 	%rd1673, %rd1672, %rd2835;
	add.s64 	%rd1674, %rd1673, %rd1671;
	add.s64 	%rd1675, %rd1674, %rd1668;
	add.s64 	%rd1676, %rd1675, %rd1591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10023,%dummy}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10024}, %rd1663;
	}
	shf.r.wrap.b32 	%r10025, %r10024, %r10023, 28;
	shf.r.wrap.b32 	%r10026, %r10023, %r10024, 28;
	mov.b64 	%rd1677, {%r10026, %r10025};
	shf.l.wrap.b32 	%r10027, %r10023, %r10024, 30;
	shf.l.wrap.b32 	%r10028, %r10024, %r10023, 30;
	mov.b64 	%rd1678, {%r10028, %r10027};
	xor.b64  	%rd1679, %rd1678, %rd1677;
	shf.l.wrap.b32 	%r10029, %r10023, %r10024, 25;
	shf.l.wrap.b32 	%r10030, %r10024, %r10023, 25;
	mov.b64 	%rd1680, {%r10030, %r10029};
	xor.b64  	%rd1681, %rd1679, %rd1680;
	xor.b64  	%rd1682, %rd1663, %rd1615;
	xor.b64  	%rd1683, %rd1663, %rd1639;
	and.b64  	%rd1684, %rd1683, %rd1682;
	xor.b64  	%rd1685, %rd1684, %rd1663;
	add.s64 	%rd1686, %rd1675, %rd1685;
	add.s64 	%rd1687, %rd1686, %rd1681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10031,%dummy}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10032}, %rd1290;
	}
	shf.r.wrap.b32 	%r10033, %r10032, %r10031, 19;
	shf.r.wrap.b32 	%r10034, %r10031, %r10032, 19;
	mov.b64 	%rd1688, {%r10034, %r10033};
	shf.l.wrap.b32 	%r10035, %r10031, %r10032, 3;
	shf.l.wrap.b32 	%r10036, %r10032, %r10031, 3;
	mov.b64 	%rd1689, {%r10036, %r10035};
	shr.u64 	%rd1690, %rd1290, 6;
	xor.b64  	%rd1691, %rd1688, %rd1690;
	xor.b64  	%rd1692, %rd1691, %rd1689;
	shf.r.wrap.b32 	%r10037, %r9646, %r9645, 1;
	shf.r.wrap.b32 	%r10038, %r9645, %r9646, 1;
	mov.b64 	%rd1693, {%r10038, %r10037};
	shf.r.wrap.b32 	%r10039, %r9646, %r9645, 8;
	shf.r.wrap.b32 	%r10040, %r9645, %r9646, 8;
	mov.b64 	%rd1694, {%r10040, %r10039};
	shr.u64 	%rd1695, %rd1121, 7;
	xor.b64  	%rd1696, %rd1693, %rd1695;
	xor.b64  	%rd1697, %rd1696, %rd1694;
	add.s64 	%rd1698, %rd1108, %rd1225;
	add.s64 	%rd1699, %rd1698, %rd1692;
	add.s64 	%rd1700, %rd1699, %rd1697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10041,%dummy}, %rd1303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10042}, %rd1303;
	}
	shf.r.wrap.b32 	%r10043, %r10042, %r10041, 19;
	shf.r.wrap.b32 	%r10044, %r10041, %r10042, 19;
	mov.b64 	%rd1701, {%r10044, %r10043};
	shf.l.wrap.b32 	%r10045, %r10041, %r10042, 3;
	shf.l.wrap.b32 	%r10046, %r10042, %r10041, 3;
	mov.b64 	%rd1702, {%r10046, %r10045};
	shr.u64 	%rd1703, %rd1303, 6;
	xor.b64  	%rd1704, %rd1701, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd1702;
	shf.r.wrap.b32 	%r10047, %r9656, %r9655, 1;
	shf.r.wrap.b32 	%r10048, %r9655, %r9656, 1;
	mov.b64 	%rd1706, {%r10048, %r10047};
	shf.r.wrap.b32 	%r10049, %r9656, %r9655, 8;
	shf.r.wrap.b32 	%r10050, %r9655, %r9656, 8;
	mov.b64 	%rd1707, {%r10050, %r10049};
	shr.u64 	%rd1708, %rd1134, 7;
	xor.b64  	%rd1709, %rd1706, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1707;
	add.s64 	%rd1711, %rd1121, %rd1238;
	add.s64 	%rd1712, %rd1711, %rd1705;
	add.s64 	%rd1713, %rd1712, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10051,%dummy}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10052}, %rd1700;
	}
	shf.r.wrap.b32 	%r10053, %r10052, %r10051, 19;
	shf.r.wrap.b32 	%r10054, %r10051, %r10052, 19;
	mov.b64 	%rd1714, {%r10054, %r10053};
	shf.l.wrap.b32 	%r10055, %r10051, %r10052, 3;
	shf.l.wrap.b32 	%r10056, %r10052, %r10051, 3;
	mov.b64 	%rd1715, {%r10056, %r10055};
	shr.u64 	%rd1716, %rd1700, 6;
	xor.b64  	%rd1717, %rd1714, %rd1716;
	xor.b64  	%rd1718, %rd1717, %rd1715;
	shf.r.wrap.b32 	%r10057, %r9666, %r9665, 1;
	shf.r.wrap.b32 	%r10058, %r9665, %r9666, 1;
	mov.b64 	%rd1719, {%r10058, %r10057};
	shf.r.wrap.b32 	%r10059, %r9666, %r9665, 8;
	shf.r.wrap.b32 	%r10060, %r9665, %r9666, 8;
	mov.b64 	%rd1720, {%r10060, %r10059};
	shr.u64 	%rd1721, %rd1147, 7;
	xor.b64  	%rd1722, %rd1719, %rd1721;
	xor.b64  	%rd1723, %rd1722, %rd1720;
	add.s64 	%rd1724, %rd1134, %rd1251;
	add.s64 	%rd1725, %rd1724, %rd1718;
	add.s64 	%rd1726, %rd1725, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10061,%dummy}, %rd1713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10062}, %rd1713;
	}
	shf.r.wrap.b32 	%r10063, %r10062, %r10061, 19;
	shf.r.wrap.b32 	%r10064, %r10061, %r10062, 19;
	mov.b64 	%rd1727, {%r10064, %r10063};
	shf.l.wrap.b32 	%r10065, %r10061, %r10062, 3;
	shf.l.wrap.b32 	%r10066, %r10062, %r10061, 3;
	mov.b64 	%rd1728, {%r10066, %r10065};
	shr.u64 	%rd1729, %rd1713, 6;
	xor.b64  	%rd1730, %rd1727, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1728;
	shf.r.wrap.b32 	%r10067, %r9676, %r9675, 1;
	shf.r.wrap.b32 	%r10068, %r9675, %r9676, 1;
	mov.b64 	%rd1732, {%r10068, %r10067};
	shf.r.wrap.b32 	%r10069, %r9676, %r9675, 8;
	shf.r.wrap.b32 	%r10070, %r9675, %r9676, 8;
	mov.b64 	%rd1733, {%r10070, %r10069};
	shr.u64 	%rd1734, %rd1160, 7;
	xor.b64  	%rd1735, %rd1732, %rd1734;
	xor.b64  	%rd1736, %rd1735, %rd1733;
	add.s64 	%rd1737, %rd1147, %rd1264;
	add.s64 	%rd1738, %rd1737, %rd1731;
	add.s64 	%rd1739, %rd1738, %rd1736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10071,%dummy}, %rd1726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10072}, %rd1726;
	}
	shf.r.wrap.b32 	%r10073, %r10072, %r10071, 19;
	shf.r.wrap.b32 	%r10074, %r10071, %r10072, 19;
	mov.b64 	%rd1740, {%r10074, %r10073};
	shf.l.wrap.b32 	%r10075, %r10071, %r10072, 3;
	shf.l.wrap.b32 	%r10076, %r10072, %r10071, 3;
	mov.b64 	%rd1741, {%r10076, %r10075};
	shr.u64 	%rd1742, %rd1726, 6;
	xor.b64  	%rd1743, %rd1740, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1741;
	shf.r.wrap.b32 	%r10077, %r9686, %r9685, 1;
	shf.r.wrap.b32 	%r10078, %r9685, %r9686, 1;
	mov.b64 	%rd1745, {%r10078, %r10077};
	shf.r.wrap.b32 	%r10079, %r9686, %r9685, 8;
	shf.r.wrap.b32 	%r10080, %r9685, %r9686, 8;
	mov.b64 	%rd1746, {%r10080, %r10079};
	shr.u64 	%rd1747, %rd1173, 7;
	xor.b64  	%rd1748, %rd1745, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1746;
	add.s64 	%rd1750, %rd1160, %rd1277;
	add.s64 	%rd1751, %rd1750, %rd1744;
	add.s64 	%rd1752, %rd1751, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10081,%dummy}, %rd1739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10082}, %rd1739;
	}
	shf.r.wrap.b32 	%r10083, %r10082, %r10081, 19;
	shf.r.wrap.b32 	%r10084, %r10081, %r10082, 19;
	mov.b64 	%rd1753, {%r10084, %r10083};
	shf.l.wrap.b32 	%r10085, %r10081, %r10082, 3;
	shf.l.wrap.b32 	%r10086, %r10082, %r10081, 3;
	mov.b64 	%rd1754, {%r10086, %r10085};
	shr.u64 	%rd1755, %rd1739, 6;
	xor.b64  	%rd1756, %rd1753, %rd1755;
	xor.b64  	%rd1757, %rd1756, %rd1754;
	shf.r.wrap.b32 	%r10087, %r9696, %r9695, 1;
	shf.r.wrap.b32 	%r10088, %r9695, %r9696, 1;
	mov.b64 	%rd1758, {%r10088, %r10087};
	shf.r.wrap.b32 	%r10089, %r9696, %r9695, 8;
	shf.r.wrap.b32 	%r10090, %r9695, %r9696, 8;
	mov.b64 	%rd1759, {%r10090, %r10089};
	shr.u64 	%rd1760, %rd1186, 7;
	xor.b64  	%rd1761, %rd1758, %rd1760;
	xor.b64  	%rd1762, %rd1761, %rd1759;
	add.s64 	%rd1763, %rd1173, %rd1290;
	add.s64 	%rd1764, %rd1763, %rd1757;
	add.s64 	%rd1765, %rd1764, %rd1762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10091,%dummy}, %rd1752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10092}, %rd1752;
	}
	shf.r.wrap.b32 	%r10093, %r10092, %r10091, 19;
	shf.r.wrap.b32 	%r10094, %r10091, %r10092, 19;
	mov.b64 	%rd1766, {%r10094, %r10093};
	shf.l.wrap.b32 	%r10095, %r10091, %r10092, 3;
	shf.l.wrap.b32 	%r10096, %r10092, %r10091, 3;
	mov.b64 	%rd1767, {%r10096, %r10095};
	shr.u64 	%rd1768, %rd1752, 6;
	xor.b64  	%rd1769, %rd1766, %rd1768;
	xor.b64  	%rd1770, %rd1769, %rd1767;
	shf.r.wrap.b32 	%r10097, %r9706, %r9705, 1;
	shf.r.wrap.b32 	%r10098, %r9705, %r9706, 1;
	mov.b64 	%rd1771, {%r10098, %r10097};
	shf.r.wrap.b32 	%r10099, %r9706, %r9705, 8;
	shf.r.wrap.b32 	%r10100, %r9705, %r9706, 8;
	mov.b64 	%rd1772, {%r10100, %r10099};
	shr.u64 	%rd1773, %rd1199, 7;
	xor.b64  	%rd1774, %rd1771, %rd1773;
	xor.b64  	%rd1775, %rd1774, %rd1772;
	add.s64 	%rd1776, %rd1186, %rd1303;
	add.s64 	%rd1777, %rd1776, %rd1770;
	add.s64 	%rd1778, %rd1777, %rd1775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10101,%dummy}, %rd1765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10102}, %rd1765;
	}
	shf.r.wrap.b32 	%r10103, %r10102, %r10101, 19;
	shf.r.wrap.b32 	%r10104, %r10101, %r10102, 19;
	mov.b64 	%rd1779, {%r10104, %r10103};
	shf.l.wrap.b32 	%r10105, %r10101, %r10102, 3;
	shf.l.wrap.b32 	%r10106, %r10102, %r10101, 3;
	mov.b64 	%rd1780, {%r10106, %r10105};
	shr.u64 	%rd1781, %rd1765, 6;
	xor.b64  	%rd1782, %rd1779, %rd1781;
	xor.b64  	%rd1783, %rd1782, %rd1780;
	shf.r.wrap.b32 	%r10107, %r9716, %r9715, 1;
	shf.r.wrap.b32 	%r10108, %r9715, %r9716, 1;
	mov.b64 	%rd1784, {%r10108, %r10107};
	shf.r.wrap.b32 	%r10109, %r9716, %r9715, 8;
	shf.r.wrap.b32 	%r10110, %r9715, %r9716, 8;
	mov.b64 	%rd1785, {%r10110, %r10109};
	shr.u64 	%rd1786, %rd1212, 7;
	xor.b64  	%rd1787, %rd1784, %rd1786;
	xor.b64  	%rd1788, %rd1787, %rd1785;
	add.s64 	%rd1789, %rd1700, %rd1199;
	add.s64 	%rd1790, %rd1789, %rd1783;
	add.s64 	%rd1791, %rd1790, %rd1788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10111,%dummy}, %rd1778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10112}, %rd1778;
	}
	shf.r.wrap.b32 	%r10113, %r10112, %r10111, 19;
	shf.r.wrap.b32 	%r10114, %r10111, %r10112, 19;
	mov.b64 	%rd1792, {%r10114, %r10113};
	shf.l.wrap.b32 	%r10115, %r10111, %r10112, 3;
	shf.l.wrap.b32 	%r10116, %r10112, %r10111, 3;
	mov.b64 	%rd1793, {%r10116, %r10115};
	shr.u64 	%rd1794, %rd1778, 6;
	xor.b64  	%rd1795, %rd1792, %rd1794;
	xor.b64  	%rd1796, %rd1795, %rd1793;
	shf.r.wrap.b32 	%r10117, %r9726, %r9725, 1;
	shf.r.wrap.b32 	%r10118, %r9725, %r9726, 1;
	mov.b64 	%rd1797, {%r10118, %r10117};
	shf.r.wrap.b32 	%r10119, %r9726, %r9725, 8;
	shf.r.wrap.b32 	%r10120, %r9725, %r9726, 8;
	mov.b64 	%rd1798, {%r10120, %r10119};
	shr.u64 	%rd1799, %rd1225, 7;
	xor.b64  	%rd1800, %rd1797, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd1798;
	add.s64 	%rd1802, %rd1713, %rd1212;
	add.s64 	%rd1803, %rd1802, %rd1796;
	add.s64 	%rd1804, %rd1803, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10121,%dummy}, %rd1791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10122}, %rd1791;
	}
	shf.r.wrap.b32 	%r10123, %r10122, %r10121, 19;
	shf.r.wrap.b32 	%r10124, %r10121, %r10122, 19;
	mov.b64 	%rd1805, {%r10124, %r10123};
	shf.l.wrap.b32 	%r10125, %r10121, %r10122, 3;
	shf.l.wrap.b32 	%r10126, %r10122, %r10121, 3;
	mov.b64 	%rd1806, {%r10126, %r10125};
	shr.u64 	%rd1807, %rd1791, 6;
	xor.b64  	%rd1808, %rd1805, %rd1807;
	xor.b64  	%rd1809, %rd1808, %rd1806;
	shf.r.wrap.b32 	%r10127, %r9736, %r9735, 1;
	shf.r.wrap.b32 	%r10128, %r9735, %r9736, 1;
	mov.b64 	%rd1810, {%r10128, %r10127};
	shf.r.wrap.b32 	%r10129, %r9736, %r9735, 8;
	shf.r.wrap.b32 	%r10130, %r9735, %r9736, 8;
	mov.b64 	%rd1811, {%r10130, %r10129};
	shr.u64 	%rd1812, %rd1238, 7;
	xor.b64  	%rd1813, %rd1810, %rd1812;
	xor.b64  	%rd1814, %rd1813, %rd1811;
	add.s64 	%rd1815, %rd1726, %rd1225;
	add.s64 	%rd1816, %rd1815, %rd1809;
	add.s64 	%rd1817, %rd1816, %rd1814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10131,%dummy}, %rd1804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10132}, %rd1804;
	}
	shf.r.wrap.b32 	%r10133, %r10132, %r10131, 19;
	shf.r.wrap.b32 	%r10134, %r10131, %r10132, 19;
	mov.b64 	%rd1818, {%r10134, %r10133};
	shf.l.wrap.b32 	%r10135, %r10131, %r10132, 3;
	shf.l.wrap.b32 	%r10136, %r10132, %r10131, 3;
	mov.b64 	%rd1819, {%r10136, %r10135};
	shr.u64 	%rd1820, %rd1804, 6;
	xor.b64  	%rd1821, %rd1818, %rd1820;
	xor.b64  	%rd1822, %rd1821, %rd1819;
	shf.r.wrap.b32 	%r10137, %r9746, %r9745, 1;
	shf.r.wrap.b32 	%r10138, %r9745, %r9746, 1;
	mov.b64 	%rd1823, {%r10138, %r10137};
	shf.r.wrap.b32 	%r10139, %r9746, %r9745, 8;
	shf.r.wrap.b32 	%r10140, %r9745, %r9746, 8;
	mov.b64 	%rd1824, {%r10140, %r10139};
	shr.u64 	%rd1825, %rd1251, 7;
	xor.b64  	%rd1826, %rd1823, %rd1825;
	xor.b64  	%rd1827, %rd1826, %rd1824;
	add.s64 	%rd1828, %rd1739, %rd1238;
	add.s64 	%rd1829, %rd1828, %rd1822;
	add.s64 	%rd1830, %rd1829, %rd1827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10141,%dummy}, %rd1817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10142}, %rd1817;
	}
	shf.r.wrap.b32 	%r10143, %r10142, %r10141, 19;
	shf.r.wrap.b32 	%r10144, %r10141, %r10142, 19;
	mov.b64 	%rd1831, {%r10144, %r10143};
	shf.l.wrap.b32 	%r10145, %r10141, %r10142, 3;
	shf.l.wrap.b32 	%r10146, %r10142, %r10141, 3;
	mov.b64 	%rd1832, {%r10146, %r10145};
	shr.u64 	%rd1833, %rd1817, 6;
	xor.b64  	%rd1834, %rd1831, %rd1833;
	xor.b64  	%rd1835, %rd1834, %rd1832;
	shf.r.wrap.b32 	%r10147, %r9756, %r9755, 1;
	shf.r.wrap.b32 	%r10148, %r9755, %r9756, 1;
	mov.b64 	%rd1836, {%r10148, %r10147};
	shf.r.wrap.b32 	%r10149, %r9756, %r9755, 8;
	shf.r.wrap.b32 	%r10150, %r9755, %r9756, 8;
	mov.b64 	%rd1837, {%r10150, %r10149};
	shr.u64 	%rd1838, %rd1264, 7;
	xor.b64  	%rd1839, %rd1836, %rd1838;
	xor.b64  	%rd1840, %rd1839, %rd1837;
	add.s64 	%rd1841, %rd1752, %rd1251;
	add.s64 	%rd1842, %rd1841, %rd1835;
	add.s64 	%rd1843, %rd1842, %rd1840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10151,%dummy}, %rd1830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10152}, %rd1830;
	}
	shf.r.wrap.b32 	%r10153, %r10152, %r10151, 19;
	shf.r.wrap.b32 	%r10154, %r10151, %r10152, 19;
	mov.b64 	%rd1844, {%r10154, %r10153};
	shf.l.wrap.b32 	%r10155, %r10151, %r10152, 3;
	shf.l.wrap.b32 	%r10156, %r10152, %r10151, 3;
	mov.b64 	%rd1845, {%r10156, %r10155};
	shr.u64 	%rd1846, %rd1830, 6;
	xor.b64  	%rd1847, %rd1844, %rd1846;
	xor.b64  	%rd1848, %rd1847, %rd1845;
	shf.r.wrap.b32 	%r10157, %r9766, %r9765, 1;
	shf.r.wrap.b32 	%r10158, %r9765, %r9766, 1;
	mov.b64 	%rd1849, {%r10158, %r10157};
	shf.r.wrap.b32 	%r10159, %r9766, %r9765, 8;
	shf.r.wrap.b32 	%r10160, %r9765, %r9766, 8;
	mov.b64 	%rd1850, {%r10160, %r10159};
	shr.u64 	%rd1851, %rd1277, 7;
	xor.b64  	%rd1852, %rd1849, %rd1851;
	xor.b64  	%rd1853, %rd1852, %rd1850;
	add.s64 	%rd1854, %rd1765, %rd1264;
	add.s64 	%rd1855, %rd1854, %rd1848;
	add.s64 	%rd1856, %rd1855, %rd1853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10161,%dummy}, %rd1843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10162}, %rd1843;
	}
	shf.r.wrap.b32 	%r10163, %r10162, %r10161, 19;
	shf.r.wrap.b32 	%r10164, %r10161, %r10162, 19;
	mov.b64 	%rd1857, {%r10164, %r10163};
	shf.l.wrap.b32 	%r10165, %r10161, %r10162, 3;
	shf.l.wrap.b32 	%r10166, %r10162, %r10161, 3;
	mov.b64 	%rd1858, {%r10166, %r10165};
	shr.u64 	%rd1859, %rd1843, 6;
	xor.b64  	%rd1860, %rd1857, %rd1859;
	xor.b64  	%rd1861, %rd1860, %rd1858;
	shf.r.wrap.b32 	%r10167, %r10032, %r10031, 1;
	shf.r.wrap.b32 	%r10168, %r10031, %r10032, 1;
	mov.b64 	%rd1862, {%r10168, %r10167};
	shf.r.wrap.b32 	%r10169, %r10032, %r10031, 8;
	shf.r.wrap.b32 	%r10170, %r10031, %r10032, 8;
	mov.b64 	%rd1863, {%r10170, %r10169};
	shr.u64 	%rd1864, %rd1290, 7;
	xor.b64  	%rd1865, %rd1862, %rd1864;
	xor.b64  	%rd1866, %rd1865, %rd1863;
	add.s64 	%rd1867, %rd1778, %rd1277;
	add.s64 	%rd1868, %rd1867, %rd1861;
	add.s64 	%rd1869, %rd1868, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10171,%dummy}, %rd1856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10172}, %rd1856;
	}
	shf.r.wrap.b32 	%r10173, %r10172, %r10171, 19;
	shf.r.wrap.b32 	%r10174, %r10171, %r10172, 19;
	mov.b64 	%rd1870, {%r10174, %r10173};
	shf.l.wrap.b32 	%r10175, %r10171, %r10172, 3;
	shf.l.wrap.b32 	%r10176, %r10172, %r10171, 3;
	mov.b64 	%rd1871, {%r10176, %r10175};
	shr.u64 	%rd1872, %rd1856, 6;
	xor.b64  	%rd1873, %rd1870, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1871;
	shf.r.wrap.b32 	%r10177, %r10042, %r10041, 1;
	shf.r.wrap.b32 	%r10178, %r10041, %r10042, 1;
	mov.b64 	%rd1875, {%r10178, %r10177};
	shf.r.wrap.b32 	%r10179, %r10042, %r10041, 8;
	shf.r.wrap.b32 	%r10180, %r10041, %r10042, 8;
	mov.b64 	%rd1876, {%r10180, %r10179};
	shr.u64 	%rd1877, %rd1303, 7;
	xor.b64  	%rd1878, %rd1875, %rd1877;
	xor.b64  	%rd1879, %rd1878, %rd1876;
	add.s64 	%rd1880, %rd1791, %rd1290;
	add.s64 	%rd1881, %rd1880, %rd1874;
	add.s64 	%rd1882, %rd1881, %rd1879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10181,%dummy}, %rd1869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10182}, %rd1869;
	}
	shf.r.wrap.b32 	%r10183, %r10182, %r10181, 19;
	shf.r.wrap.b32 	%r10184, %r10181, %r10182, 19;
	mov.b64 	%rd1883, {%r10184, %r10183};
	shf.l.wrap.b32 	%r10185, %r10181, %r10182, 3;
	shf.l.wrap.b32 	%r10186, %r10182, %r10181, 3;
	mov.b64 	%rd1884, {%r10186, %r10185};
	shr.u64 	%rd1885, %rd1869, 6;
	xor.b64  	%rd1886, %rd1883, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1884;
	shf.r.wrap.b32 	%r10187, %r10052, %r10051, 1;
	shf.r.wrap.b32 	%r10188, %r10051, %r10052, 1;
	mov.b64 	%rd1888, {%r10188, %r10187};
	shf.r.wrap.b32 	%r10189, %r10052, %r10051, 8;
	shf.r.wrap.b32 	%r10190, %r10051, %r10052, 8;
	mov.b64 	%rd1889, {%r10190, %r10189};
	shr.u64 	%rd1890, %rd1700, 7;
	xor.b64  	%rd1891, %rd1888, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1889;
	add.s64 	%rd1893, %rd1804, %rd1303;
	add.s64 	%rd1894, %rd1893, %rd1887;
	add.s64 	%rd1895, %rd1894, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10191,%dummy}, %rd1676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10192}, %rd1676;
	}
	shf.r.wrap.b32 	%r10193, %r10192, %r10191, 14;
	shf.r.wrap.b32 	%r10194, %r10191, %r10192, 14;
	mov.b64 	%rd1896, {%r10194, %r10193};
	shf.r.wrap.b32 	%r10195, %r10192, %r10191, 18;
	shf.r.wrap.b32 	%r10196, %r10191, %r10192, 18;
	mov.b64 	%rd1897, {%r10196, %r10195};
	xor.b64  	%rd1898, %rd1897, %rd1896;
	shf.l.wrap.b32 	%r10197, %r10191, %r10192, 23;
	shf.l.wrap.b32 	%r10198, %r10192, %r10191, 23;
	mov.b64 	%rd1899, {%r10198, %r10197};
	xor.b64  	%rd1900, %rd1898, %rd1899;
	xor.b64  	%rd1901, %rd1628, %rd1652;
	and.b64  	%rd1902, %rd1901, %rd1676;
	xor.b64  	%rd1903, %rd1902, %rd1628;
	add.s64 	%rd1904, %rd1903, %rd1604;
	add.s64 	%rd1905, %rd1904, %rd1700;
	add.s64 	%rd1906, %rd1905, %rd2836;
	add.s64 	%rd1907, %rd1906, %rd1900;
	add.s64 	%rd1908, %rd1907, %rd1615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10199,%dummy}, %rd1687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10200}, %rd1687;
	}
	shf.r.wrap.b32 	%r10201, %r10200, %r10199, 28;
	shf.r.wrap.b32 	%r10202, %r10199, %r10200, 28;
	mov.b64 	%rd1909, {%r10202, %r10201};
	shf.l.wrap.b32 	%r10203, %r10199, %r10200, 30;
	shf.l.wrap.b32 	%r10204, %r10200, %r10199, 30;
	mov.b64 	%rd1910, {%r10204, %r10203};
	xor.b64  	%rd1911, %rd1910, %rd1909;
	shf.l.wrap.b32 	%r10205, %r10199, %r10200, 25;
	shf.l.wrap.b32 	%r10206, %r10200, %r10199, 25;
	mov.b64 	%rd1912, {%r10206, %r10205};
	xor.b64  	%rd1913, %rd1911, %rd1912;
	xor.b64  	%rd1914, %rd1687, %rd1639;
	xor.b64  	%rd1915, %rd1687, %rd1663;
	and.b64  	%rd1916, %rd1915, %rd1914;
	xor.b64  	%rd1917, %rd1916, %rd1687;
	add.s64 	%rd1918, %rd1907, %rd1917;
	add.s64 	%rd1919, %rd1918, %rd1913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10207,%dummy}, %rd1908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10208}, %rd1908;
	}
	shf.r.wrap.b32 	%r10209, %r10208, %r10207, 14;
	shf.r.wrap.b32 	%r10210, %r10207, %r10208, 14;
	mov.b64 	%rd1920, {%r10210, %r10209};
	shf.r.wrap.b32 	%r10211, %r10208, %r10207, 18;
	shf.r.wrap.b32 	%r10212, %r10207, %r10208, 18;
	mov.b64 	%rd1921, {%r10212, %r10211};
	xor.b64  	%rd1922, %rd1921, %rd1920;
	shf.l.wrap.b32 	%r10213, %r10207, %r10208, 23;
	shf.l.wrap.b32 	%r10214, %r10208, %r10207, 23;
	mov.b64 	%rd1923, {%r10214, %r10213};
	xor.b64  	%rd1924, %rd1922, %rd1923;
	xor.b64  	%rd1925, %rd1652, %rd1676;
	and.b64  	%rd1926, %rd1908, %rd1925;
	xor.b64  	%rd1927, %rd1926, %rd1652;
	add.s64 	%rd1928, %rd1713, %rd1628;
	add.s64 	%rd1929, %rd1928, %rd2837;
	add.s64 	%rd1930, %rd1929, %rd1927;
	add.s64 	%rd1931, %rd1930, %rd1924;
	add.s64 	%rd1932, %rd1931, %rd1639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10215,%dummy}, %rd1919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10216}, %rd1919;
	}
	shf.r.wrap.b32 	%r10217, %r10216, %r10215, 28;
	shf.r.wrap.b32 	%r10218, %r10215, %r10216, 28;
	mov.b64 	%rd1933, {%r10218, %r10217};
	shf.l.wrap.b32 	%r10219, %r10215, %r10216, 30;
	shf.l.wrap.b32 	%r10220, %r10216, %r10215, 30;
	mov.b64 	%rd1934, {%r10220, %r10219};
	xor.b64  	%rd1935, %rd1934, %rd1933;
	shf.l.wrap.b32 	%r10221, %r10215, %r10216, 25;
	shf.l.wrap.b32 	%r10222, %r10216, %r10215, 25;
	mov.b64 	%rd1936, {%r10222, %r10221};
	xor.b64  	%rd1937, %rd1935, %rd1936;
	xor.b64  	%rd1938, %rd1919, %rd1663;
	xor.b64  	%rd1939, %rd1919, %rd1687;
	and.b64  	%rd1940, %rd1939, %rd1938;
	xor.b64  	%rd1941, %rd1940, %rd1919;
	add.s64 	%rd1942, %rd1931, %rd1941;
	add.s64 	%rd1943, %rd1942, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10223,%dummy}, %rd1932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10224}, %rd1932;
	}
	shf.r.wrap.b32 	%r10225, %r10224, %r10223, 14;
	shf.r.wrap.b32 	%r10226, %r10223, %r10224, 14;
	mov.b64 	%rd1944, {%r10226, %r10225};
	shf.r.wrap.b32 	%r10227, %r10224, %r10223, 18;
	shf.r.wrap.b32 	%r10228, %r10223, %r10224, 18;
	mov.b64 	%rd1945, {%r10228, %r10227};
	xor.b64  	%rd1946, %rd1945, %rd1944;
	shf.l.wrap.b32 	%r10229, %r10223, %r10224, 23;
	shf.l.wrap.b32 	%r10230, %r10224, %r10223, 23;
	mov.b64 	%rd1947, {%r10230, %r10229};
	xor.b64  	%rd1948, %rd1946, %rd1947;
	xor.b64  	%rd1949, %rd1908, %rd1676;
	and.b64  	%rd1950, %rd1932, %rd1949;
	xor.b64  	%rd1951, %rd1950, %rd1676;
	add.s64 	%rd1952, %rd1726, %rd1652;
	add.s64 	%rd1953, %rd1952, %rd2838;
	add.s64 	%rd1954, %rd1953, %rd1951;
	add.s64 	%rd1955, %rd1954, %rd1948;
	add.s64 	%rd1956, %rd1955, %rd1663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10231,%dummy}, %rd1943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10232}, %rd1943;
	}
	shf.r.wrap.b32 	%r10233, %r10232, %r10231, 28;
	shf.r.wrap.b32 	%r10234, %r10231, %r10232, 28;
	mov.b64 	%rd1957, {%r10234, %r10233};
	shf.l.wrap.b32 	%r10235, %r10231, %r10232, 30;
	shf.l.wrap.b32 	%r10236, %r10232, %r10231, 30;
	mov.b64 	%rd1958, {%r10236, %r10235};
	xor.b64  	%rd1959, %rd1958, %rd1957;
	shf.l.wrap.b32 	%r10237, %r10231, %r10232, 25;
	shf.l.wrap.b32 	%r10238, %r10232, %r10231, 25;
	mov.b64 	%rd1960, {%r10238, %r10237};
	xor.b64  	%rd1961, %rd1959, %rd1960;
	xor.b64  	%rd1962, %rd1943, %rd1687;
	xor.b64  	%rd1963, %rd1943, %rd1919;
	and.b64  	%rd1964, %rd1963, %rd1962;
	xor.b64  	%rd1965, %rd1964, %rd1943;
	add.s64 	%rd1966, %rd1955, %rd1965;
	add.s64 	%rd1967, %rd1966, %rd1961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10239,%dummy}, %rd1956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10240}, %rd1956;
	}
	shf.r.wrap.b32 	%r10241, %r10240, %r10239, 14;
	shf.r.wrap.b32 	%r10242, %r10239, %r10240, 14;
	mov.b64 	%rd1968, {%r10242, %r10241};
	shf.r.wrap.b32 	%r10243, %r10240, %r10239, 18;
	shf.r.wrap.b32 	%r10244, %r10239, %r10240, 18;
	mov.b64 	%rd1969, {%r10244, %r10243};
	xor.b64  	%rd1970, %rd1969, %rd1968;
	shf.l.wrap.b32 	%r10245, %r10239, %r10240, 23;
	shf.l.wrap.b32 	%r10246, %r10240, %r10239, 23;
	mov.b64 	%rd1971, {%r10246, %r10245};
	xor.b64  	%rd1972, %rd1970, %rd1971;
	xor.b64  	%rd1973, %rd1932, %rd1908;
	and.b64  	%rd1974, %rd1956, %rd1973;
	xor.b64  	%rd1975, %rd1974, %rd1908;
	add.s64 	%rd1976, %rd1739, %rd1676;
	add.s64 	%rd1977, %rd1976, %rd2839;
	add.s64 	%rd1978, %rd1977, %rd1975;
	add.s64 	%rd1979, %rd1978, %rd1972;
	add.s64 	%rd1980, %rd1979, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10247,%dummy}, %rd1967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10248}, %rd1967;
	}
	shf.r.wrap.b32 	%r10249, %r10248, %r10247, 28;
	shf.r.wrap.b32 	%r10250, %r10247, %r10248, 28;
	mov.b64 	%rd1981, {%r10250, %r10249};
	shf.l.wrap.b32 	%r10251, %r10247, %r10248, 30;
	shf.l.wrap.b32 	%r10252, %r10248, %r10247, 30;
	mov.b64 	%rd1982, {%r10252, %r10251};
	xor.b64  	%rd1983, %rd1982, %rd1981;
	shf.l.wrap.b32 	%r10253, %r10247, %r10248, 25;
	shf.l.wrap.b32 	%r10254, %r10248, %r10247, 25;
	mov.b64 	%rd1984, {%r10254, %r10253};
	xor.b64  	%rd1985, %rd1983, %rd1984;
	xor.b64  	%rd1986, %rd1967, %rd1919;
	xor.b64  	%rd1987, %rd1967, %rd1943;
	and.b64  	%rd1988, %rd1987, %rd1986;
	xor.b64  	%rd1989, %rd1988, %rd1967;
	add.s64 	%rd1990, %rd1979, %rd1989;
	add.s64 	%rd1991, %rd1990, %rd1985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10255,%dummy}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10256}, %rd1980;
	}
	shf.r.wrap.b32 	%r10257, %r10256, %r10255, 14;
	shf.r.wrap.b32 	%r10258, %r10255, %r10256, 14;
	mov.b64 	%rd1992, {%r10258, %r10257};
	shf.r.wrap.b32 	%r10259, %r10256, %r10255, 18;
	shf.r.wrap.b32 	%r10260, %r10255, %r10256, 18;
	mov.b64 	%rd1993, {%r10260, %r10259};
	xor.b64  	%rd1994, %rd1993, %rd1992;
	shf.l.wrap.b32 	%r10261, %r10255, %r10256, 23;
	shf.l.wrap.b32 	%r10262, %r10256, %r10255, 23;
	mov.b64 	%rd1995, {%r10262, %r10261};
	xor.b64  	%rd1996, %rd1994, %rd1995;
	xor.b64  	%rd1997, %rd1956, %rd1932;
	and.b64  	%rd1998, %rd1980, %rd1997;
	xor.b64  	%rd1999, %rd1998, %rd1932;
	add.s64 	%rd2000, %rd1908, %rd1752;
	add.s64 	%rd2001, %rd2000, %rd2840;
	add.s64 	%rd2002, %rd2001, %rd1999;
	add.s64 	%rd2003, %rd2002, %rd1996;
	add.s64 	%rd2004, %rd2003, %rd1919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10263,%dummy}, %rd1991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10264}, %rd1991;
	}
	shf.r.wrap.b32 	%r10265, %r10264, %r10263, 28;
	shf.r.wrap.b32 	%r10266, %r10263, %r10264, 28;
	mov.b64 	%rd2005, {%r10266, %r10265};
	shf.l.wrap.b32 	%r10267, %r10263, %r10264, 30;
	shf.l.wrap.b32 	%r10268, %r10264, %r10263, 30;
	mov.b64 	%rd2006, {%r10268, %r10267};
	xor.b64  	%rd2007, %rd2006, %rd2005;
	shf.l.wrap.b32 	%r10269, %r10263, %r10264, 25;
	shf.l.wrap.b32 	%r10270, %r10264, %r10263, 25;
	mov.b64 	%rd2008, {%r10270, %r10269};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	xor.b64  	%rd2010, %rd1991, %rd1943;
	xor.b64  	%rd2011, %rd1991, %rd1967;
	and.b64  	%rd2012, %rd2011, %rd2010;
	xor.b64  	%rd2013, %rd2012, %rd1991;
	add.s64 	%rd2014, %rd2003, %rd2013;
	add.s64 	%rd2015, %rd2014, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10271,%dummy}, %rd2004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10272}, %rd2004;
	}
	shf.r.wrap.b32 	%r10273, %r10272, %r10271, 14;
	shf.r.wrap.b32 	%r10274, %r10271, %r10272, 14;
	mov.b64 	%rd2016, {%r10274, %r10273};
	shf.r.wrap.b32 	%r10275, %r10272, %r10271, 18;
	shf.r.wrap.b32 	%r10276, %r10271, %r10272, 18;
	mov.b64 	%rd2017, {%r10276, %r10275};
	xor.b64  	%rd2018, %rd2017, %rd2016;
	shf.l.wrap.b32 	%r10277, %r10271, %r10272, 23;
	shf.l.wrap.b32 	%r10278, %r10272, %r10271, 23;
	mov.b64 	%rd2019, {%r10278, %r10277};
	xor.b64  	%rd2020, %rd2018, %rd2019;
	xor.b64  	%rd2021, %rd1980, %rd1956;
	and.b64  	%rd2022, %rd2004, %rd2021;
	xor.b64  	%rd2023, %rd2022, %rd1956;
	add.s64 	%rd2024, %rd1932, %rd1765;
	add.s64 	%rd2025, %rd2024, %rd2841;
	add.s64 	%rd2026, %rd2025, %rd2023;
	add.s64 	%rd2027, %rd2026, %rd2020;
	add.s64 	%rd2028, %rd2027, %rd1943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10279,%dummy}, %rd2015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10280}, %rd2015;
	}
	shf.r.wrap.b32 	%r10281, %r10280, %r10279, 28;
	shf.r.wrap.b32 	%r10282, %r10279, %r10280, 28;
	mov.b64 	%rd2029, {%r10282, %r10281};
	shf.l.wrap.b32 	%r10283, %r10279, %r10280, 30;
	shf.l.wrap.b32 	%r10284, %r10280, %r10279, 30;
	mov.b64 	%rd2030, {%r10284, %r10283};
	xor.b64  	%rd2031, %rd2030, %rd2029;
	shf.l.wrap.b32 	%r10285, %r10279, %r10280, 25;
	shf.l.wrap.b32 	%r10286, %r10280, %r10279, 25;
	mov.b64 	%rd2032, {%r10286, %r10285};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	xor.b64  	%rd2034, %rd2015, %rd1967;
	xor.b64  	%rd2035, %rd2015, %rd1991;
	and.b64  	%rd2036, %rd2035, %rd2034;
	xor.b64  	%rd2037, %rd2036, %rd2015;
	add.s64 	%rd2038, %rd2027, %rd2037;
	add.s64 	%rd2039, %rd2038, %rd2033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10287,%dummy}, %rd2028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10288}, %rd2028;
	}
	shf.r.wrap.b32 	%r10289, %r10288, %r10287, 14;
	shf.r.wrap.b32 	%r10290, %r10287, %r10288, 14;
	mov.b64 	%rd2040, {%r10290, %r10289};
	shf.r.wrap.b32 	%r10291, %r10288, %r10287, 18;
	shf.r.wrap.b32 	%r10292, %r10287, %r10288, 18;
	mov.b64 	%rd2041, {%r10292, %r10291};
	xor.b64  	%rd2042, %rd2041, %rd2040;
	shf.l.wrap.b32 	%r10293, %r10287, %r10288, 23;
	shf.l.wrap.b32 	%r10294, %r10288, %r10287, 23;
	mov.b64 	%rd2043, {%r10294, %r10293};
	xor.b64  	%rd2044, %rd2042, %rd2043;
	xor.b64  	%rd2045, %rd2004, %rd1980;
	and.b64  	%rd2046, %rd2028, %rd2045;
	xor.b64  	%rd2047, %rd2046, %rd1980;
	add.s64 	%rd2048, %rd1956, %rd1778;
	add.s64 	%rd2049, %rd2048, %rd2842;
	add.s64 	%rd2050, %rd2049, %rd2047;
	add.s64 	%rd2051, %rd2050, %rd2044;
	add.s64 	%rd2052, %rd2051, %rd1967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10295,%dummy}, %rd2039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10296}, %rd2039;
	}
	shf.r.wrap.b32 	%r10297, %r10296, %r10295, 28;
	shf.r.wrap.b32 	%r10298, %r10295, %r10296, 28;
	mov.b64 	%rd2053, {%r10298, %r10297};
	shf.l.wrap.b32 	%r10299, %r10295, %r10296, 30;
	shf.l.wrap.b32 	%r10300, %r10296, %r10295, 30;
	mov.b64 	%rd2054, {%r10300, %r10299};
	xor.b64  	%rd2055, %rd2054, %rd2053;
	shf.l.wrap.b32 	%r10301, %r10295, %r10296, 25;
	shf.l.wrap.b32 	%r10302, %r10296, %r10295, 25;
	mov.b64 	%rd2056, {%r10302, %r10301};
	xor.b64  	%rd2057, %rd2055, %rd2056;
	xor.b64  	%rd2058, %rd2039, %rd1991;
	xor.b64  	%rd2059, %rd2039, %rd2015;
	and.b64  	%rd2060, %rd2059, %rd2058;
	xor.b64  	%rd2061, %rd2060, %rd2039;
	add.s64 	%rd2062, %rd2051, %rd2061;
	add.s64 	%rd2063, %rd2062, %rd2057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10303,%dummy}, %rd2052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10304}, %rd2052;
	}
	shf.r.wrap.b32 	%r10305, %r10304, %r10303, 14;
	shf.r.wrap.b32 	%r10306, %r10303, %r10304, 14;
	mov.b64 	%rd2064, {%r10306, %r10305};
	shf.r.wrap.b32 	%r10307, %r10304, %r10303, 18;
	shf.r.wrap.b32 	%r10308, %r10303, %r10304, 18;
	mov.b64 	%rd2065, {%r10308, %r10307};
	xor.b64  	%rd2066, %rd2065, %rd2064;
	shf.l.wrap.b32 	%r10309, %r10303, %r10304, 23;
	shf.l.wrap.b32 	%r10310, %r10304, %r10303, 23;
	mov.b64 	%rd2067, {%r10310, %r10309};
	xor.b64  	%rd2068, %rd2066, %rd2067;
	xor.b64  	%rd2069, %rd2028, %rd2004;
	and.b64  	%rd2070, %rd2052, %rd2069;
	xor.b64  	%rd2071, %rd2070, %rd2004;
	add.s64 	%rd2072, %rd1980, %rd1791;
	add.s64 	%rd2073, %rd2072, %rd2843;
	add.s64 	%rd2074, %rd2073, %rd2071;
	add.s64 	%rd2075, %rd2074, %rd2068;
	add.s64 	%rd2076, %rd2075, %rd1991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10311,%dummy}, %rd2063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10312}, %rd2063;
	}
	shf.r.wrap.b32 	%r10313, %r10312, %r10311, 28;
	shf.r.wrap.b32 	%r10314, %r10311, %r10312, 28;
	mov.b64 	%rd2077, {%r10314, %r10313};
	shf.l.wrap.b32 	%r10315, %r10311, %r10312, 30;
	shf.l.wrap.b32 	%r10316, %r10312, %r10311, 30;
	mov.b64 	%rd2078, {%r10316, %r10315};
	xor.b64  	%rd2079, %rd2078, %rd2077;
	shf.l.wrap.b32 	%r10317, %r10311, %r10312, 25;
	shf.l.wrap.b32 	%r10318, %r10312, %r10311, 25;
	mov.b64 	%rd2080, {%r10318, %r10317};
	xor.b64  	%rd2081, %rd2079, %rd2080;
	xor.b64  	%rd2082, %rd2063, %rd2015;
	xor.b64  	%rd2083, %rd2063, %rd2039;
	and.b64  	%rd2084, %rd2083, %rd2082;
	xor.b64  	%rd2085, %rd2084, %rd2063;
	add.s64 	%rd2086, %rd2075, %rd2085;
	add.s64 	%rd2087, %rd2086, %rd2081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10319,%dummy}, %rd2076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10320}, %rd2076;
	}
	shf.r.wrap.b32 	%r10321, %r10320, %r10319, 14;
	shf.r.wrap.b32 	%r10322, %r10319, %r10320, 14;
	mov.b64 	%rd2088, {%r10322, %r10321};
	shf.r.wrap.b32 	%r10323, %r10320, %r10319, 18;
	shf.r.wrap.b32 	%r10324, %r10319, %r10320, 18;
	mov.b64 	%rd2089, {%r10324, %r10323};
	xor.b64  	%rd2090, %rd2089, %rd2088;
	shf.l.wrap.b32 	%r10325, %r10319, %r10320, 23;
	shf.l.wrap.b32 	%r10326, %r10320, %r10319, 23;
	mov.b64 	%rd2091, {%r10326, %r10325};
	xor.b64  	%rd2092, %rd2090, %rd2091;
	xor.b64  	%rd2093, %rd2052, %rd2028;
	and.b64  	%rd2094, %rd2076, %rd2093;
	xor.b64  	%rd2095, %rd2094, %rd2028;
	add.s64 	%rd2096, %rd2004, %rd1804;
	add.s64 	%rd2097, %rd2096, %rd2844;
	add.s64 	%rd2098, %rd2097, %rd2095;
	add.s64 	%rd2099, %rd2098, %rd2092;
	add.s64 	%rd2100, %rd2099, %rd2015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10327,%dummy}, %rd2087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10328}, %rd2087;
	}
	shf.r.wrap.b32 	%r10329, %r10328, %r10327, 28;
	shf.r.wrap.b32 	%r10330, %r10327, %r10328, 28;
	mov.b64 	%rd2101, {%r10330, %r10329};
	shf.l.wrap.b32 	%r10331, %r10327, %r10328, 30;
	shf.l.wrap.b32 	%r10332, %r10328, %r10327, 30;
	mov.b64 	%rd2102, {%r10332, %r10331};
	xor.b64  	%rd2103, %rd2102, %rd2101;
	shf.l.wrap.b32 	%r10333, %r10327, %r10328, 25;
	shf.l.wrap.b32 	%r10334, %r10328, %r10327, 25;
	mov.b64 	%rd2104, {%r10334, %r10333};
	xor.b64  	%rd2105, %rd2103, %rd2104;
	xor.b64  	%rd2106, %rd2087, %rd2039;
	xor.b64  	%rd2107, %rd2087, %rd2063;
	and.b64  	%rd2108, %rd2107, %rd2106;
	xor.b64  	%rd2109, %rd2108, %rd2087;
	add.s64 	%rd2110, %rd2099, %rd2109;
	add.s64 	%rd2111, %rd2110, %rd2105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10335,%dummy}, %rd2100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10336}, %rd2100;
	}
	shf.r.wrap.b32 	%r10337, %r10336, %r10335, 14;
	shf.r.wrap.b32 	%r10338, %r10335, %r10336, 14;
	mov.b64 	%rd2112, {%r10338, %r10337};
	shf.r.wrap.b32 	%r10339, %r10336, %r10335, 18;
	shf.r.wrap.b32 	%r10340, %r10335, %r10336, 18;
	mov.b64 	%rd2113, {%r10340, %r10339};
	xor.b64  	%rd2114, %rd2113, %rd2112;
	shf.l.wrap.b32 	%r10341, %r10335, %r10336, 23;
	shf.l.wrap.b32 	%r10342, %r10336, %r10335, 23;
	mov.b64 	%rd2115, {%r10342, %r10341};
	xor.b64  	%rd2116, %rd2114, %rd2115;
	xor.b64  	%rd2117, %rd2076, %rd2052;
	and.b64  	%rd2118, %rd2100, %rd2117;
	xor.b64  	%rd2119, %rd2118, %rd2052;
	add.s64 	%rd2120, %rd2028, %rd1817;
	add.s64 	%rd2121, %rd2120, %rd2845;
	add.s64 	%rd2122, %rd2121, %rd2119;
	add.s64 	%rd2123, %rd2122, %rd2116;
	add.s64 	%rd2124, %rd2123, %rd2039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10343,%dummy}, %rd2111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10344}, %rd2111;
	}
	shf.r.wrap.b32 	%r10345, %r10344, %r10343, 28;
	shf.r.wrap.b32 	%r10346, %r10343, %r10344, 28;
	mov.b64 	%rd2125, {%r10346, %r10345};
	shf.l.wrap.b32 	%r10347, %r10343, %r10344, 30;
	shf.l.wrap.b32 	%r10348, %r10344, %r10343, 30;
	mov.b64 	%rd2126, {%r10348, %r10347};
	xor.b64  	%rd2127, %rd2126, %rd2125;
	shf.l.wrap.b32 	%r10349, %r10343, %r10344, 25;
	shf.l.wrap.b32 	%r10350, %r10344, %r10343, 25;
	mov.b64 	%rd2128, {%r10350, %r10349};
	xor.b64  	%rd2129, %rd2127, %rd2128;
	xor.b64  	%rd2130, %rd2111, %rd2063;
	xor.b64  	%rd2131, %rd2111, %rd2087;
	and.b64  	%rd2132, %rd2131, %rd2130;
	xor.b64  	%rd2133, %rd2132, %rd2111;
	add.s64 	%rd2134, %rd2123, %rd2133;
	add.s64 	%rd2135, %rd2134, %rd2129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10351,%dummy}, %rd2124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10352}, %rd2124;
	}
	shf.r.wrap.b32 	%r10353, %r10352, %r10351, 14;
	shf.r.wrap.b32 	%r10354, %r10351, %r10352, 14;
	mov.b64 	%rd2136, {%r10354, %r10353};
	shf.r.wrap.b32 	%r10355, %r10352, %r10351, 18;
	shf.r.wrap.b32 	%r10356, %r10351, %r10352, 18;
	mov.b64 	%rd2137, {%r10356, %r10355};
	xor.b64  	%rd2138, %rd2137, %rd2136;
	shf.l.wrap.b32 	%r10357, %r10351, %r10352, 23;
	shf.l.wrap.b32 	%r10358, %r10352, %r10351, 23;
	mov.b64 	%rd2139, {%r10358, %r10357};
	xor.b64  	%rd2140, %rd2138, %rd2139;
	xor.b64  	%rd2141, %rd2100, %rd2076;
	and.b64  	%rd2142, %rd2124, %rd2141;
	xor.b64  	%rd2143, %rd2142, %rd2076;
	add.s64 	%rd2144, %rd2052, %rd1830;
	add.s64 	%rd2145, %rd2144, %rd2846;
	add.s64 	%rd2146, %rd2145, %rd2143;
	add.s64 	%rd2147, %rd2146, %rd2140;
	add.s64 	%rd2148, %rd2147, %rd2063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10359,%dummy}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10360}, %rd2135;
	}
	shf.r.wrap.b32 	%r10361, %r10360, %r10359, 28;
	shf.r.wrap.b32 	%r10362, %r10359, %r10360, 28;
	mov.b64 	%rd2149, {%r10362, %r10361};
	shf.l.wrap.b32 	%r10363, %r10359, %r10360, 30;
	shf.l.wrap.b32 	%r10364, %r10360, %r10359, 30;
	mov.b64 	%rd2150, {%r10364, %r10363};
	xor.b64  	%rd2151, %rd2150, %rd2149;
	shf.l.wrap.b32 	%r10365, %r10359, %r10360, 25;
	shf.l.wrap.b32 	%r10366, %r10360, %r10359, 25;
	mov.b64 	%rd2152, {%r10366, %r10365};
	xor.b64  	%rd2153, %rd2151, %rd2152;
	xor.b64  	%rd2154, %rd2135, %rd2087;
	xor.b64  	%rd2155, %rd2135, %rd2111;
	and.b64  	%rd2156, %rd2155, %rd2154;
	xor.b64  	%rd2157, %rd2156, %rd2135;
	add.s64 	%rd2158, %rd2147, %rd2157;
	add.s64 	%rd2159, %rd2158, %rd2153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10367,%dummy}, %rd2148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10368}, %rd2148;
	}
	shf.r.wrap.b32 	%r10369, %r10368, %r10367, 14;
	shf.r.wrap.b32 	%r10370, %r10367, %r10368, 14;
	mov.b64 	%rd2160, {%r10370, %r10369};
	shf.r.wrap.b32 	%r10371, %r10368, %r10367, 18;
	shf.r.wrap.b32 	%r10372, %r10367, %r10368, 18;
	mov.b64 	%rd2161, {%r10372, %r10371};
	xor.b64  	%rd2162, %rd2161, %rd2160;
	shf.l.wrap.b32 	%r10373, %r10367, %r10368, 23;
	shf.l.wrap.b32 	%r10374, %r10368, %r10367, 23;
	mov.b64 	%rd2163, {%r10374, %r10373};
	xor.b64  	%rd2164, %rd2162, %rd2163;
	xor.b64  	%rd2165, %rd2124, %rd2100;
	and.b64  	%rd2166, %rd2148, %rd2165;
	xor.b64  	%rd2167, %rd2166, %rd2100;
	add.s64 	%rd2168, %rd2076, %rd1843;
	add.s64 	%rd2169, %rd2168, %rd2847;
	add.s64 	%rd2170, %rd2169, %rd2167;
	add.s64 	%rd2171, %rd2170, %rd2164;
	add.s64 	%rd2172, %rd2171, %rd2087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10375,%dummy}, %rd2159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10376}, %rd2159;
	}
	shf.r.wrap.b32 	%r10377, %r10376, %r10375, 28;
	shf.r.wrap.b32 	%r10378, %r10375, %r10376, 28;
	mov.b64 	%rd2173, {%r10378, %r10377};
	shf.l.wrap.b32 	%r10379, %r10375, %r10376, 30;
	shf.l.wrap.b32 	%r10380, %r10376, %r10375, 30;
	mov.b64 	%rd2174, {%r10380, %r10379};
	xor.b64  	%rd2175, %rd2174, %rd2173;
	shf.l.wrap.b32 	%r10381, %r10375, %r10376, 25;
	shf.l.wrap.b32 	%r10382, %r10376, %r10375, 25;
	mov.b64 	%rd2176, {%r10382, %r10381};
	xor.b64  	%rd2177, %rd2175, %rd2176;
	xor.b64  	%rd2178, %rd2159, %rd2111;
	xor.b64  	%rd2179, %rd2159, %rd2135;
	and.b64  	%rd2180, %rd2179, %rd2178;
	xor.b64  	%rd2181, %rd2180, %rd2159;
	add.s64 	%rd2182, %rd2171, %rd2181;
	add.s64 	%rd2183, %rd2182, %rd2177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10383,%dummy}, %rd2172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10384}, %rd2172;
	}
	shf.r.wrap.b32 	%r10385, %r10384, %r10383, 14;
	shf.r.wrap.b32 	%r10386, %r10383, %r10384, 14;
	mov.b64 	%rd2184, {%r10386, %r10385};
	shf.r.wrap.b32 	%r10387, %r10384, %r10383, 18;
	shf.r.wrap.b32 	%r10388, %r10383, %r10384, 18;
	mov.b64 	%rd2185, {%r10388, %r10387};
	xor.b64  	%rd2186, %rd2185, %rd2184;
	shf.l.wrap.b32 	%r10389, %r10383, %r10384, 23;
	shf.l.wrap.b32 	%r10390, %r10384, %r10383, 23;
	mov.b64 	%rd2187, {%r10390, %r10389};
	xor.b64  	%rd2188, %rd2186, %rd2187;
	xor.b64  	%rd2189, %rd2148, %rd2124;
	and.b64  	%rd2190, %rd2172, %rd2189;
	xor.b64  	%rd2191, %rd2190, %rd2124;
	add.s64 	%rd2192, %rd2100, %rd1856;
	add.s64 	%rd2193, %rd2192, %rd2848;
	add.s64 	%rd2194, %rd2193, %rd2191;
	add.s64 	%rd2195, %rd2194, %rd2188;
	add.s64 	%rd2196, %rd2195, %rd2111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10391,%dummy}, %rd2183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10392}, %rd2183;
	}
	shf.r.wrap.b32 	%r10393, %r10392, %r10391, 28;
	shf.r.wrap.b32 	%r10394, %r10391, %r10392, 28;
	mov.b64 	%rd2197, {%r10394, %r10393};
	shf.l.wrap.b32 	%r10395, %r10391, %r10392, 30;
	shf.l.wrap.b32 	%r10396, %r10392, %r10391, 30;
	mov.b64 	%rd2198, {%r10396, %r10395};
	xor.b64  	%rd2199, %rd2198, %rd2197;
	shf.l.wrap.b32 	%r10397, %r10391, %r10392, 25;
	shf.l.wrap.b32 	%r10398, %r10392, %r10391, 25;
	mov.b64 	%rd2200, {%r10398, %r10397};
	xor.b64  	%rd2201, %rd2199, %rd2200;
	xor.b64  	%rd2202, %rd2183, %rd2135;
	xor.b64  	%rd2203, %rd2183, %rd2159;
	and.b64  	%rd2204, %rd2203, %rd2202;
	xor.b64  	%rd2205, %rd2204, %rd2183;
	add.s64 	%rd2206, %rd2195, %rd2205;
	add.s64 	%rd2207, %rd2206, %rd2201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10399,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10400}, %rd2196;
	}
	shf.r.wrap.b32 	%r10401, %r10400, %r10399, 14;
	shf.r.wrap.b32 	%r10402, %r10399, %r10400, 14;
	mov.b64 	%rd2208, {%r10402, %r10401};
	shf.r.wrap.b32 	%r10403, %r10400, %r10399, 18;
	shf.r.wrap.b32 	%r10404, %r10399, %r10400, 18;
	mov.b64 	%rd2209, {%r10404, %r10403};
	xor.b64  	%rd2210, %rd2209, %rd2208;
	shf.l.wrap.b32 	%r10405, %r10399, %r10400, 23;
	shf.l.wrap.b32 	%r10406, %r10400, %r10399, 23;
	mov.b64 	%rd2211, {%r10406, %r10405};
	xor.b64  	%rd2212, %rd2210, %rd2211;
	xor.b64  	%rd2213, %rd2172, %rd2148;
	and.b64  	%rd2214, %rd2196, %rd2213;
	xor.b64  	%rd2215, %rd2214, %rd2148;
	add.s64 	%rd2216, %rd2124, %rd1869;
	add.s64 	%rd2217, %rd2216, %rd2849;
	add.s64 	%rd2218, %rd2217, %rd2215;
	add.s64 	%rd2219, %rd2218, %rd2212;
	add.s64 	%rd2220, %rd2219, %rd2135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10407,%dummy}, %rd2207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10408}, %rd2207;
	}
	shf.r.wrap.b32 	%r10409, %r10408, %r10407, 28;
	shf.r.wrap.b32 	%r10410, %r10407, %r10408, 28;
	mov.b64 	%rd2221, {%r10410, %r10409};
	shf.l.wrap.b32 	%r10411, %r10407, %r10408, 30;
	shf.l.wrap.b32 	%r10412, %r10408, %r10407, 30;
	mov.b64 	%rd2222, {%r10412, %r10411};
	xor.b64  	%rd2223, %rd2222, %rd2221;
	shf.l.wrap.b32 	%r10413, %r10407, %r10408, 25;
	shf.l.wrap.b32 	%r10414, %r10408, %r10407, 25;
	mov.b64 	%rd2224, {%r10414, %r10413};
	xor.b64  	%rd2225, %rd2223, %rd2224;
	xor.b64  	%rd2226, %rd2207, %rd2159;
	xor.b64  	%rd2227, %rd2207, %rd2183;
	and.b64  	%rd2228, %rd2227, %rd2226;
	xor.b64  	%rd2229, %rd2228, %rd2207;
	add.s64 	%rd2230, %rd2219, %rd2229;
	add.s64 	%rd2231, %rd2230, %rd2225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10415,%dummy}, %rd2220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10416}, %rd2220;
	}
	shf.r.wrap.b32 	%r10417, %r10416, %r10415, 14;
	shf.r.wrap.b32 	%r10418, %r10415, %r10416, 14;
	mov.b64 	%rd2232, {%r10418, %r10417};
	shf.r.wrap.b32 	%r10419, %r10416, %r10415, 18;
	shf.r.wrap.b32 	%r10420, %r10415, %r10416, 18;
	mov.b64 	%rd2233, {%r10420, %r10419};
	xor.b64  	%rd2234, %rd2233, %rd2232;
	shf.l.wrap.b32 	%r10421, %r10415, %r10416, 23;
	shf.l.wrap.b32 	%r10422, %r10416, %r10415, 23;
	mov.b64 	%rd2235, {%r10422, %r10421};
	xor.b64  	%rd2236, %rd2234, %rd2235;
	xor.b64  	%rd2237, %rd2196, %rd2172;
	and.b64  	%rd2238, %rd2220, %rd2237;
	xor.b64  	%rd2239, %rd2238, %rd2172;
	add.s64 	%rd2240, %rd2148, %rd1882;
	add.s64 	%rd2241, %rd2240, %rd2850;
	add.s64 	%rd2242, %rd2241, %rd2239;
	add.s64 	%rd2243, %rd2242, %rd2236;
	add.s64 	%rd2244, %rd2243, %rd2159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10423,%dummy}, %rd2231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10424}, %rd2231;
	}
	shf.r.wrap.b32 	%r10425, %r10424, %r10423, 28;
	shf.r.wrap.b32 	%r10426, %r10423, %r10424, 28;
	mov.b64 	%rd2245, {%r10426, %r10425};
	shf.l.wrap.b32 	%r10427, %r10423, %r10424, 30;
	shf.l.wrap.b32 	%r10428, %r10424, %r10423, 30;
	mov.b64 	%rd2246, {%r10428, %r10427};
	xor.b64  	%rd2247, %rd2246, %rd2245;
	shf.l.wrap.b32 	%r10429, %r10423, %r10424, 25;
	shf.l.wrap.b32 	%r10430, %r10424, %r10423, 25;
	mov.b64 	%rd2248, {%r10430, %r10429};
	xor.b64  	%rd2249, %rd2247, %rd2248;
	xor.b64  	%rd2250, %rd2231, %rd2183;
	xor.b64  	%rd2251, %rd2231, %rd2207;
	and.b64  	%rd2252, %rd2251, %rd2250;
	xor.b64  	%rd2253, %rd2252, %rd2231;
	add.s64 	%rd2254, %rd2243, %rd2253;
	add.s64 	%rd2255, %rd2254, %rd2249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10431,%dummy}, %rd2244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10432}, %rd2244;
	}
	shf.r.wrap.b32 	%r10433, %r10432, %r10431, 14;
	shf.r.wrap.b32 	%r10434, %r10431, %r10432, 14;
	mov.b64 	%rd2256, {%r10434, %r10433};
	shf.r.wrap.b32 	%r10435, %r10432, %r10431, 18;
	shf.r.wrap.b32 	%r10436, %r10431, %r10432, 18;
	mov.b64 	%rd2257, {%r10436, %r10435};
	xor.b64  	%rd2258, %rd2257, %rd2256;
	shf.l.wrap.b32 	%r10437, %r10431, %r10432, 23;
	shf.l.wrap.b32 	%r10438, %r10432, %r10431, 23;
	mov.b64 	%rd2259, {%r10438, %r10437};
	xor.b64  	%rd2260, %rd2258, %rd2259;
	xor.b64  	%rd2261, %rd2220, %rd2196;
	and.b64  	%rd2262, %rd2244, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd2196;
	add.s64 	%rd2264, %rd2172, %rd1895;
	add.s64 	%rd2265, %rd2264, %rd2851;
	add.s64 	%rd2266, %rd2265, %rd2263;
	add.s64 	%rd2267, %rd2266, %rd2260;
	add.s64 	%rd2268, %rd2267, %rd2183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10439,%dummy}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10440}, %rd2255;
	}
	shf.r.wrap.b32 	%r10441, %r10440, %r10439, 28;
	shf.r.wrap.b32 	%r10442, %r10439, %r10440, 28;
	mov.b64 	%rd2269, {%r10442, %r10441};
	shf.l.wrap.b32 	%r10443, %r10439, %r10440, 30;
	shf.l.wrap.b32 	%r10444, %r10440, %r10439, 30;
	mov.b64 	%rd2270, {%r10444, %r10443};
	xor.b64  	%rd2271, %rd2270, %rd2269;
	shf.l.wrap.b32 	%r10445, %r10439, %r10440, 25;
	shf.l.wrap.b32 	%r10446, %r10440, %r10439, 25;
	mov.b64 	%rd2272, {%r10446, %r10445};
	xor.b64  	%rd2273, %rd2271, %rd2272;
	xor.b64  	%rd2274, %rd2255, %rd2207;
	xor.b64  	%rd2275, %rd2255, %rd2231;
	and.b64  	%rd2276, %rd2275, %rd2274;
	xor.b64  	%rd2277, %rd2276, %rd2255;
	add.s64 	%rd2278, %rd2267, %rd2277;
	add.s64 	%rd2279, %rd2278, %rd2273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10447,%dummy}, %rd1882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10448}, %rd1882;
	}
	shf.r.wrap.b32 	%r10449, %r10448, %r10447, 19;
	shf.r.wrap.b32 	%r10450, %r10447, %r10448, 19;
	mov.b64 	%rd2280, {%r10450, %r10449};
	shf.l.wrap.b32 	%r10451, %r10447, %r10448, 3;
	shf.l.wrap.b32 	%r10452, %r10448, %r10447, 3;
	mov.b64 	%rd2281, {%r10452, %r10451};
	shr.u64 	%rd2282, %rd1882, 6;
	xor.b64  	%rd2283, %rd2280, %rd2282;
	xor.b64  	%rd2284, %rd2283, %rd2281;
	shf.r.wrap.b32 	%r10453, %r10062, %r10061, 1;
	shf.r.wrap.b32 	%r10454, %r10061, %r10062, 1;
	mov.b64 	%rd2285, {%r10454, %r10453};
	shf.r.wrap.b32 	%r10455, %r10062, %r10061, 8;
	shf.r.wrap.b32 	%r10456, %r10061, %r10062, 8;
	mov.b64 	%rd2286, {%r10456, %r10455};
	shr.u64 	%rd2287, %rd1713, 7;
	xor.b64  	%rd2288, %rd2285, %rd2287;
	xor.b64  	%rd2289, %rd2288, %rd2286;
	add.s64 	%rd2290, %rd1700, %rd1817;
	add.s64 	%rd2291, %rd2290, %rd2284;
	add.s64 	%rd2292, %rd2291, %rd2289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10457,%dummy}, %rd1895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10458}, %rd1895;
	}
	shf.r.wrap.b32 	%r10459, %r10458, %r10457, 19;
	shf.r.wrap.b32 	%r10460, %r10457, %r10458, 19;
	mov.b64 	%rd2293, {%r10460, %r10459};
	shf.l.wrap.b32 	%r10461, %r10457, %r10458, 3;
	shf.l.wrap.b32 	%r10462, %r10458, %r10457, 3;
	mov.b64 	%rd2294, {%r10462, %r10461};
	shr.u64 	%rd2295, %rd1895, 6;
	xor.b64  	%rd2296, %rd2293, %rd2295;
	xor.b64  	%rd2297, %rd2296, %rd2294;
	shf.r.wrap.b32 	%r10463, %r10072, %r10071, 1;
	shf.r.wrap.b32 	%r10464, %r10071, %r10072, 1;
	mov.b64 	%rd2298, {%r10464, %r10463};
	shf.r.wrap.b32 	%r10465, %r10072, %r10071, 8;
	shf.r.wrap.b32 	%r10466, %r10071, %r10072, 8;
	mov.b64 	%rd2299, {%r10466, %r10465};
	shr.u64 	%rd2300, %rd1726, 7;
	xor.b64  	%rd2301, %rd2298, %rd2300;
	xor.b64  	%rd2302, %rd2301, %rd2299;
	add.s64 	%rd2303, %rd1713, %rd1830;
	add.s64 	%rd2304, %rd2303, %rd2297;
	add.s64 	%rd2305, %rd2304, %rd2302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10467,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10468}, %rd2292;
	}
	shf.r.wrap.b32 	%r10469, %r10468, %r10467, 19;
	shf.r.wrap.b32 	%r10470, %r10467, %r10468, 19;
	mov.b64 	%rd2306, {%r10470, %r10469};
	shf.l.wrap.b32 	%r10471, %r10467, %r10468, 3;
	shf.l.wrap.b32 	%r10472, %r10468, %r10467, 3;
	mov.b64 	%rd2307, {%r10472, %r10471};
	shr.u64 	%rd2308, %rd2292, 6;
	xor.b64  	%rd2309, %rd2306, %rd2308;
	xor.b64  	%rd2310, %rd2309, %rd2307;
	shf.r.wrap.b32 	%r10473, %r10082, %r10081, 1;
	shf.r.wrap.b32 	%r10474, %r10081, %r10082, 1;
	mov.b64 	%rd2311, {%r10474, %r10473};
	shf.r.wrap.b32 	%r10475, %r10082, %r10081, 8;
	shf.r.wrap.b32 	%r10476, %r10081, %r10082, 8;
	mov.b64 	%rd2312, {%r10476, %r10475};
	shr.u64 	%rd2313, %rd1739, 7;
	xor.b64  	%rd2314, %rd2311, %rd2313;
	xor.b64  	%rd2315, %rd2314, %rd2312;
	add.s64 	%rd2316, %rd1726, %rd1843;
	add.s64 	%rd2317, %rd2316, %rd2310;
	add.s64 	%rd2318, %rd2317, %rd2315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10477,%dummy}, %rd2305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10478}, %rd2305;
	}
	shf.r.wrap.b32 	%r10479, %r10478, %r10477, 19;
	shf.r.wrap.b32 	%r10480, %r10477, %r10478, 19;
	mov.b64 	%rd2319, {%r10480, %r10479};
	shf.l.wrap.b32 	%r10481, %r10477, %r10478, 3;
	shf.l.wrap.b32 	%r10482, %r10478, %r10477, 3;
	mov.b64 	%rd2320, {%r10482, %r10481};
	shr.u64 	%rd2321, %rd2305, 6;
	xor.b64  	%rd2322, %rd2319, %rd2321;
	xor.b64  	%rd2323, %rd2322, %rd2320;
	shf.r.wrap.b32 	%r10483, %r10092, %r10091, 1;
	shf.r.wrap.b32 	%r10484, %r10091, %r10092, 1;
	mov.b64 	%rd2324, {%r10484, %r10483};
	shf.r.wrap.b32 	%r10485, %r10092, %r10091, 8;
	shf.r.wrap.b32 	%r10486, %r10091, %r10092, 8;
	mov.b64 	%rd2325, {%r10486, %r10485};
	shr.u64 	%rd2326, %rd1752, 7;
	xor.b64  	%rd2327, %rd2324, %rd2326;
	xor.b64  	%rd2328, %rd2327, %rd2325;
	add.s64 	%rd2329, %rd1739, %rd1856;
	add.s64 	%rd2330, %rd2329, %rd2323;
	add.s64 	%rd2331, %rd2330, %rd2328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10487,%dummy}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10488}, %rd2318;
	}
	shf.r.wrap.b32 	%r10489, %r10488, %r10487, 19;
	shf.r.wrap.b32 	%r10490, %r10487, %r10488, 19;
	mov.b64 	%rd2332, {%r10490, %r10489};
	shf.l.wrap.b32 	%r10491, %r10487, %r10488, 3;
	shf.l.wrap.b32 	%r10492, %r10488, %r10487, 3;
	mov.b64 	%rd2333, {%r10492, %r10491};
	shr.u64 	%rd2334, %rd2318, 6;
	xor.b64  	%rd2335, %rd2332, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2333;
	shf.r.wrap.b32 	%r10493, %r10102, %r10101, 1;
	shf.r.wrap.b32 	%r10494, %r10101, %r10102, 1;
	mov.b64 	%rd2337, {%r10494, %r10493};
	shf.r.wrap.b32 	%r10495, %r10102, %r10101, 8;
	shf.r.wrap.b32 	%r10496, %r10101, %r10102, 8;
	mov.b64 	%rd2338, {%r10496, %r10495};
	shr.u64 	%rd2339, %rd1765, 7;
	xor.b64  	%rd2340, %rd2337, %rd2339;
	xor.b64  	%rd2341, %rd2340, %rd2338;
	add.s64 	%rd2342, %rd1752, %rd1869;
	add.s64 	%rd2343, %rd2342, %rd2336;
	add.s64 	%rd2344, %rd2343, %rd2341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10497,%dummy}, %rd2331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10498}, %rd2331;
	}
	shf.r.wrap.b32 	%r10499, %r10498, %r10497, 19;
	shf.r.wrap.b32 	%r10500, %r10497, %r10498, 19;
	mov.b64 	%rd2345, {%r10500, %r10499};
	shf.l.wrap.b32 	%r10501, %r10497, %r10498, 3;
	shf.l.wrap.b32 	%r10502, %r10498, %r10497, 3;
	mov.b64 	%rd2346, {%r10502, %r10501};
	shr.u64 	%rd2347, %rd2331, 6;
	xor.b64  	%rd2348, %rd2345, %rd2347;
	xor.b64  	%rd2349, %rd2348, %rd2346;
	shf.r.wrap.b32 	%r10503, %r10112, %r10111, 1;
	shf.r.wrap.b32 	%r10504, %r10111, %r10112, 1;
	mov.b64 	%rd2350, {%r10504, %r10503};
	shf.r.wrap.b32 	%r10505, %r10112, %r10111, 8;
	shf.r.wrap.b32 	%r10506, %r10111, %r10112, 8;
	mov.b64 	%rd2351, {%r10506, %r10505};
	shr.u64 	%rd2352, %rd1778, 7;
	xor.b64  	%rd2353, %rd2350, %rd2352;
	xor.b64  	%rd2354, %rd2353, %rd2351;
	add.s64 	%rd2355, %rd1765, %rd1882;
	add.s64 	%rd2356, %rd2355, %rd2349;
	add.s64 	%rd2357, %rd2356, %rd2354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10507,%dummy}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10508}, %rd2344;
	}
	shf.r.wrap.b32 	%r10509, %r10508, %r10507, 19;
	shf.r.wrap.b32 	%r10510, %r10507, %r10508, 19;
	mov.b64 	%rd2358, {%r10510, %r10509};
	shf.l.wrap.b32 	%r10511, %r10507, %r10508, 3;
	shf.l.wrap.b32 	%r10512, %r10508, %r10507, 3;
	mov.b64 	%rd2359, {%r10512, %r10511};
	shr.u64 	%rd2360, %rd2344, 6;
	xor.b64  	%rd2361, %rd2358, %rd2360;
	xor.b64  	%rd2362, %rd2361, %rd2359;
	shf.r.wrap.b32 	%r10513, %r10122, %r10121, 1;
	shf.r.wrap.b32 	%r10514, %r10121, %r10122, 1;
	mov.b64 	%rd2363, {%r10514, %r10513};
	shf.r.wrap.b32 	%r10515, %r10122, %r10121, 8;
	shf.r.wrap.b32 	%r10516, %r10121, %r10122, 8;
	mov.b64 	%rd2364, {%r10516, %r10515};
	shr.u64 	%rd2365, %rd1791, 7;
	xor.b64  	%rd2366, %rd2363, %rd2365;
	xor.b64  	%rd2367, %rd2366, %rd2364;
	add.s64 	%rd2368, %rd1778, %rd1895;
	add.s64 	%rd2369, %rd2368, %rd2362;
	add.s64 	%rd2370, %rd2369, %rd2367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10517,%dummy}, %rd2357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10518}, %rd2357;
	}
	shf.r.wrap.b32 	%r10519, %r10518, %r10517, 19;
	shf.r.wrap.b32 	%r10520, %r10517, %r10518, 19;
	mov.b64 	%rd2371, {%r10520, %r10519};
	shf.l.wrap.b32 	%r10521, %r10517, %r10518, 3;
	shf.l.wrap.b32 	%r10522, %r10518, %r10517, 3;
	mov.b64 	%rd2372, {%r10522, %r10521};
	shr.u64 	%rd2373, %rd2357, 6;
	xor.b64  	%rd2374, %rd2371, %rd2373;
	xor.b64  	%rd2375, %rd2374, %rd2372;
	shf.r.wrap.b32 	%r10523, %r10132, %r10131, 1;
	shf.r.wrap.b32 	%r10524, %r10131, %r10132, 1;
	mov.b64 	%rd2376, {%r10524, %r10523};
	shf.r.wrap.b32 	%r10525, %r10132, %r10131, 8;
	shf.r.wrap.b32 	%r10526, %r10131, %r10132, 8;
	mov.b64 	%rd2377, {%r10526, %r10525};
	shr.u64 	%rd2378, %rd1804, 7;
	xor.b64  	%rd2379, %rd2376, %rd2378;
	xor.b64  	%rd2380, %rd2379, %rd2377;
	add.s64 	%rd2381, %rd2292, %rd1791;
	add.s64 	%rd2382, %rd2381, %rd2375;
	add.s64 	%rd2383, %rd2382, %rd2380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10527,%dummy}, %rd2370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10528}, %rd2370;
	}
	shf.r.wrap.b32 	%r10529, %r10528, %r10527, 19;
	shf.r.wrap.b32 	%r10530, %r10527, %r10528, 19;
	mov.b64 	%rd2384, {%r10530, %r10529};
	shf.l.wrap.b32 	%r10531, %r10527, %r10528, 3;
	shf.l.wrap.b32 	%r10532, %r10528, %r10527, 3;
	mov.b64 	%rd2385, {%r10532, %r10531};
	shr.u64 	%rd2386, %rd2370, 6;
	xor.b64  	%rd2387, %rd2384, %rd2386;
	xor.b64  	%rd2388, %rd2387, %rd2385;
	shf.r.wrap.b32 	%r10533, %r10142, %r10141, 1;
	shf.r.wrap.b32 	%r10534, %r10141, %r10142, 1;
	mov.b64 	%rd2389, {%r10534, %r10533};
	shf.r.wrap.b32 	%r10535, %r10142, %r10141, 8;
	shf.r.wrap.b32 	%r10536, %r10141, %r10142, 8;
	mov.b64 	%rd2390, {%r10536, %r10535};
	shr.u64 	%rd2391, %rd1817, 7;
	xor.b64  	%rd2392, %rd2389, %rd2391;
	xor.b64  	%rd2393, %rd2392, %rd2390;
	add.s64 	%rd2394, %rd2305, %rd1804;
	add.s64 	%rd2395, %rd2394, %rd2388;
	add.s64 	%rd2396, %rd2395, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10537,%dummy}, %rd2383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10538}, %rd2383;
	}
	shf.r.wrap.b32 	%r10539, %r10538, %r10537, 19;
	shf.r.wrap.b32 	%r10540, %r10537, %r10538, 19;
	mov.b64 	%rd2397, {%r10540, %r10539};
	shf.l.wrap.b32 	%r10541, %r10537, %r10538, 3;
	shf.l.wrap.b32 	%r10542, %r10538, %r10537, 3;
	mov.b64 	%rd2398, {%r10542, %r10541};
	shr.u64 	%rd2399, %rd2383, 6;
	xor.b64  	%rd2400, %rd2397, %rd2399;
	xor.b64  	%rd2401, %rd2400, %rd2398;
	shf.r.wrap.b32 	%r10543, %r10152, %r10151, 1;
	shf.r.wrap.b32 	%r10544, %r10151, %r10152, 1;
	mov.b64 	%rd2402, {%r10544, %r10543};
	shf.r.wrap.b32 	%r10545, %r10152, %r10151, 8;
	shf.r.wrap.b32 	%r10546, %r10151, %r10152, 8;
	mov.b64 	%rd2403, {%r10546, %r10545};
	shr.u64 	%rd2404, %rd1830, 7;
	xor.b64  	%rd2405, %rd2402, %rd2404;
	xor.b64  	%rd2406, %rd2405, %rd2403;
	add.s64 	%rd2407, %rd2318, %rd1817;
	add.s64 	%rd2408, %rd2407, %rd2401;
	add.s64 	%rd2409, %rd2408, %rd2406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10547,%dummy}, %rd2396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10548}, %rd2396;
	}
	shf.r.wrap.b32 	%r10549, %r10548, %r10547, 19;
	shf.r.wrap.b32 	%r10550, %r10547, %r10548, 19;
	mov.b64 	%rd2410, {%r10550, %r10549};
	shf.l.wrap.b32 	%r10551, %r10547, %r10548, 3;
	shf.l.wrap.b32 	%r10552, %r10548, %r10547, 3;
	mov.b64 	%rd2411, {%r10552, %r10551};
	shr.u64 	%rd2412, %rd2396, 6;
	xor.b64  	%rd2413, %rd2410, %rd2412;
	xor.b64  	%rd2414, %rd2413, %rd2411;
	shf.r.wrap.b32 	%r10553, %r10162, %r10161, 1;
	shf.r.wrap.b32 	%r10554, %r10161, %r10162, 1;
	mov.b64 	%rd2415, {%r10554, %r10553};
	shf.r.wrap.b32 	%r10555, %r10162, %r10161, 8;
	shf.r.wrap.b32 	%r10556, %r10161, %r10162, 8;
	mov.b64 	%rd2416, {%r10556, %r10555};
	shr.u64 	%rd2417, %rd1843, 7;
	xor.b64  	%rd2418, %rd2415, %rd2417;
	xor.b64  	%rd2419, %rd2418, %rd2416;
	add.s64 	%rd2420, %rd2331, %rd1830;
	add.s64 	%rd2421, %rd2420, %rd2414;
	add.s64 	%rd2422, %rd2421, %rd2419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10557,%dummy}, %rd2409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10558}, %rd2409;
	}
	shf.r.wrap.b32 	%r10559, %r10558, %r10557, 19;
	shf.r.wrap.b32 	%r10560, %r10557, %r10558, 19;
	mov.b64 	%rd2423, {%r10560, %r10559};
	shf.l.wrap.b32 	%r10561, %r10557, %r10558, 3;
	shf.l.wrap.b32 	%r10562, %r10558, %r10557, 3;
	mov.b64 	%rd2424, {%r10562, %r10561};
	shr.u64 	%rd2425, %rd2409, 6;
	xor.b64  	%rd2426, %rd2423, %rd2425;
	xor.b64  	%rd2427, %rd2426, %rd2424;
	shf.r.wrap.b32 	%r10563, %r10172, %r10171, 1;
	shf.r.wrap.b32 	%r10564, %r10171, %r10172, 1;
	mov.b64 	%rd2428, {%r10564, %r10563};
	shf.r.wrap.b32 	%r10565, %r10172, %r10171, 8;
	shf.r.wrap.b32 	%r10566, %r10171, %r10172, 8;
	mov.b64 	%rd2429, {%r10566, %r10565};
	shr.u64 	%rd2430, %rd1856, 7;
	xor.b64  	%rd2431, %rd2428, %rd2430;
	xor.b64  	%rd2432, %rd2431, %rd2429;
	add.s64 	%rd2433, %rd2344, %rd1843;
	add.s64 	%rd2434, %rd2433, %rd2427;
	add.s64 	%rd2435, %rd2434, %rd2432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10567,%dummy}, %rd2422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10568}, %rd2422;
	}
	shf.r.wrap.b32 	%r10569, %r10568, %r10567, 19;
	shf.r.wrap.b32 	%r10570, %r10567, %r10568, 19;
	mov.b64 	%rd2436, {%r10570, %r10569};
	shf.l.wrap.b32 	%r10571, %r10567, %r10568, 3;
	shf.l.wrap.b32 	%r10572, %r10568, %r10567, 3;
	mov.b64 	%rd2437, {%r10572, %r10571};
	shr.u64 	%rd2438, %rd2422, 6;
	xor.b64  	%rd2439, %rd2436, %rd2438;
	xor.b64  	%rd2440, %rd2439, %rd2437;
	shf.r.wrap.b32 	%r10573, %r10182, %r10181, 1;
	shf.r.wrap.b32 	%r10574, %r10181, %r10182, 1;
	mov.b64 	%rd2441, {%r10574, %r10573};
	shf.r.wrap.b32 	%r10575, %r10182, %r10181, 8;
	shf.r.wrap.b32 	%r10576, %r10181, %r10182, 8;
	mov.b64 	%rd2442, {%r10576, %r10575};
	shr.u64 	%rd2443, %rd1869, 7;
	xor.b64  	%rd2444, %rd2441, %rd2443;
	xor.b64  	%rd2445, %rd2444, %rd2442;
	add.s64 	%rd2446, %rd2357, %rd1856;
	add.s64 	%rd2447, %rd2446, %rd2440;
	add.s64 	%rd2448, %rd2447, %rd2445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10577,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10578}, %rd2268;
	}
	shf.r.wrap.b32 	%r10579, %r10578, %r10577, 14;
	shf.r.wrap.b32 	%r10580, %r10577, %r10578, 14;
	mov.b64 	%rd2449, {%r10580, %r10579};
	shf.r.wrap.b32 	%r10581, %r10578, %r10577, 18;
	shf.r.wrap.b32 	%r10582, %r10577, %r10578, 18;
	mov.b64 	%rd2450, {%r10582, %r10581};
	xor.b64  	%rd2451, %rd2450, %rd2449;
	shf.l.wrap.b32 	%r10583, %r10577, %r10578, 23;
	shf.l.wrap.b32 	%r10584, %r10578, %r10577, 23;
	mov.b64 	%rd2452, {%r10584, %r10583};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	xor.b64  	%rd2454, %rd2220, %rd2244;
	and.b64  	%rd2455, %rd2454, %rd2268;
	xor.b64  	%rd2456, %rd2455, %rd2220;
	add.s64 	%rd2457, %rd2456, %rd2196;
	add.s64 	%rd2458, %rd2457, %rd2292;
	add.s64 	%rd2459, %rd2458, %rd2852;
	add.s64 	%rd2460, %rd2459, %rd2453;
	add.s64 	%rd2461, %rd2460, %rd2207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10585,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10586}, %rd2279;
	}
	shf.r.wrap.b32 	%r10587, %r10586, %r10585, 28;
	shf.r.wrap.b32 	%r10588, %r10585, %r10586, 28;
	mov.b64 	%rd2462, {%r10588, %r10587};
	shf.l.wrap.b32 	%r10589, %r10585, %r10586, 30;
	shf.l.wrap.b32 	%r10590, %r10586, %r10585, 30;
	mov.b64 	%rd2463, {%r10590, %r10589};
	xor.b64  	%rd2464, %rd2463, %rd2462;
	shf.l.wrap.b32 	%r10591, %r10585, %r10586, 25;
	shf.l.wrap.b32 	%r10592, %r10586, %r10585, 25;
	mov.b64 	%rd2465, {%r10592, %r10591};
	xor.b64  	%rd2466, %rd2464, %rd2465;
	xor.b64  	%rd2467, %rd2279, %rd2231;
	xor.b64  	%rd2468, %rd2279, %rd2255;
	and.b64  	%rd2469, %rd2468, %rd2467;
	xor.b64  	%rd2470, %rd2469, %rd2279;
	add.s64 	%rd2471, %rd2460, %rd2470;
	add.s64 	%rd2472, %rd2471, %rd2466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10593,%dummy}, %rd2461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10594}, %rd2461;
	}
	shf.r.wrap.b32 	%r10595, %r10594, %r10593, 14;
	shf.r.wrap.b32 	%r10596, %r10593, %r10594, 14;
	mov.b64 	%rd2473, {%r10596, %r10595};
	shf.r.wrap.b32 	%r10597, %r10594, %r10593, 18;
	shf.r.wrap.b32 	%r10598, %r10593, %r10594, 18;
	mov.b64 	%rd2474, {%r10598, %r10597};
	xor.b64  	%rd2475, %rd2474, %rd2473;
	shf.l.wrap.b32 	%r10599, %r10593, %r10594, 23;
	shf.l.wrap.b32 	%r10600, %r10594, %r10593, 23;
	mov.b64 	%rd2476, {%r10600, %r10599};
	xor.b64  	%rd2477, %rd2475, %rd2476;
	xor.b64  	%rd2478, %rd2244, %rd2268;
	and.b64  	%rd2479, %rd2461, %rd2478;
	xor.b64  	%rd2480, %rd2479, %rd2244;
	add.s64 	%rd2481, %rd2305, %rd2220;
	add.s64 	%rd2482, %rd2481, %rd2853;
	add.s64 	%rd2483, %rd2482, %rd2480;
	add.s64 	%rd2484, %rd2483, %rd2477;
	add.s64 	%rd2485, %rd2484, %rd2231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10601,%dummy}, %rd2472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10602}, %rd2472;
	}
	shf.r.wrap.b32 	%r10603, %r10602, %r10601, 28;
	shf.r.wrap.b32 	%r10604, %r10601, %r10602, 28;
	mov.b64 	%rd2486, {%r10604, %r10603};
	shf.l.wrap.b32 	%r10605, %r10601, %r10602, 30;
	shf.l.wrap.b32 	%r10606, %r10602, %r10601, 30;
	mov.b64 	%rd2487, {%r10606, %r10605};
	xor.b64  	%rd2488, %rd2487, %rd2486;
	shf.l.wrap.b32 	%r10607, %r10601, %r10602, 25;
	shf.l.wrap.b32 	%r10608, %r10602, %r10601, 25;
	mov.b64 	%rd2489, {%r10608, %r10607};
	xor.b64  	%rd2490, %rd2488, %rd2489;
	xor.b64  	%rd2491, %rd2472, %rd2255;
	xor.b64  	%rd2492, %rd2472, %rd2279;
	and.b64  	%rd2493, %rd2492, %rd2491;
	xor.b64  	%rd2494, %rd2493, %rd2472;
	add.s64 	%rd2495, %rd2484, %rd2494;
	add.s64 	%rd2496, %rd2495, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10609,%dummy}, %rd2485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10610}, %rd2485;
	}
	shf.r.wrap.b32 	%r10611, %r10610, %r10609, 14;
	shf.r.wrap.b32 	%r10612, %r10609, %r10610, 14;
	mov.b64 	%rd2497, {%r10612, %r10611};
	shf.r.wrap.b32 	%r10613, %r10610, %r10609, 18;
	shf.r.wrap.b32 	%r10614, %r10609, %r10610, 18;
	mov.b64 	%rd2498, {%r10614, %r10613};
	xor.b64  	%rd2499, %rd2498, %rd2497;
	shf.l.wrap.b32 	%r10615, %r10609, %r10610, 23;
	shf.l.wrap.b32 	%r10616, %r10610, %r10609, 23;
	mov.b64 	%rd2500, {%r10616, %r10615};
	xor.b64  	%rd2501, %rd2499, %rd2500;
	xor.b64  	%rd2502, %rd2461, %rd2268;
	and.b64  	%rd2503, %rd2485, %rd2502;
	xor.b64  	%rd2504, %rd2503, %rd2268;
	add.s64 	%rd2505, %rd2318, %rd2244;
	add.s64 	%rd2506, %rd2505, %rd2854;
	add.s64 	%rd2507, %rd2506, %rd2504;
	add.s64 	%rd2508, %rd2507, %rd2501;
	add.s64 	%rd2509, %rd2508, %rd2255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10617,%dummy}, %rd2496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10618}, %rd2496;
	}
	shf.r.wrap.b32 	%r10619, %r10618, %r10617, 28;
	shf.r.wrap.b32 	%r10620, %r10617, %r10618, 28;
	mov.b64 	%rd2510, {%r10620, %r10619};
	shf.l.wrap.b32 	%r10621, %r10617, %r10618, 30;
	shf.l.wrap.b32 	%r10622, %r10618, %r10617, 30;
	mov.b64 	%rd2511, {%r10622, %r10621};
	xor.b64  	%rd2512, %rd2511, %rd2510;
	shf.l.wrap.b32 	%r10623, %r10617, %r10618, 25;
	shf.l.wrap.b32 	%r10624, %r10618, %r10617, 25;
	mov.b64 	%rd2513, {%r10624, %r10623};
	xor.b64  	%rd2514, %rd2512, %rd2513;
	xor.b64  	%rd2515, %rd2496, %rd2279;
	xor.b64  	%rd2516, %rd2496, %rd2472;
	and.b64  	%rd2517, %rd2516, %rd2515;
	xor.b64  	%rd2518, %rd2517, %rd2496;
	add.s64 	%rd2519, %rd2508, %rd2518;
	add.s64 	%rd2520, %rd2519, %rd2514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10625,%dummy}, %rd2509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10626}, %rd2509;
	}
	shf.r.wrap.b32 	%r10627, %r10626, %r10625, 14;
	shf.r.wrap.b32 	%r10628, %r10625, %r10626, 14;
	mov.b64 	%rd2521, {%r10628, %r10627};
	shf.r.wrap.b32 	%r10629, %r10626, %r10625, 18;
	shf.r.wrap.b32 	%r10630, %r10625, %r10626, 18;
	mov.b64 	%rd2522, {%r10630, %r10629};
	xor.b64  	%rd2523, %rd2522, %rd2521;
	shf.l.wrap.b32 	%r10631, %r10625, %r10626, 23;
	shf.l.wrap.b32 	%r10632, %r10626, %r10625, 23;
	mov.b64 	%rd2524, {%r10632, %r10631};
	xor.b64  	%rd2525, %rd2523, %rd2524;
	xor.b64  	%rd2526, %rd2485, %rd2461;
	and.b64  	%rd2527, %rd2509, %rd2526;
	xor.b64  	%rd2528, %rd2527, %rd2461;
	add.s64 	%rd2529, %rd2331, %rd2268;
	add.s64 	%rd2530, %rd2529, %rd2855;
	add.s64 	%rd2531, %rd2530, %rd2528;
	add.s64 	%rd2532, %rd2531, %rd2525;
	add.s64 	%rd2533, %rd2532, %rd2279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10633,%dummy}, %rd2520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10634}, %rd2520;
	}
	shf.r.wrap.b32 	%r10635, %r10634, %r10633, 28;
	shf.r.wrap.b32 	%r10636, %r10633, %r10634, 28;
	mov.b64 	%rd2534, {%r10636, %r10635};
	shf.l.wrap.b32 	%r10637, %r10633, %r10634, 30;
	shf.l.wrap.b32 	%r10638, %r10634, %r10633, 30;
	mov.b64 	%rd2535, {%r10638, %r10637};
	xor.b64  	%rd2536, %rd2535, %rd2534;
	shf.l.wrap.b32 	%r10639, %r10633, %r10634, 25;
	shf.l.wrap.b32 	%r10640, %r10634, %r10633, 25;
	mov.b64 	%rd2537, {%r10640, %r10639};
	xor.b64  	%rd2538, %rd2536, %rd2537;
	xor.b64  	%rd2539, %rd2520, %rd2472;
	xor.b64  	%rd2540, %rd2520, %rd2496;
	and.b64  	%rd2541, %rd2540, %rd2539;
	xor.b64  	%rd2542, %rd2541, %rd2520;
	add.s64 	%rd2543, %rd2532, %rd2542;
	add.s64 	%rd2544, %rd2543, %rd2538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10641,%dummy}, %rd2533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10642}, %rd2533;
	}
	shf.r.wrap.b32 	%r10643, %r10642, %r10641, 14;
	shf.r.wrap.b32 	%r10644, %r10641, %r10642, 14;
	mov.b64 	%rd2545, {%r10644, %r10643};
	shf.r.wrap.b32 	%r10645, %r10642, %r10641, 18;
	shf.r.wrap.b32 	%r10646, %r10641, %r10642, 18;
	mov.b64 	%rd2546, {%r10646, %r10645};
	xor.b64  	%rd2547, %rd2546, %rd2545;
	shf.l.wrap.b32 	%r10647, %r10641, %r10642, 23;
	shf.l.wrap.b32 	%r10648, %r10642, %r10641, 23;
	mov.b64 	%rd2548, {%r10648, %r10647};
	xor.b64  	%rd2549, %rd2547, %rd2548;
	xor.b64  	%rd2550, %rd2509, %rd2485;
	and.b64  	%rd2551, %rd2533, %rd2550;
	xor.b64  	%rd2552, %rd2551, %rd2485;
	add.s64 	%rd2553, %rd2461, %rd2344;
	add.s64 	%rd2554, %rd2553, %rd2856;
	add.s64 	%rd2555, %rd2554, %rd2552;
	add.s64 	%rd2556, %rd2555, %rd2549;
	add.s64 	%rd2557, %rd2556, %rd2472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10649,%dummy}, %rd2544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10650}, %rd2544;
	}
	shf.r.wrap.b32 	%r10651, %r10650, %r10649, 28;
	shf.r.wrap.b32 	%r10652, %r10649, %r10650, 28;
	mov.b64 	%rd2558, {%r10652, %r10651};
	shf.l.wrap.b32 	%r10653, %r10649, %r10650, 30;
	shf.l.wrap.b32 	%r10654, %r10650, %r10649, 30;
	mov.b64 	%rd2559, {%r10654, %r10653};
	xor.b64  	%rd2560, %rd2559, %rd2558;
	shf.l.wrap.b32 	%r10655, %r10649, %r10650, 25;
	shf.l.wrap.b32 	%r10656, %r10650, %r10649, 25;
	mov.b64 	%rd2561, {%r10656, %r10655};
	xor.b64  	%rd2562, %rd2560, %rd2561;
	xor.b64  	%rd2563, %rd2544, %rd2496;
	xor.b64  	%rd2564, %rd2544, %rd2520;
	and.b64  	%rd2565, %rd2564, %rd2563;
	xor.b64  	%rd2566, %rd2565, %rd2544;
	add.s64 	%rd2567, %rd2556, %rd2566;
	add.s64 	%rd2568, %rd2567, %rd2562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10657,%dummy}, %rd2557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10658}, %rd2557;
	}
	shf.r.wrap.b32 	%r10659, %r10658, %r10657, 14;
	shf.r.wrap.b32 	%r10660, %r10657, %r10658, 14;
	mov.b64 	%rd2569, {%r10660, %r10659};
	shf.r.wrap.b32 	%r10661, %r10658, %r10657, 18;
	shf.r.wrap.b32 	%r10662, %r10657, %r10658, 18;
	mov.b64 	%rd2570, {%r10662, %r10661};
	xor.b64  	%rd2571, %rd2570, %rd2569;
	shf.l.wrap.b32 	%r10663, %r10657, %r10658, 23;
	shf.l.wrap.b32 	%r10664, %r10658, %r10657, 23;
	mov.b64 	%rd2572, {%r10664, %r10663};
	xor.b64  	%rd2573, %rd2571, %rd2572;
	xor.b64  	%rd2574, %rd2533, %rd2509;
	and.b64  	%rd2575, %rd2557, %rd2574;
	xor.b64  	%rd2576, %rd2575, %rd2509;
	add.s64 	%rd2577, %rd2485, %rd2357;
	add.s64 	%rd2578, %rd2577, %rd2857;
	add.s64 	%rd2579, %rd2578, %rd2576;
	add.s64 	%rd2580, %rd2579, %rd2573;
	add.s64 	%rd2581, %rd2580, %rd2496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10665,%dummy}, %rd2568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10666}, %rd2568;
	}
	shf.r.wrap.b32 	%r10667, %r10666, %r10665, 28;
	shf.r.wrap.b32 	%r10668, %r10665, %r10666, 28;
	mov.b64 	%rd2582, {%r10668, %r10667};
	shf.l.wrap.b32 	%r10669, %r10665, %r10666, 30;
	shf.l.wrap.b32 	%r10670, %r10666, %r10665, 30;
	mov.b64 	%rd2583, {%r10670, %r10669};
	xor.b64  	%rd2584, %rd2583, %rd2582;
	shf.l.wrap.b32 	%r10671, %r10665, %r10666, 25;
	shf.l.wrap.b32 	%r10672, %r10666, %r10665, 25;
	mov.b64 	%rd2585, {%r10672, %r10671};
	xor.b64  	%rd2586, %rd2584, %rd2585;
	xor.b64  	%rd2587, %rd2568, %rd2520;
	xor.b64  	%rd2588, %rd2568, %rd2544;
	and.b64  	%rd2589, %rd2588, %rd2587;
	xor.b64  	%rd2590, %rd2589, %rd2568;
	add.s64 	%rd2591, %rd2580, %rd2590;
	add.s64 	%rd2592, %rd2591, %rd2586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10673,%dummy}, %rd2581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10674}, %rd2581;
	}
	shf.r.wrap.b32 	%r10675, %r10674, %r10673, 14;
	shf.r.wrap.b32 	%r10676, %r10673, %r10674, 14;
	mov.b64 	%rd2593, {%r10676, %r10675};
	shf.r.wrap.b32 	%r10677, %r10674, %r10673, 18;
	shf.r.wrap.b32 	%r10678, %r10673, %r10674, 18;
	mov.b64 	%rd2594, {%r10678, %r10677};
	xor.b64  	%rd2595, %rd2594, %rd2593;
	shf.l.wrap.b32 	%r10679, %r10673, %r10674, 23;
	shf.l.wrap.b32 	%r10680, %r10674, %r10673, 23;
	mov.b64 	%rd2596, {%r10680, %r10679};
	xor.b64  	%rd2597, %rd2595, %rd2596;
	xor.b64  	%rd2598, %rd2557, %rd2533;
	and.b64  	%rd2599, %rd2581, %rd2598;
	xor.b64  	%rd2600, %rd2599, %rd2533;
	add.s64 	%rd2601, %rd2509, %rd2370;
	add.s64 	%rd2602, %rd2601, %rd2858;
	add.s64 	%rd2603, %rd2602, %rd2600;
	add.s64 	%rd2604, %rd2603, %rd2597;
	add.s64 	%rd2605, %rd2604, %rd2520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10681,%dummy}, %rd2592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10682}, %rd2592;
	}
	shf.r.wrap.b32 	%r10683, %r10682, %r10681, 28;
	shf.r.wrap.b32 	%r10684, %r10681, %r10682, 28;
	mov.b64 	%rd2606, {%r10684, %r10683};
	shf.l.wrap.b32 	%r10685, %r10681, %r10682, 30;
	shf.l.wrap.b32 	%r10686, %r10682, %r10681, 30;
	mov.b64 	%rd2607, {%r10686, %r10685};
	xor.b64  	%rd2608, %rd2607, %rd2606;
	shf.l.wrap.b32 	%r10687, %r10681, %r10682, 25;
	shf.l.wrap.b32 	%r10688, %r10682, %r10681, 25;
	mov.b64 	%rd2609, {%r10688, %r10687};
	xor.b64  	%rd2610, %rd2608, %rd2609;
	xor.b64  	%rd2611, %rd2592, %rd2544;
	xor.b64  	%rd2612, %rd2592, %rd2568;
	and.b64  	%rd2613, %rd2612, %rd2611;
	xor.b64  	%rd2614, %rd2613, %rd2592;
	add.s64 	%rd2615, %rd2604, %rd2614;
	add.s64 	%rd2616, %rd2615, %rd2610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10689,%dummy}, %rd2605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10690}, %rd2605;
	}
	shf.r.wrap.b32 	%r10691, %r10690, %r10689, 14;
	shf.r.wrap.b32 	%r10692, %r10689, %r10690, 14;
	mov.b64 	%rd2617, {%r10692, %r10691};
	shf.r.wrap.b32 	%r10693, %r10690, %r10689, 18;
	shf.r.wrap.b32 	%r10694, %r10689, %r10690, 18;
	mov.b64 	%rd2618, {%r10694, %r10693};
	xor.b64  	%rd2619, %rd2618, %rd2617;
	shf.l.wrap.b32 	%r10695, %r10689, %r10690, 23;
	shf.l.wrap.b32 	%r10696, %r10690, %r10689, 23;
	mov.b64 	%rd2620, {%r10696, %r10695};
	xor.b64  	%rd2621, %rd2619, %rd2620;
	xor.b64  	%rd2622, %rd2581, %rd2557;
	and.b64  	%rd2623, %rd2605, %rd2622;
	xor.b64  	%rd2624, %rd2623, %rd2557;
	add.s64 	%rd2625, %rd2533, %rd2383;
	add.s64 	%rd2626, %rd2625, %rd2859;
	add.s64 	%rd2627, %rd2626, %rd2624;
	add.s64 	%rd2628, %rd2627, %rd2621;
	add.s64 	%rd2629, %rd2628, %rd2544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10697,%dummy}, %rd2616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10698}, %rd2616;
	}
	shf.r.wrap.b32 	%r10699, %r10698, %r10697, 28;
	shf.r.wrap.b32 	%r10700, %r10697, %r10698, 28;
	mov.b64 	%rd2630, {%r10700, %r10699};
	shf.l.wrap.b32 	%r10701, %r10697, %r10698, 30;
	shf.l.wrap.b32 	%r10702, %r10698, %r10697, 30;
	mov.b64 	%rd2631, {%r10702, %r10701};
	xor.b64  	%rd2632, %rd2631, %rd2630;
	shf.l.wrap.b32 	%r10703, %r10697, %r10698, 25;
	shf.l.wrap.b32 	%r10704, %r10698, %r10697, 25;
	mov.b64 	%rd2633, {%r10704, %r10703};
	xor.b64  	%rd2634, %rd2632, %rd2633;
	xor.b64  	%rd2635, %rd2616, %rd2568;
	xor.b64  	%rd2636, %rd2616, %rd2592;
	and.b64  	%rd2637, %rd2636, %rd2635;
	xor.b64  	%rd2638, %rd2637, %rd2616;
	add.s64 	%rd2639, %rd2628, %rd2638;
	add.s64 	%rd2640, %rd2639, %rd2634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10705,%dummy}, %rd2629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10706}, %rd2629;
	}
	shf.r.wrap.b32 	%r10707, %r10706, %r10705, 14;
	shf.r.wrap.b32 	%r10708, %r10705, %r10706, 14;
	mov.b64 	%rd2641, {%r10708, %r10707};
	shf.r.wrap.b32 	%r10709, %r10706, %r10705, 18;
	shf.r.wrap.b32 	%r10710, %r10705, %r10706, 18;
	mov.b64 	%rd2642, {%r10710, %r10709};
	xor.b64  	%rd2643, %rd2642, %rd2641;
	shf.l.wrap.b32 	%r10711, %r10705, %r10706, 23;
	shf.l.wrap.b32 	%r10712, %r10706, %r10705, 23;
	mov.b64 	%rd2644, {%r10712, %r10711};
	xor.b64  	%rd2645, %rd2643, %rd2644;
	xor.b64  	%rd2646, %rd2605, %rd2581;
	and.b64  	%rd2647, %rd2629, %rd2646;
	xor.b64  	%rd2648, %rd2647, %rd2581;
	add.s64 	%rd2649, %rd2557, %rd2396;
	add.s64 	%rd2650, %rd2649, %rd2860;
	add.s64 	%rd2651, %rd2650, %rd2648;
	add.s64 	%rd2652, %rd2651, %rd2645;
	add.s64 	%rd2653, %rd2652, %rd2568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10713,%dummy}, %rd2640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10714}, %rd2640;
	}
	shf.r.wrap.b32 	%r10715, %r10714, %r10713, 28;
	shf.r.wrap.b32 	%r10716, %r10713, %r10714, 28;
	mov.b64 	%rd2654, {%r10716, %r10715};
	shf.l.wrap.b32 	%r10717, %r10713, %r10714, 30;
	shf.l.wrap.b32 	%r10718, %r10714, %r10713, 30;
	mov.b64 	%rd2655, {%r10718, %r10717};
	xor.b64  	%rd2656, %rd2655, %rd2654;
	shf.l.wrap.b32 	%r10719, %r10713, %r10714, 25;
	shf.l.wrap.b32 	%r10720, %r10714, %r10713, 25;
	mov.b64 	%rd2657, {%r10720, %r10719};
	xor.b64  	%rd2658, %rd2656, %rd2657;
	xor.b64  	%rd2659, %rd2640, %rd2592;
	xor.b64  	%rd2660, %rd2640, %rd2616;
	and.b64  	%rd2661, %rd2660, %rd2659;
	xor.b64  	%rd2662, %rd2661, %rd2640;
	add.s64 	%rd2663, %rd2652, %rd2662;
	add.s64 	%rd2664, %rd2663, %rd2658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10721,%dummy}, %rd2653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10722}, %rd2653;
	}
	shf.r.wrap.b32 	%r10723, %r10722, %r10721, 14;
	shf.r.wrap.b32 	%r10724, %r10721, %r10722, 14;
	mov.b64 	%rd2665, {%r10724, %r10723};
	shf.r.wrap.b32 	%r10725, %r10722, %r10721, 18;
	shf.r.wrap.b32 	%r10726, %r10721, %r10722, 18;
	mov.b64 	%rd2666, {%r10726, %r10725};
	xor.b64  	%rd2667, %rd2666, %rd2665;
	shf.l.wrap.b32 	%r10727, %r10721, %r10722, 23;
	shf.l.wrap.b32 	%r10728, %r10722, %r10721, 23;
	mov.b64 	%rd2668, {%r10728, %r10727};
	xor.b64  	%rd2669, %rd2667, %rd2668;
	xor.b64  	%rd2670, %rd2629, %rd2605;
	and.b64  	%rd2671, %rd2653, %rd2670;
	xor.b64  	%rd2672, %rd2671, %rd2605;
	add.s64 	%rd2673, %rd2581, %rd2409;
	add.s64 	%rd2674, %rd2673, %rd2861;
	add.s64 	%rd2675, %rd2674, %rd2672;
	add.s64 	%rd2676, %rd2675, %rd2669;
	add.s64 	%rd2677, %rd2676, %rd2592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10729,%dummy}, %rd2664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10730}, %rd2664;
	}
	shf.r.wrap.b32 	%r10731, %r10730, %r10729, 28;
	shf.r.wrap.b32 	%r10732, %r10729, %r10730, 28;
	mov.b64 	%rd2678, {%r10732, %r10731};
	shf.l.wrap.b32 	%r10733, %r10729, %r10730, 30;
	shf.l.wrap.b32 	%r10734, %r10730, %r10729, 30;
	mov.b64 	%rd2679, {%r10734, %r10733};
	xor.b64  	%rd2680, %rd2679, %rd2678;
	shf.l.wrap.b32 	%r10735, %r10729, %r10730, 25;
	shf.l.wrap.b32 	%r10736, %r10730, %r10729, 25;
	mov.b64 	%rd2681, {%r10736, %r10735};
	xor.b64  	%rd2682, %rd2680, %rd2681;
	xor.b64  	%rd2683, %rd2664, %rd2616;
	xor.b64  	%rd2684, %rd2664, %rd2640;
	and.b64  	%rd2685, %rd2684, %rd2683;
	xor.b64  	%rd2686, %rd2685, %rd2664;
	add.s64 	%rd2687, %rd2676, %rd2686;
	add.s64 	%rd2688, %rd2687, %rd2682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10737,%dummy}, %rd2677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10738}, %rd2677;
	}
	shf.r.wrap.b32 	%r10739, %r10738, %r10737, 14;
	shf.r.wrap.b32 	%r10740, %r10737, %r10738, 14;
	mov.b64 	%rd2689, {%r10740, %r10739};
	shf.r.wrap.b32 	%r10741, %r10738, %r10737, 18;
	shf.r.wrap.b32 	%r10742, %r10737, %r10738, 18;
	mov.b64 	%rd2690, {%r10742, %r10741};
	xor.b64  	%rd2691, %rd2690, %rd2689;
	shf.l.wrap.b32 	%r10743, %r10737, %r10738, 23;
	shf.l.wrap.b32 	%r10744, %r10738, %r10737, 23;
	mov.b64 	%rd2692, {%r10744, %r10743};
	xor.b64  	%rd2693, %rd2691, %rd2692;
	xor.b64  	%rd2694, %rd2653, %rd2629;
	and.b64  	%rd2695, %rd2677, %rd2694;
	xor.b64  	%rd2696, %rd2695, %rd2629;
	add.s64 	%rd2697, %rd2605, %rd2422;
	add.s64 	%rd2698, %rd2697, %rd2862;
	add.s64 	%rd2699, %rd2698, %rd2696;
	add.s64 	%rd2700, %rd2699, %rd2693;
	add.s64 	%rd2701, %rd2700, %rd2616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10745,%dummy}, %rd2688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10746}, %rd2688;
	}
	shf.r.wrap.b32 	%r10747, %r10746, %r10745, 28;
	shf.r.wrap.b32 	%r10748, %r10745, %r10746, 28;
	mov.b64 	%rd2702, {%r10748, %r10747};
	shf.l.wrap.b32 	%r10749, %r10745, %r10746, 30;
	shf.l.wrap.b32 	%r10750, %r10746, %r10745, 30;
	mov.b64 	%rd2703, {%r10750, %r10749};
	xor.b64  	%rd2704, %rd2703, %rd2702;
	shf.l.wrap.b32 	%r10751, %r10745, %r10746, 25;
	shf.l.wrap.b32 	%r10752, %r10746, %r10745, 25;
	mov.b64 	%rd2705, {%r10752, %r10751};
	xor.b64  	%rd2706, %rd2704, %rd2705;
	xor.b64  	%rd2707, %rd2688, %rd2640;
	xor.b64  	%rd2708, %rd2688, %rd2664;
	and.b64  	%rd2709, %rd2708, %rd2707;
	xor.b64  	%rd2710, %rd2709, %rd2688;
	add.s64 	%rd2711, %rd2700, %rd2710;
	add.s64 	%rd2712, %rd2711, %rd2706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10753,%dummy}, %rd2701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10754}, %rd2701;
	}
	shf.r.wrap.b32 	%r10755, %r10754, %r10753, 14;
	shf.r.wrap.b32 	%r10756, %r10753, %r10754, 14;
	mov.b64 	%rd2713, {%r10756, %r10755};
	shf.r.wrap.b32 	%r10757, %r10754, %r10753, 18;
	shf.r.wrap.b32 	%r10758, %r10753, %r10754, 18;
	mov.b64 	%rd2714, {%r10758, %r10757};
	xor.b64  	%rd2715, %rd2714, %rd2713;
	shf.l.wrap.b32 	%r10759, %r10753, %r10754, 23;
	shf.l.wrap.b32 	%r10760, %r10754, %r10753, 23;
	mov.b64 	%rd2716, {%r10760, %r10759};
	xor.b64  	%rd2717, %rd2715, %rd2716;
	xor.b64  	%rd2718, %rd2677, %rd2653;
	and.b64  	%rd2719, %rd2701, %rd2718;
	xor.b64  	%rd2720, %rd2719, %rd2653;
	add.s64 	%rd2721, %rd2629, %rd2435;
	add.s64 	%rd2722, %rd2721, %rd2871;
	add.s64 	%rd2723, %rd2722, %rd2720;
	add.s64 	%rd2724, %rd2723, %rd2717;
	add.s64 	%rd2725, %rd2724, %rd2640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10761,%dummy}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10762}, %rd2712;
	}
	shf.r.wrap.b32 	%r10763, %r10762, %r10761, 28;
	shf.r.wrap.b32 	%r10764, %r10761, %r10762, 28;
	mov.b64 	%rd2726, {%r10764, %r10763};
	shf.l.wrap.b32 	%r10765, %r10761, %r10762, 30;
	shf.l.wrap.b32 	%r10766, %r10762, %r10761, 30;
	mov.b64 	%rd2727, {%r10766, %r10765};
	xor.b64  	%rd2728, %rd2727, %rd2726;
	shf.l.wrap.b32 	%r10767, %r10761, %r10762, 25;
	shf.l.wrap.b32 	%r10768, %r10762, %r10761, 25;
	mov.b64 	%rd2729, {%r10768, %r10767};
	xor.b64  	%rd2730, %rd2728, %rd2729;
	xor.b64  	%rd2731, %rd2712, %rd2664;
	xor.b64  	%rd2732, %rd2712, %rd2688;
	and.b64  	%rd2733, %rd2732, %rd2731;
	xor.b64  	%rd2734, %rd2733, %rd2712;
	add.s64 	%rd2735, %rd2724, %rd2734;
	add.s64 	%rd2736, %rd2735, %rd2730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10769,%dummy}, %rd2725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10770}, %rd2725;
	}
	shf.r.wrap.b32 	%r10771, %r10770, %r10769, 14;
	shf.r.wrap.b32 	%r10772, %r10769, %r10770, 14;
	mov.b64 	%rd2737, {%r10772, %r10771};
	shf.r.wrap.b32 	%r10773, %r10770, %r10769, 18;
	shf.r.wrap.b32 	%r10774, %r10769, %r10770, 18;
	mov.b64 	%rd2738, {%r10774, %r10773};
	xor.b64  	%rd2739, %rd2738, %rd2737;
	shf.l.wrap.b32 	%r10775, %r10769, %r10770, 23;
	shf.l.wrap.b32 	%r10776, %r10770, %r10769, 23;
	mov.b64 	%rd2740, {%r10776, %r10775};
	xor.b64  	%rd2741, %rd2739, %rd2740;
	xor.b64  	%rd2742, %rd2701, %rd2677;
	and.b64  	%rd2743, %rd2725, %rd2742;
	xor.b64  	%rd2744, %rd2743, %rd2677;
	add.s64 	%rd2745, %rd2653, %rd2448;
	add.s64 	%rd2746, %rd2745, %rd2872;
	add.s64 	%rd2747, %rd2746, %rd2744;
	add.s64 	%rd2748, %rd2747, %rd2741;
	add.s64 	%rd2749, %rd2748, %rd2664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10777,%dummy}, %rd2736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10778}, %rd2736;
	}
	shf.r.wrap.b32 	%r10779, %r10778, %r10777, 28;
	shf.r.wrap.b32 	%r10780, %r10777, %r10778, 28;
	mov.b64 	%rd2750, {%r10780, %r10779};
	shf.l.wrap.b32 	%r10781, %r10777, %r10778, 30;
	shf.l.wrap.b32 	%r10782, %r10778, %r10777, 30;
	mov.b64 	%rd2751, {%r10782, %r10781};
	xor.b64  	%rd2752, %rd2751, %rd2750;
	shf.l.wrap.b32 	%r10783, %r10777, %r10778, 25;
	shf.l.wrap.b32 	%r10784, %r10778, %r10777, 25;
	mov.b64 	%rd2753, {%r10784, %r10783};
	xor.b64  	%rd2754, %rd2752, %rd2753;
	xor.b64  	%rd2755, %rd2736, %rd2688;
	xor.b64  	%rd2756, %rd2736, %rd2712;
	and.b64  	%rd2757, %rd2756, %rd2755;
	xor.b64  	%rd2758, %rd2757, %rd2736;
	add.s64 	%rd2759, %rd2748, %rd2758;
	add.s64 	%rd2760, %rd2759, %rd2754;
	cvt.u32.u64	%r1558, %rd2749;
	shr.u64 	%rd2761, %rd2749, 32;
	cvt.u32.u64	%r1559, %rd2761;
	cvt.u32.u64	%r1560, %rd2760;
	shr.u64 	%rd2762, %rd2760, 32;
	cvt.u32.u64	%r1561, %rd2762;
	and.b32  	%r10785, %r10853, 31;
	shr.u32 	%r10786, %r1558, %r10785;
	and.b32  	%r10787, %r10786, %r1582;
	mul.wide.u32 	%rd2763, %r10787, 4;
	add.s64 	%rd2764, %rd2873, %rd2763;
	and.b32  	%r10788, %r1558, 31;
	mov.u32 	%r10789, 1;
	shl.b32 	%r1562, %r10789, %r10788;
	ld.global.u32 	%r10790, [%rd2764];
	and.b32  	%r10791, %r10790, %r1562;
	setp.eq.s32	%p762, %r10791, 0;
	@%p762 bra 	BB1_1043;

	mov.u32 	%r10856, 1;
	ld.param.u32 	%r10855, [m01700_m04_param_25];
	and.b32  	%r10854, %r10855, 31;
	ld.param.u64 	%rd2863, [m01700_m04_param_7];
	shr.u32 	%r10793, %r1559, %r10854;
	and.b32  	%r10794, %r10793, %r1582;
	mul.wide.u32 	%rd2765, %r10794, 4;
	add.s64 	%rd2766, %rd2863, %rd2765;
	and.b32  	%r10795, %r1559, 31;
	shl.b32 	%r1563, %r10856, %r10795;
	ld.global.u32 	%r10797, [%rd2766];
	and.b32  	%r10798, %r10797, %r1563;
	setp.eq.s32	%p763, %r10798, 0;
	@%p763 bra 	BB1_1043;

	mov.u32 	%r10859, 1;
	ld.param.u32 	%r10858, [m01700_m04_param_25];
	and.b32  	%r10857, %r10858, 31;
	ld.param.u64 	%rd2864, [m01700_m04_param_8];
	shr.u32 	%r10800, %r1560, %r10857;
	and.b32  	%r10801, %r10800, %r1582;
	mul.wide.u32 	%rd2767, %r10801, 4;
	add.s64 	%rd2768, %rd2864, %rd2767;
	and.b32  	%r10802, %r1560, 31;
	shl.b32 	%r1564, %r10859, %r10802;
	ld.global.u32 	%r10804, [%rd2768];
	and.b32  	%r10805, %r10804, %r1564;
	setp.eq.s32	%p764, %r10805, 0;
	@%p764 bra 	BB1_1043;

	mov.u32 	%r10862, 1;
	ld.param.u32 	%r10861, [m01700_m04_param_25];
	and.b32  	%r10860, %r10861, 31;
	ld.param.u64 	%rd2865, [m01700_m04_param_9];
	shr.u32 	%r10807, %r1561, %r10860;
	and.b32  	%r10808, %r10807, %r1582;
	mul.wide.u32 	%rd2769, %r10808, 4;
	add.s64 	%rd2770, %rd2865, %rd2769;
	and.b32  	%r10809, %r1561, 31;
	shl.b32 	%r1565, %r10862, %r10809;
	ld.global.u32 	%r10811, [%rd2770];
	and.b32  	%r10812, %r10811, %r1565;
	setp.eq.s32	%p765, %r10812, 0;
	@%p765 bra 	BB1_1043;

	and.b32  	%r10865, %r1558, 31;
	mov.u32 	%r10864, 1;
	shl.b32 	%r10863, %r10864, %r10865;
	ld.param.u64 	%rd2866, [m01700_m04_param_10];
	ld.param.u32 	%r10852, [m01700_m04_param_26];
	and.b32  	%r10813, %r10852, 31;
	shr.u32 	%r10814, %r1558, %r10813;
	and.b32  	%r10815, %r10814, %r1582;
	mul.wide.u32 	%rd2771, %r10815, 4;
	add.s64 	%rd2772, %rd2866, %rd2771;
	ld.global.u32 	%r10816, [%rd2772];
	and.b32  	%r10817, %r10816, %r10863;
	setp.eq.s32	%p766, %r10817, 0;
	@%p766 bra 	BB1_1043;

	ld.param.u64 	%rd2867, [m01700_m04_param_11];
	shr.u32 	%r10819, %r1559, %r10813;
	and.b32  	%r10820, %r10819, %r1582;
	mul.wide.u32 	%rd2773, %r10820, 4;
	add.s64 	%rd2774, %rd2867, %rd2773;
	ld.global.u32 	%r10821, [%rd2774];
	and.b32  	%r10822, %r10821, %r1563;
	setp.eq.s32	%p767, %r10822, 0;
	@%p767 bra 	BB1_1043;

	ld.param.u64 	%rd2868, [m01700_m04_param_12];
	shr.u32 	%r10824, %r1560, %r10813;
	and.b32  	%r10825, %r10824, %r1582;
	mul.wide.u32 	%rd2775, %r10825, 4;
	add.s64 	%rd2776, %rd2868, %rd2775;
	ld.global.u32 	%r10826, [%rd2776];
	and.b32  	%r10827, %r10826, %r1564;
	setp.eq.s32	%p768, %r10827, 0;
	@%p768 bra 	BB1_1043;

	ld.param.u64 	%rd2869, [m01700_m04_param_13];
	shr.u32 	%r10829, %r1561, %r10813;
	and.b32  	%r10830, %r10829, %r1582;
	mul.wide.u32 	%rd2777, %r10830, 4;
	add.s64 	%rd2778, %rd2869, %rd2777;
	ld.global.u32 	%r10831, [%rd2778];
	and.b32  	%r10832, %r10831, %r1565;
	setp.eq.s32	%p769, %r10832, 0;
	@%p769 bra 	BB1_1043;

	mov.u32 	%r11072, 0;
	setp.eq.s32	%p770, %r1587, 0;
	mov.u32 	%r10833, -1;
	mov.u32 	%r11071, %r1587;
	@%p770 bra 	BB1_1037;

BB1_1025:
	mov.u32 	%r11073, 1;
	ld.param.u64 	%rd2870, [m01700_m04_param_15];
	shr.u32 	%r1568, %r11071, 1;
	add.s32 	%r11074, %r1568, %r11072;
	cvt.u64.u32	%rd2779, %r11074;
	cvt.u64.u32	%rd2780, %r1588;
	add.s64 	%rd2781, %rd2779, %rd2780;
	shl.b64 	%rd2782, %rd2781, 6;
	add.s64 	%rd90, %rd2870, %rd2782;
	ld.global.u32 	%r1570, [%rd90+28];
	setp.gt.u32	%p771, %r1561, %r1570;
	@%p771 bra 	BB1_1035;

	setp.lt.u32	%p772, %r1561, %r1570;
	mov.u32 	%r10836, -1;
	@%p772 bra 	BB1_1027;
	bra.uni 	BB1_1028;

BB1_1027:
	mov.u32 	%r11073, %r10836;
	bra.uni 	BB1_1035;

BB1_1028:
	mov.u32 	%r11073, 1;
	ld.global.u32 	%r1571, [%rd90+24];
	setp.gt.u32	%p773, %r1560, %r1571;
	@%p773 bra 	BB1_1035;

	setp.lt.u32	%p774, %r1560, %r1571;
	@%p774 bra 	BB1_1030;
	bra.uni 	BB1_1031;

BB1_1030:
	mov.u32 	%r11073, %r10836;
	bra.uni 	BB1_1035;

BB1_1031:
	mov.u32 	%r11073, 1;
	ld.global.u32 	%r1572, [%rd90+60];
	setp.gt.u32	%p775, %r1559, %r1572;
	@%p775 bra 	BB1_1035;

	setp.lt.u32	%p776, %r1559, %r1572;
	mov.u32 	%r11073, %r10836;
	@%p776 bra 	BB1_1035;

	mov.u32 	%r11073, 1;
	ld.global.u32 	%r1573, [%rd90+56];
	setp.gt.u32	%p777, %r1558, %r1573;
	@%p777 bra 	BB1_1035;

	setp.lt.u32	%p778, %r1558, %r1573;
	selp.b32	%r11073, -1, 0, %p778;

BB1_1035:
	add.s32 	%r10842, %r1568, 1;
	setp.gt.s32	%p779, %r11073, 0;
	selp.b32	%r10843, %r10842, 0, %p779;
	add.s32 	%r11072, %r10843, %r11072;
	selp.b32	%r10844, -1, 0, %p779;
	add.s32 	%r10845, %r10844, %r11071;
	shr.u32 	%r11071, %r10845, 1;
	setp.eq.s32	%p780, %r11073, 0;
	@%p780 bra 	BB1_1038;

	setp.ne.s32	%p781, %r11071, 0;
	@%p781 bra 	BB1_1025;

BB1_1037:
	mov.u32 	%r11074, %r10833;

BB1_1038:
	setp.eq.s32	%p782, %r11074, -1;
	@%p782 bra 	BB1_1043;

	ld.param.u64 	%rd2874, [m01700_m04_param_16];
	add.s32 	%r1579, %r11074, %r1588;
	mul.wide.u32 	%rd2783, %r1579, 4;
	add.s64 	%rd2784, %rd2874, %rd2783;
	atom.global.add.u32 	%r10847, [%rd2784], 1;
	setp.ne.s32	%p783, %r10847, 0;
	@%p783 bra 	BB1_1043;

	atom.global.add.u32 	%r1580, [%rd104], 1;
	setp.lt.u32	%p784, %r1580, %r1587;
	@%p784 bra 	BB1_1042;
	bra.uni 	BB1_1041;

BB1_1042:
	ld.param.u32 	%r10870, [m01700_m04_param_27];
	ld.param.u64 	%rd2875, [m01700_m04_param_14];
	mul.wide.u32 	%rd2785, %r1580, 20;
	add.s64 	%rd2786, %rd2875, %rd2785;
	st.global.u32 	[%rd2786], %r10870;
	st.global.u32 	[%rd2786+4], %r11074;
	st.global.u32 	[%rd2786+8], %r1579;
	st.global.u32 	[%rd2786+12], %r1;
	st.global.u32 	[%rd2786+16], %r10871;
	bra.uni 	BB1_1043;

BB1_1041:
	atom.global.add.u32 	%r10848, [%rd104], -1;

BB1_1043:
	ld.param.u32 	%r10851, [m01700_m04_param_30];
	add.s32 	%r10871, %r10871, 1;
	setp.lt.u32	%p785, %r10871, %r10851;
	@%p785 bra 	BB1_3;

BB1_1044:
	ret;
}

	// .globl	m01700_m08
.entry m01700_m08(
	.param .u64 .ptr .global .align 4 m01700_m08_param_0,
	.param .u64 .ptr .const .align 4 m01700_m08_param_1,
	.param .u64 .ptr .global .align 4 m01700_m08_param_2,
	.param .u64 .ptr .global .align 4 m01700_m08_param_3,
	.param .u64 .ptr .global .align 1 m01700_m08_param_4,
	.param .u64 .ptr .global .align 1 m01700_m08_param_5,
	.param .u64 .ptr .global .align 4 m01700_m08_param_6,
	.param .u64 .ptr .global .align 4 m01700_m08_param_7,
	.param .u64 .ptr .global .align 4 m01700_m08_param_8,
	.param .u64 .ptr .global .align 4 m01700_m08_param_9,
	.param .u64 .ptr .global .align 4 m01700_m08_param_10,
	.param .u64 .ptr .global .align 4 m01700_m08_param_11,
	.param .u64 .ptr .global .align 4 m01700_m08_param_12,
	.param .u64 .ptr .global .align 4 m01700_m08_param_13,
	.param .u64 .ptr .global .align 4 m01700_m08_param_14,
	.param .u64 .ptr .global .align 4 m01700_m08_param_15,
	.param .u64 .ptr .global .align 4 m01700_m08_param_16,
	.param .u64 .ptr .global .align 4 m01700_m08_param_17,
	.param .u64 .ptr .global .align 1 m01700_m08_param_18,
	.param .u64 .ptr .global .align 4 m01700_m08_param_19,
	.param .u64 .ptr .global .align 4 m01700_m08_param_20,
	.param .u64 .ptr .global .align 4 m01700_m08_param_21,
	.param .u64 .ptr .global .align 4 m01700_m08_param_22,
	.param .u64 .ptr .global .align 4 m01700_m08_param_23,
	.param .u32 m01700_m08_param_24,
	.param .u32 m01700_m08_param_25,
	.param .u32 m01700_m08_param_26,
	.param .u32 m01700_m08_param_27,
	.param .u32 m01700_m08_param_28,
	.param .u32 m01700_m08_param_29,
	.param .u32 m01700_m08_param_30,
	.param .u32 m01700_m08_param_31,
	.param .u32 m01700_m08_param_32,
	.param .u32 m01700_m08_param_33,
	.param .u64 m01700_m08_param_34
)
{



	ret;
}

	// .globl	m01700_m16
.entry m01700_m16(
	.param .u64 .ptr .global .align 4 m01700_m16_param_0,
	.param .u64 .ptr .const .align 4 m01700_m16_param_1,
	.param .u64 .ptr .global .align 4 m01700_m16_param_2,
	.param .u64 .ptr .global .align 4 m01700_m16_param_3,
	.param .u64 .ptr .global .align 1 m01700_m16_param_4,
	.param .u64 .ptr .global .align 1 m01700_m16_param_5,
	.param .u64 .ptr .global .align 4 m01700_m16_param_6,
	.param .u64 .ptr .global .align 4 m01700_m16_param_7,
	.param .u64 .ptr .global .align 4 m01700_m16_param_8,
	.param .u64 .ptr .global .align 4 m01700_m16_param_9,
	.param .u64 .ptr .global .align 4 m01700_m16_param_10,
	.param .u64 .ptr .global .align 4 m01700_m16_param_11,
	.param .u64 .ptr .global .align 4 m01700_m16_param_12,
	.param .u64 .ptr .global .align 4 m01700_m16_param_13,
	.param .u64 .ptr .global .align 4 m01700_m16_param_14,
	.param .u64 .ptr .global .align 4 m01700_m16_param_15,
	.param .u64 .ptr .global .align 4 m01700_m16_param_16,
	.param .u64 .ptr .global .align 4 m01700_m16_param_17,
	.param .u64 .ptr .global .align 1 m01700_m16_param_18,
	.param .u64 .ptr .global .align 4 m01700_m16_param_19,
	.param .u64 .ptr .global .align 4 m01700_m16_param_20,
	.param .u64 .ptr .global .align 4 m01700_m16_param_21,
	.param .u64 .ptr .global .align 4 m01700_m16_param_22,
	.param .u64 .ptr .global .align 4 m01700_m16_param_23,
	.param .u32 m01700_m16_param_24,
	.param .u32 m01700_m16_param_25,
	.param .u32 m01700_m16_param_26,
	.param .u32 m01700_m16_param_27,
	.param .u32 m01700_m16_param_28,
	.param .u32 m01700_m16_param_29,
	.param .u32 m01700_m16_param_30,
	.param .u32 m01700_m16_param_31,
	.param .u32 m01700_m16_param_32,
	.param .u32 m01700_m16_param_33,
	.param .u64 m01700_m16_param_34
)
{



	ret;
}

	// .globl	m01700_s04
.entry m01700_s04(
	.param .u64 .ptr .global .align 4 m01700_s04_param_0,
	.param .u64 .ptr .const .align 4 m01700_s04_param_1,
	.param .u64 .ptr .global .align 4 m01700_s04_param_2,
	.param .u64 .ptr .global .align 4 m01700_s04_param_3,
	.param .u64 .ptr .global .align 1 m01700_s04_param_4,
	.param .u64 .ptr .global .align 1 m01700_s04_param_5,
	.param .u64 .ptr .global .align 4 m01700_s04_param_6,
	.param .u64 .ptr .global .align 4 m01700_s04_param_7,
	.param .u64 .ptr .global .align 4 m01700_s04_param_8,
	.param .u64 .ptr .global .align 4 m01700_s04_param_9,
	.param .u64 .ptr .global .align 4 m01700_s04_param_10,
	.param .u64 .ptr .global .align 4 m01700_s04_param_11,
	.param .u64 .ptr .global .align 4 m01700_s04_param_12,
	.param .u64 .ptr .global .align 4 m01700_s04_param_13,
	.param .u64 .ptr .global .align 4 m01700_s04_param_14,
	.param .u64 .ptr .global .align 4 m01700_s04_param_15,
	.param .u64 .ptr .global .align 4 m01700_s04_param_16,
	.param .u64 .ptr .global .align 4 m01700_s04_param_17,
	.param .u64 .ptr .global .align 1 m01700_s04_param_18,
	.param .u64 .ptr .global .align 4 m01700_s04_param_19,
	.param .u64 .ptr .global .align 4 m01700_s04_param_20,
	.param .u64 .ptr .global .align 4 m01700_s04_param_21,
	.param .u64 .ptr .global .align 4 m01700_s04_param_22,
	.param .u64 .ptr .global .align 4 m01700_s04_param_23,
	.param .u32 m01700_s04_param_24,
	.param .u32 m01700_s04_param_25,
	.param .u32 m01700_s04_param_26,
	.param .u32 m01700_s04_param_27,
	.param .u32 m01700_s04_param_28,
	.param .u32 m01700_s04_param_29,
	.param .u32 m01700_s04_param_30,
	.param .u32 m01700_s04_param_31,
	.param .u32 m01700_s04_param_32,
	.param .u32 m01700_s04_param_33,
	.param .u64 m01700_s04_param_34
)
{
	.local .align 16 .b8 	__local_depot4[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<771>;
	.reg .b16 	%rs<24>;
	.reg .b32 	%r<10976>;
	.reg .b64 	%rd<2841>;


	mov.u64 	%rd2840, __local_depot4;
	cvta.local.u64 	%SP, %rd2840;
	ld.param.u64 	%rd92, [m01700_s04_param_0];
	ld.param.u64 	%rd93, [m01700_s04_param_1];
	ld.param.u64 	%rd95, [m01700_s04_param_15];
	ld.param.u64 	%rd97, [m01700_s04_param_19];
	ld.param.u32 	%r1565, [m01700_s04_param_30];
	ld.param.u32 	%r1567, [m01700_s04_param_32];
	ld.param.u64 	%rd98, [m01700_s04_param_34];
	mov.u32 	%r1568, %ctaid.x;
	mov.u32 	%r1569, %ntid.x;
	mov.b32	%r1570, %envreg3;
	mad.lo.s32 	%r1571, %r1568, %r1569, %r1570;
	mov.u32 	%r1572, %tid.x;
	add.s32 	%r1, %r1571, %r1572;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd98;
	@%p1 bra 	BB4_1023;

	mul.lo.s64 	%rd99, %rd1, 260;
	add.s64 	%rd100, %rd92, %rd99;
	ld.global.u32 	%r2, [%rd100];
	ld.global.u32 	%r3, [%rd100+4];
	ld.global.u32 	%r4, [%rd100+8];
	ld.global.u32 	%r5, [%rd100+12];
	ld.global.u32 	%r6, [%rd100+16];
	ld.global.u32 	%r7, [%rd100+20];
	ld.global.u32 	%r8, [%rd100+24];
	ld.global.u32 	%r9, [%rd100+28];
	ld.global.u32 	%r10, [%rd100+256];
	setp.eq.s32	%p2, %r1565, 0;
	@%p2 bra 	BB4_1023;

	mul.wide.u32 	%rd101, %r1567, 64;
	add.s64 	%rd102, %rd95, %rd101;
	ld.global.u32 	%r11, [%rd102+56];
	ld.global.u32 	%r12, [%rd102+60];
	ld.global.u32 	%r13, [%rd102+24];
	ld.global.u32 	%r14, [%rd102+28];
	mov.u64 	%rd103, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1575,%dummy}, %rd103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1576}, %rd103;
	}
	shf.r.wrap.b32 	%r1577, %r1576, %r1575, 18;
	shf.r.wrap.b32 	%r1578, %r1575, %r1576, 18;
	mov.b64 	%rd104, {%r1578, %r1577};
	shf.r.wrap.b32 	%r1579, %r1576, %r1575, 14;
	shf.r.wrap.b32 	%r1580, %r1575, %r1576, 14;
	mov.b64 	%rd105, {%r1580, %r1579};
	xor.b64  	%rd106, %rd104, %rd105;
	shf.l.wrap.b32 	%r1581, %r1575, %r1576, 23;
	shf.l.wrap.b32 	%r1582, %r1576, %r1575, 23;
	mov.b64 	%rd107, {%r1582, %r1581};
	xor.b64  	%rd3, %rd106, %rd107;
	mov.u64 	%rd108, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1583}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd108;
	}
	shf.l.wrap.b32 	%r1585, %r1584, %r1583, 30;
	shf.l.wrap.b32 	%r1586, %r1583, %r1584, 30;
	mov.b64 	%rd109, {%r1586, %r1585};
	shf.r.wrap.b32 	%r1587, %r1583, %r1584, 28;
	shf.r.wrap.b32 	%r1588, %r1584, %r1583, 28;
	mov.b64 	%rd110, {%r1588, %r1587};
	xor.b64  	%rd111, %rd109, %rd110;
	shf.l.wrap.b32 	%r1589, %r1584, %r1583, 25;
	shf.l.wrap.b32 	%r1590, %r1583, %r1584, 25;
	mov.b64 	%rd112, {%r1590, %r1589};
	xor.b64  	%rd4, %rd111, %rd112;
	mov.u64 	%rd113, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1591}, %rd113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1592,%dummy}, %rd113;
	}
	shf.l.wrap.b32 	%r1593, %r1592, %r1591, 3;
	shf.l.wrap.b32 	%r1594, %r1591, %r1592, 3;
	mov.b64 	%rd114, {%r1594, %r1593};
	shf.r.wrap.b32 	%r1595, %r1591, %r1592, 19;
	shf.r.wrap.b32 	%r1596, %r1592, %r1591, 19;
	mov.b64 	%rd115, {%r1596, %r1595};
	xor.b64  	%rd20, %rd115, %rd114;
	shf.r.wrap.b32 	%r1597, %r1591, %r1592, 8;
	shf.r.wrap.b32 	%r1598, %r1592, %r1591, 8;
	mov.b64 	%rd116, {%r1598, %r1597};
	shf.r.wrap.b32 	%r1599, %r1591, %r1592, 1;
	shf.r.wrap.b32 	%r1600, %r1592, %r1591, 1;
	mov.b64 	%rd117, {%r1600, %r1599};
	xor.b64  	%rd21, %rd117, %rd116;
	mov.u32 	%r10776, 0;

BB4_3:
	mov.u32 	%r10786, 0;
	cvt.u64.u32	%rd83, %r10776;
	mul.wide.u32 	%rd118, %r10776, 128;
	add.s64 	%rd119, %rd93, %rd118;
	ld.const.u32 	%r10785, [%rd119];
	setp.eq.s32	%p3, %r10785, 0;
	mov.u32 	%r10975, %r10;
	mov.u32 	%r10966, %r5;
	mov.u32 	%r10965, %r4;
	mov.u32 	%r10964, %r3;
	mov.u32 	%r10963, %r2;
	mov.u32 	%r10962, %r9;
	mov.u32 	%r10961, %r8;
	mov.u32 	%r10960, %r7;
	mov.u32 	%r10959, %r6;
	@%p3 bra 	BB4_1016;
	bra.uni 	BB4_4;

BB4_758:
	mov.u32 	%r6464, 8;
	// inline asm
	shf.r.wrap.b32 %r10963, %r39, %r38, %r6464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r38, %r37, %r6464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r37, %r36, %r6464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10966, %r36, %r43, %r6464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r43, %r42, %r6464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10960, %r42, %r41, %r6464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10961, %r41, %r40, %r6464;
	// inline asm
	mov.u32 	%r6463, 0;
	// inline asm
	shf.r.wrap.b32 %r10962, %r40, %r6463, %r6464;
	// inline asm
	bra.uni 	BB4_1015;

BB4_499:
	setp.gt.s32	%p463, %r5182, 5;
	@%p463 bra 	BB4_504;

	setp.eq.s32	%p466, %r5182, 4;
	@%p466 bra 	BB4_511;
	bra.uni 	BB4_501;

BB4_511:
	and.b32  	%r5197, %r700, %r43;
	or.b32  	%r5198, %r5197, %r699;
	and.b32  	%r5199, %r10967, %r701;
	or.b32  	%r10959, %r5198, %r5199;
	mov.u32 	%r10960, %r10968;
	bra.uni 	BB4_503;

BB4_657:
	setp.gt.s32	%p538, %r45, 23;
	@%p538 bra 	BB4_674;

	setp.gt.s32	%p550, %r45, 19;
	@%p550 bra 	BB4_666;

	setp.gt.s32	%p556, %r45, 17;
	@%p556 bra 	BB4_663;

	setp.eq.s32	%p559, %r45, 16;
	@%p559 bra 	BB4_698;
	bra.uni 	BB4_661;

BB4_698:
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10963, %r43;
	mov.u32 	%r10964, %r42;
	mov.u32 	%r10965, %r41;
	bra.uni 	BB4_712;

BB4_956:
	setp.gt.s32	%p716, %r7844, 23;
	@%p716 bra 	BB4_972;

	setp.gt.s32	%p728, %r7844, 19;
	@%p728 bra 	BB4_965;

	setp.gt.s32	%p734, %r7844, 17;
	@%p734 bra 	BB4_962;

	setp.eq.s32	%p737, %r7844, 16;
	@%p737 bra 	BB4_994;
	bra.uni 	BB4_960;

BB4_994:
	mov.u32 	%r10970, 0;
	mov.u32 	%r10974, %r39;
	mov.u32 	%r10973, %r38;
	mov.u32 	%r10972, %r37;
	mov.u32 	%r10971, %r36;
	bra.uni 	BB4_995;

BB4_548:
	setp.gt.s32	%p477, %r47, 23;
	@%p477 bra 	BB4_566;

	setp.gt.s32	%p489, %r47, 19;
	@%p489 bra 	BB4_558;

	setp.gt.s32	%p495, %r47, 17;
	@%p495 bra 	BB4_554;

	setp.eq.s32	%p498, %r47, 16;
	@%p498 bra 	BB4_592;
	bra.uni 	BB4_552;

BB4_592:
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r43;
	mov.u32 	%r10972, %r42;
	mov.u32 	%r10973, %r41;
	mov.u32 	%r10974, %r40;
	bra.uni 	BB4_601;

BB4_920:
	setp.gt.s32	%p705, %r7665, 5;
	@%p705 bra 	BB4_924;

	setp.eq.s32	%p708, %r7665, 4;
	@%p708 bra 	BB4_928;
	bra.uni 	BB4_922;

BB4_928:
	// inline asm
	prmt.b32 %r10950, %r37, %r36, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10949, %r38, %r37, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10948, %r39, %r38, %r1301;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	prmt.b32 %r10947, %r10943, %r39, %r1301;
	// inline asm
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r10945, %r10943;
	mov.u32 	%r10946, %r10943;
	bra.uni 	BB4_931;

BB4_755:
	and.b32  	%r6418, %r10975, 3;
	shl.b32 	%r6419, %r6418, 3;
	mov.u32 	%r6420, 1;
	shl.b32 	%r6421, %r6420, %r6419;
	add.s32 	%r6422, %r6421, -1;
	setp.lt.u32	%p606, %r10975, 4;
	selp.b32	%r6423, %r6422, -1, %p606;
	and.b32  	%r10963, %r6423, %r39;
	and.b32  	%r6424, %r10975, -4;
	setp.eq.s32	%p607, %r6424, 4;
	selp.b32	%r6425, %r6422, -1, %p607;
	and.b32  	%r10964, %r6425, %r38;
	setp.eq.s32	%p608, %r6424, 8;
	selp.b32	%r6426, %r6422, -1, %p608;
	and.b32  	%r10965, %r6426, %r37;
	setp.eq.s32	%p609, %r6424, 12;
	selp.b32	%r6427, %r6422, -1, %p609;
	and.b32  	%r10966, %r6427, %r36;
	setp.eq.s32	%p610, %r6424, 16;
	selp.b32	%r6428, %r6422, -1, %p610;
	and.b32  	%r10959, %r6428, %r43;
	setp.eq.s32	%p611, %r6424, 20;
	selp.b32	%r6429, %r6422, -1, %p611;
	and.b32  	%r10960, %r6429, %r42;
	setp.eq.s32	%p612, %r6424, 24;
	selp.b32	%r6430, %r6422, -1, %p612;
	and.b32  	%r10961, %r6430, %r41;
	setp.gt.u32	%p613, %r10975, 27;
	selp.b32	%r6431, %r6422, -1, %p613;
	and.b32  	%r10962, %r6431, %r40;
	bra.uni 	BB4_1015;

BB4_363:
	setp.gt.s32	%p272, %r45, 23;
	@%p272 bra 	BB4_379;

	setp.gt.s32	%p284, %r45, 19;
	@%p284 bra 	BB4_372;

	setp.gt.s32	%p290, %r45, 17;
	@%p290 bra 	BB4_369;

	setp.eq.s32	%p293, %r45, 16;
	@%p293 bra 	BB4_401;
	bra.uni 	BB4_367;

BB4_401:
	mov.u32 	%r10850, 0;
	mov.u32 	%r10846, %r39;
	mov.u32 	%r10847, %r38;
	mov.u32 	%r10848, %r37;
	mov.u32 	%r43, %r36;
	bra.uni 	BB4_402;

BB4_761:
	shl.b32 	%r6500, %r10975, 3;
	and.b32  	%r6501, %r6500, 24;
	ld.const.u32 	%r6502, [%rd88];
	and.b32  	%r6503, %r6502, %r39;
	ld.const.u32 	%r6504, [%rd88+4];
	and.b32  	%r6505, %r6504, %r38;
	or.b32  	%r6506, %r6505, %r6503;
	ld.const.u32 	%r6507, [%rd88+8];
	and.b32  	%r6508, %r6507, %r37;
	or.b32  	%r6509, %r6506, %r6508;
	ld.const.u32 	%r6510, [%rd88+12];
	and.b32  	%r6511, %r6510, %r36;
	or.b32  	%r6512, %r6509, %r6511;
	ld.const.u32 	%r6513, [%rd88+16];
	and.b32  	%r6514, %r6513, %r43;
	or.b32  	%r6515, %r6512, %r6514;
	ld.const.u32 	%r6516, [%rd88+20];
	and.b32  	%r6517, %r6516, %r42;
	or.b32  	%r6518, %r6515, %r6517;
	ld.const.u32 	%r6519, [%rd88+24];
	and.b32  	%r6520, %r6519, %r41;
	or.b32  	%r6521, %r6518, %r6520;
	ld.const.u32 	%r6522, [%rd88+28];
	and.b32  	%r6523, %r6522, %r40;
	or.b32  	%r6524, %r6521, %r6523;
	shr.u32 	%r6525, %r6524, %r6501;
	and.b32  	%r6526, %r6525, 255;
	mov.u32 	%r6497, 24;
	// inline asm
	shf.r.wrap.b32 %r6466, %r41, %r40, %r6497;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10961, %r42, %r41, %r6497;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10960, %r43, %r42, %r6497;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r36, %r43, %r6497;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10966, %r37, %r36, %r6497;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r38, %r37, %r6497;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r39, %r38, %r6497;
	// inline asm
	mov.u32 	%r10962, 0;
	// inline asm
	shf.r.wrap.b32 %r6494, %r10962, %r39, %r6497;
	// inline asm
	or.b32  	%r10963, %r6494, %r6526;
	shl.b32 	%r6527, %r27, 3;
	and.b32  	%r6528, %r6527, 24;
	mov.u32 	%r6529, 1;
	shl.b32 	%r6530, %r6529, %r6528;
	add.s32 	%r1023, %r6530, -1;
	shr.u32 	%r6498, %r27, 2;
	setp.gt.s32	%p616, %r6498, 3;
	@%p616 bra 	BB4_770;

	setp.gt.s32	%p622, %r6498, 1;
	@%p622 bra 	BB4_767;

	setp.eq.s32	%p625, %r6498, 0;
	@%p625 bra 	BB4_782;
	bra.uni 	BB4_764;

BB4_782:
	and.b32  	%r10963, %r10963, %r1023;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10964, %r10959;
	bra.uni 	BB4_766;

BB4_496:
	setp.eq.s32	%p469, %r5182, 2;
	@%p469 bra 	BB4_512;
	bra.uni 	BB4_497;

BB4_512:
	and.b32  	%r5203, %r700, %r37;
	or.b32  	%r5204, %r5203, %r699;
	and.b32  	%r5205, %r10973, %r701;
	or.b32  	%r10965, %r5204, %r5205;
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10966, %r10974;
	bra.uni 	BB4_1015;

BB4_642:
	setp.gt.s32	%p562, %r45, 11;
	@%p562 bra 	BB4_650;

	setp.gt.s32	%p568, %r45, 9;
	@%p568 bra 	BB4_647;

	setp.eq.s32	%p571, %r45, 8;
	@%p571 bra 	BB4_702;
	bra.uni 	BB4_645;

BB4_702:
	mov.u32 	%r10961, 0;
	mov.u32 	%r10959, %r41;
	mov.u32 	%r10960, %r40;
	mov.u32 	%r10962, %r10961;
	mov.u32 	%r10963, %r37;
	mov.u32 	%r10964, %r36;
	mov.u32 	%r10965, %r43;
	mov.u32 	%r40, %r42;
	bra.uni 	BB4_712;

BB4_474:
	setp.gt.s32	%p448, %r5100, 5;
	@%p448 bra 	BB4_478;

	setp.eq.s32	%p451, %r5100, 4;
	@%p451 bra 	BB4_484;
	bra.uni 	BB4_476;

BB4_484:
	and.b32  	%r10959, %r673, %r43;
	mov.u32 	%r10960, 0;
	mov.u32 	%r10961, %r10960;
	mov.u32 	%r10962, %r10960;
	bra.uni 	BB4_482;

BB4_941:
	setp.gt.s32	%p740, %r7844, 11;
	@%p740 bra 	BB4_949;

	setp.gt.s32	%p746, %r7844, 9;
	@%p746 bra 	BB4_946;

	setp.eq.s32	%p749, %r7844, 8;
	@%p749 bra 	BB4_1001;
	bra.uni 	BB4_944;

BB4_1001:
	mov.u32 	%r10970, 0;
	mov.u32 	%r10974, %r37;
	mov.u32 	%r10973, %r36;
	mov.u32 	%r10972, %r43;
	mov.u32 	%r10971, %r42;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10968, %r39;
	mov.u32 	%r10967, %r38;
	bra.uni 	BB4_1008;

BB4_145:
	setp.gt.s32	%p131, %r45, 23;
	@%p131 bra 	BB4_161;

	setp.gt.s32	%p143, %r45, 19;
	@%p143 bra 	BB4_154;

	setp.gt.s32	%p149, %r45, 17;
	@%p149 bra 	BB4_151;

	setp.eq.s32	%p152, %r45, 16;
	@%p152 bra 	BB4_186;
	bra.uni 	BB4_149;

BB4_186:
	mov.u32 	%r10971, 0;
	mov.u32 	%r10967, %r39;
	mov.u32 	%r10968, %r38;
	mov.u32 	%r10969, %r37;
	mov.u32 	%r10970, %r36;
	bra.uni 	BB4_187;

BB4_221:
	setp.gt.s32	%p192, %r3143, 5;
	@%p192 bra 	BB4_225;

	setp.eq.s32	%p195, %r3143, 4;
	@%p195 bra 	BB4_230;
	bra.uni 	BB4_223;

BB4_230:
	and.b32  	%r10967, %r237, %r43;
	mov.u32 	%r10968, 0;
	mov.u32 	%r10969, %r10968;
	mov.u32 	%r10970, %r10968;
	bra.uni 	BB4_228;

BB4_504:
	setp.eq.s32	%p464, %r5182, 6;
	@%p464 bra 	BB4_507;
	bra.uni 	BB4_505;

BB4_507:
	and.b32  	%r5191, %r700, %r41;
	or.b32  	%r5192, %r5191, %r699;
	and.b32  	%r5193, %r10969, %r701;
	or.b32  	%r10961, %r5192, %r5193;
	bra.uni 	BB4_508;

BB4_674:
	setp.gt.s32	%p539, %r45, 27;
	@%p539 bra 	BB4_683;

	setp.gt.s32	%p545, %r45, 25;
	@%p545 bra 	BB4_679;

	setp.eq.s32	%p548, %r45, 24;
	@%p548 bra 	BB4_692;
	bra.uni 	BB4_677;

BB4_692:
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10963, %r41;
	mov.u32 	%r10964, %r40;
	bra.uni 	BB4_710;

BB4_972:
	setp.gt.s32	%p717, %r7844, 27;
	@%p717 bra 	BB4_981;

	setp.gt.s32	%p723, %r7844, 25;
	@%p723 bra 	BB4_977;

	setp.eq.s32	%p726, %r7844, 24;
	@%p726 bra 	BB4_990;
	bra.uni 	BB4_975;

BB4_990:
	mov.u32 	%r10974, 0;
	mov.u32 	%r10973, %r10974;
	mov.u32 	%r10972, %r39;
	mov.u32 	%r10971, %r38;
	bra.uni 	BB4_1007;

BB4_532:
	setp.gt.s32	%p501, %r47, 11;
	@%p501 bra 	BB4_540;

	setp.gt.s32	%p507, %r47, 9;
	@%p507 bra 	BB4_537;

	setp.eq.s32	%p510, %r47, 8;
	@%p510 bra 	BB4_596;
	bra.uni 	BB4_535;

BB4_596:
	mov.u32 	%r10967, %r41;
	mov.u32 	%r10968, %r40;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r37;
	mov.u32 	%r10972, %r36;
	mov.u32 	%r10973, %r43;
	mov.u32 	%r10974, %r42;
	bra.uni 	BB4_601;

BB4_917:
	setp.eq.s32	%p711, %r7665, 2;
	@%p711 bra 	BB4_929;
	bra.uni 	BB4_918;

BB4_929:
	// inline asm
	prmt.b32 %r10950, %r43, %r42, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10949, %r36, %r43, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10948, %r37, %r36, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10947, %r38, %r37, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10946, %r39, %r38, %r1301;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	prmt.b32 %r10945, %r10943, %r39, %r1301;
	// inline asm
	mov.u32 	%r10944, %r10943;
	bra.uni 	BB4_931;

BB4_817:
	setp.gt.s32	%p632, %r6677, 23;
	@%p632 bra 	BB4_834;

	setp.gt.s32	%p644, %r6677, 19;
	@%p644 bra 	BB4_827;

	setp.gt.s32	%p650, %r6677, 17;
	@%p650 bra 	BB4_823;

	setp.eq.s32	%p653, %r6677, 16;
	@%p653 bra 	BB4_860;
	bra.uni 	BB4_821;

BB4_860:
	mov.u32 	%r10974, %r39;
	mov.u32 	%r10973, %r38;
	mov.u32 	%r10972, %r37;
	mov.u32 	%r10971, %r36;
	bra.uni 	BB4_854;

BB4_740:
	setp.gt.s32	%p595, %r6396, 5;
	@%p595 bra 	BB4_745;

	setp.eq.s32	%p598, %r6396, 4;
	@%p598 bra 	BB4_750;
	bra.uni 	BB4_742;

BB4_750:
	and.b32  	%r6407, %r978, %r43;
	and.b32  	%r6408, %r10967, %r979;
	or.b32  	%r10959, %r6408, %r6407;
	mov.u32 	%r10960, %r10968;
	bra.uni 	BB4_744;

BB4_348:
	setp.gt.s32	%p296, %r45, 11;
	@%p296 bra 	BB4_356;

	setp.gt.s32	%p302, %r45, 9;
	@%p302 bra 	BB4_353;

	setp.eq.s32	%p305, %r45, 8;
	@%p305 bra 	BB4_408;
	bra.uni 	BB4_351;

BB4_408:
	mov.u32 	%r10850, 0;
	mov.u32 	%r10846, %r37;
	mov.u32 	%r10847, %r36;
	mov.u32 	%r10848, %r43;
	mov.u32 	%r43, %r42;
	mov.u32 	%r10851, %r10850;
	mov.u32 	%r10852, %r39;
	mov.u32 	%r39, %r38;
	bra.uni 	BB4_416;

BB4_566:
	setp.gt.s32	%p478, %r47, 27;
	@%p478 bra 	BB4_576;

	setp.gt.s32	%p484, %r47, 25;
	@%p484 bra 	BB4_571;

	setp.eq.s32	%p487, %r47, 24;
	@%p487 bra 	BB4_588;
	bra.uni 	BB4_569;

BB4_588:
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r41;
	mov.u32 	%r10972, %r40;
	bra.uni 	BB4_586;

BB4_924:
	setp.eq.s32	%p706, %r7665, 6;
	@%p706 bra 	BB4_927;
	bra.uni 	BB4_925;

BB4_927:
	// inline asm
	prmt.b32 %r10950, %r39, %r38, %r1301;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	prmt.b32 %r10949, %r10943, %r39, %r1301;
	// inline asm
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r10945, %r10943;
	mov.u32 	%r10946, %r10943;
	mov.u32 	%r10947, %r10943;
	mov.u32 	%r10948, %r10943;
	bra.uni 	BB4_931;

BB4_379:
	setp.gt.s32	%p273, %r45, 27;
	@%p273 bra 	BB4_388;

	setp.gt.s32	%p279, %r45, 25;
	@%p279 bra 	BB4_384;

	setp.eq.s32	%p282, %r45, 24;
	@%p282 bra 	BB4_397;
	bra.uni 	BB4_382;

BB4_397:
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r39;
	mov.u32 	%r43, %r38;
	bra.uni 	BB4_415;

BB4_770:
	setp.gt.s32	%p617, %r6498, 5;
	@%p617 bra 	BB4_774;

	setp.eq.s32	%p620, %r6498, 4;
	@%p620 bra 	BB4_779;
	bra.uni 	BB4_772;

BB4_779:
	and.b32  	%r10959, %r10959, %r1023;
	mov.u32 	%r10960, 0;
	mov.u32 	%r10961, %r10960;
	mov.u32 	%r10962, %r10960;
	bra.uni 	BB4_1014;

BB4_493:
	setp.eq.s32	%p472, %r5182, 1;
	@%p472 bra 	BB4_494;
	bra.uni 	BB4_111;

BB4_494:
	and.b32  	%r5206, %r700, %r38;
	or.b32  	%r5207, %r5206, %r699;
	and.b32  	%r5208, %r10972, %r701;
	or.b32  	%r10964, %r5207, %r5208;
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10963, %r39;

BB4_495:
	mov.u32 	%r10965, %r10973;
	mov.u32 	%r10966, %r10974;
	bra.uni 	BB4_1015;

BB4_635:
	setp.gt.s32	%p574, %r45, 5;
	@%p574 bra 	BB4_639;

	setp.eq.s32	%p577, %r45, 4;
	@%p577 bra 	BB4_704;
	bra.uni 	BB4_637;

BB4_704:
	mov.u32 	%r10962, 0;
	mov.u32 	%r10959, %r42;
	mov.u32 	%r10960, %r41;
	mov.u32 	%r10961, %r40;
	mov.u32 	%r10963, %r38;
	mov.u32 	%r10964, %r37;
	mov.u32 	%r10965, %r36;
	mov.u32 	%r40, %r43;
	bra.uni 	BB4_712;

BB4_471:
	setp.eq.s32	%p454, %r5100, 2;
	@%p454 bra 	BB4_485;
	bra.uni 	BB4_472;

BB4_485:
	and.b32  	%r10965, %r673, %r37;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	bra.uni 	BB4_486;

BB4_934:
	setp.gt.s32	%p752, %r7844, 5;
	@%p752 bra 	BB4_938;

	setp.eq.s32	%p755, %r7844, 4;
	@%p755 bra 	BB4_1003;
	bra.uni 	BB4_936;

BB4_1003:
	mov.u32 	%r10970, 0;
	mov.u32 	%r10974, %r36;
	mov.u32 	%r10973, %r43;
	mov.u32 	%r10972, %r42;
	mov.u32 	%r10971, %r41;
	mov.u32 	%r10969, %r39;
	mov.u32 	%r10968, %r38;
	mov.u32 	%r10967, %r37;
	bra.uni 	BB4_1008;

BB4_129:
	setp.gt.s32	%p155, %r45, 11;
	@%p155 bra 	BB4_137;

	setp.gt.s32	%p161, %r45, 9;
	@%p161 bra 	BB4_134;

	setp.eq.s32	%p164, %r45, 8;
	@%p164 bra 	BB4_191;
	bra.uni 	BB4_132;

BB4_191:
	mov.u32 	%r10971, 0;
	mov.u32 	%r10967, %r37;
	mov.u32 	%r10968, %r36;
	mov.u32 	%r10969, %r43;
	mov.u32 	%r10970, %r42;
	mov.u32 	%r10972, %r10971;
	mov.u32 	%r10973, %r39;
	mov.u32 	%r10974, %r38;
	bra.uni 	BB4_195;

BB4_218:
	setp.eq.s32	%p198, %r3143, 2;
	@%p198 bra 	BB4_231;
	bra.uni 	BB4_219;

BB4_231:
	and.b32  	%r10973, %r237, %r37;
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	bra.uni 	BB4_232;

BB4_501:
	setp.eq.s32	%p467, %r5182, 5;
	@%p467 bra 	BB4_502;
	bra.uni 	BB4_111;

BB4_502:
	and.b32  	%r5194, %r700, %r42;
	or.b32  	%r5195, %r5194, %r699;
	and.b32  	%r5196, %r10968, %r701;
	or.b32  	%r10960, %r5195, %r5196;
	mov.u32 	%r10959, %r43;

BB4_503:
	mov.u32 	%r10961, %r10969;
	bra.uni 	BB4_509;

BB4_666:
	setp.gt.s32	%p551, %r45, 21;
	@%p551 bra 	BB4_670;

	setp.eq.s32	%p554, %r45, 20;
	@%p554 bra 	BB4_694;
	bra.uni 	BB4_668;

BB4_694:
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10963, %r42;
	mov.u32 	%r10964, %r41;
	mov.u32 	%r10965, %r40;
	bra.uni 	BB4_711;

BB4_965:
	setp.gt.s32	%p729, %r7844, 21;
	@%p729 bra 	BB4_969;

	setp.eq.s32	%p732, %r7844, 20;
	@%p732 bra 	BB4_992;
	bra.uni 	BB4_967;

BB4_992:
	mov.u32 	%r10974, 0;
	mov.u32 	%r10973, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10971, %r37;
	bra.uni 	BB4_1007;

BB4_497:
	setp.eq.s32	%p470, %r5182, 3;
	@%p470 bra 	BB4_498;
	bra.uni 	BB4_111;

BB4_498:
	and.b32  	%r5200, %r700, %r36;
	or.b32  	%r5201, %r5200, %r699;
	and.b32  	%r5202, %r10974, %r701;
	or.b32  	%r10966, %r5201, %r5202;
	bra.uni 	BB4_739;

BB4_650:
	setp.gt.s32	%p563, %r45, 13;
	@%p563 bra 	BB4_654;

	setp.eq.s32	%p566, %r45, 12;
	@%p566 bra 	BB4_700;
	bra.uni 	BB4_652;

BB4_700:
	mov.u32 	%r10960, 0;
	mov.u32 	%r10959, %r40;
	mov.u32 	%r10961, %r10960;
	mov.u32 	%r10962, %r10960;
	mov.u32 	%r10963, %r36;
	mov.u32 	%r10964, %r43;
	mov.u32 	%r10965, %r42;
	mov.u32 	%r40, %r41;
	bra.uni 	BB4_712;

BB4_478:
	setp.eq.s32	%p449, %r5100, 6;
	@%p449 bra 	BB4_483;
	bra.uni 	BB4_479;

BB4_483:
	and.b32  	%r10961, %r673, %r41;
	mov.u32 	%r10962, 0;
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	bra.uni 	BB4_482;

BB4_949:
	setp.gt.s32	%p741, %r7844, 13;
	@%p741 bra 	BB4_953;

	setp.eq.s32	%p744, %r7844, 12;
	@%p744 bra 	BB4_999;
	bra.uni 	BB4_951;

BB4_999:
	mov.u32 	%r10970, 0;
	mov.u32 	%r10974, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10972, %r36;
	mov.u32 	%r10971, %r43;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10967, %r39;
	bra.uni 	BB4_1008;

BB4_161:
	setp.gt.s32	%p132, %r45, 27;
	@%p132 bra 	BB4_170;

	setp.gt.s32	%p138, %r45, 25;
	@%p138 bra 	BB4_166;

	setp.eq.s32	%p141, %r45, 24;
	@%p141 bra 	BB4_182;
	bra.uni 	BB4_164;

BB4_182:
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r39;
	mov.u32 	%r10970, %r38;
	bra.uni 	BB4_180;

BB4_225:
	setp.eq.s32	%p193, %r3143, 6;
	@%p193 bra 	BB4_229;
	bra.uni 	BB4_226;

BB4_229:
	and.b32  	%r10969, %r237, %r41;
	mov.u32 	%r10970, 0;
	mov.u32 	%r10967, %r43;
	mov.u32 	%r10968, %r42;
	bra.uni 	BB4_228;

BB4_505:
	setp.ne.s32	%p465, %r5182, 7;
	@%p465 bra 	BB4_111;

	and.b32  	%r5188, %r700, %r40;
	or.b32  	%r5189, %r5188, %r699;
	and.b32  	%r5190, %r10970, %r701;
	or.b32  	%r10962, %r5189, %r5190;
	bra.uni 	BB4_748;

BB4_683:
	setp.gt.s32	%p540, %r45, 29;
	@%p540 bra 	BB4_687;

	setp.eq.s32	%p543, %r45, 28;
	@%p543 bra 	BB4_690;
	bra.uni 	BB4_685;

BB4_690:
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10963, %r40;
	bra.uni 	BB4_709;

BB4_981:
	setp.gt.s32	%p718, %r7844, 29;
	@%p718 bra 	BB4_985;

	setp.eq.s32	%p721, %r7844, 28;
	@%p721 bra 	BB4_988;
	bra.uni 	BB4_983;

BB4_988:
	mov.u32 	%r10974, 0;
	mov.u32 	%r10973, %r10974;
	mov.u32 	%r10972, %r10974;
	mov.u32 	%r10971, %r39;
	bra.uni 	BB4_1007;

BB4_525:
	setp.gt.s32	%p513, %r47, 5;
	@%p513 bra 	BB4_529;

	setp.eq.s32	%p516, %r47, 4;
	@%p516 bra 	BB4_598;
	bra.uni 	BB4_527;

BB4_598:
	mov.u32 	%r10967, %r42;
	mov.u32 	%r10968, %r41;
	mov.u32 	%r10969, %r40;
	mov.u32 	%r10971, %r38;
	mov.u32 	%r10972, %r37;
	mov.u32 	%r10973, %r36;
	mov.u32 	%r10974, %r43;
	bra.uni 	BB4_601;

BB4_915:
	setp.eq.s32	%p714, %r7665, 1;
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r10945, %r10943;
	mov.u32 	%r10946, %r10943;
	mov.u32 	%r10947, %r10943;
	mov.u32 	%r10948, %r10943;
	mov.u32 	%r10949, %r10943;
	mov.u32 	%r10950, %r10943;
	@%p714 bra 	BB4_916;
	bra.uni 	BB4_931;

BB4_916:
	// inline asm
	prmt.b32 %r10950, %r42, %r41, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10949, %r43, %r42, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10948, %r36, %r43, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10947, %r37, %r36, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10946, %r38, %r37, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10945, %r39, %r38, %r1301;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	prmt.b32 %r10944, %r10943, %r39, %r1301;
	// inline asm
	bra.uni 	BB4_931;

BB4_801:
	setp.gt.s32	%p656, %r6677, 11;
	@%p656 bra 	BB4_809;

	setp.gt.s32	%p662, %r6677, 9;
	@%p662 bra 	BB4_806;

	setp.eq.s32	%p665, %r6677, 8;
	@%p665 bra 	BB4_864;
	bra.uni 	BB4_804;

BB4_864:
	mov.u32 	%r10974, %r37;
	mov.u32 	%r10973, %r36;
	mov.u32 	%r10972, %r43;
	mov.u32 	%r10971, %r42;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r39;
	mov.u32 	%r10967, %r38;
	bra.uni 	BB4_868;

BB4_445:
	setp.eq.s32	%p363, %r624, 2;
	mov.u32 	%r10975, 0;
	@%p363 bra 	BB4_446;
	bra.uni 	BB4_447;

BB4_446:
	mov.u32 	%r10862, %r10975;
	bra.uni 	BB4_449;

BB4_736:
	setp.eq.s32	%p601, %r6396, 2;
	@%p601 bra 	BB4_751;
	bra.uni 	BB4_737;

BB4_751:
	and.b32  	%r6411, %r978, %r37;
	and.b32  	%r6412, %r10973, %r979;
	or.b32  	%r10965, %r6412, %r6411;
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	bra.uni 	BB4_752;

BB4_341:
	setp.gt.s32	%p308, %r45, 5;
	@%p308 bra 	BB4_345;

	setp.eq.s32	%p311, %r45, 4;
	@%p311 bra 	BB4_410;
	bra.uni 	BB4_343;

BB4_410:
	mov.u32 	%r10850, 0;
	mov.u32 	%r10846, %r36;
	mov.u32 	%r10847, %r43;
	mov.u32 	%r10848, %r42;
	mov.u32 	%r43, %r41;
	mov.u32 	%r10851, %r39;
	mov.u32 	%r10852, %r38;
	mov.u32 	%r39, %r37;
	bra.uni 	BB4_416;

BB4_558:
	setp.gt.s32	%p490, %r47, 21;
	@%p490 bra 	BB4_562;

	setp.eq.s32	%p493, %r47, 20;
	@%p493 bra 	BB4_590;
	bra.uni 	BB4_560;

BB4_590:
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r42;
	mov.u32 	%r10972, %r41;
	mov.u32 	%r10973, %r40;
	mov.u32 	%r10974, %r10970;
	bra.uni 	BB4_601;

BB4_922:
	setp.eq.s32	%p709, %r7665, 5;
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r10945, %r10943;
	mov.u32 	%r10946, %r10943;
	mov.u32 	%r10947, %r10943;
	mov.u32 	%r10948, %r10943;
	mov.u32 	%r10949, %r10943;
	mov.u32 	%r10950, %r10943;
	@%p709 bra 	BB4_923;
	bra.uni 	BB4_931;

BB4_923:
	// inline asm
	prmt.b32 %r10950, %r38, %r37, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10949, %r39, %r38, %r1301;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	prmt.b32 %r10948, %r10943, %r39, %r1301;
	// inline asm
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r10945, %r10943;
	mov.u32 	%r10946, %r10943;
	mov.u32 	%r10947, %r10943;
	bra.uni 	BB4_931;

BB4_372:
	setp.gt.s32	%p285, %r45, 21;
	@%p285 bra 	BB4_376;

	setp.eq.s32	%p288, %r45, 20;
	@%p288 bra 	BB4_399;
	bra.uni 	BB4_374;

BB4_399:
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r39;
	mov.u32 	%r10848, %r38;
	mov.u32 	%r43, %r37;
	bra.uni 	BB4_415;

BB4_767:
	setp.eq.s32	%p623, %r6498, 2;
	@%p623 bra 	BB4_780;
	bra.uni 	BB4_768;

BB4_780:
	and.b32  	%r10965, %r10965, %r1023;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	bra.uni 	BB4_781;

BB4_540:
	setp.gt.s32	%p502, %r47, 13;
	@%p502 bra 	BB4_544;

	setp.eq.s32	%p505, %r47, 12;
	@%p505 bra 	BB4_594;
	bra.uni 	BB4_542;

BB4_594:
	mov.u32 	%r10967, %r40;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r36;
	mov.u32 	%r10972, %r43;
	mov.u32 	%r10973, %r42;
	mov.u32 	%r10974, %r41;
	bra.uni 	BB4_601;

BB4_918:
	setp.eq.s32	%p712, %r7665, 3;
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r10945, %r10943;
	mov.u32 	%r10946, %r10943;
	mov.u32 	%r10947, %r10943;
	mov.u32 	%r10948, %r10943;
	mov.u32 	%r10949, %r10943;
	mov.u32 	%r10950, %r10943;
	@%p712 bra 	BB4_919;
	bra.uni 	BB4_931;

BB4_919:
	// inline asm
	prmt.b32 %r10950, %r36, %r43, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10949, %r37, %r36, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10948, %r38, %r37, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10947, %r39, %r38, %r1301;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	prmt.b32 %r10946, %r10943, %r39, %r1301;
	// inline asm
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r10945, %r10943;
	bra.uni 	BB4_931;

BB4_834:
	setp.gt.s32	%p633, %r6677, 27;
	@%p633 bra 	BB4_844;

	setp.gt.s32	%p639, %r6677, 25;
	@%p639 bra 	BB4_839;

	setp.eq.s32	%p642, %r6677, 24;
	@%p642 bra 	BB4_856;
	bra.uni 	BB4_837;

BB4_856:
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r39;
	mov.u32 	%r10971, %r38;
	bra.uni 	BB4_854;

BB4_745:
	setp.eq.s32	%p596, %r6396, 6;
	@%p596 bra 	BB4_749;
	bra.uni 	BB4_746;

BB4_749:
	and.b32  	%r6403, %r978, %r41;
	and.b32  	%r6404, %r10969, %r979;
	or.b32  	%r10961, %r6404, %r6403;

BB4_508:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	bra.uni 	BB4_509;

BB4_356:
	setp.gt.s32	%p297, %r45, 13;
	@%p297 bra 	BB4_360;

	setp.eq.s32	%p300, %r45, 12;
	@%p300 bra 	BB4_405;
	bra.uni 	BB4_358;

BB4_405:
	mov.u32 	%r10850, 0;
	mov.u32 	%r10846, %r38;
	mov.u32 	%r10847, %r37;
	mov.u32 	%r10848, %r36;
	bra.uni 	BB4_406;

BB4_576:
	setp.gt.s32	%p479, %r47, 29;
	@%p479 bra 	BB4_580;

	setp.eq.s32	%p482, %r47, 28;
	@%p482 bra 	BB4_585;
	bra.uni 	BB4_578;

BB4_585:
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r40;
	mov.u32 	%r10972, %r10970;

BB4_586:
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	bra.uni 	BB4_601;

BB4_925:
	setp.ne.s32	%p707, %r7665, 7;
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r10945, %r10943;
	mov.u32 	%r10946, %r10943;
	mov.u32 	%r10947, %r10943;
	mov.u32 	%r10948, %r10943;
	mov.u32 	%r10949, %r10943;
	mov.u32 	%r10950, %r10943;
	@%p707 bra 	BB4_931;

	mov.u32 	%r10943, 0;
	// inline asm
	prmt.b32 %r10950, %r10943, %r39, %r1301;
	// inline asm
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r10945, %r10943;
	mov.u32 	%r10946, %r10943;
	mov.u32 	%r10947, %r10943;
	mov.u32 	%r10948, %r10943;
	mov.u32 	%r10949, %r10943;

BB4_931:
	or.b32  	%r10963, %r10943, %r39;
	or.b32  	%r10964, %r10944, %r38;
	or.b32  	%r10965, %r10945, %r37;
	or.b32  	%r10966, %r10946, %r36;
	or.b32  	%r10959, %r10947, %r43;
	or.b32  	%r10960, %r10948, %r42;
	or.b32  	%r10961, %r10949, %r41;
	or.b32  	%r10962, %r10950, %r40;
	bra.uni 	BB4_1015;

BB4_388:
	setp.gt.s32	%p274, %r45, 29;
	@%p274 bra 	BB4_392;

	setp.eq.s32	%p277, %r45, 28;
	@%p277 bra 	BB4_395;
	bra.uni 	BB4_390;

BB4_395:
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r43, %r39;
	bra.uni 	BB4_415;

BB4_774:
	setp.eq.s32	%p618, %r6498, 6;
	@%p618 bra 	BB4_778;
	bra.uni 	BB4_775;

BB4_778:
	and.b32  	%r10961, %r10961, %r1023;
	bra.uni 	BB4_1014;

BB4_468:
	setp.eq.s32	%p457, %r5100, 1;
	@%p457 bra 	BB4_469;
	bra.uni 	BB4_480;

BB4_469:
	and.b32  	%r10964, %r673, %r38;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10963, %r39;

BB4_470:
	mov.u32 	%r10965, %r10959;

BB4_486:
	mov.u32 	%r10966, %r10959;
	mov.u32 	%r10975, %r45;
	bra.uni 	BB4_1015;

BB4_122:
	setp.gt.s32	%p167, %r45, 5;
	@%p167 bra 	BB4_126;

	setp.eq.s32	%p170, %r45, 4;
	@%p170 bra 	BB4_193;
	bra.uni 	BB4_124;

BB4_193:
	mov.u32 	%r10971, 0;
	mov.u32 	%r10967, %r36;
	mov.u32 	%r10968, %r43;
	mov.u32 	%r10969, %r42;
	mov.u32 	%r10970, %r41;
	mov.u32 	%r10972, %r39;
	mov.u32 	%r10973, %r38;
	mov.u32 	%r10974, %r37;
	bra.uni 	BB4_195;

BB4_216:
	setp.eq.s32	%p201, %r3143, 1;
	mov.u32 	%r10967, %r43;
	mov.u32 	%r10968, %r42;
	mov.u32 	%r10969, %r41;
	mov.u32 	%r10970, %r40;
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10974, %r36;
	@%p201 bra 	BB4_217;
	bra.uni 	BB4_233;

BB4_217:
	and.b32  	%r10972, %r237, %r38;
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	mov.u32 	%r10971, %r39;

BB4_104:
	mov.u32 	%r10973, %r10967;

BB4_232:
	mov.u32 	%r10974, %r10967;
	bra.uni 	BB4_233;

BB4_663:
	setp.eq.s32	%p557, %r45, 18;
	@%p557 bra 	BB4_697;
	bra.uni 	BB4_664;

BB4_697:
	mov.u32 	%r5955, 16;
	// inline asm
	shf.r.wrap.b32 %r10963, %r43, %r42, %r5955;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r42, %r41, %r5955;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r41, %r40, %r5955;
	// inline asm
	mov.u32 	%r10959, 0;
	// inline asm
	shf.r.wrap.b32 %r40, %r40, %r10959, %r5955;
	// inline asm
	bra.uni 	BB4_696;

BB4_962:
	setp.eq.s32	%p735, %r7844, 18;
	@%p735 bra 	BB4_993;
	bra.uni 	BB4_963;

BB4_993:
	mov.u32 	%r8014, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r37, %r36, %r8014;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r38, %r37, %r8014;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r39, %r38, %r8014;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r10970, %r39, %r8014;
	// inline asm
	bra.uni 	BB4_995;

BB4_647:
	setp.eq.s32	%p569, %r45, 10;
	@%p569 bra 	BB4_701;
	bra.uni 	BB4_648;

BB4_701:
	mov.u32 	%r6105, 16;
	// inline asm
	shf.r.wrap.b32 %r10963, %r37, %r36, %r6105;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r36, %r43, %r6105;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r43, %r42, %r6105;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6094, %r42, %r41, %r6105;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r41, %r40, %r6105;
	// inline asm
	mov.u32 	%r10961, 0;
	// inline asm
	shf.r.wrap.b32 %r10960, %r40, %r10961, %r6105;
	// inline asm
	mov.u32 	%r10962, %r10961;
	mov.u32 	%r40, %r6094;
	bra.uni 	BB4_712;

BB4_476:
	setp.eq.s32	%p452, %r5100, 5;
	@%p452 bra 	BB4_477;
	bra.uni 	BB4_480;

BB4_477:
	and.b32  	%r10960, %r673, %r42;
	mov.u32 	%r10961, 0;
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10962, %r10961;
	bra.uni 	BB4_482;

BB4_946:
	setp.eq.s32	%p747, %r7844, 10;
	@%p747 bra 	BB4_1000;
	bra.uni 	BB4_947;

BB4_1000:
	mov.u32 	%r8164, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r43, %r42, %r8164;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r36, %r43, %r8164;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r37, %r36, %r8164;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r38, %r37, %r8164;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r39, %r38, %r8164;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r10970, %r39, %r8164;
	// inline asm
	mov.u32 	%r10969, %r10970;
	bra.uni 	BB4_1008;

BB4_154:
	setp.gt.s32	%p144, %r45, 21;
	@%p144 bra 	BB4_158;

	setp.eq.s32	%p147, %r45, 20;
	@%p147 bra 	BB4_184;
	bra.uni 	BB4_156;

BB4_184:
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r39;
	mov.u32 	%r10969, %r38;
	mov.u32 	%r10970, %r37;
	bra.uni 	BB4_180;

BB4_223:
	setp.eq.s32	%p196, %r3143, 5;
	mov.u32 	%r10967, %r43;
	mov.u32 	%r10968, %r42;
	mov.u32 	%r10969, %r41;
	mov.u32 	%r10970, %r40;
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10974, %r36;
	@%p196 bra 	BB4_224;
	bra.uni 	BB4_233;

BB4_224:
	and.b32  	%r10968, %r237, %r42;
	mov.u32 	%r10969, 0;
	mov.u32 	%r10967, %r43;
	mov.u32 	%r10970, %r10969;
	bra.uni 	BB4_228;

BB4_679:
	setp.eq.s32	%p546, %r45, 26;
	@%p546 bra 	BB4_691;
	bra.uni 	BB4_680;

BB4_691:
	mov.u32 	%r5837, 16;
	// inline asm
	shf.r.wrap.b32 %r10963, %r41, %r40, %r5837;
	// inline asm
	mov.u32 	%r10959, 0;
	// inline asm
	shf.r.wrap.b32 %r10964, %r40, %r10959, %r5837;
	// inline asm
	bra.uni 	BB4_682;

BB4_977:
	setp.eq.s32	%p724, %r7844, 26;
	@%p724 bra 	BB4_989;
	bra.uni 	BB4_978;

BB4_989:
	mov.u32 	%r7896, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r39, %r38, %r7896;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r10974, %r39, %r7896;
	// inline asm
	bra.uni 	BB4_980;

BB4_639:
	setp.eq.s32	%p575, %r45, 6;
	@%p575 bra 	BB4_703;
	bra.uni 	BB4_640;

BB4_703:
	mov.u32 	%r6192, 16;
	// inline asm
	shf.r.wrap.b32 %r10963, %r38, %r37, %r6192;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r37, %r36, %r6192;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r36, %r43, %r6192;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6177, %r43, %r42, %r6192;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r42, %r41, %r6192;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10960, %r41, %r40, %r6192;
	// inline asm
	mov.u32 	%r10962, 0;
	// inline asm
	shf.r.wrap.b32 %r10961, %r40, %r10962, %r6192;
	// inline asm
	mov.u32 	%r40, %r6177;
	bra.uni 	BB4_712;

BB4_472:
	setp.eq.s32	%p455, %r5100, 3;
	@%p455 bra 	BB4_473;
	bra.uni 	BB4_480;

BB4_473:
	and.b32  	%r10966, %r673, %r36;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10975, %r45;
	bra.uni 	BB4_1015;

BB4_938:
	setp.eq.s32	%p753, %r7844, 6;
	@%p753 bra 	BB4_1002;
	bra.uni 	BB4_939;

BB4_1002:
	mov.u32 	%r8251, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r42, %r41, %r8251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r43, %r42, %r8251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r36, %r43, %r8251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r37, %r36, %r8251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r38, %r37, %r8251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r39, %r38, %r8251;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r10970, %r39, %r8251;
	// inline asm
	bra.uni 	BB4_1008;

BB4_137:
	setp.gt.s32	%p156, %r45, 13;
	@%p156 bra 	BB4_141;

	setp.eq.s32	%p159, %r45, 12;
	@%p159 bra 	BB4_189;
	bra.uni 	BB4_139;

BB4_189:
	mov.u32 	%r10971, 0;
	mov.u32 	%r10967, %r38;
	mov.u32 	%r10968, %r37;
	mov.u32 	%r10969, %r36;
	mov.u32 	%r10970, %r43;
	mov.u32 	%r10972, %r10971;
	mov.u32 	%r10973, %r10971;
	mov.u32 	%r10974, %r39;
	bra.uni 	BB4_195;

BB4_219:
	setp.eq.s32	%p199, %r3143, 3;
	mov.u32 	%r10967, %r43;
	mov.u32 	%r10968, %r42;
	mov.u32 	%r10969, %r41;
	mov.u32 	%r10970, %r40;
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10974, %r36;
	@%p199 bra 	BB4_220;
	bra.uni 	BB4_233;

BB4_220:
	and.b32  	%r10974, %r237, %r36;
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10973, %r37;
	bra.uni 	BB4_233;

BB4_670:
	setp.eq.s32	%p552, %r45, 22;
	@%p552 bra 	BB4_693;
	bra.uni 	BB4_671;

BB4_693:
	mov.u32 	%r5892, 16;
	// inline asm
	shf.r.wrap.b32 %r10963, %r42, %r41, %r5892;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r41, %r40, %r5892;
	// inline asm
	mov.u32 	%r10959, 0;
	// inline asm
	shf.r.wrap.b32 %r10965, %r40, %r10959, %r5892;
	// inline asm
	bra.uni 	BB4_673;

BB4_969:
	setp.eq.s32	%p730, %r7844, 22;
	@%p730 bra 	BB4_991;
	bra.uni 	BB4_970;

BB4_991:
	mov.u32 	%r7951, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r38, %r37, %r7951;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r39, %r38, %r7951;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r10974, %r39, %r7951;
	// inline asm
	bra.uni 	BB4_1007;

BB4_654:
	setp.eq.s32	%p564, %r45, 14;
	@%p564 bra 	BB4_699;
	bra.uni 	BB4_655;

BB4_699:
	mov.u32 	%r6026, 16;
	// inline asm
	shf.r.wrap.b32 %r10963, %r36, %r43, %r6026;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r43, %r42, %r6026;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r42, %r41, %r6026;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6019, %r41, %r40, %r6026;
	// inline asm
	mov.u32 	%r10960, 0;
	// inline asm
	shf.r.wrap.b32 %r10959, %r40, %r10960, %r6026;
	// inline asm
	mov.u32 	%r10961, %r10960;
	mov.u32 	%r10962, %r10960;
	mov.u32 	%r40, %r6019;
	bra.uni 	BB4_712;

BB4_479:
	setp.ne.s32	%p450, %r5100, 7;
	@%p450 bra 	BB4_480;

	and.b32  	%r10962, %r673, %r40;
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	bra.uni 	BB4_482;

BB4_480:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;

BB4_482:
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10966, %r36;
	mov.u32 	%r10975, %r45;
	bra.uni 	BB4_1015;

BB4_953:
	setp.eq.s32	%p742, %r7844, 14;
	@%p742 bra 	BB4_998;
	bra.uni 	BB4_954;

BB4_998:
	mov.u32 	%r8085, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r36, %r43, %r8085;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r37, %r36, %r8085;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r38, %r37, %r8085;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r39, %r38, %r8085;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r10970, %r39, %r8085;
	// inline asm
	bra.uni 	BB4_997;

BB4_170:
	setp.gt.s32	%p133, %r45, 29;
	@%p133 bra 	BB4_174;

	setp.eq.s32	%p136, %r45, 28;
	@%p136 bra 	BB4_179;
	bra.uni 	BB4_172;

BB4_179:
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r39;
	bra.uni 	BB4_180;

BB4_226:
	setp.ne.s32	%p194, %r3143, 7;
	mov.u32 	%r10967, %r43;
	mov.u32 	%r10968, %r42;
	mov.u32 	%r10969, %r41;
	mov.u32 	%r10970, %r40;
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10974, %r36;
	@%p194 bra 	BB4_233;

	and.b32  	%r10970, %r237, %r40;
	mov.u32 	%r10967, %r43;
	mov.u32 	%r10968, %r42;
	mov.u32 	%r10969, %r41;

BB4_228:
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10974, %r36;

BB4_233:
	setp.gt.s32	%p202, %r45, 15;
	@%p202 bra 	BB4_262;

	setp.gt.s32	%p226, %r45, 7;
	@%p226 bra 	BB4_247;

	setp.gt.s32	%p238, %r45, 3;
	@%p238 bra 	BB4_240;

	setp.eq.s32	%p244, %r45, 1;
	@%p244 bra 	BB4_311;

	setp.eq.s32	%p245, %r45, 2;
	@%p245 bra 	BB4_310;
	bra.uni 	BB4_238;

BB4_310:
	mov.u32 	%r3676, 16;
	// inline asm
	shf.r.wrap.b32 %r3645, %r41, %r40, %r3676;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r42, %r41, %r3676;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r43, %r42, %r3676;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r36, %r43, %r3676;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3661, %r37, %r36, %r3676;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10834, %r38, %r37, %r3676;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10833, %r39, %r38, %r3676;
	// inline asm
	mov.u32 	%r3674, 0;
	// inline asm
	shf.r.wrap.b32 %r10832, %r3674, %r39, %r3676;
	// inline asm
	mov.u32 	%r43, %r3645;
	mov.u32 	%r39, %r3661;
	bra.uni 	BB4_315;

BB4_262:
	setp.gt.s32	%p203, %r45, 23;
	@%p203 bra 	BB4_278;

	setp.gt.s32	%p215, %r45, 19;
	@%p215 bra 	BB4_271;

	setp.gt.s32	%p221, %r45, 17;
	@%p221 bra 	BB4_268;

	setp.eq.s32	%p224, %r45, 16;
	@%p224 bra 	BB4_300;
	bra.uni 	BB4_266;

BB4_300:
	mov.u32 	%r10832, 0;
	mov.u32 	%r10828, %r39;
	mov.u32 	%r10829, %r38;
	mov.u32 	%r10830, %r37;
	mov.u32 	%r43, %r36;
	bra.uni 	BB4_301;

BB4_247:
	setp.gt.s32	%p227, %r45, 11;
	@%p227 bra 	BB4_255;

	setp.gt.s32	%p233, %r45, 9;
	@%p233 bra 	BB4_252;

	setp.eq.s32	%p236, %r45, 8;
	@%p236 bra 	BB4_307;
	bra.uni 	BB4_250;

BB4_307:
	mov.u32 	%r10832, 0;
	mov.u32 	%r10828, %r37;
	mov.u32 	%r10829, %r36;
	mov.u32 	%r10830, %r43;
	mov.u32 	%r43, %r42;
	mov.u32 	%r10833, %r10832;
	mov.u32 	%r10834, %r39;
	mov.u32 	%r39, %r38;
	bra.uni 	BB4_315;

BB4_278:
	setp.gt.s32	%p204, %r45, 27;
	@%p204 bra 	BB4_287;

	setp.gt.s32	%p210, %r45, 25;
	@%p210 bra 	BB4_283;

	setp.eq.s32	%p213, %r45, 24;
	@%p213 bra 	BB4_296;
	bra.uni 	BB4_281;

BB4_296:
	mov.u32 	%r10828, 0;
	mov.u32 	%r10829, %r10828;
	mov.u32 	%r10830, %r39;
	mov.u32 	%r43, %r38;
	bra.uni 	BB4_314;

BB4_687:
	setp.eq.s32	%p541, %r45, 31;
	@%p541 bra 	BB4_707;
	bra.uni 	BB4_688;

BB4_707:
	mov.u32 	%r10959, 0;
	mov.u32 	%r6323, 24;
	// inline asm
	shf.r.wrap.b32 %r10963, %r40, %r10959, %r6323;
	// inline asm
	bra.uni 	BB4_708;

BB4_985:
	setp.eq.s32	%p719, %r7844, 31;
	@%p719 bra 	BB4_1005;
	bra.uni 	BB4_986;

BB4_1005:
	mov.u32 	%r10974, 0;
	mov.u32 	%r8382, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r10974, %r39, %r8382;
	// inline asm
	bra.uni 	BB4_1006;

BB4_240:
	setp.gt.s32	%p239, %r45, 5;
	@%p239 bra 	BB4_244;

	setp.eq.s32	%p242, %r45, 4;
	@%p242 bra 	BB4_309;
	bra.uni 	BB4_242;

BB4_309:
	mov.u32 	%r10832, 0;
	mov.u32 	%r10828, %r36;
	mov.u32 	%r10829, %r43;
	mov.u32 	%r10830, %r42;
	mov.u32 	%r43, %r41;
	mov.u32 	%r10833, %r39;
	mov.u32 	%r10834, %r38;
	mov.u32 	%r39, %r37;
	bra.uni 	BB4_315;

BB4_271:
	setp.gt.s32	%p216, %r45, 21;
	@%p216 bra 	BB4_275;

	setp.eq.s32	%p219, %r45, 20;
	@%p219 bra 	BB4_298;
	bra.uni 	BB4_273;

BB4_298:
	mov.u32 	%r10828, 0;
	mov.u32 	%r10829, %r39;
	mov.u32 	%r10830, %r38;
	mov.u32 	%r43, %r37;
	bra.uni 	BB4_314;

BB4_255:
	setp.gt.s32	%p228, %r45, 13;
	@%p228 bra 	BB4_259;

	setp.eq.s32	%p231, %r45, 12;
	@%p231 bra 	BB4_304;
	bra.uni 	BB4_257;

BB4_304:
	mov.u32 	%r10832, 0;
	mov.u32 	%r10828, %r38;
	mov.u32 	%r10829, %r37;
	mov.u32 	%r10830, %r36;
	bra.uni 	BB4_305;

BB4_287:
	setp.gt.s32	%p205, %r45, 29;
	@%p205 bra 	BB4_291;

	setp.eq.s32	%p208, %r45, 28;
	@%p208 bra 	BB4_294;
	bra.uni 	BB4_289;

BB4_294:
	mov.u32 	%r10828, 0;
	mov.u32 	%r10829, %r10828;
	mov.u32 	%r10830, %r10828;
	mov.u32 	%r43, %r39;
	bra.uni 	BB4_314;

BB4_706:
	mov.u32 	%r6319, 8;
	// inline asm
	shf.r.wrap.b32 %r10963, %r39, %r38, %r6319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r38, %r37, %r6319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r37, %r36, %r6319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6300, %r36, %r43, %r6319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r43, %r42, %r6319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10960, %r42, %r41, %r6319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10961, %r41, %r40, %r6319;
	// inline asm
	mov.u32 	%r6318, 0;
	// inline asm
	shf.r.wrap.b32 %r10962, %r40, %r6318, %r6319;
	// inline asm
	mov.u32 	%r40, %r6300;
	bra.uni 	BB4_712;

BB4_633:
	setp.eq.s32	%p581, %r45, 3;
	@%p581 bra 	BB4_634;
	bra.uni 	BB4_665;

BB4_634:
	mov.u32 	%r6255, 24;
	// inline asm
	shf.r.wrap.b32 %r10963, %r39, %r38, %r6255;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r38, %r37, %r6255;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r37, %r36, %r6255;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6236, %r36, %r43, %r6255;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r43, %r42, %r6255;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10960, %r42, %r41, %r6255;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10961, %r41, %r40, %r6255;
	// inline asm
	mov.u32 	%r6254, 0;
	// inline asm
	shf.r.wrap.b32 %r10962, %r40, %r6254, %r6255;
	// inline asm
	mov.u32 	%r40, %r6236;
	bra.uni 	BB4_712;

BB4_522:
	setp.eq.s32	%p519, %r47, 2;
	@%p519 bra 	BB4_599;
	bra.uni 	BB4_523;

BB4_599:
	mov.u32 	%r5732, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r39, %r38, %r5732;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r38, %r37, %r5732;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r37, %r36, %r5732;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r36, %r43, %r5732;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r43, %r42, %r5732;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r42, %r41, %r5732;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r41, %r40, %r5732;
	// inline asm
	mov.u32 	%r5731, 0;
	// inline asm
	shf.r.wrap.b32 %r10970, %r40, %r5731, %r5732;
	// inline asm
	bra.uni 	BB4_601;

BB4_1004:
	mov.u32 	%r8378, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r41, %r40, %r8378;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r42, %r41, %r8378;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r43, %r42, %r8378;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r36, %r43, %r8378;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r37, %r36, %r8378;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r38, %r37, %r8378;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r39, %r38, %r8378;
	// inline asm
	mov.u32 	%r8376, 0;
	// inline asm
	shf.r.wrap.b32 %r10970, %r8376, %r39, %r8378;
	// inline asm
	bra.uni 	BB4_1008;

BB4_932:
	setp.eq.s32	%p759, %r7844, 3;
	@%p759 bra 	BB4_933;
	bra.uni 	BB4_955;

BB4_933:
	mov.u32 	%r8314, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r41, %r40, %r8314;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r42, %r41, %r8314;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r43, %r42, %r8314;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r36, %r43, %r8314;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r37, %r36, %r8314;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r38, %r37, %r8314;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r39, %r38, %r8314;
	// inline asm
	mov.u32 	%r8312, 0;
	// inline asm
	shf.r.wrap.b32 %r10970, %r8312, %r39, %r8314;
	// inline asm
	bra.uni 	BB4_1008;

BB4_794:
	setp.gt.s32	%p668, %r6677, 5;
	@%p668 bra 	BB4_798;

	setp.eq.s32	%p671, %r6677, 4;
	@%p671 bra 	BB4_866;
	bra.uni 	BB4_796;

BB4_866:
	mov.u32 	%r10974, %r36;
	mov.u32 	%r10973, %r43;
	mov.u32 	%r10972, %r42;
	mov.u32 	%r10971, %r41;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r39;
	mov.u32 	%r10968, %r38;
	mov.u32 	%r10967, %r37;
	bra.uni 	BB4_868;

BB4_734:
	setp.eq.s32	%p604, %r6396, 1;
	@%p604 bra 	BB4_735;
	bra.uni 	BB4_111;

BB4_735:
	and.b32  	%r6413, %r978, %r38;
	and.b32  	%r6414, %r10972, %r979;
	or.b32  	%r10964, %r6414, %r6413;
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10963, %r39;

BB4_32:
	mov.u32 	%r10965, %r10973;

BB4_752:
	mov.u32 	%r10966, %r10974;
	bra.uni 	BB4_1015;

BB4_554:
	setp.eq.s32	%p496, %r47, 18;
	@%p496 bra 	BB4_591;
	bra.uni 	BB4_555;

BB4_591:
	mov.u32 	%r5400, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r43, %r42, %r5400;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r42, %r41, %r5400;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r41, %r40, %r5400;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r40, %r10967, %r5400;
	// inline asm
	bra.uni 	BB4_557;

BB4_369:
	setp.eq.s32	%p291, %r45, 18;
	@%p291 bra 	BB4_400;
	bra.uni 	BB4_370;

BB4_400:
	mov.u32 	%r4173, 16;
	// inline asm
	shf.r.wrap.b32 %r43, %r37, %r36, %r4173;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r38, %r37, %r4173;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r39, %r38, %r4173;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r10850, %r39, %r4173;
	// inline asm
	bra.uni 	BB4_402;

BB4_764:
	setp.eq.s32	%p626, %r6498, 1;
	@%p626 bra 	BB4_765;
	bra.uni 	BB4_776;

BB4_765:
	and.b32  	%r10964, %r10964, %r1023;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;

BB4_766:
	mov.u32 	%r10965, %r10959;

BB4_781:
	mov.u32 	%r10966, %r10959;
	bra.uni 	BB4_1014;

BB4_537:
	setp.eq.s32	%p508, %r47, 10;
	@%p508 bra 	BB4_595;
	bra.uni 	BB4_538;

BB4_595:
	mov.u32 	%r5550, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r37, %r36, %r5550;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r36, %r43, %r5550;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r43, %r42, %r5550;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r42, %r41, %r5550;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r41, %r40, %r5550;
	// inline asm
	mov.u32 	%r10969, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r40, %r10969, %r5550;
	// inline asm
	mov.u32 	%r10970, %r10969;
	bra.uni 	BB4_601;

BB4_827:
	setp.gt.s32	%p645, %r6677, 21;
	@%p645 bra 	BB4_831;

	setp.eq.s32	%p648, %r6677, 20;
	@%p648 bra 	BB4_858;
	bra.uni 	BB4_829;

BB4_858:
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10971, %r37;
	bra.uni 	BB4_854;

BB4_742:
	setp.eq.s32	%p599, %r6396, 5;
	@%p599 bra 	BB4_743;
	bra.uni 	BB4_111;

BB4_743:
	and.b32  	%r6405, %r978, %r42;
	and.b32  	%r6406, %r10968, %r979;
	or.b32  	%r10960, %r6406, %r6405;
	mov.u32 	%r10959, %r43;

BB4_744:
	mov.u32 	%r10961, %r10969;

BB4_509:
	mov.u32 	%r10962, %r10970;
	bra.uni 	BB4_510;

BB4_353:
	setp.eq.s32	%p303, %r45, 10;
	@%p303 bra 	BB4_407;
	bra.uni 	BB4_354;

BB4_407:
	mov.u32 	%r4323, 16;
	// inline asm
	shf.r.wrap.b32 %r4300, %r43, %r42, %r4323;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r36, %r43, %r4323;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r37, %r36, %r4323;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r38, %r37, %r4323;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4316, %r39, %r38, %r4323;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r10850, %r39, %r4323;
	// inline asm
	mov.u32 	%r43, %r4300;
	mov.u32 	%r10851, %r10850;
	mov.u32 	%r39, %r4316;
	bra.uni 	BB4_416;

BB4_571:
	setp.eq.s32	%p485, %r47, 26;
	@%p485 bra 	BB4_587;
	bra.uni 	BB4_572;

BB4_587:
	mov.u32 	%r5282, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r41, %r40, %r5282;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r40, %r10967, %r5282;
	// inline asm
	bra.uni 	BB4_574;

BB4_384:
	setp.eq.s32	%p280, %r45, 26;
	@%p280 bra 	BB4_396;
	bra.uni 	BB4_385;

BB4_396:
	mov.u32 	%r4055, 16;
	// inline asm
	shf.r.wrap.b32 %r43, %r39, %r38, %r4055;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r10846, %r39, %r4055;
	// inline asm
	bra.uni 	BB4_387;

BB4_772:
	setp.eq.s32	%p621, %r6498, 5;
	@%p621 bra 	BB4_773;
	bra.uni 	BB4_776;

BB4_773:
	and.b32  	%r10960, %r10960, %r1023;
	mov.u32 	%r10961, 0;
	mov.u32 	%r10962, %r10961;
	bra.uni 	BB4_1014;

BB4_529:
	setp.eq.s32	%p514, %r47, 6;
	@%p514 bra 	BB4_597;
	bra.uni 	BB4_530;

BB4_597:
	mov.u32 	%r5637, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r38, %r37, %r5637;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r37, %r36, %r5637;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r36, %r43, %r5637;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r43, %r42, %r5637;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r42, %r41, %r5637;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r41, %r40, %r5637;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r40, %r10970, %r5637;
	// inline asm
	bra.uni 	BB4_601;

BB4_809:
	setp.gt.s32	%p657, %r6677, 13;
	@%p657 bra 	BB4_813;

	setp.eq.s32	%p660, %r6677, 12;
	@%p660 bra 	BB4_862;
	bra.uni 	BB4_811;

BB4_862:
	mov.u32 	%r10974, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10972, %r36;
	mov.u32 	%r10971, %r43;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r39;
	bra.uni 	BB4_868;

BB4_447:
	and.b16  	%rs14, %rs2, 255;
	and.b16  	%rs15, %rs23, 255;
	setp.eq.s16	%p364, %rs15, %rs14;
	mov.u32 	%r10862, 1;
	@%p364 bra 	BB4_449;

	st.local.u8 	[%rd85], %rs23;
	mov.u32 	%r10862, 1;
	mov.u32 	%r10975, %r10862;

BB4_449:
	cvt.u64.u32	%rd145, %r10862;
	add.s64 	%rd146, %rd84, %rd145;
	ld.local.u8 	%rs3, [%rd146];
	and.b16  	%rs16, %rs2, 255;
	setp.eq.s16	%p365, %rs3, %rs16;
	@%p365 bra 	BB4_451;

	cvt.u64.u32	%rd147, %r10975;
	add.s64 	%rd150, %rd85, %rd147;
	st.local.u8 	[%rd150], %rs3;
	add.s32 	%r10975, %r10975, 1;

BB4_451:
	add.s32 	%r10865, %r10862, 1;
	cvt.u64.u32	%rd151, %r10865;
	add.s64 	%rd154, %rd84, %rd151;
	ld.local.u8 	%rs23, [%rd154];

BB4_452:
	and.b16  	%rs17, %rs2, 255;
	and.b16  	%rs18, %rs23, 255;
	setp.eq.s16	%p366, %rs18, %rs17;
	@%p366 bra 	BB4_454;

	cvt.u64.u32	%rd155, %r10975;
	add.s64 	%rd158, %rd85, %rd155;
	st.local.u8 	[%rd158], %rs23;
	add.s32 	%r10975, %r10975, 1;

BB4_454:
	add.s32 	%r10870, %r10865, 1;

BB4_455:
	setp.lt.u32	%p367, %r27, 4;
	@%p367 bra 	BB4_465;

BB4_456:
	cvt.u64.u32	%rd160, %r10870;
	add.s64 	%rd161, %rd84, %rd160;
	ld.local.u8 	%rs6, [%rd161];
	and.b16  	%rs19, %rs2, 255;
	setp.eq.s16	%p368, %rs6, %rs19;
	@%p368 bra 	BB4_458;

	cvt.u64.u32	%rd162, %r10975;
	add.s64 	%rd165, %rd85, %rd162;
	st.local.u8 	[%rd165], %rs6;
	add.s32 	%r10975, %r10975, 1;

BB4_458:
	add.s32 	%r4784, %r10870, 1;
	cvt.u64.u32	%rd166, %r4784;
	add.s64 	%rd167, %rd84, %rd166;
	ld.local.u8 	%rs7, [%rd167];
	setp.eq.s16	%p369, %rs7, %rs19;
	@%p369 bra 	BB4_460;

	cvt.u64.u32	%rd168, %r10975;
	add.s64 	%rd171, %rd85, %rd168;
	st.local.u8 	[%rd171], %rs7;
	add.s32 	%r10975, %r10975, 1;

BB4_460:
	add.s32 	%r4785, %r10870, 2;
	cvt.u64.u32	%rd172, %r4785;
	add.s64 	%rd173, %rd84, %rd172;
	ld.local.u8 	%rs8, [%rd173];
	setp.eq.s16	%p370, %rs8, %rs19;
	@%p370 bra 	BB4_462;

	cvt.u64.u32	%rd174, %r10975;
	add.s64 	%rd177, %rd85, %rd174;
	st.local.u8 	[%rd177], %rs8;
	add.s32 	%r10975, %r10975, 1;

BB4_462:
	add.s32 	%r4786, %r10870, 3;
	cvt.u64.u32	%rd178, %r4786;
	add.s64 	%rd179, %rd84, %rd178;
	ld.local.u8 	%rs9, [%rd179];
	setp.eq.s16	%p371, %rs9, %rs19;
	@%p371 bra 	BB4_464;

	cvt.u64.u32	%rd180, %r10975;
	add.s64 	%rd183, %rd85, %rd180;
	st.local.u8 	[%rd183], %rs9;
	add.s32 	%r10975, %r10975, 1;

BB4_464:
	add.s32 	%r10870, %r10870, 4;
	setp.lt.u32	%p372, %r10870, %r27;
	@%p372 bra 	BB4_456;

BB4_465:
	ld.local.v4.u32 	{%r10963, %r10964, %r10965, %r10966}, [%rd85];
	ld.local.v4.u32 	{%r10959, %r10960, %r10961, %r10962}, [%rd85+16];
	bra.uni 	BB4_1015;

BB4_737:
	setp.eq.s32	%p602, %r6396, 3;
	@%p602 bra 	BB4_738;
	bra.uni 	BB4_111;

BB4_738:
	and.b32  	%r6409, %r978, %r36;
	and.b32  	%r6410, %r10974, %r979;
	or.b32  	%r10966, %r6410, %r6409;

BB4_739:
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	bra.uni 	BB4_1015;

BB4_345:
	setp.eq.s32	%p309, %r45, 6;
	@%p309 bra 	BB4_409;
	bra.uni 	BB4_346;

BB4_409:
	mov.u32 	%r4410, 16;
	// inline asm
	shf.r.wrap.b32 %r4383, %r42, %r41, %r4410;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r43, %r42, %r4410;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r36, %r43, %r4410;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r37, %r36, %r4410;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4399, %r38, %r37, %r4410;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r39, %r38, %r4410;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r10850, %r39, %r4410;
	// inline asm
	mov.u32 	%r43, %r4383;
	mov.u32 	%r39, %r4399;
	bra.uni 	BB4_416;

BB4_562:
	setp.eq.s32	%p491, %r47, 22;
	@%p491 bra 	BB4_589;
	bra.uni 	BB4_563;

BB4_589:
	mov.u32 	%r5337, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r42, %r41, %r5337;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r41, %r40, %r5337;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r40, %r10967, %r5337;
	// inline asm
	bra.uni 	BB4_565;

BB4_376:
	setp.eq.s32	%p286, %r45, 22;
	@%p286 bra 	BB4_398;
	bra.uni 	BB4_377;

BB4_398:
	mov.u32 	%r4110, 16;
	// inline asm
	shf.r.wrap.b32 %r43, %r38, %r37, %r4110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r39, %r38, %r4110;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r10846, %r39, %r4110;
	// inline asm
	bra.uni 	BB4_415;

BB4_768:
	setp.eq.s32	%p624, %r6498, 3;
	@%p624 bra 	BB4_769;
	bra.uni 	BB4_776;

BB4_769:
	and.b32  	%r10966, %r10966, %r1023;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	bra.uni 	BB4_1014;

BB4_544:
	setp.eq.s32	%p503, %r47, 14;
	@%p503 bra 	BB4_593;
	bra.uni 	BB4_545;

BB4_593:
	mov.u32 	%r5471, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r36, %r43, %r5471;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r43, %r42, %r5471;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r42, %r41, %r5471;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r41, %r40, %r5471;
	// inline asm
	mov.u32 	%r10968, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r40, %r10968, %r5471;
	// inline asm
	bra.uni 	BB4_547;

BB4_844:
	setp.gt.s32	%p634, %r6677, 29;
	@%p634 bra 	BB4_848;

	setp.eq.s32	%p637, %r6677, 28;
	@%p637 bra 	BB4_853;
	bra.uni 	BB4_846;

BB4_853:
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r39;

BB4_854:
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	bra.uni 	BB4_868;

BB4_746:
	setp.ne.s32	%p597, %r6396, 7;
	@%p597 bra 	BB4_111;

	and.b32  	%r6401, %r978, %r40;
	and.b32  	%r6402, %r10970, %r979;
	or.b32  	%r10962, %r6402, %r6401;

BB4_748:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	bra.uni 	BB4_510;

BB4_111:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;

BB4_510:
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10966, %r36;
	bra.uni 	BB4_1015;

BB4_360:
	setp.eq.s32	%p298, %r45, 14;
	@%p298 bra 	BB4_404;
	bra.uni 	BB4_361;

BB4_404:
	mov.u32 	%r4244, 16;
	// inline asm
	shf.r.wrap.b32 %r43, %r36, %r43, %r4244;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r37, %r36, %r4244;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r38, %r37, %r4244;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r39, %r38, %r4244;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r10850, %r39, %r4244;
	// inline asm
	bra.uni 	BB4_406;

BB4_580:
	setp.eq.s32	%p480, %r47, 30;
	@%p480 bra 	BB4_584;
	bra.uni 	BB4_581;

BB4_584:
	mov.u32 	%r10967, 0;
	mov.u32 	%r5235, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r40, %r10967, %r5235;
	// inline asm
	bra.uni 	BB4_583;

BB4_392:
	setp.eq.s32	%p275, %r45, 31;
	@%p275 bra 	BB4_413;
	bra.uni 	BB4_393;

BB4_413:
	mov.u32 	%r10846, 0;
	mov.u32 	%r4541, 8;
	// inline asm
	shf.r.wrap.b32 %r43, %r10846, %r39, %r4541;
	// inline asm
	bra.uni 	BB4_414;

BB4_775:
	setp.ne.s32	%p619, %r6498, 7;
	@%p619 bra 	BB4_776;

	and.b32  	%r10962, %r6466, %r1023;
	bra.uni 	BB4_1014;

BB4_776:
	mov.u32 	%r10962, %r6466;
	bra.uni 	BB4_1014;

BB4_119:
	setp.eq.s32	%p173, %r45, 2;
	@%p173 bra 	BB4_194;
	bra.uni 	BB4_120;

BB4_194:
	mov.u32 	%r3078, 16;
	// inline asm
	shf.r.wrap.b32 %r10970, %r41, %r40, %r3078;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r42, %r41, %r3078;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r43, %r42, %r3078;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r36, %r43, %r3078;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r37, %r36, %r3078;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r38, %r37, %r3078;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r39, %r38, %r3078;
	// inline asm
	mov.u32 	%r3076, 0;
	// inline asm
	shf.r.wrap.b32 %r10971, %r3076, %r39, %r3078;
	// inline asm
	bra.uni 	BB4_195;

BB4_661:
	setp.eq.s32	%p560, %r45, 17;
	@%p560 bra 	BB4_662;
	bra.uni 	BB4_665;

BB4_662:
	mov.u32 	%r5975, 8;
	// inline asm
	shf.r.wrap.b32 %r10963, %r43, %r42, %r5975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r42, %r41, %r5975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r41, %r40, %r5975;
	// inline asm
	mov.u32 	%r10959, 0;
	// inline asm
	shf.r.wrap.b32 %r40, %r40, %r10959, %r5975;
	// inline asm
	bra.uni 	BB4_696;

BB4_960:
	setp.eq.s32	%p738, %r7844, 17;
	@%p738 bra 	BB4_961;
	bra.uni 	BB4_955;

BB4_961:
	mov.u32 	%r8034, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r37, %r36, %r8034;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r38, %r37, %r8034;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r39, %r38, %r8034;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r10970, %r39, %r8034;
	// inline asm
	bra.uni 	BB4_995;

BB4_645:
	setp.eq.s32	%p572, %r45, 9;
	@%p572 bra 	BB4_646;
	bra.uni 	BB4_665;

BB4_646:
	mov.u32 	%r6131, 8;
	// inline asm
	shf.r.wrap.b32 %r10963, %r37, %r36, %r6131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r36, %r43, %r6131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r43, %r42, %r6131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6120, %r42, %r41, %r6131;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r41, %r40, %r6131;
	// inline asm
	mov.u32 	%r10961, 0;
	// inline asm
	shf.r.wrap.b32 %r10960, %r40, %r10961, %r6131;
	// inline asm
	mov.u32 	%r10962, %r10961;
	mov.u32 	%r40, %r6120;
	bra.uni 	BB4_712;

BB4_944:
	setp.eq.s32	%p750, %r7844, 9;
	@%p750 bra 	BB4_945;
	bra.uni 	BB4_955;

BB4_945:
	mov.u32 	%r8190, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r43, %r42, %r8190;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r36, %r43, %r8190;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r37, %r36, %r8190;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r38, %r37, %r8190;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r39, %r38, %r8190;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r10970, %r39, %r8190;
	// inline asm
	mov.u32 	%r10969, %r10970;
	bra.uni 	BB4_1008;

BB4_151:
	setp.eq.s32	%p150, %r45, 18;
	@%p150 bra 	BB4_185;
	bra.uni 	BB4_152;

BB4_185:
	mov.u32 	%r2746, 16;
	// inline asm
	shf.r.wrap.b32 %r10970, %r37, %r36, %r2746;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r38, %r37, %r2746;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r39, %r38, %r2746;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r10971, %r39, %r2746;
	// inline asm
	bra.uni 	BB4_187;

BB4_677:
	setp.eq.s32	%p549, %r45, 25;
	@%p549 bra 	BB4_678;
	bra.uni 	BB4_665;

BB4_678:
	mov.u32 	%r5851, 8;
	// inline asm
	shf.r.wrap.b32 %r10963, %r41, %r40, %r5851;
	// inline asm
	mov.u32 	%r10959, 0;
	// inline asm
	shf.r.wrap.b32 %r10964, %r40, %r10959, %r5851;
	// inline asm
	bra.uni 	BB4_682;

BB4_975:
	setp.eq.s32	%p727, %r7844, 25;
	@%p727 bra 	BB4_976;
	bra.uni 	BB4_955;

BB4_976:
	mov.u32 	%r7910, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r39, %r38, %r7910;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r10974, %r39, %r7910;
	// inline asm
	bra.uni 	BB4_980;

BB4_637:
	setp.eq.s32	%p578, %r45, 5;
	@%p578 bra 	BB4_638;
	bra.uni 	BB4_665;

BB4_638:
	mov.u32 	%r6221, 8;
	// inline asm
	shf.r.wrap.b32 %r10963, %r38, %r37, %r6221;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r37, %r36, %r6221;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r36, %r43, %r6221;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6206, %r43, %r42, %r6221;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r42, %r41, %r6221;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10960, %r41, %r40, %r6221;
	// inline asm
	mov.u32 	%r10962, 0;
	// inline asm
	shf.r.wrap.b32 %r10961, %r40, %r10962, %r6221;
	// inline asm
	mov.u32 	%r40, %r6206;
	bra.uni 	BB4_712;

BB4_936:
	setp.eq.s32	%p756, %r7844, 5;
	@%p756 bra 	BB4_937;
	bra.uni 	BB4_955;

BB4_937:
	mov.u32 	%r8280, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r42, %r41, %r8280;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r43, %r42, %r8280;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r36, %r43, %r8280;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r37, %r36, %r8280;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r38, %r37, %r8280;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r39, %r38, %r8280;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r10970, %r39, %r8280;
	// inline asm
	bra.uni 	BB4_1008;

BB4_134:
	setp.eq.s32	%p162, %r45, 10;
	@%p162 bra 	BB4_190;
	bra.uni 	BB4_135;

BB4_190:
	mov.u32 	%r2896, 16;
	// inline asm
	shf.r.wrap.b32 %r10970, %r43, %r42, %r2896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r36, %r43, %r2896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r37, %r36, %r2896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r38, %r37, %r2896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r39, %r38, %r2896;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r10971, %r39, %r2896;
	// inline asm
	mov.u32 	%r10972, %r10971;
	bra.uni 	BB4_195;

BB4_668:
	setp.eq.s32	%p555, %r45, 21;
	@%p555 bra 	BB4_669;
	bra.uni 	BB4_665;

BB4_669:
	mov.u32 	%r5909, 8;
	// inline asm
	shf.r.wrap.b32 %r10963, %r42, %r41, %r5909;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r41, %r40, %r5909;
	// inline asm
	mov.u32 	%r10959, 0;
	// inline asm
	shf.r.wrap.b32 %r10965, %r40, %r10959, %r5909;
	// inline asm
	bra.uni 	BB4_673;

BB4_967:
	setp.eq.s32	%p733, %r7844, 21;
	@%p733 bra 	BB4_968;
	bra.uni 	BB4_955;

BB4_968:
	mov.u32 	%r7968, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r38, %r37, %r7968;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r39, %r38, %r7968;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r10974, %r39, %r7968;
	// inline asm
	bra.uni 	BB4_1007;

BB4_652:
	setp.eq.s32	%p567, %r45, 13;
	@%p567 bra 	BB4_653;
	bra.uni 	BB4_665;

BB4_653:
	mov.u32 	%r6049, 8;
	// inline asm
	shf.r.wrap.b32 %r10963, %r36, %r43, %r6049;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r43, %r42, %r6049;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r42, %r41, %r6049;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6042, %r41, %r40, %r6049;
	// inline asm
	mov.u32 	%r10960, 0;
	// inline asm
	shf.r.wrap.b32 %r10959, %r40, %r10960, %r6049;
	// inline asm
	mov.u32 	%r10961, %r10960;
	mov.u32 	%r10962, %r10960;
	mov.u32 	%r40, %r6042;
	bra.uni 	BB4_712;

BB4_951:
	setp.eq.s32	%p745, %r7844, 13;
	@%p745 bra 	BB4_952;
	bra.uni 	BB4_955;

BB4_952:
	mov.u32 	%r8108, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r36, %r43, %r8108;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r37, %r36, %r8108;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r38, %r37, %r8108;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r39, %r38, %r8108;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r10970, %r39, %r8108;
	// inline asm
	bra.uni 	BB4_997;

BB4_166:
	setp.eq.s32	%p139, %r45, 26;
	@%p139 bra 	BB4_181;
	bra.uni 	BB4_167;

BB4_181:
	mov.u32 	%r2628, 16;
	// inline asm
	shf.r.wrap.b32 %r10970, %r39, %r38, %r2628;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r10967, %r39, %r2628;
	// inline asm
	bra.uni 	BB4_169;

BB4_685:
	setp.eq.s32	%p544, %r45, 29;
	@%p544 bra 	BB4_686;
	bra.uni 	BB4_665;

BB4_686:
	mov.u32 	%r10959, 0;
	mov.u32 	%r5801, 8;
	// inline asm
	shf.r.wrap.b32 %r10963, %r40, %r10959, %r5801;
	// inline asm
	bra.uni 	BB4_708;

BB4_983:
	setp.eq.s32	%p722, %r7844, 29;
	@%p722 bra 	BB4_984;
	bra.uni 	BB4_955;

BB4_984:
	mov.u32 	%r10974, 0;
	mov.u32 	%r7860, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r10974, %r39, %r7860;
	// inline asm
	bra.uni 	BB4_1006;

BB4_126:
	setp.eq.s32	%p168, %r45, 6;
	@%p168 bra 	BB4_192;
	bra.uni 	BB4_127;

BB4_192:
	mov.u32 	%r2983, 16;
	// inline asm
	shf.r.wrap.b32 %r10970, %r42, %r41, %r2983;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r43, %r42, %r2983;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r36, %r43, %r2983;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r37, %r36, %r2983;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r38, %r37, %r2983;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r39, %r38, %r2983;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r10971, %r39, %r2983;
	// inline asm
	bra.uni 	BB4_195;

BB4_664:
	setp.eq.s32	%p558, %r45, 19;
	@%p558 bra 	BB4_695;
	bra.uni 	BB4_665;

BB4_695:
	mov.u32 	%r5935, 24;
	// inline asm
	shf.r.wrap.b32 %r10963, %r43, %r42, %r5935;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r42, %r41, %r5935;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r41, %r40, %r5935;
	// inline asm
	mov.u32 	%r10959, 0;
	// inline asm
	shf.r.wrap.b32 %r40, %r40, %r10959, %r5935;
	// inline asm

BB4_696:
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	bra.uni 	BB4_712;

BB4_963:
	setp.eq.s32	%p736, %r7844, 19;
	@%p736 bra 	BB4_964;
	bra.uni 	BB4_955;

BB4_964:
	mov.u32 	%r7994, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r37, %r36, %r7994;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r38, %r37, %r7994;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r39, %r38, %r7994;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r10970, %r39, %r7994;
	// inline asm

BB4_995:
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10967, %r10970;
	bra.uni 	BB4_1008;

BB4_648:
	setp.eq.s32	%p570, %r45, 11;
	@%p570 bra 	BB4_649;
	bra.uni 	BB4_665;

BB4_649:
	mov.u32 	%r6079, 24;
	// inline asm
	shf.r.wrap.b32 %r10963, %r37, %r36, %r6079;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r36, %r43, %r6079;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r43, %r42, %r6079;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6068, %r42, %r41, %r6079;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r41, %r40, %r6079;
	// inline asm
	mov.u32 	%r10961, 0;
	// inline asm
	shf.r.wrap.b32 %r10960, %r40, %r10961, %r6079;
	// inline asm
	mov.u32 	%r10962, %r10961;
	mov.u32 	%r40, %r6068;
	bra.uni 	BB4_712;

BB4_947:
	setp.eq.s32	%p748, %r7844, 11;
	@%p748 bra 	BB4_948;
	bra.uni 	BB4_955;

BB4_948:
	mov.u32 	%r8138, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r43, %r42, %r8138;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r36, %r43, %r8138;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r37, %r36, %r8138;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r38, %r37, %r8138;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r39, %r38, %r8138;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r10970, %r39, %r8138;
	// inline asm
	mov.u32 	%r10969, %r10970;
	bra.uni 	BB4_1008;

BB4_158:
	setp.eq.s32	%p145, %r45, 22;
	@%p145 bra 	BB4_183;
	bra.uni 	BB4_159;

BB4_183:
	mov.u32 	%r2683, 16;
	// inline asm
	shf.r.wrap.b32 %r10970, %r38, %r37, %r2683;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r39, %r38, %r2683;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r10967, %r39, %r2683;
	// inline asm
	bra.uni 	BB4_180;

BB4_680:
	setp.eq.s32	%p547, %r45, 27;
	@%p547 bra 	BB4_681;
	bra.uni 	BB4_665;

BB4_681:
	mov.u32 	%r5823, 24;
	// inline asm
	shf.r.wrap.b32 %r10963, %r41, %r40, %r5823;
	// inline asm
	mov.u32 	%r10959, 0;
	// inline asm
	shf.r.wrap.b32 %r10964, %r40, %r10959, %r5823;
	// inline asm

BB4_682:
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	bra.uni 	BB4_710;

BB4_978:
	setp.eq.s32	%p725, %r7844, 27;
	@%p725 bra 	BB4_979;
	bra.uni 	BB4_955;

BB4_979:
	mov.u32 	%r7882, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r39, %r38, %r7882;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r10974, %r39, %r7882;
	// inline asm

BB4_980:
	mov.u32 	%r10973, %r10974;
	bra.uni 	BB4_1007;

BB4_640:
	setp.eq.s32	%p576, %r45, 7;
	@%p576 bra 	BB4_641;
	bra.uni 	BB4_665;

BB4_641:
	mov.u32 	%r6163, 24;
	// inline asm
	shf.r.wrap.b32 %r10963, %r38, %r37, %r6163;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r37, %r36, %r6163;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r36, %r43, %r6163;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6148, %r43, %r42, %r6163;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r42, %r41, %r6163;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10960, %r41, %r40, %r6163;
	// inline asm
	mov.u32 	%r10962, 0;
	// inline asm
	shf.r.wrap.b32 %r10961, %r40, %r10962, %r6163;
	// inline asm
	mov.u32 	%r40, %r6148;
	bra.uni 	BB4_712;

BB4_939:
	setp.eq.s32	%p754, %r7844, 7;
	@%p754 bra 	BB4_940;
	bra.uni 	BB4_955;

BB4_940:
	mov.u32 	%r8222, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r42, %r41, %r8222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r43, %r42, %r8222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r36, %r43, %r8222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r37, %r36, %r8222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r38, %r37, %r8222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r39, %r38, %r8222;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r10970, %r39, %r8222;
	// inline asm
	bra.uni 	BB4_1008;

BB4_141:
	setp.eq.s32	%p157, %r45, 14;
	@%p157 bra 	BB4_188;
	bra.uni 	BB4_142;

BB4_188:
	mov.u32 	%r2817, 16;
	// inline asm
	shf.r.wrap.b32 %r10970, %r36, %r43, %r2817;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r37, %r36, %r2817;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r38, %r37, %r2817;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r39, %r38, %r2817;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r10971, %r39, %r2817;
	// inline asm
	bra.uni 	BB4_144;

BB4_671:
	setp.eq.s32	%p553, %r45, 23;
	@%p553 bra 	BB4_672;
	bra.uni 	BB4_665;

BB4_672:
	mov.u32 	%r5875, 24;
	// inline asm
	shf.r.wrap.b32 %r10963, %r42, %r41, %r5875;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r41, %r40, %r5875;
	// inline asm
	mov.u32 	%r10959, 0;
	// inline asm
	shf.r.wrap.b32 %r10965, %r40, %r10959, %r5875;
	// inline asm

BB4_673:
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	bra.uni 	BB4_711;

BB4_970:
	setp.eq.s32	%p731, %r7844, 23;
	@%p731 bra 	BB4_971;
	bra.uni 	BB4_955;

BB4_971:
	mov.u32 	%r7934, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r38, %r37, %r7934;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r39, %r38, %r7934;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r10974, %r39, %r7934;
	// inline asm
	bra.uni 	BB4_1007;

BB4_655:
	setp.eq.s32	%p565, %r45, 15;
	@%p565 bra 	BB4_656;
	bra.uni 	BB4_665;

BB4_656:
	mov.u32 	%r6003, 24;
	// inline asm
	shf.r.wrap.b32 %r10963, %r36, %r43, %r6003;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r43, %r42, %r6003;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r42, %r41, %r6003;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5996, %r41, %r40, %r6003;
	// inline asm
	mov.u32 	%r10960, 0;
	// inline asm
	shf.r.wrap.b32 %r10959, %r40, %r10960, %r6003;
	// inline asm
	mov.u32 	%r10961, %r10960;
	mov.u32 	%r10962, %r10960;
	mov.u32 	%r40, %r5996;
	bra.uni 	BB4_712;

BB4_954:
	setp.eq.s32	%p743, %r7844, 15;
	@%p743 bra 	BB4_996;
	bra.uni 	BB4_955;

BB4_996:
	mov.u32 	%r8062, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r36, %r43, %r8062;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r37, %r36, %r8062;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r38, %r37, %r8062;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r39, %r38, %r8062;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r10970, %r39, %r8062;
	// inline asm

BB4_997:
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10968, %r10970;
	bra.uni 	BB4_1008;

BB4_174:
	setp.eq.s32	%p134, %r45, 30;
	@%p134 bra 	BB4_178;
	bra.uni 	BB4_175;

BB4_178:
	mov.u32 	%r10967, 0;
	mov.u32 	%r2581, 16;
	// inline asm
	shf.r.wrap.b32 %r10970, %r10967, %r39, %r2581;
	// inline asm
	bra.uni 	BB4_177;

BB4_268:
	setp.eq.s32	%p222, %r45, 18;
	@%p222 bra 	BB4_299;
	bra.uni 	BB4_269;

BB4_299:
	mov.u32 	%r3344, 16;
	// inline asm
	shf.r.wrap.b32 %r43, %r37, %r36, %r3344;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r38, %r37, %r3344;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r39, %r38, %r3344;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r10828, %r10832, %r39, %r3344;
	// inline asm
	bra.uni 	BB4_301;

BB4_252:
	setp.eq.s32	%p234, %r45, 10;
	@%p234 bra 	BB4_306;
	bra.uni 	BB4_253;

BB4_306:
	mov.u32 	%r3494, 16;
	// inline asm
	shf.r.wrap.b32 %r3471, %r43, %r42, %r3494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r36, %r43, %r3494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r37, %r36, %r3494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r38, %r37, %r3494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3487, %r39, %r38, %r3494;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r10834, %r10832, %r39, %r3494;
	// inline asm
	mov.u32 	%r43, %r3471;
	mov.u32 	%r10833, %r10832;
	mov.u32 	%r39, %r3487;
	bra.uni 	BB4_315;

BB4_283:
	setp.eq.s32	%p211, %r45, 26;
	@%p211 bra 	BB4_295;
	bra.uni 	BB4_284;

BB4_295:
	mov.u32 	%r3226, 16;
	// inline asm
	shf.r.wrap.b32 %r43, %r39, %r38, %r3226;
	// inline asm
	mov.u32 	%r10828, 0;
	// inline asm
	shf.r.wrap.b32 %r10830, %r10828, %r39, %r3226;
	// inline asm
	bra.uni 	BB4_286;

BB4_688:
	setp.ne.s32	%p542, %r45, 30;
	@%p542 bra 	BB4_665;

	mov.u32 	%r10959, 0;
	mov.u32 	%r5790, 16;
	// inline asm
	shf.r.wrap.b32 %r10963, %r40, %r10959, %r5790;
	// inline asm

BB4_708:
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;

BB4_709:
	mov.u32 	%r10964, %r10959;

BB4_710:
	mov.u32 	%r10965, %r10959;

BB4_711:
	mov.u32 	%r40, %r10959;
	bra.uni 	BB4_712;

BB4_665:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r40, %r36;

BB4_712:
	and.b32  	%r6332, %r46, 3;
	shl.b32 	%r6333, %r6332, 3;
	mov.u32 	%r6334, 1;
	shl.b32 	%r6335, %r6334, %r6333;
	add.s32 	%r961, %r6335, -1;
	shr.u32 	%r6331, %r47, 2;
	setp.gt.s32	%p582, %r6331, 3;
	@%p582 bra 	BB4_721;

	setp.gt.s32	%p588, %r6331, 1;
	@%p588 bra 	BB4_718;

	setp.eq.s32	%p591, %r6331, 0;
	@%p591 bra 	BB4_733;
	bra.uni 	BB4_715;

BB4_733:
	and.b32  	%r10963, %r10963, %r961;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10964, %r10959;
	bra.uni 	BB4_717;

BB4_721:
	setp.gt.s32	%p583, %r6331, 5;
	@%p583 bra 	BB4_725;

	setp.eq.s32	%p586, %r6331, 4;
	@%p586 bra 	BB4_730;
	bra.uni 	BB4_723;

BB4_730:
	and.b32  	%r10959, %r10959, %r961;
	mov.u32 	%r10960, 0;
	mov.u32 	%r10961, %r10960;
	mov.u32 	%r10962, %r10960;
	bra.uni 	BB4_727;

BB4_718:
	setp.eq.s32	%p589, %r6331, 2;
	@%p589 bra 	BB4_731;
	bra.uni 	BB4_719;

BB4_731:
	and.b32  	%r10965, %r10965, %r961;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	bra.uni 	BB4_732;

BB4_725:
	setp.eq.s32	%p584, %r6331, 6;
	@%p584 bra 	BB4_729;
	bra.uni 	BB4_726;

BB4_729:
	and.b32  	%r10961, %r10961, %r961;
	mov.u32 	%r10962, 0;
	bra.uni 	BB4_727;

BB4_715:
	setp.eq.s32	%p592, %r6331, 1;
	@%p592 bra 	BB4_716;
	bra.uni 	BB4_727;

BB4_716:
	and.b32  	%r10964, %r10964, %r961;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;

BB4_717:
	mov.u32 	%r10965, %r10959;

BB4_732:
	mov.u32 	%r10966, %r10959;
	mov.u32 	%r10975, %r47;
	bra.uni 	BB4_1015;

BB4_723:
	setp.eq.s32	%p587, %r6331, 5;
	@%p587 bra 	BB4_724;
	bra.uni 	BB4_727;

BB4_724:
	and.b32  	%r10960, %r10960, %r961;
	mov.u32 	%r10961, 0;
	mov.u32 	%r10962, %r10961;
	bra.uni 	BB4_727;

BB4_719:
	setp.eq.s32	%p590, %r6331, 3;
	@%p590 bra 	BB4_720;
	bra.uni 	BB4_727;

BB4_720:
	and.b32  	%r10966, %r40, %r961;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10975, %r47;
	bra.uni 	BB4_1015;

BB4_726:
	setp.ne.s32	%p585, %r6331, 7;
	@%p585 bra 	BB4_727;

	and.b32  	%r10962, %r10962, %r961;

BB4_727:
	mov.u32 	%r10966, %r40;
	mov.u32 	%r10975, %r47;
	bra.uni 	BB4_1015;

BB4_986:
	setp.ne.s32	%p720, %r7844, 30;
	@%p720 bra 	BB4_955;

	mov.u32 	%r10974, 0;
	mov.u32 	%r7849, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r10974, %r39, %r7849;
	// inline asm

BB4_1006:
	mov.u32 	%r10973, %r10974;
	mov.u32 	%r10972, %r10974;

BB4_1007:
	mov.u32 	%r10970, %r10974;
	mov.u32 	%r10969, %r10974;
	mov.u32 	%r10968, %r10974;
	mov.u32 	%r10967, %r10974;
	bra.uni 	BB4_1008;

BB4_955:
	mov.u32 	%r10974, %r43;
	mov.u32 	%r10973, %r42;
	mov.u32 	%r10972, %r41;
	mov.u32 	%r10971, %r40;
	mov.u32 	%r10970, %r39;
	mov.u32 	%r10969, %r38;
	mov.u32 	%r10968, %r37;
	mov.u32 	%r10967, %r36;

BB4_1008:
	// inline asm
	prmt.b32 %r10963, %r10971, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10964, %r10972, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10965, %r10973, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10966, %r10974, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10959, %r10967, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10960, %r10968, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10961, %r10969, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10962, %r10970, 0, 0x0123;
	// inline asm
	bra.uni 	BB4_1014;

BB4_244:
	setp.eq.s32	%p240, %r45, 6;
	@%p240 bra 	BB4_308;
	bra.uni 	BB4_245;

BB4_308:
	mov.u32 	%r3581, 16;
	// inline asm
	shf.r.wrap.b32 %r3554, %r42, %r41, %r3581;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r43, %r42, %r3581;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r36, %r43, %r3581;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r37, %r36, %r3581;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3570, %r38, %r37, %r3581;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10834, %r39, %r38, %r3581;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r10833, %r10832, %r39, %r3581;
	// inline asm
	mov.u32 	%r43, %r3554;
	mov.u32 	%r39, %r3570;
	bra.uni 	BB4_315;

BB4_275:
	setp.eq.s32	%p217, %r45, 22;
	@%p217 bra 	BB4_297;
	bra.uni 	BB4_276;

BB4_297:
	mov.u32 	%r3281, 16;
	// inline asm
	shf.r.wrap.b32 %r43, %r38, %r37, %r3281;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r39, %r38, %r3281;
	// inline asm
	mov.u32 	%r10828, 0;
	// inline asm
	shf.r.wrap.b32 %r10829, %r10828, %r39, %r3281;
	// inline asm
	bra.uni 	BB4_314;

BB4_259:
	setp.eq.s32	%p229, %r45, 14;
	@%p229 bra 	BB4_303;
	bra.uni 	BB4_260;

BB4_303:
	mov.u32 	%r3415, 16;
	// inline asm
	shf.r.wrap.b32 %r43, %r36, %r43, %r3415;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r37, %r36, %r3415;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r38, %r37, %r3415;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r39, %r38, %r3415;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r10832, %r39, %r3415;
	// inline asm
	bra.uni 	BB4_305;

BB4_291:
	setp.eq.s32	%p206, %r45, 31;
	@%p206 bra 	BB4_312;
	bra.uni 	BB4_292;

BB4_312:
	mov.u32 	%r10828, 0;
	mov.u32 	%r3712, 8;
	// inline asm
	shf.r.wrap.b32 %r43, %r10828, %r39, %r3712;
	// inline asm
	bra.uni 	BB4_313;

BB4_412:
	mov.u32 	%r4537, 24;
	// inline asm
	shf.r.wrap.b32 %r4506, %r41, %r40, %r4537;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r42, %r41, %r4537;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r43, %r42, %r4537;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r36, %r43, %r4537;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4522, %r37, %r36, %r4537;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r38, %r37, %r4537;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r39, %r38, %r4537;
	// inline asm
	mov.u32 	%r4535, 0;
	// inline asm
	shf.r.wrap.b32 %r10850, %r4535, %r39, %r4537;
	// inline asm
	mov.u32 	%r43, %r4506;
	mov.u32 	%r39, %r4522;
	bra.uni 	BB4_416;

BB4_339:
	setp.eq.s32	%p315, %r45, 3;
	@%p315 bra 	BB4_340;
	bra.uni 	BB4_362;

BB4_340:
	mov.u32 	%r4473, 8;
	// inline asm
	shf.r.wrap.b32 %r4442, %r41, %r40, %r4473;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r42, %r41, %r4473;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r43, %r42, %r4473;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r36, %r43, %r4473;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4458, %r37, %r36, %r4473;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r38, %r37, %r4473;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r39, %r38, %r4473;
	// inline asm
	mov.u32 	%r4471, 0;
	// inline asm
	shf.r.wrap.b32 %r10850, %r4471, %r39, %r4473;
	// inline asm
	mov.u32 	%r43, %r4442;
	mov.u32 	%r39, %r4458;
	bra.uni 	BB4_416;

BB4_520:
	setp.eq.s32	%p522, %r47, 1;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p522 bra 	BB4_521;
	bra.uni 	BB4_601;

BB4_521:
	mov.u32 	%r5764, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r39, %r38, %r5764;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r38, %r37, %r5764;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r37, %r36, %r5764;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r36, %r43, %r5764;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r43, %r42, %r5764;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r42, %r41, %r5764;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r41, %r40, %r5764;
	// inline asm
	mov.u32 	%r5763, 0;
	// inline asm
	shf.r.wrap.b32 %r10970, %r40, %r5763, %r5764;
	// inline asm
	bra.uni 	BB4_601;

BB4_791:
	setp.eq.s32	%p674, %r6677, 2;
	@%p674 bra 	BB4_867;
	bra.uni 	BB4_792;

BB4_867:
	mov.u32 	%r7190, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r41, %r40, %r7190;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r42, %r41, %r7190;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r43, %r42, %r7190;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r36, %r43, %r7190;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r37, %r36, %r7190;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r38, %r37, %r7190;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r39, %r38, %r7190;
	// inline asm
	mov.u32 	%r7188, 0;
	// inline asm
	shf.r.wrap.b32 %r10970, %r7188, %r39, %r7190;
	// inline asm
	bra.uni 	BB4_868;

BB4_552:
	setp.eq.s32	%p499, %r47, 17;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p499 bra 	BB4_553;
	bra.uni 	BB4_601;

BB4_553:
	mov.u32 	%r5420, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r43, %r42, %r5420;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r42, %r41, %r5420;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r41, %r40, %r5420;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r40, %r10967, %r5420;
	// inline asm
	bra.uni 	BB4_557;

BB4_367:
	setp.eq.s32	%p294, %r45, 17;
	@%p294 bra 	BB4_368;
	bra.uni 	BB4_362;

BB4_368:
	mov.u32 	%r4193, 24;
	// inline asm
	shf.r.wrap.b32 %r43, %r37, %r36, %r4193;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r38, %r37, %r4193;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r39, %r38, %r4193;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r10850, %r39, %r4193;
	// inline asm
	bra.uni 	BB4_402;

BB4_535:
	setp.eq.s32	%p511, %r47, 9;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p511 bra 	BB4_536;
	bra.uni 	BB4_601;

BB4_536:
	mov.u32 	%r5576, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r37, %r36, %r5576;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r36, %r43, %r5576;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r43, %r42, %r5576;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r42, %r41, %r5576;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r41, %r40, %r5576;
	// inline asm
	mov.u32 	%r10969, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r40, %r10969, %r5576;
	// inline asm
	mov.u32 	%r10970, %r10969;
	bra.uni 	BB4_601;

BB4_823:
	setp.eq.s32	%p651, %r6677, 18;
	@%p651 bra 	BB4_859;
	bra.uni 	BB4_824;

BB4_859:
	mov.u32 	%r6858, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r37, %r36, %r6858;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r38, %r37, %r6858;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r39, %r38, %r6858;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r10970, %r39, %r6858;
	// inline asm
	bra.uni 	BB4_826;

BB4_351:
	setp.eq.s32	%p306, %r45, 9;
	@%p306 bra 	BB4_352;
	bra.uni 	BB4_362;

BB4_352:
	mov.u32 	%r4349, 24;
	// inline asm
	shf.r.wrap.b32 %r4326, %r43, %r42, %r4349;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r36, %r43, %r4349;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r37, %r36, %r4349;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r38, %r37, %r4349;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4342, %r39, %r38, %r4349;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r10850, %r39, %r4349;
	// inline asm
	mov.u32 	%r43, %r4326;
	mov.u32 	%r10851, %r10850;
	mov.u32 	%r39, %r4342;
	bra.uni 	BB4_416;

BB4_569:
	setp.eq.s32	%p488, %r47, 25;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p488 bra 	BB4_570;
	bra.uni 	BB4_601;

BB4_570:
	mov.u32 	%r5296, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r41, %r40, %r5296;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r40, %r10967, %r5296;
	// inline asm
	bra.uni 	BB4_574;

BB4_382:
	setp.eq.s32	%p283, %r45, 25;
	@%p283 bra 	BB4_383;
	bra.uni 	BB4_362;

BB4_383:
	mov.u32 	%r4069, 24;
	// inline asm
	shf.r.wrap.b32 %r43, %r39, %r38, %r4069;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r10846, %r39, %r4069;
	// inline asm
	bra.uni 	BB4_387;

BB4_527:
	setp.eq.s32	%p517, %r47, 5;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p517 bra 	BB4_528;
	bra.uni 	BB4_601;

BB4_528:
	mov.u32 	%r5666, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r38, %r37, %r5666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r37, %r36, %r5666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r36, %r43, %r5666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r43, %r42, %r5666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r42, %r41, %r5666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r41, %r40, %r5666;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r40, %r10970, %r5666;
	// inline asm
	bra.uni 	BB4_601;

BB4_806:
	setp.eq.s32	%p663, %r6677, 10;
	@%p663 bra 	BB4_863;
	bra.uni 	BB4_807;

BB4_863:
	mov.u32 	%r7008, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r43, %r42, %r7008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r36, %r43, %r7008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r37, %r36, %r7008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r38, %r37, %r7008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r39, %r38, %r7008;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r10970, %r39, %r7008;
	// inline asm
	mov.u32 	%r10969, %r10970;
	bra.uni 	BB4_868;

BB4_343:
	setp.eq.s32	%p312, %r45, 5;
	@%p312 bra 	BB4_344;
	bra.uni 	BB4_362;

BB4_344:
	mov.u32 	%r4439, 24;
	// inline asm
	shf.r.wrap.b32 %r4412, %r42, %r41, %r4439;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r43, %r42, %r4439;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r36, %r43, %r4439;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r37, %r36, %r4439;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4428, %r38, %r37, %r4439;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r39, %r38, %r4439;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r10850, %r39, %r4439;
	// inline asm
	mov.u32 	%r43, %r4412;
	mov.u32 	%r39, %r4428;
	bra.uni 	BB4_416;

BB4_560:
	setp.eq.s32	%p494, %r47, 21;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p494 bra 	BB4_561;
	bra.uni 	BB4_601;

BB4_561:
	mov.u32 	%r5354, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r42, %r41, %r5354;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r41, %r40, %r5354;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r40, %r10967, %r5354;
	// inline asm
	bra.uni 	BB4_565;

BB4_374:
	setp.eq.s32	%p289, %r45, 21;
	@%p289 bra 	BB4_375;
	bra.uni 	BB4_362;

BB4_375:
	mov.u32 	%r4127, 24;
	// inline asm
	shf.r.wrap.b32 %r43, %r38, %r37, %r4127;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r39, %r38, %r4127;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r10846, %r39, %r4127;
	// inline asm
	bra.uni 	BB4_415;

BB4_542:
	setp.eq.s32	%p506, %r47, 13;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p506 bra 	BB4_543;
	bra.uni 	BB4_601;

BB4_543:
	mov.u32 	%r5494, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r36, %r43, %r5494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r43, %r42, %r5494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r42, %r41, %r5494;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r41, %r40, %r5494;
	// inline asm
	mov.u32 	%r10968, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r40, %r10968, %r5494;
	// inline asm
	bra.uni 	BB4_547;

BB4_839:
	setp.eq.s32	%p640, %r6677, 26;
	@%p640 bra 	BB4_855;
	bra.uni 	BB4_840;

BB4_855:
	mov.u32 	%r6740, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r39, %r38, %r6740;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r10974, %r39, %r6740;
	// inline asm
	bra.uni 	BB4_842;

BB4_358:
	setp.eq.s32	%p301, %r45, 13;
	@%p301 bra 	BB4_359;
	bra.uni 	BB4_362;

BB4_359:
	mov.u32 	%r4267, 24;
	// inline asm
	shf.r.wrap.b32 %r43, %r36, %r43, %r4267;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r37, %r36, %r4267;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r38, %r37, %r4267;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r39, %r38, %r4267;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r10850, %r39, %r4267;
	// inline asm
	bra.uni 	BB4_406;

BB4_578:
	setp.eq.s32	%p483, %r47, 29;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p483 bra 	BB4_579;
	bra.uni 	BB4_601;

BB4_579:
	mov.u32 	%r10967, 0;
	mov.u32 	%r5246, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r40, %r10967, %r5246;
	// inline asm
	bra.uni 	BB4_583;

BB4_390:
	setp.eq.s32	%p278, %r45, 29;
	@%p278 bra 	BB4_391;
	bra.uni 	BB4_362;

BB4_391:
	mov.u32 	%r10846, 0;
	mov.u32 	%r4019, 24;
	// inline asm
	shf.r.wrap.b32 %r43, %r10846, %r39, %r4019;
	// inline asm
	bra.uni 	BB4_414;

BB4_311:
	mov.u32 	%r3708, 24;
	// inline asm
	shf.r.wrap.b32 %r3677, %r41, %r40, %r3708;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r42, %r41, %r3708;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r43, %r42, %r3708;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r36, %r43, %r3708;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3693, %r37, %r36, %r3708;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10834, %r38, %r37, %r3708;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10833, %r39, %r38, %r3708;
	// inline asm
	mov.u32 	%r3706, 0;
	// inline asm
	shf.r.wrap.b32 %r10832, %r3706, %r39, %r3708;
	// inline asm
	mov.u32 	%r43, %r3677;
	mov.u32 	%r39, %r3693;
	bra.uni 	BB4_315;

BB4_238:
	setp.eq.s32	%p246, %r45, 3;
	@%p246 bra 	BB4_239;
	bra.uni 	BB4_261;

BB4_239:
	mov.u32 	%r3644, 8;
	// inline asm
	shf.r.wrap.b32 %r3613, %r41, %r40, %r3644;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r42, %r41, %r3644;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r43, %r42, %r3644;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r36, %r43, %r3644;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3629, %r37, %r36, %r3644;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10834, %r38, %r37, %r3644;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10833, %r39, %r38, %r3644;
	// inline asm
	mov.u32 	%r3642, 0;
	// inline asm
	shf.r.wrap.b32 %r10832, %r3642, %r39, %r3644;
	// inline asm
	mov.u32 	%r43, %r3613;
	mov.u32 	%r39, %r3629;
	bra.uni 	BB4_315;

BB4_523:
	setp.eq.s32	%p520, %r47, 3;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p520 bra 	BB4_524;
	bra.uni 	BB4_601;

BB4_524:
	mov.u32 	%r5700, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r39, %r38, %r5700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r38, %r37, %r5700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r37, %r36, %r5700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r36, %r43, %r5700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r43, %r42, %r5700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r42, %r41, %r5700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r41, %r40, %r5700;
	// inline asm
	mov.u32 	%r5699, 0;
	// inline asm
	shf.r.wrap.b32 %r10970, %r40, %r5699, %r5700;
	// inline asm
	bra.uni 	BB4_601;

BB4_798:
	setp.eq.s32	%p669, %r6677, 6;
	@%p669 bra 	BB4_865;
	bra.uni 	BB4_799;

BB4_865:
	mov.u32 	%r7095, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r42, %r41, %r7095;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r43, %r42, %r7095;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r36, %r43, %r7095;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r37, %r36, %r7095;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r38, %r37, %r7095;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r39, %r38, %r7095;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r10970, %r39, %r7095;
	// inline asm
	bra.uni 	BB4_868;

BB4_555:
	setp.eq.s32	%p497, %r47, 19;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p497 bra 	BB4_556;
	bra.uni 	BB4_601;

BB4_556:
	mov.u32 	%r5380, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r43, %r42, %r5380;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r42, %r41, %r5380;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r41, %r40, %r5380;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r40, %r10967, %r5380;
	// inline asm

BB4_557:
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	bra.uni 	BB4_601;

BB4_370:
	setp.eq.s32	%p292, %r45, 19;
	@%p292 bra 	BB4_371;
	bra.uni 	BB4_362;

BB4_371:
	mov.u32 	%r4153, 8;
	// inline asm
	shf.r.wrap.b32 %r43, %r37, %r36, %r4153;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r38, %r37, %r4153;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r39, %r38, %r4153;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r10850, %r39, %r4153;
	// inline asm

BB4_402:
	mov.u32 	%r10851, %r10850;
	mov.u32 	%r10852, %r10850;
	mov.u32 	%r39, %r10850;
	bra.uni 	BB4_416;

BB4_538:
	setp.eq.s32	%p509, %r47, 11;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p509 bra 	BB4_539;
	bra.uni 	BB4_601;

BB4_539:
	mov.u32 	%r5524, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r37, %r36, %r5524;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r36, %r43, %r5524;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r43, %r42, %r5524;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r42, %r41, %r5524;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r41, %r40, %r5524;
	// inline asm
	mov.u32 	%r10969, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r40, %r10969, %r5524;
	// inline asm
	mov.u32 	%r10970, %r10969;
	bra.uni 	BB4_601;

BB4_831:
	setp.eq.s32	%p646, %r6677, 22;
	@%p646 bra 	BB4_857;
	bra.uni 	BB4_832;

BB4_857:
	mov.u32 	%r6795, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r38, %r37, %r6795;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r39, %r38, %r6795;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r10974, %r39, %r6795;
	// inline asm
	bra.uni 	BB4_843;

BB4_354:
	setp.eq.s32	%p304, %r45, 11;
	@%p304 bra 	BB4_355;
	bra.uni 	BB4_362;

BB4_355:
	mov.u32 	%r4297, 8;
	// inline asm
	shf.r.wrap.b32 %r4274, %r43, %r42, %r4297;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r36, %r43, %r4297;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r37, %r36, %r4297;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r38, %r37, %r4297;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4290, %r39, %r38, %r4297;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r10850, %r39, %r4297;
	// inline asm
	mov.u32 	%r43, %r4274;
	mov.u32 	%r10851, %r10850;
	mov.u32 	%r39, %r4290;
	bra.uni 	BB4_416;

BB4_572:
	setp.eq.s32	%p486, %r47, 27;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p486 bra 	BB4_573;
	bra.uni 	BB4_601;

BB4_573:
	mov.u32 	%r5268, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r41, %r40, %r5268;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r40, %r10967, %r5268;
	// inline asm

BB4_574:
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	bra.uni 	BB4_575;

BB4_385:
	setp.eq.s32	%p281, %r45, 27;
	@%p281 bra 	BB4_386;
	bra.uni 	BB4_362;

BB4_386:
	mov.u32 	%r4041, 8;
	// inline asm
	shf.r.wrap.b32 %r43, %r39, %r38, %r4041;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r10846, %r39, %r4041;
	// inline asm

BB4_387:
	mov.u32 	%r10847, %r10846;
	bra.uni 	BB4_415;

BB4_530:
	setp.eq.s32	%p515, %r47, 7;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p515 bra 	BB4_531;
	bra.uni 	BB4_601;

BB4_531:
	mov.u32 	%r5608, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r38, %r37, %r5608;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r37, %r36, %r5608;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r36, %r43, %r5608;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r43, %r42, %r5608;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r42, %r41, %r5608;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r41, %r40, %r5608;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r40, %r10970, %r5608;
	// inline asm
	bra.uni 	BB4_601;

BB4_813:
	setp.eq.s32	%p658, %r6677, 14;
	@%p658 bra 	BB4_861;
	bra.uni 	BB4_814;

BB4_861:
	mov.u32 	%r6929, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r36, %r43, %r6929;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r37, %r36, %r6929;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r38, %r37, %r6929;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r39, %r38, %r6929;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r10970, %r39, %r6929;
	// inline asm
	bra.uni 	BB4_816;

BB4_346:
	setp.eq.s32	%p310, %r45, 7;
	@%p310 bra 	BB4_347;
	bra.uni 	BB4_362;

BB4_347:
	mov.u32 	%r4381, 8;
	// inline asm
	shf.r.wrap.b32 %r4354, %r42, %r41, %r4381;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r43, %r42, %r4381;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r36, %r43, %r4381;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r37, %r36, %r4381;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4370, %r38, %r37, %r4381;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r39, %r38, %r4381;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r10850, %r39, %r4381;
	// inline asm
	mov.u32 	%r43, %r4354;
	mov.u32 	%r39, %r4370;
	bra.uni 	BB4_416;

BB4_563:
	setp.eq.s32	%p492, %r47, 23;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p492 bra 	BB4_564;
	bra.uni 	BB4_601;

BB4_564:
	mov.u32 	%r5320, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r42, %r41, %r5320;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r41, %r40, %r5320;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r40, %r10967, %r5320;
	// inline asm

BB4_565:
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	mov.u32 	%r10974, %r10967;
	bra.uni 	BB4_601;

BB4_377:
	setp.eq.s32	%p287, %r45, 23;
	@%p287 bra 	BB4_378;
	bra.uni 	BB4_362;

BB4_378:
	mov.u32 	%r4093, 8;
	// inline asm
	shf.r.wrap.b32 %r43, %r38, %r37, %r4093;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r39, %r38, %r4093;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r10846, %r39, %r4093;
	// inline asm
	bra.uni 	BB4_415;

BB4_545:
	setp.eq.s32	%p504, %r47, 15;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p504 bra 	BB4_546;
	bra.uni 	BB4_601;

BB4_546:
	mov.u32 	%r5448, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r36, %r43, %r5448;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r43, %r42, %r5448;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r42, %r41, %r5448;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r41, %r40, %r5448;
	// inline asm
	mov.u32 	%r10968, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r40, %r10968, %r5448;
	// inline asm

BB4_547:
	mov.u32 	%r10969, %r10968;
	mov.u32 	%r10970, %r10968;
	bra.uni 	BB4_601;

BB4_848:
	setp.eq.s32	%p635, %r6677, 30;
	@%p635 bra 	BB4_852;
	bra.uni 	BB4_849;

BB4_852:
	mov.u32 	%r10974, 0;
	mov.u32 	%r6693, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r10974, %r39, %r6693;
	// inline asm
	bra.uni 	BB4_851;

BB4_361:
	setp.eq.s32	%p299, %r45, 15;
	@%p299 bra 	BB4_403;
	bra.uni 	BB4_362;

BB4_403:
	mov.u32 	%r4221, 8;
	// inline asm
	shf.r.wrap.b32 %r43, %r36, %r43, %r4221;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r37, %r36, %r4221;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r38, %r37, %r4221;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r39, %r38, %r4221;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r10850, %r39, %r4221;
	// inline asm

BB4_406:
	mov.u32 	%r10851, %r10850;
	mov.u32 	%r10852, %r10850;
	bra.uni 	BB4_416;

BB4_581:
	setp.ne.s32	%p481, %r47, 31;
	mov.u32 	%r10967, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10971, %r10970;
	mov.u32 	%r10972, %r10970;
	mov.u32 	%r10973, %r10970;
	mov.u32 	%r10974, %r10970;
	@%p481 bra 	BB4_601;

	mov.u32 	%r10967, 0;
	mov.u32 	%r5224, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r40, %r10967, %r5224;
	// inline asm

BB4_583:
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	mov.u32 	%r10972, %r10967;

BB4_575:
	mov.u32 	%r10973, %r10967;
	mov.u32 	%r10974, %r10967;

BB4_601:
	and.b32  	%r5766, %r44, 3;
	shl.b32 	%r5767, %r5766, 3;
	mov.u32 	%r5768, 1;
	shl.b32 	%r5769, %r5768, %r5767;
	add.s32 	%r826, %r5769, -1;
	neg.s32 	%r827, %r5769;
	shr.u32 	%r5765, %r45, 2;
	setp.gt.s32	%p523, %r5765, 3;
	@%p523 bra 	BB4_609;

	setp.gt.s32	%p529, %r5765, 1;
	@%p529 bra 	BB4_606;

	setp.eq.s32	%p532, %r5765, 0;
	@%p532 bra 	BB4_623;
	bra.uni 	BB4_604;

BB4_623:
	and.b32  	%r5784, %r826, %r39;
	and.b32  	%r5785, %r10971, %r827;
	or.b32  	%r10963, %r5785, %r5784;
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10964, %r10972;
	bra.uni 	BB4_624;

BB4_609:
	setp.gt.s32	%p524, %r5765, 5;
	@%p524 bra 	BB4_614;

	setp.eq.s32	%p527, %r5765, 4;
	@%p527 bra 	BB4_621;
	bra.uni 	BB4_611;

BB4_621:
	and.b32  	%r5776, %r826, %r43;
	and.b32  	%r5777, %r10967, %r827;
	or.b32  	%r10959, %r5777, %r5776;
	mov.u32 	%r10960, %r10968;
	bra.uni 	BB4_613;

BB4_606:
	setp.eq.s32	%p530, %r5765, 2;
	@%p530 bra 	BB4_622;
	bra.uni 	BB4_607;

BB4_622:
	and.b32  	%r5780, %r826, %r37;
	and.b32  	%r5781, %r10973, %r827;
	or.b32  	%r10965, %r5781, %r5780;
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	bra.uni 	BB4_625;

BB4_614:
	setp.eq.s32	%p525, %r5765, 6;
	@%p525 bra 	BB4_618;
	bra.uni 	BB4_615;

BB4_618:
	and.b32  	%r5772, %r826, %r41;
	and.b32  	%r5773, %r10969, %r827;
	or.b32  	%r10961, %r5773, %r5772;
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	bra.uni 	BB4_619;

BB4_604:
	setp.eq.s32	%p533, %r5765, 1;
	@%p533 bra 	BB4_605;
	bra.uni 	BB4_616;

BB4_605:
	and.b32  	%r5782, %r826, %r38;
	and.b32  	%r5783, %r10972, %r827;
	or.b32  	%r10964, %r5783, %r5782;
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10963, %r39;

BB4_624:
	mov.u32 	%r10965, %r10973;

BB4_625:
	mov.u32 	%r10966, %r10974;
	bra.uni 	BB4_626;

BB4_611:
	setp.eq.s32	%p528, %r5765, 5;
	@%p528 bra 	BB4_612;
	bra.uni 	BB4_616;

BB4_612:
	and.b32  	%r5774, %r826, %r42;
	and.b32  	%r5775, %r10968, %r827;
	or.b32  	%r10960, %r5775, %r5774;
	mov.u32 	%r10959, %r43;

BB4_613:
	mov.u32 	%r10961, %r10969;

BB4_619:
	mov.u32 	%r10962, %r10970;
	bra.uni 	BB4_620;

BB4_607:
	setp.eq.s32	%p531, %r5765, 3;
	@%p531 bra 	BB4_608;
	bra.uni 	BB4_616;

BB4_608:
	and.b32  	%r5778, %r826, %r36;
	and.b32  	%r5779, %r10974, %r827;
	or.b32  	%r10966, %r5779, %r5778;
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	bra.uni 	BB4_626;

BB4_615:
	setp.ne.s32	%p526, %r5765, 7;
	@%p526 bra 	BB4_616;

	and.b32  	%r5770, %r826, %r40;
	and.b32  	%r5771, %r10970, %r827;
	or.b32  	%r10962, %r5771, %r5770;
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	bra.uni 	BB4_620;

BB4_616:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;

BB4_620:
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10966, %r36;

BB4_626:
	sub.s32 	%r10975, %r27, %r47;
	bra.uni 	BB4_1015;

BB4_393:
	setp.ne.s32	%p276, %r45, 30;
	@%p276 bra 	BB4_362;

	mov.u32 	%r10846, 0;
	mov.u32 	%r4008, 16;
	// inline asm
	shf.r.wrap.b32 %r43, %r10846, %r39, %r4008;
	// inline asm

BB4_414:
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;

BB4_415:
	mov.u32 	%r10850, %r10846;
	mov.u32 	%r10851, %r10846;
	mov.u32 	%r10852, %r10846;
	mov.u32 	%r39, %r10846;
	bra.uni 	BB4_416;

BB4_362:
	mov.u32 	%r10846, %r43;
	mov.u32 	%r10847, %r42;
	mov.u32 	%r10848, %r41;
	mov.u32 	%r43, %r40;
	mov.u32 	%r10850, %r39;
	mov.u32 	%r10851, %r38;
	mov.u32 	%r10852, %r37;
	mov.u32 	%r39, %r36;

BB4_416:
	and.b32  	%r4550, %r44, 3;
	shl.b32 	%r4551, %r4550, 3;
	mov.u32 	%r4552, 1;
	shl.b32 	%r4553, %r4552, %r4551;
	add.s32 	%r599, %r4553, -1;
	shr.u32 	%r4549, %r45, 2;
	setp.gt.s32	%p316, %r4549, 3;
	@%p316 bra 	BB4_424;

	setp.gt.s32	%p322, %r4549, 1;
	@%p322 bra 	BB4_421;

	setp.eq.s32	%p325, %r4549, 0;
	@%p325 bra 	BB4_436;
	bra.uni 	BB4_419;

BB4_436:
	and.b32  	%r10971, %r10971, %r599;
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	mov.u32 	%r10972, %r10967;
	bra.uni 	BB4_437;

BB4_424:
	setp.gt.s32	%p317, %r4549, 5;
	@%p317 bra 	BB4_428;

	setp.eq.s32	%p320, %r4549, 4;
	@%p320 bra 	BB4_434;
	bra.uni 	BB4_426;

BB4_434:
	and.b32  	%r10967, %r10971, %r599;
	mov.u32 	%r10968, 0;
	mov.u32 	%r10969, %r10968;
	mov.u32 	%r10970, %r10968;
	bra.uni 	BB4_432;

BB4_421:
	setp.eq.s32	%p323, %r4549, 2;
	@%p323 bra 	BB4_435;
	bra.uni 	BB4_422;

BB4_435:
	and.b32  	%r10973, %r10971, %r599;
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	mov.u32 	%r10972, %r10971;
	bra.uni 	BB4_438;

BB4_428:
	setp.eq.s32	%p318, %r4549, 6;
	@%p318 bra 	BB4_433;
	bra.uni 	BB4_429;

BB4_433:
	and.b32  	%r10969, %r10971, %r599;
	mov.u32 	%r10970, 0;
	mov.u32 	%r10967, %r10971;
	mov.u32 	%r10968, %r10971;
	bra.uni 	BB4_432;

BB4_419:
	setp.eq.s32	%p326, %r4549, 1;
	@%p326 bra 	BB4_420;
	bra.uni 	BB4_430;

BB4_420:
	and.b32  	%r10972, %r10971, %r599;
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;

BB4_437:
	mov.u32 	%r10973, %r10967;

BB4_438:
	mov.u32 	%r10974, %r10967;
	bra.uni 	BB4_439;

BB4_426:
	setp.eq.s32	%p321, %r4549, 5;
	@%p321 bra 	BB4_427;
	bra.uni 	BB4_430;

BB4_427:
	and.b32  	%r10968, %r10971, %r599;
	mov.u32 	%r10969, 0;
	mov.u32 	%r10967, %r10971;
	mov.u32 	%r10970, %r10969;
	bra.uni 	BB4_432;

BB4_422:
	setp.eq.s32	%p324, %r4549, 3;
	@%p324 bra 	BB4_423;
	bra.uni 	BB4_430;

BB4_423:
	and.b32  	%r10974, %r10971, %r599;
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	mov.u32 	%r10972, %r10971;
	mov.u32 	%r10973, %r10971;
	bra.uni 	BB4_439;

BB4_429:
	setp.ne.s32	%p319, %r4549, 7;
	@%p319 bra 	BB4_430;

	and.b32  	%r10970, %r10971, %r599;
	mov.u32 	%r10967, %r10971;
	mov.u32 	%r10968, %r10971;
	mov.u32 	%r10969, %r10971;
	bra.uni 	BB4_432;

BB4_430:
	mov.u32 	%r10967, %r10971;
	mov.u32 	%r10968, %r10971;
	mov.u32 	%r10969, %r10971;
	mov.u32 	%r10970, %r10971;

BB4_432:
	mov.u32 	%r10972, %r10971;
	mov.u32 	%r10973, %r10971;
	mov.u32 	%r10974, %r10971;

BB4_439:
	or.b32  	%r10963, %r10971, %r10850;
	or.b32  	%r10964, %r10972, %r10851;
	or.b32  	%r10965, %r10973, %r10852;
	or.b32  	%r10966, %r10974, %r39;
	or.b32  	%r10959, %r10967, %r10846;
	or.b32  	%r10960, %r10968, %r10847;
	or.b32  	%r10961, %r10969, %r10848;
	or.b32  	%r10962, %r10970, %r43;
	bra.uni 	BB4_1015;

BB4_117:
	setp.eq.s32	%p176, %r45, 1;
	@%p176 bra 	BB4_118;
	bra.uni 	BB4_195;

BB4_118:
	mov.u32 	%r3110, 24;
	// inline asm
	shf.r.wrap.b32 %r10970, %r41, %r40, %r3110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r42, %r41, %r3110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r43, %r42, %r3110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r36, %r43, %r3110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r37, %r36, %r3110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r38, %r37, %r3110;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r39, %r38, %r3110;
	// inline asm
	mov.u32 	%r3108, 0;
	// inline asm
	shf.r.wrap.b32 %r10971, %r3108, %r39, %r3110;
	// inline asm
	bra.uni 	BB4_195;

BB4_149:
	setp.eq.s32	%p153, %r45, 17;
	@%p153 bra 	BB4_150;
	bra.uni 	BB4_195;

BB4_150:
	mov.u32 	%r2766, 24;
	// inline asm
	shf.r.wrap.b32 %r10970, %r37, %r36, %r2766;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r38, %r37, %r2766;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r39, %r38, %r2766;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r10971, %r39, %r2766;
	// inline asm
	bra.uni 	BB4_187;

BB4_132:
	setp.eq.s32	%p165, %r45, 9;
	@%p165 bra 	BB4_133;
	bra.uni 	BB4_195;

BB4_133:
	mov.u32 	%r2922, 24;
	// inline asm
	shf.r.wrap.b32 %r10970, %r43, %r42, %r2922;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r36, %r43, %r2922;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r37, %r36, %r2922;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r38, %r37, %r2922;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r39, %r38, %r2922;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r10971, %r39, %r2922;
	// inline asm
	mov.u32 	%r10972, %r10971;
	bra.uni 	BB4_195;

BB4_164:
	setp.eq.s32	%p142, %r45, 25;
	@%p142 bra 	BB4_165;
	bra.uni 	BB4_195;

BB4_165:
	mov.u32 	%r2642, 24;
	// inline asm
	shf.r.wrap.b32 %r10970, %r39, %r38, %r2642;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r10967, %r39, %r2642;
	// inline asm
	bra.uni 	BB4_169;

BB4_124:
	setp.eq.s32	%p171, %r45, 5;
	@%p171 bra 	BB4_125;
	bra.uni 	BB4_195;

BB4_125:
	mov.u32 	%r3012, 24;
	// inline asm
	shf.r.wrap.b32 %r10970, %r42, %r41, %r3012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r43, %r42, %r3012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r36, %r43, %r3012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r37, %r36, %r3012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r38, %r37, %r3012;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r39, %r38, %r3012;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r10971, %r39, %r3012;
	// inline asm
	bra.uni 	BB4_195;

BB4_156:
	setp.eq.s32	%p148, %r45, 21;
	@%p148 bra 	BB4_157;
	bra.uni 	BB4_195;

BB4_157:
	mov.u32 	%r2700, 24;
	// inline asm
	shf.r.wrap.b32 %r10970, %r38, %r37, %r2700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r39, %r38, %r2700;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r10967, %r39, %r2700;
	// inline asm
	bra.uni 	BB4_180;

BB4_139:
	setp.eq.s32	%p160, %r45, 13;
	@%p160 bra 	BB4_140;
	bra.uni 	BB4_195;

BB4_140:
	mov.u32 	%r2840, 24;
	// inline asm
	shf.r.wrap.b32 %r10970, %r36, %r43, %r2840;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r37, %r36, %r2840;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r38, %r37, %r2840;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r39, %r38, %r2840;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r10971, %r39, %r2840;
	// inline asm
	bra.uni 	BB4_144;

BB4_172:
	setp.eq.s32	%p137, %r45, 29;
	@%p137 bra 	BB4_173;
	bra.uni 	BB4_195;

BB4_173:
	mov.u32 	%r10967, 0;
	mov.u32 	%r2592, 24;
	// inline asm
	shf.r.wrap.b32 %r10970, %r10967, %r39, %r2592;
	// inline asm
	bra.uni 	BB4_177;

BB4_266:
	setp.eq.s32	%p225, %r45, 17;
	@%p225 bra 	BB4_267;
	bra.uni 	BB4_261;

BB4_267:
	mov.u32 	%r3364, 24;
	// inline asm
	shf.r.wrap.b32 %r43, %r37, %r36, %r3364;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r38, %r37, %r3364;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r39, %r38, %r3364;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r10828, %r10832, %r39, %r3364;
	// inline asm
	bra.uni 	BB4_301;

BB4_250:
	setp.eq.s32	%p237, %r45, 9;
	@%p237 bra 	BB4_251;
	bra.uni 	BB4_261;

BB4_251:
	mov.u32 	%r3520, 24;
	// inline asm
	shf.r.wrap.b32 %r3497, %r43, %r42, %r3520;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r36, %r43, %r3520;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r37, %r36, %r3520;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r38, %r37, %r3520;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3513, %r39, %r38, %r3520;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r10834, %r10832, %r39, %r3520;
	// inline asm
	mov.u32 	%r43, %r3497;
	mov.u32 	%r10833, %r10832;
	mov.u32 	%r39, %r3513;
	bra.uni 	BB4_315;

BB4_281:
	setp.eq.s32	%p214, %r45, 25;
	@%p214 bra 	BB4_282;
	bra.uni 	BB4_261;

BB4_282:
	mov.u32 	%r3240, 24;
	// inline asm
	shf.r.wrap.b32 %r43, %r39, %r38, %r3240;
	// inline asm
	mov.u32 	%r10828, 0;
	// inline asm
	shf.r.wrap.b32 %r10830, %r10828, %r39, %r3240;
	// inline asm
	bra.uni 	BB4_286;

BB4_242:
	setp.eq.s32	%p243, %r45, 5;
	@%p243 bra 	BB4_243;
	bra.uni 	BB4_261;

BB4_243:
	mov.u32 	%r3610, 24;
	// inline asm
	shf.r.wrap.b32 %r3583, %r42, %r41, %r3610;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r43, %r42, %r3610;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r36, %r43, %r3610;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r37, %r36, %r3610;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3599, %r38, %r37, %r3610;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10834, %r39, %r38, %r3610;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r10833, %r10832, %r39, %r3610;
	// inline asm
	mov.u32 	%r43, %r3583;
	mov.u32 	%r39, %r3599;
	bra.uni 	BB4_315;

BB4_273:
	setp.eq.s32	%p220, %r45, 21;
	@%p220 bra 	BB4_274;
	bra.uni 	BB4_261;

BB4_274:
	mov.u32 	%r3298, 24;
	// inline asm
	shf.r.wrap.b32 %r43, %r38, %r37, %r3298;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r39, %r38, %r3298;
	// inline asm
	mov.u32 	%r10828, 0;
	// inline asm
	shf.r.wrap.b32 %r10829, %r10828, %r39, %r3298;
	// inline asm
	bra.uni 	BB4_314;

BB4_257:
	setp.eq.s32	%p232, %r45, 13;
	@%p232 bra 	BB4_258;
	bra.uni 	BB4_261;

BB4_258:
	mov.u32 	%r3438, 24;
	// inline asm
	shf.r.wrap.b32 %r43, %r36, %r43, %r3438;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r37, %r36, %r3438;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r38, %r37, %r3438;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r39, %r38, %r3438;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r10832, %r39, %r3438;
	// inline asm
	bra.uni 	BB4_305;

BB4_289:
	setp.eq.s32	%p209, %r45, 29;
	@%p209 bra 	BB4_290;
	bra.uni 	BB4_261;

BB4_290:
	mov.u32 	%r10828, 0;
	mov.u32 	%r3190, 24;
	// inline asm
	shf.r.wrap.b32 %r43, %r10828, %r39, %r3190;
	// inline asm
	bra.uni 	BB4_313;

BB4_120:
	setp.eq.s32	%p174, %r45, 3;
	@%p174 bra 	BB4_121;
	bra.uni 	BB4_195;

BB4_121:
	mov.u32 	%r3046, 8;
	// inline asm
	shf.r.wrap.b32 %r10970, %r41, %r40, %r3046;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r42, %r41, %r3046;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r43, %r42, %r3046;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r36, %r43, %r3046;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r37, %r36, %r3046;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r38, %r37, %r3046;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r39, %r38, %r3046;
	// inline asm
	mov.u32 	%r3044, 0;
	// inline asm
	shf.r.wrap.b32 %r10971, %r3044, %r39, %r3046;
	// inline asm
	bra.uni 	BB4_195;

BB4_152:
	setp.eq.s32	%p151, %r45, 19;
	@%p151 bra 	BB4_153;
	bra.uni 	BB4_195;

BB4_153:
	mov.u32 	%r2726, 8;
	// inline asm
	shf.r.wrap.b32 %r10970, %r37, %r36, %r2726;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r38, %r37, %r2726;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r39, %r38, %r2726;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r10971, %r39, %r2726;
	// inline asm

BB4_187:
	mov.u32 	%r10972, %r10971;
	mov.u32 	%r10973, %r10971;
	mov.u32 	%r10974, %r10971;
	bra.uni 	BB4_195;

BB4_135:
	setp.eq.s32	%p163, %r45, 11;
	@%p163 bra 	BB4_136;
	bra.uni 	BB4_195;

BB4_136:
	mov.u32 	%r2870, 8;
	// inline asm
	shf.r.wrap.b32 %r10970, %r43, %r42, %r2870;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r36, %r43, %r2870;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r37, %r36, %r2870;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r38, %r37, %r2870;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r39, %r38, %r2870;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r10971, %r39, %r2870;
	// inline asm
	mov.u32 	%r10972, %r10971;
	bra.uni 	BB4_195;

BB4_167:
	setp.eq.s32	%p140, %r45, 27;
	@%p140 bra 	BB4_168;
	bra.uni 	BB4_195;

BB4_168:
	mov.u32 	%r2614, 8;
	// inline asm
	shf.r.wrap.b32 %r10970, %r39, %r38, %r2614;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r10967, %r39, %r2614;
	// inline asm

BB4_169:
	mov.u32 	%r10968, %r10967;
	bra.uni 	BB4_180;

BB4_127:
	setp.eq.s32	%p169, %r45, 7;
	@%p169 bra 	BB4_128;
	bra.uni 	BB4_195;

BB4_128:
	mov.u32 	%r2954, 8;
	// inline asm
	shf.r.wrap.b32 %r10970, %r42, %r41, %r2954;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r43, %r42, %r2954;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r36, %r43, %r2954;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r37, %r36, %r2954;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r38, %r37, %r2954;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r39, %r38, %r2954;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r10971, %r39, %r2954;
	// inline asm
	bra.uni 	BB4_195;

BB4_159:
	setp.eq.s32	%p146, %r45, 23;
	@%p146 bra 	BB4_160;
	bra.uni 	BB4_195;

BB4_160:
	mov.u32 	%r2666, 8;
	// inline asm
	shf.r.wrap.b32 %r10970, %r38, %r37, %r2666;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r39, %r38, %r2666;
	// inline asm
	mov.u32 	%r10967, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r10967, %r39, %r2666;
	// inline asm
	bra.uni 	BB4_180;

BB4_142:
	setp.eq.s32	%p158, %r45, 15;
	@%p158 bra 	BB4_143;
	bra.uni 	BB4_195;

BB4_143:
	mov.u32 	%r2794, 8;
	// inline asm
	shf.r.wrap.b32 %r10970, %r36, %r43, %r2794;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r37, %r36, %r2794;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r38, %r37, %r2794;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r39, %r38, %r2794;
	// inline asm
	mov.u32 	%r10971, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r10971, %r39, %r2794;
	// inline asm

BB4_144:
	mov.u32 	%r10972, %r10971;
	mov.u32 	%r10973, %r10971;
	bra.uni 	BB4_195;

BB4_175:
	setp.ne.s32	%p135, %r45, 31;
	@%p135 bra 	BB4_195;

	mov.u32 	%r10967, 0;
	mov.u32 	%r2570, 8;
	// inline asm
	shf.r.wrap.b32 %r10970, %r10967, %r39, %r2570;
	// inline asm

BB4_177:
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;

BB4_180:
	mov.u32 	%r10971, %r10967;
	mov.u32 	%r10972, %r10967;
	mov.u32 	%r10973, %r10967;
	mov.u32 	%r10974, %r10967;

BB4_195:
	and.b32  	%r3112, %r27, 3;
	shl.b32 	%r3113, %r3112, 3;
	mov.u32 	%r3114, -1;
	shl.b32 	%r211, %r3114, %r3113;
	shr.u32 	%r3111, %r27, 2;
	setp.gt.s32	%p177, %r3111, 3;
	@%p177 bra 	BB4_203;

	setp.gt.s32	%p183, %r3111, 1;
	@%p183 bra 	BB4_200;

	setp.eq.s32	%p186, %r3111, 0;
	@%p186 bra 	BB4_214;
	bra.uni 	BB4_198;

BB4_214:
	and.b32  	%r10971, %r10971, %r211;
	bra.uni 	BB4_215;

BB4_203:
	setp.gt.s32	%p178, %r3111, 5;
	@%p178 bra 	BB4_207;

	setp.eq.s32	%p181, %r3111, 4;
	@%p181 bra 	BB4_212;
	bra.uni 	BB4_205;

BB4_212:
	and.b32  	%r10967, %r10967, %r211;
	mov.u32 	%r10971, 0;
	mov.u32 	%r10972, %r10971;
	mov.u32 	%r10973, %r10971;
	mov.u32 	%r10974, %r10971;
	bra.uni 	BB4_215;

BB4_200:
	setp.eq.s32	%p184, %r3111, 2;
	@%p184 bra 	BB4_213;
	bra.uni 	BB4_201;

BB4_213:
	and.b32  	%r10973, %r10973, %r211;
	mov.u32 	%r10971, 0;
	mov.u32 	%r10972, %r10971;
	bra.uni 	BB4_215;

BB4_207:
	setp.eq.s32	%p179, %r3111, 6;
	@%p179 bra 	BB4_210;
	bra.uni 	BB4_208;

BB4_210:
	and.b32  	%r10969, %r10969, %r211;
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	bra.uni 	BB4_211;

BB4_198:
	setp.eq.s32	%p187, %r3111, 1;
	@%p187 bra 	BB4_199;
	bra.uni 	BB4_215;

BB4_199:
	and.b32  	%r10972, %r10972, %r211;
	mov.u32 	%r10971, 0;
	bra.uni 	BB4_215;

BB4_205:
	setp.eq.s32	%p182, %r3111, 5;
	@%p182 bra 	BB4_206;
	bra.uni 	BB4_215;

BB4_206:
	and.b32  	%r10968, %r10968, %r211;
	mov.u32 	%r10967, 0;
	bra.uni 	BB4_211;

BB4_201:
	setp.eq.s32	%p185, %r3111, 3;
	@%p185 bra 	BB4_202;
	bra.uni 	BB4_215;

BB4_202:
	and.b32  	%r10974, %r10974, %r211;
	mov.u32 	%r10971, 0;
	mov.u32 	%r10972, %r10971;
	mov.u32 	%r10973, %r10971;
	bra.uni 	BB4_215;

BB4_208:
	setp.ne.s32	%p180, %r3111, 7;
	@%p180 bra 	BB4_215;

	and.b32  	%r10970, %r10970, %r211;
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;

BB4_211:
	mov.u32 	%r10971, %r10967;
	mov.u32 	%r10972, %r10967;
	mov.u32 	%r10973, %r10967;
	mov.u32 	%r10974, %r10967;

BB4_215:
	or.b32  	%r10963, %r10971, %r39;
	or.b32  	%r10964, %r10972, %r38;
	or.b32  	%r10965, %r10973, %r37;
	or.b32  	%r10966, %r10974, %r36;
	or.b32  	%r10959, %r10967, %r43;
	or.b32  	%r10960, %r10968, %r42;
	or.b32  	%r10961, %r10969, %r41;
	or.b32  	%r10962, %r10970, %r40;
	bra.uni 	BB4_1015;

BB4_269:
	setp.eq.s32	%p223, %r45, 19;
	@%p223 bra 	BB4_270;
	bra.uni 	BB4_261;

BB4_270:
	mov.u32 	%r3324, 8;
	// inline asm
	shf.r.wrap.b32 %r43, %r37, %r36, %r3324;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r38, %r37, %r3324;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r39, %r38, %r3324;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r10828, %r10832, %r39, %r3324;
	// inline asm

BB4_301:
	mov.u32 	%r10833, %r10832;
	mov.u32 	%r10834, %r10832;
	mov.u32 	%r39, %r10832;
	bra.uni 	BB4_315;

BB4_253:
	setp.eq.s32	%p235, %r45, 11;
	@%p235 bra 	BB4_254;
	bra.uni 	BB4_261;

BB4_254:
	mov.u32 	%r3468, 8;
	// inline asm
	shf.r.wrap.b32 %r3445, %r43, %r42, %r3468;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r36, %r43, %r3468;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r37, %r36, %r3468;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r38, %r37, %r3468;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3461, %r39, %r38, %r3468;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r10834, %r10832, %r39, %r3468;
	// inline asm
	mov.u32 	%r43, %r3445;
	mov.u32 	%r10833, %r10832;
	mov.u32 	%r39, %r3461;
	bra.uni 	BB4_315;

BB4_284:
	setp.eq.s32	%p212, %r45, 27;
	@%p212 bra 	BB4_285;
	bra.uni 	BB4_261;

BB4_285:
	mov.u32 	%r3212, 8;
	// inline asm
	shf.r.wrap.b32 %r43, %r39, %r38, %r3212;
	// inline asm
	mov.u32 	%r10828, 0;
	// inline asm
	shf.r.wrap.b32 %r10830, %r10828, %r39, %r3212;
	// inline asm

BB4_286:
	mov.u32 	%r10829, %r10828;
	bra.uni 	BB4_314;

BB4_245:
	setp.eq.s32	%p241, %r45, 7;
	@%p241 bra 	BB4_246;
	bra.uni 	BB4_261;

BB4_246:
	mov.u32 	%r3552, 8;
	// inline asm
	shf.r.wrap.b32 %r3525, %r42, %r41, %r3552;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r43, %r42, %r3552;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r36, %r43, %r3552;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r37, %r36, %r3552;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3541, %r38, %r37, %r3552;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10834, %r39, %r38, %r3552;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r10833, %r10832, %r39, %r3552;
	// inline asm
	mov.u32 	%r43, %r3525;
	mov.u32 	%r39, %r3541;
	bra.uni 	BB4_315;

BB4_276:
	setp.eq.s32	%p218, %r45, 23;
	@%p218 bra 	BB4_277;
	bra.uni 	BB4_261;

BB4_277:
	mov.u32 	%r3264, 8;
	// inline asm
	shf.r.wrap.b32 %r43, %r38, %r37, %r3264;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r39, %r38, %r3264;
	// inline asm
	mov.u32 	%r10828, 0;
	// inline asm
	shf.r.wrap.b32 %r10829, %r10828, %r39, %r3264;
	// inline asm
	bra.uni 	BB4_314;

BB4_260:
	setp.eq.s32	%p230, %r45, 15;
	@%p230 bra 	BB4_302;
	bra.uni 	BB4_261;

BB4_302:
	mov.u32 	%r3392, 8;
	// inline asm
	shf.r.wrap.b32 %r43, %r36, %r43, %r3392;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10830, %r37, %r36, %r3392;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10829, %r38, %r37, %r3392;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10828, %r39, %r38, %r3392;
	// inline asm
	mov.u32 	%r10832, 0;
	// inline asm
	shf.r.wrap.b32 %r39, %r10832, %r39, %r3392;
	// inline asm

BB4_305:
	mov.u32 	%r10833, %r10832;
	mov.u32 	%r10834, %r10832;
	bra.uni 	BB4_315;

BB4_292:
	setp.ne.s32	%p207, %r45, 30;
	@%p207 bra 	BB4_261;

	mov.u32 	%r10828, 0;
	mov.u32 	%r3179, 16;
	// inline asm
	shf.r.wrap.b32 %r43, %r10828, %r39, %r3179;
	// inline asm

BB4_313:
	mov.u32 	%r10829, %r10828;
	mov.u32 	%r10830, %r10828;

BB4_314:
	mov.u32 	%r10832, %r10828;
	mov.u32 	%r10833, %r10828;
	mov.u32 	%r10834, %r10828;
	mov.u32 	%r39, %r10828;
	bra.uni 	BB4_315;

BB4_261:
	mov.u32 	%r10828, %r43;
	mov.u32 	%r10829, %r42;
	mov.u32 	%r10830, %r41;
	mov.u32 	%r43, %r40;
	mov.u32 	%r10832, %r39;
	mov.u32 	%r10833, %r38;
	mov.u32 	%r10834, %r37;
	mov.u32 	%r39, %r36;

BB4_315:
	or.b32  	%r10963, %r10832, %r10971;
	or.b32  	%r10964, %r10833, %r10972;
	or.b32  	%r10965, %r10834, %r10973;
	or.b32  	%r10966, %r39, %r10974;
	or.b32  	%r10959, %r10828, %r10967;
	or.b32  	%r10960, %r10829, %r10968;
	or.b32  	%r10961, %r10830, %r10969;
	or.b32  	%r10962, %r43, %r10970;
	bra.uni 	BB4_1015;

BB4_789:
	setp.eq.s32	%p677, %r6677, 1;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p677 bra 	BB4_790;
	bra.uni 	BB4_868;

BB4_790:
	mov.u32 	%r7222, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r41, %r40, %r7222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r42, %r41, %r7222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r43, %r42, %r7222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r36, %r43, %r7222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r37, %r36, %r7222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r38, %r37, %r7222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r39, %r38, %r7222;
	// inline asm
	mov.u32 	%r7220, 0;
	// inline asm
	shf.r.wrap.b32 %r10970, %r7220, %r39, %r7222;
	// inline asm
	bra.uni 	BB4_868;

BB4_821:
	setp.eq.s32	%p654, %r6677, 17;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p654 bra 	BB4_822;
	bra.uni 	BB4_868;

BB4_822:
	mov.u32 	%r6878, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r37, %r36, %r6878;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r38, %r37, %r6878;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r39, %r38, %r6878;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r10970, %r39, %r6878;
	// inline asm
	bra.uni 	BB4_826;

BB4_804:
	setp.eq.s32	%p666, %r6677, 9;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p666 bra 	BB4_805;
	bra.uni 	BB4_868;

BB4_805:
	mov.u32 	%r7034, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r43, %r42, %r7034;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r36, %r43, %r7034;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r37, %r36, %r7034;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r38, %r37, %r7034;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r39, %r38, %r7034;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r10970, %r39, %r7034;
	// inline asm
	mov.u32 	%r10969, %r10970;
	bra.uni 	BB4_868;

BB4_837:
	setp.eq.s32	%p643, %r6677, 25;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p643 bra 	BB4_838;
	bra.uni 	BB4_868;

BB4_838:
	mov.u32 	%r6754, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r39, %r38, %r6754;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r10974, %r39, %r6754;
	// inline asm
	bra.uni 	BB4_842;

BB4_796:
	setp.eq.s32	%p672, %r6677, 5;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p672 bra 	BB4_797;
	bra.uni 	BB4_868;

BB4_797:
	mov.u32 	%r7124, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r42, %r41, %r7124;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r43, %r42, %r7124;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r36, %r43, %r7124;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r37, %r36, %r7124;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r38, %r37, %r7124;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r39, %r38, %r7124;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r10970, %r39, %r7124;
	// inline asm
	bra.uni 	BB4_868;

BB4_829:
	setp.eq.s32	%p649, %r6677, 21;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p649 bra 	BB4_830;
	bra.uni 	BB4_868;

BB4_830:
	mov.u32 	%r6812, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r38, %r37, %r6812;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r39, %r38, %r6812;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r10974, %r39, %r6812;
	// inline asm
	bra.uni 	BB4_843;

BB4_811:
	setp.eq.s32	%p661, %r6677, 13;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p661 bra 	BB4_812;
	bra.uni 	BB4_868;

BB4_812:
	mov.u32 	%r6952, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r36, %r43, %r6952;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r37, %r36, %r6952;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r38, %r37, %r6952;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r39, %r38, %r6952;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r10970, %r39, %r6952;
	// inline asm
	bra.uni 	BB4_816;

BB4_846:
	setp.eq.s32	%p638, %r6677, 29;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p638 bra 	BB4_847;
	bra.uni 	BB4_868;

BB4_847:
	mov.u32 	%r10974, 0;
	mov.u32 	%r6704, 24;
	// inline asm
	shf.r.wrap.b32 %r10971, %r10974, %r39, %r6704;
	// inline asm
	bra.uni 	BB4_851;

BB4_792:
	setp.eq.s32	%p675, %r6677, 3;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p675 bra 	BB4_793;
	bra.uni 	BB4_868;

BB4_793:
	mov.u32 	%r7158, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r41, %r40, %r7158;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r42, %r41, %r7158;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r43, %r42, %r7158;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r36, %r43, %r7158;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r37, %r36, %r7158;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r38, %r37, %r7158;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r39, %r38, %r7158;
	// inline asm
	mov.u32 	%r7156, 0;
	// inline asm
	shf.r.wrap.b32 %r10970, %r7156, %r39, %r7158;
	// inline asm
	bra.uni 	BB4_868;

BB4_824:
	setp.eq.s32	%p652, %r6677, 19;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p652 bra 	BB4_825;
	bra.uni 	BB4_868;

BB4_825:
	mov.u32 	%r6838, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r37, %r36, %r6838;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r38, %r37, %r6838;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r39, %r38, %r6838;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10974, %r10970, %r39, %r6838;
	// inline asm

BB4_826:
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10968, %r10970;
	mov.u32 	%r10967, %r10970;
	bra.uni 	BB4_868;

BB4_807:
	setp.eq.s32	%p664, %r6677, 11;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p664 bra 	BB4_808;
	bra.uni 	BB4_868;

BB4_808:
	mov.u32 	%r6982, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r43, %r42, %r6982;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r36, %r43, %r6982;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r37, %r36, %r6982;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r38, %r37, %r6982;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r39, %r38, %r6982;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10968, %r10970, %r39, %r6982;
	// inline asm
	mov.u32 	%r10969, %r10970;
	bra.uni 	BB4_868;

BB4_840:
	setp.eq.s32	%p641, %r6677, 27;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p641 bra 	BB4_841;
	bra.uni 	BB4_868;

BB4_841:
	mov.u32 	%r6726, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r39, %r38, %r6726;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10972, %r10974, %r39, %r6726;
	// inline asm

BB4_842:
	mov.u32 	%r10973, %r10974;
	bra.uni 	BB4_843;

BB4_799:
	setp.eq.s32	%p670, %r6677, 7;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p670 bra 	BB4_800;
	bra.uni 	BB4_868;

BB4_800:
	mov.u32 	%r7066, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r42, %r41, %r7066;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r43, %r42, %r7066;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r36, %r43, %r7066;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r37, %r36, %r7066;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r38, %r37, %r7066;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r39, %r38, %r7066;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10969, %r10970, %r39, %r7066;
	// inline asm
	bra.uni 	BB4_868;

BB4_832:
	setp.eq.s32	%p647, %r6677, 23;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p647 bra 	BB4_833;
	bra.uni 	BB4_868;

BB4_833:
	mov.u32 	%r6778, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r38, %r37, %r6778;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r39, %r38, %r6778;
	// inline asm
	mov.u32 	%r10974, 0;
	// inline asm
	shf.r.wrap.b32 %r10973, %r10974, %r39, %r6778;
	// inline asm
	bra.uni 	BB4_843;

BB4_814:
	setp.eq.s32	%p659, %r6677, 15;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p659 bra 	BB4_815;
	bra.uni 	BB4_868;

BB4_815:
	mov.u32 	%r6906, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r36, %r43, %r6906;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r37, %r36, %r6906;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r38, %r37, %r6906;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r39, %r38, %r6906;
	// inline asm
	mov.u32 	%r10970, 0;
	// inline asm
	shf.r.wrap.b32 %r10967, %r10970, %r39, %r6906;
	// inline asm

BB4_816:
	mov.u32 	%r10969, %r10970;
	mov.u32 	%r10968, %r10970;
	bra.uni 	BB4_868;

BB4_849:
	setp.ne.s32	%p636, %r6677, 31;
	mov.u32 	%r10974, %r10917;
	mov.u32 	%r10973, %r10917;
	mov.u32 	%r10972, %r10917;
	mov.u32 	%r10971, %r10917;
	mov.u32 	%r10970, %r10917;
	mov.u32 	%r10969, %r10917;
	mov.u32 	%r10968, %r10917;
	mov.u32 	%r10967, %r10917;
	@%p636 bra 	BB4_868;

	mov.u32 	%r10974, 0;
	mov.u32 	%r6682, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r10974, %r39, %r6682;
	// inline asm

BB4_851:
	mov.u32 	%r10973, %r10974;
	mov.u32 	%r10972, %r10974;

BB4_843:
	mov.u32 	%r10970, %r10974;
	mov.u32 	%r10969, %r10974;
	mov.u32 	%r10968, %r10974;
	mov.u32 	%r10967, %r10974;

BB4_868:
	// inline asm
	prmt.b32 %r7223, %r10971, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7225, %r10972, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7227, %r10973, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7229, %r10974, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7231, %r10967, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7233, %r10968, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7235, %r10969, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7237, %r10970, 0, 0x0123;
	// inline asm
	shr.u32 	%r7247, %r27, 2;
	setp.gt.s32	%p678, %r7247, 3;
	@%p678 bra 	BB4_876;

	setp.gt.s32	%p684, %r7247, 1;
	@%p684 bra 	BB4_873;

	setp.eq.s32	%p687, %r7247, 0;
	@%p687 bra 	BB4_886;
	bra.uni 	BB4_871;

BB4_886:
	and.b32  	%r7462, %r27, 3;
	mov.u32 	%r7463, 4;
	sub.s32 	%r7464, %r7463, %r7462;
	shl.b32 	%r7465, %r7464, 2;
	mov.u32 	%r7466, 1985229328;
	shr.u32 	%r7467, %r7466, %r7465;
	and.b32  	%r7461, %r7467, 65535;
	// inline asm
	prmt.b32 %r10924, %r7235, %r7237, %r7461;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r7233, %r7235, %r7461;
	// inline asm
	// inline asm
	prmt.b32 %r10922, %r7231, %r7233, %r7461;
	// inline asm
	// inline asm
	prmt.b32 %r10921, %r7229, %r7231, %r7461;
	// inline asm
	// inline asm
	prmt.b32 %r10920, %r7227, %r7229, %r7461;
	// inline asm
	// inline asm
	prmt.b32 %r10919, %r7225, %r7227, %r7461;
	// inline asm
	// inline asm
	prmt.b32 %r10918, %r7223, %r7225, %r7461;
	// inline asm
	mov.u32 	%r7459, 0;
	// inline asm
	prmt.b32 %r10917, %r7459, %r7223, %r7461;
	// inline asm
	bra.uni 	BB4_887;

BB4_876:
	setp.gt.s32	%p679, %r7247, 5;
	@%p679 bra 	BB4_880;

	setp.eq.s32	%p682, %r7247, 4;
	@%p682 bra 	BB4_884;
	bra.uni 	BB4_878;

BB4_884:
	and.b32  	%r7328, %r27, 3;
	mov.u32 	%r7329, 4;
	sub.s32 	%r7330, %r7329, %r7328;
	shl.b32 	%r7331, %r7330, 2;
	mov.u32 	%r7332, 1985229328;
	shr.u32 	%r7333, %r7332, %r7331;
	and.b32  	%r7323, %r7333, 65535;
	// inline asm
	prmt.b32 %r10924, %r7227, %r7229, %r7323;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r7225, %r7227, %r7323;
	// inline asm
	// inline asm
	prmt.b32 %r10922, %r7223, %r7225, %r7323;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10921, %r10917, %r7223, %r7323;
	// inline asm
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	bra.uni 	BB4_887;

BB4_873:
	setp.eq.s32	%p685, %r7247, 2;
	@%p685 bra 	BB4_885;
	bra.uni 	BB4_874;

BB4_885:
	and.b32  	%r7389, %r27, 3;
	mov.u32 	%r7390, 4;
	sub.s32 	%r7391, %r7390, %r7389;
	shl.b32 	%r7392, %r7391, 2;
	mov.u32 	%r7393, 1985229328;
	shr.u32 	%r7394, %r7393, %r7392;
	and.b32  	%r7386, %r7394, 65535;
	// inline asm
	prmt.b32 %r10924, %r7231, %r7233, %r7386;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r7229, %r7231, %r7386;
	// inline asm
	// inline asm
	prmt.b32 %r10922, %r7227, %r7229, %r7386;
	// inline asm
	// inline asm
	prmt.b32 %r10921, %r7225, %r7227, %r7386;
	// inline asm
	// inline asm
	prmt.b32 %r10920, %r7223, %r7225, %r7386;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10919, %r10917, %r7223, %r7386;
	// inline asm
	mov.u32 	%r10918, %r10917;
	bra.uni 	BB4_887;

BB4_880:
	setp.eq.s32	%p680, %r7247, 6;
	@%p680 bra 	BB4_883;
	bra.uni 	BB4_881;

BB4_883:
	and.b32  	%r7279, %r27, 3;
	mov.u32 	%r7280, 4;
	sub.s32 	%r7281, %r7280, %r7279;
	shl.b32 	%r7282, %r7281, 2;
	mov.u32 	%r7283, 1985229328;
	shr.u32 	%r7284, %r7283, %r7282;
	and.b32  	%r7272, %r7284, 65535;
	// inline asm
	prmt.b32 %r10924, %r7223, %r7225, %r7272;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10923, %r10917, %r7223, %r7272;
	// inline asm
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	mov.u32 	%r10921, %r10917;
	mov.u32 	%r10922, %r10917;
	bra.uni 	BB4_887;

BB4_871:
	setp.eq.s32	%p688, %r7247, 1;
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	mov.u32 	%r10921, %r10917;
	mov.u32 	%r10922, %r10917;
	mov.u32 	%r10923, %r10917;
	mov.u32 	%r10924, %r10917;
	@%p688 bra 	BB4_872;
	bra.uni 	BB4_887;

BB4_872:
	and.b32  	%r7424, %r27, 3;
	mov.u32 	%r7425, 4;
	sub.s32 	%r7426, %r7425, %r7424;
	shl.b32 	%r7427, %r7426, 2;
	mov.u32 	%r7428, 1985229328;
	shr.u32 	%r7429, %r7428, %r7427;
	and.b32  	%r7422, %r7429, 65535;
	// inline asm
	prmt.b32 %r10924, %r7233, %r7235, %r7422;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r7231, %r7233, %r7422;
	// inline asm
	// inline asm
	prmt.b32 %r10922, %r7229, %r7231, %r7422;
	// inline asm
	// inline asm
	prmt.b32 %r10921, %r7227, %r7229, %r7422;
	// inline asm
	// inline asm
	prmt.b32 %r10920, %r7225, %r7227, %r7422;
	// inline asm
	// inline asm
	prmt.b32 %r10919, %r7223, %r7225, %r7422;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10918, %r10917, %r7223, %r7422;
	// inline asm
	bra.uni 	BB4_887;

BB4_878:
	setp.eq.s32	%p683, %r7247, 5;
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	mov.u32 	%r10921, %r10917;
	mov.u32 	%r10922, %r10917;
	mov.u32 	%r10923, %r10917;
	mov.u32 	%r10924, %r10917;
	@%p683 bra 	BB4_879;
	bra.uni 	BB4_887;

BB4_879:
	and.b32  	%r7302, %r27, 3;
	mov.u32 	%r7303, 4;
	sub.s32 	%r7304, %r7303, %r7302;
	shl.b32 	%r7305, %r7304, 2;
	mov.u32 	%r7306, 1985229328;
	shr.u32 	%r7307, %r7306, %r7305;
	and.b32  	%r7296, %r7307, 65535;
	// inline asm
	prmt.b32 %r10924, %r7225, %r7227, %r7296;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r7223, %r7225, %r7296;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10922, %r10917, %r7223, %r7296;
	// inline asm
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	mov.u32 	%r10921, %r10917;
	bra.uni 	BB4_887;

BB4_874:
	setp.eq.s32	%p686, %r7247, 3;
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	mov.u32 	%r10921, %r10917;
	mov.u32 	%r10922, %r10917;
	mov.u32 	%r10923, %r10917;
	mov.u32 	%r10924, %r10917;
	@%p686 bra 	BB4_875;
	bra.uni 	BB4_887;

BB4_875:
	and.b32  	%r7357, %r27, 3;
	mov.u32 	%r7358, 4;
	sub.s32 	%r7359, %r7358, %r7357;
	shl.b32 	%r7360, %r7359, 2;
	mov.u32 	%r7361, 1985229328;
	shr.u32 	%r7362, %r7361, %r7360;
	and.b32  	%r7353, %r7362, 65535;
	// inline asm
	prmt.b32 %r10924, %r7229, %r7231, %r7353;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r7227, %r7229, %r7353;
	// inline asm
	// inline asm
	prmt.b32 %r10922, %r7225, %r7227, %r7353;
	// inline asm
	// inline asm
	prmt.b32 %r10921, %r7223, %r7225, %r7353;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10920, %r10917, %r7223, %r7353;
	// inline asm
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	bra.uni 	BB4_887;

BB4_881:
	setp.ne.s32	%p681, %r7247, 7;
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	mov.u32 	%r10921, %r10917;
	mov.u32 	%r10922, %r10917;
	mov.u32 	%r10923, %r10917;
	mov.u32 	%r10924, %r10917;
	@%p681 bra 	BB4_887;

	and.b32  	%r7259, %r27, 3;
	mov.u32 	%r7260, 4;
	sub.s32 	%r7261, %r7260, %r7259;
	shl.b32 	%r7262, %r7261, 2;
	mov.u32 	%r7263, 1985229328;
	shr.u32 	%r7264, %r7263, %r7262;
	and.b32  	%r7251, %r7264, 65535;
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10924, %r10917, %r7223, %r7251;
	// inline asm
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	mov.u32 	%r10921, %r10917;
	mov.u32 	%r10922, %r10917;
	mov.u32 	%r10923, %r10917;

BB4_887:
	or.b32  	%r10963, %r10917, %r39;
	or.b32  	%r10964, %r10918, %r38;
	or.b32  	%r10965, %r10919, %r37;
	or.b32  	%r10966, %r10920, %r36;
	or.b32  	%r10959, %r10921, %r43;
	or.b32  	%r10960, %r10922, %r42;
	or.b32  	%r10961, %r10923, %r41;
	or.b32  	%r10962, %r10924, %r40;
	bra.uni 	BB4_1015;

BB4_4:
	mov.u32 	%r43, %r10959;
	mov.u32 	%r42, %r10960;
	mov.u32 	%r41, %r10961;
	mov.u32 	%r40, %r10962;
	mov.u32 	%r39, %r10963;
	mov.u32 	%r38, %r10964;
	mov.u32 	%r37, %r10965;
	mov.u32 	%r36, %r10966;
	mov.u32 	%r27, %r10975;
	shr.u32 	%r44, %r10785, 8;
	bfe.u32 	%r45, %r10785, 8, 8;
	shr.u32 	%r46, %r10785, 16;
	bfe.u32 	%r47, %r10785, 16, 8;
	add.u64 	%rd120, %SP, 32;
	cvta.to.local.u64 	%rd84, %rd120;
	add.u64 	%rd121, %SP, 0;
	cvta.to.local.u64 	%rd85, %rd121;
	and.b32  	%r1603, %r44, 252;
	cvt.u64.u32	%rd122, %r1603;
	add.s64 	%rd86, %rd85, %rd122;
	add.s64 	%rd87, %rd84, %rd122;
	add.s32 	%r10975, %r27, -1;
	mul.wide.u32 	%rd123, %r10975, 64;
	mov.u64 	%rd124, c_append_helper;
	add.s64 	%rd88, %rd124, %rd123;
	and.b32  	%r1602, %r10785, 255;
	setp.gt.s32	%p4, %r1602, 93;
	@%p4 bra 	BB4_57;

	setp.gt.s32	%p32, %r1602, 68;
	@%p32 bra 	BB4_33;

	setp.gt.s32	%p46, %r1602, 44;
	@%p46 bra 	BB4_19;

	setp.gt.s32	%p53, %r1602, 41;
	@%p53 bra 	BB4_15;

	setp.eq.s32	%p57, %r1602, 36;
	@%p57 bra 	BB4_787;
	bra.uni 	BB4_9;

BB4_787:
	add.s32 	%r10975, %r27, 1;
	setp.gt.u32	%p629, %r10975, 31;
	@%p629 bra 	BB4_108;

	mov.u32 	%r6646, 64;
	prmt.b32 	%r6647, %r45, %r45, %r6646;
	mov.u32 	%r6648, 1040;
	prmt.b32 	%r6649, %r6647, %r45, %r6648;
	mov.u32 	%r6650, 16912;
	prmt.b32 	%r6651, %r6649, %r45, %r6650;
	mul.wide.u32 	%rd184, %r27, 64;
	add.s64 	%rd186, %rd124, %rd184;
	ld.const.u32 	%r6652, [%rd186];
	and.b32  	%r6653, %r6652, %r6651;
	or.b32  	%r10963, %r6653, %r39;
	ld.const.u32 	%r6654, [%rd186+4];
	and.b32  	%r6655, %r6654, %r6651;
	or.b32  	%r10964, %r6655, %r38;
	ld.const.u32 	%r6656, [%rd186+8];
	and.b32  	%r6657, %r6656, %r6651;
	or.b32  	%r10965, %r6657, %r37;
	ld.const.u32 	%r6658, [%rd186+12];
	and.b32  	%r6659, %r6658, %r6651;
	or.b32  	%r10966, %r6659, %r36;
	ld.const.u32 	%r6660, [%rd186+16];
	and.b32  	%r6661, %r6660, %r6651;
	or.b32  	%r10959, %r6661, %r43;
	ld.const.u32 	%r6662, [%rd186+20];
	and.b32  	%r6663, %r6662, %r6651;
	or.b32  	%r10960, %r6663, %r42;
	ld.const.u32 	%r6664, [%rd186+24];
	and.b32  	%r6665, %r6664, %r6651;
	or.b32  	%r10961, %r6665, %r41;
	ld.const.u32 	%r6666, [%rd186+28];
	and.b32  	%r6667, %r6666, %r6651;
	or.b32  	%r10962, %r6667, %r40;
	bra.uni 	BB4_1015;

BB4_57:
	setp.gt.s32	%p5, %r1602, 112;
	@%p5 bra 	BB4_82;

	setp.gt.s32	%p19, %r1602, 104;
	@%p19 bra 	BB4_73;

	setp.gt.s32	%p26, %r1602, 99;
	@%p26 bra 	BB4_63;

	setp.eq.s32	%p30, %r1602, 94;
	@%p30 bra 	BB4_785;
	bra.uni 	BB4_61;

BB4_785:
	add.s32 	%r10975, %r27, 1;
	setp.gt.u32	%p628, %r10975, 31;
	@%p628 bra 	BB4_108;

	mov.u32 	%r6645, 24;
	// inline asm
	shf.r.wrap.b32 %r10962, %r41, %r40, %r6645;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10961, %r42, %r41, %r6645;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10960, %r43, %r42, %r6645;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r36, %r43, %r6645;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10966, %r37, %r36, %r6645;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r38, %r37, %r6645;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r39, %r38, %r6645;
	// inline asm
	mov.u32 	%r6643, 0;
	// inline asm
	shf.r.wrap.b32 %r6642, %r6643, %r39, %r6645;
	// inline asm
	or.b32  	%r10963, %r6642, %r45;
	bra.uni 	BB4_1015;

BB4_33:
	setp.gt.s32	%p33, %r1602, 83;
	@%p33 bra 	BB4_44;

	setp.gt.s32	%p40, %r1602, 75;
	@%p40 bra 	BB4_39;

	setp.eq.s32	%p44, %r1602, 69;
	@%p44 bra 	BB4_110;
	bra.uni 	BB4_36;

BB4_110:
	setp.eq.s32	%p59, %r27, 0;
	mov.u32 	%r10975, 0;
	@%p59 bra 	BB4_111;

	mov.u32 	%r1720, 0;
	mov.u32 	%r1733, 8;
	// inline asm
	bfe.u32 %r1606, %r39, %r1720, %r1733;
	// inline asm
	setp.eq.s32	%p60, %r1606, 32;
	selp.u32	%r1734, 1, 0, %p60;
	// inline asm
	bfe.u32 %r1610, %r39, %r1733, %r1733;
	// inline asm
	setp.eq.s32	%p61, %r1610, 32;
	or.b32  	%r1735, %r1734, 2;
	selp.b32	%r1736, %r1735, %r1734, %p61;
	mov.u32 	%r1728, 16;
	// inline asm
	bfe.u32 %r1614, %r39, %r1728, %r1733;
	// inline asm
	setp.eq.s32	%p62, %r1614, 32;
	or.b32  	%r1737, %r1736, 4;
	selp.b32	%r1738, %r1737, %r1736, %p62;
	mov.u32 	%r1732, 24;
	// inline asm
	bfe.u32 %r1618, %r39, %r1732, %r1733;
	// inline asm
	setp.eq.s32	%p63, %r1618, 32;
	or.b32  	%r1739, %r1738, 8;
	selp.b32	%r48, %r1739, %r1738, %p63;
	// inline asm
	bfe.u32 %r1622, %r38, %r1720, %r1733;
	// inline asm
	setp.eq.s32	%p64, %r1622, 32;
	selp.u32	%r1740, 1, 0, %p64;
	// inline asm
	bfe.u32 %r1626, %r38, %r1733, %r1733;
	// inline asm
	setp.eq.s32	%p65, %r1626, 32;
	or.b32  	%r1741, %r1740, 2;
	selp.b32	%r1742, %r1741, %r1740, %p65;
	// inline asm
	bfe.u32 %r1630, %r38, %r1728, %r1733;
	// inline asm
	setp.eq.s32	%p66, %r1630, 32;
	or.b32  	%r1743, %r1742, 4;
	selp.b32	%r1744, %r1743, %r1742, %p66;
	// inline asm
	bfe.u32 %r1634, %r38, %r1732, %r1733;
	// inline asm
	setp.eq.s32	%p67, %r1634, 32;
	or.b32  	%r1745, %r1744, 8;
	selp.b32	%r49, %r1745, %r1744, %p67;
	// inline asm
	bfe.u32 %r1638, %r37, %r1720, %r1733;
	// inline asm
	setp.eq.s32	%p68, %r1638, 32;
	selp.u32	%r1746, 1, 0, %p68;
	// inline asm
	bfe.u32 %r1642, %r37, %r1733, %r1733;
	// inline asm
	setp.eq.s32	%p69, %r1642, 32;
	or.b32  	%r1747, %r1746, 2;
	selp.b32	%r1748, %r1747, %r1746, %p69;
	// inline asm
	bfe.u32 %r1646, %r37, %r1728, %r1733;
	// inline asm
	setp.eq.s32	%p70, %r1646, 32;
	or.b32  	%r1749, %r1748, 4;
	selp.b32	%r1750, %r1749, %r1748, %p70;
	// inline asm
	bfe.u32 %r1650, %r37, %r1732, %r1733;
	// inline asm
	setp.eq.s32	%p71, %r1650, 32;
	or.b32  	%r1751, %r1750, 8;
	selp.b32	%r50, %r1751, %r1750, %p71;
	// inline asm
	bfe.u32 %r1654, %r36, %r1720, %r1733;
	// inline asm
	setp.eq.s32	%p72, %r1654, 32;
	selp.u32	%r1752, 1, 0, %p72;
	// inline asm
	bfe.u32 %r1658, %r36, %r1733, %r1733;
	// inline asm
	setp.eq.s32	%p73, %r1658, 32;
	or.b32  	%r1753, %r1752, 2;
	selp.b32	%r1754, %r1753, %r1752, %p73;
	// inline asm
	bfe.u32 %r1662, %r36, %r1728, %r1733;
	// inline asm
	setp.eq.s32	%p74, %r1662, 32;
	or.b32  	%r1755, %r1754, 4;
	selp.b32	%r1756, %r1755, %r1754, %p74;
	// inline asm
	bfe.u32 %r1666, %r36, %r1732, %r1733;
	// inline asm
	setp.eq.s32	%p75, %r1666, 32;
	or.b32  	%r1757, %r1756, 8;
	selp.b32	%r51, %r1757, %r1756, %p75;
	// inline asm
	bfe.u32 %r1670, %r43, %r1720, %r1733;
	// inline asm
	setp.eq.s32	%p76, %r1670, 32;
	selp.u32	%r1758, 1, 0, %p76;
	// inline asm
	bfe.u32 %r1674, %r43, %r1733, %r1733;
	// inline asm
	setp.eq.s32	%p77, %r1674, 32;
	or.b32  	%r1759, %r1758, 2;
	selp.b32	%r1760, %r1759, %r1758, %p77;
	// inline asm
	bfe.u32 %r1678, %r43, %r1728, %r1733;
	// inline asm
	setp.eq.s32	%p78, %r1678, 32;
	or.b32  	%r1761, %r1760, 4;
	selp.b32	%r1762, %r1761, %r1760, %p78;
	// inline asm
	bfe.u32 %r1682, %r43, %r1732, %r1733;
	// inline asm
	setp.eq.s32	%p79, %r1682, 32;
	or.b32  	%r1763, %r1762, 8;
	selp.b32	%r1764, %r1763, %r1762, %p79;
	// inline asm
	bfe.u32 %r1686, %r42, %r1720, %r1733;
	// inline asm
	setp.eq.s32	%p80, %r1686, 32;
	selp.u32	%r1765, 1, 0, %p80;
	// inline asm
	bfe.u32 %r1690, %r42, %r1733, %r1733;
	// inline asm
	setp.eq.s32	%p81, %r1690, 32;
	or.b32  	%r1766, %r1765, 2;
	selp.b32	%r1767, %r1766, %r1765, %p81;
	// inline asm
	bfe.u32 %r1694, %r42, %r1728, %r1733;
	// inline asm
	setp.eq.s32	%p82, %r1694, 32;
	or.b32  	%r1768, %r1767, 4;
	selp.b32	%r1769, %r1768, %r1767, %p82;
	// inline asm
	bfe.u32 %r1698, %r42, %r1732, %r1733;
	// inline asm
	setp.eq.s32	%p83, %r1698, 32;
	or.b32  	%r1770, %r1769, 8;
	selp.b32	%r1771, %r1770, %r1769, %p83;
	// inline asm
	bfe.u32 %r1702, %r41, %r1720, %r1733;
	// inline asm
	setp.eq.s32	%p84, %r1702, 32;
	selp.u32	%r1772, 1, 0, %p84;
	// inline asm
	bfe.u32 %r1706, %r41, %r1733, %r1733;
	// inline asm
	setp.eq.s32	%p85, %r1706, 32;
	or.b32  	%r1773, %r1772, 2;
	selp.b32	%r1774, %r1773, %r1772, %p85;
	// inline asm
	bfe.u32 %r1710, %r41, %r1728, %r1733;
	// inline asm
	setp.eq.s32	%p86, %r1710, 32;
	or.b32  	%r1775, %r1774, 4;
	selp.b32	%r1776, %r1775, %r1774, %p86;
	// inline asm
	bfe.u32 %r1714, %r41, %r1732, %r1733;
	// inline asm
	setp.eq.s32	%p87, %r1714, 32;
	or.b32  	%r1777, %r1776, 8;
	selp.b32	%r1778, %r1777, %r1776, %p87;
	// inline asm
	bfe.u32 %r1718, %r40, %r1720, %r1733;
	// inline asm
	setp.eq.s32	%p88, %r1718, 32;
	selp.u32	%r1779, 1, 0, %p88;
	// inline asm
	bfe.u32 %r1722, %r40, %r1733, %r1733;
	// inline asm
	setp.eq.s32	%p89, %r1722, 32;
	or.b32  	%r1780, %r1779, 2;
	selp.b32	%r1781, %r1780, %r1779, %p89;
	// inline asm
	bfe.u32 %r1726, %r40, %r1728, %r1733;
	// inline asm
	setp.eq.s32	%p90, %r1726, 32;
	or.b32  	%r1782, %r1781, 4;
	selp.b32	%r1783, %r1782, %r1781, %p90;
	// inline asm
	bfe.u32 %r1730, %r40, %r1732, %r1733;
	// inline asm
	setp.eq.s32	%p91, %r1730, 32;
	or.b32  	%r1784, %r1783, 8;
	selp.b32	%r1785, %r1784, %r1783, %p91;
	and.b32  	%r1786, %r39, 1077952576;
	shr.u32 	%r1787, %r1786, 1;
	and.b32  	%r1788, %r39, -2139062144;
	shr.u32 	%r1789, %r1788, 2;
	not.b32 	%r1790, %r1789;
	and.b32  	%r1791, %r1787, %r1790;
	and.b32  	%r1792, %r39, 522133279;
	add.s32 	%r1793, %r1792, 522133279;
	mov.u32 	%r1794, -84215046;
	sub.s32 	%r1795, %r1794, %r1792;
	and.b32  	%r1796, %r1791, %r1795;
	and.b32  	%r1797, %r1796, %r1793;
	or.b32  	%r52, %r1797, %r39;
	and.b32  	%r1798, %r38, 1077952576;
	shr.u32 	%r1799, %r1798, 1;
	and.b32  	%r1800, %r38, -2139062144;
	shr.u32 	%r1801, %r1800, 2;
	not.b32 	%r1802, %r1801;
	and.b32  	%r1803, %r1799, %r1802;
	and.b32  	%r1804, %r38, 522133279;
	add.s32 	%r1805, %r1804, 522133279;
	sub.s32 	%r1806, %r1794, %r1804;
	and.b32  	%r1807, %r1803, %r1806;
	and.b32  	%r1808, %r1807, %r1805;
	or.b32  	%r10964, %r1808, %r38;
	and.b32  	%r1809, %r37, 1077952576;
	shr.u32 	%r1810, %r1809, 1;
	and.b32  	%r1811, %r37, -2139062144;
	shr.u32 	%r1812, %r1811, 2;
	not.b32 	%r1813, %r1812;
	and.b32  	%r1814, %r1810, %r1813;
	and.b32  	%r1815, %r37, 522133279;
	add.s32 	%r1816, %r1815, 522133279;
	sub.s32 	%r1817, %r1794, %r1815;
	and.b32  	%r1818, %r1814, %r1817;
	and.b32  	%r1819, %r1818, %r1816;
	or.b32  	%r10965, %r1819, %r37;
	and.b32  	%r1820, %r36, 1077952576;
	shr.u32 	%r1821, %r1820, 1;
	and.b32  	%r1822, %r36, -2139062144;
	shr.u32 	%r1823, %r1822, 2;
	not.b32 	%r1824, %r1823;
	and.b32  	%r1825, %r1821, %r1824;
	and.b32  	%r1826, %r36, 522133279;
	add.s32 	%r1827, %r1826, 522133279;
	sub.s32 	%r1828, %r1794, %r1826;
	and.b32  	%r1829, %r1825, %r1828;
	and.b32  	%r1830, %r1829, %r1827;
	or.b32  	%r10966, %r1830, %r36;
	and.b32  	%r1831, %r43, 1077952576;
	shr.u32 	%r1832, %r1831, 1;
	and.b32  	%r1833, %r43, -2139062144;
	shr.u32 	%r1834, %r1833, 2;
	not.b32 	%r1835, %r1834;
	and.b32  	%r1836, %r1832, %r1835;
	and.b32  	%r1837, %r43, 522133279;
	add.s32 	%r1838, %r1837, 522133279;
	sub.s32 	%r1839, %r1794, %r1837;
	and.b32  	%r1840, %r1836, %r1839;
	and.b32  	%r1841, %r1840, %r1838;
	or.b32  	%r10959, %r1841, %r43;
	and.b32  	%r1842, %r42, 1077952576;
	shr.u32 	%r1843, %r1842, 1;
	and.b32  	%r1844, %r42, -2139062144;
	shr.u32 	%r1845, %r1844, 2;
	not.b32 	%r1846, %r1845;
	and.b32  	%r1847, %r1843, %r1846;
	and.b32  	%r1848, %r42, 522133279;
	add.s32 	%r1849, %r1848, 522133279;
	sub.s32 	%r1850, %r1794, %r1848;
	and.b32  	%r1851, %r1847, %r1850;
	and.b32  	%r1852, %r1851, %r1849;
	or.b32  	%r10960, %r1852, %r42;
	and.b32  	%r1853, %r41, 1077952576;
	shr.u32 	%r1854, %r1853, 1;
	and.b32  	%r1855, %r41, -2139062144;
	shr.u32 	%r1856, %r1855, 2;
	not.b32 	%r1857, %r1856;
	and.b32  	%r1858, %r1854, %r1857;
	and.b32  	%r1859, %r41, 522133279;
	add.s32 	%r1860, %r1859, 522133279;
	sub.s32 	%r1861, %r1794, %r1859;
	and.b32  	%r1862, %r1858, %r1861;
	and.b32  	%r1863, %r1862, %r1860;
	or.b32  	%r10961, %r1863, %r41;
	and.b32  	%r1864, %r40, 1077952576;
	shr.u32 	%r1865, %r1864, 1;
	and.b32  	%r1866, %r40, -2139062144;
	shr.u32 	%r1867, %r1866, 2;
	not.b32 	%r1868, %r1867;
	and.b32  	%r1869, %r1865, %r1868;
	and.b32  	%r1870, %r40, 522133279;
	add.s32 	%r1871, %r1870, 522133279;
	sub.s32 	%r1872, %r1794, %r1870;
	and.b32  	%r1873, %r1869, %r1872;
	and.b32  	%r1874, %r1873, %r1871;
	or.b32  	%r10962, %r1874, %r40;
	and.b32  	%r1875, %r52, 64;
	shr.u32 	%r1876, %r1875, 1;
	and.b32  	%r1877, %r52, 128;
	shr.u32 	%r1878, %r1877, 2;
	not.b32 	%r1879, %r1878;
	and.b32  	%r1880, %r1876, %r1879;
	and.b32  	%r60, %r52, 522133279;
	add.s32 	%r1881, %r60, 31;
	sub.s32 	%r61, %r1794, %r60;
	and.b32  	%r1882, %r1880, %r61;
	and.b32  	%r1883, %r1882, %r1881;
	not.b32 	%r1884, %r1883;
	or.b32  	%r1885, %r1884, -33;
	and.b32  	%r10963, %r1885, %r52;
	add.s32 	%r1886, %r49, %r48;
	add.s32 	%r1887, %r1886, %r50;
	add.s32 	%r1888, %r1887, %r51;
	add.s32 	%r1889, %r1888, %r1764;
	add.s32 	%r1890, %r1889, %r1771;
	add.s32 	%r1891, %r1890, %r1778;
	neg.s32 	%r1892, %r1785;
	setp.eq.s32	%p92, %r1891, %r1892;
	@%p92 bra 	BB4_1014;

	shl.b32 	%r1893, %r49, 1;
	bfe.u32 	%r1894, %r48, 3, 28;
	or.b32  	%r1895, %r1893, %r1894;
	shr.u32 	%r1896, %r1895, 4;
	shl.b32 	%r1897, %r50, 1;
	or.b32  	%r1898, %r1897, %r1896;
	shr.u32 	%r1899, %r1898, 4;
	shl.b32 	%r1900, %r51, 1;
	or.b32  	%r1901, %r1900, %r1899;
	and.b32  	%r1902, %r52, 1077952576;
	shr.u32 	%r1903, %r1902, 1;
	and.b32  	%r1904, %r52, -2139062144;
	shr.u32 	%r1905, %r1904, 2;
	not.b32 	%r1906, %r1905;
	and.b32  	%r1907, %r1903, %r1906;
	and.b32  	%r1908, %r1907, %r61;
	add.s32 	%r1909, %r60, 522133279;
	and.b32  	%r1910, %r1908, %r1909;
	shl.b32 	%r1911, %r48, 13;
	and.b32  	%r1912, %r1910, %r1911;
	and.b32  	%r1913, %r1912, 8192;
	xor.b32  	%r1914, %r10963, %r1913;
	shl.b32 	%r1915, %r48, 20;
	and.b32  	%r1916, %r1910, %r1915;
	and.b32  	%r1917, %r1916, 2097152;
	xor.b32  	%r1918, %r1914, %r1917;
	shl.b32 	%r1919, %r48, 27;
	and.b32  	%r1920, %r1910, %r1919;
	and.b32  	%r1921, %r1920, 536870912;
	xor.b32  	%r10963, %r1918, %r1921;
	and.b32  	%r1922, %r10964, 1077952576;
	shr.u32 	%r1923, %r1922, 1;
	and.b32  	%r1924, %r10964, -2139062144;
	shr.u32 	%r1925, %r1924, 2;
	not.b32 	%r1926, %r1925;
	and.b32  	%r1927, %r1923, %r1926;
	and.b32  	%r1928, %r10964, 522133279;
	add.s32 	%r1929, %r1928, 522133279;
	sub.s32 	%r1931, %r1794, %r1928;
	and.b32  	%r1932, %r1927, %r1931;
	and.b32  	%r1933, %r1932, %r1929;
	shl.b32 	%r1934, %r48, 2;
	and.b32  	%r1935, %r1933, %r1934;
	and.b32  	%r1936, %r1935, 32;
	xor.b32  	%r1937, %r1936, %r10964;
	shl.b32 	%r1938, %r1895, 12;
	and.b32  	%r1939, %r1933, %r1938;
	and.b32  	%r1940, %r1939, 8192;
	xor.b32  	%r1941, %r1937, %r1940;
	shl.b32 	%r1942, %r1895, 19;
	and.b32  	%r1943, %r1933, %r1942;
	and.b32  	%r1944, %r1943, 2097152;
	xor.b32  	%r1945, %r1941, %r1944;
	shl.b32 	%r1946, %r1895, 26;
	and.b32  	%r1947, %r1933, %r1946;
	and.b32  	%r1948, %r1947, 536870912;
	xor.b32  	%r10964, %r1945, %r1948;
	and.b32  	%r1949, %r10965, 1077952576;
	shr.u32 	%r1950, %r1949, 1;
	and.b32  	%r1951, %r10965, -2139062144;
	shr.u32 	%r1952, %r1951, 2;
	not.b32 	%r1953, %r1952;
	and.b32  	%r1954, %r1950, %r1953;
	and.b32  	%r1955, %r10965, 522133279;
	add.s32 	%r1956, %r1955, 522133279;
	sub.s32 	%r1957, %r1794, %r1955;
	and.b32  	%r1958, %r1954, %r1957;
	and.b32  	%r1959, %r1958, %r1956;
	shl.b32 	%r1960, %r1895, 1;
	and.b32  	%r1961, %r1959, %r1960;
	and.b32  	%r1962, %r1961, 32;
	xor.b32  	%r1963, %r1962, %r10965;
	shl.b32 	%r1964, %r1898, 12;
	and.b32  	%r1965, %r1959, %r1964;
	and.b32  	%r1966, %r1965, 8192;
	xor.b32  	%r1967, %r1963, %r1966;
	shl.b32 	%r1968, %r1898, 19;
	and.b32  	%r1969, %r1959, %r1968;
	and.b32  	%r1970, %r1969, 2097152;
	xor.b32  	%r1971, %r1967, %r1970;
	shl.b32 	%r1972, %r1898, 26;
	and.b32  	%r1973, %r1959, %r1972;
	and.b32  	%r1974, %r1973, 536870912;
	xor.b32  	%r10965, %r1971, %r1974;
	and.b32  	%r1975, %r10966, 1077952576;
	shr.u32 	%r1976, %r1975, 1;
	and.b32  	%r1977, %r10966, -2139062144;
	shr.u32 	%r1978, %r1977, 2;
	not.b32 	%r1979, %r1978;
	and.b32  	%r1980, %r1976, %r1979;
	and.b32  	%r1981, %r10966, 522133279;
	add.s32 	%r1982, %r1981, 522133279;
	sub.s32 	%r1983, %r1794, %r1981;
	and.b32  	%r1984, %r1980, %r1983;
	and.b32  	%r1985, %r1984, %r1982;
	shl.b32 	%r1986, %r1898, 1;
	and.b32  	%r1987, %r1985, %r1986;
	and.b32  	%r1988, %r1987, 32;
	xor.b32  	%r1989, %r1988, %r10966;
	shl.b32 	%r1990, %r1901, 12;
	and.b32  	%r1991, %r1985, %r1990;
	and.b32  	%r1992, %r1991, 8192;
	xor.b32  	%r1993, %r1989, %r1992;
	shl.b32 	%r1994, %r1901, 19;
	and.b32  	%r1995, %r1985, %r1994;
	and.b32  	%r1996, %r1995, 2097152;
	xor.b32  	%r1997, %r1993, %r1996;
	shl.b32 	%r1998, %r1901, 26;
	and.b32  	%r1999, %r1985, %r1998;
	and.b32  	%r2000, %r1999, 536870912;
	xor.b32  	%r10966, %r1997, %r2000;
	and.b32  	%r2001, %r10959, 1077952576;
	shr.u32 	%r2002, %r2001, 1;
	and.b32  	%r2003, %r10959, -2139062144;
	shr.u32 	%r2004, %r2003, 2;
	not.b32 	%r2005, %r2004;
	and.b32  	%r2006, %r2002, %r2005;
	and.b32  	%r2007, %r10959, 522133279;
	add.s32 	%r2008, %r2007, 522133279;
	sub.s32 	%r2009, %r1794, %r2007;
	and.b32  	%r2010, %r2006, %r2009;
	and.b32  	%r2011, %r2010, %r2008;
	and.b32  	%r2012, %r2011, %r1911;
	and.b32  	%r2013, %r2012, 8192;
	xor.b32  	%r2014, %r10959, %r2013;
	and.b32  	%r2015, %r2011, %r1915;
	and.b32  	%r2016, %r2015, 2097152;
	xor.b32  	%r2017, %r2014, %r2016;
	and.b32  	%r2018, %r2011, %r1919;
	and.b32  	%r2019, %r2018, 536870912;
	xor.b32  	%r10959, %r2017, %r2019;
	and.b32  	%r2020, %r10960, 1077952576;
	shr.u32 	%r2021, %r2020, 1;
	and.b32  	%r2022, %r10960, -2139062144;
	shr.u32 	%r2023, %r2022, 2;
	not.b32 	%r2024, %r2023;
	and.b32  	%r2025, %r2021, %r2024;
	and.b32  	%r2026, %r10960, 522133279;
	add.s32 	%r2027, %r2026, 522133279;
	sub.s32 	%r2028, %r1794, %r2026;
	and.b32  	%r2029, %r2025, %r2028;
	and.b32  	%r2030, %r2029, %r2027;
	and.b32  	%r2031, %r2030, %r1934;
	and.b32  	%r2032, %r2031, 32;
	xor.b32  	%r2033, %r2032, %r10960;
	and.b32  	%r2034, %r2030, %r1938;
	and.b32  	%r2035, %r2034, 8192;
	xor.b32  	%r2036, %r2033, %r2035;
	and.b32  	%r2037, %r2030, %r1942;
	and.b32  	%r2038, %r2037, 2097152;
	xor.b32  	%r2039, %r2036, %r2038;
	and.b32  	%r2040, %r2030, %r1946;
	and.b32  	%r2041, %r2040, 536870912;
	xor.b32  	%r10960, %r2039, %r2041;
	and.b32  	%r2042, %r10961, 1077952576;
	shr.u32 	%r2043, %r2042, 1;
	and.b32  	%r2044, %r10961, -2139062144;
	shr.u32 	%r2045, %r2044, 2;
	not.b32 	%r2046, %r2045;
	and.b32  	%r2047, %r2043, %r2046;
	and.b32  	%r2048, %r10961, 522133279;
	add.s32 	%r2049, %r2048, 522133279;
	sub.s32 	%r2050, %r1794, %r2048;
	and.b32  	%r2051, %r2047, %r2050;
	and.b32  	%r2052, %r2051, %r2049;
	and.b32  	%r2053, %r2052, %r1960;
	and.b32  	%r2054, %r2053, 32;
	xor.b32  	%r2055, %r2054, %r10961;
	and.b32  	%r2056, %r2052, %r1964;
	and.b32  	%r2057, %r2056, 8192;
	xor.b32  	%r2058, %r2055, %r2057;
	and.b32  	%r2059, %r2052, %r1968;
	and.b32  	%r2060, %r2059, 2097152;
	xor.b32  	%r2061, %r2058, %r2060;
	and.b32  	%r2062, %r2052, %r1972;
	and.b32  	%r2063, %r2062, 536870912;
	xor.b32  	%r10961, %r2061, %r2063;
	and.b32  	%r2064, %r10962, 1077952576;
	shr.u32 	%r2065, %r2064, 1;
	and.b32  	%r2066, %r10962, -2139062144;
	shr.u32 	%r2067, %r2066, 2;
	not.b32 	%r2068, %r2067;
	and.b32  	%r2069, %r2065, %r2068;
	and.b32  	%r2070, %r10962, 522133279;
	add.s32 	%r2071, %r2070, 522133279;
	sub.s32 	%r2072, %r1794, %r2070;
	and.b32  	%r2073, %r2069, %r2072;
	and.b32  	%r2074, %r2073, %r2071;
	and.b32  	%r2075, %r2074, %r1986;
	and.b32  	%r2076, %r2075, 32;
	xor.b32  	%r2077, %r2076, %r10962;
	and.b32  	%r2078, %r2074, %r1990;
	and.b32  	%r2079, %r2078, 8192;
	xor.b32  	%r2080, %r2077, %r2079;
	and.b32  	%r2081, %r2074, %r1994;
	and.b32  	%r2082, %r2081, 2097152;
	xor.b32  	%r2083, %r2080, %r2082;
	and.b32  	%r2084, %r2074, %r1998;
	and.b32  	%r2085, %r2084, 536870912;
	xor.b32  	%r10962, %r2083, %r2085;
	bra.uni 	BB4_1014;

BB4_82:
	setp.gt.s32	%p6, %r1602, 119;
	@%p6 bra 	BB4_96;

	setp.gt.s32	%p13, %r1602, 114;
	@%p13 bra 	BB4_92;

	setp.eq.s32	%p17, %r1602, 113;
	@%p17 bra 	BB4_327;
	bra.uni 	BB4_85;

BB4_327:
	setp.eq.s32	%p260, %r27, 0;
	add.s32 	%r10975, %r27, %r27;
	setp.gt.u32	%p261, %r10975, 31;
	or.pred  	%p262, %p260, %p261;
	@%p262 bra 	BB4_108;

	and.b32  	%r3921, %r39, 255;
	and.b32  	%r3922, %r39, 65280;
	prmt.b32 	%r10971, %r3922, %r3921, 8452;
	bfe.u32 	%r3923, %r39, 16, 8;
	and.b32  	%r3924, %r39, -16777216;
	shr.u32 	%r3925, %r3924, 8;
	or.b32  	%r10972, %r3923, %r3925;
	and.b32  	%r3926, %r38, 65280;
	and.b32  	%r3927, %r38, 255;
	prmt.b32 	%r10973, %r3926, %r3927, 8452;
	bfe.u32 	%r3928, %r38, 16, 8;
	and.b32  	%r3929, %r38, -16777216;
	shr.u32 	%r3930, %r3929, 8;
	or.b32  	%r10974, %r3928, %r3930;
	and.b32  	%r3931, %r37, 65280;
	and.b32  	%r3932, %r37, 255;
	prmt.b32 	%r10967, %r3931, %r3932, 8452;
	bfe.u32 	%r3933, %r37, 16, 8;
	and.b32  	%r3934, %r37, -16777216;
	shr.u32 	%r3935, %r3934, 8;
	or.b32  	%r10968, %r3933, %r3935;
	and.b32  	%r3936, %r36, 65280;
	and.b32  	%r3937, %r36, 255;
	prmt.b32 	%r10969, %r3936, %r3937, 8452;
	bfe.u32 	%r3938, %r36, 16, 8;
	and.b32  	%r3939, %r36, -16777216;
	shr.u32 	%r3940, %r3939, 8;
	or.b32  	%r10970, %r3938, %r3940;
	shl.b32 	%r3941, %r10971, 8;
	or.b32  	%r10963, %r3941, %r10971;
	shl.b32 	%r3942, %r10972, 8;
	or.b32  	%r10964, %r3942, %r10972;
	shl.b32 	%r3943, %r10973, 8;
	or.b32  	%r10965, %r3943, %r10973;
	shl.b32 	%r3944, %r10974, 8;
	or.b32  	%r10966, %r3944, %r10974;
	shl.b32 	%r3945, %r10967, 8;
	or.b32  	%r10959, %r3945, %r10967;
	shl.b32 	%r3946, %r10968, 8;
	or.b32  	%r10960, %r3946, %r10968;
	shl.b32 	%r3947, %r10969, 8;
	or.b32  	%r10961, %r3947, %r10969;
	shl.b32 	%r3948, %r10970, 8;
	or.b32  	%r10962, %r3948, %r10970;
	bra.uni 	BB4_1015;

BB4_19:
	setp.gt.s32	%p47, %r1602, 63;
	@%p47 bra 	BB4_24;

	setp.eq.s32	%p51, %r1602, 45;
	@%p51 bra 	BB4_318;
	bra.uni 	BB4_21;

BB4_318:
	setp.ge.u32	%p251, %r45, %r27;
	@%p251 bra 	BB4_108;

	and.b32  	%r3821, %r44, 3;
	shl.b32 	%r3822, %r3821, 3;
	mov.u32 	%r3823, 255;
	shl.b32 	%r3824, %r3823, %r3822;
	not.b32 	%r3825, %r3824;
	and.b32  	%r3826, %r3824, 16843009;
	st.local.v4.u32 	[%rd84], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd84+16], {%r43, %r42, %r41, %r40};
	ld.local.u32 	%r3827, [%rd87];
	and.b32  	%r3828, %r3827, %r3825;
	and.b32  	%r3829, %r3827, %r3824;
	sub.s32 	%r3830, %r3829, %r3826;
	and.b32  	%r3831, %r3830, %r3824;
	or.b32  	%r3832, %r3831, %r3828;
	st.local.u32 	[%rd87], %r3832;
	bra.uni 	BB4_326;

BB4_73:
	setp.gt.s32	%p20, %r1602, 107;
	@%p20 bra 	BB4_78;

	setp.eq.s32	%p24, %r1602, 105;
	@%p24 bra 	BB4_489;
	bra.uni 	BB4_75;

BB4_489:
	setp.gt.u32	%p459, %r45, %r27;
	add.s32 	%r10975, %r27, 1;
	setp.gt.u32	%p460, %r10975, 31;
	or.pred  	%p461, %p459, %p460;
	@%p461 bra 	BB4_108;

	mov.u32 	%r5181, 24;
	// inline asm
	shf.r.wrap.b32 %r10970, %r41, %r40, %r5181;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r42, %r41, %r5181;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r43, %r42, %r5181;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r36, %r43, %r5181;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r37, %r36, %r5181;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r38, %r37, %r5181;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r39, %r38, %r5181;
	// inline asm
	mov.u32 	%r5179, 0;
	// inline asm
	shf.r.wrap.b32 %r10971, %r5179, %r39, %r5181;
	// inline asm
	and.b32  	%r5183, %r44, 3;
	shl.b32 	%r5184, %r5183, 3;
	shl.b32 	%r699, %r47, %r5184;
	mov.u32 	%r5185, 1;
	shl.b32 	%r5186, %r5185, %r5184;
	add.s32 	%r700, %r5186, -1;
	mov.u32 	%r5187, -256;
	shl.b32 	%r701, %r5187, %r5184;
	shr.u32 	%r5182, %r45, 2;
	setp.gt.s32	%p462, %r5182, 3;
	@%p462 bra 	BB4_499;

	setp.gt.s32	%p468, %r5182, 1;
	@%p468 bra 	BB4_496;

	setp.eq.s32	%p471, %r5182, 0;
	@%p471 bra 	BB4_513;
	bra.uni 	BB4_493;

BB4_513:
	and.b32  	%r5209, %r700, %r39;
	or.b32  	%r5210, %r5209, %r699;
	and.b32  	%r5211, %r10971, %r701;
	or.b32  	%r10963, %r5210, %r5211;
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10964, %r10972;
	bra.uni 	BB4_495;

BB4_44:
	setp.gt.s32	%p34, %r1602, 89;
	@%p34 bra 	BB4_54;

	setp.eq.s32	%p38, %r1602, 84;
	@%p38 bra 	BB4_1009;
	bra.uni 	BB4_46;

BB4_1009:
	setp.ge.u32	%p760, %r45, %r27;
	@%p760 bra 	BB4_108;

	st.local.v4.u32 	[%rd84], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd84+16], {%r43, %r42, %r41, %r40};
	and.b32  	%r8406, %r44, 3;
	shl.b32 	%r8407, %r8406, 3;
	mov.u32 	%r8408, 32;
	shl.b32 	%r8409, %r8408, %r8407;
	ld.local.u32 	%r8410, [%rd87];
	and.b32  	%r8411, %r8410, 1077952576;
	shr.u32 	%r8412, %r8411, 1;
	shr.u32 	%r8413, %r8410, 2;
	not.b32 	%r8414, %r8413;
	and.b32  	%r8415, %r8410, 522133279;
	add.s32 	%r8416, %r8415, 522133279;
	mov.u32 	%r8417, -84215046;
	sub.s32 	%r8418, %r8417, %r8415;
	and.b32  	%r8419, %r8409, %r8414;
	and.b32  	%r8420, %r8419, %r8412;
	and.b32  	%r8421, %r8420, %r8418;
	and.b32  	%r8422, %r8421, %r8416;
	xor.b32  	%r8423, %r8422, %r8410;
	st.local.u32 	[%rd87], %r8423;
	bra.uni 	BB4_326;

BB4_96:
	setp.gt.s32	%p7, %r1602, 121;
	@%p7 bra 	BB4_105;

	setp.eq.s32	%p11, %r1602, 120;
	@%p11 bra 	BB4_627;
	bra.uni 	BB4_98;

BB4_627:
	setp.ge.u32	%p534, %r45, %r27;
	add.s32 	%r5786, %r45, %r47;
	setp.gt.u32	%p535, %r5786, %r27;
	or.pred  	%p536, %p534, %p535;
	@%p536 bra 	BB4_108;

	setp.gt.s32	%p537, %r45, 15;
	@%p537 bra 	BB4_657;

	setp.gt.s32	%p561, %r45, 7;
	@%p561 bra 	BB4_642;

	setp.gt.s32	%p573, %r45, 3;
	@%p573 bra 	BB4_635;

	setp.eq.s32	%p579, %r45, 1;
	@%p579 bra 	BB4_706;

	setp.eq.s32	%p580, %r45, 2;
	@%p580 bra 	BB4_705;
	bra.uni 	BB4_633;

BB4_705:
	mov.u32 	%r6287, 16;
	// inline asm
	shf.r.wrap.b32 %r10963, %r39, %r38, %r6287;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10964, %r38, %r37, %r6287;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10965, %r37, %r36, %r6287;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6268, %r36, %r43, %r6287;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10959, %r43, %r42, %r6287;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10960, %r42, %r41, %r6287;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10961, %r41, %r40, %r6287;
	// inline asm
	mov.u32 	%r6286, 0;
	// inline asm
	shf.r.wrap.b32 %r10962, %r40, %r6286, %r6287;
	// inline asm
	mov.u32 	%r40, %r6268;
	bra.uni 	BB4_712;

BB4_15:
	setp.eq.s32	%p54, %r1602, 42;
	@%p54 bra 	BB4_324;

	setp.eq.s32	%p55, %r1602, 43;
	@%p55 bra 	BB4_320;
	bra.uni 	BB4_17;

BB4_320:
	setp.ge.u32	%p252, %r45, %r27;
	@%p252 bra 	BB4_108;

	and.b32  	%r3841, %r44, 3;
	shl.b32 	%r3842, %r3841, 3;
	mov.u32 	%r3843, 255;
	shl.b32 	%r3844, %r3843, %r3842;
	not.b32 	%r3845, %r3844;
	and.b32  	%r3846, %r3844, 16843009;
	st.local.v4.u32 	[%rd84], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd84+16], {%r43, %r42, %r41, %r40};
	ld.local.u32 	%r3847, [%rd87];
	and.b32  	%r3848, %r3847, %r3845;
	and.b32  	%r3849, %r3847, %r3844;
	add.s32 	%r3850, %r3849, %r3846;
	and.b32  	%r3851, %r3850, %r3844;
	or.b32  	%r3852, %r3851, %r3848;
	st.local.u32 	[%rd87], %r3852;
	bra.uni 	BB4_326;

BB4_63:
	setp.eq.s32	%p27, %r1602, 100;
	@%p27 bra 	BB4_911;

	setp.eq.s32	%p28, %r1602, 101;
	@%p28 bra 	BB4_114;
	bra.uni 	BB4_65;

BB4_114:
	setp.eq.s32	%p93, %r27, 0;
	mov.u32 	%r10975, 0;
	@%p93 bra 	BB4_111;

	mov.u32 	%r2201, 0;
	mov.u32 	%r2214, 8;
	// inline asm
	bfe.u32 %r2087, %r39, %r2201, %r2214;
	// inline asm
	setp.eq.s32	%p94, %r2087, %r45;
	selp.u32	%r2215, 1, 0, %p94;
	// inline asm
	bfe.u32 %r2091, %r39, %r2214, %r2214;
	// inline asm
	setp.eq.s32	%p95, %r2091, %r45;
	or.b32  	%r2216, %r2215, 2;
	selp.b32	%r2217, %r2216, %r2215, %p95;
	mov.u32 	%r2209, 16;
	// inline asm
	bfe.u32 %r2095, %r39, %r2209, %r2214;
	// inline asm
	setp.eq.s32	%p96, %r2095, %r45;
	or.b32  	%r2218, %r2217, 4;
	selp.b32	%r2219, %r2218, %r2217, %p96;
	mov.u32 	%r2213, 24;
	// inline asm
	bfe.u32 %r2099, %r39, %r2213, %r2214;
	// inline asm
	setp.eq.s32	%p97, %r2099, %r45;
	or.b32  	%r2220, %r2219, 8;
	selp.b32	%r71, %r2220, %r2219, %p97;
	// inline asm
	bfe.u32 %r2103, %r38, %r2201, %r2214;
	// inline asm
	setp.eq.s32	%p98, %r2103, %r45;
	selp.u32	%r2221, 1, 0, %p98;
	// inline asm
	bfe.u32 %r2107, %r38, %r2214, %r2214;
	// inline asm
	setp.eq.s32	%p99, %r2107, %r45;
	or.b32  	%r2222, %r2221, 2;
	selp.b32	%r2223, %r2222, %r2221, %p99;
	// inline asm
	bfe.u32 %r2111, %r38, %r2209, %r2214;
	// inline asm
	setp.eq.s32	%p100, %r2111, %r45;
	or.b32  	%r2224, %r2223, 4;
	selp.b32	%r2225, %r2224, %r2223, %p100;
	// inline asm
	bfe.u32 %r2115, %r38, %r2213, %r2214;
	// inline asm
	setp.eq.s32	%p101, %r2115, %r45;
	or.b32  	%r2226, %r2225, 8;
	selp.b32	%r72, %r2226, %r2225, %p101;
	// inline asm
	bfe.u32 %r2119, %r37, %r2201, %r2214;
	// inline asm
	setp.eq.s32	%p102, %r2119, %r45;
	selp.u32	%r2227, 1, 0, %p102;
	// inline asm
	bfe.u32 %r2123, %r37, %r2214, %r2214;
	// inline asm
	setp.eq.s32	%p103, %r2123, %r45;
	or.b32  	%r2228, %r2227, 2;
	selp.b32	%r2229, %r2228, %r2227, %p103;
	// inline asm
	bfe.u32 %r2127, %r37, %r2209, %r2214;
	// inline asm
	setp.eq.s32	%p104, %r2127, %r45;
	or.b32  	%r2230, %r2229, 4;
	selp.b32	%r2231, %r2230, %r2229, %p104;
	// inline asm
	bfe.u32 %r2131, %r37, %r2213, %r2214;
	// inline asm
	setp.eq.s32	%p105, %r2131, %r45;
	or.b32  	%r2232, %r2231, 8;
	selp.b32	%r73, %r2232, %r2231, %p105;
	// inline asm
	bfe.u32 %r2135, %r36, %r2201, %r2214;
	// inline asm
	setp.eq.s32	%p106, %r2135, %r45;
	selp.u32	%r2233, 1, 0, %p106;
	// inline asm
	bfe.u32 %r2139, %r36, %r2214, %r2214;
	// inline asm
	setp.eq.s32	%p107, %r2139, %r45;
	or.b32  	%r2234, %r2233, 2;
	selp.b32	%r2235, %r2234, %r2233, %p107;
	// inline asm
	bfe.u32 %r2143, %r36, %r2209, %r2214;
	// inline asm
	setp.eq.s32	%p108, %r2143, %r45;
	or.b32  	%r2236, %r2235, 4;
	selp.b32	%r2237, %r2236, %r2235, %p108;
	// inline asm
	bfe.u32 %r2147, %r36, %r2213, %r2214;
	// inline asm
	setp.eq.s32	%p109, %r2147, %r45;
	or.b32  	%r2238, %r2237, 8;
	selp.b32	%r74, %r2238, %r2237, %p109;
	// inline asm
	bfe.u32 %r2151, %r43, %r2201, %r2214;
	// inline asm
	setp.eq.s32	%p110, %r2151, %r45;
	selp.u32	%r2239, 1, 0, %p110;
	// inline asm
	bfe.u32 %r2155, %r43, %r2214, %r2214;
	// inline asm
	setp.eq.s32	%p111, %r2155, %r45;
	or.b32  	%r2240, %r2239, 2;
	selp.b32	%r2241, %r2240, %r2239, %p111;
	// inline asm
	bfe.u32 %r2159, %r43, %r2209, %r2214;
	// inline asm
	setp.eq.s32	%p112, %r2159, %r45;
	or.b32  	%r2242, %r2241, 4;
	selp.b32	%r2243, %r2242, %r2241, %p112;
	// inline asm
	bfe.u32 %r2163, %r43, %r2213, %r2214;
	// inline asm
	setp.eq.s32	%p113, %r2163, %r45;
	or.b32  	%r2244, %r2243, 8;
	selp.b32	%r2245, %r2244, %r2243, %p113;
	// inline asm
	bfe.u32 %r2167, %r42, %r2201, %r2214;
	// inline asm
	setp.eq.s32	%p114, %r2167, %r45;
	selp.u32	%r2246, 1, 0, %p114;
	// inline asm
	bfe.u32 %r2171, %r42, %r2214, %r2214;
	// inline asm
	setp.eq.s32	%p115, %r2171, %r45;
	or.b32  	%r2247, %r2246, 2;
	selp.b32	%r2248, %r2247, %r2246, %p115;
	// inline asm
	bfe.u32 %r2175, %r42, %r2209, %r2214;
	// inline asm
	setp.eq.s32	%p116, %r2175, %r45;
	or.b32  	%r2249, %r2248, 4;
	selp.b32	%r2250, %r2249, %r2248, %p116;
	// inline asm
	bfe.u32 %r2179, %r42, %r2213, %r2214;
	// inline asm
	setp.eq.s32	%p117, %r2179, %r45;
	or.b32  	%r2251, %r2250, 8;
	selp.b32	%r2252, %r2251, %r2250, %p117;
	// inline asm
	bfe.u32 %r2183, %r41, %r2201, %r2214;
	// inline asm
	setp.eq.s32	%p118, %r2183, %r45;
	selp.u32	%r2253, 1, 0, %p118;
	// inline asm
	bfe.u32 %r2187, %r41, %r2214, %r2214;
	// inline asm
	setp.eq.s32	%p119, %r2187, %r45;
	or.b32  	%r2254, %r2253, 2;
	selp.b32	%r2255, %r2254, %r2253, %p119;
	// inline asm
	bfe.u32 %r2191, %r41, %r2209, %r2214;
	// inline asm
	setp.eq.s32	%p120, %r2191, %r45;
	or.b32  	%r2256, %r2255, 4;
	selp.b32	%r2257, %r2256, %r2255, %p120;
	// inline asm
	bfe.u32 %r2195, %r41, %r2213, %r2214;
	// inline asm
	setp.eq.s32	%p121, %r2195, %r45;
	or.b32  	%r2258, %r2257, 8;
	selp.b32	%r2259, %r2258, %r2257, %p121;
	// inline asm
	bfe.u32 %r2199, %r40, %r2201, %r2214;
	// inline asm
	setp.eq.s32	%p122, %r2199, %r45;
	selp.u32	%r2260, 1, 0, %p122;
	// inline asm
	bfe.u32 %r2203, %r40, %r2214, %r2214;
	// inline asm
	setp.eq.s32	%p123, %r2203, %r45;
	or.b32  	%r2261, %r2260, 2;
	selp.b32	%r2262, %r2261, %r2260, %p123;
	// inline asm
	bfe.u32 %r2207, %r40, %r2209, %r2214;
	// inline asm
	setp.eq.s32	%p124, %r2207, %r45;
	or.b32  	%r2263, %r2262, 4;
	selp.b32	%r2264, %r2263, %r2262, %p124;
	// inline asm
	bfe.u32 %r2211, %r40, %r2213, %r2214;
	// inline asm
	setp.eq.s32	%p125, %r2211, %r45;
	or.b32  	%r2265, %r2264, 8;
	selp.b32	%r2266, %r2265, %r2264, %p125;
	and.b32  	%r2267, %r39, 1077952576;
	shr.u32 	%r2268, %r2267, 1;
	and.b32  	%r2269, %r39, -2139062144;
	shr.u32 	%r2270, %r2269, 2;
	not.b32 	%r2271, %r2270;
	and.b32  	%r2272, %r2268, %r2271;
	and.b32  	%r2273, %r39, 522133279;
	add.s32 	%r2274, %r2273, 522133279;
	mov.u32 	%r2275, -84215046;
	sub.s32 	%r2276, %r2275, %r2273;
	and.b32  	%r2277, %r2272, %r2276;
	and.b32  	%r2278, %r2277, %r2274;
	or.b32  	%r75, %r2278, %r39;
	and.b32  	%r2279, %r38, 1077952576;
	shr.u32 	%r2280, %r2279, 1;
	and.b32  	%r2281, %r38, -2139062144;
	shr.u32 	%r2282, %r2281, 2;
	not.b32 	%r2283, %r2282;
	and.b32  	%r2284, %r2280, %r2283;
	and.b32  	%r2285, %r38, 522133279;
	add.s32 	%r2286, %r2285, 522133279;
	sub.s32 	%r2287, %r2275, %r2285;
	and.b32  	%r2288, %r2284, %r2287;
	and.b32  	%r2289, %r2288, %r2286;
	or.b32  	%r10964, %r2289, %r38;
	and.b32  	%r2290, %r37, 1077952576;
	shr.u32 	%r2291, %r2290, 1;
	and.b32  	%r2292, %r37, -2139062144;
	shr.u32 	%r2293, %r2292, 2;
	not.b32 	%r2294, %r2293;
	and.b32  	%r2295, %r2291, %r2294;
	and.b32  	%r2296, %r37, 522133279;
	add.s32 	%r2297, %r2296, 522133279;
	sub.s32 	%r2298, %r2275, %r2296;
	and.b32  	%r2299, %r2295, %r2298;
	and.b32  	%r2300, %r2299, %r2297;
	or.b32  	%r10965, %r2300, %r37;
	and.b32  	%r2301, %r36, 1077952576;
	shr.u32 	%r2302, %r2301, 1;
	and.b32  	%r2303, %r36, -2139062144;
	shr.u32 	%r2304, %r2303, 2;
	not.b32 	%r2305, %r2304;
	and.b32  	%r2306, %r2302, %r2305;
	and.b32  	%r2307, %r36, 522133279;
	add.s32 	%r2308, %r2307, 522133279;
	sub.s32 	%r2309, %r2275, %r2307;
	and.b32  	%r2310, %r2306, %r2309;
	and.b32  	%r2311, %r2310, %r2308;
	or.b32  	%r10966, %r2311, %r36;
	and.b32  	%r2312, %r43, 1077952576;
	shr.u32 	%r2313, %r2312, 1;
	and.b32  	%r2314, %r43, -2139062144;
	shr.u32 	%r2315, %r2314, 2;
	not.b32 	%r2316, %r2315;
	and.b32  	%r2317, %r2313, %r2316;
	and.b32  	%r2318, %r43, 522133279;
	add.s32 	%r2319, %r2318, 522133279;
	sub.s32 	%r2320, %r2275, %r2318;
	and.b32  	%r2321, %r2317, %r2320;
	and.b32  	%r2322, %r2321, %r2319;
	or.b32  	%r10959, %r2322, %r43;
	and.b32  	%r2323, %r42, 1077952576;
	shr.u32 	%r2324, %r2323, 1;
	and.b32  	%r2325, %r42, -2139062144;
	shr.u32 	%r2326, %r2325, 2;
	not.b32 	%r2327, %r2326;
	and.b32  	%r2328, %r2324, %r2327;
	and.b32  	%r2329, %r42, 522133279;
	add.s32 	%r2330, %r2329, 522133279;
	sub.s32 	%r2331, %r2275, %r2329;
	and.b32  	%r2332, %r2328, %r2331;
	and.b32  	%r2333, %r2332, %r2330;
	or.b32  	%r10960, %r2333, %r42;
	and.b32  	%r2334, %r41, 1077952576;
	shr.u32 	%r2335, %r2334, 1;
	and.b32  	%r2336, %r41, -2139062144;
	shr.u32 	%r2337, %r2336, 2;
	not.b32 	%r2338, %r2337;
	and.b32  	%r2339, %r2335, %r2338;
	and.b32  	%r2340, %r41, 522133279;
	add.s32 	%r2341, %r2340, 522133279;
	sub.s32 	%r2342, %r2275, %r2340;
	and.b32  	%r2343, %r2339, %r2342;
	and.b32  	%r2344, %r2343, %r2341;
	or.b32  	%r10961, %r2344, %r41;
	and.b32  	%r2345, %r40, 1077952576;
	shr.u32 	%r2346, %r2345, 1;
	and.b32  	%r2347, %r40, -2139062144;
	shr.u32 	%r2348, %r2347, 2;
	not.b32 	%r2349, %r2348;
	and.b32  	%r2350, %r2346, %r2349;
	and.b32  	%r2351, %r40, 522133279;
	add.s32 	%r2352, %r2351, 522133279;
	sub.s32 	%r2353, %r2275, %r2351;
	and.b32  	%r2354, %r2350, %r2353;
	and.b32  	%r2355, %r2354, %r2352;
	or.b32  	%r10962, %r2355, %r40;
	and.b32  	%r2356, %r75, 64;
	shr.u32 	%r2357, %r2356, 1;
	and.b32  	%r2358, %r75, 128;
	shr.u32 	%r2359, %r2358, 2;
	not.b32 	%r2360, %r2359;
	and.b32  	%r2361, %r2357, %r2360;
	and.b32  	%r83, %r75, 522133279;
	add.s32 	%r2362, %r83, 31;
	sub.s32 	%r84, %r2275, %r83;
	and.b32  	%r2363, %r2361, %r84;
	and.b32  	%r2364, %r2363, %r2362;
	not.b32 	%r2365, %r2364;
	or.b32  	%r2366, %r2365, -33;
	and.b32  	%r10963, %r2366, %r75;
	add.s32 	%r2367, %r72, %r71;
	add.s32 	%r2368, %r2367, %r73;
	add.s32 	%r2369, %r2368, %r74;
	add.s32 	%r2370, %r2369, %r2245;
	add.s32 	%r2371, %r2370, %r2252;
	add.s32 	%r2372, %r2371, %r2259;
	neg.s32 	%r2373, %r2266;
	setp.eq.s32	%p126, %r2372, %r2373;
	@%p126 bra 	BB4_1014;

	shl.b32 	%r2374, %r72, 1;
	bfe.u32 	%r2375, %r71, 3, 28;
	or.b32  	%r2376, %r2374, %r2375;
	shr.u32 	%r2377, %r2376, 4;
	shl.b32 	%r2378, %r73, 1;
	or.b32  	%r2379, %r2378, %r2377;
	shr.u32 	%r2380, %r2379, 4;
	shl.b32 	%r2381, %r74, 1;
	or.b32  	%r2382, %r2381, %r2380;
	and.b32  	%r2383, %r75, 1077952576;
	shr.u32 	%r2384, %r2383, 1;
	and.b32  	%r2385, %r75, -2139062144;
	shr.u32 	%r2386, %r2385, 2;
	not.b32 	%r2387, %r2386;
	and.b32  	%r2388, %r2384, %r2387;
	and.b32  	%r2389, %r2388, %r84;
	add.s32 	%r2390, %r83, 522133279;
	and.b32  	%r2391, %r2389, %r2390;
	shl.b32 	%r2392, %r71, 13;
	and.b32  	%r2393, %r2391, %r2392;
	and.b32  	%r2394, %r2393, 8192;
	xor.b32  	%r2395, %r10963, %r2394;
	shl.b32 	%r2396, %r71, 20;
	and.b32  	%r2397, %r2391, %r2396;
	and.b32  	%r2398, %r2397, 2097152;
	xor.b32  	%r2399, %r2395, %r2398;
	shl.b32 	%r2400, %r71, 27;
	and.b32  	%r2401, %r2391, %r2400;
	and.b32  	%r2402, %r2401, 536870912;
	xor.b32  	%r10963, %r2399, %r2402;
	and.b32  	%r2403, %r10964, 1077952576;
	shr.u32 	%r2404, %r2403, 1;
	and.b32  	%r2405, %r10964, -2139062144;
	shr.u32 	%r2406, %r2405, 2;
	not.b32 	%r2407, %r2406;
	and.b32  	%r2408, %r2404, %r2407;
	and.b32  	%r2409, %r10964, 522133279;
	add.s32 	%r2410, %r2409, 522133279;
	sub.s32 	%r2412, %r2275, %r2409;
	and.b32  	%r2413, %r2408, %r2412;
	and.b32  	%r2414, %r2413, %r2410;
	shl.b32 	%r2415, %r71, 2;
	and.b32  	%r2416, %r2414, %r2415;
	and.b32  	%r2417, %r2416, 32;
	xor.b32  	%r2418, %r2417, %r10964;
	shl.b32 	%r2419, %r2376, 12;
	and.b32  	%r2420, %r2414, %r2419;
	and.b32  	%r2421, %r2420, 8192;
	xor.b32  	%r2422, %r2418, %r2421;
	shl.b32 	%r2423, %r2376, 19;
	and.b32  	%r2424, %r2414, %r2423;
	and.b32  	%r2425, %r2424, 2097152;
	xor.b32  	%r2426, %r2422, %r2425;
	shl.b32 	%r2427, %r2376, 26;
	and.b32  	%r2428, %r2414, %r2427;
	and.b32  	%r2429, %r2428, 536870912;
	xor.b32  	%r10964, %r2426, %r2429;
	and.b32  	%r2430, %r10965, 1077952576;
	shr.u32 	%r2431, %r2430, 1;
	and.b32  	%r2432, %r10965, -2139062144;
	shr.u32 	%r2433, %r2432, 2;
	not.b32 	%r2434, %r2433;
	and.b32  	%r2435, %r2431, %r2434;
	and.b32  	%r2436, %r10965, 522133279;
	add.s32 	%r2437, %r2436, 522133279;
	sub.s32 	%r2438, %r2275, %r2436;
	and.b32  	%r2439, %r2435, %r2438;
	and.b32  	%r2440, %r2439, %r2437;
	shl.b32 	%r2441, %r2376, 1;
	and.b32  	%r2442, %r2440, %r2441;
	and.b32  	%r2443, %r2442, 32;
	xor.b32  	%r2444, %r2443, %r10965;
	shl.b32 	%r2445, %r2379, 12;
	and.b32  	%r2446, %r2440, %r2445;
	and.b32  	%r2447, %r2446, 8192;
	xor.b32  	%r2448, %r2444, %r2447;
	shl.b32 	%r2449, %r2379, 19;
	and.b32  	%r2450, %r2440, %r2449;
	and.b32  	%r2451, %r2450, 2097152;
	xor.b32  	%r2452, %r2448, %r2451;
	shl.b32 	%r2453, %r2379, 26;
	and.b32  	%r2454, %r2440, %r2453;
	and.b32  	%r2455, %r2454, 536870912;
	xor.b32  	%r10965, %r2452, %r2455;
	and.b32  	%r2456, %r10966, 1077952576;
	shr.u32 	%r2457, %r2456, 1;
	and.b32  	%r2458, %r10966, -2139062144;
	shr.u32 	%r2459, %r2458, 2;
	not.b32 	%r2460, %r2459;
	and.b32  	%r2461, %r2457, %r2460;
	and.b32  	%r2462, %r10966, 522133279;
	add.s32 	%r2463, %r2462, 522133279;
	sub.s32 	%r2464, %r2275, %r2462;
	and.b32  	%r2465, %r2461, %r2464;
	and.b32  	%r2466, %r2465, %r2463;
	shl.b32 	%r2467, %r2379, 1;
	and.b32  	%r2468, %r2466, %r2467;
	and.b32  	%r2469, %r2468, 32;
	xor.b32  	%r2470, %r2469, %r10966;
	shl.b32 	%r2471, %r2382, 12;
	and.b32  	%r2472, %r2466, %r2471;
	and.b32  	%r2473, %r2472, 8192;
	xor.b32  	%r2474, %r2470, %r2473;
	shl.b32 	%r2475, %r2382, 19;
	and.b32  	%r2476, %r2466, %r2475;
	and.b32  	%r2477, %r2476, 2097152;
	xor.b32  	%r2478, %r2474, %r2477;
	shl.b32 	%r2479, %r2382, 26;
	and.b32  	%r2480, %r2466, %r2479;
	and.b32  	%r2481, %r2480, 536870912;
	xor.b32  	%r10966, %r2478, %r2481;
	and.b32  	%r2482, %r10959, 1077952576;
	shr.u32 	%r2483, %r2482, 1;
	and.b32  	%r2484, %r10959, -2139062144;
	shr.u32 	%r2485, %r2484, 2;
	not.b32 	%r2486, %r2485;
	and.b32  	%r2487, %r2483, %r2486;
	and.b32  	%r2488, %r10959, 522133279;
	add.s32 	%r2489, %r2488, 522133279;
	sub.s32 	%r2490, %r2275, %r2488;
	and.b32  	%r2491, %r2487, %r2490;
	and.b32  	%r2492, %r2491, %r2489;
	and.b32  	%r2493, %r2492, %r2392;
	and.b32  	%r2494, %r2493, 8192;
	xor.b32  	%r2495, %r10959, %r2494;
	and.b32  	%r2496, %r2492, %r2396;
	and.b32  	%r2497, %r2496, 2097152;
	xor.b32  	%r2498, %r2495, %r2497;
	and.b32  	%r2499, %r2492, %r2400;
	and.b32  	%r2500, %r2499, 536870912;
	xor.b32  	%r10959, %r2498, %r2500;
	and.b32  	%r2501, %r10960, 1077952576;
	shr.u32 	%r2502, %r2501, 1;
	and.b32  	%r2503, %r10960, -2139062144;
	shr.u32 	%r2504, %r2503, 2;
	not.b32 	%r2505, %r2504;
	and.b32  	%r2506, %r2502, %r2505;
	and.b32  	%r2507, %r10960, 522133279;
	add.s32 	%r2508, %r2507, 522133279;
	sub.s32 	%r2509, %r2275, %r2507;
	and.b32  	%r2510, %r2506, %r2509;
	and.b32  	%r2511, %r2510, %r2508;
	and.b32  	%r2512, %r2511, %r2415;
	and.b32  	%r2513, %r2512, 32;
	xor.b32  	%r2514, %r2513, %r10960;
	and.b32  	%r2515, %r2511, %r2419;
	and.b32  	%r2516, %r2515, 8192;
	xor.b32  	%r2517, %r2514, %r2516;
	and.b32  	%r2518, %r2511, %r2423;
	and.b32  	%r2519, %r2518, 2097152;
	xor.b32  	%r2520, %r2517, %r2519;
	and.b32  	%r2521, %r2511, %r2427;
	and.b32  	%r2522, %r2521, 536870912;
	xor.b32  	%r10960, %r2520, %r2522;
	and.b32  	%r2523, %r10961, 1077952576;
	shr.u32 	%r2524, %r2523, 1;
	and.b32  	%r2525, %r10961, -2139062144;
	shr.u32 	%r2526, %r2525, 2;
	not.b32 	%r2527, %r2526;
	and.b32  	%r2528, %r2524, %r2527;
	and.b32  	%r2529, %r10961, 522133279;
	add.s32 	%r2530, %r2529, 522133279;
	sub.s32 	%r2531, %r2275, %r2529;
	and.b32  	%r2532, %r2528, %r2531;
	and.b32  	%r2533, %r2532, %r2530;
	and.b32  	%r2534, %r2533, %r2441;
	and.b32  	%r2535, %r2534, 32;
	xor.b32  	%r2536, %r2535, %r10961;
	and.b32  	%r2537, %r2533, %r2445;
	and.b32  	%r2538, %r2537, 8192;
	xor.b32  	%r2539, %r2536, %r2538;
	and.b32  	%r2540, %r2533, %r2449;
	and.b32  	%r2541, %r2540, 2097152;
	xor.b32  	%r2542, %r2539, %r2541;
	and.b32  	%r2543, %r2533, %r2453;
	and.b32  	%r2544, %r2543, 536870912;
	xor.b32  	%r10961, %r2542, %r2544;
	and.b32  	%r2545, %r10962, 1077952576;
	shr.u32 	%r2546, %r2545, 1;
	and.b32  	%r2547, %r10962, -2139062144;
	shr.u32 	%r2548, %r2547, 2;
	not.b32 	%r2549, %r2548;
	and.b32  	%r2550, %r2546, %r2549;
	and.b32  	%r2551, %r10962, 522133279;
	add.s32 	%r2552, %r2551, 522133279;
	sub.s32 	%r2553, %r2275, %r2551;
	and.b32  	%r2554, %r2550, %r2553;
	and.b32  	%r2555, %r2554, %r2552;
	and.b32  	%r2556, %r2555, %r2467;
	and.b32  	%r2557, %r2556, 32;
	xor.b32  	%r2558, %r2557, %r10962;
	and.b32  	%r2559, %r2555, %r2471;
	and.b32  	%r2560, %r2559, 8192;
	xor.b32  	%r2561, %r2558, %r2560;
	and.b32  	%r2562, %r2555, %r2475;
	and.b32  	%r2563, %r2562, 2097152;
	xor.b32  	%r2564, %r2561, %r2563;
	and.b32  	%r2565, %r2555, %r2479;
	and.b32  	%r2566, %r2565, 536870912;
	xor.b32  	%r10962, %r2564, %r2566;
	bra.uni 	BB4_1014;

BB4_39:
	setp.eq.s32	%p41, %r1602, 76;
	@%p41 bra 	BB4_322;

	setp.eq.s32	%p42, %r1602, 79;
	@%p42 bra 	BB4_514;
	bra.uni 	BB4_41;

BB4_514:
	setp.ge.u32	%p473, %r45, %r27;
	add.s32 	%r5212, %r45, %r47;
	setp.gt.u32	%p474, %r5212, %r27;
	or.pred  	%p475, %p473, %p474;
	@%p475 bra 	BB4_108;

	mov.u32 	%r10970, 0;
	setp.gt.s32	%p476, %r47, 15;
	@%p476 bra 	BB4_548;

	setp.gt.s32	%p500, %r47, 7;
	@%p500 bra 	BB4_532;

	setp.gt.s32	%p512, %r47, 3;
	@%p512 bra 	BB4_525;

	setp.gt.s32	%p518, %r47, 1;
	@%p518 bra 	BB4_522;

	setp.eq.s32	%p521, %r47, 0;
	@%p521 bra 	BB4_600;
	bra.uni 	BB4_520;

BB4_600:
	mov.u32 	%r10967, %r43;
	mov.u32 	%r10968, %r42;
	mov.u32 	%r10969, %r41;
	mov.u32 	%r10970, %r40;
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10974, %r36;
	bra.uni 	BB4_601;

BB4_92:
	setp.eq.s32	%p14, %r1602, 115;
	@%p14 bra 	BB4_466;

	setp.eq.s32	%p15, %r1602, 116;
	@%p15 bra 	BB4_1011;
	bra.uni 	BB4_94;

BB4_1011:
	and.b32  	%r8432, %r39, 1077952576;
	shr.u32 	%r8433, %r8432, 1;
	and.b32  	%r8434, %r39, -2139062144;
	shr.u32 	%r8435, %r8434, 2;
	not.b32 	%r8436, %r8435;
	and.b32  	%r8437, %r8433, %r8436;
	and.b32  	%r8438, %r39, 522133279;
	add.s32 	%r8439, %r8438, 522133279;
	mov.u32 	%r8440, -84215046;
	sub.s32 	%r8441, %r8440, %r8438;
	and.b32  	%r8442, %r8437, %r8441;
	and.b32  	%r8443, %r8442, %r8439;
	xor.b32  	%r10963, %r8443, %r39;
	and.b32  	%r8444, %r38, 1077952576;
	shr.u32 	%r8445, %r8444, 1;
	and.b32  	%r8446, %r38, -2139062144;
	shr.u32 	%r8447, %r8446, 2;
	not.b32 	%r8448, %r8447;
	and.b32  	%r8449, %r8445, %r8448;
	and.b32  	%r8450, %r38, 522133279;
	add.s32 	%r8451, %r8450, 522133279;
	sub.s32 	%r8452, %r8440, %r8450;
	and.b32  	%r8453, %r8449, %r8452;
	and.b32  	%r8454, %r8453, %r8451;
	xor.b32  	%r10964, %r8454, %r38;
	and.b32  	%r8455, %r37, 1077952576;
	shr.u32 	%r8456, %r8455, 1;
	and.b32  	%r8457, %r37, -2139062144;
	shr.u32 	%r8458, %r8457, 2;
	not.b32 	%r8459, %r8458;
	and.b32  	%r8460, %r8456, %r8459;
	and.b32  	%r8461, %r37, 522133279;
	add.s32 	%r8462, %r8461, 522133279;
	sub.s32 	%r8463, %r8440, %r8461;
	and.b32  	%r8464, %r8460, %r8463;
	and.b32  	%r8465, %r8464, %r8462;
	xor.b32  	%r10965, %r8465, %r37;
	and.b32  	%r8466, %r36, 1077952576;
	shr.u32 	%r8467, %r8466, 1;
	and.b32  	%r8468, %r36, -2139062144;
	shr.u32 	%r8469, %r8468, 2;
	not.b32 	%r8470, %r8469;
	and.b32  	%r8471, %r8467, %r8470;
	and.b32  	%r8472, %r36, 522133279;
	add.s32 	%r8473, %r8472, 522133279;
	sub.s32 	%r8474, %r8440, %r8472;
	and.b32  	%r8475, %r8471, %r8474;
	and.b32  	%r8476, %r8475, %r8473;
	xor.b32  	%r10966, %r8476, %r36;
	and.b32  	%r8477, %r43, 1077952576;
	shr.u32 	%r8478, %r8477, 1;
	and.b32  	%r8479, %r43, -2139062144;
	shr.u32 	%r8480, %r8479, 2;
	not.b32 	%r8481, %r8480;
	and.b32  	%r8482, %r8478, %r8481;
	and.b32  	%r8483, %r43, 522133279;
	add.s32 	%r8484, %r8483, 522133279;
	sub.s32 	%r8485, %r8440, %r8483;
	and.b32  	%r8486, %r8482, %r8485;
	and.b32  	%r8487, %r8486, %r8484;
	xor.b32  	%r10959, %r8487, %r43;
	and.b32  	%r8488, %r42, 1077952576;
	shr.u32 	%r8489, %r8488, 1;
	and.b32  	%r8490, %r42, -2139062144;
	shr.u32 	%r8491, %r8490, 2;
	not.b32 	%r8492, %r8491;
	and.b32  	%r8493, %r8489, %r8492;
	and.b32  	%r8494, %r42, 522133279;
	add.s32 	%r8495, %r8494, 522133279;
	sub.s32 	%r8496, %r8440, %r8494;
	and.b32  	%r8497, %r8493, %r8496;
	and.b32  	%r8498, %r8497, %r8495;
	xor.b32  	%r10960, %r8498, %r42;
	and.b32  	%r8499, %r41, 1077952576;
	shr.u32 	%r8500, %r8499, 1;
	and.b32  	%r8501, %r41, -2139062144;
	shr.u32 	%r8502, %r8501, 2;
	not.b32 	%r8503, %r8502;
	and.b32  	%r8504, %r8500, %r8503;
	and.b32  	%r8505, %r41, 522133279;
	add.s32 	%r8506, %r8505, 522133279;
	sub.s32 	%r8507, %r8440, %r8505;
	and.b32  	%r8508, %r8504, %r8507;
	and.b32  	%r8509, %r8508, %r8506;
	xor.b32  	%r10961, %r8509, %r41;
	and.b32  	%r8510, %r40, 1077952576;
	shr.u32 	%r8511, %r8510, 1;
	and.b32  	%r8512, %r40, -2139062144;
	shr.u32 	%r8513, %r8512, 2;
	not.b32 	%r8514, %r8513;
	and.b32  	%r8515, %r8511, %r8514;
	and.b32  	%r8516, %r40, 522133279;
	add.s32 	%r8517, %r8516, 522133279;
	sub.s32 	%r8518, %r8440, %r8516;
	and.b32  	%r8519, %r8515, %r8518;
	and.b32  	%r8520, %r8519, %r8517;
	xor.b32  	%r10962, %r8520, %r40;
	bra.uni 	BB4_1014;

BB4_24:
	setp.eq.s32	%p48, %r1602, 64;
	@%p48 bra 	BB4_440;

	setp.eq.s32	%p49, %r1602, 67;
	@%p49 bra 	BB4_1012;
	bra.uni 	BB4_26;

BB4_1012:
	and.b32  	%r8521, %r39, 1077952576;
	shr.u32 	%r8522, %r8521, 1;
	and.b32  	%r8523, %r39, -2139062144;
	shr.u32 	%r8524, %r8523, 2;
	not.b32 	%r8525, %r8524;
	and.b32  	%r8526, %r8522, %r8525;
	and.b32  	%r8527, %r39, 522133279;
	add.s32 	%r8528, %r8527, 522133279;
	mov.u32 	%r8529, -84215046;
	sub.s32 	%r8530, %r8529, %r8527;
	and.b32  	%r8531, %r8526, %r8530;
	and.b32  	%r8532, %r8531, %r8528;
	not.b32 	%r8533, %r8532;
	and.b32  	%r8534, %r39, %r8533;
	and.b32  	%r8535, %r38, 1077952576;
	shr.u32 	%r8536, %r8535, 1;
	and.b32  	%r8537, %r38, -2139062144;
	shr.u32 	%r8538, %r8537, 2;
	not.b32 	%r8539, %r8538;
	and.b32  	%r8540, %r8536, %r8539;
	and.b32  	%r8541, %r38, 522133279;
	add.s32 	%r8542, %r8541, 522133279;
	sub.s32 	%r8543, %r8529, %r8541;
	and.b32  	%r8544, %r8540, %r8543;
	and.b32  	%r8545, %r8544, %r8542;
	not.b32 	%r8546, %r8545;
	and.b32  	%r10964, %r38, %r8546;
	and.b32  	%r8547, %r37, 1077952576;
	shr.u32 	%r8548, %r8547, 1;
	and.b32  	%r8549, %r37, -2139062144;
	shr.u32 	%r8550, %r8549, 2;
	not.b32 	%r8551, %r8550;
	and.b32  	%r8552, %r8548, %r8551;
	and.b32  	%r8553, %r37, 522133279;
	add.s32 	%r8554, %r8553, 522133279;
	sub.s32 	%r8555, %r8529, %r8553;
	and.b32  	%r8556, %r8552, %r8555;
	and.b32  	%r8557, %r8556, %r8554;
	not.b32 	%r8558, %r8557;
	and.b32  	%r10965, %r37, %r8558;
	and.b32  	%r8559, %r36, 1077952576;
	shr.u32 	%r8560, %r8559, 1;
	and.b32  	%r8561, %r36, -2139062144;
	shr.u32 	%r8562, %r8561, 2;
	not.b32 	%r8563, %r8562;
	and.b32  	%r8564, %r8560, %r8563;
	and.b32  	%r8565, %r36, 522133279;
	add.s32 	%r8566, %r8565, 522133279;
	sub.s32 	%r8567, %r8529, %r8565;
	and.b32  	%r8568, %r8564, %r8567;
	and.b32  	%r8569, %r8568, %r8566;
	not.b32 	%r8570, %r8569;
	and.b32  	%r10966, %r36, %r8570;
	and.b32  	%r8571, %r43, 1077952576;
	shr.u32 	%r8572, %r8571, 1;
	and.b32  	%r8573, %r43, -2139062144;
	shr.u32 	%r8574, %r8573, 2;
	not.b32 	%r8575, %r8574;
	and.b32  	%r8576, %r8572, %r8575;
	and.b32  	%r8577, %r43, 522133279;
	add.s32 	%r8578, %r8577, 522133279;
	sub.s32 	%r8579, %r8529, %r8577;
	and.b32  	%r8580, %r8576, %r8579;
	and.b32  	%r8581, %r8580, %r8578;
	not.b32 	%r8582, %r8581;
	and.b32  	%r10959, %r43, %r8582;
	and.b32  	%r8583, %r42, 1077952576;
	shr.u32 	%r8584, %r8583, 1;
	and.b32  	%r8585, %r42, -2139062144;
	shr.u32 	%r8586, %r8585, 2;
	not.b32 	%r8587, %r8586;
	and.b32  	%r8588, %r8584, %r8587;
	and.b32  	%r8589, %r42, 522133279;
	add.s32 	%r8590, %r8589, 522133279;
	sub.s32 	%r8591, %r8529, %r8589;
	and.b32  	%r8592, %r8588, %r8591;
	and.b32  	%r8593, %r8592, %r8590;
	not.b32 	%r8594, %r8593;
	and.b32  	%r10960, %r42, %r8594;
	and.b32  	%r8595, %r41, 1077952576;
	shr.u32 	%r8596, %r8595, 1;
	and.b32  	%r8597, %r41, -2139062144;
	shr.u32 	%r8598, %r8597, 2;
	not.b32 	%r8599, %r8598;
	and.b32  	%r8600, %r8596, %r8599;
	and.b32  	%r8601, %r41, 522133279;
	add.s32 	%r8602, %r8601, 522133279;
	sub.s32 	%r8603, %r8529, %r8601;
	and.b32  	%r8604, %r8600, %r8603;
	and.b32  	%r8605, %r8604, %r8602;
	not.b32 	%r8606, %r8605;
	and.b32  	%r10961, %r41, %r8606;
	and.b32  	%r8607, %r40, 1077952576;
	shr.u32 	%r8608, %r8607, 1;
	and.b32  	%r8609, %r40, -2139062144;
	shr.u32 	%r8610, %r8609, 2;
	not.b32 	%r8611, %r8610;
	and.b32  	%r8612, %r8608, %r8611;
	and.b32  	%r8613, %r40, 522133279;
	add.s32 	%r8614, %r8613, 522133279;
	sub.s32 	%r8615, %r8529, %r8613;
	and.b32  	%r8616, %r8612, %r8615;
	and.b32  	%r8617, %r8616, %r8614;
	not.b32 	%r8618, %r8617;
	and.b32  	%r10962, %r40, %r8618;
	and.b32  	%r8619, %r8534, 1077952576;
	shr.u32 	%r8620, %r8619, 1;
	and.b32  	%r8621, %r8534, 128;
	shr.u32 	%r8622, %r8621, 2;
	and.b32  	%r8623, %r8534, 522133279;
	add.s32 	%r8624, %r8623, 522133279;
	sub.s32 	%r8625, %r8529, %r8623;
	xor.b32  	%r8626, %r8622, 32;
	and.b32  	%r8627, %r8626, %r8620;
	and.b32  	%r8628, %r8627, %r8625;
	and.b32  	%r8629, %r8628, %r8624;
	or.b32  	%r10963, %r8629, %r8534;
	bra.uni 	BB4_1014;

BB4_78:
	setp.eq.s32	%p21, %r1602, 108;
	@%p21 bra 	BB4_1013;

	setp.eq.s32	%p22, %r1602, 111;
	@%p22 bra 	BB4_487;
	bra.uni 	BB4_80;

BB4_487:
	setp.ge.u32	%p458, %r45, %r27;
	@%p458 bra 	BB4_108;

	and.b32  	%r5133, %r44, 3;
	shl.b32 	%r5134, %r5133, 3;
	shl.b32 	%r5135, %r47, %r5134;
	mov.u32 	%r5136, 255;
	shl.b32 	%r5137, %r5136, %r5134;
	not.b32 	%r5138, %r5137;
	st.local.v4.u32 	[%rd84], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd84+16], {%r43, %r42, %r41, %r40};
	ld.local.u32 	%r5139, [%rd87];
	and.b32  	%r5140, %r5139, %r5138;
	or.b32  	%r5141, %r5140, %r5135;
	st.local.u32 	[%rd87], %r5141;
	bra.uni 	BB4_326;

BB4_54:
	setp.eq.s32	%p35, %r1602, 90;
	@%p35 bra 	BB4_329;

	setp.eq.s32	%p36, %r1602, 91;
	@%p36 bra 	BB4_756;
	bra.uni 	BB4_56;

BB4_756:
	setp.eq.s32	%p614, %r27, 0;
	mov.u32 	%r6432, 0;
	@%p614 bra 	BB4_757;
	bra.uni 	BB4_758;

BB4_757:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10966, %r36;
	mov.u32 	%r10975, %r6432;
	bra.uni 	BB4_1015;

BB4_105:
	setp.eq.s32	%p8, %r1602, 122;
	@%p8 bra 	BB4_333;

	setp.eq.s32	%p9, %r1602, 123;
	@%p9 bra 	BB4_783;
	bra.uni 	BB4_107;

BB4_783:
	setp.eq.s32	%p627, %r27, 0;
	mov.u32 	%r10975, 0;
	@%p627 bra 	BB4_111;

	mov.u32 	%r6591, 8;
	// inline asm
	shf.r.wrap.b32 %r6560, %r39, %r38, %r6591;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6564, %r38, %r37, %r6591;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6568, %r37, %r36, %r6591;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6572, %r36, %r43, %r6591;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6576, %r43, %r42, %r6591;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6580, %r42, %r41, %r6591;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6584, %r41, %r40, %r6591;
	// inline asm
	mov.u32 	%r6590, 0;
	// inline asm
	shf.r.wrap.b32 %r6588, %r40, %r6590, %r6591;
	// inline asm
	mov.u32 	%r6592, 64;
	prmt.b32 	%r6593, %r39, %r39, %r6592;
	mov.u32 	%r6594, 1040;
	prmt.b32 	%r6595, %r6593, %r39, %r6594;
	mov.u32 	%r6596, 16912;
	prmt.b32 	%r6597, %r6595, %r39, %r6596;
	ld.const.u32 	%r6598, [%rd88];
	and.b32  	%r6599, %r6598, %r6597;
	or.b32  	%r10963, %r6599, %r6560;
	ld.const.u32 	%r6600, [%rd88+4];
	and.b32  	%r6601, %r6600, %r6597;
	or.b32  	%r10964, %r6601, %r6564;
	ld.const.u32 	%r6602, [%rd88+8];
	and.b32  	%r6603, %r6602, %r6597;
	or.b32  	%r10965, %r6603, %r6568;
	ld.const.u32 	%r6604, [%rd88+12];
	and.b32  	%r6605, %r6604, %r6597;
	or.b32  	%r10966, %r6605, %r6572;
	ld.const.u32 	%r6606, [%rd88+16];
	and.b32  	%r6607, %r6606, %r6597;
	or.b32  	%r10959, %r6607, %r6576;
	ld.const.u32 	%r6608, [%rd88+20];
	and.b32  	%r6609, %r6608, %r6597;
	or.b32  	%r10960, %r6609, %r6580;
	ld.const.u32 	%r6610, [%rd88+24];
	and.b32  	%r6611, %r6610, %r6597;
	or.b32  	%r10961, %r6611, %r6584;
	ld.const.u32 	%r6612, [%rd88+28];
	and.b32  	%r6613, %r6612, %r6597;
	or.b32  	%r10962, %r6613, %r6588;
	bra.uni 	BB4_1014;

BB4_9:
	setp.eq.s32	%p58, %r1602, 39;
	@%p58 bra 	BB4_10;
	bra.uni 	BB4_108;

BB4_10:
	setp.ge.u32	%p446, %r45, %r27;
	@%p446 bra 	BB4_108;

	and.b32  	%r5101, %r44, 3;
	shl.b32 	%r5102, %r5101, 3;
	mov.u32 	%r5103, 1;
	shl.b32 	%r5104, %r5103, %r5102;
	add.s32 	%r673, %r5104, -1;
	shr.u32 	%r5100, %r45, 2;
	setp.gt.s32	%p447, %r5100, 3;
	@%p447 bra 	BB4_474;

	setp.gt.s32	%p453, %r5100, 1;
	@%p453 bra 	BB4_471;

	setp.eq.s32	%p456, %r5100, 0;
	@%p456 bra 	BB4_14;
	bra.uni 	BB4_468;

BB4_14:
	and.b32  	%r10963, %r673, %r39;
	mov.u32 	%r10959, 0;
	mov.u32 	%r10960, %r10959;
	mov.u32 	%r10961, %r10959;
	mov.u32 	%r10962, %r10959;
	mov.u32 	%r10964, %r10959;
	bra.uni 	BB4_470;

BB4_61:
	setp.eq.s32	%p31, %r1602, 99;
	@%p31 bra 	BB4_62;
	bra.uni 	BB4_108;

BB4_62:
	and.b32  	%r8630, %r39, 1077952576;
	shr.u32 	%r8631, %r8630, 1;
	and.b32  	%r8632, %r39, -2139062144;
	shr.u32 	%r8633, %r8632, 2;
	not.b32 	%r8634, %r8633;
	and.b32  	%r8635, %r8631, %r8634;
	and.b32  	%r8636, %r39, 522133279;
	add.s32 	%r8637, %r8636, 522133279;
	mov.u32 	%r8638, -84215046;
	sub.s32 	%r8639, %r8638, %r8636;
	and.b32  	%r8640, %r8635, %r8639;
	and.b32  	%r8641, %r8640, %r8637;
	or.b32  	%r8642, %r8641, %r39;
	and.b32  	%r8643, %r38, 1077952576;
	shr.u32 	%r8644, %r8643, 1;
	and.b32  	%r8645, %r38, -2139062144;
	shr.u32 	%r8646, %r8645, 2;
	not.b32 	%r8647, %r8646;
	and.b32  	%r8648, %r8644, %r8647;
	and.b32  	%r8649, %r38, 522133279;
	add.s32 	%r8650, %r8649, 522133279;
	sub.s32 	%r8651, %r8638, %r8649;
	and.b32  	%r8652, %r8648, %r8651;
	and.b32  	%r8653, %r8652, %r8650;
	or.b32  	%r10964, %r8653, %r38;
	and.b32  	%r8654, %r37, 1077952576;
	shr.u32 	%r8655, %r8654, 1;
	and.b32  	%r8656, %r37, -2139062144;
	shr.u32 	%r8657, %r8656, 2;
	not.b32 	%r8658, %r8657;
	and.b32  	%r8659, %r8655, %r8658;
	and.b32  	%r8660, %r37, 522133279;
	add.s32 	%r8661, %r8660, 522133279;
	sub.s32 	%r8662, %r8638, %r8660;
	and.b32  	%r8663, %r8659, %r8662;
	and.b32  	%r8664, %r8663, %r8661;
	or.b32  	%r10965, %r8664, %r37;
	and.b32  	%r8665, %r36, 1077952576;
	shr.u32 	%r8666, %r8665, 1;
	and.b32  	%r8667, %r36, -2139062144;
	shr.u32 	%r8668, %r8667, 2;
	not.b32 	%r8669, %r8668;
	and.b32  	%r8670, %r8666, %r8669;
	and.b32  	%r8671, %r36, 522133279;
	add.s32 	%r8672, %r8671, 522133279;
	sub.s32 	%r8673, %r8638, %r8671;
	and.b32  	%r8674, %r8670, %r8673;
	and.b32  	%r8675, %r8674, %r8672;
	or.b32  	%r10966, %r8675, %r36;
	and.b32  	%r8676, %r43, 1077952576;
	shr.u32 	%r8677, %r8676, 1;
	and.b32  	%r8678, %r43, -2139062144;
	shr.u32 	%r8679, %r8678, 2;
	not.b32 	%r8680, %r8679;
	and.b32  	%r8681, %r8677, %r8680;
	and.b32  	%r8682, %r43, 522133279;
	add.s32 	%r8683, %r8682, 522133279;
	sub.s32 	%r8684, %r8638, %r8682;
	and.b32  	%r8685, %r8681, %r8684;
	and.b32  	%r8686, %r8685, %r8683;
	or.b32  	%r10959, %r8686, %r43;
	and.b32  	%r8687, %r42, 1077952576;
	shr.u32 	%r8688, %r8687, 1;
	and.b32  	%r8689, %r42, -2139062144;
	shr.u32 	%r8690, %r8689, 2;
	not.b32 	%r8691, %r8690;
	and.b32  	%r8692, %r8688, %r8691;
	and.b32  	%r8693, %r42, 522133279;
	add.s32 	%r8694, %r8693, 522133279;
	sub.s32 	%r8695, %r8638, %r8693;
	and.b32  	%r8696, %r8692, %r8695;
	and.b32  	%r8697, %r8696, %r8694;
	or.b32  	%r10960, %r8697, %r42;
	and.b32  	%r8698, %r41, 1077952576;
	shr.u32 	%r8699, %r8698, 1;
	and.b32  	%r8700, %r41, -2139062144;
	shr.u32 	%r8701, %r8700, 2;
	not.b32 	%r8702, %r8701;
	and.b32  	%r8703, %r8699, %r8702;
	and.b32  	%r8704, %r41, 522133279;
	add.s32 	%r8705, %r8704, 522133279;
	sub.s32 	%r8706, %r8638, %r8704;
	and.b32  	%r8707, %r8703, %r8706;
	and.b32  	%r8708, %r8707, %r8705;
	or.b32  	%r10961, %r8708, %r41;
	and.b32  	%r8709, %r40, 1077952576;
	shr.u32 	%r8710, %r8709, 1;
	and.b32  	%r8711, %r40, -2139062144;
	shr.u32 	%r8712, %r8711, 2;
	not.b32 	%r8713, %r8712;
	and.b32  	%r8714, %r8710, %r8713;
	and.b32  	%r8715, %r40, 522133279;
	add.s32 	%r8716, %r8715, 522133279;
	sub.s32 	%r8717, %r8638, %r8715;
	and.b32  	%r8718, %r8714, %r8717;
	and.b32  	%r8719, %r8718, %r8716;
	or.b32  	%r10962, %r8719, %r40;
	and.b32  	%r8720, %r8642, 64;
	shr.u32 	%r8721, %r8720, 1;
	and.b32  	%r8722, %r8642, 128;
	shr.u32 	%r8723, %r8722, 2;
	not.b32 	%r8724, %r8723;
	and.b32  	%r8725, %r8721, %r8724;
	and.b32  	%r8726, %r8642, 522133279;
	add.s32 	%r8727, %r8726, 31;
	sub.s32 	%r8728, %r8638, %r8726;
	and.b32  	%r8729, %r8725, %r8728;
	and.b32  	%r8730, %r8729, %r8727;
	not.b32 	%r8731, %r8730;
	or.b32  	%r8732, %r8731, -33;
	and.b32  	%r10963, %r8732, %r8642;
	bra.uni 	BB4_1014;

BB4_36:
	setp.eq.s32	%p45, %r1602, 75;
	@%p45 bra 	BB4_37;
	bra.uni 	BB4_108;

BB4_37:
	setp.lt.u32	%p258, %r27, 2;
	@%p258 bra 	BB4_108;

	st.local.v4.u32 	[%rd84], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd84+16], {%r43, %r42, %r41, %r40};
	add.s32 	%r3907, %r27, -2;
	cvt.s64.s32	%rd131, %r3907;
	add.s64 	%rd134, %rd84, %rd131;
	ld.local.u8 	%rs12, [%rd134];
	ld.local.u8 	%rs13, [%rd134+1];
	st.local.u8 	[%rd134], %rs13;
	st.local.u8 	[%rd134+1], %rs12;
	bra.uni 	BB4_326;

BB4_85:
	setp.eq.s32	%p18, %r1602, 114;
	@%p18 bra 	BB4_86;
	bra.uni 	BB4_108;

BB4_86:
	mov.u32 	%r7845, 32;
	sub.s32 	%r7844, %r7845, %r27;
	setp.gt.s32	%p715, %r7844, 15;
	@%p715 bra 	BB4_956;

	setp.gt.s32	%p739, %r7844, 7;
	@%p739 bra 	BB4_941;

	setp.gt.s32	%p751, %r7844, 3;
	@%p751 bra 	BB4_934;

	setp.eq.s32	%p757, %r7844, 1;
	@%p757 bra 	BB4_1004;

	setp.eq.s32	%p758, %r7844, 2;
	@%p758 bra 	BB4_91;
	bra.uni 	BB4_932;

BB4_91:
	mov.u32 	%r8346, 16;
	// inline asm
	shf.r.wrap.b32 %r10971, %r41, %r40, %r8346;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r42, %r41, %r8346;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r43, %r42, %r8346;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r36, %r43, %r8346;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r37, %r36, %r8346;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r38, %r37, %r8346;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r39, %r38, %r8346;
	// inline asm
	mov.u32 	%r8344, 0;
	// inline asm
	shf.r.wrap.b32 %r10970, %r8344, %r39, %r8346;
	// inline asm
	bra.uni 	BB4_1008;

BB4_21:
	setp.eq.s32	%p52, %r1602, 46;
	@%p52 bra 	BB4_22;
	bra.uni 	BB4_108;

BB4_22:
	add.s32 	%r3770, %r45, 1;
	setp.ge.u32	%p250, %r3770, %r27;
	@%p250 bra 	BB4_108;

	mov.u32 	%r3802, 8;
	// inline asm
	shf.r.wrap.b32 %r3771, %r39, %r38, %r3802;
	// inline asm
	st.local.u32 	[%rd84], %r3771;
	// inline asm
	shf.r.wrap.b32 %r3775, %r38, %r37, %r3802;
	// inline asm
	st.local.u32 	[%rd84+4], %r3775;
	// inline asm
	shf.r.wrap.b32 %r3779, %r37, %r36, %r3802;
	// inline asm
	st.local.u32 	[%rd84+8], %r3779;
	// inline asm
	shf.r.wrap.b32 %r3783, %r36, %r43, %r3802;
	// inline asm
	st.local.u32 	[%rd84+12], %r3783;
	// inline asm
	shf.r.wrap.b32 %r3787, %r43, %r42, %r3802;
	// inline asm
	st.local.u32 	[%rd84+16], %r3787;
	// inline asm
	shf.r.wrap.b32 %r3791, %r42, %r41, %r3802;
	// inline asm
	st.local.u32 	[%rd84+20], %r3791;
	// inline asm
	shf.r.wrap.b32 %r3795, %r41, %r40, %r3802;
	// inline asm
	st.local.u32 	[%rd84+24], %r3795;
	mov.u32 	%r3801, 0;
	// inline asm
	shf.r.wrap.b32 %r3799, %r40, %r3801, %r3802;
	// inline asm
	st.local.u32 	[%rd84+28], %r3799;
	and.b32  	%r3803, %r44, 3;
	shl.b32 	%r3804, %r3803, 3;
	mov.u32 	%r3805, 255;
	shl.b32 	%r3806, %r3805, %r3804;
	not.b32 	%r3807, %r3806;
	st.local.v4.u32 	[%rd85], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd85+16], {%r43, %r42, %r41, %r40};
	ld.local.u32 	%r3808, [%rd86];
	and.b32  	%r3809, %r3808, %r3807;
	ld.local.u32 	%r3810, [%rd87];
	and.b32  	%r3811, %r3810, %r3806;
	or.b32  	%r3812, %r3811, %r3809;
	st.local.u32 	[%rd86], %r3812;
	bra.uni 	BB4_317;

BB4_75:
	setp.eq.s32	%p25, %r1602, 107;
	@%p25 bra 	BB4_76;
	bra.uni 	BB4_108;

BB4_76:
	setp.lt.u32	%p259, %r27, 2;
	@%p259 bra 	BB4_108;

	and.b32  	%r3916, %r39, -65536;
	shl.b32 	%r3917, %r39, 8;
	and.b32  	%r3918, %r3917, 65280;
	or.b32  	%r3919, %r3918, %r3916;
	bfe.u32 	%r3920, %r39, 8, 8;
	or.b32  	%r10963, %r3919, %r3920;
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;
	bra.uni 	BB4_109;

BB4_46:
	setp.eq.s32	%p39, %r1602, 89;
	@%p39 bra 	BB4_47;
	bra.uni 	BB4_108;

BB4_47:
	setp.gt.u32	%p127, %r45, %r27;
	add.s32 	%r10975, %r45, %r27;
	setp.gt.u32	%p128, %r10975, 31;
	or.pred  	%p129, %p127, %p128;
	@%p129 bra 	BB4_108;

	setp.gt.s32	%p130, %r45, 15;
	@%p130 bra 	BB4_145;

	setp.gt.s32	%p154, %r45, 7;
	@%p154 bra 	BB4_129;

	setp.gt.s32	%p166, %r45, 3;
	@%p166 bra 	BB4_122;

	setp.gt.s32	%p172, %r45, 1;
	@%p172 bra 	BB4_119;

	setp.eq.s32	%p175, %r45, 0;
	@%p175 bra 	BB4_53;
	bra.uni 	BB4_117;

BB4_53:
	mov.u32 	%r10967, %r43;
	mov.u32 	%r10968, %r42;
	mov.u32 	%r10969, %r41;
	mov.u32 	%r10970, %r40;
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10974, %r36;
	bra.uni 	BB4_195;

BB4_98:
	setp.eq.s32	%p12, %r1602, 121;
	@%p12 bra 	BB4_99;
	bra.uni 	BB4_108;

BB4_99:
	setp.gt.u32	%p188, %r45, %r27;
	add.s32 	%r10975, %r45, %r27;
	setp.gt.u32	%p189, %r10975, 31;
	or.pred  	%p190, %p188, %p189;
	@%p190 bra 	BB4_108;

	and.b32  	%r3144, %r44, 3;
	shl.b32 	%r3145, %r3144, 3;
	mov.u32 	%r3146, 1;
	shl.b32 	%r3147, %r3146, %r3145;
	add.s32 	%r237, %r3147, -1;
	shr.u32 	%r3143, %r45, 2;
	setp.gt.s32	%p191, %r3143, 3;
	@%p191 bra 	BB4_221;

	setp.gt.s32	%p197, %r3143, 1;
	@%p197 bra 	BB4_218;

	setp.eq.s32	%p200, %r3143, 0;
	@%p200 bra 	BB4_103;
	bra.uni 	BB4_216;

BB4_103:
	and.b32  	%r10971, %r237, %r39;
	mov.u32 	%r10967, 0;
	mov.u32 	%r10968, %r10967;
	mov.u32 	%r10969, %r10967;
	mov.u32 	%r10970, %r10967;
	mov.u32 	%r10972, %r10967;
	bra.uni 	BB4_104;

BB4_324:
	setp.gt.u32	%p255, %r27, %r47;
	setp.lt.u32	%p256, %r45, %r27;
	and.pred  	%p257, %p256, %p255;
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10966, %r36;
	mov.u32 	%r10975, %r27;
	@!%p257 bra 	BB4_1015;
	bra.uni 	BB4_325;

BB4_325:
	st.local.v4.u32 	[%rd84], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd84+16], {%r43, %r42, %r41, %r40};
	cvt.u64.u32	%rd127, %r45;
	add.s64 	%rd128, %rd84, %rd127;
	ld.local.u8 	%rs10, [%rd128];
	cvt.u64.u32	%rd129, %r47;
	add.s64 	%rd130, %rd84, %rd129;
	ld.local.u8 	%rs11, [%rd130];
	st.local.u8 	[%rd128], %rs11;
	st.local.u8 	[%rd130], %rs10;
	bra.uni 	BB4_326;

BB4_17:
	setp.eq.s32	%p56, %r1602, 44;
	@%p56 bra 	BB4_18;
	bra.uni 	BB4_108;

BB4_18:
	setp.lt.u32	%p247, %r45, %r27;
	setp.ne.s32	%p248, %r45, 0;
	and.pred  	%p249, %p248, %p247;
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10966, %r36;
	mov.u32 	%r10975, %r27;
	@!%p249 bra 	BB4_1015;
	bra.uni 	BB4_316;

BB4_316:
	mov.u32 	%r3751, 24;
	// inline asm
	shf.r.wrap.b32 %r3720, %r41, %r40, %r3751;
	// inline asm
	st.local.u32 	[%rd84+28], %r3720;
	// inline asm
	shf.r.wrap.b32 %r3724, %r42, %r41, %r3751;
	// inline asm
	st.local.u32 	[%rd84+24], %r3724;
	// inline asm
	shf.r.wrap.b32 %r3728, %r43, %r42, %r3751;
	// inline asm
	st.local.u32 	[%rd84+20], %r3728;
	// inline asm
	shf.r.wrap.b32 %r3732, %r36, %r43, %r3751;
	// inline asm
	st.local.u32 	[%rd84+16], %r3732;
	// inline asm
	shf.r.wrap.b32 %r3736, %r37, %r36, %r3751;
	// inline asm
	st.local.u32 	[%rd84+12], %r3736;
	// inline asm
	shf.r.wrap.b32 %r3740, %r38, %r37, %r3751;
	// inline asm
	st.local.u32 	[%rd84+8], %r3740;
	// inline asm
	shf.r.wrap.b32 %r3744, %r39, %r38, %r3751;
	// inline asm
	st.local.u32 	[%rd84+4], %r3744;
	mov.u32 	%r3749, 0;
	// inline asm
	shf.r.wrap.b32 %r3748, %r3749, %r39, %r3751;
	// inline asm
	st.local.u32 	[%rd84], %r3748;
	and.b32  	%r3752, %r44, 3;
	shl.b32 	%r3753, %r3752, 3;
	mov.u32 	%r3754, 255;
	shl.b32 	%r3755, %r3754, %r3753;
	not.b32 	%r3756, %r3755;
	st.local.v4.u32 	[%rd85], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd85+16], {%r43, %r42, %r41, %r40};
	ld.local.u32 	%r3757, [%rd86];
	and.b32  	%r3758, %r3757, %r3756;
	ld.local.u32 	%r3759, [%rd87];
	and.b32  	%r3760, %r3759, %r3755;
	or.b32  	%r3761, %r3760, %r3758;
	st.local.u32 	[%rd86], %r3761;

BB4_317:
	ld.local.v4.u32 	{%r10963, %r10964, %r10965, %r10966}, [%rd85];
	ld.local.v4.u32 	{%r10959, %r10960, %r10961, %r10962}, [%rd85+16];
	bra.uni 	BB4_1014;

BB4_911:
	add.s32 	%r10975, %r27, %r27;
	setp.gt.u32	%p703, %r10975, 31;
	@%p703 bra 	BB4_108;

	shr.u32 	%r7665, %r27, 2;
	and.b32  	%r7666, %r27, 3;
	mov.u32 	%r7667, 4;
	sub.s32 	%r7668, %r7667, %r7666;
	shl.b32 	%r7669, %r7668, 2;
	mov.u32 	%r7670, 1985229328;
	shr.u32 	%r7671, %r7670, %r7669;
	and.b32  	%r1301, %r7671, 65535;
	mov.u32 	%r10943, 0;
	setp.gt.s32	%p704, %r7665, 3;
	@%p704 bra 	BB4_920;

	setp.gt.s32	%p710, %r7665, 1;
	@%p710 bra 	BB4_917;

	setp.eq.s32	%p713, %r7665, 0;
	@%p713 bra 	BB4_930;
	bra.uni 	BB4_915;

BB4_930:
	// inline asm
	prmt.b32 %r10950, %r41, %r40, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10949, %r42, %r41, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10948, %r43, %r42, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10947, %r36, %r43, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10946, %r37, %r36, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10945, %r38, %r37, %r1301;
	// inline asm
	// inline asm
	prmt.b32 %r10944, %r39, %r38, %r1301;
	// inline asm
	mov.u32 	%r7841, 0;
	// inline asm
	prmt.b32 %r10943, %r7841, %r39, %r1301;
	// inline asm
	bra.uni 	BB4_931;

BB4_65:
	setp.eq.s32	%p29, %r1602, 102;
	@%p29 bra 	BB4_66;
	bra.uni 	BB4_108;

BB4_66:
	add.s32 	%r10975, %r27, %r27;
	setp.gt.u32	%p630, %r10975, 31;
	@%p630 bra 	BB4_108;

	mov.u32 	%r6678, 32;
	sub.s32 	%r6677, %r6678, %r27;
	mov.u32 	%r10917, 0;
	setp.gt.s32	%p631, %r6677, 15;
	@%p631 bra 	BB4_817;

	setp.gt.s32	%p655, %r6677, 7;
	@%p655 bra 	BB4_801;

	setp.gt.s32	%p667, %r6677, 3;
	@%p667 bra 	BB4_794;

	setp.gt.s32	%p673, %r6677, 1;
	@%p673 bra 	BB4_791;

	setp.eq.s32	%p676, %r6677, 0;
	@%p676 bra 	BB4_72;
	bra.uni 	BB4_789;

BB4_72:
	mov.u32 	%r10974, %r43;
	mov.u32 	%r10973, %r42;
	mov.u32 	%r10972, %r41;
	mov.u32 	%r10971, %r40;
	mov.u32 	%r10970, %r39;
	mov.u32 	%r10969, %r38;
	mov.u32 	%r10968, %r37;
	mov.u32 	%r10967, %r36;
	bra.uni 	BB4_868;

BB4_322:
	setp.ge.u32	%p254, %r45, %r27;
	@%p254 bra 	BB4_108;

	and.b32  	%r3880, %r44, 3;
	shl.b32 	%r3881, %r3880, 3;
	mov.u32 	%r3882, 255;
	shl.b32 	%r3883, %r3882, %r3881;
	not.b32 	%r3884, %r3883;
	st.local.v4.u32 	[%rd84], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd84+16], {%r43, %r42, %r41, %r40};
	ld.local.u32 	%r3885, [%rd87];
	and.b32  	%r3886, %r3885, %r3884;
	and.b32  	%r3887, %r3885, %r3883;
	shl.b32 	%r3888, %r3887, 1;
	and.b32  	%r3889, %r3888, %r3883;
	or.b32  	%r3890, %r3889, %r3886;
	st.local.u32 	[%rd87], %r3890;
	bra.uni 	BB4_326;

BB4_41:
	setp.eq.s32	%p43, %r1602, 82;
	@%p43 bra 	BB4_42;
	bra.uni 	BB4_108;

BB4_42:
	setp.ge.u32	%p253, %r45, %r27;
	@%p253 bra 	BB4_108;

	and.b32  	%r3861, %r44, 3;
	shl.b32 	%r3862, %r3861, 3;
	mov.u32 	%r3863, 255;
	shl.b32 	%r3864, %r3863, %r3862;
	not.b32 	%r3865, %r3864;
	st.local.v4.u32 	[%rd84], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd84+16], {%r43, %r42, %r41, %r40};
	ld.local.u32 	%r3866, [%rd87];
	and.b32  	%r3867, %r3866, %r3865;
	and.b32  	%r3868, %r3866, %r3864;
	shr.u32 	%r3869, %r3868, 1;
	and.b32  	%r3870, %r3869, %r3864;
	or.b32  	%r3871, %r3870, %r3867;
	st.local.u32 	[%rd87], %r3871;

BB4_326:
	ld.local.v4.u32 	{%r10963, %r10964, %r10965, %r10966}, [%rd84];
	ld.local.v4.u32 	{%r10959, %r10960, %r10961, %r10962}, [%rd84+16];
	bra.uni 	BB4_1014;

BB4_466:
	mov.u32 	%r4909, 0;
	mov.u32 	%r4922, 8;
	// inline asm
	bfe.u32 %r4795, %r39, %r4909, %r4922;
	// inline asm
	setp.eq.s32	%p373, %r4795, %r45;
	selp.u32	%r4923, 1, 0, %p373;
	// inline asm
	bfe.u32 %r4799, %r39, %r4922, %r4922;
	// inline asm
	setp.eq.s32	%p374, %r4799, %r45;
	or.b32  	%r4924, %r4923, 2;
	selp.b32	%r4925, %r4924, %r4923, %p374;
	mov.u32 	%r4917, 16;
	// inline asm
	bfe.u32 %r4803, %r39, %r4917, %r4922;
	// inline asm
	setp.eq.s32	%p375, %r4803, %r45;
	or.b32  	%r4926, %r4925, 4;
	selp.b32	%r4927, %r4926, %r4925, %p375;
	mov.u32 	%r4921, 24;
	// inline asm
	bfe.u32 %r4807, %r39, %r4921, %r4922;
	// inline asm
	setp.eq.s32	%p376, %r4807, %r45;
	or.b32  	%r4928, %r4927, 8;
	selp.b32	%r657, %r4928, %r4927, %p376;
	// inline asm
	bfe.u32 %r4811, %r38, %r4909, %r4922;
	// inline asm
	setp.eq.s32	%p377, %r4811, %r45;
	selp.u32	%r4929, 1, 0, %p377;
	// inline asm
	bfe.u32 %r4815, %r38, %r4922, %r4922;
	// inline asm
	setp.eq.s32	%p378, %r4815, %r45;
	or.b32  	%r4930, %r4929, 2;
	selp.b32	%r4931, %r4930, %r4929, %p378;
	// inline asm
	bfe.u32 %r4819, %r38, %r4917, %r4922;
	// inline asm
	setp.eq.s32	%p379, %r4819, %r45;
	or.b32  	%r4932, %r4931, 4;
	selp.b32	%r4933, %r4932, %r4931, %p379;
	// inline asm
	bfe.u32 %r4823, %r38, %r4921, %r4922;
	// inline asm
	setp.eq.s32	%p380, %r4823, %r45;
	or.b32  	%r4934, %r4933, 8;
	selp.b32	%r658, %r4934, %r4933, %p380;
	// inline asm
	bfe.u32 %r4827, %r37, %r4909, %r4922;
	// inline asm
	setp.eq.s32	%p381, %r4827, %r45;
	selp.u32	%r4935, 1, 0, %p381;
	// inline asm
	bfe.u32 %r4831, %r37, %r4922, %r4922;
	// inline asm
	setp.eq.s32	%p382, %r4831, %r45;
	or.b32  	%r4936, %r4935, 2;
	selp.b32	%r4937, %r4936, %r4935, %p382;
	// inline asm
	bfe.u32 %r4835, %r37, %r4917, %r4922;
	// inline asm
	setp.eq.s32	%p383, %r4835, %r45;
	or.b32  	%r4938, %r4937, 4;
	selp.b32	%r4939, %r4938, %r4937, %p383;
	// inline asm
	bfe.u32 %r4839, %r37, %r4921, %r4922;
	// inline asm
	setp.eq.s32	%p384, %r4839, %r45;
	or.b32  	%r4940, %r4939, 8;
	selp.b32	%r659, %r4940, %r4939, %p384;
	// inline asm
	bfe.u32 %r4843, %r36, %r4909, %r4922;
	// inline asm
	setp.eq.s32	%p385, %r4843, %r45;
	selp.u32	%r4941, 1, 0, %p385;
	// inline asm
	bfe.u32 %r4847, %r36, %r4922, %r4922;
	// inline asm
	setp.eq.s32	%p386, %r4847, %r45;
	or.b32  	%r4942, %r4941, 2;
	selp.b32	%r4943, %r4942, %r4941, %p386;
	// inline asm
	bfe.u32 %r4851, %r36, %r4917, %r4922;
	// inline asm
	setp.eq.s32	%p387, %r4851, %r45;
	or.b32  	%r4944, %r4943, 4;
	selp.b32	%r4945, %r4944, %r4943, %p387;
	// inline asm
	bfe.u32 %r4855, %r36, %r4921, %r4922;
	// inline asm
	setp.eq.s32	%p388, %r4855, %r45;
	or.b32  	%r4946, %r4945, 8;
	selp.b32	%r660, %r4946, %r4945, %p388;
	// inline asm
	bfe.u32 %r4859, %r43, %r4909, %r4922;
	// inline asm
	setp.eq.s32	%p389, %r4859, %r45;
	selp.u32	%r4947, 1, 0, %p389;
	// inline asm
	bfe.u32 %r4863, %r43, %r4922, %r4922;
	// inline asm
	setp.eq.s32	%p390, %r4863, %r45;
	or.b32  	%r4948, %r4947, 2;
	selp.b32	%r4949, %r4948, %r4947, %p390;
	// inline asm
	bfe.u32 %r4867, %r43, %r4917, %r4922;
	// inline asm
	setp.eq.s32	%p391, %r4867, %r45;
	or.b32  	%r4950, %r4949, 4;
	selp.b32	%r4951, %r4950, %r4949, %p391;
	// inline asm
	bfe.u32 %r4871, %r43, %r4921, %r4922;
	// inline asm
	setp.eq.s32	%p392, %r4871, %r45;
	or.b32  	%r4952, %r4951, 8;
	selp.b32	%r661, %r4952, %r4951, %p392;
	// inline asm
	bfe.u32 %r4875, %r42, %r4909, %r4922;
	// inline asm
	setp.eq.s32	%p393, %r4875, %r45;
	selp.u32	%r4953, 1, 0, %p393;
	// inline asm
	bfe.u32 %r4879, %r42, %r4922, %r4922;
	// inline asm
	setp.eq.s32	%p394, %r4879, %r45;
	or.b32  	%r4954, %r4953, 2;
	selp.b32	%r4955, %r4954, %r4953, %p394;
	// inline asm
	bfe.u32 %r4883, %r42, %r4917, %r4922;
	// inline asm
	setp.eq.s32	%p395, %r4883, %r45;
	or.b32  	%r4956, %r4955, 4;
	selp.b32	%r4957, %r4956, %r4955, %p395;
	// inline asm
	bfe.u32 %r4887, %r42, %r4921, %r4922;
	// inline asm
	setp.eq.s32	%p396, %r4887, %r45;
	or.b32  	%r4958, %r4957, 8;
	selp.b32	%r662, %r4958, %r4957, %p396;
	// inline asm
	bfe.u32 %r4891, %r41, %r4909, %r4922;
	// inline asm
	setp.eq.s32	%p397, %r4891, %r45;
	selp.u32	%r4959, 1, 0, %p397;
	// inline asm
	bfe.u32 %r4895, %r41, %r4922, %r4922;
	// inline asm
	setp.eq.s32	%p398, %r4895, %r45;
	or.b32  	%r4960, %r4959, 2;
	selp.b32	%r4961, %r4960, %r4959, %p398;
	// inline asm
	bfe.u32 %r4899, %r41, %r4917, %r4922;
	// inline asm
	setp.eq.s32	%p399, %r4899, %r45;
	or.b32  	%r4962, %r4961, 4;
	selp.b32	%r4963, %r4962, %r4961, %p399;
	// inline asm
	bfe.u32 %r4903, %r41, %r4921, %r4922;
	// inline asm
	setp.eq.s32	%p400, %r4903, %r45;
	or.b32  	%r4964, %r4963, 8;
	selp.b32	%r663, %r4964, %r4963, %p400;
	// inline asm
	bfe.u32 %r4907, %r40, %r4909, %r4922;
	// inline asm
	setp.eq.s32	%p401, %r4907, %r45;
	selp.u32	%r4965, 1, 0, %p401;
	// inline asm
	bfe.u32 %r4911, %r40, %r4922, %r4922;
	// inline asm
	setp.eq.s32	%p402, %r4911, %r45;
	or.b32  	%r4966, %r4965, 2;
	selp.b32	%r4967, %r4966, %r4965, %p402;
	// inline asm
	bfe.u32 %r4915, %r40, %r4917, %r4922;
	// inline asm
	setp.eq.s32	%p403, %r4915, %r45;
	or.b32  	%r4968, %r4967, 4;
	selp.b32	%r4969, %r4968, %r4967, %p403;
	// inline asm
	bfe.u32 %r4919, %r40, %r4921, %r4922;
	// inline asm
	setp.eq.s32	%p404, %r4919, %r45;
	or.b32  	%r4970, %r4969, 8;
	selp.b32	%r664, %r4970, %r4969, %p404;
	add.s32 	%r4971, %r658, %r657;
	add.s32 	%r4972, %r4971, %r659;
	add.s32 	%r4973, %r4972, %r660;
	add.s32 	%r4974, %r4973, %r661;
	add.s32 	%r4975, %r4974, %r662;
	add.s32 	%r4976, %r4975, %r663;
	neg.s32 	%r4977, %r664;
	setp.eq.s32	%p405, %r4976, %r4977;
	@%p405 bra 	BB4_108;

	and.b32  	%r4978, %r657, 1;
	setp.eq.b32	%p406, %r4978, 1;
	not.pred 	%p407, %p406;
	and.b32  	%r4979, %r39, -256;
	or.b32  	%r4980, %r47, %r4979;
	selp.b32	%r4981, %r39, %r4980, %p407;
	and.b32  	%r4982, %r657, 2;
	setp.eq.s32	%p408, %r4982, 0;
	and.b32  	%r4983, %r4981, -65281;
	shl.b32 	%r4984, %r47, 8;
	or.b32  	%r4985, %r4983, %r4984;
	selp.b32	%r4986, %r4981, %r4985, %p408;
	and.b32  	%r4987, %r657, 4;
	setp.eq.s32	%p409, %r4987, 0;
	and.b32  	%r4988, %r4986, -16711681;
	shl.b32 	%r4989, %r47, 16;
	or.b32  	%r4990, %r4988, %r4989;
	selp.b32	%r4991, %r4986, %r4990, %p409;
	and.b32  	%r4992, %r657, 8;
	setp.eq.s32	%p410, %r4992, 0;
	and.b32  	%r4993, %r4991, 16777215;
	prmt.b32 	%r4994, %r46, %r4993, 1620;
	selp.b32	%r10963, %r4991, %r4994, %p410;
	and.b32  	%r4995, %r658, 1;
	setp.eq.b32	%p411, %r4995, 1;
	not.pred 	%p412, %p411;
	and.b32  	%r4996, %r38, -256;
	or.b32  	%r4997, %r47, %r4996;
	selp.b32	%r4998, %r38, %r4997, %p412;
	and.b32  	%r4999, %r658, 2;
	setp.eq.s32	%p413, %r4999, 0;
	and.b32  	%r5000, %r4998, -65281;
	or.b32  	%r5001, %r5000, %r4984;
	selp.b32	%r5002, %r4998, %r5001, %p413;
	and.b32  	%r5003, %r658, 4;
	setp.eq.s32	%p414, %r5003, 0;
	and.b32  	%r5004, %r5002, -16711681;
	or.b32  	%r5005, %r5004, %r4989;
	selp.b32	%r5006, %r5002, %r5005, %p414;
	and.b32  	%r5007, %r658, 8;
	setp.eq.s32	%p415, %r5007, 0;
	and.b32  	%r5008, %r5006, 16777215;
	prmt.b32 	%r5009, %r46, %r5008, 1620;
	selp.b32	%r10964, %r5006, %r5009, %p415;
	and.b32  	%r5010, %r659, 1;
	setp.eq.b32	%p416, %r5010, 1;
	not.pred 	%p417, %p416;
	and.b32  	%r5011, %r37, -256;
	or.b32  	%r5012, %r47, %r5011;
	selp.b32	%r5013, %r37, %r5012, %p417;
	and.b32  	%r5014, %r659, 2;
	setp.eq.s32	%p418, %r5014, 0;
	and.b32  	%r5015, %r5013, -65281;
	or.b32  	%r5016, %r5015, %r4984;
	selp.b32	%r5017, %r5013, %r5016, %p418;
	and.b32  	%r5018, %r659, 4;
	setp.eq.s32	%p419, %r5018, 0;
	and.b32  	%r5019, %r5017, -16711681;
	or.b32  	%r5020, %r5019, %r4989;
	selp.b32	%r5021, %r5017, %r5020, %p419;
	and.b32  	%r5022, %r659, 8;
	setp.eq.s32	%p420, %r5022, 0;
	and.b32  	%r5023, %r5021, 16777215;
	prmt.b32 	%r5024, %r46, %r5023, 1620;
	selp.b32	%r10965, %r5021, %r5024, %p420;
	and.b32  	%r5025, %r660, 1;
	setp.eq.b32	%p421, %r5025, 1;
	not.pred 	%p422, %p421;
	and.b32  	%r5026, %r36, -256;
	or.b32  	%r5027, %r47, %r5026;
	selp.b32	%r5028, %r36, %r5027, %p422;
	and.b32  	%r5029, %r660, 2;
	setp.eq.s32	%p423, %r5029, 0;
	and.b32  	%r5030, %r5028, -65281;
	or.b32  	%r5031, %r5030, %r4984;
	selp.b32	%r5032, %r5028, %r5031, %p423;
	and.b32  	%r5033, %r660, 4;
	setp.eq.s32	%p424, %r5033, 0;
	and.b32  	%r5034, %r5032, -16711681;
	or.b32  	%r5035, %r5034, %r4989;
	selp.b32	%r5036, %r5032, %r5035, %p424;
	and.b32  	%r5037, %r660, 8;
	setp.eq.s32	%p425, %r5037, 0;
	and.b32  	%r5038, %r5036, 16777215;
	prmt.b32 	%r5039, %r46, %r5038, 1620;
	selp.b32	%r10966, %r5036, %r5039, %p425;
	and.b32  	%r5040, %r661, 1;
	setp.eq.b32	%p426, %r5040, 1;
	not.pred 	%p427, %p426;
	and.b32  	%r5041, %r43, -256;
	or.b32  	%r5042, %r47, %r5041;
	selp.b32	%r5043, %r43, %r5042, %p427;
	and.b32  	%r5044, %r661, 2;
	setp.eq.s32	%p428, %r5044, 0;
	and.b32  	%r5045, %r5043, -65281;
	or.b32  	%r5046, %r5045, %r4984;
	selp.b32	%r5047, %r5043, %r5046, %p428;
	and.b32  	%r5048, %r661, 4;
	setp.eq.s32	%p429, %r5048, 0;
	and.b32  	%r5049, %r5047, -16711681;
	or.b32  	%r5050, %r5049, %r4989;
	selp.b32	%r5051, %r5047, %r5050, %p429;
	and.b32  	%r5052, %r661, 8;
	setp.eq.s32	%p430, %r5052, 0;
	and.b32  	%r5053, %r5051, 16777215;
	prmt.b32 	%r5054, %r46, %r5053, 1620;
	selp.b32	%r10959, %r5051, %r5054, %p430;
	and.b32  	%r5055, %r662, 1;
	setp.eq.b32	%p431, %r5055, 1;
	not.pred 	%p432, %p431;
	and.b32  	%r5056, %r42, -256;
	or.b32  	%r5057, %r47, %r5056;
	selp.b32	%r5058, %r42, %r5057, %p432;
	and.b32  	%r5059, %r662, 2;
	setp.eq.s32	%p433, %r5059, 0;
	and.b32  	%r5060, %r5058, -65281;
	or.b32  	%r5061, %r5060, %r4984;
	selp.b32	%r5062, %r5058, %r5061, %p433;
	and.b32  	%r5063, %r662, 4;
	setp.eq.s32	%p434, %r5063, 0;
	and.b32  	%r5064, %r5062, -16711681;
	or.b32  	%r5065, %r5064, %r4989;
	selp.b32	%r5066, %r5062, %r5065, %p434;
	and.b32  	%r5067, %r662, 8;
	setp.eq.s32	%p435, %r5067, 0;
	and.b32  	%r5068, %r5066, 16777215;
	prmt.b32 	%r5069, %r46, %r5068, 1620;
	selp.b32	%r10960, %r5066, %r5069, %p435;
	and.b32  	%r5070, %r663, 1;
	setp.eq.b32	%p436, %r5070, 1;
	not.pred 	%p437, %p436;
	and.b32  	%r5071, %r41, -256;
	or.b32  	%r5072, %r47, %r5071;
	selp.b32	%r5073, %r41, %r5072, %p437;
	and.b32  	%r5074, %r663, 2;
	setp.eq.s32	%p438, %r5074, 0;
	and.b32  	%r5075, %r5073, -65281;
	or.b32  	%r5076, %r5075, %r4984;
	selp.b32	%r5077, %r5073, %r5076, %p438;
	and.b32  	%r5078, %r663, 4;
	setp.eq.s32	%p439, %r5078, 0;
	and.b32  	%r5079, %r5077, -16711681;
	or.b32  	%r5080, %r5079, %r4989;
	selp.b32	%r5081, %r5077, %r5080, %p439;
	and.b32  	%r5082, %r663, 8;
	setp.eq.s32	%p440, %r5082, 0;
	and.b32  	%r5083, %r5081, 16777215;
	prmt.b32 	%r5084, %r46, %r5083, 1620;
	selp.b32	%r10961, %r5081, %r5084, %p440;
	and.b32  	%r5085, %r664, 1;
	setp.eq.b32	%p441, %r5085, 1;
	not.pred 	%p442, %p441;
	and.b32  	%r5086, %r40, -256;
	or.b32  	%r5087, %r47, %r5086;
	selp.b32	%r5088, %r40, %r5087, %p442;
	and.b32  	%r5089, %r664, 2;
	setp.eq.s32	%p443, %r5089, 0;
	and.b32  	%r5090, %r5088, -65281;
	or.b32  	%r5091, %r5090, %r4984;
	selp.b32	%r5092, %r5088, %r5091, %p443;
	and.b32  	%r5093, %r664, 4;
	setp.eq.s32	%p444, %r5093, 0;
	and.b32  	%r5094, %r5092, -16711681;
	or.b32  	%r5095, %r5094, %r4989;
	selp.b32	%r5096, %r5092, %r5095, %p444;
	and.b32  	%r5097, %r664, 8;
	setp.eq.s32	%p445, %r5097, 0;
	and.b32  	%r5098, %r5096, 16777215;
	prmt.b32 	%r5099, %r46, %r5098, 1620;
	selp.b32	%r10962, %r5096, %r5099, %p445;
	bra.uni 	BB4_1014;

BB4_94:
	setp.eq.s32	%p16, %r1602, 117;
	@%p16 bra 	BB4_95;
	bra.uni 	BB4_108;

BB4_95:
	and.b32  	%r8733, %r39, 1077952576;
	shr.u32 	%r8734, %r8733, 1;
	and.b32  	%r8735, %r39, -2139062144;
	shr.u32 	%r8736, %r8735, 2;
	not.b32 	%r8737, %r8736;
	and.b32  	%r8738, %r8734, %r8737;
	and.b32  	%r8739, %r39, 522133279;
	add.s32 	%r8740, %r8739, 522133279;
	mov.u32 	%r8741, -84215046;
	sub.s32 	%r8742, %r8741, %r8739;
	and.b32  	%r8743, %r8738, %r8742;
	and.b32  	%r8744, %r8743, %r8740;
	not.b32 	%r8745, %r8744;
	and.b32  	%r10963, %r39, %r8745;
	and.b32  	%r8746, %r38, 1077952576;
	shr.u32 	%r8747, %r8746, 1;
	and.b32  	%r8748, %r38, -2139062144;
	shr.u32 	%r8749, %r8748, 2;
	not.b32 	%r8750, %r8749;
	and.b32  	%r8751, %r8747, %r8750;
	and.b32  	%r8752, %r38, 522133279;
	add.s32 	%r8753, %r8752, 522133279;
	sub.s32 	%r8754, %r8741, %r8752;
	and.b32  	%r8755, %r8751, %r8754;
	and.b32  	%r8756, %r8755, %r8753;
	not.b32 	%r8757, %r8756;
	and.b32  	%r10964, %r38, %r8757;
	and.b32  	%r8758, %r37, 1077952576;
	shr.u32 	%r8759, %r8758, 1;
	and.b32  	%r8760, %r37, -2139062144;
	shr.u32 	%r8761, %r8760, 2;
	not.b32 	%r8762, %r8761;
	and.b32  	%r8763, %r8759, %r8762;
	and.b32  	%r8764, %r37, 522133279;
	add.s32 	%r8765, %r8764, 522133279;
	sub.s32 	%r8766, %r8741, %r8764;
	and.b32  	%r8767, %r8763, %r8766;
	and.b32  	%r8768, %r8767, %r8765;
	not.b32 	%r8769, %r8768;
	and.b32  	%r10965, %r37, %r8769;
	and.b32  	%r8770, %r36, 1077952576;
	shr.u32 	%r8771, %r8770, 1;
	and.b32  	%r8772, %r36, -2139062144;
	shr.u32 	%r8773, %r8772, 2;
	not.b32 	%r8774, %r8773;
	and.b32  	%r8775, %r8771, %r8774;
	and.b32  	%r8776, %r36, 522133279;
	add.s32 	%r8777, %r8776, 522133279;
	sub.s32 	%r8778, %r8741, %r8776;
	and.b32  	%r8779, %r8775, %r8778;
	and.b32  	%r8780, %r8779, %r8777;
	not.b32 	%r8781, %r8780;
	and.b32  	%r10966, %r36, %r8781;
	and.b32  	%r8782, %r43, 1077952576;
	shr.u32 	%r8783, %r8782, 1;
	and.b32  	%r8784, %r43, -2139062144;
	shr.u32 	%r8785, %r8784, 2;
	not.b32 	%r8786, %r8785;
	and.b32  	%r8787, %r8783, %r8786;
	and.b32  	%r8788, %r43, 522133279;
	add.s32 	%r8789, %r8788, 522133279;
	sub.s32 	%r8790, %r8741, %r8788;
	and.b32  	%r8791, %r8787, %r8790;
	and.b32  	%r8792, %r8791, %r8789;
	not.b32 	%r8793, %r8792;
	and.b32  	%r10959, %r43, %r8793;
	and.b32  	%r8794, %r42, 1077952576;
	shr.u32 	%r8795, %r8794, 1;
	and.b32  	%r8796, %r42, -2139062144;
	shr.u32 	%r8797, %r8796, 2;
	not.b32 	%r8798, %r8797;
	and.b32  	%r8799, %r8795, %r8798;
	and.b32  	%r8800, %r42, 522133279;
	add.s32 	%r8801, %r8800, 522133279;
	sub.s32 	%r8802, %r8741, %r8800;
	and.b32  	%r8803, %r8799, %r8802;
	and.b32  	%r8804, %r8803, %r8801;
	not.b32 	%r8805, %r8804;
	and.b32  	%r10960, %r42, %r8805;
	and.b32  	%r8806, %r41, 1077952576;
	shr.u32 	%r8807, %r8806, 1;
	and.b32  	%r8808, %r41, -2139062144;
	shr.u32 	%r8809, %r8808, 2;
	not.b32 	%r8810, %r8809;
	and.b32  	%r8811, %r8807, %r8810;
	and.b32  	%r8812, %r41, 522133279;
	add.s32 	%r8813, %r8812, 522133279;
	sub.s32 	%r8814, %r8741, %r8812;
	and.b32  	%r8815, %r8811, %r8814;
	and.b32  	%r8816, %r8815, %r8813;
	not.b32 	%r8817, %r8816;
	and.b32  	%r10961, %r41, %r8817;
	and.b32  	%r8818, %r40, 1077952576;
	shr.u32 	%r8819, %r8818, 1;
	and.b32  	%r8820, %r40, -2139062144;
	shr.u32 	%r8821, %r8820, 2;
	not.b32 	%r8822, %r8821;
	and.b32  	%r8823, %r8819, %r8822;
	and.b32  	%r8824, %r40, 522133279;
	add.s32 	%r8825, %r8824, 522133279;
	sub.s32 	%r8826, %r8741, %r8824;
	and.b32  	%r8827, %r8823, %r8826;
	and.b32  	%r8828, %r8827, %r8825;
	not.b32 	%r8829, %r8828;
	and.b32  	%r10962, %r40, %r8829;
	bra.uni 	BB4_1014;

BB4_440:
	mov.u32 	%r10975, 0;
	mov.u32 	%r4709, 8;
	// inline asm
	bfe.u32 %r4582, %r39, %r10975, %r4709;
	// inline asm
	setp.eq.s32	%p327, %r4582, %r45;
	selp.u32	%r4710, 1, 0, %p327;
	// inline asm
	bfe.u32 %r4586, %r39, %r4709, %r4709;
	// inline asm
	setp.eq.s32	%p328, %r4586, %r45;
	or.b32  	%r4711, %r4710, 2;
	selp.b32	%r4712, %r4711, %r4710, %p328;
	mov.u32 	%r4704, 16;
	// inline asm
	bfe.u32 %r4590, %r39, %r4704, %r4709;
	// inline asm
	setp.eq.s32	%p329, %r4590, %r45;
	or.b32  	%r4713, %r4712, 4;
	selp.b32	%r4714, %r4713, %r4712, %p329;
	mov.u32 	%r4708, 24;
	// inline asm
	bfe.u32 %r4594, %r39, %r4708, %r4709;
	// inline asm
	setp.eq.s32	%p330, %r4594, %r45;
	or.b32  	%r4715, %r4714, 8;
	selp.b32	%r4716, %r4715, %r4714, %p330;
	// inline asm
	bfe.u32 %r4598, %r38, %r10975, %r4709;
	// inline asm
	setp.eq.s32	%p331, %r4598, %r45;
	selp.u32	%r4717, 1, 0, %p331;
	// inline asm
	bfe.u32 %r4602, %r38, %r4709, %r4709;
	// inline asm
	setp.eq.s32	%p332, %r4602, %r45;
	or.b32  	%r4718, %r4717, 2;
	selp.b32	%r4719, %r4718, %r4717, %p332;
	// inline asm
	bfe.u32 %r4606, %r38, %r4704, %r4709;
	// inline asm
	setp.eq.s32	%p333, %r4606, %r45;
	or.b32  	%r4720, %r4719, 4;
	selp.b32	%r4721, %r4720, %r4719, %p333;
	// inline asm
	bfe.u32 %r4610, %r38, %r4708, %r4709;
	// inline asm
	setp.eq.s32	%p334, %r4610, %r45;
	or.b32  	%r4722, %r4721, 8;
	selp.b32	%r4723, %r4722, %r4721, %p334;
	// inline asm
	bfe.u32 %r4614, %r37, %r10975, %r4709;
	// inline asm
	setp.eq.s32	%p335, %r4614, %r45;
	selp.u32	%r4724, 1, 0, %p335;
	// inline asm
	bfe.u32 %r4618, %r37, %r4709, %r4709;
	// inline asm
	setp.eq.s32	%p336, %r4618, %r45;
	or.b32  	%r4725, %r4724, 2;
	selp.b32	%r4726, %r4725, %r4724, %p336;
	// inline asm
	bfe.u32 %r4622, %r37, %r4704, %r4709;
	// inline asm
	setp.eq.s32	%p337, %r4622, %r45;
	or.b32  	%r4727, %r4726, 4;
	selp.b32	%r4728, %r4727, %r4726, %p337;
	// inline asm
	bfe.u32 %r4626, %r37, %r4708, %r4709;
	// inline asm
	setp.eq.s32	%p338, %r4626, %r45;
	or.b32  	%r4729, %r4728, 8;
	selp.b32	%r4730, %r4729, %r4728, %p338;
	// inline asm
	bfe.u32 %r4630, %r36, %r10975, %r4709;
	// inline asm
	setp.eq.s32	%p339, %r4630, %r45;
	selp.u32	%r4731, 1, 0, %p339;
	// inline asm
	bfe.u32 %r4634, %r36, %r4709, %r4709;
	// inline asm
	setp.eq.s32	%p340, %r4634, %r45;
	or.b32  	%r4732, %r4731, 2;
	selp.b32	%r4733, %r4732, %r4731, %p340;
	// inline asm
	bfe.u32 %r4638, %r36, %r4704, %r4709;
	// inline asm
	setp.eq.s32	%p341, %r4638, %r45;
	or.b32  	%r4734, %r4733, 4;
	selp.b32	%r4735, %r4734, %r4733, %p341;
	// inline asm
	bfe.u32 %r4642, %r36, %r4708, %r4709;
	// inline asm
	setp.eq.s32	%p342, %r4642, %r45;
	or.b32  	%r4736, %r4735, 8;
	selp.b32	%r4737, %r4736, %r4735, %p342;
	// inline asm
	bfe.u32 %r4646, %r43, %r10975, %r4709;
	// inline asm
	setp.eq.s32	%p343, %r4646, %r45;
	selp.u32	%r4738, 1, 0, %p343;
	// inline asm
	bfe.u32 %r4650, %r43, %r4709, %r4709;
	// inline asm
	setp.eq.s32	%p344, %r4650, %r45;
	or.b32  	%r4739, %r4738, 2;
	selp.b32	%r4740, %r4739, %r4738, %p344;
	// inline asm
	bfe.u32 %r4654, %r43, %r4704, %r4709;
	// inline asm
	setp.eq.s32	%p345, %r4654, %r45;
	or.b32  	%r4741, %r4740, 4;
	selp.b32	%r4742, %r4741, %r4740, %p345;
	// inline asm
	bfe.u32 %r4658, %r43, %r4708, %r4709;
	// inline asm
	setp.eq.s32	%p346, %r4658, %r45;
	or.b32  	%r4743, %r4742, 8;
	selp.b32	%r4744, %r4743, %r4742, %p346;
	// inline asm
	bfe.u32 %r4662, %r42, %r10975, %r4709;
	// inline asm
	setp.eq.s32	%p347, %r4662, %r45;
	selp.u32	%r4745, 1, 0, %p347;
	// inline asm
	bfe.u32 %r4666, %r42, %r4709, %r4709;
	// inline asm
	setp.eq.s32	%p348, %r4666, %r45;
	or.b32  	%r4746, %r4745, 2;
	selp.b32	%r4747, %r4746, %r4745, %p348;
	// inline asm
	bfe.u32 %r4670, %r42, %r4704, %r4709;
	// inline asm
	setp.eq.s32	%p349, %r4670, %r45;
	or.b32  	%r4748, %r4747, 4;
	selp.b32	%r4749, %r4748, %r4747, %p349;
	// inline asm
	bfe.u32 %r4674, %r42, %r4708, %r4709;
	// inline asm
	setp.eq.s32	%p350, %r4674, %r45;
	or.b32  	%r4750, %r4749, 8;
	selp.b32	%r4751, %r4750, %r4749, %p350;
	// inline asm
	bfe.u32 %r4678, %r41, %r10975, %r4709;
	// inline asm
	setp.eq.s32	%p351, %r4678, %r45;
	selp.u32	%r4752, 1, 0, %p351;
	// inline asm
	bfe.u32 %r4682, %r41, %r4709, %r4709;
	// inline asm
	setp.eq.s32	%p352, %r4682, %r45;
	or.b32  	%r4753, %r4752, 2;
	selp.b32	%r4754, %r4753, %r4752, %p352;
	// inline asm
	bfe.u32 %r4686, %r41, %r4704, %r4709;
	// inline asm
	setp.eq.s32	%p353, %r4686, %r45;
	or.b32  	%r4755, %r4754, 4;
	selp.b32	%r4756, %r4755, %r4754, %p353;
	// inline asm
	bfe.u32 %r4690, %r41, %r4708, %r4709;
	// inline asm
	setp.eq.s32	%p354, %r4690, %r45;
	or.b32  	%r4757, %r4756, 8;
	selp.b32	%r4758, %r4757, %r4756, %p354;
	// inline asm
	bfe.u32 %r4694, %r40, %r10975, %r4709;
	// inline asm
	setp.eq.s32	%p355, %r4694, %r45;
	selp.u32	%r4759, 1, 0, %p355;
	// inline asm
	bfe.u32 %r4698, %r40, %r4709, %r4709;
	// inline asm
	setp.eq.s32	%p356, %r4698, %r45;
	or.b32  	%r4760, %r4759, 2;
	selp.b32	%r4761, %r4760, %r4759, %p356;
	// inline asm
	bfe.u32 %r4702, %r40, %r4704, %r4709;
	// inline asm
	setp.eq.s32	%p357, %r4702, %r45;
	or.b32  	%r4762, %r4761, 4;
	selp.b32	%r4763, %r4762, %r4761, %p357;
	// inline asm
	bfe.u32 %r4706, %r40, %r4708, %r4709;
	// inline asm
	setp.eq.s32	%p358, %r4706, %r45;
	or.b32  	%r4764, %r4763, 8;
	selp.b32	%r4765, %r4764, %r4763, %p358;
	add.s32 	%r4766, %r4723, %r4716;
	add.s32 	%r4767, %r4766, %r4730;
	add.s32 	%r4768, %r4767, %r4737;
	add.s32 	%r4769, %r4768, %r4744;
	add.s32 	%r4770, %r4769, %r4751;
	add.s32 	%r4771, %r4770, %r4758;
	neg.s32 	%r4772, %r4765;
	setp.eq.s32	%p359, %r4771, %r4772;
	@%p359 bra 	BB4_108;

	mov.u64 	%rd2760, 0;
	st.local.v4.u32 	[%rd84], {%r39, %r38, %r37, %r36};
	st.local.v4.u32 	[%rd84+16], {%r43, %r42, %r41, %r40};
	st.local.v2.u64 	[%rd85], {%rd2760, %rd2760};
	st.local.v2.u64 	[%rd85+16], {%rd2760, %rd2760};
	cvt.u16.u32	%rs23, %r39;
	setp.eq.s32	%p360, %r27, 0;
	@%p360 bra 	BB4_465;

	cvt.u16.u32	%rs2, %r44;
	and.b32  	%r624, %r27, 3;
	setp.eq.s32	%p361, %r624, 0;
	mov.u32 	%r10870, 0;
	mov.u32 	%r10975, %r10870;
	@%p361 bra 	BB4_455;

	setp.eq.s32	%p362, %r624, 1;
	mov.u32 	%r10865, 0;
	@%p362 bra 	BB4_444;
	bra.uni 	BB4_445;

BB4_444:
	mov.u32 	%r10975, %r10865;
	bra.uni 	BB4_452;

BB4_26:
	setp.eq.s32	%p50, %r1602, 68;
	@%p50 bra 	BB4_27;
	bra.uni 	BB4_108;

BB4_27:
	setp.ge.u32	%p593, %r45, %r27;
	@%p593 bra 	BB4_108;

	mov.u32 	%r6395, 8;
	// inline asm
	shf.r.wrap.b32 %r10971, %r39, %r38, %r6395;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10972, %r38, %r37, %r6395;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10973, %r37, %r36, %r6395;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10974, %r36, %r43, %r6395;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10967, %r43, %r42, %r6395;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10968, %r42, %r41, %r6395;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10969, %r41, %r40, %r6395;
	// inline asm
	mov.u32 	%r6394, 0;
	// inline asm
	shf.r.wrap.b32 %r10970, %r40, %r6394, %r6395;
	// inline asm
	and.b32  	%r6397, %r44, 3;
	shl.b32 	%r6398, %r6397, 3;
	mov.u32 	%r6399, 1;
	shl.b32 	%r6400, %r6399, %r6398;
	add.s32 	%r978, %r6400, -1;
	neg.s32 	%r979, %r6400;
	shr.u32 	%r6396, %r45, 2;
	setp.gt.s32	%p594, %r6396, 3;
	@%p594 bra 	BB4_740;

	setp.gt.s32	%p600, %r6396, 1;
	@%p600 bra 	BB4_736;

	setp.eq.s32	%p603, %r6396, 0;
	@%p603 bra 	BB4_31;
	bra.uni 	BB4_734;

BB4_31:
	and.b32  	%r6415, %r978, %r39;
	and.b32  	%r6416, %r10971, %r979;
	or.b32  	%r10963, %r6416, %r6415;
	mov.u32 	%r10959, %r10967;
	mov.u32 	%r10960, %r10968;
	mov.u32 	%r10961, %r10969;
	mov.u32 	%r10962, %r10970;
	mov.u32 	%r10964, %r10972;
	bra.uni 	BB4_32;

BB4_1013:
	and.b32  	%r8830, %r39, 1077952576;
	shr.u32 	%r8831, %r8830, 1;
	and.b32  	%r8832, %r39, -2139062144;
	shr.u32 	%r8833, %r8832, 2;
	not.b32 	%r8834, %r8833;
	and.b32  	%r8835, %r8831, %r8834;
	and.b32  	%r8836, %r39, 522133279;
	add.s32 	%r8837, %r8836, 522133279;
	mov.u32 	%r8838, -84215046;
	sub.s32 	%r8839, %r8838, %r8836;
	and.b32  	%r8840, %r8835, %r8839;
	and.b32  	%r8841, %r8840, %r8837;
	or.b32  	%r10963, %r8841, %r39;
	and.b32  	%r8842, %r38, 1077952576;
	shr.u32 	%r8843, %r8842, 1;
	and.b32  	%r8844, %r38, -2139062144;
	shr.u32 	%r8845, %r8844, 2;
	not.b32 	%r8846, %r8845;
	and.b32  	%r8847, %r8843, %r8846;
	and.b32  	%r8848, %r38, 522133279;
	add.s32 	%r8849, %r8848, 522133279;
	sub.s32 	%r8850, %r8838, %r8848;
	and.b32  	%r8851, %r8847, %r8850;
	and.b32  	%r8852, %r8851, %r8849;
	or.b32  	%r10964, %r8852, %r38;
	and.b32  	%r8853, %r37, 1077952576;
	shr.u32 	%r8854, %r8853, 1;
	and.b32  	%r8855, %r37, -2139062144;
	shr.u32 	%r8856, %r8855, 2;
	not.b32 	%r8857, %r8856;
	and.b32  	%r8858, %r8854, %r8857;
	and.b32  	%r8859, %r37, 522133279;
	add.s32 	%r8860, %r8859, 522133279;
	sub.s32 	%r8861, %r8838, %r8859;
	and.b32  	%r8862, %r8858, %r8861;
	and.b32  	%r8863, %r8862, %r8860;
	or.b32  	%r10965, %r8863, %r37;
	and.b32  	%r8864, %r36, 1077952576;
	shr.u32 	%r8865, %r8864, 1;
	and.b32  	%r8866, %r36, -2139062144;
	shr.u32 	%r8867, %r8866, 2;
	not.b32 	%r8868, %r8867;
	and.b32  	%r8869, %r8865, %r8868;
	and.b32  	%r8870, %r36, 522133279;
	add.s32 	%r8871, %r8870, 522133279;
	sub.s32 	%r8872, %r8838, %r8870;
	and.b32  	%r8873, %r8869, %r8872;
	and.b32  	%r8874, %r8873, %r8871;
	or.b32  	%r10966, %r8874, %r36;
	and.b32  	%r8875, %r43, 1077952576;
	shr.u32 	%r8876, %r8875, 1;
	and.b32  	%r8877, %r43, -2139062144;
	shr.u32 	%r8878, %r8877, 2;
	not.b32 	%r8879, %r8878;
	and.b32  	%r8880, %r8876, %r8879;
	and.b32  	%r8881, %r43, 522133279;
	add.s32 	%r8882, %r8881, 522133279;
	sub.s32 	%r8883, %r8838, %r8881;
	and.b32  	%r8884, %r8880, %r8883;
	and.b32  	%r8885, %r8884, %r8882;
	or.b32  	%r10959, %r8885, %r43;
	and.b32  	%r8886, %r42, 1077952576;
	shr.u32 	%r8887, %r8886, 1;
	and.b32  	%r8888, %r42, -2139062144;
	shr.u32 	%r8889, %r8888, 2;
	not.b32 	%r8890, %r8889;
	and.b32  	%r8891, %r8887, %r8890;
	and.b32  	%r8892, %r42, 522133279;
	add.s32 	%r8893, %r8892, 522133279;
	sub.s32 	%r8894, %r8838, %r8892;
	and.b32  	%r8895, %r8891, %r8894;
	and.b32  	%r8896, %r8895, %r8893;
	or.b32  	%r10960, %r8896, %r42;
	and.b32  	%r8897, %r41, 1077952576;
	shr.u32 	%r8898, %r8897, 1;
	and.b32  	%r8899, %r41, -2139062144;
	shr.u32 	%r8900, %r8899, 2;
	not.b32 	%r8901, %r8900;
	and.b32  	%r8902, %r8898, %r8901;
	and.b32  	%r8903, %r41, 522133279;
	add.s32 	%r8904, %r8903, 522133279;
	sub.s32 	%r8905, %r8838, %r8903;
	and.b32  	%r8906, %r8902, %r8905;
	and.b32  	%r8907, %r8906, %r8904;
	or.b32  	%r10961, %r8907, %r41;
	and.b32  	%r8908, %r40, 1077952576;
	shr.u32 	%r8909, %r8908, 1;
	and.b32  	%r8910, %r40, -2139062144;
	shr.u32 	%r8911, %r8910, 2;
	not.b32 	%r8912, %r8911;
	and.b32  	%r8913, %r8909, %r8912;
	and.b32  	%r8914, %r40, 522133279;
	add.s32 	%r8915, %r8914, 522133279;
	sub.s32 	%r8916, %r8838, %r8914;
	and.b32  	%r8917, %r8913, %r8916;
	and.b32  	%r8918, %r8917, %r8915;
	or.b32  	%r10962, %r8918, %r40;
	bra.uni 	BB4_1014;

BB4_80:
	setp.eq.s32	%p23, %r1602, 112;
	@%p23 bra 	BB4_81;
	bra.uni 	BB4_108;

BB4_81:
	mad.lo.s32 	%r7468, %r45, %r27, %r27;
	setp.gt.u32	%p689, %r7468, 31;
	@%p689 bra 	BB4_108;

	setp.eq.s32	%p690, %r45, 0;
	mov.u32 	%r7469, 0;
	mov.u32 	%r10925, %r7469;
	mov.u32 	%r10975, %r27;
	mov.u32 	%r10966, %r36;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10962, %r40;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10959, %r43;
	@%p690 bra 	BB4_889;
	bra.uni 	BB4_890;

BB4_889:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10966, %r36;
	mov.u32 	%r10967, %r43;
	mov.u32 	%r10968, %r42;
	mov.u32 	%r10969, %r41;
	mov.u32 	%r10970, %r40;
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10974, %r36;
	bra.uni 	BB4_1014;

BB4_890:
	and.b32  	%r7479, %r10975, 3;
	mov.u32 	%r7480, 4;
	sub.s32 	%r7481, %r7480, %r7479;
	shl.b32 	%r7482, %r7481, 2;
	mov.u32 	%r7483, 1985229328;
	shr.u32 	%r7484, %r7483, %r7482;
	and.b32  	%r1245, %r7484, 65535;
	shr.u32 	%r7478, %r10975, 2;
	setp.gt.s32	%p691, %r7478, 3;
	@%p691 bra 	BB4_898;

	setp.gt.s32	%p697, %r7478, 1;
	@%p697 bra 	BB4_895;

	setp.eq.s32	%p700, %r7478, 0;
	@%p700 bra 	BB4_908;
	bra.uni 	BB4_893;

BB4_908:
	// inline asm
	prmt.b32 %r10942, %r41, %r40, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10941, %r42, %r41, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10940, %r43, %r42, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10939, %r36, %r43, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10938, %r37, %r36, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10937, %r38, %r37, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10936, %r39, %r38, %r1245;
	// inline asm
	mov.u32 	%r7654, 0;
	// inline asm
	prmt.b32 %r10935, %r7654, %r39, %r1245;
	// inline asm
	bra.uni 	BB4_909;

BB4_898:
	setp.gt.s32	%p692, %r7478, 5;
	@%p692 bra 	BB4_902;

	setp.eq.s32	%p695, %r7478, 4;
	@%p695 bra 	BB4_906;
	bra.uni 	BB4_900;

BB4_906:
	// inline asm
	prmt.b32 %r10942, %r37, %r36, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10941, %r38, %r37, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10940, %r39, %r38, %r1245;
	// inline asm
	mov.u32 	%r10935, 0;
	// inline asm
	prmt.b32 %r10939, %r10935, %r39, %r1245;
	// inline asm
	mov.u32 	%r10936, %r10935;
	mov.u32 	%r10937, %r10935;
	mov.u32 	%r10938, %r10935;
	bra.uni 	BB4_909;

BB4_895:
	setp.eq.s32	%p698, %r7478, 2;
	@%p698 bra 	BB4_907;
	bra.uni 	BB4_896;

BB4_907:
	// inline asm
	prmt.b32 %r10942, %r43, %r42, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10941, %r36, %r43, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10940, %r37, %r36, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10939, %r38, %r37, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10938, %r39, %r38, %r1245;
	// inline asm
	mov.u32 	%r10935, 0;
	// inline asm
	prmt.b32 %r10937, %r10935, %r39, %r1245;
	// inline asm
	mov.u32 	%r10936, %r10935;
	bra.uni 	BB4_909;

BB4_902:
	setp.eq.s32	%p693, %r7478, 6;
	@%p693 bra 	BB4_905;
	bra.uni 	BB4_903;

BB4_905:
	// inline asm
	prmt.b32 %r10942, %r39, %r38, %r1245;
	// inline asm
	mov.u32 	%r10935, 0;
	// inline asm
	prmt.b32 %r10941, %r10935, %r39, %r1245;
	// inline asm
	mov.u32 	%r10936, %r10935;
	mov.u32 	%r10937, %r10935;
	mov.u32 	%r10938, %r10935;
	mov.u32 	%r10939, %r10935;
	mov.u32 	%r10940, %r10935;
	bra.uni 	BB4_909;

BB4_893:
	setp.eq.s32	%p701, %r7478, 1;
	mov.u32 	%r10935, %r7469;
	mov.u32 	%r10936, %r7469;
	mov.u32 	%r10937, %r7469;
	mov.u32 	%r10938, %r7469;
	mov.u32 	%r10939, %r7469;
	mov.u32 	%r10940, %r7469;
	mov.u32 	%r10941, %r7469;
	mov.u32 	%r10942, %r7469;
	@%p701 bra 	BB4_894;
	bra.uni 	BB4_909;

BB4_894:
	// inline asm
	prmt.b32 %r10942, %r42, %r41, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10941, %r43, %r42, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10940, %r36, %r43, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10939, %r37, %r36, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10938, %r38, %r37, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10937, %r39, %r38, %r1245;
	// inline asm
	mov.u32 	%r10935, 0;
	// inline asm
	prmt.b32 %r10936, %r10935, %r39, %r1245;
	// inline asm
	bra.uni 	BB4_909;

BB4_900:
	setp.eq.s32	%p696, %r7478, 5;
	mov.u32 	%r10935, %r7469;
	mov.u32 	%r10936, %r7469;
	mov.u32 	%r10937, %r7469;
	mov.u32 	%r10938, %r7469;
	mov.u32 	%r10939, %r7469;
	mov.u32 	%r10940, %r7469;
	mov.u32 	%r10941, %r7469;
	mov.u32 	%r10942, %r7469;
	@%p696 bra 	BB4_901;
	bra.uni 	BB4_909;

BB4_901:
	// inline asm
	prmt.b32 %r10942, %r38, %r37, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10941, %r39, %r38, %r1245;
	// inline asm
	mov.u32 	%r10935, 0;
	// inline asm
	prmt.b32 %r10940, %r10935, %r39, %r1245;
	// inline asm
	mov.u32 	%r10936, %r10935;
	mov.u32 	%r10937, %r10935;
	mov.u32 	%r10938, %r10935;
	mov.u32 	%r10939, %r10935;
	bra.uni 	BB4_909;

BB4_896:
	setp.eq.s32	%p699, %r7478, 3;
	mov.u32 	%r10935, %r7469;
	mov.u32 	%r10936, %r7469;
	mov.u32 	%r10937, %r7469;
	mov.u32 	%r10938, %r7469;
	mov.u32 	%r10939, %r7469;
	mov.u32 	%r10940, %r7469;
	mov.u32 	%r10941, %r7469;
	mov.u32 	%r10942, %r7469;
	@%p699 bra 	BB4_897;
	bra.uni 	BB4_909;

BB4_897:
	// inline asm
	prmt.b32 %r10942, %r36, %r43, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10941, %r37, %r36, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10940, %r38, %r37, %r1245;
	// inline asm
	// inline asm
	prmt.b32 %r10939, %r39, %r38, %r1245;
	// inline asm
	mov.u32 	%r10935, 0;
	// inline asm
	prmt.b32 %r10938, %r10935, %r39, %r1245;
	// inline asm
	mov.u32 	%r10936, %r10935;
	mov.u32 	%r10937, %r10935;
	bra.uni 	BB4_909;

BB4_903:
	setp.ne.s32	%p694, %r7478, 7;
	mov.u32 	%r10935, %r7469;
	mov.u32 	%r10936, %r7469;
	mov.u32 	%r10937, %r7469;
	mov.u32 	%r10938, %r7469;
	mov.u32 	%r10939, %r7469;
	mov.u32 	%r10940, %r7469;
	mov.u32 	%r10941, %r7469;
	mov.u32 	%r10942, %r7469;
	@%p694 bra 	BB4_909;

	mov.u32 	%r10935, 0;
	// inline asm
	prmt.b32 %r10942, %r10935, %r39, %r1245;
	// inline asm
	mov.u32 	%r10936, %r10935;
	mov.u32 	%r10937, %r10935;
	mov.u32 	%r10938, %r10935;
	mov.u32 	%r10939, %r10935;
	mov.u32 	%r10940, %r10935;
	mov.u32 	%r10941, %r10935;

BB4_909:
	or.b32  	%r10963, %r10935, %r10963;
	or.b32  	%r10964, %r10936, %r10964;
	or.b32  	%r10965, %r10937, %r10965;
	or.b32  	%r10966, %r10938, %r10966;
	or.b32  	%r10959, %r10939, %r10959;
	or.b32  	%r10960, %r10940, %r10960;
	or.b32  	%r10961, %r10941, %r10961;
	or.b32  	%r10962, %r10942, %r10962;
	add.s32 	%r10975, %r10975, %r27;
	add.s32 	%r10925, %r10925, 1;
	setp.lt.u32	%p702, %r10925, %r45;
	@%p702 bra 	BB4_890;

	mov.u32 	%r10967, %r43;
	mov.u32 	%r10968, %r42;
	mov.u32 	%r10969, %r41;
	mov.u32 	%r10970, %r40;
	mov.u32 	%r10971, %r39;
	mov.u32 	%r10972, %r38;
	mov.u32 	%r10973, %r37;
	mov.u32 	%r10974, %r36;
	bra.uni 	BB4_1015;

BB4_329:
	setp.eq.s32	%p263, %r27, 0;
	add.s32 	%r3949, %r45, %r27;
	setp.gt.u32	%p264, %r3949, 31;
	or.pred  	%p265, %p263, %p264;
	@%p265 bra 	BB4_108;

	setp.eq.s32	%p266, %r45, 0;
	@%p266 bra 	BB4_108;

	ld.const.u32 	%r3951, [%rd88];
	ld.const.u32 	%r3952, [%rd88+4];
	ld.const.u32 	%r3953, [%rd88+8];
	ld.const.u32 	%r3954, [%rd88+12];
	ld.const.u32 	%r3955, [%rd88+16];
	ld.const.u32 	%r3956, [%rd88+20];
	ld.const.u32 	%r3957, [%rd88+24];
	ld.const.u32 	%r3958, [%rd88+28];
	and.b32  	%r3959, %r3958, %r40;
	and.b32  	%r3960, %r3957, %r41;
	and.b32  	%r3961, %r3956, %r42;
	and.b32  	%r3962, %r3955, %r43;
	and.b32  	%r3963, %r3954, %r36;
	and.b32  	%r3964, %r3953, %r37;
	and.b32  	%r3965, %r3952, %r38;
	and.b32  	%r3966, %r3951, %r39;
	or.b32  	%r3967, %r3965, %r3966;
	or.b32  	%r3968, %r3967, %r3964;
	or.b32  	%r3969, %r3968, %r3963;
	or.b32  	%r3970, %r3969, %r3962;
	or.b32  	%r3971, %r3970, %r3961;
	or.b32  	%r3972, %r3971, %r3960;
	or.b32  	%r3973, %r3972, %r3959;
	add.s32 	%r3974, %r27, -1;
	and.b32  	%r3975, %r3974, 3;
	shl.b32 	%r3976, %r3975, 3;
	shr.u32 	%r3977, %r3973, %r3976;
	and.b32  	%r3978, %r3977, 255;
	mov.u32 	%r3979, 64;
	prmt.b32 	%r3980, %r3978, %r3978, %r3979;
	mov.u32 	%r3981, 1040;
	prmt.b32 	%r3982, %r3980, %r3978, %r3981;
	mov.u32 	%r3983, 16912;
	prmt.b32 	%r460, %r3982, %r3978, %r3983;
	mov.u32 	%r10836, 0;

BB4_332:
	mul.wide.u32 	%rd135, %r27, 64;
	add.s64 	%rd137, %rd124, %rd135;
	ld.const.u32 	%r3984, [%rd137];
	and.b32  	%r3985, %r3984, %r460;
	or.b32  	%r39, %r3985, %r39;
	ld.const.u32 	%r3986, [%rd137+4];
	and.b32  	%r3987, %r3986, %r460;
	or.b32  	%r38, %r3987, %r38;
	ld.const.u32 	%r3988, [%rd137+8];
	and.b32  	%r3989, %r3988, %r460;
	or.b32  	%r37, %r3989, %r37;
	ld.const.u32 	%r3990, [%rd137+12];
	and.b32  	%r3991, %r3990, %r460;
	or.b32  	%r36, %r3991, %r36;
	ld.const.u32 	%r3992, [%rd137+16];
	and.b32  	%r3993, %r3992, %r460;
	or.b32  	%r43, %r3993, %r43;
	ld.const.u32 	%r3994, [%rd137+20];
	and.b32  	%r3995, %r3994, %r460;
	or.b32  	%r42, %r3995, %r42;
	ld.const.u32 	%r3996, [%rd137+24];
	and.b32  	%r3997, %r3996, %r460;
	or.b32  	%r41, %r3997, %r41;
	ld.const.u32 	%r3998, [%rd137+28];
	and.b32  	%r3999, %r3998, %r460;
	or.b32  	%r40, %r3999, %r40;
	add.s32 	%r27, %r27, 1;
	add.s32 	%r10836, %r10836, 1;
	setp.lt.u32	%p267, %r10836, %r45;
	@%p267 bra 	BB4_332;
	bra.uni 	BB4_108;

BB4_56:
	setp.eq.s32	%p37, %r1602, 93;
	@%p37 bra 	BB4_753;
	bra.uni 	BB4_108;

BB4_753:
	setp.eq.s32	%p605, %r27, 0;
	mov.u32 	%r6417, 0;
	@%p605 bra 	BB4_754;
	bra.uni 	BB4_755;

BB4_754:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10966, %r36;
	mov.u32 	%r10975, %r6417;
	bra.uni 	BB4_1015;

BB4_333:
	setp.eq.s32	%p268, %r27, 0;
	add.s32 	%r10975, %r45, %r27;
	setp.gt.u32	%p269, %r10975, 31;
	or.pred  	%p270, %p268, %p269;
	@%p270 bra 	BB4_108;

	mov.u32 	%r4000, 64;
	prmt.b32 	%r4001, %r39, %r39, %r4000;
	mov.u32 	%r4002, 1040;
	prmt.b32 	%r4003, %r4001, %r39, %r4002;
	mov.u32 	%r4004, 16912;
	prmt.b32 	%r10971, %r4003, %r39, %r4004;
	setp.gt.s32	%p271, %r45, 15;
	@%p271 bra 	BB4_363;

	setp.gt.s32	%p295, %r45, 7;
	@%p295 bra 	BB4_348;

	setp.gt.s32	%p307, %r45, 3;
	@%p307 bra 	BB4_341;

	setp.eq.s32	%p313, %r45, 1;
	@%p313 bra 	BB4_412;

	setp.eq.s32	%p314, %r45, 2;
	@%p314 bra 	BB4_411;
	bra.uni 	BB4_339;

BB4_411:
	mov.u32 	%r4505, 16;
	// inline asm
	shf.r.wrap.b32 %r4474, %r41, %r40, %r4505;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r42, %r41, %r4505;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r43, %r42, %r4505;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r36, %r43, %r4505;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r4490, %r37, %r36, %r4505;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r38, %r37, %r4505;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r39, %r38, %r4505;
	// inline asm
	mov.u32 	%r4503, 0;
	// inline asm
	shf.r.wrap.b32 %r10850, %r4503, %r39, %r4505;
	// inline asm
	mov.u32 	%r43, %r4474;
	mov.u32 	%r39, %r4490;
	bra.uni 	BB4_416;

BB4_107:
	setp.eq.s32	%p10, %r1602, 125;
	@%p10 bra 	BB4_759;
	bra.uni 	BB4_108;

BB4_759:
	setp.eq.s32	%p615, %r27, 0;
	mov.u32 	%r6465, 0;
	@%p615 bra 	BB4_760;
	bra.uni 	BB4_761;

BB4_760:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;
	mov.u32 	%r10963, %r39;
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10966, %r36;
	mov.u32 	%r10975, %r6465;
	bra.uni 	BB4_1015;

BB4_108:
	mov.u32 	%r10959, %r43;
	mov.u32 	%r10960, %r42;
	mov.u32 	%r10961, %r41;
	mov.u32 	%r10962, %r40;
	mov.u32 	%r10963, %r39;

BB4_109:
	mov.u32 	%r10964, %r38;
	mov.u32 	%r10965, %r37;
	mov.u32 	%r10966, %r36;

BB4_1014:
	mov.u32 	%r10975, %r27;

BB4_1015:
	add.s32 	%r10786, %r10786, 1;
	shl.b64 	%rd187, %rd83, 7;
	add.s64 	%rd188, %rd93, %rd187;
	mul.wide.u32 	%rd189, %r10786, 4;
	add.s64 	%rd190, %rd188, %rd189;
	ld.const.u32 	%r10785, [%rd190];
	setp.ne.s32	%p761, %r10785, 0;
	@%p761 bra 	BB4_4;

BB4_1016:
	ld.const.u64 	%rd2837, [k_sha512+608];
	ld.const.u64 	%rd2836, [k_sha512+600];
	ld.const.u64 	%rd2835, [k_sha512+592];
	ld.const.u64 	%rd2834, [k_sha512+584];
	ld.const.u64 	%rd2833, [k_sha512+576];
	ld.const.u64 	%rd2832, [k_sha512+568];
	ld.const.u64 	%rd2831, [k_sha512+560];
	ld.const.u64 	%rd2830, [k_sha512+552];
	ld.const.u64 	%rd2829, [k_sha512+544];
	ld.const.u64 	%rd2828, [k_sha512+536];
	ld.const.u64 	%rd2827, [k_sha512+528];
	ld.const.u64 	%rd2826, [k_sha512+520];
	ld.const.u64 	%rd2825, [k_sha512+512];
	ld.const.u64 	%rd2824, [k_sha512+504];
	ld.const.u64 	%rd2823, [k_sha512+496];
	ld.const.u64 	%rd2822, [k_sha512+488];
	ld.const.u64 	%rd2821, [k_sha512+480];
	ld.const.u64 	%rd2820, [k_sha512+472];
	ld.const.u64 	%rd2819, [k_sha512+464];
	ld.const.u64 	%rd2818, [k_sha512+456];
	ld.const.u64 	%rd2817, [k_sha512+448];
	ld.const.u64 	%rd2816, [k_sha512+440];
	ld.const.u64 	%rd2815, [k_sha512+432];
	ld.const.u64 	%rd2814, [k_sha512+424];
	ld.const.u64 	%rd2813, [k_sha512+416];
	ld.const.u64 	%rd2812, [k_sha512+408];
	ld.const.u64 	%rd2811, [k_sha512+400];
	ld.const.u64 	%rd2810, [k_sha512+392];
	ld.const.u64 	%rd2809, [k_sha512+384];
	ld.const.u64 	%rd2808, [k_sha512+376];
	ld.const.u64 	%rd2807, [k_sha512+368];
	ld.const.u64 	%rd2806, [k_sha512+360];
	ld.const.u64 	%rd2805, [k_sha512+352];
	ld.const.u64 	%rd2804, [k_sha512+344];
	ld.const.u64 	%rd2803, [k_sha512+336];
	ld.const.u64 	%rd2802, [k_sha512+328];
	ld.const.u64 	%rd2801, [k_sha512+320];
	ld.const.u64 	%rd2800, [k_sha512+312];
	ld.const.u64 	%rd2799, [k_sha512+304];
	ld.const.u64 	%rd2798, [k_sha512+296];
	ld.const.u64 	%rd2797, [k_sha512+288];
	ld.const.u64 	%rd2796, [k_sha512+280];
	ld.const.u64 	%rd2795, [k_sha512+272];
	ld.const.u64 	%rd2794, [k_sha512+264];
	ld.const.u64 	%rd2793, [k_sha512+256];
	ld.const.u64 	%rd2792, [k_sha512+248];
	ld.const.u64 	%rd2791, [k_sha512+240];
	ld.const.u64 	%rd2790, [k_sha512+232];
	ld.const.u64 	%rd2789, [k_sha512+224];
	ld.const.u64 	%rd2788, [k_sha512+216];
	ld.const.u64 	%rd2787, [k_sha512+208];
	ld.const.u64 	%rd2786, [k_sha512+200];
	ld.const.u64 	%rd2785, [k_sha512+192];
	ld.const.u64 	%rd2784, [k_sha512+184];
	ld.const.u64 	%rd2783, [k_sha512+176];
	ld.const.u64 	%rd2782, [k_sha512+168];
	ld.const.u64 	%rd2781, [k_sha512+160];
	ld.const.u64 	%rd2780, [k_sha512+152];
	ld.const.u64 	%rd2779, [k_sha512+144];
	ld.const.u64 	%rd2778, [k_sha512+136];
	ld.const.u64 	%rd2777, [k_sha512+128];
	ld.const.u64 	%rd2776, [k_sha512+120];
	ld.const.u64 	%rd2775, [k_sha512+112];
	ld.const.u64 	%rd2774, [k_sha512+104];
	ld.const.u64 	%rd2773, [k_sha512+96];
	ld.const.u64 	%rd2772, [k_sha512+88];
	ld.const.u64 	%rd2771, [k_sha512+80];
	ld.const.u64 	%rd2770, [k_sha512+72];
	ld.const.u64 	%rd2769, [k_sha512+64];
	ld.const.u64 	%rd2768, [k_sha512+56];
	ld.const.u64 	%rd2767, [k_sha512+48];
	ld.const.u64 	%rd2766, [k_sha512+40];
	ld.const.u64 	%rd2765, [k_sha512+32];
	ld.const.u64 	%rd2764, [k_sha512+24];
	ld.const.u64 	%rd2763, [k_sha512+16];
	ld.const.u64 	%rd2762, [k_sha512+8];
	ld.const.u64 	%rd2761, [k_sha512];
	mul.wide.u32 	%rd191, %r10975, 64;
	mov.u64 	%rd192, c_append_helper;
	add.s64 	%rd193, %rd192, %rd191;
	ld.const.u32 	%r8947, [%rd193];
	and.b32  	%r8948, %r8947, -2139062144;
	or.b32  	%r8920, %r8948, %r10963;
	ld.const.u32 	%r8949, [%rd193+4];
	and.b32  	%r8950, %r8949, -2139062144;
	or.b32  	%r8922, %r8950, %r10964;
	ld.const.u32 	%r8951, [%rd193+8];
	and.b32  	%r8952, %r8951, -2139062144;
	or.b32  	%r8924, %r8952, %r10965;
	ld.const.u32 	%r8953, [%rd193+12];
	and.b32  	%r8954, %r8953, -2139062144;
	or.b32  	%r8926, %r8954, %r10966;
	ld.const.u32 	%r8955, [%rd193+16];
	and.b32  	%r8956, %r8955, -2139062144;
	or.b32  	%r8928, %r8956, %r10959;
	ld.const.u32 	%r8957, [%rd193+20];
	and.b32  	%r8958, %r8957, -2139062144;
	or.b32  	%r8930, %r8958, %r10960;
	ld.const.u32 	%r8959, [%rd193+24];
	and.b32  	%r8960, %r8959, -2139062144;
	or.b32  	%r8932, %r8960, %r10961;
	ld.const.u32 	%r8961, [%rd193+28];
	and.b32  	%r8962, %r8961, -2139062144;
	or.b32  	%r8934, %r8962, %r10962;
	// inline asm
	prmt.b32 %r8919, %r8920, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8921, %r8922, 0, 0x0123;
	// inline asm
	mov.b64	%rd194, {%r8921, %r8919};
	// inline asm
	prmt.b32 %r8923, %r8924, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8925, %r8926, 0, 0x0123;
	// inline asm
	mov.b64	%rd195, {%r8925, %r8923};
	// inline asm
	prmt.b32 %r8927, %r8928, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8929, %r8930, 0, 0x0123;
	// inline asm
	mov.b64	%rd196, {%r8929, %r8927};
	// inline asm
	prmt.b32 %r8931, %r8932, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8933, %r8934, 0, 0x0123;
	// inline asm
	mov.b64	%rd197, {%r8933, %r8931};
	mov.u32 	%r8946, 0;
	// inline asm
	prmt.b32 %r8935, %r8946, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8937, %r8946, 0, 0x0123;
	// inline asm
	mov.b64	%rd198, {%r8937, %r8935};
	// inline asm
	prmt.b32 %r8939, %r8946, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8941, %r8946, 0, 0x0123;
	// inline asm
	mov.b64	%rd199, {%r8941, %r8939};
	// inline asm
	prmt.b32 %r8943, %r8946, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r8945, %r8946, 0, 0x0123;
	// inline asm
	mov.b64	%rd200, {%r8945, %r8943};
	shl.b32 	%r8963, %r10975, 3;
	mov.b64	%rd201, {%r8963, %r8946};
	add.s64 	%rd202, %rd194, %rd2761;
	add.s64 	%rd203, %rd202, %rd3;
	add.s64 	%rd204, %rd203, %rd4;
	add.s64 	%rd205, %rd203, 2357225248857953701;
	add.s64 	%rd206, %rd204, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8964,%dummy}, %rd205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8965}, %rd205;
	}
	shf.r.wrap.b32 	%r8966, %r8965, %r8964, 14;
	shf.r.wrap.b32 	%r8967, %r8964, %r8965, 14;
	mov.b64 	%rd207, {%r8967, %r8966};
	shf.r.wrap.b32 	%r8968, %r8965, %r8964, 18;
	shf.r.wrap.b32 	%r8969, %r8964, %r8965, 18;
	mov.b64 	%rd208, {%r8969, %r8968};
	xor.b64  	%rd209, %rd208, %rd207;
	shf.l.wrap.b32 	%r8970, %r8964, %r8965, 23;
	shf.l.wrap.b32 	%r8971, %r8965, %r8964, 23;
	mov.b64 	%rd210, {%r8971, %r8970};
	xor.b64  	%rd211, %rd209, %rd210;
	and.b64  	%rd212, %rd205, -3887949035690463538;
	xor.b64  	%rd213, %rd212, -7276294671716946913;
	add.s64 	%rd214, %rd195, %rd2762;
	add.s64 	%rd215, %rd214, %rd213;
	add.s64 	%rd216, %rd215, %rd211;
	xor.b64  	%rd217, %rd206, -4942790177534073029;
	xor.b64  	%rd218, %rd206, 7640891576956012808;
	and.b64  	%rd219, %rd218, %rd217;
	xor.b64  	%rd220, %rd219, %rd206;
	add.s64 	%rd221, %rd216, %rd220;
	add.s64 	%rd222, %rd216, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8972,%dummy}, %rd206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8973}, %rd206;
	}
	shf.r.wrap.b32 	%r8974, %r8973, %r8972, 28;
	shf.r.wrap.b32 	%r8975, %r8972, %r8973, 28;
	mov.b64 	%rd223, {%r8975, %r8974};
	shf.l.wrap.b32 	%r8976, %r8972, %r8973, 30;
	shf.l.wrap.b32 	%r8977, %r8973, %r8972, 30;
	mov.b64 	%rd224, {%r8977, %r8976};
	xor.b64  	%rd225, %rd224, %rd223;
	shf.l.wrap.b32 	%r8978, %r8972, %r8973, 25;
	shf.l.wrap.b32 	%r8979, %r8973, %r8972, 25;
	mov.b64 	%rd226, {%r8979, %r8978};
	xor.b64  	%rd227, %rd225, %rd226;
	add.s64 	%rd228, %rd221, %rd227;
	add.s64 	%rd229, %rd228, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8980,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8981}, %rd222;
	}
	shf.r.wrap.b32 	%r8982, %r8981, %r8980, 14;
	shf.r.wrap.b32 	%r8983, %r8980, %r8981, 14;
	mov.b64 	%rd230, {%r8983, %r8982};
	shf.r.wrap.b32 	%r8984, %r8981, %r8980, 18;
	shf.r.wrap.b32 	%r8985, %r8980, %r8981, 18;
	mov.b64 	%rd231, {%r8985, %r8984};
	xor.b64  	%rd232, %rd231, %rd230;
	shf.l.wrap.b32 	%r8986, %r8980, %r8981, 23;
	shf.l.wrap.b32 	%r8987, %r8981, %r8980, 23;
	mov.b64 	%rd233, {%r8987, %r8986};
	xor.b64  	%rd234, %rd232, %rd233;
	xor.b64  	%rd235, %rd205, 5840696475078001361;
	and.b64  	%rd236, %rd222, %rd235;
	xor.b64  	%rd237, %rd236, 5840696475078001361;
	add.s64 	%rd238, %rd196, %rd2763;
	add.s64 	%rd239, %rd238, %rd237;
	add.s64 	%rd240, %rd239, %rd234;
	xor.b64  	%rd241, %rd229, 7640891576956012808;
	xor.b64  	%rd242, %rd229, %rd206;
	and.b64  	%rd243, %rd242, %rd241;
	xor.b64  	%rd244, %rd243, %rd229;
	add.s64 	%rd245, %rd240, %rd244;
	add.s64 	%rd246, %rd240, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8988,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8989}, %rd229;
	}
	shf.r.wrap.b32 	%r8990, %r8989, %r8988, 28;
	shf.r.wrap.b32 	%r8991, %r8988, %r8989, 28;
	mov.b64 	%rd247, {%r8991, %r8990};
	shf.l.wrap.b32 	%r8992, %r8988, %r8989, 30;
	shf.l.wrap.b32 	%r8993, %r8989, %r8988, 30;
	mov.b64 	%rd248, {%r8993, %r8992};
	xor.b64  	%rd249, %rd248, %rd247;
	shf.l.wrap.b32 	%r8994, %r8988, %r8989, 25;
	shf.l.wrap.b32 	%r8995, %r8989, %r8988, 25;
	mov.b64 	%rd250, {%r8995, %r8994};
	xor.b64  	%rd251, %rd249, %rd250;
	add.s64 	%rd252, %rd245, %rd251;
	add.s64 	%rd253, %rd252, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8996,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8997}, %rd246;
	}
	shf.r.wrap.b32 	%r8998, %r8997, %r8996, 14;
	shf.r.wrap.b32 	%r8999, %r8996, %r8997, 14;
	mov.b64 	%rd254, {%r8999, %r8998};
	shf.r.wrap.b32 	%r9000, %r8997, %r8996, 18;
	shf.r.wrap.b32 	%r9001, %r8996, %r8997, 18;
	mov.b64 	%rd255, {%r9001, %r9000};
	xor.b64  	%rd256, %rd255, %rd254;
	shf.l.wrap.b32 	%r9002, %r8996, %r8997, 23;
	shf.l.wrap.b32 	%r9003, %r8997, %r8996, 23;
	mov.b64 	%rd257, {%r9003, %r9002};
	xor.b64  	%rd258, %rd256, %rd257;
	xor.b64  	%rd259, %rd222, %rd205;
	and.b64  	%rd260, %rd246, %rd259;
	xor.b64  	%rd261, %rd260, %rd205;
	add.s64 	%rd262, %rd197, %rd2764;
	add.s64 	%rd263, %rd262, %rd261;
	add.s64 	%rd264, %rd263, %rd258;
	xor.b64  	%rd265, %rd253, %rd206;
	xor.b64  	%rd266, %rd253, %rd229;
	and.b64  	%rd267, %rd266, %rd265;
	xor.b64  	%rd268, %rd267, %rd253;
	add.s64 	%rd269, %rd264, %rd268;
	add.s64 	%rd270, %rd264, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9004,%dummy}, %rd253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9005}, %rd253;
	}
	shf.r.wrap.b32 	%r9006, %r9005, %r9004, 28;
	shf.r.wrap.b32 	%r9007, %r9004, %r9005, 28;
	mov.b64 	%rd271, {%r9007, %r9006};
	shf.l.wrap.b32 	%r9008, %r9004, %r9005, 30;
	shf.l.wrap.b32 	%r9009, %r9005, %r9004, 30;
	mov.b64 	%rd272, {%r9009, %r9008};
	xor.b64  	%rd273, %rd272, %rd271;
	shf.l.wrap.b32 	%r9010, %r9004, %r9005, 25;
	shf.l.wrap.b32 	%r9011, %r9005, %r9004, 25;
	mov.b64 	%rd274, {%r9011, %r9010};
	xor.b64  	%rd275, %rd273, %rd274;
	add.s64 	%rd276, %rd269, %rd275;
	add.s64 	%rd277, %rd276, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9012,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9013}, %rd270;
	}
	shf.r.wrap.b32 	%r9014, %r9013, %r9012, 14;
	shf.r.wrap.b32 	%r9015, %r9012, %r9013, 14;
	mov.b64 	%rd278, {%r9015, %r9014};
	shf.r.wrap.b32 	%r9016, %r9013, %r9012, 18;
	shf.r.wrap.b32 	%r9017, %r9012, %r9013, 18;
	mov.b64 	%rd279, {%r9017, %r9016};
	xor.b64  	%rd280, %rd279, %rd278;
	shf.l.wrap.b32 	%r9018, %r9012, %r9013, 23;
	shf.l.wrap.b32 	%r9019, %r9013, %r9012, 23;
	mov.b64 	%rd281, {%r9019, %r9018};
	xor.b64  	%rd282, %rd280, %rd281;
	xor.b64  	%rd283, %rd246, %rd222;
	and.b64  	%rd284, %rd270, %rd283;
	xor.b64  	%rd285, %rd284, %rd222;
	add.s64 	%rd286, %rd205, %rd198;
	add.s64 	%rd287, %rd286, %rd2765;
	add.s64 	%rd288, %rd287, %rd285;
	add.s64 	%rd289, %rd288, %rd282;
	add.s64 	%rd290, %rd289, %rd206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9020,%dummy}, %rd277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9021}, %rd277;
	}
	shf.r.wrap.b32 	%r9022, %r9021, %r9020, 28;
	shf.r.wrap.b32 	%r9023, %r9020, %r9021, 28;
	mov.b64 	%rd291, {%r9023, %r9022};
	shf.l.wrap.b32 	%r9024, %r9020, %r9021, 30;
	shf.l.wrap.b32 	%r9025, %r9021, %r9020, 30;
	mov.b64 	%rd292, {%r9025, %r9024};
	xor.b64  	%rd293, %rd292, %rd291;
	shf.l.wrap.b32 	%r9026, %r9020, %r9021, 25;
	shf.l.wrap.b32 	%r9027, %r9021, %r9020, 25;
	mov.b64 	%rd294, {%r9027, %r9026};
	xor.b64  	%rd295, %rd293, %rd294;
	xor.b64  	%rd296, %rd277, %rd229;
	xor.b64  	%rd297, %rd277, %rd253;
	and.b64  	%rd298, %rd297, %rd296;
	xor.b64  	%rd299, %rd298, %rd277;
	add.s64 	%rd300, %rd289, %rd299;
	add.s64 	%rd301, %rd300, %rd295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9028,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9029}, %rd290;
	}
	shf.r.wrap.b32 	%r9030, %r9029, %r9028, 14;
	shf.r.wrap.b32 	%r9031, %r9028, %r9029, 14;
	mov.b64 	%rd302, {%r9031, %r9030};
	shf.r.wrap.b32 	%r9032, %r9029, %r9028, 18;
	shf.r.wrap.b32 	%r9033, %r9028, %r9029, 18;
	mov.b64 	%rd303, {%r9033, %r9032};
	xor.b64  	%rd304, %rd303, %rd302;
	shf.l.wrap.b32 	%r9034, %r9028, %r9029, 23;
	shf.l.wrap.b32 	%r9035, %r9029, %r9028, 23;
	mov.b64 	%rd305, {%r9035, %r9034};
	xor.b64  	%rd306, %rd304, %rd305;
	xor.b64  	%rd307, %rd270, %rd246;
	and.b64  	%rd308, %rd290, %rd307;
	xor.b64  	%rd309, %rd308, %rd246;
	add.s64 	%rd310, %rd222, %rd199;
	add.s64 	%rd311, %rd310, %rd2766;
	add.s64 	%rd312, %rd311, %rd309;
	add.s64 	%rd313, %rd312, %rd306;
	add.s64 	%rd314, %rd313, %rd229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9036,%dummy}, %rd301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9037}, %rd301;
	}
	shf.r.wrap.b32 	%r9038, %r9037, %r9036, 28;
	shf.r.wrap.b32 	%r9039, %r9036, %r9037, 28;
	mov.b64 	%rd315, {%r9039, %r9038};
	shf.l.wrap.b32 	%r9040, %r9036, %r9037, 30;
	shf.l.wrap.b32 	%r9041, %r9037, %r9036, 30;
	mov.b64 	%rd316, {%r9041, %r9040};
	xor.b64  	%rd317, %rd316, %rd315;
	shf.l.wrap.b32 	%r9042, %r9036, %r9037, 25;
	shf.l.wrap.b32 	%r9043, %r9037, %r9036, 25;
	mov.b64 	%rd318, {%r9043, %r9042};
	xor.b64  	%rd319, %rd317, %rd318;
	xor.b64  	%rd320, %rd301, %rd253;
	xor.b64  	%rd321, %rd301, %rd277;
	and.b64  	%rd322, %rd321, %rd320;
	xor.b64  	%rd323, %rd322, %rd301;
	add.s64 	%rd324, %rd313, %rd323;
	add.s64 	%rd325, %rd324, %rd319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9044,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9045}, %rd314;
	}
	shf.r.wrap.b32 	%r9046, %r9045, %r9044, 14;
	shf.r.wrap.b32 	%r9047, %r9044, %r9045, 14;
	mov.b64 	%rd326, {%r9047, %r9046};
	shf.r.wrap.b32 	%r9048, %r9045, %r9044, 18;
	shf.r.wrap.b32 	%r9049, %r9044, %r9045, 18;
	mov.b64 	%rd327, {%r9049, %r9048};
	xor.b64  	%rd328, %rd327, %rd326;
	shf.l.wrap.b32 	%r9050, %r9044, %r9045, 23;
	shf.l.wrap.b32 	%r9051, %r9045, %r9044, 23;
	mov.b64 	%rd329, {%r9051, %r9050};
	xor.b64  	%rd330, %rd328, %rd329;
	xor.b64  	%rd331, %rd290, %rd270;
	and.b64  	%rd332, %rd314, %rd331;
	xor.b64  	%rd333, %rd332, %rd270;
	add.s64 	%rd334, %rd246, %rd200;
	add.s64 	%rd335, %rd334, %rd2767;
	add.s64 	%rd336, %rd335, %rd333;
	add.s64 	%rd337, %rd336, %rd330;
	add.s64 	%rd338, %rd337, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9052,%dummy}, %rd325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9053}, %rd325;
	}
	shf.r.wrap.b32 	%r9054, %r9053, %r9052, 28;
	shf.r.wrap.b32 	%r9055, %r9052, %r9053, 28;
	mov.b64 	%rd339, {%r9055, %r9054};
	shf.l.wrap.b32 	%r9056, %r9052, %r9053, 30;
	shf.l.wrap.b32 	%r9057, %r9053, %r9052, 30;
	mov.b64 	%rd340, {%r9057, %r9056};
	xor.b64  	%rd341, %rd340, %rd339;
	shf.l.wrap.b32 	%r9058, %r9052, %r9053, 25;
	shf.l.wrap.b32 	%r9059, %r9053, %r9052, 25;
	mov.b64 	%rd342, {%r9059, %r9058};
	xor.b64  	%rd343, %rd341, %rd342;
	xor.b64  	%rd344, %rd325, %rd277;
	xor.b64  	%rd345, %rd325, %rd301;
	and.b64  	%rd346, %rd345, %rd344;
	xor.b64  	%rd347, %rd346, %rd325;
	add.s64 	%rd348, %rd337, %rd347;
	add.s64 	%rd349, %rd348, %rd343;
	add.s64 	%rd350, %rd2768, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9060,%dummy}, %rd338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9061}, %rd338;
	}
	shf.r.wrap.b32 	%r9062, %r9061, %r9060, 14;
	shf.r.wrap.b32 	%r9063, %r9060, %r9061, 14;
	mov.b64 	%rd351, {%r9063, %r9062};
	shf.r.wrap.b32 	%r9064, %r9061, %r9060, 18;
	shf.r.wrap.b32 	%r9065, %r9060, %r9061, 18;
	mov.b64 	%rd352, {%r9065, %r9064};
	xor.b64  	%rd353, %rd352, %rd351;
	shf.l.wrap.b32 	%r9066, %r9060, %r9061, 23;
	shf.l.wrap.b32 	%r9067, %r9061, %r9060, 23;
	mov.b64 	%rd354, {%r9067, %r9066};
	xor.b64  	%rd355, %rd353, %rd354;
	xor.b64  	%rd356, %rd314, %rd290;
	and.b64  	%rd357, %rd338, %rd356;
	xor.b64  	%rd358, %rd357, %rd290;
	add.s64 	%rd359, %rd350, %rd358;
	add.s64 	%rd360, %rd359, %rd355;
	add.s64 	%rd361, %rd360, %rd277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9068,%dummy}, %rd349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9069}, %rd349;
	}
	shf.r.wrap.b32 	%r9070, %r9069, %r9068, 28;
	shf.r.wrap.b32 	%r9071, %r9068, %r9069, 28;
	mov.b64 	%rd362, {%r9071, %r9070};
	shf.l.wrap.b32 	%r9072, %r9068, %r9069, 30;
	shf.l.wrap.b32 	%r9073, %r9069, %r9068, 30;
	mov.b64 	%rd363, {%r9073, %r9072};
	xor.b64  	%rd364, %rd363, %rd362;
	shf.l.wrap.b32 	%r9074, %r9068, %r9069, 25;
	shf.l.wrap.b32 	%r9075, %r9069, %r9068, 25;
	mov.b64 	%rd365, {%r9075, %r9074};
	xor.b64  	%rd366, %rd364, %rd365;
	xor.b64  	%rd367, %rd349, %rd301;
	xor.b64  	%rd368, %rd349, %rd325;
	and.b64  	%rd369, %rd368, %rd367;
	xor.b64  	%rd370, %rd369, %rd349;
	add.s64 	%rd371, %rd360, %rd370;
	add.s64 	%rd372, %rd371, %rd366;
	add.s64 	%rd373, %rd2769, %rd290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9076,%dummy}, %rd361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9077}, %rd361;
	}
	shf.r.wrap.b32 	%r9078, %r9077, %r9076, 14;
	shf.r.wrap.b32 	%r9079, %r9076, %r9077, 14;
	mov.b64 	%rd374, {%r9079, %r9078};
	shf.r.wrap.b32 	%r9080, %r9077, %r9076, 18;
	shf.r.wrap.b32 	%r9081, %r9076, %r9077, 18;
	mov.b64 	%rd375, {%r9081, %r9080};
	xor.b64  	%rd376, %rd375, %rd374;
	shf.l.wrap.b32 	%r9082, %r9076, %r9077, 23;
	shf.l.wrap.b32 	%r9083, %r9077, %r9076, 23;
	mov.b64 	%rd377, {%r9083, %r9082};
	xor.b64  	%rd378, %rd376, %rd377;
	xor.b64  	%rd379, %rd338, %rd314;
	and.b64  	%rd380, %rd361, %rd379;
	xor.b64  	%rd381, %rd380, %rd314;
	add.s64 	%rd382, %rd373, %rd381;
	add.s64 	%rd383, %rd382, %rd378;
	add.s64 	%rd384, %rd383, %rd301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9084,%dummy}, %rd372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9085}, %rd372;
	}
	shf.r.wrap.b32 	%r9086, %r9085, %r9084, 28;
	shf.r.wrap.b32 	%r9087, %r9084, %r9085, 28;
	mov.b64 	%rd385, {%r9087, %r9086};
	shf.l.wrap.b32 	%r9088, %r9084, %r9085, 30;
	shf.l.wrap.b32 	%r9089, %r9085, %r9084, 30;
	mov.b64 	%rd386, {%r9089, %r9088};
	xor.b64  	%rd387, %rd386, %rd385;
	shf.l.wrap.b32 	%r9090, %r9084, %r9085, 25;
	shf.l.wrap.b32 	%r9091, %r9085, %r9084, 25;
	mov.b64 	%rd388, {%r9091, %r9090};
	xor.b64  	%rd389, %rd387, %rd388;
	xor.b64  	%rd390, %rd372, %rd325;
	xor.b64  	%rd391, %rd372, %rd349;
	and.b64  	%rd392, %rd391, %rd390;
	xor.b64  	%rd393, %rd392, %rd372;
	add.s64 	%rd394, %rd383, %rd393;
	add.s64 	%rd395, %rd394, %rd389;
	add.s64 	%rd396, %rd2770, %rd314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9092,%dummy}, %rd384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9093}, %rd384;
	}
	shf.r.wrap.b32 	%r9094, %r9093, %r9092, 14;
	shf.r.wrap.b32 	%r9095, %r9092, %r9093, 14;
	mov.b64 	%rd397, {%r9095, %r9094};
	shf.r.wrap.b32 	%r9096, %r9093, %r9092, 18;
	shf.r.wrap.b32 	%r9097, %r9092, %r9093, 18;
	mov.b64 	%rd398, {%r9097, %r9096};
	xor.b64  	%rd399, %rd398, %rd397;
	shf.l.wrap.b32 	%r9098, %r9092, %r9093, 23;
	shf.l.wrap.b32 	%r9099, %r9093, %r9092, 23;
	mov.b64 	%rd400, {%r9099, %r9098};
	xor.b64  	%rd401, %rd399, %rd400;
	xor.b64  	%rd402, %rd361, %rd338;
	and.b64  	%rd403, %rd384, %rd402;
	xor.b64  	%rd404, %rd403, %rd338;
	add.s64 	%rd405, %rd396, %rd404;
	add.s64 	%rd406, %rd405, %rd401;
	add.s64 	%rd407, %rd406, %rd325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9100,%dummy}, %rd395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9101}, %rd395;
	}
	shf.r.wrap.b32 	%r9102, %r9101, %r9100, 28;
	shf.r.wrap.b32 	%r9103, %r9100, %r9101, 28;
	mov.b64 	%rd408, {%r9103, %r9102};
	shf.l.wrap.b32 	%r9104, %r9100, %r9101, 30;
	shf.l.wrap.b32 	%r9105, %r9101, %r9100, 30;
	mov.b64 	%rd409, {%r9105, %r9104};
	xor.b64  	%rd410, %rd409, %rd408;
	shf.l.wrap.b32 	%r9106, %r9100, %r9101, 25;
	shf.l.wrap.b32 	%r9107, %r9101, %r9100, 25;
	mov.b64 	%rd411, {%r9107, %r9106};
	xor.b64  	%rd412, %rd410, %rd411;
	xor.b64  	%rd413, %rd395, %rd349;
	xor.b64  	%rd414, %rd395, %rd372;
	and.b64  	%rd415, %rd414, %rd413;
	xor.b64  	%rd416, %rd415, %rd395;
	add.s64 	%rd417, %rd406, %rd416;
	add.s64 	%rd418, %rd417, %rd412;
	add.s64 	%rd419, %rd2771, %rd338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9108,%dummy}, %rd407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9109}, %rd407;
	}
	shf.r.wrap.b32 	%r9110, %r9109, %r9108, 14;
	shf.r.wrap.b32 	%r9111, %r9108, %r9109, 14;
	mov.b64 	%rd420, {%r9111, %r9110};
	shf.r.wrap.b32 	%r9112, %r9109, %r9108, 18;
	shf.r.wrap.b32 	%r9113, %r9108, %r9109, 18;
	mov.b64 	%rd421, {%r9113, %r9112};
	xor.b64  	%rd422, %rd421, %rd420;
	shf.l.wrap.b32 	%r9114, %r9108, %r9109, 23;
	shf.l.wrap.b32 	%r9115, %r9109, %r9108, 23;
	mov.b64 	%rd423, {%r9115, %r9114};
	xor.b64  	%rd424, %rd422, %rd423;
	xor.b64  	%rd425, %rd384, %rd361;
	and.b64  	%rd426, %rd407, %rd425;
	xor.b64  	%rd427, %rd426, %rd361;
	add.s64 	%rd428, %rd419, %rd427;
	add.s64 	%rd429, %rd428, %rd424;
	add.s64 	%rd430, %rd429, %rd349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9116,%dummy}, %rd418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9117}, %rd418;
	}
	shf.r.wrap.b32 	%r9118, %r9117, %r9116, 28;
	shf.r.wrap.b32 	%r9119, %r9116, %r9117, 28;
	mov.b64 	%rd431, {%r9119, %r9118};
	shf.l.wrap.b32 	%r9120, %r9116, %r9117, 30;
	shf.l.wrap.b32 	%r9121, %r9117, %r9116, 30;
	mov.b64 	%rd432, {%r9121, %r9120};
	xor.b64  	%rd433, %rd432, %rd431;
	shf.l.wrap.b32 	%r9122, %r9116, %r9117, 25;
	shf.l.wrap.b32 	%r9123, %r9117, %r9116, 25;
	mov.b64 	%rd434, {%r9123, %r9122};
	xor.b64  	%rd435, %rd433, %rd434;
	xor.b64  	%rd436, %rd418, %rd372;
	xor.b64  	%rd437, %rd418, %rd395;
	and.b64  	%rd438, %rd437, %rd436;
	xor.b64  	%rd439, %rd438, %rd418;
	add.s64 	%rd440, %rd429, %rd439;
	add.s64 	%rd441, %rd440, %rd435;
	add.s64 	%rd442, %rd2772, %rd361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9124,%dummy}, %rd430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9125}, %rd430;
	}
	shf.r.wrap.b32 	%r9126, %r9125, %r9124, 14;
	shf.r.wrap.b32 	%r9127, %r9124, %r9125, 14;
	mov.b64 	%rd443, {%r9127, %r9126};
	shf.r.wrap.b32 	%r9128, %r9125, %r9124, 18;
	shf.r.wrap.b32 	%r9129, %r9124, %r9125, 18;
	mov.b64 	%rd444, {%r9129, %r9128};
	xor.b64  	%rd445, %rd444, %rd443;
	shf.l.wrap.b32 	%r9130, %r9124, %r9125, 23;
	shf.l.wrap.b32 	%r9131, %r9125, %r9124, 23;
	mov.b64 	%rd446, {%r9131, %r9130};
	xor.b64  	%rd447, %rd445, %rd446;
	xor.b64  	%rd448, %rd407, %rd384;
	and.b64  	%rd449, %rd430, %rd448;
	xor.b64  	%rd450, %rd449, %rd384;
	add.s64 	%rd451, %rd442, %rd450;
	add.s64 	%rd452, %rd451, %rd447;
	add.s64 	%rd453, %rd452, %rd372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9132,%dummy}, %rd441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9133}, %rd441;
	}
	shf.r.wrap.b32 	%r9134, %r9133, %r9132, 28;
	shf.r.wrap.b32 	%r9135, %r9132, %r9133, 28;
	mov.b64 	%rd454, {%r9135, %r9134};
	shf.l.wrap.b32 	%r9136, %r9132, %r9133, 30;
	shf.l.wrap.b32 	%r9137, %r9133, %r9132, 30;
	mov.b64 	%rd455, {%r9137, %r9136};
	xor.b64  	%rd456, %rd455, %rd454;
	shf.l.wrap.b32 	%r9138, %r9132, %r9133, 25;
	shf.l.wrap.b32 	%r9139, %r9133, %r9132, 25;
	mov.b64 	%rd457, {%r9139, %r9138};
	xor.b64  	%rd458, %rd456, %rd457;
	xor.b64  	%rd459, %rd441, %rd395;
	xor.b64  	%rd460, %rd441, %rd418;
	and.b64  	%rd461, %rd460, %rd459;
	xor.b64  	%rd462, %rd461, %rd441;
	add.s64 	%rd463, %rd452, %rd462;
	add.s64 	%rd464, %rd463, %rd458;
	add.s64 	%rd465, %rd2773, %rd384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9140,%dummy}, %rd453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9141}, %rd453;
	}
	shf.r.wrap.b32 	%r9142, %r9141, %r9140, 14;
	shf.r.wrap.b32 	%r9143, %r9140, %r9141, 14;
	mov.b64 	%rd466, {%r9143, %r9142};
	shf.r.wrap.b32 	%r9144, %r9141, %r9140, 18;
	shf.r.wrap.b32 	%r9145, %r9140, %r9141, 18;
	mov.b64 	%rd467, {%r9145, %r9144};
	xor.b64  	%rd468, %rd467, %rd466;
	shf.l.wrap.b32 	%r9146, %r9140, %r9141, 23;
	shf.l.wrap.b32 	%r9147, %r9141, %r9140, 23;
	mov.b64 	%rd469, {%r9147, %r9146};
	xor.b64  	%rd470, %rd468, %rd469;
	xor.b64  	%rd471, %rd430, %rd407;
	and.b64  	%rd472, %rd453, %rd471;
	xor.b64  	%rd473, %rd472, %rd407;
	add.s64 	%rd474, %rd465, %rd473;
	add.s64 	%rd475, %rd474, %rd470;
	add.s64 	%rd476, %rd475, %rd395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9148,%dummy}, %rd464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9149}, %rd464;
	}
	shf.r.wrap.b32 	%r9150, %r9149, %r9148, 28;
	shf.r.wrap.b32 	%r9151, %r9148, %r9149, 28;
	mov.b64 	%rd477, {%r9151, %r9150};
	shf.l.wrap.b32 	%r9152, %r9148, %r9149, 30;
	shf.l.wrap.b32 	%r9153, %r9149, %r9148, 30;
	mov.b64 	%rd478, {%r9153, %r9152};
	xor.b64  	%rd479, %rd478, %rd477;
	shf.l.wrap.b32 	%r9154, %r9148, %r9149, 25;
	shf.l.wrap.b32 	%r9155, %r9149, %r9148, 25;
	mov.b64 	%rd480, {%r9155, %r9154};
	xor.b64  	%rd481, %rd479, %rd480;
	xor.b64  	%rd482, %rd464, %rd418;
	xor.b64  	%rd483, %rd464, %rd441;
	and.b64  	%rd484, %rd483, %rd482;
	xor.b64  	%rd485, %rd484, %rd464;
	add.s64 	%rd486, %rd475, %rd485;
	add.s64 	%rd487, %rd486, %rd481;
	add.s64 	%rd488, %rd2774, %rd407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9156,%dummy}, %rd476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9157}, %rd476;
	}
	shf.r.wrap.b32 	%r9158, %r9157, %r9156, 14;
	shf.r.wrap.b32 	%r9159, %r9156, %r9157, 14;
	mov.b64 	%rd489, {%r9159, %r9158};
	shf.r.wrap.b32 	%r9160, %r9157, %r9156, 18;
	shf.r.wrap.b32 	%r9161, %r9156, %r9157, 18;
	mov.b64 	%rd490, {%r9161, %r9160};
	xor.b64  	%rd491, %rd490, %rd489;
	shf.l.wrap.b32 	%r9162, %r9156, %r9157, 23;
	shf.l.wrap.b32 	%r9163, %r9157, %r9156, 23;
	mov.b64 	%rd492, {%r9163, %r9162};
	xor.b64  	%rd493, %rd491, %rd492;
	xor.b64  	%rd494, %rd453, %rd430;
	and.b64  	%rd495, %rd476, %rd494;
	xor.b64  	%rd496, %rd495, %rd430;
	add.s64 	%rd497, %rd488, %rd496;
	add.s64 	%rd498, %rd497, %rd493;
	add.s64 	%rd499, %rd498, %rd418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9164,%dummy}, %rd487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9165}, %rd487;
	}
	shf.r.wrap.b32 	%r9166, %r9165, %r9164, 28;
	shf.r.wrap.b32 	%r9167, %r9164, %r9165, 28;
	mov.b64 	%rd500, {%r9167, %r9166};
	shf.l.wrap.b32 	%r9168, %r9164, %r9165, 30;
	shf.l.wrap.b32 	%r9169, %r9165, %r9164, 30;
	mov.b64 	%rd501, {%r9169, %r9168};
	xor.b64  	%rd502, %rd501, %rd500;
	shf.l.wrap.b32 	%r9170, %r9164, %r9165, 25;
	shf.l.wrap.b32 	%r9171, %r9165, %r9164, 25;
	mov.b64 	%rd503, {%r9171, %r9170};
	xor.b64  	%rd504, %rd502, %rd503;
	xor.b64  	%rd505, %rd487, %rd441;
	xor.b64  	%rd506, %rd487, %rd464;
	and.b64  	%rd507, %rd506, %rd505;
	xor.b64  	%rd508, %rd507, %rd487;
	add.s64 	%rd509, %rd498, %rd508;
	add.s64 	%rd510, %rd509, %rd504;
	add.s64 	%rd511, %rd2775, %rd430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9172,%dummy}, %rd499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9173}, %rd499;
	}
	shf.r.wrap.b32 	%r9174, %r9173, %r9172, 14;
	shf.r.wrap.b32 	%r9175, %r9172, %r9173, 14;
	mov.b64 	%rd512, {%r9175, %r9174};
	shf.r.wrap.b32 	%r9176, %r9173, %r9172, 18;
	shf.r.wrap.b32 	%r9177, %r9172, %r9173, 18;
	mov.b64 	%rd513, {%r9177, %r9176};
	xor.b64  	%rd514, %rd513, %rd512;
	shf.l.wrap.b32 	%r9178, %r9172, %r9173, 23;
	shf.l.wrap.b32 	%r9179, %r9173, %r9172, 23;
	mov.b64 	%rd515, {%r9179, %r9178};
	xor.b64  	%rd516, %rd514, %rd515;
	xor.b64  	%rd517, %rd476, %rd453;
	and.b64  	%rd518, %rd499, %rd517;
	xor.b64  	%rd519, %rd518, %rd453;
	add.s64 	%rd520, %rd511, %rd519;
	add.s64 	%rd521, %rd520, %rd516;
	add.s64 	%rd522, %rd521, %rd441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9180,%dummy}, %rd510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9181}, %rd510;
	}
	shf.r.wrap.b32 	%r9182, %r9181, %r9180, 28;
	shf.r.wrap.b32 	%r9183, %r9180, %r9181, 28;
	mov.b64 	%rd523, {%r9183, %r9182};
	shf.l.wrap.b32 	%r9184, %r9180, %r9181, 30;
	shf.l.wrap.b32 	%r9185, %r9181, %r9180, 30;
	mov.b64 	%rd524, {%r9185, %r9184};
	xor.b64  	%rd525, %rd524, %rd523;
	shf.l.wrap.b32 	%r9186, %r9180, %r9181, 25;
	shf.l.wrap.b32 	%r9187, %r9181, %r9180, 25;
	mov.b64 	%rd526, {%r9187, %r9186};
	xor.b64  	%rd527, %rd525, %rd526;
	xor.b64  	%rd528, %rd510, %rd464;
	xor.b64  	%rd529, %rd510, %rd487;
	and.b64  	%rd530, %rd529, %rd528;
	xor.b64  	%rd531, %rd530, %rd510;
	add.s64 	%rd532, %rd521, %rd531;
	add.s64 	%rd533, %rd532, %rd527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9188,%dummy}, %rd522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9189}, %rd522;
	}
	shf.r.wrap.b32 	%r9190, %r9189, %r9188, 14;
	shf.r.wrap.b32 	%r9191, %r9188, %r9189, 14;
	mov.b64 	%rd534, {%r9191, %r9190};
	shf.r.wrap.b32 	%r9192, %r9189, %r9188, 18;
	shf.r.wrap.b32 	%r9193, %r9188, %r9189, 18;
	mov.b64 	%rd535, {%r9193, %r9192};
	xor.b64  	%rd536, %rd535, %rd534;
	shf.l.wrap.b32 	%r9194, %r9188, %r9189, 23;
	shf.l.wrap.b32 	%r9195, %r9189, %r9188, 23;
	mov.b64 	%rd537, {%r9195, %r9194};
	xor.b64  	%rd538, %rd536, %rd537;
	xor.b64  	%rd539, %rd499, %rd476;
	and.b64  	%rd540, %rd522, %rd539;
	xor.b64  	%rd541, %rd540, %rd476;
	add.s64 	%rd542, %rd453, %rd201;
	add.s64 	%rd543, %rd542, %rd2776;
	add.s64 	%rd544, %rd543, %rd541;
	add.s64 	%rd545, %rd544, %rd538;
	add.s64 	%rd546, %rd545, %rd464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9196,%dummy}, %rd533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9197}, %rd533;
	}
	shf.r.wrap.b32 	%r9198, %r9197, %r9196, 28;
	shf.r.wrap.b32 	%r9199, %r9196, %r9197, 28;
	mov.b64 	%rd547, {%r9199, %r9198};
	shf.l.wrap.b32 	%r9200, %r9196, %r9197, 30;
	shf.l.wrap.b32 	%r9201, %r9197, %r9196, 30;
	mov.b64 	%rd548, {%r9201, %r9200};
	xor.b64  	%rd549, %rd548, %rd547;
	shf.l.wrap.b32 	%r9202, %r9196, %r9197, 25;
	shf.l.wrap.b32 	%r9203, %r9197, %r9196, 25;
	mov.b64 	%rd550, {%r9203, %r9202};
	xor.b64  	%rd551, %rd549, %rd550;
	xor.b64  	%rd552, %rd533, %rd487;
	xor.b64  	%rd553, %rd533, %rd510;
	and.b64  	%rd554, %rd553, %rd552;
	xor.b64  	%rd555, %rd554, %rd533;
	add.s64 	%rd556, %rd545, %rd555;
	add.s64 	%rd557, %rd556, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9204,%dummy}, %rd195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9205}, %rd195;
	}
	shf.r.wrap.b32 	%r9206, %r9205, %r9204, 1;
	shf.r.wrap.b32 	%r9207, %r9204, %r9205, 1;
	mov.b64 	%rd558, {%r9207, %r9206};
	shf.r.wrap.b32 	%r9208, %r9205, %r9204, 8;
	shf.r.wrap.b32 	%r9209, %r9204, %r9205, 8;
	mov.b64 	%rd559, {%r9209, %r9208};
	shr.u64 	%rd560, %rd195, 7;
	xor.b64  	%rd561, %rd558, %rd560;
	xor.b64  	%rd562, %rd561, %rd559;
	add.s64 	%rd563, %rd194, %rd20;
	add.s64 	%rd564, %rd563, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9210,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9211}, %rd201;
	}
	shf.r.wrap.b32 	%r9212, %r9211, %r9210, 19;
	shf.r.wrap.b32 	%r9213, %r9210, %r9211, 19;
	mov.b64 	%rd565, {%r9213, %r9212};
	shf.l.wrap.b32 	%r9214, %r9210, %r9211, 3;
	shf.l.wrap.b32 	%r9215, %r9211, %r9210, 3;
	mov.b64 	%rd566, {%r9215, %r9214};
	shr.u64 	%rd567, %rd201, 6;
	xor.b64  	%rd568, %rd565, %rd567;
	xor.b64  	%rd569, %rd568, %rd566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9216,%dummy}, %rd196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9217}, %rd196;
	}
	shf.r.wrap.b32 	%r9218, %r9217, %r9216, 1;
	shf.r.wrap.b32 	%r9219, %r9216, %r9217, 1;
	mov.b64 	%rd570, {%r9219, %r9218};
	shf.r.wrap.b32 	%r9220, %r9217, %r9216, 8;
	shf.r.wrap.b32 	%r9221, %r9216, %r9217, 8;
	mov.b64 	%rd571, {%r9221, %r9220};
	shr.u64 	%rd572, %rd196, 7;
	xor.b64  	%rd573, %rd570, %rd572;
	xor.b64  	%rd574, %rd573, %rd571;
	add.s64 	%rd575, %rd195, %rd569;
	add.s64 	%rd576, %rd575, %rd574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9222,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9223}, %rd564;
	}
	shf.r.wrap.b32 	%r9224, %r9223, %r9222, 19;
	shf.r.wrap.b32 	%r9225, %r9222, %r9223, 19;
	mov.b64 	%rd577, {%r9225, %r9224};
	shf.l.wrap.b32 	%r9226, %r9222, %r9223, 3;
	shf.l.wrap.b32 	%r9227, %r9223, %r9222, 3;
	mov.b64 	%rd578, {%r9227, %r9226};
	shr.u64 	%rd579, %rd564, 6;
	xor.b64  	%rd580, %rd577, %rd579;
	xor.b64  	%rd581, %rd580, %rd578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9228,%dummy}, %rd197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9229}, %rd197;
	}
	shf.r.wrap.b32 	%r9230, %r9229, %r9228, 1;
	shf.r.wrap.b32 	%r9231, %r9228, %r9229, 1;
	mov.b64 	%rd582, {%r9231, %r9230};
	shf.r.wrap.b32 	%r9232, %r9229, %r9228, 8;
	shf.r.wrap.b32 	%r9233, %r9228, %r9229, 8;
	mov.b64 	%rd583, {%r9233, %r9232};
	shr.u64 	%rd584, %rd197, 7;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	add.s64 	%rd587, %rd196, %rd581;
	add.s64 	%rd588, %rd587, %rd586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9234,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9235}, %rd576;
	}
	shf.r.wrap.b32 	%r9236, %r9235, %r9234, 19;
	shf.r.wrap.b32 	%r9237, %r9234, %r9235, 19;
	mov.b64 	%rd589, {%r9237, %r9236};
	shf.l.wrap.b32 	%r9238, %r9234, %r9235, 3;
	shf.l.wrap.b32 	%r9239, %r9235, %r9234, 3;
	mov.b64 	%rd590, {%r9239, %r9238};
	shr.u64 	%rd591, %rd576, 6;
	xor.b64  	%rd592, %rd589, %rd591;
	xor.b64  	%rd593, %rd592, %rd590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9240,%dummy}, %rd198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9241}, %rd198;
	}
	shf.r.wrap.b32 	%r9242, %r9241, %r9240, 1;
	shf.r.wrap.b32 	%r9243, %r9240, %r9241, 1;
	mov.b64 	%rd594, {%r9243, %r9242};
	shf.r.wrap.b32 	%r9244, %r9241, %r9240, 8;
	shf.r.wrap.b32 	%r9245, %r9240, %r9241, 8;
	mov.b64 	%rd595, {%r9245, %r9244};
	shr.u64 	%rd596, %rd198, 7;
	xor.b64  	%rd597, %rd594, %rd596;
	xor.b64  	%rd598, %rd597, %rd595;
	add.s64 	%rd599, %rd197, %rd593;
	add.s64 	%rd600, %rd599, %rd598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9246,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9247}, %rd588;
	}
	shf.r.wrap.b32 	%r9248, %r9247, %r9246, 19;
	shf.r.wrap.b32 	%r9249, %r9246, %r9247, 19;
	mov.b64 	%rd601, {%r9249, %r9248};
	shf.l.wrap.b32 	%r9250, %r9246, %r9247, 3;
	shf.l.wrap.b32 	%r9251, %r9247, %r9246, 3;
	mov.b64 	%rd602, {%r9251, %r9250};
	shr.u64 	%rd603, %rd588, 6;
	xor.b64  	%rd604, %rd601, %rd603;
	xor.b64  	%rd605, %rd604, %rd602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9252,%dummy}, %rd199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9253}, %rd199;
	}
	shf.r.wrap.b32 	%r9254, %r9253, %r9252, 1;
	shf.r.wrap.b32 	%r9255, %r9252, %r9253, 1;
	mov.b64 	%rd606, {%r9255, %r9254};
	shf.r.wrap.b32 	%r9256, %r9253, %r9252, 8;
	shf.r.wrap.b32 	%r9257, %r9252, %r9253, 8;
	mov.b64 	%rd607, {%r9257, %r9256};
	shr.u64 	%rd608, %rd199, 7;
	xor.b64  	%rd609, %rd606, %rd608;
	xor.b64  	%rd610, %rd609, %rd607;
	add.s64 	%rd611, %rd198, %rd605;
	add.s64 	%rd612, %rd611, %rd610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9258,%dummy}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9259}, %rd600;
	}
	shf.r.wrap.b32 	%r9260, %r9259, %r9258, 19;
	shf.r.wrap.b32 	%r9261, %r9258, %r9259, 19;
	mov.b64 	%rd613, {%r9261, %r9260};
	shf.l.wrap.b32 	%r9262, %r9258, %r9259, 3;
	shf.l.wrap.b32 	%r9263, %r9259, %r9258, 3;
	mov.b64 	%rd614, {%r9263, %r9262};
	shr.u64 	%rd615, %rd600, 6;
	xor.b64  	%rd616, %rd613, %rd615;
	xor.b64  	%rd617, %rd616, %rd614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9264,%dummy}, %rd200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9265}, %rd200;
	}
	shf.r.wrap.b32 	%r9266, %r9265, %r9264, 1;
	shf.r.wrap.b32 	%r9267, %r9264, %r9265, 1;
	mov.b64 	%rd618, {%r9267, %r9266};
	shf.r.wrap.b32 	%r9268, %r9265, %r9264, 8;
	shf.r.wrap.b32 	%r9269, %r9264, %r9265, 8;
	mov.b64 	%rd619, {%r9269, %r9268};
	shr.u64 	%rd620, %rd200, 7;
	xor.b64  	%rd621, %rd618, %rd620;
	xor.b64  	%rd622, %rd621, %rd619;
	add.s64 	%rd623, %rd199, %rd617;
	add.s64 	%rd624, %rd623, %rd622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9270,%dummy}, %rd612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9271}, %rd612;
	}
	shf.r.wrap.b32 	%r9272, %r9271, %r9270, 19;
	shf.r.wrap.b32 	%r9273, %r9270, %r9271, 19;
	mov.b64 	%rd625, {%r9273, %r9272};
	shf.l.wrap.b32 	%r9274, %r9270, %r9271, 3;
	shf.l.wrap.b32 	%r9275, %r9271, %r9270, 3;
	mov.b64 	%rd626, {%r9275, %r9274};
	shr.u64 	%rd627, %rd612, 6;
	xor.b64  	%rd628, %rd625, %rd627;
	xor.b64  	%rd629, %rd628, %rd626;
	add.s64 	%rd630, %rd200, %rd201;
	add.s64 	%rd631, %rd630, %rd629;
	add.s64 	%rd632, %rd631, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9276,%dummy}, %rd624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9277}, %rd624;
	}
	shf.r.wrap.b32 	%r9278, %r9277, %r9276, 19;
	shf.r.wrap.b32 	%r9279, %r9276, %r9277, 19;
	mov.b64 	%rd633, {%r9279, %r9278};
	shf.l.wrap.b32 	%r9280, %r9276, %r9277, 3;
	shf.l.wrap.b32 	%r9281, %r9277, %r9276, 3;
	mov.b64 	%rd634, {%r9281, %r9280};
	shr.u64 	%rd635, %rd624, 6;
	xor.b64  	%rd636, %rd633, %rd635;
	xor.b64  	%rd637, %rd636, %rd634;
	add.s64 	%rd638, %rd564, %rd637;
	add.s64 	%rd639, %rd638, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9282,%dummy}, %rd632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9283}, %rd632;
	}
	shf.r.wrap.b32 	%r9284, %r9283, %r9282, 19;
	shf.r.wrap.b32 	%r9285, %r9282, %r9283, 19;
	mov.b64 	%rd640, {%r9285, %r9284};
	shf.l.wrap.b32 	%r9286, %r9282, %r9283, 3;
	shf.l.wrap.b32 	%r9287, %r9283, %r9282, 3;
	mov.b64 	%rd641, {%r9287, %r9286};
	shr.u64 	%rd642, %rd632, 6;
	xor.b64  	%rd643, %rd640, %rd642;
	xor.b64  	%rd644, %rd643, %rd641;
	add.s64 	%rd645, %rd576, %rd644;
	add.s64 	%rd646, %rd645, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9288,%dummy}, %rd639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9289}, %rd639;
	}
	shf.r.wrap.b32 	%r9290, %r9289, %r9288, 19;
	shf.r.wrap.b32 	%r9291, %r9288, %r9289, 19;
	mov.b64 	%rd647, {%r9291, %r9290};
	shf.l.wrap.b32 	%r9292, %r9288, %r9289, 3;
	shf.l.wrap.b32 	%r9293, %r9289, %r9288, 3;
	mov.b64 	%rd648, {%r9293, %r9292};
	shr.u64 	%rd649, %rd639, 6;
	xor.b64  	%rd650, %rd647, %rd649;
	xor.b64  	%rd651, %rd650, %rd648;
	add.s64 	%rd652, %rd588, %rd651;
	add.s64 	%rd653, %rd652, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9294,%dummy}, %rd646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9295}, %rd646;
	}
	shf.r.wrap.b32 	%r9296, %r9295, %r9294, 19;
	shf.r.wrap.b32 	%r9297, %r9294, %r9295, 19;
	mov.b64 	%rd654, {%r9297, %r9296};
	shf.l.wrap.b32 	%r9298, %r9294, %r9295, 3;
	shf.l.wrap.b32 	%r9299, %r9295, %r9294, 3;
	mov.b64 	%rd655, {%r9299, %r9298};
	shr.u64 	%rd656, %rd646, 6;
	xor.b64  	%rd657, %rd654, %rd656;
	xor.b64  	%rd658, %rd657, %rd655;
	add.s64 	%rd659, %rd600, %rd658;
	add.s64 	%rd660, %rd659, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9300,%dummy}, %rd653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9301}, %rd653;
	}
	shf.r.wrap.b32 	%r9302, %r9301, %r9300, 19;
	shf.r.wrap.b32 	%r9303, %r9300, %r9301, 19;
	mov.b64 	%rd661, {%r9303, %r9302};
	shf.l.wrap.b32 	%r9304, %r9300, %r9301, 3;
	shf.l.wrap.b32 	%r9305, %r9301, %r9300, 3;
	mov.b64 	%rd662, {%r9305, %r9304};
	shr.u64 	%rd663, %rd653, 6;
	xor.b64  	%rd664, %rd661, %rd663;
	xor.b64  	%rd665, %rd664, %rd662;
	add.s64 	%rd666, %rd612, %rd665;
	add.s64 	%rd667, %rd666, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9306,%dummy}, %rd660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9307}, %rd660;
	}
	shf.r.wrap.b32 	%r9308, %r9307, %r9306, 19;
	shf.r.wrap.b32 	%r9309, %r9306, %r9307, 19;
	mov.b64 	%rd668, {%r9309, %r9308};
	shf.l.wrap.b32 	%r9310, %r9306, %r9307, 3;
	shf.l.wrap.b32 	%r9311, %r9307, %r9306, 3;
	mov.b64 	%rd669, {%r9311, %r9310};
	shr.u64 	%rd670, %rd660, 6;
	xor.b64  	%rd671, %rd668, %rd670;
	xor.b64  	%rd672, %rd671, %rd669;
	add.s64 	%rd673, %rd624, %rd672;
	add.s64 	%rd674, %rd673, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9312,%dummy}, %rd667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9313}, %rd667;
	}
	shf.r.wrap.b32 	%r9314, %r9313, %r9312, 19;
	shf.r.wrap.b32 	%r9315, %r9312, %r9313, 19;
	mov.b64 	%rd675, {%r9315, %r9314};
	shf.l.wrap.b32 	%r9316, %r9312, %r9313, 3;
	shf.l.wrap.b32 	%r9317, %r9313, %r9312, 3;
	mov.b64 	%rd676, {%r9317, %r9316};
	shr.u64 	%rd677, %rd667, 6;
	xor.b64  	%rd678, %rd675, %rd677;
	xor.b64  	%rd679, %rd678, %rd676;
	add.s64 	%rd680, %rd632, %rd679;
	add.s64 	%rd681, %rd680, %rd21;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9318,%dummy}, %rd674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9319}, %rd674;
	}
	shf.r.wrap.b32 	%r9320, %r9319, %r9318, 19;
	shf.r.wrap.b32 	%r9321, %r9318, %r9319, 19;
	mov.b64 	%rd682, {%r9321, %r9320};
	shf.l.wrap.b32 	%r9322, %r9318, %r9319, 3;
	shf.l.wrap.b32 	%r9323, %r9319, %r9318, 3;
	mov.b64 	%rd683, {%r9323, %r9322};
	shr.u64 	%rd684, %rd674, 6;
	xor.b64  	%rd685, %rd682, %rd684;
	xor.b64  	%rd686, %rd685, %rd683;
	shf.r.wrap.b32 	%r9324, %r9211, %r9210, 1;
	shf.r.wrap.b32 	%r9325, %r9210, %r9211, 1;
	mov.b64 	%rd687, {%r9325, %r9324};
	shf.r.wrap.b32 	%r9326, %r9211, %r9210, 8;
	shf.r.wrap.b32 	%r9327, %r9210, %r9211, 8;
	mov.b64 	%rd688, {%r9327, %r9326};
	shr.u64 	%rd689, %rd201, 7;
	xor.b64  	%rd690, %rd687, %rd689;
	xor.b64  	%rd691, %rd690, %rd688;
	add.s64 	%rd692, %rd639, %rd686;
	add.s64 	%rd693, %rd692, %rd691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9328,%dummy}, %rd681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9329}, %rd681;
	}
	shf.r.wrap.b32 	%r9330, %r9329, %r9328, 19;
	shf.r.wrap.b32 	%r9331, %r9328, %r9329, 19;
	mov.b64 	%rd694, {%r9331, %r9330};
	shf.l.wrap.b32 	%r9332, %r9328, %r9329, 3;
	shf.l.wrap.b32 	%r9333, %r9329, %r9328, 3;
	mov.b64 	%rd695, {%r9333, %r9332};
	shr.u64 	%rd696, %rd681, 6;
	xor.b64  	%rd697, %rd694, %rd696;
	xor.b64  	%rd698, %rd697, %rd695;
	shf.r.wrap.b32 	%r9334, %r9223, %r9222, 1;
	shf.r.wrap.b32 	%r9335, %r9222, %r9223, 1;
	mov.b64 	%rd699, {%r9335, %r9334};
	shf.r.wrap.b32 	%r9336, %r9223, %r9222, 8;
	shf.r.wrap.b32 	%r9337, %r9222, %r9223, 8;
	mov.b64 	%rd700, {%r9337, %r9336};
	shr.u64 	%rd701, %rd564, 7;
	xor.b64  	%rd702, %rd699, %rd701;
	xor.b64  	%rd703, %rd702, %rd700;
	add.s64 	%rd704, %rd646, %rd201;
	add.s64 	%rd705, %rd704, %rd698;
	add.s64 	%rd706, %rd705, %rd703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9338,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9339}, %rd546;
	}
	shf.r.wrap.b32 	%r9340, %r9339, %r9338, 14;
	shf.r.wrap.b32 	%r9341, %r9338, %r9339, 14;
	mov.b64 	%rd707, {%r9341, %r9340};
	shf.r.wrap.b32 	%r9342, %r9339, %r9338, 18;
	shf.r.wrap.b32 	%r9343, %r9338, %r9339, 18;
	mov.b64 	%rd708, {%r9343, %r9342};
	xor.b64  	%rd709, %rd708, %rd707;
	shf.l.wrap.b32 	%r9344, %r9338, %r9339, 23;
	shf.l.wrap.b32 	%r9345, %r9339, %r9338, 23;
	mov.b64 	%rd710, {%r9345, %r9344};
	xor.b64  	%rd711, %rd709, %rd710;
	xor.b64  	%rd712, %rd499, %rd522;
	and.b64  	%rd713, %rd712, %rd546;
	xor.b64  	%rd714, %rd713, %rd499;
	add.s64 	%rd715, %rd714, %rd476;
	add.s64 	%rd716, %rd715, %rd564;
	add.s64 	%rd717, %rd716, %rd2777;
	add.s64 	%rd718, %rd717, %rd711;
	add.s64 	%rd719, %rd718, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9346,%dummy}, %rd557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9347}, %rd557;
	}
	shf.r.wrap.b32 	%r9348, %r9347, %r9346, 28;
	shf.r.wrap.b32 	%r9349, %r9346, %r9347, 28;
	mov.b64 	%rd720, {%r9349, %r9348};
	shf.l.wrap.b32 	%r9350, %r9346, %r9347, 30;
	shf.l.wrap.b32 	%r9351, %r9347, %r9346, 30;
	mov.b64 	%rd721, {%r9351, %r9350};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.l.wrap.b32 	%r9352, %r9346, %r9347, 25;
	shf.l.wrap.b32 	%r9353, %r9347, %r9346, 25;
	mov.b64 	%rd723, {%r9353, %r9352};
	xor.b64  	%rd724, %rd722, %rd723;
	xor.b64  	%rd725, %rd557, %rd510;
	xor.b64  	%rd726, %rd557, %rd533;
	and.b64  	%rd727, %rd726, %rd725;
	xor.b64  	%rd728, %rd727, %rd557;
	add.s64 	%rd729, %rd718, %rd728;
	add.s64 	%rd730, %rd729, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9354,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9355}, %rd719;
	}
	shf.r.wrap.b32 	%r9356, %r9355, %r9354, 14;
	shf.r.wrap.b32 	%r9357, %r9354, %r9355, 14;
	mov.b64 	%rd731, {%r9357, %r9356};
	shf.r.wrap.b32 	%r9358, %r9355, %r9354, 18;
	shf.r.wrap.b32 	%r9359, %r9354, %r9355, 18;
	mov.b64 	%rd732, {%r9359, %r9358};
	xor.b64  	%rd733, %rd732, %rd731;
	shf.l.wrap.b32 	%r9360, %r9354, %r9355, 23;
	shf.l.wrap.b32 	%r9361, %r9355, %r9354, 23;
	mov.b64 	%rd734, {%r9361, %r9360};
	xor.b64  	%rd735, %rd733, %rd734;
	xor.b64  	%rd736, %rd522, %rd546;
	and.b64  	%rd737, %rd719, %rd736;
	xor.b64  	%rd738, %rd737, %rd522;
	add.s64 	%rd739, %rd576, %rd499;
	add.s64 	%rd740, %rd739, %rd2778;
	add.s64 	%rd741, %rd740, %rd738;
	add.s64 	%rd742, %rd741, %rd735;
	add.s64 	%rd743, %rd742, %rd510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9362,%dummy}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9363}, %rd730;
	}
	shf.r.wrap.b32 	%r9364, %r9363, %r9362, 28;
	shf.r.wrap.b32 	%r9365, %r9362, %r9363, 28;
	mov.b64 	%rd744, {%r9365, %r9364};
	shf.l.wrap.b32 	%r9366, %r9362, %r9363, 30;
	shf.l.wrap.b32 	%r9367, %r9363, %r9362, 30;
	mov.b64 	%rd745, {%r9367, %r9366};
	xor.b64  	%rd746, %rd745, %rd744;
	shf.l.wrap.b32 	%r9368, %r9362, %r9363, 25;
	shf.l.wrap.b32 	%r9369, %r9363, %r9362, 25;
	mov.b64 	%rd747, {%r9369, %r9368};
	xor.b64  	%rd748, %rd746, %rd747;
	xor.b64  	%rd749, %rd730, %rd533;
	xor.b64  	%rd750, %rd730, %rd557;
	and.b64  	%rd751, %rd750, %rd749;
	xor.b64  	%rd752, %rd751, %rd730;
	add.s64 	%rd753, %rd742, %rd752;
	add.s64 	%rd754, %rd753, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9370,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9371}, %rd743;
	}
	shf.r.wrap.b32 	%r9372, %r9371, %r9370, 14;
	shf.r.wrap.b32 	%r9373, %r9370, %r9371, 14;
	mov.b64 	%rd755, {%r9373, %r9372};
	shf.r.wrap.b32 	%r9374, %r9371, %r9370, 18;
	shf.r.wrap.b32 	%r9375, %r9370, %r9371, 18;
	mov.b64 	%rd756, {%r9375, %r9374};
	xor.b64  	%rd757, %rd756, %rd755;
	shf.l.wrap.b32 	%r9376, %r9370, %r9371, 23;
	shf.l.wrap.b32 	%r9377, %r9371, %r9370, 23;
	mov.b64 	%rd758, {%r9377, %r9376};
	xor.b64  	%rd759, %rd757, %rd758;
	xor.b64  	%rd760, %rd719, %rd546;
	and.b64  	%rd761, %rd743, %rd760;
	xor.b64  	%rd762, %rd761, %rd546;
	add.s64 	%rd763, %rd588, %rd522;
	add.s64 	%rd764, %rd763, %rd2779;
	add.s64 	%rd765, %rd764, %rd762;
	add.s64 	%rd766, %rd765, %rd759;
	add.s64 	%rd767, %rd766, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9378,%dummy}, %rd754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9379}, %rd754;
	}
	shf.r.wrap.b32 	%r9380, %r9379, %r9378, 28;
	shf.r.wrap.b32 	%r9381, %r9378, %r9379, 28;
	mov.b64 	%rd768, {%r9381, %r9380};
	shf.l.wrap.b32 	%r9382, %r9378, %r9379, 30;
	shf.l.wrap.b32 	%r9383, %r9379, %r9378, 30;
	mov.b64 	%rd769, {%r9383, %r9382};
	xor.b64  	%rd770, %rd769, %rd768;
	shf.l.wrap.b32 	%r9384, %r9378, %r9379, 25;
	shf.l.wrap.b32 	%r9385, %r9379, %r9378, 25;
	mov.b64 	%rd771, {%r9385, %r9384};
	xor.b64  	%rd772, %rd770, %rd771;
	xor.b64  	%rd773, %rd754, %rd557;
	xor.b64  	%rd774, %rd754, %rd730;
	and.b64  	%rd775, %rd774, %rd773;
	xor.b64  	%rd776, %rd775, %rd754;
	add.s64 	%rd777, %rd766, %rd776;
	add.s64 	%rd778, %rd777, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9386,%dummy}, %rd767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9387}, %rd767;
	}
	shf.r.wrap.b32 	%r9388, %r9387, %r9386, 14;
	shf.r.wrap.b32 	%r9389, %r9386, %r9387, 14;
	mov.b64 	%rd779, {%r9389, %r9388};
	shf.r.wrap.b32 	%r9390, %r9387, %r9386, 18;
	shf.r.wrap.b32 	%r9391, %r9386, %r9387, 18;
	mov.b64 	%rd780, {%r9391, %r9390};
	xor.b64  	%rd781, %rd780, %rd779;
	shf.l.wrap.b32 	%r9392, %r9386, %r9387, 23;
	shf.l.wrap.b32 	%r9393, %r9387, %r9386, 23;
	mov.b64 	%rd782, {%r9393, %r9392};
	xor.b64  	%rd783, %rd781, %rd782;
	xor.b64  	%rd784, %rd743, %rd719;
	and.b64  	%rd785, %rd767, %rd784;
	xor.b64  	%rd786, %rd785, %rd719;
	add.s64 	%rd787, %rd600, %rd546;
	add.s64 	%rd788, %rd787, %rd2780;
	add.s64 	%rd789, %rd788, %rd786;
	add.s64 	%rd790, %rd789, %rd783;
	add.s64 	%rd791, %rd790, %rd557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9394,%dummy}, %rd778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9395}, %rd778;
	}
	shf.r.wrap.b32 	%r9396, %r9395, %r9394, 28;
	shf.r.wrap.b32 	%r9397, %r9394, %r9395, 28;
	mov.b64 	%rd792, {%r9397, %r9396};
	shf.l.wrap.b32 	%r9398, %r9394, %r9395, 30;
	shf.l.wrap.b32 	%r9399, %r9395, %r9394, 30;
	mov.b64 	%rd793, {%r9399, %r9398};
	xor.b64  	%rd794, %rd793, %rd792;
	shf.l.wrap.b32 	%r9400, %r9394, %r9395, 25;
	shf.l.wrap.b32 	%r9401, %r9395, %r9394, 25;
	mov.b64 	%rd795, {%r9401, %r9400};
	xor.b64  	%rd796, %rd794, %rd795;
	xor.b64  	%rd797, %rd778, %rd730;
	xor.b64  	%rd798, %rd778, %rd754;
	and.b64  	%rd799, %rd798, %rd797;
	xor.b64  	%rd800, %rd799, %rd778;
	add.s64 	%rd801, %rd790, %rd800;
	add.s64 	%rd802, %rd801, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9402,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9403}, %rd791;
	}
	shf.r.wrap.b32 	%r9404, %r9403, %r9402, 14;
	shf.r.wrap.b32 	%r9405, %r9402, %r9403, 14;
	mov.b64 	%rd803, {%r9405, %r9404};
	shf.r.wrap.b32 	%r9406, %r9403, %r9402, 18;
	shf.r.wrap.b32 	%r9407, %r9402, %r9403, 18;
	mov.b64 	%rd804, {%r9407, %r9406};
	xor.b64  	%rd805, %rd804, %rd803;
	shf.l.wrap.b32 	%r9408, %r9402, %r9403, 23;
	shf.l.wrap.b32 	%r9409, %r9403, %r9402, 23;
	mov.b64 	%rd806, {%r9409, %r9408};
	xor.b64  	%rd807, %rd805, %rd806;
	xor.b64  	%rd808, %rd767, %rd743;
	and.b64  	%rd809, %rd791, %rd808;
	xor.b64  	%rd810, %rd809, %rd743;
	add.s64 	%rd811, %rd719, %rd612;
	add.s64 	%rd812, %rd811, %rd2781;
	add.s64 	%rd813, %rd812, %rd810;
	add.s64 	%rd814, %rd813, %rd807;
	add.s64 	%rd815, %rd814, %rd730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9410,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9411}, %rd802;
	}
	shf.r.wrap.b32 	%r9412, %r9411, %r9410, 28;
	shf.r.wrap.b32 	%r9413, %r9410, %r9411, 28;
	mov.b64 	%rd816, {%r9413, %r9412};
	shf.l.wrap.b32 	%r9414, %r9410, %r9411, 30;
	shf.l.wrap.b32 	%r9415, %r9411, %r9410, 30;
	mov.b64 	%rd817, {%r9415, %r9414};
	xor.b64  	%rd818, %rd817, %rd816;
	shf.l.wrap.b32 	%r9416, %r9410, %r9411, 25;
	shf.l.wrap.b32 	%r9417, %r9411, %r9410, 25;
	mov.b64 	%rd819, {%r9417, %r9416};
	xor.b64  	%rd820, %rd818, %rd819;
	xor.b64  	%rd821, %rd802, %rd754;
	xor.b64  	%rd822, %rd802, %rd778;
	and.b64  	%rd823, %rd822, %rd821;
	xor.b64  	%rd824, %rd823, %rd802;
	add.s64 	%rd825, %rd814, %rd824;
	add.s64 	%rd826, %rd825, %rd820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9418,%dummy}, %rd815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9419}, %rd815;
	}
	shf.r.wrap.b32 	%r9420, %r9419, %r9418, 14;
	shf.r.wrap.b32 	%r9421, %r9418, %r9419, 14;
	mov.b64 	%rd827, {%r9421, %r9420};
	shf.r.wrap.b32 	%r9422, %r9419, %r9418, 18;
	shf.r.wrap.b32 	%r9423, %r9418, %r9419, 18;
	mov.b64 	%rd828, {%r9423, %r9422};
	xor.b64  	%rd829, %rd828, %rd827;
	shf.l.wrap.b32 	%r9424, %r9418, %r9419, 23;
	shf.l.wrap.b32 	%r9425, %r9419, %r9418, 23;
	mov.b64 	%rd830, {%r9425, %r9424};
	xor.b64  	%rd831, %rd829, %rd830;
	xor.b64  	%rd832, %rd791, %rd767;
	and.b64  	%rd833, %rd815, %rd832;
	xor.b64  	%rd834, %rd833, %rd767;
	add.s64 	%rd835, %rd743, %rd624;
	add.s64 	%rd836, %rd835, %rd2782;
	add.s64 	%rd837, %rd836, %rd834;
	add.s64 	%rd838, %rd837, %rd831;
	add.s64 	%rd839, %rd838, %rd754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9426,%dummy}, %rd826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9427}, %rd826;
	}
	shf.r.wrap.b32 	%r9428, %r9427, %r9426, 28;
	shf.r.wrap.b32 	%r9429, %r9426, %r9427, 28;
	mov.b64 	%rd840, {%r9429, %r9428};
	shf.l.wrap.b32 	%r9430, %r9426, %r9427, 30;
	shf.l.wrap.b32 	%r9431, %r9427, %r9426, 30;
	mov.b64 	%rd841, {%r9431, %r9430};
	xor.b64  	%rd842, %rd841, %rd840;
	shf.l.wrap.b32 	%r9432, %r9426, %r9427, 25;
	shf.l.wrap.b32 	%r9433, %r9427, %r9426, 25;
	mov.b64 	%rd843, {%r9433, %r9432};
	xor.b64  	%rd844, %rd842, %rd843;
	xor.b64  	%rd845, %rd826, %rd778;
	xor.b64  	%rd846, %rd826, %rd802;
	and.b64  	%rd847, %rd846, %rd845;
	xor.b64  	%rd848, %rd847, %rd826;
	add.s64 	%rd849, %rd838, %rd848;
	add.s64 	%rd850, %rd849, %rd844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9434,%dummy}, %rd839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9435}, %rd839;
	}
	shf.r.wrap.b32 	%r9436, %r9435, %r9434, 14;
	shf.r.wrap.b32 	%r9437, %r9434, %r9435, 14;
	mov.b64 	%rd851, {%r9437, %r9436};
	shf.r.wrap.b32 	%r9438, %r9435, %r9434, 18;
	shf.r.wrap.b32 	%r9439, %r9434, %r9435, 18;
	mov.b64 	%rd852, {%r9439, %r9438};
	xor.b64  	%rd853, %rd852, %rd851;
	shf.l.wrap.b32 	%r9440, %r9434, %r9435, 23;
	shf.l.wrap.b32 	%r9441, %r9435, %r9434, 23;
	mov.b64 	%rd854, {%r9441, %r9440};
	xor.b64  	%rd855, %rd853, %rd854;
	xor.b64  	%rd856, %rd815, %rd791;
	and.b64  	%rd857, %rd839, %rd856;
	xor.b64  	%rd858, %rd857, %rd791;
	add.s64 	%rd859, %rd767, %rd632;
	add.s64 	%rd860, %rd859, %rd2783;
	add.s64 	%rd861, %rd860, %rd858;
	add.s64 	%rd862, %rd861, %rd855;
	add.s64 	%rd863, %rd862, %rd778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9442,%dummy}, %rd850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9443}, %rd850;
	}
	shf.r.wrap.b32 	%r9444, %r9443, %r9442, 28;
	shf.r.wrap.b32 	%r9445, %r9442, %r9443, 28;
	mov.b64 	%rd864, {%r9445, %r9444};
	shf.l.wrap.b32 	%r9446, %r9442, %r9443, 30;
	shf.l.wrap.b32 	%r9447, %r9443, %r9442, 30;
	mov.b64 	%rd865, {%r9447, %r9446};
	xor.b64  	%rd866, %rd865, %rd864;
	shf.l.wrap.b32 	%r9448, %r9442, %r9443, 25;
	shf.l.wrap.b32 	%r9449, %r9443, %r9442, 25;
	mov.b64 	%rd867, {%r9449, %r9448};
	xor.b64  	%rd868, %rd866, %rd867;
	xor.b64  	%rd869, %rd850, %rd802;
	xor.b64  	%rd870, %rd850, %rd826;
	and.b64  	%rd871, %rd870, %rd869;
	xor.b64  	%rd872, %rd871, %rd850;
	add.s64 	%rd873, %rd862, %rd872;
	add.s64 	%rd874, %rd873, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9450,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9451}, %rd863;
	}
	shf.r.wrap.b32 	%r9452, %r9451, %r9450, 14;
	shf.r.wrap.b32 	%r9453, %r9450, %r9451, 14;
	mov.b64 	%rd875, {%r9453, %r9452};
	shf.r.wrap.b32 	%r9454, %r9451, %r9450, 18;
	shf.r.wrap.b32 	%r9455, %r9450, %r9451, 18;
	mov.b64 	%rd876, {%r9455, %r9454};
	xor.b64  	%rd877, %rd876, %rd875;
	shf.l.wrap.b32 	%r9456, %r9450, %r9451, 23;
	shf.l.wrap.b32 	%r9457, %r9451, %r9450, 23;
	mov.b64 	%rd878, {%r9457, %r9456};
	xor.b64  	%rd879, %rd877, %rd878;
	xor.b64  	%rd880, %rd839, %rd815;
	and.b64  	%rd881, %rd863, %rd880;
	xor.b64  	%rd882, %rd881, %rd815;
	add.s64 	%rd883, %rd791, %rd639;
	add.s64 	%rd884, %rd883, %rd2784;
	add.s64 	%rd885, %rd884, %rd882;
	add.s64 	%rd886, %rd885, %rd879;
	add.s64 	%rd887, %rd886, %rd802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9458,%dummy}, %rd874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9459}, %rd874;
	}
	shf.r.wrap.b32 	%r9460, %r9459, %r9458, 28;
	shf.r.wrap.b32 	%r9461, %r9458, %r9459, 28;
	mov.b64 	%rd888, {%r9461, %r9460};
	shf.l.wrap.b32 	%r9462, %r9458, %r9459, 30;
	shf.l.wrap.b32 	%r9463, %r9459, %r9458, 30;
	mov.b64 	%rd889, {%r9463, %r9462};
	xor.b64  	%rd890, %rd889, %rd888;
	shf.l.wrap.b32 	%r9464, %r9458, %r9459, 25;
	shf.l.wrap.b32 	%r9465, %r9459, %r9458, 25;
	mov.b64 	%rd891, {%r9465, %r9464};
	xor.b64  	%rd892, %rd890, %rd891;
	xor.b64  	%rd893, %rd874, %rd826;
	xor.b64  	%rd894, %rd874, %rd850;
	and.b64  	%rd895, %rd894, %rd893;
	xor.b64  	%rd896, %rd895, %rd874;
	add.s64 	%rd897, %rd886, %rd896;
	add.s64 	%rd898, %rd897, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9466,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9467}, %rd887;
	}
	shf.r.wrap.b32 	%r9468, %r9467, %r9466, 14;
	shf.r.wrap.b32 	%r9469, %r9466, %r9467, 14;
	mov.b64 	%rd899, {%r9469, %r9468};
	shf.r.wrap.b32 	%r9470, %r9467, %r9466, 18;
	shf.r.wrap.b32 	%r9471, %r9466, %r9467, 18;
	mov.b64 	%rd900, {%r9471, %r9470};
	xor.b64  	%rd901, %rd900, %rd899;
	shf.l.wrap.b32 	%r9472, %r9466, %r9467, 23;
	shf.l.wrap.b32 	%r9473, %r9467, %r9466, 23;
	mov.b64 	%rd902, {%r9473, %r9472};
	xor.b64  	%rd903, %rd901, %rd902;
	xor.b64  	%rd904, %rd863, %rd839;
	and.b64  	%rd905, %rd887, %rd904;
	xor.b64  	%rd906, %rd905, %rd839;
	add.s64 	%rd907, %rd815, %rd646;
	add.s64 	%rd908, %rd907, %rd2785;
	add.s64 	%rd909, %rd908, %rd906;
	add.s64 	%rd910, %rd909, %rd903;
	add.s64 	%rd911, %rd910, %rd826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9474,%dummy}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9475}, %rd898;
	}
	shf.r.wrap.b32 	%r9476, %r9475, %r9474, 28;
	shf.r.wrap.b32 	%r9477, %r9474, %r9475, 28;
	mov.b64 	%rd912, {%r9477, %r9476};
	shf.l.wrap.b32 	%r9478, %r9474, %r9475, 30;
	shf.l.wrap.b32 	%r9479, %r9475, %r9474, 30;
	mov.b64 	%rd913, {%r9479, %r9478};
	xor.b64  	%rd914, %rd913, %rd912;
	shf.l.wrap.b32 	%r9480, %r9474, %r9475, 25;
	shf.l.wrap.b32 	%r9481, %r9475, %r9474, 25;
	mov.b64 	%rd915, {%r9481, %r9480};
	xor.b64  	%rd916, %rd914, %rd915;
	xor.b64  	%rd917, %rd898, %rd850;
	xor.b64  	%rd918, %rd898, %rd874;
	and.b64  	%rd919, %rd918, %rd917;
	xor.b64  	%rd920, %rd919, %rd898;
	add.s64 	%rd921, %rd910, %rd920;
	add.s64 	%rd922, %rd921, %rd916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9482,%dummy}, %rd911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9483}, %rd911;
	}
	shf.r.wrap.b32 	%r9484, %r9483, %r9482, 14;
	shf.r.wrap.b32 	%r9485, %r9482, %r9483, 14;
	mov.b64 	%rd923, {%r9485, %r9484};
	shf.r.wrap.b32 	%r9486, %r9483, %r9482, 18;
	shf.r.wrap.b32 	%r9487, %r9482, %r9483, 18;
	mov.b64 	%rd924, {%r9487, %r9486};
	xor.b64  	%rd925, %rd924, %rd923;
	shf.l.wrap.b32 	%r9488, %r9482, %r9483, 23;
	shf.l.wrap.b32 	%r9489, %r9483, %r9482, 23;
	mov.b64 	%rd926, {%r9489, %r9488};
	xor.b64  	%rd927, %rd925, %rd926;
	xor.b64  	%rd928, %rd887, %rd863;
	and.b64  	%rd929, %rd911, %rd928;
	xor.b64  	%rd930, %rd929, %rd863;
	add.s64 	%rd931, %rd839, %rd653;
	add.s64 	%rd932, %rd931, %rd2786;
	add.s64 	%rd933, %rd932, %rd930;
	add.s64 	%rd934, %rd933, %rd927;
	add.s64 	%rd935, %rd934, %rd850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9490,%dummy}, %rd922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9491}, %rd922;
	}
	shf.r.wrap.b32 	%r9492, %r9491, %r9490, 28;
	shf.r.wrap.b32 	%r9493, %r9490, %r9491, 28;
	mov.b64 	%rd936, {%r9493, %r9492};
	shf.l.wrap.b32 	%r9494, %r9490, %r9491, 30;
	shf.l.wrap.b32 	%r9495, %r9491, %r9490, 30;
	mov.b64 	%rd937, {%r9495, %r9494};
	xor.b64  	%rd938, %rd937, %rd936;
	shf.l.wrap.b32 	%r9496, %r9490, %r9491, 25;
	shf.l.wrap.b32 	%r9497, %r9491, %r9490, 25;
	mov.b64 	%rd939, {%r9497, %r9496};
	xor.b64  	%rd940, %rd938, %rd939;
	xor.b64  	%rd941, %rd922, %rd874;
	xor.b64  	%rd942, %rd922, %rd898;
	and.b64  	%rd943, %rd942, %rd941;
	xor.b64  	%rd944, %rd943, %rd922;
	add.s64 	%rd945, %rd934, %rd944;
	add.s64 	%rd946, %rd945, %rd940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9498,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9499}, %rd935;
	}
	shf.r.wrap.b32 	%r9500, %r9499, %r9498, 14;
	shf.r.wrap.b32 	%r9501, %r9498, %r9499, 14;
	mov.b64 	%rd947, {%r9501, %r9500};
	shf.r.wrap.b32 	%r9502, %r9499, %r9498, 18;
	shf.r.wrap.b32 	%r9503, %r9498, %r9499, 18;
	mov.b64 	%rd948, {%r9503, %r9502};
	xor.b64  	%rd949, %rd948, %rd947;
	shf.l.wrap.b32 	%r9504, %r9498, %r9499, 23;
	shf.l.wrap.b32 	%r9505, %r9499, %r9498, 23;
	mov.b64 	%rd950, {%r9505, %r9504};
	xor.b64  	%rd951, %rd949, %rd950;
	xor.b64  	%rd952, %rd911, %rd887;
	and.b64  	%rd953, %rd935, %rd952;
	xor.b64  	%rd954, %rd953, %rd887;
	add.s64 	%rd955, %rd863, %rd660;
	add.s64 	%rd956, %rd955, %rd2787;
	add.s64 	%rd957, %rd956, %rd954;
	add.s64 	%rd958, %rd957, %rd951;
	add.s64 	%rd959, %rd958, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9506,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9507}, %rd946;
	}
	shf.r.wrap.b32 	%r9508, %r9507, %r9506, 28;
	shf.r.wrap.b32 	%r9509, %r9506, %r9507, 28;
	mov.b64 	%rd960, {%r9509, %r9508};
	shf.l.wrap.b32 	%r9510, %r9506, %r9507, 30;
	shf.l.wrap.b32 	%r9511, %r9507, %r9506, 30;
	mov.b64 	%rd961, {%r9511, %r9510};
	xor.b64  	%rd962, %rd961, %rd960;
	shf.l.wrap.b32 	%r9512, %r9506, %r9507, 25;
	shf.l.wrap.b32 	%r9513, %r9507, %r9506, 25;
	mov.b64 	%rd963, {%r9513, %r9512};
	xor.b64  	%rd964, %rd962, %rd963;
	xor.b64  	%rd965, %rd946, %rd898;
	xor.b64  	%rd966, %rd946, %rd922;
	and.b64  	%rd967, %rd966, %rd965;
	xor.b64  	%rd968, %rd967, %rd946;
	add.s64 	%rd969, %rd958, %rd968;
	add.s64 	%rd970, %rd969, %rd964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9514,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9515}, %rd959;
	}
	shf.r.wrap.b32 	%r9516, %r9515, %r9514, 14;
	shf.r.wrap.b32 	%r9517, %r9514, %r9515, 14;
	mov.b64 	%rd971, {%r9517, %r9516};
	shf.r.wrap.b32 	%r9518, %r9515, %r9514, 18;
	shf.r.wrap.b32 	%r9519, %r9514, %r9515, 18;
	mov.b64 	%rd972, {%r9519, %r9518};
	xor.b64  	%rd973, %rd972, %rd971;
	shf.l.wrap.b32 	%r9520, %r9514, %r9515, 23;
	shf.l.wrap.b32 	%r9521, %r9515, %r9514, 23;
	mov.b64 	%rd974, {%r9521, %r9520};
	xor.b64  	%rd975, %rd973, %rd974;
	xor.b64  	%rd976, %rd935, %rd911;
	and.b64  	%rd977, %rd959, %rd976;
	xor.b64  	%rd978, %rd977, %rd911;
	add.s64 	%rd979, %rd887, %rd667;
	add.s64 	%rd980, %rd979, %rd2788;
	add.s64 	%rd981, %rd980, %rd978;
	add.s64 	%rd982, %rd981, %rd975;
	add.s64 	%rd983, %rd982, %rd898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9522,%dummy}, %rd970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9523}, %rd970;
	}
	shf.r.wrap.b32 	%r9524, %r9523, %r9522, 28;
	shf.r.wrap.b32 	%r9525, %r9522, %r9523, 28;
	mov.b64 	%rd984, {%r9525, %r9524};
	shf.l.wrap.b32 	%r9526, %r9522, %r9523, 30;
	shf.l.wrap.b32 	%r9527, %r9523, %r9522, 30;
	mov.b64 	%rd985, {%r9527, %r9526};
	xor.b64  	%rd986, %rd985, %rd984;
	shf.l.wrap.b32 	%r9528, %r9522, %r9523, 25;
	shf.l.wrap.b32 	%r9529, %r9523, %r9522, 25;
	mov.b64 	%rd987, {%r9529, %r9528};
	xor.b64  	%rd988, %rd986, %rd987;
	xor.b64  	%rd989, %rd970, %rd922;
	xor.b64  	%rd990, %rd970, %rd946;
	and.b64  	%rd991, %rd990, %rd989;
	xor.b64  	%rd992, %rd991, %rd970;
	add.s64 	%rd993, %rd982, %rd992;
	add.s64 	%rd994, %rd993, %rd988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9530,%dummy}, %rd983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9531}, %rd983;
	}
	shf.r.wrap.b32 	%r9532, %r9531, %r9530, 14;
	shf.r.wrap.b32 	%r9533, %r9530, %r9531, 14;
	mov.b64 	%rd995, {%r9533, %r9532};
	shf.r.wrap.b32 	%r9534, %r9531, %r9530, 18;
	shf.r.wrap.b32 	%r9535, %r9530, %r9531, 18;
	mov.b64 	%rd996, {%r9535, %r9534};
	xor.b64  	%rd997, %rd996, %rd995;
	shf.l.wrap.b32 	%r9536, %r9530, %r9531, 23;
	shf.l.wrap.b32 	%r9537, %r9531, %r9530, 23;
	mov.b64 	%rd998, {%r9537, %r9536};
	xor.b64  	%rd999, %rd997, %rd998;
	xor.b64  	%rd1000, %rd959, %rd935;
	and.b64  	%rd1001, %rd983, %rd1000;
	xor.b64  	%rd1002, %rd1001, %rd935;
	add.s64 	%rd1003, %rd911, %rd674;
	add.s64 	%rd1004, %rd1003, %rd2789;
	add.s64 	%rd1005, %rd1004, %rd1002;
	add.s64 	%rd1006, %rd1005, %rd999;
	add.s64 	%rd1007, %rd1006, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9538,%dummy}, %rd994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9539}, %rd994;
	}
	shf.r.wrap.b32 	%r9540, %r9539, %r9538, 28;
	shf.r.wrap.b32 	%r9541, %r9538, %r9539, 28;
	mov.b64 	%rd1008, {%r9541, %r9540};
	shf.l.wrap.b32 	%r9542, %r9538, %r9539, 30;
	shf.l.wrap.b32 	%r9543, %r9539, %r9538, 30;
	mov.b64 	%rd1009, {%r9543, %r9542};
	xor.b64  	%rd1010, %rd1009, %rd1008;
	shf.l.wrap.b32 	%r9544, %r9538, %r9539, 25;
	shf.l.wrap.b32 	%r9545, %r9539, %r9538, 25;
	mov.b64 	%rd1011, {%r9545, %r9544};
	xor.b64  	%rd1012, %rd1010, %rd1011;
	xor.b64  	%rd1013, %rd994, %rd946;
	xor.b64  	%rd1014, %rd994, %rd970;
	and.b64  	%rd1015, %rd1014, %rd1013;
	xor.b64  	%rd1016, %rd1015, %rd994;
	add.s64 	%rd1017, %rd1006, %rd1016;
	add.s64 	%rd1018, %rd1017, %rd1012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9546,%dummy}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9547}, %rd1007;
	}
	shf.r.wrap.b32 	%r9548, %r9547, %r9546, 14;
	shf.r.wrap.b32 	%r9549, %r9546, %r9547, 14;
	mov.b64 	%rd1019, {%r9549, %r9548};
	shf.r.wrap.b32 	%r9550, %r9547, %r9546, 18;
	shf.r.wrap.b32 	%r9551, %r9546, %r9547, 18;
	mov.b64 	%rd1020, {%r9551, %r9550};
	xor.b64  	%rd1021, %rd1020, %rd1019;
	shf.l.wrap.b32 	%r9552, %r9546, %r9547, 23;
	shf.l.wrap.b32 	%r9553, %r9547, %r9546, 23;
	mov.b64 	%rd1022, {%r9553, %r9552};
	xor.b64  	%rd1023, %rd1021, %rd1022;
	xor.b64  	%rd1024, %rd983, %rd959;
	and.b64  	%rd1025, %rd1007, %rd1024;
	xor.b64  	%rd1026, %rd1025, %rd959;
	add.s64 	%rd1027, %rd935, %rd681;
	add.s64 	%rd1028, %rd1027, %rd2790;
	add.s64 	%rd1029, %rd1028, %rd1026;
	add.s64 	%rd1030, %rd1029, %rd1023;
	add.s64 	%rd1031, %rd1030, %rd946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9554,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9555}, %rd1018;
	}
	shf.r.wrap.b32 	%r9556, %r9555, %r9554, 28;
	shf.r.wrap.b32 	%r9557, %r9554, %r9555, 28;
	mov.b64 	%rd1032, {%r9557, %r9556};
	shf.l.wrap.b32 	%r9558, %r9554, %r9555, 30;
	shf.l.wrap.b32 	%r9559, %r9555, %r9554, 30;
	mov.b64 	%rd1033, {%r9559, %r9558};
	xor.b64  	%rd1034, %rd1033, %rd1032;
	shf.l.wrap.b32 	%r9560, %r9554, %r9555, 25;
	shf.l.wrap.b32 	%r9561, %r9555, %r9554, 25;
	mov.b64 	%rd1035, {%r9561, %r9560};
	xor.b64  	%rd1036, %rd1034, %rd1035;
	xor.b64  	%rd1037, %rd1018, %rd970;
	xor.b64  	%rd1038, %rd1018, %rd994;
	and.b64  	%rd1039, %rd1038, %rd1037;
	xor.b64  	%rd1040, %rd1039, %rd1018;
	add.s64 	%rd1041, %rd1030, %rd1040;
	add.s64 	%rd1042, %rd1041, %rd1036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9562,%dummy}, %rd1031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9563}, %rd1031;
	}
	shf.r.wrap.b32 	%r9564, %r9563, %r9562, 14;
	shf.r.wrap.b32 	%r9565, %r9562, %r9563, 14;
	mov.b64 	%rd1043, {%r9565, %r9564};
	shf.r.wrap.b32 	%r9566, %r9563, %r9562, 18;
	shf.r.wrap.b32 	%r9567, %r9562, %r9563, 18;
	mov.b64 	%rd1044, {%r9567, %r9566};
	xor.b64  	%rd1045, %rd1044, %rd1043;
	shf.l.wrap.b32 	%r9568, %r9562, %r9563, 23;
	shf.l.wrap.b32 	%r9569, %r9563, %r9562, 23;
	mov.b64 	%rd1046, {%r9569, %r9568};
	xor.b64  	%rd1047, %rd1045, %rd1046;
	xor.b64  	%rd1048, %rd1007, %rd983;
	and.b64  	%rd1049, %rd1031, %rd1048;
	xor.b64  	%rd1050, %rd1049, %rd983;
	add.s64 	%rd1051, %rd959, %rd693;
	add.s64 	%rd1052, %rd1051, %rd2791;
	add.s64 	%rd1053, %rd1052, %rd1050;
	add.s64 	%rd1054, %rd1053, %rd1047;
	add.s64 	%rd1055, %rd1054, %rd970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9570,%dummy}, %rd1042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9571}, %rd1042;
	}
	shf.r.wrap.b32 	%r9572, %r9571, %r9570, 28;
	shf.r.wrap.b32 	%r9573, %r9570, %r9571, 28;
	mov.b64 	%rd1056, {%r9573, %r9572};
	shf.l.wrap.b32 	%r9574, %r9570, %r9571, 30;
	shf.l.wrap.b32 	%r9575, %r9571, %r9570, 30;
	mov.b64 	%rd1057, {%r9575, %r9574};
	xor.b64  	%rd1058, %rd1057, %rd1056;
	shf.l.wrap.b32 	%r9576, %r9570, %r9571, 25;
	shf.l.wrap.b32 	%r9577, %r9571, %r9570, 25;
	mov.b64 	%rd1059, {%r9577, %r9576};
	xor.b64  	%rd1060, %rd1058, %rd1059;
	xor.b64  	%rd1061, %rd1042, %rd994;
	xor.b64  	%rd1062, %rd1042, %rd1018;
	and.b64  	%rd1063, %rd1062, %rd1061;
	xor.b64  	%rd1064, %rd1063, %rd1042;
	add.s64 	%rd1065, %rd1054, %rd1064;
	add.s64 	%rd1066, %rd1065, %rd1060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9578,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9579}, %rd1055;
	}
	shf.r.wrap.b32 	%r9580, %r9579, %r9578, 14;
	shf.r.wrap.b32 	%r9581, %r9578, %r9579, 14;
	mov.b64 	%rd1067, {%r9581, %r9580};
	shf.r.wrap.b32 	%r9582, %r9579, %r9578, 18;
	shf.r.wrap.b32 	%r9583, %r9578, %r9579, 18;
	mov.b64 	%rd1068, {%r9583, %r9582};
	xor.b64  	%rd1069, %rd1068, %rd1067;
	shf.l.wrap.b32 	%r9584, %r9578, %r9579, 23;
	shf.l.wrap.b32 	%r9585, %r9579, %r9578, 23;
	mov.b64 	%rd1070, {%r9585, %r9584};
	xor.b64  	%rd1071, %rd1069, %rd1070;
	xor.b64  	%rd1072, %rd1031, %rd1007;
	and.b64  	%rd1073, %rd1055, %rd1072;
	xor.b64  	%rd1074, %rd1073, %rd1007;
	add.s64 	%rd1075, %rd983, %rd706;
	add.s64 	%rd1076, %rd1075, %rd2792;
	add.s64 	%rd1077, %rd1076, %rd1074;
	add.s64 	%rd1078, %rd1077, %rd1071;
	add.s64 	%rd1079, %rd1078, %rd994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9586,%dummy}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9587}, %rd1066;
	}
	shf.r.wrap.b32 	%r9588, %r9587, %r9586, 28;
	shf.r.wrap.b32 	%r9589, %r9586, %r9587, 28;
	mov.b64 	%rd1080, {%r9589, %r9588};
	shf.l.wrap.b32 	%r9590, %r9586, %r9587, 30;
	shf.l.wrap.b32 	%r9591, %r9587, %r9586, 30;
	mov.b64 	%rd1081, {%r9591, %r9590};
	xor.b64  	%rd1082, %rd1081, %rd1080;
	shf.l.wrap.b32 	%r9592, %r9586, %r9587, 25;
	shf.l.wrap.b32 	%r9593, %r9587, %r9586, 25;
	mov.b64 	%rd1083, {%r9593, %r9592};
	xor.b64  	%rd1084, %rd1082, %rd1083;
	xor.b64  	%rd1085, %rd1066, %rd1018;
	xor.b64  	%rd1086, %rd1066, %rd1042;
	and.b64  	%rd1087, %rd1086, %rd1085;
	xor.b64  	%rd1088, %rd1087, %rd1066;
	add.s64 	%rd1089, %rd1078, %rd1088;
	add.s64 	%rd1090, %rd1089, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9594,%dummy}, %rd693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9595}, %rd693;
	}
	shf.r.wrap.b32 	%r9596, %r9595, %r9594, 19;
	shf.r.wrap.b32 	%r9597, %r9594, %r9595, 19;
	mov.b64 	%rd1091, {%r9597, %r9596};
	shf.l.wrap.b32 	%r9598, %r9594, %r9595, 3;
	shf.l.wrap.b32 	%r9599, %r9595, %r9594, 3;
	mov.b64 	%rd1092, {%r9599, %r9598};
	shr.u64 	%rd1093, %rd693, 6;
	xor.b64  	%rd1094, %rd1091, %rd1093;
	xor.b64  	%rd1095, %rd1094, %rd1092;
	shf.r.wrap.b32 	%r9600, %r9235, %r9234, 1;
	shf.r.wrap.b32 	%r9601, %r9234, %r9235, 1;
	mov.b64 	%rd1096, {%r9601, %r9600};
	shf.r.wrap.b32 	%r9602, %r9235, %r9234, 8;
	shf.r.wrap.b32 	%r9603, %r9234, %r9235, 8;
	mov.b64 	%rd1097, {%r9603, %r9602};
	shr.u64 	%rd1098, %rd576, 7;
	xor.b64  	%rd1099, %rd1096, %rd1098;
	xor.b64  	%rd1100, %rd1099, %rd1097;
	add.s64 	%rd1101, %rd564, %rd653;
	add.s64 	%rd1102, %rd1101, %rd1095;
	add.s64 	%rd1103, %rd1102, %rd1100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9604,%dummy}, %rd706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9605}, %rd706;
	}
	shf.r.wrap.b32 	%r9606, %r9605, %r9604, 19;
	shf.r.wrap.b32 	%r9607, %r9604, %r9605, 19;
	mov.b64 	%rd1104, {%r9607, %r9606};
	shf.l.wrap.b32 	%r9608, %r9604, %r9605, 3;
	shf.l.wrap.b32 	%r9609, %r9605, %r9604, 3;
	mov.b64 	%rd1105, {%r9609, %r9608};
	shr.u64 	%rd1106, %rd706, 6;
	xor.b64  	%rd1107, %rd1104, %rd1106;
	xor.b64  	%rd1108, %rd1107, %rd1105;
	shf.r.wrap.b32 	%r9610, %r9247, %r9246, 1;
	shf.r.wrap.b32 	%r9611, %r9246, %r9247, 1;
	mov.b64 	%rd1109, {%r9611, %r9610};
	shf.r.wrap.b32 	%r9612, %r9247, %r9246, 8;
	shf.r.wrap.b32 	%r9613, %r9246, %r9247, 8;
	mov.b64 	%rd1110, {%r9613, %r9612};
	shr.u64 	%rd1111, %rd588, 7;
	xor.b64  	%rd1112, %rd1109, %rd1111;
	xor.b64  	%rd1113, %rd1112, %rd1110;
	add.s64 	%rd1114, %rd576, %rd660;
	add.s64 	%rd1115, %rd1114, %rd1108;
	add.s64 	%rd1116, %rd1115, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9614,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9615}, %rd1103;
	}
	shf.r.wrap.b32 	%r9616, %r9615, %r9614, 19;
	shf.r.wrap.b32 	%r9617, %r9614, %r9615, 19;
	mov.b64 	%rd1117, {%r9617, %r9616};
	shf.l.wrap.b32 	%r9618, %r9614, %r9615, 3;
	shf.l.wrap.b32 	%r9619, %r9615, %r9614, 3;
	mov.b64 	%rd1118, {%r9619, %r9618};
	shr.u64 	%rd1119, %rd1103, 6;
	xor.b64  	%rd1120, %rd1117, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1118;
	shf.r.wrap.b32 	%r9620, %r9259, %r9258, 1;
	shf.r.wrap.b32 	%r9621, %r9258, %r9259, 1;
	mov.b64 	%rd1122, {%r9621, %r9620};
	shf.r.wrap.b32 	%r9622, %r9259, %r9258, 8;
	shf.r.wrap.b32 	%r9623, %r9258, %r9259, 8;
	mov.b64 	%rd1123, {%r9623, %r9622};
	shr.u64 	%rd1124, %rd600, 7;
	xor.b64  	%rd1125, %rd1122, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1123;
	add.s64 	%rd1127, %rd588, %rd667;
	add.s64 	%rd1128, %rd1127, %rd1121;
	add.s64 	%rd1129, %rd1128, %rd1126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9624,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9625}, %rd1116;
	}
	shf.r.wrap.b32 	%r9626, %r9625, %r9624, 19;
	shf.r.wrap.b32 	%r9627, %r9624, %r9625, 19;
	mov.b64 	%rd1130, {%r9627, %r9626};
	shf.l.wrap.b32 	%r9628, %r9624, %r9625, 3;
	shf.l.wrap.b32 	%r9629, %r9625, %r9624, 3;
	mov.b64 	%rd1131, {%r9629, %r9628};
	shr.u64 	%rd1132, %rd1116, 6;
	xor.b64  	%rd1133, %rd1130, %rd1132;
	xor.b64  	%rd1134, %rd1133, %rd1131;
	shf.r.wrap.b32 	%r9630, %r9271, %r9270, 1;
	shf.r.wrap.b32 	%r9631, %r9270, %r9271, 1;
	mov.b64 	%rd1135, {%r9631, %r9630};
	shf.r.wrap.b32 	%r9632, %r9271, %r9270, 8;
	shf.r.wrap.b32 	%r9633, %r9270, %r9271, 8;
	mov.b64 	%rd1136, {%r9633, %r9632};
	shr.u64 	%rd1137, %rd612, 7;
	xor.b64  	%rd1138, %rd1135, %rd1137;
	xor.b64  	%rd1139, %rd1138, %rd1136;
	add.s64 	%rd1140, %rd600, %rd674;
	add.s64 	%rd1141, %rd1140, %rd1134;
	add.s64 	%rd1142, %rd1141, %rd1139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9634,%dummy}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9635}, %rd1129;
	}
	shf.r.wrap.b32 	%r9636, %r9635, %r9634, 19;
	shf.r.wrap.b32 	%r9637, %r9634, %r9635, 19;
	mov.b64 	%rd1143, {%r9637, %r9636};
	shf.l.wrap.b32 	%r9638, %r9634, %r9635, 3;
	shf.l.wrap.b32 	%r9639, %r9635, %r9634, 3;
	mov.b64 	%rd1144, {%r9639, %r9638};
	shr.u64 	%rd1145, %rd1129, 6;
	xor.b64  	%rd1146, %rd1143, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1144;
	shf.r.wrap.b32 	%r9640, %r9277, %r9276, 1;
	shf.r.wrap.b32 	%r9641, %r9276, %r9277, 1;
	mov.b64 	%rd1148, {%r9641, %r9640};
	shf.r.wrap.b32 	%r9642, %r9277, %r9276, 8;
	shf.r.wrap.b32 	%r9643, %r9276, %r9277, 8;
	mov.b64 	%rd1149, {%r9643, %r9642};
	shr.u64 	%rd1150, %rd624, 7;
	xor.b64  	%rd1151, %rd1148, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1149;
	add.s64 	%rd1153, %rd612, %rd681;
	add.s64 	%rd1154, %rd1153, %rd1147;
	add.s64 	%rd1155, %rd1154, %rd1152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9644,%dummy}, %rd1142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9645}, %rd1142;
	}
	shf.r.wrap.b32 	%r9646, %r9645, %r9644, 19;
	shf.r.wrap.b32 	%r9647, %r9644, %r9645, 19;
	mov.b64 	%rd1156, {%r9647, %r9646};
	shf.l.wrap.b32 	%r9648, %r9644, %r9645, 3;
	shf.l.wrap.b32 	%r9649, %r9645, %r9644, 3;
	mov.b64 	%rd1157, {%r9649, %r9648};
	shr.u64 	%rd1158, %rd1142, 6;
	xor.b64  	%rd1159, %rd1156, %rd1158;
	xor.b64  	%rd1160, %rd1159, %rd1157;
	shf.r.wrap.b32 	%r9650, %r9283, %r9282, 1;
	shf.r.wrap.b32 	%r9651, %r9282, %r9283, 1;
	mov.b64 	%rd1161, {%r9651, %r9650};
	shf.r.wrap.b32 	%r9652, %r9283, %r9282, 8;
	shf.r.wrap.b32 	%r9653, %r9282, %r9283, 8;
	mov.b64 	%rd1162, {%r9653, %r9652};
	shr.u64 	%rd1163, %rd632, 7;
	xor.b64  	%rd1164, %rd1161, %rd1163;
	xor.b64  	%rd1165, %rd1164, %rd1162;
	add.s64 	%rd1166, %rd624, %rd693;
	add.s64 	%rd1167, %rd1166, %rd1160;
	add.s64 	%rd1168, %rd1167, %rd1165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9654,%dummy}, %rd1155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9655}, %rd1155;
	}
	shf.r.wrap.b32 	%r9656, %r9655, %r9654, 19;
	shf.r.wrap.b32 	%r9657, %r9654, %r9655, 19;
	mov.b64 	%rd1169, {%r9657, %r9656};
	shf.l.wrap.b32 	%r9658, %r9654, %r9655, 3;
	shf.l.wrap.b32 	%r9659, %r9655, %r9654, 3;
	mov.b64 	%rd1170, {%r9659, %r9658};
	shr.u64 	%rd1171, %rd1155, 6;
	xor.b64  	%rd1172, %rd1169, %rd1171;
	xor.b64  	%rd1173, %rd1172, %rd1170;
	shf.r.wrap.b32 	%r9660, %r9289, %r9288, 1;
	shf.r.wrap.b32 	%r9661, %r9288, %r9289, 1;
	mov.b64 	%rd1174, {%r9661, %r9660};
	shf.r.wrap.b32 	%r9662, %r9289, %r9288, 8;
	shf.r.wrap.b32 	%r9663, %r9288, %r9289, 8;
	mov.b64 	%rd1175, {%r9663, %r9662};
	shr.u64 	%rd1176, %rd639, 7;
	xor.b64  	%rd1177, %rd1174, %rd1176;
	xor.b64  	%rd1178, %rd1177, %rd1175;
	add.s64 	%rd1179, %rd632, %rd706;
	add.s64 	%rd1180, %rd1179, %rd1173;
	add.s64 	%rd1181, %rd1180, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9664,%dummy}, %rd1168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9665}, %rd1168;
	}
	shf.r.wrap.b32 	%r9666, %r9665, %r9664, 19;
	shf.r.wrap.b32 	%r9667, %r9664, %r9665, 19;
	mov.b64 	%rd1182, {%r9667, %r9666};
	shf.l.wrap.b32 	%r9668, %r9664, %r9665, 3;
	shf.l.wrap.b32 	%r9669, %r9665, %r9664, 3;
	mov.b64 	%rd1183, {%r9669, %r9668};
	shr.u64 	%rd1184, %rd1168, 6;
	xor.b64  	%rd1185, %rd1182, %rd1184;
	xor.b64  	%rd1186, %rd1185, %rd1183;
	shf.r.wrap.b32 	%r9670, %r9295, %r9294, 1;
	shf.r.wrap.b32 	%r9671, %r9294, %r9295, 1;
	mov.b64 	%rd1187, {%r9671, %r9670};
	shf.r.wrap.b32 	%r9672, %r9295, %r9294, 8;
	shf.r.wrap.b32 	%r9673, %r9294, %r9295, 8;
	mov.b64 	%rd1188, {%r9673, %r9672};
	shr.u64 	%rd1189, %rd646, 7;
	xor.b64  	%rd1190, %rd1187, %rd1189;
	xor.b64  	%rd1191, %rd1190, %rd1188;
	add.s64 	%rd1192, %rd1103, %rd639;
	add.s64 	%rd1193, %rd1192, %rd1186;
	add.s64 	%rd1194, %rd1193, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9674,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9675}, %rd1181;
	}
	shf.r.wrap.b32 	%r9676, %r9675, %r9674, 19;
	shf.r.wrap.b32 	%r9677, %r9674, %r9675, 19;
	mov.b64 	%rd1195, {%r9677, %r9676};
	shf.l.wrap.b32 	%r9678, %r9674, %r9675, 3;
	shf.l.wrap.b32 	%r9679, %r9675, %r9674, 3;
	mov.b64 	%rd1196, {%r9679, %r9678};
	shr.u64 	%rd1197, %rd1181, 6;
	xor.b64  	%rd1198, %rd1195, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1196;
	shf.r.wrap.b32 	%r9680, %r9301, %r9300, 1;
	shf.r.wrap.b32 	%r9681, %r9300, %r9301, 1;
	mov.b64 	%rd1200, {%r9681, %r9680};
	shf.r.wrap.b32 	%r9682, %r9301, %r9300, 8;
	shf.r.wrap.b32 	%r9683, %r9300, %r9301, 8;
	mov.b64 	%rd1201, {%r9683, %r9682};
	shr.u64 	%rd1202, %rd653, 7;
	xor.b64  	%rd1203, %rd1200, %rd1202;
	xor.b64  	%rd1204, %rd1203, %rd1201;
	add.s64 	%rd1205, %rd1116, %rd646;
	add.s64 	%rd1206, %rd1205, %rd1199;
	add.s64 	%rd1207, %rd1206, %rd1204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9684,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9685}, %rd1194;
	}
	shf.r.wrap.b32 	%r9686, %r9685, %r9684, 19;
	shf.r.wrap.b32 	%r9687, %r9684, %r9685, 19;
	mov.b64 	%rd1208, {%r9687, %r9686};
	shf.l.wrap.b32 	%r9688, %r9684, %r9685, 3;
	shf.l.wrap.b32 	%r9689, %r9685, %r9684, 3;
	mov.b64 	%rd1209, {%r9689, %r9688};
	shr.u64 	%rd1210, %rd1194, 6;
	xor.b64  	%rd1211, %rd1208, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd1209;
	shf.r.wrap.b32 	%r9690, %r9307, %r9306, 1;
	shf.r.wrap.b32 	%r9691, %r9306, %r9307, 1;
	mov.b64 	%rd1213, {%r9691, %r9690};
	shf.r.wrap.b32 	%r9692, %r9307, %r9306, 8;
	shf.r.wrap.b32 	%r9693, %r9306, %r9307, 8;
	mov.b64 	%rd1214, {%r9693, %r9692};
	shr.u64 	%rd1215, %rd660, 7;
	xor.b64  	%rd1216, %rd1213, %rd1215;
	xor.b64  	%rd1217, %rd1216, %rd1214;
	add.s64 	%rd1218, %rd1129, %rd653;
	add.s64 	%rd1219, %rd1218, %rd1212;
	add.s64 	%rd1220, %rd1219, %rd1217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9694,%dummy}, %rd1207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9695}, %rd1207;
	}
	shf.r.wrap.b32 	%r9696, %r9695, %r9694, 19;
	shf.r.wrap.b32 	%r9697, %r9694, %r9695, 19;
	mov.b64 	%rd1221, {%r9697, %r9696};
	shf.l.wrap.b32 	%r9698, %r9694, %r9695, 3;
	shf.l.wrap.b32 	%r9699, %r9695, %r9694, 3;
	mov.b64 	%rd1222, {%r9699, %r9698};
	shr.u64 	%rd1223, %rd1207, 6;
	xor.b64  	%rd1224, %rd1221, %rd1223;
	xor.b64  	%rd1225, %rd1224, %rd1222;
	shf.r.wrap.b32 	%r9700, %r9313, %r9312, 1;
	shf.r.wrap.b32 	%r9701, %r9312, %r9313, 1;
	mov.b64 	%rd1226, {%r9701, %r9700};
	shf.r.wrap.b32 	%r9702, %r9313, %r9312, 8;
	shf.r.wrap.b32 	%r9703, %r9312, %r9313, 8;
	mov.b64 	%rd1227, {%r9703, %r9702};
	shr.u64 	%rd1228, %rd667, 7;
	xor.b64  	%rd1229, %rd1226, %rd1228;
	xor.b64  	%rd1230, %rd1229, %rd1227;
	add.s64 	%rd1231, %rd1142, %rd660;
	add.s64 	%rd1232, %rd1231, %rd1225;
	add.s64 	%rd1233, %rd1232, %rd1230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9704,%dummy}, %rd1220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9705}, %rd1220;
	}
	shf.r.wrap.b32 	%r9706, %r9705, %r9704, 19;
	shf.r.wrap.b32 	%r9707, %r9704, %r9705, 19;
	mov.b64 	%rd1234, {%r9707, %r9706};
	shf.l.wrap.b32 	%r9708, %r9704, %r9705, 3;
	shf.l.wrap.b32 	%r9709, %r9705, %r9704, 3;
	mov.b64 	%rd1235, {%r9709, %r9708};
	shr.u64 	%rd1236, %rd1220, 6;
	xor.b64  	%rd1237, %rd1234, %rd1236;
	xor.b64  	%rd1238, %rd1237, %rd1235;
	shf.r.wrap.b32 	%r9710, %r9319, %r9318, 1;
	shf.r.wrap.b32 	%r9711, %r9318, %r9319, 1;
	mov.b64 	%rd1239, {%r9711, %r9710};
	shf.r.wrap.b32 	%r9712, %r9319, %r9318, 8;
	shf.r.wrap.b32 	%r9713, %r9318, %r9319, 8;
	mov.b64 	%rd1240, {%r9713, %r9712};
	shr.u64 	%rd1241, %rd674, 7;
	xor.b64  	%rd1242, %rd1239, %rd1241;
	xor.b64  	%rd1243, %rd1242, %rd1240;
	add.s64 	%rd1244, %rd1155, %rd667;
	add.s64 	%rd1245, %rd1244, %rd1238;
	add.s64 	%rd1246, %rd1245, %rd1243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9714,%dummy}, %rd1233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9715}, %rd1233;
	}
	shf.r.wrap.b32 	%r9716, %r9715, %r9714, 19;
	shf.r.wrap.b32 	%r9717, %r9714, %r9715, 19;
	mov.b64 	%rd1247, {%r9717, %r9716};
	shf.l.wrap.b32 	%r9718, %r9714, %r9715, 3;
	shf.l.wrap.b32 	%r9719, %r9715, %r9714, 3;
	mov.b64 	%rd1248, {%r9719, %r9718};
	shr.u64 	%rd1249, %rd1233, 6;
	xor.b64  	%rd1250, %rd1247, %rd1249;
	xor.b64  	%rd1251, %rd1250, %rd1248;
	shf.r.wrap.b32 	%r9720, %r9329, %r9328, 1;
	shf.r.wrap.b32 	%r9721, %r9328, %r9329, 1;
	mov.b64 	%rd1252, {%r9721, %r9720};
	shf.r.wrap.b32 	%r9722, %r9329, %r9328, 8;
	shf.r.wrap.b32 	%r9723, %r9328, %r9329, 8;
	mov.b64 	%rd1253, {%r9723, %r9722};
	shr.u64 	%rd1254, %rd681, 7;
	xor.b64  	%rd1255, %rd1252, %rd1254;
	xor.b64  	%rd1256, %rd1255, %rd1253;
	add.s64 	%rd1257, %rd1168, %rd674;
	add.s64 	%rd1258, %rd1257, %rd1251;
	add.s64 	%rd1259, %rd1258, %rd1256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9724,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9725}, %rd1246;
	}
	shf.r.wrap.b32 	%r9726, %r9725, %r9724, 19;
	shf.r.wrap.b32 	%r9727, %r9724, %r9725, 19;
	mov.b64 	%rd1260, {%r9727, %r9726};
	shf.l.wrap.b32 	%r9728, %r9724, %r9725, 3;
	shf.l.wrap.b32 	%r9729, %r9725, %r9724, 3;
	mov.b64 	%rd1261, {%r9729, %r9728};
	shr.u64 	%rd1262, %rd1246, 6;
	xor.b64  	%rd1263, %rd1260, %rd1262;
	xor.b64  	%rd1264, %rd1263, %rd1261;
	shf.r.wrap.b32 	%r9730, %r9595, %r9594, 1;
	shf.r.wrap.b32 	%r9731, %r9594, %r9595, 1;
	mov.b64 	%rd1265, {%r9731, %r9730};
	shf.r.wrap.b32 	%r9732, %r9595, %r9594, 8;
	shf.r.wrap.b32 	%r9733, %r9594, %r9595, 8;
	mov.b64 	%rd1266, {%r9733, %r9732};
	shr.u64 	%rd1267, %rd693, 7;
	xor.b64  	%rd1268, %rd1265, %rd1267;
	xor.b64  	%rd1269, %rd1268, %rd1266;
	add.s64 	%rd1270, %rd1181, %rd681;
	add.s64 	%rd1271, %rd1270, %rd1264;
	add.s64 	%rd1272, %rd1271, %rd1269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9734,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9735}, %rd1259;
	}
	shf.r.wrap.b32 	%r9736, %r9735, %r9734, 19;
	shf.r.wrap.b32 	%r9737, %r9734, %r9735, 19;
	mov.b64 	%rd1273, {%r9737, %r9736};
	shf.l.wrap.b32 	%r9738, %r9734, %r9735, 3;
	shf.l.wrap.b32 	%r9739, %r9735, %r9734, 3;
	mov.b64 	%rd1274, {%r9739, %r9738};
	shr.u64 	%rd1275, %rd1259, 6;
	xor.b64  	%rd1276, %rd1273, %rd1275;
	xor.b64  	%rd1277, %rd1276, %rd1274;
	shf.r.wrap.b32 	%r9740, %r9605, %r9604, 1;
	shf.r.wrap.b32 	%r9741, %r9604, %r9605, 1;
	mov.b64 	%rd1278, {%r9741, %r9740};
	shf.r.wrap.b32 	%r9742, %r9605, %r9604, 8;
	shf.r.wrap.b32 	%r9743, %r9604, %r9605, 8;
	mov.b64 	%rd1279, {%r9743, %r9742};
	shr.u64 	%rd1280, %rd706, 7;
	xor.b64  	%rd1281, %rd1278, %rd1280;
	xor.b64  	%rd1282, %rd1281, %rd1279;
	add.s64 	%rd1283, %rd1194, %rd693;
	add.s64 	%rd1284, %rd1283, %rd1277;
	add.s64 	%rd1285, %rd1284, %rd1282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9744,%dummy}, %rd1272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9745}, %rd1272;
	}
	shf.r.wrap.b32 	%r9746, %r9745, %r9744, 19;
	shf.r.wrap.b32 	%r9747, %r9744, %r9745, 19;
	mov.b64 	%rd1286, {%r9747, %r9746};
	shf.l.wrap.b32 	%r9748, %r9744, %r9745, 3;
	shf.l.wrap.b32 	%r9749, %r9745, %r9744, 3;
	mov.b64 	%rd1287, {%r9749, %r9748};
	shr.u64 	%rd1288, %rd1272, 6;
	xor.b64  	%rd1289, %rd1286, %rd1288;
	xor.b64  	%rd1290, %rd1289, %rd1287;
	shf.r.wrap.b32 	%r9750, %r9615, %r9614, 1;
	shf.r.wrap.b32 	%r9751, %r9614, %r9615, 1;
	mov.b64 	%rd1291, {%r9751, %r9750};
	shf.r.wrap.b32 	%r9752, %r9615, %r9614, 8;
	shf.r.wrap.b32 	%r9753, %r9614, %r9615, 8;
	mov.b64 	%rd1292, {%r9753, %r9752};
	shr.u64 	%rd1293, %rd1103, 7;
	xor.b64  	%rd1294, %rd1291, %rd1293;
	xor.b64  	%rd1295, %rd1294, %rd1292;
	add.s64 	%rd1296, %rd1207, %rd706;
	add.s64 	%rd1297, %rd1296, %rd1290;
	add.s64 	%rd1298, %rd1297, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9754,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9755}, %rd1079;
	}
	shf.r.wrap.b32 	%r9756, %r9755, %r9754, 14;
	shf.r.wrap.b32 	%r9757, %r9754, %r9755, 14;
	mov.b64 	%rd1299, {%r9757, %r9756};
	shf.r.wrap.b32 	%r9758, %r9755, %r9754, 18;
	shf.r.wrap.b32 	%r9759, %r9754, %r9755, 18;
	mov.b64 	%rd1300, {%r9759, %r9758};
	xor.b64  	%rd1301, %rd1300, %rd1299;
	shf.l.wrap.b32 	%r9760, %r9754, %r9755, 23;
	shf.l.wrap.b32 	%r9761, %r9755, %r9754, 23;
	mov.b64 	%rd1302, {%r9761, %r9760};
	xor.b64  	%rd1303, %rd1301, %rd1302;
	xor.b64  	%rd1304, %rd1031, %rd1055;
	and.b64  	%rd1305, %rd1304, %rd1079;
	xor.b64  	%rd1306, %rd1305, %rd1031;
	add.s64 	%rd1307, %rd1306, %rd1007;
	add.s64 	%rd1308, %rd1307, %rd1103;
	add.s64 	%rd1309, %rd1308, %rd2793;
	add.s64 	%rd1310, %rd1309, %rd1303;
	add.s64 	%rd1311, %rd1310, %rd1018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9762,%dummy}, %rd1090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9763}, %rd1090;
	}
	shf.r.wrap.b32 	%r9764, %r9763, %r9762, 28;
	shf.r.wrap.b32 	%r9765, %r9762, %r9763, 28;
	mov.b64 	%rd1312, {%r9765, %r9764};
	shf.l.wrap.b32 	%r9766, %r9762, %r9763, 30;
	shf.l.wrap.b32 	%r9767, %r9763, %r9762, 30;
	mov.b64 	%rd1313, {%r9767, %r9766};
	xor.b64  	%rd1314, %rd1313, %rd1312;
	shf.l.wrap.b32 	%r9768, %r9762, %r9763, 25;
	shf.l.wrap.b32 	%r9769, %r9763, %r9762, 25;
	mov.b64 	%rd1315, {%r9769, %r9768};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	xor.b64  	%rd1317, %rd1090, %rd1042;
	xor.b64  	%rd1318, %rd1090, %rd1066;
	and.b64  	%rd1319, %rd1318, %rd1317;
	xor.b64  	%rd1320, %rd1319, %rd1090;
	add.s64 	%rd1321, %rd1310, %rd1320;
	add.s64 	%rd1322, %rd1321, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9770,%dummy}, %rd1311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9771}, %rd1311;
	}
	shf.r.wrap.b32 	%r9772, %r9771, %r9770, 14;
	shf.r.wrap.b32 	%r9773, %r9770, %r9771, 14;
	mov.b64 	%rd1323, {%r9773, %r9772};
	shf.r.wrap.b32 	%r9774, %r9771, %r9770, 18;
	shf.r.wrap.b32 	%r9775, %r9770, %r9771, 18;
	mov.b64 	%rd1324, {%r9775, %r9774};
	xor.b64  	%rd1325, %rd1324, %rd1323;
	shf.l.wrap.b32 	%r9776, %r9770, %r9771, 23;
	shf.l.wrap.b32 	%r9777, %r9771, %r9770, 23;
	mov.b64 	%rd1326, {%r9777, %r9776};
	xor.b64  	%rd1327, %rd1325, %rd1326;
	xor.b64  	%rd1328, %rd1055, %rd1079;
	and.b64  	%rd1329, %rd1311, %rd1328;
	xor.b64  	%rd1330, %rd1329, %rd1055;
	add.s64 	%rd1331, %rd1116, %rd1031;
	add.s64 	%rd1332, %rd1331, %rd2794;
	add.s64 	%rd1333, %rd1332, %rd1330;
	add.s64 	%rd1334, %rd1333, %rd1327;
	add.s64 	%rd1335, %rd1334, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9778,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9779}, %rd1322;
	}
	shf.r.wrap.b32 	%r9780, %r9779, %r9778, 28;
	shf.r.wrap.b32 	%r9781, %r9778, %r9779, 28;
	mov.b64 	%rd1336, {%r9781, %r9780};
	shf.l.wrap.b32 	%r9782, %r9778, %r9779, 30;
	shf.l.wrap.b32 	%r9783, %r9779, %r9778, 30;
	mov.b64 	%rd1337, {%r9783, %r9782};
	xor.b64  	%rd1338, %rd1337, %rd1336;
	shf.l.wrap.b32 	%r9784, %r9778, %r9779, 25;
	shf.l.wrap.b32 	%r9785, %r9779, %r9778, 25;
	mov.b64 	%rd1339, {%r9785, %r9784};
	xor.b64  	%rd1340, %rd1338, %rd1339;
	xor.b64  	%rd1341, %rd1322, %rd1066;
	xor.b64  	%rd1342, %rd1322, %rd1090;
	and.b64  	%rd1343, %rd1342, %rd1341;
	xor.b64  	%rd1344, %rd1343, %rd1322;
	add.s64 	%rd1345, %rd1334, %rd1344;
	add.s64 	%rd1346, %rd1345, %rd1340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9786,%dummy}, %rd1335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9787}, %rd1335;
	}
	shf.r.wrap.b32 	%r9788, %r9787, %r9786, 14;
	shf.r.wrap.b32 	%r9789, %r9786, %r9787, 14;
	mov.b64 	%rd1347, {%r9789, %r9788};
	shf.r.wrap.b32 	%r9790, %r9787, %r9786, 18;
	shf.r.wrap.b32 	%r9791, %r9786, %r9787, 18;
	mov.b64 	%rd1348, {%r9791, %r9790};
	xor.b64  	%rd1349, %rd1348, %rd1347;
	shf.l.wrap.b32 	%r9792, %r9786, %r9787, 23;
	shf.l.wrap.b32 	%r9793, %r9787, %r9786, 23;
	mov.b64 	%rd1350, {%r9793, %r9792};
	xor.b64  	%rd1351, %rd1349, %rd1350;
	xor.b64  	%rd1352, %rd1311, %rd1079;
	and.b64  	%rd1353, %rd1335, %rd1352;
	xor.b64  	%rd1354, %rd1353, %rd1079;
	add.s64 	%rd1355, %rd1129, %rd1055;
	add.s64 	%rd1356, %rd1355, %rd2795;
	add.s64 	%rd1357, %rd1356, %rd1354;
	add.s64 	%rd1358, %rd1357, %rd1351;
	add.s64 	%rd1359, %rd1358, %rd1066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9794,%dummy}, %rd1346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9795}, %rd1346;
	}
	shf.r.wrap.b32 	%r9796, %r9795, %r9794, 28;
	shf.r.wrap.b32 	%r9797, %r9794, %r9795, 28;
	mov.b64 	%rd1360, {%r9797, %r9796};
	shf.l.wrap.b32 	%r9798, %r9794, %r9795, 30;
	shf.l.wrap.b32 	%r9799, %r9795, %r9794, 30;
	mov.b64 	%rd1361, {%r9799, %r9798};
	xor.b64  	%rd1362, %rd1361, %rd1360;
	shf.l.wrap.b32 	%r9800, %r9794, %r9795, 25;
	shf.l.wrap.b32 	%r9801, %r9795, %r9794, 25;
	mov.b64 	%rd1363, {%r9801, %r9800};
	xor.b64  	%rd1364, %rd1362, %rd1363;
	xor.b64  	%rd1365, %rd1346, %rd1090;
	xor.b64  	%rd1366, %rd1346, %rd1322;
	and.b64  	%rd1367, %rd1366, %rd1365;
	xor.b64  	%rd1368, %rd1367, %rd1346;
	add.s64 	%rd1369, %rd1358, %rd1368;
	add.s64 	%rd1370, %rd1369, %rd1364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9802,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9803}, %rd1359;
	}
	shf.r.wrap.b32 	%r9804, %r9803, %r9802, 14;
	shf.r.wrap.b32 	%r9805, %r9802, %r9803, 14;
	mov.b64 	%rd1371, {%r9805, %r9804};
	shf.r.wrap.b32 	%r9806, %r9803, %r9802, 18;
	shf.r.wrap.b32 	%r9807, %r9802, %r9803, 18;
	mov.b64 	%rd1372, {%r9807, %r9806};
	xor.b64  	%rd1373, %rd1372, %rd1371;
	shf.l.wrap.b32 	%r9808, %r9802, %r9803, 23;
	shf.l.wrap.b32 	%r9809, %r9803, %r9802, 23;
	mov.b64 	%rd1374, {%r9809, %r9808};
	xor.b64  	%rd1375, %rd1373, %rd1374;
	xor.b64  	%rd1376, %rd1335, %rd1311;
	and.b64  	%rd1377, %rd1359, %rd1376;
	xor.b64  	%rd1378, %rd1377, %rd1311;
	add.s64 	%rd1379, %rd1142, %rd1079;
	add.s64 	%rd1380, %rd1379, %rd2796;
	add.s64 	%rd1381, %rd1380, %rd1378;
	add.s64 	%rd1382, %rd1381, %rd1375;
	add.s64 	%rd1383, %rd1382, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9810,%dummy}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9811}, %rd1370;
	}
	shf.r.wrap.b32 	%r9812, %r9811, %r9810, 28;
	shf.r.wrap.b32 	%r9813, %r9810, %r9811, 28;
	mov.b64 	%rd1384, {%r9813, %r9812};
	shf.l.wrap.b32 	%r9814, %r9810, %r9811, 30;
	shf.l.wrap.b32 	%r9815, %r9811, %r9810, 30;
	mov.b64 	%rd1385, {%r9815, %r9814};
	xor.b64  	%rd1386, %rd1385, %rd1384;
	shf.l.wrap.b32 	%r9816, %r9810, %r9811, 25;
	shf.l.wrap.b32 	%r9817, %r9811, %r9810, 25;
	mov.b64 	%rd1387, {%r9817, %r9816};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	xor.b64  	%rd1389, %rd1370, %rd1322;
	xor.b64  	%rd1390, %rd1370, %rd1346;
	and.b64  	%rd1391, %rd1390, %rd1389;
	xor.b64  	%rd1392, %rd1391, %rd1370;
	add.s64 	%rd1393, %rd1382, %rd1392;
	add.s64 	%rd1394, %rd1393, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9818,%dummy}, %rd1383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9819}, %rd1383;
	}
	shf.r.wrap.b32 	%r9820, %r9819, %r9818, 14;
	shf.r.wrap.b32 	%r9821, %r9818, %r9819, 14;
	mov.b64 	%rd1395, {%r9821, %r9820};
	shf.r.wrap.b32 	%r9822, %r9819, %r9818, 18;
	shf.r.wrap.b32 	%r9823, %r9818, %r9819, 18;
	mov.b64 	%rd1396, {%r9823, %r9822};
	xor.b64  	%rd1397, %rd1396, %rd1395;
	shf.l.wrap.b32 	%r9824, %r9818, %r9819, 23;
	shf.l.wrap.b32 	%r9825, %r9819, %r9818, 23;
	mov.b64 	%rd1398, {%r9825, %r9824};
	xor.b64  	%rd1399, %rd1397, %rd1398;
	xor.b64  	%rd1400, %rd1359, %rd1335;
	and.b64  	%rd1401, %rd1383, %rd1400;
	xor.b64  	%rd1402, %rd1401, %rd1335;
	add.s64 	%rd1403, %rd1311, %rd1155;
	add.s64 	%rd1404, %rd1403, %rd2797;
	add.s64 	%rd1405, %rd1404, %rd1402;
	add.s64 	%rd1406, %rd1405, %rd1399;
	add.s64 	%rd1407, %rd1406, %rd1322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9826,%dummy}, %rd1394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9827}, %rd1394;
	}
	shf.r.wrap.b32 	%r9828, %r9827, %r9826, 28;
	shf.r.wrap.b32 	%r9829, %r9826, %r9827, 28;
	mov.b64 	%rd1408, {%r9829, %r9828};
	shf.l.wrap.b32 	%r9830, %r9826, %r9827, 30;
	shf.l.wrap.b32 	%r9831, %r9827, %r9826, 30;
	mov.b64 	%rd1409, {%r9831, %r9830};
	xor.b64  	%rd1410, %rd1409, %rd1408;
	shf.l.wrap.b32 	%r9832, %r9826, %r9827, 25;
	shf.l.wrap.b32 	%r9833, %r9827, %r9826, 25;
	mov.b64 	%rd1411, {%r9833, %r9832};
	xor.b64  	%rd1412, %rd1410, %rd1411;
	xor.b64  	%rd1413, %rd1394, %rd1346;
	xor.b64  	%rd1414, %rd1394, %rd1370;
	and.b64  	%rd1415, %rd1414, %rd1413;
	xor.b64  	%rd1416, %rd1415, %rd1394;
	add.s64 	%rd1417, %rd1406, %rd1416;
	add.s64 	%rd1418, %rd1417, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9834,%dummy}, %rd1407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9835}, %rd1407;
	}
	shf.r.wrap.b32 	%r9836, %r9835, %r9834, 14;
	shf.r.wrap.b32 	%r9837, %r9834, %r9835, 14;
	mov.b64 	%rd1419, {%r9837, %r9836};
	shf.r.wrap.b32 	%r9838, %r9835, %r9834, 18;
	shf.r.wrap.b32 	%r9839, %r9834, %r9835, 18;
	mov.b64 	%rd1420, {%r9839, %r9838};
	xor.b64  	%rd1421, %rd1420, %rd1419;
	shf.l.wrap.b32 	%r9840, %r9834, %r9835, 23;
	shf.l.wrap.b32 	%r9841, %r9835, %r9834, 23;
	mov.b64 	%rd1422, {%r9841, %r9840};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	xor.b64  	%rd1424, %rd1383, %rd1359;
	and.b64  	%rd1425, %rd1407, %rd1424;
	xor.b64  	%rd1426, %rd1425, %rd1359;
	add.s64 	%rd1427, %rd1335, %rd1168;
	add.s64 	%rd1428, %rd1427, %rd2798;
	add.s64 	%rd1429, %rd1428, %rd1426;
	add.s64 	%rd1430, %rd1429, %rd1423;
	add.s64 	%rd1431, %rd1430, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9842,%dummy}, %rd1418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9843}, %rd1418;
	}
	shf.r.wrap.b32 	%r9844, %r9843, %r9842, 28;
	shf.r.wrap.b32 	%r9845, %r9842, %r9843, 28;
	mov.b64 	%rd1432, {%r9845, %r9844};
	shf.l.wrap.b32 	%r9846, %r9842, %r9843, 30;
	shf.l.wrap.b32 	%r9847, %r9843, %r9842, 30;
	mov.b64 	%rd1433, {%r9847, %r9846};
	xor.b64  	%rd1434, %rd1433, %rd1432;
	shf.l.wrap.b32 	%r9848, %r9842, %r9843, 25;
	shf.l.wrap.b32 	%r9849, %r9843, %r9842, 25;
	mov.b64 	%rd1435, {%r9849, %r9848};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	xor.b64  	%rd1437, %rd1418, %rd1370;
	xor.b64  	%rd1438, %rd1418, %rd1394;
	and.b64  	%rd1439, %rd1438, %rd1437;
	xor.b64  	%rd1440, %rd1439, %rd1418;
	add.s64 	%rd1441, %rd1430, %rd1440;
	add.s64 	%rd1442, %rd1441, %rd1436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9850,%dummy}, %rd1431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9851}, %rd1431;
	}
	shf.r.wrap.b32 	%r9852, %r9851, %r9850, 14;
	shf.r.wrap.b32 	%r9853, %r9850, %r9851, 14;
	mov.b64 	%rd1443, {%r9853, %r9852};
	shf.r.wrap.b32 	%r9854, %r9851, %r9850, 18;
	shf.r.wrap.b32 	%r9855, %r9850, %r9851, 18;
	mov.b64 	%rd1444, {%r9855, %r9854};
	xor.b64  	%rd1445, %rd1444, %rd1443;
	shf.l.wrap.b32 	%r9856, %r9850, %r9851, 23;
	shf.l.wrap.b32 	%r9857, %r9851, %r9850, 23;
	mov.b64 	%rd1446, {%r9857, %r9856};
	xor.b64  	%rd1447, %rd1445, %rd1446;
	xor.b64  	%rd1448, %rd1407, %rd1383;
	and.b64  	%rd1449, %rd1431, %rd1448;
	xor.b64  	%rd1450, %rd1449, %rd1383;
	add.s64 	%rd1451, %rd1359, %rd1181;
	add.s64 	%rd1452, %rd1451, %rd2799;
	add.s64 	%rd1453, %rd1452, %rd1450;
	add.s64 	%rd1454, %rd1453, %rd1447;
	add.s64 	%rd1455, %rd1454, %rd1370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9858,%dummy}, %rd1442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9859}, %rd1442;
	}
	shf.r.wrap.b32 	%r9860, %r9859, %r9858, 28;
	shf.r.wrap.b32 	%r9861, %r9858, %r9859, 28;
	mov.b64 	%rd1456, {%r9861, %r9860};
	shf.l.wrap.b32 	%r9862, %r9858, %r9859, 30;
	shf.l.wrap.b32 	%r9863, %r9859, %r9858, 30;
	mov.b64 	%rd1457, {%r9863, %r9862};
	xor.b64  	%rd1458, %rd1457, %rd1456;
	shf.l.wrap.b32 	%r9864, %r9858, %r9859, 25;
	shf.l.wrap.b32 	%r9865, %r9859, %r9858, 25;
	mov.b64 	%rd1459, {%r9865, %r9864};
	xor.b64  	%rd1460, %rd1458, %rd1459;
	xor.b64  	%rd1461, %rd1442, %rd1394;
	xor.b64  	%rd1462, %rd1442, %rd1418;
	and.b64  	%rd1463, %rd1462, %rd1461;
	xor.b64  	%rd1464, %rd1463, %rd1442;
	add.s64 	%rd1465, %rd1454, %rd1464;
	add.s64 	%rd1466, %rd1465, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9866,%dummy}, %rd1455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9867}, %rd1455;
	}
	shf.r.wrap.b32 	%r9868, %r9867, %r9866, 14;
	shf.r.wrap.b32 	%r9869, %r9866, %r9867, 14;
	mov.b64 	%rd1467, {%r9869, %r9868};
	shf.r.wrap.b32 	%r9870, %r9867, %r9866, 18;
	shf.r.wrap.b32 	%r9871, %r9866, %r9867, 18;
	mov.b64 	%rd1468, {%r9871, %r9870};
	xor.b64  	%rd1469, %rd1468, %rd1467;
	shf.l.wrap.b32 	%r9872, %r9866, %r9867, 23;
	shf.l.wrap.b32 	%r9873, %r9867, %r9866, 23;
	mov.b64 	%rd1470, {%r9873, %r9872};
	xor.b64  	%rd1471, %rd1469, %rd1470;
	xor.b64  	%rd1472, %rd1431, %rd1407;
	and.b64  	%rd1473, %rd1455, %rd1472;
	xor.b64  	%rd1474, %rd1473, %rd1407;
	add.s64 	%rd1475, %rd1383, %rd1194;
	add.s64 	%rd1476, %rd1475, %rd2800;
	add.s64 	%rd1477, %rd1476, %rd1474;
	add.s64 	%rd1478, %rd1477, %rd1471;
	add.s64 	%rd1479, %rd1478, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9874,%dummy}, %rd1466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9875}, %rd1466;
	}
	shf.r.wrap.b32 	%r9876, %r9875, %r9874, 28;
	shf.r.wrap.b32 	%r9877, %r9874, %r9875, 28;
	mov.b64 	%rd1480, {%r9877, %r9876};
	shf.l.wrap.b32 	%r9878, %r9874, %r9875, 30;
	shf.l.wrap.b32 	%r9879, %r9875, %r9874, 30;
	mov.b64 	%rd1481, {%r9879, %r9878};
	xor.b64  	%rd1482, %rd1481, %rd1480;
	shf.l.wrap.b32 	%r9880, %r9874, %r9875, 25;
	shf.l.wrap.b32 	%r9881, %r9875, %r9874, 25;
	mov.b64 	%rd1483, {%r9881, %r9880};
	xor.b64  	%rd1484, %rd1482, %rd1483;
	xor.b64  	%rd1485, %rd1466, %rd1418;
	xor.b64  	%rd1486, %rd1466, %rd1442;
	and.b64  	%rd1487, %rd1486, %rd1485;
	xor.b64  	%rd1488, %rd1487, %rd1466;
	add.s64 	%rd1489, %rd1478, %rd1488;
	add.s64 	%rd1490, %rd1489, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9882,%dummy}, %rd1479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9883}, %rd1479;
	}
	shf.r.wrap.b32 	%r9884, %r9883, %r9882, 14;
	shf.r.wrap.b32 	%r9885, %r9882, %r9883, 14;
	mov.b64 	%rd1491, {%r9885, %r9884};
	shf.r.wrap.b32 	%r9886, %r9883, %r9882, 18;
	shf.r.wrap.b32 	%r9887, %r9882, %r9883, 18;
	mov.b64 	%rd1492, {%r9887, %r9886};
	xor.b64  	%rd1493, %rd1492, %rd1491;
	shf.l.wrap.b32 	%r9888, %r9882, %r9883, 23;
	shf.l.wrap.b32 	%r9889, %r9883, %r9882, 23;
	mov.b64 	%rd1494, {%r9889, %r9888};
	xor.b64  	%rd1495, %rd1493, %rd1494;
	xor.b64  	%rd1496, %rd1455, %rd1431;
	and.b64  	%rd1497, %rd1479, %rd1496;
	xor.b64  	%rd1498, %rd1497, %rd1431;
	add.s64 	%rd1499, %rd1407, %rd1207;
	add.s64 	%rd1500, %rd1499, %rd2801;
	add.s64 	%rd1501, %rd1500, %rd1498;
	add.s64 	%rd1502, %rd1501, %rd1495;
	add.s64 	%rd1503, %rd1502, %rd1418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9890,%dummy}, %rd1490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9891}, %rd1490;
	}
	shf.r.wrap.b32 	%r9892, %r9891, %r9890, 28;
	shf.r.wrap.b32 	%r9893, %r9890, %r9891, 28;
	mov.b64 	%rd1504, {%r9893, %r9892};
	shf.l.wrap.b32 	%r9894, %r9890, %r9891, 30;
	shf.l.wrap.b32 	%r9895, %r9891, %r9890, 30;
	mov.b64 	%rd1505, {%r9895, %r9894};
	xor.b64  	%rd1506, %rd1505, %rd1504;
	shf.l.wrap.b32 	%r9896, %r9890, %r9891, 25;
	shf.l.wrap.b32 	%r9897, %r9891, %r9890, 25;
	mov.b64 	%rd1507, {%r9897, %r9896};
	xor.b64  	%rd1508, %rd1506, %rd1507;
	xor.b64  	%rd1509, %rd1490, %rd1442;
	xor.b64  	%rd1510, %rd1490, %rd1466;
	and.b64  	%rd1511, %rd1510, %rd1509;
	xor.b64  	%rd1512, %rd1511, %rd1490;
	add.s64 	%rd1513, %rd1502, %rd1512;
	add.s64 	%rd1514, %rd1513, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9898,%dummy}, %rd1503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9899}, %rd1503;
	}
	shf.r.wrap.b32 	%r9900, %r9899, %r9898, 14;
	shf.r.wrap.b32 	%r9901, %r9898, %r9899, 14;
	mov.b64 	%rd1515, {%r9901, %r9900};
	shf.r.wrap.b32 	%r9902, %r9899, %r9898, 18;
	shf.r.wrap.b32 	%r9903, %r9898, %r9899, 18;
	mov.b64 	%rd1516, {%r9903, %r9902};
	xor.b64  	%rd1517, %rd1516, %rd1515;
	shf.l.wrap.b32 	%r9904, %r9898, %r9899, 23;
	shf.l.wrap.b32 	%r9905, %r9899, %r9898, 23;
	mov.b64 	%rd1518, {%r9905, %r9904};
	xor.b64  	%rd1519, %rd1517, %rd1518;
	xor.b64  	%rd1520, %rd1479, %rd1455;
	and.b64  	%rd1521, %rd1503, %rd1520;
	xor.b64  	%rd1522, %rd1521, %rd1455;
	add.s64 	%rd1523, %rd1431, %rd1220;
	add.s64 	%rd1524, %rd1523, %rd2802;
	add.s64 	%rd1525, %rd1524, %rd1522;
	add.s64 	%rd1526, %rd1525, %rd1519;
	add.s64 	%rd1527, %rd1526, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9906,%dummy}, %rd1514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9907}, %rd1514;
	}
	shf.r.wrap.b32 	%r9908, %r9907, %r9906, 28;
	shf.r.wrap.b32 	%r9909, %r9906, %r9907, 28;
	mov.b64 	%rd1528, {%r9909, %r9908};
	shf.l.wrap.b32 	%r9910, %r9906, %r9907, 30;
	shf.l.wrap.b32 	%r9911, %r9907, %r9906, 30;
	mov.b64 	%rd1529, {%r9911, %r9910};
	xor.b64  	%rd1530, %rd1529, %rd1528;
	shf.l.wrap.b32 	%r9912, %r9906, %r9907, 25;
	shf.l.wrap.b32 	%r9913, %r9907, %r9906, 25;
	mov.b64 	%rd1531, {%r9913, %r9912};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	xor.b64  	%rd1533, %rd1514, %rd1466;
	xor.b64  	%rd1534, %rd1514, %rd1490;
	and.b64  	%rd1535, %rd1534, %rd1533;
	xor.b64  	%rd1536, %rd1535, %rd1514;
	add.s64 	%rd1537, %rd1526, %rd1536;
	add.s64 	%rd1538, %rd1537, %rd1532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9914,%dummy}, %rd1527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9915}, %rd1527;
	}
	shf.r.wrap.b32 	%r9916, %r9915, %r9914, 14;
	shf.r.wrap.b32 	%r9917, %r9914, %r9915, 14;
	mov.b64 	%rd1539, {%r9917, %r9916};
	shf.r.wrap.b32 	%r9918, %r9915, %r9914, 18;
	shf.r.wrap.b32 	%r9919, %r9914, %r9915, 18;
	mov.b64 	%rd1540, {%r9919, %r9918};
	xor.b64  	%rd1541, %rd1540, %rd1539;
	shf.l.wrap.b32 	%r9920, %r9914, %r9915, 23;
	shf.l.wrap.b32 	%r9921, %r9915, %r9914, 23;
	mov.b64 	%rd1542, {%r9921, %r9920};
	xor.b64  	%rd1543, %rd1541, %rd1542;
	xor.b64  	%rd1544, %rd1503, %rd1479;
	and.b64  	%rd1545, %rd1527, %rd1544;
	xor.b64  	%rd1546, %rd1545, %rd1479;
	add.s64 	%rd1547, %rd1455, %rd1233;
	add.s64 	%rd1548, %rd1547, %rd2803;
	add.s64 	%rd1549, %rd1548, %rd1546;
	add.s64 	%rd1550, %rd1549, %rd1543;
	add.s64 	%rd1551, %rd1550, %rd1466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9922,%dummy}, %rd1538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9923}, %rd1538;
	}
	shf.r.wrap.b32 	%r9924, %r9923, %r9922, 28;
	shf.r.wrap.b32 	%r9925, %r9922, %r9923, 28;
	mov.b64 	%rd1552, {%r9925, %r9924};
	shf.l.wrap.b32 	%r9926, %r9922, %r9923, 30;
	shf.l.wrap.b32 	%r9927, %r9923, %r9922, 30;
	mov.b64 	%rd1553, {%r9927, %r9926};
	xor.b64  	%rd1554, %rd1553, %rd1552;
	shf.l.wrap.b32 	%r9928, %r9922, %r9923, 25;
	shf.l.wrap.b32 	%r9929, %r9923, %r9922, 25;
	mov.b64 	%rd1555, {%r9929, %r9928};
	xor.b64  	%rd1556, %rd1554, %rd1555;
	xor.b64  	%rd1557, %rd1538, %rd1490;
	xor.b64  	%rd1558, %rd1538, %rd1514;
	and.b64  	%rd1559, %rd1558, %rd1557;
	xor.b64  	%rd1560, %rd1559, %rd1538;
	add.s64 	%rd1561, %rd1550, %rd1560;
	add.s64 	%rd1562, %rd1561, %rd1556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9930,%dummy}, %rd1551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9931}, %rd1551;
	}
	shf.r.wrap.b32 	%r9932, %r9931, %r9930, 14;
	shf.r.wrap.b32 	%r9933, %r9930, %r9931, 14;
	mov.b64 	%rd1563, {%r9933, %r9932};
	shf.r.wrap.b32 	%r9934, %r9931, %r9930, 18;
	shf.r.wrap.b32 	%r9935, %r9930, %r9931, 18;
	mov.b64 	%rd1564, {%r9935, %r9934};
	xor.b64  	%rd1565, %rd1564, %rd1563;
	shf.l.wrap.b32 	%r9936, %r9930, %r9931, 23;
	shf.l.wrap.b32 	%r9937, %r9931, %r9930, 23;
	mov.b64 	%rd1566, {%r9937, %r9936};
	xor.b64  	%rd1567, %rd1565, %rd1566;
	xor.b64  	%rd1568, %rd1527, %rd1503;
	and.b64  	%rd1569, %rd1551, %rd1568;
	xor.b64  	%rd1570, %rd1569, %rd1503;
	add.s64 	%rd1571, %rd1479, %rd1246;
	add.s64 	%rd1572, %rd1571, %rd2804;
	add.s64 	%rd1573, %rd1572, %rd1570;
	add.s64 	%rd1574, %rd1573, %rd1567;
	add.s64 	%rd1575, %rd1574, %rd1490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9938,%dummy}, %rd1562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9939}, %rd1562;
	}
	shf.r.wrap.b32 	%r9940, %r9939, %r9938, 28;
	shf.r.wrap.b32 	%r9941, %r9938, %r9939, 28;
	mov.b64 	%rd1576, {%r9941, %r9940};
	shf.l.wrap.b32 	%r9942, %r9938, %r9939, 30;
	shf.l.wrap.b32 	%r9943, %r9939, %r9938, 30;
	mov.b64 	%rd1577, {%r9943, %r9942};
	xor.b64  	%rd1578, %rd1577, %rd1576;
	shf.l.wrap.b32 	%r9944, %r9938, %r9939, 25;
	shf.l.wrap.b32 	%r9945, %r9939, %r9938, 25;
	mov.b64 	%rd1579, {%r9945, %r9944};
	xor.b64  	%rd1580, %rd1578, %rd1579;
	xor.b64  	%rd1581, %rd1562, %rd1514;
	xor.b64  	%rd1582, %rd1562, %rd1538;
	and.b64  	%rd1583, %rd1582, %rd1581;
	xor.b64  	%rd1584, %rd1583, %rd1562;
	add.s64 	%rd1585, %rd1574, %rd1584;
	add.s64 	%rd1586, %rd1585, %rd1580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9946,%dummy}, %rd1575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9947}, %rd1575;
	}
	shf.r.wrap.b32 	%r9948, %r9947, %r9946, 14;
	shf.r.wrap.b32 	%r9949, %r9946, %r9947, 14;
	mov.b64 	%rd1587, {%r9949, %r9948};
	shf.r.wrap.b32 	%r9950, %r9947, %r9946, 18;
	shf.r.wrap.b32 	%r9951, %r9946, %r9947, 18;
	mov.b64 	%rd1588, {%r9951, %r9950};
	xor.b64  	%rd1589, %rd1588, %rd1587;
	shf.l.wrap.b32 	%r9952, %r9946, %r9947, 23;
	shf.l.wrap.b32 	%r9953, %r9947, %r9946, 23;
	mov.b64 	%rd1590, {%r9953, %r9952};
	xor.b64  	%rd1591, %rd1589, %rd1590;
	xor.b64  	%rd1592, %rd1551, %rd1527;
	and.b64  	%rd1593, %rd1575, %rd1592;
	xor.b64  	%rd1594, %rd1593, %rd1527;
	add.s64 	%rd1595, %rd1503, %rd1259;
	add.s64 	%rd1596, %rd1595, %rd2805;
	add.s64 	%rd1597, %rd1596, %rd1594;
	add.s64 	%rd1598, %rd1597, %rd1591;
	add.s64 	%rd1599, %rd1598, %rd1514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9954,%dummy}, %rd1586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9955}, %rd1586;
	}
	shf.r.wrap.b32 	%r9956, %r9955, %r9954, 28;
	shf.r.wrap.b32 	%r9957, %r9954, %r9955, 28;
	mov.b64 	%rd1600, {%r9957, %r9956};
	shf.l.wrap.b32 	%r9958, %r9954, %r9955, 30;
	shf.l.wrap.b32 	%r9959, %r9955, %r9954, 30;
	mov.b64 	%rd1601, {%r9959, %r9958};
	xor.b64  	%rd1602, %rd1601, %rd1600;
	shf.l.wrap.b32 	%r9960, %r9954, %r9955, 25;
	shf.l.wrap.b32 	%r9961, %r9955, %r9954, 25;
	mov.b64 	%rd1603, {%r9961, %r9960};
	xor.b64  	%rd1604, %rd1602, %rd1603;
	xor.b64  	%rd1605, %rd1586, %rd1538;
	xor.b64  	%rd1606, %rd1586, %rd1562;
	and.b64  	%rd1607, %rd1606, %rd1605;
	xor.b64  	%rd1608, %rd1607, %rd1586;
	add.s64 	%rd1609, %rd1598, %rd1608;
	add.s64 	%rd1610, %rd1609, %rd1604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9962,%dummy}, %rd1599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9963}, %rd1599;
	}
	shf.r.wrap.b32 	%r9964, %r9963, %r9962, 14;
	shf.r.wrap.b32 	%r9965, %r9962, %r9963, 14;
	mov.b64 	%rd1611, {%r9965, %r9964};
	shf.r.wrap.b32 	%r9966, %r9963, %r9962, 18;
	shf.r.wrap.b32 	%r9967, %r9962, %r9963, 18;
	mov.b64 	%rd1612, {%r9967, %r9966};
	xor.b64  	%rd1613, %rd1612, %rd1611;
	shf.l.wrap.b32 	%r9968, %r9962, %r9963, 23;
	shf.l.wrap.b32 	%r9969, %r9963, %r9962, 23;
	mov.b64 	%rd1614, {%r9969, %r9968};
	xor.b64  	%rd1615, %rd1613, %rd1614;
	xor.b64  	%rd1616, %rd1575, %rd1551;
	and.b64  	%rd1617, %rd1599, %rd1616;
	xor.b64  	%rd1618, %rd1617, %rd1551;
	add.s64 	%rd1619, %rd1527, %rd1272;
	add.s64 	%rd1620, %rd1619, %rd2806;
	add.s64 	%rd1621, %rd1620, %rd1618;
	add.s64 	%rd1622, %rd1621, %rd1615;
	add.s64 	%rd1623, %rd1622, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9970,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9971}, %rd1610;
	}
	shf.r.wrap.b32 	%r9972, %r9971, %r9970, 28;
	shf.r.wrap.b32 	%r9973, %r9970, %r9971, 28;
	mov.b64 	%rd1624, {%r9973, %r9972};
	shf.l.wrap.b32 	%r9974, %r9970, %r9971, 30;
	shf.l.wrap.b32 	%r9975, %r9971, %r9970, 30;
	mov.b64 	%rd1625, {%r9975, %r9974};
	xor.b64  	%rd1626, %rd1625, %rd1624;
	shf.l.wrap.b32 	%r9976, %r9970, %r9971, 25;
	shf.l.wrap.b32 	%r9977, %r9971, %r9970, 25;
	mov.b64 	%rd1627, {%r9977, %r9976};
	xor.b64  	%rd1628, %rd1626, %rd1627;
	xor.b64  	%rd1629, %rd1610, %rd1562;
	xor.b64  	%rd1630, %rd1610, %rd1586;
	and.b64  	%rd1631, %rd1630, %rd1629;
	xor.b64  	%rd1632, %rd1631, %rd1610;
	add.s64 	%rd1633, %rd1622, %rd1632;
	add.s64 	%rd1634, %rd1633, %rd1628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9978,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9979}, %rd1623;
	}
	shf.r.wrap.b32 	%r9980, %r9979, %r9978, 14;
	shf.r.wrap.b32 	%r9981, %r9978, %r9979, 14;
	mov.b64 	%rd1635, {%r9981, %r9980};
	shf.r.wrap.b32 	%r9982, %r9979, %r9978, 18;
	shf.r.wrap.b32 	%r9983, %r9978, %r9979, 18;
	mov.b64 	%rd1636, {%r9983, %r9982};
	xor.b64  	%rd1637, %rd1636, %rd1635;
	shf.l.wrap.b32 	%r9984, %r9978, %r9979, 23;
	shf.l.wrap.b32 	%r9985, %r9979, %r9978, 23;
	mov.b64 	%rd1638, {%r9985, %r9984};
	xor.b64  	%rd1639, %rd1637, %rd1638;
	xor.b64  	%rd1640, %rd1599, %rd1575;
	and.b64  	%rd1641, %rd1623, %rd1640;
	xor.b64  	%rd1642, %rd1641, %rd1575;
	add.s64 	%rd1643, %rd1551, %rd1285;
	add.s64 	%rd1644, %rd1643, %rd2807;
	add.s64 	%rd1645, %rd1644, %rd1642;
	add.s64 	%rd1646, %rd1645, %rd1639;
	add.s64 	%rd1647, %rd1646, %rd1562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9986,%dummy}, %rd1634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9987}, %rd1634;
	}
	shf.r.wrap.b32 	%r9988, %r9987, %r9986, 28;
	shf.r.wrap.b32 	%r9989, %r9986, %r9987, 28;
	mov.b64 	%rd1648, {%r9989, %r9988};
	shf.l.wrap.b32 	%r9990, %r9986, %r9987, 30;
	shf.l.wrap.b32 	%r9991, %r9987, %r9986, 30;
	mov.b64 	%rd1649, {%r9991, %r9990};
	xor.b64  	%rd1650, %rd1649, %rd1648;
	shf.l.wrap.b32 	%r9992, %r9986, %r9987, 25;
	shf.l.wrap.b32 	%r9993, %r9987, %r9986, 25;
	mov.b64 	%rd1651, {%r9993, %r9992};
	xor.b64  	%rd1652, %rd1650, %rd1651;
	xor.b64  	%rd1653, %rd1634, %rd1586;
	xor.b64  	%rd1654, %rd1634, %rd1610;
	and.b64  	%rd1655, %rd1654, %rd1653;
	xor.b64  	%rd1656, %rd1655, %rd1634;
	add.s64 	%rd1657, %rd1646, %rd1656;
	add.s64 	%rd1658, %rd1657, %rd1652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9994,%dummy}, %rd1647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9995}, %rd1647;
	}
	shf.r.wrap.b32 	%r9996, %r9995, %r9994, 14;
	shf.r.wrap.b32 	%r9997, %r9994, %r9995, 14;
	mov.b64 	%rd1659, {%r9997, %r9996};
	shf.r.wrap.b32 	%r9998, %r9995, %r9994, 18;
	shf.r.wrap.b32 	%r9999, %r9994, %r9995, 18;
	mov.b64 	%rd1660, {%r9999, %r9998};
	xor.b64  	%rd1661, %rd1660, %rd1659;
	shf.l.wrap.b32 	%r10000, %r9994, %r9995, 23;
	shf.l.wrap.b32 	%r10001, %r9995, %r9994, 23;
	mov.b64 	%rd1662, {%r10001, %r10000};
	xor.b64  	%rd1663, %rd1661, %rd1662;
	xor.b64  	%rd1664, %rd1623, %rd1599;
	and.b64  	%rd1665, %rd1647, %rd1664;
	xor.b64  	%rd1666, %rd1665, %rd1599;
	add.s64 	%rd1667, %rd1575, %rd1298;
	add.s64 	%rd1668, %rd1667, %rd2808;
	add.s64 	%rd1669, %rd1668, %rd1666;
	add.s64 	%rd1670, %rd1669, %rd1663;
	add.s64 	%rd1671, %rd1670, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10002,%dummy}, %rd1658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10003}, %rd1658;
	}
	shf.r.wrap.b32 	%r10004, %r10003, %r10002, 28;
	shf.r.wrap.b32 	%r10005, %r10002, %r10003, 28;
	mov.b64 	%rd1672, {%r10005, %r10004};
	shf.l.wrap.b32 	%r10006, %r10002, %r10003, 30;
	shf.l.wrap.b32 	%r10007, %r10003, %r10002, 30;
	mov.b64 	%rd1673, {%r10007, %r10006};
	xor.b64  	%rd1674, %rd1673, %rd1672;
	shf.l.wrap.b32 	%r10008, %r10002, %r10003, 25;
	shf.l.wrap.b32 	%r10009, %r10003, %r10002, 25;
	mov.b64 	%rd1675, {%r10009, %r10008};
	xor.b64  	%rd1676, %rd1674, %rd1675;
	xor.b64  	%rd1677, %rd1658, %rd1610;
	xor.b64  	%rd1678, %rd1658, %rd1634;
	and.b64  	%rd1679, %rd1678, %rd1677;
	xor.b64  	%rd1680, %rd1679, %rd1658;
	add.s64 	%rd1681, %rd1670, %rd1680;
	add.s64 	%rd1682, %rd1681, %rd1676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10010,%dummy}, %rd1285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10011}, %rd1285;
	}
	shf.r.wrap.b32 	%r10012, %r10011, %r10010, 19;
	shf.r.wrap.b32 	%r10013, %r10010, %r10011, 19;
	mov.b64 	%rd1683, {%r10013, %r10012};
	shf.l.wrap.b32 	%r10014, %r10010, %r10011, 3;
	shf.l.wrap.b32 	%r10015, %r10011, %r10010, 3;
	mov.b64 	%rd1684, {%r10015, %r10014};
	shr.u64 	%rd1685, %rd1285, 6;
	xor.b64  	%rd1686, %rd1683, %rd1685;
	xor.b64  	%rd1687, %rd1686, %rd1684;
	shf.r.wrap.b32 	%r10016, %r9625, %r9624, 1;
	shf.r.wrap.b32 	%r10017, %r9624, %r9625, 1;
	mov.b64 	%rd1688, {%r10017, %r10016};
	shf.r.wrap.b32 	%r10018, %r9625, %r9624, 8;
	shf.r.wrap.b32 	%r10019, %r9624, %r9625, 8;
	mov.b64 	%rd1689, {%r10019, %r10018};
	shr.u64 	%rd1690, %rd1116, 7;
	xor.b64  	%rd1691, %rd1688, %rd1690;
	xor.b64  	%rd1692, %rd1691, %rd1689;
	add.s64 	%rd1693, %rd1103, %rd1220;
	add.s64 	%rd1694, %rd1693, %rd1687;
	add.s64 	%rd1695, %rd1694, %rd1692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10020,%dummy}, %rd1298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10021}, %rd1298;
	}
	shf.r.wrap.b32 	%r10022, %r10021, %r10020, 19;
	shf.r.wrap.b32 	%r10023, %r10020, %r10021, 19;
	mov.b64 	%rd1696, {%r10023, %r10022};
	shf.l.wrap.b32 	%r10024, %r10020, %r10021, 3;
	shf.l.wrap.b32 	%r10025, %r10021, %r10020, 3;
	mov.b64 	%rd1697, {%r10025, %r10024};
	shr.u64 	%rd1698, %rd1298, 6;
	xor.b64  	%rd1699, %rd1696, %rd1698;
	xor.b64  	%rd1700, %rd1699, %rd1697;
	shf.r.wrap.b32 	%r10026, %r9635, %r9634, 1;
	shf.r.wrap.b32 	%r10027, %r9634, %r9635, 1;
	mov.b64 	%rd1701, {%r10027, %r10026};
	shf.r.wrap.b32 	%r10028, %r9635, %r9634, 8;
	shf.r.wrap.b32 	%r10029, %r9634, %r9635, 8;
	mov.b64 	%rd1702, {%r10029, %r10028};
	shr.u64 	%rd1703, %rd1129, 7;
	xor.b64  	%rd1704, %rd1701, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd1702;
	add.s64 	%rd1706, %rd1116, %rd1233;
	add.s64 	%rd1707, %rd1706, %rd1700;
	add.s64 	%rd1708, %rd1707, %rd1705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10030,%dummy}, %rd1695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10031}, %rd1695;
	}
	shf.r.wrap.b32 	%r10032, %r10031, %r10030, 19;
	shf.r.wrap.b32 	%r10033, %r10030, %r10031, 19;
	mov.b64 	%rd1709, {%r10033, %r10032};
	shf.l.wrap.b32 	%r10034, %r10030, %r10031, 3;
	shf.l.wrap.b32 	%r10035, %r10031, %r10030, 3;
	mov.b64 	%rd1710, {%r10035, %r10034};
	shr.u64 	%rd1711, %rd1695, 6;
	xor.b64  	%rd1712, %rd1709, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1710;
	shf.r.wrap.b32 	%r10036, %r9645, %r9644, 1;
	shf.r.wrap.b32 	%r10037, %r9644, %r9645, 1;
	mov.b64 	%rd1714, {%r10037, %r10036};
	shf.r.wrap.b32 	%r10038, %r9645, %r9644, 8;
	shf.r.wrap.b32 	%r10039, %r9644, %r9645, 8;
	mov.b64 	%rd1715, {%r10039, %r10038};
	shr.u64 	%rd1716, %rd1142, 7;
	xor.b64  	%rd1717, %rd1714, %rd1716;
	xor.b64  	%rd1718, %rd1717, %rd1715;
	add.s64 	%rd1719, %rd1129, %rd1246;
	add.s64 	%rd1720, %rd1719, %rd1713;
	add.s64 	%rd1721, %rd1720, %rd1718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10040,%dummy}, %rd1708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10041}, %rd1708;
	}
	shf.r.wrap.b32 	%r10042, %r10041, %r10040, 19;
	shf.r.wrap.b32 	%r10043, %r10040, %r10041, 19;
	mov.b64 	%rd1722, {%r10043, %r10042};
	shf.l.wrap.b32 	%r10044, %r10040, %r10041, 3;
	shf.l.wrap.b32 	%r10045, %r10041, %r10040, 3;
	mov.b64 	%rd1723, {%r10045, %r10044};
	shr.u64 	%rd1724, %rd1708, 6;
	xor.b64  	%rd1725, %rd1722, %rd1724;
	xor.b64  	%rd1726, %rd1725, %rd1723;
	shf.r.wrap.b32 	%r10046, %r9655, %r9654, 1;
	shf.r.wrap.b32 	%r10047, %r9654, %r9655, 1;
	mov.b64 	%rd1727, {%r10047, %r10046};
	shf.r.wrap.b32 	%r10048, %r9655, %r9654, 8;
	shf.r.wrap.b32 	%r10049, %r9654, %r9655, 8;
	mov.b64 	%rd1728, {%r10049, %r10048};
	shr.u64 	%rd1729, %rd1155, 7;
	xor.b64  	%rd1730, %rd1727, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1728;
	add.s64 	%rd1732, %rd1142, %rd1259;
	add.s64 	%rd1733, %rd1732, %rd1726;
	add.s64 	%rd1734, %rd1733, %rd1731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10050,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10051}, %rd1721;
	}
	shf.r.wrap.b32 	%r10052, %r10051, %r10050, 19;
	shf.r.wrap.b32 	%r10053, %r10050, %r10051, 19;
	mov.b64 	%rd1735, {%r10053, %r10052};
	shf.l.wrap.b32 	%r10054, %r10050, %r10051, 3;
	shf.l.wrap.b32 	%r10055, %r10051, %r10050, 3;
	mov.b64 	%rd1736, {%r10055, %r10054};
	shr.u64 	%rd1737, %rd1721, 6;
	xor.b64  	%rd1738, %rd1735, %rd1737;
	xor.b64  	%rd1739, %rd1738, %rd1736;
	shf.r.wrap.b32 	%r10056, %r9665, %r9664, 1;
	shf.r.wrap.b32 	%r10057, %r9664, %r9665, 1;
	mov.b64 	%rd1740, {%r10057, %r10056};
	shf.r.wrap.b32 	%r10058, %r9665, %r9664, 8;
	shf.r.wrap.b32 	%r10059, %r9664, %r9665, 8;
	mov.b64 	%rd1741, {%r10059, %r10058};
	shr.u64 	%rd1742, %rd1168, 7;
	xor.b64  	%rd1743, %rd1740, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1741;
	add.s64 	%rd1745, %rd1155, %rd1272;
	add.s64 	%rd1746, %rd1745, %rd1739;
	add.s64 	%rd1747, %rd1746, %rd1744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10060,%dummy}, %rd1734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10061}, %rd1734;
	}
	shf.r.wrap.b32 	%r10062, %r10061, %r10060, 19;
	shf.r.wrap.b32 	%r10063, %r10060, %r10061, 19;
	mov.b64 	%rd1748, {%r10063, %r10062};
	shf.l.wrap.b32 	%r10064, %r10060, %r10061, 3;
	shf.l.wrap.b32 	%r10065, %r10061, %r10060, 3;
	mov.b64 	%rd1749, {%r10065, %r10064};
	shr.u64 	%rd1750, %rd1734, 6;
	xor.b64  	%rd1751, %rd1748, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1749;
	shf.r.wrap.b32 	%r10066, %r9675, %r9674, 1;
	shf.r.wrap.b32 	%r10067, %r9674, %r9675, 1;
	mov.b64 	%rd1753, {%r10067, %r10066};
	shf.r.wrap.b32 	%r10068, %r9675, %r9674, 8;
	shf.r.wrap.b32 	%r10069, %r9674, %r9675, 8;
	mov.b64 	%rd1754, {%r10069, %r10068};
	shr.u64 	%rd1755, %rd1181, 7;
	xor.b64  	%rd1756, %rd1753, %rd1755;
	xor.b64  	%rd1757, %rd1756, %rd1754;
	add.s64 	%rd1758, %rd1168, %rd1285;
	add.s64 	%rd1759, %rd1758, %rd1752;
	add.s64 	%rd1760, %rd1759, %rd1757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10070,%dummy}, %rd1747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10071}, %rd1747;
	}
	shf.r.wrap.b32 	%r10072, %r10071, %r10070, 19;
	shf.r.wrap.b32 	%r10073, %r10070, %r10071, 19;
	mov.b64 	%rd1761, {%r10073, %r10072};
	shf.l.wrap.b32 	%r10074, %r10070, %r10071, 3;
	shf.l.wrap.b32 	%r10075, %r10071, %r10070, 3;
	mov.b64 	%rd1762, {%r10075, %r10074};
	shr.u64 	%rd1763, %rd1747, 6;
	xor.b64  	%rd1764, %rd1761, %rd1763;
	xor.b64  	%rd1765, %rd1764, %rd1762;
	shf.r.wrap.b32 	%r10076, %r9685, %r9684, 1;
	shf.r.wrap.b32 	%r10077, %r9684, %r9685, 1;
	mov.b64 	%rd1766, {%r10077, %r10076};
	shf.r.wrap.b32 	%r10078, %r9685, %r9684, 8;
	shf.r.wrap.b32 	%r10079, %r9684, %r9685, 8;
	mov.b64 	%rd1767, {%r10079, %r10078};
	shr.u64 	%rd1768, %rd1194, 7;
	xor.b64  	%rd1769, %rd1766, %rd1768;
	xor.b64  	%rd1770, %rd1769, %rd1767;
	add.s64 	%rd1771, %rd1181, %rd1298;
	add.s64 	%rd1772, %rd1771, %rd1765;
	add.s64 	%rd1773, %rd1772, %rd1770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10080,%dummy}, %rd1760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10081}, %rd1760;
	}
	shf.r.wrap.b32 	%r10082, %r10081, %r10080, 19;
	shf.r.wrap.b32 	%r10083, %r10080, %r10081, 19;
	mov.b64 	%rd1774, {%r10083, %r10082};
	shf.l.wrap.b32 	%r10084, %r10080, %r10081, 3;
	shf.l.wrap.b32 	%r10085, %r10081, %r10080, 3;
	mov.b64 	%rd1775, {%r10085, %r10084};
	shr.u64 	%rd1776, %rd1760, 6;
	xor.b64  	%rd1777, %rd1774, %rd1776;
	xor.b64  	%rd1778, %rd1777, %rd1775;
	shf.r.wrap.b32 	%r10086, %r9695, %r9694, 1;
	shf.r.wrap.b32 	%r10087, %r9694, %r9695, 1;
	mov.b64 	%rd1779, {%r10087, %r10086};
	shf.r.wrap.b32 	%r10088, %r9695, %r9694, 8;
	shf.r.wrap.b32 	%r10089, %r9694, %r9695, 8;
	mov.b64 	%rd1780, {%r10089, %r10088};
	shr.u64 	%rd1781, %rd1207, 7;
	xor.b64  	%rd1782, %rd1779, %rd1781;
	xor.b64  	%rd1783, %rd1782, %rd1780;
	add.s64 	%rd1784, %rd1695, %rd1194;
	add.s64 	%rd1785, %rd1784, %rd1778;
	add.s64 	%rd1786, %rd1785, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10090,%dummy}, %rd1773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10091}, %rd1773;
	}
	shf.r.wrap.b32 	%r10092, %r10091, %r10090, 19;
	shf.r.wrap.b32 	%r10093, %r10090, %r10091, 19;
	mov.b64 	%rd1787, {%r10093, %r10092};
	shf.l.wrap.b32 	%r10094, %r10090, %r10091, 3;
	shf.l.wrap.b32 	%r10095, %r10091, %r10090, 3;
	mov.b64 	%rd1788, {%r10095, %r10094};
	shr.u64 	%rd1789, %rd1773, 6;
	xor.b64  	%rd1790, %rd1787, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1788;
	shf.r.wrap.b32 	%r10096, %r9705, %r9704, 1;
	shf.r.wrap.b32 	%r10097, %r9704, %r9705, 1;
	mov.b64 	%rd1792, {%r10097, %r10096};
	shf.r.wrap.b32 	%r10098, %r9705, %r9704, 8;
	shf.r.wrap.b32 	%r10099, %r9704, %r9705, 8;
	mov.b64 	%rd1793, {%r10099, %r10098};
	shr.u64 	%rd1794, %rd1220, 7;
	xor.b64  	%rd1795, %rd1792, %rd1794;
	xor.b64  	%rd1796, %rd1795, %rd1793;
	add.s64 	%rd1797, %rd1708, %rd1207;
	add.s64 	%rd1798, %rd1797, %rd1791;
	add.s64 	%rd1799, %rd1798, %rd1796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10100,%dummy}, %rd1786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10101}, %rd1786;
	}
	shf.r.wrap.b32 	%r10102, %r10101, %r10100, 19;
	shf.r.wrap.b32 	%r10103, %r10100, %r10101, 19;
	mov.b64 	%rd1800, {%r10103, %r10102};
	shf.l.wrap.b32 	%r10104, %r10100, %r10101, 3;
	shf.l.wrap.b32 	%r10105, %r10101, %r10100, 3;
	mov.b64 	%rd1801, {%r10105, %r10104};
	shr.u64 	%rd1802, %rd1786, 6;
	xor.b64  	%rd1803, %rd1800, %rd1802;
	xor.b64  	%rd1804, %rd1803, %rd1801;
	shf.r.wrap.b32 	%r10106, %r9715, %r9714, 1;
	shf.r.wrap.b32 	%r10107, %r9714, %r9715, 1;
	mov.b64 	%rd1805, {%r10107, %r10106};
	shf.r.wrap.b32 	%r10108, %r9715, %r9714, 8;
	shf.r.wrap.b32 	%r10109, %r9714, %r9715, 8;
	mov.b64 	%rd1806, {%r10109, %r10108};
	shr.u64 	%rd1807, %rd1233, 7;
	xor.b64  	%rd1808, %rd1805, %rd1807;
	xor.b64  	%rd1809, %rd1808, %rd1806;
	add.s64 	%rd1810, %rd1721, %rd1220;
	add.s64 	%rd1811, %rd1810, %rd1804;
	add.s64 	%rd1812, %rd1811, %rd1809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10110,%dummy}, %rd1799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10111}, %rd1799;
	}
	shf.r.wrap.b32 	%r10112, %r10111, %r10110, 19;
	shf.r.wrap.b32 	%r10113, %r10110, %r10111, 19;
	mov.b64 	%rd1813, {%r10113, %r10112};
	shf.l.wrap.b32 	%r10114, %r10110, %r10111, 3;
	shf.l.wrap.b32 	%r10115, %r10111, %r10110, 3;
	mov.b64 	%rd1814, {%r10115, %r10114};
	shr.u64 	%rd1815, %rd1799, 6;
	xor.b64  	%rd1816, %rd1813, %rd1815;
	xor.b64  	%rd1817, %rd1816, %rd1814;
	shf.r.wrap.b32 	%r10116, %r9725, %r9724, 1;
	shf.r.wrap.b32 	%r10117, %r9724, %r9725, 1;
	mov.b64 	%rd1818, {%r10117, %r10116};
	shf.r.wrap.b32 	%r10118, %r9725, %r9724, 8;
	shf.r.wrap.b32 	%r10119, %r9724, %r9725, 8;
	mov.b64 	%rd1819, {%r10119, %r10118};
	shr.u64 	%rd1820, %rd1246, 7;
	xor.b64  	%rd1821, %rd1818, %rd1820;
	xor.b64  	%rd1822, %rd1821, %rd1819;
	add.s64 	%rd1823, %rd1734, %rd1233;
	add.s64 	%rd1824, %rd1823, %rd1817;
	add.s64 	%rd1825, %rd1824, %rd1822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10120,%dummy}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10121}, %rd1812;
	}
	shf.r.wrap.b32 	%r10122, %r10121, %r10120, 19;
	shf.r.wrap.b32 	%r10123, %r10120, %r10121, 19;
	mov.b64 	%rd1826, {%r10123, %r10122};
	shf.l.wrap.b32 	%r10124, %r10120, %r10121, 3;
	shf.l.wrap.b32 	%r10125, %r10121, %r10120, 3;
	mov.b64 	%rd1827, {%r10125, %r10124};
	shr.u64 	%rd1828, %rd1812, 6;
	xor.b64  	%rd1829, %rd1826, %rd1828;
	xor.b64  	%rd1830, %rd1829, %rd1827;
	shf.r.wrap.b32 	%r10126, %r9735, %r9734, 1;
	shf.r.wrap.b32 	%r10127, %r9734, %r9735, 1;
	mov.b64 	%rd1831, {%r10127, %r10126};
	shf.r.wrap.b32 	%r10128, %r9735, %r9734, 8;
	shf.r.wrap.b32 	%r10129, %r9734, %r9735, 8;
	mov.b64 	%rd1832, {%r10129, %r10128};
	shr.u64 	%rd1833, %rd1259, 7;
	xor.b64  	%rd1834, %rd1831, %rd1833;
	xor.b64  	%rd1835, %rd1834, %rd1832;
	add.s64 	%rd1836, %rd1747, %rd1246;
	add.s64 	%rd1837, %rd1836, %rd1830;
	add.s64 	%rd1838, %rd1837, %rd1835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10130,%dummy}, %rd1825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10131}, %rd1825;
	}
	shf.r.wrap.b32 	%r10132, %r10131, %r10130, 19;
	shf.r.wrap.b32 	%r10133, %r10130, %r10131, 19;
	mov.b64 	%rd1839, {%r10133, %r10132};
	shf.l.wrap.b32 	%r10134, %r10130, %r10131, 3;
	shf.l.wrap.b32 	%r10135, %r10131, %r10130, 3;
	mov.b64 	%rd1840, {%r10135, %r10134};
	shr.u64 	%rd1841, %rd1825, 6;
	xor.b64  	%rd1842, %rd1839, %rd1841;
	xor.b64  	%rd1843, %rd1842, %rd1840;
	shf.r.wrap.b32 	%r10136, %r9745, %r9744, 1;
	shf.r.wrap.b32 	%r10137, %r9744, %r9745, 1;
	mov.b64 	%rd1844, {%r10137, %r10136};
	shf.r.wrap.b32 	%r10138, %r9745, %r9744, 8;
	shf.r.wrap.b32 	%r10139, %r9744, %r9745, 8;
	mov.b64 	%rd1845, {%r10139, %r10138};
	shr.u64 	%rd1846, %rd1272, 7;
	xor.b64  	%rd1847, %rd1844, %rd1846;
	xor.b64  	%rd1848, %rd1847, %rd1845;
	add.s64 	%rd1849, %rd1760, %rd1259;
	add.s64 	%rd1850, %rd1849, %rd1843;
	add.s64 	%rd1851, %rd1850, %rd1848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10140,%dummy}, %rd1838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10141}, %rd1838;
	}
	shf.r.wrap.b32 	%r10142, %r10141, %r10140, 19;
	shf.r.wrap.b32 	%r10143, %r10140, %r10141, 19;
	mov.b64 	%rd1852, {%r10143, %r10142};
	shf.l.wrap.b32 	%r10144, %r10140, %r10141, 3;
	shf.l.wrap.b32 	%r10145, %r10141, %r10140, 3;
	mov.b64 	%rd1853, {%r10145, %r10144};
	shr.u64 	%rd1854, %rd1838, 6;
	xor.b64  	%rd1855, %rd1852, %rd1854;
	xor.b64  	%rd1856, %rd1855, %rd1853;
	shf.r.wrap.b32 	%r10146, %r10011, %r10010, 1;
	shf.r.wrap.b32 	%r10147, %r10010, %r10011, 1;
	mov.b64 	%rd1857, {%r10147, %r10146};
	shf.r.wrap.b32 	%r10148, %r10011, %r10010, 8;
	shf.r.wrap.b32 	%r10149, %r10010, %r10011, 8;
	mov.b64 	%rd1858, {%r10149, %r10148};
	shr.u64 	%rd1859, %rd1285, 7;
	xor.b64  	%rd1860, %rd1857, %rd1859;
	xor.b64  	%rd1861, %rd1860, %rd1858;
	add.s64 	%rd1862, %rd1773, %rd1272;
	add.s64 	%rd1863, %rd1862, %rd1856;
	add.s64 	%rd1864, %rd1863, %rd1861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10150,%dummy}, %rd1851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10151}, %rd1851;
	}
	shf.r.wrap.b32 	%r10152, %r10151, %r10150, 19;
	shf.r.wrap.b32 	%r10153, %r10150, %r10151, 19;
	mov.b64 	%rd1865, {%r10153, %r10152};
	shf.l.wrap.b32 	%r10154, %r10150, %r10151, 3;
	shf.l.wrap.b32 	%r10155, %r10151, %r10150, 3;
	mov.b64 	%rd1866, {%r10155, %r10154};
	shr.u64 	%rd1867, %rd1851, 6;
	xor.b64  	%rd1868, %rd1865, %rd1867;
	xor.b64  	%rd1869, %rd1868, %rd1866;
	shf.r.wrap.b32 	%r10156, %r10021, %r10020, 1;
	shf.r.wrap.b32 	%r10157, %r10020, %r10021, 1;
	mov.b64 	%rd1870, {%r10157, %r10156};
	shf.r.wrap.b32 	%r10158, %r10021, %r10020, 8;
	shf.r.wrap.b32 	%r10159, %r10020, %r10021, 8;
	mov.b64 	%rd1871, {%r10159, %r10158};
	shr.u64 	%rd1872, %rd1298, 7;
	xor.b64  	%rd1873, %rd1870, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1871;
	add.s64 	%rd1875, %rd1786, %rd1285;
	add.s64 	%rd1876, %rd1875, %rd1869;
	add.s64 	%rd1877, %rd1876, %rd1874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10160,%dummy}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10161}, %rd1864;
	}
	shf.r.wrap.b32 	%r10162, %r10161, %r10160, 19;
	shf.r.wrap.b32 	%r10163, %r10160, %r10161, 19;
	mov.b64 	%rd1878, {%r10163, %r10162};
	shf.l.wrap.b32 	%r10164, %r10160, %r10161, 3;
	shf.l.wrap.b32 	%r10165, %r10161, %r10160, 3;
	mov.b64 	%rd1879, {%r10165, %r10164};
	shr.u64 	%rd1880, %rd1864, 6;
	xor.b64  	%rd1881, %rd1878, %rd1880;
	xor.b64  	%rd1882, %rd1881, %rd1879;
	shf.r.wrap.b32 	%r10166, %r10031, %r10030, 1;
	shf.r.wrap.b32 	%r10167, %r10030, %r10031, 1;
	mov.b64 	%rd1883, {%r10167, %r10166};
	shf.r.wrap.b32 	%r10168, %r10031, %r10030, 8;
	shf.r.wrap.b32 	%r10169, %r10030, %r10031, 8;
	mov.b64 	%rd1884, {%r10169, %r10168};
	shr.u64 	%rd1885, %rd1695, 7;
	xor.b64  	%rd1886, %rd1883, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1884;
	add.s64 	%rd1888, %rd1799, %rd1298;
	add.s64 	%rd1889, %rd1888, %rd1882;
	add.s64 	%rd1890, %rd1889, %rd1887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10170,%dummy}, %rd1671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10171}, %rd1671;
	}
	shf.r.wrap.b32 	%r10172, %r10171, %r10170, 14;
	shf.r.wrap.b32 	%r10173, %r10170, %r10171, 14;
	mov.b64 	%rd1891, {%r10173, %r10172};
	shf.r.wrap.b32 	%r10174, %r10171, %r10170, 18;
	shf.r.wrap.b32 	%r10175, %r10170, %r10171, 18;
	mov.b64 	%rd1892, {%r10175, %r10174};
	xor.b64  	%rd1893, %rd1892, %rd1891;
	shf.l.wrap.b32 	%r10176, %r10170, %r10171, 23;
	shf.l.wrap.b32 	%r10177, %r10171, %r10170, 23;
	mov.b64 	%rd1894, {%r10177, %r10176};
	xor.b64  	%rd1895, %rd1893, %rd1894;
	xor.b64  	%rd1896, %rd1623, %rd1647;
	and.b64  	%rd1897, %rd1896, %rd1671;
	xor.b64  	%rd1898, %rd1897, %rd1623;
	add.s64 	%rd1899, %rd1898, %rd1599;
	add.s64 	%rd1900, %rd1899, %rd1695;
	add.s64 	%rd1901, %rd1900, %rd2809;
	add.s64 	%rd1902, %rd1901, %rd1895;
	add.s64 	%rd1903, %rd1902, %rd1610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10178,%dummy}, %rd1682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10179}, %rd1682;
	}
	shf.r.wrap.b32 	%r10180, %r10179, %r10178, 28;
	shf.r.wrap.b32 	%r10181, %r10178, %r10179, 28;
	mov.b64 	%rd1904, {%r10181, %r10180};
	shf.l.wrap.b32 	%r10182, %r10178, %r10179, 30;
	shf.l.wrap.b32 	%r10183, %r10179, %r10178, 30;
	mov.b64 	%rd1905, {%r10183, %r10182};
	xor.b64  	%rd1906, %rd1905, %rd1904;
	shf.l.wrap.b32 	%r10184, %r10178, %r10179, 25;
	shf.l.wrap.b32 	%r10185, %r10179, %r10178, 25;
	mov.b64 	%rd1907, {%r10185, %r10184};
	xor.b64  	%rd1908, %rd1906, %rd1907;
	xor.b64  	%rd1909, %rd1682, %rd1634;
	xor.b64  	%rd1910, %rd1682, %rd1658;
	and.b64  	%rd1911, %rd1910, %rd1909;
	xor.b64  	%rd1912, %rd1911, %rd1682;
	add.s64 	%rd1913, %rd1902, %rd1912;
	add.s64 	%rd1914, %rd1913, %rd1908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10186,%dummy}, %rd1903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10187}, %rd1903;
	}
	shf.r.wrap.b32 	%r10188, %r10187, %r10186, 14;
	shf.r.wrap.b32 	%r10189, %r10186, %r10187, 14;
	mov.b64 	%rd1915, {%r10189, %r10188};
	shf.r.wrap.b32 	%r10190, %r10187, %r10186, 18;
	shf.r.wrap.b32 	%r10191, %r10186, %r10187, 18;
	mov.b64 	%rd1916, {%r10191, %r10190};
	xor.b64  	%rd1917, %rd1916, %rd1915;
	shf.l.wrap.b32 	%r10192, %r10186, %r10187, 23;
	shf.l.wrap.b32 	%r10193, %r10187, %r10186, 23;
	mov.b64 	%rd1918, {%r10193, %r10192};
	xor.b64  	%rd1919, %rd1917, %rd1918;
	xor.b64  	%rd1920, %rd1647, %rd1671;
	and.b64  	%rd1921, %rd1903, %rd1920;
	xor.b64  	%rd1922, %rd1921, %rd1647;
	add.s64 	%rd1923, %rd1708, %rd1623;
	add.s64 	%rd1924, %rd1923, %rd2810;
	add.s64 	%rd1925, %rd1924, %rd1922;
	add.s64 	%rd1926, %rd1925, %rd1919;
	add.s64 	%rd1927, %rd1926, %rd1634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10194,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10195}, %rd1914;
	}
	shf.r.wrap.b32 	%r10196, %r10195, %r10194, 28;
	shf.r.wrap.b32 	%r10197, %r10194, %r10195, 28;
	mov.b64 	%rd1928, {%r10197, %r10196};
	shf.l.wrap.b32 	%r10198, %r10194, %r10195, 30;
	shf.l.wrap.b32 	%r10199, %r10195, %r10194, 30;
	mov.b64 	%rd1929, {%r10199, %r10198};
	xor.b64  	%rd1930, %rd1929, %rd1928;
	shf.l.wrap.b32 	%r10200, %r10194, %r10195, 25;
	shf.l.wrap.b32 	%r10201, %r10195, %r10194, 25;
	mov.b64 	%rd1931, {%r10201, %r10200};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	xor.b64  	%rd1933, %rd1914, %rd1658;
	xor.b64  	%rd1934, %rd1914, %rd1682;
	and.b64  	%rd1935, %rd1934, %rd1933;
	xor.b64  	%rd1936, %rd1935, %rd1914;
	add.s64 	%rd1937, %rd1926, %rd1936;
	add.s64 	%rd1938, %rd1937, %rd1932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10202,%dummy}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10203}, %rd1927;
	}
	shf.r.wrap.b32 	%r10204, %r10203, %r10202, 14;
	shf.r.wrap.b32 	%r10205, %r10202, %r10203, 14;
	mov.b64 	%rd1939, {%r10205, %r10204};
	shf.r.wrap.b32 	%r10206, %r10203, %r10202, 18;
	shf.r.wrap.b32 	%r10207, %r10202, %r10203, 18;
	mov.b64 	%rd1940, {%r10207, %r10206};
	xor.b64  	%rd1941, %rd1940, %rd1939;
	shf.l.wrap.b32 	%r10208, %r10202, %r10203, 23;
	shf.l.wrap.b32 	%r10209, %r10203, %r10202, 23;
	mov.b64 	%rd1942, {%r10209, %r10208};
	xor.b64  	%rd1943, %rd1941, %rd1942;
	xor.b64  	%rd1944, %rd1903, %rd1671;
	and.b64  	%rd1945, %rd1927, %rd1944;
	xor.b64  	%rd1946, %rd1945, %rd1671;
	add.s64 	%rd1947, %rd1721, %rd1647;
	add.s64 	%rd1948, %rd1947, %rd2811;
	add.s64 	%rd1949, %rd1948, %rd1946;
	add.s64 	%rd1950, %rd1949, %rd1943;
	add.s64 	%rd1951, %rd1950, %rd1658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10210,%dummy}, %rd1938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10211}, %rd1938;
	}
	shf.r.wrap.b32 	%r10212, %r10211, %r10210, 28;
	shf.r.wrap.b32 	%r10213, %r10210, %r10211, 28;
	mov.b64 	%rd1952, {%r10213, %r10212};
	shf.l.wrap.b32 	%r10214, %r10210, %r10211, 30;
	shf.l.wrap.b32 	%r10215, %r10211, %r10210, 30;
	mov.b64 	%rd1953, {%r10215, %r10214};
	xor.b64  	%rd1954, %rd1953, %rd1952;
	shf.l.wrap.b32 	%r10216, %r10210, %r10211, 25;
	shf.l.wrap.b32 	%r10217, %r10211, %r10210, 25;
	mov.b64 	%rd1955, {%r10217, %r10216};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	xor.b64  	%rd1957, %rd1938, %rd1682;
	xor.b64  	%rd1958, %rd1938, %rd1914;
	and.b64  	%rd1959, %rd1958, %rd1957;
	xor.b64  	%rd1960, %rd1959, %rd1938;
	add.s64 	%rd1961, %rd1950, %rd1960;
	add.s64 	%rd1962, %rd1961, %rd1956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10218,%dummy}, %rd1951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10219}, %rd1951;
	}
	shf.r.wrap.b32 	%r10220, %r10219, %r10218, 14;
	shf.r.wrap.b32 	%r10221, %r10218, %r10219, 14;
	mov.b64 	%rd1963, {%r10221, %r10220};
	shf.r.wrap.b32 	%r10222, %r10219, %r10218, 18;
	shf.r.wrap.b32 	%r10223, %r10218, %r10219, 18;
	mov.b64 	%rd1964, {%r10223, %r10222};
	xor.b64  	%rd1965, %rd1964, %rd1963;
	shf.l.wrap.b32 	%r10224, %r10218, %r10219, 23;
	shf.l.wrap.b32 	%r10225, %r10219, %r10218, 23;
	mov.b64 	%rd1966, {%r10225, %r10224};
	xor.b64  	%rd1967, %rd1965, %rd1966;
	xor.b64  	%rd1968, %rd1927, %rd1903;
	and.b64  	%rd1969, %rd1951, %rd1968;
	xor.b64  	%rd1970, %rd1969, %rd1903;
	add.s64 	%rd1971, %rd1734, %rd1671;
	add.s64 	%rd1972, %rd1971, %rd2812;
	add.s64 	%rd1973, %rd1972, %rd1970;
	add.s64 	%rd1974, %rd1973, %rd1967;
	add.s64 	%rd1975, %rd1974, %rd1682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10226,%dummy}, %rd1962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10227}, %rd1962;
	}
	shf.r.wrap.b32 	%r10228, %r10227, %r10226, 28;
	shf.r.wrap.b32 	%r10229, %r10226, %r10227, 28;
	mov.b64 	%rd1976, {%r10229, %r10228};
	shf.l.wrap.b32 	%r10230, %r10226, %r10227, 30;
	shf.l.wrap.b32 	%r10231, %r10227, %r10226, 30;
	mov.b64 	%rd1977, {%r10231, %r10230};
	xor.b64  	%rd1978, %rd1977, %rd1976;
	shf.l.wrap.b32 	%r10232, %r10226, %r10227, 25;
	shf.l.wrap.b32 	%r10233, %r10227, %r10226, 25;
	mov.b64 	%rd1979, {%r10233, %r10232};
	xor.b64  	%rd1980, %rd1978, %rd1979;
	xor.b64  	%rd1981, %rd1962, %rd1914;
	xor.b64  	%rd1982, %rd1962, %rd1938;
	and.b64  	%rd1983, %rd1982, %rd1981;
	xor.b64  	%rd1984, %rd1983, %rd1962;
	add.s64 	%rd1985, %rd1974, %rd1984;
	add.s64 	%rd1986, %rd1985, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10234,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10235}, %rd1975;
	}
	shf.r.wrap.b32 	%r10236, %r10235, %r10234, 14;
	shf.r.wrap.b32 	%r10237, %r10234, %r10235, 14;
	mov.b64 	%rd1987, {%r10237, %r10236};
	shf.r.wrap.b32 	%r10238, %r10235, %r10234, 18;
	shf.r.wrap.b32 	%r10239, %r10234, %r10235, 18;
	mov.b64 	%rd1988, {%r10239, %r10238};
	xor.b64  	%rd1989, %rd1988, %rd1987;
	shf.l.wrap.b32 	%r10240, %r10234, %r10235, 23;
	shf.l.wrap.b32 	%r10241, %r10235, %r10234, 23;
	mov.b64 	%rd1990, {%r10241, %r10240};
	xor.b64  	%rd1991, %rd1989, %rd1990;
	xor.b64  	%rd1992, %rd1951, %rd1927;
	and.b64  	%rd1993, %rd1975, %rd1992;
	xor.b64  	%rd1994, %rd1993, %rd1927;
	add.s64 	%rd1995, %rd1903, %rd1747;
	add.s64 	%rd1996, %rd1995, %rd2813;
	add.s64 	%rd1997, %rd1996, %rd1994;
	add.s64 	%rd1998, %rd1997, %rd1991;
	add.s64 	%rd1999, %rd1998, %rd1914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10242,%dummy}, %rd1986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10243}, %rd1986;
	}
	shf.r.wrap.b32 	%r10244, %r10243, %r10242, 28;
	shf.r.wrap.b32 	%r10245, %r10242, %r10243, 28;
	mov.b64 	%rd2000, {%r10245, %r10244};
	shf.l.wrap.b32 	%r10246, %r10242, %r10243, 30;
	shf.l.wrap.b32 	%r10247, %r10243, %r10242, 30;
	mov.b64 	%rd2001, {%r10247, %r10246};
	xor.b64  	%rd2002, %rd2001, %rd2000;
	shf.l.wrap.b32 	%r10248, %r10242, %r10243, 25;
	shf.l.wrap.b32 	%r10249, %r10243, %r10242, 25;
	mov.b64 	%rd2003, {%r10249, %r10248};
	xor.b64  	%rd2004, %rd2002, %rd2003;
	xor.b64  	%rd2005, %rd1986, %rd1938;
	xor.b64  	%rd2006, %rd1986, %rd1962;
	and.b64  	%rd2007, %rd2006, %rd2005;
	xor.b64  	%rd2008, %rd2007, %rd1986;
	add.s64 	%rd2009, %rd1998, %rd2008;
	add.s64 	%rd2010, %rd2009, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10250,%dummy}, %rd1999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10251}, %rd1999;
	}
	shf.r.wrap.b32 	%r10252, %r10251, %r10250, 14;
	shf.r.wrap.b32 	%r10253, %r10250, %r10251, 14;
	mov.b64 	%rd2011, {%r10253, %r10252};
	shf.r.wrap.b32 	%r10254, %r10251, %r10250, 18;
	shf.r.wrap.b32 	%r10255, %r10250, %r10251, 18;
	mov.b64 	%rd2012, {%r10255, %r10254};
	xor.b64  	%rd2013, %rd2012, %rd2011;
	shf.l.wrap.b32 	%r10256, %r10250, %r10251, 23;
	shf.l.wrap.b32 	%r10257, %r10251, %r10250, 23;
	mov.b64 	%rd2014, {%r10257, %r10256};
	xor.b64  	%rd2015, %rd2013, %rd2014;
	xor.b64  	%rd2016, %rd1975, %rd1951;
	and.b64  	%rd2017, %rd1999, %rd2016;
	xor.b64  	%rd2018, %rd2017, %rd1951;
	add.s64 	%rd2019, %rd1927, %rd1760;
	add.s64 	%rd2020, %rd2019, %rd2814;
	add.s64 	%rd2021, %rd2020, %rd2018;
	add.s64 	%rd2022, %rd2021, %rd2015;
	add.s64 	%rd2023, %rd2022, %rd1938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10258,%dummy}, %rd2010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10259}, %rd2010;
	}
	shf.r.wrap.b32 	%r10260, %r10259, %r10258, 28;
	shf.r.wrap.b32 	%r10261, %r10258, %r10259, 28;
	mov.b64 	%rd2024, {%r10261, %r10260};
	shf.l.wrap.b32 	%r10262, %r10258, %r10259, 30;
	shf.l.wrap.b32 	%r10263, %r10259, %r10258, 30;
	mov.b64 	%rd2025, {%r10263, %r10262};
	xor.b64  	%rd2026, %rd2025, %rd2024;
	shf.l.wrap.b32 	%r10264, %r10258, %r10259, 25;
	shf.l.wrap.b32 	%r10265, %r10259, %r10258, 25;
	mov.b64 	%rd2027, {%r10265, %r10264};
	xor.b64  	%rd2028, %rd2026, %rd2027;
	xor.b64  	%rd2029, %rd2010, %rd1962;
	xor.b64  	%rd2030, %rd2010, %rd1986;
	and.b64  	%rd2031, %rd2030, %rd2029;
	xor.b64  	%rd2032, %rd2031, %rd2010;
	add.s64 	%rd2033, %rd2022, %rd2032;
	add.s64 	%rd2034, %rd2033, %rd2028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10266,%dummy}, %rd2023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10267}, %rd2023;
	}
	shf.r.wrap.b32 	%r10268, %r10267, %r10266, 14;
	shf.r.wrap.b32 	%r10269, %r10266, %r10267, 14;
	mov.b64 	%rd2035, {%r10269, %r10268};
	shf.r.wrap.b32 	%r10270, %r10267, %r10266, 18;
	shf.r.wrap.b32 	%r10271, %r10266, %r10267, 18;
	mov.b64 	%rd2036, {%r10271, %r10270};
	xor.b64  	%rd2037, %rd2036, %rd2035;
	shf.l.wrap.b32 	%r10272, %r10266, %r10267, 23;
	shf.l.wrap.b32 	%r10273, %r10267, %r10266, 23;
	mov.b64 	%rd2038, {%r10273, %r10272};
	xor.b64  	%rd2039, %rd2037, %rd2038;
	xor.b64  	%rd2040, %rd1999, %rd1975;
	and.b64  	%rd2041, %rd2023, %rd2040;
	xor.b64  	%rd2042, %rd2041, %rd1975;
	add.s64 	%rd2043, %rd1951, %rd1773;
	add.s64 	%rd2044, %rd2043, %rd2815;
	add.s64 	%rd2045, %rd2044, %rd2042;
	add.s64 	%rd2046, %rd2045, %rd2039;
	add.s64 	%rd2047, %rd2046, %rd1962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10274,%dummy}, %rd2034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10275}, %rd2034;
	}
	shf.r.wrap.b32 	%r10276, %r10275, %r10274, 28;
	shf.r.wrap.b32 	%r10277, %r10274, %r10275, 28;
	mov.b64 	%rd2048, {%r10277, %r10276};
	shf.l.wrap.b32 	%r10278, %r10274, %r10275, 30;
	shf.l.wrap.b32 	%r10279, %r10275, %r10274, 30;
	mov.b64 	%rd2049, {%r10279, %r10278};
	xor.b64  	%rd2050, %rd2049, %rd2048;
	shf.l.wrap.b32 	%r10280, %r10274, %r10275, 25;
	shf.l.wrap.b32 	%r10281, %r10275, %r10274, 25;
	mov.b64 	%rd2051, {%r10281, %r10280};
	xor.b64  	%rd2052, %rd2050, %rd2051;
	xor.b64  	%rd2053, %rd2034, %rd1986;
	xor.b64  	%rd2054, %rd2034, %rd2010;
	and.b64  	%rd2055, %rd2054, %rd2053;
	xor.b64  	%rd2056, %rd2055, %rd2034;
	add.s64 	%rd2057, %rd2046, %rd2056;
	add.s64 	%rd2058, %rd2057, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10282,%dummy}, %rd2047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10283}, %rd2047;
	}
	shf.r.wrap.b32 	%r10284, %r10283, %r10282, 14;
	shf.r.wrap.b32 	%r10285, %r10282, %r10283, 14;
	mov.b64 	%rd2059, {%r10285, %r10284};
	shf.r.wrap.b32 	%r10286, %r10283, %r10282, 18;
	shf.r.wrap.b32 	%r10287, %r10282, %r10283, 18;
	mov.b64 	%rd2060, {%r10287, %r10286};
	xor.b64  	%rd2061, %rd2060, %rd2059;
	shf.l.wrap.b32 	%r10288, %r10282, %r10283, 23;
	shf.l.wrap.b32 	%r10289, %r10283, %r10282, 23;
	mov.b64 	%rd2062, {%r10289, %r10288};
	xor.b64  	%rd2063, %rd2061, %rd2062;
	xor.b64  	%rd2064, %rd2023, %rd1999;
	and.b64  	%rd2065, %rd2047, %rd2064;
	xor.b64  	%rd2066, %rd2065, %rd1999;
	add.s64 	%rd2067, %rd1975, %rd1786;
	add.s64 	%rd2068, %rd2067, %rd2816;
	add.s64 	%rd2069, %rd2068, %rd2066;
	add.s64 	%rd2070, %rd2069, %rd2063;
	add.s64 	%rd2071, %rd2070, %rd1986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10290,%dummy}, %rd2058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10291}, %rd2058;
	}
	shf.r.wrap.b32 	%r10292, %r10291, %r10290, 28;
	shf.r.wrap.b32 	%r10293, %r10290, %r10291, 28;
	mov.b64 	%rd2072, {%r10293, %r10292};
	shf.l.wrap.b32 	%r10294, %r10290, %r10291, 30;
	shf.l.wrap.b32 	%r10295, %r10291, %r10290, 30;
	mov.b64 	%rd2073, {%r10295, %r10294};
	xor.b64  	%rd2074, %rd2073, %rd2072;
	shf.l.wrap.b32 	%r10296, %r10290, %r10291, 25;
	shf.l.wrap.b32 	%r10297, %r10291, %r10290, 25;
	mov.b64 	%rd2075, {%r10297, %r10296};
	xor.b64  	%rd2076, %rd2074, %rd2075;
	xor.b64  	%rd2077, %rd2058, %rd2010;
	xor.b64  	%rd2078, %rd2058, %rd2034;
	and.b64  	%rd2079, %rd2078, %rd2077;
	xor.b64  	%rd2080, %rd2079, %rd2058;
	add.s64 	%rd2081, %rd2070, %rd2080;
	add.s64 	%rd2082, %rd2081, %rd2076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10298,%dummy}, %rd2071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10299}, %rd2071;
	}
	shf.r.wrap.b32 	%r10300, %r10299, %r10298, 14;
	shf.r.wrap.b32 	%r10301, %r10298, %r10299, 14;
	mov.b64 	%rd2083, {%r10301, %r10300};
	shf.r.wrap.b32 	%r10302, %r10299, %r10298, 18;
	shf.r.wrap.b32 	%r10303, %r10298, %r10299, 18;
	mov.b64 	%rd2084, {%r10303, %r10302};
	xor.b64  	%rd2085, %rd2084, %rd2083;
	shf.l.wrap.b32 	%r10304, %r10298, %r10299, 23;
	shf.l.wrap.b32 	%r10305, %r10299, %r10298, 23;
	mov.b64 	%rd2086, {%r10305, %r10304};
	xor.b64  	%rd2087, %rd2085, %rd2086;
	xor.b64  	%rd2088, %rd2047, %rd2023;
	and.b64  	%rd2089, %rd2071, %rd2088;
	xor.b64  	%rd2090, %rd2089, %rd2023;
	add.s64 	%rd2091, %rd1999, %rd1799;
	add.s64 	%rd2092, %rd2091, %rd2817;
	add.s64 	%rd2093, %rd2092, %rd2090;
	add.s64 	%rd2094, %rd2093, %rd2087;
	add.s64 	%rd2095, %rd2094, %rd2010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10306,%dummy}, %rd2082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10307}, %rd2082;
	}
	shf.r.wrap.b32 	%r10308, %r10307, %r10306, 28;
	shf.r.wrap.b32 	%r10309, %r10306, %r10307, 28;
	mov.b64 	%rd2096, {%r10309, %r10308};
	shf.l.wrap.b32 	%r10310, %r10306, %r10307, 30;
	shf.l.wrap.b32 	%r10311, %r10307, %r10306, 30;
	mov.b64 	%rd2097, {%r10311, %r10310};
	xor.b64  	%rd2098, %rd2097, %rd2096;
	shf.l.wrap.b32 	%r10312, %r10306, %r10307, 25;
	shf.l.wrap.b32 	%r10313, %r10307, %r10306, 25;
	mov.b64 	%rd2099, {%r10313, %r10312};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	xor.b64  	%rd2101, %rd2082, %rd2034;
	xor.b64  	%rd2102, %rd2082, %rd2058;
	and.b64  	%rd2103, %rd2102, %rd2101;
	xor.b64  	%rd2104, %rd2103, %rd2082;
	add.s64 	%rd2105, %rd2094, %rd2104;
	add.s64 	%rd2106, %rd2105, %rd2100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10314,%dummy}, %rd2095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10315}, %rd2095;
	}
	shf.r.wrap.b32 	%r10316, %r10315, %r10314, 14;
	shf.r.wrap.b32 	%r10317, %r10314, %r10315, 14;
	mov.b64 	%rd2107, {%r10317, %r10316};
	shf.r.wrap.b32 	%r10318, %r10315, %r10314, 18;
	shf.r.wrap.b32 	%r10319, %r10314, %r10315, 18;
	mov.b64 	%rd2108, {%r10319, %r10318};
	xor.b64  	%rd2109, %rd2108, %rd2107;
	shf.l.wrap.b32 	%r10320, %r10314, %r10315, 23;
	shf.l.wrap.b32 	%r10321, %r10315, %r10314, 23;
	mov.b64 	%rd2110, {%r10321, %r10320};
	xor.b64  	%rd2111, %rd2109, %rd2110;
	xor.b64  	%rd2112, %rd2071, %rd2047;
	and.b64  	%rd2113, %rd2095, %rd2112;
	xor.b64  	%rd2114, %rd2113, %rd2047;
	add.s64 	%rd2115, %rd2023, %rd1812;
	add.s64 	%rd2116, %rd2115, %rd2818;
	add.s64 	%rd2117, %rd2116, %rd2114;
	add.s64 	%rd2118, %rd2117, %rd2111;
	add.s64 	%rd2119, %rd2118, %rd2034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10322,%dummy}, %rd2106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10323}, %rd2106;
	}
	shf.r.wrap.b32 	%r10324, %r10323, %r10322, 28;
	shf.r.wrap.b32 	%r10325, %r10322, %r10323, 28;
	mov.b64 	%rd2120, {%r10325, %r10324};
	shf.l.wrap.b32 	%r10326, %r10322, %r10323, 30;
	shf.l.wrap.b32 	%r10327, %r10323, %r10322, 30;
	mov.b64 	%rd2121, {%r10327, %r10326};
	xor.b64  	%rd2122, %rd2121, %rd2120;
	shf.l.wrap.b32 	%r10328, %r10322, %r10323, 25;
	shf.l.wrap.b32 	%r10329, %r10323, %r10322, 25;
	mov.b64 	%rd2123, {%r10329, %r10328};
	xor.b64  	%rd2124, %rd2122, %rd2123;
	xor.b64  	%rd2125, %rd2106, %rd2058;
	xor.b64  	%rd2126, %rd2106, %rd2082;
	and.b64  	%rd2127, %rd2126, %rd2125;
	xor.b64  	%rd2128, %rd2127, %rd2106;
	add.s64 	%rd2129, %rd2118, %rd2128;
	add.s64 	%rd2130, %rd2129, %rd2124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10330,%dummy}, %rd2119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10331}, %rd2119;
	}
	shf.r.wrap.b32 	%r10332, %r10331, %r10330, 14;
	shf.r.wrap.b32 	%r10333, %r10330, %r10331, 14;
	mov.b64 	%rd2131, {%r10333, %r10332};
	shf.r.wrap.b32 	%r10334, %r10331, %r10330, 18;
	shf.r.wrap.b32 	%r10335, %r10330, %r10331, 18;
	mov.b64 	%rd2132, {%r10335, %r10334};
	xor.b64  	%rd2133, %rd2132, %rd2131;
	shf.l.wrap.b32 	%r10336, %r10330, %r10331, 23;
	shf.l.wrap.b32 	%r10337, %r10331, %r10330, 23;
	mov.b64 	%rd2134, {%r10337, %r10336};
	xor.b64  	%rd2135, %rd2133, %rd2134;
	xor.b64  	%rd2136, %rd2095, %rd2071;
	and.b64  	%rd2137, %rd2119, %rd2136;
	xor.b64  	%rd2138, %rd2137, %rd2071;
	add.s64 	%rd2139, %rd2047, %rd1825;
	add.s64 	%rd2140, %rd2139, %rd2819;
	add.s64 	%rd2141, %rd2140, %rd2138;
	add.s64 	%rd2142, %rd2141, %rd2135;
	add.s64 	%rd2143, %rd2142, %rd2058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10338,%dummy}, %rd2130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10339}, %rd2130;
	}
	shf.r.wrap.b32 	%r10340, %r10339, %r10338, 28;
	shf.r.wrap.b32 	%r10341, %r10338, %r10339, 28;
	mov.b64 	%rd2144, {%r10341, %r10340};
	shf.l.wrap.b32 	%r10342, %r10338, %r10339, 30;
	shf.l.wrap.b32 	%r10343, %r10339, %r10338, 30;
	mov.b64 	%rd2145, {%r10343, %r10342};
	xor.b64  	%rd2146, %rd2145, %rd2144;
	shf.l.wrap.b32 	%r10344, %r10338, %r10339, 25;
	shf.l.wrap.b32 	%r10345, %r10339, %r10338, 25;
	mov.b64 	%rd2147, {%r10345, %r10344};
	xor.b64  	%rd2148, %rd2146, %rd2147;
	xor.b64  	%rd2149, %rd2130, %rd2082;
	xor.b64  	%rd2150, %rd2130, %rd2106;
	and.b64  	%rd2151, %rd2150, %rd2149;
	xor.b64  	%rd2152, %rd2151, %rd2130;
	add.s64 	%rd2153, %rd2142, %rd2152;
	add.s64 	%rd2154, %rd2153, %rd2148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10346,%dummy}, %rd2143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10347}, %rd2143;
	}
	shf.r.wrap.b32 	%r10348, %r10347, %r10346, 14;
	shf.r.wrap.b32 	%r10349, %r10346, %r10347, 14;
	mov.b64 	%rd2155, {%r10349, %r10348};
	shf.r.wrap.b32 	%r10350, %r10347, %r10346, 18;
	shf.r.wrap.b32 	%r10351, %r10346, %r10347, 18;
	mov.b64 	%rd2156, {%r10351, %r10350};
	xor.b64  	%rd2157, %rd2156, %rd2155;
	shf.l.wrap.b32 	%r10352, %r10346, %r10347, 23;
	shf.l.wrap.b32 	%r10353, %r10347, %r10346, 23;
	mov.b64 	%rd2158, {%r10353, %r10352};
	xor.b64  	%rd2159, %rd2157, %rd2158;
	xor.b64  	%rd2160, %rd2119, %rd2095;
	and.b64  	%rd2161, %rd2143, %rd2160;
	xor.b64  	%rd2162, %rd2161, %rd2095;
	add.s64 	%rd2163, %rd2071, %rd1838;
	add.s64 	%rd2164, %rd2163, %rd2820;
	add.s64 	%rd2165, %rd2164, %rd2162;
	add.s64 	%rd2166, %rd2165, %rd2159;
	add.s64 	%rd2167, %rd2166, %rd2082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10354,%dummy}, %rd2154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10355}, %rd2154;
	}
	shf.r.wrap.b32 	%r10356, %r10355, %r10354, 28;
	shf.r.wrap.b32 	%r10357, %r10354, %r10355, 28;
	mov.b64 	%rd2168, {%r10357, %r10356};
	shf.l.wrap.b32 	%r10358, %r10354, %r10355, 30;
	shf.l.wrap.b32 	%r10359, %r10355, %r10354, 30;
	mov.b64 	%rd2169, {%r10359, %r10358};
	xor.b64  	%rd2170, %rd2169, %rd2168;
	shf.l.wrap.b32 	%r10360, %r10354, %r10355, 25;
	shf.l.wrap.b32 	%r10361, %r10355, %r10354, 25;
	mov.b64 	%rd2171, {%r10361, %r10360};
	xor.b64  	%rd2172, %rd2170, %rd2171;
	xor.b64  	%rd2173, %rd2154, %rd2106;
	xor.b64  	%rd2174, %rd2154, %rd2130;
	and.b64  	%rd2175, %rd2174, %rd2173;
	xor.b64  	%rd2176, %rd2175, %rd2154;
	add.s64 	%rd2177, %rd2166, %rd2176;
	add.s64 	%rd2178, %rd2177, %rd2172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10362,%dummy}, %rd2167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10363}, %rd2167;
	}
	shf.r.wrap.b32 	%r10364, %r10363, %r10362, 14;
	shf.r.wrap.b32 	%r10365, %r10362, %r10363, 14;
	mov.b64 	%rd2179, {%r10365, %r10364};
	shf.r.wrap.b32 	%r10366, %r10363, %r10362, 18;
	shf.r.wrap.b32 	%r10367, %r10362, %r10363, 18;
	mov.b64 	%rd2180, {%r10367, %r10366};
	xor.b64  	%rd2181, %rd2180, %rd2179;
	shf.l.wrap.b32 	%r10368, %r10362, %r10363, 23;
	shf.l.wrap.b32 	%r10369, %r10363, %r10362, 23;
	mov.b64 	%rd2182, {%r10369, %r10368};
	xor.b64  	%rd2183, %rd2181, %rd2182;
	xor.b64  	%rd2184, %rd2143, %rd2119;
	and.b64  	%rd2185, %rd2167, %rd2184;
	xor.b64  	%rd2186, %rd2185, %rd2119;
	add.s64 	%rd2187, %rd2095, %rd1851;
	add.s64 	%rd2188, %rd2187, %rd2821;
	add.s64 	%rd2189, %rd2188, %rd2186;
	add.s64 	%rd2190, %rd2189, %rd2183;
	add.s64 	%rd2191, %rd2190, %rd2106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10370,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10371}, %rd2178;
	}
	shf.r.wrap.b32 	%r10372, %r10371, %r10370, 28;
	shf.r.wrap.b32 	%r10373, %r10370, %r10371, 28;
	mov.b64 	%rd2192, {%r10373, %r10372};
	shf.l.wrap.b32 	%r10374, %r10370, %r10371, 30;
	shf.l.wrap.b32 	%r10375, %r10371, %r10370, 30;
	mov.b64 	%rd2193, {%r10375, %r10374};
	xor.b64  	%rd2194, %rd2193, %rd2192;
	shf.l.wrap.b32 	%r10376, %r10370, %r10371, 25;
	shf.l.wrap.b32 	%r10377, %r10371, %r10370, 25;
	mov.b64 	%rd2195, {%r10377, %r10376};
	xor.b64  	%rd2196, %rd2194, %rd2195;
	xor.b64  	%rd2197, %rd2178, %rd2130;
	xor.b64  	%rd2198, %rd2178, %rd2154;
	and.b64  	%rd2199, %rd2198, %rd2197;
	xor.b64  	%rd2200, %rd2199, %rd2178;
	add.s64 	%rd2201, %rd2190, %rd2200;
	add.s64 	%rd2202, %rd2201, %rd2196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10378,%dummy}, %rd2191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10379}, %rd2191;
	}
	shf.r.wrap.b32 	%r10380, %r10379, %r10378, 14;
	shf.r.wrap.b32 	%r10381, %r10378, %r10379, 14;
	mov.b64 	%rd2203, {%r10381, %r10380};
	shf.r.wrap.b32 	%r10382, %r10379, %r10378, 18;
	shf.r.wrap.b32 	%r10383, %r10378, %r10379, 18;
	mov.b64 	%rd2204, {%r10383, %r10382};
	xor.b64  	%rd2205, %rd2204, %rd2203;
	shf.l.wrap.b32 	%r10384, %r10378, %r10379, 23;
	shf.l.wrap.b32 	%r10385, %r10379, %r10378, 23;
	mov.b64 	%rd2206, {%r10385, %r10384};
	xor.b64  	%rd2207, %rd2205, %rd2206;
	xor.b64  	%rd2208, %rd2167, %rd2143;
	and.b64  	%rd2209, %rd2191, %rd2208;
	xor.b64  	%rd2210, %rd2209, %rd2143;
	add.s64 	%rd2211, %rd2119, %rd1864;
	add.s64 	%rd2212, %rd2211, %rd2822;
	add.s64 	%rd2213, %rd2212, %rd2210;
	add.s64 	%rd2214, %rd2213, %rd2207;
	add.s64 	%rd2215, %rd2214, %rd2130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10386,%dummy}, %rd2202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10387}, %rd2202;
	}
	shf.r.wrap.b32 	%r10388, %r10387, %r10386, 28;
	shf.r.wrap.b32 	%r10389, %r10386, %r10387, 28;
	mov.b64 	%rd2216, {%r10389, %r10388};
	shf.l.wrap.b32 	%r10390, %r10386, %r10387, 30;
	shf.l.wrap.b32 	%r10391, %r10387, %r10386, 30;
	mov.b64 	%rd2217, {%r10391, %r10390};
	xor.b64  	%rd2218, %rd2217, %rd2216;
	shf.l.wrap.b32 	%r10392, %r10386, %r10387, 25;
	shf.l.wrap.b32 	%r10393, %r10387, %r10386, 25;
	mov.b64 	%rd2219, {%r10393, %r10392};
	xor.b64  	%rd2220, %rd2218, %rd2219;
	xor.b64  	%rd2221, %rd2202, %rd2154;
	xor.b64  	%rd2222, %rd2202, %rd2178;
	and.b64  	%rd2223, %rd2222, %rd2221;
	xor.b64  	%rd2224, %rd2223, %rd2202;
	add.s64 	%rd2225, %rd2214, %rd2224;
	add.s64 	%rd2226, %rd2225, %rd2220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10394,%dummy}, %rd2215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10395}, %rd2215;
	}
	shf.r.wrap.b32 	%r10396, %r10395, %r10394, 14;
	shf.r.wrap.b32 	%r10397, %r10394, %r10395, 14;
	mov.b64 	%rd2227, {%r10397, %r10396};
	shf.r.wrap.b32 	%r10398, %r10395, %r10394, 18;
	shf.r.wrap.b32 	%r10399, %r10394, %r10395, 18;
	mov.b64 	%rd2228, {%r10399, %r10398};
	xor.b64  	%rd2229, %rd2228, %rd2227;
	shf.l.wrap.b32 	%r10400, %r10394, %r10395, 23;
	shf.l.wrap.b32 	%r10401, %r10395, %r10394, 23;
	mov.b64 	%rd2230, {%r10401, %r10400};
	xor.b64  	%rd2231, %rd2229, %rd2230;
	xor.b64  	%rd2232, %rd2191, %rd2167;
	and.b64  	%rd2233, %rd2215, %rd2232;
	xor.b64  	%rd2234, %rd2233, %rd2167;
	add.s64 	%rd2235, %rd2143, %rd1877;
	add.s64 	%rd2236, %rd2235, %rd2823;
	add.s64 	%rd2237, %rd2236, %rd2234;
	add.s64 	%rd2238, %rd2237, %rd2231;
	add.s64 	%rd2239, %rd2238, %rd2154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10402,%dummy}, %rd2226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10403}, %rd2226;
	}
	shf.r.wrap.b32 	%r10404, %r10403, %r10402, 28;
	shf.r.wrap.b32 	%r10405, %r10402, %r10403, 28;
	mov.b64 	%rd2240, {%r10405, %r10404};
	shf.l.wrap.b32 	%r10406, %r10402, %r10403, 30;
	shf.l.wrap.b32 	%r10407, %r10403, %r10402, 30;
	mov.b64 	%rd2241, {%r10407, %r10406};
	xor.b64  	%rd2242, %rd2241, %rd2240;
	shf.l.wrap.b32 	%r10408, %r10402, %r10403, 25;
	shf.l.wrap.b32 	%r10409, %r10403, %r10402, 25;
	mov.b64 	%rd2243, {%r10409, %r10408};
	xor.b64  	%rd2244, %rd2242, %rd2243;
	xor.b64  	%rd2245, %rd2226, %rd2178;
	xor.b64  	%rd2246, %rd2226, %rd2202;
	and.b64  	%rd2247, %rd2246, %rd2245;
	xor.b64  	%rd2248, %rd2247, %rd2226;
	add.s64 	%rd2249, %rd2238, %rd2248;
	add.s64 	%rd2250, %rd2249, %rd2244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10410,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10411}, %rd2239;
	}
	shf.r.wrap.b32 	%r10412, %r10411, %r10410, 14;
	shf.r.wrap.b32 	%r10413, %r10410, %r10411, 14;
	mov.b64 	%rd2251, {%r10413, %r10412};
	shf.r.wrap.b32 	%r10414, %r10411, %r10410, 18;
	shf.r.wrap.b32 	%r10415, %r10410, %r10411, 18;
	mov.b64 	%rd2252, {%r10415, %r10414};
	xor.b64  	%rd2253, %rd2252, %rd2251;
	shf.l.wrap.b32 	%r10416, %r10410, %r10411, 23;
	shf.l.wrap.b32 	%r10417, %r10411, %r10410, 23;
	mov.b64 	%rd2254, {%r10417, %r10416};
	xor.b64  	%rd2255, %rd2253, %rd2254;
	xor.b64  	%rd2256, %rd2215, %rd2191;
	and.b64  	%rd2257, %rd2239, %rd2256;
	xor.b64  	%rd2258, %rd2257, %rd2191;
	add.s64 	%rd2259, %rd2167, %rd1890;
	add.s64 	%rd2260, %rd2259, %rd2824;
	add.s64 	%rd2261, %rd2260, %rd2258;
	add.s64 	%rd2262, %rd2261, %rd2255;
	add.s64 	%rd2263, %rd2262, %rd2178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10418,%dummy}, %rd2250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10419}, %rd2250;
	}
	shf.r.wrap.b32 	%r10420, %r10419, %r10418, 28;
	shf.r.wrap.b32 	%r10421, %r10418, %r10419, 28;
	mov.b64 	%rd2264, {%r10421, %r10420};
	shf.l.wrap.b32 	%r10422, %r10418, %r10419, 30;
	shf.l.wrap.b32 	%r10423, %r10419, %r10418, 30;
	mov.b64 	%rd2265, {%r10423, %r10422};
	xor.b64  	%rd2266, %rd2265, %rd2264;
	shf.l.wrap.b32 	%r10424, %r10418, %r10419, 25;
	shf.l.wrap.b32 	%r10425, %r10419, %r10418, 25;
	mov.b64 	%rd2267, {%r10425, %r10424};
	xor.b64  	%rd2268, %rd2266, %rd2267;
	xor.b64  	%rd2269, %rd2250, %rd2202;
	xor.b64  	%rd2270, %rd2250, %rd2226;
	and.b64  	%rd2271, %rd2270, %rd2269;
	xor.b64  	%rd2272, %rd2271, %rd2250;
	add.s64 	%rd2273, %rd2262, %rd2272;
	add.s64 	%rd2274, %rd2273, %rd2268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10426,%dummy}, %rd1877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10427}, %rd1877;
	}
	shf.r.wrap.b32 	%r10428, %r10427, %r10426, 19;
	shf.r.wrap.b32 	%r10429, %r10426, %r10427, 19;
	mov.b64 	%rd2275, {%r10429, %r10428};
	shf.l.wrap.b32 	%r10430, %r10426, %r10427, 3;
	shf.l.wrap.b32 	%r10431, %r10427, %r10426, 3;
	mov.b64 	%rd2276, {%r10431, %r10430};
	shr.u64 	%rd2277, %rd1877, 6;
	xor.b64  	%rd2278, %rd2275, %rd2277;
	xor.b64  	%rd2279, %rd2278, %rd2276;
	shf.r.wrap.b32 	%r10432, %r10041, %r10040, 1;
	shf.r.wrap.b32 	%r10433, %r10040, %r10041, 1;
	mov.b64 	%rd2280, {%r10433, %r10432};
	shf.r.wrap.b32 	%r10434, %r10041, %r10040, 8;
	shf.r.wrap.b32 	%r10435, %r10040, %r10041, 8;
	mov.b64 	%rd2281, {%r10435, %r10434};
	shr.u64 	%rd2282, %rd1708, 7;
	xor.b64  	%rd2283, %rd2280, %rd2282;
	xor.b64  	%rd2284, %rd2283, %rd2281;
	add.s64 	%rd2285, %rd1695, %rd1812;
	add.s64 	%rd2286, %rd2285, %rd2279;
	add.s64 	%rd2287, %rd2286, %rd2284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10436,%dummy}, %rd1890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10437}, %rd1890;
	}
	shf.r.wrap.b32 	%r10438, %r10437, %r10436, 19;
	shf.r.wrap.b32 	%r10439, %r10436, %r10437, 19;
	mov.b64 	%rd2288, {%r10439, %r10438};
	shf.l.wrap.b32 	%r10440, %r10436, %r10437, 3;
	shf.l.wrap.b32 	%r10441, %r10437, %r10436, 3;
	mov.b64 	%rd2289, {%r10441, %r10440};
	shr.u64 	%rd2290, %rd1890, 6;
	xor.b64  	%rd2291, %rd2288, %rd2290;
	xor.b64  	%rd2292, %rd2291, %rd2289;
	shf.r.wrap.b32 	%r10442, %r10051, %r10050, 1;
	shf.r.wrap.b32 	%r10443, %r10050, %r10051, 1;
	mov.b64 	%rd2293, {%r10443, %r10442};
	shf.r.wrap.b32 	%r10444, %r10051, %r10050, 8;
	shf.r.wrap.b32 	%r10445, %r10050, %r10051, 8;
	mov.b64 	%rd2294, {%r10445, %r10444};
	shr.u64 	%rd2295, %rd1721, 7;
	xor.b64  	%rd2296, %rd2293, %rd2295;
	xor.b64  	%rd2297, %rd2296, %rd2294;
	add.s64 	%rd2298, %rd1708, %rd1825;
	add.s64 	%rd2299, %rd2298, %rd2292;
	add.s64 	%rd2300, %rd2299, %rd2297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10446,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10447}, %rd2287;
	}
	shf.r.wrap.b32 	%r10448, %r10447, %r10446, 19;
	shf.r.wrap.b32 	%r10449, %r10446, %r10447, 19;
	mov.b64 	%rd2301, {%r10449, %r10448};
	shf.l.wrap.b32 	%r10450, %r10446, %r10447, 3;
	shf.l.wrap.b32 	%r10451, %r10447, %r10446, 3;
	mov.b64 	%rd2302, {%r10451, %r10450};
	shr.u64 	%rd2303, %rd2287, 6;
	xor.b64  	%rd2304, %rd2301, %rd2303;
	xor.b64  	%rd2305, %rd2304, %rd2302;
	shf.r.wrap.b32 	%r10452, %r10061, %r10060, 1;
	shf.r.wrap.b32 	%r10453, %r10060, %r10061, 1;
	mov.b64 	%rd2306, {%r10453, %r10452};
	shf.r.wrap.b32 	%r10454, %r10061, %r10060, 8;
	shf.r.wrap.b32 	%r10455, %r10060, %r10061, 8;
	mov.b64 	%rd2307, {%r10455, %r10454};
	shr.u64 	%rd2308, %rd1734, 7;
	xor.b64  	%rd2309, %rd2306, %rd2308;
	xor.b64  	%rd2310, %rd2309, %rd2307;
	add.s64 	%rd2311, %rd1721, %rd1838;
	add.s64 	%rd2312, %rd2311, %rd2305;
	add.s64 	%rd2313, %rd2312, %rd2310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10456,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10457}, %rd2300;
	}
	shf.r.wrap.b32 	%r10458, %r10457, %r10456, 19;
	shf.r.wrap.b32 	%r10459, %r10456, %r10457, 19;
	mov.b64 	%rd2314, {%r10459, %r10458};
	shf.l.wrap.b32 	%r10460, %r10456, %r10457, 3;
	shf.l.wrap.b32 	%r10461, %r10457, %r10456, 3;
	mov.b64 	%rd2315, {%r10461, %r10460};
	shr.u64 	%rd2316, %rd2300, 6;
	xor.b64  	%rd2317, %rd2314, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2315;
	shf.r.wrap.b32 	%r10462, %r10071, %r10070, 1;
	shf.r.wrap.b32 	%r10463, %r10070, %r10071, 1;
	mov.b64 	%rd2319, {%r10463, %r10462};
	shf.r.wrap.b32 	%r10464, %r10071, %r10070, 8;
	shf.r.wrap.b32 	%r10465, %r10070, %r10071, 8;
	mov.b64 	%rd2320, {%r10465, %r10464};
	shr.u64 	%rd2321, %rd1747, 7;
	xor.b64  	%rd2322, %rd2319, %rd2321;
	xor.b64  	%rd2323, %rd2322, %rd2320;
	add.s64 	%rd2324, %rd1734, %rd1851;
	add.s64 	%rd2325, %rd2324, %rd2318;
	add.s64 	%rd2326, %rd2325, %rd2323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10466,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10467}, %rd2313;
	}
	shf.r.wrap.b32 	%r10468, %r10467, %r10466, 19;
	shf.r.wrap.b32 	%r10469, %r10466, %r10467, 19;
	mov.b64 	%rd2327, {%r10469, %r10468};
	shf.l.wrap.b32 	%r10470, %r10466, %r10467, 3;
	shf.l.wrap.b32 	%r10471, %r10467, %r10466, 3;
	mov.b64 	%rd2328, {%r10471, %r10470};
	shr.u64 	%rd2329, %rd2313, 6;
	xor.b64  	%rd2330, %rd2327, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd2328;
	shf.r.wrap.b32 	%r10472, %r10081, %r10080, 1;
	shf.r.wrap.b32 	%r10473, %r10080, %r10081, 1;
	mov.b64 	%rd2332, {%r10473, %r10472};
	shf.r.wrap.b32 	%r10474, %r10081, %r10080, 8;
	shf.r.wrap.b32 	%r10475, %r10080, %r10081, 8;
	mov.b64 	%rd2333, {%r10475, %r10474};
	shr.u64 	%rd2334, %rd1760, 7;
	xor.b64  	%rd2335, %rd2332, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2333;
	add.s64 	%rd2337, %rd1747, %rd1864;
	add.s64 	%rd2338, %rd2337, %rd2331;
	add.s64 	%rd2339, %rd2338, %rd2336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10476,%dummy}, %rd2326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10477}, %rd2326;
	}
	shf.r.wrap.b32 	%r10478, %r10477, %r10476, 19;
	shf.r.wrap.b32 	%r10479, %r10476, %r10477, 19;
	mov.b64 	%rd2340, {%r10479, %r10478};
	shf.l.wrap.b32 	%r10480, %r10476, %r10477, 3;
	shf.l.wrap.b32 	%r10481, %r10477, %r10476, 3;
	mov.b64 	%rd2341, {%r10481, %r10480};
	shr.u64 	%rd2342, %rd2326, 6;
	xor.b64  	%rd2343, %rd2340, %rd2342;
	xor.b64  	%rd2344, %rd2343, %rd2341;
	shf.r.wrap.b32 	%r10482, %r10091, %r10090, 1;
	shf.r.wrap.b32 	%r10483, %r10090, %r10091, 1;
	mov.b64 	%rd2345, {%r10483, %r10482};
	shf.r.wrap.b32 	%r10484, %r10091, %r10090, 8;
	shf.r.wrap.b32 	%r10485, %r10090, %r10091, 8;
	mov.b64 	%rd2346, {%r10485, %r10484};
	shr.u64 	%rd2347, %rd1773, 7;
	xor.b64  	%rd2348, %rd2345, %rd2347;
	xor.b64  	%rd2349, %rd2348, %rd2346;
	add.s64 	%rd2350, %rd1760, %rd1877;
	add.s64 	%rd2351, %rd2350, %rd2344;
	add.s64 	%rd2352, %rd2351, %rd2349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10486,%dummy}, %rd2339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10487}, %rd2339;
	}
	shf.r.wrap.b32 	%r10488, %r10487, %r10486, 19;
	shf.r.wrap.b32 	%r10489, %r10486, %r10487, 19;
	mov.b64 	%rd2353, {%r10489, %r10488};
	shf.l.wrap.b32 	%r10490, %r10486, %r10487, 3;
	shf.l.wrap.b32 	%r10491, %r10487, %r10486, 3;
	mov.b64 	%rd2354, {%r10491, %r10490};
	shr.u64 	%rd2355, %rd2339, 6;
	xor.b64  	%rd2356, %rd2353, %rd2355;
	xor.b64  	%rd2357, %rd2356, %rd2354;
	shf.r.wrap.b32 	%r10492, %r10101, %r10100, 1;
	shf.r.wrap.b32 	%r10493, %r10100, %r10101, 1;
	mov.b64 	%rd2358, {%r10493, %r10492};
	shf.r.wrap.b32 	%r10494, %r10101, %r10100, 8;
	shf.r.wrap.b32 	%r10495, %r10100, %r10101, 8;
	mov.b64 	%rd2359, {%r10495, %r10494};
	shr.u64 	%rd2360, %rd1786, 7;
	xor.b64  	%rd2361, %rd2358, %rd2360;
	xor.b64  	%rd2362, %rd2361, %rd2359;
	add.s64 	%rd2363, %rd1773, %rd1890;
	add.s64 	%rd2364, %rd2363, %rd2357;
	add.s64 	%rd2365, %rd2364, %rd2362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10496,%dummy}, %rd2352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10497}, %rd2352;
	}
	shf.r.wrap.b32 	%r10498, %r10497, %r10496, 19;
	shf.r.wrap.b32 	%r10499, %r10496, %r10497, 19;
	mov.b64 	%rd2366, {%r10499, %r10498};
	shf.l.wrap.b32 	%r10500, %r10496, %r10497, 3;
	shf.l.wrap.b32 	%r10501, %r10497, %r10496, 3;
	mov.b64 	%rd2367, {%r10501, %r10500};
	shr.u64 	%rd2368, %rd2352, 6;
	xor.b64  	%rd2369, %rd2366, %rd2368;
	xor.b64  	%rd2370, %rd2369, %rd2367;
	shf.r.wrap.b32 	%r10502, %r10111, %r10110, 1;
	shf.r.wrap.b32 	%r10503, %r10110, %r10111, 1;
	mov.b64 	%rd2371, {%r10503, %r10502};
	shf.r.wrap.b32 	%r10504, %r10111, %r10110, 8;
	shf.r.wrap.b32 	%r10505, %r10110, %r10111, 8;
	mov.b64 	%rd2372, {%r10505, %r10504};
	shr.u64 	%rd2373, %rd1799, 7;
	xor.b64  	%rd2374, %rd2371, %rd2373;
	xor.b64  	%rd2375, %rd2374, %rd2372;
	add.s64 	%rd2376, %rd2287, %rd1786;
	add.s64 	%rd2377, %rd2376, %rd2370;
	add.s64 	%rd2378, %rd2377, %rd2375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10506,%dummy}, %rd2365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10507}, %rd2365;
	}
	shf.r.wrap.b32 	%r10508, %r10507, %r10506, 19;
	shf.r.wrap.b32 	%r10509, %r10506, %r10507, 19;
	mov.b64 	%rd2379, {%r10509, %r10508};
	shf.l.wrap.b32 	%r10510, %r10506, %r10507, 3;
	shf.l.wrap.b32 	%r10511, %r10507, %r10506, 3;
	mov.b64 	%rd2380, {%r10511, %r10510};
	shr.u64 	%rd2381, %rd2365, 6;
	xor.b64  	%rd2382, %rd2379, %rd2381;
	xor.b64  	%rd2383, %rd2382, %rd2380;
	shf.r.wrap.b32 	%r10512, %r10121, %r10120, 1;
	shf.r.wrap.b32 	%r10513, %r10120, %r10121, 1;
	mov.b64 	%rd2384, {%r10513, %r10512};
	shf.r.wrap.b32 	%r10514, %r10121, %r10120, 8;
	shf.r.wrap.b32 	%r10515, %r10120, %r10121, 8;
	mov.b64 	%rd2385, {%r10515, %r10514};
	shr.u64 	%rd2386, %rd1812, 7;
	xor.b64  	%rd2387, %rd2384, %rd2386;
	xor.b64  	%rd2388, %rd2387, %rd2385;
	add.s64 	%rd2389, %rd2300, %rd1799;
	add.s64 	%rd2390, %rd2389, %rd2383;
	add.s64 	%rd2391, %rd2390, %rd2388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10516,%dummy}, %rd2378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10517}, %rd2378;
	}
	shf.r.wrap.b32 	%r10518, %r10517, %r10516, 19;
	shf.r.wrap.b32 	%r10519, %r10516, %r10517, 19;
	mov.b64 	%rd2392, {%r10519, %r10518};
	shf.l.wrap.b32 	%r10520, %r10516, %r10517, 3;
	shf.l.wrap.b32 	%r10521, %r10517, %r10516, 3;
	mov.b64 	%rd2393, {%r10521, %r10520};
	shr.u64 	%rd2394, %rd2378, 6;
	xor.b64  	%rd2395, %rd2392, %rd2394;
	xor.b64  	%rd2396, %rd2395, %rd2393;
	shf.r.wrap.b32 	%r10522, %r10131, %r10130, 1;
	shf.r.wrap.b32 	%r10523, %r10130, %r10131, 1;
	mov.b64 	%rd2397, {%r10523, %r10522};
	shf.r.wrap.b32 	%r10524, %r10131, %r10130, 8;
	shf.r.wrap.b32 	%r10525, %r10130, %r10131, 8;
	mov.b64 	%rd2398, {%r10525, %r10524};
	shr.u64 	%rd2399, %rd1825, 7;
	xor.b64  	%rd2400, %rd2397, %rd2399;
	xor.b64  	%rd2401, %rd2400, %rd2398;
	add.s64 	%rd2402, %rd2313, %rd1812;
	add.s64 	%rd2403, %rd2402, %rd2396;
	add.s64 	%rd2404, %rd2403, %rd2401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10526,%dummy}, %rd2391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10527}, %rd2391;
	}
	shf.r.wrap.b32 	%r10528, %r10527, %r10526, 19;
	shf.r.wrap.b32 	%r10529, %r10526, %r10527, 19;
	mov.b64 	%rd2405, {%r10529, %r10528};
	shf.l.wrap.b32 	%r10530, %r10526, %r10527, 3;
	shf.l.wrap.b32 	%r10531, %r10527, %r10526, 3;
	mov.b64 	%rd2406, {%r10531, %r10530};
	shr.u64 	%rd2407, %rd2391, 6;
	xor.b64  	%rd2408, %rd2405, %rd2407;
	xor.b64  	%rd2409, %rd2408, %rd2406;
	shf.r.wrap.b32 	%r10532, %r10141, %r10140, 1;
	shf.r.wrap.b32 	%r10533, %r10140, %r10141, 1;
	mov.b64 	%rd2410, {%r10533, %r10532};
	shf.r.wrap.b32 	%r10534, %r10141, %r10140, 8;
	shf.r.wrap.b32 	%r10535, %r10140, %r10141, 8;
	mov.b64 	%rd2411, {%r10535, %r10534};
	shr.u64 	%rd2412, %rd1838, 7;
	xor.b64  	%rd2413, %rd2410, %rd2412;
	xor.b64  	%rd2414, %rd2413, %rd2411;
	add.s64 	%rd2415, %rd2326, %rd1825;
	add.s64 	%rd2416, %rd2415, %rd2409;
	add.s64 	%rd2417, %rd2416, %rd2414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10536,%dummy}, %rd2404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10537}, %rd2404;
	}
	shf.r.wrap.b32 	%r10538, %r10537, %r10536, 19;
	shf.r.wrap.b32 	%r10539, %r10536, %r10537, 19;
	mov.b64 	%rd2418, {%r10539, %r10538};
	shf.l.wrap.b32 	%r10540, %r10536, %r10537, 3;
	shf.l.wrap.b32 	%r10541, %r10537, %r10536, 3;
	mov.b64 	%rd2419, {%r10541, %r10540};
	shr.u64 	%rd2420, %rd2404, 6;
	xor.b64  	%rd2421, %rd2418, %rd2420;
	xor.b64  	%rd2422, %rd2421, %rd2419;
	shf.r.wrap.b32 	%r10542, %r10151, %r10150, 1;
	shf.r.wrap.b32 	%r10543, %r10150, %r10151, 1;
	mov.b64 	%rd2423, {%r10543, %r10542};
	shf.r.wrap.b32 	%r10544, %r10151, %r10150, 8;
	shf.r.wrap.b32 	%r10545, %r10150, %r10151, 8;
	mov.b64 	%rd2424, {%r10545, %r10544};
	shr.u64 	%rd2425, %rd1851, 7;
	xor.b64  	%rd2426, %rd2423, %rd2425;
	xor.b64  	%rd2427, %rd2426, %rd2424;
	add.s64 	%rd2428, %rd2339, %rd1838;
	add.s64 	%rd2429, %rd2428, %rd2422;
	add.s64 	%rd2430, %rd2429, %rd2427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10546,%dummy}, %rd2417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10547}, %rd2417;
	}
	shf.r.wrap.b32 	%r10548, %r10547, %r10546, 19;
	shf.r.wrap.b32 	%r10549, %r10546, %r10547, 19;
	mov.b64 	%rd2431, {%r10549, %r10548};
	shf.l.wrap.b32 	%r10550, %r10546, %r10547, 3;
	shf.l.wrap.b32 	%r10551, %r10547, %r10546, 3;
	mov.b64 	%rd2432, {%r10551, %r10550};
	shr.u64 	%rd2433, %rd2417, 6;
	xor.b64  	%rd2434, %rd2431, %rd2433;
	xor.b64  	%rd2435, %rd2434, %rd2432;
	shf.r.wrap.b32 	%r10552, %r10161, %r10160, 1;
	shf.r.wrap.b32 	%r10553, %r10160, %r10161, 1;
	mov.b64 	%rd2436, {%r10553, %r10552};
	shf.r.wrap.b32 	%r10554, %r10161, %r10160, 8;
	shf.r.wrap.b32 	%r10555, %r10160, %r10161, 8;
	mov.b64 	%rd2437, {%r10555, %r10554};
	shr.u64 	%rd2438, %rd1864, 7;
	xor.b64  	%rd2439, %rd2436, %rd2438;
	xor.b64  	%rd2440, %rd2439, %rd2437;
	add.s64 	%rd2441, %rd2352, %rd1851;
	add.s64 	%rd2442, %rd2441, %rd2435;
	add.s64 	%rd2443, %rd2442, %rd2440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10556,%dummy}, %rd2263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10557}, %rd2263;
	}
	shf.r.wrap.b32 	%r10558, %r10557, %r10556, 14;
	shf.r.wrap.b32 	%r10559, %r10556, %r10557, 14;
	mov.b64 	%rd2444, {%r10559, %r10558};
	shf.r.wrap.b32 	%r10560, %r10557, %r10556, 18;
	shf.r.wrap.b32 	%r10561, %r10556, %r10557, 18;
	mov.b64 	%rd2445, {%r10561, %r10560};
	xor.b64  	%rd2446, %rd2445, %rd2444;
	shf.l.wrap.b32 	%r10562, %r10556, %r10557, 23;
	shf.l.wrap.b32 	%r10563, %r10557, %r10556, 23;
	mov.b64 	%rd2447, {%r10563, %r10562};
	xor.b64  	%rd2448, %rd2446, %rd2447;
	xor.b64  	%rd2449, %rd2215, %rd2239;
	and.b64  	%rd2450, %rd2449, %rd2263;
	xor.b64  	%rd2451, %rd2450, %rd2215;
	add.s64 	%rd2452, %rd2451, %rd2191;
	add.s64 	%rd2453, %rd2452, %rd2287;
	add.s64 	%rd2454, %rd2453, %rd2825;
	add.s64 	%rd2455, %rd2454, %rd2448;
	add.s64 	%rd2456, %rd2455, %rd2202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10564,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10565}, %rd2274;
	}
	shf.r.wrap.b32 	%r10566, %r10565, %r10564, 28;
	shf.r.wrap.b32 	%r10567, %r10564, %r10565, 28;
	mov.b64 	%rd2457, {%r10567, %r10566};
	shf.l.wrap.b32 	%r10568, %r10564, %r10565, 30;
	shf.l.wrap.b32 	%r10569, %r10565, %r10564, 30;
	mov.b64 	%rd2458, {%r10569, %r10568};
	xor.b64  	%rd2459, %rd2458, %rd2457;
	shf.l.wrap.b32 	%r10570, %r10564, %r10565, 25;
	shf.l.wrap.b32 	%r10571, %r10565, %r10564, 25;
	mov.b64 	%rd2460, {%r10571, %r10570};
	xor.b64  	%rd2461, %rd2459, %rd2460;
	xor.b64  	%rd2462, %rd2274, %rd2226;
	xor.b64  	%rd2463, %rd2274, %rd2250;
	and.b64  	%rd2464, %rd2463, %rd2462;
	xor.b64  	%rd2465, %rd2464, %rd2274;
	add.s64 	%rd2466, %rd2455, %rd2465;
	add.s64 	%rd2467, %rd2466, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10572,%dummy}, %rd2456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10573}, %rd2456;
	}
	shf.r.wrap.b32 	%r10574, %r10573, %r10572, 14;
	shf.r.wrap.b32 	%r10575, %r10572, %r10573, 14;
	mov.b64 	%rd2468, {%r10575, %r10574};
	shf.r.wrap.b32 	%r10576, %r10573, %r10572, 18;
	shf.r.wrap.b32 	%r10577, %r10572, %r10573, 18;
	mov.b64 	%rd2469, {%r10577, %r10576};
	xor.b64  	%rd2470, %rd2469, %rd2468;
	shf.l.wrap.b32 	%r10578, %r10572, %r10573, 23;
	shf.l.wrap.b32 	%r10579, %r10573, %r10572, 23;
	mov.b64 	%rd2471, {%r10579, %r10578};
	xor.b64  	%rd2472, %rd2470, %rd2471;
	xor.b64  	%rd2473, %rd2239, %rd2263;
	and.b64  	%rd2474, %rd2456, %rd2473;
	xor.b64  	%rd2475, %rd2474, %rd2239;
	add.s64 	%rd2476, %rd2300, %rd2215;
	add.s64 	%rd2477, %rd2476, %rd2826;
	add.s64 	%rd2478, %rd2477, %rd2475;
	add.s64 	%rd2479, %rd2478, %rd2472;
	add.s64 	%rd2480, %rd2479, %rd2226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10580,%dummy}, %rd2467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10581}, %rd2467;
	}
	shf.r.wrap.b32 	%r10582, %r10581, %r10580, 28;
	shf.r.wrap.b32 	%r10583, %r10580, %r10581, 28;
	mov.b64 	%rd2481, {%r10583, %r10582};
	shf.l.wrap.b32 	%r10584, %r10580, %r10581, 30;
	shf.l.wrap.b32 	%r10585, %r10581, %r10580, 30;
	mov.b64 	%rd2482, {%r10585, %r10584};
	xor.b64  	%rd2483, %rd2482, %rd2481;
	shf.l.wrap.b32 	%r10586, %r10580, %r10581, 25;
	shf.l.wrap.b32 	%r10587, %r10581, %r10580, 25;
	mov.b64 	%rd2484, {%r10587, %r10586};
	xor.b64  	%rd2485, %rd2483, %rd2484;
	xor.b64  	%rd2486, %rd2467, %rd2250;
	xor.b64  	%rd2487, %rd2467, %rd2274;
	and.b64  	%rd2488, %rd2487, %rd2486;
	xor.b64  	%rd2489, %rd2488, %rd2467;
	add.s64 	%rd2490, %rd2479, %rd2489;
	add.s64 	%rd2491, %rd2490, %rd2485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10588,%dummy}, %rd2480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10589}, %rd2480;
	}
	shf.r.wrap.b32 	%r10590, %r10589, %r10588, 14;
	shf.r.wrap.b32 	%r10591, %r10588, %r10589, 14;
	mov.b64 	%rd2492, {%r10591, %r10590};
	shf.r.wrap.b32 	%r10592, %r10589, %r10588, 18;
	shf.r.wrap.b32 	%r10593, %r10588, %r10589, 18;
	mov.b64 	%rd2493, {%r10593, %r10592};
	xor.b64  	%rd2494, %rd2493, %rd2492;
	shf.l.wrap.b32 	%r10594, %r10588, %r10589, 23;
	shf.l.wrap.b32 	%r10595, %r10589, %r10588, 23;
	mov.b64 	%rd2495, {%r10595, %r10594};
	xor.b64  	%rd2496, %rd2494, %rd2495;
	xor.b64  	%rd2497, %rd2456, %rd2263;
	and.b64  	%rd2498, %rd2480, %rd2497;
	xor.b64  	%rd2499, %rd2498, %rd2263;
	add.s64 	%rd2500, %rd2313, %rd2239;
	add.s64 	%rd2501, %rd2500, %rd2827;
	add.s64 	%rd2502, %rd2501, %rd2499;
	add.s64 	%rd2503, %rd2502, %rd2496;
	add.s64 	%rd2504, %rd2503, %rd2250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10596,%dummy}, %rd2491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10597}, %rd2491;
	}
	shf.r.wrap.b32 	%r10598, %r10597, %r10596, 28;
	shf.r.wrap.b32 	%r10599, %r10596, %r10597, 28;
	mov.b64 	%rd2505, {%r10599, %r10598};
	shf.l.wrap.b32 	%r10600, %r10596, %r10597, 30;
	shf.l.wrap.b32 	%r10601, %r10597, %r10596, 30;
	mov.b64 	%rd2506, {%r10601, %r10600};
	xor.b64  	%rd2507, %rd2506, %rd2505;
	shf.l.wrap.b32 	%r10602, %r10596, %r10597, 25;
	shf.l.wrap.b32 	%r10603, %r10597, %r10596, 25;
	mov.b64 	%rd2508, {%r10603, %r10602};
	xor.b64  	%rd2509, %rd2507, %rd2508;
	xor.b64  	%rd2510, %rd2491, %rd2274;
	xor.b64  	%rd2511, %rd2491, %rd2467;
	and.b64  	%rd2512, %rd2511, %rd2510;
	xor.b64  	%rd2513, %rd2512, %rd2491;
	add.s64 	%rd2514, %rd2503, %rd2513;
	add.s64 	%rd2515, %rd2514, %rd2509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10604,%dummy}, %rd2504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10605}, %rd2504;
	}
	shf.r.wrap.b32 	%r10606, %r10605, %r10604, 14;
	shf.r.wrap.b32 	%r10607, %r10604, %r10605, 14;
	mov.b64 	%rd2516, {%r10607, %r10606};
	shf.r.wrap.b32 	%r10608, %r10605, %r10604, 18;
	shf.r.wrap.b32 	%r10609, %r10604, %r10605, 18;
	mov.b64 	%rd2517, {%r10609, %r10608};
	xor.b64  	%rd2518, %rd2517, %rd2516;
	shf.l.wrap.b32 	%r10610, %r10604, %r10605, 23;
	shf.l.wrap.b32 	%r10611, %r10605, %r10604, 23;
	mov.b64 	%rd2519, {%r10611, %r10610};
	xor.b64  	%rd2520, %rd2518, %rd2519;
	xor.b64  	%rd2521, %rd2480, %rd2456;
	and.b64  	%rd2522, %rd2504, %rd2521;
	xor.b64  	%rd2523, %rd2522, %rd2456;
	add.s64 	%rd2524, %rd2326, %rd2263;
	add.s64 	%rd2525, %rd2524, %rd2828;
	add.s64 	%rd2526, %rd2525, %rd2523;
	add.s64 	%rd2527, %rd2526, %rd2520;
	add.s64 	%rd2528, %rd2527, %rd2274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10612,%dummy}, %rd2515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10613}, %rd2515;
	}
	shf.r.wrap.b32 	%r10614, %r10613, %r10612, 28;
	shf.r.wrap.b32 	%r10615, %r10612, %r10613, 28;
	mov.b64 	%rd2529, {%r10615, %r10614};
	shf.l.wrap.b32 	%r10616, %r10612, %r10613, 30;
	shf.l.wrap.b32 	%r10617, %r10613, %r10612, 30;
	mov.b64 	%rd2530, {%r10617, %r10616};
	xor.b64  	%rd2531, %rd2530, %rd2529;
	shf.l.wrap.b32 	%r10618, %r10612, %r10613, 25;
	shf.l.wrap.b32 	%r10619, %r10613, %r10612, 25;
	mov.b64 	%rd2532, {%r10619, %r10618};
	xor.b64  	%rd2533, %rd2531, %rd2532;
	xor.b64  	%rd2534, %rd2515, %rd2467;
	xor.b64  	%rd2535, %rd2515, %rd2491;
	and.b64  	%rd2536, %rd2535, %rd2534;
	xor.b64  	%rd2537, %rd2536, %rd2515;
	add.s64 	%rd2538, %rd2527, %rd2537;
	add.s64 	%rd2539, %rd2538, %rd2533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10620,%dummy}, %rd2528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10621}, %rd2528;
	}
	shf.r.wrap.b32 	%r10622, %r10621, %r10620, 14;
	shf.r.wrap.b32 	%r10623, %r10620, %r10621, 14;
	mov.b64 	%rd2540, {%r10623, %r10622};
	shf.r.wrap.b32 	%r10624, %r10621, %r10620, 18;
	shf.r.wrap.b32 	%r10625, %r10620, %r10621, 18;
	mov.b64 	%rd2541, {%r10625, %r10624};
	xor.b64  	%rd2542, %rd2541, %rd2540;
	shf.l.wrap.b32 	%r10626, %r10620, %r10621, 23;
	shf.l.wrap.b32 	%r10627, %r10621, %r10620, 23;
	mov.b64 	%rd2543, {%r10627, %r10626};
	xor.b64  	%rd2544, %rd2542, %rd2543;
	xor.b64  	%rd2545, %rd2504, %rd2480;
	and.b64  	%rd2546, %rd2528, %rd2545;
	xor.b64  	%rd2547, %rd2546, %rd2480;
	add.s64 	%rd2548, %rd2456, %rd2339;
	add.s64 	%rd2549, %rd2548, %rd2829;
	add.s64 	%rd2550, %rd2549, %rd2547;
	add.s64 	%rd2551, %rd2550, %rd2544;
	add.s64 	%rd2552, %rd2551, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10628,%dummy}, %rd2539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10629}, %rd2539;
	}
	shf.r.wrap.b32 	%r10630, %r10629, %r10628, 28;
	shf.r.wrap.b32 	%r10631, %r10628, %r10629, 28;
	mov.b64 	%rd2553, {%r10631, %r10630};
	shf.l.wrap.b32 	%r10632, %r10628, %r10629, 30;
	shf.l.wrap.b32 	%r10633, %r10629, %r10628, 30;
	mov.b64 	%rd2554, {%r10633, %r10632};
	xor.b64  	%rd2555, %rd2554, %rd2553;
	shf.l.wrap.b32 	%r10634, %r10628, %r10629, 25;
	shf.l.wrap.b32 	%r10635, %r10629, %r10628, 25;
	mov.b64 	%rd2556, {%r10635, %r10634};
	xor.b64  	%rd2557, %rd2555, %rd2556;
	xor.b64  	%rd2558, %rd2539, %rd2491;
	xor.b64  	%rd2559, %rd2539, %rd2515;
	and.b64  	%rd2560, %rd2559, %rd2558;
	xor.b64  	%rd2561, %rd2560, %rd2539;
	add.s64 	%rd2562, %rd2551, %rd2561;
	add.s64 	%rd2563, %rd2562, %rd2557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10636,%dummy}, %rd2552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10637}, %rd2552;
	}
	shf.r.wrap.b32 	%r10638, %r10637, %r10636, 14;
	shf.r.wrap.b32 	%r10639, %r10636, %r10637, 14;
	mov.b64 	%rd2564, {%r10639, %r10638};
	shf.r.wrap.b32 	%r10640, %r10637, %r10636, 18;
	shf.r.wrap.b32 	%r10641, %r10636, %r10637, 18;
	mov.b64 	%rd2565, {%r10641, %r10640};
	xor.b64  	%rd2566, %rd2565, %rd2564;
	shf.l.wrap.b32 	%r10642, %r10636, %r10637, 23;
	shf.l.wrap.b32 	%r10643, %r10637, %r10636, 23;
	mov.b64 	%rd2567, {%r10643, %r10642};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	xor.b64  	%rd2569, %rd2528, %rd2504;
	and.b64  	%rd2570, %rd2552, %rd2569;
	xor.b64  	%rd2571, %rd2570, %rd2504;
	add.s64 	%rd2572, %rd2480, %rd2352;
	add.s64 	%rd2573, %rd2572, %rd2830;
	add.s64 	%rd2574, %rd2573, %rd2571;
	add.s64 	%rd2575, %rd2574, %rd2568;
	add.s64 	%rd2576, %rd2575, %rd2491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10644,%dummy}, %rd2563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10645}, %rd2563;
	}
	shf.r.wrap.b32 	%r10646, %r10645, %r10644, 28;
	shf.r.wrap.b32 	%r10647, %r10644, %r10645, 28;
	mov.b64 	%rd2577, {%r10647, %r10646};
	shf.l.wrap.b32 	%r10648, %r10644, %r10645, 30;
	shf.l.wrap.b32 	%r10649, %r10645, %r10644, 30;
	mov.b64 	%rd2578, {%r10649, %r10648};
	xor.b64  	%rd2579, %rd2578, %rd2577;
	shf.l.wrap.b32 	%r10650, %r10644, %r10645, 25;
	shf.l.wrap.b32 	%r10651, %r10645, %r10644, 25;
	mov.b64 	%rd2580, {%r10651, %r10650};
	xor.b64  	%rd2581, %rd2579, %rd2580;
	xor.b64  	%rd2582, %rd2563, %rd2515;
	xor.b64  	%rd2583, %rd2563, %rd2539;
	and.b64  	%rd2584, %rd2583, %rd2582;
	xor.b64  	%rd2585, %rd2584, %rd2563;
	add.s64 	%rd2586, %rd2575, %rd2585;
	add.s64 	%rd2587, %rd2586, %rd2581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10652,%dummy}, %rd2576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10653}, %rd2576;
	}
	shf.r.wrap.b32 	%r10654, %r10653, %r10652, 14;
	shf.r.wrap.b32 	%r10655, %r10652, %r10653, 14;
	mov.b64 	%rd2588, {%r10655, %r10654};
	shf.r.wrap.b32 	%r10656, %r10653, %r10652, 18;
	shf.r.wrap.b32 	%r10657, %r10652, %r10653, 18;
	mov.b64 	%rd2589, {%r10657, %r10656};
	xor.b64  	%rd2590, %rd2589, %rd2588;
	shf.l.wrap.b32 	%r10658, %r10652, %r10653, 23;
	shf.l.wrap.b32 	%r10659, %r10653, %r10652, 23;
	mov.b64 	%rd2591, {%r10659, %r10658};
	xor.b64  	%rd2592, %rd2590, %rd2591;
	xor.b64  	%rd2593, %rd2552, %rd2528;
	and.b64  	%rd2594, %rd2576, %rd2593;
	xor.b64  	%rd2595, %rd2594, %rd2528;
	add.s64 	%rd2596, %rd2504, %rd2365;
	add.s64 	%rd2597, %rd2596, %rd2831;
	add.s64 	%rd2598, %rd2597, %rd2595;
	add.s64 	%rd2599, %rd2598, %rd2592;
	add.s64 	%rd2600, %rd2599, %rd2515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10660,%dummy}, %rd2587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10661}, %rd2587;
	}
	shf.r.wrap.b32 	%r10662, %r10661, %r10660, 28;
	shf.r.wrap.b32 	%r10663, %r10660, %r10661, 28;
	mov.b64 	%rd2601, {%r10663, %r10662};
	shf.l.wrap.b32 	%r10664, %r10660, %r10661, 30;
	shf.l.wrap.b32 	%r10665, %r10661, %r10660, 30;
	mov.b64 	%rd2602, {%r10665, %r10664};
	xor.b64  	%rd2603, %rd2602, %rd2601;
	shf.l.wrap.b32 	%r10666, %r10660, %r10661, 25;
	shf.l.wrap.b32 	%r10667, %r10661, %r10660, 25;
	mov.b64 	%rd2604, {%r10667, %r10666};
	xor.b64  	%rd2605, %rd2603, %rd2604;
	xor.b64  	%rd2606, %rd2587, %rd2539;
	xor.b64  	%rd2607, %rd2587, %rd2563;
	and.b64  	%rd2608, %rd2607, %rd2606;
	xor.b64  	%rd2609, %rd2608, %rd2587;
	add.s64 	%rd2610, %rd2599, %rd2609;
	add.s64 	%rd2611, %rd2610, %rd2605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10668,%dummy}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10669}, %rd2600;
	}
	shf.r.wrap.b32 	%r10670, %r10669, %r10668, 14;
	shf.r.wrap.b32 	%r10671, %r10668, %r10669, 14;
	mov.b64 	%rd2612, {%r10671, %r10670};
	shf.r.wrap.b32 	%r10672, %r10669, %r10668, 18;
	shf.r.wrap.b32 	%r10673, %r10668, %r10669, 18;
	mov.b64 	%rd2613, {%r10673, %r10672};
	xor.b64  	%rd2614, %rd2613, %rd2612;
	shf.l.wrap.b32 	%r10674, %r10668, %r10669, 23;
	shf.l.wrap.b32 	%r10675, %r10669, %r10668, 23;
	mov.b64 	%rd2615, {%r10675, %r10674};
	xor.b64  	%rd2616, %rd2614, %rd2615;
	xor.b64  	%rd2617, %rd2576, %rd2552;
	and.b64  	%rd2618, %rd2600, %rd2617;
	xor.b64  	%rd2619, %rd2618, %rd2552;
	add.s64 	%rd2620, %rd2528, %rd2378;
	add.s64 	%rd2621, %rd2620, %rd2832;
	add.s64 	%rd2622, %rd2621, %rd2619;
	add.s64 	%rd2623, %rd2622, %rd2616;
	add.s64 	%rd2624, %rd2623, %rd2539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10676,%dummy}, %rd2611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10677}, %rd2611;
	}
	shf.r.wrap.b32 	%r10678, %r10677, %r10676, 28;
	shf.r.wrap.b32 	%r10679, %r10676, %r10677, 28;
	mov.b64 	%rd2625, {%r10679, %r10678};
	shf.l.wrap.b32 	%r10680, %r10676, %r10677, 30;
	shf.l.wrap.b32 	%r10681, %r10677, %r10676, 30;
	mov.b64 	%rd2626, {%r10681, %r10680};
	xor.b64  	%rd2627, %rd2626, %rd2625;
	shf.l.wrap.b32 	%r10682, %r10676, %r10677, 25;
	shf.l.wrap.b32 	%r10683, %r10677, %r10676, 25;
	mov.b64 	%rd2628, {%r10683, %r10682};
	xor.b64  	%rd2629, %rd2627, %rd2628;
	xor.b64  	%rd2630, %rd2611, %rd2563;
	xor.b64  	%rd2631, %rd2611, %rd2587;
	and.b64  	%rd2632, %rd2631, %rd2630;
	xor.b64  	%rd2633, %rd2632, %rd2611;
	add.s64 	%rd2634, %rd2623, %rd2633;
	add.s64 	%rd2635, %rd2634, %rd2629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10684,%dummy}, %rd2624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10685}, %rd2624;
	}
	shf.r.wrap.b32 	%r10686, %r10685, %r10684, 14;
	shf.r.wrap.b32 	%r10687, %r10684, %r10685, 14;
	mov.b64 	%rd2636, {%r10687, %r10686};
	shf.r.wrap.b32 	%r10688, %r10685, %r10684, 18;
	shf.r.wrap.b32 	%r10689, %r10684, %r10685, 18;
	mov.b64 	%rd2637, {%r10689, %r10688};
	xor.b64  	%rd2638, %rd2637, %rd2636;
	shf.l.wrap.b32 	%r10690, %r10684, %r10685, 23;
	shf.l.wrap.b32 	%r10691, %r10685, %r10684, 23;
	mov.b64 	%rd2639, {%r10691, %r10690};
	xor.b64  	%rd2640, %rd2638, %rd2639;
	xor.b64  	%rd2641, %rd2600, %rd2576;
	and.b64  	%rd2642, %rd2624, %rd2641;
	xor.b64  	%rd2643, %rd2642, %rd2576;
	add.s64 	%rd2644, %rd2552, %rd2391;
	add.s64 	%rd2645, %rd2644, %rd2833;
	add.s64 	%rd2646, %rd2645, %rd2643;
	add.s64 	%rd2647, %rd2646, %rd2640;
	add.s64 	%rd2648, %rd2647, %rd2563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10692,%dummy}, %rd2635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10693}, %rd2635;
	}
	shf.r.wrap.b32 	%r10694, %r10693, %r10692, 28;
	shf.r.wrap.b32 	%r10695, %r10692, %r10693, 28;
	mov.b64 	%rd2649, {%r10695, %r10694};
	shf.l.wrap.b32 	%r10696, %r10692, %r10693, 30;
	shf.l.wrap.b32 	%r10697, %r10693, %r10692, 30;
	mov.b64 	%rd2650, {%r10697, %r10696};
	xor.b64  	%rd2651, %rd2650, %rd2649;
	shf.l.wrap.b32 	%r10698, %r10692, %r10693, 25;
	shf.l.wrap.b32 	%r10699, %r10693, %r10692, 25;
	mov.b64 	%rd2652, {%r10699, %r10698};
	xor.b64  	%rd2653, %rd2651, %rd2652;
	xor.b64  	%rd2654, %rd2635, %rd2587;
	xor.b64  	%rd2655, %rd2635, %rd2611;
	and.b64  	%rd2656, %rd2655, %rd2654;
	xor.b64  	%rd2657, %rd2656, %rd2635;
	add.s64 	%rd2658, %rd2647, %rd2657;
	add.s64 	%rd2659, %rd2658, %rd2653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10700,%dummy}, %rd2648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10701}, %rd2648;
	}
	shf.r.wrap.b32 	%r10702, %r10701, %r10700, 14;
	shf.r.wrap.b32 	%r10703, %r10700, %r10701, 14;
	mov.b64 	%rd2660, {%r10703, %r10702};
	shf.r.wrap.b32 	%r10704, %r10701, %r10700, 18;
	shf.r.wrap.b32 	%r10705, %r10700, %r10701, 18;
	mov.b64 	%rd2661, {%r10705, %r10704};
	xor.b64  	%rd2662, %rd2661, %rd2660;
	shf.l.wrap.b32 	%r10706, %r10700, %r10701, 23;
	shf.l.wrap.b32 	%r10707, %r10701, %r10700, 23;
	mov.b64 	%rd2663, {%r10707, %r10706};
	xor.b64  	%rd2664, %rd2662, %rd2663;
	xor.b64  	%rd2665, %rd2624, %rd2600;
	and.b64  	%rd2666, %rd2648, %rd2665;
	xor.b64  	%rd2667, %rd2666, %rd2600;
	add.s64 	%rd2668, %rd2576, %rd2404;
	add.s64 	%rd2669, %rd2668, %rd2834;
	add.s64 	%rd2670, %rd2669, %rd2667;
	add.s64 	%rd2671, %rd2670, %rd2664;
	add.s64 	%rd2672, %rd2671, %rd2587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10708,%dummy}, %rd2659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10709}, %rd2659;
	}
	shf.r.wrap.b32 	%r10710, %r10709, %r10708, 28;
	shf.r.wrap.b32 	%r10711, %r10708, %r10709, 28;
	mov.b64 	%rd2673, {%r10711, %r10710};
	shf.l.wrap.b32 	%r10712, %r10708, %r10709, 30;
	shf.l.wrap.b32 	%r10713, %r10709, %r10708, 30;
	mov.b64 	%rd2674, {%r10713, %r10712};
	xor.b64  	%rd2675, %rd2674, %rd2673;
	shf.l.wrap.b32 	%r10714, %r10708, %r10709, 25;
	shf.l.wrap.b32 	%r10715, %r10709, %r10708, 25;
	mov.b64 	%rd2676, {%r10715, %r10714};
	xor.b64  	%rd2677, %rd2675, %rd2676;
	xor.b64  	%rd2678, %rd2659, %rd2611;
	xor.b64  	%rd2679, %rd2659, %rd2635;
	and.b64  	%rd2680, %rd2679, %rd2678;
	xor.b64  	%rd2681, %rd2680, %rd2659;
	add.s64 	%rd2682, %rd2671, %rd2681;
	add.s64 	%rd2683, %rd2682, %rd2677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10716,%dummy}, %rd2672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10717}, %rd2672;
	}
	shf.r.wrap.b32 	%r10718, %r10717, %r10716, 14;
	shf.r.wrap.b32 	%r10719, %r10716, %r10717, 14;
	mov.b64 	%rd2684, {%r10719, %r10718};
	shf.r.wrap.b32 	%r10720, %r10717, %r10716, 18;
	shf.r.wrap.b32 	%r10721, %r10716, %r10717, 18;
	mov.b64 	%rd2685, {%r10721, %r10720};
	xor.b64  	%rd2686, %rd2685, %rd2684;
	shf.l.wrap.b32 	%r10722, %r10716, %r10717, 23;
	shf.l.wrap.b32 	%r10723, %r10717, %r10716, 23;
	mov.b64 	%rd2687, {%r10723, %r10722};
	xor.b64  	%rd2688, %rd2686, %rd2687;
	xor.b64  	%rd2689, %rd2648, %rd2624;
	and.b64  	%rd2690, %rd2672, %rd2689;
	xor.b64  	%rd2691, %rd2690, %rd2624;
	add.s64 	%rd2692, %rd2600, %rd2417;
	add.s64 	%rd2693, %rd2692, %rd2835;
	add.s64 	%rd2694, %rd2693, %rd2691;
	add.s64 	%rd2695, %rd2694, %rd2688;
	add.s64 	%rd2696, %rd2695, %rd2611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10724,%dummy}, %rd2683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10725}, %rd2683;
	}
	shf.r.wrap.b32 	%r10726, %r10725, %r10724, 28;
	shf.r.wrap.b32 	%r10727, %r10724, %r10725, 28;
	mov.b64 	%rd2697, {%r10727, %r10726};
	shf.l.wrap.b32 	%r10728, %r10724, %r10725, 30;
	shf.l.wrap.b32 	%r10729, %r10725, %r10724, 30;
	mov.b64 	%rd2698, {%r10729, %r10728};
	xor.b64  	%rd2699, %rd2698, %rd2697;
	shf.l.wrap.b32 	%r10730, %r10724, %r10725, 25;
	shf.l.wrap.b32 	%r10731, %r10725, %r10724, 25;
	mov.b64 	%rd2700, {%r10731, %r10730};
	xor.b64  	%rd2701, %rd2699, %rd2700;
	xor.b64  	%rd2702, %rd2683, %rd2635;
	xor.b64  	%rd2703, %rd2683, %rd2659;
	and.b64  	%rd2704, %rd2703, %rd2702;
	xor.b64  	%rd2705, %rd2704, %rd2683;
	add.s64 	%rd2706, %rd2695, %rd2705;
	add.s64 	%rd2707, %rd2706, %rd2701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10732,%dummy}, %rd2696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10733}, %rd2696;
	}
	shf.r.wrap.b32 	%r10734, %r10733, %r10732, 14;
	shf.r.wrap.b32 	%r10735, %r10732, %r10733, 14;
	mov.b64 	%rd2708, {%r10735, %r10734};
	shf.r.wrap.b32 	%r10736, %r10733, %r10732, 18;
	shf.r.wrap.b32 	%r10737, %r10732, %r10733, 18;
	mov.b64 	%rd2709, {%r10737, %r10736};
	xor.b64  	%rd2710, %rd2709, %rd2708;
	shf.l.wrap.b32 	%r10738, %r10732, %r10733, 23;
	shf.l.wrap.b32 	%r10739, %r10733, %r10732, 23;
	mov.b64 	%rd2711, {%r10739, %r10738};
	xor.b64  	%rd2712, %rd2710, %rd2711;
	xor.b64  	%rd2713, %rd2672, %rd2648;
	and.b64  	%rd2714, %rd2696, %rd2713;
	xor.b64  	%rd2715, %rd2714, %rd2648;
	add.s64 	%rd2716, %rd2624, %rd2430;
	add.s64 	%rd2717, %rd2716, %rd2836;
	add.s64 	%rd2718, %rd2717, %rd2715;
	add.s64 	%rd2719, %rd2718, %rd2712;
	add.s64 	%rd2720, %rd2719, %rd2635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10740,%dummy}, %rd2707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10741}, %rd2707;
	}
	shf.r.wrap.b32 	%r10742, %r10741, %r10740, 28;
	shf.r.wrap.b32 	%r10743, %r10740, %r10741, 28;
	mov.b64 	%rd2721, {%r10743, %r10742};
	shf.l.wrap.b32 	%r10744, %r10740, %r10741, 30;
	shf.l.wrap.b32 	%r10745, %r10741, %r10740, 30;
	mov.b64 	%rd2722, {%r10745, %r10744};
	xor.b64  	%rd2723, %rd2722, %rd2721;
	shf.l.wrap.b32 	%r10746, %r10740, %r10741, 25;
	shf.l.wrap.b32 	%r10747, %r10741, %r10740, 25;
	mov.b64 	%rd2724, {%r10747, %r10746};
	xor.b64  	%rd2725, %rd2723, %rd2724;
	xor.b64  	%rd2726, %rd2707, %rd2659;
	xor.b64  	%rd2727, %rd2707, %rd2683;
	and.b64  	%rd2728, %rd2727, %rd2726;
	xor.b64  	%rd2729, %rd2728, %rd2707;
	add.s64 	%rd2730, %rd2719, %rd2729;
	add.s64 	%rd2731, %rd2730, %rd2725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10748,%dummy}, %rd2720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10749}, %rd2720;
	}
	shf.r.wrap.b32 	%r10750, %r10749, %r10748, 14;
	shf.r.wrap.b32 	%r10751, %r10748, %r10749, 14;
	mov.b64 	%rd2732, {%r10751, %r10750};
	shf.r.wrap.b32 	%r10752, %r10749, %r10748, 18;
	shf.r.wrap.b32 	%r10753, %r10748, %r10749, 18;
	mov.b64 	%rd2733, {%r10753, %r10752};
	xor.b64  	%rd2734, %rd2733, %rd2732;
	shf.l.wrap.b32 	%r10754, %r10748, %r10749, 23;
	shf.l.wrap.b32 	%r10755, %r10749, %r10748, 23;
	mov.b64 	%rd2735, {%r10755, %r10754};
	xor.b64  	%rd2736, %rd2734, %rd2735;
	xor.b64  	%rd2737, %rd2696, %rd2672;
	and.b64  	%rd2738, %rd2720, %rd2737;
	xor.b64  	%rd2739, %rd2738, %rd2672;
	add.s64 	%rd2740, %rd2648, %rd2443;
	add.s64 	%rd2741, %rd2740, %rd2837;
	add.s64 	%rd2742, %rd2741, %rd2739;
	add.s64 	%rd2743, %rd2742, %rd2736;
	add.s64 	%rd90, %rd2743, %rd2659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10756,%dummy}, %rd2731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10757}, %rd2731;
	}
	shf.r.wrap.b32 	%r10758, %r10757, %r10756, 28;
	shf.r.wrap.b32 	%r10759, %r10756, %r10757, 28;
	mov.b64 	%rd2744, {%r10759, %r10758};
	shf.l.wrap.b32 	%r10760, %r10756, %r10757, 30;
	shf.l.wrap.b32 	%r10761, %r10757, %r10756, 30;
	mov.b64 	%rd2745, {%r10761, %r10760};
	xor.b64  	%rd2746, %rd2745, %rd2744;
	shf.l.wrap.b32 	%r10762, %r10756, %r10757, 25;
	shf.l.wrap.b32 	%r10763, %r10757, %r10756, 25;
	mov.b64 	%rd2747, {%r10763, %r10762};
	xor.b64  	%rd2748, %rd2746, %rd2747;
	xor.b64  	%rd2749, %rd2731, %rd2683;
	xor.b64  	%rd2750, %rd2731, %rd2707;
	and.b64  	%rd2751, %rd2750, %rd2749;
	xor.b64  	%rd2752, %rd2751, %rd2731;
	add.s64 	%rd2753, %rd2743, %rd2752;
	add.s64 	%rd91, %rd2753, %rd2748;
	cvt.u32.u64	%r10764, %rd90;
	setp.ne.s32	%p762, %r10764, %r11;
	@%p762 bra 	BB4_1022;

	shr.u64 	%rd2754, %rd91, 32;
	cvt.u32.u64	%r10765, %rd2754;
	shr.u64 	%rd2755, %rd90, 32;
	cvt.u32.u64	%r10766, %rd2755;
	setp.eq.s32	%p763, %r10766, %r12;
	cvt.u32.u64	%r10767, %rd91;
	setp.eq.s32	%p764, %r10767, %r13;
	and.pred  	%p765, %p763, %p764;
	setp.eq.s32	%p766, %r10765, %r14;
	and.pred  	%p767, %p765, %p766;
	@!%p767 bra 	BB4_1022;
	bra.uni 	BB4_1018;

BB4_1018:
	ld.param.u64 	%rd2838, [m01700_s04_param_16];
	mul.wide.u32 	%rd2756, %r1567, 4;
	add.s64 	%rd2757, %rd2838, %rd2756;
	atom.global.add.u32 	%r10768, [%rd2757], 1;
	setp.ne.s32	%p768, %r10768, 0;
	@%p768 bra 	BB4_1022;

	ld.param.u32 	%r10774, [m01700_s04_param_31];
	atom.global.add.u32 	%r1562, [%rd97], 1;
	setp.lt.u32	%p769, %r1562, %r10774;
	@%p769 bra 	BB4_1021;
	bra.uni 	BB4_1020;

BB4_1021:
	ld.param.u32 	%r10775, [m01700_s04_param_27];
	ld.param.u64 	%rd2839, [m01700_s04_param_14];
	mov.u32 	%r10772, 0;
	mul.wide.u32 	%rd2758, %r1562, 20;
	add.s64 	%rd2759, %rd2839, %rd2758;
	st.global.u32 	[%rd2759], %r10775;
	st.global.u32 	[%rd2759+4], %r10772;
	st.global.u32 	[%rd2759+8], %r1567;
	st.global.u32 	[%rd2759+12], %r1;
	st.global.u32 	[%rd2759+16], %r10776;
	bra.uni 	BB4_1022;

BB4_1020:
	atom.global.add.u32 	%r10769, [%rd97], -1;

BB4_1022:
	ld.param.u32 	%r10773, [m01700_s04_param_30];
	add.s32 	%r10776, %r10776, 1;
	setp.lt.u32	%p770, %r10776, %r10773;
	@%p770 bra 	BB4_3;

BB4_1023:
	ret;
}

	// .globl	m01700_s08
.entry m01700_s08(
	.param .u64 .ptr .global .align 4 m01700_s08_param_0,
	.param .u64 .ptr .const .align 4 m01700_s08_param_1,
	.param .u64 .ptr .global .align 4 m01700_s08_param_2,
	.param .u64 .ptr .global .align 4 m01700_s08_param_3,
	.param .u64 .ptr .global .align 1 m01700_s08_param_4,
	.param .u64 .ptr .global .align 1 m01700_s08_param_5,
	.param .u64 .ptr .global .align 4 m01700_s08_param_6,
	.param .u64 .ptr .global .align 4 m01700_s08_param_7,
	.param .u64 .ptr .global .align 4 m01700_s08_param_8,
	.param .u64 .ptr .global .align 4 m01700_s08_param_9,
	.param .u64 .ptr .global .align 4 m01700_s08_param_10,
	.param .u64 .ptr .global .align 4 m01700_s08_param_11,
	.param .u64 .ptr .global .align 4 m01700_s08_param_12,
	.param .u64 .ptr .global .align 4 m01700_s08_param_13,
	.param .u64 .ptr .global .align 4 m01700_s08_param_14,
	.param .u64 .ptr .global .align 4 m01700_s08_param_15,
	.param .u64 .ptr .global .align 4 m01700_s08_param_16,
	.param .u64 .ptr .global .align 4 m01700_s08_param_17,
	.param .u64 .ptr .global .align 1 m01700_s08_param_18,
	.param .u64 .ptr .global .align 4 m01700_s08_param_19,
	.param .u64 .ptr .global .align 4 m01700_s08_param_20,
	.param .u64 .ptr .global .align 4 m01700_s08_param_21,
	.param .u64 .ptr .global .align 4 m01700_s08_param_22,
	.param .u64 .ptr .global .align 4 m01700_s08_param_23,
	.param .u32 m01700_s08_param_24,
	.param .u32 m01700_s08_param_25,
	.param .u32 m01700_s08_param_26,
	.param .u32 m01700_s08_param_27,
	.param .u32 m01700_s08_param_28,
	.param .u32 m01700_s08_param_29,
	.param .u32 m01700_s08_param_30,
	.param .u32 m01700_s08_param_31,
	.param .u32 m01700_s08_param_32,
	.param .u32 m01700_s08_param_33,
	.param .u64 m01700_s08_param_34
)
{



	ret;
}

	// .globl	m01700_s16
.entry m01700_s16(
	.param .u64 .ptr .global .align 4 m01700_s16_param_0,
	.param .u64 .ptr .const .align 4 m01700_s16_param_1,
	.param .u64 .ptr .global .align 4 m01700_s16_param_2,
	.param .u64 .ptr .global .align 4 m01700_s16_param_3,
	.param .u64 .ptr .global .align 1 m01700_s16_param_4,
	.param .u64 .ptr .global .align 1 m01700_s16_param_5,
	.param .u64 .ptr .global .align 4 m01700_s16_param_6,
	.param .u64 .ptr .global .align 4 m01700_s16_param_7,
	.param .u64 .ptr .global .align 4 m01700_s16_param_8,
	.param .u64 .ptr .global .align 4 m01700_s16_param_9,
	.param .u64 .ptr .global .align 4 m01700_s16_param_10,
	.param .u64 .ptr .global .align 4 m01700_s16_param_11,
	.param .u64 .ptr .global .align 4 m01700_s16_param_12,
	.param .u64 .ptr .global .align 4 m01700_s16_param_13,
	.param .u64 .ptr .global .align 4 m01700_s16_param_14,
	.param .u64 .ptr .global .align 4 m01700_s16_param_15,
	.param .u64 .ptr .global .align 4 m01700_s16_param_16,
	.param .u64 .ptr .global .align 4 m01700_s16_param_17,
	.param .u64 .ptr .global .align 1 m01700_s16_param_18,
	.param .u64 .ptr .global .align 4 m01700_s16_param_19,
	.param .u64 .ptr .global .align 4 m01700_s16_param_20,
	.param .u64 .ptr .global .align 4 m01700_s16_param_21,
	.param .u64 .ptr .global .align 4 m01700_s16_param_22,
	.param .u64 .ptr .global .align 4 m01700_s16_param_23,
	.param .u32 m01700_s16_param_24,
	.param .u32 m01700_s16_param_25,
	.param .u32 m01700_s16_param_26,
	.param .u32 m01700_s16_param_27,
	.param .u32 m01700_s16_param_28,
	.param .u32 m01700_s16_param_29,
	.param .u32 m01700_s16_param_30,
	.param .u32 m01700_s16_param_31,
	.param .u32 m01700_s16_param_32,
	.param .u32 m01700_s16_param_33,
	.param .u64 m01700_s16_param_34
)
{



	ret;
}


  