//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 4 .b8 c_append_helper[4096] = {255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255};
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u64 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd2, [gpu_memset_param_0];
	ld.param.u32 	%r1, [gpu_memset_param_1];
	ld.param.u64 	%rd3, [gpu_memset_param_2];
	mov.b32	%r2, %envreg3;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mad.lo.s32 	%r5, %r3, %r4, %r2;
	mov.u32 	%r6, %tid.x;
	add.s32 	%r7, %r5, %r6;
	cvt.s64.s32	%rd1, %r7;
	setp.ge.u64	%p1, %rd1, %rd3;
	@%p1 bra 	BB0_2;

	shl.b64 	%rd4, %rd1, 4;
	add.s64 	%rd5, %rd2, %rd4;
	st.global.v4.u32 	[%rd5], {%r1, %r1, %r1, %r1};

BB0_2:
	ret;
}

	// .globl	m01700_m04
.entry m01700_m04(
	.param .u64 .ptr .global .align 4 m01700_m04_param_0,
	.param .u64 .ptr .global .align 4 m01700_m04_param_1,
	.param .u64 .ptr .global .align 4 m01700_m04_param_2,
	.param .u64 .ptr .global .align 4 m01700_m04_param_3,
	.param .u64 .ptr .global .align 1 m01700_m04_param_4,
	.param .u64 .ptr .global .align 1 m01700_m04_param_5,
	.param .u64 .ptr .global .align 4 m01700_m04_param_6,
	.param .u64 .ptr .global .align 4 m01700_m04_param_7,
	.param .u64 .ptr .global .align 4 m01700_m04_param_8,
	.param .u64 .ptr .global .align 4 m01700_m04_param_9,
	.param .u64 .ptr .global .align 4 m01700_m04_param_10,
	.param .u64 .ptr .global .align 4 m01700_m04_param_11,
	.param .u64 .ptr .global .align 4 m01700_m04_param_12,
	.param .u64 .ptr .global .align 4 m01700_m04_param_13,
	.param .u64 .ptr .global .align 4 m01700_m04_param_14,
	.param .u64 .ptr .global .align 4 m01700_m04_param_15,
	.param .u64 .ptr .global .align 4 m01700_m04_param_16,
	.param .u64 .ptr .global .align 4 m01700_m04_param_17,
	.param .u64 .ptr .global .align 1 m01700_m04_param_18,
	.param .u64 .ptr .global .align 4 m01700_m04_param_19,
	.param .u64 .ptr .global .align 4 m01700_m04_param_20,
	.param .u64 .ptr .global .align 4 m01700_m04_param_21,
	.param .u64 .ptr .global .align 4 m01700_m04_param_22,
	.param .u64 .ptr .global .align 4 m01700_m04_param_23,
	.param .u32 m01700_m04_param_24,
	.param .u32 m01700_m04_param_25,
	.param .u32 m01700_m04_param_26,
	.param .u32 m01700_m04_param_27,
	.param .u32 m01700_m04_param_28,
	.param .u32 m01700_m04_param_29,
	.param .u32 m01700_m04_param_30,
	.param .u32 m01700_m04_param_31,
	.param .u32 m01700_m04_param_32,
	.param .u32 m01700_m04_param_33,
	.param .u64 m01700_m04_param_34
)
{
	.reg .pred 	%p<74>;
	.reg .b32 	%r<3820>;
	.reg .b64 	%rd<2795>;


	ld.param.u64 	%rd85, [m01700_m04_param_0];
	ld.param.u64 	%rd98, [m01700_m04_param_19];
	ld.param.u32 	%r288, [m01700_m04_param_24];
	ld.param.u32 	%r289, [m01700_m04_param_25];
	ld.param.u32 	%r290, [m01700_m04_param_26];
	ld.param.u32 	%r292, [m01700_m04_param_30];
	ld.param.u32 	%r293, [m01700_m04_param_31];
	ld.param.u32 	%r294, [m01700_m04_param_32];
	ld.param.u64 	%rd99, [m01700_m04_param_34];
	mov.b32	%r296, %envreg3;
	mov.u32 	%r297, %ctaid.x;
	mov.u32 	%r298, %ntid.x;
	mad.lo.s32 	%r299, %r297, %r298, %r296;
	mov.u32 	%r300, %tid.x;
	add.s32 	%r1, %r299, %r300;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd99;
	@%p1 bra 	BB1_122;

	mul.lo.s64 	%rd100, %rd1, 260;
	add.s64 	%rd101, %rd85, %rd100;
	ld.global.u32 	%r2, [%rd101];
	ld.global.u32 	%r3, [%rd101+4];
	ld.global.u32 	%r4, [%rd101+8];
	ld.global.u32 	%r5, [%rd101+12];
	ld.global.u32 	%r6, [%rd101+16];
	ld.global.u32 	%r7, [%rd101+20];
	ld.global.u32 	%r8, [%rd101+24];
	ld.global.u32 	%r9, [%rd101+28];
	ld.global.u32 	%r10, [%rd101+256];
	setp.eq.s32	%p2, %r292, 0;
	@%p2 bra 	BB1_122;

	and.b32  	%r302, %r10, 3;
	mov.u32 	%r303, 4;
	sub.s32 	%r304, %r303, %r302;
	shr.u32 	%r11, %r10, 2;
	shl.b32 	%r305, %r304, 2;
	mov.u32 	%r306, 1985229328;
	shr.u32 	%r307, %r306, %r305;
	and.b32  	%r12, %r307, 65535;
	mov.u64 	%rd102, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r308,%dummy}, %rd102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r309}, %rd102;
	}
	shf.r.wrap.b32 	%r310, %r309, %r308, 18;
	shf.r.wrap.b32 	%r311, %r308, %r309, 18;
	mov.b64 	%rd103, {%r311, %r310};
	shf.r.wrap.b32 	%r312, %r309, %r308, 14;
	shf.r.wrap.b32 	%r313, %r308, %r309, 14;
	mov.b64 	%rd104, {%r313, %r312};
	xor.b64  	%rd105, %rd103, %rd104;
	shf.l.wrap.b32 	%r314, %r308, %r309, 23;
	shf.l.wrap.b32 	%r315, %r309, %r308, 23;
	mov.b64 	%rd106, {%r315, %r314};
	xor.b64  	%rd3, %rd105, %rd106;
	mov.u64 	%rd107, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r317,%dummy}, %rd107;
	}
	shf.l.wrap.b32 	%r318, %r317, %r316, 30;
	shf.l.wrap.b32 	%r319, %r316, %r317, 30;
	mov.b64 	%rd108, {%r319, %r318};
	shf.r.wrap.b32 	%r320, %r316, %r317, 28;
	shf.r.wrap.b32 	%r321, %r317, %r316, 28;
	mov.b64 	%rd109, {%r321, %r320};
	xor.b64  	%rd110, %rd108, %rd109;
	shf.l.wrap.b32 	%r322, %r317, %r316, 25;
	shf.l.wrap.b32 	%r323, %r316, %r317, 25;
	mov.b64 	%rd111, {%r323, %r322};
	xor.b64  	%rd4, %rd110, %rd111;
	and.b32  	%r13, %r289, 31;
	and.b32  	%r14, %r290, 31;
	cvt.u64.u32	%rd20, %r294;
	mov.u64 	%rd112, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd112;
	}
	shf.l.wrap.b32 	%r326, %r325, %r324, 3;
	shf.l.wrap.b32 	%r327, %r324, %r325, 3;
	mov.b64 	%rd113, {%r327, %r326};
	shf.r.wrap.b32 	%r328, %r324, %r325, 19;
	shf.r.wrap.b32 	%r329, %r325, %r324, 19;
	mov.b64 	%rd114, {%r329, %r328};
	xor.b64  	%rd21, %rd114, %rd113;
	shf.r.wrap.b32 	%r330, %r324, %r325, 8;
	shf.r.wrap.b32 	%r331, %r325, %r324, 8;
	mov.b64 	%rd115, {%r331, %r330};
	shf.r.wrap.b32 	%r332, %r324, %r325, 1;
	shf.r.wrap.b32 	%r333, %r325, %r324, 1;
	mov.b64 	%rd116, {%r333, %r332};
	xor.b64  	%rd22, %rd116, %rd115;
	mov.u32 	%r3787, 0;

BB1_3:
	ld.param.u32 	%r3772, [m01700_m04_param_33];
	ld.param.u64 	%rd2706, [m01700_m04_param_2];
	mul.wide.u32 	%rd117, %r3787, 260;
	add.s64 	%rd118, %rd2706, %rd117;
	ld.global.u32 	%r16, [%rd118+256];
	ld.global.u32 	%r3798, [%rd118];
	ld.global.u32 	%r3799, [%rd118+4];
	ld.global.u32 	%r3800, [%rd118+8];
	ld.global.u32 	%r3801, [%rd118+12];
	ld.global.u32 	%r3794, [%rd118+16];
	ld.global.u32 	%r3795, [%rd118+20];
	ld.global.u32 	%r3796, [%rd118+24];
	ld.global.u32 	%r3797, [%rd118+28];
	setp.eq.s32	%p3, %r3772, 10001;
	@%p3 bra 	BB1_49;
	bra.uni 	BB1_4;

BB1_49:
	mov.u32 	%r3788, 0;
	setp.gt.s32	%p27, %r11, 7;
	@%p27 bra 	BB1_66;

	setp.gt.s32	%p39, %r11, 3;
	@%p39 bra 	BB1_58;

	setp.gt.s32	%p45, %r11, 1;
	@%p45 bra 	BB1_55;

	setp.eq.s32	%p48, %r11, 0;
	@%p48 bra 	BB1_91;
	bra.uni 	BB1_53;

BB1_91:
	mov.u32 	%r3802, 0;
	// inline asm
	prmt.b32 %r1813, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1817, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3792, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3791, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3790, %r3797, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3797, %r3796, %r3797, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3796, %r3795, %r3796, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3795, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3794, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3801, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3800, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3799, %r3798, %r3799, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3798, %r3802, %r3798, %r12;
	// inline asm
	bra.uni 	BB1_92;

BB1_4:
	mov.u32 	%r3774, 1985229328;
	mov.u32 	%r3773, 4;
	and.b32  	%r347, %r16, 3;
	sub.s32 	%r349, %r3773, %r347;
	shl.b32 	%r350, %r349, 2;
	shr.u32 	%r352, %r3774, %r350;
	and.b32  	%r25, %r352, 65535;
	shr.u32 	%r346, %r16, 2;
	mov.u32 	%r3788, 0;
	setp.gt.s32	%p4, %r346, 7;
	@%p4 bra 	BB1_20;

	setp.gt.s32	%p16, %r346, 3;
	@%p16 bra 	BB1_13;

	setp.gt.s32	%p22, %r346, 1;
	@%p22 bra 	BB1_10;

	setp.eq.s32	%p25, %r346, 0;
	@%p25 bra 	BB1_48;
	bra.uni 	BB1_8;

BB1_48:
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r1042, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r1046, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3806, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3805, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3804, %r9, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3811, %r8, %r9, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3810, %r7, %r8, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3809, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3808, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3815, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3814, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3813, %r2, %r3, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3812, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	bra.uni 	BB1_94;

BB1_66:
	setp.gt.s32	%p28, %r11, 11;
	@%p28 bra 	BB1_74;

	setp.gt.s32	%p34, %r11, 9;
	@%p34 bra 	BB1_71;

	setp.eq.s32	%p37, %r11, 8;
	@%p37 bra 	BB1_87;
	bra.uni 	BB1_69;

BB1_87:
	// inline asm
	prmt.b32 %r1361, %r3796, %r3797, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1365, %r3795, %r3796, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3792, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3791, %r3798, %r3799, %r12;
	// inline asm
	mov.u32 	%r3794, 0;
	// inline asm
	prmt.b32 %r3790, %r3794, %r3798, %r12;
	// inline asm
	mov.u32 	%r3795, %r3794;
	mov.u32 	%r3796, %r3794;
	mov.u32 	%r3797, %r3794;
	mov.u32 	%r3798, %r3794;
	mov.u32 	%r3799, %r3794;
	mov.u32 	%r3800, %r3794;
	mov.u32 	%r3801, %r3794;
	mov.u32 	%r3802, %r3794;
	mov.u32 	%r3803, %r3794;
	mov.u32 	%r3804, %r3794;
	mov.u32 	%r3805, %r3794;
	mov.u32 	%r3806, %r3794;
	mov.u32 	%r3807, %r3794;
	bra.uni 	BB1_93;

BB1_20:
	setp.gt.s32	%p5, %r346, 11;
	@%p5 bra 	BB1_28;

	setp.gt.s32	%p11, %r346, 9;
	@%p11 bra 	BB1_25;

	setp.eq.s32	%p14, %r346, 8;
	@%p14 bra 	BB1_44;
	bra.uni 	BB1_23;

BB1_44:
	// inline asm
	prmt.b32 %r590, %r8, %r9, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r594, %r7, %r8, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3806, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3805, %r2, %r3, %r25;
	// inline asm
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r3804, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	bra.uni 	BB1_39;

BB1_58:
	setp.gt.s32	%p40, %r11, 5;
	@%p40 bra 	BB1_62;

	setp.eq.s32	%p43, %r11, 4;
	@%p43 bra 	BB1_89;
	bra.uni 	BB1_60;

BB1_89:
	mov.u32 	%r3802, 0;
	// inline asm
	prmt.b32 %r1563, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1567, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3797, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3796, %r3797, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3792, %r3795, %r3796, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3791, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3790, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3797, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3796, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3795, %r3798, %r3799, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3794, %r3802, %r3798, %r12;
	// inline asm
	bra.uni 	BB1_65;

BB1_13:
	setp.gt.s32	%p17, %r346, 5;
	@%p17 bra 	BB1_17;

	setp.eq.s32	%p20, %r346, 4;
	@%p20 bra 	BB1_46;
	bra.uni 	BB1_15;

BB1_46:
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r792, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r796, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r9, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r8, %r9, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3806, %r7, %r8, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3805, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3804, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3811, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3810, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3809, %r2, %r3, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3808, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	bra.uni 	BB1_40;

BB1_74:
	setp.gt.s32	%p29, %r11, 13;
	@%p29 bra 	BB1_78;

	setp.eq.s32	%p32, %r11, 12;
	@%p32 bra 	BB1_84;
	bra.uni 	BB1_76;

BB1_84:
	// inline asm
	prmt.b32 %r1207, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1211, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3798, %r3799, %r12;
	// inline asm
	mov.u32 	%r3790, 0;
	// inline asm
	prmt.b32 %r3788, %r3790, %r3798, %r12;
	// inline asm
	mov.u32 	%r3791, %r3790;
	mov.u32 	%r3792, %r3790;
	mov.u32 	%r3793, %r3790;
	bra.uni 	BB1_85;

BB1_28:
	setp.gt.s32	%p6, %r346, 13;
	@%p6 bra 	BB1_32;

	setp.eq.s32	%p9, %r346, 12;
	@%p9 bra 	BB1_42;
	bra.uni 	BB1_30;

BB1_42:
	// inline asm
	prmt.b32 %r436, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r440, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r2, %r3, %r25;
	// inline asm
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r3802, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	bra.uni 	BB1_38;

BB1_55:
	setp.eq.s32	%p46, %r11, 2;
	@%p46 bra 	BB1_90;
	bra.uni 	BB1_56;

BB1_90:
	mov.u32 	%r3802, 0;
	// inline asm
	prmt.b32 %r1682, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1686, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3792, %r3797, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3791, %r3796, %r3797, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3790, %r3795, %r3796, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3797, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3796, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3795, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3794, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3801, %r3798, %r3799, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3800, %r3802, %r3798, %r12;
	// inline asm
	mov.u32 	%r3798, %r3802;
	mov.u32 	%r3799, %r3802;
	bra.uni 	BB1_92;

BB1_10:
	setp.eq.s32	%p23, %r346, 2;
	@%p23 bra 	BB1_47;
	bra.uni 	BB1_11;

BB1_47:
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r911, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r915, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3806, %r9, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3805, %r8, %r9, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3804, %r7, %r8, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3811, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3810, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3809, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3808, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3815, %r2, %r3, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3814, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3812, %r3788;
	mov.u32 	%r3813, %r3788;
	bra.uni 	BB1_94;

BB1_71:
	setp.eq.s32	%p35, %r11, 10;
	@%p35 bra 	BB1_86;
	bra.uni 	BB1_72;

BB1_86:
	// inline asm
	prmt.b32 %r1278, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1282, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3798, %r3799, %r12;
	// inline asm
	mov.u32 	%r3790, 0;
	// inline asm
	prmt.b32 %r3792, %r3790, %r3798, %r12;
	// inline asm
	mov.u32 	%r3791, %r3790;
	bra.uni 	BB1_85;

BB1_25:
	setp.eq.s32	%p12, %r346, 10;
	@%p12 bra 	BB1_43;
	bra.uni 	BB1_26;

BB1_43:
	// inline asm
	prmt.b32 %r507, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r511, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r2, %r3, %r25;
	// inline asm
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r3806, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3804, %r3788;
	mov.u32 	%r3805, %r3788;
	bra.uni 	BB1_39;

BB1_62:
	setp.eq.s32	%p41, %r11, 6;
	@%p41 bra 	BB1_88;
	bra.uni 	BB1_63;

BB1_88:
	mov.u32 	%r3802, 0;
	// inline asm
	prmt.b32 %r1456, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1460, %r3797, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3796, %r3797, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3795, %r3796, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3792, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3791, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3790, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3797, %r3798, %r3799, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3796, %r3802, %r3798, %r12;
	// inline asm
	mov.u32 	%r3794, %r3802;
	mov.u32 	%r3795, %r3802;
	bra.uni 	BB1_65;

BB1_17:
	setp.eq.s32	%p18, %r346, 6;
	@%p18 bra 	BB1_45;
	bra.uni 	BB1_18;

BB1_45:
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r685, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r689, %r9, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r8, %r9, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r7, %r8, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3806, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3805, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3804, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3811, %r2, %r3, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3810, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3808, %r3788;
	mov.u32 	%r3809, %r3788;
	bra.uni 	BB1_40;

BB1_78:
	setp.eq.s32	%p30, %r11, 14;
	@%p30 bra 	BB1_83;
	bra.uni 	BB1_79;

BB1_83:
	// inline asm
	prmt.b32 %r1148, %r3798, %r3799, %r12;
	// inline asm
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r1152, %r3788, %r3798, %r12;
	// inline asm
	bra.uni 	BB1_81;

BB1_32:
	setp.eq.s32	%p7, %r346, 14;
	@%p7 bra 	BB1_41;
	bra.uni 	BB1_33;

BB1_41:
	// inline asm
	prmt.b32 %r377, %r2, %r3, %r25;
	// inline asm
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r381, %r3788, %r2, %r25;
	// inline asm
	bra.uni 	BB1_37;

BB1_53:
	setp.eq.s32	%p49, %r11, 1;
	@%p49 bra 	BB1_54;
	bra.uni 	BB1_34;

BB1_54:
	mov.u32 	%r3802, 0;
	// inline asm
	prmt.b32 %r1746, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1750, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3792, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3791, %r3797, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3790, %r3796, %r3797, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3797, %r3795, %r3796, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3796, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3795, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3794, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3801, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3800, %r3798, %r3799, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3799, %r3802, %r3798, %r12;
	// inline asm
	mov.u32 	%r3798, %r3802;
	bra.uni 	BB1_92;

BB1_8:
	setp.eq.s32	%p26, %r346, 1;
	@%p26 bra 	BB1_9;
	bra.uni 	BB1_34;

BB1_9:
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r975, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r979, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3806, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3805, %r9, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3804, %r8, %r9, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3811, %r7, %r8, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3810, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3809, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3808, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3815, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3814, %r2, %r3, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3813, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3812, %r3788;
	bra.uni 	BB1_94;

BB1_69:
	setp.eq.s32	%p38, %r11, 9;
	@%p38 bra 	BB1_70;
	bra.uni 	BB1_34;

BB1_70:
	// inline asm
	prmt.b32 %r1318, %r3795, %r3796, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1322, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3792, %r3798, %r3799, %r12;
	// inline asm
	mov.u32 	%r3790, 0;
	// inline asm
	prmt.b32 %r3791, %r3790, %r3798, %r12;
	// inline asm
	bra.uni 	BB1_85;

BB1_23:
	setp.eq.s32	%p15, %r346, 9;
	@%p15 bra 	BB1_24;
	bra.uni 	BB1_34;

BB1_24:
	// inline asm
	prmt.b32 %r547, %r7, %r8, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r551, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3806, %r2, %r3, %r25;
	// inline asm
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r3805, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3804, %r3788;
	bra.uni 	BB1_39;

BB1_60:
	setp.eq.s32	%p44, %r11, 5;
	@%p44 bra 	BB1_61;
	bra.uni 	BB1_34;

BB1_61:
	mov.u32 	%r3802, 0;
	// inline asm
	prmt.b32 %r1508, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1512, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3797, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3796, %r3797, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3795, %r3796, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3792, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3791, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3790, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3797, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3796, %r3798, %r3799, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3795, %r3802, %r3798, %r12;
	// inline asm
	mov.u32 	%r3794, %r3802;
	bra.uni 	BB1_65;

BB1_15:
	setp.eq.s32	%p21, %r346, 5;
	@%p21 bra 	BB1_16;
	bra.uni 	BB1_34;

BB1_16:
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r737, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r741, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r9, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r8, %r9, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r7, %r8, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3806, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3805, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3804, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3811, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3810, %r2, %r3, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3809, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3808, %r3788;
	bra.uni 	BB1_40;

BB1_76:
	setp.eq.s32	%p33, %r11, 13;
	@%p33 bra 	BB1_77;
	bra.uni 	BB1_34;

BB1_77:
	// inline asm
	prmt.b32 %r1176, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1180, %r3798, %r3799, %r12;
	// inline asm
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r3789, %r3788, %r3798, %r12;
	// inline asm
	bra.uni 	BB1_82;

BB1_30:
	setp.eq.s32	%p10, %r346, 13;
	@%p10 bra 	BB1_31;
	bra.uni 	BB1_34;

BB1_31:
	// inline asm
	prmt.b32 %r405, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r409, %r2, %r3, %r25;
	// inline asm
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r3803, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3802, %r3788;
	bra.uni 	BB1_38;

BB1_56:
	setp.eq.s32	%p47, %r11, 3;
	@%p47 bra 	BB1_57;
	bra.uni 	BB1_34;

BB1_57:
	mov.u32 	%r3802, 0;
	// inline asm
	prmt.b32 %r1621, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1625, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3802, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3797, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3792, %r3796, %r3797, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3791, %r3795, %r3796, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3790, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3797, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3796, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3795, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3794, %r3798, %r3799, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3801, %r3802, %r3798, %r12;
	// inline asm
	mov.u32 	%r3798, %r3802;
	mov.u32 	%r3799, %r3802;
	mov.u32 	%r3800, %r3802;
	bra.uni 	BB1_92;

BB1_11:
	setp.eq.s32	%p24, %r346, 3;
	@%p24 bra 	BB1_12;
	bra.uni 	BB1_34;

BB1_12:
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r850, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r854, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r3788, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r9, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3806, %r8, %r9, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3805, %r7, %r8, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3804, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3811, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3810, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3809, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3808, %r2, %r3, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3815, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3812, %r3788;
	mov.u32 	%r3813, %r3788;
	mov.u32 	%r3814, %r3788;
	bra.uni 	BB1_94;

BB1_72:
	setp.eq.s32	%p36, %r11, 11;
	@%p36 bra 	BB1_73;
	bra.uni 	BB1_34;

BB1_73:
	// inline asm
	prmt.b32 %r1241, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1245, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3798, %r3799, %r12;
	// inline asm
	mov.u32 	%r3790, 0;
	// inline asm
	prmt.b32 %r3793, %r3790, %r3798, %r12;
	// inline asm
	mov.u32 	%r3791, %r3790;
	mov.u32 	%r3792, %r3790;

BB1_85:
	mov.u32 	%r3794, %r3790;
	mov.u32 	%r3795, %r3790;
	mov.u32 	%r3796, %r3790;
	mov.u32 	%r3797, %r3790;
	mov.u32 	%r3798, %r3790;
	mov.u32 	%r3799, %r3790;
	mov.u32 	%r3800, %r3790;
	mov.u32 	%r3801, %r3790;
	mov.u32 	%r3802, %r3790;
	mov.u32 	%r3803, %r3790;
	mov.u32 	%r3804, %r3790;
	mov.u32 	%r3805, %r3790;
	mov.u32 	%r3806, %r3790;
	mov.u32 	%r3807, %r3790;
	bra.uni 	BB1_93;

BB1_26:
	setp.eq.s32	%p13, %r346, 11;
	@%p13 bra 	BB1_27;
	bra.uni 	BB1_34;

BB1_27:
	// inline asm
	prmt.b32 %r470, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r474, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r2, %r3, %r25;
	// inline asm
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r3807, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3804, %r3788;
	mov.u32 	%r3805, %r3788;
	mov.u32 	%r3806, %r3788;
	bra.uni 	BB1_39;

BB1_63:
	setp.eq.s32	%p42, %r11, 7;
	@%p42 bra 	BB1_64;
	bra.uni 	BB1_34;

BB1_64:
	mov.u32 	%r3802, 0;
	// inline asm
	prmt.b32 %r1407, %r3797, %r3802, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r1411, %r3796, %r3797, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3789, %r3795, %r3796, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3788, %r3794, %r3795, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3793, %r3801, %r3794, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3792, %r3800, %r3801, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3791, %r3799, %r3800, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3790, %r3798, %r3799, %r12;
	// inline asm
	// inline asm
	prmt.b32 %r3797, %r3802, %r3798, %r12;
	// inline asm
	mov.u32 	%r3794, %r3802;
	mov.u32 	%r3795, %r3802;
	mov.u32 	%r3796, %r3802;

BB1_65:
	mov.u32 	%r3798, %r3802;
	mov.u32 	%r3799, %r3802;
	mov.u32 	%r3800, %r3802;
	mov.u32 	%r3801, %r3802;

BB1_92:
	mov.u32 	%r3803, %r3802;
	mov.u32 	%r3804, %r3802;
	mov.u32 	%r3805, %r3802;
	mov.u32 	%r3806, %r3802;
	mov.u32 	%r3807, %r3802;
	bra.uni 	BB1_93;

BB1_18:
	setp.eq.s32	%p19, %r346, 7;
	@%p19 bra 	BB1_19;
	bra.uni 	BB1_34;

BB1_19:
	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r636, %r9, %r3788, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r640, %r8, %r9, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3803, %r7, %r8, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3802, %r6, %r7, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3807, %r5, %r6, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3806, %r4, %r5, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3805, %r3, %r4, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3804, %r2, %r3, %r25;
	// inline asm
	// inline asm
	prmt.b32 %r3811, %r3788, %r2, %r25;
	// inline asm
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3808, %r3788;
	mov.u32 	%r3809, %r3788;
	mov.u32 	%r3810, %r3788;
	bra.uni 	BB1_40;

BB1_79:
	setp.ne.s32	%p31, %r11, 15;
	@%p31 bra 	BB1_34;

	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r1124, %r3788, %r3798, %r12;
	// inline asm

BB1_81:
	mov.u32 	%r3789, %r3788;

BB1_82:
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3794, %r3788;
	mov.u32 	%r3795, %r3788;
	mov.u32 	%r3796, %r3788;
	mov.u32 	%r3797, %r3788;
	mov.u32 	%r3798, %r3788;
	mov.u32 	%r3799, %r3788;
	mov.u32 	%r3800, %r3788;
	mov.u32 	%r3801, %r3788;
	bra.uni 	BB1_35;

BB1_33:
	setp.ne.s32	%p8, %r346, 15;
	@%p8 bra 	BB1_34;

	mov.u32 	%r3788, 0;
	// inline asm
	prmt.b32 %r353, %r3788, %r2, %r25;
	// inline asm

BB1_37:
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;
	mov.u32 	%r3802, %r3788;
	mov.u32 	%r3803, %r3788;

BB1_38:
	mov.u32 	%r3804, %r3788;
	mov.u32 	%r3805, %r3788;
	mov.u32 	%r3806, %r3788;
	mov.u32 	%r3807, %r3788;

BB1_39:
	mov.u32 	%r3808, %r3788;
	mov.u32 	%r3809, %r3788;
	mov.u32 	%r3810, %r3788;
	mov.u32 	%r3811, %r3788;

BB1_40:
	mov.u32 	%r3812, %r3788;
	mov.u32 	%r3813, %r3788;
	mov.u32 	%r3814, %r3788;
	mov.u32 	%r3815, %r3788;
	bra.uni 	BB1_94;

BB1_34:
	mov.u32 	%r3789, %r3788;
	mov.u32 	%r3790, %r3788;
	mov.u32 	%r3791, %r3788;
	mov.u32 	%r3792, %r3788;
	mov.u32 	%r3793, %r3788;

BB1_35:
	mov.u32 	%r3802, %r3788;
	mov.u32 	%r3803, %r3788;
	mov.u32 	%r3804, %r3788;
	mov.u32 	%r3805, %r3788;
	mov.u32 	%r3806, %r3788;
	mov.u32 	%r3807, %r3788;

BB1_93:
	mov.u32 	%r3808, %r6;
	mov.u32 	%r3809, %r7;
	mov.u32 	%r3810, %r8;
	mov.u32 	%r3811, %r9;
	mov.u32 	%r3812, %r2;
	mov.u32 	%r3813, %r3;
	mov.u32 	%r3814, %r4;
	mov.u32 	%r3815, %r5;

BB1_94:
	ld.param.u64 	%rd2791, [m01700_m04_param_6];
	ld.const.u64 	%rd2790, [k_sha512+608];
	ld.const.u64 	%rd2789, [k_sha512+600];
	ld.const.u64 	%rd2788, [k_sha512+592];
	ld.const.u64 	%rd2787, [k_sha512+584];
	ld.const.u64 	%rd2779, [k_sha512+576];
	ld.const.u64 	%rd2778, [k_sha512+568];
	ld.const.u64 	%rd2777, [k_sha512+560];
	ld.const.u64 	%rd2776, [k_sha512+552];
	ld.const.u64 	%rd2775, [k_sha512+544];
	ld.const.u64 	%rd2774, [k_sha512+536];
	ld.const.u64 	%rd2773, [k_sha512+528];
	ld.const.u64 	%rd2772, [k_sha512+520];
	ld.const.u64 	%rd2771, [k_sha512+512];
	ld.const.u64 	%rd2770, [k_sha512+504];
	ld.const.u64 	%rd2769, [k_sha512+496];
	ld.const.u64 	%rd2768, [k_sha512+488];
	ld.const.u64 	%rd2767, [k_sha512+480];
	ld.const.u64 	%rd2766, [k_sha512+472];
	ld.const.u64 	%rd2765, [k_sha512+464];
	ld.const.u64 	%rd2764, [k_sha512+456];
	ld.const.u64 	%rd2763, [k_sha512+448];
	ld.const.u64 	%rd2762, [k_sha512+440];
	ld.const.u64 	%rd2761, [k_sha512+432];
	ld.const.u64 	%rd2760, [k_sha512+424];
	ld.const.u64 	%rd2759, [k_sha512+416];
	ld.const.u64 	%rd2758, [k_sha512+408];
	ld.const.u64 	%rd2757, [k_sha512+400];
	ld.const.u64 	%rd2756, [k_sha512+392];
	ld.const.u64 	%rd2755, [k_sha512+384];
	ld.const.u64 	%rd2754, [k_sha512+376];
	ld.const.u64 	%rd2753, [k_sha512+368];
	ld.const.u64 	%rd2752, [k_sha512+360];
	ld.const.u64 	%rd2751, [k_sha512+352];
	ld.const.u64 	%rd2750, [k_sha512+344];
	ld.const.u64 	%rd2749, [k_sha512+336];
	ld.const.u64 	%rd2748, [k_sha512+328];
	ld.const.u64 	%rd2747, [k_sha512+320];
	ld.const.u64 	%rd2746, [k_sha512+312];
	ld.const.u64 	%rd2745, [k_sha512+304];
	ld.const.u64 	%rd2744, [k_sha512+296];
	ld.const.u64 	%rd2743, [k_sha512+288];
	ld.const.u64 	%rd2742, [k_sha512+280];
	ld.const.u64 	%rd2741, [k_sha512+272];
	ld.const.u64 	%rd2740, [k_sha512+264];
	ld.const.u64 	%rd2739, [k_sha512+256];
	ld.const.u64 	%rd2738, [k_sha512+248];
	ld.const.u64 	%rd2737, [k_sha512+240];
	ld.const.u64 	%rd2736, [k_sha512+232];
	ld.const.u64 	%rd2735, [k_sha512+224];
	ld.const.u64 	%rd2734, [k_sha512+216];
	ld.const.u64 	%rd2733, [k_sha512+208];
	ld.const.u64 	%rd2732, [k_sha512+200];
	ld.const.u64 	%rd2731, [k_sha512+192];
	ld.const.u64 	%rd2730, [k_sha512+184];
	ld.const.u64 	%rd2729, [k_sha512+176];
	ld.const.u64 	%rd2728, [k_sha512+168];
	ld.const.u64 	%rd2727, [k_sha512+160];
	ld.const.u64 	%rd2726, [k_sha512+152];
	ld.const.u64 	%rd2725, [k_sha512+144];
	ld.const.u64 	%rd2724, [k_sha512+136];
	ld.const.u64 	%rd2723, [k_sha512+128];
	ld.const.u64 	%rd2722, [k_sha512+120];
	ld.const.u64 	%rd2721, [k_sha512+112];
	ld.const.u64 	%rd2720, [k_sha512+104];
	ld.const.u64 	%rd2719, [k_sha512+96];
	ld.const.u64 	%rd2718, [k_sha512+88];
	ld.const.u64 	%rd2717, [k_sha512+80];
	ld.const.u64 	%rd2716, [k_sha512+72];
	ld.const.u64 	%rd2715, [k_sha512+64];
	ld.const.u64 	%rd2714, [k_sha512+56];
	ld.const.u64 	%rd2713, [k_sha512+48];
	ld.const.u64 	%rd2712, [k_sha512+40];
	ld.const.u64 	%rd2711, [k_sha512+32];
	ld.const.u64 	%rd2710, [k_sha512+24];
	ld.const.u64 	%rd2709, [k_sha512+16];
	ld.const.u64 	%rd2708, [k_sha512+8];
	ld.const.u64 	%rd2707, [k_sha512];
	or.b32  	%r1884, %r3812, %r3798;
	or.b32  	%r1886, %r3813, %r3799;
	or.b32  	%r1888, %r3814, %r3800;
	or.b32  	%r1890, %r3815, %r3801;
	or.b32  	%r1892, %r3808, %r3794;
	or.b32  	%r1894, %r3809, %r3795;
	or.b32  	%r1896, %r3810, %r3796;
	or.b32  	%r1898, %r3811, %r3797;
	or.b32  	%r1900, %r3804, %r3790;
	or.b32  	%r1902, %r3805, %r3791;
	or.b32  	%r1904, %r3806, %r3792;
	or.b32  	%r1906, %r3807, %r3793;
	or.b32  	%r1908, %r3802, %r3788;
	or.b32  	%r1910, %r3803, %r3789;
	// inline asm
	prmt.b32 %r1883, %r1884, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1885, %r1886, 0, 0x0123;
	// inline asm
	mov.b64	%rd119, {%r1885, %r1883};
	// inline asm
	prmt.b32 %r1887, %r1888, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1889, %r1890, 0, 0x0123;
	// inline asm
	mov.b64	%rd120, {%r1889, %r1887};
	// inline asm
	prmt.b32 %r1891, %r1892, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1893, %r1894, 0, 0x0123;
	// inline asm
	mov.b64	%rd121, {%r1893, %r1891};
	// inline asm
	prmt.b32 %r1895, %r1896, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1897, %r1898, 0, 0x0123;
	// inline asm
	mov.b64	%rd122, {%r1897, %r1895};
	// inline asm
	prmt.b32 %r1899, %r1900, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1901, %r1902, 0, 0x0123;
	// inline asm
	mov.b64	%rd123, {%r1901, %r1899};
	// inline asm
	prmt.b32 %r1903, %r1904, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1905, %r1906, 0, 0x0123;
	// inline asm
	mov.b64	%rd124, {%r1905, %r1903};
	// inline asm
	prmt.b32 %r1907, %r1908, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1909, %r1910, 0, 0x0123;
	// inline asm
	mov.b64	%rd125, {%r1909, %r1907};
	add.s32 	%r1911, %r16, %r10;
	shl.b32 	%r1912, %r1911, 3;
	mov.u32 	%r1913, 0;
	mov.b64	%rd126, {%r1912, %r1913};
	add.s64 	%rd127, %rd119, %rd2707;
	add.s64 	%rd128, %rd127, %rd3;
	add.s64 	%rd129, %rd128, %rd4;
	add.s64 	%rd130, %rd128, 2357225248857953701;
	add.s64 	%rd131, %rd129, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1914,%dummy}, %rd130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1915}, %rd130;
	}
	shf.r.wrap.b32 	%r1916, %r1915, %r1914, 14;
	shf.r.wrap.b32 	%r1917, %r1914, %r1915, 14;
	mov.b64 	%rd132, {%r1917, %r1916};
	shf.r.wrap.b32 	%r1918, %r1915, %r1914, 18;
	shf.r.wrap.b32 	%r1919, %r1914, %r1915, 18;
	mov.b64 	%rd133, {%r1919, %r1918};
	xor.b64  	%rd134, %rd133, %rd132;
	shf.l.wrap.b32 	%r1920, %r1914, %r1915, 23;
	shf.l.wrap.b32 	%r1921, %r1915, %r1914, 23;
	mov.b64 	%rd135, {%r1921, %r1920};
	xor.b64  	%rd136, %rd134, %rd135;
	and.b64  	%rd137, %rd130, -3887949035690463538;
	xor.b64  	%rd138, %rd137, -7276294671716946913;
	add.s64 	%rd139, %rd120, %rd2708;
	add.s64 	%rd140, %rd139, %rd138;
	add.s64 	%rd141, %rd140, %rd136;
	xor.b64  	%rd142, %rd131, -4942790177534073029;
	xor.b64  	%rd143, %rd131, 7640891576956012808;
	and.b64  	%rd144, %rd143, %rd142;
	xor.b64  	%rd145, %rd144, %rd131;
	add.s64 	%rd146, %rd141, %rd145;
	add.s64 	%rd147, %rd141, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1922,%dummy}, %rd131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1923}, %rd131;
	}
	shf.r.wrap.b32 	%r1924, %r1923, %r1922, 28;
	shf.r.wrap.b32 	%r1925, %r1922, %r1923, 28;
	mov.b64 	%rd148, {%r1925, %r1924};
	shf.l.wrap.b32 	%r1926, %r1922, %r1923, 30;
	shf.l.wrap.b32 	%r1927, %r1923, %r1922, 30;
	mov.b64 	%rd149, {%r1927, %r1926};
	xor.b64  	%rd150, %rd149, %rd148;
	shf.l.wrap.b32 	%r1928, %r1922, %r1923, 25;
	shf.l.wrap.b32 	%r1929, %r1923, %r1922, 25;
	mov.b64 	%rd151, {%r1929, %r1928};
	xor.b64  	%rd152, %rd150, %rd151;
	add.s64 	%rd153, %rd146, %rd152;
	add.s64 	%rd154, %rd153, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1931}, %rd147;
	}
	shf.r.wrap.b32 	%r1932, %r1931, %r1930, 14;
	shf.r.wrap.b32 	%r1933, %r1930, %r1931, 14;
	mov.b64 	%rd155, {%r1933, %r1932};
	shf.r.wrap.b32 	%r1934, %r1931, %r1930, 18;
	shf.r.wrap.b32 	%r1935, %r1930, %r1931, 18;
	mov.b64 	%rd156, {%r1935, %r1934};
	xor.b64  	%rd157, %rd156, %rd155;
	shf.l.wrap.b32 	%r1936, %r1930, %r1931, 23;
	shf.l.wrap.b32 	%r1937, %r1931, %r1930, 23;
	mov.b64 	%rd158, {%r1937, %r1936};
	xor.b64  	%rd159, %rd157, %rd158;
	xor.b64  	%rd160, %rd130, 5840696475078001361;
	and.b64  	%rd161, %rd147, %rd160;
	xor.b64  	%rd162, %rd161, 5840696475078001361;
	add.s64 	%rd163, %rd121, %rd2709;
	add.s64 	%rd164, %rd163, %rd162;
	add.s64 	%rd165, %rd164, %rd159;
	xor.b64  	%rd166, %rd154, 7640891576956012808;
	xor.b64  	%rd167, %rd154, %rd131;
	and.b64  	%rd168, %rd167, %rd166;
	xor.b64  	%rd169, %rd168, %rd154;
	add.s64 	%rd170, %rd165, %rd169;
	add.s64 	%rd171, %rd165, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1938,%dummy}, %rd154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1939}, %rd154;
	}
	shf.r.wrap.b32 	%r1940, %r1939, %r1938, 28;
	shf.r.wrap.b32 	%r1941, %r1938, %r1939, 28;
	mov.b64 	%rd172, {%r1941, %r1940};
	shf.l.wrap.b32 	%r1942, %r1938, %r1939, 30;
	shf.l.wrap.b32 	%r1943, %r1939, %r1938, 30;
	mov.b64 	%rd173, {%r1943, %r1942};
	xor.b64  	%rd174, %rd173, %rd172;
	shf.l.wrap.b32 	%r1944, %r1938, %r1939, 25;
	shf.l.wrap.b32 	%r1945, %r1939, %r1938, 25;
	mov.b64 	%rd175, {%r1945, %r1944};
	xor.b64  	%rd176, %rd174, %rd175;
	add.s64 	%rd177, %rd170, %rd176;
	add.s64 	%rd178, %rd177, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1946,%dummy}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1947}, %rd171;
	}
	shf.r.wrap.b32 	%r1948, %r1947, %r1946, 14;
	shf.r.wrap.b32 	%r1949, %r1946, %r1947, 14;
	mov.b64 	%rd179, {%r1949, %r1948};
	shf.r.wrap.b32 	%r1950, %r1947, %r1946, 18;
	shf.r.wrap.b32 	%r1951, %r1946, %r1947, 18;
	mov.b64 	%rd180, {%r1951, %r1950};
	xor.b64  	%rd181, %rd180, %rd179;
	shf.l.wrap.b32 	%r1952, %r1946, %r1947, 23;
	shf.l.wrap.b32 	%r1953, %r1947, %r1946, 23;
	mov.b64 	%rd182, {%r1953, %r1952};
	xor.b64  	%rd183, %rd181, %rd182;
	xor.b64  	%rd184, %rd147, %rd130;
	and.b64  	%rd185, %rd171, %rd184;
	xor.b64  	%rd186, %rd185, %rd130;
	add.s64 	%rd187, %rd122, %rd2710;
	add.s64 	%rd188, %rd187, %rd186;
	add.s64 	%rd189, %rd188, %rd183;
	xor.b64  	%rd190, %rd178, %rd131;
	xor.b64  	%rd191, %rd178, %rd154;
	and.b64  	%rd192, %rd191, %rd190;
	xor.b64  	%rd193, %rd192, %rd178;
	add.s64 	%rd194, %rd189, %rd193;
	add.s64 	%rd195, %rd189, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1954,%dummy}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1955}, %rd178;
	}
	shf.r.wrap.b32 	%r1956, %r1955, %r1954, 28;
	shf.r.wrap.b32 	%r1957, %r1954, %r1955, 28;
	mov.b64 	%rd196, {%r1957, %r1956};
	shf.l.wrap.b32 	%r1958, %r1954, %r1955, 30;
	shf.l.wrap.b32 	%r1959, %r1955, %r1954, 30;
	mov.b64 	%rd197, {%r1959, %r1958};
	xor.b64  	%rd198, %rd197, %rd196;
	shf.l.wrap.b32 	%r1960, %r1954, %r1955, 25;
	shf.l.wrap.b32 	%r1961, %r1955, %r1954, 25;
	mov.b64 	%rd199, {%r1961, %r1960};
	xor.b64  	%rd200, %rd198, %rd199;
	add.s64 	%rd201, %rd194, %rd200;
	add.s64 	%rd202, %rd201, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1962,%dummy}, %rd195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1963}, %rd195;
	}
	shf.r.wrap.b32 	%r1964, %r1963, %r1962, 14;
	shf.r.wrap.b32 	%r1965, %r1962, %r1963, 14;
	mov.b64 	%rd203, {%r1965, %r1964};
	shf.r.wrap.b32 	%r1966, %r1963, %r1962, 18;
	shf.r.wrap.b32 	%r1967, %r1962, %r1963, 18;
	mov.b64 	%rd204, {%r1967, %r1966};
	xor.b64  	%rd205, %rd204, %rd203;
	shf.l.wrap.b32 	%r1968, %r1962, %r1963, 23;
	shf.l.wrap.b32 	%r1969, %r1963, %r1962, 23;
	mov.b64 	%rd206, {%r1969, %r1968};
	xor.b64  	%rd207, %rd205, %rd206;
	xor.b64  	%rd208, %rd171, %rd147;
	and.b64  	%rd209, %rd195, %rd208;
	xor.b64  	%rd210, %rd209, %rd147;
	add.s64 	%rd211, %rd130, %rd123;
	add.s64 	%rd212, %rd211, %rd2711;
	add.s64 	%rd213, %rd212, %rd210;
	add.s64 	%rd214, %rd213, %rd207;
	add.s64 	%rd215, %rd214, %rd131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1970,%dummy}, %rd202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1971}, %rd202;
	}
	shf.r.wrap.b32 	%r1972, %r1971, %r1970, 28;
	shf.r.wrap.b32 	%r1973, %r1970, %r1971, 28;
	mov.b64 	%rd216, {%r1973, %r1972};
	shf.l.wrap.b32 	%r1974, %r1970, %r1971, 30;
	shf.l.wrap.b32 	%r1975, %r1971, %r1970, 30;
	mov.b64 	%rd217, {%r1975, %r1974};
	xor.b64  	%rd218, %rd217, %rd216;
	shf.l.wrap.b32 	%r1976, %r1970, %r1971, 25;
	shf.l.wrap.b32 	%r1977, %r1971, %r1970, 25;
	mov.b64 	%rd219, {%r1977, %r1976};
	xor.b64  	%rd220, %rd218, %rd219;
	xor.b64  	%rd221, %rd202, %rd154;
	xor.b64  	%rd222, %rd202, %rd178;
	and.b64  	%rd223, %rd222, %rd221;
	xor.b64  	%rd224, %rd223, %rd202;
	add.s64 	%rd225, %rd214, %rd224;
	add.s64 	%rd226, %rd225, %rd220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1978,%dummy}, %rd215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1979}, %rd215;
	}
	shf.r.wrap.b32 	%r1980, %r1979, %r1978, 14;
	shf.r.wrap.b32 	%r1981, %r1978, %r1979, 14;
	mov.b64 	%rd227, {%r1981, %r1980};
	shf.r.wrap.b32 	%r1982, %r1979, %r1978, 18;
	shf.r.wrap.b32 	%r1983, %r1978, %r1979, 18;
	mov.b64 	%rd228, {%r1983, %r1982};
	xor.b64  	%rd229, %rd228, %rd227;
	shf.l.wrap.b32 	%r1984, %r1978, %r1979, 23;
	shf.l.wrap.b32 	%r1985, %r1979, %r1978, 23;
	mov.b64 	%rd230, {%r1985, %r1984};
	xor.b64  	%rd231, %rd229, %rd230;
	xor.b64  	%rd232, %rd195, %rd171;
	and.b64  	%rd233, %rd215, %rd232;
	xor.b64  	%rd234, %rd233, %rd171;
	add.s64 	%rd235, %rd147, %rd124;
	add.s64 	%rd236, %rd235, %rd2712;
	add.s64 	%rd237, %rd236, %rd234;
	add.s64 	%rd238, %rd237, %rd231;
	add.s64 	%rd239, %rd238, %rd154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1986,%dummy}, %rd226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1987}, %rd226;
	}
	shf.r.wrap.b32 	%r1988, %r1987, %r1986, 28;
	shf.r.wrap.b32 	%r1989, %r1986, %r1987, 28;
	mov.b64 	%rd240, {%r1989, %r1988};
	shf.l.wrap.b32 	%r1990, %r1986, %r1987, 30;
	shf.l.wrap.b32 	%r1991, %r1987, %r1986, 30;
	mov.b64 	%rd241, {%r1991, %r1990};
	xor.b64  	%rd242, %rd241, %rd240;
	shf.l.wrap.b32 	%r1992, %r1986, %r1987, 25;
	shf.l.wrap.b32 	%r1993, %r1987, %r1986, 25;
	mov.b64 	%rd243, {%r1993, %r1992};
	xor.b64  	%rd244, %rd242, %rd243;
	xor.b64  	%rd245, %rd226, %rd178;
	xor.b64  	%rd246, %rd226, %rd202;
	and.b64  	%rd247, %rd246, %rd245;
	xor.b64  	%rd248, %rd247, %rd226;
	add.s64 	%rd249, %rd238, %rd248;
	add.s64 	%rd250, %rd249, %rd244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1995}, %rd239;
	}
	shf.r.wrap.b32 	%r1996, %r1995, %r1994, 14;
	shf.r.wrap.b32 	%r1997, %r1994, %r1995, 14;
	mov.b64 	%rd251, {%r1997, %r1996};
	shf.r.wrap.b32 	%r1998, %r1995, %r1994, 18;
	shf.r.wrap.b32 	%r1999, %r1994, %r1995, 18;
	mov.b64 	%rd252, {%r1999, %r1998};
	xor.b64  	%rd253, %rd252, %rd251;
	shf.l.wrap.b32 	%r2000, %r1994, %r1995, 23;
	shf.l.wrap.b32 	%r2001, %r1995, %r1994, 23;
	mov.b64 	%rd254, {%r2001, %r2000};
	xor.b64  	%rd255, %rd253, %rd254;
	xor.b64  	%rd256, %rd215, %rd195;
	and.b64  	%rd257, %rd239, %rd256;
	xor.b64  	%rd258, %rd257, %rd195;
	add.s64 	%rd259, %rd171, %rd125;
	add.s64 	%rd260, %rd259, %rd2713;
	add.s64 	%rd261, %rd260, %rd258;
	add.s64 	%rd262, %rd261, %rd255;
	add.s64 	%rd263, %rd262, %rd178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2003}, %rd250;
	}
	shf.r.wrap.b32 	%r2004, %r2003, %r2002, 28;
	shf.r.wrap.b32 	%r2005, %r2002, %r2003, 28;
	mov.b64 	%rd264, {%r2005, %r2004};
	shf.l.wrap.b32 	%r2006, %r2002, %r2003, 30;
	shf.l.wrap.b32 	%r2007, %r2003, %r2002, 30;
	mov.b64 	%rd265, {%r2007, %r2006};
	xor.b64  	%rd266, %rd265, %rd264;
	shf.l.wrap.b32 	%r2008, %r2002, %r2003, 25;
	shf.l.wrap.b32 	%r2009, %r2003, %r2002, 25;
	mov.b64 	%rd267, {%r2009, %r2008};
	xor.b64  	%rd268, %rd266, %rd267;
	xor.b64  	%rd269, %rd250, %rd202;
	xor.b64  	%rd270, %rd250, %rd226;
	and.b64  	%rd271, %rd270, %rd269;
	xor.b64  	%rd272, %rd271, %rd250;
	add.s64 	%rd273, %rd262, %rd272;
	add.s64 	%rd274, %rd273, %rd268;
	add.s64 	%rd275, %rd2714, %rd195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2011}, %rd263;
	}
	shf.r.wrap.b32 	%r2012, %r2011, %r2010, 14;
	shf.r.wrap.b32 	%r2013, %r2010, %r2011, 14;
	mov.b64 	%rd276, {%r2013, %r2012};
	shf.r.wrap.b32 	%r2014, %r2011, %r2010, 18;
	shf.r.wrap.b32 	%r2015, %r2010, %r2011, 18;
	mov.b64 	%rd277, {%r2015, %r2014};
	xor.b64  	%rd278, %rd277, %rd276;
	shf.l.wrap.b32 	%r2016, %r2010, %r2011, 23;
	shf.l.wrap.b32 	%r2017, %r2011, %r2010, 23;
	mov.b64 	%rd279, {%r2017, %r2016};
	xor.b64  	%rd280, %rd278, %rd279;
	xor.b64  	%rd281, %rd239, %rd215;
	and.b64  	%rd282, %rd263, %rd281;
	xor.b64  	%rd283, %rd282, %rd215;
	add.s64 	%rd284, %rd275, %rd283;
	add.s64 	%rd285, %rd284, %rd280;
	add.s64 	%rd286, %rd285, %rd202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2018,%dummy}, %rd274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2019}, %rd274;
	}
	shf.r.wrap.b32 	%r2020, %r2019, %r2018, 28;
	shf.r.wrap.b32 	%r2021, %r2018, %r2019, 28;
	mov.b64 	%rd287, {%r2021, %r2020};
	shf.l.wrap.b32 	%r2022, %r2018, %r2019, 30;
	shf.l.wrap.b32 	%r2023, %r2019, %r2018, 30;
	mov.b64 	%rd288, {%r2023, %r2022};
	xor.b64  	%rd289, %rd288, %rd287;
	shf.l.wrap.b32 	%r2024, %r2018, %r2019, 25;
	shf.l.wrap.b32 	%r2025, %r2019, %r2018, 25;
	mov.b64 	%rd290, {%r2025, %r2024};
	xor.b64  	%rd291, %rd289, %rd290;
	xor.b64  	%rd292, %rd274, %rd226;
	xor.b64  	%rd293, %rd274, %rd250;
	and.b64  	%rd294, %rd293, %rd292;
	xor.b64  	%rd295, %rd294, %rd274;
	add.s64 	%rd296, %rd285, %rd295;
	add.s64 	%rd297, %rd296, %rd291;
	add.s64 	%rd298, %rd2715, %rd215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2026,%dummy}, %rd286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2027}, %rd286;
	}
	shf.r.wrap.b32 	%r2028, %r2027, %r2026, 14;
	shf.r.wrap.b32 	%r2029, %r2026, %r2027, 14;
	mov.b64 	%rd299, {%r2029, %r2028};
	shf.r.wrap.b32 	%r2030, %r2027, %r2026, 18;
	shf.r.wrap.b32 	%r2031, %r2026, %r2027, 18;
	mov.b64 	%rd300, {%r2031, %r2030};
	xor.b64  	%rd301, %rd300, %rd299;
	shf.l.wrap.b32 	%r2032, %r2026, %r2027, 23;
	shf.l.wrap.b32 	%r2033, %r2027, %r2026, 23;
	mov.b64 	%rd302, {%r2033, %r2032};
	xor.b64  	%rd303, %rd301, %rd302;
	xor.b64  	%rd304, %rd263, %rd239;
	and.b64  	%rd305, %rd286, %rd304;
	xor.b64  	%rd306, %rd305, %rd239;
	add.s64 	%rd307, %rd298, %rd306;
	add.s64 	%rd308, %rd307, %rd303;
	add.s64 	%rd309, %rd308, %rd226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2034,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2035}, %rd297;
	}
	shf.r.wrap.b32 	%r2036, %r2035, %r2034, 28;
	shf.r.wrap.b32 	%r2037, %r2034, %r2035, 28;
	mov.b64 	%rd310, {%r2037, %r2036};
	shf.l.wrap.b32 	%r2038, %r2034, %r2035, 30;
	shf.l.wrap.b32 	%r2039, %r2035, %r2034, 30;
	mov.b64 	%rd311, {%r2039, %r2038};
	xor.b64  	%rd312, %rd311, %rd310;
	shf.l.wrap.b32 	%r2040, %r2034, %r2035, 25;
	shf.l.wrap.b32 	%r2041, %r2035, %r2034, 25;
	mov.b64 	%rd313, {%r2041, %r2040};
	xor.b64  	%rd314, %rd312, %rd313;
	xor.b64  	%rd315, %rd297, %rd250;
	xor.b64  	%rd316, %rd297, %rd274;
	and.b64  	%rd317, %rd316, %rd315;
	xor.b64  	%rd318, %rd317, %rd297;
	add.s64 	%rd319, %rd308, %rd318;
	add.s64 	%rd320, %rd319, %rd314;
	add.s64 	%rd321, %rd2716, %rd239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2042,%dummy}, %rd309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2043}, %rd309;
	}
	shf.r.wrap.b32 	%r2044, %r2043, %r2042, 14;
	shf.r.wrap.b32 	%r2045, %r2042, %r2043, 14;
	mov.b64 	%rd322, {%r2045, %r2044};
	shf.r.wrap.b32 	%r2046, %r2043, %r2042, 18;
	shf.r.wrap.b32 	%r2047, %r2042, %r2043, 18;
	mov.b64 	%rd323, {%r2047, %r2046};
	xor.b64  	%rd324, %rd323, %rd322;
	shf.l.wrap.b32 	%r2048, %r2042, %r2043, 23;
	shf.l.wrap.b32 	%r2049, %r2043, %r2042, 23;
	mov.b64 	%rd325, {%r2049, %r2048};
	xor.b64  	%rd326, %rd324, %rd325;
	xor.b64  	%rd327, %rd286, %rd263;
	and.b64  	%rd328, %rd309, %rd327;
	xor.b64  	%rd329, %rd328, %rd263;
	add.s64 	%rd330, %rd321, %rd329;
	add.s64 	%rd331, %rd330, %rd326;
	add.s64 	%rd332, %rd331, %rd250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2050,%dummy}, %rd320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2051}, %rd320;
	}
	shf.r.wrap.b32 	%r2052, %r2051, %r2050, 28;
	shf.r.wrap.b32 	%r2053, %r2050, %r2051, 28;
	mov.b64 	%rd333, {%r2053, %r2052};
	shf.l.wrap.b32 	%r2054, %r2050, %r2051, 30;
	shf.l.wrap.b32 	%r2055, %r2051, %r2050, 30;
	mov.b64 	%rd334, {%r2055, %r2054};
	xor.b64  	%rd335, %rd334, %rd333;
	shf.l.wrap.b32 	%r2056, %r2050, %r2051, 25;
	shf.l.wrap.b32 	%r2057, %r2051, %r2050, 25;
	mov.b64 	%rd336, {%r2057, %r2056};
	xor.b64  	%rd337, %rd335, %rd336;
	xor.b64  	%rd338, %rd320, %rd274;
	xor.b64  	%rd339, %rd320, %rd297;
	and.b64  	%rd340, %rd339, %rd338;
	xor.b64  	%rd341, %rd340, %rd320;
	add.s64 	%rd342, %rd331, %rd341;
	add.s64 	%rd343, %rd342, %rd337;
	add.s64 	%rd344, %rd2717, %rd263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2058,%dummy}, %rd332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2059}, %rd332;
	}
	shf.r.wrap.b32 	%r2060, %r2059, %r2058, 14;
	shf.r.wrap.b32 	%r2061, %r2058, %r2059, 14;
	mov.b64 	%rd345, {%r2061, %r2060};
	shf.r.wrap.b32 	%r2062, %r2059, %r2058, 18;
	shf.r.wrap.b32 	%r2063, %r2058, %r2059, 18;
	mov.b64 	%rd346, {%r2063, %r2062};
	xor.b64  	%rd347, %rd346, %rd345;
	shf.l.wrap.b32 	%r2064, %r2058, %r2059, 23;
	shf.l.wrap.b32 	%r2065, %r2059, %r2058, 23;
	mov.b64 	%rd348, {%r2065, %r2064};
	xor.b64  	%rd349, %rd347, %rd348;
	xor.b64  	%rd350, %rd309, %rd286;
	and.b64  	%rd351, %rd332, %rd350;
	xor.b64  	%rd352, %rd351, %rd286;
	add.s64 	%rd353, %rd344, %rd352;
	add.s64 	%rd354, %rd353, %rd349;
	add.s64 	%rd355, %rd354, %rd274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2066,%dummy}, %rd343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2067}, %rd343;
	}
	shf.r.wrap.b32 	%r2068, %r2067, %r2066, 28;
	shf.r.wrap.b32 	%r2069, %r2066, %r2067, 28;
	mov.b64 	%rd356, {%r2069, %r2068};
	shf.l.wrap.b32 	%r2070, %r2066, %r2067, 30;
	shf.l.wrap.b32 	%r2071, %r2067, %r2066, 30;
	mov.b64 	%rd357, {%r2071, %r2070};
	xor.b64  	%rd358, %rd357, %rd356;
	shf.l.wrap.b32 	%r2072, %r2066, %r2067, 25;
	shf.l.wrap.b32 	%r2073, %r2067, %r2066, 25;
	mov.b64 	%rd359, {%r2073, %r2072};
	xor.b64  	%rd360, %rd358, %rd359;
	xor.b64  	%rd361, %rd343, %rd297;
	xor.b64  	%rd362, %rd343, %rd320;
	and.b64  	%rd363, %rd362, %rd361;
	xor.b64  	%rd364, %rd363, %rd343;
	add.s64 	%rd365, %rd354, %rd364;
	add.s64 	%rd366, %rd365, %rd360;
	add.s64 	%rd367, %rd2718, %rd286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2074,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2075}, %rd355;
	}
	shf.r.wrap.b32 	%r2076, %r2075, %r2074, 14;
	shf.r.wrap.b32 	%r2077, %r2074, %r2075, 14;
	mov.b64 	%rd368, {%r2077, %r2076};
	shf.r.wrap.b32 	%r2078, %r2075, %r2074, 18;
	shf.r.wrap.b32 	%r2079, %r2074, %r2075, 18;
	mov.b64 	%rd369, {%r2079, %r2078};
	xor.b64  	%rd370, %rd369, %rd368;
	shf.l.wrap.b32 	%r2080, %r2074, %r2075, 23;
	shf.l.wrap.b32 	%r2081, %r2075, %r2074, 23;
	mov.b64 	%rd371, {%r2081, %r2080};
	xor.b64  	%rd372, %rd370, %rd371;
	xor.b64  	%rd373, %rd332, %rd309;
	and.b64  	%rd374, %rd355, %rd373;
	xor.b64  	%rd375, %rd374, %rd309;
	add.s64 	%rd376, %rd367, %rd375;
	add.s64 	%rd377, %rd376, %rd372;
	add.s64 	%rd378, %rd377, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2082,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2083}, %rd366;
	}
	shf.r.wrap.b32 	%r2084, %r2083, %r2082, 28;
	shf.r.wrap.b32 	%r2085, %r2082, %r2083, 28;
	mov.b64 	%rd379, {%r2085, %r2084};
	shf.l.wrap.b32 	%r2086, %r2082, %r2083, 30;
	shf.l.wrap.b32 	%r2087, %r2083, %r2082, 30;
	mov.b64 	%rd380, {%r2087, %r2086};
	xor.b64  	%rd381, %rd380, %rd379;
	shf.l.wrap.b32 	%r2088, %r2082, %r2083, 25;
	shf.l.wrap.b32 	%r2089, %r2083, %r2082, 25;
	mov.b64 	%rd382, {%r2089, %r2088};
	xor.b64  	%rd383, %rd381, %rd382;
	xor.b64  	%rd384, %rd366, %rd320;
	xor.b64  	%rd385, %rd366, %rd343;
	and.b64  	%rd386, %rd385, %rd384;
	xor.b64  	%rd387, %rd386, %rd366;
	add.s64 	%rd388, %rd377, %rd387;
	add.s64 	%rd389, %rd388, %rd383;
	add.s64 	%rd390, %rd2719, %rd309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2091}, %rd378;
	}
	shf.r.wrap.b32 	%r2092, %r2091, %r2090, 14;
	shf.r.wrap.b32 	%r2093, %r2090, %r2091, 14;
	mov.b64 	%rd391, {%r2093, %r2092};
	shf.r.wrap.b32 	%r2094, %r2091, %r2090, 18;
	shf.r.wrap.b32 	%r2095, %r2090, %r2091, 18;
	mov.b64 	%rd392, {%r2095, %r2094};
	xor.b64  	%rd393, %rd392, %rd391;
	shf.l.wrap.b32 	%r2096, %r2090, %r2091, 23;
	shf.l.wrap.b32 	%r2097, %r2091, %r2090, 23;
	mov.b64 	%rd394, {%r2097, %r2096};
	xor.b64  	%rd395, %rd393, %rd394;
	xor.b64  	%rd396, %rd355, %rd332;
	and.b64  	%rd397, %rd378, %rd396;
	xor.b64  	%rd398, %rd397, %rd332;
	add.s64 	%rd399, %rd390, %rd398;
	add.s64 	%rd400, %rd399, %rd395;
	add.s64 	%rd401, %rd400, %rd320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2098,%dummy}, %rd389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd389;
	}
	shf.r.wrap.b32 	%r2100, %r2099, %r2098, 28;
	shf.r.wrap.b32 	%r2101, %r2098, %r2099, 28;
	mov.b64 	%rd402, {%r2101, %r2100};
	shf.l.wrap.b32 	%r2102, %r2098, %r2099, 30;
	shf.l.wrap.b32 	%r2103, %r2099, %r2098, 30;
	mov.b64 	%rd403, {%r2103, %r2102};
	xor.b64  	%rd404, %rd403, %rd402;
	shf.l.wrap.b32 	%r2104, %r2098, %r2099, 25;
	shf.l.wrap.b32 	%r2105, %r2099, %r2098, 25;
	mov.b64 	%rd405, {%r2105, %r2104};
	xor.b64  	%rd406, %rd404, %rd405;
	xor.b64  	%rd407, %rd389, %rd343;
	xor.b64  	%rd408, %rd389, %rd366;
	and.b64  	%rd409, %rd408, %rd407;
	xor.b64  	%rd410, %rd409, %rd389;
	add.s64 	%rd411, %rd400, %rd410;
	add.s64 	%rd412, %rd411, %rd406;
	add.s64 	%rd413, %rd2720, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2106,%dummy}, %rd401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2107}, %rd401;
	}
	shf.r.wrap.b32 	%r2108, %r2107, %r2106, 14;
	shf.r.wrap.b32 	%r2109, %r2106, %r2107, 14;
	mov.b64 	%rd414, {%r2109, %r2108};
	shf.r.wrap.b32 	%r2110, %r2107, %r2106, 18;
	shf.r.wrap.b32 	%r2111, %r2106, %r2107, 18;
	mov.b64 	%rd415, {%r2111, %r2110};
	xor.b64  	%rd416, %rd415, %rd414;
	shf.l.wrap.b32 	%r2112, %r2106, %r2107, 23;
	shf.l.wrap.b32 	%r2113, %r2107, %r2106, 23;
	mov.b64 	%rd417, {%r2113, %r2112};
	xor.b64  	%rd418, %rd416, %rd417;
	xor.b64  	%rd419, %rd378, %rd355;
	and.b64  	%rd420, %rd401, %rd419;
	xor.b64  	%rd421, %rd420, %rd355;
	add.s64 	%rd422, %rd413, %rd421;
	add.s64 	%rd423, %rd422, %rd418;
	add.s64 	%rd424, %rd423, %rd343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2114,%dummy}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2115}, %rd412;
	}
	shf.r.wrap.b32 	%r2116, %r2115, %r2114, 28;
	shf.r.wrap.b32 	%r2117, %r2114, %r2115, 28;
	mov.b64 	%rd425, {%r2117, %r2116};
	shf.l.wrap.b32 	%r2118, %r2114, %r2115, 30;
	shf.l.wrap.b32 	%r2119, %r2115, %r2114, 30;
	mov.b64 	%rd426, {%r2119, %r2118};
	xor.b64  	%rd427, %rd426, %rd425;
	shf.l.wrap.b32 	%r2120, %r2114, %r2115, 25;
	shf.l.wrap.b32 	%r2121, %r2115, %r2114, 25;
	mov.b64 	%rd428, {%r2121, %r2120};
	xor.b64  	%rd429, %rd427, %rd428;
	xor.b64  	%rd430, %rd412, %rd366;
	xor.b64  	%rd431, %rd412, %rd389;
	and.b64  	%rd432, %rd431, %rd430;
	xor.b64  	%rd433, %rd432, %rd412;
	add.s64 	%rd434, %rd423, %rd433;
	add.s64 	%rd435, %rd434, %rd429;
	add.s64 	%rd436, %rd2721, %rd355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2122,%dummy}, %rd424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2123}, %rd424;
	}
	shf.r.wrap.b32 	%r2124, %r2123, %r2122, 14;
	shf.r.wrap.b32 	%r2125, %r2122, %r2123, 14;
	mov.b64 	%rd437, {%r2125, %r2124};
	shf.r.wrap.b32 	%r2126, %r2123, %r2122, 18;
	shf.r.wrap.b32 	%r2127, %r2122, %r2123, 18;
	mov.b64 	%rd438, {%r2127, %r2126};
	xor.b64  	%rd439, %rd438, %rd437;
	shf.l.wrap.b32 	%r2128, %r2122, %r2123, 23;
	shf.l.wrap.b32 	%r2129, %r2123, %r2122, 23;
	mov.b64 	%rd440, {%r2129, %r2128};
	xor.b64  	%rd441, %rd439, %rd440;
	xor.b64  	%rd442, %rd401, %rd378;
	and.b64  	%rd443, %rd424, %rd442;
	xor.b64  	%rd444, %rd443, %rd378;
	add.s64 	%rd445, %rd436, %rd444;
	add.s64 	%rd446, %rd445, %rd441;
	add.s64 	%rd447, %rd446, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2130,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2131}, %rd435;
	}
	shf.r.wrap.b32 	%r2132, %r2131, %r2130, 28;
	shf.r.wrap.b32 	%r2133, %r2130, %r2131, 28;
	mov.b64 	%rd448, {%r2133, %r2132};
	shf.l.wrap.b32 	%r2134, %r2130, %r2131, 30;
	shf.l.wrap.b32 	%r2135, %r2131, %r2130, 30;
	mov.b64 	%rd449, {%r2135, %r2134};
	xor.b64  	%rd450, %rd449, %rd448;
	shf.l.wrap.b32 	%r2136, %r2130, %r2131, 25;
	shf.l.wrap.b32 	%r2137, %r2131, %r2130, 25;
	mov.b64 	%rd451, {%r2137, %r2136};
	xor.b64  	%rd452, %rd450, %rd451;
	xor.b64  	%rd453, %rd435, %rd389;
	xor.b64  	%rd454, %rd435, %rd412;
	and.b64  	%rd455, %rd454, %rd453;
	xor.b64  	%rd456, %rd455, %rd435;
	add.s64 	%rd457, %rd446, %rd456;
	add.s64 	%rd458, %rd457, %rd452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2138,%dummy}, %rd447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2139}, %rd447;
	}
	shf.r.wrap.b32 	%r2140, %r2139, %r2138, 14;
	shf.r.wrap.b32 	%r2141, %r2138, %r2139, 14;
	mov.b64 	%rd459, {%r2141, %r2140};
	shf.r.wrap.b32 	%r2142, %r2139, %r2138, 18;
	shf.r.wrap.b32 	%r2143, %r2138, %r2139, 18;
	mov.b64 	%rd460, {%r2143, %r2142};
	xor.b64  	%rd461, %rd460, %rd459;
	shf.l.wrap.b32 	%r2144, %r2138, %r2139, 23;
	shf.l.wrap.b32 	%r2145, %r2139, %r2138, 23;
	mov.b64 	%rd462, {%r2145, %r2144};
	xor.b64  	%rd463, %rd461, %rd462;
	xor.b64  	%rd464, %rd424, %rd401;
	and.b64  	%rd465, %rd447, %rd464;
	xor.b64  	%rd466, %rd465, %rd401;
	add.s64 	%rd467, %rd378, %rd126;
	add.s64 	%rd468, %rd467, %rd2722;
	add.s64 	%rd469, %rd468, %rd466;
	add.s64 	%rd470, %rd469, %rd463;
	add.s64 	%rd471, %rd470, %rd389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2146,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2147}, %rd458;
	}
	shf.r.wrap.b32 	%r2148, %r2147, %r2146, 28;
	shf.r.wrap.b32 	%r2149, %r2146, %r2147, 28;
	mov.b64 	%rd472, {%r2149, %r2148};
	shf.l.wrap.b32 	%r2150, %r2146, %r2147, 30;
	shf.l.wrap.b32 	%r2151, %r2147, %r2146, 30;
	mov.b64 	%rd473, {%r2151, %r2150};
	xor.b64  	%rd474, %rd473, %rd472;
	shf.l.wrap.b32 	%r2152, %r2146, %r2147, 25;
	shf.l.wrap.b32 	%r2153, %r2147, %r2146, 25;
	mov.b64 	%rd475, {%r2153, %r2152};
	xor.b64  	%rd476, %rd474, %rd475;
	xor.b64  	%rd477, %rd458, %rd412;
	xor.b64  	%rd478, %rd458, %rd435;
	and.b64  	%rd479, %rd478, %rd477;
	xor.b64  	%rd480, %rd479, %rd458;
	add.s64 	%rd481, %rd470, %rd480;
	add.s64 	%rd482, %rd481, %rd476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2154,%dummy}, %rd120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2155}, %rd120;
	}
	shf.r.wrap.b32 	%r2156, %r2155, %r2154, 1;
	shf.r.wrap.b32 	%r2157, %r2154, %r2155, 1;
	mov.b64 	%rd483, {%r2157, %r2156};
	shf.r.wrap.b32 	%r2158, %r2155, %r2154, 8;
	shf.r.wrap.b32 	%r2159, %r2154, %r2155, 8;
	mov.b64 	%rd484, {%r2159, %r2158};
	shr.u64 	%rd485, %rd120, 7;
	xor.b64  	%rd486, %rd483, %rd485;
	xor.b64  	%rd487, %rd486, %rd484;
	add.s64 	%rd488, %rd119, %rd21;
	add.s64 	%rd489, %rd488, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2160,%dummy}, %rd126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2161}, %rd126;
	}
	shf.r.wrap.b32 	%r2162, %r2161, %r2160, 19;
	shf.r.wrap.b32 	%r2163, %r2160, %r2161, 19;
	mov.b64 	%rd490, {%r2163, %r2162};
	shf.l.wrap.b32 	%r2164, %r2160, %r2161, 3;
	shf.l.wrap.b32 	%r2165, %r2161, %r2160, 3;
	mov.b64 	%rd491, {%r2165, %r2164};
	shr.u64 	%rd492, %rd126, 6;
	xor.b64  	%rd493, %rd490, %rd492;
	xor.b64  	%rd494, %rd493, %rd491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2166,%dummy}, %rd121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2167}, %rd121;
	}
	shf.r.wrap.b32 	%r2168, %r2167, %r2166, 1;
	shf.r.wrap.b32 	%r2169, %r2166, %r2167, 1;
	mov.b64 	%rd495, {%r2169, %r2168};
	shf.r.wrap.b32 	%r2170, %r2167, %r2166, 8;
	shf.r.wrap.b32 	%r2171, %r2166, %r2167, 8;
	mov.b64 	%rd496, {%r2171, %r2170};
	shr.u64 	%rd497, %rd121, 7;
	xor.b64  	%rd498, %rd495, %rd497;
	xor.b64  	%rd499, %rd498, %rd496;
	add.s64 	%rd500, %rd120, %rd494;
	add.s64 	%rd501, %rd500, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2172,%dummy}, %rd489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2173}, %rd489;
	}
	shf.r.wrap.b32 	%r2174, %r2173, %r2172, 19;
	shf.r.wrap.b32 	%r2175, %r2172, %r2173, 19;
	mov.b64 	%rd502, {%r2175, %r2174};
	shf.l.wrap.b32 	%r2176, %r2172, %r2173, 3;
	shf.l.wrap.b32 	%r2177, %r2173, %r2172, 3;
	mov.b64 	%rd503, {%r2177, %r2176};
	shr.u64 	%rd504, %rd489, 6;
	xor.b64  	%rd505, %rd502, %rd504;
	xor.b64  	%rd506, %rd505, %rd503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2178,%dummy}, %rd122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2179}, %rd122;
	}
	shf.r.wrap.b32 	%r2180, %r2179, %r2178, 1;
	shf.r.wrap.b32 	%r2181, %r2178, %r2179, 1;
	mov.b64 	%rd507, {%r2181, %r2180};
	shf.r.wrap.b32 	%r2182, %r2179, %r2178, 8;
	shf.r.wrap.b32 	%r2183, %r2178, %r2179, 8;
	mov.b64 	%rd508, {%r2183, %r2182};
	shr.u64 	%rd509, %rd122, 7;
	xor.b64  	%rd510, %rd507, %rd509;
	xor.b64  	%rd511, %rd510, %rd508;
	add.s64 	%rd512, %rd121, %rd506;
	add.s64 	%rd513, %rd512, %rd511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2184,%dummy}, %rd501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2185}, %rd501;
	}
	shf.r.wrap.b32 	%r2186, %r2185, %r2184, 19;
	shf.r.wrap.b32 	%r2187, %r2184, %r2185, 19;
	mov.b64 	%rd514, {%r2187, %r2186};
	shf.l.wrap.b32 	%r2188, %r2184, %r2185, 3;
	shf.l.wrap.b32 	%r2189, %r2185, %r2184, 3;
	mov.b64 	%rd515, {%r2189, %r2188};
	shr.u64 	%rd516, %rd501, 6;
	xor.b64  	%rd517, %rd514, %rd516;
	xor.b64  	%rd518, %rd517, %rd515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2190,%dummy}, %rd123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2191}, %rd123;
	}
	shf.r.wrap.b32 	%r2192, %r2191, %r2190, 1;
	shf.r.wrap.b32 	%r2193, %r2190, %r2191, 1;
	mov.b64 	%rd519, {%r2193, %r2192};
	shf.r.wrap.b32 	%r2194, %r2191, %r2190, 8;
	shf.r.wrap.b32 	%r2195, %r2190, %r2191, 8;
	mov.b64 	%rd520, {%r2195, %r2194};
	shr.u64 	%rd521, %rd123, 7;
	xor.b64  	%rd522, %rd519, %rd521;
	xor.b64  	%rd523, %rd522, %rd520;
	add.s64 	%rd524, %rd122, %rd518;
	add.s64 	%rd525, %rd524, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2196,%dummy}, %rd513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2197}, %rd513;
	}
	shf.r.wrap.b32 	%r2198, %r2197, %r2196, 19;
	shf.r.wrap.b32 	%r2199, %r2196, %r2197, 19;
	mov.b64 	%rd526, {%r2199, %r2198};
	shf.l.wrap.b32 	%r2200, %r2196, %r2197, 3;
	shf.l.wrap.b32 	%r2201, %r2197, %r2196, 3;
	mov.b64 	%rd527, {%r2201, %r2200};
	shr.u64 	%rd528, %rd513, 6;
	xor.b64  	%rd529, %rd526, %rd528;
	xor.b64  	%rd530, %rd529, %rd527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2202,%dummy}, %rd124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2203}, %rd124;
	}
	shf.r.wrap.b32 	%r2204, %r2203, %r2202, 1;
	shf.r.wrap.b32 	%r2205, %r2202, %r2203, 1;
	mov.b64 	%rd531, {%r2205, %r2204};
	shf.r.wrap.b32 	%r2206, %r2203, %r2202, 8;
	shf.r.wrap.b32 	%r2207, %r2202, %r2203, 8;
	mov.b64 	%rd532, {%r2207, %r2206};
	shr.u64 	%rd533, %rd124, 7;
	xor.b64  	%rd534, %rd531, %rd533;
	xor.b64  	%rd535, %rd534, %rd532;
	add.s64 	%rd536, %rd123, %rd530;
	add.s64 	%rd537, %rd536, %rd535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2208,%dummy}, %rd525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2209}, %rd525;
	}
	shf.r.wrap.b32 	%r2210, %r2209, %r2208, 19;
	shf.r.wrap.b32 	%r2211, %r2208, %r2209, 19;
	mov.b64 	%rd538, {%r2211, %r2210};
	shf.l.wrap.b32 	%r2212, %r2208, %r2209, 3;
	shf.l.wrap.b32 	%r2213, %r2209, %r2208, 3;
	mov.b64 	%rd539, {%r2213, %r2212};
	shr.u64 	%rd540, %rd525, 6;
	xor.b64  	%rd541, %rd538, %rd540;
	xor.b64  	%rd542, %rd541, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2214,%dummy}, %rd125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2215}, %rd125;
	}
	shf.r.wrap.b32 	%r2216, %r2215, %r2214, 1;
	shf.r.wrap.b32 	%r2217, %r2214, %r2215, 1;
	mov.b64 	%rd543, {%r2217, %r2216};
	shf.r.wrap.b32 	%r2218, %r2215, %r2214, 8;
	shf.r.wrap.b32 	%r2219, %r2214, %r2215, 8;
	mov.b64 	%rd544, {%r2219, %r2218};
	shr.u64 	%rd545, %rd125, 7;
	xor.b64  	%rd546, %rd543, %rd545;
	xor.b64  	%rd547, %rd546, %rd544;
	add.s64 	%rd548, %rd124, %rd542;
	add.s64 	%rd549, %rd548, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2220,%dummy}, %rd537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2221}, %rd537;
	}
	shf.r.wrap.b32 	%r2222, %r2221, %r2220, 19;
	shf.r.wrap.b32 	%r2223, %r2220, %r2221, 19;
	mov.b64 	%rd550, {%r2223, %r2222};
	shf.l.wrap.b32 	%r2224, %r2220, %r2221, 3;
	shf.l.wrap.b32 	%r2225, %r2221, %r2220, 3;
	mov.b64 	%rd551, {%r2225, %r2224};
	shr.u64 	%rd552, %rd537, 6;
	xor.b64  	%rd553, %rd550, %rd552;
	xor.b64  	%rd554, %rd553, %rd551;
	add.s64 	%rd555, %rd125, %rd126;
	add.s64 	%rd556, %rd555, %rd554;
	add.s64 	%rd557, %rd556, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2226,%dummy}, %rd549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2227}, %rd549;
	}
	shf.r.wrap.b32 	%r2228, %r2227, %r2226, 19;
	shf.r.wrap.b32 	%r2229, %r2226, %r2227, 19;
	mov.b64 	%rd558, {%r2229, %r2228};
	shf.l.wrap.b32 	%r2230, %r2226, %r2227, 3;
	shf.l.wrap.b32 	%r2231, %r2227, %r2226, 3;
	mov.b64 	%rd559, {%r2231, %r2230};
	shr.u64 	%rd560, %rd549, 6;
	xor.b64  	%rd561, %rd558, %rd560;
	xor.b64  	%rd562, %rd561, %rd559;
	add.s64 	%rd563, %rd489, %rd562;
	add.s64 	%rd564, %rd563, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2232,%dummy}, %rd557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2233}, %rd557;
	}
	shf.r.wrap.b32 	%r2234, %r2233, %r2232, 19;
	shf.r.wrap.b32 	%r2235, %r2232, %r2233, 19;
	mov.b64 	%rd565, {%r2235, %r2234};
	shf.l.wrap.b32 	%r2236, %r2232, %r2233, 3;
	shf.l.wrap.b32 	%r2237, %r2233, %r2232, 3;
	mov.b64 	%rd566, {%r2237, %r2236};
	shr.u64 	%rd567, %rd557, 6;
	xor.b64  	%rd568, %rd565, %rd567;
	xor.b64  	%rd569, %rd568, %rd566;
	add.s64 	%rd570, %rd501, %rd569;
	add.s64 	%rd571, %rd570, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2238,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2239}, %rd564;
	}
	shf.r.wrap.b32 	%r2240, %r2239, %r2238, 19;
	shf.r.wrap.b32 	%r2241, %r2238, %r2239, 19;
	mov.b64 	%rd572, {%r2241, %r2240};
	shf.l.wrap.b32 	%r2242, %r2238, %r2239, 3;
	shf.l.wrap.b32 	%r2243, %r2239, %r2238, 3;
	mov.b64 	%rd573, {%r2243, %r2242};
	shr.u64 	%rd574, %rd564, 6;
	xor.b64  	%rd575, %rd572, %rd574;
	xor.b64  	%rd576, %rd575, %rd573;
	add.s64 	%rd577, %rd513, %rd576;
	add.s64 	%rd578, %rd577, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2244,%dummy}, %rd571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2245}, %rd571;
	}
	shf.r.wrap.b32 	%r2246, %r2245, %r2244, 19;
	shf.r.wrap.b32 	%r2247, %r2244, %r2245, 19;
	mov.b64 	%rd579, {%r2247, %r2246};
	shf.l.wrap.b32 	%r2248, %r2244, %r2245, 3;
	shf.l.wrap.b32 	%r2249, %r2245, %r2244, 3;
	mov.b64 	%rd580, {%r2249, %r2248};
	shr.u64 	%rd581, %rd571, 6;
	xor.b64  	%rd582, %rd579, %rd581;
	xor.b64  	%rd583, %rd582, %rd580;
	add.s64 	%rd584, %rd525, %rd583;
	add.s64 	%rd585, %rd584, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2250,%dummy}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2251}, %rd578;
	}
	shf.r.wrap.b32 	%r2252, %r2251, %r2250, 19;
	shf.r.wrap.b32 	%r2253, %r2250, %r2251, 19;
	mov.b64 	%rd586, {%r2253, %r2252};
	shf.l.wrap.b32 	%r2254, %r2250, %r2251, 3;
	shf.l.wrap.b32 	%r2255, %r2251, %r2250, 3;
	mov.b64 	%rd587, {%r2255, %r2254};
	shr.u64 	%rd588, %rd578, 6;
	xor.b64  	%rd589, %rd586, %rd588;
	xor.b64  	%rd590, %rd589, %rd587;
	add.s64 	%rd591, %rd537, %rd590;
	add.s64 	%rd592, %rd591, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2256,%dummy}, %rd585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2257}, %rd585;
	}
	shf.r.wrap.b32 	%r2258, %r2257, %r2256, 19;
	shf.r.wrap.b32 	%r2259, %r2256, %r2257, 19;
	mov.b64 	%rd593, {%r2259, %r2258};
	shf.l.wrap.b32 	%r2260, %r2256, %r2257, 3;
	shf.l.wrap.b32 	%r2261, %r2257, %r2256, 3;
	mov.b64 	%rd594, {%r2261, %r2260};
	shr.u64 	%rd595, %rd585, 6;
	xor.b64  	%rd596, %rd593, %rd595;
	xor.b64  	%rd597, %rd596, %rd594;
	add.s64 	%rd598, %rd549, %rd597;
	add.s64 	%rd599, %rd598, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2262,%dummy}, %rd592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2263}, %rd592;
	}
	shf.r.wrap.b32 	%r2264, %r2263, %r2262, 19;
	shf.r.wrap.b32 	%r2265, %r2262, %r2263, 19;
	mov.b64 	%rd600, {%r2265, %r2264};
	shf.l.wrap.b32 	%r2266, %r2262, %r2263, 3;
	shf.l.wrap.b32 	%r2267, %r2263, %r2262, 3;
	mov.b64 	%rd601, {%r2267, %r2266};
	shr.u64 	%rd602, %rd592, 6;
	xor.b64  	%rd603, %rd600, %rd602;
	xor.b64  	%rd604, %rd603, %rd601;
	add.s64 	%rd605, %rd557, %rd604;
	add.s64 	%rd606, %rd605, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2268,%dummy}, %rd599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2269}, %rd599;
	}
	shf.r.wrap.b32 	%r2270, %r2269, %r2268, 19;
	shf.r.wrap.b32 	%r2271, %r2268, %r2269, 19;
	mov.b64 	%rd607, {%r2271, %r2270};
	shf.l.wrap.b32 	%r2272, %r2268, %r2269, 3;
	shf.l.wrap.b32 	%r2273, %r2269, %r2268, 3;
	mov.b64 	%rd608, {%r2273, %r2272};
	shr.u64 	%rd609, %rd599, 6;
	xor.b64  	%rd610, %rd607, %rd609;
	xor.b64  	%rd611, %rd610, %rd608;
	shf.r.wrap.b32 	%r2274, %r2161, %r2160, 1;
	shf.r.wrap.b32 	%r2275, %r2160, %r2161, 1;
	mov.b64 	%rd612, {%r2275, %r2274};
	shf.r.wrap.b32 	%r2276, %r2161, %r2160, 8;
	shf.r.wrap.b32 	%r2277, %r2160, %r2161, 8;
	mov.b64 	%rd613, {%r2277, %r2276};
	shr.u64 	%rd614, %rd126, 7;
	xor.b64  	%rd615, %rd612, %rd614;
	xor.b64  	%rd616, %rd615, %rd613;
	add.s64 	%rd617, %rd564, %rd611;
	add.s64 	%rd618, %rd617, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2278,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2279}, %rd606;
	}
	shf.r.wrap.b32 	%r2280, %r2279, %r2278, 19;
	shf.r.wrap.b32 	%r2281, %r2278, %r2279, 19;
	mov.b64 	%rd619, {%r2281, %r2280};
	shf.l.wrap.b32 	%r2282, %r2278, %r2279, 3;
	shf.l.wrap.b32 	%r2283, %r2279, %r2278, 3;
	mov.b64 	%rd620, {%r2283, %r2282};
	shr.u64 	%rd621, %rd606, 6;
	xor.b64  	%rd622, %rd619, %rd621;
	xor.b64  	%rd623, %rd622, %rd620;
	shf.r.wrap.b32 	%r2284, %r2173, %r2172, 1;
	shf.r.wrap.b32 	%r2285, %r2172, %r2173, 1;
	mov.b64 	%rd624, {%r2285, %r2284};
	shf.r.wrap.b32 	%r2286, %r2173, %r2172, 8;
	shf.r.wrap.b32 	%r2287, %r2172, %r2173, 8;
	mov.b64 	%rd625, {%r2287, %r2286};
	shr.u64 	%rd626, %rd489, 7;
	xor.b64  	%rd627, %rd624, %rd626;
	xor.b64  	%rd628, %rd627, %rd625;
	add.s64 	%rd629, %rd571, %rd126;
	add.s64 	%rd630, %rd629, %rd623;
	add.s64 	%rd631, %rd630, %rd628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2288,%dummy}, %rd471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2289}, %rd471;
	}
	shf.r.wrap.b32 	%r2290, %r2289, %r2288, 14;
	shf.r.wrap.b32 	%r2291, %r2288, %r2289, 14;
	mov.b64 	%rd632, {%r2291, %r2290};
	shf.r.wrap.b32 	%r2292, %r2289, %r2288, 18;
	shf.r.wrap.b32 	%r2293, %r2288, %r2289, 18;
	mov.b64 	%rd633, {%r2293, %r2292};
	xor.b64  	%rd634, %rd633, %rd632;
	shf.l.wrap.b32 	%r2294, %r2288, %r2289, 23;
	shf.l.wrap.b32 	%r2295, %r2289, %r2288, 23;
	mov.b64 	%rd635, {%r2295, %r2294};
	xor.b64  	%rd636, %rd634, %rd635;
	xor.b64  	%rd637, %rd424, %rd447;
	and.b64  	%rd638, %rd637, %rd471;
	xor.b64  	%rd639, %rd638, %rd424;
	add.s64 	%rd640, %rd639, %rd401;
	add.s64 	%rd641, %rd640, %rd489;
	add.s64 	%rd642, %rd641, %rd2723;
	add.s64 	%rd643, %rd642, %rd636;
	add.s64 	%rd644, %rd643, %rd412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2296,%dummy}, %rd482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2297}, %rd482;
	}
	shf.r.wrap.b32 	%r2298, %r2297, %r2296, 28;
	shf.r.wrap.b32 	%r2299, %r2296, %r2297, 28;
	mov.b64 	%rd645, {%r2299, %r2298};
	shf.l.wrap.b32 	%r2300, %r2296, %r2297, 30;
	shf.l.wrap.b32 	%r2301, %r2297, %r2296, 30;
	mov.b64 	%rd646, {%r2301, %r2300};
	xor.b64  	%rd647, %rd646, %rd645;
	shf.l.wrap.b32 	%r2302, %r2296, %r2297, 25;
	shf.l.wrap.b32 	%r2303, %r2297, %r2296, 25;
	mov.b64 	%rd648, {%r2303, %r2302};
	xor.b64  	%rd649, %rd647, %rd648;
	xor.b64  	%rd650, %rd482, %rd435;
	xor.b64  	%rd651, %rd482, %rd458;
	and.b64  	%rd652, %rd651, %rd650;
	xor.b64  	%rd653, %rd652, %rd482;
	add.s64 	%rd654, %rd643, %rd653;
	add.s64 	%rd655, %rd654, %rd649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2304,%dummy}, %rd644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2305}, %rd644;
	}
	shf.r.wrap.b32 	%r2306, %r2305, %r2304, 14;
	shf.r.wrap.b32 	%r2307, %r2304, %r2305, 14;
	mov.b64 	%rd656, {%r2307, %r2306};
	shf.r.wrap.b32 	%r2308, %r2305, %r2304, 18;
	shf.r.wrap.b32 	%r2309, %r2304, %r2305, 18;
	mov.b64 	%rd657, {%r2309, %r2308};
	xor.b64  	%rd658, %rd657, %rd656;
	shf.l.wrap.b32 	%r2310, %r2304, %r2305, 23;
	shf.l.wrap.b32 	%r2311, %r2305, %r2304, 23;
	mov.b64 	%rd659, {%r2311, %r2310};
	xor.b64  	%rd660, %rd658, %rd659;
	xor.b64  	%rd661, %rd447, %rd471;
	and.b64  	%rd662, %rd644, %rd661;
	xor.b64  	%rd663, %rd662, %rd447;
	add.s64 	%rd664, %rd501, %rd424;
	add.s64 	%rd665, %rd664, %rd2724;
	add.s64 	%rd666, %rd665, %rd663;
	add.s64 	%rd667, %rd666, %rd660;
	add.s64 	%rd668, %rd667, %rd435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2312,%dummy}, %rd655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2313}, %rd655;
	}
	shf.r.wrap.b32 	%r2314, %r2313, %r2312, 28;
	shf.r.wrap.b32 	%r2315, %r2312, %r2313, 28;
	mov.b64 	%rd669, {%r2315, %r2314};
	shf.l.wrap.b32 	%r2316, %r2312, %r2313, 30;
	shf.l.wrap.b32 	%r2317, %r2313, %r2312, 30;
	mov.b64 	%rd670, {%r2317, %r2316};
	xor.b64  	%rd671, %rd670, %rd669;
	shf.l.wrap.b32 	%r2318, %r2312, %r2313, 25;
	shf.l.wrap.b32 	%r2319, %r2313, %r2312, 25;
	mov.b64 	%rd672, {%r2319, %r2318};
	xor.b64  	%rd673, %rd671, %rd672;
	xor.b64  	%rd674, %rd655, %rd458;
	xor.b64  	%rd675, %rd655, %rd482;
	and.b64  	%rd676, %rd675, %rd674;
	xor.b64  	%rd677, %rd676, %rd655;
	add.s64 	%rd678, %rd667, %rd677;
	add.s64 	%rd679, %rd678, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2320,%dummy}, %rd668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2321}, %rd668;
	}
	shf.r.wrap.b32 	%r2322, %r2321, %r2320, 14;
	shf.r.wrap.b32 	%r2323, %r2320, %r2321, 14;
	mov.b64 	%rd680, {%r2323, %r2322};
	shf.r.wrap.b32 	%r2324, %r2321, %r2320, 18;
	shf.r.wrap.b32 	%r2325, %r2320, %r2321, 18;
	mov.b64 	%rd681, {%r2325, %r2324};
	xor.b64  	%rd682, %rd681, %rd680;
	shf.l.wrap.b32 	%r2326, %r2320, %r2321, 23;
	shf.l.wrap.b32 	%r2327, %r2321, %r2320, 23;
	mov.b64 	%rd683, {%r2327, %r2326};
	xor.b64  	%rd684, %rd682, %rd683;
	xor.b64  	%rd685, %rd644, %rd471;
	and.b64  	%rd686, %rd668, %rd685;
	xor.b64  	%rd687, %rd686, %rd471;
	add.s64 	%rd688, %rd513, %rd447;
	add.s64 	%rd689, %rd688, %rd2725;
	add.s64 	%rd690, %rd689, %rd687;
	add.s64 	%rd691, %rd690, %rd684;
	add.s64 	%rd692, %rd691, %rd458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2328,%dummy}, %rd679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2329}, %rd679;
	}
	shf.r.wrap.b32 	%r2330, %r2329, %r2328, 28;
	shf.r.wrap.b32 	%r2331, %r2328, %r2329, 28;
	mov.b64 	%rd693, {%r2331, %r2330};
	shf.l.wrap.b32 	%r2332, %r2328, %r2329, 30;
	shf.l.wrap.b32 	%r2333, %r2329, %r2328, 30;
	mov.b64 	%rd694, {%r2333, %r2332};
	xor.b64  	%rd695, %rd694, %rd693;
	shf.l.wrap.b32 	%r2334, %r2328, %r2329, 25;
	shf.l.wrap.b32 	%r2335, %r2329, %r2328, 25;
	mov.b64 	%rd696, {%r2335, %r2334};
	xor.b64  	%rd697, %rd695, %rd696;
	xor.b64  	%rd698, %rd679, %rd482;
	xor.b64  	%rd699, %rd679, %rd655;
	and.b64  	%rd700, %rd699, %rd698;
	xor.b64  	%rd701, %rd700, %rd679;
	add.s64 	%rd702, %rd691, %rd701;
	add.s64 	%rd703, %rd702, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2336,%dummy}, %rd692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2337}, %rd692;
	}
	shf.r.wrap.b32 	%r2338, %r2337, %r2336, 14;
	shf.r.wrap.b32 	%r2339, %r2336, %r2337, 14;
	mov.b64 	%rd704, {%r2339, %r2338};
	shf.r.wrap.b32 	%r2340, %r2337, %r2336, 18;
	shf.r.wrap.b32 	%r2341, %r2336, %r2337, 18;
	mov.b64 	%rd705, {%r2341, %r2340};
	xor.b64  	%rd706, %rd705, %rd704;
	shf.l.wrap.b32 	%r2342, %r2336, %r2337, 23;
	shf.l.wrap.b32 	%r2343, %r2337, %r2336, 23;
	mov.b64 	%rd707, {%r2343, %r2342};
	xor.b64  	%rd708, %rd706, %rd707;
	xor.b64  	%rd709, %rd668, %rd644;
	and.b64  	%rd710, %rd692, %rd709;
	xor.b64  	%rd711, %rd710, %rd644;
	add.s64 	%rd712, %rd525, %rd471;
	add.s64 	%rd713, %rd712, %rd2726;
	add.s64 	%rd714, %rd713, %rd711;
	add.s64 	%rd715, %rd714, %rd708;
	add.s64 	%rd716, %rd715, %rd482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2344,%dummy}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2345}, %rd703;
	}
	shf.r.wrap.b32 	%r2346, %r2345, %r2344, 28;
	shf.r.wrap.b32 	%r2347, %r2344, %r2345, 28;
	mov.b64 	%rd717, {%r2347, %r2346};
	shf.l.wrap.b32 	%r2348, %r2344, %r2345, 30;
	shf.l.wrap.b32 	%r2349, %r2345, %r2344, 30;
	mov.b64 	%rd718, {%r2349, %r2348};
	xor.b64  	%rd719, %rd718, %rd717;
	shf.l.wrap.b32 	%r2350, %r2344, %r2345, 25;
	shf.l.wrap.b32 	%r2351, %r2345, %r2344, 25;
	mov.b64 	%rd720, {%r2351, %r2350};
	xor.b64  	%rd721, %rd719, %rd720;
	xor.b64  	%rd722, %rd703, %rd655;
	xor.b64  	%rd723, %rd703, %rd679;
	and.b64  	%rd724, %rd723, %rd722;
	xor.b64  	%rd725, %rd724, %rd703;
	add.s64 	%rd726, %rd715, %rd725;
	add.s64 	%rd727, %rd726, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2352,%dummy}, %rd716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2353}, %rd716;
	}
	shf.r.wrap.b32 	%r2354, %r2353, %r2352, 14;
	shf.r.wrap.b32 	%r2355, %r2352, %r2353, 14;
	mov.b64 	%rd728, {%r2355, %r2354};
	shf.r.wrap.b32 	%r2356, %r2353, %r2352, 18;
	shf.r.wrap.b32 	%r2357, %r2352, %r2353, 18;
	mov.b64 	%rd729, {%r2357, %r2356};
	xor.b64  	%rd730, %rd729, %rd728;
	shf.l.wrap.b32 	%r2358, %r2352, %r2353, 23;
	shf.l.wrap.b32 	%r2359, %r2353, %r2352, 23;
	mov.b64 	%rd731, {%r2359, %r2358};
	xor.b64  	%rd732, %rd730, %rd731;
	xor.b64  	%rd733, %rd692, %rd668;
	and.b64  	%rd734, %rd716, %rd733;
	xor.b64  	%rd735, %rd734, %rd668;
	add.s64 	%rd736, %rd644, %rd537;
	add.s64 	%rd737, %rd736, %rd2727;
	add.s64 	%rd738, %rd737, %rd735;
	add.s64 	%rd739, %rd738, %rd732;
	add.s64 	%rd740, %rd739, %rd655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2360,%dummy}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2361}, %rd727;
	}
	shf.r.wrap.b32 	%r2362, %r2361, %r2360, 28;
	shf.r.wrap.b32 	%r2363, %r2360, %r2361, 28;
	mov.b64 	%rd741, {%r2363, %r2362};
	shf.l.wrap.b32 	%r2364, %r2360, %r2361, 30;
	shf.l.wrap.b32 	%r2365, %r2361, %r2360, 30;
	mov.b64 	%rd742, {%r2365, %r2364};
	xor.b64  	%rd743, %rd742, %rd741;
	shf.l.wrap.b32 	%r2366, %r2360, %r2361, 25;
	shf.l.wrap.b32 	%r2367, %r2361, %r2360, 25;
	mov.b64 	%rd744, {%r2367, %r2366};
	xor.b64  	%rd745, %rd743, %rd744;
	xor.b64  	%rd746, %rd727, %rd679;
	xor.b64  	%rd747, %rd727, %rd703;
	and.b64  	%rd748, %rd747, %rd746;
	xor.b64  	%rd749, %rd748, %rd727;
	add.s64 	%rd750, %rd739, %rd749;
	add.s64 	%rd751, %rd750, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2368,%dummy}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2369}, %rd740;
	}
	shf.r.wrap.b32 	%r2370, %r2369, %r2368, 14;
	shf.r.wrap.b32 	%r2371, %r2368, %r2369, 14;
	mov.b64 	%rd752, {%r2371, %r2370};
	shf.r.wrap.b32 	%r2372, %r2369, %r2368, 18;
	shf.r.wrap.b32 	%r2373, %r2368, %r2369, 18;
	mov.b64 	%rd753, {%r2373, %r2372};
	xor.b64  	%rd754, %rd753, %rd752;
	shf.l.wrap.b32 	%r2374, %r2368, %r2369, 23;
	shf.l.wrap.b32 	%r2375, %r2369, %r2368, 23;
	mov.b64 	%rd755, {%r2375, %r2374};
	xor.b64  	%rd756, %rd754, %rd755;
	xor.b64  	%rd757, %rd716, %rd692;
	and.b64  	%rd758, %rd740, %rd757;
	xor.b64  	%rd759, %rd758, %rd692;
	add.s64 	%rd760, %rd668, %rd549;
	add.s64 	%rd761, %rd760, %rd2728;
	add.s64 	%rd762, %rd761, %rd759;
	add.s64 	%rd763, %rd762, %rd756;
	add.s64 	%rd764, %rd763, %rd679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2376,%dummy}, %rd751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2377}, %rd751;
	}
	shf.r.wrap.b32 	%r2378, %r2377, %r2376, 28;
	shf.r.wrap.b32 	%r2379, %r2376, %r2377, 28;
	mov.b64 	%rd765, {%r2379, %r2378};
	shf.l.wrap.b32 	%r2380, %r2376, %r2377, 30;
	shf.l.wrap.b32 	%r2381, %r2377, %r2376, 30;
	mov.b64 	%rd766, {%r2381, %r2380};
	xor.b64  	%rd767, %rd766, %rd765;
	shf.l.wrap.b32 	%r2382, %r2376, %r2377, 25;
	shf.l.wrap.b32 	%r2383, %r2377, %r2376, 25;
	mov.b64 	%rd768, {%r2383, %r2382};
	xor.b64  	%rd769, %rd767, %rd768;
	xor.b64  	%rd770, %rd751, %rd703;
	xor.b64  	%rd771, %rd751, %rd727;
	and.b64  	%rd772, %rd771, %rd770;
	xor.b64  	%rd773, %rd772, %rd751;
	add.s64 	%rd774, %rd763, %rd773;
	add.s64 	%rd775, %rd774, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2384,%dummy}, %rd764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2385}, %rd764;
	}
	shf.r.wrap.b32 	%r2386, %r2385, %r2384, 14;
	shf.r.wrap.b32 	%r2387, %r2384, %r2385, 14;
	mov.b64 	%rd776, {%r2387, %r2386};
	shf.r.wrap.b32 	%r2388, %r2385, %r2384, 18;
	shf.r.wrap.b32 	%r2389, %r2384, %r2385, 18;
	mov.b64 	%rd777, {%r2389, %r2388};
	xor.b64  	%rd778, %rd777, %rd776;
	shf.l.wrap.b32 	%r2390, %r2384, %r2385, 23;
	shf.l.wrap.b32 	%r2391, %r2385, %r2384, 23;
	mov.b64 	%rd779, {%r2391, %r2390};
	xor.b64  	%rd780, %rd778, %rd779;
	xor.b64  	%rd781, %rd740, %rd716;
	and.b64  	%rd782, %rd764, %rd781;
	xor.b64  	%rd783, %rd782, %rd716;
	add.s64 	%rd784, %rd692, %rd557;
	add.s64 	%rd785, %rd784, %rd2729;
	add.s64 	%rd786, %rd785, %rd783;
	add.s64 	%rd787, %rd786, %rd780;
	add.s64 	%rd788, %rd787, %rd703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2392,%dummy}, %rd775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2393}, %rd775;
	}
	shf.r.wrap.b32 	%r2394, %r2393, %r2392, 28;
	shf.r.wrap.b32 	%r2395, %r2392, %r2393, 28;
	mov.b64 	%rd789, {%r2395, %r2394};
	shf.l.wrap.b32 	%r2396, %r2392, %r2393, 30;
	shf.l.wrap.b32 	%r2397, %r2393, %r2392, 30;
	mov.b64 	%rd790, {%r2397, %r2396};
	xor.b64  	%rd791, %rd790, %rd789;
	shf.l.wrap.b32 	%r2398, %r2392, %r2393, 25;
	shf.l.wrap.b32 	%r2399, %r2393, %r2392, 25;
	mov.b64 	%rd792, {%r2399, %r2398};
	xor.b64  	%rd793, %rd791, %rd792;
	xor.b64  	%rd794, %rd775, %rd727;
	xor.b64  	%rd795, %rd775, %rd751;
	and.b64  	%rd796, %rd795, %rd794;
	xor.b64  	%rd797, %rd796, %rd775;
	add.s64 	%rd798, %rd787, %rd797;
	add.s64 	%rd799, %rd798, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2400,%dummy}, %rd788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2401}, %rd788;
	}
	shf.r.wrap.b32 	%r2402, %r2401, %r2400, 14;
	shf.r.wrap.b32 	%r2403, %r2400, %r2401, 14;
	mov.b64 	%rd800, {%r2403, %r2402};
	shf.r.wrap.b32 	%r2404, %r2401, %r2400, 18;
	shf.r.wrap.b32 	%r2405, %r2400, %r2401, 18;
	mov.b64 	%rd801, {%r2405, %r2404};
	xor.b64  	%rd802, %rd801, %rd800;
	shf.l.wrap.b32 	%r2406, %r2400, %r2401, 23;
	shf.l.wrap.b32 	%r2407, %r2401, %r2400, 23;
	mov.b64 	%rd803, {%r2407, %r2406};
	xor.b64  	%rd804, %rd802, %rd803;
	xor.b64  	%rd805, %rd764, %rd740;
	and.b64  	%rd806, %rd788, %rd805;
	xor.b64  	%rd807, %rd806, %rd740;
	add.s64 	%rd808, %rd716, %rd564;
	add.s64 	%rd809, %rd808, %rd2730;
	add.s64 	%rd810, %rd809, %rd807;
	add.s64 	%rd811, %rd810, %rd804;
	add.s64 	%rd812, %rd811, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2408,%dummy}, %rd799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2409}, %rd799;
	}
	shf.r.wrap.b32 	%r2410, %r2409, %r2408, 28;
	shf.r.wrap.b32 	%r2411, %r2408, %r2409, 28;
	mov.b64 	%rd813, {%r2411, %r2410};
	shf.l.wrap.b32 	%r2412, %r2408, %r2409, 30;
	shf.l.wrap.b32 	%r2413, %r2409, %r2408, 30;
	mov.b64 	%rd814, {%r2413, %r2412};
	xor.b64  	%rd815, %rd814, %rd813;
	shf.l.wrap.b32 	%r2414, %r2408, %r2409, 25;
	shf.l.wrap.b32 	%r2415, %r2409, %r2408, 25;
	mov.b64 	%rd816, {%r2415, %r2414};
	xor.b64  	%rd817, %rd815, %rd816;
	xor.b64  	%rd818, %rd799, %rd751;
	xor.b64  	%rd819, %rd799, %rd775;
	and.b64  	%rd820, %rd819, %rd818;
	xor.b64  	%rd821, %rd820, %rd799;
	add.s64 	%rd822, %rd811, %rd821;
	add.s64 	%rd823, %rd822, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2416,%dummy}, %rd812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2417}, %rd812;
	}
	shf.r.wrap.b32 	%r2418, %r2417, %r2416, 14;
	shf.r.wrap.b32 	%r2419, %r2416, %r2417, 14;
	mov.b64 	%rd824, {%r2419, %r2418};
	shf.r.wrap.b32 	%r2420, %r2417, %r2416, 18;
	shf.r.wrap.b32 	%r2421, %r2416, %r2417, 18;
	mov.b64 	%rd825, {%r2421, %r2420};
	xor.b64  	%rd826, %rd825, %rd824;
	shf.l.wrap.b32 	%r2422, %r2416, %r2417, 23;
	shf.l.wrap.b32 	%r2423, %r2417, %r2416, 23;
	mov.b64 	%rd827, {%r2423, %r2422};
	xor.b64  	%rd828, %rd826, %rd827;
	xor.b64  	%rd829, %rd788, %rd764;
	and.b64  	%rd830, %rd812, %rd829;
	xor.b64  	%rd831, %rd830, %rd764;
	add.s64 	%rd832, %rd740, %rd571;
	add.s64 	%rd833, %rd832, %rd2731;
	add.s64 	%rd834, %rd833, %rd831;
	add.s64 	%rd835, %rd834, %rd828;
	add.s64 	%rd836, %rd835, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2424,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2425}, %rd823;
	}
	shf.r.wrap.b32 	%r2426, %r2425, %r2424, 28;
	shf.r.wrap.b32 	%r2427, %r2424, %r2425, 28;
	mov.b64 	%rd837, {%r2427, %r2426};
	shf.l.wrap.b32 	%r2428, %r2424, %r2425, 30;
	shf.l.wrap.b32 	%r2429, %r2425, %r2424, 30;
	mov.b64 	%rd838, {%r2429, %r2428};
	xor.b64  	%rd839, %rd838, %rd837;
	shf.l.wrap.b32 	%r2430, %r2424, %r2425, 25;
	shf.l.wrap.b32 	%r2431, %r2425, %r2424, 25;
	mov.b64 	%rd840, {%r2431, %r2430};
	xor.b64  	%rd841, %rd839, %rd840;
	xor.b64  	%rd842, %rd823, %rd775;
	xor.b64  	%rd843, %rd823, %rd799;
	and.b64  	%rd844, %rd843, %rd842;
	xor.b64  	%rd845, %rd844, %rd823;
	add.s64 	%rd846, %rd835, %rd845;
	add.s64 	%rd847, %rd846, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2432,%dummy}, %rd836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2433}, %rd836;
	}
	shf.r.wrap.b32 	%r2434, %r2433, %r2432, 14;
	shf.r.wrap.b32 	%r2435, %r2432, %r2433, 14;
	mov.b64 	%rd848, {%r2435, %r2434};
	shf.r.wrap.b32 	%r2436, %r2433, %r2432, 18;
	shf.r.wrap.b32 	%r2437, %r2432, %r2433, 18;
	mov.b64 	%rd849, {%r2437, %r2436};
	xor.b64  	%rd850, %rd849, %rd848;
	shf.l.wrap.b32 	%r2438, %r2432, %r2433, 23;
	shf.l.wrap.b32 	%r2439, %r2433, %r2432, 23;
	mov.b64 	%rd851, {%r2439, %r2438};
	xor.b64  	%rd852, %rd850, %rd851;
	xor.b64  	%rd853, %rd812, %rd788;
	and.b64  	%rd854, %rd836, %rd853;
	xor.b64  	%rd855, %rd854, %rd788;
	add.s64 	%rd856, %rd764, %rd578;
	add.s64 	%rd857, %rd856, %rd2732;
	add.s64 	%rd858, %rd857, %rd855;
	add.s64 	%rd859, %rd858, %rd852;
	add.s64 	%rd860, %rd859, %rd775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2440,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2441}, %rd847;
	}
	shf.r.wrap.b32 	%r2442, %r2441, %r2440, 28;
	shf.r.wrap.b32 	%r2443, %r2440, %r2441, 28;
	mov.b64 	%rd861, {%r2443, %r2442};
	shf.l.wrap.b32 	%r2444, %r2440, %r2441, 30;
	shf.l.wrap.b32 	%r2445, %r2441, %r2440, 30;
	mov.b64 	%rd862, {%r2445, %r2444};
	xor.b64  	%rd863, %rd862, %rd861;
	shf.l.wrap.b32 	%r2446, %r2440, %r2441, 25;
	shf.l.wrap.b32 	%r2447, %r2441, %r2440, 25;
	mov.b64 	%rd864, {%r2447, %r2446};
	xor.b64  	%rd865, %rd863, %rd864;
	xor.b64  	%rd866, %rd847, %rd799;
	xor.b64  	%rd867, %rd847, %rd823;
	and.b64  	%rd868, %rd867, %rd866;
	xor.b64  	%rd869, %rd868, %rd847;
	add.s64 	%rd870, %rd859, %rd869;
	add.s64 	%rd871, %rd870, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2448,%dummy}, %rd860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2449}, %rd860;
	}
	shf.r.wrap.b32 	%r2450, %r2449, %r2448, 14;
	shf.r.wrap.b32 	%r2451, %r2448, %r2449, 14;
	mov.b64 	%rd872, {%r2451, %r2450};
	shf.r.wrap.b32 	%r2452, %r2449, %r2448, 18;
	shf.r.wrap.b32 	%r2453, %r2448, %r2449, 18;
	mov.b64 	%rd873, {%r2453, %r2452};
	xor.b64  	%rd874, %rd873, %rd872;
	shf.l.wrap.b32 	%r2454, %r2448, %r2449, 23;
	shf.l.wrap.b32 	%r2455, %r2449, %r2448, 23;
	mov.b64 	%rd875, {%r2455, %r2454};
	xor.b64  	%rd876, %rd874, %rd875;
	xor.b64  	%rd877, %rd836, %rd812;
	and.b64  	%rd878, %rd860, %rd877;
	xor.b64  	%rd879, %rd878, %rd812;
	add.s64 	%rd880, %rd788, %rd585;
	add.s64 	%rd881, %rd880, %rd2733;
	add.s64 	%rd882, %rd881, %rd879;
	add.s64 	%rd883, %rd882, %rd876;
	add.s64 	%rd884, %rd883, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2456,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2457}, %rd871;
	}
	shf.r.wrap.b32 	%r2458, %r2457, %r2456, 28;
	shf.r.wrap.b32 	%r2459, %r2456, %r2457, 28;
	mov.b64 	%rd885, {%r2459, %r2458};
	shf.l.wrap.b32 	%r2460, %r2456, %r2457, 30;
	shf.l.wrap.b32 	%r2461, %r2457, %r2456, 30;
	mov.b64 	%rd886, {%r2461, %r2460};
	xor.b64  	%rd887, %rd886, %rd885;
	shf.l.wrap.b32 	%r2462, %r2456, %r2457, 25;
	shf.l.wrap.b32 	%r2463, %r2457, %r2456, 25;
	mov.b64 	%rd888, {%r2463, %r2462};
	xor.b64  	%rd889, %rd887, %rd888;
	xor.b64  	%rd890, %rd871, %rd823;
	xor.b64  	%rd891, %rd871, %rd847;
	and.b64  	%rd892, %rd891, %rd890;
	xor.b64  	%rd893, %rd892, %rd871;
	add.s64 	%rd894, %rd883, %rd893;
	add.s64 	%rd895, %rd894, %rd889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2464,%dummy}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2465}, %rd884;
	}
	shf.r.wrap.b32 	%r2466, %r2465, %r2464, 14;
	shf.r.wrap.b32 	%r2467, %r2464, %r2465, 14;
	mov.b64 	%rd896, {%r2467, %r2466};
	shf.r.wrap.b32 	%r2468, %r2465, %r2464, 18;
	shf.r.wrap.b32 	%r2469, %r2464, %r2465, 18;
	mov.b64 	%rd897, {%r2469, %r2468};
	xor.b64  	%rd898, %rd897, %rd896;
	shf.l.wrap.b32 	%r2470, %r2464, %r2465, 23;
	shf.l.wrap.b32 	%r2471, %r2465, %r2464, 23;
	mov.b64 	%rd899, {%r2471, %r2470};
	xor.b64  	%rd900, %rd898, %rd899;
	xor.b64  	%rd901, %rd860, %rd836;
	and.b64  	%rd902, %rd884, %rd901;
	xor.b64  	%rd903, %rd902, %rd836;
	add.s64 	%rd904, %rd812, %rd592;
	add.s64 	%rd905, %rd904, %rd2734;
	add.s64 	%rd906, %rd905, %rd903;
	add.s64 	%rd907, %rd906, %rd900;
	add.s64 	%rd908, %rd907, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2472,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2473}, %rd895;
	}
	shf.r.wrap.b32 	%r2474, %r2473, %r2472, 28;
	shf.r.wrap.b32 	%r2475, %r2472, %r2473, 28;
	mov.b64 	%rd909, {%r2475, %r2474};
	shf.l.wrap.b32 	%r2476, %r2472, %r2473, 30;
	shf.l.wrap.b32 	%r2477, %r2473, %r2472, 30;
	mov.b64 	%rd910, {%r2477, %r2476};
	xor.b64  	%rd911, %rd910, %rd909;
	shf.l.wrap.b32 	%r2478, %r2472, %r2473, 25;
	shf.l.wrap.b32 	%r2479, %r2473, %r2472, 25;
	mov.b64 	%rd912, {%r2479, %r2478};
	xor.b64  	%rd913, %rd911, %rd912;
	xor.b64  	%rd914, %rd895, %rd847;
	xor.b64  	%rd915, %rd895, %rd871;
	and.b64  	%rd916, %rd915, %rd914;
	xor.b64  	%rd917, %rd916, %rd895;
	add.s64 	%rd918, %rd907, %rd917;
	add.s64 	%rd919, %rd918, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2480,%dummy}, %rd908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2481}, %rd908;
	}
	shf.r.wrap.b32 	%r2482, %r2481, %r2480, 14;
	shf.r.wrap.b32 	%r2483, %r2480, %r2481, 14;
	mov.b64 	%rd920, {%r2483, %r2482};
	shf.r.wrap.b32 	%r2484, %r2481, %r2480, 18;
	shf.r.wrap.b32 	%r2485, %r2480, %r2481, 18;
	mov.b64 	%rd921, {%r2485, %r2484};
	xor.b64  	%rd922, %rd921, %rd920;
	shf.l.wrap.b32 	%r2486, %r2480, %r2481, 23;
	shf.l.wrap.b32 	%r2487, %r2481, %r2480, 23;
	mov.b64 	%rd923, {%r2487, %r2486};
	xor.b64  	%rd924, %rd922, %rd923;
	xor.b64  	%rd925, %rd884, %rd860;
	and.b64  	%rd926, %rd908, %rd925;
	xor.b64  	%rd927, %rd926, %rd860;
	add.s64 	%rd928, %rd836, %rd599;
	add.s64 	%rd929, %rd928, %rd2735;
	add.s64 	%rd930, %rd929, %rd927;
	add.s64 	%rd931, %rd930, %rd924;
	add.s64 	%rd932, %rd931, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2488,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2489}, %rd919;
	}
	shf.r.wrap.b32 	%r2490, %r2489, %r2488, 28;
	shf.r.wrap.b32 	%r2491, %r2488, %r2489, 28;
	mov.b64 	%rd933, {%r2491, %r2490};
	shf.l.wrap.b32 	%r2492, %r2488, %r2489, 30;
	shf.l.wrap.b32 	%r2493, %r2489, %r2488, 30;
	mov.b64 	%rd934, {%r2493, %r2492};
	xor.b64  	%rd935, %rd934, %rd933;
	shf.l.wrap.b32 	%r2494, %r2488, %r2489, 25;
	shf.l.wrap.b32 	%r2495, %r2489, %r2488, 25;
	mov.b64 	%rd936, {%r2495, %r2494};
	xor.b64  	%rd937, %rd935, %rd936;
	xor.b64  	%rd938, %rd919, %rd871;
	xor.b64  	%rd939, %rd919, %rd895;
	and.b64  	%rd940, %rd939, %rd938;
	xor.b64  	%rd941, %rd940, %rd919;
	add.s64 	%rd942, %rd931, %rd941;
	add.s64 	%rd943, %rd942, %rd937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd932;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 14;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 14;
	mov.b64 	%rd944, {%r2499, %r2498};
	shf.r.wrap.b32 	%r2500, %r2497, %r2496, 18;
	shf.r.wrap.b32 	%r2501, %r2496, %r2497, 18;
	mov.b64 	%rd945, {%r2501, %r2500};
	xor.b64  	%rd946, %rd945, %rd944;
	shf.l.wrap.b32 	%r2502, %r2496, %r2497, 23;
	shf.l.wrap.b32 	%r2503, %r2497, %r2496, 23;
	mov.b64 	%rd947, {%r2503, %r2502};
	xor.b64  	%rd948, %rd946, %rd947;
	xor.b64  	%rd949, %rd908, %rd884;
	and.b64  	%rd950, %rd932, %rd949;
	xor.b64  	%rd951, %rd950, %rd884;
	add.s64 	%rd952, %rd860, %rd606;
	add.s64 	%rd953, %rd952, %rd2736;
	add.s64 	%rd954, %rd953, %rd951;
	add.s64 	%rd955, %rd954, %rd948;
	add.s64 	%rd956, %rd955, %rd871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2504,%dummy}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2505}, %rd943;
	}
	shf.r.wrap.b32 	%r2506, %r2505, %r2504, 28;
	shf.r.wrap.b32 	%r2507, %r2504, %r2505, 28;
	mov.b64 	%rd957, {%r2507, %r2506};
	shf.l.wrap.b32 	%r2508, %r2504, %r2505, 30;
	shf.l.wrap.b32 	%r2509, %r2505, %r2504, 30;
	mov.b64 	%rd958, {%r2509, %r2508};
	xor.b64  	%rd959, %rd958, %rd957;
	shf.l.wrap.b32 	%r2510, %r2504, %r2505, 25;
	shf.l.wrap.b32 	%r2511, %r2505, %r2504, 25;
	mov.b64 	%rd960, {%r2511, %r2510};
	xor.b64  	%rd961, %rd959, %rd960;
	xor.b64  	%rd962, %rd943, %rd895;
	xor.b64  	%rd963, %rd943, %rd919;
	and.b64  	%rd964, %rd963, %rd962;
	xor.b64  	%rd965, %rd964, %rd943;
	add.s64 	%rd966, %rd955, %rd965;
	add.s64 	%rd967, %rd966, %rd961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2512,%dummy}, %rd956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2513}, %rd956;
	}
	shf.r.wrap.b32 	%r2514, %r2513, %r2512, 14;
	shf.r.wrap.b32 	%r2515, %r2512, %r2513, 14;
	mov.b64 	%rd968, {%r2515, %r2514};
	shf.r.wrap.b32 	%r2516, %r2513, %r2512, 18;
	shf.r.wrap.b32 	%r2517, %r2512, %r2513, 18;
	mov.b64 	%rd969, {%r2517, %r2516};
	xor.b64  	%rd970, %rd969, %rd968;
	shf.l.wrap.b32 	%r2518, %r2512, %r2513, 23;
	shf.l.wrap.b32 	%r2519, %r2513, %r2512, 23;
	mov.b64 	%rd971, {%r2519, %r2518};
	xor.b64  	%rd972, %rd970, %rd971;
	xor.b64  	%rd973, %rd932, %rd908;
	and.b64  	%rd974, %rd956, %rd973;
	xor.b64  	%rd975, %rd974, %rd908;
	add.s64 	%rd976, %rd884, %rd618;
	add.s64 	%rd977, %rd976, %rd2737;
	add.s64 	%rd978, %rd977, %rd975;
	add.s64 	%rd979, %rd978, %rd972;
	add.s64 	%rd980, %rd979, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2520,%dummy}, %rd967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2521}, %rd967;
	}
	shf.r.wrap.b32 	%r2522, %r2521, %r2520, 28;
	shf.r.wrap.b32 	%r2523, %r2520, %r2521, 28;
	mov.b64 	%rd981, {%r2523, %r2522};
	shf.l.wrap.b32 	%r2524, %r2520, %r2521, 30;
	shf.l.wrap.b32 	%r2525, %r2521, %r2520, 30;
	mov.b64 	%rd982, {%r2525, %r2524};
	xor.b64  	%rd983, %rd982, %rd981;
	shf.l.wrap.b32 	%r2526, %r2520, %r2521, 25;
	shf.l.wrap.b32 	%r2527, %r2521, %r2520, 25;
	mov.b64 	%rd984, {%r2527, %r2526};
	xor.b64  	%rd985, %rd983, %rd984;
	xor.b64  	%rd986, %rd967, %rd919;
	xor.b64  	%rd987, %rd967, %rd943;
	and.b64  	%rd988, %rd987, %rd986;
	xor.b64  	%rd989, %rd988, %rd967;
	add.s64 	%rd990, %rd979, %rd989;
	add.s64 	%rd991, %rd990, %rd985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2528,%dummy}, %rd980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2529}, %rd980;
	}
	shf.r.wrap.b32 	%r2530, %r2529, %r2528, 14;
	shf.r.wrap.b32 	%r2531, %r2528, %r2529, 14;
	mov.b64 	%rd992, {%r2531, %r2530};
	shf.r.wrap.b32 	%r2532, %r2529, %r2528, 18;
	shf.r.wrap.b32 	%r2533, %r2528, %r2529, 18;
	mov.b64 	%rd993, {%r2533, %r2532};
	xor.b64  	%rd994, %rd993, %rd992;
	shf.l.wrap.b32 	%r2534, %r2528, %r2529, 23;
	shf.l.wrap.b32 	%r2535, %r2529, %r2528, 23;
	mov.b64 	%rd995, {%r2535, %r2534};
	xor.b64  	%rd996, %rd994, %rd995;
	xor.b64  	%rd997, %rd956, %rd932;
	and.b64  	%rd998, %rd980, %rd997;
	xor.b64  	%rd999, %rd998, %rd932;
	add.s64 	%rd1000, %rd908, %rd631;
	add.s64 	%rd1001, %rd1000, %rd2738;
	add.s64 	%rd1002, %rd1001, %rd999;
	add.s64 	%rd1003, %rd1002, %rd996;
	add.s64 	%rd1004, %rd1003, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2536,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2537}, %rd991;
	}
	shf.r.wrap.b32 	%r2538, %r2537, %r2536, 28;
	shf.r.wrap.b32 	%r2539, %r2536, %r2537, 28;
	mov.b64 	%rd1005, {%r2539, %r2538};
	shf.l.wrap.b32 	%r2540, %r2536, %r2537, 30;
	shf.l.wrap.b32 	%r2541, %r2537, %r2536, 30;
	mov.b64 	%rd1006, {%r2541, %r2540};
	xor.b64  	%rd1007, %rd1006, %rd1005;
	shf.l.wrap.b32 	%r2542, %r2536, %r2537, 25;
	shf.l.wrap.b32 	%r2543, %r2537, %r2536, 25;
	mov.b64 	%rd1008, {%r2543, %r2542};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	xor.b64  	%rd1010, %rd991, %rd943;
	xor.b64  	%rd1011, %rd991, %rd967;
	and.b64  	%rd1012, %rd1011, %rd1010;
	xor.b64  	%rd1013, %rd1012, %rd991;
	add.s64 	%rd1014, %rd1003, %rd1013;
	add.s64 	%rd1015, %rd1014, %rd1009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2544,%dummy}, %rd618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2545}, %rd618;
	}
	shf.r.wrap.b32 	%r2546, %r2545, %r2544, 19;
	shf.r.wrap.b32 	%r2547, %r2544, %r2545, 19;
	mov.b64 	%rd1016, {%r2547, %r2546};
	shf.l.wrap.b32 	%r2548, %r2544, %r2545, 3;
	shf.l.wrap.b32 	%r2549, %r2545, %r2544, 3;
	mov.b64 	%rd1017, {%r2549, %r2548};
	shr.u64 	%rd1018, %rd618, 6;
	xor.b64  	%rd1019, %rd1016, %rd1018;
	xor.b64  	%rd1020, %rd1019, %rd1017;
	shf.r.wrap.b32 	%r2550, %r2185, %r2184, 1;
	shf.r.wrap.b32 	%r2551, %r2184, %r2185, 1;
	mov.b64 	%rd1021, {%r2551, %r2550};
	shf.r.wrap.b32 	%r2552, %r2185, %r2184, 8;
	shf.r.wrap.b32 	%r2553, %r2184, %r2185, 8;
	mov.b64 	%rd1022, {%r2553, %r2552};
	shr.u64 	%rd1023, %rd501, 7;
	xor.b64  	%rd1024, %rd1021, %rd1023;
	xor.b64  	%rd1025, %rd1024, %rd1022;
	add.s64 	%rd1026, %rd489, %rd578;
	add.s64 	%rd1027, %rd1026, %rd1020;
	add.s64 	%rd1028, %rd1027, %rd1025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2554,%dummy}, %rd631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2555}, %rd631;
	}
	shf.r.wrap.b32 	%r2556, %r2555, %r2554, 19;
	shf.r.wrap.b32 	%r2557, %r2554, %r2555, 19;
	mov.b64 	%rd1029, {%r2557, %r2556};
	shf.l.wrap.b32 	%r2558, %r2554, %r2555, 3;
	shf.l.wrap.b32 	%r2559, %r2555, %r2554, 3;
	mov.b64 	%rd1030, {%r2559, %r2558};
	shr.u64 	%rd1031, %rd631, 6;
	xor.b64  	%rd1032, %rd1029, %rd1031;
	xor.b64  	%rd1033, %rd1032, %rd1030;
	shf.r.wrap.b32 	%r2560, %r2197, %r2196, 1;
	shf.r.wrap.b32 	%r2561, %r2196, %r2197, 1;
	mov.b64 	%rd1034, {%r2561, %r2560};
	shf.r.wrap.b32 	%r2562, %r2197, %r2196, 8;
	shf.r.wrap.b32 	%r2563, %r2196, %r2197, 8;
	mov.b64 	%rd1035, {%r2563, %r2562};
	shr.u64 	%rd1036, %rd513, 7;
	xor.b64  	%rd1037, %rd1034, %rd1036;
	xor.b64  	%rd1038, %rd1037, %rd1035;
	add.s64 	%rd1039, %rd501, %rd585;
	add.s64 	%rd1040, %rd1039, %rd1033;
	add.s64 	%rd1041, %rd1040, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2564,%dummy}, %rd1028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2565}, %rd1028;
	}
	shf.r.wrap.b32 	%r2566, %r2565, %r2564, 19;
	shf.r.wrap.b32 	%r2567, %r2564, %r2565, 19;
	mov.b64 	%rd1042, {%r2567, %r2566};
	shf.l.wrap.b32 	%r2568, %r2564, %r2565, 3;
	shf.l.wrap.b32 	%r2569, %r2565, %r2564, 3;
	mov.b64 	%rd1043, {%r2569, %r2568};
	shr.u64 	%rd1044, %rd1028, 6;
	xor.b64  	%rd1045, %rd1042, %rd1044;
	xor.b64  	%rd1046, %rd1045, %rd1043;
	shf.r.wrap.b32 	%r2570, %r2209, %r2208, 1;
	shf.r.wrap.b32 	%r2571, %r2208, %r2209, 1;
	mov.b64 	%rd1047, {%r2571, %r2570};
	shf.r.wrap.b32 	%r2572, %r2209, %r2208, 8;
	shf.r.wrap.b32 	%r2573, %r2208, %r2209, 8;
	mov.b64 	%rd1048, {%r2573, %r2572};
	shr.u64 	%rd1049, %rd525, 7;
	xor.b64  	%rd1050, %rd1047, %rd1049;
	xor.b64  	%rd1051, %rd1050, %rd1048;
	add.s64 	%rd1052, %rd513, %rd592;
	add.s64 	%rd1053, %rd1052, %rd1046;
	add.s64 	%rd1054, %rd1053, %rd1051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2574,%dummy}, %rd1041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2575}, %rd1041;
	}
	shf.r.wrap.b32 	%r2576, %r2575, %r2574, 19;
	shf.r.wrap.b32 	%r2577, %r2574, %r2575, 19;
	mov.b64 	%rd1055, {%r2577, %r2576};
	shf.l.wrap.b32 	%r2578, %r2574, %r2575, 3;
	shf.l.wrap.b32 	%r2579, %r2575, %r2574, 3;
	mov.b64 	%rd1056, {%r2579, %r2578};
	shr.u64 	%rd1057, %rd1041, 6;
	xor.b64  	%rd1058, %rd1055, %rd1057;
	xor.b64  	%rd1059, %rd1058, %rd1056;
	shf.r.wrap.b32 	%r2580, %r2221, %r2220, 1;
	shf.r.wrap.b32 	%r2581, %r2220, %r2221, 1;
	mov.b64 	%rd1060, {%r2581, %r2580};
	shf.r.wrap.b32 	%r2582, %r2221, %r2220, 8;
	shf.r.wrap.b32 	%r2583, %r2220, %r2221, 8;
	mov.b64 	%rd1061, {%r2583, %r2582};
	shr.u64 	%rd1062, %rd537, 7;
	xor.b64  	%rd1063, %rd1060, %rd1062;
	xor.b64  	%rd1064, %rd1063, %rd1061;
	add.s64 	%rd1065, %rd525, %rd599;
	add.s64 	%rd1066, %rd1065, %rd1059;
	add.s64 	%rd1067, %rd1066, %rd1064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2584,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2585}, %rd1054;
	}
	shf.r.wrap.b32 	%r2586, %r2585, %r2584, 19;
	shf.r.wrap.b32 	%r2587, %r2584, %r2585, 19;
	mov.b64 	%rd1068, {%r2587, %r2586};
	shf.l.wrap.b32 	%r2588, %r2584, %r2585, 3;
	shf.l.wrap.b32 	%r2589, %r2585, %r2584, 3;
	mov.b64 	%rd1069, {%r2589, %r2588};
	shr.u64 	%rd1070, %rd1054, 6;
	xor.b64  	%rd1071, %rd1068, %rd1070;
	xor.b64  	%rd1072, %rd1071, %rd1069;
	shf.r.wrap.b32 	%r2590, %r2227, %r2226, 1;
	shf.r.wrap.b32 	%r2591, %r2226, %r2227, 1;
	mov.b64 	%rd1073, {%r2591, %r2590};
	shf.r.wrap.b32 	%r2592, %r2227, %r2226, 8;
	shf.r.wrap.b32 	%r2593, %r2226, %r2227, 8;
	mov.b64 	%rd1074, {%r2593, %r2592};
	shr.u64 	%rd1075, %rd549, 7;
	xor.b64  	%rd1076, %rd1073, %rd1075;
	xor.b64  	%rd1077, %rd1076, %rd1074;
	add.s64 	%rd1078, %rd537, %rd606;
	add.s64 	%rd1079, %rd1078, %rd1072;
	add.s64 	%rd1080, %rd1079, %rd1077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2594,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2595}, %rd1067;
	}
	shf.r.wrap.b32 	%r2596, %r2595, %r2594, 19;
	shf.r.wrap.b32 	%r2597, %r2594, %r2595, 19;
	mov.b64 	%rd1081, {%r2597, %r2596};
	shf.l.wrap.b32 	%r2598, %r2594, %r2595, 3;
	shf.l.wrap.b32 	%r2599, %r2595, %r2594, 3;
	mov.b64 	%rd1082, {%r2599, %r2598};
	shr.u64 	%rd1083, %rd1067, 6;
	xor.b64  	%rd1084, %rd1081, %rd1083;
	xor.b64  	%rd1085, %rd1084, %rd1082;
	shf.r.wrap.b32 	%r2600, %r2233, %r2232, 1;
	shf.r.wrap.b32 	%r2601, %r2232, %r2233, 1;
	mov.b64 	%rd1086, {%r2601, %r2600};
	shf.r.wrap.b32 	%r2602, %r2233, %r2232, 8;
	shf.r.wrap.b32 	%r2603, %r2232, %r2233, 8;
	mov.b64 	%rd1087, {%r2603, %r2602};
	shr.u64 	%rd1088, %rd557, 7;
	xor.b64  	%rd1089, %rd1086, %rd1088;
	xor.b64  	%rd1090, %rd1089, %rd1087;
	add.s64 	%rd1091, %rd549, %rd618;
	add.s64 	%rd1092, %rd1091, %rd1085;
	add.s64 	%rd1093, %rd1092, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2604,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2605}, %rd1080;
	}
	shf.r.wrap.b32 	%r2606, %r2605, %r2604, 19;
	shf.r.wrap.b32 	%r2607, %r2604, %r2605, 19;
	mov.b64 	%rd1094, {%r2607, %r2606};
	shf.l.wrap.b32 	%r2608, %r2604, %r2605, 3;
	shf.l.wrap.b32 	%r2609, %r2605, %r2604, 3;
	mov.b64 	%rd1095, {%r2609, %r2608};
	shr.u64 	%rd1096, %rd1080, 6;
	xor.b64  	%rd1097, %rd1094, %rd1096;
	xor.b64  	%rd1098, %rd1097, %rd1095;
	shf.r.wrap.b32 	%r2610, %r2239, %r2238, 1;
	shf.r.wrap.b32 	%r2611, %r2238, %r2239, 1;
	mov.b64 	%rd1099, {%r2611, %r2610};
	shf.r.wrap.b32 	%r2612, %r2239, %r2238, 8;
	shf.r.wrap.b32 	%r2613, %r2238, %r2239, 8;
	mov.b64 	%rd1100, {%r2613, %r2612};
	shr.u64 	%rd1101, %rd564, 7;
	xor.b64  	%rd1102, %rd1099, %rd1101;
	xor.b64  	%rd1103, %rd1102, %rd1100;
	add.s64 	%rd1104, %rd557, %rd631;
	add.s64 	%rd1105, %rd1104, %rd1098;
	add.s64 	%rd1106, %rd1105, %rd1103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2614,%dummy}, %rd1093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2615}, %rd1093;
	}
	shf.r.wrap.b32 	%r2616, %r2615, %r2614, 19;
	shf.r.wrap.b32 	%r2617, %r2614, %r2615, 19;
	mov.b64 	%rd1107, {%r2617, %r2616};
	shf.l.wrap.b32 	%r2618, %r2614, %r2615, 3;
	shf.l.wrap.b32 	%r2619, %r2615, %r2614, 3;
	mov.b64 	%rd1108, {%r2619, %r2618};
	shr.u64 	%rd1109, %rd1093, 6;
	xor.b64  	%rd1110, %rd1107, %rd1109;
	xor.b64  	%rd1111, %rd1110, %rd1108;
	shf.r.wrap.b32 	%r2620, %r2245, %r2244, 1;
	shf.r.wrap.b32 	%r2621, %r2244, %r2245, 1;
	mov.b64 	%rd1112, {%r2621, %r2620};
	shf.r.wrap.b32 	%r2622, %r2245, %r2244, 8;
	shf.r.wrap.b32 	%r2623, %r2244, %r2245, 8;
	mov.b64 	%rd1113, {%r2623, %r2622};
	shr.u64 	%rd1114, %rd571, 7;
	xor.b64  	%rd1115, %rd1112, %rd1114;
	xor.b64  	%rd1116, %rd1115, %rd1113;
	add.s64 	%rd1117, %rd1028, %rd564;
	add.s64 	%rd1118, %rd1117, %rd1111;
	add.s64 	%rd1119, %rd1118, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2624,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2625}, %rd1106;
	}
	shf.r.wrap.b32 	%r2626, %r2625, %r2624, 19;
	shf.r.wrap.b32 	%r2627, %r2624, %r2625, 19;
	mov.b64 	%rd1120, {%r2627, %r2626};
	shf.l.wrap.b32 	%r2628, %r2624, %r2625, 3;
	shf.l.wrap.b32 	%r2629, %r2625, %r2624, 3;
	mov.b64 	%rd1121, {%r2629, %r2628};
	shr.u64 	%rd1122, %rd1106, 6;
	xor.b64  	%rd1123, %rd1120, %rd1122;
	xor.b64  	%rd1124, %rd1123, %rd1121;
	shf.r.wrap.b32 	%r2630, %r2251, %r2250, 1;
	shf.r.wrap.b32 	%r2631, %r2250, %r2251, 1;
	mov.b64 	%rd1125, {%r2631, %r2630};
	shf.r.wrap.b32 	%r2632, %r2251, %r2250, 8;
	shf.r.wrap.b32 	%r2633, %r2250, %r2251, 8;
	mov.b64 	%rd1126, {%r2633, %r2632};
	shr.u64 	%rd1127, %rd578, 7;
	xor.b64  	%rd1128, %rd1125, %rd1127;
	xor.b64  	%rd1129, %rd1128, %rd1126;
	add.s64 	%rd1130, %rd1041, %rd571;
	add.s64 	%rd1131, %rd1130, %rd1124;
	add.s64 	%rd1132, %rd1131, %rd1129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2634,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2635}, %rd1119;
	}
	shf.r.wrap.b32 	%r2636, %r2635, %r2634, 19;
	shf.r.wrap.b32 	%r2637, %r2634, %r2635, 19;
	mov.b64 	%rd1133, {%r2637, %r2636};
	shf.l.wrap.b32 	%r2638, %r2634, %r2635, 3;
	shf.l.wrap.b32 	%r2639, %r2635, %r2634, 3;
	mov.b64 	%rd1134, {%r2639, %r2638};
	shr.u64 	%rd1135, %rd1119, 6;
	xor.b64  	%rd1136, %rd1133, %rd1135;
	xor.b64  	%rd1137, %rd1136, %rd1134;
	shf.r.wrap.b32 	%r2640, %r2257, %r2256, 1;
	shf.r.wrap.b32 	%r2641, %r2256, %r2257, 1;
	mov.b64 	%rd1138, {%r2641, %r2640};
	shf.r.wrap.b32 	%r2642, %r2257, %r2256, 8;
	shf.r.wrap.b32 	%r2643, %r2256, %r2257, 8;
	mov.b64 	%rd1139, {%r2643, %r2642};
	shr.u64 	%rd1140, %rd585, 7;
	xor.b64  	%rd1141, %rd1138, %rd1140;
	xor.b64  	%rd1142, %rd1141, %rd1139;
	add.s64 	%rd1143, %rd1054, %rd578;
	add.s64 	%rd1144, %rd1143, %rd1137;
	add.s64 	%rd1145, %rd1144, %rd1142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2644,%dummy}, %rd1132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2645}, %rd1132;
	}
	shf.r.wrap.b32 	%r2646, %r2645, %r2644, 19;
	shf.r.wrap.b32 	%r2647, %r2644, %r2645, 19;
	mov.b64 	%rd1146, {%r2647, %r2646};
	shf.l.wrap.b32 	%r2648, %r2644, %r2645, 3;
	shf.l.wrap.b32 	%r2649, %r2645, %r2644, 3;
	mov.b64 	%rd1147, {%r2649, %r2648};
	shr.u64 	%rd1148, %rd1132, 6;
	xor.b64  	%rd1149, %rd1146, %rd1148;
	xor.b64  	%rd1150, %rd1149, %rd1147;
	shf.r.wrap.b32 	%r2650, %r2263, %r2262, 1;
	shf.r.wrap.b32 	%r2651, %r2262, %r2263, 1;
	mov.b64 	%rd1151, {%r2651, %r2650};
	shf.r.wrap.b32 	%r2652, %r2263, %r2262, 8;
	shf.r.wrap.b32 	%r2653, %r2262, %r2263, 8;
	mov.b64 	%rd1152, {%r2653, %r2652};
	shr.u64 	%rd1153, %rd592, 7;
	xor.b64  	%rd1154, %rd1151, %rd1153;
	xor.b64  	%rd1155, %rd1154, %rd1152;
	add.s64 	%rd1156, %rd1067, %rd585;
	add.s64 	%rd1157, %rd1156, %rd1150;
	add.s64 	%rd1158, %rd1157, %rd1155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2654,%dummy}, %rd1145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2655}, %rd1145;
	}
	shf.r.wrap.b32 	%r2656, %r2655, %r2654, 19;
	shf.r.wrap.b32 	%r2657, %r2654, %r2655, 19;
	mov.b64 	%rd1159, {%r2657, %r2656};
	shf.l.wrap.b32 	%r2658, %r2654, %r2655, 3;
	shf.l.wrap.b32 	%r2659, %r2655, %r2654, 3;
	mov.b64 	%rd1160, {%r2659, %r2658};
	shr.u64 	%rd1161, %rd1145, 6;
	xor.b64  	%rd1162, %rd1159, %rd1161;
	xor.b64  	%rd1163, %rd1162, %rd1160;
	shf.r.wrap.b32 	%r2660, %r2269, %r2268, 1;
	shf.r.wrap.b32 	%r2661, %r2268, %r2269, 1;
	mov.b64 	%rd1164, {%r2661, %r2660};
	shf.r.wrap.b32 	%r2662, %r2269, %r2268, 8;
	shf.r.wrap.b32 	%r2663, %r2268, %r2269, 8;
	mov.b64 	%rd1165, {%r2663, %r2662};
	shr.u64 	%rd1166, %rd599, 7;
	xor.b64  	%rd1167, %rd1164, %rd1166;
	xor.b64  	%rd1168, %rd1167, %rd1165;
	add.s64 	%rd1169, %rd1080, %rd592;
	add.s64 	%rd1170, %rd1169, %rd1163;
	add.s64 	%rd1171, %rd1170, %rd1168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2664,%dummy}, %rd1158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2665}, %rd1158;
	}
	shf.r.wrap.b32 	%r2666, %r2665, %r2664, 19;
	shf.r.wrap.b32 	%r2667, %r2664, %r2665, 19;
	mov.b64 	%rd1172, {%r2667, %r2666};
	shf.l.wrap.b32 	%r2668, %r2664, %r2665, 3;
	shf.l.wrap.b32 	%r2669, %r2665, %r2664, 3;
	mov.b64 	%rd1173, {%r2669, %r2668};
	shr.u64 	%rd1174, %rd1158, 6;
	xor.b64  	%rd1175, %rd1172, %rd1174;
	xor.b64  	%rd1176, %rd1175, %rd1173;
	shf.r.wrap.b32 	%r2670, %r2279, %r2278, 1;
	shf.r.wrap.b32 	%r2671, %r2278, %r2279, 1;
	mov.b64 	%rd1177, {%r2671, %r2670};
	shf.r.wrap.b32 	%r2672, %r2279, %r2278, 8;
	shf.r.wrap.b32 	%r2673, %r2278, %r2279, 8;
	mov.b64 	%rd1178, {%r2673, %r2672};
	shr.u64 	%rd1179, %rd606, 7;
	xor.b64  	%rd1180, %rd1177, %rd1179;
	xor.b64  	%rd1181, %rd1180, %rd1178;
	add.s64 	%rd1182, %rd1093, %rd599;
	add.s64 	%rd1183, %rd1182, %rd1176;
	add.s64 	%rd1184, %rd1183, %rd1181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2674,%dummy}, %rd1171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2675}, %rd1171;
	}
	shf.r.wrap.b32 	%r2676, %r2675, %r2674, 19;
	shf.r.wrap.b32 	%r2677, %r2674, %r2675, 19;
	mov.b64 	%rd1185, {%r2677, %r2676};
	shf.l.wrap.b32 	%r2678, %r2674, %r2675, 3;
	shf.l.wrap.b32 	%r2679, %r2675, %r2674, 3;
	mov.b64 	%rd1186, {%r2679, %r2678};
	shr.u64 	%rd1187, %rd1171, 6;
	xor.b64  	%rd1188, %rd1185, %rd1187;
	xor.b64  	%rd1189, %rd1188, %rd1186;
	shf.r.wrap.b32 	%r2680, %r2545, %r2544, 1;
	shf.r.wrap.b32 	%r2681, %r2544, %r2545, 1;
	mov.b64 	%rd1190, {%r2681, %r2680};
	shf.r.wrap.b32 	%r2682, %r2545, %r2544, 8;
	shf.r.wrap.b32 	%r2683, %r2544, %r2545, 8;
	mov.b64 	%rd1191, {%r2683, %r2682};
	shr.u64 	%rd1192, %rd618, 7;
	xor.b64  	%rd1193, %rd1190, %rd1192;
	xor.b64  	%rd1194, %rd1193, %rd1191;
	add.s64 	%rd1195, %rd1106, %rd606;
	add.s64 	%rd1196, %rd1195, %rd1189;
	add.s64 	%rd1197, %rd1196, %rd1194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2684,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2685}, %rd1184;
	}
	shf.r.wrap.b32 	%r2686, %r2685, %r2684, 19;
	shf.r.wrap.b32 	%r2687, %r2684, %r2685, 19;
	mov.b64 	%rd1198, {%r2687, %r2686};
	shf.l.wrap.b32 	%r2688, %r2684, %r2685, 3;
	shf.l.wrap.b32 	%r2689, %r2685, %r2684, 3;
	mov.b64 	%rd1199, {%r2689, %r2688};
	shr.u64 	%rd1200, %rd1184, 6;
	xor.b64  	%rd1201, %rd1198, %rd1200;
	xor.b64  	%rd1202, %rd1201, %rd1199;
	shf.r.wrap.b32 	%r2690, %r2555, %r2554, 1;
	shf.r.wrap.b32 	%r2691, %r2554, %r2555, 1;
	mov.b64 	%rd1203, {%r2691, %r2690};
	shf.r.wrap.b32 	%r2692, %r2555, %r2554, 8;
	shf.r.wrap.b32 	%r2693, %r2554, %r2555, 8;
	mov.b64 	%rd1204, {%r2693, %r2692};
	shr.u64 	%rd1205, %rd631, 7;
	xor.b64  	%rd1206, %rd1203, %rd1205;
	xor.b64  	%rd1207, %rd1206, %rd1204;
	add.s64 	%rd1208, %rd1119, %rd618;
	add.s64 	%rd1209, %rd1208, %rd1202;
	add.s64 	%rd1210, %rd1209, %rd1207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2694,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2695}, %rd1197;
	}
	shf.r.wrap.b32 	%r2696, %r2695, %r2694, 19;
	shf.r.wrap.b32 	%r2697, %r2694, %r2695, 19;
	mov.b64 	%rd1211, {%r2697, %r2696};
	shf.l.wrap.b32 	%r2698, %r2694, %r2695, 3;
	shf.l.wrap.b32 	%r2699, %r2695, %r2694, 3;
	mov.b64 	%rd1212, {%r2699, %r2698};
	shr.u64 	%rd1213, %rd1197, 6;
	xor.b64  	%rd1214, %rd1211, %rd1213;
	xor.b64  	%rd1215, %rd1214, %rd1212;
	shf.r.wrap.b32 	%r2700, %r2565, %r2564, 1;
	shf.r.wrap.b32 	%r2701, %r2564, %r2565, 1;
	mov.b64 	%rd1216, {%r2701, %r2700};
	shf.r.wrap.b32 	%r2702, %r2565, %r2564, 8;
	shf.r.wrap.b32 	%r2703, %r2564, %r2565, 8;
	mov.b64 	%rd1217, {%r2703, %r2702};
	shr.u64 	%rd1218, %rd1028, 7;
	xor.b64  	%rd1219, %rd1216, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd1217;
	add.s64 	%rd1221, %rd1132, %rd631;
	add.s64 	%rd1222, %rd1221, %rd1215;
	add.s64 	%rd1223, %rd1222, %rd1220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2704,%dummy}, %rd1004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2705}, %rd1004;
	}
	shf.r.wrap.b32 	%r2706, %r2705, %r2704, 14;
	shf.r.wrap.b32 	%r2707, %r2704, %r2705, 14;
	mov.b64 	%rd1224, {%r2707, %r2706};
	shf.r.wrap.b32 	%r2708, %r2705, %r2704, 18;
	shf.r.wrap.b32 	%r2709, %r2704, %r2705, 18;
	mov.b64 	%rd1225, {%r2709, %r2708};
	xor.b64  	%rd1226, %rd1225, %rd1224;
	shf.l.wrap.b32 	%r2710, %r2704, %r2705, 23;
	shf.l.wrap.b32 	%r2711, %r2705, %r2704, 23;
	mov.b64 	%rd1227, {%r2711, %r2710};
	xor.b64  	%rd1228, %rd1226, %rd1227;
	xor.b64  	%rd1229, %rd956, %rd980;
	and.b64  	%rd1230, %rd1229, %rd1004;
	xor.b64  	%rd1231, %rd1230, %rd956;
	add.s64 	%rd1232, %rd1231, %rd932;
	add.s64 	%rd1233, %rd1232, %rd1028;
	add.s64 	%rd1234, %rd1233, %rd2739;
	add.s64 	%rd1235, %rd1234, %rd1228;
	add.s64 	%rd1236, %rd1235, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2712,%dummy}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2713}, %rd1015;
	}
	shf.r.wrap.b32 	%r2714, %r2713, %r2712, 28;
	shf.r.wrap.b32 	%r2715, %r2712, %r2713, 28;
	mov.b64 	%rd1237, {%r2715, %r2714};
	shf.l.wrap.b32 	%r2716, %r2712, %r2713, 30;
	shf.l.wrap.b32 	%r2717, %r2713, %r2712, 30;
	mov.b64 	%rd1238, {%r2717, %r2716};
	xor.b64  	%rd1239, %rd1238, %rd1237;
	shf.l.wrap.b32 	%r2718, %r2712, %r2713, 25;
	shf.l.wrap.b32 	%r2719, %r2713, %r2712, 25;
	mov.b64 	%rd1240, {%r2719, %r2718};
	xor.b64  	%rd1241, %rd1239, %rd1240;
	xor.b64  	%rd1242, %rd1015, %rd967;
	xor.b64  	%rd1243, %rd1015, %rd991;
	and.b64  	%rd1244, %rd1243, %rd1242;
	xor.b64  	%rd1245, %rd1244, %rd1015;
	add.s64 	%rd1246, %rd1235, %rd1245;
	add.s64 	%rd1247, %rd1246, %rd1241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2720,%dummy}, %rd1236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2721}, %rd1236;
	}
	shf.r.wrap.b32 	%r2722, %r2721, %r2720, 14;
	shf.r.wrap.b32 	%r2723, %r2720, %r2721, 14;
	mov.b64 	%rd1248, {%r2723, %r2722};
	shf.r.wrap.b32 	%r2724, %r2721, %r2720, 18;
	shf.r.wrap.b32 	%r2725, %r2720, %r2721, 18;
	mov.b64 	%rd1249, {%r2725, %r2724};
	xor.b64  	%rd1250, %rd1249, %rd1248;
	shf.l.wrap.b32 	%r2726, %r2720, %r2721, 23;
	shf.l.wrap.b32 	%r2727, %r2721, %r2720, 23;
	mov.b64 	%rd1251, {%r2727, %r2726};
	xor.b64  	%rd1252, %rd1250, %rd1251;
	xor.b64  	%rd1253, %rd980, %rd1004;
	and.b64  	%rd1254, %rd1236, %rd1253;
	xor.b64  	%rd1255, %rd1254, %rd980;
	add.s64 	%rd1256, %rd1041, %rd956;
	add.s64 	%rd1257, %rd1256, %rd2740;
	add.s64 	%rd1258, %rd1257, %rd1255;
	add.s64 	%rd1259, %rd1258, %rd1252;
	add.s64 	%rd1260, %rd1259, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2728,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2729}, %rd1247;
	}
	shf.r.wrap.b32 	%r2730, %r2729, %r2728, 28;
	shf.r.wrap.b32 	%r2731, %r2728, %r2729, 28;
	mov.b64 	%rd1261, {%r2731, %r2730};
	shf.l.wrap.b32 	%r2732, %r2728, %r2729, 30;
	shf.l.wrap.b32 	%r2733, %r2729, %r2728, 30;
	mov.b64 	%rd1262, {%r2733, %r2732};
	xor.b64  	%rd1263, %rd1262, %rd1261;
	shf.l.wrap.b32 	%r2734, %r2728, %r2729, 25;
	shf.l.wrap.b32 	%r2735, %r2729, %r2728, 25;
	mov.b64 	%rd1264, {%r2735, %r2734};
	xor.b64  	%rd1265, %rd1263, %rd1264;
	xor.b64  	%rd1266, %rd1247, %rd991;
	xor.b64  	%rd1267, %rd1247, %rd1015;
	and.b64  	%rd1268, %rd1267, %rd1266;
	xor.b64  	%rd1269, %rd1268, %rd1247;
	add.s64 	%rd1270, %rd1259, %rd1269;
	add.s64 	%rd1271, %rd1270, %rd1265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2736,%dummy}, %rd1260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2737}, %rd1260;
	}
	shf.r.wrap.b32 	%r2738, %r2737, %r2736, 14;
	shf.r.wrap.b32 	%r2739, %r2736, %r2737, 14;
	mov.b64 	%rd1272, {%r2739, %r2738};
	shf.r.wrap.b32 	%r2740, %r2737, %r2736, 18;
	shf.r.wrap.b32 	%r2741, %r2736, %r2737, 18;
	mov.b64 	%rd1273, {%r2741, %r2740};
	xor.b64  	%rd1274, %rd1273, %rd1272;
	shf.l.wrap.b32 	%r2742, %r2736, %r2737, 23;
	shf.l.wrap.b32 	%r2743, %r2737, %r2736, 23;
	mov.b64 	%rd1275, {%r2743, %r2742};
	xor.b64  	%rd1276, %rd1274, %rd1275;
	xor.b64  	%rd1277, %rd1236, %rd1004;
	and.b64  	%rd1278, %rd1260, %rd1277;
	xor.b64  	%rd1279, %rd1278, %rd1004;
	add.s64 	%rd1280, %rd1054, %rd980;
	add.s64 	%rd1281, %rd1280, %rd2741;
	add.s64 	%rd1282, %rd1281, %rd1279;
	add.s64 	%rd1283, %rd1282, %rd1276;
	add.s64 	%rd1284, %rd1283, %rd991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2744,%dummy}, %rd1271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2745}, %rd1271;
	}
	shf.r.wrap.b32 	%r2746, %r2745, %r2744, 28;
	shf.r.wrap.b32 	%r2747, %r2744, %r2745, 28;
	mov.b64 	%rd1285, {%r2747, %r2746};
	shf.l.wrap.b32 	%r2748, %r2744, %r2745, 30;
	shf.l.wrap.b32 	%r2749, %r2745, %r2744, 30;
	mov.b64 	%rd1286, {%r2749, %r2748};
	xor.b64  	%rd1287, %rd1286, %rd1285;
	shf.l.wrap.b32 	%r2750, %r2744, %r2745, 25;
	shf.l.wrap.b32 	%r2751, %r2745, %r2744, 25;
	mov.b64 	%rd1288, {%r2751, %r2750};
	xor.b64  	%rd1289, %rd1287, %rd1288;
	xor.b64  	%rd1290, %rd1271, %rd1015;
	xor.b64  	%rd1291, %rd1271, %rd1247;
	and.b64  	%rd1292, %rd1291, %rd1290;
	xor.b64  	%rd1293, %rd1292, %rd1271;
	add.s64 	%rd1294, %rd1283, %rd1293;
	add.s64 	%rd1295, %rd1294, %rd1289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2752,%dummy}, %rd1284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2753}, %rd1284;
	}
	shf.r.wrap.b32 	%r2754, %r2753, %r2752, 14;
	shf.r.wrap.b32 	%r2755, %r2752, %r2753, 14;
	mov.b64 	%rd1296, {%r2755, %r2754};
	shf.r.wrap.b32 	%r2756, %r2753, %r2752, 18;
	shf.r.wrap.b32 	%r2757, %r2752, %r2753, 18;
	mov.b64 	%rd1297, {%r2757, %r2756};
	xor.b64  	%rd1298, %rd1297, %rd1296;
	shf.l.wrap.b32 	%r2758, %r2752, %r2753, 23;
	shf.l.wrap.b32 	%r2759, %r2753, %r2752, 23;
	mov.b64 	%rd1299, {%r2759, %r2758};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	xor.b64  	%rd1301, %rd1260, %rd1236;
	and.b64  	%rd1302, %rd1284, %rd1301;
	xor.b64  	%rd1303, %rd1302, %rd1236;
	add.s64 	%rd1304, %rd1067, %rd1004;
	add.s64 	%rd1305, %rd1304, %rd2742;
	add.s64 	%rd1306, %rd1305, %rd1303;
	add.s64 	%rd1307, %rd1306, %rd1300;
	add.s64 	%rd1308, %rd1307, %rd1015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2760,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2761}, %rd1295;
	}
	shf.r.wrap.b32 	%r2762, %r2761, %r2760, 28;
	shf.r.wrap.b32 	%r2763, %r2760, %r2761, 28;
	mov.b64 	%rd1309, {%r2763, %r2762};
	shf.l.wrap.b32 	%r2764, %r2760, %r2761, 30;
	shf.l.wrap.b32 	%r2765, %r2761, %r2760, 30;
	mov.b64 	%rd1310, {%r2765, %r2764};
	xor.b64  	%rd1311, %rd1310, %rd1309;
	shf.l.wrap.b32 	%r2766, %r2760, %r2761, 25;
	shf.l.wrap.b32 	%r2767, %r2761, %r2760, 25;
	mov.b64 	%rd1312, {%r2767, %r2766};
	xor.b64  	%rd1313, %rd1311, %rd1312;
	xor.b64  	%rd1314, %rd1295, %rd1247;
	xor.b64  	%rd1315, %rd1295, %rd1271;
	and.b64  	%rd1316, %rd1315, %rd1314;
	xor.b64  	%rd1317, %rd1316, %rd1295;
	add.s64 	%rd1318, %rd1307, %rd1317;
	add.s64 	%rd1319, %rd1318, %rd1313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2768,%dummy}, %rd1308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2769}, %rd1308;
	}
	shf.r.wrap.b32 	%r2770, %r2769, %r2768, 14;
	shf.r.wrap.b32 	%r2771, %r2768, %r2769, 14;
	mov.b64 	%rd1320, {%r2771, %r2770};
	shf.r.wrap.b32 	%r2772, %r2769, %r2768, 18;
	shf.r.wrap.b32 	%r2773, %r2768, %r2769, 18;
	mov.b64 	%rd1321, {%r2773, %r2772};
	xor.b64  	%rd1322, %rd1321, %rd1320;
	shf.l.wrap.b32 	%r2774, %r2768, %r2769, 23;
	shf.l.wrap.b32 	%r2775, %r2769, %r2768, 23;
	mov.b64 	%rd1323, {%r2775, %r2774};
	xor.b64  	%rd1324, %rd1322, %rd1323;
	xor.b64  	%rd1325, %rd1284, %rd1260;
	and.b64  	%rd1326, %rd1308, %rd1325;
	xor.b64  	%rd1327, %rd1326, %rd1260;
	add.s64 	%rd1328, %rd1236, %rd1080;
	add.s64 	%rd1329, %rd1328, %rd2743;
	add.s64 	%rd1330, %rd1329, %rd1327;
	add.s64 	%rd1331, %rd1330, %rd1324;
	add.s64 	%rd1332, %rd1331, %rd1247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2776,%dummy}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2777}, %rd1319;
	}
	shf.r.wrap.b32 	%r2778, %r2777, %r2776, 28;
	shf.r.wrap.b32 	%r2779, %r2776, %r2777, 28;
	mov.b64 	%rd1333, {%r2779, %r2778};
	shf.l.wrap.b32 	%r2780, %r2776, %r2777, 30;
	shf.l.wrap.b32 	%r2781, %r2777, %r2776, 30;
	mov.b64 	%rd1334, {%r2781, %r2780};
	xor.b64  	%rd1335, %rd1334, %rd1333;
	shf.l.wrap.b32 	%r2782, %r2776, %r2777, 25;
	shf.l.wrap.b32 	%r2783, %r2777, %r2776, 25;
	mov.b64 	%rd1336, {%r2783, %r2782};
	xor.b64  	%rd1337, %rd1335, %rd1336;
	xor.b64  	%rd1338, %rd1319, %rd1271;
	xor.b64  	%rd1339, %rd1319, %rd1295;
	and.b64  	%rd1340, %rd1339, %rd1338;
	xor.b64  	%rd1341, %rd1340, %rd1319;
	add.s64 	%rd1342, %rd1331, %rd1341;
	add.s64 	%rd1343, %rd1342, %rd1337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2784,%dummy}, %rd1332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2785}, %rd1332;
	}
	shf.r.wrap.b32 	%r2786, %r2785, %r2784, 14;
	shf.r.wrap.b32 	%r2787, %r2784, %r2785, 14;
	mov.b64 	%rd1344, {%r2787, %r2786};
	shf.r.wrap.b32 	%r2788, %r2785, %r2784, 18;
	shf.r.wrap.b32 	%r2789, %r2784, %r2785, 18;
	mov.b64 	%rd1345, {%r2789, %r2788};
	xor.b64  	%rd1346, %rd1345, %rd1344;
	shf.l.wrap.b32 	%r2790, %r2784, %r2785, 23;
	shf.l.wrap.b32 	%r2791, %r2785, %r2784, 23;
	mov.b64 	%rd1347, {%r2791, %r2790};
	xor.b64  	%rd1348, %rd1346, %rd1347;
	xor.b64  	%rd1349, %rd1308, %rd1284;
	and.b64  	%rd1350, %rd1332, %rd1349;
	xor.b64  	%rd1351, %rd1350, %rd1284;
	add.s64 	%rd1352, %rd1260, %rd1093;
	add.s64 	%rd1353, %rd1352, %rd2744;
	add.s64 	%rd1354, %rd1353, %rd1351;
	add.s64 	%rd1355, %rd1354, %rd1348;
	add.s64 	%rd1356, %rd1355, %rd1271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2792,%dummy}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2793}, %rd1343;
	}
	shf.r.wrap.b32 	%r2794, %r2793, %r2792, 28;
	shf.r.wrap.b32 	%r2795, %r2792, %r2793, 28;
	mov.b64 	%rd1357, {%r2795, %r2794};
	shf.l.wrap.b32 	%r2796, %r2792, %r2793, 30;
	shf.l.wrap.b32 	%r2797, %r2793, %r2792, 30;
	mov.b64 	%rd1358, {%r2797, %r2796};
	xor.b64  	%rd1359, %rd1358, %rd1357;
	shf.l.wrap.b32 	%r2798, %r2792, %r2793, 25;
	shf.l.wrap.b32 	%r2799, %r2793, %r2792, 25;
	mov.b64 	%rd1360, {%r2799, %r2798};
	xor.b64  	%rd1361, %rd1359, %rd1360;
	xor.b64  	%rd1362, %rd1343, %rd1295;
	xor.b64  	%rd1363, %rd1343, %rd1319;
	and.b64  	%rd1364, %rd1363, %rd1362;
	xor.b64  	%rd1365, %rd1364, %rd1343;
	add.s64 	%rd1366, %rd1355, %rd1365;
	add.s64 	%rd1367, %rd1366, %rd1361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2800,%dummy}, %rd1356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2801}, %rd1356;
	}
	shf.r.wrap.b32 	%r2802, %r2801, %r2800, 14;
	shf.r.wrap.b32 	%r2803, %r2800, %r2801, 14;
	mov.b64 	%rd1368, {%r2803, %r2802};
	shf.r.wrap.b32 	%r2804, %r2801, %r2800, 18;
	shf.r.wrap.b32 	%r2805, %r2800, %r2801, 18;
	mov.b64 	%rd1369, {%r2805, %r2804};
	xor.b64  	%rd1370, %rd1369, %rd1368;
	shf.l.wrap.b32 	%r2806, %r2800, %r2801, 23;
	shf.l.wrap.b32 	%r2807, %r2801, %r2800, 23;
	mov.b64 	%rd1371, {%r2807, %r2806};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	xor.b64  	%rd1373, %rd1332, %rd1308;
	and.b64  	%rd1374, %rd1356, %rd1373;
	xor.b64  	%rd1375, %rd1374, %rd1308;
	add.s64 	%rd1376, %rd1284, %rd1106;
	add.s64 	%rd1377, %rd1376, %rd2745;
	add.s64 	%rd1378, %rd1377, %rd1375;
	add.s64 	%rd1379, %rd1378, %rd1372;
	add.s64 	%rd1380, %rd1379, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2808,%dummy}, %rd1367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2809}, %rd1367;
	}
	shf.r.wrap.b32 	%r2810, %r2809, %r2808, 28;
	shf.r.wrap.b32 	%r2811, %r2808, %r2809, 28;
	mov.b64 	%rd1381, {%r2811, %r2810};
	shf.l.wrap.b32 	%r2812, %r2808, %r2809, 30;
	shf.l.wrap.b32 	%r2813, %r2809, %r2808, 30;
	mov.b64 	%rd1382, {%r2813, %r2812};
	xor.b64  	%rd1383, %rd1382, %rd1381;
	shf.l.wrap.b32 	%r2814, %r2808, %r2809, 25;
	shf.l.wrap.b32 	%r2815, %r2809, %r2808, 25;
	mov.b64 	%rd1384, {%r2815, %r2814};
	xor.b64  	%rd1385, %rd1383, %rd1384;
	xor.b64  	%rd1386, %rd1367, %rd1319;
	xor.b64  	%rd1387, %rd1367, %rd1343;
	and.b64  	%rd1388, %rd1387, %rd1386;
	xor.b64  	%rd1389, %rd1388, %rd1367;
	add.s64 	%rd1390, %rd1379, %rd1389;
	add.s64 	%rd1391, %rd1390, %rd1385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2816,%dummy}, %rd1380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2817}, %rd1380;
	}
	shf.r.wrap.b32 	%r2818, %r2817, %r2816, 14;
	shf.r.wrap.b32 	%r2819, %r2816, %r2817, 14;
	mov.b64 	%rd1392, {%r2819, %r2818};
	shf.r.wrap.b32 	%r2820, %r2817, %r2816, 18;
	shf.r.wrap.b32 	%r2821, %r2816, %r2817, 18;
	mov.b64 	%rd1393, {%r2821, %r2820};
	xor.b64  	%rd1394, %rd1393, %rd1392;
	shf.l.wrap.b32 	%r2822, %r2816, %r2817, 23;
	shf.l.wrap.b32 	%r2823, %r2817, %r2816, 23;
	mov.b64 	%rd1395, {%r2823, %r2822};
	xor.b64  	%rd1396, %rd1394, %rd1395;
	xor.b64  	%rd1397, %rd1356, %rd1332;
	and.b64  	%rd1398, %rd1380, %rd1397;
	xor.b64  	%rd1399, %rd1398, %rd1332;
	add.s64 	%rd1400, %rd1308, %rd1119;
	add.s64 	%rd1401, %rd1400, %rd2746;
	add.s64 	%rd1402, %rd1401, %rd1399;
	add.s64 	%rd1403, %rd1402, %rd1396;
	add.s64 	%rd1404, %rd1403, %rd1319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2824,%dummy}, %rd1391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2825}, %rd1391;
	}
	shf.r.wrap.b32 	%r2826, %r2825, %r2824, 28;
	shf.r.wrap.b32 	%r2827, %r2824, %r2825, 28;
	mov.b64 	%rd1405, {%r2827, %r2826};
	shf.l.wrap.b32 	%r2828, %r2824, %r2825, 30;
	shf.l.wrap.b32 	%r2829, %r2825, %r2824, 30;
	mov.b64 	%rd1406, {%r2829, %r2828};
	xor.b64  	%rd1407, %rd1406, %rd1405;
	shf.l.wrap.b32 	%r2830, %r2824, %r2825, 25;
	shf.l.wrap.b32 	%r2831, %r2825, %r2824, 25;
	mov.b64 	%rd1408, {%r2831, %r2830};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	xor.b64  	%rd1410, %rd1391, %rd1343;
	xor.b64  	%rd1411, %rd1391, %rd1367;
	and.b64  	%rd1412, %rd1411, %rd1410;
	xor.b64  	%rd1413, %rd1412, %rd1391;
	add.s64 	%rd1414, %rd1403, %rd1413;
	add.s64 	%rd1415, %rd1414, %rd1409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2832,%dummy}, %rd1404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2833}, %rd1404;
	}
	shf.r.wrap.b32 	%r2834, %r2833, %r2832, 14;
	shf.r.wrap.b32 	%r2835, %r2832, %r2833, 14;
	mov.b64 	%rd1416, {%r2835, %r2834};
	shf.r.wrap.b32 	%r2836, %r2833, %r2832, 18;
	shf.r.wrap.b32 	%r2837, %r2832, %r2833, 18;
	mov.b64 	%rd1417, {%r2837, %r2836};
	xor.b64  	%rd1418, %rd1417, %rd1416;
	shf.l.wrap.b32 	%r2838, %r2832, %r2833, 23;
	shf.l.wrap.b32 	%r2839, %r2833, %r2832, 23;
	mov.b64 	%rd1419, {%r2839, %r2838};
	xor.b64  	%rd1420, %rd1418, %rd1419;
	xor.b64  	%rd1421, %rd1380, %rd1356;
	and.b64  	%rd1422, %rd1404, %rd1421;
	xor.b64  	%rd1423, %rd1422, %rd1356;
	add.s64 	%rd1424, %rd1332, %rd1132;
	add.s64 	%rd1425, %rd1424, %rd2747;
	add.s64 	%rd1426, %rd1425, %rd1423;
	add.s64 	%rd1427, %rd1426, %rd1420;
	add.s64 	%rd1428, %rd1427, %rd1343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2840,%dummy}, %rd1415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2841}, %rd1415;
	}
	shf.r.wrap.b32 	%r2842, %r2841, %r2840, 28;
	shf.r.wrap.b32 	%r2843, %r2840, %r2841, 28;
	mov.b64 	%rd1429, {%r2843, %r2842};
	shf.l.wrap.b32 	%r2844, %r2840, %r2841, 30;
	shf.l.wrap.b32 	%r2845, %r2841, %r2840, 30;
	mov.b64 	%rd1430, {%r2845, %r2844};
	xor.b64  	%rd1431, %rd1430, %rd1429;
	shf.l.wrap.b32 	%r2846, %r2840, %r2841, 25;
	shf.l.wrap.b32 	%r2847, %r2841, %r2840, 25;
	mov.b64 	%rd1432, {%r2847, %r2846};
	xor.b64  	%rd1433, %rd1431, %rd1432;
	xor.b64  	%rd1434, %rd1415, %rd1367;
	xor.b64  	%rd1435, %rd1415, %rd1391;
	and.b64  	%rd1436, %rd1435, %rd1434;
	xor.b64  	%rd1437, %rd1436, %rd1415;
	add.s64 	%rd1438, %rd1427, %rd1437;
	add.s64 	%rd1439, %rd1438, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2848,%dummy}, %rd1428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2849}, %rd1428;
	}
	shf.r.wrap.b32 	%r2850, %r2849, %r2848, 14;
	shf.r.wrap.b32 	%r2851, %r2848, %r2849, 14;
	mov.b64 	%rd1440, {%r2851, %r2850};
	shf.r.wrap.b32 	%r2852, %r2849, %r2848, 18;
	shf.r.wrap.b32 	%r2853, %r2848, %r2849, 18;
	mov.b64 	%rd1441, {%r2853, %r2852};
	xor.b64  	%rd1442, %rd1441, %rd1440;
	shf.l.wrap.b32 	%r2854, %r2848, %r2849, 23;
	shf.l.wrap.b32 	%r2855, %r2849, %r2848, 23;
	mov.b64 	%rd1443, {%r2855, %r2854};
	xor.b64  	%rd1444, %rd1442, %rd1443;
	xor.b64  	%rd1445, %rd1404, %rd1380;
	and.b64  	%rd1446, %rd1428, %rd1445;
	xor.b64  	%rd1447, %rd1446, %rd1380;
	add.s64 	%rd1448, %rd1356, %rd1145;
	add.s64 	%rd1449, %rd1448, %rd2748;
	add.s64 	%rd1450, %rd1449, %rd1447;
	add.s64 	%rd1451, %rd1450, %rd1444;
	add.s64 	%rd1452, %rd1451, %rd1367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2856,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2857}, %rd1439;
	}
	shf.r.wrap.b32 	%r2858, %r2857, %r2856, 28;
	shf.r.wrap.b32 	%r2859, %r2856, %r2857, 28;
	mov.b64 	%rd1453, {%r2859, %r2858};
	shf.l.wrap.b32 	%r2860, %r2856, %r2857, 30;
	shf.l.wrap.b32 	%r2861, %r2857, %r2856, 30;
	mov.b64 	%rd1454, {%r2861, %r2860};
	xor.b64  	%rd1455, %rd1454, %rd1453;
	shf.l.wrap.b32 	%r2862, %r2856, %r2857, 25;
	shf.l.wrap.b32 	%r2863, %r2857, %r2856, 25;
	mov.b64 	%rd1456, {%r2863, %r2862};
	xor.b64  	%rd1457, %rd1455, %rd1456;
	xor.b64  	%rd1458, %rd1439, %rd1391;
	xor.b64  	%rd1459, %rd1439, %rd1415;
	and.b64  	%rd1460, %rd1459, %rd1458;
	xor.b64  	%rd1461, %rd1460, %rd1439;
	add.s64 	%rd1462, %rd1451, %rd1461;
	add.s64 	%rd1463, %rd1462, %rd1457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2864,%dummy}, %rd1452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2865}, %rd1452;
	}
	shf.r.wrap.b32 	%r2866, %r2865, %r2864, 14;
	shf.r.wrap.b32 	%r2867, %r2864, %r2865, 14;
	mov.b64 	%rd1464, {%r2867, %r2866};
	shf.r.wrap.b32 	%r2868, %r2865, %r2864, 18;
	shf.r.wrap.b32 	%r2869, %r2864, %r2865, 18;
	mov.b64 	%rd1465, {%r2869, %r2868};
	xor.b64  	%rd1466, %rd1465, %rd1464;
	shf.l.wrap.b32 	%r2870, %r2864, %r2865, 23;
	shf.l.wrap.b32 	%r2871, %r2865, %r2864, 23;
	mov.b64 	%rd1467, {%r2871, %r2870};
	xor.b64  	%rd1468, %rd1466, %rd1467;
	xor.b64  	%rd1469, %rd1428, %rd1404;
	and.b64  	%rd1470, %rd1452, %rd1469;
	xor.b64  	%rd1471, %rd1470, %rd1404;
	add.s64 	%rd1472, %rd1380, %rd1158;
	add.s64 	%rd1473, %rd1472, %rd2749;
	add.s64 	%rd1474, %rd1473, %rd1471;
	add.s64 	%rd1475, %rd1474, %rd1468;
	add.s64 	%rd1476, %rd1475, %rd1391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2872,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2873}, %rd1463;
	}
	shf.r.wrap.b32 	%r2874, %r2873, %r2872, 28;
	shf.r.wrap.b32 	%r2875, %r2872, %r2873, 28;
	mov.b64 	%rd1477, {%r2875, %r2874};
	shf.l.wrap.b32 	%r2876, %r2872, %r2873, 30;
	shf.l.wrap.b32 	%r2877, %r2873, %r2872, 30;
	mov.b64 	%rd1478, {%r2877, %r2876};
	xor.b64  	%rd1479, %rd1478, %rd1477;
	shf.l.wrap.b32 	%r2878, %r2872, %r2873, 25;
	shf.l.wrap.b32 	%r2879, %r2873, %r2872, 25;
	mov.b64 	%rd1480, {%r2879, %r2878};
	xor.b64  	%rd1481, %rd1479, %rd1480;
	xor.b64  	%rd1482, %rd1463, %rd1415;
	xor.b64  	%rd1483, %rd1463, %rd1439;
	and.b64  	%rd1484, %rd1483, %rd1482;
	xor.b64  	%rd1485, %rd1484, %rd1463;
	add.s64 	%rd1486, %rd1475, %rd1485;
	add.s64 	%rd1487, %rd1486, %rd1481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2880,%dummy}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2881}, %rd1476;
	}
	shf.r.wrap.b32 	%r2882, %r2881, %r2880, 14;
	shf.r.wrap.b32 	%r2883, %r2880, %r2881, 14;
	mov.b64 	%rd1488, {%r2883, %r2882};
	shf.r.wrap.b32 	%r2884, %r2881, %r2880, 18;
	shf.r.wrap.b32 	%r2885, %r2880, %r2881, 18;
	mov.b64 	%rd1489, {%r2885, %r2884};
	xor.b64  	%rd1490, %rd1489, %rd1488;
	shf.l.wrap.b32 	%r2886, %r2880, %r2881, 23;
	shf.l.wrap.b32 	%r2887, %r2881, %r2880, 23;
	mov.b64 	%rd1491, {%r2887, %r2886};
	xor.b64  	%rd1492, %rd1490, %rd1491;
	xor.b64  	%rd1493, %rd1452, %rd1428;
	and.b64  	%rd1494, %rd1476, %rd1493;
	xor.b64  	%rd1495, %rd1494, %rd1428;
	add.s64 	%rd1496, %rd1404, %rd1171;
	add.s64 	%rd1497, %rd1496, %rd2750;
	add.s64 	%rd1498, %rd1497, %rd1495;
	add.s64 	%rd1499, %rd1498, %rd1492;
	add.s64 	%rd1500, %rd1499, %rd1415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2888,%dummy}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2889}, %rd1487;
	}
	shf.r.wrap.b32 	%r2890, %r2889, %r2888, 28;
	shf.r.wrap.b32 	%r2891, %r2888, %r2889, 28;
	mov.b64 	%rd1501, {%r2891, %r2890};
	shf.l.wrap.b32 	%r2892, %r2888, %r2889, 30;
	shf.l.wrap.b32 	%r2893, %r2889, %r2888, 30;
	mov.b64 	%rd1502, {%r2893, %r2892};
	xor.b64  	%rd1503, %rd1502, %rd1501;
	shf.l.wrap.b32 	%r2894, %r2888, %r2889, 25;
	shf.l.wrap.b32 	%r2895, %r2889, %r2888, 25;
	mov.b64 	%rd1504, {%r2895, %r2894};
	xor.b64  	%rd1505, %rd1503, %rd1504;
	xor.b64  	%rd1506, %rd1487, %rd1439;
	xor.b64  	%rd1507, %rd1487, %rd1463;
	and.b64  	%rd1508, %rd1507, %rd1506;
	xor.b64  	%rd1509, %rd1508, %rd1487;
	add.s64 	%rd1510, %rd1499, %rd1509;
	add.s64 	%rd1511, %rd1510, %rd1505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2896,%dummy}, %rd1500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2897}, %rd1500;
	}
	shf.r.wrap.b32 	%r2898, %r2897, %r2896, 14;
	shf.r.wrap.b32 	%r2899, %r2896, %r2897, 14;
	mov.b64 	%rd1512, {%r2899, %r2898};
	shf.r.wrap.b32 	%r2900, %r2897, %r2896, 18;
	shf.r.wrap.b32 	%r2901, %r2896, %r2897, 18;
	mov.b64 	%rd1513, {%r2901, %r2900};
	xor.b64  	%rd1514, %rd1513, %rd1512;
	shf.l.wrap.b32 	%r2902, %r2896, %r2897, 23;
	shf.l.wrap.b32 	%r2903, %r2897, %r2896, 23;
	mov.b64 	%rd1515, {%r2903, %r2902};
	xor.b64  	%rd1516, %rd1514, %rd1515;
	xor.b64  	%rd1517, %rd1476, %rd1452;
	and.b64  	%rd1518, %rd1500, %rd1517;
	xor.b64  	%rd1519, %rd1518, %rd1452;
	add.s64 	%rd1520, %rd1428, %rd1184;
	add.s64 	%rd1521, %rd1520, %rd2751;
	add.s64 	%rd1522, %rd1521, %rd1519;
	add.s64 	%rd1523, %rd1522, %rd1516;
	add.s64 	%rd1524, %rd1523, %rd1439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2904,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2905}, %rd1511;
	}
	shf.r.wrap.b32 	%r2906, %r2905, %r2904, 28;
	shf.r.wrap.b32 	%r2907, %r2904, %r2905, 28;
	mov.b64 	%rd1525, {%r2907, %r2906};
	shf.l.wrap.b32 	%r2908, %r2904, %r2905, 30;
	shf.l.wrap.b32 	%r2909, %r2905, %r2904, 30;
	mov.b64 	%rd1526, {%r2909, %r2908};
	xor.b64  	%rd1527, %rd1526, %rd1525;
	shf.l.wrap.b32 	%r2910, %r2904, %r2905, 25;
	shf.l.wrap.b32 	%r2911, %r2905, %r2904, 25;
	mov.b64 	%rd1528, {%r2911, %r2910};
	xor.b64  	%rd1529, %rd1527, %rd1528;
	xor.b64  	%rd1530, %rd1511, %rd1463;
	xor.b64  	%rd1531, %rd1511, %rd1487;
	and.b64  	%rd1532, %rd1531, %rd1530;
	xor.b64  	%rd1533, %rd1532, %rd1511;
	add.s64 	%rd1534, %rd1523, %rd1533;
	add.s64 	%rd1535, %rd1534, %rd1529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2912,%dummy}, %rd1524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2913}, %rd1524;
	}
	shf.r.wrap.b32 	%r2914, %r2913, %r2912, 14;
	shf.r.wrap.b32 	%r2915, %r2912, %r2913, 14;
	mov.b64 	%rd1536, {%r2915, %r2914};
	shf.r.wrap.b32 	%r2916, %r2913, %r2912, 18;
	shf.r.wrap.b32 	%r2917, %r2912, %r2913, 18;
	mov.b64 	%rd1537, {%r2917, %r2916};
	xor.b64  	%rd1538, %rd1537, %rd1536;
	shf.l.wrap.b32 	%r2918, %r2912, %r2913, 23;
	shf.l.wrap.b32 	%r2919, %r2913, %r2912, 23;
	mov.b64 	%rd1539, {%r2919, %r2918};
	xor.b64  	%rd1540, %rd1538, %rd1539;
	xor.b64  	%rd1541, %rd1500, %rd1476;
	and.b64  	%rd1542, %rd1524, %rd1541;
	xor.b64  	%rd1543, %rd1542, %rd1476;
	add.s64 	%rd1544, %rd1452, %rd1197;
	add.s64 	%rd1545, %rd1544, %rd2752;
	add.s64 	%rd1546, %rd1545, %rd1543;
	add.s64 	%rd1547, %rd1546, %rd1540;
	add.s64 	%rd1548, %rd1547, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2920,%dummy}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2921}, %rd1535;
	}
	shf.r.wrap.b32 	%r2922, %r2921, %r2920, 28;
	shf.r.wrap.b32 	%r2923, %r2920, %r2921, 28;
	mov.b64 	%rd1549, {%r2923, %r2922};
	shf.l.wrap.b32 	%r2924, %r2920, %r2921, 30;
	shf.l.wrap.b32 	%r2925, %r2921, %r2920, 30;
	mov.b64 	%rd1550, {%r2925, %r2924};
	xor.b64  	%rd1551, %rd1550, %rd1549;
	shf.l.wrap.b32 	%r2926, %r2920, %r2921, 25;
	shf.l.wrap.b32 	%r2927, %r2921, %r2920, 25;
	mov.b64 	%rd1552, {%r2927, %r2926};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	xor.b64  	%rd1554, %rd1535, %rd1487;
	xor.b64  	%rd1555, %rd1535, %rd1511;
	and.b64  	%rd1556, %rd1555, %rd1554;
	xor.b64  	%rd1557, %rd1556, %rd1535;
	add.s64 	%rd1558, %rd1547, %rd1557;
	add.s64 	%rd1559, %rd1558, %rd1553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2928,%dummy}, %rd1548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2929}, %rd1548;
	}
	shf.r.wrap.b32 	%r2930, %r2929, %r2928, 14;
	shf.r.wrap.b32 	%r2931, %r2928, %r2929, 14;
	mov.b64 	%rd1560, {%r2931, %r2930};
	shf.r.wrap.b32 	%r2932, %r2929, %r2928, 18;
	shf.r.wrap.b32 	%r2933, %r2928, %r2929, 18;
	mov.b64 	%rd1561, {%r2933, %r2932};
	xor.b64  	%rd1562, %rd1561, %rd1560;
	shf.l.wrap.b32 	%r2934, %r2928, %r2929, 23;
	shf.l.wrap.b32 	%r2935, %r2929, %r2928, 23;
	mov.b64 	%rd1563, {%r2935, %r2934};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	xor.b64  	%rd1565, %rd1524, %rd1500;
	and.b64  	%rd1566, %rd1548, %rd1565;
	xor.b64  	%rd1567, %rd1566, %rd1500;
	add.s64 	%rd1568, %rd1476, %rd1210;
	add.s64 	%rd1569, %rd1568, %rd2753;
	add.s64 	%rd1570, %rd1569, %rd1567;
	add.s64 	%rd1571, %rd1570, %rd1564;
	add.s64 	%rd1572, %rd1571, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2936,%dummy}, %rd1559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2937}, %rd1559;
	}
	shf.r.wrap.b32 	%r2938, %r2937, %r2936, 28;
	shf.r.wrap.b32 	%r2939, %r2936, %r2937, 28;
	mov.b64 	%rd1573, {%r2939, %r2938};
	shf.l.wrap.b32 	%r2940, %r2936, %r2937, 30;
	shf.l.wrap.b32 	%r2941, %r2937, %r2936, 30;
	mov.b64 	%rd1574, {%r2941, %r2940};
	xor.b64  	%rd1575, %rd1574, %rd1573;
	shf.l.wrap.b32 	%r2942, %r2936, %r2937, 25;
	shf.l.wrap.b32 	%r2943, %r2937, %r2936, 25;
	mov.b64 	%rd1576, {%r2943, %r2942};
	xor.b64  	%rd1577, %rd1575, %rd1576;
	xor.b64  	%rd1578, %rd1559, %rd1511;
	xor.b64  	%rd1579, %rd1559, %rd1535;
	and.b64  	%rd1580, %rd1579, %rd1578;
	xor.b64  	%rd1581, %rd1580, %rd1559;
	add.s64 	%rd1582, %rd1571, %rd1581;
	add.s64 	%rd1583, %rd1582, %rd1577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2944,%dummy}, %rd1572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2945}, %rd1572;
	}
	shf.r.wrap.b32 	%r2946, %r2945, %r2944, 14;
	shf.r.wrap.b32 	%r2947, %r2944, %r2945, 14;
	mov.b64 	%rd1584, {%r2947, %r2946};
	shf.r.wrap.b32 	%r2948, %r2945, %r2944, 18;
	shf.r.wrap.b32 	%r2949, %r2944, %r2945, 18;
	mov.b64 	%rd1585, {%r2949, %r2948};
	xor.b64  	%rd1586, %rd1585, %rd1584;
	shf.l.wrap.b32 	%r2950, %r2944, %r2945, 23;
	shf.l.wrap.b32 	%r2951, %r2945, %r2944, 23;
	mov.b64 	%rd1587, {%r2951, %r2950};
	xor.b64  	%rd1588, %rd1586, %rd1587;
	xor.b64  	%rd1589, %rd1548, %rd1524;
	and.b64  	%rd1590, %rd1572, %rd1589;
	xor.b64  	%rd1591, %rd1590, %rd1524;
	add.s64 	%rd1592, %rd1500, %rd1223;
	add.s64 	%rd1593, %rd1592, %rd2754;
	add.s64 	%rd1594, %rd1593, %rd1591;
	add.s64 	%rd1595, %rd1594, %rd1588;
	add.s64 	%rd1596, %rd1595, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2952,%dummy}, %rd1583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2953}, %rd1583;
	}
	shf.r.wrap.b32 	%r2954, %r2953, %r2952, 28;
	shf.r.wrap.b32 	%r2955, %r2952, %r2953, 28;
	mov.b64 	%rd1597, {%r2955, %r2954};
	shf.l.wrap.b32 	%r2956, %r2952, %r2953, 30;
	shf.l.wrap.b32 	%r2957, %r2953, %r2952, 30;
	mov.b64 	%rd1598, {%r2957, %r2956};
	xor.b64  	%rd1599, %rd1598, %rd1597;
	shf.l.wrap.b32 	%r2958, %r2952, %r2953, 25;
	shf.l.wrap.b32 	%r2959, %r2953, %r2952, 25;
	mov.b64 	%rd1600, {%r2959, %r2958};
	xor.b64  	%rd1601, %rd1599, %rd1600;
	xor.b64  	%rd1602, %rd1583, %rd1535;
	xor.b64  	%rd1603, %rd1583, %rd1559;
	and.b64  	%rd1604, %rd1603, %rd1602;
	xor.b64  	%rd1605, %rd1604, %rd1583;
	add.s64 	%rd1606, %rd1595, %rd1605;
	add.s64 	%rd1607, %rd1606, %rd1601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2960,%dummy}, %rd1210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2961}, %rd1210;
	}
	shf.r.wrap.b32 	%r2962, %r2961, %r2960, 19;
	shf.r.wrap.b32 	%r2963, %r2960, %r2961, 19;
	mov.b64 	%rd1608, {%r2963, %r2962};
	shf.l.wrap.b32 	%r2964, %r2960, %r2961, 3;
	shf.l.wrap.b32 	%r2965, %r2961, %r2960, 3;
	mov.b64 	%rd1609, {%r2965, %r2964};
	shr.u64 	%rd1610, %rd1210, 6;
	xor.b64  	%rd1611, %rd1608, %rd1610;
	xor.b64  	%rd1612, %rd1611, %rd1609;
	shf.r.wrap.b32 	%r2966, %r2575, %r2574, 1;
	shf.r.wrap.b32 	%r2967, %r2574, %r2575, 1;
	mov.b64 	%rd1613, {%r2967, %r2966};
	shf.r.wrap.b32 	%r2968, %r2575, %r2574, 8;
	shf.r.wrap.b32 	%r2969, %r2574, %r2575, 8;
	mov.b64 	%rd1614, {%r2969, %r2968};
	shr.u64 	%rd1615, %rd1041, 7;
	xor.b64  	%rd1616, %rd1613, %rd1615;
	xor.b64  	%rd1617, %rd1616, %rd1614;
	add.s64 	%rd1618, %rd1028, %rd1145;
	add.s64 	%rd1619, %rd1618, %rd1612;
	add.s64 	%rd1620, %rd1619, %rd1617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd1223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd1223;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 19;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 19;
	mov.b64 	%rd1621, {%r2973, %r2972};
	shf.l.wrap.b32 	%r2974, %r2970, %r2971, 3;
	shf.l.wrap.b32 	%r2975, %r2971, %r2970, 3;
	mov.b64 	%rd1622, {%r2975, %r2974};
	shr.u64 	%rd1623, %rd1223, 6;
	xor.b64  	%rd1624, %rd1621, %rd1623;
	xor.b64  	%rd1625, %rd1624, %rd1622;
	shf.r.wrap.b32 	%r2976, %r2585, %r2584, 1;
	shf.r.wrap.b32 	%r2977, %r2584, %r2585, 1;
	mov.b64 	%rd1626, {%r2977, %r2976};
	shf.r.wrap.b32 	%r2978, %r2585, %r2584, 8;
	shf.r.wrap.b32 	%r2979, %r2584, %r2585, 8;
	mov.b64 	%rd1627, {%r2979, %r2978};
	shr.u64 	%rd1628, %rd1054, 7;
	xor.b64  	%rd1629, %rd1626, %rd1628;
	xor.b64  	%rd1630, %rd1629, %rd1627;
	add.s64 	%rd1631, %rd1041, %rd1158;
	add.s64 	%rd1632, %rd1631, %rd1625;
	add.s64 	%rd1633, %rd1632, %rd1630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2980,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2981}, %rd1620;
	}
	shf.r.wrap.b32 	%r2982, %r2981, %r2980, 19;
	shf.r.wrap.b32 	%r2983, %r2980, %r2981, 19;
	mov.b64 	%rd1634, {%r2983, %r2982};
	shf.l.wrap.b32 	%r2984, %r2980, %r2981, 3;
	shf.l.wrap.b32 	%r2985, %r2981, %r2980, 3;
	mov.b64 	%rd1635, {%r2985, %r2984};
	shr.u64 	%rd1636, %rd1620, 6;
	xor.b64  	%rd1637, %rd1634, %rd1636;
	xor.b64  	%rd1638, %rd1637, %rd1635;
	shf.r.wrap.b32 	%r2986, %r2595, %r2594, 1;
	shf.r.wrap.b32 	%r2987, %r2594, %r2595, 1;
	mov.b64 	%rd1639, {%r2987, %r2986};
	shf.r.wrap.b32 	%r2988, %r2595, %r2594, 8;
	shf.r.wrap.b32 	%r2989, %r2594, %r2595, 8;
	mov.b64 	%rd1640, {%r2989, %r2988};
	shr.u64 	%rd1641, %rd1067, 7;
	xor.b64  	%rd1642, %rd1639, %rd1641;
	xor.b64  	%rd1643, %rd1642, %rd1640;
	add.s64 	%rd1644, %rd1054, %rd1171;
	add.s64 	%rd1645, %rd1644, %rd1638;
	add.s64 	%rd1646, %rd1645, %rd1643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2990,%dummy}, %rd1633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2991}, %rd1633;
	}
	shf.r.wrap.b32 	%r2992, %r2991, %r2990, 19;
	shf.r.wrap.b32 	%r2993, %r2990, %r2991, 19;
	mov.b64 	%rd1647, {%r2993, %r2992};
	shf.l.wrap.b32 	%r2994, %r2990, %r2991, 3;
	shf.l.wrap.b32 	%r2995, %r2991, %r2990, 3;
	mov.b64 	%rd1648, {%r2995, %r2994};
	shr.u64 	%rd1649, %rd1633, 6;
	xor.b64  	%rd1650, %rd1647, %rd1649;
	xor.b64  	%rd1651, %rd1650, %rd1648;
	shf.r.wrap.b32 	%r2996, %r2605, %r2604, 1;
	shf.r.wrap.b32 	%r2997, %r2604, %r2605, 1;
	mov.b64 	%rd1652, {%r2997, %r2996};
	shf.r.wrap.b32 	%r2998, %r2605, %r2604, 8;
	shf.r.wrap.b32 	%r2999, %r2604, %r2605, 8;
	mov.b64 	%rd1653, {%r2999, %r2998};
	shr.u64 	%rd1654, %rd1080, 7;
	xor.b64  	%rd1655, %rd1652, %rd1654;
	xor.b64  	%rd1656, %rd1655, %rd1653;
	add.s64 	%rd1657, %rd1067, %rd1184;
	add.s64 	%rd1658, %rd1657, %rd1651;
	add.s64 	%rd1659, %rd1658, %rd1656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3000,%dummy}, %rd1646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3001}, %rd1646;
	}
	shf.r.wrap.b32 	%r3002, %r3001, %r3000, 19;
	shf.r.wrap.b32 	%r3003, %r3000, %r3001, 19;
	mov.b64 	%rd1660, {%r3003, %r3002};
	shf.l.wrap.b32 	%r3004, %r3000, %r3001, 3;
	shf.l.wrap.b32 	%r3005, %r3001, %r3000, 3;
	mov.b64 	%rd1661, {%r3005, %r3004};
	shr.u64 	%rd1662, %rd1646, 6;
	xor.b64  	%rd1663, %rd1660, %rd1662;
	xor.b64  	%rd1664, %rd1663, %rd1661;
	shf.r.wrap.b32 	%r3006, %r2615, %r2614, 1;
	shf.r.wrap.b32 	%r3007, %r2614, %r2615, 1;
	mov.b64 	%rd1665, {%r3007, %r3006};
	shf.r.wrap.b32 	%r3008, %r2615, %r2614, 8;
	shf.r.wrap.b32 	%r3009, %r2614, %r2615, 8;
	mov.b64 	%rd1666, {%r3009, %r3008};
	shr.u64 	%rd1667, %rd1093, 7;
	xor.b64  	%rd1668, %rd1665, %rd1667;
	xor.b64  	%rd1669, %rd1668, %rd1666;
	add.s64 	%rd1670, %rd1080, %rd1197;
	add.s64 	%rd1671, %rd1670, %rd1664;
	add.s64 	%rd1672, %rd1671, %rd1669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3010,%dummy}, %rd1659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3011}, %rd1659;
	}
	shf.r.wrap.b32 	%r3012, %r3011, %r3010, 19;
	shf.r.wrap.b32 	%r3013, %r3010, %r3011, 19;
	mov.b64 	%rd1673, {%r3013, %r3012};
	shf.l.wrap.b32 	%r3014, %r3010, %r3011, 3;
	shf.l.wrap.b32 	%r3015, %r3011, %r3010, 3;
	mov.b64 	%rd1674, {%r3015, %r3014};
	shr.u64 	%rd1675, %rd1659, 6;
	xor.b64  	%rd1676, %rd1673, %rd1675;
	xor.b64  	%rd1677, %rd1676, %rd1674;
	shf.r.wrap.b32 	%r3016, %r2625, %r2624, 1;
	shf.r.wrap.b32 	%r3017, %r2624, %r2625, 1;
	mov.b64 	%rd1678, {%r3017, %r3016};
	shf.r.wrap.b32 	%r3018, %r2625, %r2624, 8;
	shf.r.wrap.b32 	%r3019, %r2624, %r2625, 8;
	mov.b64 	%rd1679, {%r3019, %r3018};
	shr.u64 	%rd1680, %rd1106, 7;
	xor.b64  	%rd1681, %rd1678, %rd1680;
	xor.b64  	%rd1682, %rd1681, %rd1679;
	add.s64 	%rd1683, %rd1093, %rd1210;
	add.s64 	%rd1684, %rd1683, %rd1677;
	add.s64 	%rd1685, %rd1684, %rd1682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3020,%dummy}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3021}, %rd1672;
	}
	shf.r.wrap.b32 	%r3022, %r3021, %r3020, 19;
	shf.r.wrap.b32 	%r3023, %r3020, %r3021, 19;
	mov.b64 	%rd1686, {%r3023, %r3022};
	shf.l.wrap.b32 	%r3024, %r3020, %r3021, 3;
	shf.l.wrap.b32 	%r3025, %r3021, %r3020, 3;
	mov.b64 	%rd1687, {%r3025, %r3024};
	shr.u64 	%rd1688, %rd1672, 6;
	xor.b64  	%rd1689, %rd1686, %rd1688;
	xor.b64  	%rd1690, %rd1689, %rd1687;
	shf.r.wrap.b32 	%r3026, %r2635, %r2634, 1;
	shf.r.wrap.b32 	%r3027, %r2634, %r2635, 1;
	mov.b64 	%rd1691, {%r3027, %r3026};
	shf.r.wrap.b32 	%r3028, %r2635, %r2634, 8;
	shf.r.wrap.b32 	%r3029, %r2634, %r2635, 8;
	mov.b64 	%rd1692, {%r3029, %r3028};
	shr.u64 	%rd1693, %rd1119, 7;
	xor.b64  	%rd1694, %rd1691, %rd1693;
	xor.b64  	%rd1695, %rd1694, %rd1692;
	add.s64 	%rd1696, %rd1106, %rd1223;
	add.s64 	%rd1697, %rd1696, %rd1690;
	add.s64 	%rd1698, %rd1697, %rd1695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3030,%dummy}, %rd1685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3031}, %rd1685;
	}
	shf.r.wrap.b32 	%r3032, %r3031, %r3030, 19;
	shf.r.wrap.b32 	%r3033, %r3030, %r3031, 19;
	mov.b64 	%rd1699, {%r3033, %r3032};
	shf.l.wrap.b32 	%r3034, %r3030, %r3031, 3;
	shf.l.wrap.b32 	%r3035, %r3031, %r3030, 3;
	mov.b64 	%rd1700, {%r3035, %r3034};
	shr.u64 	%rd1701, %rd1685, 6;
	xor.b64  	%rd1702, %rd1699, %rd1701;
	xor.b64  	%rd1703, %rd1702, %rd1700;
	shf.r.wrap.b32 	%r3036, %r2645, %r2644, 1;
	shf.r.wrap.b32 	%r3037, %r2644, %r2645, 1;
	mov.b64 	%rd1704, {%r3037, %r3036};
	shf.r.wrap.b32 	%r3038, %r2645, %r2644, 8;
	shf.r.wrap.b32 	%r3039, %r2644, %r2645, 8;
	mov.b64 	%rd1705, {%r3039, %r3038};
	shr.u64 	%rd1706, %rd1132, 7;
	xor.b64  	%rd1707, %rd1704, %rd1706;
	xor.b64  	%rd1708, %rd1707, %rd1705;
	add.s64 	%rd1709, %rd1620, %rd1119;
	add.s64 	%rd1710, %rd1709, %rd1703;
	add.s64 	%rd1711, %rd1710, %rd1708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3040,%dummy}, %rd1698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3041}, %rd1698;
	}
	shf.r.wrap.b32 	%r3042, %r3041, %r3040, 19;
	shf.r.wrap.b32 	%r3043, %r3040, %r3041, 19;
	mov.b64 	%rd1712, {%r3043, %r3042};
	shf.l.wrap.b32 	%r3044, %r3040, %r3041, 3;
	shf.l.wrap.b32 	%r3045, %r3041, %r3040, 3;
	mov.b64 	%rd1713, {%r3045, %r3044};
	shr.u64 	%rd1714, %rd1698, 6;
	xor.b64  	%rd1715, %rd1712, %rd1714;
	xor.b64  	%rd1716, %rd1715, %rd1713;
	shf.r.wrap.b32 	%r3046, %r2655, %r2654, 1;
	shf.r.wrap.b32 	%r3047, %r2654, %r2655, 1;
	mov.b64 	%rd1717, {%r3047, %r3046};
	shf.r.wrap.b32 	%r3048, %r2655, %r2654, 8;
	shf.r.wrap.b32 	%r3049, %r2654, %r2655, 8;
	mov.b64 	%rd1718, {%r3049, %r3048};
	shr.u64 	%rd1719, %rd1145, 7;
	xor.b64  	%rd1720, %rd1717, %rd1719;
	xor.b64  	%rd1721, %rd1720, %rd1718;
	add.s64 	%rd1722, %rd1633, %rd1132;
	add.s64 	%rd1723, %rd1722, %rd1716;
	add.s64 	%rd1724, %rd1723, %rd1721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3050,%dummy}, %rd1711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3051}, %rd1711;
	}
	shf.r.wrap.b32 	%r3052, %r3051, %r3050, 19;
	shf.r.wrap.b32 	%r3053, %r3050, %r3051, 19;
	mov.b64 	%rd1725, {%r3053, %r3052};
	shf.l.wrap.b32 	%r3054, %r3050, %r3051, 3;
	shf.l.wrap.b32 	%r3055, %r3051, %r3050, 3;
	mov.b64 	%rd1726, {%r3055, %r3054};
	shr.u64 	%rd1727, %rd1711, 6;
	xor.b64  	%rd1728, %rd1725, %rd1727;
	xor.b64  	%rd1729, %rd1728, %rd1726;
	shf.r.wrap.b32 	%r3056, %r2665, %r2664, 1;
	shf.r.wrap.b32 	%r3057, %r2664, %r2665, 1;
	mov.b64 	%rd1730, {%r3057, %r3056};
	shf.r.wrap.b32 	%r3058, %r2665, %r2664, 8;
	shf.r.wrap.b32 	%r3059, %r2664, %r2665, 8;
	mov.b64 	%rd1731, {%r3059, %r3058};
	shr.u64 	%rd1732, %rd1158, 7;
	xor.b64  	%rd1733, %rd1730, %rd1732;
	xor.b64  	%rd1734, %rd1733, %rd1731;
	add.s64 	%rd1735, %rd1646, %rd1145;
	add.s64 	%rd1736, %rd1735, %rd1729;
	add.s64 	%rd1737, %rd1736, %rd1734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3060,%dummy}, %rd1724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3061}, %rd1724;
	}
	shf.r.wrap.b32 	%r3062, %r3061, %r3060, 19;
	shf.r.wrap.b32 	%r3063, %r3060, %r3061, 19;
	mov.b64 	%rd1738, {%r3063, %r3062};
	shf.l.wrap.b32 	%r3064, %r3060, %r3061, 3;
	shf.l.wrap.b32 	%r3065, %r3061, %r3060, 3;
	mov.b64 	%rd1739, {%r3065, %r3064};
	shr.u64 	%rd1740, %rd1724, 6;
	xor.b64  	%rd1741, %rd1738, %rd1740;
	xor.b64  	%rd1742, %rd1741, %rd1739;
	shf.r.wrap.b32 	%r3066, %r2675, %r2674, 1;
	shf.r.wrap.b32 	%r3067, %r2674, %r2675, 1;
	mov.b64 	%rd1743, {%r3067, %r3066};
	shf.r.wrap.b32 	%r3068, %r2675, %r2674, 8;
	shf.r.wrap.b32 	%r3069, %r2674, %r2675, 8;
	mov.b64 	%rd1744, {%r3069, %r3068};
	shr.u64 	%rd1745, %rd1171, 7;
	xor.b64  	%rd1746, %rd1743, %rd1745;
	xor.b64  	%rd1747, %rd1746, %rd1744;
	add.s64 	%rd1748, %rd1659, %rd1158;
	add.s64 	%rd1749, %rd1748, %rd1742;
	add.s64 	%rd1750, %rd1749, %rd1747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3070,%dummy}, %rd1737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3071}, %rd1737;
	}
	shf.r.wrap.b32 	%r3072, %r3071, %r3070, 19;
	shf.r.wrap.b32 	%r3073, %r3070, %r3071, 19;
	mov.b64 	%rd1751, {%r3073, %r3072};
	shf.l.wrap.b32 	%r3074, %r3070, %r3071, 3;
	shf.l.wrap.b32 	%r3075, %r3071, %r3070, 3;
	mov.b64 	%rd1752, {%r3075, %r3074};
	shr.u64 	%rd1753, %rd1737, 6;
	xor.b64  	%rd1754, %rd1751, %rd1753;
	xor.b64  	%rd1755, %rd1754, %rd1752;
	shf.r.wrap.b32 	%r3076, %r2685, %r2684, 1;
	shf.r.wrap.b32 	%r3077, %r2684, %r2685, 1;
	mov.b64 	%rd1756, {%r3077, %r3076};
	shf.r.wrap.b32 	%r3078, %r2685, %r2684, 8;
	shf.r.wrap.b32 	%r3079, %r2684, %r2685, 8;
	mov.b64 	%rd1757, {%r3079, %r3078};
	shr.u64 	%rd1758, %rd1184, 7;
	xor.b64  	%rd1759, %rd1756, %rd1758;
	xor.b64  	%rd1760, %rd1759, %rd1757;
	add.s64 	%rd1761, %rd1672, %rd1171;
	add.s64 	%rd1762, %rd1761, %rd1755;
	add.s64 	%rd1763, %rd1762, %rd1760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3080,%dummy}, %rd1750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3081}, %rd1750;
	}
	shf.r.wrap.b32 	%r3082, %r3081, %r3080, 19;
	shf.r.wrap.b32 	%r3083, %r3080, %r3081, 19;
	mov.b64 	%rd1764, {%r3083, %r3082};
	shf.l.wrap.b32 	%r3084, %r3080, %r3081, 3;
	shf.l.wrap.b32 	%r3085, %r3081, %r3080, 3;
	mov.b64 	%rd1765, {%r3085, %r3084};
	shr.u64 	%rd1766, %rd1750, 6;
	xor.b64  	%rd1767, %rd1764, %rd1766;
	xor.b64  	%rd1768, %rd1767, %rd1765;
	shf.r.wrap.b32 	%r3086, %r2695, %r2694, 1;
	shf.r.wrap.b32 	%r3087, %r2694, %r2695, 1;
	mov.b64 	%rd1769, {%r3087, %r3086};
	shf.r.wrap.b32 	%r3088, %r2695, %r2694, 8;
	shf.r.wrap.b32 	%r3089, %r2694, %r2695, 8;
	mov.b64 	%rd1770, {%r3089, %r3088};
	shr.u64 	%rd1771, %rd1197, 7;
	xor.b64  	%rd1772, %rd1769, %rd1771;
	xor.b64  	%rd1773, %rd1772, %rd1770;
	add.s64 	%rd1774, %rd1685, %rd1184;
	add.s64 	%rd1775, %rd1774, %rd1768;
	add.s64 	%rd1776, %rd1775, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3090,%dummy}, %rd1763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3091}, %rd1763;
	}
	shf.r.wrap.b32 	%r3092, %r3091, %r3090, 19;
	shf.r.wrap.b32 	%r3093, %r3090, %r3091, 19;
	mov.b64 	%rd1777, {%r3093, %r3092};
	shf.l.wrap.b32 	%r3094, %r3090, %r3091, 3;
	shf.l.wrap.b32 	%r3095, %r3091, %r3090, 3;
	mov.b64 	%rd1778, {%r3095, %r3094};
	shr.u64 	%rd1779, %rd1763, 6;
	xor.b64  	%rd1780, %rd1777, %rd1779;
	xor.b64  	%rd1781, %rd1780, %rd1778;
	shf.r.wrap.b32 	%r3096, %r2961, %r2960, 1;
	shf.r.wrap.b32 	%r3097, %r2960, %r2961, 1;
	mov.b64 	%rd1782, {%r3097, %r3096};
	shf.r.wrap.b32 	%r3098, %r2961, %r2960, 8;
	shf.r.wrap.b32 	%r3099, %r2960, %r2961, 8;
	mov.b64 	%rd1783, {%r3099, %r3098};
	shr.u64 	%rd1784, %rd1210, 7;
	xor.b64  	%rd1785, %rd1782, %rd1784;
	xor.b64  	%rd1786, %rd1785, %rd1783;
	add.s64 	%rd1787, %rd1698, %rd1197;
	add.s64 	%rd1788, %rd1787, %rd1781;
	add.s64 	%rd1789, %rd1788, %rd1786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3100,%dummy}, %rd1776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3101}, %rd1776;
	}
	shf.r.wrap.b32 	%r3102, %r3101, %r3100, 19;
	shf.r.wrap.b32 	%r3103, %r3100, %r3101, 19;
	mov.b64 	%rd1790, {%r3103, %r3102};
	shf.l.wrap.b32 	%r3104, %r3100, %r3101, 3;
	shf.l.wrap.b32 	%r3105, %r3101, %r3100, 3;
	mov.b64 	%rd1791, {%r3105, %r3104};
	shr.u64 	%rd1792, %rd1776, 6;
	xor.b64  	%rd1793, %rd1790, %rd1792;
	xor.b64  	%rd1794, %rd1793, %rd1791;
	shf.r.wrap.b32 	%r3106, %r2971, %r2970, 1;
	shf.r.wrap.b32 	%r3107, %r2970, %r2971, 1;
	mov.b64 	%rd1795, {%r3107, %r3106};
	shf.r.wrap.b32 	%r3108, %r2971, %r2970, 8;
	shf.r.wrap.b32 	%r3109, %r2970, %r2971, 8;
	mov.b64 	%rd1796, {%r3109, %r3108};
	shr.u64 	%rd1797, %rd1223, 7;
	xor.b64  	%rd1798, %rd1795, %rd1797;
	xor.b64  	%rd1799, %rd1798, %rd1796;
	add.s64 	%rd1800, %rd1711, %rd1210;
	add.s64 	%rd1801, %rd1800, %rd1794;
	add.s64 	%rd1802, %rd1801, %rd1799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3110,%dummy}, %rd1789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3111}, %rd1789;
	}
	shf.r.wrap.b32 	%r3112, %r3111, %r3110, 19;
	shf.r.wrap.b32 	%r3113, %r3110, %r3111, 19;
	mov.b64 	%rd1803, {%r3113, %r3112};
	shf.l.wrap.b32 	%r3114, %r3110, %r3111, 3;
	shf.l.wrap.b32 	%r3115, %r3111, %r3110, 3;
	mov.b64 	%rd1804, {%r3115, %r3114};
	shr.u64 	%rd1805, %rd1789, 6;
	xor.b64  	%rd1806, %rd1803, %rd1805;
	xor.b64  	%rd1807, %rd1806, %rd1804;
	shf.r.wrap.b32 	%r3116, %r2981, %r2980, 1;
	shf.r.wrap.b32 	%r3117, %r2980, %r2981, 1;
	mov.b64 	%rd1808, {%r3117, %r3116};
	shf.r.wrap.b32 	%r3118, %r2981, %r2980, 8;
	shf.r.wrap.b32 	%r3119, %r2980, %r2981, 8;
	mov.b64 	%rd1809, {%r3119, %r3118};
	shr.u64 	%rd1810, %rd1620, 7;
	xor.b64  	%rd1811, %rd1808, %rd1810;
	xor.b64  	%rd1812, %rd1811, %rd1809;
	add.s64 	%rd1813, %rd1724, %rd1223;
	add.s64 	%rd1814, %rd1813, %rd1807;
	add.s64 	%rd1815, %rd1814, %rd1812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3120,%dummy}, %rd1596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3121}, %rd1596;
	}
	shf.r.wrap.b32 	%r3122, %r3121, %r3120, 14;
	shf.r.wrap.b32 	%r3123, %r3120, %r3121, 14;
	mov.b64 	%rd1816, {%r3123, %r3122};
	shf.r.wrap.b32 	%r3124, %r3121, %r3120, 18;
	shf.r.wrap.b32 	%r3125, %r3120, %r3121, 18;
	mov.b64 	%rd1817, {%r3125, %r3124};
	xor.b64  	%rd1818, %rd1817, %rd1816;
	shf.l.wrap.b32 	%r3126, %r3120, %r3121, 23;
	shf.l.wrap.b32 	%r3127, %r3121, %r3120, 23;
	mov.b64 	%rd1819, {%r3127, %r3126};
	xor.b64  	%rd1820, %rd1818, %rd1819;
	xor.b64  	%rd1821, %rd1548, %rd1572;
	and.b64  	%rd1822, %rd1821, %rd1596;
	xor.b64  	%rd1823, %rd1822, %rd1548;
	add.s64 	%rd1824, %rd1823, %rd1524;
	add.s64 	%rd1825, %rd1824, %rd1620;
	add.s64 	%rd1826, %rd1825, %rd2755;
	add.s64 	%rd1827, %rd1826, %rd1820;
	add.s64 	%rd1828, %rd1827, %rd1535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3128,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3129}, %rd1607;
	}
	shf.r.wrap.b32 	%r3130, %r3129, %r3128, 28;
	shf.r.wrap.b32 	%r3131, %r3128, %r3129, 28;
	mov.b64 	%rd1829, {%r3131, %r3130};
	shf.l.wrap.b32 	%r3132, %r3128, %r3129, 30;
	shf.l.wrap.b32 	%r3133, %r3129, %r3128, 30;
	mov.b64 	%rd1830, {%r3133, %r3132};
	xor.b64  	%rd1831, %rd1830, %rd1829;
	shf.l.wrap.b32 	%r3134, %r3128, %r3129, 25;
	shf.l.wrap.b32 	%r3135, %r3129, %r3128, 25;
	mov.b64 	%rd1832, {%r3135, %r3134};
	xor.b64  	%rd1833, %rd1831, %rd1832;
	xor.b64  	%rd1834, %rd1607, %rd1559;
	xor.b64  	%rd1835, %rd1607, %rd1583;
	and.b64  	%rd1836, %rd1835, %rd1834;
	xor.b64  	%rd1837, %rd1836, %rd1607;
	add.s64 	%rd1838, %rd1827, %rd1837;
	add.s64 	%rd1839, %rd1838, %rd1833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3136,%dummy}, %rd1828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3137}, %rd1828;
	}
	shf.r.wrap.b32 	%r3138, %r3137, %r3136, 14;
	shf.r.wrap.b32 	%r3139, %r3136, %r3137, 14;
	mov.b64 	%rd1840, {%r3139, %r3138};
	shf.r.wrap.b32 	%r3140, %r3137, %r3136, 18;
	shf.r.wrap.b32 	%r3141, %r3136, %r3137, 18;
	mov.b64 	%rd1841, {%r3141, %r3140};
	xor.b64  	%rd1842, %rd1841, %rd1840;
	shf.l.wrap.b32 	%r3142, %r3136, %r3137, 23;
	shf.l.wrap.b32 	%r3143, %r3137, %r3136, 23;
	mov.b64 	%rd1843, {%r3143, %r3142};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	xor.b64  	%rd1845, %rd1572, %rd1596;
	and.b64  	%rd1846, %rd1828, %rd1845;
	xor.b64  	%rd1847, %rd1846, %rd1572;
	add.s64 	%rd1848, %rd1633, %rd1548;
	add.s64 	%rd1849, %rd1848, %rd2756;
	add.s64 	%rd1850, %rd1849, %rd1847;
	add.s64 	%rd1851, %rd1850, %rd1844;
	add.s64 	%rd1852, %rd1851, %rd1559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3144,%dummy}, %rd1839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3145}, %rd1839;
	}
	shf.r.wrap.b32 	%r3146, %r3145, %r3144, 28;
	shf.r.wrap.b32 	%r3147, %r3144, %r3145, 28;
	mov.b64 	%rd1853, {%r3147, %r3146};
	shf.l.wrap.b32 	%r3148, %r3144, %r3145, 30;
	shf.l.wrap.b32 	%r3149, %r3145, %r3144, 30;
	mov.b64 	%rd1854, {%r3149, %r3148};
	xor.b64  	%rd1855, %rd1854, %rd1853;
	shf.l.wrap.b32 	%r3150, %r3144, %r3145, 25;
	shf.l.wrap.b32 	%r3151, %r3145, %r3144, 25;
	mov.b64 	%rd1856, {%r3151, %r3150};
	xor.b64  	%rd1857, %rd1855, %rd1856;
	xor.b64  	%rd1858, %rd1839, %rd1583;
	xor.b64  	%rd1859, %rd1839, %rd1607;
	and.b64  	%rd1860, %rd1859, %rd1858;
	xor.b64  	%rd1861, %rd1860, %rd1839;
	add.s64 	%rd1862, %rd1851, %rd1861;
	add.s64 	%rd1863, %rd1862, %rd1857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3152,%dummy}, %rd1852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3153}, %rd1852;
	}
	shf.r.wrap.b32 	%r3154, %r3153, %r3152, 14;
	shf.r.wrap.b32 	%r3155, %r3152, %r3153, 14;
	mov.b64 	%rd1864, {%r3155, %r3154};
	shf.r.wrap.b32 	%r3156, %r3153, %r3152, 18;
	shf.r.wrap.b32 	%r3157, %r3152, %r3153, 18;
	mov.b64 	%rd1865, {%r3157, %r3156};
	xor.b64  	%rd1866, %rd1865, %rd1864;
	shf.l.wrap.b32 	%r3158, %r3152, %r3153, 23;
	shf.l.wrap.b32 	%r3159, %r3153, %r3152, 23;
	mov.b64 	%rd1867, {%r3159, %r3158};
	xor.b64  	%rd1868, %rd1866, %rd1867;
	xor.b64  	%rd1869, %rd1828, %rd1596;
	and.b64  	%rd1870, %rd1852, %rd1869;
	xor.b64  	%rd1871, %rd1870, %rd1596;
	add.s64 	%rd1872, %rd1646, %rd1572;
	add.s64 	%rd1873, %rd1872, %rd2757;
	add.s64 	%rd1874, %rd1873, %rd1871;
	add.s64 	%rd1875, %rd1874, %rd1868;
	add.s64 	%rd1876, %rd1875, %rd1583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3160,%dummy}, %rd1863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3161}, %rd1863;
	}
	shf.r.wrap.b32 	%r3162, %r3161, %r3160, 28;
	shf.r.wrap.b32 	%r3163, %r3160, %r3161, 28;
	mov.b64 	%rd1877, {%r3163, %r3162};
	shf.l.wrap.b32 	%r3164, %r3160, %r3161, 30;
	shf.l.wrap.b32 	%r3165, %r3161, %r3160, 30;
	mov.b64 	%rd1878, {%r3165, %r3164};
	xor.b64  	%rd1879, %rd1878, %rd1877;
	shf.l.wrap.b32 	%r3166, %r3160, %r3161, 25;
	shf.l.wrap.b32 	%r3167, %r3161, %r3160, 25;
	mov.b64 	%rd1880, {%r3167, %r3166};
	xor.b64  	%rd1881, %rd1879, %rd1880;
	xor.b64  	%rd1882, %rd1863, %rd1607;
	xor.b64  	%rd1883, %rd1863, %rd1839;
	and.b64  	%rd1884, %rd1883, %rd1882;
	xor.b64  	%rd1885, %rd1884, %rd1863;
	add.s64 	%rd1886, %rd1875, %rd1885;
	add.s64 	%rd1887, %rd1886, %rd1881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3168,%dummy}, %rd1876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3169}, %rd1876;
	}
	shf.r.wrap.b32 	%r3170, %r3169, %r3168, 14;
	shf.r.wrap.b32 	%r3171, %r3168, %r3169, 14;
	mov.b64 	%rd1888, {%r3171, %r3170};
	shf.r.wrap.b32 	%r3172, %r3169, %r3168, 18;
	shf.r.wrap.b32 	%r3173, %r3168, %r3169, 18;
	mov.b64 	%rd1889, {%r3173, %r3172};
	xor.b64  	%rd1890, %rd1889, %rd1888;
	shf.l.wrap.b32 	%r3174, %r3168, %r3169, 23;
	shf.l.wrap.b32 	%r3175, %r3169, %r3168, 23;
	mov.b64 	%rd1891, {%r3175, %r3174};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	xor.b64  	%rd1893, %rd1852, %rd1828;
	and.b64  	%rd1894, %rd1876, %rd1893;
	xor.b64  	%rd1895, %rd1894, %rd1828;
	add.s64 	%rd1896, %rd1659, %rd1596;
	add.s64 	%rd1897, %rd1896, %rd2758;
	add.s64 	%rd1898, %rd1897, %rd1895;
	add.s64 	%rd1899, %rd1898, %rd1892;
	add.s64 	%rd1900, %rd1899, %rd1607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3176,%dummy}, %rd1887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3177}, %rd1887;
	}
	shf.r.wrap.b32 	%r3178, %r3177, %r3176, 28;
	shf.r.wrap.b32 	%r3179, %r3176, %r3177, 28;
	mov.b64 	%rd1901, {%r3179, %r3178};
	shf.l.wrap.b32 	%r3180, %r3176, %r3177, 30;
	shf.l.wrap.b32 	%r3181, %r3177, %r3176, 30;
	mov.b64 	%rd1902, {%r3181, %r3180};
	xor.b64  	%rd1903, %rd1902, %rd1901;
	shf.l.wrap.b32 	%r3182, %r3176, %r3177, 25;
	shf.l.wrap.b32 	%r3183, %r3177, %r3176, 25;
	mov.b64 	%rd1904, {%r3183, %r3182};
	xor.b64  	%rd1905, %rd1903, %rd1904;
	xor.b64  	%rd1906, %rd1887, %rd1839;
	xor.b64  	%rd1907, %rd1887, %rd1863;
	and.b64  	%rd1908, %rd1907, %rd1906;
	xor.b64  	%rd1909, %rd1908, %rd1887;
	add.s64 	%rd1910, %rd1899, %rd1909;
	add.s64 	%rd1911, %rd1910, %rd1905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3184,%dummy}, %rd1900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3185}, %rd1900;
	}
	shf.r.wrap.b32 	%r3186, %r3185, %r3184, 14;
	shf.r.wrap.b32 	%r3187, %r3184, %r3185, 14;
	mov.b64 	%rd1912, {%r3187, %r3186};
	shf.r.wrap.b32 	%r3188, %r3185, %r3184, 18;
	shf.r.wrap.b32 	%r3189, %r3184, %r3185, 18;
	mov.b64 	%rd1913, {%r3189, %r3188};
	xor.b64  	%rd1914, %rd1913, %rd1912;
	shf.l.wrap.b32 	%r3190, %r3184, %r3185, 23;
	shf.l.wrap.b32 	%r3191, %r3185, %r3184, 23;
	mov.b64 	%rd1915, {%r3191, %r3190};
	xor.b64  	%rd1916, %rd1914, %rd1915;
	xor.b64  	%rd1917, %rd1876, %rd1852;
	and.b64  	%rd1918, %rd1900, %rd1917;
	xor.b64  	%rd1919, %rd1918, %rd1852;
	add.s64 	%rd1920, %rd1828, %rd1672;
	add.s64 	%rd1921, %rd1920, %rd2759;
	add.s64 	%rd1922, %rd1921, %rd1919;
	add.s64 	%rd1923, %rd1922, %rd1916;
	add.s64 	%rd1924, %rd1923, %rd1839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3192,%dummy}, %rd1911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3193}, %rd1911;
	}
	shf.r.wrap.b32 	%r3194, %r3193, %r3192, 28;
	shf.r.wrap.b32 	%r3195, %r3192, %r3193, 28;
	mov.b64 	%rd1925, {%r3195, %r3194};
	shf.l.wrap.b32 	%r3196, %r3192, %r3193, 30;
	shf.l.wrap.b32 	%r3197, %r3193, %r3192, 30;
	mov.b64 	%rd1926, {%r3197, %r3196};
	xor.b64  	%rd1927, %rd1926, %rd1925;
	shf.l.wrap.b32 	%r3198, %r3192, %r3193, 25;
	shf.l.wrap.b32 	%r3199, %r3193, %r3192, 25;
	mov.b64 	%rd1928, {%r3199, %r3198};
	xor.b64  	%rd1929, %rd1927, %rd1928;
	xor.b64  	%rd1930, %rd1911, %rd1863;
	xor.b64  	%rd1931, %rd1911, %rd1887;
	and.b64  	%rd1932, %rd1931, %rd1930;
	xor.b64  	%rd1933, %rd1932, %rd1911;
	add.s64 	%rd1934, %rd1923, %rd1933;
	add.s64 	%rd1935, %rd1934, %rd1929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3200,%dummy}, %rd1924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3201}, %rd1924;
	}
	shf.r.wrap.b32 	%r3202, %r3201, %r3200, 14;
	shf.r.wrap.b32 	%r3203, %r3200, %r3201, 14;
	mov.b64 	%rd1936, {%r3203, %r3202};
	shf.r.wrap.b32 	%r3204, %r3201, %r3200, 18;
	shf.r.wrap.b32 	%r3205, %r3200, %r3201, 18;
	mov.b64 	%rd1937, {%r3205, %r3204};
	xor.b64  	%rd1938, %rd1937, %rd1936;
	shf.l.wrap.b32 	%r3206, %r3200, %r3201, 23;
	shf.l.wrap.b32 	%r3207, %r3201, %r3200, 23;
	mov.b64 	%rd1939, {%r3207, %r3206};
	xor.b64  	%rd1940, %rd1938, %rd1939;
	xor.b64  	%rd1941, %rd1900, %rd1876;
	and.b64  	%rd1942, %rd1924, %rd1941;
	xor.b64  	%rd1943, %rd1942, %rd1876;
	add.s64 	%rd1944, %rd1852, %rd1685;
	add.s64 	%rd1945, %rd1944, %rd2760;
	add.s64 	%rd1946, %rd1945, %rd1943;
	add.s64 	%rd1947, %rd1946, %rd1940;
	add.s64 	%rd1948, %rd1947, %rd1863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3208,%dummy}, %rd1935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3209}, %rd1935;
	}
	shf.r.wrap.b32 	%r3210, %r3209, %r3208, 28;
	shf.r.wrap.b32 	%r3211, %r3208, %r3209, 28;
	mov.b64 	%rd1949, {%r3211, %r3210};
	shf.l.wrap.b32 	%r3212, %r3208, %r3209, 30;
	shf.l.wrap.b32 	%r3213, %r3209, %r3208, 30;
	mov.b64 	%rd1950, {%r3213, %r3212};
	xor.b64  	%rd1951, %rd1950, %rd1949;
	shf.l.wrap.b32 	%r3214, %r3208, %r3209, 25;
	shf.l.wrap.b32 	%r3215, %r3209, %r3208, 25;
	mov.b64 	%rd1952, {%r3215, %r3214};
	xor.b64  	%rd1953, %rd1951, %rd1952;
	xor.b64  	%rd1954, %rd1935, %rd1887;
	xor.b64  	%rd1955, %rd1935, %rd1911;
	and.b64  	%rd1956, %rd1955, %rd1954;
	xor.b64  	%rd1957, %rd1956, %rd1935;
	add.s64 	%rd1958, %rd1947, %rd1957;
	add.s64 	%rd1959, %rd1958, %rd1953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3216,%dummy}, %rd1948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3217}, %rd1948;
	}
	shf.r.wrap.b32 	%r3218, %r3217, %r3216, 14;
	shf.r.wrap.b32 	%r3219, %r3216, %r3217, 14;
	mov.b64 	%rd1960, {%r3219, %r3218};
	shf.r.wrap.b32 	%r3220, %r3217, %r3216, 18;
	shf.r.wrap.b32 	%r3221, %r3216, %r3217, 18;
	mov.b64 	%rd1961, {%r3221, %r3220};
	xor.b64  	%rd1962, %rd1961, %rd1960;
	shf.l.wrap.b32 	%r3222, %r3216, %r3217, 23;
	shf.l.wrap.b32 	%r3223, %r3217, %r3216, 23;
	mov.b64 	%rd1963, {%r3223, %r3222};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	xor.b64  	%rd1965, %rd1924, %rd1900;
	and.b64  	%rd1966, %rd1948, %rd1965;
	xor.b64  	%rd1967, %rd1966, %rd1900;
	add.s64 	%rd1968, %rd1876, %rd1698;
	add.s64 	%rd1969, %rd1968, %rd2761;
	add.s64 	%rd1970, %rd1969, %rd1967;
	add.s64 	%rd1971, %rd1970, %rd1964;
	add.s64 	%rd1972, %rd1971, %rd1887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3224,%dummy}, %rd1959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3225}, %rd1959;
	}
	shf.r.wrap.b32 	%r3226, %r3225, %r3224, 28;
	shf.r.wrap.b32 	%r3227, %r3224, %r3225, 28;
	mov.b64 	%rd1973, {%r3227, %r3226};
	shf.l.wrap.b32 	%r3228, %r3224, %r3225, 30;
	shf.l.wrap.b32 	%r3229, %r3225, %r3224, 30;
	mov.b64 	%rd1974, {%r3229, %r3228};
	xor.b64  	%rd1975, %rd1974, %rd1973;
	shf.l.wrap.b32 	%r3230, %r3224, %r3225, 25;
	shf.l.wrap.b32 	%r3231, %r3225, %r3224, 25;
	mov.b64 	%rd1976, {%r3231, %r3230};
	xor.b64  	%rd1977, %rd1975, %rd1976;
	xor.b64  	%rd1978, %rd1959, %rd1911;
	xor.b64  	%rd1979, %rd1959, %rd1935;
	and.b64  	%rd1980, %rd1979, %rd1978;
	xor.b64  	%rd1981, %rd1980, %rd1959;
	add.s64 	%rd1982, %rd1971, %rd1981;
	add.s64 	%rd1983, %rd1982, %rd1977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3232,%dummy}, %rd1972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3233}, %rd1972;
	}
	shf.r.wrap.b32 	%r3234, %r3233, %r3232, 14;
	shf.r.wrap.b32 	%r3235, %r3232, %r3233, 14;
	mov.b64 	%rd1984, {%r3235, %r3234};
	shf.r.wrap.b32 	%r3236, %r3233, %r3232, 18;
	shf.r.wrap.b32 	%r3237, %r3232, %r3233, 18;
	mov.b64 	%rd1985, {%r3237, %r3236};
	xor.b64  	%rd1986, %rd1985, %rd1984;
	shf.l.wrap.b32 	%r3238, %r3232, %r3233, 23;
	shf.l.wrap.b32 	%r3239, %r3233, %r3232, 23;
	mov.b64 	%rd1987, {%r3239, %r3238};
	xor.b64  	%rd1988, %rd1986, %rd1987;
	xor.b64  	%rd1989, %rd1948, %rd1924;
	and.b64  	%rd1990, %rd1972, %rd1989;
	xor.b64  	%rd1991, %rd1990, %rd1924;
	add.s64 	%rd1992, %rd1900, %rd1711;
	add.s64 	%rd1993, %rd1992, %rd2762;
	add.s64 	%rd1994, %rd1993, %rd1991;
	add.s64 	%rd1995, %rd1994, %rd1988;
	add.s64 	%rd1996, %rd1995, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3240,%dummy}, %rd1983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3241}, %rd1983;
	}
	shf.r.wrap.b32 	%r3242, %r3241, %r3240, 28;
	shf.r.wrap.b32 	%r3243, %r3240, %r3241, 28;
	mov.b64 	%rd1997, {%r3243, %r3242};
	shf.l.wrap.b32 	%r3244, %r3240, %r3241, 30;
	shf.l.wrap.b32 	%r3245, %r3241, %r3240, 30;
	mov.b64 	%rd1998, {%r3245, %r3244};
	xor.b64  	%rd1999, %rd1998, %rd1997;
	shf.l.wrap.b32 	%r3246, %r3240, %r3241, 25;
	shf.l.wrap.b32 	%r3247, %r3241, %r3240, 25;
	mov.b64 	%rd2000, {%r3247, %r3246};
	xor.b64  	%rd2001, %rd1999, %rd2000;
	xor.b64  	%rd2002, %rd1983, %rd1935;
	xor.b64  	%rd2003, %rd1983, %rd1959;
	and.b64  	%rd2004, %rd2003, %rd2002;
	xor.b64  	%rd2005, %rd2004, %rd1983;
	add.s64 	%rd2006, %rd1995, %rd2005;
	add.s64 	%rd2007, %rd2006, %rd2001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3248,%dummy}, %rd1996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3249}, %rd1996;
	}
	shf.r.wrap.b32 	%r3250, %r3249, %r3248, 14;
	shf.r.wrap.b32 	%r3251, %r3248, %r3249, 14;
	mov.b64 	%rd2008, {%r3251, %r3250};
	shf.r.wrap.b32 	%r3252, %r3249, %r3248, 18;
	shf.r.wrap.b32 	%r3253, %r3248, %r3249, 18;
	mov.b64 	%rd2009, {%r3253, %r3252};
	xor.b64  	%rd2010, %rd2009, %rd2008;
	shf.l.wrap.b32 	%r3254, %r3248, %r3249, 23;
	shf.l.wrap.b32 	%r3255, %r3249, %r3248, 23;
	mov.b64 	%rd2011, {%r3255, %r3254};
	xor.b64  	%rd2012, %rd2010, %rd2011;
	xor.b64  	%rd2013, %rd1972, %rd1948;
	and.b64  	%rd2014, %rd1996, %rd2013;
	xor.b64  	%rd2015, %rd2014, %rd1948;
	add.s64 	%rd2016, %rd1924, %rd1724;
	add.s64 	%rd2017, %rd2016, %rd2763;
	add.s64 	%rd2018, %rd2017, %rd2015;
	add.s64 	%rd2019, %rd2018, %rd2012;
	add.s64 	%rd2020, %rd2019, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3256,%dummy}, %rd2007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3257}, %rd2007;
	}
	shf.r.wrap.b32 	%r3258, %r3257, %r3256, 28;
	shf.r.wrap.b32 	%r3259, %r3256, %r3257, 28;
	mov.b64 	%rd2021, {%r3259, %r3258};
	shf.l.wrap.b32 	%r3260, %r3256, %r3257, 30;
	shf.l.wrap.b32 	%r3261, %r3257, %r3256, 30;
	mov.b64 	%rd2022, {%r3261, %r3260};
	xor.b64  	%rd2023, %rd2022, %rd2021;
	shf.l.wrap.b32 	%r3262, %r3256, %r3257, 25;
	shf.l.wrap.b32 	%r3263, %r3257, %r3256, 25;
	mov.b64 	%rd2024, {%r3263, %r3262};
	xor.b64  	%rd2025, %rd2023, %rd2024;
	xor.b64  	%rd2026, %rd2007, %rd1959;
	xor.b64  	%rd2027, %rd2007, %rd1983;
	and.b64  	%rd2028, %rd2027, %rd2026;
	xor.b64  	%rd2029, %rd2028, %rd2007;
	add.s64 	%rd2030, %rd2019, %rd2029;
	add.s64 	%rd2031, %rd2030, %rd2025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3264,%dummy}, %rd2020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3265}, %rd2020;
	}
	shf.r.wrap.b32 	%r3266, %r3265, %r3264, 14;
	shf.r.wrap.b32 	%r3267, %r3264, %r3265, 14;
	mov.b64 	%rd2032, {%r3267, %r3266};
	shf.r.wrap.b32 	%r3268, %r3265, %r3264, 18;
	shf.r.wrap.b32 	%r3269, %r3264, %r3265, 18;
	mov.b64 	%rd2033, {%r3269, %r3268};
	xor.b64  	%rd2034, %rd2033, %rd2032;
	shf.l.wrap.b32 	%r3270, %r3264, %r3265, 23;
	shf.l.wrap.b32 	%r3271, %r3265, %r3264, 23;
	mov.b64 	%rd2035, {%r3271, %r3270};
	xor.b64  	%rd2036, %rd2034, %rd2035;
	xor.b64  	%rd2037, %rd1996, %rd1972;
	and.b64  	%rd2038, %rd2020, %rd2037;
	xor.b64  	%rd2039, %rd2038, %rd1972;
	add.s64 	%rd2040, %rd1948, %rd1737;
	add.s64 	%rd2041, %rd2040, %rd2764;
	add.s64 	%rd2042, %rd2041, %rd2039;
	add.s64 	%rd2043, %rd2042, %rd2036;
	add.s64 	%rd2044, %rd2043, %rd1959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3272,%dummy}, %rd2031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3273}, %rd2031;
	}
	shf.r.wrap.b32 	%r3274, %r3273, %r3272, 28;
	shf.r.wrap.b32 	%r3275, %r3272, %r3273, 28;
	mov.b64 	%rd2045, {%r3275, %r3274};
	shf.l.wrap.b32 	%r3276, %r3272, %r3273, 30;
	shf.l.wrap.b32 	%r3277, %r3273, %r3272, 30;
	mov.b64 	%rd2046, {%r3277, %r3276};
	xor.b64  	%rd2047, %rd2046, %rd2045;
	shf.l.wrap.b32 	%r3278, %r3272, %r3273, 25;
	shf.l.wrap.b32 	%r3279, %r3273, %r3272, 25;
	mov.b64 	%rd2048, {%r3279, %r3278};
	xor.b64  	%rd2049, %rd2047, %rd2048;
	xor.b64  	%rd2050, %rd2031, %rd1983;
	xor.b64  	%rd2051, %rd2031, %rd2007;
	and.b64  	%rd2052, %rd2051, %rd2050;
	xor.b64  	%rd2053, %rd2052, %rd2031;
	add.s64 	%rd2054, %rd2043, %rd2053;
	add.s64 	%rd2055, %rd2054, %rd2049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3280,%dummy}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3281}, %rd2044;
	}
	shf.r.wrap.b32 	%r3282, %r3281, %r3280, 14;
	shf.r.wrap.b32 	%r3283, %r3280, %r3281, 14;
	mov.b64 	%rd2056, {%r3283, %r3282};
	shf.r.wrap.b32 	%r3284, %r3281, %r3280, 18;
	shf.r.wrap.b32 	%r3285, %r3280, %r3281, 18;
	mov.b64 	%rd2057, {%r3285, %r3284};
	xor.b64  	%rd2058, %rd2057, %rd2056;
	shf.l.wrap.b32 	%r3286, %r3280, %r3281, 23;
	shf.l.wrap.b32 	%r3287, %r3281, %r3280, 23;
	mov.b64 	%rd2059, {%r3287, %r3286};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	xor.b64  	%rd2061, %rd2020, %rd1996;
	and.b64  	%rd2062, %rd2044, %rd2061;
	xor.b64  	%rd2063, %rd2062, %rd1996;
	add.s64 	%rd2064, %rd1972, %rd1750;
	add.s64 	%rd2065, %rd2064, %rd2765;
	add.s64 	%rd2066, %rd2065, %rd2063;
	add.s64 	%rd2067, %rd2066, %rd2060;
	add.s64 	%rd2068, %rd2067, %rd1983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3288,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3289}, %rd2055;
	}
	shf.r.wrap.b32 	%r3290, %r3289, %r3288, 28;
	shf.r.wrap.b32 	%r3291, %r3288, %r3289, 28;
	mov.b64 	%rd2069, {%r3291, %r3290};
	shf.l.wrap.b32 	%r3292, %r3288, %r3289, 30;
	shf.l.wrap.b32 	%r3293, %r3289, %r3288, 30;
	mov.b64 	%rd2070, {%r3293, %r3292};
	xor.b64  	%rd2071, %rd2070, %rd2069;
	shf.l.wrap.b32 	%r3294, %r3288, %r3289, 25;
	shf.l.wrap.b32 	%r3295, %r3289, %r3288, 25;
	mov.b64 	%rd2072, {%r3295, %r3294};
	xor.b64  	%rd2073, %rd2071, %rd2072;
	xor.b64  	%rd2074, %rd2055, %rd2007;
	xor.b64  	%rd2075, %rd2055, %rd2031;
	and.b64  	%rd2076, %rd2075, %rd2074;
	xor.b64  	%rd2077, %rd2076, %rd2055;
	add.s64 	%rd2078, %rd2067, %rd2077;
	add.s64 	%rd2079, %rd2078, %rd2073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3296,%dummy}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3297}, %rd2068;
	}
	shf.r.wrap.b32 	%r3298, %r3297, %r3296, 14;
	shf.r.wrap.b32 	%r3299, %r3296, %r3297, 14;
	mov.b64 	%rd2080, {%r3299, %r3298};
	shf.r.wrap.b32 	%r3300, %r3297, %r3296, 18;
	shf.r.wrap.b32 	%r3301, %r3296, %r3297, 18;
	mov.b64 	%rd2081, {%r3301, %r3300};
	xor.b64  	%rd2082, %rd2081, %rd2080;
	shf.l.wrap.b32 	%r3302, %r3296, %r3297, 23;
	shf.l.wrap.b32 	%r3303, %r3297, %r3296, 23;
	mov.b64 	%rd2083, {%r3303, %r3302};
	xor.b64  	%rd2084, %rd2082, %rd2083;
	xor.b64  	%rd2085, %rd2044, %rd2020;
	and.b64  	%rd2086, %rd2068, %rd2085;
	xor.b64  	%rd2087, %rd2086, %rd2020;
	add.s64 	%rd2088, %rd1996, %rd1763;
	add.s64 	%rd2089, %rd2088, %rd2766;
	add.s64 	%rd2090, %rd2089, %rd2087;
	add.s64 	%rd2091, %rd2090, %rd2084;
	add.s64 	%rd2092, %rd2091, %rd2007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3304,%dummy}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3305}, %rd2079;
	}
	shf.r.wrap.b32 	%r3306, %r3305, %r3304, 28;
	shf.r.wrap.b32 	%r3307, %r3304, %r3305, 28;
	mov.b64 	%rd2093, {%r3307, %r3306};
	shf.l.wrap.b32 	%r3308, %r3304, %r3305, 30;
	shf.l.wrap.b32 	%r3309, %r3305, %r3304, 30;
	mov.b64 	%rd2094, {%r3309, %r3308};
	xor.b64  	%rd2095, %rd2094, %rd2093;
	shf.l.wrap.b32 	%r3310, %r3304, %r3305, 25;
	shf.l.wrap.b32 	%r3311, %r3305, %r3304, 25;
	mov.b64 	%rd2096, {%r3311, %r3310};
	xor.b64  	%rd2097, %rd2095, %rd2096;
	xor.b64  	%rd2098, %rd2079, %rd2031;
	xor.b64  	%rd2099, %rd2079, %rd2055;
	and.b64  	%rd2100, %rd2099, %rd2098;
	xor.b64  	%rd2101, %rd2100, %rd2079;
	add.s64 	%rd2102, %rd2091, %rd2101;
	add.s64 	%rd2103, %rd2102, %rd2097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3312,%dummy}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3313}, %rd2092;
	}
	shf.r.wrap.b32 	%r3314, %r3313, %r3312, 14;
	shf.r.wrap.b32 	%r3315, %r3312, %r3313, 14;
	mov.b64 	%rd2104, {%r3315, %r3314};
	shf.r.wrap.b32 	%r3316, %r3313, %r3312, 18;
	shf.r.wrap.b32 	%r3317, %r3312, %r3313, 18;
	mov.b64 	%rd2105, {%r3317, %r3316};
	xor.b64  	%rd2106, %rd2105, %rd2104;
	shf.l.wrap.b32 	%r3318, %r3312, %r3313, 23;
	shf.l.wrap.b32 	%r3319, %r3313, %r3312, 23;
	mov.b64 	%rd2107, {%r3319, %r3318};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	xor.b64  	%rd2109, %rd2068, %rd2044;
	and.b64  	%rd2110, %rd2092, %rd2109;
	xor.b64  	%rd2111, %rd2110, %rd2044;
	add.s64 	%rd2112, %rd2020, %rd1776;
	add.s64 	%rd2113, %rd2112, %rd2767;
	add.s64 	%rd2114, %rd2113, %rd2111;
	add.s64 	%rd2115, %rd2114, %rd2108;
	add.s64 	%rd2116, %rd2115, %rd2031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3320,%dummy}, %rd2103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3321}, %rd2103;
	}
	shf.r.wrap.b32 	%r3322, %r3321, %r3320, 28;
	shf.r.wrap.b32 	%r3323, %r3320, %r3321, 28;
	mov.b64 	%rd2117, {%r3323, %r3322};
	shf.l.wrap.b32 	%r3324, %r3320, %r3321, 30;
	shf.l.wrap.b32 	%r3325, %r3321, %r3320, 30;
	mov.b64 	%rd2118, {%r3325, %r3324};
	xor.b64  	%rd2119, %rd2118, %rd2117;
	shf.l.wrap.b32 	%r3326, %r3320, %r3321, 25;
	shf.l.wrap.b32 	%r3327, %r3321, %r3320, 25;
	mov.b64 	%rd2120, {%r3327, %r3326};
	xor.b64  	%rd2121, %rd2119, %rd2120;
	xor.b64  	%rd2122, %rd2103, %rd2055;
	xor.b64  	%rd2123, %rd2103, %rd2079;
	and.b64  	%rd2124, %rd2123, %rd2122;
	xor.b64  	%rd2125, %rd2124, %rd2103;
	add.s64 	%rd2126, %rd2115, %rd2125;
	add.s64 	%rd2127, %rd2126, %rd2121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3328,%dummy}, %rd2116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3329}, %rd2116;
	}
	shf.r.wrap.b32 	%r3330, %r3329, %r3328, 14;
	shf.r.wrap.b32 	%r3331, %r3328, %r3329, 14;
	mov.b64 	%rd2128, {%r3331, %r3330};
	shf.r.wrap.b32 	%r3332, %r3329, %r3328, 18;
	shf.r.wrap.b32 	%r3333, %r3328, %r3329, 18;
	mov.b64 	%rd2129, {%r3333, %r3332};
	xor.b64  	%rd2130, %rd2129, %rd2128;
	shf.l.wrap.b32 	%r3334, %r3328, %r3329, 23;
	shf.l.wrap.b32 	%r3335, %r3329, %r3328, 23;
	mov.b64 	%rd2131, {%r3335, %r3334};
	xor.b64  	%rd2132, %rd2130, %rd2131;
	xor.b64  	%rd2133, %rd2092, %rd2068;
	and.b64  	%rd2134, %rd2116, %rd2133;
	xor.b64  	%rd2135, %rd2134, %rd2068;
	add.s64 	%rd2136, %rd2044, %rd1789;
	add.s64 	%rd2137, %rd2136, %rd2768;
	add.s64 	%rd2138, %rd2137, %rd2135;
	add.s64 	%rd2139, %rd2138, %rd2132;
	add.s64 	%rd2140, %rd2139, %rd2055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3336,%dummy}, %rd2127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3337}, %rd2127;
	}
	shf.r.wrap.b32 	%r3338, %r3337, %r3336, 28;
	shf.r.wrap.b32 	%r3339, %r3336, %r3337, 28;
	mov.b64 	%rd2141, {%r3339, %r3338};
	shf.l.wrap.b32 	%r3340, %r3336, %r3337, 30;
	shf.l.wrap.b32 	%r3341, %r3337, %r3336, 30;
	mov.b64 	%rd2142, {%r3341, %r3340};
	xor.b64  	%rd2143, %rd2142, %rd2141;
	shf.l.wrap.b32 	%r3342, %r3336, %r3337, 25;
	shf.l.wrap.b32 	%r3343, %r3337, %r3336, 25;
	mov.b64 	%rd2144, {%r3343, %r3342};
	xor.b64  	%rd2145, %rd2143, %rd2144;
	xor.b64  	%rd2146, %rd2127, %rd2079;
	xor.b64  	%rd2147, %rd2127, %rd2103;
	and.b64  	%rd2148, %rd2147, %rd2146;
	xor.b64  	%rd2149, %rd2148, %rd2127;
	add.s64 	%rd2150, %rd2139, %rd2149;
	add.s64 	%rd2151, %rd2150, %rd2145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3344,%dummy}, %rd2140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3345}, %rd2140;
	}
	shf.r.wrap.b32 	%r3346, %r3345, %r3344, 14;
	shf.r.wrap.b32 	%r3347, %r3344, %r3345, 14;
	mov.b64 	%rd2152, {%r3347, %r3346};
	shf.r.wrap.b32 	%r3348, %r3345, %r3344, 18;
	shf.r.wrap.b32 	%r3349, %r3344, %r3345, 18;
	mov.b64 	%rd2153, {%r3349, %r3348};
	xor.b64  	%rd2154, %rd2153, %rd2152;
	shf.l.wrap.b32 	%r3350, %r3344, %r3345, 23;
	shf.l.wrap.b32 	%r3351, %r3345, %r3344, 23;
	mov.b64 	%rd2155, {%r3351, %r3350};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	xor.b64  	%rd2157, %rd2116, %rd2092;
	and.b64  	%rd2158, %rd2140, %rd2157;
	xor.b64  	%rd2159, %rd2158, %rd2092;
	add.s64 	%rd2160, %rd2068, %rd1802;
	add.s64 	%rd2161, %rd2160, %rd2769;
	add.s64 	%rd2162, %rd2161, %rd2159;
	add.s64 	%rd2163, %rd2162, %rd2156;
	add.s64 	%rd2164, %rd2163, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3352,%dummy}, %rd2151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3353}, %rd2151;
	}
	shf.r.wrap.b32 	%r3354, %r3353, %r3352, 28;
	shf.r.wrap.b32 	%r3355, %r3352, %r3353, 28;
	mov.b64 	%rd2165, {%r3355, %r3354};
	shf.l.wrap.b32 	%r3356, %r3352, %r3353, 30;
	shf.l.wrap.b32 	%r3357, %r3353, %r3352, 30;
	mov.b64 	%rd2166, {%r3357, %r3356};
	xor.b64  	%rd2167, %rd2166, %rd2165;
	shf.l.wrap.b32 	%r3358, %r3352, %r3353, 25;
	shf.l.wrap.b32 	%r3359, %r3353, %r3352, 25;
	mov.b64 	%rd2168, {%r3359, %r3358};
	xor.b64  	%rd2169, %rd2167, %rd2168;
	xor.b64  	%rd2170, %rd2151, %rd2103;
	xor.b64  	%rd2171, %rd2151, %rd2127;
	and.b64  	%rd2172, %rd2171, %rd2170;
	xor.b64  	%rd2173, %rd2172, %rd2151;
	add.s64 	%rd2174, %rd2163, %rd2173;
	add.s64 	%rd2175, %rd2174, %rd2169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3360,%dummy}, %rd2164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3361}, %rd2164;
	}
	shf.r.wrap.b32 	%r3362, %r3361, %r3360, 14;
	shf.r.wrap.b32 	%r3363, %r3360, %r3361, 14;
	mov.b64 	%rd2176, {%r3363, %r3362};
	shf.r.wrap.b32 	%r3364, %r3361, %r3360, 18;
	shf.r.wrap.b32 	%r3365, %r3360, %r3361, 18;
	mov.b64 	%rd2177, {%r3365, %r3364};
	xor.b64  	%rd2178, %rd2177, %rd2176;
	shf.l.wrap.b32 	%r3366, %r3360, %r3361, 23;
	shf.l.wrap.b32 	%r3367, %r3361, %r3360, 23;
	mov.b64 	%rd2179, {%r3367, %r3366};
	xor.b64  	%rd2180, %rd2178, %rd2179;
	xor.b64  	%rd2181, %rd2140, %rd2116;
	and.b64  	%rd2182, %rd2164, %rd2181;
	xor.b64  	%rd2183, %rd2182, %rd2116;
	add.s64 	%rd2184, %rd2092, %rd1815;
	add.s64 	%rd2185, %rd2184, %rd2770;
	add.s64 	%rd2186, %rd2185, %rd2183;
	add.s64 	%rd2187, %rd2186, %rd2180;
	add.s64 	%rd2188, %rd2187, %rd2103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3368,%dummy}, %rd2175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3369}, %rd2175;
	}
	shf.r.wrap.b32 	%r3370, %r3369, %r3368, 28;
	shf.r.wrap.b32 	%r3371, %r3368, %r3369, 28;
	mov.b64 	%rd2189, {%r3371, %r3370};
	shf.l.wrap.b32 	%r3372, %r3368, %r3369, 30;
	shf.l.wrap.b32 	%r3373, %r3369, %r3368, 30;
	mov.b64 	%rd2190, {%r3373, %r3372};
	xor.b64  	%rd2191, %rd2190, %rd2189;
	shf.l.wrap.b32 	%r3374, %r3368, %r3369, 25;
	shf.l.wrap.b32 	%r3375, %r3369, %r3368, 25;
	mov.b64 	%rd2192, {%r3375, %r3374};
	xor.b64  	%rd2193, %rd2191, %rd2192;
	xor.b64  	%rd2194, %rd2175, %rd2127;
	xor.b64  	%rd2195, %rd2175, %rd2151;
	and.b64  	%rd2196, %rd2195, %rd2194;
	xor.b64  	%rd2197, %rd2196, %rd2175;
	add.s64 	%rd2198, %rd2187, %rd2197;
	add.s64 	%rd2199, %rd2198, %rd2193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3376,%dummy}, %rd1802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3377}, %rd1802;
	}
	shf.r.wrap.b32 	%r3378, %r3377, %r3376, 19;
	shf.r.wrap.b32 	%r3379, %r3376, %r3377, 19;
	mov.b64 	%rd2200, {%r3379, %r3378};
	shf.l.wrap.b32 	%r3380, %r3376, %r3377, 3;
	shf.l.wrap.b32 	%r3381, %r3377, %r3376, 3;
	mov.b64 	%rd2201, {%r3381, %r3380};
	shr.u64 	%rd2202, %rd1802, 6;
	xor.b64  	%rd2203, %rd2200, %rd2202;
	xor.b64  	%rd2204, %rd2203, %rd2201;
	shf.r.wrap.b32 	%r3382, %r2991, %r2990, 1;
	shf.r.wrap.b32 	%r3383, %r2990, %r2991, 1;
	mov.b64 	%rd2205, {%r3383, %r3382};
	shf.r.wrap.b32 	%r3384, %r2991, %r2990, 8;
	shf.r.wrap.b32 	%r3385, %r2990, %r2991, 8;
	mov.b64 	%rd2206, {%r3385, %r3384};
	shr.u64 	%rd2207, %rd1633, 7;
	xor.b64  	%rd2208, %rd2205, %rd2207;
	xor.b64  	%rd2209, %rd2208, %rd2206;
	add.s64 	%rd2210, %rd1620, %rd1737;
	add.s64 	%rd2211, %rd2210, %rd2204;
	add.s64 	%rd2212, %rd2211, %rd2209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd1815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3387}, %rd1815;
	}
	shf.r.wrap.b32 	%r3388, %r3387, %r3386, 19;
	shf.r.wrap.b32 	%r3389, %r3386, %r3387, 19;
	mov.b64 	%rd2213, {%r3389, %r3388};
	shf.l.wrap.b32 	%r3390, %r3386, %r3387, 3;
	shf.l.wrap.b32 	%r3391, %r3387, %r3386, 3;
	mov.b64 	%rd2214, {%r3391, %r3390};
	shr.u64 	%rd2215, %rd1815, 6;
	xor.b64  	%rd2216, %rd2213, %rd2215;
	xor.b64  	%rd2217, %rd2216, %rd2214;
	shf.r.wrap.b32 	%r3392, %r3001, %r3000, 1;
	shf.r.wrap.b32 	%r3393, %r3000, %r3001, 1;
	mov.b64 	%rd2218, {%r3393, %r3392};
	shf.r.wrap.b32 	%r3394, %r3001, %r3000, 8;
	shf.r.wrap.b32 	%r3395, %r3000, %r3001, 8;
	mov.b64 	%rd2219, {%r3395, %r3394};
	shr.u64 	%rd2220, %rd1646, 7;
	xor.b64  	%rd2221, %rd2218, %rd2220;
	xor.b64  	%rd2222, %rd2221, %rd2219;
	add.s64 	%rd2223, %rd1633, %rd1750;
	add.s64 	%rd2224, %rd2223, %rd2217;
	add.s64 	%rd2225, %rd2224, %rd2222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3396,%dummy}, %rd2212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3397}, %rd2212;
	}
	shf.r.wrap.b32 	%r3398, %r3397, %r3396, 19;
	shf.r.wrap.b32 	%r3399, %r3396, %r3397, 19;
	mov.b64 	%rd2226, {%r3399, %r3398};
	shf.l.wrap.b32 	%r3400, %r3396, %r3397, 3;
	shf.l.wrap.b32 	%r3401, %r3397, %r3396, 3;
	mov.b64 	%rd2227, {%r3401, %r3400};
	shr.u64 	%rd2228, %rd2212, 6;
	xor.b64  	%rd2229, %rd2226, %rd2228;
	xor.b64  	%rd2230, %rd2229, %rd2227;
	shf.r.wrap.b32 	%r3402, %r3011, %r3010, 1;
	shf.r.wrap.b32 	%r3403, %r3010, %r3011, 1;
	mov.b64 	%rd2231, {%r3403, %r3402};
	shf.r.wrap.b32 	%r3404, %r3011, %r3010, 8;
	shf.r.wrap.b32 	%r3405, %r3010, %r3011, 8;
	mov.b64 	%rd2232, {%r3405, %r3404};
	shr.u64 	%rd2233, %rd1659, 7;
	xor.b64  	%rd2234, %rd2231, %rd2233;
	xor.b64  	%rd2235, %rd2234, %rd2232;
	add.s64 	%rd2236, %rd1646, %rd1763;
	add.s64 	%rd2237, %rd2236, %rd2230;
	add.s64 	%rd2238, %rd2237, %rd2235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3406,%dummy}, %rd2225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3407}, %rd2225;
	}
	shf.r.wrap.b32 	%r3408, %r3407, %r3406, 19;
	shf.r.wrap.b32 	%r3409, %r3406, %r3407, 19;
	mov.b64 	%rd2239, {%r3409, %r3408};
	shf.l.wrap.b32 	%r3410, %r3406, %r3407, 3;
	shf.l.wrap.b32 	%r3411, %r3407, %r3406, 3;
	mov.b64 	%rd2240, {%r3411, %r3410};
	shr.u64 	%rd2241, %rd2225, 6;
	xor.b64  	%rd2242, %rd2239, %rd2241;
	xor.b64  	%rd2243, %rd2242, %rd2240;
	shf.r.wrap.b32 	%r3412, %r3021, %r3020, 1;
	shf.r.wrap.b32 	%r3413, %r3020, %r3021, 1;
	mov.b64 	%rd2244, {%r3413, %r3412};
	shf.r.wrap.b32 	%r3414, %r3021, %r3020, 8;
	shf.r.wrap.b32 	%r3415, %r3020, %r3021, 8;
	mov.b64 	%rd2245, {%r3415, %r3414};
	shr.u64 	%rd2246, %rd1672, 7;
	xor.b64  	%rd2247, %rd2244, %rd2246;
	xor.b64  	%rd2248, %rd2247, %rd2245;
	add.s64 	%rd2249, %rd1659, %rd1776;
	add.s64 	%rd2250, %rd2249, %rd2243;
	add.s64 	%rd2251, %rd2250, %rd2248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3416,%dummy}, %rd2238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3417}, %rd2238;
	}
	shf.r.wrap.b32 	%r3418, %r3417, %r3416, 19;
	shf.r.wrap.b32 	%r3419, %r3416, %r3417, 19;
	mov.b64 	%rd2252, {%r3419, %r3418};
	shf.l.wrap.b32 	%r3420, %r3416, %r3417, 3;
	shf.l.wrap.b32 	%r3421, %r3417, %r3416, 3;
	mov.b64 	%rd2253, {%r3421, %r3420};
	shr.u64 	%rd2254, %rd2238, 6;
	xor.b64  	%rd2255, %rd2252, %rd2254;
	xor.b64  	%rd2256, %rd2255, %rd2253;
	shf.r.wrap.b32 	%r3422, %r3031, %r3030, 1;
	shf.r.wrap.b32 	%r3423, %r3030, %r3031, 1;
	mov.b64 	%rd2257, {%r3423, %r3422};
	shf.r.wrap.b32 	%r3424, %r3031, %r3030, 8;
	shf.r.wrap.b32 	%r3425, %r3030, %r3031, 8;
	mov.b64 	%rd2258, {%r3425, %r3424};
	shr.u64 	%rd2259, %rd1685, 7;
	xor.b64  	%rd2260, %rd2257, %rd2259;
	xor.b64  	%rd2261, %rd2260, %rd2258;
	add.s64 	%rd2262, %rd1672, %rd1789;
	add.s64 	%rd2263, %rd2262, %rd2256;
	add.s64 	%rd2264, %rd2263, %rd2261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3426,%dummy}, %rd2251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3427}, %rd2251;
	}
	shf.r.wrap.b32 	%r3428, %r3427, %r3426, 19;
	shf.r.wrap.b32 	%r3429, %r3426, %r3427, 19;
	mov.b64 	%rd2265, {%r3429, %r3428};
	shf.l.wrap.b32 	%r3430, %r3426, %r3427, 3;
	shf.l.wrap.b32 	%r3431, %r3427, %r3426, 3;
	mov.b64 	%rd2266, {%r3431, %r3430};
	shr.u64 	%rd2267, %rd2251, 6;
	xor.b64  	%rd2268, %rd2265, %rd2267;
	xor.b64  	%rd2269, %rd2268, %rd2266;
	shf.r.wrap.b32 	%r3432, %r3041, %r3040, 1;
	shf.r.wrap.b32 	%r3433, %r3040, %r3041, 1;
	mov.b64 	%rd2270, {%r3433, %r3432};
	shf.r.wrap.b32 	%r3434, %r3041, %r3040, 8;
	shf.r.wrap.b32 	%r3435, %r3040, %r3041, 8;
	mov.b64 	%rd2271, {%r3435, %r3434};
	shr.u64 	%rd2272, %rd1698, 7;
	xor.b64  	%rd2273, %rd2270, %rd2272;
	xor.b64  	%rd2274, %rd2273, %rd2271;
	add.s64 	%rd2275, %rd1685, %rd1802;
	add.s64 	%rd2276, %rd2275, %rd2269;
	add.s64 	%rd2277, %rd2276, %rd2274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3436,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3437}, %rd2264;
	}
	shf.r.wrap.b32 	%r3438, %r3437, %r3436, 19;
	shf.r.wrap.b32 	%r3439, %r3436, %r3437, 19;
	mov.b64 	%rd2278, {%r3439, %r3438};
	shf.l.wrap.b32 	%r3440, %r3436, %r3437, 3;
	shf.l.wrap.b32 	%r3441, %r3437, %r3436, 3;
	mov.b64 	%rd2279, {%r3441, %r3440};
	shr.u64 	%rd2280, %rd2264, 6;
	xor.b64  	%rd2281, %rd2278, %rd2280;
	xor.b64  	%rd2282, %rd2281, %rd2279;
	shf.r.wrap.b32 	%r3442, %r3051, %r3050, 1;
	shf.r.wrap.b32 	%r3443, %r3050, %r3051, 1;
	mov.b64 	%rd2283, {%r3443, %r3442};
	shf.r.wrap.b32 	%r3444, %r3051, %r3050, 8;
	shf.r.wrap.b32 	%r3445, %r3050, %r3051, 8;
	mov.b64 	%rd2284, {%r3445, %r3444};
	shr.u64 	%rd2285, %rd1711, 7;
	xor.b64  	%rd2286, %rd2283, %rd2285;
	xor.b64  	%rd2287, %rd2286, %rd2284;
	add.s64 	%rd2288, %rd1698, %rd1815;
	add.s64 	%rd2289, %rd2288, %rd2282;
	add.s64 	%rd2290, %rd2289, %rd2287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3446,%dummy}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3447}, %rd2277;
	}
	shf.r.wrap.b32 	%r3448, %r3447, %r3446, 19;
	shf.r.wrap.b32 	%r3449, %r3446, %r3447, 19;
	mov.b64 	%rd2291, {%r3449, %r3448};
	shf.l.wrap.b32 	%r3450, %r3446, %r3447, 3;
	shf.l.wrap.b32 	%r3451, %r3447, %r3446, 3;
	mov.b64 	%rd2292, {%r3451, %r3450};
	shr.u64 	%rd2293, %rd2277, 6;
	xor.b64  	%rd2294, %rd2291, %rd2293;
	xor.b64  	%rd2295, %rd2294, %rd2292;
	shf.r.wrap.b32 	%r3452, %r3061, %r3060, 1;
	shf.r.wrap.b32 	%r3453, %r3060, %r3061, 1;
	mov.b64 	%rd2296, {%r3453, %r3452};
	shf.r.wrap.b32 	%r3454, %r3061, %r3060, 8;
	shf.r.wrap.b32 	%r3455, %r3060, %r3061, 8;
	mov.b64 	%rd2297, {%r3455, %r3454};
	shr.u64 	%rd2298, %rd1724, 7;
	xor.b64  	%rd2299, %rd2296, %rd2298;
	xor.b64  	%rd2300, %rd2299, %rd2297;
	add.s64 	%rd2301, %rd2212, %rd1711;
	add.s64 	%rd2302, %rd2301, %rd2295;
	add.s64 	%rd2303, %rd2302, %rd2300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3456,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3457}, %rd2290;
	}
	shf.r.wrap.b32 	%r3458, %r3457, %r3456, 19;
	shf.r.wrap.b32 	%r3459, %r3456, %r3457, 19;
	mov.b64 	%rd2304, {%r3459, %r3458};
	shf.l.wrap.b32 	%r3460, %r3456, %r3457, 3;
	shf.l.wrap.b32 	%r3461, %r3457, %r3456, 3;
	mov.b64 	%rd2305, {%r3461, %r3460};
	shr.u64 	%rd2306, %rd2290, 6;
	xor.b64  	%rd2307, %rd2304, %rd2306;
	xor.b64  	%rd2308, %rd2307, %rd2305;
	shf.r.wrap.b32 	%r3462, %r3071, %r3070, 1;
	shf.r.wrap.b32 	%r3463, %r3070, %r3071, 1;
	mov.b64 	%rd2309, {%r3463, %r3462};
	shf.r.wrap.b32 	%r3464, %r3071, %r3070, 8;
	shf.r.wrap.b32 	%r3465, %r3070, %r3071, 8;
	mov.b64 	%rd2310, {%r3465, %r3464};
	shr.u64 	%rd2311, %rd1737, 7;
	xor.b64  	%rd2312, %rd2309, %rd2311;
	xor.b64  	%rd2313, %rd2312, %rd2310;
	add.s64 	%rd2314, %rd2225, %rd1724;
	add.s64 	%rd2315, %rd2314, %rd2308;
	add.s64 	%rd2316, %rd2315, %rd2313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3466,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3467}, %rd2303;
	}
	shf.r.wrap.b32 	%r3468, %r3467, %r3466, 19;
	shf.r.wrap.b32 	%r3469, %r3466, %r3467, 19;
	mov.b64 	%rd2317, {%r3469, %r3468};
	shf.l.wrap.b32 	%r3470, %r3466, %r3467, 3;
	shf.l.wrap.b32 	%r3471, %r3467, %r3466, 3;
	mov.b64 	%rd2318, {%r3471, %r3470};
	shr.u64 	%rd2319, %rd2303, 6;
	xor.b64  	%rd2320, %rd2317, %rd2319;
	xor.b64  	%rd2321, %rd2320, %rd2318;
	shf.r.wrap.b32 	%r3472, %r3081, %r3080, 1;
	shf.r.wrap.b32 	%r3473, %r3080, %r3081, 1;
	mov.b64 	%rd2322, {%r3473, %r3472};
	shf.r.wrap.b32 	%r3474, %r3081, %r3080, 8;
	shf.r.wrap.b32 	%r3475, %r3080, %r3081, 8;
	mov.b64 	%rd2323, {%r3475, %r3474};
	shr.u64 	%rd2324, %rd1750, 7;
	xor.b64  	%rd2325, %rd2322, %rd2324;
	xor.b64  	%rd2326, %rd2325, %rd2323;
	add.s64 	%rd2327, %rd2238, %rd1737;
	add.s64 	%rd2328, %rd2327, %rd2321;
	add.s64 	%rd2329, %rd2328, %rd2326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3476,%dummy}, %rd2316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3477}, %rd2316;
	}
	shf.r.wrap.b32 	%r3478, %r3477, %r3476, 19;
	shf.r.wrap.b32 	%r3479, %r3476, %r3477, 19;
	mov.b64 	%rd2330, {%r3479, %r3478};
	shf.l.wrap.b32 	%r3480, %r3476, %r3477, 3;
	shf.l.wrap.b32 	%r3481, %r3477, %r3476, 3;
	mov.b64 	%rd2331, {%r3481, %r3480};
	shr.u64 	%rd2332, %rd2316, 6;
	xor.b64  	%rd2333, %rd2330, %rd2332;
	xor.b64  	%rd2334, %rd2333, %rd2331;
	shf.r.wrap.b32 	%r3482, %r3091, %r3090, 1;
	shf.r.wrap.b32 	%r3483, %r3090, %r3091, 1;
	mov.b64 	%rd2335, {%r3483, %r3482};
	shf.r.wrap.b32 	%r3484, %r3091, %r3090, 8;
	shf.r.wrap.b32 	%r3485, %r3090, %r3091, 8;
	mov.b64 	%rd2336, {%r3485, %r3484};
	shr.u64 	%rd2337, %rd1763, 7;
	xor.b64  	%rd2338, %rd2335, %rd2337;
	xor.b64  	%rd2339, %rd2338, %rd2336;
	add.s64 	%rd2340, %rd2251, %rd1750;
	add.s64 	%rd2341, %rd2340, %rd2334;
	add.s64 	%rd2342, %rd2341, %rd2339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3486,%dummy}, %rd2329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3487}, %rd2329;
	}
	shf.r.wrap.b32 	%r3488, %r3487, %r3486, 19;
	shf.r.wrap.b32 	%r3489, %r3486, %r3487, 19;
	mov.b64 	%rd2343, {%r3489, %r3488};
	shf.l.wrap.b32 	%r3490, %r3486, %r3487, 3;
	shf.l.wrap.b32 	%r3491, %r3487, %r3486, 3;
	mov.b64 	%rd2344, {%r3491, %r3490};
	shr.u64 	%rd2345, %rd2329, 6;
	xor.b64  	%rd2346, %rd2343, %rd2345;
	xor.b64  	%rd2347, %rd2346, %rd2344;
	shf.r.wrap.b32 	%r3492, %r3101, %r3100, 1;
	shf.r.wrap.b32 	%r3493, %r3100, %r3101, 1;
	mov.b64 	%rd2348, {%r3493, %r3492};
	shf.r.wrap.b32 	%r3494, %r3101, %r3100, 8;
	shf.r.wrap.b32 	%r3495, %r3100, %r3101, 8;
	mov.b64 	%rd2349, {%r3495, %r3494};
	shr.u64 	%rd2350, %rd1776, 7;
	xor.b64  	%rd2351, %rd2348, %rd2350;
	xor.b64  	%rd2352, %rd2351, %rd2349;
	add.s64 	%rd2353, %rd2264, %rd1763;
	add.s64 	%rd2354, %rd2353, %rd2347;
	add.s64 	%rd2355, %rd2354, %rd2352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3496,%dummy}, %rd2342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3497}, %rd2342;
	}
	shf.r.wrap.b32 	%r3498, %r3497, %r3496, 19;
	shf.r.wrap.b32 	%r3499, %r3496, %r3497, 19;
	mov.b64 	%rd2356, {%r3499, %r3498};
	shf.l.wrap.b32 	%r3500, %r3496, %r3497, 3;
	shf.l.wrap.b32 	%r3501, %r3497, %r3496, 3;
	mov.b64 	%rd2357, {%r3501, %r3500};
	shr.u64 	%rd2358, %rd2342, 6;
	xor.b64  	%rd2359, %rd2356, %rd2358;
	xor.b64  	%rd2360, %rd2359, %rd2357;
	shf.r.wrap.b32 	%r3502, %r3111, %r3110, 1;
	shf.r.wrap.b32 	%r3503, %r3110, %r3111, 1;
	mov.b64 	%rd2361, {%r3503, %r3502};
	shf.r.wrap.b32 	%r3504, %r3111, %r3110, 8;
	shf.r.wrap.b32 	%r3505, %r3110, %r3111, 8;
	mov.b64 	%rd2362, {%r3505, %r3504};
	shr.u64 	%rd2363, %rd1789, 7;
	xor.b64  	%rd2364, %rd2361, %rd2363;
	xor.b64  	%rd2365, %rd2364, %rd2362;
	add.s64 	%rd2366, %rd2277, %rd1776;
	add.s64 	%rd2367, %rd2366, %rd2360;
	add.s64 	%rd2368, %rd2367, %rd2365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3506,%dummy}, %rd2188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3507}, %rd2188;
	}
	shf.r.wrap.b32 	%r3508, %r3507, %r3506, 14;
	shf.r.wrap.b32 	%r3509, %r3506, %r3507, 14;
	mov.b64 	%rd2369, {%r3509, %r3508};
	shf.r.wrap.b32 	%r3510, %r3507, %r3506, 18;
	shf.r.wrap.b32 	%r3511, %r3506, %r3507, 18;
	mov.b64 	%rd2370, {%r3511, %r3510};
	xor.b64  	%rd2371, %rd2370, %rd2369;
	shf.l.wrap.b32 	%r3512, %r3506, %r3507, 23;
	shf.l.wrap.b32 	%r3513, %r3507, %r3506, 23;
	mov.b64 	%rd2372, {%r3513, %r3512};
	xor.b64  	%rd2373, %rd2371, %rd2372;
	xor.b64  	%rd2374, %rd2140, %rd2164;
	and.b64  	%rd2375, %rd2374, %rd2188;
	xor.b64  	%rd2376, %rd2375, %rd2140;
	add.s64 	%rd2377, %rd2376, %rd2116;
	add.s64 	%rd2378, %rd2377, %rd2212;
	add.s64 	%rd2379, %rd2378, %rd2771;
	add.s64 	%rd2380, %rd2379, %rd2373;
	add.s64 	%rd2381, %rd2380, %rd2127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3514,%dummy}, %rd2199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3515}, %rd2199;
	}
	shf.r.wrap.b32 	%r3516, %r3515, %r3514, 28;
	shf.r.wrap.b32 	%r3517, %r3514, %r3515, 28;
	mov.b64 	%rd2382, {%r3517, %r3516};
	shf.l.wrap.b32 	%r3518, %r3514, %r3515, 30;
	shf.l.wrap.b32 	%r3519, %r3515, %r3514, 30;
	mov.b64 	%rd2383, {%r3519, %r3518};
	xor.b64  	%rd2384, %rd2383, %rd2382;
	shf.l.wrap.b32 	%r3520, %r3514, %r3515, 25;
	shf.l.wrap.b32 	%r3521, %r3515, %r3514, 25;
	mov.b64 	%rd2385, {%r3521, %r3520};
	xor.b64  	%rd2386, %rd2384, %rd2385;
	xor.b64  	%rd2387, %rd2199, %rd2151;
	xor.b64  	%rd2388, %rd2199, %rd2175;
	and.b64  	%rd2389, %rd2388, %rd2387;
	xor.b64  	%rd2390, %rd2389, %rd2199;
	add.s64 	%rd2391, %rd2380, %rd2390;
	add.s64 	%rd2392, %rd2391, %rd2386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3522,%dummy}, %rd2381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3523}, %rd2381;
	}
	shf.r.wrap.b32 	%r3524, %r3523, %r3522, 14;
	shf.r.wrap.b32 	%r3525, %r3522, %r3523, 14;
	mov.b64 	%rd2393, {%r3525, %r3524};
	shf.r.wrap.b32 	%r3526, %r3523, %r3522, 18;
	shf.r.wrap.b32 	%r3527, %r3522, %r3523, 18;
	mov.b64 	%rd2394, {%r3527, %r3526};
	xor.b64  	%rd2395, %rd2394, %rd2393;
	shf.l.wrap.b32 	%r3528, %r3522, %r3523, 23;
	shf.l.wrap.b32 	%r3529, %r3523, %r3522, 23;
	mov.b64 	%rd2396, {%r3529, %r3528};
	xor.b64  	%rd2397, %rd2395, %rd2396;
	xor.b64  	%rd2398, %rd2164, %rd2188;
	and.b64  	%rd2399, %rd2381, %rd2398;
	xor.b64  	%rd2400, %rd2399, %rd2164;
	add.s64 	%rd2401, %rd2225, %rd2140;
	add.s64 	%rd2402, %rd2401, %rd2772;
	add.s64 	%rd2403, %rd2402, %rd2400;
	add.s64 	%rd2404, %rd2403, %rd2397;
	add.s64 	%rd2405, %rd2404, %rd2151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3530,%dummy}, %rd2392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3531}, %rd2392;
	}
	shf.r.wrap.b32 	%r3532, %r3531, %r3530, 28;
	shf.r.wrap.b32 	%r3533, %r3530, %r3531, 28;
	mov.b64 	%rd2406, {%r3533, %r3532};
	shf.l.wrap.b32 	%r3534, %r3530, %r3531, 30;
	shf.l.wrap.b32 	%r3535, %r3531, %r3530, 30;
	mov.b64 	%rd2407, {%r3535, %r3534};
	xor.b64  	%rd2408, %rd2407, %rd2406;
	shf.l.wrap.b32 	%r3536, %r3530, %r3531, 25;
	shf.l.wrap.b32 	%r3537, %r3531, %r3530, 25;
	mov.b64 	%rd2409, {%r3537, %r3536};
	xor.b64  	%rd2410, %rd2408, %rd2409;
	xor.b64  	%rd2411, %rd2392, %rd2175;
	xor.b64  	%rd2412, %rd2392, %rd2199;
	and.b64  	%rd2413, %rd2412, %rd2411;
	xor.b64  	%rd2414, %rd2413, %rd2392;
	add.s64 	%rd2415, %rd2404, %rd2414;
	add.s64 	%rd2416, %rd2415, %rd2410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3538,%dummy}, %rd2405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3539}, %rd2405;
	}
	shf.r.wrap.b32 	%r3540, %r3539, %r3538, 14;
	shf.r.wrap.b32 	%r3541, %r3538, %r3539, 14;
	mov.b64 	%rd2417, {%r3541, %r3540};
	shf.r.wrap.b32 	%r3542, %r3539, %r3538, 18;
	shf.r.wrap.b32 	%r3543, %r3538, %r3539, 18;
	mov.b64 	%rd2418, {%r3543, %r3542};
	xor.b64  	%rd2419, %rd2418, %rd2417;
	shf.l.wrap.b32 	%r3544, %r3538, %r3539, 23;
	shf.l.wrap.b32 	%r3545, %r3539, %r3538, 23;
	mov.b64 	%rd2420, {%r3545, %r3544};
	xor.b64  	%rd2421, %rd2419, %rd2420;
	xor.b64  	%rd2422, %rd2381, %rd2188;
	and.b64  	%rd2423, %rd2405, %rd2422;
	xor.b64  	%rd2424, %rd2423, %rd2188;
	add.s64 	%rd2425, %rd2238, %rd2164;
	add.s64 	%rd2426, %rd2425, %rd2773;
	add.s64 	%rd2427, %rd2426, %rd2424;
	add.s64 	%rd2428, %rd2427, %rd2421;
	add.s64 	%rd2429, %rd2428, %rd2175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3546,%dummy}, %rd2416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3547}, %rd2416;
	}
	shf.r.wrap.b32 	%r3548, %r3547, %r3546, 28;
	shf.r.wrap.b32 	%r3549, %r3546, %r3547, 28;
	mov.b64 	%rd2430, {%r3549, %r3548};
	shf.l.wrap.b32 	%r3550, %r3546, %r3547, 30;
	shf.l.wrap.b32 	%r3551, %r3547, %r3546, 30;
	mov.b64 	%rd2431, {%r3551, %r3550};
	xor.b64  	%rd2432, %rd2431, %rd2430;
	shf.l.wrap.b32 	%r3552, %r3546, %r3547, 25;
	shf.l.wrap.b32 	%r3553, %r3547, %r3546, 25;
	mov.b64 	%rd2433, {%r3553, %r3552};
	xor.b64  	%rd2434, %rd2432, %rd2433;
	xor.b64  	%rd2435, %rd2416, %rd2199;
	xor.b64  	%rd2436, %rd2416, %rd2392;
	and.b64  	%rd2437, %rd2436, %rd2435;
	xor.b64  	%rd2438, %rd2437, %rd2416;
	add.s64 	%rd2439, %rd2428, %rd2438;
	add.s64 	%rd2440, %rd2439, %rd2434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3554,%dummy}, %rd2429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3555}, %rd2429;
	}
	shf.r.wrap.b32 	%r3556, %r3555, %r3554, 14;
	shf.r.wrap.b32 	%r3557, %r3554, %r3555, 14;
	mov.b64 	%rd2441, {%r3557, %r3556};
	shf.r.wrap.b32 	%r3558, %r3555, %r3554, 18;
	shf.r.wrap.b32 	%r3559, %r3554, %r3555, 18;
	mov.b64 	%rd2442, {%r3559, %r3558};
	xor.b64  	%rd2443, %rd2442, %rd2441;
	shf.l.wrap.b32 	%r3560, %r3554, %r3555, 23;
	shf.l.wrap.b32 	%r3561, %r3555, %r3554, 23;
	mov.b64 	%rd2444, {%r3561, %r3560};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	xor.b64  	%rd2446, %rd2405, %rd2381;
	and.b64  	%rd2447, %rd2429, %rd2446;
	xor.b64  	%rd2448, %rd2447, %rd2381;
	add.s64 	%rd2449, %rd2251, %rd2188;
	add.s64 	%rd2450, %rd2449, %rd2774;
	add.s64 	%rd2451, %rd2450, %rd2448;
	add.s64 	%rd2452, %rd2451, %rd2445;
	add.s64 	%rd2453, %rd2452, %rd2199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3562,%dummy}, %rd2440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3563}, %rd2440;
	}
	shf.r.wrap.b32 	%r3564, %r3563, %r3562, 28;
	shf.r.wrap.b32 	%r3565, %r3562, %r3563, 28;
	mov.b64 	%rd2454, {%r3565, %r3564};
	shf.l.wrap.b32 	%r3566, %r3562, %r3563, 30;
	shf.l.wrap.b32 	%r3567, %r3563, %r3562, 30;
	mov.b64 	%rd2455, {%r3567, %r3566};
	xor.b64  	%rd2456, %rd2455, %rd2454;
	shf.l.wrap.b32 	%r3568, %r3562, %r3563, 25;
	shf.l.wrap.b32 	%r3569, %r3563, %r3562, 25;
	mov.b64 	%rd2457, {%r3569, %r3568};
	xor.b64  	%rd2458, %rd2456, %rd2457;
	xor.b64  	%rd2459, %rd2440, %rd2392;
	xor.b64  	%rd2460, %rd2440, %rd2416;
	and.b64  	%rd2461, %rd2460, %rd2459;
	xor.b64  	%rd2462, %rd2461, %rd2440;
	add.s64 	%rd2463, %rd2452, %rd2462;
	add.s64 	%rd2464, %rd2463, %rd2458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3570,%dummy}, %rd2453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3571}, %rd2453;
	}
	shf.r.wrap.b32 	%r3572, %r3571, %r3570, 14;
	shf.r.wrap.b32 	%r3573, %r3570, %r3571, 14;
	mov.b64 	%rd2465, {%r3573, %r3572};
	shf.r.wrap.b32 	%r3574, %r3571, %r3570, 18;
	shf.r.wrap.b32 	%r3575, %r3570, %r3571, 18;
	mov.b64 	%rd2466, {%r3575, %r3574};
	xor.b64  	%rd2467, %rd2466, %rd2465;
	shf.l.wrap.b32 	%r3576, %r3570, %r3571, 23;
	shf.l.wrap.b32 	%r3577, %r3571, %r3570, 23;
	mov.b64 	%rd2468, {%r3577, %r3576};
	xor.b64  	%rd2469, %rd2467, %rd2468;
	xor.b64  	%rd2470, %rd2429, %rd2405;
	and.b64  	%rd2471, %rd2453, %rd2470;
	xor.b64  	%rd2472, %rd2471, %rd2405;
	add.s64 	%rd2473, %rd2381, %rd2264;
	add.s64 	%rd2474, %rd2473, %rd2775;
	add.s64 	%rd2475, %rd2474, %rd2472;
	add.s64 	%rd2476, %rd2475, %rd2469;
	add.s64 	%rd2477, %rd2476, %rd2392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3578,%dummy}, %rd2464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3579}, %rd2464;
	}
	shf.r.wrap.b32 	%r3580, %r3579, %r3578, 28;
	shf.r.wrap.b32 	%r3581, %r3578, %r3579, 28;
	mov.b64 	%rd2478, {%r3581, %r3580};
	shf.l.wrap.b32 	%r3582, %r3578, %r3579, 30;
	shf.l.wrap.b32 	%r3583, %r3579, %r3578, 30;
	mov.b64 	%rd2479, {%r3583, %r3582};
	xor.b64  	%rd2480, %rd2479, %rd2478;
	shf.l.wrap.b32 	%r3584, %r3578, %r3579, 25;
	shf.l.wrap.b32 	%r3585, %r3579, %r3578, 25;
	mov.b64 	%rd2481, {%r3585, %r3584};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	xor.b64  	%rd2483, %rd2464, %rd2416;
	xor.b64  	%rd2484, %rd2464, %rd2440;
	and.b64  	%rd2485, %rd2484, %rd2483;
	xor.b64  	%rd2486, %rd2485, %rd2464;
	add.s64 	%rd2487, %rd2476, %rd2486;
	add.s64 	%rd2488, %rd2487, %rd2482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3586,%dummy}, %rd2477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3587}, %rd2477;
	}
	shf.r.wrap.b32 	%r3588, %r3587, %r3586, 14;
	shf.r.wrap.b32 	%r3589, %r3586, %r3587, 14;
	mov.b64 	%rd2489, {%r3589, %r3588};
	shf.r.wrap.b32 	%r3590, %r3587, %r3586, 18;
	shf.r.wrap.b32 	%r3591, %r3586, %r3587, 18;
	mov.b64 	%rd2490, {%r3591, %r3590};
	xor.b64  	%rd2491, %rd2490, %rd2489;
	shf.l.wrap.b32 	%r3592, %r3586, %r3587, 23;
	shf.l.wrap.b32 	%r3593, %r3587, %r3586, 23;
	mov.b64 	%rd2492, {%r3593, %r3592};
	xor.b64  	%rd2493, %rd2491, %rd2492;
	xor.b64  	%rd2494, %rd2453, %rd2429;
	and.b64  	%rd2495, %rd2477, %rd2494;
	xor.b64  	%rd2496, %rd2495, %rd2429;
	add.s64 	%rd2497, %rd2405, %rd2277;
	add.s64 	%rd2498, %rd2497, %rd2776;
	add.s64 	%rd2499, %rd2498, %rd2496;
	add.s64 	%rd2500, %rd2499, %rd2493;
	add.s64 	%rd2501, %rd2500, %rd2416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3594,%dummy}, %rd2488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3595}, %rd2488;
	}
	shf.r.wrap.b32 	%r3596, %r3595, %r3594, 28;
	shf.r.wrap.b32 	%r3597, %r3594, %r3595, 28;
	mov.b64 	%rd2502, {%r3597, %r3596};
	shf.l.wrap.b32 	%r3598, %r3594, %r3595, 30;
	shf.l.wrap.b32 	%r3599, %r3595, %r3594, 30;
	mov.b64 	%rd2503, {%r3599, %r3598};
	xor.b64  	%rd2504, %rd2503, %rd2502;
	shf.l.wrap.b32 	%r3600, %r3594, %r3595, 25;
	shf.l.wrap.b32 	%r3601, %r3595, %r3594, 25;
	mov.b64 	%rd2505, {%r3601, %r3600};
	xor.b64  	%rd2506, %rd2504, %rd2505;
	xor.b64  	%rd2507, %rd2488, %rd2440;
	xor.b64  	%rd2508, %rd2488, %rd2464;
	and.b64  	%rd2509, %rd2508, %rd2507;
	xor.b64  	%rd2510, %rd2509, %rd2488;
	add.s64 	%rd2511, %rd2500, %rd2510;
	add.s64 	%rd2512, %rd2511, %rd2506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3602,%dummy}, %rd2501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3603}, %rd2501;
	}
	shf.r.wrap.b32 	%r3604, %r3603, %r3602, 14;
	shf.r.wrap.b32 	%r3605, %r3602, %r3603, 14;
	mov.b64 	%rd2513, {%r3605, %r3604};
	shf.r.wrap.b32 	%r3606, %r3603, %r3602, 18;
	shf.r.wrap.b32 	%r3607, %r3602, %r3603, 18;
	mov.b64 	%rd2514, {%r3607, %r3606};
	xor.b64  	%rd2515, %rd2514, %rd2513;
	shf.l.wrap.b32 	%r3608, %r3602, %r3603, 23;
	shf.l.wrap.b32 	%r3609, %r3603, %r3602, 23;
	mov.b64 	%rd2516, {%r3609, %r3608};
	xor.b64  	%rd2517, %rd2515, %rd2516;
	xor.b64  	%rd2518, %rd2477, %rd2453;
	and.b64  	%rd2519, %rd2501, %rd2518;
	xor.b64  	%rd2520, %rd2519, %rd2453;
	add.s64 	%rd2521, %rd2429, %rd2290;
	add.s64 	%rd2522, %rd2521, %rd2777;
	add.s64 	%rd2523, %rd2522, %rd2520;
	add.s64 	%rd2524, %rd2523, %rd2517;
	add.s64 	%rd2525, %rd2524, %rd2440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3610,%dummy}, %rd2512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3611}, %rd2512;
	}
	shf.r.wrap.b32 	%r3612, %r3611, %r3610, 28;
	shf.r.wrap.b32 	%r3613, %r3610, %r3611, 28;
	mov.b64 	%rd2526, {%r3613, %r3612};
	shf.l.wrap.b32 	%r3614, %r3610, %r3611, 30;
	shf.l.wrap.b32 	%r3615, %r3611, %r3610, 30;
	mov.b64 	%rd2527, {%r3615, %r3614};
	xor.b64  	%rd2528, %rd2527, %rd2526;
	shf.l.wrap.b32 	%r3616, %r3610, %r3611, 25;
	shf.l.wrap.b32 	%r3617, %r3611, %r3610, 25;
	mov.b64 	%rd2529, {%r3617, %r3616};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	xor.b64  	%rd2531, %rd2512, %rd2464;
	xor.b64  	%rd2532, %rd2512, %rd2488;
	and.b64  	%rd2533, %rd2532, %rd2531;
	xor.b64  	%rd2534, %rd2533, %rd2512;
	add.s64 	%rd2535, %rd2524, %rd2534;
	add.s64 	%rd2536, %rd2535, %rd2530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3618,%dummy}, %rd2525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3619}, %rd2525;
	}
	shf.r.wrap.b32 	%r3620, %r3619, %r3618, 14;
	shf.r.wrap.b32 	%r3621, %r3618, %r3619, 14;
	mov.b64 	%rd2537, {%r3621, %r3620};
	shf.r.wrap.b32 	%r3622, %r3619, %r3618, 18;
	shf.r.wrap.b32 	%r3623, %r3618, %r3619, 18;
	mov.b64 	%rd2538, {%r3623, %r3622};
	xor.b64  	%rd2539, %rd2538, %rd2537;
	shf.l.wrap.b32 	%r3624, %r3618, %r3619, 23;
	shf.l.wrap.b32 	%r3625, %r3619, %r3618, 23;
	mov.b64 	%rd2540, {%r3625, %r3624};
	xor.b64  	%rd2541, %rd2539, %rd2540;
	xor.b64  	%rd2542, %rd2501, %rd2477;
	and.b64  	%rd2543, %rd2525, %rd2542;
	xor.b64  	%rd2544, %rd2543, %rd2477;
	add.s64 	%rd2545, %rd2453, %rd2303;
	add.s64 	%rd2546, %rd2545, %rd2778;
	add.s64 	%rd2547, %rd2546, %rd2544;
	add.s64 	%rd2548, %rd2547, %rd2541;
	add.s64 	%rd2549, %rd2548, %rd2464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3626,%dummy}, %rd2536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3627}, %rd2536;
	}
	shf.r.wrap.b32 	%r3628, %r3627, %r3626, 28;
	shf.r.wrap.b32 	%r3629, %r3626, %r3627, 28;
	mov.b64 	%rd2550, {%r3629, %r3628};
	shf.l.wrap.b32 	%r3630, %r3626, %r3627, 30;
	shf.l.wrap.b32 	%r3631, %r3627, %r3626, 30;
	mov.b64 	%rd2551, {%r3631, %r3630};
	xor.b64  	%rd2552, %rd2551, %rd2550;
	shf.l.wrap.b32 	%r3632, %r3626, %r3627, 25;
	shf.l.wrap.b32 	%r3633, %r3627, %r3626, 25;
	mov.b64 	%rd2553, {%r3633, %r3632};
	xor.b64  	%rd2554, %rd2552, %rd2553;
	xor.b64  	%rd2555, %rd2536, %rd2488;
	xor.b64  	%rd2556, %rd2536, %rd2512;
	and.b64  	%rd2557, %rd2556, %rd2555;
	xor.b64  	%rd2558, %rd2557, %rd2536;
	add.s64 	%rd2559, %rd2548, %rd2558;
	add.s64 	%rd2560, %rd2559, %rd2554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3634,%dummy}, %rd2549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3635}, %rd2549;
	}
	shf.r.wrap.b32 	%r3636, %r3635, %r3634, 14;
	shf.r.wrap.b32 	%r3637, %r3634, %r3635, 14;
	mov.b64 	%rd2561, {%r3637, %r3636};
	shf.r.wrap.b32 	%r3638, %r3635, %r3634, 18;
	shf.r.wrap.b32 	%r3639, %r3634, %r3635, 18;
	mov.b64 	%rd2562, {%r3639, %r3638};
	xor.b64  	%rd2563, %rd2562, %rd2561;
	shf.l.wrap.b32 	%r3640, %r3634, %r3635, 23;
	shf.l.wrap.b32 	%r3641, %r3635, %r3634, 23;
	mov.b64 	%rd2564, {%r3641, %r3640};
	xor.b64  	%rd2565, %rd2563, %rd2564;
	xor.b64  	%rd2566, %rd2525, %rd2501;
	and.b64  	%rd2567, %rd2549, %rd2566;
	xor.b64  	%rd2568, %rd2567, %rd2501;
	add.s64 	%rd2569, %rd2477, %rd2316;
	add.s64 	%rd2570, %rd2569, %rd2779;
	add.s64 	%rd2571, %rd2570, %rd2568;
	add.s64 	%rd2572, %rd2571, %rd2565;
	add.s64 	%rd2573, %rd2572, %rd2488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3642,%dummy}, %rd2560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3643}, %rd2560;
	}
	shf.r.wrap.b32 	%r3644, %r3643, %r3642, 28;
	shf.r.wrap.b32 	%r3645, %r3642, %r3643, 28;
	mov.b64 	%rd2574, {%r3645, %r3644};
	shf.l.wrap.b32 	%r3646, %r3642, %r3643, 30;
	shf.l.wrap.b32 	%r3647, %r3643, %r3642, 30;
	mov.b64 	%rd2575, {%r3647, %r3646};
	xor.b64  	%rd2576, %rd2575, %rd2574;
	shf.l.wrap.b32 	%r3648, %r3642, %r3643, 25;
	shf.l.wrap.b32 	%r3649, %r3643, %r3642, 25;
	mov.b64 	%rd2577, {%r3649, %r3648};
	xor.b64  	%rd2578, %rd2576, %rd2577;
	xor.b64  	%rd2579, %rd2560, %rd2512;
	xor.b64  	%rd2580, %rd2560, %rd2536;
	and.b64  	%rd2581, %rd2580, %rd2579;
	xor.b64  	%rd2582, %rd2581, %rd2560;
	add.s64 	%rd2583, %rd2572, %rd2582;
	add.s64 	%rd2584, %rd2583, %rd2578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3650,%dummy}, %rd2573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3651}, %rd2573;
	}
	shf.r.wrap.b32 	%r3652, %r3651, %r3650, 14;
	shf.r.wrap.b32 	%r3653, %r3650, %r3651, 14;
	mov.b64 	%rd2585, {%r3653, %r3652};
	shf.r.wrap.b32 	%r3654, %r3651, %r3650, 18;
	shf.r.wrap.b32 	%r3655, %r3650, %r3651, 18;
	mov.b64 	%rd2586, {%r3655, %r3654};
	xor.b64  	%rd2587, %rd2586, %rd2585;
	shf.l.wrap.b32 	%r3656, %r3650, %r3651, 23;
	shf.l.wrap.b32 	%r3657, %r3651, %r3650, 23;
	mov.b64 	%rd2588, {%r3657, %r3656};
	xor.b64  	%rd2589, %rd2587, %rd2588;
	xor.b64  	%rd2590, %rd2549, %rd2525;
	and.b64  	%rd2591, %rd2573, %rd2590;
	xor.b64  	%rd2592, %rd2591, %rd2525;
	add.s64 	%rd2593, %rd2501, %rd2329;
	add.s64 	%rd2594, %rd2593, %rd2787;
	add.s64 	%rd2595, %rd2594, %rd2592;
	add.s64 	%rd2596, %rd2595, %rd2589;
	add.s64 	%rd2597, %rd2596, %rd2512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3658,%dummy}, %rd2584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3659}, %rd2584;
	}
	shf.r.wrap.b32 	%r3660, %r3659, %r3658, 28;
	shf.r.wrap.b32 	%r3661, %r3658, %r3659, 28;
	mov.b64 	%rd2598, {%r3661, %r3660};
	shf.l.wrap.b32 	%r3662, %r3658, %r3659, 30;
	shf.l.wrap.b32 	%r3663, %r3659, %r3658, 30;
	mov.b64 	%rd2599, {%r3663, %r3662};
	xor.b64  	%rd2600, %rd2599, %rd2598;
	shf.l.wrap.b32 	%r3664, %r3658, %r3659, 25;
	shf.l.wrap.b32 	%r3665, %r3659, %r3658, 25;
	mov.b64 	%rd2601, {%r3665, %r3664};
	xor.b64  	%rd2602, %rd2600, %rd2601;
	xor.b64  	%rd2603, %rd2584, %rd2536;
	xor.b64  	%rd2604, %rd2584, %rd2560;
	and.b64  	%rd2605, %rd2604, %rd2603;
	xor.b64  	%rd2606, %rd2605, %rd2584;
	add.s64 	%rd2607, %rd2596, %rd2606;
	add.s64 	%rd2608, %rd2607, %rd2602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3666,%dummy}, %rd2597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3667}, %rd2597;
	}
	shf.r.wrap.b32 	%r3668, %r3667, %r3666, 14;
	shf.r.wrap.b32 	%r3669, %r3666, %r3667, 14;
	mov.b64 	%rd2609, {%r3669, %r3668};
	shf.r.wrap.b32 	%r3670, %r3667, %r3666, 18;
	shf.r.wrap.b32 	%r3671, %r3666, %r3667, 18;
	mov.b64 	%rd2610, {%r3671, %r3670};
	xor.b64  	%rd2611, %rd2610, %rd2609;
	shf.l.wrap.b32 	%r3672, %r3666, %r3667, 23;
	shf.l.wrap.b32 	%r3673, %r3667, %r3666, 23;
	mov.b64 	%rd2612, {%r3673, %r3672};
	xor.b64  	%rd2613, %rd2611, %rd2612;
	xor.b64  	%rd2614, %rd2573, %rd2549;
	and.b64  	%rd2615, %rd2597, %rd2614;
	xor.b64  	%rd2616, %rd2615, %rd2549;
	add.s64 	%rd2617, %rd2525, %rd2342;
	add.s64 	%rd2618, %rd2617, %rd2788;
	add.s64 	%rd2619, %rd2618, %rd2616;
	add.s64 	%rd2620, %rd2619, %rd2613;
	add.s64 	%rd2621, %rd2620, %rd2536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3674,%dummy}, %rd2608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3675}, %rd2608;
	}
	shf.r.wrap.b32 	%r3676, %r3675, %r3674, 28;
	shf.r.wrap.b32 	%r3677, %r3674, %r3675, 28;
	mov.b64 	%rd2622, {%r3677, %r3676};
	shf.l.wrap.b32 	%r3678, %r3674, %r3675, 30;
	shf.l.wrap.b32 	%r3679, %r3675, %r3674, 30;
	mov.b64 	%rd2623, {%r3679, %r3678};
	xor.b64  	%rd2624, %rd2623, %rd2622;
	shf.l.wrap.b32 	%r3680, %r3674, %r3675, 25;
	shf.l.wrap.b32 	%r3681, %r3675, %r3674, 25;
	mov.b64 	%rd2625, {%r3681, %r3680};
	xor.b64  	%rd2626, %rd2624, %rd2625;
	xor.b64  	%rd2627, %rd2608, %rd2560;
	xor.b64  	%rd2628, %rd2608, %rd2584;
	and.b64  	%rd2629, %rd2628, %rd2627;
	xor.b64  	%rd2630, %rd2629, %rd2608;
	add.s64 	%rd2631, %rd2620, %rd2630;
	add.s64 	%rd2632, %rd2631, %rd2626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3682,%dummy}, %rd2621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3683}, %rd2621;
	}
	shf.r.wrap.b32 	%r3684, %r3683, %r3682, 14;
	shf.r.wrap.b32 	%r3685, %r3682, %r3683, 14;
	mov.b64 	%rd2633, {%r3685, %r3684};
	shf.r.wrap.b32 	%r3686, %r3683, %r3682, 18;
	shf.r.wrap.b32 	%r3687, %r3682, %r3683, 18;
	mov.b64 	%rd2634, {%r3687, %r3686};
	xor.b64  	%rd2635, %rd2634, %rd2633;
	shf.l.wrap.b32 	%r3688, %r3682, %r3683, 23;
	shf.l.wrap.b32 	%r3689, %r3683, %r3682, 23;
	mov.b64 	%rd2636, {%r3689, %r3688};
	xor.b64  	%rd2637, %rd2635, %rd2636;
	xor.b64  	%rd2638, %rd2597, %rd2573;
	and.b64  	%rd2639, %rd2621, %rd2638;
	xor.b64  	%rd2640, %rd2639, %rd2573;
	add.s64 	%rd2641, %rd2549, %rd2355;
	add.s64 	%rd2642, %rd2641, %rd2789;
	add.s64 	%rd2643, %rd2642, %rd2640;
	add.s64 	%rd2644, %rd2643, %rd2637;
	add.s64 	%rd2645, %rd2644, %rd2560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3690,%dummy}, %rd2632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3691}, %rd2632;
	}
	shf.r.wrap.b32 	%r3692, %r3691, %r3690, 28;
	shf.r.wrap.b32 	%r3693, %r3690, %r3691, 28;
	mov.b64 	%rd2646, {%r3693, %r3692};
	shf.l.wrap.b32 	%r3694, %r3690, %r3691, 30;
	shf.l.wrap.b32 	%r3695, %r3691, %r3690, 30;
	mov.b64 	%rd2647, {%r3695, %r3694};
	xor.b64  	%rd2648, %rd2647, %rd2646;
	shf.l.wrap.b32 	%r3696, %r3690, %r3691, 25;
	shf.l.wrap.b32 	%r3697, %r3691, %r3690, 25;
	mov.b64 	%rd2649, {%r3697, %r3696};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	xor.b64  	%rd2651, %rd2632, %rd2584;
	xor.b64  	%rd2652, %rd2632, %rd2608;
	and.b64  	%rd2653, %rd2652, %rd2651;
	xor.b64  	%rd2654, %rd2653, %rd2632;
	add.s64 	%rd2655, %rd2644, %rd2654;
	add.s64 	%rd2656, %rd2655, %rd2650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3698,%dummy}, %rd2645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3699}, %rd2645;
	}
	shf.r.wrap.b32 	%r3700, %r3699, %r3698, 14;
	shf.r.wrap.b32 	%r3701, %r3698, %r3699, 14;
	mov.b64 	%rd2657, {%r3701, %r3700};
	shf.r.wrap.b32 	%r3702, %r3699, %r3698, 18;
	shf.r.wrap.b32 	%r3703, %r3698, %r3699, 18;
	mov.b64 	%rd2658, {%r3703, %r3702};
	xor.b64  	%rd2659, %rd2658, %rd2657;
	shf.l.wrap.b32 	%r3704, %r3698, %r3699, 23;
	shf.l.wrap.b32 	%r3705, %r3699, %r3698, 23;
	mov.b64 	%rd2660, {%r3705, %r3704};
	xor.b64  	%rd2661, %rd2659, %rd2660;
	xor.b64  	%rd2662, %rd2621, %rd2597;
	and.b64  	%rd2663, %rd2645, %rd2662;
	xor.b64  	%rd2664, %rd2663, %rd2597;
	add.s64 	%rd2665, %rd2573, %rd2368;
	add.s64 	%rd2666, %rd2665, %rd2790;
	add.s64 	%rd2667, %rd2666, %rd2664;
	add.s64 	%rd2668, %rd2667, %rd2661;
	add.s64 	%rd2669, %rd2668, %rd2584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3706,%dummy}, %rd2656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3707}, %rd2656;
	}
	shf.r.wrap.b32 	%r3708, %r3707, %r3706, 28;
	shf.r.wrap.b32 	%r3709, %r3706, %r3707, 28;
	mov.b64 	%rd2670, {%r3709, %r3708};
	shf.l.wrap.b32 	%r3710, %r3706, %r3707, 30;
	shf.l.wrap.b32 	%r3711, %r3707, %r3706, 30;
	mov.b64 	%rd2671, {%r3711, %r3710};
	xor.b64  	%rd2672, %rd2671, %rd2670;
	shf.l.wrap.b32 	%r3712, %r3706, %r3707, 25;
	shf.l.wrap.b32 	%r3713, %r3707, %r3706, 25;
	mov.b64 	%rd2673, {%r3713, %r3712};
	xor.b64  	%rd2674, %rd2672, %rd2673;
	xor.b64  	%rd2675, %rd2656, %rd2608;
	xor.b64  	%rd2676, %rd2656, %rd2632;
	and.b64  	%rd2677, %rd2676, %rd2675;
	xor.b64  	%rd2678, %rd2677, %rd2656;
	add.s64 	%rd2679, %rd2668, %rd2678;
	add.s64 	%rd2680, %rd2679, %rd2674;
	cvt.u32.u64	%r264, %rd2669;
	shr.u64 	%rd2681, %rd2669, 32;
	cvt.u32.u64	%r265, %rd2681;
	cvt.u32.u64	%r266, %rd2680;
	shr.u64 	%rd2682, %rd2680, 32;
	cvt.u32.u64	%r267, %rd2682;
	shr.u32 	%r3714, %r264, %r13;
	and.b32  	%r3715, %r3714, %r288;
	mul.wide.u32 	%rd2683, %r3715, 4;
	add.s64 	%rd2684, %rd2791, %rd2683;
	and.b32  	%r3716, %r264, 31;
	mov.u32 	%r3717, 1;
	shl.b32 	%r268, %r3717, %r3716;
	ld.global.u32 	%r3718, [%rd2684];
	and.b32  	%r3719, %r3718, %r268;
	setp.eq.s32	%p50, %r3719, 0;
	@%p50 bra 	BB1_121;

	mov.u32 	%r3776, 1;
	ld.param.u64 	%rd2780, [m01700_m04_param_7];
	shr.u32 	%r3720, %r265, %r13;
	and.b32  	%r3721, %r3720, %r288;
	mul.wide.u32 	%rd2685, %r3721, 4;
	add.s64 	%rd2686, %rd2780, %rd2685;
	and.b32  	%r3722, %r265, 31;
	shl.b32 	%r269, %r3776, %r3722;
	ld.global.u32 	%r3724, [%rd2686];
	and.b32  	%r3725, %r3724, %r269;
	setp.eq.s32	%p51, %r3725, 0;
	@%p51 bra 	BB1_121;

	mov.u32 	%r3777, 1;
	ld.param.u64 	%rd2781, [m01700_m04_param_8];
	shr.u32 	%r3726, %r266, %r13;
	and.b32  	%r3727, %r3726, %r288;
	mul.wide.u32 	%rd2687, %r3727, 4;
	add.s64 	%rd2688, %rd2781, %rd2687;
	and.b32  	%r3728, %r266, 31;
	shl.b32 	%r270, %r3777, %r3728;
	ld.global.u32 	%r3730, [%rd2688];
	and.b32  	%r3731, %r3730, %r270;
	setp.eq.s32	%p52, %r3731, 0;
	@%p52 bra 	BB1_121;

	mov.u32 	%r3778, 1;
	ld.param.u64 	%rd2782, [m01700_m04_param_9];
	shr.u32 	%r3732, %r267, %r13;
	and.b32  	%r3733, %r3732, %r288;
	mul.wide.u32 	%rd2689, %r3733, 4;
	add.s64 	%rd2690, %rd2782, %rd2689;
	and.b32  	%r3734, %r267, 31;
	shl.b32 	%r271, %r3778, %r3734;
	ld.global.u32 	%r3736, [%rd2690];
	and.b32  	%r3737, %r3736, %r271;
	setp.eq.s32	%p53, %r3737, 0;
	@%p53 bra 	BB1_121;

	and.b32  	%r3781, %r264, 31;
	mov.u32 	%r3780, 1;
	shl.b32 	%r3779, %r3780, %r3781;
	ld.param.u64 	%rd2783, [m01700_m04_param_10];
	shr.u32 	%r3738, %r264, %r14;
	and.b32  	%r3739, %r3738, %r288;
	mul.wide.u32 	%rd2691, %r3739, 4;
	add.s64 	%rd2692, %rd2783, %rd2691;
	ld.global.u32 	%r3740, [%rd2692];
	and.b32  	%r3741, %r3740, %r3779;
	setp.eq.s32	%p54, %r3741, 0;
	@%p54 bra 	BB1_121;

	ld.param.u64 	%rd2784, [m01700_m04_param_11];
	shr.u32 	%r3742, %r265, %r14;
	and.b32  	%r3743, %r3742, %r288;
	mul.wide.u32 	%rd2693, %r3743, 4;
	add.s64 	%rd2694, %rd2784, %rd2693;
	ld.global.u32 	%r3744, [%rd2694];
	and.b32  	%r3745, %r3744, %r269;
	setp.eq.s32	%p55, %r3745, 0;
	@%p55 bra 	BB1_121;

	ld.param.u64 	%rd2785, [m01700_m04_param_12];
	shr.u32 	%r3746, %r266, %r14;
	and.b32  	%r3747, %r3746, %r288;
	mul.wide.u32 	%rd2695, %r3747, 4;
	add.s64 	%rd2696, %rd2785, %rd2695;
	ld.global.u32 	%r3748, [%rd2696];
	and.b32  	%r3749, %r3748, %r270;
	setp.eq.s32	%p56, %r3749, 0;
	@%p56 bra 	BB1_121;

	ld.param.u64 	%rd2786, [m01700_m04_param_13];
	shr.u32 	%r3750, %r267, %r14;
	and.b32  	%r3751, %r3750, %r288;
	mul.wide.u32 	%rd2697, %r3751, 4;
	add.s64 	%rd2698, %rd2786, %rd2697;
	ld.global.u32 	%r3752, [%rd2698];
	and.b32  	%r3753, %r3752, %r271;
	setp.eq.s32	%p57, %r3753, 0;
	@%p57 bra 	BB1_121;

	mov.u32 	%r3817, 0;
	setp.eq.s32	%p58, %r293, 0;
	mov.u32 	%r3754, -1;
	mov.u32 	%r3816, %r293;
	@%p58 bra 	BB1_115;

BB1_103:
	ld.param.u64 	%rd2792, [m01700_m04_param_15];
	mov.u32 	%r3818, 1;
	shr.u32 	%r274, %r3816, 1;
	add.s32 	%r3819, %r274, %r3817;
	cvt.u64.u32	%rd2699, %r3819;
	add.s64 	%rd2700, %rd2699, %rd20;
	shl.b64 	%rd2701, %rd2700, 6;
	add.s64 	%rd84, %rd2792, %rd2701;
	ld.global.u32 	%r276, [%rd84+28];
	setp.gt.u32	%p59, %r267, %r276;
	@%p59 bra 	BB1_113;

	setp.lt.u32	%p60, %r267, %r276;
	mov.u32 	%r3757, -1;
	@%p60 bra 	BB1_105;
	bra.uni 	BB1_106;

BB1_105:
	mov.u32 	%r3818, %r3757;
	bra.uni 	BB1_113;

BB1_106:
	mov.u32 	%r3818, 1;
	ld.global.u32 	%r277, [%rd84+24];
	setp.gt.u32	%p61, %r266, %r277;
	@%p61 bra 	BB1_113;

	setp.lt.u32	%p62, %r266, %r277;
	@%p62 bra 	BB1_108;
	bra.uni 	BB1_109;

BB1_108:
	mov.u32 	%r3818, %r3757;
	bra.uni 	BB1_113;

BB1_109:
	mov.u32 	%r3818, 1;
	ld.global.u32 	%r278, [%rd84+60];
	setp.gt.u32	%p63, %r265, %r278;
	@%p63 bra 	BB1_113;

	setp.lt.u32	%p64, %r265, %r278;
	mov.u32 	%r3818, %r3757;
	@%p64 bra 	BB1_113;

	mov.u32 	%r3818, 1;
	ld.global.u32 	%r279, [%rd84+56];
	setp.gt.u32	%p65, %r264, %r279;
	@%p65 bra 	BB1_113;

	setp.lt.u32	%p66, %r264, %r279;
	selp.b32	%r3818, -1, 0, %p66;

BB1_113:
	add.s32 	%r3763, %r274, 1;
	setp.gt.s32	%p67, %r3818, 0;
	selp.b32	%r3764, %r3763, 0, %p67;
	add.s32 	%r3817, %r3764, %r3817;
	selp.b32	%r3765, -1, 0, %p67;
	add.s32 	%r3766, %r3765, %r3816;
	shr.u32 	%r3816, %r3766, 1;
	setp.eq.s32	%p68, %r3818, 0;
	@%p68 bra 	BB1_116;

	setp.ne.s32	%p69, %r3816, 0;
	@%p69 bra 	BB1_103;

BB1_115:
	mov.u32 	%r3819, %r3754;

BB1_116:
	setp.eq.s32	%p70, %r3819, -1;
	@%p70 bra 	BB1_121;

	ld.param.u64 	%rd2793, [m01700_m04_param_16];
	ld.param.u32 	%r3771, [m01700_m04_param_32];
	add.s32 	%r285, %r3819, %r3771;
	mul.wide.u32 	%rd2702, %r285, 4;
	add.s64 	%rd2703, %rd2793, %rd2702;
	atom.global.add.u32 	%r3768, [%rd2703], 1;
	setp.ne.s32	%p71, %r3768, 0;
	@%p71 bra 	BB1_121;

	atom.global.add.u32 	%r286, [%rd98], 1;
	setp.lt.u32	%p72, %r286, %r293;
	@%p72 bra 	BB1_120;
	bra.uni 	BB1_119;

BB1_120:
	ld.param.u32 	%r3786, [m01700_m04_param_27];
	ld.param.u64 	%rd2794, [m01700_m04_param_14];
	mul.wide.u32 	%rd2704, %r286, 20;
	add.s64 	%rd2705, %rd2794, %rd2704;
	st.global.u32 	[%rd2705], %r3786;
	st.global.u32 	[%rd2705+4], %r3819;
	st.global.u32 	[%rd2705+8], %r285;
	st.global.u32 	[%rd2705+12], %r1;
	st.global.u32 	[%rd2705+16], %r3787;
	bra.uni 	BB1_121;

BB1_119:
	atom.global.add.u32 	%r3769, [%rd98], -1;

BB1_121:
	ld.param.u32 	%r3775, [m01700_m04_param_30];
	add.s32 	%r3787, %r3787, 1;
	setp.lt.u32	%p73, %r3787, %r3775;
	@%p73 bra 	BB1_3;

BB1_122:
	ret;
}

	// .globl	m01700_m08
.entry m01700_m08(
	.param .u64 .ptr .global .align 4 m01700_m08_param_0,
	.param .u64 .ptr .global .align 4 m01700_m08_param_1,
	.param .u64 .ptr .global .align 4 m01700_m08_param_2,
	.param .u64 .ptr .global .align 4 m01700_m08_param_3,
	.param .u64 .ptr .global .align 1 m01700_m08_param_4,
	.param .u64 .ptr .global .align 1 m01700_m08_param_5,
	.param .u64 .ptr .global .align 4 m01700_m08_param_6,
	.param .u64 .ptr .global .align 4 m01700_m08_param_7,
	.param .u64 .ptr .global .align 4 m01700_m08_param_8,
	.param .u64 .ptr .global .align 4 m01700_m08_param_9,
	.param .u64 .ptr .global .align 4 m01700_m08_param_10,
	.param .u64 .ptr .global .align 4 m01700_m08_param_11,
	.param .u64 .ptr .global .align 4 m01700_m08_param_12,
	.param .u64 .ptr .global .align 4 m01700_m08_param_13,
	.param .u64 .ptr .global .align 4 m01700_m08_param_14,
	.param .u64 .ptr .global .align 4 m01700_m08_param_15,
	.param .u64 .ptr .global .align 4 m01700_m08_param_16,
	.param .u64 .ptr .global .align 4 m01700_m08_param_17,
	.param .u64 .ptr .global .align 1 m01700_m08_param_18,
	.param .u64 .ptr .global .align 4 m01700_m08_param_19,
	.param .u64 .ptr .global .align 4 m01700_m08_param_20,
	.param .u64 .ptr .global .align 4 m01700_m08_param_21,
	.param .u64 .ptr .global .align 4 m01700_m08_param_22,
	.param .u64 .ptr .global .align 4 m01700_m08_param_23,
	.param .u32 m01700_m08_param_24,
	.param .u32 m01700_m08_param_25,
	.param .u32 m01700_m08_param_26,
	.param .u32 m01700_m08_param_27,
	.param .u32 m01700_m08_param_28,
	.param .u32 m01700_m08_param_29,
	.param .u32 m01700_m08_param_30,
	.param .u32 m01700_m08_param_31,
	.param .u32 m01700_m08_param_32,
	.param .u32 m01700_m08_param_33,
	.param .u64 m01700_m08_param_34
)
{



	ret;
}

	// .globl	m01700_m16
.entry m01700_m16(
	.param .u64 .ptr .global .align 4 m01700_m16_param_0,
	.param .u64 .ptr .global .align 4 m01700_m16_param_1,
	.param .u64 .ptr .global .align 4 m01700_m16_param_2,
	.param .u64 .ptr .global .align 4 m01700_m16_param_3,
	.param .u64 .ptr .global .align 1 m01700_m16_param_4,
	.param .u64 .ptr .global .align 1 m01700_m16_param_5,
	.param .u64 .ptr .global .align 4 m01700_m16_param_6,
	.param .u64 .ptr .global .align 4 m01700_m16_param_7,
	.param .u64 .ptr .global .align 4 m01700_m16_param_8,
	.param .u64 .ptr .global .align 4 m01700_m16_param_9,
	.param .u64 .ptr .global .align 4 m01700_m16_param_10,
	.param .u64 .ptr .global .align 4 m01700_m16_param_11,
	.param .u64 .ptr .global .align 4 m01700_m16_param_12,
	.param .u64 .ptr .global .align 4 m01700_m16_param_13,
	.param .u64 .ptr .global .align 4 m01700_m16_param_14,
	.param .u64 .ptr .global .align 4 m01700_m16_param_15,
	.param .u64 .ptr .global .align 4 m01700_m16_param_16,
	.param .u64 .ptr .global .align 4 m01700_m16_param_17,
	.param .u64 .ptr .global .align 1 m01700_m16_param_18,
	.param .u64 .ptr .global .align 4 m01700_m16_param_19,
	.param .u64 .ptr .global .align 4 m01700_m16_param_20,
	.param .u64 .ptr .global .align 4 m01700_m16_param_21,
	.param .u64 .ptr .global .align 4 m01700_m16_param_22,
	.param .u64 .ptr .global .align 4 m01700_m16_param_23,
	.param .u32 m01700_m16_param_24,
	.param .u32 m01700_m16_param_25,
	.param .u32 m01700_m16_param_26,
	.param .u32 m01700_m16_param_27,
	.param .u32 m01700_m16_param_28,
	.param .u32 m01700_m16_param_29,
	.param .u32 m01700_m16_param_30,
	.param .u32 m01700_m16_param_31,
	.param .u32 m01700_m16_param_32,
	.param .u32 m01700_m16_param_33,
	.param .u64 m01700_m16_param_34
)
{



	ret;
}

	// .globl	m01700_s04
.entry m01700_s04(
	.param .u64 .ptr .global .align 4 m01700_s04_param_0,
	.param .u64 .ptr .global .align 4 m01700_s04_param_1,
	.param .u64 .ptr .global .align 4 m01700_s04_param_2,
	.param .u64 .ptr .global .align 4 m01700_s04_param_3,
	.param .u64 .ptr .global .align 1 m01700_s04_param_4,
	.param .u64 .ptr .global .align 1 m01700_s04_param_5,
	.param .u64 .ptr .global .align 4 m01700_s04_param_6,
	.param .u64 .ptr .global .align 4 m01700_s04_param_7,
	.param .u64 .ptr .global .align 4 m01700_s04_param_8,
	.param .u64 .ptr .global .align 4 m01700_s04_param_9,
	.param .u64 .ptr .global .align 4 m01700_s04_param_10,
	.param .u64 .ptr .global .align 4 m01700_s04_param_11,
	.param .u64 .ptr .global .align 4 m01700_s04_param_12,
	.param .u64 .ptr .global .align 4 m01700_s04_param_13,
	.param .u64 .ptr .global .align 4 m01700_s04_param_14,
	.param .u64 .ptr .global .align 4 m01700_s04_param_15,
	.param .u64 .ptr .global .align 4 m01700_s04_param_16,
	.param .u64 .ptr .global .align 4 m01700_s04_param_17,
	.param .u64 .ptr .global .align 1 m01700_s04_param_18,
	.param .u64 .ptr .global .align 4 m01700_s04_param_19,
	.param .u64 .ptr .global .align 4 m01700_s04_param_20,
	.param .u64 .ptr .global .align 4 m01700_s04_param_21,
	.param .u64 .ptr .global .align 4 m01700_s04_param_22,
	.param .u64 .ptr .global .align 4 m01700_s04_param_23,
	.param .u32 m01700_s04_param_24,
	.param .u32 m01700_s04_param_25,
	.param .u32 m01700_s04_param_26,
	.param .u32 m01700_s04_param_27,
	.param .u32 m01700_s04_param_28,
	.param .u32 m01700_s04_param_29,
	.param .u32 m01700_s04_param_30,
	.param .u32 m01700_s04_param_31,
	.param .u32 m01700_s04_param_32,
	.param .u32 m01700_s04_param_33,
	.param .u64 m01700_s04_param_34
)
{
	.reg .pred 	%p<59>;
	.reg .b32 	%r<3735>;
	.reg .b64 	%rd<2758>;


	ld.param.u64 	%rd86, [m01700_s04_param_0];
	ld.param.u64 	%rd89, [m01700_s04_param_15];
	ld.param.u64 	%rd90, [m01700_s04_param_16];
	ld.param.u64 	%rd91, [m01700_s04_param_19];
	ld.param.u32 	%r269, [m01700_s04_param_30];
	ld.param.u32 	%r271, [m01700_s04_param_32];
	ld.param.u64 	%rd92, [m01700_s04_param_34];
	mov.b32	%r273, %envreg3;
	mov.u32 	%r274, %ctaid.x;
	mov.u32 	%r275, %ntid.x;
	mad.lo.s32 	%r276, %r274, %r275, %r273;
	mov.u32 	%r277, %tid.x;
	add.s32 	%r1, %r276, %r277;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd92;
	@%p1 bra 	BB4_101;

	mul.lo.s64 	%rd93, %rd1, 260;
	add.s64 	%rd94, %rd86, %rd93;
	ld.global.u32 	%r2, [%rd94];
	ld.global.u32 	%r3, [%rd94+4];
	ld.global.u32 	%r4, [%rd94+8];
	ld.global.u32 	%r5, [%rd94+12];
	ld.global.u32 	%r6, [%rd94+16];
	ld.global.u32 	%r7, [%rd94+20];
	ld.global.u32 	%r8, [%rd94+24];
	ld.global.u32 	%r9, [%rd94+28];
	ld.global.u32 	%r10, [%rd94+256];
	setp.eq.s32	%p2, %r269, 0;
	@%p2 bra 	BB4_101;

	mul.wide.u32 	%rd95, %r271, 64;
	add.s64 	%rd96, %rd89, %rd95;
	ld.global.u32 	%r11, [%rd96+56];
	ld.global.u32 	%r12, [%rd96+60];
	ld.global.u32 	%r13, [%rd96+24];
	ld.global.u32 	%r14, [%rd96+28];
	and.b32  	%r279, %r10, 3;
	mov.u32 	%r280, 4;
	sub.s32 	%r281, %r280, %r279;
	shr.u32 	%r15, %r10, 2;
	shl.b32 	%r282, %r281, 2;
	mov.u32 	%r283, 1985229328;
	shr.u32 	%r284, %r283, %r282;
	and.b32  	%r16, %r284, 65535;
	mov.u64 	%rd97, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd97;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r286}, %rd97;
	}
	shf.r.wrap.b32 	%r287, %r286, %r285, 18;
	shf.r.wrap.b32 	%r288, %r285, %r286, 18;
	mov.b64 	%rd98, {%r288, %r287};
	shf.r.wrap.b32 	%r289, %r286, %r285, 14;
	shf.r.wrap.b32 	%r290, %r285, %r286, 14;
	mov.b64 	%rd99, {%r290, %r289};
	xor.b64  	%rd100, %rd98, %rd99;
	shf.l.wrap.b32 	%r291, %r285, %r286, 23;
	shf.l.wrap.b32 	%r292, %r286, %r285, 23;
	mov.b64 	%rd101, {%r292, %r291};
	xor.b64  	%rd3, %rd100, %rd101;
	mov.u64 	%rd102, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r293}, %rd102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r294,%dummy}, %rd102;
	}
	shf.l.wrap.b32 	%r295, %r294, %r293, 30;
	shf.l.wrap.b32 	%r296, %r293, %r294, 30;
	mov.b64 	%rd103, {%r296, %r295};
	shf.r.wrap.b32 	%r297, %r293, %r294, 28;
	shf.r.wrap.b32 	%r298, %r294, %r293, 28;
	mov.b64 	%rd104, {%r298, %r297};
	xor.b64  	%rd105, %rd103, %rd104;
	shf.l.wrap.b32 	%r299, %r294, %r293, 25;
	shf.l.wrap.b32 	%r300, %r293, %r294, 25;
	mov.b64 	%rd106, {%r300, %r299};
	xor.b64  	%rd4, %rd105, %rd106;
	mul.wide.u32 	%rd107, %r271, 4;
	add.s64 	%rd20, %rd90, %rd107;
	mov.u64 	%rd108, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r302,%dummy}, %rd108;
	}
	shf.l.wrap.b32 	%r303, %r302, %r301, 3;
	shf.l.wrap.b32 	%r304, %r301, %r302, 3;
	mov.b64 	%rd109, {%r304, %r303};
	shf.r.wrap.b32 	%r305, %r301, %r302, 19;
	shf.r.wrap.b32 	%r306, %r302, %r301, 19;
	mov.b64 	%rd110, {%r306, %r305};
	xor.b64  	%rd21, %rd110, %rd109;
	shf.r.wrap.b32 	%r307, %r301, %r302, 8;
	shf.r.wrap.b32 	%r308, %r302, %r301, 8;
	mov.b64 	%rd111, {%r308, %r307};
	shf.r.wrap.b32 	%r309, %r301, %r302, 1;
	shf.r.wrap.b32 	%r310, %r302, %r301, 1;
	mov.b64 	%rd112, {%r310, %r309};
	xor.b64  	%rd22, %rd112, %rd111;
	mov.u32 	%r3706, 0;

BB4_3:
	ld.param.u32 	%r3698, [m01700_s04_param_33];
	ld.param.u64 	%rd2679, [m01700_s04_param_2];
	mul.wide.u32 	%rd113, %r3706, 260;
	add.s64 	%rd114, %rd2679, %rd113;
	ld.global.u32 	%r18, [%rd114+256];
	ld.global.u32 	%r3717, [%rd114];
	ld.global.u32 	%r3718, [%rd114+4];
	ld.global.u32 	%r3719, [%rd114+8];
	ld.global.u32 	%r3720, [%rd114+12];
	ld.global.u32 	%r3713, [%rd114+16];
	ld.global.u32 	%r3714, [%rd114+20];
	ld.global.u32 	%r3715, [%rd114+24];
	ld.global.u32 	%r3716, [%rd114+28];
	setp.eq.s32	%p3, %r3698, 10001;
	@%p3 bra 	BB4_49;
	bra.uni 	BB4_4;

BB4_49:
	mov.u32 	%r3707, 0;
	setp.gt.s32	%p27, %r15, 7;
	@%p27 bra 	BB4_66;

	setp.gt.s32	%p39, %r15, 3;
	@%p39 bra 	BB4_58;

	setp.gt.s32	%p45, %r15, 1;
	@%p45 bra 	BB4_55;

	setp.eq.s32	%p48, %r15, 0;
	@%p48 bra 	BB4_91;
	bra.uni 	BB4_53;

BB4_91:
	mov.u32 	%r3721, 0;
	// inline asm
	prmt.b32 %r1790, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1794, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3711, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3710, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3709, %r3716, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3716, %r3715, %r3716, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3715, %r3714, %r3715, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3714, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3713, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3720, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3719, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3718, %r3717, %r3718, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3717, %r3721, %r3717, %r16;
	// inline asm
	bra.uni 	BB4_92;

BB4_4:
	mov.u32 	%r3700, 1985229328;
	mov.u32 	%r3699, 4;
	and.b32  	%r324, %r18, 3;
	sub.s32 	%r326, %r3699, %r324;
	shl.b32 	%r327, %r326, 2;
	shr.u32 	%r329, %r3700, %r327;
	and.b32  	%r27, %r329, 65535;
	shr.u32 	%r323, %r18, 2;
	mov.u32 	%r3707, 0;
	setp.gt.s32	%p4, %r323, 7;
	@%p4 bra 	BB4_20;

	setp.gt.s32	%p16, %r323, 3;
	@%p16 bra 	BB4_13;

	setp.gt.s32	%p22, %r323, 1;
	@%p22 bra 	BB4_10;

	setp.eq.s32	%p25, %r323, 0;
	@%p25 bra 	BB4_48;
	bra.uni 	BB4_8;

BB4_48:
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r1019, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r1023, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3725, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3724, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3723, %r9, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3730, %r8, %r9, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3729, %r7, %r8, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3728, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3727, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3734, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3733, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3732, %r2, %r3, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3731, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	bra.uni 	BB4_94;

BB4_66:
	setp.gt.s32	%p28, %r15, 11;
	@%p28 bra 	BB4_74;

	setp.gt.s32	%p34, %r15, 9;
	@%p34 bra 	BB4_71;

	setp.eq.s32	%p37, %r15, 8;
	@%p37 bra 	BB4_87;
	bra.uni 	BB4_69;

BB4_87:
	// inline asm
	prmt.b32 %r1338, %r3715, %r3716, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1342, %r3714, %r3715, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3711, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3710, %r3717, %r3718, %r16;
	// inline asm
	mov.u32 	%r3713, 0;
	// inline asm
	prmt.b32 %r3709, %r3713, %r3717, %r16;
	// inline asm
	mov.u32 	%r3714, %r3713;
	mov.u32 	%r3715, %r3713;
	mov.u32 	%r3716, %r3713;
	mov.u32 	%r3717, %r3713;
	mov.u32 	%r3718, %r3713;
	mov.u32 	%r3719, %r3713;
	mov.u32 	%r3720, %r3713;
	mov.u32 	%r3721, %r3713;
	mov.u32 	%r3722, %r3713;
	mov.u32 	%r3723, %r3713;
	mov.u32 	%r3724, %r3713;
	mov.u32 	%r3725, %r3713;
	mov.u32 	%r3726, %r3713;
	bra.uni 	BB4_93;

BB4_20:
	setp.gt.s32	%p5, %r323, 11;
	@%p5 bra 	BB4_28;

	setp.gt.s32	%p11, %r323, 9;
	@%p11 bra 	BB4_25;

	setp.eq.s32	%p14, %r323, 8;
	@%p14 bra 	BB4_44;
	bra.uni 	BB4_23;

BB4_44:
	// inline asm
	prmt.b32 %r567, %r8, %r9, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r571, %r7, %r8, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3725, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3724, %r2, %r3, %r27;
	// inline asm
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r3723, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	bra.uni 	BB4_39;

BB4_58:
	setp.gt.s32	%p40, %r15, 5;
	@%p40 bra 	BB4_62;

	setp.eq.s32	%p43, %r15, 4;
	@%p43 bra 	BB4_89;
	bra.uni 	BB4_60;

BB4_89:
	mov.u32 	%r3721, 0;
	// inline asm
	prmt.b32 %r1540, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1544, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3716, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3715, %r3716, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3711, %r3714, %r3715, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3710, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3709, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3716, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3715, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3714, %r3717, %r3718, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3713, %r3721, %r3717, %r16;
	// inline asm
	bra.uni 	BB4_65;

BB4_13:
	setp.gt.s32	%p17, %r323, 5;
	@%p17 bra 	BB4_17;

	setp.eq.s32	%p20, %r323, 4;
	@%p20 bra 	BB4_46;
	bra.uni 	BB4_15;

BB4_46:
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r769, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r773, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r9, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r8, %r9, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3725, %r7, %r8, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3724, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3723, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3730, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3729, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3728, %r2, %r3, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3727, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	bra.uni 	BB4_40;

BB4_74:
	setp.gt.s32	%p29, %r15, 13;
	@%p29 bra 	BB4_78;

	setp.eq.s32	%p32, %r15, 12;
	@%p32 bra 	BB4_84;
	bra.uni 	BB4_76;

BB4_84:
	// inline asm
	prmt.b32 %r1184, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1188, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3717, %r3718, %r16;
	// inline asm
	mov.u32 	%r3709, 0;
	// inline asm
	prmt.b32 %r3707, %r3709, %r3717, %r16;
	// inline asm
	mov.u32 	%r3710, %r3709;
	mov.u32 	%r3711, %r3709;
	mov.u32 	%r3712, %r3709;
	bra.uni 	BB4_85;

BB4_28:
	setp.gt.s32	%p6, %r323, 13;
	@%p6 bra 	BB4_32;

	setp.eq.s32	%p9, %r323, 12;
	@%p9 bra 	BB4_42;
	bra.uni 	BB4_30;

BB4_42:
	// inline asm
	prmt.b32 %r413, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r417, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r2, %r3, %r27;
	// inline asm
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r3721, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	bra.uni 	BB4_38;

BB4_55:
	setp.eq.s32	%p46, %r15, 2;
	@%p46 bra 	BB4_90;
	bra.uni 	BB4_56;

BB4_90:
	mov.u32 	%r3721, 0;
	// inline asm
	prmt.b32 %r1659, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1663, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3711, %r3716, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3710, %r3715, %r3716, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3709, %r3714, %r3715, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3716, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3715, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3714, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3713, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3720, %r3717, %r3718, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3719, %r3721, %r3717, %r16;
	// inline asm
	mov.u32 	%r3717, %r3721;
	mov.u32 	%r3718, %r3721;
	bra.uni 	BB4_92;

BB4_10:
	setp.eq.s32	%p23, %r323, 2;
	@%p23 bra 	BB4_47;
	bra.uni 	BB4_11;

BB4_47:
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r888, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r892, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3725, %r9, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3724, %r8, %r9, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3723, %r7, %r8, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3730, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3729, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3728, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3727, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3734, %r2, %r3, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3733, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3731, %r3707;
	mov.u32 	%r3732, %r3707;
	bra.uni 	BB4_94;

BB4_71:
	setp.eq.s32	%p35, %r15, 10;
	@%p35 bra 	BB4_86;
	bra.uni 	BB4_72;

BB4_86:
	// inline asm
	prmt.b32 %r1255, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1259, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3717, %r3718, %r16;
	// inline asm
	mov.u32 	%r3709, 0;
	// inline asm
	prmt.b32 %r3711, %r3709, %r3717, %r16;
	// inline asm
	mov.u32 	%r3710, %r3709;
	bra.uni 	BB4_85;

BB4_25:
	setp.eq.s32	%p12, %r323, 10;
	@%p12 bra 	BB4_43;
	bra.uni 	BB4_26;

BB4_43:
	// inline asm
	prmt.b32 %r484, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r488, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r2, %r3, %r27;
	// inline asm
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r3725, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3723, %r3707;
	mov.u32 	%r3724, %r3707;
	bra.uni 	BB4_39;

BB4_62:
	setp.eq.s32	%p41, %r15, 6;
	@%p41 bra 	BB4_88;
	bra.uni 	BB4_63;

BB4_88:
	mov.u32 	%r3721, 0;
	// inline asm
	prmt.b32 %r1433, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1437, %r3716, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3715, %r3716, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3714, %r3715, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3711, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3710, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3709, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3716, %r3717, %r3718, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3715, %r3721, %r3717, %r16;
	// inline asm
	mov.u32 	%r3713, %r3721;
	mov.u32 	%r3714, %r3721;
	bra.uni 	BB4_65;

BB4_17:
	setp.eq.s32	%p18, %r323, 6;
	@%p18 bra 	BB4_45;
	bra.uni 	BB4_18;

BB4_45:
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r662, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r666, %r9, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r8, %r9, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r7, %r8, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3725, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3724, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3723, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3730, %r2, %r3, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3729, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3727, %r3707;
	mov.u32 	%r3728, %r3707;
	bra.uni 	BB4_40;

BB4_78:
	setp.eq.s32	%p30, %r15, 14;
	@%p30 bra 	BB4_83;
	bra.uni 	BB4_79;

BB4_83:
	// inline asm
	prmt.b32 %r1125, %r3717, %r3718, %r16;
	// inline asm
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r1129, %r3707, %r3717, %r16;
	// inline asm
	bra.uni 	BB4_81;

BB4_32:
	setp.eq.s32	%p7, %r323, 14;
	@%p7 bra 	BB4_41;
	bra.uni 	BB4_33;

BB4_41:
	// inline asm
	prmt.b32 %r354, %r2, %r3, %r27;
	// inline asm
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r358, %r3707, %r2, %r27;
	// inline asm
	bra.uni 	BB4_37;

BB4_53:
	setp.eq.s32	%p49, %r15, 1;
	@%p49 bra 	BB4_54;
	bra.uni 	BB4_34;

BB4_54:
	mov.u32 	%r3721, 0;
	// inline asm
	prmt.b32 %r1723, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1727, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3711, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3710, %r3716, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3709, %r3715, %r3716, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3716, %r3714, %r3715, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3715, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3714, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3713, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3720, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3719, %r3717, %r3718, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3718, %r3721, %r3717, %r16;
	// inline asm
	mov.u32 	%r3717, %r3721;
	bra.uni 	BB4_92;

BB4_8:
	setp.eq.s32	%p26, %r323, 1;
	@%p26 bra 	BB4_9;
	bra.uni 	BB4_34;

BB4_9:
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r952, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r956, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3725, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3724, %r9, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3723, %r8, %r9, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3730, %r7, %r8, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3729, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3728, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3727, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3734, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3733, %r2, %r3, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3732, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3731, %r3707;
	bra.uni 	BB4_94;

BB4_69:
	setp.eq.s32	%p38, %r15, 9;
	@%p38 bra 	BB4_70;
	bra.uni 	BB4_34;

BB4_70:
	// inline asm
	prmt.b32 %r1295, %r3714, %r3715, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1299, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3711, %r3717, %r3718, %r16;
	// inline asm
	mov.u32 	%r3709, 0;
	// inline asm
	prmt.b32 %r3710, %r3709, %r3717, %r16;
	// inline asm
	bra.uni 	BB4_85;

BB4_23:
	setp.eq.s32	%p15, %r323, 9;
	@%p15 bra 	BB4_24;
	bra.uni 	BB4_34;

BB4_24:
	// inline asm
	prmt.b32 %r524, %r7, %r8, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r528, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3725, %r2, %r3, %r27;
	// inline asm
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r3724, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3723, %r3707;
	bra.uni 	BB4_39;

BB4_60:
	setp.eq.s32	%p44, %r15, 5;
	@%p44 bra 	BB4_61;
	bra.uni 	BB4_34;

BB4_61:
	mov.u32 	%r3721, 0;
	// inline asm
	prmt.b32 %r1485, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1489, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3716, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3715, %r3716, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3714, %r3715, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3711, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3710, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3709, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3716, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3715, %r3717, %r3718, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3714, %r3721, %r3717, %r16;
	// inline asm
	mov.u32 	%r3713, %r3721;
	bra.uni 	BB4_65;

BB4_15:
	setp.eq.s32	%p21, %r323, 5;
	@%p21 bra 	BB4_16;
	bra.uni 	BB4_34;

BB4_16:
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r714, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r718, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r9, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r8, %r9, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r7, %r8, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3725, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3724, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3723, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3730, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3729, %r2, %r3, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3728, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3727, %r3707;
	bra.uni 	BB4_40;

BB4_76:
	setp.eq.s32	%p33, %r15, 13;
	@%p33 bra 	BB4_77;
	bra.uni 	BB4_34;

BB4_77:
	// inline asm
	prmt.b32 %r1153, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1157, %r3717, %r3718, %r16;
	// inline asm
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r3708, %r3707, %r3717, %r16;
	// inline asm
	bra.uni 	BB4_82;

BB4_30:
	setp.eq.s32	%p10, %r323, 13;
	@%p10 bra 	BB4_31;
	bra.uni 	BB4_34;

BB4_31:
	// inline asm
	prmt.b32 %r382, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r386, %r2, %r3, %r27;
	// inline asm
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r3722, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3721, %r3707;
	bra.uni 	BB4_38;

BB4_56:
	setp.eq.s32	%p47, %r15, 3;
	@%p47 bra 	BB4_57;
	bra.uni 	BB4_34;

BB4_57:
	mov.u32 	%r3721, 0;
	// inline asm
	prmt.b32 %r1598, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1602, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3721, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3716, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3711, %r3715, %r3716, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3710, %r3714, %r3715, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3709, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3716, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3715, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3714, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3713, %r3717, %r3718, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3720, %r3721, %r3717, %r16;
	// inline asm
	mov.u32 	%r3717, %r3721;
	mov.u32 	%r3718, %r3721;
	mov.u32 	%r3719, %r3721;
	bra.uni 	BB4_92;

BB4_11:
	setp.eq.s32	%p24, %r323, 3;
	@%p24 bra 	BB4_12;
	bra.uni 	BB4_34;

BB4_12:
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r827, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r831, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r3707, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r9, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3725, %r8, %r9, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3724, %r7, %r8, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3723, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3730, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3729, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3728, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3727, %r2, %r3, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3734, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3731, %r3707;
	mov.u32 	%r3732, %r3707;
	mov.u32 	%r3733, %r3707;
	bra.uni 	BB4_94;

BB4_72:
	setp.eq.s32	%p36, %r15, 11;
	@%p36 bra 	BB4_73;
	bra.uni 	BB4_34;

BB4_73:
	// inline asm
	prmt.b32 %r1218, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1222, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3717, %r3718, %r16;
	// inline asm
	mov.u32 	%r3709, 0;
	// inline asm
	prmt.b32 %r3712, %r3709, %r3717, %r16;
	// inline asm
	mov.u32 	%r3710, %r3709;
	mov.u32 	%r3711, %r3709;

BB4_85:
	mov.u32 	%r3713, %r3709;
	mov.u32 	%r3714, %r3709;
	mov.u32 	%r3715, %r3709;
	mov.u32 	%r3716, %r3709;
	mov.u32 	%r3717, %r3709;
	mov.u32 	%r3718, %r3709;
	mov.u32 	%r3719, %r3709;
	mov.u32 	%r3720, %r3709;
	mov.u32 	%r3721, %r3709;
	mov.u32 	%r3722, %r3709;
	mov.u32 	%r3723, %r3709;
	mov.u32 	%r3724, %r3709;
	mov.u32 	%r3725, %r3709;
	mov.u32 	%r3726, %r3709;
	bra.uni 	BB4_93;

BB4_26:
	setp.eq.s32	%p13, %r323, 11;
	@%p13 bra 	BB4_27;
	bra.uni 	BB4_34;

BB4_27:
	// inline asm
	prmt.b32 %r447, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r451, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r2, %r3, %r27;
	// inline asm
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r3726, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3723, %r3707;
	mov.u32 	%r3724, %r3707;
	mov.u32 	%r3725, %r3707;
	bra.uni 	BB4_39;

BB4_63:
	setp.eq.s32	%p42, %r15, 7;
	@%p42 bra 	BB4_64;
	bra.uni 	BB4_34;

BB4_64:
	mov.u32 	%r3721, 0;
	// inline asm
	prmt.b32 %r1384, %r3716, %r3721, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r1388, %r3715, %r3716, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3708, %r3714, %r3715, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3707, %r3713, %r3714, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3712, %r3720, %r3713, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3711, %r3719, %r3720, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3710, %r3718, %r3719, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3709, %r3717, %r3718, %r16;
	// inline asm
	// inline asm
	prmt.b32 %r3716, %r3721, %r3717, %r16;
	// inline asm
	mov.u32 	%r3713, %r3721;
	mov.u32 	%r3714, %r3721;
	mov.u32 	%r3715, %r3721;

BB4_65:
	mov.u32 	%r3717, %r3721;
	mov.u32 	%r3718, %r3721;
	mov.u32 	%r3719, %r3721;
	mov.u32 	%r3720, %r3721;

BB4_92:
	mov.u32 	%r3722, %r3721;
	mov.u32 	%r3723, %r3721;
	mov.u32 	%r3724, %r3721;
	mov.u32 	%r3725, %r3721;
	mov.u32 	%r3726, %r3721;
	bra.uni 	BB4_93;

BB4_18:
	setp.eq.s32	%p19, %r323, 7;
	@%p19 bra 	BB4_19;
	bra.uni 	BB4_34;

BB4_19:
	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r613, %r9, %r3707, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r617, %r8, %r9, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3722, %r7, %r8, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3721, %r6, %r7, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3726, %r5, %r6, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3725, %r4, %r5, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3724, %r3, %r4, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3723, %r2, %r3, %r27;
	// inline asm
	// inline asm
	prmt.b32 %r3730, %r3707, %r2, %r27;
	// inline asm
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3727, %r3707;
	mov.u32 	%r3728, %r3707;
	mov.u32 	%r3729, %r3707;
	bra.uni 	BB4_40;

BB4_79:
	setp.ne.s32	%p31, %r15, 15;
	@%p31 bra 	BB4_34;

	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r1101, %r3707, %r3717, %r16;
	// inline asm

BB4_81:
	mov.u32 	%r3708, %r3707;

BB4_82:
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3713, %r3707;
	mov.u32 	%r3714, %r3707;
	mov.u32 	%r3715, %r3707;
	mov.u32 	%r3716, %r3707;
	mov.u32 	%r3717, %r3707;
	mov.u32 	%r3718, %r3707;
	mov.u32 	%r3719, %r3707;
	mov.u32 	%r3720, %r3707;
	bra.uni 	BB4_35;

BB4_33:
	setp.ne.s32	%p8, %r323, 15;
	@%p8 bra 	BB4_34;

	mov.u32 	%r3707, 0;
	// inline asm
	prmt.b32 %r330, %r3707, %r2, %r27;
	// inline asm

BB4_37:
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;
	mov.u32 	%r3721, %r3707;
	mov.u32 	%r3722, %r3707;

BB4_38:
	mov.u32 	%r3723, %r3707;
	mov.u32 	%r3724, %r3707;
	mov.u32 	%r3725, %r3707;
	mov.u32 	%r3726, %r3707;

BB4_39:
	mov.u32 	%r3727, %r3707;
	mov.u32 	%r3728, %r3707;
	mov.u32 	%r3729, %r3707;
	mov.u32 	%r3730, %r3707;

BB4_40:
	mov.u32 	%r3731, %r3707;
	mov.u32 	%r3732, %r3707;
	mov.u32 	%r3733, %r3707;
	mov.u32 	%r3734, %r3707;
	bra.uni 	BB4_94;

BB4_34:
	mov.u32 	%r3708, %r3707;
	mov.u32 	%r3709, %r3707;
	mov.u32 	%r3710, %r3707;
	mov.u32 	%r3711, %r3707;
	mov.u32 	%r3712, %r3707;

BB4_35:
	mov.u32 	%r3721, %r3707;
	mov.u32 	%r3722, %r3707;
	mov.u32 	%r3723, %r3707;
	mov.u32 	%r3724, %r3707;
	mov.u32 	%r3725, %r3707;
	mov.u32 	%r3726, %r3707;

BB4_93:
	mov.u32 	%r3727, %r6;
	mov.u32 	%r3728, %r7;
	mov.u32 	%r3729, %r8;
	mov.u32 	%r3730, %r9;
	mov.u32 	%r3731, %r2;
	mov.u32 	%r3732, %r3;
	mov.u32 	%r3733, %r4;
	mov.u32 	%r3734, %r5;

BB4_94:
	ld.const.u64 	%rd2756, [k_sha512+608];
	ld.const.u64 	%rd2755, [k_sha512+600];
	ld.const.u64 	%rd2754, [k_sha512+592];
	ld.const.u64 	%rd2753, [k_sha512+584];
	ld.const.u64 	%rd2752, [k_sha512+576];
	ld.const.u64 	%rd2751, [k_sha512+568];
	ld.const.u64 	%rd2750, [k_sha512+560];
	ld.const.u64 	%rd2749, [k_sha512+552];
	ld.const.u64 	%rd2748, [k_sha512+544];
	ld.const.u64 	%rd2747, [k_sha512+536];
	ld.const.u64 	%rd2746, [k_sha512+528];
	ld.const.u64 	%rd2745, [k_sha512+520];
	ld.const.u64 	%rd2744, [k_sha512+512];
	ld.const.u64 	%rd2743, [k_sha512+504];
	ld.const.u64 	%rd2742, [k_sha512+496];
	ld.const.u64 	%rd2741, [k_sha512+488];
	ld.const.u64 	%rd2740, [k_sha512+480];
	ld.const.u64 	%rd2739, [k_sha512+472];
	ld.const.u64 	%rd2738, [k_sha512+464];
	ld.const.u64 	%rd2737, [k_sha512+456];
	ld.const.u64 	%rd2736, [k_sha512+448];
	ld.const.u64 	%rd2735, [k_sha512+440];
	ld.const.u64 	%rd2734, [k_sha512+432];
	ld.const.u64 	%rd2733, [k_sha512+424];
	ld.const.u64 	%rd2732, [k_sha512+416];
	ld.const.u64 	%rd2731, [k_sha512+408];
	ld.const.u64 	%rd2730, [k_sha512+400];
	ld.const.u64 	%rd2729, [k_sha512+392];
	ld.const.u64 	%rd2728, [k_sha512+384];
	ld.const.u64 	%rd2727, [k_sha512+376];
	ld.const.u64 	%rd2726, [k_sha512+368];
	ld.const.u64 	%rd2725, [k_sha512+360];
	ld.const.u64 	%rd2724, [k_sha512+352];
	ld.const.u64 	%rd2723, [k_sha512+344];
	ld.const.u64 	%rd2722, [k_sha512+336];
	ld.const.u64 	%rd2721, [k_sha512+328];
	ld.const.u64 	%rd2720, [k_sha512+320];
	ld.const.u64 	%rd2719, [k_sha512+312];
	ld.const.u64 	%rd2718, [k_sha512+304];
	ld.const.u64 	%rd2717, [k_sha512+296];
	ld.const.u64 	%rd2716, [k_sha512+288];
	ld.const.u64 	%rd2715, [k_sha512+280];
	ld.const.u64 	%rd2714, [k_sha512+272];
	ld.const.u64 	%rd2713, [k_sha512+264];
	ld.const.u64 	%rd2712, [k_sha512+256];
	ld.const.u64 	%rd2711, [k_sha512+248];
	ld.const.u64 	%rd2710, [k_sha512+240];
	ld.const.u64 	%rd2709, [k_sha512+232];
	ld.const.u64 	%rd2708, [k_sha512+224];
	ld.const.u64 	%rd2707, [k_sha512+216];
	ld.const.u64 	%rd2706, [k_sha512+208];
	ld.const.u64 	%rd2705, [k_sha512+200];
	ld.const.u64 	%rd2704, [k_sha512+192];
	ld.const.u64 	%rd2703, [k_sha512+184];
	ld.const.u64 	%rd2702, [k_sha512+176];
	ld.const.u64 	%rd2701, [k_sha512+168];
	ld.const.u64 	%rd2700, [k_sha512+160];
	ld.const.u64 	%rd2699, [k_sha512+152];
	ld.const.u64 	%rd2698, [k_sha512+144];
	ld.const.u64 	%rd2697, [k_sha512+136];
	ld.const.u64 	%rd2696, [k_sha512+128];
	ld.const.u64 	%rd2695, [k_sha512+120];
	ld.const.u64 	%rd2694, [k_sha512+112];
	ld.const.u64 	%rd2693, [k_sha512+104];
	ld.const.u64 	%rd2692, [k_sha512+96];
	ld.const.u64 	%rd2691, [k_sha512+88];
	ld.const.u64 	%rd2690, [k_sha512+80];
	ld.const.u64 	%rd2689, [k_sha512+72];
	ld.const.u64 	%rd2688, [k_sha512+64];
	ld.const.u64 	%rd2687, [k_sha512+56];
	ld.const.u64 	%rd2686, [k_sha512+48];
	ld.const.u64 	%rd2685, [k_sha512+40];
	ld.const.u64 	%rd2684, [k_sha512+32];
	ld.const.u64 	%rd2683, [k_sha512+24];
	ld.const.u64 	%rd2682, [k_sha512+16];
	ld.const.u64 	%rd2681, [k_sha512+8];
	ld.const.u64 	%rd2680, [k_sha512];
	or.b32  	%r1861, %r3731, %r3717;
	or.b32  	%r1863, %r3732, %r3718;
	or.b32  	%r1865, %r3733, %r3719;
	or.b32  	%r1867, %r3734, %r3720;
	or.b32  	%r1869, %r3727, %r3713;
	or.b32  	%r1871, %r3728, %r3714;
	or.b32  	%r1873, %r3729, %r3715;
	or.b32  	%r1875, %r3730, %r3716;
	or.b32  	%r1877, %r3723, %r3709;
	or.b32  	%r1879, %r3724, %r3710;
	or.b32  	%r1881, %r3725, %r3711;
	or.b32  	%r1883, %r3726, %r3712;
	or.b32  	%r1885, %r3721, %r3707;
	or.b32  	%r1887, %r3722, %r3708;
	// inline asm
	prmt.b32 %r1860, %r1861, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1862, %r1863, 0, 0x0123;
	// inline asm
	mov.b64	%rd115, {%r1862, %r1860};
	// inline asm
	prmt.b32 %r1864, %r1865, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1866, %r1867, 0, 0x0123;
	// inline asm
	mov.b64	%rd116, {%r1866, %r1864};
	// inline asm
	prmt.b32 %r1868, %r1869, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1870, %r1871, 0, 0x0123;
	// inline asm
	mov.b64	%rd117, {%r1870, %r1868};
	// inline asm
	prmt.b32 %r1872, %r1873, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1874, %r1875, 0, 0x0123;
	// inline asm
	mov.b64	%rd118, {%r1874, %r1872};
	// inline asm
	prmt.b32 %r1876, %r1877, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1878, %r1879, 0, 0x0123;
	// inline asm
	mov.b64	%rd119, {%r1878, %r1876};
	// inline asm
	prmt.b32 %r1880, %r1881, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1882, %r1883, 0, 0x0123;
	// inline asm
	mov.b64	%rd120, {%r1882, %r1880};
	// inline asm
	prmt.b32 %r1884, %r1885, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1886, %r1887, 0, 0x0123;
	// inline asm
	mov.b64	%rd121, {%r1886, %r1884};
	add.s32 	%r1888, %r18, %r10;
	shl.b32 	%r1889, %r1888, 3;
	mov.u32 	%r1890, 0;
	mov.b64	%rd122, {%r1889, %r1890};
	add.s64 	%rd123, %rd115, %rd2680;
	add.s64 	%rd124, %rd123, %rd3;
	add.s64 	%rd125, %rd124, %rd4;
	add.s64 	%rd126, %rd124, 2357225248857953701;
	add.s64 	%rd127, %rd125, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1891,%dummy}, %rd126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1892}, %rd126;
	}
	shf.r.wrap.b32 	%r1893, %r1892, %r1891, 14;
	shf.r.wrap.b32 	%r1894, %r1891, %r1892, 14;
	mov.b64 	%rd128, {%r1894, %r1893};
	shf.r.wrap.b32 	%r1895, %r1892, %r1891, 18;
	shf.r.wrap.b32 	%r1896, %r1891, %r1892, 18;
	mov.b64 	%rd129, {%r1896, %r1895};
	xor.b64  	%rd130, %rd129, %rd128;
	shf.l.wrap.b32 	%r1897, %r1891, %r1892, 23;
	shf.l.wrap.b32 	%r1898, %r1892, %r1891, 23;
	mov.b64 	%rd131, {%r1898, %r1897};
	xor.b64  	%rd132, %rd130, %rd131;
	and.b64  	%rd133, %rd126, -3887949035690463538;
	xor.b64  	%rd134, %rd133, -7276294671716946913;
	add.s64 	%rd135, %rd116, %rd2681;
	add.s64 	%rd136, %rd135, %rd134;
	add.s64 	%rd137, %rd136, %rd132;
	xor.b64  	%rd138, %rd127, -4942790177534073029;
	xor.b64  	%rd139, %rd127, 7640891576956012808;
	and.b64  	%rd140, %rd139, %rd138;
	xor.b64  	%rd141, %rd140, %rd127;
	add.s64 	%rd142, %rd137, %rd141;
	add.s64 	%rd143, %rd137, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1899,%dummy}, %rd127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1900}, %rd127;
	}
	shf.r.wrap.b32 	%r1901, %r1900, %r1899, 28;
	shf.r.wrap.b32 	%r1902, %r1899, %r1900, 28;
	mov.b64 	%rd144, {%r1902, %r1901};
	shf.l.wrap.b32 	%r1903, %r1899, %r1900, 30;
	shf.l.wrap.b32 	%r1904, %r1900, %r1899, 30;
	mov.b64 	%rd145, {%r1904, %r1903};
	xor.b64  	%rd146, %rd145, %rd144;
	shf.l.wrap.b32 	%r1905, %r1899, %r1900, 25;
	shf.l.wrap.b32 	%r1906, %r1900, %r1899, 25;
	mov.b64 	%rd147, {%r1906, %r1905};
	xor.b64  	%rd148, %rd146, %rd147;
	add.s64 	%rd149, %rd142, %rd148;
	add.s64 	%rd150, %rd149, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1907,%dummy}, %rd143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1908}, %rd143;
	}
	shf.r.wrap.b32 	%r1909, %r1908, %r1907, 14;
	shf.r.wrap.b32 	%r1910, %r1907, %r1908, 14;
	mov.b64 	%rd151, {%r1910, %r1909};
	shf.r.wrap.b32 	%r1911, %r1908, %r1907, 18;
	shf.r.wrap.b32 	%r1912, %r1907, %r1908, 18;
	mov.b64 	%rd152, {%r1912, %r1911};
	xor.b64  	%rd153, %rd152, %rd151;
	shf.l.wrap.b32 	%r1913, %r1907, %r1908, 23;
	shf.l.wrap.b32 	%r1914, %r1908, %r1907, 23;
	mov.b64 	%rd154, {%r1914, %r1913};
	xor.b64  	%rd155, %rd153, %rd154;
	xor.b64  	%rd156, %rd126, 5840696475078001361;
	and.b64  	%rd157, %rd143, %rd156;
	xor.b64  	%rd158, %rd157, 5840696475078001361;
	add.s64 	%rd159, %rd117, %rd2682;
	add.s64 	%rd160, %rd159, %rd158;
	add.s64 	%rd161, %rd160, %rd155;
	xor.b64  	%rd162, %rd150, 7640891576956012808;
	xor.b64  	%rd163, %rd150, %rd127;
	and.b64  	%rd164, %rd163, %rd162;
	xor.b64  	%rd165, %rd164, %rd150;
	add.s64 	%rd166, %rd161, %rd165;
	add.s64 	%rd167, %rd161, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1915,%dummy}, %rd150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1916}, %rd150;
	}
	shf.r.wrap.b32 	%r1917, %r1916, %r1915, 28;
	shf.r.wrap.b32 	%r1918, %r1915, %r1916, 28;
	mov.b64 	%rd168, {%r1918, %r1917};
	shf.l.wrap.b32 	%r1919, %r1915, %r1916, 30;
	shf.l.wrap.b32 	%r1920, %r1916, %r1915, 30;
	mov.b64 	%rd169, {%r1920, %r1919};
	xor.b64  	%rd170, %rd169, %rd168;
	shf.l.wrap.b32 	%r1921, %r1915, %r1916, 25;
	shf.l.wrap.b32 	%r1922, %r1916, %r1915, 25;
	mov.b64 	%rd171, {%r1922, %r1921};
	xor.b64  	%rd172, %rd170, %rd171;
	add.s64 	%rd173, %rd166, %rd172;
	add.s64 	%rd174, %rd173, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1923,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1924}, %rd167;
	}
	shf.r.wrap.b32 	%r1925, %r1924, %r1923, 14;
	shf.r.wrap.b32 	%r1926, %r1923, %r1924, 14;
	mov.b64 	%rd175, {%r1926, %r1925};
	shf.r.wrap.b32 	%r1927, %r1924, %r1923, 18;
	shf.r.wrap.b32 	%r1928, %r1923, %r1924, 18;
	mov.b64 	%rd176, {%r1928, %r1927};
	xor.b64  	%rd177, %rd176, %rd175;
	shf.l.wrap.b32 	%r1929, %r1923, %r1924, 23;
	shf.l.wrap.b32 	%r1930, %r1924, %r1923, 23;
	mov.b64 	%rd178, {%r1930, %r1929};
	xor.b64  	%rd179, %rd177, %rd178;
	xor.b64  	%rd180, %rd143, %rd126;
	and.b64  	%rd181, %rd167, %rd180;
	xor.b64  	%rd182, %rd181, %rd126;
	add.s64 	%rd183, %rd118, %rd2683;
	add.s64 	%rd184, %rd183, %rd182;
	add.s64 	%rd185, %rd184, %rd179;
	xor.b64  	%rd186, %rd174, %rd127;
	xor.b64  	%rd187, %rd174, %rd150;
	and.b64  	%rd188, %rd187, %rd186;
	xor.b64  	%rd189, %rd188, %rd174;
	add.s64 	%rd190, %rd185, %rd189;
	add.s64 	%rd191, %rd185, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1931,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1932}, %rd174;
	}
	shf.r.wrap.b32 	%r1933, %r1932, %r1931, 28;
	shf.r.wrap.b32 	%r1934, %r1931, %r1932, 28;
	mov.b64 	%rd192, {%r1934, %r1933};
	shf.l.wrap.b32 	%r1935, %r1931, %r1932, 30;
	shf.l.wrap.b32 	%r1936, %r1932, %r1931, 30;
	mov.b64 	%rd193, {%r1936, %r1935};
	xor.b64  	%rd194, %rd193, %rd192;
	shf.l.wrap.b32 	%r1937, %r1931, %r1932, 25;
	shf.l.wrap.b32 	%r1938, %r1932, %r1931, 25;
	mov.b64 	%rd195, {%r1938, %r1937};
	xor.b64  	%rd196, %rd194, %rd195;
	add.s64 	%rd197, %rd190, %rd196;
	add.s64 	%rd198, %rd197, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1939,%dummy}, %rd191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1940}, %rd191;
	}
	shf.r.wrap.b32 	%r1941, %r1940, %r1939, 14;
	shf.r.wrap.b32 	%r1942, %r1939, %r1940, 14;
	mov.b64 	%rd199, {%r1942, %r1941};
	shf.r.wrap.b32 	%r1943, %r1940, %r1939, 18;
	shf.r.wrap.b32 	%r1944, %r1939, %r1940, 18;
	mov.b64 	%rd200, {%r1944, %r1943};
	xor.b64  	%rd201, %rd200, %rd199;
	shf.l.wrap.b32 	%r1945, %r1939, %r1940, 23;
	shf.l.wrap.b32 	%r1946, %r1940, %r1939, 23;
	mov.b64 	%rd202, {%r1946, %r1945};
	xor.b64  	%rd203, %rd201, %rd202;
	xor.b64  	%rd204, %rd167, %rd143;
	and.b64  	%rd205, %rd191, %rd204;
	xor.b64  	%rd206, %rd205, %rd143;
	add.s64 	%rd207, %rd126, %rd119;
	add.s64 	%rd208, %rd207, %rd2684;
	add.s64 	%rd209, %rd208, %rd206;
	add.s64 	%rd210, %rd209, %rd203;
	add.s64 	%rd211, %rd210, %rd127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1947,%dummy}, %rd198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1948}, %rd198;
	}
	shf.r.wrap.b32 	%r1949, %r1948, %r1947, 28;
	shf.r.wrap.b32 	%r1950, %r1947, %r1948, 28;
	mov.b64 	%rd212, {%r1950, %r1949};
	shf.l.wrap.b32 	%r1951, %r1947, %r1948, 30;
	shf.l.wrap.b32 	%r1952, %r1948, %r1947, 30;
	mov.b64 	%rd213, {%r1952, %r1951};
	xor.b64  	%rd214, %rd213, %rd212;
	shf.l.wrap.b32 	%r1953, %r1947, %r1948, 25;
	shf.l.wrap.b32 	%r1954, %r1948, %r1947, 25;
	mov.b64 	%rd215, {%r1954, %r1953};
	xor.b64  	%rd216, %rd214, %rd215;
	xor.b64  	%rd217, %rd198, %rd150;
	xor.b64  	%rd218, %rd198, %rd174;
	and.b64  	%rd219, %rd218, %rd217;
	xor.b64  	%rd220, %rd219, %rd198;
	add.s64 	%rd221, %rd210, %rd220;
	add.s64 	%rd222, %rd221, %rd216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1955,%dummy}, %rd211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1956}, %rd211;
	}
	shf.r.wrap.b32 	%r1957, %r1956, %r1955, 14;
	shf.r.wrap.b32 	%r1958, %r1955, %r1956, 14;
	mov.b64 	%rd223, {%r1958, %r1957};
	shf.r.wrap.b32 	%r1959, %r1956, %r1955, 18;
	shf.r.wrap.b32 	%r1960, %r1955, %r1956, 18;
	mov.b64 	%rd224, {%r1960, %r1959};
	xor.b64  	%rd225, %rd224, %rd223;
	shf.l.wrap.b32 	%r1961, %r1955, %r1956, 23;
	shf.l.wrap.b32 	%r1962, %r1956, %r1955, 23;
	mov.b64 	%rd226, {%r1962, %r1961};
	xor.b64  	%rd227, %rd225, %rd226;
	xor.b64  	%rd228, %rd191, %rd167;
	and.b64  	%rd229, %rd211, %rd228;
	xor.b64  	%rd230, %rd229, %rd167;
	add.s64 	%rd231, %rd143, %rd120;
	add.s64 	%rd232, %rd231, %rd2685;
	add.s64 	%rd233, %rd232, %rd230;
	add.s64 	%rd234, %rd233, %rd227;
	add.s64 	%rd235, %rd234, %rd150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1963,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1964}, %rd222;
	}
	shf.r.wrap.b32 	%r1965, %r1964, %r1963, 28;
	shf.r.wrap.b32 	%r1966, %r1963, %r1964, 28;
	mov.b64 	%rd236, {%r1966, %r1965};
	shf.l.wrap.b32 	%r1967, %r1963, %r1964, 30;
	shf.l.wrap.b32 	%r1968, %r1964, %r1963, 30;
	mov.b64 	%rd237, {%r1968, %r1967};
	xor.b64  	%rd238, %rd237, %rd236;
	shf.l.wrap.b32 	%r1969, %r1963, %r1964, 25;
	shf.l.wrap.b32 	%r1970, %r1964, %r1963, 25;
	mov.b64 	%rd239, {%r1970, %r1969};
	xor.b64  	%rd240, %rd238, %rd239;
	xor.b64  	%rd241, %rd222, %rd174;
	xor.b64  	%rd242, %rd222, %rd198;
	and.b64  	%rd243, %rd242, %rd241;
	xor.b64  	%rd244, %rd243, %rd222;
	add.s64 	%rd245, %rd234, %rd244;
	add.s64 	%rd246, %rd245, %rd240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1971,%dummy}, %rd235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1972}, %rd235;
	}
	shf.r.wrap.b32 	%r1973, %r1972, %r1971, 14;
	shf.r.wrap.b32 	%r1974, %r1971, %r1972, 14;
	mov.b64 	%rd247, {%r1974, %r1973};
	shf.r.wrap.b32 	%r1975, %r1972, %r1971, 18;
	shf.r.wrap.b32 	%r1976, %r1971, %r1972, 18;
	mov.b64 	%rd248, {%r1976, %r1975};
	xor.b64  	%rd249, %rd248, %rd247;
	shf.l.wrap.b32 	%r1977, %r1971, %r1972, 23;
	shf.l.wrap.b32 	%r1978, %r1972, %r1971, 23;
	mov.b64 	%rd250, {%r1978, %r1977};
	xor.b64  	%rd251, %rd249, %rd250;
	xor.b64  	%rd252, %rd211, %rd191;
	and.b64  	%rd253, %rd235, %rd252;
	xor.b64  	%rd254, %rd253, %rd191;
	add.s64 	%rd255, %rd167, %rd121;
	add.s64 	%rd256, %rd255, %rd2686;
	add.s64 	%rd257, %rd256, %rd254;
	add.s64 	%rd258, %rd257, %rd251;
	add.s64 	%rd259, %rd258, %rd174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1979,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1980}, %rd246;
	}
	shf.r.wrap.b32 	%r1981, %r1980, %r1979, 28;
	shf.r.wrap.b32 	%r1982, %r1979, %r1980, 28;
	mov.b64 	%rd260, {%r1982, %r1981};
	shf.l.wrap.b32 	%r1983, %r1979, %r1980, 30;
	shf.l.wrap.b32 	%r1984, %r1980, %r1979, 30;
	mov.b64 	%rd261, {%r1984, %r1983};
	xor.b64  	%rd262, %rd261, %rd260;
	shf.l.wrap.b32 	%r1985, %r1979, %r1980, 25;
	shf.l.wrap.b32 	%r1986, %r1980, %r1979, 25;
	mov.b64 	%rd263, {%r1986, %r1985};
	xor.b64  	%rd264, %rd262, %rd263;
	xor.b64  	%rd265, %rd246, %rd198;
	xor.b64  	%rd266, %rd246, %rd222;
	and.b64  	%rd267, %rd266, %rd265;
	xor.b64  	%rd268, %rd267, %rd246;
	add.s64 	%rd269, %rd258, %rd268;
	add.s64 	%rd270, %rd269, %rd264;
	add.s64 	%rd271, %rd2687, %rd191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1987,%dummy}, %rd259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1988}, %rd259;
	}
	shf.r.wrap.b32 	%r1989, %r1988, %r1987, 14;
	shf.r.wrap.b32 	%r1990, %r1987, %r1988, 14;
	mov.b64 	%rd272, {%r1990, %r1989};
	shf.r.wrap.b32 	%r1991, %r1988, %r1987, 18;
	shf.r.wrap.b32 	%r1992, %r1987, %r1988, 18;
	mov.b64 	%rd273, {%r1992, %r1991};
	xor.b64  	%rd274, %rd273, %rd272;
	shf.l.wrap.b32 	%r1993, %r1987, %r1988, 23;
	shf.l.wrap.b32 	%r1994, %r1988, %r1987, 23;
	mov.b64 	%rd275, {%r1994, %r1993};
	xor.b64  	%rd276, %rd274, %rd275;
	xor.b64  	%rd277, %rd235, %rd211;
	and.b64  	%rd278, %rd259, %rd277;
	xor.b64  	%rd279, %rd278, %rd211;
	add.s64 	%rd280, %rd271, %rd279;
	add.s64 	%rd281, %rd280, %rd276;
	add.s64 	%rd282, %rd281, %rd198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1995,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1996}, %rd270;
	}
	shf.r.wrap.b32 	%r1997, %r1996, %r1995, 28;
	shf.r.wrap.b32 	%r1998, %r1995, %r1996, 28;
	mov.b64 	%rd283, {%r1998, %r1997};
	shf.l.wrap.b32 	%r1999, %r1995, %r1996, 30;
	shf.l.wrap.b32 	%r2000, %r1996, %r1995, 30;
	mov.b64 	%rd284, {%r2000, %r1999};
	xor.b64  	%rd285, %rd284, %rd283;
	shf.l.wrap.b32 	%r2001, %r1995, %r1996, 25;
	shf.l.wrap.b32 	%r2002, %r1996, %r1995, 25;
	mov.b64 	%rd286, {%r2002, %r2001};
	xor.b64  	%rd287, %rd285, %rd286;
	xor.b64  	%rd288, %rd270, %rd222;
	xor.b64  	%rd289, %rd270, %rd246;
	and.b64  	%rd290, %rd289, %rd288;
	xor.b64  	%rd291, %rd290, %rd270;
	add.s64 	%rd292, %rd281, %rd291;
	add.s64 	%rd293, %rd292, %rd287;
	add.s64 	%rd294, %rd2688, %rd211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2003,%dummy}, %rd282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2004}, %rd282;
	}
	shf.r.wrap.b32 	%r2005, %r2004, %r2003, 14;
	shf.r.wrap.b32 	%r2006, %r2003, %r2004, 14;
	mov.b64 	%rd295, {%r2006, %r2005};
	shf.r.wrap.b32 	%r2007, %r2004, %r2003, 18;
	shf.r.wrap.b32 	%r2008, %r2003, %r2004, 18;
	mov.b64 	%rd296, {%r2008, %r2007};
	xor.b64  	%rd297, %rd296, %rd295;
	shf.l.wrap.b32 	%r2009, %r2003, %r2004, 23;
	shf.l.wrap.b32 	%r2010, %r2004, %r2003, 23;
	mov.b64 	%rd298, {%r2010, %r2009};
	xor.b64  	%rd299, %rd297, %rd298;
	xor.b64  	%rd300, %rd259, %rd235;
	and.b64  	%rd301, %rd282, %rd300;
	xor.b64  	%rd302, %rd301, %rd235;
	add.s64 	%rd303, %rd294, %rd302;
	add.s64 	%rd304, %rd303, %rd299;
	add.s64 	%rd305, %rd304, %rd222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2011,%dummy}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2012}, %rd293;
	}
	shf.r.wrap.b32 	%r2013, %r2012, %r2011, 28;
	shf.r.wrap.b32 	%r2014, %r2011, %r2012, 28;
	mov.b64 	%rd306, {%r2014, %r2013};
	shf.l.wrap.b32 	%r2015, %r2011, %r2012, 30;
	shf.l.wrap.b32 	%r2016, %r2012, %r2011, 30;
	mov.b64 	%rd307, {%r2016, %r2015};
	xor.b64  	%rd308, %rd307, %rd306;
	shf.l.wrap.b32 	%r2017, %r2011, %r2012, 25;
	shf.l.wrap.b32 	%r2018, %r2012, %r2011, 25;
	mov.b64 	%rd309, {%r2018, %r2017};
	xor.b64  	%rd310, %rd308, %rd309;
	xor.b64  	%rd311, %rd293, %rd246;
	xor.b64  	%rd312, %rd293, %rd270;
	and.b64  	%rd313, %rd312, %rd311;
	xor.b64  	%rd314, %rd313, %rd293;
	add.s64 	%rd315, %rd304, %rd314;
	add.s64 	%rd316, %rd315, %rd310;
	add.s64 	%rd317, %rd2689, %rd235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2019,%dummy}, %rd305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2020}, %rd305;
	}
	shf.r.wrap.b32 	%r2021, %r2020, %r2019, 14;
	shf.r.wrap.b32 	%r2022, %r2019, %r2020, 14;
	mov.b64 	%rd318, {%r2022, %r2021};
	shf.r.wrap.b32 	%r2023, %r2020, %r2019, 18;
	shf.r.wrap.b32 	%r2024, %r2019, %r2020, 18;
	mov.b64 	%rd319, {%r2024, %r2023};
	xor.b64  	%rd320, %rd319, %rd318;
	shf.l.wrap.b32 	%r2025, %r2019, %r2020, 23;
	shf.l.wrap.b32 	%r2026, %r2020, %r2019, 23;
	mov.b64 	%rd321, {%r2026, %r2025};
	xor.b64  	%rd322, %rd320, %rd321;
	xor.b64  	%rd323, %rd282, %rd259;
	and.b64  	%rd324, %rd305, %rd323;
	xor.b64  	%rd325, %rd324, %rd259;
	add.s64 	%rd326, %rd317, %rd325;
	add.s64 	%rd327, %rd326, %rd322;
	add.s64 	%rd328, %rd327, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2027,%dummy}, %rd316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2028}, %rd316;
	}
	shf.r.wrap.b32 	%r2029, %r2028, %r2027, 28;
	shf.r.wrap.b32 	%r2030, %r2027, %r2028, 28;
	mov.b64 	%rd329, {%r2030, %r2029};
	shf.l.wrap.b32 	%r2031, %r2027, %r2028, 30;
	shf.l.wrap.b32 	%r2032, %r2028, %r2027, 30;
	mov.b64 	%rd330, {%r2032, %r2031};
	xor.b64  	%rd331, %rd330, %rd329;
	shf.l.wrap.b32 	%r2033, %r2027, %r2028, 25;
	shf.l.wrap.b32 	%r2034, %r2028, %r2027, 25;
	mov.b64 	%rd332, {%r2034, %r2033};
	xor.b64  	%rd333, %rd331, %rd332;
	xor.b64  	%rd334, %rd316, %rd270;
	xor.b64  	%rd335, %rd316, %rd293;
	and.b64  	%rd336, %rd335, %rd334;
	xor.b64  	%rd337, %rd336, %rd316;
	add.s64 	%rd338, %rd327, %rd337;
	add.s64 	%rd339, %rd338, %rd333;
	add.s64 	%rd340, %rd2690, %rd259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2035,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2036}, %rd328;
	}
	shf.r.wrap.b32 	%r2037, %r2036, %r2035, 14;
	shf.r.wrap.b32 	%r2038, %r2035, %r2036, 14;
	mov.b64 	%rd341, {%r2038, %r2037};
	shf.r.wrap.b32 	%r2039, %r2036, %r2035, 18;
	shf.r.wrap.b32 	%r2040, %r2035, %r2036, 18;
	mov.b64 	%rd342, {%r2040, %r2039};
	xor.b64  	%rd343, %rd342, %rd341;
	shf.l.wrap.b32 	%r2041, %r2035, %r2036, 23;
	shf.l.wrap.b32 	%r2042, %r2036, %r2035, 23;
	mov.b64 	%rd344, {%r2042, %r2041};
	xor.b64  	%rd345, %rd343, %rd344;
	xor.b64  	%rd346, %rd305, %rd282;
	and.b64  	%rd347, %rd328, %rd346;
	xor.b64  	%rd348, %rd347, %rd282;
	add.s64 	%rd349, %rd340, %rd348;
	add.s64 	%rd350, %rd349, %rd345;
	add.s64 	%rd351, %rd350, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2043,%dummy}, %rd339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2044}, %rd339;
	}
	shf.r.wrap.b32 	%r2045, %r2044, %r2043, 28;
	shf.r.wrap.b32 	%r2046, %r2043, %r2044, 28;
	mov.b64 	%rd352, {%r2046, %r2045};
	shf.l.wrap.b32 	%r2047, %r2043, %r2044, 30;
	shf.l.wrap.b32 	%r2048, %r2044, %r2043, 30;
	mov.b64 	%rd353, {%r2048, %r2047};
	xor.b64  	%rd354, %rd353, %rd352;
	shf.l.wrap.b32 	%r2049, %r2043, %r2044, 25;
	shf.l.wrap.b32 	%r2050, %r2044, %r2043, 25;
	mov.b64 	%rd355, {%r2050, %r2049};
	xor.b64  	%rd356, %rd354, %rd355;
	xor.b64  	%rd357, %rd339, %rd293;
	xor.b64  	%rd358, %rd339, %rd316;
	and.b64  	%rd359, %rd358, %rd357;
	xor.b64  	%rd360, %rd359, %rd339;
	add.s64 	%rd361, %rd350, %rd360;
	add.s64 	%rd362, %rd361, %rd356;
	add.s64 	%rd363, %rd2691, %rd282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2051,%dummy}, %rd351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2052}, %rd351;
	}
	shf.r.wrap.b32 	%r2053, %r2052, %r2051, 14;
	shf.r.wrap.b32 	%r2054, %r2051, %r2052, 14;
	mov.b64 	%rd364, {%r2054, %r2053};
	shf.r.wrap.b32 	%r2055, %r2052, %r2051, 18;
	shf.r.wrap.b32 	%r2056, %r2051, %r2052, 18;
	mov.b64 	%rd365, {%r2056, %r2055};
	xor.b64  	%rd366, %rd365, %rd364;
	shf.l.wrap.b32 	%r2057, %r2051, %r2052, 23;
	shf.l.wrap.b32 	%r2058, %r2052, %r2051, 23;
	mov.b64 	%rd367, {%r2058, %r2057};
	xor.b64  	%rd368, %rd366, %rd367;
	xor.b64  	%rd369, %rd328, %rd305;
	and.b64  	%rd370, %rd351, %rd369;
	xor.b64  	%rd371, %rd370, %rd305;
	add.s64 	%rd372, %rd363, %rd371;
	add.s64 	%rd373, %rd372, %rd368;
	add.s64 	%rd374, %rd373, %rd293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2059,%dummy}, %rd362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2060}, %rd362;
	}
	shf.r.wrap.b32 	%r2061, %r2060, %r2059, 28;
	shf.r.wrap.b32 	%r2062, %r2059, %r2060, 28;
	mov.b64 	%rd375, {%r2062, %r2061};
	shf.l.wrap.b32 	%r2063, %r2059, %r2060, 30;
	shf.l.wrap.b32 	%r2064, %r2060, %r2059, 30;
	mov.b64 	%rd376, {%r2064, %r2063};
	xor.b64  	%rd377, %rd376, %rd375;
	shf.l.wrap.b32 	%r2065, %r2059, %r2060, 25;
	shf.l.wrap.b32 	%r2066, %r2060, %r2059, 25;
	mov.b64 	%rd378, {%r2066, %r2065};
	xor.b64  	%rd379, %rd377, %rd378;
	xor.b64  	%rd380, %rd362, %rd316;
	xor.b64  	%rd381, %rd362, %rd339;
	and.b64  	%rd382, %rd381, %rd380;
	xor.b64  	%rd383, %rd382, %rd362;
	add.s64 	%rd384, %rd373, %rd383;
	add.s64 	%rd385, %rd384, %rd379;
	add.s64 	%rd386, %rd2692, %rd305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2067,%dummy}, %rd374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2068}, %rd374;
	}
	shf.r.wrap.b32 	%r2069, %r2068, %r2067, 14;
	shf.r.wrap.b32 	%r2070, %r2067, %r2068, 14;
	mov.b64 	%rd387, {%r2070, %r2069};
	shf.r.wrap.b32 	%r2071, %r2068, %r2067, 18;
	shf.r.wrap.b32 	%r2072, %r2067, %r2068, 18;
	mov.b64 	%rd388, {%r2072, %r2071};
	xor.b64  	%rd389, %rd388, %rd387;
	shf.l.wrap.b32 	%r2073, %r2067, %r2068, 23;
	shf.l.wrap.b32 	%r2074, %r2068, %r2067, 23;
	mov.b64 	%rd390, {%r2074, %r2073};
	xor.b64  	%rd391, %rd389, %rd390;
	xor.b64  	%rd392, %rd351, %rd328;
	and.b64  	%rd393, %rd374, %rd392;
	xor.b64  	%rd394, %rd393, %rd328;
	add.s64 	%rd395, %rd386, %rd394;
	add.s64 	%rd396, %rd395, %rd391;
	add.s64 	%rd397, %rd396, %rd316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2075,%dummy}, %rd385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2076}, %rd385;
	}
	shf.r.wrap.b32 	%r2077, %r2076, %r2075, 28;
	shf.r.wrap.b32 	%r2078, %r2075, %r2076, 28;
	mov.b64 	%rd398, {%r2078, %r2077};
	shf.l.wrap.b32 	%r2079, %r2075, %r2076, 30;
	shf.l.wrap.b32 	%r2080, %r2076, %r2075, 30;
	mov.b64 	%rd399, {%r2080, %r2079};
	xor.b64  	%rd400, %rd399, %rd398;
	shf.l.wrap.b32 	%r2081, %r2075, %r2076, 25;
	shf.l.wrap.b32 	%r2082, %r2076, %r2075, 25;
	mov.b64 	%rd401, {%r2082, %r2081};
	xor.b64  	%rd402, %rd400, %rd401;
	xor.b64  	%rd403, %rd385, %rd339;
	xor.b64  	%rd404, %rd385, %rd362;
	and.b64  	%rd405, %rd404, %rd403;
	xor.b64  	%rd406, %rd405, %rd385;
	add.s64 	%rd407, %rd396, %rd406;
	add.s64 	%rd408, %rd407, %rd402;
	add.s64 	%rd409, %rd2693, %rd328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2083,%dummy}, %rd397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2084}, %rd397;
	}
	shf.r.wrap.b32 	%r2085, %r2084, %r2083, 14;
	shf.r.wrap.b32 	%r2086, %r2083, %r2084, 14;
	mov.b64 	%rd410, {%r2086, %r2085};
	shf.r.wrap.b32 	%r2087, %r2084, %r2083, 18;
	shf.r.wrap.b32 	%r2088, %r2083, %r2084, 18;
	mov.b64 	%rd411, {%r2088, %r2087};
	xor.b64  	%rd412, %rd411, %rd410;
	shf.l.wrap.b32 	%r2089, %r2083, %r2084, 23;
	shf.l.wrap.b32 	%r2090, %r2084, %r2083, 23;
	mov.b64 	%rd413, {%r2090, %r2089};
	xor.b64  	%rd414, %rd412, %rd413;
	xor.b64  	%rd415, %rd374, %rd351;
	and.b64  	%rd416, %rd397, %rd415;
	xor.b64  	%rd417, %rd416, %rd351;
	add.s64 	%rd418, %rd409, %rd417;
	add.s64 	%rd419, %rd418, %rd414;
	add.s64 	%rd420, %rd419, %rd339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2091,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2092}, %rd408;
	}
	shf.r.wrap.b32 	%r2093, %r2092, %r2091, 28;
	shf.r.wrap.b32 	%r2094, %r2091, %r2092, 28;
	mov.b64 	%rd421, {%r2094, %r2093};
	shf.l.wrap.b32 	%r2095, %r2091, %r2092, 30;
	shf.l.wrap.b32 	%r2096, %r2092, %r2091, 30;
	mov.b64 	%rd422, {%r2096, %r2095};
	xor.b64  	%rd423, %rd422, %rd421;
	shf.l.wrap.b32 	%r2097, %r2091, %r2092, 25;
	shf.l.wrap.b32 	%r2098, %r2092, %r2091, 25;
	mov.b64 	%rd424, {%r2098, %r2097};
	xor.b64  	%rd425, %rd423, %rd424;
	xor.b64  	%rd426, %rd408, %rd362;
	xor.b64  	%rd427, %rd408, %rd385;
	and.b64  	%rd428, %rd427, %rd426;
	xor.b64  	%rd429, %rd428, %rd408;
	add.s64 	%rd430, %rd419, %rd429;
	add.s64 	%rd431, %rd430, %rd425;
	add.s64 	%rd432, %rd2694, %rd351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2099,%dummy}, %rd420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2100}, %rd420;
	}
	shf.r.wrap.b32 	%r2101, %r2100, %r2099, 14;
	shf.r.wrap.b32 	%r2102, %r2099, %r2100, 14;
	mov.b64 	%rd433, {%r2102, %r2101};
	shf.r.wrap.b32 	%r2103, %r2100, %r2099, 18;
	shf.r.wrap.b32 	%r2104, %r2099, %r2100, 18;
	mov.b64 	%rd434, {%r2104, %r2103};
	xor.b64  	%rd435, %rd434, %rd433;
	shf.l.wrap.b32 	%r2105, %r2099, %r2100, 23;
	shf.l.wrap.b32 	%r2106, %r2100, %r2099, 23;
	mov.b64 	%rd436, {%r2106, %r2105};
	xor.b64  	%rd437, %rd435, %rd436;
	xor.b64  	%rd438, %rd397, %rd374;
	and.b64  	%rd439, %rd420, %rd438;
	xor.b64  	%rd440, %rd439, %rd374;
	add.s64 	%rd441, %rd432, %rd440;
	add.s64 	%rd442, %rd441, %rd437;
	add.s64 	%rd443, %rd442, %rd362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2107,%dummy}, %rd431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2108}, %rd431;
	}
	shf.r.wrap.b32 	%r2109, %r2108, %r2107, 28;
	shf.r.wrap.b32 	%r2110, %r2107, %r2108, 28;
	mov.b64 	%rd444, {%r2110, %r2109};
	shf.l.wrap.b32 	%r2111, %r2107, %r2108, 30;
	shf.l.wrap.b32 	%r2112, %r2108, %r2107, 30;
	mov.b64 	%rd445, {%r2112, %r2111};
	xor.b64  	%rd446, %rd445, %rd444;
	shf.l.wrap.b32 	%r2113, %r2107, %r2108, 25;
	shf.l.wrap.b32 	%r2114, %r2108, %r2107, 25;
	mov.b64 	%rd447, {%r2114, %r2113};
	xor.b64  	%rd448, %rd446, %rd447;
	xor.b64  	%rd449, %rd431, %rd385;
	xor.b64  	%rd450, %rd431, %rd408;
	and.b64  	%rd451, %rd450, %rd449;
	xor.b64  	%rd452, %rd451, %rd431;
	add.s64 	%rd453, %rd442, %rd452;
	add.s64 	%rd454, %rd453, %rd448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2115,%dummy}, %rd443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2116}, %rd443;
	}
	shf.r.wrap.b32 	%r2117, %r2116, %r2115, 14;
	shf.r.wrap.b32 	%r2118, %r2115, %r2116, 14;
	mov.b64 	%rd455, {%r2118, %r2117};
	shf.r.wrap.b32 	%r2119, %r2116, %r2115, 18;
	shf.r.wrap.b32 	%r2120, %r2115, %r2116, 18;
	mov.b64 	%rd456, {%r2120, %r2119};
	xor.b64  	%rd457, %rd456, %rd455;
	shf.l.wrap.b32 	%r2121, %r2115, %r2116, 23;
	shf.l.wrap.b32 	%r2122, %r2116, %r2115, 23;
	mov.b64 	%rd458, {%r2122, %r2121};
	xor.b64  	%rd459, %rd457, %rd458;
	xor.b64  	%rd460, %rd420, %rd397;
	and.b64  	%rd461, %rd443, %rd460;
	xor.b64  	%rd462, %rd461, %rd397;
	add.s64 	%rd463, %rd374, %rd122;
	add.s64 	%rd464, %rd463, %rd2695;
	add.s64 	%rd465, %rd464, %rd462;
	add.s64 	%rd466, %rd465, %rd459;
	add.s64 	%rd467, %rd466, %rd385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2123,%dummy}, %rd454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2124}, %rd454;
	}
	shf.r.wrap.b32 	%r2125, %r2124, %r2123, 28;
	shf.r.wrap.b32 	%r2126, %r2123, %r2124, 28;
	mov.b64 	%rd468, {%r2126, %r2125};
	shf.l.wrap.b32 	%r2127, %r2123, %r2124, 30;
	shf.l.wrap.b32 	%r2128, %r2124, %r2123, 30;
	mov.b64 	%rd469, {%r2128, %r2127};
	xor.b64  	%rd470, %rd469, %rd468;
	shf.l.wrap.b32 	%r2129, %r2123, %r2124, 25;
	shf.l.wrap.b32 	%r2130, %r2124, %r2123, 25;
	mov.b64 	%rd471, {%r2130, %r2129};
	xor.b64  	%rd472, %rd470, %rd471;
	xor.b64  	%rd473, %rd454, %rd408;
	xor.b64  	%rd474, %rd454, %rd431;
	and.b64  	%rd475, %rd474, %rd473;
	xor.b64  	%rd476, %rd475, %rd454;
	add.s64 	%rd477, %rd466, %rd476;
	add.s64 	%rd478, %rd477, %rd472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2131,%dummy}, %rd116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2132}, %rd116;
	}
	shf.r.wrap.b32 	%r2133, %r2132, %r2131, 1;
	shf.r.wrap.b32 	%r2134, %r2131, %r2132, 1;
	mov.b64 	%rd479, {%r2134, %r2133};
	shf.r.wrap.b32 	%r2135, %r2132, %r2131, 8;
	shf.r.wrap.b32 	%r2136, %r2131, %r2132, 8;
	mov.b64 	%rd480, {%r2136, %r2135};
	shr.u64 	%rd481, %rd116, 7;
	xor.b64  	%rd482, %rd479, %rd481;
	xor.b64  	%rd483, %rd482, %rd480;
	add.s64 	%rd484, %rd115, %rd21;
	add.s64 	%rd485, %rd484, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2137,%dummy}, %rd122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2138}, %rd122;
	}
	shf.r.wrap.b32 	%r2139, %r2138, %r2137, 19;
	shf.r.wrap.b32 	%r2140, %r2137, %r2138, 19;
	mov.b64 	%rd486, {%r2140, %r2139};
	shf.l.wrap.b32 	%r2141, %r2137, %r2138, 3;
	shf.l.wrap.b32 	%r2142, %r2138, %r2137, 3;
	mov.b64 	%rd487, {%r2142, %r2141};
	shr.u64 	%rd488, %rd122, 6;
	xor.b64  	%rd489, %rd486, %rd488;
	xor.b64  	%rd490, %rd489, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2143,%dummy}, %rd117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2144}, %rd117;
	}
	shf.r.wrap.b32 	%r2145, %r2144, %r2143, 1;
	shf.r.wrap.b32 	%r2146, %r2143, %r2144, 1;
	mov.b64 	%rd491, {%r2146, %r2145};
	shf.r.wrap.b32 	%r2147, %r2144, %r2143, 8;
	shf.r.wrap.b32 	%r2148, %r2143, %r2144, 8;
	mov.b64 	%rd492, {%r2148, %r2147};
	shr.u64 	%rd493, %rd117, 7;
	xor.b64  	%rd494, %rd491, %rd493;
	xor.b64  	%rd495, %rd494, %rd492;
	add.s64 	%rd496, %rd116, %rd490;
	add.s64 	%rd497, %rd496, %rd495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2149,%dummy}, %rd485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2150}, %rd485;
	}
	shf.r.wrap.b32 	%r2151, %r2150, %r2149, 19;
	shf.r.wrap.b32 	%r2152, %r2149, %r2150, 19;
	mov.b64 	%rd498, {%r2152, %r2151};
	shf.l.wrap.b32 	%r2153, %r2149, %r2150, 3;
	shf.l.wrap.b32 	%r2154, %r2150, %r2149, 3;
	mov.b64 	%rd499, {%r2154, %r2153};
	shr.u64 	%rd500, %rd485, 6;
	xor.b64  	%rd501, %rd498, %rd500;
	xor.b64  	%rd502, %rd501, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2155,%dummy}, %rd118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2156}, %rd118;
	}
	shf.r.wrap.b32 	%r2157, %r2156, %r2155, 1;
	shf.r.wrap.b32 	%r2158, %r2155, %r2156, 1;
	mov.b64 	%rd503, {%r2158, %r2157};
	shf.r.wrap.b32 	%r2159, %r2156, %r2155, 8;
	shf.r.wrap.b32 	%r2160, %r2155, %r2156, 8;
	mov.b64 	%rd504, {%r2160, %r2159};
	shr.u64 	%rd505, %rd118, 7;
	xor.b64  	%rd506, %rd503, %rd505;
	xor.b64  	%rd507, %rd506, %rd504;
	add.s64 	%rd508, %rd117, %rd502;
	add.s64 	%rd509, %rd508, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2161,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2162}, %rd497;
	}
	shf.r.wrap.b32 	%r2163, %r2162, %r2161, 19;
	shf.r.wrap.b32 	%r2164, %r2161, %r2162, 19;
	mov.b64 	%rd510, {%r2164, %r2163};
	shf.l.wrap.b32 	%r2165, %r2161, %r2162, 3;
	shf.l.wrap.b32 	%r2166, %r2162, %r2161, 3;
	mov.b64 	%rd511, {%r2166, %r2165};
	shr.u64 	%rd512, %rd497, 6;
	xor.b64  	%rd513, %rd510, %rd512;
	xor.b64  	%rd514, %rd513, %rd511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2167,%dummy}, %rd119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2168}, %rd119;
	}
	shf.r.wrap.b32 	%r2169, %r2168, %r2167, 1;
	shf.r.wrap.b32 	%r2170, %r2167, %r2168, 1;
	mov.b64 	%rd515, {%r2170, %r2169};
	shf.r.wrap.b32 	%r2171, %r2168, %r2167, 8;
	shf.r.wrap.b32 	%r2172, %r2167, %r2168, 8;
	mov.b64 	%rd516, {%r2172, %r2171};
	shr.u64 	%rd517, %rd119, 7;
	xor.b64  	%rd518, %rd515, %rd517;
	xor.b64  	%rd519, %rd518, %rd516;
	add.s64 	%rd520, %rd118, %rd514;
	add.s64 	%rd521, %rd520, %rd519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2173,%dummy}, %rd509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2174}, %rd509;
	}
	shf.r.wrap.b32 	%r2175, %r2174, %r2173, 19;
	shf.r.wrap.b32 	%r2176, %r2173, %r2174, 19;
	mov.b64 	%rd522, {%r2176, %r2175};
	shf.l.wrap.b32 	%r2177, %r2173, %r2174, 3;
	shf.l.wrap.b32 	%r2178, %r2174, %r2173, 3;
	mov.b64 	%rd523, {%r2178, %r2177};
	shr.u64 	%rd524, %rd509, 6;
	xor.b64  	%rd525, %rd522, %rd524;
	xor.b64  	%rd526, %rd525, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2179,%dummy}, %rd120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2180}, %rd120;
	}
	shf.r.wrap.b32 	%r2181, %r2180, %r2179, 1;
	shf.r.wrap.b32 	%r2182, %r2179, %r2180, 1;
	mov.b64 	%rd527, {%r2182, %r2181};
	shf.r.wrap.b32 	%r2183, %r2180, %r2179, 8;
	shf.r.wrap.b32 	%r2184, %r2179, %r2180, 8;
	mov.b64 	%rd528, {%r2184, %r2183};
	shr.u64 	%rd529, %rd120, 7;
	xor.b64  	%rd530, %rd527, %rd529;
	xor.b64  	%rd531, %rd530, %rd528;
	add.s64 	%rd532, %rd119, %rd526;
	add.s64 	%rd533, %rd532, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2185,%dummy}, %rd521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2186}, %rd521;
	}
	shf.r.wrap.b32 	%r2187, %r2186, %r2185, 19;
	shf.r.wrap.b32 	%r2188, %r2185, %r2186, 19;
	mov.b64 	%rd534, {%r2188, %r2187};
	shf.l.wrap.b32 	%r2189, %r2185, %r2186, 3;
	shf.l.wrap.b32 	%r2190, %r2186, %r2185, 3;
	mov.b64 	%rd535, {%r2190, %r2189};
	shr.u64 	%rd536, %rd521, 6;
	xor.b64  	%rd537, %rd534, %rd536;
	xor.b64  	%rd538, %rd537, %rd535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2191,%dummy}, %rd121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2192}, %rd121;
	}
	shf.r.wrap.b32 	%r2193, %r2192, %r2191, 1;
	shf.r.wrap.b32 	%r2194, %r2191, %r2192, 1;
	mov.b64 	%rd539, {%r2194, %r2193};
	shf.r.wrap.b32 	%r2195, %r2192, %r2191, 8;
	shf.r.wrap.b32 	%r2196, %r2191, %r2192, 8;
	mov.b64 	%rd540, {%r2196, %r2195};
	shr.u64 	%rd541, %rd121, 7;
	xor.b64  	%rd542, %rd539, %rd541;
	xor.b64  	%rd543, %rd542, %rd540;
	add.s64 	%rd544, %rd120, %rd538;
	add.s64 	%rd545, %rd544, %rd543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2197,%dummy}, %rd533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2198}, %rd533;
	}
	shf.r.wrap.b32 	%r2199, %r2198, %r2197, 19;
	shf.r.wrap.b32 	%r2200, %r2197, %r2198, 19;
	mov.b64 	%rd546, {%r2200, %r2199};
	shf.l.wrap.b32 	%r2201, %r2197, %r2198, 3;
	shf.l.wrap.b32 	%r2202, %r2198, %r2197, 3;
	mov.b64 	%rd547, {%r2202, %r2201};
	shr.u64 	%rd548, %rd533, 6;
	xor.b64  	%rd549, %rd546, %rd548;
	xor.b64  	%rd550, %rd549, %rd547;
	add.s64 	%rd551, %rd121, %rd122;
	add.s64 	%rd552, %rd551, %rd550;
	add.s64 	%rd553, %rd552, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2203,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2204}, %rd545;
	}
	shf.r.wrap.b32 	%r2205, %r2204, %r2203, 19;
	shf.r.wrap.b32 	%r2206, %r2203, %r2204, 19;
	mov.b64 	%rd554, {%r2206, %r2205};
	shf.l.wrap.b32 	%r2207, %r2203, %r2204, 3;
	shf.l.wrap.b32 	%r2208, %r2204, %r2203, 3;
	mov.b64 	%rd555, {%r2208, %r2207};
	shr.u64 	%rd556, %rd545, 6;
	xor.b64  	%rd557, %rd554, %rd556;
	xor.b64  	%rd558, %rd557, %rd555;
	add.s64 	%rd559, %rd485, %rd558;
	add.s64 	%rd560, %rd559, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2209,%dummy}, %rd553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2210}, %rd553;
	}
	shf.r.wrap.b32 	%r2211, %r2210, %r2209, 19;
	shf.r.wrap.b32 	%r2212, %r2209, %r2210, 19;
	mov.b64 	%rd561, {%r2212, %r2211};
	shf.l.wrap.b32 	%r2213, %r2209, %r2210, 3;
	shf.l.wrap.b32 	%r2214, %r2210, %r2209, 3;
	mov.b64 	%rd562, {%r2214, %r2213};
	shr.u64 	%rd563, %rd553, 6;
	xor.b64  	%rd564, %rd561, %rd563;
	xor.b64  	%rd565, %rd564, %rd562;
	add.s64 	%rd566, %rd497, %rd565;
	add.s64 	%rd567, %rd566, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2215,%dummy}, %rd560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2216}, %rd560;
	}
	shf.r.wrap.b32 	%r2217, %r2216, %r2215, 19;
	shf.r.wrap.b32 	%r2218, %r2215, %r2216, 19;
	mov.b64 	%rd568, {%r2218, %r2217};
	shf.l.wrap.b32 	%r2219, %r2215, %r2216, 3;
	shf.l.wrap.b32 	%r2220, %r2216, %r2215, 3;
	mov.b64 	%rd569, {%r2220, %r2219};
	shr.u64 	%rd570, %rd560, 6;
	xor.b64  	%rd571, %rd568, %rd570;
	xor.b64  	%rd572, %rd571, %rd569;
	add.s64 	%rd573, %rd509, %rd572;
	add.s64 	%rd574, %rd573, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2221,%dummy}, %rd567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2222}, %rd567;
	}
	shf.r.wrap.b32 	%r2223, %r2222, %r2221, 19;
	shf.r.wrap.b32 	%r2224, %r2221, %r2222, 19;
	mov.b64 	%rd575, {%r2224, %r2223};
	shf.l.wrap.b32 	%r2225, %r2221, %r2222, 3;
	shf.l.wrap.b32 	%r2226, %r2222, %r2221, 3;
	mov.b64 	%rd576, {%r2226, %r2225};
	shr.u64 	%rd577, %rd567, 6;
	xor.b64  	%rd578, %rd575, %rd577;
	xor.b64  	%rd579, %rd578, %rd576;
	add.s64 	%rd580, %rd521, %rd579;
	add.s64 	%rd581, %rd580, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2227,%dummy}, %rd574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2228}, %rd574;
	}
	shf.r.wrap.b32 	%r2229, %r2228, %r2227, 19;
	shf.r.wrap.b32 	%r2230, %r2227, %r2228, 19;
	mov.b64 	%rd582, {%r2230, %r2229};
	shf.l.wrap.b32 	%r2231, %r2227, %r2228, 3;
	shf.l.wrap.b32 	%r2232, %r2228, %r2227, 3;
	mov.b64 	%rd583, {%r2232, %r2231};
	shr.u64 	%rd584, %rd574, 6;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	add.s64 	%rd587, %rd533, %rd586;
	add.s64 	%rd588, %rd587, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2233,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2234}, %rd581;
	}
	shf.r.wrap.b32 	%r2235, %r2234, %r2233, 19;
	shf.r.wrap.b32 	%r2236, %r2233, %r2234, 19;
	mov.b64 	%rd589, {%r2236, %r2235};
	shf.l.wrap.b32 	%r2237, %r2233, %r2234, 3;
	shf.l.wrap.b32 	%r2238, %r2234, %r2233, 3;
	mov.b64 	%rd590, {%r2238, %r2237};
	shr.u64 	%rd591, %rd581, 6;
	xor.b64  	%rd592, %rd589, %rd591;
	xor.b64  	%rd593, %rd592, %rd590;
	add.s64 	%rd594, %rd545, %rd593;
	add.s64 	%rd595, %rd594, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2239,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2240}, %rd588;
	}
	shf.r.wrap.b32 	%r2241, %r2240, %r2239, 19;
	shf.r.wrap.b32 	%r2242, %r2239, %r2240, 19;
	mov.b64 	%rd596, {%r2242, %r2241};
	shf.l.wrap.b32 	%r2243, %r2239, %r2240, 3;
	shf.l.wrap.b32 	%r2244, %r2240, %r2239, 3;
	mov.b64 	%rd597, {%r2244, %r2243};
	shr.u64 	%rd598, %rd588, 6;
	xor.b64  	%rd599, %rd596, %rd598;
	xor.b64  	%rd600, %rd599, %rd597;
	add.s64 	%rd601, %rd553, %rd600;
	add.s64 	%rd602, %rd601, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd595;
	}
	shf.r.wrap.b32 	%r2247, %r2246, %r2245, 19;
	shf.r.wrap.b32 	%r2248, %r2245, %r2246, 19;
	mov.b64 	%rd603, {%r2248, %r2247};
	shf.l.wrap.b32 	%r2249, %r2245, %r2246, 3;
	shf.l.wrap.b32 	%r2250, %r2246, %r2245, 3;
	mov.b64 	%rd604, {%r2250, %r2249};
	shr.u64 	%rd605, %rd595, 6;
	xor.b64  	%rd606, %rd603, %rd605;
	xor.b64  	%rd607, %rd606, %rd604;
	shf.r.wrap.b32 	%r2251, %r2138, %r2137, 1;
	shf.r.wrap.b32 	%r2252, %r2137, %r2138, 1;
	mov.b64 	%rd608, {%r2252, %r2251};
	shf.r.wrap.b32 	%r2253, %r2138, %r2137, 8;
	shf.r.wrap.b32 	%r2254, %r2137, %r2138, 8;
	mov.b64 	%rd609, {%r2254, %r2253};
	shr.u64 	%rd610, %rd122, 7;
	xor.b64  	%rd611, %rd608, %rd610;
	xor.b64  	%rd612, %rd611, %rd609;
	add.s64 	%rd613, %rd560, %rd607;
	add.s64 	%rd614, %rd613, %rd612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2255,%dummy}, %rd602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2256}, %rd602;
	}
	shf.r.wrap.b32 	%r2257, %r2256, %r2255, 19;
	shf.r.wrap.b32 	%r2258, %r2255, %r2256, 19;
	mov.b64 	%rd615, {%r2258, %r2257};
	shf.l.wrap.b32 	%r2259, %r2255, %r2256, 3;
	shf.l.wrap.b32 	%r2260, %r2256, %r2255, 3;
	mov.b64 	%rd616, {%r2260, %r2259};
	shr.u64 	%rd617, %rd602, 6;
	xor.b64  	%rd618, %rd615, %rd617;
	xor.b64  	%rd619, %rd618, %rd616;
	shf.r.wrap.b32 	%r2261, %r2150, %r2149, 1;
	shf.r.wrap.b32 	%r2262, %r2149, %r2150, 1;
	mov.b64 	%rd620, {%r2262, %r2261};
	shf.r.wrap.b32 	%r2263, %r2150, %r2149, 8;
	shf.r.wrap.b32 	%r2264, %r2149, %r2150, 8;
	mov.b64 	%rd621, {%r2264, %r2263};
	shr.u64 	%rd622, %rd485, 7;
	xor.b64  	%rd623, %rd620, %rd622;
	xor.b64  	%rd624, %rd623, %rd621;
	add.s64 	%rd625, %rd567, %rd122;
	add.s64 	%rd626, %rd625, %rd619;
	add.s64 	%rd627, %rd626, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2265,%dummy}, %rd467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2266}, %rd467;
	}
	shf.r.wrap.b32 	%r2267, %r2266, %r2265, 14;
	shf.r.wrap.b32 	%r2268, %r2265, %r2266, 14;
	mov.b64 	%rd628, {%r2268, %r2267};
	shf.r.wrap.b32 	%r2269, %r2266, %r2265, 18;
	shf.r.wrap.b32 	%r2270, %r2265, %r2266, 18;
	mov.b64 	%rd629, {%r2270, %r2269};
	xor.b64  	%rd630, %rd629, %rd628;
	shf.l.wrap.b32 	%r2271, %r2265, %r2266, 23;
	shf.l.wrap.b32 	%r2272, %r2266, %r2265, 23;
	mov.b64 	%rd631, {%r2272, %r2271};
	xor.b64  	%rd632, %rd630, %rd631;
	xor.b64  	%rd633, %rd420, %rd443;
	and.b64  	%rd634, %rd633, %rd467;
	xor.b64  	%rd635, %rd634, %rd420;
	add.s64 	%rd636, %rd635, %rd397;
	add.s64 	%rd637, %rd636, %rd485;
	add.s64 	%rd638, %rd637, %rd2696;
	add.s64 	%rd639, %rd638, %rd632;
	add.s64 	%rd640, %rd639, %rd408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2273,%dummy}, %rd478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2274}, %rd478;
	}
	shf.r.wrap.b32 	%r2275, %r2274, %r2273, 28;
	shf.r.wrap.b32 	%r2276, %r2273, %r2274, 28;
	mov.b64 	%rd641, {%r2276, %r2275};
	shf.l.wrap.b32 	%r2277, %r2273, %r2274, 30;
	shf.l.wrap.b32 	%r2278, %r2274, %r2273, 30;
	mov.b64 	%rd642, {%r2278, %r2277};
	xor.b64  	%rd643, %rd642, %rd641;
	shf.l.wrap.b32 	%r2279, %r2273, %r2274, 25;
	shf.l.wrap.b32 	%r2280, %r2274, %r2273, 25;
	mov.b64 	%rd644, {%r2280, %r2279};
	xor.b64  	%rd645, %rd643, %rd644;
	xor.b64  	%rd646, %rd478, %rd431;
	xor.b64  	%rd647, %rd478, %rd454;
	and.b64  	%rd648, %rd647, %rd646;
	xor.b64  	%rd649, %rd648, %rd478;
	add.s64 	%rd650, %rd639, %rd649;
	add.s64 	%rd651, %rd650, %rd645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2281,%dummy}, %rd640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2282}, %rd640;
	}
	shf.r.wrap.b32 	%r2283, %r2282, %r2281, 14;
	shf.r.wrap.b32 	%r2284, %r2281, %r2282, 14;
	mov.b64 	%rd652, {%r2284, %r2283};
	shf.r.wrap.b32 	%r2285, %r2282, %r2281, 18;
	shf.r.wrap.b32 	%r2286, %r2281, %r2282, 18;
	mov.b64 	%rd653, {%r2286, %r2285};
	xor.b64  	%rd654, %rd653, %rd652;
	shf.l.wrap.b32 	%r2287, %r2281, %r2282, 23;
	shf.l.wrap.b32 	%r2288, %r2282, %r2281, 23;
	mov.b64 	%rd655, {%r2288, %r2287};
	xor.b64  	%rd656, %rd654, %rd655;
	xor.b64  	%rd657, %rd443, %rd467;
	and.b64  	%rd658, %rd640, %rd657;
	xor.b64  	%rd659, %rd658, %rd443;
	add.s64 	%rd660, %rd497, %rd420;
	add.s64 	%rd661, %rd660, %rd2697;
	add.s64 	%rd662, %rd661, %rd659;
	add.s64 	%rd663, %rd662, %rd656;
	add.s64 	%rd664, %rd663, %rd431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2289,%dummy}, %rd651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2290}, %rd651;
	}
	shf.r.wrap.b32 	%r2291, %r2290, %r2289, 28;
	shf.r.wrap.b32 	%r2292, %r2289, %r2290, 28;
	mov.b64 	%rd665, {%r2292, %r2291};
	shf.l.wrap.b32 	%r2293, %r2289, %r2290, 30;
	shf.l.wrap.b32 	%r2294, %r2290, %r2289, 30;
	mov.b64 	%rd666, {%r2294, %r2293};
	xor.b64  	%rd667, %rd666, %rd665;
	shf.l.wrap.b32 	%r2295, %r2289, %r2290, 25;
	shf.l.wrap.b32 	%r2296, %r2290, %r2289, 25;
	mov.b64 	%rd668, {%r2296, %r2295};
	xor.b64  	%rd669, %rd667, %rd668;
	xor.b64  	%rd670, %rd651, %rd454;
	xor.b64  	%rd671, %rd651, %rd478;
	and.b64  	%rd672, %rd671, %rd670;
	xor.b64  	%rd673, %rd672, %rd651;
	add.s64 	%rd674, %rd663, %rd673;
	add.s64 	%rd675, %rd674, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2297,%dummy}, %rd664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2298}, %rd664;
	}
	shf.r.wrap.b32 	%r2299, %r2298, %r2297, 14;
	shf.r.wrap.b32 	%r2300, %r2297, %r2298, 14;
	mov.b64 	%rd676, {%r2300, %r2299};
	shf.r.wrap.b32 	%r2301, %r2298, %r2297, 18;
	shf.r.wrap.b32 	%r2302, %r2297, %r2298, 18;
	mov.b64 	%rd677, {%r2302, %r2301};
	xor.b64  	%rd678, %rd677, %rd676;
	shf.l.wrap.b32 	%r2303, %r2297, %r2298, 23;
	shf.l.wrap.b32 	%r2304, %r2298, %r2297, 23;
	mov.b64 	%rd679, {%r2304, %r2303};
	xor.b64  	%rd680, %rd678, %rd679;
	xor.b64  	%rd681, %rd640, %rd467;
	and.b64  	%rd682, %rd664, %rd681;
	xor.b64  	%rd683, %rd682, %rd467;
	add.s64 	%rd684, %rd509, %rd443;
	add.s64 	%rd685, %rd684, %rd2698;
	add.s64 	%rd686, %rd685, %rd683;
	add.s64 	%rd687, %rd686, %rd680;
	add.s64 	%rd688, %rd687, %rd454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2305,%dummy}, %rd675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2306}, %rd675;
	}
	shf.r.wrap.b32 	%r2307, %r2306, %r2305, 28;
	shf.r.wrap.b32 	%r2308, %r2305, %r2306, 28;
	mov.b64 	%rd689, {%r2308, %r2307};
	shf.l.wrap.b32 	%r2309, %r2305, %r2306, 30;
	shf.l.wrap.b32 	%r2310, %r2306, %r2305, 30;
	mov.b64 	%rd690, {%r2310, %r2309};
	xor.b64  	%rd691, %rd690, %rd689;
	shf.l.wrap.b32 	%r2311, %r2305, %r2306, 25;
	shf.l.wrap.b32 	%r2312, %r2306, %r2305, 25;
	mov.b64 	%rd692, {%r2312, %r2311};
	xor.b64  	%rd693, %rd691, %rd692;
	xor.b64  	%rd694, %rd675, %rd478;
	xor.b64  	%rd695, %rd675, %rd651;
	and.b64  	%rd696, %rd695, %rd694;
	xor.b64  	%rd697, %rd696, %rd675;
	add.s64 	%rd698, %rd687, %rd697;
	add.s64 	%rd699, %rd698, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2313,%dummy}, %rd688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2314}, %rd688;
	}
	shf.r.wrap.b32 	%r2315, %r2314, %r2313, 14;
	shf.r.wrap.b32 	%r2316, %r2313, %r2314, 14;
	mov.b64 	%rd700, {%r2316, %r2315};
	shf.r.wrap.b32 	%r2317, %r2314, %r2313, 18;
	shf.r.wrap.b32 	%r2318, %r2313, %r2314, 18;
	mov.b64 	%rd701, {%r2318, %r2317};
	xor.b64  	%rd702, %rd701, %rd700;
	shf.l.wrap.b32 	%r2319, %r2313, %r2314, 23;
	shf.l.wrap.b32 	%r2320, %r2314, %r2313, 23;
	mov.b64 	%rd703, {%r2320, %r2319};
	xor.b64  	%rd704, %rd702, %rd703;
	xor.b64  	%rd705, %rd664, %rd640;
	and.b64  	%rd706, %rd688, %rd705;
	xor.b64  	%rd707, %rd706, %rd640;
	add.s64 	%rd708, %rd521, %rd467;
	add.s64 	%rd709, %rd708, %rd2699;
	add.s64 	%rd710, %rd709, %rd707;
	add.s64 	%rd711, %rd710, %rd704;
	add.s64 	%rd712, %rd711, %rd478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2321,%dummy}, %rd699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2322}, %rd699;
	}
	shf.r.wrap.b32 	%r2323, %r2322, %r2321, 28;
	shf.r.wrap.b32 	%r2324, %r2321, %r2322, 28;
	mov.b64 	%rd713, {%r2324, %r2323};
	shf.l.wrap.b32 	%r2325, %r2321, %r2322, 30;
	shf.l.wrap.b32 	%r2326, %r2322, %r2321, 30;
	mov.b64 	%rd714, {%r2326, %r2325};
	xor.b64  	%rd715, %rd714, %rd713;
	shf.l.wrap.b32 	%r2327, %r2321, %r2322, 25;
	shf.l.wrap.b32 	%r2328, %r2322, %r2321, 25;
	mov.b64 	%rd716, {%r2328, %r2327};
	xor.b64  	%rd717, %rd715, %rd716;
	xor.b64  	%rd718, %rd699, %rd651;
	xor.b64  	%rd719, %rd699, %rd675;
	and.b64  	%rd720, %rd719, %rd718;
	xor.b64  	%rd721, %rd720, %rd699;
	add.s64 	%rd722, %rd711, %rd721;
	add.s64 	%rd723, %rd722, %rd717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2329,%dummy}, %rd712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2330}, %rd712;
	}
	shf.r.wrap.b32 	%r2331, %r2330, %r2329, 14;
	shf.r.wrap.b32 	%r2332, %r2329, %r2330, 14;
	mov.b64 	%rd724, {%r2332, %r2331};
	shf.r.wrap.b32 	%r2333, %r2330, %r2329, 18;
	shf.r.wrap.b32 	%r2334, %r2329, %r2330, 18;
	mov.b64 	%rd725, {%r2334, %r2333};
	xor.b64  	%rd726, %rd725, %rd724;
	shf.l.wrap.b32 	%r2335, %r2329, %r2330, 23;
	shf.l.wrap.b32 	%r2336, %r2330, %r2329, 23;
	mov.b64 	%rd727, {%r2336, %r2335};
	xor.b64  	%rd728, %rd726, %rd727;
	xor.b64  	%rd729, %rd688, %rd664;
	and.b64  	%rd730, %rd712, %rd729;
	xor.b64  	%rd731, %rd730, %rd664;
	add.s64 	%rd732, %rd640, %rd533;
	add.s64 	%rd733, %rd732, %rd2700;
	add.s64 	%rd734, %rd733, %rd731;
	add.s64 	%rd735, %rd734, %rd728;
	add.s64 	%rd736, %rd735, %rd651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2337,%dummy}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2338}, %rd723;
	}
	shf.r.wrap.b32 	%r2339, %r2338, %r2337, 28;
	shf.r.wrap.b32 	%r2340, %r2337, %r2338, 28;
	mov.b64 	%rd737, {%r2340, %r2339};
	shf.l.wrap.b32 	%r2341, %r2337, %r2338, 30;
	shf.l.wrap.b32 	%r2342, %r2338, %r2337, 30;
	mov.b64 	%rd738, {%r2342, %r2341};
	xor.b64  	%rd739, %rd738, %rd737;
	shf.l.wrap.b32 	%r2343, %r2337, %r2338, 25;
	shf.l.wrap.b32 	%r2344, %r2338, %r2337, 25;
	mov.b64 	%rd740, {%r2344, %r2343};
	xor.b64  	%rd741, %rd739, %rd740;
	xor.b64  	%rd742, %rd723, %rd675;
	xor.b64  	%rd743, %rd723, %rd699;
	and.b64  	%rd744, %rd743, %rd742;
	xor.b64  	%rd745, %rd744, %rd723;
	add.s64 	%rd746, %rd735, %rd745;
	add.s64 	%rd747, %rd746, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2345,%dummy}, %rd736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2346}, %rd736;
	}
	shf.r.wrap.b32 	%r2347, %r2346, %r2345, 14;
	shf.r.wrap.b32 	%r2348, %r2345, %r2346, 14;
	mov.b64 	%rd748, {%r2348, %r2347};
	shf.r.wrap.b32 	%r2349, %r2346, %r2345, 18;
	shf.r.wrap.b32 	%r2350, %r2345, %r2346, 18;
	mov.b64 	%rd749, {%r2350, %r2349};
	xor.b64  	%rd750, %rd749, %rd748;
	shf.l.wrap.b32 	%r2351, %r2345, %r2346, 23;
	shf.l.wrap.b32 	%r2352, %r2346, %r2345, 23;
	mov.b64 	%rd751, {%r2352, %r2351};
	xor.b64  	%rd752, %rd750, %rd751;
	xor.b64  	%rd753, %rd712, %rd688;
	and.b64  	%rd754, %rd736, %rd753;
	xor.b64  	%rd755, %rd754, %rd688;
	add.s64 	%rd756, %rd664, %rd545;
	add.s64 	%rd757, %rd756, %rd2701;
	add.s64 	%rd758, %rd757, %rd755;
	add.s64 	%rd759, %rd758, %rd752;
	add.s64 	%rd760, %rd759, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2353,%dummy}, %rd747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2354}, %rd747;
	}
	shf.r.wrap.b32 	%r2355, %r2354, %r2353, 28;
	shf.r.wrap.b32 	%r2356, %r2353, %r2354, 28;
	mov.b64 	%rd761, {%r2356, %r2355};
	shf.l.wrap.b32 	%r2357, %r2353, %r2354, 30;
	shf.l.wrap.b32 	%r2358, %r2354, %r2353, 30;
	mov.b64 	%rd762, {%r2358, %r2357};
	xor.b64  	%rd763, %rd762, %rd761;
	shf.l.wrap.b32 	%r2359, %r2353, %r2354, 25;
	shf.l.wrap.b32 	%r2360, %r2354, %r2353, 25;
	mov.b64 	%rd764, {%r2360, %r2359};
	xor.b64  	%rd765, %rd763, %rd764;
	xor.b64  	%rd766, %rd747, %rd699;
	xor.b64  	%rd767, %rd747, %rd723;
	and.b64  	%rd768, %rd767, %rd766;
	xor.b64  	%rd769, %rd768, %rd747;
	add.s64 	%rd770, %rd759, %rd769;
	add.s64 	%rd771, %rd770, %rd765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2361,%dummy}, %rd760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2362}, %rd760;
	}
	shf.r.wrap.b32 	%r2363, %r2362, %r2361, 14;
	shf.r.wrap.b32 	%r2364, %r2361, %r2362, 14;
	mov.b64 	%rd772, {%r2364, %r2363};
	shf.r.wrap.b32 	%r2365, %r2362, %r2361, 18;
	shf.r.wrap.b32 	%r2366, %r2361, %r2362, 18;
	mov.b64 	%rd773, {%r2366, %r2365};
	xor.b64  	%rd774, %rd773, %rd772;
	shf.l.wrap.b32 	%r2367, %r2361, %r2362, 23;
	shf.l.wrap.b32 	%r2368, %r2362, %r2361, 23;
	mov.b64 	%rd775, {%r2368, %r2367};
	xor.b64  	%rd776, %rd774, %rd775;
	xor.b64  	%rd777, %rd736, %rd712;
	and.b64  	%rd778, %rd760, %rd777;
	xor.b64  	%rd779, %rd778, %rd712;
	add.s64 	%rd780, %rd688, %rd553;
	add.s64 	%rd781, %rd780, %rd2702;
	add.s64 	%rd782, %rd781, %rd779;
	add.s64 	%rd783, %rd782, %rd776;
	add.s64 	%rd784, %rd783, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2369,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2370}, %rd771;
	}
	shf.r.wrap.b32 	%r2371, %r2370, %r2369, 28;
	shf.r.wrap.b32 	%r2372, %r2369, %r2370, 28;
	mov.b64 	%rd785, {%r2372, %r2371};
	shf.l.wrap.b32 	%r2373, %r2369, %r2370, 30;
	shf.l.wrap.b32 	%r2374, %r2370, %r2369, 30;
	mov.b64 	%rd786, {%r2374, %r2373};
	xor.b64  	%rd787, %rd786, %rd785;
	shf.l.wrap.b32 	%r2375, %r2369, %r2370, 25;
	shf.l.wrap.b32 	%r2376, %r2370, %r2369, 25;
	mov.b64 	%rd788, {%r2376, %r2375};
	xor.b64  	%rd789, %rd787, %rd788;
	xor.b64  	%rd790, %rd771, %rd723;
	xor.b64  	%rd791, %rd771, %rd747;
	and.b64  	%rd792, %rd791, %rd790;
	xor.b64  	%rd793, %rd792, %rd771;
	add.s64 	%rd794, %rd783, %rd793;
	add.s64 	%rd795, %rd794, %rd789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2377,%dummy}, %rd784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2378}, %rd784;
	}
	shf.r.wrap.b32 	%r2379, %r2378, %r2377, 14;
	shf.r.wrap.b32 	%r2380, %r2377, %r2378, 14;
	mov.b64 	%rd796, {%r2380, %r2379};
	shf.r.wrap.b32 	%r2381, %r2378, %r2377, 18;
	shf.r.wrap.b32 	%r2382, %r2377, %r2378, 18;
	mov.b64 	%rd797, {%r2382, %r2381};
	xor.b64  	%rd798, %rd797, %rd796;
	shf.l.wrap.b32 	%r2383, %r2377, %r2378, 23;
	shf.l.wrap.b32 	%r2384, %r2378, %r2377, 23;
	mov.b64 	%rd799, {%r2384, %r2383};
	xor.b64  	%rd800, %rd798, %rd799;
	xor.b64  	%rd801, %rd760, %rd736;
	and.b64  	%rd802, %rd784, %rd801;
	xor.b64  	%rd803, %rd802, %rd736;
	add.s64 	%rd804, %rd712, %rd560;
	add.s64 	%rd805, %rd804, %rd2703;
	add.s64 	%rd806, %rd805, %rd803;
	add.s64 	%rd807, %rd806, %rd800;
	add.s64 	%rd808, %rd807, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2385,%dummy}, %rd795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2386}, %rd795;
	}
	shf.r.wrap.b32 	%r2387, %r2386, %r2385, 28;
	shf.r.wrap.b32 	%r2388, %r2385, %r2386, 28;
	mov.b64 	%rd809, {%r2388, %r2387};
	shf.l.wrap.b32 	%r2389, %r2385, %r2386, 30;
	shf.l.wrap.b32 	%r2390, %r2386, %r2385, 30;
	mov.b64 	%rd810, {%r2390, %r2389};
	xor.b64  	%rd811, %rd810, %rd809;
	shf.l.wrap.b32 	%r2391, %r2385, %r2386, 25;
	shf.l.wrap.b32 	%r2392, %r2386, %r2385, 25;
	mov.b64 	%rd812, {%r2392, %r2391};
	xor.b64  	%rd813, %rd811, %rd812;
	xor.b64  	%rd814, %rd795, %rd747;
	xor.b64  	%rd815, %rd795, %rd771;
	and.b64  	%rd816, %rd815, %rd814;
	xor.b64  	%rd817, %rd816, %rd795;
	add.s64 	%rd818, %rd807, %rd817;
	add.s64 	%rd819, %rd818, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2393,%dummy}, %rd808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2394}, %rd808;
	}
	shf.r.wrap.b32 	%r2395, %r2394, %r2393, 14;
	shf.r.wrap.b32 	%r2396, %r2393, %r2394, 14;
	mov.b64 	%rd820, {%r2396, %r2395};
	shf.r.wrap.b32 	%r2397, %r2394, %r2393, 18;
	shf.r.wrap.b32 	%r2398, %r2393, %r2394, 18;
	mov.b64 	%rd821, {%r2398, %r2397};
	xor.b64  	%rd822, %rd821, %rd820;
	shf.l.wrap.b32 	%r2399, %r2393, %r2394, 23;
	shf.l.wrap.b32 	%r2400, %r2394, %r2393, 23;
	mov.b64 	%rd823, {%r2400, %r2399};
	xor.b64  	%rd824, %rd822, %rd823;
	xor.b64  	%rd825, %rd784, %rd760;
	and.b64  	%rd826, %rd808, %rd825;
	xor.b64  	%rd827, %rd826, %rd760;
	add.s64 	%rd828, %rd736, %rd567;
	add.s64 	%rd829, %rd828, %rd2704;
	add.s64 	%rd830, %rd829, %rd827;
	add.s64 	%rd831, %rd830, %rd824;
	add.s64 	%rd832, %rd831, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2401,%dummy}, %rd819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2402}, %rd819;
	}
	shf.r.wrap.b32 	%r2403, %r2402, %r2401, 28;
	shf.r.wrap.b32 	%r2404, %r2401, %r2402, 28;
	mov.b64 	%rd833, {%r2404, %r2403};
	shf.l.wrap.b32 	%r2405, %r2401, %r2402, 30;
	shf.l.wrap.b32 	%r2406, %r2402, %r2401, 30;
	mov.b64 	%rd834, {%r2406, %r2405};
	xor.b64  	%rd835, %rd834, %rd833;
	shf.l.wrap.b32 	%r2407, %r2401, %r2402, 25;
	shf.l.wrap.b32 	%r2408, %r2402, %r2401, 25;
	mov.b64 	%rd836, {%r2408, %r2407};
	xor.b64  	%rd837, %rd835, %rd836;
	xor.b64  	%rd838, %rd819, %rd771;
	xor.b64  	%rd839, %rd819, %rd795;
	and.b64  	%rd840, %rd839, %rd838;
	xor.b64  	%rd841, %rd840, %rd819;
	add.s64 	%rd842, %rd831, %rd841;
	add.s64 	%rd843, %rd842, %rd837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2409,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2410}, %rd832;
	}
	shf.r.wrap.b32 	%r2411, %r2410, %r2409, 14;
	shf.r.wrap.b32 	%r2412, %r2409, %r2410, 14;
	mov.b64 	%rd844, {%r2412, %r2411};
	shf.r.wrap.b32 	%r2413, %r2410, %r2409, 18;
	shf.r.wrap.b32 	%r2414, %r2409, %r2410, 18;
	mov.b64 	%rd845, {%r2414, %r2413};
	xor.b64  	%rd846, %rd845, %rd844;
	shf.l.wrap.b32 	%r2415, %r2409, %r2410, 23;
	shf.l.wrap.b32 	%r2416, %r2410, %r2409, 23;
	mov.b64 	%rd847, {%r2416, %r2415};
	xor.b64  	%rd848, %rd846, %rd847;
	xor.b64  	%rd849, %rd808, %rd784;
	and.b64  	%rd850, %rd832, %rd849;
	xor.b64  	%rd851, %rd850, %rd784;
	add.s64 	%rd852, %rd760, %rd574;
	add.s64 	%rd853, %rd852, %rd2705;
	add.s64 	%rd854, %rd853, %rd851;
	add.s64 	%rd855, %rd854, %rd848;
	add.s64 	%rd856, %rd855, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2417,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2418}, %rd843;
	}
	shf.r.wrap.b32 	%r2419, %r2418, %r2417, 28;
	shf.r.wrap.b32 	%r2420, %r2417, %r2418, 28;
	mov.b64 	%rd857, {%r2420, %r2419};
	shf.l.wrap.b32 	%r2421, %r2417, %r2418, 30;
	shf.l.wrap.b32 	%r2422, %r2418, %r2417, 30;
	mov.b64 	%rd858, {%r2422, %r2421};
	xor.b64  	%rd859, %rd858, %rd857;
	shf.l.wrap.b32 	%r2423, %r2417, %r2418, 25;
	shf.l.wrap.b32 	%r2424, %r2418, %r2417, 25;
	mov.b64 	%rd860, {%r2424, %r2423};
	xor.b64  	%rd861, %rd859, %rd860;
	xor.b64  	%rd862, %rd843, %rd795;
	xor.b64  	%rd863, %rd843, %rd819;
	and.b64  	%rd864, %rd863, %rd862;
	xor.b64  	%rd865, %rd864, %rd843;
	add.s64 	%rd866, %rd855, %rd865;
	add.s64 	%rd867, %rd866, %rd861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2425,%dummy}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2426}, %rd856;
	}
	shf.r.wrap.b32 	%r2427, %r2426, %r2425, 14;
	shf.r.wrap.b32 	%r2428, %r2425, %r2426, 14;
	mov.b64 	%rd868, {%r2428, %r2427};
	shf.r.wrap.b32 	%r2429, %r2426, %r2425, 18;
	shf.r.wrap.b32 	%r2430, %r2425, %r2426, 18;
	mov.b64 	%rd869, {%r2430, %r2429};
	xor.b64  	%rd870, %rd869, %rd868;
	shf.l.wrap.b32 	%r2431, %r2425, %r2426, 23;
	shf.l.wrap.b32 	%r2432, %r2426, %r2425, 23;
	mov.b64 	%rd871, {%r2432, %r2431};
	xor.b64  	%rd872, %rd870, %rd871;
	xor.b64  	%rd873, %rd832, %rd808;
	and.b64  	%rd874, %rd856, %rd873;
	xor.b64  	%rd875, %rd874, %rd808;
	add.s64 	%rd876, %rd784, %rd581;
	add.s64 	%rd877, %rd876, %rd2706;
	add.s64 	%rd878, %rd877, %rd875;
	add.s64 	%rd879, %rd878, %rd872;
	add.s64 	%rd880, %rd879, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2433,%dummy}, %rd867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2434}, %rd867;
	}
	shf.r.wrap.b32 	%r2435, %r2434, %r2433, 28;
	shf.r.wrap.b32 	%r2436, %r2433, %r2434, 28;
	mov.b64 	%rd881, {%r2436, %r2435};
	shf.l.wrap.b32 	%r2437, %r2433, %r2434, 30;
	shf.l.wrap.b32 	%r2438, %r2434, %r2433, 30;
	mov.b64 	%rd882, {%r2438, %r2437};
	xor.b64  	%rd883, %rd882, %rd881;
	shf.l.wrap.b32 	%r2439, %r2433, %r2434, 25;
	shf.l.wrap.b32 	%r2440, %r2434, %r2433, 25;
	mov.b64 	%rd884, {%r2440, %r2439};
	xor.b64  	%rd885, %rd883, %rd884;
	xor.b64  	%rd886, %rd867, %rd819;
	xor.b64  	%rd887, %rd867, %rd843;
	and.b64  	%rd888, %rd887, %rd886;
	xor.b64  	%rd889, %rd888, %rd867;
	add.s64 	%rd890, %rd879, %rd889;
	add.s64 	%rd891, %rd890, %rd885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2441,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2442}, %rd880;
	}
	shf.r.wrap.b32 	%r2443, %r2442, %r2441, 14;
	shf.r.wrap.b32 	%r2444, %r2441, %r2442, 14;
	mov.b64 	%rd892, {%r2444, %r2443};
	shf.r.wrap.b32 	%r2445, %r2442, %r2441, 18;
	shf.r.wrap.b32 	%r2446, %r2441, %r2442, 18;
	mov.b64 	%rd893, {%r2446, %r2445};
	xor.b64  	%rd894, %rd893, %rd892;
	shf.l.wrap.b32 	%r2447, %r2441, %r2442, 23;
	shf.l.wrap.b32 	%r2448, %r2442, %r2441, 23;
	mov.b64 	%rd895, {%r2448, %r2447};
	xor.b64  	%rd896, %rd894, %rd895;
	xor.b64  	%rd897, %rd856, %rd832;
	and.b64  	%rd898, %rd880, %rd897;
	xor.b64  	%rd899, %rd898, %rd832;
	add.s64 	%rd900, %rd808, %rd588;
	add.s64 	%rd901, %rd900, %rd2707;
	add.s64 	%rd902, %rd901, %rd899;
	add.s64 	%rd903, %rd902, %rd896;
	add.s64 	%rd904, %rd903, %rd819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2449,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2450}, %rd891;
	}
	shf.r.wrap.b32 	%r2451, %r2450, %r2449, 28;
	shf.r.wrap.b32 	%r2452, %r2449, %r2450, 28;
	mov.b64 	%rd905, {%r2452, %r2451};
	shf.l.wrap.b32 	%r2453, %r2449, %r2450, 30;
	shf.l.wrap.b32 	%r2454, %r2450, %r2449, 30;
	mov.b64 	%rd906, {%r2454, %r2453};
	xor.b64  	%rd907, %rd906, %rd905;
	shf.l.wrap.b32 	%r2455, %r2449, %r2450, 25;
	shf.l.wrap.b32 	%r2456, %r2450, %r2449, 25;
	mov.b64 	%rd908, {%r2456, %r2455};
	xor.b64  	%rd909, %rd907, %rd908;
	xor.b64  	%rd910, %rd891, %rd843;
	xor.b64  	%rd911, %rd891, %rd867;
	and.b64  	%rd912, %rd911, %rd910;
	xor.b64  	%rd913, %rd912, %rd891;
	add.s64 	%rd914, %rd903, %rd913;
	add.s64 	%rd915, %rd914, %rd909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2457,%dummy}, %rd904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2458}, %rd904;
	}
	shf.r.wrap.b32 	%r2459, %r2458, %r2457, 14;
	shf.r.wrap.b32 	%r2460, %r2457, %r2458, 14;
	mov.b64 	%rd916, {%r2460, %r2459};
	shf.r.wrap.b32 	%r2461, %r2458, %r2457, 18;
	shf.r.wrap.b32 	%r2462, %r2457, %r2458, 18;
	mov.b64 	%rd917, {%r2462, %r2461};
	xor.b64  	%rd918, %rd917, %rd916;
	shf.l.wrap.b32 	%r2463, %r2457, %r2458, 23;
	shf.l.wrap.b32 	%r2464, %r2458, %r2457, 23;
	mov.b64 	%rd919, {%r2464, %r2463};
	xor.b64  	%rd920, %rd918, %rd919;
	xor.b64  	%rd921, %rd880, %rd856;
	and.b64  	%rd922, %rd904, %rd921;
	xor.b64  	%rd923, %rd922, %rd856;
	add.s64 	%rd924, %rd832, %rd595;
	add.s64 	%rd925, %rd924, %rd2708;
	add.s64 	%rd926, %rd925, %rd923;
	add.s64 	%rd927, %rd926, %rd920;
	add.s64 	%rd928, %rd927, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2465,%dummy}, %rd915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2466}, %rd915;
	}
	shf.r.wrap.b32 	%r2467, %r2466, %r2465, 28;
	shf.r.wrap.b32 	%r2468, %r2465, %r2466, 28;
	mov.b64 	%rd929, {%r2468, %r2467};
	shf.l.wrap.b32 	%r2469, %r2465, %r2466, 30;
	shf.l.wrap.b32 	%r2470, %r2466, %r2465, 30;
	mov.b64 	%rd930, {%r2470, %r2469};
	xor.b64  	%rd931, %rd930, %rd929;
	shf.l.wrap.b32 	%r2471, %r2465, %r2466, 25;
	shf.l.wrap.b32 	%r2472, %r2466, %r2465, 25;
	mov.b64 	%rd932, {%r2472, %r2471};
	xor.b64  	%rd933, %rd931, %rd932;
	xor.b64  	%rd934, %rd915, %rd867;
	xor.b64  	%rd935, %rd915, %rd891;
	and.b64  	%rd936, %rd935, %rd934;
	xor.b64  	%rd937, %rd936, %rd915;
	add.s64 	%rd938, %rd927, %rd937;
	add.s64 	%rd939, %rd938, %rd933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2473,%dummy}, %rd928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2474}, %rd928;
	}
	shf.r.wrap.b32 	%r2475, %r2474, %r2473, 14;
	shf.r.wrap.b32 	%r2476, %r2473, %r2474, 14;
	mov.b64 	%rd940, {%r2476, %r2475};
	shf.r.wrap.b32 	%r2477, %r2474, %r2473, 18;
	shf.r.wrap.b32 	%r2478, %r2473, %r2474, 18;
	mov.b64 	%rd941, {%r2478, %r2477};
	xor.b64  	%rd942, %rd941, %rd940;
	shf.l.wrap.b32 	%r2479, %r2473, %r2474, 23;
	shf.l.wrap.b32 	%r2480, %r2474, %r2473, 23;
	mov.b64 	%rd943, {%r2480, %r2479};
	xor.b64  	%rd944, %rd942, %rd943;
	xor.b64  	%rd945, %rd904, %rd880;
	and.b64  	%rd946, %rd928, %rd945;
	xor.b64  	%rd947, %rd946, %rd880;
	add.s64 	%rd948, %rd856, %rd602;
	add.s64 	%rd949, %rd948, %rd2709;
	add.s64 	%rd950, %rd949, %rd947;
	add.s64 	%rd951, %rd950, %rd944;
	add.s64 	%rd952, %rd951, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2481,%dummy}, %rd939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2482}, %rd939;
	}
	shf.r.wrap.b32 	%r2483, %r2482, %r2481, 28;
	shf.r.wrap.b32 	%r2484, %r2481, %r2482, 28;
	mov.b64 	%rd953, {%r2484, %r2483};
	shf.l.wrap.b32 	%r2485, %r2481, %r2482, 30;
	shf.l.wrap.b32 	%r2486, %r2482, %r2481, 30;
	mov.b64 	%rd954, {%r2486, %r2485};
	xor.b64  	%rd955, %rd954, %rd953;
	shf.l.wrap.b32 	%r2487, %r2481, %r2482, 25;
	shf.l.wrap.b32 	%r2488, %r2482, %r2481, 25;
	mov.b64 	%rd956, {%r2488, %r2487};
	xor.b64  	%rd957, %rd955, %rd956;
	xor.b64  	%rd958, %rd939, %rd891;
	xor.b64  	%rd959, %rd939, %rd915;
	and.b64  	%rd960, %rd959, %rd958;
	xor.b64  	%rd961, %rd960, %rd939;
	add.s64 	%rd962, %rd951, %rd961;
	add.s64 	%rd963, %rd962, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2489,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2490}, %rd952;
	}
	shf.r.wrap.b32 	%r2491, %r2490, %r2489, 14;
	shf.r.wrap.b32 	%r2492, %r2489, %r2490, 14;
	mov.b64 	%rd964, {%r2492, %r2491};
	shf.r.wrap.b32 	%r2493, %r2490, %r2489, 18;
	shf.r.wrap.b32 	%r2494, %r2489, %r2490, 18;
	mov.b64 	%rd965, {%r2494, %r2493};
	xor.b64  	%rd966, %rd965, %rd964;
	shf.l.wrap.b32 	%r2495, %r2489, %r2490, 23;
	shf.l.wrap.b32 	%r2496, %r2490, %r2489, 23;
	mov.b64 	%rd967, {%r2496, %r2495};
	xor.b64  	%rd968, %rd966, %rd967;
	xor.b64  	%rd969, %rd928, %rd904;
	and.b64  	%rd970, %rd952, %rd969;
	xor.b64  	%rd971, %rd970, %rd904;
	add.s64 	%rd972, %rd880, %rd614;
	add.s64 	%rd973, %rd972, %rd2710;
	add.s64 	%rd974, %rd973, %rd971;
	add.s64 	%rd975, %rd974, %rd968;
	add.s64 	%rd976, %rd975, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2497,%dummy}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2498}, %rd963;
	}
	shf.r.wrap.b32 	%r2499, %r2498, %r2497, 28;
	shf.r.wrap.b32 	%r2500, %r2497, %r2498, 28;
	mov.b64 	%rd977, {%r2500, %r2499};
	shf.l.wrap.b32 	%r2501, %r2497, %r2498, 30;
	shf.l.wrap.b32 	%r2502, %r2498, %r2497, 30;
	mov.b64 	%rd978, {%r2502, %r2501};
	xor.b64  	%rd979, %rd978, %rd977;
	shf.l.wrap.b32 	%r2503, %r2497, %r2498, 25;
	shf.l.wrap.b32 	%r2504, %r2498, %r2497, 25;
	mov.b64 	%rd980, {%r2504, %r2503};
	xor.b64  	%rd981, %rd979, %rd980;
	xor.b64  	%rd982, %rd963, %rd915;
	xor.b64  	%rd983, %rd963, %rd939;
	and.b64  	%rd984, %rd983, %rd982;
	xor.b64  	%rd985, %rd984, %rd963;
	add.s64 	%rd986, %rd975, %rd985;
	add.s64 	%rd987, %rd986, %rd981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2505,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2506}, %rd976;
	}
	shf.r.wrap.b32 	%r2507, %r2506, %r2505, 14;
	shf.r.wrap.b32 	%r2508, %r2505, %r2506, 14;
	mov.b64 	%rd988, {%r2508, %r2507};
	shf.r.wrap.b32 	%r2509, %r2506, %r2505, 18;
	shf.r.wrap.b32 	%r2510, %r2505, %r2506, 18;
	mov.b64 	%rd989, {%r2510, %r2509};
	xor.b64  	%rd990, %rd989, %rd988;
	shf.l.wrap.b32 	%r2511, %r2505, %r2506, 23;
	shf.l.wrap.b32 	%r2512, %r2506, %r2505, 23;
	mov.b64 	%rd991, {%r2512, %r2511};
	xor.b64  	%rd992, %rd990, %rd991;
	xor.b64  	%rd993, %rd952, %rd928;
	and.b64  	%rd994, %rd976, %rd993;
	xor.b64  	%rd995, %rd994, %rd928;
	add.s64 	%rd996, %rd904, %rd627;
	add.s64 	%rd997, %rd996, %rd2711;
	add.s64 	%rd998, %rd997, %rd995;
	add.s64 	%rd999, %rd998, %rd992;
	add.s64 	%rd1000, %rd999, %rd915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2513,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2514}, %rd987;
	}
	shf.r.wrap.b32 	%r2515, %r2514, %r2513, 28;
	shf.r.wrap.b32 	%r2516, %r2513, %r2514, 28;
	mov.b64 	%rd1001, {%r2516, %r2515};
	shf.l.wrap.b32 	%r2517, %r2513, %r2514, 30;
	shf.l.wrap.b32 	%r2518, %r2514, %r2513, 30;
	mov.b64 	%rd1002, {%r2518, %r2517};
	xor.b64  	%rd1003, %rd1002, %rd1001;
	shf.l.wrap.b32 	%r2519, %r2513, %r2514, 25;
	shf.l.wrap.b32 	%r2520, %r2514, %r2513, 25;
	mov.b64 	%rd1004, {%r2520, %r2519};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	xor.b64  	%rd1006, %rd987, %rd939;
	xor.b64  	%rd1007, %rd987, %rd963;
	and.b64  	%rd1008, %rd1007, %rd1006;
	xor.b64  	%rd1009, %rd1008, %rd987;
	add.s64 	%rd1010, %rd999, %rd1009;
	add.s64 	%rd1011, %rd1010, %rd1005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2521,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2522}, %rd614;
	}
	shf.r.wrap.b32 	%r2523, %r2522, %r2521, 19;
	shf.r.wrap.b32 	%r2524, %r2521, %r2522, 19;
	mov.b64 	%rd1012, {%r2524, %r2523};
	shf.l.wrap.b32 	%r2525, %r2521, %r2522, 3;
	shf.l.wrap.b32 	%r2526, %r2522, %r2521, 3;
	mov.b64 	%rd1013, {%r2526, %r2525};
	shr.u64 	%rd1014, %rd614, 6;
	xor.b64  	%rd1015, %rd1012, %rd1014;
	xor.b64  	%rd1016, %rd1015, %rd1013;
	shf.r.wrap.b32 	%r2527, %r2162, %r2161, 1;
	shf.r.wrap.b32 	%r2528, %r2161, %r2162, 1;
	mov.b64 	%rd1017, {%r2528, %r2527};
	shf.r.wrap.b32 	%r2529, %r2162, %r2161, 8;
	shf.r.wrap.b32 	%r2530, %r2161, %r2162, 8;
	mov.b64 	%rd1018, {%r2530, %r2529};
	shr.u64 	%rd1019, %rd497, 7;
	xor.b64  	%rd1020, %rd1017, %rd1019;
	xor.b64  	%rd1021, %rd1020, %rd1018;
	add.s64 	%rd1022, %rd485, %rd574;
	add.s64 	%rd1023, %rd1022, %rd1016;
	add.s64 	%rd1024, %rd1023, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2531,%dummy}, %rd627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2532}, %rd627;
	}
	shf.r.wrap.b32 	%r2533, %r2532, %r2531, 19;
	shf.r.wrap.b32 	%r2534, %r2531, %r2532, 19;
	mov.b64 	%rd1025, {%r2534, %r2533};
	shf.l.wrap.b32 	%r2535, %r2531, %r2532, 3;
	shf.l.wrap.b32 	%r2536, %r2532, %r2531, 3;
	mov.b64 	%rd1026, {%r2536, %r2535};
	shr.u64 	%rd1027, %rd627, 6;
	xor.b64  	%rd1028, %rd1025, %rd1027;
	xor.b64  	%rd1029, %rd1028, %rd1026;
	shf.r.wrap.b32 	%r2537, %r2174, %r2173, 1;
	shf.r.wrap.b32 	%r2538, %r2173, %r2174, 1;
	mov.b64 	%rd1030, {%r2538, %r2537};
	shf.r.wrap.b32 	%r2539, %r2174, %r2173, 8;
	shf.r.wrap.b32 	%r2540, %r2173, %r2174, 8;
	mov.b64 	%rd1031, {%r2540, %r2539};
	shr.u64 	%rd1032, %rd509, 7;
	xor.b64  	%rd1033, %rd1030, %rd1032;
	xor.b64  	%rd1034, %rd1033, %rd1031;
	add.s64 	%rd1035, %rd497, %rd581;
	add.s64 	%rd1036, %rd1035, %rd1029;
	add.s64 	%rd1037, %rd1036, %rd1034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2541,%dummy}, %rd1024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2542}, %rd1024;
	}
	shf.r.wrap.b32 	%r2543, %r2542, %r2541, 19;
	shf.r.wrap.b32 	%r2544, %r2541, %r2542, 19;
	mov.b64 	%rd1038, {%r2544, %r2543};
	shf.l.wrap.b32 	%r2545, %r2541, %r2542, 3;
	shf.l.wrap.b32 	%r2546, %r2542, %r2541, 3;
	mov.b64 	%rd1039, {%r2546, %r2545};
	shr.u64 	%rd1040, %rd1024, 6;
	xor.b64  	%rd1041, %rd1038, %rd1040;
	xor.b64  	%rd1042, %rd1041, %rd1039;
	shf.r.wrap.b32 	%r2547, %r2186, %r2185, 1;
	shf.r.wrap.b32 	%r2548, %r2185, %r2186, 1;
	mov.b64 	%rd1043, {%r2548, %r2547};
	shf.r.wrap.b32 	%r2549, %r2186, %r2185, 8;
	shf.r.wrap.b32 	%r2550, %r2185, %r2186, 8;
	mov.b64 	%rd1044, {%r2550, %r2549};
	shr.u64 	%rd1045, %rd521, 7;
	xor.b64  	%rd1046, %rd1043, %rd1045;
	xor.b64  	%rd1047, %rd1046, %rd1044;
	add.s64 	%rd1048, %rd509, %rd588;
	add.s64 	%rd1049, %rd1048, %rd1042;
	add.s64 	%rd1050, %rd1049, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2551,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2552}, %rd1037;
	}
	shf.r.wrap.b32 	%r2553, %r2552, %r2551, 19;
	shf.r.wrap.b32 	%r2554, %r2551, %r2552, 19;
	mov.b64 	%rd1051, {%r2554, %r2553};
	shf.l.wrap.b32 	%r2555, %r2551, %r2552, 3;
	shf.l.wrap.b32 	%r2556, %r2552, %r2551, 3;
	mov.b64 	%rd1052, {%r2556, %r2555};
	shr.u64 	%rd1053, %rd1037, 6;
	xor.b64  	%rd1054, %rd1051, %rd1053;
	xor.b64  	%rd1055, %rd1054, %rd1052;
	shf.r.wrap.b32 	%r2557, %r2198, %r2197, 1;
	shf.r.wrap.b32 	%r2558, %r2197, %r2198, 1;
	mov.b64 	%rd1056, {%r2558, %r2557};
	shf.r.wrap.b32 	%r2559, %r2198, %r2197, 8;
	shf.r.wrap.b32 	%r2560, %r2197, %r2198, 8;
	mov.b64 	%rd1057, {%r2560, %r2559};
	shr.u64 	%rd1058, %rd533, 7;
	xor.b64  	%rd1059, %rd1056, %rd1058;
	xor.b64  	%rd1060, %rd1059, %rd1057;
	add.s64 	%rd1061, %rd521, %rd595;
	add.s64 	%rd1062, %rd1061, %rd1055;
	add.s64 	%rd1063, %rd1062, %rd1060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2561,%dummy}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2562}, %rd1050;
	}
	shf.r.wrap.b32 	%r2563, %r2562, %r2561, 19;
	shf.r.wrap.b32 	%r2564, %r2561, %r2562, 19;
	mov.b64 	%rd1064, {%r2564, %r2563};
	shf.l.wrap.b32 	%r2565, %r2561, %r2562, 3;
	shf.l.wrap.b32 	%r2566, %r2562, %r2561, 3;
	mov.b64 	%rd1065, {%r2566, %r2565};
	shr.u64 	%rd1066, %rd1050, 6;
	xor.b64  	%rd1067, %rd1064, %rd1066;
	xor.b64  	%rd1068, %rd1067, %rd1065;
	shf.r.wrap.b32 	%r2567, %r2204, %r2203, 1;
	shf.r.wrap.b32 	%r2568, %r2203, %r2204, 1;
	mov.b64 	%rd1069, {%r2568, %r2567};
	shf.r.wrap.b32 	%r2569, %r2204, %r2203, 8;
	shf.r.wrap.b32 	%r2570, %r2203, %r2204, 8;
	mov.b64 	%rd1070, {%r2570, %r2569};
	shr.u64 	%rd1071, %rd545, 7;
	xor.b64  	%rd1072, %rd1069, %rd1071;
	xor.b64  	%rd1073, %rd1072, %rd1070;
	add.s64 	%rd1074, %rd533, %rd602;
	add.s64 	%rd1075, %rd1074, %rd1068;
	add.s64 	%rd1076, %rd1075, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2571,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2572}, %rd1063;
	}
	shf.r.wrap.b32 	%r2573, %r2572, %r2571, 19;
	shf.r.wrap.b32 	%r2574, %r2571, %r2572, 19;
	mov.b64 	%rd1077, {%r2574, %r2573};
	shf.l.wrap.b32 	%r2575, %r2571, %r2572, 3;
	shf.l.wrap.b32 	%r2576, %r2572, %r2571, 3;
	mov.b64 	%rd1078, {%r2576, %r2575};
	shr.u64 	%rd1079, %rd1063, 6;
	xor.b64  	%rd1080, %rd1077, %rd1079;
	xor.b64  	%rd1081, %rd1080, %rd1078;
	shf.r.wrap.b32 	%r2577, %r2210, %r2209, 1;
	shf.r.wrap.b32 	%r2578, %r2209, %r2210, 1;
	mov.b64 	%rd1082, {%r2578, %r2577};
	shf.r.wrap.b32 	%r2579, %r2210, %r2209, 8;
	shf.r.wrap.b32 	%r2580, %r2209, %r2210, 8;
	mov.b64 	%rd1083, {%r2580, %r2579};
	shr.u64 	%rd1084, %rd553, 7;
	xor.b64  	%rd1085, %rd1082, %rd1084;
	xor.b64  	%rd1086, %rd1085, %rd1083;
	add.s64 	%rd1087, %rd545, %rd614;
	add.s64 	%rd1088, %rd1087, %rd1081;
	add.s64 	%rd1089, %rd1088, %rd1086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2581,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2582}, %rd1076;
	}
	shf.r.wrap.b32 	%r2583, %r2582, %r2581, 19;
	shf.r.wrap.b32 	%r2584, %r2581, %r2582, 19;
	mov.b64 	%rd1090, {%r2584, %r2583};
	shf.l.wrap.b32 	%r2585, %r2581, %r2582, 3;
	shf.l.wrap.b32 	%r2586, %r2582, %r2581, 3;
	mov.b64 	%rd1091, {%r2586, %r2585};
	shr.u64 	%rd1092, %rd1076, 6;
	xor.b64  	%rd1093, %rd1090, %rd1092;
	xor.b64  	%rd1094, %rd1093, %rd1091;
	shf.r.wrap.b32 	%r2587, %r2216, %r2215, 1;
	shf.r.wrap.b32 	%r2588, %r2215, %r2216, 1;
	mov.b64 	%rd1095, {%r2588, %r2587};
	shf.r.wrap.b32 	%r2589, %r2216, %r2215, 8;
	shf.r.wrap.b32 	%r2590, %r2215, %r2216, 8;
	mov.b64 	%rd1096, {%r2590, %r2589};
	shr.u64 	%rd1097, %rd560, 7;
	xor.b64  	%rd1098, %rd1095, %rd1097;
	xor.b64  	%rd1099, %rd1098, %rd1096;
	add.s64 	%rd1100, %rd553, %rd627;
	add.s64 	%rd1101, %rd1100, %rd1094;
	add.s64 	%rd1102, %rd1101, %rd1099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2591,%dummy}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2592}, %rd1089;
	}
	shf.r.wrap.b32 	%r2593, %r2592, %r2591, 19;
	shf.r.wrap.b32 	%r2594, %r2591, %r2592, 19;
	mov.b64 	%rd1103, {%r2594, %r2593};
	shf.l.wrap.b32 	%r2595, %r2591, %r2592, 3;
	shf.l.wrap.b32 	%r2596, %r2592, %r2591, 3;
	mov.b64 	%rd1104, {%r2596, %r2595};
	shr.u64 	%rd1105, %rd1089, 6;
	xor.b64  	%rd1106, %rd1103, %rd1105;
	xor.b64  	%rd1107, %rd1106, %rd1104;
	shf.r.wrap.b32 	%r2597, %r2222, %r2221, 1;
	shf.r.wrap.b32 	%r2598, %r2221, %r2222, 1;
	mov.b64 	%rd1108, {%r2598, %r2597};
	shf.r.wrap.b32 	%r2599, %r2222, %r2221, 8;
	shf.r.wrap.b32 	%r2600, %r2221, %r2222, 8;
	mov.b64 	%rd1109, {%r2600, %r2599};
	shr.u64 	%rd1110, %rd567, 7;
	xor.b64  	%rd1111, %rd1108, %rd1110;
	xor.b64  	%rd1112, %rd1111, %rd1109;
	add.s64 	%rd1113, %rd1024, %rd560;
	add.s64 	%rd1114, %rd1113, %rd1107;
	add.s64 	%rd1115, %rd1114, %rd1112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2601,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2602}, %rd1102;
	}
	shf.r.wrap.b32 	%r2603, %r2602, %r2601, 19;
	shf.r.wrap.b32 	%r2604, %r2601, %r2602, 19;
	mov.b64 	%rd1116, {%r2604, %r2603};
	shf.l.wrap.b32 	%r2605, %r2601, %r2602, 3;
	shf.l.wrap.b32 	%r2606, %r2602, %r2601, 3;
	mov.b64 	%rd1117, {%r2606, %r2605};
	shr.u64 	%rd1118, %rd1102, 6;
	xor.b64  	%rd1119, %rd1116, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd1117;
	shf.r.wrap.b32 	%r2607, %r2228, %r2227, 1;
	shf.r.wrap.b32 	%r2608, %r2227, %r2228, 1;
	mov.b64 	%rd1121, {%r2608, %r2607};
	shf.r.wrap.b32 	%r2609, %r2228, %r2227, 8;
	shf.r.wrap.b32 	%r2610, %r2227, %r2228, 8;
	mov.b64 	%rd1122, {%r2610, %r2609};
	shr.u64 	%rd1123, %rd574, 7;
	xor.b64  	%rd1124, %rd1121, %rd1123;
	xor.b64  	%rd1125, %rd1124, %rd1122;
	add.s64 	%rd1126, %rd1037, %rd567;
	add.s64 	%rd1127, %rd1126, %rd1120;
	add.s64 	%rd1128, %rd1127, %rd1125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2611,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2612}, %rd1115;
	}
	shf.r.wrap.b32 	%r2613, %r2612, %r2611, 19;
	shf.r.wrap.b32 	%r2614, %r2611, %r2612, 19;
	mov.b64 	%rd1129, {%r2614, %r2613};
	shf.l.wrap.b32 	%r2615, %r2611, %r2612, 3;
	shf.l.wrap.b32 	%r2616, %r2612, %r2611, 3;
	mov.b64 	%rd1130, {%r2616, %r2615};
	shr.u64 	%rd1131, %rd1115, 6;
	xor.b64  	%rd1132, %rd1129, %rd1131;
	xor.b64  	%rd1133, %rd1132, %rd1130;
	shf.r.wrap.b32 	%r2617, %r2234, %r2233, 1;
	shf.r.wrap.b32 	%r2618, %r2233, %r2234, 1;
	mov.b64 	%rd1134, {%r2618, %r2617};
	shf.r.wrap.b32 	%r2619, %r2234, %r2233, 8;
	shf.r.wrap.b32 	%r2620, %r2233, %r2234, 8;
	mov.b64 	%rd1135, {%r2620, %r2619};
	shr.u64 	%rd1136, %rd581, 7;
	xor.b64  	%rd1137, %rd1134, %rd1136;
	xor.b64  	%rd1138, %rd1137, %rd1135;
	add.s64 	%rd1139, %rd1050, %rd574;
	add.s64 	%rd1140, %rd1139, %rd1133;
	add.s64 	%rd1141, %rd1140, %rd1138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2621,%dummy}, %rd1128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2622}, %rd1128;
	}
	shf.r.wrap.b32 	%r2623, %r2622, %r2621, 19;
	shf.r.wrap.b32 	%r2624, %r2621, %r2622, 19;
	mov.b64 	%rd1142, {%r2624, %r2623};
	shf.l.wrap.b32 	%r2625, %r2621, %r2622, 3;
	shf.l.wrap.b32 	%r2626, %r2622, %r2621, 3;
	mov.b64 	%rd1143, {%r2626, %r2625};
	shr.u64 	%rd1144, %rd1128, 6;
	xor.b64  	%rd1145, %rd1142, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1143;
	shf.r.wrap.b32 	%r2627, %r2240, %r2239, 1;
	shf.r.wrap.b32 	%r2628, %r2239, %r2240, 1;
	mov.b64 	%rd1147, {%r2628, %r2627};
	shf.r.wrap.b32 	%r2629, %r2240, %r2239, 8;
	shf.r.wrap.b32 	%r2630, %r2239, %r2240, 8;
	mov.b64 	%rd1148, {%r2630, %r2629};
	shr.u64 	%rd1149, %rd588, 7;
	xor.b64  	%rd1150, %rd1147, %rd1149;
	xor.b64  	%rd1151, %rd1150, %rd1148;
	add.s64 	%rd1152, %rd1063, %rd581;
	add.s64 	%rd1153, %rd1152, %rd1146;
	add.s64 	%rd1154, %rd1153, %rd1151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2631,%dummy}, %rd1141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2632}, %rd1141;
	}
	shf.r.wrap.b32 	%r2633, %r2632, %r2631, 19;
	shf.r.wrap.b32 	%r2634, %r2631, %r2632, 19;
	mov.b64 	%rd1155, {%r2634, %r2633};
	shf.l.wrap.b32 	%r2635, %r2631, %r2632, 3;
	shf.l.wrap.b32 	%r2636, %r2632, %r2631, 3;
	mov.b64 	%rd1156, {%r2636, %r2635};
	shr.u64 	%rd1157, %rd1141, 6;
	xor.b64  	%rd1158, %rd1155, %rd1157;
	xor.b64  	%rd1159, %rd1158, %rd1156;
	shf.r.wrap.b32 	%r2637, %r2246, %r2245, 1;
	shf.r.wrap.b32 	%r2638, %r2245, %r2246, 1;
	mov.b64 	%rd1160, {%r2638, %r2637};
	shf.r.wrap.b32 	%r2639, %r2246, %r2245, 8;
	shf.r.wrap.b32 	%r2640, %r2245, %r2246, 8;
	mov.b64 	%rd1161, {%r2640, %r2639};
	shr.u64 	%rd1162, %rd595, 7;
	xor.b64  	%rd1163, %rd1160, %rd1162;
	xor.b64  	%rd1164, %rd1163, %rd1161;
	add.s64 	%rd1165, %rd1076, %rd588;
	add.s64 	%rd1166, %rd1165, %rd1159;
	add.s64 	%rd1167, %rd1166, %rd1164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2641,%dummy}, %rd1154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2642}, %rd1154;
	}
	shf.r.wrap.b32 	%r2643, %r2642, %r2641, 19;
	shf.r.wrap.b32 	%r2644, %r2641, %r2642, 19;
	mov.b64 	%rd1168, {%r2644, %r2643};
	shf.l.wrap.b32 	%r2645, %r2641, %r2642, 3;
	shf.l.wrap.b32 	%r2646, %r2642, %r2641, 3;
	mov.b64 	%rd1169, {%r2646, %r2645};
	shr.u64 	%rd1170, %rd1154, 6;
	xor.b64  	%rd1171, %rd1168, %rd1170;
	xor.b64  	%rd1172, %rd1171, %rd1169;
	shf.r.wrap.b32 	%r2647, %r2256, %r2255, 1;
	shf.r.wrap.b32 	%r2648, %r2255, %r2256, 1;
	mov.b64 	%rd1173, {%r2648, %r2647};
	shf.r.wrap.b32 	%r2649, %r2256, %r2255, 8;
	shf.r.wrap.b32 	%r2650, %r2255, %r2256, 8;
	mov.b64 	%rd1174, {%r2650, %r2649};
	shr.u64 	%rd1175, %rd602, 7;
	xor.b64  	%rd1176, %rd1173, %rd1175;
	xor.b64  	%rd1177, %rd1176, %rd1174;
	add.s64 	%rd1178, %rd1089, %rd595;
	add.s64 	%rd1179, %rd1178, %rd1172;
	add.s64 	%rd1180, %rd1179, %rd1177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2651,%dummy}, %rd1167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2652}, %rd1167;
	}
	shf.r.wrap.b32 	%r2653, %r2652, %r2651, 19;
	shf.r.wrap.b32 	%r2654, %r2651, %r2652, 19;
	mov.b64 	%rd1181, {%r2654, %r2653};
	shf.l.wrap.b32 	%r2655, %r2651, %r2652, 3;
	shf.l.wrap.b32 	%r2656, %r2652, %r2651, 3;
	mov.b64 	%rd1182, {%r2656, %r2655};
	shr.u64 	%rd1183, %rd1167, 6;
	xor.b64  	%rd1184, %rd1181, %rd1183;
	xor.b64  	%rd1185, %rd1184, %rd1182;
	shf.r.wrap.b32 	%r2657, %r2522, %r2521, 1;
	shf.r.wrap.b32 	%r2658, %r2521, %r2522, 1;
	mov.b64 	%rd1186, {%r2658, %r2657};
	shf.r.wrap.b32 	%r2659, %r2522, %r2521, 8;
	shf.r.wrap.b32 	%r2660, %r2521, %r2522, 8;
	mov.b64 	%rd1187, {%r2660, %r2659};
	shr.u64 	%rd1188, %rd614, 7;
	xor.b64  	%rd1189, %rd1186, %rd1188;
	xor.b64  	%rd1190, %rd1189, %rd1187;
	add.s64 	%rd1191, %rd1102, %rd602;
	add.s64 	%rd1192, %rd1191, %rd1185;
	add.s64 	%rd1193, %rd1192, %rd1190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2661,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2662}, %rd1180;
	}
	shf.r.wrap.b32 	%r2663, %r2662, %r2661, 19;
	shf.r.wrap.b32 	%r2664, %r2661, %r2662, 19;
	mov.b64 	%rd1194, {%r2664, %r2663};
	shf.l.wrap.b32 	%r2665, %r2661, %r2662, 3;
	shf.l.wrap.b32 	%r2666, %r2662, %r2661, 3;
	mov.b64 	%rd1195, {%r2666, %r2665};
	shr.u64 	%rd1196, %rd1180, 6;
	xor.b64  	%rd1197, %rd1194, %rd1196;
	xor.b64  	%rd1198, %rd1197, %rd1195;
	shf.r.wrap.b32 	%r2667, %r2532, %r2531, 1;
	shf.r.wrap.b32 	%r2668, %r2531, %r2532, 1;
	mov.b64 	%rd1199, {%r2668, %r2667};
	shf.r.wrap.b32 	%r2669, %r2532, %r2531, 8;
	shf.r.wrap.b32 	%r2670, %r2531, %r2532, 8;
	mov.b64 	%rd1200, {%r2670, %r2669};
	shr.u64 	%rd1201, %rd627, 7;
	xor.b64  	%rd1202, %rd1199, %rd1201;
	xor.b64  	%rd1203, %rd1202, %rd1200;
	add.s64 	%rd1204, %rd1115, %rd614;
	add.s64 	%rd1205, %rd1204, %rd1198;
	add.s64 	%rd1206, %rd1205, %rd1203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2671,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2672}, %rd1193;
	}
	shf.r.wrap.b32 	%r2673, %r2672, %r2671, 19;
	shf.r.wrap.b32 	%r2674, %r2671, %r2672, 19;
	mov.b64 	%rd1207, {%r2674, %r2673};
	shf.l.wrap.b32 	%r2675, %r2671, %r2672, 3;
	shf.l.wrap.b32 	%r2676, %r2672, %r2671, 3;
	mov.b64 	%rd1208, {%r2676, %r2675};
	shr.u64 	%rd1209, %rd1193, 6;
	xor.b64  	%rd1210, %rd1207, %rd1209;
	xor.b64  	%rd1211, %rd1210, %rd1208;
	shf.r.wrap.b32 	%r2677, %r2542, %r2541, 1;
	shf.r.wrap.b32 	%r2678, %r2541, %r2542, 1;
	mov.b64 	%rd1212, {%r2678, %r2677};
	shf.r.wrap.b32 	%r2679, %r2542, %r2541, 8;
	shf.r.wrap.b32 	%r2680, %r2541, %r2542, 8;
	mov.b64 	%rd1213, {%r2680, %r2679};
	shr.u64 	%rd1214, %rd1024, 7;
	xor.b64  	%rd1215, %rd1212, %rd1214;
	xor.b64  	%rd1216, %rd1215, %rd1213;
	add.s64 	%rd1217, %rd1128, %rd627;
	add.s64 	%rd1218, %rd1217, %rd1211;
	add.s64 	%rd1219, %rd1218, %rd1216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2681,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2682}, %rd1000;
	}
	shf.r.wrap.b32 	%r2683, %r2682, %r2681, 14;
	shf.r.wrap.b32 	%r2684, %r2681, %r2682, 14;
	mov.b64 	%rd1220, {%r2684, %r2683};
	shf.r.wrap.b32 	%r2685, %r2682, %r2681, 18;
	shf.r.wrap.b32 	%r2686, %r2681, %r2682, 18;
	mov.b64 	%rd1221, {%r2686, %r2685};
	xor.b64  	%rd1222, %rd1221, %rd1220;
	shf.l.wrap.b32 	%r2687, %r2681, %r2682, 23;
	shf.l.wrap.b32 	%r2688, %r2682, %r2681, 23;
	mov.b64 	%rd1223, {%r2688, %r2687};
	xor.b64  	%rd1224, %rd1222, %rd1223;
	xor.b64  	%rd1225, %rd952, %rd976;
	and.b64  	%rd1226, %rd1225, %rd1000;
	xor.b64  	%rd1227, %rd1226, %rd952;
	add.s64 	%rd1228, %rd1227, %rd928;
	add.s64 	%rd1229, %rd1228, %rd1024;
	add.s64 	%rd1230, %rd1229, %rd2712;
	add.s64 	%rd1231, %rd1230, %rd1224;
	add.s64 	%rd1232, %rd1231, %rd939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2689,%dummy}, %rd1011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2690}, %rd1011;
	}
	shf.r.wrap.b32 	%r2691, %r2690, %r2689, 28;
	shf.r.wrap.b32 	%r2692, %r2689, %r2690, 28;
	mov.b64 	%rd1233, {%r2692, %r2691};
	shf.l.wrap.b32 	%r2693, %r2689, %r2690, 30;
	shf.l.wrap.b32 	%r2694, %r2690, %r2689, 30;
	mov.b64 	%rd1234, {%r2694, %r2693};
	xor.b64  	%rd1235, %rd1234, %rd1233;
	shf.l.wrap.b32 	%r2695, %r2689, %r2690, 25;
	shf.l.wrap.b32 	%r2696, %r2690, %r2689, 25;
	mov.b64 	%rd1236, {%r2696, %r2695};
	xor.b64  	%rd1237, %rd1235, %rd1236;
	xor.b64  	%rd1238, %rd1011, %rd963;
	xor.b64  	%rd1239, %rd1011, %rd987;
	and.b64  	%rd1240, %rd1239, %rd1238;
	xor.b64  	%rd1241, %rd1240, %rd1011;
	add.s64 	%rd1242, %rd1231, %rd1241;
	add.s64 	%rd1243, %rd1242, %rd1237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2697,%dummy}, %rd1232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2698}, %rd1232;
	}
	shf.r.wrap.b32 	%r2699, %r2698, %r2697, 14;
	shf.r.wrap.b32 	%r2700, %r2697, %r2698, 14;
	mov.b64 	%rd1244, {%r2700, %r2699};
	shf.r.wrap.b32 	%r2701, %r2698, %r2697, 18;
	shf.r.wrap.b32 	%r2702, %r2697, %r2698, 18;
	mov.b64 	%rd1245, {%r2702, %r2701};
	xor.b64  	%rd1246, %rd1245, %rd1244;
	shf.l.wrap.b32 	%r2703, %r2697, %r2698, 23;
	shf.l.wrap.b32 	%r2704, %r2698, %r2697, 23;
	mov.b64 	%rd1247, {%r2704, %r2703};
	xor.b64  	%rd1248, %rd1246, %rd1247;
	xor.b64  	%rd1249, %rd976, %rd1000;
	and.b64  	%rd1250, %rd1232, %rd1249;
	xor.b64  	%rd1251, %rd1250, %rd976;
	add.s64 	%rd1252, %rd1037, %rd952;
	add.s64 	%rd1253, %rd1252, %rd2713;
	add.s64 	%rd1254, %rd1253, %rd1251;
	add.s64 	%rd1255, %rd1254, %rd1248;
	add.s64 	%rd1256, %rd1255, %rd963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2705,%dummy}, %rd1243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2706}, %rd1243;
	}
	shf.r.wrap.b32 	%r2707, %r2706, %r2705, 28;
	shf.r.wrap.b32 	%r2708, %r2705, %r2706, 28;
	mov.b64 	%rd1257, {%r2708, %r2707};
	shf.l.wrap.b32 	%r2709, %r2705, %r2706, 30;
	shf.l.wrap.b32 	%r2710, %r2706, %r2705, 30;
	mov.b64 	%rd1258, {%r2710, %r2709};
	xor.b64  	%rd1259, %rd1258, %rd1257;
	shf.l.wrap.b32 	%r2711, %r2705, %r2706, 25;
	shf.l.wrap.b32 	%r2712, %r2706, %r2705, 25;
	mov.b64 	%rd1260, {%r2712, %r2711};
	xor.b64  	%rd1261, %rd1259, %rd1260;
	xor.b64  	%rd1262, %rd1243, %rd987;
	xor.b64  	%rd1263, %rd1243, %rd1011;
	and.b64  	%rd1264, %rd1263, %rd1262;
	xor.b64  	%rd1265, %rd1264, %rd1243;
	add.s64 	%rd1266, %rd1255, %rd1265;
	add.s64 	%rd1267, %rd1266, %rd1261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2713,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2714}, %rd1256;
	}
	shf.r.wrap.b32 	%r2715, %r2714, %r2713, 14;
	shf.r.wrap.b32 	%r2716, %r2713, %r2714, 14;
	mov.b64 	%rd1268, {%r2716, %r2715};
	shf.r.wrap.b32 	%r2717, %r2714, %r2713, 18;
	shf.r.wrap.b32 	%r2718, %r2713, %r2714, 18;
	mov.b64 	%rd1269, {%r2718, %r2717};
	xor.b64  	%rd1270, %rd1269, %rd1268;
	shf.l.wrap.b32 	%r2719, %r2713, %r2714, 23;
	shf.l.wrap.b32 	%r2720, %r2714, %r2713, 23;
	mov.b64 	%rd1271, {%r2720, %r2719};
	xor.b64  	%rd1272, %rd1270, %rd1271;
	xor.b64  	%rd1273, %rd1232, %rd1000;
	and.b64  	%rd1274, %rd1256, %rd1273;
	xor.b64  	%rd1275, %rd1274, %rd1000;
	add.s64 	%rd1276, %rd1050, %rd976;
	add.s64 	%rd1277, %rd1276, %rd2714;
	add.s64 	%rd1278, %rd1277, %rd1275;
	add.s64 	%rd1279, %rd1278, %rd1272;
	add.s64 	%rd1280, %rd1279, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2721,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2722}, %rd1267;
	}
	shf.r.wrap.b32 	%r2723, %r2722, %r2721, 28;
	shf.r.wrap.b32 	%r2724, %r2721, %r2722, 28;
	mov.b64 	%rd1281, {%r2724, %r2723};
	shf.l.wrap.b32 	%r2725, %r2721, %r2722, 30;
	shf.l.wrap.b32 	%r2726, %r2722, %r2721, 30;
	mov.b64 	%rd1282, {%r2726, %r2725};
	xor.b64  	%rd1283, %rd1282, %rd1281;
	shf.l.wrap.b32 	%r2727, %r2721, %r2722, 25;
	shf.l.wrap.b32 	%r2728, %r2722, %r2721, 25;
	mov.b64 	%rd1284, {%r2728, %r2727};
	xor.b64  	%rd1285, %rd1283, %rd1284;
	xor.b64  	%rd1286, %rd1267, %rd1011;
	xor.b64  	%rd1287, %rd1267, %rd1243;
	and.b64  	%rd1288, %rd1287, %rd1286;
	xor.b64  	%rd1289, %rd1288, %rd1267;
	add.s64 	%rd1290, %rd1279, %rd1289;
	add.s64 	%rd1291, %rd1290, %rd1285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2729,%dummy}, %rd1280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2730}, %rd1280;
	}
	shf.r.wrap.b32 	%r2731, %r2730, %r2729, 14;
	shf.r.wrap.b32 	%r2732, %r2729, %r2730, 14;
	mov.b64 	%rd1292, {%r2732, %r2731};
	shf.r.wrap.b32 	%r2733, %r2730, %r2729, 18;
	shf.r.wrap.b32 	%r2734, %r2729, %r2730, 18;
	mov.b64 	%rd1293, {%r2734, %r2733};
	xor.b64  	%rd1294, %rd1293, %rd1292;
	shf.l.wrap.b32 	%r2735, %r2729, %r2730, 23;
	shf.l.wrap.b32 	%r2736, %r2730, %r2729, 23;
	mov.b64 	%rd1295, {%r2736, %r2735};
	xor.b64  	%rd1296, %rd1294, %rd1295;
	xor.b64  	%rd1297, %rd1256, %rd1232;
	and.b64  	%rd1298, %rd1280, %rd1297;
	xor.b64  	%rd1299, %rd1298, %rd1232;
	add.s64 	%rd1300, %rd1063, %rd1000;
	add.s64 	%rd1301, %rd1300, %rd2715;
	add.s64 	%rd1302, %rd1301, %rd1299;
	add.s64 	%rd1303, %rd1302, %rd1296;
	add.s64 	%rd1304, %rd1303, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2737,%dummy}, %rd1291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2738}, %rd1291;
	}
	shf.r.wrap.b32 	%r2739, %r2738, %r2737, 28;
	shf.r.wrap.b32 	%r2740, %r2737, %r2738, 28;
	mov.b64 	%rd1305, {%r2740, %r2739};
	shf.l.wrap.b32 	%r2741, %r2737, %r2738, 30;
	shf.l.wrap.b32 	%r2742, %r2738, %r2737, 30;
	mov.b64 	%rd1306, {%r2742, %r2741};
	xor.b64  	%rd1307, %rd1306, %rd1305;
	shf.l.wrap.b32 	%r2743, %r2737, %r2738, 25;
	shf.l.wrap.b32 	%r2744, %r2738, %r2737, 25;
	mov.b64 	%rd1308, {%r2744, %r2743};
	xor.b64  	%rd1309, %rd1307, %rd1308;
	xor.b64  	%rd1310, %rd1291, %rd1243;
	xor.b64  	%rd1311, %rd1291, %rd1267;
	and.b64  	%rd1312, %rd1311, %rd1310;
	xor.b64  	%rd1313, %rd1312, %rd1291;
	add.s64 	%rd1314, %rd1303, %rd1313;
	add.s64 	%rd1315, %rd1314, %rd1309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2745,%dummy}, %rd1304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2746}, %rd1304;
	}
	shf.r.wrap.b32 	%r2747, %r2746, %r2745, 14;
	shf.r.wrap.b32 	%r2748, %r2745, %r2746, 14;
	mov.b64 	%rd1316, {%r2748, %r2747};
	shf.r.wrap.b32 	%r2749, %r2746, %r2745, 18;
	shf.r.wrap.b32 	%r2750, %r2745, %r2746, 18;
	mov.b64 	%rd1317, {%r2750, %r2749};
	xor.b64  	%rd1318, %rd1317, %rd1316;
	shf.l.wrap.b32 	%r2751, %r2745, %r2746, 23;
	shf.l.wrap.b32 	%r2752, %r2746, %r2745, 23;
	mov.b64 	%rd1319, {%r2752, %r2751};
	xor.b64  	%rd1320, %rd1318, %rd1319;
	xor.b64  	%rd1321, %rd1280, %rd1256;
	and.b64  	%rd1322, %rd1304, %rd1321;
	xor.b64  	%rd1323, %rd1322, %rd1256;
	add.s64 	%rd1324, %rd1232, %rd1076;
	add.s64 	%rd1325, %rd1324, %rd2716;
	add.s64 	%rd1326, %rd1325, %rd1323;
	add.s64 	%rd1327, %rd1326, %rd1320;
	add.s64 	%rd1328, %rd1327, %rd1243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2753,%dummy}, %rd1315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2754}, %rd1315;
	}
	shf.r.wrap.b32 	%r2755, %r2754, %r2753, 28;
	shf.r.wrap.b32 	%r2756, %r2753, %r2754, 28;
	mov.b64 	%rd1329, {%r2756, %r2755};
	shf.l.wrap.b32 	%r2757, %r2753, %r2754, 30;
	shf.l.wrap.b32 	%r2758, %r2754, %r2753, 30;
	mov.b64 	%rd1330, {%r2758, %r2757};
	xor.b64  	%rd1331, %rd1330, %rd1329;
	shf.l.wrap.b32 	%r2759, %r2753, %r2754, 25;
	shf.l.wrap.b32 	%r2760, %r2754, %r2753, 25;
	mov.b64 	%rd1332, {%r2760, %r2759};
	xor.b64  	%rd1333, %rd1331, %rd1332;
	xor.b64  	%rd1334, %rd1315, %rd1267;
	xor.b64  	%rd1335, %rd1315, %rd1291;
	and.b64  	%rd1336, %rd1335, %rd1334;
	xor.b64  	%rd1337, %rd1336, %rd1315;
	add.s64 	%rd1338, %rd1327, %rd1337;
	add.s64 	%rd1339, %rd1338, %rd1333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2761,%dummy}, %rd1328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2762}, %rd1328;
	}
	shf.r.wrap.b32 	%r2763, %r2762, %r2761, 14;
	shf.r.wrap.b32 	%r2764, %r2761, %r2762, 14;
	mov.b64 	%rd1340, {%r2764, %r2763};
	shf.r.wrap.b32 	%r2765, %r2762, %r2761, 18;
	shf.r.wrap.b32 	%r2766, %r2761, %r2762, 18;
	mov.b64 	%rd1341, {%r2766, %r2765};
	xor.b64  	%rd1342, %rd1341, %rd1340;
	shf.l.wrap.b32 	%r2767, %r2761, %r2762, 23;
	shf.l.wrap.b32 	%r2768, %r2762, %r2761, 23;
	mov.b64 	%rd1343, {%r2768, %r2767};
	xor.b64  	%rd1344, %rd1342, %rd1343;
	xor.b64  	%rd1345, %rd1304, %rd1280;
	and.b64  	%rd1346, %rd1328, %rd1345;
	xor.b64  	%rd1347, %rd1346, %rd1280;
	add.s64 	%rd1348, %rd1256, %rd1089;
	add.s64 	%rd1349, %rd1348, %rd2717;
	add.s64 	%rd1350, %rd1349, %rd1347;
	add.s64 	%rd1351, %rd1350, %rd1344;
	add.s64 	%rd1352, %rd1351, %rd1267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2769,%dummy}, %rd1339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2770}, %rd1339;
	}
	shf.r.wrap.b32 	%r2771, %r2770, %r2769, 28;
	shf.r.wrap.b32 	%r2772, %r2769, %r2770, 28;
	mov.b64 	%rd1353, {%r2772, %r2771};
	shf.l.wrap.b32 	%r2773, %r2769, %r2770, 30;
	shf.l.wrap.b32 	%r2774, %r2770, %r2769, 30;
	mov.b64 	%rd1354, {%r2774, %r2773};
	xor.b64  	%rd1355, %rd1354, %rd1353;
	shf.l.wrap.b32 	%r2775, %r2769, %r2770, 25;
	shf.l.wrap.b32 	%r2776, %r2770, %r2769, 25;
	mov.b64 	%rd1356, {%r2776, %r2775};
	xor.b64  	%rd1357, %rd1355, %rd1356;
	xor.b64  	%rd1358, %rd1339, %rd1291;
	xor.b64  	%rd1359, %rd1339, %rd1315;
	and.b64  	%rd1360, %rd1359, %rd1358;
	xor.b64  	%rd1361, %rd1360, %rd1339;
	add.s64 	%rd1362, %rd1351, %rd1361;
	add.s64 	%rd1363, %rd1362, %rd1357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2777,%dummy}, %rd1352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2778}, %rd1352;
	}
	shf.r.wrap.b32 	%r2779, %r2778, %r2777, 14;
	shf.r.wrap.b32 	%r2780, %r2777, %r2778, 14;
	mov.b64 	%rd1364, {%r2780, %r2779};
	shf.r.wrap.b32 	%r2781, %r2778, %r2777, 18;
	shf.r.wrap.b32 	%r2782, %r2777, %r2778, 18;
	mov.b64 	%rd1365, {%r2782, %r2781};
	xor.b64  	%rd1366, %rd1365, %rd1364;
	shf.l.wrap.b32 	%r2783, %r2777, %r2778, 23;
	shf.l.wrap.b32 	%r2784, %r2778, %r2777, 23;
	mov.b64 	%rd1367, {%r2784, %r2783};
	xor.b64  	%rd1368, %rd1366, %rd1367;
	xor.b64  	%rd1369, %rd1328, %rd1304;
	and.b64  	%rd1370, %rd1352, %rd1369;
	xor.b64  	%rd1371, %rd1370, %rd1304;
	add.s64 	%rd1372, %rd1280, %rd1102;
	add.s64 	%rd1373, %rd1372, %rd2718;
	add.s64 	%rd1374, %rd1373, %rd1371;
	add.s64 	%rd1375, %rd1374, %rd1368;
	add.s64 	%rd1376, %rd1375, %rd1291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2785,%dummy}, %rd1363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2786}, %rd1363;
	}
	shf.r.wrap.b32 	%r2787, %r2786, %r2785, 28;
	shf.r.wrap.b32 	%r2788, %r2785, %r2786, 28;
	mov.b64 	%rd1377, {%r2788, %r2787};
	shf.l.wrap.b32 	%r2789, %r2785, %r2786, 30;
	shf.l.wrap.b32 	%r2790, %r2786, %r2785, 30;
	mov.b64 	%rd1378, {%r2790, %r2789};
	xor.b64  	%rd1379, %rd1378, %rd1377;
	shf.l.wrap.b32 	%r2791, %r2785, %r2786, 25;
	shf.l.wrap.b32 	%r2792, %r2786, %r2785, 25;
	mov.b64 	%rd1380, {%r2792, %r2791};
	xor.b64  	%rd1381, %rd1379, %rd1380;
	xor.b64  	%rd1382, %rd1363, %rd1315;
	xor.b64  	%rd1383, %rd1363, %rd1339;
	and.b64  	%rd1384, %rd1383, %rd1382;
	xor.b64  	%rd1385, %rd1384, %rd1363;
	add.s64 	%rd1386, %rd1375, %rd1385;
	add.s64 	%rd1387, %rd1386, %rd1381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2793,%dummy}, %rd1376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2794}, %rd1376;
	}
	shf.r.wrap.b32 	%r2795, %r2794, %r2793, 14;
	shf.r.wrap.b32 	%r2796, %r2793, %r2794, 14;
	mov.b64 	%rd1388, {%r2796, %r2795};
	shf.r.wrap.b32 	%r2797, %r2794, %r2793, 18;
	shf.r.wrap.b32 	%r2798, %r2793, %r2794, 18;
	mov.b64 	%rd1389, {%r2798, %r2797};
	xor.b64  	%rd1390, %rd1389, %rd1388;
	shf.l.wrap.b32 	%r2799, %r2793, %r2794, 23;
	shf.l.wrap.b32 	%r2800, %r2794, %r2793, 23;
	mov.b64 	%rd1391, {%r2800, %r2799};
	xor.b64  	%rd1392, %rd1390, %rd1391;
	xor.b64  	%rd1393, %rd1352, %rd1328;
	and.b64  	%rd1394, %rd1376, %rd1393;
	xor.b64  	%rd1395, %rd1394, %rd1328;
	add.s64 	%rd1396, %rd1304, %rd1115;
	add.s64 	%rd1397, %rd1396, %rd2719;
	add.s64 	%rd1398, %rd1397, %rd1395;
	add.s64 	%rd1399, %rd1398, %rd1392;
	add.s64 	%rd1400, %rd1399, %rd1315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2801,%dummy}, %rd1387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2802}, %rd1387;
	}
	shf.r.wrap.b32 	%r2803, %r2802, %r2801, 28;
	shf.r.wrap.b32 	%r2804, %r2801, %r2802, 28;
	mov.b64 	%rd1401, {%r2804, %r2803};
	shf.l.wrap.b32 	%r2805, %r2801, %r2802, 30;
	shf.l.wrap.b32 	%r2806, %r2802, %r2801, 30;
	mov.b64 	%rd1402, {%r2806, %r2805};
	xor.b64  	%rd1403, %rd1402, %rd1401;
	shf.l.wrap.b32 	%r2807, %r2801, %r2802, 25;
	shf.l.wrap.b32 	%r2808, %r2802, %r2801, 25;
	mov.b64 	%rd1404, {%r2808, %r2807};
	xor.b64  	%rd1405, %rd1403, %rd1404;
	xor.b64  	%rd1406, %rd1387, %rd1339;
	xor.b64  	%rd1407, %rd1387, %rd1363;
	and.b64  	%rd1408, %rd1407, %rd1406;
	xor.b64  	%rd1409, %rd1408, %rd1387;
	add.s64 	%rd1410, %rd1399, %rd1409;
	add.s64 	%rd1411, %rd1410, %rd1405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2809,%dummy}, %rd1400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2810}, %rd1400;
	}
	shf.r.wrap.b32 	%r2811, %r2810, %r2809, 14;
	shf.r.wrap.b32 	%r2812, %r2809, %r2810, 14;
	mov.b64 	%rd1412, {%r2812, %r2811};
	shf.r.wrap.b32 	%r2813, %r2810, %r2809, 18;
	shf.r.wrap.b32 	%r2814, %r2809, %r2810, 18;
	mov.b64 	%rd1413, {%r2814, %r2813};
	xor.b64  	%rd1414, %rd1413, %rd1412;
	shf.l.wrap.b32 	%r2815, %r2809, %r2810, 23;
	shf.l.wrap.b32 	%r2816, %r2810, %r2809, 23;
	mov.b64 	%rd1415, {%r2816, %r2815};
	xor.b64  	%rd1416, %rd1414, %rd1415;
	xor.b64  	%rd1417, %rd1376, %rd1352;
	and.b64  	%rd1418, %rd1400, %rd1417;
	xor.b64  	%rd1419, %rd1418, %rd1352;
	add.s64 	%rd1420, %rd1328, %rd1128;
	add.s64 	%rd1421, %rd1420, %rd2720;
	add.s64 	%rd1422, %rd1421, %rd1419;
	add.s64 	%rd1423, %rd1422, %rd1416;
	add.s64 	%rd1424, %rd1423, %rd1339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2817,%dummy}, %rd1411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2818}, %rd1411;
	}
	shf.r.wrap.b32 	%r2819, %r2818, %r2817, 28;
	shf.r.wrap.b32 	%r2820, %r2817, %r2818, 28;
	mov.b64 	%rd1425, {%r2820, %r2819};
	shf.l.wrap.b32 	%r2821, %r2817, %r2818, 30;
	shf.l.wrap.b32 	%r2822, %r2818, %r2817, 30;
	mov.b64 	%rd1426, {%r2822, %r2821};
	xor.b64  	%rd1427, %rd1426, %rd1425;
	shf.l.wrap.b32 	%r2823, %r2817, %r2818, 25;
	shf.l.wrap.b32 	%r2824, %r2818, %r2817, 25;
	mov.b64 	%rd1428, {%r2824, %r2823};
	xor.b64  	%rd1429, %rd1427, %rd1428;
	xor.b64  	%rd1430, %rd1411, %rd1363;
	xor.b64  	%rd1431, %rd1411, %rd1387;
	and.b64  	%rd1432, %rd1431, %rd1430;
	xor.b64  	%rd1433, %rd1432, %rd1411;
	add.s64 	%rd1434, %rd1423, %rd1433;
	add.s64 	%rd1435, %rd1434, %rd1429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2825,%dummy}, %rd1424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2826}, %rd1424;
	}
	shf.r.wrap.b32 	%r2827, %r2826, %r2825, 14;
	shf.r.wrap.b32 	%r2828, %r2825, %r2826, 14;
	mov.b64 	%rd1436, {%r2828, %r2827};
	shf.r.wrap.b32 	%r2829, %r2826, %r2825, 18;
	shf.r.wrap.b32 	%r2830, %r2825, %r2826, 18;
	mov.b64 	%rd1437, {%r2830, %r2829};
	xor.b64  	%rd1438, %rd1437, %rd1436;
	shf.l.wrap.b32 	%r2831, %r2825, %r2826, 23;
	shf.l.wrap.b32 	%r2832, %r2826, %r2825, 23;
	mov.b64 	%rd1439, {%r2832, %r2831};
	xor.b64  	%rd1440, %rd1438, %rd1439;
	xor.b64  	%rd1441, %rd1400, %rd1376;
	and.b64  	%rd1442, %rd1424, %rd1441;
	xor.b64  	%rd1443, %rd1442, %rd1376;
	add.s64 	%rd1444, %rd1352, %rd1141;
	add.s64 	%rd1445, %rd1444, %rd2721;
	add.s64 	%rd1446, %rd1445, %rd1443;
	add.s64 	%rd1447, %rd1446, %rd1440;
	add.s64 	%rd1448, %rd1447, %rd1363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2833,%dummy}, %rd1435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2834}, %rd1435;
	}
	shf.r.wrap.b32 	%r2835, %r2834, %r2833, 28;
	shf.r.wrap.b32 	%r2836, %r2833, %r2834, 28;
	mov.b64 	%rd1449, {%r2836, %r2835};
	shf.l.wrap.b32 	%r2837, %r2833, %r2834, 30;
	shf.l.wrap.b32 	%r2838, %r2834, %r2833, 30;
	mov.b64 	%rd1450, {%r2838, %r2837};
	xor.b64  	%rd1451, %rd1450, %rd1449;
	shf.l.wrap.b32 	%r2839, %r2833, %r2834, 25;
	shf.l.wrap.b32 	%r2840, %r2834, %r2833, 25;
	mov.b64 	%rd1452, {%r2840, %r2839};
	xor.b64  	%rd1453, %rd1451, %rd1452;
	xor.b64  	%rd1454, %rd1435, %rd1387;
	xor.b64  	%rd1455, %rd1435, %rd1411;
	and.b64  	%rd1456, %rd1455, %rd1454;
	xor.b64  	%rd1457, %rd1456, %rd1435;
	add.s64 	%rd1458, %rd1447, %rd1457;
	add.s64 	%rd1459, %rd1458, %rd1453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2841,%dummy}, %rd1448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2842}, %rd1448;
	}
	shf.r.wrap.b32 	%r2843, %r2842, %r2841, 14;
	shf.r.wrap.b32 	%r2844, %r2841, %r2842, 14;
	mov.b64 	%rd1460, {%r2844, %r2843};
	shf.r.wrap.b32 	%r2845, %r2842, %r2841, 18;
	shf.r.wrap.b32 	%r2846, %r2841, %r2842, 18;
	mov.b64 	%rd1461, {%r2846, %r2845};
	xor.b64  	%rd1462, %rd1461, %rd1460;
	shf.l.wrap.b32 	%r2847, %r2841, %r2842, 23;
	shf.l.wrap.b32 	%r2848, %r2842, %r2841, 23;
	mov.b64 	%rd1463, {%r2848, %r2847};
	xor.b64  	%rd1464, %rd1462, %rd1463;
	xor.b64  	%rd1465, %rd1424, %rd1400;
	and.b64  	%rd1466, %rd1448, %rd1465;
	xor.b64  	%rd1467, %rd1466, %rd1400;
	add.s64 	%rd1468, %rd1376, %rd1154;
	add.s64 	%rd1469, %rd1468, %rd2722;
	add.s64 	%rd1470, %rd1469, %rd1467;
	add.s64 	%rd1471, %rd1470, %rd1464;
	add.s64 	%rd1472, %rd1471, %rd1387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2849,%dummy}, %rd1459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2850}, %rd1459;
	}
	shf.r.wrap.b32 	%r2851, %r2850, %r2849, 28;
	shf.r.wrap.b32 	%r2852, %r2849, %r2850, 28;
	mov.b64 	%rd1473, {%r2852, %r2851};
	shf.l.wrap.b32 	%r2853, %r2849, %r2850, 30;
	shf.l.wrap.b32 	%r2854, %r2850, %r2849, 30;
	mov.b64 	%rd1474, {%r2854, %r2853};
	xor.b64  	%rd1475, %rd1474, %rd1473;
	shf.l.wrap.b32 	%r2855, %r2849, %r2850, 25;
	shf.l.wrap.b32 	%r2856, %r2850, %r2849, 25;
	mov.b64 	%rd1476, {%r2856, %r2855};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	xor.b64  	%rd1478, %rd1459, %rd1411;
	xor.b64  	%rd1479, %rd1459, %rd1435;
	and.b64  	%rd1480, %rd1479, %rd1478;
	xor.b64  	%rd1481, %rd1480, %rd1459;
	add.s64 	%rd1482, %rd1471, %rd1481;
	add.s64 	%rd1483, %rd1482, %rd1477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2857,%dummy}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2858}, %rd1472;
	}
	shf.r.wrap.b32 	%r2859, %r2858, %r2857, 14;
	shf.r.wrap.b32 	%r2860, %r2857, %r2858, 14;
	mov.b64 	%rd1484, {%r2860, %r2859};
	shf.r.wrap.b32 	%r2861, %r2858, %r2857, 18;
	shf.r.wrap.b32 	%r2862, %r2857, %r2858, 18;
	mov.b64 	%rd1485, {%r2862, %r2861};
	xor.b64  	%rd1486, %rd1485, %rd1484;
	shf.l.wrap.b32 	%r2863, %r2857, %r2858, 23;
	shf.l.wrap.b32 	%r2864, %r2858, %r2857, 23;
	mov.b64 	%rd1487, {%r2864, %r2863};
	xor.b64  	%rd1488, %rd1486, %rd1487;
	xor.b64  	%rd1489, %rd1448, %rd1424;
	and.b64  	%rd1490, %rd1472, %rd1489;
	xor.b64  	%rd1491, %rd1490, %rd1424;
	add.s64 	%rd1492, %rd1400, %rd1167;
	add.s64 	%rd1493, %rd1492, %rd2723;
	add.s64 	%rd1494, %rd1493, %rd1491;
	add.s64 	%rd1495, %rd1494, %rd1488;
	add.s64 	%rd1496, %rd1495, %rd1411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2865,%dummy}, %rd1483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2866}, %rd1483;
	}
	shf.r.wrap.b32 	%r2867, %r2866, %r2865, 28;
	shf.r.wrap.b32 	%r2868, %r2865, %r2866, 28;
	mov.b64 	%rd1497, {%r2868, %r2867};
	shf.l.wrap.b32 	%r2869, %r2865, %r2866, 30;
	shf.l.wrap.b32 	%r2870, %r2866, %r2865, 30;
	mov.b64 	%rd1498, {%r2870, %r2869};
	xor.b64  	%rd1499, %rd1498, %rd1497;
	shf.l.wrap.b32 	%r2871, %r2865, %r2866, 25;
	shf.l.wrap.b32 	%r2872, %r2866, %r2865, 25;
	mov.b64 	%rd1500, {%r2872, %r2871};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	xor.b64  	%rd1502, %rd1483, %rd1435;
	xor.b64  	%rd1503, %rd1483, %rd1459;
	and.b64  	%rd1504, %rd1503, %rd1502;
	xor.b64  	%rd1505, %rd1504, %rd1483;
	add.s64 	%rd1506, %rd1495, %rd1505;
	add.s64 	%rd1507, %rd1506, %rd1501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2873,%dummy}, %rd1496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2874}, %rd1496;
	}
	shf.r.wrap.b32 	%r2875, %r2874, %r2873, 14;
	shf.r.wrap.b32 	%r2876, %r2873, %r2874, 14;
	mov.b64 	%rd1508, {%r2876, %r2875};
	shf.r.wrap.b32 	%r2877, %r2874, %r2873, 18;
	shf.r.wrap.b32 	%r2878, %r2873, %r2874, 18;
	mov.b64 	%rd1509, {%r2878, %r2877};
	xor.b64  	%rd1510, %rd1509, %rd1508;
	shf.l.wrap.b32 	%r2879, %r2873, %r2874, 23;
	shf.l.wrap.b32 	%r2880, %r2874, %r2873, 23;
	mov.b64 	%rd1511, {%r2880, %r2879};
	xor.b64  	%rd1512, %rd1510, %rd1511;
	xor.b64  	%rd1513, %rd1472, %rd1448;
	and.b64  	%rd1514, %rd1496, %rd1513;
	xor.b64  	%rd1515, %rd1514, %rd1448;
	add.s64 	%rd1516, %rd1424, %rd1180;
	add.s64 	%rd1517, %rd1516, %rd2724;
	add.s64 	%rd1518, %rd1517, %rd1515;
	add.s64 	%rd1519, %rd1518, %rd1512;
	add.s64 	%rd1520, %rd1519, %rd1435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2881,%dummy}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2882}, %rd1507;
	}
	shf.r.wrap.b32 	%r2883, %r2882, %r2881, 28;
	shf.r.wrap.b32 	%r2884, %r2881, %r2882, 28;
	mov.b64 	%rd1521, {%r2884, %r2883};
	shf.l.wrap.b32 	%r2885, %r2881, %r2882, 30;
	shf.l.wrap.b32 	%r2886, %r2882, %r2881, 30;
	mov.b64 	%rd1522, {%r2886, %r2885};
	xor.b64  	%rd1523, %rd1522, %rd1521;
	shf.l.wrap.b32 	%r2887, %r2881, %r2882, 25;
	shf.l.wrap.b32 	%r2888, %r2882, %r2881, 25;
	mov.b64 	%rd1524, {%r2888, %r2887};
	xor.b64  	%rd1525, %rd1523, %rd1524;
	xor.b64  	%rd1526, %rd1507, %rd1459;
	xor.b64  	%rd1527, %rd1507, %rd1483;
	and.b64  	%rd1528, %rd1527, %rd1526;
	xor.b64  	%rd1529, %rd1528, %rd1507;
	add.s64 	%rd1530, %rd1519, %rd1529;
	add.s64 	%rd1531, %rd1530, %rd1525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2889,%dummy}, %rd1520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2890}, %rd1520;
	}
	shf.r.wrap.b32 	%r2891, %r2890, %r2889, 14;
	shf.r.wrap.b32 	%r2892, %r2889, %r2890, 14;
	mov.b64 	%rd1532, {%r2892, %r2891};
	shf.r.wrap.b32 	%r2893, %r2890, %r2889, 18;
	shf.r.wrap.b32 	%r2894, %r2889, %r2890, 18;
	mov.b64 	%rd1533, {%r2894, %r2893};
	xor.b64  	%rd1534, %rd1533, %rd1532;
	shf.l.wrap.b32 	%r2895, %r2889, %r2890, 23;
	shf.l.wrap.b32 	%r2896, %r2890, %r2889, 23;
	mov.b64 	%rd1535, {%r2896, %r2895};
	xor.b64  	%rd1536, %rd1534, %rd1535;
	xor.b64  	%rd1537, %rd1496, %rd1472;
	and.b64  	%rd1538, %rd1520, %rd1537;
	xor.b64  	%rd1539, %rd1538, %rd1472;
	add.s64 	%rd1540, %rd1448, %rd1193;
	add.s64 	%rd1541, %rd1540, %rd2725;
	add.s64 	%rd1542, %rd1541, %rd1539;
	add.s64 	%rd1543, %rd1542, %rd1536;
	add.s64 	%rd1544, %rd1543, %rd1459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2897,%dummy}, %rd1531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2898}, %rd1531;
	}
	shf.r.wrap.b32 	%r2899, %r2898, %r2897, 28;
	shf.r.wrap.b32 	%r2900, %r2897, %r2898, 28;
	mov.b64 	%rd1545, {%r2900, %r2899};
	shf.l.wrap.b32 	%r2901, %r2897, %r2898, 30;
	shf.l.wrap.b32 	%r2902, %r2898, %r2897, 30;
	mov.b64 	%rd1546, {%r2902, %r2901};
	xor.b64  	%rd1547, %rd1546, %rd1545;
	shf.l.wrap.b32 	%r2903, %r2897, %r2898, 25;
	shf.l.wrap.b32 	%r2904, %r2898, %r2897, 25;
	mov.b64 	%rd1548, {%r2904, %r2903};
	xor.b64  	%rd1549, %rd1547, %rd1548;
	xor.b64  	%rd1550, %rd1531, %rd1483;
	xor.b64  	%rd1551, %rd1531, %rd1507;
	and.b64  	%rd1552, %rd1551, %rd1550;
	xor.b64  	%rd1553, %rd1552, %rd1531;
	add.s64 	%rd1554, %rd1543, %rd1553;
	add.s64 	%rd1555, %rd1554, %rd1549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2905,%dummy}, %rd1544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2906}, %rd1544;
	}
	shf.r.wrap.b32 	%r2907, %r2906, %r2905, 14;
	shf.r.wrap.b32 	%r2908, %r2905, %r2906, 14;
	mov.b64 	%rd1556, {%r2908, %r2907};
	shf.r.wrap.b32 	%r2909, %r2906, %r2905, 18;
	shf.r.wrap.b32 	%r2910, %r2905, %r2906, 18;
	mov.b64 	%rd1557, {%r2910, %r2909};
	xor.b64  	%rd1558, %rd1557, %rd1556;
	shf.l.wrap.b32 	%r2911, %r2905, %r2906, 23;
	shf.l.wrap.b32 	%r2912, %r2906, %r2905, 23;
	mov.b64 	%rd1559, {%r2912, %r2911};
	xor.b64  	%rd1560, %rd1558, %rd1559;
	xor.b64  	%rd1561, %rd1520, %rd1496;
	and.b64  	%rd1562, %rd1544, %rd1561;
	xor.b64  	%rd1563, %rd1562, %rd1496;
	add.s64 	%rd1564, %rd1472, %rd1206;
	add.s64 	%rd1565, %rd1564, %rd2726;
	add.s64 	%rd1566, %rd1565, %rd1563;
	add.s64 	%rd1567, %rd1566, %rd1560;
	add.s64 	%rd1568, %rd1567, %rd1483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2913,%dummy}, %rd1555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2914}, %rd1555;
	}
	shf.r.wrap.b32 	%r2915, %r2914, %r2913, 28;
	shf.r.wrap.b32 	%r2916, %r2913, %r2914, 28;
	mov.b64 	%rd1569, {%r2916, %r2915};
	shf.l.wrap.b32 	%r2917, %r2913, %r2914, 30;
	shf.l.wrap.b32 	%r2918, %r2914, %r2913, 30;
	mov.b64 	%rd1570, {%r2918, %r2917};
	xor.b64  	%rd1571, %rd1570, %rd1569;
	shf.l.wrap.b32 	%r2919, %r2913, %r2914, 25;
	shf.l.wrap.b32 	%r2920, %r2914, %r2913, 25;
	mov.b64 	%rd1572, {%r2920, %r2919};
	xor.b64  	%rd1573, %rd1571, %rd1572;
	xor.b64  	%rd1574, %rd1555, %rd1507;
	xor.b64  	%rd1575, %rd1555, %rd1531;
	and.b64  	%rd1576, %rd1575, %rd1574;
	xor.b64  	%rd1577, %rd1576, %rd1555;
	add.s64 	%rd1578, %rd1567, %rd1577;
	add.s64 	%rd1579, %rd1578, %rd1573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2921,%dummy}, %rd1568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2922}, %rd1568;
	}
	shf.r.wrap.b32 	%r2923, %r2922, %r2921, 14;
	shf.r.wrap.b32 	%r2924, %r2921, %r2922, 14;
	mov.b64 	%rd1580, {%r2924, %r2923};
	shf.r.wrap.b32 	%r2925, %r2922, %r2921, 18;
	shf.r.wrap.b32 	%r2926, %r2921, %r2922, 18;
	mov.b64 	%rd1581, {%r2926, %r2925};
	xor.b64  	%rd1582, %rd1581, %rd1580;
	shf.l.wrap.b32 	%r2927, %r2921, %r2922, 23;
	shf.l.wrap.b32 	%r2928, %r2922, %r2921, 23;
	mov.b64 	%rd1583, {%r2928, %r2927};
	xor.b64  	%rd1584, %rd1582, %rd1583;
	xor.b64  	%rd1585, %rd1544, %rd1520;
	and.b64  	%rd1586, %rd1568, %rd1585;
	xor.b64  	%rd1587, %rd1586, %rd1520;
	add.s64 	%rd1588, %rd1496, %rd1219;
	add.s64 	%rd1589, %rd1588, %rd2727;
	add.s64 	%rd1590, %rd1589, %rd1587;
	add.s64 	%rd1591, %rd1590, %rd1584;
	add.s64 	%rd1592, %rd1591, %rd1507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2929,%dummy}, %rd1579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2930}, %rd1579;
	}
	shf.r.wrap.b32 	%r2931, %r2930, %r2929, 28;
	shf.r.wrap.b32 	%r2932, %r2929, %r2930, 28;
	mov.b64 	%rd1593, {%r2932, %r2931};
	shf.l.wrap.b32 	%r2933, %r2929, %r2930, 30;
	shf.l.wrap.b32 	%r2934, %r2930, %r2929, 30;
	mov.b64 	%rd1594, {%r2934, %r2933};
	xor.b64  	%rd1595, %rd1594, %rd1593;
	shf.l.wrap.b32 	%r2935, %r2929, %r2930, 25;
	shf.l.wrap.b32 	%r2936, %r2930, %r2929, 25;
	mov.b64 	%rd1596, {%r2936, %r2935};
	xor.b64  	%rd1597, %rd1595, %rd1596;
	xor.b64  	%rd1598, %rd1579, %rd1531;
	xor.b64  	%rd1599, %rd1579, %rd1555;
	and.b64  	%rd1600, %rd1599, %rd1598;
	xor.b64  	%rd1601, %rd1600, %rd1579;
	add.s64 	%rd1602, %rd1591, %rd1601;
	add.s64 	%rd1603, %rd1602, %rd1597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2937,%dummy}, %rd1206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2938}, %rd1206;
	}
	shf.r.wrap.b32 	%r2939, %r2938, %r2937, 19;
	shf.r.wrap.b32 	%r2940, %r2937, %r2938, 19;
	mov.b64 	%rd1604, {%r2940, %r2939};
	shf.l.wrap.b32 	%r2941, %r2937, %r2938, 3;
	shf.l.wrap.b32 	%r2942, %r2938, %r2937, 3;
	mov.b64 	%rd1605, {%r2942, %r2941};
	shr.u64 	%rd1606, %rd1206, 6;
	xor.b64  	%rd1607, %rd1604, %rd1606;
	xor.b64  	%rd1608, %rd1607, %rd1605;
	shf.r.wrap.b32 	%r2943, %r2552, %r2551, 1;
	shf.r.wrap.b32 	%r2944, %r2551, %r2552, 1;
	mov.b64 	%rd1609, {%r2944, %r2943};
	shf.r.wrap.b32 	%r2945, %r2552, %r2551, 8;
	shf.r.wrap.b32 	%r2946, %r2551, %r2552, 8;
	mov.b64 	%rd1610, {%r2946, %r2945};
	shr.u64 	%rd1611, %rd1037, 7;
	xor.b64  	%rd1612, %rd1609, %rd1611;
	xor.b64  	%rd1613, %rd1612, %rd1610;
	add.s64 	%rd1614, %rd1024, %rd1141;
	add.s64 	%rd1615, %rd1614, %rd1608;
	add.s64 	%rd1616, %rd1615, %rd1613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2947,%dummy}, %rd1219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2948}, %rd1219;
	}
	shf.r.wrap.b32 	%r2949, %r2948, %r2947, 19;
	shf.r.wrap.b32 	%r2950, %r2947, %r2948, 19;
	mov.b64 	%rd1617, {%r2950, %r2949};
	shf.l.wrap.b32 	%r2951, %r2947, %r2948, 3;
	shf.l.wrap.b32 	%r2952, %r2948, %r2947, 3;
	mov.b64 	%rd1618, {%r2952, %r2951};
	shr.u64 	%rd1619, %rd1219, 6;
	xor.b64  	%rd1620, %rd1617, %rd1619;
	xor.b64  	%rd1621, %rd1620, %rd1618;
	shf.r.wrap.b32 	%r2953, %r2562, %r2561, 1;
	shf.r.wrap.b32 	%r2954, %r2561, %r2562, 1;
	mov.b64 	%rd1622, {%r2954, %r2953};
	shf.r.wrap.b32 	%r2955, %r2562, %r2561, 8;
	shf.r.wrap.b32 	%r2956, %r2561, %r2562, 8;
	mov.b64 	%rd1623, {%r2956, %r2955};
	shr.u64 	%rd1624, %rd1050, 7;
	xor.b64  	%rd1625, %rd1622, %rd1624;
	xor.b64  	%rd1626, %rd1625, %rd1623;
	add.s64 	%rd1627, %rd1037, %rd1154;
	add.s64 	%rd1628, %rd1627, %rd1621;
	add.s64 	%rd1629, %rd1628, %rd1626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2957,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2958}, %rd1616;
	}
	shf.r.wrap.b32 	%r2959, %r2958, %r2957, 19;
	shf.r.wrap.b32 	%r2960, %r2957, %r2958, 19;
	mov.b64 	%rd1630, {%r2960, %r2959};
	shf.l.wrap.b32 	%r2961, %r2957, %r2958, 3;
	shf.l.wrap.b32 	%r2962, %r2958, %r2957, 3;
	mov.b64 	%rd1631, {%r2962, %r2961};
	shr.u64 	%rd1632, %rd1616, 6;
	xor.b64  	%rd1633, %rd1630, %rd1632;
	xor.b64  	%rd1634, %rd1633, %rd1631;
	shf.r.wrap.b32 	%r2963, %r2572, %r2571, 1;
	shf.r.wrap.b32 	%r2964, %r2571, %r2572, 1;
	mov.b64 	%rd1635, {%r2964, %r2963};
	shf.r.wrap.b32 	%r2965, %r2572, %r2571, 8;
	shf.r.wrap.b32 	%r2966, %r2571, %r2572, 8;
	mov.b64 	%rd1636, {%r2966, %r2965};
	shr.u64 	%rd1637, %rd1063, 7;
	xor.b64  	%rd1638, %rd1635, %rd1637;
	xor.b64  	%rd1639, %rd1638, %rd1636;
	add.s64 	%rd1640, %rd1050, %rd1167;
	add.s64 	%rd1641, %rd1640, %rd1634;
	add.s64 	%rd1642, %rd1641, %rd1639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2967,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2968}, %rd1629;
	}
	shf.r.wrap.b32 	%r2969, %r2968, %r2967, 19;
	shf.r.wrap.b32 	%r2970, %r2967, %r2968, 19;
	mov.b64 	%rd1643, {%r2970, %r2969};
	shf.l.wrap.b32 	%r2971, %r2967, %r2968, 3;
	shf.l.wrap.b32 	%r2972, %r2968, %r2967, 3;
	mov.b64 	%rd1644, {%r2972, %r2971};
	shr.u64 	%rd1645, %rd1629, 6;
	xor.b64  	%rd1646, %rd1643, %rd1645;
	xor.b64  	%rd1647, %rd1646, %rd1644;
	shf.r.wrap.b32 	%r2973, %r2582, %r2581, 1;
	shf.r.wrap.b32 	%r2974, %r2581, %r2582, 1;
	mov.b64 	%rd1648, {%r2974, %r2973};
	shf.r.wrap.b32 	%r2975, %r2582, %r2581, 8;
	shf.r.wrap.b32 	%r2976, %r2581, %r2582, 8;
	mov.b64 	%rd1649, {%r2976, %r2975};
	shr.u64 	%rd1650, %rd1076, 7;
	xor.b64  	%rd1651, %rd1648, %rd1650;
	xor.b64  	%rd1652, %rd1651, %rd1649;
	add.s64 	%rd1653, %rd1063, %rd1180;
	add.s64 	%rd1654, %rd1653, %rd1647;
	add.s64 	%rd1655, %rd1654, %rd1652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2977,%dummy}, %rd1642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2978}, %rd1642;
	}
	shf.r.wrap.b32 	%r2979, %r2978, %r2977, 19;
	shf.r.wrap.b32 	%r2980, %r2977, %r2978, 19;
	mov.b64 	%rd1656, {%r2980, %r2979};
	shf.l.wrap.b32 	%r2981, %r2977, %r2978, 3;
	shf.l.wrap.b32 	%r2982, %r2978, %r2977, 3;
	mov.b64 	%rd1657, {%r2982, %r2981};
	shr.u64 	%rd1658, %rd1642, 6;
	xor.b64  	%rd1659, %rd1656, %rd1658;
	xor.b64  	%rd1660, %rd1659, %rd1657;
	shf.r.wrap.b32 	%r2983, %r2592, %r2591, 1;
	shf.r.wrap.b32 	%r2984, %r2591, %r2592, 1;
	mov.b64 	%rd1661, {%r2984, %r2983};
	shf.r.wrap.b32 	%r2985, %r2592, %r2591, 8;
	shf.r.wrap.b32 	%r2986, %r2591, %r2592, 8;
	mov.b64 	%rd1662, {%r2986, %r2985};
	shr.u64 	%rd1663, %rd1089, 7;
	xor.b64  	%rd1664, %rd1661, %rd1663;
	xor.b64  	%rd1665, %rd1664, %rd1662;
	add.s64 	%rd1666, %rd1076, %rd1193;
	add.s64 	%rd1667, %rd1666, %rd1660;
	add.s64 	%rd1668, %rd1667, %rd1665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2987,%dummy}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2988}, %rd1655;
	}
	shf.r.wrap.b32 	%r2989, %r2988, %r2987, 19;
	shf.r.wrap.b32 	%r2990, %r2987, %r2988, 19;
	mov.b64 	%rd1669, {%r2990, %r2989};
	shf.l.wrap.b32 	%r2991, %r2987, %r2988, 3;
	shf.l.wrap.b32 	%r2992, %r2988, %r2987, 3;
	mov.b64 	%rd1670, {%r2992, %r2991};
	shr.u64 	%rd1671, %rd1655, 6;
	xor.b64  	%rd1672, %rd1669, %rd1671;
	xor.b64  	%rd1673, %rd1672, %rd1670;
	shf.r.wrap.b32 	%r2993, %r2602, %r2601, 1;
	shf.r.wrap.b32 	%r2994, %r2601, %r2602, 1;
	mov.b64 	%rd1674, {%r2994, %r2993};
	shf.r.wrap.b32 	%r2995, %r2602, %r2601, 8;
	shf.r.wrap.b32 	%r2996, %r2601, %r2602, 8;
	mov.b64 	%rd1675, {%r2996, %r2995};
	shr.u64 	%rd1676, %rd1102, 7;
	xor.b64  	%rd1677, %rd1674, %rd1676;
	xor.b64  	%rd1678, %rd1677, %rd1675;
	add.s64 	%rd1679, %rd1089, %rd1206;
	add.s64 	%rd1680, %rd1679, %rd1673;
	add.s64 	%rd1681, %rd1680, %rd1678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2997,%dummy}, %rd1668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2998}, %rd1668;
	}
	shf.r.wrap.b32 	%r2999, %r2998, %r2997, 19;
	shf.r.wrap.b32 	%r3000, %r2997, %r2998, 19;
	mov.b64 	%rd1682, {%r3000, %r2999};
	shf.l.wrap.b32 	%r3001, %r2997, %r2998, 3;
	shf.l.wrap.b32 	%r3002, %r2998, %r2997, 3;
	mov.b64 	%rd1683, {%r3002, %r3001};
	shr.u64 	%rd1684, %rd1668, 6;
	xor.b64  	%rd1685, %rd1682, %rd1684;
	xor.b64  	%rd1686, %rd1685, %rd1683;
	shf.r.wrap.b32 	%r3003, %r2612, %r2611, 1;
	shf.r.wrap.b32 	%r3004, %r2611, %r2612, 1;
	mov.b64 	%rd1687, {%r3004, %r3003};
	shf.r.wrap.b32 	%r3005, %r2612, %r2611, 8;
	shf.r.wrap.b32 	%r3006, %r2611, %r2612, 8;
	mov.b64 	%rd1688, {%r3006, %r3005};
	shr.u64 	%rd1689, %rd1115, 7;
	xor.b64  	%rd1690, %rd1687, %rd1689;
	xor.b64  	%rd1691, %rd1690, %rd1688;
	add.s64 	%rd1692, %rd1102, %rd1219;
	add.s64 	%rd1693, %rd1692, %rd1686;
	add.s64 	%rd1694, %rd1693, %rd1691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3007,%dummy}, %rd1681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3008}, %rd1681;
	}
	shf.r.wrap.b32 	%r3009, %r3008, %r3007, 19;
	shf.r.wrap.b32 	%r3010, %r3007, %r3008, 19;
	mov.b64 	%rd1695, {%r3010, %r3009};
	shf.l.wrap.b32 	%r3011, %r3007, %r3008, 3;
	shf.l.wrap.b32 	%r3012, %r3008, %r3007, 3;
	mov.b64 	%rd1696, {%r3012, %r3011};
	shr.u64 	%rd1697, %rd1681, 6;
	xor.b64  	%rd1698, %rd1695, %rd1697;
	xor.b64  	%rd1699, %rd1698, %rd1696;
	shf.r.wrap.b32 	%r3013, %r2622, %r2621, 1;
	shf.r.wrap.b32 	%r3014, %r2621, %r2622, 1;
	mov.b64 	%rd1700, {%r3014, %r3013};
	shf.r.wrap.b32 	%r3015, %r2622, %r2621, 8;
	shf.r.wrap.b32 	%r3016, %r2621, %r2622, 8;
	mov.b64 	%rd1701, {%r3016, %r3015};
	shr.u64 	%rd1702, %rd1128, 7;
	xor.b64  	%rd1703, %rd1700, %rd1702;
	xor.b64  	%rd1704, %rd1703, %rd1701;
	add.s64 	%rd1705, %rd1616, %rd1115;
	add.s64 	%rd1706, %rd1705, %rd1699;
	add.s64 	%rd1707, %rd1706, %rd1704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3017,%dummy}, %rd1694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3018}, %rd1694;
	}
	shf.r.wrap.b32 	%r3019, %r3018, %r3017, 19;
	shf.r.wrap.b32 	%r3020, %r3017, %r3018, 19;
	mov.b64 	%rd1708, {%r3020, %r3019};
	shf.l.wrap.b32 	%r3021, %r3017, %r3018, 3;
	shf.l.wrap.b32 	%r3022, %r3018, %r3017, 3;
	mov.b64 	%rd1709, {%r3022, %r3021};
	shr.u64 	%rd1710, %rd1694, 6;
	xor.b64  	%rd1711, %rd1708, %rd1710;
	xor.b64  	%rd1712, %rd1711, %rd1709;
	shf.r.wrap.b32 	%r3023, %r2632, %r2631, 1;
	shf.r.wrap.b32 	%r3024, %r2631, %r2632, 1;
	mov.b64 	%rd1713, {%r3024, %r3023};
	shf.r.wrap.b32 	%r3025, %r2632, %r2631, 8;
	shf.r.wrap.b32 	%r3026, %r2631, %r2632, 8;
	mov.b64 	%rd1714, {%r3026, %r3025};
	shr.u64 	%rd1715, %rd1141, 7;
	xor.b64  	%rd1716, %rd1713, %rd1715;
	xor.b64  	%rd1717, %rd1716, %rd1714;
	add.s64 	%rd1718, %rd1629, %rd1128;
	add.s64 	%rd1719, %rd1718, %rd1712;
	add.s64 	%rd1720, %rd1719, %rd1717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3027,%dummy}, %rd1707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3028}, %rd1707;
	}
	shf.r.wrap.b32 	%r3029, %r3028, %r3027, 19;
	shf.r.wrap.b32 	%r3030, %r3027, %r3028, 19;
	mov.b64 	%rd1721, {%r3030, %r3029};
	shf.l.wrap.b32 	%r3031, %r3027, %r3028, 3;
	shf.l.wrap.b32 	%r3032, %r3028, %r3027, 3;
	mov.b64 	%rd1722, {%r3032, %r3031};
	shr.u64 	%rd1723, %rd1707, 6;
	xor.b64  	%rd1724, %rd1721, %rd1723;
	xor.b64  	%rd1725, %rd1724, %rd1722;
	shf.r.wrap.b32 	%r3033, %r2642, %r2641, 1;
	shf.r.wrap.b32 	%r3034, %r2641, %r2642, 1;
	mov.b64 	%rd1726, {%r3034, %r3033};
	shf.r.wrap.b32 	%r3035, %r2642, %r2641, 8;
	shf.r.wrap.b32 	%r3036, %r2641, %r2642, 8;
	mov.b64 	%rd1727, {%r3036, %r3035};
	shr.u64 	%rd1728, %rd1154, 7;
	xor.b64  	%rd1729, %rd1726, %rd1728;
	xor.b64  	%rd1730, %rd1729, %rd1727;
	add.s64 	%rd1731, %rd1642, %rd1141;
	add.s64 	%rd1732, %rd1731, %rd1725;
	add.s64 	%rd1733, %rd1732, %rd1730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3037,%dummy}, %rd1720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3038}, %rd1720;
	}
	shf.r.wrap.b32 	%r3039, %r3038, %r3037, 19;
	shf.r.wrap.b32 	%r3040, %r3037, %r3038, 19;
	mov.b64 	%rd1734, {%r3040, %r3039};
	shf.l.wrap.b32 	%r3041, %r3037, %r3038, 3;
	shf.l.wrap.b32 	%r3042, %r3038, %r3037, 3;
	mov.b64 	%rd1735, {%r3042, %r3041};
	shr.u64 	%rd1736, %rd1720, 6;
	xor.b64  	%rd1737, %rd1734, %rd1736;
	xor.b64  	%rd1738, %rd1737, %rd1735;
	shf.r.wrap.b32 	%r3043, %r2652, %r2651, 1;
	shf.r.wrap.b32 	%r3044, %r2651, %r2652, 1;
	mov.b64 	%rd1739, {%r3044, %r3043};
	shf.r.wrap.b32 	%r3045, %r2652, %r2651, 8;
	shf.r.wrap.b32 	%r3046, %r2651, %r2652, 8;
	mov.b64 	%rd1740, {%r3046, %r3045};
	shr.u64 	%rd1741, %rd1167, 7;
	xor.b64  	%rd1742, %rd1739, %rd1741;
	xor.b64  	%rd1743, %rd1742, %rd1740;
	add.s64 	%rd1744, %rd1655, %rd1154;
	add.s64 	%rd1745, %rd1744, %rd1738;
	add.s64 	%rd1746, %rd1745, %rd1743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3047,%dummy}, %rd1733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3048}, %rd1733;
	}
	shf.r.wrap.b32 	%r3049, %r3048, %r3047, 19;
	shf.r.wrap.b32 	%r3050, %r3047, %r3048, 19;
	mov.b64 	%rd1747, {%r3050, %r3049};
	shf.l.wrap.b32 	%r3051, %r3047, %r3048, 3;
	shf.l.wrap.b32 	%r3052, %r3048, %r3047, 3;
	mov.b64 	%rd1748, {%r3052, %r3051};
	shr.u64 	%rd1749, %rd1733, 6;
	xor.b64  	%rd1750, %rd1747, %rd1749;
	xor.b64  	%rd1751, %rd1750, %rd1748;
	shf.r.wrap.b32 	%r3053, %r2662, %r2661, 1;
	shf.r.wrap.b32 	%r3054, %r2661, %r2662, 1;
	mov.b64 	%rd1752, {%r3054, %r3053};
	shf.r.wrap.b32 	%r3055, %r2662, %r2661, 8;
	shf.r.wrap.b32 	%r3056, %r2661, %r2662, 8;
	mov.b64 	%rd1753, {%r3056, %r3055};
	shr.u64 	%rd1754, %rd1180, 7;
	xor.b64  	%rd1755, %rd1752, %rd1754;
	xor.b64  	%rd1756, %rd1755, %rd1753;
	add.s64 	%rd1757, %rd1668, %rd1167;
	add.s64 	%rd1758, %rd1757, %rd1751;
	add.s64 	%rd1759, %rd1758, %rd1756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3057,%dummy}, %rd1746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3058}, %rd1746;
	}
	shf.r.wrap.b32 	%r3059, %r3058, %r3057, 19;
	shf.r.wrap.b32 	%r3060, %r3057, %r3058, 19;
	mov.b64 	%rd1760, {%r3060, %r3059};
	shf.l.wrap.b32 	%r3061, %r3057, %r3058, 3;
	shf.l.wrap.b32 	%r3062, %r3058, %r3057, 3;
	mov.b64 	%rd1761, {%r3062, %r3061};
	shr.u64 	%rd1762, %rd1746, 6;
	xor.b64  	%rd1763, %rd1760, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1761;
	shf.r.wrap.b32 	%r3063, %r2672, %r2671, 1;
	shf.r.wrap.b32 	%r3064, %r2671, %r2672, 1;
	mov.b64 	%rd1765, {%r3064, %r3063};
	shf.r.wrap.b32 	%r3065, %r2672, %r2671, 8;
	shf.r.wrap.b32 	%r3066, %r2671, %r2672, 8;
	mov.b64 	%rd1766, {%r3066, %r3065};
	shr.u64 	%rd1767, %rd1193, 7;
	xor.b64  	%rd1768, %rd1765, %rd1767;
	xor.b64  	%rd1769, %rd1768, %rd1766;
	add.s64 	%rd1770, %rd1681, %rd1180;
	add.s64 	%rd1771, %rd1770, %rd1764;
	add.s64 	%rd1772, %rd1771, %rd1769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3067,%dummy}, %rd1759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3068}, %rd1759;
	}
	shf.r.wrap.b32 	%r3069, %r3068, %r3067, 19;
	shf.r.wrap.b32 	%r3070, %r3067, %r3068, 19;
	mov.b64 	%rd1773, {%r3070, %r3069};
	shf.l.wrap.b32 	%r3071, %r3067, %r3068, 3;
	shf.l.wrap.b32 	%r3072, %r3068, %r3067, 3;
	mov.b64 	%rd1774, {%r3072, %r3071};
	shr.u64 	%rd1775, %rd1759, 6;
	xor.b64  	%rd1776, %rd1773, %rd1775;
	xor.b64  	%rd1777, %rd1776, %rd1774;
	shf.r.wrap.b32 	%r3073, %r2938, %r2937, 1;
	shf.r.wrap.b32 	%r3074, %r2937, %r2938, 1;
	mov.b64 	%rd1778, {%r3074, %r3073};
	shf.r.wrap.b32 	%r3075, %r2938, %r2937, 8;
	shf.r.wrap.b32 	%r3076, %r2937, %r2938, 8;
	mov.b64 	%rd1779, {%r3076, %r3075};
	shr.u64 	%rd1780, %rd1206, 7;
	xor.b64  	%rd1781, %rd1778, %rd1780;
	xor.b64  	%rd1782, %rd1781, %rd1779;
	add.s64 	%rd1783, %rd1694, %rd1193;
	add.s64 	%rd1784, %rd1783, %rd1777;
	add.s64 	%rd1785, %rd1784, %rd1782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3077,%dummy}, %rd1772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3078}, %rd1772;
	}
	shf.r.wrap.b32 	%r3079, %r3078, %r3077, 19;
	shf.r.wrap.b32 	%r3080, %r3077, %r3078, 19;
	mov.b64 	%rd1786, {%r3080, %r3079};
	shf.l.wrap.b32 	%r3081, %r3077, %r3078, 3;
	shf.l.wrap.b32 	%r3082, %r3078, %r3077, 3;
	mov.b64 	%rd1787, {%r3082, %r3081};
	shr.u64 	%rd1788, %rd1772, 6;
	xor.b64  	%rd1789, %rd1786, %rd1788;
	xor.b64  	%rd1790, %rd1789, %rd1787;
	shf.r.wrap.b32 	%r3083, %r2948, %r2947, 1;
	shf.r.wrap.b32 	%r3084, %r2947, %r2948, 1;
	mov.b64 	%rd1791, {%r3084, %r3083};
	shf.r.wrap.b32 	%r3085, %r2948, %r2947, 8;
	shf.r.wrap.b32 	%r3086, %r2947, %r2948, 8;
	mov.b64 	%rd1792, {%r3086, %r3085};
	shr.u64 	%rd1793, %rd1219, 7;
	xor.b64  	%rd1794, %rd1791, %rd1793;
	xor.b64  	%rd1795, %rd1794, %rd1792;
	add.s64 	%rd1796, %rd1707, %rd1206;
	add.s64 	%rd1797, %rd1796, %rd1790;
	add.s64 	%rd1798, %rd1797, %rd1795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3087,%dummy}, %rd1785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3088}, %rd1785;
	}
	shf.r.wrap.b32 	%r3089, %r3088, %r3087, 19;
	shf.r.wrap.b32 	%r3090, %r3087, %r3088, 19;
	mov.b64 	%rd1799, {%r3090, %r3089};
	shf.l.wrap.b32 	%r3091, %r3087, %r3088, 3;
	shf.l.wrap.b32 	%r3092, %r3088, %r3087, 3;
	mov.b64 	%rd1800, {%r3092, %r3091};
	shr.u64 	%rd1801, %rd1785, 6;
	xor.b64  	%rd1802, %rd1799, %rd1801;
	xor.b64  	%rd1803, %rd1802, %rd1800;
	shf.r.wrap.b32 	%r3093, %r2958, %r2957, 1;
	shf.r.wrap.b32 	%r3094, %r2957, %r2958, 1;
	mov.b64 	%rd1804, {%r3094, %r3093};
	shf.r.wrap.b32 	%r3095, %r2958, %r2957, 8;
	shf.r.wrap.b32 	%r3096, %r2957, %r2958, 8;
	mov.b64 	%rd1805, {%r3096, %r3095};
	shr.u64 	%rd1806, %rd1616, 7;
	xor.b64  	%rd1807, %rd1804, %rd1806;
	xor.b64  	%rd1808, %rd1807, %rd1805;
	add.s64 	%rd1809, %rd1720, %rd1219;
	add.s64 	%rd1810, %rd1809, %rd1803;
	add.s64 	%rd1811, %rd1810, %rd1808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3097,%dummy}, %rd1592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3098}, %rd1592;
	}
	shf.r.wrap.b32 	%r3099, %r3098, %r3097, 14;
	shf.r.wrap.b32 	%r3100, %r3097, %r3098, 14;
	mov.b64 	%rd1812, {%r3100, %r3099};
	shf.r.wrap.b32 	%r3101, %r3098, %r3097, 18;
	shf.r.wrap.b32 	%r3102, %r3097, %r3098, 18;
	mov.b64 	%rd1813, {%r3102, %r3101};
	xor.b64  	%rd1814, %rd1813, %rd1812;
	shf.l.wrap.b32 	%r3103, %r3097, %r3098, 23;
	shf.l.wrap.b32 	%r3104, %r3098, %r3097, 23;
	mov.b64 	%rd1815, {%r3104, %r3103};
	xor.b64  	%rd1816, %rd1814, %rd1815;
	xor.b64  	%rd1817, %rd1544, %rd1568;
	and.b64  	%rd1818, %rd1817, %rd1592;
	xor.b64  	%rd1819, %rd1818, %rd1544;
	add.s64 	%rd1820, %rd1819, %rd1520;
	add.s64 	%rd1821, %rd1820, %rd1616;
	add.s64 	%rd1822, %rd1821, %rd2728;
	add.s64 	%rd1823, %rd1822, %rd1816;
	add.s64 	%rd1824, %rd1823, %rd1531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3105,%dummy}, %rd1603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3106}, %rd1603;
	}
	shf.r.wrap.b32 	%r3107, %r3106, %r3105, 28;
	shf.r.wrap.b32 	%r3108, %r3105, %r3106, 28;
	mov.b64 	%rd1825, {%r3108, %r3107};
	shf.l.wrap.b32 	%r3109, %r3105, %r3106, 30;
	shf.l.wrap.b32 	%r3110, %r3106, %r3105, 30;
	mov.b64 	%rd1826, {%r3110, %r3109};
	xor.b64  	%rd1827, %rd1826, %rd1825;
	shf.l.wrap.b32 	%r3111, %r3105, %r3106, 25;
	shf.l.wrap.b32 	%r3112, %r3106, %r3105, 25;
	mov.b64 	%rd1828, {%r3112, %r3111};
	xor.b64  	%rd1829, %rd1827, %rd1828;
	xor.b64  	%rd1830, %rd1603, %rd1555;
	xor.b64  	%rd1831, %rd1603, %rd1579;
	and.b64  	%rd1832, %rd1831, %rd1830;
	xor.b64  	%rd1833, %rd1832, %rd1603;
	add.s64 	%rd1834, %rd1823, %rd1833;
	add.s64 	%rd1835, %rd1834, %rd1829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3113,%dummy}, %rd1824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3114}, %rd1824;
	}
	shf.r.wrap.b32 	%r3115, %r3114, %r3113, 14;
	shf.r.wrap.b32 	%r3116, %r3113, %r3114, 14;
	mov.b64 	%rd1836, {%r3116, %r3115};
	shf.r.wrap.b32 	%r3117, %r3114, %r3113, 18;
	shf.r.wrap.b32 	%r3118, %r3113, %r3114, 18;
	mov.b64 	%rd1837, {%r3118, %r3117};
	xor.b64  	%rd1838, %rd1837, %rd1836;
	shf.l.wrap.b32 	%r3119, %r3113, %r3114, 23;
	shf.l.wrap.b32 	%r3120, %r3114, %r3113, 23;
	mov.b64 	%rd1839, {%r3120, %r3119};
	xor.b64  	%rd1840, %rd1838, %rd1839;
	xor.b64  	%rd1841, %rd1568, %rd1592;
	and.b64  	%rd1842, %rd1824, %rd1841;
	xor.b64  	%rd1843, %rd1842, %rd1568;
	add.s64 	%rd1844, %rd1629, %rd1544;
	add.s64 	%rd1845, %rd1844, %rd2729;
	add.s64 	%rd1846, %rd1845, %rd1843;
	add.s64 	%rd1847, %rd1846, %rd1840;
	add.s64 	%rd1848, %rd1847, %rd1555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3121,%dummy}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3122}, %rd1835;
	}
	shf.r.wrap.b32 	%r3123, %r3122, %r3121, 28;
	shf.r.wrap.b32 	%r3124, %r3121, %r3122, 28;
	mov.b64 	%rd1849, {%r3124, %r3123};
	shf.l.wrap.b32 	%r3125, %r3121, %r3122, 30;
	shf.l.wrap.b32 	%r3126, %r3122, %r3121, 30;
	mov.b64 	%rd1850, {%r3126, %r3125};
	xor.b64  	%rd1851, %rd1850, %rd1849;
	shf.l.wrap.b32 	%r3127, %r3121, %r3122, 25;
	shf.l.wrap.b32 	%r3128, %r3122, %r3121, 25;
	mov.b64 	%rd1852, {%r3128, %r3127};
	xor.b64  	%rd1853, %rd1851, %rd1852;
	xor.b64  	%rd1854, %rd1835, %rd1579;
	xor.b64  	%rd1855, %rd1835, %rd1603;
	and.b64  	%rd1856, %rd1855, %rd1854;
	xor.b64  	%rd1857, %rd1856, %rd1835;
	add.s64 	%rd1858, %rd1847, %rd1857;
	add.s64 	%rd1859, %rd1858, %rd1853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3129,%dummy}, %rd1848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3130}, %rd1848;
	}
	shf.r.wrap.b32 	%r3131, %r3130, %r3129, 14;
	shf.r.wrap.b32 	%r3132, %r3129, %r3130, 14;
	mov.b64 	%rd1860, {%r3132, %r3131};
	shf.r.wrap.b32 	%r3133, %r3130, %r3129, 18;
	shf.r.wrap.b32 	%r3134, %r3129, %r3130, 18;
	mov.b64 	%rd1861, {%r3134, %r3133};
	xor.b64  	%rd1862, %rd1861, %rd1860;
	shf.l.wrap.b32 	%r3135, %r3129, %r3130, 23;
	shf.l.wrap.b32 	%r3136, %r3130, %r3129, 23;
	mov.b64 	%rd1863, {%r3136, %r3135};
	xor.b64  	%rd1864, %rd1862, %rd1863;
	xor.b64  	%rd1865, %rd1824, %rd1592;
	and.b64  	%rd1866, %rd1848, %rd1865;
	xor.b64  	%rd1867, %rd1866, %rd1592;
	add.s64 	%rd1868, %rd1642, %rd1568;
	add.s64 	%rd1869, %rd1868, %rd2730;
	add.s64 	%rd1870, %rd1869, %rd1867;
	add.s64 	%rd1871, %rd1870, %rd1864;
	add.s64 	%rd1872, %rd1871, %rd1579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3137,%dummy}, %rd1859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3138}, %rd1859;
	}
	shf.r.wrap.b32 	%r3139, %r3138, %r3137, 28;
	shf.r.wrap.b32 	%r3140, %r3137, %r3138, 28;
	mov.b64 	%rd1873, {%r3140, %r3139};
	shf.l.wrap.b32 	%r3141, %r3137, %r3138, 30;
	shf.l.wrap.b32 	%r3142, %r3138, %r3137, 30;
	mov.b64 	%rd1874, {%r3142, %r3141};
	xor.b64  	%rd1875, %rd1874, %rd1873;
	shf.l.wrap.b32 	%r3143, %r3137, %r3138, 25;
	shf.l.wrap.b32 	%r3144, %r3138, %r3137, 25;
	mov.b64 	%rd1876, {%r3144, %r3143};
	xor.b64  	%rd1877, %rd1875, %rd1876;
	xor.b64  	%rd1878, %rd1859, %rd1603;
	xor.b64  	%rd1879, %rd1859, %rd1835;
	and.b64  	%rd1880, %rd1879, %rd1878;
	xor.b64  	%rd1881, %rd1880, %rd1859;
	add.s64 	%rd1882, %rd1871, %rd1881;
	add.s64 	%rd1883, %rd1882, %rd1877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3145,%dummy}, %rd1872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3146}, %rd1872;
	}
	shf.r.wrap.b32 	%r3147, %r3146, %r3145, 14;
	shf.r.wrap.b32 	%r3148, %r3145, %r3146, 14;
	mov.b64 	%rd1884, {%r3148, %r3147};
	shf.r.wrap.b32 	%r3149, %r3146, %r3145, 18;
	shf.r.wrap.b32 	%r3150, %r3145, %r3146, 18;
	mov.b64 	%rd1885, {%r3150, %r3149};
	xor.b64  	%rd1886, %rd1885, %rd1884;
	shf.l.wrap.b32 	%r3151, %r3145, %r3146, 23;
	shf.l.wrap.b32 	%r3152, %r3146, %r3145, 23;
	mov.b64 	%rd1887, {%r3152, %r3151};
	xor.b64  	%rd1888, %rd1886, %rd1887;
	xor.b64  	%rd1889, %rd1848, %rd1824;
	and.b64  	%rd1890, %rd1872, %rd1889;
	xor.b64  	%rd1891, %rd1890, %rd1824;
	add.s64 	%rd1892, %rd1655, %rd1592;
	add.s64 	%rd1893, %rd1892, %rd2731;
	add.s64 	%rd1894, %rd1893, %rd1891;
	add.s64 	%rd1895, %rd1894, %rd1888;
	add.s64 	%rd1896, %rd1895, %rd1603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3153,%dummy}, %rd1883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3154}, %rd1883;
	}
	shf.r.wrap.b32 	%r3155, %r3154, %r3153, 28;
	shf.r.wrap.b32 	%r3156, %r3153, %r3154, 28;
	mov.b64 	%rd1897, {%r3156, %r3155};
	shf.l.wrap.b32 	%r3157, %r3153, %r3154, 30;
	shf.l.wrap.b32 	%r3158, %r3154, %r3153, 30;
	mov.b64 	%rd1898, {%r3158, %r3157};
	xor.b64  	%rd1899, %rd1898, %rd1897;
	shf.l.wrap.b32 	%r3159, %r3153, %r3154, 25;
	shf.l.wrap.b32 	%r3160, %r3154, %r3153, 25;
	mov.b64 	%rd1900, {%r3160, %r3159};
	xor.b64  	%rd1901, %rd1899, %rd1900;
	xor.b64  	%rd1902, %rd1883, %rd1835;
	xor.b64  	%rd1903, %rd1883, %rd1859;
	and.b64  	%rd1904, %rd1903, %rd1902;
	xor.b64  	%rd1905, %rd1904, %rd1883;
	add.s64 	%rd1906, %rd1895, %rd1905;
	add.s64 	%rd1907, %rd1906, %rd1901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3161,%dummy}, %rd1896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3162}, %rd1896;
	}
	shf.r.wrap.b32 	%r3163, %r3162, %r3161, 14;
	shf.r.wrap.b32 	%r3164, %r3161, %r3162, 14;
	mov.b64 	%rd1908, {%r3164, %r3163};
	shf.r.wrap.b32 	%r3165, %r3162, %r3161, 18;
	shf.r.wrap.b32 	%r3166, %r3161, %r3162, 18;
	mov.b64 	%rd1909, {%r3166, %r3165};
	xor.b64  	%rd1910, %rd1909, %rd1908;
	shf.l.wrap.b32 	%r3167, %r3161, %r3162, 23;
	shf.l.wrap.b32 	%r3168, %r3162, %r3161, 23;
	mov.b64 	%rd1911, {%r3168, %r3167};
	xor.b64  	%rd1912, %rd1910, %rd1911;
	xor.b64  	%rd1913, %rd1872, %rd1848;
	and.b64  	%rd1914, %rd1896, %rd1913;
	xor.b64  	%rd1915, %rd1914, %rd1848;
	add.s64 	%rd1916, %rd1824, %rd1668;
	add.s64 	%rd1917, %rd1916, %rd2732;
	add.s64 	%rd1918, %rd1917, %rd1915;
	add.s64 	%rd1919, %rd1918, %rd1912;
	add.s64 	%rd1920, %rd1919, %rd1835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3169,%dummy}, %rd1907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3170}, %rd1907;
	}
	shf.r.wrap.b32 	%r3171, %r3170, %r3169, 28;
	shf.r.wrap.b32 	%r3172, %r3169, %r3170, 28;
	mov.b64 	%rd1921, {%r3172, %r3171};
	shf.l.wrap.b32 	%r3173, %r3169, %r3170, 30;
	shf.l.wrap.b32 	%r3174, %r3170, %r3169, 30;
	mov.b64 	%rd1922, {%r3174, %r3173};
	xor.b64  	%rd1923, %rd1922, %rd1921;
	shf.l.wrap.b32 	%r3175, %r3169, %r3170, 25;
	shf.l.wrap.b32 	%r3176, %r3170, %r3169, 25;
	mov.b64 	%rd1924, {%r3176, %r3175};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	xor.b64  	%rd1926, %rd1907, %rd1859;
	xor.b64  	%rd1927, %rd1907, %rd1883;
	and.b64  	%rd1928, %rd1927, %rd1926;
	xor.b64  	%rd1929, %rd1928, %rd1907;
	add.s64 	%rd1930, %rd1919, %rd1929;
	add.s64 	%rd1931, %rd1930, %rd1925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3177,%dummy}, %rd1920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3178}, %rd1920;
	}
	shf.r.wrap.b32 	%r3179, %r3178, %r3177, 14;
	shf.r.wrap.b32 	%r3180, %r3177, %r3178, 14;
	mov.b64 	%rd1932, {%r3180, %r3179};
	shf.r.wrap.b32 	%r3181, %r3178, %r3177, 18;
	shf.r.wrap.b32 	%r3182, %r3177, %r3178, 18;
	mov.b64 	%rd1933, {%r3182, %r3181};
	xor.b64  	%rd1934, %rd1933, %rd1932;
	shf.l.wrap.b32 	%r3183, %r3177, %r3178, 23;
	shf.l.wrap.b32 	%r3184, %r3178, %r3177, 23;
	mov.b64 	%rd1935, {%r3184, %r3183};
	xor.b64  	%rd1936, %rd1934, %rd1935;
	xor.b64  	%rd1937, %rd1896, %rd1872;
	and.b64  	%rd1938, %rd1920, %rd1937;
	xor.b64  	%rd1939, %rd1938, %rd1872;
	add.s64 	%rd1940, %rd1848, %rd1681;
	add.s64 	%rd1941, %rd1940, %rd2733;
	add.s64 	%rd1942, %rd1941, %rd1939;
	add.s64 	%rd1943, %rd1942, %rd1936;
	add.s64 	%rd1944, %rd1943, %rd1859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3185,%dummy}, %rd1931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3186}, %rd1931;
	}
	shf.r.wrap.b32 	%r3187, %r3186, %r3185, 28;
	shf.r.wrap.b32 	%r3188, %r3185, %r3186, 28;
	mov.b64 	%rd1945, {%r3188, %r3187};
	shf.l.wrap.b32 	%r3189, %r3185, %r3186, 30;
	shf.l.wrap.b32 	%r3190, %r3186, %r3185, 30;
	mov.b64 	%rd1946, {%r3190, %r3189};
	xor.b64  	%rd1947, %rd1946, %rd1945;
	shf.l.wrap.b32 	%r3191, %r3185, %r3186, 25;
	shf.l.wrap.b32 	%r3192, %r3186, %r3185, 25;
	mov.b64 	%rd1948, {%r3192, %r3191};
	xor.b64  	%rd1949, %rd1947, %rd1948;
	xor.b64  	%rd1950, %rd1931, %rd1883;
	xor.b64  	%rd1951, %rd1931, %rd1907;
	and.b64  	%rd1952, %rd1951, %rd1950;
	xor.b64  	%rd1953, %rd1952, %rd1931;
	add.s64 	%rd1954, %rd1943, %rd1953;
	add.s64 	%rd1955, %rd1954, %rd1949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3193,%dummy}, %rd1944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3194}, %rd1944;
	}
	shf.r.wrap.b32 	%r3195, %r3194, %r3193, 14;
	shf.r.wrap.b32 	%r3196, %r3193, %r3194, 14;
	mov.b64 	%rd1956, {%r3196, %r3195};
	shf.r.wrap.b32 	%r3197, %r3194, %r3193, 18;
	shf.r.wrap.b32 	%r3198, %r3193, %r3194, 18;
	mov.b64 	%rd1957, {%r3198, %r3197};
	xor.b64  	%rd1958, %rd1957, %rd1956;
	shf.l.wrap.b32 	%r3199, %r3193, %r3194, 23;
	shf.l.wrap.b32 	%r3200, %r3194, %r3193, 23;
	mov.b64 	%rd1959, {%r3200, %r3199};
	xor.b64  	%rd1960, %rd1958, %rd1959;
	xor.b64  	%rd1961, %rd1920, %rd1896;
	and.b64  	%rd1962, %rd1944, %rd1961;
	xor.b64  	%rd1963, %rd1962, %rd1896;
	add.s64 	%rd1964, %rd1872, %rd1694;
	add.s64 	%rd1965, %rd1964, %rd2734;
	add.s64 	%rd1966, %rd1965, %rd1963;
	add.s64 	%rd1967, %rd1966, %rd1960;
	add.s64 	%rd1968, %rd1967, %rd1883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3201,%dummy}, %rd1955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3202}, %rd1955;
	}
	shf.r.wrap.b32 	%r3203, %r3202, %r3201, 28;
	shf.r.wrap.b32 	%r3204, %r3201, %r3202, 28;
	mov.b64 	%rd1969, {%r3204, %r3203};
	shf.l.wrap.b32 	%r3205, %r3201, %r3202, 30;
	shf.l.wrap.b32 	%r3206, %r3202, %r3201, 30;
	mov.b64 	%rd1970, {%r3206, %r3205};
	xor.b64  	%rd1971, %rd1970, %rd1969;
	shf.l.wrap.b32 	%r3207, %r3201, %r3202, 25;
	shf.l.wrap.b32 	%r3208, %r3202, %r3201, 25;
	mov.b64 	%rd1972, {%r3208, %r3207};
	xor.b64  	%rd1973, %rd1971, %rd1972;
	xor.b64  	%rd1974, %rd1955, %rd1907;
	xor.b64  	%rd1975, %rd1955, %rd1931;
	and.b64  	%rd1976, %rd1975, %rd1974;
	xor.b64  	%rd1977, %rd1976, %rd1955;
	add.s64 	%rd1978, %rd1967, %rd1977;
	add.s64 	%rd1979, %rd1978, %rd1973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3209,%dummy}, %rd1968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3210}, %rd1968;
	}
	shf.r.wrap.b32 	%r3211, %r3210, %r3209, 14;
	shf.r.wrap.b32 	%r3212, %r3209, %r3210, 14;
	mov.b64 	%rd1980, {%r3212, %r3211};
	shf.r.wrap.b32 	%r3213, %r3210, %r3209, 18;
	shf.r.wrap.b32 	%r3214, %r3209, %r3210, 18;
	mov.b64 	%rd1981, {%r3214, %r3213};
	xor.b64  	%rd1982, %rd1981, %rd1980;
	shf.l.wrap.b32 	%r3215, %r3209, %r3210, 23;
	shf.l.wrap.b32 	%r3216, %r3210, %r3209, 23;
	mov.b64 	%rd1983, {%r3216, %r3215};
	xor.b64  	%rd1984, %rd1982, %rd1983;
	xor.b64  	%rd1985, %rd1944, %rd1920;
	and.b64  	%rd1986, %rd1968, %rd1985;
	xor.b64  	%rd1987, %rd1986, %rd1920;
	add.s64 	%rd1988, %rd1896, %rd1707;
	add.s64 	%rd1989, %rd1988, %rd2735;
	add.s64 	%rd1990, %rd1989, %rd1987;
	add.s64 	%rd1991, %rd1990, %rd1984;
	add.s64 	%rd1992, %rd1991, %rd1907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3217,%dummy}, %rd1979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3218}, %rd1979;
	}
	shf.r.wrap.b32 	%r3219, %r3218, %r3217, 28;
	shf.r.wrap.b32 	%r3220, %r3217, %r3218, 28;
	mov.b64 	%rd1993, {%r3220, %r3219};
	shf.l.wrap.b32 	%r3221, %r3217, %r3218, 30;
	shf.l.wrap.b32 	%r3222, %r3218, %r3217, 30;
	mov.b64 	%rd1994, {%r3222, %r3221};
	xor.b64  	%rd1995, %rd1994, %rd1993;
	shf.l.wrap.b32 	%r3223, %r3217, %r3218, 25;
	shf.l.wrap.b32 	%r3224, %r3218, %r3217, 25;
	mov.b64 	%rd1996, {%r3224, %r3223};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	xor.b64  	%rd1998, %rd1979, %rd1931;
	xor.b64  	%rd1999, %rd1979, %rd1955;
	and.b64  	%rd2000, %rd1999, %rd1998;
	xor.b64  	%rd2001, %rd2000, %rd1979;
	add.s64 	%rd2002, %rd1991, %rd2001;
	add.s64 	%rd2003, %rd2002, %rd1997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3225,%dummy}, %rd1992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3226}, %rd1992;
	}
	shf.r.wrap.b32 	%r3227, %r3226, %r3225, 14;
	shf.r.wrap.b32 	%r3228, %r3225, %r3226, 14;
	mov.b64 	%rd2004, {%r3228, %r3227};
	shf.r.wrap.b32 	%r3229, %r3226, %r3225, 18;
	shf.r.wrap.b32 	%r3230, %r3225, %r3226, 18;
	mov.b64 	%rd2005, {%r3230, %r3229};
	xor.b64  	%rd2006, %rd2005, %rd2004;
	shf.l.wrap.b32 	%r3231, %r3225, %r3226, 23;
	shf.l.wrap.b32 	%r3232, %r3226, %r3225, 23;
	mov.b64 	%rd2007, {%r3232, %r3231};
	xor.b64  	%rd2008, %rd2006, %rd2007;
	xor.b64  	%rd2009, %rd1968, %rd1944;
	and.b64  	%rd2010, %rd1992, %rd2009;
	xor.b64  	%rd2011, %rd2010, %rd1944;
	add.s64 	%rd2012, %rd1920, %rd1720;
	add.s64 	%rd2013, %rd2012, %rd2736;
	add.s64 	%rd2014, %rd2013, %rd2011;
	add.s64 	%rd2015, %rd2014, %rd2008;
	add.s64 	%rd2016, %rd2015, %rd1931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3233,%dummy}, %rd2003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3234}, %rd2003;
	}
	shf.r.wrap.b32 	%r3235, %r3234, %r3233, 28;
	shf.r.wrap.b32 	%r3236, %r3233, %r3234, 28;
	mov.b64 	%rd2017, {%r3236, %r3235};
	shf.l.wrap.b32 	%r3237, %r3233, %r3234, 30;
	shf.l.wrap.b32 	%r3238, %r3234, %r3233, 30;
	mov.b64 	%rd2018, {%r3238, %r3237};
	xor.b64  	%rd2019, %rd2018, %rd2017;
	shf.l.wrap.b32 	%r3239, %r3233, %r3234, 25;
	shf.l.wrap.b32 	%r3240, %r3234, %r3233, 25;
	mov.b64 	%rd2020, {%r3240, %r3239};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	xor.b64  	%rd2022, %rd2003, %rd1955;
	xor.b64  	%rd2023, %rd2003, %rd1979;
	and.b64  	%rd2024, %rd2023, %rd2022;
	xor.b64  	%rd2025, %rd2024, %rd2003;
	add.s64 	%rd2026, %rd2015, %rd2025;
	add.s64 	%rd2027, %rd2026, %rd2021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3241,%dummy}, %rd2016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3242}, %rd2016;
	}
	shf.r.wrap.b32 	%r3243, %r3242, %r3241, 14;
	shf.r.wrap.b32 	%r3244, %r3241, %r3242, 14;
	mov.b64 	%rd2028, {%r3244, %r3243};
	shf.r.wrap.b32 	%r3245, %r3242, %r3241, 18;
	shf.r.wrap.b32 	%r3246, %r3241, %r3242, 18;
	mov.b64 	%rd2029, {%r3246, %r3245};
	xor.b64  	%rd2030, %rd2029, %rd2028;
	shf.l.wrap.b32 	%r3247, %r3241, %r3242, 23;
	shf.l.wrap.b32 	%r3248, %r3242, %r3241, 23;
	mov.b64 	%rd2031, {%r3248, %r3247};
	xor.b64  	%rd2032, %rd2030, %rd2031;
	xor.b64  	%rd2033, %rd1992, %rd1968;
	and.b64  	%rd2034, %rd2016, %rd2033;
	xor.b64  	%rd2035, %rd2034, %rd1968;
	add.s64 	%rd2036, %rd1944, %rd1733;
	add.s64 	%rd2037, %rd2036, %rd2737;
	add.s64 	%rd2038, %rd2037, %rd2035;
	add.s64 	%rd2039, %rd2038, %rd2032;
	add.s64 	%rd2040, %rd2039, %rd1955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3249,%dummy}, %rd2027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3250}, %rd2027;
	}
	shf.r.wrap.b32 	%r3251, %r3250, %r3249, 28;
	shf.r.wrap.b32 	%r3252, %r3249, %r3250, 28;
	mov.b64 	%rd2041, {%r3252, %r3251};
	shf.l.wrap.b32 	%r3253, %r3249, %r3250, 30;
	shf.l.wrap.b32 	%r3254, %r3250, %r3249, 30;
	mov.b64 	%rd2042, {%r3254, %r3253};
	xor.b64  	%rd2043, %rd2042, %rd2041;
	shf.l.wrap.b32 	%r3255, %r3249, %r3250, 25;
	shf.l.wrap.b32 	%r3256, %r3250, %r3249, 25;
	mov.b64 	%rd2044, {%r3256, %r3255};
	xor.b64  	%rd2045, %rd2043, %rd2044;
	xor.b64  	%rd2046, %rd2027, %rd1979;
	xor.b64  	%rd2047, %rd2027, %rd2003;
	and.b64  	%rd2048, %rd2047, %rd2046;
	xor.b64  	%rd2049, %rd2048, %rd2027;
	add.s64 	%rd2050, %rd2039, %rd2049;
	add.s64 	%rd2051, %rd2050, %rd2045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3257,%dummy}, %rd2040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3258}, %rd2040;
	}
	shf.r.wrap.b32 	%r3259, %r3258, %r3257, 14;
	shf.r.wrap.b32 	%r3260, %r3257, %r3258, 14;
	mov.b64 	%rd2052, {%r3260, %r3259};
	shf.r.wrap.b32 	%r3261, %r3258, %r3257, 18;
	shf.r.wrap.b32 	%r3262, %r3257, %r3258, 18;
	mov.b64 	%rd2053, {%r3262, %r3261};
	xor.b64  	%rd2054, %rd2053, %rd2052;
	shf.l.wrap.b32 	%r3263, %r3257, %r3258, 23;
	shf.l.wrap.b32 	%r3264, %r3258, %r3257, 23;
	mov.b64 	%rd2055, {%r3264, %r3263};
	xor.b64  	%rd2056, %rd2054, %rd2055;
	xor.b64  	%rd2057, %rd2016, %rd1992;
	and.b64  	%rd2058, %rd2040, %rd2057;
	xor.b64  	%rd2059, %rd2058, %rd1992;
	add.s64 	%rd2060, %rd1968, %rd1746;
	add.s64 	%rd2061, %rd2060, %rd2738;
	add.s64 	%rd2062, %rd2061, %rd2059;
	add.s64 	%rd2063, %rd2062, %rd2056;
	add.s64 	%rd2064, %rd2063, %rd1979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3265,%dummy}, %rd2051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3266}, %rd2051;
	}
	shf.r.wrap.b32 	%r3267, %r3266, %r3265, 28;
	shf.r.wrap.b32 	%r3268, %r3265, %r3266, 28;
	mov.b64 	%rd2065, {%r3268, %r3267};
	shf.l.wrap.b32 	%r3269, %r3265, %r3266, 30;
	shf.l.wrap.b32 	%r3270, %r3266, %r3265, 30;
	mov.b64 	%rd2066, {%r3270, %r3269};
	xor.b64  	%rd2067, %rd2066, %rd2065;
	shf.l.wrap.b32 	%r3271, %r3265, %r3266, 25;
	shf.l.wrap.b32 	%r3272, %r3266, %r3265, 25;
	mov.b64 	%rd2068, {%r3272, %r3271};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	xor.b64  	%rd2070, %rd2051, %rd2003;
	xor.b64  	%rd2071, %rd2051, %rd2027;
	and.b64  	%rd2072, %rd2071, %rd2070;
	xor.b64  	%rd2073, %rd2072, %rd2051;
	add.s64 	%rd2074, %rd2063, %rd2073;
	add.s64 	%rd2075, %rd2074, %rd2069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3273,%dummy}, %rd2064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3274}, %rd2064;
	}
	shf.r.wrap.b32 	%r3275, %r3274, %r3273, 14;
	shf.r.wrap.b32 	%r3276, %r3273, %r3274, 14;
	mov.b64 	%rd2076, {%r3276, %r3275};
	shf.r.wrap.b32 	%r3277, %r3274, %r3273, 18;
	shf.r.wrap.b32 	%r3278, %r3273, %r3274, 18;
	mov.b64 	%rd2077, {%r3278, %r3277};
	xor.b64  	%rd2078, %rd2077, %rd2076;
	shf.l.wrap.b32 	%r3279, %r3273, %r3274, 23;
	shf.l.wrap.b32 	%r3280, %r3274, %r3273, 23;
	mov.b64 	%rd2079, {%r3280, %r3279};
	xor.b64  	%rd2080, %rd2078, %rd2079;
	xor.b64  	%rd2081, %rd2040, %rd2016;
	and.b64  	%rd2082, %rd2064, %rd2081;
	xor.b64  	%rd2083, %rd2082, %rd2016;
	add.s64 	%rd2084, %rd1992, %rd1759;
	add.s64 	%rd2085, %rd2084, %rd2739;
	add.s64 	%rd2086, %rd2085, %rd2083;
	add.s64 	%rd2087, %rd2086, %rd2080;
	add.s64 	%rd2088, %rd2087, %rd2003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3281,%dummy}, %rd2075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3282}, %rd2075;
	}
	shf.r.wrap.b32 	%r3283, %r3282, %r3281, 28;
	shf.r.wrap.b32 	%r3284, %r3281, %r3282, 28;
	mov.b64 	%rd2089, {%r3284, %r3283};
	shf.l.wrap.b32 	%r3285, %r3281, %r3282, 30;
	shf.l.wrap.b32 	%r3286, %r3282, %r3281, 30;
	mov.b64 	%rd2090, {%r3286, %r3285};
	xor.b64  	%rd2091, %rd2090, %rd2089;
	shf.l.wrap.b32 	%r3287, %r3281, %r3282, 25;
	shf.l.wrap.b32 	%r3288, %r3282, %r3281, 25;
	mov.b64 	%rd2092, {%r3288, %r3287};
	xor.b64  	%rd2093, %rd2091, %rd2092;
	xor.b64  	%rd2094, %rd2075, %rd2027;
	xor.b64  	%rd2095, %rd2075, %rd2051;
	and.b64  	%rd2096, %rd2095, %rd2094;
	xor.b64  	%rd2097, %rd2096, %rd2075;
	add.s64 	%rd2098, %rd2087, %rd2097;
	add.s64 	%rd2099, %rd2098, %rd2093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3289,%dummy}, %rd2088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3290}, %rd2088;
	}
	shf.r.wrap.b32 	%r3291, %r3290, %r3289, 14;
	shf.r.wrap.b32 	%r3292, %r3289, %r3290, 14;
	mov.b64 	%rd2100, {%r3292, %r3291};
	shf.r.wrap.b32 	%r3293, %r3290, %r3289, 18;
	shf.r.wrap.b32 	%r3294, %r3289, %r3290, 18;
	mov.b64 	%rd2101, {%r3294, %r3293};
	xor.b64  	%rd2102, %rd2101, %rd2100;
	shf.l.wrap.b32 	%r3295, %r3289, %r3290, 23;
	shf.l.wrap.b32 	%r3296, %r3290, %r3289, 23;
	mov.b64 	%rd2103, {%r3296, %r3295};
	xor.b64  	%rd2104, %rd2102, %rd2103;
	xor.b64  	%rd2105, %rd2064, %rd2040;
	and.b64  	%rd2106, %rd2088, %rd2105;
	xor.b64  	%rd2107, %rd2106, %rd2040;
	add.s64 	%rd2108, %rd2016, %rd1772;
	add.s64 	%rd2109, %rd2108, %rd2740;
	add.s64 	%rd2110, %rd2109, %rd2107;
	add.s64 	%rd2111, %rd2110, %rd2104;
	add.s64 	%rd2112, %rd2111, %rd2027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3297,%dummy}, %rd2099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3298}, %rd2099;
	}
	shf.r.wrap.b32 	%r3299, %r3298, %r3297, 28;
	shf.r.wrap.b32 	%r3300, %r3297, %r3298, 28;
	mov.b64 	%rd2113, {%r3300, %r3299};
	shf.l.wrap.b32 	%r3301, %r3297, %r3298, 30;
	shf.l.wrap.b32 	%r3302, %r3298, %r3297, 30;
	mov.b64 	%rd2114, {%r3302, %r3301};
	xor.b64  	%rd2115, %rd2114, %rd2113;
	shf.l.wrap.b32 	%r3303, %r3297, %r3298, 25;
	shf.l.wrap.b32 	%r3304, %r3298, %r3297, 25;
	mov.b64 	%rd2116, {%r3304, %r3303};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	xor.b64  	%rd2118, %rd2099, %rd2051;
	xor.b64  	%rd2119, %rd2099, %rd2075;
	and.b64  	%rd2120, %rd2119, %rd2118;
	xor.b64  	%rd2121, %rd2120, %rd2099;
	add.s64 	%rd2122, %rd2111, %rd2121;
	add.s64 	%rd2123, %rd2122, %rd2117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3305,%dummy}, %rd2112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3306}, %rd2112;
	}
	shf.r.wrap.b32 	%r3307, %r3306, %r3305, 14;
	shf.r.wrap.b32 	%r3308, %r3305, %r3306, 14;
	mov.b64 	%rd2124, {%r3308, %r3307};
	shf.r.wrap.b32 	%r3309, %r3306, %r3305, 18;
	shf.r.wrap.b32 	%r3310, %r3305, %r3306, 18;
	mov.b64 	%rd2125, {%r3310, %r3309};
	xor.b64  	%rd2126, %rd2125, %rd2124;
	shf.l.wrap.b32 	%r3311, %r3305, %r3306, 23;
	shf.l.wrap.b32 	%r3312, %r3306, %r3305, 23;
	mov.b64 	%rd2127, {%r3312, %r3311};
	xor.b64  	%rd2128, %rd2126, %rd2127;
	xor.b64  	%rd2129, %rd2088, %rd2064;
	and.b64  	%rd2130, %rd2112, %rd2129;
	xor.b64  	%rd2131, %rd2130, %rd2064;
	add.s64 	%rd2132, %rd2040, %rd1785;
	add.s64 	%rd2133, %rd2132, %rd2741;
	add.s64 	%rd2134, %rd2133, %rd2131;
	add.s64 	%rd2135, %rd2134, %rd2128;
	add.s64 	%rd2136, %rd2135, %rd2051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3313,%dummy}, %rd2123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3314}, %rd2123;
	}
	shf.r.wrap.b32 	%r3315, %r3314, %r3313, 28;
	shf.r.wrap.b32 	%r3316, %r3313, %r3314, 28;
	mov.b64 	%rd2137, {%r3316, %r3315};
	shf.l.wrap.b32 	%r3317, %r3313, %r3314, 30;
	shf.l.wrap.b32 	%r3318, %r3314, %r3313, 30;
	mov.b64 	%rd2138, {%r3318, %r3317};
	xor.b64  	%rd2139, %rd2138, %rd2137;
	shf.l.wrap.b32 	%r3319, %r3313, %r3314, 25;
	shf.l.wrap.b32 	%r3320, %r3314, %r3313, 25;
	mov.b64 	%rd2140, {%r3320, %r3319};
	xor.b64  	%rd2141, %rd2139, %rd2140;
	xor.b64  	%rd2142, %rd2123, %rd2075;
	xor.b64  	%rd2143, %rd2123, %rd2099;
	and.b64  	%rd2144, %rd2143, %rd2142;
	xor.b64  	%rd2145, %rd2144, %rd2123;
	add.s64 	%rd2146, %rd2135, %rd2145;
	add.s64 	%rd2147, %rd2146, %rd2141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3321,%dummy}, %rd2136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3322}, %rd2136;
	}
	shf.r.wrap.b32 	%r3323, %r3322, %r3321, 14;
	shf.r.wrap.b32 	%r3324, %r3321, %r3322, 14;
	mov.b64 	%rd2148, {%r3324, %r3323};
	shf.r.wrap.b32 	%r3325, %r3322, %r3321, 18;
	shf.r.wrap.b32 	%r3326, %r3321, %r3322, 18;
	mov.b64 	%rd2149, {%r3326, %r3325};
	xor.b64  	%rd2150, %rd2149, %rd2148;
	shf.l.wrap.b32 	%r3327, %r3321, %r3322, 23;
	shf.l.wrap.b32 	%r3328, %r3322, %r3321, 23;
	mov.b64 	%rd2151, {%r3328, %r3327};
	xor.b64  	%rd2152, %rd2150, %rd2151;
	xor.b64  	%rd2153, %rd2112, %rd2088;
	and.b64  	%rd2154, %rd2136, %rd2153;
	xor.b64  	%rd2155, %rd2154, %rd2088;
	add.s64 	%rd2156, %rd2064, %rd1798;
	add.s64 	%rd2157, %rd2156, %rd2742;
	add.s64 	%rd2158, %rd2157, %rd2155;
	add.s64 	%rd2159, %rd2158, %rd2152;
	add.s64 	%rd2160, %rd2159, %rd2075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3329,%dummy}, %rd2147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3330}, %rd2147;
	}
	shf.r.wrap.b32 	%r3331, %r3330, %r3329, 28;
	shf.r.wrap.b32 	%r3332, %r3329, %r3330, 28;
	mov.b64 	%rd2161, {%r3332, %r3331};
	shf.l.wrap.b32 	%r3333, %r3329, %r3330, 30;
	shf.l.wrap.b32 	%r3334, %r3330, %r3329, 30;
	mov.b64 	%rd2162, {%r3334, %r3333};
	xor.b64  	%rd2163, %rd2162, %rd2161;
	shf.l.wrap.b32 	%r3335, %r3329, %r3330, 25;
	shf.l.wrap.b32 	%r3336, %r3330, %r3329, 25;
	mov.b64 	%rd2164, {%r3336, %r3335};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	xor.b64  	%rd2166, %rd2147, %rd2099;
	xor.b64  	%rd2167, %rd2147, %rd2123;
	and.b64  	%rd2168, %rd2167, %rd2166;
	xor.b64  	%rd2169, %rd2168, %rd2147;
	add.s64 	%rd2170, %rd2159, %rd2169;
	add.s64 	%rd2171, %rd2170, %rd2165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3337,%dummy}, %rd2160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3338}, %rd2160;
	}
	shf.r.wrap.b32 	%r3339, %r3338, %r3337, 14;
	shf.r.wrap.b32 	%r3340, %r3337, %r3338, 14;
	mov.b64 	%rd2172, {%r3340, %r3339};
	shf.r.wrap.b32 	%r3341, %r3338, %r3337, 18;
	shf.r.wrap.b32 	%r3342, %r3337, %r3338, 18;
	mov.b64 	%rd2173, {%r3342, %r3341};
	xor.b64  	%rd2174, %rd2173, %rd2172;
	shf.l.wrap.b32 	%r3343, %r3337, %r3338, 23;
	shf.l.wrap.b32 	%r3344, %r3338, %r3337, 23;
	mov.b64 	%rd2175, {%r3344, %r3343};
	xor.b64  	%rd2176, %rd2174, %rd2175;
	xor.b64  	%rd2177, %rd2136, %rd2112;
	and.b64  	%rd2178, %rd2160, %rd2177;
	xor.b64  	%rd2179, %rd2178, %rd2112;
	add.s64 	%rd2180, %rd2088, %rd1811;
	add.s64 	%rd2181, %rd2180, %rd2743;
	add.s64 	%rd2182, %rd2181, %rd2179;
	add.s64 	%rd2183, %rd2182, %rd2176;
	add.s64 	%rd2184, %rd2183, %rd2099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3345,%dummy}, %rd2171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3346}, %rd2171;
	}
	shf.r.wrap.b32 	%r3347, %r3346, %r3345, 28;
	shf.r.wrap.b32 	%r3348, %r3345, %r3346, 28;
	mov.b64 	%rd2185, {%r3348, %r3347};
	shf.l.wrap.b32 	%r3349, %r3345, %r3346, 30;
	shf.l.wrap.b32 	%r3350, %r3346, %r3345, 30;
	mov.b64 	%rd2186, {%r3350, %r3349};
	xor.b64  	%rd2187, %rd2186, %rd2185;
	shf.l.wrap.b32 	%r3351, %r3345, %r3346, 25;
	shf.l.wrap.b32 	%r3352, %r3346, %r3345, 25;
	mov.b64 	%rd2188, {%r3352, %r3351};
	xor.b64  	%rd2189, %rd2187, %rd2188;
	xor.b64  	%rd2190, %rd2171, %rd2123;
	xor.b64  	%rd2191, %rd2171, %rd2147;
	and.b64  	%rd2192, %rd2191, %rd2190;
	xor.b64  	%rd2193, %rd2192, %rd2171;
	add.s64 	%rd2194, %rd2183, %rd2193;
	add.s64 	%rd2195, %rd2194, %rd2189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3353,%dummy}, %rd1798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3354}, %rd1798;
	}
	shf.r.wrap.b32 	%r3355, %r3354, %r3353, 19;
	shf.r.wrap.b32 	%r3356, %r3353, %r3354, 19;
	mov.b64 	%rd2196, {%r3356, %r3355};
	shf.l.wrap.b32 	%r3357, %r3353, %r3354, 3;
	shf.l.wrap.b32 	%r3358, %r3354, %r3353, 3;
	mov.b64 	%rd2197, {%r3358, %r3357};
	shr.u64 	%rd2198, %rd1798, 6;
	xor.b64  	%rd2199, %rd2196, %rd2198;
	xor.b64  	%rd2200, %rd2199, %rd2197;
	shf.r.wrap.b32 	%r3359, %r2968, %r2967, 1;
	shf.r.wrap.b32 	%r3360, %r2967, %r2968, 1;
	mov.b64 	%rd2201, {%r3360, %r3359};
	shf.r.wrap.b32 	%r3361, %r2968, %r2967, 8;
	shf.r.wrap.b32 	%r3362, %r2967, %r2968, 8;
	mov.b64 	%rd2202, {%r3362, %r3361};
	shr.u64 	%rd2203, %rd1629, 7;
	xor.b64  	%rd2204, %rd2201, %rd2203;
	xor.b64  	%rd2205, %rd2204, %rd2202;
	add.s64 	%rd2206, %rd1616, %rd1733;
	add.s64 	%rd2207, %rd2206, %rd2200;
	add.s64 	%rd2208, %rd2207, %rd2205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3363,%dummy}, %rd1811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3364}, %rd1811;
	}
	shf.r.wrap.b32 	%r3365, %r3364, %r3363, 19;
	shf.r.wrap.b32 	%r3366, %r3363, %r3364, 19;
	mov.b64 	%rd2209, {%r3366, %r3365};
	shf.l.wrap.b32 	%r3367, %r3363, %r3364, 3;
	shf.l.wrap.b32 	%r3368, %r3364, %r3363, 3;
	mov.b64 	%rd2210, {%r3368, %r3367};
	shr.u64 	%rd2211, %rd1811, 6;
	xor.b64  	%rd2212, %rd2209, %rd2211;
	xor.b64  	%rd2213, %rd2212, %rd2210;
	shf.r.wrap.b32 	%r3369, %r2978, %r2977, 1;
	shf.r.wrap.b32 	%r3370, %r2977, %r2978, 1;
	mov.b64 	%rd2214, {%r3370, %r3369};
	shf.r.wrap.b32 	%r3371, %r2978, %r2977, 8;
	shf.r.wrap.b32 	%r3372, %r2977, %r2978, 8;
	mov.b64 	%rd2215, {%r3372, %r3371};
	shr.u64 	%rd2216, %rd1642, 7;
	xor.b64  	%rd2217, %rd2214, %rd2216;
	xor.b64  	%rd2218, %rd2217, %rd2215;
	add.s64 	%rd2219, %rd1629, %rd1746;
	add.s64 	%rd2220, %rd2219, %rd2213;
	add.s64 	%rd2221, %rd2220, %rd2218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3373,%dummy}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3374}, %rd2208;
	}
	shf.r.wrap.b32 	%r3375, %r3374, %r3373, 19;
	shf.r.wrap.b32 	%r3376, %r3373, %r3374, 19;
	mov.b64 	%rd2222, {%r3376, %r3375};
	shf.l.wrap.b32 	%r3377, %r3373, %r3374, 3;
	shf.l.wrap.b32 	%r3378, %r3374, %r3373, 3;
	mov.b64 	%rd2223, {%r3378, %r3377};
	shr.u64 	%rd2224, %rd2208, 6;
	xor.b64  	%rd2225, %rd2222, %rd2224;
	xor.b64  	%rd2226, %rd2225, %rd2223;
	shf.r.wrap.b32 	%r3379, %r2988, %r2987, 1;
	shf.r.wrap.b32 	%r3380, %r2987, %r2988, 1;
	mov.b64 	%rd2227, {%r3380, %r3379};
	shf.r.wrap.b32 	%r3381, %r2988, %r2987, 8;
	shf.r.wrap.b32 	%r3382, %r2987, %r2988, 8;
	mov.b64 	%rd2228, {%r3382, %r3381};
	shr.u64 	%rd2229, %rd1655, 7;
	xor.b64  	%rd2230, %rd2227, %rd2229;
	xor.b64  	%rd2231, %rd2230, %rd2228;
	add.s64 	%rd2232, %rd1642, %rd1759;
	add.s64 	%rd2233, %rd2232, %rd2226;
	add.s64 	%rd2234, %rd2233, %rd2231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3383,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3384}, %rd2221;
	}
	shf.r.wrap.b32 	%r3385, %r3384, %r3383, 19;
	shf.r.wrap.b32 	%r3386, %r3383, %r3384, 19;
	mov.b64 	%rd2235, {%r3386, %r3385};
	shf.l.wrap.b32 	%r3387, %r3383, %r3384, 3;
	shf.l.wrap.b32 	%r3388, %r3384, %r3383, 3;
	mov.b64 	%rd2236, {%r3388, %r3387};
	shr.u64 	%rd2237, %rd2221, 6;
	xor.b64  	%rd2238, %rd2235, %rd2237;
	xor.b64  	%rd2239, %rd2238, %rd2236;
	shf.r.wrap.b32 	%r3389, %r2998, %r2997, 1;
	shf.r.wrap.b32 	%r3390, %r2997, %r2998, 1;
	mov.b64 	%rd2240, {%r3390, %r3389};
	shf.r.wrap.b32 	%r3391, %r2998, %r2997, 8;
	shf.r.wrap.b32 	%r3392, %r2997, %r2998, 8;
	mov.b64 	%rd2241, {%r3392, %r3391};
	shr.u64 	%rd2242, %rd1668, 7;
	xor.b64  	%rd2243, %rd2240, %rd2242;
	xor.b64  	%rd2244, %rd2243, %rd2241;
	add.s64 	%rd2245, %rd1655, %rd1772;
	add.s64 	%rd2246, %rd2245, %rd2239;
	add.s64 	%rd2247, %rd2246, %rd2244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3393,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3394}, %rd2234;
	}
	shf.r.wrap.b32 	%r3395, %r3394, %r3393, 19;
	shf.r.wrap.b32 	%r3396, %r3393, %r3394, 19;
	mov.b64 	%rd2248, {%r3396, %r3395};
	shf.l.wrap.b32 	%r3397, %r3393, %r3394, 3;
	shf.l.wrap.b32 	%r3398, %r3394, %r3393, 3;
	mov.b64 	%rd2249, {%r3398, %r3397};
	shr.u64 	%rd2250, %rd2234, 6;
	xor.b64  	%rd2251, %rd2248, %rd2250;
	xor.b64  	%rd2252, %rd2251, %rd2249;
	shf.r.wrap.b32 	%r3399, %r3008, %r3007, 1;
	shf.r.wrap.b32 	%r3400, %r3007, %r3008, 1;
	mov.b64 	%rd2253, {%r3400, %r3399};
	shf.r.wrap.b32 	%r3401, %r3008, %r3007, 8;
	shf.r.wrap.b32 	%r3402, %r3007, %r3008, 8;
	mov.b64 	%rd2254, {%r3402, %r3401};
	shr.u64 	%rd2255, %rd1681, 7;
	xor.b64  	%rd2256, %rd2253, %rd2255;
	xor.b64  	%rd2257, %rd2256, %rd2254;
	add.s64 	%rd2258, %rd1668, %rd1785;
	add.s64 	%rd2259, %rd2258, %rd2252;
	add.s64 	%rd2260, %rd2259, %rd2257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3403,%dummy}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3404}, %rd2247;
	}
	shf.r.wrap.b32 	%r3405, %r3404, %r3403, 19;
	shf.r.wrap.b32 	%r3406, %r3403, %r3404, 19;
	mov.b64 	%rd2261, {%r3406, %r3405};
	shf.l.wrap.b32 	%r3407, %r3403, %r3404, 3;
	shf.l.wrap.b32 	%r3408, %r3404, %r3403, 3;
	mov.b64 	%rd2262, {%r3408, %r3407};
	shr.u64 	%rd2263, %rd2247, 6;
	xor.b64  	%rd2264, %rd2261, %rd2263;
	xor.b64  	%rd2265, %rd2264, %rd2262;
	shf.r.wrap.b32 	%r3409, %r3018, %r3017, 1;
	shf.r.wrap.b32 	%r3410, %r3017, %r3018, 1;
	mov.b64 	%rd2266, {%r3410, %r3409};
	shf.r.wrap.b32 	%r3411, %r3018, %r3017, 8;
	shf.r.wrap.b32 	%r3412, %r3017, %r3018, 8;
	mov.b64 	%rd2267, {%r3412, %r3411};
	shr.u64 	%rd2268, %rd1694, 7;
	xor.b64  	%rd2269, %rd2266, %rd2268;
	xor.b64  	%rd2270, %rd2269, %rd2267;
	add.s64 	%rd2271, %rd1681, %rd1798;
	add.s64 	%rd2272, %rd2271, %rd2265;
	add.s64 	%rd2273, %rd2272, %rd2270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3413,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3414}, %rd2260;
	}
	shf.r.wrap.b32 	%r3415, %r3414, %r3413, 19;
	shf.r.wrap.b32 	%r3416, %r3413, %r3414, 19;
	mov.b64 	%rd2274, {%r3416, %r3415};
	shf.l.wrap.b32 	%r3417, %r3413, %r3414, 3;
	shf.l.wrap.b32 	%r3418, %r3414, %r3413, 3;
	mov.b64 	%rd2275, {%r3418, %r3417};
	shr.u64 	%rd2276, %rd2260, 6;
	xor.b64  	%rd2277, %rd2274, %rd2276;
	xor.b64  	%rd2278, %rd2277, %rd2275;
	shf.r.wrap.b32 	%r3419, %r3028, %r3027, 1;
	shf.r.wrap.b32 	%r3420, %r3027, %r3028, 1;
	mov.b64 	%rd2279, {%r3420, %r3419};
	shf.r.wrap.b32 	%r3421, %r3028, %r3027, 8;
	shf.r.wrap.b32 	%r3422, %r3027, %r3028, 8;
	mov.b64 	%rd2280, {%r3422, %r3421};
	shr.u64 	%rd2281, %rd1707, 7;
	xor.b64  	%rd2282, %rd2279, %rd2281;
	xor.b64  	%rd2283, %rd2282, %rd2280;
	add.s64 	%rd2284, %rd1694, %rd1811;
	add.s64 	%rd2285, %rd2284, %rd2278;
	add.s64 	%rd2286, %rd2285, %rd2283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3423,%dummy}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3424}, %rd2273;
	}
	shf.r.wrap.b32 	%r3425, %r3424, %r3423, 19;
	shf.r.wrap.b32 	%r3426, %r3423, %r3424, 19;
	mov.b64 	%rd2287, {%r3426, %r3425};
	shf.l.wrap.b32 	%r3427, %r3423, %r3424, 3;
	shf.l.wrap.b32 	%r3428, %r3424, %r3423, 3;
	mov.b64 	%rd2288, {%r3428, %r3427};
	shr.u64 	%rd2289, %rd2273, 6;
	xor.b64  	%rd2290, %rd2287, %rd2289;
	xor.b64  	%rd2291, %rd2290, %rd2288;
	shf.r.wrap.b32 	%r3429, %r3038, %r3037, 1;
	shf.r.wrap.b32 	%r3430, %r3037, %r3038, 1;
	mov.b64 	%rd2292, {%r3430, %r3429};
	shf.r.wrap.b32 	%r3431, %r3038, %r3037, 8;
	shf.r.wrap.b32 	%r3432, %r3037, %r3038, 8;
	mov.b64 	%rd2293, {%r3432, %r3431};
	shr.u64 	%rd2294, %rd1720, 7;
	xor.b64  	%rd2295, %rd2292, %rd2294;
	xor.b64  	%rd2296, %rd2295, %rd2293;
	add.s64 	%rd2297, %rd2208, %rd1707;
	add.s64 	%rd2298, %rd2297, %rd2291;
	add.s64 	%rd2299, %rd2298, %rd2296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3433,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3434}, %rd2286;
	}
	shf.r.wrap.b32 	%r3435, %r3434, %r3433, 19;
	shf.r.wrap.b32 	%r3436, %r3433, %r3434, 19;
	mov.b64 	%rd2300, {%r3436, %r3435};
	shf.l.wrap.b32 	%r3437, %r3433, %r3434, 3;
	shf.l.wrap.b32 	%r3438, %r3434, %r3433, 3;
	mov.b64 	%rd2301, {%r3438, %r3437};
	shr.u64 	%rd2302, %rd2286, 6;
	xor.b64  	%rd2303, %rd2300, %rd2302;
	xor.b64  	%rd2304, %rd2303, %rd2301;
	shf.r.wrap.b32 	%r3439, %r3048, %r3047, 1;
	shf.r.wrap.b32 	%r3440, %r3047, %r3048, 1;
	mov.b64 	%rd2305, {%r3440, %r3439};
	shf.r.wrap.b32 	%r3441, %r3048, %r3047, 8;
	shf.r.wrap.b32 	%r3442, %r3047, %r3048, 8;
	mov.b64 	%rd2306, {%r3442, %r3441};
	shr.u64 	%rd2307, %rd1733, 7;
	xor.b64  	%rd2308, %rd2305, %rd2307;
	xor.b64  	%rd2309, %rd2308, %rd2306;
	add.s64 	%rd2310, %rd2221, %rd1720;
	add.s64 	%rd2311, %rd2310, %rd2304;
	add.s64 	%rd2312, %rd2311, %rd2309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3443,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3444}, %rd2299;
	}
	shf.r.wrap.b32 	%r3445, %r3444, %r3443, 19;
	shf.r.wrap.b32 	%r3446, %r3443, %r3444, 19;
	mov.b64 	%rd2313, {%r3446, %r3445};
	shf.l.wrap.b32 	%r3447, %r3443, %r3444, 3;
	shf.l.wrap.b32 	%r3448, %r3444, %r3443, 3;
	mov.b64 	%rd2314, {%r3448, %r3447};
	shr.u64 	%rd2315, %rd2299, 6;
	xor.b64  	%rd2316, %rd2313, %rd2315;
	xor.b64  	%rd2317, %rd2316, %rd2314;
	shf.r.wrap.b32 	%r3449, %r3058, %r3057, 1;
	shf.r.wrap.b32 	%r3450, %r3057, %r3058, 1;
	mov.b64 	%rd2318, {%r3450, %r3449};
	shf.r.wrap.b32 	%r3451, %r3058, %r3057, 8;
	shf.r.wrap.b32 	%r3452, %r3057, %r3058, 8;
	mov.b64 	%rd2319, {%r3452, %r3451};
	shr.u64 	%rd2320, %rd1746, 7;
	xor.b64  	%rd2321, %rd2318, %rd2320;
	xor.b64  	%rd2322, %rd2321, %rd2319;
	add.s64 	%rd2323, %rd2234, %rd1733;
	add.s64 	%rd2324, %rd2323, %rd2317;
	add.s64 	%rd2325, %rd2324, %rd2322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3453,%dummy}, %rd2312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3454}, %rd2312;
	}
	shf.r.wrap.b32 	%r3455, %r3454, %r3453, 19;
	shf.r.wrap.b32 	%r3456, %r3453, %r3454, 19;
	mov.b64 	%rd2326, {%r3456, %r3455};
	shf.l.wrap.b32 	%r3457, %r3453, %r3454, 3;
	shf.l.wrap.b32 	%r3458, %r3454, %r3453, 3;
	mov.b64 	%rd2327, {%r3458, %r3457};
	shr.u64 	%rd2328, %rd2312, 6;
	xor.b64  	%rd2329, %rd2326, %rd2328;
	xor.b64  	%rd2330, %rd2329, %rd2327;
	shf.r.wrap.b32 	%r3459, %r3068, %r3067, 1;
	shf.r.wrap.b32 	%r3460, %r3067, %r3068, 1;
	mov.b64 	%rd2331, {%r3460, %r3459};
	shf.r.wrap.b32 	%r3461, %r3068, %r3067, 8;
	shf.r.wrap.b32 	%r3462, %r3067, %r3068, 8;
	mov.b64 	%rd2332, {%r3462, %r3461};
	shr.u64 	%rd2333, %rd1759, 7;
	xor.b64  	%rd2334, %rd2331, %rd2333;
	xor.b64  	%rd2335, %rd2334, %rd2332;
	add.s64 	%rd2336, %rd2247, %rd1746;
	add.s64 	%rd2337, %rd2336, %rd2330;
	add.s64 	%rd2338, %rd2337, %rd2335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3463,%dummy}, %rd2325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3464}, %rd2325;
	}
	shf.r.wrap.b32 	%r3465, %r3464, %r3463, 19;
	shf.r.wrap.b32 	%r3466, %r3463, %r3464, 19;
	mov.b64 	%rd2339, {%r3466, %r3465};
	shf.l.wrap.b32 	%r3467, %r3463, %r3464, 3;
	shf.l.wrap.b32 	%r3468, %r3464, %r3463, 3;
	mov.b64 	%rd2340, {%r3468, %r3467};
	shr.u64 	%rd2341, %rd2325, 6;
	xor.b64  	%rd2342, %rd2339, %rd2341;
	xor.b64  	%rd2343, %rd2342, %rd2340;
	shf.r.wrap.b32 	%r3469, %r3078, %r3077, 1;
	shf.r.wrap.b32 	%r3470, %r3077, %r3078, 1;
	mov.b64 	%rd2344, {%r3470, %r3469};
	shf.r.wrap.b32 	%r3471, %r3078, %r3077, 8;
	shf.r.wrap.b32 	%r3472, %r3077, %r3078, 8;
	mov.b64 	%rd2345, {%r3472, %r3471};
	shr.u64 	%rd2346, %rd1772, 7;
	xor.b64  	%rd2347, %rd2344, %rd2346;
	xor.b64  	%rd2348, %rd2347, %rd2345;
	add.s64 	%rd2349, %rd2260, %rd1759;
	add.s64 	%rd2350, %rd2349, %rd2343;
	add.s64 	%rd2351, %rd2350, %rd2348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3473,%dummy}, %rd2338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3474}, %rd2338;
	}
	shf.r.wrap.b32 	%r3475, %r3474, %r3473, 19;
	shf.r.wrap.b32 	%r3476, %r3473, %r3474, 19;
	mov.b64 	%rd2352, {%r3476, %r3475};
	shf.l.wrap.b32 	%r3477, %r3473, %r3474, 3;
	shf.l.wrap.b32 	%r3478, %r3474, %r3473, 3;
	mov.b64 	%rd2353, {%r3478, %r3477};
	shr.u64 	%rd2354, %rd2338, 6;
	xor.b64  	%rd2355, %rd2352, %rd2354;
	xor.b64  	%rd2356, %rd2355, %rd2353;
	shf.r.wrap.b32 	%r3479, %r3088, %r3087, 1;
	shf.r.wrap.b32 	%r3480, %r3087, %r3088, 1;
	mov.b64 	%rd2357, {%r3480, %r3479};
	shf.r.wrap.b32 	%r3481, %r3088, %r3087, 8;
	shf.r.wrap.b32 	%r3482, %r3087, %r3088, 8;
	mov.b64 	%rd2358, {%r3482, %r3481};
	shr.u64 	%rd2359, %rd1785, 7;
	xor.b64  	%rd2360, %rd2357, %rd2359;
	xor.b64  	%rd2361, %rd2360, %rd2358;
	add.s64 	%rd2362, %rd2273, %rd1772;
	add.s64 	%rd2363, %rd2362, %rd2356;
	add.s64 	%rd2364, %rd2363, %rd2361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3483,%dummy}, %rd2184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3484}, %rd2184;
	}
	shf.r.wrap.b32 	%r3485, %r3484, %r3483, 14;
	shf.r.wrap.b32 	%r3486, %r3483, %r3484, 14;
	mov.b64 	%rd2365, {%r3486, %r3485};
	shf.r.wrap.b32 	%r3487, %r3484, %r3483, 18;
	shf.r.wrap.b32 	%r3488, %r3483, %r3484, 18;
	mov.b64 	%rd2366, {%r3488, %r3487};
	xor.b64  	%rd2367, %rd2366, %rd2365;
	shf.l.wrap.b32 	%r3489, %r3483, %r3484, 23;
	shf.l.wrap.b32 	%r3490, %r3484, %r3483, 23;
	mov.b64 	%rd2368, {%r3490, %r3489};
	xor.b64  	%rd2369, %rd2367, %rd2368;
	xor.b64  	%rd2370, %rd2136, %rd2160;
	and.b64  	%rd2371, %rd2370, %rd2184;
	xor.b64  	%rd2372, %rd2371, %rd2136;
	add.s64 	%rd2373, %rd2372, %rd2112;
	add.s64 	%rd2374, %rd2373, %rd2208;
	add.s64 	%rd2375, %rd2374, %rd2744;
	add.s64 	%rd2376, %rd2375, %rd2369;
	add.s64 	%rd2377, %rd2376, %rd2123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3491,%dummy}, %rd2195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3492}, %rd2195;
	}
	shf.r.wrap.b32 	%r3493, %r3492, %r3491, 28;
	shf.r.wrap.b32 	%r3494, %r3491, %r3492, 28;
	mov.b64 	%rd2378, {%r3494, %r3493};
	shf.l.wrap.b32 	%r3495, %r3491, %r3492, 30;
	shf.l.wrap.b32 	%r3496, %r3492, %r3491, 30;
	mov.b64 	%rd2379, {%r3496, %r3495};
	xor.b64  	%rd2380, %rd2379, %rd2378;
	shf.l.wrap.b32 	%r3497, %r3491, %r3492, 25;
	shf.l.wrap.b32 	%r3498, %r3492, %r3491, 25;
	mov.b64 	%rd2381, {%r3498, %r3497};
	xor.b64  	%rd2382, %rd2380, %rd2381;
	xor.b64  	%rd2383, %rd2195, %rd2147;
	xor.b64  	%rd2384, %rd2195, %rd2171;
	and.b64  	%rd2385, %rd2384, %rd2383;
	xor.b64  	%rd2386, %rd2385, %rd2195;
	add.s64 	%rd2387, %rd2376, %rd2386;
	add.s64 	%rd2388, %rd2387, %rd2382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3499,%dummy}, %rd2377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3500}, %rd2377;
	}
	shf.r.wrap.b32 	%r3501, %r3500, %r3499, 14;
	shf.r.wrap.b32 	%r3502, %r3499, %r3500, 14;
	mov.b64 	%rd2389, {%r3502, %r3501};
	shf.r.wrap.b32 	%r3503, %r3500, %r3499, 18;
	shf.r.wrap.b32 	%r3504, %r3499, %r3500, 18;
	mov.b64 	%rd2390, {%r3504, %r3503};
	xor.b64  	%rd2391, %rd2390, %rd2389;
	shf.l.wrap.b32 	%r3505, %r3499, %r3500, 23;
	shf.l.wrap.b32 	%r3506, %r3500, %r3499, 23;
	mov.b64 	%rd2392, {%r3506, %r3505};
	xor.b64  	%rd2393, %rd2391, %rd2392;
	xor.b64  	%rd2394, %rd2160, %rd2184;
	and.b64  	%rd2395, %rd2377, %rd2394;
	xor.b64  	%rd2396, %rd2395, %rd2160;
	add.s64 	%rd2397, %rd2221, %rd2136;
	add.s64 	%rd2398, %rd2397, %rd2745;
	add.s64 	%rd2399, %rd2398, %rd2396;
	add.s64 	%rd2400, %rd2399, %rd2393;
	add.s64 	%rd2401, %rd2400, %rd2147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3507,%dummy}, %rd2388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3508}, %rd2388;
	}
	shf.r.wrap.b32 	%r3509, %r3508, %r3507, 28;
	shf.r.wrap.b32 	%r3510, %r3507, %r3508, 28;
	mov.b64 	%rd2402, {%r3510, %r3509};
	shf.l.wrap.b32 	%r3511, %r3507, %r3508, 30;
	shf.l.wrap.b32 	%r3512, %r3508, %r3507, 30;
	mov.b64 	%rd2403, {%r3512, %r3511};
	xor.b64  	%rd2404, %rd2403, %rd2402;
	shf.l.wrap.b32 	%r3513, %r3507, %r3508, 25;
	shf.l.wrap.b32 	%r3514, %r3508, %r3507, 25;
	mov.b64 	%rd2405, {%r3514, %r3513};
	xor.b64  	%rd2406, %rd2404, %rd2405;
	xor.b64  	%rd2407, %rd2388, %rd2171;
	xor.b64  	%rd2408, %rd2388, %rd2195;
	and.b64  	%rd2409, %rd2408, %rd2407;
	xor.b64  	%rd2410, %rd2409, %rd2388;
	add.s64 	%rd2411, %rd2400, %rd2410;
	add.s64 	%rd2412, %rd2411, %rd2406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3515,%dummy}, %rd2401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3516}, %rd2401;
	}
	shf.r.wrap.b32 	%r3517, %r3516, %r3515, 14;
	shf.r.wrap.b32 	%r3518, %r3515, %r3516, 14;
	mov.b64 	%rd2413, {%r3518, %r3517};
	shf.r.wrap.b32 	%r3519, %r3516, %r3515, 18;
	shf.r.wrap.b32 	%r3520, %r3515, %r3516, 18;
	mov.b64 	%rd2414, {%r3520, %r3519};
	xor.b64  	%rd2415, %rd2414, %rd2413;
	shf.l.wrap.b32 	%r3521, %r3515, %r3516, 23;
	shf.l.wrap.b32 	%r3522, %r3516, %r3515, 23;
	mov.b64 	%rd2416, {%r3522, %r3521};
	xor.b64  	%rd2417, %rd2415, %rd2416;
	xor.b64  	%rd2418, %rd2377, %rd2184;
	and.b64  	%rd2419, %rd2401, %rd2418;
	xor.b64  	%rd2420, %rd2419, %rd2184;
	add.s64 	%rd2421, %rd2234, %rd2160;
	add.s64 	%rd2422, %rd2421, %rd2746;
	add.s64 	%rd2423, %rd2422, %rd2420;
	add.s64 	%rd2424, %rd2423, %rd2417;
	add.s64 	%rd2425, %rd2424, %rd2171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3523,%dummy}, %rd2412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3524}, %rd2412;
	}
	shf.r.wrap.b32 	%r3525, %r3524, %r3523, 28;
	shf.r.wrap.b32 	%r3526, %r3523, %r3524, 28;
	mov.b64 	%rd2426, {%r3526, %r3525};
	shf.l.wrap.b32 	%r3527, %r3523, %r3524, 30;
	shf.l.wrap.b32 	%r3528, %r3524, %r3523, 30;
	mov.b64 	%rd2427, {%r3528, %r3527};
	xor.b64  	%rd2428, %rd2427, %rd2426;
	shf.l.wrap.b32 	%r3529, %r3523, %r3524, 25;
	shf.l.wrap.b32 	%r3530, %r3524, %r3523, 25;
	mov.b64 	%rd2429, {%r3530, %r3529};
	xor.b64  	%rd2430, %rd2428, %rd2429;
	xor.b64  	%rd2431, %rd2412, %rd2195;
	xor.b64  	%rd2432, %rd2412, %rd2388;
	and.b64  	%rd2433, %rd2432, %rd2431;
	xor.b64  	%rd2434, %rd2433, %rd2412;
	add.s64 	%rd2435, %rd2424, %rd2434;
	add.s64 	%rd2436, %rd2435, %rd2430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3531,%dummy}, %rd2425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3532}, %rd2425;
	}
	shf.r.wrap.b32 	%r3533, %r3532, %r3531, 14;
	shf.r.wrap.b32 	%r3534, %r3531, %r3532, 14;
	mov.b64 	%rd2437, {%r3534, %r3533};
	shf.r.wrap.b32 	%r3535, %r3532, %r3531, 18;
	shf.r.wrap.b32 	%r3536, %r3531, %r3532, 18;
	mov.b64 	%rd2438, {%r3536, %r3535};
	xor.b64  	%rd2439, %rd2438, %rd2437;
	shf.l.wrap.b32 	%r3537, %r3531, %r3532, 23;
	shf.l.wrap.b32 	%r3538, %r3532, %r3531, 23;
	mov.b64 	%rd2440, {%r3538, %r3537};
	xor.b64  	%rd2441, %rd2439, %rd2440;
	xor.b64  	%rd2442, %rd2401, %rd2377;
	and.b64  	%rd2443, %rd2425, %rd2442;
	xor.b64  	%rd2444, %rd2443, %rd2377;
	add.s64 	%rd2445, %rd2247, %rd2184;
	add.s64 	%rd2446, %rd2445, %rd2747;
	add.s64 	%rd2447, %rd2446, %rd2444;
	add.s64 	%rd2448, %rd2447, %rd2441;
	add.s64 	%rd2449, %rd2448, %rd2195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3539,%dummy}, %rd2436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3540}, %rd2436;
	}
	shf.r.wrap.b32 	%r3541, %r3540, %r3539, 28;
	shf.r.wrap.b32 	%r3542, %r3539, %r3540, 28;
	mov.b64 	%rd2450, {%r3542, %r3541};
	shf.l.wrap.b32 	%r3543, %r3539, %r3540, 30;
	shf.l.wrap.b32 	%r3544, %r3540, %r3539, 30;
	mov.b64 	%rd2451, {%r3544, %r3543};
	xor.b64  	%rd2452, %rd2451, %rd2450;
	shf.l.wrap.b32 	%r3545, %r3539, %r3540, 25;
	shf.l.wrap.b32 	%r3546, %r3540, %r3539, 25;
	mov.b64 	%rd2453, {%r3546, %r3545};
	xor.b64  	%rd2454, %rd2452, %rd2453;
	xor.b64  	%rd2455, %rd2436, %rd2388;
	xor.b64  	%rd2456, %rd2436, %rd2412;
	and.b64  	%rd2457, %rd2456, %rd2455;
	xor.b64  	%rd2458, %rd2457, %rd2436;
	add.s64 	%rd2459, %rd2448, %rd2458;
	add.s64 	%rd2460, %rd2459, %rd2454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3547,%dummy}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3548}, %rd2449;
	}
	shf.r.wrap.b32 	%r3549, %r3548, %r3547, 14;
	shf.r.wrap.b32 	%r3550, %r3547, %r3548, 14;
	mov.b64 	%rd2461, {%r3550, %r3549};
	shf.r.wrap.b32 	%r3551, %r3548, %r3547, 18;
	shf.r.wrap.b32 	%r3552, %r3547, %r3548, 18;
	mov.b64 	%rd2462, {%r3552, %r3551};
	xor.b64  	%rd2463, %rd2462, %rd2461;
	shf.l.wrap.b32 	%r3553, %r3547, %r3548, 23;
	shf.l.wrap.b32 	%r3554, %r3548, %r3547, 23;
	mov.b64 	%rd2464, {%r3554, %r3553};
	xor.b64  	%rd2465, %rd2463, %rd2464;
	xor.b64  	%rd2466, %rd2425, %rd2401;
	and.b64  	%rd2467, %rd2449, %rd2466;
	xor.b64  	%rd2468, %rd2467, %rd2401;
	add.s64 	%rd2469, %rd2377, %rd2260;
	add.s64 	%rd2470, %rd2469, %rd2748;
	add.s64 	%rd2471, %rd2470, %rd2468;
	add.s64 	%rd2472, %rd2471, %rd2465;
	add.s64 	%rd2473, %rd2472, %rd2388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3555,%dummy}, %rd2460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3556}, %rd2460;
	}
	shf.r.wrap.b32 	%r3557, %r3556, %r3555, 28;
	shf.r.wrap.b32 	%r3558, %r3555, %r3556, 28;
	mov.b64 	%rd2474, {%r3558, %r3557};
	shf.l.wrap.b32 	%r3559, %r3555, %r3556, 30;
	shf.l.wrap.b32 	%r3560, %r3556, %r3555, 30;
	mov.b64 	%rd2475, {%r3560, %r3559};
	xor.b64  	%rd2476, %rd2475, %rd2474;
	shf.l.wrap.b32 	%r3561, %r3555, %r3556, 25;
	shf.l.wrap.b32 	%r3562, %r3556, %r3555, 25;
	mov.b64 	%rd2477, {%r3562, %r3561};
	xor.b64  	%rd2478, %rd2476, %rd2477;
	xor.b64  	%rd2479, %rd2460, %rd2412;
	xor.b64  	%rd2480, %rd2460, %rd2436;
	and.b64  	%rd2481, %rd2480, %rd2479;
	xor.b64  	%rd2482, %rd2481, %rd2460;
	add.s64 	%rd2483, %rd2472, %rd2482;
	add.s64 	%rd2484, %rd2483, %rd2478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3563,%dummy}, %rd2473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3564}, %rd2473;
	}
	shf.r.wrap.b32 	%r3565, %r3564, %r3563, 14;
	shf.r.wrap.b32 	%r3566, %r3563, %r3564, 14;
	mov.b64 	%rd2485, {%r3566, %r3565};
	shf.r.wrap.b32 	%r3567, %r3564, %r3563, 18;
	shf.r.wrap.b32 	%r3568, %r3563, %r3564, 18;
	mov.b64 	%rd2486, {%r3568, %r3567};
	xor.b64  	%rd2487, %rd2486, %rd2485;
	shf.l.wrap.b32 	%r3569, %r3563, %r3564, 23;
	shf.l.wrap.b32 	%r3570, %r3564, %r3563, 23;
	mov.b64 	%rd2488, {%r3570, %r3569};
	xor.b64  	%rd2489, %rd2487, %rd2488;
	xor.b64  	%rd2490, %rd2449, %rd2425;
	and.b64  	%rd2491, %rd2473, %rd2490;
	xor.b64  	%rd2492, %rd2491, %rd2425;
	add.s64 	%rd2493, %rd2401, %rd2273;
	add.s64 	%rd2494, %rd2493, %rd2749;
	add.s64 	%rd2495, %rd2494, %rd2492;
	add.s64 	%rd2496, %rd2495, %rd2489;
	add.s64 	%rd2497, %rd2496, %rd2412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3571,%dummy}, %rd2484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3572}, %rd2484;
	}
	shf.r.wrap.b32 	%r3573, %r3572, %r3571, 28;
	shf.r.wrap.b32 	%r3574, %r3571, %r3572, 28;
	mov.b64 	%rd2498, {%r3574, %r3573};
	shf.l.wrap.b32 	%r3575, %r3571, %r3572, 30;
	shf.l.wrap.b32 	%r3576, %r3572, %r3571, 30;
	mov.b64 	%rd2499, {%r3576, %r3575};
	xor.b64  	%rd2500, %rd2499, %rd2498;
	shf.l.wrap.b32 	%r3577, %r3571, %r3572, 25;
	shf.l.wrap.b32 	%r3578, %r3572, %r3571, 25;
	mov.b64 	%rd2501, {%r3578, %r3577};
	xor.b64  	%rd2502, %rd2500, %rd2501;
	xor.b64  	%rd2503, %rd2484, %rd2436;
	xor.b64  	%rd2504, %rd2484, %rd2460;
	and.b64  	%rd2505, %rd2504, %rd2503;
	xor.b64  	%rd2506, %rd2505, %rd2484;
	add.s64 	%rd2507, %rd2496, %rd2506;
	add.s64 	%rd2508, %rd2507, %rd2502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3579,%dummy}, %rd2497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3580}, %rd2497;
	}
	shf.r.wrap.b32 	%r3581, %r3580, %r3579, 14;
	shf.r.wrap.b32 	%r3582, %r3579, %r3580, 14;
	mov.b64 	%rd2509, {%r3582, %r3581};
	shf.r.wrap.b32 	%r3583, %r3580, %r3579, 18;
	shf.r.wrap.b32 	%r3584, %r3579, %r3580, 18;
	mov.b64 	%rd2510, {%r3584, %r3583};
	xor.b64  	%rd2511, %rd2510, %rd2509;
	shf.l.wrap.b32 	%r3585, %r3579, %r3580, 23;
	shf.l.wrap.b32 	%r3586, %r3580, %r3579, 23;
	mov.b64 	%rd2512, {%r3586, %r3585};
	xor.b64  	%rd2513, %rd2511, %rd2512;
	xor.b64  	%rd2514, %rd2473, %rd2449;
	and.b64  	%rd2515, %rd2497, %rd2514;
	xor.b64  	%rd2516, %rd2515, %rd2449;
	add.s64 	%rd2517, %rd2425, %rd2286;
	add.s64 	%rd2518, %rd2517, %rd2750;
	add.s64 	%rd2519, %rd2518, %rd2516;
	add.s64 	%rd2520, %rd2519, %rd2513;
	add.s64 	%rd2521, %rd2520, %rd2436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3587,%dummy}, %rd2508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3588}, %rd2508;
	}
	shf.r.wrap.b32 	%r3589, %r3588, %r3587, 28;
	shf.r.wrap.b32 	%r3590, %r3587, %r3588, 28;
	mov.b64 	%rd2522, {%r3590, %r3589};
	shf.l.wrap.b32 	%r3591, %r3587, %r3588, 30;
	shf.l.wrap.b32 	%r3592, %r3588, %r3587, 30;
	mov.b64 	%rd2523, {%r3592, %r3591};
	xor.b64  	%rd2524, %rd2523, %rd2522;
	shf.l.wrap.b32 	%r3593, %r3587, %r3588, 25;
	shf.l.wrap.b32 	%r3594, %r3588, %r3587, 25;
	mov.b64 	%rd2525, {%r3594, %r3593};
	xor.b64  	%rd2526, %rd2524, %rd2525;
	xor.b64  	%rd2527, %rd2508, %rd2460;
	xor.b64  	%rd2528, %rd2508, %rd2484;
	and.b64  	%rd2529, %rd2528, %rd2527;
	xor.b64  	%rd2530, %rd2529, %rd2508;
	add.s64 	%rd2531, %rd2520, %rd2530;
	add.s64 	%rd2532, %rd2531, %rd2526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3595,%dummy}, %rd2521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3596}, %rd2521;
	}
	shf.r.wrap.b32 	%r3597, %r3596, %r3595, 14;
	shf.r.wrap.b32 	%r3598, %r3595, %r3596, 14;
	mov.b64 	%rd2533, {%r3598, %r3597};
	shf.r.wrap.b32 	%r3599, %r3596, %r3595, 18;
	shf.r.wrap.b32 	%r3600, %r3595, %r3596, 18;
	mov.b64 	%rd2534, {%r3600, %r3599};
	xor.b64  	%rd2535, %rd2534, %rd2533;
	shf.l.wrap.b32 	%r3601, %r3595, %r3596, 23;
	shf.l.wrap.b32 	%r3602, %r3596, %r3595, 23;
	mov.b64 	%rd2536, {%r3602, %r3601};
	xor.b64  	%rd2537, %rd2535, %rd2536;
	xor.b64  	%rd2538, %rd2497, %rd2473;
	and.b64  	%rd2539, %rd2521, %rd2538;
	xor.b64  	%rd2540, %rd2539, %rd2473;
	add.s64 	%rd2541, %rd2449, %rd2299;
	add.s64 	%rd2542, %rd2541, %rd2751;
	add.s64 	%rd2543, %rd2542, %rd2540;
	add.s64 	%rd2544, %rd2543, %rd2537;
	add.s64 	%rd2545, %rd2544, %rd2460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3603,%dummy}, %rd2532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3604}, %rd2532;
	}
	shf.r.wrap.b32 	%r3605, %r3604, %r3603, 28;
	shf.r.wrap.b32 	%r3606, %r3603, %r3604, 28;
	mov.b64 	%rd2546, {%r3606, %r3605};
	shf.l.wrap.b32 	%r3607, %r3603, %r3604, 30;
	shf.l.wrap.b32 	%r3608, %r3604, %r3603, 30;
	mov.b64 	%rd2547, {%r3608, %r3607};
	xor.b64  	%rd2548, %rd2547, %rd2546;
	shf.l.wrap.b32 	%r3609, %r3603, %r3604, 25;
	shf.l.wrap.b32 	%r3610, %r3604, %r3603, 25;
	mov.b64 	%rd2549, {%r3610, %r3609};
	xor.b64  	%rd2550, %rd2548, %rd2549;
	xor.b64  	%rd2551, %rd2532, %rd2484;
	xor.b64  	%rd2552, %rd2532, %rd2508;
	and.b64  	%rd2553, %rd2552, %rd2551;
	xor.b64  	%rd2554, %rd2553, %rd2532;
	add.s64 	%rd2555, %rd2544, %rd2554;
	add.s64 	%rd2556, %rd2555, %rd2550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3611,%dummy}, %rd2545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3612}, %rd2545;
	}
	shf.r.wrap.b32 	%r3613, %r3612, %r3611, 14;
	shf.r.wrap.b32 	%r3614, %r3611, %r3612, 14;
	mov.b64 	%rd2557, {%r3614, %r3613};
	shf.r.wrap.b32 	%r3615, %r3612, %r3611, 18;
	shf.r.wrap.b32 	%r3616, %r3611, %r3612, 18;
	mov.b64 	%rd2558, {%r3616, %r3615};
	xor.b64  	%rd2559, %rd2558, %rd2557;
	shf.l.wrap.b32 	%r3617, %r3611, %r3612, 23;
	shf.l.wrap.b32 	%r3618, %r3612, %r3611, 23;
	mov.b64 	%rd2560, {%r3618, %r3617};
	xor.b64  	%rd2561, %rd2559, %rd2560;
	xor.b64  	%rd2562, %rd2521, %rd2497;
	and.b64  	%rd2563, %rd2545, %rd2562;
	xor.b64  	%rd2564, %rd2563, %rd2497;
	add.s64 	%rd2565, %rd2473, %rd2312;
	add.s64 	%rd2566, %rd2565, %rd2752;
	add.s64 	%rd2567, %rd2566, %rd2564;
	add.s64 	%rd2568, %rd2567, %rd2561;
	add.s64 	%rd2569, %rd2568, %rd2484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3619,%dummy}, %rd2556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3620}, %rd2556;
	}
	shf.r.wrap.b32 	%r3621, %r3620, %r3619, 28;
	shf.r.wrap.b32 	%r3622, %r3619, %r3620, 28;
	mov.b64 	%rd2570, {%r3622, %r3621};
	shf.l.wrap.b32 	%r3623, %r3619, %r3620, 30;
	shf.l.wrap.b32 	%r3624, %r3620, %r3619, 30;
	mov.b64 	%rd2571, {%r3624, %r3623};
	xor.b64  	%rd2572, %rd2571, %rd2570;
	shf.l.wrap.b32 	%r3625, %r3619, %r3620, 25;
	shf.l.wrap.b32 	%r3626, %r3620, %r3619, 25;
	mov.b64 	%rd2573, {%r3626, %r3625};
	xor.b64  	%rd2574, %rd2572, %rd2573;
	xor.b64  	%rd2575, %rd2556, %rd2508;
	xor.b64  	%rd2576, %rd2556, %rd2532;
	and.b64  	%rd2577, %rd2576, %rd2575;
	xor.b64  	%rd2578, %rd2577, %rd2556;
	add.s64 	%rd2579, %rd2568, %rd2578;
	add.s64 	%rd2580, %rd2579, %rd2574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3627,%dummy}, %rd2569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3628}, %rd2569;
	}
	shf.r.wrap.b32 	%r3629, %r3628, %r3627, 14;
	shf.r.wrap.b32 	%r3630, %r3627, %r3628, 14;
	mov.b64 	%rd2581, {%r3630, %r3629};
	shf.r.wrap.b32 	%r3631, %r3628, %r3627, 18;
	shf.r.wrap.b32 	%r3632, %r3627, %r3628, 18;
	mov.b64 	%rd2582, {%r3632, %r3631};
	xor.b64  	%rd2583, %rd2582, %rd2581;
	shf.l.wrap.b32 	%r3633, %r3627, %r3628, 23;
	shf.l.wrap.b32 	%r3634, %r3628, %r3627, 23;
	mov.b64 	%rd2584, {%r3634, %r3633};
	xor.b64  	%rd2585, %rd2583, %rd2584;
	xor.b64  	%rd2586, %rd2545, %rd2521;
	and.b64  	%rd2587, %rd2569, %rd2586;
	xor.b64  	%rd2588, %rd2587, %rd2521;
	add.s64 	%rd2589, %rd2497, %rd2325;
	add.s64 	%rd2590, %rd2589, %rd2753;
	add.s64 	%rd2591, %rd2590, %rd2588;
	add.s64 	%rd2592, %rd2591, %rd2585;
	add.s64 	%rd2593, %rd2592, %rd2508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3635,%dummy}, %rd2580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3636}, %rd2580;
	}
	shf.r.wrap.b32 	%r3637, %r3636, %r3635, 28;
	shf.r.wrap.b32 	%r3638, %r3635, %r3636, 28;
	mov.b64 	%rd2594, {%r3638, %r3637};
	shf.l.wrap.b32 	%r3639, %r3635, %r3636, 30;
	shf.l.wrap.b32 	%r3640, %r3636, %r3635, 30;
	mov.b64 	%rd2595, {%r3640, %r3639};
	xor.b64  	%rd2596, %rd2595, %rd2594;
	shf.l.wrap.b32 	%r3641, %r3635, %r3636, 25;
	shf.l.wrap.b32 	%r3642, %r3636, %r3635, 25;
	mov.b64 	%rd2597, {%r3642, %r3641};
	xor.b64  	%rd2598, %rd2596, %rd2597;
	xor.b64  	%rd2599, %rd2580, %rd2532;
	xor.b64  	%rd2600, %rd2580, %rd2556;
	and.b64  	%rd2601, %rd2600, %rd2599;
	xor.b64  	%rd2602, %rd2601, %rd2580;
	add.s64 	%rd2603, %rd2592, %rd2602;
	add.s64 	%rd2604, %rd2603, %rd2598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3643,%dummy}, %rd2593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3644}, %rd2593;
	}
	shf.r.wrap.b32 	%r3645, %r3644, %r3643, 14;
	shf.r.wrap.b32 	%r3646, %r3643, %r3644, 14;
	mov.b64 	%rd2605, {%r3646, %r3645};
	shf.r.wrap.b32 	%r3647, %r3644, %r3643, 18;
	shf.r.wrap.b32 	%r3648, %r3643, %r3644, 18;
	mov.b64 	%rd2606, {%r3648, %r3647};
	xor.b64  	%rd2607, %rd2606, %rd2605;
	shf.l.wrap.b32 	%r3649, %r3643, %r3644, 23;
	shf.l.wrap.b32 	%r3650, %r3644, %r3643, 23;
	mov.b64 	%rd2608, {%r3650, %r3649};
	xor.b64  	%rd2609, %rd2607, %rd2608;
	xor.b64  	%rd2610, %rd2569, %rd2545;
	and.b64  	%rd2611, %rd2593, %rd2610;
	xor.b64  	%rd2612, %rd2611, %rd2545;
	add.s64 	%rd2613, %rd2521, %rd2338;
	add.s64 	%rd2614, %rd2613, %rd2754;
	add.s64 	%rd2615, %rd2614, %rd2612;
	add.s64 	%rd2616, %rd2615, %rd2609;
	add.s64 	%rd2617, %rd2616, %rd2532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3651,%dummy}, %rd2604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3652}, %rd2604;
	}
	shf.r.wrap.b32 	%r3653, %r3652, %r3651, 28;
	shf.r.wrap.b32 	%r3654, %r3651, %r3652, 28;
	mov.b64 	%rd2618, {%r3654, %r3653};
	shf.l.wrap.b32 	%r3655, %r3651, %r3652, 30;
	shf.l.wrap.b32 	%r3656, %r3652, %r3651, 30;
	mov.b64 	%rd2619, {%r3656, %r3655};
	xor.b64  	%rd2620, %rd2619, %rd2618;
	shf.l.wrap.b32 	%r3657, %r3651, %r3652, 25;
	shf.l.wrap.b32 	%r3658, %r3652, %r3651, 25;
	mov.b64 	%rd2621, {%r3658, %r3657};
	xor.b64  	%rd2622, %rd2620, %rd2621;
	xor.b64  	%rd2623, %rd2604, %rd2556;
	xor.b64  	%rd2624, %rd2604, %rd2580;
	and.b64  	%rd2625, %rd2624, %rd2623;
	xor.b64  	%rd2626, %rd2625, %rd2604;
	add.s64 	%rd2627, %rd2616, %rd2626;
	add.s64 	%rd2628, %rd2627, %rd2622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3659,%dummy}, %rd2617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3660}, %rd2617;
	}
	shf.r.wrap.b32 	%r3661, %r3660, %r3659, 14;
	shf.r.wrap.b32 	%r3662, %r3659, %r3660, 14;
	mov.b64 	%rd2629, {%r3662, %r3661};
	shf.r.wrap.b32 	%r3663, %r3660, %r3659, 18;
	shf.r.wrap.b32 	%r3664, %r3659, %r3660, 18;
	mov.b64 	%rd2630, {%r3664, %r3663};
	xor.b64  	%rd2631, %rd2630, %rd2629;
	shf.l.wrap.b32 	%r3665, %r3659, %r3660, 23;
	shf.l.wrap.b32 	%r3666, %r3660, %r3659, 23;
	mov.b64 	%rd2632, {%r3666, %r3665};
	xor.b64  	%rd2633, %rd2631, %rd2632;
	xor.b64  	%rd2634, %rd2593, %rd2569;
	and.b64  	%rd2635, %rd2617, %rd2634;
	xor.b64  	%rd2636, %rd2635, %rd2569;
	add.s64 	%rd2637, %rd2545, %rd2351;
	add.s64 	%rd2638, %rd2637, %rd2755;
	add.s64 	%rd2639, %rd2638, %rd2636;
	add.s64 	%rd2640, %rd2639, %rd2633;
	add.s64 	%rd2641, %rd2640, %rd2556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3667,%dummy}, %rd2628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3668}, %rd2628;
	}
	shf.r.wrap.b32 	%r3669, %r3668, %r3667, 28;
	shf.r.wrap.b32 	%r3670, %r3667, %r3668, 28;
	mov.b64 	%rd2642, {%r3670, %r3669};
	shf.l.wrap.b32 	%r3671, %r3667, %r3668, 30;
	shf.l.wrap.b32 	%r3672, %r3668, %r3667, 30;
	mov.b64 	%rd2643, {%r3672, %r3671};
	xor.b64  	%rd2644, %rd2643, %rd2642;
	shf.l.wrap.b32 	%r3673, %r3667, %r3668, 25;
	shf.l.wrap.b32 	%r3674, %r3668, %r3667, 25;
	mov.b64 	%rd2645, {%r3674, %r3673};
	xor.b64  	%rd2646, %rd2644, %rd2645;
	xor.b64  	%rd2647, %rd2628, %rd2580;
	xor.b64  	%rd2648, %rd2628, %rd2604;
	and.b64  	%rd2649, %rd2648, %rd2647;
	xor.b64  	%rd2650, %rd2649, %rd2628;
	add.s64 	%rd2651, %rd2640, %rd2650;
	add.s64 	%rd2652, %rd2651, %rd2646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3675,%dummy}, %rd2641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3676}, %rd2641;
	}
	shf.r.wrap.b32 	%r3677, %r3676, %r3675, 14;
	shf.r.wrap.b32 	%r3678, %r3675, %r3676, 14;
	mov.b64 	%rd2653, {%r3678, %r3677};
	shf.r.wrap.b32 	%r3679, %r3676, %r3675, 18;
	shf.r.wrap.b32 	%r3680, %r3675, %r3676, 18;
	mov.b64 	%rd2654, {%r3680, %r3679};
	xor.b64  	%rd2655, %rd2654, %rd2653;
	shf.l.wrap.b32 	%r3681, %r3675, %r3676, 23;
	shf.l.wrap.b32 	%r3682, %r3676, %r3675, 23;
	mov.b64 	%rd2656, {%r3682, %r3681};
	xor.b64  	%rd2657, %rd2655, %rd2656;
	xor.b64  	%rd2658, %rd2617, %rd2593;
	and.b64  	%rd2659, %rd2641, %rd2658;
	xor.b64  	%rd2660, %rd2659, %rd2593;
	add.s64 	%rd2661, %rd2569, %rd2364;
	add.s64 	%rd2662, %rd2661, %rd2756;
	add.s64 	%rd2663, %rd2662, %rd2660;
	add.s64 	%rd2664, %rd2663, %rd2657;
	add.s64 	%rd84, %rd2664, %rd2580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3683,%dummy}, %rd2652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3684}, %rd2652;
	}
	shf.r.wrap.b32 	%r3685, %r3684, %r3683, 28;
	shf.r.wrap.b32 	%r3686, %r3683, %r3684, 28;
	mov.b64 	%rd2665, {%r3686, %r3685};
	shf.l.wrap.b32 	%r3687, %r3683, %r3684, 30;
	shf.l.wrap.b32 	%r3688, %r3684, %r3683, 30;
	mov.b64 	%rd2666, {%r3688, %r3687};
	xor.b64  	%rd2667, %rd2666, %rd2665;
	shf.l.wrap.b32 	%r3689, %r3683, %r3684, 25;
	shf.l.wrap.b32 	%r3690, %r3684, %r3683, 25;
	mov.b64 	%rd2668, {%r3690, %r3689};
	xor.b64  	%rd2669, %rd2667, %rd2668;
	xor.b64  	%rd2670, %rd2652, %rd2604;
	xor.b64  	%rd2671, %rd2652, %rd2628;
	and.b64  	%rd2672, %rd2671, %rd2670;
	xor.b64  	%rd2673, %rd2672, %rd2652;
	add.s64 	%rd2674, %rd2664, %rd2673;
	add.s64 	%rd85, %rd2674, %rd2669;
	cvt.u32.u64	%r3691, %rd84;
	setp.ne.s32	%p50, %r3691, %r11;
	@%p50 bra 	BB4_100;

	shr.u64 	%rd2675, %rd85, 32;
	cvt.u32.u64	%r3692, %rd2675;
	shr.u64 	%rd2676, %rd84, 32;
	cvt.u32.u64	%r3693, %rd2676;
	setp.eq.s32	%p51, %r3693, %r12;
	cvt.u32.u64	%r3694, %rd85;
	setp.eq.s32	%p52, %r3694, %r13;
	and.pred  	%p53, %p51, %p52;
	setp.eq.s32	%p54, %r3692, %r14;
	and.pred  	%p55, %p53, %p54;
	@!%p55 bra 	BB4_100;
	bra.uni 	BB4_96;

BB4_96:
	atom.global.add.u32 	%r3695, [%rd20], 1;
	setp.ne.s32	%p56, %r3695, 0;
	@%p56 bra 	BB4_100;

	ld.param.u32 	%r3704, [m01700_s04_param_31];
	atom.global.add.u32 	%r266, [%rd91], 1;
	setp.lt.u32	%p57, %r266, %r3704;
	@%p57 bra 	BB4_99;
	bra.uni 	BB4_98;

BB4_99:
	ld.param.u32 	%r3705, [m01700_s04_param_27];
	ld.param.u64 	%rd2757, [m01700_s04_param_14];
	mov.u32 	%r3702, 0;
	ld.param.u32 	%r3701, [m01700_s04_param_32];
	mul.wide.u32 	%rd2677, %r266, 20;
	add.s64 	%rd2678, %rd2757, %rd2677;
	st.global.u32 	[%rd2678], %r3705;
	st.global.u32 	[%rd2678+4], %r3702;
	st.global.u32 	[%rd2678+8], %r3701;
	st.global.u32 	[%rd2678+12], %r1;
	st.global.u32 	[%rd2678+16], %r3706;
	bra.uni 	BB4_100;

BB4_98:
	atom.global.add.u32 	%r3696, [%rd91], -1;

BB4_100:
	ld.param.u32 	%r3703, [m01700_s04_param_30];
	add.s32 	%r3706, %r3706, 1;
	setp.lt.u32	%p58, %r3706, %r3703;
	@%p58 bra 	BB4_3;

BB4_101:
	ret;
}

	// .globl	m01700_s08
.entry m01700_s08(
	.param .u64 .ptr .global .align 4 m01700_s08_param_0,
	.param .u64 .ptr .global .align 4 m01700_s08_param_1,
	.param .u64 .ptr .global .align 4 m01700_s08_param_2,
	.param .u64 .ptr .global .align 4 m01700_s08_param_3,
	.param .u64 .ptr .global .align 1 m01700_s08_param_4,
	.param .u64 .ptr .global .align 1 m01700_s08_param_5,
	.param .u64 .ptr .global .align 4 m01700_s08_param_6,
	.param .u64 .ptr .global .align 4 m01700_s08_param_7,
	.param .u64 .ptr .global .align 4 m01700_s08_param_8,
	.param .u64 .ptr .global .align 4 m01700_s08_param_9,
	.param .u64 .ptr .global .align 4 m01700_s08_param_10,
	.param .u64 .ptr .global .align 4 m01700_s08_param_11,
	.param .u64 .ptr .global .align 4 m01700_s08_param_12,
	.param .u64 .ptr .global .align 4 m01700_s08_param_13,
	.param .u64 .ptr .global .align 4 m01700_s08_param_14,
	.param .u64 .ptr .global .align 4 m01700_s08_param_15,
	.param .u64 .ptr .global .align 4 m01700_s08_param_16,
	.param .u64 .ptr .global .align 4 m01700_s08_param_17,
	.param .u64 .ptr .global .align 1 m01700_s08_param_18,
	.param .u64 .ptr .global .align 4 m01700_s08_param_19,
	.param .u64 .ptr .global .align 4 m01700_s08_param_20,
	.param .u64 .ptr .global .align 4 m01700_s08_param_21,
	.param .u64 .ptr .global .align 4 m01700_s08_param_22,
	.param .u64 .ptr .global .align 4 m01700_s08_param_23,
	.param .u32 m01700_s08_param_24,
	.param .u32 m01700_s08_param_25,
	.param .u32 m01700_s08_param_26,
	.param .u32 m01700_s08_param_27,
	.param .u32 m01700_s08_param_28,
	.param .u32 m01700_s08_param_29,
	.param .u32 m01700_s08_param_30,
	.param .u32 m01700_s08_param_31,
	.param .u32 m01700_s08_param_32,
	.param .u32 m01700_s08_param_33,
	.param .u64 m01700_s08_param_34
)
{



	ret;
}

	// .globl	m01700_s16
.entry m01700_s16(
	.param .u64 .ptr .global .align 4 m01700_s16_param_0,
	.param .u64 .ptr .global .align 4 m01700_s16_param_1,
	.param .u64 .ptr .global .align 4 m01700_s16_param_2,
	.param .u64 .ptr .global .align 4 m01700_s16_param_3,
	.param .u64 .ptr .global .align 1 m01700_s16_param_4,
	.param .u64 .ptr .global .align 1 m01700_s16_param_5,
	.param .u64 .ptr .global .align 4 m01700_s16_param_6,
	.param .u64 .ptr .global .align 4 m01700_s16_param_7,
	.param .u64 .ptr .global .align 4 m01700_s16_param_8,
	.param .u64 .ptr .global .align 4 m01700_s16_param_9,
	.param .u64 .ptr .global .align 4 m01700_s16_param_10,
	.param .u64 .ptr .global .align 4 m01700_s16_param_11,
	.param .u64 .ptr .global .align 4 m01700_s16_param_12,
	.param .u64 .ptr .global .align 4 m01700_s16_param_13,
	.param .u64 .ptr .global .align 4 m01700_s16_param_14,
	.param .u64 .ptr .global .align 4 m01700_s16_param_15,
	.param .u64 .ptr .global .align 4 m01700_s16_param_16,
	.param .u64 .ptr .global .align 4 m01700_s16_param_17,
	.param .u64 .ptr .global .align 1 m01700_s16_param_18,
	.param .u64 .ptr .global .align 4 m01700_s16_param_19,
	.param .u64 .ptr .global .align 4 m01700_s16_param_20,
	.param .u64 .ptr .global .align 4 m01700_s16_param_21,
	.param .u64 .ptr .global .align 4 m01700_s16_param_22,
	.param .u64 .ptr .global .align 4 m01700_s16_param_23,
	.param .u32 m01700_s16_param_24,
	.param .u32 m01700_s16_param_25,
	.param .u32 m01700_s16_param_26,
	.param .u32 m01700_s16_param_27,
	.param .u32 m01700_s16_param_28,
	.param .u32 m01700_s16_param_29,
	.param .u32 m01700_s16_param_30,
	.param .u32 m01700_s16_param_31,
	.param .u32 m01700_s16_param_32,
	.param .u32 m01700_s16_param_33,
	.param .u64 m01700_s16_param_34
)
{



	ret;
}


  