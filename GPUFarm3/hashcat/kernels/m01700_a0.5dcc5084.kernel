//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_50, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u32 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [gpu_memset_param_0];
	ld.param.u32 	%r2, [gpu_memset_param_1];
	ld.param.u32 	%r3, [gpu_memset_param_2];
	mov.b32	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
	setp.ge.u32	%p1, %r1, %r3;
	@%p1 bra 	BB0_2;

	mul.wide.u32 	%rd2, %r1, 16;
	add.s64 	%rd3, %rd1, %rd2;
	st.global.v4.u32 	[%rd3], {%r2, %r2, %r2, %r2};

BB0_2:
	ret;
}

	// .globl	m01700_m04
.entry m01700_m04(
	.param .u64 .ptr .global .align 4 m01700_m04_param_0,
	.param .u64 .ptr .global .align 4 m01700_m04_param_1,
	.param .u64 .ptr .global .align 4 m01700_m04_param_2,
	.param .u64 .ptr .global .align 4 m01700_m04_param_3,
	.param .u64 .ptr .global .align 1 m01700_m04_param_4,
	.param .u64 .ptr .global .align 1 m01700_m04_param_5,
	.param .u64 .ptr .global .align 4 m01700_m04_param_6,
	.param .u64 .ptr .global .align 4 m01700_m04_param_7,
	.param .u64 .ptr .global .align 4 m01700_m04_param_8,
	.param .u64 .ptr .global .align 4 m01700_m04_param_9,
	.param .u64 .ptr .global .align 4 m01700_m04_param_10,
	.param .u64 .ptr .global .align 4 m01700_m04_param_11,
	.param .u64 .ptr .global .align 4 m01700_m04_param_12,
	.param .u64 .ptr .global .align 4 m01700_m04_param_13,
	.param .u64 .ptr .global .align 4 m01700_m04_param_14,
	.param .u64 .ptr .global .align 4 m01700_m04_param_15,
	.param .u64 .ptr .global .align 4 m01700_m04_param_16,
	.param .u64 .ptr .global .align 4 m01700_m04_param_17,
	.param .u64 .ptr .global .align 1 m01700_m04_param_18,
	.param .u64 .ptr .global .align 4 m01700_m04_param_19,
	.param .u64 .ptr .global .align 4 m01700_m04_param_20,
	.param .u64 .ptr .global .align 4 m01700_m04_param_21,
	.param .u64 .ptr .global .align 4 m01700_m04_param_22,
	.param .u64 .ptr .global .align 4 m01700_m04_param_23,
	.param .u32 m01700_m04_param_24,
	.param .u32 m01700_m04_param_25,
	.param .u32 m01700_m04_param_26,
	.param .u32 m01700_m04_param_27,
	.param .u32 m01700_m04_param_28,
	.param .u32 m01700_m04_param_29,
	.param .u32 m01700_m04_param_30,
	.param .u32 m01700_m04_param_31,
	.param .u32 m01700_m04_param_32,
	.param .u32 m01700_m04_param_33,
	.param .u32 m01700_m04_param_34
)
{
	.local .align 16 .b8 	__local_depot1[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<1063>;
	.reg .b16 	%rs<377>;
	.reg .b32 	%r<10954>;
	.reg .b64 	%rd<2826>;


	mov.u64 	%rd2825, __local_depot1;
	cvta.local.u64 	%SP, %rd2825;
	ld.param.u64 	%rd86, [m01700_m04_param_0];
	ld.param.u64 	%rd87, [m01700_m04_param_1];
	ld.param.u64 	%rd99, [m01700_m04_param_19];
	ld.param.u32 	%r1804, [m01700_m04_param_24];
	ld.param.u32 	%r1808, [m01700_m04_param_30];
	ld.param.u32 	%r1809, [m01700_m04_param_31];
	ld.param.u32 	%r1810, [m01700_m04_param_32];
	ld.param.u32 	%r1811, [m01700_m04_param_34];
	mov.u32 	%r1812, %ctaid.x;
	mov.u32 	%r1813, %ntid.x;
	mov.b32	%r1814, %envreg3;
	mad.lo.s32 	%r1815, %r1812, %r1813, %r1814;
	mov.u32 	%r1816, %tid.x;
	add.s32 	%r1, %r1815, %r1816;
	setp.ge.u32	%p1, %r1, %r1811;
	@%p1 bra 	BB1_1565;

	mul.wide.u32 	%rd100, %r1, 80;
	add.s64 	%rd101, %rd86, %rd100;
	ld.global.u32 	%r2, [%rd101];
	ld.global.u32 	%r3, [%rd101+4];
	ld.global.u32 	%r4, [%rd101+8];
	ld.global.u32 	%r5, [%rd101+12];
	ld.global.u32 	%r6, [%rd101+16];
	ld.global.u32 	%r7, [%rd101+20];
	ld.global.u32 	%r8, [%rd101+24];
	ld.global.u32 	%r9, [%rd101+28];
	ld.global.u32 	%r10, [%rd101+64];
	setp.eq.s32	%p2, %r1808, 0;
	@%p2 bra 	BB1_1565;

	mov.u64 	%rd102, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1818,%dummy}, %rd102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1819}, %rd102;
	}
	shf.r.wrap.b32 	%r1820, %r1819, %r1818, 18;
	shf.r.wrap.b32 	%r1821, %r1818, %r1819, 18;
	mov.b64 	%rd103, {%r1821, %r1820};
	shf.r.wrap.b32 	%r1822, %r1819, %r1818, 14;
	shf.r.wrap.b32 	%r1823, %r1818, %r1819, 14;
	mov.b64 	%rd104, {%r1823, %r1822};
	xor.b64  	%rd105, %rd103, %rd104;
	shf.l.wrap.b32 	%r1824, %r1818, %r1819, 23;
	shf.l.wrap.b32 	%r1825, %r1819, %r1818, 23;
	mov.b64 	%rd106, {%r1825, %r1824};
	xor.b64  	%rd2, %rd105, %rd106;
	mov.u64 	%rd107, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1826}, %rd107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1827,%dummy}, %rd107;
	}
	shf.l.wrap.b32 	%r1828, %r1827, %r1826, 30;
	shf.l.wrap.b32 	%r1829, %r1826, %r1827, 30;
	mov.b64 	%rd108, {%r1829, %r1828};
	shf.r.wrap.b32 	%r1830, %r1826, %r1827, 28;
	shf.r.wrap.b32 	%r1831, %r1827, %r1826, 28;
	mov.b64 	%rd109, {%r1831, %r1830};
	xor.b64  	%rd110, %rd108, %rd109;
	shf.l.wrap.b32 	%r1832, %r1827, %r1826, 25;
	shf.l.wrap.b32 	%r1833, %r1826, %r1827, 25;
	mov.b64 	%rd111, {%r1833, %r1832};
	xor.b64  	%rd3, %rd110, %rd111;
	mov.u64 	%rd112, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1834}, %rd112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1835,%dummy}, %rd112;
	}
	shf.l.wrap.b32 	%r1836, %r1835, %r1834, 3;
	shf.l.wrap.b32 	%r1837, %r1834, %r1835, 3;
	mov.b64 	%rd113, {%r1837, %r1836};
	shf.r.wrap.b32 	%r1838, %r1834, %r1835, 19;
	shf.r.wrap.b32 	%r1839, %r1835, %r1834, 19;
	mov.b64 	%rd114, {%r1839, %r1838};
	xor.b64  	%rd19, %rd114, %rd113;
	shf.r.wrap.b32 	%r1840, %r1834, %r1835, 8;
	shf.r.wrap.b32 	%r1841, %r1835, %r1834, 8;
	mov.b64 	%rd115, {%r1841, %r1840};
	shf.r.wrap.b32 	%r1842, %r1834, %r1835, 1;
	shf.r.wrap.b32 	%r1843, %r1835, %r1834, 1;
	mov.b64 	%rd116, {%r1843, %r1842};
	xor.b64  	%rd20, %rd116, %rd115;
	mov.u32 	%r10772, 0;

BB1_3:
	mov.u32 	%r10774, 0;
	cvt.u64.u32	%rd82, %r10772;
	mul.wide.u32 	%rd117, %r10772, 128;
	add.s64 	%rd118, %rd87, %rd117;
	ld.global.u32 	%r10773, [%rd118];
	setp.eq.s32	%p3, %r10773, 0;
	mov.u32 	%r10949, %r10;
	mov.u32 	%r10948, %r5;
	mov.u32 	%r10947, %r4;
	mov.u32 	%r10946, %r3;
	mov.u32 	%r10945, %r2;
	mov.u32 	%r10944, %r9;
	mov.u32 	%r10943, %r8;
	mov.u32 	%r10942, %r7;
	mov.u32 	%r10941, %r6;
	@%p3 bra 	BB1_1537;
	bra.uni 	BB1_4;

BB1_194:
	setp.ne.s32	%p131, %r25, 31;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p131 bra 	BB1_213;

	mov.u32 	%r10784, 0;
	mov.u32 	%r2421, 8;
	// inline asm
	shf.r.wrap.b32 %r10787, %r10784, %r19, %r2421;
	// inline asm

BB1_196:
	mov.u32 	%r10785, %r10784;
	mov.u32 	%r10786, %r10784;

BB1_188:
	mov.u32 	%r10788, %r10784;
	mov.u32 	%r10789, %r10784;
	mov.u32 	%r10790, %r10784;
	mov.u32 	%r10791, %r10784;

BB1_213:
	and.b32  	%r2963, %r15, 3;
	shl.b32 	%r2964, %r2963, 3;
	mov.u32 	%r2965, -1;
	shl.b32 	%r161, %r2965, %r2964;
	shr.u32 	%r2962, %r15, 2;
	setp.gt.s32	%p173, %r2962, 3;
	@%p173 bra 	BB1_221;

	setp.gt.s32	%p179, %r2962, 1;
	@%p179 bra 	BB1_218;

	setp.eq.s32	%p182, %r2962, 0;
	@%p182 bra 	BB1_232;
	bra.uni 	BB1_216;

BB1_232:
	and.b32  	%r10788, %r10788, %r161;
	bra.uni 	BB1_233;

BB1_221:
	setp.gt.s32	%p174, %r2962, 5;
	@%p174 bra 	BB1_225;

	setp.eq.s32	%p177, %r2962, 4;
	@%p177 bra 	BB1_230;
	bra.uni 	BB1_223;

BB1_230:
	and.b32  	%r10784, %r10784, %r161;
	mov.u32 	%r10788, 0;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	bra.uni 	BB1_233;

BB1_218:
	setp.eq.s32	%p180, %r2962, 2;
	@%p180 bra 	BB1_231;
	bra.uni 	BB1_219;

BB1_231:
	and.b32  	%r10790, %r10790, %r161;
	mov.u32 	%r10788, 0;
	mov.u32 	%r10789, %r10788;
	bra.uni 	BB1_233;

BB1_225:
	setp.eq.s32	%p175, %r2962, 6;
	@%p175 bra 	BB1_228;
	bra.uni 	BB1_226;

BB1_228:
	and.b32  	%r10786, %r10786, %r161;
	mov.u32 	%r10784, 0;
	mov.u32 	%r10785, %r10784;
	bra.uni 	BB1_229;

BB1_216:
	setp.eq.s32	%p183, %r2962, 1;
	@%p183 bra 	BB1_217;
	bra.uni 	BB1_233;

BB1_217:
	and.b32  	%r10789, %r10789, %r161;
	mov.u32 	%r10788, 0;
	bra.uni 	BB1_233;

BB1_223:
	setp.eq.s32	%p178, %r2962, 5;
	@%p178 bra 	BB1_224;
	bra.uni 	BB1_233;

BB1_224:
	and.b32  	%r10785, %r10785, %r161;
	mov.u32 	%r10784, 0;
	bra.uni 	BB1_229;

BB1_219:
	setp.eq.s32	%p181, %r2962, 3;
	@%p181 bra 	BB1_220;
	bra.uni 	BB1_233;

BB1_220:
	and.b32  	%r10791, %r10791, %r161;
	mov.u32 	%r10788, 0;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	bra.uni 	BB1_233;

BB1_226:
	setp.ne.s32	%p176, %r2962, 7;
	@%p176 bra 	BB1_233;

	and.b32  	%r10787, %r10787, %r161;
	mov.u32 	%r10784, 0;
	mov.u32 	%r10785, %r10784;
	mov.u32 	%r10786, %r10784;

BB1_229:
	mov.u32 	%r10788, %r10784;
	mov.u32 	%r10789, %r10784;
	mov.u32 	%r10790, %r10784;
	mov.u32 	%r10791, %r10784;

BB1_233:
	or.b32  	%r10945, %r10788, %r19;
	or.b32  	%r10946, %r10789, %r18;
	or.b32  	%r10947, %r10790, %r17;
	or.b32  	%r10948, %r10791, %r16;
	or.b32  	%r10941, %r10784, %r23;
	or.b32  	%r10942, %r10785, %r22;
	or.b32  	%r10943, %r10786, %r21;
	or.b32  	%r10944, %r10787, %r20;
	bra.uni 	BB1_1536;

BB1_287:
	setp.eq.s32	%p219, %r25, 19;
	@%p219 bra 	BB1_288;
	bra.uni 	BB1_279;

BB1_288:
	mov.u32 	%r3175, 8;
	// inline asm
	shf.r.wrap.b32 %r23, %r17, %r16, %r3175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r18, %r17, %r3175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r19, %r18, %r3175;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r10808, %r10812, %r19, %r3175;
	// inline asm

BB1_319:
	mov.u32 	%r10813, %r10812;
	mov.u32 	%r10814, %r10812;
	mov.u32 	%r19, %r10812;
	bra.uni 	BB1_333;

BB1_271:
	setp.eq.s32	%p231, %r25, 11;
	@%p231 bra 	BB1_272;
	bra.uni 	BB1_279;

BB1_272:
	mov.u32 	%r3319, 8;
	// inline asm
	shf.r.wrap.b32 %r3296, %r23, %r22, %r3319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r16, %r23, %r3319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r17, %r16, %r3319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r18, %r17, %r3319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3312, %r19, %r18, %r3319;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r10814, %r10812, %r19, %r3319;
	// inline asm
	mov.u32 	%r23, %r3296;
	mov.u32 	%r10813, %r10812;
	mov.u32 	%r19, %r3312;
	bra.uni 	BB1_333;

BB1_302:
	setp.eq.s32	%p208, %r25, 27;
	@%p208 bra 	BB1_303;
	bra.uni 	BB1_279;

BB1_303:
	mov.u32 	%r3063, 8;
	// inline asm
	shf.r.wrap.b32 %r23, %r19, %r18, %r3063;
	// inline asm
	mov.u32 	%r10808, 0;
	// inline asm
	shf.r.wrap.b32 %r10810, %r10808, %r19, %r3063;
	// inline asm

BB1_304:
	mov.u32 	%r10809, %r10808;
	bra.uni 	BB1_332;

BB1_263:
	setp.eq.s32	%p237, %r25, 7;
	@%p237 bra 	BB1_264;
	bra.uni 	BB1_279;

BB1_264:
	mov.u32 	%r3403, 8;
	// inline asm
	shf.r.wrap.b32 %r3376, %r22, %r21, %r3403;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r23, %r22, %r3403;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r16, %r23, %r3403;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r17, %r16, %r3403;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3392, %r18, %r17, %r3403;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10814, %r19, %r18, %r3403;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r10813, %r10812, %r19, %r3403;
	// inline asm
	mov.u32 	%r23, %r3376;
	mov.u32 	%r19, %r3392;
	bra.uni 	BB1_333;

BB1_294:
	setp.eq.s32	%p214, %r25, 23;
	@%p214 bra 	BB1_295;
	bra.uni 	BB1_279;

BB1_295:
	mov.u32 	%r3115, 8;
	// inline asm
	shf.r.wrap.b32 %r23, %r18, %r17, %r3115;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r19, %r18, %r3115;
	// inline asm
	mov.u32 	%r10808, 0;
	// inline asm
	shf.r.wrap.b32 %r10809, %r10808, %r19, %r3115;
	// inline asm
	bra.uni 	BB1_332;

BB1_278:
	setp.eq.s32	%p226, %r25, 15;
	@%p226 bra 	BB1_320;
	bra.uni 	BB1_279;

BB1_320:
	mov.u32 	%r3243, 8;
	// inline asm
	shf.r.wrap.b32 %r23, %r16, %r23, %r3243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r17, %r16, %r3243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r18, %r17, %r3243;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r19, %r18, %r3243;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r19, %r10812, %r19, %r3243;
	// inline asm

BB1_323:
	mov.u32 	%r10813, %r10812;
	mov.u32 	%r10814, %r10812;
	bra.uni 	BB1_333;

BB1_310:
	setp.ne.s32	%p203, %r25, 30;
	@%p203 bra 	BB1_279;

	mov.u32 	%r10808, 0;
	mov.u32 	%r3030, 16;
	// inline asm
	shf.r.wrap.b32 %r23, %r10808, %r19, %r3030;
	// inline asm

BB1_331:
	mov.u32 	%r10809, %r10808;
	mov.u32 	%r10810, %r10808;

BB1_332:
	mov.u32 	%r10812, %r10808;
	mov.u32 	%r10813, %r10808;
	mov.u32 	%r10814, %r10808;
	mov.u32 	%r19, %r10808;
	bra.uni 	BB1_333;

BB1_279:
	mov.u32 	%r10808, %r23;
	mov.u32 	%r10809, %r22;
	mov.u32 	%r10810, %r21;
	mov.u32 	%r23, %r20;
	mov.u32 	%r10812, %r19;
	mov.u32 	%r10813, %r18;
	mov.u32 	%r10814, %r17;
	mov.u32 	%r19, %r16;

BB1_333:
	or.b32  	%r10945, %r10812, %r10804;
	or.b32  	%r10946, %r10813, %r10805;
	or.b32  	%r10947, %r10814, %r10806;
	or.b32  	%r10948, %r19, %r10807;
	or.b32  	%r10941, %r10808, %r10800;
	or.b32  	%r10942, %r10809, %r10801;
	or.b32  	%r10943, %r10810, %r10802;
	or.b32  	%r10944, %r23, %r10803;
	bra.uni 	BB1_1536;

BB1_1299:
	setp.eq.s32	%p934, %r6528, 1;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p934 bra 	BB1_1300;
	bra.uni 	BB1_1378;

BB1_1300:
	mov.u32 	%r7073, 24;
	// inline asm
	shf.r.wrap.b32 %r10894, %r21, %r20, %r7073;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r22, %r21, %r7073;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r23, %r22, %r7073;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r16, %r23, %r7073;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10898, %r17, %r16, %r7073;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10897, %r18, %r17, %r7073;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10896, %r19, %r18, %r7073;
	// inline asm
	mov.u32 	%r7071, 0;
	// inline asm
	shf.r.wrap.b32 %r10895, %r7071, %r19, %r7073;
	// inline asm
	bra.uni 	BB1_1378;

BB1_1331:
	setp.eq.s32	%p911, %r6528, 17;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p911 bra 	BB1_1332;
	bra.uni 	BB1_1378;

BB1_1332:
	mov.u32 	%r6729, 24;
	// inline asm
	shf.r.wrap.b32 %r10894, %r17, %r16, %r6729;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r18, %r17, %r6729;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r19, %r18, %r6729;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10891, %r10895, %r19, %r6729;
	// inline asm
	bra.uni 	BB1_1336;

BB1_1314:
	setp.eq.s32	%p923, %r6528, 9;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p923 bra 	BB1_1315;
	bra.uni 	BB1_1378;

BB1_1315:
	mov.u32 	%r6885, 24;
	// inline asm
	shf.r.wrap.b32 %r10894, %r23, %r22, %r6885;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r16, %r23, %r6885;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r17, %r16, %r6885;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r18, %r17, %r6885;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10898, %r19, %r18, %r6885;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10897, %r10895, %r19, %r6885;
	// inline asm
	mov.u32 	%r10896, %r10895;
	bra.uni 	BB1_1378;

BB1_1347:
	setp.eq.s32	%p900, %r6528, 25;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p900 bra 	BB1_1348;
	bra.uni 	BB1_1378;

BB1_1348:
	mov.u32 	%r6605, 24;
	// inline asm
	shf.r.wrap.b32 %r10894, %r19, %r18, %r6605;
	// inline asm
	mov.u32 	%r10891, 0;
	// inline asm
	shf.r.wrap.b32 %r10893, %r10891, %r19, %r6605;
	// inline asm
	bra.uni 	BB1_1352;

BB1_1306:
	setp.eq.s32	%p929, %r6528, 5;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p929 bra 	BB1_1307;
	bra.uni 	BB1_1378;

BB1_1307:
	mov.u32 	%r6975, 24;
	// inline asm
	shf.r.wrap.b32 %r10894, %r22, %r21, %r6975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r23, %r22, %r6975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r16, %r23, %r6975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r17, %r16, %r6975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10898, %r18, %r17, %r6975;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10897, %r19, %r18, %r6975;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10896, %r10895, %r19, %r6975;
	// inline asm
	bra.uni 	BB1_1378;

BB1_1339:
	setp.eq.s32	%p906, %r6528, 21;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p906 bra 	BB1_1340;
	bra.uni 	BB1_1378;

BB1_1340:
	mov.u32 	%r6663, 24;
	// inline asm
	shf.r.wrap.b32 %r10894, %r18, %r17, %r6663;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r19, %r18, %r6663;
	// inline asm
	mov.u32 	%r10891, 0;
	// inline asm
	shf.r.wrap.b32 %r10892, %r10891, %r19, %r6663;
	// inline asm
	bra.uni 	BB1_1353;

BB1_1321:
	setp.eq.s32	%p918, %r6528, 13;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p918 bra 	BB1_1322;
	bra.uni 	BB1_1378;

BB1_1322:
	mov.u32 	%r6803, 24;
	// inline asm
	shf.r.wrap.b32 %r10894, %r16, %r23, %r6803;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r17, %r16, %r6803;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r18, %r17, %r6803;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r19, %r18, %r6803;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10898, %r10895, %r19, %r6803;
	// inline asm
	bra.uni 	BB1_1326;

BB1_1356:
	setp.eq.s32	%p895, %r6528, 29;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p895 bra 	BB1_1357;
	bra.uni 	BB1_1378;

BB1_1357:
	mov.u32 	%r10891, 0;
	mov.u32 	%r6555, 24;
	// inline asm
	shf.r.wrap.b32 %r10894, %r10891, %r19, %r6555;
	// inline asm
	bra.uni 	BB1_1361;

BB1_1302:
	setp.eq.s32	%p932, %r6528, 3;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p932 bra 	BB1_1303;
	bra.uni 	BB1_1378;

BB1_1303:
	mov.u32 	%r7009, 8;
	// inline asm
	shf.r.wrap.b32 %r10894, %r21, %r20, %r7009;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r22, %r21, %r7009;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r23, %r22, %r7009;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r16, %r23, %r7009;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10898, %r17, %r16, %r7009;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10897, %r18, %r17, %r7009;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10896, %r19, %r18, %r7009;
	// inline asm
	mov.u32 	%r7007, 0;
	// inline asm
	shf.r.wrap.b32 %r10895, %r7007, %r19, %r7009;
	// inline asm
	bra.uni 	BB1_1378;

BB1_1334:
	setp.eq.s32	%p909, %r6528, 19;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p909 bra 	BB1_1335;
	bra.uni 	BB1_1378;

BB1_1335:
	mov.u32 	%r6689, 8;
	// inline asm
	shf.r.wrap.b32 %r10894, %r17, %r16, %r6689;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r18, %r17, %r6689;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r19, %r18, %r6689;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10891, %r10895, %r19, %r6689;
	// inline asm

BB1_1336:
	mov.u32 	%r10896, %r10895;
	mov.u32 	%r10897, %r10895;
	mov.u32 	%r10898, %r10895;
	bra.uni 	BB1_1378;

BB1_1317:
	setp.eq.s32	%p921, %r6528, 11;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p921 bra 	BB1_1318;
	bra.uni 	BB1_1378;

BB1_1318:
	mov.u32 	%r6833, 8;
	// inline asm
	shf.r.wrap.b32 %r10894, %r23, %r22, %r6833;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r16, %r23, %r6833;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r17, %r16, %r6833;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r18, %r17, %r6833;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10898, %r19, %r18, %r6833;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10897, %r10895, %r19, %r6833;
	// inline asm
	mov.u32 	%r10896, %r10895;
	bra.uni 	BB1_1378;

BB1_1350:
	setp.eq.s32	%p898, %r6528, 27;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p898 bra 	BB1_1351;
	bra.uni 	BB1_1378;

BB1_1351:
	mov.u32 	%r6577, 8;
	// inline asm
	shf.r.wrap.b32 %r10894, %r19, %r18, %r6577;
	// inline asm
	mov.u32 	%r10891, 0;
	// inline asm
	shf.r.wrap.b32 %r10893, %r10891, %r19, %r6577;
	// inline asm

BB1_1352:
	mov.u32 	%r10892, %r10891;
	bra.uni 	BB1_1353;

BB1_1309:
	setp.eq.s32	%p927, %r6528, 7;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p927 bra 	BB1_1310;
	bra.uni 	BB1_1378;

BB1_1310:
	mov.u32 	%r6917, 8;
	// inline asm
	shf.r.wrap.b32 %r10894, %r22, %r21, %r6917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r23, %r22, %r6917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r16, %r23, %r6917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r17, %r16, %r6917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10898, %r18, %r17, %r6917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10897, %r19, %r18, %r6917;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10896, %r10895, %r19, %r6917;
	// inline asm
	bra.uni 	BB1_1378;

BB1_1342:
	setp.eq.s32	%p904, %r6528, 23;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p904 bra 	BB1_1343;
	bra.uni 	BB1_1378;

BB1_1343:
	mov.u32 	%r6629, 8;
	// inline asm
	shf.r.wrap.b32 %r10894, %r18, %r17, %r6629;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r19, %r18, %r6629;
	// inline asm
	mov.u32 	%r10891, 0;
	// inline asm
	shf.r.wrap.b32 %r10892, %r10891, %r19, %r6629;
	// inline asm
	bra.uni 	BB1_1353;

BB1_1324:
	setp.eq.s32	%p916, %r6528, 15;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p916 bra 	BB1_1325;
	bra.uni 	BB1_1378;

BB1_1325:
	mov.u32 	%r6757, 8;
	// inline asm
	shf.r.wrap.b32 %r10894, %r16, %r23, %r6757;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r17, %r16, %r6757;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r18, %r17, %r6757;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r19, %r18, %r6757;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10898, %r10895, %r19, %r6757;
	// inline asm

BB1_1326:
	mov.u32 	%r10896, %r10895;
	mov.u32 	%r10897, %r10895;
	bra.uni 	BB1_1378;

BB1_1359:
	setp.ne.s32	%p893, %r6528, 31;
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r10899;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	@%p893 bra 	BB1_1378;

	mov.u32 	%r10891, 0;
	mov.u32 	%r6533, 8;
	// inline asm
	shf.r.wrap.b32 %r10894, %r10891, %r19, %r6533;
	// inline asm

BB1_1361:
	mov.u32 	%r10892, %r10891;
	mov.u32 	%r10893, %r10891;

BB1_1353:
	mov.u32 	%r10895, %r10891;
	mov.u32 	%r10896, %r10891;
	mov.u32 	%r10897, %r10891;
	mov.u32 	%r10898, %r10891;

BB1_1378:
	// inline asm
	prmt.b32 %r7074, %r10894, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7076, %r10893, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7078, %r10892, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7080, %r10891, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7082, %r10898, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7084, %r10897, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7086, %r10896, 0, 0x0123;
	// inline asm
	and.b32  	%r7097, %r15, 3;
	mov.u32 	%r7098, 4;
	sub.s32 	%r7099, %r7098, %r7097;
	shl.b32 	%r7100, %r7099, 2;
	mov.u32 	%r7101, 1985229328;
	shr.u32 	%r7102, %r7101, %r7100;
	and.b32  	%r1415, %r7102, 65535;
	shr.u32 	%r7096, %r15, 2;
	setp.gt.s32	%p935, %r7096, 3;
	@%p935 bra 	BB1_1386;

	setp.gt.s32	%p941, %r7096, 1;
	@%p941 bra 	BB1_1383;

	setp.eq.s32	%p944, %r7096, 0;
	@%p944 bra 	BB1_1396;
	bra.uni 	BB1_1381;

BB1_1396:
	// inline asm
	prmt.b32 %r7243, %r10895, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10906, %r7086, %r7243, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10905, %r7084, %r7086, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10904, %r7082, %r7084, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10903, %r7080, %r7082, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10902, %r7078, %r7080, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10901, %r7076, %r7078, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10900, %r7074, %r7076, %r1415;
	// inline asm
	mov.u32 	%r7274, 0;
	// inline asm
	prmt.b32 %r10899, %r7274, %r7074, %r1415;
	// inline asm
	bra.uni 	BB1_1397;

BB1_1386:
	setp.gt.s32	%p936, %r7096, 5;
	@%p936 bra 	BB1_1390;

	setp.eq.s32	%p939, %r7096, 4;
	@%p939 bra 	BB1_1394;
	bra.uni 	BB1_1388;

BB1_1394:
	// inline asm
	prmt.b32 %r10906, %r7078, %r7080, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10905, %r7076, %r7078, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10904, %r7074, %r7076, %r1415;
	// inline asm
	mov.u32 	%r10899, 0;
	// inline asm
	prmt.b32 %r10903, %r10899, %r7074, %r1415;
	// inline asm
	mov.u32 	%r10900, %r10899;
	mov.u32 	%r10901, %r10899;
	mov.u32 	%r10902, %r10899;
	bra.uni 	BB1_1397;

BB1_1383:
	setp.eq.s32	%p942, %r7096, 2;
	@%p942 bra 	BB1_1395;
	bra.uni 	BB1_1384;

BB1_1395:
	// inline asm
	prmt.b32 %r10906, %r7082, %r7084, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10905, %r7080, %r7082, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10904, %r7078, %r7080, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10903, %r7076, %r7078, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10902, %r7074, %r7076, %r1415;
	// inline asm
	mov.u32 	%r10899, 0;
	// inline asm
	prmt.b32 %r10901, %r10899, %r7074, %r1415;
	// inline asm
	mov.u32 	%r10900, %r10899;
	bra.uni 	BB1_1397;

BB1_1390:
	setp.eq.s32	%p937, %r7096, 6;
	@%p937 bra 	BB1_1393;
	bra.uni 	BB1_1391;

BB1_1393:
	// inline asm
	prmt.b32 %r10906, %r7074, %r7076, %r1415;
	// inline asm
	mov.u32 	%r10899, 0;
	// inline asm
	prmt.b32 %r10905, %r10899, %r7074, %r1415;
	// inline asm
	mov.u32 	%r10900, %r10899;
	mov.u32 	%r10901, %r10899;
	mov.u32 	%r10902, %r10899;
	mov.u32 	%r10903, %r10899;
	mov.u32 	%r10904, %r10899;
	bra.uni 	BB1_1397;

BB1_1381:
	setp.eq.s32	%p945, %r7096, 1;
	mov.u32 	%r10900, %r10899;
	mov.u32 	%r10901, %r10899;
	mov.u32 	%r10902, %r10899;
	mov.u32 	%r10903, %r10899;
	mov.u32 	%r10904, %r10899;
	mov.u32 	%r10905, %r10899;
	mov.u32 	%r10906, %r10899;
	@%p945 bra 	BB1_1382;
	bra.uni 	BB1_1397;

BB1_1382:
	// inline asm
	prmt.b32 %r10906, %r7084, %r7086, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10905, %r7082, %r7084, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10904, %r7080, %r7082, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10903, %r7078, %r7080, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10902, %r7076, %r7078, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10901, %r7074, %r7076, %r1415;
	// inline asm
	mov.u32 	%r10899, 0;
	// inline asm
	prmt.b32 %r10900, %r10899, %r7074, %r1415;
	// inline asm
	bra.uni 	BB1_1397;

BB1_1388:
	setp.eq.s32	%p940, %r7096, 5;
	mov.u32 	%r10900, %r10899;
	mov.u32 	%r10901, %r10899;
	mov.u32 	%r10902, %r10899;
	mov.u32 	%r10903, %r10899;
	mov.u32 	%r10904, %r10899;
	mov.u32 	%r10905, %r10899;
	mov.u32 	%r10906, %r10899;
	@%p940 bra 	BB1_1389;
	bra.uni 	BB1_1397;

BB1_1389:
	// inline asm
	prmt.b32 %r10906, %r7076, %r7078, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10905, %r7074, %r7076, %r1415;
	// inline asm
	mov.u32 	%r10899, 0;
	// inline asm
	prmt.b32 %r10904, %r10899, %r7074, %r1415;
	// inline asm
	mov.u32 	%r10900, %r10899;
	mov.u32 	%r10901, %r10899;
	mov.u32 	%r10902, %r10899;
	mov.u32 	%r10903, %r10899;
	bra.uni 	BB1_1397;

BB1_1384:
	setp.eq.s32	%p943, %r7096, 3;
	mov.u32 	%r10900, %r10899;
	mov.u32 	%r10901, %r10899;
	mov.u32 	%r10902, %r10899;
	mov.u32 	%r10903, %r10899;
	mov.u32 	%r10904, %r10899;
	mov.u32 	%r10905, %r10899;
	mov.u32 	%r10906, %r10899;
	@%p943 bra 	BB1_1385;
	bra.uni 	BB1_1397;

BB1_1385:
	// inline asm
	prmt.b32 %r10906, %r7080, %r7082, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10905, %r7078, %r7080, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10904, %r7076, %r7078, %r1415;
	// inline asm
	// inline asm
	prmt.b32 %r10903, %r7074, %r7076, %r1415;
	// inline asm
	mov.u32 	%r10899, 0;
	// inline asm
	prmt.b32 %r10902, %r10899, %r7074, %r1415;
	// inline asm
	mov.u32 	%r10900, %r10899;
	mov.u32 	%r10901, %r10899;
	bra.uni 	BB1_1397;

BB1_1391:
	setp.ne.s32	%p938, %r7096, 7;
	mov.u32 	%r10900, %r10899;
	mov.u32 	%r10901, %r10899;
	mov.u32 	%r10902, %r10899;
	mov.u32 	%r10903, %r10899;
	mov.u32 	%r10904, %r10899;
	mov.u32 	%r10905, %r10899;
	mov.u32 	%r10906, %r10899;
	@%p938 bra 	BB1_1397;

	mov.u32 	%r10899, 0;
	// inline asm
	prmt.b32 %r10906, %r10899, %r7074, %r1415;
	// inline asm
	mov.u32 	%r10900, %r10899;
	mov.u32 	%r10901, %r10899;
	mov.u32 	%r10902, %r10899;
	mov.u32 	%r10903, %r10899;
	mov.u32 	%r10904, %r10899;
	mov.u32 	%r10905, %r10899;

BB1_1397:
	or.b32  	%r10945, %r10899, %r19;
	or.b32  	%r10946, %r10900, %r18;
	or.b32  	%r10947, %r10901, %r17;
	or.b32  	%r10948, %r10902, %r16;
	or.b32  	%r10941, %r10903, %r23;
	or.b32  	%r10942, %r10904, %r22;
	or.b32  	%r10943, %r10905, %r21;
	or.b32  	%r10944, %r10906, %r20;
	bra.uni 	BB1_1536;

BB1_4:
	mov.u32 	%r23, %r10941;
	mov.u32 	%r22, %r10942;
	mov.u32 	%r21, %r10943;
	mov.u32 	%r20, %r10944;
	mov.u32 	%r19, %r10945;
	mov.u32 	%r18, %r10946;
	mov.u32 	%r17, %r10947;
	mov.u32 	%r16, %r10948;
	mov.u32 	%r15, %r10949;
	shr.u32 	%r24, %r10773, 8;
	bfe.u32 	%r25, %r10773, 8, 8;
	shr.u32 	%r26, %r10773, 16;
	bfe.u32 	%r27, %r10773, 16, 8;
	and.b32  	%r1845, %r10773, 255;
	setp.gt.s32	%p4, %r1845, 93;
	@%p4 bra 	BB1_72;

	setp.gt.s32	%p32, %r1845, 68;
	@%p32 bra 	BB1_38;

	setp.gt.s32	%p46, %r1845, 44;
	@%p46 bra 	BB1_22;

	setp.gt.s32	%p53, %r1845, 41;
	@%p53 bra 	BB1_18;

	setp.eq.s32	%p57, %r1845, 36;
	@%p57 bra 	BB1_1297;
	bra.uni 	BB1_9;

BB1_1297:
	add.s32 	%r10949, %r15, 1;
	setp.gt.u32	%p878, %r10949, 31;
	@%p878 bra 	BB1_777;

	and.b32  	%r6508, %r15, 3;
	shl.b32 	%r6509, %r6508, 3;
	shl.b32 	%r6510, %r25, %r6509;
	setp.lt.u32	%p879, %r15, 4;
	selp.b32	%r6511, %r6510, 0, %p879;
	or.b32  	%r10945, %r6511, %r19;
	and.b32  	%r6512, %r15, -4;
	setp.eq.s32	%p880, %r6512, 4;
	selp.b32	%r6513, %r6510, 0, %p880;
	or.b32  	%r10946, %r6513, %r18;
	setp.eq.s32	%p881, %r6512, 8;
	selp.b32	%r6514, %r6510, 0, %p881;
	or.b32  	%r10947, %r6514, %r17;
	setp.eq.s32	%p882, %r6512, 12;
	selp.b32	%r6515, %r6510, 0, %p882;
	or.b32  	%r10948, %r6515, %r16;
	setp.eq.s32	%p883, %r6512, 16;
	selp.b32	%r6516, %r6510, 0, %p883;
	or.b32  	%r10941, %r6516, %r23;
	setp.eq.s32	%p884, %r6512, 20;
	selp.b32	%r6517, %r6510, 0, %p884;
	or.b32  	%r10942, %r6517, %r22;
	setp.eq.s32	%p885, %r6512, 24;
	selp.b32	%r6518, %r6510, 0, %p885;
	or.b32  	%r10943, %r6518, %r21;
	setp.gt.u32	%p886, %r15, 27;
	selp.b32	%r6519, %r6510, 0, %p886;
	or.b32  	%r10944, %r6519, %r20;
	bra.uni 	BB1_1536;

BB1_72:
	setp.gt.s32	%p5, %r1845, 112;
	@%p5 bra 	BB1_101;

	setp.gt.s32	%p19, %r1845, 104;
	@%p19 bra 	BB1_88;

	setp.gt.s32	%p26, %r1845, 99;
	@%p26 bra 	BB1_78;

	setp.eq.s32	%p30, %r1845, 94;
	@%p30 bra 	BB1_1295;
	bra.uni 	BB1_76;

BB1_1295:
	add.s32 	%r10949, %r15, 1;
	setp.gt.u32	%p877, %r10949, 31;
	@%p877 bra 	BB1_777;

	mov.u32 	%r6507, 24;
	// inline asm
	shf.r.wrap.b32 %r10944, %r21, %r20, %r6507;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r22, %r21, %r6507;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r23, %r22, %r6507;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r16, %r23, %r6507;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r17, %r16, %r6507;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r18, %r17, %r6507;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r19, %r18, %r6507;
	// inline asm
	mov.u32 	%r6505, 0;
	// inline asm
	shf.r.wrap.b32 %r6504, %r6505, %r19, %r6507;
	// inline asm
	or.b32  	%r10945, %r6504, %r25;
	bra.uni 	BB1_1536;

BB1_38:
	setp.gt.s32	%p33, %r1845, 83;
	@%p33 bra 	BB1_57;

	setp.gt.s32	%p40, %r1845, 75;
	@%p40 bra 	BB1_49;

	setp.eq.s32	%p44, %r1845, 69;
	@%p44 bra 	BB1_133;
	bra.uni 	BB1_41;

BB1_133:
	and.b32  	%r1878, %r19, 1077952576;
	shr.u32 	%r1879, %r1878, 1;
	and.b32  	%r1880, %r19, -2139062144;
	shr.u32 	%r1881, %r1880, 2;
	not.b32 	%r1882, %r1881;
	and.b32  	%r1883, %r1879, %r1882;
	and.b32  	%r1884, %r19, 522133279;
	add.s32 	%r1885, %r1884, 522133279;
	mov.u32 	%r1886, -84215046;
	sub.s32 	%r1887, %r1886, %r1884;
	and.b32  	%r1888, %r1883, %r1887;
	and.b32  	%r1889, %r1888, %r1885;
	or.b32  	%r1890, %r1889, %r19;
	and.b32  	%r1891, %r18, 1077952576;
	shr.u32 	%r1892, %r1891, 1;
	and.b32  	%r1893, %r18, -2139062144;
	shr.u32 	%r1894, %r1893, 2;
	not.b32 	%r1895, %r1894;
	and.b32  	%r1896, %r1892, %r1895;
	and.b32  	%r1897, %r18, 522133279;
	add.s32 	%r1898, %r1897, 522133279;
	sub.s32 	%r1899, %r1886, %r1897;
	and.b32  	%r1900, %r1896, %r1899;
	and.b32  	%r1901, %r1900, %r1898;
	or.b32  	%r1902, %r1901, %r18;
	and.b32  	%r1903, %r17, 1077952576;
	shr.u32 	%r1904, %r1903, 1;
	and.b32  	%r1905, %r17, -2139062144;
	shr.u32 	%r1906, %r1905, 2;
	not.b32 	%r1907, %r1906;
	and.b32  	%r1908, %r1904, %r1907;
	and.b32  	%r1909, %r17, 522133279;
	add.s32 	%r1910, %r1909, 522133279;
	sub.s32 	%r1911, %r1886, %r1909;
	and.b32  	%r1912, %r1908, %r1911;
	and.b32  	%r1913, %r1912, %r1910;
	or.b32  	%r1914, %r1913, %r17;
	and.b32  	%r1915, %r16, 1077952576;
	shr.u32 	%r1916, %r1915, 1;
	and.b32  	%r1917, %r16, -2139062144;
	shr.u32 	%r1918, %r1917, 2;
	not.b32 	%r1919, %r1918;
	and.b32  	%r1920, %r1916, %r1919;
	and.b32  	%r1921, %r16, 522133279;
	add.s32 	%r1922, %r1921, 522133279;
	sub.s32 	%r1923, %r1886, %r1921;
	and.b32  	%r1924, %r1920, %r1923;
	and.b32  	%r1925, %r1924, %r1922;
	or.b32  	%r1926, %r1925, %r16;
	and.b32  	%r1927, %r23, 1077952576;
	shr.u32 	%r1928, %r1927, 1;
	and.b32  	%r1929, %r23, -2139062144;
	shr.u32 	%r1930, %r1929, 2;
	not.b32 	%r1931, %r1930;
	and.b32  	%r1932, %r1928, %r1931;
	and.b32  	%r1933, %r23, 522133279;
	add.s32 	%r1934, %r1933, 522133279;
	sub.s32 	%r1935, %r1886, %r1933;
	and.b32  	%r1936, %r1932, %r1935;
	and.b32  	%r1937, %r1936, %r1934;
	or.b32  	%r1938, %r1937, %r23;
	and.b32  	%r1939, %r22, 1077952576;
	shr.u32 	%r1940, %r1939, 1;
	and.b32  	%r1941, %r22, -2139062144;
	shr.u32 	%r1942, %r1941, 2;
	not.b32 	%r1943, %r1942;
	and.b32  	%r1944, %r1940, %r1943;
	and.b32  	%r1945, %r22, 522133279;
	add.s32 	%r1946, %r1945, 522133279;
	sub.s32 	%r1947, %r1886, %r1945;
	and.b32  	%r1948, %r1944, %r1947;
	and.b32  	%r1949, %r1948, %r1946;
	or.b32  	%r1950, %r1949, %r22;
	and.b32  	%r1951, %r21, 1077952576;
	shr.u32 	%r1952, %r1951, 1;
	and.b32  	%r1953, %r21, -2139062144;
	shr.u32 	%r1954, %r1953, 2;
	not.b32 	%r1955, %r1954;
	and.b32  	%r1956, %r1952, %r1955;
	and.b32  	%r1957, %r21, 522133279;
	add.s32 	%r1958, %r1957, 522133279;
	sub.s32 	%r1959, %r1886, %r1957;
	and.b32  	%r1960, %r1956, %r1959;
	and.b32  	%r1961, %r1960, %r1958;
	or.b32  	%r1962, %r1961, %r21;
	and.b32  	%r1963, %r20, 1077952576;
	shr.u32 	%r1964, %r1963, 1;
	and.b32  	%r1965, %r20, -2139062144;
	shr.u32 	%r1966, %r1965, 2;
	not.b32 	%r1967, %r1966;
	and.b32  	%r1968, %r1964, %r1967;
	and.b32  	%r1969, %r20, 522133279;
	add.s32 	%r1970, %r1969, 522133279;
	sub.s32 	%r1971, %r1886, %r1969;
	and.b32  	%r1972, %r1968, %r1971;
	and.b32  	%r1973, %r1972, %r1970;
	or.b32  	%r1974, %r1973, %r20;
	mov.b32	{%rs10, %rs11}, %r1890;
	shr.u16 	%rs12, %rs11, 8;
	setp.eq.s16	%p59, %rs12, 32;
	and.b16  	%rs13, %rs11, 255;
	setp.eq.s16	%p60, %rs13, 32;
	shr.u16 	%rs14, %rs10, 8;
	setp.eq.s16	%p61, %rs14, 32;
	and.b16  	%rs15, %rs10, 255;
	setp.eq.s16	%p62, %rs15, 32;
	selp.b16	%rs16, -1, 0, %p62;
	selp.b16	%rs17, -1, 0, %p61;
	selp.b16	%rs18, -1, 0, %p60;
	selp.b16	%rs19, -1, 0, %p59;
	shr.u16 	%rs20, %rs17, 7;
	cvt.u32.u16	%r1975, %rs20;
	shr.u16 	%rs21, %rs16, 7;
	and.b16  	%rs22, %rs21, 255;
	cvt.u32.u16	%r1976, %rs22;
	prmt.b32 	%r1977, %r1975, %r1976, 30212;
	shr.u16 	%rs23, %rs19, 7;
	cvt.u32.u16	%r1978, %rs23;
	shr.u16 	%rs24, %rs18, 7;
	and.b16  	%rs25, %rs24, 255;
	cvt.u32.u16	%r1979, %rs25;
	prmt.b32 	%r1980, %r1978, %r1979, 30212;
	prmt.b32 	%r1871, %r1980, %r1977, 4180;
	mov.b32	{%rs26, %rs27}, %r1902;
	shr.u16 	%rs28, %rs27, 8;
	setp.eq.s16	%p63, %rs28, 32;
	and.b16  	%rs29, %rs27, 255;
	setp.eq.s16	%p64, %rs29, 32;
	shr.u16 	%rs30, %rs26, 8;
	setp.eq.s16	%p65, %rs30, 32;
	and.b16  	%rs31, %rs26, 255;
	setp.eq.s16	%p66, %rs31, 32;
	selp.b16	%rs32, -1, 0, %p66;
	selp.b16	%rs33, -1, 0, %p65;
	selp.b16	%rs34, -1, 0, %p64;
	selp.b16	%rs35, -1, 0, %p63;
	shr.u16 	%rs36, %rs33, 7;
	cvt.u32.u16	%r1981, %rs36;
	shr.u16 	%rs37, %rs32, 7;
	and.b16  	%rs38, %rs37, 255;
	cvt.u32.u16	%r1982, %rs38;
	prmt.b32 	%r1983, %r1981, %r1982, 30212;
	shr.u16 	%rs39, %rs35, 7;
	cvt.u32.u16	%r1984, %rs39;
	shr.u16 	%rs40, %rs34, 7;
	and.b16  	%rs41, %rs40, 255;
	cvt.u32.u16	%r1985, %rs41;
	prmt.b32 	%r1986, %r1984, %r1985, 30212;
	prmt.b32 	%r1867, %r1986, %r1983, 4180;
	mov.b32	{%rs42, %rs43}, %r1914;
	shr.u16 	%rs44, %rs43, 8;
	setp.eq.s16	%p67, %rs44, 32;
	and.b16  	%rs45, %rs43, 255;
	setp.eq.s16	%p68, %rs45, 32;
	shr.u16 	%rs46, %rs42, 8;
	setp.eq.s16	%p69, %rs46, 32;
	and.b16  	%rs47, %rs42, 255;
	setp.eq.s16	%p70, %rs47, 32;
	selp.b16	%rs48, -1, 0, %p70;
	selp.b16	%rs49, -1, 0, %p69;
	selp.b16	%rs50, -1, 0, %p68;
	selp.b16	%rs51, -1, 0, %p67;
	shr.u16 	%rs52, %rs49, 7;
	cvt.u32.u16	%r1987, %rs52;
	shr.u16 	%rs53, %rs48, 7;
	and.b16  	%rs54, %rs53, 255;
	cvt.u32.u16	%r1988, %rs54;
	prmt.b32 	%r1989, %r1987, %r1988, 30212;
	shr.u16 	%rs55, %rs51, 7;
	cvt.u32.u16	%r1990, %rs55;
	shr.u16 	%rs56, %rs50, 7;
	and.b16  	%rs57, %rs56, 255;
	cvt.u32.u16	%r1991, %rs57;
	prmt.b32 	%r1992, %r1990, %r1991, 30212;
	prmt.b32 	%r1863, %r1992, %r1989, 4180;
	mov.b32	{%rs58, %rs59}, %r1926;
	shr.u16 	%rs60, %rs59, 8;
	setp.eq.s16	%p71, %rs60, 32;
	and.b16  	%rs61, %rs59, 255;
	setp.eq.s16	%p72, %rs61, 32;
	shr.u16 	%rs62, %rs58, 8;
	setp.eq.s16	%p73, %rs62, 32;
	and.b16  	%rs63, %rs58, 255;
	setp.eq.s16	%p74, %rs63, 32;
	selp.b16	%rs64, -1, 0, %p74;
	selp.b16	%rs65, -1, 0, %p73;
	selp.b16	%rs66, -1, 0, %p72;
	selp.b16	%rs67, -1, 0, %p71;
	shr.u16 	%rs68, %rs65, 7;
	cvt.u32.u16	%r1993, %rs68;
	shr.u16 	%rs69, %rs64, 7;
	and.b16  	%rs70, %rs69, 255;
	cvt.u32.u16	%r1994, %rs70;
	prmt.b32 	%r1995, %r1993, %r1994, 30212;
	shr.u16 	%rs71, %rs67, 7;
	cvt.u32.u16	%r1996, %rs71;
	shr.u16 	%rs72, %rs66, 7;
	and.b16  	%rs73, %rs72, 255;
	cvt.u32.u16	%r1997, %rs73;
	prmt.b32 	%r1998, %r1996, %r1997, 30212;
	prmt.b32 	%r1859, %r1998, %r1995, 4180;
	mov.b32	{%rs74, %rs75}, %r1938;
	shr.u16 	%rs76, %rs75, 8;
	setp.eq.s16	%p75, %rs76, 32;
	and.b16  	%rs77, %rs75, 255;
	setp.eq.s16	%p76, %rs77, 32;
	shr.u16 	%rs78, %rs74, 8;
	setp.eq.s16	%p77, %rs78, 32;
	and.b16  	%rs79, %rs74, 255;
	setp.eq.s16	%p78, %rs79, 32;
	selp.b16	%rs80, -1, 0, %p78;
	selp.b16	%rs81, -1, 0, %p77;
	selp.b16	%rs82, -1, 0, %p76;
	selp.b16	%rs83, -1, 0, %p75;
	shr.u16 	%rs84, %rs81, 7;
	cvt.u32.u16	%r1999, %rs84;
	shr.u16 	%rs85, %rs80, 7;
	and.b16  	%rs86, %rs85, 255;
	cvt.u32.u16	%r2000, %rs86;
	prmt.b32 	%r2001, %r1999, %r2000, 30212;
	shr.u16 	%rs87, %rs83, 7;
	cvt.u32.u16	%r2002, %rs87;
	shr.u16 	%rs88, %rs82, 7;
	and.b16  	%rs89, %rs88, 255;
	cvt.u32.u16	%r2003, %rs89;
	prmt.b32 	%r2004, %r2002, %r2003, 30212;
	prmt.b32 	%r1855, %r2004, %r2001, 4180;
	mov.b32	{%rs90, %rs91}, %r1950;
	shr.u16 	%rs92, %rs91, 8;
	setp.eq.s16	%p79, %rs92, 32;
	and.b16  	%rs93, %rs91, 255;
	setp.eq.s16	%p80, %rs93, 32;
	shr.u16 	%rs94, %rs90, 8;
	setp.eq.s16	%p81, %rs94, 32;
	and.b16  	%rs95, %rs90, 255;
	setp.eq.s16	%p82, %rs95, 32;
	selp.b16	%rs96, -1, 0, %p82;
	selp.b16	%rs97, -1, 0, %p81;
	selp.b16	%rs98, -1, 0, %p80;
	selp.b16	%rs99, -1, 0, %p79;
	shr.u16 	%rs100, %rs97, 7;
	cvt.u32.u16	%r2005, %rs100;
	shr.u16 	%rs101, %rs96, 7;
	and.b16  	%rs102, %rs101, 255;
	cvt.u32.u16	%r2006, %rs102;
	prmt.b32 	%r2007, %r2005, %r2006, 30212;
	shr.u16 	%rs103, %rs99, 7;
	cvt.u32.u16	%r2008, %rs103;
	shr.u16 	%rs104, %rs98, 7;
	and.b16  	%rs105, %rs104, 255;
	cvt.u32.u16	%r2009, %rs105;
	prmt.b32 	%r2010, %r2008, %r2009, 30212;
	prmt.b32 	%r1851, %r2010, %r2007, 4180;
	mov.b32	{%rs106, %rs107}, %r1962;
	shr.u16 	%rs108, %rs107, 8;
	setp.eq.s16	%p83, %rs108, 32;
	and.b16  	%rs109, %rs107, 255;
	setp.eq.s16	%p84, %rs109, 32;
	shr.u16 	%rs110, %rs106, 8;
	setp.eq.s16	%p85, %rs110, 32;
	and.b16  	%rs111, %rs106, 255;
	setp.eq.s16	%p86, %rs111, 32;
	selp.b16	%rs112, -1, 0, %p86;
	selp.b16	%rs113, -1, 0, %p85;
	selp.b16	%rs114, -1, 0, %p84;
	selp.b16	%rs115, -1, 0, %p83;
	shr.u16 	%rs116, %rs113, 7;
	cvt.u32.u16	%r2011, %rs116;
	shr.u16 	%rs117, %rs112, 7;
	and.b16  	%rs118, %rs117, 255;
	cvt.u32.u16	%r2012, %rs118;
	prmt.b32 	%r2013, %r2011, %r2012, 30212;
	shr.u16 	%rs119, %rs115, 7;
	cvt.u32.u16	%r2014, %rs119;
	shr.u16 	%rs120, %rs114, 7;
	and.b16  	%rs121, %rs120, 255;
	cvt.u32.u16	%r2015, %rs121;
	prmt.b32 	%r2016, %r2014, %r2015, 30212;
	prmt.b32 	%r1847, %r2016, %r2013, 4180;
	mov.b32	{%rs122, %rs123}, %r1974;
	shr.u16 	%rs124, %rs123, 8;
	setp.eq.s16	%p87, %rs124, 32;
	and.b16  	%rs125, %rs123, 255;
	setp.eq.s16	%p88, %rs125, 32;
	shr.u16 	%rs126, %rs122, 8;
	setp.eq.s16	%p89, %rs126, 32;
	and.b16  	%rs127, %rs122, 255;
	setp.eq.s16	%p90, %rs127, 32;
	selp.b16	%rs128, -1, 0, %p90;
	selp.b16	%rs129, -1, 0, %p89;
	selp.b16	%rs130, -1, 0, %p88;
	selp.b16	%rs131, -1, 0, %p87;
	shr.u16 	%rs132, %rs129, 7;
	cvt.u32.u16	%r2017, %rs132;
	shr.u16 	%rs133, %rs128, 7;
	and.b16  	%rs134, %rs133, 255;
	cvt.u32.u16	%r2018, %rs134;
	prmt.b32 	%r2019, %r2017, %r2018, 30212;
	shr.u16 	%rs135, %rs131, 7;
	cvt.u32.u16	%r2020, %rs135;
	shr.u16 	%rs136, %rs130, 7;
	and.b16  	%rs137, %rs136, 255;
	cvt.u32.u16	%r2021, %rs137;
	prmt.b32 	%r2022, %r2020, %r2021, 30212;
	prmt.b32 	%r1848, %r2022, %r2019, 4180;
	mov.u32 	%r1877, 24;
	// inline asm
	shf.r.wrap.b32 %r1846, %r1847, %r1848, %r1877;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1850, %r1851, %r1847, %r1877;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1854, %r1855, %r1851, %r1877;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1858, %r1859, %r1855, %r1877;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1862, %r1863, %r1859, %r1877;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1866, %r1867, %r1863, %r1877;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1870, %r1871, %r1867, %r1877;
	// inline asm
	mov.u32 	%r1875, 0;
	// inline asm
	shf.r.wrap.b32 %r1874, %r1875, %r1871, %r1877;
	// inline asm
	or.b32  	%r2023, %r1874, 255;
	and.b32  	%r2024, %r1890, 1077952576;
	shr.u32 	%r2025, %r2024, 1;
	and.b32  	%r2026, %r1890, -2139062144;
	shr.u32 	%r2027, %r2026, 2;
	not.b32 	%r2028, %r2027;
	and.b32  	%r2029, %r2025, %r2028;
	and.b32  	%r2030, %r1890, 522133279;
	add.s32 	%r2031, %r2030, 522133279;
	sub.s32 	%r2032, %r1886, %r2030;
	and.b32  	%r2033, %r2029, %r2032;
	and.b32  	%r2034, %r2033, %r2031;
	and.b32  	%r2035, %r2034, %r2023;
	not.b32 	%r2036, %r2035;
	and.b32  	%r10945, %r1890, %r2036;
	and.b32  	%r2037, %r1902, 1077952576;
	shr.u32 	%r2038, %r2037, 1;
	and.b32  	%r2039, %r1902, -2139062144;
	shr.u32 	%r2040, %r2039, 2;
	not.b32 	%r2041, %r2040;
	and.b32  	%r2042, %r2038, %r2041;
	and.b32  	%r2043, %r1902, 522133279;
	add.s32 	%r2044, %r2043, 522133279;
	sub.s32 	%r2045, %r1886, %r2043;
	and.b32  	%r2046, %r2042, %r2045;
	and.b32  	%r2047, %r2046, %r2044;
	and.b32  	%r2048, %r2047, %r1870;
	not.b32 	%r2049, %r2048;
	and.b32  	%r10946, %r1902, %r2049;
	and.b32  	%r2050, %r1914, 1077952576;
	shr.u32 	%r2051, %r2050, 1;
	and.b32  	%r2052, %r1914, -2139062144;
	shr.u32 	%r2053, %r2052, 2;
	not.b32 	%r2054, %r2053;
	and.b32  	%r2055, %r2051, %r2054;
	and.b32  	%r2056, %r1914, 522133279;
	add.s32 	%r2057, %r2056, 522133279;
	sub.s32 	%r2058, %r1886, %r2056;
	and.b32  	%r2059, %r2055, %r2058;
	and.b32  	%r2060, %r2059, %r2057;
	and.b32  	%r2061, %r2060, %r1866;
	not.b32 	%r2062, %r2061;
	and.b32  	%r10947, %r1914, %r2062;
	and.b32  	%r2063, %r1926, 1077952576;
	shr.u32 	%r2064, %r2063, 1;
	and.b32  	%r2065, %r1926, -2139062144;
	shr.u32 	%r2066, %r2065, 2;
	not.b32 	%r2067, %r2066;
	and.b32  	%r2068, %r2064, %r2067;
	and.b32  	%r2069, %r1926, 522133279;
	add.s32 	%r2070, %r2069, 522133279;
	sub.s32 	%r2071, %r1886, %r2069;
	and.b32  	%r2072, %r2068, %r2071;
	and.b32  	%r2073, %r2072, %r2070;
	and.b32  	%r2074, %r2073, %r1862;
	not.b32 	%r2075, %r2074;
	and.b32  	%r10948, %r1926, %r2075;
	and.b32  	%r2076, %r1938, 1077952576;
	shr.u32 	%r2077, %r2076, 1;
	and.b32  	%r2078, %r1938, -2139062144;
	shr.u32 	%r2079, %r2078, 2;
	not.b32 	%r2080, %r2079;
	and.b32  	%r2081, %r2077, %r2080;
	and.b32  	%r2082, %r1938, 522133279;
	add.s32 	%r2083, %r2082, 522133279;
	sub.s32 	%r2084, %r1886, %r2082;
	and.b32  	%r2085, %r2081, %r2084;
	and.b32  	%r2086, %r2085, %r2083;
	and.b32  	%r2087, %r2086, %r1858;
	not.b32 	%r2088, %r2087;
	and.b32  	%r10941, %r1938, %r2088;
	and.b32  	%r2089, %r1950, 1077952576;
	shr.u32 	%r2090, %r2089, 1;
	and.b32  	%r2091, %r1950, -2139062144;
	shr.u32 	%r2092, %r2091, 2;
	not.b32 	%r2093, %r2092;
	and.b32  	%r2094, %r2090, %r2093;
	and.b32  	%r2095, %r1950, 522133279;
	add.s32 	%r2096, %r2095, 522133279;
	sub.s32 	%r2097, %r1886, %r2095;
	and.b32  	%r2098, %r2094, %r2097;
	and.b32  	%r2099, %r2098, %r2096;
	and.b32  	%r2100, %r2099, %r1854;
	not.b32 	%r2101, %r2100;
	and.b32  	%r10942, %r1950, %r2101;
	and.b32  	%r2102, %r1962, 1077952576;
	shr.u32 	%r2103, %r2102, 1;
	and.b32  	%r2104, %r1962, -2139062144;
	shr.u32 	%r2105, %r2104, 2;
	not.b32 	%r2106, %r2105;
	and.b32  	%r2107, %r2103, %r2106;
	and.b32  	%r2108, %r1962, 522133279;
	add.s32 	%r2109, %r2108, 522133279;
	sub.s32 	%r2110, %r1886, %r2108;
	and.b32  	%r2111, %r2107, %r2110;
	and.b32  	%r2112, %r2111, %r2109;
	and.b32  	%r2113, %r2112, %r1850;
	not.b32 	%r2114, %r2113;
	and.b32  	%r10943, %r1962, %r2114;
	and.b32  	%r2115, %r1974, 1077952576;
	shr.u32 	%r2116, %r2115, 1;
	and.b32  	%r2117, %r1974, -2139062144;
	shr.u32 	%r2118, %r2117, 2;
	not.b32 	%r2119, %r2118;
	and.b32  	%r2120, %r2116, %r2119;
	and.b32  	%r2121, %r1974, 522133279;
	add.s32 	%r2122, %r2121, 522133279;
	sub.s32 	%r2123, %r1886, %r2121;
	and.b32  	%r2124, %r2120, %r2123;
	and.b32  	%r2125, %r2124, %r2122;
	and.b32  	%r2126, %r2125, %r1846;
	not.b32 	%r2127, %r2126;
	and.b32  	%r10944, %r1974, %r2127;
	mov.u32 	%r10949, %r15;
	bra.uni 	BB1_1536;

BB1_101:
	setp.gt.s32	%p6, %r1845, 119;
	@%p6 bra 	BB1_115;

	setp.gt.s32	%p13, %r1845, 114;
	@%p13 bra 	BB1_111;

	setp.eq.s32	%p17, %r1845, 113;
	@%p17 bra 	BB1_776;
	bra.uni 	BB1_104;

BB1_776:
	setp.eq.s32	%p506, %r15, 0;
	add.s32 	%r10949, %r15, %r15;
	setp.gt.u32	%p507, %r10949, 31;
	or.pred  	%p508, %p506, %p507;
	@%p508 bra 	BB1_777;

	and.b32  	%r4081, %r19, 255;
	and.b32  	%r4082, %r19, 65280;
	prmt.b32 	%r4083, %r4082, %r4081, 8452;
	bfe.u32 	%r4084, %r19, 16, 8;
	and.b32  	%r4085, %r19, -16777216;
	shr.u32 	%r4086, %r4085, 8;
	or.b32  	%r4087, %r4084, %r4086;
	and.b32  	%r4088, %r18, 65280;
	and.b32  	%r4089, %r18, 255;
	prmt.b32 	%r4090, %r4088, %r4089, 8452;
	bfe.u32 	%r4091, %r18, 16, 8;
	and.b32  	%r4092, %r18, -16777216;
	shr.u32 	%r4093, %r4092, 8;
	or.b32  	%r4094, %r4091, %r4093;
	and.b32  	%r4095, %r17, 65280;
	and.b32  	%r4096, %r17, 255;
	prmt.b32 	%r4097, %r4095, %r4096, 8452;
	bfe.u32 	%r4098, %r17, 16, 8;
	and.b32  	%r4099, %r17, -16777216;
	shr.u32 	%r4100, %r4099, 8;
	or.b32  	%r4101, %r4098, %r4100;
	and.b32  	%r4102, %r16, 65280;
	and.b32  	%r4103, %r16, 255;
	prmt.b32 	%r4104, %r4102, %r4103, 8452;
	bfe.u32 	%r4105, %r16, 16, 8;
	and.b32  	%r4106, %r16, -16777216;
	shr.u32 	%r4107, %r4106, 8;
	or.b32  	%r4108, %r4105, %r4107;
	shl.b32 	%r4109, %r4083, 8;
	or.b32  	%r10945, %r4109, %r4083;
	shl.b32 	%r4110, %r4087, 8;
	or.b32  	%r10946, %r4110, %r4087;
	shl.b32 	%r4111, %r4090, 8;
	or.b32  	%r10947, %r4111, %r4090;
	shl.b32 	%r4112, %r4094, 8;
	or.b32  	%r10948, %r4112, %r4094;
	shl.b32 	%r4113, %r4097, 8;
	or.b32  	%r10941, %r4113, %r4097;
	shl.b32 	%r4114, %r4101, 8;
	or.b32  	%r10942, %r4114, %r4101;
	shl.b32 	%r4115, %r4104, 8;
	or.b32  	%r10943, %r4115, %r4104;
	shl.b32 	%r4116, %r4108, 8;
	or.b32  	%r10944, %r4116, %r4108;
	bra.uni 	BB1_1536;

BB1_22:
	setp.gt.s32	%p47, %r1845, 63;
	@%p47 bra 	BB1_30;

	setp.eq.s32	%p51, %r1845, 45;
	@%p51 bra 	BB1_368;
	bra.uni 	BB1_24;

BB1_368:
	setp.ge.u32	%p269, %r25, %r15;
	@%p269 bra 	BB1_10;

	and.b32  	%r3677, %r24, 3;
	shl.b32 	%r3678, %r3677, 3;
	mov.u32 	%r3679, 255;
	shl.b32 	%r362, %r3679, %r3678;
	not.b32 	%r363, %r362;
	and.b32  	%r364, %r362, 16843009;
	shr.u32 	%r3676, %r25, 2;
	setp.gt.s32	%p270, %r3676, 3;
	@%p270 bra 	BB1_377;

	setp.gt.s32	%p276, %r3676, 1;
	@%p276 bra 	BB1_374;

	setp.eq.s32	%p279, %r3676, 0;
	@%p279 bra 	BB1_387;
	bra.uni 	BB1_372;

BB1_387:
	and.b32  	%r3708, %r19, %r363;
	and.b32  	%r3709, %r362, %r19;
	sub.s32 	%r3710, %r3709, %r364;
	and.b32  	%r3711, %r3710, %r362;
	or.b32  	%r10945, %r3711, %r3708;
	bra.uni 	BB1_612;

BB1_88:
	setp.gt.s32	%p20, %r1845, 107;
	@%p20 bra 	BB1_93;

	setp.eq.s32	%p24, %r1845, 105;
	@%p24 bra 	BB1_1019;
	bra.uni 	BB1_90;

BB1_1019:
	setp.gt.u32	%p692, %r25, %r15;
	add.s32 	%r10949, %r15, 1;
	setp.gt.u32	%p693, %r10949, 31;
	or.pred  	%p694, %p692, %p693;
	@%p694 bra 	BB1_777;

	mov.u32 	%r5054, 24;
	// inline asm
	shf.r.wrap.b32 %r10944, %r21, %r20, %r5054;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r22, %r21, %r5054;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r23, %r22, %r5054;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r16, %r23, %r5054;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r17, %r16, %r5054;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r18, %r17, %r5054;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r19, %r18, %r5054;
	// inline asm
	and.b32  	%r5056, %r24, 3;
	shl.b32 	%r5057, %r5056, 3;
	shl.b32 	%r932, %r27, %r5057;
	mov.u32 	%r5058, 1;
	shl.b32 	%r5059, %r5058, %r5057;
	add.s32 	%r933, %r5059, -1;
	mov.u32 	%r5060, -256;
	shl.b32 	%r934, %r5060, %r5057;
	shr.u32 	%r5055, %r25, 2;
	setp.gt.s32	%p695, %r5055, 3;
	@%p695 bra 	BB1_1028;

	setp.gt.s32	%p701, %r5055, 1;
	@%p701 bra 	BB1_1025;

	setp.eq.s32	%p704, %r5055, 0;
	@%p704 bra 	BB1_1039;
	bra.uni 	BB1_1023;

BB1_1039:
	mov.u32 	%r5083, 0;
	// inline asm
	shf.r.wrap.b32 %r5082, %r5083, %r19, %r5054;
	// inline asm
	and.b32  	%r5086, %r933, %r19;
	or.b32  	%r5087, %r5086, %r932;
	and.b32  	%r5088, %r5082, %r934;
	or.b32  	%r10945, %r5087, %r5088;
	bra.uni 	BB1_1536;

BB1_57:
	setp.gt.s32	%p34, %r1845, 89;
	@%p34 bra 	BB1_67;

	setp.eq.s32	%p38, %r1845, 84;
	@%p38 bra 	BB1_1512;
	bra.uni 	BB1_59;

BB1_1512:
	setp.ge.u32	%p1018, %r25, %r15;
	@%p1018 bra 	BB1_777;

	and.b32  	%r8216, %r24, 3;
	shl.b32 	%r8217, %r8216, 3;
	mov.u32 	%r8218, 32;
	shl.b32 	%r1711, %r8218, %r8217;
	shr.u32 	%r8215, %r25, 2;
	setp.gt.s32	%p1019, %r8215, 3;
	@%p1019 bra 	BB1_1521;

	setp.gt.s32	%p1025, %r8215, 1;
	@%p1025 bra 	BB1_1518;

	setp.eq.s32	%p1028, %r8215, 0;
	@%p1028 bra 	BB1_1531;
	bra.uni 	BB1_1516;

BB1_1531:
	and.b32  	%r8310, %r19, 1077952576;
	shr.u32 	%r8311, %r8310, 1;
	and.b32  	%r8312, %r19, -2139062144;
	shr.u32 	%r8313, %r8312, 2;
	not.b32 	%r8314, %r8313;
	and.b32  	%r8315, %r8311, %r8314;
	and.b32  	%r8316, %r19, 522133279;
	add.s32 	%r8317, %r8316, 522133279;
	mov.u32 	%r8318, -84215046;
	sub.s32 	%r8319, %r8318, %r8316;
	and.b32  	%r8320, %r8315, %r8319;
	and.b32  	%r8321, %r8320, %r8317;
	and.b32  	%r8322, %r8321, %r1711;
	xor.b32  	%r10945, %r8322, %r19;
	bra.uni 	BB1_1018;

BB1_115:
	setp.gt.s32	%p7, %r1845, 121;
	@%p7 bra 	BB1_124;

	setp.eq.s32	%p11, %r1845, 120;
	@%p11 bra 	BB1_1149;
	bra.uni 	BB1_117;

BB1_1149:
	setp.ge.u32	%p767, %r25, %r15;
	add.s32 	%r5663, %r25, %r27;
	setp.gt.u32	%p768, %r5663, %r15;
	or.pred  	%p769, %p767, %p768;
	@%p769 bra 	BB1_777;

	setp.gt.s32	%p770, %r25, 15;
	@%p770 bra 	BB1_1179;

	setp.gt.s32	%p794, %r25, 7;
	@%p794 bra 	BB1_1164;

	setp.gt.s32	%p806, %r25, 3;
	@%p806 bra 	BB1_1157;

	setp.eq.s32	%p812, %r25, 1;
	@%p812 bra 	BB1_1228;

	setp.eq.s32	%p813, %r25, 2;
	@%p813 bra 	BB1_1227;
	bra.uni 	BB1_1155;

BB1_1227:
	mov.u32 	%r6164, 16;
	// inline asm
	shf.r.wrap.b32 %r10945, %r19, %r18, %r6164;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r18, %r17, %r6164;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r17, %r16, %r6164;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6145, %r16, %r23, %r6164;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r23, %r22, %r6164;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r22, %r21, %r6164;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r21, %r20, %r6164;
	// inline asm
	mov.u32 	%r6163, 0;
	// inline asm
	shf.r.wrap.b32 %r10944, %r20, %r6163, %r6164;
	// inline asm
	mov.u32 	%r20, %r6145;
	bra.uni 	BB1_1234;

BB1_18:
	setp.eq.s32	%p54, %r1845, 42;
	@%p54 bra 	BB1_443;

	setp.eq.s32	%p55, %r1845, 43;
	@%p55 bra 	BB1_388;
	bra.uni 	BB1_20;

BB1_388:
	setp.ge.u32	%p281, %r25, %r15;
	@%p281 bra 	BB1_10;

	and.b32  	%r3713, %r24, 3;
	shl.b32 	%r3714, %r3713, 3;
	mov.u32 	%r3715, 255;
	shl.b32 	%r373, %r3715, %r3714;
	not.b32 	%r374, %r373;
	and.b32  	%r375, %r373, 16843009;
	shr.u32 	%r3712, %r25, 2;
	setp.gt.s32	%p282, %r3712, 3;
	@%p282 bra 	BB1_397;

	setp.gt.s32	%p288, %r3712, 1;
	@%p288 bra 	BB1_394;

	setp.eq.s32	%p291, %r3712, 0;
	@%p291 bra 	BB1_407;
	bra.uni 	BB1_392;

BB1_407:
	and.b32  	%r3744, %r19, %r374;
	and.b32  	%r3745, %r373, %r19;
	add.s32 	%r3746, %r3745, %r375;
	and.b32  	%r3747, %r3746, %r373;
	or.b32  	%r10945, %r3747, %r3744;
	bra.uni 	BB1_612;

BB1_78:
	setp.eq.s32	%p27, %r1845, 100;
	@%p27 bra 	BB1_1414;

	setp.eq.s32	%p28, %r1845, 101;
	@%p28 bra 	BB1_134;
	bra.uni 	BB1_80;

BB1_134:
	and.b32  	%r2160, %r19, 1077952576;
	shr.u32 	%r2161, %r2160, 1;
	and.b32  	%r2162, %r19, -2139062144;
	shr.u32 	%r2163, %r2162, 2;
	not.b32 	%r2164, %r2163;
	and.b32  	%r2165, %r2161, %r2164;
	and.b32  	%r2166, %r19, 522133279;
	add.s32 	%r2167, %r2166, 522133279;
	mov.u32 	%r2168, -84215046;
	sub.s32 	%r2169, %r2168, %r2166;
	and.b32  	%r2170, %r2165, %r2169;
	and.b32  	%r2171, %r2170, %r2167;
	or.b32  	%r2172, %r2171, %r19;
	and.b32  	%r2173, %r18, 1077952576;
	shr.u32 	%r2174, %r2173, 1;
	and.b32  	%r2175, %r18, -2139062144;
	shr.u32 	%r2176, %r2175, 2;
	not.b32 	%r2177, %r2176;
	and.b32  	%r2178, %r2174, %r2177;
	and.b32  	%r2179, %r18, 522133279;
	add.s32 	%r2180, %r2179, 522133279;
	sub.s32 	%r2181, %r2168, %r2179;
	and.b32  	%r2182, %r2178, %r2181;
	and.b32  	%r2183, %r2182, %r2180;
	or.b32  	%r2184, %r2183, %r18;
	and.b32  	%r2185, %r17, 1077952576;
	shr.u32 	%r2186, %r2185, 1;
	and.b32  	%r2187, %r17, -2139062144;
	shr.u32 	%r2188, %r2187, 2;
	not.b32 	%r2189, %r2188;
	and.b32  	%r2190, %r2186, %r2189;
	and.b32  	%r2191, %r17, 522133279;
	add.s32 	%r2192, %r2191, 522133279;
	sub.s32 	%r2193, %r2168, %r2191;
	and.b32  	%r2194, %r2190, %r2193;
	and.b32  	%r2195, %r2194, %r2192;
	or.b32  	%r2196, %r2195, %r17;
	and.b32  	%r2197, %r16, 1077952576;
	shr.u32 	%r2198, %r2197, 1;
	and.b32  	%r2199, %r16, -2139062144;
	shr.u32 	%r2200, %r2199, 2;
	not.b32 	%r2201, %r2200;
	and.b32  	%r2202, %r2198, %r2201;
	and.b32  	%r2203, %r16, 522133279;
	add.s32 	%r2204, %r2203, 522133279;
	sub.s32 	%r2205, %r2168, %r2203;
	and.b32  	%r2206, %r2202, %r2205;
	and.b32  	%r2207, %r2206, %r2204;
	or.b32  	%r2208, %r2207, %r16;
	and.b32  	%r2209, %r23, 1077952576;
	shr.u32 	%r2210, %r2209, 1;
	and.b32  	%r2211, %r23, -2139062144;
	shr.u32 	%r2212, %r2211, 2;
	not.b32 	%r2213, %r2212;
	and.b32  	%r2214, %r2210, %r2213;
	and.b32  	%r2215, %r23, 522133279;
	add.s32 	%r2216, %r2215, 522133279;
	sub.s32 	%r2217, %r2168, %r2215;
	and.b32  	%r2218, %r2214, %r2217;
	and.b32  	%r2219, %r2218, %r2216;
	or.b32  	%r2220, %r2219, %r23;
	and.b32  	%r2221, %r22, 1077952576;
	shr.u32 	%r2222, %r2221, 1;
	and.b32  	%r2223, %r22, -2139062144;
	shr.u32 	%r2224, %r2223, 2;
	not.b32 	%r2225, %r2224;
	and.b32  	%r2226, %r2222, %r2225;
	and.b32  	%r2227, %r22, 522133279;
	add.s32 	%r2228, %r2227, 522133279;
	sub.s32 	%r2229, %r2168, %r2227;
	and.b32  	%r2230, %r2226, %r2229;
	and.b32  	%r2231, %r2230, %r2228;
	or.b32  	%r2232, %r2231, %r22;
	and.b32  	%r2233, %r21, 1077952576;
	shr.u32 	%r2234, %r2233, 1;
	and.b32  	%r2235, %r21, -2139062144;
	shr.u32 	%r2236, %r2235, 2;
	not.b32 	%r2237, %r2236;
	and.b32  	%r2238, %r2234, %r2237;
	and.b32  	%r2239, %r21, 522133279;
	add.s32 	%r2240, %r2239, 522133279;
	sub.s32 	%r2241, %r2168, %r2239;
	and.b32  	%r2242, %r2238, %r2241;
	and.b32  	%r2243, %r2242, %r2240;
	or.b32  	%r2244, %r2243, %r21;
	and.b32  	%r2245, %r20, 1077952576;
	shr.u32 	%r2246, %r2245, 1;
	and.b32  	%r2247, %r20, -2139062144;
	shr.u32 	%r2248, %r2247, 2;
	not.b32 	%r2249, %r2248;
	and.b32  	%r2250, %r2246, %r2249;
	and.b32  	%r2251, %r20, 522133279;
	add.s32 	%r2252, %r2251, 522133279;
	sub.s32 	%r2253, %r2168, %r2251;
	and.b32  	%r2254, %r2250, %r2253;
	and.b32  	%r2255, %r2254, %r2252;
	or.b32  	%r2256, %r2255, %r20;
	mov.b32	{%rs138, %rs139}, %r2172;
	shr.u16 	%rs140, %rs139, 8;
	cvt.u16.u32	%rs141, %r24;
	and.b16  	%rs142, %rs141, 255;
	setp.eq.s16	%p91, %rs140, %rs142;
	and.b16  	%rs143, %rs139, 255;
	setp.eq.s16	%p92, %rs143, %rs142;
	shr.u16 	%rs144, %rs138, 8;
	setp.eq.s16	%p93, %rs144, %rs142;
	and.b16  	%rs145, %rs138, 255;
	setp.eq.s16	%p94, %rs145, %rs142;
	selp.b16	%rs146, -1, 0, %p94;
	selp.b16	%rs147, -1, 0, %p93;
	selp.b16	%rs148, -1, 0, %p92;
	selp.b16	%rs149, -1, 0, %p91;
	shr.u16 	%rs150, %rs147, 7;
	cvt.u32.u16	%r2257, %rs150;
	shr.u16 	%rs151, %rs146, 7;
	and.b16  	%rs152, %rs151, 255;
	cvt.u32.u16	%r2258, %rs152;
	prmt.b32 	%r2259, %r2257, %r2258, 30212;
	shr.u16 	%rs153, %rs149, 7;
	cvt.u32.u16	%r2260, %rs153;
	shr.u16 	%rs154, %rs148, 7;
	and.b16  	%rs155, %rs154, 255;
	cvt.u32.u16	%r2261, %rs155;
	prmt.b32 	%r2262, %r2260, %r2261, 30212;
	prmt.b32 	%r2153, %r2262, %r2259, 4180;
	mov.b32	{%rs156, %rs157}, %r2184;
	shr.u16 	%rs158, %rs157, 8;
	setp.eq.s16	%p95, %rs158, %rs142;
	and.b16  	%rs159, %rs157, 255;
	setp.eq.s16	%p96, %rs159, %rs142;
	shr.u16 	%rs160, %rs156, 8;
	setp.eq.s16	%p97, %rs160, %rs142;
	and.b16  	%rs161, %rs156, 255;
	setp.eq.s16	%p98, %rs161, %rs142;
	selp.b16	%rs162, -1, 0, %p98;
	selp.b16	%rs163, -1, 0, %p97;
	selp.b16	%rs164, -1, 0, %p96;
	selp.b16	%rs165, -1, 0, %p95;
	shr.u16 	%rs166, %rs163, 7;
	cvt.u32.u16	%r2263, %rs166;
	shr.u16 	%rs167, %rs162, 7;
	and.b16  	%rs168, %rs167, 255;
	cvt.u32.u16	%r2264, %rs168;
	prmt.b32 	%r2265, %r2263, %r2264, 30212;
	shr.u16 	%rs169, %rs165, 7;
	cvt.u32.u16	%r2266, %rs169;
	shr.u16 	%rs170, %rs164, 7;
	and.b16  	%rs171, %rs170, 255;
	cvt.u32.u16	%r2267, %rs171;
	prmt.b32 	%r2268, %r2266, %r2267, 30212;
	prmt.b32 	%r2149, %r2268, %r2265, 4180;
	mov.b32	{%rs172, %rs173}, %r2196;
	shr.u16 	%rs174, %rs173, 8;
	setp.eq.s16	%p99, %rs174, %rs142;
	and.b16  	%rs175, %rs173, 255;
	setp.eq.s16	%p100, %rs175, %rs142;
	shr.u16 	%rs176, %rs172, 8;
	setp.eq.s16	%p101, %rs176, %rs142;
	and.b16  	%rs177, %rs172, 255;
	setp.eq.s16	%p102, %rs177, %rs142;
	selp.b16	%rs178, -1, 0, %p102;
	selp.b16	%rs179, -1, 0, %p101;
	selp.b16	%rs180, -1, 0, %p100;
	selp.b16	%rs181, -1, 0, %p99;
	shr.u16 	%rs182, %rs179, 7;
	cvt.u32.u16	%r2269, %rs182;
	shr.u16 	%rs183, %rs178, 7;
	and.b16  	%rs184, %rs183, 255;
	cvt.u32.u16	%r2270, %rs184;
	prmt.b32 	%r2271, %r2269, %r2270, 30212;
	shr.u16 	%rs185, %rs181, 7;
	cvt.u32.u16	%r2272, %rs185;
	shr.u16 	%rs186, %rs180, 7;
	and.b16  	%rs187, %rs186, 255;
	cvt.u32.u16	%r2273, %rs187;
	prmt.b32 	%r2274, %r2272, %r2273, 30212;
	prmt.b32 	%r2145, %r2274, %r2271, 4180;
	mov.b32	{%rs188, %rs189}, %r2208;
	shr.u16 	%rs190, %rs189, 8;
	setp.eq.s16	%p103, %rs190, %rs142;
	and.b16  	%rs191, %rs189, 255;
	setp.eq.s16	%p104, %rs191, %rs142;
	shr.u16 	%rs192, %rs188, 8;
	setp.eq.s16	%p105, %rs192, %rs142;
	and.b16  	%rs193, %rs188, 255;
	setp.eq.s16	%p106, %rs193, %rs142;
	selp.b16	%rs194, -1, 0, %p106;
	selp.b16	%rs195, -1, 0, %p105;
	selp.b16	%rs196, -1, 0, %p104;
	selp.b16	%rs197, -1, 0, %p103;
	shr.u16 	%rs198, %rs195, 7;
	cvt.u32.u16	%r2275, %rs198;
	shr.u16 	%rs199, %rs194, 7;
	and.b16  	%rs200, %rs199, 255;
	cvt.u32.u16	%r2276, %rs200;
	prmt.b32 	%r2277, %r2275, %r2276, 30212;
	shr.u16 	%rs201, %rs197, 7;
	cvt.u32.u16	%r2278, %rs201;
	shr.u16 	%rs202, %rs196, 7;
	and.b16  	%rs203, %rs202, 255;
	cvt.u32.u16	%r2279, %rs203;
	prmt.b32 	%r2280, %r2278, %r2279, 30212;
	prmt.b32 	%r2141, %r2280, %r2277, 4180;
	mov.b32	{%rs204, %rs205}, %r2220;
	shr.u16 	%rs206, %rs205, 8;
	setp.eq.s16	%p107, %rs206, %rs142;
	and.b16  	%rs207, %rs205, 255;
	setp.eq.s16	%p108, %rs207, %rs142;
	shr.u16 	%rs208, %rs204, 8;
	setp.eq.s16	%p109, %rs208, %rs142;
	and.b16  	%rs209, %rs204, 255;
	setp.eq.s16	%p110, %rs209, %rs142;
	selp.b16	%rs210, -1, 0, %p110;
	selp.b16	%rs211, -1, 0, %p109;
	selp.b16	%rs212, -1, 0, %p108;
	selp.b16	%rs213, -1, 0, %p107;
	shr.u16 	%rs214, %rs211, 7;
	cvt.u32.u16	%r2281, %rs214;
	shr.u16 	%rs215, %rs210, 7;
	and.b16  	%rs216, %rs215, 255;
	cvt.u32.u16	%r2282, %rs216;
	prmt.b32 	%r2283, %r2281, %r2282, 30212;
	shr.u16 	%rs217, %rs213, 7;
	cvt.u32.u16	%r2284, %rs217;
	shr.u16 	%rs218, %rs212, 7;
	and.b16  	%rs219, %rs218, 255;
	cvt.u32.u16	%r2285, %rs219;
	prmt.b32 	%r2286, %r2284, %r2285, 30212;
	prmt.b32 	%r2137, %r2286, %r2283, 4180;
	mov.b32	{%rs220, %rs221}, %r2232;
	shr.u16 	%rs222, %rs221, 8;
	setp.eq.s16	%p111, %rs222, %rs142;
	and.b16  	%rs223, %rs221, 255;
	setp.eq.s16	%p112, %rs223, %rs142;
	shr.u16 	%rs224, %rs220, 8;
	setp.eq.s16	%p113, %rs224, %rs142;
	and.b16  	%rs225, %rs220, 255;
	setp.eq.s16	%p114, %rs225, %rs142;
	selp.b16	%rs226, -1, 0, %p114;
	selp.b16	%rs227, -1, 0, %p113;
	selp.b16	%rs228, -1, 0, %p112;
	selp.b16	%rs229, -1, 0, %p111;
	shr.u16 	%rs230, %rs227, 7;
	cvt.u32.u16	%r2287, %rs230;
	shr.u16 	%rs231, %rs226, 7;
	and.b16  	%rs232, %rs231, 255;
	cvt.u32.u16	%r2288, %rs232;
	prmt.b32 	%r2289, %r2287, %r2288, 30212;
	shr.u16 	%rs233, %rs229, 7;
	cvt.u32.u16	%r2290, %rs233;
	shr.u16 	%rs234, %rs228, 7;
	and.b16  	%rs235, %rs234, 255;
	cvt.u32.u16	%r2291, %rs235;
	prmt.b32 	%r2292, %r2290, %r2291, 30212;
	prmt.b32 	%r2133, %r2292, %r2289, 4180;
	mov.b32	{%rs236, %rs237}, %r2244;
	shr.u16 	%rs238, %rs237, 8;
	setp.eq.s16	%p115, %rs238, %rs142;
	and.b16  	%rs239, %rs237, 255;
	setp.eq.s16	%p116, %rs239, %rs142;
	shr.u16 	%rs240, %rs236, 8;
	setp.eq.s16	%p117, %rs240, %rs142;
	and.b16  	%rs241, %rs236, 255;
	setp.eq.s16	%p118, %rs241, %rs142;
	selp.b16	%rs242, -1, 0, %p118;
	selp.b16	%rs243, -1, 0, %p117;
	selp.b16	%rs244, -1, 0, %p116;
	selp.b16	%rs245, -1, 0, %p115;
	shr.u16 	%rs246, %rs243, 7;
	cvt.u32.u16	%r2293, %rs246;
	shr.u16 	%rs247, %rs242, 7;
	and.b16  	%rs248, %rs247, 255;
	cvt.u32.u16	%r2294, %rs248;
	prmt.b32 	%r2295, %r2293, %r2294, 30212;
	shr.u16 	%rs249, %rs245, 7;
	cvt.u32.u16	%r2296, %rs249;
	shr.u16 	%rs250, %rs244, 7;
	and.b16  	%rs251, %rs250, 255;
	cvt.u32.u16	%r2297, %rs251;
	prmt.b32 	%r2298, %r2296, %r2297, 30212;
	prmt.b32 	%r2129, %r2298, %r2295, 4180;
	mov.b32	{%rs252, %rs253}, %r2256;
	shr.u16 	%rs254, %rs253, 8;
	setp.eq.s16	%p119, %rs254, %rs142;
	and.b16  	%rs255, %rs253, 255;
	setp.eq.s16	%p120, %rs255, %rs142;
	shr.u16 	%rs256, %rs252, 8;
	setp.eq.s16	%p121, %rs256, %rs142;
	and.b16  	%rs257, %rs252, 255;
	setp.eq.s16	%p122, %rs257, %rs142;
	selp.b16	%rs258, -1, 0, %p122;
	selp.b16	%rs259, -1, 0, %p121;
	selp.b16	%rs260, -1, 0, %p120;
	selp.b16	%rs261, -1, 0, %p119;
	shr.u16 	%rs262, %rs259, 7;
	cvt.u32.u16	%r2299, %rs262;
	shr.u16 	%rs263, %rs258, 7;
	and.b16  	%rs264, %rs263, 255;
	cvt.u32.u16	%r2300, %rs264;
	prmt.b32 	%r2301, %r2299, %r2300, 30212;
	shr.u16 	%rs265, %rs261, 7;
	cvt.u32.u16	%r2302, %rs265;
	shr.u16 	%rs266, %rs260, 7;
	and.b16  	%rs267, %rs266, 255;
	cvt.u32.u16	%r2303, %rs267;
	prmt.b32 	%r2304, %r2302, %r2303, 30212;
	prmt.b32 	%r2130, %r2304, %r2301, 4180;
	mov.u32 	%r2159, 24;
	// inline asm
	shf.r.wrap.b32 %r2128, %r2129, %r2130, %r2159;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2132, %r2133, %r2129, %r2159;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2136, %r2137, %r2133, %r2159;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2140, %r2141, %r2137, %r2159;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2144, %r2145, %r2141, %r2159;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2148, %r2149, %r2145, %r2159;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2152, %r2153, %r2149, %r2159;
	// inline asm
	mov.u32 	%r2157, 0;
	// inline asm
	shf.r.wrap.b32 %r2156, %r2157, %r2153, %r2159;
	// inline asm
	or.b32  	%r2305, %r2156, 255;
	and.b32  	%r2306, %r2172, 1077952576;
	shr.u32 	%r2307, %r2306, 1;
	and.b32  	%r2308, %r2172, -2139062144;
	shr.u32 	%r2309, %r2308, 2;
	not.b32 	%r2310, %r2309;
	and.b32  	%r2311, %r2307, %r2310;
	and.b32  	%r2312, %r2172, 522133279;
	add.s32 	%r2313, %r2312, 522133279;
	sub.s32 	%r2314, %r2168, %r2312;
	and.b32  	%r2315, %r2311, %r2314;
	and.b32  	%r2316, %r2315, %r2313;
	and.b32  	%r2317, %r2316, %r2305;
	not.b32 	%r2318, %r2317;
	and.b32  	%r10945, %r2172, %r2318;
	and.b32  	%r2319, %r2184, 1077952576;
	shr.u32 	%r2320, %r2319, 1;
	and.b32  	%r2321, %r2184, -2139062144;
	shr.u32 	%r2322, %r2321, 2;
	not.b32 	%r2323, %r2322;
	and.b32  	%r2324, %r2320, %r2323;
	and.b32  	%r2325, %r2184, 522133279;
	add.s32 	%r2326, %r2325, 522133279;
	sub.s32 	%r2327, %r2168, %r2325;
	and.b32  	%r2328, %r2324, %r2327;
	and.b32  	%r2329, %r2328, %r2326;
	and.b32  	%r2330, %r2329, %r2152;
	not.b32 	%r2331, %r2330;
	and.b32  	%r10946, %r2184, %r2331;
	and.b32  	%r2332, %r2196, 1077952576;
	shr.u32 	%r2333, %r2332, 1;
	and.b32  	%r2334, %r2196, -2139062144;
	shr.u32 	%r2335, %r2334, 2;
	not.b32 	%r2336, %r2335;
	and.b32  	%r2337, %r2333, %r2336;
	and.b32  	%r2338, %r2196, 522133279;
	add.s32 	%r2339, %r2338, 522133279;
	sub.s32 	%r2340, %r2168, %r2338;
	and.b32  	%r2341, %r2337, %r2340;
	and.b32  	%r2342, %r2341, %r2339;
	and.b32  	%r2343, %r2342, %r2148;
	not.b32 	%r2344, %r2343;
	and.b32  	%r10947, %r2196, %r2344;
	and.b32  	%r2345, %r2208, 1077952576;
	shr.u32 	%r2346, %r2345, 1;
	and.b32  	%r2347, %r2208, -2139062144;
	shr.u32 	%r2348, %r2347, 2;
	not.b32 	%r2349, %r2348;
	and.b32  	%r2350, %r2346, %r2349;
	and.b32  	%r2351, %r2208, 522133279;
	add.s32 	%r2352, %r2351, 522133279;
	sub.s32 	%r2353, %r2168, %r2351;
	and.b32  	%r2354, %r2350, %r2353;
	and.b32  	%r2355, %r2354, %r2352;
	and.b32  	%r2356, %r2355, %r2144;
	not.b32 	%r2357, %r2356;
	and.b32  	%r10948, %r2208, %r2357;
	and.b32  	%r2358, %r2220, 1077952576;
	shr.u32 	%r2359, %r2358, 1;
	and.b32  	%r2360, %r2220, -2139062144;
	shr.u32 	%r2361, %r2360, 2;
	not.b32 	%r2362, %r2361;
	and.b32  	%r2363, %r2359, %r2362;
	and.b32  	%r2364, %r2220, 522133279;
	add.s32 	%r2365, %r2364, 522133279;
	sub.s32 	%r2366, %r2168, %r2364;
	and.b32  	%r2367, %r2363, %r2366;
	and.b32  	%r2368, %r2367, %r2365;
	and.b32  	%r2369, %r2368, %r2140;
	not.b32 	%r2370, %r2369;
	and.b32  	%r10941, %r2220, %r2370;
	and.b32  	%r2371, %r2232, 1077952576;
	shr.u32 	%r2372, %r2371, 1;
	and.b32  	%r2373, %r2232, -2139062144;
	shr.u32 	%r2374, %r2373, 2;
	not.b32 	%r2375, %r2374;
	and.b32  	%r2376, %r2372, %r2375;
	and.b32  	%r2377, %r2232, 522133279;
	add.s32 	%r2378, %r2377, 522133279;
	sub.s32 	%r2379, %r2168, %r2377;
	and.b32  	%r2380, %r2376, %r2379;
	and.b32  	%r2381, %r2380, %r2378;
	and.b32  	%r2382, %r2381, %r2136;
	not.b32 	%r2383, %r2382;
	and.b32  	%r10942, %r2232, %r2383;
	and.b32  	%r2384, %r2244, 1077952576;
	shr.u32 	%r2385, %r2384, 1;
	and.b32  	%r2386, %r2244, -2139062144;
	shr.u32 	%r2387, %r2386, 2;
	not.b32 	%r2388, %r2387;
	and.b32  	%r2389, %r2385, %r2388;
	and.b32  	%r2390, %r2244, 522133279;
	add.s32 	%r2391, %r2390, 522133279;
	sub.s32 	%r2392, %r2168, %r2390;
	and.b32  	%r2393, %r2389, %r2392;
	and.b32  	%r2394, %r2393, %r2391;
	and.b32  	%r2395, %r2394, %r2132;
	not.b32 	%r2396, %r2395;
	and.b32  	%r10943, %r2244, %r2396;
	and.b32  	%r2397, %r2256, 1077952576;
	shr.u32 	%r2398, %r2397, 1;
	and.b32  	%r2399, %r2256, -2139062144;
	shr.u32 	%r2400, %r2399, 2;
	not.b32 	%r2401, %r2400;
	and.b32  	%r2402, %r2398, %r2401;
	and.b32  	%r2403, %r2256, 522133279;
	add.s32 	%r2404, %r2403, 522133279;
	sub.s32 	%r2405, %r2168, %r2403;
	and.b32  	%r2406, %r2402, %r2405;
	and.b32  	%r2407, %r2406, %r2404;
	and.b32  	%r2408, %r2407, %r2128;
	not.b32 	%r2409, %r2408;
	and.b32  	%r10944, %r2256, %r2409;
	mov.u32 	%r10949, %r15;
	bra.uni 	BB1_1536;

BB1_49:
	setp.eq.s32	%p41, %r1845, 76;
	@%p41 bra 	BB1_423;

	setp.eq.s32	%p42, %r1845, 79;
	@%p42 bra 	BB1_1040;
	bra.uni 	BB1_51;

BB1_1040:
	setp.ge.u32	%p706, %r25, %r15;
	add.s32 	%r5089, %r25, %r27;
	setp.gt.u32	%p707, %r5089, %r15;
	or.pred  	%p708, %p706, %p707;
	@%p708 bra 	BB1_777;

	mov.u32 	%r10944, 0;
	setp.gt.s32	%p709, %r27, 15;
	@%p709 bra 	BB1_1074;

	setp.gt.s32	%p733, %r27, 7;
	@%p733 bra 	BB1_1058;

	setp.gt.s32	%p745, %r27, 3;
	@%p745 bra 	BB1_1051;

	setp.gt.s32	%p751, %r27, 1;
	@%p751 bra 	BB1_1048;

	setp.eq.s32	%p754, %r27, 0;
	@%p754 bra 	BB1_1126;
	bra.uni 	BB1_1046;

BB1_1126:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10863, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	mov.u32 	%r10948, %r16;
	bra.uni 	BB1_1127;

BB1_111:
	setp.eq.s32	%p14, %r1845, 115;
	@%p14 bra 	BB1_968;

	setp.eq.s32	%p15, %r1845, 116;
	@%p15 bra 	BB1_1532;
	bra.uni 	BB1_113;

BB1_1532:
	and.b32  	%r8323, %r19, 1077952576;
	shr.u32 	%r8324, %r8323, 1;
	and.b32  	%r8325, %r19, -2139062144;
	shr.u32 	%r8326, %r8325, 2;
	not.b32 	%r8327, %r8326;
	and.b32  	%r8328, %r8324, %r8327;
	and.b32  	%r8329, %r19, 522133279;
	add.s32 	%r8330, %r8329, 522133279;
	mov.u32 	%r8331, -84215046;
	sub.s32 	%r8332, %r8331, %r8329;
	and.b32  	%r8333, %r8328, %r8332;
	and.b32  	%r8334, %r8333, %r8330;
	xor.b32  	%r10945, %r8334, %r19;
	and.b32  	%r8335, %r18, 1077952576;
	shr.u32 	%r8336, %r8335, 1;
	and.b32  	%r8337, %r18, -2139062144;
	shr.u32 	%r8338, %r8337, 2;
	not.b32 	%r8339, %r8338;
	and.b32  	%r8340, %r8336, %r8339;
	and.b32  	%r8341, %r18, 522133279;
	add.s32 	%r8342, %r8341, 522133279;
	sub.s32 	%r8343, %r8331, %r8341;
	and.b32  	%r8344, %r8340, %r8343;
	and.b32  	%r8345, %r8344, %r8342;
	xor.b32  	%r10946, %r8345, %r18;
	and.b32  	%r8346, %r17, 1077952576;
	shr.u32 	%r8347, %r8346, 1;
	and.b32  	%r8348, %r17, -2139062144;
	shr.u32 	%r8349, %r8348, 2;
	not.b32 	%r8350, %r8349;
	and.b32  	%r8351, %r8347, %r8350;
	and.b32  	%r8352, %r17, 522133279;
	add.s32 	%r8353, %r8352, 522133279;
	sub.s32 	%r8354, %r8331, %r8352;
	and.b32  	%r8355, %r8351, %r8354;
	and.b32  	%r8356, %r8355, %r8353;
	xor.b32  	%r10947, %r8356, %r17;
	and.b32  	%r8357, %r16, 1077952576;
	shr.u32 	%r8358, %r8357, 1;
	and.b32  	%r8359, %r16, -2139062144;
	shr.u32 	%r8360, %r8359, 2;
	not.b32 	%r8361, %r8360;
	and.b32  	%r8362, %r8358, %r8361;
	and.b32  	%r8363, %r16, 522133279;
	add.s32 	%r8364, %r8363, 522133279;
	sub.s32 	%r8365, %r8331, %r8363;
	and.b32  	%r8366, %r8362, %r8365;
	and.b32  	%r8367, %r8366, %r8364;
	xor.b32  	%r10948, %r8367, %r16;
	and.b32  	%r8368, %r23, 1077952576;
	shr.u32 	%r8369, %r8368, 1;
	and.b32  	%r8370, %r23, -2139062144;
	shr.u32 	%r8371, %r8370, 2;
	not.b32 	%r8372, %r8371;
	and.b32  	%r8373, %r8369, %r8372;
	and.b32  	%r8374, %r23, 522133279;
	add.s32 	%r8375, %r8374, 522133279;
	sub.s32 	%r8376, %r8331, %r8374;
	and.b32  	%r8377, %r8373, %r8376;
	and.b32  	%r8378, %r8377, %r8375;
	xor.b32  	%r10941, %r8378, %r23;
	and.b32  	%r8379, %r22, 1077952576;
	shr.u32 	%r8380, %r8379, 1;
	and.b32  	%r8381, %r22, -2139062144;
	shr.u32 	%r8382, %r8381, 2;
	not.b32 	%r8383, %r8382;
	and.b32  	%r8384, %r8380, %r8383;
	and.b32  	%r8385, %r22, 522133279;
	add.s32 	%r8386, %r8385, 522133279;
	sub.s32 	%r8387, %r8331, %r8385;
	and.b32  	%r8388, %r8384, %r8387;
	and.b32  	%r8389, %r8388, %r8386;
	xor.b32  	%r10942, %r8389, %r22;
	and.b32  	%r8390, %r21, 1077952576;
	shr.u32 	%r8391, %r8390, 1;
	and.b32  	%r8392, %r21, -2139062144;
	shr.u32 	%r8393, %r8392, 2;
	not.b32 	%r8394, %r8393;
	and.b32  	%r8395, %r8391, %r8394;
	and.b32  	%r8396, %r21, 522133279;
	add.s32 	%r8397, %r8396, 522133279;
	sub.s32 	%r8398, %r8331, %r8396;
	and.b32  	%r8399, %r8395, %r8398;
	and.b32  	%r8400, %r8399, %r8397;
	xor.b32  	%r10943, %r8400, %r21;
	and.b32  	%r8401, %r20, 1077952576;
	shr.u32 	%r8402, %r8401, 1;
	and.b32  	%r8403, %r20, -2139062144;
	shr.u32 	%r8404, %r8403, 2;
	not.b32 	%r8405, %r8404;
	and.b32  	%r8406, %r8402, %r8405;
	and.b32  	%r8407, %r20, 522133279;
	add.s32 	%r8408, %r8407, 522133279;
	sub.s32 	%r8409, %r8331, %r8407;
	and.b32  	%r8410, %r8406, %r8409;
	and.b32  	%r8411, %r8410, %r8408;
	xor.b32  	%r10944, %r8411, %r20;
	bra.uni 	BB1_1535;

BB1_30:
	setp.eq.s32	%p48, %r1845, 64;
	@%p48 bra 	BB1_943;

	setp.eq.s32	%p49, %r1845, 67;
	@%p49 bra 	BB1_1533;
	bra.uni 	BB1_32;

BB1_1533:
	and.b32  	%r8412, %r19, 1077952576;
	shr.u32 	%r8413, %r8412, 1;
	and.b32  	%r8414, %r19, -2139062144;
	shr.u32 	%r8415, %r8414, 2;
	not.b32 	%r8416, %r8415;
	and.b32  	%r8417, %r8413, %r8416;
	and.b32  	%r8418, %r19, 522133279;
	add.s32 	%r8419, %r8418, 522133279;
	mov.u32 	%r8420, -84215046;
	sub.s32 	%r8421, %r8420, %r8418;
	and.b32  	%r8422, %r8417, %r8421;
	and.b32  	%r8423, %r8422, %r8419;
	not.b32 	%r8424, %r8423;
	and.b32  	%r8425, %r18, 1077952576;
	shr.u32 	%r8426, %r8425, 1;
	and.b32  	%r8427, %r18, -2139062144;
	shr.u32 	%r8428, %r8427, 2;
	not.b32 	%r8429, %r8428;
	and.b32  	%r8430, %r8426, %r8429;
	and.b32  	%r8431, %r18, 522133279;
	add.s32 	%r8432, %r8431, 522133279;
	sub.s32 	%r8433, %r8420, %r8431;
	and.b32  	%r8434, %r8430, %r8433;
	and.b32  	%r8435, %r8434, %r8432;
	not.b32 	%r8436, %r8435;
	and.b32  	%r10946, %r18, %r8436;
	and.b32  	%r8437, %r17, 1077952576;
	shr.u32 	%r8438, %r8437, 1;
	and.b32  	%r8439, %r17, -2139062144;
	shr.u32 	%r8440, %r8439, 2;
	not.b32 	%r8441, %r8440;
	and.b32  	%r8442, %r8438, %r8441;
	and.b32  	%r8443, %r17, 522133279;
	add.s32 	%r8444, %r8443, 522133279;
	sub.s32 	%r8445, %r8420, %r8443;
	and.b32  	%r8446, %r8442, %r8445;
	and.b32  	%r8447, %r8446, %r8444;
	not.b32 	%r8448, %r8447;
	and.b32  	%r10947, %r17, %r8448;
	and.b32  	%r8449, %r16, 1077952576;
	shr.u32 	%r8450, %r8449, 1;
	and.b32  	%r8451, %r16, -2139062144;
	shr.u32 	%r8452, %r8451, 2;
	not.b32 	%r8453, %r8452;
	and.b32  	%r8454, %r8450, %r8453;
	and.b32  	%r8455, %r16, 522133279;
	add.s32 	%r8456, %r8455, 522133279;
	sub.s32 	%r8457, %r8420, %r8455;
	and.b32  	%r8458, %r8454, %r8457;
	and.b32  	%r8459, %r8458, %r8456;
	not.b32 	%r8460, %r8459;
	and.b32  	%r10948, %r16, %r8460;
	and.b32  	%r8461, %r23, 1077952576;
	shr.u32 	%r8462, %r8461, 1;
	and.b32  	%r8463, %r23, -2139062144;
	shr.u32 	%r8464, %r8463, 2;
	not.b32 	%r8465, %r8464;
	and.b32  	%r8466, %r8462, %r8465;
	and.b32  	%r8467, %r23, 522133279;
	add.s32 	%r8468, %r8467, 522133279;
	sub.s32 	%r8469, %r8420, %r8467;
	and.b32  	%r8470, %r8466, %r8469;
	and.b32  	%r8471, %r8470, %r8468;
	not.b32 	%r8472, %r8471;
	and.b32  	%r10941, %r23, %r8472;
	and.b32  	%r8473, %r22, 1077952576;
	shr.u32 	%r8474, %r8473, 1;
	and.b32  	%r8475, %r22, -2139062144;
	shr.u32 	%r8476, %r8475, 2;
	not.b32 	%r8477, %r8476;
	and.b32  	%r8478, %r8474, %r8477;
	and.b32  	%r8479, %r22, 522133279;
	add.s32 	%r8480, %r8479, 522133279;
	sub.s32 	%r8481, %r8420, %r8479;
	and.b32  	%r8482, %r8478, %r8481;
	and.b32  	%r8483, %r8482, %r8480;
	not.b32 	%r8484, %r8483;
	and.b32  	%r10942, %r22, %r8484;
	and.b32  	%r8485, %r21, 1077952576;
	shr.u32 	%r8486, %r8485, 1;
	and.b32  	%r8487, %r21, -2139062144;
	shr.u32 	%r8488, %r8487, 2;
	not.b32 	%r8489, %r8488;
	and.b32  	%r8490, %r8486, %r8489;
	and.b32  	%r8491, %r21, 522133279;
	add.s32 	%r8492, %r8491, 522133279;
	sub.s32 	%r8493, %r8420, %r8491;
	and.b32  	%r8494, %r8490, %r8493;
	and.b32  	%r8495, %r8494, %r8492;
	not.b32 	%r8496, %r8495;
	and.b32  	%r10943, %r21, %r8496;
	and.b32  	%r8497, %r20, 1077952576;
	shr.u32 	%r8498, %r8497, 1;
	and.b32  	%r8499, %r20, -2139062144;
	shr.u32 	%r8500, %r8499, 2;
	not.b32 	%r8501, %r8500;
	and.b32  	%r8502, %r8498, %r8501;
	and.b32  	%r8503, %r20, 522133279;
	add.s32 	%r8504, %r8503, 522133279;
	sub.s32 	%r8505, %r8420, %r8503;
	and.b32  	%r8506, %r8502, %r8505;
	and.b32  	%r8507, %r8506, %r8504;
	not.b32 	%r8508, %r8507;
	and.b32  	%r10944, %r20, %r8508;
	and.b32  	%r8509, %r19, %r8424;
	and.b32  	%r8510, %r8509, 64;
	shr.u32 	%r8511, %r8510, 1;
	shr.u32 	%r8512, %r8509, 2;
	and.b32  	%r8513, %r8509, 522133279;
	add.s32 	%r8514, %r8513, 31;
	sub.s32 	%r8515, %r8420, %r8513;
	not.b32 	%r8516, %r8512;
	and.b32  	%r8517, %r8516, %r8511;
	and.b32  	%r8518, %r8517, %r8515;
	and.b32  	%r8519, %r8518, %r8514;
	or.b32  	%r10945, %r8519, %r8509;
	bra.uni 	BB1_1535;

BB1_93:
	setp.eq.s32	%p21, %r1845, 108;
	@%p21 bra 	BB1_1534;

	setp.eq.s32	%p22, %r1845, 111;
	@%p22 bra 	BB1_993;
	bra.uni 	BB1_95;

BB1_993:
	setp.ge.u32	%p680, %r25, %r15;
	@%p680 bra 	BB1_777;

	and.b32  	%r5015, %r24, 3;
	shl.b32 	%r5016, %r5015, 3;
	shl.b32 	%r914, %r27, %r5016;
	mov.u32 	%r5017, 255;
	shl.b32 	%r5018, %r5017, %r5016;
	not.b32 	%r915, %r5018;
	shr.u32 	%r5014, %r25, 2;
	setp.gt.s32	%p681, %r5014, 3;
	@%p681 bra 	BB1_1003;

	setp.gt.s32	%p687, %r5014, 1;
	@%p687 bra 	BB1_1000;

	setp.eq.s32	%p690, %r5014, 0;
	@%p690 bra 	BB1_1017;
	bra.uni 	BB1_997;

BB1_1017:
	and.b32  	%r5026, %r19, %r915;
	or.b32  	%r10945, %r5026, %r914;

BB1_1018:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_15;

BB1_67:
	setp.eq.s32	%p35, %r1845, 90;
	@%p35 bra 	BB1_779;

	setp.eq.s32	%p36, %r1845, 91;
	@%p36 bra 	BB1_1274;
	bra.uni 	BB1_69;

BB1_1274:
	setp.eq.s32	%p847, %r15, 0;
	mov.u32 	%r10949, 0;
	@%p847 bra 	BB1_1024;

	add.s32 	%r10949, %r15, -1;
	mov.u32 	%r6341, 8;
	// inline asm
	shf.r.wrap.b32 %r10945, %r19, %r18, %r6341;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r18, %r17, %r6341;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r17, %r16, %r6341;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r16, %r23, %r6341;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r23, %r22, %r6341;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r22, %r21, %r6341;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r21, %r20, %r6341;
	// inline asm
	mov.u32 	%r6340, 0;
	// inline asm
	shf.r.wrap.b32 %r10944, %r20, %r6340, %r6341;
	// inline asm
	bra.uni 	BB1_1536;

BB1_124:
	setp.eq.s32	%p8, %r1845, 122;
	@%p8 bra 	BB1_782;

	setp.eq.s32	%p9, %r1845, 123;
	@%p9 bra 	BB1_1293;
	bra.uni 	BB1_126;

BB1_1293:
	setp.eq.s32	%p868, %r15, 0;
	mov.u32 	%r10949, 0;
	@%p868 bra 	BB1_1024;

	add.s32 	%r6462, %r15, -1;
	and.b32  	%r6463, %r6462, 3;
	shl.b32 	%r6464, %r6463, 3;
	and.b32  	%r6465, %r19, 255;
	shl.b32 	%r6466, %r6465, %r6464;
	mov.u32 	%r6461, 8;
	// inline asm
	shf.r.wrap.b32 %r6430, %r19, %r18, %r6461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6434, %r18, %r17, %r6461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6438, %r17, %r16, %r6461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6442, %r16, %r23, %r6461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6446, %r23, %r22, %r6461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6450, %r22, %r21, %r6461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6454, %r21, %r20, %r6461;
	// inline asm
	mov.u32 	%r6460, 0;
	// inline asm
	shf.r.wrap.b32 %r6458, %r20, %r6460, %r6461;
	// inline asm
	setp.lt.u32	%p869, %r6462, 4;
	selp.b32	%r6467, %r6466, 0, %p869;
	or.b32  	%r10945, %r6430, %r6467;
	and.b32  	%r6468, %r6462, -4;
	setp.eq.s32	%p870, %r6468, 4;
	selp.b32	%r6469, %r6466, 0, %p870;
	or.b32  	%r10946, %r6434, %r6469;
	setp.eq.s32	%p871, %r6468, 8;
	selp.b32	%r6470, %r6466, 0, %p871;
	or.b32  	%r10947, %r6438, %r6470;
	setp.eq.s32	%p872, %r6468, 12;
	selp.b32	%r6471, %r6466, 0, %p872;
	or.b32  	%r10948, %r6442, %r6471;
	setp.eq.s32	%p873, %r6468, 16;
	selp.b32	%r6472, %r6466, 0, %p873;
	or.b32  	%r10941, %r6446, %r6472;
	setp.eq.s32	%p874, %r6468, 20;
	selp.b32	%r6473, %r6466, 0, %p874;
	or.b32  	%r10942, %r6450, %r6473;
	setp.eq.s32	%p875, %r6468, 24;
	selp.b32	%r6474, %r6466, 0, %p875;
	or.b32  	%r10943, %r6454, %r6474;
	setp.gt.u32	%p876, %r6462, 27;
	selp.b32	%r6475, %r6466, 0, %p876;
	or.b32  	%r10944, %r6458, %r6475;
	bra.uni 	BB1_1535;

BB1_9:
	setp.eq.s32	%p58, %r1845, 39;
	@%p58 bra 	BB1_969;
	bra.uni 	BB1_10;

BB1_969:
	setp.ge.u32	%p668, %r25, %r15;
	@%p668 bra 	BB1_777;

	and.b32  	%r4982, %r24, 3;
	shl.b32 	%r4983, %r4982, 3;
	mov.u32 	%r4984, 1;
	shl.b32 	%r4985, %r4984, %r4983;
	add.s32 	%r905, %r4985, -1;
	shr.u32 	%r4981, %r25, 2;
	setp.gt.s32	%p669, %r4981, 3;
	@%p669 bra 	BB1_978;

	setp.gt.s32	%p675, %r4981, 1;
	@%p675 bra 	BB1_975;

	setp.eq.s32	%p678, %r4981, 0;
	@%p678 bra 	BB1_992;
	bra.uni 	BB1_973;

BB1_992:
	and.b32  	%r10945, %r905, %r19;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10946, %r10941;
	bra.uni 	BB1_990;

BB1_76:
	setp.eq.s32	%p31, %r1845, 99;
	@%p31 bra 	BB1_77;
	bra.uni 	BB1_10;

BB1_77:
	and.b32  	%r8520, %r19, 1077952576;
	shr.u32 	%r8521, %r8520, 1;
	and.b32  	%r8522, %r19, -2139062144;
	shr.u32 	%r8523, %r8522, 2;
	not.b32 	%r8524, %r8523;
	and.b32  	%r8525, %r8521, %r8524;
	and.b32  	%r8526, %r19, 522133279;
	add.s32 	%r8527, %r8526, 522133279;
	mov.u32 	%r8528, -84215046;
	sub.s32 	%r8529, %r8528, %r8526;
	and.b32  	%r8530, %r8525, %r8529;
	and.b32  	%r8531, %r8530, %r8527;
	or.b32  	%r8532, %r8531, %r19;
	and.b32  	%r8533, %r18, 1077952576;
	shr.u32 	%r8534, %r8533, 1;
	and.b32  	%r8535, %r18, -2139062144;
	shr.u32 	%r8536, %r8535, 2;
	not.b32 	%r8537, %r8536;
	and.b32  	%r8538, %r8534, %r8537;
	and.b32  	%r8539, %r18, 522133279;
	add.s32 	%r8540, %r8539, 522133279;
	sub.s32 	%r8541, %r8528, %r8539;
	and.b32  	%r8542, %r8538, %r8541;
	and.b32  	%r8543, %r8542, %r8540;
	or.b32  	%r10946, %r8543, %r18;
	and.b32  	%r8544, %r17, 1077952576;
	shr.u32 	%r8545, %r8544, 1;
	and.b32  	%r8546, %r17, -2139062144;
	shr.u32 	%r8547, %r8546, 2;
	not.b32 	%r8548, %r8547;
	and.b32  	%r8549, %r8545, %r8548;
	and.b32  	%r8550, %r17, 522133279;
	add.s32 	%r8551, %r8550, 522133279;
	sub.s32 	%r8552, %r8528, %r8550;
	and.b32  	%r8553, %r8549, %r8552;
	and.b32  	%r8554, %r8553, %r8551;
	or.b32  	%r10947, %r8554, %r17;
	and.b32  	%r8555, %r16, 1077952576;
	shr.u32 	%r8556, %r8555, 1;
	and.b32  	%r8557, %r16, -2139062144;
	shr.u32 	%r8558, %r8557, 2;
	not.b32 	%r8559, %r8558;
	and.b32  	%r8560, %r8556, %r8559;
	and.b32  	%r8561, %r16, 522133279;
	add.s32 	%r8562, %r8561, 522133279;
	sub.s32 	%r8563, %r8528, %r8561;
	and.b32  	%r8564, %r8560, %r8563;
	and.b32  	%r8565, %r8564, %r8562;
	or.b32  	%r10948, %r8565, %r16;
	and.b32  	%r8566, %r23, 1077952576;
	shr.u32 	%r8567, %r8566, 1;
	and.b32  	%r8568, %r23, -2139062144;
	shr.u32 	%r8569, %r8568, 2;
	not.b32 	%r8570, %r8569;
	and.b32  	%r8571, %r8567, %r8570;
	and.b32  	%r8572, %r23, 522133279;
	add.s32 	%r8573, %r8572, 522133279;
	sub.s32 	%r8574, %r8528, %r8572;
	and.b32  	%r8575, %r8571, %r8574;
	and.b32  	%r8576, %r8575, %r8573;
	or.b32  	%r10941, %r8576, %r23;
	and.b32  	%r8577, %r22, 1077952576;
	shr.u32 	%r8578, %r8577, 1;
	and.b32  	%r8579, %r22, -2139062144;
	shr.u32 	%r8580, %r8579, 2;
	not.b32 	%r8581, %r8580;
	and.b32  	%r8582, %r8578, %r8581;
	and.b32  	%r8583, %r22, 522133279;
	add.s32 	%r8584, %r8583, 522133279;
	sub.s32 	%r8585, %r8528, %r8583;
	and.b32  	%r8586, %r8582, %r8585;
	and.b32  	%r8587, %r8586, %r8584;
	or.b32  	%r10942, %r8587, %r22;
	and.b32  	%r8588, %r21, 1077952576;
	shr.u32 	%r8589, %r8588, 1;
	and.b32  	%r8590, %r21, -2139062144;
	shr.u32 	%r8591, %r8590, 2;
	not.b32 	%r8592, %r8591;
	and.b32  	%r8593, %r8589, %r8592;
	and.b32  	%r8594, %r21, 522133279;
	add.s32 	%r8595, %r8594, 522133279;
	sub.s32 	%r8596, %r8528, %r8594;
	and.b32  	%r8597, %r8593, %r8596;
	and.b32  	%r8598, %r8597, %r8595;
	or.b32  	%r10943, %r8598, %r21;
	and.b32  	%r8599, %r20, 1077952576;
	shr.u32 	%r8600, %r8599, 1;
	and.b32  	%r8601, %r20, -2139062144;
	shr.u32 	%r8602, %r8601, 2;
	not.b32 	%r8603, %r8602;
	and.b32  	%r8604, %r8600, %r8603;
	and.b32  	%r8605, %r20, 522133279;
	add.s32 	%r8606, %r8605, 522133279;
	sub.s32 	%r8607, %r8528, %r8605;
	and.b32  	%r8608, %r8604, %r8607;
	and.b32  	%r8609, %r8608, %r8606;
	or.b32  	%r10944, %r8609, %r20;
	and.b32  	%r8610, %r8532, 64;
	shr.u32 	%r8611, %r8610, 1;
	and.b32  	%r8612, %r8532, 128;
	shr.u32 	%r8613, %r8612, 2;
	not.b32 	%r8614, %r8613;
	and.b32  	%r8615, %r8611, %r8614;
	and.b32  	%r8616, %r8532, 522133279;
	add.s32 	%r8617, %r8616, 31;
	sub.s32 	%r8618, %r8528, %r8616;
	and.b32  	%r8619, %r8615, %r8618;
	and.b32  	%r8620, %r8619, %r8617;
	not.b32 	%r8621, %r8620;
	or.b32  	%r8622, %r8621, -33;
	and.b32  	%r10945, %r8622, %r8532;
	bra.uni 	BB1_1535;

BB1_41:
	setp.eq.s32	%p45, %r1845, 75;
	@%p45 bra 	BB1_42;
	bra.uni 	BB1_10;

BB1_42:
	setp.lt.u32	%p461, %r15, 2;
	@%p461 bra 	BB1_10;

	setp.gt.s32	%p462, %r15, 16;
	@%p462 bra 	BB1_719;

	setp.gt.s32	%p484, %r15, 8;
	@%p484 bra 	BB1_704;

	setp.gt.s32	%p496, %r15, 4;
	@%p496 bra 	BB1_697;

	setp.eq.s32	%p502, %r15, 2;
	@%p502 bra 	BB1_774;

	setp.eq.s32	%p503, %r15, 3;
	@%p503 bra 	BB1_48;
	bra.uni 	BB1_695;

BB1_48:
	and.b32  	%r4066, %r19, 255;
	shl.b32 	%r4067, %r19, 8;
	and.b32  	%r4068, %r4067, 16711680;
	or.b32  	%r4069, %r4068, %r4066;
	shr.u32 	%r4070, %r19, 8;
	and.b32  	%r4071, %r4070, 65280;
	or.b32  	%r10945, %r4069, %r4071;
	mov.u32 	%r10949, 3;
	bra.uni 	BB1_775;

BB1_104:
	setp.eq.s32	%p18, %r1845, 114;
	@%p18 bra 	BB1_105;
	bra.uni 	BB1_10;

BB1_105:
	mov.u32 	%r7654, 32;
	sub.s32 	%r7653, %r7654, %r15;
	setp.gt.s32	%p973, %r7653, 15;
	@%p973 bra 	BB1_1459;

	setp.gt.s32	%p997, %r7653, 7;
	@%p997 bra 	BB1_1444;

	setp.gt.s32	%p1009, %r7653, 3;
	@%p1009 bra 	BB1_1437;

	setp.eq.s32	%p1015, %r7653, 1;
	@%p1015 bra 	BB1_1507;

	setp.eq.s32	%p1016, %r7653, 2;
	@%p1016 bra 	BB1_110;
	bra.uni 	BB1_1435;

BB1_110:
	mov.u32 	%r8155, 16;
	// inline asm
	shf.r.wrap.b32 %r8124, %r21, %r20, %r8155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r22, %r21, %r8155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r23, %r22, %r8155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r16, %r23, %r8155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8140, %r17, %r16, %r8155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10939, %r18, %r17, %r8155;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10938, %r19, %r18, %r8155;
	// inline asm
	mov.u32 	%r8153, 0;
	// inline asm
	shf.r.wrap.b32 %r10937, %r8153, %r19, %r8155;
	// inline asm
	mov.u32 	%r23, %r8124;
	mov.u32 	%r19, %r8140;
	bra.uni 	BB1_1511;

BB1_24:
	setp.eq.s32	%p52, %r1845, 46;
	@%p52 bra 	BB1_25;
	bra.uni 	BB1_10;

BB1_25:
	add.s32 	%r3623, %r25, 1;
	setp.ge.u32	%p257, %r3623, %r15;
	@%p257 bra 	BB1_10;

	mov.u32 	%r3651, 8;
	// inline asm
	shf.r.wrap.b32 %r3624, %r19, %r18, %r3651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3628, %r18, %r17, %r3651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3632, %r17, %r16, %r3651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3636, %r16, %r23, %r3651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3640, %r23, %r22, %r3651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3644, %r22, %r21, %r3651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3648, %r21, %r20, %r3651;
	// inline asm
	and.b32  	%r3653, %r24, 3;
	shl.b32 	%r3654, %r3653, 3;
	mov.u32 	%r3655, 255;
	shl.b32 	%r352, %r3655, %r3654;
	not.b32 	%r353, %r352;
	shr.u32 	%r3652, %r25, 2;
	setp.gt.s32	%p258, %r3652, 3;
	@%p258 bra 	BB1_358;

	setp.gt.s32	%p264, %r3652, 1;
	@%p264 bra 	BB1_355;

	setp.eq.s32	%p267, %r3652, 0;
	@%p267 bra 	BB1_29;
	bra.uni 	BB1_353;

BB1_29:
	and.b32  	%r3674, %r19, %r353;
	and.b32  	%r3675, %r3624, %r352;
	or.b32  	%r10945, %r3675, %r3674;
	bra.uni 	BB1_612;

BB1_90:
	setp.eq.s32	%p25, %r1845, 107;
	@%p25 bra 	BB1_91;
	bra.uni 	BB1_10;

BB1_91:
	setp.lt.u32	%p505, %r15, 2;
	@%p505 bra 	BB1_10;

	and.b32  	%r4076, %r19, -65536;
	shl.b32 	%r4077, %r19, 8;
	and.b32  	%r4078, %r4077, 65280;
	or.b32  	%r4079, %r4078, %r4076;
	bfe.u32 	%r4080, %r19, 8, 8;
	or.b32  	%r10945, %r4079, %r4080;

BB1_612:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_659;

BB1_59:
	setp.eq.s32	%p39, %r1845, 89;
	@%p39 bra 	BB1_60;
	bra.uni 	BB1_10;

BB1_60:
	setp.gt.u32	%p123, %r25, %r15;
	add.s32 	%r10949, %r25, %r15;
	setp.gt.u32	%p124, %r10949, 31;
	or.pred  	%p125, %p123, %p124;
	@%p125 bra 	BB1_10;

	mov.u32 	%r10788, 0;
	setp.gt.s32	%p126, %r25, 15;
	@%p126 bra 	BB1_163;

	setp.gt.s32	%p150, %r25, 7;
	@%p150 bra 	BB1_147;

	setp.gt.s32	%p162, %r25, 3;
	@%p162 bra 	BB1_140;

	setp.gt.s32	%p168, %r25, 1;
	@%p168 bra 	BB1_137;

	setp.eq.s32	%p171, %r25, 0;
	@%p171 bra 	BB1_66;
	bra.uni 	BB1_135;

BB1_66:
	mov.u32 	%r10784, %r23;
	mov.u32 	%r10785, %r22;
	mov.u32 	%r10786, %r21;
	mov.u32 	%r10787, %r20;
	mov.u32 	%r10788, %r19;
	mov.u32 	%r10789, %r18;
	mov.u32 	%r10790, %r17;
	mov.u32 	%r10791, %r16;
	bra.uni 	BB1_213;

BB1_117:
	setp.eq.s32	%p12, %r1845, 121;
	@%p12 bra 	BB1_118;
	bra.uni 	BB1_10;

BB1_118:
	setp.gt.u32	%p184, %r25, %r15;
	add.s32 	%r10949, %r25, %r15;
	setp.gt.u32	%p185, %r10949, 31;
	or.pred  	%p186, %p184, %p185;
	@%p186 bra 	BB1_10;

	and.b32  	%r2995, %r24, 3;
	shl.b32 	%r2996, %r2995, 3;
	mov.u32 	%r2997, 1;
	shl.b32 	%r2998, %r2997, %r2996;
	add.s32 	%r187, %r2998, -1;
	shr.u32 	%r2994, %r25, 2;
	setp.gt.s32	%p187, %r2994, 3;
	@%p187 bra 	BB1_239;

	setp.gt.s32	%p193, %r2994, 1;
	@%p193 bra 	BB1_236;

	setp.eq.s32	%p196, %r2994, 0;
	@%p196 bra 	BB1_122;
	bra.uni 	BB1_234;

BB1_122:
	and.b32  	%r10804, %r187, %r19;
	mov.u32 	%r10800, 0;
	mov.u32 	%r10801, %r10800;
	mov.u32 	%r10802, %r10800;
	mov.u32 	%r10803, %r10800;
	mov.u32 	%r10805, %r10800;
	bra.uni 	BB1_123;

BB1_443:
	setp.lt.u32	%p317, %r25, %r15;
	setp.gt.u32	%p318, %r15, %r27;
	and.pred  	%p319, %p317, %p318;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	mov.u32 	%r10948, %r16;
	mov.u32 	%r10949, %r15;
	@!%p319 bra 	BB1_1536;
	bra.uni 	BB1_444;

BB1_444:
	mov.u32 	%r10825, 0;
	setp.gt.s32	%p320, %r25, 15;
	@%p320 bra 	BB1_476;

	setp.gt.s32	%p344, %r25, 7;
	@%p344 bra 	BB1_461;

	setp.gt.s32	%p356, %r25, 3;
	@%p356 bra 	BB1_454;

	setp.gt.s32	%p362, %r25, 1;
	@%p362 bra 	BB1_451;

	setp.eq.s32	%p365, %r25, 0;
	@%p365 bra 	BB1_522;
	bra.uni 	BB1_449;

BB1_522:
	and.b32  	%r10816, %r19, 255;
	bra.uni 	BB1_523;

BB1_20:
	setp.eq.s32	%p56, %r1845, 44;
	@%p56 bra 	BB1_21;
	bra.uni 	BB1_10;

BB1_21:
	setp.ne.s32	%p243, %r25, 0;
	setp.lt.u32	%p244, %r25, %r15;
	and.pred  	%p245, %p243, %p244;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	mov.u32 	%r10948, %r16;
	mov.u32 	%r10949, %r15;
	@!%p245 bra 	BB1_1536;
	bra.uni 	BB1_334;

BB1_334:
	mov.u32 	%r3598, 24;
	// inline asm
	shf.r.wrap.b32 %r3571, %r21, %r20, %r3598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3575, %r22, %r21, %r3598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3579, %r23, %r22, %r3598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3583, %r16, %r23, %r3598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3587, %r17, %r16, %r3598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3591, %r18, %r17, %r3598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3595, %r19, %r18, %r3598;
	// inline asm
	and.b32  	%r3600, %r24, 3;
	shl.b32 	%r3601, %r3600, 3;
	mov.u32 	%r3602, 255;
	shl.b32 	%r335, %r3602, %r3601;
	not.b32 	%r336, %r335;
	shr.u32 	%r3599, %r25, 2;
	setp.gt.s32	%p246, %r3599, 3;
	@%p246 bra 	BB1_342;

	setp.gt.s32	%p252, %r3599, 1;
	@%p252 bra 	BB1_339;

	setp.eq.s32	%p255, %r3599, 0;
	@%p255 bra 	BB1_352;
	bra.uni 	BB1_337;

BB1_352:
	mov.u32 	%r3618, 0;
	// inline asm
	shf.r.wrap.b32 %r3617, %r3618, %r19, %r3598;
	// inline asm
	and.b32  	%r3621, %r3617, %r335;
	and.b32  	%r3622, %r19, %r336;
	or.b32  	%r10945, %r3621, %r3622;
	bra.uni 	BB1_612;

BB1_1414:
	add.s32 	%r10949, %r15, %r15;
	setp.gt.u32	%p961, %r10949, 31;
	@%p961 bra 	BB1_777;

	and.b32  	%r7475, %r15, 3;
	mov.u32 	%r7476, 4;
	sub.s32 	%r7477, %r7476, %r7475;
	shl.b32 	%r7478, %r7477, 2;
	mov.u32 	%r7479, 1985229328;
	shr.u32 	%r7480, %r7479, %r7478;
	and.b32  	%r1534, %r7480, 65535;
	shr.u32 	%r7474, %r15, 2;
	mov.u32 	%r10925, 0;
	setp.gt.s32	%p962, %r7474, 3;
	@%p962 bra 	BB1_1423;

	setp.gt.s32	%p968, %r7474, 1;
	@%p968 bra 	BB1_1420;

	setp.eq.s32	%p971, %r7474, 0;
	@%p971 bra 	BB1_1433;
	bra.uni 	BB1_1418;

BB1_1433:
	// inline asm
	prmt.b32 %r10932, %r21, %r20, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10931, %r22, %r21, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10930, %r23, %r22, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10929, %r16, %r23, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10928, %r17, %r16, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10927, %r18, %r17, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10926, %r19, %r18, %r1534;
	// inline asm
	mov.u32 	%r7650, 0;
	// inline asm
	prmt.b32 %r10925, %r7650, %r19, %r1534;
	// inline asm
	bra.uni 	BB1_1434;

BB1_80:
	setp.eq.s32	%p29, %r1845, 102;
	@%p29 bra 	BB1_81;
	bra.uni 	BB1_10;

BB1_81:
	add.s32 	%r10949, %r15, %r15;
	setp.gt.u32	%p887, %r10949, 31;
	@%p887 bra 	BB1_777;

	mov.u32 	%r6529, 32;
	sub.s32 	%r6528, %r6529, %r15;
	mov.u32 	%r10899, 0;
	setp.gt.s32	%p888, %r6528, 15;
	@%p888 bra 	BB1_1327;

	setp.gt.s32	%p912, %r6528, 7;
	@%p912 bra 	BB1_1311;

	setp.gt.s32	%p924, %r6528, 3;
	@%p924 bra 	BB1_1304;

	setp.gt.s32	%p930, %r6528, 1;
	@%p930 bra 	BB1_1301;

	setp.eq.s32	%p933, %r6528, 0;
	@%p933 bra 	BB1_87;
	bra.uni 	BB1_1299;

BB1_87:
	mov.u32 	%r10891, %r23;
	mov.u32 	%r10892, %r22;
	mov.u32 	%r10893, %r21;
	mov.u32 	%r10894, %r20;
	mov.u32 	%r10895, %r19;
	mov.u32 	%r10896, %r18;
	mov.u32 	%r10897, %r17;
	mov.u32 	%r10898, %r16;
	bra.uni 	BB1_1378;

BB1_423:
	setp.ge.u32	%p305, %r25, %r15;
	@%p305 bra 	BB1_10;

	and.b32  	%r3785, %r24, 3;
	shl.b32 	%r3786, %r3785, 3;
	mov.u32 	%r3787, 255;
	shl.b32 	%r394, %r3787, %r3786;
	not.b32 	%r395, %r394;
	shr.u32 	%r3784, %r25, 2;
	setp.gt.s32	%p306, %r3784, 3;
	@%p306 bra 	BB1_432;

	setp.gt.s32	%p312, %r3784, 1;
	@%p312 bra 	BB1_429;

	setp.eq.s32	%p315, %r3784, 0;
	@%p315 bra 	BB1_442;
	bra.uni 	BB1_427;

BB1_442:
	and.b32  	%r3816, %r19, %r395;
	and.b32  	%r3817, %r394, %r19;
	shl.b32 	%r3818, %r3817, 1;
	and.b32  	%r3819, %r3818, %r394;
	or.b32  	%r10945, %r3819, %r3816;
	bra.uni 	BB1_612;

BB1_51:
	setp.eq.s32	%p43, %r1845, 82;
	@%p43 bra 	BB1_52;
	bra.uni 	BB1_10;

BB1_52:
	setp.ge.u32	%p293, %r25, %r15;
	@%p293 bra 	BB1_10;

	and.b32  	%r3749, %r24, 3;
	shl.b32 	%r3750, %r3749, 3;
	mov.u32 	%r3751, 255;
	shl.b32 	%r384, %r3751, %r3750;
	not.b32 	%r385, %r384;
	shr.u32 	%r3748, %r25, 2;
	setp.gt.s32	%p294, %r3748, 3;
	@%p294 bra 	BB1_413;

	setp.gt.s32	%p300, %r3748, 1;
	@%p300 bra 	BB1_410;

	setp.eq.s32	%p303, %r3748, 0;
	@%p303 bra 	BB1_56;
	bra.uni 	BB1_408;

BB1_56:
	and.b32  	%r3780, %r19, %r385;
	and.b32  	%r3781, %r384, %r19;
	shr.u32 	%r3782, %r3781, 1;
	and.b32  	%r3783, %r3782, %r384;
	or.b32  	%r10945, %r3783, %r3780;
	bra.uni 	BB1_612;

BB1_968:
	mov.b32	{%rs277, %rs278}, %r19;
	shr.u16 	%rs279, %rs278, 8;
	and.b16  	%rs280, %rs278, 255;
	shr.u16 	%rs281, %rs277, 8;
	cvt.u16.u32	%rs282, %r24;
	and.b16  	%rs283, %rs282, 255;
	and.b16  	%rs284, %rs277, 255;
	setp.eq.s16	%p636, %rs284, %rs283;
	cvt.u16.u32	%rs285, %r26;
	setp.eq.s16	%p637, %rs281, %rs283;
	setp.eq.s16	%p638, %rs280, %rs283;
	setp.eq.s16	%p639, %rs279, %rs283;
	selp.b16	%rs286, %rs285, %rs281, %p637;
	cvt.u32.u16	%r4933, %rs286;
	selp.b16	%rs287, %rs285, %rs277, %p636;
	and.b16  	%rs288, %rs287, 255;
	cvt.u32.u16	%r4934, %rs288;
	prmt.b32 	%r4935, %r4933, %r4934, 30212;
	selp.b16	%rs289, %rs285, %rs279, %p639;
	cvt.u32.u16	%r4936, %rs289;
	selp.b16	%rs290, %rs285, %rs278, %p638;
	and.b16  	%rs291, %rs290, 255;
	cvt.u32.u16	%r4937, %rs291;
	prmt.b32 	%r4938, %r4936, %r4937, 30212;
	prmt.b32 	%r10945, %r4938, %r4935, 4180;
	mov.b32	{%rs292, %rs293}, %r18;
	shr.u16 	%rs294, %rs293, 8;
	and.b16  	%rs295, %rs293, 255;
	shr.u16 	%rs296, %rs292, 8;
	and.b16  	%rs297, %rs292, 255;
	setp.eq.s16	%p640, %rs297, %rs283;
	setp.eq.s16	%p641, %rs296, %rs283;
	setp.eq.s16	%p642, %rs295, %rs283;
	setp.eq.s16	%p643, %rs294, %rs283;
	selp.b16	%rs298, %rs285, %rs296, %p641;
	cvt.u32.u16	%r4939, %rs298;
	selp.b16	%rs299, %rs285, %rs292, %p640;
	and.b16  	%rs300, %rs299, 255;
	cvt.u32.u16	%r4940, %rs300;
	prmt.b32 	%r4941, %r4939, %r4940, 30212;
	selp.b16	%rs301, %rs285, %rs294, %p643;
	cvt.u32.u16	%r4942, %rs301;
	selp.b16	%rs302, %rs285, %rs293, %p642;
	and.b16  	%rs303, %rs302, 255;
	cvt.u32.u16	%r4943, %rs303;
	prmt.b32 	%r4944, %r4942, %r4943, 30212;
	prmt.b32 	%r10946, %r4944, %r4941, 4180;
	mov.b32	{%rs304, %rs305}, %r17;
	shr.u16 	%rs306, %rs305, 8;
	and.b16  	%rs307, %rs305, 255;
	shr.u16 	%rs308, %rs304, 8;
	and.b16  	%rs309, %rs304, 255;
	setp.eq.s16	%p644, %rs309, %rs283;
	setp.eq.s16	%p645, %rs308, %rs283;
	setp.eq.s16	%p646, %rs307, %rs283;
	setp.eq.s16	%p647, %rs306, %rs283;
	selp.b16	%rs310, %rs285, %rs308, %p645;
	cvt.u32.u16	%r4945, %rs310;
	selp.b16	%rs311, %rs285, %rs304, %p644;
	and.b16  	%rs312, %rs311, 255;
	cvt.u32.u16	%r4946, %rs312;
	prmt.b32 	%r4947, %r4945, %r4946, 30212;
	selp.b16	%rs313, %rs285, %rs306, %p647;
	cvt.u32.u16	%r4948, %rs313;
	selp.b16	%rs314, %rs285, %rs305, %p646;
	and.b16  	%rs315, %rs314, 255;
	cvt.u32.u16	%r4949, %rs315;
	prmt.b32 	%r4950, %r4948, %r4949, 30212;
	prmt.b32 	%r10947, %r4950, %r4947, 4180;
	mov.b32	{%rs316, %rs317}, %r16;
	shr.u16 	%rs318, %rs317, 8;
	and.b16  	%rs319, %rs317, 255;
	shr.u16 	%rs320, %rs316, 8;
	and.b16  	%rs321, %rs316, 255;
	setp.eq.s16	%p648, %rs321, %rs283;
	setp.eq.s16	%p649, %rs320, %rs283;
	setp.eq.s16	%p650, %rs319, %rs283;
	setp.eq.s16	%p651, %rs318, %rs283;
	selp.b16	%rs322, %rs285, %rs320, %p649;
	cvt.u32.u16	%r4951, %rs322;
	selp.b16	%rs323, %rs285, %rs316, %p648;
	and.b16  	%rs324, %rs323, 255;
	cvt.u32.u16	%r4952, %rs324;
	prmt.b32 	%r4953, %r4951, %r4952, 30212;
	selp.b16	%rs325, %rs285, %rs318, %p651;
	cvt.u32.u16	%r4954, %rs325;
	selp.b16	%rs326, %rs285, %rs317, %p650;
	and.b16  	%rs327, %rs326, 255;
	cvt.u32.u16	%r4955, %rs327;
	prmt.b32 	%r4956, %r4954, %r4955, 30212;
	prmt.b32 	%r10948, %r4956, %r4953, 4180;
	mov.b32	{%rs328, %rs329}, %r23;
	shr.u16 	%rs330, %rs329, 8;
	and.b16  	%rs331, %rs329, 255;
	shr.u16 	%rs332, %rs328, 8;
	and.b16  	%rs333, %rs328, 255;
	setp.eq.s16	%p652, %rs333, %rs283;
	setp.eq.s16	%p653, %rs332, %rs283;
	setp.eq.s16	%p654, %rs331, %rs283;
	setp.eq.s16	%p655, %rs330, %rs283;
	selp.b16	%rs334, %rs285, %rs332, %p653;
	cvt.u32.u16	%r4957, %rs334;
	selp.b16	%rs335, %rs285, %rs328, %p652;
	and.b16  	%rs336, %rs335, 255;
	cvt.u32.u16	%r4958, %rs336;
	prmt.b32 	%r4959, %r4957, %r4958, 30212;
	selp.b16	%rs337, %rs285, %rs330, %p655;
	cvt.u32.u16	%r4960, %rs337;
	selp.b16	%rs338, %rs285, %rs329, %p654;
	and.b16  	%rs339, %rs338, 255;
	cvt.u32.u16	%r4961, %rs339;
	prmt.b32 	%r4962, %r4960, %r4961, 30212;
	prmt.b32 	%r10941, %r4962, %r4959, 4180;
	mov.b32	{%rs340, %rs341}, %r22;
	shr.u16 	%rs342, %rs341, 8;
	and.b16  	%rs343, %rs341, 255;
	shr.u16 	%rs344, %rs340, 8;
	and.b16  	%rs345, %rs340, 255;
	setp.eq.s16	%p656, %rs345, %rs283;
	setp.eq.s16	%p657, %rs344, %rs283;
	setp.eq.s16	%p658, %rs343, %rs283;
	setp.eq.s16	%p659, %rs342, %rs283;
	selp.b16	%rs346, %rs285, %rs344, %p657;
	cvt.u32.u16	%r4963, %rs346;
	selp.b16	%rs347, %rs285, %rs340, %p656;
	and.b16  	%rs348, %rs347, 255;
	cvt.u32.u16	%r4964, %rs348;
	prmt.b32 	%r4965, %r4963, %r4964, 30212;
	selp.b16	%rs349, %rs285, %rs342, %p659;
	cvt.u32.u16	%r4966, %rs349;
	selp.b16	%rs350, %rs285, %rs341, %p658;
	and.b16  	%rs351, %rs350, 255;
	cvt.u32.u16	%r4967, %rs351;
	prmt.b32 	%r4968, %r4966, %r4967, 30212;
	prmt.b32 	%r10942, %r4968, %r4965, 4180;
	mov.b32	{%rs352, %rs353}, %r21;
	shr.u16 	%rs354, %rs353, 8;
	and.b16  	%rs355, %rs353, 255;
	shr.u16 	%rs356, %rs352, 8;
	and.b16  	%rs357, %rs352, 255;
	setp.eq.s16	%p660, %rs357, %rs283;
	setp.eq.s16	%p661, %rs356, %rs283;
	setp.eq.s16	%p662, %rs355, %rs283;
	setp.eq.s16	%p663, %rs354, %rs283;
	selp.b16	%rs358, %rs285, %rs356, %p661;
	cvt.u32.u16	%r4969, %rs358;
	selp.b16	%rs359, %rs285, %rs352, %p660;
	and.b16  	%rs360, %rs359, 255;
	cvt.u32.u16	%r4970, %rs360;
	prmt.b32 	%r4971, %r4969, %r4970, 30212;
	selp.b16	%rs361, %rs285, %rs354, %p663;
	cvt.u32.u16	%r4972, %rs361;
	selp.b16	%rs362, %rs285, %rs353, %p662;
	and.b16  	%rs363, %rs362, 255;
	cvt.u32.u16	%r4973, %rs363;
	prmt.b32 	%r4974, %r4972, %r4973, 30212;
	prmt.b32 	%r10943, %r4974, %r4971, 4180;
	mov.b32	{%rs364, %rs365}, %r20;
	shr.u16 	%rs366, %rs365, 8;
	and.b16  	%rs367, %rs365, 255;
	shr.u16 	%rs368, %rs364, 8;
	and.b16  	%rs369, %rs364, 255;
	setp.eq.s16	%p664, %rs369, %rs283;
	setp.eq.s16	%p665, %rs368, %rs283;
	setp.eq.s16	%p666, %rs367, %rs283;
	setp.eq.s16	%p667, %rs366, %rs283;
	selp.b16	%rs370, %rs285, %rs368, %p665;
	cvt.u32.u16	%r4975, %rs370;
	selp.b16	%rs371, %rs285, %rs364, %p664;
	and.b16  	%rs372, %rs371, 255;
	cvt.u32.u16	%r4976, %rs372;
	prmt.b32 	%r4977, %r4975, %r4976, 30212;
	selp.b16	%rs373, %rs285, %rs366, %p667;
	cvt.u32.u16	%r4978, %rs373;
	selp.b16	%rs374, %rs285, %rs365, %p666;
	and.b16  	%rs375, %rs374, 255;
	cvt.u32.u16	%r4979, %rs375;
	prmt.b32 	%r4980, %r4978, %r4979, 30212;
	prmt.b32 	%r10944, %r4980, %r4977, 4180;
	mov.u32 	%r10949, %r15;
	bra.uni 	BB1_1536;

BB1_113:
	setp.eq.s32	%p16, %r1845, 117;
	@%p16 bra 	BB1_114;
	bra.uni 	BB1_10;

BB1_114:
	and.b32  	%r8623, %r19, 1077952576;
	shr.u32 	%r8624, %r8623, 1;
	and.b32  	%r8625, %r19, -2139062144;
	shr.u32 	%r8626, %r8625, 2;
	not.b32 	%r8627, %r8626;
	and.b32  	%r8628, %r8624, %r8627;
	and.b32  	%r8629, %r19, 522133279;
	add.s32 	%r8630, %r8629, 522133279;
	mov.u32 	%r8631, -84215046;
	sub.s32 	%r8632, %r8631, %r8629;
	and.b32  	%r8633, %r8628, %r8632;
	and.b32  	%r8634, %r8633, %r8630;
	not.b32 	%r8635, %r8634;
	and.b32  	%r10945, %r19, %r8635;
	and.b32  	%r8636, %r18, 1077952576;
	shr.u32 	%r8637, %r8636, 1;
	and.b32  	%r8638, %r18, -2139062144;
	shr.u32 	%r8639, %r8638, 2;
	not.b32 	%r8640, %r8639;
	and.b32  	%r8641, %r8637, %r8640;
	and.b32  	%r8642, %r18, 522133279;
	add.s32 	%r8643, %r8642, 522133279;
	sub.s32 	%r8644, %r8631, %r8642;
	and.b32  	%r8645, %r8641, %r8644;
	and.b32  	%r8646, %r8645, %r8643;
	not.b32 	%r8647, %r8646;
	and.b32  	%r10946, %r18, %r8647;
	and.b32  	%r8648, %r17, 1077952576;
	shr.u32 	%r8649, %r8648, 1;
	and.b32  	%r8650, %r17, -2139062144;
	shr.u32 	%r8651, %r8650, 2;
	not.b32 	%r8652, %r8651;
	and.b32  	%r8653, %r8649, %r8652;
	and.b32  	%r8654, %r17, 522133279;
	add.s32 	%r8655, %r8654, 522133279;
	sub.s32 	%r8656, %r8631, %r8654;
	and.b32  	%r8657, %r8653, %r8656;
	and.b32  	%r8658, %r8657, %r8655;
	not.b32 	%r8659, %r8658;
	and.b32  	%r10947, %r17, %r8659;
	and.b32  	%r8660, %r16, 1077952576;
	shr.u32 	%r8661, %r8660, 1;
	and.b32  	%r8662, %r16, -2139062144;
	shr.u32 	%r8663, %r8662, 2;
	not.b32 	%r8664, %r8663;
	and.b32  	%r8665, %r8661, %r8664;
	and.b32  	%r8666, %r16, 522133279;
	add.s32 	%r8667, %r8666, 522133279;
	sub.s32 	%r8668, %r8631, %r8666;
	and.b32  	%r8669, %r8665, %r8668;
	and.b32  	%r8670, %r8669, %r8667;
	not.b32 	%r8671, %r8670;
	and.b32  	%r10948, %r16, %r8671;
	and.b32  	%r8672, %r23, 1077952576;
	shr.u32 	%r8673, %r8672, 1;
	and.b32  	%r8674, %r23, -2139062144;
	shr.u32 	%r8675, %r8674, 2;
	not.b32 	%r8676, %r8675;
	and.b32  	%r8677, %r8673, %r8676;
	and.b32  	%r8678, %r23, 522133279;
	add.s32 	%r8679, %r8678, 522133279;
	sub.s32 	%r8680, %r8631, %r8678;
	and.b32  	%r8681, %r8677, %r8680;
	and.b32  	%r8682, %r8681, %r8679;
	not.b32 	%r8683, %r8682;
	and.b32  	%r10941, %r23, %r8683;
	and.b32  	%r8684, %r22, 1077952576;
	shr.u32 	%r8685, %r8684, 1;
	and.b32  	%r8686, %r22, -2139062144;
	shr.u32 	%r8687, %r8686, 2;
	not.b32 	%r8688, %r8687;
	and.b32  	%r8689, %r8685, %r8688;
	and.b32  	%r8690, %r22, 522133279;
	add.s32 	%r8691, %r8690, 522133279;
	sub.s32 	%r8692, %r8631, %r8690;
	and.b32  	%r8693, %r8689, %r8692;
	and.b32  	%r8694, %r8693, %r8691;
	not.b32 	%r8695, %r8694;
	and.b32  	%r10942, %r22, %r8695;
	and.b32  	%r8696, %r21, 1077952576;
	shr.u32 	%r8697, %r8696, 1;
	and.b32  	%r8698, %r21, -2139062144;
	shr.u32 	%r8699, %r8698, 2;
	not.b32 	%r8700, %r8699;
	and.b32  	%r8701, %r8697, %r8700;
	and.b32  	%r8702, %r21, 522133279;
	add.s32 	%r8703, %r8702, 522133279;
	sub.s32 	%r8704, %r8631, %r8702;
	and.b32  	%r8705, %r8701, %r8704;
	and.b32  	%r8706, %r8705, %r8703;
	not.b32 	%r8707, %r8706;
	and.b32  	%r10943, %r21, %r8707;
	and.b32  	%r8708, %r20, 1077952576;
	shr.u32 	%r8709, %r8708, 1;
	and.b32  	%r8710, %r20, -2139062144;
	shr.u32 	%r8711, %r8710, 2;
	not.b32 	%r8712, %r8711;
	and.b32  	%r8713, %r8709, %r8712;
	and.b32  	%r8714, %r20, 522133279;
	add.s32 	%r8715, %r8714, 522133279;
	sub.s32 	%r8716, %r8631, %r8714;
	and.b32  	%r8717, %r8713, %r8716;
	and.b32  	%r8718, %r8717, %r8715;
	not.b32 	%r8719, %r8718;
	and.b32  	%r10944, %r20, %r8719;
	bra.uni 	BB1_1535;

BB1_943:
	mov.u64 	%rd2736, 0;
	add.u64 	%rd119, %SP, 0;
	cvta.to.local.u64 	%rd120, %rd119;
	st.local.v4.u32 	[%rd120], {%r19, %r18, %r17, %r16};
	st.local.v4.u32 	[%rd120+16], {%r23, %r22, %r21, %r20};
	add.u64 	%rd121, %SP, 32;
	cvta.to.local.u64 	%rd122, %rd121;
	st.local.v2.u64 	[%rd122], {%rd2736, %rd2736};
	st.local.v2.u64 	[%rd122+16], {%rd2736, %rd2736};
	cvt.u16.u32	%rs376, %r19;
	setp.eq.s32	%p623, %r15, 0;
	mov.u32 	%r10949, 0;
	@%p623 bra 	BB1_967;

	cvt.u16.u32	%rs2, %r24;
	and.b32  	%r864, %r15, 3;
	setp.eq.s32	%p624, %r864, 0;
	mov.u32 	%r10852, 0;
	mov.u32 	%r10949, %r10852;
	@%p624 bra 	BB1_957;

	setp.eq.s32	%p625, %r864, 1;
	mov.u32 	%r10847, 0;
	@%p625 bra 	BB1_946;
	bra.uni 	BB1_947;

BB1_946:
	mov.u32 	%r10949, %r10847;
	bra.uni 	BB1_954;

BB1_32:
	setp.eq.s32	%p50, %r1845, 68;
	@%p50 bra 	BB1_33;
	bra.uni 	BB1_10;

BB1_33:
	setp.ge.u32	%p826, %r25, %r15;
	@%p826 bra 	BB1_777;

	mov.u32 	%r6272, 8;
	// inline asm
	shf.r.wrap.b32 %r6241, %r19, %r18, %r6272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r18, %r17, %r6272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r17, %r16, %r6272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r16, %r23, %r6272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r23, %r22, %r6272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r22, %r21, %r6272;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r21, %r20, %r6272;
	// inline asm
	mov.u32 	%r6271, 0;
	// inline asm
	shf.r.wrap.b32 %r10944, %r20, %r6271, %r6272;
	// inline asm
	and.b32  	%r6274, %r24, 3;
	shl.b32 	%r6275, %r6274, 3;
	mov.u32 	%r6276, 1;
	shl.b32 	%r6277, %r6276, %r6275;
	add.s32 	%r1211, %r6277, -1;
	neg.s32 	%r1212, %r6277;
	shr.u32 	%r6273, %r25, 2;
	setp.gt.s32	%p827, %r6273, 3;
	@%p827 bra 	BB1_1261;

	setp.gt.s32	%p833, %r6273, 1;
	@%p833 bra 	BB1_1258;

	setp.eq.s32	%p836, %r6273, 0;
	@%p836 bra 	BB1_37;
	bra.uni 	BB1_1256;

BB1_37:
	and.b32  	%r6292, %r1211, %r19;
	and.b32  	%r6293, %r6241, %r1212;
	or.b32  	%r10945, %r6293, %r6292;
	bra.uni 	BB1_1273;

BB1_1534:
	and.b32  	%r8720, %r19, 1077952576;
	shr.u32 	%r8721, %r8720, 1;
	and.b32  	%r8722, %r19, -2139062144;
	shr.u32 	%r8723, %r8722, 2;
	not.b32 	%r8724, %r8723;
	and.b32  	%r8725, %r8721, %r8724;
	and.b32  	%r8726, %r19, 522133279;
	add.s32 	%r8727, %r8726, 522133279;
	mov.u32 	%r8728, -84215046;
	sub.s32 	%r8729, %r8728, %r8726;
	and.b32  	%r8730, %r8725, %r8729;
	and.b32  	%r8731, %r8730, %r8727;
	or.b32  	%r10945, %r8731, %r19;
	and.b32  	%r8732, %r18, 1077952576;
	shr.u32 	%r8733, %r8732, 1;
	and.b32  	%r8734, %r18, -2139062144;
	shr.u32 	%r8735, %r8734, 2;
	not.b32 	%r8736, %r8735;
	and.b32  	%r8737, %r8733, %r8736;
	and.b32  	%r8738, %r18, 522133279;
	add.s32 	%r8739, %r8738, 522133279;
	sub.s32 	%r8740, %r8728, %r8738;
	and.b32  	%r8741, %r8737, %r8740;
	and.b32  	%r8742, %r8741, %r8739;
	or.b32  	%r10946, %r8742, %r18;
	and.b32  	%r8743, %r17, 1077952576;
	shr.u32 	%r8744, %r8743, 1;
	and.b32  	%r8745, %r17, -2139062144;
	shr.u32 	%r8746, %r8745, 2;
	not.b32 	%r8747, %r8746;
	and.b32  	%r8748, %r8744, %r8747;
	and.b32  	%r8749, %r17, 522133279;
	add.s32 	%r8750, %r8749, 522133279;
	sub.s32 	%r8751, %r8728, %r8749;
	and.b32  	%r8752, %r8748, %r8751;
	and.b32  	%r8753, %r8752, %r8750;
	or.b32  	%r10947, %r8753, %r17;
	and.b32  	%r8754, %r16, 1077952576;
	shr.u32 	%r8755, %r8754, 1;
	and.b32  	%r8756, %r16, -2139062144;
	shr.u32 	%r8757, %r8756, 2;
	not.b32 	%r8758, %r8757;
	and.b32  	%r8759, %r8755, %r8758;
	and.b32  	%r8760, %r16, 522133279;
	add.s32 	%r8761, %r8760, 522133279;
	sub.s32 	%r8762, %r8728, %r8760;
	and.b32  	%r8763, %r8759, %r8762;
	and.b32  	%r8764, %r8763, %r8761;
	or.b32  	%r10948, %r8764, %r16;
	and.b32  	%r8765, %r23, 1077952576;
	shr.u32 	%r8766, %r8765, 1;
	and.b32  	%r8767, %r23, -2139062144;
	shr.u32 	%r8768, %r8767, 2;
	not.b32 	%r8769, %r8768;
	and.b32  	%r8770, %r8766, %r8769;
	and.b32  	%r8771, %r23, 522133279;
	add.s32 	%r8772, %r8771, 522133279;
	sub.s32 	%r8773, %r8728, %r8771;
	and.b32  	%r8774, %r8770, %r8773;
	and.b32  	%r8775, %r8774, %r8772;
	or.b32  	%r10941, %r8775, %r23;
	and.b32  	%r8776, %r22, 1077952576;
	shr.u32 	%r8777, %r8776, 1;
	and.b32  	%r8778, %r22, -2139062144;
	shr.u32 	%r8779, %r8778, 2;
	not.b32 	%r8780, %r8779;
	and.b32  	%r8781, %r8777, %r8780;
	and.b32  	%r8782, %r22, 522133279;
	add.s32 	%r8783, %r8782, 522133279;
	sub.s32 	%r8784, %r8728, %r8782;
	and.b32  	%r8785, %r8781, %r8784;
	and.b32  	%r8786, %r8785, %r8783;
	or.b32  	%r10942, %r8786, %r22;
	and.b32  	%r8787, %r21, 1077952576;
	shr.u32 	%r8788, %r8787, 1;
	and.b32  	%r8789, %r21, -2139062144;
	shr.u32 	%r8790, %r8789, 2;
	not.b32 	%r8791, %r8790;
	and.b32  	%r8792, %r8788, %r8791;
	and.b32  	%r8793, %r21, 522133279;
	add.s32 	%r8794, %r8793, 522133279;
	sub.s32 	%r8795, %r8728, %r8793;
	and.b32  	%r8796, %r8792, %r8795;
	and.b32  	%r8797, %r8796, %r8794;
	or.b32  	%r10943, %r8797, %r21;
	and.b32  	%r8798, %r20, 1077952576;
	shr.u32 	%r8799, %r8798, 1;
	and.b32  	%r8800, %r20, -2139062144;
	shr.u32 	%r8801, %r8800, 2;
	not.b32 	%r8802, %r8801;
	and.b32  	%r8803, %r8799, %r8802;
	and.b32  	%r8804, %r20, 522133279;
	add.s32 	%r8805, %r8804, 522133279;
	sub.s32 	%r8806, %r8728, %r8804;
	and.b32  	%r8807, %r8803, %r8806;
	and.b32  	%r8808, %r8807, %r8805;
	or.b32  	%r10944, %r8808, %r20;
	bra.uni 	BB1_1535;

BB1_95:
	setp.eq.s32	%p23, %r1845, 112;
	@%p23 bra 	BB1_96;
	bra.uni 	BB1_10;

BB1_96:
	mad.lo.s32 	%r7278, %r25, %r15, %r15;
	setp.gt.u32	%p946, %r7278, 31;
	setp.eq.s32	%p947, %r25, 0;
	or.pred  	%p948, %p946, %p947;
	mov.u32 	%r7277, 0;
	mov.u32 	%r10907, %r7277;
	mov.u32 	%r10949, %r15;
	mov.u32 	%r10948, %r16;
	mov.u32 	%r10947, %r17;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10941, %r23;
	@%p948 bra 	BB1_777;

BB1_97:
	and.b32  	%r7288, %r10949, 3;
	mov.u32 	%r7289, 4;
	sub.s32 	%r7290, %r7289, %r7288;
	shl.b32 	%r7291, %r7290, 2;
	mov.u32 	%r7292, 1985229328;
	shr.u32 	%r7293, %r7292, %r7291;
	and.b32  	%r1478, %r7293, 65535;
	shr.u32 	%r7287, %r10949, 2;
	setp.gt.s32	%p949, %r7287, 3;
	@%p949 bra 	BB1_1403;

	setp.gt.s32	%p955, %r7287, 1;
	@%p955 bra 	BB1_1400;

	setp.eq.s32	%p958, %r7287, 0;
	@%p958 bra 	BB1_100;
	bra.uni 	BB1_1398;

BB1_100:
	// inline asm
	prmt.b32 %r10924, %r21, %r20, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r22, %r21, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10922, %r23, %r22, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10921, %r16, %r23, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10920, %r17, %r16, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10919, %r18, %r17, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10918, %r19, %r18, %r1478;
	// inline asm
	mov.u32 	%r7463, 0;
	// inline asm
	prmt.b32 %r10917, %r7463, %r19, %r1478;
	// inline asm
	bra.uni 	BB1_1413;

BB1_1403:
	setp.gt.s32	%p950, %r7287, 5;
	@%p950 bra 	BB1_1407;

	setp.eq.s32	%p953, %r7287, 4;
	@%p953 bra 	BB1_1411;
	bra.uni 	BB1_1405;

BB1_1411:
	// inline asm
	prmt.b32 %r10924, %r17, %r16, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r18, %r17, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10922, %r19, %r18, %r1478;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10921, %r10917, %r19, %r1478;
	// inline asm
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	bra.uni 	BB1_1413;

BB1_1400:
	setp.eq.s32	%p956, %r7287, 2;
	@%p956 bra 	BB1_1412;
	bra.uni 	BB1_1401;

BB1_1412:
	// inline asm
	prmt.b32 %r10924, %r23, %r22, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r16, %r23, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10922, %r17, %r16, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10921, %r18, %r17, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10920, %r19, %r18, %r1478;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10919, %r10917, %r19, %r1478;
	// inline asm
	mov.u32 	%r10918, %r10917;
	bra.uni 	BB1_1413;

BB1_1407:
	setp.eq.s32	%p951, %r7287, 6;
	@%p951 bra 	BB1_1410;
	bra.uni 	BB1_1408;

BB1_1410:
	// inline asm
	prmt.b32 %r10924, %r19, %r18, %r1478;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10923, %r10917, %r19, %r1478;
	// inline asm
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	mov.u32 	%r10921, %r10917;
	mov.u32 	%r10922, %r10917;
	bra.uni 	BB1_1413;

BB1_1398:
	setp.eq.s32	%p959, %r7287, 1;
	mov.u32 	%r10917, %r7277;
	mov.u32 	%r10918, %r7277;
	mov.u32 	%r10919, %r7277;
	mov.u32 	%r10920, %r7277;
	mov.u32 	%r10921, %r7277;
	mov.u32 	%r10922, %r7277;
	mov.u32 	%r10923, %r7277;
	mov.u32 	%r10924, %r7277;
	@%p959 bra 	BB1_1399;
	bra.uni 	BB1_1413;

BB1_1399:
	// inline asm
	prmt.b32 %r10924, %r22, %r21, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r23, %r22, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10922, %r16, %r23, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10921, %r17, %r16, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10920, %r18, %r17, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10919, %r19, %r18, %r1478;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10918, %r10917, %r19, %r1478;
	// inline asm
	bra.uni 	BB1_1413;

BB1_1405:
	setp.eq.s32	%p954, %r7287, 5;
	mov.u32 	%r10917, %r7277;
	mov.u32 	%r10918, %r7277;
	mov.u32 	%r10919, %r7277;
	mov.u32 	%r10920, %r7277;
	mov.u32 	%r10921, %r7277;
	mov.u32 	%r10922, %r7277;
	mov.u32 	%r10923, %r7277;
	mov.u32 	%r10924, %r7277;
	@%p954 bra 	BB1_1406;
	bra.uni 	BB1_1413;

BB1_1406:
	// inline asm
	prmt.b32 %r10924, %r18, %r17, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r19, %r18, %r1478;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10922, %r10917, %r19, %r1478;
	// inline asm
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	mov.u32 	%r10921, %r10917;
	bra.uni 	BB1_1413;

BB1_1401:
	setp.eq.s32	%p957, %r7287, 3;
	mov.u32 	%r10917, %r7277;
	mov.u32 	%r10918, %r7277;
	mov.u32 	%r10919, %r7277;
	mov.u32 	%r10920, %r7277;
	mov.u32 	%r10921, %r7277;
	mov.u32 	%r10922, %r7277;
	mov.u32 	%r10923, %r7277;
	mov.u32 	%r10924, %r7277;
	@%p957 bra 	BB1_1402;
	bra.uni 	BB1_1413;

BB1_1402:
	// inline asm
	prmt.b32 %r10924, %r16, %r23, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10923, %r17, %r16, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10922, %r18, %r17, %r1478;
	// inline asm
	// inline asm
	prmt.b32 %r10921, %r19, %r18, %r1478;
	// inline asm
	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10920, %r10917, %r19, %r1478;
	// inline asm
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	bra.uni 	BB1_1413;

BB1_1408:
	setp.ne.s32	%p952, %r7287, 7;
	mov.u32 	%r10917, %r7277;
	mov.u32 	%r10918, %r7277;
	mov.u32 	%r10919, %r7277;
	mov.u32 	%r10920, %r7277;
	mov.u32 	%r10921, %r7277;
	mov.u32 	%r10922, %r7277;
	mov.u32 	%r10923, %r7277;
	mov.u32 	%r10924, %r7277;
	@%p952 bra 	BB1_1413;

	mov.u32 	%r10917, 0;
	// inline asm
	prmt.b32 %r10924, %r10917, %r19, %r1478;
	// inline asm
	mov.u32 	%r10918, %r10917;
	mov.u32 	%r10919, %r10917;
	mov.u32 	%r10920, %r10917;
	mov.u32 	%r10921, %r10917;
	mov.u32 	%r10922, %r10917;
	mov.u32 	%r10923, %r10917;

BB1_1413:
	or.b32  	%r10945, %r10917, %r10945;
	or.b32  	%r10946, %r10918, %r10946;
	or.b32  	%r10947, %r10919, %r10947;
	or.b32  	%r10948, %r10920, %r10948;
	or.b32  	%r10941, %r10921, %r10941;
	or.b32  	%r10942, %r10922, %r10942;
	or.b32  	%r10943, %r10923, %r10943;
	or.b32  	%r10944, %r10924, %r10944;
	add.s32 	%r10949, %r10949, %r15;
	add.s32 	%r10907, %r10907, 1;
	setp.lt.u32	%p960, %r10907, %r25;
	@%p960 bra 	BB1_97;
	bra.uni 	BB1_1536;

BB1_779:
	setp.eq.s32	%p509, %r15, 0;
	add.s32 	%r4117, %r25, %r15;
	setp.gt.u32	%p510, %r4117, 31;
	or.pred  	%p511, %p509, %p510;
	@%p511 bra 	BB1_10;

	add.s32 	%r4119, %r15, -1;
	and.b32  	%r4120, %r4119, 3;
	shl.b32 	%r4121, %r4120, 3;
	setp.lt.u32	%p512, %r4119, 4;
	selp.b32	%r4122, %r19, 0, %p512;
	and.b32  	%r4123, %r4119, -4;
	setp.eq.s32	%p513, %r4123, 4;
	selp.b32	%r4124, %r18, 0, %p513;
	setp.eq.s32	%p514, %r4123, 8;
	selp.b32	%r4125, %r17, 0, %p514;
	setp.eq.s32	%p515, %r4123, 12;
	selp.b32	%r4126, %r16, 0, %p515;
	setp.eq.s32	%p516, %r4123, 16;
	selp.b32	%r4127, %r23, 0, %p516;
	setp.eq.s32	%p517, %r4123, 20;
	selp.b32	%r4128, %r22, 0, %p517;
	setp.eq.s32	%p518, %r4123, 24;
	selp.b32	%r4129, %r21, 0, %p518;
	setp.gt.u32	%p519, %r4119, 27;
	selp.b32	%r4130, %r20, 0, %p519;
	or.b32  	%r4131, %r4130, %r4122;
	or.b32  	%r4132, %r4131, %r4124;
	or.b32  	%r4133, %r4132, %r4125;
	or.b32  	%r4134, %r4133, %r4126;
	or.b32  	%r4135, %r4134, %r4127;
	or.b32  	%r4136, %r4135, %r4128;
	or.b32  	%r4137, %r4136, %r4129;
	shr.u32 	%r4138, %r4137, %r4121;
	and.b32  	%r589, %r4138, 255;
	setp.eq.s32	%p520, %r25, 0;
	mov.u32 	%r10826, 0;
	mov.u32 	%r10949, %r15;
	mov.u32 	%r10948, %r16;
	mov.u32 	%r10947, %r17;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10941, %r23;
	@%p520 bra 	BB1_1536;

BB1_781:
	and.b32  	%r4139, %r10949, 3;
	shl.b32 	%r4140, %r4139, 3;
	shl.b32 	%r4141, %r589, %r4140;
	setp.lt.u32	%p521, %r10949, 4;
	selp.b32	%r4142, %r4141, 0, %p521;
	or.b32  	%r10945, %r4142, %r10945;
	and.b32  	%r4143, %r10949, -4;
	setp.eq.s32	%p522, %r4143, 4;
	selp.b32	%r4144, %r4141, 0, %p522;
	or.b32  	%r10946, %r4144, %r10946;
	setp.eq.s32	%p523, %r4143, 8;
	selp.b32	%r4145, %r4141, 0, %p523;
	or.b32  	%r10947, %r4145, %r10947;
	setp.eq.s32	%p524, %r4143, 12;
	selp.b32	%r4146, %r4141, 0, %p524;
	or.b32  	%r10948, %r4146, %r10948;
	setp.eq.s32	%p525, %r4143, 16;
	selp.b32	%r4147, %r4141, 0, %p525;
	or.b32  	%r10941, %r4147, %r10941;
	setp.eq.s32	%p526, %r4143, 20;
	selp.b32	%r4148, %r4141, 0, %p526;
	or.b32  	%r10942, %r4148, %r10942;
	setp.eq.s32	%p527, %r4143, 24;
	selp.b32	%r4149, %r4141, 0, %p527;
	or.b32  	%r10943, %r4149, %r10943;
	setp.gt.u32	%p528, %r10949, 27;
	selp.b32	%r4150, %r4141, 0, %p528;
	or.b32  	%r10944, %r4150, %r10944;
	add.s32 	%r10949, %r10949, 1;
	add.s32 	%r10826, %r10826, 1;
	setp.lt.u32	%p529, %r10826, %r25;
	@%p529 bra 	BB1_781;
	bra.uni 	BB1_1536;

BB1_69:
	setp.eq.s32	%p37, %r1845, 93;
	@%p37 bra 	BB1_70;
	bra.uni 	BB1_10;

BB1_70:
	setp.eq.s32	%p838, %r15, 0;
	mov.u32 	%r10949, 0;
	@%p838 bra 	BB1_1024;

	add.s32 	%r10949, %r15, -1;
	and.b32  	%r6295, %r10949, 3;
	shl.b32 	%r6296, %r6295, 3;
	mov.u32 	%r6297, 1;
	shl.b32 	%r6298, %r6297, %r6296;
	add.s32 	%r6299, %r6298, -1;
	setp.lt.u32	%p839, %r10949, 4;
	selp.b32	%r6300, %r6299, -1, %p839;
	and.b32  	%r10945, %r6300, %r19;
	and.b32  	%r6301, %r10949, -4;
	setp.eq.s32	%p840, %r6301, 4;
	selp.b32	%r6302, %r6299, -1, %p840;
	and.b32  	%r10946, %r6302, %r18;
	setp.eq.s32	%p841, %r6301, 8;
	selp.b32	%r6303, %r6299, -1, %p841;
	and.b32  	%r10947, %r6303, %r17;
	setp.eq.s32	%p842, %r6301, 12;
	selp.b32	%r6304, %r6299, -1, %p842;
	and.b32  	%r10948, %r6304, %r16;
	setp.eq.s32	%p843, %r6301, 16;
	selp.b32	%r6305, %r6299, -1, %p843;
	and.b32  	%r10941, %r6305, %r23;
	setp.eq.s32	%p844, %r6301, 20;
	selp.b32	%r6306, %r6299, -1, %p844;
	and.b32  	%r10942, %r6306, %r22;
	setp.eq.s32	%p845, %r6301, 24;
	selp.b32	%r6307, %r6299, -1, %p845;
	and.b32  	%r10943, %r6307, %r21;
	setp.gt.u32	%p846, %r10949, 27;
	selp.b32	%r6308, %r6299, -1, %p846;
	and.b32  	%r10944, %r6308, %r20;
	bra.uni 	BB1_1536;

BB1_782:
	setp.eq.s32	%p530, %r15, 0;
	add.s32 	%r10949, %r25, %r15;
	setp.gt.u32	%p531, %r10949, 31;
	or.pred  	%p532, %p530, %p531;
	@%p532 bra 	BB1_10;

	and.b32  	%r611, %r19, 255;
	setp.gt.s32	%p533, %r25, 15;
	@%p533 bra 	BB1_812;

	setp.gt.s32	%p557, %r25, 7;
	@%p557 bra 	BB1_797;

	setp.gt.s32	%p569, %r25, 3;
	@%p569 bra 	BB1_790;

	setp.eq.s32	%p575, %r25, 1;
	@%p575 bra 	BB1_861;

	setp.eq.s32	%p576, %r25, 2;
	@%p576 bra 	BB1_860;
	bra.uni 	BB1_788;

BB1_860:
	mov.u32 	%r4651, 16;
	// inline asm
	shf.r.wrap.b32 %r20, %r21, %r20, %r4651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r22, %r21, %r4651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r23, %r22, %r4651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r16, %r23, %r4651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r16, %r17, %r16, %r4651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r18, %r17, %r4651;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r19, %r18, %r4651;
	// inline asm
	mov.u32 	%r4649, 0;
	// inline asm
	shf.r.wrap.b32 %r10945, %r4649, %r19, %r4651;
	// inline asm
	bra.uni 	BB1_865;

BB1_126:
	setp.eq.s32	%p10, %r1845, 125;
	@%p10 bra 	BB1_127;
	bra.uni 	BB1_10;

BB1_127:
	setp.eq.s32	%p848, %r15, 0;
	mov.u32 	%r10949, 0;
	@%p848 bra 	BB1_1024;

	add.s32 	%r6376, %r15, -1;
	shl.b32 	%r6377, %r6376, 3;
	and.b32  	%r6378, %r6377, 24;
	setp.lt.u32	%p849, %r6376, 4;
	selp.b32	%r6379, %r19, 0, %p849;
	and.b32  	%r6380, %r6376, -4;
	setp.eq.s32	%p850, %r6380, 4;
	selp.b32	%r6381, %r18, 0, %p850;
	setp.eq.s32	%p851, %r6380, 8;
	selp.b32	%r6382, %r17, 0, %p851;
	setp.eq.s32	%p852, %r6380, 12;
	selp.b32	%r6383, %r16, 0, %p852;
	setp.eq.s32	%p853, %r6380, 16;
	selp.b32	%r6384, %r23, 0, %p853;
	setp.eq.s32	%p854, %r6380, 20;
	selp.b32	%r6385, %r22, 0, %p854;
	setp.eq.s32	%p855, %r6380, 24;
	selp.b32	%r6386, %r21, 0, %p855;
	setp.gt.u32	%p856, %r6376, 27;
	selp.b32	%r6387, %r20, 0, %p856;
	or.b32  	%r6388, %r6387, %r6379;
	or.b32  	%r6389, %r6388, %r6381;
	or.b32  	%r6390, %r6389, %r6382;
	or.b32  	%r6391, %r6390, %r6383;
	or.b32  	%r6392, %r6391, %r6384;
	or.b32  	%r6393, %r6392, %r6385;
	or.b32  	%r6394, %r6393, %r6386;
	shr.u32 	%r6395, %r6394, %r6378;
	and.b32  	%r6396, %r6395, 255;
	mov.u32 	%r6374, 24;
	// inline asm
	shf.r.wrap.b32 %r6343, %r21, %r20, %r6374;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r22, %r21, %r6374;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r23, %r22, %r6374;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r16, %r23, %r6374;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r17, %r16, %r6374;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r18, %r17, %r6374;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r19, %r18, %r6374;
	// inline asm
	mov.u32 	%r10944, 0;
	// inline asm
	shf.r.wrap.b32 %r6371, %r10944, %r19, %r6374;
	// inline asm
	or.b32  	%r10945, %r6371, %r6396;
	shl.b32 	%r6397, %r15, 3;
	and.b32  	%r6398, %r6397, 24;
	mov.u32 	%r6399, 1;
	shl.b32 	%r6400, %r6399, %r6398;
	add.s32 	%r1256, %r6400, -1;
	shr.u32 	%r6375, %r15, 2;
	setp.gt.s32	%p857, %r6375, 3;
	@%p857 bra 	BB1_1279;

	setp.gt.s32	%p863, %r6375, 1;
	@%p863 bra 	BB1_1276;

	setp.eq.s32	%p866, %r6375, 0;
	@%p866 bra 	BB1_1292;
	bra.uni 	BB1_131;

BB1_1292:
	and.b32  	%r10945, %r10945, %r1256;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10946, %r10941;
	bra.uni 	BB1_1290;

BB1_377:
	setp.gt.s32	%p271, %r3676, 5;
	@%p271 bra 	BB1_381;

	setp.eq.s32	%p274, %r3676, 4;
	@%p274 bra 	BB1_385;
	bra.uni 	BB1_379;

BB1_385:
	and.b32  	%r3692, %r23, %r363;
	and.b32  	%r3693, %r362, %r23;
	sub.s32 	%r3694, %r3693, %r364;
	and.b32  	%r3695, %r3694, %r362;
	or.b32  	%r10941, %r3695, %r3692;
	bra.uni 	BB1_647;

BB1_1028:
	setp.gt.s32	%p696, %r5055, 5;
	@%p696 bra 	BB1_1032;

	setp.eq.s32	%p699, %r5055, 4;
	@%p699 bra 	BB1_1036;
	bra.uni 	BB1_1030;

BB1_1036:
	and.b32  	%r5070, %r933, %r23;
	or.b32  	%r5071, %r5070, %r932;
	and.b32  	%r5072, %r10941, %r934;
	or.b32  	%r10941, %r5071, %r5072;
	bra.uni 	BB1_757;

BB1_1521:
	setp.gt.s32	%p1020, %r8215, 5;
	@%p1020 bra 	BB1_1525;

	setp.eq.s32	%p1023, %r8215, 4;
	@%p1023 bra 	BB1_1529;
	bra.uni 	BB1_1523;

BB1_1529:
	and.b32  	%r8258, %r23, 1077952576;
	shr.u32 	%r8259, %r8258, 1;
	and.b32  	%r8260, %r23, -2139062144;
	shr.u32 	%r8261, %r8260, 2;
	not.b32 	%r8262, %r8261;
	and.b32  	%r8263, %r8259, %r8262;
	and.b32  	%r8264, %r23, 522133279;
	add.s32 	%r8265, %r8264, 522133279;
	mov.u32 	%r8266, -84215046;
	sub.s32 	%r8267, %r8266, %r8264;
	and.b32  	%r8268, %r8263, %r8267;
	and.b32  	%r8269, %r8268, %r8265;
	and.b32  	%r8270, %r8269, %r1711;
	xor.b32  	%r10941, %r8270, %r23;
	bra.uni 	BB1_11;

BB1_1179:
	setp.gt.s32	%p771, %r25, 23;
	@%p771 bra 	BB1_1196;

	setp.gt.s32	%p783, %r25, 19;
	@%p783 bra 	BB1_1188;

	setp.gt.s32	%p789, %r25, 17;
	@%p789 bra 	BB1_1185;

	setp.eq.s32	%p792, %r25, 16;
	@%p792 bra 	BB1_1220;
	bra.uni 	BB1_1183;

BB1_1220:
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10945, %r23;
	mov.u32 	%r10946, %r22;
	mov.u32 	%r10947, %r21;
	bra.uni 	BB1_1234;

BB1_1459:
	setp.gt.s32	%p974, %r7653, 23;
	@%p974 bra 	BB1_1475;

	setp.gt.s32	%p986, %r7653, 19;
	@%p986 bra 	BB1_1468;

	setp.gt.s32	%p992, %r7653, 17;
	@%p992 bra 	BB1_1465;

	setp.eq.s32	%p995, %r7653, 16;
	@%p995 bra 	BB1_1497;
	bra.uni 	BB1_1463;

BB1_1497:
	mov.u32 	%r10937, 0;
	mov.u32 	%r10933, %r19;
	mov.u32 	%r10934, %r18;
	mov.u32 	%r10935, %r17;
	mov.u32 	%r23, %r16;
	bra.uni 	BB1_1498;

BB1_397:
	setp.gt.s32	%p283, %r3712, 5;
	@%p283 bra 	BB1_401;

	setp.eq.s32	%p286, %r3712, 4;
	@%p286 bra 	BB1_405;
	bra.uni 	BB1_399;

BB1_405:
	and.b32  	%r3728, %r23, %r374;
	and.b32  	%r3729, %r373, %r23;
	add.s32 	%r3730, %r3729, %r375;
	and.b32  	%r3731, %r3730, %r373;
	or.b32  	%r10941, %r3731, %r3728;
	bra.uni 	BB1_647;

BB1_1074:
	setp.gt.s32	%p710, %r27, 23;
	@%p710 bra 	BB1_1092;

	setp.gt.s32	%p722, %r27, 19;
	@%p722 bra 	BB1_1084;

	setp.gt.s32	%p728, %r27, 17;
	@%p728 bra 	BB1_1080;

	setp.eq.s32	%p731, %r27, 16;
	@%p731 bra 	BB1_1118;
	bra.uni 	BB1_1078;

BB1_1118:
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r23;
	mov.u32 	%r10946, %r22;
	mov.u32 	%r10947, %r21;
	mov.u32 	%r10948, %r20;
	bra.uni 	BB1_1127;

BB1_1003:
	setp.gt.s32	%p682, %r5014, 5;
	@%p682 bra 	BB1_1008;

	setp.eq.s32	%p685, %r5014, 4;
	@%p685 bra 	BB1_1014;
	bra.uni 	BB1_1005;

BB1_1014:
	and.b32  	%r5022, %r23, %r915;
	or.b32  	%r10941, %r5022, %r914;
	bra.uni 	BB1_11;

BB1_476:
	setp.gt.s32	%p321, %r25, 23;
	@%p321 bra 	BB1_492;

	setp.gt.s32	%p333, %r25, 19;
	@%p333 bra 	BB1_485;

	setp.gt.s32	%p339, %r25, 17;
	@%p339 bra 	BB1_482;

	setp.eq.s32	%p342, %r25, 16;
	@%p342 bra 	BB1_514;
	bra.uni 	BB1_480;

BB1_514:
	and.b32  	%r10816, %r23, 255;
	bra.uni 	BB1_523;

BB1_1423:
	setp.gt.s32	%p963, %r7474, 5;
	@%p963 bra 	BB1_1427;

	setp.eq.s32	%p966, %r7474, 4;
	@%p966 bra 	BB1_1431;
	bra.uni 	BB1_1425;

BB1_1431:
	// inline asm
	prmt.b32 %r10932, %r17, %r16, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10931, %r18, %r17, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10930, %r19, %r18, %r1534;
	// inline asm
	mov.u32 	%r10925, 0;
	// inline asm
	prmt.b32 %r10929, %r10925, %r19, %r1534;
	// inline asm
	mov.u32 	%r10926, %r10925;
	mov.u32 	%r10927, %r10925;
	mov.u32 	%r10928, %r10925;
	bra.uni 	BB1_1434;

BB1_432:
	setp.gt.s32	%p307, %r3784, 5;
	@%p307 bra 	BB1_436;

	setp.eq.s32	%p310, %r3784, 4;
	@%p310 bra 	BB1_440;
	bra.uni 	BB1_434;

BB1_440:
	and.b32  	%r3800, %r23, %r395;
	and.b32  	%r3801, %r394, %r23;
	shl.b32 	%r3802, %r3801, 1;
	and.b32  	%r3803, %r3802, %r394;
	or.b32  	%r10941, %r3803, %r3800;
	bra.uni 	BB1_647;

BB1_812:
	setp.gt.s32	%p534, %r25, 23;
	@%p534 bra 	BB1_828;

	setp.gt.s32	%p546, %r25, 19;
	@%p546 bra 	BB1_821;

	setp.gt.s32	%p552, %r25, 17;
	@%p552 bra 	BB1_818;

	setp.eq.s32	%p555, %r25, 16;
	@%p555 bra 	BB1_850;
	bra.uni 	BB1_816;

BB1_850:
	mov.u32 	%r10945, 0;
	mov.u32 	%r10941, %r19;
	mov.u32 	%r10942, %r18;
	mov.u32 	%r10943, %r17;
	mov.u32 	%r20, %r16;
	bra.uni 	BB1_851;

BB1_374:
	setp.eq.s32	%p277, %r3676, 2;
	@%p277 bra 	BB1_386;
	bra.uni 	BB1_375;

BB1_386:
	and.b32  	%r3700, %r17, %r363;
	and.b32  	%r3701, %r362, %r17;
	sub.s32 	%r3702, %r3701, %r364;
	and.b32  	%r3703, %r3702, %r362;
	or.b32  	%r10947, %r3703, %r3700;
	bra.uni 	BB1_629;

BB1_1025:
	setp.eq.s32	%p702, %r5055, 2;
	@%p702 bra 	BB1_1037;
	bra.uni 	BB1_1026;

BB1_1037:
	and.b32  	%r5076, %r933, %r17;
	or.b32  	%r5077, %r5076, %r932;
	and.b32  	%r5078, %r10947, %r934;
	or.b32  	%r10947, %r5077, %r5078;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	bra.uni 	BB1_1536;

BB1_1518:
	setp.eq.s32	%p1026, %r8215, 2;
	@%p1026 bra 	BB1_1530;
	bra.uni 	BB1_1519;

BB1_1530:
	and.b32  	%r8284, %r17, 1077952576;
	shr.u32 	%r8285, %r8284, 1;
	and.b32  	%r8286, %r17, -2139062144;
	shr.u32 	%r8287, %r8286, 2;
	not.b32 	%r8288, %r8287;
	and.b32  	%r8289, %r8285, %r8288;
	and.b32  	%r8290, %r17, 522133279;
	add.s32 	%r8291, %r8290, 522133279;
	mov.u32 	%r8292, -84215046;
	sub.s32 	%r8293, %r8292, %r8290;
	and.b32  	%r8294, %r8289, %r8293;
	and.b32  	%r8295, %r8294, %r8291;
	and.b32  	%r8296, %r8295, %r1711;
	xor.b32  	%r10947, %r8296, %r17;
	bra.uni 	BB1_1016;

BB1_1164:
	setp.gt.s32	%p795, %r25, 11;
	@%p795 bra 	BB1_1172;

	setp.gt.s32	%p801, %r25, 9;
	@%p801 bra 	BB1_1169;

	setp.eq.s32	%p804, %r25, 8;
	@%p804 bra 	BB1_1224;
	bra.uni 	BB1_1167;

BB1_1224:
	mov.u32 	%r10943, 0;
	mov.u32 	%r10941, %r21;
	mov.u32 	%r10942, %r20;
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r10945, %r17;
	mov.u32 	%r10946, %r16;
	mov.u32 	%r10947, %r23;
	mov.u32 	%r20, %r22;
	bra.uni 	BB1_1234;

BB1_978:
	setp.gt.s32	%p670, %r4981, 5;
	@%p670 bra 	BB1_982;

	setp.eq.s32	%p673, %r4981, 4;
	@%p673 bra 	BB1_987;
	bra.uni 	BB1_980;

BB1_987:
	and.b32  	%r10941, %r905, %r23;
	mov.u32 	%r10942, 0;
	mov.u32 	%r10943, %r10942;
	mov.u32 	%r10944, %r10942;
	bra.uni 	BB1_985;

BB1_719:
	setp.gt.s32	%p463, %r15, 23;
	@%p463 bra 	BB1_732;

	setp.gt.s32	%p475, %r15, 19;
	@%p475 bra 	BB1_725;

	setp.eq.s32	%p481, %r15, 17;
	@%p481 bra 	BB1_763;

	setp.eq.s32	%p482, %r15, 18;
	@%p482 bra 	BB1_761;
	bra.uni 	BB1_723;

BB1_761:
	shl.b32 	%r3989, %r23, 8;
	and.b32  	%r3990, %r3989, 65280;
	bfe.u32 	%r3991, %r23, 8, 8;
	or.b32  	%r10941, %r3990, %r3991;
	mov.u32 	%r10949, 18;
	bra.uni 	BB1_762;

BB1_1444:
	setp.gt.s32	%p998, %r7653, 11;
	@%p998 bra 	BB1_1452;

	setp.gt.s32	%p1004, %r7653, 9;
	@%p1004 bra 	BB1_1449;

	setp.eq.s32	%p1007, %r7653, 8;
	@%p1007 bra 	BB1_1504;
	bra.uni 	BB1_1447;

BB1_1504:
	mov.u32 	%r10937, 0;
	mov.u32 	%r10933, %r17;
	mov.u32 	%r10934, %r16;
	mov.u32 	%r10935, %r23;
	mov.u32 	%r23, %r22;
	mov.u32 	%r10938, %r10937;
	mov.u32 	%r10939, %r19;
	mov.u32 	%r19, %r18;
	bra.uni 	BB1_1511;

BB1_358:
	setp.gt.s32	%p259, %r3652, 5;
	@%p259 bra 	BB1_362;

	setp.eq.s32	%p262, %r3652, 4;
	@%p262 bra 	BB1_366;
	bra.uni 	BB1_360;

BB1_366:
	and.b32  	%r3666, %r23, %r353;
	and.b32  	%r3667, %r3640, %r352;
	or.b32  	%r10941, %r3667, %r3666;
	bra.uni 	BB1_647;

BB1_163:
	setp.gt.s32	%p127, %r25, 23;
	@%p127 bra 	BB1_179;

	setp.gt.s32	%p139, %r25, 19;
	@%p139 bra 	BB1_172;

	setp.gt.s32	%p145, %r25, 17;
	@%p145 bra 	BB1_169;

	setp.eq.s32	%p148, %r25, 16;
	@%p148 bra 	BB1_205;
	bra.uni 	BB1_167;

BB1_205:
	mov.u32 	%r10784, %r19;
	mov.u32 	%r10785, %r18;
	mov.u32 	%r10786, %r17;
	mov.u32 	%r10787, %r16;
	bra.uni 	BB1_199;

BB1_239:
	setp.gt.s32	%p188, %r2994, 5;
	@%p188 bra 	BB1_243;

	setp.eq.s32	%p191, %r2994, 4;
	@%p191 bra 	BB1_248;
	bra.uni 	BB1_241;

BB1_248:
	and.b32  	%r10800, %r187, %r23;
	mov.u32 	%r10801, 0;
	mov.u32 	%r10802, %r10801;
	mov.u32 	%r10803, %r10801;
	bra.uni 	BB1_246;

BB1_381:
	setp.eq.s32	%p272, %r3676, 6;
	@%p272 bra 	BB1_384;
	bra.uni 	BB1_382;

BB1_384:
	and.b32  	%r3684, %r21, %r363;
	and.b32  	%r3685, %r362, %r21;
	sub.s32 	%r3686, %r3685, %r364;
	and.b32  	%r3687, %r3686, %r362;
	or.b32  	%r10943, %r3687, %r3684;
	bra.uni 	BB1_670;

BB1_1032:
	setp.eq.s32	%p697, %r5055, 6;
	@%p697 bra 	BB1_1035;
	bra.uni 	BB1_1033;

BB1_1035:
	and.b32  	%r5064, %r933, %r21;
	or.b32  	%r5065, %r5064, %r932;
	and.b32  	%r5066, %r10943, %r934;
	or.b32  	%r10943, %r5065, %r5066;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	bra.uni 	BB1_757;

BB1_1525:
	setp.eq.s32	%p1021, %r8215, 6;
	@%p1021 bra 	BB1_1528;
	bra.uni 	BB1_1526;

BB1_1528:
	and.b32  	%r8232, %r21, 1077952576;
	shr.u32 	%r8233, %r8232, 1;
	and.b32  	%r8234, %r21, -2139062144;
	shr.u32 	%r8235, %r8234, 2;
	not.b32 	%r8236, %r8235;
	and.b32  	%r8237, %r8233, %r8236;
	and.b32  	%r8238, %r21, 522133279;
	add.s32 	%r8239, %r8238, 522133279;
	mov.u32 	%r8240, -84215046;
	sub.s32 	%r8241, %r8240, %r8238;
	and.b32  	%r8242, %r8237, %r8241;
	and.b32  	%r8243, %r8242, %r8239;
	and.b32  	%r8244, %r8243, %r1711;
	xor.b32  	%r10943, %r8244, %r21;
	bra.uni 	BB1_1013;

BB1_1196:
	setp.gt.s32	%p772, %r25, 27;
	@%p772 bra 	BB1_1205;

	setp.gt.s32	%p778, %r25, 25;
	@%p778 bra 	BB1_1201;

	setp.eq.s32	%p781, %r25, 24;
	@%p781 bra 	BB1_1214;
	bra.uni 	BB1_1199;

BB1_1214:
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10945, %r21;
	mov.u32 	%r10946, %r20;
	bra.uni 	BB1_1232;

BB1_1475:
	setp.gt.s32	%p975, %r7653, 27;
	@%p975 bra 	BB1_1484;

	setp.gt.s32	%p981, %r7653, 25;
	@%p981 bra 	BB1_1480;

	setp.eq.s32	%p984, %r7653, 24;
	@%p984 bra 	BB1_1493;
	bra.uni 	BB1_1478;

BB1_1493:
	mov.u32 	%r10933, 0;
	mov.u32 	%r10934, %r10933;
	mov.u32 	%r10935, %r19;
	mov.u32 	%r23, %r18;
	bra.uni 	BB1_1510;

BB1_394:
	setp.eq.s32	%p289, %r3712, 2;
	@%p289 bra 	BB1_406;
	bra.uni 	BB1_395;

BB1_406:
	and.b32  	%r3736, %r17, %r374;
	and.b32  	%r3737, %r373, %r17;
	add.s32 	%r3738, %r3737, %r375;
	and.b32  	%r3739, %r3738, %r373;
	or.b32  	%r10947, %r3739, %r3736;
	bra.uni 	BB1_629;

BB1_1058:
	setp.gt.s32	%p734, %r27, 11;
	@%p734 bra 	BB1_1066;

	setp.gt.s32	%p740, %r27, 9;
	@%p740 bra 	BB1_1063;

	setp.eq.s32	%p743, %r27, 8;
	@%p743 bra 	BB1_1122;
	bra.uni 	BB1_1061;

BB1_1122:
	mov.u32 	%r10941, %r21;
	mov.u32 	%r10942, %r20;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r17;
	mov.u32 	%r10946, %r16;
	mov.u32 	%r10947, %r23;
	mov.u32 	%r10948, %r22;
	bra.uni 	BB1_1127;

BB1_1000:
	setp.eq.s32	%p688, %r5014, 2;
	@%p688 bra 	BB1_1015;
	bra.uni 	BB1_1001;

BB1_1015:
	and.b32  	%r5024, %r17, %r915;
	or.b32  	%r10947, %r5024, %r914;

BB1_1016:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	bra.uni 	BB1_17;

BB1_461:
	setp.gt.s32	%p345, %r25, 11;
	@%p345 bra 	BB1_469;

	setp.gt.s32	%p351, %r25, 9;
	@%p351 bra 	BB1_466;

	setp.eq.s32	%p354, %r25, 8;
	@%p354 bra 	BB1_518;
	bra.uni 	BB1_464;

BB1_518:
	and.b32  	%r10816, %r17, 255;
	bra.uni 	BB1_523;

BB1_342:
	setp.gt.s32	%p247, %r3599, 5;
	@%p247 bra 	BB1_346;

	setp.eq.s32	%p250, %r3599, 4;
	@%p250 bra 	BB1_350;
	bra.uni 	BB1_344;

BB1_350:
	and.b32  	%r3609, %r23, %r336;
	and.b32  	%r3610, %r3583, %r335;
	or.b32  	%r10941, %r3610, %r3609;
	bra.uni 	BB1_647;

BB1_1420:
	setp.eq.s32	%p969, %r7474, 2;
	@%p969 bra 	BB1_1432;
	bra.uni 	BB1_1421;

BB1_1432:
	// inline asm
	prmt.b32 %r10932, %r23, %r22, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10931, %r16, %r23, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10930, %r17, %r16, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10929, %r18, %r17, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10928, %r19, %r18, %r1534;
	// inline asm
	mov.u32 	%r10925, 0;
	// inline asm
	prmt.b32 %r10927, %r10925, %r19, %r1534;
	// inline asm
	mov.u32 	%r10926, %r10925;
	bra.uni 	BB1_1434;

BB1_1327:
	setp.gt.s32	%p889, %r6528, 23;
	@%p889 bra 	BB1_1344;

	setp.gt.s32	%p901, %r6528, 19;
	@%p901 bra 	BB1_1337;

	setp.gt.s32	%p907, %r6528, 17;
	@%p907 bra 	BB1_1333;

	setp.eq.s32	%p910, %r6528, 16;
	@%p910 bra 	BB1_1370;
	bra.uni 	BB1_1331;

BB1_1370:
	mov.u32 	%r10891, %r19;
	mov.u32 	%r10892, %r18;
	mov.u32 	%r10893, %r17;
	mov.u32 	%r10894, %r16;
	bra.uni 	BB1_1364;

BB1_429:
	setp.eq.s32	%p313, %r3784, 2;
	@%p313 bra 	BB1_441;
	bra.uni 	BB1_430;

BB1_441:
	and.b32  	%r3808, %r17, %r395;
	and.b32  	%r3809, %r394, %r17;
	shl.b32 	%r3810, %r3809, 1;
	and.b32  	%r3811, %r3810, %r394;
	or.b32  	%r10947, %r3811, %r3808;
	bra.uni 	BB1_629;

BB1_413:
	setp.gt.s32	%p295, %r3748, 5;
	@%p295 bra 	BB1_417;

	setp.eq.s32	%p298, %r3748, 4;
	@%p298 bra 	BB1_421;
	bra.uni 	BB1_415;

BB1_421:
	and.b32  	%r3764, %r23, %r385;
	and.b32  	%r3765, %r384, %r23;
	shr.u32 	%r3766, %r3765, 1;
	and.b32  	%r3767, %r3766, %r384;
	or.b32  	%r10941, %r3767, %r3764;
	bra.uni 	BB1_647;

BB1_947:
	setp.eq.s32	%p626, %r864, 2;
	mov.u32 	%r10949, 0;
	@%p626 bra 	BB1_948;
	bra.uni 	BB1_949;

BB1_948:
	mov.u32 	%r10844, %r10949;
	bra.uni 	BB1_951;

BB1_1261:
	setp.gt.s32	%p828, %r6273, 5;
	@%p828 bra 	BB1_1265;

	setp.eq.s32	%p831, %r6273, 4;
	@%p831 bra 	BB1_1270;
	bra.uni 	BB1_1263;

BB1_1270:
	and.b32  	%r6284, %r1211, %r23;
	and.b32  	%r6285, %r10941, %r1212;
	or.b32  	%r10941, %r6285, %r6284;
	bra.uni 	BB1_1271;

BB1_797:
	setp.gt.s32	%p558, %r25, 11;
	@%p558 bra 	BB1_805;

	setp.gt.s32	%p564, %r25, 9;
	@%p564 bra 	BB1_802;

	setp.eq.s32	%p567, %r25, 8;
	@%p567 bra 	BB1_857;
	bra.uni 	BB1_800;

BB1_857:
	mov.u32 	%r10945, 0;
	mov.u32 	%r10941, %r17;
	mov.u32 	%r10942, %r16;
	mov.u32 	%r10943, %r23;
	mov.u32 	%r20, %r22;
	mov.u32 	%r10946, %r10945;
	mov.u32 	%r10947, %r19;
	mov.u32 	%r16, %r18;
	bra.uni 	BB1_865;

BB1_1279:
	setp.gt.s32	%p858, %r6375, 5;
	@%p858 bra 	BB1_1283;

	setp.eq.s32	%p861, %r6375, 4;
	@%p861 bra 	BB1_1287;
	bra.uni 	BB1_1281;

BB1_1287:
	and.b32  	%r10941, %r10941, %r1256;
	mov.u32 	%r10942, 0;
	mov.u32 	%r10943, %r10942;
	mov.u32 	%r10944, %r10942;
	bra.uni 	BB1_1535;

BB1_401:
	setp.eq.s32	%p284, %r3712, 6;
	@%p284 bra 	BB1_404;
	bra.uni 	BB1_402;

BB1_404:
	and.b32  	%r3720, %r21, %r374;
	and.b32  	%r3721, %r373, %r21;
	add.s32 	%r3722, %r3721, %r375;
	and.b32  	%r3723, %r3722, %r373;
	or.b32  	%r10943, %r3723, %r3720;
	bra.uni 	BB1_670;

BB1_1092:
	setp.gt.s32	%p711, %r27, 27;
	@%p711 bra 	BB1_1102;

	setp.gt.s32	%p717, %r27, 25;
	@%p717 bra 	BB1_1097;

	setp.eq.s32	%p720, %r27, 24;
	@%p720 bra 	BB1_1114;
	bra.uni 	BB1_1095;

BB1_1114:
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r21;
	mov.u32 	%r10946, %r20;
	bra.uni 	BB1_1112;

BB1_1008:
	setp.eq.s32	%p683, %r5014, 6;
	@%p683 bra 	BB1_1012;
	bra.uni 	BB1_1009;

BB1_1012:
	and.b32  	%r5020, %r21, %r915;
	or.b32  	%r10943, %r5020, %r914;

BB1_1013:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	bra.uni 	BB1_13;

BB1_492:
	setp.gt.s32	%p322, %r25, 27;
	@%p322 bra 	BB1_500;

	setp.gt.s32	%p328, %r25, 25;
	@%p328 bra 	BB1_497;

	setp.eq.s32	%p331, %r25, 24;
	@%p331 bra 	BB1_510;
	bra.uni 	BB1_495;

BB1_510:
	and.b32  	%r10816, %r21, 255;
	bra.uni 	BB1_523;

BB1_1427:
	setp.eq.s32	%p964, %r7474, 6;
	@%p964 bra 	BB1_1430;
	bra.uni 	BB1_1428;

BB1_1430:
	// inline asm
	prmt.b32 %r10932, %r19, %r18, %r1534;
	// inline asm
	mov.u32 	%r10925, 0;
	// inline asm
	prmt.b32 %r10931, %r10925, %r19, %r1534;
	// inline asm
	mov.u32 	%r10926, %r10925;
	mov.u32 	%r10927, %r10925;
	mov.u32 	%r10928, %r10925;
	mov.u32 	%r10929, %r10925;
	mov.u32 	%r10930, %r10925;
	bra.uni 	BB1_1434;

BB1_436:
	setp.eq.s32	%p308, %r3784, 6;
	@%p308 bra 	BB1_439;
	bra.uni 	BB1_437;

BB1_439:
	and.b32  	%r3792, %r21, %r395;
	and.b32  	%r3793, %r394, %r21;
	shl.b32 	%r3794, %r3793, 1;
	and.b32  	%r3795, %r3794, %r394;
	or.b32  	%r10943, %r3795, %r3792;
	bra.uni 	BB1_670;

BB1_828:
	setp.gt.s32	%p535, %r25, 27;
	@%p535 bra 	BB1_837;

	setp.gt.s32	%p541, %r25, 25;
	@%p541 bra 	BB1_833;

	setp.eq.s32	%p544, %r25, 24;
	@%p544 bra 	BB1_846;
	bra.uni 	BB1_831;

BB1_846:
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r19;
	mov.u32 	%r20, %r18;
	bra.uni 	BB1_864;

BB1_372:
	setp.eq.s32	%p280, %r3676, 1;
	@%p280 bra 	BB1_373;
	bra.uni 	BB1_10;

BB1_373:
	and.b32  	%r3704, %r18, %r363;
	and.b32  	%r3705, %r362, %r18;
	sub.s32 	%r3706, %r3705, %r364;
	and.b32  	%r3707, %r3706, %r362;
	or.b32  	%r10946, %r3707, %r3704;
	bra.uni 	BB1_620;

BB1_1023:
	setp.eq.s32	%p705, %r5055, 1;
	@%p705 bra 	BB1_1038;
	bra.uni 	BB1_1024;

BB1_1038:
	and.b32  	%r5079, %r933, %r18;
	or.b32  	%r5080, %r5079, %r932;
	and.b32  	%r5081, %r10946, %r934;
	or.b32  	%r10946, %r5080, %r5081;
	mov.u32 	%r10945, %r19;
	bra.uni 	BB1_1536;

BB1_1516:
	setp.eq.s32	%p1029, %r8215, 1;
	@%p1029 bra 	BB1_1517;
	bra.uni 	BB1_777;

BB1_1517:
	and.b32  	%r8297, %r18, 1077952576;
	shr.u32 	%r8298, %r8297, 1;
	and.b32  	%r8299, %r18, -2139062144;
	shr.u32 	%r8300, %r8299, 2;
	not.b32 	%r8301, %r8300;
	and.b32  	%r8302, %r8298, %r8301;
	and.b32  	%r8303, %r18, 522133279;
	add.s32 	%r8304, %r8303, 522133279;
	mov.u32 	%r8305, -84215046;
	sub.s32 	%r8306, %r8305, %r8303;
	and.b32  	%r8307, %r8302, %r8306;
	and.b32  	%r8308, %r8307, %r8304;
	and.b32  	%r8309, %r8308, %r1711;
	xor.b32  	%r10946, %r8309, %r18;
	bra.uni 	BB1_999;

BB1_1157:
	setp.gt.s32	%p807, %r25, 5;
	@%p807 bra 	BB1_1161;

	setp.eq.s32	%p810, %r25, 4;
	@%p810 bra 	BB1_1226;
	bra.uni 	BB1_1159;

BB1_1226:
	mov.u32 	%r10944, 0;
	mov.u32 	%r10941, %r22;
	mov.u32 	%r10942, %r21;
	mov.u32 	%r10943, %r20;
	mov.u32 	%r10945, %r18;
	mov.u32 	%r10946, %r17;
	mov.u32 	%r10947, %r16;
	mov.u32 	%r20, %r23;
	bra.uni 	BB1_1234;

BB1_975:
	setp.eq.s32	%p676, %r4981, 2;
	@%p676 bra 	BB1_988;
	bra.uni 	BB1_976;

BB1_988:
	and.b32  	%r10947, %r905, %r17;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	bra.uni 	BB1_991;

BB1_704:
	setp.gt.s32	%p485, %r15, 12;
	@%p485 bra 	BB1_712;

	setp.gt.s32	%p491, %r15, 10;
	@%p491 bra 	BB1_709;

	setp.eq.s32	%p494, %r15, 9;
	@%p494 bra 	BB1_770;
	bra.uni 	BB1_707;

BB1_770:
	or.b32  	%r4035, %r17, %r18;
	and.b32  	%r4036, %r18, 16777215;
	prmt.b32 	%r10946, %r17, %r4036, 1620;
	shr.u32 	%r10947, %r4035, 24;
	mov.u32 	%r10949, 9;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10948, %r16;
	bra.uni 	BB1_1536;

BB1_1437:
	setp.gt.s32	%p1010, %r7653, 5;
	@%p1010 bra 	BB1_1441;

	setp.eq.s32	%p1013, %r7653, 4;
	@%p1013 bra 	BB1_1506;
	bra.uni 	BB1_1439;

BB1_1506:
	mov.u32 	%r10937, 0;
	mov.u32 	%r10933, %r16;
	mov.u32 	%r10934, %r23;
	mov.u32 	%r10935, %r22;
	mov.u32 	%r23, %r21;
	mov.u32 	%r10938, %r19;
	mov.u32 	%r10939, %r18;
	mov.u32 	%r19, %r17;
	bra.uni 	BB1_1511;

BB1_355:
	setp.eq.s32	%p265, %r3652, 2;
	@%p265 bra 	BB1_367;
	bra.uni 	BB1_356;

BB1_367:
	and.b32  	%r3670, %r17, %r353;
	and.b32  	%r3671, %r3632, %r352;
	or.b32  	%r10947, %r3671, %r3670;
	bra.uni 	BB1_629;

BB1_147:
	setp.gt.s32	%p151, %r25, 11;
	@%p151 bra 	BB1_155;

	setp.gt.s32	%p157, %r25, 9;
	@%p157 bra 	BB1_152;

	setp.eq.s32	%p160, %r25, 8;
	@%p160 bra 	BB1_209;
	bra.uni 	BB1_150;

BB1_209:
	mov.u32 	%r10784, %r17;
	mov.u32 	%r10785, %r16;
	mov.u32 	%r10786, %r23;
	mov.u32 	%r10787, %r22;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r19;
	mov.u32 	%r10791, %r18;
	bra.uni 	BB1_213;

BB1_236:
	setp.eq.s32	%p194, %r2994, 2;
	@%p194 bra 	BB1_249;
	bra.uni 	BB1_237;

BB1_249:
	and.b32  	%r10806, %r187, %r17;
	mov.u32 	%r10800, 0;
	mov.u32 	%r10801, %r10800;
	mov.u32 	%r10802, %r10800;
	mov.u32 	%r10803, %r10800;
	mov.u32 	%r10804, %r19;
	mov.u32 	%r10805, %r18;
	bra.uni 	BB1_250;

BB1_379:
	setp.eq.s32	%p275, %r3676, 5;
	@%p275 bra 	BB1_380;
	bra.uni 	BB1_10;

BB1_380:
	and.b32  	%r3688, %r22, %r363;
	and.b32  	%r3689, %r362, %r22;
	sub.s32 	%r3690, %r3689, %r364;
	and.b32  	%r3691, %r3690, %r362;
	or.b32  	%r10942, %r3691, %r3688;
	bra.uni 	BB1_655;

BB1_1030:
	setp.eq.s32	%p700, %r5055, 5;
	@%p700 bra 	BB1_1031;
	bra.uni 	BB1_1024;

BB1_1031:
	and.b32  	%r5067, %r933, %r22;
	or.b32  	%r5068, %r5067, %r932;
	and.b32  	%r5069, %r10942, %r934;
	or.b32  	%r10942, %r5068, %r5069;
	mov.u32 	%r10941, %r23;
	bra.uni 	BB1_757;

BB1_1523:
	setp.eq.s32	%p1024, %r8215, 5;
	@%p1024 bra 	BB1_1524;
	bra.uni 	BB1_777;

BB1_1524:
	and.b32  	%r8245, %r22, 1077952576;
	shr.u32 	%r8246, %r8245, 1;
	and.b32  	%r8247, %r22, -2139062144;
	shr.u32 	%r8248, %r8247, 2;
	not.b32 	%r8249, %r8248;
	and.b32  	%r8250, %r8246, %r8249;
	and.b32  	%r8251, %r22, 522133279;
	add.s32 	%r8252, %r8251, 522133279;
	mov.u32 	%r8253, -84215046;
	sub.s32 	%r8254, %r8253, %r8251;
	and.b32  	%r8255, %r8250, %r8254;
	and.b32  	%r8256, %r8255, %r8252;
	and.b32  	%r8257, %r8256, %r1711;
	xor.b32  	%r10942, %r8257, %r22;
	bra.uni 	BB1_1007;

BB1_1188:
	setp.gt.s32	%p784, %r25, 21;
	@%p784 bra 	BB1_1192;

	setp.eq.s32	%p787, %r25, 20;
	@%p787 bra 	BB1_1216;
	bra.uni 	BB1_1190;

BB1_1216:
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10945, %r22;
	mov.u32 	%r10946, %r21;
	mov.u32 	%r10947, %r20;
	bra.uni 	BB1_1233;

BB1_1468:
	setp.gt.s32	%p987, %r7653, 21;
	@%p987 bra 	BB1_1472;

	setp.eq.s32	%p990, %r7653, 20;
	@%p990 bra 	BB1_1495;
	bra.uni 	BB1_1470;

BB1_1495:
	mov.u32 	%r10933, 0;
	mov.u32 	%r10934, %r19;
	mov.u32 	%r10935, %r18;
	mov.u32 	%r23, %r17;
	bra.uni 	BB1_1510;

BB1_375:
	setp.eq.s32	%p278, %r3676, 3;
	@%p278 bra 	BB1_376;
	bra.uni 	BB1_10;

BB1_376:
	and.b32  	%r3696, %r16, %r363;
	and.b32  	%r3697, %r362, %r16;
	sub.s32 	%r3698, %r3697, %r364;
	and.b32  	%r3699, %r3698, %r362;
	or.b32  	%r10948, %r3699, %r3696;
	bra.uni 	BB1_637;

BB1_1026:
	setp.eq.s32	%p703, %r5055, 3;
	@%p703 bra 	BB1_1027;
	bra.uni 	BB1_1024;

BB1_1027:
	and.b32  	%r5073, %r933, %r16;
	or.b32  	%r5074, %r5073, %r932;
	and.b32  	%r5075, %r10948, %r934;
	or.b32  	%r10948, %r5074, %r5075;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	bra.uni 	BB1_1536;

BB1_1519:
	setp.eq.s32	%p1027, %r8215, 3;
	@%p1027 bra 	BB1_1520;
	bra.uni 	BB1_777;

BB1_1520:
	and.b32  	%r8271, %r16, 1077952576;
	shr.u32 	%r8272, %r8271, 1;
	and.b32  	%r8273, %r16, -2139062144;
	shr.u32 	%r8274, %r8273, 2;
	not.b32 	%r8275, %r8274;
	and.b32  	%r8276, %r8272, %r8275;
	and.b32  	%r8277, %r16, 522133279;
	add.s32 	%r8278, %r8277, 522133279;
	mov.u32 	%r8279, -84215046;
	sub.s32 	%r8280, %r8279, %r8277;
	and.b32  	%r8281, %r8276, %r8280;
	and.b32  	%r8282, %r8281, %r8278;
	and.b32  	%r8283, %r8282, %r1711;
	xor.b32  	%r10948, %r8283, %r16;
	bra.uni 	BB1_637;

BB1_1172:
	setp.gt.s32	%p796, %r25, 13;
	@%p796 bra 	BB1_1176;

	setp.eq.s32	%p799, %r25, 12;
	@%p799 bra 	BB1_1222;
	bra.uni 	BB1_1174;

BB1_1222:
	mov.u32 	%r10942, 0;
	mov.u32 	%r10941, %r20;
	mov.u32 	%r10943, %r10942;
	mov.u32 	%r10944, %r10942;
	mov.u32 	%r10945, %r16;
	mov.u32 	%r10946, %r23;
	mov.u32 	%r10947, %r22;
	mov.u32 	%r20, %r21;
	bra.uni 	BB1_1234;

BB1_982:
	setp.eq.s32	%p671, %r4981, 6;
	@%p671 bra 	BB1_986;
	bra.uni 	BB1_983;

BB1_986:
	and.b32  	%r10943, %r905, %r21;
	mov.u32 	%r10944, 0;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	bra.uni 	BB1_985;

BB1_732:
	setp.gt.s32	%p464, %r15, 27;
	@%p464 bra 	BB1_740;

	setp.gt.s32	%p470, %r15, 25;
	@%p470 bra 	BB1_737;

	setp.eq.s32	%p473, %r15, 24;
	@%p473 bra 	BB1_752;
	bra.uni 	BB1_735;

BB1_752:
	and.b32  	%r3954, %r22, 65535;
	shl.b32 	%r3955, %r22, 8;
	and.b32  	%r3956, %r3955, -16777216;
	or.b32  	%r3957, %r3956, %r3954;
	shr.u32 	%r3958, %r22, 8;
	and.b32  	%r3959, %r3958, 16711680;
	or.b32  	%r10942, %r3957, %r3959;
	mov.u32 	%r10949, 24;
	bra.uni 	BB1_754;

BB1_1452:
	setp.gt.s32	%p999, %r7653, 13;
	@%p999 bra 	BB1_1456;

	setp.eq.s32	%p1002, %r7653, 12;
	@%p1002 bra 	BB1_1501;
	bra.uni 	BB1_1454;

BB1_1501:
	mov.u32 	%r10937, 0;
	mov.u32 	%r10933, %r18;
	mov.u32 	%r10934, %r17;
	mov.u32 	%r10935, %r16;
	bra.uni 	BB1_1502;

BB1_362:
	setp.eq.s32	%p260, %r3652, 6;
	@%p260 bra 	BB1_365;
	bra.uni 	BB1_363;

BB1_365:
	and.b32  	%r3662, %r21, %r353;
	and.b32  	%r3663, %r3648, %r352;
	or.b32  	%r10943, %r3663, %r3662;
	bra.uni 	BB1_670;

BB1_179:
	setp.gt.s32	%p128, %r25, 27;
	@%p128 bra 	BB1_189;

	setp.gt.s32	%p134, %r25, 25;
	@%p134 bra 	BB1_184;

	setp.eq.s32	%p137, %r25, 24;
	@%p137 bra 	BB1_201;
	bra.uni 	BB1_182;

BB1_201:
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r19;
	mov.u32 	%r10787, %r18;
	bra.uni 	BB1_199;

BB1_243:
	setp.eq.s32	%p189, %r2994, 6;
	@%p189 bra 	BB1_247;
	bra.uni 	BB1_244;

BB1_247:
	and.b32  	%r10802, %r187, %r21;
	mov.u32 	%r10803, 0;
	mov.u32 	%r10800, %r23;
	mov.u32 	%r10801, %r22;
	bra.uni 	BB1_246;

BB1_382:
	setp.ne.s32	%p273, %r3676, 7;
	@%p273 bra 	BB1_10;

	and.b32  	%r3680, %r20, %r363;
	and.b32  	%r3681, %r362, %r20;
	sub.s32 	%r3682, %r3681, %r364;
	and.b32  	%r3683, %r3682, %r362;
	or.b32  	%r10944, %r3683, %r3680;
	bra.uni 	BB1_678;

BB1_1033:
	setp.ne.s32	%p698, %r5055, 7;
	@%p698 bra 	BB1_1024;

	and.b32  	%r5061, %r933, %r20;
	or.b32  	%r5062, %r5061, %r932;
	and.b32  	%r5063, %r10944, %r934;
	or.b32  	%r10944, %r5062, %r5063;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	bra.uni 	BB1_757;

BB1_1024:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;

BB1_755:
	mov.u32 	%r10943, %r21;

BB1_756:
	mov.u32 	%r10944, %r20;

BB1_757:
	mov.u32 	%r10945, %r19;

BB1_758:
	mov.u32 	%r10946, %r18;

BB1_759:
	mov.u32 	%r10947, %r17;
	mov.u32 	%r10948, %r16;
	bra.uni 	BB1_1536;

BB1_1526:
	setp.ne.s32	%p1022, %r8215, 7;
	@%p1022 bra 	BB1_777;

	and.b32  	%r8219, %r20, 1077952576;
	shr.u32 	%r8220, %r8219, 1;
	and.b32  	%r8221, %r20, -2139062144;
	shr.u32 	%r8222, %r8221, 2;
	not.b32 	%r8223, %r8222;
	and.b32  	%r8224, %r8220, %r8223;
	and.b32  	%r8225, %r20, 522133279;
	add.s32 	%r8226, %r8225, 522133279;
	mov.u32 	%r8227, -84215046;
	sub.s32 	%r8228, %r8227, %r8225;
	and.b32  	%r8229, %r8224, %r8228;
	and.b32  	%r8230, %r8229, %r8226;
	and.b32  	%r8231, %r8230, %r1711;
	xor.b32  	%r10944, %r8231, %r20;
	bra.uni 	BB1_1011;

BB1_1205:
	setp.gt.s32	%p773, %r25, 29;
	@%p773 bra 	BB1_1209;

	setp.eq.s32	%p776, %r25, 28;
	@%p776 bra 	BB1_1212;
	bra.uni 	BB1_1207;

BB1_1212:
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10945, %r20;
	bra.uni 	BB1_1231;

BB1_1484:
	setp.gt.s32	%p976, %r7653, 29;
	@%p976 bra 	BB1_1488;

	setp.eq.s32	%p979, %r7653, 28;
	@%p979 bra 	BB1_1491;
	bra.uni 	BB1_1486;

BB1_1491:
	mov.u32 	%r10933, 0;
	mov.u32 	%r10934, %r10933;
	mov.u32 	%r10935, %r10933;
	mov.u32 	%r23, %r19;
	bra.uni 	BB1_1510;

BB1_392:
	setp.eq.s32	%p292, %r3712, 1;
	@%p292 bra 	BB1_393;
	bra.uni 	BB1_10;

BB1_393:
	and.b32  	%r3740, %r18, %r374;
	and.b32  	%r3741, %r373, %r18;
	add.s32 	%r3742, %r3741, %r375;
	and.b32  	%r3743, %r3742, %r373;
	or.b32  	%r10946, %r3743, %r3740;
	bra.uni 	BB1_620;

BB1_1051:
	setp.gt.s32	%p746, %r27, 5;
	@%p746 bra 	BB1_1055;

	setp.eq.s32	%p749, %r27, 4;
	@%p749 bra 	BB1_1124;
	bra.uni 	BB1_1053;

BB1_1124:
	mov.u32 	%r10941, %r22;
	mov.u32 	%r10942, %r21;
	mov.u32 	%r10943, %r20;
	mov.u32 	%r10863, %r18;
	mov.u32 	%r10946, %r17;
	mov.u32 	%r10947, %r16;
	mov.u32 	%r10948, %r23;
	bra.uni 	BB1_1127;

BB1_997:
	setp.eq.s32	%p691, %r5014, 1;
	@%p691 bra 	BB1_998;
	bra.uni 	BB1_777;

BB1_998:
	and.b32  	%r5025, %r18, %r915;
	or.b32  	%r10946, %r5025, %r914;

BB1_999:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	bra.uni 	BB1_16;

BB1_454:
	setp.gt.s32	%p357, %r25, 5;
	@%p357 bra 	BB1_458;

	setp.eq.s32	%p360, %r25, 4;
	@%p360 bra 	BB1_520;
	bra.uni 	BB1_456;

BB1_520:
	and.b32  	%r10816, %r18, 255;
	bra.uni 	BB1_523;

BB1_339:
	setp.eq.s32	%p253, %r3599, 2;
	@%p253 bra 	BB1_351;
	bra.uni 	BB1_340;

BB1_351:
	and.b32  	%r3613, %r17, %r336;
	and.b32  	%r3614, %r3591, %r335;
	or.b32  	%r10947, %r3614, %r3613;
	bra.uni 	BB1_629;

BB1_1418:
	setp.eq.s32	%p972, %r7474, 1;
	mov.u32 	%r10926, %r10925;
	mov.u32 	%r10927, %r10925;
	mov.u32 	%r10928, %r10925;
	mov.u32 	%r10929, %r10925;
	mov.u32 	%r10930, %r10925;
	mov.u32 	%r10931, %r10925;
	mov.u32 	%r10932, %r10925;
	@%p972 bra 	BB1_1419;
	bra.uni 	BB1_1434;

BB1_1419:
	// inline asm
	prmt.b32 %r10932, %r22, %r21, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10931, %r23, %r22, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10930, %r16, %r23, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10929, %r17, %r16, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10928, %r18, %r17, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10927, %r19, %r18, %r1534;
	// inline asm
	mov.u32 	%r10925, 0;
	// inline asm
	prmt.b32 %r10926, %r10925, %r19, %r1534;
	// inline asm
	bra.uni 	BB1_1434;

BB1_1311:
	setp.gt.s32	%p913, %r6528, 11;
	@%p913 bra 	BB1_1319;

	setp.gt.s32	%p919, %r6528, 9;
	@%p919 bra 	BB1_1316;

	setp.eq.s32	%p922, %r6528, 8;
	@%p922 bra 	BB1_1374;
	bra.uni 	BB1_1314;

BB1_1374:
	mov.u32 	%r10891, %r17;
	mov.u32 	%r10892, %r16;
	mov.u32 	%r10893, %r23;
	mov.u32 	%r10894, %r22;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r19;
	mov.u32 	%r10898, %r18;
	bra.uni 	BB1_1378;

BB1_427:
	setp.eq.s32	%p316, %r3784, 1;
	@%p316 bra 	BB1_428;
	bra.uni 	BB1_10;

BB1_428:
	and.b32  	%r3812, %r18, %r395;
	and.b32  	%r3813, %r394, %r18;
	shl.b32 	%r3814, %r3813, 1;
	and.b32  	%r3815, %r3814, %r394;
	or.b32  	%r10946, %r3815, %r3812;
	bra.uni 	BB1_620;

BB1_410:
	setp.eq.s32	%p301, %r3748, 2;
	@%p301 bra 	BB1_422;
	bra.uni 	BB1_411;

BB1_422:
	and.b32  	%r3772, %r17, %r385;
	and.b32  	%r3773, %r384, %r17;
	shr.u32 	%r3774, %r3773, 1;
	and.b32  	%r3775, %r3774, %r384;
	or.b32  	%r10947, %r3775, %r3772;
	bra.uni 	BB1_629;

BB1_1258:
	setp.eq.s32	%p834, %r6273, 2;
	@%p834 bra 	BB1_1272;
	bra.uni 	BB1_1259;

BB1_1272:
	and.b32  	%r6288, %r1211, %r17;
	and.b32  	%r6289, %r10947, %r1212;
	or.b32  	%r10947, %r6289, %r6288;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	bra.uni 	BB1_1273;

BB1_790:
	setp.gt.s32	%p570, %r25, 5;
	@%p570 bra 	BB1_794;

	setp.eq.s32	%p573, %r25, 4;
	@%p573 bra 	BB1_859;
	bra.uni 	BB1_792;

BB1_859:
	mov.u32 	%r10945, 0;
	mov.u32 	%r10941, %r16;
	mov.u32 	%r10942, %r23;
	mov.u32 	%r10943, %r22;
	mov.u32 	%r20, %r21;
	mov.u32 	%r10946, %r19;
	mov.u32 	%r10947, %r18;
	mov.u32 	%r16, %r17;
	bra.uni 	BB1_865;

BB1_1276:
	setp.eq.s32	%p864, %r6375, 2;
	@%p864 bra 	BB1_1288;
	bra.uni 	BB1_1277;

BB1_1288:
	and.b32  	%r10947, %r10947, %r1256;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	bra.uni 	BB1_1291;

BB1_399:
	setp.eq.s32	%p287, %r3712, 5;
	@%p287 bra 	BB1_400;
	bra.uni 	BB1_10;

BB1_400:
	and.b32  	%r3724, %r22, %r374;
	and.b32  	%r3725, %r373, %r22;
	add.s32 	%r3726, %r3725, %r375;
	and.b32  	%r3727, %r3726, %r373;
	or.b32  	%r10942, %r3727, %r3724;
	bra.uni 	BB1_655;

BB1_1084:
	setp.gt.s32	%p723, %r27, 21;
	@%p723 bra 	BB1_1088;

	setp.eq.s32	%p726, %r27, 20;
	@%p726 bra 	BB1_1116;
	bra.uni 	BB1_1086;

BB1_1116:
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r22;
	mov.u32 	%r10946, %r21;
	mov.u32 	%r10947, %r20;
	mov.u32 	%r10948, %r10944;
	bra.uni 	BB1_1127;

BB1_1005:
	setp.eq.s32	%p686, %r5014, 5;
	@%p686 bra 	BB1_1006;
	bra.uni 	BB1_777;

BB1_1006:
	and.b32  	%r5021, %r22, %r915;
	or.b32  	%r10942, %r5021, %r914;

BB1_1007:
	mov.u32 	%r10941, %r23;
	bra.uni 	BB1_12;

BB1_485:
	setp.gt.s32	%p334, %r25, 21;
	@%p334 bra 	BB1_489;

	setp.eq.s32	%p337, %r25, 20;
	@%p337 bra 	BB1_512;
	bra.uni 	BB1_487;

BB1_512:
	and.b32  	%r10816, %r22, 255;
	bra.uni 	BB1_523;

BB1_1425:
	setp.eq.s32	%p967, %r7474, 5;
	mov.u32 	%r10926, %r10925;
	mov.u32 	%r10927, %r10925;
	mov.u32 	%r10928, %r10925;
	mov.u32 	%r10929, %r10925;
	mov.u32 	%r10930, %r10925;
	mov.u32 	%r10931, %r10925;
	mov.u32 	%r10932, %r10925;
	@%p967 bra 	BB1_1426;
	bra.uni 	BB1_1434;

BB1_1426:
	// inline asm
	prmt.b32 %r10932, %r18, %r17, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10931, %r19, %r18, %r1534;
	// inline asm
	mov.u32 	%r10925, 0;
	// inline asm
	prmt.b32 %r10930, %r10925, %r19, %r1534;
	// inline asm
	mov.u32 	%r10926, %r10925;
	mov.u32 	%r10927, %r10925;
	mov.u32 	%r10928, %r10925;
	mov.u32 	%r10929, %r10925;
	bra.uni 	BB1_1434;

BB1_434:
	setp.eq.s32	%p311, %r3784, 5;
	@%p311 bra 	BB1_435;
	bra.uni 	BB1_10;

BB1_435:
	and.b32  	%r3796, %r22, %r395;
	and.b32  	%r3797, %r394, %r22;
	shl.b32 	%r3798, %r3797, 1;
	and.b32  	%r3799, %r3798, %r394;
	or.b32  	%r10942, %r3799, %r3796;
	bra.uni 	BB1_655;

BB1_821:
	setp.gt.s32	%p547, %r25, 21;
	@%p547 bra 	BB1_825;

	setp.eq.s32	%p550, %r25, 20;
	@%p550 bra 	BB1_848;
	bra.uni 	BB1_823;

BB1_848:
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r19;
	mov.u32 	%r10943, %r18;
	mov.u32 	%r20, %r17;
	bra.uni 	BB1_864;

BB1_395:
	setp.eq.s32	%p290, %r3712, 3;
	@%p290 bra 	BB1_396;
	bra.uni 	BB1_10;

BB1_396:
	and.b32  	%r3732, %r16, %r374;
	and.b32  	%r3733, %r373, %r16;
	add.s32 	%r3734, %r3733, %r375;
	and.b32  	%r3735, %r3734, %r373;
	or.b32  	%r10948, %r3735, %r3732;
	bra.uni 	BB1_637;

BB1_1066:
	setp.gt.s32	%p735, %r27, 13;
	@%p735 bra 	BB1_1070;

	setp.eq.s32	%p738, %r27, 12;
	@%p738 bra 	BB1_1120;
	bra.uni 	BB1_1068;

BB1_1120:
	mov.u32 	%r10941, %r20;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r16;
	mov.u32 	%r10946, %r23;
	mov.u32 	%r10947, %r22;
	mov.u32 	%r10948, %r21;
	bra.uni 	BB1_1127;

BB1_1001:
	setp.eq.s32	%p689, %r5014, 3;
	@%p689 bra 	BB1_1002;
	bra.uni 	BB1_777;

BB1_1002:
	and.b32  	%r5023, %r16, %r915;
	or.b32  	%r10948, %r5023, %r914;
	bra.uni 	BB1_637;

BB1_469:
	setp.gt.s32	%p346, %r25, 13;
	@%p346 bra 	BB1_473;

	setp.eq.s32	%p349, %r25, 12;
	@%p349 bra 	BB1_516;
	bra.uni 	BB1_471;

BB1_516:
	and.b32  	%r10816, %r16, 255;
	bra.uni 	BB1_523;

BB1_346:
	setp.eq.s32	%p248, %r3599, 6;
	@%p248 bra 	BB1_349;
	bra.uni 	BB1_347;

BB1_349:
	and.b32  	%r3605, %r21, %r336;
	and.b32  	%r3606, %r3575, %r335;
	or.b32  	%r10943, %r3606, %r3605;
	bra.uni 	BB1_670;

BB1_1421:
	setp.eq.s32	%p970, %r7474, 3;
	mov.u32 	%r10926, %r10925;
	mov.u32 	%r10927, %r10925;
	mov.u32 	%r10928, %r10925;
	mov.u32 	%r10929, %r10925;
	mov.u32 	%r10930, %r10925;
	mov.u32 	%r10931, %r10925;
	mov.u32 	%r10932, %r10925;
	@%p970 bra 	BB1_1422;
	bra.uni 	BB1_1434;

BB1_1422:
	// inline asm
	prmt.b32 %r10932, %r16, %r23, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10931, %r17, %r16, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10930, %r18, %r17, %r1534;
	// inline asm
	// inline asm
	prmt.b32 %r10929, %r19, %r18, %r1534;
	// inline asm
	mov.u32 	%r10925, 0;
	// inline asm
	prmt.b32 %r10928, %r10925, %r19, %r1534;
	// inline asm
	mov.u32 	%r10926, %r10925;
	mov.u32 	%r10927, %r10925;
	bra.uni 	BB1_1434;

BB1_1344:
	setp.gt.s32	%p890, %r6528, 27;
	@%p890 bra 	BB1_1354;

	setp.gt.s32	%p896, %r6528, 25;
	@%p896 bra 	BB1_1349;

	setp.eq.s32	%p899, %r6528, 24;
	@%p899 bra 	BB1_1366;
	bra.uni 	BB1_1347;

BB1_1366:
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r19;
	mov.u32 	%r10894, %r18;
	bra.uni 	BB1_1364;

BB1_430:
	setp.eq.s32	%p314, %r3784, 3;
	@%p314 bra 	BB1_431;
	bra.uni 	BB1_10;

BB1_431:
	and.b32  	%r3804, %r16, %r395;
	and.b32  	%r3805, %r394, %r16;
	shl.b32 	%r3806, %r3805, 1;
	and.b32  	%r3807, %r3806, %r394;
	or.b32  	%r10948, %r3807, %r3804;
	bra.uni 	BB1_637;

BB1_417:
	setp.eq.s32	%p296, %r3748, 6;
	@%p296 bra 	BB1_420;
	bra.uni 	BB1_418;

BB1_420:
	and.b32  	%r3756, %r21, %r385;
	and.b32  	%r3757, %r384, %r21;
	shr.u32 	%r3758, %r3757, 1;
	and.b32  	%r3759, %r3758, %r384;
	or.b32  	%r10943, %r3759, %r3756;
	bra.uni 	BB1_670;

BB1_949:
	and.b16  	%rs268, %rs2, 255;
	and.b16  	%rs269, %rs376, 255;
	setp.eq.s16	%p627, %rs269, %rs268;
	mov.u32 	%r10844, 1;
	@%p627 bra 	BB1_951;

	st.local.u8 	[%rd122], %rs376;
	mov.u32 	%r10844, 1;
	mov.u32 	%r10949, %r10844;

BB1_951:
	cvt.u64.u32	%rd128, %r10844;
	add.s64 	%rd129, %rd120, %rd128;
	ld.local.u8 	%rs3, [%rd129];
	and.b16  	%rs270, %rs2, 255;
	setp.eq.s16	%p628, %rs3, %rs270;
	@%p628 bra 	BB1_953;

	cvt.u64.u32	%rd130, %r10949;
	add.s64 	%rd133, %rd122, %rd130;
	st.local.u8 	[%rd133], %rs3;
	add.s32 	%r10949, %r10949, 1;

BB1_953:
	add.s32 	%r10847, %r10844, 1;
	cvt.u64.u32	%rd134, %r10847;
	add.s64 	%rd137, %rd120, %rd134;
	ld.local.u8 	%rs376, [%rd137];

BB1_954:
	and.b16  	%rs271, %rs2, 255;
	and.b16  	%rs272, %rs376, 255;
	setp.eq.s16	%p629, %rs272, %rs271;
	@%p629 bra 	BB1_956;

	cvt.u64.u32	%rd138, %r10949;
	add.s64 	%rd141, %rd122, %rd138;
	st.local.u8 	[%rd141], %rs376;
	add.s32 	%r10949, %r10949, 1;

BB1_956:
	add.s32 	%r10852, %r10847, 1;

BB1_957:
	setp.lt.u32	%p630, %r15, 4;
	@%p630 bra 	BB1_967;

BB1_958:
	cvt.u64.u32	%rd143, %r10852;
	add.s64 	%rd144, %rd120, %rd143;
	ld.local.u8 	%rs6, [%rd144];
	and.b16  	%rs273, %rs2, 255;
	setp.eq.s16	%p631, %rs6, %rs273;
	@%p631 bra 	BB1_960;

	cvt.u64.u32	%rd145, %r10949;
	add.s64 	%rd148, %rd122, %rd145;
	st.local.u8 	[%rd148], %rs6;
	add.s32 	%r10949, %r10949, 1;

BB1_960:
	add.s32 	%r4922, %r10852, 1;
	cvt.u64.u32	%rd149, %r4922;
	add.s64 	%rd150, %rd120, %rd149;
	ld.local.u8 	%rs7, [%rd150];
	setp.eq.s16	%p632, %rs7, %rs273;
	@%p632 bra 	BB1_962;

	cvt.u64.u32	%rd151, %r10949;
	add.s64 	%rd154, %rd122, %rd151;
	st.local.u8 	[%rd154], %rs7;
	add.s32 	%r10949, %r10949, 1;

BB1_962:
	add.s32 	%r4923, %r10852, 2;
	cvt.u64.u32	%rd155, %r4923;
	add.s64 	%rd156, %rd120, %rd155;
	ld.local.u8 	%rs8, [%rd156];
	setp.eq.s16	%p633, %rs8, %rs273;
	@%p633 bra 	BB1_964;

	cvt.u64.u32	%rd157, %r10949;
	add.s64 	%rd160, %rd122, %rd157;
	st.local.u8 	[%rd160], %rs8;
	add.s32 	%r10949, %r10949, 1;

BB1_964:
	add.s32 	%r4924, %r10852, 3;
	cvt.u64.u32	%rd161, %r4924;
	add.s64 	%rd162, %rd120, %rd161;
	ld.local.u8 	%rs9, [%rd162];
	setp.eq.s16	%p634, %rs9, %rs273;
	@%p634 bra 	BB1_966;

	cvt.u64.u32	%rd163, %r10949;
	add.s64 	%rd166, %rd122, %rd163;
	st.local.u8 	[%rd166], %rs9;
	add.s32 	%r10949, %r10949, 1;

BB1_966:
	add.s32 	%r10852, %r10852, 4;
	setp.lt.u32	%p635, %r10852, %r15;
	@%p635 bra 	BB1_958;

BB1_967:
	ld.local.v4.u32 	{%r10945, %r10946, %r10947, %r10948}, [%rd122];
	ld.local.v4.u32 	{%r10941, %r10942, %r10943, %r10944}, [%rd122+16];
	bra.uni 	BB1_1536;

BB1_1265:
	setp.eq.s32	%p829, %r6273, 6;
	@%p829 bra 	BB1_1269;
	bra.uni 	BB1_1266;

BB1_1269:
	and.b32  	%r6280, %r1211, %r21;
	and.b32  	%r6281, %r10943, %r1212;
	or.b32  	%r10943, %r6281, %r6280;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	bra.uni 	BB1_1271;

BB1_805:
	setp.gt.s32	%p559, %r25, 13;
	@%p559 bra 	BB1_809;

	setp.eq.s32	%p562, %r25, 12;
	@%p562 bra 	BB1_855;
	bra.uni 	BB1_807;

BB1_855:
	mov.u32 	%r10945, 0;
	mov.u32 	%r10941, %r18;
	mov.u32 	%r10942, %r17;
	mov.u32 	%r10943, %r16;
	mov.u32 	%r20, %r23;
	mov.u32 	%r10946, %r10945;
	mov.u32 	%r10947, %r10945;
	mov.u32 	%r16, %r19;
	bra.uni 	BB1_865;

BB1_1283:
	setp.eq.s32	%p859, %r6375, 6;
	@%p859 bra 	BB1_1286;
	bra.uni 	BB1_1284;

BB1_1286:
	and.b32  	%r10943, %r10943, %r1256;
	bra.uni 	BB1_1535;

BB1_402:
	setp.ne.s32	%p285, %r3712, 7;
	@%p285 bra 	BB1_10;

	and.b32  	%r3716, %r20, %r374;
	and.b32  	%r3717, %r373, %r20;
	add.s32 	%r3718, %r3717, %r375;
	and.b32  	%r3719, %r3718, %r373;
	or.b32  	%r10944, %r3719, %r3716;
	bra.uni 	BB1_678;

BB1_1102:
	setp.gt.s32	%p712, %r27, 29;
	@%p712 bra 	BB1_1106;

	setp.eq.s32	%p715, %r27, 28;
	@%p715 bra 	BB1_1111;
	bra.uni 	BB1_1104;

BB1_1111:
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r20;
	mov.u32 	%r10946, %r10944;

BB1_1112:
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	bra.uni 	BB1_1127;

BB1_1009:
	setp.ne.s32	%p684, %r5014, 7;
	@%p684 bra 	BB1_777;

	and.b32  	%r5019, %r20, %r915;
	or.b32  	%r10944, %r5019, %r914;

BB1_1011:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	bra.uni 	BB1_14;

BB1_777:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;

BB1_656:
	mov.u32 	%r10943, %r21;

BB1_657:
	mov.u32 	%r10944, %r20;

BB1_658:
	mov.u32 	%r10945, %r19;

BB1_659:
	mov.u32 	%r10946, %r18;

BB1_660:
	mov.u32 	%r10947, %r17;

BB1_661:
	mov.u32 	%r10948, %r16;
	bra.uni 	BB1_1535;

BB1_500:
	setp.gt.s32	%p323, %r25, 29;
	@%p323 bra 	BB1_504;

	setp.eq.s32	%p326, %r25, 28;
	@%p326 bra 	BB1_508;
	bra.uni 	BB1_502;

BB1_508:
	and.b32  	%r10816, %r20, 255;
	bra.uni 	BB1_523;

BB1_1428:
	setp.ne.s32	%p965, %r7474, 7;
	mov.u32 	%r10926, %r10925;
	mov.u32 	%r10927, %r10925;
	mov.u32 	%r10928, %r10925;
	mov.u32 	%r10929, %r10925;
	mov.u32 	%r10930, %r10925;
	mov.u32 	%r10931, %r10925;
	mov.u32 	%r10932, %r10925;
	@%p965 bra 	BB1_1434;

	mov.u32 	%r10925, 0;
	// inline asm
	prmt.b32 %r10932, %r10925, %r19, %r1534;
	// inline asm
	mov.u32 	%r10926, %r10925;
	mov.u32 	%r10927, %r10925;
	mov.u32 	%r10928, %r10925;
	mov.u32 	%r10929, %r10925;
	mov.u32 	%r10930, %r10925;
	mov.u32 	%r10931, %r10925;

BB1_1434:
	or.b32  	%r10945, %r10925, %r19;
	or.b32  	%r10946, %r10926, %r18;
	or.b32  	%r10947, %r10927, %r17;
	or.b32  	%r10948, %r10928, %r16;
	or.b32  	%r10941, %r10929, %r23;
	or.b32  	%r10942, %r10930, %r22;
	or.b32  	%r10943, %r10931, %r21;
	or.b32  	%r10944, %r10932, %r20;
	bra.uni 	BB1_1536;

BB1_437:
	setp.ne.s32	%p309, %r3784, 7;
	@%p309 bra 	BB1_10;

	and.b32  	%r3788, %r20, %r395;
	and.b32  	%r3789, %r394, %r20;
	shl.b32 	%r3790, %r3789, 1;
	and.b32  	%r3791, %r3790, %r394;
	or.b32  	%r10944, %r3791, %r3788;
	bra.uni 	BB1_678;

BB1_837:
	setp.gt.s32	%p536, %r25, 29;
	@%p536 bra 	BB1_841;

	setp.eq.s32	%p539, %r25, 28;
	@%p539 bra 	BB1_844;
	bra.uni 	BB1_839;

BB1_844:
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r20, %r19;
	bra.uni 	BB1_864;

BB1_973:
	setp.eq.s32	%p679, %r4981, 1;
	@%p679 bra 	BB1_989;
	bra.uni 	BB1_974;

BB1_989:
	and.b32  	%r10946, %r905, %r18;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10945, %r19;

BB1_990:
	mov.u32 	%r10947, %r10941;

BB1_991:
	mov.u32 	%r10948, %r10941;
	mov.u32 	%r10949, %r25;
	bra.uni 	BB1_1536;

BB1_697:
	setp.gt.s32	%p497, %r15, 6;
	@%p497 bra 	BB1_701;

	setp.eq.s32	%p500, %r15, 5;
	@%p500 bra 	BB1_773;
	bra.uni 	BB1_699;

BB1_773:
	or.b32  	%r4056, %r18, %r19;
	and.b32  	%r4057, %r19, 16777215;
	prmt.b32 	%r10945, %r18, %r4057, 1620;
	shr.u32 	%r10946, %r4056, 24;
	mov.u32 	%r10949, 5;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_759;

BB1_353:
	setp.eq.s32	%p268, %r3652, 1;
	@%p268 bra 	BB1_354;
	bra.uni 	BB1_10;

BB1_354:
	and.b32  	%r3672, %r18, %r353;
	and.b32  	%r3673, %r3628, %r352;
	or.b32  	%r10946, %r3673, %r3672;
	bra.uni 	BB1_620;

BB1_140:
	setp.gt.s32	%p163, %r25, 5;
	@%p163 bra 	BB1_144;

	setp.eq.s32	%p166, %r25, 4;
	@%p166 bra 	BB1_211;
	bra.uni 	BB1_142;

BB1_211:
	mov.u32 	%r10784, %r16;
	mov.u32 	%r10785, %r23;
	mov.u32 	%r10786, %r22;
	mov.u32 	%r10787, %r21;
	mov.u32 	%r10789, %r19;
	mov.u32 	%r10790, %r18;
	mov.u32 	%r10791, %r17;
	bra.uni 	BB1_213;

BB1_234:
	setp.eq.s32	%p197, %r2994, 1;
	mov.u32 	%r10800, %r23;
	mov.u32 	%r10801, %r22;
	mov.u32 	%r10802, %r21;
	mov.u32 	%r10803, %r20;
	mov.u32 	%r10804, %r19;
	mov.u32 	%r10805, %r18;
	mov.u32 	%r10806, %r17;
	mov.u32 	%r10807, %r16;
	@%p197 bra 	BB1_235;
	bra.uni 	BB1_251;

BB1_235:
	and.b32  	%r10805, %r187, %r18;
	mov.u32 	%r10800, 0;
	mov.u32 	%r10801, %r10800;
	mov.u32 	%r10802, %r10800;
	mov.u32 	%r10803, %r10800;
	mov.u32 	%r10804, %r19;

BB1_123:
	mov.u32 	%r10806, %r10800;

BB1_250:
	mov.u32 	%r10807, %r10800;
	bra.uni 	BB1_251;

BB1_1185:
	setp.eq.s32	%p790, %r25, 18;
	@%p790 bra 	BB1_1219;
	bra.uni 	BB1_1186;

BB1_1219:
	mov.u32 	%r5832, 16;
	// inline asm
	shf.r.wrap.b32 %r10945, %r23, %r22, %r5832;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r22, %r21, %r5832;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r21, %r20, %r5832;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r20, %r20, %r10941, %r5832;
	// inline asm
	bra.uni 	BB1_1218;

BB1_1465:
	setp.eq.s32	%p993, %r7653, 18;
	@%p993 bra 	BB1_1496;
	bra.uni 	BB1_1466;

BB1_1496:
	mov.u32 	%r7823, 16;
	// inline asm
	shf.r.wrap.b32 %r23, %r17, %r16, %r7823;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r18, %r17, %r7823;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r19, %r18, %r7823;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r10933, %r10937, %r19, %r7823;
	// inline asm
	bra.uni 	BB1_1498;

BB1_1169:
	setp.eq.s32	%p802, %r25, 10;
	@%p802 bra 	BB1_1223;
	bra.uni 	BB1_1170;

BB1_1223:
	mov.u32 	%r5982, 16;
	// inline asm
	shf.r.wrap.b32 %r10945, %r17, %r16, %r5982;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r16, %r23, %r5982;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r23, %r22, %r5982;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5971, %r22, %r21, %r5982;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r21, %r20, %r5982;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r20, %r10943, %r5982;
	// inline asm
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r20, %r5971;
	bra.uni 	BB1_1234;

BB1_980:
	setp.eq.s32	%p674, %r4981, 5;
	@%p674 bra 	BB1_981;
	bra.uni 	BB1_974;

BB1_981:
	and.b32  	%r10942, %r905, %r22;
	mov.u32 	%r10943, 0;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10944, %r10943;
	bra.uni 	BB1_985;

BB1_725:
	setp.gt.s32	%p476, %r15, 21;
	@%p476 bra 	BB1_729;

	setp.eq.s32	%p479, %r15, 20;
	@%p479 bra 	BB1_760;
	bra.uni 	BB1_727;

BB1_760:
	and.b32  	%r3975, %r23, 65535;
	shl.b32 	%r3976, %r23, 8;
	and.b32  	%r3977, %r3976, -16777216;
	or.b32  	%r3978, %r3977, %r3975;
	shr.u32 	%r3979, %r23, 8;
	and.b32  	%r3980, %r3979, 16711680;
	or.b32  	%r10941, %r3978, %r3980;
	mov.u32 	%r10949, 20;
	bra.uni 	BB1_762;

BB1_1449:
	setp.eq.s32	%p1005, %r7653, 10;
	@%p1005 bra 	BB1_1503;
	bra.uni 	BB1_1450;

BB1_1503:
	mov.u32 	%r7973, 16;
	// inline asm
	shf.r.wrap.b32 %r7950, %r23, %r22, %r7973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r16, %r23, %r7973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r17, %r16, %r7973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r18, %r17, %r7973;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r7966, %r19, %r18, %r7973;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r10939, %r10937, %r19, %r7973;
	// inline asm
	mov.u32 	%r23, %r7950;
	mov.u32 	%r10938, %r10937;
	mov.u32 	%r19, %r7966;
	bra.uni 	BB1_1511;

BB1_360:
	setp.eq.s32	%p263, %r3652, 5;
	@%p263 bra 	BB1_361;
	bra.uni 	BB1_10;

BB1_361:
	and.b32  	%r3664, %r22, %r353;
	and.b32  	%r3665, %r3644, %r352;
	or.b32  	%r10942, %r3665, %r3664;
	bra.uni 	BB1_655;

BB1_172:
	setp.gt.s32	%p140, %r25, 21;
	@%p140 bra 	BB1_176;

	setp.eq.s32	%p143, %r25, 20;
	@%p143 bra 	BB1_203;
	bra.uni 	BB1_174;

BB1_203:
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r19;
	mov.u32 	%r10786, %r18;
	mov.u32 	%r10787, %r17;
	bra.uni 	BB1_199;

BB1_241:
	setp.eq.s32	%p192, %r2994, 5;
	mov.u32 	%r10800, %r23;
	mov.u32 	%r10801, %r22;
	mov.u32 	%r10802, %r21;
	mov.u32 	%r10803, %r20;
	mov.u32 	%r10804, %r19;
	mov.u32 	%r10805, %r18;
	mov.u32 	%r10806, %r17;
	mov.u32 	%r10807, %r16;
	@%p192 bra 	BB1_242;
	bra.uni 	BB1_251;

BB1_242:
	and.b32  	%r10801, %r187, %r22;
	mov.u32 	%r10802, 0;
	mov.u32 	%r10800, %r23;
	mov.u32 	%r10803, %r10802;
	bra.uni 	BB1_246;

BB1_1201:
	setp.eq.s32	%p779, %r25, 26;
	@%p779 bra 	BB1_1213;
	bra.uni 	BB1_1202;

BB1_1213:
	mov.u32 	%r5714, 16;
	// inline asm
	shf.r.wrap.b32 %r10945, %r21, %r20, %r5714;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r20, %r10941, %r5714;
	// inline asm
	bra.uni 	BB1_1204;

BB1_1480:
	setp.eq.s32	%p982, %r7653, 26;
	@%p982 bra 	BB1_1492;
	bra.uni 	BB1_1481;

BB1_1492:
	mov.u32 	%r7705, 16;
	// inline asm
	shf.r.wrap.b32 %r23, %r19, %r18, %r7705;
	// inline asm
	mov.u32 	%r10933, 0;
	// inline asm
	shf.r.wrap.b32 %r10935, %r10933, %r19, %r7705;
	// inline asm
	bra.uni 	BB1_1483;

BB1_1161:
	setp.eq.s32	%p808, %r25, 6;
	@%p808 bra 	BB1_1225;
	bra.uni 	BB1_1162;

BB1_1225:
	mov.u32 	%r6069, 16;
	// inline asm
	shf.r.wrap.b32 %r10945, %r18, %r17, %r6069;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r17, %r16, %r6069;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r16, %r23, %r6069;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6054, %r23, %r22, %r6069;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r22, %r21, %r6069;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r21, %r20, %r6069;
	// inline asm
	mov.u32 	%r10944, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r20, %r10944, %r6069;
	// inline asm
	mov.u32 	%r20, %r6054;
	bra.uni 	BB1_1234;

BB1_976:
	setp.eq.s32	%p677, %r4981, 3;
	@%p677 bra 	BB1_977;
	bra.uni 	BB1_974;

BB1_977:
	and.b32  	%r10948, %r905, %r16;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	mov.u32 	%r10949, %r25;
	bra.uni 	BB1_1536;

BB1_712:
	setp.gt.s32	%p486, %r15, 14;
	@%p486 bra 	BB1_716;

	setp.eq.s32	%p489, %r15, 13;
	@%p489 bra 	BB1_767;
	bra.uni 	BB1_714;

BB1_767:
	or.b32  	%r4014, %r16, %r17;
	and.b32  	%r4015, %r17, 16777215;
	prmt.b32 	%r10947, %r16, %r4015, 1620;
	shr.u32 	%r10948, %r4014, 24;
	mov.u32 	%r10949, 13;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	bra.uni 	BB1_1536;

BB1_1441:
	setp.eq.s32	%p1011, %r7653, 6;
	@%p1011 bra 	BB1_1505;
	bra.uni 	BB1_1442;

BB1_1505:
	mov.u32 	%r8060, 16;
	// inline asm
	shf.r.wrap.b32 %r8033, %r22, %r21, %r8060;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r23, %r22, %r8060;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r16, %r23, %r8060;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r17, %r16, %r8060;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8049, %r18, %r17, %r8060;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10939, %r19, %r18, %r8060;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r10938, %r10937, %r19, %r8060;
	// inline asm
	mov.u32 	%r23, %r8033;
	mov.u32 	%r19, %r8049;
	bra.uni 	BB1_1511;

BB1_356:
	setp.eq.s32	%p266, %r3652, 3;
	@%p266 bra 	BB1_357;
	bra.uni 	BB1_10;

BB1_357:
	and.b32  	%r3668, %r16, %r353;
	and.b32  	%r3669, %r3636, %r352;
	or.b32  	%r10948, %r3669, %r3668;
	bra.uni 	BB1_637;

BB1_155:
	setp.gt.s32	%p152, %r25, 13;
	@%p152 bra 	BB1_159;

	setp.eq.s32	%p155, %r25, 12;
	@%p155 bra 	BB1_207;
	bra.uni 	BB1_157;

BB1_207:
	mov.u32 	%r10784, %r18;
	mov.u32 	%r10785, %r17;
	mov.u32 	%r10786, %r16;
	mov.u32 	%r10787, %r23;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r19;
	bra.uni 	BB1_213;

BB1_237:
	setp.eq.s32	%p195, %r2994, 3;
	mov.u32 	%r10800, %r23;
	mov.u32 	%r10801, %r22;
	mov.u32 	%r10802, %r21;
	mov.u32 	%r10803, %r20;
	mov.u32 	%r10804, %r19;
	mov.u32 	%r10805, %r18;
	mov.u32 	%r10806, %r17;
	mov.u32 	%r10807, %r16;
	@%p195 bra 	BB1_238;
	bra.uni 	BB1_251;

BB1_238:
	and.b32  	%r10807, %r187, %r16;
	mov.u32 	%r10800, 0;
	mov.u32 	%r10801, %r10800;
	mov.u32 	%r10802, %r10800;
	mov.u32 	%r10803, %r10800;
	mov.u32 	%r10804, %r19;
	mov.u32 	%r10805, %r18;
	mov.u32 	%r10806, %r17;
	bra.uni 	BB1_251;

BB1_1192:
	setp.eq.s32	%p785, %r25, 22;
	@%p785 bra 	BB1_1215;
	bra.uni 	BB1_1193;

BB1_1215:
	mov.u32 	%r5769, 16;
	// inline asm
	shf.r.wrap.b32 %r10945, %r22, %r21, %r5769;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r21, %r20, %r5769;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r20, %r10941, %r5769;
	// inline asm
	bra.uni 	BB1_1195;

BB1_1472:
	setp.eq.s32	%p988, %r7653, 22;
	@%p988 bra 	BB1_1494;
	bra.uni 	BB1_1473;

BB1_1494:
	mov.u32 	%r7760, 16;
	// inline asm
	shf.r.wrap.b32 %r23, %r18, %r17, %r7760;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r19, %r18, %r7760;
	// inline asm
	mov.u32 	%r10933, 0;
	// inline asm
	shf.r.wrap.b32 %r10934, %r10933, %r19, %r7760;
	// inline asm
	bra.uni 	BB1_1510;

BB1_1176:
	setp.eq.s32	%p797, %r25, 14;
	@%p797 bra 	BB1_1221;
	bra.uni 	BB1_1177;

BB1_1221:
	mov.u32 	%r5903, 16;
	// inline asm
	shf.r.wrap.b32 %r10945, %r16, %r23, %r5903;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r23, %r22, %r5903;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r22, %r21, %r5903;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5896, %r21, %r20, %r5903;
	// inline asm
	mov.u32 	%r10942, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r20, %r10942, %r5903;
	// inline asm
	mov.u32 	%r10943, %r10942;
	mov.u32 	%r10944, %r10942;
	mov.u32 	%r20, %r5896;
	bra.uni 	BB1_1234;

BB1_983:
	setp.ne.s32	%p672, %r4981, 7;
	@%p672 bra 	BB1_974;

	and.b32  	%r10944, %r905, %r20;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	bra.uni 	BB1_985;

BB1_974:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;

BB1_985:
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	mov.u32 	%r10948, %r16;
	mov.u32 	%r10949, %r25;
	bra.uni 	BB1_1536;

BB1_740:
	setp.gt.s32	%p465, %r15, 29;
	@%p465 bra 	BB1_744;

	setp.eq.s32	%p468, %r15, 28;
	@%p468 bra 	BB1_749;
	bra.uni 	BB1_742;

BB1_749:
	and.b32  	%r3933, %r21, 65535;
	shl.b32 	%r3934, %r21, 8;
	and.b32  	%r3935, %r3934, -16777216;
	or.b32  	%r3936, %r3935, %r3933;
	shr.u32 	%r3937, %r21, 8;
	and.b32  	%r3938, %r3937, 16711680;
	or.b32  	%r10943, %r3936, %r3938;
	mov.u32 	%r10949, 28;
	bra.uni 	BB1_751;

BB1_1456:
	setp.eq.s32	%p1000, %r7653, 14;
	@%p1000 bra 	BB1_1500;
	bra.uni 	BB1_1457;

BB1_1500:
	mov.u32 	%r7894, 16;
	// inline asm
	shf.r.wrap.b32 %r23, %r16, %r23, %r7894;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r17, %r16, %r7894;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r18, %r17, %r7894;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r19, %r18, %r7894;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r19, %r10937, %r19, %r7894;
	// inline asm
	bra.uni 	BB1_1502;

BB1_363:
	setp.ne.s32	%p261, %r3652, 7;
	@%p261 bra 	BB1_10;

	mov.u32 	%r3658, 0;
	// inline asm
	shf.r.wrap.b32 %r3656, %r20, %r3658, %r3651;
	// inline asm
	and.b32  	%r3660, %r3656, %r352;
	and.b32  	%r3661, %r20, %r353;
	or.b32  	%r10944, %r3660, %r3661;
	bra.uni 	BB1_678;

BB1_189:
	setp.gt.s32	%p129, %r25, 29;
	@%p129 bra 	BB1_193;

	setp.eq.s32	%p132, %r25, 28;
	@%p132 bra 	BB1_198;
	bra.uni 	BB1_191;

BB1_198:
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r19;
	bra.uni 	BB1_199;

BB1_244:
	setp.ne.s32	%p190, %r2994, 7;
	mov.u32 	%r10800, %r23;
	mov.u32 	%r10801, %r22;
	mov.u32 	%r10802, %r21;
	mov.u32 	%r10803, %r20;
	mov.u32 	%r10804, %r19;
	mov.u32 	%r10805, %r18;
	mov.u32 	%r10806, %r17;
	mov.u32 	%r10807, %r16;
	@%p190 bra 	BB1_251;

	and.b32  	%r10803, %r187, %r20;
	mov.u32 	%r10800, %r23;
	mov.u32 	%r10801, %r22;
	mov.u32 	%r10802, %r21;

BB1_246:
	mov.u32 	%r10804, %r19;
	mov.u32 	%r10805, %r18;
	mov.u32 	%r10806, %r17;
	mov.u32 	%r10807, %r16;

BB1_251:
	setp.gt.s32	%p198, %r25, 15;
	@%p198 bra 	BB1_280;

	setp.gt.s32	%p222, %r25, 7;
	@%p222 bra 	BB1_265;

	setp.gt.s32	%p234, %r25, 3;
	@%p234 bra 	BB1_258;

	setp.eq.s32	%p240, %r25, 1;
	@%p240 bra 	BB1_329;

	setp.eq.s32	%p241, %r25, 2;
	@%p241 bra 	BB1_328;
	bra.uni 	BB1_256;

BB1_328:
	mov.u32 	%r3527, 16;
	// inline asm
	shf.r.wrap.b32 %r3496, %r21, %r20, %r3527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r22, %r21, %r3527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r23, %r22, %r3527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r16, %r23, %r3527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3512, %r17, %r16, %r3527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10814, %r18, %r17, %r3527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10813, %r19, %r18, %r3527;
	// inline asm
	mov.u32 	%r3525, 0;
	// inline asm
	shf.r.wrap.b32 %r10812, %r3525, %r19, %r3527;
	// inline asm
	mov.u32 	%r23, %r3496;
	mov.u32 	%r19, %r3512;
	bra.uni 	BB1_333;

BB1_280:
	setp.gt.s32	%p199, %r25, 23;
	@%p199 bra 	BB1_296;

	setp.gt.s32	%p211, %r25, 19;
	@%p211 bra 	BB1_289;

	setp.gt.s32	%p217, %r25, 17;
	@%p217 bra 	BB1_286;

	setp.eq.s32	%p220, %r25, 16;
	@%p220 bra 	BB1_318;
	bra.uni 	BB1_284;

BB1_318:
	mov.u32 	%r10812, 0;
	mov.u32 	%r10808, %r19;
	mov.u32 	%r10809, %r18;
	mov.u32 	%r10810, %r17;
	mov.u32 	%r23, %r16;
	bra.uni 	BB1_319;

BB1_265:
	setp.gt.s32	%p223, %r25, 11;
	@%p223 bra 	BB1_273;

	setp.gt.s32	%p229, %r25, 9;
	@%p229 bra 	BB1_270;

	setp.eq.s32	%p232, %r25, 8;
	@%p232 bra 	BB1_325;
	bra.uni 	BB1_268;

BB1_325:
	mov.u32 	%r10812, 0;
	mov.u32 	%r10808, %r17;
	mov.u32 	%r10809, %r16;
	mov.u32 	%r10810, %r23;
	mov.u32 	%r23, %r22;
	mov.u32 	%r10813, %r10812;
	mov.u32 	%r10814, %r19;
	mov.u32 	%r19, %r18;
	bra.uni 	BB1_333;

BB1_296:
	setp.gt.s32	%p200, %r25, 27;
	@%p200 bra 	BB1_305;

	setp.gt.s32	%p206, %r25, 25;
	@%p206 bra 	BB1_301;

	setp.eq.s32	%p209, %r25, 24;
	@%p209 bra 	BB1_314;
	bra.uni 	BB1_299;

BB1_314:
	mov.u32 	%r10808, 0;
	mov.u32 	%r10809, %r10808;
	mov.u32 	%r10810, %r19;
	mov.u32 	%r23, %r18;
	bra.uni 	BB1_332;

BB1_1209:
	setp.eq.s32	%p774, %r25, 31;
	@%p774 bra 	BB1_1229;
	bra.uni 	BB1_1210;

BB1_1229:
	mov.u32 	%r10941, 0;
	mov.u32 	%r6200, 24;
	// inline asm
	shf.r.wrap.b32 %r10945, %r20, %r10941, %r6200;
	// inline asm
	bra.uni 	BB1_1230;

BB1_1488:
	setp.eq.s32	%p977, %r7653, 31;
	@%p977 bra 	BB1_1508;
	bra.uni 	BB1_1489;

BB1_1508:
	mov.u32 	%r10933, 0;
	mov.u32 	%r8191, 8;
	// inline asm
	shf.r.wrap.b32 %r23, %r10933, %r19, %r8191;
	// inline asm
	bra.uni 	BB1_1509;

BB1_258:
	setp.gt.s32	%p235, %r25, 5;
	@%p235 bra 	BB1_262;

	setp.eq.s32	%p238, %r25, 4;
	@%p238 bra 	BB1_327;
	bra.uni 	BB1_260;

BB1_327:
	mov.u32 	%r10812, 0;
	mov.u32 	%r10808, %r16;
	mov.u32 	%r10809, %r23;
	mov.u32 	%r10810, %r22;
	mov.u32 	%r23, %r21;
	mov.u32 	%r10813, %r19;
	mov.u32 	%r10814, %r18;
	mov.u32 	%r19, %r17;
	bra.uni 	BB1_333;

BB1_289:
	setp.gt.s32	%p212, %r25, 21;
	@%p212 bra 	BB1_293;

	setp.eq.s32	%p215, %r25, 20;
	@%p215 bra 	BB1_316;
	bra.uni 	BB1_291;

BB1_316:
	mov.u32 	%r10808, 0;
	mov.u32 	%r10809, %r19;
	mov.u32 	%r10810, %r18;
	mov.u32 	%r23, %r17;
	bra.uni 	BB1_332;

BB1_273:
	setp.gt.s32	%p224, %r25, 13;
	@%p224 bra 	BB1_277;

	setp.eq.s32	%p227, %r25, 12;
	@%p227 bra 	BB1_322;
	bra.uni 	BB1_275;

BB1_322:
	mov.u32 	%r10812, 0;
	mov.u32 	%r10808, %r18;
	mov.u32 	%r10809, %r17;
	mov.u32 	%r10810, %r16;
	bra.uni 	BB1_323;

BB1_305:
	setp.gt.s32	%p201, %r25, 29;
	@%p201 bra 	BB1_309;

	setp.eq.s32	%p204, %r25, 28;
	@%p204 bra 	BB1_312;
	bra.uni 	BB1_307;

BB1_312:
	mov.u32 	%r10808, 0;
	mov.u32 	%r10809, %r10808;
	mov.u32 	%r10810, %r10808;
	mov.u32 	%r23, %r19;
	bra.uni 	BB1_332;

BB1_1228:
	mov.u32 	%r6196, 8;
	// inline asm
	shf.r.wrap.b32 %r10945, %r19, %r18, %r6196;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r18, %r17, %r6196;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r17, %r16, %r6196;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6177, %r16, %r23, %r6196;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r23, %r22, %r6196;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r22, %r21, %r6196;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r21, %r20, %r6196;
	// inline asm
	mov.u32 	%r6195, 0;
	// inline asm
	shf.r.wrap.b32 %r10944, %r20, %r6195, %r6196;
	// inline asm
	mov.u32 	%r20, %r6177;
	bra.uni 	BB1_1234;

BB1_1155:
	setp.eq.s32	%p814, %r25, 3;
	@%p814 bra 	BB1_1156;
	bra.uni 	BB1_1187;

BB1_1156:
	mov.u32 	%r6132, 24;
	// inline asm
	shf.r.wrap.b32 %r10945, %r19, %r18, %r6132;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r18, %r17, %r6132;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r17, %r16, %r6132;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6113, %r16, %r23, %r6132;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r23, %r22, %r6132;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r22, %r21, %r6132;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r21, %r20, %r6132;
	// inline asm
	mov.u32 	%r6131, 0;
	// inline asm
	shf.r.wrap.b32 %r10944, %r20, %r6131, %r6132;
	// inline asm
	mov.u32 	%r20, %r6113;
	bra.uni 	BB1_1234;

BB1_1048:
	setp.eq.s32	%p752, %r27, 2;
	@%p752 bra 	BB1_1125;
	bra.uni 	BB1_1049;

BB1_1125:
	mov.u32 	%r5609, 16;
	// inline asm
	shf.r.wrap.b32 %r10863, %r19, %r18, %r5609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r18, %r17, %r5609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r17, %r16, %r5609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r16, %r23, %r5609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r23, %r22, %r5609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r22, %r21, %r5609;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r21, %r20, %r5609;
	// inline asm
	mov.u32 	%r5608, 0;
	// inline asm
	shf.r.wrap.b32 %r10944, %r20, %r5608, %r5609;
	// inline asm
	bra.uni 	BB1_1127;

BB1_1507:
	mov.u32 	%r8187, 24;
	// inline asm
	shf.r.wrap.b32 %r8156, %r21, %r20, %r8187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r22, %r21, %r8187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r23, %r22, %r8187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r16, %r23, %r8187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8172, %r17, %r16, %r8187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10939, %r18, %r17, %r8187;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10938, %r19, %r18, %r8187;
	// inline asm
	mov.u32 	%r8185, 0;
	// inline asm
	shf.r.wrap.b32 %r10937, %r8185, %r19, %r8187;
	// inline asm
	mov.u32 	%r23, %r8156;
	mov.u32 	%r19, %r8172;
	bra.uni 	BB1_1511;

BB1_1435:
	setp.eq.s32	%p1017, %r7653, 3;
	@%p1017 bra 	BB1_1436;
	bra.uni 	BB1_1458;

BB1_1436:
	mov.u32 	%r8123, 8;
	// inline asm
	shf.r.wrap.b32 %r8092, %r21, %r20, %r8123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r22, %r21, %r8123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r23, %r22, %r8123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r16, %r23, %r8123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8108, %r17, %r16, %r8123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10939, %r18, %r17, %r8123;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10938, %r19, %r18, %r8123;
	// inline asm
	mov.u32 	%r8121, 0;
	// inline asm
	shf.r.wrap.b32 %r10937, %r8121, %r19, %r8123;
	// inline asm
	mov.u32 	%r23, %r8092;
	mov.u32 	%r19, %r8108;
	bra.uni 	BB1_1511;

BB1_451:
	setp.eq.s32	%p363, %r25, 2;
	@%p363 bra 	BB1_521;
	bra.uni 	BB1_452;

BB1_521:
	bfe.u32 	%r10816, %r19, 16, 8;
	bra.uni 	BB1_523;

BB1_337:
	setp.eq.s32	%p256, %r3599, 1;
	@%p256 bra 	BB1_338;
	bra.uni 	BB1_10;

BB1_338:
	and.b32  	%r3615, %r18, %r336;
	and.b32  	%r3616, %r3595, %r335;
	or.b32  	%r10946, %r3616, %r3615;
	bra.uni 	BB1_620;

BB1_1304:
	setp.gt.s32	%p925, %r6528, 5;
	@%p925 bra 	BB1_1308;

	setp.eq.s32	%p928, %r6528, 4;
	@%p928 bra 	BB1_1376;
	bra.uni 	BB1_1306;

BB1_1376:
	mov.u32 	%r10891, %r16;
	mov.u32 	%r10892, %r23;
	mov.u32 	%r10893, %r22;
	mov.u32 	%r10894, %r21;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r19;
	mov.u32 	%r10897, %r18;
	mov.u32 	%r10898, %r17;
	bra.uni 	BB1_1378;

BB1_408:
	setp.eq.s32	%p304, %r3748, 1;
	@%p304 bra 	BB1_409;
	bra.uni 	BB1_10;

BB1_409:
	and.b32  	%r3776, %r18, %r385;
	and.b32  	%r3777, %r384, %r18;
	shr.u32 	%r3778, %r3777, 1;
	and.b32  	%r3779, %r3778, %r384;
	or.b32  	%r10946, %r3779, %r3776;
	bra.uni 	BB1_620;

BB1_1256:
	setp.eq.s32	%p837, %r6273, 1;
	@%p837 bra 	BB1_1257;
	bra.uni 	BB1_1267;

BB1_1257:
	and.b32  	%r6290, %r1211, %r18;
	and.b32  	%r6291, %r10946, %r1212;
	or.b32  	%r10946, %r6291, %r6290;
	mov.u32 	%r10945, %r19;
	bra.uni 	BB1_1273;

BB1_131:
	setp.eq.s32	%p867, %r6375, 1;
	@%p867 bra 	BB1_1289;
	bra.uni 	BB1_132;

BB1_1289:
	and.b32  	%r10946, %r10946, %r1256;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;

BB1_1290:
	mov.u32 	%r10947, %r10941;

BB1_1291:
	mov.u32 	%r10948, %r10941;
	bra.uni 	BB1_1535;

BB1_1080:
	setp.eq.s32	%p729, %r27, 18;
	@%p729 bra 	BB1_1117;
	bra.uni 	BB1_1081;

BB1_1117:
	mov.u32 	%r5277, 16;
	// inline asm
	shf.r.wrap.b32 %r10863, %r23, %r22, %r5277;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r22, %r21, %r5277;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r21, %r20, %r5277;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10948, %r20, %r10941, %r5277;
	// inline asm
	bra.uni 	BB1_1083;

BB1_482:
	setp.eq.s32	%p340, %r25, 18;
	@%p340 bra 	BB1_513;
	bra.uni 	BB1_483;

BB1_513:
	bfe.u32 	%r10816, %r23, 16, 8;
	bra.uni 	BB1_523;

BB1_818:
	setp.eq.s32	%p553, %r25, 18;
	@%p553 bra 	BB1_849;
	bra.uni 	BB1_819;

BB1_849:
	mov.u32 	%r4319, 16;
	// inline asm
	shf.r.wrap.b32 %r20, %r17, %r16, %r4319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r18, %r17, %r4319;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r19, %r18, %r4319;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r10945, %r19, %r4319;
	// inline asm
	bra.uni 	BB1_851;

BB1_1063:
	setp.eq.s32	%p741, %r27, 10;
	@%p741 bra 	BB1_1121;
	bra.uni 	BB1_1064;

BB1_1121:
	mov.u32 	%r5427, 16;
	// inline asm
	shf.r.wrap.b32 %r10863, %r17, %r16, %r5427;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r16, %r23, %r5427;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r23, %r22, %r5427;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r22, %r21, %r5427;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r21, %r20, %r5427;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r20, %r10943, %r5427;
	// inline asm
	mov.u32 	%r10944, %r10943;
	bra.uni 	BB1_1127;

BB1_466:
	setp.eq.s32	%p352, %r25, 10;
	@%p352 bra 	BB1_517;
	bra.uni 	BB1_467;

BB1_517:
	bfe.u32 	%r10816, %r17, 16, 8;
	bra.uni 	BB1_523;

BB1_344:
	setp.eq.s32	%p251, %r3599, 5;
	@%p251 bra 	BB1_345;
	bra.uni 	BB1_10;

BB1_345:
	and.b32  	%r3607, %r22, %r336;
	and.b32  	%r3608, %r3579, %r335;
	or.b32  	%r10942, %r3608, %r3607;
	bra.uni 	BB1_655;

BB1_1337:
	setp.gt.s32	%p902, %r6528, 21;
	@%p902 bra 	BB1_1341;

	setp.eq.s32	%p905, %r6528, 20;
	@%p905 bra 	BB1_1368;
	bra.uni 	BB1_1339;

BB1_1368:
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r19;
	mov.u32 	%r10893, %r18;
	mov.u32 	%r10894, %r17;
	bra.uni 	BB1_1364;

BB1_415:
	setp.eq.s32	%p299, %r3748, 5;
	@%p299 bra 	BB1_416;
	bra.uni 	BB1_10;

BB1_416:
	and.b32  	%r3760, %r22, %r385;
	and.b32  	%r3761, %r384, %r22;
	shr.u32 	%r3762, %r3761, 1;
	and.b32  	%r3763, %r3762, %r384;
	or.b32  	%r10942, %r3763, %r3760;
	bra.uni 	BB1_655;

BB1_1263:
	setp.eq.s32	%p832, %r6273, 5;
	@%p832 bra 	BB1_1264;
	bra.uni 	BB1_1267;

BB1_1264:
	and.b32  	%r6282, %r1211, %r22;
	and.b32  	%r6283, %r10942, %r1212;
	or.b32  	%r10942, %r6283, %r6282;
	mov.u32 	%r10941, %r23;
	bra.uni 	BB1_1271;

BB1_802:
	setp.eq.s32	%p565, %r25, 10;
	@%p565 bra 	BB1_856;
	bra.uni 	BB1_803;

BB1_856:
	mov.u32 	%r4469, 16;
	// inline asm
	shf.r.wrap.b32 %r20, %r23, %r22, %r4469;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r16, %r23, %r4469;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r17, %r16, %r4469;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r18, %r17, %r4469;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r16, %r19, %r18, %r4469;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r10945, %r19, %r4469;
	// inline asm
	mov.u32 	%r10946, %r10945;
	bra.uni 	BB1_865;

BB1_1281:
	setp.eq.s32	%p862, %r6375, 5;
	@%p862 bra 	BB1_1282;
	bra.uni 	BB1_132;

BB1_1282:
	and.b32  	%r10942, %r10942, %r1256;
	mov.u32 	%r10943, 0;
	mov.u32 	%r10944, %r10943;
	bra.uni 	BB1_1535;

BB1_1097:
	setp.eq.s32	%p718, %r27, 26;
	@%p718 bra 	BB1_1113;
	bra.uni 	BB1_1098;

BB1_1113:
	mov.u32 	%r5159, 16;
	// inline asm
	shf.r.wrap.b32 %r10863, %r21, %r20, %r5159;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r20, %r10941, %r5159;
	// inline asm
	bra.uni 	BB1_1100;

BB1_497:
	setp.eq.s32	%p329, %r25, 26;
	@%p329 bra 	BB1_509;
	bra.uni 	BB1_498;

BB1_509:
	bfe.u32 	%r10816, %r21, 16, 8;
	bra.uni 	BB1_523;

BB1_833:
	setp.eq.s32	%p542, %r25, 26;
	@%p542 bra 	BB1_845;
	bra.uni 	BB1_834;

BB1_845:
	mov.u32 	%r4201, 16;
	// inline asm
	shf.r.wrap.b32 %r20, %r19, %r18, %r4201;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r10941, %r19, %r4201;
	// inline asm
	bra.uni 	BB1_836;

BB1_1055:
	setp.eq.s32	%p747, %r27, 6;
	@%p747 bra 	BB1_1123;
	bra.uni 	BB1_1056;

BB1_1123:
	mov.u32 	%r5514, 16;
	// inline asm
	shf.r.wrap.b32 %r10863, %r18, %r17, %r5514;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r17, %r16, %r5514;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r16, %r23, %r5514;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r23, %r22, %r5514;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r22, %r21, %r5514;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r21, %r20, %r5514;
	// inline asm
	mov.u32 	%r10944, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r20, %r10944, %r5514;
	// inline asm
	bra.uni 	BB1_1127;

BB1_458:
	setp.eq.s32	%p358, %r25, 6;
	@%p358 bra 	BB1_519;
	bra.uni 	BB1_459;

BB1_519:
	bfe.u32 	%r10816, %r18, 16, 8;
	bra.uni 	BB1_523;

BB1_340:
	setp.eq.s32	%p254, %r3599, 3;
	@%p254 bra 	BB1_341;
	bra.uni 	BB1_10;

BB1_341:
	and.b32  	%r3611, %r16, %r336;
	and.b32  	%r3612, %r3587, %r335;
	or.b32  	%r10948, %r3612, %r3611;
	bra.uni 	BB1_637;

BB1_1319:
	setp.gt.s32	%p914, %r6528, 13;
	@%p914 bra 	BB1_1323;

	setp.eq.s32	%p917, %r6528, 12;
	@%p917 bra 	BB1_1372;
	bra.uni 	BB1_1321;

BB1_1372:
	mov.u32 	%r10891, %r18;
	mov.u32 	%r10892, %r17;
	mov.u32 	%r10893, %r16;
	mov.u32 	%r10894, %r23;
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r19;
	bra.uni 	BB1_1378;

BB1_411:
	setp.eq.s32	%p302, %r3748, 3;
	@%p302 bra 	BB1_412;
	bra.uni 	BB1_10;

BB1_412:
	and.b32  	%r3768, %r16, %r385;
	and.b32  	%r3769, %r384, %r16;
	shr.u32 	%r3770, %r3769, 1;
	and.b32  	%r3771, %r3770, %r384;
	or.b32  	%r10948, %r3771, %r3768;
	bra.uni 	BB1_637;

BB1_1259:
	setp.eq.s32	%p835, %r6273, 3;
	@%p835 bra 	BB1_1260;
	bra.uni 	BB1_1267;

BB1_1260:
	and.b32  	%r6286, %r1211, %r16;
	and.b32  	%r6287, %r10948, %r1212;
	or.b32  	%r10948, %r6287, %r6286;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	bra.uni 	BB1_1273;

BB1_794:
	setp.eq.s32	%p571, %r25, 6;
	@%p571 bra 	BB1_858;
	bra.uni 	BB1_795;

BB1_858:
	mov.u32 	%r4556, 16;
	// inline asm
	shf.r.wrap.b32 %r20, %r22, %r21, %r4556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r23, %r22, %r4556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r16, %r23, %r4556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r17, %r16, %r4556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r16, %r18, %r17, %r4556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r19, %r18, %r4556;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r10945, %r19, %r4556;
	// inline asm
	bra.uni 	BB1_865;

BB1_1277:
	setp.eq.s32	%p865, %r6375, 3;
	@%p865 bra 	BB1_1278;
	bra.uni 	BB1_132;

BB1_1278:
	and.b32  	%r10948, %r10948, %r1256;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	bra.uni 	BB1_1535;

BB1_1088:
	setp.eq.s32	%p724, %r27, 22;
	@%p724 bra 	BB1_1115;
	bra.uni 	BB1_1089;

BB1_1115:
	mov.u32 	%r5214, 16;
	// inline asm
	shf.r.wrap.b32 %r10863, %r22, %r21, %r5214;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r21, %r20, %r5214;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r20, %r10941, %r5214;
	// inline asm
	bra.uni 	BB1_1091;

BB1_489:
	setp.eq.s32	%p335, %r25, 22;
	@%p335 bra 	BB1_511;
	bra.uni 	BB1_490;

BB1_511:
	bfe.u32 	%r10816, %r22, 16, 8;
	bra.uni 	BB1_523;

BB1_825:
	setp.eq.s32	%p548, %r25, 22;
	@%p548 bra 	BB1_847;
	bra.uni 	BB1_826;

BB1_847:
	mov.u32 	%r4256, 16;
	// inline asm
	shf.r.wrap.b32 %r20, %r18, %r17, %r4256;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r19, %r18, %r4256;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r10941, %r19, %r4256;
	// inline asm
	bra.uni 	BB1_864;

BB1_1070:
	setp.eq.s32	%p736, %r27, 14;
	@%p736 bra 	BB1_1119;
	bra.uni 	BB1_1071;

BB1_1119:
	mov.u32 	%r5348, 16;
	// inline asm
	shf.r.wrap.b32 %r10863, %r16, %r23, %r5348;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r23, %r22, %r5348;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r22, %r21, %r5348;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r21, %r20, %r5348;
	// inline asm
	mov.u32 	%r10942, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r20, %r10942, %r5348;
	// inline asm
	bra.uni 	BB1_1073;

BB1_473:
	setp.eq.s32	%p347, %r25, 14;
	@%p347 bra 	BB1_515;
	bra.uni 	BB1_474;

BB1_515:
	bfe.u32 	%r10816, %r16, 16, 8;
	bra.uni 	BB1_523;

BB1_347:
	setp.ne.s32	%p249, %r3599, 7;
	@%p249 bra 	BB1_10;

	and.b32  	%r3603, %r20, %r336;
	and.b32  	%r3604, %r3571, %r335;
	or.b32  	%r10944, %r3604, %r3603;
	bra.uni 	BB1_678;

BB1_1354:
	setp.gt.s32	%p891, %r6528, 29;
	@%p891 bra 	BB1_1358;

	setp.eq.s32	%p894, %r6528, 28;
	@%p894 bra 	BB1_1363;
	bra.uni 	BB1_1356;

BB1_1363:
	mov.u32 	%r10891, %r10899;
	mov.u32 	%r10892, %r10899;
	mov.u32 	%r10893, %r10899;
	mov.u32 	%r10894, %r19;

BB1_1364:
	mov.u32 	%r10895, %r10899;
	mov.u32 	%r10896, %r10899;
	mov.u32 	%r10897, %r10899;
	mov.u32 	%r10898, %r10899;
	bra.uni 	BB1_1378;

BB1_418:
	setp.ne.s32	%p297, %r3748, 7;
	@%p297 bra 	BB1_10;

	and.b32  	%r3752, %r20, %r385;
	and.b32  	%r3753, %r384, %r20;
	shr.u32 	%r3754, %r3753, 1;
	and.b32  	%r3755, %r3754, %r384;
	or.b32  	%r10944, %r3755, %r3752;
	bra.uni 	BB1_678;

BB1_1266:
	setp.ne.s32	%p830, %r6273, 7;
	@%p830 bra 	BB1_1267;

	and.b32  	%r6278, %r1211, %r20;
	and.b32  	%r6279, %r10944, %r1212;
	or.b32  	%r10944, %r6279, %r6278;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	bra.uni 	BB1_1271;

BB1_1267:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;

BB1_1271:
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	mov.u32 	%r10948, %r16;

BB1_1273:
	add.s32 	%r10949, %r15, -1;
	bra.uni 	BB1_1536;

BB1_809:
	setp.eq.s32	%p560, %r25, 14;
	@%p560 bra 	BB1_854;
	bra.uni 	BB1_810;

BB1_854:
	mov.u32 	%r4390, 16;
	// inline asm
	shf.r.wrap.b32 %r20, %r16, %r23, %r4390;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r17, %r16, %r4390;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r18, %r17, %r4390;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r19, %r18, %r4390;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r16, %r10945, %r19, %r4390;
	// inline asm
	bra.uni 	BB1_853;

BB1_1284:
	setp.ne.s32	%p860, %r6375, 7;
	@%p860 bra 	BB1_132;

	and.b32  	%r10944, %r6343, %r1256;
	bra.uni 	BB1_1535;

BB1_132:
	mov.u32 	%r10944, %r6343;
	bra.uni 	BB1_1535;

BB1_1106:
	setp.eq.s32	%p713, %r27, 30;
	@%p713 bra 	BB1_1110;
	bra.uni 	BB1_1107;

BB1_1110:
	mov.u32 	%r10941, 0;
	mov.u32 	%r5112, 16;
	// inline asm
	shf.r.wrap.b32 %r10863, %r20, %r10941, %r5112;
	// inline asm
	bra.uni 	BB1_1109;

BB1_504:
	setp.eq.s32	%p324, %r25, 30;
	@%p324 bra 	BB1_507;
	bra.uni 	BB1_505;

BB1_507:
	bfe.u32 	%r10816, %r20, 16, 8;
	bra.uni 	BB1_523;

BB1_841:
	setp.eq.s32	%p537, %r25, 31;
	@%p537 bra 	BB1_862;
	bra.uni 	BB1_842;

BB1_862:
	mov.u32 	%r10941, 0;
	mov.u32 	%r4687, 8;
	// inline asm
	shf.r.wrap.b32 %r20, %r10941, %r19, %r4687;
	// inline asm
	bra.uni 	BB1_863;

BB1_137:
	setp.eq.s32	%p169, %r25, 2;
	@%p169 bra 	BB1_212;
	bra.uni 	BB1_138;

BB1_212:
	mov.u32 	%r2929, 16;
	// inline asm
	shf.r.wrap.b32 %r10787, %r21, %r20, %r2929;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r22, %r21, %r2929;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r23, %r22, %r2929;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r16, %r23, %r2929;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10791, %r17, %r16, %r2929;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10790, %r18, %r17, %r2929;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10789, %r19, %r18, %r2929;
	// inline asm
	mov.u32 	%r2927, 0;
	// inline asm
	shf.r.wrap.b32 %r10788, %r2927, %r19, %r2929;
	// inline asm
	bra.uni 	BB1_213;

BB1_1183:
	setp.eq.s32	%p793, %r25, 17;
	@%p793 bra 	BB1_1184;
	bra.uni 	BB1_1187;

BB1_1184:
	mov.u32 	%r5852, 8;
	// inline asm
	shf.r.wrap.b32 %r10945, %r23, %r22, %r5852;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r22, %r21, %r5852;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r21, %r20, %r5852;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r20, %r20, %r10941, %r5852;
	// inline asm
	bra.uni 	BB1_1218;

BB1_1463:
	setp.eq.s32	%p996, %r7653, 17;
	@%p996 bra 	BB1_1464;
	bra.uni 	BB1_1458;

BB1_1464:
	mov.u32 	%r7843, 24;
	// inline asm
	shf.r.wrap.b32 %r23, %r17, %r16, %r7843;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r18, %r17, %r7843;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r19, %r18, %r7843;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r10933, %r10937, %r19, %r7843;
	// inline asm
	bra.uni 	BB1_1498;

BB1_1167:
	setp.eq.s32	%p805, %r25, 9;
	@%p805 bra 	BB1_1168;
	bra.uni 	BB1_1187;

BB1_1168:
	mov.u32 	%r6008, 8;
	// inline asm
	shf.r.wrap.b32 %r10945, %r17, %r16, %r6008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r16, %r23, %r6008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r23, %r22, %r6008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5997, %r22, %r21, %r6008;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r21, %r20, %r6008;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r20, %r10943, %r6008;
	// inline asm
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r20, %r5997;
	bra.uni 	BB1_1234;

BB1_1447:
	setp.eq.s32	%p1008, %r7653, 9;
	@%p1008 bra 	BB1_1448;
	bra.uni 	BB1_1458;

BB1_1448:
	mov.u32 	%r7999, 24;
	// inline asm
	shf.r.wrap.b32 %r7976, %r23, %r22, %r7999;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r16, %r23, %r7999;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r17, %r16, %r7999;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r18, %r17, %r7999;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r7992, %r19, %r18, %r7999;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r10939, %r10937, %r19, %r7999;
	// inline asm
	mov.u32 	%r23, %r7976;
	mov.u32 	%r10938, %r10937;
	mov.u32 	%r19, %r7992;
	bra.uni 	BB1_1511;

BB1_169:
	setp.eq.s32	%p146, %r25, 18;
	@%p146 bra 	BB1_204;
	bra.uni 	BB1_170;

BB1_204:
	mov.u32 	%r2597, 16;
	// inline asm
	shf.r.wrap.b32 %r10787, %r17, %r16, %r2597;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r18, %r17, %r2597;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r19, %r18, %r2597;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10784, %r10788, %r19, %r2597;
	// inline asm
	bra.uni 	BB1_199;

BB1_1199:
	setp.eq.s32	%p782, %r25, 25;
	@%p782 bra 	BB1_1200;
	bra.uni 	BB1_1187;

BB1_1200:
	mov.u32 	%r5728, 8;
	// inline asm
	shf.r.wrap.b32 %r10945, %r21, %r20, %r5728;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r20, %r10941, %r5728;
	// inline asm
	bra.uni 	BB1_1204;

BB1_1478:
	setp.eq.s32	%p985, %r7653, 25;
	@%p985 bra 	BB1_1479;
	bra.uni 	BB1_1458;

BB1_1479:
	mov.u32 	%r7719, 24;
	// inline asm
	shf.r.wrap.b32 %r23, %r19, %r18, %r7719;
	// inline asm
	mov.u32 	%r10933, 0;
	// inline asm
	shf.r.wrap.b32 %r10935, %r10933, %r19, %r7719;
	// inline asm
	bra.uni 	BB1_1483;

BB1_1159:
	setp.eq.s32	%p811, %r25, 5;
	@%p811 bra 	BB1_1160;
	bra.uni 	BB1_1187;

BB1_1160:
	mov.u32 	%r6098, 8;
	// inline asm
	shf.r.wrap.b32 %r10945, %r18, %r17, %r6098;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r17, %r16, %r6098;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r16, %r23, %r6098;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6083, %r23, %r22, %r6098;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r22, %r21, %r6098;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r21, %r20, %r6098;
	// inline asm
	mov.u32 	%r10944, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r20, %r10944, %r6098;
	// inline asm
	mov.u32 	%r20, %r6083;
	bra.uni 	BB1_1234;

BB1_709:
	setp.eq.s32	%p492, %r15, 11;
	@%p492 bra 	BB1_768;
	bra.uni 	BB1_710;

BB1_768:
	and.b32  	%r4024, %r17, 255;
	shl.b32 	%r4025, %r17, 8;
	and.b32  	%r4026, %r4025, 16711680;
	or.b32  	%r4027, %r4026, %r4024;
	shr.u32 	%r4028, %r17, 8;
	and.b32  	%r4029, %r4028, 65280;
	or.b32  	%r10947, %r4027, %r4029;
	mov.u32 	%r10949, 11;
	bra.uni 	BB1_769;

BB1_1439:
	setp.eq.s32	%p1014, %r7653, 5;
	@%p1014 bra 	BB1_1440;
	bra.uni 	BB1_1458;

BB1_1440:
	mov.u32 	%r8089, 24;
	// inline asm
	shf.r.wrap.b32 %r8062, %r22, %r21, %r8089;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r23, %r22, %r8089;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r16, %r23, %r8089;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r17, %r16, %r8089;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8078, %r18, %r17, %r8089;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10939, %r19, %r18, %r8089;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r10938, %r10937, %r19, %r8089;
	// inline asm
	mov.u32 	%r23, %r8062;
	mov.u32 	%r19, %r8078;
	bra.uni 	BB1_1511;

BB1_152:
	setp.eq.s32	%p158, %r25, 10;
	@%p158 bra 	BB1_208;
	bra.uni 	BB1_153;

BB1_208:
	mov.u32 	%r2747, 16;
	// inline asm
	shf.r.wrap.b32 %r10787, %r23, %r22, %r2747;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r16, %r23, %r2747;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r17, %r16, %r2747;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r18, %r17, %r2747;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10791, %r19, %r18, %r2747;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10790, %r10788, %r19, %r2747;
	// inline asm
	mov.u32 	%r10789, %r10788;
	bra.uni 	BB1_213;

BB1_1190:
	setp.eq.s32	%p788, %r25, 21;
	@%p788 bra 	BB1_1191;
	bra.uni 	BB1_1187;

BB1_1191:
	mov.u32 	%r5786, 8;
	// inline asm
	shf.r.wrap.b32 %r10945, %r22, %r21, %r5786;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r21, %r20, %r5786;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r20, %r10941, %r5786;
	// inline asm
	bra.uni 	BB1_1195;

BB1_1470:
	setp.eq.s32	%p991, %r7653, 21;
	@%p991 bra 	BB1_1471;
	bra.uni 	BB1_1458;

BB1_1471:
	mov.u32 	%r7777, 24;
	// inline asm
	shf.r.wrap.b32 %r23, %r18, %r17, %r7777;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r19, %r18, %r7777;
	// inline asm
	mov.u32 	%r10933, 0;
	// inline asm
	shf.r.wrap.b32 %r10934, %r10933, %r19, %r7777;
	// inline asm
	bra.uni 	BB1_1510;

BB1_1174:
	setp.eq.s32	%p800, %r25, 13;
	@%p800 bra 	BB1_1175;
	bra.uni 	BB1_1187;

BB1_1175:
	mov.u32 	%r5926, 8;
	// inline asm
	shf.r.wrap.b32 %r10945, %r16, %r23, %r5926;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r23, %r22, %r5926;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r22, %r21, %r5926;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5919, %r21, %r20, %r5926;
	// inline asm
	mov.u32 	%r10942, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r20, %r10942, %r5926;
	// inline asm
	mov.u32 	%r10943, %r10942;
	mov.u32 	%r10944, %r10942;
	mov.u32 	%r20, %r5919;
	bra.uni 	BB1_1234;

BB1_737:
	setp.eq.s32	%p471, %r15, 26;
	@%p471 bra 	BB1_750;
	bra.uni 	BB1_738;

BB1_750:
	shl.b32 	%r3947, %r21, 8;
	and.b32  	%r3948, %r3947, 65280;
	bfe.u32 	%r3949, %r21, 8, 8;
	or.b32  	%r10943, %r3948, %r3949;
	mov.u32 	%r10949, 26;
	bra.uni 	BB1_751;

BB1_1454:
	setp.eq.s32	%p1003, %r7653, 13;
	@%p1003 bra 	BB1_1455;
	bra.uni 	BB1_1458;

BB1_1455:
	mov.u32 	%r7917, 24;
	// inline asm
	shf.r.wrap.b32 %r23, %r16, %r23, %r7917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r17, %r16, %r7917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r18, %r17, %r7917;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r19, %r18, %r7917;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r19, %r10937, %r19, %r7917;
	// inline asm
	bra.uni 	BB1_1502;

BB1_184:
	setp.eq.s32	%p135, %r25, 26;
	@%p135 bra 	BB1_200;
	bra.uni 	BB1_185;

BB1_200:
	mov.u32 	%r2479, 16;
	// inline asm
	shf.r.wrap.b32 %r10787, %r19, %r18, %r2479;
	// inline asm
	mov.u32 	%r10784, 0;
	// inline asm
	shf.r.wrap.b32 %r10786, %r10784, %r19, %r2479;
	// inline asm
	bra.uni 	BB1_187;

BB1_1207:
	setp.eq.s32	%p777, %r25, 29;
	@%p777 bra 	BB1_1208;
	bra.uni 	BB1_1187;

BB1_1208:
	mov.u32 	%r10941, 0;
	mov.u32 	%r5678, 8;
	// inline asm
	shf.r.wrap.b32 %r10945, %r20, %r10941, %r5678;
	// inline asm
	bra.uni 	BB1_1230;

BB1_1486:
	setp.eq.s32	%p980, %r7653, 29;
	@%p980 bra 	BB1_1487;
	bra.uni 	BB1_1458;

BB1_1487:
	mov.u32 	%r10933, 0;
	mov.u32 	%r7669, 24;
	// inline asm
	shf.r.wrap.b32 %r23, %r10933, %r19, %r7669;
	// inline asm
	bra.uni 	BB1_1509;

BB1_701:
	setp.eq.s32	%p498, %r15, 7;
	@%p498 bra 	BB1_771;
	bra.uni 	BB1_702;

BB1_771:
	and.b32  	%r4045, %r18, 255;
	shl.b32 	%r4046, %r18, 8;
	and.b32  	%r4047, %r4046, 16711680;
	or.b32  	%r4048, %r4047, %r4045;
	shr.u32 	%r4049, %r18, 8;
	and.b32  	%r4050, %r4049, 65280;
	or.b32  	%r10946, %r4048, %r4050;
	mov.u32 	%r10949, 7;
	bra.uni 	BB1_772;

BB1_144:
	setp.eq.s32	%p164, %r25, 6;
	@%p164 bra 	BB1_210;
	bra.uni 	BB1_145;

BB1_210:
	mov.u32 	%r2834, 16;
	// inline asm
	shf.r.wrap.b32 %r10787, %r22, %r21, %r2834;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r23, %r22, %r2834;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r16, %r23, %r2834;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r17, %r16, %r2834;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10791, %r18, %r17, %r2834;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10790, %r19, %r18, %r2834;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10789, %r10788, %r19, %r2834;
	// inline asm
	bra.uni 	BB1_213;

BB1_1186:
	setp.eq.s32	%p791, %r25, 19;
	@%p791 bra 	BB1_1217;
	bra.uni 	BB1_1187;

BB1_1217:
	mov.u32 	%r5812, 24;
	// inline asm
	shf.r.wrap.b32 %r10945, %r23, %r22, %r5812;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r22, %r21, %r5812;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r21, %r20, %r5812;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r20, %r20, %r10941, %r5812;
	// inline asm

BB1_1218:
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	bra.uni 	BB1_1234;

BB1_1466:
	setp.eq.s32	%p994, %r7653, 19;
	@%p994 bra 	BB1_1467;
	bra.uni 	BB1_1458;

BB1_1467:
	mov.u32 	%r7803, 8;
	// inline asm
	shf.r.wrap.b32 %r23, %r17, %r16, %r7803;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r18, %r17, %r7803;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r19, %r18, %r7803;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r10933, %r10937, %r19, %r7803;
	// inline asm

BB1_1498:
	mov.u32 	%r10938, %r10937;
	mov.u32 	%r10939, %r10937;
	mov.u32 	%r19, %r10937;
	bra.uni 	BB1_1511;

BB1_1170:
	setp.eq.s32	%p803, %r25, 11;
	@%p803 bra 	BB1_1171;
	bra.uni 	BB1_1187;

BB1_1171:
	mov.u32 	%r5956, 24;
	// inline asm
	shf.r.wrap.b32 %r10945, %r17, %r16, %r5956;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r16, %r23, %r5956;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r23, %r22, %r5956;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5945, %r22, %r21, %r5956;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r21, %r20, %r5956;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r20, %r10943, %r5956;
	// inline asm
	mov.u32 	%r10944, %r10943;
	mov.u32 	%r20, %r5945;
	bra.uni 	BB1_1234;

BB1_729:
	setp.eq.s32	%p477, %r15, 22;
	@%p477 bra 	BB1_753;
	bra.uni 	BB1_730;

BB1_753:
	shl.b32 	%r3968, %r22, 8;
	and.b32  	%r3969, %r3968, 65280;
	bfe.u32 	%r3970, %r22, 8, 8;
	or.b32  	%r10942, %r3969, %r3970;
	mov.u32 	%r10949, 22;
	bra.uni 	BB1_754;

BB1_1450:
	setp.eq.s32	%p1006, %r7653, 11;
	@%p1006 bra 	BB1_1451;
	bra.uni 	BB1_1458;

BB1_1451:
	mov.u32 	%r7947, 8;
	// inline asm
	shf.r.wrap.b32 %r7924, %r23, %r22, %r7947;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r16, %r23, %r7947;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r17, %r16, %r7947;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r18, %r17, %r7947;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r7940, %r19, %r18, %r7947;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r10939, %r10937, %r19, %r7947;
	// inline asm
	mov.u32 	%r23, %r7924;
	mov.u32 	%r10938, %r10937;
	mov.u32 	%r19, %r7940;
	bra.uni 	BB1_1511;

BB1_176:
	setp.eq.s32	%p141, %r25, 22;
	@%p141 bra 	BB1_202;
	bra.uni 	BB1_177;

BB1_202:
	mov.u32 	%r2534, 16;
	// inline asm
	shf.r.wrap.b32 %r10787, %r18, %r17, %r2534;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r19, %r18, %r2534;
	// inline asm
	mov.u32 	%r10784, 0;
	// inline asm
	shf.r.wrap.b32 %r10785, %r10784, %r19, %r2534;
	// inline asm
	bra.uni 	BB1_188;

BB1_1202:
	setp.eq.s32	%p780, %r25, 27;
	@%p780 bra 	BB1_1203;
	bra.uni 	BB1_1187;

BB1_1203:
	mov.u32 	%r5700, 24;
	// inline asm
	shf.r.wrap.b32 %r10945, %r21, %r20, %r5700;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r20, %r10941, %r5700;
	// inline asm

BB1_1204:
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	bra.uni 	BB1_1232;

BB1_1481:
	setp.eq.s32	%p983, %r7653, 27;
	@%p983 bra 	BB1_1482;
	bra.uni 	BB1_1458;

BB1_1482:
	mov.u32 	%r7691, 8;
	// inline asm
	shf.r.wrap.b32 %r23, %r19, %r18, %r7691;
	// inline asm
	mov.u32 	%r10933, 0;
	// inline asm
	shf.r.wrap.b32 %r10935, %r10933, %r19, %r7691;
	// inline asm

BB1_1483:
	mov.u32 	%r10934, %r10933;
	bra.uni 	BB1_1510;

BB1_1162:
	setp.eq.s32	%p809, %r25, 7;
	@%p809 bra 	BB1_1163;
	bra.uni 	BB1_1187;

BB1_1163:
	mov.u32 	%r6040, 24;
	// inline asm
	shf.r.wrap.b32 %r10945, %r18, %r17, %r6040;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r17, %r16, %r6040;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r16, %r23, %r6040;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6025, %r23, %r22, %r6040;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r22, %r21, %r6040;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r21, %r20, %r6040;
	// inline asm
	mov.u32 	%r10944, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r20, %r10944, %r6040;
	// inline asm
	mov.u32 	%r20, %r6025;
	bra.uni 	BB1_1234;

BB1_716:
	setp.eq.s32	%p487, %r15, 15;
	@%p487 bra 	BB1_764;
	bra.uni 	BB1_717;

BB1_764:
	and.b32  	%r4003, %r16, 255;
	shl.b32 	%r4004, %r16, 8;
	and.b32  	%r4005, %r4004, 16711680;
	or.b32  	%r4006, %r4005, %r4003;
	shr.u32 	%r4007, %r16, 8;
	and.b32  	%r4008, %r4007, 65280;
	or.b32  	%r10948, %r4006, %r4008;
	mov.u32 	%r10949, 15;
	bra.uni 	BB1_765;

BB1_1442:
	setp.eq.s32	%p1012, %r7653, 7;
	@%p1012 bra 	BB1_1443;
	bra.uni 	BB1_1458;

BB1_1443:
	mov.u32 	%r8031, 8;
	// inline asm
	shf.r.wrap.b32 %r8004, %r22, %r21, %r8031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r23, %r22, %r8031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r16, %r23, %r8031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r17, %r16, %r8031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8020, %r18, %r17, %r8031;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10939, %r19, %r18, %r8031;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r10938, %r10937, %r19, %r8031;
	// inline asm
	mov.u32 	%r23, %r8004;
	mov.u32 	%r19, %r8020;
	bra.uni 	BB1_1511;

BB1_159:
	setp.eq.s32	%p153, %r25, 14;
	@%p153 bra 	BB1_206;
	bra.uni 	BB1_160;

BB1_206:
	mov.u32 	%r2668, 16;
	// inline asm
	shf.r.wrap.b32 %r10787, %r16, %r23, %r2668;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r17, %r16, %r2668;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r18, %r17, %r2668;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r19, %r18, %r2668;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10791, %r10788, %r19, %r2668;
	// inline asm
	bra.uni 	BB1_162;

BB1_1193:
	setp.eq.s32	%p786, %r25, 23;
	@%p786 bra 	BB1_1194;
	bra.uni 	BB1_1187;

BB1_1194:
	mov.u32 	%r5752, 24;
	// inline asm
	shf.r.wrap.b32 %r10945, %r22, %r21, %r5752;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r21, %r20, %r5752;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r20, %r10941, %r5752;
	// inline asm

BB1_1195:
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	bra.uni 	BB1_1233;

BB1_1473:
	setp.eq.s32	%p989, %r7653, 23;
	@%p989 bra 	BB1_1474;
	bra.uni 	BB1_1458;

BB1_1474:
	mov.u32 	%r7743, 8;
	// inline asm
	shf.r.wrap.b32 %r23, %r18, %r17, %r7743;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r19, %r18, %r7743;
	// inline asm
	mov.u32 	%r10933, 0;
	// inline asm
	shf.r.wrap.b32 %r10934, %r10933, %r19, %r7743;
	// inline asm
	bra.uni 	BB1_1510;

BB1_1177:
	setp.eq.s32	%p798, %r25, 15;
	@%p798 bra 	BB1_1178;
	bra.uni 	BB1_1187;

BB1_1178:
	mov.u32 	%r5880, 24;
	// inline asm
	shf.r.wrap.b32 %r10945, %r16, %r23, %r5880;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r23, %r22, %r5880;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r22, %r21, %r5880;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5873, %r21, %r20, %r5880;
	// inline asm
	mov.u32 	%r10942, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r20, %r10942, %r5880;
	// inline asm
	mov.u32 	%r10943, %r10942;
	mov.u32 	%r10944, %r10942;
	mov.u32 	%r20, %r5873;
	bra.uni 	BB1_1234;

BB1_744:
	setp.eq.s32	%p466, %r15, 30;
	@%p466 bra 	BB1_747;
	bra.uni 	BB1_745;

BB1_747:
	shl.b32 	%r3926, %r20, 8;
	and.b32  	%r3927, %r3926, 65280;
	bfe.u32 	%r3928, %r20, 8, 8;
	or.b32  	%r10944, %r3927, %r3928;
	mov.u32 	%r10949, 30;
	bra.uni 	BB1_748;

BB1_1457:
	setp.eq.s32	%p1001, %r7653, 15;
	@%p1001 bra 	BB1_1499;
	bra.uni 	BB1_1458;

BB1_1499:
	mov.u32 	%r7871, 8;
	// inline asm
	shf.r.wrap.b32 %r23, %r16, %r23, %r7871;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10935, %r17, %r16, %r7871;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10934, %r18, %r17, %r7871;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10933, %r19, %r18, %r7871;
	// inline asm
	mov.u32 	%r10937, 0;
	// inline asm
	shf.r.wrap.b32 %r19, %r10937, %r19, %r7871;
	// inline asm

BB1_1502:
	mov.u32 	%r10938, %r10937;
	mov.u32 	%r10939, %r10937;
	bra.uni 	BB1_1511;

BB1_193:
	setp.eq.s32	%p130, %r25, 30;
	@%p130 bra 	BB1_197;
	bra.uni 	BB1_194;

BB1_197:
	mov.u32 	%r10784, 0;
	mov.u32 	%r2432, 16;
	// inline asm
	shf.r.wrap.b32 %r10787, %r10784, %r19, %r2432;
	// inline asm
	bra.uni 	BB1_196;

BB1_286:
	setp.eq.s32	%p218, %r25, 18;
	@%p218 bra 	BB1_317;
	bra.uni 	BB1_287;

BB1_317:
	mov.u32 	%r3195, 16;
	// inline asm
	shf.r.wrap.b32 %r23, %r17, %r16, %r3195;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r18, %r17, %r3195;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r19, %r18, %r3195;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r10808, %r10812, %r19, %r3195;
	// inline asm
	bra.uni 	BB1_319;

BB1_270:
	setp.eq.s32	%p230, %r25, 10;
	@%p230 bra 	BB1_324;
	bra.uni 	BB1_271;

BB1_324:
	mov.u32 	%r3345, 16;
	// inline asm
	shf.r.wrap.b32 %r3322, %r23, %r22, %r3345;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r16, %r23, %r3345;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r17, %r16, %r3345;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r18, %r17, %r3345;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3338, %r19, %r18, %r3345;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r10814, %r10812, %r19, %r3345;
	// inline asm
	mov.u32 	%r23, %r3322;
	mov.u32 	%r10813, %r10812;
	mov.u32 	%r19, %r3338;
	bra.uni 	BB1_333;

BB1_301:
	setp.eq.s32	%p207, %r25, 26;
	@%p207 bra 	BB1_313;
	bra.uni 	BB1_302;

BB1_313:
	mov.u32 	%r3077, 16;
	// inline asm
	shf.r.wrap.b32 %r23, %r19, %r18, %r3077;
	// inline asm
	mov.u32 	%r10808, 0;
	// inline asm
	shf.r.wrap.b32 %r10810, %r10808, %r19, %r3077;
	// inline asm
	bra.uni 	BB1_304;

BB1_1210:
	setp.ne.s32	%p775, %r25, 30;
	@%p775 bra 	BB1_1187;

	mov.u32 	%r10941, 0;
	mov.u32 	%r5667, 16;
	// inline asm
	shf.r.wrap.b32 %r10945, %r20, %r10941, %r5667;
	// inline asm

BB1_1230:
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;

BB1_1231:
	mov.u32 	%r10946, %r10941;

BB1_1232:
	mov.u32 	%r10947, %r10941;

BB1_1233:
	mov.u32 	%r20, %r10941;
	bra.uni 	BB1_1234;

BB1_1187:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	mov.u32 	%r20, %r16;

BB1_1234:
	and.b32  	%r6209, %r26, 3;
	shl.b32 	%r6210, %r6209, 3;
	mov.u32 	%r6211, 1;
	shl.b32 	%r6212, %r6211, %r6210;
	add.s32 	%r1194, %r6212, -1;
	shr.u32 	%r6208, %r27, 2;
	setp.gt.s32	%p815, %r6208, 3;
	@%p815 bra 	BB1_1242;

	setp.gt.s32	%p821, %r6208, 1;
	@%p821 bra 	BB1_1239;

	setp.eq.s32	%p824, %r6208, 0;
	@%p824 bra 	BB1_1255;
	bra.uni 	BB1_1237;

BB1_1255:
	and.b32  	%r10945, %r10945, %r1194;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10946, %r10941;
	bra.uni 	BB1_1253;

BB1_1242:
	setp.gt.s32	%p816, %r6208, 5;
	@%p816 bra 	BB1_1246;

	setp.eq.s32	%p819, %r6208, 4;
	@%p819 bra 	BB1_1250;
	bra.uni 	BB1_1244;

BB1_1250:
	and.b32  	%r10941, %r10941, %r1194;
	mov.u32 	%r10942, 0;
	mov.u32 	%r10943, %r10942;
	mov.u32 	%r10944, %r10942;
	bra.uni 	BB1_1238;

BB1_1239:
	setp.eq.s32	%p822, %r6208, 2;
	@%p822 bra 	BB1_1251;
	bra.uni 	BB1_1240;

BB1_1251:
	and.b32  	%r10947, %r10947, %r1194;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	bra.uni 	BB1_1254;

BB1_1246:
	setp.eq.s32	%p817, %r6208, 6;
	@%p817 bra 	BB1_1249;
	bra.uni 	BB1_1247;

BB1_1249:
	and.b32  	%r10943, %r10943, %r1194;
	mov.u32 	%r10944, 0;
	bra.uni 	BB1_1238;

BB1_1237:
	setp.eq.s32	%p825, %r6208, 1;
	@%p825 bra 	BB1_1252;
	bra.uni 	BB1_1238;

BB1_1252:
	and.b32  	%r10946, %r10946, %r1194;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;

BB1_1253:
	mov.u32 	%r10947, %r10941;

BB1_1254:
	mov.u32 	%r10948, %r10941;
	mov.u32 	%r10949, %r27;
	bra.uni 	BB1_1536;

BB1_1244:
	setp.eq.s32	%p820, %r6208, 5;
	@%p820 bra 	BB1_1245;
	bra.uni 	BB1_1238;

BB1_1245:
	and.b32  	%r10942, %r10942, %r1194;
	mov.u32 	%r10943, 0;
	mov.u32 	%r10944, %r10943;
	bra.uni 	BB1_1238;

BB1_1240:
	setp.eq.s32	%p823, %r6208, 3;
	@%p823 bra 	BB1_1241;
	bra.uni 	BB1_1238;

BB1_1241:
	and.b32  	%r10948, %r20, %r1194;
	mov.u32 	%r10941, 0;
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10949, %r27;
	bra.uni 	BB1_1536;

BB1_1247:
	setp.ne.s32	%p818, %r6208, 7;
	@%p818 bra 	BB1_1238;

	and.b32  	%r10944, %r10944, %r1194;

BB1_1238:
	mov.u32 	%r10948, %r20;
	mov.u32 	%r10949, %r27;
	bra.uni 	BB1_1536;

BB1_1489:
	setp.ne.s32	%p978, %r7653, 30;
	@%p978 bra 	BB1_1458;

	mov.u32 	%r10933, 0;
	mov.u32 	%r7658, 16;
	// inline asm
	shf.r.wrap.b32 %r23, %r10933, %r19, %r7658;
	// inline asm

BB1_1509:
	mov.u32 	%r10934, %r10933;
	mov.u32 	%r10935, %r10933;

BB1_1510:
	mov.u32 	%r10937, %r10933;
	mov.u32 	%r10938, %r10933;
	mov.u32 	%r10939, %r10933;
	mov.u32 	%r19, %r10933;
	bra.uni 	BB1_1511;

BB1_1458:
	mov.u32 	%r10933, %r23;
	mov.u32 	%r10934, %r22;
	mov.u32 	%r10935, %r21;
	mov.u32 	%r23, %r20;
	mov.u32 	%r10937, %r19;
	mov.u32 	%r10938, %r18;
	mov.u32 	%r10939, %r17;
	mov.u32 	%r19, %r16;

BB1_1511:
	// inline asm
	prmt.b32 %r10945, %r23, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10946, %r10935, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10947, %r10934, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10948, %r10933, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10941, %r19, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10942, %r10939, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10943, %r10938, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10944, %r10937, 0, 0x0123;
	// inline asm
	bra.uni 	BB1_1535;

BB1_262:
	setp.eq.s32	%p236, %r25, 6;
	@%p236 bra 	BB1_326;
	bra.uni 	BB1_263;

BB1_326:
	mov.u32 	%r3432, 16;
	// inline asm
	shf.r.wrap.b32 %r3405, %r22, %r21, %r3432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r23, %r22, %r3432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r16, %r23, %r3432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r17, %r16, %r3432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3421, %r18, %r17, %r3432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10814, %r19, %r18, %r3432;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r10813, %r10812, %r19, %r3432;
	// inline asm
	mov.u32 	%r23, %r3405;
	mov.u32 	%r19, %r3421;
	bra.uni 	BB1_333;

BB1_293:
	setp.eq.s32	%p213, %r25, 22;
	@%p213 bra 	BB1_315;
	bra.uni 	BB1_294;

BB1_315:
	mov.u32 	%r3132, 16;
	// inline asm
	shf.r.wrap.b32 %r23, %r18, %r17, %r3132;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r19, %r18, %r3132;
	// inline asm
	mov.u32 	%r10808, 0;
	// inline asm
	shf.r.wrap.b32 %r10809, %r10808, %r19, %r3132;
	// inline asm
	bra.uni 	BB1_332;

BB1_277:
	setp.eq.s32	%p225, %r25, 14;
	@%p225 bra 	BB1_321;
	bra.uni 	BB1_278;

BB1_321:
	mov.u32 	%r3266, 16;
	// inline asm
	shf.r.wrap.b32 %r23, %r16, %r23, %r3266;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r17, %r16, %r3266;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r18, %r17, %r3266;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r19, %r18, %r3266;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r19, %r10812, %r19, %r3266;
	// inline asm
	bra.uni 	BB1_323;

BB1_309:
	setp.eq.s32	%p202, %r25, 31;
	@%p202 bra 	BB1_330;
	bra.uni 	BB1_310;

BB1_330:
	mov.u32 	%r10808, 0;
	mov.u32 	%r3563, 8;
	// inline asm
	shf.r.wrap.b32 %r23, %r10808, %r19, %r3563;
	// inline asm
	bra.uni 	BB1_331;

BB1_861:
	mov.u32 	%r4683, 24;
	// inline asm
	shf.r.wrap.b32 %r20, %r21, %r20, %r4683;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r22, %r21, %r4683;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r23, %r22, %r4683;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r16, %r23, %r4683;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r16, %r17, %r16, %r4683;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r18, %r17, %r4683;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r19, %r18, %r4683;
	// inline asm
	mov.u32 	%r4681, 0;
	// inline asm
	shf.r.wrap.b32 %r10945, %r4681, %r19, %r4683;
	// inline asm
	bra.uni 	BB1_865;

BB1_788:
	setp.eq.s32	%p577, %r25, 3;
	@%p577 bra 	BB1_789;
	bra.uni 	BB1_811;

BB1_789:
	mov.u32 	%r4619, 8;
	// inline asm
	shf.r.wrap.b32 %r20, %r21, %r20, %r4619;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r22, %r21, %r4619;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r23, %r22, %r4619;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r16, %r23, %r4619;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r16, %r17, %r16, %r4619;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r18, %r17, %r4619;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r19, %r18, %r4619;
	// inline asm
	mov.u32 	%r4617, 0;
	// inline asm
	shf.r.wrap.b32 %r10945, %r4617, %r19, %r4619;
	// inline asm
	bra.uni 	BB1_865;

BB1_1046:
	setp.eq.s32	%p755, %r27, 1;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p755 bra 	BB1_1047;
	bra.uni 	BB1_1127;

BB1_1047:
	mov.u32 	%r5641, 8;
	// inline asm
	shf.r.wrap.b32 %r10863, %r19, %r18, %r5641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r18, %r17, %r5641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r17, %r16, %r5641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r16, %r23, %r5641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r23, %r22, %r5641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r22, %r21, %r5641;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r21, %r20, %r5641;
	// inline asm
	mov.u32 	%r5640, 0;
	// inline asm
	shf.r.wrap.b32 %r10944, %r20, %r5640, %r5641;
	// inline asm
	bra.uni 	BB1_1127;

BB1_774:
	shl.b32 	%r4073, %r19, 8;
	and.b32  	%r4074, %r4073, 65280;
	bfe.u32 	%r4075, %r19, 8, 8;
	or.b32  	%r10945, %r4074, %r4075;
	mov.u32 	%r10949, 2;
	bra.uni 	BB1_775;

BB1_695:
	setp.eq.s32	%p504, %r15, 4;
	@%p504 bra 	BB1_696;
	bra.uni 	BB1_10;

BB1_696:
	and.b32  	%r4059, %r19, 65535;
	shl.b32 	%r4060, %r19, 8;
	and.b32  	%r4061, %r4060, -16777216;
	or.b32  	%r4062, %r4061, %r4059;
	shr.u32 	%r4063, %r19, 8;
	and.b32  	%r4064, %r4063, 16711680;
	or.b32  	%r10945, %r4062, %r4064;
	mov.u32 	%r10949, 4;

BB1_775:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_758;

BB1_449:
	setp.eq.s32	%p366, %r25, 1;
	mov.u32 	%r10816, %r10825;
	@%p366 bra 	BB1_450;
	bra.uni 	BB1_523;

BB1_450:
	bfe.u32 	%r10816, %r19, 8, 8;
	bra.uni 	BB1_523;

BB1_1301:
	setp.eq.s32	%p931, %r6528, 2;
	@%p931 bra 	BB1_1377;
	bra.uni 	BB1_1302;

BB1_1377:
	mov.u32 	%r7041, 16;
	// inline asm
	shf.r.wrap.b32 %r10894, %r21, %r20, %r7041;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r22, %r21, %r7041;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r23, %r22, %r7041;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r16, %r23, %r7041;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10898, %r17, %r16, %r7041;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10897, %r18, %r17, %r7041;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10896, %r19, %r18, %r7041;
	// inline asm
	mov.u32 	%r7039, 0;
	// inline asm
	shf.r.wrap.b32 %r10895, %r7039, %r19, %r7041;
	// inline asm
	bra.uni 	BB1_1378;

BB1_1078:
	setp.eq.s32	%p732, %r27, 17;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p732 bra 	BB1_1079;
	bra.uni 	BB1_1127;

BB1_1079:
	mov.u32 	%r5297, 8;
	// inline asm
	shf.r.wrap.b32 %r10863, %r23, %r22, %r5297;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r22, %r21, %r5297;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r21, %r20, %r5297;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10948, %r20, %r10941, %r5297;
	// inline asm
	bra.uni 	BB1_1083;

BB1_480:
	setp.eq.s32	%p343, %r25, 17;
	mov.u32 	%r10816, %r10825;
	@%p343 bra 	BB1_481;
	bra.uni 	BB1_523;

BB1_481:
	bfe.u32 	%r10816, %r23, 8, 8;
	bra.uni 	BB1_523;

BB1_816:
	setp.eq.s32	%p556, %r25, 17;
	@%p556 bra 	BB1_817;
	bra.uni 	BB1_811;

BB1_817:
	mov.u32 	%r4339, 24;
	// inline asm
	shf.r.wrap.b32 %r20, %r17, %r16, %r4339;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r18, %r17, %r4339;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r19, %r18, %r4339;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r10945, %r19, %r4339;
	// inline asm
	bra.uni 	BB1_851;

BB1_763:
	or.b32  	%r3993, %r16, %r23;
	and.b32  	%r3994, %r16, 16777215;
	prmt.b32 	%r10948, %r23, %r3994, 1620;
	shr.u32 	%r10941, %r3993, 24;
	mov.u32 	%r10949, 17;
	bra.uni 	BB1_766;

BB1_723:
	setp.eq.s32	%p483, %r15, 19;
	@%p483 bra 	BB1_724;
	bra.uni 	BB1_10;

BB1_724:
	and.b32  	%r3982, %r23, 255;
	shl.b32 	%r3983, %r23, 8;
	and.b32  	%r3984, %r3983, 16711680;
	or.b32  	%r3985, %r3984, %r3982;
	shr.u32 	%r3986, %r23, 8;
	and.b32  	%r3987, %r3986, 65280;
	or.b32  	%r10941, %r3985, %r3987;
	mov.u32 	%r10949, 19;

BB1_762:
	mov.u32 	%r10942, %r22;
	bra.uni 	BB1_755;

BB1_1061:
	setp.eq.s32	%p744, %r27, 9;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p744 bra 	BB1_1062;
	bra.uni 	BB1_1127;

BB1_1062:
	mov.u32 	%r5453, 8;
	// inline asm
	shf.r.wrap.b32 %r10863, %r17, %r16, %r5453;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r16, %r23, %r5453;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r23, %r22, %r5453;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r22, %r21, %r5453;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r21, %r20, %r5453;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r20, %r10943, %r5453;
	// inline asm
	mov.u32 	%r10944, %r10943;
	bra.uni 	BB1_1127;

BB1_464:
	setp.eq.s32	%p355, %r25, 9;
	mov.u32 	%r10816, %r10825;
	@%p355 bra 	BB1_465;
	bra.uni 	BB1_523;

BB1_465:
	bfe.u32 	%r10816, %r17, 8, 8;
	bra.uni 	BB1_523;

BB1_1333:
	setp.eq.s32	%p908, %r6528, 18;
	@%p908 bra 	BB1_1369;
	bra.uni 	BB1_1334;

BB1_1369:
	mov.u32 	%r6709, 16;
	// inline asm
	shf.r.wrap.b32 %r10894, %r17, %r16, %r6709;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r18, %r17, %r6709;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r19, %r18, %r6709;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10891, %r10895, %r19, %r6709;
	// inline asm
	bra.uni 	BB1_1336;

BB1_800:
	setp.eq.s32	%p568, %r25, 9;
	@%p568 bra 	BB1_801;
	bra.uni 	BB1_811;

BB1_801:
	mov.u32 	%r4495, 24;
	// inline asm
	shf.r.wrap.b32 %r20, %r23, %r22, %r4495;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r16, %r23, %r4495;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r17, %r16, %r4495;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r18, %r17, %r4495;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r16, %r19, %r18, %r4495;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r10945, %r19, %r4495;
	// inline asm
	mov.u32 	%r10946, %r10945;
	bra.uni 	BB1_865;

BB1_1095:
	setp.eq.s32	%p721, %r27, 25;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p721 bra 	BB1_1096;
	bra.uni 	BB1_1127;

BB1_1096:
	mov.u32 	%r5173, 8;
	// inline asm
	shf.r.wrap.b32 %r10863, %r21, %r20, %r5173;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r20, %r10941, %r5173;
	// inline asm
	bra.uni 	BB1_1100;

BB1_495:
	setp.eq.s32	%p332, %r25, 25;
	mov.u32 	%r10816, %r10825;
	@%p332 bra 	BB1_496;
	bra.uni 	BB1_523;

BB1_496:
	bfe.u32 	%r10816, %r21, 8, 8;
	bra.uni 	BB1_523;

BB1_831:
	setp.eq.s32	%p545, %r25, 25;
	@%p545 bra 	BB1_832;
	bra.uni 	BB1_811;

BB1_832:
	mov.u32 	%r4215, 24;
	// inline asm
	shf.r.wrap.b32 %r20, %r19, %r18, %r4215;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r10941, %r19, %r4215;
	// inline asm
	bra.uni 	BB1_836;

BB1_1053:
	setp.eq.s32	%p750, %r27, 5;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p750 bra 	BB1_1054;
	bra.uni 	BB1_1127;

BB1_1054:
	mov.u32 	%r5543, 8;
	// inline asm
	shf.r.wrap.b32 %r10863, %r18, %r17, %r5543;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r17, %r16, %r5543;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r16, %r23, %r5543;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r23, %r22, %r5543;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r22, %r21, %r5543;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r21, %r20, %r5543;
	// inline asm
	mov.u32 	%r10944, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r20, %r10944, %r5543;
	// inline asm
	bra.uni 	BB1_1127;

BB1_456:
	setp.eq.s32	%p361, %r25, 5;
	mov.u32 	%r10816, %r10825;
	@%p361 bra 	BB1_457;
	bra.uni 	BB1_523;

BB1_457:
	bfe.u32 	%r10816, %r18, 8, 8;
	bra.uni 	BB1_523;

BB1_1316:
	setp.eq.s32	%p920, %r6528, 10;
	@%p920 bra 	BB1_1373;
	bra.uni 	BB1_1317;

BB1_1373:
	mov.u32 	%r6859, 16;
	// inline asm
	shf.r.wrap.b32 %r10894, %r23, %r22, %r6859;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r16, %r23, %r6859;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r17, %r16, %r6859;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r18, %r17, %r6859;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10898, %r19, %r18, %r6859;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10897, %r10895, %r19, %r6859;
	// inline asm
	mov.u32 	%r10896, %r10895;
	bra.uni 	BB1_1378;

BB1_792:
	setp.eq.s32	%p574, %r25, 5;
	@%p574 bra 	BB1_793;
	bra.uni 	BB1_811;

BB1_793:
	mov.u32 	%r4585, 24;
	// inline asm
	shf.r.wrap.b32 %r20, %r22, %r21, %r4585;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r23, %r22, %r4585;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r16, %r23, %r4585;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r17, %r16, %r4585;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r16, %r18, %r17, %r4585;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r19, %r18, %r4585;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r10945, %r19, %r4585;
	// inline asm
	bra.uni 	BB1_865;

BB1_1086:
	setp.eq.s32	%p727, %r27, 21;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p727 bra 	BB1_1087;
	bra.uni 	BB1_1127;

BB1_1087:
	mov.u32 	%r5231, 8;
	// inline asm
	shf.r.wrap.b32 %r10863, %r22, %r21, %r5231;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r21, %r20, %r5231;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r20, %r10941, %r5231;
	// inline asm
	bra.uni 	BB1_1091;

BB1_487:
	setp.eq.s32	%p338, %r25, 21;
	mov.u32 	%r10816, %r10825;
	@%p338 bra 	BB1_488;
	bra.uni 	BB1_523;

BB1_488:
	bfe.u32 	%r10816, %r22, 8, 8;
	bra.uni 	BB1_523;

BB1_823:
	setp.eq.s32	%p551, %r25, 21;
	@%p551 bra 	BB1_824;
	bra.uni 	BB1_811;

BB1_824:
	mov.u32 	%r4273, 24;
	// inline asm
	shf.r.wrap.b32 %r20, %r18, %r17, %r4273;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r19, %r18, %r4273;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r10941, %r19, %r4273;
	// inline asm
	bra.uni 	BB1_864;

BB1_1068:
	setp.eq.s32	%p739, %r27, 13;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p739 bra 	BB1_1069;
	bra.uni 	BB1_1127;

BB1_1069:
	mov.u32 	%r5371, 8;
	// inline asm
	shf.r.wrap.b32 %r10863, %r16, %r23, %r5371;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r23, %r22, %r5371;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r22, %r21, %r5371;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r21, %r20, %r5371;
	// inline asm
	mov.u32 	%r10942, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r20, %r10942, %r5371;
	// inline asm
	bra.uni 	BB1_1073;

BB1_471:
	setp.eq.s32	%p350, %r25, 13;
	mov.u32 	%r10816, %r10825;
	@%p350 bra 	BB1_472;
	bra.uni 	BB1_523;

BB1_472:
	bfe.u32 	%r10816, %r16, 8, 8;
	bra.uni 	BB1_523;

BB1_1349:
	setp.eq.s32	%p897, %r6528, 26;
	@%p897 bra 	BB1_1365;
	bra.uni 	BB1_1350;

BB1_1365:
	mov.u32 	%r6591, 16;
	// inline asm
	shf.r.wrap.b32 %r10894, %r19, %r18, %r6591;
	// inline asm
	mov.u32 	%r10891, 0;
	// inline asm
	shf.r.wrap.b32 %r10893, %r10891, %r19, %r6591;
	// inline asm
	bra.uni 	BB1_1352;

BB1_807:
	setp.eq.s32	%p563, %r25, 13;
	@%p563 bra 	BB1_808;
	bra.uni 	BB1_811;

BB1_808:
	mov.u32 	%r4413, 24;
	// inline asm
	shf.r.wrap.b32 %r20, %r16, %r23, %r4413;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r17, %r16, %r4413;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r18, %r17, %r4413;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r19, %r18, %r4413;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r16, %r10945, %r19, %r4413;
	// inline asm
	bra.uni 	BB1_853;

BB1_1104:
	setp.eq.s32	%p716, %r27, 29;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p716 bra 	BB1_1105;
	bra.uni 	BB1_1127;

BB1_1105:
	mov.u32 	%r10941, 0;
	mov.u32 	%r5123, 8;
	// inline asm
	shf.r.wrap.b32 %r10863, %r20, %r10941, %r5123;
	// inline asm
	bra.uni 	BB1_1109;

BB1_502:
	setp.eq.s32	%p327, %r25, 29;
	mov.u32 	%r10816, %r10825;
	@%p327 bra 	BB1_503;
	bra.uni 	BB1_523;

BB1_503:
	bfe.u32 	%r10816, %r20, 8, 8;
	bra.uni 	BB1_523;

BB1_839:
	setp.eq.s32	%p540, %r25, 29;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	@%p540 bra 	BB1_840;
	bra.uni 	BB1_865;

BB1_840:
	mov.u32 	%r10941, 0;
	mov.u32 	%r4165, 24;
	// inline asm
	shf.r.wrap.b32 %r20, %r10941, %r19, %r4165;
	// inline asm
	bra.uni 	BB1_863;

BB1_329:
	mov.u32 	%r3559, 24;
	// inline asm
	shf.r.wrap.b32 %r3528, %r21, %r20, %r3559;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r22, %r21, %r3559;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r23, %r22, %r3559;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r16, %r23, %r3559;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3544, %r17, %r16, %r3559;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10814, %r18, %r17, %r3559;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10813, %r19, %r18, %r3559;
	// inline asm
	mov.u32 	%r3557, 0;
	// inline asm
	shf.r.wrap.b32 %r10812, %r3557, %r19, %r3559;
	// inline asm
	mov.u32 	%r23, %r3528;
	mov.u32 	%r19, %r3544;
	bra.uni 	BB1_333;

BB1_256:
	setp.eq.s32	%p242, %r25, 3;
	@%p242 bra 	BB1_257;
	bra.uni 	BB1_279;

BB1_257:
	mov.u32 	%r3495, 8;
	// inline asm
	shf.r.wrap.b32 %r3464, %r21, %r20, %r3495;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r22, %r21, %r3495;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r23, %r22, %r3495;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r16, %r23, %r3495;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3480, %r17, %r16, %r3495;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10814, %r18, %r17, %r3495;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10813, %r19, %r18, %r3495;
	// inline asm
	mov.u32 	%r3493, 0;
	// inline asm
	shf.r.wrap.b32 %r10812, %r3493, %r19, %r3495;
	// inline asm
	mov.u32 	%r23, %r3464;
	mov.u32 	%r19, %r3480;
	bra.uni 	BB1_333;

BB1_1049:
	setp.eq.s32	%p753, %r27, 3;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p753 bra 	BB1_1050;
	bra.uni 	BB1_1127;

BB1_1050:
	mov.u32 	%r5577, 24;
	// inline asm
	shf.r.wrap.b32 %r10863, %r19, %r18, %r5577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r18, %r17, %r5577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r17, %r16, %r5577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r16, %r23, %r5577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r23, %r22, %r5577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r22, %r21, %r5577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r21, %r20, %r5577;
	// inline asm
	mov.u32 	%r5576, 0;
	// inline asm
	shf.r.wrap.b32 %r10944, %r20, %r5576, %r5577;
	// inline asm
	bra.uni 	BB1_1127;

BB1_452:
	setp.eq.s32	%p364, %r25, 3;
	mov.u32 	%r10816, %r10825;
	@%p364 bra 	BB1_453;
	bra.uni 	BB1_523;

BB1_453:
	shr.u32 	%r10816, %r19, 24;
	bra.uni 	BB1_523;

BB1_1308:
	setp.eq.s32	%p926, %r6528, 6;
	@%p926 bra 	BB1_1375;
	bra.uni 	BB1_1309;

BB1_1375:
	mov.u32 	%r6946, 16;
	// inline asm
	shf.r.wrap.b32 %r10894, %r22, %r21, %r6946;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r23, %r22, %r6946;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r16, %r23, %r6946;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r17, %r16, %r6946;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10898, %r18, %r17, %r6946;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10897, %r19, %r18, %r6946;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10896, %r10895, %r19, %r6946;
	// inline asm
	bra.uni 	BB1_1378;

BB1_1081:
	setp.eq.s32	%p730, %r27, 19;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p730 bra 	BB1_1082;
	bra.uni 	BB1_1127;

BB1_1082:
	mov.u32 	%r5257, 24;
	// inline asm
	shf.r.wrap.b32 %r10863, %r23, %r22, %r5257;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r22, %r21, %r5257;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r21, %r20, %r5257;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10948, %r20, %r10941, %r5257;
	// inline asm

BB1_1083:
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	bra.uni 	BB1_1127;

BB1_483:
	setp.eq.s32	%p341, %r25, 19;
	mov.u32 	%r10816, %r10825;
	@%p341 bra 	BB1_484;
	bra.uni 	BB1_523;

BB1_484:
	shr.u32 	%r10816, %r23, 24;
	bra.uni 	BB1_523;

BB1_819:
	setp.eq.s32	%p554, %r25, 19;
	@%p554 bra 	BB1_820;
	bra.uni 	BB1_811;

BB1_820:
	mov.u32 	%r4299, 8;
	// inline asm
	shf.r.wrap.b32 %r20, %r17, %r16, %r4299;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r18, %r17, %r4299;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r19, %r18, %r4299;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r10945, %r19, %r4299;
	// inline asm

BB1_851:
	mov.u32 	%r10946, %r10945;
	mov.u32 	%r10947, %r10945;
	mov.u32 	%r16, %r10945;
	bra.uni 	BB1_865;

BB1_1064:
	setp.eq.s32	%p742, %r27, 11;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p742 bra 	BB1_1065;
	bra.uni 	BB1_1127;

BB1_1065:
	mov.u32 	%r5401, 24;
	// inline asm
	shf.r.wrap.b32 %r10863, %r17, %r16, %r5401;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r16, %r23, %r5401;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r23, %r22, %r5401;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r22, %r21, %r5401;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r21, %r20, %r5401;
	// inline asm
	mov.u32 	%r10943, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r20, %r10943, %r5401;
	// inline asm
	mov.u32 	%r10944, %r10943;
	bra.uni 	BB1_1127;

BB1_467:
	setp.eq.s32	%p353, %r25, 11;
	mov.u32 	%r10816, %r10825;
	@%p353 bra 	BB1_468;
	bra.uni 	BB1_523;

BB1_468:
	shr.u32 	%r10816, %r17, 24;
	bra.uni 	BB1_523;

BB1_1341:
	setp.eq.s32	%p903, %r6528, 22;
	@%p903 bra 	BB1_1367;
	bra.uni 	BB1_1342;

BB1_1367:
	mov.u32 	%r6646, 16;
	// inline asm
	shf.r.wrap.b32 %r10894, %r18, %r17, %r6646;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r19, %r18, %r6646;
	// inline asm
	mov.u32 	%r10891, 0;
	// inline asm
	shf.r.wrap.b32 %r10892, %r10891, %r19, %r6646;
	// inline asm
	bra.uni 	BB1_1353;

BB1_803:
	setp.eq.s32	%p566, %r25, 11;
	@%p566 bra 	BB1_804;
	bra.uni 	BB1_811;

BB1_804:
	mov.u32 	%r4443, 8;
	// inline asm
	shf.r.wrap.b32 %r20, %r23, %r22, %r4443;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r16, %r23, %r4443;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r17, %r16, %r4443;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r18, %r17, %r4443;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r16, %r19, %r18, %r4443;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r10945, %r19, %r4443;
	// inline asm
	mov.u32 	%r10946, %r10945;
	bra.uni 	BB1_865;

BB1_1098:
	setp.eq.s32	%p719, %r27, 27;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p719 bra 	BB1_1099;
	bra.uni 	BB1_1127;

BB1_1099:
	mov.u32 	%r5145, 24;
	// inline asm
	shf.r.wrap.b32 %r10863, %r21, %r20, %r5145;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r20, %r10941, %r5145;
	// inline asm

BB1_1100:
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	bra.uni 	BB1_1101;

BB1_498:
	setp.eq.s32	%p330, %r25, 27;
	mov.u32 	%r10816, %r10825;
	@%p330 bra 	BB1_499;
	bra.uni 	BB1_523;

BB1_499:
	shr.u32 	%r10816, %r21, 24;
	bra.uni 	BB1_523;

BB1_834:
	setp.eq.s32	%p543, %r25, 27;
	@%p543 bra 	BB1_835;
	bra.uni 	BB1_811;

BB1_835:
	mov.u32 	%r4187, 8;
	// inline asm
	shf.r.wrap.b32 %r20, %r19, %r18, %r4187;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r10941, %r19, %r4187;
	// inline asm

BB1_836:
	mov.u32 	%r10942, %r10941;
	bra.uni 	BB1_864;

BB1_1056:
	setp.eq.s32	%p748, %r27, 7;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p748 bra 	BB1_1057;
	bra.uni 	BB1_1127;

BB1_1057:
	mov.u32 	%r5485, 24;
	// inline asm
	shf.r.wrap.b32 %r10863, %r18, %r17, %r5485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r17, %r16, %r5485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r16, %r23, %r5485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r23, %r22, %r5485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r22, %r21, %r5485;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r21, %r20, %r5485;
	// inline asm
	mov.u32 	%r10944, 0;
	// inline asm
	shf.r.wrap.b32 %r10943, %r20, %r10944, %r5485;
	// inline asm
	bra.uni 	BB1_1127;

BB1_459:
	setp.eq.s32	%p359, %r25, 7;
	mov.u32 	%r10816, %r10825;
	@%p359 bra 	BB1_460;
	bra.uni 	BB1_523;

BB1_460:
	shr.u32 	%r10816, %r18, 24;
	bra.uni 	BB1_523;

BB1_1323:
	setp.eq.s32	%p915, %r6528, 14;
	@%p915 bra 	BB1_1371;
	bra.uni 	BB1_1324;

BB1_1371:
	mov.u32 	%r6780, 16;
	// inline asm
	shf.r.wrap.b32 %r10894, %r16, %r23, %r6780;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10893, %r17, %r16, %r6780;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10892, %r18, %r17, %r6780;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10891, %r19, %r18, %r6780;
	// inline asm
	mov.u32 	%r10895, 0;
	// inline asm
	shf.r.wrap.b32 %r10898, %r10895, %r19, %r6780;
	// inline asm
	bra.uni 	BB1_1326;

BB1_795:
	setp.eq.s32	%p572, %r25, 7;
	@%p572 bra 	BB1_796;
	bra.uni 	BB1_811;

BB1_796:
	mov.u32 	%r4527, 8;
	// inline asm
	shf.r.wrap.b32 %r20, %r22, %r21, %r4527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r23, %r22, %r4527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r16, %r23, %r4527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r17, %r16, %r4527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r16, %r18, %r17, %r4527;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r19, %r18, %r4527;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r10946, %r10945, %r19, %r4527;
	// inline asm
	bra.uni 	BB1_865;

BB1_1089:
	setp.eq.s32	%p725, %r27, 23;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p725 bra 	BB1_1090;
	bra.uni 	BB1_1127;

BB1_1090:
	mov.u32 	%r5197, 24;
	// inline asm
	shf.r.wrap.b32 %r10863, %r22, %r21, %r5197;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r21, %r20, %r5197;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10947, %r20, %r10941, %r5197;
	// inline asm

BB1_1091:
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10948, %r10941;
	bra.uni 	BB1_1127;

BB1_490:
	setp.eq.s32	%p336, %r25, 23;
	mov.u32 	%r10816, %r10825;
	@%p336 bra 	BB1_491;
	bra.uni 	BB1_523;

BB1_491:
	shr.u32 	%r10816, %r22, 24;
	bra.uni 	BB1_523;

BB1_826:
	setp.eq.s32	%p549, %r25, 23;
	@%p549 bra 	BB1_827;
	bra.uni 	BB1_811;

BB1_827:
	mov.u32 	%r4239, 8;
	// inline asm
	shf.r.wrap.b32 %r20, %r18, %r17, %r4239;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r19, %r18, %r4239;
	// inline asm
	mov.u32 	%r10941, 0;
	// inline asm
	shf.r.wrap.b32 %r10942, %r10941, %r19, %r4239;
	// inline asm
	bra.uni 	BB1_864;

BB1_1071:
	setp.eq.s32	%p737, %r27, 15;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p737 bra 	BB1_1072;
	bra.uni 	BB1_1127;

BB1_1072:
	mov.u32 	%r5325, 24;
	// inline asm
	shf.r.wrap.b32 %r10863, %r16, %r23, %r5325;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10946, %r23, %r22, %r5325;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10947, %r22, %r21, %r5325;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10948, %r21, %r20, %r5325;
	// inline asm
	mov.u32 	%r10942, 0;
	// inline asm
	shf.r.wrap.b32 %r10941, %r20, %r10942, %r5325;
	// inline asm

BB1_1073:
	mov.u32 	%r10943, %r10942;
	mov.u32 	%r10944, %r10942;
	bra.uni 	BB1_1127;

BB1_474:
	setp.eq.s32	%p348, %r25, 15;
	mov.u32 	%r10816, %r10825;
	@%p348 bra 	BB1_475;
	bra.uni 	BB1_523;

BB1_475:
	shr.u32 	%r10816, %r16, 24;
	bra.uni 	BB1_523;

BB1_1358:
	setp.eq.s32	%p892, %r6528, 30;
	@%p892 bra 	BB1_1362;
	bra.uni 	BB1_1359;

BB1_1362:
	mov.u32 	%r10891, 0;
	mov.u32 	%r6544, 16;
	// inline asm
	shf.r.wrap.b32 %r10894, %r10891, %r19, %r6544;
	// inline asm
	bra.uni 	BB1_1361;

BB1_810:
	setp.eq.s32	%p561, %r25, 15;
	@%p561 bra 	BB1_852;
	bra.uni 	BB1_811;

BB1_852:
	mov.u32 	%r4367, 8;
	// inline asm
	shf.r.wrap.b32 %r20, %r16, %r23, %r4367;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10943, %r17, %r16, %r4367;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10942, %r18, %r17, %r4367;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10941, %r19, %r18, %r4367;
	// inline asm
	mov.u32 	%r10945, 0;
	// inline asm
	shf.r.wrap.b32 %r16, %r10945, %r19, %r4367;
	// inline asm

BB1_853:
	mov.u32 	%r10946, %r10945;
	mov.u32 	%r10947, %r10945;
	bra.uni 	BB1_865;

BB1_811:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	bra.uni 	BB1_865;

BB1_1107:
	setp.ne.s32	%p714, %r27, 31;
	mov.u32 	%r10941, %r10944;
	mov.u32 	%r10942, %r10944;
	mov.u32 	%r10943, %r10944;
	mov.u32 	%r10863, %r10944;
	mov.u32 	%r10946, %r10944;
	mov.u32 	%r10947, %r10944;
	mov.u32 	%r10948, %r10944;
	@%p714 bra 	BB1_1127;

	mov.u32 	%r10941, 0;
	mov.u32 	%r5101, 24;
	// inline asm
	shf.r.wrap.b32 %r10863, %r20, %r10941, %r5101;
	// inline asm

BB1_1109:
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;
	mov.u32 	%r10944, %r10941;
	mov.u32 	%r10946, %r10941;

BB1_1101:
	mov.u32 	%r10947, %r10941;
	mov.u32 	%r10948, %r10941;

BB1_1127:
	and.b32  	%r5643, %r24, 3;
	shl.b32 	%r5644, %r5643, 3;
	mov.u32 	%r5645, 1;
	shl.b32 	%r5646, %r5645, %r5644;
	add.s32 	%r1059, %r5646, -1;
	neg.s32 	%r1060, %r5646;
	shr.u32 	%r5642, %r25, 2;
	setp.gt.s32	%p756, %r5642, 3;
	@%p756 bra 	BB1_1135;

	setp.gt.s32	%p762, %r5642, 1;
	@%p762 bra 	BB1_1132;

	setp.eq.s32	%p765, %r5642, 0;
	@%p765 bra 	BB1_1147;
	bra.uni 	BB1_1130;

BB1_1147:
	and.b32  	%r5661, %r1059, %r19;
	and.b32  	%r5662, %r10863, %r1060;
	or.b32  	%r10945, %r5662, %r5661;
	bra.uni 	BB1_1148;

BB1_1135:
	setp.gt.s32	%p757, %r5642, 5;
	@%p757 bra 	BB1_1139;

	setp.eq.s32	%p760, %r5642, 4;
	@%p760 bra 	BB1_1144;
	bra.uni 	BB1_1137;

BB1_1144:
	and.b32  	%r5653, %r1059, %r23;
	and.b32  	%r5654, %r10941, %r1060;
	or.b32  	%r10941, %r5654, %r5653;
	bra.uni 	BB1_1145;

BB1_1132:
	setp.eq.s32	%p763, %r5642, 2;
	@%p763 bra 	BB1_1146;
	bra.uni 	BB1_1133;

BB1_1146:
	and.b32  	%r5657, %r1059, %r17;
	and.b32  	%r5658, %r10947, %r1060;
	or.b32  	%r10947, %r5658, %r5657;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	bra.uni 	BB1_1148;

BB1_1139:
	setp.eq.s32	%p758, %r5642, 6;
	@%p758 bra 	BB1_1143;
	bra.uni 	BB1_1140;

BB1_1143:
	and.b32  	%r5649, %r1059, %r21;
	and.b32  	%r5650, %r10943, %r1060;
	or.b32  	%r10943, %r5650, %r5649;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	bra.uni 	BB1_1145;

BB1_1130:
	setp.eq.s32	%p766, %r5642, 1;
	@%p766 bra 	BB1_1131;
	bra.uni 	BB1_1141;

BB1_1131:
	and.b32  	%r5659, %r1059, %r18;
	and.b32  	%r5660, %r10946, %r1060;
	or.b32  	%r10946, %r5660, %r5659;
	mov.u32 	%r10945, %r19;
	bra.uni 	BB1_1148;

BB1_1137:
	setp.eq.s32	%p761, %r5642, 5;
	@%p761 bra 	BB1_1138;
	bra.uni 	BB1_1141;

BB1_1138:
	and.b32  	%r5651, %r1059, %r22;
	and.b32  	%r5652, %r10942, %r1060;
	or.b32  	%r10942, %r5652, %r5651;
	mov.u32 	%r10941, %r23;
	bra.uni 	BB1_1145;

BB1_1133:
	setp.eq.s32	%p764, %r5642, 3;
	@%p764 bra 	BB1_1134;
	bra.uni 	BB1_1141;

BB1_1134:
	and.b32  	%r5655, %r1059, %r16;
	and.b32  	%r5656, %r10948, %r1060;
	or.b32  	%r10948, %r5656, %r5655;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	bra.uni 	BB1_1148;

BB1_1140:
	setp.ne.s32	%p759, %r5642, 7;
	@%p759 bra 	BB1_1141;

	and.b32  	%r5647, %r1059, %r20;
	and.b32  	%r5648, %r10944, %r1060;
	or.b32  	%r10944, %r5648, %r5647;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	bra.uni 	BB1_1145;

BB1_1141:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;

BB1_1145:
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	mov.u32 	%r10948, %r16;

BB1_1148:
	sub.s32 	%r10949, %r15, %r27;
	bra.uni 	BB1_1536;

BB1_505:
	setp.ne.s32	%p325, %r25, 31;
	mov.u32 	%r10816, %r10825;
	@%p325 bra 	BB1_523;

	shr.u32 	%r10816, %r20, 24;

BB1_523:
	setp.gt.s32	%p367, %r27, 15;
	@%p367 bra 	BB1_555;

	setp.gt.s32	%p391, %r27, 7;
	@%p391 bra 	BB1_540;

	setp.gt.s32	%p403, %r27, 3;
	@%p403 bra 	BB1_533;

	setp.gt.s32	%p409, %r27, 1;
	@%p409 bra 	BB1_530;

	setp.eq.s32	%p412, %r27, 0;
	@%p412 bra 	BB1_601;
	bra.uni 	BB1_528;

BB1_601:
	and.b32  	%r10825, %r19, 255;
	and.b32  	%r3869, %r19, -256;
	or.b32  	%r19, %r10816, %r3869;
	bra.uni 	BB1_602;

BB1_555:
	setp.gt.s32	%p368, %r27, 23;
	@%p368 bra 	BB1_571;

	setp.gt.s32	%p380, %r27, 19;
	@%p380 bra 	BB1_564;

	setp.gt.s32	%p386, %r27, 17;
	@%p386 bra 	BB1_561;

	setp.eq.s32	%p389, %r27, 16;
	@%p389 bra 	BB1_593;
	bra.uni 	BB1_559;

BB1_593:
	and.b32  	%r10825, %r23, 255;
	and.b32  	%r3845, %r23, -256;
	or.b32  	%r23, %r10816, %r3845;
	bra.uni 	BB1_602;

BB1_540:
	setp.gt.s32	%p392, %r27, 11;
	@%p392 bra 	BB1_548;

	setp.gt.s32	%p398, %r27, 9;
	@%p398 bra 	BB1_545;

	setp.eq.s32	%p401, %r27, 8;
	@%p401 bra 	BB1_597;
	bra.uni 	BB1_543;

BB1_597:
	and.b32  	%r10825, %r17, 255;
	and.b32  	%r3857, %r17, -256;
	or.b32  	%r17, %r10816, %r3857;
	bra.uni 	BB1_602;

BB1_571:
	setp.gt.s32	%p369, %r27, 27;
	@%p369 bra 	BB1_579;

	setp.gt.s32	%p375, %r27, 25;
	@%p375 bra 	BB1_576;

	setp.eq.s32	%p378, %r27, 24;
	@%p378 bra 	BB1_589;
	bra.uni 	BB1_574;

BB1_589:
	and.b32  	%r10825, %r21, 255;
	and.b32  	%r3833, %r21, -256;
	or.b32  	%r21, %r10816, %r3833;
	bra.uni 	BB1_602;

BB1_533:
	setp.gt.s32	%p404, %r27, 5;
	@%p404 bra 	BB1_537;

	setp.eq.s32	%p407, %r27, 4;
	@%p407 bra 	BB1_599;
	bra.uni 	BB1_535;

BB1_599:
	and.b32  	%r10825, %r18, 255;
	and.b32  	%r3863, %r18, -256;
	or.b32  	%r18, %r10816, %r3863;
	bra.uni 	BB1_602;

BB1_564:
	setp.gt.s32	%p381, %r27, 21;
	@%p381 bra 	BB1_568;

	setp.eq.s32	%p384, %r27, 20;
	@%p384 bra 	BB1_591;
	bra.uni 	BB1_566;

BB1_591:
	and.b32  	%r10825, %r22, 255;
	and.b32  	%r3839, %r22, -256;
	or.b32  	%r22, %r10816, %r3839;
	bra.uni 	BB1_602;

BB1_548:
	setp.gt.s32	%p393, %r27, 13;
	@%p393 bra 	BB1_552;

	setp.eq.s32	%p396, %r27, 12;
	@%p396 bra 	BB1_595;
	bra.uni 	BB1_550;

BB1_595:
	and.b32  	%r10825, %r16, 255;
	and.b32  	%r3851, %r16, -256;
	or.b32  	%r16, %r10816, %r3851;
	bra.uni 	BB1_602;

BB1_579:
	setp.gt.s32	%p370, %r27, 29;
	@%p370 bra 	BB1_583;

	setp.eq.s32	%p373, %r27, 28;
	@%p373 bra 	BB1_587;
	bra.uni 	BB1_581;

BB1_587:
	and.b32  	%r10825, %r20, 255;
	and.b32  	%r3827, %r20, -256;
	or.b32  	%r20, %r10816, %r3827;
	bra.uni 	BB1_602;

BB1_530:
	setp.eq.s32	%p410, %r27, 2;
	@%p410 bra 	BB1_600;
	bra.uni 	BB1_531;

BB1_600:
	bfe.u32 	%r10825, %r19, 16, 8;
	shl.b32 	%r3865, %r10816, 16;
	and.b32  	%r3866, %r19, -16711681;
	or.b32  	%r19, %r3865, %r3866;
	bra.uni 	BB1_602;

BB1_561:
	setp.eq.s32	%p387, %r27, 18;
	@%p387 bra 	BB1_592;
	bra.uni 	BB1_562;

BB1_592:
	bfe.u32 	%r10825, %r23, 16, 8;
	shl.b32 	%r3841, %r10816, 16;
	and.b32  	%r3842, %r23, -16711681;
	or.b32  	%r23, %r3841, %r3842;
	bra.uni 	BB1_602;

BB1_545:
	setp.eq.s32	%p399, %r27, 10;
	@%p399 bra 	BB1_596;
	bra.uni 	BB1_546;

BB1_596:
	bfe.u32 	%r10825, %r17, 16, 8;
	shl.b32 	%r3853, %r10816, 16;
	and.b32  	%r3854, %r17, -16711681;
	or.b32  	%r17, %r3853, %r3854;
	bra.uni 	BB1_602;

BB1_576:
	setp.eq.s32	%p376, %r27, 26;
	@%p376 bra 	BB1_588;
	bra.uni 	BB1_577;

BB1_588:
	bfe.u32 	%r10825, %r21, 16, 8;
	shl.b32 	%r3829, %r10816, 16;
	and.b32  	%r3830, %r21, -16711681;
	or.b32  	%r21, %r3829, %r3830;
	bra.uni 	BB1_602;

BB1_537:
	setp.eq.s32	%p405, %r27, 6;
	@%p405 bra 	BB1_598;
	bra.uni 	BB1_538;

BB1_598:
	bfe.u32 	%r10825, %r18, 16, 8;
	shl.b32 	%r3859, %r10816, 16;
	and.b32  	%r3860, %r18, -16711681;
	or.b32  	%r18, %r3859, %r3860;
	bra.uni 	BB1_602;

BB1_568:
	setp.eq.s32	%p382, %r27, 22;
	@%p382 bra 	BB1_590;
	bra.uni 	BB1_569;

BB1_590:
	bfe.u32 	%r10825, %r22, 16, 8;
	shl.b32 	%r3835, %r10816, 16;
	and.b32  	%r3836, %r22, -16711681;
	or.b32  	%r22, %r3835, %r3836;
	bra.uni 	BB1_602;

BB1_552:
	setp.eq.s32	%p394, %r27, 14;
	@%p394 bra 	BB1_594;
	bra.uni 	BB1_553;

BB1_594:
	bfe.u32 	%r10825, %r16, 16, 8;
	shl.b32 	%r3847, %r10816, 16;
	and.b32  	%r3848, %r16, -16711681;
	or.b32  	%r16, %r3847, %r3848;
	bra.uni 	BB1_602;

BB1_583:
	setp.eq.s32	%p371, %r27, 30;
	@%p371 bra 	BB1_586;
	bra.uni 	BB1_584;

BB1_586:
	bfe.u32 	%r10825, %r20, 16, 8;
	shl.b32 	%r3823, %r10816, 16;
	and.b32  	%r3824, %r20, -16711681;
	or.b32  	%r20, %r3823, %r3824;
	bra.uni 	BB1_602;

BB1_842:
	setp.ne.s32	%p538, %r25, 30;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	@%p538 bra 	BB1_865;

	mov.u32 	%r10941, 0;
	mov.u32 	%r4154, 16;
	// inline asm
	shf.r.wrap.b32 %r20, %r10941, %r19, %r4154;
	// inline asm

BB1_863:
	mov.u32 	%r10942, %r10941;
	mov.u32 	%r10943, %r10941;

BB1_864:
	mov.u32 	%r10945, %r10941;
	mov.u32 	%r10946, %r10941;
	mov.u32 	%r10947, %r10941;
	mov.u32 	%r16, %r10941;

BB1_865:
	@%p533 bra 	BB1_894;

	setp.gt.s32	%p602, %r25, 7;
	@%p602 bra 	BB1_879;

	setp.gt.s32	%p614, %r25, 3;
	@%p614 bra 	BB1_872;

	setp.eq.s32	%p620, %r25, 1;
	@%p620 bra 	BB1_942;

	setp.eq.s32	%p621, %r25, 2;
	@%p621 bra 	BB1_941;
	bra.uni 	BB1_870;

BB1_941:
	shl.b32 	%r4909, %r611, 8;
	or.b32  	%r4910, %r4909, %r611;
	or.b32  	%r10945, %r4910, %r10945;
	bra.uni 	BB1_871;

BB1_894:
	setp.gt.s32	%p579, %r25, 23;
	@%p579 bra 	BB1_910;

	setp.gt.s32	%p591, %r25, 19;
	@%p591 bra 	BB1_903;

	setp.gt.s32	%p597, %r25, 17;
	@%p597 bra 	BB1_900;

	setp.eq.s32	%p600, %r25, 16;
	@%p600 bra 	BB1_933;
	bra.uni 	BB1_898;

BB1_933:
	mov.u32 	%r4809, 64;
	prmt.b32 	%r4810, %r19, %r19, %r4809;
	mov.u32 	%r4811, 1040;
	prmt.b32 	%r4812, %r4810, %r19, %r4811;
	mov.u32 	%r4813, 16912;
	prmt.b32 	%r4814, %r4812, %r19, %r4813;
	or.b32  	%r10945, %r4814, %r10945;
	or.b32  	%r10946, %r4814, %r10946;
	or.b32  	%r10947, %r4814, %r10947;
	or.b32  	%r10948, %r4814, %r16;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_879:
	setp.gt.s32	%p603, %r25, 11;
	@%p603 bra 	BB1_887;

	setp.gt.s32	%p609, %r25, 9;
	@%p609 bra 	BB1_884;

	setp.eq.s32	%p612, %r25, 8;
	@%p612 bra 	BB1_937;
	bra.uni 	BB1_882;

BB1_937:
	mov.u32 	%r4869, 64;
	prmt.b32 	%r4870, %r19, %r19, %r4869;
	mov.u32 	%r4871, 1040;
	prmt.b32 	%r4872, %r4870, %r19, %r4871;
	mov.u32 	%r4873, 16912;
	prmt.b32 	%r4874, %r4872, %r19, %r4873;
	or.b32  	%r10945, %r4874, %r10945;
	or.b32  	%r10946, %r4874, %r10946;
	bra.uni 	BB1_871;

BB1_910:
	setp.gt.s32	%p580, %r25, 27;
	@%p580 bra 	BB1_918;

	setp.gt.s32	%p586, %r25, 25;
	@%p586 bra 	BB1_915;

	setp.eq.s32	%p589, %r25, 24;
	@%p589 bra 	BB1_928;
	bra.uni 	BB1_913;

BB1_928:
	mov.u32 	%r4749, 64;
	prmt.b32 	%r4750, %r19, %r19, %r4749;
	mov.u32 	%r4751, 1040;
	prmt.b32 	%r4752, %r4750, %r19, %r4751;
	mov.u32 	%r4753, 16912;
	prmt.b32 	%r4754, %r4752, %r19, %r4753;
	or.b32  	%r10945, %r4754, %r10945;
	or.b32  	%r10946, %r4754, %r10946;
	or.b32  	%r10947, %r4754, %r10947;
	or.b32  	%r10948, %r4754, %r16;
	or.b32  	%r10941, %r4754, %r10941;
	or.b32  	%r10942, %r4754, %r10942;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_872:
	setp.gt.s32	%p615, %r25, 5;
	@%p615 bra 	BB1_876;

	setp.eq.s32	%p618, %r25, 4;
	@%p618 bra 	BB1_939;
	bra.uni 	BB1_874;

BB1_939:
	mov.u32 	%r4899, 64;
	prmt.b32 	%r4900, %r19, %r19, %r4899;
	mov.u32 	%r4901, 1040;
	prmt.b32 	%r4902, %r4900, %r19, %r4901;
	mov.u32 	%r4903, 16912;
	prmt.b32 	%r4904, %r4902, %r19, %r4903;
	or.b32  	%r10945, %r4904, %r10945;
	bra.uni 	BB1_871;

BB1_903:
	setp.gt.s32	%p592, %r25, 21;
	@%p592 bra 	BB1_907;

	setp.eq.s32	%p595, %r25, 20;
	@%p595 bra 	BB1_931;
	bra.uni 	BB1_905;

BB1_931:
	mov.u32 	%r4779, 64;
	prmt.b32 	%r4780, %r19, %r19, %r4779;
	mov.u32 	%r4781, 1040;
	prmt.b32 	%r4782, %r4780, %r19, %r4781;
	mov.u32 	%r4783, 16912;
	prmt.b32 	%r4784, %r4782, %r19, %r4783;
	or.b32  	%r10945, %r4784, %r10945;
	or.b32  	%r10946, %r4784, %r10946;
	or.b32  	%r10947, %r4784, %r10947;
	or.b32  	%r10948, %r4784, %r16;
	or.b32  	%r10941, %r4784, %r10941;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_887:
	setp.gt.s32	%p604, %r25, 13;
	@%p604 bra 	BB1_891;

	setp.eq.s32	%p607, %r25, 12;
	@%p607 bra 	BB1_935;
	bra.uni 	BB1_889;

BB1_935:
	mov.u32 	%r4839, 64;
	prmt.b32 	%r4840, %r19, %r19, %r4839;
	mov.u32 	%r4841, 1040;
	prmt.b32 	%r4842, %r4840, %r19, %r4841;
	mov.u32 	%r4843, 16912;
	prmt.b32 	%r4844, %r4842, %r19, %r4843;
	or.b32  	%r10945, %r4844, %r10945;
	or.b32  	%r10946, %r4844, %r10946;
	or.b32  	%r10947, %r4844, %r10947;
	bra.uni 	BB1_871;

BB1_918:
	setp.gt.s32	%p581, %r25, 29;
	@%p581 bra 	BB1_922;

	setp.eq.s32	%p584, %r25, 28;
	@%p584 bra 	BB1_926;
	bra.uni 	BB1_920;

BB1_926:
	mov.u32 	%r4719, 64;
	prmt.b32 	%r4720, %r19, %r19, %r4719;
	mov.u32 	%r4721, 1040;
	prmt.b32 	%r4722, %r4720, %r19, %r4721;
	mov.u32 	%r4723, 16912;
	prmt.b32 	%r4724, %r4722, %r19, %r4723;
	or.b32  	%r10945, %r4724, %r10945;
	or.b32  	%r10946, %r4724, %r10946;
	or.b32  	%r10947, %r4724, %r10947;
	or.b32  	%r10948, %r4724, %r16;
	or.b32  	%r10941, %r4724, %r10941;
	or.b32  	%r10942, %r4724, %r10942;
	or.b32  	%r10943, %r4724, %r10943;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_900:
	setp.eq.s32	%p598, %r25, 18;
	@%p598 bra 	BB1_932;
	bra.uni 	BB1_901;

BB1_932:
	mov.u32 	%r4795, 64;
	prmt.b32 	%r4796, %r19, %r19, %r4795;
	mov.u32 	%r4797, 1040;
	prmt.b32 	%r4798, %r4796, %r19, %r4797;
	mov.u32 	%r4799, 16912;
	prmt.b32 	%r4800, %r4798, %r19, %r4799;
	or.b32  	%r10945, %r4800, %r10945;
	or.b32  	%r10946, %r4800, %r10946;
	or.b32  	%r10947, %r4800, %r10947;
	or.b32  	%r10948, %r4800, %r16;
	shl.b32 	%r4801, %r611, 8;
	or.b32  	%r4802, %r4801, %r611;
	or.b32  	%r10941, %r4802, %r10941;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_884:
	setp.eq.s32	%p610, %r25, 10;
	@%p610 bra 	BB1_936;
	bra.uni 	BB1_885;

BB1_936:
	mov.u32 	%r4855, 64;
	prmt.b32 	%r4856, %r19, %r19, %r4855;
	mov.u32 	%r4857, 1040;
	prmt.b32 	%r4858, %r4856, %r19, %r4857;
	mov.u32 	%r4859, 16912;
	prmt.b32 	%r4860, %r4858, %r19, %r4859;
	or.b32  	%r10945, %r4860, %r10945;
	or.b32  	%r10946, %r4860, %r10946;
	shl.b32 	%r4861, %r611, 8;
	or.b32  	%r4862, %r4861, %r611;
	or.b32  	%r10947, %r4862, %r10947;
	bra.uni 	BB1_871;

BB1_915:
	setp.eq.s32	%p587, %r25, 26;
	@%p587 bra 	BB1_927;
	bra.uni 	BB1_916;

BB1_927:
	mov.u32 	%r4735, 64;
	prmt.b32 	%r4736, %r19, %r19, %r4735;
	mov.u32 	%r4737, 1040;
	prmt.b32 	%r4738, %r4736, %r19, %r4737;
	mov.u32 	%r4739, 16912;
	prmt.b32 	%r4740, %r4738, %r19, %r4739;
	or.b32  	%r10945, %r4740, %r10945;
	or.b32  	%r10946, %r4740, %r10946;
	or.b32  	%r10947, %r4740, %r10947;
	or.b32  	%r10948, %r4740, %r16;
	or.b32  	%r10941, %r4740, %r10941;
	or.b32  	%r10942, %r4740, %r10942;
	shl.b32 	%r4741, %r611, 8;
	or.b32  	%r4742, %r4741, %r611;
	or.b32  	%r10943, %r4742, %r10943;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_876:
	setp.eq.s32	%p616, %r25, 6;
	@%p616 bra 	BB1_938;
	bra.uni 	BB1_877;

BB1_938:
	mov.u32 	%r4885, 64;
	prmt.b32 	%r4886, %r19, %r19, %r4885;
	mov.u32 	%r4887, 1040;
	prmt.b32 	%r4888, %r4886, %r19, %r4887;
	mov.u32 	%r4889, 16912;
	prmt.b32 	%r4890, %r4888, %r19, %r4889;
	or.b32  	%r10945, %r4890, %r10945;
	shl.b32 	%r4891, %r611, 8;
	or.b32  	%r4892, %r4891, %r611;
	or.b32  	%r10946, %r4892, %r10946;
	bra.uni 	BB1_871;

BB1_907:
	setp.eq.s32	%p593, %r25, 22;
	@%p593 bra 	BB1_930;
	bra.uni 	BB1_908;

BB1_930:
	mov.u32 	%r4765, 64;
	prmt.b32 	%r4766, %r19, %r19, %r4765;
	mov.u32 	%r4767, 1040;
	prmt.b32 	%r4768, %r4766, %r19, %r4767;
	mov.u32 	%r4769, 16912;
	prmt.b32 	%r4770, %r4768, %r19, %r4769;
	or.b32  	%r10945, %r4770, %r10945;
	or.b32  	%r10946, %r4770, %r10946;
	or.b32  	%r10947, %r4770, %r10947;
	or.b32  	%r10948, %r4770, %r16;
	or.b32  	%r10941, %r4770, %r10941;
	shl.b32 	%r4771, %r611, 8;
	or.b32  	%r4772, %r4771, %r611;
	or.b32  	%r10942, %r4772, %r10942;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_891:
	setp.eq.s32	%p605, %r25, 14;
	@%p605 bra 	BB1_934;
	bra.uni 	BB1_892;

BB1_934:
	mov.u32 	%r4825, 64;
	prmt.b32 	%r4826, %r19, %r19, %r4825;
	mov.u32 	%r4827, 1040;
	prmt.b32 	%r4828, %r4826, %r19, %r4827;
	mov.u32 	%r4829, 16912;
	prmt.b32 	%r4830, %r4828, %r19, %r4829;
	or.b32  	%r10945, %r4830, %r10945;
	or.b32  	%r10946, %r4830, %r10946;
	or.b32  	%r10947, %r4830, %r10947;
	shl.b32 	%r4831, %r611, 8;
	or.b32  	%r4832, %r4831, %r611;
	or.b32  	%r10948, %r4832, %r16;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_922:
	setp.eq.s32	%p582, %r25, 30;
	@%p582 bra 	BB1_925;
	bra.uni 	BB1_923;

BB1_925:
	mov.u32 	%r4705, 64;
	prmt.b32 	%r4706, %r19, %r19, %r4705;
	mov.u32 	%r4707, 1040;
	prmt.b32 	%r4708, %r4706, %r19, %r4707;
	mov.u32 	%r4709, 16912;
	prmt.b32 	%r4710, %r4708, %r19, %r4709;
	or.b32  	%r10945, %r4710, %r10945;
	or.b32  	%r10946, %r4710, %r10946;
	or.b32  	%r10947, %r4710, %r10947;
	or.b32  	%r10948, %r4710, %r16;
	or.b32  	%r10941, %r4710, %r10941;
	or.b32  	%r10942, %r4710, %r10942;
	or.b32  	%r10943, %r4710, %r10943;
	shl.b32 	%r4711, %r611, 8;
	or.b32  	%r4712, %r4711, %r611;
	or.b32  	%r10944, %r4712, %r20;
	bra.uni 	BB1_1536;

BB1_942:
	or.b32  	%r10945, %r10945, %r611;
	bra.uni 	BB1_871;

BB1_870:
	setp.eq.s32	%p622, %r25, 3;
	@%p622 bra 	BB1_940;
	bra.uni 	BB1_871;

BB1_940:
	shl.b32 	%r4905, %r611, 8;
	or.b32  	%r4906, %r4905, %r611;
	shl.b32 	%r4907, %r611, 16;
	or.b32  	%r4908, %r4906, %r4907;
	or.b32  	%r10945, %r4908, %r10945;
	bra.uni 	BB1_871;

BB1_528:
	setp.eq.s32	%p413, %r27, 1;
	@%p413 bra 	BB1_529;
	bra.uni 	BB1_602;

BB1_529:
	bfe.u32 	%r10825, %r19, 8, 8;
	shl.b32 	%r3867, %r10816, 8;
	and.b32  	%r3868, %r19, -65281;
	or.b32  	%r19, %r3867, %r3868;
	bra.uni 	BB1_602;

BB1_559:
	setp.eq.s32	%p390, %r27, 17;
	@%p390 bra 	BB1_560;
	bra.uni 	BB1_602;

BB1_560:
	bfe.u32 	%r10825, %r23, 8, 8;
	shl.b32 	%r3843, %r10816, 8;
	and.b32  	%r3844, %r23, -65281;
	or.b32  	%r23, %r3843, %r3844;
	bra.uni 	BB1_602;

BB1_543:
	setp.eq.s32	%p402, %r27, 9;
	@%p402 bra 	BB1_544;
	bra.uni 	BB1_602;

BB1_544:
	bfe.u32 	%r10825, %r17, 8, 8;
	shl.b32 	%r3855, %r10816, 8;
	and.b32  	%r3856, %r17, -65281;
	or.b32  	%r17, %r3855, %r3856;
	bra.uni 	BB1_602;

BB1_574:
	setp.eq.s32	%p379, %r27, 25;
	@%p379 bra 	BB1_575;
	bra.uni 	BB1_602;

BB1_575:
	bfe.u32 	%r10825, %r21, 8, 8;
	shl.b32 	%r3831, %r10816, 8;
	and.b32  	%r3832, %r21, -65281;
	or.b32  	%r21, %r3831, %r3832;
	bra.uni 	BB1_602;

BB1_535:
	setp.eq.s32	%p408, %r27, 5;
	@%p408 bra 	BB1_536;
	bra.uni 	BB1_602;

BB1_536:
	bfe.u32 	%r10825, %r18, 8, 8;
	shl.b32 	%r3861, %r10816, 8;
	and.b32  	%r3862, %r18, -65281;
	or.b32  	%r18, %r3861, %r3862;
	bra.uni 	BB1_602;

BB1_566:
	setp.eq.s32	%p385, %r27, 21;
	@%p385 bra 	BB1_567;
	bra.uni 	BB1_602;

BB1_567:
	bfe.u32 	%r10825, %r22, 8, 8;
	shl.b32 	%r3837, %r10816, 8;
	and.b32  	%r3838, %r22, -65281;
	or.b32  	%r22, %r3837, %r3838;
	bra.uni 	BB1_602;

BB1_550:
	setp.eq.s32	%p397, %r27, 13;
	@%p397 bra 	BB1_551;
	bra.uni 	BB1_602;

BB1_551:
	bfe.u32 	%r10825, %r16, 8, 8;
	shl.b32 	%r3849, %r10816, 8;
	and.b32  	%r3850, %r16, -65281;
	or.b32  	%r16, %r3849, %r3850;
	bra.uni 	BB1_602;

BB1_581:
	setp.eq.s32	%p374, %r27, 29;
	@%p374 bra 	BB1_582;
	bra.uni 	BB1_602;

BB1_582:
	bfe.u32 	%r10825, %r20, 8, 8;
	shl.b32 	%r3825, %r10816, 8;
	and.b32  	%r3826, %r20, -65281;
	or.b32  	%r20, %r3825, %r3826;
	bra.uni 	BB1_602;

BB1_531:
	setp.eq.s32	%p411, %r27, 3;
	@%p411 bra 	BB1_532;
	bra.uni 	BB1_602;

BB1_532:
	shr.u32 	%r10825, %r19, 24;
	and.b32  	%r3864, %r19, 16777215;
	prmt.b32 	%r19, %r10816, %r3864, 1620;
	bra.uni 	BB1_602;

BB1_562:
	setp.eq.s32	%p388, %r27, 19;
	@%p388 bra 	BB1_563;
	bra.uni 	BB1_602;

BB1_563:
	shr.u32 	%r10825, %r23, 24;
	and.b32  	%r3840, %r23, 16777215;
	prmt.b32 	%r23, %r10816, %r3840, 1620;
	bra.uni 	BB1_602;

BB1_546:
	setp.eq.s32	%p400, %r27, 11;
	@%p400 bra 	BB1_547;
	bra.uni 	BB1_602;

BB1_547:
	shr.u32 	%r10825, %r17, 24;
	and.b32  	%r3852, %r17, 16777215;
	prmt.b32 	%r17, %r10816, %r3852, 1620;
	bra.uni 	BB1_602;

BB1_577:
	setp.eq.s32	%p377, %r27, 27;
	@%p377 bra 	BB1_578;
	bra.uni 	BB1_602;

BB1_578:
	shr.u32 	%r10825, %r21, 24;
	and.b32  	%r3828, %r21, 16777215;
	prmt.b32 	%r21, %r10816, %r3828, 1620;
	bra.uni 	BB1_602;

BB1_538:
	setp.eq.s32	%p406, %r27, 7;
	@%p406 bra 	BB1_539;
	bra.uni 	BB1_602;

BB1_539:
	shr.u32 	%r10825, %r18, 24;
	and.b32  	%r3858, %r18, 16777215;
	prmt.b32 	%r18, %r10816, %r3858, 1620;
	bra.uni 	BB1_602;

BB1_569:
	setp.eq.s32	%p383, %r27, 23;
	@%p383 bra 	BB1_570;
	bra.uni 	BB1_602;

BB1_570:
	shr.u32 	%r10825, %r22, 24;
	and.b32  	%r3834, %r22, 16777215;
	prmt.b32 	%r22, %r10816, %r3834, 1620;
	bra.uni 	BB1_602;

BB1_553:
	setp.eq.s32	%p395, %r27, 15;
	@%p395 bra 	BB1_554;
	bra.uni 	BB1_602;

BB1_554:
	shr.u32 	%r10825, %r16, 24;
	and.b32  	%r3846, %r16, 16777215;
	prmt.b32 	%r16, %r10816, %r3846, 1620;
	bra.uni 	BB1_602;

BB1_584:
	setp.ne.s32	%p372, %r27, 31;
	@%p372 bra 	BB1_602;

	shr.u32 	%r10825, %r20, 24;
	and.b32  	%r3822, %r20, 16777215;
	prmt.b32 	%r20, %r10816, %r3822, 1620;

BB1_602:
	@%p320 bra 	BB1_638;

	setp.gt.s32	%p438, %r25, 7;
	@%p438 bra 	BB1_621;

	setp.gt.s32	%p450, %r25, 3;
	@%p450 bra 	BB1_613;

	setp.gt.s32	%p456, %r25, 1;
	@%p456 bra 	BB1_609;

	setp.eq.s32	%p459, %r25, 0;
	@%p459 bra 	BB1_694;
	bra.uni 	BB1_607;

BB1_694:
	and.b32  	%r3917, %r19, -256;
	or.b32  	%r10945, %r10825, %r3917;
	bra.uni 	BB1_612;

BB1_638:
	setp.gt.s32	%p415, %r25, 23;
	@%p415 bra 	BB1_662;

	setp.gt.s32	%p427, %r25, 19;
	@%p427 bra 	BB1_648;

	setp.gt.s32	%p433, %r25, 17;
	@%p433 bra 	BB1_644;

	setp.eq.s32	%p436, %r25, 16;
	@%p436 bra 	BB1_686;
	bra.uni 	BB1_642;

BB1_686:
	and.b32  	%r3893, %r23, -256;
	or.b32  	%r10941, %r10825, %r3893;
	bra.uni 	BB1_647;

BB1_621:
	setp.gt.s32	%p439, %r25, 11;
	@%p439 bra 	BB1_630;

	setp.gt.s32	%p445, %r25, 9;
	@%p445 bra 	BB1_626;

	setp.eq.s32	%p448, %r25, 8;
	@%p448 bra 	BB1_690;
	bra.uni 	BB1_624;

BB1_690:
	and.b32  	%r3905, %r17, -256;
	or.b32  	%r10947, %r10825, %r3905;
	bra.uni 	BB1_629;

BB1_662:
	setp.gt.s32	%p416, %r25, 27;
	@%p416 bra 	BB1_671;

	setp.gt.s32	%p422, %r25, 25;
	@%p422 bra 	BB1_667;

	setp.eq.s32	%p425, %r25, 24;
	@%p425 bra 	BB1_682;
	bra.uni 	BB1_665;

BB1_682:
	and.b32  	%r3881, %r21, -256;
	or.b32  	%r10943, %r10825, %r3881;
	bra.uni 	BB1_670;

BB1_613:
	setp.gt.s32	%p451, %r25, 5;
	@%p451 bra 	BB1_617;

	setp.eq.s32	%p454, %r25, 4;
	@%p454 bra 	BB1_692;
	bra.uni 	BB1_615;

BB1_692:
	and.b32  	%r3911, %r18, -256;
	or.b32  	%r10946, %r10825, %r3911;
	bra.uni 	BB1_620;

BB1_648:
	setp.gt.s32	%p428, %r25, 21;
	@%p428 bra 	BB1_652;

	setp.eq.s32	%p431, %r25, 20;
	@%p431 bra 	BB1_684;
	bra.uni 	BB1_650;

BB1_684:
	and.b32  	%r3887, %r22, -256;
	or.b32  	%r10942, %r10825, %r3887;
	bra.uni 	BB1_655;

BB1_630:
	setp.gt.s32	%p440, %r25, 13;
	@%p440 bra 	BB1_634;

	setp.eq.s32	%p443, %r25, 12;
	@%p443 bra 	BB1_688;
	bra.uni 	BB1_632;

BB1_688:
	and.b32  	%r3899, %r16, -256;
	or.b32  	%r10948, %r3899, %r10825;
	bra.uni 	BB1_637;

BB1_671:
	setp.gt.s32	%p417, %r25, 29;
	@%p417 bra 	BB1_675;

	setp.eq.s32	%p420, %r25, 28;
	@%p420 bra 	BB1_680;
	bra.uni 	BB1_673;

BB1_680:
	and.b32  	%r3875, %r20, -256;
	or.b32  	%r10944, %r10825, %r3875;
	bra.uni 	BB1_678;

BB1_609:
	setp.eq.s32	%p457, %r25, 2;
	@%p457 bra 	BB1_693;
	bra.uni 	BB1_610;

BB1_693:
	and.b32  	%r3913, %r19, -16711681;
	shl.b32 	%r3914, %r10825, 16;
	or.b32  	%r10945, %r3914, %r3913;
	bra.uni 	BB1_612;

BB1_644:
	setp.eq.s32	%p434, %r25, 18;
	@%p434 bra 	BB1_685;
	bra.uni 	BB1_645;

BB1_685:
	and.b32  	%r3889, %r23, -16711681;
	shl.b32 	%r3890, %r10825, 16;
	or.b32  	%r10941, %r3890, %r3889;
	bra.uni 	BB1_647;

BB1_626:
	setp.eq.s32	%p446, %r25, 10;
	@%p446 bra 	BB1_689;
	bra.uni 	BB1_627;

BB1_689:
	and.b32  	%r3901, %r17, -16711681;
	shl.b32 	%r3902, %r10825, 16;
	or.b32  	%r10947, %r3902, %r3901;
	bra.uni 	BB1_629;

BB1_667:
	setp.eq.s32	%p423, %r25, 26;
	@%p423 bra 	BB1_681;
	bra.uni 	BB1_668;

BB1_681:
	and.b32  	%r3877, %r21, -16711681;
	shl.b32 	%r3878, %r10825, 16;
	or.b32  	%r10943, %r3878, %r3877;
	bra.uni 	BB1_670;

BB1_617:
	setp.eq.s32	%p452, %r25, 6;
	@%p452 bra 	BB1_691;
	bra.uni 	BB1_618;

BB1_691:
	and.b32  	%r3907, %r18, -16711681;
	shl.b32 	%r3908, %r10825, 16;
	or.b32  	%r10946, %r3908, %r3907;
	bra.uni 	BB1_620;

BB1_652:
	setp.eq.s32	%p429, %r25, 22;
	@%p429 bra 	BB1_683;
	bra.uni 	BB1_653;

BB1_683:
	and.b32  	%r3883, %r22, -16711681;
	shl.b32 	%r3884, %r10825, 16;
	or.b32  	%r10942, %r3884, %r3883;
	bra.uni 	BB1_655;

BB1_634:
	setp.eq.s32	%p441, %r25, 14;
	@%p441 bra 	BB1_687;
	bra.uni 	BB1_635;

BB1_687:
	and.b32  	%r3895, %r16, -16711681;
	shl.b32 	%r3896, %r10825, 16;
	or.b32  	%r10948, %r3896, %r3895;
	bra.uni 	BB1_637;

BB1_675:
	setp.eq.s32	%p418, %r25, 30;
	@%p418 bra 	BB1_679;
	bra.uni 	BB1_676;

BB1_679:
	and.b32  	%r3871, %r20, -16711681;
	shl.b32 	%r3872, %r10825, 16;
	or.b32  	%r10944, %r3872, %r3871;
	bra.uni 	BB1_678;

BB1_898:
	setp.eq.s32	%p601, %r25, 17;
	@%p601 bra 	BB1_899;
	bra.uni 	BB1_871;

BB1_899:
	mov.u32 	%r4803, 64;
	prmt.b32 	%r4804, %r19, %r19, %r4803;
	mov.u32 	%r4805, 1040;
	prmt.b32 	%r4806, %r4804, %r19, %r4805;
	mov.u32 	%r4807, 16912;
	prmt.b32 	%r4808, %r4806, %r19, %r4807;
	or.b32  	%r10945, %r4808, %r10945;
	or.b32  	%r10946, %r4808, %r10946;
	or.b32  	%r10947, %r4808, %r10947;
	or.b32  	%r10948, %r4808, %r16;
	or.b32  	%r10941, %r10941, %r611;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_882:
	setp.eq.s32	%p613, %r25, 9;
	@%p613 bra 	BB1_883;
	bra.uni 	BB1_871;

BB1_883:
	mov.u32 	%r4863, 64;
	prmt.b32 	%r4864, %r19, %r19, %r4863;
	mov.u32 	%r4865, 1040;
	prmt.b32 	%r4866, %r4864, %r19, %r4865;
	mov.u32 	%r4867, 16912;
	prmt.b32 	%r4868, %r4866, %r19, %r4867;
	or.b32  	%r10945, %r4868, %r10945;
	or.b32  	%r10946, %r4868, %r10946;
	or.b32  	%r10947, %r10947, %r611;
	bra.uni 	BB1_871;

BB1_913:
	setp.eq.s32	%p590, %r25, 25;
	@%p590 bra 	BB1_914;
	bra.uni 	BB1_909;

BB1_914:
	mov.u32 	%r4743, 64;
	prmt.b32 	%r4744, %r19, %r19, %r4743;
	mov.u32 	%r4745, 1040;
	prmt.b32 	%r4746, %r4744, %r19, %r4745;
	mov.u32 	%r4747, 16912;
	prmt.b32 	%r4748, %r4746, %r19, %r4747;
	or.b32  	%r10945, %r4748, %r10945;
	or.b32  	%r10946, %r4748, %r10946;
	or.b32  	%r10947, %r4748, %r10947;
	or.b32  	%r10948, %r4748, %r16;
	or.b32  	%r10941, %r4748, %r10941;
	or.b32  	%r10942, %r4748, %r10942;
	or.b32  	%r10943, %r10943, %r611;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_874:
	setp.eq.s32	%p619, %r25, 5;
	@%p619 bra 	BB1_875;
	bra.uni 	BB1_871;

BB1_875:
	mov.u32 	%r4893, 64;
	prmt.b32 	%r4894, %r19, %r19, %r4893;
	mov.u32 	%r4895, 1040;
	prmt.b32 	%r4896, %r4894, %r19, %r4895;
	mov.u32 	%r4897, 16912;
	prmt.b32 	%r4898, %r4896, %r19, %r4897;
	or.b32  	%r10945, %r4898, %r10945;
	or.b32  	%r10946, %r10946, %r611;
	bra.uni 	BB1_871;

BB1_905:
	setp.eq.s32	%p596, %r25, 21;
	@%p596 bra 	BB1_906;
	bra.uni 	BB1_871;

BB1_906:
	mov.u32 	%r4773, 64;
	prmt.b32 	%r4774, %r19, %r19, %r4773;
	mov.u32 	%r4775, 1040;
	prmt.b32 	%r4776, %r4774, %r19, %r4775;
	mov.u32 	%r4777, 16912;
	prmt.b32 	%r4778, %r4776, %r19, %r4777;
	or.b32  	%r10945, %r4778, %r10945;
	or.b32  	%r10946, %r4778, %r10946;
	or.b32  	%r10947, %r4778, %r10947;
	or.b32  	%r10948, %r4778, %r16;
	or.b32  	%r10941, %r4778, %r10941;
	or.b32  	%r10942, %r10942, %r611;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_889:
	setp.eq.s32	%p608, %r25, 13;
	@%p608 bra 	BB1_890;
	bra.uni 	BB1_871;

BB1_890:
	mov.u32 	%r4833, 64;
	prmt.b32 	%r4834, %r19, %r19, %r4833;
	mov.u32 	%r4835, 1040;
	prmt.b32 	%r4836, %r4834, %r19, %r4835;
	mov.u32 	%r4837, 16912;
	prmt.b32 	%r4838, %r4836, %r19, %r4837;
	or.b32  	%r10945, %r4838, %r10945;
	or.b32  	%r10946, %r4838, %r10946;
	or.b32  	%r10947, %r4838, %r10947;
	or.b32  	%r10948, %r16, %r611;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_920:
	setp.eq.s32	%p585, %r25, 29;
	@%p585 bra 	BB1_921;
	bra.uni 	BB1_909;

BB1_921:
	mov.u32 	%r4713, 64;
	prmt.b32 	%r4714, %r19, %r19, %r4713;
	mov.u32 	%r4715, 1040;
	prmt.b32 	%r4716, %r4714, %r19, %r4715;
	mov.u32 	%r4717, 16912;
	prmt.b32 	%r4718, %r4716, %r19, %r4717;
	or.b32  	%r10945, %r4718, %r10945;
	or.b32  	%r10946, %r4718, %r10946;
	or.b32  	%r10947, %r4718, %r10947;
	or.b32  	%r10948, %r4718, %r16;
	or.b32  	%r10941, %r4718, %r10941;
	or.b32  	%r10942, %r4718, %r10942;
	or.b32  	%r10943, %r4718, %r10943;
	or.b32  	%r10944, %r20, %r611;
	bra.uni 	BB1_1536;

BB1_901:
	setp.eq.s32	%p599, %r25, 19;
	@%p599 bra 	BB1_902;
	bra.uni 	BB1_871;

BB1_902:
	mov.u32 	%r4785, 64;
	prmt.b32 	%r4786, %r19, %r19, %r4785;
	mov.u32 	%r4787, 1040;
	prmt.b32 	%r4788, %r4786, %r19, %r4787;
	mov.u32 	%r4789, 16912;
	prmt.b32 	%r4790, %r4788, %r19, %r4789;
	or.b32  	%r10945, %r4790, %r10945;
	or.b32  	%r10946, %r4790, %r10946;
	or.b32  	%r10947, %r4790, %r10947;
	or.b32  	%r10948, %r4790, %r16;
	shl.b32 	%r4791, %r611, 8;
	or.b32  	%r4792, %r4791, %r611;
	shl.b32 	%r4793, %r611, 16;
	or.b32  	%r4794, %r4792, %r4793;
	or.b32  	%r10941, %r4794, %r10941;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_885:
	setp.eq.s32	%p611, %r25, 11;
	@%p611 bra 	BB1_886;
	bra.uni 	BB1_871;

BB1_886:
	mov.u32 	%r4845, 64;
	prmt.b32 	%r4846, %r19, %r19, %r4845;
	mov.u32 	%r4847, 1040;
	prmt.b32 	%r4848, %r4846, %r19, %r4847;
	mov.u32 	%r4849, 16912;
	prmt.b32 	%r4850, %r4848, %r19, %r4849;
	or.b32  	%r10945, %r4850, %r10945;
	or.b32  	%r10946, %r4850, %r10946;
	shl.b32 	%r4851, %r611, 8;
	or.b32  	%r4852, %r4851, %r611;
	shl.b32 	%r4853, %r611, 16;
	or.b32  	%r4854, %r4852, %r4853;
	or.b32  	%r10947, %r4854, %r10947;
	bra.uni 	BB1_871;

BB1_916:
	setp.eq.s32	%p588, %r25, 27;
	@%p588 bra 	BB1_917;
	bra.uni 	BB1_909;

BB1_917:
	mov.u32 	%r4725, 64;
	prmt.b32 	%r4726, %r19, %r19, %r4725;
	mov.u32 	%r4727, 1040;
	prmt.b32 	%r4728, %r4726, %r19, %r4727;
	mov.u32 	%r4729, 16912;
	prmt.b32 	%r4730, %r4728, %r19, %r4729;
	or.b32  	%r10945, %r4730, %r10945;
	or.b32  	%r10946, %r4730, %r10946;
	or.b32  	%r10947, %r4730, %r10947;
	or.b32  	%r10948, %r4730, %r16;
	or.b32  	%r10941, %r4730, %r10941;
	or.b32  	%r10942, %r4730, %r10942;
	shl.b32 	%r4731, %r611, 8;
	or.b32  	%r4732, %r4731, %r611;
	shl.b32 	%r4733, %r611, 16;
	or.b32  	%r4734, %r4732, %r4733;
	or.b32  	%r10943, %r4734, %r10943;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_877:
	setp.eq.s32	%p617, %r25, 7;
	@%p617 bra 	BB1_878;
	bra.uni 	BB1_871;

BB1_878:
	mov.u32 	%r4875, 64;
	prmt.b32 	%r4876, %r19, %r19, %r4875;
	mov.u32 	%r4877, 1040;
	prmt.b32 	%r4878, %r4876, %r19, %r4877;
	mov.u32 	%r4879, 16912;
	prmt.b32 	%r4880, %r4878, %r19, %r4879;
	or.b32  	%r10945, %r4880, %r10945;
	shl.b32 	%r4881, %r611, 8;
	or.b32  	%r4882, %r4881, %r611;
	shl.b32 	%r4883, %r611, 16;
	or.b32  	%r4884, %r4882, %r4883;
	or.b32  	%r10946, %r4884, %r10946;
	bra.uni 	BB1_871;

BB1_908:
	setp.eq.s32	%p594, %r25, 23;
	@%p594 bra 	BB1_929;
	bra.uni 	BB1_909;

BB1_929:
	mov.u32 	%r4755, 64;
	prmt.b32 	%r4756, %r19, %r19, %r4755;
	mov.u32 	%r4757, 1040;
	prmt.b32 	%r4758, %r4756, %r19, %r4757;
	mov.u32 	%r4759, 16912;
	prmt.b32 	%r4760, %r4758, %r19, %r4759;
	or.b32  	%r10945, %r4760, %r10945;
	or.b32  	%r10946, %r4760, %r10946;
	or.b32  	%r10947, %r4760, %r10947;
	or.b32  	%r10948, %r4760, %r16;
	or.b32  	%r10941, %r4760, %r10941;
	shl.b32 	%r4761, %r611, 8;
	or.b32  	%r4762, %r4761, %r611;
	shl.b32 	%r4763, %r611, 16;
	or.b32  	%r4764, %r4762, %r4763;
	or.b32  	%r10942, %r4764, %r10942;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_892:
	setp.eq.s32	%p606, %r25, 15;
	@%p606 bra 	BB1_893;
	bra.uni 	BB1_871;

BB1_893:
	mov.u32 	%r4815, 64;
	prmt.b32 	%r4816, %r19, %r19, %r4815;
	mov.u32 	%r4817, 1040;
	prmt.b32 	%r4818, %r4816, %r19, %r4817;
	mov.u32 	%r4819, 16912;
	prmt.b32 	%r4820, %r4818, %r19, %r4819;
	or.b32  	%r10945, %r4820, %r10945;
	or.b32  	%r10946, %r4820, %r10946;
	or.b32  	%r10947, %r4820, %r10947;
	shl.b32 	%r4821, %r611, 8;
	or.b32  	%r4822, %r4821, %r611;
	shl.b32 	%r4823, %r611, 16;
	or.b32  	%r4824, %r4822, %r4823;
	or.b32  	%r10948, %r4824, %r16;
	mov.u32 	%r10944, %r20;
	bra.uni 	BB1_1536;

BB1_871:
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10948, %r16;
	bra.uni 	BB1_1536;

BB1_923:
	setp.ne.s32	%p583, %r25, 31;
	@%p583 bra 	BB1_909;

	mov.u32 	%r4695, 64;
	prmt.b32 	%r4696, %r19, %r19, %r4695;
	mov.u32 	%r4697, 1040;
	prmt.b32 	%r4698, %r4696, %r19, %r4697;
	mov.u32 	%r4699, 16912;
	prmt.b32 	%r4700, %r4698, %r19, %r4699;
	or.b32  	%r10945, %r4700, %r10945;
	or.b32  	%r10946, %r4700, %r10946;
	or.b32  	%r10947, %r4700, %r10947;
	or.b32  	%r10948, %r4700, %r16;
	or.b32  	%r10941, %r4700, %r10941;
	or.b32  	%r10942, %r4700, %r10942;
	or.b32  	%r10943, %r4700, %r10943;
	shl.b32 	%r4701, %r611, 8;
	or.b32  	%r4702, %r4701, %r611;
	shl.b32 	%r4703, %r611, 16;
	or.b32  	%r4704, %r4702, %r4703;
	or.b32  	%r10944, %r4704, %r20;
	bra.uni 	BB1_1536;

BB1_909:
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10948, %r16;
	bra.uni 	BB1_1536;

BB1_607:
	setp.eq.s32	%p460, %r25, 1;
	@%p460 bra 	BB1_608;
	bra.uni 	BB1_10;

BB1_608:
	and.b32  	%r3915, %r19, -65281;
	shl.b32 	%r3916, %r10825, 8;
	or.b32  	%r10945, %r3916, %r3915;
	bra.uni 	BB1_612;

BB1_642:
	setp.eq.s32	%p437, %r25, 17;
	@%p437 bra 	BB1_643;
	bra.uni 	BB1_10;

BB1_643:
	and.b32  	%r3891, %r23, -65281;
	shl.b32 	%r3892, %r10825, 8;
	or.b32  	%r10941, %r3892, %r3891;
	bra.uni 	BB1_647;

BB1_624:
	setp.eq.s32	%p449, %r25, 9;
	@%p449 bra 	BB1_625;
	bra.uni 	BB1_10;

BB1_625:
	and.b32  	%r3903, %r17, -65281;
	shl.b32 	%r3904, %r10825, 8;
	or.b32  	%r10947, %r3904, %r3903;
	bra.uni 	BB1_629;

BB1_665:
	setp.eq.s32	%p426, %r25, 25;
	@%p426 bra 	BB1_666;
	bra.uni 	BB1_10;

BB1_666:
	and.b32  	%r3879, %r21, -65281;
	shl.b32 	%r3880, %r10825, 8;
	or.b32  	%r10943, %r3880, %r3879;
	bra.uni 	BB1_670;

BB1_615:
	setp.eq.s32	%p455, %r25, 5;
	@%p455 bra 	BB1_616;
	bra.uni 	BB1_10;

BB1_616:
	and.b32  	%r3909, %r18, -65281;
	shl.b32 	%r3910, %r10825, 8;
	or.b32  	%r10946, %r3910, %r3909;
	bra.uni 	BB1_620;

BB1_650:
	setp.eq.s32	%p432, %r25, 21;
	@%p432 bra 	BB1_651;
	bra.uni 	BB1_10;

BB1_651:
	and.b32  	%r3885, %r22, -65281;
	shl.b32 	%r3886, %r10825, 8;
	or.b32  	%r10942, %r3886, %r3885;
	bra.uni 	BB1_655;

BB1_632:
	setp.eq.s32	%p444, %r25, 13;
	@%p444 bra 	BB1_633;
	bra.uni 	BB1_10;

BB1_633:
	and.b32  	%r3897, %r16, -65281;
	shl.b32 	%r3898, %r10825, 8;
	or.b32  	%r10948, %r3898, %r3897;
	bra.uni 	BB1_637;

BB1_673:
	setp.eq.s32	%p421, %r25, 29;
	@%p421 bra 	BB1_674;
	bra.uni 	BB1_10;

BB1_674:
	and.b32  	%r3873, %r20, -65281;
	shl.b32 	%r3874, %r10825, 8;
	or.b32  	%r10944, %r3874, %r3873;
	bra.uni 	BB1_678;

BB1_610:
	setp.eq.s32	%p458, %r25, 3;
	@%p458 bra 	BB1_611;
	bra.uni 	BB1_10;

BB1_611:
	and.b32  	%r3912, %r19, 16777215;
	prmt.b32 	%r10945, %r10825, %r3912, 1620;
	bra.uni 	BB1_612;

BB1_645:
	setp.eq.s32	%p435, %r25, 19;
	@%p435 bra 	BB1_646;
	bra.uni 	BB1_10;

BB1_646:
	and.b32  	%r3888, %r23, 16777215;
	prmt.b32 	%r10941, %r10825, %r3888, 1620;

BB1_647:
	mov.u32 	%r10942, %r22;
	bra.uni 	BB1_656;

BB1_627:
	setp.eq.s32	%p447, %r25, 11;
	@%p447 bra 	BB1_628;
	bra.uni 	BB1_10;

BB1_628:
	and.b32  	%r3900, %r17, 16777215;
	prmt.b32 	%r10947, %r10825, %r3900, 1620;

BB1_629:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	bra.uni 	BB1_661;

BB1_668:
	setp.eq.s32	%p424, %r25, 27;
	@%p424 bra 	BB1_669;
	bra.uni 	BB1_10;

BB1_669:
	and.b32  	%r3876, %r21, 16777215;
	prmt.b32 	%r10943, %r10825, %r3876, 1620;

BB1_670:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	bra.uni 	BB1_657;

BB1_618:
	setp.eq.s32	%p453, %r25, 7;
	@%p453 bra 	BB1_619;
	bra.uni 	BB1_10;

BB1_619:
	and.b32  	%r3906, %r18, 16777215;
	prmt.b32 	%r10946, %r10825, %r3906, 1620;

BB1_620:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	bra.uni 	BB1_660;

BB1_653:
	setp.eq.s32	%p430, %r25, 23;
	@%p430 bra 	BB1_654;
	bra.uni 	BB1_10;

BB1_654:
	and.b32  	%r3882, %r22, 16777215;
	prmt.b32 	%r10942, %r10825, %r3882, 1620;

BB1_655:
	mov.u32 	%r10941, %r23;
	bra.uni 	BB1_656;

BB1_635:
	setp.eq.s32	%p442, %r25, 15;
	@%p442 bra 	BB1_636;
	bra.uni 	BB1_10;

BB1_636:
	and.b32  	%r3894, %r16, 16777215;
	prmt.b32 	%r10948, %r10825, %r3894, 1620;

BB1_637:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	bra.uni 	BB1_1535;

BB1_676:
	setp.ne.s32	%p419, %r25, 31;
	@%p419 bra 	BB1_10;

	and.b32  	%r3870, %r20, 16777215;
	prmt.b32 	%r10944, %r10825, %r3870, 1620;

BB1_678:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	bra.uni 	BB1_658;

BB1_135:
	setp.eq.s32	%p172, %r25, 1;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p172 bra 	BB1_136;
	bra.uni 	BB1_213;

BB1_136:
	mov.u32 	%r2961, 24;
	// inline asm
	shf.r.wrap.b32 %r10787, %r21, %r20, %r2961;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r22, %r21, %r2961;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r23, %r22, %r2961;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r16, %r23, %r2961;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10791, %r17, %r16, %r2961;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10790, %r18, %r17, %r2961;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10789, %r19, %r18, %r2961;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	shf.r.wrap.b32 %r10788, %r2959, %r19, %r2961;
	// inline asm
	bra.uni 	BB1_213;

BB1_167:
	setp.eq.s32	%p149, %r25, 17;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p149 bra 	BB1_168;
	bra.uni 	BB1_213;

BB1_168:
	mov.u32 	%r2617, 24;
	// inline asm
	shf.r.wrap.b32 %r10787, %r17, %r16, %r2617;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r18, %r17, %r2617;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r19, %r18, %r2617;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10784, %r10788, %r19, %r2617;
	// inline asm
	bra.uni 	BB1_199;

BB1_707:
	setp.eq.s32	%p495, %r15, 10;
	@%p495 bra 	BB1_708;
	bra.uni 	BB1_10;

BB1_708:
	shl.b32 	%r4031, %r17, 8;
	and.b32  	%r4032, %r4031, 65280;
	bfe.u32 	%r4033, %r17, 8, 8;
	or.b32  	%r10947, %r4032, %r4033;
	mov.u32 	%r10949, 10;
	bra.uni 	BB1_769;

BB1_150:
	setp.eq.s32	%p161, %r25, 9;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p161 bra 	BB1_151;
	bra.uni 	BB1_213;

BB1_151:
	mov.u32 	%r2773, 24;
	// inline asm
	shf.r.wrap.b32 %r10787, %r23, %r22, %r2773;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r16, %r23, %r2773;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r17, %r16, %r2773;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r18, %r17, %r2773;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10791, %r19, %r18, %r2773;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10790, %r10788, %r19, %r2773;
	// inline asm
	mov.u32 	%r10789, %r10788;
	bra.uni 	BB1_213;

BB1_735:
	setp.eq.s32	%p474, %r15, 25;
	@%p474 bra 	BB1_736;
	bra.uni 	BB1_10;

BB1_736:
	or.b32  	%r3951, %r21, %r22;
	and.b32  	%r3952, %r22, 16777215;
	prmt.b32 	%r10942, %r21, %r3952, 1620;
	shr.u32 	%r10943, %r3951, 24;
	mov.u32 	%r10949, 25;
	mov.u32 	%r10941, %r23;
	bra.uni 	BB1_756;

BB1_182:
	setp.eq.s32	%p138, %r25, 25;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p138 bra 	BB1_183;
	bra.uni 	BB1_213;

BB1_183:
	mov.u32 	%r2493, 24;
	// inline asm
	shf.r.wrap.b32 %r10787, %r19, %r18, %r2493;
	// inline asm
	mov.u32 	%r10784, 0;
	// inline asm
	shf.r.wrap.b32 %r10786, %r10784, %r19, %r2493;
	// inline asm
	bra.uni 	BB1_187;

BB1_699:
	setp.eq.s32	%p501, %r15, 6;
	@%p501 bra 	BB1_700;
	bra.uni 	BB1_10;

BB1_700:
	shl.b32 	%r4052, %r18, 8;
	and.b32  	%r4053, %r4052, 65280;
	bfe.u32 	%r4054, %r18, 8, 8;
	or.b32  	%r10946, %r4053, %r4054;
	mov.u32 	%r10949, 6;
	bra.uni 	BB1_772;

BB1_142:
	setp.eq.s32	%p167, %r25, 5;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p167 bra 	BB1_143;
	bra.uni 	BB1_213;

BB1_143:
	mov.u32 	%r2863, 24;
	// inline asm
	shf.r.wrap.b32 %r10787, %r22, %r21, %r2863;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r23, %r22, %r2863;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r16, %r23, %r2863;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r17, %r16, %r2863;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10791, %r18, %r17, %r2863;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10790, %r19, %r18, %r2863;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10789, %r10788, %r19, %r2863;
	// inline asm
	bra.uni 	BB1_213;

BB1_727:
	setp.eq.s32	%p480, %r15, 21;
	@%p480 bra 	BB1_728;
	bra.uni 	BB1_10;

BB1_728:
	or.b32  	%r3972, %r22, %r23;
	and.b32  	%r3973, %r23, 16777215;
	prmt.b32 	%r10941, %r22, %r3973, 1620;
	shr.u32 	%r10942, %r3972, 24;
	mov.u32 	%r10949, 21;
	bra.uni 	BB1_755;

BB1_174:
	setp.eq.s32	%p144, %r25, 21;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p144 bra 	BB1_175;
	bra.uni 	BB1_213;

BB1_175:
	mov.u32 	%r2551, 24;
	// inline asm
	shf.r.wrap.b32 %r10787, %r18, %r17, %r2551;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r19, %r18, %r2551;
	// inline asm
	mov.u32 	%r10784, 0;
	// inline asm
	shf.r.wrap.b32 %r10785, %r10784, %r19, %r2551;
	// inline asm
	bra.uni 	BB1_188;

BB1_714:
	setp.eq.s32	%p490, %r15, 14;
	@%p490 bra 	BB1_715;
	bra.uni 	BB1_10;

BB1_715:
	shl.b32 	%r4010, %r16, 8;
	and.b32  	%r4011, %r4010, 65280;
	bfe.u32 	%r4012, %r16, 8, 8;
	or.b32  	%r10948, %r4011, %r4012;
	mov.u32 	%r10949, 14;
	bra.uni 	BB1_765;

BB1_157:
	setp.eq.s32	%p156, %r25, 13;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p156 bra 	BB1_158;
	bra.uni 	BB1_213;

BB1_158:
	mov.u32 	%r2691, 24;
	// inline asm
	shf.r.wrap.b32 %r10787, %r16, %r23, %r2691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r17, %r16, %r2691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r18, %r17, %r2691;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r19, %r18, %r2691;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10791, %r10788, %r19, %r2691;
	// inline asm
	bra.uni 	BB1_162;

BB1_742:
	setp.eq.s32	%p469, %r15, 29;
	@%p469 bra 	BB1_743;
	bra.uni 	BB1_10;

BB1_743:
	or.b32  	%r3930, %r20, %r21;
	and.b32  	%r3931, %r21, 16777215;
	prmt.b32 	%r10943, %r20, %r3931, 1620;
	shr.u32 	%r10944, %r3930, 24;
	mov.u32 	%r10949, 29;
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	bra.uni 	BB1_757;

BB1_191:
	setp.eq.s32	%p133, %r25, 29;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p133 bra 	BB1_192;
	bra.uni 	BB1_213;

BB1_192:
	mov.u32 	%r10784, 0;
	mov.u32 	%r2443, 24;
	// inline asm
	shf.r.wrap.b32 %r10787, %r10784, %r19, %r2443;
	// inline asm
	bra.uni 	BB1_196;

BB1_284:
	setp.eq.s32	%p221, %r25, 17;
	@%p221 bra 	BB1_285;
	bra.uni 	BB1_279;

BB1_285:
	mov.u32 	%r3215, 24;
	// inline asm
	shf.r.wrap.b32 %r23, %r17, %r16, %r3215;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r18, %r17, %r3215;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r19, %r18, %r3215;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r10808, %r10812, %r19, %r3215;
	// inline asm
	bra.uni 	BB1_319;

BB1_268:
	setp.eq.s32	%p233, %r25, 9;
	@%p233 bra 	BB1_269;
	bra.uni 	BB1_279;

BB1_269:
	mov.u32 	%r3371, 24;
	// inline asm
	shf.r.wrap.b32 %r3348, %r23, %r22, %r3371;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r16, %r23, %r3371;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r17, %r16, %r3371;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r18, %r17, %r3371;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3364, %r19, %r18, %r3371;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r10814, %r10812, %r19, %r3371;
	// inline asm
	mov.u32 	%r23, %r3348;
	mov.u32 	%r10813, %r10812;
	mov.u32 	%r19, %r3364;
	bra.uni 	BB1_333;

BB1_299:
	setp.eq.s32	%p210, %r25, 25;
	@%p210 bra 	BB1_300;
	bra.uni 	BB1_279;

BB1_300:
	mov.u32 	%r3091, 24;
	// inline asm
	shf.r.wrap.b32 %r23, %r19, %r18, %r3091;
	// inline asm
	mov.u32 	%r10808, 0;
	// inline asm
	shf.r.wrap.b32 %r10810, %r10808, %r19, %r3091;
	// inline asm
	bra.uni 	BB1_304;

BB1_260:
	setp.eq.s32	%p239, %r25, 5;
	@%p239 bra 	BB1_261;
	bra.uni 	BB1_279;

BB1_261:
	mov.u32 	%r3461, 24;
	// inline asm
	shf.r.wrap.b32 %r3434, %r22, %r21, %r3461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r23, %r22, %r3461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r16, %r23, %r3461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r17, %r16, %r3461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3450, %r18, %r17, %r3461;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10814, %r19, %r18, %r3461;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r10813, %r10812, %r19, %r3461;
	// inline asm
	mov.u32 	%r23, %r3434;
	mov.u32 	%r19, %r3450;
	bra.uni 	BB1_333;

BB1_291:
	setp.eq.s32	%p216, %r25, 21;
	@%p216 bra 	BB1_292;
	bra.uni 	BB1_279;

BB1_292:
	mov.u32 	%r3149, 24;
	// inline asm
	shf.r.wrap.b32 %r23, %r18, %r17, %r3149;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r19, %r18, %r3149;
	// inline asm
	mov.u32 	%r10808, 0;
	// inline asm
	shf.r.wrap.b32 %r10809, %r10808, %r19, %r3149;
	// inline asm
	bra.uni 	BB1_332;

BB1_275:
	setp.eq.s32	%p228, %r25, 13;
	@%p228 bra 	BB1_276;
	bra.uni 	BB1_279;

BB1_276:
	mov.u32 	%r3289, 24;
	// inline asm
	shf.r.wrap.b32 %r23, %r16, %r23, %r3289;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10810, %r17, %r16, %r3289;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10809, %r18, %r17, %r3289;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10808, %r19, %r18, %r3289;
	// inline asm
	mov.u32 	%r10812, 0;
	// inline asm
	shf.r.wrap.b32 %r19, %r10812, %r19, %r3289;
	// inline asm
	bra.uni 	BB1_323;

BB1_307:
	setp.eq.s32	%p205, %r25, 29;
	@%p205 bra 	BB1_308;
	bra.uni 	BB1_279;

BB1_308:
	mov.u32 	%r10808, 0;
	mov.u32 	%r3041, 24;
	// inline asm
	shf.r.wrap.b32 %r23, %r10808, %r19, %r3041;
	// inline asm
	bra.uni 	BB1_331;

BB1_138:
	setp.eq.s32	%p170, %r25, 3;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p170 bra 	BB1_139;
	bra.uni 	BB1_213;

BB1_139:
	mov.u32 	%r2897, 8;
	// inline asm
	shf.r.wrap.b32 %r10787, %r21, %r20, %r2897;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r22, %r21, %r2897;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r23, %r22, %r2897;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r16, %r23, %r2897;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10791, %r17, %r16, %r2897;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10790, %r18, %r17, %r2897;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10789, %r19, %r18, %r2897;
	// inline asm
	mov.u32 	%r2895, 0;
	// inline asm
	shf.r.wrap.b32 %r10788, %r2895, %r19, %r2897;
	// inline asm
	bra.uni 	BB1_213;

BB1_170:
	setp.eq.s32	%p147, %r25, 19;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p147 bra 	BB1_171;
	bra.uni 	BB1_213;

BB1_171:
	mov.u32 	%r2577, 8;
	// inline asm
	shf.r.wrap.b32 %r10787, %r17, %r16, %r2577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r18, %r17, %r2577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r19, %r18, %r2577;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10784, %r10788, %r19, %r2577;
	// inline asm

BB1_199:
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	bra.uni 	BB1_213;

BB1_710:
	setp.eq.s32	%p493, %r15, 12;
	@%p493 bra 	BB1_711;
	bra.uni 	BB1_10;

BB1_711:
	and.b32  	%r4017, %r17, 65535;
	shl.b32 	%r4018, %r17, 8;
	and.b32  	%r4019, %r4018, -16777216;
	or.b32  	%r4020, %r4019, %r4017;
	shr.u32 	%r4021, %r17, 8;
	and.b32  	%r4022, %r4021, 16711680;
	or.b32  	%r10947, %r4020, %r4022;
	mov.u32 	%r10949, 12;

BB1_769:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10948, %r16;
	bra.uni 	BB1_1536;

BB1_153:
	setp.eq.s32	%p159, %r25, 11;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p159 bra 	BB1_154;
	bra.uni 	BB1_213;

BB1_154:
	mov.u32 	%r2721, 8;
	// inline asm
	shf.r.wrap.b32 %r10787, %r23, %r22, %r2721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r16, %r23, %r2721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r17, %r16, %r2721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r18, %r17, %r2721;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10791, %r19, %r18, %r2721;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10790, %r10788, %r19, %r2721;
	// inline asm
	mov.u32 	%r10789, %r10788;
	bra.uni 	BB1_213;

BB1_738:
	setp.eq.s32	%p472, %r15, 27;
	@%p472 bra 	BB1_739;
	bra.uni 	BB1_10;

BB1_739:
	and.b32  	%r3940, %r21, 255;
	shl.b32 	%r3941, %r21, 8;
	and.b32  	%r3942, %r3941, 16711680;
	or.b32  	%r3943, %r3942, %r3940;
	shr.u32 	%r3944, %r21, 8;
	and.b32  	%r3945, %r3944, 65280;
	or.b32  	%r10943, %r3943, %r3945;
	mov.u32 	%r10949, 27;

BB1_751:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	bra.uni 	BB1_756;

BB1_185:
	setp.eq.s32	%p136, %r25, 27;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p136 bra 	BB1_186;
	bra.uni 	BB1_213;

BB1_186:
	mov.u32 	%r2465, 8;
	// inline asm
	shf.r.wrap.b32 %r10787, %r19, %r18, %r2465;
	// inline asm
	mov.u32 	%r10784, 0;
	// inline asm
	shf.r.wrap.b32 %r10786, %r10784, %r19, %r2465;
	// inline asm

BB1_187:
	mov.u32 	%r10785, %r10784;
	bra.uni 	BB1_188;

BB1_702:
	setp.eq.s32	%p499, %r15, 8;
	@%p499 bra 	BB1_703;
	bra.uni 	BB1_10;

BB1_703:
	and.b32  	%r4038, %r18, 65535;
	shl.b32 	%r4039, %r18, 8;
	and.b32  	%r4040, %r4039, -16777216;
	or.b32  	%r4041, %r4040, %r4038;
	shr.u32 	%r4042, %r18, 8;
	and.b32  	%r4043, %r4042, 16711680;
	or.b32  	%r10946, %r4041, %r4043;
	mov.u32 	%r10949, 8;

BB1_772:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	bra.uni 	BB1_759;

BB1_145:
	setp.eq.s32	%p165, %r25, 7;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p165 bra 	BB1_146;
	bra.uni 	BB1_213;

BB1_146:
	mov.u32 	%r2805, 8;
	// inline asm
	shf.r.wrap.b32 %r10787, %r22, %r21, %r2805;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r23, %r22, %r2805;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r16, %r23, %r2805;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r17, %r16, %r2805;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10791, %r18, %r17, %r2805;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10790, %r19, %r18, %r2805;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10789, %r10788, %r19, %r2805;
	// inline asm
	bra.uni 	BB1_213;

BB1_730:
	setp.eq.s32	%p478, %r15, 23;
	@%p478 bra 	BB1_731;
	bra.uni 	BB1_10;

BB1_731:
	and.b32  	%r3961, %r22, 255;
	shl.b32 	%r3962, %r22, 8;
	and.b32  	%r3963, %r3962, 16711680;
	or.b32  	%r3964, %r3963, %r3961;
	shr.u32 	%r3965, %r22, 8;
	and.b32  	%r3966, %r3965, 65280;
	or.b32  	%r10942, %r3964, %r3966;
	mov.u32 	%r10949, 23;

BB1_754:
	mov.u32 	%r10941, %r23;
	bra.uni 	BB1_755;

BB1_177:
	setp.eq.s32	%p142, %r25, 23;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p142 bra 	BB1_178;
	bra.uni 	BB1_213;

BB1_178:
	mov.u32 	%r2517, 8;
	// inline asm
	shf.r.wrap.b32 %r10787, %r18, %r17, %r2517;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r19, %r18, %r2517;
	// inline asm
	mov.u32 	%r10784, 0;
	// inline asm
	shf.r.wrap.b32 %r10785, %r10784, %r19, %r2517;
	// inline asm
	bra.uni 	BB1_188;

BB1_717:
	setp.eq.s32	%p488, %r15, 16;
	@%p488 bra 	BB1_718;
	bra.uni 	BB1_10;

BB1_718:
	and.b32  	%r3996, %r16, 65535;
	shl.b32 	%r3997, %r16, 8;
	and.b32  	%r3998, %r3997, -16777216;
	or.b32  	%r3999, %r3998, %r3996;
	shr.u32 	%r4000, %r16, 8;
	and.b32  	%r4001, %r4000, 16711680;
	or.b32  	%r10948, %r3999, %r4001;
	mov.u32 	%r10949, 16;

BB1_765:
	mov.u32 	%r10941, %r23;

BB1_766:
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	mov.u32 	%r10944, %r20;
	mov.u32 	%r10945, %r19;
	mov.u32 	%r10946, %r18;
	mov.u32 	%r10947, %r17;
	bra.uni 	BB1_1536;

BB1_160:
	setp.eq.s32	%p154, %r25, 15;
	mov.u32 	%r10784, %r10788;
	mov.u32 	%r10785, %r10788;
	mov.u32 	%r10786, %r10788;
	mov.u32 	%r10787, %r10788;
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	mov.u32 	%r10791, %r10788;
	@%p154 bra 	BB1_161;
	bra.uni 	BB1_213;

BB1_161:
	mov.u32 	%r2645, 8;
	// inline asm
	shf.r.wrap.b32 %r10787, %r16, %r23, %r2645;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10786, %r17, %r16, %r2645;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10785, %r18, %r17, %r2645;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10784, %r19, %r18, %r2645;
	// inline asm
	mov.u32 	%r10788, 0;
	// inline asm
	shf.r.wrap.b32 %r10791, %r10788, %r19, %r2645;
	// inline asm

BB1_162:
	mov.u32 	%r10789, %r10788;
	mov.u32 	%r10790, %r10788;
	bra.uni 	BB1_213;

BB1_745:
	setp.ne.s32	%p467, %r15, 31;
	@%p467 bra 	BB1_10;

	and.b32  	%r3919, %r20, 255;
	shl.b32 	%r3920, %r20, 8;
	and.b32  	%r3921, %r3920, 16711680;
	or.b32  	%r3922, %r3921, %r3919;
	shr.u32 	%r3923, %r20, 8;
	and.b32  	%r3924, %r3923, 65280;
	or.b32  	%r10944, %r3922, %r3924;
	mov.u32 	%r10949, 31;

BB1_748:
	mov.u32 	%r10941, %r23;
	mov.u32 	%r10942, %r22;
	mov.u32 	%r10943, %r21;
	bra.uni 	BB1_757;

BB1_10:
	mov.u32 	%r10941, %r23;

BB1_11:
	mov.u32 	%r10942, %r22;

BB1_12:
	mov.u32 	%r10943, %r21;

BB1_13:
	mov.u32 	%r10944, %r20;

BB1_14:
	mov.u32 	%r10945, %r19;

BB1_15:
	mov.u32 	%r10946, %r18;

BB1_16:
	mov.u32 	%r10947, %r17;

BB1_17:
	mov.u32 	%r10948, %r16;

BB1_1535:
	mov.u32 	%r10949, %r15;

BB1_1536:
	add.s32 	%r10774, %r10774, 1;
	shl.b64 	%rd169, %rd82, 7;
	add.s64 	%rd170, %rd87, %rd169;
	mul.wide.u32 	%rd171, %r10774, 4;
	add.s64 	%rd172, %rd170, %rd171;
	ld.global.u32 	%r10773, [%rd172];
	setp.ne.s32	%p1030, %r10773, 0;
	@%p1030 bra 	BB1_4;

BB1_1537:
	ld.param.u64 	%rd2822, [m01700_m04_param_6];
	ld.param.u32 	%r10754, [m01700_m04_param_25];
	ld.const.u64 	%rd2821, [k_sha512+608];
	ld.const.u64 	%rd2820, [k_sha512+600];
	ld.const.u64 	%rd2811, [k_sha512+592];
	ld.const.u64 	%rd2810, [k_sha512+584];
	ld.const.u64 	%rd2809, [k_sha512+576];
	ld.const.u64 	%rd2808, [k_sha512+568];
	ld.const.u64 	%rd2807, [k_sha512+560];
	ld.const.u64 	%rd2806, [k_sha512+552];
	ld.const.u64 	%rd2805, [k_sha512+544];
	ld.const.u64 	%rd2804, [k_sha512+536];
	ld.const.u64 	%rd2803, [k_sha512+528];
	ld.const.u64 	%rd2802, [k_sha512+520];
	ld.const.u64 	%rd2801, [k_sha512+512];
	ld.const.u64 	%rd2800, [k_sha512+504];
	ld.const.u64 	%rd2799, [k_sha512+496];
	ld.const.u64 	%rd2798, [k_sha512+488];
	ld.const.u64 	%rd2797, [k_sha512+480];
	ld.const.u64 	%rd2796, [k_sha512+472];
	ld.const.u64 	%rd2795, [k_sha512+464];
	ld.const.u64 	%rd2794, [k_sha512+456];
	ld.const.u64 	%rd2793, [k_sha512+448];
	ld.const.u64 	%rd2792, [k_sha512+440];
	ld.const.u64 	%rd2791, [k_sha512+432];
	ld.const.u64 	%rd2790, [k_sha512+424];
	ld.const.u64 	%rd2789, [k_sha512+416];
	ld.const.u64 	%rd2788, [k_sha512+408];
	ld.const.u64 	%rd2787, [k_sha512+400];
	ld.const.u64 	%rd2786, [k_sha512+392];
	ld.const.u64 	%rd2785, [k_sha512+384];
	ld.const.u64 	%rd2784, [k_sha512+376];
	ld.const.u64 	%rd2783, [k_sha512+368];
	ld.const.u64 	%rd2782, [k_sha512+360];
	ld.const.u64 	%rd2781, [k_sha512+352];
	ld.const.u64 	%rd2780, [k_sha512+344];
	ld.const.u64 	%rd2779, [k_sha512+336];
	ld.const.u64 	%rd2778, [k_sha512+328];
	ld.const.u64 	%rd2777, [k_sha512+320];
	ld.const.u64 	%rd2776, [k_sha512+312];
	ld.const.u64 	%rd2775, [k_sha512+304];
	ld.const.u64 	%rd2774, [k_sha512+296];
	ld.const.u64 	%rd2773, [k_sha512+288];
	ld.const.u64 	%rd2772, [k_sha512+280];
	ld.const.u64 	%rd2771, [k_sha512+272];
	ld.const.u64 	%rd2770, [k_sha512+264];
	ld.const.u64 	%rd2769, [k_sha512+256];
	ld.const.u64 	%rd2768, [k_sha512+248];
	ld.const.u64 	%rd2767, [k_sha512+240];
	ld.const.u64 	%rd2766, [k_sha512+232];
	ld.const.u64 	%rd2765, [k_sha512+224];
	ld.const.u64 	%rd2764, [k_sha512+216];
	ld.const.u64 	%rd2763, [k_sha512+208];
	ld.const.u64 	%rd2762, [k_sha512+200];
	ld.const.u64 	%rd2761, [k_sha512+192];
	ld.const.u64 	%rd2760, [k_sha512+184];
	ld.const.u64 	%rd2759, [k_sha512+176];
	ld.const.u64 	%rd2758, [k_sha512+168];
	ld.const.u64 	%rd2757, [k_sha512+160];
	ld.const.u64 	%rd2756, [k_sha512+152];
	ld.const.u64 	%rd2755, [k_sha512+144];
	ld.const.u64 	%rd2754, [k_sha512+136];
	ld.const.u64 	%rd2753, [k_sha512+128];
	ld.const.u64 	%rd2752, [k_sha512+120];
	ld.const.u64 	%rd2751, [k_sha512+112];
	ld.const.u64 	%rd2750, [k_sha512+104];
	ld.const.u64 	%rd2749, [k_sha512+96];
	ld.const.u64 	%rd2748, [k_sha512+88];
	ld.const.u64 	%rd2747, [k_sha512+80];
	ld.const.u64 	%rd2746, [k_sha512+72];
	ld.const.u64 	%rd2745, [k_sha512+64];
	ld.const.u64 	%rd2744, [k_sha512+56];
	ld.const.u64 	%rd2743, [k_sha512+48];
	ld.const.u64 	%rd2742, [k_sha512+40];
	ld.const.u64 	%rd2741, [k_sha512+32];
	ld.const.u64 	%rd2740, [k_sha512+24];
	ld.const.u64 	%rd2739, [k_sha512+16];
	ld.const.u64 	%rd2738, [k_sha512+8];
	ld.const.u64 	%rd2737, [k_sha512];
	and.b32  	%r8809, %r10949, 3;
	shl.b32 	%r8810, %r8809, 3;
	mov.u32 	%r8811, 128;
	shl.b32 	%r8812, %r8811, %r8810;
	setp.lt.u32	%p1031, %r10949, 4;
	selp.b32	%r8813, %r8812, 0, %p1031;
	or.b32  	%r8814, %r8813, %r10945;
	and.b32  	%r8815, %r10949, -4;
	setp.eq.s32	%p1032, %r8815, 4;
	selp.b32	%r8816, %r8812, 0, %p1032;
	or.b32  	%r8817, %r8816, %r10946;
	setp.eq.s32	%p1033, %r8815, 8;
	selp.b32	%r8818, %r8812, 0, %p1033;
	or.b32  	%r8819, %r8818, %r10947;
	setp.eq.s32	%p1034, %r8815, 12;
	selp.b32	%r8820, %r8812, 0, %p1034;
	or.b32  	%r8821, %r8820, %r10948;
	setp.eq.s32	%p1035, %r8815, 16;
	selp.b32	%r8822, %r8812, 0, %p1035;
	or.b32  	%r8823, %r8822, %r10941;
	setp.eq.s32	%p1036, %r8815, 20;
	selp.b32	%r8824, %r8812, 0, %p1036;
	or.b32  	%r8825, %r8824, %r10942;
	setp.eq.s32	%p1037, %r8815, 24;
	selp.b32	%r8826, %r8812, 0, %p1037;
	or.b32  	%r8827, %r8826, %r10943;
	setp.gt.u32	%p1038, %r10949, 27;
	selp.b32	%r8828, %r8812, 0, %p1038;
	or.b32  	%r8829, %r8828, %r10944;
	shr.u32 	%r8830, %r8814, 24;
	shr.u32 	%r8831, %r8814, 8;
	and.b32  	%r8832, %r8831, 65280;
	or.b32  	%r8833, %r8832, %r8830;
	shl.b32 	%r8834, %r8814, 24;
	shl.b32 	%r8835, %r8814, 8;
	and.b32  	%r8836, %r8835, 16711680;
	or.b32  	%r8837, %r8834, %r8836;
	or.b32  	%r8838, %r8837, %r8833;
	shr.u32 	%r8839, %r8817, 24;
	shr.u32 	%r8840, %r8817, 8;
	and.b32  	%r8841, %r8840, 65280;
	or.b32  	%r8842, %r8841, %r8839;
	shl.b32 	%r8843, %r8817, 24;
	shl.b32 	%r8844, %r8817, 8;
	and.b32  	%r8845, %r8844, 16711680;
	or.b32  	%r8846, %r8843, %r8845;
	or.b32  	%r8847, %r8846, %r8842;
	mov.b64	%rd173, {%r8847, %r8838};
	shr.u32 	%r8848, %r8819, 24;
	shr.u32 	%r8849, %r8819, 8;
	and.b32  	%r8850, %r8849, 65280;
	or.b32  	%r8851, %r8850, %r8848;
	shl.b32 	%r8852, %r8819, 24;
	shl.b32 	%r8853, %r8819, 8;
	and.b32  	%r8854, %r8853, 16711680;
	or.b32  	%r8855, %r8852, %r8854;
	or.b32  	%r8856, %r8855, %r8851;
	shr.u32 	%r8857, %r8821, 24;
	shr.u32 	%r8858, %r8821, 8;
	and.b32  	%r8859, %r8858, 65280;
	or.b32  	%r8860, %r8859, %r8857;
	shl.b32 	%r8861, %r8821, 24;
	shl.b32 	%r8862, %r8821, 8;
	and.b32  	%r8863, %r8862, 16711680;
	or.b32  	%r8864, %r8861, %r8863;
	or.b32  	%r8865, %r8864, %r8860;
	mov.b64	%rd174, {%r8865, %r8856};
	shr.u32 	%r8866, %r8823, 24;
	shr.u32 	%r8867, %r8823, 8;
	and.b32  	%r8868, %r8867, 65280;
	or.b32  	%r8869, %r8868, %r8866;
	shl.b32 	%r8870, %r8823, 24;
	shl.b32 	%r8871, %r8823, 8;
	and.b32  	%r8872, %r8871, 16711680;
	or.b32  	%r8873, %r8870, %r8872;
	or.b32  	%r8874, %r8873, %r8869;
	shr.u32 	%r8875, %r8825, 24;
	shr.u32 	%r8876, %r8825, 8;
	and.b32  	%r8877, %r8876, 65280;
	or.b32  	%r8878, %r8877, %r8875;
	shl.b32 	%r8879, %r8825, 24;
	shl.b32 	%r8880, %r8825, 8;
	and.b32  	%r8881, %r8880, 16711680;
	or.b32  	%r8882, %r8879, %r8881;
	or.b32  	%r8883, %r8882, %r8878;
	mov.b64	%rd175, {%r8883, %r8874};
	shr.u32 	%r8884, %r8827, 24;
	shr.u32 	%r8885, %r8827, 8;
	and.b32  	%r8886, %r8885, 65280;
	or.b32  	%r8887, %r8886, %r8884;
	shl.b32 	%r8888, %r8827, 24;
	shl.b32 	%r8889, %r8827, 8;
	and.b32  	%r8890, %r8889, 16711680;
	or.b32  	%r8891, %r8888, %r8890;
	or.b32  	%r8892, %r8891, %r8887;
	shr.u32 	%r8893, %r8829, 24;
	shr.u32 	%r8894, %r8829, 8;
	and.b32  	%r8895, %r8894, 65280;
	or.b32  	%r8896, %r8895, %r8893;
	shl.b32 	%r8897, %r8829, 24;
	shl.b32 	%r8898, %r8829, 8;
	and.b32  	%r8899, %r8898, 16711680;
	or.b32  	%r8900, %r8897, %r8899;
	or.b32  	%r8901, %r8900, %r8896;
	mov.b64	%rd176, {%r8901, %r8892};
	shl.b32 	%r8902, %r10949, 3;
	mov.u32 	%r8903, 0;
	mov.b64	%rd177, {%r8902, %r8903};
	add.s64 	%rd178, %rd173, %rd2737;
	add.s64 	%rd179, %rd178, %rd2;
	add.s64 	%rd180, %rd179, %rd3;
	add.s64 	%rd181, %rd179, 2357225248857953701;
	add.s64 	%rd182, %rd180, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8904,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8905}, %rd181;
	}
	shf.r.wrap.b32 	%r8906, %r8905, %r8904, 14;
	shf.r.wrap.b32 	%r8907, %r8904, %r8905, 14;
	mov.b64 	%rd183, {%r8907, %r8906};
	shf.r.wrap.b32 	%r8908, %r8905, %r8904, 18;
	shf.r.wrap.b32 	%r8909, %r8904, %r8905, 18;
	mov.b64 	%rd184, {%r8909, %r8908};
	xor.b64  	%rd185, %rd184, %rd183;
	shf.l.wrap.b32 	%r8910, %r8904, %r8905, 23;
	shf.l.wrap.b32 	%r8911, %r8905, %r8904, 23;
	mov.b64 	%rd186, {%r8911, %r8910};
	xor.b64  	%rd187, %rd185, %rd186;
	and.b64  	%rd188, %rd181, -3887949035690463538;
	xor.b64  	%rd189, %rd188, -7276294671716946913;
	add.s64 	%rd190, %rd174, %rd2738;
	add.s64 	%rd191, %rd190, %rd189;
	add.s64 	%rd192, %rd191, %rd187;
	xor.b64  	%rd193, %rd182, -4942790177534073029;
	xor.b64  	%rd194, %rd182, 7640891576956012808;
	and.b64  	%rd195, %rd194, %rd193;
	xor.b64  	%rd196, %rd195, %rd182;
	add.s64 	%rd197, %rd192, %rd196;
	add.s64 	%rd198, %rd192, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8912,%dummy}, %rd182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8913}, %rd182;
	}
	shf.r.wrap.b32 	%r8914, %r8913, %r8912, 28;
	shf.r.wrap.b32 	%r8915, %r8912, %r8913, 28;
	mov.b64 	%rd199, {%r8915, %r8914};
	shf.l.wrap.b32 	%r8916, %r8912, %r8913, 30;
	shf.l.wrap.b32 	%r8917, %r8913, %r8912, 30;
	mov.b64 	%rd200, {%r8917, %r8916};
	xor.b64  	%rd201, %rd200, %rd199;
	shf.l.wrap.b32 	%r8918, %r8912, %r8913, 25;
	shf.l.wrap.b32 	%r8919, %r8913, %r8912, 25;
	mov.b64 	%rd202, {%r8919, %r8918};
	xor.b64  	%rd203, %rd201, %rd202;
	add.s64 	%rd204, %rd197, %rd203;
	add.s64 	%rd205, %rd204, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8920,%dummy}, %rd198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8921}, %rd198;
	}
	shf.r.wrap.b32 	%r8922, %r8921, %r8920, 14;
	shf.r.wrap.b32 	%r8923, %r8920, %r8921, 14;
	mov.b64 	%rd206, {%r8923, %r8922};
	shf.r.wrap.b32 	%r8924, %r8921, %r8920, 18;
	shf.r.wrap.b32 	%r8925, %r8920, %r8921, 18;
	mov.b64 	%rd207, {%r8925, %r8924};
	xor.b64  	%rd208, %rd207, %rd206;
	shf.l.wrap.b32 	%r8926, %r8920, %r8921, 23;
	shf.l.wrap.b32 	%r8927, %r8921, %r8920, 23;
	mov.b64 	%rd209, {%r8927, %r8926};
	xor.b64  	%rd210, %rd208, %rd209;
	xor.b64  	%rd211, %rd181, 5840696475078001361;
	and.b64  	%rd212, %rd198, %rd211;
	xor.b64  	%rd213, %rd212, 5840696475078001361;
	add.s64 	%rd214, %rd175, %rd2739;
	add.s64 	%rd215, %rd214, %rd213;
	add.s64 	%rd216, %rd215, %rd210;
	xor.b64  	%rd217, %rd205, 7640891576956012808;
	xor.b64  	%rd218, %rd205, %rd182;
	and.b64  	%rd219, %rd218, %rd217;
	xor.b64  	%rd220, %rd219, %rd205;
	add.s64 	%rd221, %rd216, %rd220;
	add.s64 	%rd222, %rd216, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8928,%dummy}, %rd205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8929}, %rd205;
	}
	shf.r.wrap.b32 	%r8930, %r8929, %r8928, 28;
	shf.r.wrap.b32 	%r8931, %r8928, %r8929, 28;
	mov.b64 	%rd223, {%r8931, %r8930};
	shf.l.wrap.b32 	%r8932, %r8928, %r8929, 30;
	shf.l.wrap.b32 	%r8933, %r8929, %r8928, 30;
	mov.b64 	%rd224, {%r8933, %r8932};
	xor.b64  	%rd225, %rd224, %rd223;
	shf.l.wrap.b32 	%r8934, %r8928, %r8929, 25;
	shf.l.wrap.b32 	%r8935, %r8929, %r8928, 25;
	mov.b64 	%rd226, {%r8935, %r8934};
	xor.b64  	%rd227, %rd225, %rd226;
	add.s64 	%rd228, %rd221, %rd227;
	add.s64 	%rd229, %rd228, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8936,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8937}, %rd222;
	}
	shf.r.wrap.b32 	%r8938, %r8937, %r8936, 14;
	shf.r.wrap.b32 	%r8939, %r8936, %r8937, 14;
	mov.b64 	%rd230, {%r8939, %r8938};
	shf.r.wrap.b32 	%r8940, %r8937, %r8936, 18;
	shf.r.wrap.b32 	%r8941, %r8936, %r8937, 18;
	mov.b64 	%rd231, {%r8941, %r8940};
	xor.b64  	%rd232, %rd231, %rd230;
	shf.l.wrap.b32 	%r8942, %r8936, %r8937, 23;
	shf.l.wrap.b32 	%r8943, %r8937, %r8936, 23;
	mov.b64 	%rd233, {%r8943, %r8942};
	xor.b64  	%rd234, %rd232, %rd233;
	xor.b64  	%rd235, %rd198, %rd181;
	and.b64  	%rd236, %rd222, %rd235;
	xor.b64  	%rd237, %rd236, %rd181;
	add.s64 	%rd238, %rd176, %rd2740;
	add.s64 	%rd239, %rd238, %rd237;
	add.s64 	%rd240, %rd239, %rd234;
	xor.b64  	%rd241, %rd229, %rd182;
	xor.b64  	%rd242, %rd229, %rd205;
	and.b64  	%rd243, %rd242, %rd241;
	xor.b64  	%rd244, %rd243, %rd229;
	add.s64 	%rd245, %rd240, %rd244;
	add.s64 	%rd246, %rd240, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8944,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8945}, %rd229;
	}
	shf.r.wrap.b32 	%r8946, %r8945, %r8944, 28;
	shf.r.wrap.b32 	%r8947, %r8944, %r8945, 28;
	mov.b64 	%rd247, {%r8947, %r8946};
	shf.l.wrap.b32 	%r8948, %r8944, %r8945, 30;
	shf.l.wrap.b32 	%r8949, %r8945, %r8944, 30;
	mov.b64 	%rd248, {%r8949, %r8948};
	xor.b64  	%rd249, %rd248, %rd247;
	shf.l.wrap.b32 	%r8950, %r8944, %r8945, 25;
	shf.l.wrap.b32 	%r8951, %r8945, %r8944, 25;
	mov.b64 	%rd250, {%r8951, %r8950};
	xor.b64  	%rd251, %rd249, %rd250;
	add.s64 	%rd252, %rd245, %rd251;
	add.s64 	%rd253, %rd252, 5840696475078001361;
	add.s64 	%rd254, %rd2741, %rd181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8952,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8953}, %rd246;
	}
	shf.r.wrap.b32 	%r8954, %r8953, %r8952, 14;
	shf.r.wrap.b32 	%r8955, %r8952, %r8953, 14;
	mov.b64 	%rd255, {%r8955, %r8954};
	shf.r.wrap.b32 	%r8956, %r8953, %r8952, 18;
	shf.r.wrap.b32 	%r8957, %r8952, %r8953, 18;
	mov.b64 	%rd256, {%r8957, %r8956};
	xor.b64  	%rd257, %rd256, %rd255;
	shf.l.wrap.b32 	%r8958, %r8952, %r8953, 23;
	shf.l.wrap.b32 	%r8959, %r8953, %r8952, 23;
	mov.b64 	%rd258, {%r8959, %r8958};
	xor.b64  	%rd259, %rd257, %rd258;
	xor.b64  	%rd260, %rd222, %rd198;
	and.b64  	%rd261, %rd246, %rd260;
	xor.b64  	%rd262, %rd261, %rd198;
	add.s64 	%rd263, %rd254, %rd262;
	add.s64 	%rd264, %rd263, %rd259;
	add.s64 	%rd265, %rd264, %rd182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8960,%dummy}, %rd253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8961}, %rd253;
	}
	shf.r.wrap.b32 	%r8962, %r8961, %r8960, 28;
	shf.r.wrap.b32 	%r8963, %r8960, %r8961, 28;
	mov.b64 	%rd266, {%r8963, %r8962};
	shf.l.wrap.b32 	%r8964, %r8960, %r8961, 30;
	shf.l.wrap.b32 	%r8965, %r8961, %r8960, 30;
	mov.b64 	%rd267, {%r8965, %r8964};
	xor.b64  	%rd268, %rd267, %rd266;
	shf.l.wrap.b32 	%r8966, %r8960, %r8961, 25;
	shf.l.wrap.b32 	%r8967, %r8961, %r8960, 25;
	mov.b64 	%rd269, {%r8967, %r8966};
	xor.b64  	%rd270, %rd268, %rd269;
	xor.b64  	%rd271, %rd253, %rd205;
	xor.b64  	%rd272, %rd253, %rd229;
	and.b64  	%rd273, %rd272, %rd271;
	xor.b64  	%rd274, %rd273, %rd253;
	add.s64 	%rd275, %rd264, %rd274;
	add.s64 	%rd276, %rd275, %rd270;
	add.s64 	%rd277, %rd2742, %rd198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8968,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8969}, %rd265;
	}
	shf.r.wrap.b32 	%r8970, %r8969, %r8968, 14;
	shf.r.wrap.b32 	%r8971, %r8968, %r8969, 14;
	mov.b64 	%rd278, {%r8971, %r8970};
	shf.r.wrap.b32 	%r8972, %r8969, %r8968, 18;
	shf.r.wrap.b32 	%r8973, %r8968, %r8969, 18;
	mov.b64 	%rd279, {%r8973, %r8972};
	xor.b64  	%rd280, %rd279, %rd278;
	shf.l.wrap.b32 	%r8974, %r8968, %r8969, 23;
	shf.l.wrap.b32 	%r8975, %r8969, %r8968, 23;
	mov.b64 	%rd281, {%r8975, %r8974};
	xor.b64  	%rd282, %rd280, %rd281;
	xor.b64  	%rd283, %rd246, %rd222;
	and.b64  	%rd284, %rd265, %rd283;
	xor.b64  	%rd285, %rd284, %rd222;
	add.s64 	%rd286, %rd277, %rd285;
	add.s64 	%rd287, %rd286, %rd282;
	add.s64 	%rd288, %rd287, %rd205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8976,%dummy}, %rd276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8977}, %rd276;
	}
	shf.r.wrap.b32 	%r8978, %r8977, %r8976, 28;
	shf.r.wrap.b32 	%r8979, %r8976, %r8977, 28;
	mov.b64 	%rd289, {%r8979, %r8978};
	shf.l.wrap.b32 	%r8980, %r8976, %r8977, 30;
	shf.l.wrap.b32 	%r8981, %r8977, %r8976, 30;
	mov.b64 	%rd290, {%r8981, %r8980};
	xor.b64  	%rd291, %rd290, %rd289;
	shf.l.wrap.b32 	%r8982, %r8976, %r8977, 25;
	shf.l.wrap.b32 	%r8983, %r8977, %r8976, 25;
	mov.b64 	%rd292, {%r8983, %r8982};
	xor.b64  	%rd293, %rd291, %rd292;
	xor.b64  	%rd294, %rd276, %rd229;
	xor.b64  	%rd295, %rd276, %rd253;
	and.b64  	%rd296, %rd295, %rd294;
	xor.b64  	%rd297, %rd296, %rd276;
	add.s64 	%rd298, %rd287, %rd297;
	add.s64 	%rd299, %rd298, %rd293;
	add.s64 	%rd300, %rd2743, %rd222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8984,%dummy}, %rd288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8985}, %rd288;
	}
	shf.r.wrap.b32 	%r8986, %r8985, %r8984, 14;
	shf.r.wrap.b32 	%r8987, %r8984, %r8985, 14;
	mov.b64 	%rd301, {%r8987, %r8986};
	shf.r.wrap.b32 	%r8988, %r8985, %r8984, 18;
	shf.r.wrap.b32 	%r8989, %r8984, %r8985, 18;
	mov.b64 	%rd302, {%r8989, %r8988};
	xor.b64  	%rd303, %rd302, %rd301;
	shf.l.wrap.b32 	%r8990, %r8984, %r8985, 23;
	shf.l.wrap.b32 	%r8991, %r8985, %r8984, 23;
	mov.b64 	%rd304, {%r8991, %r8990};
	xor.b64  	%rd305, %rd303, %rd304;
	xor.b64  	%rd306, %rd265, %rd246;
	and.b64  	%rd307, %rd288, %rd306;
	xor.b64  	%rd308, %rd307, %rd246;
	add.s64 	%rd309, %rd300, %rd308;
	add.s64 	%rd310, %rd309, %rd305;
	add.s64 	%rd311, %rd310, %rd229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8992,%dummy}, %rd299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8993}, %rd299;
	}
	shf.r.wrap.b32 	%r8994, %r8993, %r8992, 28;
	shf.r.wrap.b32 	%r8995, %r8992, %r8993, 28;
	mov.b64 	%rd312, {%r8995, %r8994};
	shf.l.wrap.b32 	%r8996, %r8992, %r8993, 30;
	shf.l.wrap.b32 	%r8997, %r8993, %r8992, 30;
	mov.b64 	%rd313, {%r8997, %r8996};
	xor.b64  	%rd314, %rd313, %rd312;
	shf.l.wrap.b32 	%r8998, %r8992, %r8993, 25;
	shf.l.wrap.b32 	%r8999, %r8993, %r8992, 25;
	mov.b64 	%rd315, {%r8999, %r8998};
	xor.b64  	%rd316, %rd314, %rd315;
	xor.b64  	%rd317, %rd299, %rd253;
	xor.b64  	%rd318, %rd299, %rd276;
	and.b64  	%rd319, %rd318, %rd317;
	xor.b64  	%rd320, %rd319, %rd299;
	add.s64 	%rd321, %rd310, %rd320;
	add.s64 	%rd322, %rd321, %rd316;
	add.s64 	%rd323, %rd2744, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9000,%dummy}, %rd311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9001}, %rd311;
	}
	shf.r.wrap.b32 	%r9002, %r9001, %r9000, 14;
	shf.r.wrap.b32 	%r9003, %r9000, %r9001, 14;
	mov.b64 	%rd324, {%r9003, %r9002};
	shf.r.wrap.b32 	%r9004, %r9001, %r9000, 18;
	shf.r.wrap.b32 	%r9005, %r9000, %r9001, 18;
	mov.b64 	%rd325, {%r9005, %r9004};
	xor.b64  	%rd326, %rd325, %rd324;
	shf.l.wrap.b32 	%r9006, %r9000, %r9001, 23;
	shf.l.wrap.b32 	%r9007, %r9001, %r9000, 23;
	mov.b64 	%rd327, {%r9007, %r9006};
	xor.b64  	%rd328, %rd326, %rd327;
	xor.b64  	%rd329, %rd288, %rd265;
	and.b64  	%rd330, %rd311, %rd329;
	xor.b64  	%rd331, %rd330, %rd265;
	add.s64 	%rd332, %rd323, %rd331;
	add.s64 	%rd333, %rd332, %rd328;
	add.s64 	%rd334, %rd333, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9008,%dummy}, %rd322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9009}, %rd322;
	}
	shf.r.wrap.b32 	%r9010, %r9009, %r9008, 28;
	shf.r.wrap.b32 	%r9011, %r9008, %r9009, 28;
	mov.b64 	%rd335, {%r9011, %r9010};
	shf.l.wrap.b32 	%r9012, %r9008, %r9009, 30;
	shf.l.wrap.b32 	%r9013, %r9009, %r9008, 30;
	mov.b64 	%rd336, {%r9013, %r9012};
	xor.b64  	%rd337, %rd336, %rd335;
	shf.l.wrap.b32 	%r9014, %r9008, %r9009, 25;
	shf.l.wrap.b32 	%r9015, %r9009, %r9008, 25;
	mov.b64 	%rd338, {%r9015, %r9014};
	xor.b64  	%rd339, %rd337, %rd338;
	xor.b64  	%rd340, %rd322, %rd276;
	xor.b64  	%rd341, %rd322, %rd299;
	and.b64  	%rd342, %rd341, %rd340;
	xor.b64  	%rd343, %rd342, %rd322;
	add.s64 	%rd344, %rd333, %rd343;
	add.s64 	%rd345, %rd344, %rd339;
	add.s64 	%rd346, %rd2745, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9016,%dummy}, %rd334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9017}, %rd334;
	}
	shf.r.wrap.b32 	%r9018, %r9017, %r9016, 14;
	shf.r.wrap.b32 	%r9019, %r9016, %r9017, 14;
	mov.b64 	%rd347, {%r9019, %r9018};
	shf.r.wrap.b32 	%r9020, %r9017, %r9016, 18;
	shf.r.wrap.b32 	%r9021, %r9016, %r9017, 18;
	mov.b64 	%rd348, {%r9021, %r9020};
	xor.b64  	%rd349, %rd348, %rd347;
	shf.l.wrap.b32 	%r9022, %r9016, %r9017, 23;
	shf.l.wrap.b32 	%r9023, %r9017, %r9016, 23;
	mov.b64 	%rd350, {%r9023, %r9022};
	xor.b64  	%rd351, %rd349, %rd350;
	xor.b64  	%rd352, %rd311, %rd288;
	and.b64  	%rd353, %rd334, %rd352;
	xor.b64  	%rd354, %rd353, %rd288;
	add.s64 	%rd355, %rd346, %rd354;
	add.s64 	%rd356, %rd355, %rd351;
	add.s64 	%rd357, %rd356, %rd276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9024,%dummy}, %rd345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9025}, %rd345;
	}
	shf.r.wrap.b32 	%r9026, %r9025, %r9024, 28;
	shf.r.wrap.b32 	%r9027, %r9024, %r9025, 28;
	mov.b64 	%rd358, {%r9027, %r9026};
	shf.l.wrap.b32 	%r9028, %r9024, %r9025, 30;
	shf.l.wrap.b32 	%r9029, %r9025, %r9024, 30;
	mov.b64 	%rd359, {%r9029, %r9028};
	xor.b64  	%rd360, %rd359, %rd358;
	shf.l.wrap.b32 	%r9030, %r9024, %r9025, 25;
	shf.l.wrap.b32 	%r9031, %r9025, %r9024, 25;
	mov.b64 	%rd361, {%r9031, %r9030};
	xor.b64  	%rd362, %rd360, %rd361;
	xor.b64  	%rd363, %rd345, %rd299;
	xor.b64  	%rd364, %rd345, %rd322;
	and.b64  	%rd365, %rd364, %rd363;
	xor.b64  	%rd366, %rd365, %rd345;
	add.s64 	%rd367, %rd356, %rd366;
	add.s64 	%rd368, %rd367, %rd362;
	add.s64 	%rd369, %rd2746, %rd288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9032,%dummy}, %rd357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9033}, %rd357;
	}
	shf.r.wrap.b32 	%r9034, %r9033, %r9032, 14;
	shf.r.wrap.b32 	%r9035, %r9032, %r9033, 14;
	mov.b64 	%rd370, {%r9035, %r9034};
	shf.r.wrap.b32 	%r9036, %r9033, %r9032, 18;
	shf.r.wrap.b32 	%r9037, %r9032, %r9033, 18;
	mov.b64 	%rd371, {%r9037, %r9036};
	xor.b64  	%rd372, %rd371, %rd370;
	shf.l.wrap.b32 	%r9038, %r9032, %r9033, 23;
	shf.l.wrap.b32 	%r9039, %r9033, %r9032, 23;
	mov.b64 	%rd373, {%r9039, %r9038};
	xor.b64  	%rd374, %rd372, %rd373;
	xor.b64  	%rd375, %rd334, %rd311;
	and.b64  	%rd376, %rd357, %rd375;
	xor.b64  	%rd377, %rd376, %rd311;
	add.s64 	%rd378, %rd369, %rd377;
	add.s64 	%rd379, %rd378, %rd374;
	add.s64 	%rd380, %rd379, %rd299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9040,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9041}, %rd368;
	}
	shf.r.wrap.b32 	%r9042, %r9041, %r9040, 28;
	shf.r.wrap.b32 	%r9043, %r9040, %r9041, 28;
	mov.b64 	%rd381, {%r9043, %r9042};
	shf.l.wrap.b32 	%r9044, %r9040, %r9041, 30;
	shf.l.wrap.b32 	%r9045, %r9041, %r9040, 30;
	mov.b64 	%rd382, {%r9045, %r9044};
	xor.b64  	%rd383, %rd382, %rd381;
	shf.l.wrap.b32 	%r9046, %r9040, %r9041, 25;
	shf.l.wrap.b32 	%r9047, %r9041, %r9040, 25;
	mov.b64 	%rd384, {%r9047, %r9046};
	xor.b64  	%rd385, %rd383, %rd384;
	xor.b64  	%rd386, %rd368, %rd322;
	xor.b64  	%rd387, %rd368, %rd345;
	and.b64  	%rd388, %rd387, %rd386;
	xor.b64  	%rd389, %rd388, %rd368;
	add.s64 	%rd390, %rd379, %rd389;
	add.s64 	%rd391, %rd390, %rd385;
	add.s64 	%rd392, %rd2747, %rd311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9048,%dummy}, %rd380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9049}, %rd380;
	}
	shf.r.wrap.b32 	%r9050, %r9049, %r9048, 14;
	shf.r.wrap.b32 	%r9051, %r9048, %r9049, 14;
	mov.b64 	%rd393, {%r9051, %r9050};
	shf.r.wrap.b32 	%r9052, %r9049, %r9048, 18;
	shf.r.wrap.b32 	%r9053, %r9048, %r9049, 18;
	mov.b64 	%rd394, {%r9053, %r9052};
	xor.b64  	%rd395, %rd394, %rd393;
	shf.l.wrap.b32 	%r9054, %r9048, %r9049, 23;
	shf.l.wrap.b32 	%r9055, %r9049, %r9048, 23;
	mov.b64 	%rd396, {%r9055, %r9054};
	xor.b64  	%rd397, %rd395, %rd396;
	xor.b64  	%rd398, %rd357, %rd334;
	and.b64  	%rd399, %rd380, %rd398;
	xor.b64  	%rd400, %rd399, %rd334;
	add.s64 	%rd401, %rd392, %rd400;
	add.s64 	%rd402, %rd401, %rd397;
	add.s64 	%rd403, %rd402, %rd322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9056,%dummy}, %rd391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9057}, %rd391;
	}
	shf.r.wrap.b32 	%r9058, %r9057, %r9056, 28;
	shf.r.wrap.b32 	%r9059, %r9056, %r9057, 28;
	mov.b64 	%rd404, {%r9059, %r9058};
	shf.l.wrap.b32 	%r9060, %r9056, %r9057, 30;
	shf.l.wrap.b32 	%r9061, %r9057, %r9056, 30;
	mov.b64 	%rd405, {%r9061, %r9060};
	xor.b64  	%rd406, %rd405, %rd404;
	shf.l.wrap.b32 	%r9062, %r9056, %r9057, 25;
	shf.l.wrap.b32 	%r9063, %r9057, %r9056, 25;
	mov.b64 	%rd407, {%r9063, %r9062};
	xor.b64  	%rd408, %rd406, %rd407;
	xor.b64  	%rd409, %rd391, %rd345;
	xor.b64  	%rd410, %rd391, %rd368;
	and.b64  	%rd411, %rd410, %rd409;
	xor.b64  	%rd412, %rd411, %rd391;
	add.s64 	%rd413, %rd402, %rd412;
	add.s64 	%rd414, %rd413, %rd408;
	add.s64 	%rd415, %rd2748, %rd334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9064,%dummy}, %rd403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9065}, %rd403;
	}
	shf.r.wrap.b32 	%r9066, %r9065, %r9064, 14;
	shf.r.wrap.b32 	%r9067, %r9064, %r9065, 14;
	mov.b64 	%rd416, {%r9067, %r9066};
	shf.r.wrap.b32 	%r9068, %r9065, %r9064, 18;
	shf.r.wrap.b32 	%r9069, %r9064, %r9065, 18;
	mov.b64 	%rd417, {%r9069, %r9068};
	xor.b64  	%rd418, %rd417, %rd416;
	shf.l.wrap.b32 	%r9070, %r9064, %r9065, 23;
	shf.l.wrap.b32 	%r9071, %r9065, %r9064, 23;
	mov.b64 	%rd419, {%r9071, %r9070};
	xor.b64  	%rd420, %rd418, %rd419;
	xor.b64  	%rd421, %rd380, %rd357;
	and.b64  	%rd422, %rd403, %rd421;
	xor.b64  	%rd423, %rd422, %rd357;
	add.s64 	%rd424, %rd415, %rd423;
	add.s64 	%rd425, %rd424, %rd420;
	add.s64 	%rd426, %rd425, %rd345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9072,%dummy}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9073}, %rd414;
	}
	shf.r.wrap.b32 	%r9074, %r9073, %r9072, 28;
	shf.r.wrap.b32 	%r9075, %r9072, %r9073, 28;
	mov.b64 	%rd427, {%r9075, %r9074};
	shf.l.wrap.b32 	%r9076, %r9072, %r9073, 30;
	shf.l.wrap.b32 	%r9077, %r9073, %r9072, 30;
	mov.b64 	%rd428, {%r9077, %r9076};
	xor.b64  	%rd429, %rd428, %rd427;
	shf.l.wrap.b32 	%r9078, %r9072, %r9073, 25;
	shf.l.wrap.b32 	%r9079, %r9073, %r9072, 25;
	mov.b64 	%rd430, {%r9079, %r9078};
	xor.b64  	%rd431, %rd429, %rd430;
	xor.b64  	%rd432, %rd414, %rd368;
	xor.b64  	%rd433, %rd414, %rd391;
	and.b64  	%rd434, %rd433, %rd432;
	xor.b64  	%rd435, %rd434, %rd414;
	add.s64 	%rd436, %rd425, %rd435;
	add.s64 	%rd437, %rd436, %rd431;
	add.s64 	%rd438, %rd2749, %rd357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9080,%dummy}, %rd426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9081}, %rd426;
	}
	shf.r.wrap.b32 	%r9082, %r9081, %r9080, 14;
	shf.r.wrap.b32 	%r9083, %r9080, %r9081, 14;
	mov.b64 	%rd439, {%r9083, %r9082};
	shf.r.wrap.b32 	%r9084, %r9081, %r9080, 18;
	shf.r.wrap.b32 	%r9085, %r9080, %r9081, 18;
	mov.b64 	%rd440, {%r9085, %r9084};
	xor.b64  	%rd441, %rd440, %rd439;
	shf.l.wrap.b32 	%r9086, %r9080, %r9081, 23;
	shf.l.wrap.b32 	%r9087, %r9081, %r9080, 23;
	mov.b64 	%rd442, {%r9087, %r9086};
	xor.b64  	%rd443, %rd441, %rd442;
	xor.b64  	%rd444, %rd403, %rd380;
	and.b64  	%rd445, %rd426, %rd444;
	xor.b64  	%rd446, %rd445, %rd380;
	add.s64 	%rd447, %rd438, %rd446;
	add.s64 	%rd448, %rd447, %rd443;
	add.s64 	%rd449, %rd448, %rd368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9088,%dummy}, %rd437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9089}, %rd437;
	}
	shf.r.wrap.b32 	%r9090, %r9089, %r9088, 28;
	shf.r.wrap.b32 	%r9091, %r9088, %r9089, 28;
	mov.b64 	%rd450, {%r9091, %r9090};
	shf.l.wrap.b32 	%r9092, %r9088, %r9089, 30;
	shf.l.wrap.b32 	%r9093, %r9089, %r9088, 30;
	mov.b64 	%rd451, {%r9093, %r9092};
	xor.b64  	%rd452, %rd451, %rd450;
	shf.l.wrap.b32 	%r9094, %r9088, %r9089, 25;
	shf.l.wrap.b32 	%r9095, %r9089, %r9088, 25;
	mov.b64 	%rd453, {%r9095, %r9094};
	xor.b64  	%rd454, %rd452, %rd453;
	xor.b64  	%rd455, %rd437, %rd391;
	xor.b64  	%rd456, %rd437, %rd414;
	and.b64  	%rd457, %rd456, %rd455;
	xor.b64  	%rd458, %rd457, %rd437;
	add.s64 	%rd459, %rd448, %rd458;
	add.s64 	%rd460, %rd459, %rd454;
	add.s64 	%rd461, %rd2750, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9096,%dummy}, %rd449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9097}, %rd449;
	}
	shf.r.wrap.b32 	%r9098, %r9097, %r9096, 14;
	shf.r.wrap.b32 	%r9099, %r9096, %r9097, 14;
	mov.b64 	%rd462, {%r9099, %r9098};
	shf.r.wrap.b32 	%r9100, %r9097, %r9096, 18;
	shf.r.wrap.b32 	%r9101, %r9096, %r9097, 18;
	mov.b64 	%rd463, {%r9101, %r9100};
	xor.b64  	%rd464, %rd463, %rd462;
	shf.l.wrap.b32 	%r9102, %r9096, %r9097, 23;
	shf.l.wrap.b32 	%r9103, %r9097, %r9096, 23;
	mov.b64 	%rd465, {%r9103, %r9102};
	xor.b64  	%rd466, %rd464, %rd465;
	xor.b64  	%rd467, %rd426, %rd403;
	and.b64  	%rd468, %rd449, %rd467;
	xor.b64  	%rd469, %rd468, %rd403;
	add.s64 	%rd470, %rd461, %rd469;
	add.s64 	%rd471, %rd470, %rd466;
	add.s64 	%rd472, %rd471, %rd391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9104,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9105}, %rd460;
	}
	shf.r.wrap.b32 	%r9106, %r9105, %r9104, 28;
	shf.r.wrap.b32 	%r9107, %r9104, %r9105, 28;
	mov.b64 	%rd473, {%r9107, %r9106};
	shf.l.wrap.b32 	%r9108, %r9104, %r9105, 30;
	shf.l.wrap.b32 	%r9109, %r9105, %r9104, 30;
	mov.b64 	%rd474, {%r9109, %r9108};
	xor.b64  	%rd475, %rd474, %rd473;
	shf.l.wrap.b32 	%r9110, %r9104, %r9105, 25;
	shf.l.wrap.b32 	%r9111, %r9105, %r9104, 25;
	mov.b64 	%rd476, {%r9111, %r9110};
	xor.b64  	%rd477, %rd475, %rd476;
	xor.b64  	%rd478, %rd460, %rd414;
	xor.b64  	%rd479, %rd460, %rd437;
	and.b64  	%rd480, %rd479, %rd478;
	xor.b64  	%rd481, %rd480, %rd460;
	add.s64 	%rd482, %rd471, %rd481;
	add.s64 	%rd483, %rd482, %rd477;
	add.s64 	%rd484, %rd2751, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9112,%dummy}, %rd472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9113}, %rd472;
	}
	shf.r.wrap.b32 	%r9114, %r9113, %r9112, 14;
	shf.r.wrap.b32 	%r9115, %r9112, %r9113, 14;
	mov.b64 	%rd485, {%r9115, %r9114};
	shf.r.wrap.b32 	%r9116, %r9113, %r9112, 18;
	shf.r.wrap.b32 	%r9117, %r9112, %r9113, 18;
	mov.b64 	%rd486, {%r9117, %r9116};
	xor.b64  	%rd487, %rd486, %rd485;
	shf.l.wrap.b32 	%r9118, %r9112, %r9113, 23;
	shf.l.wrap.b32 	%r9119, %r9113, %r9112, 23;
	mov.b64 	%rd488, {%r9119, %r9118};
	xor.b64  	%rd489, %rd487, %rd488;
	xor.b64  	%rd490, %rd449, %rd426;
	and.b64  	%rd491, %rd472, %rd490;
	xor.b64  	%rd492, %rd491, %rd426;
	add.s64 	%rd493, %rd484, %rd492;
	add.s64 	%rd494, %rd493, %rd489;
	add.s64 	%rd495, %rd494, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9120,%dummy}, %rd483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9121}, %rd483;
	}
	shf.r.wrap.b32 	%r9122, %r9121, %r9120, 28;
	shf.r.wrap.b32 	%r9123, %r9120, %r9121, 28;
	mov.b64 	%rd496, {%r9123, %r9122};
	shf.l.wrap.b32 	%r9124, %r9120, %r9121, 30;
	shf.l.wrap.b32 	%r9125, %r9121, %r9120, 30;
	mov.b64 	%rd497, {%r9125, %r9124};
	xor.b64  	%rd498, %rd497, %rd496;
	shf.l.wrap.b32 	%r9126, %r9120, %r9121, 25;
	shf.l.wrap.b32 	%r9127, %r9121, %r9120, 25;
	mov.b64 	%rd499, {%r9127, %r9126};
	xor.b64  	%rd500, %rd498, %rd499;
	xor.b64  	%rd501, %rd483, %rd437;
	xor.b64  	%rd502, %rd483, %rd460;
	and.b64  	%rd503, %rd502, %rd501;
	xor.b64  	%rd504, %rd503, %rd483;
	add.s64 	%rd505, %rd494, %rd504;
	add.s64 	%rd506, %rd505, %rd500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9128,%dummy}, %rd495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9129}, %rd495;
	}
	shf.r.wrap.b32 	%r9130, %r9129, %r9128, 14;
	shf.r.wrap.b32 	%r9131, %r9128, %r9129, 14;
	mov.b64 	%rd507, {%r9131, %r9130};
	shf.r.wrap.b32 	%r9132, %r9129, %r9128, 18;
	shf.r.wrap.b32 	%r9133, %r9128, %r9129, 18;
	mov.b64 	%rd508, {%r9133, %r9132};
	xor.b64  	%rd509, %rd508, %rd507;
	shf.l.wrap.b32 	%r9134, %r9128, %r9129, 23;
	shf.l.wrap.b32 	%r9135, %r9129, %r9128, 23;
	mov.b64 	%rd510, {%r9135, %r9134};
	xor.b64  	%rd511, %rd509, %rd510;
	xor.b64  	%rd512, %rd472, %rd449;
	and.b64  	%rd513, %rd495, %rd512;
	xor.b64  	%rd514, %rd513, %rd449;
	add.s64 	%rd515, %rd426, %rd177;
	add.s64 	%rd516, %rd515, %rd2752;
	add.s64 	%rd517, %rd516, %rd514;
	add.s64 	%rd518, %rd517, %rd511;
	add.s64 	%rd519, %rd518, %rd437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9136,%dummy}, %rd506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9137}, %rd506;
	}
	shf.r.wrap.b32 	%r9138, %r9137, %r9136, 28;
	shf.r.wrap.b32 	%r9139, %r9136, %r9137, 28;
	mov.b64 	%rd520, {%r9139, %r9138};
	shf.l.wrap.b32 	%r9140, %r9136, %r9137, 30;
	shf.l.wrap.b32 	%r9141, %r9137, %r9136, 30;
	mov.b64 	%rd521, {%r9141, %r9140};
	xor.b64  	%rd522, %rd521, %rd520;
	shf.l.wrap.b32 	%r9142, %r9136, %r9137, 25;
	shf.l.wrap.b32 	%r9143, %r9137, %r9136, 25;
	mov.b64 	%rd523, {%r9143, %r9142};
	xor.b64  	%rd524, %rd522, %rd523;
	xor.b64  	%rd525, %rd506, %rd460;
	xor.b64  	%rd526, %rd506, %rd483;
	and.b64  	%rd527, %rd526, %rd525;
	xor.b64  	%rd528, %rd527, %rd506;
	add.s64 	%rd529, %rd518, %rd528;
	add.s64 	%rd530, %rd529, %rd524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9144,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9145}, %rd174;
	}
	shf.r.wrap.b32 	%r9146, %r9145, %r9144, 1;
	shf.r.wrap.b32 	%r9147, %r9144, %r9145, 1;
	mov.b64 	%rd531, {%r9147, %r9146};
	shf.r.wrap.b32 	%r9148, %r9145, %r9144, 8;
	shf.r.wrap.b32 	%r9149, %r9144, %r9145, 8;
	mov.b64 	%rd532, {%r9149, %r9148};
	shr.u64 	%rd533, %rd174, 7;
	xor.b64  	%rd534, %rd531, %rd533;
	xor.b64  	%rd535, %rd534, %rd532;
	add.s64 	%rd536, %rd173, %rd19;
	add.s64 	%rd537, %rd536, %rd535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9150,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9151}, %rd177;
	}
	shf.r.wrap.b32 	%r9152, %r9151, %r9150, 19;
	shf.r.wrap.b32 	%r9153, %r9150, %r9151, 19;
	mov.b64 	%rd538, {%r9153, %r9152};
	shf.l.wrap.b32 	%r9154, %r9150, %r9151, 3;
	shf.l.wrap.b32 	%r9155, %r9151, %r9150, 3;
	mov.b64 	%rd539, {%r9155, %r9154};
	shr.u64 	%rd540, %rd177, 6;
	xor.b64  	%rd541, %rd538, %rd540;
	xor.b64  	%rd542, %rd541, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9156,%dummy}, %rd175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9157}, %rd175;
	}
	shf.r.wrap.b32 	%r9158, %r9157, %r9156, 1;
	shf.r.wrap.b32 	%r9159, %r9156, %r9157, 1;
	mov.b64 	%rd543, {%r9159, %r9158};
	shf.r.wrap.b32 	%r9160, %r9157, %r9156, 8;
	shf.r.wrap.b32 	%r9161, %r9156, %r9157, 8;
	mov.b64 	%rd544, {%r9161, %r9160};
	shr.u64 	%rd545, %rd175, 7;
	xor.b64  	%rd546, %rd543, %rd545;
	xor.b64  	%rd547, %rd546, %rd544;
	add.s64 	%rd548, %rd174, %rd542;
	add.s64 	%rd549, %rd548, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9162,%dummy}, %rd537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9163}, %rd537;
	}
	shf.r.wrap.b32 	%r9164, %r9163, %r9162, 19;
	shf.r.wrap.b32 	%r9165, %r9162, %r9163, 19;
	mov.b64 	%rd550, {%r9165, %r9164};
	shf.l.wrap.b32 	%r9166, %r9162, %r9163, 3;
	shf.l.wrap.b32 	%r9167, %r9163, %r9162, 3;
	mov.b64 	%rd551, {%r9167, %r9166};
	shr.u64 	%rd552, %rd537, 6;
	xor.b64  	%rd553, %rd550, %rd552;
	xor.b64  	%rd554, %rd553, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9168,%dummy}, %rd176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9169}, %rd176;
	}
	shf.r.wrap.b32 	%r9170, %r9169, %r9168, 1;
	shf.r.wrap.b32 	%r9171, %r9168, %r9169, 1;
	mov.b64 	%rd555, {%r9171, %r9170};
	shf.r.wrap.b32 	%r9172, %r9169, %r9168, 8;
	shf.r.wrap.b32 	%r9173, %r9168, %r9169, 8;
	mov.b64 	%rd556, {%r9173, %r9172};
	shr.u64 	%rd557, %rd176, 7;
	xor.b64  	%rd558, %rd555, %rd557;
	xor.b64  	%rd559, %rd558, %rd556;
	add.s64 	%rd560, %rd175, %rd554;
	add.s64 	%rd561, %rd560, %rd559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9174,%dummy}, %rd549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9175}, %rd549;
	}
	shf.r.wrap.b32 	%r9176, %r9175, %r9174, 19;
	shf.r.wrap.b32 	%r9177, %r9174, %r9175, 19;
	mov.b64 	%rd562, {%r9177, %r9176};
	shf.l.wrap.b32 	%r9178, %r9174, %r9175, 3;
	shf.l.wrap.b32 	%r9179, %r9175, %r9174, 3;
	mov.b64 	%rd563, {%r9179, %r9178};
	shr.u64 	%rd564, %rd549, 6;
	xor.b64  	%rd565, %rd562, %rd564;
	xor.b64  	%rd566, %rd565, %rd563;
	add.s64 	%rd567, %rd176, %rd566;
	add.s64 	%rd568, %rd567, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9180,%dummy}, %rd561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9181}, %rd561;
	}
	shf.r.wrap.b32 	%r9182, %r9181, %r9180, 19;
	shf.r.wrap.b32 	%r9183, %r9180, %r9181, 19;
	mov.b64 	%rd569, {%r9183, %r9182};
	shf.l.wrap.b32 	%r9184, %r9180, %r9181, 3;
	shf.l.wrap.b32 	%r9185, %r9181, %r9180, 3;
	mov.b64 	%rd570, {%r9185, %r9184};
	shr.u64 	%rd571, %rd561, 6;
	xor.b64  	%rd572, %rd569, %rd571;
	xor.b64  	%rd573, %rd572, %rd570;
	add.s64 	%rd574, %rd573, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9186,%dummy}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9187}, %rd568;
	}
	shf.r.wrap.b32 	%r9188, %r9187, %r9186, 19;
	shf.r.wrap.b32 	%r9189, %r9186, %r9187, 19;
	mov.b64 	%rd575, {%r9189, %r9188};
	shf.l.wrap.b32 	%r9190, %r9186, %r9187, 3;
	shf.l.wrap.b32 	%r9191, %r9187, %r9186, 3;
	mov.b64 	%rd576, {%r9191, %r9190};
	shr.u64 	%rd577, %rd568, 6;
	xor.b64  	%rd578, %rd575, %rd577;
	xor.b64  	%rd579, %rd578, %rd576;
	add.s64 	%rd580, %rd579, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9192,%dummy}, %rd574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9193}, %rd574;
	}
	shf.r.wrap.b32 	%r9194, %r9193, %r9192, 19;
	shf.r.wrap.b32 	%r9195, %r9192, %r9193, 19;
	mov.b64 	%rd581, {%r9195, %r9194};
	shf.l.wrap.b32 	%r9196, %r9192, %r9193, 3;
	shf.l.wrap.b32 	%r9197, %r9193, %r9192, 3;
	mov.b64 	%rd582, {%r9197, %r9196};
	shr.u64 	%rd583, %rd574, 6;
	xor.b64  	%rd584, %rd581, %rd583;
	xor.b64  	%rd585, %rd584, %rd582;
	add.s64 	%rd586, %rd177, %rd585;
	add.s64 	%rd587, %rd586, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9198,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9199}, %rd580;
	}
	shf.r.wrap.b32 	%r9200, %r9199, %r9198, 19;
	shf.r.wrap.b32 	%r9201, %r9198, %r9199, 19;
	mov.b64 	%rd588, {%r9201, %r9200};
	shf.l.wrap.b32 	%r9202, %r9198, %r9199, 3;
	shf.l.wrap.b32 	%r9203, %r9199, %r9198, 3;
	mov.b64 	%rd589, {%r9203, %r9202};
	shr.u64 	%rd590, %rd580, 6;
	xor.b64  	%rd591, %rd588, %rd590;
	xor.b64  	%rd592, %rd591, %rd589;
	add.s64 	%rd593, %rd537, %rd592;
	add.s64 	%rd594, %rd593, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9204,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9205}, %rd587;
	}
	shf.r.wrap.b32 	%r9206, %r9205, %r9204, 19;
	shf.r.wrap.b32 	%r9207, %r9204, %r9205, 19;
	mov.b64 	%rd595, {%r9207, %r9206};
	shf.l.wrap.b32 	%r9208, %r9204, %r9205, 3;
	shf.l.wrap.b32 	%r9209, %r9205, %r9204, 3;
	mov.b64 	%rd596, {%r9209, %r9208};
	shr.u64 	%rd597, %rd587, 6;
	xor.b64  	%rd598, %rd595, %rd597;
	xor.b64  	%rd599, %rd598, %rd596;
	add.s64 	%rd600, %rd549, %rd599;
	add.s64 	%rd601, %rd600, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9210,%dummy}, %rd594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9211}, %rd594;
	}
	shf.r.wrap.b32 	%r9212, %r9211, %r9210, 19;
	shf.r.wrap.b32 	%r9213, %r9210, %r9211, 19;
	mov.b64 	%rd602, {%r9213, %r9212};
	shf.l.wrap.b32 	%r9214, %r9210, %r9211, 3;
	shf.l.wrap.b32 	%r9215, %r9211, %r9210, 3;
	mov.b64 	%rd603, {%r9215, %r9214};
	shr.u64 	%rd604, %rd594, 6;
	xor.b64  	%rd605, %rd602, %rd604;
	xor.b64  	%rd606, %rd605, %rd603;
	add.s64 	%rd607, %rd561, %rd606;
	add.s64 	%rd608, %rd607, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9216,%dummy}, %rd601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9217}, %rd601;
	}
	shf.r.wrap.b32 	%r9218, %r9217, %r9216, 19;
	shf.r.wrap.b32 	%r9219, %r9216, %r9217, 19;
	mov.b64 	%rd609, {%r9219, %r9218};
	shf.l.wrap.b32 	%r9220, %r9216, %r9217, 3;
	shf.l.wrap.b32 	%r9221, %r9217, %r9216, 3;
	mov.b64 	%rd610, {%r9221, %r9220};
	shr.u64 	%rd611, %rd601, 6;
	xor.b64  	%rd612, %rd609, %rd611;
	xor.b64  	%rd613, %rd612, %rd610;
	add.s64 	%rd614, %rd568, %rd613;
	add.s64 	%rd615, %rd614, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9222,%dummy}, %rd608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9223}, %rd608;
	}
	shf.r.wrap.b32 	%r9224, %r9223, %r9222, 19;
	shf.r.wrap.b32 	%r9225, %r9222, %r9223, 19;
	mov.b64 	%rd616, {%r9225, %r9224};
	shf.l.wrap.b32 	%r9226, %r9222, %r9223, 3;
	shf.l.wrap.b32 	%r9227, %r9223, %r9222, 3;
	mov.b64 	%rd617, {%r9227, %r9226};
	shr.u64 	%rd618, %rd608, 6;
	xor.b64  	%rd619, %rd616, %rd618;
	xor.b64  	%rd620, %rd619, %rd617;
	add.s64 	%rd621, %rd574, %rd620;
	add.s64 	%rd622, %rd621, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9228,%dummy}, %rd615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9229}, %rd615;
	}
	shf.r.wrap.b32 	%r9230, %r9229, %r9228, 19;
	shf.r.wrap.b32 	%r9231, %r9228, %r9229, 19;
	mov.b64 	%rd623, {%r9231, %r9230};
	shf.l.wrap.b32 	%r9232, %r9228, %r9229, 3;
	shf.l.wrap.b32 	%r9233, %r9229, %r9228, 3;
	mov.b64 	%rd624, {%r9233, %r9232};
	shr.u64 	%rd625, %rd615, 6;
	xor.b64  	%rd626, %rd623, %rd625;
	xor.b64  	%rd627, %rd626, %rd624;
	add.s64 	%rd628, %rd580, %rd627;
	add.s64 	%rd629, %rd628, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9234,%dummy}, %rd622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9235}, %rd622;
	}
	shf.r.wrap.b32 	%r9236, %r9235, %r9234, 19;
	shf.r.wrap.b32 	%r9237, %r9234, %r9235, 19;
	mov.b64 	%rd630, {%r9237, %r9236};
	shf.l.wrap.b32 	%r9238, %r9234, %r9235, 3;
	shf.l.wrap.b32 	%r9239, %r9235, %r9234, 3;
	mov.b64 	%rd631, {%r9239, %r9238};
	shr.u64 	%rd632, %rd622, 6;
	xor.b64  	%rd633, %rd630, %rd632;
	xor.b64  	%rd634, %rd633, %rd631;
	add.s64 	%rd635, %rd587, %rd634;
	add.s64 	%rd636, %rd635, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9240,%dummy}, %rd629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9241}, %rd629;
	}
	shf.r.wrap.b32 	%r9242, %r9241, %r9240, 19;
	shf.r.wrap.b32 	%r9243, %r9240, %r9241, 19;
	mov.b64 	%rd637, {%r9243, %r9242};
	shf.l.wrap.b32 	%r9244, %r9240, %r9241, 3;
	shf.l.wrap.b32 	%r9245, %r9241, %r9240, 3;
	mov.b64 	%rd638, {%r9245, %r9244};
	shr.u64 	%rd639, %rd629, 6;
	xor.b64  	%rd640, %rd637, %rd639;
	xor.b64  	%rd641, %rd640, %rd638;
	shf.r.wrap.b32 	%r9246, %r9151, %r9150, 1;
	shf.r.wrap.b32 	%r9247, %r9150, %r9151, 1;
	mov.b64 	%rd642, {%r9247, %r9246};
	shf.r.wrap.b32 	%r9248, %r9151, %r9150, 8;
	shf.r.wrap.b32 	%r9249, %r9150, %r9151, 8;
	mov.b64 	%rd643, {%r9249, %r9248};
	shr.u64 	%rd644, %rd177, 7;
	xor.b64  	%rd645, %rd642, %rd644;
	xor.b64  	%rd646, %rd645, %rd643;
	add.s64 	%rd647, %rd594, %rd641;
	add.s64 	%rd648, %rd647, %rd646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9250,%dummy}, %rd636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9251}, %rd636;
	}
	shf.r.wrap.b32 	%r9252, %r9251, %r9250, 19;
	shf.r.wrap.b32 	%r9253, %r9250, %r9251, 19;
	mov.b64 	%rd649, {%r9253, %r9252};
	shf.l.wrap.b32 	%r9254, %r9250, %r9251, 3;
	shf.l.wrap.b32 	%r9255, %r9251, %r9250, 3;
	mov.b64 	%rd650, {%r9255, %r9254};
	shr.u64 	%rd651, %rd636, 6;
	xor.b64  	%rd652, %rd649, %rd651;
	xor.b64  	%rd653, %rd652, %rd650;
	shf.r.wrap.b32 	%r9256, %r9163, %r9162, 1;
	shf.r.wrap.b32 	%r9257, %r9162, %r9163, 1;
	mov.b64 	%rd654, {%r9257, %r9256};
	shf.r.wrap.b32 	%r9258, %r9163, %r9162, 8;
	shf.r.wrap.b32 	%r9259, %r9162, %r9163, 8;
	mov.b64 	%rd655, {%r9259, %r9258};
	shr.u64 	%rd656, %rd537, 7;
	xor.b64  	%rd657, %rd654, %rd656;
	xor.b64  	%rd658, %rd657, %rd655;
	add.s64 	%rd659, %rd601, %rd177;
	add.s64 	%rd660, %rd659, %rd653;
	add.s64 	%rd661, %rd660, %rd658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9260,%dummy}, %rd519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9261}, %rd519;
	}
	shf.r.wrap.b32 	%r9262, %r9261, %r9260, 14;
	shf.r.wrap.b32 	%r9263, %r9260, %r9261, 14;
	mov.b64 	%rd662, {%r9263, %r9262};
	shf.r.wrap.b32 	%r9264, %r9261, %r9260, 18;
	shf.r.wrap.b32 	%r9265, %r9260, %r9261, 18;
	mov.b64 	%rd663, {%r9265, %r9264};
	xor.b64  	%rd664, %rd663, %rd662;
	shf.l.wrap.b32 	%r9266, %r9260, %r9261, 23;
	shf.l.wrap.b32 	%r9267, %r9261, %r9260, 23;
	mov.b64 	%rd665, {%r9267, %r9266};
	xor.b64  	%rd666, %rd664, %rd665;
	xor.b64  	%rd667, %rd472, %rd495;
	and.b64  	%rd668, %rd667, %rd519;
	xor.b64  	%rd669, %rd668, %rd472;
	add.s64 	%rd670, %rd669, %rd449;
	add.s64 	%rd671, %rd670, %rd537;
	add.s64 	%rd672, %rd671, %rd2753;
	add.s64 	%rd673, %rd672, %rd666;
	add.s64 	%rd674, %rd673, %rd460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9268,%dummy}, %rd530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9269}, %rd530;
	}
	shf.r.wrap.b32 	%r9270, %r9269, %r9268, 28;
	shf.r.wrap.b32 	%r9271, %r9268, %r9269, 28;
	mov.b64 	%rd675, {%r9271, %r9270};
	shf.l.wrap.b32 	%r9272, %r9268, %r9269, 30;
	shf.l.wrap.b32 	%r9273, %r9269, %r9268, 30;
	mov.b64 	%rd676, {%r9273, %r9272};
	xor.b64  	%rd677, %rd676, %rd675;
	shf.l.wrap.b32 	%r9274, %r9268, %r9269, 25;
	shf.l.wrap.b32 	%r9275, %r9269, %r9268, 25;
	mov.b64 	%rd678, {%r9275, %r9274};
	xor.b64  	%rd679, %rd677, %rd678;
	xor.b64  	%rd680, %rd530, %rd483;
	xor.b64  	%rd681, %rd530, %rd506;
	and.b64  	%rd682, %rd681, %rd680;
	xor.b64  	%rd683, %rd682, %rd530;
	add.s64 	%rd684, %rd673, %rd683;
	add.s64 	%rd685, %rd684, %rd679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9276,%dummy}, %rd674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9277}, %rd674;
	}
	shf.r.wrap.b32 	%r9278, %r9277, %r9276, 14;
	shf.r.wrap.b32 	%r9279, %r9276, %r9277, 14;
	mov.b64 	%rd686, {%r9279, %r9278};
	shf.r.wrap.b32 	%r9280, %r9277, %r9276, 18;
	shf.r.wrap.b32 	%r9281, %r9276, %r9277, 18;
	mov.b64 	%rd687, {%r9281, %r9280};
	xor.b64  	%rd688, %rd687, %rd686;
	shf.l.wrap.b32 	%r9282, %r9276, %r9277, 23;
	shf.l.wrap.b32 	%r9283, %r9277, %r9276, 23;
	mov.b64 	%rd689, {%r9283, %r9282};
	xor.b64  	%rd690, %rd688, %rd689;
	xor.b64  	%rd691, %rd495, %rd519;
	and.b64  	%rd692, %rd674, %rd691;
	xor.b64  	%rd693, %rd692, %rd495;
	add.s64 	%rd694, %rd549, %rd472;
	add.s64 	%rd695, %rd694, %rd2754;
	add.s64 	%rd696, %rd695, %rd693;
	add.s64 	%rd697, %rd696, %rd690;
	add.s64 	%rd698, %rd697, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9284,%dummy}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9285}, %rd685;
	}
	shf.r.wrap.b32 	%r9286, %r9285, %r9284, 28;
	shf.r.wrap.b32 	%r9287, %r9284, %r9285, 28;
	mov.b64 	%rd699, {%r9287, %r9286};
	shf.l.wrap.b32 	%r9288, %r9284, %r9285, 30;
	shf.l.wrap.b32 	%r9289, %r9285, %r9284, 30;
	mov.b64 	%rd700, {%r9289, %r9288};
	xor.b64  	%rd701, %rd700, %rd699;
	shf.l.wrap.b32 	%r9290, %r9284, %r9285, 25;
	shf.l.wrap.b32 	%r9291, %r9285, %r9284, 25;
	mov.b64 	%rd702, {%r9291, %r9290};
	xor.b64  	%rd703, %rd701, %rd702;
	xor.b64  	%rd704, %rd685, %rd506;
	xor.b64  	%rd705, %rd685, %rd530;
	and.b64  	%rd706, %rd705, %rd704;
	xor.b64  	%rd707, %rd706, %rd685;
	add.s64 	%rd708, %rd697, %rd707;
	add.s64 	%rd709, %rd708, %rd703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9292,%dummy}, %rd698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9293}, %rd698;
	}
	shf.r.wrap.b32 	%r9294, %r9293, %r9292, 14;
	shf.r.wrap.b32 	%r9295, %r9292, %r9293, 14;
	mov.b64 	%rd710, {%r9295, %r9294};
	shf.r.wrap.b32 	%r9296, %r9293, %r9292, 18;
	shf.r.wrap.b32 	%r9297, %r9292, %r9293, 18;
	mov.b64 	%rd711, {%r9297, %r9296};
	xor.b64  	%rd712, %rd711, %rd710;
	shf.l.wrap.b32 	%r9298, %r9292, %r9293, 23;
	shf.l.wrap.b32 	%r9299, %r9293, %r9292, 23;
	mov.b64 	%rd713, {%r9299, %r9298};
	xor.b64  	%rd714, %rd712, %rd713;
	xor.b64  	%rd715, %rd674, %rd519;
	and.b64  	%rd716, %rd698, %rd715;
	xor.b64  	%rd717, %rd716, %rd519;
	add.s64 	%rd718, %rd561, %rd495;
	add.s64 	%rd719, %rd718, %rd2755;
	add.s64 	%rd720, %rd719, %rd717;
	add.s64 	%rd721, %rd720, %rd714;
	add.s64 	%rd722, %rd721, %rd506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9300,%dummy}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9301}, %rd709;
	}
	shf.r.wrap.b32 	%r9302, %r9301, %r9300, 28;
	shf.r.wrap.b32 	%r9303, %r9300, %r9301, 28;
	mov.b64 	%rd723, {%r9303, %r9302};
	shf.l.wrap.b32 	%r9304, %r9300, %r9301, 30;
	shf.l.wrap.b32 	%r9305, %r9301, %r9300, 30;
	mov.b64 	%rd724, {%r9305, %r9304};
	xor.b64  	%rd725, %rd724, %rd723;
	shf.l.wrap.b32 	%r9306, %r9300, %r9301, 25;
	shf.l.wrap.b32 	%r9307, %r9301, %r9300, 25;
	mov.b64 	%rd726, {%r9307, %r9306};
	xor.b64  	%rd727, %rd725, %rd726;
	xor.b64  	%rd728, %rd709, %rd530;
	xor.b64  	%rd729, %rd709, %rd685;
	and.b64  	%rd730, %rd729, %rd728;
	xor.b64  	%rd731, %rd730, %rd709;
	add.s64 	%rd732, %rd721, %rd731;
	add.s64 	%rd733, %rd732, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9308,%dummy}, %rd722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9309}, %rd722;
	}
	shf.r.wrap.b32 	%r9310, %r9309, %r9308, 14;
	shf.r.wrap.b32 	%r9311, %r9308, %r9309, 14;
	mov.b64 	%rd734, {%r9311, %r9310};
	shf.r.wrap.b32 	%r9312, %r9309, %r9308, 18;
	shf.r.wrap.b32 	%r9313, %r9308, %r9309, 18;
	mov.b64 	%rd735, {%r9313, %r9312};
	xor.b64  	%rd736, %rd735, %rd734;
	shf.l.wrap.b32 	%r9314, %r9308, %r9309, 23;
	shf.l.wrap.b32 	%r9315, %r9309, %r9308, 23;
	mov.b64 	%rd737, {%r9315, %r9314};
	xor.b64  	%rd738, %rd736, %rd737;
	xor.b64  	%rd739, %rd698, %rd674;
	and.b64  	%rd740, %rd722, %rd739;
	xor.b64  	%rd741, %rd740, %rd674;
	add.s64 	%rd742, %rd568, %rd519;
	add.s64 	%rd743, %rd742, %rd2756;
	add.s64 	%rd744, %rd743, %rd741;
	add.s64 	%rd745, %rd744, %rd738;
	add.s64 	%rd746, %rd745, %rd530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9316,%dummy}, %rd733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9317}, %rd733;
	}
	shf.r.wrap.b32 	%r9318, %r9317, %r9316, 28;
	shf.r.wrap.b32 	%r9319, %r9316, %r9317, 28;
	mov.b64 	%rd747, {%r9319, %r9318};
	shf.l.wrap.b32 	%r9320, %r9316, %r9317, 30;
	shf.l.wrap.b32 	%r9321, %r9317, %r9316, 30;
	mov.b64 	%rd748, {%r9321, %r9320};
	xor.b64  	%rd749, %rd748, %rd747;
	shf.l.wrap.b32 	%r9322, %r9316, %r9317, 25;
	shf.l.wrap.b32 	%r9323, %r9317, %r9316, 25;
	mov.b64 	%rd750, {%r9323, %r9322};
	xor.b64  	%rd751, %rd749, %rd750;
	xor.b64  	%rd752, %rd733, %rd685;
	xor.b64  	%rd753, %rd733, %rd709;
	and.b64  	%rd754, %rd753, %rd752;
	xor.b64  	%rd755, %rd754, %rd733;
	add.s64 	%rd756, %rd745, %rd755;
	add.s64 	%rd757, %rd756, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9324,%dummy}, %rd746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9325}, %rd746;
	}
	shf.r.wrap.b32 	%r9326, %r9325, %r9324, 14;
	shf.r.wrap.b32 	%r9327, %r9324, %r9325, 14;
	mov.b64 	%rd758, {%r9327, %r9326};
	shf.r.wrap.b32 	%r9328, %r9325, %r9324, 18;
	shf.r.wrap.b32 	%r9329, %r9324, %r9325, 18;
	mov.b64 	%rd759, {%r9329, %r9328};
	xor.b64  	%rd760, %rd759, %rd758;
	shf.l.wrap.b32 	%r9330, %r9324, %r9325, 23;
	shf.l.wrap.b32 	%r9331, %r9325, %r9324, 23;
	mov.b64 	%rd761, {%r9331, %r9330};
	xor.b64  	%rd762, %rd760, %rd761;
	xor.b64  	%rd763, %rd722, %rd698;
	and.b64  	%rd764, %rd746, %rd763;
	xor.b64  	%rd765, %rd764, %rd698;
	add.s64 	%rd766, %rd674, %rd574;
	add.s64 	%rd767, %rd766, %rd2757;
	add.s64 	%rd768, %rd767, %rd765;
	add.s64 	%rd769, %rd768, %rd762;
	add.s64 	%rd770, %rd769, %rd685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9332,%dummy}, %rd757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9333}, %rd757;
	}
	shf.r.wrap.b32 	%r9334, %r9333, %r9332, 28;
	shf.r.wrap.b32 	%r9335, %r9332, %r9333, 28;
	mov.b64 	%rd771, {%r9335, %r9334};
	shf.l.wrap.b32 	%r9336, %r9332, %r9333, 30;
	shf.l.wrap.b32 	%r9337, %r9333, %r9332, 30;
	mov.b64 	%rd772, {%r9337, %r9336};
	xor.b64  	%rd773, %rd772, %rd771;
	shf.l.wrap.b32 	%r9338, %r9332, %r9333, 25;
	shf.l.wrap.b32 	%r9339, %r9333, %r9332, 25;
	mov.b64 	%rd774, {%r9339, %r9338};
	xor.b64  	%rd775, %rd773, %rd774;
	xor.b64  	%rd776, %rd757, %rd709;
	xor.b64  	%rd777, %rd757, %rd733;
	and.b64  	%rd778, %rd777, %rd776;
	xor.b64  	%rd779, %rd778, %rd757;
	add.s64 	%rd780, %rd769, %rd779;
	add.s64 	%rd781, %rd780, %rd775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9340,%dummy}, %rd770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9341}, %rd770;
	}
	shf.r.wrap.b32 	%r9342, %r9341, %r9340, 14;
	shf.r.wrap.b32 	%r9343, %r9340, %r9341, 14;
	mov.b64 	%rd782, {%r9343, %r9342};
	shf.r.wrap.b32 	%r9344, %r9341, %r9340, 18;
	shf.r.wrap.b32 	%r9345, %r9340, %r9341, 18;
	mov.b64 	%rd783, {%r9345, %r9344};
	xor.b64  	%rd784, %rd783, %rd782;
	shf.l.wrap.b32 	%r9346, %r9340, %r9341, 23;
	shf.l.wrap.b32 	%r9347, %r9341, %r9340, 23;
	mov.b64 	%rd785, {%r9347, %r9346};
	xor.b64  	%rd786, %rd784, %rd785;
	xor.b64  	%rd787, %rd746, %rd722;
	and.b64  	%rd788, %rd770, %rd787;
	xor.b64  	%rd789, %rd788, %rd722;
	add.s64 	%rd790, %rd698, %rd580;
	add.s64 	%rd791, %rd790, %rd2758;
	add.s64 	%rd792, %rd791, %rd789;
	add.s64 	%rd793, %rd792, %rd786;
	add.s64 	%rd794, %rd793, %rd709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9348,%dummy}, %rd781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9349}, %rd781;
	}
	shf.r.wrap.b32 	%r9350, %r9349, %r9348, 28;
	shf.r.wrap.b32 	%r9351, %r9348, %r9349, 28;
	mov.b64 	%rd795, {%r9351, %r9350};
	shf.l.wrap.b32 	%r9352, %r9348, %r9349, 30;
	shf.l.wrap.b32 	%r9353, %r9349, %r9348, 30;
	mov.b64 	%rd796, {%r9353, %r9352};
	xor.b64  	%rd797, %rd796, %rd795;
	shf.l.wrap.b32 	%r9354, %r9348, %r9349, 25;
	shf.l.wrap.b32 	%r9355, %r9349, %r9348, 25;
	mov.b64 	%rd798, {%r9355, %r9354};
	xor.b64  	%rd799, %rd797, %rd798;
	xor.b64  	%rd800, %rd781, %rd733;
	xor.b64  	%rd801, %rd781, %rd757;
	and.b64  	%rd802, %rd801, %rd800;
	xor.b64  	%rd803, %rd802, %rd781;
	add.s64 	%rd804, %rd793, %rd803;
	add.s64 	%rd805, %rd804, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9356,%dummy}, %rd794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9357}, %rd794;
	}
	shf.r.wrap.b32 	%r9358, %r9357, %r9356, 14;
	shf.r.wrap.b32 	%r9359, %r9356, %r9357, 14;
	mov.b64 	%rd806, {%r9359, %r9358};
	shf.r.wrap.b32 	%r9360, %r9357, %r9356, 18;
	shf.r.wrap.b32 	%r9361, %r9356, %r9357, 18;
	mov.b64 	%rd807, {%r9361, %r9360};
	xor.b64  	%rd808, %rd807, %rd806;
	shf.l.wrap.b32 	%r9362, %r9356, %r9357, 23;
	shf.l.wrap.b32 	%r9363, %r9357, %r9356, 23;
	mov.b64 	%rd809, {%r9363, %r9362};
	xor.b64  	%rd810, %rd808, %rd809;
	xor.b64  	%rd811, %rd770, %rd746;
	and.b64  	%rd812, %rd794, %rd811;
	xor.b64  	%rd813, %rd812, %rd746;
	add.s64 	%rd814, %rd722, %rd587;
	add.s64 	%rd815, %rd814, %rd2759;
	add.s64 	%rd816, %rd815, %rd813;
	add.s64 	%rd817, %rd816, %rd810;
	add.s64 	%rd818, %rd817, %rd733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9364,%dummy}, %rd805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9365}, %rd805;
	}
	shf.r.wrap.b32 	%r9366, %r9365, %r9364, 28;
	shf.r.wrap.b32 	%r9367, %r9364, %r9365, 28;
	mov.b64 	%rd819, {%r9367, %r9366};
	shf.l.wrap.b32 	%r9368, %r9364, %r9365, 30;
	shf.l.wrap.b32 	%r9369, %r9365, %r9364, 30;
	mov.b64 	%rd820, {%r9369, %r9368};
	xor.b64  	%rd821, %rd820, %rd819;
	shf.l.wrap.b32 	%r9370, %r9364, %r9365, 25;
	shf.l.wrap.b32 	%r9371, %r9365, %r9364, 25;
	mov.b64 	%rd822, {%r9371, %r9370};
	xor.b64  	%rd823, %rd821, %rd822;
	xor.b64  	%rd824, %rd805, %rd757;
	xor.b64  	%rd825, %rd805, %rd781;
	and.b64  	%rd826, %rd825, %rd824;
	xor.b64  	%rd827, %rd826, %rd805;
	add.s64 	%rd828, %rd817, %rd827;
	add.s64 	%rd829, %rd828, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9372,%dummy}, %rd818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9373}, %rd818;
	}
	shf.r.wrap.b32 	%r9374, %r9373, %r9372, 14;
	shf.r.wrap.b32 	%r9375, %r9372, %r9373, 14;
	mov.b64 	%rd830, {%r9375, %r9374};
	shf.r.wrap.b32 	%r9376, %r9373, %r9372, 18;
	shf.r.wrap.b32 	%r9377, %r9372, %r9373, 18;
	mov.b64 	%rd831, {%r9377, %r9376};
	xor.b64  	%rd832, %rd831, %rd830;
	shf.l.wrap.b32 	%r9378, %r9372, %r9373, 23;
	shf.l.wrap.b32 	%r9379, %r9373, %r9372, 23;
	mov.b64 	%rd833, {%r9379, %r9378};
	xor.b64  	%rd834, %rd832, %rd833;
	xor.b64  	%rd835, %rd794, %rd770;
	and.b64  	%rd836, %rd818, %rd835;
	xor.b64  	%rd837, %rd836, %rd770;
	add.s64 	%rd838, %rd746, %rd594;
	add.s64 	%rd839, %rd838, %rd2760;
	add.s64 	%rd840, %rd839, %rd837;
	add.s64 	%rd841, %rd840, %rd834;
	add.s64 	%rd842, %rd841, %rd757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9380,%dummy}, %rd829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9381}, %rd829;
	}
	shf.r.wrap.b32 	%r9382, %r9381, %r9380, 28;
	shf.r.wrap.b32 	%r9383, %r9380, %r9381, 28;
	mov.b64 	%rd843, {%r9383, %r9382};
	shf.l.wrap.b32 	%r9384, %r9380, %r9381, 30;
	shf.l.wrap.b32 	%r9385, %r9381, %r9380, 30;
	mov.b64 	%rd844, {%r9385, %r9384};
	xor.b64  	%rd845, %rd844, %rd843;
	shf.l.wrap.b32 	%r9386, %r9380, %r9381, 25;
	shf.l.wrap.b32 	%r9387, %r9381, %r9380, 25;
	mov.b64 	%rd846, {%r9387, %r9386};
	xor.b64  	%rd847, %rd845, %rd846;
	xor.b64  	%rd848, %rd829, %rd781;
	xor.b64  	%rd849, %rd829, %rd805;
	and.b64  	%rd850, %rd849, %rd848;
	xor.b64  	%rd851, %rd850, %rd829;
	add.s64 	%rd852, %rd841, %rd851;
	add.s64 	%rd853, %rd852, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9388,%dummy}, %rd842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9389}, %rd842;
	}
	shf.r.wrap.b32 	%r9390, %r9389, %r9388, 14;
	shf.r.wrap.b32 	%r9391, %r9388, %r9389, 14;
	mov.b64 	%rd854, {%r9391, %r9390};
	shf.r.wrap.b32 	%r9392, %r9389, %r9388, 18;
	shf.r.wrap.b32 	%r9393, %r9388, %r9389, 18;
	mov.b64 	%rd855, {%r9393, %r9392};
	xor.b64  	%rd856, %rd855, %rd854;
	shf.l.wrap.b32 	%r9394, %r9388, %r9389, 23;
	shf.l.wrap.b32 	%r9395, %r9389, %r9388, 23;
	mov.b64 	%rd857, {%r9395, %r9394};
	xor.b64  	%rd858, %rd856, %rd857;
	xor.b64  	%rd859, %rd818, %rd794;
	and.b64  	%rd860, %rd842, %rd859;
	xor.b64  	%rd861, %rd860, %rd794;
	add.s64 	%rd862, %rd770, %rd601;
	add.s64 	%rd863, %rd862, %rd2761;
	add.s64 	%rd864, %rd863, %rd861;
	add.s64 	%rd865, %rd864, %rd858;
	add.s64 	%rd866, %rd865, %rd781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9396,%dummy}, %rd853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9397}, %rd853;
	}
	shf.r.wrap.b32 	%r9398, %r9397, %r9396, 28;
	shf.r.wrap.b32 	%r9399, %r9396, %r9397, 28;
	mov.b64 	%rd867, {%r9399, %r9398};
	shf.l.wrap.b32 	%r9400, %r9396, %r9397, 30;
	shf.l.wrap.b32 	%r9401, %r9397, %r9396, 30;
	mov.b64 	%rd868, {%r9401, %r9400};
	xor.b64  	%rd869, %rd868, %rd867;
	shf.l.wrap.b32 	%r9402, %r9396, %r9397, 25;
	shf.l.wrap.b32 	%r9403, %r9397, %r9396, 25;
	mov.b64 	%rd870, {%r9403, %r9402};
	xor.b64  	%rd871, %rd869, %rd870;
	xor.b64  	%rd872, %rd853, %rd805;
	xor.b64  	%rd873, %rd853, %rd829;
	and.b64  	%rd874, %rd873, %rd872;
	xor.b64  	%rd875, %rd874, %rd853;
	add.s64 	%rd876, %rd865, %rd875;
	add.s64 	%rd877, %rd876, %rd871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9404,%dummy}, %rd866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9405}, %rd866;
	}
	shf.r.wrap.b32 	%r9406, %r9405, %r9404, 14;
	shf.r.wrap.b32 	%r9407, %r9404, %r9405, 14;
	mov.b64 	%rd878, {%r9407, %r9406};
	shf.r.wrap.b32 	%r9408, %r9405, %r9404, 18;
	shf.r.wrap.b32 	%r9409, %r9404, %r9405, 18;
	mov.b64 	%rd879, {%r9409, %r9408};
	xor.b64  	%rd880, %rd879, %rd878;
	shf.l.wrap.b32 	%r9410, %r9404, %r9405, 23;
	shf.l.wrap.b32 	%r9411, %r9405, %r9404, 23;
	mov.b64 	%rd881, {%r9411, %r9410};
	xor.b64  	%rd882, %rd880, %rd881;
	xor.b64  	%rd883, %rd842, %rd818;
	and.b64  	%rd884, %rd866, %rd883;
	xor.b64  	%rd885, %rd884, %rd818;
	add.s64 	%rd886, %rd794, %rd608;
	add.s64 	%rd887, %rd886, %rd2762;
	add.s64 	%rd888, %rd887, %rd885;
	add.s64 	%rd889, %rd888, %rd882;
	add.s64 	%rd890, %rd889, %rd805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9412,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9413}, %rd877;
	}
	shf.r.wrap.b32 	%r9414, %r9413, %r9412, 28;
	shf.r.wrap.b32 	%r9415, %r9412, %r9413, 28;
	mov.b64 	%rd891, {%r9415, %r9414};
	shf.l.wrap.b32 	%r9416, %r9412, %r9413, 30;
	shf.l.wrap.b32 	%r9417, %r9413, %r9412, 30;
	mov.b64 	%rd892, {%r9417, %r9416};
	xor.b64  	%rd893, %rd892, %rd891;
	shf.l.wrap.b32 	%r9418, %r9412, %r9413, 25;
	shf.l.wrap.b32 	%r9419, %r9413, %r9412, 25;
	mov.b64 	%rd894, {%r9419, %r9418};
	xor.b64  	%rd895, %rd893, %rd894;
	xor.b64  	%rd896, %rd877, %rd829;
	xor.b64  	%rd897, %rd877, %rd853;
	and.b64  	%rd898, %rd897, %rd896;
	xor.b64  	%rd899, %rd898, %rd877;
	add.s64 	%rd900, %rd889, %rd899;
	add.s64 	%rd901, %rd900, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9420,%dummy}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9421}, %rd890;
	}
	shf.r.wrap.b32 	%r9422, %r9421, %r9420, 14;
	shf.r.wrap.b32 	%r9423, %r9420, %r9421, 14;
	mov.b64 	%rd902, {%r9423, %r9422};
	shf.r.wrap.b32 	%r9424, %r9421, %r9420, 18;
	shf.r.wrap.b32 	%r9425, %r9420, %r9421, 18;
	mov.b64 	%rd903, {%r9425, %r9424};
	xor.b64  	%rd904, %rd903, %rd902;
	shf.l.wrap.b32 	%r9426, %r9420, %r9421, 23;
	shf.l.wrap.b32 	%r9427, %r9421, %r9420, 23;
	mov.b64 	%rd905, {%r9427, %r9426};
	xor.b64  	%rd906, %rd904, %rd905;
	xor.b64  	%rd907, %rd866, %rd842;
	and.b64  	%rd908, %rd890, %rd907;
	xor.b64  	%rd909, %rd908, %rd842;
	add.s64 	%rd910, %rd818, %rd615;
	add.s64 	%rd911, %rd910, %rd2763;
	add.s64 	%rd912, %rd911, %rd909;
	add.s64 	%rd913, %rd912, %rd906;
	add.s64 	%rd914, %rd913, %rd829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9428,%dummy}, %rd901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9429}, %rd901;
	}
	shf.r.wrap.b32 	%r9430, %r9429, %r9428, 28;
	shf.r.wrap.b32 	%r9431, %r9428, %r9429, 28;
	mov.b64 	%rd915, {%r9431, %r9430};
	shf.l.wrap.b32 	%r9432, %r9428, %r9429, 30;
	shf.l.wrap.b32 	%r9433, %r9429, %r9428, 30;
	mov.b64 	%rd916, {%r9433, %r9432};
	xor.b64  	%rd917, %rd916, %rd915;
	shf.l.wrap.b32 	%r9434, %r9428, %r9429, 25;
	shf.l.wrap.b32 	%r9435, %r9429, %r9428, 25;
	mov.b64 	%rd918, {%r9435, %r9434};
	xor.b64  	%rd919, %rd917, %rd918;
	xor.b64  	%rd920, %rd901, %rd853;
	xor.b64  	%rd921, %rd901, %rd877;
	and.b64  	%rd922, %rd921, %rd920;
	xor.b64  	%rd923, %rd922, %rd901;
	add.s64 	%rd924, %rd913, %rd923;
	add.s64 	%rd925, %rd924, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9436,%dummy}, %rd914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9437}, %rd914;
	}
	shf.r.wrap.b32 	%r9438, %r9437, %r9436, 14;
	shf.r.wrap.b32 	%r9439, %r9436, %r9437, 14;
	mov.b64 	%rd926, {%r9439, %r9438};
	shf.r.wrap.b32 	%r9440, %r9437, %r9436, 18;
	shf.r.wrap.b32 	%r9441, %r9436, %r9437, 18;
	mov.b64 	%rd927, {%r9441, %r9440};
	xor.b64  	%rd928, %rd927, %rd926;
	shf.l.wrap.b32 	%r9442, %r9436, %r9437, 23;
	shf.l.wrap.b32 	%r9443, %r9437, %r9436, 23;
	mov.b64 	%rd929, {%r9443, %r9442};
	xor.b64  	%rd930, %rd928, %rd929;
	xor.b64  	%rd931, %rd890, %rd866;
	and.b64  	%rd932, %rd914, %rd931;
	xor.b64  	%rd933, %rd932, %rd866;
	add.s64 	%rd934, %rd842, %rd622;
	add.s64 	%rd935, %rd934, %rd2764;
	add.s64 	%rd936, %rd935, %rd933;
	add.s64 	%rd937, %rd936, %rd930;
	add.s64 	%rd938, %rd937, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9444,%dummy}, %rd925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9445}, %rd925;
	}
	shf.r.wrap.b32 	%r9446, %r9445, %r9444, 28;
	shf.r.wrap.b32 	%r9447, %r9444, %r9445, 28;
	mov.b64 	%rd939, {%r9447, %r9446};
	shf.l.wrap.b32 	%r9448, %r9444, %r9445, 30;
	shf.l.wrap.b32 	%r9449, %r9445, %r9444, 30;
	mov.b64 	%rd940, {%r9449, %r9448};
	xor.b64  	%rd941, %rd940, %rd939;
	shf.l.wrap.b32 	%r9450, %r9444, %r9445, 25;
	shf.l.wrap.b32 	%r9451, %r9445, %r9444, 25;
	mov.b64 	%rd942, {%r9451, %r9450};
	xor.b64  	%rd943, %rd941, %rd942;
	xor.b64  	%rd944, %rd925, %rd877;
	xor.b64  	%rd945, %rd925, %rd901;
	and.b64  	%rd946, %rd945, %rd944;
	xor.b64  	%rd947, %rd946, %rd925;
	add.s64 	%rd948, %rd937, %rd947;
	add.s64 	%rd949, %rd948, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9452,%dummy}, %rd938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9453}, %rd938;
	}
	shf.r.wrap.b32 	%r9454, %r9453, %r9452, 14;
	shf.r.wrap.b32 	%r9455, %r9452, %r9453, 14;
	mov.b64 	%rd950, {%r9455, %r9454};
	shf.r.wrap.b32 	%r9456, %r9453, %r9452, 18;
	shf.r.wrap.b32 	%r9457, %r9452, %r9453, 18;
	mov.b64 	%rd951, {%r9457, %r9456};
	xor.b64  	%rd952, %rd951, %rd950;
	shf.l.wrap.b32 	%r9458, %r9452, %r9453, 23;
	shf.l.wrap.b32 	%r9459, %r9453, %r9452, 23;
	mov.b64 	%rd953, {%r9459, %r9458};
	xor.b64  	%rd954, %rd952, %rd953;
	xor.b64  	%rd955, %rd914, %rd890;
	and.b64  	%rd956, %rd938, %rd955;
	xor.b64  	%rd957, %rd956, %rd890;
	add.s64 	%rd958, %rd866, %rd629;
	add.s64 	%rd959, %rd958, %rd2765;
	add.s64 	%rd960, %rd959, %rd957;
	add.s64 	%rd961, %rd960, %rd954;
	add.s64 	%rd962, %rd961, %rd877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9460,%dummy}, %rd949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9461}, %rd949;
	}
	shf.r.wrap.b32 	%r9462, %r9461, %r9460, 28;
	shf.r.wrap.b32 	%r9463, %r9460, %r9461, 28;
	mov.b64 	%rd963, {%r9463, %r9462};
	shf.l.wrap.b32 	%r9464, %r9460, %r9461, 30;
	shf.l.wrap.b32 	%r9465, %r9461, %r9460, 30;
	mov.b64 	%rd964, {%r9465, %r9464};
	xor.b64  	%rd965, %rd964, %rd963;
	shf.l.wrap.b32 	%r9466, %r9460, %r9461, 25;
	shf.l.wrap.b32 	%r9467, %r9461, %r9460, 25;
	mov.b64 	%rd966, {%r9467, %r9466};
	xor.b64  	%rd967, %rd965, %rd966;
	xor.b64  	%rd968, %rd949, %rd901;
	xor.b64  	%rd969, %rd949, %rd925;
	and.b64  	%rd970, %rd969, %rd968;
	xor.b64  	%rd971, %rd970, %rd949;
	add.s64 	%rd972, %rd961, %rd971;
	add.s64 	%rd973, %rd972, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9468,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9469}, %rd962;
	}
	shf.r.wrap.b32 	%r9470, %r9469, %r9468, 14;
	shf.r.wrap.b32 	%r9471, %r9468, %r9469, 14;
	mov.b64 	%rd974, {%r9471, %r9470};
	shf.r.wrap.b32 	%r9472, %r9469, %r9468, 18;
	shf.r.wrap.b32 	%r9473, %r9468, %r9469, 18;
	mov.b64 	%rd975, {%r9473, %r9472};
	xor.b64  	%rd976, %rd975, %rd974;
	shf.l.wrap.b32 	%r9474, %r9468, %r9469, 23;
	shf.l.wrap.b32 	%r9475, %r9469, %r9468, 23;
	mov.b64 	%rd977, {%r9475, %r9474};
	xor.b64  	%rd978, %rd976, %rd977;
	xor.b64  	%rd979, %rd938, %rd914;
	and.b64  	%rd980, %rd962, %rd979;
	xor.b64  	%rd981, %rd980, %rd914;
	add.s64 	%rd982, %rd890, %rd636;
	add.s64 	%rd983, %rd982, %rd2766;
	add.s64 	%rd984, %rd983, %rd981;
	add.s64 	%rd985, %rd984, %rd978;
	add.s64 	%rd986, %rd985, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9476,%dummy}, %rd973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9477}, %rd973;
	}
	shf.r.wrap.b32 	%r9478, %r9477, %r9476, 28;
	shf.r.wrap.b32 	%r9479, %r9476, %r9477, 28;
	mov.b64 	%rd987, {%r9479, %r9478};
	shf.l.wrap.b32 	%r9480, %r9476, %r9477, 30;
	shf.l.wrap.b32 	%r9481, %r9477, %r9476, 30;
	mov.b64 	%rd988, {%r9481, %r9480};
	xor.b64  	%rd989, %rd988, %rd987;
	shf.l.wrap.b32 	%r9482, %r9476, %r9477, 25;
	shf.l.wrap.b32 	%r9483, %r9477, %r9476, 25;
	mov.b64 	%rd990, {%r9483, %r9482};
	xor.b64  	%rd991, %rd989, %rd990;
	xor.b64  	%rd992, %rd973, %rd925;
	xor.b64  	%rd993, %rd973, %rd949;
	and.b64  	%rd994, %rd993, %rd992;
	xor.b64  	%rd995, %rd994, %rd973;
	add.s64 	%rd996, %rd985, %rd995;
	add.s64 	%rd997, %rd996, %rd991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9484,%dummy}, %rd986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9485}, %rd986;
	}
	shf.r.wrap.b32 	%r9486, %r9485, %r9484, 14;
	shf.r.wrap.b32 	%r9487, %r9484, %r9485, 14;
	mov.b64 	%rd998, {%r9487, %r9486};
	shf.r.wrap.b32 	%r9488, %r9485, %r9484, 18;
	shf.r.wrap.b32 	%r9489, %r9484, %r9485, 18;
	mov.b64 	%rd999, {%r9489, %r9488};
	xor.b64  	%rd1000, %rd999, %rd998;
	shf.l.wrap.b32 	%r9490, %r9484, %r9485, 23;
	shf.l.wrap.b32 	%r9491, %r9485, %r9484, 23;
	mov.b64 	%rd1001, {%r9491, %r9490};
	xor.b64  	%rd1002, %rd1000, %rd1001;
	xor.b64  	%rd1003, %rd962, %rd938;
	and.b64  	%rd1004, %rd986, %rd1003;
	xor.b64  	%rd1005, %rd1004, %rd938;
	add.s64 	%rd1006, %rd914, %rd648;
	add.s64 	%rd1007, %rd1006, %rd2767;
	add.s64 	%rd1008, %rd1007, %rd1005;
	add.s64 	%rd1009, %rd1008, %rd1002;
	add.s64 	%rd1010, %rd1009, %rd925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9492,%dummy}, %rd997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9493}, %rd997;
	}
	shf.r.wrap.b32 	%r9494, %r9493, %r9492, 28;
	shf.r.wrap.b32 	%r9495, %r9492, %r9493, 28;
	mov.b64 	%rd1011, {%r9495, %r9494};
	shf.l.wrap.b32 	%r9496, %r9492, %r9493, 30;
	shf.l.wrap.b32 	%r9497, %r9493, %r9492, 30;
	mov.b64 	%rd1012, {%r9497, %r9496};
	xor.b64  	%rd1013, %rd1012, %rd1011;
	shf.l.wrap.b32 	%r9498, %r9492, %r9493, 25;
	shf.l.wrap.b32 	%r9499, %r9493, %r9492, 25;
	mov.b64 	%rd1014, {%r9499, %r9498};
	xor.b64  	%rd1015, %rd1013, %rd1014;
	xor.b64  	%rd1016, %rd997, %rd949;
	xor.b64  	%rd1017, %rd997, %rd973;
	and.b64  	%rd1018, %rd1017, %rd1016;
	xor.b64  	%rd1019, %rd1018, %rd997;
	add.s64 	%rd1020, %rd1009, %rd1019;
	add.s64 	%rd1021, %rd1020, %rd1015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9500,%dummy}, %rd1010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9501}, %rd1010;
	}
	shf.r.wrap.b32 	%r9502, %r9501, %r9500, 14;
	shf.r.wrap.b32 	%r9503, %r9500, %r9501, 14;
	mov.b64 	%rd1022, {%r9503, %r9502};
	shf.r.wrap.b32 	%r9504, %r9501, %r9500, 18;
	shf.r.wrap.b32 	%r9505, %r9500, %r9501, 18;
	mov.b64 	%rd1023, {%r9505, %r9504};
	xor.b64  	%rd1024, %rd1023, %rd1022;
	shf.l.wrap.b32 	%r9506, %r9500, %r9501, 23;
	shf.l.wrap.b32 	%r9507, %r9501, %r9500, 23;
	mov.b64 	%rd1025, {%r9507, %r9506};
	xor.b64  	%rd1026, %rd1024, %rd1025;
	xor.b64  	%rd1027, %rd986, %rd962;
	and.b64  	%rd1028, %rd1010, %rd1027;
	xor.b64  	%rd1029, %rd1028, %rd962;
	add.s64 	%rd1030, %rd938, %rd661;
	add.s64 	%rd1031, %rd1030, %rd2768;
	add.s64 	%rd1032, %rd1031, %rd1029;
	add.s64 	%rd1033, %rd1032, %rd1026;
	add.s64 	%rd1034, %rd1033, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9508,%dummy}, %rd1021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9509}, %rd1021;
	}
	shf.r.wrap.b32 	%r9510, %r9509, %r9508, 28;
	shf.r.wrap.b32 	%r9511, %r9508, %r9509, 28;
	mov.b64 	%rd1035, {%r9511, %r9510};
	shf.l.wrap.b32 	%r9512, %r9508, %r9509, 30;
	shf.l.wrap.b32 	%r9513, %r9509, %r9508, 30;
	mov.b64 	%rd1036, {%r9513, %r9512};
	xor.b64  	%rd1037, %rd1036, %rd1035;
	shf.l.wrap.b32 	%r9514, %r9508, %r9509, 25;
	shf.l.wrap.b32 	%r9515, %r9509, %r9508, 25;
	mov.b64 	%rd1038, {%r9515, %r9514};
	xor.b64  	%rd1039, %rd1037, %rd1038;
	xor.b64  	%rd1040, %rd1021, %rd973;
	xor.b64  	%rd1041, %rd1021, %rd997;
	and.b64  	%rd1042, %rd1041, %rd1040;
	xor.b64  	%rd1043, %rd1042, %rd1021;
	add.s64 	%rd1044, %rd1033, %rd1043;
	add.s64 	%rd1045, %rd1044, %rd1039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9516,%dummy}, %rd648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9517}, %rd648;
	}
	shf.r.wrap.b32 	%r9518, %r9517, %r9516, 19;
	shf.r.wrap.b32 	%r9519, %r9516, %r9517, 19;
	mov.b64 	%rd1046, {%r9519, %r9518};
	shf.l.wrap.b32 	%r9520, %r9516, %r9517, 3;
	shf.l.wrap.b32 	%r9521, %r9517, %r9516, 3;
	mov.b64 	%rd1047, {%r9521, %r9520};
	shr.u64 	%rd1048, %rd648, 6;
	xor.b64  	%rd1049, %rd1046, %rd1048;
	xor.b64  	%rd1050, %rd1049, %rd1047;
	shf.r.wrap.b32 	%r9522, %r9175, %r9174, 1;
	shf.r.wrap.b32 	%r9523, %r9174, %r9175, 1;
	mov.b64 	%rd1051, {%r9523, %r9522};
	shf.r.wrap.b32 	%r9524, %r9175, %r9174, 8;
	shf.r.wrap.b32 	%r9525, %r9174, %r9175, 8;
	mov.b64 	%rd1052, {%r9525, %r9524};
	shr.u64 	%rd1053, %rd549, 7;
	xor.b64  	%rd1054, %rd1051, %rd1053;
	xor.b64  	%rd1055, %rd1054, %rd1052;
	add.s64 	%rd1056, %rd537, %rd608;
	add.s64 	%rd1057, %rd1056, %rd1050;
	add.s64 	%rd1058, %rd1057, %rd1055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9526,%dummy}, %rd661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9527}, %rd661;
	}
	shf.r.wrap.b32 	%r9528, %r9527, %r9526, 19;
	shf.r.wrap.b32 	%r9529, %r9526, %r9527, 19;
	mov.b64 	%rd1059, {%r9529, %r9528};
	shf.l.wrap.b32 	%r9530, %r9526, %r9527, 3;
	shf.l.wrap.b32 	%r9531, %r9527, %r9526, 3;
	mov.b64 	%rd1060, {%r9531, %r9530};
	shr.u64 	%rd1061, %rd661, 6;
	xor.b64  	%rd1062, %rd1059, %rd1061;
	xor.b64  	%rd1063, %rd1062, %rd1060;
	shf.r.wrap.b32 	%r9532, %r9181, %r9180, 1;
	shf.r.wrap.b32 	%r9533, %r9180, %r9181, 1;
	mov.b64 	%rd1064, {%r9533, %r9532};
	shf.r.wrap.b32 	%r9534, %r9181, %r9180, 8;
	shf.r.wrap.b32 	%r9535, %r9180, %r9181, 8;
	mov.b64 	%rd1065, {%r9535, %r9534};
	shr.u64 	%rd1066, %rd561, 7;
	xor.b64  	%rd1067, %rd1064, %rd1066;
	xor.b64  	%rd1068, %rd1067, %rd1065;
	add.s64 	%rd1069, %rd549, %rd615;
	add.s64 	%rd1070, %rd1069, %rd1063;
	add.s64 	%rd1071, %rd1070, %rd1068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9536,%dummy}, %rd1058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9537}, %rd1058;
	}
	shf.r.wrap.b32 	%r9538, %r9537, %r9536, 19;
	shf.r.wrap.b32 	%r9539, %r9536, %r9537, 19;
	mov.b64 	%rd1072, {%r9539, %r9538};
	shf.l.wrap.b32 	%r9540, %r9536, %r9537, 3;
	shf.l.wrap.b32 	%r9541, %r9537, %r9536, 3;
	mov.b64 	%rd1073, {%r9541, %r9540};
	shr.u64 	%rd1074, %rd1058, 6;
	xor.b64  	%rd1075, %rd1072, %rd1074;
	xor.b64  	%rd1076, %rd1075, %rd1073;
	shf.r.wrap.b32 	%r9542, %r9187, %r9186, 1;
	shf.r.wrap.b32 	%r9543, %r9186, %r9187, 1;
	mov.b64 	%rd1077, {%r9543, %r9542};
	shf.r.wrap.b32 	%r9544, %r9187, %r9186, 8;
	shf.r.wrap.b32 	%r9545, %r9186, %r9187, 8;
	mov.b64 	%rd1078, {%r9545, %r9544};
	shr.u64 	%rd1079, %rd568, 7;
	xor.b64  	%rd1080, %rd1077, %rd1079;
	xor.b64  	%rd1081, %rd1080, %rd1078;
	add.s64 	%rd1082, %rd561, %rd622;
	add.s64 	%rd1083, %rd1082, %rd1076;
	add.s64 	%rd1084, %rd1083, %rd1081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9546,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9547}, %rd1071;
	}
	shf.r.wrap.b32 	%r9548, %r9547, %r9546, 19;
	shf.r.wrap.b32 	%r9549, %r9546, %r9547, 19;
	mov.b64 	%rd1085, {%r9549, %r9548};
	shf.l.wrap.b32 	%r9550, %r9546, %r9547, 3;
	shf.l.wrap.b32 	%r9551, %r9547, %r9546, 3;
	mov.b64 	%rd1086, {%r9551, %r9550};
	shr.u64 	%rd1087, %rd1071, 6;
	xor.b64  	%rd1088, %rd1085, %rd1087;
	xor.b64  	%rd1089, %rd1088, %rd1086;
	shf.r.wrap.b32 	%r9552, %r9193, %r9192, 1;
	shf.r.wrap.b32 	%r9553, %r9192, %r9193, 1;
	mov.b64 	%rd1090, {%r9553, %r9552};
	shf.r.wrap.b32 	%r9554, %r9193, %r9192, 8;
	shf.r.wrap.b32 	%r9555, %r9192, %r9193, 8;
	mov.b64 	%rd1091, {%r9555, %r9554};
	shr.u64 	%rd1092, %rd574, 7;
	xor.b64  	%rd1093, %rd1090, %rd1092;
	xor.b64  	%rd1094, %rd1093, %rd1091;
	add.s64 	%rd1095, %rd568, %rd629;
	add.s64 	%rd1096, %rd1095, %rd1089;
	add.s64 	%rd1097, %rd1096, %rd1094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9556,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9557}, %rd1084;
	}
	shf.r.wrap.b32 	%r9558, %r9557, %r9556, 19;
	shf.r.wrap.b32 	%r9559, %r9556, %r9557, 19;
	mov.b64 	%rd1098, {%r9559, %r9558};
	shf.l.wrap.b32 	%r9560, %r9556, %r9557, 3;
	shf.l.wrap.b32 	%r9561, %r9557, %r9556, 3;
	mov.b64 	%rd1099, {%r9561, %r9560};
	shr.u64 	%rd1100, %rd1084, 6;
	xor.b64  	%rd1101, %rd1098, %rd1100;
	xor.b64  	%rd1102, %rd1101, %rd1099;
	shf.r.wrap.b32 	%r9562, %r9199, %r9198, 1;
	shf.r.wrap.b32 	%r9563, %r9198, %r9199, 1;
	mov.b64 	%rd1103, {%r9563, %r9562};
	shf.r.wrap.b32 	%r9564, %r9199, %r9198, 8;
	shf.r.wrap.b32 	%r9565, %r9198, %r9199, 8;
	mov.b64 	%rd1104, {%r9565, %r9564};
	shr.u64 	%rd1105, %rd580, 7;
	xor.b64  	%rd1106, %rd1103, %rd1105;
	xor.b64  	%rd1107, %rd1106, %rd1104;
	add.s64 	%rd1108, %rd574, %rd636;
	add.s64 	%rd1109, %rd1108, %rd1102;
	add.s64 	%rd1110, %rd1109, %rd1107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9566,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9567}, %rd1097;
	}
	shf.r.wrap.b32 	%r9568, %r9567, %r9566, 19;
	shf.r.wrap.b32 	%r9569, %r9566, %r9567, 19;
	mov.b64 	%rd1111, {%r9569, %r9568};
	shf.l.wrap.b32 	%r9570, %r9566, %r9567, 3;
	shf.l.wrap.b32 	%r9571, %r9567, %r9566, 3;
	mov.b64 	%rd1112, {%r9571, %r9570};
	shr.u64 	%rd1113, %rd1097, 6;
	xor.b64  	%rd1114, %rd1111, %rd1113;
	xor.b64  	%rd1115, %rd1114, %rd1112;
	shf.r.wrap.b32 	%r9572, %r9205, %r9204, 1;
	shf.r.wrap.b32 	%r9573, %r9204, %r9205, 1;
	mov.b64 	%rd1116, {%r9573, %r9572};
	shf.r.wrap.b32 	%r9574, %r9205, %r9204, 8;
	shf.r.wrap.b32 	%r9575, %r9204, %r9205, 8;
	mov.b64 	%rd1117, {%r9575, %r9574};
	shr.u64 	%rd1118, %rd587, 7;
	xor.b64  	%rd1119, %rd1116, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd1117;
	add.s64 	%rd1121, %rd580, %rd648;
	add.s64 	%rd1122, %rd1121, %rd1115;
	add.s64 	%rd1123, %rd1122, %rd1120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9576,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9577}, %rd1110;
	}
	shf.r.wrap.b32 	%r9578, %r9577, %r9576, 19;
	shf.r.wrap.b32 	%r9579, %r9576, %r9577, 19;
	mov.b64 	%rd1124, {%r9579, %r9578};
	shf.l.wrap.b32 	%r9580, %r9576, %r9577, 3;
	shf.l.wrap.b32 	%r9581, %r9577, %r9576, 3;
	mov.b64 	%rd1125, {%r9581, %r9580};
	shr.u64 	%rd1126, %rd1110, 6;
	xor.b64  	%rd1127, %rd1124, %rd1126;
	xor.b64  	%rd1128, %rd1127, %rd1125;
	shf.r.wrap.b32 	%r9582, %r9211, %r9210, 1;
	shf.r.wrap.b32 	%r9583, %r9210, %r9211, 1;
	mov.b64 	%rd1129, {%r9583, %r9582};
	shf.r.wrap.b32 	%r9584, %r9211, %r9210, 8;
	shf.r.wrap.b32 	%r9585, %r9210, %r9211, 8;
	mov.b64 	%rd1130, {%r9585, %r9584};
	shr.u64 	%rd1131, %rd594, 7;
	xor.b64  	%rd1132, %rd1129, %rd1131;
	xor.b64  	%rd1133, %rd1132, %rd1130;
	add.s64 	%rd1134, %rd587, %rd661;
	add.s64 	%rd1135, %rd1134, %rd1128;
	add.s64 	%rd1136, %rd1135, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9586,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9587}, %rd1123;
	}
	shf.r.wrap.b32 	%r9588, %r9587, %r9586, 19;
	shf.r.wrap.b32 	%r9589, %r9586, %r9587, 19;
	mov.b64 	%rd1137, {%r9589, %r9588};
	shf.l.wrap.b32 	%r9590, %r9586, %r9587, 3;
	shf.l.wrap.b32 	%r9591, %r9587, %r9586, 3;
	mov.b64 	%rd1138, {%r9591, %r9590};
	shr.u64 	%rd1139, %rd1123, 6;
	xor.b64  	%rd1140, %rd1137, %rd1139;
	xor.b64  	%rd1141, %rd1140, %rd1138;
	shf.r.wrap.b32 	%r9592, %r9217, %r9216, 1;
	shf.r.wrap.b32 	%r9593, %r9216, %r9217, 1;
	mov.b64 	%rd1142, {%r9593, %r9592};
	shf.r.wrap.b32 	%r9594, %r9217, %r9216, 8;
	shf.r.wrap.b32 	%r9595, %r9216, %r9217, 8;
	mov.b64 	%rd1143, {%r9595, %r9594};
	shr.u64 	%rd1144, %rd601, 7;
	xor.b64  	%rd1145, %rd1142, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1143;
	add.s64 	%rd1147, %rd1058, %rd594;
	add.s64 	%rd1148, %rd1147, %rd1141;
	add.s64 	%rd1149, %rd1148, %rd1146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9596,%dummy}, %rd1136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9597}, %rd1136;
	}
	shf.r.wrap.b32 	%r9598, %r9597, %r9596, 19;
	shf.r.wrap.b32 	%r9599, %r9596, %r9597, 19;
	mov.b64 	%rd1150, {%r9599, %r9598};
	shf.l.wrap.b32 	%r9600, %r9596, %r9597, 3;
	shf.l.wrap.b32 	%r9601, %r9597, %r9596, 3;
	mov.b64 	%rd1151, {%r9601, %r9600};
	shr.u64 	%rd1152, %rd1136, 6;
	xor.b64  	%rd1153, %rd1150, %rd1152;
	xor.b64  	%rd1154, %rd1153, %rd1151;
	shf.r.wrap.b32 	%r9602, %r9223, %r9222, 1;
	shf.r.wrap.b32 	%r9603, %r9222, %r9223, 1;
	mov.b64 	%rd1155, {%r9603, %r9602};
	shf.r.wrap.b32 	%r9604, %r9223, %r9222, 8;
	shf.r.wrap.b32 	%r9605, %r9222, %r9223, 8;
	mov.b64 	%rd1156, {%r9605, %r9604};
	shr.u64 	%rd1157, %rd608, 7;
	xor.b64  	%rd1158, %rd1155, %rd1157;
	xor.b64  	%rd1159, %rd1158, %rd1156;
	add.s64 	%rd1160, %rd1071, %rd601;
	add.s64 	%rd1161, %rd1160, %rd1154;
	add.s64 	%rd1162, %rd1161, %rd1159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9606,%dummy}, %rd1149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9607}, %rd1149;
	}
	shf.r.wrap.b32 	%r9608, %r9607, %r9606, 19;
	shf.r.wrap.b32 	%r9609, %r9606, %r9607, 19;
	mov.b64 	%rd1163, {%r9609, %r9608};
	shf.l.wrap.b32 	%r9610, %r9606, %r9607, 3;
	shf.l.wrap.b32 	%r9611, %r9607, %r9606, 3;
	mov.b64 	%rd1164, {%r9611, %r9610};
	shr.u64 	%rd1165, %rd1149, 6;
	xor.b64  	%rd1166, %rd1163, %rd1165;
	xor.b64  	%rd1167, %rd1166, %rd1164;
	shf.r.wrap.b32 	%r9612, %r9229, %r9228, 1;
	shf.r.wrap.b32 	%r9613, %r9228, %r9229, 1;
	mov.b64 	%rd1168, {%r9613, %r9612};
	shf.r.wrap.b32 	%r9614, %r9229, %r9228, 8;
	shf.r.wrap.b32 	%r9615, %r9228, %r9229, 8;
	mov.b64 	%rd1169, {%r9615, %r9614};
	shr.u64 	%rd1170, %rd615, 7;
	xor.b64  	%rd1171, %rd1168, %rd1170;
	xor.b64  	%rd1172, %rd1171, %rd1169;
	add.s64 	%rd1173, %rd1084, %rd608;
	add.s64 	%rd1174, %rd1173, %rd1167;
	add.s64 	%rd1175, %rd1174, %rd1172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9616,%dummy}, %rd1162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9617}, %rd1162;
	}
	shf.r.wrap.b32 	%r9618, %r9617, %r9616, 19;
	shf.r.wrap.b32 	%r9619, %r9616, %r9617, 19;
	mov.b64 	%rd1176, {%r9619, %r9618};
	shf.l.wrap.b32 	%r9620, %r9616, %r9617, 3;
	shf.l.wrap.b32 	%r9621, %r9617, %r9616, 3;
	mov.b64 	%rd1177, {%r9621, %r9620};
	shr.u64 	%rd1178, %rd1162, 6;
	xor.b64  	%rd1179, %rd1176, %rd1178;
	xor.b64  	%rd1180, %rd1179, %rd1177;
	shf.r.wrap.b32 	%r9622, %r9235, %r9234, 1;
	shf.r.wrap.b32 	%r9623, %r9234, %r9235, 1;
	mov.b64 	%rd1181, {%r9623, %r9622};
	shf.r.wrap.b32 	%r9624, %r9235, %r9234, 8;
	shf.r.wrap.b32 	%r9625, %r9234, %r9235, 8;
	mov.b64 	%rd1182, {%r9625, %r9624};
	shr.u64 	%rd1183, %rd622, 7;
	xor.b64  	%rd1184, %rd1181, %rd1183;
	xor.b64  	%rd1185, %rd1184, %rd1182;
	add.s64 	%rd1186, %rd1097, %rd615;
	add.s64 	%rd1187, %rd1186, %rd1180;
	add.s64 	%rd1188, %rd1187, %rd1185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9626,%dummy}, %rd1175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9627}, %rd1175;
	}
	shf.r.wrap.b32 	%r9628, %r9627, %r9626, 19;
	shf.r.wrap.b32 	%r9629, %r9626, %r9627, 19;
	mov.b64 	%rd1189, {%r9629, %r9628};
	shf.l.wrap.b32 	%r9630, %r9626, %r9627, 3;
	shf.l.wrap.b32 	%r9631, %r9627, %r9626, 3;
	mov.b64 	%rd1190, {%r9631, %r9630};
	shr.u64 	%rd1191, %rd1175, 6;
	xor.b64  	%rd1192, %rd1189, %rd1191;
	xor.b64  	%rd1193, %rd1192, %rd1190;
	shf.r.wrap.b32 	%r9632, %r9241, %r9240, 1;
	shf.r.wrap.b32 	%r9633, %r9240, %r9241, 1;
	mov.b64 	%rd1194, {%r9633, %r9632};
	shf.r.wrap.b32 	%r9634, %r9241, %r9240, 8;
	shf.r.wrap.b32 	%r9635, %r9240, %r9241, 8;
	mov.b64 	%rd1195, {%r9635, %r9634};
	shr.u64 	%rd1196, %rd629, 7;
	xor.b64  	%rd1197, %rd1194, %rd1196;
	xor.b64  	%rd1198, %rd1197, %rd1195;
	add.s64 	%rd1199, %rd1110, %rd622;
	add.s64 	%rd1200, %rd1199, %rd1193;
	add.s64 	%rd1201, %rd1200, %rd1198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9636,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9637}, %rd1188;
	}
	shf.r.wrap.b32 	%r9638, %r9637, %r9636, 19;
	shf.r.wrap.b32 	%r9639, %r9636, %r9637, 19;
	mov.b64 	%rd1202, {%r9639, %r9638};
	shf.l.wrap.b32 	%r9640, %r9636, %r9637, 3;
	shf.l.wrap.b32 	%r9641, %r9637, %r9636, 3;
	mov.b64 	%rd1203, {%r9641, %r9640};
	shr.u64 	%rd1204, %rd1188, 6;
	xor.b64  	%rd1205, %rd1202, %rd1204;
	xor.b64  	%rd1206, %rd1205, %rd1203;
	shf.r.wrap.b32 	%r9642, %r9251, %r9250, 1;
	shf.r.wrap.b32 	%r9643, %r9250, %r9251, 1;
	mov.b64 	%rd1207, {%r9643, %r9642};
	shf.r.wrap.b32 	%r9644, %r9251, %r9250, 8;
	shf.r.wrap.b32 	%r9645, %r9250, %r9251, 8;
	mov.b64 	%rd1208, {%r9645, %r9644};
	shr.u64 	%rd1209, %rd636, 7;
	xor.b64  	%rd1210, %rd1207, %rd1209;
	xor.b64  	%rd1211, %rd1210, %rd1208;
	add.s64 	%rd1212, %rd1123, %rd629;
	add.s64 	%rd1213, %rd1212, %rd1206;
	add.s64 	%rd1214, %rd1213, %rd1211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9646,%dummy}, %rd1201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9647}, %rd1201;
	}
	shf.r.wrap.b32 	%r9648, %r9647, %r9646, 19;
	shf.r.wrap.b32 	%r9649, %r9646, %r9647, 19;
	mov.b64 	%rd1215, {%r9649, %r9648};
	shf.l.wrap.b32 	%r9650, %r9646, %r9647, 3;
	shf.l.wrap.b32 	%r9651, %r9647, %r9646, 3;
	mov.b64 	%rd1216, {%r9651, %r9650};
	shr.u64 	%rd1217, %rd1201, 6;
	xor.b64  	%rd1218, %rd1215, %rd1217;
	xor.b64  	%rd1219, %rd1218, %rd1216;
	shf.r.wrap.b32 	%r9652, %r9517, %r9516, 1;
	shf.r.wrap.b32 	%r9653, %r9516, %r9517, 1;
	mov.b64 	%rd1220, {%r9653, %r9652};
	shf.r.wrap.b32 	%r9654, %r9517, %r9516, 8;
	shf.r.wrap.b32 	%r9655, %r9516, %r9517, 8;
	mov.b64 	%rd1221, {%r9655, %r9654};
	shr.u64 	%rd1222, %rd648, 7;
	xor.b64  	%rd1223, %rd1220, %rd1222;
	xor.b64  	%rd1224, %rd1223, %rd1221;
	add.s64 	%rd1225, %rd1136, %rd636;
	add.s64 	%rd1226, %rd1225, %rd1219;
	add.s64 	%rd1227, %rd1226, %rd1224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9656,%dummy}, %rd1214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9657}, %rd1214;
	}
	shf.r.wrap.b32 	%r9658, %r9657, %r9656, 19;
	shf.r.wrap.b32 	%r9659, %r9656, %r9657, 19;
	mov.b64 	%rd1228, {%r9659, %r9658};
	shf.l.wrap.b32 	%r9660, %r9656, %r9657, 3;
	shf.l.wrap.b32 	%r9661, %r9657, %r9656, 3;
	mov.b64 	%rd1229, {%r9661, %r9660};
	shr.u64 	%rd1230, %rd1214, 6;
	xor.b64  	%rd1231, %rd1228, %rd1230;
	xor.b64  	%rd1232, %rd1231, %rd1229;
	shf.r.wrap.b32 	%r9662, %r9527, %r9526, 1;
	shf.r.wrap.b32 	%r9663, %r9526, %r9527, 1;
	mov.b64 	%rd1233, {%r9663, %r9662};
	shf.r.wrap.b32 	%r9664, %r9527, %r9526, 8;
	shf.r.wrap.b32 	%r9665, %r9526, %r9527, 8;
	mov.b64 	%rd1234, {%r9665, %r9664};
	shr.u64 	%rd1235, %rd661, 7;
	xor.b64  	%rd1236, %rd1233, %rd1235;
	xor.b64  	%rd1237, %rd1236, %rd1234;
	add.s64 	%rd1238, %rd1149, %rd648;
	add.s64 	%rd1239, %rd1238, %rd1232;
	add.s64 	%rd1240, %rd1239, %rd1237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9666,%dummy}, %rd1227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9667}, %rd1227;
	}
	shf.r.wrap.b32 	%r9668, %r9667, %r9666, 19;
	shf.r.wrap.b32 	%r9669, %r9666, %r9667, 19;
	mov.b64 	%rd1241, {%r9669, %r9668};
	shf.l.wrap.b32 	%r9670, %r9666, %r9667, 3;
	shf.l.wrap.b32 	%r9671, %r9667, %r9666, 3;
	mov.b64 	%rd1242, {%r9671, %r9670};
	shr.u64 	%rd1243, %rd1227, 6;
	xor.b64  	%rd1244, %rd1241, %rd1243;
	xor.b64  	%rd1245, %rd1244, %rd1242;
	shf.r.wrap.b32 	%r9672, %r9537, %r9536, 1;
	shf.r.wrap.b32 	%r9673, %r9536, %r9537, 1;
	mov.b64 	%rd1246, {%r9673, %r9672};
	shf.r.wrap.b32 	%r9674, %r9537, %r9536, 8;
	shf.r.wrap.b32 	%r9675, %r9536, %r9537, 8;
	mov.b64 	%rd1247, {%r9675, %r9674};
	shr.u64 	%rd1248, %rd1058, 7;
	xor.b64  	%rd1249, %rd1246, %rd1248;
	xor.b64  	%rd1250, %rd1249, %rd1247;
	add.s64 	%rd1251, %rd1162, %rd661;
	add.s64 	%rd1252, %rd1251, %rd1245;
	add.s64 	%rd1253, %rd1252, %rd1250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9676,%dummy}, %rd1034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9677}, %rd1034;
	}
	shf.r.wrap.b32 	%r9678, %r9677, %r9676, 14;
	shf.r.wrap.b32 	%r9679, %r9676, %r9677, 14;
	mov.b64 	%rd1254, {%r9679, %r9678};
	shf.r.wrap.b32 	%r9680, %r9677, %r9676, 18;
	shf.r.wrap.b32 	%r9681, %r9676, %r9677, 18;
	mov.b64 	%rd1255, {%r9681, %r9680};
	xor.b64  	%rd1256, %rd1255, %rd1254;
	shf.l.wrap.b32 	%r9682, %r9676, %r9677, 23;
	shf.l.wrap.b32 	%r9683, %r9677, %r9676, 23;
	mov.b64 	%rd1257, {%r9683, %r9682};
	xor.b64  	%rd1258, %rd1256, %rd1257;
	xor.b64  	%rd1259, %rd986, %rd1010;
	and.b64  	%rd1260, %rd1259, %rd1034;
	xor.b64  	%rd1261, %rd1260, %rd986;
	add.s64 	%rd1262, %rd1261, %rd962;
	add.s64 	%rd1263, %rd1262, %rd1058;
	add.s64 	%rd1264, %rd1263, %rd2769;
	add.s64 	%rd1265, %rd1264, %rd1258;
	add.s64 	%rd1266, %rd1265, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9684,%dummy}, %rd1045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9685}, %rd1045;
	}
	shf.r.wrap.b32 	%r9686, %r9685, %r9684, 28;
	shf.r.wrap.b32 	%r9687, %r9684, %r9685, 28;
	mov.b64 	%rd1267, {%r9687, %r9686};
	shf.l.wrap.b32 	%r9688, %r9684, %r9685, 30;
	shf.l.wrap.b32 	%r9689, %r9685, %r9684, 30;
	mov.b64 	%rd1268, {%r9689, %r9688};
	xor.b64  	%rd1269, %rd1268, %rd1267;
	shf.l.wrap.b32 	%r9690, %r9684, %r9685, 25;
	shf.l.wrap.b32 	%r9691, %r9685, %r9684, 25;
	mov.b64 	%rd1270, {%r9691, %r9690};
	xor.b64  	%rd1271, %rd1269, %rd1270;
	xor.b64  	%rd1272, %rd1045, %rd997;
	xor.b64  	%rd1273, %rd1045, %rd1021;
	and.b64  	%rd1274, %rd1273, %rd1272;
	xor.b64  	%rd1275, %rd1274, %rd1045;
	add.s64 	%rd1276, %rd1265, %rd1275;
	add.s64 	%rd1277, %rd1276, %rd1271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9692,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9693}, %rd1266;
	}
	shf.r.wrap.b32 	%r9694, %r9693, %r9692, 14;
	shf.r.wrap.b32 	%r9695, %r9692, %r9693, 14;
	mov.b64 	%rd1278, {%r9695, %r9694};
	shf.r.wrap.b32 	%r9696, %r9693, %r9692, 18;
	shf.r.wrap.b32 	%r9697, %r9692, %r9693, 18;
	mov.b64 	%rd1279, {%r9697, %r9696};
	xor.b64  	%rd1280, %rd1279, %rd1278;
	shf.l.wrap.b32 	%r9698, %r9692, %r9693, 23;
	shf.l.wrap.b32 	%r9699, %r9693, %r9692, 23;
	mov.b64 	%rd1281, {%r9699, %r9698};
	xor.b64  	%rd1282, %rd1280, %rd1281;
	xor.b64  	%rd1283, %rd1010, %rd1034;
	and.b64  	%rd1284, %rd1266, %rd1283;
	xor.b64  	%rd1285, %rd1284, %rd1010;
	add.s64 	%rd1286, %rd1071, %rd986;
	add.s64 	%rd1287, %rd1286, %rd2770;
	add.s64 	%rd1288, %rd1287, %rd1285;
	add.s64 	%rd1289, %rd1288, %rd1282;
	add.s64 	%rd1290, %rd1289, %rd997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9700,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9701}, %rd1277;
	}
	shf.r.wrap.b32 	%r9702, %r9701, %r9700, 28;
	shf.r.wrap.b32 	%r9703, %r9700, %r9701, 28;
	mov.b64 	%rd1291, {%r9703, %r9702};
	shf.l.wrap.b32 	%r9704, %r9700, %r9701, 30;
	shf.l.wrap.b32 	%r9705, %r9701, %r9700, 30;
	mov.b64 	%rd1292, {%r9705, %r9704};
	xor.b64  	%rd1293, %rd1292, %rd1291;
	shf.l.wrap.b32 	%r9706, %r9700, %r9701, 25;
	shf.l.wrap.b32 	%r9707, %r9701, %r9700, 25;
	mov.b64 	%rd1294, {%r9707, %r9706};
	xor.b64  	%rd1295, %rd1293, %rd1294;
	xor.b64  	%rd1296, %rd1277, %rd1021;
	xor.b64  	%rd1297, %rd1277, %rd1045;
	and.b64  	%rd1298, %rd1297, %rd1296;
	xor.b64  	%rd1299, %rd1298, %rd1277;
	add.s64 	%rd1300, %rd1289, %rd1299;
	add.s64 	%rd1301, %rd1300, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9708,%dummy}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9709}, %rd1290;
	}
	shf.r.wrap.b32 	%r9710, %r9709, %r9708, 14;
	shf.r.wrap.b32 	%r9711, %r9708, %r9709, 14;
	mov.b64 	%rd1302, {%r9711, %r9710};
	shf.r.wrap.b32 	%r9712, %r9709, %r9708, 18;
	shf.r.wrap.b32 	%r9713, %r9708, %r9709, 18;
	mov.b64 	%rd1303, {%r9713, %r9712};
	xor.b64  	%rd1304, %rd1303, %rd1302;
	shf.l.wrap.b32 	%r9714, %r9708, %r9709, 23;
	shf.l.wrap.b32 	%r9715, %r9709, %r9708, 23;
	mov.b64 	%rd1305, {%r9715, %r9714};
	xor.b64  	%rd1306, %rd1304, %rd1305;
	xor.b64  	%rd1307, %rd1266, %rd1034;
	and.b64  	%rd1308, %rd1290, %rd1307;
	xor.b64  	%rd1309, %rd1308, %rd1034;
	add.s64 	%rd1310, %rd1084, %rd1010;
	add.s64 	%rd1311, %rd1310, %rd2771;
	add.s64 	%rd1312, %rd1311, %rd1309;
	add.s64 	%rd1313, %rd1312, %rd1306;
	add.s64 	%rd1314, %rd1313, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9716,%dummy}, %rd1301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9717}, %rd1301;
	}
	shf.r.wrap.b32 	%r9718, %r9717, %r9716, 28;
	shf.r.wrap.b32 	%r9719, %r9716, %r9717, 28;
	mov.b64 	%rd1315, {%r9719, %r9718};
	shf.l.wrap.b32 	%r9720, %r9716, %r9717, 30;
	shf.l.wrap.b32 	%r9721, %r9717, %r9716, 30;
	mov.b64 	%rd1316, {%r9721, %r9720};
	xor.b64  	%rd1317, %rd1316, %rd1315;
	shf.l.wrap.b32 	%r9722, %r9716, %r9717, 25;
	shf.l.wrap.b32 	%r9723, %r9717, %r9716, 25;
	mov.b64 	%rd1318, {%r9723, %r9722};
	xor.b64  	%rd1319, %rd1317, %rd1318;
	xor.b64  	%rd1320, %rd1301, %rd1045;
	xor.b64  	%rd1321, %rd1301, %rd1277;
	and.b64  	%rd1322, %rd1321, %rd1320;
	xor.b64  	%rd1323, %rd1322, %rd1301;
	add.s64 	%rd1324, %rd1313, %rd1323;
	add.s64 	%rd1325, %rd1324, %rd1319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9724,%dummy}, %rd1314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9725}, %rd1314;
	}
	shf.r.wrap.b32 	%r9726, %r9725, %r9724, 14;
	shf.r.wrap.b32 	%r9727, %r9724, %r9725, 14;
	mov.b64 	%rd1326, {%r9727, %r9726};
	shf.r.wrap.b32 	%r9728, %r9725, %r9724, 18;
	shf.r.wrap.b32 	%r9729, %r9724, %r9725, 18;
	mov.b64 	%rd1327, {%r9729, %r9728};
	xor.b64  	%rd1328, %rd1327, %rd1326;
	shf.l.wrap.b32 	%r9730, %r9724, %r9725, 23;
	shf.l.wrap.b32 	%r9731, %r9725, %r9724, 23;
	mov.b64 	%rd1329, {%r9731, %r9730};
	xor.b64  	%rd1330, %rd1328, %rd1329;
	xor.b64  	%rd1331, %rd1290, %rd1266;
	and.b64  	%rd1332, %rd1314, %rd1331;
	xor.b64  	%rd1333, %rd1332, %rd1266;
	add.s64 	%rd1334, %rd1097, %rd1034;
	add.s64 	%rd1335, %rd1334, %rd2772;
	add.s64 	%rd1336, %rd1335, %rd1333;
	add.s64 	%rd1337, %rd1336, %rd1330;
	add.s64 	%rd1338, %rd1337, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9732,%dummy}, %rd1325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9733}, %rd1325;
	}
	shf.r.wrap.b32 	%r9734, %r9733, %r9732, 28;
	shf.r.wrap.b32 	%r9735, %r9732, %r9733, 28;
	mov.b64 	%rd1339, {%r9735, %r9734};
	shf.l.wrap.b32 	%r9736, %r9732, %r9733, 30;
	shf.l.wrap.b32 	%r9737, %r9733, %r9732, 30;
	mov.b64 	%rd1340, {%r9737, %r9736};
	xor.b64  	%rd1341, %rd1340, %rd1339;
	shf.l.wrap.b32 	%r9738, %r9732, %r9733, 25;
	shf.l.wrap.b32 	%r9739, %r9733, %r9732, 25;
	mov.b64 	%rd1342, {%r9739, %r9738};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	xor.b64  	%rd1344, %rd1325, %rd1277;
	xor.b64  	%rd1345, %rd1325, %rd1301;
	and.b64  	%rd1346, %rd1345, %rd1344;
	xor.b64  	%rd1347, %rd1346, %rd1325;
	add.s64 	%rd1348, %rd1337, %rd1347;
	add.s64 	%rd1349, %rd1348, %rd1343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9740,%dummy}, %rd1338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9741}, %rd1338;
	}
	shf.r.wrap.b32 	%r9742, %r9741, %r9740, 14;
	shf.r.wrap.b32 	%r9743, %r9740, %r9741, 14;
	mov.b64 	%rd1350, {%r9743, %r9742};
	shf.r.wrap.b32 	%r9744, %r9741, %r9740, 18;
	shf.r.wrap.b32 	%r9745, %r9740, %r9741, 18;
	mov.b64 	%rd1351, {%r9745, %r9744};
	xor.b64  	%rd1352, %rd1351, %rd1350;
	shf.l.wrap.b32 	%r9746, %r9740, %r9741, 23;
	shf.l.wrap.b32 	%r9747, %r9741, %r9740, 23;
	mov.b64 	%rd1353, {%r9747, %r9746};
	xor.b64  	%rd1354, %rd1352, %rd1353;
	xor.b64  	%rd1355, %rd1314, %rd1290;
	and.b64  	%rd1356, %rd1338, %rd1355;
	xor.b64  	%rd1357, %rd1356, %rd1290;
	add.s64 	%rd1358, %rd1266, %rd1110;
	add.s64 	%rd1359, %rd1358, %rd2773;
	add.s64 	%rd1360, %rd1359, %rd1357;
	add.s64 	%rd1361, %rd1360, %rd1354;
	add.s64 	%rd1362, %rd1361, %rd1277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9748,%dummy}, %rd1349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9749}, %rd1349;
	}
	shf.r.wrap.b32 	%r9750, %r9749, %r9748, 28;
	shf.r.wrap.b32 	%r9751, %r9748, %r9749, 28;
	mov.b64 	%rd1363, {%r9751, %r9750};
	shf.l.wrap.b32 	%r9752, %r9748, %r9749, 30;
	shf.l.wrap.b32 	%r9753, %r9749, %r9748, 30;
	mov.b64 	%rd1364, {%r9753, %r9752};
	xor.b64  	%rd1365, %rd1364, %rd1363;
	shf.l.wrap.b32 	%r9754, %r9748, %r9749, 25;
	shf.l.wrap.b32 	%r9755, %r9749, %r9748, 25;
	mov.b64 	%rd1366, {%r9755, %r9754};
	xor.b64  	%rd1367, %rd1365, %rd1366;
	xor.b64  	%rd1368, %rd1349, %rd1301;
	xor.b64  	%rd1369, %rd1349, %rd1325;
	and.b64  	%rd1370, %rd1369, %rd1368;
	xor.b64  	%rd1371, %rd1370, %rd1349;
	add.s64 	%rd1372, %rd1361, %rd1371;
	add.s64 	%rd1373, %rd1372, %rd1367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9756,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9757}, %rd1362;
	}
	shf.r.wrap.b32 	%r9758, %r9757, %r9756, 14;
	shf.r.wrap.b32 	%r9759, %r9756, %r9757, 14;
	mov.b64 	%rd1374, {%r9759, %r9758};
	shf.r.wrap.b32 	%r9760, %r9757, %r9756, 18;
	shf.r.wrap.b32 	%r9761, %r9756, %r9757, 18;
	mov.b64 	%rd1375, {%r9761, %r9760};
	xor.b64  	%rd1376, %rd1375, %rd1374;
	shf.l.wrap.b32 	%r9762, %r9756, %r9757, 23;
	shf.l.wrap.b32 	%r9763, %r9757, %r9756, 23;
	mov.b64 	%rd1377, {%r9763, %r9762};
	xor.b64  	%rd1378, %rd1376, %rd1377;
	xor.b64  	%rd1379, %rd1338, %rd1314;
	and.b64  	%rd1380, %rd1362, %rd1379;
	xor.b64  	%rd1381, %rd1380, %rd1314;
	add.s64 	%rd1382, %rd1290, %rd1123;
	add.s64 	%rd1383, %rd1382, %rd2774;
	add.s64 	%rd1384, %rd1383, %rd1381;
	add.s64 	%rd1385, %rd1384, %rd1378;
	add.s64 	%rd1386, %rd1385, %rd1301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9764,%dummy}, %rd1373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9765}, %rd1373;
	}
	shf.r.wrap.b32 	%r9766, %r9765, %r9764, 28;
	shf.r.wrap.b32 	%r9767, %r9764, %r9765, 28;
	mov.b64 	%rd1387, {%r9767, %r9766};
	shf.l.wrap.b32 	%r9768, %r9764, %r9765, 30;
	shf.l.wrap.b32 	%r9769, %r9765, %r9764, 30;
	mov.b64 	%rd1388, {%r9769, %r9768};
	xor.b64  	%rd1389, %rd1388, %rd1387;
	shf.l.wrap.b32 	%r9770, %r9764, %r9765, 25;
	shf.l.wrap.b32 	%r9771, %r9765, %r9764, 25;
	mov.b64 	%rd1390, {%r9771, %r9770};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	xor.b64  	%rd1392, %rd1373, %rd1325;
	xor.b64  	%rd1393, %rd1373, %rd1349;
	and.b64  	%rd1394, %rd1393, %rd1392;
	xor.b64  	%rd1395, %rd1394, %rd1373;
	add.s64 	%rd1396, %rd1385, %rd1395;
	add.s64 	%rd1397, %rd1396, %rd1391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9772,%dummy}, %rd1386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9773}, %rd1386;
	}
	shf.r.wrap.b32 	%r9774, %r9773, %r9772, 14;
	shf.r.wrap.b32 	%r9775, %r9772, %r9773, 14;
	mov.b64 	%rd1398, {%r9775, %r9774};
	shf.r.wrap.b32 	%r9776, %r9773, %r9772, 18;
	shf.r.wrap.b32 	%r9777, %r9772, %r9773, 18;
	mov.b64 	%rd1399, {%r9777, %r9776};
	xor.b64  	%rd1400, %rd1399, %rd1398;
	shf.l.wrap.b32 	%r9778, %r9772, %r9773, 23;
	shf.l.wrap.b32 	%r9779, %r9773, %r9772, 23;
	mov.b64 	%rd1401, {%r9779, %r9778};
	xor.b64  	%rd1402, %rd1400, %rd1401;
	xor.b64  	%rd1403, %rd1362, %rd1338;
	and.b64  	%rd1404, %rd1386, %rd1403;
	xor.b64  	%rd1405, %rd1404, %rd1338;
	add.s64 	%rd1406, %rd1314, %rd1136;
	add.s64 	%rd1407, %rd1406, %rd2775;
	add.s64 	%rd1408, %rd1407, %rd1405;
	add.s64 	%rd1409, %rd1408, %rd1402;
	add.s64 	%rd1410, %rd1409, %rd1325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9780,%dummy}, %rd1397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9781}, %rd1397;
	}
	shf.r.wrap.b32 	%r9782, %r9781, %r9780, 28;
	shf.r.wrap.b32 	%r9783, %r9780, %r9781, 28;
	mov.b64 	%rd1411, {%r9783, %r9782};
	shf.l.wrap.b32 	%r9784, %r9780, %r9781, 30;
	shf.l.wrap.b32 	%r9785, %r9781, %r9780, 30;
	mov.b64 	%rd1412, {%r9785, %r9784};
	xor.b64  	%rd1413, %rd1412, %rd1411;
	shf.l.wrap.b32 	%r9786, %r9780, %r9781, 25;
	shf.l.wrap.b32 	%r9787, %r9781, %r9780, 25;
	mov.b64 	%rd1414, {%r9787, %r9786};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	xor.b64  	%rd1416, %rd1397, %rd1349;
	xor.b64  	%rd1417, %rd1397, %rd1373;
	and.b64  	%rd1418, %rd1417, %rd1416;
	xor.b64  	%rd1419, %rd1418, %rd1397;
	add.s64 	%rd1420, %rd1409, %rd1419;
	add.s64 	%rd1421, %rd1420, %rd1415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9788,%dummy}, %rd1410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9789}, %rd1410;
	}
	shf.r.wrap.b32 	%r9790, %r9789, %r9788, 14;
	shf.r.wrap.b32 	%r9791, %r9788, %r9789, 14;
	mov.b64 	%rd1422, {%r9791, %r9790};
	shf.r.wrap.b32 	%r9792, %r9789, %r9788, 18;
	shf.r.wrap.b32 	%r9793, %r9788, %r9789, 18;
	mov.b64 	%rd1423, {%r9793, %r9792};
	xor.b64  	%rd1424, %rd1423, %rd1422;
	shf.l.wrap.b32 	%r9794, %r9788, %r9789, 23;
	shf.l.wrap.b32 	%r9795, %r9789, %r9788, 23;
	mov.b64 	%rd1425, {%r9795, %r9794};
	xor.b64  	%rd1426, %rd1424, %rd1425;
	xor.b64  	%rd1427, %rd1386, %rd1362;
	and.b64  	%rd1428, %rd1410, %rd1427;
	xor.b64  	%rd1429, %rd1428, %rd1362;
	add.s64 	%rd1430, %rd1338, %rd1149;
	add.s64 	%rd1431, %rd1430, %rd2776;
	add.s64 	%rd1432, %rd1431, %rd1429;
	add.s64 	%rd1433, %rd1432, %rd1426;
	add.s64 	%rd1434, %rd1433, %rd1349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9796,%dummy}, %rd1421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9797}, %rd1421;
	}
	shf.r.wrap.b32 	%r9798, %r9797, %r9796, 28;
	shf.r.wrap.b32 	%r9799, %r9796, %r9797, 28;
	mov.b64 	%rd1435, {%r9799, %r9798};
	shf.l.wrap.b32 	%r9800, %r9796, %r9797, 30;
	shf.l.wrap.b32 	%r9801, %r9797, %r9796, 30;
	mov.b64 	%rd1436, {%r9801, %r9800};
	xor.b64  	%rd1437, %rd1436, %rd1435;
	shf.l.wrap.b32 	%r9802, %r9796, %r9797, 25;
	shf.l.wrap.b32 	%r9803, %r9797, %r9796, 25;
	mov.b64 	%rd1438, {%r9803, %r9802};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	xor.b64  	%rd1440, %rd1421, %rd1373;
	xor.b64  	%rd1441, %rd1421, %rd1397;
	and.b64  	%rd1442, %rd1441, %rd1440;
	xor.b64  	%rd1443, %rd1442, %rd1421;
	add.s64 	%rd1444, %rd1433, %rd1443;
	add.s64 	%rd1445, %rd1444, %rd1439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9804,%dummy}, %rd1434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9805}, %rd1434;
	}
	shf.r.wrap.b32 	%r9806, %r9805, %r9804, 14;
	shf.r.wrap.b32 	%r9807, %r9804, %r9805, 14;
	mov.b64 	%rd1446, {%r9807, %r9806};
	shf.r.wrap.b32 	%r9808, %r9805, %r9804, 18;
	shf.r.wrap.b32 	%r9809, %r9804, %r9805, 18;
	mov.b64 	%rd1447, {%r9809, %r9808};
	xor.b64  	%rd1448, %rd1447, %rd1446;
	shf.l.wrap.b32 	%r9810, %r9804, %r9805, 23;
	shf.l.wrap.b32 	%r9811, %r9805, %r9804, 23;
	mov.b64 	%rd1449, {%r9811, %r9810};
	xor.b64  	%rd1450, %rd1448, %rd1449;
	xor.b64  	%rd1451, %rd1410, %rd1386;
	and.b64  	%rd1452, %rd1434, %rd1451;
	xor.b64  	%rd1453, %rd1452, %rd1386;
	add.s64 	%rd1454, %rd1362, %rd1162;
	add.s64 	%rd1455, %rd1454, %rd2777;
	add.s64 	%rd1456, %rd1455, %rd1453;
	add.s64 	%rd1457, %rd1456, %rd1450;
	add.s64 	%rd1458, %rd1457, %rd1373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9812,%dummy}, %rd1445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9813}, %rd1445;
	}
	shf.r.wrap.b32 	%r9814, %r9813, %r9812, 28;
	shf.r.wrap.b32 	%r9815, %r9812, %r9813, 28;
	mov.b64 	%rd1459, {%r9815, %r9814};
	shf.l.wrap.b32 	%r9816, %r9812, %r9813, 30;
	shf.l.wrap.b32 	%r9817, %r9813, %r9812, 30;
	mov.b64 	%rd1460, {%r9817, %r9816};
	xor.b64  	%rd1461, %rd1460, %rd1459;
	shf.l.wrap.b32 	%r9818, %r9812, %r9813, 25;
	shf.l.wrap.b32 	%r9819, %r9813, %r9812, 25;
	mov.b64 	%rd1462, {%r9819, %r9818};
	xor.b64  	%rd1463, %rd1461, %rd1462;
	xor.b64  	%rd1464, %rd1445, %rd1397;
	xor.b64  	%rd1465, %rd1445, %rd1421;
	and.b64  	%rd1466, %rd1465, %rd1464;
	xor.b64  	%rd1467, %rd1466, %rd1445;
	add.s64 	%rd1468, %rd1457, %rd1467;
	add.s64 	%rd1469, %rd1468, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9820,%dummy}, %rd1458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9821}, %rd1458;
	}
	shf.r.wrap.b32 	%r9822, %r9821, %r9820, 14;
	shf.r.wrap.b32 	%r9823, %r9820, %r9821, 14;
	mov.b64 	%rd1470, {%r9823, %r9822};
	shf.r.wrap.b32 	%r9824, %r9821, %r9820, 18;
	shf.r.wrap.b32 	%r9825, %r9820, %r9821, 18;
	mov.b64 	%rd1471, {%r9825, %r9824};
	xor.b64  	%rd1472, %rd1471, %rd1470;
	shf.l.wrap.b32 	%r9826, %r9820, %r9821, 23;
	shf.l.wrap.b32 	%r9827, %r9821, %r9820, 23;
	mov.b64 	%rd1473, {%r9827, %r9826};
	xor.b64  	%rd1474, %rd1472, %rd1473;
	xor.b64  	%rd1475, %rd1434, %rd1410;
	and.b64  	%rd1476, %rd1458, %rd1475;
	xor.b64  	%rd1477, %rd1476, %rd1410;
	add.s64 	%rd1478, %rd1386, %rd1175;
	add.s64 	%rd1479, %rd1478, %rd2778;
	add.s64 	%rd1480, %rd1479, %rd1477;
	add.s64 	%rd1481, %rd1480, %rd1474;
	add.s64 	%rd1482, %rd1481, %rd1397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9828,%dummy}, %rd1469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9829}, %rd1469;
	}
	shf.r.wrap.b32 	%r9830, %r9829, %r9828, 28;
	shf.r.wrap.b32 	%r9831, %r9828, %r9829, 28;
	mov.b64 	%rd1483, {%r9831, %r9830};
	shf.l.wrap.b32 	%r9832, %r9828, %r9829, 30;
	shf.l.wrap.b32 	%r9833, %r9829, %r9828, 30;
	mov.b64 	%rd1484, {%r9833, %r9832};
	xor.b64  	%rd1485, %rd1484, %rd1483;
	shf.l.wrap.b32 	%r9834, %r9828, %r9829, 25;
	shf.l.wrap.b32 	%r9835, %r9829, %r9828, 25;
	mov.b64 	%rd1486, {%r9835, %r9834};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	xor.b64  	%rd1488, %rd1469, %rd1421;
	xor.b64  	%rd1489, %rd1469, %rd1445;
	and.b64  	%rd1490, %rd1489, %rd1488;
	xor.b64  	%rd1491, %rd1490, %rd1469;
	add.s64 	%rd1492, %rd1481, %rd1491;
	add.s64 	%rd1493, %rd1492, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9836,%dummy}, %rd1482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9837}, %rd1482;
	}
	shf.r.wrap.b32 	%r9838, %r9837, %r9836, 14;
	shf.r.wrap.b32 	%r9839, %r9836, %r9837, 14;
	mov.b64 	%rd1494, {%r9839, %r9838};
	shf.r.wrap.b32 	%r9840, %r9837, %r9836, 18;
	shf.r.wrap.b32 	%r9841, %r9836, %r9837, 18;
	mov.b64 	%rd1495, {%r9841, %r9840};
	xor.b64  	%rd1496, %rd1495, %rd1494;
	shf.l.wrap.b32 	%r9842, %r9836, %r9837, 23;
	shf.l.wrap.b32 	%r9843, %r9837, %r9836, 23;
	mov.b64 	%rd1497, {%r9843, %r9842};
	xor.b64  	%rd1498, %rd1496, %rd1497;
	xor.b64  	%rd1499, %rd1458, %rd1434;
	and.b64  	%rd1500, %rd1482, %rd1499;
	xor.b64  	%rd1501, %rd1500, %rd1434;
	add.s64 	%rd1502, %rd1410, %rd1188;
	add.s64 	%rd1503, %rd1502, %rd2779;
	add.s64 	%rd1504, %rd1503, %rd1501;
	add.s64 	%rd1505, %rd1504, %rd1498;
	add.s64 	%rd1506, %rd1505, %rd1421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9844,%dummy}, %rd1493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9845}, %rd1493;
	}
	shf.r.wrap.b32 	%r9846, %r9845, %r9844, 28;
	shf.r.wrap.b32 	%r9847, %r9844, %r9845, 28;
	mov.b64 	%rd1507, {%r9847, %r9846};
	shf.l.wrap.b32 	%r9848, %r9844, %r9845, 30;
	shf.l.wrap.b32 	%r9849, %r9845, %r9844, 30;
	mov.b64 	%rd1508, {%r9849, %r9848};
	xor.b64  	%rd1509, %rd1508, %rd1507;
	shf.l.wrap.b32 	%r9850, %r9844, %r9845, 25;
	shf.l.wrap.b32 	%r9851, %r9845, %r9844, 25;
	mov.b64 	%rd1510, {%r9851, %r9850};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	xor.b64  	%rd1512, %rd1493, %rd1445;
	xor.b64  	%rd1513, %rd1493, %rd1469;
	and.b64  	%rd1514, %rd1513, %rd1512;
	xor.b64  	%rd1515, %rd1514, %rd1493;
	add.s64 	%rd1516, %rd1505, %rd1515;
	add.s64 	%rd1517, %rd1516, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9852,%dummy}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9853}, %rd1506;
	}
	shf.r.wrap.b32 	%r9854, %r9853, %r9852, 14;
	shf.r.wrap.b32 	%r9855, %r9852, %r9853, 14;
	mov.b64 	%rd1518, {%r9855, %r9854};
	shf.r.wrap.b32 	%r9856, %r9853, %r9852, 18;
	shf.r.wrap.b32 	%r9857, %r9852, %r9853, 18;
	mov.b64 	%rd1519, {%r9857, %r9856};
	xor.b64  	%rd1520, %rd1519, %rd1518;
	shf.l.wrap.b32 	%r9858, %r9852, %r9853, 23;
	shf.l.wrap.b32 	%r9859, %r9853, %r9852, 23;
	mov.b64 	%rd1521, {%r9859, %r9858};
	xor.b64  	%rd1522, %rd1520, %rd1521;
	xor.b64  	%rd1523, %rd1482, %rd1458;
	and.b64  	%rd1524, %rd1506, %rd1523;
	xor.b64  	%rd1525, %rd1524, %rd1458;
	add.s64 	%rd1526, %rd1434, %rd1201;
	add.s64 	%rd1527, %rd1526, %rd2780;
	add.s64 	%rd1528, %rd1527, %rd1525;
	add.s64 	%rd1529, %rd1528, %rd1522;
	add.s64 	%rd1530, %rd1529, %rd1445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9860,%dummy}, %rd1517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9861}, %rd1517;
	}
	shf.r.wrap.b32 	%r9862, %r9861, %r9860, 28;
	shf.r.wrap.b32 	%r9863, %r9860, %r9861, 28;
	mov.b64 	%rd1531, {%r9863, %r9862};
	shf.l.wrap.b32 	%r9864, %r9860, %r9861, 30;
	shf.l.wrap.b32 	%r9865, %r9861, %r9860, 30;
	mov.b64 	%rd1532, {%r9865, %r9864};
	xor.b64  	%rd1533, %rd1532, %rd1531;
	shf.l.wrap.b32 	%r9866, %r9860, %r9861, 25;
	shf.l.wrap.b32 	%r9867, %r9861, %r9860, 25;
	mov.b64 	%rd1534, {%r9867, %r9866};
	xor.b64  	%rd1535, %rd1533, %rd1534;
	xor.b64  	%rd1536, %rd1517, %rd1469;
	xor.b64  	%rd1537, %rd1517, %rd1493;
	and.b64  	%rd1538, %rd1537, %rd1536;
	xor.b64  	%rd1539, %rd1538, %rd1517;
	add.s64 	%rd1540, %rd1529, %rd1539;
	add.s64 	%rd1541, %rd1540, %rd1535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9868,%dummy}, %rd1530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9869}, %rd1530;
	}
	shf.r.wrap.b32 	%r9870, %r9869, %r9868, 14;
	shf.r.wrap.b32 	%r9871, %r9868, %r9869, 14;
	mov.b64 	%rd1542, {%r9871, %r9870};
	shf.r.wrap.b32 	%r9872, %r9869, %r9868, 18;
	shf.r.wrap.b32 	%r9873, %r9868, %r9869, 18;
	mov.b64 	%rd1543, {%r9873, %r9872};
	xor.b64  	%rd1544, %rd1543, %rd1542;
	shf.l.wrap.b32 	%r9874, %r9868, %r9869, 23;
	shf.l.wrap.b32 	%r9875, %r9869, %r9868, 23;
	mov.b64 	%rd1545, {%r9875, %r9874};
	xor.b64  	%rd1546, %rd1544, %rd1545;
	xor.b64  	%rd1547, %rd1506, %rd1482;
	and.b64  	%rd1548, %rd1530, %rd1547;
	xor.b64  	%rd1549, %rd1548, %rd1482;
	add.s64 	%rd1550, %rd1458, %rd1214;
	add.s64 	%rd1551, %rd1550, %rd2781;
	add.s64 	%rd1552, %rd1551, %rd1549;
	add.s64 	%rd1553, %rd1552, %rd1546;
	add.s64 	%rd1554, %rd1553, %rd1469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9876,%dummy}, %rd1541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9877}, %rd1541;
	}
	shf.r.wrap.b32 	%r9878, %r9877, %r9876, 28;
	shf.r.wrap.b32 	%r9879, %r9876, %r9877, 28;
	mov.b64 	%rd1555, {%r9879, %r9878};
	shf.l.wrap.b32 	%r9880, %r9876, %r9877, 30;
	shf.l.wrap.b32 	%r9881, %r9877, %r9876, 30;
	mov.b64 	%rd1556, {%r9881, %r9880};
	xor.b64  	%rd1557, %rd1556, %rd1555;
	shf.l.wrap.b32 	%r9882, %r9876, %r9877, 25;
	shf.l.wrap.b32 	%r9883, %r9877, %r9876, 25;
	mov.b64 	%rd1558, {%r9883, %r9882};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	xor.b64  	%rd1560, %rd1541, %rd1493;
	xor.b64  	%rd1561, %rd1541, %rd1517;
	and.b64  	%rd1562, %rd1561, %rd1560;
	xor.b64  	%rd1563, %rd1562, %rd1541;
	add.s64 	%rd1564, %rd1553, %rd1563;
	add.s64 	%rd1565, %rd1564, %rd1559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9884,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9885}, %rd1554;
	}
	shf.r.wrap.b32 	%r9886, %r9885, %r9884, 14;
	shf.r.wrap.b32 	%r9887, %r9884, %r9885, 14;
	mov.b64 	%rd1566, {%r9887, %r9886};
	shf.r.wrap.b32 	%r9888, %r9885, %r9884, 18;
	shf.r.wrap.b32 	%r9889, %r9884, %r9885, 18;
	mov.b64 	%rd1567, {%r9889, %r9888};
	xor.b64  	%rd1568, %rd1567, %rd1566;
	shf.l.wrap.b32 	%r9890, %r9884, %r9885, 23;
	shf.l.wrap.b32 	%r9891, %r9885, %r9884, 23;
	mov.b64 	%rd1569, {%r9891, %r9890};
	xor.b64  	%rd1570, %rd1568, %rd1569;
	xor.b64  	%rd1571, %rd1530, %rd1506;
	and.b64  	%rd1572, %rd1554, %rd1571;
	xor.b64  	%rd1573, %rd1572, %rd1506;
	add.s64 	%rd1574, %rd1482, %rd1227;
	add.s64 	%rd1575, %rd1574, %rd2782;
	add.s64 	%rd1576, %rd1575, %rd1573;
	add.s64 	%rd1577, %rd1576, %rd1570;
	add.s64 	%rd1578, %rd1577, %rd1493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9892,%dummy}, %rd1565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9893}, %rd1565;
	}
	shf.r.wrap.b32 	%r9894, %r9893, %r9892, 28;
	shf.r.wrap.b32 	%r9895, %r9892, %r9893, 28;
	mov.b64 	%rd1579, {%r9895, %r9894};
	shf.l.wrap.b32 	%r9896, %r9892, %r9893, 30;
	shf.l.wrap.b32 	%r9897, %r9893, %r9892, 30;
	mov.b64 	%rd1580, {%r9897, %r9896};
	xor.b64  	%rd1581, %rd1580, %rd1579;
	shf.l.wrap.b32 	%r9898, %r9892, %r9893, 25;
	shf.l.wrap.b32 	%r9899, %r9893, %r9892, 25;
	mov.b64 	%rd1582, {%r9899, %r9898};
	xor.b64  	%rd1583, %rd1581, %rd1582;
	xor.b64  	%rd1584, %rd1565, %rd1517;
	xor.b64  	%rd1585, %rd1565, %rd1541;
	and.b64  	%rd1586, %rd1585, %rd1584;
	xor.b64  	%rd1587, %rd1586, %rd1565;
	add.s64 	%rd1588, %rd1577, %rd1587;
	add.s64 	%rd1589, %rd1588, %rd1583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9900,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9901}, %rd1578;
	}
	shf.r.wrap.b32 	%r9902, %r9901, %r9900, 14;
	shf.r.wrap.b32 	%r9903, %r9900, %r9901, 14;
	mov.b64 	%rd1590, {%r9903, %r9902};
	shf.r.wrap.b32 	%r9904, %r9901, %r9900, 18;
	shf.r.wrap.b32 	%r9905, %r9900, %r9901, 18;
	mov.b64 	%rd1591, {%r9905, %r9904};
	xor.b64  	%rd1592, %rd1591, %rd1590;
	shf.l.wrap.b32 	%r9906, %r9900, %r9901, 23;
	shf.l.wrap.b32 	%r9907, %r9901, %r9900, 23;
	mov.b64 	%rd1593, {%r9907, %r9906};
	xor.b64  	%rd1594, %rd1592, %rd1593;
	xor.b64  	%rd1595, %rd1554, %rd1530;
	and.b64  	%rd1596, %rd1578, %rd1595;
	xor.b64  	%rd1597, %rd1596, %rd1530;
	add.s64 	%rd1598, %rd1506, %rd1240;
	add.s64 	%rd1599, %rd1598, %rd2783;
	add.s64 	%rd1600, %rd1599, %rd1597;
	add.s64 	%rd1601, %rd1600, %rd1594;
	add.s64 	%rd1602, %rd1601, %rd1517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9908,%dummy}, %rd1589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9909}, %rd1589;
	}
	shf.r.wrap.b32 	%r9910, %r9909, %r9908, 28;
	shf.r.wrap.b32 	%r9911, %r9908, %r9909, 28;
	mov.b64 	%rd1603, {%r9911, %r9910};
	shf.l.wrap.b32 	%r9912, %r9908, %r9909, 30;
	shf.l.wrap.b32 	%r9913, %r9909, %r9908, 30;
	mov.b64 	%rd1604, {%r9913, %r9912};
	xor.b64  	%rd1605, %rd1604, %rd1603;
	shf.l.wrap.b32 	%r9914, %r9908, %r9909, 25;
	shf.l.wrap.b32 	%r9915, %r9909, %r9908, 25;
	mov.b64 	%rd1606, {%r9915, %r9914};
	xor.b64  	%rd1607, %rd1605, %rd1606;
	xor.b64  	%rd1608, %rd1589, %rd1541;
	xor.b64  	%rd1609, %rd1589, %rd1565;
	and.b64  	%rd1610, %rd1609, %rd1608;
	xor.b64  	%rd1611, %rd1610, %rd1589;
	add.s64 	%rd1612, %rd1601, %rd1611;
	add.s64 	%rd1613, %rd1612, %rd1607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9916,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9917}, %rd1602;
	}
	shf.r.wrap.b32 	%r9918, %r9917, %r9916, 14;
	shf.r.wrap.b32 	%r9919, %r9916, %r9917, 14;
	mov.b64 	%rd1614, {%r9919, %r9918};
	shf.r.wrap.b32 	%r9920, %r9917, %r9916, 18;
	shf.r.wrap.b32 	%r9921, %r9916, %r9917, 18;
	mov.b64 	%rd1615, {%r9921, %r9920};
	xor.b64  	%rd1616, %rd1615, %rd1614;
	shf.l.wrap.b32 	%r9922, %r9916, %r9917, 23;
	shf.l.wrap.b32 	%r9923, %r9917, %r9916, 23;
	mov.b64 	%rd1617, {%r9923, %r9922};
	xor.b64  	%rd1618, %rd1616, %rd1617;
	xor.b64  	%rd1619, %rd1578, %rd1554;
	and.b64  	%rd1620, %rd1602, %rd1619;
	xor.b64  	%rd1621, %rd1620, %rd1554;
	add.s64 	%rd1622, %rd1530, %rd1253;
	add.s64 	%rd1623, %rd1622, %rd2784;
	add.s64 	%rd1624, %rd1623, %rd1621;
	add.s64 	%rd1625, %rd1624, %rd1618;
	add.s64 	%rd1626, %rd1625, %rd1541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9924,%dummy}, %rd1613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9925}, %rd1613;
	}
	shf.r.wrap.b32 	%r9926, %r9925, %r9924, 28;
	shf.r.wrap.b32 	%r9927, %r9924, %r9925, 28;
	mov.b64 	%rd1627, {%r9927, %r9926};
	shf.l.wrap.b32 	%r9928, %r9924, %r9925, 30;
	shf.l.wrap.b32 	%r9929, %r9925, %r9924, 30;
	mov.b64 	%rd1628, {%r9929, %r9928};
	xor.b64  	%rd1629, %rd1628, %rd1627;
	shf.l.wrap.b32 	%r9930, %r9924, %r9925, 25;
	shf.l.wrap.b32 	%r9931, %r9925, %r9924, 25;
	mov.b64 	%rd1630, {%r9931, %r9930};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	xor.b64  	%rd1632, %rd1613, %rd1565;
	xor.b64  	%rd1633, %rd1613, %rd1589;
	and.b64  	%rd1634, %rd1633, %rd1632;
	xor.b64  	%rd1635, %rd1634, %rd1613;
	add.s64 	%rd1636, %rd1625, %rd1635;
	add.s64 	%rd1637, %rd1636, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9932,%dummy}, %rd1240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9933}, %rd1240;
	}
	shf.r.wrap.b32 	%r9934, %r9933, %r9932, 19;
	shf.r.wrap.b32 	%r9935, %r9932, %r9933, 19;
	mov.b64 	%rd1638, {%r9935, %r9934};
	shf.l.wrap.b32 	%r9936, %r9932, %r9933, 3;
	shf.l.wrap.b32 	%r9937, %r9933, %r9932, 3;
	mov.b64 	%rd1639, {%r9937, %r9936};
	shr.u64 	%rd1640, %rd1240, 6;
	xor.b64  	%rd1641, %rd1638, %rd1640;
	xor.b64  	%rd1642, %rd1641, %rd1639;
	shf.r.wrap.b32 	%r9938, %r9547, %r9546, 1;
	shf.r.wrap.b32 	%r9939, %r9546, %r9547, 1;
	mov.b64 	%rd1643, {%r9939, %r9938};
	shf.r.wrap.b32 	%r9940, %r9547, %r9546, 8;
	shf.r.wrap.b32 	%r9941, %r9546, %r9547, 8;
	mov.b64 	%rd1644, {%r9941, %r9940};
	shr.u64 	%rd1645, %rd1071, 7;
	xor.b64  	%rd1646, %rd1643, %rd1645;
	xor.b64  	%rd1647, %rd1646, %rd1644;
	add.s64 	%rd1648, %rd1058, %rd1175;
	add.s64 	%rd1649, %rd1648, %rd1642;
	add.s64 	%rd1650, %rd1649, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9942,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9943}, %rd1253;
	}
	shf.r.wrap.b32 	%r9944, %r9943, %r9942, 19;
	shf.r.wrap.b32 	%r9945, %r9942, %r9943, 19;
	mov.b64 	%rd1651, {%r9945, %r9944};
	shf.l.wrap.b32 	%r9946, %r9942, %r9943, 3;
	shf.l.wrap.b32 	%r9947, %r9943, %r9942, 3;
	mov.b64 	%rd1652, {%r9947, %r9946};
	shr.u64 	%rd1653, %rd1253, 6;
	xor.b64  	%rd1654, %rd1651, %rd1653;
	xor.b64  	%rd1655, %rd1654, %rd1652;
	shf.r.wrap.b32 	%r9948, %r9557, %r9556, 1;
	shf.r.wrap.b32 	%r9949, %r9556, %r9557, 1;
	mov.b64 	%rd1656, {%r9949, %r9948};
	shf.r.wrap.b32 	%r9950, %r9557, %r9556, 8;
	shf.r.wrap.b32 	%r9951, %r9556, %r9557, 8;
	mov.b64 	%rd1657, {%r9951, %r9950};
	shr.u64 	%rd1658, %rd1084, 7;
	xor.b64  	%rd1659, %rd1656, %rd1658;
	xor.b64  	%rd1660, %rd1659, %rd1657;
	add.s64 	%rd1661, %rd1071, %rd1188;
	add.s64 	%rd1662, %rd1661, %rd1655;
	add.s64 	%rd1663, %rd1662, %rd1660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9952,%dummy}, %rd1650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9953}, %rd1650;
	}
	shf.r.wrap.b32 	%r9954, %r9953, %r9952, 19;
	shf.r.wrap.b32 	%r9955, %r9952, %r9953, 19;
	mov.b64 	%rd1664, {%r9955, %r9954};
	shf.l.wrap.b32 	%r9956, %r9952, %r9953, 3;
	shf.l.wrap.b32 	%r9957, %r9953, %r9952, 3;
	mov.b64 	%rd1665, {%r9957, %r9956};
	shr.u64 	%rd1666, %rd1650, 6;
	xor.b64  	%rd1667, %rd1664, %rd1666;
	xor.b64  	%rd1668, %rd1667, %rd1665;
	shf.r.wrap.b32 	%r9958, %r9567, %r9566, 1;
	shf.r.wrap.b32 	%r9959, %r9566, %r9567, 1;
	mov.b64 	%rd1669, {%r9959, %r9958};
	shf.r.wrap.b32 	%r9960, %r9567, %r9566, 8;
	shf.r.wrap.b32 	%r9961, %r9566, %r9567, 8;
	mov.b64 	%rd1670, {%r9961, %r9960};
	shr.u64 	%rd1671, %rd1097, 7;
	xor.b64  	%rd1672, %rd1669, %rd1671;
	xor.b64  	%rd1673, %rd1672, %rd1670;
	add.s64 	%rd1674, %rd1084, %rd1201;
	add.s64 	%rd1675, %rd1674, %rd1668;
	add.s64 	%rd1676, %rd1675, %rd1673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9962,%dummy}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9963}, %rd1663;
	}
	shf.r.wrap.b32 	%r9964, %r9963, %r9962, 19;
	shf.r.wrap.b32 	%r9965, %r9962, %r9963, 19;
	mov.b64 	%rd1677, {%r9965, %r9964};
	shf.l.wrap.b32 	%r9966, %r9962, %r9963, 3;
	shf.l.wrap.b32 	%r9967, %r9963, %r9962, 3;
	mov.b64 	%rd1678, {%r9967, %r9966};
	shr.u64 	%rd1679, %rd1663, 6;
	xor.b64  	%rd1680, %rd1677, %rd1679;
	xor.b64  	%rd1681, %rd1680, %rd1678;
	shf.r.wrap.b32 	%r9968, %r9577, %r9576, 1;
	shf.r.wrap.b32 	%r9969, %r9576, %r9577, 1;
	mov.b64 	%rd1682, {%r9969, %r9968};
	shf.r.wrap.b32 	%r9970, %r9577, %r9576, 8;
	shf.r.wrap.b32 	%r9971, %r9576, %r9577, 8;
	mov.b64 	%rd1683, {%r9971, %r9970};
	shr.u64 	%rd1684, %rd1110, 7;
	xor.b64  	%rd1685, %rd1682, %rd1684;
	xor.b64  	%rd1686, %rd1685, %rd1683;
	add.s64 	%rd1687, %rd1097, %rd1214;
	add.s64 	%rd1688, %rd1687, %rd1681;
	add.s64 	%rd1689, %rd1688, %rd1686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9972,%dummy}, %rd1676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9973}, %rd1676;
	}
	shf.r.wrap.b32 	%r9974, %r9973, %r9972, 19;
	shf.r.wrap.b32 	%r9975, %r9972, %r9973, 19;
	mov.b64 	%rd1690, {%r9975, %r9974};
	shf.l.wrap.b32 	%r9976, %r9972, %r9973, 3;
	shf.l.wrap.b32 	%r9977, %r9973, %r9972, 3;
	mov.b64 	%rd1691, {%r9977, %r9976};
	shr.u64 	%rd1692, %rd1676, 6;
	xor.b64  	%rd1693, %rd1690, %rd1692;
	xor.b64  	%rd1694, %rd1693, %rd1691;
	shf.r.wrap.b32 	%r9978, %r9587, %r9586, 1;
	shf.r.wrap.b32 	%r9979, %r9586, %r9587, 1;
	mov.b64 	%rd1695, {%r9979, %r9978};
	shf.r.wrap.b32 	%r9980, %r9587, %r9586, 8;
	shf.r.wrap.b32 	%r9981, %r9586, %r9587, 8;
	mov.b64 	%rd1696, {%r9981, %r9980};
	shr.u64 	%rd1697, %rd1123, 7;
	xor.b64  	%rd1698, %rd1695, %rd1697;
	xor.b64  	%rd1699, %rd1698, %rd1696;
	add.s64 	%rd1700, %rd1110, %rd1227;
	add.s64 	%rd1701, %rd1700, %rd1694;
	add.s64 	%rd1702, %rd1701, %rd1699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9982,%dummy}, %rd1689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9983}, %rd1689;
	}
	shf.r.wrap.b32 	%r9984, %r9983, %r9982, 19;
	shf.r.wrap.b32 	%r9985, %r9982, %r9983, 19;
	mov.b64 	%rd1703, {%r9985, %r9984};
	shf.l.wrap.b32 	%r9986, %r9982, %r9983, 3;
	shf.l.wrap.b32 	%r9987, %r9983, %r9982, 3;
	mov.b64 	%rd1704, {%r9987, %r9986};
	shr.u64 	%rd1705, %rd1689, 6;
	xor.b64  	%rd1706, %rd1703, %rd1705;
	xor.b64  	%rd1707, %rd1706, %rd1704;
	shf.r.wrap.b32 	%r9988, %r9597, %r9596, 1;
	shf.r.wrap.b32 	%r9989, %r9596, %r9597, 1;
	mov.b64 	%rd1708, {%r9989, %r9988};
	shf.r.wrap.b32 	%r9990, %r9597, %r9596, 8;
	shf.r.wrap.b32 	%r9991, %r9596, %r9597, 8;
	mov.b64 	%rd1709, {%r9991, %r9990};
	shr.u64 	%rd1710, %rd1136, 7;
	xor.b64  	%rd1711, %rd1708, %rd1710;
	xor.b64  	%rd1712, %rd1711, %rd1709;
	add.s64 	%rd1713, %rd1123, %rd1240;
	add.s64 	%rd1714, %rd1713, %rd1707;
	add.s64 	%rd1715, %rd1714, %rd1712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9992,%dummy}, %rd1702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9993}, %rd1702;
	}
	shf.r.wrap.b32 	%r9994, %r9993, %r9992, 19;
	shf.r.wrap.b32 	%r9995, %r9992, %r9993, 19;
	mov.b64 	%rd1716, {%r9995, %r9994};
	shf.l.wrap.b32 	%r9996, %r9992, %r9993, 3;
	shf.l.wrap.b32 	%r9997, %r9993, %r9992, 3;
	mov.b64 	%rd1717, {%r9997, %r9996};
	shr.u64 	%rd1718, %rd1702, 6;
	xor.b64  	%rd1719, %rd1716, %rd1718;
	xor.b64  	%rd1720, %rd1719, %rd1717;
	shf.r.wrap.b32 	%r9998, %r9607, %r9606, 1;
	shf.r.wrap.b32 	%r9999, %r9606, %r9607, 1;
	mov.b64 	%rd1721, {%r9999, %r9998};
	shf.r.wrap.b32 	%r10000, %r9607, %r9606, 8;
	shf.r.wrap.b32 	%r10001, %r9606, %r9607, 8;
	mov.b64 	%rd1722, {%r10001, %r10000};
	shr.u64 	%rd1723, %rd1149, 7;
	xor.b64  	%rd1724, %rd1721, %rd1723;
	xor.b64  	%rd1725, %rd1724, %rd1722;
	add.s64 	%rd1726, %rd1136, %rd1253;
	add.s64 	%rd1727, %rd1726, %rd1720;
	add.s64 	%rd1728, %rd1727, %rd1725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10002,%dummy}, %rd1715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10003}, %rd1715;
	}
	shf.r.wrap.b32 	%r10004, %r10003, %r10002, 19;
	shf.r.wrap.b32 	%r10005, %r10002, %r10003, 19;
	mov.b64 	%rd1729, {%r10005, %r10004};
	shf.l.wrap.b32 	%r10006, %r10002, %r10003, 3;
	shf.l.wrap.b32 	%r10007, %r10003, %r10002, 3;
	mov.b64 	%rd1730, {%r10007, %r10006};
	shr.u64 	%rd1731, %rd1715, 6;
	xor.b64  	%rd1732, %rd1729, %rd1731;
	xor.b64  	%rd1733, %rd1732, %rd1730;
	shf.r.wrap.b32 	%r10008, %r9617, %r9616, 1;
	shf.r.wrap.b32 	%r10009, %r9616, %r9617, 1;
	mov.b64 	%rd1734, {%r10009, %r10008};
	shf.r.wrap.b32 	%r10010, %r9617, %r9616, 8;
	shf.r.wrap.b32 	%r10011, %r9616, %r9617, 8;
	mov.b64 	%rd1735, {%r10011, %r10010};
	shr.u64 	%rd1736, %rd1162, 7;
	xor.b64  	%rd1737, %rd1734, %rd1736;
	xor.b64  	%rd1738, %rd1737, %rd1735;
	add.s64 	%rd1739, %rd1650, %rd1149;
	add.s64 	%rd1740, %rd1739, %rd1733;
	add.s64 	%rd1741, %rd1740, %rd1738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10012,%dummy}, %rd1728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10013}, %rd1728;
	}
	shf.r.wrap.b32 	%r10014, %r10013, %r10012, 19;
	shf.r.wrap.b32 	%r10015, %r10012, %r10013, 19;
	mov.b64 	%rd1742, {%r10015, %r10014};
	shf.l.wrap.b32 	%r10016, %r10012, %r10013, 3;
	shf.l.wrap.b32 	%r10017, %r10013, %r10012, 3;
	mov.b64 	%rd1743, {%r10017, %r10016};
	shr.u64 	%rd1744, %rd1728, 6;
	xor.b64  	%rd1745, %rd1742, %rd1744;
	xor.b64  	%rd1746, %rd1745, %rd1743;
	shf.r.wrap.b32 	%r10018, %r9627, %r9626, 1;
	shf.r.wrap.b32 	%r10019, %r9626, %r9627, 1;
	mov.b64 	%rd1747, {%r10019, %r10018};
	shf.r.wrap.b32 	%r10020, %r9627, %r9626, 8;
	shf.r.wrap.b32 	%r10021, %r9626, %r9627, 8;
	mov.b64 	%rd1748, {%r10021, %r10020};
	shr.u64 	%rd1749, %rd1175, 7;
	xor.b64  	%rd1750, %rd1747, %rd1749;
	xor.b64  	%rd1751, %rd1750, %rd1748;
	add.s64 	%rd1752, %rd1663, %rd1162;
	add.s64 	%rd1753, %rd1752, %rd1746;
	add.s64 	%rd1754, %rd1753, %rd1751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10022,%dummy}, %rd1741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10023}, %rd1741;
	}
	shf.r.wrap.b32 	%r10024, %r10023, %r10022, 19;
	shf.r.wrap.b32 	%r10025, %r10022, %r10023, 19;
	mov.b64 	%rd1755, {%r10025, %r10024};
	shf.l.wrap.b32 	%r10026, %r10022, %r10023, 3;
	shf.l.wrap.b32 	%r10027, %r10023, %r10022, 3;
	mov.b64 	%rd1756, {%r10027, %r10026};
	shr.u64 	%rd1757, %rd1741, 6;
	xor.b64  	%rd1758, %rd1755, %rd1757;
	xor.b64  	%rd1759, %rd1758, %rd1756;
	shf.r.wrap.b32 	%r10028, %r9637, %r9636, 1;
	shf.r.wrap.b32 	%r10029, %r9636, %r9637, 1;
	mov.b64 	%rd1760, {%r10029, %r10028};
	shf.r.wrap.b32 	%r10030, %r9637, %r9636, 8;
	shf.r.wrap.b32 	%r10031, %r9636, %r9637, 8;
	mov.b64 	%rd1761, {%r10031, %r10030};
	shr.u64 	%rd1762, %rd1188, 7;
	xor.b64  	%rd1763, %rd1760, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1761;
	add.s64 	%rd1765, %rd1676, %rd1175;
	add.s64 	%rd1766, %rd1765, %rd1759;
	add.s64 	%rd1767, %rd1766, %rd1764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10032,%dummy}, %rd1754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10033}, %rd1754;
	}
	shf.r.wrap.b32 	%r10034, %r10033, %r10032, 19;
	shf.r.wrap.b32 	%r10035, %r10032, %r10033, 19;
	mov.b64 	%rd1768, {%r10035, %r10034};
	shf.l.wrap.b32 	%r10036, %r10032, %r10033, 3;
	shf.l.wrap.b32 	%r10037, %r10033, %r10032, 3;
	mov.b64 	%rd1769, {%r10037, %r10036};
	shr.u64 	%rd1770, %rd1754, 6;
	xor.b64  	%rd1771, %rd1768, %rd1770;
	xor.b64  	%rd1772, %rd1771, %rd1769;
	shf.r.wrap.b32 	%r10038, %r9647, %r9646, 1;
	shf.r.wrap.b32 	%r10039, %r9646, %r9647, 1;
	mov.b64 	%rd1773, {%r10039, %r10038};
	shf.r.wrap.b32 	%r10040, %r9647, %r9646, 8;
	shf.r.wrap.b32 	%r10041, %r9646, %r9647, 8;
	mov.b64 	%rd1774, {%r10041, %r10040};
	shr.u64 	%rd1775, %rd1201, 7;
	xor.b64  	%rd1776, %rd1773, %rd1775;
	xor.b64  	%rd1777, %rd1776, %rd1774;
	add.s64 	%rd1778, %rd1689, %rd1188;
	add.s64 	%rd1779, %rd1778, %rd1772;
	add.s64 	%rd1780, %rd1779, %rd1777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10042,%dummy}, %rd1767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10043}, %rd1767;
	}
	shf.r.wrap.b32 	%r10044, %r10043, %r10042, 19;
	shf.r.wrap.b32 	%r10045, %r10042, %r10043, 19;
	mov.b64 	%rd1781, {%r10045, %r10044};
	shf.l.wrap.b32 	%r10046, %r10042, %r10043, 3;
	shf.l.wrap.b32 	%r10047, %r10043, %r10042, 3;
	mov.b64 	%rd1782, {%r10047, %r10046};
	shr.u64 	%rd1783, %rd1767, 6;
	xor.b64  	%rd1784, %rd1781, %rd1783;
	xor.b64  	%rd1785, %rd1784, %rd1782;
	shf.r.wrap.b32 	%r10048, %r9657, %r9656, 1;
	shf.r.wrap.b32 	%r10049, %r9656, %r9657, 1;
	mov.b64 	%rd1786, {%r10049, %r10048};
	shf.r.wrap.b32 	%r10050, %r9657, %r9656, 8;
	shf.r.wrap.b32 	%r10051, %r9656, %r9657, 8;
	mov.b64 	%rd1787, {%r10051, %r10050};
	shr.u64 	%rd1788, %rd1214, 7;
	xor.b64  	%rd1789, %rd1786, %rd1788;
	xor.b64  	%rd1790, %rd1789, %rd1787;
	add.s64 	%rd1791, %rd1702, %rd1201;
	add.s64 	%rd1792, %rd1791, %rd1785;
	add.s64 	%rd1793, %rd1792, %rd1790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10052,%dummy}, %rd1780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10053}, %rd1780;
	}
	shf.r.wrap.b32 	%r10054, %r10053, %r10052, 19;
	shf.r.wrap.b32 	%r10055, %r10052, %r10053, 19;
	mov.b64 	%rd1794, {%r10055, %r10054};
	shf.l.wrap.b32 	%r10056, %r10052, %r10053, 3;
	shf.l.wrap.b32 	%r10057, %r10053, %r10052, 3;
	mov.b64 	%rd1795, {%r10057, %r10056};
	shr.u64 	%rd1796, %rd1780, 6;
	xor.b64  	%rd1797, %rd1794, %rd1796;
	xor.b64  	%rd1798, %rd1797, %rd1795;
	shf.r.wrap.b32 	%r10058, %r9667, %r9666, 1;
	shf.r.wrap.b32 	%r10059, %r9666, %r9667, 1;
	mov.b64 	%rd1799, {%r10059, %r10058};
	shf.r.wrap.b32 	%r10060, %r9667, %r9666, 8;
	shf.r.wrap.b32 	%r10061, %r9666, %r9667, 8;
	mov.b64 	%rd1800, {%r10061, %r10060};
	shr.u64 	%rd1801, %rd1227, 7;
	xor.b64  	%rd1802, %rd1799, %rd1801;
	xor.b64  	%rd1803, %rd1802, %rd1800;
	add.s64 	%rd1804, %rd1715, %rd1214;
	add.s64 	%rd1805, %rd1804, %rd1798;
	add.s64 	%rd1806, %rd1805, %rd1803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10062,%dummy}, %rd1793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10063}, %rd1793;
	}
	shf.r.wrap.b32 	%r10064, %r10063, %r10062, 19;
	shf.r.wrap.b32 	%r10065, %r10062, %r10063, 19;
	mov.b64 	%rd1807, {%r10065, %r10064};
	shf.l.wrap.b32 	%r10066, %r10062, %r10063, 3;
	shf.l.wrap.b32 	%r10067, %r10063, %r10062, 3;
	mov.b64 	%rd1808, {%r10067, %r10066};
	shr.u64 	%rd1809, %rd1793, 6;
	xor.b64  	%rd1810, %rd1807, %rd1809;
	xor.b64  	%rd1811, %rd1810, %rd1808;
	shf.r.wrap.b32 	%r10068, %r9933, %r9932, 1;
	shf.r.wrap.b32 	%r10069, %r9932, %r9933, 1;
	mov.b64 	%rd1812, {%r10069, %r10068};
	shf.r.wrap.b32 	%r10070, %r9933, %r9932, 8;
	shf.r.wrap.b32 	%r10071, %r9932, %r9933, 8;
	mov.b64 	%rd1813, {%r10071, %r10070};
	shr.u64 	%rd1814, %rd1240, 7;
	xor.b64  	%rd1815, %rd1812, %rd1814;
	xor.b64  	%rd1816, %rd1815, %rd1813;
	add.s64 	%rd1817, %rd1728, %rd1227;
	add.s64 	%rd1818, %rd1817, %rd1811;
	add.s64 	%rd1819, %rd1818, %rd1816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10072,%dummy}, %rd1806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10073}, %rd1806;
	}
	shf.r.wrap.b32 	%r10074, %r10073, %r10072, 19;
	shf.r.wrap.b32 	%r10075, %r10072, %r10073, 19;
	mov.b64 	%rd1820, {%r10075, %r10074};
	shf.l.wrap.b32 	%r10076, %r10072, %r10073, 3;
	shf.l.wrap.b32 	%r10077, %r10073, %r10072, 3;
	mov.b64 	%rd1821, {%r10077, %r10076};
	shr.u64 	%rd1822, %rd1806, 6;
	xor.b64  	%rd1823, %rd1820, %rd1822;
	xor.b64  	%rd1824, %rd1823, %rd1821;
	shf.r.wrap.b32 	%r10078, %r9943, %r9942, 1;
	shf.r.wrap.b32 	%r10079, %r9942, %r9943, 1;
	mov.b64 	%rd1825, {%r10079, %r10078};
	shf.r.wrap.b32 	%r10080, %r9943, %r9942, 8;
	shf.r.wrap.b32 	%r10081, %r9942, %r9943, 8;
	mov.b64 	%rd1826, {%r10081, %r10080};
	shr.u64 	%rd1827, %rd1253, 7;
	xor.b64  	%rd1828, %rd1825, %rd1827;
	xor.b64  	%rd1829, %rd1828, %rd1826;
	add.s64 	%rd1830, %rd1741, %rd1240;
	add.s64 	%rd1831, %rd1830, %rd1824;
	add.s64 	%rd1832, %rd1831, %rd1829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10082,%dummy}, %rd1819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10083}, %rd1819;
	}
	shf.r.wrap.b32 	%r10084, %r10083, %r10082, 19;
	shf.r.wrap.b32 	%r10085, %r10082, %r10083, 19;
	mov.b64 	%rd1833, {%r10085, %r10084};
	shf.l.wrap.b32 	%r10086, %r10082, %r10083, 3;
	shf.l.wrap.b32 	%r10087, %r10083, %r10082, 3;
	mov.b64 	%rd1834, {%r10087, %r10086};
	shr.u64 	%rd1835, %rd1819, 6;
	xor.b64  	%rd1836, %rd1833, %rd1835;
	xor.b64  	%rd1837, %rd1836, %rd1834;
	shf.r.wrap.b32 	%r10088, %r9953, %r9952, 1;
	shf.r.wrap.b32 	%r10089, %r9952, %r9953, 1;
	mov.b64 	%rd1838, {%r10089, %r10088};
	shf.r.wrap.b32 	%r10090, %r9953, %r9952, 8;
	shf.r.wrap.b32 	%r10091, %r9952, %r9953, 8;
	mov.b64 	%rd1839, {%r10091, %r10090};
	shr.u64 	%rd1840, %rd1650, 7;
	xor.b64  	%rd1841, %rd1838, %rd1840;
	xor.b64  	%rd1842, %rd1841, %rd1839;
	add.s64 	%rd1843, %rd1754, %rd1253;
	add.s64 	%rd1844, %rd1843, %rd1837;
	add.s64 	%rd1845, %rd1844, %rd1842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10092,%dummy}, %rd1626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10093}, %rd1626;
	}
	shf.r.wrap.b32 	%r10094, %r10093, %r10092, 14;
	shf.r.wrap.b32 	%r10095, %r10092, %r10093, 14;
	mov.b64 	%rd1846, {%r10095, %r10094};
	shf.r.wrap.b32 	%r10096, %r10093, %r10092, 18;
	shf.r.wrap.b32 	%r10097, %r10092, %r10093, 18;
	mov.b64 	%rd1847, {%r10097, %r10096};
	xor.b64  	%rd1848, %rd1847, %rd1846;
	shf.l.wrap.b32 	%r10098, %r10092, %r10093, 23;
	shf.l.wrap.b32 	%r10099, %r10093, %r10092, 23;
	mov.b64 	%rd1849, {%r10099, %r10098};
	xor.b64  	%rd1850, %rd1848, %rd1849;
	xor.b64  	%rd1851, %rd1578, %rd1602;
	and.b64  	%rd1852, %rd1851, %rd1626;
	xor.b64  	%rd1853, %rd1852, %rd1578;
	add.s64 	%rd1854, %rd1853, %rd1554;
	add.s64 	%rd1855, %rd1854, %rd1650;
	add.s64 	%rd1856, %rd1855, %rd2785;
	add.s64 	%rd1857, %rd1856, %rd1850;
	add.s64 	%rd1858, %rd1857, %rd1565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10100,%dummy}, %rd1637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10101}, %rd1637;
	}
	shf.r.wrap.b32 	%r10102, %r10101, %r10100, 28;
	shf.r.wrap.b32 	%r10103, %r10100, %r10101, 28;
	mov.b64 	%rd1859, {%r10103, %r10102};
	shf.l.wrap.b32 	%r10104, %r10100, %r10101, 30;
	shf.l.wrap.b32 	%r10105, %r10101, %r10100, 30;
	mov.b64 	%rd1860, {%r10105, %r10104};
	xor.b64  	%rd1861, %rd1860, %rd1859;
	shf.l.wrap.b32 	%r10106, %r10100, %r10101, 25;
	shf.l.wrap.b32 	%r10107, %r10101, %r10100, 25;
	mov.b64 	%rd1862, {%r10107, %r10106};
	xor.b64  	%rd1863, %rd1861, %rd1862;
	xor.b64  	%rd1864, %rd1637, %rd1589;
	xor.b64  	%rd1865, %rd1637, %rd1613;
	and.b64  	%rd1866, %rd1865, %rd1864;
	xor.b64  	%rd1867, %rd1866, %rd1637;
	add.s64 	%rd1868, %rd1857, %rd1867;
	add.s64 	%rd1869, %rd1868, %rd1863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10108,%dummy}, %rd1858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10109}, %rd1858;
	}
	shf.r.wrap.b32 	%r10110, %r10109, %r10108, 14;
	shf.r.wrap.b32 	%r10111, %r10108, %r10109, 14;
	mov.b64 	%rd1870, {%r10111, %r10110};
	shf.r.wrap.b32 	%r10112, %r10109, %r10108, 18;
	shf.r.wrap.b32 	%r10113, %r10108, %r10109, 18;
	mov.b64 	%rd1871, {%r10113, %r10112};
	xor.b64  	%rd1872, %rd1871, %rd1870;
	shf.l.wrap.b32 	%r10114, %r10108, %r10109, 23;
	shf.l.wrap.b32 	%r10115, %r10109, %r10108, 23;
	mov.b64 	%rd1873, {%r10115, %r10114};
	xor.b64  	%rd1874, %rd1872, %rd1873;
	xor.b64  	%rd1875, %rd1602, %rd1626;
	and.b64  	%rd1876, %rd1858, %rd1875;
	xor.b64  	%rd1877, %rd1876, %rd1602;
	add.s64 	%rd1878, %rd1663, %rd1578;
	add.s64 	%rd1879, %rd1878, %rd2786;
	add.s64 	%rd1880, %rd1879, %rd1877;
	add.s64 	%rd1881, %rd1880, %rd1874;
	add.s64 	%rd1882, %rd1881, %rd1589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10116,%dummy}, %rd1869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10117}, %rd1869;
	}
	shf.r.wrap.b32 	%r10118, %r10117, %r10116, 28;
	shf.r.wrap.b32 	%r10119, %r10116, %r10117, 28;
	mov.b64 	%rd1883, {%r10119, %r10118};
	shf.l.wrap.b32 	%r10120, %r10116, %r10117, 30;
	shf.l.wrap.b32 	%r10121, %r10117, %r10116, 30;
	mov.b64 	%rd1884, {%r10121, %r10120};
	xor.b64  	%rd1885, %rd1884, %rd1883;
	shf.l.wrap.b32 	%r10122, %r10116, %r10117, 25;
	shf.l.wrap.b32 	%r10123, %r10117, %r10116, 25;
	mov.b64 	%rd1886, {%r10123, %r10122};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	xor.b64  	%rd1888, %rd1869, %rd1613;
	xor.b64  	%rd1889, %rd1869, %rd1637;
	and.b64  	%rd1890, %rd1889, %rd1888;
	xor.b64  	%rd1891, %rd1890, %rd1869;
	add.s64 	%rd1892, %rd1881, %rd1891;
	add.s64 	%rd1893, %rd1892, %rd1887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10124,%dummy}, %rd1882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10125}, %rd1882;
	}
	shf.r.wrap.b32 	%r10126, %r10125, %r10124, 14;
	shf.r.wrap.b32 	%r10127, %r10124, %r10125, 14;
	mov.b64 	%rd1894, {%r10127, %r10126};
	shf.r.wrap.b32 	%r10128, %r10125, %r10124, 18;
	shf.r.wrap.b32 	%r10129, %r10124, %r10125, 18;
	mov.b64 	%rd1895, {%r10129, %r10128};
	xor.b64  	%rd1896, %rd1895, %rd1894;
	shf.l.wrap.b32 	%r10130, %r10124, %r10125, 23;
	shf.l.wrap.b32 	%r10131, %r10125, %r10124, 23;
	mov.b64 	%rd1897, {%r10131, %r10130};
	xor.b64  	%rd1898, %rd1896, %rd1897;
	xor.b64  	%rd1899, %rd1858, %rd1626;
	and.b64  	%rd1900, %rd1882, %rd1899;
	xor.b64  	%rd1901, %rd1900, %rd1626;
	add.s64 	%rd1902, %rd1676, %rd1602;
	add.s64 	%rd1903, %rd1902, %rd2787;
	add.s64 	%rd1904, %rd1903, %rd1901;
	add.s64 	%rd1905, %rd1904, %rd1898;
	add.s64 	%rd1906, %rd1905, %rd1613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10132,%dummy}, %rd1893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10133}, %rd1893;
	}
	shf.r.wrap.b32 	%r10134, %r10133, %r10132, 28;
	shf.r.wrap.b32 	%r10135, %r10132, %r10133, 28;
	mov.b64 	%rd1907, {%r10135, %r10134};
	shf.l.wrap.b32 	%r10136, %r10132, %r10133, 30;
	shf.l.wrap.b32 	%r10137, %r10133, %r10132, 30;
	mov.b64 	%rd1908, {%r10137, %r10136};
	xor.b64  	%rd1909, %rd1908, %rd1907;
	shf.l.wrap.b32 	%r10138, %r10132, %r10133, 25;
	shf.l.wrap.b32 	%r10139, %r10133, %r10132, 25;
	mov.b64 	%rd1910, {%r10139, %r10138};
	xor.b64  	%rd1911, %rd1909, %rd1910;
	xor.b64  	%rd1912, %rd1893, %rd1637;
	xor.b64  	%rd1913, %rd1893, %rd1869;
	and.b64  	%rd1914, %rd1913, %rd1912;
	xor.b64  	%rd1915, %rd1914, %rd1893;
	add.s64 	%rd1916, %rd1905, %rd1915;
	add.s64 	%rd1917, %rd1916, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10140,%dummy}, %rd1906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10141}, %rd1906;
	}
	shf.r.wrap.b32 	%r10142, %r10141, %r10140, 14;
	shf.r.wrap.b32 	%r10143, %r10140, %r10141, 14;
	mov.b64 	%rd1918, {%r10143, %r10142};
	shf.r.wrap.b32 	%r10144, %r10141, %r10140, 18;
	shf.r.wrap.b32 	%r10145, %r10140, %r10141, 18;
	mov.b64 	%rd1919, {%r10145, %r10144};
	xor.b64  	%rd1920, %rd1919, %rd1918;
	shf.l.wrap.b32 	%r10146, %r10140, %r10141, 23;
	shf.l.wrap.b32 	%r10147, %r10141, %r10140, 23;
	mov.b64 	%rd1921, {%r10147, %r10146};
	xor.b64  	%rd1922, %rd1920, %rd1921;
	xor.b64  	%rd1923, %rd1882, %rd1858;
	and.b64  	%rd1924, %rd1906, %rd1923;
	xor.b64  	%rd1925, %rd1924, %rd1858;
	add.s64 	%rd1926, %rd1689, %rd1626;
	add.s64 	%rd1927, %rd1926, %rd2788;
	add.s64 	%rd1928, %rd1927, %rd1925;
	add.s64 	%rd1929, %rd1928, %rd1922;
	add.s64 	%rd1930, %rd1929, %rd1637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10148,%dummy}, %rd1917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10149}, %rd1917;
	}
	shf.r.wrap.b32 	%r10150, %r10149, %r10148, 28;
	shf.r.wrap.b32 	%r10151, %r10148, %r10149, 28;
	mov.b64 	%rd1931, {%r10151, %r10150};
	shf.l.wrap.b32 	%r10152, %r10148, %r10149, 30;
	shf.l.wrap.b32 	%r10153, %r10149, %r10148, 30;
	mov.b64 	%rd1932, {%r10153, %r10152};
	xor.b64  	%rd1933, %rd1932, %rd1931;
	shf.l.wrap.b32 	%r10154, %r10148, %r10149, 25;
	shf.l.wrap.b32 	%r10155, %r10149, %r10148, 25;
	mov.b64 	%rd1934, {%r10155, %r10154};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	xor.b64  	%rd1936, %rd1917, %rd1869;
	xor.b64  	%rd1937, %rd1917, %rd1893;
	and.b64  	%rd1938, %rd1937, %rd1936;
	xor.b64  	%rd1939, %rd1938, %rd1917;
	add.s64 	%rd1940, %rd1929, %rd1939;
	add.s64 	%rd1941, %rd1940, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10156,%dummy}, %rd1930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10157}, %rd1930;
	}
	shf.r.wrap.b32 	%r10158, %r10157, %r10156, 14;
	shf.r.wrap.b32 	%r10159, %r10156, %r10157, 14;
	mov.b64 	%rd1942, {%r10159, %r10158};
	shf.r.wrap.b32 	%r10160, %r10157, %r10156, 18;
	shf.r.wrap.b32 	%r10161, %r10156, %r10157, 18;
	mov.b64 	%rd1943, {%r10161, %r10160};
	xor.b64  	%rd1944, %rd1943, %rd1942;
	shf.l.wrap.b32 	%r10162, %r10156, %r10157, 23;
	shf.l.wrap.b32 	%r10163, %r10157, %r10156, 23;
	mov.b64 	%rd1945, {%r10163, %r10162};
	xor.b64  	%rd1946, %rd1944, %rd1945;
	xor.b64  	%rd1947, %rd1906, %rd1882;
	and.b64  	%rd1948, %rd1930, %rd1947;
	xor.b64  	%rd1949, %rd1948, %rd1882;
	add.s64 	%rd1950, %rd1858, %rd1702;
	add.s64 	%rd1951, %rd1950, %rd2789;
	add.s64 	%rd1952, %rd1951, %rd1949;
	add.s64 	%rd1953, %rd1952, %rd1946;
	add.s64 	%rd1954, %rd1953, %rd1869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10164,%dummy}, %rd1941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10165}, %rd1941;
	}
	shf.r.wrap.b32 	%r10166, %r10165, %r10164, 28;
	shf.r.wrap.b32 	%r10167, %r10164, %r10165, 28;
	mov.b64 	%rd1955, {%r10167, %r10166};
	shf.l.wrap.b32 	%r10168, %r10164, %r10165, 30;
	shf.l.wrap.b32 	%r10169, %r10165, %r10164, 30;
	mov.b64 	%rd1956, {%r10169, %r10168};
	xor.b64  	%rd1957, %rd1956, %rd1955;
	shf.l.wrap.b32 	%r10170, %r10164, %r10165, 25;
	shf.l.wrap.b32 	%r10171, %r10165, %r10164, 25;
	mov.b64 	%rd1958, {%r10171, %r10170};
	xor.b64  	%rd1959, %rd1957, %rd1958;
	xor.b64  	%rd1960, %rd1941, %rd1893;
	xor.b64  	%rd1961, %rd1941, %rd1917;
	and.b64  	%rd1962, %rd1961, %rd1960;
	xor.b64  	%rd1963, %rd1962, %rd1941;
	add.s64 	%rd1964, %rd1953, %rd1963;
	add.s64 	%rd1965, %rd1964, %rd1959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10172,%dummy}, %rd1954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10173}, %rd1954;
	}
	shf.r.wrap.b32 	%r10174, %r10173, %r10172, 14;
	shf.r.wrap.b32 	%r10175, %r10172, %r10173, 14;
	mov.b64 	%rd1966, {%r10175, %r10174};
	shf.r.wrap.b32 	%r10176, %r10173, %r10172, 18;
	shf.r.wrap.b32 	%r10177, %r10172, %r10173, 18;
	mov.b64 	%rd1967, {%r10177, %r10176};
	xor.b64  	%rd1968, %rd1967, %rd1966;
	shf.l.wrap.b32 	%r10178, %r10172, %r10173, 23;
	shf.l.wrap.b32 	%r10179, %r10173, %r10172, 23;
	mov.b64 	%rd1969, {%r10179, %r10178};
	xor.b64  	%rd1970, %rd1968, %rd1969;
	xor.b64  	%rd1971, %rd1930, %rd1906;
	and.b64  	%rd1972, %rd1954, %rd1971;
	xor.b64  	%rd1973, %rd1972, %rd1906;
	add.s64 	%rd1974, %rd1882, %rd1715;
	add.s64 	%rd1975, %rd1974, %rd2790;
	add.s64 	%rd1976, %rd1975, %rd1973;
	add.s64 	%rd1977, %rd1976, %rd1970;
	add.s64 	%rd1978, %rd1977, %rd1893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10180,%dummy}, %rd1965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10181}, %rd1965;
	}
	shf.r.wrap.b32 	%r10182, %r10181, %r10180, 28;
	shf.r.wrap.b32 	%r10183, %r10180, %r10181, 28;
	mov.b64 	%rd1979, {%r10183, %r10182};
	shf.l.wrap.b32 	%r10184, %r10180, %r10181, 30;
	shf.l.wrap.b32 	%r10185, %r10181, %r10180, 30;
	mov.b64 	%rd1980, {%r10185, %r10184};
	xor.b64  	%rd1981, %rd1980, %rd1979;
	shf.l.wrap.b32 	%r10186, %r10180, %r10181, 25;
	shf.l.wrap.b32 	%r10187, %r10181, %r10180, 25;
	mov.b64 	%rd1982, {%r10187, %r10186};
	xor.b64  	%rd1983, %rd1981, %rd1982;
	xor.b64  	%rd1984, %rd1965, %rd1917;
	xor.b64  	%rd1985, %rd1965, %rd1941;
	and.b64  	%rd1986, %rd1985, %rd1984;
	xor.b64  	%rd1987, %rd1986, %rd1965;
	add.s64 	%rd1988, %rd1977, %rd1987;
	add.s64 	%rd1989, %rd1988, %rd1983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10188,%dummy}, %rd1978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10189}, %rd1978;
	}
	shf.r.wrap.b32 	%r10190, %r10189, %r10188, 14;
	shf.r.wrap.b32 	%r10191, %r10188, %r10189, 14;
	mov.b64 	%rd1990, {%r10191, %r10190};
	shf.r.wrap.b32 	%r10192, %r10189, %r10188, 18;
	shf.r.wrap.b32 	%r10193, %r10188, %r10189, 18;
	mov.b64 	%rd1991, {%r10193, %r10192};
	xor.b64  	%rd1992, %rd1991, %rd1990;
	shf.l.wrap.b32 	%r10194, %r10188, %r10189, 23;
	shf.l.wrap.b32 	%r10195, %r10189, %r10188, 23;
	mov.b64 	%rd1993, {%r10195, %r10194};
	xor.b64  	%rd1994, %rd1992, %rd1993;
	xor.b64  	%rd1995, %rd1954, %rd1930;
	and.b64  	%rd1996, %rd1978, %rd1995;
	xor.b64  	%rd1997, %rd1996, %rd1930;
	add.s64 	%rd1998, %rd1906, %rd1728;
	add.s64 	%rd1999, %rd1998, %rd2791;
	add.s64 	%rd2000, %rd1999, %rd1997;
	add.s64 	%rd2001, %rd2000, %rd1994;
	add.s64 	%rd2002, %rd2001, %rd1917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10196,%dummy}, %rd1989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10197}, %rd1989;
	}
	shf.r.wrap.b32 	%r10198, %r10197, %r10196, 28;
	shf.r.wrap.b32 	%r10199, %r10196, %r10197, 28;
	mov.b64 	%rd2003, {%r10199, %r10198};
	shf.l.wrap.b32 	%r10200, %r10196, %r10197, 30;
	shf.l.wrap.b32 	%r10201, %r10197, %r10196, 30;
	mov.b64 	%rd2004, {%r10201, %r10200};
	xor.b64  	%rd2005, %rd2004, %rd2003;
	shf.l.wrap.b32 	%r10202, %r10196, %r10197, 25;
	shf.l.wrap.b32 	%r10203, %r10197, %r10196, 25;
	mov.b64 	%rd2006, {%r10203, %r10202};
	xor.b64  	%rd2007, %rd2005, %rd2006;
	xor.b64  	%rd2008, %rd1989, %rd1941;
	xor.b64  	%rd2009, %rd1989, %rd1965;
	and.b64  	%rd2010, %rd2009, %rd2008;
	xor.b64  	%rd2011, %rd2010, %rd1989;
	add.s64 	%rd2012, %rd2001, %rd2011;
	add.s64 	%rd2013, %rd2012, %rd2007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10204,%dummy}, %rd2002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10205}, %rd2002;
	}
	shf.r.wrap.b32 	%r10206, %r10205, %r10204, 14;
	shf.r.wrap.b32 	%r10207, %r10204, %r10205, 14;
	mov.b64 	%rd2014, {%r10207, %r10206};
	shf.r.wrap.b32 	%r10208, %r10205, %r10204, 18;
	shf.r.wrap.b32 	%r10209, %r10204, %r10205, 18;
	mov.b64 	%rd2015, {%r10209, %r10208};
	xor.b64  	%rd2016, %rd2015, %rd2014;
	shf.l.wrap.b32 	%r10210, %r10204, %r10205, 23;
	shf.l.wrap.b32 	%r10211, %r10205, %r10204, 23;
	mov.b64 	%rd2017, {%r10211, %r10210};
	xor.b64  	%rd2018, %rd2016, %rd2017;
	xor.b64  	%rd2019, %rd1978, %rd1954;
	and.b64  	%rd2020, %rd2002, %rd2019;
	xor.b64  	%rd2021, %rd2020, %rd1954;
	add.s64 	%rd2022, %rd1930, %rd1741;
	add.s64 	%rd2023, %rd2022, %rd2792;
	add.s64 	%rd2024, %rd2023, %rd2021;
	add.s64 	%rd2025, %rd2024, %rd2018;
	add.s64 	%rd2026, %rd2025, %rd1941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10212,%dummy}, %rd2013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10213}, %rd2013;
	}
	shf.r.wrap.b32 	%r10214, %r10213, %r10212, 28;
	shf.r.wrap.b32 	%r10215, %r10212, %r10213, 28;
	mov.b64 	%rd2027, {%r10215, %r10214};
	shf.l.wrap.b32 	%r10216, %r10212, %r10213, 30;
	shf.l.wrap.b32 	%r10217, %r10213, %r10212, 30;
	mov.b64 	%rd2028, {%r10217, %r10216};
	xor.b64  	%rd2029, %rd2028, %rd2027;
	shf.l.wrap.b32 	%r10218, %r10212, %r10213, 25;
	shf.l.wrap.b32 	%r10219, %r10213, %r10212, 25;
	mov.b64 	%rd2030, {%r10219, %r10218};
	xor.b64  	%rd2031, %rd2029, %rd2030;
	xor.b64  	%rd2032, %rd2013, %rd1965;
	xor.b64  	%rd2033, %rd2013, %rd1989;
	and.b64  	%rd2034, %rd2033, %rd2032;
	xor.b64  	%rd2035, %rd2034, %rd2013;
	add.s64 	%rd2036, %rd2025, %rd2035;
	add.s64 	%rd2037, %rd2036, %rd2031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10220,%dummy}, %rd2026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10221}, %rd2026;
	}
	shf.r.wrap.b32 	%r10222, %r10221, %r10220, 14;
	shf.r.wrap.b32 	%r10223, %r10220, %r10221, 14;
	mov.b64 	%rd2038, {%r10223, %r10222};
	shf.r.wrap.b32 	%r10224, %r10221, %r10220, 18;
	shf.r.wrap.b32 	%r10225, %r10220, %r10221, 18;
	mov.b64 	%rd2039, {%r10225, %r10224};
	xor.b64  	%rd2040, %rd2039, %rd2038;
	shf.l.wrap.b32 	%r10226, %r10220, %r10221, 23;
	shf.l.wrap.b32 	%r10227, %r10221, %r10220, 23;
	mov.b64 	%rd2041, {%r10227, %r10226};
	xor.b64  	%rd2042, %rd2040, %rd2041;
	xor.b64  	%rd2043, %rd2002, %rd1978;
	and.b64  	%rd2044, %rd2026, %rd2043;
	xor.b64  	%rd2045, %rd2044, %rd1978;
	add.s64 	%rd2046, %rd1954, %rd1754;
	add.s64 	%rd2047, %rd2046, %rd2793;
	add.s64 	%rd2048, %rd2047, %rd2045;
	add.s64 	%rd2049, %rd2048, %rd2042;
	add.s64 	%rd2050, %rd2049, %rd1965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10228,%dummy}, %rd2037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10229}, %rd2037;
	}
	shf.r.wrap.b32 	%r10230, %r10229, %r10228, 28;
	shf.r.wrap.b32 	%r10231, %r10228, %r10229, 28;
	mov.b64 	%rd2051, {%r10231, %r10230};
	shf.l.wrap.b32 	%r10232, %r10228, %r10229, 30;
	shf.l.wrap.b32 	%r10233, %r10229, %r10228, 30;
	mov.b64 	%rd2052, {%r10233, %r10232};
	xor.b64  	%rd2053, %rd2052, %rd2051;
	shf.l.wrap.b32 	%r10234, %r10228, %r10229, 25;
	shf.l.wrap.b32 	%r10235, %r10229, %r10228, 25;
	mov.b64 	%rd2054, {%r10235, %r10234};
	xor.b64  	%rd2055, %rd2053, %rd2054;
	xor.b64  	%rd2056, %rd2037, %rd1989;
	xor.b64  	%rd2057, %rd2037, %rd2013;
	and.b64  	%rd2058, %rd2057, %rd2056;
	xor.b64  	%rd2059, %rd2058, %rd2037;
	add.s64 	%rd2060, %rd2049, %rd2059;
	add.s64 	%rd2061, %rd2060, %rd2055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10236,%dummy}, %rd2050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10237}, %rd2050;
	}
	shf.r.wrap.b32 	%r10238, %r10237, %r10236, 14;
	shf.r.wrap.b32 	%r10239, %r10236, %r10237, 14;
	mov.b64 	%rd2062, {%r10239, %r10238};
	shf.r.wrap.b32 	%r10240, %r10237, %r10236, 18;
	shf.r.wrap.b32 	%r10241, %r10236, %r10237, 18;
	mov.b64 	%rd2063, {%r10241, %r10240};
	xor.b64  	%rd2064, %rd2063, %rd2062;
	shf.l.wrap.b32 	%r10242, %r10236, %r10237, 23;
	shf.l.wrap.b32 	%r10243, %r10237, %r10236, 23;
	mov.b64 	%rd2065, {%r10243, %r10242};
	xor.b64  	%rd2066, %rd2064, %rd2065;
	xor.b64  	%rd2067, %rd2026, %rd2002;
	and.b64  	%rd2068, %rd2050, %rd2067;
	xor.b64  	%rd2069, %rd2068, %rd2002;
	add.s64 	%rd2070, %rd1978, %rd1767;
	add.s64 	%rd2071, %rd2070, %rd2794;
	add.s64 	%rd2072, %rd2071, %rd2069;
	add.s64 	%rd2073, %rd2072, %rd2066;
	add.s64 	%rd2074, %rd2073, %rd1989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10244,%dummy}, %rd2061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10245}, %rd2061;
	}
	shf.r.wrap.b32 	%r10246, %r10245, %r10244, 28;
	shf.r.wrap.b32 	%r10247, %r10244, %r10245, 28;
	mov.b64 	%rd2075, {%r10247, %r10246};
	shf.l.wrap.b32 	%r10248, %r10244, %r10245, 30;
	shf.l.wrap.b32 	%r10249, %r10245, %r10244, 30;
	mov.b64 	%rd2076, {%r10249, %r10248};
	xor.b64  	%rd2077, %rd2076, %rd2075;
	shf.l.wrap.b32 	%r10250, %r10244, %r10245, 25;
	shf.l.wrap.b32 	%r10251, %r10245, %r10244, 25;
	mov.b64 	%rd2078, {%r10251, %r10250};
	xor.b64  	%rd2079, %rd2077, %rd2078;
	xor.b64  	%rd2080, %rd2061, %rd2013;
	xor.b64  	%rd2081, %rd2061, %rd2037;
	and.b64  	%rd2082, %rd2081, %rd2080;
	xor.b64  	%rd2083, %rd2082, %rd2061;
	add.s64 	%rd2084, %rd2073, %rd2083;
	add.s64 	%rd2085, %rd2084, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10252,%dummy}, %rd2074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10253}, %rd2074;
	}
	shf.r.wrap.b32 	%r10254, %r10253, %r10252, 14;
	shf.r.wrap.b32 	%r10255, %r10252, %r10253, 14;
	mov.b64 	%rd2086, {%r10255, %r10254};
	shf.r.wrap.b32 	%r10256, %r10253, %r10252, 18;
	shf.r.wrap.b32 	%r10257, %r10252, %r10253, 18;
	mov.b64 	%rd2087, {%r10257, %r10256};
	xor.b64  	%rd2088, %rd2087, %rd2086;
	shf.l.wrap.b32 	%r10258, %r10252, %r10253, 23;
	shf.l.wrap.b32 	%r10259, %r10253, %r10252, 23;
	mov.b64 	%rd2089, {%r10259, %r10258};
	xor.b64  	%rd2090, %rd2088, %rd2089;
	xor.b64  	%rd2091, %rd2050, %rd2026;
	and.b64  	%rd2092, %rd2074, %rd2091;
	xor.b64  	%rd2093, %rd2092, %rd2026;
	add.s64 	%rd2094, %rd2002, %rd1780;
	add.s64 	%rd2095, %rd2094, %rd2795;
	add.s64 	%rd2096, %rd2095, %rd2093;
	add.s64 	%rd2097, %rd2096, %rd2090;
	add.s64 	%rd2098, %rd2097, %rd2013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10260,%dummy}, %rd2085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10261}, %rd2085;
	}
	shf.r.wrap.b32 	%r10262, %r10261, %r10260, 28;
	shf.r.wrap.b32 	%r10263, %r10260, %r10261, 28;
	mov.b64 	%rd2099, {%r10263, %r10262};
	shf.l.wrap.b32 	%r10264, %r10260, %r10261, 30;
	shf.l.wrap.b32 	%r10265, %r10261, %r10260, 30;
	mov.b64 	%rd2100, {%r10265, %r10264};
	xor.b64  	%rd2101, %rd2100, %rd2099;
	shf.l.wrap.b32 	%r10266, %r10260, %r10261, 25;
	shf.l.wrap.b32 	%r10267, %r10261, %r10260, 25;
	mov.b64 	%rd2102, {%r10267, %r10266};
	xor.b64  	%rd2103, %rd2101, %rd2102;
	xor.b64  	%rd2104, %rd2085, %rd2037;
	xor.b64  	%rd2105, %rd2085, %rd2061;
	and.b64  	%rd2106, %rd2105, %rd2104;
	xor.b64  	%rd2107, %rd2106, %rd2085;
	add.s64 	%rd2108, %rd2097, %rd2107;
	add.s64 	%rd2109, %rd2108, %rd2103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10268,%dummy}, %rd2098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10269}, %rd2098;
	}
	shf.r.wrap.b32 	%r10270, %r10269, %r10268, 14;
	shf.r.wrap.b32 	%r10271, %r10268, %r10269, 14;
	mov.b64 	%rd2110, {%r10271, %r10270};
	shf.r.wrap.b32 	%r10272, %r10269, %r10268, 18;
	shf.r.wrap.b32 	%r10273, %r10268, %r10269, 18;
	mov.b64 	%rd2111, {%r10273, %r10272};
	xor.b64  	%rd2112, %rd2111, %rd2110;
	shf.l.wrap.b32 	%r10274, %r10268, %r10269, 23;
	shf.l.wrap.b32 	%r10275, %r10269, %r10268, 23;
	mov.b64 	%rd2113, {%r10275, %r10274};
	xor.b64  	%rd2114, %rd2112, %rd2113;
	xor.b64  	%rd2115, %rd2074, %rd2050;
	and.b64  	%rd2116, %rd2098, %rd2115;
	xor.b64  	%rd2117, %rd2116, %rd2050;
	add.s64 	%rd2118, %rd2026, %rd1793;
	add.s64 	%rd2119, %rd2118, %rd2796;
	add.s64 	%rd2120, %rd2119, %rd2117;
	add.s64 	%rd2121, %rd2120, %rd2114;
	add.s64 	%rd2122, %rd2121, %rd2037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10276,%dummy}, %rd2109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10277}, %rd2109;
	}
	shf.r.wrap.b32 	%r10278, %r10277, %r10276, 28;
	shf.r.wrap.b32 	%r10279, %r10276, %r10277, 28;
	mov.b64 	%rd2123, {%r10279, %r10278};
	shf.l.wrap.b32 	%r10280, %r10276, %r10277, 30;
	shf.l.wrap.b32 	%r10281, %r10277, %r10276, 30;
	mov.b64 	%rd2124, {%r10281, %r10280};
	xor.b64  	%rd2125, %rd2124, %rd2123;
	shf.l.wrap.b32 	%r10282, %r10276, %r10277, 25;
	shf.l.wrap.b32 	%r10283, %r10277, %r10276, 25;
	mov.b64 	%rd2126, {%r10283, %r10282};
	xor.b64  	%rd2127, %rd2125, %rd2126;
	xor.b64  	%rd2128, %rd2109, %rd2061;
	xor.b64  	%rd2129, %rd2109, %rd2085;
	and.b64  	%rd2130, %rd2129, %rd2128;
	xor.b64  	%rd2131, %rd2130, %rd2109;
	add.s64 	%rd2132, %rd2121, %rd2131;
	add.s64 	%rd2133, %rd2132, %rd2127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10284,%dummy}, %rd2122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10285}, %rd2122;
	}
	shf.r.wrap.b32 	%r10286, %r10285, %r10284, 14;
	shf.r.wrap.b32 	%r10287, %r10284, %r10285, 14;
	mov.b64 	%rd2134, {%r10287, %r10286};
	shf.r.wrap.b32 	%r10288, %r10285, %r10284, 18;
	shf.r.wrap.b32 	%r10289, %r10284, %r10285, 18;
	mov.b64 	%rd2135, {%r10289, %r10288};
	xor.b64  	%rd2136, %rd2135, %rd2134;
	shf.l.wrap.b32 	%r10290, %r10284, %r10285, 23;
	shf.l.wrap.b32 	%r10291, %r10285, %r10284, 23;
	mov.b64 	%rd2137, {%r10291, %r10290};
	xor.b64  	%rd2138, %rd2136, %rd2137;
	xor.b64  	%rd2139, %rd2098, %rd2074;
	and.b64  	%rd2140, %rd2122, %rd2139;
	xor.b64  	%rd2141, %rd2140, %rd2074;
	add.s64 	%rd2142, %rd2050, %rd1806;
	add.s64 	%rd2143, %rd2142, %rd2797;
	add.s64 	%rd2144, %rd2143, %rd2141;
	add.s64 	%rd2145, %rd2144, %rd2138;
	add.s64 	%rd2146, %rd2145, %rd2061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10292,%dummy}, %rd2133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10293}, %rd2133;
	}
	shf.r.wrap.b32 	%r10294, %r10293, %r10292, 28;
	shf.r.wrap.b32 	%r10295, %r10292, %r10293, 28;
	mov.b64 	%rd2147, {%r10295, %r10294};
	shf.l.wrap.b32 	%r10296, %r10292, %r10293, 30;
	shf.l.wrap.b32 	%r10297, %r10293, %r10292, 30;
	mov.b64 	%rd2148, {%r10297, %r10296};
	xor.b64  	%rd2149, %rd2148, %rd2147;
	shf.l.wrap.b32 	%r10298, %r10292, %r10293, 25;
	shf.l.wrap.b32 	%r10299, %r10293, %r10292, 25;
	mov.b64 	%rd2150, {%r10299, %r10298};
	xor.b64  	%rd2151, %rd2149, %rd2150;
	xor.b64  	%rd2152, %rd2133, %rd2085;
	xor.b64  	%rd2153, %rd2133, %rd2109;
	and.b64  	%rd2154, %rd2153, %rd2152;
	xor.b64  	%rd2155, %rd2154, %rd2133;
	add.s64 	%rd2156, %rd2145, %rd2155;
	add.s64 	%rd2157, %rd2156, %rd2151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10300,%dummy}, %rd2146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10301}, %rd2146;
	}
	shf.r.wrap.b32 	%r10302, %r10301, %r10300, 14;
	shf.r.wrap.b32 	%r10303, %r10300, %r10301, 14;
	mov.b64 	%rd2158, {%r10303, %r10302};
	shf.r.wrap.b32 	%r10304, %r10301, %r10300, 18;
	shf.r.wrap.b32 	%r10305, %r10300, %r10301, 18;
	mov.b64 	%rd2159, {%r10305, %r10304};
	xor.b64  	%rd2160, %rd2159, %rd2158;
	shf.l.wrap.b32 	%r10306, %r10300, %r10301, 23;
	shf.l.wrap.b32 	%r10307, %r10301, %r10300, 23;
	mov.b64 	%rd2161, {%r10307, %r10306};
	xor.b64  	%rd2162, %rd2160, %rd2161;
	xor.b64  	%rd2163, %rd2122, %rd2098;
	and.b64  	%rd2164, %rd2146, %rd2163;
	xor.b64  	%rd2165, %rd2164, %rd2098;
	add.s64 	%rd2166, %rd2074, %rd1819;
	add.s64 	%rd2167, %rd2166, %rd2798;
	add.s64 	%rd2168, %rd2167, %rd2165;
	add.s64 	%rd2169, %rd2168, %rd2162;
	add.s64 	%rd2170, %rd2169, %rd2085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10308,%dummy}, %rd2157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10309}, %rd2157;
	}
	shf.r.wrap.b32 	%r10310, %r10309, %r10308, 28;
	shf.r.wrap.b32 	%r10311, %r10308, %r10309, 28;
	mov.b64 	%rd2171, {%r10311, %r10310};
	shf.l.wrap.b32 	%r10312, %r10308, %r10309, 30;
	shf.l.wrap.b32 	%r10313, %r10309, %r10308, 30;
	mov.b64 	%rd2172, {%r10313, %r10312};
	xor.b64  	%rd2173, %rd2172, %rd2171;
	shf.l.wrap.b32 	%r10314, %r10308, %r10309, 25;
	shf.l.wrap.b32 	%r10315, %r10309, %r10308, 25;
	mov.b64 	%rd2174, {%r10315, %r10314};
	xor.b64  	%rd2175, %rd2173, %rd2174;
	xor.b64  	%rd2176, %rd2157, %rd2109;
	xor.b64  	%rd2177, %rd2157, %rd2133;
	and.b64  	%rd2178, %rd2177, %rd2176;
	xor.b64  	%rd2179, %rd2178, %rd2157;
	add.s64 	%rd2180, %rd2169, %rd2179;
	add.s64 	%rd2181, %rd2180, %rd2175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10316,%dummy}, %rd2170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10317}, %rd2170;
	}
	shf.r.wrap.b32 	%r10318, %r10317, %r10316, 14;
	shf.r.wrap.b32 	%r10319, %r10316, %r10317, 14;
	mov.b64 	%rd2182, {%r10319, %r10318};
	shf.r.wrap.b32 	%r10320, %r10317, %r10316, 18;
	shf.r.wrap.b32 	%r10321, %r10316, %r10317, 18;
	mov.b64 	%rd2183, {%r10321, %r10320};
	xor.b64  	%rd2184, %rd2183, %rd2182;
	shf.l.wrap.b32 	%r10322, %r10316, %r10317, 23;
	shf.l.wrap.b32 	%r10323, %r10317, %r10316, 23;
	mov.b64 	%rd2185, {%r10323, %r10322};
	xor.b64  	%rd2186, %rd2184, %rd2185;
	xor.b64  	%rd2187, %rd2146, %rd2122;
	and.b64  	%rd2188, %rd2170, %rd2187;
	xor.b64  	%rd2189, %rd2188, %rd2122;
	add.s64 	%rd2190, %rd2098, %rd1832;
	add.s64 	%rd2191, %rd2190, %rd2799;
	add.s64 	%rd2192, %rd2191, %rd2189;
	add.s64 	%rd2193, %rd2192, %rd2186;
	add.s64 	%rd2194, %rd2193, %rd2109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10324,%dummy}, %rd2181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10325}, %rd2181;
	}
	shf.r.wrap.b32 	%r10326, %r10325, %r10324, 28;
	shf.r.wrap.b32 	%r10327, %r10324, %r10325, 28;
	mov.b64 	%rd2195, {%r10327, %r10326};
	shf.l.wrap.b32 	%r10328, %r10324, %r10325, 30;
	shf.l.wrap.b32 	%r10329, %r10325, %r10324, 30;
	mov.b64 	%rd2196, {%r10329, %r10328};
	xor.b64  	%rd2197, %rd2196, %rd2195;
	shf.l.wrap.b32 	%r10330, %r10324, %r10325, 25;
	shf.l.wrap.b32 	%r10331, %r10325, %r10324, 25;
	mov.b64 	%rd2198, {%r10331, %r10330};
	xor.b64  	%rd2199, %rd2197, %rd2198;
	xor.b64  	%rd2200, %rd2181, %rd2133;
	xor.b64  	%rd2201, %rd2181, %rd2157;
	and.b64  	%rd2202, %rd2201, %rd2200;
	xor.b64  	%rd2203, %rd2202, %rd2181;
	add.s64 	%rd2204, %rd2193, %rd2203;
	add.s64 	%rd2205, %rd2204, %rd2199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10332,%dummy}, %rd2194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10333}, %rd2194;
	}
	shf.r.wrap.b32 	%r10334, %r10333, %r10332, 14;
	shf.r.wrap.b32 	%r10335, %r10332, %r10333, 14;
	mov.b64 	%rd2206, {%r10335, %r10334};
	shf.r.wrap.b32 	%r10336, %r10333, %r10332, 18;
	shf.r.wrap.b32 	%r10337, %r10332, %r10333, 18;
	mov.b64 	%rd2207, {%r10337, %r10336};
	xor.b64  	%rd2208, %rd2207, %rd2206;
	shf.l.wrap.b32 	%r10338, %r10332, %r10333, 23;
	shf.l.wrap.b32 	%r10339, %r10333, %r10332, 23;
	mov.b64 	%rd2209, {%r10339, %r10338};
	xor.b64  	%rd2210, %rd2208, %rd2209;
	xor.b64  	%rd2211, %rd2170, %rd2146;
	and.b64  	%rd2212, %rd2194, %rd2211;
	xor.b64  	%rd2213, %rd2212, %rd2146;
	add.s64 	%rd2214, %rd2122, %rd1845;
	add.s64 	%rd2215, %rd2214, %rd2800;
	add.s64 	%rd2216, %rd2215, %rd2213;
	add.s64 	%rd2217, %rd2216, %rd2210;
	add.s64 	%rd2218, %rd2217, %rd2133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10340,%dummy}, %rd2205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10341}, %rd2205;
	}
	shf.r.wrap.b32 	%r10342, %r10341, %r10340, 28;
	shf.r.wrap.b32 	%r10343, %r10340, %r10341, 28;
	mov.b64 	%rd2219, {%r10343, %r10342};
	shf.l.wrap.b32 	%r10344, %r10340, %r10341, 30;
	shf.l.wrap.b32 	%r10345, %r10341, %r10340, 30;
	mov.b64 	%rd2220, {%r10345, %r10344};
	xor.b64  	%rd2221, %rd2220, %rd2219;
	shf.l.wrap.b32 	%r10346, %r10340, %r10341, 25;
	shf.l.wrap.b32 	%r10347, %r10341, %r10340, 25;
	mov.b64 	%rd2222, {%r10347, %r10346};
	xor.b64  	%rd2223, %rd2221, %rd2222;
	xor.b64  	%rd2224, %rd2205, %rd2157;
	xor.b64  	%rd2225, %rd2205, %rd2181;
	and.b64  	%rd2226, %rd2225, %rd2224;
	xor.b64  	%rd2227, %rd2226, %rd2205;
	add.s64 	%rd2228, %rd2217, %rd2227;
	add.s64 	%rd2229, %rd2228, %rd2223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10348,%dummy}, %rd1832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10349}, %rd1832;
	}
	shf.r.wrap.b32 	%r10350, %r10349, %r10348, 19;
	shf.r.wrap.b32 	%r10351, %r10348, %r10349, 19;
	mov.b64 	%rd2230, {%r10351, %r10350};
	shf.l.wrap.b32 	%r10352, %r10348, %r10349, 3;
	shf.l.wrap.b32 	%r10353, %r10349, %r10348, 3;
	mov.b64 	%rd2231, {%r10353, %r10352};
	shr.u64 	%rd2232, %rd1832, 6;
	xor.b64  	%rd2233, %rd2230, %rd2232;
	xor.b64  	%rd2234, %rd2233, %rd2231;
	shf.r.wrap.b32 	%r10354, %r9963, %r9962, 1;
	shf.r.wrap.b32 	%r10355, %r9962, %r9963, 1;
	mov.b64 	%rd2235, {%r10355, %r10354};
	shf.r.wrap.b32 	%r10356, %r9963, %r9962, 8;
	shf.r.wrap.b32 	%r10357, %r9962, %r9963, 8;
	mov.b64 	%rd2236, {%r10357, %r10356};
	shr.u64 	%rd2237, %rd1663, 7;
	xor.b64  	%rd2238, %rd2235, %rd2237;
	xor.b64  	%rd2239, %rd2238, %rd2236;
	add.s64 	%rd2240, %rd1650, %rd1767;
	add.s64 	%rd2241, %rd2240, %rd2234;
	add.s64 	%rd2242, %rd2241, %rd2239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10358,%dummy}, %rd1845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10359}, %rd1845;
	}
	shf.r.wrap.b32 	%r10360, %r10359, %r10358, 19;
	shf.r.wrap.b32 	%r10361, %r10358, %r10359, 19;
	mov.b64 	%rd2243, {%r10361, %r10360};
	shf.l.wrap.b32 	%r10362, %r10358, %r10359, 3;
	shf.l.wrap.b32 	%r10363, %r10359, %r10358, 3;
	mov.b64 	%rd2244, {%r10363, %r10362};
	shr.u64 	%rd2245, %rd1845, 6;
	xor.b64  	%rd2246, %rd2243, %rd2245;
	xor.b64  	%rd2247, %rd2246, %rd2244;
	shf.r.wrap.b32 	%r10364, %r9973, %r9972, 1;
	shf.r.wrap.b32 	%r10365, %r9972, %r9973, 1;
	mov.b64 	%rd2248, {%r10365, %r10364};
	shf.r.wrap.b32 	%r10366, %r9973, %r9972, 8;
	shf.r.wrap.b32 	%r10367, %r9972, %r9973, 8;
	mov.b64 	%rd2249, {%r10367, %r10366};
	shr.u64 	%rd2250, %rd1676, 7;
	xor.b64  	%rd2251, %rd2248, %rd2250;
	xor.b64  	%rd2252, %rd2251, %rd2249;
	add.s64 	%rd2253, %rd1663, %rd1780;
	add.s64 	%rd2254, %rd2253, %rd2247;
	add.s64 	%rd2255, %rd2254, %rd2252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10368,%dummy}, %rd2242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10369}, %rd2242;
	}
	shf.r.wrap.b32 	%r10370, %r10369, %r10368, 19;
	shf.r.wrap.b32 	%r10371, %r10368, %r10369, 19;
	mov.b64 	%rd2256, {%r10371, %r10370};
	shf.l.wrap.b32 	%r10372, %r10368, %r10369, 3;
	shf.l.wrap.b32 	%r10373, %r10369, %r10368, 3;
	mov.b64 	%rd2257, {%r10373, %r10372};
	shr.u64 	%rd2258, %rd2242, 6;
	xor.b64  	%rd2259, %rd2256, %rd2258;
	xor.b64  	%rd2260, %rd2259, %rd2257;
	shf.r.wrap.b32 	%r10374, %r9983, %r9982, 1;
	shf.r.wrap.b32 	%r10375, %r9982, %r9983, 1;
	mov.b64 	%rd2261, {%r10375, %r10374};
	shf.r.wrap.b32 	%r10376, %r9983, %r9982, 8;
	shf.r.wrap.b32 	%r10377, %r9982, %r9983, 8;
	mov.b64 	%rd2262, {%r10377, %r10376};
	shr.u64 	%rd2263, %rd1689, 7;
	xor.b64  	%rd2264, %rd2261, %rd2263;
	xor.b64  	%rd2265, %rd2264, %rd2262;
	add.s64 	%rd2266, %rd1676, %rd1793;
	add.s64 	%rd2267, %rd2266, %rd2260;
	add.s64 	%rd2268, %rd2267, %rd2265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10378,%dummy}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10379}, %rd2255;
	}
	shf.r.wrap.b32 	%r10380, %r10379, %r10378, 19;
	shf.r.wrap.b32 	%r10381, %r10378, %r10379, 19;
	mov.b64 	%rd2269, {%r10381, %r10380};
	shf.l.wrap.b32 	%r10382, %r10378, %r10379, 3;
	shf.l.wrap.b32 	%r10383, %r10379, %r10378, 3;
	mov.b64 	%rd2270, {%r10383, %r10382};
	shr.u64 	%rd2271, %rd2255, 6;
	xor.b64  	%rd2272, %rd2269, %rd2271;
	xor.b64  	%rd2273, %rd2272, %rd2270;
	shf.r.wrap.b32 	%r10384, %r9993, %r9992, 1;
	shf.r.wrap.b32 	%r10385, %r9992, %r9993, 1;
	mov.b64 	%rd2274, {%r10385, %r10384};
	shf.r.wrap.b32 	%r10386, %r9993, %r9992, 8;
	shf.r.wrap.b32 	%r10387, %r9992, %r9993, 8;
	mov.b64 	%rd2275, {%r10387, %r10386};
	shr.u64 	%rd2276, %rd1702, 7;
	xor.b64  	%rd2277, %rd2274, %rd2276;
	xor.b64  	%rd2278, %rd2277, %rd2275;
	add.s64 	%rd2279, %rd1689, %rd1806;
	add.s64 	%rd2280, %rd2279, %rd2273;
	add.s64 	%rd2281, %rd2280, %rd2278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10388,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10389}, %rd2268;
	}
	shf.r.wrap.b32 	%r10390, %r10389, %r10388, 19;
	shf.r.wrap.b32 	%r10391, %r10388, %r10389, 19;
	mov.b64 	%rd2282, {%r10391, %r10390};
	shf.l.wrap.b32 	%r10392, %r10388, %r10389, 3;
	shf.l.wrap.b32 	%r10393, %r10389, %r10388, 3;
	mov.b64 	%rd2283, {%r10393, %r10392};
	shr.u64 	%rd2284, %rd2268, 6;
	xor.b64  	%rd2285, %rd2282, %rd2284;
	xor.b64  	%rd2286, %rd2285, %rd2283;
	shf.r.wrap.b32 	%r10394, %r10003, %r10002, 1;
	shf.r.wrap.b32 	%r10395, %r10002, %r10003, 1;
	mov.b64 	%rd2287, {%r10395, %r10394};
	shf.r.wrap.b32 	%r10396, %r10003, %r10002, 8;
	shf.r.wrap.b32 	%r10397, %r10002, %r10003, 8;
	mov.b64 	%rd2288, {%r10397, %r10396};
	shr.u64 	%rd2289, %rd1715, 7;
	xor.b64  	%rd2290, %rd2287, %rd2289;
	xor.b64  	%rd2291, %rd2290, %rd2288;
	add.s64 	%rd2292, %rd1702, %rd1819;
	add.s64 	%rd2293, %rd2292, %rd2286;
	add.s64 	%rd2294, %rd2293, %rd2291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10398,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10399}, %rd2281;
	}
	shf.r.wrap.b32 	%r10400, %r10399, %r10398, 19;
	shf.r.wrap.b32 	%r10401, %r10398, %r10399, 19;
	mov.b64 	%rd2295, {%r10401, %r10400};
	shf.l.wrap.b32 	%r10402, %r10398, %r10399, 3;
	shf.l.wrap.b32 	%r10403, %r10399, %r10398, 3;
	mov.b64 	%rd2296, {%r10403, %r10402};
	shr.u64 	%rd2297, %rd2281, 6;
	xor.b64  	%rd2298, %rd2295, %rd2297;
	xor.b64  	%rd2299, %rd2298, %rd2296;
	shf.r.wrap.b32 	%r10404, %r10013, %r10012, 1;
	shf.r.wrap.b32 	%r10405, %r10012, %r10013, 1;
	mov.b64 	%rd2300, {%r10405, %r10404};
	shf.r.wrap.b32 	%r10406, %r10013, %r10012, 8;
	shf.r.wrap.b32 	%r10407, %r10012, %r10013, 8;
	mov.b64 	%rd2301, {%r10407, %r10406};
	shr.u64 	%rd2302, %rd1728, 7;
	xor.b64  	%rd2303, %rd2300, %rd2302;
	xor.b64  	%rd2304, %rd2303, %rd2301;
	add.s64 	%rd2305, %rd1715, %rd1832;
	add.s64 	%rd2306, %rd2305, %rd2299;
	add.s64 	%rd2307, %rd2306, %rd2304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10408,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10409}, %rd2294;
	}
	shf.r.wrap.b32 	%r10410, %r10409, %r10408, 19;
	shf.r.wrap.b32 	%r10411, %r10408, %r10409, 19;
	mov.b64 	%rd2308, {%r10411, %r10410};
	shf.l.wrap.b32 	%r10412, %r10408, %r10409, 3;
	shf.l.wrap.b32 	%r10413, %r10409, %r10408, 3;
	mov.b64 	%rd2309, {%r10413, %r10412};
	shr.u64 	%rd2310, %rd2294, 6;
	xor.b64  	%rd2311, %rd2308, %rd2310;
	xor.b64  	%rd2312, %rd2311, %rd2309;
	shf.r.wrap.b32 	%r10414, %r10023, %r10022, 1;
	shf.r.wrap.b32 	%r10415, %r10022, %r10023, 1;
	mov.b64 	%rd2313, {%r10415, %r10414};
	shf.r.wrap.b32 	%r10416, %r10023, %r10022, 8;
	shf.r.wrap.b32 	%r10417, %r10022, %r10023, 8;
	mov.b64 	%rd2314, {%r10417, %r10416};
	shr.u64 	%rd2315, %rd1741, 7;
	xor.b64  	%rd2316, %rd2313, %rd2315;
	xor.b64  	%rd2317, %rd2316, %rd2314;
	add.s64 	%rd2318, %rd1728, %rd1845;
	add.s64 	%rd2319, %rd2318, %rd2312;
	add.s64 	%rd2320, %rd2319, %rd2317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10418,%dummy}, %rd2307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10419}, %rd2307;
	}
	shf.r.wrap.b32 	%r10420, %r10419, %r10418, 19;
	shf.r.wrap.b32 	%r10421, %r10418, %r10419, 19;
	mov.b64 	%rd2321, {%r10421, %r10420};
	shf.l.wrap.b32 	%r10422, %r10418, %r10419, 3;
	shf.l.wrap.b32 	%r10423, %r10419, %r10418, 3;
	mov.b64 	%rd2322, {%r10423, %r10422};
	shr.u64 	%rd2323, %rd2307, 6;
	xor.b64  	%rd2324, %rd2321, %rd2323;
	xor.b64  	%rd2325, %rd2324, %rd2322;
	shf.r.wrap.b32 	%r10424, %r10033, %r10032, 1;
	shf.r.wrap.b32 	%r10425, %r10032, %r10033, 1;
	mov.b64 	%rd2326, {%r10425, %r10424};
	shf.r.wrap.b32 	%r10426, %r10033, %r10032, 8;
	shf.r.wrap.b32 	%r10427, %r10032, %r10033, 8;
	mov.b64 	%rd2327, {%r10427, %r10426};
	shr.u64 	%rd2328, %rd1754, 7;
	xor.b64  	%rd2329, %rd2326, %rd2328;
	xor.b64  	%rd2330, %rd2329, %rd2327;
	add.s64 	%rd2331, %rd2242, %rd1741;
	add.s64 	%rd2332, %rd2331, %rd2325;
	add.s64 	%rd2333, %rd2332, %rd2330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10428,%dummy}, %rd2320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10429}, %rd2320;
	}
	shf.r.wrap.b32 	%r10430, %r10429, %r10428, 19;
	shf.r.wrap.b32 	%r10431, %r10428, %r10429, 19;
	mov.b64 	%rd2334, {%r10431, %r10430};
	shf.l.wrap.b32 	%r10432, %r10428, %r10429, 3;
	shf.l.wrap.b32 	%r10433, %r10429, %r10428, 3;
	mov.b64 	%rd2335, {%r10433, %r10432};
	shr.u64 	%rd2336, %rd2320, 6;
	xor.b64  	%rd2337, %rd2334, %rd2336;
	xor.b64  	%rd2338, %rd2337, %rd2335;
	shf.r.wrap.b32 	%r10434, %r10043, %r10042, 1;
	shf.r.wrap.b32 	%r10435, %r10042, %r10043, 1;
	mov.b64 	%rd2339, {%r10435, %r10434};
	shf.r.wrap.b32 	%r10436, %r10043, %r10042, 8;
	shf.r.wrap.b32 	%r10437, %r10042, %r10043, 8;
	mov.b64 	%rd2340, {%r10437, %r10436};
	shr.u64 	%rd2341, %rd1767, 7;
	xor.b64  	%rd2342, %rd2339, %rd2341;
	xor.b64  	%rd2343, %rd2342, %rd2340;
	add.s64 	%rd2344, %rd2255, %rd1754;
	add.s64 	%rd2345, %rd2344, %rd2338;
	add.s64 	%rd2346, %rd2345, %rd2343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10438,%dummy}, %rd2333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10439}, %rd2333;
	}
	shf.r.wrap.b32 	%r10440, %r10439, %r10438, 19;
	shf.r.wrap.b32 	%r10441, %r10438, %r10439, 19;
	mov.b64 	%rd2347, {%r10441, %r10440};
	shf.l.wrap.b32 	%r10442, %r10438, %r10439, 3;
	shf.l.wrap.b32 	%r10443, %r10439, %r10438, 3;
	mov.b64 	%rd2348, {%r10443, %r10442};
	shr.u64 	%rd2349, %rd2333, 6;
	xor.b64  	%rd2350, %rd2347, %rd2349;
	xor.b64  	%rd2351, %rd2350, %rd2348;
	shf.r.wrap.b32 	%r10444, %r10053, %r10052, 1;
	shf.r.wrap.b32 	%r10445, %r10052, %r10053, 1;
	mov.b64 	%rd2352, {%r10445, %r10444};
	shf.r.wrap.b32 	%r10446, %r10053, %r10052, 8;
	shf.r.wrap.b32 	%r10447, %r10052, %r10053, 8;
	mov.b64 	%rd2353, {%r10447, %r10446};
	shr.u64 	%rd2354, %rd1780, 7;
	xor.b64  	%rd2355, %rd2352, %rd2354;
	xor.b64  	%rd2356, %rd2355, %rd2353;
	add.s64 	%rd2357, %rd2268, %rd1767;
	add.s64 	%rd2358, %rd2357, %rd2351;
	add.s64 	%rd2359, %rd2358, %rd2356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10448,%dummy}, %rd2346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10449}, %rd2346;
	}
	shf.r.wrap.b32 	%r10450, %r10449, %r10448, 19;
	shf.r.wrap.b32 	%r10451, %r10448, %r10449, 19;
	mov.b64 	%rd2360, {%r10451, %r10450};
	shf.l.wrap.b32 	%r10452, %r10448, %r10449, 3;
	shf.l.wrap.b32 	%r10453, %r10449, %r10448, 3;
	mov.b64 	%rd2361, {%r10453, %r10452};
	shr.u64 	%rd2362, %rd2346, 6;
	xor.b64  	%rd2363, %rd2360, %rd2362;
	xor.b64  	%rd2364, %rd2363, %rd2361;
	shf.r.wrap.b32 	%r10454, %r10063, %r10062, 1;
	shf.r.wrap.b32 	%r10455, %r10062, %r10063, 1;
	mov.b64 	%rd2365, {%r10455, %r10454};
	shf.r.wrap.b32 	%r10456, %r10063, %r10062, 8;
	shf.r.wrap.b32 	%r10457, %r10062, %r10063, 8;
	mov.b64 	%rd2366, {%r10457, %r10456};
	shr.u64 	%rd2367, %rd1793, 7;
	xor.b64  	%rd2368, %rd2365, %rd2367;
	xor.b64  	%rd2369, %rd2368, %rd2366;
	add.s64 	%rd2370, %rd2281, %rd1780;
	add.s64 	%rd2371, %rd2370, %rd2364;
	add.s64 	%rd2372, %rd2371, %rd2369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10458,%dummy}, %rd2359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10459}, %rd2359;
	}
	shf.r.wrap.b32 	%r10460, %r10459, %r10458, 19;
	shf.r.wrap.b32 	%r10461, %r10458, %r10459, 19;
	mov.b64 	%rd2373, {%r10461, %r10460};
	shf.l.wrap.b32 	%r10462, %r10458, %r10459, 3;
	shf.l.wrap.b32 	%r10463, %r10459, %r10458, 3;
	mov.b64 	%rd2374, {%r10463, %r10462};
	shr.u64 	%rd2375, %rd2359, 6;
	xor.b64  	%rd2376, %rd2373, %rd2375;
	xor.b64  	%rd2377, %rd2376, %rd2374;
	shf.r.wrap.b32 	%r10464, %r10073, %r10072, 1;
	shf.r.wrap.b32 	%r10465, %r10072, %r10073, 1;
	mov.b64 	%rd2378, {%r10465, %r10464};
	shf.r.wrap.b32 	%r10466, %r10073, %r10072, 8;
	shf.r.wrap.b32 	%r10467, %r10072, %r10073, 8;
	mov.b64 	%rd2379, {%r10467, %r10466};
	shr.u64 	%rd2380, %rd1806, 7;
	xor.b64  	%rd2381, %rd2378, %rd2380;
	xor.b64  	%rd2382, %rd2381, %rd2379;
	add.s64 	%rd2383, %rd2294, %rd1793;
	add.s64 	%rd2384, %rd2383, %rd2377;
	add.s64 	%rd2385, %rd2384, %rd2382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10468,%dummy}, %rd2372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10469}, %rd2372;
	}
	shf.r.wrap.b32 	%r10470, %r10469, %r10468, 19;
	shf.r.wrap.b32 	%r10471, %r10468, %r10469, 19;
	mov.b64 	%rd2386, {%r10471, %r10470};
	shf.l.wrap.b32 	%r10472, %r10468, %r10469, 3;
	shf.l.wrap.b32 	%r10473, %r10469, %r10468, 3;
	mov.b64 	%rd2387, {%r10473, %r10472};
	shr.u64 	%rd2388, %rd2372, 6;
	xor.b64  	%rd2389, %rd2386, %rd2388;
	xor.b64  	%rd2390, %rd2389, %rd2387;
	shf.r.wrap.b32 	%r10474, %r10083, %r10082, 1;
	shf.r.wrap.b32 	%r10475, %r10082, %r10083, 1;
	mov.b64 	%rd2391, {%r10475, %r10474};
	shf.r.wrap.b32 	%r10476, %r10083, %r10082, 8;
	shf.r.wrap.b32 	%r10477, %r10082, %r10083, 8;
	mov.b64 	%rd2392, {%r10477, %r10476};
	shr.u64 	%rd2393, %rd1819, 7;
	xor.b64  	%rd2394, %rd2391, %rd2393;
	xor.b64  	%rd2395, %rd2394, %rd2392;
	add.s64 	%rd2396, %rd2307, %rd1806;
	add.s64 	%rd2397, %rd2396, %rd2390;
	add.s64 	%rd2398, %rd2397, %rd2395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10478,%dummy}, %rd2218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10479}, %rd2218;
	}
	shf.r.wrap.b32 	%r10480, %r10479, %r10478, 14;
	shf.r.wrap.b32 	%r10481, %r10478, %r10479, 14;
	mov.b64 	%rd2399, {%r10481, %r10480};
	shf.r.wrap.b32 	%r10482, %r10479, %r10478, 18;
	shf.r.wrap.b32 	%r10483, %r10478, %r10479, 18;
	mov.b64 	%rd2400, {%r10483, %r10482};
	xor.b64  	%rd2401, %rd2400, %rd2399;
	shf.l.wrap.b32 	%r10484, %r10478, %r10479, 23;
	shf.l.wrap.b32 	%r10485, %r10479, %r10478, 23;
	mov.b64 	%rd2402, {%r10485, %r10484};
	xor.b64  	%rd2403, %rd2401, %rd2402;
	xor.b64  	%rd2404, %rd2170, %rd2194;
	and.b64  	%rd2405, %rd2404, %rd2218;
	xor.b64  	%rd2406, %rd2405, %rd2170;
	add.s64 	%rd2407, %rd2406, %rd2146;
	add.s64 	%rd2408, %rd2407, %rd2242;
	add.s64 	%rd2409, %rd2408, %rd2801;
	add.s64 	%rd2410, %rd2409, %rd2403;
	add.s64 	%rd2411, %rd2410, %rd2157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10486,%dummy}, %rd2229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10487}, %rd2229;
	}
	shf.r.wrap.b32 	%r10488, %r10487, %r10486, 28;
	shf.r.wrap.b32 	%r10489, %r10486, %r10487, 28;
	mov.b64 	%rd2412, {%r10489, %r10488};
	shf.l.wrap.b32 	%r10490, %r10486, %r10487, 30;
	shf.l.wrap.b32 	%r10491, %r10487, %r10486, 30;
	mov.b64 	%rd2413, {%r10491, %r10490};
	xor.b64  	%rd2414, %rd2413, %rd2412;
	shf.l.wrap.b32 	%r10492, %r10486, %r10487, 25;
	shf.l.wrap.b32 	%r10493, %r10487, %r10486, 25;
	mov.b64 	%rd2415, {%r10493, %r10492};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	xor.b64  	%rd2417, %rd2229, %rd2181;
	xor.b64  	%rd2418, %rd2229, %rd2205;
	and.b64  	%rd2419, %rd2418, %rd2417;
	xor.b64  	%rd2420, %rd2419, %rd2229;
	add.s64 	%rd2421, %rd2410, %rd2420;
	add.s64 	%rd2422, %rd2421, %rd2416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10494,%dummy}, %rd2411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10495}, %rd2411;
	}
	shf.r.wrap.b32 	%r10496, %r10495, %r10494, 14;
	shf.r.wrap.b32 	%r10497, %r10494, %r10495, 14;
	mov.b64 	%rd2423, {%r10497, %r10496};
	shf.r.wrap.b32 	%r10498, %r10495, %r10494, 18;
	shf.r.wrap.b32 	%r10499, %r10494, %r10495, 18;
	mov.b64 	%rd2424, {%r10499, %r10498};
	xor.b64  	%rd2425, %rd2424, %rd2423;
	shf.l.wrap.b32 	%r10500, %r10494, %r10495, 23;
	shf.l.wrap.b32 	%r10501, %r10495, %r10494, 23;
	mov.b64 	%rd2426, {%r10501, %r10500};
	xor.b64  	%rd2427, %rd2425, %rd2426;
	xor.b64  	%rd2428, %rd2194, %rd2218;
	and.b64  	%rd2429, %rd2411, %rd2428;
	xor.b64  	%rd2430, %rd2429, %rd2194;
	add.s64 	%rd2431, %rd2255, %rd2170;
	add.s64 	%rd2432, %rd2431, %rd2802;
	add.s64 	%rd2433, %rd2432, %rd2430;
	add.s64 	%rd2434, %rd2433, %rd2427;
	add.s64 	%rd2435, %rd2434, %rd2181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10502,%dummy}, %rd2422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10503}, %rd2422;
	}
	shf.r.wrap.b32 	%r10504, %r10503, %r10502, 28;
	shf.r.wrap.b32 	%r10505, %r10502, %r10503, 28;
	mov.b64 	%rd2436, {%r10505, %r10504};
	shf.l.wrap.b32 	%r10506, %r10502, %r10503, 30;
	shf.l.wrap.b32 	%r10507, %r10503, %r10502, 30;
	mov.b64 	%rd2437, {%r10507, %r10506};
	xor.b64  	%rd2438, %rd2437, %rd2436;
	shf.l.wrap.b32 	%r10508, %r10502, %r10503, 25;
	shf.l.wrap.b32 	%r10509, %r10503, %r10502, 25;
	mov.b64 	%rd2439, {%r10509, %r10508};
	xor.b64  	%rd2440, %rd2438, %rd2439;
	xor.b64  	%rd2441, %rd2422, %rd2205;
	xor.b64  	%rd2442, %rd2422, %rd2229;
	and.b64  	%rd2443, %rd2442, %rd2441;
	xor.b64  	%rd2444, %rd2443, %rd2422;
	add.s64 	%rd2445, %rd2434, %rd2444;
	add.s64 	%rd2446, %rd2445, %rd2440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10510,%dummy}, %rd2435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10511}, %rd2435;
	}
	shf.r.wrap.b32 	%r10512, %r10511, %r10510, 14;
	shf.r.wrap.b32 	%r10513, %r10510, %r10511, 14;
	mov.b64 	%rd2447, {%r10513, %r10512};
	shf.r.wrap.b32 	%r10514, %r10511, %r10510, 18;
	shf.r.wrap.b32 	%r10515, %r10510, %r10511, 18;
	mov.b64 	%rd2448, {%r10515, %r10514};
	xor.b64  	%rd2449, %rd2448, %rd2447;
	shf.l.wrap.b32 	%r10516, %r10510, %r10511, 23;
	shf.l.wrap.b32 	%r10517, %r10511, %r10510, 23;
	mov.b64 	%rd2450, {%r10517, %r10516};
	xor.b64  	%rd2451, %rd2449, %rd2450;
	xor.b64  	%rd2452, %rd2411, %rd2218;
	and.b64  	%rd2453, %rd2435, %rd2452;
	xor.b64  	%rd2454, %rd2453, %rd2218;
	add.s64 	%rd2455, %rd2268, %rd2194;
	add.s64 	%rd2456, %rd2455, %rd2803;
	add.s64 	%rd2457, %rd2456, %rd2454;
	add.s64 	%rd2458, %rd2457, %rd2451;
	add.s64 	%rd2459, %rd2458, %rd2205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10518,%dummy}, %rd2446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10519}, %rd2446;
	}
	shf.r.wrap.b32 	%r10520, %r10519, %r10518, 28;
	shf.r.wrap.b32 	%r10521, %r10518, %r10519, 28;
	mov.b64 	%rd2460, {%r10521, %r10520};
	shf.l.wrap.b32 	%r10522, %r10518, %r10519, 30;
	shf.l.wrap.b32 	%r10523, %r10519, %r10518, 30;
	mov.b64 	%rd2461, {%r10523, %r10522};
	xor.b64  	%rd2462, %rd2461, %rd2460;
	shf.l.wrap.b32 	%r10524, %r10518, %r10519, 25;
	shf.l.wrap.b32 	%r10525, %r10519, %r10518, 25;
	mov.b64 	%rd2463, {%r10525, %r10524};
	xor.b64  	%rd2464, %rd2462, %rd2463;
	xor.b64  	%rd2465, %rd2446, %rd2229;
	xor.b64  	%rd2466, %rd2446, %rd2422;
	and.b64  	%rd2467, %rd2466, %rd2465;
	xor.b64  	%rd2468, %rd2467, %rd2446;
	add.s64 	%rd2469, %rd2458, %rd2468;
	add.s64 	%rd2470, %rd2469, %rd2464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10526,%dummy}, %rd2459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10527}, %rd2459;
	}
	shf.r.wrap.b32 	%r10528, %r10527, %r10526, 14;
	shf.r.wrap.b32 	%r10529, %r10526, %r10527, 14;
	mov.b64 	%rd2471, {%r10529, %r10528};
	shf.r.wrap.b32 	%r10530, %r10527, %r10526, 18;
	shf.r.wrap.b32 	%r10531, %r10526, %r10527, 18;
	mov.b64 	%rd2472, {%r10531, %r10530};
	xor.b64  	%rd2473, %rd2472, %rd2471;
	shf.l.wrap.b32 	%r10532, %r10526, %r10527, 23;
	shf.l.wrap.b32 	%r10533, %r10527, %r10526, 23;
	mov.b64 	%rd2474, {%r10533, %r10532};
	xor.b64  	%rd2475, %rd2473, %rd2474;
	xor.b64  	%rd2476, %rd2435, %rd2411;
	and.b64  	%rd2477, %rd2459, %rd2476;
	xor.b64  	%rd2478, %rd2477, %rd2411;
	add.s64 	%rd2479, %rd2281, %rd2218;
	add.s64 	%rd2480, %rd2479, %rd2804;
	add.s64 	%rd2481, %rd2480, %rd2478;
	add.s64 	%rd2482, %rd2481, %rd2475;
	add.s64 	%rd2483, %rd2482, %rd2229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10534,%dummy}, %rd2470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10535}, %rd2470;
	}
	shf.r.wrap.b32 	%r10536, %r10535, %r10534, 28;
	shf.r.wrap.b32 	%r10537, %r10534, %r10535, 28;
	mov.b64 	%rd2484, {%r10537, %r10536};
	shf.l.wrap.b32 	%r10538, %r10534, %r10535, 30;
	shf.l.wrap.b32 	%r10539, %r10535, %r10534, 30;
	mov.b64 	%rd2485, {%r10539, %r10538};
	xor.b64  	%rd2486, %rd2485, %rd2484;
	shf.l.wrap.b32 	%r10540, %r10534, %r10535, 25;
	shf.l.wrap.b32 	%r10541, %r10535, %r10534, 25;
	mov.b64 	%rd2487, {%r10541, %r10540};
	xor.b64  	%rd2488, %rd2486, %rd2487;
	xor.b64  	%rd2489, %rd2470, %rd2422;
	xor.b64  	%rd2490, %rd2470, %rd2446;
	and.b64  	%rd2491, %rd2490, %rd2489;
	xor.b64  	%rd2492, %rd2491, %rd2470;
	add.s64 	%rd2493, %rd2482, %rd2492;
	add.s64 	%rd2494, %rd2493, %rd2488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10542,%dummy}, %rd2483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10543}, %rd2483;
	}
	shf.r.wrap.b32 	%r10544, %r10543, %r10542, 14;
	shf.r.wrap.b32 	%r10545, %r10542, %r10543, 14;
	mov.b64 	%rd2495, {%r10545, %r10544};
	shf.r.wrap.b32 	%r10546, %r10543, %r10542, 18;
	shf.r.wrap.b32 	%r10547, %r10542, %r10543, 18;
	mov.b64 	%rd2496, {%r10547, %r10546};
	xor.b64  	%rd2497, %rd2496, %rd2495;
	shf.l.wrap.b32 	%r10548, %r10542, %r10543, 23;
	shf.l.wrap.b32 	%r10549, %r10543, %r10542, 23;
	mov.b64 	%rd2498, {%r10549, %r10548};
	xor.b64  	%rd2499, %rd2497, %rd2498;
	xor.b64  	%rd2500, %rd2459, %rd2435;
	and.b64  	%rd2501, %rd2483, %rd2500;
	xor.b64  	%rd2502, %rd2501, %rd2435;
	add.s64 	%rd2503, %rd2411, %rd2294;
	add.s64 	%rd2504, %rd2503, %rd2805;
	add.s64 	%rd2505, %rd2504, %rd2502;
	add.s64 	%rd2506, %rd2505, %rd2499;
	add.s64 	%rd2507, %rd2506, %rd2422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10550,%dummy}, %rd2494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10551}, %rd2494;
	}
	shf.r.wrap.b32 	%r10552, %r10551, %r10550, 28;
	shf.r.wrap.b32 	%r10553, %r10550, %r10551, 28;
	mov.b64 	%rd2508, {%r10553, %r10552};
	shf.l.wrap.b32 	%r10554, %r10550, %r10551, 30;
	shf.l.wrap.b32 	%r10555, %r10551, %r10550, 30;
	mov.b64 	%rd2509, {%r10555, %r10554};
	xor.b64  	%rd2510, %rd2509, %rd2508;
	shf.l.wrap.b32 	%r10556, %r10550, %r10551, 25;
	shf.l.wrap.b32 	%r10557, %r10551, %r10550, 25;
	mov.b64 	%rd2511, {%r10557, %r10556};
	xor.b64  	%rd2512, %rd2510, %rd2511;
	xor.b64  	%rd2513, %rd2494, %rd2446;
	xor.b64  	%rd2514, %rd2494, %rd2470;
	and.b64  	%rd2515, %rd2514, %rd2513;
	xor.b64  	%rd2516, %rd2515, %rd2494;
	add.s64 	%rd2517, %rd2506, %rd2516;
	add.s64 	%rd2518, %rd2517, %rd2512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10558,%dummy}, %rd2507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10559}, %rd2507;
	}
	shf.r.wrap.b32 	%r10560, %r10559, %r10558, 14;
	shf.r.wrap.b32 	%r10561, %r10558, %r10559, 14;
	mov.b64 	%rd2519, {%r10561, %r10560};
	shf.r.wrap.b32 	%r10562, %r10559, %r10558, 18;
	shf.r.wrap.b32 	%r10563, %r10558, %r10559, 18;
	mov.b64 	%rd2520, {%r10563, %r10562};
	xor.b64  	%rd2521, %rd2520, %rd2519;
	shf.l.wrap.b32 	%r10564, %r10558, %r10559, 23;
	shf.l.wrap.b32 	%r10565, %r10559, %r10558, 23;
	mov.b64 	%rd2522, {%r10565, %r10564};
	xor.b64  	%rd2523, %rd2521, %rd2522;
	xor.b64  	%rd2524, %rd2483, %rd2459;
	and.b64  	%rd2525, %rd2507, %rd2524;
	xor.b64  	%rd2526, %rd2525, %rd2459;
	add.s64 	%rd2527, %rd2435, %rd2307;
	add.s64 	%rd2528, %rd2527, %rd2806;
	add.s64 	%rd2529, %rd2528, %rd2526;
	add.s64 	%rd2530, %rd2529, %rd2523;
	add.s64 	%rd2531, %rd2530, %rd2446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10566,%dummy}, %rd2518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10567}, %rd2518;
	}
	shf.r.wrap.b32 	%r10568, %r10567, %r10566, 28;
	shf.r.wrap.b32 	%r10569, %r10566, %r10567, 28;
	mov.b64 	%rd2532, {%r10569, %r10568};
	shf.l.wrap.b32 	%r10570, %r10566, %r10567, 30;
	shf.l.wrap.b32 	%r10571, %r10567, %r10566, 30;
	mov.b64 	%rd2533, {%r10571, %r10570};
	xor.b64  	%rd2534, %rd2533, %rd2532;
	shf.l.wrap.b32 	%r10572, %r10566, %r10567, 25;
	shf.l.wrap.b32 	%r10573, %r10567, %r10566, 25;
	mov.b64 	%rd2535, {%r10573, %r10572};
	xor.b64  	%rd2536, %rd2534, %rd2535;
	xor.b64  	%rd2537, %rd2518, %rd2470;
	xor.b64  	%rd2538, %rd2518, %rd2494;
	and.b64  	%rd2539, %rd2538, %rd2537;
	xor.b64  	%rd2540, %rd2539, %rd2518;
	add.s64 	%rd2541, %rd2530, %rd2540;
	add.s64 	%rd2542, %rd2541, %rd2536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10574,%dummy}, %rd2531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10575}, %rd2531;
	}
	shf.r.wrap.b32 	%r10576, %r10575, %r10574, 14;
	shf.r.wrap.b32 	%r10577, %r10574, %r10575, 14;
	mov.b64 	%rd2543, {%r10577, %r10576};
	shf.r.wrap.b32 	%r10578, %r10575, %r10574, 18;
	shf.r.wrap.b32 	%r10579, %r10574, %r10575, 18;
	mov.b64 	%rd2544, {%r10579, %r10578};
	xor.b64  	%rd2545, %rd2544, %rd2543;
	shf.l.wrap.b32 	%r10580, %r10574, %r10575, 23;
	shf.l.wrap.b32 	%r10581, %r10575, %r10574, 23;
	mov.b64 	%rd2546, {%r10581, %r10580};
	xor.b64  	%rd2547, %rd2545, %rd2546;
	xor.b64  	%rd2548, %rd2507, %rd2483;
	and.b64  	%rd2549, %rd2531, %rd2548;
	xor.b64  	%rd2550, %rd2549, %rd2483;
	add.s64 	%rd2551, %rd2459, %rd2320;
	add.s64 	%rd2552, %rd2551, %rd2807;
	add.s64 	%rd2553, %rd2552, %rd2550;
	add.s64 	%rd2554, %rd2553, %rd2547;
	add.s64 	%rd2555, %rd2554, %rd2470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10582,%dummy}, %rd2542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10583}, %rd2542;
	}
	shf.r.wrap.b32 	%r10584, %r10583, %r10582, 28;
	shf.r.wrap.b32 	%r10585, %r10582, %r10583, 28;
	mov.b64 	%rd2556, {%r10585, %r10584};
	shf.l.wrap.b32 	%r10586, %r10582, %r10583, 30;
	shf.l.wrap.b32 	%r10587, %r10583, %r10582, 30;
	mov.b64 	%rd2557, {%r10587, %r10586};
	xor.b64  	%rd2558, %rd2557, %rd2556;
	shf.l.wrap.b32 	%r10588, %r10582, %r10583, 25;
	shf.l.wrap.b32 	%r10589, %r10583, %r10582, 25;
	mov.b64 	%rd2559, {%r10589, %r10588};
	xor.b64  	%rd2560, %rd2558, %rd2559;
	xor.b64  	%rd2561, %rd2542, %rd2494;
	xor.b64  	%rd2562, %rd2542, %rd2518;
	and.b64  	%rd2563, %rd2562, %rd2561;
	xor.b64  	%rd2564, %rd2563, %rd2542;
	add.s64 	%rd2565, %rd2554, %rd2564;
	add.s64 	%rd2566, %rd2565, %rd2560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10590,%dummy}, %rd2555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10591}, %rd2555;
	}
	shf.r.wrap.b32 	%r10592, %r10591, %r10590, 14;
	shf.r.wrap.b32 	%r10593, %r10590, %r10591, 14;
	mov.b64 	%rd2567, {%r10593, %r10592};
	shf.r.wrap.b32 	%r10594, %r10591, %r10590, 18;
	shf.r.wrap.b32 	%r10595, %r10590, %r10591, 18;
	mov.b64 	%rd2568, {%r10595, %r10594};
	xor.b64  	%rd2569, %rd2568, %rd2567;
	shf.l.wrap.b32 	%r10596, %r10590, %r10591, 23;
	shf.l.wrap.b32 	%r10597, %r10591, %r10590, 23;
	mov.b64 	%rd2570, {%r10597, %r10596};
	xor.b64  	%rd2571, %rd2569, %rd2570;
	xor.b64  	%rd2572, %rd2531, %rd2507;
	and.b64  	%rd2573, %rd2555, %rd2572;
	xor.b64  	%rd2574, %rd2573, %rd2507;
	add.s64 	%rd2575, %rd2483, %rd2333;
	add.s64 	%rd2576, %rd2575, %rd2808;
	add.s64 	%rd2577, %rd2576, %rd2574;
	add.s64 	%rd2578, %rd2577, %rd2571;
	add.s64 	%rd2579, %rd2578, %rd2494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10598,%dummy}, %rd2566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10599}, %rd2566;
	}
	shf.r.wrap.b32 	%r10600, %r10599, %r10598, 28;
	shf.r.wrap.b32 	%r10601, %r10598, %r10599, 28;
	mov.b64 	%rd2580, {%r10601, %r10600};
	shf.l.wrap.b32 	%r10602, %r10598, %r10599, 30;
	shf.l.wrap.b32 	%r10603, %r10599, %r10598, 30;
	mov.b64 	%rd2581, {%r10603, %r10602};
	xor.b64  	%rd2582, %rd2581, %rd2580;
	shf.l.wrap.b32 	%r10604, %r10598, %r10599, 25;
	shf.l.wrap.b32 	%r10605, %r10599, %r10598, 25;
	mov.b64 	%rd2583, {%r10605, %r10604};
	xor.b64  	%rd2584, %rd2582, %rd2583;
	xor.b64  	%rd2585, %rd2566, %rd2518;
	xor.b64  	%rd2586, %rd2566, %rd2542;
	and.b64  	%rd2587, %rd2586, %rd2585;
	xor.b64  	%rd2588, %rd2587, %rd2566;
	add.s64 	%rd2589, %rd2578, %rd2588;
	add.s64 	%rd2590, %rd2589, %rd2584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10606,%dummy}, %rd2579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10607}, %rd2579;
	}
	shf.r.wrap.b32 	%r10608, %r10607, %r10606, 14;
	shf.r.wrap.b32 	%r10609, %r10606, %r10607, 14;
	mov.b64 	%rd2591, {%r10609, %r10608};
	shf.r.wrap.b32 	%r10610, %r10607, %r10606, 18;
	shf.r.wrap.b32 	%r10611, %r10606, %r10607, 18;
	mov.b64 	%rd2592, {%r10611, %r10610};
	xor.b64  	%rd2593, %rd2592, %rd2591;
	shf.l.wrap.b32 	%r10612, %r10606, %r10607, 23;
	shf.l.wrap.b32 	%r10613, %r10607, %r10606, 23;
	mov.b64 	%rd2594, {%r10613, %r10612};
	xor.b64  	%rd2595, %rd2593, %rd2594;
	xor.b64  	%rd2596, %rd2555, %rd2531;
	and.b64  	%rd2597, %rd2579, %rd2596;
	xor.b64  	%rd2598, %rd2597, %rd2531;
	add.s64 	%rd2599, %rd2507, %rd2346;
	add.s64 	%rd2600, %rd2599, %rd2809;
	add.s64 	%rd2601, %rd2600, %rd2598;
	add.s64 	%rd2602, %rd2601, %rd2595;
	add.s64 	%rd2603, %rd2602, %rd2518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10614,%dummy}, %rd2590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10615}, %rd2590;
	}
	shf.r.wrap.b32 	%r10616, %r10615, %r10614, 28;
	shf.r.wrap.b32 	%r10617, %r10614, %r10615, 28;
	mov.b64 	%rd2604, {%r10617, %r10616};
	shf.l.wrap.b32 	%r10618, %r10614, %r10615, 30;
	shf.l.wrap.b32 	%r10619, %r10615, %r10614, 30;
	mov.b64 	%rd2605, {%r10619, %r10618};
	xor.b64  	%rd2606, %rd2605, %rd2604;
	shf.l.wrap.b32 	%r10620, %r10614, %r10615, 25;
	shf.l.wrap.b32 	%r10621, %r10615, %r10614, 25;
	mov.b64 	%rd2607, {%r10621, %r10620};
	xor.b64  	%rd2608, %rd2606, %rd2607;
	xor.b64  	%rd2609, %rd2590, %rd2542;
	xor.b64  	%rd2610, %rd2590, %rd2566;
	and.b64  	%rd2611, %rd2610, %rd2609;
	xor.b64  	%rd2612, %rd2611, %rd2590;
	add.s64 	%rd2613, %rd2602, %rd2612;
	add.s64 	%rd2614, %rd2613, %rd2608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10622,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10623}, %rd2603;
	}
	shf.r.wrap.b32 	%r10624, %r10623, %r10622, 14;
	shf.r.wrap.b32 	%r10625, %r10622, %r10623, 14;
	mov.b64 	%rd2615, {%r10625, %r10624};
	shf.r.wrap.b32 	%r10626, %r10623, %r10622, 18;
	shf.r.wrap.b32 	%r10627, %r10622, %r10623, 18;
	mov.b64 	%rd2616, {%r10627, %r10626};
	xor.b64  	%rd2617, %rd2616, %rd2615;
	shf.l.wrap.b32 	%r10628, %r10622, %r10623, 23;
	shf.l.wrap.b32 	%r10629, %r10623, %r10622, 23;
	mov.b64 	%rd2618, {%r10629, %r10628};
	xor.b64  	%rd2619, %rd2617, %rd2618;
	xor.b64  	%rd2620, %rd2579, %rd2555;
	and.b64  	%rd2621, %rd2603, %rd2620;
	xor.b64  	%rd2622, %rd2621, %rd2555;
	add.s64 	%rd2623, %rd2531, %rd2359;
	add.s64 	%rd2624, %rd2623, %rd2810;
	add.s64 	%rd2625, %rd2624, %rd2622;
	add.s64 	%rd2626, %rd2625, %rd2619;
	add.s64 	%rd2627, %rd2626, %rd2542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10630,%dummy}, %rd2614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10631}, %rd2614;
	}
	shf.r.wrap.b32 	%r10632, %r10631, %r10630, 28;
	shf.r.wrap.b32 	%r10633, %r10630, %r10631, 28;
	mov.b64 	%rd2628, {%r10633, %r10632};
	shf.l.wrap.b32 	%r10634, %r10630, %r10631, 30;
	shf.l.wrap.b32 	%r10635, %r10631, %r10630, 30;
	mov.b64 	%rd2629, {%r10635, %r10634};
	xor.b64  	%rd2630, %rd2629, %rd2628;
	shf.l.wrap.b32 	%r10636, %r10630, %r10631, 25;
	shf.l.wrap.b32 	%r10637, %r10631, %r10630, 25;
	mov.b64 	%rd2631, {%r10637, %r10636};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	xor.b64  	%rd2633, %rd2614, %rd2566;
	xor.b64  	%rd2634, %rd2614, %rd2590;
	and.b64  	%rd2635, %rd2634, %rd2633;
	xor.b64  	%rd2636, %rd2635, %rd2614;
	add.s64 	%rd2637, %rd2626, %rd2636;
	add.s64 	%rd2638, %rd2637, %rd2632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10638,%dummy}, %rd2627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10639}, %rd2627;
	}
	shf.r.wrap.b32 	%r10640, %r10639, %r10638, 14;
	shf.r.wrap.b32 	%r10641, %r10638, %r10639, 14;
	mov.b64 	%rd2639, {%r10641, %r10640};
	shf.r.wrap.b32 	%r10642, %r10639, %r10638, 18;
	shf.r.wrap.b32 	%r10643, %r10638, %r10639, 18;
	mov.b64 	%rd2640, {%r10643, %r10642};
	xor.b64  	%rd2641, %rd2640, %rd2639;
	shf.l.wrap.b32 	%r10644, %r10638, %r10639, 23;
	shf.l.wrap.b32 	%r10645, %r10639, %r10638, 23;
	mov.b64 	%rd2642, {%r10645, %r10644};
	xor.b64  	%rd2643, %rd2641, %rd2642;
	xor.b64  	%rd2644, %rd2603, %rd2579;
	and.b64  	%rd2645, %rd2627, %rd2644;
	xor.b64  	%rd2646, %rd2645, %rd2579;
	add.s64 	%rd2647, %rd2555, %rd2372;
	add.s64 	%rd2648, %rd2647, %rd2811;
	add.s64 	%rd2649, %rd2648, %rd2646;
	add.s64 	%rd2650, %rd2649, %rd2643;
	add.s64 	%rd2651, %rd2650, %rd2566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10646,%dummy}, %rd2638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10647}, %rd2638;
	}
	shf.r.wrap.b32 	%r10648, %r10647, %r10646, 28;
	shf.r.wrap.b32 	%r10649, %r10646, %r10647, 28;
	mov.b64 	%rd2652, {%r10649, %r10648};
	shf.l.wrap.b32 	%r10650, %r10646, %r10647, 30;
	shf.l.wrap.b32 	%r10651, %r10647, %r10646, 30;
	mov.b64 	%rd2653, {%r10651, %r10650};
	xor.b64  	%rd2654, %rd2653, %rd2652;
	shf.l.wrap.b32 	%r10652, %r10646, %r10647, 25;
	shf.l.wrap.b32 	%r10653, %r10647, %r10646, 25;
	mov.b64 	%rd2655, {%r10653, %r10652};
	xor.b64  	%rd2656, %rd2654, %rd2655;
	xor.b64  	%rd2657, %rd2638, %rd2590;
	xor.b64  	%rd2658, %rd2638, %rd2614;
	and.b64  	%rd2659, %rd2658, %rd2657;
	xor.b64  	%rd2660, %rd2659, %rd2638;
	add.s64 	%rd2661, %rd2650, %rd2660;
	add.s64 	%rd2662, %rd2661, %rd2656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10654,%dummy}, %rd2651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10655}, %rd2651;
	}
	shf.r.wrap.b32 	%r10656, %r10655, %r10654, 14;
	shf.r.wrap.b32 	%r10657, %r10654, %r10655, 14;
	mov.b64 	%rd2663, {%r10657, %r10656};
	shf.r.wrap.b32 	%r10658, %r10655, %r10654, 18;
	shf.r.wrap.b32 	%r10659, %r10654, %r10655, 18;
	mov.b64 	%rd2664, {%r10659, %r10658};
	xor.b64  	%rd2665, %rd2664, %rd2663;
	shf.l.wrap.b32 	%r10660, %r10654, %r10655, 23;
	shf.l.wrap.b32 	%r10661, %r10655, %r10654, 23;
	mov.b64 	%rd2666, {%r10661, %r10660};
	xor.b64  	%rd2667, %rd2665, %rd2666;
	xor.b64  	%rd2668, %rd2627, %rd2603;
	and.b64  	%rd2669, %rd2651, %rd2668;
	xor.b64  	%rd2670, %rd2669, %rd2603;
	add.s64 	%rd2671, %rd2579, %rd2385;
	add.s64 	%rd2672, %rd2671, %rd2820;
	add.s64 	%rd2673, %rd2672, %rd2670;
	add.s64 	%rd2674, %rd2673, %rd2667;
	add.s64 	%rd2675, %rd2674, %rd2590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10662,%dummy}, %rd2662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10663}, %rd2662;
	}
	shf.r.wrap.b32 	%r10664, %r10663, %r10662, 28;
	shf.r.wrap.b32 	%r10665, %r10662, %r10663, 28;
	mov.b64 	%rd2676, {%r10665, %r10664};
	shf.l.wrap.b32 	%r10666, %r10662, %r10663, 30;
	shf.l.wrap.b32 	%r10667, %r10663, %r10662, 30;
	mov.b64 	%rd2677, {%r10667, %r10666};
	xor.b64  	%rd2678, %rd2677, %rd2676;
	shf.l.wrap.b32 	%r10668, %r10662, %r10663, 25;
	shf.l.wrap.b32 	%r10669, %r10663, %r10662, 25;
	mov.b64 	%rd2679, {%r10669, %r10668};
	xor.b64  	%rd2680, %rd2678, %rd2679;
	xor.b64  	%rd2681, %rd2662, %rd2614;
	xor.b64  	%rd2682, %rd2662, %rd2638;
	and.b64  	%rd2683, %rd2682, %rd2681;
	xor.b64  	%rd2684, %rd2683, %rd2662;
	add.s64 	%rd2685, %rd2674, %rd2684;
	add.s64 	%rd2686, %rd2685, %rd2680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10670,%dummy}, %rd2675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10671}, %rd2675;
	}
	shf.r.wrap.b32 	%r10672, %r10671, %r10670, 14;
	shf.r.wrap.b32 	%r10673, %r10670, %r10671, 14;
	mov.b64 	%rd2687, {%r10673, %r10672};
	shf.r.wrap.b32 	%r10674, %r10671, %r10670, 18;
	shf.r.wrap.b32 	%r10675, %r10670, %r10671, 18;
	mov.b64 	%rd2688, {%r10675, %r10674};
	xor.b64  	%rd2689, %rd2688, %rd2687;
	shf.l.wrap.b32 	%r10676, %r10670, %r10671, 23;
	shf.l.wrap.b32 	%r10677, %r10671, %r10670, 23;
	mov.b64 	%rd2690, {%r10677, %r10676};
	xor.b64  	%rd2691, %rd2689, %rd2690;
	xor.b64  	%rd2692, %rd2651, %rd2627;
	and.b64  	%rd2693, %rd2675, %rd2692;
	xor.b64  	%rd2694, %rd2693, %rd2627;
	add.s64 	%rd2695, %rd2603, %rd2398;
	add.s64 	%rd2696, %rd2695, %rd2821;
	add.s64 	%rd2697, %rd2696, %rd2694;
	add.s64 	%rd2698, %rd2697, %rd2691;
	add.s64 	%rd2699, %rd2698, %rd2614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10678,%dummy}, %rd2686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10679}, %rd2686;
	}
	shf.r.wrap.b32 	%r10680, %r10679, %r10678, 28;
	shf.r.wrap.b32 	%r10681, %r10678, %r10679, 28;
	mov.b64 	%rd2700, {%r10681, %r10680};
	shf.l.wrap.b32 	%r10682, %r10678, %r10679, 30;
	shf.l.wrap.b32 	%r10683, %r10679, %r10678, 30;
	mov.b64 	%rd2701, {%r10683, %r10682};
	xor.b64  	%rd2702, %rd2701, %rd2700;
	shf.l.wrap.b32 	%r10684, %r10678, %r10679, 25;
	shf.l.wrap.b32 	%r10685, %r10679, %r10678, 25;
	mov.b64 	%rd2703, {%r10685, %r10684};
	xor.b64  	%rd2704, %rd2702, %rd2703;
	xor.b64  	%rd2705, %rd2686, %rd2638;
	xor.b64  	%rd2706, %rd2686, %rd2662;
	and.b64  	%rd2707, %rd2706, %rd2705;
	xor.b64  	%rd2708, %rd2707, %rd2686;
	add.s64 	%rd2709, %rd2698, %rd2708;
	add.s64 	%rd2710, %rd2709, %rd2704;
	cvt.u32.u64	%r1780, %rd2699;
	shr.u64 	%rd2711, %rd2699, 32;
	cvt.u32.u64	%r1781, %rd2711;
	cvt.u32.u64	%r1782, %rd2710;
	shr.u64 	%rd2712, %rd2710, 32;
	cvt.u32.u64	%r1783, %rd2712;
	and.b32  	%r10686, %r10754, 31;
	shr.u32 	%r10687, %r1780, %r10686;
	and.b32  	%r10688, %r10687, %r1804;
	mul.wide.u32 	%rd2713, %r10688, 4;
	add.s64 	%rd2714, %rd2822, %rd2713;
	and.b32  	%r10689, %r1780, 31;
	mov.u32 	%r10690, 1;
	shl.b32 	%r1784, %r10690, %r10689;
	ld.global.u32 	%r10691, [%rd2714];
	and.b32  	%r10692, %r10691, %r1784;
	setp.eq.s32	%p1039, %r10692, 0;
	@%p1039 bra 	BB1_1564;

	mov.u32 	%r10757, 1;
	ld.param.u32 	%r10756, [m01700_m04_param_25];
	and.b32  	%r10755, %r10756, 31;
	ld.param.u64 	%rd2812, [m01700_m04_param_7];
	shr.u32 	%r10694, %r1781, %r10755;
	and.b32  	%r10695, %r10694, %r1804;
	mul.wide.u32 	%rd2715, %r10695, 4;
	add.s64 	%rd2716, %rd2812, %rd2715;
	and.b32  	%r10696, %r1781, 31;
	shl.b32 	%r1785, %r10757, %r10696;
	ld.global.u32 	%r10698, [%rd2716];
	and.b32  	%r10699, %r10698, %r1785;
	setp.eq.s32	%p1040, %r10699, 0;
	@%p1040 bra 	BB1_1564;

	mov.u32 	%r10760, 1;
	ld.param.u32 	%r10759, [m01700_m04_param_25];
	and.b32  	%r10758, %r10759, 31;
	ld.param.u64 	%rd2813, [m01700_m04_param_8];
	shr.u32 	%r10701, %r1782, %r10758;
	and.b32  	%r10702, %r10701, %r1804;
	mul.wide.u32 	%rd2717, %r10702, 4;
	add.s64 	%rd2718, %rd2813, %rd2717;
	and.b32  	%r10703, %r1782, 31;
	shl.b32 	%r1786, %r10760, %r10703;
	ld.global.u32 	%r10705, [%rd2718];
	and.b32  	%r10706, %r10705, %r1786;
	setp.eq.s32	%p1041, %r10706, 0;
	@%p1041 bra 	BB1_1564;

	mov.u32 	%r10763, 1;
	ld.param.u32 	%r10762, [m01700_m04_param_25];
	and.b32  	%r10761, %r10762, 31;
	ld.param.u64 	%rd2814, [m01700_m04_param_9];
	shr.u32 	%r10708, %r1783, %r10761;
	and.b32  	%r10709, %r10708, %r1804;
	mul.wide.u32 	%rd2719, %r10709, 4;
	add.s64 	%rd2720, %rd2814, %rd2719;
	and.b32  	%r10710, %r1783, 31;
	shl.b32 	%r1787, %r10763, %r10710;
	ld.global.u32 	%r10712, [%rd2720];
	and.b32  	%r10713, %r10712, %r1787;
	setp.eq.s32	%p1042, %r10713, 0;
	@%p1042 bra 	BB1_1564;

	and.b32  	%r10766, %r1780, 31;
	mov.u32 	%r10765, 1;
	shl.b32 	%r10764, %r10765, %r10766;
	ld.param.u64 	%rd2815, [m01700_m04_param_10];
	ld.param.u32 	%r10753, [m01700_m04_param_26];
	and.b32  	%r10714, %r10753, 31;
	shr.u32 	%r10715, %r1780, %r10714;
	and.b32  	%r10716, %r10715, %r1804;
	mul.wide.u32 	%rd2721, %r10716, 4;
	add.s64 	%rd2722, %rd2815, %rd2721;
	ld.global.u32 	%r10717, [%rd2722];
	and.b32  	%r10718, %r10717, %r10764;
	setp.eq.s32	%p1043, %r10718, 0;
	@%p1043 bra 	BB1_1564;

	ld.param.u64 	%rd2816, [m01700_m04_param_11];
	shr.u32 	%r10720, %r1781, %r10714;
	and.b32  	%r10721, %r10720, %r1804;
	mul.wide.u32 	%rd2723, %r10721, 4;
	add.s64 	%rd2724, %rd2816, %rd2723;
	ld.global.u32 	%r10722, [%rd2724];
	and.b32  	%r10723, %r10722, %r1785;
	setp.eq.s32	%p1044, %r10723, 0;
	@%p1044 bra 	BB1_1564;

	ld.param.u64 	%rd2817, [m01700_m04_param_12];
	shr.u32 	%r10725, %r1782, %r10714;
	and.b32  	%r10726, %r10725, %r1804;
	mul.wide.u32 	%rd2725, %r10726, 4;
	add.s64 	%rd2726, %rd2817, %rd2725;
	ld.global.u32 	%r10727, [%rd2726];
	and.b32  	%r10728, %r10727, %r1786;
	setp.eq.s32	%p1045, %r10728, 0;
	@%p1045 bra 	BB1_1564;

	ld.param.u64 	%rd2818, [m01700_m04_param_13];
	shr.u32 	%r10730, %r1783, %r10714;
	and.b32  	%r10731, %r10730, %r1804;
	mul.wide.u32 	%rd2727, %r10731, 4;
	add.s64 	%rd2728, %rd2818, %rd2727;
	ld.global.u32 	%r10732, [%rd2728];
	and.b32  	%r10733, %r10732, %r1787;
	setp.eq.s32	%p1046, %r10733, 0;
	@%p1046 bra 	BB1_1564;

	mov.u32 	%r10951, 0;
	setp.eq.s32	%p1047, %r1809, 0;
	cvt.u64.u32	%rd84, %r1810;
	mov.u32 	%r10734, -1;
	mov.u32 	%r10950, %r1809;
	@%p1047 bra 	BB1_1558;

BB1_1546:
	mov.u32 	%r10952, 1;
	ld.param.u64 	%rd2819, [m01700_m04_param_15];
	shr.u32 	%r1790, %r10950, 1;
	add.s32 	%r10953, %r1790, %r10951;
	cvt.u64.u32	%rd2729, %r10953;
	add.s64 	%rd2730, %rd2729, %rd84;
	shl.b64 	%rd2731, %rd2730, 6;
	add.s64 	%rd85, %rd2819, %rd2731;
	ld.global.u32 	%r1792, [%rd85+28];
	setp.gt.u32	%p1048, %r1783, %r1792;
	@%p1048 bra 	BB1_1556;

	setp.lt.u32	%p1049, %r1783, %r1792;
	mov.u32 	%r10737, -1;
	@%p1049 bra 	BB1_1548;
	bra.uni 	BB1_1549;

BB1_1548:
	mov.u32 	%r10952, %r10737;
	bra.uni 	BB1_1556;

BB1_1549:
	mov.u32 	%r10952, 1;
	ld.global.u32 	%r1793, [%rd85+24];
	setp.gt.u32	%p1050, %r1782, %r1793;
	@%p1050 bra 	BB1_1556;

	setp.lt.u32	%p1051, %r1782, %r1793;
	@%p1051 bra 	BB1_1551;
	bra.uni 	BB1_1552;

BB1_1551:
	mov.u32 	%r10952, %r10737;
	bra.uni 	BB1_1556;

BB1_1552:
	mov.u32 	%r10952, 1;
	ld.global.u32 	%r1794, [%rd85+60];
	setp.gt.u32	%p1052, %r1781, %r1794;
	@%p1052 bra 	BB1_1556;

	setp.lt.u32	%p1053, %r1781, %r1794;
	mov.u32 	%r10952, %r10737;
	@%p1053 bra 	BB1_1556;

	mov.u32 	%r10952, 1;
	ld.global.u32 	%r1795, [%rd85+56];
	setp.gt.u32	%p1054, %r1780, %r1795;
	@%p1054 bra 	BB1_1556;

	setp.lt.u32	%p1055, %r1780, %r1795;
	selp.b32	%r10952, -1, 0, %p1055;

BB1_1556:
	add.s32 	%r10743, %r1790, 1;
	setp.gt.s32	%p1056, %r10952, 0;
	selp.b32	%r10744, %r10743, 0, %p1056;
	add.s32 	%r10951, %r10744, %r10951;
	selp.b32	%r10745, -1, 0, %p1056;
	add.s32 	%r10746, %r10745, %r10950;
	shr.u32 	%r10950, %r10746, 1;
	setp.eq.s32	%p1057, %r10952, 0;
	@%p1057 bra 	BB1_1559;

	setp.ne.s32	%p1058, %r10950, 0;
	@%p1058 bra 	BB1_1546;

BB1_1558:
	mov.u32 	%r10953, %r10734;

BB1_1559:
	setp.eq.s32	%p1059, %r10953, -1;
	@%p1059 bra 	BB1_1564;

	ld.param.u64 	%rd2823, [m01700_m04_param_16];
	add.s32 	%r1801, %r10953, %r1810;
	mul.wide.u32 	%rd2732, %r1801, 4;
	add.s64 	%rd2733, %rd2823, %rd2732;
	atom.global.add.u32 	%r10748, [%rd2733], 1;
	setp.ne.s32	%p1060, %r10748, 0;
	@%p1060 bra 	BB1_1564;

	atom.global.add.u32 	%r1802, [%rd99], 1;
	setp.lt.u32	%p1061, %r1802, %r1809;
	@%p1061 bra 	BB1_1563;
	bra.uni 	BB1_1562;

BB1_1563:
	ld.param.u32 	%r10771, [m01700_m04_param_27];
	ld.param.u64 	%rd2824, [m01700_m04_param_14];
	mul.wide.u32 	%rd2734, %r1802, 20;
	add.s64 	%rd2735, %rd2824, %rd2734;
	st.global.u32 	[%rd2735], %r10771;
	st.global.u32 	[%rd2735+4], %r10953;
	st.global.u32 	[%rd2735+8], %r1801;
	st.global.u32 	[%rd2735+12], %r1;
	st.global.u32 	[%rd2735+16], %r10772;
	bra.uni 	BB1_1564;

BB1_1562:
	atom.global.add.u32 	%r10749, [%rd99], -1;

BB1_1564:
	ld.param.u32 	%r10752, [m01700_m04_param_30];
	add.s32 	%r10772, %r10772, 1;
	setp.lt.u32	%p1062, %r10772, %r10752;
	@%p1062 bra 	BB1_3;

BB1_1565:
	ret;
}

	// .globl	m01700_m08
.entry m01700_m08(
	.param .u64 .ptr .global .align 4 m01700_m08_param_0,
	.param .u64 .ptr .global .align 4 m01700_m08_param_1,
	.param .u64 .ptr .global .align 4 m01700_m08_param_2,
	.param .u64 .ptr .global .align 4 m01700_m08_param_3,
	.param .u64 .ptr .global .align 1 m01700_m08_param_4,
	.param .u64 .ptr .global .align 1 m01700_m08_param_5,
	.param .u64 .ptr .global .align 4 m01700_m08_param_6,
	.param .u64 .ptr .global .align 4 m01700_m08_param_7,
	.param .u64 .ptr .global .align 4 m01700_m08_param_8,
	.param .u64 .ptr .global .align 4 m01700_m08_param_9,
	.param .u64 .ptr .global .align 4 m01700_m08_param_10,
	.param .u64 .ptr .global .align 4 m01700_m08_param_11,
	.param .u64 .ptr .global .align 4 m01700_m08_param_12,
	.param .u64 .ptr .global .align 4 m01700_m08_param_13,
	.param .u64 .ptr .global .align 4 m01700_m08_param_14,
	.param .u64 .ptr .global .align 4 m01700_m08_param_15,
	.param .u64 .ptr .global .align 4 m01700_m08_param_16,
	.param .u64 .ptr .global .align 4 m01700_m08_param_17,
	.param .u64 .ptr .global .align 1 m01700_m08_param_18,
	.param .u64 .ptr .global .align 4 m01700_m08_param_19,
	.param .u64 .ptr .global .align 4 m01700_m08_param_20,
	.param .u64 .ptr .global .align 4 m01700_m08_param_21,
	.param .u64 .ptr .global .align 4 m01700_m08_param_22,
	.param .u64 .ptr .global .align 4 m01700_m08_param_23,
	.param .u32 m01700_m08_param_24,
	.param .u32 m01700_m08_param_25,
	.param .u32 m01700_m08_param_26,
	.param .u32 m01700_m08_param_27,
	.param .u32 m01700_m08_param_28,
	.param .u32 m01700_m08_param_29,
	.param .u32 m01700_m08_param_30,
	.param .u32 m01700_m08_param_31,
	.param .u32 m01700_m08_param_32,
	.param .u32 m01700_m08_param_33,
	.param .u32 m01700_m08_param_34
)
{



	ret;
}

	// .globl	m01700_m16
.entry m01700_m16(
	.param .u64 .ptr .global .align 4 m01700_m16_param_0,
	.param .u64 .ptr .global .align 4 m01700_m16_param_1,
	.param .u64 .ptr .global .align 4 m01700_m16_param_2,
	.param .u64 .ptr .global .align 4 m01700_m16_param_3,
	.param .u64 .ptr .global .align 1 m01700_m16_param_4,
	.param .u64 .ptr .global .align 1 m01700_m16_param_5,
	.param .u64 .ptr .global .align 4 m01700_m16_param_6,
	.param .u64 .ptr .global .align 4 m01700_m16_param_7,
	.param .u64 .ptr .global .align 4 m01700_m16_param_8,
	.param .u64 .ptr .global .align 4 m01700_m16_param_9,
	.param .u64 .ptr .global .align 4 m01700_m16_param_10,
	.param .u64 .ptr .global .align 4 m01700_m16_param_11,
	.param .u64 .ptr .global .align 4 m01700_m16_param_12,
	.param .u64 .ptr .global .align 4 m01700_m16_param_13,
	.param .u64 .ptr .global .align 4 m01700_m16_param_14,
	.param .u64 .ptr .global .align 4 m01700_m16_param_15,
	.param .u64 .ptr .global .align 4 m01700_m16_param_16,
	.param .u64 .ptr .global .align 4 m01700_m16_param_17,
	.param .u64 .ptr .global .align 1 m01700_m16_param_18,
	.param .u64 .ptr .global .align 4 m01700_m16_param_19,
	.param .u64 .ptr .global .align 4 m01700_m16_param_20,
	.param .u64 .ptr .global .align 4 m01700_m16_param_21,
	.param .u64 .ptr .global .align 4 m01700_m16_param_22,
	.param .u64 .ptr .global .align 4 m01700_m16_param_23,
	.param .u32 m01700_m16_param_24,
	.param .u32 m01700_m16_param_25,
	.param .u32 m01700_m16_param_26,
	.param .u32 m01700_m16_param_27,
	.param .u32 m01700_m16_param_28,
	.param .u32 m01700_m16_param_29,
	.param .u32 m01700_m16_param_30,
	.param .u32 m01700_m16_param_31,
	.param .u32 m01700_m16_param_32,
	.param .u32 m01700_m16_param_33,
	.param .u32 m01700_m16_param_34
)
{



	ret;
}

	// .globl	m01700_s04
.entry m01700_s04(
	.param .u64 .ptr .global .align 4 m01700_s04_param_0,
	.param .u64 .ptr .global .align 4 m01700_s04_param_1,
	.param .u64 .ptr .global .align 4 m01700_s04_param_2,
	.param .u64 .ptr .global .align 4 m01700_s04_param_3,
	.param .u64 .ptr .global .align 1 m01700_s04_param_4,
	.param .u64 .ptr .global .align 1 m01700_s04_param_5,
	.param .u64 .ptr .global .align 4 m01700_s04_param_6,
	.param .u64 .ptr .global .align 4 m01700_s04_param_7,
	.param .u64 .ptr .global .align 4 m01700_s04_param_8,
	.param .u64 .ptr .global .align 4 m01700_s04_param_9,
	.param .u64 .ptr .global .align 4 m01700_s04_param_10,
	.param .u64 .ptr .global .align 4 m01700_s04_param_11,
	.param .u64 .ptr .global .align 4 m01700_s04_param_12,
	.param .u64 .ptr .global .align 4 m01700_s04_param_13,
	.param .u64 .ptr .global .align 4 m01700_s04_param_14,
	.param .u64 .ptr .global .align 4 m01700_s04_param_15,
	.param .u64 .ptr .global .align 4 m01700_s04_param_16,
	.param .u64 .ptr .global .align 4 m01700_s04_param_17,
	.param .u64 .ptr .global .align 1 m01700_s04_param_18,
	.param .u64 .ptr .global .align 4 m01700_s04_param_19,
	.param .u64 .ptr .global .align 4 m01700_s04_param_20,
	.param .u64 .ptr .global .align 4 m01700_s04_param_21,
	.param .u64 .ptr .global .align 4 m01700_s04_param_22,
	.param .u64 .ptr .global .align 4 m01700_s04_param_23,
	.param .u32 m01700_s04_param_24,
	.param .u32 m01700_s04_param_25,
	.param .u32 m01700_s04_param_26,
	.param .u32 m01700_s04_param_27,
	.param .u32 m01700_s04_param_28,
	.param .u32 m01700_s04_param_29,
	.param .u32 m01700_s04_param_30,
	.param .u32 m01700_s04_param_31,
	.param .u32 m01700_s04_param_32,
	.param .u32 m01700_s04_param_33,
	.param .u32 m01700_s04_param_34
)
{
	.local .align 16 .b8 	__local_depot4[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<1048>;
	.reg .b16 	%rs<377>;
	.reg .b32 	%r<10855>;
	.reg .b64 	%rd<2790>;


	mov.u64 	%rd2789, __local_depot4;
	cvta.local.u64 	%SP, %rd2789;
	ld.param.u64 	%rd86, [m01700_s04_param_0];
	ld.param.u64 	%rd87, [m01700_s04_param_1];
	ld.param.u64 	%rd89, [m01700_s04_param_15];
	ld.param.u64 	%rd91, [m01700_s04_param_19];
	ld.param.u32 	%r1787, [m01700_s04_param_30];
	ld.param.u32 	%r1789, [m01700_s04_param_32];
	ld.param.u32 	%r1790, [m01700_s04_param_34];
	mov.u32 	%r1791, %ctaid.x;
	mov.u32 	%r1792, %ntid.x;
	mov.b32	%r1793, %envreg3;
	mad.lo.s32 	%r1794, %r1791, %r1792, %r1793;
	mov.u32 	%r1795, %tid.x;
	add.s32 	%r1, %r1794, %r1795;
	setp.ge.u32	%p1, %r1, %r1790;
	@%p1 bra 	BB4_1544;

	mul.wide.u32 	%rd92, %r1, 80;
	add.s64 	%rd93, %rd86, %rd92;
	ld.global.u32 	%r2, [%rd93];
	ld.global.u32 	%r3, [%rd93+4];
	ld.global.u32 	%r4, [%rd93+8];
	ld.global.u32 	%r5, [%rd93+12];
	ld.global.u32 	%r6, [%rd93+16];
	ld.global.u32 	%r7, [%rd93+20];
	ld.global.u32 	%r8, [%rd93+24];
	ld.global.u32 	%r9, [%rd93+28];
	ld.global.u32 	%r10, [%rd93+64];
	setp.eq.s32	%p2, %r1787, 0;
	@%p2 bra 	BB4_1544;

	mul.wide.u32 	%rd94, %r1789, 64;
	add.s64 	%rd95, %rd89, %rd94;
	ld.global.u32 	%r11, [%rd95+56];
	ld.global.u32 	%r12, [%rd95+60];
	ld.global.u32 	%r13, [%rd95+24];
	ld.global.u32 	%r14, [%rd95+28];
	mov.u64 	%rd96, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd96;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd96;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 18;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 18;
	mov.b64 	%rd97, {%r1800, %r1799};
	shf.r.wrap.b32 	%r1801, %r1798, %r1797, 14;
	shf.r.wrap.b32 	%r1802, %r1797, %r1798, 14;
	mov.b64 	%rd98, {%r1802, %r1801};
	xor.b64  	%rd99, %rd97, %rd98;
	shf.l.wrap.b32 	%r1803, %r1797, %r1798, 23;
	shf.l.wrap.b32 	%r1804, %r1798, %r1797, 23;
	mov.b64 	%rd100, {%r1804, %r1803};
	xor.b64  	%rd2, %rd99, %rd100;
	mov.u64 	%rd101, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1805}, %rd101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1806,%dummy}, %rd101;
	}
	shf.l.wrap.b32 	%r1807, %r1806, %r1805, 30;
	shf.l.wrap.b32 	%r1808, %r1805, %r1806, 30;
	mov.b64 	%rd102, {%r1808, %r1807};
	shf.r.wrap.b32 	%r1809, %r1805, %r1806, 28;
	shf.r.wrap.b32 	%r1810, %r1806, %r1805, 28;
	mov.b64 	%rd103, {%r1810, %r1809};
	xor.b64  	%rd104, %rd102, %rd103;
	shf.l.wrap.b32 	%r1811, %r1806, %r1805, 25;
	shf.l.wrap.b32 	%r1812, %r1805, %r1806, 25;
	mov.b64 	%rd105, {%r1812, %r1811};
	xor.b64  	%rd3, %rd104, %rd105;
	mov.u64 	%rd106, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1813}, %rd106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd106;
	}
	shf.l.wrap.b32 	%r1815, %r1814, %r1813, 3;
	shf.l.wrap.b32 	%r1816, %r1813, %r1814, 3;
	mov.b64 	%rd107, {%r1816, %r1815};
	shf.r.wrap.b32 	%r1817, %r1813, %r1814, 19;
	shf.r.wrap.b32 	%r1818, %r1814, %r1813, 19;
	mov.b64 	%rd108, {%r1818, %r1817};
	xor.b64  	%rd19, %rd108, %rd107;
	shf.r.wrap.b32 	%r1819, %r1813, %r1814, 8;
	shf.r.wrap.b32 	%r1820, %r1814, %r1813, 8;
	mov.b64 	%rd109, {%r1820, %r1819};
	shf.r.wrap.b32 	%r1821, %r1813, %r1814, 1;
	shf.r.wrap.b32 	%r1822, %r1814, %r1813, 1;
	mov.b64 	%rd110, {%r1822, %r1821};
	xor.b64  	%rd20, %rd110, %rd109;
	mov.u32 	%r10677, 0;

BB4_3:
	mov.u32 	%r10679, 0;
	cvt.u64.u32	%rd82, %r10677;
	mul.wide.u32 	%rd111, %r10677, 128;
	add.s64 	%rd112, %rd87, %rd111;
	ld.global.u32 	%r10678, [%rd112];
	setp.eq.s32	%p3, %r10678, 0;
	mov.u32 	%r10854, %r10;
	mov.u32 	%r10853, %r5;
	mov.u32 	%r10852, %r4;
	mov.u32 	%r10851, %r3;
	mov.u32 	%r10850, %r2;
	mov.u32 	%r10849, %r9;
	mov.u32 	%r10848, %r8;
	mov.u32 	%r10847, %r7;
	mov.u32 	%r10846, %r6;
	@%p3 bra 	BB4_1537;
	bra.uni 	BB4_4;

BB4_194:
	setp.ne.s32	%p131, %r29, 31;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p131 bra 	BB4_213;

	mov.u32 	%r10689, 0;
	mov.u32 	%r2400, 8;
	// inline asm
	shf.r.wrap.b32 %r10692, %r10689, %r23, %r2400;
	// inline asm

BB4_196:
	mov.u32 	%r10690, %r10689;
	mov.u32 	%r10691, %r10689;

BB4_188:
	mov.u32 	%r10693, %r10689;
	mov.u32 	%r10694, %r10689;
	mov.u32 	%r10695, %r10689;
	mov.u32 	%r10696, %r10689;

BB4_213:
	and.b32  	%r2942, %r19, 3;
	shl.b32 	%r2943, %r2942, 3;
	mov.u32 	%r2944, -1;
	shl.b32 	%r165, %r2944, %r2943;
	shr.u32 	%r2941, %r19, 2;
	setp.gt.s32	%p173, %r2941, 3;
	@%p173 bra 	BB4_221;

	setp.gt.s32	%p179, %r2941, 1;
	@%p179 bra 	BB4_218;

	setp.eq.s32	%p182, %r2941, 0;
	@%p182 bra 	BB4_232;
	bra.uni 	BB4_216;

BB4_232:
	and.b32  	%r10693, %r10693, %r165;
	bra.uni 	BB4_233;

BB4_221:
	setp.gt.s32	%p174, %r2941, 5;
	@%p174 bra 	BB4_225;

	setp.eq.s32	%p177, %r2941, 4;
	@%p177 bra 	BB4_230;
	bra.uni 	BB4_223;

BB4_230:
	and.b32  	%r10689, %r10689, %r165;
	mov.u32 	%r10693, 0;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	bra.uni 	BB4_233;

BB4_218:
	setp.eq.s32	%p180, %r2941, 2;
	@%p180 bra 	BB4_231;
	bra.uni 	BB4_219;

BB4_231:
	and.b32  	%r10695, %r10695, %r165;
	mov.u32 	%r10693, 0;
	mov.u32 	%r10694, %r10693;
	bra.uni 	BB4_233;

BB4_225:
	setp.eq.s32	%p175, %r2941, 6;
	@%p175 bra 	BB4_228;
	bra.uni 	BB4_226;

BB4_228:
	and.b32  	%r10691, %r10691, %r165;
	mov.u32 	%r10689, 0;
	mov.u32 	%r10690, %r10689;
	bra.uni 	BB4_229;

BB4_216:
	setp.eq.s32	%p183, %r2941, 1;
	@%p183 bra 	BB4_217;
	bra.uni 	BB4_233;

BB4_217:
	and.b32  	%r10694, %r10694, %r165;
	mov.u32 	%r10693, 0;
	bra.uni 	BB4_233;

BB4_223:
	setp.eq.s32	%p178, %r2941, 5;
	@%p178 bra 	BB4_224;
	bra.uni 	BB4_233;

BB4_224:
	and.b32  	%r10690, %r10690, %r165;
	mov.u32 	%r10689, 0;
	bra.uni 	BB4_229;

BB4_219:
	setp.eq.s32	%p181, %r2941, 3;
	@%p181 bra 	BB4_220;
	bra.uni 	BB4_233;

BB4_220:
	and.b32  	%r10696, %r10696, %r165;
	mov.u32 	%r10693, 0;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	bra.uni 	BB4_233;

BB4_226:
	setp.ne.s32	%p176, %r2941, 7;
	@%p176 bra 	BB4_233;

	and.b32  	%r10692, %r10692, %r165;
	mov.u32 	%r10689, 0;
	mov.u32 	%r10690, %r10689;
	mov.u32 	%r10691, %r10689;

BB4_229:
	mov.u32 	%r10693, %r10689;
	mov.u32 	%r10694, %r10689;
	mov.u32 	%r10695, %r10689;
	mov.u32 	%r10696, %r10689;

BB4_233:
	or.b32  	%r10850, %r10693, %r23;
	or.b32  	%r10851, %r10694, %r22;
	or.b32  	%r10852, %r10695, %r21;
	or.b32  	%r10853, %r10696, %r20;
	or.b32  	%r10846, %r10689, %r27;
	or.b32  	%r10847, %r10690, %r26;
	or.b32  	%r10848, %r10691, %r25;
	or.b32  	%r10849, %r10692, %r24;
	bra.uni 	BB4_1536;

BB4_287:
	setp.eq.s32	%p219, %r29, 19;
	@%p219 bra 	BB4_288;
	bra.uni 	BB4_279;

BB4_288:
	mov.u32 	%r3154, 8;
	// inline asm
	shf.r.wrap.b32 %r27, %r21, %r20, %r3154;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r22, %r21, %r3154;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r23, %r22, %r3154;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r10713, %r10717, %r23, %r3154;
	// inline asm

BB4_319:
	mov.u32 	%r10718, %r10717;
	mov.u32 	%r10719, %r10717;
	mov.u32 	%r23, %r10717;
	bra.uni 	BB4_333;

BB4_271:
	setp.eq.s32	%p231, %r29, 11;
	@%p231 bra 	BB4_272;
	bra.uni 	BB4_279;

BB4_272:
	mov.u32 	%r3298, 8;
	// inline asm
	shf.r.wrap.b32 %r3275, %r27, %r26, %r3298;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r20, %r27, %r3298;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r21, %r20, %r3298;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r22, %r21, %r3298;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3291, %r23, %r22, %r3298;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r10719, %r10717, %r23, %r3298;
	// inline asm
	mov.u32 	%r27, %r3275;
	mov.u32 	%r10718, %r10717;
	mov.u32 	%r23, %r3291;
	bra.uni 	BB4_333;

BB4_302:
	setp.eq.s32	%p208, %r29, 27;
	@%p208 bra 	BB4_303;
	bra.uni 	BB4_279;

BB4_303:
	mov.u32 	%r3042, 8;
	// inline asm
	shf.r.wrap.b32 %r27, %r23, %r22, %r3042;
	// inline asm
	mov.u32 	%r10713, 0;
	// inline asm
	shf.r.wrap.b32 %r10715, %r10713, %r23, %r3042;
	// inline asm

BB4_304:
	mov.u32 	%r10714, %r10713;
	bra.uni 	BB4_332;

BB4_263:
	setp.eq.s32	%p237, %r29, 7;
	@%p237 bra 	BB4_264;
	bra.uni 	BB4_279;

BB4_264:
	mov.u32 	%r3382, 8;
	// inline asm
	shf.r.wrap.b32 %r3355, %r26, %r25, %r3382;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r27, %r26, %r3382;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r20, %r27, %r3382;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r21, %r20, %r3382;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3371, %r22, %r21, %r3382;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10719, %r23, %r22, %r3382;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r10718, %r10717, %r23, %r3382;
	// inline asm
	mov.u32 	%r27, %r3355;
	mov.u32 	%r23, %r3371;
	bra.uni 	BB4_333;

BB4_294:
	setp.eq.s32	%p214, %r29, 23;
	@%p214 bra 	BB4_295;
	bra.uni 	BB4_279;

BB4_295:
	mov.u32 	%r3094, 8;
	// inline asm
	shf.r.wrap.b32 %r27, %r22, %r21, %r3094;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r23, %r22, %r3094;
	// inline asm
	mov.u32 	%r10713, 0;
	// inline asm
	shf.r.wrap.b32 %r10714, %r10713, %r23, %r3094;
	// inline asm
	bra.uni 	BB4_332;

BB4_278:
	setp.eq.s32	%p226, %r29, 15;
	@%p226 bra 	BB4_320;
	bra.uni 	BB4_279;

BB4_320:
	mov.u32 	%r3222, 8;
	// inline asm
	shf.r.wrap.b32 %r27, %r20, %r27, %r3222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r21, %r20, %r3222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r22, %r21, %r3222;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r23, %r22, %r3222;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r23, %r10717, %r23, %r3222;
	// inline asm

BB4_323:
	mov.u32 	%r10718, %r10717;
	mov.u32 	%r10719, %r10717;
	bra.uni 	BB4_333;

BB4_310:
	setp.ne.s32	%p203, %r29, 30;
	@%p203 bra 	BB4_279;

	mov.u32 	%r10713, 0;
	mov.u32 	%r3009, 16;
	// inline asm
	shf.r.wrap.b32 %r27, %r10713, %r23, %r3009;
	// inline asm

BB4_331:
	mov.u32 	%r10714, %r10713;
	mov.u32 	%r10715, %r10713;

BB4_332:
	mov.u32 	%r10717, %r10713;
	mov.u32 	%r10718, %r10713;
	mov.u32 	%r10719, %r10713;
	mov.u32 	%r23, %r10713;
	bra.uni 	BB4_333;

BB4_279:
	mov.u32 	%r10713, %r27;
	mov.u32 	%r10714, %r26;
	mov.u32 	%r10715, %r25;
	mov.u32 	%r27, %r24;
	mov.u32 	%r10717, %r23;
	mov.u32 	%r10718, %r22;
	mov.u32 	%r10719, %r21;
	mov.u32 	%r23, %r20;

BB4_333:
	or.b32  	%r10850, %r10717, %r10709;
	or.b32  	%r10851, %r10718, %r10710;
	or.b32  	%r10852, %r10719, %r10711;
	or.b32  	%r10853, %r23, %r10712;
	or.b32  	%r10846, %r10713, %r10705;
	or.b32  	%r10847, %r10714, %r10706;
	or.b32  	%r10848, %r10715, %r10707;
	or.b32  	%r10849, %r27, %r10708;
	bra.uni 	BB4_1536;

BB4_1299:
	setp.eq.s32	%p934, %r6507, 1;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p934 bra 	BB4_1300;
	bra.uni 	BB4_1378;

BB4_1300:
	mov.u32 	%r7052, 24;
	// inline asm
	shf.r.wrap.b32 %r10799, %r25, %r24, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r26, %r25, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r27, %r26, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r20, %r27, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10803, %r21, %r20, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10802, %r22, %r21, %r7052;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10801, %r23, %r22, %r7052;
	// inline asm
	mov.u32 	%r7050, 0;
	// inline asm
	shf.r.wrap.b32 %r10800, %r7050, %r23, %r7052;
	// inline asm
	bra.uni 	BB4_1378;

BB4_1331:
	setp.eq.s32	%p911, %r6507, 17;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p911 bra 	BB4_1332;
	bra.uni 	BB4_1378;

BB4_1332:
	mov.u32 	%r6708, 24;
	// inline asm
	shf.r.wrap.b32 %r10799, %r21, %r20, %r6708;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r22, %r21, %r6708;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r23, %r22, %r6708;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10796, %r10800, %r23, %r6708;
	// inline asm
	bra.uni 	BB4_1336;

BB4_1314:
	setp.eq.s32	%p923, %r6507, 9;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p923 bra 	BB4_1315;
	bra.uni 	BB4_1378;

BB4_1315:
	mov.u32 	%r6864, 24;
	// inline asm
	shf.r.wrap.b32 %r10799, %r27, %r26, %r6864;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r20, %r27, %r6864;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r21, %r20, %r6864;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r22, %r21, %r6864;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10803, %r23, %r22, %r6864;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10802, %r10800, %r23, %r6864;
	// inline asm
	mov.u32 	%r10801, %r10800;
	bra.uni 	BB4_1378;

BB4_1347:
	setp.eq.s32	%p900, %r6507, 25;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p900 bra 	BB4_1348;
	bra.uni 	BB4_1378;

BB4_1348:
	mov.u32 	%r6584, 24;
	// inline asm
	shf.r.wrap.b32 %r10799, %r23, %r22, %r6584;
	// inline asm
	mov.u32 	%r10796, 0;
	// inline asm
	shf.r.wrap.b32 %r10798, %r10796, %r23, %r6584;
	// inline asm
	bra.uni 	BB4_1352;

BB4_1306:
	setp.eq.s32	%p929, %r6507, 5;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p929 bra 	BB4_1307;
	bra.uni 	BB4_1378;

BB4_1307:
	mov.u32 	%r6954, 24;
	// inline asm
	shf.r.wrap.b32 %r10799, %r26, %r25, %r6954;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r27, %r26, %r6954;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r20, %r27, %r6954;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r21, %r20, %r6954;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10803, %r22, %r21, %r6954;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10802, %r23, %r22, %r6954;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10801, %r10800, %r23, %r6954;
	// inline asm
	bra.uni 	BB4_1378;

BB4_1339:
	setp.eq.s32	%p906, %r6507, 21;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p906 bra 	BB4_1340;
	bra.uni 	BB4_1378;

BB4_1340:
	mov.u32 	%r6642, 24;
	// inline asm
	shf.r.wrap.b32 %r10799, %r22, %r21, %r6642;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r23, %r22, %r6642;
	// inline asm
	mov.u32 	%r10796, 0;
	// inline asm
	shf.r.wrap.b32 %r10797, %r10796, %r23, %r6642;
	// inline asm
	bra.uni 	BB4_1353;

BB4_1321:
	setp.eq.s32	%p918, %r6507, 13;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p918 bra 	BB4_1322;
	bra.uni 	BB4_1378;

BB4_1322:
	mov.u32 	%r6782, 24;
	// inline asm
	shf.r.wrap.b32 %r10799, %r20, %r27, %r6782;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r21, %r20, %r6782;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r22, %r21, %r6782;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r23, %r22, %r6782;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10803, %r10800, %r23, %r6782;
	// inline asm
	bra.uni 	BB4_1326;

BB4_1356:
	setp.eq.s32	%p895, %r6507, 29;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p895 bra 	BB4_1357;
	bra.uni 	BB4_1378;

BB4_1357:
	mov.u32 	%r10796, 0;
	mov.u32 	%r6534, 24;
	// inline asm
	shf.r.wrap.b32 %r10799, %r10796, %r23, %r6534;
	// inline asm
	bra.uni 	BB4_1361;

BB4_1302:
	setp.eq.s32	%p932, %r6507, 3;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p932 bra 	BB4_1303;
	bra.uni 	BB4_1378;

BB4_1303:
	mov.u32 	%r6988, 8;
	// inline asm
	shf.r.wrap.b32 %r10799, %r25, %r24, %r6988;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r26, %r25, %r6988;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r27, %r26, %r6988;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r20, %r27, %r6988;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10803, %r21, %r20, %r6988;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10802, %r22, %r21, %r6988;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10801, %r23, %r22, %r6988;
	// inline asm
	mov.u32 	%r6986, 0;
	// inline asm
	shf.r.wrap.b32 %r10800, %r6986, %r23, %r6988;
	// inline asm
	bra.uni 	BB4_1378;

BB4_1334:
	setp.eq.s32	%p909, %r6507, 19;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p909 bra 	BB4_1335;
	bra.uni 	BB4_1378;

BB4_1335:
	mov.u32 	%r6668, 8;
	// inline asm
	shf.r.wrap.b32 %r10799, %r21, %r20, %r6668;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r22, %r21, %r6668;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r23, %r22, %r6668;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10796, %r10800, %r23, %r6668;
	// inline asm

BB4_1336:
	mov.u32 	%r10801, %r10800;
	mov.u32 	%r10802, %r10800;
	mov.u32 	%r10803, %r10800;
	bra.uni 	BB4_1378;

BB4_1317:
	setp.eq.s32	%p921, %r6507, 11;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p921 bra 	BB4_1318;
	bra.uni 	BB4_1378;

BB4_1318:
	mov.u32 	%r6812, 8;
	// inline asm
	shf.r.wrap.b32 %r10799, %r27, %r26, %r6812;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r20, %r27, %r6812;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r21, %r20, %r6812;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r22, %r21, %r6812;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10803, %r23, %r22, %r6812;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10802, %r10800, %r23, %r6812;
	// inline asm
	mov.u32 	%r10801, %r10800;
	bra.uni 	BB4_1378;

BB4_1350:
	setp.eq.s32	%p898, %r6507, 27;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p898 bra 	BB4_1351;
	bra.uni 	BB4_1378;

BB4_1351:
	mov.u32 	%r6556, 8;
	// inline asm
	shf.r.wrap.b32 %r10799, %r23, %r22, %r6556;
	// inline asm
	mov.u32 	%r10796, 0;
	// inline asm
	shf.r.wrap.b32 %r10798, %r10796, %r23, %r6556;
	// inline asm

BB4_1352:
	mov.u32 	%r10797, %r10796;
	bra.uni 	BB4_1353;

BB4_1309:
	setp.eq.s32	%p927, %r6507, 7;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p927 bra 	BB4_1310;
	bra.uni 	BB4_1378;

BB4_1310:
	mov.u32 	%r6896, 8;
	// inline asm
	shf.r.wrap.b32 %r10799, %r26, %r25, %r6896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r27, %r26, %r6896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r20, %r27, %r6896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r21, %r20, %r6896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10803, %r22, %r21, %r6896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10802, %r23, %r22, %r6896;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10801, %r10800, %r23, %r6896;
	// inline asm
	bra.uni 	BB4_1378;

BB4_1342:
	setp.eq.s32	%p904, %r6507, 23;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p904 bra 	BB4_1343;
	bra.uni 	BB4_1378;

BB4_1343:
	mov.u32 	%r6608, 8;
	// inline asm
	shf.r.wrap.b32 %r10799, %r22, %r21, %r6608;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r23, %r22, %r6608;
	// inline asm
	mov.u32 	%r10796, 0;
	// inline asm
	shf.r.wrap.b32 %r10797, %r10796, %r23, %r6608;
	// inline asm
	bra.uni 	BB4_1353;

BB4_1324:
	setp.eq.s32	%p916, %r6507, 15;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p916 bra 	BB4_1325;
	bra.uni 	BB4_1378;

BB4_1325:
	mov.u32 	%r6736, 8;
	// inline asm
	shf.r.wrap.b32 %r10799, %r20, %r27, %r6736;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r21, %r20, %r6736;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r22, %r21, %r6736;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r23, %r22, %r6736;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10803, %r10800, %r23, %r6736;
	// inline asm

BB4_1326:
	mov.u32 	%r10801, %r10800;
	mov.u32 	%r10802, %r10800;
	bra.uni 	BB4_1378;

BB4_1359:
	setp.ne.s32	%p893, %r6507, 31;
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r10804;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	@%p893 bra 	BB4_1378;

	mov.u32 	%r10796, 0;
	mov.u32 	%r6512, 8;
	// inline asm
	shf.r.wrap.b32 %r10799, %r10796, %r23, %r6512;
	// inline asm

BB4_1361:
	mov.u32 	%r10797, %r10796;
	mov.u32 	%r10798, %r10796;

BB4_1353:
	mov.u32 	%r10800, %r10796;
	mov.u32 	%r10801, %r10796;
	mov.u32 	%r10802, %r10796;
	mov.u32 	%r10803, %r10796;

BB4_1378:
	// inline asm
	prmt.b32 %r7053, %r10799, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7055, %r10798, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7057, %r10797, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7059, %r10796, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7061, %r10803, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7063, %r10802, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7065, %r10801, 0, 0x0123;
	// inline asm
	and.b32  	%r7076, %r19, 3;
	mov.u32 	%r7077, 4;
	sub.s32 	%r7078, %r7077, %r7076;
	shl.b32 	%r7079, %r7078, 2;
	mov.u32 	%r7080, 1985229328;
	shr.u32 	%r7081, %r7080, %r7079;
	and.b32  	%r1419, %r7081, 65535;
	shr.u32 	%r7075, %r19, 2;
	setp.gt.s32	%p935, %r7075, 3;
	@%p935 bra 	BB4_1386;

	setp.gt.s32	%p941, %r7075, 1;
	@%p941 bra 	BB4_1383;

	setp.eq.s32	%p944, %r7075, 0;
	@%p944 bra 	BB4_1396;
	bra.uni 	BB4_1381;

BB4_1396:
	// inline asm
	prmt.b32 %r7222, %r10800, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10811, %r7065, %r7222, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10810, %r7063, %r7065, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10809, %r7061, %r7063, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10808, %r7059, %r7061, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10807, %r7057, %r7059, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10806, %r7055, %r7057, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10805, %r7053, %r7055, %r1419;
	// inline asm
	mov.u32 	%r7253, 0;
	// inline asm
	prmt.b32 %r10804, %r7253, %r7053, %r1419;
	// inline asm
	bra.uni 	BB4_1397;

BB4_1386:
	setp.gt.s32	%p936, %r7075, 5;
	@%p936 bra 	BB4_1390;

	setp.eq.s32	%p939, %r7075, 4;
	@%p939 bra 	BB4_1394;
	bra.uni 	BB4_1388;

BB4_1394:
	// inline asm
	prmt.b32 %r10811, %r7057, %r7059, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10810, %r7055, %r7057, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10809, %r7053, %r7055, %r1419;
	// inline asm
	mov.u32 	%r10804, 0;
	// inline asm
	prmt.b32 %r10808, %r10804, %r7053, %r1419;
	// inline asm
	mov.u32 	%r10805, %r10804;
	mov.u32 	%r10806, %r10804;
	mov.u32 	%r10807, %r10804;
	bra.uni 	BB4_1397;

BB4_1383:
	setp.eq.s32	%p942, %r7075, 2;
	@%p942 bra 	BB4_1395;
	bra.uni 	BB4_1384;

BB4_1395:
	// inline asm
	prmt.b32 %r10811, %r7061, %r7063, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10810, %r7059, %r7061, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10809, %r7057, %r7059, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10808, %r7055, %r7057, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10807, %r7053, %r7055, %r1419;
	// inline asm
	mov.u32 	%r10804, 0;
	// inline asm
	prmt.b32 %r10806, %r10804, %r7053, %r1419;
	// inline asm
	mov.u32 	%r10805, %r10804;
	bra.uni 	BB4_1397;

BB4_1390:
	setp.eq.s32	%p937, %r7075, 6;
	@%p937 bra 	BB4_1393;
	bra.uni 	BB4_1391;

BB4_1393:
	// inline asm
	prmt.b32 %r10811, %r7053, %r7055, %r1419;
	// inline asm
	mov.u32 	%r10804, 0;
	// inline asm
	prmt.b32 %r10810, %r10804, %r7053, %r1419;
	// inline asm
	mov.u32 	%r10805, %r10804;
	mov.u32 	%r10806, %r10804;
	mov.u32 	%r10807, %r10804;
	mov.u32 	%r10808, %r10804;
	mov.u32 	%r10809, %r10804;
	bra.uni 	BB4_1397;

BB4_1381:
	setp.eq.s32	%p945, %r7075, 1;
	mov.u32 	%r10805, %r10804;
	mov.u32 	%r10806, %r10804;
	mov.u32 	%r10807, %r10804;
	mov.u32 	%r10808, %r10804;
	mov.u32 	%r10809, %r10804;
	mov.u32 	%r10810, %r10804;
	mov.u32 	%r10811, %r10804;
	@%p945 bra 	BB4_1382;
	bra.uni 	BB4_1397;

BB4_1382:
	// inline asm
	prmt.b32 %r10811, %r7063, %r7065, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10810, %r7061, %r7063, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10809, %r7059, %r7061, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10808, %r7057, %r7059, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10807, %r7055, %r7057, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10806, %r7053, %r7055, %r1419;
	// inline asm
	mov.u32 	%r10804, 0;
	// inline asm
	prmt.b32 %r10805, %r10804, %r7053, %r1419;
	// inline asm
	bra.uni 	BB4_1397;

BB4_1388:
	setp.eq.s32	%p940, %r7075, 5;
	mov.u32 	%r10805, %r10804;
	mov.u32 	%r10806, %r10804;
	mov.u32 	%r10807, %r10804;
	mov.u32 	%r10808, %r10804;
	mov.u32 	%r10809, %r10804;
	mov.u32 	%r10810, %r10804;
	mov.u32 	%r10811, %r10804;
	@%p940 bra 	BB4_1389;
	bra.uni 	BB4_1397;

BB4_1389:
	// inline asm
	prmt.b32 %r10811, %r7055, %r7057, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10810, %r7053, %r7055, %r1419;
	// inline asm
	mov.u32 	%r10804, 0;
	// inline asm
	prmt.b32 %r10809, %r10804, %r7053, %r1419;
	// inline asm
	mov.u32 	%r10805, %r10804;
	mov.u32 	%r10806, %r10804;
	mov.u32 	%r10807, %r10804;
	mov.u32 	%r10808, %r10804;
	bra.uni 	BB4_1397;

BB4_1384:
	setp.eq.s32	%p943, %r7075, 3;
	mov.u32 	%r10805, %r10804;
	mov.u32 	%r10806, %r10804;
	mov.u32 	%r10807, %r10804;
	mov.u32 	%r10808, %r10804;
	mov.u32 	%r10809, %r10804;
	mov.u32 	%r10810, %r10804;
	mov.u32 	%r10811, %r10804;
	@%p943 bra 	BB4_1385;
	bra.uni 	BB4_1397;

BB4_1385:
	// inline asm
	prmt.b32 %r10811, %r7059, %r7061, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10810, %r7057, %r7059, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10809, %r7055, %r7057, %r1419;
	// inline asm
	// inline asm
	prmt.b32 %r10808, %r7053, %r7055, %r1419;
	// inline asm
	mov.u32 	%r10804, 0;
	// inline asm
	prmt.b32 %r10807, %r10804, %r7053, %r1419;
	// inline asm
	mov.u32 	%r10805, %r10804;
	mov.u32 	%r10806, %r10804;
	bra.uni 	BB4_1397;

BB4_1391:
	setp.ne.s32	%p938, %r7075, 7;
	mov.u32 	%r10805, %r10804;
	mov.u32 	%r10806, %r10804;
	mov.u32 	%r10807, %r10804;
	mov.u32 	%r10808, %r10804;
	mov.u32 	%r10809, %r10804;
	mov.u32 	%r10810, %r10804;
	mov.u32 	%r10811, %r10804;
	@%p938 bra 	BB4_1397;

	mov.u32 	%r10804, 0;
	// inline asm
	prmt.b32 %r10811, %r10804, %r7053, %r1419;
	// inline asm
	mov.u32 	%r10805, %r10804;
	mov.u32 	%r10806, %r10804;
	mov.u32 	%r10807, %r10804;
	mov.u32 	%r10808, %r10804;
	mov.u32 	%r10809, %r10804;
	mov.u32 	%r10810, %r10804;

BB4_1397:
	or.b32  	%r10850, %r10804, %r23;
	or.b32  	%r10851, %r10805, %r22;
	or.b32  	%r10852, %r10806, %r21;
	or.b32  	%r10853, %r10807, %r20;
	or.b32  	%r10846, %r10808, %r27;
	or.b32  	%r10847, %r10809, %r26;
	or.b32  	%r10848, %r10810, %r25;
	or.b32  	%r10849, %r10811, %r24;
	bra.uni 	BB4_1536;

BB4_4:
	mov.u32 	%r27, %r10846;
	mov.u32 	%r26, %r10847;
	mov.u32 	%r25, %r10848;
	mov.u32 	%r24, %r10849;
	mov.u32 	%r23, %r10850;
	mov.u32 	%r22, %r10851;
	mov.u32 	%r21, %r10852;
	mov.u32 	%r20, %r10853;
	mov.u32 	%r19, %r10854;
	shr.u32 	%r28, %r10678, 8;
	bfe.u32 	%r29, %r10678, 8, 8;
	shr.u32 	%r30, %r10678, 16;
	bfe.u32 	%r31, %r10678, 16, 8;
	and.b32  	%r1824, %r10678, 255;
	setp.gt.s32	%p4, %r1824, 93;
	@%p4 bra 	BB4_72;

	setp.gt.s32	%p32, %r1824, 68;
	@%p32 bra 	BB4_38;

	setp.gt.s32	%p46, %r1824, 44;
	@%p46 bra 	BB4_22;

	setp.gt.s32	%p53, %r1824, 41;
	@%p53 bra 	BB4_18;

	setp.eq.s32	%p57, %r1824, 36;
	@%p57 bra 	BB4_1297;
	bra.uni 	BB4_9;

BB4_1297:
	add.s32 	%r10854, %r19, 1;
	setp.gt.u32	%p878, %r10854, 31;
	@%p878 bra 	BB4_777;

	and.b32  	%r6487, %r19, 3;
	shl.b32 	%r6488, %r6487, 3;
	shl.b32 	%r6489, %r29, %r6488;
	setp.lt.u32	%p879, %r19, 4;
	selp.b32	%r6490, %r6489, 0, %p879;
	or.b32  	%r10850, %r6490, %r23;
	and.b32  	%r6491, %r19, -4;
	setp.eq.s32	%p880, %r6491, 4;
	selp.b32	%r6492, %r6489, 0, %p880;
	or.b32  	%r10851, %r6492, %r22;
	setp.eq.s32	%p881, %r6491, 8;
	selp.b32	%r6493, %r6489, 0, %p881;
	or.b32  	%r10852, %r6493, %r21;
	setp.eq.s32	%p882, %r6491, 12;
	selp.b32	%r6494, %r6489, 0, %p882;
	or.b32  	%r10853, %r6494, %r20;
	setp.eq.s32	%p883, %r6491, 16;
	selp.b32	%r6495, %r6489, 0, %p883;
	or.b32  	%r10846, %r6495, %r27;
	setp.eq.s32	%p884, %r6491, 20;
	selp.b32	%r6496, %r6489, 0, %p884;
	or.b32  	%r10847, %r6496, %r26;
	setp.eq.s32	%p885, %r6491, 24;
	selp.b32	%r6497, %r6489, 0, %p885;
	or.b32  	%r10848, %r6497, %r25;
	setp.gt.u32	%p886, %r19, 27;
	selp.b32	%r6498, %r6489, 0, %p886;
	or.b32  	%r10849, %r6498, %r24;
	bra.uni 	BB4_1536;

BB4_72:
	setp.gt.s32	%p5, %r1824, 112;
	@%p5 bra 	BB4_101;

	setp.gt.s32	%p19, %r1824, 104;
	@%p19 bra 	BB4_88;

	setp.gt.s32	%p26, %r1824, 99;
	@%p26 bra 	BB4_78;

	setp.eq.s32	%p30, %r1824, 94;
	@%p30 bra 	BB4_1295;
	bra.uni 	BB4_76;

BB4_1295:
	add.s32 	%r10854, %r19, 1;
	setp.gt.u32	%p877, %r10854, 31;
	@%p877 bra 	BB4_777;

	mov.u32 	%r6486, 24;
	// inline asm
	shf.r.wrap.b32 %r10849, %r25, %r24, %r6486;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r26, %r25, %r6486;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r27, %r26, %r6486;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r20, %r27, %r6486;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r21, %r20, %r6486;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r22, %r21, %r6486;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r23, %r22, %r6486;
	// inline asm
	mov.u32 	%r6484, 0;
	// inline asm
	shf.r.wrap.b32 %r6483, %r6484, %r23, %r6486;
	// inline asm
	or.b32  	%r10850, %r6483, %r29;
	bra.uni 	BB4_1536;

BB4_38:
	setp.gt.s32	%p33, %r1824, 83;
	@%p33 bra 	BB4_57;

	setp.gt.s32	%p40, %r1824, 75;
	@%p40 bra 	BB4_49;

	setp.eq.s32	%p44, %r1824, 69;
	@%p44 bra 	BB4_133;
	bra.uni 	BB4_41;

BB4_133:
	and.b32  	%r1857, %r23, 1077952576;
	shr.u32 	%r1858, %r1857, 1;
	and.b32  	%r1859, %r23, -2139062144;
	shr.u32 	%r1860, %r1859, 2;
	not.b32 	%r1861, %r1860;
	and.b32  	%r1862, %r1858, %r1861;
	and.b32  	%r1863, %r23, 522133279;
	add.s32 	%r1864, %r1863, 522133279;
	mov.u32 	%r1865, -84215046;
	sub.s32 	%r1866, %r1865, %r1863;
	and.b32  	%r1867, %r1862, %r1866;
	and.b32  	%r1868, %r1867, %r1864;
	or.b32  	%r1869, %r1868, %r23;
	and.b32  	%r1870, %r22, 1077952576;
	shr.u32 	%r1871, %r1870, 1;
	and.b32  	%r1872, %r22, -2139062144;
	shr.u32 	%r1873, %r1872, 2;
	not.b32 	%r1874, %r1873;
	and.b32  	%r1875, %r1871, %r1874;
	and.b32  	%r1876, %r22, 522133279;
	add.s32 	%r1877, %r1876, 522133279;
	sub.s32 	%r1878, %r1865, %r1876;
	and.b32  	%r1879, %r1875, %r1878;
	and.b32  	%r1880, %r1879, %r1877;
	or.b32  	%r1881, %r1880, %r22;
	and.b32  	%r1882, %r21, 1077952576;
	shr.u32 	%r1883, %r1882, 1;
	and.b32  	%r1884, %r21, -2139062144;
	shr.u32 	%r1885, %r1884, 2;
	not.b32 	%r1886, %r1885;
	and.b32  	%r1887, %r1883, %r1886;
	and.b32  	%r1888, %r21, 522133279;
	add.s32 	%r1889, %r1888, 522133279;
	sub.s32 	%r1890, %r1865, %r1888;
	and.b32  	%r1891, %r1887, %r1890;
	and.b32  	%r1892, %r1891, %r1889;
	or.b32  	%r1893, %r1892, %r21;
	and.b32  	%r1894, %r20, 1077952576;
	shr.u32 	%r1895, %r1894, 1;
	and.b32  	%r1896, %r20, -2139062144;
	shr.u32 	%r1897, %r1896, 2;
	not.b32 	%r1898, %r1897;
	and.b32  	%r1899, %r1895, %r1898;
	and.b32  	%r1900, %r20, 522133279;
	add.s32 	%r1901, %r1900, 522133279;
	sub.s32 	%r1902, %r1865, %r1900;
	and.b32  	%r1903, %r1899, %r1902;
	and.b32  	%r1904, %r1903, %r1901;
	or.b32  	%r1905, %r1904, %r20;
	and.b32  	%r1906, %r27, 1077952576;
	shr.u32 	%r1907, %r1906, 1;
	and.b32  	%r1908, %r27, -2139062144;
	shr.u32 	%r1909, %r1908, 2;
	not.b32 	%r1910, %r1909;
	and.b32  	%r1911, %r1907, %r1910;
	and.b32  	%r1912, %r27, 522133279;
	add.s32 	%r1913, %r1912, 522133279;
	sub.s32 	%r1914, %r1865, %r1912;
	and.b32  	%r1915, %r1911, %r1914;
	and.b32  	%r1916, %r1915, %r1913;
	or.b32  	%r1917, %r1916, %r27;
	and.b32  	%r1918, %r26, 1077952576;
	shr.u32 	%r1919, %r1918, 1;
	and.b32  	%r1920, %r26, -2139062144;
	shr.u32 	%r1921, %r1920, 2;
	not.b32 	%r1922, %r1921;
	and.b32  	%r1923, %r1919, %r1922;
	and.b32  	%r1924, %r26, 522133279;
	add.s32 	%r1925, %r1924, 522133279;
	sub.s32 	%r1926, %r1865, %r1924;
	and.b32  	%r1927, %r1923, %r1926;
	and.b32  	%r1928, %r1927, %r1925;
	or.b32  	%r1929, %r1928, %r26;
	and.b32  	%r1930, %r25, 1077952576;
	shr.u32 	%r1931, %r1930, 1;
	and.b32  	%r1932, %r25, -2139062144;
	shr.u32 	%r1933, %r1932, 2;
	not.b32 	%r1934, %r1933;
	and.b32  	%r1935, %r1931, %r1934;
	and.b32  	%r1936, %r25, 522133279;
	add.s32 	%r1937, %r1936, 522133279;
	sub.s32 	%r1938, %r1865, %r1936;
	and.b32  	%r1939, %r1935, %r1938;
	and.b32  	%r1940, %r1939, %r1937;
	or.b32  	%r1941, %r1940, %r25;
	and.b32  	%r1942, %r24, 1077952576;
	shr.u32 	%r1943, %r1942, 1;
	and.b32  	%r1944, %r24, -2139062144;
	shr.u32 	%r1945, %r1944, 2;
	not.b32 	%r1946, %r1945;
	and.b32  	%r1947, %r1943, %r1946;
	and.b32  	%r1948, %r24, 522133279;
	add.s32 	%r1949, %r1948, 522133279;
	sub.s32 	%r1950, %r1865, %r1948;
	and.b32  	%r1951, %r1947, %r1950;
	and.b32  	%r1952, %r1951, %r1949;
	or.b32  	%r1953, %r1952, %r24;
	mov.b32	{%rs10, %rs11}, %r1869;
	shr.u16 	%rs12, %rs11, 8;
	setp.eq.s16	%p59, %rs12, 32;
	and.b16  	%rs13, %rs11, 255;
	setp.eq.s16	%p60, %rs13, 32;
	shr.u16 	%rs14, %rs10, 8;
	setp.eq.s16	%p61, %rs14, 32;
	and.b16  	%rs15, %rs10, 255;
	setp.eq.s16	%p62, %rs15, 32;
	selp.b16	%rs16, -1, 0, %p62;
	selp.b16	%rs17, -1, 0, %p61;
	selp.b16	%rs18, -1, 0, %p60;
	selp.b16	%rs19, -1, 0, %p59;
	shr.u16 	%rs20, %rs17, 7;
	cvt.u32.u16	%r1954, %rs20;
	shr.u16 	%rs21, %rs16, 7;
	and.b16  	%rs22, %rs21, 255;
	cvt.u32.u16	%r1955, %rs22;
	prmt.b32 	%r1956, %r1954, %r1955, 30212;
	shr.u16 	%rs23, %rs19, 7;
	cvt.u32.u16	%r1957, %rs23;
	shr.u16 	%rs24, %rs18, 7;
	and.b16  	%rs25, %rs24, 255;
	cvt.u32.u16	%r1958, %rs25;
	prmt.b32 	%r1959, %r1957, %r1958, 30212;
	prmt.b32 	%r1850, %r1959, %r1956, 4180;
	mov.b32	{%rs26, %rs27}, %r1881;
	shr.u16 	%rs28, %rs27, 8;
	setp.eq.s16	%p63, %rs28, 32;
	and.b16  	%rs29, %rs27, 255;
	setp.eq.s16	%p64, %rs29, 32;
	shr.u16 	%rs30, %rs26, 8;
	setp.eq.s16	%p65, %rs30, 32;
	and.b16  	%rs31, %rs26, 255;
	setp.eq.s16	%p66, %rs31, 32;
	selp.b16	%rs32, -1, 0, %p66;
	selp.b16	%rs33, -1, 0, %p65;
	selp.b16	%rs34, -1, 0, %p64;
	selp.b16	%rs35, -1, 0, %p63;
	shr.u16 	%rs36, %rs33, 7;
	cvt.u32.u16	%r1960, %rs36;
	shr.u16 	%rs37, %rs32, 7;
	and.b16  	%rs38, %rs37, 255;
	cvt.u32.u16	%r1961, %rs38;
	prmt.b32 	%r1962, %r1960, %r1961, 30212;
	shr.u16 	%rs39, %rs35, 7;
	cvt.u32.u16	%r1963, %rs39;
	shr.u16 	%rs40, %rs34, 7;
	and.b16  	%rs41, %rs40, 255;
	cvt.u32.u16	%r1964, %rs41;
	prmt.b32 	%r1965, %r1963, %r1964, 30212;
	prmt.b32 	%r1846, %r1965, %r1962, 4180;
	mov.b32	{%rs42, %rs43}, %r1893;
	shr.u16 	%rs44, %rs43, 8;
	setp.eq.s16	%p67, %rs44, 32;
	and.b16  	%rs45, %rs43, 255;
	setp.eq.s16	%p68, %rs45, 32;
	shr.u16 	%rs46, %rs42, 8;
	setp.eq.s16	%p69, %rs46, 32;
	and.b16  	%rs47, %rs42, 255;
	setp.eq.s16	%p70, %rs47, 32;
	selp.b16	%rs48, -1, 0, %p70;
	selp.b16	%rs49, -1, 0, %p69;
	selp.b16	%rs50, -1, 0, %p68;
	selp.b16	%rs51, -1, 0, %p67;
	shr.u16 	%rs52, %rs49, 7;
	cvt.u32.u16	%r1966, %rs52;
	shr.u16 	%rs53, %rs48, 7;
	and.b16  	%rs54, %rs53, 255;
	cvt.u32.u16	%r1967, %rs54;
	prmt.b32 	%r1968, %r1966, %r1967, 30212;
	shr.u16 	%rs55, %rs51, 7;
	cvt.u32.u16	%r1969, %rs55;
	shr.u16 	%rs56, %rs50, 7;
	and.b16  	%rs57, %rs56, 255;
	cvt.u32.u16	%r1970, %rs57;
	prmt.b32 	%r1971, %r1969, %r1970, 30212;
	prmt.b32 	%r1842, %r1971, %r1968, 4180;
	mov.b32	{%rs58, %rs59}, %r1905;
	shr.u16 	%rs60, %rs59, 8;
	setp.eq.s16	%p71, %rs60, 32;
	and.b16  	%rs61, %rs59, 255;
	setp.eq.s16	%p72, %rs61, 32;
	shr.u16 	%rs62, %rs58, 8;
	setp.eq.s16	%p73, %rs62, 32;
	and.b16  	%rs63, %rs58, 255;
	setp.eq.s16	%p74, %rs63, 32;
	selp.b16	%rs64, -1, 0, %p74;
	selp.b16	%rs65, -1, 0, %p73;
	selp.b16	%rs66, -1, 0, %p72;
	selp.b16	%rs67, -1, 0, %p71;
	shr.u16 	%rs68, %rs65, 7;
	cvt.u32.u16	%r1972, %rs68;
	shr.u16 	%rs69, %rs64, 7;
	and.b16  	%rs70, %rs69, 255;
	cvt.u32.u16	%r1973, %rs70;
	prmt.b32 	%r1974, %r1972, %r1973, 30212;
	shr.u16 	%rs71, %rs67, 7;
	cvt.u32.u16	%r1975, %rs71;
	shr.u16 	%rs72, %rs66, 7;
	and.b16  	%rs73, %rs72, 255;
	cvt.u32.u16	%r1976, %rs73;
	prmt.b32 	%r1977, %r1975, %r1976, 30212;
	prmt.b32 	%r1838, %r1977, %r1974, 4180;
	mov.b32	{%rs74, %rs75}, %r1917;
	shr.u16 	%rs76, %rs75, 8;
	setp.eq.s16	%p75, %rs76, 32;
	and.b16  	%rs77, %rs75, 255;
	setp.eq.s16	%p76, %rs77, 32;
	shr.u16 	%rs78, %rs74, 8;
	setp.eq.s16	%p77, %rs78, 32;
	and.b16  	%rs79, %rs74, 255;
	setp.eq.s16	%p78, %rs79, 32;
	selp.b16	%rs80, -1, 0, %p78;
	selp.b16	%rs81, -1, 0, %p77;
	selp.b16	%rs82, -1, 0, %p76;
	selp.b16	%rs83, -1, 0, %p75;
	shr.u16 	%rs84, %rs81, 7;
	cvt.u32.u16	%r1978, %rs84;
	shr.u16 	%rs85, %rs80, 7;
	and.b16  	%rs86, %rs85, 255;
	cvt.u32.u16	%r1979, %rs86;
	prmt.b32 	%r1980, %r1978, %r1979, 30212;
	shr.u16 	%rs87, %rs83, 7;
	cvt.u32.u16	%r1981, %rs87;
	shr.u16 	%rs88, %rs82, 7;
	and.b16  	%rs89, %rs88, 255;
	cvt.u32.u16	%r1982, %rs89;
	prmt.b32 	%r1983, %r1981, %r1982, 30212;
	prmt.b32 	%r1834, %r1983, %r1980, 4180;
	mov.b32	{%rs90, %rs91}, %r1929;
	shr.u16 	%rs92, %rs91, 8;
	setp.eq.s16	%p79, %rs92, 32;
	and.b16  	%rs93, %rs91, 255;
	setp.eq.s16	%p80, %rs93, 32;
	shr.u16 	%rs94, %rs90, 8;
	setp.eq.s16	%p81, %rs94, 32;
	and.b16  	%rs95, %rs90, 255;
	setp.eq.s16	%p82, %rs95, 32;
	selp.b16	%rs96, -1, 0, %p82;
	selp.b16	%rs97, -1, 0, %p81;
	selp.b16	%rs98, -1, 0, %p80;
	selp.b16	%rs99, -1, 0, %p79;
	shr.u16 	%rs100, %rs97, 7;
	cvt.u32.u16	%r1984, %rs100;
	shr.u16 	%rs101, %rs96, 7;
	and.b16  	%rs102, %rs101, 255;
	cvt.u32.u16	%r1985, %rs102;
	prmt.b32 	%r1986, %r1984, %r1985, 30212;
	shr.u16 	%rs103, %rs99, 7;
	cvt.u32.u16	%r1987, %rs103;
	shr.u16 	%rs104, %rs98, 7;
	and.b16  	%rs105, %rs104, 255;
	cvt.u32.u16	%r1988, %rs105;
	prmt.b32 	%r1989, %r1987, %r1988, 30212;
	prmt.b32 	%r1830, %r1989, %r1986, 4180;
	mov.b32	{%rs106, %rs107}, %r1941;
	shr.u16 	%rs108, %rs107, 8;
	setp.eq.s16	%p83, %rs108, 32;
	and.b16  	%rs109, %rs107, 255;
	setp.eq.s16	%p84, %rs109, 32;
	shr.u16 	%rs110, %rs106, 8;
	setp.eq.s16	%p85, %rs110, 32;
	and.b16  	%rs111, %rs106, 255;
	setp.eq.s16	%p86, %rs111, 32;
	selp.b16	%rs112, -1, 0, %p86;
	selp.b16	%rs113, -1, 0, %p85;
	selp.b16	%rs114, -1, 0, %p84;
	selp.b16	%rs115, -1, 0, %p83;
	shr.u16 	%rs116, %rs113, 7;
	cvt.u32.u16	%r1990, %rs116;
	shr.u16 	%rs117, %rs112, 7;
	and.b16  	%rs118, %rs117, 255;
	cvt.u32.u16	%r1991, %rs118;
	prmt.b32 	%r1992, %r1990, %r1991, 30212;
	shr.u16 	%rs119, %rs115, 7;
	cvt.u32.u16	%r1993, %rs119;
	shr.u16 	%rs120, %rs114, 7;
	and.b16  	%rs121, %rs120, 255;
	cvt.u32.u16	%r1994, %rs121;
	prmt.b32 	%r1995, %r1993, %r1994, 30212;
	prmt.b32 	%r1826, %r1995, %r1992, 4180;
	mov.b32	{%rs122, %rs123}, %r1953;
	shr.u16 	%rs124, %rs123, 8;
	setp.eq.s16	%p87, %rs124, 32;
	and.b16  	%rs125, %rs123, 255;
	setp.eq.s16	%p88, %rs125, 32;
	shr.u16 	%rs126, %rs122, 8;
	setp.eq.s16	%p89, %rs126, 32;
	and.b16  	%rs127, %rs122, 255;
	setp.eq.s16	%p90, %rs127, 32;
	selp.b16	%rs128, -1, 0, %p90;
	selp.b16	%rs129, -1, 0, %p89;
	selp.b16	%rs130, -1, 0, %p88;
	selp.b16	%rs131, -1, 0, %p87;
	shr.u16 	%rs132, %rs129, 7;
	cvt.u32.u16	%r1996, %rs132;
	shr.u16 	%rs133, %rs128, 7;
	and.b16  	%rs134, %rs133, 255;
	cvt.u32.u16	%r1997, %rs134;
	prmt.b32 	%r1998, %r1996, %r1997, 30212;
	shr.u16 	%rs135, %rs131, 7;
	cvt.u32.u16	%r1999, %rs135;
	shr.u16 	%rs136, %rs130, 7;
	and.b16  	%rs137, %rs136, 255;
	cvt.u32.u16	%r2000, %rs137;
	prmt.b32 	%r2001, %r1999, %r2000, 30212;
	prmt.b32 	%r1827, %r2001, %r1998, 4180;
	mov.u32 	%r1856, 24;
	// inline asm
	shf.r.wrap.b32 %r1825, %r1826, %r1827, %r1856;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1829, %r1830, %r1826, %r1856;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1833, %r1834, %r1830, %r1856;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1837, %r1838, %r1834, %r1856;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1841, %r1842, %r1838, %r1856;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1845, %r1846, %r1842, %r1856;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r1849, %r1850, %r1846, %r1856;
	// inline asm
	mov.u32 	%r1854, 0;
	// inline asm
	shf.r.wrap.b32 %r1853, %r1854, %r1850, %r1856;
	// inline asm
	or.b32  	%r2002, %r1853, 255;
	and.b32  	%r2003, %r1869, 1077952576;
	shr.u32 	%r2004, %r2003, 1;
	and.b32  	%r2005, %r1869, -2139062144;
	shr.u32 	%r2006, %r2005, 2;
	not.b32 	%r2007, %r2006;
	and.b32  	%r2008, %r2004, %r2007;
	and.b32  	%r2009, %r1869, 522133279;
	add.s32 	%r2010, %r2009, 522133279;
	sub.s32 	%r2011, %r1865, %r2009;
	and.b32  	%r2012, %r2008, %r2011;
	and.b32  	%r2013, %r2012, %r2010;
	and.b32  	%r2014, %r2013, %r2002;
	not.b32 	%r2015, %r2014;
	and.b32  	%r10850, %r1869, %r2015;
	and.b32  	%r2016, %r1881, 1077952576;
	shr.u32 	%r2017, %r2016, 1;
	and.b32  	%r2018, %r1881, -2139062144;
	shr.u32 	%r2019, %r2018, 2;
	not.b32 	%r2020, %r2019;
	and.b32  	%r2021, %r2017, %r2020;
	and.b32  	%r2022, %r1881, 522133279;
	add.s32 	%r2023, %r2022, 522133279;
	sub.s32 	%r2024, %r1865, %r2022;
	and.b32  	%r2025, %r2021, %r2024;
	and.b32  	%r2026, %r2025, %r2023;
	and.b32  	%r2027, %r2026, %r1849;
	not.b32 	%r2028, %r2027;
	and.b32  	%r10851, %r1881, %r2028;
	and.b32  	%r2029, %r1893, 1077952576;
	shr.u32 	%r2030, %r2029, 1;
	and.b32  	%r2031, %r1893, -2139062144;
	shr.u32 	%r2032, %r2031, 2;
	not.b32 	%r2033, %r2032;
	and.b32  	%r2034, %r2030, %r2033;
	and.b32  	%r2035, %r1893, 522133279;
	add.s32 	%r2036, %r2035, 522133279;
	sub.s32 	%r2037, %r1865, %r2035;
	and.b32  	%r2038, %r2034, %r2037;
	and.b32  	%r2039, %r2038, %r2036;
	and.b32  	%r2040, %r2039, %r1845;
	not.b32 	%r2041, %r2040;
	and.b32  	%r10852, %r1893, %r2041;
	and.b32  	%r2042, %r1905, 1077952576;
	shr.u32 	%r2043, %r2042, 1;
	and.b32  	%r2044, %r1905, -2139062144;
	shr.u32 	%r2045, %r2044, 2;
	not.b32 	%r2046, %r2045;
	and.b32  	%r2047, %r2043, %r2046;
	and.b32  	%r2048, %r1905, 522133279;
	add.s32 	%r2049, %r2048, 522133279;
	sub.s32 	%r2050, %r1865, %r2048;
	and.b32  	%r2051, %r2047, %r2050;
	and.b32  	%r2052, %r2051, %r2049;
	and.b32  	%r2053, %r2052, %r1841;
	not.b32 	%r2054, %r2053;
	and.b32  	%r10853, %r1905, %r2054;
	and.b32  	%r2055, %r1917, 1077952576;
	shr.u32 	%r2056, %r2055, 1;
	and.b32  	%r2057, %r1917, -2139062144;
	shr.u32 	%r2058, %r2057, 2;
	not.b32 	%r2059, %r2058;
	and.b32  	%r2060, %r2056, %r2059;
	and.b32  	%r2061, %r1917, 522133279;
	add.s32 	%r2062, %r2061, 522133279;
	sub.s32 	%r2063, %r1865, %r2061;
	and.b32  	%r2064, %r2060, %r2063;
	and.b32  	%r2065, %r2064, %r2062;
	and.b32  	%r2066, %r2065, %r1837;
	not.b32 	%r2067, %r2066;
	and.b32  	%r10846, %r1917, %r2067;
	and.b32  	%r2068, %r1929, 1077952576;
	shr.u32 	%r2069, %r2068, 1;
	and.b32  	%r2070, %r1929, -2139062144;
	shr.u32 	%r2071, %r2070, 2;
	not.b32 	%r2072, %r2071;
	and.b32  	%r2073, %r2069, %r2072;
	and.b32  	%r2074, %r1929, 522133279;
	add.s32 	%r2075, %r2074, 522133279;
	sub.s32 	%r2076, %r1865, %r2074;
	and.b32  	%r2077, %r2073, %r2076;
	and.b32  	%r2078, %r2077, %r2075;
	and.b32  	%r2079, %r2078, %r1833;
	not.b32 	%r2080, %r2079;
	and.b32  	%r10847, %r1929, %r2080;
	and.b32  	%r2081, %r1941, 1077952576;
	shr.u32 	%r2082, %r2081, 1;
	and.b32  	%r2083, %r1941, -2139062144;
	shr.u32 	%r2084, %r2083, 2;
	not.b32 	%r2085, %r2084;
	and.b32  	%r2086, %r2082, %r2085;
	and.b32  	%r2087, %r1941, 522133279;
	add.s32 	%r2088, %r2087, 522133279;
	sub.s32 	%r2089, %r1865, %r2087;
	and.b32  	%r2090, %r2086, %r2089;
	and.b32  	%r2091, %r2090, %r2088;
	and.b32  	%r2092, %r2091, %r1829;
	not.b32 	%r2093, %r2092;
	and.b32  	%r10848, %r1941, %r2093;
	and.b32  	%r2094, %r1953, 1077952576;
	shr.u32 	%r2095, %r2094, 1;
	and.b32  	%r2096, %r1953, -2139062144;
	shr.u32 	%r2097, %r2096, 2;
	not.b32 	%r2098, %r2097;
	and.b32  	%r2099, %r2095, %r2098;
	and.b32  	%r2100, %r1953, 522133279;
	add.s32 	%r2101, %r2100, 522133279;
	sub.s32 	%r2102, %r1865, %r2100;
	and.b32  	%r2103, %r2099, %r2102;
	and.b32  	%r2104, %r2103, %r2101;
	and.b32  	%r2105, %r2104, %r1825;
	not.b32 	%r2106, %r2105;
	and.b32  	%r10849, %r1953, %r2106;
	mov.u32 	%r10854, %r19;
	bra.uni 	BB4_1536;

BB4_101:
	setp.gt.s32	%p6, %r1824, 119;
	@%p6 bra 	BB4_115;

	setp.gt.s32	%p13, %r1824, 114;
	@%p13 bra 	BB4_111;

	setp.eq.s32	%p17, %r1824, 113;
	@%p17 bra 	BB4_776;
	bra.uni 	BB4_104;

BB4_776:
	setp.eq.s32	%p506, %r19, 0;
	add.s32 	%r10854, %r19, %r19;
	setp.gt.u32	%p507, %r10854, 31;
	or.pred  	%p508, %p506, %p507;
	@%p508 bra 	BB4_777;

	and.b32  	%r4060, %r23, 255;
	and.b32  	%r4061, %r23, 65280;
	prmt.b32 	%r4062, %r4061, %r4060, 8452;
	bfe.u32 	%r4063, %r23, 16, 8;
	and.b32  	%r4064, %r23, -16777216;
	shr.u32 	%r4065, %r4064, 8;
	or.b32  	%r4066, %r4063, %r4065;
	and.b32  	%r4067, %r22, 65280;
	and.b32  	%r4068, %r22, 255;
	prmt.b32 	%r4069, %r4067, %r4068, 8452;
	bfe.u32 	%r4070, %r22, 16, 8;
	and.b32  	%r4071, %r22, -16777216;
	shr.u32 	%r4072, %r4071, 8;
	or.b32  	%r4073, %r4070, %r4072;
	and.b32  	%r4074, %r21, 65280;
	and.b32  	%r4075, %r21, 255;
	prmt.b32 	%r4076, %r4074, %r4075, 8452;
	bfe.u32 	%r4077, %r21, 16, 8;
	and.b32  	%r4078, %r21, -16777216;
	shr.u32 	%r4079, %r4078, 8;
	or.b32  	%r4080, %r4077, %r4079;
	and.b32  	%r4081, %r20, 65280;
	and.b32  	%r4082, %r20, 255;
	prmt.b32 	%r4083, %r4081, %r4082, 8452;
	bfe.u32 	%r4084, %r20, 16, 8;
	and.b32  	%r4085, %r20, -16777216;
	shr.u32 	%r4086, %r4085, 8;
	or.b32  	%r4087, %r4084, %r4086;
	shl.b32 	%r4088, %r4062, 8;
	or.b32  	%r10850, %r4088, %r4062;
	shl.b32 	%r4089, %r4066, 8;
	or.b32  	%r10851, %r4089, %r4066;
	shl.b32 	%r4090, %r4069, 8;
	or.b32  	%r10852, %r4090, %r4069;
	shl.b32 	%r4091, %r4073, 8;
	or.b32  	%r10853, %r4091, %r4073;
	shl.b32 	%r4092, %r4076, 8;
	or.b32  	%r10846, %r4092, %r4076;
	shl.b32 	%r4093, %r4080, 8;
	or.b32  	%r10847, %r4093, %r4080;
	shl.b32 	%r4094, %r4083, 8;
	or.b32  	%r10848, %r4094, %r4083;
	shl.b32 	%r4095, %r4087, 8;
	or.b32  	%r10849, %r4095, %r4087;
	bra.uni 	BB4_1536;

BB4_22:
	setp.gt.s32	%p47, %r1824, 63;
	@%p47 bra 	BB4_30;

	setp.eq.s32	%p51, %r1824, 45;
	@%p51 bra 	BB4_368;
	bra.uni 	BB4_24;

BB4_368:
	setp.ge.u32	%p269, %r29, %r19;
	@%p269 bra 	BB4_10;

	and.b32  	%r3656, %r28, 3;
	shl.b32 	%r3657, %r3656, 3;
	mov.u32 	%r3658, 255;
	shl.b32 	%r366, %r3658, %r3657;
	not.b32 	%r367, %r366;
	and.b32  	%r368, %r366, 16843009;
	shr.u32 	%r3655, %r29, 2;
	setp.gt.s32	%p270, %r3655, 3;
	@%p270 bra 	BB4_377;

	setp.gt.s32	%p276, %r3655, 1;
	@%p276 bra 	BB4_374;

	setp.eq.s32	%p279, %r3655, 0;
	@%p279 bra 	BB4_387;
	bra.uni 	BB4_372;

BB4_387:
	and.b32  	%r3687, %r23, %r367;
	and.b32  	%r3688, %r366, %r23;
	sub.s32 	%r3689, %r3688, %r368;
	and.b32  	%r3690, %r3689, %r366;
	or.b32  	%r10850, %r3690, %r3687;
	bra.uni 	BB4_612;

BB4_88:
	setp.gt.s32	%p20, %r1824, 107;
	@%p20 bra 	BB4_93;

	setp.eq.s32	%p24, %r1824, 105;
	@%p24 bra 	BB4_1019;
	bra.uni 	BB4_90;

BB4_1019:
	setp.gt.u32	%p692, %r29, %r19;
	add.s32 	%r10854, %r19, 1;
	setp.gt.u32	%p693, %r10854, 31;
	or.pred  	%p694, %p692, %p693;
	@%p694 bra 	BB4_777;

	mov.u32 	%r5033, 24;
	// inline asm
	shf.r.wrap.b32 %r10849, %r25, %r24, %r5033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r26, %r25, %r5033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r27, %r26, %r5033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r20, %r27, %r5033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r21, %r20, %r5033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r22, %r21, %r5033;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r23, %r22, %r5033;
	// inline asm
	and.b32  	%r5035, %r28, 3;
	shl.b32 	%r5036, %r5035, 3;
	shl.b32 	%r936, %r31, %r5036;
	mov.u32 	%r5037, 1;
	shl.b32 	%r5038, %r5037, %r5036;
	add.s32 	%r937, %r5038, -1;
	mov.u32 	%r5039, -256;
	shl.b32 	%r938, %r5039, %r5036;
	shr.u32 	%r5034, %r29, 2;
	setp.gt.s32	%p695, %r5034, 3;
	@%p695 bra 	BB4_1028;

	setp.gt.s32	%p701, %r5034, 1;
	@%p701 bra 	BB4_1025;

	setp.eq.s32	%p704, %r5034, 0;
	@%p704 bra 	BB4_1039;
	bra.uni 	BB4_1023;

BB4_1039:
	mov.u32 	%r5062, 0;
	// inline asm
	shf.r.wrap.b32 %r5061, %r5062, %r23, %r5033;
	// inline asm
	and.b32  	%r5065, %r937, %r23;
	or.b32  	%r5066, %r5065, %r936;
	and.b32  	%r5067, %r5061, %r938;
	or.b32  	%r10850, %r5066, %r5067;
	bra.uni 	BB4_1536;

BB4_57:
	setp.gt.s32	%p34, %r1824, 89;
	@%p34 bra 	BB4_67;

	setp.eq.s32	%p38, %r1824, 84;
	@%p38 bra 	BB4_1512;
	bra.uni 	BB4_59;

BB4_1512:
	setp.ge.u32	%p1018, %r29, %r19;
	@%p1018 bra 	BB4_777;

	and.b32  	%r8195, %r28, 3;
	shl.b32 	%r8196, %r8195, 3;
	mov.u32 	%r8197, 32;
	shl.b32 	%r1715, %r8197, %r8196;
	shr.u32 	%r8194, %r29, 2;
	setp.gt.s32	%p1019, %r8194, 3;
	@%p1019 bra 	BB4_1521;

	setp.gt.s32	%p1025, %r8194, 1;
	@%p1025 bra 	BB4_1518;

	setp.eq.s32	%p1028, %r8194, 0;
	@%p1028 bra 	BB4_1531;
	bra.uni 	BB4_1516;

BB4_1531:
	and.b32  	%r8289, %r23, 1077952576;
	shr.u32 	%r8290, %r8289, 1;
	and.b32  	%r8291, %r23, -2139062144;
	shr.u32 	%r8292, %r8291, 2;
	not.b32 	%r8293, %r8292;
	and.b32  	%r8294, %r8290, %r8293;
	and.b32  	%r8295, %r23, 522133279;
	add.s32 	%r8296, %r8295, 522133279;
	mov.u32 	%r8297, -84215046;
	sub.s32 	%r8298, %r8297, %r8295;
	and.b32  	%r8299, %r8294, %r8298;
	and.b32  	%r8300, %r8299, %r8296;
	and.b32  	%r8301, %r8300, %r1715;
	xor.b32  	%r10850, %r8301, %r23;
	bra.uni 	BB4_1018;

BB4_115:
	setp.gt.s32	%p7, %r1824, 121;
	@%p7 bra 	BB4_124;

	setp.eq.s32	%p11, %r1824, 120;
	@%p11 bra 	BB4_1149;
	bra.uni 	BB4_117;

BB4_1149:
	setp.ge.u32	%p767, %r29, %r19;
	add.s32 	%r5642, %r29, %r31;
	setp.gt.u32	%p768, %r5642, %r19;
	or.pred  	%p769, %p767, %p768;
	@%p769 bra 	BB4_777;

	setp.gt.s32	%p770, %r29, 15;
	@%p770 bra 	BB4_1179;

	setp.gt.s32	%p794, %r29, 7;
	@%p794 bra 	BB4_1164;

	setp.gt.s32	%p806, %r29, 3;
	@%p806 bra 	BB4_1157;

	setp.eq.s32	%p812, %r29, 1;
	@%p812 bra 	BB4_1228;

	setp.eq.s32	%p813, %r29, 2;
	@%p813 bra 	BB4_1227;
	bra.uni 	BB4_1155;

BB4_1227:
	mov.u32 	%r6143, 16;
	// inline asm
	shf.r.wrap.b32 %r10850, %r23, %r22, %r6143;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r22, %r21, %r6143;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r21, %r20, %r6143;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6124, %r20, %r27, %r6143;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r27, %r26, %r6143;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r26, %r25, %r6143;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r25, %r24, %r6143;
	// inline asm
	mov.u32 	%r6142, 0;
	// inline asm
	shf.r.wrap.b32 %r10849, %r24, %r6142, %r6143;
	// inline asm
	mov.u32 	%r24, %r6124;
	bra.uni 	BB4_1234;

BB4_18:
	setp.eq.s32	%p54, %r1824, 42;
	@%p54 bra 	BB4_443;

	setp.eq.s32	%p55, %r1824, 43;
	@%p55 bra 	BB4_388;
	bra.uni 	BB4_20;

BB4_388:
	setp.ge.u32	%p281, %r29, %r19;
	@%p281 bra 	BB4_10;

	and.b32  	%r3692, %r28, 3;
	shl.b32 	%r3693, %r3692, 3;
	mov.u32 	%r3694, 255;
	shl.b32 	%r377, %r3694, %r3693;
	not.b32 	%r378, %r377;
	and.b32  	%r379, %r377, 16843009;
	shr.u32 	%r3691, %r29, 2;
	setp.gt.s32	%p282, %r3691, 3;
	@%p282 bra 	BB4_397;

	setp.gt.s32	%p288, %r3691, 1;
	@%p288 bra 	BB4_394;

	setp.eq.s32	%p291, %r3691, 0;
	@%p291 bra 	BB4_407;
	bra.uni 	BB4_392;

BB4_407:
	and.b32  	%r3723, %r23, %r378;
	and.b32  	%r3724, %r377, %r23;
	add.s32 	%r3725, %r3724, %r379;
	and.b32  	%r3726, %r3725, %r377;
	or.b32  	%r10850, %r3726, %r3723;
	bra.uni 	BB4_612;

BB4_78:
	setp.eq.s32	%p27, %r1824, 100;
	@%p27 bra 	BB4_1414;

	setp.eq.s32	%p28, %r1824, 101;
	@%p28 bra 	BB4_134;
	bra.uni 	BB4_80;

BB4_134:
	and.b32  	%r2139, %r23, 1077952576;
	shr.u32 	%r2140, %r2139, 1;
	and.b32  	%r2141, %r23, -2139062144;
	shr.u32 	%r2142, %r2141, 2;
	not.b32 	%r2143, %r2142;
	and.b32  	%r2144, %r2140, %r2143;
	and.b32  	%r2145, %r23, 522133279;
	add.s32 	%r2146, %r2145, 522133279;
	mov.u32 	%r2147, -84215046;
	sub.s32 	%r2148, %r2147, %r2145;
	and.b32  	%r2149, %r2144, %r2148;
	and.b32  	%r2150, %r2149, %r2146;
	or.b32  	%r2151, %r2150, %r23;
	and.b32  	%r2152, %r22, 1077952576;
	shr.u32 	%r2153, %r2152, 1;
	and.b32  	%r2154, %r22, -2139062144;
	shr.u32 	%r2155, %r2154, 2;
	not.b32 	%r2156, %r2155;
	and.b32  	%r2157, %r2153, %r2156;
	and.b32  	%r2158, %r22, 522133279;
	add.s32 	%r2159, %r2158, 522133279;
	sub.s32 	%r2160, %r2147, %r2158;
	and.b32  	%r2161, %r2157, %r2160;
	and.b32  	%r2162, %r2161, %r2159;
	or.b32  	%r2163, %r2162, %r22;
	and.b32  	%r2164, %r21, 1077952576;
	shr.u32 	%r2165, %r2164, 1;
	and.b32  	%r2166, %r21, -2139062144;
	shr.u32 	%r2167, %r2166, 2;
	not.b32 	%r2168, %r2167;
	and.b32  	%r2169, %r2165, %r2168;
	and.b32  	%r2170, %r21, 522133279;
	add.s32 	%r2171, %r2170, 522133279;
	sub.s32 	%r2172, %r2147, %r2170;
	and.b32  	%r2173, %r2169, %r2172;
	and.b32  	%r2174, %r2173, %r2171;
	or.b32  	%r2175, %r2174, %r21;
	and.b32  	%r2176, %r20, 1077952576;
	shr.u32 	%r2177, %r2176, 1;
	and.b32  	%r2178, %r20, -2139062144;
	shr.u32 	%r2179, %r2178, 2;
	not.b32 	%r2180, %r2179;
	and.b32  	%r2181, %r2177, %r2180;
	and.b32  	%r2182, %r20, 522133279;
	add.s32 	%r2183, %r2182, 522133279;
	sub.s32 	%r2184, %r2147, %r2182;
	and.b32  	%r2185, %r2181, %r2184;
	and.b32  	%r2186, %r2185, %r2183;
	or.b32  	%r2187, %r2186, %r20;
	and.b32  	%r2188, %r27, 1077952576;
	shr.u32 	%r2189, %r2188, 1;
	and.b32  	%r2190, %r27, -2139062144;
	shr.u32 	%r2191, %r2190, 2;
	not.b32 	%r2192, %r2191;
	and.b32  	%r2193, %r2189, %r2192;
	and.b32  	%r2194, %r27, 522133279;
	add.s32 	%r2195, %r2194, 522133279;
	sub.s32 	%r2196, %r2147, %r2194;
	and.b32  	%r2197, %r2193, %r2196;
	and.b32  	%r2198, %r2197, %r2195;
	or.b32  	%r2199, %r2198, %r27;
	and.b32  	%r2200, %r26, 1077952576;
	shr.u32 	%r2201, %r2200, 1;
	and.b32  	%r2202, %r26, -2139062144;
	shr.u32 	%r2203, %r2202, 2;
	not.b32 	%r2204, %r2203;
	and.b32  	%r2205, %r2201, %r2204;
	and.b32  	%r2206, %r26, 522133279;
	add.s32 	%r2207, %r2206, 522133279;
	sub.s32 	%r2208, %r2147, %r2206;
	and.b32  	%r2209, %r2205, %r2208;
	and.b32  	%r2210, %r2209, %r2207;
	or.b32  	%r2211, %r2210, %r26;
	and.b32  	%r2212, %r25, 1077952576;
	shr.u32 	%r2213, %r2212, 1;
	and.b32  	%r2214, %r25, -2139062144;
	shr.u32 	%r2215, %r2214, 2;
	not.b32 	%r2216, %r2215;
	and.b32  	%r2217, %r2213, %r2216;
	and.b32  	%r2218, %r25, 522133279;
	add.s32 	%r2219, %r2218, 522133279;
	sub.s32 	%r2220, %r2147, %r2218;
	and.b32  	%r2221, %r2217, %r2220;
	and.b32  	%r2222, %r2221, %r2219;
	or.b32  	%r2223, %r2222, %r25;
	and.b32  	%r2224, %r24, 1077952576;
	shr.u32 	%r2225, %r2224, 1;
	and.b32  	%r2226, %r24, -2139062144;
	shr.u32 	%r2227, %r2226, 2;
	not.b32 	%r2228, %r2227;
	and.b32  	%r2229, %r2225, %r2228;
	and.b32  	%r2230, %r24, 522133279;
	add.s32 	%r2231, %r2230, 522133279;
	sub.s32 	%r2232, %r2147, %r2230;
	and.b32  	%r2233, %r2229, %r2232;
	and.b32  	%r2234, %r2233, %r2231;
	or.b32  	%r2235, %r2234, %r24;
	mov.b32	{%rs138, %rs139}, %r2151;
	shr.u16 	%rs140, %rs139, 8;
	cvt.u16.u32	%rs141, %r28;
	and.b16  	%rs142, %rs141, 255;
	setp.eq.s16	%p91, %rs140, %rs142;
	and.b16  	%rs143, %rs139, 255;
	setp.eq.s16	%p92, %rs143, %rs142;
	shr.u16 	%rs144, %rs138, 8;
	setp.eq.s16	%p93, %rs144, %rs142;
	and.b16  	%rs145, %rs138, 255;
	setp.eq.s16	%p94, %rs145, %rs142;
	selp.b16	%rs146, -1, 0, %p94;
	selp.b16	%rs147, -1, 0, %p93;
	selp.b16	%rs148, -1, 0, %p92;
	selp.b16	%rs149, -1, 0, %p91;
	shr.u16 	%rs150, %rs147, 7;
	cvt.u32.u16	%r2236, %rs150;
	shr.u16 	%rs151, %rs146, 7;
	and.b16  	%rs152, %rs151, 255;
	cvt.u32.u16	%r2237, %rs152;
	prmt.b32 	%r2238, %r2236, %r2237, 30212;
	shr.u16 	%rs153, %rs149, 7;
	cvt.u32.u16	%r2239, %rs153;
	shr.u16 	%rs154, %rs148, 7;
	and.b16  	%rs155, %rs154, 255;
	cvt.u32.u16	%r2240, %rs155;
	prmt.b32 	%r2241, %r2239, %r2240, 30212;
	prmt.b32 	%r2132, %r2241, %r2238, 4180;
	mov.b32	{%rs156, %rs157}, %r2163;
	shr.u16 	%rs158, %rs157, 8;
	setp.eq.s16	%p95, %rs158, %rs142;
	and.b16  	%rs159, %rs157, 255;
	setp.eq.s16	%p96, %rs159, %rs142;
	shr.u16 	%rs160, %rs156, 8;
	setp.eq.s16	%p97, %rs160, %rs142;
	and.b16  	%rs161, %rs156, 255;
	setp.eq.s16	%p98, %rs161, %rs142;
	selp.b16	%rs162, -1, 0, %p98;
	selp.b16	%rs163, -1, 0, %p97;
	selp.b16	%rs164, -1, 0, %p96;
	selp.b16	%rs165, -1, 0, %p95;
	shr.u16 	%rs166, %rs163, 7;
	cvt.u32.u16	%r2242, %rs166;
	shr.u16 	%rs167, %rs162, 7;
	and.b16  	%rs168, %rs167, 255;
	cvt.u32.u16	%r2243, %rs168;
	prmt.b32 	%r2244, %r2242, %r2243, 30212;
	shr.u16 	%rs169, %rs165, 7;
	cvt.u32.u16	%r2245, %rs169;
	shr.u16 	%rs170, %rs164, 7;
	and.b16  	%rs171, %rs170, 255;
	cvt.u32.u16	%r2246, %rs171;
	prmt.b32 	%r2247, %r2245, %r2246, 30212;
	prmt.b32 	%r2128, %r2247, %r2244, 4180;
	mov.b32	{%rs172, %rs173}, %r2175;
	shr.u16 	%rs174, %rs173, 8;
	setp.eq.s16	%p99, %rs174, %rs142;
	and.b16  	%rs175, %rs173, 255;
	setp.eq.s16	%p100, %rs175, %rs142;
	shr.u16 	%rs176, %rs172, 8;
	setp.eq.s16	%p101, %rs176, %rs142;
	and.b16  	%rs177, %rs172, 255;
	setp.eq.s16	%p102, %rs177, %rs142;
	selp.b16	%rs178, -1, 0, %p102;
	selp.b16	%rs179, -1, 0, %p101;
	selp.b16	%rs180, -1, 0, %p100;
	selp.b16	%rs181, -1, 0, %p99;
	shr.u16 	%rs182, %rs179, 7;
	cvt.u32.u16	%r2248, %rs182;
	shr.u16 	%rs183, %rs178, 7;
	and.b16  	%rs184, %rs183, 255;
	cvt.u32.u16	%r2249, %rs184;
	prmt.b32 	%r2250, %r2248, %r2249, 30212;
	shr.u16 	%rs185, %rs181, 7;
	cvt.u32.u16	%r2251, %rs185;
	shr.u16 	%rs186, %rs180, 7;
	and.b16  	%rs187, %rs186, 255;
	cvt.u32.u16	%r2252, %rs187;
	prmt.b32 	%r2253, %r2251, %r2252, 30212;
	prmt.b32 	%r2124, %r2253, %r2250, 4180;
	mov.b32	{%rs188, %rs189}, %r2187;
	shr.u16 	%rs190, %rs189, 8;
	setp.eq.s16	%p103, %rs190, %rs142;
	and.b16  	%rs191, %rs189, 255;
	setp.eq.s16	%p104, %rs191, %rs142;
	shr.u16 	%rs192, %rs188, 8;
	setp.eq.s16	%p105, %rs192, %rs142;
	and.b16  	%rs193, %rs188, 255;
	setp.eq.s16	%p106, %rs193, %rs142;
	selp.b16	%rs194, -1, 0, %p106;
	selp.b16	%rs195, -1, 0, %p105;
	selp.b16	%rs196, -1, 0, %p104;
	selp.b16	%rs197, -1, 0, %p103;
	shr.u16 	%rs198, %rs195, 7;
	cvt.u32.u16	%r2254, %rs198;
	shr.u16 	%rs199, %rs194, 7;
	and.b16  	%rs200, %rs199, 255;
	cvt.u32.u16	%r2255, %rs200;
	prmt.b32 	%r2256, %r2254, %r2255, 30212;
	shr.u16 	%rs201, %rs197, 7;
	cvt.u32.u16	%r2257, %rs201;
	shr.u16 	%rs202, %rs196, 7;
	and.b16  	%rs203, %rs202, 255;
	cvt.u32.u16	%r2258, %rs203;
	prmt.b32 	%r2259, %r2257, %r2258, 30212;
	prmt.b32 	%r2120, %r2259, %r2256, 4180;
	mov.b32	{%rs204, %rs205}, %r2199;
	shr.u16 	%rs206, %rs205, 8;
	setp.eq.s16	%p107, %rs206, %rs142;
	and.b16  	%rs207, %rs205, 255;
	setp.eq.s16	%p108, %rs207, %rs142;
	shr.u16 	%rs208, %rs204, 8;
	setp.eq.s16	%p109, %rs208, %rs142;
	and.b16  	%rs209, %rs204, 255;
	setp.eq.s16	%p110, %rs209, %rs142;
	selp.b16	%rs210, -1, 0, %p110;
	selp.b16	%rs211, -1, 0, %p109;
	selp.b16	%rs212, -1, 0, %p108;
	selp.b16	%rs213, -1, 0, %p107;
	shr.u16 	%rs214, %rs211, 7;
	cvt.u32.u16	%r2260, %rs214;
	shr.u16 	%rs215, %rs210, 7;
	and.b16  	%rs216, %rs215, 255;
	cvt.u32.u16	%r2261, %rs216;
	prmt.b32 	%r2262, %r2260, %r2261, 30212;
	shr.u16 	%rs217, %rs213, 7;
	cvt.u32.u16	%r2263, %rs217;
	shr.u16 	%rs218, %rs212, 7;
	and.b16  	%rs219, %rs218, 255;
	cvt.u32.u16	%r2264, %rs219;
	prmt.b32 	%r2265, %r2263, %r2264, 30212;
	prmt.b32 	%r2116, %r2265, %r2262, 4180;
	mov.b32	{%rs220, %rs221}, %r2211;
	shr.u16 	%rs222, %rs221, 8;
	setp.eq.s16	%p111, %rs222, %rs142;
	and.b16  	%rs223, %rs221, 255;
	setp.eq.s16	%p112, %rs223, %rs142;
	shr.u16 	%rs224, %rs220, 8;
	setp.eq.s16	%p113, %rs224, %rs142;
	and.b16  	%rs225, %rs220, 255;
	setp.eq.s16	%p114, %rs225, %rs142;
	selp.b16	%rs226, -1, 0, %p114;
	selp.b16	%rs227, -1, 0, %p113;
	selp.b16	%rs228, -1, 0, %p112;
	selp.b16	%rs229, -1, 0, %p111;
	shr.u16 	%rs230, %rs227, 7;
	cvt.u32.u16	%r2266, %rs230;
	shr.u16 	%rs231, %rs226, 7;
	and.b16  	%rs232, %rs231, 255;
	cvt.u32.u16	%r2267, %rs232;
	prmt.b32 	%r2268, %r2266, %r2267, 30212;
	shr.u16 	%rs233, %rs229, 7;
	cvt.u32.u16	%r2269, %rs233;
	shr.u16 	%rs234, %rs228, 7;
	and.b16  	%rs235, %rs234, 255;
	cvt.u32.u16	%r2270, %rs235;
	prmt.b32 	%r2271, %r2269, %r2270, 30212;
	prmt.b32 	%r2112, %r2271, %r2268, 4180;
	mov.b32	{%rs236, %rs237}, %r2223;
	shr.u16 	%rs238, %rs237, 8;
	setp.eq.s16	%p115, %rs238, %rs142;
	and.b16  	%rs239, %rs237, 255;
	setp.eq.s16	%p116, %rs239, %rs142;
	shr.u16 	%rs240, %rs236, 8;
	setp.eq.s16	%p117, %rs240, %rs142;
	and.b16  	%rs241, %rs236, 255;
	setp.eq.s16	%p118, %rs241, %rs142;
	selp.b16	%rs242, -1, 0, %p118;
	selp.b16	%rs243, -1, 0, %p117;
	selp.b16	%rs244, -1, 0, %p116;
	selp.b16	%rs245, -1, 0, %p115;
	shr.u16 	%rs246, %rs243, 7;
	cvt.u32.u16	%r2272, %rs246;
	shr.u16 	%rs247, %rs242, 7;
	and.b16  	%rs248, %rs247, 255;
	cvt.u32.u16	%r2273, %rs248;
	prmt.b32 	%r2274, %r2272, %r2273, 30212;
	shr.u16 	%rs249, %rs245, 7;
	cvt.u32.u16	%r2275, %rs249;
	shr.u16 	%rs250, %rs244, 7;
	and.b16  	%rs251, %rs250, 255;
	cvt.u32.u16	%r2276, %rs251;
	prmt.b32 	%r2277, %r2275, %r2276, 30212;
	prmt.b32 	%r2108, %r2277, %r2274, 4180;
	mov.b32	{%rs252, %rs253}, %r2235;
	shr.u16 	%rs254, %rs253, 8;
	setp.eq.s16	%p119, %rs254, %rs142;
	and.b16  	%rs255, %rs253, 255;
	setp.eq.s16	%p120, %rs255, %rs142;
	shr.u16 	%rs256, %rs252, 8;
	setp.eq.s16	%p121, %rs256, %rs142;
	and.b16  	%rs257, %rs252, 255;
	setp.eq.s16	%p122, %rs257, %rs142;
	selp.b16	%rs258, -1, 0, %p122;
	selp.b16	%rs259, -1, 0, %p121;
	selp.b16	%rs260, -1, 0, %p120;
	selp.b16	%rs261, -1, 0, %p119;
	shr.u16 	%rs262, %rs259, 7;
	cvt.u32.u16	%r2278, %rs262;
	shr.u16 	%rs263, %rs258, 7;
	and.b16  	%rs264, %rs263, 255;
	cvt.u32.u16	%r2279, %rs264;
	prmt.b32 	%r2280, %r2278, %r2279, 30212;
	shr.u16 	%rs265, %rs261, 7;
	cvt.u32.u16	%r2281, %rs265;
	shr.u16 	%rs266, %rs260, 7;
	and.b16  	%rs267, %rs266, 255;
	cvt.u32.u16	%r2282, %rs267;
	prmt.b32 	%r2283, %r2281, %r2282, 30212;
	prmt.b32 	%r2109, %r2283, %r2280, 4180;
	mov.u32 	%r2138, 24;
	// inline asm
	shf.r.wrap.b32 %r2107, %r2108, %r2109, %r2138;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2111, %r2112, %r2108, %r2138;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2115, %r2116, %r2112, %r2138;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2119, %r2120, %r2116, %r2138;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2123, %r2124, %r2120, %r2138;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2127, %r2128, %r2124, %r2138;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r2131, %r2132, %r2128, %r2138;
	// inline asm
	mov.u32 	%r2136, 0;
	// inline asm
	shf.r.wrap.b32 %r2135, %r2136, %r2132, %r2138;
	// inline asm
	or.b32  	%r2284, %r2135, 255;
	and.b32  	%r2285, %r2151, 1077952576;
	shr.u32 	%r2286, %r2285, 1;
	and.b32  	%r2287, %r2151, -2139062144;
	shr.u32 	%r2288, %r2287, 2;
	not.b32 	%r2289, %r2288;
	and.b32  	%r2290, %r2286, %r2289;
	and.b32  	%r2291, %r2151, 522133279;
	add.s32 	%r2292, %r2291, 522133279;
	sub.s32 	%r2293, %r2147, %r2291;
	and.b32  	%r2294, %r2290, %r2293;
	and.b32  	%r2295, %r2294, %r2292;
	and.b32  	%r2296, %r2295, %r2284;
	not.b32 	%r2297, %r2296;
	and.b32  	%r10850, %r2151, %r2297;
	and.b32  	%r2298, %r2163, 1077952576;
	shr.u32 	%r2299, %r2298, 1;
	and.b32  	%r2300, %r2163, -2139062144;
	shr.u32 	%r2301, %r2300, 2;
	not.b32 	%r2302, %r2301;
	and.b32  	%r2303, %r2299, %r2302;
	and.b32  	%r2304, %r2163, 522133279;
	add.s32 	%r2305, %r2304, 522133279;
	sub.s32 	%r2306, %r2147, %r2304;
	and.b32  	%r2307, %r2303, %r2306;
	and.b32  	%r2308, %r2307, %r2305;
	and.b32  	%r2309, %r2308, %r2131;
	not.b32 	%r2310, %r2309;
	and.b32  	%r10851, %r2163, %r2310;
	and.b32  	%r2311, %r2175, 1077952576;
	shr.u32 	%r2312, %r2311, 1;
	and.b32  	%r2313, %r2175, -2139062144;
	shr.u32 	%r2314, %r2313, 2;
	not.b32 	%r2315, %r2314;
	and.b32  	%r2316, %r2312, %r2315;
	and.b32  	%r2317, %r2175, 522133279;
	add.s32 	%r2318, %r2317, 522133279;
	sub.s32 	%r2319, %r2147, %r2317;
	and.b32  	%r2320, %r2316, %r2319;
	and.b32  	%r2321, %r2320, %r2318;
	and.b32  	%r2322, %r2321, %r2127;
	not.b32 	%r2323, %r2322;
	and.b32  	%r10852, %r2175, %r2323;
	and.b32  	%r2324, %r2187, 1077952576;
	shr.u32 	%r2325, %r2324, 1;
	and.b32  	%r2326, %r2187, -2139062144;
	shr.u32 	%r2327, %r2326, 2;
	not.b32 	%r2328, %r2327;
	and.b32  	%r2329, %r2325, %r2328;
	and.b32  	%r2330, %r2187, 522133279;
	add.s32 	%r2331, %r2330, 522133279;
	sub.s32 	%r2332, %r2147, %r2330;
	and.b32  	%r2333, %r2329, %r2332;
	and.b32  	%r2334, %r2333, %r2331;
	and.b32  	%r2335, %r2334, %r2123;
	not.b32 	%r2336, %r2335;
	and.b32  	%r10853, %r2187, %r2336;
	and.b32  	%r2337, %r2199, 1077952576;
	shr.u32 	%r2338, %r2337, 1;
	and.b32  	%r2339, %r2199, -2139062144;
	shr.u32 	%r2340, %r2339, 2;
	not.b32 	%r2341, %r2340;
	and.b32  	%r2342, %r2338, %r2341;
	and.b32  	%r2343, %r2199, 522133279;
	add.s32 	%r2344, %r2343, 522133279;
	sub.s32 	%r2345, %r2147, %r2343;
	and.b32  	%r2346, %r2342, %r2345;
	and.b32  	%r2347, %r2346, %r2344;
	and.b32  	%r2348, %r2347, %r2119;
	not.b32 	%r2349, %r2348;
	and.b32  	%r10846, %r2199, %r2349;
	and.b32  	%r2350, %r2211, 1077952576;
	shr.u32 	%r2351, %r2350, 1;
	and.b32  	%r2352, %r2211, -2139062144;
	shr.u32 	%r2353, %r2352, 2;
	not.b32 	%r2354, %r2353;
	and.b32  	%r2355, %r2351, %r2354;
	and.b32  	%r2356, %r2211, 522133279;
	add.s32 	%r2357, %r2356, 522133279;
	sub.s32 	%r2358, %r2147, %r2356;
	and.b32  	%r2359, %r2355, %r2358;
	and.b32  	%r2360, %r2359, %r2357;
	and.b32  	%r2361, %r2360, %r2115;
	not.b32 	%r2362, %r2361;
	and.b32  	%r10847, %r2211, %r2362;
	and.b32  	%r2363, %r2223, 1077952576;
	shr.u32 	%r2364, %r2363, 1;
	and.b32  	%r2365, %r2223, -2139062144;
	shr.u32 	%r2366, %r2365, 2;
	not.b32 	%r2367, %r2366;
	and.b32  	%r2368, %r2364, %r2367;
	and.b32  	%r2369, %r2223, 522133279;
	add.s32 	%r2370, %r2369, 522133279;
	sub.s32 	%r2371, %r2147, %r2369;
	and.b32  	%r2372, %r2368, %r2371;
	and.b32  	%r2373, %r2372, %r2370;
	and.b32  	%r2374, %r2373, %r2111;
	not.b32 	%r2375, %r2374;
	and.b32  	%r10848, %r2223, %r2375;
	and.b32  	%r2376, %r2235, 1077952576;
	shr.u32 	%r2377, %r2376, 1;
	and.b32  	%r2378, %r2235, -2139062144;
	shr.u32 	%r2379, %r2378, 2;
	not.b32 	%r2380, %r2379;
	and.b32  	%r2381, %r2377, %r2380;
	and.b32  	%r2382, %r2235, 522133279;
	add.s32 	%r2383, %r2382, 522133279;
	sub.s32 	%r2384, %r2147, %r2382;
	and.b32  	%r2385, %r2381, %r2384;
	and.b32  	%r2386, %r2385, %r2383;
	and.b32  	%r2387, %r2386, %r2107;
	not.b32 	%r2388, %r2387;
	and.b32  	%r10849, %r2235, %r2388;
	mov.u32 	%r10854, %r19;
	bra.uni 	BB4_1536;

BB4_49:
	setp.eq.s32	%p41, %r1824, 76;
	@%p41 bra 	BB4_423;

	setp.eq.s32	%p42, %r1824, 79;
	@%p42 bra 	BB4_1040;
	bra.uni 	BB4_51;

BB4_1040:
	setp.ge.u32	%p706, %r29, %r19;
	add.s32 	%r5068, %r29, %r31;
	setp.gt.u32	%p707, %r5068, %r19;
	or.pred  	%p708, %p706, %p707;
	@%p708 bra 	BB4_777;

	mov.u32 	%r10849, 0;
	setp.gt.s32	%p709, %r31, 15;
	@%p709 bra 	BB4_1074;

	setp.gt.s32	%p733, %r31, 7;
	@%p733 bra 	BB4_1058;

	setp.gt.s32	%p745, %r31, 3;
	@%p745 bra 	BB4_1051;

	setp.gt.s32	%p751, %r31, 1;
	@%p751 bra 	BB4_1048;

	setp.eq.s32	%p754, %r31, 0;
	@%p754 bra 	BB4_1126;
	bra.uni 	BB4_1046;

BB4_1126:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10768, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	mov.u32 	%r10853, %r20;
	bra.uni 	BB4_1127;

BB4_111:
	setp.eq.s32	%p14, %r1824, 115;
	@%p14 bra 	BB4_968;

	setp.eq.s32	%p15, %r1824, 116;
	@%p15 bra 	BB4_1532;
	bra.uni 	BB4_113;

BB4_1532:
	and.b32  	%r8302, %r23, 1077952576;
	shr.u32 	%r8303, %r8302, 1;
	and.b32  	%r8304, %r23, -2139062144;
	shr.u32 	%r8305, %r8304, 2;
	not.b32 	%r8306, %r8305;
	and.b32  	%r8307, %r8303, %r8306;
	and.b32  	%r8308, %r23, 522133279;
	add.s32 	%r8309, %r8308, 522133279;
	mov.u32 	%r8310, -84215046;
	sub.s32 	%r8311, %r8310, %r8308;
	and.b32  	%r8312, %r8307, %r8311;
	and.b32  	%r8313, %r8312, %r8309;
	xor.b32  	%r10850, %r8313, %r23;
	and.b32  	%r8314, %r22, 1077952576;
	shr.u32 	%r8315, %r8314, 1;
	and.b32  	%r8316, %r22, -2139062144;
	shr.u32 	%r8317, %r8316, 2;
	not.b32 	%r8318, %r8317;
	and.b32  	%r8319, %r8315, %r8318;
	and.b32  	%r8320, %r22, 522133279;
	add.s32 	%r8321, %r8320, 522133279;
	sub.s32 	%r8322, %r8310, %r8320;
	and.b32  	%r8323, %r8319, %r8322;
	and.b32  	%r8324, %r8323, %r8321;
	xor.b32  	%r10851, %r8324, %r22;
	and.b32  	%r8325, %r21, 1077952576;
	shr.u32 	%r8326, %r8325, 1;
	and.b32  	%r8327, %r21, -2139062144;
	shr.u32 	%r8328, %r8327, 2;
	not.b32 	%r8329, %r8328;
	and.b32  	%r8330, %r8326, %r8329;
	and.b32  	%r8331, %r21, 522133279;
	add.s32 	%r8332, %r8331, 522133279;
	sub.s32 	%r8333, %r8310, %r8331;
	and.b32  	%r8334, %r8330, %r8333;
	and.b32  	%r8335, %r8334, %r8332;
	xor.b32  	%r10852, %r8335, %r21;
	and.b32  	%r8336, %r20, 1077952576;
	shr.u32 	%r8337, %r8336, 1;
	and.b32  	%r8338, %r20, -2139062144;
	shr.u32 	%r8339, %r8338, 2;
	not.b32 	%r8340, %r8339;
	and.b32  	%r8341, %r8337, %r8340;
	and.b32  	%r8342, %r20, 522133279;
	add.s32 	%r8343, %r8342, 522133279;
	sub.s32 	%r8344, %r8310, %r8342;
	and.b32  	%r8345, %r8341, %r8344;
	and.b32  	%r8346, %r8345, %r8343;
	xor.b32  	%r10853, %r8346, %r20;
	and.b32  	%r8347, %r27, 1077952576;
	shr.u32 	%r8348, %r8347, 1;
	and.b32  	%r8349, %r27, -2139062144;
	shr.u32 	%r8350, %r8349, 2;
	not.b32 	%r8351, %r8350;
	and.b32  	%r8352, %r8348, %r8351;
	and.b32  	%r8353, %r27, 522133279;
	add.s32 	%r8354, %r8353, 522133279;
	sub.s32 	%r8355, %r8310, %r8353;
	and.b32  	%r8356, %r8352, %r8355;
	and.b32  	%r8357, %r8356, %r8354;
	xor.b32  	%r10846, %r8357, %r27;
	and.b32  	%r8358, %r26, 1077952576;
	shr.u32 	%r8359, %r8358, 1;
	and.b32  	%r8360, %r26, -2139062144;
	shr.u32 	%r8361, %r8360, 2;
	not.b32 	%r8362, %r8361;
	and.b32  	%r8363, %r8359, %r8362;
	and.b32  	%r8364, %r26, 522133279;
	add.s32 	%r8365, %r8364, 522133279;
	sub.s32 	%r8366, %r8310, %r8364;
	and.b32  	%r8367, %r8363, %r8366;
	and.b32  	%r8368, %r8367, %r8365;
	xor.b32  	%r10847, %r8368, %r26;
	and.b32  	%r8369, %r25, 1077952576;
	shr.u32 	%r8370, %r8369, 1;
	and.b32  	%r8371, %r25, -2139062144;
	shr.u32 	%r8372, %r8371, 2;
	not.b32 	%r8373, %r8372;
	and.b32  	%r8374, %r8370, %r8373;
	and.b32  	%r8375, %r25, 522133279;
	add.s32 	%r8376, %r8375, 522133279;
	sub.s32 	%r8377, %r8310, %r8375;
	and.b32  	%r8378, %r8374, %r8377;
	and.b32  	%r8379, %r8378, %r8376;
	xor.b32  	%r10848, %r8379, %r25;
	and.b32  	%r8380, %r24, 1077952576;
	shr.u32 	%r8381, %r8380, 1;
	and.b32  	%r8382, %r24, -2139062144;
	shr.u32 	%r8383, %r8382, 2;
	not.b32 	%r8384, %r8383;
	and.b32  	%r8385, %r8381, %r8384;
	and.b32  	%r8386, %r24, 522133279;
	add.s32 	%r8387, %r8386, 522133279;
	sub.s32 	%r8388, %r8310, %r8386;
	and.b32  	%r8389, %r8385, %r8388;
	and.b32  	%r8390, %r8389, %r8387;
	xor.b32  	%r10849, %r8390, %r24;
	bra.uni 	BB4_1535;

BB4_30:
	setp.eq.s32	%p48, %r1824, 64;
	@%p48 bra 	BB4_943;

	setp.eq.s32	%p49, %r1824, 67;
	@%p49 bra 	BB4_1533;
	bra.uni 	BB4_32;

BB4_1533:
	and.b32  	%r8391, %r23, 1077952576;
	shr.u32 	%r8392, %r8391, 1;
	and.b32  	%r8393, %r23, -2139062144;
	shr.u32 	%r8394, %r8393, 2;
	not.b32 	%r8395, %r8394;
	and.b32  	%r8396, %r8392, %r8395;
	and.b32  	%r8397, %r23, 522133279;
	add.s32 	%r8398, %r8397, 522133279;
	mov.u32 	%r8399, -84215046;
	sub.s32 	%r8400, %r8399, %r8397;
	and.b32  	%r8401, %r8396, %r8400;
	and.b32  	%r8402, %r8401, %r8398;
	not.b32 	%r8403, %r8402;
	and.b32  	%r8404, %r22, 1077952576;
	shr.u32 	%r8405, %r8404, 1;
	and.b32  	%r8406, %r22, -2139062144;
	shr.u32 	%r8407, %r8406, 2;
	not.b32 	%r8408, %r8407;
	and.b32  	%r8409, %r8405, %r8408;
	and.b32  	%r8410, %r22, 522133279;
	add.s32 	%r8411, %r8410, 522133279;
	sub.s32 	%r8412, %r8399, %r8410;
	and.b32  	%r8413, %r8409, %r8412;
	and.b32  	%r8414, %r8413, %r8411;
	not.b32 	%r8415, %r8414;
	and.b32  	%r10851, %r22, %r8415;
	and.b32  	%r8416, %r21, 1077952576;
	shr.u32 	%r8417, %r8416, 1;
	and.b32  	%r8418, %r21, -2139062144;
	shr.u32 	%r8419, %r8418, 2;
	not.b32 	%r8420, %r8419;
	and.b32  	%r8421, %r8417, %r8420;
	and.b32  	%r8422, %r21, 522133279;
	add.s32 	%r8423, %r8422, 522133279;
	sub.s32 	%r8424, %r8399, %r8422;
	and.b32  	%r8425, %r8421, %r8424;
	and.b32  	%r8426, %r8425, %r8423;
	not.b32 	%r8427, %r8426;
	and.b32  	%r10852, %r21, %r8427;
	and.b32  	%r8428, %r20, 1077952576;
	shr.u32 	%r8429, %r8428, 1;
	and.b32  	%r8430, %r20, -2139062144;
	shr.u32 	%r8431, %r8430, 2;
	not.b32 	%r8432, %r8431;
	and.b32  	%r8433, %r8429, %r8432;
	and.b32  	%r8434, %r20, 522133279;
	add.s32 	%r8435, %r8434, 522133279;
	sub.s32 	%r8436, %r8399, %r8434;
	and.b32  	%r8437, %r8433, %r8436;
	and.b32  	%r8438, %r8437, %r8435;
	not.b32 	%r8439, %r8438;
	and.b32  	%r10853, %r20, %r8439;
	and.b32  	%r8440, %r27, 1077952576;
	shr.u32 	%r8441, %r8440, 1;
	and.b32  	%r8442, %r27, -2139062144;
	shr.u32 	%r8443, %r8442, 2;
	not.b32 	%r8444, %r8443;
	and.b32  	%r8445, %r8441, %r8444;
	and.b32  	%r8446, %r27, 522133279;
	add.s32 	%r8447, %r8446, 522133279;
	sub.s32 	%r8448, %r8399, %r8446;
	and.b32  	%r8449, %r8445, %r8448;
	and.b32  	%r8450, %r8449, %r8447;
	not.b32 	%r8451, %r8450;
	and.b32  	%r10846, %r27, %r8451;
	and.b32  	%r8452, %r26, 1077952576;
	shr.u32 	%r8453, %r8452, 1;
	and.b32  	%r8454, %r26, -2139062144;
	shr.u32 	%r8455, %r8454, 2;
	not.b32 	%r8456, %r8455;
	and.b32  	%r8457, %r8453, %r8456;
	and.b32  	%r8458, %r26, 522133279;
	add.s32 	%r8459, %r8458, 522133279;
	sub.s32 	%r8460, %r8399, %r8458;
	and.b32  	%r8461, %r8457, %r8460;
	and.b32  	%r8462, %r8461, %r8459;
	not.b32 	%r8463, %r8462;
	and.b32  	%r10847, %r26, %r8463;
	and.b32  	%r8464, %r25, 1077952576;
	shr.u32 	%r8465, %r8464, 1;
	and.b32  	%r8466, %r25, -2139062144;
	shr.u32 	%r8467, %r8466, 2;
	not.b32 	%r8468, %r8467;
	and.b32  	%r8469, %r8465, %r8468;
	and.b32  	%r8470, %r25, 522133279;
	add.s32 	%r8471, %r8470, 522133279;
	sub.s32 	%r8472, %r8399, %r8470;
	and.b32  	%r8473, %r8469, %r8472;
	and.b32  	%r8474, %r8473, %r8471;
	not.b32 	%r8475, %r8474;
	and.b32  	%r10848, %r25, %r8475;
	and.b32  	%r8476, %r24, 1077952576;
	shr.u32 	%r8477, %r8476, 1;
	and.b32  	%r8478, %r24, -2139062144;
	shr.u32 	%r8479, %r8478, 2;
	not.b32 	%r8480, %r8479;
	and.b32  	%r8481, %r8477, %r8480;
	and.b32  	%r8482, %r24, 522133279;
	add.s32 	%r8483, %r8482, 522133279;
	sub.s32 	%r8484, %r8399, %r8482;
	and.b32  	%r8485, %r8481, %r8484;
	and.b32  	%r8486, %r8485, %r8483;
	not.b32 	%r8487, %r8486;
	and.b32  	%r10849, %r24, %r8487;
	and.b32  	%r8488, %r23, %r8403;
	and.b32  	%r8489, %r8488, 64;
	shr.u32 	%r8490, %r8489, 1;
	shr.u32 	%r8491, %r8488, 2;
	and.b32  	%r8492, %r8488, 522133279;
	add.s32 	%r8493, %r8492, 31;
	sub.s32 	%r8494, %r8399, %r8492;
	not.b32 	%r8495, %r8491;
	and.b32  	%r8496, %r8495, %r8490;
	and.b32  	%r8497, %r8496, %r8494;
	and.b32  	%r8498, %r8497, %r8493;
	or.b32  	%r10850, %r8498, %r8488;
	bra.uni 	BB4_1535;

BB4_93:
	setp.eq.s32	%p21, %r1824, 108;
	@%p21 bra 	BB4_1534;

	setp.eq.s32	%p22, %r1824, 111;
	@%p22 bra 	BB4_993;
	bra.uni 	BB4_95;

BB4_993:
	setp.ge.u32	%p680, %r29, %r19;
	@%p680 bra 	BB4_777;

	and.b32  	%r4994, %r28, 3;
	shl.b32 	%r4995, %r4994, 3;
	shl.b32 	%r918, %r31, %r4995;
	mov.u32 	%r4996, 255;
	shl.b32 	%r4997, %r4996, %r4995;
	not.b32 	%r919, %r4997;
	shr.u32 	%r4993, %r29, 2;
	setp.gt.s32	%p681, %r4993, 3;
	@%p681 bra 	BB4_1003;

	setp.gt.s32	%p687, %r4993, 1;
	@%p687 bra 	BB4_1000;

	setp.eq.s32	%p690, %r4993, 0;
	@%p690 bra 	BB4_1017;
	bra.uni 	BB4_997;

BB4_1017:
	and.b32  	%r5005, %r23, %r919;
	or.b32  	%r10850, %r5005, %r918;

BB4_1018:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_15;

BB4_67:
	setp.eq.s32	%p35, %r1824, 90;
	@%p35 bra 	BB4_779;

	setp.eq.s32	%p36, %r1824, 91;
	@%p36 bra 	BB4_1274;
	bra.uni 	BB4_69;

BB4_1274:
	setp.eq.s32	%p847, %r19, 0;
	mov.u32 	%r10854, 0;
	@%p847 bra 	BB4_1024;

	add.s32 	%r10854, %r19, -1;
	mov.u32 	%r6320, 8;
	// inline asm
	shf.r.wrap.b32 %r10850, %r23, %r22, %r6320;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r22, %r21, %r6320;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r21, %r20, %r6320;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r20, %r27, %r6320;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r27, %r26, %r6320;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r26, %r25, %r6320;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r25, %r24, %r6320;
	// inline asm
	mov.u32 	%r6319, 0;
	// inline asm
	shf.r.wrap.b32 %r10849, %r24, %r6319, %r6320;
	// inline asm
	bra.uni 	BB4_1536;

BB4_124:
	setp.eq.s32	%p8, %r1824, 122;
	@%p8 bra 	BB4_782;

	setp.eq.s32	%p9, %r1824, 123;
	@%p9 bra 	BB4_1293;
	bra.uni 	BB4_126;

BB4_1293:
	setp.eq.s32	%p868, %r19, 0;
	mov.u32 	%r10854, 0;
	@%p868 bra 	BB4_1024;

	add.s32 	%r6441, %r19, -1;
	and.b32  	%r6442, %r6441, 3;
	shl.b32 	%r6443, %r6442, 3;
	and.b32  	%r6444, %r23, 255;
	shl.b32 	%r6445, %r6444, %r6443;
	mov.u32 	%r6440, 8;
	// inline asm
	shf.r.wrap.b32 %r6409, %r23, %r22, %r6440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6413, %r22, %r21, %r6440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6417, %r21, %r20, %r6440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6421, %r20, %r27, %r6440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6425, %r27, %r26, %r6440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6429, %r26, %r25, %r6440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6433, %r25, %r24, %r6440;
	// inline asm
	mov.u32 	%r6439, 0;
	// inline asm
	shf.r.wrap.b32 %r6437, %r24, %r6439, %r6440;
	// inline asm
	setp.lt.u32	%p869, %r6441, 4;
	selp.b32	%r6446, %r6445, 0, %p869;
	or.b32  	%r10850, %r6409, %r6446;
	and.b32  	%r6447, %r6441, -4;
	setp.eq.s32	%p870, %r6447, 4;
	selp.b32	%r6448, %r6445, 0, %p870;
	or.b32  	%r10851, %r6413, %r6448;
	setp.eq.s32	%p871, %r6447, 8;
	selp.b32	%r6449, %r6445, 0, %p871;
	or.b32  	%r10852, %r6417, %r6449;
	setp.eq.s32	%p872, %r6447, 12;
	selp.b32	%r6450, %r6445, 0, %p872;
	or.b32  	%r10853, %r6421, %r6450;
	setp.eq.s32	%p873, %r6447, 16;
	selp.b32	%r6451, %r6445, 0, %p873;
	or.b32  	%r10846, %r6425, %r6451;
	setp.eq.s32	%p874, %r6447, 20;
	selp.b32	%r6452, %r6445, 0, %p874;
	or.b32  	%r10847, %r6429, %r6452;
	setp.eq.s32	%p875, %r6447, 24;
	selp.b32	%r6453, %r6445, 0, %p875;
	or.b32  	%r10848, %r6433, %r6453;
	setp.gt.u32	%p876, %r6441, 27;
	selp.b32	%r6454, %r6445, 0, %p876;
	or.b32  	%r10849, %r6437, %r6454;
	bra.uni 	BB4_1535;

BB4_9:
	setp.eq.s32	%p58, %r1824, 39;
	@%p58 bra 	BB4_969;
	bra.uni 	BB4_10;

BB4_969:
	setp.ge.u32	%p668, %r29, %r19;
	@%p668 bra 	BB4_777;

	and.b32  	%r4961, %r28, 3;
	shl.b32 	%r4962, %r4961, 3;
	mov.u32 	%r4963, 1;
	shl.b32 	%r4964, %r4963, %r4962;
	add.s32 	%r909, %r4964, -1;
	shr.u32 	%r4960, %r29, 2;
	setp.gt.s32	%p669, %r4960, 3;
	@%p669 bra 	BB4_978;

	setp.gt.s32	%p675, %r4960, 1;
	@%p675 bra 	BB4_975;

	setp.eq.s32	%p678, %r4960, 0;
	@%p678 bra 	BB4_992;
	bra.uni 	BB4_973;

BB4_992:
	and.b32  	%r10850, %r909, %r23;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10851, %r10846;
	bra.uni 	BB4_990;

BB4_76:
	setp.eq.s32	%p31, %r1824, 99;
	@%p31 bra 	BB4_77;
	bra.uni 	BB4_10;

BB4_77:
	and.b32  	%r8499, %r23, 1077952576;
	shr.u32 	%r8500, %r8499, 1;
	and.b32  	%r8501, %r23, -2139062144;
	shr.u32 	%r8502, %r8501, 2;
	not.b32 	%r8503, %r8502;
	and.b32  	%r8504, %r8500, %r8503;
	and.b32  	%r8505, %r23, 522133279;
	add.s32 	%r8506, %r8505, 522133279;
	mov.u32 	%r8507, -84215046;
	sub.s32 	%r8508, %r8507, %r8505;
	and.b32  	%r8509, %r8504, %r8508;
	and.b32  	%r8510, %r8509, %r8506;
	or.b32  	%r8511, %r8510, %r23;
	and.b32  	%r8512, %r22, 1077952576;
	shr.u32 	%r8513, %r8512, 1;
	and.b32  	%r8514, %r22, -2139062144;
	shr.u32 	%r8515, %r8514, 2;
	not.b32 	%r8516, %r8515;
	and.b32  	%r8517, %r8513, %r8516;
	and.b32  	%r8518, %r22, 522133279;
	add.s32 	%r8519, %r8518, 522133279;
	sub.s32 	%r8520, %r8507, %r8518;
	and.b32  	%r8521, %r8517, %r8520;
	and.b32  	%r8522, %r8521, %r8519;
	or.b32  	%r10851, %r8522, %r22;
	and.b32  	%r8523, %r21, 1077952576;
	shr.u32 	%r8524, %r8523, 1;
	and.b32  	%r8525, %r21, -2139062144;
	shr.u32 	%r8526, %r8525, 2;
	not.b32 	%r8527, %r8526;
	and.b32  	%r8528, %r8524, %r8527;
	and.b32  	%r8529, %r21, 522133279;
	add.s32 	%r8530, %r8529, 522133279;
	sub.s32 	%r8531, %r8507, %r8529;
	and.b32  	%r8532, %r8528, %r8531;
	and.b32  	%r8533, %r8532, %r8530;
	or.b32  	%r10852, %r8533, %r21;
	and.b32  	%r8534, %r20, 1077952576;
	shr.u32 	%r8535, %r8534, 1;
	and.b32  	%r8536, %r20, -2139062144;
	shr.u32 	%r8537, %r8536, 2;
	not.b32 	%r8538, %r8537;
	and.b32  	%r8539, %r8535, %r8538;
	and.b32  	%r8540, %r20, 522133279;
	add.s32 	%r8541, %r8540, 522133279;
	sub.s32 	%r8542, %r8507, %r8540;
	and.b32  	%r8543, %r8539, %r8542;
	and.b32  	%r8544, %r8543, %r8541;
	or.b32  	%r10853, %r8544, %r20;
	and.b32  	%r8545, %r27, 1077952576;
	shr.u32 	%r8546, %r8545, 1;
	and.b32  	%r8547, %r27, -2139062144;
	shr.u32 	%r8548, %r8547, 2;
	not.b32 	%r8549, %r8548;
	and.b32  	%r8550, %r8546, %r8549;
	and.b32  	%r8551, %r27, 522133279;
	add.s32 	%r8552, %r8551, 522133279;
	sub.s32 	%r8553, %r8507, %r8551;
	and.b32  	%r8554, %r8550, %r8553;
	and.b32  	%r8555, %r8554, %r8552;
	or.b32  	%r10846, %r8555, %r27;
	and.b32  	%r8556, %r26, 1077952576;
	shr.u32 	%r8557, %r8556, 1;
	and.b32  	%r8558, %r26, -2139062144;
	shr.u32 	%r8559, %r8558, 2;
	not.b32 	%r8560, %r8559;
	and.b32  	%r8561, %r8557, %r8560;
	and.b32  	%r8562, %r26, 522133279;
	add.s32 	%r8563, %r8562, 522133279;
	sub.s32 	%r8564, %r8507, %r8562;
	and.b32  	%r8565, %r8561, %r8564;
	and.b32  	%r8566, %r8565, %r8563;
	or.b32  	%r10847, %r8566, %r26;
	and.b32  	%r8567, %r25, 1077952576;
	shr.u32 	%r8568, %r8567, 1;
	and.b32  	%r8569, %r25, -2139062144;
	shr.u32 	%r8570, %r8569, 2;
	not.b32 	%r8571, %r8570;
	and.b32  	%r8572, %r8568, %r8571;
	and.b32  	%r8573, %r25, 522133279;
	add.s32 	%r8574, %r8573, 522133279;
	sub.s32 	%r8575, %r8507, %r8573;
	and.b32  	%r8576, %r8572, %r8575;
	and.b32  	%r8577, %r8576, %r8574;
	or.b32  	%r10848, %r8577, %r25;
	and.b32  	%r8578, %r24, 1077952576;
	shr.u32 	%r8579, %r8578, 1;
	and.b32  	%r8580, %r24, -2139062144;
	shr.u32 	%r8581, %r8580, 2;
	not.b32 	%r8582, %r8581;
	and.b32  	%r8583, %r8579, %r8582;
	and.b32  	%r8584, %r24, 522133279;
	add.s32 	%r8585, %r8584, 522133279;
	sub.s32 	%r8586, %r8507, %r8584;
	and.b32  	%r8587, %r8583, %r8586;
	and.b32  	%r8588, %r8587, %r8585;
	or.b32  	%r10849, %r8588, %r24;
	and.b32  	%r8589, %r8511, 64;
	shr.u32 	%r8590, %r8589, 1;
	and.b32  	%r8591, %r8511, 128;
	shr.u32 	%r8592, %r8591, 2;
	not.b32 	%r8593, %r8592;
	and.b32  	%r8594, %r8590, %r8593;
	and.b32  	%r8595, %r8511, 522133279;
	add.s32 	%r8596, %r8595, 31;
	sub.s32 	%r8597, %r8507, %r8595;
	and.b32  	%r8598, %r8594, %r8597;
	and.b32  	%r8599, %r8598, %r8596;
	not.b32 	%r8600, %r8599;
	or.b32  	%r8601, %r8600, -33;
	and.b32  	%r10850, %r8601, %r8511;
	bra.uni 	BB4_1535;

BB4_41:
	setp.eq.s32	%p45, %r1824, 75;
	@%p45 bra 	BB4_42;
	bra.uni 	BB4_10;

BB4_42:
	setp.lt.u32	%p461, %r19, 2;
	@%p461 bra 	BB4_10;

	setp.gt.s32	%p462, %r19, 16;
	@%p462 bra 	BB4_719;

	setp.gt.s32	%p484, %r19, 8;
	@%p484 bra 	BB4_704;

	setp.gt.s32	%p496, %r19, 4;
	@%p496 bra 	BB4_697;

	setp.eq.s32	%p502, %r19, 2;
	@%p502 bra 	BB4_774;

	setp.eq.s32	%p503, %r19, 3;
	@%p503 bra 	BB4_48;
	bra.uni 	BB4_695;

BB4_48:
	and.b32  	%r4045, %r23, 255;
	shl.b32 	%r4046, %r23, 8;
	and.b32  	%r4047, %r4046, 16711680;
	or.b32  	%r4048, %r4047, %r4045;
	shr.u32 	%r4049, %r23, 8;
	and.b32  	%r4050, %r4049, 65280;
	or.b32  	%r10850, %r4048, %r4050;
	mov.u32 	%r10854, 3;
	bra.uni 	BB4_775;

BB4_104:
	setp.eq.s32	%p18, %r1824, 114;
	@%p18 bra 	BB4_105;
	bra.uni 	BB4_10;

BB4_105:
	mov.u32 	%r7633, 32;
	sub.s32 	%r7632, %r7633, %r19;
	setp.gt.s32	%p973, %r7632, 15;
	@%p973 bra 	BB4_1459;

	setp.gt.s32	%p997, %r7632, 7;
	@%p997 bra 	BB4_1444;

	setp.gt.s32	%p1009, %r7632, 3;
	@%p1009 bra 	BB4_1437;

	setp.eq.s32	%p1015, %r7632, 1;
	@%p1015 bra 	BB4_1507;

	setp.eq.s32	%p1016, %r7632, 2;
	@%p1016 bra 	BB4_110;
	bra.uni 	BB4_1435;

BB4_110:
	mov.u32 	%r8134, 16;
	// inline asm
	shf.r.wrap.b32 %r8103, %r25, %r24, %r8134;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r26, %r25, %r8134;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r27, %r26, %r8134;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r20, %r27, %r8134;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8119, %r21, %r20, %r8134;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10844, %r22, %r21, %r8134;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10843, %r23, %r22, %r8134;
	// inline asm
	mov.u32 	%r8132, 0;
	// inline asm
	shf.r.wrap.b32 %r10842, %r8132, %r23, %r8134;
	// inline asm
	mov.u32 	%r27, %r8103;
	mov.u32 	%r23, %r8119;
	bra.uni 	BB4_1511;

BB4_24:
	setp.eq.s32	%p52, %r1824, 46;
	@%p52 bra 	BB4_25;
	bra.uni 	BB4_10;

BB4_25:
	add.s32 	%r3602, %r29, 1;
	setp.ge.u32	%p257, %r3602, %r19;
	@%p257 bra 	BB4_10;

	mov.u32 	%r3630, 8;
	// inline asm
	shf.r.wrap.b32 %r3603, %r23, %r22, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3607, %r22, %r21, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3611, %r21, %r20, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3615, %r20, %r27, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3619, %r27, %r26, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3623, %r26, %r25, %r3630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3627, %r25, %r24, %r3630;
	// inline asm
	and.b32  	%r3632, %r28, 3;
	shl.b32 	%r3633, %r3632, 3;
	mov.u32 	%r3634, 255;
	shl.b32 	%r356, %r3634, %r3633;
	not.b32 	%r357, %r356;
	shr.u32 	%r3631, %r29, 2;
	setp.gt.s32	%p258, %r3631, 3;
	@%p258 bra 	BB4_358;

	setp.gt.s32	%p264, %r3631, 1;
	@%p264 bra 	BB4_355;

	setp.eq.s32	%p267, %r3631, 0;
	@%p267 bra 	BB4_29;
	bra.uni 	BB4_353;

BB4_29:
	and.b32  	%r3653, %r23, %r357;
	and.b32  	%r3654, %r3603, %r356;
	or.b32  	%r10850, %r3654, %r3653;
	bra.uni 	BB4_612;

BB4_90:
	setp.eq.s32	%p25, %r1824, 107;
	@%p25 bra 	BB4_91;
	bra.uni 	BB4_10;

BB4_91:
	setp.lt.u32	%p505, %r19, 2;
	@%p505 bra 	BB4_10;

	and.b32  	%r4055, %r23, -65536;
	shl.b32 	%r4056, %r23, 8;
	and.b32  	%r4057, %r4056, 65280;
	or.b32  	%r4058, %r4057, %r4055;
	bfe.u32 	%r4059, %r23, 8, 8;
	or.b32  	%r10850, %r4058, %r4059;

BB4_612:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_659;

BB4_59:
	setp.eq.s32	%p39, %r1824, 89;
	@%p39 bra 	BB4_60;
	bra.uni 	BB4_10;

BB4_60:
	setp.gt.u32	%p123, %r29, %r19;
	add.s32 	%r10854, %r29, %r19;
	setp.gt.u32	%p124, %r10854, 31;
	or.pred  	%p125, %p123, %p124;
	@%p125 bra 	BB4_10;

	mov.u32 	%r10693, 0;
	setp.gt.s32	%p126, %r29, 15;
	@%p126 bra 	BB4_163;

	setp.gt.s32	%p150, %r29, 7;
	@%p150 bra 	BB4_147;

	setp.gt.s32	%p162, %r29, 3;
	@%p162 bra 	BB4_140;

	setp.gt.s32	%p168, %r29, 1;
	@%p168 bra 	BB4_137;

	setp.eq.s32	%p171, %r29, 0;
	@%p171 bra 	BB4_66;
	bra.uni 	BB4_135;

BB4_66:
	mov.u32 	%r10689, %r27;
	mov.u32 	%r10690, %r26;
	mov.u32 	%r10691, %r25;
	mov.u32 	%r10692, %r24;
	mov.u32 	%r10693, %r23;
	mov.u32 	%r10694, %r22;
	mov.u32 	%r10695, %r21;
	mov.u32 	%r10696, %r20;
	bra.uni 	BB4_213;

BB4_117:
	setp.eq.s32	%p12, %r1824, 121;
	@%p12 bra 	BB4_118;
	bra.uni 	BB4_10;

BB4_118:
	setp.gt.u32	%p184, %r29, %r19;
	add.s32 	%r10854, %r29, %r19;
	setp.gt.u32	%p185, %r10854, 31;
	or.pred  	%p186, %p184, %p185;
	@%p186 bra 	BB4_10;

	and.b32  	%r2974, %r28, 3;
	shl.b32 	%r2975, %r2974, 3;
	mov.u32 	%r2976, 1;
	shl.b32 	%r2977, %r2976, %r2975;
	add.s32 	%r191, %r2977, -1;
	shr.u32 	%r2973, %r29, 2;
	setp.gt.s32	%p187, %r2973, 3;
	@%p187 bra 	BB4_239;

	setp.gt.s32	%p193, %r2973, 1;
	@%p193 bra 	BB4_236;

	setp.eq.s32	%p196, %r2973, 0;
	@%p196 bra 	BB4_122;
	bra.uni 	BB4_234;

BB4_122:
	and.b32  	%r10709, %r191, %r23;
	mov.u32 	%r10705, 0;
	mov.u32 	%r10706, %r10705;
	mov.u32 	%r10707, %r10705;
	mov.u32 	%r10708, %r10705;
	mov.u32 	%r10710, %r10705;
	bra.uni 	BB4_123;

BB4_443:
	setp.lt.u32	%p317, %r29, %r19;
	setp.gt.u32	%p318, %r19, %r31;
	and.pred  	%p319, %p317, %p318;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	mov.u32 	%r10853, %r20;
	mov.u32 	%r10854, %r19;
	@!%p319 bra 	BB4_1536;
	bra.uni 	BB4_444;

BB4_444:
	mov.u32 	%r10730, 0;
	setp.gt.s32	%p320, %r29, 15;
	@%p320 bra 	BB4_476;

	setp.gt.s32	%p344, %r29, 7;
	@%p344 bra 	BB4_461;

	setp.gt.s32	%p356, %r29, 3;
	@%p356 bra 	BB4_454;

	setp.gt.s32	%p362, %r29, 1;
	@%p362 bra 	BB4_451;

	setp.eq.s32	%p365, %r29, 0;
	@%p365 bra 	BB4_522;
	bra.uni 	BB4_449;

BB4_522:
	and.b32  	%r10721, %r23, 255;
	bra.uni 	BB4_523;

BB4_20:
	setp.eq.s32	%p56, %r1824, 44;
	@%p56 bra 	BB4_21;
	bra.uni 	BB4_10;

BB4_21:
	setp.ne.s32	%p243, %r29, 0;
	setp.lt.u32	%p244, %r29, %r19;
	and.pred  	%p245, %p243, %p244;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	mov.u32 	%r10853, %r20;
	mov.u32 	%r10854, %r19;
	@!%p245 bra 	BB4_1536;
	bra.uni 	BB4_334;

BB4_334:
	mov.u32 	%r3577, 24;
	// inline asm
	shf.r.wrap.b32 %r3550, %r25, %r24, %r3577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3554, %r26, %r25, %r3577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3558, %r27, %r26, %r3577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3562, %r20, %r27, %r3577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3566, %r21, %r20, %r3577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3570, %r22, %r21, %r3577;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3574, %r23, %r22, %r3577;
	// inline asm
	and.b32  	%r3579, %r28, 3;
	shl.b32 	%r3580, %r3579, 3;
	mov.u32 	%r3581, 255;
	shl.b32 	%r339, %r3581, %r3580;
	not.b32 	%r340, %r339;
	shr.u32 	%r3578, %r29, 2;
	setp.gt.s32	%p246, %r3578, 3;
	@%p246 bra 	BB4_342;

	setp.gt.s32	%p252, %r3578, 1;
	@%p252 bra 	BB4_339;

	setp.eq.s32	%p255, %r3578, 0;
	@%p255 bra 	BB4_352;
	bra.uni 	BB4_337;

BB4_352:
	mov.u32 	%r3597, 0;
	// inline asm
	shf.r.wrap.b32 %r3596, %r3597, %r23, %r3577;
	// inline asm
	and.b32  	%r3600, %r3596, %r339;
	and.b32  	%r3601, %r23, %r340;
	or.b32  	%r10850, %r3600, %r3601;
	bra.uni 	BB4_612;

BB4_1414:
	add.s32 	%r10854, %r19, %r19;
	setp.gt.u32	%p961, %r10854, 31;
	@%p961 bra 	BB4_777;

	and.b32  	%r7454, %r19, 3;
	mov.u32 	%r7455, 4;
	sub.s32 	%r7456, %r7455, %r7454;
	shl.b32 	%r7457, %r7456, 2;
	mov.u32 	%r7458, 1985229328;
	shr.u32 	%r7459, %r7458, %r7457;
	and.b32  	%r1538, %r7459, 65535;
	shr.u32 	%r7453, %r19, 2;
	mov.u32 	%r10830, 0;
	setp.gt.s32	%p962, %r7453, 3;
	@%p962 bra 	BB4_1423;

	setp.gt.s32	%p968, %r7453, 1;
	@%p968 bra 	BB4_1420;

	setp.eq.s32	%p971, %r7453, 0;
	@%p971 bra 	BB4_1433;
	bra.uni 	BB4_1418;

BB4_1433:
	// inline asm
	prmt.b32 %r10837, %r25, %r24, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10836, %r26, %r25, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10835, %r27, %r26, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10834, %r20, %r27, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10833, %r21, %r20, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10832, %r22, %r21, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10831, %r23, %r22, %r1538;
	// inline asm
	mov.u32 	%r7629, 0;
	// inline asm
	prmt.b32 %r10830, %r7629, %r23, %r1538;
	// inline asm
	bra.uni 	BB4_1434;

BB4_80:
	setp.eq.s32	%p29, %r1824, 102;
	@%p29 bra 	BB4_81;
	bra.uni 	BB4_10;

BB4_81:
	add.s32 	%r10854, %r19, %r19;
	setp.gt.u32	%p887, %r10854, 31;
	@%p887 bra 	BB4_777;

	mov.u32 	%r6508, 32;
	sub.s32 	%r6507, %r6508, %r19;
	mov.u32 	%r10804, 0;
	setp.gt.s32	%p888, %r6507, 15;
	@%p888 bra 	BB4_1327;

	setp.gt.s32	%p912, %r6507, 7;
	@%p912 bra 	BB4_1311;

	setp.gt.s32	%p924, %r6507, 3;
	@%p924 bra 	BB4_1304;

	setp.gt.s32	%p930, %r6507, 1;
	@%p930 bra 	BB4_1301;

	setp.eq.s32	%p933, %r6507, 0;
	@%p933 bra 	BB4_87;
	bra.uni 	BB4_1299;

BB4_87:
	mov.u32 	%r10796, %r27;
	mov.u32 	%r10797, %r26;
	mov.u32 	%r10798, %r25;
	mov.u32 	%r10799, %r24;
	mov.u32 	%r10800, %r23;
	mov.u32 	%r10801, %r22;
	mov.u32 	%r10802, %r21;
	mov.u32 	%r10803, %r20;
	bra.uni 	BB4_1378;

BB4_423:
	setp.ge.u32	%p305, %r29, %r19;
	@%p305 bra 	BB4_10;

	and.b32  	%r3764, %r28, 3;
	shl.b32 	%r3765, %r3764, 3;
	mov.u32 	%r3766, 255;
	shl.b32 	%r398, %r3766, %r3765;
	not.b32 	%r399, %r398;
	shr.u32 	%r3763, %r29, 2;
	setp.gt.s32	%p306, %r3763, 3;
	@%p306 bra 	BB4_432;

	setp.gt.s32	%p312, %r3763, 1;
	@%p312 bra 	BB4_429;

	setp.eq.s32	%p315, %r3763, 0;
	@%p315 bra 	BB4_442;
	bra.uni 	BB4_427;

BB4_442:
	and.b32  	%r3795, %r23, %r399;
	and.b32  	%r3796, %r398, %r23;
	shl.b32 	%r3797, %r3796, 1;
	and.b32  	%r3798, %r3797, %r398;
	or.b32  	%r10850, %r3798, %r3795;
	bra.uni 	BB4_612;

BB4_51:
	setp.eq.s32	%p43, %r1824, 82;
	@%p43 bra 	BB4_52;
	bra.uni 	BB4_10;

BB4_52:
	setp.ge.u32	%p293, %r29, %r19;
	@%p293 bra 	BB4_10;

	and.b32  	%r3728, %r28, 3;
	shl.b32 	%r3729, %r3728, 3;
	mov.u32 	%r3730, 255;
	shl.b32 	%r388, %r3730, %r3729;
	not.b32 	%r389, %r388;
	shr.u32 	%r3727, %r29, 2;
	setp.gt.s32	%p294, %r3727, 3;
	@%p294 bra 	BB4_413;

	setp.gt.s32	%p300, %r3727, 1;
	@%p300 bra 	BB4_410;

	setp.eq.s32	%p303, %r3727, 0;
	@%p303 bra 	BB4_56;
	bra.uni 	BB4_408;

BB4_56:
	and.b32  	%r3759, %r23, %r389;
	and.b32  	%r3760, %r388, %r23;
	shr.u32 	%r3761, %r3760, 1;
	and.b32  	%r3762, %r3761, %r388;
	or.b32  	%r10850, %r3762, %r3759;
	bra.uni 	BB4_612;

BB4_968:
	mov.b32	{%rs277, %rs278}, %r23;
	shr.u16 	%rs279, %rs278, 8;
	and.b16  	%rs280, %rs278, 255;
	shr.u16 	%rs281, %rs277, 8;
	cvt.u16.u32	%rs282, %r28;
	and.b16  	%rs283, %rs282, 255;
	and.b16  	%rs284, %rs277, 255;
	setp.eq.s16	%p636, %rs284, %rs283;
	cvt.u16.u32	%rs285, %r30;
	setp.eq.s16	%p637, %rs281, %rs283;
	setp.eq.s16	%p638, %rs280, %rs283;
	setp.eq.s16	%p639, %rs279, %rs283;
	selp.b16	%rs286, %rs285, %rs281, %p637;
	cvt.u32.u16	%r4912, %rs286;
	selp.b16	%rs287, %rs285, %rs277, %p636;
	and.b16  	%rs288, %rs287, 255;
	cvt.u32.u16	%r4913, %rs288;
	prmt.b32 	%r4914, %r4912, %r4913, 30212;
	selp.b16	%rs289, %rs285, %rs279, %p639;
	cvt.u32.u16	%r4915, %rs289;
	selp.b16	%rs290, %rs285, %rs278, %p638;
	and.b16  	%rs291, %rs290, 255;
	cvt.u32.u16	%r4916, %rs291;
	prmt.b32 	%r4917, %r4915, %r4916, 30212;
	prmt.b32 	%r10850, %r4917, %r4914, 4180;
	mov.b32	{%rs292, %rs293}, %r22;
	shr.u16 	%rs294, %rs293, 8;
	and.b16  	%rs295, %rs293, 255;
	shr.u16 	%rs296, %rs292, 8;
	and.b16  	%rs297, %rs292, 255;
	setp.eq.s16	%p640, %rs297, %rs283;
	setp.eq.s16	%p641, %rs296, %rs283;
	setp.eq.s16	%p642, %rs295, %rs283;
	setp.eq.s16	%p643, %rs294, %rs283;
	selp.b16	%rs298, %rs285, %rs296, %p641;
	cvt.u32.u16	%r4918, %rs298;
	selp.b16	%rs299, %rs285, %rs292, %p640;
	and.b16  	%rs300, %rs299, 255;
	cvt.u32.u16	%r4919, %rs300;
	prmt.b32 	%r4920, %r4918, %r4919, 30212;
	selp.b16	%rs301, %rs285, %rs294, %p643;
	cvt.u32.u16	%r4921, %rs301;
	selp.b16	%rs302, %rs285, %rs293, %p642;
	and.b16  	%rs303, %rs302, 255;
	cvt.u32.u16	%r4922, %rs303;
	prmt.b32 	%r4923, %r4921, %r4922, 30212;
	prmt.b32 	%r10851, %r4923, %r4920, 4180;
	mov.b32	{%rs304, %rs305}, %r21;
	shr.u16 	%rs306, %rs305, 8;
	and.b16  	%rs307, %rs305, 255;
	shr.u16 	%rs308, %rs304, 8;
	and.b16  	%rs309, %rs304, 255;
	setp.eq.s16	%p644, %rs309, %rs283;
	setp.eq.s16	%p645, %rs308, %rs283;
	setp.eq.s16	%p646, %rs307, %rs283;
	setp.eq.s16	%p647, %rs306, %rs283;
	selp.b16	%rs310, %rs285, %rs308, %p645;
	cvt.u32.u16	%r4924, %rs310;
	selp.b16	%rs311, %rs285, %rs304, %p644;
	and.b16  	%rs312, %rs311, 255;
	cvt.u32.u16	%r4925, %rs312;
	prmt.b32 	%r4926, %r4924, %r4925, 30212;
	selp.b16	%rs313, %rs285, %rs306, %p647;
	cvt.u32.u16	%r4927, %rs313;
	selp.b16	%rs314, %rs285, %rs305, %p646;
	and.b16  	%rs315, %rs314, 255;
	cvt.u32.u16	%r4928, %rs315;
	prmt.b32 	%r4929, %r4927, %r4928, 30212;
	prmt.b32 	%r10852, %r4929, %r4926, 4180;
	mov.b32	{%rs316, %rs317}, %r20;
	shr.u16 	%rs318, %rs317, 8;
	and.b16  	%rs319, %rs317, 255;
	shr.u16 	%rs320, %rs316, 8;
	and.b16  	%rs321, %rs316, 255;
	setp.eq.s16	%p648, %rs321, %rs283;
	setp.eq.s16	%p649, %rs320, %rs283;
	setp.eq.s16	%p650, %rs319, %rs283;
	setp.eq.s16	%p651, %rs318, %rs283;
	selp.b16	%rs322, %rs285, %rs320, %p649;
	cvt.u32.u16	%r4930, %rs322;
	selp.b16	%rs323, %rs285, %rs316, %p648;
	and.b16  	%rs324, %rs323, 255;
	cvt.u32.u16	%r4931, %rs324;
	prmt.b32 	%r4932, %r4930, %r4931, 30212;
	selp.b16	%rs325, %rs285, %rs318, %p651;
	cvt.u32.u16	%r4933, %rs325;
	selp.b16	%rs326, %rs285, %rs317, %p650;
	and.b16  	%rs327, %rs326, 255;
	cvt.u32.u16	%r4934, %rs327;
	prmt.b32 	%r4935, %r4933, %r4934, 30212;
	prmt.b32 	%r10853, %r4935, %r4932, 4180;
	mov.b32	{%rs328, %rs329}, %r27;
	shr.u16 	%rs330, %rs329, 8;
	and.b16  	%rs331, %rs329, 255;
	shr.u16 	%rs332, %rs328, 8;
	and.b16  	%rs333, %rs328, 255;
	setp.eq.s16	%p652, %rs333, %rs283;
	setp.eq.s16	%p653, %rs332, %rs283;
	setp.eq.s16	%p654, %rs331, %rs283;
	setp.eq.s16	%p655, %rs330, %rs283;
	selp.b16	%rs334, %rs285, %rs332, %p653;
	cvt.u32.u16	%r4936, %rs334;
	selp.b16	%rs335, %rs285, %rs328, %p652;
	and.b16  	%rs336, %rs335, 255;
	cvt.u32.u16	%r4937, %rs336;
	prmt.b32 	%r4938, %r4936, %r4937, 30212;
	selp.b16	%rs337, %rs285, %rs330, %p655;
	cvt.u32.u16	%r4939, %rs337;
	selp.b16	%rs338, %rs285, %rs329, %p654;
	and.b16  	%rs339, %rs338, 255;
	cvt.u32.u16	%r4940, %rs339;
	prmt.b32 	%r4941, %r4939, %r4940, 30212;
	prmt.b32 	%r10846, %r4941, %r4938, 4180;
	mov.b32	{%rs340, %rs341}, %r26;
	shr.u16 	%rs342, %rs341, 8;
	and.b16  	%rs343, %rs341, 255;
	shr.u16 	%rs344, %rs340, 8;
	and.b16  	%rs345, %rs340, 255;
	setp.eq.s16	%p656, %rs345, %rs283;
	setp.eq.s16	%p657, %rs344, %rs283;
	setp.eq.s16	%p658, %rs343, %rs283;
	setp.eq.s16	%p659, %rs342, %rs283;
	selp.b16	%rs346, %rs285, %rs344, %p657;
	cvt.u32.u16	%r4942, %rs346;
	selp.b16	%rs347, %rs285, %rs340, %p656;
	and.b16  	%rs348, %rs347, 255;
	cvt.u32.u16	%r4943, %rs348;
	prmt.b32 	%r4944, %r4942, %r4943, 30212;
	selp.b16	%rs349, %rs285, %rs342, %p659;
	cvt.u32.u16	%r4945, %rs349;
	selp.b16	%rs350, %rs285, %rs341, %p658;
	and.b16  	%rs351, %rs350, 255;
	cvt.u32.u16	%r4946, %rs351;
	prmt.b32 	%r4947, %r4945, %r4946, 30212;
	prmt.b32 	%r10847, %r4947, %r4944, 4180;
	mov.b32	{%rs352, %rs353}, %r25;
	shr.u16 	%rs354, %rs353, 8;
	and.b16  	%rs355, %rs353, 255;
	shr.u16 	%rs356, %rs352, 8;
	and.b16  	%rs357, %rs352, 255;
	setp.eq.s16	%p660, %rs357, %rs283;
	setp.eq.s16	%p661, %rs356, %rs283;
	setp.eq.s16	%p662, %rs355, %rs283;
	setp.eq.s16	%p663, %rs354, %rs283;
	selp.b16	%rs358, %rs285, %rs356, %p661;
	cvt.u32.u16	%r4948, %rs358;
	selp.b16	%rs359, %rs285, %rs352, %p660;
	and.b16  	%rs360, %rs359, 255;
	cvt.u32.u16	%r4949, %rs360;
	prmt.b32 	%r4950, %r4948, %r4949, 30212;
	selp.b16	%rs361, %rs285, %rs354, %p663;
	cvt.u32.u16	%r4951, %rs361;
	selp.b16	%rs362, %rs285, %rs353, %p662;
	and.b16  	%rs363, %rs362, 255;
	cvt.u32.u16	%r4952, %rs363;
	prmt.b32 	%r4953, %r4951, %r4952, 30212;
	prmt.b32 	%r10848, %r4953, %r4950, 4180;
	mov.b32	{%rs364, %rs365}, %r24;
	shr.u16 	%rs366, %rs365, 8;
	and.b16  	%rs367, %rs365, 255;
	shr.u16 	%rs368, %rs364, 8;
	and.b16  	%rs369, %rs364, 255;
	setp.eq.s16	%p664, %rs369, %rs283;
	setp.eq.s16	%p665, %rs368, %rs283;
	setp.eq.s16	%p666, %rs367, %rs283;
	setp.eq.s16	%p667, %rs366, %rs283;
	selp.b16	%rs370, %rs285, %rs368, %p665;
	cvt.u32.u16	%r4954, %rs370;
	selp.b16	%rs371, %rs285, %rs364, %p664;
	and.b16  	%rs372, %rs371, 255;
	cvt.u32.u16	%r4955, %rs372;
	prmt.b32 	%r4956, %r4954, %r4955, 30212;
	selp.b16	%rs373, %rs285, %rs366, %p667;
	cvt.u32.u16	%r4957, %rs373;
	selp.b16	%rs374, %rs285, %rs365, %p666;
	and.b16  	%rs375, %rs374, 255;
	cvt.u32.u16	%r4958, %rs375;
	prmt.b32 	%r4959, %r4957, %r4958, 30212;
	prmt.b32 	%r10849, %r4959, %r4956, 4180;
	mov.u32 	%r10854, %r19;
	bra.uni 	BB4_1536;

BB4_113:
	setp.eq.s32	%p16, %r1824, 117;
	@%p16 bra 	BB4_114;
	bra.uni 	BB4_10;

BB4_114:
	and.b32  	%r8602, %r23, 1077952576;
	shr.u32 	%r8603, %r8602, 1;
	and.b32  	%r8604, %r23, -2139062144;
	shr.u32 	%r8605, %r8604, 2;
	not.b32 	%r8606, %r8605;
	and.b32  	%r8607, %r8603, %r8606;
	and.b32  	%r8608, %r23, 522133279;
	add.s32 	%r8609, %r8608, 522133279;
	mov.u32 	%r8610, -84215046;
	sub.s32 	%r8611, %r8610, %r8608;
	and.b32  	%r8612, %r8607, %r8611;
	and.b32  	%r8613, %r8612, %r8609;
	not.b32 	%r8614, %r8613;
	and.b32  	%r10850, %r23, %r8614;
	and.b32  	%r8615, %r22, 1077952576;
	shr.u32 	%r8616, %r8615, 1;
	and.b32  	%r8617, %r22, -2139062144;
	shr.u32 	%r8618, %r8617, 2;
	not.b32 	%r8619, %r8618;
	and.b32  	%r8620, %r8616, %r8619;
	and.b32  	%r8621, %r22, 522133279;
	add.s32 	%r8622, %r8621, 522133279;
	sub.s32 	%r8623, %r8610, %r8621;
	and.b32  	%r8624, %r8620, %r8623;
	and.b32  	%r8625, %r8624, %r8622;
	not.b32 	%r8626, %r8625;
	and.b32  	%r10851, %r22, %r8626;
	and.b32  	%r8627, %r21, 1077952576;
	shr.u32 	%r8628, %r8627, 1;
	and.b32  	%r8629, %r21, -2139062144;
	shr.u32 	%r8630, %r8629, 2;
	not.b32 	%r8631, %r8630;
	and.b32  	%r8632, %r8628, %r8631;
	and.b32  	%r8633, %r21, 522133279;
	add.s32 	%r8634, %r8633, 522133279;
	sub.s32 	%r8635, %r8610, %r8633;
	and.b32  	%r8636, %r8632, %r8635;
	and.b32  	%r8637, %r8636, %r8634;
	not.b32 	%r8638, %r8637;
	and.b32  	%r10852, %r21, %r8638;
	and.b32  	%r8639, %r20, 1077952576;
	shr.u32 	%r8640, %r8639, 1;
	and.b32  	%r8641, %r20, -2139062144;
	shr.u32 	%r8642, %r8641, 2;
	not.b32 	%r8643, %r8642;
	and.b32  	%r8644, %r8640, %r8643;
	and.b32  	%r8645, %r20, 522133279;
	add.s32 	%r8646, %r8645, 522133279;
	sub.s32 	%r8647, %r8610, %r8645;
	and.b32  	%r8648, %r8644, %r8647;
	and.b32  	%r8649, %r8648, %r8646;
	not.b32 	%r8650, %r8649;
	and.b32  	%r10853, %r20, %r8650;
	and.b32  	%r8651, %r27, 1077952576;
	shr.u32 	%r8652, %r8651, 1;
	and.b32  	%r8653, %r27, -2139062144;
	shr.u32 	%r8654, %r8653, 2;
	not.b32 	%r8655, %r8654;
	and.b32  	%r8656, %r8652, %r8655;
	and.b32  	%r8657, %r27, 522133279;
	add.s32 	%r8658, %r8657, 522133279;
	sub.s32 	%r8659, %r8610, %r8657;
	and.b32  	%r8660, %r8656, %r8659;
	and.b32  	%r8661, %r8660, %r8658;
	not.b32 	%r8662, %r8661;
	and.b32  	%r10846, %r27, %r8662;
	and.b32  	%r8663, %r26, 1077952576;
	shr.u32 	%r8664, %r8663, 1;
	and.b32  	%r8665, %r26, -2139062144;
	shr.u32 	%r8666, %r8665, 2;
	not.b32 	%r8667, %r8666;
	and.b32  	%r8668, %r8664, %r8667;
	and.b32  	%r8669, %r26, 522133279;
	add.s32 	%r8670, %r8669, 522133279;
	sub.s32 	%r8671, %r8610, %r8669;
	and.b32  	%r8672, %r8668, %r8671;
	and.b32  	%r8673, %r8672, %r8670;
	not.b32 	%r8674, %r8673;
	and.b32  	%r10847, %r26, %r8674;
	and.b32  	%r8675, %r25, 1077952576;
	shr.u32 	%r8676, %r8675, 1;
	and.b32  	%r8677, %r25, -2139062144;
	shr.u32 	%r8678, %r8677, 2;
	not.b32 	%r8679, %r8678;
	and.b32  	%r8680, %r8676, %r8679;
	and.b32  	%r8681, %r25, 522133279;
	add.s32 	%r8682, %r8681, 522133279;
	sub.s32 	%r8683, %r8610, %r8681;
	and.b32  	%r8684, %r8680, %r8683;
	and.b32  	%r8685, %r8684, %r8682;
	not.b32 	%r8686, %r8685;
	and.b32  	%r10848, %r25, %r8686;
	and.b32  	%r8687, %r24, 1077952576;
	shr.u32 	%r8688, %r8687, 1;
	and.b32  	%r8689, %r24, -2139062144;
	shr.u32 	%r8690, %r8689, 2;
	not.b32 	%r8691, %r8690;
	and.b32  	%r8692, %r8688, %r8691;
	and.b32  	%r8693, %r24, 522133279;
	add.s32 	%r8694, %r8693, 522133279;
	sub.s32 	%r8695, %r8610, %r8693;
	and.b32  	%r8696, %r8692, %r8695;
	and.b32  	%r8697, %r8696, %r8694;
	not.b32 	%r8698, %r8697;
	and.b32  	%r10849, %r24, %r8698;
	bra.uni 	BB4_1535;

BB4_943:
	mov.u64 	%rd2709, 0;
	add.u64 	%rd113, %SP, 0;
	cvta.to.local.u64 	%rd114, %rd113;
	st.local.v4.u32 	[%rd114], {%r23, %r22, %r21, %r20};
	st.local.v4.u32 	[%rd114+16], {%r27, %r26, %r25, %r24};
	add.u64 	%rd115, %SP, 32;
	cvta.to.local.u64 	%rd116, %rd115;
	st.local.v2.u64 	[%rd116], {%rd2709, %rd2709};
	st.local.v2.u64 	[%rd116+16], {%rd2709, %rd2709};
	cvt.u16.u32	%rs376, %r23;
	setp.eq.s32	%p623, %r19, 0;
	mov.u32 	%r10854, 0;
	@%p623 bra 	BB4_967;

	cvt.u16.u32	%rs2, %r28;
	and.b32  	%r868, %r19, 3;
	setp.eq.s32	%p624, %r868, 0;
	mov.u32 	%r10757, 0;
	mov.u32 	%r10854, %r10757;
	@%p624 bra 	BB4_957;

	setp.eq.s32	%p625, %r868, 1;
	mov.u32 	%r10752, 0;
	@%p625 bra 	BB4_946;
	bra.uni 	BB4_947;

BB4_946:
	mov.u32 	%r10854, %r10752;
	bra.uni 	BB4_954;

BB4_32:
	setp.eq.s32	%p50, %r1824, 68;
	@%p50 bra 	BB4_33;
	bra.uni 	BB4_10;

BB4_33:
	setp.ge.u32	%p826, %r29, %r19;
	@%p826 bra 	BB4_777;

	mov.u32 	%r6251, 8;
	// inline asm
	shf.r.wrap.b32 %r6220, %r23, %r22, %r6251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r22, %r21, %r6251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r21, %r20, %r6251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r20, %r27, %r6251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r27, %r26, %r6251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r26, %r25, %r6251;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r25, %r24, %r6251;
	// inline asm
	mov.u32 	%r6250, 0;
	// inline asm
	shf.r.wrap.b32 %r10849, %r24, %r6250, %r6251;
	// inline asm
	and.b32  	%r6253, %r28, 3;
	shl.b32 	%r6254, %r6253, 3;
	mov.u32 	%r6255, 1;
	shl.b32 	%r6256, %r6255, %r6254;
	add.s32 	%r1215, %r6256, -1;
	neg.s32 	%r1216, %r6256;
	shr.u32 	%r6252, %r29, 2;
	setp.gt.s32	%p827, %r6252, 3;
	@%p827 bra 	BB4_1261;

	setp.gt.s32	%p833, %r6252, 1;
	@%p833 bra 	BB4_1258;

	setp.eq.s32	%p836, %r6252, 0;
	@%p836 bra 	BB4_37;
	bra.uni 	BB4_1256;

BB4_37:
	and.b32  	%r6271, %r1215, %r23;
	and.b32  	%r6272, %r6220, %r1216;
	or.b32  	%r10850, %r6272, %r6271;
	bra.uni 	BB4_1273;

BB4_1534:
	and.b32  	%r8699, %r23, 1077952576;
	shr.u32 	%r8700, %r8699, 1;
	and.b32  	%r8701, %r23, -2139062144;
	shr.u32 	%r8702, %r8701, 2;
	not.b32 	%r8703, %r8702;
	and.b32  	%r8704, %r8700, %r8703;
	and.b32  	%r8705, %r23, 522133279;
	add.s32 	%r8706, %r8705, 522133279;
	mov.u32 	%r8707, -84215046;
	sub.s32 	%r8708, %r8707, %r8705;
	and.b32  	%r8709, %r8704, %r8708;
	and.b32  	%r8710, %r8709, %r8706;
	or.b32  	%r10850, %r8710, %r23;
	and.b32  	%r8711, %r22, 1077952576;
	shr.u32 	%r8712, %r8711, 1;
	and.b32  	%r8713, %r22, -2139062144;
	shr.u32 	%r8714, %r8713, 2;
	not.b32 	%r8715, %r8714;
	and.b32  	%r8716, %r8712, %r8715;
	and.b32  	%r8717, %r22, 522133279;
	add.s32 	%r8718, %r8717, 522133279;
	sub.s32 	%r8719, %r8707, %r8717;
	and.b32  	%r8720, %r8716, %r8719;
	and.b32  	%r8721, %r8720, %r8718;
	or.b32  	%r10851, %r8721, %r22;
	and.b32  	%r8722, %r21, 1077952576;
	shr.u32 	%r8723, %r8722, 1;
	and.b32  	%r8724, %r21, -2139062144;
	shr.u32 	%r8725, %r8724, 2;
	not.b32 	%r8726, %r8725;
	and.b32  	%r8727, %r8723, %r8726;
	and.b32  	%r8728, %r21, 522133279;
	add.s32 	%r8729, %r8728, 522133279;
	sub.s32 	%r8730, %r8707, %r8728;
	and.b32  	%r8731, %r8727, %r8730;
	and.b32  	%r8732, %r8731, %r8729;
	or.b32  	%r10852, %r8732, %r21;
	and.b32  	%r8733, %r20, 1077952576;
	shr.u32 	%r8734, %r8733, 1;
	and.b32  	%r8735, %r20, -2139062144;
	shr.u32 	%r8736, %r8735, 2;
	not.b32 	%r8737, %r8736;
	and.b32  	%r8738, %r8734, %r8737;
	and.b32  	%r8739, %r20, 522133279;
	add.s32 	%r8740, %r8739, 522133279;
	sub.s32 	%r8741, %r8707, %r8739;
	and.b32  	%r8742, %r8738, %r8741;
	and.b32  	%r8743, %r8742, %r8740;
	or.b32  	%r10853, %r8743, %r20;
	and.b32  	%r8744, %r27, 1077952576;
	shr.u32 	%r8745, %r8744, 1;
	and.b32  	%r8746, %r27, -2139062144;
	shr.u32 	%r8747, %r8746, 2;
	not.b32 	%r8748, %r8747;
	and.b32  	%r8749, %r8745, %r8748;
	and.b32  	%r8750, %r27, 522133279;
	add.s32 	%r8751, %r8750, 522133279;
	sub.s32 	%r8752, %r8707, %r8750;
	and.b32  	%r8753, %r8749, %r8752;
	and.b32  	%r8754, %r8753, %r8751;
	or.b32  	%r10846, %r8754, %r27;
	and.b32  	%r8755, %r26, 1077952576;
	shr.u32 	%r8756, %r8755, 1;
	and.b32  	%r8757, %r26, -2139062144;
	shr.u32 	%r8758, %r8757, 2;
	not.b32 	%r8759, %r8758;
	and.b32  	%r8760, %r8756, %r8759;
	and.b32  	%r8761, %r26, 522133279;
	add.s32 	%r8762, %r8761, 522133279;
	sub.s32 	%r8763, %r8707, %r8761;
	and.b32  	%r8764, %r8760, %r8763;
	and.b32  	%r8765, %r8764, %r8762;
	or.b32  	%r10847, %r8765, %r26;
	and.b32  	%r8766, %r25, 1077952576;
	shr.u32 	%r8767, %r8766, 1;
	and.b32  	%r8768, %r25, -2139062144;
	shr.u32 	%r8769, %r8768, 2;
	not.b32 	%r8770, %r8769;
	and.b32  	%r8771, %r8767, %r8770;
	and.b32  	%r8772, %r25, 522133279;
	add.s32 	%r8773, %r8772, 522133279;
	sub.s32 	%r8774, %r8707, %r8772;
	and.b32  	%r8775, %r8771, %r8774;
	and.b32  	%r8776, %r8775, %r8773;
	or.b32  	%r10848, %r8776, %r25;
	and.b32  	%r8777, %r24, 1077952576;
	shr.u32 	%r8778, %r8777, 1;
	and.b32  	%r8779, %r24, -2139062144;
	shr.u32 	%r8780, %r8779, 2;
	not.b32 	%r8781, %r8780;
	and.b32  	%r8782, %r8778, %r8781;
	and.b32  	%r8783, %r24, 522133279;
	add.s32 	%r8784, %r8783, 522133279;
	sub.s32 	%r8785, %r8707, %r8783;
	and.b32  	%r8786, %r8782, %r8785;
	and.b32  	%r8787, %r8786, %r8784;
	or.b32  	%r10849, %r8787, %r24;
	bra.uni 	BB4_1535;

BB4_95:
	setp.eq.s32	%p23, %r1824, 112;
	@%p23 bra 	BB4_96;
	bra.uni 	BB4_10;

BB4_96:
	mad.lo.s32 	%r7257, %r29, %r19, %r19;
	setp.gt.u32	%p946, %r7257, 31;
	setp.eq.s32	%p947, %r29, 0;
	or.pred  	%p948, %p946, %p947;
	mov.u32 	%r7256, 0;
	mov.u32 	%r10812, %r7256;
	mov.u32 	%r10854, %r19;
	mov.u32 	%r10853, %r20;
	mov.u32 	%r10852, %r21;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10846, %r27;
	@%p948 bra 	BB4_777;

BB4_97:
	and.b32  	%r7267, %r10854, 3;
	mov.u32 	%r7268, 4;
	sub.s32 	%r7269, %r7268, %r7267;
	shl.b32 	%r7270, %r7269, 2;
	mov.u32 	%r7271, 1985229328;
	shr.u32 	%r7272, %r7271, %r7270;
	and.b32  	%r1482, %r7272, 65535;
	shr.u32 	%r7266, %r10854, 2;
	setp.gt.s32	%p949, %r7266, 3;
	@%p949 bra 	BB4_1403;

	setp.gt.s32	%p955, %r7266, 1;
	@%p955 bra 	BB4_1400;

	setp.eq.s32	%p958, %r7266, 0;
	@%p958 bra 	BB4_100;
	bra.uni 	BB4_1398;

BB4_100:
	// inline asm
	prmt.b32 %r10829, %r25, %r24, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10828, %r26, %r25, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10827, %r27, %r26, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10826, %r20, %r27, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10825, %r21, %r20, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10824, %r22, %r21, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10823, %r23, %r22, %r1482;
	// inline asm
	mov.u32 	%r7442, 0;
	// inline asm
	prmt.b32 %r10822, %r7442, %r23, %r1482;
	// inline asm
	bra.uni 	BB4_1413;

BB4_1403:
	setp.gt.s32	%p950, %r7266, 5;
	@%p950 bra 	BB4_1407;

	setp.eq.s32	%p953, %r7266, 4;
	@%p953 bra 	BB4_1411;
	bra.uni 	BB4_1405;

BB4_1411:
	// inline asm
	prmt.b32 %r10829, %r21, %r20, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10828, %r22, %r21, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10827, %r23, %r22, %r1482;
	// inline asm
	mov.u32 	%r10822, 0;
	// inline asm
	prmt.b32 %r10826, %r10822, %r23, %r1482;
	// inline asm
	mov.u32 	%r10823, %r10822;
	mov.u32 	%r10824, %r10822;
	mov.u32 	%r10825, %r10822;
	bra.uni 	BB4_1413;

BB4_1400:
	setp.eq.s32	%p956, %r7266, 2;
	@%p956 bra 	BB4_1412;
	bra.uni 	BB4_1401;

BB4_1412:
	// inline asm
	prmt.b32 %r10829, %r27, %r26, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10828, %r20, %r27, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10827, %r21, %r20, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10826, %r22, %r21, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10825, %r23, %r22, %r1482;
	// inline asm
	mov.u32 	%r10822, 0;
	// inline asm
	prmt.b32 %r10824, %r10822, %r23, %r1482;
	// inline asm
	mov.u32 	%r10823, %r10822;
	bra.uni 	BB4_1413;

BB4_1407:
	setp.eq.s32	%p951, %r7266, 6;
	@%p951 bra 	BB4_1410;
	bra.uni 	BB4_1408;

BB4_1410:
	// inline asm
	prmt.b32 %r10829, %r23, %r22, %r1482;
	// inline asm
	mov.u32 	%r10822, 0;
	// inline asm
	prmt.b32 %r10828, %r10822, %r23, %r1482;
	// inline asm
	mov.u32 	%r10823, %r10822;
	mov.u32 	%r10824, %r10822;
	mov.u32 	%r10825, %r10822;
	mov.u32 	%r10826, %r10822;
	mov.u32 	%r10827, %r10822;
	bra.uni 	BB4_1413;

BB4_1398:
	setp.eq.s32	%p959, %r7266, 1;
	mov.u32 	%r10822, %r7256;
	mov.u32 	%r10823, %r7256;
	mov.u32 	%r10824, %r7256;
	mov.u32 	%r10825, %r7256;
	mov.u32 	%r10826, %r7256;
	mov.u32 	%r10827, %r7256;
	mov.u32 	%r10828, %r7256;
	mov.u32 	%r10829, %r7256;
	@%p959 bra 	BB4_1399;
	bra.uni 	BB4_1413;

BB4_1399:
	// inline asm
	prmt.b32 %r10829, %r26, %r25, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10828, %r27, %r26, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10827, %r20, %r27, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10826, %r21, %r20, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10825, %r22, %r21, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10824, %r23, %r22, %r1482;
	// inline asm
	mov.u32 	%r10822, 0;
	// inline asm
	prmt.b32 %r10823, %r10822, %r23, %r1482;
	// inline asm
	bra.uni 	BB4_1413;

BB4_1405:
	setp.eq.s32	%p954, %r7266, 5;
	mov.u32 	%r10822, %r7256;
	mov.u32 	%r10823, %r7256;
	mov.u32 	%r10824, %r7256;
	mov.u32 	%r10825, %r7256;
	mov.u32 	%r10826, %r7256;
	mov.u32 	%r10827, %r7256;
	mov.u32 	%r10828, %r7256;
	mov.u32 	%r10829, %r7256;
	@%p954 bra 	BB4_1406;
	bra.uni 	BB4_1413;

BB4_1406:
	// inline asm
	prmt.b32 %r10829, %r22, %r21, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10828, %r23, %r22, %r1482;
	// inline asm
	mov.u32 	%r10822, 0;
	// inline asm
	prmt.b32 %r10827, %r10822, %r23, %r1482;
	// inline asm
	mov.u32 	%r10823, %r10822;
	mov.u32 	%r10824, %r10822;
	mov.u32 	%r10825, %r10822;
	mov.u32 	%r10826, %r10822;
	bra.uni 	BB4_1413;

BB4_1401:
	setp.eq.s32	%p957, %r7266, 3;
	mov.u32 	%r10822, %r7256;
	mov.u32 	%r10823, %r7256;
	mov.u32 	%r10824, %r7256;
	mov.u32 	%r10825, %r7256;
	mov.u32 	%r10826, %r7256;
	mov.u32 	%r10827, %r7256;
	mov.u32 	%r10828, %r7256;
	mov.u32 	%r10829, %r7256;
	@%p957 bra 	BB4_1402;
	bra.uni 	BB4_1413;

BB4_1402:
	// inline asm
	prmt.b32 %r10829, %r20, %r27, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10828, %r21, %r20, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10827, %r22, %r21, %r1482;
	// inline asm
	// inline asm
	prmt.b32 %r10826, %r23, %r22, %r1482;
	// inline asm
	mov.u32 	%r10822, 0;
	// inline asm
	prmt.b32 %r10825, %r10822, %r23, %r1482;
	// inline asm
	mov.u32 	%r10823, %r10822;
	mov.u32 	%r10824, %r10822;
	bra.uni 	BB4_1413;

BB4_1408:
	setp.ne.s32	%p952, %r7266, 7;
	mov.u32 	%r10822, %r7256;
	mov.u32 	%r10823, %r7256;
	mov.u32 	%r10824, %r7256;
	mov.u32 	%r10825, %r7256;
	mov.u32 	%r10826, %r7256;
	mov.u32 	%r10827, %r7256;
	mov.u32 	%r10828, %r7256;
	mov.u32 	%r10829, %r7256;
	@%p952 bra 	BB4_1413;

	mov.u32 	%r10822, 0;
	// inline asm
	prmt.b32 %r10829, %r10822, %r23, %r1482;
	// inline asm
	mov.u32 	%r10823, %r10822;
	mov.u32 	%r10824, %r10822;
	mov.u32 	%r10825, %r10822;
	mov.u32 	%r10826, %r10822;
	mov.u32 	%r10827, %r10822;
	mov.u32 	%r10828, %r10822;

BB4_1413:
	or.b32  	%r10850, %r10822, %r10850;
	or.b32  	%r10851, %r10823, %r10851;
	or.b32  	%r10852, %r10824, %r10852;
	or.b32  	%r10853, %r10825, %r10853;
	or.b32  	%r10846, %r10826, %r10846;
	or.b32  	%r10847, %r10827, %r10847;
	or.b32  	%r10848, %r10828, %r10848;
	or.b32  	%r10849, %r10829, %r10849;
	add.s32 	%r10854, %r10854, %r19;
	add.s32 	%r10812, %r10812, 1;
	setp.lt.u32	%p960, %r10812, %r29;
	@%p960 bra 	BB4_97;
	bra.uni 	BB4_1536;

BB4_779:
	setp.eq.s32	%p509, %r19, 0;
	add.s32 	%r4096, %r29, %r19;
	setp.gt.u32	%p510, %r4096, 31;
	or.pred  	%p511, %p509, %p510;
	@%p511 bra 	BB4_10;

	add.s32 	%r4098, %r19, -1;
	and.b32  	%r4099, %r4098, 3;
	shl.b32 	%r4100, %r4099, 3;
	setp.lt.u32	%p512, %r4098, 4;
	selp.b32	%r4101, %r23, 0, %p512;
	and.b32  	%r4102, %r4098, -4;
	setp.eq.s32	%p513, %r4102, 4;
	selp.b32	%r4103, %r22, 0, %p513;
	setp.eq.s32	%p514, %r4102, 8;
	selp.b32	%r4104, %r21, 0, %p514;
	setp.eq.s32	%p515, %r4102, 12;
	selp.b32	%r4105, %r20, 0, %p515;
	setp.eq.s32	%p516, %r4102, 16;
	selp.b32	%r4106, %r27, 0, %p516;
	setp.eq.s32	%p517, %r4102, 20;
	selp.b32	%r4107, %r26, 0, %p517;
	setp.eq.s32	%p518, %r4102, 24;
	selp.b32	%r4108, %r25, 0, %p518;
	setp.gt.u32	%p519, %r4098, 27;
	selp.b32	%r4109, %r24, 0, %p519;
	or.b32  	%r4110, %r4109, %r4101;
	or.b32  	%r4111, %r4110, %r4103;
	or.b32  	%r4112, %r4111, %r4104;
	or.b32  	%r4113, %r4112, %r4105;
	or.b32  	%r4114, %r4113, %r4106;
	or.b32  	%r4115, %r4114, %r4107;
	or.b32  	%r4116, %r4115, %r4108;
	shr.u32 	%r4117, %r4116, %r4100;
	and.b32  	%r593, %r4117, 255;
	setp.eq.s32	%p520, %r29, 0;
	mov.u32 	%r10731, 0;
	mov.u32 	%r10854, %r19;
	mov.u32 	%r10853, %r20;
	mov.u32 	%r10852, %r21;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10846, %r27;
	@%p520 bra 	BB4_1536;

BB4_781:
	and.b32  	%r4118, %r10854, 3;
	shl.b32 	%r4119, %r4118, 3;
	shl.b32 	%r4120, %r593, %r4119;
	setp.lt.u32	%p521, %r10854, 4;
	selp.b32	%r4121, %r4120, 0, %p521;
	or.b32  	%r10850, %r4121, %r10850;
	and.b32  	%r4122, %r10854, -4;
	setp.eq.s32	%p522, %r4122, 4;
	selp.b32	%r4123, %r4120, 0, %p522;
	or.b32  	%r10851, %r4123, %r10851;
	setp.eq.s32	%p523, %r4122, 8;
	selp.b32	%r4124, %r4120, 0, %p523;
	or.b32  	%r10852, %r4124, %r10852;
	setp.eq.s32	%p524, %r4122, 12;
	selp.b32	%r4125, %r4120, 0, %p524;
	or.b32  	%r10853, %r4125, %r10853;
	setp.eq.s32	%p525, %r4122, 16;
	selp.b32	%r4126, %r4120, 0, %p525;
	or.b32  	%r10846, %r4126, %r10846;
	setp.eq.s32	%p526, %r4122, 20;
	selp.b32	%r4127, %r4120, 0, %p526;
	or.b32  	%r10847, %r4127, %r10847;
	setp.eq.s32	%p527, %r4122, 24;
	selp.b32	%r4128, %r4120, 0, %p527;
	or.b32  	%r10848, %r4128, %r10848;
	setp.gt.u32	%p528, %r10854, 27;
	selp.b32	%r4129, %r4120, 0, %p528;
	or.b32  	%r10849, %r4129, %r10849;
	add.s32 	%r10854, %r10854, 1;
	add.s32 	%r10731, %r10731, 1;
	setp.lt.u32	%p529, %r10731, %r29;
	@%p529 bra 	BB4_781;
	bra.uni 	BB4_1536;

BB4_69:
	setp.eq.s32	%p37, %r1824, 93;
	@%p37 bra 	BB4_70;
	bra.uni 	BB4_10;

BB4_70:
	setp.eq.s32	%p838, %r19, 0;
	mov.u32 	%r10854, 0;
	@%p838 bra 	BB4_1024;

	add.s32 	%r10854, %r19, -1;
	and.b32  	%r6274, %r10854, 3;
	shl.b32 	%r6275, %r6274, 3;
	mov.u32 	%r6276, 1;
	shl.b32 	%r6277, %r6276, %r6275;
	add.s32 	%r6278, %r6277, -1;
	setp.lt.u32	%p839, %r10854, 4;
	selp.b32	%r6279, %r6278, -1, %p839;
	and.b32  	%r10850, %r6279, %r23;
	and.b32  	%r6280, %r10854, -4;
	setp.eq.s32	%p840, %r6280, 4;
	selp.b32	%r6281, %r6278, -1, %p840;
	and.b32  	%r10851, %r6281, %r22;
	setp.eq.s32	%p841, %r6280, 8;
	selp.b32	%r6282, %r6278, -1, %p841;
	and.b32  	%r10852, %r6282, %r21;
	setp.eq.s32	%p842, %r6280, 12;
	selp.b32	%r6283, %r6278, -1, %p842;
	and.b32  	%r10853, %r6283, %r20;
	setp.eq.s32	%p843, %r6280, 16;
	selp.b32	%r6284, %r6278, -1, %p843;
	and.b32  	%r10846, %r6284, %r27;
	setp.eq.s32	%p844, %r6280, 20;
	selp.b32	%r6285, %r6278, -1, %p844;
	and.b32  	%r10847, %r6285, %r26;
	setp.eq.s32	%p845, %r6280, 24;
	selp.b32	%r6286, %r6278, -1, %p845;
	and.b32  	%r10848, %r6286, %r25;
	setp.gt.u32	%p846, %r10854, 27;
	selp.b32	%r6287, %r6278, -1, %p846;
	and.b32  	%r10849, %r6287, %r24;
	bra.uni 	BB4_1536;

BB4_782:
	setp.eq.s32	%p530, %r19, 0;
	add.s32 	%r10854, %r29, %r19;
	setp.gt.u32	%p531, %r10854, 31;
	or.pred  	%p532, %p530, %p531;
	@%p532 bra 	BB4_10;

	and.b32  	%r615, %r23, 255;
	setp.gt.s32	%p533, %r29, 15;
	@%p533 bra 	BB4_812;

	setp.gt.s32	%p557, %r29, 7;
	@%p557 bra 	BB4_797;

	setp.gt.s32	%p569, %r29, 3;
	@%p569 bra 	BB4_790;

	setp.eq.s32	%p575, %r29, 1;
	@%p575 bra 	BB4_861;

	setp.eq.s32	%p576, %r29, 2;
	@%p576 bra 	BB4_860;
	bra.uni 	BB4_788;

BB4_860:
	mov.u32 	%r4630, 16;
	// inline asm
	shf.r.wrap.b32 %r24, %r25, %r24, %r4630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r26, %r25, %r4630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r27, %r26, %r4630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r20, %r27, %r4630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r20, %r21, %r20, %r4630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r22, %r21, %r4630;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r23, %r22, %r4630;
	// inline asm
	mov.u32 	%r4628, 0;
	// inline asm
	shf.r.wrap.b32 %r10850, %r4628, %r23, %r4630;
	// inline asm
	bra.uni 	BB4_865;

BB4_126:
	setp.eq.s32	%p10, %r1824, 125;
	@%p10 bra 	BB4_127;
	bra.uni 	BB4_10;

BB4_127:
	setp.eq.s32	%p848, %r19, 0;
	mov.u32 	%r10854, 0;
	@%p848 bra 	BB4_1024;

	add.s32 	%r6355, %r19, -1;
	shl.b32 	%r6356, %r6355, 3;
	and.b32  	%r6357, %r6356, 24;
	setp.lt.u32	%p849, %r6355, 4;
	selp.b32	%r6358, %r23, 0, %p849;
	and.b32  	%r6359, %r6355, -4;
	setp.eq.s32	%p850, %r6359, 4;
	selp.b32	%r6360, %r22, 0, %p850;
	setp.eq.s32	%p851, %r6359, 8;
	selp.b32	%r6361, %r21, 0, %p851;
	setp.eq.s32	%p852, %r6359, 12;
	selp.b32	%r6362, %r20, 0, %p852;
	setp.eq.s32	%p853, %r6359, 16;
	selp.b32	%r6363, %r27, 0, %p853;
	setp.eq.s32	%p854, %r6359, 20;
	selp.b32	%r6364, %r26, 0, %p854;
	setp.eq.s32	%p855, %r6359, 24;
	selp.b32	%r6365, %r25, 0, %p855;
	setp.gt.u32	%p856, %r6355, 27;
	selp.b32	%r6366, %r24, 0, %p856;
	or.b32  	%r6367, %r6366, %r6358;
	or.b32  	%r6368, %r6367, %r6360;
	or.b32  	%r6369, %r6368, %r6361;
	or.b32  	%r6370, %r6369, %r6362;
	or.b32  	%r6371, %r6370, %r6363;
	or.b32  	%r6372, %r6371, %r6364;
	or.b32  	%r6373, %r6372, %r6365;
	shr.u32 	%r6374, %r6373, %r6357;
	and.b32  	%r6375, %r6374, 255;
	mov.u32 	%r6353, 24;
	// inline asm
	shf.r.wrap.b32 %r6322, %r25, %r24, %r6353;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r26, %r25, %r6353;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r27, %r26, %r6353;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r20, %r27, %r6353;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r21, %r20, %r6353;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r22, %r21, %r6353;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r23, %r22, %r6353;
	// inline asm
	mov.u32 	%r10849, 0;
	// inline asm
	shf.r.wrap.b32 %r6350, %r10849, %r23, %r6353;
	// inline asm
	or.b32  	%r10850, %r6350, %r6375;
	shl.b32 	%r6376, %r19, 3;
	and.b32  	%r6377, %r6376, 24;
	mov.u32 	%r6378, 1;
	shl.b32 	%r6379, %r6378, %r6377;
	add.s32 	%r1260, %r6379, -1;
	shr.u32 	%r6354, %r19, 2;
	setp.gt.s32	%p857, %r6354, 3;
	@%p857 bra 	BB4_1279;

	setp.gt.s32	%p863, %r6354, 1;
	@%p863 bra 	BB4_1276;

	setp.eq.s32	%p866, %r6354, 0;
	@%p866 bra 	BB4_1292;
	bra.uni 	BB4_131;

BB4_1292:
	and.b32  	%r10850, %r10850, %r1260;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10851, %r10846;
	bra.uni 	BB4_1290;

BB4_377:
	setp.gt.s32	%p271, %r3655, 5;
	@%p271 bra 	BB4_381;

	setp.eq.s32	%p274, %r3655, 4;
	@%p274 bra 	BB4_385;
	bra.uni 	BB4_379;

BB4_385:
	and.b32  	%r3671, %r27, %r367;
	and.b32  	%r3672, %r366, %r27;
	sub.s32 	%r3673, %r3672, %r368;
	and.b32  	%r3674, %r3673, %r366;
	or.b32  	%r10846, %r3674, %r3671;
	bra.uni 	BB4_647;

BB4_1028:
	setp.gt.s32	%p696, %r5034, 5;
	@%p696 bra 	BB4_1032;

	setp.eq.s32	%p699, %r5034, 4;
	@%p699 bra 	BB4_1036;
	bra.uni 	BB4_1030;

BB4_1036:
	and.b32  	%r5049, %r937, %r27;
	or.b32  	%r5050, %r5049, %r936;
	and.b32  	%r5051, %r10846, %r938;
	or.b32  	%r10846, %r5050, %r5051;
	bra.uni 	BB4_757;

BB4_1521:
	setp.gt.s32	%p1020, %r8194, 5;
	@%p1020 bra 	BB4_1525;

	setp.eq.s32	%p1023, %r8194, 4;
	@%p1023 bra 	BB4_1529;
	bra.uni 	BB4_1523;

BB4_1529:
	and.b32  	%r8237, %r27, 1077952576;
	shr.u32 	%r8238, %r8237, 1;
	and.b32  	%r8239, %r27, -2139062144;
	shr.u32 	%r8240, %r8239, 2;
	not.b32 	%r8241, %r8240;
	and.b32  	%r8242, %r8238, %r8241;
	and.b32  	%r8243, %r27, 522133279;
	add.s32 	%r8244, %r8243, 522133279;
	mov.u32 	%r8245, -84215046;
	sub.s32 	%r8246, %r8245, %r8243;
	and.b32  	%r8247, %r8242, %r8246;
	and.b32  	%r8248, %r8247, %r8244;
	and.b32  	%r8249, %r8248, %r1715;
	xor.b32  	%r10846, %r8249, %r27;
	bra.uni 	BB4_11;

BB4_1179:
	setp.gt.s32	%p771, %r29, 23;
	@%p771 bra 	BB4_1196;

	setp.gt.s32	%p783, %r29, 19;
	@%p783 bra 	BB4_1188;

	setp.gt.s32	%p789, %r29, 17;
	@%p789 bra 	BB4_1185;

	setp.eq.s32	%p792, %r29, 16;
	@%p792 bra 	BB4_1220;
	bra.uni 	BB4_1183;

BB4_1220:
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10850, %r27;
	mov.u32 	%r10851, %r26;
	mov.u32 	%r10852, %r25;
	bra.uni 	BB4_1234;

BB4_1459:
	setp.gt.s32	%p974, %r7632, 23;
	@%p974 bra 	BB4_1475;

	setp.gt.s32	%p986, %r7632, 19;
	@%p986 bra 	BB4_1468;

	setp.gt.s32	%p992, %r7632, 17;
	@%p992 bra 	BB4_1465;

	setp.eq.s32	%p995, %r7632, 16;
	@%p995 bra 	BB4_1497;
	bra.uni 	BB4_1463;

BB4_1497:
	mov.u32 	%r10842, 0;
	mov.u32 	%r10838, %r23;
	mov.u32 	%r10839, %r22;
	mov.u32 	%r10840, %r21;
	mov.u32 	%r27, %r20;
	bra.uni 	BB4_1498;

BB4_397:
	setp.gt.s32	%p283, %r3691, 5;
	@%p283 bra 	BB4_401;

	setp.eq.s32	%p286, %r3691, 4;
	@%p286 bra 	BB4_405;
	bra.uni 	BB4_399;

BB4_405:
	and.b32  	%r3707, %r27, %r378;
	and.b32  	%r3708, %r377, %r27;
	add.s32 	%r3709, %r3708, %r379;
	and.b32  	%r3710, %r3709, %r377;
	or.b32  	%r10846, %r3710, %r3707;
	bra.uni 	BB4_647;

BB4_1074:
	setp.gt.s32	%p710, %r31, 23;
	@%p710 bra 	BB4_1092;

	setp.gt.s32	%p722, %r31, 19;
	@%p722 bra 	BB4_1084;

	setp.gt.s32	%p728, %r31, 17;
	@%p728 bra 	BB4_1080;

	setp.eq.s32	%p731, %r31, 16;
	@%p731 bra 	BB4_1118;
	bra.uni 	BB4_1078;

BB4_1118:
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r27;
	mov.u32 	%r10851, %r26;
	mov.u32 	%r10852, %r25;
	mov.u32 	%r10853, %r24;
	bra.uni 	BB4_1127;

BB4_1003:
	setp.gt.s32	%p682, %r4993, 5;
	@%p682 bra 	BB4_1008;

	setp.eq.s32	%p685, %r4993, 4;
	@%p685 bra 	BB4_1014;
	bra.uni 	BB4_1005;

BB4_1014:
	and.b32  	%r5001, %r27, %r919;
	or.b32  	%r10846, %r5001, %r918;
	bra.uni 	BB4_11;

BB4_476:
	setp.gt.s32	%p321, %r29, 23;
	@%p321 bra 	BB4_492;

	setp.gt.s32	%p333, %r29, 19;
	@%p333 bra 	BB4_485;

	setp.gt.s32	%p339, %r29, 17;
	@%p339 bra 	BB4_482;

	setp.eq.s32	%p342, %r29, 16;
	@%p342 bra 	BB4_514;
	bra.uni 	BB4_480;

BB4_514:
	and.b32  	%r10721, %r27, 255;
	bra.uni 	BB4_523;

BB4_1423:
	setp.gt.s32	%p963, %r7453, 5;
	@%p963 bra 	BB4_1427;

	setp.eq.s32	%p966, %r7453, 4;
	@%p966 bra 	BB4_1431;
	bra.uni 	BB4_1425;

BB4_1431:
	// inline asm
	prmt.b32 %r10837, %r21, %r20, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10836, %r22, %r21, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10835, %r23, %r22, %r1538;
	// inline asm
	mov.u32 	%r10830, 0;
	// inline asm
	prmt.b32 %r10834, %r10830, %r23, %r1538;
	// inline asm
	mov.u32 	%r10831, %r10830;
	mov.u32 	%r10832, %r10830;
	mov.u32 	%r10833, %r10830;
	bra.uni 	BB4_1434;

BB4_432:
	setp.gt.s32	%p307, %r3763, 5;
	@%p307 bra 	BB4_436;

	setp.eq.s32	%p310, %r3763, 4;
	@%p310 bra 	BB4_440;
	bra.uni 	BB4_434;

BB4_440:
	and.b32  	%r3779, %r27, %r399;
	and.b32  	%r3780, %r398, %r27;
	shl.b32 	%r3781, %r3780, 1;
	and.b32  	%r3782, %r3781, %r398;
	or.b32  	%r10846, %r3782, %r3779;
	bra.uni 	BB4_647;

BB4_812:
	setp.gt.s32	%p534, %r29, 23;
	@%p534 bra 	BB4_828;

	setp.gt.s32	%p546, %r29, 19;
	@%p546 bra 	BB4_821;

	setp.gt.s32	%p552, %r29, 17;
	@%p552 bra 	BB4_818;

	setp.eq.s32	%p555, %r29, 16;
	@%p555 bra 	BB4_850;
	bra.uni 	BB4_816;

BB4_850:
	mov.u32 	%r10850, 0;
	mov.u32 	%r10846, %r23;
	mov.u32 	%r10847, %r22;
	mov.u32 	%r10848, %r21;
	mov.u32 	%r24, %r20;
	bra.uni 	BB4_851;

BB4_374:
	setp.eq.s32	%p277, %r3655, 2;
	@%p277 bra 	BB4_386;
	bra.uni 	BB4_375;

BB4_386:
	and.b32  	%r3679, %r21, %r367;
	and.b32  	%r3680, %r366, %r21;
	sub.s32 	%r3681, %r3680, %r368;
	and.b32  	%r3682, %r3681, %r366;
	or.b32  	%r10852, %r3682, %r3679;
	bra.uni 	BB4_629;

BB4_1025:
	setp.eq.s32	%p702, %r5034, 2;
	@%p702 bra 	BB4_1037;
	bra.uni 	BB4_1026;

BB4_1037:
	and.b32  	%r5055, %r937, %r21;
	or.b32  	%r5056, %r5055, %r936;
	and.b32  	%r5057, %r10852, %r938;
	or.b32  	%r10852, %r5056, %r5057;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	bra.uni 	BB4_1536;

BB4_1518:
	setp.eq.s32	%p1026, %r8194, 2;
	@%p1026 bra 	BB4_1530;
	bra.uni 	BB4_1519;

BB4_1530:
	and.b32  	%r8263, %r21, 1077952576;
	shr.u32 	%r8264, %r8263, 1;
	and.b32  	%r8265, %r21, -2139062144;
	shr.u32 	%r8266, %r8265, 2;
	not.b32 	%r8267, %r8266;
	and.b32  	%r8268, %r8264, %r8267;
	and.b32  	%r8269, %r21, 522133279;
	add.s32 	%r8270, %r8269, 522133279;
	mov.u32 	%r8271, -84215046;
	sub.s32 	%r8272, %r8271, %r8269;
	and.b32  	%r8273, %r8268, %r8272;
	and.b32  	%r8274, %r8273, %r8270;
	and.b32  	%r8275, %r8274, %r1715;
	xor.b32  	%r10852, %r8275, %r21;
	bra.uni 	BB4_1016;

BB4_1164:
	setp.gt.s32	%p795, %r29, 11;
	@%p795 bra 	BB4_1172;

	setp.gt.s32	%p801, %r29, 9;
	@%p801 bra 	BB4_1169;

	setp.eq.s32	%p804, %r29, 8;
	@%p804 bra 	BB4_1224;
	bra.uni 	BB4_1167;

BB4_1224:
	mov.u32 	%r10848, 0;
	mov.u32 	%r10846, %r25;
	mov.u32 	%r10847, %r24;
	mov.u32 	%r10849, %r10848;
	mov.u32 	%r10850, %r21;
	mov.u32 	%r10851, %r20;
	mov.u32 	%r10852, %r27;
	mov.u32 	%r24, %r26;
	bra.uni 	BB4_1234;

BB4_978:
	setp.gt.s32	%p670, %r4960, 5;
	@%p670 bra 	BB4_982;

	setp.eq.s32	%p673, %r4960, 4;
	@%p673 bra 	BB4_987;
	bra.uni 	BB4_980;

BB4_987:
	and.b32  	%r10846, %r909, %r27;
	mov.u32 	%r10847, 0;
	mov.u32 	%r10848, %r10847;
	mov.u32 	%r10849, %r10847;
	bra.uni 	BB4_985;

BB4_719:
	setp.gt.s32	%p463, %r19, 23;
	@%p463 bra 	BB4_732;

	setp.gt.s32	%p475, %r19, 19;
	@%p475 bra 	BB4_725;

	setp.eq.s32	%p481, %r19, 17;
	@%p481 bra 	BB4_763;

	setp.eq.s32	%p482, %r19, 18;
	@%p482 bra 	BB4_761;
	bra.uni 	BB4_723;

BB4_761:
	shl.b32 	%r3968, %r27, 8;
	and.b32  	%r3969, %r3968, 65280;
	bfe.u32 	%r3970, %r27, 8, 8;
	or.b32  	%r10846, %r3969, %r3970;
	mov.u32 	%r10854, 18;
	bra.uni 	BB4_762;

BB4_1444:
	setp.gt.s32	%p998, %r7632, 11;
	@%p998 bra 	BB4_1452;

	setp.gt.s32	%p1004, %r7632, 9;
	@%p1004 bra 	BB4_1449;

	setp.eq.s32	%p1007, %r7632, 8;
	@%p1007 bra 	BB4_1504;
	bra.uni 	BB4_1447;

BB4_1504:
	mov.u32 	%r10842, 0;
	mov.u32 	%r10838, %r21;
	mov.u32 	%r10839, %r20;
	mov.u32 	%r10840, %r27;
	mov.u32 	%r27, %r26;
	mov.u32 	%r10843, %r10842;
	mov.u32 	%r10844, %r23;
	mov.u32 	%r23, %r22;
	bra.uni 	BB4_1511;

BB4_358:
	setp.gt.s32	%p259, %r3631, 5;
	@%p259 bra 	BB4_362;

	setp.eq.s32	%p262, %r3631, 4;
	@%p262 bra 	BB4_366;
	bra.uni 	BB4_360;

BB4_366:
	and.b32  	%r3645, %r27, %r357;
	and.b32  	%r3646, %r3619, %r356;
	or.b32  	%r10846, %r3646, %r3645;
	bra.uni 	BB4_647;

BB4_163:
	setp.gt.s32	%p127, %r29, 23;
	@%p127 bra 	BB4_179;

	setp.gt.s32	%p139, %r29, 19;
	@%p139 bra 	BB4_172;

	setp.gt.s32	%p145, %r29, 17;
	@%p145 bra 	BB4_169;

	setp.eq.s32	%p148, %r29, 16;
	@%p148 bra 	BB4_205;
	bra.uni 	BB4_167;

BB4_205:
	mov.u32 	%r10689, %r23;
	mov.u32 	%r10690, %r22;
	mov.u32 	%r10691, %r21;
	mov.u32 	%r10692, %r20;
	bra.uni 	BB4_199;

BB4_239:
	setp.gt.s32	%p188, %r2973, 5;
	@%p188 bra 	BB4_243;

	setp.eq.s32	%p191, %r2973, 4;
	@%p191 bra 	BB4_248;
	bra.uni 	BB4_241;

BB4_248:
	and.b32  	%r10705, %r191, %r27;
	mov.u32 	%r10706, 0;
	mov.u32 	%r10707, %r10706;
	mov.u32 	%r10708, %r10706;
	bra.uni 	BB4_246;

BB4_381:
	setp.eq.s32	%p272, %r3655, 6;
	@%p272 bra 	BB4_384;
	bra.uni 	BB4_382;

BB4_384:
	and.b32  	%r3663, %r25, %r367;
	and.b32  	%r3664, %r366, %r25;
	sub.s32 	%r3665, %r3664, %r368;
	and.b32  	%r3666, %r3665, %r366;
	or.b32  	%r10848, %r3666, %r3663;
	bra.uni 	BB4_670;

BB4_1032:
	setp.eq.s32	%p697, %r5034, 6;
	@%p697 bra 	BB4_1035;
	bra.uni 	BB4_1033;

BB4_1035:
	and.b32  	%r5043, %r937, %r25;
	or.b32  	%r5044, %r5043, %r936;
	and.b32  	%r5045, %r10848, %r938;
	or.b32  	%r10848, %r5044, %r5045;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	bra.uni 	BB4_757;

BB4_1525:
	setp.eq.s32	%p1021, %r8194, 6;
	@%p1021 bra 	BB4_1528;
	bra.uni 	BB4_1526;

BB4_1528:
	and.b32  	%r8211, %r25, 1077952576;
	shr.u32 	%r8212, %r8211, 1;
	and.b32  	%r8213, %r25, -2139062144;
	shr.u32 	%r8214, %r8213, 2;
	not.b32 	%r8215, %r8214;
	and.b32  	%r8216, %r8212, %r8215;
	and.b32  	%r8217, %r25, 522133279;
	add.s32 	%r8218, %r8217, 522133279;
	mov.u32 	%r8219, -84215046;
	sub.s32 	%r8220, %r8219, %r8217;
	and.b32  	%r8221, %r8216, %r8220;
	and.b32  	%r8222, %r8221, %r8218;
	and.b32  	%r8223, %r8222, %r1715;
	xor.b32  	%r10848, %r8223, %r25;
	bra.uni 	BB4_1013;

BB4_1196:
	setp.gt.s32	%p772, %r29, 27;
	@%p772 bra 	BB4_1205;

	setp.gt.s32	%p778, %r29, 25;
	@%p778 bra 	BB4_1201;

	setp.eq.s32	%p781, %r29, 24;
	@%p781 bra 	BB4_1214;
	bra.uni 	BB4_1199;

BB4_1214:
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10850, %r25;
	mov.u32 	%r10851, %r24;
	bra.uni 	BB4_1232;

BB4_1475:
	setp.gt.s32	%p975, %r7632, 27;
	@%p975 bra 	BB4_1484;

	setp.gt.s32	%p981, %r7632, 25;
	@%p981 bra 	BB4_1480;

	setp.eq.s32	%p984, %r7632, 24;
	@%p984 bra 	BB4_1493;
	bra.uni 	BB4_1478;

BB4_1493:
	mov.u32 	%r10838, 0;
	mov.u32 	%r10839, %r10838;
	mov.u32 	%r10840, %r23;
	mov.u32 	%r27, %r22;
	bra.uni 	BB4_1510;

BB4_394:
	setp.eq.s32	%p289, %r3691, 2;
	@%p289 bra 	BB4_406;
	bra.uni 	BB4_395;

BB4_406:
	and.b32  	%r3715, %r21, %r378;
	and.b32  	%r3716, %r377, %r21;
	add.s32 	%r3717, %r3716, %r379;
	and.b32  	%r3718, %r3717, %r377;
	or.b32  	%r10852, %r3718, %r3715;
	bra.uni 	BB4_629;

BB4_1058:
	setp.gt.s32	%p734, %r31, 11;
	@%p734 bra 	BB4_1066;

	setp.gt.s32	%p740, %r31, 9;
	@%p740 bra 	BB4_1063;

	setp.eq.s32	%p743, %r31, 8;
	@%p743 bra 	BB4_1122;
	bra.uni 	BB4_1061;

BB4_1122:
	mov.u32 	%r10846, %r25;
	mov.u32 	%r10847, %r24;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r21;
	mov.u32 	%r10851, %r20;
	mov.u32 	%r10852, %r27;
	mov.u32 	%r10853, %r26;
	bra.uni 	BB4_1127;

BB4_1000:
	setp.eq.s32	%p688, %r4993, 2;
	@%p688 bra 	BB4_1015;
	bra.uni 	BB4_1001;

BB4_1015:
	and.b32  	%r5003, %r21, %r919;
	or.b32  	%r10852, %r5003, %r918;

BB4_1016:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	bra.uni 	BB4_17;

BB4_461:
	setp.gt.s32	%p345, %r29, 11;
	@%p345 bra 	BB4_469;

	setp.gt.s32	%p351, %r29, 9;
	@%p351 bra 	BB4_466;

	setp.eq.s32	%p354, %r29, 8;
	@%p354 bra 	BB4_518;
	bra.uni 	BB4_464;

BB4_518:
	and.b32  	%r10721, %r21, 255;
	bra.uni 	BB4_523;

BB4_342:
	setp.gt.s32	%p247, %r3578, 5;
	@%p247 bra 	BB4_346;

	setp.eq.s32	%p250, %r3578, 4;
	@%p250 bra 	BB4_350;
	bra.uni 	BB4_344;

BB4_350:
	and.b32  	%r3588, %r27, %r340;
	and.b32  	%r3589, %r3562, %r339;
	or.b32  	%r10846, %r3589, %r3588;
	bra.uni 	BB4_647;

BB4_1420:
	setp.eq.s32	%p969, %r7453, 2;
	@%p969 bra 	BB4_1432;
	bra.uni 	BB4_1421;

BB4_1432:
	// inline asm
	prmt.b32 %r10837, %r27, %r26, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10836, %r20, %r27, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10835, %r21, %r20, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10834, %r22, %r21, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10833, %r23, %r22, %r1538;
	// inline asm
	mov.u32 	%r10830, 0;
	// inline asm
	prmt.b32 %r10832, %r10830, %r23, %r1538;
	// inline asm
	mov.u32 	%r10831, %r10830;
	bra.uni 	BB4_1434;

BB4_1327:
	setp.gt.s32	%p889, %r6507, 23;
	@%p889 bra 	BB4_1344;

	setp.gt.s32	%p901, %r6507, 19;
	@%p901 bra 	BB4_1337;

	setp.gt.s32	%p907, %r6507, 17;
	@%p907 bra 	BB4_1333;

	setp.eq.s32	%p910, %r6507, 16;
	@%p910 bra 	BB4_1370;
	bra.uni 	BB4_1331;

BB4_1370:
	mov.u32 	%r10796, %r23;
	mov.u32 	%r10797, %r22;
	mov.u32 	%r10798, %r21;
	mov.u32 	%r10799, %r20;
	bra.uni 	BB4_1364;

BB4_429:
	setp.eq.s32	%p313, %r3763, 2;
	@%p313 bra 	BB4_441;
	bra.uni 	BB4_430;

BB4_441:
	and.b32  	%r3787, %r21, %r399;
	and.b32  	%r3788, %r398, %r21;
	shl.b32 	%r3789, %r3788, 1;
	and.b32  	%r3790, %r3789, %r398;
	or.b32  	%r10852, %r3790, %r3787;
	bra.uni 	BB4_629;

BB4_413:
	setp.gt.s32	%p295, %r3727, 5;
	@%p295 bra 	BB4_417;

	setp.eq.s32	%p298, %r3727, 4;
	@%p298 bra 	BB4_421;
	bra.uni 	BB4_415;

BB4_421:
	and.b32  	%r3743, %r27, %r389;
	and.b32  	%r3744, %r388, %r27;
	shr.u32 	%r3745, %r3744, 1;
	and.b32  	%r3746, %r3745, %r388;
	or.b32  	%r10846, %r3746, %r3743;
	bra.uni 	BB4_647;

BB4_947:
	setp.eq.s32	%p626, %r868, 2;
	mov.u32 	%r10854, 0;
	@%p626 bra 	BB4_948;
	bra.uni 	BB4_949;

BB4_948:
	mov.u32 	%r10749, %r10854;
	bra.uni 	BB4_951;

BB4_1261:
	setp.gt.s32	%p828, %r6252, 5;
	@%p828 bra 	BB4_1265;

	setp.eq.s32	%p831, %r6252, 4;
	@%p831 bra 	BB4_1270;
	bra.uni 	BB4_1263;

BB4_1270:
	and.b32  	%r6263, %r1215, %r27;
	and.b32  	%r6264, %r10846, %r1216;
	or.b32  	%r10846, %r6264, %r6263;
	bra.uni 	BB4_1271;

BB4_797:
	setp.gt.s32	%p558, %r29, 11;
	@%p558 bra 	BB4_805;

	setp.gt.s32	%p564, %r29, 9;
	@%p564 bra 	BB4_802;

	setp.eq.s32	%p567, %r29, 8;
	@%p567 bra 	BB4_857;
	bra.uni 	BB4_800;

BB4_857:
	mov.u32 	%r10850, 0;
	mov.u32 	%r10846, %r21;
	mov.u32 	%r10847, %r20;
	mov.u32 	%r10848, %r27;
	mov.u32 	%r24, %r26;
	mov.u32 	%r10851, %r10850;
	mov.u32 	%r10852, %r23;
	mov.u32 	%r20, %r22;
	bra.uni 	BB4_865;

BB4_1279:
	setp.gt.s32	%p858, %r6354, 5;
	@%p858 bra 	BB4_1283;

	setp.eq.s32	%p861, %r6354, 4;
	@%p861 bra 	BB4_1287;
	bra.uni 	BB4_1281;

BB4_1287:
	and.b32  	%r10846, %r10846, %r1260;
	mov.u32 	%r10847, 0;
	mov.u32 	%r10848, %r10847;
	mov.u32 	%r10849, %r10847;
	bra.uni 	BB4_1535;

BB4_401:
	setp.eq.s32	%p284, %r3691, 6;
	@%p284 bra 	BB4_404;
	bra.uni 	BB4_402;

BB4_404:
	and.b32  	%r3699, %r25, %r378;
	and.b32  	%r3700, %r377, %r25;
	add.s32 	%r3701, %r3700, %r379;
	and.b32  	%r3702, %r3701, %r377;
	or.b32  	%r10848, %r3702, %r3699;
	bra.uni 	BB4_670;

BB4_1092:
	setp.gt.s32	%p711, %r31, 27;
	@%p711 bra 	BB4_1102;

	setp.gt.s32	%p717, %r31, 25;
	@%p717 bra 	BB4_1097;

	setp.eq.s32	%p720, %r31, 24;
	@%p720 bra 	BB4_1114;
	bra.uni 	BB4_1095;

BB4_1114:
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r25;
	mov.u32 	%r10851, %r24;
	bra.uni 	BB4_1112;

BB4_1008:
	setp.eq.s32	%p683, %r4993, 6;
	@%p683 bra 	BB4_1012;
	bra.uni 	BB4_1009;

BB4_1012:
	and.b32  	%r4999, %r25, %r919;
	or.b32  	%r10848, %r4999, %r918;

BB4_1013:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	bra.uni 	BB4_13;

BB4_492:
	setp.gt.s32	%p322, %r29, 27;
	@%p322 bra 	BB4_500;

	setp.gt.s32	%p328, %r29, 25;
	@%p328 bra 	BB4_497;

	setp.eq.s32	%p331, %r29, 24;
	@%p331 bra 	BB4_510;
	bra.uni 	BB4_495;

BB4_510:
	and.b32  	%r10721, %r25, 255;
	bra.uni 	BB4_523;

BB4_1427:
	setp.eq.s32	%p964, %r7453, 6;
	@%p964 bra 	BB4_1430;
	bra.uni 	BB4_1428;

BB4_1430:
	// inline asm
	prmt.b32 %r10837, %r23, %r22, %r1538;
	// inline asm
	mov.u32 	%r10830, 0;
	// inline asm
	prmt.b32 %r10836, %r10830, %r23, %r1538;
	// inline asm
	mov.u32 	%r10831, %r10830;
	mov.u32 	%r10832, %r10830;
	mov.u32 	%r10833, %r10830;
	mov.u32 	%r10834, %r10830;
	mov.u32 	%r10835, %r10830;
	bra.uni 	BB4_1434;

BB4_436:
	setp.eq.s32	%p308, %r3763, 6;
	@%p308 bra 	BB4_439;
	bra.uni 	BB4_437;

BB4_439:
	and.b32  	%r3771, %r25, %r399;
	and.b32  	%r3772, %r398, %r25;
	shl.b32 	%r3773, %r3772, 1;
	and.b32  	%r3774, %r3773, %r398;
	or.b32  	%r10848, %r3774, %r3771;
	bra.uni 	BB4_670;

BB4_828:
	setp.gt.s32	%p535, %r29, 27;
	@%p535 bra 	BB4_837;

	setp.gt.s32	%p541, %r29, 25;
	@%p541 bra 	BB4_833;

	setp.eq.s32	%p544, %r29, 24;
	@%p544 bra 	BB4_846;
	bra.uni 	BB4_831;

BB4_846:
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r23;
	mov.u32 	%r24, %r22;
	bra.uni 	BB4_864;

BB4_372:
	setp.eq.s32	%p280, %r3655, 1;
	@%p280 bra 	BB4_373;
	bra.uni 	BB4_10;

BB4_373:
	and.b32  	%r3683, %r22, %r367;
	and.b32  	%r3684, %r366, %r22;
	sub.s32 	%r3685, %r3684, %r368;
	and.b32  	%r3686, %r3685, %r366;
	or.b32  	%r10851, %r3686, %r3683;
	bra.uni 	BB4_620;

BB4_1023:
	setp.eq.s32	%p705, %r5034, 1;
	@%p705 bra 	BB4_1038;
	bra.uni 	BB4_1024;

BB4_1038:
	and.b32  	%r5058, %r937, %r22;
	or.b32  	%r5059, %r5058, %r936;
	and.b32  	%r5060, %r10851, %r938;
	or.b32  	%r10851, %r5059, %r5060;
	mov.u32 	%r10850, %r23;
	bra.uni 	BB4_1536;

BB4_1516:
	setp.eq.s32	%p1029, %r8194, 1;
	@%p1029 bra 	BB4_1517;
	bra.uni 	BB4_777;

BB4_1517:
	and.b32  	%r8276, %r22, 1077952576;
	shr.u32 	%r8277, %r8276, 1;
	and.b32  	%r8278, %r22, -2139062144;
	shr.u32 	%r8279, %r8278, 2;
	not.b32 	%r8280, %r8279;
	and.b32  	%r8281, %r8277, %r8280;
	and.b32  	%r8282, %r22, 522133279;
	add.s32 	%r8283, %r8282, 522133279;
	mov.u32 	%r8284, -84215046;
	sub.s32 	%r8285, %r8284, %r8282;
	and.b32  	%r8286, %r8281, %r8285;
	and.b32  	%r8287, %r8286, %r8283;
	and.b32  	%r8288, %r8287, %r1715;
	xor.b32  	%r10851, %r8288, %r22;
	bra.uni 	BB4_999;

BB4_1157:
	setp.gt.s32	%p807, %r29, 5;
	@%p807 bra 	BB4_1161;

	setp.eq.s32	%p810, %r29, 4;
	@%p810 bra 	BB4_1226;
	bra.uni 	BB4_1159;

BB4_1226:
	mov.u32 	%r10849, 0;
	mov.u32 	%r10846, %r26;
	mov.u32 	%r10847, %r25;
	mov.u32 	%r10848, %r24;
	mov.u32 	%r10850, %r22;
	mov.u32 	%r10851, %r21;
	mov.u32 	%r10852, %r20;
	mov.u32 	%r24, %r27;
	bra.uni 	BB4_1234;

BB4_975:
	setp.eq.s32	%p676, %r4960, 2;
	@%p676 bra 	BB4_988;
	bra.uni 	BB4_976;

BB4_988:
	and.b32  	%r10852, %r909, %r21;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	bra.uni 	BB4_991;

BB4_704:
	setp.gt.s32	%p485, %r19, 12;
	@%p485 bra 	BB4_712;

	setp.gt.s32	%p491, %r19, 10;
	@%p491 bra 	BB4_709;

	setp.eq.s32	%p494, %r19, 9;
	@%p494 bra 	BB4_770;
	bra.uni 	BB4_707;

BB4_770:
	or.b32  	%r4014, %r21, %r22;
	and.b32  	%r4015, %r22, 16777215;
	prmt.b32 	%r10851, %r21, %r4015, 1620;
	shr.u32 	%r10852, %r4014, 24;
	mov.u32 	%r10854, 9;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10853, %r20;
	bra.uni 	BB4_1536;

BB4_1437:
	setp.gt.s32	%p1010, %r7632, 5;
	@%p1010 bra 	BB4_1441;

	setp.eq.s32	%p1013, %r7632, 4;
	@%p1013 bra 	BB4_1506;
	bra.uni 	BB4_1439;

BB4_1506:
	mov.u32 	%r10842, 0;
	mov.u32 	%r10838, %r20;
	mov.u32 	%r10839, %r27;
	mov.u32 	%r10840, %r26;
	mov.u32 	%r27, %r25;
	mov.u32 	%r10843, %r23;
	mov.u32 	%r10844, %r22;
	mov.u32 	%r23, %r21;
	bra.uni 	BB4_1511;

BB4_355:
	setp.eq.s32	%p265, %r3631, 2;
	@%p265 bra 	BB4_367;
	bra.uni 	BB4_356;

BB4_367:
	and.b32  	%r3649, %r21, %r357;
	and.b32  	%r3650, %r3611, %r356;
	or.b32  	%r10852, %r3650, %r3649;
	bra.uni 	BB4_629;

BB4_147:
	setp.gt.s32	%p151, %r29, 11;
	@%p151 bra 	BB4_155;

	setp.gt.s32	%p157, %r29, 9;
	@%p157 bra 	BB4_152;

	setp.eq.s32	%p160, %r29, 8;
	@%p160 bra 	BB4_209;
	bra.uni 	BB4_150;

BB4_209:
	mov.u32 	%r10689, %r21;
	mov.u32 	%r10690, %r20;
	mov.u32 	%r10691, %r27;
	mov.u32 	%r10692, %r26;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r23;
	mov.u32 	%r10696, %r22;
	bra.uni 	BB4_213;

BB4_236:
	setp.eq.s32	%p194, %r2973, 2;
	@%p194 bra 	BB4_249;
	bra.uni 	BB4_237;

BB4_249:
	and.b32  	%r10711, %r191, %r21;
	mov.u32 	%r10705, 0;
	mov.u32 	%r10706, %r10705;
	mov.u32 	%r10707, %r10705;
	mov.u32 	%r10708, %r10705;
	mov.u32 	%r10709, %r23;
	mov.u32 	%r10710, %r22;
	bra.uni 	BB4_250;

BB4_379:
	setp.eq.s32	%p275, %r3655, 5;
	@%p275 bra 	BB4_380;
	bra.uni 	BB4_10;

BB4_380:
	and.b32  	%r3667, %r26, %r367;
	and.b32  	%r3668, %r366, %r26;
	sub.s32 	%r3669, %r3668, %r368;
	and.b32  	%r3670, %r3669, %r366;
	or.b32  	%r10847, %r3670, %r3667;
	bra.uni 	BB4_655;

BB4_1030:
	setp.eq.s32	%p700, %r5034, 5;
	@%p700 bra 	BB4_1031;
	bra.uni 	BB4_1024;

BB4_1031:
	and.b32  	%r5046, %r937, %r26;
	or.b32  	%r5047, %r5046, %r936;
	and.b32  	%r5048, %r10847, %r938;
	or.b32  	%r10847, %r5047, %r5048;
	mov.u32 	%r10846, %r27;
	bra.uni 	BB4_757;

BB4_1523:
	setp.eq.s32	%p1024, %r8194, 5;
	@%p1024 bra 	BB4_1524;
	bra.uni 	BB4_777;

BB4_1524:
	and.b32  	%r8224, %r26, 1077952576;
	shr.u32 	%r8225, %r8224, 1;
	and.b32  	%r8226, %r26, -2139062144;
	shr.u32 	%r8227, %r8226, 2;
	not.b32 	%r8228, %r8227;
	and.b32  	%r8229, %r8225, %r8228;
	and.b32  	%r8230, %r26, 522133279;
	add.s32 	%r8231, %r8230, 522133279;
	mov.u32 	%r8232, -84215046;
	sub.s32 	%r8233, %r8232, %r8230;
	and.b32  	%r8234, %r8229, %r8233;
	and.b32  	%r8235, %r8234, %r8231;
	and.b32  	%r8236, %r8235, %r1715;
	xor.b32  	%r10847, %r8236, %r26;
	bra.uni 	BB4_1007;

BB4_1188:
	setp.gt.s32	%p784, %r29, 21;
	@%p784 bra 	BB4_1192;

	setp.eq.s32	%p787, %r29, 20;
	@%p787 bra 	BB4_1216;
	bra.uni 	BB4_1190;

BB4_1216:
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10850, %r26;
	mov.u32 	%r10851, %r25;
	mov.u32 	%r10852, %r24;
	bra.uni 	BB4_1233;

BB4_1468:
	setp.gt.s32	%p987, %r7632, 21;
	@%p987 bra 	BB4_1472;

	setp.eq.s32	%p990, %r7632, 20;
	@%p990 bra 	BB4_1495;
	bra.uni 	BB4_1470;

BB4_1495:
	mov.u32 	%r10838, 0;
	mov.u32 	%r10839, %r23;
	mov.u32 	%r10840, %r22;
	mov.u32 	%r27, %r21;
	bra.uni 	BB4_1510;

BB4_375:
	setp.eq.s32	%p278, %r3655, 3;
	@%p278 bra 	BB4_376;
	bra.uni 	BB4_10;

BB4_376:
	and.b32  	%r3675, %r20, %r367;
	and.b32  	%r3676, %r366, %r20;
	sub.s32 	%r3677, %r3676, %r368;
	and.b32  	%r3678, %r3677, %r366;
	or.b32  	%r10853, %r3678, %r3675;
	bra.uni 	BB4_637;

BB4_1026:
	setp.eq.s32	%p703, %r5034, 3;
	@%p703 bra 	BB4_1027;
	bra.uni 	BB4_1024;

BB4_1027:
	and.b32  	%r5052, %r937, %r20;
	or.b32  	%r5053, %r5052, %r936;
	and.b32  	%r5054, %r10853, %r938;
	or.b32  	%r10853, %r5053, %r5054;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	bra.uni 	BB4_1536;

BB4_1519:
	setp.eq.s32	%p1027, %r8194, 3;
	@%p1027 bra 	BB4_1520;
	bra.uni 	BB4_777;

BB4_1520:
	and.b32  	%r8250, %r20, 1077952576;
	shr.u32 	%r8251, %r8250, 1;
	and.b32  	%r8252, %r20, -2139062144;
	shr.u32 	%r8253, %r8252, 2;
	not.b32 	%r8254, %r8253;
	and.b32  	%r8255, %r8251, %r8254;
	and.b32  	%r8256, %r20, 522133279;
	add.s32 	%r8257, %r8256, 522133279;
	mov.u32 	%r8258, -84215046;
	sub.s32 	%r8259, %r8258, %r8256;
	and.b32  	%r8260, %r8255, %r8259;
	and.b32  	%r8261, %r8260, %r8257;
	and.b32  	%r8262, %r8261, %r1715;
	xor.b32  	%r10853, %r8262, %r20;
	bra.uni 	BB4_637;

BB4_1172:
	setp.gt.s32	%p796, %r29, 13;
	@%p796 bra 	BB4_1176;

	setp.eq.s32	%p799, %r29, 12;
	@%p799 bra 	BB4_1222;
	bra.uni 	BB4_1174;

BB4_1222:
	mov.u32 	%r10847, 0;
	mov.u32 	%r10846, %r24;
	mov.u32 	%r10848, %r10847;
	mov.u32 	%r10849, %r10847;
	mov.u32 	%r10850, %r20;
	mov.u32 	%r10851, %r27;
	mov.u32 	%r10852, %r26;
	mov.u32 	%r24, %r25;
	bra.uni 	BB4_1234;

BB4_982:
	setp.eq.s32	%p671, %r4960, 6;
	@%p671 bra 	BB4_986;
	bra.uni 	BB4_983;

BB4_986:
	and.b32  	%r10848, %r909, %r25;
	mov.u32 	%r10849, 0;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	bra.uni 	BB4_985;

BB4_732:
	setp.gt.s32	%p464, %r19, 27;
	@%p464 bra 	BB4_740;

	setp.gt.s32	%p470, %r19, 25;
	@%p470 bra 	BB4_737;

	setp.eq.s32	%p473, %r19, 24;
	@%p473 bra 	BB4_752;
	bra.uni 	BB4_735;

BB4_752:
	and.b32  	%r3933, %r26, 65535;
	shl.b32 	%r3934, %r26, 8;
	and.b32  	%r3935, %r3934, -16777216;
	or.b32  	%r3936, %r3935, %r3933;
	shr.u32 	%r3937, %r26, 8;
	and.b32  	%r3938, %r3937, 16711680;
	or.b32  	%r10847, %r3936, %r3938;
	mov.u32 	%r10854, 24;
	bra.uni 	BB4_754;

BB4_1452:
	setp.gt.s32	%p999, %r7632, 13;
	@%p999 bra 	BB4_1456;

	setp.eq.s32	%p1002, %r7632, 12;
	@%p1002 bra 	BB4_1501;
	bra.uni 	BB4_1454;

BB4_1501:
	mov.u32 	%r10842, 0;
	mov.u32 	%r10838, %r22;
	mov.u32 	%r10839, %r21;
	mov.u32 	%r10840, %r20;
	bra.uni 	BB4_1502;

BB4_362:
	setp.eq.s32	%p260, %r3631, 6;
	@%p260 bra 	BB4_365;
	bra.uni 	BB4_363;

BB4_365:
	and.b32  	%r3641, %r25, %r357;
	and.b32  	%r3642, %r3627, %r356;
	or.b32  	%r10848, %r3642, %r3641;
	bra.uni 	BB4_670;

BB4_179:
	setp.gt.s32	%p128, %r29, 27;
	@%p128 bra 	BB4_189;

	setp.gt.s32	%p134, %r29, 25;
	@%p134 bra 	BB4_184;

	setp.eq.s32	%p137, %r29, 24;
	@%p137 bra 	BB4_201;
	bra.uni 	BB4_182;

BB4_201:
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r23;
	mov.u32 	%r10692, %r22;
	bra.uni 	BB4_199;

BB4_243:
	setp.eq.s32	%p189, %r2973, 6;
	@%p189 bra 	BB4_247;
	bra.uni 	BB4_244;

BB4_247:
	and.b32  	%r10707, %r191, %r25;
	mov.u32 	%r10708, 0;
	mov.u32 	%r10705, %r27;
	mov.u32 	%r10706, %r26;
	bra.uni 	BB4_246;

BB4_382:
	setp.ne.s32	%p273, %r3655, 7;
	@%p273 bra 	BB4_10;

	and.b32  	%r3659, %r24, %r367;
	and.b32  	%r3660, %r366, %r24;
	sub.s32 	%r3661, %r3660, %r368;
	and.b32  	%r3662, %r3661, %r366;
	or.b32  	%r10849, %r3662, %r3659;
	bra.uni 	BB4_678;

BB4_1033:
	setp.ne.s32	%p698, %r5034, 7;
	@%p698 bra 	BB4_1024;

	and.b32  	%r5040, %r937, %r24;
	or.b32  	%r5041, %r5040, %r936;
	and.b32  	%r5042, %r10849, %r938;
	or.b32  	%r10849, %r5041, %r5042;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	bra.uni 	BB4_757;

BB4_1024:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;

BB4_755:
	mov.u32 	%r10848, %r25;

BB4_756:
	mov.u32 	%r10849, %r24;

BB4_757:
	mov.u32 	%r10850, %r23;

BB4_758:
	mov.u32 	%r10851, %r22;

BB4_759:
	mov.u32 	%r10852, %r21;
	mov.u32 	%r10853, %r20;
	bra.uni 	BB4_1536;

BB4_1526:
	setp.ne.s32	%p1022, %r8194, 7;
	@%p1022 bra 	BB4_777;

	and.b32  	%r8198, %r24, 1077952576;
	shr.u32 	%r8199, %r8198, 1;
	and.b32  	%r8200, %r24, -2139062144;
	shr.u32 	%r8201, %r8200, 2;
	not.b32 	%r8202, %r8201;
	and.b32  	%r8203, %r8199, %r8202;
	and.b32  	%r8204, %r24, 522133279;
	add.s32 	%r8205, %r8204, 522133279;
	mov.u32 	%r8206, -84215046;
	sub.s32 	%r8207, %r8206, %r8204;
	and.b32  	%r8208, %r8203, %r8207;
	and.b32  	%r8209, %r8208, %r8205;
	and.b32  	%r8210, %r8209, %r1715;
	xor.b32  	%r10849, %r8210, %r24;
	bra.uni 	BB4_1011;

BB4_1205:
	setp.gt.s32	%p773, %r29, 29;
	@%p773 bra 	BB4_1209;

	setp.eq.s32	%p776, %r29, 28;
	@%p776 bra 	BB4_1212;
	bra.uni 	BB4_1207;

BB4_1212:
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10850, %r24;
	bra.uni 	BB4_1231;

BB4_1484:
	setp.gt.s32	%p976, %r7632, 29;
	@%p976 bra 	BB4_1488;

	setp.eq.s32	%p979, %r7632, 28;
	@%p979 bra 	BB4_1491;
	bra.uni 	BB4_1486;

BB4_1491:
	mov.u32 	%r10838, 0;
	mov.u32 	%r10839, %r10838;
	mov.u32 	%r10840, %r10838;
	mov.u32 	%r27, %r23;
	bra.uni 	BB4_1510;

BB4_392:
	setp.eq.s32	%p292, %r3691, 1;
	@%p292 bra 	BB4_393;
	bra.uni 	BB4_10;

BB4_393:
	and.b32  	%r3719, %r22, %r378;
	and.b32  	%r3720, %r377, %r22;
	add.s32 	%r3721, %r3720, %r379;
	and.b32  	%r3722, %r3721, %r377;
	or.b32  	%r10851, %r3722, %r3719;
	bra.uni 	BB4_620;

BB4_1051:
	setp.gt.s32	%p746, %r31, 5;
	@%p746 bra 	BB4_1055;

	setp.eq.s32	%p749, %r31, 4;
	@%p749 bra 	BB4_1124;
	bra.uni 	BB4_1053;

BB4_1124:
	mov.u32 	%r10846, %r26;
	mov.u32 	%r10847, %r25;
	mov.u32 	%r10848, %r24;
	mov.u32 	%r10768, %r22;
	mov.u32 	%r10851, %r21;
	mov.u32 	%r10852, %r20;
	mov.u32 	%r10853, %r27;
	bra.uni 	BB4_1127;

BB4_997:
	setp.eq.s32	%p691, %r4993, 1;
	@%p691 bra 	BB4_998;
	bra.uni 	BB4_777;

BB4_998:
	and.b32  	%r5004, %r22, %r919;
	or.b32  	%r10851, %r5004, %r918;

BB4_999:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	bra.uni 	BB4_16;

BB4_454:
	setp.gt.s32	%p357, %r29, 5;
	@%p357 bra 	BB4_458;

	setp.eq.s32	%p360, %r29, 4;
	@%p360 bra 	BB4_520;
	bra.uni 	BB4_456;

BB4_520:
	and.b32  	%r10721, %r22, 255;
	bra.uni 	BB4_523;

BB4_339:
	setp.eq.s32	%p253, %r3578, 2;
	@%p253 bra 	BB4_351;
	bra.uni 	BB4_340;

BB4_351:
	and.b32  	%r3592, %r21, %r340;
	and.b32  	%r3593, %r3570, %r339;
	or.b32  	%r10852, %r3593, %r3592;
	bra.uni 	BB4_629;

BB4_1418:
	setp.eq.s32	%p972, %r7453, 1;
	mov.u32 	%r10831, %r10830;
	mov.u32 	%r10832, %r10830;
	mov.u32 	%r10833, %r10830;
	mov.u32 	%r10834, %r10830;
	mov.u32 	%r10835, %r10830;
	mov.u32 	%r10836, %r10830;
	mov.u32 	%r10837, %r10830;
	@%p972 bra 	BB4_1419;
	bra.uni 	BB4_1434;

BB4_1419:
	// inline asm
	prmt.b32 %r10837, %r26, %r25, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10836, %r27, %r26, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10835, %r20, %r27, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10834, %r21, %r20, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10833, %r22, %r21, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10832, %r23, %r22, %r1538;
	// inline asm
	mov.u32 	%r10830, 0;
	// inline asm
	prmt.b32 %r10831, %r10830, %r23, %r1538;
	// inline asm
	bra.uni 	BB4_1434;

BB4_1311:
	setp.gt.s32	%p913, %r6507, 11;
	@%p913 bra 	BB4_1319;

	setp.gt.s32	%p919, %r6507, 9;
	@%p919 bra 	BB4_1316;

	setp.eq.s32	%p922, %r6507, 8;
	@%p922 bra 	BB4_1374;
	bra.uni 	BB4_1314;

BB4_1374:
	mov.u32 	%r10796, %r21;
	mov.u32 	%r10797, %r20;
	mov.u32 	%r10798, %r27;
	mov.u32 	%r10799, %r26;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r23;
	mov.u32 	%r10803, %r22;
	bra.uni 	BB4_1378;

BB4_427:
	setp.eq.s32	%p316, %r3763, 1;
	@%p316 bra 	BB4_428;
	bra.uni 	BB4_10;

BB4_428:
	and.b32  	%r3791, %r22, %r399;
	and.b32  	%r3792, %r398, %r22;
	shl.b32 	%r3793, %r3792, 1;
	and.b32  	%r3794, %r3793, %r398;
	or.b32  	%r10851, %r3794, %r3791;
	bra.uni 	BB4_620;

BB4_410:
	setp.eq.s32	%p301, %r3727, 2;
	@%p301 bra 	BB4_422;
	bra.uni 	BB4_411;

BB4_422:
	and.b32  	%r3751, %r21, %r389;
	and.b32  	%r3752, %r388, %r21;
	shr.u32 	%r3753, %r3752, 1;
	and.b32  	%r3754, %r3753, %r388;
	or.b32  	%r10852, %r3754, %r3751;
	bra.uni 	BB4_629;

BB4_1258:
	setp.eq.s32	%p834, %r6252, 2;
	@%p834 bra 	BB4_1272;
	bra.uni 	BB4_1259;

BB4_1272:
	and.b32  	%r6267, %r1215, %r21;
	and.b32  	%r6268, %r10852, %r1216;
	or.b32  	%r10852, %r6268, %r6267;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	bra.uni 	BB4_1273;

BB4_790:
	setp.gt.s32	%p570, %r29, 5;
	@%p570 bra 	BB4_794;

	setp.eq.s32	%p573, %r29, 4;
	@%p573 bra 	BB4_859;
	bra.uni 	BB4_792;

BB4_859:
	mov.u32 	%r10850, 0;
	mov.u32 	%r10846, %r20;
	mov.u32 	%r10847, %r27;
	mov.u32 	%r10848, %r26;
	mov.u32 	%r24, %r25;
	mov.u32 	%r10851, %r23;
	mov.u32 	%r10852, %r22;
	mov.u32 	%r20, %r21;
	bra.uni 	BB4_865;

BB4_1276:
	setp.eq.s32	%p864, %r6354, 2;
	@%p864 bra 	BB4_1288;
	bra.uni 	BB4_1277;

BB4_1288:
	and.b32  	%r10852, %r10852, %r1260;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	bra.uni 	BB4_1291;

BB4_399:
	setp.eq.s32	%p287, %r3691, 5;
	@%p287 bra 	BB4_400;
	bra.uni 	BB4_10;

BB4_400:
	and.b32  	%r3703, %r26, %r378;
	and.b32  	%r3704, %r377, %r26;
	add.s32 	%r3705, %r3704, %r379;
	and.b32  	%r3706, %r3705, %r377;
	or.b32  	%r10847, %r3706, %r3703;
	bra.uni 	BB4_655;

BB4_1084:
	setp.gt.s32	%p723, %r31, 21;
	@%p723 bra 	BB4_1088;

	setp.eq.s32	%p726, %r31, 20;
	@%p726 bra 	BB4_1116;
	bra.uni 	BB4_1086;

BB4_1116:
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r26;
	mov.u32 	%r10851, %r25;
	mov.u32 	%r10852, %r24;
	mov.u32 	%r10853, %r10849;
	bra.uni 	BB4_1127;

BB4_1005:
	setp.eq.s32	%p686, %r4993, 5;
	@%p686 bra 	BB4_1006;
	bra.uni 	BB4_777;

BB4_1006:
	and.b32  	%r5000, %r26, %r919;
	or.b32  	%r10847, %r5000, %r918;

BB4_1007:
	mov.u32 	%r10846, %r27;
	bra.uni 	BB4_12;

BB4_485:
	setp.gt.s32	%p334, %r29, 21;
	@%p334 bra 	BB4_489;

	setp.eq.s32	%p337, %r29, 20;
	@%p337 bra 	BB4_512;
	bra.uni 	BB4_487;

BB4_512:
	and.b32  	%r10721, %r26, 255;
	bra.uni 	BB4_523;

BB4_1425:
	setp.eq.s32	%p967, %r7453, 5;
	mov.u32 	%r10831, %r10830;
	mov.u32 	%r10832, %r10830;
	mov.u32 	%r10833, %r10830;
	mov.u32 	%r10834, %r10830;
	mov.u32 	%r10835, %r10830;
	mov.u32 	%r10836, %r10830;
	mov.u32 	%r10837, %r10830;
	@%p967 bra 	BB4_1426;
	bra.uni 	BB4_1434;

BB4_1426:
	// inline asm
	prmt.b32 %r10837, %r22, %r21, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10836, %r23, %r22, %r1538;
	// inline asm
	mov.u32 	%r10830, 0;
	// inline asm
	prmt.b32 %r10835, %r10830, %r23, %r1538;
	// inline asm
	mov.u32 	%r10831, %r10830;
	mov.u32 	%r10832, %r10830;
	mov.u32 	%r10833, %r10830;
	mov.u32 	%r10834, %r10830;
	bra.uni 	BB4_1434;

BB4_434:
	setp.eq.s32	%p311, %r3763, 5;
	@%p311 bra 	BB4_435;
	bra.uni 	BB4_10;

BB4_435:
	and.b32  	%r3775, %r26, %r399;
	and.b32  	%r3776, %r398, %r26;
	shl.b32 	%r3777, %r3776, 1;
	and.b32  	%r3778, %r3777, %r398;
	or.b32  	%r10847, %r3778, %r3775;
	bra.uni 	BB4_655;

BB4_821:
	setp.gt.s32	%p547, %r29, 21;
	@%p547 bra 	BB4_825;

	setp.eq.s32	%p550, %r29, 20;
	@%p550 bra 	BB4_848;
	bra.uni 	BB4_823;

BB4_848:
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r23;
	mov.u32 	%r10848, %r22;
	mov.u32 	%r24, %r21;
	bra.uni 	BB4_864;

BB4_395:
	setp.eq.s32	%p290, %r3691, 3;
	@%p290 bra 	BB4_396;
	bra.uni 	BB4_10;

BB4_396:
	and.b32  	%r3711, %r20, %r378;
	and.b32  	%r3712, %r377, %r20;
	add.s32 	%r3713, %r3712, %r379;
	and.b32  	%r3714, %r3713, %r377;
	or.b32  	%r10853, %r3714, %r3711;
	bra.uni 	BB4_637;

BB4_1066:
	setp.gt.s32	%p735, %r31, 13;
	@%p735 bra 	BB4_1070;

	setp.eq.s32	%p738, %r31, 12;
	@%p738 bra 	BB4_1120;
	bra.uni 	BB4_1068;

BB4_1120:
	mov.u32 	%r10846, %r24;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r20;
	mov.u32 	%r10851, %r27;
	mov.u32 	%r10852, %r26;
	mov.u32 	%r10853, %r25;
	bra.uni 	BB4_1127;

BB4_1001:
	setp.eq.s32	%p689, %r4993, 3;
	@%p689 bra 	BB4_1002;
	bra.uni 	BB4_777;

BB4_1002:
	and.b32  	%r5002, %r20, %r919;
	or.b32  	%r10853, %r5002, %r918;
	bra.uni 	BB4_637;

BB4_469:
	setp.gt.s32	%p346, %r29, 13;
	@%p346 bra 	BB4_473;

	setp.eq.s32	%p349, %r29, 12;
	@%p349 bra 	BB4_516;
	bra.uni 	BB4_471;

BB4_516:
	and.b32  	%r10721, %r20, 255;
	bra.uni 	BB4_523;

BB4_346:
	setp.eq.s32	%p248, %r3578, 6;
	@%p248 bra 	BB4_349;
	bra.uni 	BB4_347;

BB4_349:
	and.b32  	%r3584, %r25, %r340;
	and.b32  	%r3585, %r3554, %r339;
	or.b32  	%r10848, %r3585, %r3584;
	bra.uni 	BB4_670;

BB4_1421:
	setp.eq.s32	%p970, %r7453, 3;
	mov.u32 	%r10831, %r10830;
	mov.u32 	%r10832, %r10830;
	mov.u32 	%r10833, %r10830;
	mov.u32 	%r10834, %r10830;
	mov.u32 	%r10835, %r10830;
	mov.u32 	%r10836, %r10830;
	mov.u32 	%r10837, %r10830;
	@%p970 bra 	BB4_1422;
	bra.uni 	BB4_1434;

BB4_1422:
	// inline asm
	prmt.b32 %r10837, %r20, %r27, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10836, %r21, %r20, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10835, %r22, %r21, %r1538;
	// inline asm
	// inline asm
	prmt.b32 %r10834, %r23, %r22, %r1538;
	// inline asm
	mov.u32 	%r10830, 0;
	// inline asm
	prmt.b32 %r10833, %r10830, %r23, %r1538;
	// inline asm
	mov.u32 	%r10831, %r10830;
	mov.u32 	%r10832, %r10830;
	bra.uni 	BB4_1434;

BB4_1344:
	setp.gt.s32	%p890, %r6507, 27;
	@%p890 bra 	BB4_1354;

	setp.gt.s32	%p896, %r6507, 25;
	@%p896 bra 	BB4_1349;

	setp.eq.s32	%p899, %r6507, 24;
	@%p899 bra 	BB4_1366;
	bra.uni 	BB4_1347;

BB4_1366:
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r23;
	mov.u32 	%r10799, %r22;
	bra.uni 	BB4_1364;

BB4_430:
	setp.eq.s32	%p314, %r3763, 3;
	@%p314 bra 	BB4_431;
	bra.uni 	BB4_10;

BB4_431:
	and.b32  	%r3783, %r20, %r399;
	and.b32  	%r3784, %r398, %r20;
	shl.b32 	%r3785, %r3784, 1;
	and.b32  	%r3786, %r3785, %r398;
	or.b32  	%r10853, %r3786, %r3783;
	bra.uni 	BB4_637;

BB4_417:
	setp.eq.s32	%p296, %r3727, 6;
	@%p296 bra 	BB4_420;
	bra.uni 	BB4_418;

BB4_420:
	and.b32  	%r3735, %r25, %r389;
	and.b32  	%r3736, %r388, %r25;
	shr.u32 	%r3737, %r3736, 1;
	and.b32  	%r3738, %r3737, %r388;
	or.b32  	%r10848, %r3738, %r3735;
	bra.uni 	BB4_670;

BB4_949:
	and.b16  	%rs268, %rs2, 255;
	and.b16  	%rs269, %rs376, 255;
	setp.eq.s16	%p627, %rs269, %rs268;
	mov.u32 	%r10749, 1;
	@%p627 bra 	BB4_951;

	st.local.u8 	[%rd116], %rs376;
	mov.u32 	%r10749, 1;
	mov.u32 	%r10854, %r10749;

BB4_951:
	cvt.u64.u32	%rd122, %r10749;
	add.s64 	%rd123, %rd114, %rd122;
	ld.local.u8 	%rs3, [%rd123];
	and.b16  	%rs270, %rs2, 255;
	setp.eq.s16	%p628, %rs3, %rs270;
	@%p628 bra 	BB4_953;

	cvt.u64.u32	%rd124, %r10854;
	add.s64 	%rd127, %rd116, %rd124;
	st.local.u8 	[%rd127], %rs3;
	add.s32 	%r10854, %r10854, 1;

BB4_953:
	add.s32 	%r10752, %r10749, 1;
	cvt.u64.u32	%rd128, %r10752;
	add.s64 	%rd131, %rd114, %rd128;
	ld.local.u8 	%rs376, [%rd131];

BB4_954:
	and.b16  	%rs271, %rs2, 255;
	and.b16  	%rs272, %rs376, 255;
	setp.eq.s16	%p629, %rs272, %rs271;
	@%p629 bra 	BB4_956;

	cvt.u64.u32	%rd132, %r10854;
	add.s64 	%rd135, %rd116, %rd132;
	st.local.u8 	[%rd135], %rs376;
	add.s32 	%r10854, %r10854, 1;

BB4_956:
	add.s32 	%r10757, %r10752, 1;

BB4_957:
	setp.lt.u32	%p630, %r19, 4;
	@%p630 bra 	BB4_967;

BB4_958:
	cvt.u64.u32	%rd137, %r10757;
	add.s64 	%rd138, %rd114, %rd137;
	ld.local.u8 	%rs6, [%rd138];
	and.b16  	%rs273, %rs2, 255;
	setp.eq.s16	%p631, %rs6, %rs273;
	@%p631 bra 	BB4_960;

	cvt.u64.u32	%rd139, %r10854;
	add.s64 	%rd142, %rd116, %rd139;
	st.local.u8 	[%rd142], %rs6;
	add.s32 	%r10854, %r10854, 1;

BB4_960:
	add.s32 	%r4901, %r10757, 1;
	cvt.u64.u32	%rd143, %r4901;
	add.s64 	%rd144, %rd114, %rd143;
	ld.local.u8 	%rs7, [%rd144];
	setp.eq.s16	%p632, %rs7, %rs273;
	@%p632 bra 	BB4_962;

	cvt.u64.u32	%rd145, %r10854;
	add.s64 	%rd148, %rd116, %rd145;
	st.local.u8 	[%rd148], %rs7;
	add.s32 	%r10854, %r10854, 1;

BB4_962:
	add.s32 	%r4902, %r10757, 2;
	cvt.u64.u32	%rd149, %r4902;
	add.s64 	%rd150, %rd114, %rd149;
	ld.local.u8 	%rs8, [%rd150];
	setp.eq.s16	%p633, %rs8, %rs273;
	@%p633 bra 	BB4_964;

	cvt.u64.u32	%rd151, %r10854;
	add.s64 	%rd154, %rd116, %rd151;
	st.local.u8 	[%rd154], %rs8;
	add.s32 	%r10854, %r10854, 1;

BB4_964:
	add.s32 	%r4903, %r10757, 3;
	cvt.u64.u32	%rd155, %r4903;
	add.s64 	%rd156, %rd114, %rd155;
	ld.local.u8 	%rs9, [%rd156];
	setp.eq.s16	%p634, %rs9, %rs273;
	@%p634 bra 	BB4_966;

	cvt.u64.u32	%rd157, %r10854;
	add.s64 	%rd160, %rd116, %rd157;
	st.local.u8 	[%rd160], %rs9;
	add.s32 	%r10854, %r10854, 1;

BB4_966:
	add.s32 	%r10757, %r10757, 4;
	setp.lt.u32	%p635, %r10757, %r19;
	@%p635 bra 	BB4_958;

BB4_967:
	ld.local.v4.u32 	{%r10850, %r10851, %r10852, %r10853}, [%rd116];
	ld.local.v4.u32 	{%r10846, %r10847, %r10848, %r10849}, [%rd116+16];
	bra.uni 	BB4_1536;

BB4_1265:
	setp.eq.s32	%p829, %r6252, 6;
	@%p829 bra 	BB4_1269;
	bra.uni 	BB4_1266;

BB4_1269:
	and.b32  	%r6259, %r1215, %r25;
	and.b32  	%r6260, %r10848, %r1216;
	or.b32  	%r10848, %r6260, %r6259;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	bra.uni 	BB4_1271;

BB4_805:
	setp.gt.s32	%p559, %r29, 13;
	@%p559 bra 	BB4_809;

	setp.eq.s32	%p562, %r29, 12;
	@%p562 bra 	BB4_855;
	bra.uni 	BB4_807;

BB4_855:
	mov.u32 	%r10850, 0;
	mov.u32 	%r10846, %r22;
	mov.u32 	%r10847, %r21;
	mov.u32 	%r10848, %r20;
	mov.u32 	%r24, %r27;
	mov.u32 	%r10851, %r10850;
	mov.u32 	%r10852, %r10850;
	mov.u32 	%r20, %r23;
	bra.uni 	BB4_865;

BB4_1283:
	setp.eq.s32	%p859, %r6354, 6;
	@%p859 bra 	BB4_1286;
	bra.uni 	BB4_1284;

BB4_1286:
	and.b32  	%r10848, %r10848, %r1260;
	bra.uni 	BB4_1535;

BB4_402:
	setp.ne.s32	%p285, %r3691, 7;
	@%p285 bra 	BB4_10;

	and.b32  	%r3695, %r24, %r378;
	and.b32  	%r3696, %r377, %r24;
	add.s32 	%r3697, %r3696, %r379;
	and.b32  	%r3698, %r3697, %r377;
	or.b32  	%r10849, %r3698, %r3695;
	bra.uni 	BB4_678;

BB4_1102:
	setp.gt.s32	%p712, %r31, 29;
	@%p712 bra 	BB4_1106;

	setp.eq.s32	%p715, %r31, 28;
	@%p715 bra 	BB4_1111;
	bra.uni 	BB4_1104;

BB4_1111:
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r24;
	mov.u32 	%r10851, %r10849;

BB4_1112:
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	bra.uni 	BB4_1127;

BB4_1009:
	setp.ne.s32	%p684, %r4993, 7;
	@%p684 bra 	BB4_777;

	and.b32  	%r4998, %r24, %r919;
	or.b32  	%r10849, %r4998, %r918;

BB4_1011:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	bra.uni 	BB4_14;

BB4_777:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;

BB4_656:
	mov.u32 	%r10848, %r25;

BB4_657:
	mov.u32 	%r10849, %r24;

BB4_658:
	mov.u32 	%r10850, %r23;

BB4_659:
	mov.u32 	%r10851, %r22;

BB4_660:
	mov.u32 	%r10852, %r21;

BB4_661:
	mov.u32 	%r10853, %r20;
	bra.uni 	BB4_1535;

BB4_500:
	setp.gt.s32	%p323, %r29, 29;
	@%p323 bra 	BB4_504;

	setp.eq.s32	%p326, %r29, 28;
	@%p326 bra 	BB4_508;
	bra.uni 	BB4_502;

BB4_508:
	and.b32  	%r10721, %r24, 255;
	bra.uni 	BB4_523;

BB4_1428:
	setp.ne.s32	%p965, %r7453, 7;
	mov.u32 	%r10831, %r10830;
	mov.u32 	%r10832, %r10830;
	mov.u32 	%r10833, %r10830;
	mov.u32 	%r10834, %r10830;
	mov.u32 	%r10835, %r10830;
	mov.u32 	%r10836, %r10830;
	mov.u32 	%r10837, %r10830;
	@%p965 bra 	BB4_1434;

	mov.u32 	%r10830, 0;
	// inline asm
	prmt.b32 %r10837, %r10830, %r23, %r1538;
	// inline asm
	mov.u32 	%r10831, %r10830;
	mov.u32 	%r10832, %r10830;
	mov.u32 	%r10833, %r10830;
	mov.u32 	%r10834, %r10830;
	mov.u32 	%r10835, %r10830;
	mov.u32 	%r10836, %r10830;

BB4_1434:
	or.b32  	%r10850, %r10830, %r23;
	or.b32  	%r10851, %r10831, %r22;
	or.b32  	%r10852, %r10832, %r21;
	or.b32  	%r10853, %r10833, %r20;
	or.b32  	%r10846, %r10834, %r27;
	or.b32  	%r10847, %r10835, %r26;
	or.b32  	%r10848, %r10836, %r25;
	or.b32  	%r10849, %r10837, %r24;
	bra.uni 	BB4_1536;

BB4_437:
	setp.ne.s32	%p309, %r3763, 7;
	@%p309 bra 	BB4_10;

	and.b32  	%r3767, %r24, %r399;
	and.b32  	%r3768, %r398, %r24;
	shl.b32 	%r3769, %r3768, 1;
	and.b32  	%r3770, %r3769, %r398;
	or.b32  	%r10849, %r3770, %r3767;
	bra.uni 	BB4_678;

BB4_837:
	setp.gt.s32	%p536, %r29, 29;
	@%p536 bra 	BB4_841;

	setp.eq.s32	%p539, %r29, 28;
	@%p539 bra 	BB4_844;
	bra.uni 	BB4_839;

BB4_844:
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r24, %r23;
	bra.uni 	BB4_864;

BB4_973:
	setp.eq.s32	%p679, %r4960, 1;
	@%p679 bra 	BB4_989;
	bra.uni 	BB4_974;

BB4_989:
	and.b32  	%r10851, %r909, %r22;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10850, %r23;

BB4_990:
	mov.u32 	%r10852, %r10846;

BB4_991:
	mov.u32 	%r10853, %r10846;
	mov.u32 	%r10854, %r29;
	bra.uni 	BB4_1536;

BB4_697:
	setp.gt.s32	%p497, %r19, 6;
	@%p497 bra 	BB4_701;

	setp.eq.s32	%p500, %r19, 5;
	@%p500 bra 	BB4_773;
	bra.uni 	BB4_699;

BB4_773:
	or.b32  	%r4035, %r22, %r23;
	and.b32  	%r4036, %r23, 16777215;
	prmt.b32 	%r10850, %r22, %r4036, 1620;
	shr.u32 	%r10851, %r4035, 24;
	mov.u32 	%r10854, 5;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_759;

BB4_353:
	setp.eq.s32	%p268, %r3631, 1;
	@%p268 bra 	BB4_354;
	bra.uni 	BB4_10;

BB4_354:
	and.b32  	%r3651, %r22, %r357;
	and.b32  	%r3652, %r3607, %r356;
	or.b32  	%r10851, %r3652, %r3651;
	bra.uni 	BB4_620;

BB4_140:
	setp.gt.s32	%p163, %r29, 5;
	@%p163 bra 	BB4_144;

	setp.eq.s32	%p166, %r29, 4;
	@%p166 bra 	BB4_211;
	bra.uni 	BB4_142;

BB4_211:
	mov.u32 	%r10689, %r20;
	mov.u32 	%r10690, %r27;
	mov.u32 	%r10691, %r26;
	mov.u32 	%r10692, %r25;
	mov.u32 	%r10694, %r23;
	mov.u32 	%r10695, %r22;
	mov.u32 	%r10696, %r21;
	bra.uni 	BB4_213;

BB4_234:
	setp.eq.s32	%p197, %r2973, 1;
	mov.u32 	%r10705, %r27;
	mov.u32 	%r10706, %r26;
	mov.u32 	%r10707, %r25;
	mov.u32 	%r10708, %r24;
	mov.u32 	%r10709, %r23;
	mov.u32 	%r10710, %r22;
	mov.u32 	%r10711, %r21;
	mov.u32 	%r10712, %r20;
	@%p197 bra 	BB4_235;
	bra.uni 	BB4_251;

BB4_235:
	and.b32  	%r10710, %r191, %r22;
	mov.u32 	%r10705, 0;
	mov.u32 	%r10706, %r10705;
	mov.u32 	%r10707, %r10705;
	mov.u32 	%r10708, %r10705;
	mov.u32 	%r10709, %r23;

BB4_123:
	mov.u32 	%r10711, %r10705;

BB4_250:
	mov.u32 	%r10712, %r10705;
	bra.uni 	BB4_251;

BB4_1185:
	setp.eq.s32	%p790, %r29, 18;
	@%p790 bra 	BB4_1219;
	bra.uni 	BB4_1186;

BB4_1219:
	mov.u32 	%r5811, 16;
	// inline asm
	shf.r.wrap.b32 %r10850, %r27, %r26, %r5811;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r26, %r25, %r5811;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r25, %r24, %r5811;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r24, %r24, %r10846, %r5811;
	// inline asm
	bra.uni 	BB4_1218;

BB4_1465:
	setp.eq.s32	%p993, %r7632, 18;
	@%p993 bra 	BB4_1496;
	bra.uni 	BB4_1466;

BB4_1496:
	mov.u32 	%r7802, 16;
	// inline asm
	shf.r.wrap.b32 %r27, %r21, %r20, %r7802;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r22, %r21, %r7802;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r23, %r22, %r7802;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r10838, %r10842, %r23, %r7802;
	// inline asm
	bra.uni 	BB4_1498;

BB4_1169:
	setp.eq.s32	%p802, %r29, 10;
	@%p802 bra 	BB4_1223;
	bra.uni 	BB4_1170;

BB4_1223:
	mov.u32 	%r5961, 16;
	// inline asm
	shf.r.wrap.b32 %r10850, %r21, %r20, %r5961;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r20, %r27, %r5961;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r27, %r26, %r5961;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5950, %r26, %r25, %r5961;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r25, %r24, %r5961;
	// inline asm
	mov.u32 	%r10848, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r24, %r10848, %r5961;
	// inline asm
	mov.u32 	%r10849, %r10848;
	mov.u32 	%r24, %r5950;
	bra.uni 	BB4_1234;

BB4_980:
	setp.eq.s32	%p674, %r4960, 5;
	@%p674 bra 	BB4_981;
	bra.uni 	BB4_974;

BB4_981:
	and.b32  	%r10847, %r909, %r26;
	mov.u32 	%r10848, 0;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10849, %r10848;
	bra.uni 	BB4_985;

BB4_725:
	setp.gt.s32	%p476, %r19, 21;
	@%p476 bra 	BB4_729;

	setp.eq.s32	%p479, %r19, 20;
	@%p479 bra 	BB4_760;
	bra.uni 	BB4_727;

BB4_760:
	and.b32  	%r3954, %r27, 65535;
	shl.b32 	%r3955, %r27, 8;
	and.b32  	%r3956, %r3955, -16777216;
	or.b32  	%r3957, %r3956, %r3954;
	shr.u32 	%r3958, %r27, 8;
	and.b32  	%r3959, %r3958, 16711680;
	or.b32  	%r10846, %r3957, %r3959;
	mov.u32 	%r10854, 20;
	bra.uni 	BB4_762;

BB4_1449:
	setp.eq.s32	%p1005, %r7632, 10;
	@%p1005 bra 	BB4_1503;
	bra.uni 	BB4_1450;

BB4_1503:
	mov.u32 	%r7952, 16;
	// inline asm
	shf.r.wrap.b32 %r7929, %r27, %r26, %r7952;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r20, %r27, %r7952;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r21, %r20, %r7952;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r22, %r21, %r7952;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r7945, %r23, %r22, %r7952;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r10844, %r10842, %r23, %r7952;
	// inline asm
	mov.u32 	%r27, %r7929;
	mov.u32 	%r10843, %r10842;
	mov.u32 	%r23, %r7945;
	bra.uni 	BB4_1511;

BB4_360:
	setp.eq.s32	%p263, %r3631, 5;
	@%p263 bra 	BB4_361;
	bra.uni 	BB4_10;

BB4_361:
	and.b32  	%r3643, %r26, %r357;
	and.b32  	%r3644, %r3623, %r356;
	or.b32  	%r10847, %r3644, %r3643;
	bra.uni 	BB4_655;

BB4_172:
	setp.gt.s32	%p140, %r29, 21;
	@%p140 bra 	BB4_176;

	setp.eq.s32	%p143, %r29, 20;
	@%p143 bra 	BB4_203;
	bra.uni 	BB4_174;

BB4_203:
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r23;
	mov.u32 	%r10691, %r22;
	mov.u32 	%r10692, %r21;
	bra.uni 	BB4_199;

BB4_241:
	setp.eq.s32	%p192, %r2973, 5;
	mov.u32 	%r10705, %r27;
	mov.u32 	%r10706, %r26;
	mov.u32 	%r10707, %r25;
	mov.u32 	%r10708, %r24;
	mov.u32 	%r10709, %r23;
	mov.u32 	%r10710, %r22;
	mov.u32 	%r10711, %r21;
	mov.u32 	%r10712, %r20;
	@%p192 bra 	BB4_242;
	bra.uni 	BB4_251;

BB4_242:
	and.b32  	%r10706, %r191, %r26;
	mov.u32 	%r10707, 0;
	mov.u32 	%r10705, %r27;
	mov.u32 	%r10708, %r10707;
	bra.uni 	BB4_246;

BB4_1201:
	setp.eq.s32	%p779, %r29, 26;
	@%p779 bra 	BB4_1213;
	bra.uni 	BB4_1202;

BB4_1213:
	mov.u32 	%r5693, 16;
	// inline asm
	shf.r.wrap.b32 %r10850, %r25, %r24, %r5693;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r24, %r10846, %r5693;
	// inline asm
	bra.uni 	BB4_1204;

BB4_1480:
	setp.eq.s32	%p982, %r7632, 26;
	@%p982 bra 	BB4_1492;
	bra.uni 	BB4_1481;

BB4_1492:
	mov.u32 	%r7684, 16;
	// inline asm
	shf.r.wrap.b32 %r27, %r23, %r22, %r7684;
	// inline asm
	mov.u32 	%r10838, 0;
	// inline asm
	shf.r.wrap.b32 %r10840, %r10838, %r23, %r7684;
	// inline asm
	bra.uni 	BB4_1483;

BB4_1161:
	setp.eq.s32	%p808, %r29, 6;
	@%p808 bra 	BB4_1225;
	bra.uni 	BB4_1162;

BB4_1225:
	mov.u32 	%r6048, 16;
	// inline asm
	shf.r.wrap.b32 %r10850, %r22, %r21, %r6048;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r21, %r20, %r6048;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r20, %r27, %r6048;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6033, %r27, %r26, %r6048;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r26, %r25, %r6048;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r25, %r24, %r6048;
	// inline asm
	mov.u32 	%r10849, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r24, %r10849, %r6048;
	// inline asm
	mov.u32 	%r24, %r6033;
	bra.uni 	BB4_1234;

BB4_976:
	setp.eq.s32	%p677, %r4960, 3;
	@%p677 bra 	BB4_977;
	bra.uni 	BB4_974;

BB4_977:
	and.b32  	%r10853, %r909, %r20;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	mov.u32 	%r10854, %r29;
	bra.uni 	BB4_1536;

BB4_712:
	setp.gt.s32	%p486, %r19, 14;
	@%p486 bra 	BB4_716;

	setp.eq.s32	%p489, %r19, 13;
	@%p489 bra 	BB4_767;
	bra.uni 	BB4_714;

BB4_767:
	or.b32  	%r3993, %r20, %r21;
	and.b32  	%r3994, %r21, 16777215;
	prmt.b32 	%r10852, %r20, %r3994, 1620;
	shr.u32 	%r10853, %r3993, 24;
	mov.u32 	%r10854, 13;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	bra.uni 	BB4_1536;

BB4_1441:
	setp.eq.s32	%p1011, %r7632, 6;
	@%p1011 bra 	BB4_1505;
	bra.uni 	BB4_1442;

BB4_1505:
	mov.u32 	%r8039, 16;
	// inline asm
	shf.r.wrap.b32 %r8012, %r26, %r25, %r8039;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r27, %r26, %r8039;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r20, %r27, %r8039;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r21, %r20, %r8039;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8028, %r22, %r21, %r8039;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10844, %r23, %r22, %r8039;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r10843, %r10842, %r23, %r8039;
	// inline asm
	mov.u32 	%r27, %r8012;
	mov.u32 	%r23, %r8028;
	bra.uni 	BB4_1511;

BB4_356:
	setp.eq.s32	%p266, %r3631, 3;
	@%p266 bra 	BB4_357;
	bra.uni 	BB4_10;

BB4_357:
	and.b32  	%r3647, %r20, %r357;
	and.b32  	%r3648, %r3615, %r356;
	or.b32  	%r10853, %r3648, %r3647;
	bra.uni 	BB4_637;

BB4_155:
	setp.gt.s32	%p152, %r29, 13;
	@%p152 bra 	BB4_159;

	setp.eq.s32	%p155, %r29, 12;
	@%p155 bra 	BB4_207;
	bra.uni 	BB4_157;

BB4_207:
	mov.u32 	%r10689, %r22;
	mov.u32 	%r10690, %r21;
	mov.u32 	%r10691, %r20;
	mov.u32 	%r10692, %r27;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r23;
	bra.uni 	BB4_213;

BB4_237:
	setp.eq.s32	%p195, %r2973, 3;
	mov.u32 	%r10705, %r27;
	mov.u32 	%r10706, %r26;
	mov.u32 	%r10707, %r25;
	mov.u32 	%r10708, %r24;
	mov.u32 	%r10709, %r23;
	mov.u32 	%r10710, %r22;
	mov.u32 	%r10711, %r21;
	mov.u32 	%r10712, %r20;
	@%p195 bra 	BB4_238;
	bra.uni 	BB4_251;

BB4_238:
	and.b32  	%r10712, %r191, %r20;
	mov.u32 	%r10705, 0;
	mov.u32 	%r10706, %r10705;
	mov.u32 	%r10707, %r10705;
	mov.u32 	%r10708, %r10705;
	mov.u32 	%r10709, %r23;
	mov.u32 	%r10710, %r22;
	mov.u32 	%r10711, %r21;
	bra.uni 	BB4_251;

BB4_1192:
	setp.eq.s32	%p785, %r29, 22;
	@%p785 bra 	BB4_1215;
	bra.uni 	BB4_1193;

BB4_1215:
	mov.u32 	%r5748, 16;
	// inline asm
	shf.r.wrap.b32 %r10850, %r26, %r25, %r5748;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r25, %r24, %r5748;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r24, %r10846, %r5748;
	// inline asm
	bra.uni 	BB4_1195;

BB4_1472:
	setp.eq.s32	%p988, %r7632, 22;
	@%p988 bra 	BB4_1494;
	bra.uni 	BB4_1473;

BB4_1494:
	mov.u32 	%r7739, 16;
	// inline asm
	shf.r.wrap.b32 %r27, %r22, %r21, %r7739;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r23, %r22, %r7739;
	// inline asm
	mov.u32 	%r10838, 0;
	// inline asm
	shf.r.wrap.b32 %r10839, %r10838, %r23, %r7739;
	// inline asm
	bra.uni 	BB4_1510;

BB4_1176:
	setp.eq.s32	%p797, %r29, 14;
	@%p797 bra 	BB4_1221;
	bra.uni 	BB4_1177;

BB4_1221:
	mov.u32 	%r5882, 16;
	// inline asm
	shf.r.wrap.b32 %r10850, %r20, %r27, %r5882;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r27, %r26, %r5882;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r26, %r25, %r5882;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5875, %r25, %r24, %r5882;
	// inline asm
	mov.u32 	%r10847, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r24, %r10847, %r5882;
	// inline asm
	mov.u32 	%r10848, %r10847;
	mov.u32 	%r10849, %r10847;
	mov.u32 	%r24, %r5875;
	bra.uni 	BB4_1234;

BB4_983:
	setp.ne.s32	%p672, %r4960, 7;
	@%p672 bra 	BB4_974;

	and.b32  	%r10849, %r909, %r24;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	bra.uni 	BB4_985;

BB4_974:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;

BB4_985:
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	mov.u32 	%r10853, %r20;
	mov.u32 	%r10854, %r29;
	bra.uni 	BB4_1536;

BB4_740:
	setp.gt.s32	%p465, %r19, 29;
	@%p465 bra 	BB4_744;

	setp.eq.s32	%p468, %r19, 28;
	@%p468 bra 	BB4_749;
	bra.uni 	BB4_742;

BB4_749:
	and.b32  	%r3912, %r25, 65535;
	shl.b32 	%r3913, %r25, 8;
	and.b32  	%r3914, %r3913, -16777216;
	or.b32  	%r3915, %r3914, %r3912;
	shr.u32 	%r3916, %r25, 8;
	and.b32  	%r3917, %r3916, 16711680;
	or.b32  	%r10848, %r3915, %r3917;
	mov.u32 	%r10854, 28;
	bra.uni 	BB4_751;

BB4_1456:
	setp.eq.s32	%p1000, %r7632, 14;
	@%p1000 bra 	BB4_1500;
	bra.uni 	BB4_1457;

BB4_1500:
	mov.u32 	%r7873, 16;
	// inline asm
	shf.r.wrap.b32 %r27, %r20, %r27, %r7873;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r21, %r20, %r7873;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r22, %r21, %r7873;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r23, %r22, %r7873;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r23, %r10842, %r23, %r7873;
	// inline asm
	bra.uni 	BB4_1502;

BB4_363:
	setp.ne.s32	%p261, %r3631, 7;
	@%p261 bra 	BB4_10;

	mov.u32 	%r3637, 0;
	// inline asm
	shf.r.wrap.b32 %r3635, %r24, %r3637, %r3630;
	// inline asm
	and.b32  	%r3639, %r3635, %r356;
	and.b32  	%r3640, %r24, %r357;
	or.b32  	%r10849, %r3639, %r3640;
	bra.uni 	BB4_678;

BB4_189:
	setp.gt.s32	%p129, %r29, 29;
	@%p129 bra 	BB4_193;

	setp.eq.s32	%p132, %r29, 28;
	@%p132 bra 	BB4_198;
	bra.uni 	BB4_191;

BB4_198:
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r23;
	bra.uni 	BB4_199;

BB4_244:
	setp.ne.s32	%p190, %r2973, 7;
	mov.u32 	%r10705, %r27;
	mov.u32 	%r10706, %r26;
	mov.u32 	%r10707, %r25;
	mov.u32 	%r10708, %r24;
	mov.u32 	%r10709, %r23;
	mov.u32 	%r10710, %r22;
	mov.u32 	%r10711, %r21;
	mov.u32 	%r10712, %r20;
	@%p190 bra 	BB4_251;

	and.b32  	%r10708, %r191, %r24;
	mov.u32 	%r10705, %r27;
	mov.u32 	%r10706, %r26;
	mov.u32 	%r10707, %r25;

BB4_246:
	mov.u32 	%r10709, %r23;
	mov.u32 	%r10710, %r22;
	mov.u32 	%r10711, %r21;
	mov.u32 	%r10712, %r20;

BB4_251:
	setp.gt.s32	%p198, %r29, 15;
	@%p198 bra 	BB4_280;

	setp.gt.s32	%p222, %r29, 7;
	@%p222 bra 	BB4_265;

	setp.gt.s32	%p234, %r29, 3;
	@%p234 bra 	BB4_258;

	setp.eq.s32	%p240, %r29, 1;
	@%p240 bra 	BB4_329;

	setp.eq.s32	%p241, %r29, 2;
	@%p241 bra 	BB4_328;
	bra.uni 	BB4_256;

BB4_328:
	mov.u32 	%r3506, 16;
	// inline asm
	shf.r.wrap.b32 %r3475, %r25, %r24, %r3506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r26, %r25, %r3506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r27, %r26, %r3506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r20, %r27, %r3506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3491, %r21, %r20, %r3506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10719, %r22, %r21, %r3506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10718, %r23, %r22, %r3506;
	// inline asm
	mov.u32 	%r3504, 0;
	// inline asm
	shf.r.wrap.b32 %r10717, %r3504, %r23, %r3506;
	// inline asm
	mov.u32 	%r27, %r3475;
	mov.u32 	%r23, %r3491;
	bra.uni 	BB4_333;

BB4_280:
	setp.gt.s32	%p199, %r29, 23;
	@%p199 bra 	BB4_296;

	setp.gt.s32	%p211, %r29, 19;
	@%p211 bra 	BB4_289;

	setp.gt.s32	%p217, %r29, 17;
	@%p217 bra 	BB4_286;

	setp.eq.s32	%p220, %r29, 16;
	@%p220 bra 	BB4_318;
	bra.uni 	BB4_284;

BB4_318:
	mov.u32 	%r10717, 0;
	mov.u32 	%r10713, %r23;
	mov.u32 	%r10714, %r22;
	mov.u32 	%r10715, %r21;
	mov.u32 	%r27, %r20;
	bra.uni 	BB4_319;

BB4_265:
	setp.gt.s32	%p223, %r29, 11;
	@%p223 bra 	BB4_273;

	setp.gt.s32	%p229, %r29, 9;
	@%p229 bra 	BB4_270;

	setp.eq.s32	%p232, %r29, 8;
	@%p232 bra 	BB4_325;
	bra.uni 	BB4_268;

BB4_325:
	mov.u32 	%r10717, 0;
	mov.u32 	%r10713, %r21;
	mov.u32 	%r10714, %r20;
	mov.u32 	%r10715, %r27;
	mov.u32 	%r27, %r26;
	mov.u32 	%r10718, %r10717;
	mov.u32 	%r10719, %r23;
	mov.u32 	%r23, %r22;
	bra.uni 	BB4_333;

BB4_296:
	setp.gt.s32	%p200, %r29, 27;
	@%p200 bra 	BB4_305;

	setp.gt.s32	%p206, %r29, 25;
	@%p206 bra 	BB4_301;

	setp.eq.s32	%p209, %r29, 24;
	@%p209 bra 	BB4_314;
	bra.uni 	BB4_299;

BB4_314:
	mov.u32 	%r10713, 0;
	mov.u32 	%r10714, %r10713;
	mov.u32 	%r10715, %r23;
	mov.u32 	%r27, %r22;
	bra.uni 	BB4_332;

BB4_1209:
	setp.eq.s32	%p774, %r29, 31;
	@%p774 bra 	BB4_1229;
	bra.uni 	BB4_1210;

BB4_1229:
	mov.u32 	%r10846, 0;
	mov.u32 	%r6179, 24;
	// inline asm
	shf.r.wrap.b32 %r10850, %r24, %r10846, %r6179;
	// inline asm
	bra.uni 	BB4_1230;

BB4_1488:
	setp.eq.s32	%p977, %r7632, 31;
	@%p977 bra 	BB4_1508;
	bra.uni 	BB4_1489;

BB4_1508:
	mov.u32 	%r10838, 0;
	mov.u32 	%r8170, 8;
	// inline asm
	shf.r.wrap.b32 %r27, %r10838, %r23, %r8170;
	// inline asm
	bra.uni 	BB4_1509;

BB4_258:
	setp.gt.s32	%p235, %r29, 5;
	@%p235 bra 	BB4_262;

	setp.eq.s32	%p238, %r29, 4;
	@%p238 bra 	BB4_327;
	bra.uni 	BB4_260;

BB4_327:
	mov.u32 	%r10717, 0;
	mov.u32 	%r10713, %r20;
	mov.u32 	%r10714, %r27;
	mov.u32 	%r10715, %r26;
	mov.u32 	%r27, %r25;
	mov.u32 	%r10718, %r23;
	mov.u32 	%r10719, %r22;
	mov.u32 	%r23, %r21;
	bra.uni 	BB4_333;

BB4_289:
	setp.gt.s32	%p212, %r29, 21;
	@%p212 bra 	BB4_293;

	setp.eq.s32	%p215, %r29, 20;
	@%p215 bra 	BB4_316;
	bra.uni 	BB4_291;

BB4_316:
	mov.u32 	%r10713, 0;
	mov.u32 	%r10714, %r23;
	mov.u32 	%r10715, %r22;
	mov.u32 	%r27, %r21;
	bra.uni 	BB4_332;

BB4_273:
	setp.gt.s32	%p224, %r29, 13;
	@%p224 bra 	BB4_277;

	setp.eq.s32	%p227, %r29, 12;
	@%p227 bra 	BB4_322;
	bra.uni 	BB4_275;

BB4_322:
	mov.u32 	%r10717, 0;
	mov.u32 	%r10713, %r22;
	mov.u32 	%r10714, %r21;
	mov.u32 	%r10715, %r20;
	bra.uni 	BB4_323;

BB4_305:
	setp.gt.s32	%p201, %r29, 29;
	@%p201 bra 	BB4_309;

	setp.eq.s32	%p204, %r29, 28;
	@%p204 bra 	BB4_312;
	bra.uni 	BB4_307;

BB4_312:
	mov.u32 	%r10713, 0;
	mov.u32 	%r10714, %r10713;
	mov.u32 	%r10715, %r10713;
	mov.u32 	%r27, %r23;
	bra.uni 	BB4_332;

BB4_1228:
	mov.u32 	%r6175, 8;
	// inline asm
	shf.r.wrap.b32 %r10850, %r23, %r22, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r22, %r21, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r21, %r20, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6156, %r20, %r27, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r27, %r26, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r26, %r25, %r6175;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r25, %r24, %r6175;
	// inline asm
	mov.u32 	%r6174, 0;
	// inline asm
	shf.r.wrap.b32 %r10849, %r24, %r6174, %r6175;
	// inline asm
	mov.u32 	%r24, %r6156;
	bra.uni 	BB4_1234;

BB4_1155:
	setp.eq.s32	%p814, %r29, 3;
	@%p814 bra 	BB4_1156;
	bra.uni 	BB4_1187;

BB4_1156:
	mov.u32 	%r6111, 24;
	// inline asm
	shf.r.wrap.b32 %r10850, %r23, %r22, %r6111;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r22, %r21, %r6111;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r21, %r20, %r6111;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6092, %r20, %r27, %r6111;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r27, %r26, %r6111;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r26, %r25, %r6111;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r25, %r24, %r6111;
	// inline asm
	mov.u32 	%r6110, 0;
	// inline asm
	shf.r.wrap.b32 %r10849, %r24, %r6110, %r6111;
	// inline asm
	mov.u32 	%r24, %r6092;
	bra.uni 	BB4_1234;

BB4_1048:
	setp.eq.s32	%p752, %r31, 2;
	@%p752 bra 	BB4_1125;
	bra.uni 	BB4_1049;

BB4_1125:
	mov.u32 	%r5588, 16;
	// inline asm
	shf.r.wrap.b32 %r10768, %r23, %r22, %r5588;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r22, %r21, %r5588;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r21, %r20, %r5588;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r20, %r27, %r5588;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r27, %r26, %r5588;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r26, %r25, %r5588;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r25, %r24, %r5588;
	// inline asm
	mov.u32 	%r5587, 0;
	// inline asm
	shf.r.wrap.b32 %r10849, %r24, %r5587, %r5588;
	// inline asm
	bra.uni 	BB4_1127;

BB4_1507:
	mov.u32 	%r8166, 24;
	// inline asm
	shf.r.wrap.b32 %r8135, %r25, %r24, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r26, %r25, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r27, %r26, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r20, %r27, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8151, %r21, %r20, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10844, %r22, %r21, %r8166;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10843, %r23, %r22, %r8166;
	// inline asm
	mov.u32 	%r8164, 0;
	// inline asm
	shf.r.wrap.b32 %r10842, %r8164, %r23, %r8166;
	// inline asm
	mov.u32 	%r27, %r8135;
	mov.u32 	%r23, %r8151;
	bra.uni 	BB4_1511;

BB4_1435:
	setp.eq.s32	%p1017, %r7632, 3;
	@%p1017 bra 	BB4_1436;
	bra.uni 	BB4_1458;

BB4_1436:
	mov.u32 	%r8102, 8;
	// inline asm
	shf.r.wrap.b32 %r8071, %r25, %r24, %r8102;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r26, %r25, %r8102;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r27, %r26, %r8102;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r20, %r27, %r8102;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8087, %r21, %r20, %r8102;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10844, %r22, %r21, %r8102;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10843, %r23, %r22, %r8102;
	// inline asm
	mov.u32 	%r8100, 0;
	// inline asm
	shf.r.wrap.b32 %r10842, %r8100, %r23, %r8102;
	// inline asm
	mov.u32 	%r27, %r8071;
	mov.u32 	%r23, %r8087;
	bra.uni 	BB4_1511;

BB4_451:
	setp.eq.s32	%p363, %r29, 2;
	@%p363 bra 	BB4_521;
	bra.uni 	BB4_452;

BB4_521:
	bfe.u32 	%r10721, %r23, 16, 8;
	bra.uni 	BB4_523;

BB4_337:
	setp.eq.s32	%p256, %r3578, 1;
	@%p256 bra 	BB4_338;
	bra.uni 	BB4_10;

BB4_338:
	and.b32  	%r3594, %r22, %r340;
	and.b32  	%r3595, %r3574, %r339;
	or.b32  	%r10851, %r3595, %r3594;
	bra.uni 	BB4_620;

BB4_1304:
	setp.gt.s32	%p925, %r6507, 5;
	@%p925 bra 	BB4_1308;

	setp.eq.s32	%p928, %r6507, 4;
	@%p928 bra 	BB4_1376;
	bra.uni 	BB4_1306;

BB4_1376:
	mov.u32 	%r10796, %r20;
	mov.u32 	%r10797, %r27;
	mov.u32 	%r10798, %r26;
	mov.u32 	%r10799, %r25;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r23;
	mov.u32 	%r10802, %r22;
	mov.u32 	%r10803, %r21;
	bra.uni 	BB4_1378;

BB4_408:
	setp.eq.s32	%p304, %r3727, 1;
	@%p304 bra 	BB4_409;
	bra.uni 	BB4_10;

BB4_409:
	and.b32  	%r3755, %r22, %r389;
	and.b32  	%r3756, %r388, %r22;
	shr.u32 	%r3757, %r3756, 1;
	and.b32  	%r3758, %r3757, %r388;
	or.b32  	%r10851, %r3758, %r3755;
	bra.uni 	BB4_620;

BB4_1256:
	setp.eq.s32	%p837, %r6252, 1;
	@%p837 bra 	BB4_1257;
	bra.uni 	BB4_1267;

BB4_1257:
	and.b32  	%r6269, %r1215, %r22;
	and.b32  	%r6270, %r10851, %r1216;
	or.b32  	%r10851, %r6270, %r6269;
	mov.u32 	%r10850, %r23;
	bra.uni 	BB4_1273;

BB4_131:
	setp.eq.s32	%p867, %r6354, 1;
	@%p867 bra 	BB4_1289;
	bra.uni 	BB4_132;

BB4_1289:
	and.b32  	%r10851, %r10851, %r1260;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;

BB4_1290:
	mov.u32 	%r10852, %r10846;

BB4_1291:
	mov.u32 	%r10853, %r10846;
	bra.uni 	BB4_1535;

BB4_1080:
	setp.eq.s32	%p729, %r31, 18;
	@%p729 bra 	BB4_1117;
	bra.uni 	BB4_1081;

BB4_1117:
	mov.u32 	%r5256, 16;
	// inline asm
	shf.r.wrap.b32 %r10768, %r27, %r26, %r5256;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r26, %r25, %r5256;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r25, %r24, %r5256;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10853, %r24, %r10846, %r5256;
	// inline asm
	bra.uni 	BB4_1083;

BB4_482:
	setp.eq.s32	%p340, %r29, 18;
	@%p340 bra 	BB4_513;
	bra.uni 	BB4_483;

BB4_513:
	bfe.u32 	%r10721, %r27, 16, 8;
	bra.uni 	BB4_523;

BB4_818:
	setp.eq.s32	%p553, %r29, 18;
	@%p553 bra 	BB4_849;
	bra.uni 	BB4_819;

BB4_849:
	mov.u32 	%r4298, 16;
	// inline asm
	shf.r.wrap.b32 %r24, %r21, %r20, %r4298;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r22, %r21, %r4298;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r23, %r22, %r4298;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r10850, %r23, %r4298;
	// inline asm
	bra.uni 	BB4_851;

BB4_1063:
	setp.eq.s32	%p741, %r31, 10;
	@%p741 bra 	BB4_1121;
	bra.uni 	BB4_1064;

BB4_1121:
	mov.u32 	%r5406, 16;
	// inline asm
	shf.r.wrap.b32 %r10768, %r21, %r20, %r5406;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r20, %r27, %r5406;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r27, %r26, %r5406;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r26, %r25, %r5406;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r25, %r24, %r5406;
	// inline asm
	mov.u32 	%r10848, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r24, %r10848, %r5406;
	// inline asm
	mov.u32 	%r10849, %r10848;
	bra.uni 	BB4_1127;

BB4_466:
	setp.eq.s32	%p352, %r29, 10;
	@%p352 bra 	BB4_517;
	bra.uni 	BB4_467;

BB4_517:
	bfe.u32 	%r10721, %r21, 16, 8;
	bra.uni 	BB4_523;

BB4_344:
	setp.eq.s32	%p251, %r3578, 5;
	@%p251 bra 	BB4_345;
	bra.uni 	BB4_10;

BB4_345:
	and.b32  	%r3586, %r26, %r340;
	and.b32  	%r3587, %r3558, %r339;
	or.b32  	%r10847, %r3587, %r3586;
	bra.uni 	BB4_655;

BB4_1337:
	setp.gt.s32	%p902, %r6507, 21;
	@%p902 bra 	BB4_1341;

	setp.eq.s32	%p905, %r6507, 20;
	@%p905 bra 	BB4_1368;
	bra.uni 	BB4_1339;

BB4_1368:
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r23;
	mov.u32 	%r10798, %r22;
	mov.u32 	%r10799, %r21;
	bra.uni 	BB4_1364;

BB4_415:
	setp.eq.s32	%p299, %r3727, 5;
	@%p299 bra 	BB4_416;
	bra.uni 	BB4_10;

BB4_416:
	and.b32  	%r3739, %r26, %r389;
	and.b32  	%r3740, %r388, %r26;
	shr.u32 	%r3741, %r3740, 1;
	and.b32  	%r3742, %r3741, %r388;
	or.b32  	%r10847, %r3742, %r3739;
	bra.uni 	BB4_655;

BB4_1263:
	setp.eq.s32	%p832, %r6252, 5;
	@%p832 bra 	BB4_1264;
	bra.uni 	BB4_1267;

BB4_1264:
	and.b32  	%r6261, %r1215, %r26;
	and.b32  	%r6262, %r10847, %r1216;
	or.b32  	%r10847, %r6262, %r6261;
	mov.u32 	%r10846, %r27;
	bra.uni 	BB4_1271;

BB4_802:
	setp.eq.s32	%p565, %r29, 10;
	@%p565 bra 	BB4_856;
	bra.uni 	BB4_803;

BB4_856:
	mov.u32 	%r4448, 16;
	// inline asm
	shf.r.wrap.b32 %r24, %r27, %r26, %r4448;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r20, %r27, %r4448;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r21, %r20, %r4448;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r22, %r21, %r4448;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r20, %r23, %r22, %r4448;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r10850, %r23, %r4448;
	// inline asm
	mov.u32 	%r10851, %r10850;
	bra.uni 	BB4_865;

BB4_1281:
	setp.eq.s32	%p862, %r6354, 5;
	@%p862 bra 	BB4_1282;
	bra.uni 	BB4_132;

BB4_1282:
	and.b32  	%r10847, %r10847, %r1260;
	mov.u32 	%r10848, 0;
	mov.u32 	%r10849, %r10848;
	bra.uni 	BB4_1535;

BB4_1097:
	setp.eq.s32	%p718, %r31, 26;
	@%p718 bra 	BB4_1113;
	bra.uni 	BB4_1098;

BB4_1113:
	mov.u32 	%r5138, 16;
	// inline asm
	shf.r.wrap.b32 %r10768, %r25, %r24, %r5138;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r24, %r10846, %r5138;
	// inline asm
	bra.uni 	BB4_1100;

BB4_497:
	setp.eq.s32	%p329, %r29, 26;
	@%p329 bra 	BB4_509;
	bra.uni 	BB4_498;

BB4_509:
	bfe.u32 	%r10721, %r25, 16, 8;
	bra.uni 	BB4_523;

BB4_833:
	setp.eq.s32	%p542, %r29, 26;
	@%p542 bra 	BB4_845;
	bra.uni 	BB4_834;

BB4_845:
	mov.u32 	%r4180, 16;
	// inline asm
	shf.r.wrap.b32 %r24, %r23, %r22, %r4180;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r10846, %r23, %r4180;
	// inline asm
	bra.uni 	BB4_836;

BB4_1055:
	setp.eq.s32	%p747, %r31, 6;
	@%p747 bra 	BB4_1123;
	bra.uni 	BB4_1056;

BB4_1123:
	mov.u32 	%r5493, 16;
	// inline asm
	shf.r.wrap.b32 %r10768, %r22, %r21, %r5493;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r21, %r20, %r5493;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r20, %r27, %r5493;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r27, %r26, %r5493;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r26, %r25, %r5493;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r25, %r24, %r5493;
	// inline asm
	mov.u32 	%r10849, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r24, %r10849, %r5493;
	// inline asm
	bra.uni 	BB4_1127;

BB4_458:
	setp.eq.s32	%p358, %r29, 6;
	@%p358 bra 	BB4_519;
	bra.uni 	BB4_459;

BB4_519:
	bfe.u32 	%r10721, %r22, 16, 8;
	bra.uni 	BB4_523;

BB4_340:
	setp.eq.s32	%p254, %r3578, 3;
	@%p254 bra 	BB4_341;
	bra.uni 	BB4_10;

BB4_341:
	and.b32  	%r3590, %r20, %r340;
	and.b32  	%r3591, %r3566, %r339;
	or.b32  	%r10853, %r3591, %r3590;
	bra.uni 	BB4_637;

BB4_1319:
	setp.gt.s32	%p914, %r6507, 13;
	@%p914 bra 	BB4_1323;

	setp.eq.s32	%p917, %r6507, 12;
	@%p917 bra 	BB4_1372;
	bra.uni 	BB4_1321;

BB4_1372:
	mov.u32 	%r10796, %r22;
	mov.u32 	%r10797, %r21;
	mov.u32 	%r10798, %r20;
	mov.u32 	%r10799, %r27;
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r23;
	bra.uni 	BB4_1378;

BB4_411:
	setp.eq.s32	%p302, %r3727, 3;
	@%p302 bra 	BB4_412;
	bra.uni 	BB4_10;

BB4_412:
	and.b32  	%r3747, %r20, %r389;
	and.b32  	%r3748, %r388, %r20;
	shr.u32 	%r3749, %r3748, 1;
	and.b32  	%r3750, %r3749, %r388;
	or.b32  	%r10853, %r3750, %r3747;
	bra.uni 	BB4_637;

BB4_1259:
	setp.eq.s32	%p835, %r6252, 3;
	@%p835 bra 	BB4_1260;
	bra.uni 	BB4_1267;

BB4_1260:
	and.b32  	%r6265, %r1215, %r20;
	and.b32  	%r6266, %r10853, %r1216;
	or.b32  	%r10853, %r6266, %r6265;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	bra.uni 	BB4_1273;

BB4_794:
	setp.eq.s32	%p571, %r29, 6;
	@%p571 bra 	BB4_858;
	bra.uni 	BB4_795;

BB4_858:
	mov.u32 	%r4535, 16;
	// inline asm
	shf.r.wrap.b32 %r24, %r26, %r25, %r4535;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r27, %r26, %r4535;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r20, %r27, %r4535;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r21, %r20, %r4535;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r20, %r22, %r21, %r4535;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r23, %r22, %r4535;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r10850, %r23, %r4535;
	// inline asm
	bra.uni 	BB4_865;

BB4_1277:
	setp.eq.s32	%p865, %r6354, 3;
	@%p865 bra 	BB4_1278;
	bra.uni 	BB4_132;

BB4_1278:
	and.b32  	%r10853, %r10853, %r1260;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	bra.uni 	BB4_1535;

BB4_1088:
	setp.eq.s32	%p724, %r31, 22;
	@%p724 bra 	BB4_1115;
	bra.uni 	BB4_1089;

BB4_1115:
	mov.u32 	%r5193, 16;
	// inline asm
	shf.r.wrap.b32 %r10768, %r26, %r25, %r5193;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r25, %r24, %r5193;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r24, %r10846, %r5193;
	// inline asm
	bra.uni 	BB4_1091;

BB4_489:
	setp.eq.s32	%p335, %r29, 22;
	@%p335 bra 	BB4_511;
	bra.uni 	BB4_490;

BB4_511:
	bfe.u32 	%r10721, %r26, 16, 8;
	bra.uni 	BB4_523;

BB4_825:
	setp.eq.s32	%p548, %r29, 22;
	@%p548 bra 	BB4_847;
	bra.uni 	BB4_826;

BB4_847:
	mov.u32 	%r4235, 16;
	// inline asm
	shf.r.wrap.b32 %r24, %r22, %r21, %r4235;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r23, %r22, %r4235;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r10846, %r23, %r4235;
	// inline asm
	bra.uni 	BB4_864;

BB4_1070:
	setp.eq.s32	%p736, %r31, 14;
	@%p736 bra 	BB4_1119;
	bra.uni 	BB4_1071;

BB4_1119:
	mov.u32 	%r5327, 16;
	// inline asm
	shf.r.wrap.b32 %r10768, %r20, %r27, %r5327;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r27, %r26, %r5327;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r26, %r25, %r5327;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r25, %r24, %r5327;
	// inline asm
	mov.u32 	%r10847, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r24, %r10847, %r5327;
	// inline asm
	bra.uni 	BB4_1073;

BB4_473:
	setp.eq.s32	%p347, %r29, 14;
	@%p347 bra 	BB4_515;
	bra.uni 	BB4_474;

BB4_515:
	bfe.u32 	%r10721, %r20, 16, 8;
	bra.uni 	BB4_523;

BB4_347:
	setp.ne.s32	%p249, %r3578, 7;
	@%p249 bra 	BB4_10;

	and.b32  	%r3582, %r24, %r340;
	and.b32  	%r3583, %r3550, %r339;
	or.b32  	%r10849, %r3583, %r3582;
	bra.uni 	BB4_678;

BB4_1354:
	setp.gt.s32	%p891, %r6507, 29;
	@%p891 bra 	BB4_1358;

	setp.eq.s32	%p894, %r6507, 28;
	@%p894 bra 	BB4_1363;
	bra.uni 	BB4_1356;

BB4_1363:
	mov.u32 	%r10796, %r10804;
	mov.u32 	%r10797, %r10804;
	mov.u32 	%r10798, %r10804;
	mov.u32 	%r10799, %r23;

BB4_1364:
	mov.u32 	%r10800, %r10804;
	mov.u32 	%r10801, %r10804;
	mov.u32 	%r10802, %r10804;
	mov.u32 	%r10803, %r10804;
	bra.uni 	BB4_1378;

BB4_418:
	setp.ne.s32	%p297, %r3727, 7;
	@%p297 bra 	BB4_10;

	and.b32  	%r3731, %r24, %r389;
	and.b32  	%r3732, %r388, %r24;
	shr.u32 	%r3733, %r3732, 1;
	and.b32  	%r3734, %r3733, %r388;
	or.b32  	%r10849, %r3734, %r3731;
	bra.uni 	BB4_678;

BB4_1266:
	setp.ne.s32	%p830, %r6252, 7;
	@%p830 bra 	BB4_1267;

	and.b32  	%r6257, %r1215, %r24;
	and.b32  	%r6258, %r10849, %r1216;
	or.b32  	%r10849, %r6258, %r6257;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	bra.uni 	BB4_1271;

BB4_1267:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;

BB4_1271:
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	mov.u32 	%r10853, %r20;

BB4_1273:
	add.s32 	%r10854, %r19, -1;
	bra.uni 	BB4_1536;

BB4_809:
	setp.eq.s32	%p560, %r29, 14;
	@%p560 bra 	BB4_854;
	bra.uni 	BB4_810;

BB4_854:
	mov.u32 	%r4369, 16;
	// inline asm
	shf.r.wrap.b32 %r24, %r20, %r27, %r4369;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r21, %r20, %r4369;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r22, %r21, %r4369;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r23, %r22, %r4369;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r20, %r10850, %r23, %r4369;
	// inline asm
	bra.uni 	BB4_853;

BB4_1284:
	setp.ne.s32	%p860, %r6354, 7;
	@%p860 bra 	BB4_132;

	and.b32  	%r10849, %r6322, %r1260;
	bra.uni 	BB4_1535;

BB4_132:
	mov.u32 	%r10849, %r6322;
	bra.uni 	BB4_1535;

BB4_1106:
	setp.eq.s32	%p713, %r31, 30;
	@%p713 bra 	BB4_1110;
	bra.uni 	BB4_1107;

BB4_1110:
	mov.u32 	%r10846, 0;
	mov.u32 	%r5091, 16;
	// inline asm
	shf.r.wrap.b32 %r10768, %r24, %r10846, %r5091;
	// inline asm
	bra.uni 	BB4_1109;

BB4_504:
	setp.eq.s32	%p324, %r29, 30;
	@%p324 bra 	BB4_507;
	bra.uni 	BB4_505;

BB4_507:
	bfe.u32 	%r10721, %r24, 16, 8;
	bra.uni 	BB4_523;

BB4_841:
	setp.eq.s32	%p537, %r29, 31;
	@%p537 bra 	BB4_862;
	bra.uni 	BB4_842;

BB4_862:
	mov.u32 	%r10846, 0;
	mov.u32 	%r4666, 8;
	// inline asm
	shf.r.wrap.b32 %r24, %r10846, %r23, %r4666;
	// inline asm
	bra.uni 	BB4_863;

BB4_137:
	setp.eq.s32	%p169, %r29, 2;
	@%p169 bra 	BB4_212;
	bra.uni 	BB4_138;

BB4_212:
	mov.u32 	%r2908, 16;
	// inline asm
	shf.r.wrap.b32 %r10692, %r25, %r24, %r2908;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r26, %r25, %r2908;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r27, %r26, %r2908;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r20, %r27, %r2908;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10696, %r21, %r20, %r2908;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10695, %r22, %r21, %r2908;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10694, %r23, %r22, %r2908;
	// inline asm
	mov.u32 	%r2906, 0;
	// inline asm
	shf.r.wrap.b32 %r10693, %r2906, %r23, %r2908;
	// inline asm
	bra.uni 	BB4_213;

BB4_1183:
	setp.eq.s32	%p793, %r29, 17;
	@%p793 bra 	BB4_1184;
	bra.uni 	BB4_1187;

BB4_1184:
	mov.u32 	%r5831, 8;
	// inline asm
	shf.r.wrap.b32 %r10850, %r27, %r26, %r5831;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r26, %r25, %r5831;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r25, %r24, %r5831;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r24, %r24, %r10846, %r5831;
	// inline asm
	bra.uni 	BB4_1218;

BB4_1463:
	setp.eq.s32	%p996, %r7632, 17;
	@%p996 bra 	BB4_1464;
	bra.uni 	BB4_1458;

BB4_1464:
	mov.u32 	%r7822, 24;
	// inline asm
	shf.r.wrap.b32 %r27, %r21, %r20, %r7822;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r22, %r21, %r7822;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r23, %r22, %r7822;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r10838, %r10842, %r23, %r7822;
	// inline asm
	bra.uni 	BB4_1498;

BB4_1167:
	setp.eq.s32	%p805, %r29, 9;
	@%p805 bra 	BB4_1168;
	bra.uni 	BB4_1187;

BB4_1168:
	mov.u32 	%r5987, 8;
	// inline asm
	shf.r.wrap.b32 %r10850, %r21, %r20, %r5987;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r20, %r27, %r5987;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r27, %r26, %r5987;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5976, %r26, %r25, %r5987;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r25, %r24, %r5987;
	// inline asm
	mov.u32 	%r10848, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r24, %r10848, %r5987;
	// inline asm
	mov.u32 	%r10849, %r10848;
	mov.u32 	%r24, %r5976;
	bra.uni 	BB4_1234;

BB4_1447:
	setp.eq.s32	%p1008, %r7632, 9;
	@%p1008 bra 	BB4_1448;
	bra.uni 	BB4_1458;

BB4_1448:
	mov.u32 	%r7978, 24;
	// inline asm
	shf.r.wrap.b32 %r7955, %r27, %r26, %r7978;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r20, %r27, %r7978;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r21, %r20, %r7978;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r22, %r21, %r7978;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r7971, %r23, %r22, %r7978;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r10844, %r10842, %r23, %r7978;
	// inline asm
	mov.u32 	%r27, %r7955;
	mov.u32 	%r10843, %r10842;
	mov.u32 	%r23, %r7971;
	bra.uni 	BB4_1511;

BB4_169:
	setp.eq.s32	%p146, %r29, 18;
	@%p146 bra 	BB4_204;
	bra.uni 	BB4_170;

BB4_204:
	mov.u32 	%r2576, 16;
	// inline asm
	shf.r.wrap.b32 %r10692, %r21, %r20, %r2576;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r22, %r21, %r2576;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r23, %r22, %r2576;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10689, %r10693, %r23, %r2576;
	// inline asm
	bra.uni 	BB4_199;

BB4_1199:
	setp.eq.s32	%p782, %r29, 25;
	@%p782 bra 	BB4_1200;
	bra.uni 	BB4_1187;

BB4_1200:
	mov.u32 	%r5707, 8;
	// inline asm
	shf.r.wrap.b32 %r10850, %r25, %r24, %r5707;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r24, %r10846, %r5707;
	// inline asm
	bra.uni 	BB4_1204;

BB4_1478:
	setp.eq.s32	%p985, %r7632, 25;
	@%p985 bra 	BB4_1479;
	bra.uni 	BB4_1458;

BB4_1479:
	mov.u32 	%r7698, 24;
	// inline asm
	shf.r.wrap.b32 %r27, %r23, %r22, %r7698;
	// inline asm
	mov.u32 	%r10838, 0;
	// inline asm
	shf.r.wrap.b32 %r10840, %r10838, %r23, %r7698;
	// inline asm
	bra.uni 	BB4_1483;

BB4_1159:
	setp.eq.s32	%p811, %r29, 5;
	@%p811 bra 	BB4_1160;
	bra.uni 	BB4_1187;

BB4_1160:
	mov.u32 	%r6077, 8;
	// inline asm
	shf.r.wrap.b32 %r10850, %r22, %r21, %r6077;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r21, %r20, %r6077;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r20, %r27, %r6077;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6062, %r27, %r26, %r6077;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r26, %r25, %r6077;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r25, %r24, %r6077;
	// inline asm
	mov.u32 	%r10849, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r24, %r10849, %r6077;
	// inline asm
	mov.u32 	%r24, %r6062;
	bra.uni 	BB4_1234;

BB4_709:
	setp.eq.s32	%p492, %r19, 11;
	@%p492 bra 	BB4_768;
	bra.uni 	BB4_710;

BB4_768:
	and.b32  	%r4003, %r21, 255;
	shl.b32 	%r4004, %r21, 8;
	and.b32  	%r4005, %r4004, 16711680;
	or.b32  	%r4006, %r4005, %r4003;
	shr.u32 	%r4007, %r21, 8;
	and.b32  	%r4008, %r4007, 65280;
	or.b32  	%r10852, %r4006, %r4008;
	mov.u32 	%r10854, 11;
	bra.uni 	BB4_769;

BB4_1439:
	setp.eq.s32	%p1014, %r7632, 5;
	@%p1014 bra 	BB4_1440;
	bra.uni 	BB4_1458;

BB4_1440:
	mov.u32 	%r8068, 24;
	// inline asm
	shf.r.wrap.b32 %r8041, %r26, %r25, %r8068;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r27, %r26, %r8068;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r20, %r27, %r8068;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r21, %r20, %r8068;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r8057, %r22, %r21, %r8068;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10844, %r23, %r22, %r8068;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r10843, %r10842, %r23, %r8068;
	// inline asm
	mov.u32 	%r27, %r8041;
	mov.u32 	%r23, %r8057;
	bra.uni 	BB4_1511;

BB4_152:
	setp.eq.s32	%p158, %r29, 10;
	@%p158 bra 	BB4_208;
	bra.uni 	BB4_153;

BB4_208:
	mov.u32 	%r2726, 16;
	// inline asm
	shf.r.wrap.b32 %r10692, %r27, %r26, %r2726;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r20, %r27, %r2726;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r21, %r20, %r2726;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r22, %r21, %r2726;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10696, %r23, %r22, %r2726;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10695, %r10693, %r23, %r2726;
	// inline asm
	mov.u32 	%r10694, %r10693;
	bra.uni 	BB4_213;

BB4_1190:
	setp.eq.s32	%p788, %r29, 21;
	@%p788 bra 	BB4_1191;
	bra.uni 	BB4_1187;

BB4_1191:
	mov.u32 	%r5765, 8;
	// inline asm
	shf.r.wrap.b32 %r10850, %r26, %r25, %r5765;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r25, %r24, %r5765;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r24, %r10846, %r5765;
	// inline asm
	bra.uni 	BB4_1195;

BB4_1470:
	setp.eq.s32	%p991, %r7632, 21;
	@%p991 bra 	BB4_1471;
	bra.uni 	BB4_1458;

BB4_1471:
	mov.u32 	%r7756, 24;
	// inline asm
	shf.r.wrap.b32 %r27, %r22, %r21, %r7756;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r23, %r22, %r7756;
	// inline asm
	mov.u32 	%r10838, 0;
	// inline asm
	shf.r.wrap.b32 %r10839, %r10838, %r23, %r7756;
	// inline asm
	bra.uni 	BB4_1510;

BB4_1174:
	setp.eq.s32	%p800, %r29, 13;
	@%p800 bra 	BB4_1175;
	bra.uni 	BB4_1187;

BB4_1175:
	mov.u32 	%r5905, 8;
	// inline asm
	shf.r.wrap.b32 %r10850, %r20, %r27, %r5905;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r27, %r26, %r5905;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r26, %r25, %r5905;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5898, %r25, %r24, %r5905;
	// inline asm
	mov.u32 	%r10847, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r24, %r10847, %r5905;
	// inline asm
	mov.u32 	%r10848, %r10847;
	mov.u32 	%r10849, %r10847;
	mov.u32 	%r24, %r5898;
	bra.uni 	BB4_1234;

BB4_737:
	setp.eq.s32	%p471, %r19, 26;
	@%p471 bra 	BB4_750;
	bra.uni 	BB4_738;

BB4_750:
	shl.b32 	%r3926, %r25, 8;
	and.b32  	%r3927, %r3926, 65280;
	bfe.u32 	%r3928, %r25, 8, 8;
	or.b32  	%r10848, %r3927, %r3928;
	mov.u32 	%r10854, 26;
	bra.uni 	BB4_751;

BB4_1454:
	setp.eq.s32	%p1003, %r7632, 13;
	@%p1003 bra 	BB4_1455;
	bra.uni 	BB4_1458;

BB4_1455:
	mov.u32 	%r7896, 24;
	// inline asm
	shf.r.wrap.b32 %r27, %r20, %r27, %r7896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r21, %r20, %r7896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r22, %r21, %r7896;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r23, %r22, %r7896;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r23, %r10842, %r23, %r7896;
	// inline asm
	bra.uni 	BB4_1502;

BB4_184:
	setp.eq.s32	%p135, %r29, 26;
	@%p135 bra 	BB4_200;
	bra.uni 	BB4_185;

BB4_200:
	mov.u32 	%r2458, 16;
	// inline asm
	shf.r.wrap.b32 %r10692, %r23, %r22, %r2458;
	// inline asm
	mov.u32 	%r10689, 0;
	// inline asm
	shf.r.wrap.b32 %r10691, %r10689, %r23, %r2458;
	// inline asm
	bra.uni 	BB4_187;

BB4_1207:
	setp.eq.s32	%p777, %r29, 29;
	@%p777 bra 	BB4_1208;
	bra.uni 	BB4_1187;

BB4_1208:
	mov.u32 	%r10846, 0;
	mov.u32 	%r5657, 8;
	// inline asm
	shf.r.wrap.b32 %r10850, %r24, %r10846, %r5657;
	// inline asm
	bra.uni 	BB4_1230;

BB4_1486:
	setp.eq.s32	%p980, %r7632, 29;
	@%p980 bra 	BB4_1487;
	bra.uni 	BB4_1458;

BB4_1487:
	mov.u32 	%r10838, 0;
	mov.u32 	%r7648, 24;
	// inline asm
	shf.r.wrap.b32 %r27, %r10838, %r23, %r7648;
	// inline asm
	bra.uni 	BB4_1509;

BB4_701:
	setp.eq.s32	%p498, %r19, 7;
	@%p498 bra 	BB4_771;
	bra.uni 	BB4_702;

BB4_771:
	and.b32  	%r4024, %r22, 255;
	shl.b32 	%r4025, %r22, 8;
	and.b32  	%r4026, %r4025, 16711680;
	or.b32  	%r4027, %r4026, %r4024;
	shr.u32 	%r4028, %r22, 8;
	and.b32  	%r4029, %r4028, 65280;
	or.b32  	%r10851, %r4027, %r4029;
	mov.u32 	%r10854, 7;
	bra.uni 	BB4_772;

BB4_144:
	setp.eq.s32	%p164, %r29, 6;
	@%p164 bra 	BB4_210;
	bra.uni 	BB4_145;

BB4_210:
	mov.u32 	%r2813, 16;
	// inline asm
	shf.r.wrap.b32 %r10692, %r26, %r25, %r2813;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r27, %r26, %r2813;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r20, %r27, %r2813;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r21, %r20, %r2813;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10696, %r22, %r21, %r2813;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10695, %r23, %r22, %r2813;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10694, %r10693, %r23, %r2813;
	// inline asm
	bra.uni 	BB4_213;

BB4_1186:
	setp.eq.s32	%p791, %r29, 19;
	@%p791 bra 	BB4_1217;
	bra.uni 	BB4_1187;

BB4_1217:
	mov.u32 	%r5791, 24;
	// inline asm
	shf.r.wrap.b32 %r10850, %r27, %r26, %r5791;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r26, %r25, %r5791;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r25, %r24, %r5791;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r24, %r24, %r10846, %r5791;
	// inline asm

BB4_1218:
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	bra.uni 	BB4_1234;

BB4_1466:
	setp.eq.s32	%p994, %r7632, 19;
	@%p994 bra 	BB4_1467;
	bra.uni 	BB4_1458;

BB4_1467:
	mov.u32 	%r7782, 8;
	// inline asm
	shf.r.wrap.b32 %r27, %r21, %r20, %r7782;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r22, %r21, %r7782;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r23, %r22, %r7782;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r10838, %r10842, %r23, %r7782;
	// inline asm

BB4_1498:
	mov.u32 	%r10843, %r10842;
	mov.u32 	%r10844, %r10842;
	mov.u32 	%r23, %r10842;
	bra.uni 	BB4_1511;

BB4_1170:
	setp.eq.s32	%p803, %r29, 11;
	@%p803 bra 	BB4_1171;
	bra.uni 	BB4_1187;

BB4_1171:
	mov.u32 	%r5935, 24;
	// inline asm
	shf.r.wrap.b32 %r10850, %r21, %r20, %r5935;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r20, %r27, %r5935;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r27, %r26, %r5935;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5924, %r26, %r25, %r5935;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r25, %r24, %r5935;
	// inline asm
	mov.u32 	%r10848, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r24, %r10848, %r5935;
	// inline asm
	mov.u32 	%r10849, %r10848;
	mov.u32 	%r24, %r5924;
	bra.uni 	BB4_1234;

BB4_729:
	setp.eq.s32	%p477, %r19, 22;
	@%p477 bra 	BB4_753;
	bra.uni 	BB4_730;

BB4_753:
	shl.b32 	%r3947, %r26, 8;
	and.b32  	%r3948, %r3947, 65280;
	bfe.u32 	%r3949, %r26, 8, 8;
	or.b32  	%r10847, %r3948, %r3949;
	mov.u32 	%r10854, 22;
	bra.uni 	BB4_754;

BB4_1450:
	setp.eq.s32	%p1006, %r7632, 11;
	@%p1006 bra 	BB4_1451;
	bra.uni 	BB4_1458;

BB4_1451:
	mov.u32 	%r7926, 8;
	// inline asm
	shf.r.wrap.b32 %r7903, %r27, %r26, %r7926;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r20, %r27, %r7926;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r21, %r20, %r7926;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r22, %r21, %r7926;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r7919, %r23, %r22, %r7926;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r10844, %r10842, %r23, %r7926;
	// inline asm
	mov.u32 	%r27, %r7903;
	mov.u32 	%r10843, %r10842;
	mov.u32 	%r23, %r7919;
	bra.uni 	BB4_1511;

BB4_176:
	setp.eq.s32	%p141, %r29, 22;
	@%p141 bra 	BB4_202;
	bra.uni 	BB4_177;

BB4_202:
	mov.u32 	%r2513, 16;
	// inline asm
	shf.r.wrap.b32 %r10692, %r22, %r21, %r2513;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r23, %r22, %r2513;
	// inline asm
	mov.u32 	%r10689, 0;
	// inline asm
	shf.r.wrap.b32 %r10690, %r10689, %r23, %r2513;
	// inline asm
	bra.uni 	BB4_188;

BB4_1202:
	setp.eq.s32	%p780, %r29, 27;
	@%p780 bra 	BB4_1203;
	bra.uni 	BB4_1187;

BB4_1203:
	mov.u32 	%r5679, 24;
	// inline asm
	shf.r.wrap.b32 %r10850, %r25, %r24, %r5679;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r24, %r10846, %r5679;
	// inline asm

BB4_1204:
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	bra.uni 	BB4_1232;

BB4_1481:
	setp.eq.s32	%p983, %r7632, 27;
	@%p983 bra 	BB4_1482;
	bra.uni 	BB4_1458;

BB4_1482:
	mov.u32 	%r7670, 8;
	// inline asm
	shf.r.wrap.b32 %r27, %r23, %r22, %r7670;
	// inline asm
	mov.u32 	%r10838, 0;
	// inline asm
	shf.r.wrap.b32 %r10840, %r10838, %r23, %r7670;
	// inline asm

BB4_1483:
	mov.u32 	%r10839, %r10838;
	bra.uni 	BB4_1510;

BB4_1162:
	setp.eq.s32	%p809, %r29, 7;
	@%p809 bra 	BB4_1163;
	bra.uni 	BB4_1187;

BB4_1163:
	mov.u32 	%r6019, 24;
	// inline asm
	shf.r.wrap.b32 %r10850, %r22, %r21, %r6019;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r21, %r20, %r6019;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r20, %r27, %r6019;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r6004, %r27, %r26, %r6019;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r26, %r25, %r6019;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r25, %r24, %r6019;
	// inline asm
	mov.u32 	%r10849, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r24, %r10849, %r6019;
	// inline asm
	mov.u32 	%r24, %r6004;
	bra.uni 	BB4_1234;

BB4_716:
	setp.eq.s32	%p487, %r19, 15;
	@%p487 bra 	BB4_764;
	bra.uni 	BB4_717;

BB4_764:
	and.b32  	%r3982, %r20, 255;
	shl.b32 	%r3983, %r20, 8;
	and.b32  	%r3984, %r3983, 16711680;
	or.b32  	%r3985, %r3984, %r3982;
	shr.u32 	%r3986, %r20, 8;
	and.b32  	%r3987, %r3986, 65280;
	or.b32  	%r10853, %r3985, %r3987;
	mov.u32 	%r10854, 15;
	bra.uni 	BB4_765;

BB4_1442:
	setp.eq.s32	%p1012, %r7632, 7;
	@%p1012 bra 	BB4_1443;
	bra.uni 	BB4_1458;

BB4_1443:
	mov.u32 	%r8010, 8;
	// inline asm
	shf.r.wrap.b32 %r7983, %r26, %r25, %r8010;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r27, %r26, %r8010;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r20, %r27, %r8010;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r21, %r20, %r8010;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r7999, %r22, %r21, %r8010;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10844, %r23, %r22, %r8010;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r10843, %r10842, %r23, %r8010;
	// inline asm
	mov.u32 	%r27, %r7983;
	mov.u32 	%r23, %r7999;
	bra.uni 	BB4_1511;

BB4_159:
	setp.eq.s32	%p153, %r29, 14;
	@%p153 bra 	BB4_206;
	bra.uni 	BB4_160;

BB4_206:
	mov.u32 	%r2647, 16;
	// inline asm
	shf.r.wrap.b32 %r10692, %r20, %r27, %r2647;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r21, %r20, %r2647;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r22, %r21, %r2647;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r23, %r22, %r2647;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10696, %r10693, %r23, %r2647;
	// inline asm
	bra.uni 	BB4_162;

BB4_1193:
	setp.eq.s32	%p786, %r29, 23;
	@%p786 bra 	BB4_1194;
	bra.uni 	BB4_1187;

BB4_1194:
	mov.u32 	%r5731, 24;
	// inline asm
	shf.r.wrap.b32 %r10850, %r26, %r25, %r5731;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r25, %r24, %r5731;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r24, %r10846, %r5731;
	// inline asm

BB4_1195:
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	bra.uni 	BB4_1233;

BB4_1473:
	setp.eq.s32	%p989, %r7632, 23;
	@%p989 bra 	BB4_1474;
	bra.uni 	BB4_1458;

BB4_1474:
	mov.u32 	%r7722, 8;
	// inline asm
	shf.r.wrap.b32 %r27, %r22, %r21, %r7722;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r23, %r22, %r7722;
	// inline asm
	mov.u32 	%r10838, 0;
	// inline asm
	shf.r.wrap.b32 %r10839, %r10838, %r23, %r7722;
	// inline asm
	bra.uni 	BB4_1510;

BB4_1177:
	setp.eq.s32	%p798, %r29, 15;
	@%p798 bra 	BB4_1178;
	bra.uni 	BB4_1187;

BB4_1178:
	mov.u32 	%r5859, 24;
	// inline asm
	shf.r.wrap.b32 %r10850, %r20, %r27, %r5859;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r27, %r26, %r5859;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r26, %r25, %r5859;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r5852, %r25, %r24, %r5859;
	// inline asm
	mov.u32 	%r10847, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r24, %r10847, %r5859;
	// inline asm
	mov.u32 	%r10848, %r10847;
	mov.u32 	%r10849, %r10847;
	mov.u32 	%r24, %r5852;
	bra.uni 	BB4_1234;

BB4_744:
	setp.eq.s32	%p466, %r19, 30;
	@%p466 bra 	BB4_747;
	bra.uni 	BB4_745;

BB4_747:
	shl.b32 	%r3905, %r24, 8;
	and.b32  	%r3906, %r3905, 65280;
	bfe.u32 	%r3907, %r24, 8, 8;
	or.b32  	%r10849, %r3906, %r3907;
	mov.u32 	%r10854, 30;
	bra.uni 	BB4_748;

BB4_1457:
	setp.eq.s32	%p1001, %r7632, 15;
	@%p1001 bra 	BB4_1499;
	bra.uni 	BB4_1458;

BB4_1499:
	mov.u32 	%r7850, 8;
	// inline asm
	shf.r.wrap.b32 %r27, %r20, %r27, %r7850;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10840, %r21, %r20, %r7850;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10839, %r22, %r21, %r7850;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10838, %r23, %r22, %r7850;
	// inline asm
	mov.u32 	%r10842, 0;
	// inline asm
	shf.r.wrap.b32 %r23, %r10842, %r23, %r7850;
	// inline asm

BB4_1502:
	mov.u32 	%r10843, %r10842;
	mov.u32 	%r10844, %r10842;
	bra.uni 	BB4_1511;

BB4_193:
	setp.eq.s32	%p130, %r29, 30;
	@%p130 bra 	BB4_197;
	bra.uni 	BB4_194;

BB4_197:
	mov.u32 	%r10689, 0;
	mov.u32 	%r2411, 16;
	// inline asm
	shf.r.wrap.b32 %r10692, %r10689, %r23, %r2411;
	// inline asm
	bra.uni 	BB4_196;

BB4_286:
	setp.eq.s32	%p218, %r29, 18;
	@%p218 bra 	BB4_317;
	bra.uni 	BB4_287;

BB4_317:
	mov.u32 	%r3174, 16;
	// inline asm
	shf.r.wrap.b32 %r27, %r21, %r20, %r3174;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r22, %r21, %r3174;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r23, %r22, %r3174;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r10713, %r10717, %r23, %r3174;
	// inline asm
	bra.uni 	BB4_319;

BB4_270:
	setp.eq.s32	%p230, %r29, 10;
	@%p230 bra 	BB4_324;
	bra.uni 	BB4_271;

BB4_324:
	mov.u32 	%r3324, 16;
	// inline asm
	shf.r.wrap.b32 %r3301, %r27, %r26, %r3324;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r20, %r27, %r3324;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r21, %r20, %r3324;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r22, %r21, %r3324;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3317, %r23, %r22, %r3324;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r10719, %r10717, %r23, %r3324;
	// inline asm
	mov.u32 	%r27, %r3301;
	mov.u32 	%r10718, %r10717;
	mov.u32 	%r23, %r3317;
	bra.uni 	BB4_333;

BB4_301:
	setp.eq.s32	%p207, %r29, 26;
	@%p207 bra 	BB4_313;
	bra.uni 	BB4_302;

BB4_313:
	mov.u32 	%r3056, 16;
	// inline asm
	shf.r.wrap.b32 %r27, %r23, %r22, %r3056;
	// inline asm
	mov.u32 	%r10713, 0;
	// inline asm
	shf.r.wrap.b32 %r10715, %r10713, %r23, %r3056;
	// inline asm
	bra.uni 	BB4_304;

BB4_1210:
	setp.ne.s32	%p775, %r29, 30;
	@%p775 bra 	BB4_1187;

	mov.u32 	%r10846, 0;
	mov.u32 	%r5646, 16;
	// inline asm
	shf.r.wrap.b32 %r10850, %r24, %r10846, %r5646;
	// inline asm

BB4_1230:
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;

BB4_1231:
	mov.u32 	%r10851, %r10846;

BB4_1232:
	mov.u32 	%r10852, %r10846;

BB4_1233:
	mov.u32 	%r24, %r10846;
	bra.uni 	BB4_1234;

BB4_1187:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	mov.u32 	%r24, %r20;

BB4_1234:
	and.b32  	%r6188, %r30, 3;
	shl.b32 	%r6189, %r6188, 3;
	mov.u32 	%r6190, 1;
	shl.b32 	%r6191, %r6190, %r6189;
	add.s32 	%r1198, %r6191, -1;
	shr.u32 	%r6187, %r31, 2;
	setp.gt.s32	%p815, %r6187, 3;
	@%p815 bra 	BB4_1242;

	setp.gt.s32	%p821, %r6187, 1;
	@%p821 bra 	BB4_1239;

	setp.eq.s32	%p824, %r6187, 0;
	@%p824 bra 	BB4_1255;
	bra.uni 	BB4_1237;

BB4_1255:
	and.b32  	%r10850, %r10850, %r1198;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10851, %r10846;
	bra.uni 	BB4_1253;

BB4_1242:
	setp.gt.s32	%p816, %r6187, 5;
	@%p816 bra 	BB4_1246;

	setp.eq.s32	%p819, %r6187, 4;
	@%p819 bra 	BB4_1250;
	bra.uni 	BB4_1244;

BB4_1250:
	and.b32  	%r10846, %r10846, %r1198;
	mov.u32 	%r10847, 0;
	mov.u32 	%r10848, %r10847;
	mov.u32 	%r10849, %r10847;
	bra.uni 	BB4_1238;

BB4_1239:
	setp.eq.s32	%p822, %r6187, 2;
	@%p822 bra 	BB4_1251;
	bra.uni 	BB4_1240;

BB4_1251:
	and.b32  	%r10852, %r10852, %r1198;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	bra.uni 	BB4_1254;

BB4_1246:
	setp.eq.s32	%p817, %r6187, 6;
	@%p817 bra 	BB4_1249;
	bra.uni 	BB4_1247;

BB4_1249:
	and.b32  	%r10848, %r10848, %r1198;
	mov.u32 	%r10849, 0;
	bra.uni 	BB4_1238;

BB4_1237:
	setp.eq.s32	%p825, %r6187, 1;
	@%p825 bra 	BB4_1252;
	bra.uni 	BB4_1238;

BB4_1252:
	and.b32  	%r10851, %r10851, %r1198;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;

BB4_1253:
	mov.u32 	%r10852, %r10846;

BB4_1254:
	mov.u32 	%r10853, %r10846;
	mov.u32 	%r10854, %r31;
	bra.uni 	BB4_1536;

BB4_1244:
	setp.eq.s32	%p820, %r6187, 5;
	@%p820 bra 	BB4_1245;
	bra.uni 	BB4_1238;

BB4_1245:
	and.b32  	%r10847, %r10847, %r1198;
	mov.u32 	%r10848, 0;
	mov.u32 	%r10849, %r10848;
	bra.uni 	BB4_1238;

BB4_1240:
	setp.eq.s32	%p823, %r6187, 3;
	@%p823 bra 	BB4_1241;
	bra.uni 	BB4_1238;

BB4_1241:
	and.b32  	%r10853, %r24, %r1198;
	mov.u32 	%r10846, 0;
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10854, %r31;
	bra.uni 	BB4_1536;

BB4_1247:
	setp.ne.s32	%p818, %r6187, 7;
	@%p818 bra 	BB4_1238;

	and.b32  	%r10849, %r10849, %r1198;

BB4_1238:
	mov.u32 	%r10853, %r24;
	mov.u32 	%r10854, %r31;
	bra.uni 	BB4_1536;

BB4_1489:
	setp.ne.s32	%p978, %r7632, 30;
	@%p978 bra 	BB4_1458;

	mov.u32 	%r10838, 0;
	mov.u32 	%r7637, 16;
	// inline asm
	shf.r.wrap.b32 %r27, %r10838, %r23, %r7637;
	// inline asm

BB4_1509:
	mov.u32 	%r10839, %r10838;
	mov.u32 	%r10840, %r10838;

BB4_1510:
	mov.u32 	%r10842, %r10838;
	mov.u32 	%r10843, %r10838;
	mov.u32 	%r10844, %r10838;
	mov.u32 	%r23, %r10838;
	bra.uni 	BB4_1511;

BB4_1458:
	mov.u32 	%r10838, %r27;
	mov.u32 	%r10839, %r26;
	mov.u32 	%r10840, %r25;
	mov.u32 	%r27, %r24;
	mov.u32 	%r10842, %r23;
	mov.u32 	%r10843, %r22;
	mov.u32 	%r10844, %r21;
	mov.u32 	%r23, %r20;

BB4_1511:
	// inline asm
	prmt.b32 %r10850, %r27, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10851, %r10840, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10852, %r10839, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10853, %r10838, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10846, %r23, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10847, %r10844, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10848, %r10843, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10849, %r10842, 0, 0x0123;
	// inline asm
	bra.uni 	BB4_1535;

BB4_262:
	setp.eq.s32	%p236, %r29, 6;
	@%p236 bra 	BB4_326;
	bra.uni 	BB4_263;

BB4_326:
	mov.u32 	%r3411, 16;
	// inline asm
	shf.r.wrap.b32 %r3384, %r26, %r25, %r3411;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r27, %r26, %r3411;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r20, %r27, %r3411;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r21, %r20, %r3411;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3400, %r22, %r21, %r3411;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10719, %r23, %r22, %r3411;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r10718, %r10717, %r23, %r3411;
	// inline asm
	mov.u32 	%r27, %r3384;
	mov.u32 	%r23, %r3400;
	bra.uni 	BB4_333;

BB4_293:
	setp.eq.s32	%p213, %r29, 22;
	@%p213 bra 	BB4_315;
	bra.uni 	BB4_294;

BB4_315:
	mov.u32 	%r3111, 16;
	// inline asm
	shf.r.wrap.b32 %r27, %r22, %r21, %r3111;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r23, %r22, %r3111;
	// inline asm
	mov.u32 	%r10713, 0;
	// inline asm
	shf.r.wrap.b32 %r10714, %r10713, %r23, %r3111;
	// inline asm
	bra.uni 	BB4_332;

BB4_277:
	setp.eq.s32	%p225, %r29, 14;
	@%p225 bra 	BB4_321;
	bra.uni 	BB4_278;

BB4_321:
	mov.u32 	%r3245, 16;
	// inline asm
	shf.r.wrap.b32 %r27, %r20, %r27, %r3245;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r21, %r20, %r3245;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r22, %r21, %r3245;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r23, %r22, %r3245;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r23, %r10717, %r23, %r3245;
	// inline asm
	bra.uni 	BB4_323;

BB4_309:
	setp.eq.s32	%p202, %r29, 31;
	@%p202 bra 	BB4_330;
	bra.uni 	BB4_310;

BB4_330:
	mov.u32 	%r10713, 0;
	mov.u32 	%r3542, 8;
	// inline asm
	shf.r.wrap.b32 %r27, %r10713, %r23, %r3542;
	// inline asm
	bra.uni 	BB4_331;

BB4_861:
	mov.u32 	%r4662, 24;
	// inline asm
	shf.r.wrap.b32 %r24, %r25, %r24, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r26, %r25, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r27, %r26, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r20, %r27, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r20, %r21, %r20, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r22, %r21, %r4662;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r23, %r22, %r4662;
	// inline asm
	mov.u32 	%r4660, 0;
	// inline asm
	shf.r.wrap.b32 %r10850, %r4660, %r23, %r4662;
	// inline asm
	bra.uni 	BB4_865;

BB4_788:
	setp.eq.s32	%p577, %r29, 3;
	@%p577 bra 	BB4_789;
	bra.uni 	BB4_811;

BB4_789:
	mov.u32 	%r4598, 8;
	// inline asm
	shf.r.wrap.b32 %r24, %r25, %r24, %r4598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r26, %r25, %r4598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r27, %r26, %r4598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r20, %r27, %r4598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r20, %r21, %r20, %r4598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r22, %r21, %r4598;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r23, %r22, %r4598;
	// inline asm
	mov.u32 	%r4596, 0;
	// inline asm
	shf.r.wrap.b32 %r10850, %r4596, %r23, %r4598;
	// inline asm
	bra.uni 	BB4_865;

BB4_1046:
	setp.eq.s32	%p755, %r31, 1;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p755 bra 	BB4_1047;
	bra.uni 	BB4_1127;

BB4_1047:
	mov.u32 	%r5620, 8;
	// inline asm
	shf.r.wrap.b32 %r10768, %r23, %r22, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r22, %r21, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r21, %r20, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r20, %r27, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r27, %r26, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r26, %r25, %r5620;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r25, %r24, %r5620;
	// inline asm
	mov.u32 	%r5619, 0;
	// inline asm
	shf.r.wrap.b32 %r10849, %r24, %r5619, %r5620;
	// inline asm
	bra.uni 	BB4_1127;

BB4_774:
	shl.b32 	%r4052, %r23, 8;
	and.b32  	%r4053, %r4052, 65280;
	bfe.u32 	%r4054, %r23, 8, 8;
	or.b32  	%r10850, %r4053, %r4054;
	mov.u32 	%r10854, 2;
	bra.uni 	BB4_775;

BB4_695:
	setp.eq.s32	%p504, %r19, 4;
	@%p504 bra 	BB4_696;
	bra.uni 	BB4_10;

BB4_696:
	and.b32  	%r4038, %r23, 65535;
	shl.b32 	%r4039, %r23, 8;
	and.b32  	%r4040, %r4039, -16777216;
	or.b32  	%r4041, %r4040, %r4038;
	shr.u32 	%r4042, %r23, 8;
	and.b32  	%r4043, %r4042, 16711680;
	or.b32  	%r10850, %r4041, %r4043;
	mov.u32 	%r10854, 4;

BB4_775:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_758;

BB4_449:
	setp.eq.s32	%p366, %r29, 1;
	mov.u32 	%r10721, %r10730;
	@%p366 bra 	BB4_450;
	bra.uni 	BB4_523;

BB4_450:
	bfe.u32 	%r10721, %r23, 8, 8;
	bra.uni 	BB4_523;

BB4_1301:
	setp.eq.s32	%p931, %r6507, 2;
	@%p931 bra 	BB4_1377;
	bra.uni 	BB4_1302;

BB4_1377:
	mov.u32 	%r7020, 16;
	// inline asm
	shf.r.wrap.b32 %r10799, %r25, %r24, %r7020;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r26, %r25, %r7020;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r27, %r26, %r7020;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r20, %r27, %r7020;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10803, %r21, %r20, %r7020;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10802, %r22, %r21, %r7020;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10801, %r23, %r22, %r7020;
	// inline asm
	mov.u32 	%r7018, 0;
	// inline asm
	shf.r.wrap.b32 %r10800, %r7018, %r23, %r7020;
	// inline asm
	bra.uni 	BB4_1378;

BB4_1078:
	setp.eq.s32	%p732, %r31, 17;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p732 bra 	BB4_1079;
	bra.uni 	BB4_1127;

BB4_1079:
	mov.u32 	%r5276, 8;
	// inline asm
	shf.r.wrap.b32 %r10768, %r27, %r26, %r5276;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r26, %r25, %r5276;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r25, %r24, %r5276;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10853, %r24, %r10846, %r5276;
	// inline asm
	bra.uni 	BB4_1083;

BB4_480:
	setp.eq.s32	%p343, %r29, 17;
	mov.u32 	%r10721, %r10730;
	@%p343 bra 	BB4_481;
	bra.uni 	BB4_523;

BB4_481:
	bfe.u32 	%r10721, %r27, 8, 8;
	bra.uni 	BB4_523;

BB4_816:
	setp.eq.s32	%p556, %r29, 17;
	@%p556 bra 	BB4_817;
	bra.uni 	BB4_811;

BB4_817:
	mov.u32 	%r4318, 24;
	// inline asm
	shf.r.wrap.b32 %r24, %r21, %r20, %r4318;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r22, %r21, %r4318;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r23, %r22, %r4318;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r10850, %r23, %r4318;
	// inline asm
	bra.uni 	BB4_851;

BB4_763:
	or.b32  	%r3972, %r20, %r27;
	and.b32  	%r3973, %r20, 16777215;
	prmt.b32 	%r10853, %r27, %r3973, 1620;
	shr.u32 	%r10846, %r3972, 24;
	mov.u32 	%r10854, 17;
	bra.uni 	BB4_766;

BB4_723:
	setp.eq.s32	%p483, %r19, 19;
	@%p483 bra 	BB4_724;
	bra.uni 	BB4_10;

BB4_724:
	and.b32  	%r3961, %r27, 255;
	shl.b32 	%r3962, %r27, 8;
	and.b32  	%r3963, %r3962, 16711680;
	or.b32  	%r3964, %r3963, %r3961;
	shr.u32 	%r3965, %r27, 8;
	and.b32  	%r3966, %r3965, 65280;
	or.b32  	%r10846, %r3964, %r3966;
	mov.u32 	%r10854, 19;

BB4_762:
	mov.u32 	%r10847, %r26;
	bra.uni 	BB4_755;

BB4_1061:
	setp.eq.s32	%p744, %r31, 9;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p744 bra 	BB4_1062;
	bra.uni 	BB4_1127;

BB4_1062:
	mov.u32 	%r5432, 8;
	// inline asm
	shf.r.wrap.b32 %r10768, %r21, %r20, %r5432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r20, %r27, %r5432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r27, %r26, %r5432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r26, %r25, %r5432;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r25, %r24, %r5432;
	// inline asm
	mov.u32 	%r10848, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r24, %r10848, %r5432;
	// inline asm
	mov.u32 	%r10849, %r10848;
	bra.uni 	BB4_1127;

BB4_464:
	setp.eq.s32	%p355, %r29, 9;
	mov.u32 	%r10721, %r10730;
	@%p355 bra 	BB4_465;
	bra.uni 	BB4_523;

BB4_465:
	bfe.u32 	%r10721, %r21, 8, 8;
	bra.uni 	BB4_523;

BB4_1333:
	setp.eq.s32	%p908, %r6507, 18;
	@%p908 bra 	BB4_1369;
	bra.uni 	BB4_1334;

BB4_1369:
	mov.u32 	%r6688, 16;
	// inline asm
	shf.r.wrap.b32 %r10799, %r21, %r20, %r6688;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r22, %r21, %r6688;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r23, %r22, %r6688;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10796, %r10800, %r23, %r6688;
	// inline asm
	bra.uni 	BB4_1336;

BB4_800:
	setp.eq.s32	%p568, %r29, 9;
	@%p568 bra 	BB4_801;
	bra.uni 	BB4_811;

BB4_801:
	mov.u32 	%r4474, 24;
	// inline asm
	shf.r.wrap.b32 %r24, %r27, %r26, %r4474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r20, %r27, %r4474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r21, %r20, %r4474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r22, %r21, %r4474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r20, %r23, %r22, %r4474;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r10850, %r23, %r4474;
	// inline asm
	mov.u32 	%r10851, %r10850;
	bra.uni 	BB4_865;

BB4_1095:
	setp.eq.s32	%p721, %r31, 25;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p721 bra 	BB4_1096;
	bra.uni 	BB4_1127;

BB4_1096:
	mov.u32 	%r5152, 8;
	// inline asm
	shf.r.wrap.b32 %r10768, %r25, %r24, %r5152;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r24, %r10846, %r5152;
	// inline asm
	bra.uni 	BB4_1100;

BB4_495:
	setp.eq.s32	%p332, %r29, 25;
	mov.u32 	%r10721, %r10730;
	@%p332 bra 	BB4_496;
	bra.uni 	BB4_523;

BB4_496:
	bfe.u32 	%r10721, %r25, 8, 8;
	bra.uni 	BB4_523;

BB4_831:
	setp.eq.s32	%p545, %r29, 25;
	@%p545 bra 	BB4_832;
	bra.uni 	BB4_811;

BB4_832:
	mov.u32 	%r4194, 24;
	// inline asm
	shf.r.wrap.b32 %r24, %r23, %r22, %r4194;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r10846, %r23, %r4194;
	// inline asm
	bra.uni 	BB4_836;

BB4_1053:
	setp.eq.s32	%p750, %r31, 5;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p750 bra 	BB4_1054;
	bra.uni 	BB4_1127;

BB4_1054:
	mov.u32 	%r5522, 8;
	// inline asm
	shf.r.wrap.b32 %r10768, %r22, %r21, %r5522;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r21, %r20, %r5522;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r20, %r27, %r5522;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r27, %r26, %r5522;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r26, %r25, %r5522;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r25, %r24, %r5522;
	// inline asm
	mov.u32 	%r10849, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r24, %r10849, %r5522;
	// inline asm
	bra.uni 	BB4_1127;

BB4_456:
	setp.eq.s32	%p361, %r29, 5;
	mov.u32 	%r10721, %r10730;
	@%p361 bra 	BB4_457;
	bra.uni 	BB4_523;

BB4_457:
	bfe.u32 	%r10721, %r22, 8, 8;
	bra.uni 	BB4_523;

BB4_1316:
	setp.eq.s32	%p920, %r6507, 10;
	@%p920 bra 	BB4_1373;
	bra.uni 	BB4_1317;

BB4_1373:
	mov.u32 	%r6838, 16;
	// inline asm
	shf.r.wrap.b32 %r10799, %r27, %r26, %r6838;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r20, %r27, %r6838;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r21, %r20, %r6838;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r22, %r21, %r6838;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10803, %r23, %r22, %r6838;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10802, %r10800, %r23, %r6838;
	// inline asm
	mov.u32 	%r10801, %r10800;
	bra.uni 	BB4_1378;

BB4_792:
	setp.eq.s32	%p574, %r29, 5;
	@%p574 bra 	BB4_793;
	bra.uni 	BB4_811;

BB4_793:
	mov.u32 	%r4564, 24;
	// inline asm
	shf.r.wrap.b32 %r24, %r26, %r25, %r4564;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r27, %r26, %r4564;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r20, %r27, %r4564;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r21, %r20, %r4564;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r20, %r22, %r21, %r4564;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r23, %r22, %r4564;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r10850, %r23, %r4564;
	// inline asm
	bra.uni 	BB4_865;

BB4_1086:
	setp.eq.s32	%p727, %r31, 21;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p727 bra 	BB4_1087;
	bra.uni 	BB4_1127;

BB4_1087:
	mov.u32 	%r5210, 8;
	// inline asm
	shf.r.wrap.b32 %r10768, %r26, %r25, %r5210;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r25, %r24, %r5210;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r24, %r10846, %r5210;
	// inline asm
	bra.uni 	BB4_1091;

BB4_487:
	setp.eq.s32	%p338, %r29, 21;
	mov.u32 	%r10721, %r10730;
	@%p338 bra 	BB4_488;
	bra.uni 	BB4_523;

BB4_488:
	bfe.u32 	%r10721, %r26, 8, 8;
	bra.uni 	BB4_523;

BB4_823:
	setp.eq.s32	%p551, %r29, 21;
	@%p551 bra 	BB4_824;
	bra.uni 	BB4_811;

BB4_824:
	mov.u32 	%r4252, 24;
	// inline asm
	shf.r.wrap.b32 %r24, %r22, %r21, %r4252;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r23, %r22, %r4252;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r10846, %r23, %r4252;
	// inline asm
	bra.uni 	BB4_864;

BB4_1068:
	setp.eq.s32	%p739, %r31, 13;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p739 bra 	BB4_1069;
	bra.uni 	BB4_1127;

BB4_1069:
	mov.u32 	%r5350, 8;
	// inline asm
	shf.r.wrap.b32 %r10768, %r20, %r27, %r5350;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r27, %r26, %r5350;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r26, %r25, %r5350;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r25, %r24, %r5350;
	// inline asm
	mov.u32 	%r10847, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r24, %r10847, %r5350;
	// inline asm
	bra.uni 	BB4_1073;

BB4_471:
	setp.eq.s32	%p350, %r29, 13;
	mov.u32 	%r10721, %r10730;
	@%p350 bra 	BB4_472;
	bra.uni 	BB4_523;

BB4_472:
	bfe.u32 	%r10721, %r20, 8, 8;
	bra.uni 	BB4_523;

BB4_1349:
	setp.eq.s32	%p897, %r6507, 26;
	@%p897 bra 	BB4_1365;
	bra.uni 	BB4_1350;

BB4_1365:
	mov.u32 	%r6570, 16;
	// inline asm
	shf.r.wrap.b32 %r10799, %r23, %r22, %r6570;
	// inline asm
	mov.u32 	%r10796, 0;
	// inline asm
	shf.r.wrap.b32 %r10798, %r10796, %r23, %r6570;
	// inline asm
	bra.uni 	BB4_1352;

BB4_807:
	setp.eq.s32	%p563, %r29, 13;
	@%p563 bra 	BB4_808;
	bra.uni 	BB4_811;

BB4_808:
	mov.u32 	%r4392, 24;
	// inline asm
	shf.r.wrap.b32 %r24, %r20, %r27, %r4392;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r21, %r20, %r4392;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r22, %r21, %r4392;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r23, %r22, %r4392;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r20, %r10850, %r23, %r4392;
	// inline asm
	bra.uni 	BB4_853;

BB4_1104:
	setp.eq.s32	%p716, %r31, 29;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p716 bra 	BB4_1105;
	bra.uni 	BB4_1127;

BB4_1105:
	mov.u32 	%r10846, 0;
	mov.u32 	%r5102, 8;
	// inline asm
	shf.r.wrap.b32 %r10768, %r24, %r10846, %r5102;
	// inline asm
	bra.uni 	BB4_1109;

BB4_502:
	setp.eq.s32	%p327, %r29, 29;
	mov.u32 	%r10721, %r10730;
	@%p327 bra 	BB4_503;
	bra.uni 	BB4_523;

BB4_503:
	bfe.u32 	%r10721, %r24, 8, 8;
	bra.uni 	BB4_523;

BB4_839:
	setp.eq.s32	%p540, %r29, 29;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	@%p540 bra 	BB4_840;
	bra.uni 	BB4_865;

BB4_840:
	mov.u32 	%r10846, 0;
	mov.u32 	%r4144, 24;
	// inline asm
	shf.r.wrap.b32 %r24, %r10846, %r23, %r4144;
	// inline asm
	bra.uni 	BB4_863;

BB4_329:
	mov.u32 	%r3538, 24;
	// inline asm
	shf.r.wrap.b32 %r3507, %r25, %r24, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r26, %r25, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r27, %r26, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r20, %r27, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3523, %r21, %r20, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10719, %r22, %r21, %r3538;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10718, %r23, %r22, %r3538;
	// inline asm
	mov.u32 	%r3536, 0;
	// inline asm
	shf.r.wrap.b32 %r10717, %r3536, %r23, %r3538;
	// inline asm
	mov.u32 	%r27, %r3507;
	mov.u32 	%r23, %r3523;
	bra.uni 	BB4_333;

BB4_256:
	setp.eq.s32	%p242, %r29, 3;
	@%p242 bra 	BB4_257;
	bra.uni 	BB4_279;

BB4_257:
	mov.u32 	%r3474, 8;
	// inline asm
	shf.r.wrap.b32 %r3443, %r25, %r24, %r3474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r26, %r25, %r3474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r27, %r26, %r3474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r20, %r27, %r3474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3459, %r21, %r20, %r3474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10719, %r22, %r21, %r3474;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10718, %r23, %r22, %r3474;
	// inline asm
	mov.u32 	%r3472, 0;
	// inline asm
	shf.r.wrap.b32 %r10717, %r3472, %r23, %r3474;
	// inline asm
	mov.u32 	%r27, %r3443;
	mov.u32 	%r23, %r3459;
	bra.uni 	BB4_333;

BB4_1049:
	setp.eq.s32	%p753, %r31, 3;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p753 bra 	BB4_1050;
	bra.uni 	BB4_1127;

BB4_1050:
	mov.u32 	%r5556, 24;
	// inline asm
	shf.r.wrap.b32 %r10768, %r23, %r22, %r5556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r22, %r21, %r5556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r21, %r20, %r5556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r20, %r27, %r5556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r27, %r26, %r5556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r26, %r25, %r5556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r25, %r24, %r5556;
	// inline asm
	mov.u32 	%r5555, 0;
	// inline asm
	shf.r.wrap.b32 %r10849, %r24, %r5555, %r5556;
	// inline asm
	bra.uni 	BB4_1127;

BB4_452:
	setp.eq.s32	%p364, %r29, 3;
	mov.u32 	%r10721, %r10730;
	@%p364 bra 	BB4_453;
	bra.uni 	BB4_523;

BB4_453:
	shr.u32 	%r10721, %r23, 24;
	bra.uni 	BB4_523;

BB4_1308:
	setp.eq.s32	%p926, %r6507, 6;
	@%p926 bra 	BB4_1375;
	bra.uni 	BB4_1309;

BB4_1375:
	mov.u32 	%r6925, 16;
	// inline asm
	shf.r.wrap.b32 %r10799, %r26, %r25, %r6925;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r27, %r26, %r6925;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r20, %r27, %r6925;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r21, %r20, %r6925;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10803, %r22, %r21, %r6925;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10802, %r23, %r22, %r6925;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10801, %r10800, %r23, %r6925;
	// inline asm
	bra.uni 	BB4_1378;

BB4_1081:
	setp.eq.s32	%p730, %r31, 19;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p730 bra 	BB4_1082;
	bra.uni 	BB4_1127;

BB4_1082:
	mov.u32 	%r5236, 24;
	// inline asm
	shf.r.wrap.b32 %r10768, %r27, %r26, %r5236;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r26, %r25, %r5236;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r25, %r24, %r5236;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10853, %r24, %r10846, %r5236;
	// inline asm

BB4_1083:
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	bra.uni 	BB4_1127;

BB4_483:
	setp.eq.s32	%p341, %r29, 19;
	mov.u32 	%r10721, %r10730;
	@%p341 bra 	BB4_484;
	bra.uni 	BB4_523;

BB4_484:
	shr.u32 	%r10721, %r27, 24;
	bra.uni 	BB4_523;

BB4_819:
	setp.eq.s32	%p554, %r29, 19;
	@%p554 bra 	BB4_820;
	bra.uni 	BB4_811;

BB4_820:
	mov.u32 	%r4278, 8;
	// inline asm
	shf.r.wrap.b32 %r24, %r21, %r20, %r4278;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r22, %r21, %r4278;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r23, %r22, %r4278;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r10850, %r23, %r4278;
	// inline asm

BB4_851:
	mov.u32 	%r10851, %r10850;
	mov.u32 	%r10852, %r10850;
	mov.u32 	%r20, %r10850;
	bra.uni 	BB4_865;

BB4_1064:
	setp.eq.s32	%p742, %r31, 11;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p742 bra 	BB4_1065;
	bra.uni 	BB4_1127;

BB4_1065:
	mov.u32 	%r5380, 24;
	// inline asm
	shf.r.wrap.b32 %r10768, %r21, %r20, %r5380;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r20, %r27, %r5380;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r27, %r26, %r5380;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r26, %r25, %r5380;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r25, %r24, %r5380;
	// inline asm
	mov.u32 	%r10848, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r24, %r10848, %r5380;
	// inline asm
	mov.u32 	%r10849, %r10848;
	bra.uni 	BB4_1127;

BB4_467:
	setp.eq.s32	%p353, %r29, 11;
	mov.u32 	%r10721, %r10730;
	@%p353 bra 	BB4_468;
	bra.uni 	BB4_523;

BB4_468:
	shr.u32 	%r10721, %r21, 24;
	bra.uni 	BB4_523;

BB4_1341:
	setp.eq.s32	%p903, %r6507, 22;
	@%p903 bra 	BB4_1367;
	bra.uni 	BB4_1342;

BB4_1367:
	mov.u32 	%r6625, 16;
	// inline asm
	shf.r.wrap.b32 %r10799, %r22, %r21, %r6625;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r23, %r22, %r6625;
	// inline asm
	mov.u32 	%r10796, 0;
	// inline asm
	shf.r.wrap.b32 %r10797, %r10796, %r23, %r6625;
	// inline asm
	bra.uni 	BB4_1353;

BB4_803:
	setp.eq.s32	%p566, %r29, 11;
	@%p566 bra 	BB4_804;
	bra.uni 	BB4_811;

BB4_804:
	mov.u32 	%r4422, 8;
	// inline asm
	shf.r.wrap.b32 %r24, %r27, %r26, %r4422;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r20, %r27, %r4422;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r21, %r20, %r4422;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r22, %r21, %r4422;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r20, %r23, %r22, %r4422;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r10850, %r23, %r4422;
	// inline asm
	mov.u32 	%r10851, %r10850;
	bra.uni 	BB4_865;

BB4_1098:
	setp.eq.s32	%p719, %r31, 27;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p719 bra 	BB4_1099;
	bra.uni 	BB4_1127;

BB4_1099:
	mov.u32 	%r5124, 24;
	// inline asm
	shf.r.wrap.b32 %r10768, %r25, %r24, %r5124;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r24, %r10846, %r5124;
	// inline asm

BB4_1100:
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	bra.uni 	BB4_1101;

BB4_498:
	setp.eq.s32	%p330, %r29, 27;
	mov.u32 	%r10721, %r10730;
	@%p330 bra 	BB4_499;
	bra.uni 	BB4_523;

BB4_499:
	shr.u32 	%r10721, %r25, 24;
	bra.uni 	BB4_523;

BB4_834:
	setp.eq.s32	%p543, %r29, 27;
	@%p543 bra 	BB4_835;
	bra.uni 	BB4_811;

BB4_835:
	mov.u32 	%r4166, 8;
	// inline asm
	shf.r.wrap.b32 %r24, %r23, %r22, %r4166;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r10846, %r23, %r4166;
	// inline asm

BB4_836:
	mov.u32 	%r10847, %r10846;
	bra.uni 	BB4_864;

BB4_1056:
	setp.eq.s32	%p748, %r31, 7;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p748 bra 	BB4_1057;
	bra.uni 	BB4_1127;

BB4_1057:
	mov.u32 	%r5464, 24;
	// inline asm
	shf.r.wrap.b32 %r10768, %r22, %r21, %r5464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r21, %r20, %r5464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r20, %r27, %r5464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r27, %r26, %r5464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r26, %r25, %r5464;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r25, %r24, %r5464;
	// inline asm
	mov.u32 	%r10849, 0;
	// inline asm
	shf.r.wrap.b32 %r10848, %r24, %r10849, %r5464;
	// inline asm
	bra.uni 	BB4_1127;

BB4_459:
	setp.eq.s32	%p359, %r29, 7;
	mov.u32 	%r10721, %r10730;
	@%p359 bra 	BB4_460;
	bra.uni 	BB4_523;

BB4_460:
	shr.u32 	%r10721, %r22, 24;
	bra.uni 	BB4_523;

BB4_1323:
	setp.eq.s32	%p915, %r6507, 14;
	@%p915 bra 	BB4_1371;
	bra.uni 	BB4_1324;

BB4_1371:
	mov.u32 	%r6759, 16;
	// inline asm
	shf.r.wrap.b32 %r10799, %r20, %r27, %r6759;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10798, %r21, %r20, %r6759;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10797, %r22, %r21, %r6759;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10796, %r23, %r22, %r6759;
	// inline asm
	mov.u32 	%r10800, 0;
	// inline asm
	shf.r.wrap.b32 %r10803, %r10800, %r23, %r6759;
	// inline asm
	bra.uni 	BB4_1326;

BB4_795:
	setp.eq.s32	%p572, %r29, 7;
	@%p572 bra 	BB4_796;
	bra.uni 	BB4_811;

BB4_796:
	mov.u32 	%r4506, 8;
	// inline asm
	shf.r.wrap.b32 %r24, %r26, %r25, %r4506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r27, %r26, %r4506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r20, %r27, %r4506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r21, %r20, %r4506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r20, %r22, %r21, %r4506;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r23, %r22, %r4506;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r10851, %r10850, %r23, %r4506;
	// inline asm
	bra.uni 	BB4_865;

BB4_1089:
	setp.eq.s32	%p725, %r31, 23;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p725 bra 	BB4_1090;
	bra.uni 	BB4_1127;

BB4_1090:
	mov.u32 	%r5176, 24;
	// inline asm
	shf.r.wrap.b32 %r10768, %r26, %r25, %r5176;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r25, %r24, %r5176;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10852, %r24, %r10846, %r5176;
	// inline asm

BB4_1091:
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10853, %r10846;
	bra.uni 	BB4_1127;

BB4_490:
	setp.eq.s32	%p336, %r29, 23;
	mov.u32 	%r10721, %r10730;
	@%p336 bra 	BB4_491;
	bra.uni 	BB4_523;

BB4_491:
	shr.u32 	%r10721, %r26, 24;
	bra.uni 	BB4_523;

BB4_826:
	setp.eq.s32	%p549, %r29, 23;
	@%p549 bra 	BB4_827;
	bra.uni 	BB4_811;

BB4_827:
	mov.u32 	%r4218, 8;
	// inline asm
	shf.r.wrap.b32 %r24, %r22, %r21, %r4218;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r23, %r22, %r4218;
	// inline asm
	mov.u32 	%r10846, 0;
	// inline asm
	shf.r.wrap.b32 %r10847, %r10846, %r23, %r4218;
	// inline asm
	bra.uni 	BB4_864;

BB4_1071:
	setp.eq.s32	%p737, %r31, 15;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p737 bra 	BB4_1072;
	bra.uni 	BB4_1127;

BB4_1072:
	mov.u32 	%r5304, 24;
	// inline asm
	shf.r.wrap.b32 %r10768, %r20, %r27, %r5304;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10851, %r27, %r26, %r5304;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10852, %r26, %r25, %r5304;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10853, %r25, %r24, %r5304;
	// inline asm
	mov.u32 	%r10847, 0;
	// inline asm
	shf.r.wrap.b32 %r10846, %r24, %r10847, %r5304;
	// inline asm

BB4_1073:
	mov.u32 	%r10848, %r10847;
	mov.u32 	%r10849, %r10847;
	bra.uni 	BB4_1127;

BB4_474:
	setp.eq.s32	%p348, %r29, 15;
	mov.u32 	%r10721, %r10730;
	@%p348 bra 	BB4_475;
	bra.uni 	BB4_523;

BB4_475:
	shr.u32 	%r10721, %r20, 24;
	bra.uni 	BB4_523;

BB4_1358:
	setp.eq.s32	%p892, %r6507, 30;
	@%p892 bra 	BB4_1362;
	bra.uni 	BB4_1359;

BB4_1362:
	mov.u32 	%r10796, 0;
	mov.u32 	%r6523, 16;
	// inline asm
	shf.r.wrap.b32 %r10799, %r10796, %r23, %r6523;
	// inline asm
	bra.uni 	BB4_1361;

BB4_810:
	setp.eq.s32	%p561, %r29, 15;
	@%p561 bra 	BB4_852;
	bra.uni 	BB4_811;

BB4_852:
	mov.u32 	%r4346, 8;
	// inline asm
	shf.r.wrap.b32 %r24, %r20, %r27, %r4346;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10848, %r21, %r20, %r4346;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10847, %r22, %r21, %r4346;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10846, %r23, %r22, %r4346;
	// inline asm
	mov.u32 	%r10850, 0;
	// inline asm
	shf.r.wrap.b32 %r20, %r10850, %r23, %r4346;
	// inline asm

BB4_853:
	mov.u32 	%r10851, %r10850;
	mov.u32 	%r10852, %r10850;
	bra.uni 	BB4_865;

BB4_811:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	bra.uni 	BB4_865;

BB4_1107:
	setp.ne.s32	%p714, %r31, 31;
	mov.u32 	%r10846, %r10849;
	mov.u32 	%r10847, %r10849;
	mov.u32 	%r10848, %r10849;
	mov.u32 	%r10768, %r10849;
	mov.u32 	%r10851, %r10849;
	mov.u32 	%r10852, %r10849;
	mov.u32 	%r10853, %r10849;
	@%p714 bra 	BB4_1127;

	mov.u32 	%r10846, 0;
	mov.u32 	%r5080, 24;
	// inline asm
	shf.r.wrap.b32 %r10768, %r24, %r10846, %r5080;
	// inline asm

BB4_1109:
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;
	mov.u32 	%r10849, %r10846;
	mov.u32 	%r10851, %r10846;

BB4_1101:
	mov.u32 	%r10852, %r10846;
	mov.u32 	%r10853, %r10846;

BB4_1127:
	and.b32  	%r5622, %r28, 3;
	shl.b32 	%r5623, %r5622, 3;
	mov.u32 	%r5624, 1;
	shl.b32 	%r5625, %r5624, %r5623;
	add.s32 	%r1063, %r5625, -1;
	neg.s32 	%r1064, %r5625;
	shr.u32 	%r5621, %r29, 2;
	setp.gt.s32	%p756, %r5621, 3;
	@%p756 bra 	BB4_1135;

	setp.gt.s32	%p762, %r5621, 1;
	@%p762 bra 	BB4_1132;

	setp.eq.s32	%p765, %r5621, 0;
	@%p765 bra 	BB4_1147;
	bra.uni 	BB4_1130;

BB4_1147:
	and.b32  	%r5640, %r1063, %r23;
	and.b32  	%r5641, %r10768, %r1064;
	or.b32  	%r10850, %r5641, %r5640;
	bra.uni 	BB4_1148;

BB4_1135:
	setp.gt.s32	%p757, %r5621, 5;
	@%p757 bra 	BB4_1139;

	setp.eq.s32	%p760, %r5621, 4;
	@%p760 bra 	BB4_1144;
	bra.uni 	BB4_1137;

BB4_1144:
	and.b32  	%r5632, %r1063, %r27;
	and.b32  	%r5633, %r10846, %r1064;
	or.b32  	%r10846, %r5633, %r5632;
	bra.uni 	BB4_1145;

BB4_1132:
	setp.eq.s32	%p763, %r5621, 2;
	@%p763 bra 	BB4_1146;
	bra.uni 	BB4_1133;

BB4_1146:
	and.b32  	%r5636, %r1063, %r21;
	and.b32  	%r5637, %r10852, %r1064;
	or.b32  	%r10852, %r5637, %r5636;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	bra.uni 	BB4_1148;

BB4_1139:
	setp.eq.s32	%p758, %r5621, 6;
	@%p758 bra 	BB4_1143;
	bra.uni 	BB4_1140;

BB4_1143:
	and.b32  	%r5628, %r1063, %r25;
	and.b32  	%r5629, %r10848, %r1064;
	or.b32  	%r10848, %r5629, %r5628;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	bra.uni 	BB4_1145;

BB4_1130:
	setp.eq.s32	%p766, %r5621, 1;
	@%p766 bra 	BB4_1131;
	bra.uni 	BB4_1141;

BB4_1131:
	and.b32  	%r5638, %r1063, %r22;
	and.b32  	%r5639, %r10851, %r1064;
	or.b32  	%r10851, %r5639, %r5638;
	mov.u32 	%r10850, %r23;
	bra.uni 	BB4_1148;

BB4_1137:
	setp.eq.s32	%p761, %r5621, 5;
	@%p761 bra 	BB4_1138;
	bra.uni 	BB4_1141;

BB4_1138:
	and.b32  	%r5630, %r1063, %r26;
	and.b32  	%r5631, %r10847, %r1064;
	or.b32  	%r10847, %r5631, %r5630;
	mov.u32 	%r10846, %r27;
	bra.uni 	BB4_1145;

BB4_1133:
	setp.eq.s32	%p764, %r5621, 3;
	@%p764 bra 	BB4_1134;
	bra.uni 	BB4_1141;

BB4_1134:
	and.b32  	%r5634, %r1063, %r20;
	and.b32  	%r5635, %r10853, %r1064;
	or.b32  	%r10853, %r5635, %r5634;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	bra.uni 	BB4_1148;

BB4_1140:
	setp.ne.s32	%p759, %r5621, 7;
	@%p759 bra 	BB4_1141;

	and.b32  	%r5626, %r1063, %r24;
	and.b32  	%r5627, %r10849, %r1064;
	or.b32  	%r10849, %r5627, %r5626;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	bra.uni 	BB4_1145;

BB4_1141:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;

BB4_1145:
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	mov.u32 	%r10853, %r20;

BB4_1148:
	sub.s32 	%r10854, %r19, %r31;
	bra.uni 	BB4_1536;

BB4_505:
	setp.ne.s32	%p325, %r29, 31;
	mov.u32 	%r10721, %r10730;
	@%p325 bra 	BB4_523;

	shr.u32 	%r10721, %r24, 24;

BB4_523:
	setp.gt.s32	%p367, %r31, 15;
	@%p367 bra 	BB4_555;

	setp.gt.s32	%p391, %r31, 7;
	@%p391 bra 	BB4_540;

	setp.gt.s32	%p403, %r31, 3;
	@%p403 bra 	BB4_533;

	setp.gt.s32	%p409, %r31, 1;
	@%p409 bra 	BB4_530;

	setp.eq.s32	%p412, %r31, 0;
	@%p412 bra 	BB4_601;
	bra.uni 	BB4_528;

BB4_601:
	and.b32  	%r10730, %r23, 255;
	and.b32  	%r3848, %r23, -256;
	or.b32  	%r23, %r10721, %r3848;
	bra.uni 	BB4_602;

BB4_555:
	setp.gt.s32	%p368, %r31, 23;
	@%p368 bra 	BB4_571;

	setp.gt.s32	%p380, %r31, 19;
	@%p380 bra 	BB4_564;

	setp.gt.s32	%p386, %r31, 17;
	@%p386 bra 	BB4_561;

	setp.eq.s32	%p389, %r31, 16;
	@%p389 bra 	BB4_593;
	bra.uni 	BB4_559;

BB4_593:
	and.b32  	%r10730, %r27, 255;
	and.b32  	%r3824, %r27, -256;
	or.b32  	%r27, %r10721, %r3824;
	bra.uni 	BB4_602;

BB4_540:
	setp.gt.s32	%p392, %r31, 11;
	@%p392 bra 	BB4_548;

	setp.gt.s32	%p398, %r31, 9;
	@%p398 bra 	BB4_545;

	setp.eq.s32	%p401, %r31, 8;
	@%p401 bra 	BB4_597;
	bra.uni 	BB4_543;

BB4_597:
	and.b32  	%r10730, %r21, 255;
	and.b32  	%r3836, %r21, -256;
	or.b32  	%r21, %r10721, %r3836;
	bra.uni 	BB4_602;

BB4_571:
	setp.gt.s32	%p369, %r31, 27;
	@%p369 bra 	BB4_579;

	setp.gt.s32	%p375, %r31, 25;
	@%p375 bra 	BB4_576;

	setp.eq.s32	%p378, %r31, 24;
	@%p378 bra 	BB4_589;
	bra.uni 	BB4_574;

BB4_589:
	and.b32  	%r10730, %r25, 255;
	and.b32  	%r3812, %r25, -256;
	or.b32  	%r25, %r10721, %r3812;
	bra.uni 	BB4_602;

BB4_533:
	setp.gt.s32	%p404, %r31, 5;
	@%p404 bra 	BB4_537;

	setp.eq.s32	%p407, %r31, 4;
	@%p407 bra 	BB4_599;
	bra.uni 	BB4_535;

BB4_599:
	and.b32  	%r10730, %r22, 255;
	and.b32  	%r3842, %r22, -256;
	or.b32  	%r22, %r10721, %r3842;
	bra.uni 	BB4_602;

BB4_564:
	setp.gt.s32	%p381, %r31, 21;
	@%p381 bra 	BB4_568;

	setp.eq.s32	%p384, %r31, 20;
	@%p384 bra 	BB4_591;
	bra.uni 	BB4_566;

BB4_591:
	and.b32  	%r10730, %r26, 255;
	and.b32  	%r3818, %r26, -256;
	or.b32  	%r26, %r10721, %r3818;
	bra.uni 	BB4_602;

BB4_548:
	setp.gt.s32	%p393, %r31, 13;
	@%p393 bra 	BB4_552;

	setp.eq.s32	%p396, %r31, 12;
	@%p396 bra 	BB4_595;
	bra.uni 	BB4_550;

BB4_595:
	and.b32  	%r10730, %r20, 255;
	and.b32  	%r3830, %r20, -256;
	or.b32  	%r20, %r10721, %r3830;
	bra.uni 	BB4_602;

BB4_579:
	setp.gt.s32	%p370, %r31, 29;
	@%p370 bra 	BB4_583;

	setp.eq.s32	%p373, %r31, 28;
	@%p373 bra 	BB4_587;
	bra.uni 	BB4_581;

BB4_587:
	and.b32  	%r10730, %r24, 255;
	and.b32  	%r3806, %r24, -256;
	or.b32  	%r24, %r10721, %r3806;
	bra.uni 	BB4_602;

BB4_530:
	setp.eq.s32	%p410, %r31, 2;
	@%p410 bra 	BB4_600;
	bra.uni 	BB4_531;

BB4_600:
	bfe.u32 	%r10730, %r23, 16, 8;
	shl.b32 	%r3844, %r10721, 16;
	and.b32  	%r3845, %r23, -16711681;
	or.b32  	%r23, %r3844, %r3845;
	bra.uni 	BB4_602;

BB4_561:
	setp.eq.s32	%p387, %r31, 18;
	@%p387 bra 	BB4_592;
	bra.uni 	BB4_562;

BB4_592:
	bfe.u32 	%r10730, %r27, 16, 8;
	shl.b32 	%r3820, %r10721, 16;
	and.b32  	%r3821, %r27, -16711681;
	or.b32  	%r27, %r3820, %r3821;
	bra.uni 	BB4_602;

BB4_545:
	setp.eq.s32	%p399, %r31, 10;
	@%p399 bra 	BB4_596;
	bra.uni 	BB4_546;

BB4_596:
	bfe.u32 	%r10730, %r21, 16, 8;
	shl.b32 	%r3832, %r10721, 16;
	and.b32  	%r3833, %r21, -16711681;
	or.b32  	%r21, %r3832, %r3833;
	bra.uni 	BB4_602;

BB4_576:
	setp.eq.s32	%p376, %r31, 26;
	@%p376 bra 	BB4_588;
	bra.uni 	BB4_577;

BB4_588:
	bfe.u32 	%r10730, %r25, 16, 8;
	shl.b32 	%r3808, %r10721, 16;
	and.b32  	%r3809, %r25, -16711681;
	or.b32  	%r25, %r3808, %r3809;
	bra.uni 	BB4_602;

BB4_537:
	setp.eq.s32	%p405, %r31, 6;
	@%p405 bra 	BB4_598;
	bra.uni 	BB4_538;

BB4_598:
	bfe.u32 	%r10730, %r22, 16, 8;
	shl.b32 	%r3838, %r10721, 16;
	and.b32  	%r3839, %r22, -16711681;
	or.b32  	%r22, %r3838, %r3839;
	bra.uni 	BB4_602;

BB4_568:
	setp.eq.s32	%p382, %r31, 22;
	@%p382 bra 	BB4_590;
	bra.uni 	BB4_569;

BB4_590:
	bfe.u32 	%r10730, %r26, 16, 8;
	shl.b32 	%r3814, %r10721, 16;
	and.b32  	%r3815, %r26, -16711681;
	or.b32  	%r26, %r3814, %r3815;
	bra.uni 	BB4_602;

BB4_552:
	setp.eq.s32	%p394, %r31, 14;
	@%p394 bra 	BB4_594;
	bra.uni 	BB4_553;

BB4_594:
	bfe.u32 	%r10730, %r20, 16, 8;
	shl.b32 	%r3826, %r10721, 16;
	and.b32  	%r3827, %r20, -16711681;
	or.b32  	%r20, %r3826, %r3827;
	bra.uni 	BB4_602;

BB4_583:
	setp.eq.s32	%p371, %r31, 30;
	@%p371 bra 	BB4_586;
	bra.uni 	BB4_584;

BB4_586:
	bfe.u32 	%r10730, %r24, 16, 8;
	shl.b32 	%r3802, %r10721, 16;
	and.b32  	%r3803, %r24, -16711681;
	or.b32  	%r24, %r3802, %r3803;
	bra.uni 	BB4_602;

BB4_842:
	setp.ne.s32	%p538, %r29, 30;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	@%p538 bra 	BB4_865;

	mov.u32 	%r10846, 0;
	mov.u32 	%r4133, 16;
	// inline asm
	shf.r.wrap.b32 %r24, %r10846, %r23, %r4133;
	// inline asm

BB4_863:
	mov.u32 	%r10847, %r10846;
	mov.u32 	%r10848, %r10846;

BB4_864:
	mov.u32 	%r10850, %r10846;
	mov.u32 	%r10851, %r10846;
	mov.u32 	%r10852, %r10846;
	mov.u32 	%r20, %r10846;

BB4_865:
	@%p533 bra 	BB4_894;

	setp.gt.s32	%p602, %r29, 7;
	@%p602 bra 	BB4_879;

	setp.gt.s32	%p614, %r29, 3;
	@%p614 bra 	BB4_872;

	setp.eq.s32	%p620, %r29, 1;
	@%p620 bra 	BB4_942;

	setp.eq.s32	%p621, %r29, 2;
	@%p621 bra 	BB4_941;
	bra.uni 	BB4_870;

BB4_941:
	shl.b32 	%r4888, %r615, 8;
	or.b32  	%r4889, %r4888, %r615;
	or.b32  	%r10850, %r4889, %r10850;
	bra.uni 	BB4_871;

BB4_894:
	setp.gt.s32	%p579, %r29, 23;
	@%p579 bra 	BB4_910;

	setp.gt.s32	%p591, %r29, 19;
	@%p591 bra 	BB4_903;

	setp.gt.s32	%p597, %r29, 17;
	@%p597 bra 	BB4_900;

	setp.eq.s32	%p600, %r29, 16;
	@%p600 bra 	BB4_933;
	bra.uni 	BB4_898;

BB4_933:
	mov.u32 	%r4788, 64;
	prmt.b32 	%r4789, %r23, %r23, %r4788;
	mov.u32 	%r4790, 1040;
	prmt.b32 	%r4791, %r4789, %r23, %r4790;
	mov.u32 	%r4792, 16912;
	prmt.b32 	%r4793, %r4791, %r23, %r4792;
	or.b32  	%r10850, %r4793, %r10850;
	or.b32  	%r10851, %r4793, %r10851;
	or.b32  	%r10852, %r4793, %r10852;
	or.b32  	%r10853, %r4793, %r20;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_879:
	setp.gt.s32	%p603, %r29, 11;
	@%p603 bra 	BB4_887;

	setp.gt.s32	%p609, %r29, 9;
	@%p609 bra 	BB4_884;

	setp.eq.s32	%p612, %r29, 8;
	@%p612 bra 	BB4_937;
	bra.uni 	BB4_882;

BB4_937:
	mov.u32 	%r4848, 64;
	prmt.b32 	%r4849, %r23, %r23, %r4848;
	mov.u32 	%r4850, 1040;
	prmt.b32 	%r4851, %r4849, %r23, %r4850;
	mov.u32 	%r4852, 16912;
	prmt.b32 	%r4853, %r4851, %r23, %r4852;
	or.b32  	%r10850, %r4853, %r10850;
	or.b32  	%r10851, %r4853, %r10851;
	bra.uni 	BB4_871;

BB4_910:
	setp.gt.s32	%p580, %r29, 27;
	@%p580 bra 	BB4_918;

	setp.gt.s32	%p586, %r29, 25;
	@%p586 bra 	BB4_915;

	setp.eq.s32	%p589, %r29, 24;
	@%p589 bra 	BB4_928;
	bra.uni 	BB4_913;

BB4_928:
	mov.u32 	%r4728, 64;
	prmt.b32 	%r4729, %r23, %r23, %r4728;
	mov.u32 	%r4730, 1040;
	prmt.b32 	%r4731, %r4729, %r23, %r4730;
	mov.u32 	%r4732, 16912;
	prmt.b32 	%r4733, %r4731, %r23, %r4732;
	or.b32  	%r10850, %r4733, %r10850;
	or.b32  	%r10851, %r4733, %r10851;
	or.b32  	%r10852, %r4733, %r10852;
	or.b32  	%r10853, %r4733, %r20;
	or.b32  	%r10846, %r4733, %r10846;
	or.b32  	%r10847, %r4733, %r10847;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_872:
	setp.gt.s32	%p615, %r29, 5;
	@%p615 bra 	BB4_876;

	setp.eq.s32	%p618, %r29, 4;
	@%p618 bra 	BB4_939;
	bra.uni 	BB4_874;

BB4_939:
	mov.u32 	%r4878, 64;
	prmt.b32 	%r4879, %r23, %r23, %r4878;
	mov.u32 	%r4880, 1040;
	prmt.b32 	%r4881, %r4879, %r23, %r4880;
	mov.u32 	%r4882, 16912;
	prmt.b32 	%r4883, %r4881, %r23, %r4882;
	or.b32  	%r10850, %r4883, %r10850;
	bra.uni 	BB4_871;

BB4_903:
	setp.gt.s32	%p592, %r29, 21;
	@%p592 bra 	BB4_907;

	setp.eq.s32	%p595, %r29, 20;
	@%p595 bra 	BB4_931;
	bra.uni 	BB4_905;

BB4_931:
	mov.u32 	%r4758, 64;
	prmt.b32 	%r4759, %r23, %r23, %r4758;
	mov.u32 	%r4760, 1040;
	prmt.b32 	%r4761, %r4759, %r23, %r4760;
	mov.u32 	%r4762, 16912;
	prmt.b32 	%r4763, %r4761, %r23, %r4762;
	or.b32  	%r10850, %r4763, %r10850;
	or.b32  	%r10851, %r4763, %r10851;
	or.b32  	%r10852, %r4763, %r10852;
	or.b32  	%r10853, %r4763, %r20;
	or.b32  	%r10846, %r4763, %r10846;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_887:
	setp.gt.s32	%p604, %r29, 13;
	@%p604 bra 	BB4_891;

	setp.eq.s32	%p607, %r29, 12;
	@%p607 bra 	BB4_935;
	bra.uni 	BB4_889;

BB4_935:
	mov.u32 	%r4818, 64;
	prmt.b32 	%r4819, %r23, %r23, %r4818;
	mov.u32 	%r4820, 1040;
	prmt.b32 	%r4821, %r4819, %r23, %r4820;
	mov.u32 	%r4822, 16912;
	prmt.b32 	%r4823, %r4821, %r23, %r4822;
	or.b32  	%r10850, %r4823, %r10850;
	or.b32  	%r10851, %r4823, %r10851;
	or.b32  	%r10852, %r4823, %r10852;
	bra.uni 	BB4_871;

BB4_918:
	setp.gt.s32	%p581, %r29, 29;
	@%p581 bra 	BB4_922;

	setp.eq.s32	%p584, %r29, 28;
	@%p584 bra 	BB4_926;
	bra.uni 	BB4_920;

BB4_926:
	mov.u32 	%r4698, 64;
	prmt.b32 	%r4699, %r23, %r23, %r4698;
	mov.u32 	%r4700, 1040;
	prmt.b32 	%r4701, %r4699, %r23, %r4700;
	mov.u32 	%r4702, 16912;
	prmt.b32 	%r4703, %r4701, %r23, %r4702;
	or.b32  	%r10850, %r4703, %r10850;
	or.b32  	%r10851, %r4703, %r10851;
	or.b32  	%r10852, %r4703, %r10852;
	or.b32  	%r10853, %r4703, %r20;
	or.b32  	%r10846, %r4703, %r10846;
	or.b32  	%r10847, %r4703, %r10847;
	or.b32  	%r10848, %r4703, %r10848;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_900:
	setp.eq.s32	%p598, %r29, 18;
	@%p598 bra 	BB4_932;
	bra.uni 	BB4_901;

BB4_932:
	mov.u32 	%r4774, 64;
	prmt.b32 	%r4775, %r23, %r23, %r4774;
	mov.u32 	%r4776, 1040;
	prmt.b32 	%r4777, %r4775, %r23, %r4776;
	mov.u32 	%r4778, 16912;
	prmt.b32 	%r4779, %r4777, %r23, %r4778;
	or.b32  	%r10850, %r4779, %r10850;
	or.b32  	%r10851, %r4779, %r10851;
	or.b32  	%r10852, %r4779, %r10852;
	or.b32  	%r10853, %r4779, %r20;
	shl.b32 	%r4780, %r615, 8;
	or.b32  	%r4781, %r4780, %r615;
	or.b32  	%r10846, %r4781, %r10846;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_884:
	setp.eq.s32	%p610, %r29, 10;
	@%p610 bra 	BB4_936;
	bra.uni 	BB4_885;

BB4_936:
	mov.u32 	%r4834, 64;
	prmt.b32 	%r4835, %r23, %r23, %r4834;
	mov.u32 	%r4836, 1040;
	prmt.b32 	%r4837, %r4835, %r23, %r4836;
	mov.u32 	%r4838, 16912;
	prmt.b32 	%r4839, %r4837, %r23, %r4838;
	or.b32  	%r10850, %r4839, %r10850;
	or.b32  	%r10851, %r4839, %r10851;
	shl.b32 	%r4840, %r615, 8;
	or.b32  	%r4841, %r4840, %r615;
	or.b32  	%r10852, %r4841, %r10852;
	bra.uni 	BB4_871;

BB4_915:
	setp.eq.s32	%p587, %r29, 26;
	@%p587 bra 	BB4_927;
	bra.uni 	BB4_916;

BB4_927:
	mov.u32 	%r4714, 64;
	prmt.b32 	%r4715, %r23, %r23, %r4714;
	mov.u32 	%r4716, 1040;
	prmt.b32 	%r4717, %r4715, %r23, %r4716;
	mov.u32 	%r4718, 16912;
	prmt.b32 	%r4719, %r4717, %r23, %r4718;
	or.b32  	%r10850, %r4719, %r10850;
	or.b32  	%r10851, %r4719, %r10851;
	or.b32  	%r10852, %r4719, %r10852;
	or.b32  	%r10853, %r4719, %r20;
	or.b32  	%r10846, %r4719, %r10846;
	or.b32  	%r10847, %r4719, %r10847;
	shl.b32 	%r4720, %r615, 8;
	or.b32  	%r4721, %r4720, %r615;
	or.b32  	%r10848, %r4721, %r10848;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_876:
	setp.eq.s32	%p616, %r29, 6;
	@%p616 bra 	BB4_938;
	bra.uni 	BB4_877;

BB4_938:
	mov.u32 	%r4864, 64;
	prmt.b32 	%r4865, %r23, %r23, %r4864;
	mov.u32 	%r4866, 1040;
	prmt.b32 	%r4867, %r4865, %r23, %r4866;
	mov.u32 	%r4868, 16912;
	prmt.b32 	%r4869, %r4867, %r23, %r4868;
	or.b32  	%r10850, %r4869, %r10850;
	shl.b32 	%r4870, %r615, 8;
	or.b32  	%r4871, %r4870, %r615;
	or.b32  	%r10851, %r4871, %r10851;
	bra.uni 	BB4_871;

BB4_907:
	setp.eq.s32	%p593, %r29, 22;
	@%p593 bra 	BB4_930;
	bra.uni 	BB4_908;

BB4_930:
	mov.u32 	%r4744, 64;
	prmt.b32 	%r4745, %r23, %r23, %r4744;
	mov.u32 	%r4746, 1040;
	prmt.b32 	%r4747, %r4745, %r23, %r4746;
	mov.u32 	%r4748, 16912;
	prmt.b32 	%r4749, %r4747, %r23, %r4748;
	or.b32  	%r10850, %r4749, %r10850;
	or.b32  	%r10851, %r4749, %r10851;
	or.b32  	%r10852, %r4749, %r10852;
	or.b32  	%r10853, %r4749, %r20;
	or.b32  	%r10846, %r4749, %r10846;
	shl.b32 	%r4750, %r615, 8;
	or.b32  	%r4751, %r4750, %r615;
	or.b32  	%r10847, %r4751, %r10847;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_891:
	setp.eq.s32	%p605, %r29, 14;
	@%p605 bra 	BB4_934;
	bra.uni 	BB4_892;

BB4_934:
	mov.u32 	%r4804, 64;
	prmt.b32 	%r4805, %r23, %r23, %r4804;
	mov.u32 	%r4806, 1040;
	prmt.b32 	%r4807, %r4805, %r23, %r4806;
	mov.u32 	%r4808, 16912;
	prmt.b32 	%r4809, %r4807, %r23, %r4808;
	or.b32  	%r10850, %r4809, %r10850;
	or.b32  	%r10851, %r4809, %r10851;
	or.b32  	%r10852, %r4809, %r10852;
	shl.b32 	%r4810, %r615, 8;
	or.b32  	%r4811, %r4810, %r615;
	or.b32  	%r10853, %r4811, %r20;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_922:
	setp.eq.s32	%p582, %r29, 30;
	@%p582 bra 	BB4_925;
	bra.uni 	BB4_923;

BB4_925:
	mov.u32 	%r4684, 64;
	prmt.b32 	%r4685, %r23, %r23, %r4684;
	mov.u32 	%r4686, 1040;
	prmt.b32 	%r4687, %r4685, %r23, %r4686;
	mov.u32 	%r4688, 16912;
	prmt.b32 	%r4689, %r4687, %r23, %r4688;
	or.b32  	%r10850, %r4689, %r10850;
	or.b32  	%r10851, %r4689, %r10851;
	or.b32  	%r10852, %r4689, %r10852;
	or.b32  	%r10853, %r4689, %r20;
	or.b32  	%r10846, %r4689, %r10846;
	or.b32  	%r10847, %r4689, %r10847;
	or.b32  	%r10848, %r4689, %r10848;
	shl.b32 	%r4690, %r615, 8;
	or.b32  	%r4691, %r4690, %r615;
	or.b32  	%r10849, %r4691, %r24;
	bra.uni 	BB4_1536;

BB4_942:
	or.b32  	%r10850, %r10850, %r615;
	bra.uni 	BB4_871;

BB4_870:
	setp.eq.s32	%p622, %r29, 3;
	@%p622 bra 	BB4_940;
	bra.uni 	BB4_871;

BB4_940:
	shl.b32 	%r4884, %r615, 8;
	or.b32  	%r4885, %r4884, %r615;
	shl.b32 	%r4886, %r615, 16;
	or.b32  	%r4887, %r4885, %r4886;
	or.b32  	%r10850, %r4887, %r10850;
	bra.uni 	BB4_871;

BB4_528:
	setp.eq.s32	%p413, %r31, 1;
	@%p413 bra 	BB4_529;
	bra.uni 	BB4_602;

BB4_529:
	bfe.u32 	%r10730, %r23, 8, 8;
	shl.b32 	%r3846, %r10721, 8;
	and.b32  	%r3847, %r23, -65281;
	or.b32  	%r23, %r3846, %r3847;
	bra.uni 	BB4_602;

BB4_559:
	setp.eq.s32	%p390, %r31, 17;
	@%p390 bra 	BB4_560;
	bra.uni 	BB4_602;

BB4_560:
	bfe.u32 	%r10730, %r27, 8, 8;
	shl.b32 	%r3822, %r10721, 8;
	and.b32  	%r3823, %r27, -65281;
	or.b32  	%r27, %r3822, %r3823;
	bra.uni 	BB4_602;

BB4_543:
	setp.eq.s32	%p402, %r31, 9;
	@%p402 bra 	BB4_544;
	bra.uni 	BB4_602;

BB4_544:
	bfe.u32 	%r10730, %r21, 8, 8;
	shl.b32 	%r3834, %r10721, 8;
	and.b32  	%r3835, %r21, -65281;
	or.b32  	%r21, %r3834, %r3835;
	bra.uni 	BB4_602;

BB4_574:
	setp.eq.s32	%p379, %r31, 25;
	@%p379 bra 	BB4_575;
	bra.uni 	BB4_602;

BB4_575:
	bfe.u32 	%r10730, %r25, 8, 8;
	shl.b32 	%r3810, %r10721, 8;
	and.b32  	%r3811, %r25, -65281;
	or.b32  	%r25, %r3810, %r3811;
	bra.uni 	BB4_602;

BB4_535:
	setp.eq.s32	%p408, %r31, 5;
	@%p408 bra 	BB4_536;
	bra.uni 	BB4_602;

BB4_536:
	bfe.u32 	%r10730, %r22, 8, 8;
	shl.b32 	%r3840, %r10721, 8;
	and.b32  	%r3841, %r22, -65281;
	or.b32  	%r22, %r3840, %r3841;
	bra.uni 	BB4_602;

BB4_566:
	setp.eq.s32	%p385, %r31, 21;
	@%p385 bra 	BB4_567;
	bra.uni 	BB4_602;

BB4_567:
	bfe.u32 	%r10730, %r26, 8, 8;
	shl.b32 	%r3816, %r10721, 8;
	and.b32  	%r3817, %r26, -65281;
	or.b32  	%r26, %r3816, %r3817;
	bra.uni 	BB4_602;

BB4_550:
	setp.eq.s32	%p397, %r31, 13;
	@%p397 bra 	BB4_551;
	bra.uni 	BB4_602;

BB4_551:
	bfe.u32 	%r10730, %r20, 8, 8;
	shl.b32 	%r3828, %r10721, 8;
	and.b32  	%r3829, %r20, -65281;
	or.b32  	%r20, %r3828, %r3829;
	bra.uni 	BB4_602;

BB4_581:
	setp.eq.s32	%p374, %r31, 29;
	@%p374 bra 	BB4_582;
	bra.uni 	BB4_602;

BB4_582:
	bfe.u32 	%r10730, %r24, 8, 8;
	shl.b32 	%r3804, %r10721, 8;
	and.b32  	%r3805, %r24, -65281;
	or.b32  	%r24, %r3804, %r3805;
	bra.uni 	BB4_602;

BB4_531:
	setp.eq.s32	%p411, %r31, 3;
	@%p411 bra 	BB4_532;
	bra.uni 	BB4_602;

BB4_532:
	shr.u32 	%r10730, %r23, 24;
	and.b32  	%r3843, %r23, 16777215;
	prmt.b32 	%r23, %r10721, %r3843, 1620;
	bra.uni 	BB4_602;

BB4_562:
	setp.eq.s32	%p388, %r31, 19;
	@%p388 bra 	BB4_563;
	bra.uni 	BB4_602;

BB4_563:
	shr.u32 	%r10730, %r27, 24;
	and.b32  	%r3819, %r27, 16777215;
	prmt.b32 	%r27, %r10721, %r3819, 1620;
	bra.uni 	BB4_602;

BB4_546:
	setp.eq.s32	%p400, %r31, 11;
	@%p400 bra 	BB4_547;
	bra.uni 	BB4_602;

BB4_547:
	shr.u32 	%r10730, %r21, 24;
	and.b32  	%r3831, %r21, 16777215;
	prmt.b32 	%r21, %r10721, %r3831, 1620;
	bra.uni 	BB4_602;

BB4_577:
	setp.eq.s32	%p377, %r31, 27;
	@%p377 bra 	BB4_578;
	bra.uni 	BB4_602;

BB4_578:
	shr.u32 	%r10730, %r25, 24;
	and.b32  	%r3807, %r25, 16777215;
	prmt.b32 	%r25, %r10721, %r3807, 1620;
	bra.uni 	BB4_602;

BB4_538:
	setp.eq.s32	%p406, %r31, 7;
	@%p406 bra 	BB4_539;
	bra.uni 	BB4_602;

BB4_539:
	shr.u32 	%r10730, %r22, 24;
	and.b32  	%r3837, %r22, 16777215;
	prmt.b32 	%r22, %r10721, %r3837, 1620;
	bra.uni 	BB4_602;

BB4_569:
	setp.eq.s32	%p383, %r31, 23;
	@%p383 bra 	BB4_570;
	bra.uni 	BB4_602;

BB4_570:
	shr.u32 	%r10730, %r26, 24;
	and.b32  	%r3813, %r26, 16777215;
	prmt.b32 	%r26, %r10721, %r3813, 1620;
	bra.uni 	BB4_602;

BB4_553:
	setp.eq.s32	%p395, %r31, 15;
	@%p395 bra 	BB4_554;
	bra.uni 	BB4_602;

BB4_554:
	shr.u32 	%r10730, %r20, 24;
	and.b32  	%r3825, %r20, 16777215;
	prmt.b32 	%r20, %r10721, %r3825, 1620;
	bra.uni 	BB4_602;

BB4_584:
	setp.ne.s32	%p372, %r31, 31;
	@%p372 bra 	BB4_602;

	shr.u32 	%r10730, %r24, 24;
	and.b32  	%r3801, %r24, 16777215;
	prmt.b32 	%r24, %r10721, %r3801, 1620;

BB4_602:
	@%p320 bra 	BB4_638;

	setp.gt.s32	%p438, %r29, 7;
	@%p438 bra 	BB4_621;

	setp.gt.s32	%p450, %r29, 3;
	@%p450 bra 	BB4_613;

	setp.gt.s32	%p456, %r29, 1;
	@%p456 bra 	BB4_609;

	setp.eq.s32	%p459, %r29, 0;
	@%p459 bra 	BB4_694;
	bra.uni 	BB4_607;

BB4_694:
	and.b32  	%r3896, %r23, -256;
	or.b32  	%r10850, %r10730, %r3896;
	bra.uni 	BB4_612;

BB4_638:
	setp.gt.s32	%p415, %r29, 23;
	@%p415 bra 	BB4_662;

	setp.gt.s32	%p427, %r29, 19;
	@%p427 bra 	BB4_648;

	setp.gt.s32	%p433, %r29, 17;
	@%p433 bra 	BB4_644;

	setp.eq.s32	%p436, %r29, 16;
	@%p436 bra 	BB4_686;
	bra.uni 	BB4_642;

BB4_686:
	and.b32  	%r3872, %r27, -256;
	or.b32  	%r10846, %r10730, %r3872;
	bra.uni 	BB4_647;

BB4_621:
	setp.gt.s32	%p439, %r29, 11;
	@%p439 bra 	BB4_630;

	setp.gt.s32	%p445, %r29, 9;
	@%p445 bra 	BB4_626;

	setp.eq.s32	%p448, %r29, 8;
	@%p448 bra 	BB4_690;
	bra.uni 	BB4_624;

BB4_690:
	and.b32  	%r3884, %r21, -256;
	or.b32  	%r10852, %r10730, %r3884;
	bra.uni 	BB4_629;

BB4_662:
	setp.gt.s32	%p416, %r29, 27;
	@%p416 bra 	BB4_671;

	setp.gt.s32	%p422, %r29, 25;
	@%p422 bra 	BB4_667;

	setp.eq.s32	%p425, %r29, 24;
	@%p425 bra 	BB4_682;
	bra.uni 	BB4_665;

BB4_682:
	and.b32  	%r3860, %r25, -256;
	or.b32  	%r10848, %r10730, %r3860;
	bra.uni 	BB4_670;

BB4_613:
	setp.gt.s32	%p451, %r29, 5;
	@%p451 bra 	BB4_617;

	setp.eq.s32	%p454, %r29, 4;
	@%p454 bra 	BB4_692;
	bra.uni 	BB4_615;

BB4_692:
	and.b32  	%r3890, %r22, -256;
	or.b32  	%r10851, %r10730, %r3890;
	bra.uni 	BB4_620;

BB4_648:
	setp.gt.s32	%p428, %r29, 21;
	@%p428 bra 	BB4_652;

	setp.eq.s32	%p431, %r29, 20;
	@%p431 bra 	BB4_684;
	bra.uni 	BB4_650;

BB4_684:
	and.b32  	%r3866, %r26, -256;
	or.b32  	%r10847, %r10730, %r3866;
	bra.uni 	BB4_655;

BB4_630:
	setp.gt.s32	%p440, %r29, 13;
	@%p440 bra 	BB4_634;

	setp.eq.s32	%p443, %r29, 12;
	@%p443 bra 	BB4_688;
	bra.uni 	BB4_632;

BB4_688:
	and.b32  	%r3878, %r20, -256;
	or.b32  	%r10853, %r3878, %r10730;
	bra.uni 	BB4_637;

BB4_671:
	setp.gt.s32	%p417, %r29, 29;
	@%p417 bra 	BB4_675;

	setp.eq.s32	%p420, %r29, 28;
	@%p420 bra 	BB4_680;
	bra.uni 	BB4_673;

BB4_680:
	and.b32  	%r3854, %r24, -256;
	or.b32  	%r10849, %r10730, %r3854;
	bra.uni 	BB4_678;

BB4_609:
	setp.eq.s32	%p457, %r29, 2;
	@%p457 bra 	BB4_693;
	bra.uni 	BB4_610;

BB4_693:
	and.b32  	%r3892, %r23, -16711681;
	shl.b32 	%r3893, %r10730, 16;
	or.b32  	%r10850, %r3893, %r3892;
	bra.uni 	BB4_612;

BB4_644:
	setp.eq.s32	%p434, %r29, 18;
	@%p434 bra 	BB4_685;
	bra.uni 	BB4_645;

BB4_685:
	and.b32  	%r3868, %r27, -16711681;
	shl.b32 	%r3869, %r10730, 16;
	or.b32  	%r10846, %r3869, %r3868;
	bra.uni 	BB4_647;

BB4_626:
	setp.eq.s32	%p446, %r29, 10;
	@%p446 bra 	BB4_689;
	bra.uni 	BB4_627;

BB4_689:
	and.b32  	%r3880, %r21, -16711681;
	shl.b32 	%r3881, %r10730, 16;
	or.b32  	%r10852, %r3881, %r3880;
	bra.uni 	BB4_629;

BB4_667:
	setp.eq.s32	%p423, %r29, 26;
	@%p423 bra 	BB4_681;
	bra.uni 	BB4_668;

BB4_681:
	and.b32  	%r3856, %r25, -16711681;
	shl.b32 	%r3857, %r10730, 16;
	or.b32  	%r10848, %r3857, %r3856;
	bra.uni 	BB4_670;

BB4_617:
	setp.eq.s32	%p452, %r29, 6;
	@%p452 bra 	BB4_691;
	bra.uni 	BB4_618;

BB4_691:
	and.b32  	%r3886, %r22, -16711681;
	shl.b32 	%r3887, %r10730, 16;
	or.b32  	%r10851, %r3887, %r3886;
	bra.uni 	BB4_620;

BB4_652:
	setp.eq.s32	%p429, %r29, 22;
	@%p429 bra 	BB4_683;
	bra.uni 	BB4_653;

BB4_683:
	and.b32  	%r3862, %r26, -16711681;
	shl.b32 	%r3863, %r10730, 16;
	or.b32  	%r10847, %r3863, %r3862;
	bra.uni 	BB4_655;

BB4_634:
	setp.eq.s32	%p441, %r29, 14;
	@%p441 bra 	BB4_687;
	bra.uni 	BB4_635;

BB4_687:
	and.b32  	%r3874, %r20, -16711681;
	shl.b32 	%r3875, %r10730, 16;
	or.b32  	%r10853, %r3875, %r3874;
	bra.uni 	BB4_637;

BB4_675:
	setp.eq.s32	%p418, %r29, 30;
	@%p418 bra 	BB4_679;
	bra.uni 	BB4_676;

BB4_679:
	and.b32  	%r3850, %r24, -16711681;
	shl.b32 	%r3851, %r10730, 16;
	or.b32  	%r10849, %r3851, %r3850;
	bra.uni 	BB4_678;

BB4_898:
	setp.eq.s32	%p601, %r29, 17;
	@%p601 bra 	BB4_899;
	bra.uni 	BB4_871;

BB4_899:
	mov.u32 	%r4782, 64;
	prmt.b32 	%r4783, %r23, %r23, %r4782;
	mov.u32 	%r4784, 1040;
	prmt.b32 	%r4785, %r4783, %r23, %r4784;
	mov.u32 	%r4786, 16912;
	prmt.b32 	%r4787, %r4785, %r23, %r4786;
	or.b32  	%r10850, %r4787, %r10850;
	or.b32  	%r10851, %r4787, %r10851;
	or.b32  	%r10852, %r4787, %r10852;
	or.b32  	%r10853, %r4787, %r20;
	or.b32  	%r10846, %r10846, %r615;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_882:
	setp.eq.s32	%p613, %r29, 9;
	@%p613 bra 	BB4_883;
	bra.uni 	BB4_871;

BB4_883:
	mov.u32 	%r4842, 64;
	prmt.b32 	%r4843, %r23, %r23, %r4842;
	mov.u32 	%r4844, 1040;
	prmt.b32 	%r4845, %r4843, %r23, %r4844;
	mov.u32 	%r4846, 16912;
	prmt.b32 	%r4847, %r4845, %r23, %r4846;
	or.b32  	%r10850, %r4847, %r10850;
	or.b32  	%r10851, %r4847, %r10851;
	or.b32  	%r10852, %r10852, %r615;
	bra.uni 	BB4_871;

BB4_913:
	setp.eq.s32	%p590, %r29, 25;
	@%p590 bra 	BB4_914;
	bra.uni 	BB4_909;

BB4_914:
	mov.u32 	%r4722, 64;
	prmt.b32 	%r4723, %r23, %r23, %r4722;
	mov.u32 	%r4724, 1040;
	prmt.b32 	%r4725, %r4723, %r23, %r4724;
	mov.u32 	%r4726, 16912;
	prmt.b32 	%r4727, %r4725, %r23, %r4726;
	or.b32  	%r10850, %r4727, %r10850;
	or.b32  	%r10851, %r4727, %r10851;
	or.b32  	%r10852, %r4727, %r10852;
	or.b32  	%r10853, %r4727, %r20;
	or.b32  	%r10846, %r4727, %r10846;
	or.b32  	%r10847, %r4727, %r10847;
	or.b32  	%r10848, %r10848, %r615;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_874:
	setp.eq.s32	%p619, %r29, 5;
	@%p619 bra 	BB4_875;
	bra.uni 	BB4_871;

BB4_875:
	mov.u32 	%r4872, 64;
	prmt.b32 	%r4873, %r23, %r23, %r4872;
	mov.u32 	%r4874, 1040;
	prmt.b32 	%r4875, %r4873, %r23, %r4874;
	mov.u32 	%r4876, 16912;
	prmt.b32 	%r4877, %r4875, %r23, %r4876;
	or.b32  	%r10850, %r4877, %r10850;
	or.b32  	%r10851, %r10851, %r615;
	bra.uni 	BB4_871;

BB4_905:
	setp.eq.s32	%p596, %r29, 21;
	@%p596 bra 	BB4_906;
	bra.uni 	BB4_871;

BB4_906:
	mov.u32 	%r4752, 64;
	prmt.b32 	%r4753, %r23, %r23, %r4752;
	mov.u32 	%r4754, 1040;
	prmt.b32 	%r4755, %r4753, %r23, %r4754;
	mov.u32 	%r4756, 16912;
	prmt.b32 	%r4757, %r4755, %r23, %r4756;
	or.b32  	%r10850, %r4757, %r10850;
	or.b32  	%r10851, %r4757, %r10851;
	or.b32  	%r10852, %r4757, %r10852;
	or.b32  	%r10853, %r4757, %r20;
	or.b32  	%r10846, %r4757, %r10846;
	or.b32  	%r10847, %r10847, %r615;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_889:
	setp.eq.s32	%p608, %r29, 13;
	@%p608 bra 	BB4_890;
	bra.uni 	BB4_871;

BB4_890:
	mov.u32 	%r4812, 64;
	prmt.b32 	%r4813, %r23, %r23, %r4812;
	mov.u32 	%r4814, 1040;
	prmt.b32 	%r4815, %r4813, %r23, %r4814;
	mov.u32 	%r4816, 16912;
	prmt.b32 	%r4817, %r4815, %r23, %r4816;
	or.b32  	%r10850, %r4817, %r10850;
	or.b32  	%r10851, %r4817, %r10851;
	or.b32  	%r10852, %r4817, %r10852;
	or.b32  	%r10853, %r20, %r615;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_920:
	setp.eq.s32	%p585, %r29, 29;
	@%p585 bra 	BB4_921;
	bra.uni 	BB4_909;

BB4_921:
	mov.u32 	%r4692, 64;
	prmt.b32 	%r4693, %r23, %r23, %r4692;
	mov.u32 	%r4694, 1040;
	prmt.b32 	%r4695, %r4693, %r23, %r4694;
	mov.u32 	%r4696, 16912;
	prmt.b32 	%r4697, %r4695, %r23, %r4696;
	or.b32  	%r10850, %r4697, %r10850;
	or.b32  	%r10851, %r4697, %r10851;
	or.b32  	%r10852, %r4697, %r10852;
	or.b32  	%r10853, %r4697, %r20;
	or.b32  	%r10846, %r4697, %r10846;
	or.b32  	%r10847, %r4697, %r10847;
	or.b32  	%r10848, %r4697, %r10848;
	or.b32  	%r10849, %r24, %r615;
	bra.uni 	BB4_1536;

BB4_901:
	setp.eq.s32	%p599, %r29, 19;
	@%p599 bra 	BB4_902;
	bra.uni 	BB4_871;

BB4_902:
	mov.u32 	%r4764, 64;
	prmt.b32 	%r4765, %r23, %r23, %r4764;
	mov.u32 	%r4766, 1040;
	prmt.b32 	%r4767, %r4765, %r23, %r4766;
	mov.u32 	%r4768, 16912;
	prmt.b32 	%r4769, %r4767, %r23, %r4768;
	or.b32  	%r10850, %r4769, %r10850;
	or.b32  	%r10851, %r4769, %r10851;
	or.b32  	%r10852, %r4769, %r10852;
	or.b32  	%r10853, %r4769, %r20;
	shl.b32 	%r4770, %r615, 8;
	or.b32  	%r4771, %r4770, %r615;
	shl.b32 	%r4772, %r615, 16;
	or.b32  	%r4773, %r4771, %r4772;
	or.b32  	%r10846, %r4773, %r10846;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_885:
	setp.eq.s32	%p611, %r29, 11;
	@%p611 bra 	BB4_886;
	bra.uni 	BB4_871;

BB4_886:
	mov.u32 	%r4824, 64;
	prmt.b32 	%r4825, %r23, %r23, %r4824;
	mov.u32 	%r4826, 1040;
	prmt.b32 	%r4827, %r4825, %r23, %r4826;
	mov.u32 	%r4828, 16912;
	prmt.b32 	%r4829, %r4827, %r23, %r4828;
	or.b32  	%r10850, %r4829, %r10850;
	or.b32  	%r10851, %r4829, %r10851;
	shl.b32 	%r4830, %r615, 8;
	or.b32  	%r4831, %r4830, %r615;
	shl.b32 	%r4832, %r615, 16;
	or.b32  	%r4833, %r4831, %r4832;
	or.b32  	%r10852, %r4833, %r10852;
	bra.uni 	BB4_871;

BB4_916:
	setp.eq.s32	%p588, %r29, 27;
	@%p588 bra 	BB4_917;
	bra.uni 	BB4_909;

BB4_917:
	mov.u32 	%r4704, 64;
	prmt.b32 	%r4705, %r23, %r23, %r4704;
	mov.u32 	%r4706, 1040;
	prmt.b32 	%r4707, %r4705, %r23, %r4706;
	mov.u32 	%r4708, 16912;
	prmt.b32 	%r4709, %r4707, %r23, %r4708;
	or.b32  	%r10850, %r4709, %r10850;
	or.b32  	%r10851, %r4709, %r10851;
	or.b32  	%r10852, %r4709, %r10852;
	or.b32  	%r10853, %r4709, %r20;
	or.b32  	%r10846, %r4709, %r10846;
	or.b32  	%r10847, %r4709, %r10847;
	shl.b32 	%r4710, %r615, 8;
	or.b32  	%r4711, %r4710, %r615;
	shl.b32 	%r4712, %r615, 16;
	or.b32  	%r4713, %r4711, %r4712;
	or.b32  	%r10848, %r4713, %r10848;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_877:
	setp.eq.s32	%p617, %r29, 7;
	@%p617 bra 	BB4_878;
	bra.uni 	BB4_871;

BB4_878:
	mov.u32 	%r4854, 64;
	prmt.b32 	%r4855, %r23, %r23, %r4854;
	mov.u32 	%r4856, 1040;
	prmt.b32 	%r4857, %r4855, %r23, %r4856;
	mov.u32 	%r4858, 16912;
	prmt.b32 	%r4859, %r4857, %r23, %r4858;
	or.b32  	%r10850, %r4859, %r10850;
	shl.b32 	%r4860, %r615, 8;
	or.b32  	%r4861, %r4860, %r615;
	shl.b32 	%r4862, %r615, 16;
	or.b32  	%r4863, %r4861, %r4862;
	or.b32  	%r10851, %r4863, %r10851;
	bra.uni 	BB4_871;

BB4_908:
	setp.eq.s32	%p594, %r29, 23;
	@%p594 bra 	BB4_929;
	bra.uni 	BB4_909;

BB4_929:
	mov.u32 	%r4734, 64;
	prmt.b32 	%r4735, %r23, %r23, %r4734;
	mov.u32 	%r4736, 1040;
	prmt.b32 	%r4737, %r4735, %r23, %r4736;
	mov.u32 	%r4738, 16912;
	prmt.b32 	%r4739, %r4737, %r23, %r4738;
	or.b32  	%r10850, %r4739, %r10850;
	or.b32  	%r10851, %r4739, %r10851;
	or.b32  	%r10852, %r4739, %r10852;
	or.b32  	%r10853, %r4739, %r20;
	or.b32  	%r10846, %r4739, %r10846;
	shl.b32 	%r4740, %r615, 8;
	or.b32  	%r4741, %r4740, %r615;
	shl.b32 	%r4742, %r615, 16;
	or.b32  	%r4743, %r4741, %r4742;
	or.b32  	%r10847, %r4743, %r10847;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_892:
	setp.eq.s32	%p606, %r29, 15;
	@%p606 bra 	BB4_893;
	bra.uni 	BB4_871;

BB4_893:
	mov.u32 	%r4794, 64;
	prmt.b32 	%r4795, %r23, %r23, %r4794;
	mov.u32 	%r4796, 1040;
	prmt.b32 	%r4797, %r4795, %r23, %r4796;
	mov.u32 	%r4798, 16912;
	prmt.b32 	%r4799, %r4797, %r23, %r4798;
	or.b32  	%r10850, %r4799, %r10850;
	or.b32  	%r10851, %r4799, %r10851;
	or.b32  	%r10852, %r4799, %r10852;
	shl.b32 	%r4800, %r615, 8;
	or.b32  	%r4801, %r4800, %r615;
	shl.b32 	%r4802, %r615, 16;
	or.b32  	%r4803, %r4801, %r4802;
	or.b32  	%r10853, %r4803, %r20;
	mov.u32 	%r10849, %r24;
	bra.uni 	BB4_1536;

BB4_871:
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10853, %r20;
	bra.uni 	BB4_1536;

BB4_923:
	setp.ne.s32	%p583, %r29, 31;
	@%p583 bra 	BB4_909;

	mov.u32 	%r4674, 64;
	prmt.b32 	%r4675, %r23, %r23, %r4674;
	mov.u32 	%r4676, 1040;
	prmt.b32 	%r4677, %r4675, %r23, %r4676;
	mov.u32 	%r4678, 16912;
	prmt.b32 	%r4679, %r4677, %r23, %r4678;
	or.b32  	%r10850, %r4679, %r10850;
	or.b32  	%r10851, %r4679, %r10851;
	or.b32  	%r10852, %r4679, %r10852;
	or.b32  	%r10853, %r4679, %r20;
	or.b32  	%r10846, %r4679, %r10846;
	or.b32  	%r10847, %r4679, %r10847;
	or.b32  	%r10848, %r4679, %r10848;
	shl.b32 	%r4680, %r615, 8;
	or.b32  	%r4681, %r4680, %r615;
	shl.b32 	%r4682, %r615, 16;
	or.b32  	%r4683, %r4681, %r4682;
	or.b32  	%r10849, %r4683, %r24;
	bra.uni 	BB4_1536;

BB4_909:
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10853, %r20;
	bra.uni 	BB4_1536;

BB4_607:
	setp.eq.s32	%p460, %r29, 1;
	@%p460 bra 	BB4_608;
	bra.uni 	BB4_10;

BB4_608:
	and.b32  	%r3894, %r23, -65281;
	shl.b32 	%r3895, %r10730, 8;
	or.b32  	%r10850, %r3895, %r3894;
	bra.uni 	BB4_612;

BB4_642:
	setp.eq.s32	%p437, %r29, 17;
	@%p437 bra 	BB4_643;
	bra.uni 	BB4_10;

BB4_643:
	and.b32  	%r3870, %r27, -65281;
	shl.b32 	%r3871, %r10730, 8;
	or.b32  	%r10846, %r3871, %r3870;
	bra.uni 	BB4_647;

BB4_624:
	setp.eq.s32	%p449, %r29, 9;
	@%p449 bra 	BB4_625;
	bra.uni 	BB4_10;

BB4_625:
	and.b32  	%r3882, %r21, -65281;
	shl.b32 	%r3883, %r10730, 8;
	or.b32  	%r10852, %r3883, %r3882;
	bra.uni 	BB4_629;

BB4_665:
	setp.eq.s32	%p426, %r29, 25;
	@%p426 bra 	BB4_666;
	bra.uni 	BB4_10;

BB4_666:
	and.b32  	%r3858, %r25, -65281;
	shl.b32 	%r3859, %r10730, 8;
	or.b32  	%r10848, %r3859, %r3858;
	bra.uni 	BB4_670;

BB4_615:
	setp.eq.s32	%p455, %r29, 5;
	@%p455 bra 	BB4_616;
	bra.uni 	BB4_10;

BB4_616:
	and.b32  	%r3888, %r22, -65281;
	shl.b32 	%r3889, %r10730, 8;
	or.b32  	%r10851, %r3889, %r3888;
	bra.uni 	BB4_620;

BB4_650:
	setp.eq.s32	%p432, %r29, 21;
	@%p432 bra 	BB4_651;
	bra.uni 	BB4_10;

BB4_651:
	and.b32  	%r3864, %r26, -65281;
	shl.b32 	%r3865, %r10730, 8;
	or.b32  	%r10847, %r3865, %r3864;
	bra.uni 	BB4_655;

BB4_632:
	setp.eq.s32	%p444, %r29, 13;
	@%p444 bra 	BB4_633;
	bra.uni 	BB4_10;

BB4_633:
	and.b32  	%r3876, %r20, -65281;
	shl.b32 	%r3877, %r10730, 8;
	or.b32  	%r10853, %r3877, %r3876;
	bra.uni 	BB4_637;

BB4_673:
	setp.eq.s32	%p421, %r29, 29;
	@%p421 bra 	BB4_674;
	bra.uni 	BB4_10;

BB4_674:
	and.b32  	%r3852, %r24, -65281;
	shl.b32 	%r3853, %r10730, 8;
	or.b32  	%r10849, %r3853, %r3852;
	bra.uni 	BB4_678;

BB4_610:
	setp.eq.s32	%p458, %r29, 3;
	@%p458 bra 	BB4_611;
	bra.uni 	BB4_10;

BB4_611:
	and.b32  	%r3891, %r23, 16777215;
	prmt.b32 	%r10850, %r10730, %r3891, 1620;
	bra.uni 	BB4_612;

BB4_645:
	setp.eq.s32	%p435, %r29, 19;
	@%p435 bra 	BB4_646;
	bra.uni 	BB4_10;

BB4_646:
	and.b32  	%r3867, %r27, 16777215;
	prmt.b32 	%r10846, %r10730, %r3867, 1620;

BB4_647:
	mov.u32 	%r10847, %r26;
	bra.uni 	BB4_656;

BB4_627:
	setp.eq.s32	%p447, %r29, 11;
	@%p447 bra 	BB4_628;
	bra.uni 	BB4_10;

BB4_628:
	and.b32  	%r3879, %r21, 16777215;
	prmt.b32 	%r10852, %r10730, %r3879, 1620;

BB4_629:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	bra.uni 	BB4_661;

BB4_668:
	setp.eq.s32	%p424, %r29, 27;
	@%p424 bra 	BB4_669;
	bra.uni 	BB4_10;

BB4_669:
	and.b32  	%r3855, %r25, 16777215;
	prmt.b32 	%r10848, %r10730, %r3855, 1620;

BB4_670:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	bra.uni 	BB4_657;

BB4_618:
	setp.eq.s32	%p453, %r29, 7;
	@%p453 bra 	BB4_619;
	bra.uni 	BB4_10;

BB4_619:
	and.b32  	%r3885, %r22, 16777215;
	prmt.b32 	%r10851, %r10730, %r3885, 1620;

BB4_620:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	bra.uni 	BB4_660;

BB4_653:
	setp.eq.s32	%p430, %r29, 23;
	@%p430 bra 	BB4_654;
	bra.uni 	BB4_10;

BB4_654:
	and.b32  	%r3861, %r26, 16777215;
	prmt.b32 	%r10847, %r10730, %r3861, 1620;

BB4_655:
	mov.u32 	%r10846, %r27;
	bra.uni 	BB4_656;

BB4_635:
	setp.eq.s32	%p442, %r29, 15;
	@%p442 bra 	BB4_636;
	bra.uni 	BB4_10;

BB4_636:
	and.b32  	%r3873, %r20, 16777215;
	prmt.b32 	%r10853, %r10730, %r3873, 1620;

BB4_637:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	bra.uni 	BB4_1535;

BB4_676:
	setp.ne.s32	%p419, %r29, 31;
	@%p419 bra 	BB4_10;

	and.b32  	%r3849, %r24, 16777215;
	prmt.b32 	%r10849, %r10730, %r3849, 1620;

BB4_678:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	bra.uni 	BB4_658;

BB4_135:
	setp.eq.s32	%p172, %r29, 1;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p172 bra 	BB4_136;
	bra.uni 	BB4_213;

BB4_136:
	mov.u32 	%r2940, 24;
	// inline asm
	shf.r.wrap.b32 %r10692, %r25, %r24, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r26, %r25, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r27, %r26, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r20, %r27, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10696, %r21, %r20, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10695, %r22, %r21, %r2940;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10694, %r23, %r22, %r2940;
	// inline asm
	mov.u32 	%r2938, 0;
	// inline asm
	shf.r.wrap.b32 %r10693, %r2938, %r23, %r2940;
	// inline asm
	bra.uni 	BB4_213;

BB4_167:
	setp.eq.s32	%p149, %r29, 17;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p149 bra 	BB4_168;
	bra.uni 	BB4_213;

BB4_168:
	mov.u32 	%r2596, 24;
	// inline asm
	shf.r.wrap.b32 %r10692, %r21, %r20, %r2596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r22, %r21, %r2596;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r23, %r22, %r2596;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10689, %r10693, %r23, %r2596;
	// inline asm
	bra.uni 	BB4_199;

BB4_707:
	setp.eq.s32	%p495, %r19, 10;
	@%p495 bra 	BB4_708;
	bra.uni 	BB4_10;

BB4_708:
	shl.b32 	%r4010, %r21, 8;
	and.b32  	%r4011, %r4010, 65280;
	bfe.u32 	%r4012, %r21, 8, 8;
	or.b32  	%r10852, %r4011, %r4012;
	mov.u32 	%r10854, 10;
	bra.uni 	BB4_769;

BB4_150:
	setp.eq.s32	%p161, %r29, 9;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p161 bra 	BB4_151;
	bra.uni 	BB4_213;

BB4_151:
	mov.u32 	%r2752, 24;
	// inline asm
	shf.r.wrap.b32 %r10692, %r27, %r26, %r2752;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r20, %r27, %r2752;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r21, %r20, %r2752;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r22, %r21, %r2752;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10696, %r23, %r22, %r2752;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10695, %r10693, %r23, %r2752;
	// inline asm
	mov.u32 	%r10694, %r10693;
	bra.uni 	BB4_213;

BB4_735:
	setp.eq.s32	%p474, %r19, 25;
	@%p474 bra 	BB4_736;
	bra.uni 	BB4_10;

BB4_736:
	or.b32  	%r3930, %r25, %r26;
	and.b32  	%r3931, %r26, 16777215;
	prmt.b32 	%r10847, %r25, %r3931, 1620;
	shr.u32 	%r10848, %r3930, 24;
	mov.u32 	%r10854, 25;
	mov.u32 	%r10846, %r27;
	bra.uni 	BB4_756;

BB4_182:
	setp.eq.s32	%p138, %r29, 25;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p138 bra 	BB4_183;
	bra.uni 	BB4_213;

BB4_183:
	mov.u32 	%r2472, 24;
	// inline asm
	shf.r.wrap.b32 %r10692, %r23, %r22, %r2472;
	// inline asm
	mov.u32 	%r10689, 0;
	// inline asm
	shf.r.wrap.b32 %r10691, %r10689, %r23, %r2472;
	// inline asm
	bra.uni 	BB4_187;

BB4_699:
	setp.eq.s32	%p501, %r19, 6;
	@%p501 bra 	BB4_700;
	bra.uni 	BB4_10;

BB4_700:
	shl.b32 	%r4031, %r22, 8;
	and.b32  	%r4032, %r4031, 65280;
	bfe.u32 	%r4033, %r22, 8, 8;
	or.b32  	%r10851, %r4032, %r4033;
	mov.u32 	%r10854, 6;
	bra.uni 	BB4_772;

BB4_142:
	setp.eq.s32	%p167, %r29, 5;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p167 bra 	BB4_143;
	bra.uni 	BB4_213;

BB4_143:
	mov.u32 	%r2842, 24;
	// inline asm
	shf.r.wrap.b32 %r10692, %r26, %r25, %r2842;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r27, %r26, %r2842;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r20, %r27, %r2842;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r21, %r20, %r2842;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10696, %r22, %r21, %r2842;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10695, %r23, %r22, %r2842;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10694, %r10693, %r23, %r2842;
	// inline asm
	bra.uni 	BB4_213;

BB4_727:
	setp.eq.s32	%p480, %r19, 21;
	@%p480 bra 	BB4_728;
	bra.uni 	BB4_10;

BB4_728:
	or.b32  	%r3951, %r26, %r27;
	and.b32  	%r3952, %r27, 16777215;
	prmt.b32 	%r10846, %r26, %r3952, 1620;
	shr.u32 	%r10847, %r3951, 24;
	mov.u32 	%r10854, 21;
	bra.uni 	BB4_755;

BB4_174:
	setp.eq.s32	%p144, %r29, 21;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p144 bra 	BB4_175;
	bra.uni 	BB4_213;

BB4_175:
	mov.u32 	%r2530, 24;
	// inline asm
	shf.r.wrap.b32 %r10692, %r22, %r21, %r2530;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r23, %r22, %r2530;
	// inline asm
	mov.u32 	%r10689, 0;
	// inline asm
	shf.r.wrap.b32 %r10690, %r10689, %r23, %r2530;
	// inline asm
	bra.uni 	BB4_188;

BB4_714:
	setp.eq.s32	%p490, %r19, 14;
	@%p490 bra 	BB4_715;
	bra.uni 	BB4_10;

BB4_715:
	shl.b32 	%r3989, %r20, 8;
	and.b32  	%r3990, %r3989, 65280;
	bfe.u32 	%r3991, %r20, 8, 8;
	or.b32  	%r10853, %r3990, %r3991;
	mov.u32 	%r10854, 14;
	bra.uni 	BB4_765;

BB4_157:
	setp.eq.s32	%p156, %r29, 13;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p156 bra 	BB4_158;
	bra.uni 	BB4_213;

BB4_158:
	mov.u32 	%r2670, 24;
	// inline asm
	shf.r.wrap.b32 %r10692, %r20, %r27, %r2670;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r21, %r20, %r2670;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r22, %r21, %r2670;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r23, %r22, %r2670;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10696, %r10693, %r23, %r2670;
	// inline asm
	bra.uni 	BB4_162;

BB4_742:
	setp.eq.s32	%p469, %r19, 29;
	@%p469 bra 	BB4_743;
	bra.uni 	BB4_10;

BB4_743:
	or.b32  	%r3909, %r24, %r25;
	and.b32  	%r3910, %r25, 16777215;
	prmt.b32 	%r10848, %r24, %r3910, 1620;
	shr.u32 	%r10849, %r3909, 24;
	mov.u32 	%r10854, 29;
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	bra.uni 	BB4_757;

BB4_191:
	setp.eq.s32	%p133, %r29, 29;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p133 bra 	BB4_192;
	bra.uni 	BB4_213;

BB4_192:
	mov.u32 	%r10689, 0;
	mov.u32 	%r2422, 24;
	// inline asm
	shf.r.wrap.b32 %r10692, %r10689, %r23, %r2422;
	// inline asm
	bra.uni 	BB4_196;

BB4_284:
	setp.eq.s32	%p221, %r29, 17;
	@%p221 bra 	BB4_285;
	bra.uni 	BB4_279;

BB4_285:
	mov.u32 	%r3194, 24;
	// inline asm
	shf.r.wrap.b32 %r27, %r21, %r20, %r3194;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r22, %r21, %r3194;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r23, %r22, %r3194;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r10713, %r10717, %r23, %r3194;
	// inline asm
	bra.uni 	BB4_319;

BB4_268:
	setp.eq.s32	%p233, %r29, 9;
	@%p233 bra 	BB4_269;
	bra.uni 	BB4_279;

BB4_269:
	mov.u32 	%r3350, 24;
	// inline asm
	shf.r.wrap.b32 %r3327, %r27, %r26, %r3350;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r20, %r27, %r3350;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r21, %r20, %r3350;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r22, %r21, %r3350;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3343, %r23, %r22, %r3350;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r10719, %r10717, %r23, %r3350;
	// inline asm
	mov.u32 	%r27, %r3327;
	mov.u32 	%r10718, %r10717;
	mov.u32 	%r23, %r3343;
	bra.uni 	BB4_333;

BB4_299:
	setp.eq.s32	%p210, %r29, 25;
	@%p210 bra 	BB4_300;
	bra.uni 	BB4_279;

BB4_300:
	mov.u32 	%r3070, 24;
	// inline asm
	shf.r.wrap.b32 %r27, %r23, %r22, %r3070;
	// inline asm
	mov.u32 	%r10713, 0;
	// inline asm
	shf.r.wrap.b32 %r10715, %r10713, %r23, %r3070;
	// inline asm
	bra.uni 	BB4_304;

BB4_260:
	setp.eq.s32	%p239, %r29, 5;
	@%p239 bra 	BB4_261;
	bra.uni 	BB4_279;

BB4_261:
	mov.u32 	%r3440, 24;
	// inline asm
	shf.r.wrap.b32 %r3413, %r26, %r25, %r3440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r27, %r26, %r3440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r20, %r27, %r3440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r21, %r20, %r3440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r3429, %r22, %r21, %r3440;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10719, %r23, %r22, %r3440;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r10718, %r10717, %r23, %r3440;
	// inline asm
	mov.u32 	%r27, %r3413;
	mov.u32 	%r23, %r3429;
	bra.uni 	BB4_333;

BB4_291:
	setp.eq.s32	%p216, %r29, 21;
	@%p216 bra 	BB4_292;
	bra.uni 	BB4_279;

BB4_292:
	mov.u32 	%r3128, 24;
	// inline asm
	shf.r.wrap.b32 %r27, %r22, %r21, %r3128;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r23, %r22, %r3128;
	// inline asm
	mov.u32 	%r10713, 0;
	// inline asm
	shf.r.wrap.b32 %r10714, %r10713, %r23, %r3128;
	// inline asm
	bra.uni 	BB4_332;

BB4_275:
	setp.eq.s32	%p228, %r29, 13;
	@%p228 bra 	BB4_276;
	bra.uni 	BB4_279;

BB4_276:
	mov.u32 	%r3268, 24;
	// inline asm
	shf.r.wrap.b32 %r27, %r20, %r27, %r3268;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10715, %r21, %r20, %r3268;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10714, %r22, %r21, %r3268;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10713, %r23, %r22, %r3268;
	// inline asm
	mov.u32 	%r10717, 0;
	// inline asm
	shf.r.wrap.b32 %r23, %r10717, %r23, %r3268;
	// inline asm
	bra.uni 	BB4_323;

BB4_307:
	setp.eq.s32	%p205, %r29, 29;
	@%p205 bra 	BB4_308;
	bra.uni 	BB4_279;

BB4_308:
	mov.u32 	%r10713, 0;
	mov.u32 	%r3020, 24;
	// inline asm
	shf.r.wrap.b32 %r27, %r10713, %r23, %r3020;
	// inline asm
	bra.uni 	BB4_331;

BB4_138:
	setp.eq.s32	%p170, %r29, 3;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p170 bra 	BB4_139;
	bra.uni 	BB4_213;

BB4_139:
	mov.u32 	%r2876, 8;
	// inline asm
	shf.r.wrap.b32 %r10692, %r25, %r24, %r2876;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r26, %r25, %r2876;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r27, %r26, %r2876;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r20, %r27, %r2876;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10696, %r21, %r20, %r2876;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10695, %r22, %r21, %r2876;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10694, %r23, %r22, %r2876;
	// inline asm
	mov.u32 	%r2874, 0;
	// inline asm
	shf.r.wrap.b32 %r10693, %r2874, %r23, %r2876;
	// inline asm
	bra.uni 	BB4_213;

BB4_170:
	setp.eq.s32	%p147, %r29, 19;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p147 bra 	BB4_171;
	bra.uni 	BB4_213;

BB4_171:
	mov.u32 	%r2556, 8;
	// inline asm
	shf.r.wrap.b32 %r10692, %r21, %r20, %r2556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r22, %r21, %r2556;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r23, %r22, %r2556;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10689, %r10693, %r23, %r2556;
	// inline asm

BB4_199:
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	bra.uni 	BB4_213;

BB4_710:
	setp.eq.s32	%p493, %r19, 12;
	@%p493 bra 	BB4_711;
	bra.uni 	BB4_10;

BB4_711:
	and.b32  	%r3996, %r21, 65535;
	shl.b32 	%r3997, %r21, 8;
	and.b32  	%r3998, %r3997, -16777216;
	or.b32  	%r3999, %r3998, %r3996;
	shr.u32 	%r4000, %r21, 8;
	and.b32  	%r4001, %r4000, 16711680;
	or.b32  	%r10852, %r3999, %r4001;
	mov.u32 	%r10854, 12;

BB4_769:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10853, %r20;
	bra.uni 	BB4_1536;

BB4_153:
	setp.eq.s32	%p159, %r29, 11;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p159 bra 	BB4_154;
	bra.uni 	BB4_213;

BB4_154:
	mov.u32 	%r2700, 8;
	// inline asm
	shf.r.wrap.b32 %r10692, %r27, %r26, %r2700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r20, %r27, %r2700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r21, %r20, %r2700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r22, %r21, %r2700;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10696, %r23, %r22, %r2700;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10695, %r10693, %r23, %r2700;
	// inline asm
	mov.u32 	%r10694, %r10693;
	bra.uni 	BB4_213;

BB4_738:
	setp.eq.s32	%p472, %r19, 27;
	@%p472 bra 	BB4_739;
	bra.uni 	BB4_10;

BB4_739:
	and.b32  	%r3919, %r25, 255;
	shl.b32 	%r3920, %r25, 8;
	and.b32  	%r3921, %r3920, 16711680;
	or.b32  	%r3922, %r3921, %r3919;
	shr.u32 	%r3923, %r25, 8;
	and.b32  	%r3924, %r3923, 65280;
	or.b32  	%r10848, %r3922, %r3924;
	mov.u32 	%r10854, 27;

BB4_751:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	bra.uni 	BB4_756;

BB4_185:
	setp.eq.s32	%p136, %r29, 27;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p136 bra 	BB4_186;
	bra.uni 	BB4_213;

BB4_186:
	mov.u32 	%r2444, 8;
	// inline asm
	shf.r.wrap.b32 %r10692, %r23, %r22, %r2444;
	// inline asm
	mov.u32 	%r10689, 0;
	// inline asm
	shf.r.wrap.b32 %r10691, %r10689, %r23, %r2444;
	// inline asm

BB4_187:
	mov.u32 	%r10690, %r10689;
	bra.uni 	BB4_188;

BB4_702:
	setp.eq.s32	%p499, %r19, 8;
	@%p499 bra 	BB4_703;
	bra.uni 	BB4_10;

BB4_703:
	and.b32  	%r4017, %r22, 65535;
	shl.b32 	%r4018, %r22, 8;
	and.b32  	%r4019, %r4018, -16777216;
	or.b32  	%r4020, %r4019, %r4017;
	shr.u32 	%r4021, %r22, 8;
	and.b32  	%r4022, %r4021, 16711680;
	or.b32  	%r10851, %r4020, %r4022;
	mov.u32 	%r10854, 8;

BB4_772:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	bra.uni 	BB4_759;

BB4_145:
	setp.eq.s32	%p165, %r29, 7;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p165 bra 	BB4_146;
	bra.uni 	BB4_213;

BB4_146:
	mov.u32 	%r2784, 8;
	// inline asm
	shf.r.wrap.b32 %r10692, %r26, %r25, %r2784;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r27, %r26, %r2784;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r20, %r27, %r2784;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r21, %r20, %r2784;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10696, %r22, %r21, %r2784;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10695, %r23, %r22, %r2784;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10694, %r10693, %r23, %r2784;
	// inline asm
	bra.uni 	BB4_213;

BB4_730:
	setp.eq.s32	%p478, %r19, 23;
	@%p478 bra 	BB4_731;
	bra.uni 	BB4_10;

BB4_731:
	and.b32  	%r3940, %r26, 255;
	shl.b32 	%r3941, %r26, 8;
	and.b32  	%r3942, %r3941, 16711680;
	or.b32  	%r3943, %r3942, %r3940;
	shr.u32 	%r3944, %r26, 8;
	and.b32  	%r3945, %r3944, 65280;
	or.b32  	%r10847, %r3943, %r3945;
	mov.u32 	%r10854, 23;

BB4_754:
	mov.u32 	%r10846, %r27;
	bra.uni 	BB4_755;

BB4_177:
	setp.eq.s32	%p142, %r29, 23;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p142 bra 	BB4_178;
	bra.uni 	BB4_213;

BB4_178:
	mov.u32 	%r2496, 8;
	// inline asm
	shf.r.wrap.b32 %r10692, %r22, %r21, %r2496;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r23, %r22, %r2496;
	// inline asm
	mov.u32 	%r10689, 0;
	// inline asm
	shf.r.wrap.b32 %r10690, %r10689, %r23, %r2496;
	// inline asm
	bra.uni 	BB4_188;

BB4_717:
	setp.eq.s32	%p488, %r19, 16;
	@%p488 bra 	BB4_718;
	bra.uni 	BB4_10;

BB4_718:
	and.b32  	%r3975, %r20, 65535;
	shl.b32 	%r3976, %r20, 8;
	and.b32  	%r3977, %r3976, -16777216;
	or.b32  	%r3978, %r3977, %r3975;
	shr.u32 	%r3979, %r20, 8;
	and.b32  	%r3980, %r3979, 16711680;
	or.b32  	%r10853, %r3978, %r3980;
	mov.u32 	%r10854, 16;

BB4_765:
	mov.u32 	%r10846, %r27;

BB4_766:
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	mov.u32 	%r10849, %r24;
	mov.u32 	%r10850, %r23;
	mov.u32 	%r10851, %r22;
	mov.u32 	%r10852, %r21;
	bra.uni 	BB4_1536;

BB4_160:
	setp.eq.s32	%p154, %r29, 15;
	mov.u32 	%r10689, %r10693;
	mov.u32 	%r10690, %r10693;
	mov.u32 	%r10691, %r10693;
	mov.u32 	%r10692, %r10693;
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	mov.u32 	%r10696, %r10693;
	@%p154 bra 	BB4_161;
	bra.uni 	BB4_213;

BB4_161:
	mov.u32 	%r2624, 8;
	// inline asm
	shf.r.wrap.b32 %r10692, %r20, %r27, %r2624;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10691, %r21, %r20, %r2624;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10690, %r22, %r21, %r2624;
	// inline asm
	// inline asm
	shf.r.wrap.b32 %r10689, %r23, %r22, %r2624;
	// inline asm
	mov.u32 	%r10693, 0;
	// inline asm
	shf.r.wrap.b32 %r10696, %r10693, %r23, %r2624;
	// inline asm

BB4_162:
	mov.u32 	%r10694, %r10693;
	mov.u32 	%r10695, %r10693;
	bra.uni 	BB4_213;

BB4_745:
	setp.ne.s32	%p467, %r19, 31;
	@%p467 bra 	BB4_10;

	and.b32  	%r3898, %r24, 255;
	shl.b32 	%r3899, %r24, 8;
	and.b32  	%r3900, %r3899, 16711680;
	or.b32  	%r3901, %r3900, %r3898;
	shr.u32 	%r3902, %r24, 8;
	and.b32  	%r3903, %r3902, 65280;
	or.b32  	%r10849, %r3901, %r3903;
	mov.u32 	%r10854, 31;

BB4_748:
	mov.u32 	%r10846, %r27;
	mov.u32 	%r10847, %r26;
	mov.u32 	%r10848, %r25;
	bra.uni 	BB4_757;

BB4_10:
	mov.u32 	%r10846, %r27;

BB4_11:
	mov.u32 	%r10847, %r26;

BB4_12:
	mov.u32 	%r10848, %r25;

BB4_13:
	mov.u32 	%r10849, %r24;

BB4_14:
	mov.u32 	%r10850, %r23;

BB4_15:
	mov.u32 	%r10851, %r22;

BB4_16:
	mov.u32 	%r10852, %r21;

BB4_17:
	mov.u32 	%r10853, %r20;

BB4_1535:
	mov.u32 	%r10854, %r19;

BB4_1536:
	add.s32 	%r10679, %r10679, 1;
	shl.b64 	%rd163, %rd82, 7;
	add.s64 	%rd164, %rd87, %rd163;
	mul.wide.u32 	%rd165, %r10679, 4;
	add.s64 	%rd166, %rd164, %rd165;
	ld.global.u32 	%r10678, [%rd166];
	setp.ne.s32	%p1030, %r10678, 0;
	@%p1030 bra 	BB4_4;

BB4_1537:
	ld.const.u64 	%rd2786, [k_sha512+608];
	ld.const.u64 	%rd2785, [k_sha512+600];
	ld.const.u64 	%rd2784, [k_sha512+592];
	ld.const.u64 	%rd2783, [k_sha512+584];
	ld.const.u64 	%rd2782, [k_sha512+576];
	ld.const.u64 	%rd2781, [k_sha512+568];
	ld.const.u64 	%rd2780, [k_sha512+560];
	ld.const.u64 	%rd2779, [k_sha512+552];
	ld.const.u64 	%rd2778, [k_sha512+544];
	ld.const.u64 	%rd2777, [k_sha512+536];
	ld.const.u64 	%rd2776, [k_sha512+528];
	ld.const.u64 	%rd2775, [k_sha512+520];
	ld.const.u64 	%rd2774, [k_sha512+512];
	ld.const.u64 	%rd2773, [k_sha512+504];
	ld.const.u64 	%rd2772, [k_sha512+496];
	ld.const.u64 	%rd2771, [k_sha512+488];
	ld.const.u64 	%rd2770, [k_sha512+480];
	ld.const.u64 	%rd2769, [k_sha512+472];
	ld.const.u64 	%rd2768, [k_sha512+464];
	ld.const.u64 	%rd2767, [k_sha512+456];
	ld.const.u64 	%rd2766, [k_sha512+448];
	ld.const.u64 	%rd2765, [k_sha512+440];
	ld.const.u64 	%rd2764, [k_sha512+432];
	ld.const.u64 	%rd2763, [k_sha512+424];
	ld.const.u64 	%rd2762, [k_sha512+416];
	ld.const.u64 	%rd2761, [k_sha512+408];
	ld.const.u64 	%rd2760, [k_sha512+400];
	ld.const.u64 	%rd2759, [k_sha512+392];
	ld.const.u64 	%rd2758, [k_sha512+384];
	ld.const.u64 	%rd2757, [k_sha512+376];
	ld.const.u64 	%rd2756, [k_sha512+368];
	ld.const.u64 	%rd2755, [k_sha512+360];
	ld.const.u64 	%rd2754, [k_sha512+352];
	ld.const.u64 	%rd2753, [k_sha512+344];
	ld.const.u64 	%rd2752, [k_sha512+336];
	ld.const.u64 	%rd2751, [k_sha512+328];
	ld.const.u64 	%rd2750, [k_sha512+320];
	ld.const.u64 	%rd2749, [k_sha512+312];
	ld.const.u64 	%rd2748, [k_sha512+304];
	ld.const.u64 	%rd2747, [k_sha512+296];
	ld.const.u64 	%rd2746, [k_sha512+288];
	ld.const.u64 	%rd2745, [k_sha512+280];
	ld.const.u64 	%rd2744, [k_sha512+272];
	ld.const.u64 	%rd2743, [k_sha512+264];
	ld.const.u64 	%rd2742, [k_sha512+256];
	ld.const.u64 	%rd2741, [k_sha512+248];
	ld.const.u64 	%rd2740, [k_sha512+240];
	ld.const.u64 	%rd2739, [k_sha512+232];
	ld.const.u64 	%rd2738, [k_sha512+224];
	ld.const.u64 	%rd2737, [k_sha512+216];
	ld.const.u64 	%rd2736, [k_sha512+208];
	ld.const.u64 	%rd2735, [k_sha512+200];
	ld.const.u64 	%rd2734, [k_sha512+192];
	ld.const.u64 	%rd2733, [k_sha512+184];
	ld.const.u64 	%rd2732, [k_sha512+176];
	ld.const.u64 	%rd2731, [k_sha512+168];
	ld.const.u64 	%rd2730, [k_sha512+160];
	ld.const.u64 	%rd2729, [k_sha512+152];
	ld.const.u64 	%rd2728, [k_sha512+144];
	ld.const.u64 	%rd2727, [k_sha512+136];
	ld.const.u64 	%rd2726, [k_sha512+128];
	ld.const.u64 	%rd2725, [k_sha512+120];
	ld.const.u64 	%rd2724, [k_sha512+112];
	ld.const.u64 	%rd2723, [k_sha512+104];
	ld.const.u64 	%rd2722, [k_sha512+96];
	ld.const.u64 	%rd2721, [k_sha512+88];
	ld.const.u64 	%rd2720, [k_sha512+80];
	ld.const.u64 	%rd2719, [k_sha512+72];
	ld.const.u64 	%rd2718, [k_sha512+64];
	ld.const.u64 	%rd2717, [k_sha512+56];
	ld.const.u64 	%rd2716, [k_sha512+48];
	ld.const.u64 	%rd2715, [k_sha512+40];
	ld.const.u64 	%rd2714, [k_sha512+32];
	ld.const.u64 	%rd2713, [k_sha512+24];
	ld.const.u64 	%rd2712, [k_sha512+16];
	ld.const.u64 	%rd2711, [k_sha512+8];
	ld.const.u64 	%rd2710, [k_sha512];
	and.b32  	%r8788, %r10854, 3;
	shl.b32 	%r8789, %r8788, 3;
	mov.u32 	%r8790, 128;
	shl.b32 	%r8791, %r8790, %r8789;
	setp.lt.u32	%p1031, %r10854, 4;
	selp.b32	%r8792, %r8791, 0, %p1031;
	or.b32  	%r8793, %r8792, %r10850;
	and.b32  	%r8794, %r10854, -4;
	setp.eq.s32	%p1032, %r8794, 4;
	selp.b32	%r8795, %r8791, 0, %p1032;
	or.b32  	%r8796, %r8795, %r10851;
	setp.eq.s32	%p1033, %r8794, 8;
	selp.b32	%r8797, %r8791, 0, %p1033;
	or.b32  	%r8798, %r8797, %r10852;
	setp.eq.s32	%p1034, %r8794, 12;
	selp.b32	%r8799, %r8791, 0, %p1034;
	or.b32  	%r8800, %r8799, %r10853;
	setp.eq.s32	%p1035, %r8794, 16;
	selp.b32	%r8801, %r8791, 0, %p1035;
	or.b32  	%r8802, %r8801, %r10846;
	setp.eq.s32	%p1036, %r8794, 20;
	selp.b32	%r8803, %r8791, 0, %p1036;
	or.b32  	%r8804, %r8803, %r10847;
	setp.eq.s32	%p1037, %r8794, 24;
	selp.b32	%r8805, %r8791, 0, %p1037;
	or.b32  	%r8806, %r8805, %r10848;
	setp.gt.u32	%p1038, %r10854, 27;
	selp.b32	%r8807, %r8791, 0, %p1038;
	or.b32  	%r8808, %r8807, %r10849;
	shr.u32 	%r8809, %r8793, 24;
	shr.u32 	%r8810, %r8793, 8;
	and.b32  	%r8811, %r8810, 65280;
	or.b32  	%r8812, %r8811, %r8809;
	shl.b32 	%r8813, %r8793, 24;
	shl.b32 	%r8814, %r8793, 8;
	and.b32  	%r8815, %r8814, 16711680;
	or.b32  	%r8816, %r8813, %r8815;
	or.b32  	%r8817, %r8816, %r8812;
	shr.u32 	%r8818, %r8796, 24;
	shr.u32 	%r8819, %r8796, 8;
	and.b32  	%r8820, %r8819, 65280;
	or.b32  	%r8821, %r8820, %r8818;
	shl.b32 	%r8822, %r8796, 24;
	shl.b32 	%r8823, %r8796, 8;
	and.b32  	%r8824, %r8823, 16711680;
	or.b32  	%r8825, %r8822, %r8824;
	or.b32  	%r8826, %r8825, %r8821;
	mov.b64	%rd167, {%r8826, %r8817};
	shr.u32 	%r8827, %r8798, 24;
	shr.u32 	%r8828, %r8798, 8;
	and.b32  	%r8829, %r8828, 65280;
	or.b32  	%r8830, %r8829, %r8827;
	shl.b32 	%r8831, %r8798, 24;
	shl.b32 	%r8832, %r8798, 8;
	and.b32  	%r8833, %r8832, 16711680;
	or.b32  	%r8834, %r8831, %r8833;
	or.b32  	%r8835, %r8834, %r8830;
	shr.u32 	%r8836, %r8800, 24;
	shr.u32 	%r8837, %r8800, 8;
	and.b32  	%r8838, %r8837, 65280;
	or.b32  	%r8839, %r8838, %r8836;
	shl.b32 	%r8840, %r8800, 24;
	shl.b32 	%r8841, %r8800, 8;
	and.b32  	%r8842, %r8841, 16711680;
	or.b32  	%r8843, %r8840, %r8842;
	or.b32  	%r8844, %r8843, %r8839;
	mov.b64	%rd168, {%r8844, %r8835};
	shr.u32 	%r8845, %r8802, 24;
	shr.u32 	%r8846, %r8802, 8;
	and.b32  	%r8847, %r8846, 65280;
	or.b32  	%r8848, %r8847, %r8845;
	shl.b32 	%r8849, %r8802, 24;
	shl.b32 	%r8850, %r8802, 8;
	and.b32  	%r8851, %r8850, 16711680;
	or.b32  	%r8852, %r8849, %r8851;
	or.b32  	%r8853, %r8852, %r8848;
	shr.u32 	%r8854, %r8804, 24;
	shr.u32 	%r8855, %r8804, 8;
	and.b32  	%r8856, %r8855, 65280;
	or.b32  	%r8857, %r8856, %r8854;
	shl.b32 	%r8858, %r8804, 24;
	shl.b32 	%r8859, %r8804, 8;
	and.b32  	%r8860, %r8859, 16711680;
	or.b32  	%r8861, %r8858, %r8860;
	or.b32  	%r8862, %r8861, %r8857;
	mov.b64	%rd169, {%r8862, %r8853};
	shr.u32 	%r8863, %r8806, 24;
	shr.u32 	%r8864, %r8806, 8;
	and.b32  	%r8865, %r8864, 65280;
	or.b32  	%r8866, %r8865, %r8863;
	shl.b32 	%r8867, %r8806, 24;
	shl.b32 	%r8868, %r8806, 8;
	and.b32  	%r8869, %r8868, 16711680;
	or.b32  	%r8870, %r8867, %r8869;
	or.b32  	%r8871, %r8870, %r8866;
	shr.u32 	%r8872, %r8808, 24;
	shr.u32 	%r8873, %r8808, 8;
	and.b32  	%r8874, %r8873, 65280;
	or.b32  	%r8875, %r8874, %r8872;
	shl.b32 	%r8876, %r8808, 24;
	shl.b32 	%r8877, %r8808, 8;
	and.b32  	%r8878, %r8877, 16711680;
	or.b32  	%r8879, %r8876, %r8878;
	or.b32  	%r8880, %r8879, %r8875;
	mov.b64	%rd170, {%r8880, %r8871};
	shl.b32 	%r8881, %r10854, 3;
	mov.u32 	%r8882, 0;
	mov.b64	%rd171, {%r8881, %r8882};
	add.s64 	%rd172, %rd167, %rd2710;
	add.s64 	%rd173, %rd172, %rd2;
	add.s64 	%rd174, %rd173, %rd3;
	add.s64 	%rd175, %rd173, 2357225248857953701;
	add.s64 	%rd176, %rd174, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8883,%dummy}, %rd175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8884}, %rd175;
	}
	shf.r.wrap.b32 	%r8885, %r8884, %r8883, 14;
	shf.r.wrap.b32 	%r8886, %r8883, %r8884, 14;
	mov.b64 	%rd177, {%r8886, %r8885};
	shf.r.wrap.b32 	%r8887, %r8884, %r8883, 18;
	shf.r.wrap.b32 	%r8888, %r8883, %r8884, 18;
	mov.b64 	%rd178, {%r8888, %r8887};
	xor.b64  	%rd179, %rd178, %rd177;
	shf.l.wrap.b32 	%r8889, %r8883, %r8884, 23;
	shf.l.wrap.b32 	%r8890, %r8884, %r8883, 23;
	mov.b64 	%rd180, {%r8890, %r8889};
	xor.b64  	%rd181, %rd179, %rd180;
	and.b64  	%rd182, %rd175, -3887949035690463538;
	xor.b64  	%rd183, %rd182, -7276294671716946913;
	add.s64 	%rd184, %rd168, %rd2711;
	add.s64 	%rd185, %rd184, %rd183;
	add.s64 	%rd186, %rd185, %rd181;
	xor.b64  	%rd187, %rd176, -4942790177534073029;
	xor.b64  	%rd188, %rd176, 7640891576956012808;
	and.b64  	%rd189, %rd188, %rd187;
	xor.b64  	%rd190, %rd189, %rd176;
	add.s64 	%rd191, %rd186, %rd190;
	add.s64 	%rd192, %rd186, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8891,%dummy}, %rd176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8892}, %rd176;
	}
	shf.r.wrap.b32 	%r8893, %r8892, %r8891, 28;
	shf.r.wrap.b32 	%r8894, %r8891, %r8892, 28;
	mov.b64 	%rd193, {%r8894, %r8893};
	shf.l.wrap.b32 	%r8895, %r8891, %r8892, 30;
	shf.l.wrap.b32 	%r8896, %r8892, %r8891, 30;
	mov.b64 	%rd194, {%r8896, %r8895};
	xor.b64  	%rd195, %rd194, %rd193;
	shf.l.wrap.b32 	%r8897, %r8891, %r8892, 25;
	shf.l.wrap.b32 	%r8898, %r8892, %r8891, 25;
	mov.b64 	%rd196, {%r8898, %r8897};
	xor.b64  	%rd197, %rd195, %rd196;
	add.s64 	%rd198, %rd191, %rd197;
	add.s64 	%rd199, %rd198, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8899,%dummy}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8900}, %rd192;
	}
	shf.r.wrap.b32 	%r8901, %r8900, %r8899, 14;
	shf.r.wrap.b32 	%r8902, %r8899, %r8900, 14;
	mov.b64 	%rd200, {%r8902, %r8901};
	shf.r.wrap.b32 	%r8903, %r8900, %r8899, 18;
	shf.r.wrap.b32 	%r8904, %r8899, %r8900, 18;
	mov.b64 	%rd201, {%r8904, %r8903};
	xor.b64  	%rd202, %rd201, %rd200;
	shf.l.wrap.b32 	%r8905, %r8899, %r8900, 23;
	shf.l.wrap.b32 	%r8906, %r8900, %r8899, 23;
	mov.b64 	%rd203, {%r8906, %r8905};
	xor.b64  	%rd204, %rd202, %rd203;
	xor.b64  	%rd205, %rd175, 5840696475078001361;
	and.b64  	%rd206, %rd192, %rd205;
	xor.b64  	%rd207, %rd206, 5840696475078001361;
	add.s64 	%rd208, %rd169, %rd2712;
	add.s64 	%rd209, %rd208, %rd207;
	add.s64 	%rd210, %rd209, %rd204;
	xor.b64  	%rd211, %rd199, 7640891576956012808;
	xor.b64  	%rd212, %rd199, %rd176;
	and.b64  	%rd213, %rd212, %rd211;
	xor.b64  	%rd214, %rd213, %rd199;
	add.s64 	%rd215, %rd210, %rd214;
	add.s64 	%rd216, %rd210, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8907,%dummy}, %rd199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8908}, %rd199;
	}
	shf.r.wrap.b32 	%r8909, %r8908, %r8907, 28;
	shf.r.wrap.b32 	%r8910, %r8907, %r8908, 28;
	mov.b64 	%rd217, {%r8910, %r8909};
	shf.l.wrap.b32 	%r8911, %r8907, %r8908, 30;
	shf.l.wrap.b32 	%r8912, %r8908, %r8907, 30;
	mov.b64 	%rd218, {%r8912, %r8911};
	xor.b64  	%rd219, %rd218, %rd217;
	shf.l.wrap.b32 	%r8913, %r8907, %r8908, 25;
	shf.l.wrap.b32 	%r8914, %r8908, %r8907, 25;
	mov.b64 	%rd220, {%r8914, %r8913};
	xor.b64  	%rd221, %rd219, %rd220;
	add.s64 	%rd222, %rd215, %rd221;
	add.s64 	%rd223, %rd222, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8915,%dummy}, %rd216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8916}, %rd216;
	}
	shf.r.wrap.b32 	%r8917, %r8916, %r8915, 14;
	shf.r.wrap.b32 	%r8918, %r8915, %r8916, 14;
	mov.b64 	%rd224, {%r8918, %r8917};
	shf.r.wrap.b32 	%r8919, %r8916, %r8915, 18;
	shf.r.wrap.b32 	%r8920, %r8915, %r8916, 18;
	mov.b64 	%rd225, {%r8920, %r8919};
	xor.b64  	%rd226, %rd225, %rd224;
	shf.l.wrap.b32 	%r8921, %r8915, %r8916, 23;
	shf.l.wrap.b32 	%r8922, %r8916, %r8915, 23;
	mov.b64 	%rd227, {%r8922, %r8921};
	xor.b64  	%rd228, %rd226, %rd227;
	xor.b64  	%rd229, %rd192, %rd175;
	and.b64  	%rd230, %rd216, %rd229;
	xor.b64  	%rd231, %rd230, %rd175;
	add.s64 	%rd232, %rd170, %rd2713;
	add.s64 	%rd233, %rd232, %rd231;
	add.s64 	%rd234, %rd233, %rd228;
	xor.b64  	%rd235, %rd223, %rd176;
	xor.b64  	%rd236, %rd223, %rd199;
	and.b64  	%rd237, %rd236, %rd235;
	xor.b64  	%rd238, %rd237, %rd223;
	add.s64 	%rd239, %rd234, %rd238;
	add.s64 	%rd240, %rd234, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8923,%dummy}, %rd223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8924}, %rd223;
	}
	shf.r.wrap.b32 	%r8925, %r8924, %r8923, 28;
	shf.r.wrap.b32 	%r8926, %r8923, %r8924, 28;
	mov.b64 	%rd241, {%r8926, %r8925};
	shf.l.wrap.b32 	%r8927, %r8923, %r8924, 30;
	shf.l.wrap.b32 	%r8928, %r8924, %r8923, 30;
	mov.b64 	%rd242, {%r8928, %r8927};
	xor.b64  	%rd243, %rd242, %rd241;
	shf.l.wrap.b32 	%r8929, %r8923, %r8924, 25;
	shf.l.wrap.b32 	%r8930, %r8924, %r8923, 25;
	mov.b64 	%rd244, {%r8930, %r8929};
	xor.b64  	%rd245, %rd243, %rd244;
	add.s64 	%rd246, %rd239, %rd245;
	add.s64 	%rd247, %rd246, 5840696475078001361;
	add.s64 	%rd248, %rd2714, %rd175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8931,%dummy}, %rd240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8932}, %rd240;
	}
	shf.r.wrap.b32 	%r8933, %r8932, %r8931, 14;
	shf.r.wrap.b32 	%r8934, %r8931, %r8932, 14;
	mov.b64 	%rd249, {%r8934, %r8933};
	shf.r.wrap.b32 	%r8935, %r8932, %r8931, 18;
	shf.r.wrap.b32 	%r8936, %r8931, %r8932, 18;
	mov.b64 	%rd250, {%r8936, %r8935};
	xor.b64  	%rd251, %rd250, %rd249;
	shf.l.wrap.b32 	%r8937, %r8931, %r8932, 23;
	shf.l.wrap.b32 	%r8938, %r8932, %r8931, 23;
	mov.b64 	%rd252, {%r8938, %r8937};
	xor.b64  	%rd253, %rd251, %rd252;
	xor.b64  	%rd254, %rd216, %rd192;
	and.b64  	%rd255, %rd240, %rd254;
	xor.b64  	%rd256, %rd255, %rd192;
	add.s64 	%rd257, %rd248, %rd256;
	add.s64 	%rd258, %rd257, %rd253;
	add.s64 	%rd259, %rd258, %rd176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8939,%dummy}, %rd247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8940}, %rd247;
	}
	shf.r.wrap.b32 	%r8941, %r8940, %r8939, 28;
	shf.r.wrap.b32 	%r8942, %r8939, %r8940, 28;
	mov.b64 	%rd260, {%r8942, %r8941};
	shf.l.wrap.b32 	%r8943, %r8939, %r8940, 30;
	shf.l.wrap.b32 	%r8944, %r8940, %r8939, 30;
	mov.b64 	%rd261, {%r8944, %r8943};
	xor.b64  	%rd262, %rd261, %rd260;
	shf.l.wrap.b32 	%r8945, %r8939, %r8940, 25;
	shf.l.wrap.b32 	%r8946, %r8940, %r8939, 25;
	mov.b64 	%rd263, {%r8946, %r8945};
	xor.b64  	%rd264, %rd262, %rd263;
	xor.b64  	%rd265, %rd247, %rd199;
	xor.b64  	%rd266, %rd247, %rd223;
	and.b64  	%rd267, %rd266, %rd265;
	xor.b64  	%rd268, %rd267, %rd247;
	add.s64 	%rd269, %rd258, %rd268;
	add.s64 	%rd270, %rd269, %rd264;
	add.s64 	%rd271, %rd2715, %rd192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8947,%dummy}, %rd259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8948}, %rd259;
	}
	shf.r.wrap.b32 	%r8949, %r8948, %r8947, 14;
	shf.r.wrap.b32 	%r8950, %r8947, %r8948, 14;
	mov.b64 	%rd272, {%r8950, %r8949};
	shf.r.wrap.b32 	%r8951, %r8948, %r8947, 18;
	shf.r.wrap.b32 	%r8952, %r8947, %r8948, 18;
	mov.b64 	%rd273, {%r8952, %r8951};
	xor.b64  	%rd274, %rd273, %rd272;
	shf.l.wrap.b32 	%r8953, %r8947, %r8948, 23;
	shf.l.wrap.b32 	%r8954, %r8948, %r8947, 23;
	mov.b64 	%rd275, {%r8954, %r8953};
	xor.b64  	%rd276, %rd274, %rd275;
	xor.b64  	%rd277, %rd240, %rd216;
	and.b64  	%rd278, %rd259, %rd277;
	xor.b64  	%rd279, %rd278, %rd216;
	add.s64 	%rd280, %rd271, %rd279;
	add.s64 	%rd281, %rd280, %rd276;
	add.s64 	%rd282, %rd281, %rd199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8955,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8956}, %rd270;
	}
	shf.r.wrap.b32 	%r8957, %r8956, %r8955, 28;
	shf.r.wrap.b32 	%r8958, %r8955, %r8956, 28;
	mov.b64 	%rd283, {%r8958, %r8957};
	shf.l.wrap.b32 	%r8959, %r8955, %r8956, 30;
	shf.l.wrap.b32 	%r8960, %r8956, %r8955, 30;
	mov.b64 	%rd284, {%r8960, %r8959};
	xor.b64  	%rd285, %rd284, %rd283;
	shf.l.wrap.b32 	%r8961, %r8955, %r8956, 25;
	shf.l.wrap.b32 	%r8962, %r8956, %r8955, 25;
	mov.b64 	%rd286, {%r8962, %r8961};
	xor.b64  	%rd287, %rd285, %rd286;
	xor.b64  	%rd288, %rd270, %rd223;
	xor.b64  	%rd289, %rd270, %rd247;
	and.b64  	%rd290, %rd289, %rd288;
	xor.b64  	%rd291, %rd290, %rd270;
	add.s64 	%rd292, %rd281, %rd291;
	add.s64 	%rd293, %rd292, %rd287;
	add.s64 	%rd294, %rd2716, %rd216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8963,%dummy}, %rd282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8964}, %rd282;
	}
	shf.r.wrap.b32 	%r8965, %r8964, %r8963, 14;
	shf.r.wrap.b32 	%r8966, %r8963, %r8964, 14;
	mov.b64 	%rd295, {%r8966, %r8965};
	shf.r.wrap.b32 	%r8967, %r8964, %r8963, 18;
	shf.r.wrap.b32 	%r8968, %r8963, %r8964, 18;
	mov.b64 	%rd296, {%r8968, %r8967};
	xor.b64  	%rd297, %rd296, %rd295;
	shf.l.wrap.b32 	%r8969, %r8963, %r8964, 23;
	shf.l.wrap.b32 	%r8970, %r8964, %r8963, 23;
	mov.b64 	%rd298, {%r8970, %r8969};
	xor.b64  	%rd299, %rd297, %rd298;
	xor.b64  	%rd300, %rd259, %rd240;
	and.b64  	%rd301, %rd282, %rd300;
	xor.b64  	%rd302, %rd301, %rd240;
	add.s64 	%rd303, %rd294, %rd302;
	add.s64 	%rd304, %rd303, %rd299;
	add.s64 	%rd305, %rd304, %rd223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8971,%dummy}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8972}, %rd293;
	}
	shf.r.wrap.b32 	%r8973, %r8972, %r8971, 28;
	shf.r.wrap.b32 	%r8974, %r8971, %r8972, 28;
	mov.b64 	%rd306, {%r8974, %r8973};
	shf.l.wrap.b32 	%r8975, %r8971, %r8972, 30;
	shf.l.wrap.b32 	%r8976, %r8972, %r8971, 30;
	mov.b64 	%rd307, {%r8976, %r8975};
	xor.b64  	%rd308, %rd307, %rd306;
	shf.l.wrap.b32 	%r8977, %r8971, %r8972, 25;
	shf.l.wrap.b32 	%r8978, %r8972, %r8971, 25;
	mov.b64 	%rd309, {%r8978, %r8977};
	xor.b64  	%rd310, %rd308, %rd309;
	xor.b64  	%rd311, %rd293, %rd247;
	xor.b64  	%rd312, %rd293, %rd270;
	and.b64  	%rd313, %rd312, %rd311;
	xor.b64  	%rd314, %rd313, %rd293;
	add.s64 	%rd315, %rd304, %rd314;
	add.s64 	%rd316, %rd315, %rd310;
	add.s64 	%rd317, %rd2717, %rd240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8979,%dummy}, %rd305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8980}, %rd305;
	}
	shf.r.wrap.b32 	%r8981, %r8980, %r8979, 14;
	shf.r.wrap.b32 	%r8982, %r8979, %r8980, 14;
	mov.b64 	%rd318, {%r8982, %r8981};
	shf.r.wrap.b32 	%r8983, %r8980, %r8979, 18;
	shf.r.wrap.b32 	%r8984, %r8979, %r8980, 18;
	mov.b64 	%rd319, {%r8984, %r8983};
	xor.b64  	%rd320, %rd319, %rd318;
	shf.l.wrap.b32 	%r8985, %r8979, %r8980, 23;
	shf.l.wrap.b32 	%r8986, %r8980, %r8979, 23;
	mov.b64 	%rd321, {%r8986, %r8985};
	xor.b64  	%rd322, %rd320, %rd321;
	xor.b64  	%rd323, %rd282, %rd259;
	and.b64  	%rd324, %rd305, %rd323;
	xor.b64  	%rd325, %rd324, %rd259;
	add.s64 	%rd326, %rd317, %rd325;
	add.s64 	%rd327, %rd326, %rd322;
	add.s64 	%rd328, %rd327, %rd247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8987,%dummy}, %rd316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8988}, %rd316;
	}
	shf.r.wrap.b32 	%r8989, %r8988, %r8987, 28;
	shf.r.wrap.b32 	%r8990, %r8987, %r8988, 28;
	mov.b64 	%rd329, {%r8990, %r8989};
	shf.l.wrap.b32 	%r8991, %r8987, %r8988, 30;
	shf.l.wrap.b32 	%r8992, %r8988, %r8987, 30;
	mov.b64 	%rd330, {%r8992, %r8991};
	xor.b64  	%rd331, %rd330, %rd329;
	shf.l.wrap.b32 	%r8993, %r8987, %r8988, 25;
	shf.l.wrap.b32 	%r8994, %r8988, %r8987, 25;
	mov.b64 	%rd332, {%r8994, %r8993};
	xor.b64  	%rd333, %rd331, %rd332;
	xor.b64  	%rd334, %rd316, %rd270;
	xor.b64  	%rd335, %rd316, %rd293;
	and.b64  	%rd336, %rd335, %rd334;
	xor.b64  	%rd337, %rd336, %rd316;
	add.s64 	%rd338, %rd327, %rd337;
	add.s64 	%rd339, %rd338, %rd333;
	add.s64 	%rd340, %rd2718, %rd259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8995,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8996}, %rd328;
	}
	shf.r.wrap.b32 	%r8997, %r8996, %r8995, 14;
	shf.r.wrap.b32 	%r8998, %r8995, %r8996, 14;
	mov.b64 	%rd341, {%r8998, %r8997};
	shf.r.wrap.b32 	%r8999, %r8996, %r8995, 18;
	shf.r.wrap.b32 	%r9000, %r8995, %r8996, 18;
	mov.b64 	%rd342, {%r9000, %r8999};
	xor.b64  	%rd343, %rd342, %rd341;
	shf.l.wrap.b32 	%r9001, %r8995, %r8996, 23;
	shf.l.wrap.b32 	%r9002, %r8996, %r8995, 23;
	mov.b64 	%rd344, {%r9002, %r9001};
	xor.b64  	%rd345, %rd343, %rd344;
	xor.b64  	%rd346, %rd305, %rd282;
	and.b64  	%rd347, %rd328, %rd346;
	xor.b64  	%rd348, %rd347, %rd282;
	add.s64 	%rd349, %rd340, %rd348;
	add.s64 	%rd350, %rd349, %rd345;
	add.s64 	%rd351, %rd350, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9003,%dummy}, %rd339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9004}, %rd339;
	}
	shf.r.wrap.b32 	%r9005, %r9004, %r9003, 28;
	shf.r.wrap.b32 	%r9006, %r9003, %r9004, 28;
	mov.b64 	%rd352, {%r9006, %r9005};
	shf.l.wrap.b32 	%r9007, %r9003, %r9004, 30;
	shf.l.wrap.b32 	%r9008, %r9004, %r9003, 30;
	mov.b64 	%rd353, {%r9008, %r9007};
	xor.b64  	%rd354, %rd353, %rd352;
	shf.l.wrap.b32 	%r9009, %r9003, %r9004, 25;
	shf.l.wrap.b32 	%r9010, %r9004, %r9003, 25;
	mov.b64 	%rd355, {%r9010, %r9009};
	xor.b64  	%rd356, %rd354, %rd355;
	xor.b64  	%rd357, %rd339, %rd293;
	xor.b64  	%rd358, %rd339, %rd316;
	and.b64  	%rd359, %rd358, %rd357;
	xor.b64  	%rd360, %rd359, %rd339;
	add.s64 	%rd361, %rd350, %rd360;
	add.s64 	%rd362, %rd361, %rd356;
	add.s64 	%rd363, %rd2719, %rd282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9011,%dummy}, %rd351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9012}, %rd351;
	}
	shf.r.wrap.b32 	%r9013, %r9012, %r9011, 14;
	shf.r.wrap.b32 	%r9014, %r9011, %r9012, 14;
	mov.b64 	%rd364, {%r9014, %r9013};
	shf.r.wrap.b32 	%r9015, %r9012, %r9011, 18;
	shf.r.wrap.b32 	%r9016, %r9011, %r9012, 18;
	mov.b64 	%rd365, {%r9016, %r9015};
	xor.b64  	%rd366, %rd365, %rd364;
	shf.l.wrap.b32 	%r9017, %r9011, %r9012, 23;
	shf.l.wrap.b32 	%r9018, %r9012, %r9011, 23;
	mov.b64 	%rd367, {%r9018, %r9017};
	xor.b64  	%rd368, %rd366, %rd367;
	xor.b64  	%rd369, %rd328, %rd305;
	and.b64  	%rd370, %rd351, %rd369;
	xor.b64  	%rd371, %rd370, %rd305;
	add.s64 	%rd372, %rd363, %rd371;
	add.s64 	%rd373, %rd372, %rd368;
	add.s64 	%rd374, %rd373, %rd293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9019,%dummy}, %rd362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9020}, %rd362;
	}
	shf.r.wrap.b32 	%r9021, %r9020, %r9019, 28;
	shf.r.wrap.b32 	%r9022, %r9019, %r9020, 28;
	mov.b64 	%rd375, {%r9022, %r9021};
	shf.l.wrap.b32 	%r9023, %r9019, %r9020, 30;
	shf.l.wrap.b32 	%r9024, %r9020, %r9019, 30;
	mov.b64 	%rd376, {%r9024, %r9023};
	xor.b64  	%rd377, %rd376, %rd375;
	shf.l.wrap.b32 	%r9025, %r9019, %r9020, 25;
	shf.l.wrap.b32 	%r9026, %r9020, %r9019, 25;
	mov.b64 	%rd378, {%r9026, %r9025};
	xor.b64  	%rd379, %rd377, %rd378;
	xor.b64  	%rd380, %rd362, %rd316;
	xor.b64  	%rd381, %rd362, %rd339;
	and.b64  	%rd382, %rd381, %rd380;
	xor.b64  	%rd383, %rd382, %rd362;
	add.s64 	%rd384, %rd373, %rd383;
	add.s64 	%rd385, %rd384, %rd379;
	add.s64 	%rd386, %rd2720, %rd305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9027,%dummy}, %rd374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9028}, %rd374;
	}
	shf.r.wrap.b32 	%r9029, %r9028, %r9027, 14;
	shf.r.wrap.b32 	%r9030, %r9027, %r9028, 14;
	mov.b64 	%rd387, {%r9030, %r9029};
	shf.r.wrap.b32 	%r9031, %r9028, %r9027, 18;
	shf.r.wrap.b32 	%r9032, %r9027, %r9028, 18;
	mov.b64 	%rd388, {%r9032, %r9031};
	xor.b64  	%rd389, %rd388, %rd387;
	shf.l.wrap.b32 	%r9033, %r9027, %r9028, 23;
	shf.l.wrap.b32 	%r9034, %r9028, %r9027, 23;
	mov.b64 	%rd390, {%r9034, %r9033};
	xor.b64  	%rd391, %rd389, %rd390;
	xor.b64  	%rd392, %rd351, %rd328;
	and.b64  	%rd393, %rd374, %rd392;
	xor.b64  	%rd394, %rd393, %rd328;
	add.s64 	%rd395, %rd386, %rd394;
	add.s64 	%rd396, %rd395, %rd391;
	add.s64 	%rd397, %rd396, %rd316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9035,%dummy}, %rd385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9036}, %rd385;
	}
	shf.r.wrap.b32 	%r9037, %r9036, %r9035, 28;
	shf.r.wrap.b32 	%r9038, %r9035, %r9036, 28;
	mov.b64 	%rd398, {%r9038, %r9037};
	shf.l.wrap.b32 	%r9039, %r9035, %r9036, 30;
	shf.l.wrap.b32 	%r9040, %r9036, %r9035, 30;
	mov.b64 	%rd399, {%r9040, %r9039};
	xor.b64  	%rd400, %rd399, %rd398;
	shf.l.wrap.b32 	%r9041, %r9035, %r9036, 25;
	shf.l.wrap.b32 	%r9042, %r9036, %r9035, 25;
	mov.b64 	%rd401, {%r9042, %r9041};
	xor.b64  	%rd402, %rd400, %rd401;
	xor.b64  	%rd403, %rd385, %rd339;
	xor.b64  	%rd404, %rd385, %rd362;
	and.b64  	%rd405, %rd404, %rd403;
	xor.b64  	%rd406, %rd405, %rd385;
	add.s64 	%rd407, %rd396, %rd406;
	add.s64 	%rd408, %rd407, %rd402;
	add.s64 	%rd409, %rd2721, %rd328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9043,%dummy}, %rd397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9044}, %rd397;
	}
	shf.r.wrap.b32 	%r9045, %r9044, %r9043, 14;
	shf.r.wrap.b32 	%r9046, %r9043, %r9044, 14;
	mov.b64 	%rd410, {%r9046, %r9045};
	shf.r.wrap.b32 	%r9047, %r9044, %r9043, 18;
	shf.r.wrap.b32 	%r9048, %r9043, %r9044, 18;
	mov.b64 	%rd411, {%r9048, %r9047};
	xor.b64  	%rd412, %rd411, %rd410;
	shf.l.wrap.b32 	%r9049, %r9043, %r9044, 23;
	shf.l.wrap.b32 	%r9050, %r9044, %r9043, 23;
	mov.b64 	%rd413, {%r9050, %r9049};
	xor.b64  	%rd414, %rd412, %rd413;
	xor.b64  	%rd415, %rd374, %rd351;
	and.b64  	%rd416, %rd397, %rd415;
	xor.b64  	%rd417, %rd416, %rd351;
	add.s64 	%rd418, %rd409, %rd417;
	add.s64 	%rd419, %rd418, %rd414;
	add.s64 	%rd420, %rd419, %rd339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9051,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9052}, %rd408;
	}
	shf.r.wrap.b32 	%r9053, %r9052, %r9051, 28;
	shf.r.wrap.b32 	%r9054, %r9051, %r9052, 28;
	mov.b64 	%rd421, {%r9054, %r9053};
	shf.l.wrap.b32 	%r9055, %r9051, %r9052, 30;
	shf.l.wrap.b32 	%r9056, %r9052, %r9051, 30;
	mov.b64 	%rd422, {%r9056, %r9055};
	xor.b64  	%rd423, %rd422, %rd421;
	shf.l.wrap.b32 	%r9057, %r9051, %r9052, 25;
	shf.l.wrap.b32 	%r9058, %r9052, %r9051, 25;
	mov.b64 	%rd424, {%r9058, %r9057};
	xor.b64  	%rd425, %rd423, %rd424;
	xor.b64  	%rd426, %rd408, %rd362;
	xor.b64  	%rd427, %rd408, %rd385;
	and.b64  	%rd428, %rd427, %rd426;
	xor.b64  	%rd429, %rd428, %rd408;
	add.s64 	%rd430, %rd419, %rd429;
	add.s64 	%rd431, %rd430, %rd425;
	add.s64 	%rd432, %rd2722, %rd351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9059,%dummy}, %rd420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9060}, %rd420;
	}
	shf.r.wrap.b32 	%r9061, %r9060, %r9059, 14;
	shf.r.wrap.b32 	%r9062, %r9059, %r9060, 14;
	mov.b64 	%rd433, {%r9062, %r9061};
	shf.r.wrap.b32 	%r9063, %r9060, %r9059, 18;
	shf.r.wrap.b32 	%r9064, %r9059, %r9060, 18;
	mov.b64 	%rd434, {%r9064, %r9063};
	xor.b64  	%rd435, %rd434, %rd433;
	shf.l.wrap.b32 	%r9065, %r9059, %r9060, 23;
	shf.l.wrap.b32 	%r9066, %r9060, %r9059, 23;
	mov.b64 	%rd436, {%r9066, %r9065};
	xor.b64  	%rd437, %rd435, %rd436;
	xor.b64  	%rd438, %rd397, %rd374;
	and.b64  	%rd439, %rd420, %rd438;
	xor.b64  	%rd440, %rd439, %rd374;
	add.s64 	%rd441, %rd432, %rd440;
	add.s64 	%rd442, %rd441, %rd437;
	add.s64 	%rd443, %rd442, %rd362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9067,%dummy}, %rd431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9068}, %rd431;
	}
	shf.r.wrap.b32 	%r9069, %r9068, %r9067, 28;
	shf.r.wrap.b32 	%r9070, %r9067, %r9068, 28;
	mov.b64 	%rd444, {%r9070, %r9069};
	shf.l.wrap.b32 	%r9071, %r9067, %r9068, 30;
	shf.l.wrap.b32 	%r9072, %r9068, %r9067, 30;
	mov.b64 	%rd445, {%r9072, %r9071};
	xor.b64  	%rd446, %rd445, %rd444;
	shf.l.wrap.b32 	%r9073, %r9067, %r9068, 25;
	shf.l.wrap.b32 	%r9074, %r9068, %r9067, 25;
	mov.b64 	%rd447, {%r9074, %r9073};
	xor.b64  	%rd448, %rd446, %rd447;
	xor.b64  	%rd449, %rd431, %rd385;
	xor.b64  	%rd450, %rd431, %rd408;
	and.b64  	%rd451, %rd450, %rd449;
	xor.b64  	%rd452, %rd451, %rd431;
	add.s64 	%rd453, %rd442, %rd452;
	add.s64 	%rd454, %rd453, %rd448;
	add.s64 	%rd455, %rd2723, %rd374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9075,%dummy}, %rd443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9076}, %rd443;
	}
	shf.r.wrap.b32 	%r9077, %r9076, %r9075, 14;
	shf.r.wrap.b32 	%r9078, %r9075, %r9076, 14;
	mov.b64 	%rd456, {%r9078, %r9077};
	shf.r.wrap.b32 	%r9079, %r9076, %r9075, 18;
	shf.r.wrap.b32 	%r9080, %r9075, %r9076, 18;
	mov.b64 	%rd457, {%r9080, %r9079};
	xor.b64  	%rd458, %rd457, %rd456;
	shf.l.wrap.b32 	%r9081, %r9075, %r9076, 23;
	shf.l.wrap.b32 	%r9082, %r9076, %r9075, 23;
	mov.b64 	%rd459, {%r9082, %r9081};
	xor.b64  	%rd460, %rd458, %rd459;
	xor.b64  	%rd461, %rd420, %rd397;
	and.b64  	%rd462, %rd443, %rd461;
	xor.b64  	%rd463, %rd462, %rd397;
	add.s64 	%rd464, %rd455, %rd463;
	add.s64 	%rd465, %rd464, %rd460;
	add.s64 	%rd466, %rd465, %rd385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9083,%dummy}, %rd454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9084}, %rd454;
	}
	shf.r.wrap.b32 	%r9085, %r9084, %r9083, 28;
	shf.r.wrap.b32 	%r9086, %r9083, %r9084, 28;
	mov.b64 	%rd467, {%r9086, %r9085};
	shf.l.wrap.b32 	%r9087, %r9083, %r9084, 30;
	shf.l.wrap.b32 	%r9088, %r9084, %r9083, 30;
	mov.b64 	%rd468, {%r9088, %r9087};
	xor.b64  	%rd469, %rd468, %rd467;
	shf.l.wrap.b32 	%r9089, %r9083, %r9084, 25;
	shf.l.wrap.b32 	%r9090, %r9084, %r9083, 25;
	mov.b64 	%rd470, {%r9090, %r9089};
	xor.b64  	%rd471, %rd469, %rd470;
	xor.b64  	%rd472, %rd454, %rd408;
	xor.b64  	%rd473, %rd454, %rd431;
	and.b64  	%rd474, %rd473, %rd472;
	xor.b64  	%rd475, %rd474, %rd454;
	add.s64 	%rd476, %rd465, %rd475;
	add.s64 	%rd477, %rd476, %rd471;
	add.s64 	%rd478, %rd2724, %rd397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9091,%dummy}, %rd466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9092}, %rd466;
	}
	shf.r.wrap.b32 	%r9093, %r9092, %r9091, 14;
	shf.r.wrap.b32 	%r9094, %r9091, %r9092, 14;
	mov.b64 	%rd479, {%r9094, %r9093};
	shf.r.wrap.b32 	%r9095, %r9092, %r9091, 18;
	shf.r.wrap.b32 	%r9096, %r9091, %r9092, 18;
	mov.b64 	%rd480, {%r9096, %r9095};
	xor.b64  	%rd481, %rd480, %rd479;
	shf.l.wrap.b32 	%r9097, %r9091, %r9092, 23;
	shf.l.wrap.b32 	%r9098, %r9092, %r9091, 23;
	mov.b64 	%rd482, {%r9098, %r9097};
	xor.b64  	%rd483, %rd481, %rd482;
	xor.b64  	%rd484, %rd443, %rd420;
	and.b64  	%rd485, %rd466, %rd484;
	xor.b64  	%rd486, %rd485, %rd420;
	add.s64 	%rd487, %rd478, %rd486;
	add.s64 	%rd488, %rd487, %rd483;
	add.s64 	%rd489, %rd488, %rd408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9099,%dummy}, %rd477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9100}, %rd477;
	}
	shf.r.wrap.b32 	%r9101, %r9100, %r9099, 28;
	shf.r.wrap.b32 	%r9102, %r9099, %r9100, 28;
	mov.b64 	%rd490, {%r9102, %r9101};
	shf.l.wrap.b32 	%r9103, %r9099, %r9100, 30;
	shf.l.wrap.b32 	%r9104, %r9100, %r9099, 30;
	mov.b64 	%rd491, {%r9104, %r9103};
	xor.b64  	%rd492, %rd491, %rd490;
	shf.l.wrap.b32 	%r9105, %r9099, %r9100, 25;
	shf.l.wrap.b32 	%r9106, %r9100, %r9099, 25;
	mov.b64 	%rd493, {%r9106, %r9105};
	xor.b64  	%rd494, %rd492, %rd493;
	xor.b64  	%rd495, %rd477, %rd431;
	xor.b64  	%rd496, %rd477, %rd454;
	and.b64  	%rd497, %rd496, %rd495;
	xor.b64  	%rd498, %rd497, %rd477;
	add.s64 	%rd499, %rd488, %rd498;
	add.s64 	%rd500, %rd499, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9107,%dummy}, %rd489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9108}, %rd489;
	}
	shf.r.wrap.b32 	%r9109, %r9108, %r9107, 14;
	shf.r.wrap.b32 	%r9110, %r9107, %r9108, 14;
	mov.b64 	%rd501, {%r9110, %r9109};
	shf.r.wrap.b32 	%r9111, %r9108, %r9107, 18;
	shf.r.wrap.b32 	%r9112, %r9107, %r9108, 18;
	mov.b64 	%rd502, {%r9112, %r9111};
	xor.b64  	%rd503, %rd502, %rd501;
	shf.l.wrap.b32 	%r9113, %r9107, %r9108, 23;
	shf.l.wrap.b32 	%r9114, %r9108, %r9107, 23;
	mov.b64 	%rd504, {%r9114, %r9113};
	xor.b64  	%rd505, %rd503, %rd504;
	xor.b64  	%rd506, %rd466, %rd443;
	and.b64  	%rd507, %rd489, %rd506;
	xor.b64  	%rd508, %rd507, %rd443;
	add.s64 	%rd509, %rd420, %rd171;
	add.s64 	%rd510, %rd509, %rd2725;
	add.s64 	%rd511, %rd510, %rd508;
	add.s64 	%rd512, %rd511, %rd505;
	add.s64 	%rd513, %rd512, %rd431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9115,%dummy}, %rd500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9116}, %rd500;
	}
	shf.r.wrap.b32 	%r9117, %r9116, %r9115, 28;
	shf.r.wrap.b32 	%r9118, %r9115, %r9116, 28;
	mov.b64 	%rd514, {%r9118, %r9117};
	shf.l.wrap.b32 	%r9119, %r9115, %r9116, 30;
	shf.l.wrap.b32 	%r9120, %r9116, %r9115, 30;
	mov.b64 	%rd515, {%r9120, %r9119};
	xor.b64  	%rd516, %rd515, %rd514;
	shf.l.wrap.b32 	%r9121, %r9115, %r9116, 25;
	shf.l.wrap.b32 	%r9122, %r9116, %r9115, 25;
	mov.b64 	%rd517, {%r9122, %r9121};
	xor.b64  	%rd518, %rd516, %rd517;
	xor.b64  	%rd519, %rd500, %rd454;
	xor.b64  	%rd520, %rd500, %rd477;
	and.b64  	%rd521, %rd520, %rd519;
	xor.b64  	%rd522, %rd521, %rd500;
	add.s64 	%rd523, %rd512, %rd522;
	add.s64 	%rd524, %rd523, %rd518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9123,%dummy}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9124}, %rd168;
	}
	shf.r.wrap.b32 	%r9125, %r9124, %r9123, 1;
	shf.r.wrap.b32 	%r9126, %r9123, %r9124, 1;
	mov.b64 	%rd525, {%r9126, %r9125};
	shf.r.wrap.b32 	%r9127, %r9124, %r9123, 8;
	shf.r.wrap.b32 	%r9128, %r9123, %r9124, 8;
	mov.b64 	%rd526, {%r9128, %r9127};
	shr.u64 	%rd527, %rd168, 7;
	xor.b64  	%rd528, %rd525, %rd527;
	xor.b64  	%rd529, %rd528, %rd526;
	add.s64 	%rd530, %rd167, %rd19;
	add.s64 	%rd531, %rd530, %rd529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9129,%dummy}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9130}, %rd171;
	}
	shf.r.wrap.b32 	%r9131, %r9130, %r9129, 19;
	shf.r.wrap.b32 	%r9132, %r9129, %r9130, 19;
	mov.b64 	%rd532, {%r9132, %r9131};
	shf.l.wrap.b32 	%r9133, %r9129, %r9130, 3;
	shf.l.wrap.b32 	%r9134, %r9130, %r9129, 3;
	mov.b64 	%rd533, {%r9134, %r9133};
	shr.u64 	%rd534, %rd171, 6;
	xor.b64  	%rd535, %rd532, %rd534;
	xor.b64  	%rd536, %rd535, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9135,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9136}, %rd169;
	}
	shf.r.wrap.b32 	%r9137, %r9136, %r9135, 1;
	shf.r.wrap.b32 	%r9138, %r9135, %r9136, 1;
	mov.b64 	%rd537, {%r9138, %r9137};
	shf.r.wrap.b32 	%r9139, %r9136, %r9135, 8;
	shf.r.wrap.b32 	%r9140, %r9135, %r9136, 8;
	mov.b64 	%rd538, {%r9140, %r9139};
	shr.u64 	%rd539, %rd169, 7;
	xor.b64  	%rd540, %rd537, %rd539;
	xor.b64  	%rd541, %rd540, %rd538;
	add.s64 	%rd542, %rd168, %rd536;
	add.s64 	%rd543, %rd542, %rd541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9141,%dummy}, %rd531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9142}, %rd531;
	}
	shf.r.wrap.b32 	%r9143, %r9142, %r9141, 19;
	shf.r.wrap.b32 	%r9144, %r9141, %r9142, 19;
	mov.b64 	%rd544, {%r9144, %r9143};
	shf.l.wrap.b32 	%r9145, %r9141, %r9142, 3;
	shf.l.wrap.b32 	%r9146, %r9142, %r9141, 3;
	mov.b64 	%rd545, {%r9146, %r9145};
	shr.u64 	%rd546, %rd531, 6;
	xor.b64  	%rd547, %rd544, %rd546;
	xor.b64  	%rd548, %rd547, %rd545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9147,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9148}, %rd170;
	}
	shf.r.wrap.b32 	%r9149, %r9148, %r9147, 1;
	shf.r.wrap.b32 	%r9150, %r9147, %r9148, 1;
	mov.b64 	%rd549, {%r9150, %r9149};
	shf.r.wrap.b32 	%r9151, %r9148, %r9147, 8;
	shf.r.wrap.b32 	%r9152, %r9147, %r9148, 8;
	mov.b64 	%rd550, {%r9152, %r9151};
	shr.u64 	%rd551, %rd170, 7;
	xor.b64  	%rd552, %rd549, %rd551;
	xor.b64  	%rd553, %rd552, %rd550;
	add.s64 	%rd554, %rd169, %rd548;
	add.s64 	%rd555, %rd554, %rd553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9153,%dummy}, %rd543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9154}, %rd543;
	}
	shf.r.wrap.b32 	%r9155, %r9154, %r9153, 19;
	shf.r.wrap.b32 	%r9156, %r9153, %r9154, 19;
	mov.b64 	%rd556, {%r9156, %r9155};
	shf.l.wrap.b32 	%r9157, %r9153, %r9154, 3;
	shf.l.wrap.b32 	%r9158, %r9154, %r9153, 3;
	mov.b64 	%rd557, {%r9158, %r9157};
	shr.u64 	%rd558, %rd543, 6;
	xor.b64  	%rd559, %rd556, %rd558;
	xor.b64  	%rd560, %rd559, %rd557;
	add.s64 	%rd561, %rd170, %rd560;
	add.s64 	%rd562, %rd561, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9159,%dummy}, %rd555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9160}, %rd555;
	}
	shf.r.wrap.b32 	%r9161, %r9160, %r9159, 19;
	shf.r.wrap.b32 	%r9162, %r9159, %r9160, 19;
	mov.b64 	%rd563, {%r9162, %r9161};
	shf.l.wrap.b32 	%r9163, %r9159, %r9160, 3;
	shf.l.wrap.b32 	%r9164, %r9160, %r9159, 3;
	mov.b64 	%rd564, {%r9164, %r9163};
	shr.u64 	%rd565, %rd555, 6;
	xor.b64  	%rd566, %rd563, %rd565;
	xor.b64  	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd567, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9165,%dummy}, %rd562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9166}, %rd562;
	}
	shf.r.wrap.b32 	%r9167, %r9166, %r9165, 19;
	shf.r.wrap.b32 	%r9168, %r9165, %r9166, 19;
	mov.b64 	%rd569, {%r9168, %r9167};
	shf.l.wrap.b32 	%r9169, %r9165, %r9166, 3;
	shf.l.wrap.b32 	%r9170, %r9166, %r9165, 3;
	mov.b64 	%rd570, {%r9170, %r9169};
	shr.u64 	%rd571, %rd562, 6;
	xor.b64  	%rd572, %rd569, %rd571;
	xor.b64  	%rd573, %rd572, %rd570;
	add.s64 	%rd574, %rd573, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9171,%dummy}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9172}, %rd568;
	}
	shf.r.wrap.b32 	%r9173, %r9172, %r9171, 19;
	shf.r.wrap.b32 	%r9174, %r9171, %r9172, 19;
	mov.b64 	%rd575, {%r9174, %r9173};
	shf.l.wrap.b32 	%r9175, %r9171, %r9172, 3;
	shf.l.wrap.b32 	%r9176, %r9172, %r9171, 3;
	mov.b64 	%rd576, {%r9176, %r9175};
	shr.u64 	%rd577, %rd568, 6;
	xor.b64  	%rd578, %rd575, %rd577;
	xor.b64  	%rd579, %rd578, %rd576;
	add.s64 	%rd580, %rd171, %rd579;
	add.s64 	%rd581, %rd580, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9177,%dummy}, %rd574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9178}, %rd574;
	}
	shf.r.wrap.b32 	%r9179, %r9178, %r9177, 19;
	shf.r.wrap.b32 	%r9180, %r9177, %r9178, 19;
	mov.b64 	%rd582, {%r9180, %r9179};
	shf.l.wrap.b32 	%r9181, %r9177, %r9178, 3;
	shf.l.wrap.b32 	%r9182, %r9178, %r9177, 3;
	mov.b64 	%rd583, {%r9182, %r9181};
	shr.u64 	%rd584, %rd574, 6;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	add.s64 	%rd587, %rd531, %rd586;
	add.s64 	%rd588, %rd587, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9183,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9184}, %rd581;
	}
	shf.r.wrap.b32 	%r9185, %r9184, %r9183, 19;
	shf.r.wrap.b32 	%r9186, %r9183, %r9184, 19;
	mov.b64 	%rd589, {%r9186, %r9185};
	shf.l.wrap.b32 	%r9187, %r9183, %r9184, 3;
	shf.l.wrap.b32 	%r9188, %r9184, %r9183, 3;
	mov.b64 	%rd590, {%r9188, %r9187};
	shr.u64 	%rd591, %rd581, 6;
	xor.b64  	%rd592, %rd589, %rd591;
	xor.b64  	%rd593, %rd592, %rd590;
	add.s64 	%rd594, %rd543, %rd593;
	add.s64 	%rd595, %rd594, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9189,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9190}, %rd588;
	}
	shf.r.wrap.b32 	%r9191, %r9190, %r9189, 19;
	shf.r.wrap.b32 	%r9192, %r9189, %r9190, 19;
	mov.b64 	%rd596, {%r9192, %r9191};
	shf.l.wrap.b32 	%r9193, %r9189, %r9190, 3;
	shf.l.wrap.b32 	%r9194, %r9190, %r9189, 3;
	mov.b64 	%rd597, {%r9194, %r9193};
	shr.u64 	%rd598, %rd588, 6;
	xor.b64  	%rd599, %rd596, %rd598;
	xor.b64  	%rd600, %rd599, %rd597;
	add.s64 	%rd601, %rd555, %rd600;
	add.s64 	%rd602, %rd601, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9195,%dummy}, %rd595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9196}, %rd595;
	}
	shf.r.wrap.b32 	%r9197, %r9196, %r9195, 19;
	shf.r.wrap.b32 	%r9198, %r9195, %r9196, 19;
	mov.b64 	%rd603, {%r9198, %r9197};
	shf.l.wrap.b32 	%r9199, %r9195, %r9196, 3;
	shf.l.wrap.b32 	%r9200, %r9196, %r9195, 3;
	mov.b64 	%rd604, {%r9200, %r9199};
	shr.u64 	%rd605, %rd595, 6;
	xor.b64  	%rd606, %rd603, %rd605;
	xor.b64  	%rd607, %rd606, %rd604;
	add.s64 	%rd608, %rd562, %rd607;
	add.s64 	%rd609, %rd608, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9201,%dummy}, %rd602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9202}, %rd602;
	}
	shf.r.wrap.b32 	%r9203, %r9202, %r9201, 19;
	shf.r.wrap.b32 	%r9204, %r9201, %r9202, 19;
	mov.b64 	%rd610, {%r9204, %r9203};
	shf.l.wrap.b32 	%r9205, %r9201, %r9202, 3;
	shf.l.wrap.b32 	%r9206, %r9202, %r9201, 3;
	mov.b64 	%rd611, {%r9206, %r9205};
	shr.u64 	%rd612, %rd602, 6;
	xor.b64  	%rd613, %rd610, %rd612;
	xor.b64  	%rd614, %rd613, %rd611;
	add.s64 	%rd615, %rd568, %rd614;
	add.s64 	%rd616, %rd615, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9207,%dummy}, %rd609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9208}, %rd609;
	}
	shf.r.wrap.b32 	%r9209, %r9208, %r9207, 19;
	shf.r.wrap.b32 	%r9210, %r9207, %r9208, 19;
	mov.b64 	%rd617, {%r9210, %r9209};
	shf.l.wrap.b32 	%r9211, %r9207, %r9208, 3;
	shf.l.wrap.b32 	%r9212, %r9208, %r9207, 3;
	mov.b64 	%rd618, {%r9212, %r9211};
	shr.u64 	%rd619, %rd609, 6;
	xor.b64  	%rd620, %rd617, %rd619;
	xor.b64  	%rd621, %rd620, %rd618;
	add.s64 	%rd622, %rd574, %rd621;
	add.s64 	%rd623, %rd622, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9213,%dummy}, %rd616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9214}, %rd616;
	}
	shf.r.wrap.b32 	%r9215, %r9214, %r9213, 19;
	shf.r.wrap.b32 	%r9216, %r9213, %r9214, 19;
	mov.b64 	%rd624, {%r9216, %r9215};
	shf.l.wrap.b32 	%r9217, %r9213, %r9214, 3;
	shf.l.wrap.b32 	%r9218, %r9214, %r9213, 3;
	mov.b64 	%rd625, {%r9218, %r9217};
	shr.u64 	%rd626, %rd616, 6;
	xor.b64  	%rd627, %rd624, %rd626;
	xor.b64  	%rd628, %rd627, %rd625;
	add.s64 	%rd629, %rd581, %rd628;
	add.s64 	%rd630, %rd629, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9219,%dummy}, %rd623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9220}, %rd623;
	}
	shf.r.wrap.b32 	%r9221, %r9220, %r9219, 19;
	shf.r.wrap.b32 	%r9222, %r9219, %r9220, 19;
	mov.b64 	%rd631, {%r9222, %r9221};
	shf.l.wrap.b32 	%r9223, %r9219, %r9220, 3;
	shf.l.wrap.b32 	%r9224, %r9220, %r9219, 3;
	mov.b64 	%rd632, {%r9224, %r9223};
	shr.u64 	%rd633, %rd623, 6;
	xor.b64  	%rd634, %rd631, %rd633;
	xor.b64  	%rd635, %rd634, %rd632;
	shf.r.wrap.b32 	%r9225, %r9130, %r9129, 1;
	shf.r.wrap.b32 	%r9226, %r9129, %r9130, 1;
	mov.b64 	%rd636, {%r9226, %r9225};
	shf.r.wrap.b32 	%r9227, %r9130, %r9129, 8;
	shf.r.wrap.b32 	%r9228, %r9129, %r9130, 8;
	mov.b64 	%rd637, {%r9228, %r9227};
	shr.u64 	%rd638, %rd171, 7;
	xor.b64  	%rd639, %rd636, %rd638;
	xor.b64  	%rd640, %rd639, %rd637;
	add.s64 	%rd641, %rd588, %rd635;
	add.s64 	%rd642, %rd641, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9229,%dummy}, %rd630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9230}, %rd630;
	}
	shf.r.wrap.b32 	%r9231, %r9230, %r9229, 19;
	shf.r.wrap.b32 	%r9232, %r9229, %r9230, 19;
	mov.b64 	%rd643, {%r9232, %r9231};
	shf.l.wrap.b32 	%r9233, %r9229, %r9230, 3;
	shf.l.wrap.b32 	%r9234, %r9230, %r9229, 3;
	mov.b64 	%rd644, {%r9234, %r9233};
	shr.u64 	%rd645, %rd630, 6;
	xor.b64  	%rd646, %rd643, %rd645;
	xor.b64  	%rd647, %rd646, %rd644;
	shf.r.wrap.b32 	%r9235, %r9142, %r9141, 1;
	shf.r.wrap.b32 	%r9236, %r9141, %r9142, 1;
	mov.b64 	%rd648, {%r9236, %r9235};
	shf.r.wrap.b32 	%r9237, %r9142, %r9141, 8;
	shf.r.wrap.b32 	%r9238, %r9141, %r9142, 8;
	mov.b64 	%rd649, {%r9238, %r9237};
	shr.u64 	%rd650, %rd531, 7;
	xor.b64  	%rd651, %rd648, %rd650;
	xor.b64  	%rd652, %rd651, %rd649;
	add.s64 	%rd653, %rd595, %rd171;
	add.s64 	%rd654, %rd653, %rd647;
	add.s64 	%rd655, %rd654, %rd652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9239,%dummy}, %rd513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9240}, %rd513;
	}
	shf.r.wrap.b32 	%r9241, %r9240, %r9239, 14;
	shf.r.wrap.b32 	%r9242, %r9239, %r9240, 14;
	mov.b64 	%rd656, {%r9242, %r9241};
	shf.r.wrap.b32 	%r9243, %r9240, %r9239, 18;
	shf.r.wrap.b32 	%r9244, %r9239, %r9240, 18;
	mov.b64 	%rd657, {%r9244, %r9243};
	xor.b64  	%rd658, %rd657, %rd656;
	shf.l.wrap.b32 	%r9245, %r9239, %r9240, 23;
	shf.l.wrap.b32 	%r9246, %r9240, %r9239, 23;
	mov.b64 	%rd659, {%r9246, %r9245};
	xor.b64  	%rd660, %rd658, %rd659;
	xor.b64  	%rd661, %rd466, %rd489;
	and.b64  	%rd662, %rd661, %rd513;
	xor.b64  	%rd663, %rd662, %rd466;
	add.s64 	%rd664, %rd663, %rd443;
	add.s64 	%rd665, %rd664, %rd531;
	add.s64 	%rd666, %rd665, %rd2726;
	add.s64 	%rd667, %rd666, %rd660;
	add.s64 	%rd668, %rd667, %rd454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9247,%dummy}, %rd524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9248}, %rd524;
	}
	shf.r.wrap.b32 	%r9249, %r9248, %r9247, 28;
	shf.r.wrap.b32 	%r9250, %r9247, %r9248, 28;
	mov.b64 	%rd669, {%r9250, %r9249};
	shf.l.wrap.b32 	%r9251, %r9247, %r9248, 30;
	shf.l.wrap.b32 	%r9252, %r9248, %r9247, 30;
	mov.b64 	%rd670, {%r9252, %r9251};
	xor.b64  	%rd671, %rd670, %rd669;
	shf.l.wrap.b32 	%r9253, %r9247, %r9248, 25;
	shf.l.wrap.b32 	%r9254, %r9248, %r9247, 25;
	mov.b64 	%rd672, {%r9254, %r9253};
	xor.b64  	%rd673, %rd671, %rd672;
	xor.b64  	%rd674, %rd524, %rd477;
	xor.b64  	%rd675, %rd524, %rd500;
	and.b64  	%rd676, %rd675, %rd674;
	xor.b64  	%rd677, %rd676, %rd524;
	add.s64 	%rd678, %rd667, %rd677;
	add.s64 	%rd679, %rd678, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9255,%dummy}, %rd668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9256}, %rd668;
	}
	shf.r.wrap.b32 	%r9257, %r9256, %r9255, 14;
	shf.r.wrap.b32 	%r9258, %r9255, %r9256, 14;
	mov.b64 	%rd680, {%r9258, %r9257};
	shf.r.wrap.b32 	%r9259, %r9256, %r9255, 18;
	shf.r.wrap.b32 	%r9260, %r9255, %r9256, 18;
	mov.b64 	%rd681, {%r9260, %r9259};
	xor.b64  	%rd682, %rd681, %rd680;
	shf.l.wrap.b32 	%r9261, %r9255, %r9256, 23;
	shf.l.wrap.b32 	%r9262, %r9256, %r9255, 23;
	mov.b64 	%rd683, {%r9262, %r9261};
	xor.b64  	%rd684, %rd682, %rd683;
	xor.b64  	%rd685, %rd489, %rd513;
	and.b64  	%rd686, %rd668, %rd685;
	xor.b64  	%rd687, %rd686, %rd489;
	add.s64 	%rd688, %rd543, %rd466;
	add.s64 	%rd689, %rd688, %rd2727;
	add.s64 	%rd690, %rd689, %rd687;
	add.s64 	%rd691, %rd690, %rd684;
	add.s64 	%rd692, %rd691, %rd477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9263,%dummy}, %rd679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9264}, %rd679;
	}
	shf.r.wrap.b32 	%r9265, %r9264, %r9263, 28;
	shf.r.wrap.b32 	%r9266, %r9263, %r9264, 28;
	mov.b64 	%rd693, {%r9266, %r9265};
	shf.l.wrap.b32 	%r9267, %r9263, %r9264, 30;
	shf.l.wrap.b32 	%r9268, %r9264, %r9263, 30;
	mov.b64 	%rd694, {%r9268, %r9267};
	xor.b64  	%rd695, %rd694, %rd693;
	shf.l.wrap.b32 	%r9269, %r9263, %r9264, 25;
	shf.l.wrap.b32 	%r9270, %r9264, %r9263, 25;
	mov.b64 	%rd696, {%r9270, %r9269};
	xor.b64  	%rd697, %rd695, %rd696;
	xor.b64  	%rd698, %rd679, %rd500;
	xor.b64  	%rd699, %rd679, %rd524;
	and.b64  	%rd700, %rd699, %rd698;
	xor.b64  	%rd701, %rd700, %rd679;
	add.s64 	%rd702, %rd691, %rd701;
	add.s64 	%rd703, %rd702, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9271,%dummy}, %rd692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9272}, %rd692;
	}
	shf.r.wrap.b32 	%r9273, %r9272, %r9271, 14;
	shf.r.wrap.b32 	%r9274, %r9271, %r9272, 14;
	mov.b64 	%rd704, {%r9274, %r9273};
	shf.r.wrap.b32 	%r9275, %r9272, %r9271, 18;
	shf.r.wrap.b32 	%r9276, %r9271, %r9272, 18;
	mov.b64 	%rd705, {%r9276, %r9275};
	xor.b64  	%rd706, %rd705, %rd704;
	shf.l.wrap.b32 	%r9277, %r9271, %r9272, 23;
	shf.l.wrap.b32 	%r9278, %r9272, %r9271, 23;
	mov.b64 	%rd707, {%r9278, %r9277};
	xor.b64  	%rd708, %rd706, %rd707;
	xor.b64  	%rd709, %rd668, %rd513;
	and.b64  	%rd710, %rd692, %rd709;
	xor.b64  	%rd711, %rd710, %rd513;
	add.s64 	%rd712, %rd555, %rd489;
	add.s64 	%rd713, %rd712, %rd2728;
	add.s64 	%rd714, %rd713, %rd711;
	add.s64 	%rd715, %rd714, %rd708;
	add.s64 	%rd716, %rd715, %rd500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9279,%dummy}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9280}, %rd703;
	}
	shf.r.wrap.b32 	%r9281, %r9280, %r9279, 28;
	shf.r.wrap.b32 	%r9282, %r9279, %r9280, 28;
	mov.b64 	%rd717, {%r9282, %r9281};
	shf.l.wrap.b32 	%r9283, %r9279, %r9280, 30;
	shf.l.wrap.b32 	%r9284, %r9280, %r9279, 30;
	mov.b64 	%rd718, {%r9284, %r9283};
	xor.b64  	%rd719, %rd718, %rd717;
	shf.l.wrap.b32 	%r9285, %r9279, %r9280, 25;
	shf.l.wrap.b32 	%r9286, %r9280, %r9279, 25;
	mov.b64 	%rd720, {%r9286, %r9285};
	xor.b64  	%rd721, %rd719, %rd720;
	xor.b64  	%rd722, %rd703, %rd524;
	xor.b64  	%rd723, %rd703, %rd679;
	and.b64  	%rd724, %rd723, %rd722;
	xor.b64  	%rd725, %rd724, %rd703;
	add.s64 	%rd726, %rd715, %rd725;
	add.s64 	%rd727, %rd726, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9287,%dummy}, %rd716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9288}, %rd716;
	}
	shf.r.wrap.b32 	%r9289, %r9288, %r9287, 14;
	shf.r.wrap.b32 	%r9290, %r9287, %r9288, 14;
	mov.b64 	%rd728, {%r9290, %r9289};
	shf.r.wrap.b32 	%r9291, %r9288, %r9287, 18;
	shf.r.wrap.b32 	%r9292, %r9287, %r9288, 18;
	mov.b64 	%rd729, {%r9292, %r9291};
	xor.b64  	%rd730, %rd729, %rd728;
	shf.l.wrap.b32 	%r9293, %r9287, %r9288, 23;
	shf.l.wrap.b32 	%r9294, %r9288, %r9287, 23;
	mov.b64 	%rd731, {%r9294, %r9293};
	xor.b64  	%rd732, %rd730, %rd731;
	xor.b64  	%rd733, %rd692, %rd668;
	and.b64  	%rd734, %rd716, %rd733;
	xor.b64  	%rd735, %rd734, %rd668;
	add.s64 	%rd736, %rd562, %rd513;
	add.s64 	%rd737, %rd736, %rd2729;
	add.s64 	%rd738, %rd737, %rd735;
	add.s64 	%rd739, %rd738, %rd732;
	add.s64 	%rd740, %rd739, %rd524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9295,%dummy}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9296}, %rd727;
	}
	shf.r.wrap.b32 	%r9297, %r9296, %r9295, 28;
	shf.r.wrap.b32 	%r9298, %r9295, %r9296, 28;
	mov.b64 	%rd741, {%r9298, %r9297};
	shf.l.wrap.b32 	%r9299, %r9295, %r9296, 30;
	shf.l.wrap.b32 	%r9300, %r9296, %r9295, 30;
	mov.b64 	%rd742, {%r9300, %r9299};
	xor.b64  	%rd743, %rd742, %rd741;
	shf.l.wrap.b32 	%r9301, %r9295, %r9296, 25;
	shf.l.wrap.b32 	%r9302, %r9296, %r9295, 25;
	mov.b64 	%rd744, {%r9302, %r9301};
	xor.b64  	%rd745, %rd743, %rd744;
	xor.b64  	%rd746, %rd727, %rd679;
	xor.b64  	%rd747, %rd727, %rd703;
	and.b64  	%rd748, %rd747, %rd746;
	xor.b64  	%rd749, %rd748, %rd727;
	add.s64 	%rd750, %rd739, %rd749;
	add.s64 	%rd751, %rd750, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9303,%dummy}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9304}, %rd740;
	}
	shf.r.wrap.b32 	%r9305, %r9304, %r9303, 14;
	shf.r.wrap.b32 	%r9306, %r9303, %r9304, 14;
	mov.b64 	%rd752, {%r9306, %r9305};
	shf.r.wrap.b32 	%r9307, %r9304, %r9303, 18;
	shf.r.wrap.b32 	%r9308, %r9303, %r9304, 18;
	mov.b64 	%rd753, {%r9308, %r9307};
	xor.b64  	%rd754, %rd753, %rd752;
	shf.l.wrap.b32 	%r9309, %r9303, %r9304, 23;
	shf.l.wrap.b32 	%r9310, %r9304, %r9303, 23;
	mov.b64 	%rd755, {%r9310, %r9309};
	xor.b64  	%rd756, %rd754, %rd755;
	xor.b64  	%rd757, %rd716, %rd692;
	and.b64  	%rd758, %rd740, %rd757;
	xor.b64  	%rd759, %rd758, %rd692;
	add.s64 	%rd760, %rd668, %rd568;
	add.s64 	%rd761, %rd760, %rd2730;
	add.s64 	%rd762, %rd761, %rd759;
	add.s64 	%rd763, %rd762, %rd756;
	add.s64 	%rd764, %rd763, %rd679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9311,%dummy}, %rd751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9312}, %rd751;
	}
	shf.r.wrap.b32 	%r9313, %r9312, %r9311, 28;
	shf.r.wrap.b32 	%r9314, %r9311, %r9312, 28;
	mov.b64 	%rd765, {%r9314, %r9313};
	shf.l.wrap.b32 	%r9315, %r9311, %r9312, 30;
	shf.l.wrap.b32 	%r9316, %r9312, %r9311, 30;
	mov.b64 	%rd766, {%r9316, %r9315};
	xor.b64  	%rd767, %rd766, %rd765;
	shf.l.wrap.b32 	%r9317, %r9311, %r9312, 25;
	shf.l.wrap.b32 	%r9318, %r9312, %r9311, 25;
	mov.b64 	%rd768, {%r9318, %r9317};
	xor.b64  	%rd769, %rd767, %rd768;
	xor.b64  	%rd770, %rd751, %rd703;
	xor.b64  	%rd771, %rd751, %rd727;
	and.b64  	%rd772, %rd771, %rd770;
	xor.b64  	%rd773, %rd772, %rd751;
	add.s64 	%rd774, %rd763, %rd773;
	add.s64 	%rd775, %rd774, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9319,%dummy}, %rd764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9320}, %rd764;
	}
	shf.r.wrap.b32 	%r9321, %r9320, %r9319, 14;
	shf.r.wrap.b32 	%r9322, %r9319, %r9320, 14;
	mov.b64 	%rd776, {%r9322, %r9321};
	shf.r.wrap.b32 	%r9323, %r9320, %r9319, 18;
	shf.r.wrap.b32 	%r9324, %r9319, %r9320, 18;
	mov.b64 	%rd777, {%r9324, %r9323};
	xor.b64  	%rd778, %rd777, %rd776;
	shf.l.wrap.b32 	%r9325, %r9319, %r9320, 23;
	shf.l.wrap.b32 	%r9326, %r9320, %r9319, 23;
	mov.b64 	%rd779, {%r9326, %r9325};
	xor.b64  	%rd780, %rd778, %rd779;
	xor.b64  	%rd781, %rd740, %rd716;
	and.b64  	%rd782, %rd764, %rd781;
	xor.b64  	%rd783, %rd782, %rd716;
	add.s64 	%rd784, %rd692, %rd574;
	add.s64 	%rd785, %rd784, %rd2731;
	add.s64 	%rd786, %rd785, %rd783;
	add.s64 	%rd787, %rd786, %rd780;
	add.s64 	%rd788, %rd787, %rd703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9327,%dummy}, %rd775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9328}, %rd775;
	}
	shf.r.wrap.b32 	%r9329, %r9328, %r9327, 28;
	shf.r.wrap.b32 	%r9330, %r9327, %r9328, 28;
	mov.b64 	%rd789, {%r9330, %r9329};
	shf.l.wrap.b32 	%r9331, %r9327, %r9328, 30;
	shf.l.wrap.b32 	%r9332, %r9328, %r9327, 30;
	mov.b64 	%rd790, {%r9332, %r9331};
	xor.b64  	%rd791, %rd790, %rd789;
	shf.l.wrap.b32 	%r9333, %r9327, %r9328, 25;
	shf.l.wrap.b32 	%r9334, %r9328, %r9327, 25;
	mov.b64 	%rd792, {%r9334, %r9333};
	xor.b64  	%rd793, %rd791, %rd792;
	xor.b64  	%rd794, %rd775, %rd727;
	xor.b64  	%rd795, %rd775, %rd751;
	and.b64  	%rd796, %rd795, %rd794;
	xor.b64  	%rd797, %rd796, %rd775;
	add.s64 	%rd798, %rd787, %rd797;
	add.s64 	%rd799, %rd798, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9335,%dummy}, %rd788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9336}, %rd788;
	}
	shf.r.wrap.b32 	%r9337, %r9336, %r9335, 14;
	shf.r.wrap.b32 	%r9338, %r9335, %r9336, 14;
	mov.b64 	%rd800, {%r9338, %r9337};
	shf.r.wrap.b32 	%r9339, %r9336, %r9335, 18;
	shf.r.wrap.b32 	%r9340, %r9335, %r9336, 18;
	mov.b64 	%rd801, {%r9340, %r9339};
	xor.b64  	%rd802, %rd801, %rd800;
	shf.l.wrap.b32 	%r9341, %r9335, %r9336, 23;
	shf.l.wrap.b32 	%r9342, %r9336, %r9335, 23;
	mov.b64 	%rd803, {%r9342, %r9341};
	xor.b64  	%rd804, %rd802, %rd803;
	xor.b64  	%rd805, %rd764, %rd740;
	and.b64  	%rd806, %rd788, %rd805;
	xor.b64  	%rd807, %rd806, %rd740;
	add.s64 	%rd808, %rd716, %rd581;
	add.s64 	%rd809, %rd808, %rd2732;
	add.s64 	%rd810, %rd809, %rd807;
	add.s64 	%rd811, %rd810, %rd804;
	add.s64 	%rd812, %rd811, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9343,%dummy}, %rd799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9344}, %rd799;
	}
	shf.r.wrap.b32 	%r9345, %r9344, %r9343, 28;
	shf.r.wrap.b32 	%r9346, %r9343, %r9344, 28;
	mov.b64 	%rd813, {%r9346, %r9345};
	shf.l.wrap.b32 	%r9347, %r9343, %r9344, 30;
	shf.l.wrap.b32 	%r9348, %r9344, %r9343, 30;
	mov.b64 	%rd814, {%r9348, %r9347};
	xor.b64  	%rd815, %rd814, %rd813;
	shf.l.wrap.b32 	%r9349, %r9343, %r9344, 25;
	shf.l.wrap.b32 	%r9350, %r9344, %r9343, 25;
	mov.b64 	%rd816, {%r9350, %r9349};
	xor.b64  	%rd817, %rd815, %rd816;
	xor.b64  	%rd818, %rd799, %rd751;
	xor.b64  	%rd819, %rd799, %rd775;
	and.b64  	%rd820, %rd819, %rd818;
	xor.b64  	%rd821, %rd820, %rd799;
	add.s64 	%rd822, %rd811, %rd821;
	add.s64 	%rd823, %rd822, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9351,%dummy}, %rd812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9352}, %rd812;
	}
	shf.r.wrap.b32 	%r9353, %r9352, %r9351, 14;
	shf.r.wrap.b32 	%r9354, %r9351, %r9352, 14;
	mov.b64 	%rd824, {%r9354, %r9353};
	shf.r.wrap.b32 	%r9355, %r9352, %r9351, 18;
	shf.r.wrap.b32 	%r9356, %r9351, %r9352, 18;
	mov.b64 	%rd825, {%r9356, %r9355};
	xor.b64  	%rd826, %rd825, %rd824;
	shf.l.wrap.b32 	%r9357, %r9351, %r9352, 23;
	shf.l.wrap.b32 	%r9358, %r9352, %r9351, 23;
	mov.b64 	%rd827, {%r9358, %r9357};
	xor.b64  	%rd828, %rd826, %rd827;
	xor.b64  	%rd829, %rd788, %rd764;
	and.b64  	%rd830, %rd812, %rd829;
	xor.b64  	%rd831, %rd830, %rd764;
	add.s64 	%rd832, %rd740, %rd588;
	add.s64 	%rd833, %rd832, %rd2733;
	add.s64 	%rd834, %rd833, %rd831;
	add.s64 	%rd835, %rd834, %rd828;
	add.s64 	%rd836, %rd835, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9359,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9360}, %rd823;
	}
	shf.r.wrap.b32 	%r9361, %r9360, %r9359, 28;
	shf.r.wrap.b32 	%r9362, %r9359, %r9360, 28;
	mov.b64 	%rd837, {%r9362, %r9361};
	shf.l.wrap.b32 	%r9363, %r9359, %r9360, 30;
	shf.l.wrap.b32 	%r9364, %r9360, %r9359, 30;
	mov.b64 	%rd838, {%r9364, %r9363};
	xor.b64  	%rd839, %rd838, %rd837;
	shf.l.wrap.b32 	%r9365, %r9359, %r9360, 25;
	shf.l.wrap.b32 	%r9366, %r9360, %r9359, 25;
	mov.b64 	%rd840, {%r9366, %r9365};
	xor.b64  	%rd841, %rd839, %rd840;
	xor.b64  	%rd842, %rd823, %rd775;
	xor.b64  	%rd843, %rd823, %rd799;
	and.b64  	%rd844, %rd843, %rd842;
	xor.b64  	%rd845, %rd844, %rd823;
	add.s64 	%rd846, %rd835, %rd845;
	add.s64 	%rd847, %rd846, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9367,%dummy}, %rd836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9368}, %rd836;
	}
	shf.r.wrap.b32 	%r9369, %r9368, %r9367, 14;
	shf.r.wrap.b32 	%r9370, %r9367, %r9368, 14;
	mov.b64 	%rd848, {%r9370, %r9369};
	shf.r.wrap.b32 	%r9371, %r9368, %r9367, 18;
	shf.r.wrap.b32 	%r9372, %r9367, %r9368, 18;
	mov.b64 	%rd849, {%r9372, %r9371};
	xor.b64  	%rd850, %rd849, %rd848;
	shf.l.wrap.b32 	%r9373, %r9367, %r9368, 23;
	shf.l.wrap.b32 	%r9374, %r9368, %r9367, 23;
	mov.b64 	%rd851, {%r9374, %r9373};
	xor.b64  	%rd852, %rd850, %rd851;
	xor.b64  	%rd853, %rd812, %rd788;
	and.b64  	%rd854, %rd836, %rd853;
	xor.b64  	%rd855, %rd854, %rd788;
	add.s64 	%rd856, %rd764, %rd595;
	add.s64 	%rd857, %rd856, %rd2734;
	add.s64 	%rd858, %rd857, %rd855;
	add.s64 	%rd859, %rd858, %rd852;
	add.s64 	%rd860, %rd859, %rd775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9375,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9376}, %rd847;
	}
	shf.r.wrap.b32 	%r9377, %r9376, %r9375, 28;
	shf.r.wrap.b32 	%r9378, %r9375, %r9376, 28;
	mov.b64 	%rd861, {%r9378, %r9377};
	shf.l.wrap.b32 	%r9379, %r9375, %r9376, 30;
	shf.l.wrap.b32 	%r9380, %r9376, %r9375, 30;
	mov.b64 	%rd862, {%r9380, %r9379};
	xor.b64  	%rd863, %rd862, %rd861;
	shf.l.wrap.b32 	%r9381, %r9375, %r9376, 25;
	shf.l.wrap.b32 	%r9382, %r9376, %r9375, 25;
	mov.b64 	%rd864, {%r9382, %r9381};
	xor.b64  	%rd865, %rd863, %rd864;
	xor.b64  	%rd866, %rd847, %rd799;
	xor.b64  	%rd867, %rd847, %rd823;
	and.b64  	%rd868, %rd867, %rd866;
	xor.b64  	%rd869, %rd868, %rd847;
	add.s64 	%rd870, %rd859, %rd869;
	add.s64 	%rd871, %rd870, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9383,%dummy}, %rd860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9384}, %rd860;
	}
	shf.r.wrap.b32 	%r9385, %r9384, %r9383, 14;
	shf.r.wrap.b32 	%r9386, %r9383, %r9384, 14;
	mov.b64 	%rd872, {%r9386, %r9385};
	shf.r.wrap.b32 	%r9387, %r9384, %r9383, 18;
	shf.r.wrap.b32 	%r9388, %r9383, %r9384, 18;
	mov.b64 	%rd873, {%r9388, %r9387};
	xor.b64  	%rd874, %rd873, %rd872;
	shf.l.wrap.b32 	%r9389, %r9383, %r9384, 23;
	shf.l.wrap.b32 	%r9390, %r9384, %r9383, 23;
	mov.b64 	%rd875, {%r9390, %r9389};
	xor.b64  	%rd876, %rd874, %rd875;
	xor.b64  	%rd877, %rd836, %rd812;
	and.b64  	%rd878, %rd860, %rd877;
	xor.b64  	%rd879, %rd878, %rd812;
	add.s64 	%rd880, %rd788, %rd602;
	add.s64 	%rd881, %rd880, %rd2735;
	add.s64 	%rd882, %rd881, %rd879;
	add.s64 	%rd883, %rd882, %rd876;
	add.s64 	%rd884, %rd883, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9391,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9392}, %rd871;
	}
	shf.r.wrap.b32 	%r9393, %r9392, %r9391, 28;
	shf.r.wrap.b32 	%r9394, %r9391, %r9392, 28;
	mov.b64 	%rd885, {%r9394, %r9393};
	shf.l.wrap.b32 	%r9395, %r9391, %r9392, 30;
	shf.l.wrap.b32 	%r9396, %r9392, %r9391, 30;
	mov.b64 	%rd886, {%r9396, %r9395};
	xor.b64  	%rd887, %rd886, %rd885;
	shf.l.wrap.b32 	%r9397, %r9391, %r9392, 25;
	shf.l.wrap.b32 	%r9398, %r9392, %r9391, 25;
	mov.b64 	%rd888, {%r9398, %r9397};
	xor.b64  	%rd889, %rd887, %rd888;
	xor.b64  	%rd890, %rd871, %rd823;
	xor.b64  	%rd891, %rd871, %rd847;
	and.b64  	%rd892, %rd891, %rd890;
	xor.b64  	%rd893, %rd892, %rd871;
	add.s64 	%rd894, %rd883, %rd893;
	add.s64 	%rd895, %rd894, %rd889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9399,%dummy}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9400}, %rd884;
	}
	shf.r.wrap.b32 	%r9401, %r9400, %r9399, 14;
	shf.r.wrap.b32 	%r9402, %r9399, %r9400, 14;
	mov.b64 	%rd896, {%r9402, %r9401};
	shf.r.wrap.b32 	%r9403, %r9400, %r9399, 18;
	shf.r.wrap.b32 	%r9404, %r9399, %r9400, 18;
	mov.b64 	%rd897, {%r9404, %r9403};
	xor.b64  	%rd898, %rd897, %rd896;
	shf.l.wrap.b32 	%r9405, %r9399, %r9400, 23;
	shf.l.wrap.b32 	%r9406, %r9400, %r9399, 23;
	mov.b64 	%rd899, {%r9406, %r9405};
	xor.b64  	%rd900, %rd898, %rd899;
	xor.b64  	%rd901, %rd860, %rd836;
	and.b64  	%rd902, %rd884, %rd901;
	xor.b64  	%rd903, %rd902, %rd836;
	add.s64 	%rd904, %rd812, %rd609;
	add.s64 	%rd905, %rd904, %rd2736;
	add.s64 	%rd906, %rd905, %rd903;
	add.s64 	%rd907, %rd906, %rd900;
	add.s64 	%rd908, %rd907, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9407,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9408}, %rd895;
	}
	shf.r.wrap.b32 	%r9409, %r9408, %r9407, 28;
	shf.r.wrap.b32 	%r9410, %r9407, %r9408, 28;
	mov.b64 	%rd909, {%r9410, %r9409};
	shf.l.wrap.b32 	%r9411, %r9407, %r9408, 30;
	shf.l.wrap.b32 	%r9412, %r9408, %r9407, 30;
	mov.b64 	%rd910, {%r9412, %r9411};
	xor.b64  	%rd911, %rd910, %rd909;
	shf.l.wrap.b32 	%r9413, %r9407, %r9408, 25;
	shf.l.wrap.b32 	%r9414, %r9408, %r9407, 25;
	mov.b64 	%rd912, {%r9414, %r9413};
	xor.b64  	%rd913, %rd911, %rd912;
	xor.b64  	%rd914, %rd895, %rd847;
	xor.b64  	%rd915, %rd895, %rd871;
	and.b64  	%rd916, %rd915, %rd914;
	xor.b64  	%rd917, %rd916, %rd895;
	add.s64 	%rd918, %rd907, %rd917;
	add.s64 	%rd919, %rd918, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9415,%dummy}, %rd908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9416}, %rd908;
	}
	shf.r.wrap.b32 	%r9417, %r9416, %r9415, 14;
	shf.r.wrap.b32 	%r9418, %r9415, %r9416, 14;
	mov.b64 	%rd920, {%r9418, %r9417};
	shf.r.wrap.b32 	%r9419, %r9416, %r9415, 18;
	shf.r.wrap.b32 	%r9420, %r9415, %r9416, 18;
	mov.b64 	%rd921, {%r9420, %r9419};
	xor.b64  	%rd922, %rd921, %rd920;
	shf.l.wrap.b32 	%r9421, %r9415, %r9416, 23;
	shf.l.wrap.b32 	%r9422, %r9416, %r9415, 23;
	mov.b64 	%rd923, {%r9422, %r9421};
	xor.b64  	%rd924, %rd922, %rd923;
	xor.b64  	%rd925, %rd884, %rd860;
	and.b64  	%rd926, %rd908, %rd925;
	xor.b64  	%rd927, %rd926, %rd860;
	add.s64 	%rd928, %rd836, %rd616;
	add.s64 	%rd929, %rd928, %rd2737;
	add.s64 	%rd930, %rd929, %rd927;
	add.s64 	%rd931, %rd930, %rd924;
	add.s64 	%rd932, %rd931, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9423,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9424}, %rd919;
	}
	shf.r.wrap.b32 	%r9425, %r9424, %r9423, 28;
	shf.r.wrap.b32 	%r9426, %r9423, %r9424, 28;
	mov.b64 	%rd933, {%r9426, %r9425};
	shf.l.wrap.b32 	%r9427, %r9423, %r9424, 30;
	shf.l.wrap.b32 	%r9428, %r9424, %r9423, 30;
	mov.b64 	%rd934, {%r9428, %r9427};
	xor.b64  	%rd935, %rd934, %rd933;
	shf.l.wrap.b32 	%r9429, %r9423, %r9424, 25;
	shf.l.wrap.b32 	%r9430, %r9424, %r9423, 25;
	mov.b64 	%rd936, {%r9430, %r9429};
	xor.b64  	%rd937, %rd935, %rd936;
	xor.b64  	%rd938, %rd919, %rd871;
	xor.b64  	%rd939, %rd919, %rd895;
	and.b64  	%rd940, %rd939, %rd938;
	xor.b64  	%rd941, %rd940, %rd919;
	add.s64 	%rd942, %rd931, %rd941;
	add.s64 	%rd943, %rd942, %rd937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9431,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9432}, %rd932;
	}
	shf.r.wrap.b32 	%r9433, %r9432, %r9431, 14;
	shf.r.wrap.b32 	%r9434, %r9431, %r9432, 14;
	mov.b64 	%rd944, {%r9434, %r9433};
	shf.r.wrap.b32 	%r9435, %r9432, %r9431, 18;
	shf.r.wrap.b32 	%r9436, %r9431, %r9432, 18;
	mov.b64 	%rd945, {%r9436, %r9435};
	xor.b64  	%rd946, %rd945, %rd944;
	shf.l.wrap.b32 	%r9437, %r9431, %r9432, 23;
	shf.l.wrap.b32 	%r9438, %r9432, %r9431, 23;
	mov.b64 	%rd947, {%r9438, %r9437};
	xor.b64  	%rd948, %rd946, %rd947;
	xor.b64  	%rd949, %rd908, %rd884;
	and.b64  	%rd950, %rd932, %rd949;
	xor.b64  	%rd951, %rd950, %rd884;
	add.s64 	%rd952, %rd860, %rd623;
	add.s64 	%rd953, %rd952, %rd2738;
	add.s64 	%rd954, %rd953, %rd951;
	add.s64 	%rd955, %rd954, %rd948;
	add.s64 	%rd956, %rd955, %rd871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9439,%dummy}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9440}, %rd943;
	}
	shf.r.wrap.b32 	%r9441, %r9440, %r9439, 28;
	shf.r.wrap.b32 	%r9442, %r9439, %r9440, 28;
	mov.b64 	%rd957, {%r9442, %r9441};
	shf.l.wrap.b32 	%r9443, %r9439, %r9440, 30;
	shf.l.wrap.b32 	%r9444, %r9440, %r9439, 30;
	mov.b64 	%rd958, {%r9444, %r9443};
	xor.b64  	%rd959, %rd958, %rd957;
	shf.l.wrap.b32 	%r9445, %r9439, %r9440, 25;
	shf.l.wrap.b32 	%r9446, %r9440, %r9439, 25;
	mov.b64 	%rd960, {%r9446, %r9445};
	xor.b64  	%rd961, %rd959, %rd960;
	xor.b64  	%rd962, %rd943, %rd895;
	xor.b64  	%rd963, %rd943, %rd919;
	and.b64  	%rd964, %rd963, %rd962;
	xor.b64  	%rd965, %rd964, %rd943;
	add.s64 	%rd966, %rd955, %rd965;
	add.s64 	%rd967, %rd966, %rd961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9447,%dummy}, %rd956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9448}, %rd956;
	}
	shf.r.wrap.b32 	%r9449, %r9448, %r9447, 14;
	shf.r.wrap.b32 	%r9450, %r9447, %r9448, 14;
	mov.b64 	%rd968, {%r9450, %r9449};
	shf.r.wrap.b32 	%r9451, %r9448, %r9447, 18;
	shf.r.wrap.b32 	%r9452, %r9447, %r9448, 18;
	mov.b64 	%rd969, {%r9452, %r9451};
	xor.b64  	%rd970, %rd969, %rd968;
	shf.l.wrap.b32 	%r9453, %r9447, %r9448, 23;
	shf.l.wrap.b32 	%r9454, %r9448, %r9447, 23;
	mov.b64 	%rd971, {%r9454, %r9453};
	xor.b64  	%rd972, %rd970, %rd971;
	xor.b64  	%rd973, %rd932, %rd908;
	and.b64  	%rd974, %rd956, %rd973;
	xor.b64  	%rd975, %rd974, %rd908;
	add.s64 	%rd976, %rd884, %rd630;
	add.s64 	%rd977, %rd976, %rd2739;
	add.s64 	%rd978, %rd977, %rd975;
	add.s64 	%rd979, %rd978, %rd972;
	add.s64 	%rd980, %rd979, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9455,%dummy}, %rd967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9456}, %rd967;
	}
	shf.r.wrap.b32 	%r9457, %r9456, %r9455, 28;
	shf.r.wrap.b32 	%r9458, %r9455, %r9456, 28;
	mov.b64 	%rd981, {%r9458, %r9457};
	shf.l.wrap.b32 	%r9459, %r9455, %r9456, 30;
	shf.l.wrap.b32 	%r9460, %r9456, %r9455, 30;
	mov.b64 	%rd982, {%r9460, %r9459};
	xor.b64  	%rd983, %rd982, %rd981;
	shf.l.wrap.b32 	%r9461, %r9455, %r9456, 25;
	shf.l.wrap.b32 	%r9462, %r9456, %r9455, 25;
	mov.b64 	%rd984, {%r9462, %r9461};
	xor.b64  	%rd985, %rd983, %rd984;
	xor.b64  	%rd986, %rd967, %rd919;
	xor.b64  	%rd987, %rd967, %rd943;
	and.b64  	%rd988, %rd987, %rd986;
	xor.b64  	%rd989, %rd988, %rd967;
	add.s64 	%rd990, %rd979, %rd989;
	add.s64 	%rd991, %rd990, %rd985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9463,%dummy}, %rd980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9464}, %rd980;
	}
	shf.r.wrap.b32 	%r9465, %r9464, %r9463, 14;
	shf.r.wrap.b32 	%r9466, %r9463, %r9464, 14;
	mov.b64 	%rd992, {%r9466, %r9465};
	shf.r.wrap.b32 	%r9467, %r9464, %r9463, 18;
	shf.r.wrap.b32 	%r9468, %r9463, %r9464, 18;
	mov.b64 	%rd993, {%r9468, %r9467};
	xor.b64  	%rd994, %rd993, %rd992;
	shf.l.wrap.b32 	%r9469, %r9463, %r9464, 23;
	shf.l.wrap.b32 	%r9470, %r9464, %r9463, 23;
	mov.b64 	%rd995, {%r9470, %r9469};
	xor.b64  	%rd996, %rd994, %rd995;
	xor.b64  	%rd997, %rd956, %rd932;
	and.b64  	%rd998, %rd980, %rd997;
	xor.b64  	%rd999, %rd998, %rd932;
	add.s64 	%rd1000, %rd908, %rd642;
	add.s64 	%rd1001, %rd1000, %rd2740;
	add.s64 	%rd1002, %rd1001, %rd999;
	add.s64 	%rd1003, %rd1002, %rd996;
	add.s64 	%rd1004, %rd1003, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9471,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9472}, %rd991;
	}
	shf.r.wrap.b32 	%r9473, %r9472, %r9471, 28;
	shf.r.wrap.b32 	%r9474, %r9471, %r9472, 28;
	mov.b64 	%rd1005, {%r9474, %r9473};
	shf.l.wrap.b32 	%r9475, %r9471, %r9472, 30;
	shf.l.wrap.b32 	%r9476, %r9472, %r9471, 30;
	mov.b64 	%rd1006, {%r9476, %r9475};
	xor.b64  	%rd1007, %rd1006, %rd1005;
	shf.l.wrap.b32 	%r9477, %r9471, %r9472, 25;
	shf.l.wrap.b32 	%r9478, %r9472, %r9471, 25;
	mov.b64 	%rd1008, {%r9478, %r9477};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	xor.b64  	%rd1010, %rd991, %rd943;
	xor.b64  	%rd1011, %rd991, %rd967;
	and.b64  	%rd1012, %rd1011, %rd1010;
	xor.b64  	%rd1013, %rd1012, %rd991;
	add.s64 	%rd1014, %rd1003, %rd1013;
	add.s64 	%rd1015, %rd1014, %rd1009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9479,%dummy}, %rd1004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9480}, %rd1004;
	}
	shf.r.wrap.b32 	%r9481, %r9480, %r9479, 14;
	shf.r.wrap.b32 	%r9482, %r9479, %r9480, 14;
	mov.b64 	%rd1016, {%r9482, %r9481};
	shf.r.wrap.b32 	%r9483, %r9480, %r9479, 18;
	shf.r.wrap.b32 	%r9484, %r9479, %r9480, 18;
	mov.b64 	%rd1017, {%r9484, %r9483};
	xor.b64  	%rd1018, %rd1017, %rd1016;
	shf.l.wrap.b32 	%r9485, %r9479, %r9480, 23;
	shf.l.wrap.b32 	%r9486, %r9480, %r9479, 23;
	mov.b64 	%rd1019, {%r9486, %r9485};
	xor.b64  	%rd1020, %rd1018, %rd1019;
	xor.b64  	%rd1021, %rd980, %rd956;
	and.b64  	%rd1022, %rd1004, %rd1021;
	xor.b64  	%rd1023, %rd1022, %rd956;
	add.s64 	%rd1024, %rd932, %rd655;
	add.s64 	%rd1025, %rd1024, %rd2741;
	add.s64 	%rd1026, %rd1025, %rd1023;
	add.s64 	%rd1027, %rd1026, %rd1020;
	add.s64 	%rd1028, %rd1027, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9487,%dummy}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9488}, %rd1015;
	}
	shf.r.wrap.b32 	%r9489, %r9488, %r9487, 28;
	shf.r.wrap.b32 	%r9490, %r9487, %r9488, 28;
	mov.b64 	%rd1029, {%r9490, %r9489};
	shf.l.wrap.b32 	%r9491, %r9487, %r9488, 30;
	shf.l.wrap.b32 	%r9492, %r9488, %r9487, 30;
	mov.b64 	%rd1030, {%r9492, %r9491};
	xor.b64  	%rd1031, %rd1030, %rd1029;
	shf.l.wrap.b32 	%r9493, %r9487, %r9488, 25;
	shf.l.wrap.b32 	%r9494, %r9488, %r9487, 25;
	mov.b64 	%rd1032, {%r9494, %r9493};
	xor.b64  	%rd1033, %rd1031, %rd1032;
	xor.b64  	%rd1034, %rd1015, %rd967;
	xor.b64  	%rd1035, %rd1015, %rd991;
	and.b64  	%rd1036, %rd1035, %rd1034;
	xor.b64  	%rd1037, %rd1036, %rd1015;
	add.s64 	%rd1038, %rd1027, %rd1037;
	add.s64 	%rd1039, %rd1038, %rd1033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9495,%dummy}, %rd642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9496}, %rd642;
	}
	shf.r.wrap.b32 	%r9497, %r9496, %r9495, 19;
	shf.r.wrap.b32 	%r9498, %r9495, %r9496, 19;
	mov.b64 	%rd1040, {%r9498, %r9497};
	shf.l.wrap.b32 	%r9499, %r9495, %r9496, 3;
	shf.l.wrap.b32 	%r9500, %r9496, %r9495, 3;
	mov.b64 	%rd1041, {%r9500, %r9499};
	shr.u64 	%rd1042, %rd642, 6;
	xor.b64  	%rd1043, %rd1040, %rd1042;
	xor.b64  	%rd1044, %rd1043, %rd1041;
	shf.r.wrap.b32 	%r9501, %r9154, %r9153, 1;
	shf.r.wrap.b32 	%r9502, %r9153, %r9154, 1;
	mov.b64 	%rd1045, {%r9502, %r9501};
	shf.r.wrap.b32 	%r9503, %r9154, %r9153, 8;
	shf.r.wrap.b32 	%r9504, %r9153, %r9154, 8;
	mov.b64 	%rd1046, {%r9504, %r9503};
	shr.u64 	%rd1047, %rd543, 7;
	xor.b64  	%rd1048, %rd1045, %rd1047;
	xor.b64  	%rd1049, %rd1048, %rd1046;
	add.s64 	%rd1050, %rd531, %rd602;
	add.s64 	%rd1051, %rd1050, %rd1044;
	add.s64 	%rd1052, %rd1051, %rd1049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9505,%dummy}, %rd655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9506}, %rd655;
	}
	shf.r.wrap.b32 	%r9507, %r9506, %r9505, 19;
	shf.r.wrap.b32 	%r9508, %r9505, %r9506, 19;
	mov.b64 	%rd1053, {%r9508, %r9507};
	shf.l.wrap.b32 	%r9509, %r9505, %r9506, 3;
	shf.l.wrap.b32 	%r9510, %r9506, %r9505, 3;
	mov.b64 	%rd1054, {%r9510, %r9509};
	shr.u64 	%rd1055, %rd655, 6;
	xor.b64  	%rd1056, %rd1053, %rd1055;
	xor.b64  	%rd1057, %rd1056, %rd1054;
	shf.r.wrap.b32 	%r9511, %r9160, %r9159, 1;
	shf.r.wrap.b32 	%r9512, %r9159, %r9160, 1;
	mov.b64 	%rd1058, {%r9512, %r9511};
	shf.r.wrap.b32 	%r9513, %r9160, %r9159, 8;
	shf.r.wrap.b32 	%r9514, %r9159, %r9160, 8;
	mov.b64 	%rd1059, {%r9514, %r9513};
	shr.u64 	%rd1060, %rd555, 7;
	xor.b64  	%rd1061, %rd1058, %rd1060;
	xor.b64  	%rd1062, %rd1061, %rd1059;
	add.s64 	%rd1063, %rd543, %rd609;
	add.s64 	%rd1064, %rd1063, %rd1057;
	add.s64 	%rd1065, %rd1064, %rd1062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9515,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9516}, %rd1052;
	}
	shf.r.wrap.b32 	%r9517, %r9516, %r9515, 19;
	shf.r.wrap.b32 	%r9518, %r9515, %r9516, 19;
	mov.b64 	%rd1066, {%r9518, %r9517};
	shf.l.wrap.b32 	%r9519, %r9515, %r9516, 3;
	shf.l.wrap.b32 	%r9520, %r9516, %r9515, 3;
	mov.b64 	%rd1067, {%r9520, %r9519};
	shr.u64 	%rd1068, %rd1052, 6;
	xor.b64  	%rd1069, %rd1066, %rd1068;
	xor.b64  	%rd1070, %rd1069, %rd1067;
	shf.r.wrap.b32 	%r9521, %r9166, %r9165, 1;
	shf.r.wrap.b32 	%r9522, %r9165, %r9166, 1;
	mov.b64 	%rd1071, {%r9522, %r9521};
	shf.r.wrap.b32 	%r9523, %r9166, %r9165, 8;
	shf.r.wrap.b32 	%r9524, %r9165, %r9166, 8;
	mov.b64 	%rd1072, {%r9524, %r9523};
	shr.u64 	%rd1073, %rd562, 7;
	xor.b64  	%rd1074, %rd1071, %rd1073;
	xor.b64  	%rd1075, %rd1074, %rd1072;
	add.s64 	%rd1076, %rd555, %rd616;
	add.s64 	%rd1077, %rd1076, %rd1070;
	add.s64 	%rd1078, %rd1077, %rd1075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9525,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9526}, %rd1065;
	}
	shf.r.wrap.b32 	%r9527, %r9526, %r9525, 19;
	shf.r.wrap.b32 	%r9528, %r9525, %r9526, 19;
	mov.b64 	%rd1079, {%r9528, %r9527};
	shf.l.wrap.b32 	%r9529, %r9525, %r9526, 3;
	shf.l.wrap.b32 	%r9530, %r9526, %r9525, 3;
	mov.b64 	%rd1080, {%r9530, %r9529};
	shr.u64 	%rd1081, %rd1065, 6;
	xor.b64  	%rd1082, %rd1079, %rd1081;
	xor.b64  	%rd1083, %rd1082, %rd1080;
	shf.r.wrap.b32 	%r9531, %r9172, %r9171, 1;
	shf.r.wrap.b32 	%r9532, %r9171, %r9172, 1;
	mov.b64 	%rd1084, {%r9532, %r9531};
	shf.r.wrap.b32 	%r9533, %r9172, %r9171, 8;
	shf.r.wrap.b32 	%r9534, %r9171, %r9172, 8;
	mov.b64 	%rd1085, {%r9534, %r9533};
	shr.u64 	%rd1086, %rd568, 7;
	xor.b64  	%rd1087, %rd1084, %rd1086;
	xor.b64  	%rd1088, %rd1087, %rd1085;
	add.s64 	%rd1089, %rd562, %rd623;
	add.s64 	%rd1090, %rd1089, %rd1083;
	add.s64 	%rd1091, %rd1090, %rd1088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9535,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9536}, %rd1078;
	}
	shf.r.wrap.b32 	%r9537, %r9536, %r9535, 19;
	shf.r.wrap.b32 	%r9538, %r9535, %r9536, 19;
	mov.b64 	%rd1092, {%r9538, %r9537};
	shf.l.wrap.b32 	%r9539, %r9535, %r9536, 3;
	shf.l.wrap.b32 	%r9540, %r9536, %r9535, 3;
	mov.b64 	%rd1093, {%r9540, %r9539};
	shr.u64 	%rd1094, %rd1078, 6;
	xor.b64  	%rd1095, %rd1092, %rd1094;
	xor.b64  	%rd1096, %rd1095, %rd1093;
	shf.r.wrap.b32 	%r9541, %r9178, %r9177, 1;
	shf.r.wrap.b32 	%r9542, %r9177, %r9178, 1;
	mov.b64 	%rd1097, {%r9542, %r9541};
	shf.r.wrap.b32 	%r9543, %r9178, %r9177, 8;
	shf.r.wrap.b32 	%r9544, %r9177, %r9178, 8;
	mov.b64 	%rd1098, {%r9544, %r9543};
	shr.u64 	%rd1099, %rd574, 7;
	xor.b64  	%rd1100, %rd1097, %rd1099;
	xor.b64  	%rd1101, %rd1100, %rd1098;
	add.s64 	%rd1102, %rd568, %rd630;
	add.s64 	%rd1103, %rd1102, %rd1096;
	add.s64 	%rd1104, %rd1103, %rd1101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9545,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9546}, %rd1091;
	}
	shf.r.wrap.b32 	%r9547, %r9546, %r9545, 19;
	shf.r.wrap.b32 	%r9548, %r9545, %r9546, 19;
	mov.b64 	%rd1105, {%r9548, %r9547};
	shf.l.wrap.b32 	%r9549, %r9545, %r9546, 3;
	shf.l.wrap.b32 	%r9550, %r9546, %r9545, 3;
	mov.b64 	%rd1106, {%r9550, %r9549};
	shr.u64 	%rd1107, %rd1091, 6;
	xor.b64  	%rd1108, %rd1105, %rd1107;
	xor.b64  	%rd1109, %rd1108, %rd1106;
	shf.r.wrap.b32 	%r9551, %r9184, %r9183, 1;
	shf.r.wrap.b32 	%r9552, %r9183, %r9184, 1;
	mov.b64 	%rd1110, {%r9552, %r9551};
	shf.r.wrap.b32 	%r9553, %r9184, %r9183, 8;
	shf.r.wrap.b32 	%r9554, %r9183, %r9184, 8;
	mov.b64 	%rd1111, {%r9554, %r9553};
	shr.u64 	%rd1112, %rd581, 7;
	xor.b64  	%rd1113, %rd1110, %rd1112;
	xor.b64  	%rd1114, %rd1113, %rd1111;
	add.s64 	%rd1115, %rd574, %rd642;
	add.s64 	%rd1116, %rd1115, %rd1109;
	add.s64 	%rd1117, %rd1116, %rd1114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9555,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9556}, %rd1104;
	}
	shf.r.wrap.b32 	%r9557, %r9556, %r9555, 19;
	shf.r.wrap.b32 	%r9558, %r9555, %r9556, 19;
	mov.b64 	%rd1118, {%r9558, %r9557};
	shf.l.wrap.b32 	%r9559, %r9555, %r9556, 3;
	shf.l.wrap.b32 	%r9560, %r9556, %r9555, 3;
	mov.b64 	%rd1119, {%r9560, %r9559};
	shr.u64 	%rd1120, %rd1104, 6;
	xor.b64  	%rd1121, %rd1118, %rd1120;
	xor.b64  	%rd1122, %rd1121, %rd1119;
	shf.r.wrap.b32 	%r9561, %r9190, %r9189, 1;
	shf.r.wrap.b32 	%r9562, %r9189, %r9190, 1;
	mov.b64 	%rd1123, {%r9562, %r9561};
	shf.r.wrap.b32 	%r9563, %r9190, %r9189, 8;
	shf.r.wrap.b32 	%r9564, %r9189, %r9190, 8;
	mov.b64 	%rd1124, {%r9564, %r9563};
	shr.u64 	%rd1125, %rd588, 7;
	xor.b64  	%rd1126, %rd1123, %rd1125;
	xor.b64  	%rd1127, %rd1126, %rd1124;
	add.s64 	%rd1128, %rd581, %rd655;
	add.s64 	%rd1129, %rd1128, %rd1122;
	add.s64 	%rd1130, %rd1129, %rd1127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9565,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9566}, %rd1117;
	}
	shf.r.wrap.b32 	%r9567, %r9566, %r9565, 19;
	shf.r.wrap.b32 	%r9568, %r9565, %r9566, 19;
	mov.b64 	%rd1131, {%r9568, %r9567};
	shf.l.wrap.b32 	%r9569, %r9565, %r9566, 3;
	shf.l.wrap.b32 	%r9570, %r9566, %r9565, 3;
	mov.b64 	%rd1132, {%r9570, %r9569};
	shr.u64 	%rd1133, %rd1117, 6;
	xor.b64  	%rd1134, %rd1131, %rd1133;
	xor.b64  	%rd1135, %rd1134, %rd1132;
	shf.r.wrap.b32 	%r9571, %r9196, %r9195, 1;
	shf.r.wrap.b32 	%r9572, %r9195, %r9196, 1;
	mov.b64 	%rd1136, {%r9572, %r9571};
	shf.r.wrap.b32 	%r9573, %r9196, %r9195, 8;
	shf.r.wrap.b32 	%r9574, %r9195, %r9196, 8;
	mov.b64 	%rd1137, {%r9574, %r9573};
	shr.u64 	%rd1138, %rd595, 7;
	xor.b64  	%rd1139, %rd1136, %rd1138;
	xor.b64  	%rd1140, %rd1139, %rd1137;
	add.s64 	%rd1141, %rd1052, %rd588;
	add.s64 	%rd1142, %rd1141, %rd1135;
	add.s64 	%rd1143, %rd1142, %rd1140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9575,%dummy}, %rd1130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9576}, %rd1130;
	}
	shf.r.wrap.b32 	%r9577, %r9576, %r9575, 19;
	shf.r.wrap.b32 	%r9578, %r9575, %r9576, 19;
	mov.b64 	%rd1144, {%r9578, %r9577};
	shf.l.wrap.b32 	%r9579, %r9575, %r9576, 3;
	shf.l.wrap.b32 	%r9580, %r9576, %r9575, 3;
	mov.b64 	%rd1145, {%r9580, %r9579};
	shr.u64 	%rd1146, %rd1130, 6;
	xor.b64  	%rd1147, %rd1144, %rd1146;
	xor.b64  	%rd1148, %rd1147, %rd1145;
	shf.r.wrap.b32 	%r9581, %r9202, %r9201, 1;
	shf.r.wrap.b32 	%r9582, %r9201, %r9202, 1;
	mov.b64 	%rd1149, {%r9582, %r9581};
	shf.r.wrap.b32 	%r9583, %r9202, %r9201, 8;
	shf.r.wrap.b32 	%r9584, %r9201, %r9202, 8;
	mov.b64 	%rd1150, {%r9584, %r9583};
	shr.u64 	%rd1151, %rd602, 7;
	xor.b64  	%rd1152, %rd1149, %rd1151;
	xor.b64  	%rd1153, %rd1152, %rd1150;
	add.s64 	%rd1154, %rd1065, %rd595;
	add.s64 	%rd1155, %rd1154, %rd1148;
	add.s64 	%rd1156, %rd1155, %rd1153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9585,%dummy}, %rd1143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9586}, %rd1143;
	}
	shf.r.wrap.b32 	%r9587, %r9586, %r9585, 19;
	shf.r.wrap.b32 	%r9588, %r9585, %r9586, 19;
	mov.b64 	%rd1157, {%r9588, %r9587};
	shf.l.wrap.b32 	%r9589, %r9585, %r9586, 3;
	shf.l.wrap.b32 	%r9590, %r9586, %r9585, 3;
	mov.b64 	%rd1158, {%r9590, %r9589};
	shr.u64 	%rd1159, %rd1143, 6;
	xor.b64  	%rd1160, %rd1157, %rd1159;
	xor.b64  	%rd1161, %rd1160, %rd1158;
	shf.r.wrap.b32 	%r9591, %r9208, %r9207, 1;
	shf.r.wrap.b32 	%r9592, %r9207, %r9208, 1;
	mov.b64 	%rd1162, {%r9592, %r9591};
	shf.r.wrap.b32 	%r9593, %r9208, %r9207, 8;
	shf.r.wrap.b32 	%r9594, %r9207, %r9208, 8;
	mov.b64 	%rd1163, {%r9594, %r9593};
	shr.u64 	%rd1164, %rd609, 7;
	xor.b64  	%rd1165, %rd1162, %rd1164;
	xor.b64  	%rd1166, %rd1165, %rd1163;
	add.s64 	%rd1167, %rd1078, %rd602;
	add.s64 	%rd1168, %rd1167, %rd1161;
	add.s64 	%rd1169, %rd1168, %rd1166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9595,%dummy}, %rd1156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9596}, %rd1156;
	}
	shf.r.wrap.b32 	%r9597, %r9596, %r9595, 19;
	shf.r.wrap.b32 	%r9598, %r9595, %r9596, 19;
	mov.b64 	%rd1170, {%r9598, %r9597};
	shf.l.wrap.b32 	%r9599, %r9595, %r9596, 3;
	shf.l.wrap.b32 	%r9600, %r9596, %r9595, 3;
	mov.b64 	%rd1171, {%r9600, %r9599};
	shr.u64 	%rd1172, %rd1156, 6;
	xor.b64  	%rd1173, %rd1170, %rd1172;
	xor.b64  	%rd1174, %rd1173, %rd1171;
	shf.r.wrap.b32 	%r9601, %r9214, %r9213, 1;
	shf.r.wrap.b32 	%r9602, %r9213, %r9214, 1;
	mov.b64 	%rd1175, {%r9602, %r9601};
	shf.r.wrap.b32 	%r9603, %r9214, %r9213, 8;
	shf.r.wrap.b32 	%r9604, %r9213, %r9214, 8;
	mov.b64 	%rd1176, {%r9604, %r9603};
	shr.u64 	%rd1177, %rd616, 7;
	xor.b64  	%rd1178, %rd1175, %rd1177;
	xor.b64  	%rd1179, %rd1178, %rd1176;
	add.s64 	%rd1180, %rd1091, %rd609;
	add.s64 	%rd1181, %rd1180, %rd1174;
	add.s64 	%rd1182, %rd1181, %rd1179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9605,%dummy}, %rd1169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9606}, %rd1169;
	}
	shf.r.wrap.b32 	%r9607, %r9606, %r9605, 19;
	shf.r.wrap.b32 	%r9608, %r9605, %r9606, 19;
	mov.b64 	%rd1183, {%r9608, %r9607};
	shf.l.wrap.b32 	%r9609, %r9605, %r9606, 3;
	shf.l.wrap.b32 	%r9610, %r9606, %r9605, 3;
	mov.b64 	%rd1184, {%r9610, %r9609};
	shr.u64 	%rd1185, %rd1169, 6;
	xor.b64  	%rd1186, %rd1183, %rd1185;
	xor.b64  	%rd1187, %rd1186, %rd1184;
	shf.r.wrap.b32 	%r9611, %r9220, %r9219, 1;
	shf.r.wrap.b32 	%r9612, %r9219, %r9220, 1;
	mov.b64 	%rd1188, {%r9612, %r9611};
	shf.r.wrap.b32 	%r9613, %r9220, %r9219, 8;
	shf.r.wrap.b32 	%r9614, %r9219, %r9220, 8;
	mov.b64 	%rd1189, {%r9614, %r9613};
	shr.u64 	%rd1190, %rd623, 7;
	xor.b64  	%rd1191, %rd1188, %rd1190;
	xor.b64  	%rd1192, %rd1191, %rd1189;
	add.s64 	%rd1193, %rd1104, %rd616;
	add.s64 	%rd1194, %rd1193, %rd1187;
	add.s64 	%rd1195, %rd1194, %rd1192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9615,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9616}, %rd1182;
	}
	shf.r.wrap.b32 	%r9617, %r9616, %r9615, 19;
	shf.r.wrap.b32 	%r9618, %r9615, %r9616, 19;
	mov.b64 	%rd1196, {%r9618, %r9617};
	shf.l.wrap.b32 	%r9619, %r9615, %r9616, 3;
	shf.l.wrap.b32 	%r9620, %r9616, %r9615, 3;
	mov.b64 	%rd1197, {%r9620, %r9619};
	shr.u64 	%rd1198, %rd1182, 6;
	xor.b64  	%rd1199, %rd1196, %rd1198;
	xor.b64  	%rd1200, %rd1199, %rd1197;
	shf.r.wrap.b32 	%r9621, %r9230, %r9229, 1;
	shf.r.wrap.b32 	%r9622, %r9229, %r9230, 1;
	mov.b64 	%rd1201, {%r9622, %r9621};
	shf.r.wrap.b32 	%r9623, %r9230, %r9229, 8;
	shf.r.wrap.b32 	%r9624, %r9229, %r9230, 8;
	mov.b64 	%rd1202, {%r9624, %r9623};
	shr.u64 	%rd1203, %rd630, 7;
	xor.b64  	%rd1204, %rd1201, %rd1203;
	xor.b64  	%rd1205, %rd1204, %rd1202;
	add.s64 	%rd1206, %rd1117, %rd623;
	add.s64 	%rd1207, %rd1206, %rd1200;
	add.s64 	%rd1208, %rd1207, %rd1205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9625,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9626}, %rd1195;
	}
	shf.r.wrap.b32 	%r9627, %r9626, %r9625, 19;
	shf.r.wrap.b32 	%r9628, %r9625, %r9626, 19;
	mov.b64 	%rd1209, {%r9628, %r9627};
	shf.l.wrap.b32 	%r9629, %r9625, %r9626, 3;
	shf.l.wrap.b32 	%r9630, %r9626, %r9625, 3;
	mov.b64 	%rd1210, {%r9630, %r9629};
	shr.u64 	%rd1211, %rd1195, 6;
	xor.b64  	%rd1212, %rd1209, %rd1211;
	xor.b64  	%rd1213, %rd1212, %rd1210;
	shf.r.wrap.b32 	%r9631, %r9496, %r9495, 1;
	shf.r.wrap.b32 	%r9632, %r9495, %r9496, 1;
	mov.b64 	%rd1214, {%r9632, %r9631};
	shf.r.wrap.b32 	%r9633, %r9496, %r9495, 8;
	shf.r.wrap.b32 	%r9634, %r9495, %r9496, 8;
	mov.b64 	%rd1215, {%r9634, %r9633};
	shr.u64 	%rd1216, %rd642, 7;
	xor.b64  	%rd1217, %rd1214, %rd1216;
	xor.b64  	%rd1218, %rd1217, %rd1215;
	add.s64 	%rd1219, %rd1130, %rd630;
	add.s64 	%rd1220, %rd1219, %rd1213;
	add.s64 	%rd1221, %rd1220, %rd1218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9635,%dummy}, %rd1208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9636}, %rd1208;
	}
	shf.r.wrap.b32 	%r9637, %r9636, %r9635, 19;
	shf.r.wrap.b32 	%r9638, %r9635, %r9636, 19;
	mov.b64 	%rd1222, {%r9638, %r9637};
	shf.l.wrap.b32 	%r9639, %r9635, %r9636, 3;
	shf.l.wrap.b32 	%r9640, %r9636, %r9635, 3;
	mov.b64 	%rd1223, {%r9640, %r9639};
	shr.u64 	%rd1224, %rd1208, 6;
	xor.b64  	%rd1225, %rd1222, %rd1224;
	xor.b64  	%rd1226, %rd1225, %rd1223;
	shf.r.wrap.b32 	%r9641, %r9506, %r9505, 1;
	shf.r.wrap.b32 	%r9642, %r9505, %r9506, 1;
	mov.b64 	%rd1227, {%r9642, %r9641};
	shf.r.wrap.b32 	%r9643, %r9506, %r9505, 8;
	shf.r.wrap.b32 	%r9644, %r9505, %r9506, 8;
	mov.b64 	%rd1228, {%r9644, %r9643};
	shr.u64 	%rd1229, %rd655, 7;
	xor.b64  	%rd1230, %rd1227, %rd1229;
	xor.b64  	%rd1231, %rd1230, %rd1228;
	add.s64 	%rd1232, %rd1143, %rd642;
	add.s64 	%rd1233, %rd1232, %rd1226;
	add.s64 	%rd1234, %rd1233, %rd1231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9645,%dummy}, %rd1221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9646}, %rd1221;
	}
	shf.r.wrap.b32 	%r9647, %r9646, %r9645, 19;
	shf.r.wrap.b32 	%r9648, %r9645, %r9646, 19;
	mov.b64 	%rd1235, {%r9648, %r9647};
	shf.l.wrap.b32 	%r9649, %r9645, %r9646, 3;
	shf.l.wrap.b32 	%r9650, %r9646, %r9645, 3;
	mov.b64 	%rd1236, {%r9650, %r9649};
	shr.u64 	%rd1237, %rd1221, 6;
	xor.b64  	%rd1238, %rd1235, %rd1237;
	xor.b64  	%rd1239, %rd1238, %rd1236;
	shf.r.wrap.b32 	%r9651, %r9516, %r9515, 1;
	shf.r.wrap.b32 	%r9652, %r9515, %r9516, 1;
	mov.b64 	%rd1240, {%r9652, %r9651};
	shf.r.wrap.b32 	%r9653, %r9516, %r9515, 8;
	shf.r.wrap.b32 	%r9654, %r9515, %r9516, 8;
	mov.b64 	%rd1241, {%r9654, %r9653};
	shr.u64 	%rd1242, %rd1052, 7;
	xor.b64  	%rd1243, %rd1240, %rd1242;
	xor.b64  	%rd1244, %rd1243, %rd1241;
	add.s64 	%rd1245, %rd1156, %rd655;
	add.s64 	%rd1246, %rd1245, %rd1239;
	add.s64 	%rd1247, %rd1246, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9655,%dummy}, %rd1028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9656}, %rd1028;
	}
	shf.r.wrap.b32 	%r9657, %r9656, %r9655, 14;
	shf.r.wrap.b32 	%r9658, %r9655, %r9656, 14;
	mov.b64 	%rd1248, {%r9658, %r9657};
	shf.r.wrap.b32 	%r9659, %r9656, %r9655, 18;
	shf.r.wrap.b32 	%r9660, %r9655, %r9656, 18;
	mov.b64 	%rd1249, {%r9660, %r9659};
	xor.b64  	%rd1250, %rd1249, %rd1248;
	shf.l.wrap.b32 	%r9661, %r9655, %r9656, 23;
	shf.l.wrap.b32 	%r9662, %r9656, %r9655, 23;
	mov.b64 	%rd1251, {%r9662, %r9661};
	xor.b64  	%rd1252, %rd1250, %rd1251;
	xor.b64  	%rd1253, %rd980, %rd1004;
	and.b64  	%rd1254, %rd1253, %rd1028;
	xor.b64  	%rd1255, %rd1254, %rd980;
	add.s64 	%rd1256, %rd1255, %rd956;
	add.s64 	%rd1257, %rd1256, %rd1052;
	add.s64 	%rd1258, %rd1257, %rd2742;
	add.s64 	%rd1259, %rd1258, %rd1252;
	add.s64 	%rd1260, %rd1259, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9663,%dummy}, %rd1039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9664}, %rd1039;
	}
	shf.r.wrap.b32 	%r9665, %r9664, %r9663, 28;
	shf.r.wrap.b32 	%r9666, %r9663, %r9664, 28;
	mov.b64 	%rd1261, {%r9666, %r9665};
	shf.l.wrap.b32 	%r9667, %r9663, %r9664, 30;
	shf.l.wrap.b32 	%r9668, %r9664, %r9663, 30;
	mov.b64 	%rd1262, {%r9668, %r9667};
	xor.b64  	%rd1263, %rd1262, %rd1261;
	shf.l.wrap.b32 	%r9669, %r9663, %r9664, 25;
	shf.l.wrap.b32 	%r9670, %r9664, %r9663, 25;
	mov.b64 	%rd1264, {%r9670, %r9669};
	xor.b64  	%rd1265, %rd1263, %rd1264;
	xor.b64  	%rd1266, %rd1039, %rd991;
	xor.b64  	%rd1267, %rd1039, %rd1015;
	and.b64  	%rd1268, %rd1267, %rd1266;
	xor.b64  	%rd1269, %rd1268, %rd1039;
	add.s64 	%rd1270, %rd1259, %rd1269;
	add.s64 	%rd1271, %rd1270, %rd1265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9671,%dummy}, %rd1260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9672}, %rd1260;
	}
	shf.r.wrap.b32 	%r9673, %r9672, %r9671, 14;
	shf.r.wrap.b32 	%r9674, %r9671, %r9672, 14;
	mov.b64 	%rd1272, {%r9674, %r9673};
	shf.r.wrap.b32 	%r9675, %r9672, %r9671, 18;
	shf.r.wrap.b32 	%r9676, %r9671, %r9672, 18;
	mov.b64 	%rd1273, {%r9676, %r9675};
	xor.b64  	%rd1274, %rd1273, %rd1272;
	shf.l.wrap.b32 	%r9677, %r9671, %r9672, 23;
	shf.l.wrap.b32 	%r9678, %r9672, %r9671, 23;
	mov.b64 	%rd1275, {%r9678, %r9677};
	xor.b64  	%rd1276, %rd1274, %rd1275;
	xor.b64  	%rd1277, %rd1004, %rd1028;
	and.b64  	%rd1278, %rd1260, %rd1277;
	xor.b64  	%rd1279, %rd1278, %rd1004;
	add.s64 	%rd1280, %rd1065, %rd980;
	add.s64 	%rd1281, %rd1280, %rd2743;
	add.s64 	%rd1282, %rd1281, %rd1279;
	add.s64 	%rd1283, %rd1282, %rd1276;
	add.s64 	%rd1284, %rd1283, %rd991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9679,%dummy}, %rd1271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9680}, %rd1271;
	}
	shf.r.wrap.b32 	%r9681, %r9680, %r9679, 28;
	shf.r.wrap.b32 	%r9682, %r9679, %r9680, 28;
	mov.b64 	%rd1285, {%r9682, %r9681};
	shf.l.wrap.b32 	%r9683, %r9679, %r9680, 30;
	shf.l.wrap.b32 	%r9684, %r9680, %r9679, 30;
	mov.b64 	%rd1286, {%r9684, %r9683};
	xor.b64  	%rd1287, %rd1286, %rd1285;
	shf.l.wrap.b32 	%r9685, %r9679, %r9680, 25;
	shf.l.wrap.b32 	%r9686, %r9680, %r9679, 25;
	mov.b64 	%rd1288, {%r9686, %r9685};
	xor.b64  	%rd1289, %rd1287, %rd1288;
	xor.b64  	%rd1290, %rd1271, %rd1015;
	xor.b64  	%rd1291, %rd1271, %rd1039;
	and.b64  	%rd1292, %rd1291, %rd1290;
	xor.b64  	%rd1293, %rd1292, %rd1271;
	add.s64 	%rd1294, %rd1283, %rd1293;
	add.s64 	%rd1295, %rd1294, %rd1289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9687,%dummy}, %rd1284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9688}, %rd1284;
	}
	shf.r.wrap.b32 	%r9689, %r9688, %r9687, 14;
	shf.r.wrap.b32 	%r9690, %r9687, %r9688, 14;
	mov.b64 	%rd1296, {%r9690, %r9689};
	shf.r.wrap.b32 	%r9691, %r9688, %r9687, 18;
	shf.r.wrap.b32 	%r9692, %r9687, %r9688, 18;
	mov.b64 	%rd1297, {%r9692, %r9691};
	xor.b64  	%rd1298, %rd1297, %rd1296;
	shf.l.wrap.b32 	%r9693, %r9687, %r9688, 23;
	shf.l.wrap.b32 	%r9694, %r9688, %r9687, 23;
	mov.b64 	%rd1299, {%r9694, %r9693};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	xor.b64  	%rd1301, %rd1260, %rd1028;
	and.b64  	%rd1302, %rd1284, %rd1301;
	xor.b64  	%rd1303, %rd1302, %rd1028;
	add.s64 	%rd1304, %rd1078, %rd1004;
	add.s64 	%rd1305, %rd1304, %rd2744;
	add.s64 	%rd1306, %rd1305, %rd1303;
	add.s64 	%rd1307, %rd1306, %rd1300;
	add.s64 	%rd1308, %rd1307, %rd1015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9695,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9696}, %rd1295;
	}
	shf.r.wrap.b32 	%r9697, %r9696, %r9695, 28;
	shf.r.wrap.b32 	%r9698, %r9695, %r9696, 28;
	mov.b64 	%rd1309, {%r9698, %r9697};
	shf.l.wrap.b32 	%r9699, %r9695, %r9696, 30;
	shf.l.wrap.b32 	%r9700, %r9696, %r9695, 30;
	mov.b64 	%rd1310, {%r9700, %r9699};
	xor.b64  	%rd1311, %rd1310, %rd1309;
	shf.l.wrap.b32 	%r9701, %r9695, %r9696, 25;
	shf.l.wrap.b32 	%r9702, %r9696, %r9695, 25;
	mov.b64 	%rd1312, {%r9702, %r9701};
	xor.b64  	%rd1313, %rd1311, %rd1312;
	xor.b64  	%rd1314, %rd1295, %rd1039;
	xor.b64  	%rd1315, %rd1295, %rd1271;
	and.b64  	%rd1316, %rd1315, %rd1314;
	xor.b64  	%rd1317, %rd1316, %rd1295;
	add.s64 	%rd1318, %rd1307, %rd1317;
	add.s64 	%rd1319, %rd1318, %rd1313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9703,%dummy}, %rd1308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9704}, %rd1308;
	}
	shf.r.wrap.b32 	%r9705, %r9704, %r9703, 14;
	shf.r.wrap.b32 	%r9706, %r9703, %r9704, 14;
	mov.b64 	%rd1320, {%r9706, %r9705};
	shf.r.wrap.b32 	%r9707, %r9704, %r9703, 18;
	shf.r.wrap.b32 	%r9708, %r9703, %r9704, 18;
	mov.b64 	%rd1321, {%r9708, %r9707};
	xor.b64  	%rd1322, %rd1321, %rd1320;
	shf.l.wrap.b32 	%r9709, %r9703, %r9704, 23;
	shf.l.wrap.b32 	%r9710, %r9704, %r9703, 23;
	mov.b64 	%rd1323, {%r9710, %r9709};
	xor.b64  	%rd1324, %rd1322, %rd1323;
	xor.b64  	%rd1325, %rd1284, %rd1260;
	and.b64  	%rd1326, %rd1308, %rd1325;
	xor.b64  	%rd1327, %rd1326, %rd1260;
	add.s64 	%rd1328, %rd1091, %rd1028;
	add.s64 	%rd1329, %rd1328, %rd2745;
	add.s64 	%rd1330, %rd1329, %rd1327;
	add.s64 	%rd1331, %rd1330, %rd1324;
	add.s64 	%rd1332, %rd1331, %rd1039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9711,%dummy}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9712}, %rd1319;
	}
	shf.r.wrap.b32 	%r9713, %r9712, %r9711, 28;
	shf.r.wrap.b32 	%r9714, %r9711, %r9712, 28;
	mov.b64 	%rd1333, {%r9714, %r9713};
	shf.l.wrap.b32 	%r9715, %r9711, %r9712, 30;
	shf.l.wrap.b32 	%r9716, %r9712, %r9711, 30;
	mov.b64 	%rd1334, {%r9716, %r9715};
	xor.b64  	%rd1335, %rd1334, %rd1333;
	shf.l.wrap.b32 	%r9717, %r9711, %r9712, 25;
	shf.l.wrap.b32 	%r9718, %r9712, %r9711, 25;
	mov.b64 	%rd1336, {%r9718, %r9717};
	xor.b64  	%rd1337, %rd1335, %rd1336;
	xor.b64  	%rd1338, %rd1319, %rd1271;
	xor.b64  	%rd1339, %rd1319, %rd1295;
	and.b64  	%rd1340, %rd1339, %rd1338;
	xor.b64  	%rd1341, %rd1340, %rd1319;
	add.s64 	%rd1342, %rd1331, %rd1341;
	add.s64 	%rd1343, %rd1342, %rd1337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9719,%dummy}, %rd1332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9720}, %rd1332;
	}
	shf.r.wrap.b32 	%r9721, %r9720, %r9719, 14;
	shf.r.wrap.b32 	%r9722, %r9719, %r9720, 14;
	mov.b64 	%rd1344, {%r9722, %r9721};
	shf.r.wrap.b32 	%r9723, %r9720, %r9719, 18;
	shf.r.wrap.b32 	%r9724, %r9719, %r9720, 18;
	mov.b64 	%rd1345, {%r9724, %r9723};
	xor.b64  	%rd1346, %rd1345, %rd1344;
	shf.l.wrap.b32 	%r9725, %r9719, %r9720, 23;
	shf.l.wrap.b32 	%r9726, %r9720, %r9719, 23;
	mov.b64 	%rd1347, {%r9726, %r9725};
	xor.b64  	%rd1348, %rd1346, %rd1347;
	xor.b64  	%rd1349, %rd1308, %rd1284;
	and.b64  	%rd1350, %rd1332, %rd1349;
	xor.b64  	%rd1351, %rd1350, %rd1284;
	add.s64 	%rd1352, %rd1260, %rd1104;
	add.s64 	%rd1353, %rd1352, %rd2746;
	add.s64 	%rd1354, %rd1353, %rd1351;
	add.s64 	%rd1355, %rd1354, %rd1348;
	add.s64 	%rd1356, %rd1355, %rd1271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9727,%dummy}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9728}, %rd1343;
	}
	shf.r.wrap.b32 	%r9729, %r9728, %r9727, 28;
	shf.r.wrap.b32 	%r9730, %r9727, %r9728, 28;
	mov.b64 	%rd1357, {%r9730, %r9729};
	shf.l.wrap.b32 	%r9731, %r9727, %r9728, 30;
	shf.l.wrap.b32 	%r9732, %r9728, %r9727, 30;
	mov.b64 	%rd1358, {%r9732, %r9731};
	xor.b64  	%rd1359, %rd1358, %rd1357;
	shf.l.wrap.b32 	%r9733, %r9727, %r9728, 25;
	shf.l.wrap.b32 	%r9734, %r9728, %r9727, 25;
	mov.b64 	%rd1360, {%r9734, %r9733};
	xor.b64  	%rd1361, %rd1359, %rd1360;
	xor.b64  	%rd1362, %rd1343, %rd1295;
	xor.b64  	%rd1363, %rd1343, %rd1319;
	and.b64  	%rd1364, %rd1363, %rd1362;
	xor.b64  	%rd1365, %rd1364, %rd1343;
	add.s64 	%rd1366, %rd1355, %rd1365;
	add.s64 	%rd1367, %rd1366, %rd1361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9735,%dummy}, %rd1356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9736}, %rd1356;
	}
	shf.r.wrap.b32 	%r9737, %r9736, %r9735, 14;
	shf.r.wrap.b32 	%r9738, %r9735, %r9736, 14;
	mov.b64 	%rd1368, {%r9738, %r9737};
	shf.r.wrap.b32 	%r9739, %r9736, %r9735, 18;
	shf.r.wrap.b32 	%r9740, %r9735, %r9736, 18;
	mov.b64 	%rd1369, {%r9740, %r9739};
	xor.b64  	%rd1370, %rd1369, %rd1368;
	shf.l.wrap.b32 	%r9741, %r9735, %r9736, 23;
	shf.l.wrap.b32 	%r9742, %r9736, %r9735, 23;
	mov.b64 	%rd1371, {%r9742, %r9741};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	xor.b64  	%rd1373, %rd1332, %rd1308;
	and.b64  	%rd1374, %rd1356, %rd1373;
	xor.b64  	%rd1375, %rd1374, %rd1308;
	add.s64 	%rd1376, %rd1284, %rd1117;
	add.s64 	%rd1377, %rd1376, %rd2747;
	add.s64 	%rd1378, %rd1377, %rd1375;
	add.s64 	%rd1379, %rd1378, %rd1372;
	add.s64 	%rd1380, %rd1379, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9743,%dummy}, %rd1367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9744}, %rd1367;
	}
	shf.r.wrap.b32 	%r9745, %r9744, %r9743, 28;
	shf.r.wrap.b32 	%r9746, %r9743, %r9744, 28;
	mov.b64 	%rd1381, {%r9746, %r9745};
	shf.l.wrap.b32 	%r9747, %r9743, %r9744, 30;
	shf.l.wrap.b32 	%r9748, %r9744, %r9743, 30;
	mov.b64 	%rd1382, {%r9748, %r9747};
	xor.b64  	%rd1383, %rd1382, %rd1381;
	shf.l.wrap.b32 	%r9749, %r9743, %r9744, 25;
	shf.l.wrap.b32 	%r9750, %r9744, %r9743, 25;
	mov.b64 	%rd1384, {%r9750, %r9749};
	xor.b64  	%rd1385, %rd1383, %rd1384;
	xor.b64  	%rd1386, %rd1367, %rd1319;
	xor.b64  	%rd1387, %rd1367, %rd1343;
	and.b64  	%rd1388, %rd1387, %rd1386;
	xor.b64  	%rd1389, %rd1388, %rd1367;
	add.s64 	%rd1390, %rd1379, %rd1389;
	add.s64 	%rd1391, %rd1390, %rd1385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9751,%dummy}, %rd1380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9752}, %rd1380;
	}
	shf.r.wrap.b32 	%r9753, %r9752, %r9751, 14;
	shf.r.wrap.b32 	%r9754, %r9751, %r9752, 14;
	mov.b64 	%rd1392, {%r9754, %r9753};
	shf.r.wrap.b32 	%r9755, %r9752, %r9751, 18;
	shf.r.wrap.b32 	%r9756, %r9751, %r9752, 18;
	mov.b64 	%rd1393, {%r9756, %r9755};
	xor.b64  	%rd1394, %rd1393, %rd1392;
	shf.l.wrap.b32 	%r9757, %r9751, %r9752, 23;
	shf.l.wrap.b32 	%r9758, %r9752, %r9751, 23;
	mov.b64 	%rd1395, {%r9758, %r9757};
	xor.b64  	%rd1396, %rd1394, %rd1395;
	xor.b64  	%rd1397, %rd1356, %rd1332;
	and.b64  	%rd1398, %rd1380, %rd1397;
	xor.b64  	%rd1399, %rd1398, %rd1332;
	add.s64 	%rd1400, %rd1308, %rd1130;
	add.s64 	%rd1401, %rd1400, %rd2748;
	add.s64 	%rd1402, %rd1401, %rd1399;
	add.s64 	%rd1403, %rd1402, %rd1396;
	add.s64 	%rd1404, %rd1403, %rd1319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9759,%dummy}, %rd1391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9760}, %rd1391;
	}
	shf.r.wrap.b32 	%r9761, %r9760, %r9759, 28;
	shf.r.wrap.b32 	%r9762, %r9759, %r9760, 28;
	mov.b64 	%rd1405, {%r9762, %r9761};
	shf.l.wrap.b32 	%r9763, %r9759, %r9760, 30;
	shf.l.wrap.b32 	%r9764, %r9760, %r9759, 30;
	mov.b64 	%rd1406, {%r9764, %r9763};
	xor.b64  	%rd1407, %rd1406, %rd1405;
	shf.l.wrap.b32 	%r9765, %r9759, %r9760, 25;
	shf.l.wrap.b32 	%r9766, %r9760, %r9759, 25;
	mov.b64 	%rd1408, {%r9766, %r9765};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	xor.b64  	%rd1410, %rd1391, %rd1343;
	xor.b64  	%rd1411, %rd1391, %rd1367;
	and.b64  	%rd1412, %rd1411, %rd1410;
	xor.b64  	%rd1413, %rd1412, %rd1391;
	add.s64 	%rd1414, %rd1403, %rd1413;
	add.s64 	%rd1415, %rd1414, %rd1409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9767,%dummy}, %rd1404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9768}, %rd1404;
	}
	shf.r.wrap.b32 	%r9769, %r9768, %r9767, 14;
	shf.r.wrap.b32 	%r9770, %r9767, %r9768, 14;
	mov.b64 	%rd1416, {%r9770, %r9769};
	shf.r.wrap.b32 	%r9771, %r9768, %r9767, 18;
	shf.r.wrap.b32 	%r9772, %r9767, %r9768, 18;
	mov.b64 	%rd1417, {%r9772, %r9771};
	xor.b64  	%rd1418, %rd1417, %rd1416;
	shf.l.wrap.b32 	%r9773, %r9767, %r9768, 23;
	shf.l.wrap.b32 	%r9774, %r9768, %r9767, 23;
	mov.b64 	%rd1419, {%r9774, %r9773};
	xor.b64  	%rd1420, %rd1418, %rd1419;
	xor.b64  	%rd1421, %rd1380, %rd1356;
	and.b64  	%rd1422, %rd1404, %rd1421;
	xor.b64  	%rd1423, %rd1422, %rd1356;
	add.s64 	%rd1424, %rd1332, %rd1143;
	add.s64 	%rd1425, %rd1424, %rd2749;
	add.s64 	%rd1426, %rd1425, %rd1423;
	add.s64 	%rd1427, %rd1426, %rd1420;
	add.s64 	%rd1428, %rd1427, %rd1343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9775,%dummy}, %rd1415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9776}, %rd1415;
	}
	shf.r.wrap.b32 	%r9777, %r9776, %r9775, 28;
	shf.r.wrap.b32 	%r9778, %r9775, %r9776, 28;
	mov.b64 	%rd1429, {%r9778, %r9777};
	shf.l.wrap.b32 	%r9779, %r9775, %r9776, 30;
	shf.l.wrap.b32 	%r9780, %r9776, %r9775, 30;
	mov.b64 	%rd1430, {%r9780, %r9779};
	xor.b64  	%rd1431, %rd1430, %rd1429;
	shf.l.wrap.b32 	%r9781, %r9775, %r9776, 25;
	shf.l.wrap.b32 	%r9782, %r9776, %r9775, 25;
	mov.b64 	%rd1432, {%r9782, %r9781};
	xor.b64  	%rd1433, %rd1431, %rd1432;
	xor.b64  	%rd1434, %rd1415, %rd1367;
	xor.b64  	%rd1435, %rd1415, %rd1391;
	and.b64  	%rd1436, %rd1435, %rd1434;
	xor.b64  	%rd1437, %rd1436, %rd1415;
	add.s64 	%rd1438, %rd1427, %rd1437;
	add.s64 	%rd1439, %rd1438, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9783,%dummy}, %rd1428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9784}, %rd1428;
	}
	shf.r.wrap.b32 	%r9785, %r9784, %r9783, 14;
	shf.r.wrap.b32 	%r9786, %r9783, %r9784, 14;
	mov.b64 	%rd1440, {%r9786, %r9785};
	shf.r.wrap.b32 	%r9787, %r9784, %r9783, 18;
	shf.r.wrap.b32 	%r9788, %r9783, %r9784, 18;
	mov.b64 	%rd1441, {%r9788, %r9787};
	xor.b64  	%rd1442, %rd1441, %rd1440;
	shf.l.wrap.b32 	%r9789, %r9783, %r9784, 23;
	shf.l.wrap.b32 	%r9790, %r9784, %r9783, 23;
	mov.b64 	%rd1443, {%r9790, %r9789};
	xor.b64  	%rd1444, %rd1442, %rd1443;
	xor.b64  	%rd1445, %rd1404, %rd1380;
	and.b64  	%rd1446, %rd1428, %rd1445;
	xor.b64  	%rd1447, %rd1446, %rd1380;
	add.s64 	%rd1448, %rd1356, %rd1156;
	add.s64 	%rd1449, %rd1448, %rd2750;
	add.s64 	%rd1450, %rd1449, %rd1447;
	add.s64 	%rd1451, %rd1450, %rd1444;
	add.s64 	%rd1452, %rd1451, %rd1367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9791,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9792}, %rd1439;
	}
	shf.r.wrap.b32 	%r9793, %r9792, %r9791, 28;
	shf.r.wrap.b32 	%r9794, %r9791, %r9792, 28;
	mov.b64 	%rd1453, {%r9794, %r9793};
	shf.l.wrap.b32 	%r9795, %r9791, %r9792, 30;
	shf.l.wrap.b32 	%r9796, %r9792, %r9791, 30;
	mov.b64 	%rd1454, {%r9796, %r9795};
	xor.b64  	%rd1455, %rd1454, %rd1453;
	shf.l.wrap.b32 	%r9797, %r9791, %r9792, 25;
	shf.l.wrap.b32 	%r9798, %r9792, %r9791, 25;
	mov.b64 	%rd1456, {%r9798, %r9797};
	xor.b64  	%rd1457, %rd1455, %rd1456;
	xor.b64  	%rd1458, %rd1439, %rd1391;
	xor.b64  	%rd1459, %rd1439, %rd1415;
	and.b64  	%rd1460, %rd1459, %rd1458;
	xor.b64  	%rd1461, %rd1460, %rd1439;
	add.s64 	%rd1462, %rd1451, %rd1461;
	add.s64 	%rd1463, %rd1462, %rd1457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9799,%dummy}, %rd1452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9800}, %rd1452;
	}
	shf.r.wrap.b32 	%r9801, %r9800, %r9799, 14;
	shf.r.wrap.b32 	%r9802, %r9799, %r9800, 14;
	mov.b64 	%rd1464, {%r9802, %r9801};
	shf.r.wrap.b32 	%r9803, %r9800, %r9799, 18;
	shf.r.wrap.b32 	%r9804, %r9799, %r9800, 18;
	mov.b64 	%rd1465, {%r9804, %r9803};
	xor.b64  	%rd1466, %rd1465, %rd1464;
	shf.l.wrap.b32 	%r9805, %r9799, %r9800, 23;
	shf.l.wrap.b32 	%r9806, %r9800, %r9799, 23;
	mov.b64 	%rd1467, {%r9806, %r9805};
	xor.b64  	%rd1468, %rd1466, %rd1467;
	xor.b64  	%rd1469, %rd1428, %rd1404;
	and.b64  	%rd1470, %rd1452, %rd1469;
	xor.b64  	%rd1471, %rd1470, %rd1404;
	add.s64 	%rd1472, %rd1380, %rd1169;
	add.s64 	%rd1473, %rd1472, %rd2751;
	add.s64 	%rd1474, %rd1473, %rd1471;
	add.s64 	%rd1475, %rd1474, %rd1468;
	add.s64 	%rd1476, %rd1475, %rd1391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9807,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9808}, %rd1463;
	}
	shf.r.wrap.b32 	%r9809, %r9808, %r9807, 28;
	shf.r.wrap.b32 	%r9810, %r9807, %r9808, 28;
	mov.b64 	%rd1477, {%r9810, %r9809};
	shf.l.wrap.b32 	%r9811, %r9807, %r9808, 30;
	shf.l.wrap.b32 	%r9812, %r9808, %r9807, 30;
	mov.b64 	%rd1478, {%r9812, %r9811};
	xor.b64  	%rd1479, %rd1478, %rd1477;
	shf.l.wrap.b32 	%r9813, %r9807, %r9808, 25;
	shf.l.wrap.b32 	%r9814, %r9808, %r9807, 25;
	mov.b64 	%rd1480, {%r9814, %r9813};
	xor.b64  	%rd1481, %rd1479, %rd1480;
	xor.b64  	%rd1482, %rd1463, %rd1415;
	xor.b64  	%rd1483, %rd1463, %rd1439;
	and.b64  	%rd1484, %rd1483, %rd1482;
	xor.b64  	%rd1485, %rd1484, %rd1463;
	add.s64 	%rd1486, %rd1475, %rd1485;
	add.s64 	%rd1487, %rd1486, %rd1481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9815,%dummy}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9816}, %rd1476;
	}
	shf.r.wrap.b32 	%r9817, %r9816, %r9815, 14;
	shf.r.wrap.b32 	%r9818, %r9815, %r9816, 14;
	mov.b64 	%rd1488, {%r9818, %r9817};
	shf.r.wrap.b32 	%r9819, %r9816, %r9815, 18;
	shf.r.wrap.b32 	%r9820, %r9815, %r9816, 18;
	mov.b64 	%rd1489, {%r9820, %r9819};
	xor.b64  	%rd1490, %rd1489, %rd1488;
	shf.l.wrap.b32 	%r9821, %r9815, %r9816, 23;
	shf.l.wrap.b32 	%r9822, %r9816, %r9815, 23;
	mov.b64 	%rd1491, {%r9822, %r9821};
	xor.b64  	%rd1492, %rd1490, %rd1491;
	xor.b64  	%rd1493, %rd1452, %rd1428;
	and.b64  	%rd1494, %rd1476, %rd1493;
	xor.b64  	%rd1495, %rd1494, %rd1428;
	add.s64 	%rd1496, %rd1404, %rd1182;
	add.s64 	%rd1497, %rd1496, %rd2752;
	add.s64 	%rd1498, %rd1497, %rd1495;
	add.s64 	%rd1499, %rd1498, %rd1492;
	add.s64 	%rd1500, %rd1499, %rd1415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9823,%dummy}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9824}, %rd1487;
	}
	shf.r.wrap.b32 	%r9825, %r9824, %r9823, 28;
	shf.r.wrap.b32 	%r9826, %r9823, %r9824, 28;
	mov.b64 	%rd1501, {%r9826, %r9825};
	shf.l.wrap.b32 	%r9827, %r9823, %r9824, 30;
	shf.l.wrap.b32 	%r9828, %r9824, %r9823, 30;
	mov.b64 	%rd1502, {%r9828, %r9827};
	xor.b64  	%rd1503, %rd1502, %rd1501;
	shf.l.wrap.b32 	%r9829, %r9823, %r9824, 25;
	shf.l.wrap.b32 	%r9830, %r9824, %r9823, 25;
	mov.b64 	%rd1504, {%r9830, %r9829};
	xor.b64  	%rd1505, %rd1503, %rd1504;
	xor.b64  	%rd1506, %rd1487, %rd1439;
	xor.b64  	%rd1507, %rd1487, %rd1463;
	and.b64  	%rd1508, %rd1507, %rd1506;
	xor.b64  	%rd1509, %rd1508, %rd1487;
	add.s64 	%rd1510, %rd1499, %rd1509;
	add.s64 	%rd1511, %rd1510, %rd1505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9831,%dummy}, %rd1500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9832}, %rd1500;
	}
	shf.r.wrap.b32 	%r9833, %r9832, %r9831, 14;
	shf.r.wrap.b32 	%r9834, %r9831, %r9832, 14;
	mov.b64 	%rd1512, {%r9834, %r9833};
	shf.r.wrap.b32 	%r9835, %r9832, %r9831, 18;
	shf.r.wrap.b32 	%r9836, %r9831, %r9832, 18;
	mov.b64 	%rd1513, {%r9836, %r9835};
	xor.b64  	%rd1514, %rd1513, %rd1512;
	shf.l.wrap.b32 	%r9837, %r9831, %r9832, 23;
	shf.l.wrap.b32 	%r9838, %r9832, %r9831, 23;
	mov.b64 	%rd1515, {%r9838, %r9837};
	xor.b64  	%rd1516, %rd1514, %rd1515;
	xor.b64  	%rd1517, %rd1476, %rd1452;
	and.b64  	%rd1518, %rd1500, %rd1517;
	xor.b64  	%rd1519, %rd1518, %rd1452;
	add.s64 	%rd1520, %rd1428, %rd1195;
	add.s64 	%rd1521, %rd1520, %rd2753;
	add.s64 	%rd1522, %rd1521, %rd1519;
	add.s64 	%rd1523, %rd1522, %rd1516;
	add.s64 	%rd1524, %rd1523, %rd1439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9839,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9840}, %rd1511;
	}
	shf.r.wrap.b32 	%r9841, %r9840, %r9839, 28;
	shf.r.wrap.b32 	%r9842, %r9839, %r9840, 28;
	mov.b64 	%rd1525, {%r9842, %r9841};
	shf.l.wrap.b32 	%r9843, %r9839, %r9840, 30;
	shf.l.wrap.b32 	%r9844, %r9840, %r9839, 30;
	mov.b64 	%rd1526, {%r9844, %r9843};
	xor.b64  	%rd1527, %rd1526, %rd1525;
	shf.l.wrap.b32 	%r9845, %r9839, %r9840, 25;
	shf.l.wrap.b32 	%r9846, %r9840, %r9839, 25;
	mov.b64 	%rd1528, {%r9846, %r9845};
	xor.b64  	%rd1529, %rd1527, %rd1528;
	xor.b64  	%rd1530, %rd1511, %rd1463;
	xor.b64  	%rd1531, %rd1511, %rd1487;
	and.b64  	%rd1532, %rd1531, %rd1530;
	xor.b64  	%rd1533, %rd1532, %rd1511;
	add.s64 	%rd1534, %rd1523, %rd1533;
	add.s64 	%rd1535, %rd1534, %rd1529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9847,%dummy}, %rd1524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9848}, %rd1524;
	}
	shf.r.wrap.b32 	%r9849, %r9848, %r9847, 14;
	shf.r.wrap.b32 	%r9850, %r9847, %r9848, 14;
	mov.b64 	%rd1536, {%r9850, %r9849};
	shf.r.wrap.b32 	%r9851, %r9848, %r9847, 18;
	shf.r.wrap.b32 	%r9852, %r9847, %r9848, 18;
	mov.b64 	%rd1537, {%r9852, %r9851};
	xor.b64  	%rd1538, %rd1537, %rd1536;
	shf.l.wrap.b32 	%r9853, %r9847, %r9848, 23;
	shf.l.wrap.b32 	%r9854, %r9848, %r9847, 23;
	mov.b64 	%rd1539, {%r9854, %r9853};
	xor.b64  	%rd1540, %rd1538, %rd1539;
	xor.b64  	%rd1541, %rd1500, %rd1476;
	and.b64  	%rd1542, %rd1524, %rd1541;
	xor.b64  	%rd1543, %rd1542, %rd1476;
	add.s64 	%rd1544, %rd1452, %rd1208;
	add.s64 	%rd1545, %rd1544, %rd2754;
	add.s64 	%rd1546, %rd1545, %rd1543;
	add.s64 	%rd1547, %rd1546, %rd1540;
	add.s64 	%rd1548, %rd1547, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9855,%dummy}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9856}, %rd1535;
	}
	shf.r.wrap.b32 	%r9857, %r9856, %r9855, 28;
	shf.r.wrap.b32 	%r9858, %r9855, %r9856, 28;
	mov.b64 	%rd1549, {%r9858, %r9857};
	shf.l.wrap.b32 	%r9859, %r9855, %r9856, 30;
	shf.l.wrap.b32 	%r9860, %r9856, %r9855, 30;
	mov.b64 	%rd1550, {%r9860, %r9859};
	xor.b64  	%rd1551, %rd1550, %rd1549;
	shf.l.wrap.b32 	%r9861, %r9855, %r9856, 25;
	shf.l.wrap.b32 	%r9862, %r9856, %r9855, 25;
	mov.b64 	%rd1552, {%r9862, %r9861};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	xor.b64  	%rd1554, %rd1535, %rd1487;
	xor.b64  	%rd1555, %rd1535, %rd1511;
	and.b64  	%rd1556, %rd1555, %rd1554;
	xor.b64  	%rd1557, %rd1556, %rd1535;
	add.s64 	%rd1558, %rd1547, %rd1557;
	add.s64 	%rd1559, %rd1558, %rd1553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9863,%dummy}, %rd1548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9864}, %rd1548;
	}
	shf.r.wrap.b32 	%r9865, %r9864, %r9863, 14;
	shf.r.wrap.b32 	%r9866, %r9863, %r9864, 14;
	mov.b64 	%rd1560, {%r9866, %r9865};
	shf.r.wrap.b32 	%r9867, %r9864, %r9863, 18;
	shf.r.wrap.b32 	%r9868, %r9863, %r9864, 18;
	mov.b64 	%rd1561, {%r9868, %r9867};
	xor.b64  	%rd1562, %rd1561, %rd1560;
	shf.l.wrap.b32 	%r9869, %r9863, %r9864, 23;
	shf.l.wrap.b32 	%r9870, %r9864, %r9863, 23;
	mov.b64 	%rd1563, {%r9870, %r9869};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	xor.b64  	%rd1565, %rd1524, %rd1500;
	and.b64  	%rd1566, %rd1548, %rd1565;
	xor.b64  	%rd1567, %rd1566, %rd1500;
	add.s64 	%rd1568, %rd1476, %rd1221;
	add.s64 	%rd1569, %rd1568, %rd2755;
	add.s64 	%rd1570, %rd1569, %rd1567;
	add.s64 	%rd1571, %rd1570, %rd1564;
	add.s64 	%rd1572, %rd1571, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9871,%dummy}, %rd1559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9872}, %rd1559;
	}
	shf.r.wrap.b32 	%r9873, %r9872, %r9871, 28;
	shf.r.wrap.b32 	%r9874, %r9871, %r9872, 28;
	mov.b64 	%rd1573, {%r9874, %r9873};
	shf.l.wrap.b32 	%r9875, %r9871, %r9872, 30;
	shf.l.wrap.b32 	%r9876, %r9872, %r9871, 30;
	mov.b64 	%rd1574, {%r9876, %r9875};
	xor.b64  	%rd1575, %rd1574, %rd1573;
	shf.l.wrap.b32 	%r9877, %r9871, %r9872, 25;
	shf.l.wrap.b32 	%r9878, %r9872, %r9871, 25;
	mov.b64 	%rd1576, {%r9878, %r9877};
	xor.b64  	%rd1577, %rd1575, %rd1576;
	xor.b64  	%rd1578, %rd1559, %rd1511;
	xor.b64  	%rd1579, %rd1559, %rd1535;
	and.b64  	%rd1580, %rd1579, %rd1578;
	xor.b64  	%rd1581, %rd1580, %rd1559;
	add.s64 	%rd1582, %rd1571, %rd1581;
	add.s64 	%rd1583, %rd1582, %rd1577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9879,%dummy}, %rd1572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9880}, %rd1572;
	}
	shf.r.wrap.b32 	%r9881, %r9880, %r9879, 14;
	shf.r.wrap.b32 	%r9882, %r9879, %r9880, 14;
	mov.b64 	%rd1584, {%r9882, %r9881};
	shf.r.wrap.b32 	%r9883, %r9880, %r9879, 18;
	shf.r.wrap.b32 	%r9884, %r9879, %r9880, 18;
	mov.b64 	%rd1585, {%r9884, %r9883};
	xor.b64  	%rd1586, %rd1585, %rd1584;
	shf.l.wrap.b32 	%r9885, %r9879, %r9880, 23;
	shf.l.wrap.b32 	%r9886, %r9880, %r9879, 23;
	mov.b64 	%rd1587, {%r9886, %r9885};
	xor.b64  	%rd1588, %rd1586, %rd1587;
	xor.b64  	%rd1589, %rd1548, %rd1524;
	and.b64  	%rd1590, %rd1572, %rd1589;
	xor.b64  	%rd1591, %rd1590, %rd1524;
	add.s64 	%rd1592, %rd1500, %rd1234;
	add.s64 	%rd1593, %rd1592, %rd2756;
	add.s64 	%rd1594, %rd1593, %rd1591;
	add.s64 	%rd1595, %rd1594, %rd1588;
	add.s64 	%rd1596, %rd1595, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9887,%dummy}, %rd1583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9888}, %rd1583;
	}
	shf.r.wrap.b32 	%r9889, %r9888, %r9887, 28;
	shf.r.wrap.b32 	%r9890, %r9887, %r9888, 28;
	mov.b64 	%rd1597, {%r9890, %r9889};
	shf.l.wrap.b32 	%r9891, %r9887, %r9888, 30;
	shf.l.wrap.b32 	%r9892, %r9888, %r9887, 30;
	mov.b64 	%rd1598, {%r9892, %r9891};
	xor.b64  	%rd1599, %rd1598, %rd1597;
	shf.l.wrap.b32 	%r9893, %r9887, %r9888, 25;
	shf.l.wrap.b32 	%r9894, %r9888, %r9887, 25;
	mov.b64 	%rd1600, {%r9894, %r9893};
	xor.b64  	%rd1601, %rd1599, %rd1600;
	xor.b64  	%rd1602, %rd1583, %rd1535;
	xor.b64  	%rd1603, %rd1583, %rd1559;
	and.b64  	%rd1604, %rd1603, %rd1602;
	xor.b64  	%rd1605, %rd1604, %rd1583;
	add.s64 	%rd1606, %rd1595, %rd1605;
	add.s64 	%rd1607, %rd1606, %rd1601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9895,%dummy}, %rd1596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9896}, %rd1596;
	}
	shf.r.wrap.b32 	%r9897, %r9896, %r9895, 14;
	shf.r.wrap.b32 	%r9898, %r9895, %r9896, 14;
	mov.b64 	%rd1608, {%r9898, %r9897};
	shf.r.wrap.b32 	%r9899, %r9896, %r9895, 18;
	shf.r.wrap.b32 	%r9900, %r9895, %r9896, 18;
	mov.b64 	%rd1609, {%r9900, %r9899};
	xor.b64  	%rd1610, %rd1609, %rd1608;
	shf.l.wrap.b32 	%r9901, %r9895, %r9896, 23;
	shf.l.wrap.b32 	%r9902, %r9896, %r9895, 23;
	mov.b64 	%rd1611, {%r9902, %r9901};
	xor.b64  	%rd1612, %rd1610, %rd1611;
	xor.b64  	%rd1613, %rd1572, %rd1548;
	and.b64  	%rd1614, %rd1596, %rd1613;
	xor.b64  	%rd1615, %rd1614, %rd1548;
	add.s64 	%rd1616, %rd1524, %rd1247;
	add.s64 	%rd1617, %rd1616, %rd2757;
	add.s64 	%rd1618, %rd1617, %rd1615;
	add.s64 	%rd1619, %rd1618, %rd1612;
	add.s64 	%rd1620, %rd1619, %rd1535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9903,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9904}, %rd1607;
	}
	shf.r.wrap.b32 	%r9905, %r9904, %r9903, 28;
	shf.r.wrap.b32 	%r9906, %r9903, %r9904, 28;
	mov.b64 	%rd1621, {%r9906, %r9905};
	shf.l.wrap.b32 	%r9907, %r9903, %r9904, 30;
	shf.l.wrap.b32 	%r9908, %r9904, %r9903, 30;
	mov.b64 	%rd1622, {%r9908, %r9907};
	xor.b64  	%rd1623, %rd1622, %rd1621;
	shf.l.wrap.b32 	%r9909, %r9903, %r9904, 25;
	shf.l.wrap.b32 	%r9910, %r9904, %r9903, 25;
	mov.b64 	%rd1624, {%r9910, %r9909};
	xor.b64  	%rd1625, %rd1623, %rd1624;
	xor.b64  	%rd1626, %rd1607, %rd1559;
	xor.b64  	%rd1627, %rd1607, %rd1583;
	and.b64  	%rd1628, %rd1627, %rd1626;
	xor.b64  	%rd1629, %rd1628, %rd1607;
	add.s64 	%rd1630, %rd1619, %rd1629;
	add.s64 	%rd1631, %rd1630, %rd1625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9911,%dummy}, %rd1234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9912}, %rd1234;
	}
	shf.r.wrap.b32 	%r9913, %r9912, %r9911, 19;
	shf.r.wrap.b32 	%r9914, %r9911, %r9912, 19;
	mov.b64 	%rd1632, {%r9914, %r9913};
	shf.l.wrap.b32 	%r9915, %r9911, %r9912, 3;
	shf.l.wrap.b32 	%r9916, %r9912, %r9911, 3;
	mov.b64 	%rd1633, {%r9916, %r9915};
	shr.u64 	%rd1634, %rd1234, 6;
	xor.b64  	%rd1635, %rd1632, %rd1634;
	xor.b64  	%rd1636, %rd1635, %rd1633;
	shf.r.wrap.b32 	%r9917, %r9526, %r9525, 1;
	shf.r.wrap.b32 	%r9918, %r9525, %r9526, 1;
	mov.b64 	%rd1637, {%r9918, %r9917};
	shf.r.wrap.b32 	%r9919, %r9526, %r9525, 8;
	shf.r.wrap.b32 	%r9920, %r9525, %r9526, 8;
	mov.b64 	%rd1638, {%r9920, %r9919};
	shr.u64 	%rd1639, %rd1065, 7;
	xor.b64  	%rd1640, %rd1637, %rd1639;
	xor.b64  	%rd1641, %rd1640, %rd1638;
	add.s64 	%rd1642, %rd1052, %rd1169;
	add.s64 	%rd1643, %rd1642, %rd1636;
	add.s64 	%rd1644, %rd1643, %rd1641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9921,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9922}, %rd1247;
	}
	shf.r.wrap.b32 	%r9923, %r9922, %r9921, 19;
	shf.r.wrap.b32 	%r9924, %r9921, %r9922, 19;
	mov.b64 	%rd1645, {%r9924, %r9923};
	shf.l.wrap.b32 	%r9925, %r9921, %r9922, 3;
	shf.l.wrap.b32 	%r9926, %r9922, %r9921, 3;
	mov.b64 	%rd1646, {%r9926, %r9925};
	shr.u64 	%rd1647, %rd1247, 6;
	xor.b64  	%rd1648, %rd1645, %rd1647;
	xor.b64  	%rd1649, %rd1648, %rd1646;
	shf.r.wrap.b32 	%r9927, %r9536, %r9535, 1;
	shf.r.wrap.b32 	%r9928, %r9535, %r9536, 1;
	mov.b64 	%rd1650, {%r9928, %r9927};
	shf.r.wrap.b32 	%r9929, %r9536, %r9535, 8;
	shf.r.wrap.b32 	%r9930, %r9535, %r9536, 8;
	mov.b64 	%rd1651, {%r9930, %r9929};
	shr.u64 	%rd1652, %rd1078, 7;
	xor.b64  	%rd1653, %rd1650, %rd1652;
	xor.b64  	%rd1654, %rd1653, %rd1651;
	add.s64 	%rd1655, %rd1065, %rd1182;
	add.s64 	%rd1656, %rd1655, %rd1649;
	add.s64 	%rd1657, %rd1656, %rd1654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9931,%dummy}, %rd1644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9932}, %rd1644;
	}
	shf.r.wrap.b32 	%r9933, %r9932, %r9931, 19;
	shf.r.wrap.b32 	%r9934, %r9931, %r9932, 19;
	mov.b64 	%rd1658, {%r9934, %r9933};
	shf.l.wrap.b32 	%r9935, %r9931, %r9932, 3;
	shf.l.wrap.b32 	%r9936, %r9932, %r9931, 3;
	mov.b64 	%rd1659, {%r9936, %r9935};
	shr.u64 	%rd1660, %rd1644, 6;
	xor.b64  	%rd1661, %rd1658, %rd1660;
	xor.b64  	%rd1662, %rd1661, %rd1659;
	shf.r.wrap.b32 	%r9937, %r9546, %r9545, 1;
	shf.r.wrap.b32 	%r9938, %r9545, %r9546, 1;
	mov.b64 	%rd1663, {%r9938, %r9937};
	shf.r.wrap.b32 	%r9939, %r9546, %r9545, 8;
	shf.r.wrap.b32 	%r9940, %r9545, %r9546, 8;
	mov.b64 	%rd1664, {%r9940, %r9939};
	shr.u64 	%rd1665, %rd1091, 7;
	xor.b64  	%rd1666, %rd1663, %rd1665;
	xor.b64  	%rd1667, %rd1666, %rd1664;
	add.s64 	%rd1668, %rd1078, %rd1195;
	add.s64 	%rd1669, %rd1668, %rd1662;
	add.s64 	%rd1670, %rd1669, %rd1667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9941,%dummy}, %rd1657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9942}, %rd1657;
	}
	shf.r.wrap.b32 	%r9943, %r9942, %r9941, 19;
	shf.r.wrap.b32 	%r9944, %r9941, %r9942, 19;
	mov.b64 	%rd1671, {%r9944, %r9943};
	shf.l.wrap.b32 	%r9945, %r9941, %r9942, 3;
	shf.l.wrap.b32 	%r9946, %r9942, %r9941, 3;
	mov.b64 	%rd1672, {%r9946, %r9945};
	shr.u64 	%rd1673, %rd1657, 6;
	xor.b64  	%rd1674, %rd1671, %rd1673;
	xor.b64  	%rd1675, %rd1674, %rd1672;
	shf.r.wrap.b32 	%r9947, %r9556, %r9555, 1;
	shf.r.wrap.b32 	%r9948, %r9555, %r9556, 1;
	mov.b64 	%rd1676, {%r9948, %r9947};
	shf.r.wrap.b32 	%r9949, %r9556, %r9555, 8;
	shf.r.wrap.b32 	%r9950, %r9555, %r9556, 8;
	mov.b64 	%rd1677, {%r9950, %r9949};
	shr.u64 	%rd1678, %rd1104, 7;
	xor.b64  	%rd1679, %rd1676, %rd1678;
	xor.b64  	%rd1680, %rd1679, %rd1677;
	add.s64 	%rd1681, %rd1091, %rd1208;
	add.s64 	%rd1682, %rd1681, %rd1675;
	add.s64 	%rd1683, %rd1682, %rd1680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9951,%dummy}, %rd1670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9952}, %rd1670;
	}
	shf.r.wrap.b32 	%r9953, %r9952, %r9951, 19;
	shf.r.wrap.b32 	%r9954, %r9951, %r9952, 19;
	mov.b64 	%rd1684, {%r9954, %r9953};
	shf.l.wrap.b32 	%r9955, %r9951, %r9952, 3;
	shf.l.wrap.b32 	%r9956, %r9952, %r9951, 3;
	mov.b64 	%rd1685, {%r9956, %r9955};
	shr.u64 	%rd1686, %rd1670, 6;
	xor.b64  	%rd1687, %rd1684, %rd1686;
	xor.b64  	%rd1688, %rd1687, %rd1685;
	shf.r.wrap.b32 	%r9957, %r9566, %r9565, 1;
	shf.r.wrap.b32 	%r9958, %r9565, %r9566, 1;
	mov.b64 	%rd1689, {%r9958, %r9957};
	shf.r.wrap.b32 	%r9959, %r9566, %r9565, 8;
	shf.r.wrap.b32 	%r9960, %r9565, %r9566, 8;
	mov.b64 	%rd1690, {%r9960, %r9959};
	shr.u64 	%rd1691, %rd1117, 7;
	xor.b64  	%rd1692, %rd1689, %rd1691;
	xor.b64  	%rd1693, %rd1692, %rd1690;
	add.s64 	%rd1694, %rd1104, %rd1221;
	add.s64 	%rd1695, %rd1694, %rd1688;
	add.s64 	%rd1696, %rd1695, %rd1693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9961,%dummy}, %rd1683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9962}, %rd1683;
	}
	shf.r.wrap.b32 	%r9963, %r9962, %r9961, 19;
	shf.r.wrap.b32 	%r9964, %r9961, %r9962, 19;
	mov.b64 	%rd1697, {%r9964, %r9963};
	shf.l.wrap.b32 	%r9965, %r9961, %r9962, 3;
	shf.l.wrap.b32 	%r9966, %r9962, %r9961, 3;
	mov.b64 	%rd1698, {%r9966, %r9965};
	shr.u64 	%rd1699, %rd1683, 6;
	xor.b64  	%rd1700, %rd1697, %rd1699;
	xor.b64  	%rd1701, %rd1700, %rd1698;
	shf.r.wrap.b32 	%r9967, %r9576, %r9575, 1;
	shf.r.wrap.b32 	%r9968, %r9575, %r9576, 1;
	mov.b64 	%rd1702, {%r9968, %r9967};
	shf.r.wrap.b32 	%r9969, %r9576, %r9575, 8;
	shf.r.wrap.b32 	%r9970, %r9575, %r9576, 8;
	mov.b64 	%rd1703, {%r9970, %r9969};
	shr.u64 	%rd1704, %rd1130, 7;
	xor.b64  	%rd1705, %rd1702, %rd1704;
	xor.b64  	%rd1706, %rd1705, %rd1703;
	add.s64 	%rd1707, %rd1117, %rd1234;
	add.s64 	%rd1708, %rd1707, %rd1701;
	add.s64 	%rd1709, %rd1708, %rd1706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9971,%dummy}, %rd1696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9972}, %rd1696;
	}
	shf.r.wrap.b32 	%r9973, %r9972, %r9971, 19;
	shf.r.wrap.b32 	%r9974, %r9971, %r9972, 19;
	mov.b64 	%rd1710, {%r9974, %r9973};
	shf.l.wrap.b32 	%r9975, %r9971, %r9972, 3;
	shf.l.wrap.b32 	%r9976, %r9972, %r9971, 3;
	mov.b64 	%rd1711, {%r9976, %r9975};
	shr.u64 	%rd1712, %rd1696, 6;
	xor.b64  	%rd1713, %rd1710, %rd1712;
	xor.b64  	%rd1714, %rd1713, %rd1711;
	shf.r.wrap.b32 	%r9977, %r9586, %r9585, 1;
	shf.r.wrap.b32 	%r9978, %r9585, %r9586, 1;
	mov.b64 	%rd1715, {%r9978, %r9977};
	shf.r.wrap.b32 	%r9979, %r9586, %r9585, 8;
	shf.r.wrap.b32 	%r9980, %r9585, %r9586, 8;
	mov.b64 	%rd1716, {%r9980, %r9979};
	shr.u64 	%rd1717, %rd1143, 7;
	xor.b64  	%rd1718, %rd1715, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1716;
	add.s64 	%rd1720, %rd1130, %rd1247;
	add.s64 	%rd1721, %rd1720, %rd1714;
	add.s64 	%rd1722, %rd1721, %rd1719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9981,%dummy}, %rd1709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9982}, %rd1709;
	}
	shf.r.wrap.b32 	%r9983, %r9982, %r9981, 19;
	shf.r.wrap.b32 	%r9984, %r9981, %r9982, 19;
	mov.b64 	%rd1723, {%r9984, %r9983};
	shf.l.wrap.b32 	%r9985, %r9981, %r9982, 3;
	shf.l.wrap.b32 	%r9986, %r9982, %r9981, 3;
	mov.b64 	%rd1724, {%r9986, %r9985};
	shr.u64 	%rd1725, %rd1709, 6;
	xor.b64  	%rd1726, %rd1723, %rd1725;
	xor.b64  	%rd1727, %rd1726, %rd1724;
	shf.r.wrap.b32 	%r9987, %r9596, %r9595, 1;
	shf.r.wrap.b32 	%r9988, %r9595, %r9596, 1;
	mov.b64 	%rd1728, {%r9988, %r9987};
	shf.r.wrap.b32 	%r9989, %r9596, %r9595, 8;
	shf.r.wrap.b32 	%r9990, %r9595, %r9596, 8;
	mov.b64 	%rd1729, {%r9990, %r9989};
	shr.u64 	%rd1730, %rd1156, 7;
	xor.b64  	%rd1731, %rd1728, %rd1730;
	xor.b64  	%rd1732, %rd1731, %rd1729;
	add.s64 	%rd1733, %rd1644, %rd1143;
	add.s64 	%rd1734, %rd1733, %rd1727;
	add.s64 	%rd1735, %rd1734, %rd1732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9991,%dummy}, %rd1722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9992}, %rd1722;
	}
	shf.r.wrap.b32 	%r9993, %r9992, %r9991, 19;
	shf.r.wrap.b32 	%r9994, %r9991, %r9992, 19;
	mov.b64 	%rd1736, {%r9994, %r9993};
	shf.l.wrap.b32 	%r9995, %r9991, %r9992, 3;
	shf.l.wrap.b32 	%r9996, %r9992, %r9991, 3;
	mov.b64 	%rd1737, {%r9996, %r9995};
	shr.u64 	%rd1738, %rd1722, 6;
	xor.b64  	%rd1739, %rd1736, %rd1738;
	xor.b64  	%rd1740, %rd1739, %rd1737;
	shf.r.wrap.b32 	%r9997, %r9606, %r9605, 1;
	shf.r.wrap.b32 	%r9998, %r9605, %r9606, 1;
	mov.b64 	%rd1741, {%r9998, %r9997};
	shf.r.wrap.b32 	%r9999, %r9606, %r9605, 8;
	shf.r.wrap.b32 	%r10000, %r9605, %r9606, 8;
	mov.b64 	%rd1742, {%r10000, %r9999};
	shr.u64 	%rd1743, %rd1169, 7;
	xor.b64  	%rd1744, %rd1741, %rd1743;
	xor.b64  	%rd1745, %rd1744, %rd1742;
	add.s64 	%rd1746, %rd1657, %rd1156;
	add.s64 	%rd1747, %rd1746, %rd1740;
	add.s64 	%rd1748, %rd1747, %rd1745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10001,%dummy}, %rd1735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10002}, %rd1735;
	}
	shf.r.wrap.b32 	%r10003, %r10002, %r10001, 19;
	shf.r.wrap.b32 	%r10004, %r10001, %r10002, 19;
	mov.b64 	%rd1749, {%r10004, %r10003};
	shf.l.wrap.b32 	%r10005, %r10001, %r10002, 3;
	shf.l.wrap.b32 	%r10006, %r10002, %r10001, 3;
	mov.b64 	%rd1750, {%r10006, %r10005};
	shr.u64 	%rd1751, %rd1735, 6;
	xor.b64  	%rd1752, %rd1749, %rd1751;
	xor.b64  	%rd1753, %rd1752, %rd1750;
	shf.r.wrap.b32 	%r10007, %r9616, %r9615, 1;
	shf.r.wrap.b32 	%r10008, %r9615, %r9616, 1;
	mov.b64 	%rd1754, {%r10008, %r10007};
	shf.r.wrap.b32 	%r10009, %r9616, %r9615, 8;
	shf.r.wrap.b32 	%r10010, %r9615, %r9616, 8;
	mov.b64 	%rd1755, {%r10010, %r10009};
	shr.u64 	%rd1756, %rd1182, 7;
	xor.b64  	%rd1757, %rd1754, %rd1756;
	xor.b64  	%rd1758, %rd1757, %rd1755;
	add.s64 	%rd1759, %rd1670, %rd1169;
	add.s64 	%rd1760, %rd1759, %rd1753;
	add.s64 	%rd1761, %rd1760, %rd1758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10011,%dummy}, %rd1748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10012}, %rd1748;
	}
	shf.r.wrap.b32 	%r10013, %r10012, %r10011, 19;
	shf.r.wrap.b32 	%r10014, %r10011, %r10012, 19;
	mov.b64 	%rd1762, {%r10014, %r10013};
	shf.l.wrap.b32 	%r10015, %r10011, %r10012, 3;
	shf.l.wrap.b32 	%r10016, %r10012, %r10011, 3;
	mov.b64 	%rd1763, {%r10016, %r10015};
	shr.u64 	%rd1764, %rd1748, 6;
	xor.b64  	%rd1765, %rd1762, %rd1764;
	xor.b64  	%rd1766, %rd1765, %rd1763;
	shf.r.wrap.b32 	%r10017, %r9626, %r9625, 1;
	shf.r.wrap.b32 	%r10018, %r9625, %r9626, 1;
	mov.b64 	%rd1767, {%r10018, %r10017};
	shf.r.wrap.b32 	%r10019, %r9626, %r9625, 8;
	shf.r.wrap.b32 	%r10020, %r9625, %r9626, 8;
	mov.b64 	%rd1768, {%r10020, %r10019};
	shr.u64 	%rd1769, %rd1195, 7;
	xor.b64  	%rd1770, %rd1767, %rd1769;
	xor.b64  	%rd1771, %rd1770, %rd1768;
	add.s64 	%rd1772, %rd1683, %rd1182;
	add.s64 	%rd1773, %rd1772, %rd1766;
	add.s64 	%rd1774, %rd1773, %rd1771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10021,%dummy}, %rd1761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10022}, %rd1761;
	}
	shf.r.wrap.b32 	%r10023, %r10022, %r10021, 19;
	shf.r.wrap.b32 	%r10024, %r10021, %r10022, 19;
	mov.b64 	%rd1775, {%r10024, %r10023};
	shf.l.wrap.b32 	%r10025, %r10021, %r10022, 3;
	shf.l.wrap.b32 	%r10026, %r10022, %r10021, 3;
	mov.b64 	%rd1776, {%r10026, %r10025};
	shr.u64 	%rd1777, %rd1761, 6;
	xor.b64  	%rd1778, %rd1775, %rd1777;
	xor.b64  	%rd1779, %rd1778, %rd1776;
	shf.r.wrap.b32 	%r10027, %r9636, %r9635, 1;
	shf.r.wrap.b32 	%r10028, %r9635, %r9636, 1;
	mov.b64 	%rd1780, {%r10028, %r10027};
	shf.r.wrap.b32 	%r10029, %r9636, %r9635, 8;
	shf.r.wrap.b32 	%r10030, %r9635, %r9636, 8;
	mov.b64 	%rd1781, {%r10030, %r10029};
	shr.u64 	%rd1782, %rd1208, 7;
	xor.b64  	%rd1783, %rd1780, %rd1782;
	xor.b64  	%rd1784, %rd1783, %rd1781;
	add.s64 	%rd1785, %rd1696, %rd1195;
	add.s64 	%rd1786, %rd1785, %rd1779;
	add.s64 	%rd1787, %rd1786, %rd1784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10031,%dummy}, %rd1774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10032}, %rd1774;
	}
	shf.r.wrap.b32 	%r10033, %r10032, %r10031, 19;
	shf.r.wrap.b32 	%r10034, %r10031, %r10032, 19;
	mov.b64 	%rd1788, {%r10034, %r10033};
	shf.l.wrap.b32 	%r10035, %r10031, %r10032, 3;
	shf.l.wrap.b32 	%r10036, %r10032, %r10031, 3;
	mov.b64 	%rd1789, {%r10036, %r10035};
	shr.u64 	%rd1790, %rd1774, 6;
	xor.b64  	%rd1791, %rd1788, %rd1790;
	xor.b64  	%rd1792, %rd1791, %rd1789;
	shf.r.wrap.b32 	%r10037, %r9646, %r9645, 1;
	shf.r.wrap.b32 	%r10038, %r9645, %r9646, 1;
	mov.b64 	%rd1793, {%r10038, %r10037};
	shf.r.wrap.b32 	%r10039, %r9646, %r9645, 8;
	shf.r.wrap.b32 	%r10040, %r9645, %r9646, 8;
	mov.b64 	%rd1794, {%r10040, %r10039};
	shr.u64 	%rd1795, %rd1221, 7;
	xor.b64  	%rd1796, %rd1793, %rd1795;
	xor.b64  	%rd1797, %rd1796, %rd1794;
	add.s64 	%rd1798, %rd1709, %rd1208;
	add.s64 	%rd1799, %rd1798, %rd1792;
	add.s64 	%rd1800, %rd1799, %rd1797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10041,%dummy}, %rd1787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10042}, %rd1787;
	}
	shf.r.wrap.b32 	%r10043, %r10042, %r10041, 19;
	shf.r.wrap.b32 	%r10044, %r10041, %r10042, 19;
	mov.b64 	%rd1801, {%r10044, %r10043};
	shf.l.wrap.b32 	%r10045, %r10041, %r10042, 3;
	shf.l.wrap.b32 	%r10046, %r10042, %r10041, 3;
	mov.b64 	%rd1802, {%r10046, %r10045};
	shr.u64 	%rd1803, %rd1787, 6;
	xor.b64  	%rd1804, %rd1801, %rd1803;
	xor.b64  	%rd1805, %rd1804, %rd1802;
	shf.r.wrap.b32 	%r10047, %r9912, %r9911, 1;
	shf.r.wrap.b32 	%r10048, %r9911, %r9912, 1;
	mov.b64 	%rd1806, {%r10048, %r10047};
	shf.r.wrap.b32 	%r10049, %r9912, %r9911, 8;
	shf.r.wrap.b32 	%r10050, %r9911, %r9912, 8;
	mov.b64 	%rd1807, {%r10050, %r10049};
	shr.u64 	%rd1808, %rd1234, 7;
	xor.b64  	%rd1809, %rd1806, %rd1808;
	xor.b64  	%rd1810, %rd1809, %rd1807;
	add.s64 	%rd1811, %rd1722, %rd1221;
	add.s64 	%rd1812, %rd1811, %rd1805;
	add.s64 	%rd1813, %rd1812, %rd1810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10051,%dummy}, %rd1800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10052}, %rd1800;
	}
	shf.r.wrap.b32 	%r10053, %r10052, %r10051, 19;
	shf.r.wrap.b32 	%r10054, %r10051, %r10052, 19;
	mov.b64 	%rd1814, {%r10054, %r10053};
	shf.l.wrap.b32 	%r10055, %r10051, %r10052, 3;
	shf.l.wrap.b32 	%r10056, %r10052, %r10051, 3;
	mov.b64 	%rd1815, {%r10056, %r10055};
	shr.u64 	%rd1816, %rd1800, 6;
	xor.b64  	%rd1817, %rd1814, %rd1816;
	xor.b64  	%rd1818, %rd1817, %rd1815;
	shf.r.wrap.b32 	%r10057, %r9922, %r9921, 1;
	shf.r.wrap.b32 	%r10058, %r9921, %r9922, 1;
	mov.b64 	%rd1819, {%r10058, %r10057};
	shf.r.wrap.b32 	%r10059, %r9922, %r9921, 8;
	shf.r.wrap.b32 	%r10060, %r9921, %r9922, 8;
	mov.b64 	%rd1820, {%r10060, %r10059};
	shr.u64 	%rd1821, %rd1247, 7;
	xor.b64  	%rd1822, %rd1819, %rd1821;
	xor.b64  	%rd1823, %rd1822, %rd1820;
	add.s64 	%rd1824, %rd1735, %rd1234;
	add.s64 	%rd1825, %rd1824, %rd1818;
	add.s64 	%rd1826, %rd1825, %rd1823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10061,%dummy}, %rd1813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10062}, %rd1813;
	}
	shf.r.wrap.b32 	%r10063, %r10062, %r10061, 19;
	shf.r.wrap.b32 	%r10064, %r10061, %r10062, 19;
	mov.b64 	%rd1827, {%r10064, %r10063};
	shf.l.wrap.b32 	%r10065, %r10061, %r10062, 3;
	shf.l.wrap.b32 	%r10066, %r10062, %r10061, 3;
	mov.b64 	%rd1828, {%r10066, %r10065};
	shr.u64 	%rd1829, %rd1813, 6;
	xor.b64  	%rd1830, %rd1827, %rd1829;
	xor.b64  	%rd1831, %rd1830, %rd1828;
	shf.r.wrap.b32 	%r10067, %r9932, %r9931, 1;
	shf.r.wrap.b32 	%r10068, %r9931, %r9932, 1;
	mov.b64 	%rd1832, {%r10068, %r10067};
	shf.r.wrap.b32 	%r10069, %r9932, %r9931, 8;
	shf.r.wrap.b32 	%r10070, %r9931, %r9932, 8;
	mov.b64 	%rd1833, {%r10070, %r10069};
	shr.u64 	%rd1834, %rd1644, 7;
	xor.b64  	%rd1835, %rd1832, %rd1834;
	xor.b64  	%rd1836, %rd1835, %rd1833;
	add.s64 	%rd1837, %rd1748, %rd1247;
	add.s64 	%rd1838, %rd1837, %rd1831;
	add.s64 	%rd1839, %rd1838, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10071,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10072}, %rd1620;
	}
	shf.r.wrap.b32 	%r10073, %r10072, %r10071, 14;
	shf.r.wrap.b32 	%r10074, %r10071, %r10072, 14;
	mov.b64 	%rd1840, {%r10074, %r10073};
	shf.r.wrap.b32 	%r10075, %r10072, %r10071, 18;
	shf.r.wrap.b32 	%r10076, %r10071, %r10072, 18;
	mov.b64 	%rd1841, {%r10076, %r10075};
	xor.b64  	%rd1842, %rd1841, %rd1840;
	shf.l.wrap.b32 	%r10077, %r10071, %r10072, 23;
	shf.l.wrap.b32 	%r10078, %r10072, %r10071, 23;
	mov.b64 	%rd1843, {%r10078, %r10077};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	xor.b64  	%rd1845, %rd1572, %rd1596;
	and.b64  	%rd1846, %rd1845, %rd1620;
	xor.b64  	%rd1847, %rd1846, %rd1572;
	add.s64 	%rd1848, %rd1847, %rd1548;
	add.s64 	%rd1849, %rd1848, %rd1644;
	add.s64 	%rd1850, %rd1849, %rd2758;
	add.s64 	%rd1851, %rd1850, %rd1844;
	add.s64 	%rd1852, %rd1851, %rd1559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10079,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10080}, %rd1631;
	}
	shf.r.wrap.b32 	%r10081, %r10080, %r10079, 28;
	shf.r.wrap.b32 	%r10082, %r10079, %r10080, 28;
	mov.b64 	%rd1853, {%r10082, %r10081};
	shf.l.wrap.b32 	%r10083, %r10079, %r10080, 30;
	shf.l.wrap.b32 	%r10084, %r10080, %r10079, 30;
	mov.b64 	%rd1854, {%r10084, %r10083};
	xor.b64  	%rd1855, %rd1854, %rd1853;
	shf.l.wrap.b32 	%r10085, %r10079, %r10080, 25;
	shf.l.wrap.b32 	%r10086, %r10080, %r10079, 25;
	mov.b64 	%rd1856, {%r10086, %r10085};
	xor.b64  	%rd1857, %rd1855, %rd1856;
	xor.b64  	%rd1858, %rd1631, %rd1583;
	xor.b64  	%rd1859, %rd1631, %rd1607;
	and.b64  	%rd1860, %rd1859, %rd1858;
	xor.b64  	%rd1861, %rd1860, %rd1631;
	add.s64 	%rd1862, %rd1851, %rd1861;
	add.s64 	%rd1863, %rd1862, %rd1857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10087,%dummy}, %rd1852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10088}, %rd1852;
	}
	shf.r.wrap.b32 	%r10089, %r10088, %r10087, 14;
	shf.r.wrap.b32 	%r10090, %r10087, %r10088, 14;
	mov.b64 	%rd1864, {%r10090, %r10089};
	shf.r.wrap.b32 	%r10091, %r10088, %r10087, 18;
	shf.r.wrap.b32 	%r10092, %r10087, %r10088, 18;
	mov.b64 	%rd1865, {%r10092, %r10091};
	xor.b64  	%rd1866, %rd1865, %rd1864;
	shf.l.wrap.b32 	%r10093, %r10087, %r10088, 23;
	shf.l.wrap.b32 	%r10094, %r10088, %r10087, 23;
	mov.b64 	%rd1867, {%r10094, %r10093};
	xor.b64  	%rd1868, %rd1866, %rd1867;
	xor.b64  	%rd1869, %rd1596, %rd1620;
	and.b64  	%rd1870, %rd1852, %rd1869;
	xor.b64  	%rd1871, %rd1870, %rd1596;
	add.s64 	%rd1872, %rd1657, %rd1572;
	add.s64 	%rd1873, %rd1872, %rd2759;
	add.s64 	%rd1874, %rd1873, %rd1871;
	add.s64 	%rd1875, %rd1874, %rd1868;
	add.s64 	%rd1876, %rd1875, %rd1583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10095,%dummy}, %rd1863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10096}, %rd1863;
	}
	shf.r.wrap.b32 	%r10097, %r10096, %r10095, 28;
	shf.r.wrap.b32 	%r10098, %r10095, %r10096, 28;
	mov.b64 	%rd1877, {%r10098, %r10097};
	shf.l.wrap.b32 	%r10099, %r10095, %r10096, 30;
	shf.l.wrap.b32 	%r10100, %r10096, %r10095, 30;
	mov.b64 	%rd1878, {%r10100, %r10099};
	xor.b64  	%rd1879, %rd1878, %rd1877;
	shf.l.wrap.b32 	%r10101, %r10095, %r10096, 25;
	shf.l.wrap.b32 	%r10102, %r10096, %r10095, 25;
	mov.b64 	%rd1880, {%r10102, %r10101};
	xor.b64  	%rd1881, %rd1879, %rd1880;
	xor.b64  	%rd1882, %rd1863, %rd1607;
	xor.b64  	%rd1883, %rd1863, %rd1631;
	and.b64  	%rd1884, %rd1883, %rd1882;
	xor.b64  	%rd1885, %rd1884, %rd1863;
	add.s64 	%rd1886, %rd1875, %rd1885;
	add.s64 	%rd1887, %rd1886, %rd1881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10103,%dummy}, %rd1876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10104}, %rd1876;
	}
	shf.r.wrap.b32 	%r10105, %r10104, %r10103, 14;
	shf.r.wrap.b32 	%r10106, %r10103, %r10104, 14;
	mov.b64 	%rd1888, {%r10106, %r10105};
	shf.r.wrap.b32 	%r10107, %r10104, %r10103, 18;
	shf.r.wrap.b32 	%r10108, %r10103, %r10104, 18;
	mov.b64 	%rd1889, {%r10108, %r10107};
	xor.b64  	%rd1890, %rd1889, %rd1888;
	shf.l.wrap.b32 	%r10109, %r10103, %r10104, 23;
	shf.l.wrap.b32 	%r10110, %r10104, %r10103, 23;
	mov.b64 	%rd1891, {%r10110, %r10109};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	xor.b64  	%rd1893, %rd1852, %rd1620;
	and.b64  	%rd1894, %rd1876, %rd1893;
	xor.b64  	%rd1895, %rd1894, %rd1620;
	add.s64 	%rd1896, %rd1670, %rd1596;
	add.s64 	%rd1897, %rd1896, %rd2760;
	add.s64 	%rd1898, %rd1897, %rd1895;
	add.s64 	%rd1899, %rd1898, %rd1892;
	add.s64 	%rd1900, %rd1899, %rd1607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10111,%dummy}, %rd1887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10112}, %rd1887;
	}
	shf.r.wrap.b32 	%r10113, %r10112, %r10111, 28;
	shf.r.wrap.b32 	%r10114, %r10111, %r10112, 28;
	mov.b64 	%rd1901, {%r10114, %r10113};
	shf.l.wrap.b32 	%r10115, %r10111, %r10112, 30;
	shf.l.wrap.b32 	%r10116, %r10112, %r10111, 30;
	mov.b64 	%rd1902, {%r10116, %r10115};
	xor.b64  	%rd1903, %rd1902, %rd1901;
	shf.l.wrap.b32 	%r10117, %r10111, %r10112, 25;
	shf.l.wrap.b32 	%r10118, %r10112, %r10111, 25;
	mov.b64 	%rd1904, {%r10118, %r10117};
	xor.b64  	%rd1905, %rd1903, %rd1904;
	xor.b64  	%rd1906, %rd1887, %rd1631;
	xor.b64  	%rd1907, %rd1887, %rd1863;
	and.b64  	%rd1908, %rd1907, %rd1906;
	xor.b64  	%rd1909, %rd1908, %rd1887;
	add.s64 	%rd1910, %rd1899, %rd1909;
	add.s64 	%rd1911, %rd1910, %rd1905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10119,%dummy}, %rd1900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10120}, %rd1900;
	}
	shf.r.wrap.b32 	%r10121, %r10120, %r10119, 14;
	shf.r.wrap.b32 	%r10122, %r10119, %r10120, 14;
	mov.b64 	%rd1912, {%r10122, %r10121};
	shf.r.wrap.b32 	%r10123, %r10120, %r10119, 18;
	shf.r.wrap.b32 	%r10124, %r10119, %r10120, 18;
	mov.b64 	%rd1913, {%r10124, %r10123};
	xor.b64  	%rd1914, %rd1913, %rd1912;
	shf.l.wrap.b32 	%r10125, %r10119, %r10120, 23;
	shf.l.wrap.b32 	%r10126, %r10120, %r10119, 23;
	mov.b64 	%rd1915, {%r10126, %r10125};
	xor.b64  	%rd1916, %rd1914, %rd1915;
	xor.b64  	%rd1917, %rd1876, %rd1852;
	and.b64  	%rd1918, %rd1900, %rd1917;
	xor.b64  	%rd1919, %rd1918, %rd1852;
	add.s64 	%rd1920, %rd1683, %rd1620;
	add.s64 	%rd1921, %rd1920, %rd2761;
	add.s64 	%rd1922, %rd1921, %rd1919;
	add.s64 	%rd1923, %rd1922, %rd1916;
	add.s64 	%rd1924, %rd1923, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10127,%dummy}, %rd1911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10128}, %rd1911;
	}
	shf.r.wrap.b32 	%r10129, %r10128, %r10127, 28;
	shf.r.wrap.b32 	%r10130, %r10127, %r10128, 28;
	mov.b64 	%rd1925, {%r10130, %r10129};
	shf.l.wrap.b32 	%r10131, %r10127, %r10128, 30;
	shf.l.wrap.b32 	%r10132, %r10128, %r10127, 30;
	mov.b64 	%rd1926, {%r10132, %r10131};
	xor.b64  	%rd1927, %rd1926, %rd1925;
	shf.l.wrap.b32 	%r10133, %r10127, %r10128, 25;
	shf.l.wrap.b32 	%r10134, %r10128, %r10127, 25;
	mov.b64 	%rd1928, {%r10134, %r10133};
	xor.b64  	%rd1929, %rd1927, %rd1928;
	xor.b64  	%rd1930, %rd1911, %rd1863;
	xor.b64  	%rd1931, %rd1911, %rd1887;
	and.b64  	%rd1932, %rd1931, %rd1930;
	xor.b64  	%rd1933, %rd1932, %rd1911;
	add.s64 	%rd1934, %rd1923, %rd1933;
	add.s64 	%rd1935, %rd1934, %rd1929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10135,%dummy}, %rd1924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10136}, %rd1924;
	}
	shf.r.wrap.b32 	%r10137, %r10136, %r10135, 14;
	shf.r.wrap.b32 	%r10138, %r10135, %r10136, 14;
	mov.b64 	%rd1936, {%r10138, %r10137};
	shf.r.wrap.b32 	%r10139, %r10136, %r10135, 18;
	shf.r.wrap.b32 	%r10140, %r10135, %r10136, 18;
	mov.b64 	%rd1937, {%r10140, %r10139};
	xor.b64  	%rd1938, %rd1937, %rd1936;
	shf.l.wrap.b32 	%r10141, %r10135, %r10136, 23;
	shf.l.wrap.b32 	%r10142, %r10136, %r10135, 23;
	mov.b64 	%rd1939, {%r10142, %r10141};
	xor.b64  	%rd1940, %rd1938, %rd1939;
	xor.b64  	%rd1941, %rd1900, %rd1876;
	and.b64  	%rd1942, %rd1924, %rd1941;
	xor.b64  	%rd1943, %rd1942, %rd1876;
	add.s64 	%rd1944, %rd1852, %rd1696;
	add.s64 	%rd1945, %rd1944, %rd2762;
	add.s64 	%rd1946, %rd1945, %rd1943;
	add.s64 	%rd1947, %rd1946, %rd1940;
	add.s64 	%rd1948, %rd1947, %rd1863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10143,%dummy}, %rd1935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10144}, %rd1935;
	}
	shf.r.wrap.b32 	%r10145, %r10144, %r10143, 28;
	shf.r.wrap.b32 	%r10146, %r10143, %r10144, 28;
	mov.b64 	%rd1949, {%r10146, %r10145};
	shf.l.wrap.b32 	%r10147, %r10143, %r10144, 30;
	shf.l.wrap.b32 	%r10148, %r10144, %r10143, 30;
	mov.b64 	%rd1950, {%r10148, %r10147};
	xor.b64  	%rd1951, %rd1950, %rd1949;
	shf.l.wrap.b32 	%r10149, %r10143, %r10144, 25;
	shf.l.wrap.b32 	%r10150, %r10144, %r10143, 25;
	mov.b64 	%rd1952, {%r10150, %r10149};
	xor.b64  	%rd1953, %rd1951, %rd1952;
	xor.b64  	%rd1954, %rd1935, %rd1887;
	xor.b64  	%rd1955, %rd1935, %rd1911;
	and.b64  	%rd1956, %rd1955, %rd1954;
	xor.b64  	%rd1957, %rd1956, %rd1935;
	add.s64 	%rd1958, %rd1947, %rd1957;
	add.s64 	%rd1959, %rd1958, %rd1953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10151,%dummy}, %rd1948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10152}, %rd1948;
	}
	shf.r.wrap.b32 	%r10153, %r10152, %r10151, 14;
	shf.r.wrap.b32 	%r10154, %r10151, %r10152, 14;
	mov.b64 	%rd1960, {%r10154, %r10153};
	shf.r.wrap.b32 	%r10155, %r10152, %r10151, 18;
	shf.r.wrap.b32 	%r10156, %r10151, %r10152, 18;
	mov.b64 	%rd1961, {%r10156, %r10155};
	xor.b64  	%rd1962, %rd1961, %rd1960;
	shf.l.wrap.b32 	%r10157, %r10151, %r10152, 23;
	shf.l.wrap.b32 	%r10158, %r10152, %r10151, 23;
	mov.b64 	%rd1963, {%r10158, %r10157};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	xor.b64  	%rd1965, %rd1924, %rd1900;
	and.b64  	%rd1966, %rd1948, %rd1965;
	xor.b64  	%rd1967, %rd1966, %rd1900;
	add.s64 	%rd1968, %rd1876, %rd1709;
	add.s64 	%rd1969, %rd1968, %rd2763;
	add.s64 	%rd1970, %rd1969, %rd1967;
	add.s64 	%rd1971, %rd1970, %rd1964;
	add.s64 	%rd1972, %rd1971, %rd1887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10159,%dummy}, %rd1959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10160}, %rd1959;
	}
	shf.r.wrap.b32 	%r10161, %r10160, %r10159, 28;
	shf.r.wrap.b32 	%r10162, %r10159, %r10160, 28;
	mov.b64 	%rd1973, {%r10162, %r10161};
	shf.l.wrap.b32 	%r10163, %r10159, %r10160, 30;
	shf.l.wrap.b32 	%r10164, %r10160, %r10159, 30;
	mov.b64 	%rd1974, {%r10164, %r10163};
	xor.b64  	%rd1975, %rd1974, %rd1973;
	shf.l.wrap.b32 	%r10165, %r10159, %r10160, 25;
	shf.l.wrap.b32 	%r10166, %r10160, %r10159, 25;
	mov.b64 	%rd1976, {%r10166, %r10165};
	xor.b64  	%rd1977, %rd1975, %rd1976;
	xor.b64  	%rd1978, %rd1959, %rd1911;
	xor.b64  	%rd1979, %rd1959, %rd1935;
	and.b64  	%rd1980, %rd1979, %rd1978;
	xor.b64  	%rd1981, %rd1980, %rd1959;
	add.s64 	%rd1982, %rd1971, %rd1981;
	add.s64 	%rd1983, %rd1982, %rd1977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10167,%dummy}, %rd1972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10168}, %rd1972;
	}
	shf.r.wrap.b32 	%r10169, %r10168, %r10167, 14;
	shf.r.wrap.b32 	%r10170, %r10167, %r10168, 14;
	mov.b64 	%rd1984, {%r10170, %r10169};
	shf.r.wrap.b32 	%r10171, %r10168, %r10167, 18;
	shf.r.wrap.b32 	%r10172, %r10167, %r10168, 18;
	mov.b64 	%rd1985, {%r10172, %r10171};
	xor.b64  	%rd1986, %rd1985, %rd1984;
	shf.l.wrap.b32 	%r10173, %r10167, %r10168, 23;
	shf.l.wrap.b32 	%r10174, %r10168, %r10167, 23;
	mov.b64 	%rd1987, {%r10174, %r10173};
	xor.b64  	%rd1988, %rd1986, %rd1987;
	xor.b64  	%rd1989, %rd1948, %rd1924;
	and.b64  	%rd1990, %rd1972, %rd1989;
	xor.b64  	%rd1991, %rd1990, %rd1924;
	add.s64 	%rd1992, %rd1900, %rd1722;
	add.s64 	%rd1993, %rd1992, %rd2764;
	add.s64 	%rd1994, %rd1993, %rd1991;
	add.s64 	%rd1995, %rd1994, %rd1988;
	add.s64 	%rd1996, %rd1995, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10175,%dummy}, %rd1983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10176}, %rd1983;
	}
	shf.r.wrap.b32 	%r10177, %r10176, %r10175, 28;
	shf.r.wrap.b32 	%r10178, %r10175, %r10176, 28;
	mov.b64 	%rd1997, {%r10178, %r10177};
	shf.l.wrap.b32 	%r10179, %r10175, %r10176, 30;
	shf.l.wrap.b32 	%r10180, %r10176, %r10175, 30;
	mov.b64 	%rd1998, {%r10180, %r10179};
	xor.b64  	%rd1999, %rd1998, %rd1997;
	shf.l.wrap.b32 	%r10181, %r10175, %r10176, 25;
	shf.l.wrap.b32 	%r10182, %r10176, %r10175, 25;
	mov.b64 	%rd2000, {%r10182, %r10181};
	xor.b64  	%rd2001, %rd1999, %rd2000;
	xor.b64  	%rd2002, %rd1983, %rd1935;
	xor.b64  	%rd2003, %rd1983, %rd1959;
	and.b64  	%rd2004, %rd2003, %rd2002;
	xor.b64  	%rd2005, %rd2004, %rd1983;
	add.s64 	%rd2006, %rd1995, %rd2005;
	add.s64 	%rd2007, %rd2006, %rd2001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10183,%dummy}, %rd1996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10184}, %rd1996;
	}
	shf.r.wrap.b32 	%r10185, %r10184, %r10183, 14;
	shf.r.wrap.b32 	%r10186, %r10183, %r10184, 14;
	mov.b64 	%rd2008, {%r10186, %r10185};
	shf.r.wrap.b32 	%r10187, %r10184, %r10183, 18;
	shf.r.wrap.b32 	%r10188, %r10183, %r10184, 18;
	mov.b64 	%rd2009, {%r10188, %r10187};
	xor.b64  	%rd2010, %rd2009, %rd2008;
	shf.l.wrap.b32 	%r10189, %r10183, %r10184, 23;
	shf.l.wrap.b32 	%r10190, %r10184, %r10183, 23;
	mov.b64 	%rd2011, {%r10190, %r10189};
	xor.b64  	%rd2012, %rd2010, %rd2011;
	xor.b64  	%rd2013, %rd1972, %rd1948;
	and.b64  	%rd2014, %rd1996, %rd2013;
	xor.b64  	%rd2015, %rd2014, %rd1948;
	add.s64 	%rd2016, %rd1924, %rd1735;
	add.s64 	%rd2017, %rd2016, %rd2765;
	add.s64 	%rd2018, %rd2017, %rd2015;
	add.s64 	%rd2019, %rd2018, %rd2012;
	add.s64 	%rd2020, %rd2019, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10191,%dummy}, %rd2007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10192}, %rd2007;
	}
	shf.r.wrap.b32 	%r10193, %r10192, %r10191, 28;
	shf.r.wrap.b32 	%r10194, %r10191, %r10192, 28;
	mov.b64 	%rd2021, {%r10194, %r10193};
	shf.l.wrap.b32 	%r10195, %r10191, %r10192, 30;
	shf.l.wrap.b32 	%r10196, %r10192, %r10191, 30;
	mov.b64 	%rd2022, {%r10196, %r10195};
	xor.b64  	%rd2023, %rd2022, %rd2021;
	shf.l.wrap.b32 	%r10197, %r10191, %r10192, 25;
	shf.l.wrap.b32 	%r10198, %r10192, %r10191, 25;
	mov.b64 	%rd2024, {%r10198, %r10197};
	xor.b64  	%rd2025, %rd2023, %rd2024;
	xor.b64  	%rd2026, %rd2007, %rd1959;
	xor.b64  	%rd2027, %rd2007, %rd1983;
	and.b64  	%rd2028, %rd2027, %rd2026;
	xor.b64  	%rd2029, %rd2028, %rd2007;
	add.s64 	%rd2030, %rd2019, %rd2029;
	add.s64 	%rd2031, %rd2030, %rd2025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10199,%dummy}, %rd2020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10200}, %rd2020;
	}
	shf.r.wrap.b32 	%r10201, %r10200, %r10199, 14;
	shf.r.wrap.b32 	%r10202, %r10199, %r10200, 14;
	mov.b64 	%rd2032, {%r10202, %r10201};
	shf.r.wrap.b32 	%r10203, %r10200, %r10199, 18;
	shf.r.wrap.b32 	%r10204, %r10199, %r10200, 18;
	mov.b64 	%rd2033, {%r10204, %r10203};
	xor.b64  	%rd2034, %rd2033, %rd2032;
	shf.l.wrap.b32 	%r10205, %r10199, %r10200, 23;
	shf.l.wrap.b32 	%r10206, %r10200, %r10199, 23;
	mov.b64 	%rd2035, {%r10206, %r10205};
	xor.b64  	%rd2036, %rd2034, %rd2035;
	xor.b64  	%rd2037, %rd1996, %rd1972;
	and.b64  	%rd2038, %rd2020, %rd2037;
	xor.b64  	%rd2039, %rd2038, %rd1972;
	add.s64 	%rd2040, %rd1948, %rd1748;
	add.s64 	%rd2041, %rd2040, %rd2766;
	add.s64 	%rd2042, %rd2041, %rd2039;
	add.s64 	%rd2043, %rd2042, %rd2036;
	add.s64 	%rd2044, %rd2043, %rd1959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10207,%dummy}, %rd2031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10208}, %rd2031;
	}
	shf.r.wrap.b32 	%r10209, %r10208, %r10207, 28;
	shf.r.wrap.b32 	%r10210, %r10207, %r10208, 28;
	mov.b64 	%rd2045, {%r10210, %r10209};
	shf.l.wrap.b32 	%r10211, %r10207, %r10208, 30;
	shf.l.wrap.b32 	%r10212, %r10208, %r10207, 30;
	mov.b64 	%rd2046, {%r10212, %r10211};
	xor.b64  	%rd2047, %rd2046, %rd2045;
	shf.l.wrap.b32 	%r10213, %r10207, %r10208, 25;
	shf.l.wrap.b32 	%r10214, %r10208, %r10207, 25;
	mov.b64 	%rd2048, {%r10214, %r10213};
	xor.b64  	%rd2049, %rd2047, %rd2048;
	xor.b64  	%rd2050, %rd2031, %rd1983;
	xor.b64  	%rd2051, %rd2031, %rd2007;
	and.b64  	%rd2052, %rd2051, %rd2050;
	xor.b64  	%rd2053, %rd2052, %rd2031;
	add.s64 	%rd2054, %rd2043, %rd2053;
	add.s64 	%rd2055, %rd2054, %rd2049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10215,%dummy}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10216}, %rd2044;
	}
	shf.r.wrap.b32 	%r10217, %r10216, %r10215, 14;
	shf.r.wrap.b32 	%r10218, %r10215, %r10216, 14;
	mov.b64 	%rd2056, {%r10218, %r10217};
	shf.r.wrap.b32 	%r10219, %r10216, %r10215, 18;
	shf.r.wrap.b32 	%r10220, %r10215, %r10216, 18;
	mov.b64 	%rd2057, {%r10220, %r10219};
	xor.b64  	%rd2058, %rd2057, %rd2056;
	shf.l.wrap.b32 	%r10221, %r10215, %r10216, 23;
	shf.l.wrap.b32 	%r10222, %r10216, %r10215, 23;
	mov.b64 	%rd2059, {%r10222, %r10221};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	xor.b64  	%rd2061, %rd2020, %rd1996;
	and.b64  	%rd2062, %rd2044, %rd2061;
	xor.b64  	%rd2063, %rd2062, %rd1996;
	add.s64 	%rd2064, %rd1972, %rd1761;
	add.s64 	%rd2065, %rd2064, %rd2767;
	add.s64 	%rd2066, %rd2065, %rd2063;
	add.s64 	%rd2067, %rd2066, %rd2060;
	add.s64 	%rd2068, %rd2067, %rd1983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10223,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10224}, %rd2055;
	}
	shf.r.wrap.b32 	%r10225, %r10224, %r10223, 28;
	shf.r.wrap.b32 	%r10226, %r10223, %r10224, 28;
	mov.b64 	%rd2069, {%r10226, %r10225};
	shf.l.wrap.b32 	%r10227, %r10223, %r10224, 30;
	shf.l.wrap.b32 	%r10228, %r10224, %r10223, 30;
	mov.b64 	%rd2070, {%r10228, %r10227};
	xor.b64  	%rd2071, %rd2070, %rd2069;
	shf.l.wrap.b32 	%r10229, %r10223, %r10224, 25;
	shf.l.wrap.b32 	%r10230, %r10224, %r10223, 25;
	mov.b64 	%rd2072, {%r10230, %r10229};
	xor.b64  	%rd2073, %rd2071, %rd2072;
	xor.b64  	%rd2074, %rd2055, %rd2007;
	xor.b64  	%rd2075, %rd2055, %rd2031;
	and.b64  	%rd2076, %rd2075, %rd2074;
	xor.b64  	%rd2077, %rd2076, %rd2055;
	add.s64 	%rd2078, %rd2067, %rd2077;
	add.s64 	%rd2079, %rd2078, %rd2073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10231,%dummy}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10232}, %rd2068;
	}
	shf.r.wrap.b32 	%r10233, %r10232, %r10231, 14;
	shf.r.wrap.b32 	%r10234, %r10231, %r10232, 14;
	mov.b64 	%rd2080, {%r10234, %r10233};
	shf.r.wrap.b32 	%r10235, %r10232, %r10231, 18;
	shf.r.wrap.b32 	%r10236, %r10231, %r10232, 18;
	mov.b64 	%rd2081, {%r10236, %r10235};
	xor.b64  	%rd2082, %rd2081, %rd2080;
	shf.l.wrap.b32 	%r10237, %r10231, %r10232, 23;
	shf.l.wrap.b32 	%r10238, %r10232, %r10231, 23;
	mov.b64 	%rd2083, {%r10238, %r10237};
	xor.b64  	%rd2084, %rd2082, %rd2083;
	xor.b64  	%rd2085, %rd2044, %rd2020;
	and.b64  	%rd2086, %rd2068, %rd2085;
	xor.b64  	%rd2087, %rd2086, %rd2020;
	add.s64 	%rd2088, %rd1996, %rd1774;
	add.s64 	%rd2089, %rd2088, %rd2768;
	add.s64 	%rd2090, %rd2089, %rd2087;
	add.s64 	%rd2091, %rd2090, %rd2084;
	add.s64 	%rd2092, %rd2091, %rd2007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10239,%dummy}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10240}, %rd2079;
	}
	shf.r.wrap.b32 	%r10241, %r10240, %r10239, 28;
	shf.r.wrap.b32 	%r10242, %r10239, %r10240, 28;
	mov.b64 	%rd2093, {%r10242, %r10241};
	shf.l.wrap.b32 	%r10243, %r10239, %r10240, 30;
	shf.l.wrap.b32 	%r10244, %r10240, %r10239, 30;
	mov.b64 	%rd2094, {%r10244, %r10243};
	xor.b64  	%rd2095, %rd2094, %rd2093;
	shf.l.wrap.b32 	%r10245, %r10239, %r10240, 25;
	shf.l.wrap.b32 	%r10246, %r10240, %r10239, 25;
	mov.b64 	%rd2096, {%r10246, %r10245};
	xor.b64  	%rd2097, %rd2095, %rd2096;
	xor.b64  	%rd2098, %rd2079, %rd2031;
	xor.b64  	%rd2099, %rd2079, %rd2055;
	and.b64  	%rd2100, %rd2099, %rd2098;
	xor.b64  	%rd2101, %rd2100, %rd2079;
	add.s64 	%rd2102, %rd2091, %rd2101;
	add.s64 	%rd2103, %rd2102, %rd2097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10247,%dummy}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10248}, %rd2092;
	}
	shf.r.wrap.b32 	%r10249, %r10248, %r10247, 14;
	shf.r.wrap.b32 	%r10250, %r10247, %r10248, 14;
	mov.b64 	%rd2104, {%r10250, %r10249};
	shf.r.wrap.b32 	%r10251, %r10248, %r10247, 18;
	shf.r.wrap.b32 	%r10252, %r10247, %r10248, 18;
	mov.b64 	%rd2105, {%r10252, %r10251};
	xor.b64  	%rd2106, %rd2105, %rd2104;
	shf.l.wrap.b32 	%r10253, %r10247, %r10248, 23;
	shf.l.wrap.b32 	%r10254, %r10248, %r10247, 23;
	mov.b64 	%rd2107, {%r10254, %r10253};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	xor.b64  	%rd2109, %rd2068, %rd2044;
	and.b64  	%rd2110, %rd2092, %rd2109;
	xor.b64  	%rd2111, %rd2110, %rd2044;
	add.s64 	%rd2112, %rd2020, %rd1787;
	add.s64 	%rd2113, %rd2112, %rd2769;
	add.s64 	%rd2114, %rd2113, %rd2111;
	add.s64 	%rd2115, %rd2114, %rd2108;
	add.s64 	%rd2116, %rd2115, %rd2031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10255,%dummy}, %rd2103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10256}, %rd2103;
	}
	shf.r.wrap.b32 	%r10257, %r10256, %r10255, 28;
	shf.r.wrap.b32 	%r10258, %r10255, %r10256, 28;
	mov.b64 	%rd2117, {%r10258, %r10257};
	shf.l.wrap.b32 	%r10259, %r10255, %r10256, 30;
	shf.l.wrap.b32 	%r10260, %r10256, %r10255, 30;
	mov.b64 	%rd2118, {%r10260, %r10259};
	xor.b64  	%rd2119, %rd2118, %rd2117;
	shf.l.wrap.b32 	%r10261, %r10255, %r10256, 25;
	shf.l.wrap.b32 	%r10262, %r10256, %r10255, 25;
	mov.b64 	%rd2120, {%r10262, %r10261};
	xor.b64  	%rd2121, %rd2119, %rd2120;
	xor.b64  	%rd2122, %rd2103, %rd2055;
	xor.b64  	%rd2123, %rd2103, %rd2079;
	and.b64  	%rd2124, %rd2123, %rd2122;
	xor.b64  	%rd2125, %rd2124, %rd2103;
	add.s64 	%rd2126, %rd2115, %rd2125;
	add.s64 	%rd2127, %rd2126, %rd2121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10263,%dummy}, %rd2116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10264}, %rd2116;
	}
	shf.r.wrap.b32 	%r10265, %r10264, %r10263, 14;
	shf.r.wrap.b32 	%r10266, %r10263, %r10264, 14;
	mov.b64 	%rd2128, {%r10266, %r10265};
	shf.r.wrap.b32 	%r10267, %r10264, %r10263, 18;
	shf.r.wrap.b32 	%r10268, %r10263, %r10264, 18;
	mov.b64 	%rd2129, {%r10268, %r10267};
	xor.b64  	%rd2130, %rd2129, %rd2128;
	shf.l.wrap.b32 	%r10269, %r10263, %r10264, 23;
	shf.l.wrap.b32 	%r10270, %r10264, %r10263, 23;
	mov.b64 	%rd2131, {%r10270, %r10269};
	xor.b64  	%rd2132, %rd2130, %rd2131;
	xor.b64  	%rd2133, %rd2092, %rd2068;
	and.b64  	%rd2134, %rd2116, %rd2133;
	xor.b64  	%rd2135, %rd2134, %rd2068;
	add.s64 	%rd2136, %rd2044, %rd1800;
	add.s64 	%rd2137, %rd2136, %rd2770;
	add.s64 	%rd2138, %rd2137, %rd2135;
	add.s64 	%rd2139, %rd2138, %rd2132;
	add.s64 	%rd2140, %rd2139, %rd2055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10271,%dummy}, %rd2127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10272}, %rd2127;
	}
	shf.r.wrap.b32 	%r10273, %r10272, %r10271, 28;
	shf.r.wrap.b32 	%r10274, %r10271, %r10272, 28;
	mov.b64 	%rd2141, {%r10274, %r10273};
	shf.l.wrap.b32 	%r10275, %r10271, %r10272, 30;
	shf.l.wrap.b32 	%r10276, %r10272, %r10271, 30;
	mov.b64 	%rd2142, {%r10276, %r10275};
	xor.b64  	%rd2143, %rd2142, %rd2141;
	shf.l.wrap.b32 	%r10277, %r10271, %r10272, 25;
	shf.l.wrap.b32 	%r10278, %r10272, %r10271, 25;
	mov.b64 	%rd2144, {%r10278, %r10277};
	xor.b64  	%rd2145, %rd2143, %rd2144;
	xor.b64  	%rd2146, %rd2127, %rd2079;
	xor.b64  	%rd2147, %rd2127, %rd2103;
	and.b64  	%rd2148, %rd2147, %rd2146;
	xor.b64  	%rd2149, %rd2148, %rd2127;
	add.s64 	%rd2150, %rd2139, %rd2149;
	add.s64 	%rd2151, %rd2150, %rd2145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10279,%dummy}, %rd2140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10280}, %rd2140;
	}
	shf.r.wrap.b32 	%r10281, %r10280, %r10279, 14;
	shf.r.wrap.b32 	%r10282, %r10279, %r10280, 14;
	mov.b64 	%rd2152, {%r10282, %r10281};
	shf.r.wrap.b32 	%r10283, %r10280, %r10279, 18;
	shf.r.wrap.b32 	%r10284, %r10279, %r10280, 18;
	mov.b64 	%rd2153, {%r10284, %r10283};
	xor.b64  	%rd2154, %rd2153, %rd2152;
	shf.l.wrap.b32 	%r10285, %r10279, %r10280, 23;
	shf.l.wrap.b32 	%r10286, %r10280, %r10279, 23;
	mov.b64 	%rd2155, {%r10286, %r10285};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	xor.b64  	%rd2157, %rd2116, %rd2092;
	and.b64  	%rd2158, %rd2140, %rd2157;
	xor.b64  	%rd2159, %rd2158, %rd2092;
	add.s64 	%rd2160, %rd2068, %rd1813;
	add.s64 	%rd2161, %rd2160, %rd2771;
	add.s64 	%rd2162, %rd2161, %rd2159;
	add.s64 	%rd2163, %rd2162, %rd2156;
	add.s64 	%rd2164, %rd2163, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10287,%dummy}, %rd2151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10288}, %rd2151;
	}
	shf.r.wrap.b32 	%r10289, %r10288, %r10287, 28;
	shf.r.wrap.b32 	%r10290, %r10287, %r10288, 28;
	mov.b64 	%rd2165, {%r10290, %r10289};
	shf.l.wrap.b32 	%r10291, %r10287, %r10288, 30;
	shf.l.wrap.b32 	%r10292, %r10288, %r10287, 30;
	mov.b64 	%rd2166, {%r10292, %r10291};
	xor.b64  	%rd2167, %rd2166, %rd2165;
	shf.l.wrap.b32 	%r10293, %r10287, %r10288, 25;
	shf.l.wrap.b32 	%r10294, %r10288, %r10287, 25;
	mov.b64 	%rd2168, {%r10294, %r10293};
	xor.b64  	%rd2169, %rd2167, %rd2168;
	xor.b64  	%rd2170, %rd2151, %rd2103;
	xor.b64  	%rd2171, %rd2151, %rd2127;
	and.b64  	%rd2172, %rd2171, %rd2170;
	xor.b64  	%rd2173, %rd2172, %rd2151;
	add.s64 	%rd2174, %rd2163, %rd2173;
	add.s64 	%rd2175, %rd2174, %rd2169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10295,%dummy}, %rd2164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10296}, %rd2164;
	}
	shf.r.wrap.b32 	%r10297, %r10296, %r10295, 14;
	shf.r.wrap.b32 	%r10298, %r10295, %r10296, 14;
	mov.b64 	%rd2176, {%r10298, %r10297};
	shf.r.wrap.b32 	%r10299, %r10296, %r10295, 18;
	shf.r.wrap.b32 	%r10300, %r10295, %r10296, 18;
	mov.b64 	%rd2177, {%r10300, %r10299};
	xor.b64  	%rd2178, %rd2177, %rd2176;
	shf.l.wrap.b32 	%r10301, %r10295, %r10296, 23;
	shf.l.wrap.b32 	%r10302, %r10296, %r10295, 23;
	mov.b64 	%rd2179, {%r10302, %r10301};
	xor.b64  	%rd2180, %rd2178, %rd2179;
	xor.b64  	%rd2181, %rd2140, %rd2116;
	and.b64  	%rd2182, %rd2164, %rd2181;
	xor.b64  	%rd2183, %rd2182, %rd2116;
	add.s64 	%rd2184, %rd2092, %rd1826;
	add.s64 	%rd2185, %rd2184, %rd2772;
	add.s64 	%rd2186, %rd2185, %rd2183;
	add.s64 	%rd2187, %rd2186, %rd2180;
	add.s64 	%rd2188, %rd2187, %rd2103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10303,%dummy}, %rd2175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10304}, %rd2175;
	}
	shf.r.wrap.b32 	%r10305, %r10304, %r10303, 28;
	shf.r.wrap.b32 	%r10306, %r10303, %r10304, 28;
	mov.b64 	%rd2189, {%r10306, %r10305};
	shf.l.wrap.b32 	%r10307, %r10303, %r10304, 30;
	shf.l.wrap.b32 	%r10308, %r10304, %r10303, 30;
	mov.b64 	%rd2190, {%r10308, %r10307};
	xor.b64  	%rd2191, %rd2190, %rd2189;
	shf.l.wrap.b32 	%r10309, %r10303, %r10304, 25;
	shf.l.wrap.b32 	%r10310, %r10304, %r10303, 25;
	mov.b64 	%rd2192, {%r10310, %r10309};
	xor.b64  	%rd2193, %rd2191, %rd2192;
	xor.b64  	%rd2194, %rd2175, %rd2127;
	xor.b64  	%rd2195, %rd2175, %rd2151;
	and.b64  	%rd2196, %rd2195, %rd2194;
	xor.b64  	%rd2197, %rd2196, %rd2175;
	add.s64 	%rd2198, %rd2187, %rd2197;
	add.s64 	%rd2199, %rd2198, %rd2193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10311,%dummy}, %rd2188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10312}, %rd2188;
	}
	shf.r.wrap.b32 	%r10313, %r10312, %r10311, 14;
	shf.r.wrap.b32 	%r10314, %r10311, %r10312, 14;
	mov.b64 	%rd2200, {%r10314, %r10313};
	shf.r.wrap.b32 	%r10315, %r10312, %r10311, 18;
	shf.r.wrap.b32 	%r10316, %r10311, %r10312, 18;
	mov.b64 	%rd2201, {%r10316, %r10315};
	xor.b64  	%rd2202, %rd2201, %rd2200;
	shf.l.wrap.b32 	%r10317, %r10311, %r10312, 23;
	shf.l.wrap.b32 	%r10318, %r10312, %r10311, 23;
	mov.b64 	%rd2203, {%r10318, %r10317};
	xor.b64  	%rd2204, %rd2202, %rd2203;
	xor.b64  	%rd2205, %rd2164, %rd2140;
	and.b64  	%rd2206, %rd2188, %rd2205;
	xor.b64  	%rd2207, %rd2206, %rd2140;
	add.s64 	%rd2208, %rd2116, %rd1839;
	add.s64 	%rd2209, %rd2208, %rd2773;
	add.s64 	%rd2210, %rd2209, %rd2207;
	add.s64 	%rd2211, %rd2210, %rd2204;
	add.s64 	%rd2212, %rd2211, %rd2127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10319,%dummy}, %rd2199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10320}, %rd2199;
	}
	shf.r.wrap.b32 	%r10321, %r10320, %r10319, 28;
	shf.r.wrap.b32 	%r10322, %r10319, %r10320, 28;
	mov.b64 	%rd2213, {%r10322, %r10321};
	shf.l.wrap.b32 	%r10323, %r10319, %r10320, 30;
	shf.l.wrap.b32 	%r10324, %r10320, %r10319, 30;
	mov.b64 	%rd2214, {%r10324, %r10323};
	xor.b64  	%rd2215, %rd2214, %rd2213;
	shf.l.wrap.b32 	%r10325, %r10319, %r10320, 25;
	shf.l.wrap.b32 	%r10326, %r10320, %r10319, 25;
	mov.b64 	%rd2216, {%r10326, %r10325};
	xor.b64  	%rd2217, %rd2215, %rd2216;
	xor.b64  	%rd2218, %rd2199, %rd2151;
	xor.b64  	%rd2219, %rd2199, %rd2175;
	and.b64  	%rd2220, %rd2219, %rd2218;
	xor.b64  	%rd2221, %rd2220, %rd2199;
	add.s64 	%rd2222, %rd2211, %rd2221;
	add.s64 	%rd2223, %rd2222, %rd2217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10327,%dummy}, %rd1826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10328}, %rd1826;
	}
	shf.r.wrap.b32 	%r10329, %r10328, %r10327, 19;
	shf.r.wrap.b32 	%r10330, %r10327, %r10328, 19;
	mov.b64 	%rd2224, {%r10330, %r10329};
	shf.l.wrap.b32 	%r10331, %r10327, %r10328, 3;
	shf.l.wrap.b32 	%r10332, %r10328, %r10327, 3;
	mov.b64 	%rd2225, {%r10332, %r10331};
	shr.u64 	%rd2226, %rd1826, 6;
	xor.b64  	%rd2227, %rd2224, %rd2226;
	xor.b64  	%rd2228, %rd2227, %rd2225;
	shf.r.wrap.b32 	%r10333, %r9942, %r9941, 1;
	shf.r.wrap.b32 	%r10334, %r9941, %r9942, 1;
	mov.b64 	%rd2229, {%r10334, %r10333};
	shf.r.wrap.b32 	%r10335, %r9942, %r9941, 8;
	shf.r.wrap.b32 	%r10336, %r9941, %r9942, 8;
	mov.b64 	%rd2230, {%r10336, %r10335};
	shr.u64 	%rd2231, %rd1657, 7;
	xor.b64  	%rd2232, %rd2229, %rd2231;
	xor.b64  	%rd2233, %rd2232, %rd2230;
	add.s64 	%rd2234, %rd1644, %rd1761;
	add.s64 	%rd2235, %rd2234, %rd2228;
	add.s64 	%rd2236, %rd2235, %rd2233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10337,%dummy}, %rd1839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10338}, %rd1839;
	}
	shf.r.wrap.b32 	%r10339, %r10338, %r10337, 19;
	shf.r.wrap.b32 	%r10340, %r10337, %r10338, 19;
	mov.b64 	%rd2237, {%r10340, %r10339};
	shf.l.wrap.b32 	%r10341, %r10337, %r10338, 3;
	shf.l.wrap.b32 	%r10342, %r10338, %r10337, 3;
	mov.b64 	%rd2238, {%r10342, %r10341};
	shr.u64 	%rd2239, %rd1839, 6;
	xor.b64  	%rd2240, %rd2237, %rd2239;
	xor.b64  	%rd2241, %rd2240, %rd2238;
	shf.r.wrap.b32 	%r10343, %r9952, %r9951, 1;
	shf.r.wrap.b32 	%r10344, %r9951, %r9952, 1;
	mov.b64 	%rd2242, {%r10344, %r10343};
	shf.r.wrap.b32 	%r10345, %r9952, %r9951, 8;
	shf.r.wrap.b32 	%r10346, %r9951, %r9952, 8;
	mov.b64 	%rd2243, {%r10346, %r10345};
	shr.u64 	%rd2244, %rd1670, 7;
	xor.b64  	%rd2245, %rd2242, %rd2244;
	xor.b64  	%rd2246, %rd2245, %rd2243;
	add.s64 	%rd2247, %rd1657, %rd1774;
	add.s64 	%rd2248, %rd2247, %rd2241;
	add.s64 	%rd2249, %rd2248, %rd2246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10347,%dummy}, %rd2236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10348}, %rd2236;
	}
	shf.r.wrap.b32 	%r10349, %r10348, %r10347, 19;
	shf.r.wrap.b32 	%r10350, %r10347, %r10348, 19;
	mov.b64 	%rd2250, {%r10350, %r10349};
	shf.l.wrap.b32 	%r10351, %r10347, %r10348, 3;
	shf.l.wrap.b32 	%r10352, %r10348, %r10347, 3;
	mov.b64 	%rd2251, {%r10352, %r10351};
	shr.u64 	%rd2252, %rd2236, 6;
	xor.b64  	%rd2253, %rd2250, %rd2252;
	xor.b64  	%rd2254, %rd2253, %rd2251;
	shf.r.wrap.b32 	%r10353, %r9962, %r9961, 1;
	shf.r.wrap.b32 	%r10354, %r9961, %r9962, 1;
	mov.b64 	%rd2255, {%r10354, %r10353};
	shf.r.wrap.b32 	%r10355, %r9962, %r9961, 8;
	shf.r.wrap.b32 	%r10356, %r9961, %r9962, 8;
	mov.b64 	%rd2256, {%r10356, %r10355};
	shr.u64 	%rd2257, %rd1683, 7;
	xor.b64  	%rd2258, %rd2255, %rd2257;
	xor.b64  	%rd2259, %rd2258, %rd2256;
	add.s64 	%rd2260, %rd1670, %rd1787;
	add.s64 	%rd2261, %rd2260, %rd2254;
	add.s64 	%rd2262, %rd2261, %rd2259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10357,%dummy}, %rd2249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10358}, %rd2249;
	}
	shf.r.wrap.b32 	%r10359, %r10358, %r10357, 19;
	shf.r.wrap.b32 	%r10360, %r10357, %r10358, 19;
	mov.b64 	%rd2263, {%r10360, %r10359};
	shf.l.wrap.b32 	%r10361, %r10357, %r10358, 3;
	shf.l.wrap.b32 	%r10362, %r10358, %r10357, 3;
	mov.b64 	%rd2264, {%r10362, %r10361};
	shr.u64 	%rd2265, %rd2249, 6;
	xor.b64  	%rd2266, %rd2263, %rd2265;
	xor.b64  	%rd2267, %rd2266, %rd2264;
	shf.r.wrap.b32 	%r10363, %r9972, %r9971, 1;
	shf.r.wrap.b32 	%r10364, %r9971, %r9972, 1;
	mov.b64 	%rd2268, {%r10364, %r10363};
	shf.r.wrap.b32 	%r10365, %r9972, %r9971, 8;
	shf.r.wrap.b32 	%r10366, %r9971, %r9972, 8;
	mov.b64 	%rd2269, {%r10366, %r10365};
	shr.u64 	%rd2270, %rd1696, 7;
	xor.b64  	%rd2271, %rd2268, %rd2270;
	xor.b64  	%rd2272, %rd2271, %rd2269;
	add.s64 	%rd2273, %rd1683, %rd1800;
	add.s64 	%rd2274, %rd2273, %rd2267;
	add.s64 	%rd2275, %rd2274, %rd2272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10367,%dummy}, %rd2262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10368}, %rd2262;
	}
	shf.r.wrap.b32 	%r10369, %r10368, %r10367, 19;
	shf.r.wrap.b32 	%r10370, %r10367, %r10368, 19;
	mov.b64 	%rd2276, {%r10370, %r10369};
	shf.l.wrap.b32 	%r10371, %r10367, %r10368, 3;
	shf.l.wrap.b32 	%r10372, %r10368, %r10367, 3;
	mov.b64 	%rd2277, {%r10372, %r10371};
	shr.u64 	%rd2278, %rd2262, 6;
	xor.b64  	%rd2279, %rd2276, %rd2278;
	xor.b64  	%rd2280, %rd2279, %rd2277;
	shf.r.wrap.b32 	%r10373, %r9982, %r9981, 1;
	shf.r.wrap.b32 	%r10374, %r9981, %r9982, 1;
	mov.b64 	%rd2281, {%r10374, %r10373};
	shf.r.wrap.b32 	%r10375, %r9982, %r9981, 8;
	shf.r.wrap.b32 	%r10376, %r9981, %r9982, 8;
	mov.b64 	%rd2282, {%r10376, %r10375};
	shr.u64 	%rd2283, %rd1709, 7;
	xor.b64  	%rd2284, %rd2281, %rd2283;
	xor.b64  	%rd2285, %rd2284, %rd2282;
	add.s64 	%rd2286, %rd1696, %rd1813;
	add.s64 	%rd2287, %rd2286, %rd2280;
	add.s64 	%rd2288, %rd2287, %rd2285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10377,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10378}, %rd2275;
	}
	shf.r.wrap.b32 	%r10379, %r10378, %r10377, 19;
	shf.r.wrap.b32 	%r10380, %r10377, %r10378, 19;
	mov.b64 	%rd2289, {%r10380, %r10379};
	shf.l.wrap.b32 	%r10381, %r10377, %r10378, 3;
	shf.l.wrap.b32 	%r10382, %r10378, %r10377, 3;
	mov.b64 	%rd2290, {%r10382, %r10381};
	shr.u64 	%rd2291, %rd2275, 6;
	xor.b64  	%rd2292, %rd2289, %rd2291;
	xor.b64  	%rd2293, %rd2292, %rd2290;
	shf.r.wrap.b32 	%r10383, %r9992, %r9991, 1;
	shf.r.wrap.b32 	%r10384, %r9991, %r9992, 1;
	mov.b64 	%rd2294, {%r10384, %r10383};
	shf.r.wrap.b32 	%r10385, %r9992, %r9991, 8;
	shf.r.wrap.b32 	%r10386, %r9991, %r9992, 8;
	mov.b64 	%rd2295, {%r10386, %r10385};
	shr.u64 	%rd2296, %rd1722, 7;
	xor.b64  	%rd2297, %rd2294, %rd2296;
	xor.b64  	%rd2298, %rd2297, %rd2295;
	add.s64 	%rd2299, %rd1709, %rd1826;
	add.s64 	%rd2300, %rd2299, %rd2293;
	add.s64 	%rd2301, %rd2300, %rd2298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10387,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10388}, %rd2288;
	}
	shf.r.wrap.b32 	%r10389, %r10388, %r10387, 19;
	shf.r.wrap.b32 	%r10390, %r10387, %r10388, 19;
	mov.b64 	%rd2302, {%r10390, %r10389};
	shf.l.wrap.b32 	%r10391, %r10387, %r10388, 3;
	shf.l.wrap.b32 	%r10392, %r10388, %r10387, 3;
	mov.b64 	%rd2303, {%r10392, %r10391};
	shr.u64 	%rd2304, %rd2288, 6;
	xor.b64  	%rd2305, %rd2302, %rd2304;
	xor.b64  	%rd2306, %rd2305, %rd2303;
	shf.r.wrap.b32 	%r10393, %r10002, %r10001, 1;
	shf.r.wrap.b32 	%r10394, %r10001, %r10002, 1;
	mov.b64 	%rd2307, {%r10394, %r10393};
	shf.r.wrap.b32 	%r10395, %r10002, %r10001, 8;
	shf.r.wrap.b32 	%r10396, %r10001, %r10002, 8;
	mov.b64 	%rd2308, {%r10396, %r10395};
	shr.u64 	%rd2309, %rd1735, 7;
	xor.b64  	%rd2310, %rd2307, %rd2309;
	xor.b64  	%rd2311, %rd2310, %rd2308;
	add.s64 	%rd2312, %rd1722, %rd1839;
	add.s64 	%rd2313, %rd2312, %rd2306;
	add.s64 	%rd2314, %rd2313, %rd2311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10397,%dummy}, %rd2301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10398}, %rd2301;
	}
	shf.r.wrap.b32 	%r10399, %r10398, %r10397, 19;
	shf.r.wrap.b32 	%r10400, %r10397, %r10398, 19;
	mov.b64 	%rd2315, {%r10400, %r10399};
	shf.l.wrap.b32 	%r10401, %r10397, %r10398, 3;
	shf.l.wrap.b32 	%r10402, %r10398, %r10397, 3;
	mov.b64 	%rd2316, {%r10402, %r10401};
	shr.u64 	%rd2317, %rd2301, 6;
	xor.b64  	%rd2318, %rd2315, %rd2317;
	xor.b64  	%rd2319, %rd2318, %rd2316;
	shf.r.wrap.b32 	%r10403, %r10012, %r10011, 1;
	shf.r.wrap.b32 	%r10404, %r10011, %r10012, 1;
	mov.b64 	%rd2320, {%r10404, %r10403};
	shf.r.wrap.b32 	%r10405, %r10012, %r10011, 8;
	shf.r.wrap.b32 	%r10406, %r10011, %r10012, 8;
	mov.b64 	%rd2321, {%r10406, %r10405};
	shr.u64 	%rd2322, %rd1748, 7;
	xor.b64  	%rd2323, %rd2320, %rd2322;
	xor.b64  	%rd2324, %rd2323, %rd2321;
	add.s64 	%rd2325, %rd2236, %rd1735;
	add.s64 	%rd2326, %rd2325, %rd2319;
	add.s64 	%rd2327, %rd2326, %rd2324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10407,%dummy}, %rd2314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10408}, %rd2314;
	}
	shf.r.wrap.b32 	%r10409, %r10408, %r10407, 19;
	shf.r.wrap.b32 	%r10410, %r10407, %r10408, 19;
	mov.b64 	%rd2328, {%r10410, %r10409};
	shf.l.wrap.b32 	%r10411, %r10407, %r10408, 3;
	shf.l.wrap.b32 	%r10412, %r10408, %r10407, 3;
	mov.b64 	%rd2329, {%r10412, %r10411};
	shr.u64 	%rd2330, %rd2314, 6;
	xor.b64  	%rd2331, %rd2328, %rd2330;
	xor.b64  	%rd2332, %rd2331, %rd2329;
	shf.r.wrap.b32 	%r10413, %r10022, %r10021, 1;
	shf.r.wrap.b32 	%r10414, %r10021, %r10022, 1;
	mov.b64 	%rd2333, {%r10414, %r10413};
	shf.r.wrap.b32 	%r10415, %r10022, %r10021, 8;
	shf.r.wrap.b32 	%r10416, %r10021, %r10022, 8;
	mov.b64 	%rd2334, {%r10416, %r10415};
	shr.u64 	%rd2335, %rd1761, 7;
	xor.b64  	%rd2336, %rd2333, %rd2335;
	xor.b64  	%rd2337, %rd2336, %rd2334;
	add.s64 	%rd2338, %rd2249, %rd1748;
	add.s64 	%rd2339, %rd2338, %rd2332;
	add.s64 	%rd2340, %rd2339, %rd2337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10417,%dummy}, %rd2327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10418}, %rd2327;
	}
	shf.r.wrap.b32 	%r10419, %r10418, %r10417, 19;
	shf.r.wrap.b32 	%r10420, %r10417, %r10418, 19;
	mov.b64 	%rd2341, {%r10420, %r10419};
	shf.l.wrap.b32 	%r10421, %r10417, %r10418, 3;
	shf.l.wrap.b32 	%r10422, %r10418, %r10417, 3;
	mov.b64 	%rd2342, {%r10422, %r10421};
	shr.u64 	%rd2343, %rd2327, 6;
	xor.b64  	%rd2344, %rd2341, %rd2343;
	xor.b64  	%rd2345, %rd2344, %rd2342;
	shf.r.wrap.b32 	%r10423, %r10032, %r10031, 1;
	shf.r.wrap.b32 	%r10424, %r10031, %r10032, 1;
	mov.b64 	%rd2346, {%r10424, %r10423};
	shf.r.wrap.b32 	%r10425, %r10032, %r10031, 8;
	shf.r.wrap.b32 	%r10426, %r10031, %r10032, 8;
	mov.b64 	%rd2347, {%r10426, %r10425};
	shr.u64 	%rd2348, %rd1774, 7;
	xor.b64  	%rd2349, %rd2346, %rd2348;
	xor.b64  	%rd2350, %rd2349, %rd2347;
	add.s64 	%rd2351, %rd2262, %rd1761;
	add.s64 	%rd2352, %rd2351, %rd2345;
	add.s64 	%rd2353, %rd2352, %rd2350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10427,%dummy}, %rd2340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10428}, %rd2340;
	}
	shf.r.wrap.b32 	%r10429, %r10428, %r10427, 19;
	shf.r.wrap.b32 	%r10430, %r10427, %r10428, 19;
	mov.b64 	%rd2354, {%r10430, %r10429};
	shf.l.wrap.b32 	%r10431, %r10427, %r10428, 3;
	shf.l.wrap.b32 	%r10432, %r10428, %r10427, 3;
	mov.b64 	%rd2355, {%r10432, %r10431};
	shr.u64 	%rd2356, %rd2340, 6;
	xor.b64  	%rd2357, %rd2354, %rd2356;
	xor.b64  	%rd2358, %rd2357, %rd2355;
	shf.r.wrap.b32 	%r10433, %r10042, %r10041, 1;
	shf.r.wrap.b32 	%r10434, %r10041, %r10042, 1;
	mov.b64 	%rd2359, {%r10434, %r10433};
	shf.r.wrap.b32 	%r10435, %r10042, %r10041, 8;
	shf.r.wrap.b32 	%r10436, %r10041, %r10042, 8;
	mov.b64 	%rd2360, {%r10436, %r10435};
	shr.u64 	%rd2361, %rd1787, 7;
	xor.b64  	%rd2362, %rd2359, %rd2361;
	xor.b64  	%rd2363, %rd2362, %rd2360;
	add.s64 	%rd2364, %rd2275, %rd1774;
	add.s64 	%rd2365, %rd2364, %rd2358;
	add.s64 	%rd2366, %rd2365, %rd2363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10437,%dummy}, %rd2353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10438}, %rd2353;
	}
	shf.r.wrap.b32 	%r10439, %r10438, %r10437, 19;
	shf.r.wrap.b32 	%r10440, %r10437, %r10438, 19;
	mov.b64 	%rd2367, {%r10440, %r10439};
	shf.l.wrap.b32 	%r10441, %r10437, %r10438, 3;
	shf.l.wrap.b32 	%r10442, %r10438, %r10437, 3;
	mov.b64 	%rd2368, {%r10442, %r10441};
	shr.u64 	%rd2369, %rd2353, 6;
	xor.b64  	%rd2370, %rd2367, %rd2369;
	xor.b64  	%rd2371, %rd2370, %rd2368;
	shf.r.wrap.b32 	%r10443, %r10052, %r10051, 1;
	shf.r.wrap.b32 	%r10444, %r10051, %r10052, 1;
	mov.b64 	%rd2372, {%r10444, %r10443};
	shf.r.wrap.b32 	%r10445, %r10052, %r10051, 8;
	shf.r.wrap.b32 	%r10446, %r10051, %r10052, 8;
	mov.b64 	%rd2373, {%r10446, %r10445};
	shr.u64 	%rd2374, %rd1800, 7;
	xor.b64  	%rd2375, %rd2372, %rd2374;
	xor.b64  	%rd2376, %rd2375, %rd2373;
	add.s64 	%rd2377, %rd2288, %rd1787;
	add.s64 	%rd2378, %rd2377, %rd2371;
	add.s64 	%rd2379, %rd2378, %rd2376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10447,%dummy}, %rd2366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10448}, %rd2366;
	}
	shf.r.wrap.b32 	%r10449, %r10448, %r10447, 19;
	shf.r.wrap.b32 	%r10450, %r10447, %r10448, 19;
	mov.b64 	%rd2380, {%r10450, %r10449};
	shf.l.wrap.b32 	%r10451, %r10447, %r10448, 3;
	shf.l.wrap.b32 	%r10452, %r10448, %r10447, 3;
	mov.b64 	%rd2381, {%r10452, %r10451};
	shr.u64 	%rd2382, %rd2366, 6;
	xor.b64  	%rd2383, %rd2380, %rd2382;
	xor.b64  	%rd2384, %rd2383, %rd2381;
	shf.r.wrap.b32 	%r10453, %r10062, %r10061, 1;
	shf.r.wrap.b32 	%r10454, %r10061, %r10062, 1;
	mov.b64 	%rd2385, {%r10454, %r10453};
	shf.r.wrap.b32 	%r10455, %r10062, %r10061, 8;
	shf.r.wrap.b32 	%r10456, %r10061, %r10062, 8;
	mov.b64 	%rd2386, {%r10456, %r10455};
	shr.u64 	%rd2387, %rd1813, 7;
	xor.b64  	%rd2388, %rd2385, %rd2387;
	xor.b64  	%rd2389, %rd2388, %rd2386;
	add.s64 	%rd2390, %rd2301, %rd1800;
	add.s64 	%rd2391, %rd2390, %rd2384;
	add.s64 	%rd2392, %rd2391, %rd2389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10457,%dummy}, %rd2212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10458}, %rd2212;
	}
	shf.r.wrap.b32 	%r10459, %r10458, %r10457, 14;
	shf.r.wrap.b32 	%r10460, %r10457, %r10458, 14;
	mov.b64 	%rd2393, {%r10460, %r10459};
	shf.r.wrap.b32 	%r10461, %r10458, %r10457, 18;
	shf.r.wrap.b32 	%r10462, %r10457, %r10458, 18;
	mov.b64 	%rd2394, {%r10462, %r10461};
	xor.b64  	%rd2395, %rd2394, %rd2393;
	shf.l.wrap.b32 	%r10463, %r10457, %r10458, 23;
	shf.l.wrap.b32 	%r10464, %r10458, %r10457, 23;
	mov.b64 	%rd2396, {%r10464, %r10463};
	xor.b64  	%rd2397, %rd2395, %rd2396;
	xor.b64  	%rd2398, %rd2164, %rd2188;
	and.b64  	%rd2399, %rd2398, %rd2212;
	xor.b64  	%rd2400, %rd2399, %rd2164;
	add.s64 	%rd2401, %rd2400, %rd2140;
	add.s64 	%rd2402, %rd2401, %rd2236;
	add.s64 	%rd2403, %rd2402, %rd2774;
	add.s64 	%rd2404, %rd2403, %rd2397;
	add.s64 	%rd2405, %rd2404, %rd2151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10465,%dummy}, %rd2223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10466}, %rd2223;
	}
	shf.r.wrap.b32 	%r10467, %r10466, %r10465, 28;
	shf.r.wrap.b32 	%r10468, %r10465, %r10466, 28;
	mov.b64 	%rd2406, {%r10468, %r10467};
	shf.l.wrap.b32 	%r10469, %r10465, %r10466, 30;
	shf.l.wrap.b32 	%r10470, %r10466, %r10465, 30;
	mov.b64 	%rd2407, {%r10470, %r10469};
	xor.b64  	%rd2408, %rd2407, %rd2406;
	shf.l.wrap.b32 	%r10471, %r10465, %r10466, 25;
	shf.l.wrap.b32 	%r10472, %r10466, %r10465, 25;
	mov.b64 	%rd2409, {%r10472, %r10471};
	xor.b64  	%rd2410, %rd2408, %rd2409;
	xor.b64  	%rd2411, %rd2223, %rd2175;
	xor.b64  	%rd2412, %rd2223, %rd2199;
	and.b64  	%rd2413, %rd2412, %rd2411;
	xor.b64  	%rd2414, %rd2413, %rd2223;
	add.s64 	%rd2415, %rd2404, %rd2414;
	add.s64 	%rd2416, %rd2415, %rd2410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10473,%dummy}, %rd2405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10474}, %rd2405;
	}
	shf.r.wrap.b32 	%r10475, %r10474, %r10473, 14;
	shf.r.wrap.b32 	%r10476, %r10473, %r10474, 14;
	mov.b64 	%rd2417, {%r10476, %r10475};
	shf.r.wrap.b32 	%r10477, %r10474, %r10473, 18;
	shf.r.wrap.b32 	%r10478, %r10473, %r10474, 18;
	mov.b64 	%rd2418, {%r10478, %r10477};
	xor.b64  	%rd2419, %rd2418, %rd2417;
	shf.l.wrap.b32 	%r10479, %r10473, %r10474, 23;
	shf.l.wrap.b32 	%r10480, %r10474, %r10473, 23;
	mov.b64 	%rd2420, {%r10480, %r10479};
	xor.b64  	%rd2421, %rd2419, %rd2420;
	xor.b64  	%rd2422, %rd2188, %rd2212;
	and.b64  	%rd2423, %rd2405, %rd2422;
	xor.b64  	%rd2424, %rd2423, %rd2188;
	add.s64 	%rd2425, %rd2249, %rd2164;
	add.s64 	%rd2426, %rd2425, %rd2775;
	add.s64 	%rd2427, %rd2426, %rd2424;
	add.s64 	%rd2428, %rd2427, %rd2421;
	add.s64 	%rd2429, %rd2428, %rd2175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10481,%dummy}, %rd2416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10482}, %rd2416;
	}
	shf.r.wrap.b32 	%r10483, %r10482, %r10481, 28;
	shf.r.wrap.b32 	%r10484, %r10481, %r10482, 28;
	mov.b64 	%rd2430, {%r10484, %r10483};
	shf.l.wrap.b32 	%r10485, %r10481, %r10482, 30;
	shf.l.wrap.b32 	%r10486, %r10482, %r10481, 30;
	mov.b64 	%rd2431, {%r10486, %r10485};
	xor.b64  	%rd2432, %rd2431, %rd2430;
	shf.l.wrap.b32 	%r10487, %r10481, %r10482, 25;
	shf.l.wrap.b32 	%r10488, %r10482, %r10481, 25;
	mov.b64 	%rd2433, {%r10488, %r10487};
	xor.b64  	%rd2434, %rd2432, %rd2433;
	xor.b64  	%rd2435, %rd2416, %rd2199;
	xor.b64  	%rd2436, %rd2416, %rd2223;
	and.b64  	%rd2437, %rd2436, %rd2435;
	xor.b64  	%rd2438, %rd2437, %rd2416;
	add.s64 	%rd2439, %rd2428, %rd2438;
	add.s64 	%rd2440, %rd2439, %rd2434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10489,%dummy}, %rd2429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10490}, %rd2429;
	}
	shf.r.wrap.b32 	%r10491, %r10490, %r10489, 14;
	shf.r.wrap.b32 	%r10492, %r10489, %r10490, 14;
	mov.b64 	%rd2441, {%r10492, %r10491};
	shf.r.wrap.b32 	%r10493, %r10490, %r10489, 18;
	shf.r.wrap.b32 	%r10494, %r10489, %r10490, 18;
	mov.b64 	%rd2442, {%r10494, %r10493};
	xor.b64  	%rd2443, %rd2442, %rd2441;
	shf.l.wrap.b32 	%r10495, %r10489, %r10490, 23;
	shf.l.wrap.b32 	%r10496, %r10490, %r10489, 23;
	mov.b64 	%rd2444, {%r10496, %r10495};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	xor.b64  	%rd2446, %rd2405, %rd2212;
	and.b64  	%rd2447, %rd2429, %rd2446;
	xor.b64  	%rd2448, %rd2447, %rd2212;
	add.s64 	%rd2449, %rd2262, %rd2188;
	add.s64 	%rd2450, %rd2449, %rd2776;
	add.s64 	%rd2451, %rd2450, %rd2448;
	add.s64 	%rd2452, %rd2451, %rd2445;
	add.s64 	%rd2453, %rd2452, %rd2199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10497,%dummy}, %rd2440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10498}, %rd2440;
	}
	shf.r.wrap.b32 	%r10499, %r10498, %r10497, 28;
	shf.r.wrap.b32 	%r10500, %r10497, %r10498, 28;
	mov.b64 	%rd2454, {%r10500, %r10499};
	shf.l.wrap.b32 	%r10501, %r10497, %r10498, 30;
	shf.l.wrap.b32 	%r10502, %r10498, %r10497, 30;
	mov.b64 	%rd2455, {%r10502, %r10501};
	xor.b64  	%rd2456, %rd2455, %rd2454;
	shf.l.wrap.b32 	%r10503, %r10497, %r10498, 25;
	shf.l.wrap.b32 	%r10504, %r10498, %r10497, 25;
	mov.b64 	%rd2457, {%r10504, %r10503};
	xor.b64  	%rd2458, %rd2456, %rd2457;
	xor.b64  	%rd2459, %rd2440, %rd2223;
	xor.b64  	%rd2460, %rd2440, %rd2416;
	and.b64  	%rd2461, %rd2460, %rd2459;
	xor.b64  	%rd2462, %rd2461, %rd2440;
	add.s64 	%rd2463, %rd2452, %rd2462;
	add.s64 	%rd2464, %rd2463, %rd2458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10505,%dummy}, %rd2453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10506}, %rd2453;
	}
	shf.r.wrap.b32 	%r10507, %r10506, %r10505, 14;
	shf.r.wrap.b32 	%r10508, %r10505, %r10506, 14;
	mov.b64 	%rd2465, {%r10508, %r10507};
	shf.r.wrap.b32 	%r10509, %r10506, %r10505, 18;
	shf.r.wrap.b32 	%r10510, %r10505, %r10506, 18;
	mov.b64 	%rd2466, {%r10510, %r10509};
	xor.b64  	%rd2467, %rd2466, %rd2465;
	shf.l.wrap.b32 	%r10511, %r10505, %r10506, 23;
	shf.l.wrap.b32 	%r10512, %r10506, %r10505, 23;
	mov.b64 	%rd2468, {%r10512, %r10511};
	xor.b64  	%rd2469, %rd2467, %rd2468;
	xor.b64  	%rd2470, %rd2429, %rd2405;
	and.b64  	%rd2471, %rd2453, %rd2470;
	xor.b64  	%rd2472, %rd2471, %rd2405;
	add.s64 	%rd2473, %rd2275, %rd2212;
	add.s64 	%rd2474, %rd2473, %rd2777;
	add.s64 	%rd2475, %rd2474, %rd2472;
	add.s64 	%rd2476, %rd2475, %rd2469;
	add.s64 	%rd2477, %rd2476, %rd2223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10513,%dummy}, %rd2464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10514}, %rd2464;
	}
	shf.r.wrap.b32 	%r10515, %r10514, %r10513, 28;
	shf.r.wrap.b32 	%r10516, %r10513, %r10514, 28;
	mov.b64 	%rd2478, {%r10516, %r10515};
	shf.l.wrap.b32 	%r10517, %r10513, %r10514, 30;
	shf.l.wrap.b32 	%r10518, %r10514, %r10513, 30;
	mov.b64 	%rd2479, {%r10518, %r10517};
	xor.b64  	%rd2480, %rd2479, %rd2478;
	shf.l.wrap.b32 	%r10519, %r10513, %r10514, 25;
	shf.l.wrap.b32 	%r10520, %r10514, %r10513, 25;
	mov.b64 	%rd2481, {%r10520, %r10519};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	xor.b64  	%rd2483, %rd2464, %rd2416;
	xor.b64  	%rd2484, %rd2464, %rd2440;
	and.b64  	%rd2485, %rd2484, %rd2483;
	xor.b64  	%rd2486, %rd2485, %rd2464;
	add.s64 	%rd2487, %rd2476, %rd2486;
	add.s64 	%rd2488, %rd2487, %rd2482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10521,%dummy}, %rd2477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10522}, %rd2477;
	}
	shf.r.wrap.b32 	%r10523, %r10522, %r10521, 14;
	shf.r.wrap.b32 	%r10524, %r10521, %r10522, 14;
	mov.b64 	%rd2489, {%r10524, %r10523};
	shf.r.wrap.b32 	%r10525, %r10522, %r10521, 18;
	shf.r.wrap.b32 	%r10526, %r10521, %r10522, 18;
	mov.b64 	%rd2490, {%r10526, %r10525};
	xor.b64  	%rd2491, %rd2490, %rd2489;
	shf.l.wrap.b32 	%r10527, %r10521, %r10522, 23;
	shf.l.wrap.b32 	%r10528, %r10522, %r10521, 23;
	mov.b64 	%rd2492, {%r10528, %r10527};
	xor.b64  	%rd2493, %rd2491, %rd2492;
	xor.b64  	%rd2494, %rd2453, %rd2429;
	and.b64  	%rd2495, %rd2477, %rd2494;
	xor.b64  	%rd2496, %rd2495, %rd2429;
	add.s64 	%rd2497, %rd2405, %rd2288;
	add.s64 	%rd2498, %rd2497, %rd2778;
	add.s64 	%rd2499, %rd2498, %rd2496;
	add.s64 	%rd2500, %rd2499, %rd2493;
	add.s64 	%rd2501, %rd2500, %rd2416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10529,%dummy}, %rd2488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10530}, %rd2488;
	}
	shf.r.wrap.b32 	%r10531, %r10530, %r10529, 28;
	shf.r.wrap.b32 	%r10532, %r10529, %r10530, 28;
	mov.b64 	%rd2502, {%r10532, %r10531};
	shf.l.wrap.b32 	%r10533, %r10529, %r10530, 30;
	shf.l.wrap.b32 	%r10534, %r10530, %r10529, 30;
	mov.b64 	%rd2503, {%r10534, %r10533};
	xor.b64  	%rd2504, %rd2503, %rd2502;
	shf.l.wrap.b32 	%r10535, %r10529, %r10530, 25;
	shf.l.wrap.b32 	%r10536, %r10530, %r10529, 25;
	mov.b64 	%rd2505, {%r10536, %r10535};
	xor.b64  	%rd2506, %rd2504, %rd2505;
	xor.b64  	%rd2507, %rd2488, %rd2440;
	xor.b64  	%rd2508, %rd2488, %rd2464;
	and.b64  	%rd2509, %rd2508, %rd2507;
	xor.b64  	%rd2510, %rd2509, %rd2488;
	add.s64 	%rd2511, %rd2500, %rd2510;
	add.s64 	%rd2512, %rd2511, %rd2506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10537,%dummy}, %rd2501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10538}, %rd2501;
	}
	shf.r.wrap.b32 	%r10539, %r10538, %r10537, 14;
	shf.r.wrap.b32 	%r10540, %r10537, %r10538, 14;
	mov.b64 	%rd2513, {%r10540, %r10539};
	shf.r.wrap.b32 	%r10541, %r10538, %r10537, 18;
	shf.r.wrap.b32 	%r10542, %r10537, %r10538, 18;
	mov.b64 	%rd2514, {%r10542, %r10541};
	xor.b64  	%rd2515, %rd2514, %rd2513;
	shf.l.wrap.b32 	%r10543, %r10537, %r10538, 23;
	shf.l.wrap.b32 	%r10544, %r10538, %r10537, 23;
	mov.b64 	%rd2516, {%r10544, %r10543};
	xor.b64  	%rd2517, %rd2515, %rd2516;
	xor.b64  	%rd2518, %rd2477, %rd2453;
	and.b64  	%rd2519, %rd2501, %rd2518;
	xor.b64  	%rd2520, %rd2519, %rd2453;
	add.s64 	%rd2521, %rd2429, %rd2301;
	add.s64 	%rd2522, %rd2521, %rd2779;
	add.s64 	%rd2523, %rd2522, %rd2520;
	add.s64 	%rd2524, %rd2523, %rd2517;
	add.s64 	%rd2525, %rd2524, %rd2440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10545,%dummy}, %rd2512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10546}, %rd2512;
	}
	shf.r.wrap.b32 	%r10547, %r10546, %r10545, 28;
	shf.r.wrap.b32 	%r10548, %r10545, %r10546, 28;
	mov.b64 	%rd2526, {%r10548, %r10547};
	shf.l.wrap.b32 	%r10549, %r10545, %r10546, 30;
	shf.l.wrap.b32 	%r10550, %r10546, %r10545, 30;
	mov.b64 	%rd2527, {%r10550, %r10549};
	xor.b64  	%rd2528, %rd2527, %rd2526;
	shf.l.wrap.b32 	%r10551, %r10545, %r10546, 25;
	shf.l.wrap.b32 	%r10552, %r10546, %r10545, 25;
	mov.b64 	%rd2529, {%r10552, %r10551};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	xor.b64  	%rd2531, %rd2512, %rd2464;
	xor.b64  	%rd2532, %rd2512, %rd2488;
	and.b64  	%rd2533, %rd2532, %rd2531;
	xor.b64  	%rd2534, %rd2533, %rd2512;
	add.s64 	%rd2535, %rd2524, %rd2534;
	add.s64 	%rd2536, %rd2535, %rd2530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10553,%dummy}, %rd2525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10554}, %rd2525;
	}
	shf.r.wrap.b32 	%r10555, %r10554, %r10553, 14;
	shf.r.wrap.b32 	%r10556, %r10553, %r10554, 14;
	mov.b64 	%rd2537, {%r10556, %r10555};
	shf.r.wrap.b32 	%r10557, %r10554, %r10553, 18;
	shf.r.wrap.b32 	%r10558, %r10553, %r10554, 18;
	mov.b64 	%rd2538, {%r10558, %r10557};
	xor.b64  	%rd2539, %rd2538, %rd2537;
	shf.l.wrap.b32 	%r10559, %r10553, %r10554, 23;
	shf.l.wrap.b32 	%r10560, %r10554, %r10553, 23;
	mov.b64 	%rd2540, {%r10560, %r10559};
	xor.b64  	%rd2541, %rd2539, %rd2540;
	xor.b64  	%rd2542, %rd2501, %rd2477;
	and.b64  	%rd2543, %rd2525, %rd2542;
	xor.b64  	%rd2544, %rd2543, %rd2477;
	add.s64 	%rd2545, %rd2453, %rd2314;
	add.s64 	%rd2546, %rd2545, %rd2780;
	add.s64 	%rd2547, %rd2546, %rd2544;
	add.s64 	%rd2548, %rd2547, %rd2541;
	add.s64 	%rd2549, %rd2548, %rd2464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10561,%dummy}, %rd2536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10562}, %rd2536;
	}
	shf.r.wrap.b32 	%r10563, %r10562, %r10561, 28;
	shf.r.wrap.b32 	%r10564, %r10561, %r10562, 28;
	mov.b64 	%rd2550, {%r10564, %r10563};
	shf.l.wrap.b32 	%r10565, %r10561, %r10562, 30;
	shf.l.wrap.b32 	%r10566, %r10562, %r10561, 30;
	mov.b64 	%rd2551, {%r10566, %r10565};
	xor.b64  	%rd2552, %rd2551, %rd2550;
	shf.l.wrap.b32 	%r10567, %r10561, %r10562, 25;
	shf.l.wrap.b32 	%r10568, %r10562, %r10561, 25;
	mov.b64 	%rd2553, {%r10568, %r10567};
	xor.b64  	%rd2554, %rd2552, %rd2553;
	xor.b64  	%rd2555, %rd2536, %rd2488;
	xor.b64  	%rd2556, %rd2536, %rd2512;
	and.b64  	%rd2557, %rd2556, %rd2555;
	xor.b64  	%rd2558, %rd2557, %rd2536;
	add.s64 	%rd2559, %rd2548, %rd2558;
	add.s64 	%rd2560, %rd2559, %rd2554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10569,%dummy}, %rd2549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10570}, %rd2549;
	}
	shf.r.wrap.b32 	%r10571, %r10570, %r10569, 14;
	shf.r.wrap.b32 	%r10572, %r10569, %r10570, 14;
	mov.b64 	%rd2561, {%r10572, %r10571};
	shf.r.wrap.b32 	%r10573, %r10570, %r10569, 18;
	shf.r.wrap.b32 	%r10574, %r10569, %r10570, 18;
	mov.b64 	%rd2562, {%r10574, %r10573};
	xor.b64  	%rd2563, %rd2562, %rd2561;
	shf.l.wrap.b32 	%r10575, %r10569, %r10570, 23;
	shf.l.wrap.b32 	%r10576, %r10570, %r10569, 23;
	mov.b64 	%rd2564, {%r10576, %r10575};
	xor.b64  	%rd2565, %rd2563, %rd2564;
	xor.b64  	%rd2566, %rd2525, %rd2501;
	and.b64  	%rd2567, %rd2549, %rd2566;
	xor.b64  	%rd2568, %rd2567, %rd2501;
	add.s64 	%rd2569, %rd2477, %rd2327;
	add.s64 	%rd2570, %rd2569, %rd2781;
	add.s64 	%rd2571, %rd2570, %rd2568;
	add.s64 	%rd2572, %rd2571, %rd2565;
	add.s64 	%rd2573, %rd2572, %rd2488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10577,%dummy}, %rd2560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10578}, %rd2560;
	}
	shf.r.wrap.b32 	%r10579, %r10578, %r10577, 28;
	shf.r.wrap.b32 	%r10580, %r10577, %r10578, 28;
	mov.b64 	%rd2574, {%r10580, %r10579};
	shf.l.wrap.b32 	%r10581, %r10577, %r10578, 30;
	shf.l.wrap.b32 	%r10582, %r10578, %r10577, 30;
	mov.b64 	%rd2575, {%r10582, %r10581};
	xor.b64  	%rd2576, %rd2575, %rd2574;
	shf.l.wrap.b32 	%r10583, %r10577, %r10578, 25;
	shf.l.wrap.b32 	%r10584, %r10578, %r10577, 25;
	mov.b64 	%rd2577, {%r10584, %r10583};
	xor.b64  	%rd2578, %rd2576, %rd2577;
	xor.b64  	%rd2579, %rd2560, %rd2512;
	xor.b64  	%rd2580, %rd2560, %rd2536;
	and.b64  	%rd2581, %rd2580, %rd2579;
	xor.b64  	%rd2582, %rd2581, %rd2560;
	add.s64 	%rd2583, %rd2572, %rd2582;
	add.s64 	%rd2584, %rd2583, %rd2578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10585,%dummy}, %rd2573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10586}, %rd2573;
	}
	shf.r.wrap.b32 	%r10587, %r10586, %r10585, 14;
	shf.r.wrap.b32 	%r10588, %r10585, %r10586, 14;
	mov.b64 	%rd2585, {%r10588, %r10587};
	shf.r.wrap.b32 	%r10589, %r10586, %r10585, 18;
	shf.r.wrap.b32 	%r10590, %r10585, %r10586, 18;
	mov.b64 	%rd2586, {%r10590, %r10589};
	xor.b64  	%rd2587, %rd2586, %rd2585;
	shf.l.wrap.b32 	%r10591, %r10585, %r10586, 23;
	shf.l.wrap.b32 	%r10592, %r10586, %r10585, 23;
	mov.b64 	%rd2588, {%r10592, %r10591};
	xor.b64  	%rd2589, %rd2587, %rd2588;
	xor.b64  	%rd2590, %rd2549, %rd2525;
	and.b64  	%rd2591, %rd2573, %rd2590;
	xor.b64  	%rd2592, %rd2591, %rd2525;
	add.s64 	%rd2593, %rd2501, %rd2340;
	add.s64 	%rd2594, %rd2593, %rd2782;
	add.s64 	%rd2595, %rd2594, %rd2592;
	add.s64 	%rd2596, %rd2595, %rd2589;
	add.s64 	%rd2597, %rd2596, %rd2512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10593,%dummy}, %rd2584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10594}, %rd2584;
	}
	shf.r.wrap.b32 	%r10595, %r10594, %r10593, 28;
	shf.r.wrap.b32 	%r10596, %r10593, %r10594, 28;
	mov.b64 	%rd2598, {%r10596, %r10595};
	shf.l.wrap.b32 	%r10597, %r10593, %r10594, 30;
	shf.l.wrap.b32 	%r10598, %r10594, %r10593, 30;
	mov.b64 	%rd2599, {%r10598, %r10597};
	xor.b64  	%rd2600, %rd2599, %rd2598;
	shf.l.wrap.b32 	%r10599, %r10593, %r10594, 25;
	shf.l.wrap.b32 	%r10600, %r10594, %r10593, 25;
	mov.b64 	%rd2601, {%r10600, %r10599};
	xor.b64  	%rd2602, %rd2600, %rd2601;
	xor.b64  	%rd2603, %rd2584, %rd2536;
	xor.b64  	%rd2604, %rd2584, %rd2560;
	and.b64  	%rd2605, %rd2604, %rd2603;
	xor.b64  	%rd2606, %rd2605, %rd2584;
	add.s64 	%rd2607, %rd2596, %rd2606;
	add.s64 	%rd2608, %rd2607, %rd2602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10601,%dummy}, %rd2597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10602}, %rd2597;
	}
	shf.r.wrap.b32 	%r10603, %r10602, %r10601, 14;
	shf.r.wrap.b32 	%r10604, %r10601, %r10602, 14;
	mov.b64 	%rd2609, {%r10604, %r10603};
	shf.r.wrap.b32 	%r10605, %r10602, %r10601, 18;
	shf.r.wrap.b32 	%r10606, %r10601, %r10602, 18;
	mov.b64 	%rd2610, {%r10606, %r10605};
	xor.b64  	%rd2611, %rd2610, %rd2609;
	shf.l.wrap.b32 	%r10607, %r10601, %r10602, 23;
	shf.l.wrap.b32 	%r10608, %r10602, %r10601, 23;
	mov.b64 	%rd2612, {%r10608, %r10607};
	xor.b64  	%rd2613, %rd2611, %rd2612;
	xor.b64  	%rd2614, %rd2573, %rd2549;
	and.b64  	%rd2615, %rd2597, %rd2614;
	xor.b64  	%rd2616, %rd2615, %rd2549;
	add.s64 	%rd2617, %rd2525, %rd2353;
	add.s64 	%rd2618, %rd2617, %rd2783;
	add.s64 	%rd2619, %rd2618, %rd2616;
	add.s64 	%rd2620, %rd2619, %rd2613;
	add.s64 	%rd2621, %rd2620, %rd2536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10609,%dummy}, %rd2608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10610}, %rd2608;
	}
	shf.r.wrap.b32 	%r10611, %r10610, %r10609, 28;
	shf.r.wrap.b32 	%r10612, %r10609, %r10610, 28;
	mov.b64 	%rd2622, {%r10612, %r10611};
	shf.l.wrap.b32 	%r10613, %r10609, %r10610, 30;
	shf.l.wrap.b32 	%r10614, %r10610, %r10609, 30;
	mov.b64 	%rd2623, {%r10614, %r10613};
	xor.b64  	%rd2624, %rd2623, %rd2622;
	shf.l.wrap.b32 	%r10615, %r10609, %r10610, 25;
	shf.l.wrap.b32 	%r10616, %r10610, %r10609, 25;
	mov.b64 	%rd2625, {%r10616, %r10615};
	xor.b64  	%rd2626, %rd2624, %rd2625;
	xor.b64  	%rd2627, %rd2608, %rd2560;
	xor.b64  	%rd2628, %rd2608, %rd2584;
	and.b64  	%rd2629, %rd2628, %rd2627;
	xor.b64  	%rd2630, %rd2629, %rd2608;
	add.s64 	%rd2631, %rd2620, %rd2630;
	add.s64 	%rd2632, %rd2631, %rd2626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10617,%dummy}, %rd2621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10618}, %rd2621;
	}
	shf.r.wrap.b32 	%r10619, %r10618, %r10617, 14;
	shf.r.wrap.b32 	%r10620, %r10617, %r10618, 14;
	mov.b64 	%rd2633, {%r10620, %r10619};
	shf.r.wrap.b32 	%r10621, %r10618, %r10617, 18;
	shf.r.wrap.b32 	%r10622, %r10617, %r10618, 18;
	mov.b64 	%rd2634, {%r10622, %r10621};
	xor.b64  	%rd2635, %rd2634, %rd2633;
	shf.l.wrap.b32 	%r10623, %r10617, %r10618, 23;
	shf.l.wrap.b32 	%r10624, %r10618, %r10617, 23;
	mov.b64 	%rd2636, {%r10624, %r10623};
	xor.b64  	%rd2637, %rd2635, %rd2636;
	xor.b64  	%rd2638, %rd2597, %rd2573;
	and.b64  	%rd2639, %rd2621, %rd2638;
	xor.b64  	%rd2640, %rd2639, %rd2573;
	add.s64 	%rd2641, %rd2549, %rd2366;
	add.s64 	%rd2642, %rd2641, %rd2784;
	add.s64 	%rd2643, %rd2642, %rd2640;
	add.s64 	%rd2644, %rd2643, %rd2637;
	add.s64 	%rd2645, %rd2644, %rd2560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10625,%dummy}, %rd2632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10626}, %rd2632;
	}
	shf.r.wrap.b32 	%r10627, %r10626, %r10625, 28;
	shf.r.wrap.b32 	%r10628, %r10625, %r10626, 28;
	mov.b64 	%rd2646, {%r10628, %r10627};
	shf.l.wrap.b32 	%r10629, %r10625, %r10626, 30;
	shf.l.wrap.b32 	%r10630, %r10626, %r10625, 30;
	mov.b64 	%rd2647, {%r10630, %r10629};
	xor.b64  	%rd2648, %rd2647, %rd2646;
	shf.l.wrap.b32 	%r10631, %r10625, %r10626, 25;
	shf.l.wrap.b32 	%r10632, %r10626, %r10625, 25;
	mov.b64 	%rd2649, {%r10632, %r10631};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	xor.b64  	%rd2651, %rd2632, %rd2584;
	xor.b64  	%rd2652, %rd2632, %rd2608;
	and.b64  	%rd2653, %rd2652, %rd2651;
	xor.b64  	%rd2654, %rd2653, %rd2632;
	add.s64 	%rd2655, %rd2644, %rd2654;
	add.s64 	%rd2656, %rd2655, %rd2650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10633,%dummy}, %rd2645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10634}, %rd2645;
	}
	shf.r.wrap.b32 	%r10635, %r10634, %r10633, 14;
	shf.r.wrap.b32 	%r10636, %r10633, %r10634, 14;
	mov.b64 	%rd2657, {%r10636, %r10635};
	shf.r.wrap.b32 	%r10637, %r10634, %r10633, 18;
	shf.r.wrap.b32 	%r10638, %r10633, %r10634, 18;
	mov.b64 	%rd2658, {%r10638, %r10637};
	xor.b64  	%rd2659, %rd2658, %rd2657;
	shf.l.wrap.b32 	%r10639, %r10633, %r10634, 23;
	shf.l.wrap.b32 	%r10640, %r10634, %r10633, 23;
	mov.b64 	%rd2660, {%r10640, %r10639};
	xor.b64  	%rd2661, %rd2659, %rd2660;
	xor.b64  	%rd2662, %rd2621, %rd2597;
	and.b64  	%rd2663, %rd2645, %rd2662;
	xor.b64  	%rd2664, %rd2663, %rd2597;
	add.s64 	%rd2665, %rd2573, %rd2379;
	add.s64 	%rd2666, %rd2665, %rd2785;
	add.s64 	%rd2667, %rd2666, %rd2664;
	add.s64 	%rd2668, %rd2667, %rd2661;
	add.s64 	%rd2669, %rd2668, %rd2584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10641,%dummy}, %rd2656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10642}, %rd2656;
	}
	shf.r.wrap.b32 	%r10643, %r10642, %r10641, 28;
	shf.r.wrap.b32 	%r10644, %r10641, %r10642, 28;
	mov.b64 	%rd2670, {%r10644, %r10643};
	shf.l.wrap.b32 	%r10645, %r10641, %r10642, 30;
	shf.l.wrap.b32 	%r10646, %r10642, %r10641, 30;
	mov.b64 	%rd2671, {%r10646, %r10645};
	xor.b64  	%rd2672, %rd2671, %rd2670;
	shf.l.wrap.b32 	%r10647, %r10641, %r10642, 25;
	shf.l.wrap.b32 	%r10648, %r10642, %r10641, 25;
	mov.b64 	%rd2673, {%r10648, %r10647};
	xor.b64  	%rd2674, %rd2672, %rd2673;
	xor.b64  	%rd2675, %rd2656, %rd2608;
	xor.b64  	%rd2676, %rd2656, %rd2632;
	and.b64  	%rd2677, %rd2676, %rd2675;
	xor.b64  	%rd2678, %rd2677, %rd2656;
	add.s64 	%rd2679, %rd2668, %rd2678;
	add.s64 	%rd2680, %rd2679, %rd2674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10649,%dummy}, %rd2669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10650}, %rd2669;
	}
	shf.r.wrap.b32 	%r10651, %r10650, %r10649, 14;
	shf.r.wrap.b32 	%r10652, %r10649, %r10650, 14;
	mov.b64 	%rd2681, {%r10652, %r10651};
	shf.r.wrap.b32 	%r10653, %r10650, %r10649, 18;
	shf.r.wrap.b32 	%r10654, %r10649, %r10650, 18;
	mov.b64 	%rd2682, {%r10654, %r10653};
	xor.b64  	%rd2683, %rd2682, %rd2681;
	shf.l.wrap.b32 	%r10655, %r10649, %r10650, 23;
	shf.l.wrap.b32 	%r10656, %r10650, %r10649, 23;
	mov.b64 	%rd2684, {%r10656, %r10655};
	xor.b64  	%rd2685, %rd2683, %rd2684;
	xor.b64  	%rd2686, %rd2645, %rd2621;
	and.b64  	%rd2687, %rd2669, %rd2686;
	xor.b64  	%rd2688, %rd2687, %rd2621;
	add.s64 	%rd2689, %rd2597, %rd2392;
	add.s64 	%rd2690, %rd2689, %rd2786;
	add.s64 	%rd2691, %rd2690, %rd2688;
	add.s64 	%rd2692, %rd2691, %rd2685;
	add.s64 	%rd84, %rd2692, %rd2608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10657,%dummy}, %rd2680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10658}, %rd2680;
	}
	shf.r.wrap.b32 	%r10659, %r10658, %r10657, 28;
	shf.r.wrap.b32 	%r10660, %r10657, %r10658, 28;
	mov.b64 	%rd2693, {%r10660, %r10659};
	shf.l.wrap.b32 	%r10661, %r10657, %r10658, 30;
	shf.l.wrap.b32 	%r10662, %r10658, %r10657, 30;
	mov.b64 	%rd2694, {%r10662, %r10661};
	xor.b64  	%rd2695, %rd2694, %rd2693;
	shf.l.wrap.b32 	%r10663, %r10657, %r10658, 25;
	shf.l.wrap.b32 	%r10664, %r10658, %r10657, 25;
	mov.b64 	%rd2696, {%r10664, %r10663};
	xor.b64  	%rd2697, %rd2695, %rd2696;
	xor.b64  	%rd2698, %rd2680, %rd2632;
	xor.b64  	%rd2699, %rd2680, %rd2656;
	and.b64  	%rd2700, %rd2699, %rd2698;
	xor.b64  	%rd2701, %rd2700, %rd2680;
	add.s64 	%rd2702, %rd2692, %rd2701;
	add.s64 	%rd85, %rd2702, %rd2697;
	cvt.u32.u64	%r10665, %rd84;
	setp.ne.s32	%p1039, %r10665, %r11;
	@%p1039 bra 	BB4_1543;

	shr.u64 	%rd2703, %rd85, 32;
	cvt.u32.u64	%r10666, %rd2703;
	shr.u64 	%rd2704, %rd84, 32;
	cvt.u32.u64	%r10667, %rd2704;
	setp.eq.s32	%p1040, %r10667, %r12;
	cvt.u32.u64	%r10668, %rd85;
	setp.eq.s32	%p1041, %r10668, %r13;
	and.pred  	%p1042, %p1040, %p1041;
	setp.eq.s32	%p1043, %r10666, %r14;
	and.pred  	%p1044, %p1042, %p1043;
	@!%p1044 bra 	BB4_1543;
	bra.uni 	BB4_1539;

BB4_1539:
	ld.param.u64 	%rd2787, [m01700_s04_param_16];
	mul.wide.u32 	%rd2705, %r1789, 4;
	add.s64 	%rd2706, %rd2787, %rd2705;
	atom.global.add.u32 	%r10669, [%rd2706], 1;
	setp.ne.s32	%p1045, %r10669, 0;
	@%p1045 bra 	BB4_1543;

	ld.param.u32 	%r10675, [m01700_s04_param_31];
	atom.global.add.u32 	%r1784, [%rd91], 1;
	setp.lt.u32	%p1046, %r1784, %r10675;
	@%p1046 bra 	BB4_1542;
	bra.uni 	BB4_1541;

BB4_1542:
	ld.param.u32 	%r10676, [m01700_s04_param_27];
	ld.param.u64 	%rd2788, [m01700_s04_param_14];
	mov.u32 	%r10673, 0;
	mul.wide.u32 	%rd2707, %r1784, 20;
	add.s64 	%rd2708, %rd2788, %rd2707;
	st.global.u32 	[%rd2708], %r10676;
	st.global.u32 	[%rd2708+4], %r10673;
	st.global.u32 	[%rd2708+8], %r1789;
	st.global.u32 	[%rd2708+12], %r1;
	st.global.u32 	[%rd2708+16], %r10677;
	bra.uni 	BB4_1543;

BB4_1541:
	atom.global.add.u32 	%r10670, [%rd91], -1;

BB4_1543:
	ld.param.u32 	%r10674, [m01700_s04_param_30];
	add.s32 	%r10677, %r10677, 1;
	setp.lt.u32	%p1047, %r10677, %r10674;
	@%p1047 bra 	BB4_3;

BB4_1544:
	ret;
}

	// .globl	m01700_s08
.entry m01700_s08(
	.param .u64 .ptr .global .align 4 m01700_s08_param_0,
	.param .u64 .ptr .global .align 4 m01700_s08_param_1,
	.param .u64 .ptr .global .align 4 m01700_s08_param_2,
	.param .u64 .ptr .global .align 4 m01700_s08_param_3,
	.param .u64 .ptr .global .align 1 m01700_s08_param_4,
	.param .u64 .ptr .global .align 1 m01700_s08_param_5,
	.param .u64 .ptr .global .align 4 m01700_s08_param_6,
	.param .u64 .ptr .global .align 4 m01700_s08_param_7,
	.param .u64 .ptr .global .align 4 m01700_s08_param_8,
	.param .u64 .ptr .global .align 4 m01700_s08_param_9,
	.param .u64 .ptr .global .align 4 m01700_s08_param_10,
	.param .u64 .ptr .global .align 4 m01700_s08_param_11,
	.param .u64 .ptr .global .align 4 m01700_s08_param_12,
	.param .u64 .ptr .global .align 4 m01700_s08_param_13,
	.param .u64 .ptr .global .align 4 m01700_s08_param_14,
	.param .u64 .ptr .global .align 4 m01700_s08_param_15,
	.param .u64 .ptr .global .align 4 m01700_s08_param_16,
	.param .u64 .ptr .global .align 4 m01700_s08_param_17,
	.param .u64 .ptr .global .align 1 m01700_s08_param_18,
	.param .u64 .ptr .global .align 4 m01700_s08_param_19,
	.param .u64 .ptr .global .align 4 m01700_s08_param_20,
	.param .u64 .ptr .global .align 4 m01700_s08_param_21,
	.param .u64 .ptr .global .align 4 m01700_s08_param_22,
	.param .u64 .ptr .global .align 4 m01700_s08_param_23,
	.param .u32 m01700_s08_param_24,
	.param .u32 m01700_s08_param_25,
	.param .u32 m01700_s08_param_26,
	.param .u32 m01700_s08_param_27,
	.param .u32 m01700_s08_param_28,
	.param .u32 m01700_s08_param_29,
	.param .u32 m01700_s08_param_30,
	.param .u32 m01700_s08_param_31,
	.param .u32 m01700_s08_param_32,
	.param .u32 m01700_s08_param_33,
	.param .u32 m01700_s08_param_34
)
{



	ret;
}

	// .globl	m01700_s16
.entry m01700_s16(
	.param .u64 .ptr .global .align 4 m01700_s16_param_0,
	.param .u64 .ptr .global .align 4 m01700_s16_param_1,
	.param .u64 .ptr .global .align 4 m01700_s16_param_2,
	.param .u64 .ptr .global .align 4 m01700_s16_param_3,
	.param .u64 .ptr .global .align 1 m01700_s16_param_4,
	.param .u64 .ptr .global .align 1 m01700_s16_param_5,
	.param .u64 .ptr .global .align 4 m01700_s16_param_6,
	.param .u64 .ptr .global .align 4 m01700_s16_param_7,
	.param .u64 .ptr .global .align 4 m01700_s16_param_8,
	.param .u64 .ptr .global .align 4 m01700_s16_param_9,
	.param .u64 .ptr .global .align 4 m01700_s16_param_10,
	.param .u64 .ptr .global .align 4 m01700_s16_param_11,
	.param .u64 .ptr .global .align 4 m01700_s16_param_12,
	.param .u64 .ptr .global .align 4 m01700_s16_param_13,
	.param .u64 .ptr .global .align 4 m01700_s16_param_14,
	.param .u64 .ptr .global .align 4 m01700_s16_param_15,
	.param .u64 .ptr .global .align 4 m01700_s16_param_16,
	.param .u64 .ptr .global .align 4 m01700_s16_param_17,
	.param .u64 .ptr .global .align 1 m01700_s16_param_18,
	.param .u64 .ptr .global .align 4 m01700_s16_param_19,
	.param .u64 .ptr .global .align 4 m01700_s16_param_20,
	.param .u64 .ptr .global .align 4 m01700_s16_param_21,
	.param .u64 .ptr .global .align 4 m01700_s16_param_22,
	.param .u64 .ptr .global .align 4 m01700_s16_param_23,
	.param .u32 m01700_s16_param_24,
	.param .u32 m01700_s16_param_25,
	.param .u32 m01700_s16_param_26,
	.param .u32 m01700_s16_param_27,
	.param .u32 m01700_s16_param_28,
	.param .u32 m01700_s16_param_29,
	.param .u32 m01700_s16_param_30,
	.param .u32 m01700_s16_param_31,
	.param .u32 m01700_s16_param_32,
	.param .u32 m01700_s16_param_33,
	.param .u32 m01700_s16_param_34
)
{



	ret;
}


  