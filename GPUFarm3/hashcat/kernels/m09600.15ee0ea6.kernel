//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 8 .b8 te0[1024] = {165, 99, 99, 198, 132, 124, 124, 248, 153, 119, 119, 238, 141, 123, 123, 246, 13, 242, 242, 255, 189, 107, 107, 214, 177, 111, 111, 222, 84, 197, 197, 145, 80, 48, 48, 96, 3, 1, 1, 2, 169, 103, 103, 206, 125, 43, 43, 86, 25, 254, 254, 231, 98, 215, 215, 181, 230, 171, 171, 77, 154, 118, 118, 236, 69, 202, 202, 143, 157, 130, 130, 31, 64, 201, 201, 137, 135, 125, 125, 250, 21, 250, 250, 239, 235, 89, 89, 178, 201, 71, 71, 142, 11, 240, 240, 251, 236, 173, 173, 65, 103, 212, 212, 179, 253, 162, 162, 95, 234, 175, 175, 69, 191, 156, 156, 35, 247, 164, 164, 83, 150, 114, 114, 228, 91, 192, 192, 155, 194, 183, 183, 117, 28, 253, 253, 225, 174, 147, 147, 61, 106, 38, 38, 76, 90, 54, 54, 108, 65, 63, 63, 126, 2, 247, 247, 245, 79, 204, 204, 131, 92, 52, 52, 104, 244, 165, 165, 81, 52, 229, 229, 209, 8, 241, 241, 249, 147, 113, 113, 226, 115, 216, 216, 171, 83, 49, 49, 98, 63, 21, 21, 42, 12, 4, 4, 8, 82, 199, 199, 149, 101, 35, 35, 70, 94, 195, 195, 157, 40, 24, 24, 48, 161, 150, 150, 55, 15, 5, 5, 10, 181, 154, 154, 47, 9, 7, 7, 14, 54, 18, 18, 36, 155, 128, 128, 27, 61, 226, 226, 223, 38, 235, 235, 205, 105, 39, 39, 78, 205, 178, 178, 127, 159, 117, 117, 234, 27, 9, 9, 18, 158, 131, 131, 29, 116, 44, 44, 88, 46, 26, 26, 52, 45, 27, 27, 54, 178, 110, 110, 220, 238, 90, 90, 180, 251, 160, 160, 91, 246, 82, 82, 164, 77, 59, 59, 118, 97, 214, 214, 183, 206, 179, 179, 125, 123, 41, 41, 82, 62, 227, 227, 221, 113, 47, 47, 94, 151, 132, 132, 19, 245, 83, 83, 166, 104, 209, 209, 185, 0, 0, 0, 0, 44, 237, 237, 193, 96, 32, 32, 64, 31, 252, 252, 227, 200, 177, 177, 121, 237, 91, 91, 182, 190, 106, 106, 212, 70, 203, 203, 141, 217, 190, 190, 103, 75, 57, 57, 114, 222, 74, 74, 148, 212, 76, 76, 152, 232, 88, 88, 176, 74, 207, 207, 133, 107, 208, 208, 187, 42, 239, 239, 197, 229, 170, 170, 79, 22, 251, 251, 237, 197, 67, 67, 134, 215, 77, 77, 154, 85, 51, 51, 102, 148, 133, 133, 17, 207, 69, 69, 138, 16, 249, 249, 233, 6, 2, 2, 4, 129, 127, 127, 254, 240, 80, 80, 160, 68, 60, 60, 120, 186, 159, 159, 37, 227, 168, 168, 75, 243, 81, 81, 162, 254, 163, 163, 93, 192, 64, 64, 128, 138, 143, 143, 5, 173, 146, 146, 63, 188, 157, 157, 33, 72, 56, 56, 112, 4, 245, 245, 241, 223, 188, 188, 99, 193, 182, 182, 119, 117, 218, 218, 175, 99, 33, 33, 66, 48, 16, 16, 32, 26, 255, 255, 229, 14, 243, 243, 253, 109, 210, 210, 191, 76, 205, 205, 129, 20, 12, 12, 24, 53, 19, 19, 38, 47, 236, 236, 195, 225, 95, 95, 190, 162, 151, 151, 53, 204, 68, 68, 136, 57, 23, 23, 46, 87, 196, 196, 147, 242, 167, 167, 85, 130, 126, 126, 252, 71, 61, 61, 122, 172, 100, 100, 200, 231, 93, 93, 186, 43, 25, 25, 50, 149, 115, 115, 230, 160, 96, 96, 192, 152, 129, 129, 25, 209, 79, 79, 158, 127, 220, 220, 163, 102, 34, 34, 68, 126, 42, 42, 84, 171, 144, 144, 59, 131, 136, 136, 11, 202, 70, 70, 140, 41, 238, 238, 199, 211, 184, 184, 107, 60, 20, 20, 40, 121, 222, 222, 167, 226, 94, 94, 188, 29, 11, 11, 22, 118, 219, 219, 173, 59, 224, 224, 219, 86, 50, 50, 100, 78, 58, 58, 116, 30, 10, 10, 20, 219, 73, 73, 146, 10, 6, 6, 12, 108, 36, 36, 72, 228, 92, 92, 184, 93, 194, 194, 159, 110, 211, 211, 189, 239, 172, 172, 67, 166, 98, 98, 196, 168, 145, 145, 57, 164, 149, 149, 49, 55, 228, 228, 211, 139, 121, 121, 242, 50, 231, 231, 213, 67, 200, 200, 139, 89, 55, 55, 110, 183, 109, 109, 218, 140, 141, 141, 1, 100, 213, 213, 177, 210, 78, 78, 156, 224, 169, 169, 73, 180, 108, 108, 216, 250, 86, 86, 172, 7, 244, 244, 243, 37, 234, 234, 207, 175, 101, 101, 202, 142, 122, 122, 244, 233, 174, 174, 71, 24, 8, 8, 16, 213, 186, 186, 111, 136, 120, 120, 240, 111, 37, 37, 74, 114, 46, 46, 92, 36, 28, 28, 56, 241, 166, 166, 87, 199, 180, 180, 115, 81, 198, 198, 151, 35, 232, 232, 203, 124, 221, 221, 161, 156, 116, 116, 232, 33, 31, 31, 62, 221, 75, 75, 150, 220, 189, 189, 97, 134, 139, 139, 13, 133, 138, 138, 15, 144, 112, 112, 224, 66, 62, 62, 124, 196, 181, 181, 113, 170, 102, 102, 204, 216, 72, 72, 144, 5, 3, 3, 6, 1, 246, 246, 247, 18, 14, 14, 28, 163, 97, 97, 194, 95, 53, 53, 106, 249, 87, 87, 174, 208, 185, 185, 105, 145, 134, 134, 23, 88, 193, 193, 153, 39, 29, 29, 58, 185, 158, 158, 39, 56, 225, 225, 217, 19, 248, 248, 235, 179, 152, 152, 43, 51, 17, 17, 34, 187, 105, 105, 210, 112, 217, 217, 169, 137, 142, 142, 7, 167, 148, 148, 51, 182, 155, 155, 45, 34, 30, 30, 60, 146, 135, 135, 21, 32, 233, 233, 201, 73, 206, 206, 135, 255, 85, 85, 170, 120, 40, 40, 80, 122, 223, 223, 165, 143, 140, 140, 3, 248, 161, 161, 89, 128, 137, 137, 9, 23, 13, 13, 26, 218, 191, 191, 101, 49, 230, 230, 215, 198, 66, 66, 132, 184, 104, 104, 208, 195, 65, 65, 130, 176, 153, 153, 41, 119, 45, 45, 90, 17, 15, 15, 30, 203, 176, 176, 123, 252, 84, 84, 168, 214, 187, 187, 109, 58, 22, 22, 44};
.const .align 8 .b8 te1[1024] = {99, 99, 198, 165, 124, 124, 248, 132, 119, 119, 238, 153, 123, 123, 246, 141, 242, 242, 255, 13, 107, 107, 214, 189, 111, 111, 222, 177, 197, 197, 145, 84, 48, 48, 96, 80, 1, 1, 2, 3, 103, 103, 206, 169, 43, 43, 86, 125, 254, 254, 231, 25, 215, 215, 181, 98, 171, 171, 77, 230, 118, 118, 236, 154, 202, 202, 143, 69, 130, 130, 31, 157, 201, 201, 137, 64, 125, 125, 250, 135, 250, 250, 239, 21, 89, 89, 178, 235, 71, 71, 142, 201, 240, 240, 251, 11, 173, 173, 65, 236, 212, 212, 179, 103, 162, 162, 95, 253, 175, 175, 69, 234, 156, 156, 35, 191, 164, 164, 83, 247, 114, 114, 228, 150, 192, 192, 155, 91, 183, 183, 117, 194, 253, 253, 225, 28, 147, 147, 61, 174, 38, 38, 76, 106, 54, 54, 108, 90, 63, 63, 126, 65, 247, 247, 245, 2, 204, 204, 131, 79, 52, 52, 104, 92, 165, 165, 81, 244, 229, 229, 209, 52, 241, 241, 249, 8, 113, 113, 226, 147, 216, 216, 171, 115, 49, 49, 98, 83, 21, 21, 42, 63, 4, 4, 8, 12, 199, 199, 149, 82, 35, 35, 70, 101, 195, 195, 157, 94, 24, 24, 48, 40, 150, 150, 55, 161, 5, 5, 10, 15, 154, 154, 47, 181, 7, 7, 14, 9, 18, 18, 36, 54, 128, 128, 27, 155, 226, 226, 223, 61, 235, 235, 205, 38, 39, 39, 78, 105, 178, 178, 127, 205, 117, 117, 234, 159, 9, 9, 18, 27, 131, 131, 29, 158, 44, 44, 88, 116, 26, 26, 52, 46, 27, 27, 54, 45, 110, 110, 220, 178, 90, 90, 180, 238, 160, 160, 91, 251, 82, 82, 164, 246, 59, 59, 118, 77, 214, 214, 183, 97, 179, 179, 125, 206, 41, 41, 82, 123, 227, 227, 221, 62, 47, 47, 94, 113, 132, 132, 19, 151, 83, 83, 166, 245, 209, 209, 185, 104, 0, 0, 0, 0, 237, 237, 193, 44, 32, 32, 64, 96, 252, 252, 227, 31, 177, 177, 121, 200, 91, 91, 182, 237, 106, 106, 212, 190, 203, 203, 141, 70, 190, 190, 103, 217, 57, 57, 114, 75, 74, 74, 148, 222, 76, 76, 152, 212, 88, 88, 176, 232, 207, 207, 133, 74, 208, 208, 187, 107, 239, 239, 197, 42, 170, 170, 79, 229, 251, 251, 237, 22, 67, 67, 134, 197, 77, 77, 154, 215, 51, 51, 102, 85, 133, 133, 17, 148, 69, 69, 138, 207, 249, 249, 233, 16, 2, 2, 4, 6, 127, 127, 254, 129, 80, 80, 160, 240, 60, 60, 120, 68, 159, 159, 37, 186, 168, 168, 75, 227, 81, 81, 162, 243, 163, 163, 93, 254, 64, 64, 128, 192, 143, 143, 5, 138, 146, 146, 63, 173, 157, 157, 33, 188, 56, 56, 112, 72, 245, 245, 241, 4, 188, 188, 99, 223, 182, 182, 119, 193, 218, 218, 175, 117, 33, 33, 66, 99, 16, 16, 32, 48, 255, 255, 229, 26, 243, 243, 253, 14, 210, 210, 191, 109, 205, 205, 129, 76, 12, 12, 24, 20, 19, 19, 38, 53, 236, 236, 195, 47, 95, 95, 190, 225, 151, 151, 53, 162, 68, 68, 136, 204, 23, 23, 46, 57, 196, 196, 147, 87, 167, 167, 85, 242, 126, 126, 252, 130, 61, 61, 122, 71, 100, 100, 200, 172, 93, 93, 186, 231, 25, 25, 50, 43, 115, 115, 230, 149, 96, 96, 192, 160, 129, 129, 25, 152, 79, 79, 158, 209, 220, 220, 163, 127, 34, 34, 68, 102, 42, 42, 84, 126, 144, 144, 59, 171, 136, 136, 11, 131, 70, 70, 140, 202, 238, 238, 199, 41, 184, 184, 107, 211, 20, 20, 40, 60, 222, 222, 167, 121, 94, 94, 188, 226, 11, 11, 22, 29, 219, 219, 173, 118, 224, 224, 219, 59, 50, 50, 100, 86, 58, 58, 116, 78, 10, 10, 20, 30, 73, 73, 146, 219, 6, 6, 12, 10, 36, 36, 72, 108, 92, 92, 184, 228, 194, 194, 159, 93, 211, 211, 189, 110, 172, 172, 67, 239, 98, 98, 196, 166, 145, 145, 57, 168, 149, 149, 49, 164, 228, 228, 211, 55, 121, 121, 242, 139, 231, 231, 213, 50, 200, 200, 139, 67, 55, 55, 110, 89, 109, 109, 218, 183, 141, 141, 1, 140, 213, 213, 177, 100, 78, 78, 156, 210, 169, 169, 73, 224, 108, 108, 216, 180, 86, 86, 172, 250, 244, 244, 243, 7, 234, 234, 207, 37, 101, 101, 202, 175, 122, 122, 244, 142, 174, 174, 71, 233, 8, 8, 16, 24, 186, 186, 111, 213, 120, 120, 240, 136, 37, 37, 74, 111, 46, 46, 92, 114, 28, 28, 56, 36, 166, 166, 87, 241, 180, 180, 115, 199, 198, 198, 151, 81, 232, 232, 203, 35, 221, 221, 161, 124, 116, 116, 232, 156, 31, 31, 62, 33, 75, 75, 150, 221, 189, 189, 97, 220, 139, 139, 13, 134, 138, 138, 15, 133, 112, 112, 224, 144, 62, 62, 124, 66, 181, 181, 113, 196, 102, 102, 204, 170, 72, 72, 144, 216, 3, 3, 6, 5, 246, 246, 247, 1, 14, 14, 28, 18, 97, 97, 194, 163, 53, 53, 106, 95, 87, 87, 174, 249, 185, 185, 105, 208, 134, 134, 23, 145, 193, 193, 153, 88, 29, 29, 58, 39, 158, 158, 39, 185, 225, 225, 217, 56, 248, 248, 235, 19, 152, 152, 43, 179, 17, 17, 34, 51, 105, 105, 210, 187, 217, 217, 169, 112, 142, 142, 7, 137, 148, 148, 51, 167, 155, 155, 45, 182, 30, 30, 60, 34, 135, 135, 21, 146, 233, 233, 201, 32, 206, 206, 135, 73, 85, 85, 170, 255, 40, 40, 80, 120, 223, 223, 165, 122, 140, 140, 3, 143, 161, 161, 89, 248, 137, 137, 9, 128, 13, 13, 26, 23, 191, 191, 101, 218, 230, 230, 215, 49, 66, 66, 132, 198, 104, 104, 208, 184, 65, 65, 130, 195, 153, 153, 41, 176, 45, 45, 90, 119, 15, 15, 30, 17, 176, 176, 123, 203, 84, 84, 168, 252, 187, 187, 109, 214, 22, 22, 44, 58};
.const .align 8 .b8 te2[1024] = {99, 198, 165, 99, 124, 248, 132, 124, 119, 238, 153, 119, 123, 246, 141, 123, 242, 255, 13, 242, 107, 214, 189, 107, 111, 222, 177, 111, 197, 145, 84, 197, 48, 96, 80, 48, 1, 2, 3, 1, 103, 206, 169, 103, 43, 86, 125, 43, 254, 231, 25, 254, 215, 181, 98, 215, 171, 77, 230, 171, 118, 236, 154, 118, 202, 143, 69, 202, 130, 31, 157, 130, 201, 137, 64, 201, 125, 250, 135, 125, 250, 239, 21, 250, 89, 178, 235, 89, 71, 142, 201, 71, 240, 251, 11, 240, 173, 65, 236, 173, 212, 179, 103, 212, 162, 95, 253, 162, 175, 69, 234, 175, 156, 35, 191, 156, 164, 83, 247, 164, 114, 228, 150, 114, 192, 155, 91, 192, 183, 117, 194, 183, 253, 225, 28, 253, 147, 61, 174, 147, 38, 76, 106, 38, 54, 108, 90, 54, 63, 126, 65, 63, 247, 245, 2, 247, 204, 131, 79, 204, 52, 104, 92, 52, 165, 81, 244, 165, 229, 209, 52, 229, 241, 249, 8, 241, 113, 226, 147, 113, 216, 171, 115, 216, 49, 98, 83, 49, 21, 42, 63, 21, 4, 8, 12, 4, 199, 149, 82, 199, 35, 70, 101, 35, 195, 157, 94, 195, 24, 48, 40, 24, 150, 55, 161, 150, 5, 10, 15, 5, 154, 47, 181, 154, 7, 14, 9, 7, 18, 36, 54, 18, 128, 27, 155, 128, 226, 223, 61, 226, 235, 205, 38, 235, 39, 78, 105, 39, 178, 127, 205, 178, 117, 234, 159, 117, 9, 18, 27, 9, 131, 29, 158, 131, 44, 88, 116, 44, 26, 52, 46, 26, 27, 54, 45, 27, 110, 220, 178, 110, 90, 180, 238, 90, 160, 91, 251, 160, 82, 164, 246, 82, 59, 118, 77, 59, 214, 183, 97, 214, 179, 125, 206, 179, 41, 82, 123, 41, 227, 221, 62, 227, 47, 94, 113, 47, 132, 19, 151, 132, 83, 166, 245, 83, 209, 185, 104, 209, 0, 0, 0, 0, 237, 193, 44, 237, 32, 64, 96, 32, 252, 227, 31, 252, 177, 121, 200, 177, 91, 182, 237, 91, 106, 212, 190, 106, 203, 141, 70, 203, 190, 103, 217, 190, 57, 114, 75, 57, 74, 148, 222, 74, 76, 152, 212, 76, 88, 176, 232, 88, 207, 133, 74, 207, 208, 187, 107, 208, 239, 197, 42, 239, 170, 79, 229, 170, 251, 237, 22, 251, 67, 134, 197, 67, 77, 154, 215, 77, 51, 102, 85, 51, 133, 17, 148, 133, 69, 138, 207, 69, 249, 233, 16, 249, 2, 4, 6, 2, 127, 254, 129, 127, 80, 160, 240, 80, 60, 120, 68, 60, 159, 37, 186, 159, 168, 75, 227, 168, 81, 162, 243, 81, 163, 93, 254, 163, 64, 128, 192, 64, 143, 5, 138, 143, 146, 63, 173, 146, 157, 33, 188, 157, 56, 112, 72, 56, 245, 241, 4, 245, 188, 99, 223, 188, 182, 119, 193, 182, 218, 175, 117, 218, 33, 66, 99, 33, 16, 32, 48, 16, 255, 229, 26, 255, 243, 253, 14, 243, 210, 191, 109, 210, 205, 129, 76, 205, 12, 24, 20, 12, 19, 38, 53, 19, 236, 195, 47, 236, 95, 190, 225, 95, 151, 53, 162, 151, 68, 136, 204, 68, 23, 46, 57, 23, 196, 147, 87, 196, 167, 85, 242, 167, 126, 252, 130, 126, 61, 122, 71, 61, 100, 200, 172, 100, 93, 186, 231, 93, 25, 50, 43, 25, 115, 230, 149, 115, 96, 192, 160, 96, 129, 25, 152, 129, 79, 158, 209, 79, 220, 163, 127, 220, 34, 68, 102, 34, 42, 84, 126, 42, 144, 59, 171, 144, 136, 11, 131, 136, 70, 140, 202, 70, 238, 199, 41, 238, 184, 107, 211, 184, 20, 40, 60, 20, 222, 167, 121, 222, 94, 188, 226, 94, 11, 22, 29, 11, 219, 173, 118, 219, 224, 219, 59, 224, 50, 100, 86, 50, 58, 116, 78, 58, 10, 20, 30, 10, 73, 146, 219, 73, 6, 12, 10, 6, 36, 72, 108, 36, 92, 184, 228, 92, 194, 159, 93, 194, 211, 189, 110, 211, 172, 67, 239, 172, 98, 196, 166, 98, 145, 57, 168, 145, 149, 49, 164, 149, 228, 211, 55, 228, 121, 242, 139, 121, 231, 213, 50, 231, 200, 139, 67, 200, 55, 110, 89, 55, 109, 218, 183, 109, 141, 1, 140, 141, 213, 177, 100, 213, 78, 156, 210, 78, 169, 73, 224, 169, 108, 216, 180, 108, 86, 172, 250, 86, 244, 243, 7, 244, 234, 207, 37, 234, 101, 202, 175, 101, 122, 244, 142, 122, 174, 71, 233, 174, 8, 16, 24, 8, 186, 111, 213, 186, 120, 240, 136, 120, 37, 74, 111, 37, 46, 92, 114, 46, 28, 56, 36, 28, 166, 87, 241, 166, 180, 115, 199, 180, 198, 151, 81, 198, 232, 203, 35, 232, 221, 161, 124, 221, 116, 232, 156, 116, 31, 62, 33, 31, 75, 150, 221, 75, 189, 97, 220, 189, 139, 13, 134, 139, 138, 15, 133, 138, 112, 224, 144, 112, 62, 124, 66, 62, 181, 113, 196, 181, 102, 204, 170, 102, 72, 144, 216, 72, 3, 6, 5, 3, 246, 247, 1, 246, 14, 28, 18, 14, 97, 194, 163, 97, 53, 106, 95, 53, 87, 174, 249, 87, 185, 105, 208, 185, 134, 23, 145, 134, 193, 153, 88, 193, 29, 58, 39, 29, 158, 39, 185, 158, 225, 217, 56, 225, 248, 235, 19, 248, 152, 43, 179, 152, 17, 34, 51, 17, 105, 210, 187, 105, 217, 169, 112, 217, 142, 7, 137, 142, 148, 51, 167, 148, 155, 45, 182, 155, 30, 60, 34, 30, 135, 21, 146, 135, 233, 201, 32, 233, 206, 135, 73, 206, 85, 170, 255, 85, 40, 80, 120, 40, 223, 165, 122, 223, 140, 3, 143, 140, 161, 89, 248, 161, 137, 9, 128, 137, 13, 26, 23, 13, 191, 101, 218, 191, 230, 215, 49, 230, 66, 132, 198, 66, 104, 208, 184, 104, 65, 130, 195, 65, 153, 41, 176, 153, 45, 90, 119, 45, 15, 30, 17, 15, 176, 123, 203, 176, 84, 168, 252, 84, 187, 109, 214, 187, 22, 44, 58, 22};
.const .align 8 .b8 te3[1024] = {198, 165, 99, 99, 248, 132, 124, 124, 238, 153, 119, 119, 246, 141, 123, 123, 255, 13, 242, 242, 214, 189, 107, 107, 222, 177, 111, 111, 145, 84, 197, 197, 96, 80, 48, 48, 2, 3, 1, 1, 206, 169, 103, 103, 86, 125, 43, 43, 231, 25, 254, 254, 181, 98, 215, 215, 77, 230, 171, 171, 236, 154, 118, 118, 143, 69, 202, 202, 31, 157, 130, 130, 137, 64, 201, 201, 250, 135, 125, 125, 239, 21, 250, 250, 178, 235, 89, 89, 142, 201, 71, 71, 251, 11, 240, 240, 65, 236, 173, 173, 179, 103, 212, 212, 95, 253, 162, 162, 69, 234, 175, 175, 35, 191, 156, 156, 83, 247, 164, 164, 228, 150, 114, 114, 155, 91, 192, 192, 117, 194, 183, 183, 225, 28, 253, 253, 61, 174, 147, 147, 76, 106, 38, 38, 108, 90, 54, 54, 126, 65, 63, 63, 245, 2, 247, 247, 131, 79, 204, 204, 104, 92, 52, 52, 81, 244, 165, 165, 209, 52, 229, 229, 249, 8, 241, 241, 226, 147, 113, 113, 171, 115, 216, 216, 98, 83, 49, 49, 42, 63, 21, 21, 8, 12, 4, 4, 149, 82, 199, 199, 70, 101, 35, 35, 157, 94, 195, 195, 48, 40, 24, 24, 55, 161, 150, 150, 10, 15, 5, 5, 47, 181, 154, 154, 14, 9, 7, 7, 36, 54, 18, 18, 27, 155, 128, 128, 223, 61, 226, 226, 205, 38, 235, 235, 78, 105, 39, 39, 127, 205, 178, 178, 234, 159, 117, 117, 18, 27, 9, 9, 29, 158, 131, 131, 88, 116, 44, 44, 52, 46, 26, 26, 54, 45, 27, 27, 220, 178, 110, 110, 180, 238, 90, 90, 91, 251, 160, 160, 164, 246, 82, 82, 118, 77, 59, 59, 183, 97, 214, 214, 125, 206, 179, 179, 82, 123, 41, 41, 221, 62, 227, 227, 94, 113, 47, 47, 19, 151, 132, 132, 166, 245, 83, 83, 185, 104, 209, 209, 0, 0, 0, 0, 193, 44, 237, 237, 64, 96, 32, 32, 227, 31, 252, 252, 121, 200, 177, 177, 182, 237, 91, 91, 212, 190, 106, 106, 141, 70, 203, 203, 103, 217, 190, 190, 114, 75, 57, 57, 148, 222, 74, 74, 152, 212, 76, 76, 176, 232, 88, 88, 133, 74, 207, 207, 187, 107, 208, 208, 197, 42, 239, 239, 79, 229, 170, 170, 237, 22, 251, 251, 134, 197, 67, 67, 154, 215, 77, 77, 102, 85, 51, 51, 17, 148, 133, 133, 138, 207, 69, 69, 233, 16, 249, 249, 4, 6, 2, 2, 254, 129, 127, 127, 160, 240, 80, 80, 120, 68, 60, 60, 37, 186, 159, 159, 75, 227, 168, 168, 162, 243, 81, 81, 93, 254, 163, 163, 128, 192, 64, 64, 5, 138, 143, 143, 63, 173, 146, 146, 33, 188, 157, 157, 112, 72, 56, 56, 241, 4, 245, 245, 99, 223, 188, 188, 119, 193, 182, 182, 175, 117, 218, 218, 66, 99, 33, 33, 32, 48, 16, 16, 229, 26, 255, 255, 253, 14, 243, 243, 191, 109, 210, 210, 129, 76, 205, 205, 24, 20, 12, 12, 38, 53, 19, 19, 195, 47, 236, 236, 190, 225, 95, 95, 53, 162, 151, 151, 136, 204, 68, 68, 46, 57, 23, 23, 147, 87, 196, 196, 85, 242, 167, 167, 252, 130, 126, 126, 122, 71, 61, 61, 200, 172, 100, 100, 186, 231, 93, 93, 50, 43, 25, 25, 230, 149, 115, 115, 192, 160, 96, 96, 25, 152, 129, 129, 158, 209, 79, 79, 163, 127, 220, 220, 68, 102, 34, 34, 84, 126, 42, 42, 59, 171, 144, 144, 11, 131, 136, 136, 140, 202, 70, 70, 199, 41, 238, 238, 107, 211, 184, 184, 40, 60, 20, 20, 167, 121, 222, 222, 188, 226, 94, 94, 22, 29, 11, 11, 173, 118, 219, 219, 219, 59, 224, 224, 100, 86, 50, 50, 116, 78, 58, 58, 20, 30, 10, 10, 146, 219, 73, 73, 12, 10, 6, 6, 72, 108, 36, 36, 184, 228, 92, 92, 159, 93, 194, 194, 189, 110, 211, 211, 67, 239, 172, 172, 196, 166, 98, 98, 57, 168, 145, 145, 49, 164, 149, 149, 211, 55, 228, 228, 242, 139, 121, 121, 213, 50, 231, 231, 139, 67, 200, 200, 110, 89, 55, 55, 218, 183, 109, 109, 1, 140, 141, 141, 177, 100, 213, 213, 156, 210, 78, 78, 73, 224, 169, 169, 216, 180, 108, 108, 172, 250, 86, 86, 243, 7, 244, 244, 207, 37, 234, 234, 202, 175, 101, 101, 244, 142, 122, 122, 71, 233, 174, 174, 16, 24, 8, 8, 111, 213, 186, 186, 240, 136, 120, 120, 74, 111, 37, 37, 92, 114, 46, 46, 56, 36, 28, 28, 87, 241, 166, 166, 115, 199, 180, 180, 151, 81, 198, 198, 203, 35, 232, 232, 161, 124, 221, 221, 232, 156, 116, 116, 62, 33, 31, 31, 150, 221, 75, 75, 97, 220, 189, 189, 13, 134, 139, 139, 15, 133, 138, 138, 224, 144, 112, 112, 124, 66, 62, 62, 113, 196, 181, 181, 204, 170, 102, 102, 144, 216, 72, 72, 6, 5, 3, 3, 247, 1, 246, 246, 28, 18, 14, 14, 194, 163, 97, 97, 106, 95, 53, 53, 174, 249, 87, 87, 105, 208, 185, 185, 23, 145, 134, 134, 153, 88, 193, 193, 58, 39, 29, 29, 39, 185, 158, 158, 217, 56, 225, 225, 235, 19, 248, 248, 43, 179, 152, 152, 34, 51, 17, 17, 210, 187, 105, 105, 169, 112, 217, 217, 7, 137, 142, 142, 51, 167, 148, 148, 45, 182, 155, 155, 60, 34, 30, 30, 21, 146, 135, 135, 201, 32, 233, 233, 135, 73, 206, 206, 170, 255, 85, 85, 80, 120, 40, 40, 165, 122, 223, 223, 3, 143, 140, 140, 89, 248, 161, 161, 9, 128, 137, 137, 26, 23, 13, 13, 101, 218, 191, 191, 215, 49, 230, 230, 132, 198, 66, 66, 208, 184, 104, 104, 130, 195, 65, 65, 41, 176, 153, 153, 90, 119, 45, 45, 30, 17, 15, 15, 123, 203, 176, 176, 168, 252, 84, 84, 109, 214, 187, 187, 44, 58, 22, 22};
.const .align 8 .b8 te4[1024] = {99, 99, 99, 99, 124, 124, 124, 124, 119, 119, 119, 119, 123, 123, 123, 123, 242, 242, 242, 242, 107, 107, 107, 107, 111, 111, 111, 111, 197, 197, 197, 197, 48, 48, 48, 48, 1, 1, 1, 1, 103, 103, 103, 103, 43, 43, 43, 43, 254, 254, 254, 254, 215, 215, 215, 215, 171, 171, 171, 171, 118, 118, 118, 118, 202, 202, 202, 202, 130, 130, 130, 130, 201, 201, 201, 201, 125, 125, 125, 125, 250, 250, 250, 250, 89, 89, 89, 89, 71, 71, 71, 71, 240, 240, 240, 240, 173, 173, 173, 173, 212, 212, 212, 212, 162, 162, 162, 162, 175, 175, 175, 175, 156, 156, 156, 156, 164, 164, 164, 164, 114, 114, 114, 114, 192, 192, 192, 192, 183, 183, 183, 183, 253, 253, 253, 253, 147, 147, 147, 147, 38, 38, 38, 38, 54, 54, 54, 54, 63, 63, 63, 63, 247, 247, 247, 247, 204, 204, 204, 204, 52, 52, 52, 52, 165, 165, 165, 165, 229, 229, 229, 229, 241, 241, 241, 241, 113, 113, 113, 113, 216, 216, 216, 216, 49, 49, 49, 49, 21, 21, 21, 21, 4, 4, 4, 4, 199, 199, 199, 199, 35, 35, 35, 35, 195, 195, 195, 195, 24, 24, 24, 24, 150, 150, 150, 150, 5, 5, 5, 5, 154, 154, 154, 154, 7, 7, 7, 7, 18, 18, 18, 18, 128, 128, 128, 128, 226, 226, 226, 226, 235, 235, 235, 235, 39, 39, 39, 39, 178, 178, 178, 178, 117, 117, 117, 117, 9, 9, 9, 9, 131, 131, 131, 131, 44, 44, 44, 44, 26, 26, 26, 26, 27, 27, 27, 27, 110, 110, 110, 110, 90, 90, 90, 90, 160, 160, 160, 160, 82, 82, 82, 82, 59, 59, 59, 59, 214, 214, 214, 214, 179, 179, 179, 179, 41, 41, 41, 41, 227, 227, 227, 227, 47, 47, 47, 47, 132, 132, 132, 132, 83, 83, 83, 83, 209, 209, 209, 209, 0, 0, 0, 0, 237, 237, 237, 237, 32, 32, 32, 32, 252, 252, 252, 252, 177, 177, 177, 177, 91, 91, 91, 91, 106, 106, 106, 106, 203, 203, 203, 203, 190, 190, 190, 190, 57, 57, 57, 57, 74, 74, 74, 74, 76, 76, 76, 76, 88, 88, 88, 88, 207, 207, 207, 207, 208, 208, 208, 208, 239, 239, 239, 239, 170, 170, 170, 170, 251, 251, 251, 251, 67, 67, 67, 67, 77, 77, 77, 77, 51, 51, 51, 51, 133, 133, 133, 133, 69, 69, 69, 69, 249, 249, 249, 249, 2, 2, 2, 2, 127, 127, 127, 127, 80, 80, 80, 80, 60, 60, 60, 60, 159, 159, 159, 159, 168, 168, 168, 168, 81, 81, 81, 81, 163, 163, 163, 163, 64, 64, 64, 64, 143, 143, 143, 143, 146, 146, 146, 146, 157, 157, 157, 157, 56, 56, 56, 56, 245, 245, 245, 245, 188, 188, 188, 188, 182, 182, 182, 182, 218, 218, 218, 218, 33, 33, 33, 33, 16, 16, 16, 16, 255, 255, 255, 255, 243, 243, 243, 243, 210, 210, 210, 210, 205, 205, 205, 205, 12, 12, 12, 12, 19, 19, 19, 19, 236, 236, 236, 236, 95, 95, 95, 95, 151, 151, 151, 151, 68, 68, 68, 68, 23, 23, 23, 23, 196, 196, 196, 196, 167, 167, 167, 167, 126, 126, 126, 126, 61, 61, 61, 61, 100, 100, 100, 100, 93, 93, 93, 93, 25, 25, 25, 25, 115, 115, 115, 115, 96, 96, 96, 96, 129, 129, 129, 129, 79, 79, 79, 79, 220, 220, 220, 220, 34, 34, 34, 34, 42, 42, 42, 42, 144, 144, 144, 144, 136, 136, 136, 136, 70, 70, 70, 70, 238, 238, 238, 238, 184, 184, 184, 184, 20, 20, 20, 20, 222, 222, 222, 222, 94, 94, 94, 94, 11, 11, 11, 11, 219, 219, 219, 219, 224, 224, 224, 224, 50, 50, 50, 50, 58, 58, 58, 58, 10, 10, 10, 10, 73, 73, 73, 73, 6, 6, 6, 6, 36, 36, 36, 36, 92, 92, 92, 92, 194, 194, 194, 194, 211, 211, 211, 211, 172, 172, 172, 172, 98, 98, 98, 98, 145, 145, 145, 145, 149, 149, 149, 149, 228, 228, 228, 228, 121, 121, 121, 121, 231, 231, 231, 231, 200, 200, 200, 200, 55, 55, 55, 55, 109, 109, 109, 109, 141, 141, 141, 141, 213, 213, 213, 213, 78, 78, 78, 78, 169, 169, 169, 169, 108, 108, 108, 108, 86, 86, 86, 86, 244, 244, 244, 244, 234, 234, 234, 234, 101, 101, 101, 101, 122, 122, 122, 122, 174, 174, 174, 174, 8, 8, 8, 8, 186, 186, 186, 186, 120, 120, 120, 120, 37, 37, 37, 37, 46, 46, 46, 46, 28, 28, 28, 28, 166, 166, 166, 166, 180, 180, 180, 180, 198, 198, 198, 198, 232, 232, 232, 232, 221, 221, 221, 221, 116, 116, 116, 116, 31, 31, 31, 31, 75, 75, 75, 75, 189, 189, 189, 189, 139, 139, 139, 139, 138, 138, 138, 138, 112, 112, 112, 112, 62, 62, 62, 62, 181, 181, 181, 181, 102, 102, 102, 102, 72, 72, 72, 72, 3, 3, 3, 3, 246, 246, 246, 246, 14, 14, 14, 14, 97, 97, 97, 97, 53, 53, 53, 53, 87, 87, 87, 87, 185, 185, 185, 185, 134, 134, 134, 134, 193, 193, 193, 193, 29, 29, 29, 29, 158, 158, 158, 158, 225, 225, 225, 225, 248, 248, 248, 248, 152, 152, 152, 152, 17, 17, 17, 17, 105, 105, 105, 105, 217, 217, 217, 217, 142, 142, 142, 142, 148, 148, 148, 148, 155, 155, 155, 155, 30, 30, 30, 30, 135, 135, 135, 135, 233, 233, 233, 233, 206, 206, 206, 206, 85, 85, 85, 85, 40, 40, 40, 40, 223, 223, 223, 223, 140, 140, 140, 140, 161, 161, 161, 161, 137, 137, 137, 137, 13, 13, 13, 13, 191, 191, 191, 191, 230, 230, 230, 230, 66, 66, 66, 66, 104, 104, 104, 104, 65, 65, 65, 65, 153, 153, 153, 153, 45, 45, 45, 45, 15, 15, 15, 15, 176, 176, 176, 176, 84, 84, 84, 84, 187, 187, 187, 187, 22, 22, 22, 22};
.const .align 8 .b8 td0[1024] = {80, 167, 244, 81, 83, 101, 65, 126, 195, 164, 23, 26, 150, 94, 39, 58, 203, 107, 171, 59, 241, 69, 157, 31, 171, 88, 250, 172, 147, 3, 227, 75, 85, 250, 48, 32, 246, 109, 118, 173, 145, 118, 204, 136, 37, 76, 2, 245, 252, 215, 229, 79, 215, 203, 42, 197, 128, 68, 53, 38, 143, 163, 98, 181, 73, 90, 177, 222, 103, 27, 186, 37, 152, 14, 234, 69, 225, 192, 254, 93, 2, 117, 47, 195, 18, 240, 76, 129, 163, 151, 70, 141, 198, 249, 211, 107, 231, 95, 143, 3, 149, 156, 146, 21, 235, 122, 109, 191, 218, 89, 82, 149, 45, 131, 190, 212, 211, 33, 116, 88, 41, 105, 224, 73, 68, 200, 201, 142, 106, 137, 194, 117, 120, 121, 142, 244, 107, 62, 88, 153, 221, 113, 185, 39, 182, 79, 225, 190, 23, 173, 136, 240, 102, 172, 32, 201, 180, 58, 206, 125, 24, 74, 223, 99, 130, 49, 26, 229, 96, 51, 81, 151, 69, 127, 83, 98, 224, 119, 100, 177, 132, 174, 107, 187, 28, 160, 129, 254, 148, 43, 8, 249, 88, 104, 72, 112, 25, 253, 69, 143, 135, 108, 222, 148, 183, 248, 123, 82, 35, 211, 115, 171, 226, 2, 75, 114, 87, 143, 31, 227, 42, 171, 85, 102, 7, 40, 235, 178, 3, 194, 181, 47, 154, 123, 197, 134, 165, 8, 55, 211, 242, 135, 40, 48, 178, 165, 191, 35, 186, 106, 3, 2, 92, 130, 22, 237, 43, 28, 207, 138, 146, 180, 121, 167, 240, 242, 7, 243, 161, 226, 105, 78, 205, 244, 218, 101, 213, 190, 5, 6, 31, 98, 52, 209, 138, 254, 166, 196, 157, 83, 46, 52, 160, 85, 243, 162, 50, 225, 138, 5, 117, 235, 246, 164, 57, 236, 131, 11, 170, 239, 96, 64, 6, 159, 113, 94, 81, 16, 110, 189, 249, 138, 33, 62, 61, 6, 221, 150, 174, 5, 62, 221, 70, 189, 230, 77, 181, 141, 84, 145, 5, 93, 196, 113, 111, 212, 6, 4, 255, 21, 80, 96, 36, 251, 152, 25, 151, 233, 189, 214, 204, 67, 64, 137, 119, 158, 217, 103, 189, 66, 232, 176, 136, 139, 137, 7, 56, 91, 25, 231, 219, 238, 200, 121, 71, 10, 124, 161, 233, 15, 66, 124, 201, 30, 132, 248, 0, 0, 0, 0, 131, 134, 128, 9, 72, 237, 43, 50, 172, 112, 17, 30, 78, 114, 90, 108, 251, 255, 14, 253, 86, 56, 133, 15, 30, 213, 174, 61, 39, 57, 45, 54, 100, 217, 15, 10, 33, 166, 92, 104, 209, 84, 91, 155, 58, 46, 54, 36, 177, 103, 10, 12, 15, 231, 87, 147, 210, 150, 238, 180, 158, 145, 155, 27, 79, 197, 192, 128, 162, 32, 220, 97, 105, 75, 119, 90, 22, 26, 18, 28, 10, 186, 147, 226, 229, 42, 160, 192, 67, 224, 34, 60, 29, 23, 27, 18, 11, 13, 9, 14, 173, 199, 139, 242, 185, 168, 182, 45, 200, 169, 30, 20, 133, 25, 241, 87, 76, 7, 117, 175, 187, 221, 153, 238, 253, 96, 127, 163, 159, 38, 1, 247, 188, 245, 114, 92, 197, 59, 102, 68, 52, 126, 251, 91, 118, 41, 67, 139, 220, 198, 35, 203, 104, 252, 237, 182, 99, 241, 228, 184, 202, 220, 49, 215, 16, 133, 99, 66, 64, 34, 151, 19, 32, 17, 198, 132, 125, 36, 74, 133, 248, 61, 187, 210, 17, 50, 249, 174, 109, 161, 41, 199, 75, 47, 158, 29, 243, 48, 178, 220, 236, 82, 134, 13, 208, 227, 193, 119, 108, 22, 179, 43, 153, 185, 112, 169, 250, 72, 148, 17, 34, 100, 233, 71, 196, 140, 252, 168, 26, 63, 240, 160, 216, 44, 125, 86, 239, 144, 51, 34, 199, 78, 73, 135, 193, 209, 56, 217, 254, 162, 202, 140, 54, 11, 212, 152, 207, 129, 245, 166, 40, 222, 122, 165, 38, 142, 183, 218, 164, 191, 173, 63, 228, 157, 58, 44, 13, 146, 120, 80, 155, 204, 95, 106, 98, 70, 126, 84, 194, 19, 141, 246, 232, 184, 216, 144, 94, 247, 57, 46, 245, 175, 195, 130, 190, 128, 93, 159, 124, 147, 208, 105, 169, 45, 213, 111, 179, 18, 37, 207, 59, 153, 172, 200, 167, 125, 24, 16, 110, 99, 156, 232, 123, 187, 59, 219, 9, 120, 38, 205, 244, 24, 89, 110, 1, 183, 154, 236, 168, 154, 79, 131, 101, 110, 149, 230, 126, 230, 255, 170, 8, 207, 188, 33, 230, 232, 21, 239, 217, 155, 231, 186, 206, 54, 111, 74, 212, 9, 159, 234, 214, 124, 176, 41, 175, 178, 164, 49, 49, 35, 63, 42, 48, 148, 165, 198, 192, 102, 162, 53, 55, 188, 78, 116, 166, 202, 130, 252, 176, 208, 144, 224, 21, 216, 167, 51, 74, 152, 4, 241, 247, 218, 236, 65, 14, 80, 205, 127, 47, 246, 145, 23, 141, 214, 77, 118, 77, 176, 239, 67, 84, 77, 170, 204, 223, 4, 150, 228, 227, 181, 209, 158, 27, 136, 106, 76, 184, 31, 44, 193, 127, 81, 101, 70, 4, 234, 94, 157, 93, 53, 140, 1, 115, 116, 135, 250, 46, 65, 11, 251, 90, 29, 103, 179, 82, 210, 219, 146, 51, 86, 16, 233, 19, 71, 214, 109, 140, 97, 215, 154, 122, 12, 161, 55, 142, 20, 248, 89, 137, 60, 19, 235, 238, 39, 169, 206, 53, 201, 97, 183, 237, 229, 28, 225, 60, 177, 71, 122, 89, 223, 210, 156, 63, 115, 242, 85, 121, 206, 20, 24, 191, 55, 199, 115, 234, 205, 247, 83, 91, 170, 253, 95, 20, 111, 61, 223, 134, 219, 68, 120, 129, 243, 175, 202, 62, 196, 104, 185, 44, 52, 36, 56, 95, 64, 163, 194, 114, 195, 29, 22, 12, 37, 226, 188, 139, 73, 60, 40, 65, 149, 13, 255, 113, 1, 168, 57, 222, 179, 12, 8, 156, 228, 180, 216, 144, 193, 86, 100, 97, 132, 203, 123, 112, 182, 50, 213, 116, 92, 108, 72, 66, 87, 184, 208};
.const .align 8 .b8 td1[1024] = {167, 244, 81, 80, 101, 65, 126, 83, 164, 23, 26, 195, 94, 39, 58, 150, 107, 171, 59, 203, 69, 157, 31, 241, 88, 250, 172, 171, 3, 227, 75, 147, 250, 48, 32, 85, 109, 118, 173, 246, 118, 204, 136, 145, 76, 2, 245, 37, 215, 229, 79, 252, 203, 42, 197, 215, 68, 53, 38, 128, 163, 98, 181, 143, 90, 177, 222, 73, 27, 186, 37, 103, 14, 234, 69, 152, 192, 254, 93, 225, 117, 47, 195, 2, 240, 76, 129, 18, 151, 70, 141, 163, 249, 211, 107, 198, 95, 143, 3, 231, 156, 146, 21, 149, 122, 109, 191, 235, 89, 82, 149, 218, 131, 190, 212, 45, 33, 116, 88, 211, 105, 224, 73, 41, 200, 201, 142, 68, 137, 194, 117, 106, 121, 142, 244, 120, 62, 88, 153, 107, 113, 185, 39, 221, 79, 225, 190, 182, 173, 136, 240, 23, 172, 32, 201, 102, 58, 206, 125, 180, 74, 223, 99, 24, 49, 26, 229, 130, 51, 81, 151, 96, 127, 83, 98, 69, 119, 100, 177, 224, 174, 107, 187, 132, 160, 129, 254, 28, 43, 8, 249, 148, 104, 72, 112, 88, 253, 69, 143, 25, 108, 222, 148, 135, 248, 123, 82, 183, 211, 115, 171, 35, 2, 75, 114, 226, 143, 31, 227, 87, 171, 85, 102, 42, 40, 235, 178, 7, 194, 181, 47, 3, 123, 197, 134, 154, 8, 55, 211, 165, 135, 40, 48, 242, 165, 191, 35, 178, 106, 3, 2, 186, 130, 22, 237, 92, 28, 207, 138, 43, 180, 121, 167, 146, 242, 7, 243, 240, 226, 105, 78, 161, 244, 218, 101, 205, 190, 5, 6, 213, 98, 52, 209, 31, 254, 166, 196, 138, 83, 46, 52, 157, 85, 243, 162, 160, 225, 138, 5, 50, 235, 246, 164, 117, 236, 131, 11, 57, 239, 96, 64, 170, 159, 113, 94, 6, 16, 110, 189, 81, 138, 33, 62, 249, 6, 221, 150, 61, 5, 62, 221, 174, 189, 230, 77, 70, 141, 84, 145, 181, 93, 196, 113, 5, 212, 6, 4, 111, 21, 80, 96, 255, 251, 152, 25, 36, 233, 189, 214, 151, 67, 64, 137, 204, 158, 217, 103, 119, 66, 232, 176, 189, 139, 137, 7, 136, 91, 25, 231, 56, 238, 200, 121, 219, 10, 124, 161, 71, 15, 66, 124, 233, 30, 132, 248, 201, 0, 0, 0, 0, 134, 128, 9, 131, 237, 43, 50, 72, 112, 17, 30, 172, 114, 90, 108, 78, 255, 14, 253, 251, 56, 133, 15, 86, 213, 174, 61, 30, 57, 45, 54, 39, 217, 15, 10, 100, 166, 92, 104, 33, 84, 91, 155, 209, 46, 54, 36, 58, 103, 10, 12, 177, 231, 87, 147, 15, 150, 238, 180, 210, 145, 155, 27, 158, 197, 192, 128, 79, 32, 220, 97, 162, 75, 119, 90, 105, 26, 18, 28, 22, 186, 147, 226, 10, 42, 160, 192, 229, 224, 34, 60, 67, 23, 27, 18, 29, 13, 9, 14, 11, 199, 139, 242, 173, 168, 182, 45, 185, 169, 30, 20, 200, 25, 241, 87, 133, 7, 117, 175, 76, 221, 153, 238, 187, 96, 127, 163, 253, 38, 1, 247, 159, 245, 114, 92, 188, 59, 102, 68, 197, 126, 251, 91, 52, 41, 67, 139, 118, 198, 35, 203, 220, 252, 237, 182, 104, 241, 228, 184, 99, 220, 49, 215, 202, 133, 99, 66, 16, 34, 151, 19, 64, 17, 198, 132, 32, 36, 74, 133, 125, 61, 187, 210, 248, 50, 249, 174, 17, 161, 41, 199, 109, 47, 158, 29, 75, 48, 178, 220, 243, 82, 134, 13, 236, 227, 193, 119, 208, 22, 179, 43, 108, 185, 112, 169, 153, 72, 148, 17, 250, 100, 233, 71, 34, 140, 252, 168, 196, 63, 240, 160, 26, 44, 125, 86, 216, 144, 51, 34, 239, 78, 73, 135, 199, 209, 56, 217, 193, 162, 202, 140, 254, 11, 212, 152, 54, 129, 245, 166, 207, 222, 122, 165, 40, 142, 183, 218, 38, 191, 173, 63, 164, 157, 58, 44, 228, 146, 120, 80, 13, 204, 95, 106, 155, 70, 126, 84, 98, 19, 141, 246, 194, 184, 216, 144, 232, 247, 57, 46, 94, 175, 195, 130, 245, 128, 93, 159, 190, 147, 208, 105, 124, 45, 213, 111, 169, 18, 37, 207, 179, 153, 172, 200, 59, 125, 24, 16, 167, 99, 156, 232, 110, 187, 59, 219, 123, 120, 38, 205, 9, 24, 89, 110, 244, 183, 154, 236, 1, 154, 79, 131, 168, 110, 149, 230, 101, 230, 255, 170, 126, 207, 188, 33, 8, 232, 21, 239, 230, 155, 231, 186, 217, 54, 111, 74, 206, 9, 159, 234, 212, 124, 176, 41, 214, 178, 164, 49, 175, 35, 63, 42, 49, 148, 165, 198, 48, 102, 162, 53, 192, 188, 78, 116, 55, 202, 130, 252, 166, 208, 144, 224, 176, 216, 167, 51, 21, 152, 4, 241, 74, 218, 236, 65, 247, 80, 205, 127, 14, 246, 145, 23, 47, 214, 77, 118, 141, 176, 239, 67, 77, 77, 170, 204, 84, 4, 150, 228, 223, 181, 209, 158, 227, 136, 106, 76, 27, 31, 44, 193, 184, 81, 101, 70, 127, 234, 94, 157, 4, 53, 140, 1, 93, 116, 135, 250, 115, 65, 11, 251, 46, 29, 103, 179, 90, 210, 219, 146, 82, 86, 16, 233, 51, 71, 214, 109, 19, 97, 215, 154, 140, 12, 161, 55, 122, 20, 248, 89, 142, 60, 19, 235, 137, 39, 169, 206, 238, 201, 97, 183, 53, 229, 28, 225, 237, 177, 71, 122, 60, 223, 210, 156, 89, 115, 242, 85, 63, 206, 20, 24, 121, 55, 199, 115, 191, 205, 247, 83, 234, 170, 253, 95, 91, 111, 61, 223, 20, 219, 68, 120, 134, 243, 175, 202, 129, 196, 104, 185, 62, 52, 36, 56, 44, 64, 163, 194, 95, 195, 29, 22, 114, 37, 226, 188, 12, 73, 60, 40, 139, 149, 13, 255, 65, 1, 168, 57, 113, 179, 12, 8, 222, 228, 180, 216, 156, 193, 86, 100, 144, 132, 203, 123, 97, 182, 50, 213, 112, 92, 108, 72, 116, 87, 184, 208, 66};
.const .align 8 .b8 td2[1024] = {244, 81, 80, 167, 65, 126, 83, 101, 23, 26, 195, 164, 39, 58, 150, 94, 171, 59, 203, 107, 157, 31, 241, 69, 250, 172, 171, 88, 227, 75, 147, 3, 48, 32, 85, 250, 118, 173, 246, 109, 204, 136, 145, 118, 2, 245, 37, 76, 229, 79, 252, 215, 42, 197, 215, 203, 53, 38, 128, 68, 98, 181, 143, 163, 177, 222, 73, 90, 186, 37, 103, 27, 234, 69, 152, 14, 254, 93, 225, 192, 47, 195, 2, 117, 76, 129, 18, 240, 70, 141, 163, 151, 211, 107, 198, 249, 143, 3, 231, 95, 146, 21, 149, 156, 109, 191, 235, 122, 82, 149, 218, 89, 190, 212, 45, 131, 116, 88, 211, 33, 224, 73, 41, 105, 201, 142, 68, 200, 194, 117, 106, 137, 142, 244, 120, 121, 88, 153, 107, 62, 185, 39, 221, 113, 225, 190, 182, 79, 136, 240, 23, 173, 32, 201, 102, 172, 206, 125, 180, 58, 223, 99, 24, 74, 26, 229, 130, 49, 81, 151, 96, 51, 83, 98, 69, 127, 100, 177, 224, 119, 107, 187, 132, 174, 129, 254, 28, 160, 8, 249, 148, 43, 72, 112, 88, 104, 69, 143, 25, 253, 222, 148, 135, 108, 123, 82, 183, 248, 115, 171, 35, 211, 75, 114, 226, 2, 31, 227, 87, 143, 85, 102, 42, 171, 235, 178, 7, 40, 181, 47, 3, 194, 197, 134, 154, 123, 55, 211, 165, 8, 40, 48, 242, 135, 191, 35, 178, 165, 3, 2, 186, 106, 22, 237, 92, 130, 207, 138, 43, 28, 121, 167, 146, 180, 7, 243, 240, 242, 105, 78, 161, 226, 218, 101, 205, 244, 5, 6, 213, 190, 52, 209, 31, 98, 166, 196, 138, 254, 46, 52, 157, 83, 243, 162, 160, 85, 138, 5, 50, 225, 246, 164, 117, 235, 131, 11, 57, 236, 96, 64, 170, 239, 113, 94, 6, 159, 110, 189, 81, 16, 33, 62, 249, 138, 221, 150, 61, 6, 62, 221, 174, 5, 230, 77, 70, 189, 84, 145, 181, 141, 196, 113, 5, 93, 6, 4, 111, 212, 80, 96, 255, 21, 152, 25, 36, 251, 189, 214, 151, 233, 64, 137, 204, 67, 217, 103, 119, 158, 232, 176, 189, 66, 137, 7, 136, 139, 25, 231, 56, 91, 200, 121, 219, 238, 124, 161, 71, 10, 66, 124, 233, 15, 132, 248, 201, 30, 0, 0, 0, 0, 128, 9, 131, 134, 43, 50, 72, 237, 17, 30, 172, 112, 90, 108, 78, 114, 14, 253, 251, 255, 133, 15, 86, 56, 174, 61, 30, 213, 45, 54, 39, 57, 15, 10, 100, 217, 92, 104, 33, 166, 91, 155, 209, 84, 54, 36, 58, 46, 10, 12, 177, 103, 87, 147, 15, 231, 238, 180, 210, 150, 155, 27, 158, 145, 192, 128, 79, 197, 220, 97, 162, 32, 119, 90, 105, 75, 18, 28, 22, 26, 147, 226, 10, 186, 160, 192, 229, 42, 34, 60, 67, 224, 27, 18, 29, 23, 9, 14, 11, 13, 139, 242, 173, 199, 182, 45, 185, 168, 30, 20, 200, 169, 241, 87, 133, 25, 117, 175, 76, 7, 153, 238, 187, 221, 127, 163, 253, 96, 1, 247, 159, 38, 114, 92, 188, 245, 102, 68, 197, 59, 251, 91, 52, 126, 67, 139, 118, 41, 35, 203, 220, 198, 237, 182, 104, 252, 228, 184, 99, 241, 49, 215, 202, 220, 99, 66, 16, 133, 151, 19, 64, 34, 198, 132, 32, 17, 74, 133, 125, 36, 187, 210, 248, 61, 249, 174, 17, 50, 41, 199, 109, 161, 158, 29, 75, 47, 178, 220, 243, 48, 134, 13, 236, 82, 193, 119, 208, 227, 179, 43, 108, 22, 112, 169, 153, 185, 148, 17, 250, 72, 233, 71, 34, 100, 252, 168, 196, 140, 240, 160, 26, 63, 125, 86, 216, 44, 51, 34, 239, 144, 73, 135, 199, 78, 56, 217, 193, 209, 202, 140, 254, 162, 212, 152, 54, 11, 245, 166, 207, 129, 122, 165, 40, 222, 183, 218, 38, 142, 173, 63, 164, 191, 58, 44, 228, 157, 120, 80, 13, 146, 95, 106, 155, 204, 126, 84, 98, 70, 141, 246, 194, 19, 216, 144, 232, 184, 57, 46, 94, 247, 195, 130, 245, 175, 93, 159, 190, 128, 208, 105, 124, 147, 213, 111, 169, 45, 37, 207, 179, 18, 172, 200, 59, 153, 24, 16, 167, 125, 156, 232, 110, 99, 59, 219, 123, 187, 38, 205, 9, 120, 89, 110, 244, 24, 154, 236, 1, 183, 79, 131, 168, 154, 149, 230, 101, 110, 255, 170, 126, 230, 188, 33, 8, 207, 21, 239, 230, 232, 231, 186, 217, 155, 111, 74, 206, 54, 159, 234, 212, 9, 176, 41, 214, 124, 164, 49, 175, 178, 63, 42, 49, 35, 165, 198, 48, 148, 162, 53, 192, 102, 78, 116, 55, 188, 130, 252, 166, 202, 144, 224, 176, 208, 167, 51, 21, 216, 4, 241, 74, 152, 236, 65, 247, 218, 205, 127, 14, 80, 145, 23, 47, 246, 77, 118, 141, 214, 239, 67, 77, 176, 170, 204, 84, 77, 150, 228, 223, 4, 209, 158, 227, 181, 106, 76, 27, 136, 44, 193, 184, 31, 101, 70, 127, 81, 94, 157, 4, 234, 140, 1, 93, 53, 135, 250, 115, 116, 11, 251, 46, 65, 103, 179, 90, 29, 219, 146, 82, 210, 16, 233, 51, 86, 214, 109, 19, 71, 215, 154, 140, 97, 161, 55, 122, 12, 248, 89, 142, 20, 19, 235, 137, 60, 169, 206, 238, 39, 97, 183, 53, 201, 28, 225, 237, 229, 71, 122, 60, 177, 210, 156, 89, 223, 242, 85, 63, 115, 20, 24, 121, 206, 199, 115, 191, 55, 247, 83, 234, 205, 253, 95, 91, 170, 61, 223, 20, 111, 68, 120, 134, 219, 175, 202, 129, 243, 104, 185, 62, 196, 36, 56, 44, 52, 163, 194, 95, 64, 29, 22, 114, 195, 226, 188, 12, 37, 60, 40, 139, 73, 13, 255, 65, 149, 168, 57, 113, 1, 12, 8, 222, 179, 180, 216, 156, 228, 86, 100, 144, 193, 203, 123, 97, 132, 50, 213, 112, 182, 108, 72, 116, 92, 184, 208, 66, 87};
.const .align 8 .b8 td3[1024] = {81, 80, 167, 244, 126, 83, 101, 65, 26, 195, 164, 23, 58, 150, 94, 39, 59, 203, 107, 171, 31, 241, 69, 157, 172, 171, 88, 250, 75, 147, 3, 227, 32, 85, 250, 48, 173, 246, 109, 118, 136, 145, 118, 204, 245, 37, 76, 2, 79, 252, 215, 229, 197, 215, 203, 42, 38, 128, 68, 53, 181, 143, 163, 98, 222, 73, 90, 177, 37, 103, 27, 186, 69, 152, 14, 234, 93, 225, 192, 254, 195, 2, 117, 47, 129, 18, 240, 76, 141, 163, 151, 70, 107, 198, 249, 211, 3, 231, 95, 143, 21, 149, 156, 146, 191, 235, 122, 109, 149, 218, 89, 82, 212, 45, 131, 190, 88, 211, 33, 116, 73, 41, 105, 224, 142, 68, 200, 201, 117, 106, 137, 194, 244, 120, 121, 142, 153, 107, 62, 88, 39, 221, 113, 185, 190, 182, 79, 225, 240, 23, 173, 136, 201, 102, 172, 32, 125, 180, 58, 206, 99, 24, 74, 223, 229, 130, 49, 26, 151, 96, 51, 81, 98, 69, 127, 83, 177, 224, 119, 100, 187, 132, 174, 107, 254, 28, 160, 129, 249, 148, 43, 8, 112, 88, 104, 72, 143, 25, 253, 69, 148, 135, 108, 222, 82, 183, 248, 123, 171, 35, 211, 115, 114, 226, 2, 75, 227, 87, 143, 31, 102, 42, 171, 85, 178, 7, 40, 235, 47, 3, 194, 181, 134, 154, 123, 197, 211, 165, 8, 55, 48, 242, 135, 40, 35, 178, 165, 191, 2, 186, 106, 3, 237, 92, 130, 22, 138, 43, 28, 207, 167, 146, 180, 121, 243, 240, 242, 7, 78, 161, 226, 105, 101, 205, 244, 218, 6, 213, 190, 5, 209, 31, 98, 52, 196, 138, 254, 166, 52, 157, 83, 46, 162, 160, 85, 243, 5, 50, 225, 138, 164, 117, 235, 246, 11, 57, 236, 131, 64, 170, 239, 96, 94, 6, 159, 113, 189, 81, 16, 110, 62, 249, 138, 33, 150, 61, 6, 221, 221, 174, 5, 62, 77, 70, 189, 230, 145, 181, 141, 84, 113, 5, 93, 196, 4, 111, 212, 6, 96, 255, 21, 80, 25, 36, 251, 152, 214, 151, 233, 189, 137, 204, 67, 64, 103, 119, 158, 217, 176, 189, 66, 232, 7, 136, 139, 137, 231, 56, 91, 25, 121, 219, 238, 200, 161, 71, 10, 124, 124, 233, 15, 66, 248, 201, 30, 132, 0, 0, 0, 0, 9, 131, 134, 128, 50, 72, 237, 43, 30, 172, 112, 17, 108, 78, 114, 90, 253, 251, 255, 14, 15, 86, 56, 133, 61, 30, 213, 174, 54, 39, 57, 45, 10, 100, 217, 15, 104, 33, 166, 92, 155, 209, 84, 91, 36, 58, 46, 54, 12, 177, 103, 10, 147, 15, 231, 87, 180, 210, 150, 238, 27, 158, 145, 155, 128, 79, 197, 192, 97, 162, 32, 220, 90, 105, 75, 119, 28, 22, 26, 18, 226, 10, 186, 147, 192, 229, 42, 160, 60, 67, 224, 34, 18, 29, 23, 27, 14, 11, 13, 9, 242, 173, 199, 139, 45, 185, 168, 182, 20, 200, 169, 30, 87, 133, 25, 241, 175, 76, 7, 117, 238, 187, 221, 153, 163, 253, 96, 127, 247, 159, 38, 1, 92, 188, 245, 114, 68, 197, 59, 102, 91, 52, 126, 251, 139, 118, 41, 67, 203, 220, 198, 35, 182, 104, 252, 237, 184, 99, 241, 228, 215, 202, 220, 49, 66, 16, 133, 99, 19, 64, 34, 151, 132, 32, 17, 198, 133, 125, 36, 74, 210, 248, 61, 187, 174, 17, 50, 249, 199, 109, 161, 41, 29, 75, 47, 158, 220, 243, 48, 178, 13, 236, 82, 134, 119, 208, 227, 193, 43, 108, 22, 179, 169, 153, 185, 112, 17, 250, 72, 148, 71, 34, 100, 233, 168, 196, 140, 252, 160, 26, 63, 240, 86, 216, 44, 125, 34, 239, 144, 51, 135, 199, 78, 73, 217, 193, 209, 56, 140, 254, 162, 202, 152, 54, 11, 212, 166, 207, 129, 245, 165, 40, 222, 122, 218, 38, 142, 183, 63, 164, 191, 173, 44, 228, 157, 58, 80, 13, 146, 120, 106, 155, 204, 95, 84, 98, 70, 126, 246, 194, 19, 141, 144, 232, 184, 216, 46, 94, 247, 57, 130, 245, 175, 195, 159, 190, 128, 93, 105, 124, 147, 208, 111, 169, 45, 213, 207, 179, 18, 37, 200, 59, 153, 172, 16, 167, 125, 24, 232, 110, 99, 156, 219, 123, 187, 59, 205, 9, 120, 38, 110, 244, 24, 89, 236, 1, 183, 154, 131, 168, 154, 79, 230, 101, 110, 149, 170, 126, 230, 255, 33, 8, 207, 188, 239, 230, 232, 21, 186, 217, 155, 231, 74, 206, 54, 111, 234, 212, 9, 159, 41, 214, 124, 176, 49, 175, 178, 164, 42, 49, 35, 63, 198, 48, 148, 165, 53, 192, 102, 162, 116, 55, 188, 78, 252, 166, 202, 130, 224, 176, 208, 144, 51, 21, 216, 167, 241, 74, 152, 4, 65, 247, 218, 236, 127, 14, 80, 205, 23, 47, 246, 145, 118, 141, 214, 77, 67, 77, 176, 239, 204, 84, 77, 170, 228, 223, 4, 150, 158, 227, 181, 209, 76, 27, 136, 106, 193, 184, 31, 44, 70, 127, 81, 101, 157, 4, 234, 94, 1, 93, 53, 140, 250, 115, 116, 135, 251, 46, 65, 11, 179, 90, 29, 103, 146, 82, 210, 219, 233, 51, 86, 16, 109, 19, 71, 214, 154, 140, 97, 215, 55, 122, 12, 161, 89, 142, 20, 248, 235, 137, 60, 19, 206, 238, 39, 169, 183, 53, 201, 97, 225, 237, 229, 28, 122, 60, 177, 71, 156, 89, 223, 210, 85, 63, 115, 242, 24, 121, 206, 20, 115, 191, 55, 199, 83, 234, 205, 247, 95, 91, 170, 253, 223, 20, 111, 61, 120, 134, 219, 68, 202, 129, 243, 175, 185, 62, 196, 104, 56, 44, 52, 36, 194, 95, 64, 163, 22, 114, 195, 29, 188, 12, 37, 226, 40, 139, 73, 60, 255, 65, 149, 13, 57, 113, 1, 168, 8, 222, 179, 12, 216, 156, 228, 180, 100, 144, 193, 86, 123, 97, 132, 203, 213, 112, 182, 50, 72, 116, 92, 108, 208, 66, 87, 184};
.const .align 8 .b8 td4[1024] = {82, 82, 82, 82, 9, 9, 9, 9, 106, 106, 106, 106, 213, 213, 213, 213, 48, 48, 48, 48, 54, 54, 54, 54, 165, 165, 165, 165, 56, 56, 56, 56, 191, 191, 191, 191, 64, 64, 64, 64, 163, 163, 163, 163, 158, 158, 158, 158, 129, 129, 129, 129, 243, 243, 243, 243, 215, 215, 215, 215, 251, 251, 251, 251, 124, 124, 124, 124, 227, 227, 227, 227, 57, 57, 57, 57, 130, 130, 130, 130, 155, 155, 155, 155, 47, 47, 47, 47, 255, 255, 255, 255, 135, 135, 135, 135, 52, 52, 52, 52, 142, 142, 142, 142, 67, 67, 67, 67, 68, 68, 68, 68, 196, 196, 196, 196, 222, 222, 222, 222, 233, 233, 233, 233, 203, 203, 203, 203, 84, 84, 84, 84, 123, 123, 123, 123, 148, 148, 148, 148, 50, 50, 50, 50, 166, 166, 166, 166, 194, 194, 194, 194, 35, 35, 35, 35, 61, 61, 61, 61, 238, 238, 238, 238, 76, 76, 76, 76, 149, 149, 149, 149, 11, 11, 11, 11, 66, 66, 66, 66, 250, 250, 250, 250, 195, 195, 195, 195, 78, 78, 78, 78, 8, 8, 8, 8, 46, 46, 46, 46, 161, 161, 161, 161, 102, 102, 102, 102, 40, 40, 40, 40, 217, 217, 217, 217, 36, 36, 36, 36, 178, 178, 178, 178, 118, 118, 118, 118, 91, 91, 91, 91, 162, 162, 162, 162, 73, 73, 73, 73, 109, 109, 109, 109, 139, 139, 139, 139, 209, 209, 209, 209, 37, 37, 37, 37, 114, 114, 114, 114, 248, 248, 248, 248, 246, 246, 246, 246, 100, 100, 100, 100, 134, 134, 134, 134, 104, 104, 104, 104, 152, 152, 152, 152, 22, 22, 22, 22, 212, 212, 212, 212, 164, 164, 164, 164, 92, 92, 92, 92, 204, 204, 204, 204, 93, 93, 93, 93, 101, 101, 101, 101, 182, 182, 182, 182, 146, 146, 146, 146, 108, 108, 108, 108, 112, 112, 112, 112, 72, 72, 72, 72, 80, 80, 80, 80, 253, 253, 253, 253, 237, 237, 237, 237, 185, 185, 185, 185, 218, 218, 218, 218, 94, 94, 94, 94, 21, 21, 21, 21, 70, 70, 70, 70, 87, 87, 87, 87, 167, 167, 167, 167, 141, 141, 141, 141, 157, 157, 157, 157, 132, 132, 132, 132, 144, 144, 144, 144, 216, 216, 216, 216, 171, 171, 171, 171, 0, 0, 0, 0, 140, 140, 140, 140, 188, 188, 188, 188, 211, 211, 211, 211, 10, 10, 10, 10, 247, 247, 247, 247, 228, 228, 228, 228, 88, 88, 88, 88, 5, 5, 5, 5, 184, 184, 184, 184, 179, 179, 179, 179, 69, 69, 69, 69, 6, 6, 6, 6, 208, 208, 208, 208, 44, 44, 44, 44, 30, 30, 30, 30, 143, 143, 143, 143, 202, 202, 202, 202, 63, 63, 63, 63, 15, 15, 15, 15, 2, 2, 2, 2, 193, 193, 193, 193, 175, 175, 175, 175, 189, 189, 189, 189, 3, 3, 3, 3, 1, 1, 1, 1, 19, 19, 19, 19, 138, 138, 138, 138, 107, 107, 107, 107, 58, 58, 58, 58, 145, 145, 145, 145, 17, 17, 17, 17, 65, 65, 65, 65, 79, 79, 79, 79, 103, 103, 103, 103, 220, 220, 220, 220, 234, 234, 234, 234, 151, 151, 151, 151, 242, 242, 242, 242, 207, 207, 207, 207, 206, 206, 206, 206, 240, 240, 240, 240, 180, 180, 180, 180, 230, 230, 230, 230, 115, 115, 115, 115, 150, 150, 150, 150, 172, 172, 172, 172, 116, 116, 116, 116, 34, 34, 34, 34, 231, 231, 231, 231, 173, 173, 173, 173, 53, 53, 53, 53, 133, 133, 133, 133, 226, 226, 226, 226, 249, 249, 249, 249, 55, 55, 55, 55, 232, 232, 232, 232, 28, 28, 28, 28, 117, 117, 117, 117, 223, 223, 223, 223, 110, 110, 110, 110, 71, 71, 71, 71, 241, 241, 241, 241, 26, 26, 26, 26, 113, 113, 113, 113, 29, 29, 29, 29, 41, 41, 41, 41, 197, 197, 197, 197, 137, 137, 137, 137, 111, 111, 111, 111, 183, 183, 183, 183, 98, 98, 98, 98, 14, 14, 14, 14, 170, 170, 170, 170, 24, 24, 24, 24, 190, 190, 190, 190, 27, 27, 27, 27, 252, 252, 252, 252, 86, 86, 86, 86, 62, 62, 62, 62, 75, 75, 75, 75, 198, 198, 198, 198, 210, 210, 210, 210, 121, 121, 121, 121, 32, 32, 32, 32, 154, 154, 154, 154, 219, 219, 219, 219, 192, 192, 192, 192, 254, 254, 254, 254, 120, 120, 120, 120, 205, 205, 205, 205, 90, 90, 90, 90, 244, 244, 244, 244, 31, 31, 31, 31, 221, 221, 221, 221, 168, 168, 168, 168, 51, 51, 51, 51, 136, 136, 136, 136, 7, 7, 7, 7, 199, 199, 199, 199, 49, 49, 49, 49, 177, 177, 177, 177, 18, 18, 18, 18, 16, 16, 16, 16, 89, 89, 89, 89, 39, 39, 39, 39, 128, 128, 128, 128, 236, 236, 236, 236, 95, 95, 95, 95, 96, 96, 96, 96, 81, 81, 81, 81, 127, 127, 127, 127, 169, 169, 169, 169, 25, 25, 25, 25, 181, 181, 181, 181, 74, 74, 74, 74, 13, 13, 13, 13, 45, 45, 45, 45, 229, 229, 229, 229, 122, 122, 122, 122, 159, 159, 159, 159, 147, 147, 147, 147, 201, 201, 201, 201, 156, 156, 156, 156, 239, 239, 239, 239, 160, 160, 160, 160, 224, 224, 224, 224, 59, 59, 59, 59, 77, 77, 77, 77, 174, 174, 174, 174, 42, 42, 42, 42, 245, 245, 245, 245, 176, 176, 176, 176, 200, 200, 200, 200, 235, 235, 235, 235, 187, 187, 187, 187, 60, 60, 60, 60, 131, 131, 131, 131, 83, 83, 83, 83, 153, 153, 153, 153, 97, 97, 97, 97, 23, 23, 23, 23, 43, 43, 43, 43, 4, 4, 4, 4, 126, 126, 126, 126, 186, 186, 186, 186, 119, 119, 119, 119, 214, 214, 214, 214, 38, 38, 38, 38, 225, 225, 225, 225, 105, 105, 105, 105, 20, 20, 20, 20, 99, 99, 99, 99, 85, 85, 85, 85, 33, 33, 33, 33, 12, 12, 12, 12, 125, 125, 125, 125};
.const .align 8 .b8 rcon[40] = {0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 32, 0, 0, 0, 64, 0, 0, 0, 128, 0, 0, 0, 27, 0, 0, 0, 54};
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
// m09600_comp$s_td0 has been demoted
// m09600_comp$s_td1 has been demoted
// m09600_comp$s_td2 has been demoted
// m09600_comp$s_td3 has been demoted
// m09600_comp$s_td4 has been demoted
// m09600_comp$s_te0 has been demoted
// m09600_comp$s_te1 has been demoted
// m09600_comp$s_te2 has been demoted
// m09600_comp$s_te3 has been demoted
// m09600_comp$s_te4 has been demoted

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u32 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [gpu_memset_param_0];
	ld.param.u32 	%r2, [gpu_memset_param_1];
	ld.param.u32 	%r3, [gpu_memset_param_2];
	mov.b32	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
	setp.ge.u32	%p1, %r1, %r3;
	@%p1 bra 	BB0_2;

	mul.wide.u32 	%rd2, %r1, 16;
	add.s64 	%rd3, %rd1, %rd2;
	st.global.v4.u32 	[%rd3], {%r2, %r2, %r2, %r2};

BB0_2:
	ret;
}

	// .globl	m09600_init
.entry m09600_init(
	.param .u64 .ptr .global .align 4 m09600_init_param_0,
	.param .u64 .ptr .global .align 4 m09600_init_param_1,
	.param .u64 .ptr .global .align 4 m09600_init_param_2,
	.param .u64 .ptr .global .align 4 m09600_init_param_3,
	.param .u64 .ptr .global .align 8 m09600_init_param_4,
	.param .u64 .ptr .global .align 1 m09600_init_param_5,
	.param .u64 .ptr .global .align 4 m09600_init_param_6,
	.param .u64 .ptr .global .align 4 m09600_init_param_7,
	.param .u64 .ptr .global .align 4 m09600_init_param_8,
	.param .u64 .ptr .global .align 4 m09600_init_param_9,
	.param .u64 .ptr .global .align 4 m09600_init_param_10,
	.param .u64 .ptr .global .align 4 m09600_init_param_11,
	.param .u64 .ptr .global .align 4 m09600_init_param_12,
	.param .u64 .ptr .global .align 4 m09600_init_param_13,
	.param .u64 .ptr .global .align 4 m09600_init_param_14,
	.param .u64 .ptr .global .align 4 m09600_init_param_15,
	.param .u64 .ptr .global .align 4 m09600_init_param_16,
	.param .u64 .ptr .global .align 4 m09600_init_param_17,
	.param .u64 .ptr .global .align 4 m09600_init_param_18,
	.param .u64 .ptr .global .align 4 m09600_init_param_19,
	.param .u64 .ptr .global .align 4 m09600_init_param_20,
	.param .u64 .ptr .global .align 4 m09600_init_param_21,
	.param .u64 .ptr .global .align 4 m09600_init_param_22,
	.param .u64 .ptr .global .align 4 m09600_init_param_23,
	.param .u32 m09600_init_param_24,
	.param .u32 m09600_init_param_25,
	.param .u32 m09600_init_param_26,
	.param .u32 m09600_init_param_27,
	.param .u32 m09600_init_param_28,
	.param .u32 m09600_init_param_29,
	.param .u32 m09600_init_param_30,
	.param .u32 m09600_init_param_31,
	.param .u32 m09600_init_param_32,
	.param .u32 m09600_init_param_33,
	.param .u32 m09600_init_param_34
)
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<2165>;
	.reg .b64 	%rd<2835>;


	ld.param.u64 	%rd1, [m09600_init_param_0];
	ld.param.u64 	%rd2, [m09600_init_param_4];
	ld.param.u64 	%rd3, [m09600_init_param_17];
	ld.param.u32 	%r2, [m09600_init_param_27];
	ld.param.u32 	%r3, [m09600_init_param_34];
	mov.b32	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
	setp.ge.u32	%p1, %r1, %r3;
	@%p1 bra 	BB1_2;

	mul.wide.u32 	%rd4, %r1, 80;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.u32 	%r73, [%rd5+64];
	and.b32  	%r74, %r73, 3;
	shl.b32 	%r75, %r74, 3;
	mov.u32 	%r76, 128;
	shl.b32 	%r77, %r76, %r75;
	setp.lt.u32	%p2, %r73, 4;
	selp.b32	%r78, %r77, 0, %p2;
	ld.global.u32 	%r79, [%rd5];
	or.b32  	%r70, %r78, %r79;
	and.b32  	%r80, %r73, -4;
	setp.eq.s32	%p3, %r80, 4;
	selp.b32	%r81, %r77, 0, %p3;
	ld.global.u32 	%r82, [%rd5+4];
	or.b32  	%r62, %r81, %r82;
	setp.eq.s32	%p4, %r80, 8;
	selp.b32	%r83, %r77, 0, %p4;
	ld.global.u32 	%r84, [%rd5+8];
	or.b32  	%r54, %r83, %r84;
	setp.eq.s32	%p5, %r80, 12;
	selp.b32	%r85, %r77, 0, %p5;
	ld.global.u32 	%r86, [%rd5+12];
	or.b32  	%r46, %r85, %r86;
	setp.eq.s32	%p6, %r80, 16;
	selp.b32	%r87, %r77, 0, %p6;
	ld.global.u32 	%r88, [%rd5+16];
	or.b32  	%r38, %r87, %r88;
	setp.eq.s32	%p7, %r80, 20;
	selp.b32	%r89, %r77, 0, %p7;
	ld.global.u32 	%r90, [%rd5+20];
	or.b32  	%r30, %r89, %r90;
	setp.eq.s32	%p8, %r80, 24;
	selp.b32	%r91, %r77, 0, %p8;
	ld.global.u32 	%r92, [%rd5+24];
	or.b32  	%r22, %r91, %r92;
	setp.eq.s32	%p9, %r80, 28;
	selp.b32	%r93, %r77, 0, %p9;
	ld.global.u32 	%r94, [%rd5+28];
	or.b32  	%r14, %r93, %r94;
	mov.u32 	%r71, 0;
	mov.u32 	%r68, 29554;
	// inline asm
	prmt.b32 %r9, %r14, %r71, %r68;
	// inline asm
	mov.u32 	%r72, 29040;
	// inline asm
	prmt.b32 %r13, %r14, %r71, %r72;
	// inline asm
	// inline asm
	prmt.b32 %r17, %r22, %r71, %r68;
	// inline asm
	// inline asm
	prmt.b32 %r21, %r22, %r71, %r72;
	// inline asm
	// inline asm
	prmt.b32 %r25, %r30, %r71, %r68;
	// inline asm
	// inline asm
	prmt.b32 %r29, %r30, %r71, %r72;
	// inline asm
	// inline asm
	prmt.b32 %r33, %r38, %r71, %r68;
	// inline asm
	// inline asm
	prmt.b32 %r37, %r38, %r71, %r72;
	// inline asm
	// inline asm
	prmt.b32 %r41, %r46, %r71, %r68;
	// inline asm
	// inline asm
	prmt.b32 %r45, %r46, %r71, %r72;
	// inline asm
	// inline asm
	prmt.b32 %r49, %r54, %r71, %r68;
	// inline asm
	// inline asm
	prmt.b32 %r53, %r54, %r71, %r72;
	// inline asm
	// inline asm
	prmt.b32 %r57, %r62, %r71, %r68;
	// inline asm
	// inline asm
	prmt.b32 %r61, %r62, %r71, %r72;
	// inline asm
	// inline asm
	prmt.b32 %r65, %r70, %r71, %r68;
	// inline asm
	// inline asm
	prmt.b32 %r69, %r70, %r71, %r72;
	// inline asm
	mul.wide.u32 	%rd6, %r2, 180;
	add.s64 	%rd7, %rd3, %rd6;
	ld.global.u32 	%rd8, [%rd7];
	ld.global.u32 	%rd9, [%rd7+4];
	bfi.b64 	%rd10, %rd8, %rd9, 32, 32;
	ld.global.u32 	%rd11, [%rd7+8];
	ld.global.u32 	%rd12, [%rd7+12];
	bfi.b64 	%rd13, %rd11, %rd12, 32, 32;
	shr.u32 	%r95, %r69, 24;
	shr.u32 	%r96, %r69, 8;
	and.b32  	%r97, %r96, 65280;
	or.b32  	%r98, %r97, %r95;
	shl.b32 	%r99, %r69, 24;
	shl.b32 	%r100, %r69, 8;
	and.b32  	%r101, %r100, 16711680;
	or.b32  	%r102, %r99, %r101;
	or.b32  	%r103, %r102, %r98;
	cvt.u64.u32	%rd14, %r103;
	shr.u32 	%r104, %r65, 24;
	shr.u32 	%r105, %r65, 8;
	and.b32  	%r106, %r105, 65280;
	or.b32  	%r107, %r106, %r104;
	shl.b32 	%r108, %r65, 24;
	shl.b32 	%r109, %r65, 8;
	and.b32  	%r110, %r109, 16711680;
	or.b32  	%r111, %r108, %r110;
	or.b32  	%r112, %r111, %r107;
	cvt.u64.u32	%rd15, %r112;
	bfi.b64 	%rd16, %rd14, %rd15, 32, 32;
	shr.u32 	%r113, %r61, 24;
	shr.u32 	%r114, %r61, 8;
	and.b32  	%r115, %r114, 65280;
	or.b32  	%r116, %r115, %r113;
	shl.b32 	%r117, %r61, 24;
	shl.b32 	%r118, %r61, 8;
	and.b32  	%r119, %r118, 16711680;
	or.b32  	%r120, %r117, %r119;
	or.b32  	%r121, %r120, %r116;
	cvt.u64.u32	%rd17, %r121;
	shr.u32 	%r122, %r57, 24;
	shr.u32 	%r123, %r57, 8;
	and.b32  	%r124, %r123, 65280;
	or.b32  	%r125, %r124, %r122;
	shl.b32 	%r126, %r57, 24;
	shl.b32 	%r127, %r57, 8;
	and.b32  	%r128, %r127, 16711680;
	or.b32  	%r129, %r126, %r128;
	or.b32  	%r130, %r129, %r125;
	cvt.u64.u32	%rd18, %r130;
	bfi.b64 	%rd19, %rd17, %rd18, 32, 32;
	shr.u32 	%r131, %r53, 24;
	shr.u32 	%r132, %r53, 8;
	and.b32  	%r133, %r132, 65280;
	or.b32  	%r134, %r133, %r131;
	shl.b32 	%r135, %r53, 24;
	shl.b32 	%r136, %r53, 8;
	and.b32  	%r137, %r136, 16711680;
	or.b32  	%r138, %r135, %r137;
	or.b32  	%r139, %r138, %r134;
	cvt.u64.u32	%rd20, %r139;
	shr.u32 	%r140, %r49, 24;
	shr.u32 	%r141, %r49, 8;
	and.b32  	%r142, %r141, 65280;
	or.b32  	%r143, %r142, %r140;
	shl.b32 	%r144, %r49, 24;
	shl.b32 	%r145, %r49, 8;
	and.b32  	%r146, %r145, 16711680;
	or.b32  	%r147, %r144, %r146;
	or.b32  	%r148, %r147, %r143;
	cvt.u64.u32	%rd21, %r148;
	bfi.b64 	%rd22, %rd20, %rd21, 32, 32;
	shr.u32 	%r149, %r45, 24;
	shr.u32 	%r150, %r45, 8;
	and.b32  	%r151, %r150, 65280;
	or.b32  	%r152, %r151, %r149;
	shl.b32 	%r153, %r45, 24;
	shl.b32 	%r154, %r45, 8;
	and.b32  	%r155, %r154, 16711680;
	or.b32  	%r156, %r153, %r155;
	or.b32  	%r157, %r156, %r152;
	cvt.u64.u32	%rd23, %r157;
	shr.u32 	%r158, %r41, 24;
	shr.u32 	%r159, %r41, 8;
	and.b32  	%r160, %r159, 65280;
	or.b32  	%r161, %r160, %r158;
	shl.b32 	%r162, %r41, 24;
	shl.b32 	%r163, %r41, 8;
	and.b32  	%r164, %r163, 16711680;
	or.b32  	%r165, %r162, %r164;
	or.b32  	%r166, %r165, %r161;
	cvt.u64.u32	%rd24, %r166;
	bfi.b64 	%rd25, %rd23, %rd24, 32, 32;
	shr.u32 	%r167, %r37, 24;
	shr.u32 	%r168, %r37, 8;
	and.b32  	%r169, %r168, 65280;
	or.b32  	%r170, %r169, %r167;
	shl.b32 	%r171, %r37, 24;
	shl.b32 	%r172, %r37, 8;
	and.b32  	%r173, %r172, 16711680;
	or.b32  	%r174, %r171, %r173;
	or.b32  	%r175, %r174, %r170;
	cvt.u64.u32	%rd26, %r175;
	shr.u32 	%r176, %r33, 24;
	shr.u32 	%r177, %r33, 8;
	and.b32  	%r178, %r177, 65280;
	or.b32  	%r179, %r178, %r176;
	shl.b32 	%r180, %r33, 24;
	shl.b32 	%r181, %r33, 8;
	and.b32  	%r182, %r181, 16711680;
	or.b32  	%r183, %r180, %r182;
	or.b32  	%r184, %r183, %r179;
	cvt.u64.u32	%rd27, %r184;
	bfi.b64 	%rd28, %rd26, %rd27, 32, 32;
	shr.u32 	%r185, %r29, 24;
	shr.u32 	%r186, %r29, 8;
	and.b32  	%r187, %r186, 65280;
	or.b32  	%r188, %r187, %r185;
	shl.b32 	%r189, %r29, 24;
	shl.b32 	%r190, %r29, 8;
	and.b32  	%r191, %r190, 16711680;
	or.b32  	%r192, %r189, %r191;
	or.b32  	%r193, %r192, %r188;
	cvt.u64.u32	%rd29, %r193;
	shr.u32 	%r194, %r25, 24;
	shr.u32 	%r195, %r25, 8;
	and.b32  	%r196, %r195, 65280;
	or.b32  	%r197, %r196, %r194;
	shl.b32 	%r198, %r25, 24;
	shl.b32 	%r199, %r25, 8;
	and.b32  	%r200, %r199, 16711680;
	or.b32  	%r201, %r198, %r200;
	or.b32  	%r202, %r201, %r197;
	cvt.u64.u32	%rd30, %r202;
	bfi.b64 	%rd31, %rd29, %rd30, 32, 32;
	shr.u32 	%r203, %r21, 24;
	shr.u32 	%r204, %r21, 8;
	and.b32  	%r205, %r204, 65280;
	or.b32  	%r206, %r205, %r203;
	shl.b32 	%r207, %r21, 24;
	shl.b32 	%r208, %r21, 8;
	and.b32  	%r209, %r208, 16711680;
	or.b32  	%r210, %r207, %r209;
	or.b32  	%r211, %r210, %r206;
	cvt.u64.u32	%rd32, %r211;
	shr.u32 	%r212, %r17, 24;
	shr.u32 	%r213, %r17, 8;
	and.b32  	%r214, %r213, 65280;
	or.b32  	%r215, %r214, %r212;
	shl.b32 	%r216, %r17, 24;
	shl.b32 	%r217, %r17, 8;
	and.b32  	%r218, %r217, 16711680;
	or.b32  	%r219, %r216, %r218;
	or.b32  	%r220, %r219, %r215;
	cvt.u64.u32	%rd33, %r220;
	bfi.b64 	%rd34, %rd32, %rd33, 32, 32;
	shr.u32 	%r221, %r13, 24;
	shr.u32 	%r222, %r13, 8;
	and.b32  	%r223, %r222, 65280;
	or.b32  	%r224, %r223, %r221;
	shl.b32 	%r225, %r13, 24;
	shl.b32 	%r226, %r13, 8;
	and.b32  	%r227, %r226, 16711680;
	or.b32  	%r228, %r225, %r227;
	or.b32  	%r229, %r228, %r224;
	cvt.u64.u32	%rd35, %r229;
	shr.u32 	%r230, %r9, 24;
	shr.u32 	%r231, %r9, 8;
	and.b32  	%r232, %r231, 65280;
	or.b32  	%r233, %r232, %r230;
	shl.b32 	%r234, %r9, 24;
	shl.b32 	%r235, %r9, 8;
	and.b32  	%r236, %r235, 16711680;
	or.b32  	%r237, %r234, %r236;
	or.b32  	%r238, %r237, %r233;
	cvt.u64.u32	%rd36, %r238;
	bfi.b64 	%rd37, %rd35, %rd36, 32, 32;
	shl.b32 	%r239, %r73, 1;
	ld.global.u32 	%r240, [%rd7+128];
	add.s32 	%r241, %r240, %r239;
	shl.b32 	%r242, %r241, 3;
	cvt.u64.u32	%rd38, %r242;
	mov.u64 	%rd39, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r243,%dummy}, %rd39;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r244}, %rd39;
	}
	shf.r.wrap.b32 	%r245, %r244, %r243, 18;
	shf.r.wrap.b32 	%r246, %r243, %r244, 18;
	mov.b64 	%rd40, {%r246, %r245};
	shf.r.wrap.b32 	%r247, %r244, %r243, 14;
	shf.r.wrap.b32 	%r248, %r243, %r244, 14;
	mov.b64 	%rd41, {%r248, %r247};
	xor.b64  	%rd42, %rd40, %rd41;
	shf.l.wrap.b32 	%r249, %r243, %r244, 23;
	shf.l.wrap.b32 	%r250, %r244, %r243, 23;
	mov.b64 	%rd43, {%r250, %r249};
	xor.b64  	%rd44, %rd42, %rd43;
	ld.const.u64 	%rd45, [k_sha512];
	add.s64 	%rd46, %rd10, %rd45;
	add.s64 	%rd47, %rd46, %rd44;
	mov.u64 	%rd48, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r251}, %rd48;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r252,%dummy}, %rd48;
	}
	shf.l.wrap.b32 	%r253, %r252, %r251, 30;
	shf.l.wrap.b32 	%r254, %r251, %r252, 30;
	mov.b64 	%rd49, {%r254, %r253};
	shf.r.wrap.b32 	%r255, %r251, %r252, 28;
	shf.r.wrap.b32 	%r256, %r252, %r251, 28;
	mov.b64 	%rd50, {%r256, %r255};
	xor.b64  	%rd51, %rd49, %rd50;
	shf.l.wrap.b32 	%r257, %r252, %r251, 25;
	shf.l.wrap.b32 	%r258, %r251, %r252, 25;
	mov.b64 	%rd52, {%r258, %r257};
	xor.b64  	%rd53, %rd51, %rd52;
	add.s64 	%rd54, %rd47, %rd53;
	add.s64 	%rd55, %rd47, 2357225248857953701;
	add.s64 	%rd56, %rd54, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r259,%dummy}, %rd55;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r260}, %rd55;
	}
	shf.r.wrap.b32 	%r261, %r260, %r259, 14;
	shf.r.wrap.b32 	%r262, %r259, %r260, 14;
	mov.b64 	%rd57, {%r262, %r261};
	shf.r.wrap.b32 	%r263, %r260, %r259, 18;
	shf.r.wrap.b32 	%r264, %r259, %r260, 18;
	mov.b64 	%rd58, {%r264, %r263};
	xor.b64  	%rd59, %rd58, %rd57;
	shf.l.wrap.b32 	%r265, %r259, %r260, 23;
	shf.l.wrap.b32 	%r266, %r260, %r259, 23;
	mov.b64 	%rd60, {%r266, %r265};
	xor.b64  	%rd61, %rd59, %rd60;
	and.b64  	%rd62, %rd55, -3887949035690463538;
	xor.b64  	%rd63, %rd62, -7276294671716946913;
	ld.const.u64 	%rd64, [k_sha512+8];
	add.s64 	%rd65, %rd13, %rd64;
	add.s64 	%rd66, %rd65, %rd63;
	add.s64 	%rd67, %rd66, %rd61;
	xor.b64  	%rd68, %rd56, -4942790177534073029;
	xor.b64  	%rd69, %rd56, 7640891576956012808;
	and.b64  	%rd70, %rd69, %rd68;
	xor.b64  	%rd71, %rd70, %rd56;
	add.s64 	%rd72, %rd67, %rd71;
	add.s64 	%rd73, %rd67, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r267,%dummy}, %rd56;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r268}, %rd56;
	}
	shf.r.wrap.b32 	%r269, %r268, %r267, 28;
	shf.r.wrap.b32 	%r270, %r267, %r268, 28;
	mov.b64 	%rd74, {%r270, %r269};
	shf.l.wrap.b32 	%r271, %r267, %r268, 30;
	shf.l.wrap.b32 	%r272, %r268, %r267, 30;
	mov.b64 	%rd75, {%r272, %r271};
	xor.b64  	%rd76, %rd75, %rd74;
	shf.l.wrap.b32 	%r273, %r267, %r268, 25;
	shf.l.wrap.b32 	%r274, %r268, %r267, 25;
	mov.b64 	%rd77, {%r274, %r273};
	xor.b64  	%rd78, %rd76, %rd77;
	add.s64 	%rd79, %rd72, %rd78;
	add.s64 	%rd80, %rd79, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r275,%dummy}, %rd73;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd73;
	}
	shf.r.wrap.b32 	%r277, %r276, %r275, 14;
	shf.r.wrap.b32 	%r278, %r275, %r276, 14;
	mov.b64 	%rd81, {%r278, %r277};
	shf.r.wrap.b32 	%r279, %r276, %r275, 18;
	shf.r.wrap.b32 	%r280, %r275, %r276, 18;
	mov.b64 	%rd82, {%r280, %r279};
	xor.b64  	%rd83, %rd82, %rd81;
	shf.l.wrap.b32 	%r281, %r275, %r276, 23;
	shf.l.wrap.b32 	%r282, %r276, %r275, 23;
	mov.b64 	%rd84, {%r282, %r281};
	xor.b64  	%rd85, %rd83, %rd84;
	xor.b64  	%rd86, %rd55, 5840696475078001361;
	and.b64  	%rd87, %rd73, %rd86;
	xor.b64  	%rd88, %rd87, 5840696475078001361;
	ld.const.u64 	%rd89, [k_sha512+16];
	add.s64 	%rd90, %rd16, %rd89;
	add.s64 	%rd91, %rd90, %rd88;
	add.s64 	%rd92, %rd91, %rd85;
	xor.b64  	%rd93, %rd80, 7640891576956012808;
	xor.b64  	%rd94, %rd80, %rd56;
	and.b64  	%rd95, %rd94, %rd93;
	xor.b64  	%rd96, %rd95, %rd80;
	add.s64 	%rd97, %rd92, %rd96;
	add.s64 	%rd98, %rd92, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd80;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r284}, %rd80;
	}
	shf.r.wrap.b32 	%r285, %r284, %r283, 28;
	shf.r.wrap.b32 	%r286, %r283, %r284, 28;
	mov.b64 	%rd99, {%r286, %r285};
	shf.l.wrap.b32 	%r287, %r283, %r284, 30;
	shf.l.wrap.b32 	%r288, %r284, %r283, 30;
	mov.b64 	%rd100, {%r288, %r287};
	xor.b64  	%rd101, %rd100, %rd99;
	shf.l.wrap.b32 	%r289, %r283, %r284, 25;
	shf.l.wrap.b32 	%r290, %r284, %r283, 25;
	mov.b64 	%rd102, {%r290, %r289};
	xor.b64  	%rd103, %rd101, %rd102;
	add.s64 	%rd104, %rd97, %rd103;
	add.s64 	%rd105, %rd104, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r291,%dummy}, %rd98;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r292}, %rd98;
	}
	shf.r.wrap.b32 	%r293, %r292, %r291, 14;
	shf.r.wrap.b32 	%r294, %r291, %r292, 14;
	mov.b64 	%rd106, {%r294, %r293};
	shf.r.wrap.b32 	%r295, %r292, %r291, 18;
	shf.r.wrap.b32 	%r296, %r291, %r292, 18;
	mov.b64 	%rd107, {%r296, %r295};
	xor.b64  	%rd108, %rd107, %rd106;
	shf.l.wrap.b32 	%r297, %r291, %r292, 23;
	shf.l.wrap.b32 	%r298, %r292, %r291, 23;
	mov.b64 	%rd109, {%r298, %r297};
	xor.b64  	%rd110, %rd108, %rd109;
	xor.b64  	%rd111, %rd73, %rd55;
	and.b64  	%rd112, %rd98, %rd111;
	xor.b64  	%rd113, %rd112, %rd55;
	ld.const.u64 	%rd114, [k_sha512+24];
	add.s64 	%rd115, %rd19, %rd114;
	add.s64 	%rd116, %rd115, %rd113;
	add.s64 	%rd117, %rd116, %rd110;
	xor.b64  	%rd118, %rd105, %rd56;
	xor.b64  	%rd119, %rd105, %rd80;
	and.b64  	%rd120, %rd119, %rd118;
	xor.b64  	%rd121, %rd120, %rd105;
	add.s64 	%rd122, %rd117, %rd121;
	add.s64 	%rd123, %rd117, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd105;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 28;
	shf.r.wrap.b32 	%r302, %r299, %r300, 28;
	mov.b64 	%rd124, {%r302, %r301};
	shf.l.wrap.b32 	%r303, %r299, %r300, 30;
	shf.l.wrap.b32 	%r304, %r300, %r299, 30;
	mov.b64 	%rd125, {%r304, %r303};
	xor.b64  	%rd126, %rd125, %rd124;
	shf.l.wrap.b32 	%r305, %r299, %r300, 25;
	shf.l.wrap.b32 	%r306, %r300, %r299, 25;
	mov.b64 	%rd127, {%r306, %r305};
	xor.b64  	%rd128, %rd126, %rd127;
	add.s64 	%rd129, %rd122, %rd128;
	add.s64 	%rd130, %rd129, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd123;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 14;
	shf.r.wrap.b32 	%r310, %r307, %r308, 14;
	mov.b64 	%rd131, {%r310, %r309};
	shf.r.wrap.b32 	%r311, %r308, %r307, 18;
	shf.r.wrap.b32 	%r312, %r307, %r308, 18;
	mov.b64 	%rd132, {%r312, %r311};
	xor.b64  	%rd133, %rd132, %rd131;
	shf.l.wrap.b32 	%r313, %r307, %r308, 23;
	shf.l.wrap.b32 	%r314, %r308, %r307, 23;
	mov.b64 	%rd134, {%r314, %r313};
	xor.b64  	%rd135, %rd133, %rd134;
	xor.b64  	%rd136, %rd98, %rd73;
	and.b64  	%rd137, %rd123, %rd136;
	xor.b64  	%rd138, %rd137, %rd73;
	add.s64 	%rd139, %rd55, %rd22;
	ld.const.u64 	%rd140, [k_sha512+32];
	add.s64 	%rd141, %rd139, %rd140;
	add.s64 	%rd142, %rd141, %rd138;
	add.s64 	%rd143, %rd142, %rd135;
	add.s64 	%rd144, %rd143, %rd56;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r315,%dummy}, %rd130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd130;
	}
	shf.r.wrap.b32 	%r317, %r316, %r315, 28;
	shf.r.wrap.b32 	%r318, %r315, %r316, 28;
	mov.b64 	%rd145, {%r318, %r317};
	shf.l.wrap.b32 	%r319, %r315, %r316, 30;
	shf.l.wrap.b32 	%r320, %r316, %r315, 30;
	mov.b64 	%rd146, {%r320, %r319};
	xor.b64  	%rd147, %rd146, %rd145;
	shf.l.wrap.b32 	%r321, %r315, %r316, 25;
	shf.l.wrap.b32 	%r322, %r316, %r315, 25;
	mov.b64 	%rd148, {%r322, %r321};
	xor.b64  	%rd149, %rd147, %rd148;
	xor.b64  	%rd150, %rd130, %rd80;
	xor.b64  	%rd151, %rd130, %rd105;
	and.b64  	%rd152, %rd151, %rd150;
	xor.b64  	%rd153, %rd152, %rd130;
	add.s64 	%rd154, %rd143, %rd153;
	add.s64 	%rd155, %rd154, %rd149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd144;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 14;
	shf.r.wrap.b32 	%r326, %r323, %r324, 14;
	mov.b64 	%rd156, {%r326, %r325};
	shf.r.wrap.b32 	%r327, %r324, %r323, 18;
	shf.r.wrap.b32 	%r328, %r323, %r324, 18;
	mov.b64 	%rd157, {%r328, %r327};
	xor.b64  	%rd158, %rd157, %rd156;
	shf.l.wrap.b32 	%r329, %r323, %r324, 23;
	shf.l.wrap.b32 	%r330, %r324, %r323, 23;
	mov.b64 	%rd159, {%r330, %r329};
	xor.b64  	%rd160, %rd158, %rd159;
	xor.b64  	%rd161, %rd123, %rd98;
	and.b64  	%rd162, %rd144, %rd161;
	xor.b64  	%rd163, %rd162, %rd98;
	add.s64 	%rd164, %rd73, %rd25;
	ld.const.u64 	%rd165, [k_sha512+40];
	add.s64 	%rd166, %rd164, %rd165;
	add.s64 	%rd167, %rd166, %rd163;
	add.s64 	%rd168, %rd167, %rd160;
	add.s64 	%rd169, %rd168, %rd80;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd155;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 28;
	shf.r.wrap.b32 	%r334, %r331, %r332, 28;
	mov.b64 	%rd170, {%r334, %r333};
	shf.l.wrap.b32 	%r335, %r331, %r332, 30;
	shf.l.wrap.b32 	%r336, %r332, %r331, 30;
	mov.b64 	%rd171, {%r336, %r335};
	xor.b64  	%rd172, %rd171, %rd170;
	shf.l.wrap.b32 	%r337, %r331, %r332, 25;
	shf.l.wrap.b32 	%r338, %r332, %r331, 25;
	mov.b64 	%rd173, {%r338, %r337};
	xor.b64  	%rd174, %rd172, %rd173;
	xor.b64  	%rd175, %rd155, %rd105;
	xor.b64  	%rd176, %rd155, %rd130;
	and.b64  	%rd177, %rd176, %rd175;
	xor.b64  	%rd178, %rd177, %rd155;
	add.s64 	%rd179, %rd168, %rd178;
	add.s64 	%rd180, %rd179, %rd174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r339,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r340}, %rd169;
	}
	shf.r.wrap.b32 	%r341, %r340, %r339, 14;
	shf.r.wrap.b32 	%r342, %r339, %r340, 14;
	mov.b64 	%rd181, {%r342, %r341};
	shf.r.wrap.b32 	%r343, %r340, %r339, 18;
	shf.r.wrap.b32 	%r344, %r339, %r340, 18;
	mov.b64 	%rd182, {%r344, %r343};
	xor.b64  	%rd183, %rd182, %rd181;
	shf.l.wrap.b32 	%r345, %r339, %r340, 23;
	shf.l.wrap.b32 	%r346, %r340, %r339, 23;
	mov.b64 	%rd184, {%r346, %r345};
	xor.b64  	%rd185, %rd183, %rd184;
	xor.b64  	%rd186, %rd144, %rd123;
	and.b64  	%rd187, %rd169, %rd186;
	xor.b64  	%rd188, %rd187, %rd123;
	add.s64 	%rd189, %rd98, %rd28;
	ld.const.u64 	%rd190, [k_sha512+48];
	add.s64 	%rd191, %rd189, %rd190;
	add.s64 	%rd192, %rd191, %rd188;
	add.s64 	%rd193, %rd192, %rd185;
	add.s64 	%rd194, %rd193, %rd105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd180;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 28;
	shf.r.wrap.b32 	%r350, %r347, %r348, 28;
	mov.b64 	%rd195, {%r350, %r349};
	shf.l.wrap.b32 	%r351, %r347, %r348, 30;
	shf.l.wrap.b32 	%r352, %r348, %r347, 30;
	mov.b64 	%rd196, {%r352, %r351};
	xor.b64  	%rd197, %rd196, %rd195;
	shf.l.wrap.b32 	%r353, %r347, %r348, 25;
	shf.l.wrap.b32 	%r354, %r348, %r347, 25;
	mov.b64 	%rd198, {%r354, %r353};
	xor.b64  	%rd199, %rd197, %rd198;
	xor.b64  	%rd200, %rd180, %rd130;
	xor.b64  	%rd201, %rd180, %rd155;
	and.b64  	%rd202, %rd201, %rd200;
	xor.b64  	%rd203, %rd202, %rd180;
	add.s64 	%rd204, %rd193, %rd203;
	add.s64 	%rd205, %rd204, %rd199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd194;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 14;
	shf.r.wrap.b32 	%r358, %r355, %r356, 14;
	mov.b64 	%rd206, {%r358, %r357};
	shf.r.wrap.b32 	%r359, %r356, %r355, 18;
	shf.r.wrap.b32 	%r360, %r355, %r356, 18;
	mov.b64 	%rd207, {%r360, %r359};
	xor.b64  	%rd208, %rd207, %rd206;
	shf.l.wrap.b32 	%r361, %r355, %r356, 23;
	shf.l.wrap.b32 	%r362, %r356, %r355, 23;
	mov.b64 	%rd209, {%r362, %r361};
	xor.b64  	%rd210, %rd208, %rd209;
	xor.b64  	%rd211, %rd169, %rd144;
	and.b64  	%rd212, %rd194, %rd211;
	xor.b64  	%rd213, %rd212, %rd144;
	add.s64 	%rd214, %rd123, %rd31;
	ld.const.u64 	%rd215, [k_sha512+56];
	add.s64 	%rd216, %rd214, %rd215;
	add.s64 	%rd217, %rd216, %rd213;
	add.s64 	%rd218, %rd217, %rd210;
	add.s64 	%rd219, %rd218, %rd130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r363,%dummy}, %rd205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r364}, %rd205;
	}
	shf.r.wrap.b32 	%r365, %r364, %r363, 28;
	shf.r.wrap.b32 	%r366, %r363, %r364, 28;
	mov.b64 	%rd220, {%r366, %r365};
	shf.l.wrap.b32 	%r367, %r363, %r364, 30;
	shf.l.wrap.b32 	%r368, %r364, %r363, 30;
	mov.b64 	%rd221, {%r368, %r367};
	xor.b64  	%rd222, %rd221, %rd220;
	shf.l.wrap.b32 	%r369, %r363, %r364, 25;
	shf.l.wrap.b32 	%r370, %r364, %r363, 25;
	mov.b64 	%rd223, {%r370, %r369};
	xor.b64  	%rd224, %rd222, %rd223;
	xor.b64  	%rd225, %rd205, %rd155;
	xor.b64  	%rd226, %rd205, %rd180;
	and.b64  	%rd227, %rd226, %rd225;
	xor.b64  	%rd228, %rd227, %rd205;
	add.s64 	%rd229, %rd218, %rd228;
	add.s64 	%rd230, %rd229, %rd224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd219;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 14;
	shf.r.wrap.b32 	%r374, %r371, %r372, 14;
	mov.b64 	%rd231, {%r374, %r373};
	shf.r.wrap.b32 	%r375, %r372, %r371, 18;
	shf.r.wrap.b32 	%r376, %r371, %r372, 18;
	mov.b64 	%rd232, {%r376, %r375};
	xor.b64  	%rd233, %rd232, %rd231;
	shf.l.wrap.b32 	%r377, %r371, %r372, 23;
	shf.l.wrap.b32 	%r378, %r372, %r371, 23;
	mov.b64 	%rd234, {%r378, %r377};
	xor.b64  	%rd235, %rd233, %rd234;
	xor.b64  	%rd236, %rd194, %rd169;
	and.b64  	%rd237, %rd219, %rd236;
	xor.b64  	%rd238, %rd237, %rd169;
	add.s64 	%rd239, %rd144, %rd34;
	ld.const.u64 	%rd240, [k_sha512+64];
	add.s64 	%rd241, %rd239, %rd240;
	add.s64 	%rd242, %rd241, %rd238;
	add.s64 	%rd243, %rd242, %rd235;
	add.s64 	%rd244, %rd243, %rd155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd230;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 28;
	shf.r.wrap.b32 	%r382, %r379, %r380, 28;
	mov.b64 	%rd245, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 30;
	shf.l.wrap.b32 	%r384, %r380, %r379, 30;
	mov.b64 	%rd246, {%r384, %r383};
	xor.b64  	%rd247, %rd246, %rd245;
	shf.l.wrap.b32 	%r385, %r379, %r380, 25;
	shf.l.wrap.b32 	%r386, %r380, %r379, 25;
	mov.b64 	%rd248, {%r386, %r385};
	xor.b64  	%rd249, %rd247, %rd248;
	xor.b64  	%rd250, %rd230, %rd180;
	xor.b64  	%rd251, %rd230, %rd205;
	and.b64  	%rd252, %rd251, %rd250;
	xor.b64  	%rd253, %rd252, %rd230;
	add.s64 	%rd254, %rd243, %rd253;
	add.s64 	%rd255, %rd254, %rd249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd244;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 14;
	shf.r.wrap.b32 	%r390, %r387, %r388, 14;
	mov.b64 	%rd256, {%r390, %r389};
	shf.r.wrap.b32 	%r391, %r388, %r387, 18;
	shf.r.wrap.b32 	%r392, %r387, %r388, 18;
	mov.b64 	%rd257, {%r392, %r391};
	xor.b64  	%rd258, %rd257, %rd256;
	shf.l.wrap.b32 	%r393, %r387, %r388, 23;
	shf.l.wrap.b32 	%r394, %r388, %r387, 23;
	mov.b64 	%rd259, {%r394, %r393};
	xor.b64  	%rd260, %rd258, %rd259;
	xor.b64  	%rd261, %rd219, %rd194;
	and.b64  	%rd262, %rd244, %rd261;
	xor.b64  	%rd263, %rd262, %rd194;
	add.s64 	%rd264, %rd169, %rd37;
	ld.const.u64 	%rd265, [k_sha512+72];
	add.s64 	%rd266, %rd264, %rd265;
	add.s64 	%rd267, %rd266, %rd263;
	add.s64 	%rd268, %rd267, %rd260;
	add.s64 	%rd269, %rd268, %rd180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd255;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 28;
	shf.r.wrap.b32 	%r398, %r395, %r396, 28;
	mov.b64 	%rd270, {%r398, %r397};
	shf.l.wrap.b32 	%r399, %r395, %r396, 30;
	shf.l.wrap.b32 	%r400, %r396, %r395, 30;
	mov.b64 	%rd271, {%r400, %r399};
	xor.b64  	%rd272, %rd271, %rd270;
	shf.l.wrap.b32 	%r401, %r395, %r396, 25;
	shf.l.wrap.b32 	%r402, %r396, %r395, 25;
	mov.b64 	%rd273, {%r402, %r401};
	xor.b64  	%rd274, %rd272, %rd273;
	xor.b64  	%rd275, %rd255, %rd205;
	xor.b64  	%rd276, %rd255, %rd230;
	and.b64  	%rd277, %rd276, %rd275;
	xor.b64  	%rd278, %rd277, %rd255;
	add.s64 	%rd279, %rd268, %rd278;
	add.s64 	%rd280, %rd279, %rd274;
	ld.const.u64 	%rd281, [k_sha512+80];
	add.s64 	%rd282, %rd281, %rd194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd269;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 14;
	shf.r.wrap.b32 	%r406, %r403, %r404, 14;
	mov.b64 	%rd283, {%r406, %r405};
	shf.r.wrap.b32 	%r407, %r404, %r403, 18;
	shf.r.wrap.b32 	%r408, %r403, %r404, 18;
	mov.b64 	%rd284, {%r408, %r407};
	xor.b64  	%rd285, %rd284, %rd283;
	shf.l.wrap.b32 	%r409, %r403, %r404, 23;
	shf.l.wrap.b32 	%r410, %r404, %r403, 23;
	mov.b64 	%rd286, {%r410, %r409};
	xor.b64  	%rd287, %rd285, %rd286;
	xor.b64  	%rd288, %rd244, %rd219;
	and.b64  	%rd289, %rd269, %rd288;
	xor.b64  	%rd290, %rd289, %rd219;
	add.s64 	%rd291, %rd282, %rd290;
	add.s64 	%rd292, %rd291, %rd287;
	add.s64 	%rd293, %rd292, %rd205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r411,%dummy}, %rd280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r412}, %rd280;
	}
	shf.r.wrap.b32 	%r413, %r412, %r411, 28;
	shf.r.wrap.b32 	%r414, %r411, %r412, 28;
	mov.b64 	%rd294, {%r414, %r413};
	shf.l.wrap.b32 	%r415, %r411, %r412, 30;
	shf.l.wrap.b32 	%r416, %r412, %r411, 30;
	mov.b64 	%rd295, {%r416, %r415};
	xor.b64  	%rd296, %rd295, %rd294;
	shf.l.wrap.b32 	%r417, %r411, %r412, 25;
	shf.l.wrap.b32 	%r418, %r412, %r411, 25;
	mov.b64 	%rd297, {%r418, %r417};
	xor.b64  	%rd298, %rd296, %rd297;
	xor.b64  	%rd299, %rd280, %rd230;
	xor.b64  	%rd300, %rd280, %rd255;
	and.b64  	%rd301, %rd300, %rd299;
	xor.b64  	%rd302, %rd301, %rd280;
	add.s64 	%rd303, %rd292, %rd302;
	add.s64 	%rd304, %rd303, %rd298;
	ld.const.u64 	%rd305, [k_sha512+88];
	add.s64 	%rd306, %rd305, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd293;
	}
	shf.r.wrap.b32 	%r421, %r420, %r419, 14;
	shf.r.wrap.b32 	%r422, %r419, %r420, 14;
	mov.b64 	%rd307, {%r422, %r421};
	shf.r.wrap.b32 	%r423, %r420, %r419, 18;
	shf.r.wrap.b32 	%r424, %r419, %r420, 18;
	mov.b64 	%rd308, {%r424, %r423};
	xor.b64  	%rd309, %rd308, %rd307;
	shf.l.wrap.b32 	%r425, %r419, %r420, 23;
	shf.l.wrap.b32 	%r426, %r420, %r419, 23;
	mov.b64 	%rd310, {%r426, %r425};
	xor.b64  	%rd311, %rd309, %rd310;
	xor.b64  	%rd312, %rd269, %rd244;
	and.b64  	%rd313, %rd293, %rd312;
	xor.b64  	%rd314, %rd313, %rd244;
	add.s64 	%rd315, %rd306, %rd314;
	add.s64 	%rd316, %rd315, %rd311;
	add.s64 	%rd317, %rd316, %rd230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd304;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 28;
	shf.r.wrap.b32 	%r430, %r427, %r428, 28;
	mov.b64 	%rd318, {%r430, %r429};
	shf.l.wrap.b32 	%r431, %r427, %r428, 30;
	shf.l.wrap.b32 	%r432, %r428, %r427, 30;
	mov.b64 	%rd319, {%r432, %r431};
	xor.b64  	%rd320, %rd319, %rd318;
	shf.l.wrap.b32 	%r433, %r427, %r428, 25;
	shf.l.wrap.b32 	%r434, %r428, %r427, 25;
	mov.b64 	%rd321, {%r434, %r433};
	xor.b64  	%rd322, %rd320, %rd321;
	xor.b64  	%rd323, %rd304, %rd255;
	xor.b64  	%rd324, %rd304, %rd280;
	and.b64  	%rd325, %rd324, %rd323;
	xor.b64  	%rd326, %rd325, %rd304;
	add.s64 	%rd327, %rd316, %rd326;
	add.s64 	%rd328, %rd327, %rd322;
	ld.const.u64 	%rd329, [k_sha512+96];
	add.s64 	%rd330, %rd329, %rd244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd317;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 14;
	shf.r.wrap.b32 	%r438, %r435, %r436, 14;
	mov.b64 	%rd331, {%r438, %r437};
	shf.r.wrap.b32 	%r439, %r436, %r435, 18;
	shf.r.wrap.b32 	%r440, %r435, %r436, 18;
	mov.b64 	%rd332, {%r440, %r439};
	xor.b64  	%rd333, %rd332, %rd331;
	shf.l.wrap.b32 	%r441, %r435, %r436, 23;
	shf.l.wrap.b32 	%r442, %r436, %r435, 23;
	mov.b64 	%rd334, {%r442, %r441};
	xor.b64  	%rd335, %rd333, %rd334;
	xor.b64  	%rd336, %rd293, %rd269;
	and.b64  	%rd337, %rd317, %rd336;
	xor.b64  	%rd338, %rd337, %rd269;
	add.s64 	%rd339, %rd330, %rd338;
	add.s64 	%rd340, %rd339, %rd335;
	add.s64 	%rd341, %rd340, %rd255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd328;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 28;
	shf.r.wrap.b32 	%r446, %r443, %r444, 28;
	mov.b64 	%rd342, {%r446, %r445};
	shf.l.wrap.b32 	%r447, %r443, %r444, 30;
	shf.l.wrap.b32 	%r448, %r444, %r443, 30;
	mov.b64 	%rd343, {%r448, %r447};
	xor.b64  	%rd344, %rd343, %rd342;
	shf.l.wrap.b32 	%r449, %r443, %r444, 25;
	shf.l.wrap.b32 	%r450, %r444, %r443, 25;
	mov.b64 	%rd345, {%r450, %r449};
	xor.b64  	%rd346, %rd344, %rd345;
	xor.b64  	%rd347, %rd328, %rd280;
	xor.b64  	%rd348, %rd328, %rd304;
	and.b64  	%rd349, %rd348, %rd347;
	xor.b64  	%rd350, %rd349, %rd328;
	add.s64 	%rd351, %rd340, %rd350;
	add.s64 	%rd352, %rd351, %rd346;
	ld.const.u64 	%rd353, [k_sha512+104];
	add.s64 	%rd354, %rd353, %rd269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd341;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 14;
	shf.r.wrap.b32 	%r454, %r451, %r452, 14;
	mov.b64 	%rd355, {%r454, %r453};
	shf.r.wrap.b32 	%r455, %r452, %r451, 18;
	shf.r.wrap.b32 	%r456, %r451, %r452, 18;
	mov.b64 	%rd356, {%r456, %r455};
	xor.b64  	%rd357, %rd356, %rd355;
	shf.l.wrap.b32 	%r457, %r451, %r452, 23;
	shf.l.wrap.b32 	%r458, %r452, %r451, 23;
	mov.b64 	%rd358, {%r458, %r457};
	xor.b64  	%rd359, %rd357, %rd358;
	xor.b64  	%rd360, %rd317, %rd293;
	and.b64  	%rd361, %rd341, %rd360;
	xor.b64  	%rd362, %rd361, %rd293;
	add.s64 	%rd363, %rd354, %rd362;
	add.s64 	%rd364, %rd363, %rd359;
	add.s64 	%rd365, %rd364, %rd280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd352;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 28;
	shf.r.wrap.b32 	%r462, %r459, %r460, 28;
	mov.b64 	%rd366, {%r462, %r461};
	shf.l.wrap.b32 	%r463, %r459, %r460, 30;
	shf.l.wrap.b32 	%r464, %r460, %r459, 30;
	mov.b64 	%rd367, {%r464, %r463};
	xor.b64  	%rd368, %rd367, %rd366;
	shf.l.wrap.b32 	%r465, %r459, %r460, 25;
	shf.l.wrap.b32 	%r466, %r460, %r459, 25;
	mov.b64 	%rd369, {%r466, %r465};
	xor.b64  	%rd370, %rd368, %rd369;
	xor.b64  	%rd371, %rd352, %rd304;
	xor.b64  	%rd372, %rd352, %rd328;
	and.b64  	%rd373, %rd372, %rd371;
	xor.b64  	%rd374, %rd373, %rd352;
	add.s64 	%rd375, %rd364, %rd374;
	add.s64 	%rd376, %rd375, %rd370;
	ld.const.u64 	%rd377, [k_sha512+112];
	add.s64 	%rd378, %rd377, %rd293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r467,%dummy}, %rd365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r468}, %rd365;
	}
	shf.r.wrap.b32 	%r469, %r468, %r467, 14;
	shf.r.wrap.b32 	%r470, %r467, %r468, 14;
	mov.b64 	%rd379, {%r470, %r469};
	shf.r.wrap.b32 	%r471, %r468, %r467, 18;
	shf.r.wrap.b32 	%r472, %r467, %r468, 18;
	mov.b64 	%rd380, {%r472, %r471};
	xor.b64  	%rd381, %rd380, %rd379;
	shf.l.wrap.b32 	%r473, %r467, %r468, 23;
	shf.l.wrap.b32 	%r474, %r468, %r467, 23;
	mov.b64 	%rd382, {%r474, %r473};
	xor.b64  	%rd383, %rd381, %rd382;
	xor.b64  	%rd384, %rd341, %rd317;
	and.b64  	%rd385, %rd365, %rd384;
	xor.b64  	%rd386, %rd385, %rd317;
	add.s64 	%rd387, %rd378, %rd386;
	add.s64 	%rd388, %rd387, %rd383;
	add.s64 	%rd389, %rd388, %rd304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd376;
	}
	shf.r.wrap.b32 	%r477, %r476, %r475, 28;
	shf.r.wrap.b32 	%r478, %r475, %r476, 28;
	mov.b64 	%rd390, {%r478, %r477};
	shf.l.wrap.b32 	%r479, %r475, %r476, 30;
	shf.l.wrap.b32 	%r480, %r476, %r475, 30;
	mov.b64 	%rd391, {%r480, %r479};
	xor.b64  	%rd392, %rd391, %rd390;
	shf.l.wrap.b32 	%r481, %r475, %r476, 25;
	shf.l.wrap.b32 	%r482, %r476, %r475, 25;
	mov.b64 	%rd393, {%r482, %r481};
	xor.b64  	%rd394, %rd392, %rd393;
	xor.b64  	%rd395, %rd376, %rd328;
	xor.b64  	%rd396, %rd376, %rd352;
	and.b64  	%rd397, %rd396, %rd395;
	xor.b64  	%rd398, %rd397, %rd376;
	add.s64 	%rd399, %rd388, %rd398;
	add.s64 	%rd400, %rd399, %rd394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd389;
	}
	shf.r.wrap.b32 	%r485, %r484, %r483, 14;
	shf.r.wrap.b32 	%r486, %r483, %r484, 14;
	mov.b64 	%rd401, {%r486, %r485};
	shf.r.wrap.b32 	%r487, %r484, %r483, 18;
	shf.r.wrap.b32 	%r488, %r483, %r484, 18;
	mov.b64 	%rd402, {%r488, %r487};
	xor.b64  	%rd403, %rd402, %rd401;
	shf.l.wrap.b32 	%r489, %r483, %r484, 23;
	shf.l.wrap.b32 	%r490, %r484, %r483, 23;
	mov.b64 	%rd404, {%r490, %r489};
	xor.b64  	%rd405, %rd403, %rd404;
	xor.b64  	%rd406, %rd365, %rd341;
	and.b64  	%rd407, %rd389, %rd406;
	xor.b64  	%rd408, %rd407, %rd341;
	add.s64 	%rd409, %rd317, %rd38;
	ld.const.u64 	%rd410, [k_sha512+120];
	add.s64 	%rd411, %rd409, %rd410;
	add.s64 	%rd412, %rd411, %rd408;
	add.s64 	%rd413, %rd412, %rd405;
	add.s64 	%rd414, %rd413, %rd328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd400;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 28;
	shf.r.wrap.b32 	%r494, %r491, %r492, 28;
	mov.b64 	%rd415, {%r494, %r493};
	shf.l.wrap.b32 	%r495, %r491, %r492, 30;
	shf.l.wrap.b32 	%r496, %r492, %r491, 30;
	mov.b64 	%rd416, {%r496, %r495};
	xor.b64  	%rd417, %rd416, %rd415;
	shf.l.wrap.b32 	%r497, %r491, %r492, 25;
	shf.l.wrap.b32 	%r498, %r492, %r491, 25;
	mov.b64 	%rd418, {%r498, %r497};
	xor.b64  	%rd419, %rd417, %rd418;
	xor.b64  	%rd420, %rd400, %rd352;
	xor.b64  	%rd421, %rd400, %rd376;
	and.b64  	%rd422, %rd421, %rd420;
	xor.b64  	%rd423, %rd422, %rd400;
	add.s64 	%rd424, %rd413, %rd423;
	add.s64 	%rd425, %rd424, %rd419;
	mov.u64 	%rd426, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r499}, %rd426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd426;
	}
	shf.l.wrap.b32 	%r501, %r500, %r499, 3;
	shf.l.wrap.b32 	%r502, %r499, %r500, 3;
	mov.b64 	%rd427, {%r502, %r501};
	shf.r.wrap.b32 	%r503, %r499, %r500, 19;
	shf.r.wrap.b32 	%r504, %r500, %r499, 19;
	mov.b64 	%rd428, {%r504, %r503};
	xor.b64  	%rd429, %rd428, %rd427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd13;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd13;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 1;
	shf.r.wrap.b32 	%r508, %r505, %r506, 1;
	mov.b64 	%rd430, {%r508, %r507};
	shf.r.wrap.b32 	%r509, %r506, %r505, 8;
	shf.r.wrap.b32 	%r510, %r505, %r506, 8;
	mov.b64 	%rd431, {%r510, %r509};
	shr.u64 	%rd432, %rd13, 7;
	xor.b64  	%rd433, %rd430, %rd432;
	xor.b64  	%rd434, %rd433, %rd431;
	add.s64 	%rd435, %rd10, %rd37;
	add.s64 	%rd436, %rd435, %rd429;
	add.s64 	%rd437, %rd436, %rd434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd38;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd38;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 19;
	shf.r.wrap.b32 	%r514, %r511, %r512, 19;
	mov.b64 	%rd438, {%r514, %r513};
	shf.l.wrap.b32 	%r515, %r511, %r512, 3;
	shf.l.wrap.b32 	%r516, %r512, %r511, 3;
	mov.b64 	%rd439, {%r516, %r515};
	shr.u64 	%rd440, %rd38, 6;
	xor.b64  	%rd441, %rd438, %rd440;
	xor.b64  	%rd442, %rd441, %rd439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd16;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd16;
	}
	shf.r.wrap.b32 	%r519, %r518, %r517, 1;
	shf.r.wrap.b32 	%r520, %r517, %r518, 1;
	mov.b64 	%rd443, {%r520, %r519};
	shf.r.wrap.b32 	%r521, %r518, %r517, 8;
	shf.r.wrap.b32 	%r522, %r517, %r518, 8;
	mov.b64 	%rd444, {%r522, %r521};
	shr.u64 	%rd445, %rd16, 7;
	xor.b64  	%rd446, %rd443, %rd445;
	xor.b64  	%rd447, %rd446, %rd444;
	add.s64 	%rd448, %rd13, %rd442;
	add.s64 	%rd449, %rd448, %rd447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r523,%dummy}, %rd437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd437;
	}
	shf.r.wrap.b32 	%r525, %r524, %r523, 19;
	shf.r.wrap.b32 	%r526, %r523, %r524, 19;
	mov.b64 	%rd450, {%r526, %r525};
	shf.l.wrap.b32 	%r527, %r523, %r524, 3;
	shf.l.wrap.b32 	%r528, %r524, %r523, 3;
	mov.b64 	%rd451, {%r528, %r527};
	shr.u64 	%rd452, %rd437, 6;
	xor.b64  	%rd453, %rd450, %rd452;
	xor.b64  	%rd454, %rd453, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd19;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd19;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 1;
	shf.r.wrap.b32 	%r532, %r529, %r530, 1;
	mov.b64 	%rd455, {%r532, %r531};
	shf.r.wrap.b32 	%r533, %r530, %r529, 8;
	shf.r.wrap.b32 	%r534, %r529, %r530, 8;
	mov.b64 	%rd456, {%r534, %r533};
	shr.u64 	%rd457, %rd19, 7;
	xor.b64  	%rd458, %rd455, %rd457;
	xor.b64  	%rd459, %rd458, %rd456;
	add.s64 	%rd460, %rd16, %rd454;
	add.s64 	%rd461, %rd460, %rd459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r535,%dummy}, %rd449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd449;
	}
	shf.r.wrap.b32 	%r537, %r536, %r535, 19;
	shf.r.wrap.b32 	%r538, %r535, %r536, 19;
	mov.b64 	%rd462, {%r538, %r537};
	shf.l.wrap.b32 	%r539, %r535, %r536, 3;
	shf.l.wrap.b32 	%r540, %r536, %r535, 3;
	mov.b64 	%rd463, {%r540, %r539};
	shr.u64 	%rd464, %rd449, 6;
	xor.b64  	%rd465, %rd462, %rd464;
	xor.b64  	%rd466, %rd465, %rd463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd22;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r542}, %rd22;
	}
	shf.r.wrap.b32 	%r543, %r542, %r541, 1;
	shf.r.wrap.b32 	%r544, %r541, %r542, 1;
	mov.b64 	%rd467, {%r544, %r543};
	shf.r.wrap.b32 	%r545, %r542, %r541, 8;
	shf.r.wrap.b32 	%r546, %r541, %r542, 8;
	mov.b64 	%rd468, {%r546, %r545};
	shr.u64 	%rd469, %rd22, 7;
	xor.b64  	%rd470, %rd467, %rd469;
	xor.b64  	%rd471, %rd470, %rd468;
	add.s64 	%rd472, %rd19, %rd466;
	add.s64 	%rd473, %rd472, %rd471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd461;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 19;
	shf.r.wrap.b32 	%r550, %r547, %r548, 19;
	mov.b64 	%rd474, {%r550, %r549};
	shf.l.wrap.b32 	%r551, %r547, %r548, 3;
	shf.l.wrap.b32 	%r552, %r548, %r547, 3;
	mov.b64 	%rd475, {%r552, %r551};
	shr.u64 	%rd476, %rd461, 6;
	xor.b64  	%rd477, %rd474, %rd476;
	xor.b64  	%rd478, %rd477, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd25;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd25;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 1;
	shf.r.wrap.b32 	%r556, %r553, %r554, 1;
	mov.b64 	%rd479, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 8;
	shf.r.wrap.b32 	%r558, %r553, %r554, 8;
	mov.b64 	%rd480, {%r558, %r557};
	shr.u64 	%rd481, %rd25, 7;
	xor.b64  	%rd482, %rd479, %rd481;
	xor.b64  	%rd483, %rd482, %rd480;
	add.s64 	%rd484, %rd22, %rd478;
	add.s64 	%rd485, %rd484, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd473;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 19;
	shf.r.wrap.b32 	%r562, %r559, %r560, 19;
	mov.b64 	%rd486, {%r562, %r561};
	shf.l.wrap.b32 	%r563, %r559, %r560, 3;
	shf.l.wrap.b32 	%r564, %r560, %r559, 3;
	mov.b64 	%rd487, {%r564, %r563};
	shr.u64 	%rd488, %rd473, 6;
	xor.b64  	%rd489, %rd486, %rd488;
	xor.b64  	%rd490, %rd489, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd28;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r566}, %rd28;
	}
	shf.r.wrap.b32 	%r567, %r566, %r565, 1;
	shf.r.wrap.b32 	%r568, %r565, %r566, 1;
	mov.b64 	%rd491, {%r568, %r567};
	shf.r.wrap.b32 	%r569, %r566, %r565, 8;
	shf.r.wrap.b32 	%r570, %r565, %r566, 8;
	mov.b64 	%rd492, {%r570, %r569};
	shr.u64 	%rd493, %rd28, 7;
	xor.b64  	%rd494, %rd491, %rd493;
	xor.b64  	%rd495, %rd494, %rd492;
	add.s64 	%rd496, %rd25, %rd490;
	add.s64 	%rd497, %rd496, %rd495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r571,%dummy}, %rd485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd485;
	}
	shf.r.wrap.b32 	%r573, %r572, %r571, 19;
	shf.r.wrap.b32 	%r574, %r571, %r572, 19;
	mov.b64 	%rd498, {%r574, %r573};
	shf.l.wrap.b32 	%r575, %r571, %r572, 3;
	shf.l.wrap.b32 	%r576, %r572, %r571, 3;
	mov.b64 	%rd499, {%r576, %r575};
	shr.u64 	%rd500, %rd485, 6;
	xor.b64  	%rd501, %rd498, %rd500;
	xor.b64  	%rd502, %rd501, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd31;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd31;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 1;
	shf.r.wrap.b32 	%r580, %r577, %r578, 1;
	mov.b64 	%rd503, {%r580, %r579};
	shf.r.wrap.b32 	%r581, %r578, %r577, 8;
	shf.r.wrap.b32 	%r582, %r577, %r578, 8;
	mov.b64 	%rd504, {%r582, %r581};
	shr.u64 	%rd505, %rd31, 7;
	xor.b64  	%rd506, %rd503, %rd505;
	xor.b64  	%rd507, %rd506, %rd504;
	add.s64 	%rd508, %rd38, %rd28;
	add.s64 	%rd509, %rd508, %rd502;
	add.s64 	%rd510, %rd509, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd497;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 19;
	shf.r.wrap.b32 	%r586, %r583, %r584, 19;
	mov.b64 	%rd511, {%r586, %r585};
	shf.l.wrap.b32 	%r587, %r583, %r584, 3;
	shf.l.wrap.b32 	%r588, %r584, %r583, 3;
	mov.b64 	%rd512, {%r588, %r587};
	shr.u64 	%rd513, %rd497, 6;
	xor.b64  	%rd514, %rd511, %rd513;
	xor.b64  	%rd515, %rd514, %rd512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd34;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd34;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 1;
	shf.r.wrap.b32 	%r592, %r589, %r590, 1;
	mov.b64 	%rd516, {%r592, %r591};
	shf.r.wrap.b32 	%r593, %r590, %r589, 8;
	shf.r.wrap.b32 	%r594, %r589, %r590, 8;
	mov.b64 	%rd517, {%r594, %r593};
	shr.u64 	%rd518, %rd34, 7;
	xor.b64  	%rd519, %rd516, %rd518;
	xor.b64  	%rd520, %rd519, %rd517;
	add.s64 	%rd521, %rd437, %rd31;
	add.s64 	%rd522, %rd521, %rd515;
	add.s64 	%rd523, %rd522, %rd520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd510;
	}
	shf.r.wrap.b32 	%r597, %r596, %r595, 19;
	shf.r.wrap.b32 	%r598, %r595, %r596, 19;
	mov.b64 	%rd524, {%r598, %r597};
	shf.l.wrap.b32 	%r599, %r595, %r596, 3;
	shf.l.wrap.b32 	%r600, %r596, %r595, 3;
	mov.b64 	%rd525, {%r600, %r599};
	shr.u64 	%rd526, %rd510, 6;
	xor.b64  	%rd527, %rd524, %rd526;
	xor.b64  	%rd528, %rd527, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd37;
	}
	shf.r.wrap.b32 	%r603, %r602, %r601, 1;
	shf.r.wrap.b32 	%r604, %r601, %r602, 1;
	mov.b64 	%rd529, {%r604, %r603};
	shf.r.wrap.b32 	%r605, %r602, %r601, 8;
	shf.r.wrap.b32 	%r606, %r601, %r602, 8;
	mov.b64 	%rd530, {%r606, %r605};
	shr.u64 	%rd531, %rd37, 7;
	xor.b64  	%rd532, %rd529, %rd531;
	xor.b64  	%rd533, %rd532, %rd530;
	add.s64 	%rd534, %rd449, %rd34;
	add.s64 	%rd535, %rd534, %rd528;
	add.s64 	%rd536, %rd535, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd523;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 19;
	shf.r.wrap.b32 	%r610, %r607, %r608, 19;
	mov.b64 	%rd537, {%r610, %r609};
	shf.l.wrap.b32 	%r611, %r607, %r608, 3;
	shf.l.wrap.b32 	%r612, %r608, %r607, 3;
	mov.b64 	%rd538, {%r612, %r611};
	shr.u64 	%rd539, %rd523, 6;
	xor.b64  	%rd540, %rd537, %rd539;
	xor.b64  	%rd541, %rd540, %rd538;
	shf.r.wrap.b32 	%r613, %r499, %r500, 8;
	shf.r.wrap.b32 	%r614, %r500, %r499, 8;
	mov.b64 	%rd542, {%r614, %r613};
	shf.r.wrap.b32 	%r615, %r499, %r500, 1;
	shf.r.wrap.b32 	%r616, %r500, %r499, 1;
	mov.b64 	%rd543, {%r616, %r615};
	xor.b64  	%rd544, %rd543, %rd542;
	add.s64 	%rd545, %rd461, %rd37;
	add.s64 	%rd546, %rd545, %rd541;
	add.s64 	%rd547, %rd546, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd536;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 19;
	shf.r.wrap.b32 	%r620, %r617, %r618, 19;
	mov.b64 	%rd548, {%r620, %r619};
	shf.l.wrap.b32 	%r621, %r617, %r618, 3;
	shf.l.wrap.b32 	%r622, %r618, %r617, 3;
	mov.b64 	%rd549, {%r622, %r621};
	shr.u64 	%rd550, %rd536, 6;
	xor.b64  	%rd551, %rd548, %rd550;
	xor.b64  	%rd552, %rd551, %rd549;
	add.s64 	%rd553, %rd473, %rd552;
	add.s64 	%rd554, %rd553, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd547;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 19;
	shf.r.wrap.b32 	%r626, %r623, %r624, 19;
	mov.b64 	%rd555, {%r626, %r625};
	shf.l.wrap.b32 	%r627, %r623, %r624, 3;
	shf.l.wrap.b32 	%r628, %r624, %r623, 3;
	mov.b64 	%rd556, {%r628, %r627};
	shr.u64 	%rd557, %rd547, 6;
	xor.b64  	%rd558, %rd555, %rd557;
	xor.b64  	%rd559, %rd558, %rd556;
	add.s64 	%rd560, %rd485, %rd559;
	add.s64 	%rd561, %rd560, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r629,%dummy}, %rd554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r630}, %rd554;
	}
	shf.r.wrap.b32 	%r631, %r630, %r629, 19;
	shf.r.wrap.b32 	%r632, %r629, %r630, 19;
	mov.b64 	%rd562, {%r632, %r631};
	shf.l.wrap.b32 	%r633, %r629, %r630, 3;
	shf.l.wrap.b32 	%r634, %r630, %r629, 3;
	mov.b64 	%rd563, {%r634, %r633};
	shr.u64 	%rd564, %rd554, 6;
	xor.b64  	%rd565, %rd562, %rd564;
	xor.b64  	%rd566, %rd565, %rd563;
	add.s64 	%rd567, %rd497, %rd566;
	add.s64 	%rd568, %rd567, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd561;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 19;
	shf.r.wrap.b32 	%r638, %r635, %r636, 19;
	mov.b64 	%rd569, {%r638, %r637};
	shf.l.wrap.b32 	%r639, %r635, %r636, 3;
	shf.l.wrap.b32 	%r640, %r636, %r635, 3;
	mov.b64 	%rd570, {%r640, %r639};
	shr.u64 	%rd571, %rd561, 6;
	xor.b64  	%rd572, %rd569, %rd571;
	xor.b64  	%rd573, %rd572, %rd570;
	add.s64 	%rd574, %rd510, %rd573;
	add.s64 	%rd575, %rd574, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd568;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 19;
	shf.r.wrap.b32 	%r644, %r641, %r642, 19;
	mov.b64 	%rd576, {%r644, %r643};
	shf.l.wrap.b32 	%r645, %r641, %r642, 3;
	shf.l.wrap.b32 	%r646, %r642, %r641, 3;
	mov.b64 	%rd577, {%r646, %r645};
	shr.u64 	%rd578, %rd568, 6;
	xor.b64  	%rd579, %rd576, %rd578;
	xor.b64  	%rd580, %rd579, %rd577;
	shf.r.wrap.b32 	%r647, %r512, %r511, 1;
	shf.r.wrap.b32 	%r648, %r511, %r512, 1;
	mov.b64 	%rd581, {%r648, %r647};
	shf.r.wrap.b32 	%r649, %r512, %r511, 8;
	shf.r.wrap.b32 	%r650, %r511, %r512, 8;
	mov.b64 	%rd582, {%r650, %r649};
	shr.u64 	%rd583, %rd38, 7;
	xor.b64  	%rd584, %rd581, %rd583;
	xor.b64  	%rd585, %rd584, %rd582;
	add.s64 	%rd586, %rd523, %rd580;
	add.s64 	%rd587, %rd586, %rd585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r651,%dummy}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r652}, %rd575;
	}
	shf.r.wrap.b32 	%r653, %r652, %r651, 19;
	shf.r.wrap.b32 	%r654, %r651, %r652, 19;
	mov.b64 	%rd588, {%r654, %r653};
	shf.l.wrap.b32 	%r655, %r651, %r652, 3;
	shf.l.wrap.b32 	%r656, %r652, %r651, 3;
	mov.b64 	%rd589, {%r656, %r655};
	shr.u64 	%rd590, %rd575, 6;
	xor.b64  	%rd591, %rd588, %rd590;
	xor.b64  	%rd592, %rd591, %rd589;
	shf.r.wrap.b32 	%r657, %r524, %r523, 1;
	shf.r.wrap.b32 	%r658, %r523, %r524, 1;
	mov.b64 	%rd593, {%r658, %r657};
	shf.r.wrap.b32 	%r659, %r524, %r523, 8;
	shf.r.wrap.b32 	%r660, %r523, %r524, 8;
	mov.b64 	%rd594, {%r660, %r659};
	shr.u64 	%rd595, %rd437, 7;
	xor.b64  	%rd596, %rd593, %rd595;
	xor.b64  	%rd597, %rd596, %rd594;
	add.s64 	%rd598, %rd536, %rd38;
	add.s64 	%rd599, %rd598, %rd592;
	add.s64 	%rd600, %rd599, %rd597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r661,%dummy}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r662}, %rd414;
	}
	shf.r.wrap.b32 	%r663, %r662, %r661, 14;
	shf.r.wrap.b32 	%r664, %r661, %r662, 14;
	mov.b64 	%rd601, {%r664, %r663};
	shf.r.wrap.b32 	%r665, %r662, %r661, 18;
	shf.r.wrap.b32 	%r666, %r661, %r662, 18;
	mov.b64 	%rd602, {%r666, %r665};
	xor.b64  	%rd603, %rd602, %rd601;
	shf.l.wrap.b32 	%r667, %r661, %r662, 23;
	shf.l.wrap.b32 	%r668, %r662, %r661, 23;
	mov.b64 	%rd604, {%r668, %r667};
	xor.b64  	%rd605, %rd603, %rd604;
	xor.b64  	%rd606, %rd389, %rd365;
	and.b64  	%rd607, %rd606, %rd414;
	xor.b64  	%rd608, %rd607, %rd365;
	add.s64 	%rd609, %rd608, %rd341;
	add.s64 	%rd610, %rd609, %rd437;
	ld.const.u64 	%rd611, [k_sha512+128];
	add.s64 	%rd612, %rd610, %rd611;
	add.s64 	%rd613, %rd612, %rd605;
	add.s64 	%rd614, %rd613, %rd352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r670}, %rd425;
	}
	shf.r.wrap.b32 	%r671, %r670, %r669, 28;
	shf.r.wrap.b32 	%r672, %r669, %r670, 28;
	mov.b64 	%rd615, {%r672, %r671};
	shf.l.wrap.b32 	%r673, %r669, %r670, 30;
	shf.l.wrap.b32 	%r674, %r670, %r669, 30;
	mov.b64 	%rd616, {%r674, %r673};
	xor.b64  	%rd617, %rd616, %rd615;
	shf.l.wrap.b32 	%r675, %r669, %r670, 25;
	shf.l.wrap.b32 	%r676, %r670, %r669, 25;
	mov.b64 	%rd618, {%r676, %r675};
	xor.b64  	%rd619, %rd617, %rd618;
	xor.b64  	%rd620, %rd425, %rd376;
	xor.b64  	%rd621, %rd425, %rd400;
	and.b64  	%rd622, %rd621, %rd620;
	xor.b64  	%rd623, %rd622, %rd425;
	add.s64 	%rd624, %rd613, %rd623;
	add.s64 	%rd625, %rd624, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd614;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 14;
	shf.r.wrap.b32 	%r680, %r677, %r678, 14;
	mov.b64 	%rd626, {%r680, %r679};
	shf.r.wrap.b32 	%r681, %r678, %r677, 18;
	shf.r.wrap.b32 	%r682, %r677, %r678, 18;
	mov.b64 	%rd627, {%r682, %r681};
	xor.b64  	%rd628, %rd627, %rd626;
	shf.l.wrap.b32 	%r683, %r677, %r678, 23;
	shf.l.wrap.b32 	%r684, %r678, %r677, 23;
	mov.b64 	%rd629, {%r684, %r683};
	xor.b64  	%rd630, %rd628, %rd629;
	xor.b64  	%rd631, %rd414, %rd389;
	and.b64  	%rd632, %rd614, %rd631;
	xor.b64  	%rd633, %rd632, %rd389;
	add.s64 	%rd634, %rd449, %rd365;
	ld.const.u64 	%rd635, [k_sha512+136];
	add.s64 	%rd636, %rd634, %rd635;
	add.s64 	%rd637, %rd636, %rd633;
	add.s64 	%rd638, %rd637, %rd630;
	add.s64 	%rd639, %rd638, %rd376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r685,%dummy}, %rd625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r686}, %rd625;
	}
	shf.r.wrap.b32 	%r687, %r686, %r685, 28;
	shf.r.wrap.b32 	%r688, %r685, %r686, 28;
	mov.b64 	%rd640, {%r688, %r687};
	shf.l.wrap.b32 	%r689, %r685, %r686, 30;
	shf.l.wrap.b32 	%r690, %r686, %r685, 30;
	mov.b64 	%rd641, {%r690, %r689};
	xor.b64  	%rd642, %rd641, %rd640;
	shf.l.wrap.b32 	%r691, %r685, %r686, 25;
	shf.l.wrap.b32 	%r692, %r686, %r685, 25;
	mov.b64 	%rd643, {%r692, %r691};
	xor.b64  	%rd644, %rd642, %rd643;
	xor.b64  	%rd645, %rd625, %rd400;
	xor.b64  	%rd646, %rd625, %rd425;
	and.b64  	%rd647, %rd646, %rd645;
	xor.b64  	%rd648, %rd647, %rd625;
	add.s64 	%rd649, %rd638, %rd648;
	add.s64 	%rd650, %rd649, %rd644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r694}, %rd639;
	}
	shf.r.wrap.b32 	%r695, %r694, %r693, 14;
	shf.r.wrap.b32 	%r696, %r693, %r694, 14;
	mov.b64 	%rd651, {%r696, %r695};
	shf.r.wrap.b32 	%r697, %r694, %r693, 18;
	shf.r.wrap.b32 	%r698, %r693, %r694, 18;
	mov.b64 	%rd652, {%r698, %r697};
	xor.b64  	%rd653, %rd652, %rd651;
	shf.l.wrap.b32 	%r699, %r693, %r694, 23;
	shf.l.wrap.b32 	%r700, %r694, %r693, 23;
	mov.b64 	%rd654, {%r700, %r699};
	xor.b64  	%rd655, %rd653, %rd654;
	xor.b64  	%rd656, %rd614, %rd414;
	and.b64  	%rd657, %rd639, %rd656;
	xor.b64  	%rd658, %rd657, %rd414;
	add.s64 	%rd659, %rd461, %rd389;
	ld.const.u64 	%rd660, [k_sha512+144];
	add.s64 	%rd661, %rd659, %rd660;
	add.s64 	%rd662, %rd661, %rd658;
	add.s64 	%rd663, %rd662, %rd655;
	add.s64 	%rd664, %rd663, %rd400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd650;
	}
	shf.r.wrap.b32 	%r703, %r702, %r701, 28;
	shf.r.wrap.b32 	%r704, %r701, %r702, 28;
	mov.b64 	%rd665, {%r704, %r703};
	shf.l.wrap.b32 	%r705, %r701, %r702, 30;
	shf.l.wrap.b32 	%r706, %r702, %r701, 30;
	mov.b64 	%rd666, {%r706, %r705};
	xor.b64  	%rd667, %rd666, %rd665;
	shf.l.wrap.b32 	%r707, %r701, %r702, 25;
	shf.l.wrap.b32 	%r708, %r702, %r701, 25;
	mov.b64 	%rd668, {%r708, %r707};
	xor.b64  	%rd669, %rd667, %rd668;
	xor.b64  	%rd670, %rd650, %rd425;
	xor.b64  	%rd671, %rd650, %rd625;
	and.b64  	%rd672, %rd671, %rd670;
	xor.b64  	%rd673, %rd672, %rd650;
	add.s64 	%rd674, %rd663, %rd673;
	add.s64 	%rd675, %rd674, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd664;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 14;
	shf.r.wrap.b32 	%r712, %r709, %r710, 14;
	mov.b64 	%rd676, {%r712, %r711};
	shf.r.wrap.b32 	%r713, %r710, %r709, 18;
	shf.r.wrap.b32 	%r714, %r709, %r710, 18;
	mov.b64 	%rd677, {%r714, %r713};
	xor.b64  	%rd678, %rd677, %rd676;
	shf.l.wrap.b32 	%r715, %r709, %r710, 23;
	shf.l.wrap.b32 	%r716, %r710, %r709, 23;
	mov.b64 	%rd679, {%r716, %r715};
	xor.b64  	%rd680, %rd678, %rd679;
	xor.b64  	%rd681, %rd639, %rd614;
	and.b64  	%rd682, %rd664, %rd681;
	xor.b64  	%rd683, %rd682, %rd614;
	add.s64 	%rd684, %rd473, %rd414;
	ld.const.u64 	%rd685, [k_sha512+152];
	add.s64 	%rd686, %rd684, %rd685;
	add.s64 	%rd687, %rd686, %rd683;
	add.s64 	%rd688, %rd687, %rd680;
	add.s64 	%rd689, %rd688, %rd425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r717,%dummy}, %rd675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r718}, %rd675;
	}
	shf.r.wrap.b32 	%r719, %r718, %r717, 28;
	shf.r.wrap.b32 	%r720, %r717, %r718, 28;
	mov.b64 	%rd690, {%r720, %r719};
	shf.l.wrap.b32 	%r721, %r717, %r718, 30;
	shf.l.wrap.b32 	%r722, %r718, %r717, 30;
	mov.b64 	%rd691, {%r722, %r721};
	xor.b64  	%rd692, %rd691, %rd690;
	shf.l.wrap.b32 	%r723, %r717, %r718, 25;
	shf.l.wrap.b32 	%r724, %r718, %r717, 25;
	mov.b64 	%rd693, {%r724, %r723};
	xor.b64  	%rd694, %rd692, %rd693;
	xor.b64  	%rd695, %rd675, %rd625;
	xor.b64  	%rd696, %rd675, %rd650;
	and.b64  	%rd697, %rd696, %rd695;
	xor.b64  	%rd698, %rd697, %rd675;
	add.s64 	%rd699, %rd688, %rd698;
	add.s64 	%rd700, %rd699, %rd694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r725,%dummy}, %rd689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r726}, %rd689;
	}
	shf.r.wrap.b32 	%r727, %r726, %r725, 14;
	shf.r.wrap.b32 	%r728, %r725, %r726, 14;
	mov.b64 	%rd701, {%r728, %r727};
	shf.r.wrap.b32 	%r729, %r726, %r725, 18;
	shf.r.wrap.b32 	%r730, %r725, %r726, 18;
	mov.b64 	%rd702, {%r730, %r729};
	xor.b64  	%rd703, %rd702, %rd701;
	shf.l.wrap.b32 	%r731, %r725, %r726, 23;
	shf.l.wrap.b32 	%r732, %r726, %r725, 23;
	mov.b64 	%rd704, {%r732, %r731};
	xor.b64  	%rd705, %rd703, %rd704;
	xor.b64  	%rd706, %rd664, %rd639;
	and.b64  	%rd707, %rd689, %rd706;
	xor.b64  	%rd708, %rd707, %rd639;
	add.s64 	%rd709, %rd614, %rd485;
	ld.const.u64 	%rd710, [k_sha512+160];
	add.s64 	%rd711, %rd709, %rd710;
	add.s64 	%rd712, %rd711, %rd708;
	add.s64 	%rd713, %rd712, %rd705;
	add.s64 	%rd714, %rd713, %rd625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r733,%dummy}, %rd700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r734}, %rd700;
	}
	shf.r.wrap.b32 	%r735, %r734, %r733, 28;
	shf.r.wrap.b32 	%r736, %r733, %r734, 28;
	mov.b64 	%rd715, {%r736, %r735};
	shf.l.wrap.b32 	%r737, %r733, %r734, 30;
	shf.l.wrap.b32 	%r738, %r734, %r733, 30;
	mov.b64 	%rd716, {%r738, %r737};
	xor.b64  	%rd717, %rd716, %rd715;
	shf.l.wrap.b32 	%r739, %r733, %r734, 25;
	shf.l.wrap.b32 	%r740, %r734, %r733, 25;
	mov.b64 	%rd718, {%r740, %r739};
	xor.b64  	%rd719, %rd717, %rd718;
	xor.b64  	%rd720, %rd700, %rd650;
	xor.b64  	%rd721, %rd700, %rd675;
	and.b64  	%rd722, %rd721, %rd720;
	xor.b64  	%rd723, %rd722, %rd700;
	add.s64 	%rd724, %rd713, %rd723;
	add.s64 	%rd725, %rd724, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r741,%dummy}, %rd714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r742}, %rd714;
	}
	shf.r.wrap.b32 	%r743, %r742, %r741, 14;
	shf.r.wrap.b32 	%r744, %r741, %r742, 14;
	mov.b64 	%rd726, {%r744, %r743};
	shf.r.wrap.b32 	%r745, %r742, %r741, 18;
	shf.r.wrap.b32 	%r746, %r741, %r742, 18;
	mov.b64 	%rd727, {%r746, %r745};
	xor.b64  	%rd728, %rd727, %rd726;
	shf.l.wrap.b32 	%r747, %r741, %r742, 23;
	shf.l.wrap.b32 	%r748, %r742, %r741, 23;
	mov.b64 	%rd729, {%r748, %r747};
	xor.b64  	%rd730, %rd728, %rd729;
	xor.b64  	%rd731, %rd689, %rd664;
	and.b64  	%rd732, %rd714, %rd731;
	xor.b64  	%rd733, %rd732, %rd664;
	add.s64 	%rd734, %rd639, %rd497;
	ld.const.u64 	%rd735, [k_sha512+168];
	add.s64 	%rd736, %rd734, %rd735;
	add.s64 	%rd737, %rd736, %rd733;
	add.s64 	%rd738, %rd737, %rd730;
	add.s64 	%rd739, %rd738, %rd650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd725;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 28;
	shf.r.wrap.b32 	%r752, %r749, %r750, 28;
	mov.b64 	%rd740, {%r752, %r751};
	shf.l.wrap.b32 	%r753, %r749, %r750, 30;
	shf.l.wrap.b32 	%r754, %r750, %r749, 30;
	mov.b64 	%rd741, {%r754, %r753};
	xor.b64  	%rd742, %rd741, %rd740;
	shf.l.wrap.b32 	%r755, %r749, %r750, 25;
	shf.l.wrap.b32 	%r756, %r750, %r749, 25;
	mov.b64 	%rd743, {%r756, %r755};
	xor.b64  	%rd744, %rd742, %rd743;
	xor.b64  	%rd745, %rd725, %rd675;
	xor.b64  	%rd746, %rd725, %rd700;
	and.b64  	%rd747, %rd746, %rd745;
	xor.b64  	%rd748, %rd747, %rd725;
	add.s64 	%rd749, %rd738, %rd748;
	add.s64 	%rd750, %rd749, %rd744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd739;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 14;
	shf.r.wrap.b32 	%r760, %r757, %r758, 14;
	mov.b64 	%rd751, {%r760, %r759};
	shf.r.wrap.b32 	%r761, %r758, %r757, 18;
	shf.r.wrap.b32 	%r762, %r757, %r758, 18;
	mov.b64 	%rd752, {%r762, %r761};
	xor.b64  	%rd753, %rd752, %rd751;
	shf.l.wrap.b32 	%r763, %r757, %r758, 23;
	shf.l.wrap.b32 	%r764, %r758, %r757, 23;
	mov.b64 	%rd754, {%r764, %r763};
	xor.b64  	%rd755, %rd753, %rd754;
	xor.b64  	%rd756, %rd714, %rd689;
	and.b64  	%rd757, %rd739, %rd756;
	xor.b64  	%rd758, %rd757, %rd689;
	add.s64 	%rd759, %rd664, %rd510;
	ld.const.u64 	%rd760, [k_sha512+176];
	add.s64 	%rd761, %rd759, %rd760;
	add.s64 	%rd762, %rd761, %rd758;
	add.s64 	%rd763, %rd762, %rd755;
	add.s64 	%rd764, %rd763, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r765,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r766}, %rd750;
	}
	shf.r.wrap.b32 	%r767, %r766, %r765, 28;
	shf.r.wrap.b32 	%r768, %r765, %r766, 28;
	mov.b64 	%rd765, {%r768, %r767};
	shf.l.wrap.b32 	%r769, %r765, %r766, 30;
	shf.l.wrap.b32 	%r770, %r766, %r765, 30;
	mov.b64 	%rd766, {%r770, %r769};
	xor.b64  	%rd767, %rd766, %rd765;
	shf.l.wrap.b32 	%r771, %r765, %r766, 25;
	shf.l.wrap.b32 	%r772, %r766, %r765, 25;
	mov.b64 	%rd768, {%r772, %r771};
	xor.b64  	%rd769, %rd767, %rd768;
	xor.b64  	%rd770, %rd750, %rd700;
	xor.b64  	%rd771, %rd750, %rd725;
	and.b64  	%rd772, %rd771, %rd770;
	xor.b64  	%rd773, %rd772, %rd750;
	add.s64 	%rd774, %rd763, %rd773;
	add.s64 	%rd775, %rd774, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r774}, %rd764;
	}
	shf.r.wrap.b32 	%r775, %r774, %r773, 14;
	shf.r.wrap.b32 	%r776, %r773, %r774, 14;
	mov.b64 	%rd776, {%r776, %r775};
	shf.r.wrap.b32 	%r777, %r774, %r773, 18;
	shf.r.wrap.b32 	%r778, %r773, %r774, 18;
	mov.b64 	%rd777, {%r778, %r777};
	xor.b64  	%rd778, %rd777, %rd776;
	shf.l.wrap.b32 	%r779, %r773, %r774, 23;
	shf.l.wrap.b32 	%r780, %r774, %r773, 23;
	mov.b64 	%rd779, {%r780, %r779};
	xor.b64  	%rd780, %rd778, %rd779;
	xor.b64  	%rd781, %rd739, %rd714;
	and.b64  	%rd782, %rd764, %rd781;
	xor.b64  	%rd783, %rd782, %rd714;
	add.s64 	%rd784, %rd689, %rd523;
	ld.const.u64 	%rd785, [k_sha512+184];
	add.s64 	%rd786, %rd784, %rd785;
	add.s64 	%rd787, %rd786, %rd783;
	add.s64 	%rd788, %rd787, %rd780;
	add.s64 	%rd789, %rd788, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r781,%dummy}, %rd775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r782}, %rd775;
	}
	shf.r.wrap.b32 	%r783, %r782, %r781, 28;
	shf.r.wrap.b32 	%r784, %r781, %r782, 28;
	mov.b64 	%rd790, {%r784, %r783};
	shf.l.wrap.b32 	%r785, %r781, %r782, 30;
	shf.l.wrap.b32 	%r786, %r782, %r781, 30;
	mov.b64 	%rd791, {%r786, %r785};
	xor.b64  	%rd792, %rd791, %rd790;
	shf.l.wrap.b32 	%r787, %r781, %r782, 25;
	shf.l.wrap.b32 	%r788, %r782, %r781, 25;
	mov.b64 	%rd793, {%r788, %r787};
	xor.b64  	%rd794, %rd792, %rd793;
	xor.b64  	%rd795, %rd775, %rd725;
	xor.b64  	%rd796, %rd775, %rd750;
	and.b64  	%rd797, %rd796, %rd795;
	xor.b64  	%rd798, %rd797, %rd775;
	add.s64 	%rd799, %rd788, %rd798;
	add.s64 	%rd800, %rd799, %rd794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r789,%dummy}, %rd789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r790}, %rd789;
	}
	shf.r.wrap.b32 	%r791, %r790, %r789, 14;
	shf.r.wrap.b32 	%r792, %r789, %r790, 14;
	mov.b64 	%rd801, {%r792, %r791};
	shf.r.wrap.b32 	%r793, %r790, %r789, 18;
	shf.r.wrap.b32 	%r794, %r789, %r790, 18;
	mov.b64 	%rd802, {%r794, %r793};
	xor.b64  	%rd803, %rd802, %rd801;
	shf.l.wrap.b32 	%r795, %r789, %r790, 23;
	shf.l.wrap.b32 	%r796, %r790, %r789, 23;
	mov.b64 	%rd804, {%r796, %r795};
	xor.b64  	%rd805, %rd803, %rd804;
	xor.b64  	%rd806, %rd764, %rd739;
	and.b64  	%rd807, %rd789, %rd806;
	xor.b64  	%rd808, %rd807, %rd739;
	add.s64 	%rd809, %rd714, %rd536;
	ld.const.u64 	%rd810, [k_sha512+192];
	add.s64 	%rd811, %rd809, %rd810;
	add.s64 	%rd812, %rd811, %rd808;
	add.s64 	%rd813, %rd812, %rd805;
	add.s64 	%rd814, %rd813, %rd725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r798}, %rd800;
	}
	shf.r.wrap.b32 	%r799, %r798, %r797, 28;
	shf.r.wrap.b32 	%r800, %r797, %r798, 28;
	mov.b64 	%rd815, {%r800, %r799};
	shf.l.wrap.b32 	%r801, %r797, %r798, 30;
	shf.l.wrap.b32 	%r802, %r798, %r797, 30;
	mov.b64 	%rd816, {%r802, %r801};
	xor.b64  	%rd817, %rd816, %rd815;
	shf.l.wrap.b32 	%r803, %r797, %r798, 25;
	shf.l.wrap.b32 	%r804, %r798, %r797, 25;
	mov.b64 	%rd818, {%r804, %r803};
	xor.b64  	%rd819, %rd817, %rd818;
	xor.b64  	%rd820, %rd800, %rd750;
	xor.b64  	%rd821, %rd800, %rd775;
	and.b64  	%rd822, %rd821, %rd820;
	xor.b64  	%rd823, %rd822, %rd800;
	add.s64 	%rd824, %rd813, %rd823;
	add.s64 	%rd825, %rd824, %rd819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r805,%dummy}, %rd814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r806}, %rd814;
	}
	shf.r.wrap.b32 	%r807, %r806, %r805, 14;
	shf.r.wrap.b32 	%r808, %r805, %r806, 14;
	mov.b64 	%rd826, {%r808, %r807};
	shf.r.wrap.b32 	%r809, %r806, %r805, 18;
	shf.r.wrap.b32 	%r810, %r805, %r806, 18;
	mov.b64 	%rd827, {%r810, %r809};
	xor.b64  	%rd828, %rd827, %rd826;
	shf.l.wrap.b32 	%r811, %r805, %r806, 23;
	shf.l.wrap.b32 	%r812, %r806, %r805, 23;
	mov.b64 	%rd829, {%r812, %r811};
	xor.b64  	%rd830, %rd828, %rd829;
	xor.b64  	%rd831, %rd789, %rd764;
	and.b64  	%rd832, %rd814, %rd831;
	xor.b64  	%rd833, %rd832, %rd764;
	add.s64 	%rd834, %rd739, %rd547;
	ld.const.u64 	%rd835, [k_sha512+200];
	add.s64 	%rd836, %rd834, %rd835;
	add.s64 	%rd837, %rd836, %rd833;
	add.s64 	%rd838, %rd837, %rd830;
	add.s64 	%rd839, %rd838, %rd750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r813,%dummy}, %rd825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r814}, %rd825;
	}
	shf.r.wrap.b32 	%r815, %r814, %r813, 28;
	shf.r.wrap.b32 	%r816, %r813, %r814, 28;
	mov.b64 	%rd840, {%r816, %r815};
	shf.l.wrap.b32 	%r817, %r813, %r814, 30;
	shf.l.wrap.b32 	%r818, %r814, %r813, 30;
	mov.b64 	%rd841, {%r818, %r817};
	xor.b64  	%rd842, %rd841, %rd840;
	shf.l.wrap.b32 	%r819, %r813, %r814, 25;
	shf.l.wrap.b32 	%r820, %r814, %r813, 25;
	mov.b64 	%rd843, {%r820, %r819};
	xor.b64  	%rd844, %rd842, %rd843;
	xor.b64  	%rd845, %rd825, %rd775;
	xor.b64  	%rd846, %rd825, %rd800;
	and.b64  	%rd847, %rd846, %rd845;
	xor.b64  	%rd848, %rd847, %rd825;
	add.s64 	%rd849, %rd838, %rd848;
	add.s64 	%rd850, %rd849, %rd844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r821,%dummy}, %rd839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r822}, %rd839;
	}
	shf.r.wrap.b32 	%r823, %r822, %r821, 14;
	shf.r.wrap.b32 	%r824, %r821, %r822, 14;
	mov.b64 	%rd851, {%r824, %r823};
	shf.r.wrap.b32 	%r825, %r822, %r821, 18;
	shf.r.wrap.b32 	%r826, %r821, %r822, 18;
	mov.b64 	%rd852, {%r826, %r825};
	xor.b64  	%rd853, %rd852, %rd851;
	shf.l.wrap.b32 	%r827, %r821, %r822, 23;
	shf.l.wrap.b32 	%r828, %r822, %r821, 23;
	mov.b64 	%rd854, {%r828, %r827};
	xor.b64  	%rd855, %rd853, %rd854;
	xor.b64  	%rd856, %rd814, %rd789;
	and.b64  	%rd857, %rd839, %rd856;
	xor.b64  	%rd858, %rd857, %rd789;
	add.s64 	%rd859, %rd764, %rd554;
	ld.const.u64 	%rd860, [k_sha512+208];
	add.s64 	%rd861, %rd859, %rd860;
	add.s64 	%rd862, %rd861, %rd858;
	add.s64 	%rd863, %rd862, %rd855;
	add.s64 	%rd864, %rd863, %rd775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd850;
	}
	shf.r.wrap.b32 	%r831, %r830, %r829, 28;
	shf.r.wrap.b32 	%r832, %r829, %r830, 28;
	mov.b64 	%rd865, {%r832, %r831};
	shf.l.wrap.b32 	%r833, %r829, %r830, 30;
	shf.l.wrap.b32 	%r834, %r830, %r829, 30;
	mov.b64 	%rd866, {%r834, %r833};
	xor.b64  	%rd867, %rd866, %rd865;
	shf.l.wrap.b32 	%r835, %r829, %r830, 25;
	shf.l.wrap.b32 	%r836, %r830, %r829, 25;
	mov.b64 	%rd868, {%r836, %r835};
	xor.b64  	%rd869, %rd867, %rd868;
	xor.b64  	%rd870, %rd850, %rd800;
	xor.b64  	%rd871, %rd850, %rd825;
	and.b64  	%rd872, %rd871, %rd870;
	xor.b64  	%rd873, %rd872, %rd850;
	add.s64 	%rd874, %rd863, %rd873;
	add.s64 	%rd875, %rd874, %rd869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd864;
	}
	shf.r.wrap.b32 	%r839, %r838, %r837, 14;
	shf.r.wrap.b32 	%r840, %r837, %r838, 14;
	mov.b64 	%rd876, {%r840, %r839};
	shf.r.wrap.b32 	%r841, %r838, %r837, 18;
	shf.r.wrap.b32 	%r842, %r837, %r838, 18;
	mov.b64 	%rd877, {%r842, %r841};
	xor.b64  	%rd878, %rd877, %rd876;
	shf.l.wrap.b32 	%r843, %r837, %r838, 23;
	shf.l.wrap.b32 	%r844, %r838, %r837, 23;
	mov.b64 	%rd879, {%r844, %r843};
	xor.b64  	%rd880, %rd878, %rd879;
	xor.b64  	%rd881, %rd839, %rd814;
	and.b64  	%rd882, %rd864, %rd881;
	xor.b64  	%rd883, %rd882, %rd814;
	add.s64 	%rd884, %rd789, %rd561;
	ld.const.u64 	%rd885, [k_sha512+216];
	add.s64 	%rd886, %rd884, %rd885;
	add.s64 	%rd887, %rd886, %rd883;
	add.s64 	%rd888, %rd887, %rd880;
	add.s64 	%rd889, %rd888, %rd800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r846}, %rd875;
	}
	shf.r.wrap.b32 	%r847, %r846, %r845, 28;
	shf.r.wrap.b32 	%r848, %r845, %r846, 28;
	mov.b64 	%rd890, {%r848, %r847};
	shf.l.wrap.b32 	%r849, %r845, %r846, 30;
	shf.l.wrap.b32 	%r850, %r846, %r845, 30;
	mov.b64 	%rd891, {%r850, %r849};
	xor.b64  	%rd892, %rd891, %rd890;
	shf.l.wrap.b32 	%r851, %r845, %r846, 25;
	shf.l.wrap.b32 	%r852, %r846, %r845, 25;
	mov.b64 	%rd893, {%r852, %r851};
	xor.b64  	%rd894, %rd892, %rd893;
	xor.b64  	%rd895, %rd875, %rd825;
	xor.b64  	%rd896, %rd875, %rd850;
	and.b64  	%rd897, %rd896, %rd895;
	xor.b64  	%rd898, %rd897, %rd875;
	add.s64 	%rd899, %rd888, %rd898;
	add.s64 	%rd900, %rd899, %rd894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd889;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 14;
	shf.r.wrap.b32 	%r856, %r853, %r854, 14;
	mov.b64 	%rd901, {%r856, %r855};
	shf.r.wrap.b32 	%r857, %r854, %r853, 18;
	shf.r.wrap.b32 	%r858, %r853, %r854, 18;
	mov.b64 	%rd902, {%r858, %r857};
	xor.b64  	%rd903, %rd902, %rd901;
	shf.l.wrap.b32 	%r859, %r853, %r854, 23;
	shf.l.wrap.b32 	%r860, %r854, %r853, 23;
	mov.b64 	%rd904, {%r860, %r859};
	xor.b64  	%rd905, %rd903, %rd904;
	xor.b64  	%rd906, %rd864, %rd839;
	and.b64  	%rd907, %rd889, %rd906;
	xor.b64  	%rd908, %rd907, %rd839;
	add.s64 	%rd909, %rd814, %rd568;
	ld.const.u64 	%rd910, [k_sha512+224];
	add.s64 	%rd911, %rd909, %rd910;
	add.s64 	%rd912, %rd911, %rd908;
	add.s64 	%rd913, %rd912, %rd905;
	add.s64 	%rd914, %rd913, %rd825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd900;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 28;
	shf.r.wrap.b32 	%r864, %r861, %r862, 28;
	mov.b64 	%rd915, {%r864, %r863};
	shf.l.wrap.b32 	%r865, %r861, %r862, 30;
	shf.l.wrap.b32 	%r866, %r862, %r861, 30;
	mov.b64 	%rd916, {%r866, %r865};
	xor.b64  	%rd917, %rd916, %rd915;
	shf.l.wrap.b32 	%r867, %r861, %r862, 25;
	shf.l.wrap.b32 	%r868, %r862, %r861, 25;
	mov.b64 	%rd918, {%r868, %r867};
	xor.b64  	%rd919, %rd917, %rd918;
	xor.b64  	%rd920, %rd900, %rd850;
	xor.b64  	%rd921, %rd900, %rd875;
	and.b64  	%rd922, %rd921, %rd920;
	xor.b64  	%rd923, %rd922, %rd900;
	add.s64 	%rd924, %rd913, %rd923;
	add.s64 	%rd925, %rd924, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd914;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 14;
	shf.r.wrap.b32 	%r872, %r869, %r870, 14;
	mov.b64 	%rd926, {%r872, %r871};
	shf.r.wrap.b32 	%r873, %r870, %r869, 18;
	shf.r.wrap.b32 	%r874, %r869, %r870, 18;
	mov.b64 	%rd927, {%r874, %r873};
	xor.b64  	%rd928, %rd927, %rd926;
	shf.l.wrap.b32 	%r875, %r869, %r870, 23;
	shf.l.wrap.b32 	%r876, %r870, %r869, 23;
	mov.b64 	%rd929, {%r876, %r875};
	xor.b64  	%rd930, %rd928, %rd929;
	xor.b64  	%rd931, %rd889, %rd864;
	and.b64  	%rd932, %rd914, %rd931;
	xor.b64  	%rd933, %rd932, %rd864;
	add.s64 	%rd934, %rd839, %rd575;
	ld.const.u64 	%rd935, [k_sha512+232];
	add.s64 	%rd936, %rd934, %rd935;
	add.s64 	%rd937, %rd936, %rd933;
	add.s64 	%rd938, %rd937, %rd930;
	add.s64 	%rd939, %rd938, %rd850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd925;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 28;
	shf.r.wrap.b32 	%r880, %r877, %r878, 28;
	mov.b64 	%rd940, {%r880, %r879};
	shf.l.wrap.b32 	%r881, %r877, %r878, 30;
	shf.l.wrap.b32 	%r882, %r878, %r877, 30;
	mov.b64 	%rd941, {%r882, %r881};
	xor.b64  	%rd942, %rd941, %rd940;
	shf.l.wrap.b32 	%r883, %r877, %r878, 25;
	shf.l.wrap.b32 	%r884, %r878, %r877, 25;
	mov.b64 	%rd943, {%r884, %r883};
	xor.b64  	%rd944, %rd942, %rd943;
	xor.b64  	%rd945, %rd925, %rd875;
	xor.b64  	%rd946, %rd925, %rd900;
	and.b64  	%rd947, %rd946, %rd945;
	xor.b64  	%rd948, %rd947, %rd925;
	add.s64 	%rd949, %rd938, %rd948;
	add.s64 	%rd950, %rd949, %rd944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd939;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 14;
	shf.r.wrap.b32 	%r888, %r885, %r886, 14;
	mov.b64 	%rd951, {%r888, %r887};
	shf.r.wrap.b32 	%r889, %r886, %r885, 18;
	shf.r.wrap.b32 	%r890, %r885, %r886, 18;
	mov.b64 	%rd952, {%r890, %r889};
	xor.b64  	%rd953, %rd952, %rd951;
	shf.l.wrap.b32 	%r891, %r885, %r886, 23;
	shf.l.wrap.b32 	%r892, %r886, %r885, 23;
	mov.b64 	%rd954, {%r892, %r891};
	xor.b64  	%rd955, %rd953, %rd954;
	xor.b64  	%rd956, %rd914, %rd889;
	and.b64  	%rd957, %rd939, %rd956;
	xor.b64  	%rd958, %rd957, %rd889;
	add.s64 	%rd959, %rd864, %rd587;
	ld.const.u64 	%rd960, [k_sha512+240];
	add.s64 	%rd961, %rd959, %rd960;
	add.s64 	%rd962, %rd961, %rd958;
	add.s64 	%rd963, %rd962, %rd955;
	add.s64 	%rd964, %rd963, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r893,%dummy}, %rd950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r894}, %rd950;
	}
	shf.r.wrap.b32 	%r895, %r894, %r893, 28;
	shf.r.wrap.b32 	%r896, %r893, %r894, 28;
	mov.b64 	%rd965, {%r896, %r895};
	shf.l.wrap.b32 	%r897, %r893, %r894, 30;
	shf.l.wrap.b32 	%r898, %r894, %r893, 30;
	mov.b64 	%rd966, {%r898, %r897};
	xor.b64  	%rd967, %rd966, %rd965;
	shf.l.wrap.b32 	%r899, %r893, %r894, 25;
	shf.l.wrap.b32 	%r900, %r894, %r893, 25;
	mov.b64 	%rd968, {%r900, %r899};
	xor.b64  	%rd969, %rd967, %rd968;
	xor.b64  	%rd970, %rd950, %rd900;
	xor.b64  	%rd971, %rd950, %rd925;
	and.b64  	%rd972, %rd971, %rd970;
	xor.b64  	%rd973, %rd972, %rd950;
	add.s64 	%rd974, %rd963, %rd973;
	add.s64 	%rd975, %rd974, %rd969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r902}, %rd964;
	}
	shf.r.wrap.b32 	%r903, %r902, %r901, 14;
	shf.r.wrap.b32 	%r904, %r901, %r902, 14;
	mov.b64 	%rd976, {%r904, %r903};
	shf.r.wrap.b32 	%r905, %r902, %r901, 18;
	shf.r.wrap.b32 	%r906, %r901, %r902, 18;
	mov.b64 	%rd977, {%r906, %r905};
	xor.b64  	%rd978, %rd977, %rd976;
	shf.l.wrap.b32 	%r907, %r901, %r902, 23;
	shf.l.wrap.b32 	%r908, %r902, %r901, 23;
	mov.b64 	%rd979, {%r908, %r907};
	xor.b64  	%rd980, %rd978, %rd979;
	xor.b64  	%rd981, %rd939, %rd914;
	and.b64  	%rd982, %rd964, %rd981;
	xor.b64  	%rd983, %rd982, %rd914;
	add.s64 	%rd984, %rd889, %rd600;
	ld.const.u64 	%rd985, [k_sha512+248];
	add.s64 	%rd986, %rd984, %rd985;
	add.s64 	%rd987, %rd986, %rd983;
	add.s64 	%rd988, %rd987, %rd980;
	add.s64 	%rd989, %rd988, %rd900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd975;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 28;
	shf.r.wrap.b32 	%r912, %r909, %r910, 28;
	mov.b64 	%rd990, {%r912, %r911};
	shf.l.wrap.b32 	%r913, %r909, %r910, 30;
	shf.l.wrap.b32 	%r914, %r910, %r909, 30;
	mov.b64 	%rd991, {%r914, %r913};
	xor.b64  	%rd992, %rd991, %rd990;
	shf.l.wrap.b32 	%r915, %r909, %r910, 25;
	shf.l.wrap.b32 	%r916, %r910, %r909, 25;
	mov.b64 	%rd993, {%r916, %r915};
	xor.b64  	%rd994, %rd992, %rd993;
	xor.b64  	%rd995, %rd975, %rd925;
	xor.b64  	%rd996, %rd975, %rd950;
	and.b64  	%rd997, %rd996, %rd995;
	xor.b64  	%rd998, %rd997, %rd975;
	add.s64 	%rd999, %rd988, %rd998;
	add.s64 	%rd1000, %rd999, %rd994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r918}, %rd587;
	}
	shf.r.wrap.b32 	%r919, %r918, %r917, 19;
	shf.r.wrap.b32 	%r920, %r917, %r918, 19;
	mov.b64 	%rd1001, {%r920, %r919};
	shf.l.wrap.b32 	%r921, %r917, %r918, 3;
	shf.l.wrap.b32 	%r922, %r918, %r917, 3;
	mov.b64 	%rd1002, {%r922, %r921};
	shr.u64 	%rd1003, %rd587, 6;
	xor.b64  	%rd1004, %rd1001, %rd1003;
	xor.b64  	%rd1005, %rd1004, %rd1002;
	shf.r.wrap.b32 	%r923, %r536, %r535, 1;
	shf.r.wrap.b32 	%r924, %r535, %r536, 1;
	mov.b64 	%rd1006, {%r924, %r923};
	shf.r.wrap.b32 	%r925, %r536, %r535, 8;
	shf.r.wrap.b32 	%r926, %r535, %r536, 8;
	mov.b64 	%rd1007, {%r926, %r925};
	shr.u64 	%rd1008, %rd449, 7;
	xor.b64  	%rd1009, %rd1006, %rd1008;
	xor.b64  	%rd1010, %rd1009, %rd1007;
	add.s64 	%rd1011, %rd437, %rd547;
	add.s64 	%rd1012, %rd1011, %rd1005;
	add.s64 	%rd1013, %rd1012, %rd1010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r927,%dummy}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r928}, %rd600;
	}
	shf.r.wrap.b32 	%r929, %r928, %r927, 19;
	shf.r.wrap.b32 	%r930, %r927, %r928, 19;
	mov.b64 	%rd1014, {%r930, %r929};
	shf.l.wrap.b32 	%r931, %r927, %r928, 3;
	shf.l.wrap.b32 	%r932, %r928, %r927, 3;
	mov.b64 	%rd1015, {%r932, %r931};
	shr.u64 	%rd1016, %rd600, 6;
	xor.b64  	%rd1017, %rd1014, %rd1016;
	xor.b64  	%rd1018, %rd1017, %rd1015;
	shf.r.wrap.b32 	%r933, %r548, %r547, 1;
	shf.r.wrap.b32 	%r934, %r547, %r548, 1;
	mov.b64 	%rd1019, {%r934, %r933};
	shf.r.wrap.b32 	%r935, %r548, %r547, 8;
	shf.r.wrap.b32 	%r936, %r547, %r548, 8;
	mov.b64 	%rd1020, {%r936, %r935};
	shr.u64 	%rd1021, %rd461, 7;
	xor.b64  	%rd1022, %rd1019, %rd1021;
	xor.b64  	%rd1023, %rd1022, %rd1020;
	add.s64 	%rd1024, %rd449, %rd554;
	add.s64 	%rd1025, %rd1024, %rd1018;
	add.s64 	%rd1026, %rd1025, %rd1023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r937,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r938}, %rd1013;
	}
	shf.r.wrap.b32 	%r939, %r938, %r937, 19;
	shf.r.wrap.b32 	%r940, %r937, %r938, 19;
	mov.b64 	%rd1027, {%r940, %r939};
	shf.l.wrap.b32 	%r941, %r937, %r938, 3;
	shf.l.wrap.b32 	%r942, %r938, %r937, 3;
	mov.b64 	%rd1028, {%r942, %r941};
	shr.u64 	%rd1029, %rd1013, 6;
	xor.b64  	%rd1030, %rd1027, %rd1029;
	xor.b64  	%rd1031, %rd1030, %rd1028;
	shf.r.wrap.b32 	%r943, %r560, %r559, 1;
	shf.r.wrap.b32 	%r944, %r559, %r560, 1;
	mov.b64 	%rd1032, {%r944, %r943};
	shf.r.wrap.b32 	%r945, %r560, %r559, 8;
	shf.r.wrap.b32 	%r946, %r559, %r560, 8;
	mov.b64 	%rd1033, {%r946, %r945};
	shr.u64 	%rd1034, %rd473, 7;
	xor.b64  	%rd1035, %rd1032, %rd1034;
	xor.b64  	%rd1036, %rd1035, %rd1033;
	add.s64 	%rd1037, %rd461, %rd561;
	add.s64 	%rd1038, %rd1037, %rd1031;
	add.s64 	%rd1039, %rd1038, %rd1036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r947,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd1026;
	}
	shf.r.wrap.b32 	%r949, %r948, %r947, 19;
	shf.r.wrap.b32 	%r950, %r947, %r948, 19;
	mov.b64 	%rd1040, {%r950, %r949};
	shf.l.wrap.b32 	%r951, %r947, %r948, 3;
	shf.l.wrap.b32 	%r952, %r948, %r947, 3;
	mov.b64 	%rd1041, {%r952, %r951};
	shr.u64 	%rd1042, %rd1026, 6;
	xor.b64  	%rd1043, %rd1040, %rd1042;
	xor.b64  	%rd1044, %rd1043, %rd1041;
	shf.r.wrap.b32 	%r953, %r572, %r571, 1;
	shf.r.wrap.b32 	%r954, %r571, %r572, 1;
	mov.b64 	%rd1045, {%r954, %r953};
	shf.r.wrap.b32 	%r955, %r572, %r571, 8;
	shf.r.wrap.b32 	%r956, %r571, %r572, 8;
	mov.b64 	%rd1046, {%r956, %r955};
	shr.u64 	%rd1047, %rd485, 7;
	xor.b64  	%rd1048, %rd1045, %rd1047;
	xor.b64  	%rd1049, %rd1048, %rd1046;
	add.s64 	%rd1050, %rd568, %rd473;
	add.s64 	%rd1051, %rd1050, %rd1044;
	add.s64 	%rd1052, %rd1051, %rd1049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd1039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd1039;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 19;
	shf.r.wrap.b32 	%r960, %r957, %r958, 19;
	mov.b64 	%rd1053, {%r960, %r959};
	shf.l.wrap.b32 	%r961, %r957, %r958, 3;
	shf.l.wrap.b32 	%r962, %r958, %r957, 3;
	mov.b64 	%rd1054, {%r962, %r961};
	shr.u64 	%rd1055, %rd1039, 6;
	xor.b64  	%rd1056, %rd1053, %rd1055;
	xor.b64  	%rd1057, %rd1056, %rd1054;
	shf.r.wrap.b32 	%r963, %r584, %r583, 1;
	shf.r.wrap.b32 	%r964, %r583, %r584, 1;
	mov.b64 	%rd1058, {%r964, %r963};
	shf.r.wrap.b32 	%r965, %r584, %r583, 8;
	shf.r.wrap.b32 	%r966, %r583, %r584, 8;
	mov.b64 	%rd1059, {%r966, %r965};
	shr.u64 	%rd1060, %rd497, 7;
	xor.b64  	%rd1061, %rd1058, %rd1060;
	xor.b64  	%rd1062, %rd1061, %rd1059;
	add.s64 	%rd1063, %rd575, %rd485;
	add.s64 	%rd1064, %rd1063, %rd1057;
	add.s64 	%rd1065, %rd1064, %rd1062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd1052;
	}
	shf.r.wrap.b32 	%r969, %r968, %r967, 19;
	shf.r.wrap.b32 	%r970, %r967, %r968, 19;
	mov.b64 	%rd1066, {%r970, %r969};
	shf.l.wrap.b32 	%r971, %r967, %r968, 3;
	shf.l.wrap.b32 	%r972, %r968, %r967, 3;
	mov.b64 	%rd1067, {%r972, %r971};
	shr.u64 	%rd1068, %rd1052, 6;
	xor.b64  	%rd1069, %rd1066, %rd1068;
	xor.b64  	%rd1070, %rd1069, %rd1067;
	shf.r.wrap.b32 	%r973, %r596, %r595, 1;
	shf.r.wrap.b32 	%r974, %r595, %r596, 1;
	mov.b64 	%rd1071, {%r974, %r973};
	shf.r.wrap.b32 	%r975, %r596, %r595, 8;
	shf.r.wrap.b32 	%r976, %r595, %r596, 8;
	mov.b64 	%rd1072, {%r976, %r975};
	shr.u64 	%rd1073, %rd510, 7;
	xor.b64  	%rd1074, %rd1071, %rd1073;
	xor.b64  	%rd1075, %rd1074, %rd1072;
	add.s64 	%rd1076, %rd587, %rd497;
	add.s64 	%rd1077, %rd1076, %rd1070;
	add.s64 	%rd1078, %rd1077, %rd1075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r977,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r978}, %rd1065;
	}
	shf.r.wrap.b32 	%r979, %r978, %r977, 19;
	shf.r.wrap.b32 	%r980, %r977, %r978, 19;
	mov.b64 	%rd1079, {%r980, %r979};
	shf.l.wrap.b32 	%r981, %r977, %r978, 3;
	shf.l.wrap.b32 	%r982, %r978, %r977, 3;
	mov.b64 	%rd1080, {%r982, %r981};
	shr.u64 	%rd1081, %rd1065, 6;
	xor.b64  	%rd1082, %rd1079, %rd1081;
	xor.b64  	%rd1083, %rd1082, %rd1080;
	shf.r.wrap.b32 	%r983, %r608, %r607, 1;
	shf.r.wrap.b32 	%r984, %r607, %r608, 1;
	mov.b64 	%rd1084, {%r984, %r983};
	shf.r.wrap.b32 	%r985, %r608, %r607, 8;
	shf.r.wrap.b32 	%r986, %r607, %r608, 8;
	mov.b64 	%rd1085, {%r986, %r985};
	shr.u64 	%rd1086, %rd523, 7;
	xor.b64  	%rd1087, %rd1084, %rd1086;
	xor.b64  	%rd1088, %rd1087, %rd1085;
	add.s64 	%rd1089, %rd600, %rd510;
	add.s64 	%rd1090, %rd1089, %rd1083;
	add.s64 	%rd1091, %rd1090, %rd1088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r987,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r988}, %rd1078;
	}
	shf.r.wrap.b32 	%r989, %r988, %r987, 19;
	shf.r.wrap.b32 	%r990, %r987, %r988, 19;
	mov.b64 	%rd1092, {%r990, %r989};
	shf.l.wrap.b32 	%r991, %r987, %r988, 3;
	shf.l.wrap.b32 	%r992, %r988, %r987, 3;
	mov.b64 	%rd1093, {%r992, %r991};
	shr.u64 	%rd1094, %rd1078, 6;
	xor.b64  	%rd1095, %rd1092, %rd1094;
	xor.b64  	%rd1096, %rd1095, %rd1093;
	shf.r.wrap.b32 	%r993, %r618, %r617, 1;
	shf.r.wrap.b32 	%r994, %r617, %r618, 1;
	mov.b64 	%rd1097, {%r994, %r993};
	shf.r.wrap.b32 	%r995, %r618, %r617, 8;
	shf.r.wrap.b32 	%r996, %r617, %r618, 8;
	mov.b64 	%rd1098, {%r996, %r995};
	shr.u64 	%rd1099, %rd536, 7;
	xor.b64  	%rd1100, %rd1097, %rd1099;
	xor.b64  	%rd1101, %rd1100, %rd1098;
	add.s64 	%rd1102, %rd1013, %rd523;
	add.s64 	%rd1103, %rd1102, %rd1096;
	add.s64 	%rd1104, %rd1103, %rd1101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1091;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 19;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 19;
	mov.b64 	%rd1105, {%r1000, %r999};
	shf.l.wrap.b32 	%r1001, %r997, %r998, 3;
	shf.l.wrap.b32 	%r1002, %r998, %r997, 3;
	mov.b64 	%rd1106, {%r1002, %r1001};
	shr.u64 	%rd1107, %rd1091, 6;
	xor.b64  	%rd1108, %rd1105, %rd1107;
	xor.b64  	%rd1109, %rd1108, %rd1106;
	shf.r.wrap.b32 	%r1003, %r624, %r623, 1;
	shf.r.wrap.b32 	%r1004, %r623, %r624, 1;
	mov.b64 	%rd1110, {%r1004, %r1003};
	shf.r.wrap.b32 	%r1005, %r624, %r623, 8;
	shf.r.wrap.b32 	%r1006, %r623, %r624, 8;
	mov.b64 	%rd1111, {%r1006, %r1005};
	shr.u64 	%rd1112, %rd547, 7;
	xor.b64  	%rd1113, %rd1110, %rd1112;
	xor.b64  	%rd1114, %rd1113, %rd1111;
	add.s64 	%rd1115, %rd1026, %rd536;
	add.s64 	%rd1116, %rd1115, %rd1109;
	add.s64 	%rd1117, %rd1116, %rd1114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd1104;
	}
	shf.r.wrap.b32 	%r1009, %r1008, %r1007, 19;
	shf.r.wrap.b32 	%r1010, %r1007, %r1008, 19;
	mov.b64 	%rd1118, {%r1010, %r1009};
	shf.l.wrap.b32 	%r1011, %r1007, %r1008, 3;
	shf.l.wrap.b32 	%r1012, %r1008, %r1007, 3;
	mov.b64 	%rd1119, {%r1012, %r1011};
	shr.u64 	%rd1120, %rd1104, 6;
	xor.b64  	%rd1121, %rd1118, %rd1120;
	xor.b64  	%rd1122, %rd1121, %rd1119;
	shf.r.wrap.b32 	%r1013, %r630, %r629, 1;
	shf.r.wrap.b32 	%r1014, %r629, %r630, 1;
	mov.b64 	%rd1123, {%r1014, %r1013};
	shf.r.wrap.b32 	%r1015, %r630, %r629, 8;
	shf.r.wrap.b32 	%r1016, %r629, %r630, 8;
	mov.b64 	%rd1124, {%r1016, %r1015};
	shr.u64 	%rd1125, %rd554, 7;
	xor.b64  	%rd1126, %rd1123, %rd1125;
	xor.b64  	%rd1127, %rd1126, %rd1124;
	add.s64 	%rd1128, %rd1039, %rd547;
	add.s64 	%rd1129, %rd1128, %rd1122;
	add.s64 	%rd1130, %rd1129, %rd1127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1018}, %rd1117;
	}
	shf.r.wrap.b32 	%r1019, %r1018, %r1017, 19;
	shf.r.wrap.b32 	%r1020, %r1017, %r1018, 19;
	mov.b64 	%rd1131, {%r1020, %r1019};
	shf.l.wrap.b32 	%r1021, %r1017, %r1018, 3;
	shf.l.wrap.b32 	%r1022, %r1018, %r1017, 3;
	mov.b64 	%rd1132, {%r1022, %r1021};
	shr.u64 	%rd1133, %rd1117, 6;
	xor.b64  	%rd1134, %rd1131, %rd1133;
	xor.b64  	%rd1135, %rd1134, %rd1132;
	shf.r.wrap.b32 	%r1023, %r636, %r635, 1;
	shf.r.wrap.b32 	%r1024, %r635, %r636, 1;
	mov.b64 	%rd1136, {%r1024, %r1023};
	shf.r.wrap.b32 	%r1025, %r636, %r635, 8;
	shf.r.wrap.b32 	%r1026, %r635, %r636, 8;
	mov.b64 	%rd1137, {%r1026, %r1025};
	shr.u64 	%rd1138, %rd561, 7;
	xor.b64  	%rd1139, %rd1136, %rd1138;
	xor.b64  	%rd1140, %rd1139, %rd1137;
	add.s64 	%rd1141, %rd1052, %rd554;
	add.s64 	%rd1142, %rd1141, %rd1135;
	add.s64 	%rd1143, %rd1142, %rd1140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1027,%dummy}, %rd1130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1028}, %rd1130;
	}
	shf.r.wrap.b32 	%r1029, %r1028, %r1027, 19;
	shf.r.wrap.b32 	%r1030, %r1027, %r1028, 19;
	mov.b64 	%rd1144, {%r1030, %r1029};
	shf.l.wrap.b32 	%r1031, %r1027, %r1028, 3;
	shf.l.wrap.b32 	%r1032, %r1028, %r1027, 3;
	mov.b64 	%rd1145, {%r1032, %r1031};
	shr.u64 	%rd1146, %rd1130, 6;
	xor.b64  	%rd1147, %rd1144, %rd1146;
	xor.b64  	%rd1148, %rd1147, %rd1145;
	shf.r.wrap.b32 	%r1033, %r642, %r641, 1;
	shf.r.wrap.b32 	%r1034, %r641, %r642, 1;
	mov.b64 	%rd1149, {%r1034, %r1033};
	shf.r.wrap.b32 	%r1035, %r642, %r641, 8;
	shf.r.wrap.b32 	%r1036, %r641, %r642, 8;
	mov.b64 	%rd1150, {%r1036, %r1035};
	shr.u64 	%rd1151, %rd568, 7;
	xor.b64  	%rd1152, %rd1149, %rd1151;
	xor.b64  	%rd1153, %rd1152, %rd1150;
	add.s64 	%rd1154, %rd1065, %rd561;
	add.s64 	%rd1155, %rd1154, %rd1148;
	add.s64 	%rd1156, %rd1155, %rd1153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd1143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd1143;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 19;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 19;
	mov.b64 	%rd1157, {%r1040, %r1039};
	shf.l.wrap.b32 	%r1041, %r1037, %r1038, 3;
	shf.l.wrap.b32 	%r1042, %r1038, %r1037, 3;
	mov.b64 	%rd1158, {%r1042, %r1041};
	shr.u64 	%rd1159, %rd1143, 6;
	xor.b64  	%rd1160, %rd1157, %rd1159;
	xor.b64  	%rd1161, %rd1160, %rd1158;
	shf.r.wrap.b32 	%r1043, %r652, %r651, 1;
	shf.r.wrap.b32 	%r1044, %r651, %r652, 1;
	mov.b64 	%rd1162, {%r1044, %r1043};
	shf.r.wrap.b32 	%r1045, %r652, %r651, 8;
	shf.r.wrap.b32 	%r1046, %r651, %r652, 8;
	mov.b64 	%rd1163, {%r1046, %r1045};
	shr.u64 	%rd1164, %rd575, 7;
	xor.b64  	%rd1165, %rd1162, %rd1164;
	xor.b64  	%rd1166, %rd1165, %rd1163;
	add.s64 	%rd1167, %rd1078, %rd568;
	add.s64 	%rd1168, %rd1167, %rd1161;
	add.s64 	%rd1169, %rd1168, %rd1166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1047,%dummy}, %rd1156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1048}, %rd1156;
	}
	shf.r.wrap.b32 	%r1049, %r1048, %r1047, 19;
	shf.r.wrap.b32 	%r1050, %r1047, %r1048, 19;
	mov.b64 	%rd1170, {%r1050, %r1049};
	shf.l.wrap.b32 	%r1051, %r1047, %r1048, 3;
	shf.l.wrap.b32 	%r1052, %r1048, %r1047, 3;
	mov.b64 	%rd1171, {%r1052, %r1051};
	shr.u64 	%rd1172, %rd1156, 6;
	xor.b64  	%rd1173, %rd1170, %rd1172;
	xor.b64  	%rd1174, %rd1173, %rd1171;
	shf.r.wrap.b32 	%r1053, %r918, %r917, 1;
	shf.r.wrap.b32 	%r1054, %r917, %r918, 1;
	mov.b64 	%rd1175, {%r1054, %r1053};
	shf.r.wrap.b32 	%r1055, %r918, %r917, 8;
	shf.r.wrap.b32 	%r1056, %r917, %r918, 8;
	mov.b64 	%rd1176, {%r1056, %r1055};
	shr.u64 	%rd1177, %rd587, 7;
	xor.b64  	%rd1178, %rd1175, %rd1177;
	xor.b64  	%rd1179, %rd1178, %rd1176;
	add.s64 	%rd1180, %rd1091, %rd575;
	add.s64 	%rd1181, %rd1180, %rd1174;
	add.s64 	%rd1182, %rd1181, %rd1179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1057,%dummy}, %rd1169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1058}, %rd1169;
	}
	shf.r.wrap.b32 	%r1059, %r1058, %r1057, 19;
	shf.r.wrap.b32 	%r1060, %r1057, %r1058, 19;
	mov.b64 	%rd1183, {%r1060, %r1059};
	shf.l.wrap.b32 	%r1061, %r1057, %r1058, 3;
	shf.l.wrap.b32 	%r1062, %r1058, %r1057, 3;
	mov.b64 	%rd1184, {%r1062, %r1061};
	shr.u64 	%rd1185, %rd1169, 6;
	xor.b64  	%rd1186, %rd1183, %rd1185;
	xor.b64  	%rd1187, %rd1186, %rd1184;
	shf.r.wrap.b32 	%r1063, %r928, %r927, 1;
	shf.r.wrap.b32 	%r1064, %r927, %r928, 1;
	mov.b64 	%rd1188, {%r1064, %r1063};
	shf.r.wrap.b32 	%r1065, %r928, %r927, 8;
	shf.r.wrap.b32 	%r1066, %r927, %r928, 8;
	mov.b64 	%rd1189, {%r1066, %r1065};
	shr.u64 	%rd1190, %rd600, 7;
	xor.b64  	%rd1191, %rd1188, %rd1190;
	xor.b64  	%rd1192, %rd1191, %rd1189;
	add.s64 	%rd1193, %rd1104, %rd587;
	add.s64 	%rd1194, %rd1193, %rd1187;
	add.s64 	%rd1195, %rd1194, %rd1192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1067,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1068}, %rd1182;
	}
	shf.r.wrap.b32 	%r1069, %r1068, %r1067, 19;
	shf.r.wrap.b32 	%r1070, %r1067, %r1068, 19;
	mov.b64 	%rd1196, {%r1070, %r1069};
	shf.l.wrap.b32 	%r1071, %r1067, %r1068, 3;
	shf.l.wrap.b32 	%r1072, %r1068, %r1067, 3;
	mov.b64 	%rd1197, {%r1072, %r1071};
	shr.u64 	%rd1198, %rd1182, 6;
	xor.b64  	%rd1199, %rd1196, %rd1198;
	xor.b64  	%rd1200, %rd1199, %rd1197;
	shf.r.wrap.b32 	%r1073, %r938, %r937, 1;
	shf.r.wrap.b32 	%r1074, %r937, %r938, 1;
	mov.b64 	%rd1201, {%r1074, %r1073};
	shf.r.wrap.b32 	%r1075, %r938, %r937, 8;
	shf.r.wrap.b32 	%r1076, %r937, %r938, 8;
	mov.b64 	%rd1202, {%r1076, %r1075};
	shr.u64 	%rd1203, %rd1013, 7;
	xor.b64  	%rd1204, %rd1201, %rd1203;
	xor.b64  	%rd1205, %rd1204, %rd1202;
	add.s64 	%rd1206, %rd1117, %rd600;
	add.s64 	%rd1207, %rd1206, %rd1200;
	add.s64 	%rd1208, %rd1207, %rd1205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd989;
	}
	shf.r.wrap.b32 	%r1079, %r1078, %r1077, 14;
	shf.r.wrap.b32 	%r1080, %r1077, %r1078, 14;
	mov.b64 	%rd1209, {%r1080, %r1079};
	shf.r.wrap.b32 	%r1081, %r1078, %r1077, 18;
	shf.r.wrap.b32 	%r1082, %r1077, %r1078, 18;
	mov.b64 	%rd1210, {%r1082, %r1081};
	xor.b64  	%rd1211, %rd1210, %rd1209;
	shf.l.wrap.b32 	%r1083, %r1077, %r1078, 23;
	shf.l.wrap.b32 	%r1084, %r1078, %r1077, 23;
	mov.b64 	%rd1212, {%r1084, %r1083};
	xor.b64  	%rd1213, %rd1211, %rd1212;
	xor.b64  	%rd1214, %rd964, %rd939;
	and.b64  	%rd1215, %rd1214, %rd989;
	xor.b64  	%rd1216, %rd1215, %rd939;
	add.s64 	%rd1217, %rd1216, %rd914;
	add.s64 	%rd1218, %rd1217, %rd1013;
	ld.const.u64 	%rd1219, [k_sha512+256];
	add.s64 	%rd1220, %rd1218, %rd1219;
	add.s64 	%rd1221, %rd1220, %rd1213;
	add.s64 	%rd1222, %rd1221, %rd925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1085,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1086}, %rd1000;
	}
	shf.r.wrap.b32 	%r1087, %r1086, %r1085, 28;
	shf.r.wrap.b32 	%r1088, %r1085, %r1086, 28;
	mov.b64 	%rd1223, {%r1088, %r1087};
	shf.l.wrap.b32 	%r1089, %r1085, %r1086, 30;
	shf.l.wrap.b32 	%r1090, %r1086, %r1085, 30;
	mov.b64 	%rd1224, {%r1090, %r1089};
	xor.b64  	%rd1225, %rd1224, %rd1223;
	shf.l.wrap.b32 	%r1091, %r1085, %r1086, 25;
	shf.l.wrap.b32 	%r1092, %r1086, %r1085, 25;
	mov.b64 	%rd1226, {%r1092, %r1091};
	xor.b64  	%rd1227, %rd1225, %rd1226;
	xor.b64  	%rd1228, %rd1000, %rd950;
	xor.b64  	%rd1229, %rd1000, %rd975;
	and.b64  	%rd1230, %rd1229, %rd1228;
	xor.b64  	%rd1231, %rd1230, %rd1000;
	add.s64 	%rd1232, %rd1221, %rd1231;
	add.s64 	%rd1233, %rd1232, %rd1227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1093,%dummy}, %rd1222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1094}, %rd1222;
	}
	shf.r.wrap.b32 	%r1095, %r1094, %r1093, 14;
	shf.r.wrap.b32 	%r1096, %r1093, %r1094, 14;
	mov.b64 	%rd1234, {%r1096, %r1095};
	shf.r.wrap.b32 	%r1097, %r1094, %r1093, 18;
	shf.r.wrap.b32 	%r1098, %r1093, %r1094, 18;
	mov.b64 	%rd1235, {%r1098, %r1097};
	xor.b64  	%rd1236, %rd1235, %rd1234;
	shf.l.wrap.b32 	%r1099, %r1093, %r1094, 23;
	shf.l.wrap.b32 	%r1100, %r1094, %r1093, 23;
	mov.b64 	%rd1237, {%r1100, %r1099};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	xor.b64  	%rd1239, %rd989, %rd964;
	and.b64  	%rd1240, %rd1222, %rd1239;
	xor.b64  	%rd1241, %rd1240, %rd964;
	add.s64 	%rd1242, %rd1026, %rd939;
	ld.const.u64 	%rd1243, [k_sha512+264];
	add.s64 	%rd1244, %rd1242, %rd1243;
	add.s64 	%rd1245, %rd1244, %rd1241;
	add.s64 	%rd1246, %rd1245, %rd1238;
	add.s64 	%rd1247, %rd1246, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd1233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd1233;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 28;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 28;
	mov.b64 	%rd1248, {%r1104, %r1103};
	shf.l.wrap.b32 	%r1105, %r1101, %r1102, 30;
	shf.l.wrap.b32 	%r1106, %r1102, %r1101, 30;
	mov.b64 	%rd1249, {%r1106, %r1105};
	xor.b64  	%rd1250, %rd1249, %rd1248;
	shf.l.wrap.b32 	%r1107, %r1101, %r1102, 25;
	shf.l.wrap.b32 	%r1108, %r1102, %r1101, 25;
	mov.b64 	%rd1251, {%r1108, %r1107};
	xor.b64  	%rd1252, %rd1250, %rd1251;
	xor.b64  	%rd1253, %rd1233, %rd975;
	xor.b64  	%rd1254, %rd1233, %rd1000;
	and.b64  	%rd1255, %rd1254, %rd1253;
	xor.b64  	%rd1256, %rd1255, %rd1233;
	add.s64 	%rd1257, %rd1246, %rd1256;
	add.s64 	%rd1258, %rd1257, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd1247;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 14;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 14;
	mov.b64 	%rd1259, {%r1112, %r1111};
	shf.r.wrap.b32 	%r1113, %r1110, %r1109, 18;
	shf.r.wrap.b32 	%r1114, %r1109, %r1110, 18;
	mov.b64 	%rd1260, {%r1114, %r1113};
	xor.b64  	%rd1261, %rd1260, %rd1259;
	shf.l.wrap.b32 	%r1115, %r1109, %r1110, 23;
	shf.l.wrap.b32 	%r1116, %r1110, %r1109, 23;
	mov.b64 	%rd1262, {%r1116, %r1115};
	xor.b64  	%rd1263, %rd1261, %rd1262;
	xor.b64  	%rd1264, %rd1222, %rd989;
	and.b64  	%rd1265, %rd1247, %rd1264;
	xor.b64  	%rd1266, %rd1265, %rd989;
	add.s64 	%rd1267, %rd1039, %rd964;
	ld.const.u64 	%rd1268, [k_sha512+272];
	add.s64 	%rd1269, %rd1267, %rd1268;
	add.s64 	%rd1270, %rd1269, %rd1266;
	add.s64 	%rd1271, %rd1270, %rd1263;
	add.s64 	%rd1272, %rd1271, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1117,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1118}, %rd1258;
	}
	shf.r.wrap.b32 	%r1119, %r1118, %r1117, 28;
	shf.r.wrap.b32 	%r1120, %r1117, %r1118, 28;
	mov.b64 	%rd1273, {%r1120, %r1119};
	shf.l.wrap.b32 	%r1121, %r1117, %r1118, 30;
	shf.l.wrap.b32 	%r1122, %r1118, %r1117, 30;
	mov.b64 	%rd1274, {%r1122, %r1121};
	xor.b64  	%rd1275, %rd1274, %rd1273;
	shf.l.wrap.b32 	%r1123, %r1117, %r1118, 25;
	shf.l.wrap.b32 	%r1124, %r1118, %r1117, 25;
	mov.b64 	%rd1276, {%r1124, %r1123};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	xor.b64  	%rd1278, %rd1258, %rd1000;
	xor.b64  	%rd1279, %rd1258, %rd1233;
	and.b64  	%rd1280, %rd1279, %rd1278;
	xor.b64  	%rd1281, %rd1280, %rd1258;
	add.s64 	%rd1282, %rd1271, %rd1281;
	add.s64 	%rd1283, %rd1282, %rd1277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd1272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd1272;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 14;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 14;
	mov.b64 	%rd1284, {%r1128, %r1127};
	shf.r.wrap.b32 	%r1129, %r1126, %r1125, 18;
	shf.r.wrap.b32 	%r1130, %r1125, %r1126, 18;
	mov.b64 	%rd1285, {%r1130, %r1129};
	xor.b64  	%rd1286, %rd1285, %rd1284;
	shf.l.wrap.b32 	%r1131, %r1125, %r1126, 23;
	shf.l.wrap.b32 	%r1132, %r1126, %r1125, 23;
	mov.b64 	%rd1287, {%r1132, %r1131};
	xor.b64  	%rd1288, %rd1286, %rd1287;
	xor.b64  	%rd1289, %rd1247, %rd1222;
	and.b64  	%rd1290, %rd1272, %rd1289;
	xor.b64  	%rd1291, %rd1290, %rd1222;
	add.s64 	%rd1292, %rd1052, %rd989;
	ld.const.u64 	%rd1293, [k_sha512+280];
	add.s64 	%rd1294, %rd1292, %rd1293;
	add.s64 	%rd1295, %rd1294, %rd1291;
	add.s64 	%rd1296, %rd1295, %rd1288;
	add.s64 	%rd1297, %rd1296, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1133,%dummy}, %rd1283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1134}, %rd1283;
	}
	shf.r.wrap.b32 	%r1135, %r1134, %r1133, 28;
	shf.r.wrap.b32 	%r1136, %r1133, %r1134, 28;
	mov.b64 	%rd1298, {%r1136, %r1135};
	shf.l.wrap.b32 	%r1137, %r1133, %r1134, 30;
	shf.l.wrap.b32 	%r1138, %r1134, %r1133, 30;
	mov.b64 	%rd1299, {%r1138, %r1137};
	xor.b64  	%rd1300, %rd1299, %rd1298;
	shf.l.wrap.b32 	%r1139, %r1133, %r1134, 25;
	shf.l.wrap.b32 	%r1140, %r1134, %r1133, 25;
	mov.b64 	%rd1301, {%r1140, %r1139};
	xor.b64  	%rd1302, %rd1300, %rd1301;
	xor.b64  	%rd1303, %rd1283, %rd1233;
	xor.b64  	%rd1304, %rd1283, %rd1258;
	and.b64  	%rd1305, %rd1304, %rd1303;
	xor.b64  	%rd1306, %rd1305, %rd1283;
	add.s64 	%rd1307, %rd1296, %rd1306;
	add.s64 	%rd1308, %rd1307, %rd1302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1141,%dummy}, %rd1297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1142}, %rd1297;
	}
	shf.r.wrap.b32 	%r1143, %r1142, %r1141, 14;
	shf.r.wrap.b32 	%r1144, %r1141, %r1142, 14;
	mov.b64 	%rd1309, {%r1144, %r1143};
	shf.r.wrap.b32 	%r1145, %r1142, %r1141, 18;
	shf.r.wrap.b32 	%r1146, %r1141, %r1142, 18;
	mov.b64 	%rd1310, {%r1146, %r1145};
	xor.b64  	%rd1311, %rd1310, %rd1309;
	shf.l.wrap.b32 	%r1147, %r1141, %r1142, 23;
	shf.l.wrap.b32 	%r1148, %r1142, %r1141, 23;
	mov.b64 	%rd1312, {%r1148, %r1147};
	xor.b64  	%rd1313, %rd1311, %rd1312;
	xor.b64  	%rd1314, %rd1272, %rd1247;
	and.b64  	%rd1315, %rd1297, %rd1314;
	xor.b64  	%rd1316, %rd1315, %rd1247;
	add.s64 	%rd1317, %rd1222, %rd1065;
	ld.const.u64 	%rd1318, [k_sha512+288];
	add.s64 	%rd1319, %rd1317, %rd1318;
	add.s64 	%rd1320, %rd1319, %rd1316;
	add.s64 	%rd1321, %rd1320, %rd1313;
	add.s64 	%rd1322, %rd1321, %rd1233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1149,%dummy}, %rd1308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1150}, %rd1308;
	}
	shf.r.wrap.b32 	%r1151, %r1150, %r1149, 28;
	shf.r.wrap.b32 	%r1152, %r1149, %r1150, 28;
	mov.b64 	%rd1323, {%r1152, %r1151};
	shf.l.wrap.b32 	%r1153, %r1149, %r1150, 30;
	shf.l.wrap.b32 	%r1154, %r1150, %r1149, 30;
	mov.b64 	%rd1324, {%r1154, %r1153};
	xor.b64  	%rd1325, %rd1324, %rd1323;
	shf.l.wrap.b32 	%r1155, %r1149, %r1150, 25;
	shf.l.wrap.b32 	%r1156, %r1150, %r1149, 25;
	mov.b64 	%rd1326, {%r1156, %r1155};
	xor.b64  	%rd1327, %rd1325, %rd1326;
	xor.b64  	%rd1328, %rd1308, %rd1258;
	xor.b64  	%rd1329, %rd1308, %rd1283;
	and.b64  	%rd1330, %rd1329, %rd1328;
	xor.b64  	%rd1331, %rd1330, %rd1308;
	add.s64 	%rd1332, %rd1321, %rd1331;
	add.s64 	%rd1333, %rd1332, %rd1327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1158}, %rd1322;
	}
	shf.r.wrap.b32 	%r1159, %r1158, %r1157, 14;
	shf.r.wrap.b32 	%r1160, %r1157, %r1158, 14;
	mov.b64 	%rd1334, {%r1160, %r1159};
	shf.r.wrap.b32 	%r1161, %r1158, %r1157, 18;
	shf.r.wrap.b32 	%r1162, %r1157, %r1158, 18;
	mov.b64 	%rd1335, {%r1162, %r1161};
	xor.b64  	%rd1336, %rd1335, %rd1334;
	shf.l.wrap.b32 	%r1163, %r1157, %r1158, 23;
	shf.l.wrap.b32 	%r1164, %r1158, %r1157, 23;
	mov.b64 	%rd1337, {%r1164, %r1163};
	xor.b64  	%rd1338, %rd1336, %rd1337;
	xor.b64  	%rd1339, %rd1297, %rd1272;
	and.b64  	%rd1340, %rd1322, %rd1339;
	xor.b64  	%rd1341, %rd1340, %rd1272;
	add.s64 	%rd1342, %rd1247, %rd1078;
	ld.const.u64 	%rd1343, [k_sha512+296];
	add.s64 	%rd1344, %rd1342, %rd1343;
	add.s64 	%rd1345, %rd1344, %rd1341;
	add.s64 	%rd1346, %rd1345, %rd1338;
	add.s64 	%rd1347, %rd1346, %rd1258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd1333;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 28;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 28;
	mov.b64 	%rd1348, {%r1168, %r1167};
	shf.l.wrap.b32 	%r1169, %r1165, %r1166, 30;
	shf.l.wrap.b32 	%r1170, %r1166, %r1165, 30;
	mov.b64 	%rd1349, {%r1170, %r1169};
	xor.b64  	%rd1350, %rd1349, %rd1348;
	shf.l.wrap.b32 	%r1171, %r1165, %r1166, 25;
	shf.l.wrap.b32 	%r1172, %r1166, %r1165, 25;
	mov.b64 	%rd1351, {%r1172, %r1171};
	xor.b64  	%rd1352, %rd1350, %rd1351;
	xor.b64  	%rd1353, %rd1333, %rd1283;
	xor.b64  	%rd1354, %rd1333, %rd1308;
	and.b64  	%rd1355, %rd1354, %rd1353;
	xor.b64  	%rd1356, %rd1355, %rd1333;
	add.s64 	%rd1357, %rd1346, %rd1356;
	add.s64 	%rd1358, %rd1357, %rd1352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1347;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 14;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 14;
	mov.b64 	%rd1359, {%r1176, %r1175};
	shf.r.wrap.b32 	%r1177, %r1174, %r1173, 18;
	shf.r.wrap.b32 	%r1178, %r1173, %r1174, 18;
	mov.b64 	%rd1360, {%r1178, %r1177};
	xor.b64  	%rd1361, %rd1360, %rd1359;
	shf.l.wrap.b32 	%r1179, %r1173, %r1174, 23;
	shf.l.wrap.b32 	%r1180, %r1174, %r1173, 23;
	mov.b64 	%rd1362, {%r1180, %r1179};
	xor.b64  	%rd1363, %rd1361, %rd1362;
	xor.b64  	%rd1364, %rd1322, %rd1297;
	and.b64  	%rd1365, %rd1347, %rd1364;
	xor.b64  	%rd1366, %rd1365, %rd1297;
	add.s64 	%rd1367, %rd1272, %rd1091;
	ld.const.u64 	%rd1368, [k_sha512+304];
	add.s64 	%rd1369, %rd1367, %rd1368;
	add.s64 	%rd1370, %rd1369, %rd1366;
	add.s64 	%rd1371, %rd1370, %rd1363;
	add.s64 	%rd1372, %rd1371, %rd1283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1182}, %rd1358;
	}
	shf.r.wrap.b32 	%r1183, %r1182, %r1181, 28;
	shf.r.wrap.b32 	%r1184, %r1181, %r1182, 28;
	mov.b64 	%rd1373, {%r1184, %r1183};
	shf.l.wrap.b32 	%r1185, %r1181, %r1182, 30;
	shf.l.wrap.b32 	%r1186, %r1182, %r1181, 30;
	mov.b64 	%rd1374, {%r1186, %r1185};
	xor.b64  	%rd1375, %rd1374, %rd1373;
	shf.l.wrap.b32 	%r1187, %r1181, %r1182, 25;
	shf.l.wrap.b32 	%r1188, %r1182, %r1181, 25;
	mov.b64 	%rd1376, {%r1188, %r1187};
	xor.b64  	%rd1377, %rd1375, %rd1376;
	xor.b64  	%rd1378, %rd1358, %rd1308;
	xor.b64  	%rd1379, %rd1358, %rd1333;
	and.b64  	%rd1380, %rd1379, %rd1378;
	xor.b64  	%rd1381, %rd1380, %rd1358;
	add.s64 	%rd1382, %rd1371, %rd1381;
	add.s64 	%rd1383, %rd1382, %rd1377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd1372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd1372;
	}
	shf.r.wrap.b32 	%r1191, %r1190, %r1189, 14;
	shf.r.wrap.b32 	%r1192, %r1189, %r1190, 14;
	mov.b64 	%rd1384, {%r1192, %r1191};
	shf.r.wrap.b32 	%r1193, %r1190, %r1189, 18;
	shf.r.wrap.b32 	%r1194, %r1189, %r1190, 18;
	mov.b64 	%rd1385, {%r1194, %r1193};
	xor.b64  	%rd1386, %rd1385, %rd1384;
	shf.l.wrap.b32 	%r1195, %r1189, %r1190, 23;
	shf.l.wrap.b32 	%r1196, %r1190, %r1189, 23;
	mov.b64 	%rd1387, {%r1196, %r1195};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	xor.b64  	%rd1389, %rd1347, %rd1322;
	and.b64  	%rd1390, %rd1372, %rd1389;
	xor.b64  	%rd1391, %rd1390, %rd1322;
	add.s64 	%rd1392, %rd1297, %rd1104;
	ld.const.u64 	%rd1393, [k_sha512+312];
	add.s64 	%rd1394, %rd1392, %rd1393;
	add.s64 	%rd1395, %rd1394, %rd1391;
	add.s64 	%rd1396, %rd1395, %rd1388;
	add.s64 	%rd1397, %rd1396, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1197,%dummy}, %rd1383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1198}, %rd1383;
	}
	shf.r.wrap.b32 	%r1199, %r1198, %r1197, 28;
	shf.r.wrap.b32 	%r1200, %r1197, %r1198, 28;
	mov.b64 	%rd1398, {%r1200, %r1199};
	shf.l.wrap.b32 	%r1201, %r1197, %r1198, 30;
	shf.l.wrap.b32 	%r1202, %r1198, %r1197, 30;
	mov.b64 	%rd1399, {%r1202, %r1201};
	xor.b64  	%rd1400, %rd1399, %rd1398;
	shf.l.wrap.b32 	%r1203, %r1197, %r1198, 25;
	shf.l.wrap.b32 	%r1204, %r1198, %r1197, 25;
	mov.b64 	%rd1401, {%r1204, %r1203};
	xor.b64  	%rd1402, %rd1400, %rd1401;
	xor.b64  	%rd1403, %rd1383, %rd1333;
	xor.b64  	%rd1404, %rd1383, %rd1358;
	and.b64  	%rd1405, %rd1404, %rd1403;
	xor.b64  	%rd1406, %rd1405, %rd1383;
	add.s64 	%rd1407, %rd1396, %rd1406;
	add.s64 	%rd1408, %rd1407, %rd1402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1205,%dummy}, %rd1397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1206}, %rd1397;
	}
	shf.r.wrap.b32 	%r1207, %r1206, %r1205, 14;
	shf.r.wrap.b32 	%r1208, %r1205, %r1206, 14;
	mov.b64 	%rd1409, {%r1208, %r1207};
	shf.r.wrap.b32 	%r1209, %r1206, %r1205, 18;
	shf.r.wrap.b32 	%r1210, %r1205, %r1206, 18;
	mov.b64 	%rd1410, {%r1210, %r1209};
	xor.b64  	%rd1411, %rd1410, %rd1409;
	shf.l.wrap.b32 	%r1211, %r1205, %r1206, 23;
	shf.l.wrap.b32 	%r1212, %r1206, %r1205, 23;
	mov.b64 	%rd1412, {%r1212, %r1211};
	xor.b64  	%rd1413, %rd1411, %rd1412;
	xor.b64  	%rd1414, %rd1372, %rd1347;
	and.b64  	%rd1415, %rd1397, %rd1414;
	xor.b64  	%rd1416, %rd1415, %rd1347;
	add.s64 	%rd1417, %rd1322, %rd1117;
	ld.const.u64 	%rd1418, [k_sha512+320];
	add.s64 	%rd1419, %rd1417, %rd1418;
	add.s64 	%rd1420, %rd1419, %rd1416;
	add.s64 	%rd1421, %rd1420, %rd1413;
	add.s64 	%rd1422, %rd1421, %rd1333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd1408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd1408;
	}
	shf.r.wrap.b32 	%r1215, %r1214, %r1213, 28;
	shf.r.wrap.b32 	%r1216, %r1213, %r1214, 28;
	mov.b64 	%rd1423, {%r1216, %r1215};
	shf.l.wrap.b32 	%r1217, %r1213, %r1214, 30;
	shf.l.wrap.b32 	%r1218, %r1214, %r1213, 30;
	mov.b64 	%rd1424, {%r1218, %r1217};
	xor.b64  	%rd1425, %rd1424, %rd1423;
	shf.l.wrap.b32 	%r1219, %r1213, %r1214, 25;
	shf.l.wrap.b32 	%r1220, %r1214, %r1213, 25;
	mov.b64 	%rd1426, {%r1220, %r1219};
	xor.b64  	%rd1427, %rd1425, %rd1426;
	xor.b64  	%rd1428, %rd1408, %rd1358;
	xor.b64  	%rd1429, %rd1408, %rd1383;
	and.b64  	%rd1430, %rd1429, %rd1428;
	xor.b64  	%rd1431, %rd1430, %rd1408;
	add.s64 	%rd1432, %rd1421, %rd1431;
	add.s64 	%rd1433, %rd1432, %rd1427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd1422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd1422;
	}
	shf.r.wrap.b32 	%r1223, %r1222, %r1221, 14;
	shf.r.wrap.b32 	%r1224, %r1221, %r1222, 14;
	mov.b64 	%rd1434, {%r1224, %r1223};
	shf.r.wrap.b32 	%r1225, %r1222, %r1221, 18;
	shf.r.wrap.b32 	%r1226, %r1221, %r1222, 18;
	mov.b64 	%rd1435, {%r1226, %r1225};
	xor.b64  	%rd1436, %rd1435, %rd1434;
	shf.l.wrap.b32 	%r1227, %r1221, %r1222, 23;
	shf.l.wrap.b32 	%r1228, %r1222, %r1221, 23;
	mov.b64 	%rd1437, {%r1228, %r1227};
	xor.b64  	%rd1438, %rd1436, %rd1437;
	xor.b64  	%rd1439, %rd1397, %rd1372;
	and.b64  	%rd1440, %rd1422, %rd1439;
	xor.b64  	%rd1441, %rd1440, %rd1372;
	add.s64 	%rd1442, %rd1347, %rd1130;
	ld.const.u64 	%rd1443, [k_sha512+328];
	add.s64 	%rd1444, %rd1442, %rd1443;
	add.s64 	%rd1445, %rd1444, %rd1441;
	add.s64 	%rd1446, %rd1445, %rd1438;
	add.s64 	%rd1447, %rd1446, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1230}, %rd1433;
	}
	shf.r.wrap.b32 	%r1231, %r1230, %r1229, 28;
	shf.r.wrap.b32 	%r1232, %r1229, %r1230, 28;
	mov.b64 	%rd1448, {%r1232, %r1231};
	shf.l.wrap.b32 	%r1233, %r1229, %r1230, 30;
	shf.l.wrap.b32 	%r1234, %r1230, %r1229, 30;
	mov.b64 	%rd1449, {%r1234, %r1233};
	xor.b64  	%rd1450, %rd1449, %rd1448;
	shf.l.wrap.b32 	%r1235, %r1229, %r1230, 25;
	shf.l.wrap.b32 	%r1236, %r1230, %r1229, 25;
	mov.b64 	%rd1451, {%r1236, %r1235};
	xor.b64  	%rd1452, %rd1450, %rd1451;
	xor.b64  	%rd1453, %rd1433, %rd1383;
	xor.b64  	%rd1454, %rd1433, %rd1408;
	and.b64  	%rd1455, %rd1454, %rd1453;
	xor.b64  	%rd1456, %rd1455, %rd1433;
	add.s64 	%rd1457, %rd1446, %rd1456;
	add.s64 	%rd1458, %rd1457, %rd1452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1237,%dummy}, %rd1447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1238}, %rd1447;
	}
	shf.r.wrap.b32 	%r1239, %r1238, %r1237, 14;
	shf.r.wrap.b32 	%r1240, %r1237, %r1238, 14;
	mov.b64 	%rd1459, {%r1240, %r1239};
	shf.r.wrap.b32 	%r1241, %r1238, %r1237, 18;
	shf.r.wrap.b32 	%r1242, %r1237, %r1238, 18;
	mov.b64 	%rd1460, {%r1242, %r1241};
	xor.b64  	%rd1461, %rd1460, %rd1459;
	shf.l.wrap.b32 	%r1243, %r1237, %r1238, 23;
	shf.l.wrap.b32 	%r1244, %r1238, %r1237, 23;
	mov.b64 	%rd1462, {%r1244, %r1243};
	xor.b64  	%rd1463, %rd1461, %rd1462;
	xor.b64  	%rd1464, %rd1422, %rd1397;
	and.b64  	%rd1465, %rd1447, %rd1464;
	xor.b64  	%rd1466, %rd1465, %rd1397;
	add.s64 	%rd1467, %rd1372, %rd1143;
	ld.const.u64 	%rd1468, [k_sha512+336];
	add.s64 	%rd1469, %rd1467, %rd1468;
	add.s64 	%rd1470, %rd1469, %rd1466;
	add.s64 	%rd1471, %rd1470, %rd1463;
	add.s64 	%rd1472, %rd1471, %rd1383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd1458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd1458;
	}
	shf.r.wrap.b32 	%r1247, %r1246, %r1245, 28;
	shf.r.wrap.b32 	%r1248, %r1245, %r1246, 28;
	mov.b64 	%rd1473, {%r1248, %r1247};
	shf.l.wrap.b32 	%r1249, %r1245, %r1246, 30;
	shf.l.wrap.b32 	%r1250, %r1246, %r1245, 30;
	mov.b64 	%rd1474, {%r1250, %r1249};
	xor.b64  	%rd1475, %rd1474, %rd1473;
	shf.l.wrap.b32 	%r1251, %r1245, %r1246, 25;
	shf.l.wrap.b32 	%r1252, %r1246, %r1245, 25;
	mov.b64 	%rd1476, {%r1252, %r1251};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	xor.b64  	%rd1478, %rd1458, %rd1408;
	xor.b64  	%rd1479, %rd1458, %rd1433;
	and.b64  	%rd1480, %rd1479, %rd1478;
	xor.b64  	%rd1481, %rd1480, %rd1458;
	add.s64 	%rd1482, %rd1471, %rd1481;
	add.s64 	%rd1483, %rd1482, %rd1477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd1472;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 14;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 14;
	mov.b64 	%rd1484, {%r1256, %r1255};
	shf.r.wrap.b32 	%r1257, %r1254, %r1253, 18;
	shf.r.wrap.b32 	%r1258, %r1253, %r1254, 18;
	mov.b64 	%rd1485, {%r1258, %r1257};
	xor.b64  	%rd1486, %rd1485, %rd1484;
	shf.l.wrap.b32 	%r1259, %r1253, %r1254, 23;
	shf.l.wrap.b32 	%r1260, %r1254, %r1253, 23;
	mov.b64 	%rd1487, {%r1260, %r1259};
	xor.b64  	%rd1488, %rd1486, %rd1487;
	xor.b64  	%rd1489, %rd1447, %rd1422;
	and.b64  	%rd1490, %rd1472, %rd1489;
	xor.b64  	%rd1491, %rd1490, %rd1422;
	add.s64 	%rd1492, %rd1397, %rd1156;
	ld.const.u64 	%rd1493, [k_sha512+344];
	add.s64 	%rd1494, %rd1492, %rd1493;
	add.s64 	%rd1495, %rd1494, %rd1491;
	add.s64 	%rd1496, %rd1495, %rd1488;
	add.s64 	%rd1497, %rd1496, %rd1408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1483;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 28;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 28;
	mov.b64 	%rd1498, {%r1264, %r1263};
	shf.l.wrap.b32 	%r1265, %r1261, %r1262, 30;
	shf.l.wrap.b32 	%r1266, %r1262, %r1261, 30;
	mov.b64 	%rd1499, {%r1266, %r1265};
	xor.b64  	%rd1500, %rd1499, %rd1498;
	shf.l.wrap.b32 	%r1267, %r1261, %r1262, 25;
	shf.l.wrap.b32 	%r1268, %r1262, %r1261, 25;
	mov.b64 	%rd1501, {%r1268, %r1267};
	xor.b64  	%rd1502, %rd1500, %rd1501;
	xor.b64  	%rd1503, %rd1483, %rd1433;
	xor.b64  	%rd1504, %rd1483, %rd1458;
	and.b64  	%rd1505, %rd1504, %rd1503;
	xor.b64  	%rd1506, %rd1505, %rd1483;
	add.s64 	%rd1507, %rd1496, %rd1506;
	add.s64 	%rd1508, %rd1507, %rd1502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd1497;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 14;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 14;
	mov.b64 	%rd1509, {%r1272, %r1271};
	shf.r.wrap.b32 	%r1273, %r1270, %r1269, 18;
	shf.r.wrap.b32 	%r1274, %r1269, %r1270, 18;
	mov.b64 	%rd1510, {%r1274, %r1273};
	xor.b64  	%rd1511, %rd1510, %rd1509;
	shf.l.wrap.b32 	%r1275, %r1269, %r1270, 23;
	shf.l.wrap.b32 	%r1276, %r1270, %r1269, 23;
	mov.b64 	%rd1512, {%r1276, %r1275};
	xor.b64  	%rd1513, %rd1511, %rd1512;
	xor.b64  	%rd1514, %rd1472, %rd1447;
	and.b64  	%rd1515, %rd1497, %rd1514;
	xor.b64  	%rd1516, %rd1515, %rd1447;
	add.s64 	%rd1517, %rd1422, %rd1169;
	ld.const.u64 	%rd1518, [k_sha512+352];
	add.s64 	%rd1519, %rd1517, %rd1518;
	add.s64 	%rd1520, %rd1519, %rd1516;
	add.s64 	%rd1521, %rd1520, %rd1513;
	add.s64 	%rd1522, %rd1521, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd1508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1278}, %rd1508;
	}
	shf.r.wrap.b32 	%r1279, %r1278, %r1277, 28;
	shf.r.wrap.b32 	%r1280, %r1277, %r1278, 28;
	mov.b64 	%rd1523, {%r1280, %r1279};
	shf.l.wrap.b32 	%r1281, %r1277, %r1278, 30;
	shf.l.wrap.b32 	%r1282, %r1278, %r1277, 30;
	mov.b64 	%rd1524, {%r1282, %r1281};
	xor.b64  	%rd1525, %rd1524, %rd1523;
	shf.l.wrap.b32 	%r1283, %r1277, %r1278, 25;
	shf.l.wrap.b32 	%r1284, %r1278, %r1277, 25;
	mov.b64 	%rd1526, {%r1284, %r1283};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	xor.b64  	%rd1528, %rd1508, %rd1458;
	xor.b64  	%rd1529, %rd1508, %rd1483;
	and.b64  	%rd1530, %rd1529, %rd1528;
	xor.b64  	%rd1531, %rd1530, %rd1508;
	add.s64 	%rd1532, %rd1521, %rd1531;
	add.s64 	%rd1533, %rd1532, %rd1527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1522;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 14;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 14;
	mov.b64 	%rd1534, {%r1288, %r1287};
	shf.r.wrap.b32 	%r1289, %r1286, %r1285, 18;
	shf.r.wrap.b32 	%r1290, %r1285, %r1286, 18;
	mov.b64 	%rd1535, {%r1290, %r1289};
	xor.b64  	%rd1536, %rd1535, %rd1534;
	shf.l.wrap.b32 	%r1291, %r1285, %r1286, 23;
	shf.l.wrap.b32 	%r1292, %r1286, %r1285, 23;
	mov.b64 	%rd1537, {%r1292, %r1291};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	xor.b64  	%rd1539, %rd1497, %rd1472;
	and.b64  	%rd1540, %rd1522, %rd1539;
	xor.b64  	%rd1541, %rd1540, %rd1472;
	add.s64 	%rd1542, %rd1447, %rd1182;
	ld.const.u64 	%rd1543, [k_sha512+360];
	add.s64 	%rd1544, %rd1542, %rd1543;
	add.s64 	%rd1545, %rd1544, %rd1541;
	add.s64 	%rd1546, %rd1545, %rd1538;
	add.s64 	%rd1547, %rd1546, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd1533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1533;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 28;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 28;
	mov.b64 	%rd1548, {%r1296, %r1295};
	shf.l.wrap.b32 	%r1297, %r1293, %r1294, 30;
	shf.l.wrap.b32 	%r1298, %r1294, %r1293, 30;
	mov.b64 	%rd1549, {%r1298, %r1297};
	xor.b64  	%rd1550, %rd1549, %rd1548;
	shf.l.wrap.b32 	%r1299, %r1293, %r1294, 25;
	shf.l.wrap.b32 	%r1300, %r1294, %r1293, 25;
	mov.b64 	%rd1551, {%r1300, %r1299};
	xor.b64  	%rd1552, %rd1550, %rd1551;
	xor.b64  	%rd1553, %rd1533, %rd1483;
	xor.b64  	%rd1554, %rd1533, %rd1508;
	and.b64  	%rd1555, %rd1554, %rd1553;
	xor.b64  	%rd1556, %rd1555, %rd1533;
	add.s64 	%rd1557, %rd1546, %rd1556;
	add.s64 	%rd1558, %rd1557, %rd1552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd1547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd1547;
	}
	shf.r.wrap.b32 	%r1303, %r1302, %r1301, 14;
	shf.r.wrap.b32 	%r1304, %r1301, %r1302, 14;
	mov.b64 	%rd1559, {%r1304, %r1303};
	shf.r.wrap.b32 	%r1305, %r1302, %r1301, 18;
	shf.r.wrap.b32 	%r1306, %r1301, %r1302, 18;
	mov.b64 	%rd1560, {%r1306, %r1305};
	xor.b64  	%rd1561, %rd1560, %rd1559;
	shf.l.wrap.b32 	%r1307, %r1301, %r1302, 23;
	shf.l.wrap.b32 	%r1308, %r1302, %r1301, 23;
	mov.b64 	%rd1562, {%r1308, %r1307};
	xor.b64  	%rd1563, %rd1561, %rd1562;
	xor.b64  	%rd1564, %rd1522, %rd1497;
	and.b64  	%rd1565, %rd1547, %rd1564;
	xor.b64  	%rd1566, %rd1565, %rd1497;
	add.s64 	%rd1567, %rd1472, %rd1195;
	ld.const.u64 	%rd1568, [k_sha512+368];
	add.s64 	%rd1569, %rd1567, %rd1568;
	add.s64 	%rd1570, %rd1569, %rd1566;
	add.s64 	%rd1571, %rd1570, %rd1563;
	add.s64 	%rd1572, %rd1571, %rd1483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd1558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1310}, %rd1558;
	}
	shf.r.wrap.b32 	%r1311, %r1310, %r1309, 28;
	shf.r.wrap.b32 	%r1312, %r1309, %r1310, 28;
	mov.b64 	%rd1573, {%r1312, %r1311};
	shf.l.wrap.b32 	%r1313, %r1309, %r1310, 30;
	shf.l.wrap.b32 	%r1314, %r1310, %r1309, 30;
	mov.b64 	%rd1574, {%r1314, %r1313};
	xor.b64  	%rd1575, %rd1574, %rd1573;
	shf.l.wrap.b32 	%r1315, %r1309, %r1310, 25;
	shf.l.wrap.b32 	%r1316, %r1310, %r1309, 25;
	mov.b64 	%rd1576, {%r1316, %r1315};
	xor.b64  	%rd1577, %rd1575, %rd1576;
	xor.b64  	%rd1578, %rd1558, %rd1508;
	xor.b64  	%rd1579, %rd1558, %rd1533;
	and.b64  	%rd1580, %rd1579, %rd1578;
	xor.b64  	%rd1581, %rd1580, %rd1558;
	add.s64 	%rd1582, %rd1571, %rd1581;
	add.s64 	%rd1583, %rd1582, %rd1577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd1572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd1572;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 14;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 14;
	mov.b64 	%rd1584, {%r1320, %r1319};
	shf.r.wrap.b32 	%r1321, %r1318, %r1317, 18;
	shf.r.wrap.b32 	%r1322, %r1317, %r1318, 18;
	mov.b64 	%rd1585, {%r1322, %r1321};
	xor.b64  	%rd1586, %rd1585, %rd1584;
	shf.l.wrap.b32 	%r1323, %r1317, %r1318, 23;
	shf.l.wrap.b32 	%r1324, %r1318, %r1317, 23;
	mov.b64 	%rd1587, {%r1324, %r1323};
	xor.b64  	%rd1588, %rd1586, %rd1587;
	xor.b64  	%rd1589, %rd1547, %rd1522;
	and.b64  	%rd1590, %rd1572, %rd1589;
	xor.b64  	%rd1591, %rd1590, %rd1522;
	add.s64 	%rd1592, %rd1497, %rd1208;
	ld.const.u64 	%rd1593, [k_sha512+376];
	add.s64 	%rd1594, %rd1592, %rd1593;
	add.s64 	%rd1595, %rd1594, %rd1591;
	add.s64 	%rd1596, %rd1595, %rd1588;
	add.s64 	%rd1597, %rd1596, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1325,%dummy}, %rd1583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1326}, %rd1583;
	}
	shf.r.wrap.b32 	%r1327, %r1326, %r1325, 28;
	shf.r.wrap.b32 	%r1328, %r1325, %r1326, 28;
	mov.b64 	%rd1598, {%r1328, %r1327};
	shf.l.wrap.b32 	%r1329, %r1325, %r1326, 30;
	shf.l.wrap.b32 	%r1330, %r1326, %r1325, 30;
	mov.b64 	%rd1599, {%r1330, %r1329};
	xor.b64  	%rd1600, %rd1599, %rd1598;
	shf.l.wrap.b32 	%r1331, %r1325, %r1326, 25;
	shf.l.wrap.b32 	%r1332, %r1326, %r1325, 25;
	mov.b64 	%rd1601, {%r1332, %r1331};
	xor.b64  	%rd1602, %rd1600, %rd1601;
	xor.b64  	%rd1603, %rd1583, %rd1533;
	xor.b64  	%rd1604, %rd1583, %rd1558;
	and.b64  	%rd1605, %rd1604, %rd1603;
	xor.b64  	%rd1606, %rd1605, %rd1583;
	add.s64 	%rd1607, %rd1596, %rd1606;
	add.s64 	%rd1608, %rd1607, %rd1602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd1195;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 19;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 19;
	mov.b64 	%rd1609, {%r1336, %r1335};
	shf.l.wrap.b32 	%r1337, %r1333, %r1334, 3;
	shf.l.wrap.b32 	%r1338, %r1334, %r1333, 3;
	mov.b64 	%rd1610, {%r1338, %r1337};
	shr.u64 	%rd1611, %rd1195, 6;
	xor.b64  	%rd1612, %rd1609, %rd1611;
	xor.b64  	%rd1613, %rd1612, %rd1610;
	shf.r.wrap.b32 	%r1339, %r948, %r947, 1;
	shf.r.wrap.b32 	%r1340, %r947, %r948, 1;
	mov.b64 	%rd1614, {%r1340, %r1339};
	shf.r.wrap.b32 	%r1341, %r948, %r947, 8;
	shf.r.wrap.b32 	%r1342, %r947, %r948, 8;
	mov.b64 	%rd1615, {%r1342, %r1341};
	shr.u64 	%rd1616, %rd1026, 7;
	xor.b64  	%rd1617, %rd1614, %rd1616;
	xor.b64  	%rd1618, %rd1617, %rd1615;
	add.s64 	%rd1619, %rd1013, %rd1130;
	add.s64 	%rd1620, %rd1619, %rd1613;
	add.s64 	%rd1621, %rd1620, %rd1618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd1208;
	}
	shf.r.wrap.b32 	%r1345, %r1344, %r1343, 19;
	shf.r.wrap.b32 	%r1346, %r1343, %r1344, 19;
	mov.b64 	%rd1622, {%r1346, %r1345};
	shf.l.wrap.b32 	%r1347, %r1343, %r1344, 3;
	shf.l.wrap.b32 	%r1348, %r1344, %r1343, 3;
	mov.b64 	%rd1623, {%r1348, %r1347};
	shr.u64 	%rd1624, %rd1208, 6;
	xor.b64  	%rd1625, %rd1622, %rd1624;
	xor.b64  	%rd1626, %rd1625, %rd1623;
	shf.r.wrap.b32 	%r1349, %r958, %r957, 1;
	shf.r.wrap.b32 	%r1350, %r957, %r958, 1;
	mov.b64 	%rd1627, {%r1350, %r1349};
	shf.r.wrap.b32 	%r1351, %r958, %r957, 8;
	shf.r.wrap.b32 	%r1352, %r957, %r958, 8;
	mov.b64 	%rd1628, {%r1352, %r1351};
	shr.u64 	%rd1629, %rd1039, 7;
	xor.b64  	%rd1630, %rd1627, %rd1629;
	xor.b64  	%rd1631, %rd1630, %rd1628;
	add.s64 	%rd1632, %rd1026, %rd1143;
	add.s64 	%rd1633, %rd1632, %rd1626;
	add.s64 	%rd1634, %rd1633, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1353,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1354}, %rd1621;
	}
	shf.r.wrap.b32 	%r1355, %r1354, %r1353, 19;
	shf.r.wrap.b32 	%r1356, %r1353, %r1354, 19;
	mov.b64 	%rd1635, {%r1356, %r1355};
	shf.l.wrap.b32 	%r1357, %r1353, %r1354, 3;
	shf.l.wrap.b32 	%r1358, %r1354, %r1353, 3;
	mov.b64 	%rd1636, {%r1358, %r1357};
	shr.u64 	%rd1637, %rd1621, 6;
	xor.b64  	%rd1638, %rd1635, %rd1637;
	xor.b64  	%rd1639, %rd1638, %rd1636;
	shf.r.wrap.b32 	%r1359, %r968, %r967, 1;
	shf.r.wrap.b32 	%r1360, %r967, %r968, 1;
	mov.b64 	%rd1640, {%r1360, %r1359};
	shf.r.wrap.b32 	%r1361, %r968, %r967, 8;
	shf.r.wrap.b32 	%r1362, %r967, %r968, 8;
	mov.b64 	%rd1641, {%r1362, %r1361};
	shr.u64 	%rd1642, %rd1052, 7;
	xor.b64  	%rd1643, %rd1640, %rd1642;
	xor.b64  	%rd1644, %rd1643, %rd1641;
	add.s64 	%rd1645, %rd1039, %rd1156;
	add.s64 	%rd1646, %rd1645, %rd1639;
	add.s64 	%rd1647, %rd1646, %rd1644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1363,%dummy}, %rd1634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1364}, %rd1634;
	}
	shf.r.wrap.b32 	%r1365, %r1364, %r1363, 19;
	shf.r.wrap.b32 	%r1366, %r1363, %r1364, 19;
	mov.b64 	%rd1648, {%r1366, %r1365};
	shf.l.wrap.b32 	%r1367, %r1363, %r1364, 3;
	shf.l.wrap.b32 	%r1368, %r1364, %r1363, 3;
	mov.b64 	%rd1649, {%r1368, %r1367};
	shr.u64 	%rd1650, %rd1634, 6;
	xor.b64  	%rd1651, %rd1648, %rd1650;
	xor.b64  	%rd1652, %rd1651, %rd1649;
	shf.r.wrap.b32 	%r1369, %r978, %r977, 1;
	shf.r.wrap.b32 	%r1370, %r977, %r978, 1;
	mov.b64 	%rd1653, {%r1370, %r1369};
	shf.r.wrap.b32 	%r1371, %r978, %r977, 8;
	shf.r.wrap.b32 	%r1372, %r977, %r978, 8;
	mov.b64 	%rd1654, {%r1372, %r1371};
	shr.u64 	%rd1655, %rd1065, 7;
	xor.b64  	%rd1656, %rd1653, %rd1655;
	xor.b64  	%rd1657, %rd1656, %rd1654;
	add.s64 	%rd1658, %rd1169, %rd1052;
	add.s64 	%rd1659, %rd1658, %rd1652;
	add.s64 	%rd1660, %rd1659, %rd1657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd1647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd1647;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 19;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 19;
	mov.b64 	%rd1661, {%r1376, %r1375};
	shf.l.wrap.b32 	%r1377, %r1373, %r1374, 3;
	shf.l.wrap.b32 	%r1378, %r1374, %r1373, 3;
	mov.b64 	%rd1662, {%r1378, %r1377};
	shr.u64 	%rd1663, %rd1647, 6;
	xor.b64  	%rd1664, %rd1661, %rd1663;
	xor.b64  	%rd1665, %rd1664, %rd1662;
	shf.r.wrap.b32 	%r1379, %r988, %r987, 1;
	shf.r.wrap.b32 	%r1380, %r987, %r988, 1;
	mov.b64 	%rd1666, {%r1380, %r1379};
	shf.r.wrap.b32 	%r1381, %r988, %r987, 8;
	shf.r.wrap.b32 	%r1382, %r987, %r988, 8;
	mov.b64 	%rd1667, {%r1382, %r1381};
	shr.u64 	%rd1668, %rd1078, 7;
	xor.b64  	%rd1669, %rd1666, %rd1668;
	xor.b64  	%rd1670, %rd1669, %rd1667;
	add.s64 	%rd1671, %rd1182, %rd1065;
	add.s64 	%rd1672, %rd1671, %rd1665;
	add.s64 	%rd1673, %rd1672, %rd1670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1383,%dummy}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1384}, %rd1660;
	}
	shf.r.wrap.b32 	%r1385, %r1384, %r1383, 19;
	shf.r.wrap.b32 	%r1386, %r1383, %r1384, 19;
	mov.b64 	%rd1674, {%r1386, %r1385};
	shf.l.wrap.b32 	%r1387, %r1383, %r1384, 3;
	shf.l.wrap.b32 	%r1388, %r1384, %r1383, 3;
	mov.b64 	%rd1675, {%r1388, %r1387};
	shr.u64 	%rd1676, %rd1660, 6;
	xor.b64  	%rd1677, %rd1674, %rd1676;
	xor.b64  	%rd1678, %rd1677, %rd1675;
	shf.r.wrap.b32 	%r1389, %r998, %r997, 1;
	shf.r.wrap.b32 	%r1390, %r997, %r998, 1;
	mov.b64 	%rd1679, {%r1390, %r1389};
	shf.r.wrap.b32 	%r1391, %r998, %r997, 8;
	shf.r.wrap.b32 	%r1392, %r997, %r998, 8;
	mov.b64 	%rd1680, {%r1392, %r1391};
	shr.u64 	%rd1681, %rd1091, 7;
	xor.b64  	%rd1682, %rd1679, %rd1681;
	xor.b64  	%rd1683, %rd1682, %rd1680;
	add.s64 	%rd1684, %rd1195, %rd1078;
	add.s64 	%rd1685, %rd1684, %rd1678;
	add.s64 	%rd1686, %rd1685, %rd1683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1393,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1394}, %rd1673;
	}
	shf.r.wrap.b32 	%r1395, %r1394, %r1393, 19;
	shf.r.wrap.b32 	%r1396, %r1393, %r1394, 19;
	mov.b64 	%rd1687, {%r1396, %r1395};
	shf.l.wrap.b32 	%r1397, %r1393, %r1394, 3;
	shf.l.wrap.b32 	%r1398, %r1394, %r1393, 3;
	mov.b64 	%rd1688, {%r1398, %r1397};
	shr.u64 	%rd1689, %rd1673, 6;
	xor.b64  	%rd1690, %rd1687, %rd1689;
	xor.b64  	%rd1691, %rd1690, %rd1688;
	shf.r.wrap.b32 	%r1399, %r1008, %r1007, 1;
	shf.r.wrap.b32 	%r1400, %r1007, %r1008, 1;
	mov.b64 	%rd1692, {%r1400, %r1399};
	shf.r.wrap.b32 	%r1401, %r1008, %r1007, 8;
	shf.r.wrap.b32 	%r1402, %r1007, %r1008, 8;
	mov.b64 	%rd1693, {%r1402, %r1401};
	shr.u64 	%rd1694, %rd1104, 7;
	xor.b64  	%rd1695, %rd1692, %rd1694;
	xor.b64  	%rd1696, %rd1695, %rd1693;
	add.s64 	%rd1697, %rd1208, %rd1091;
	add.s64 	%rd1698, %rd1697, %rd1691;
	add.s64 	%rd1699, %rd1698, %rd1696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1403,%dummy}, %rd1686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1404}, %rd1686;
	}
	shf.r.wrap.b32 	%r1405, %r1404, %r1403, 19;
	shf.r.wrap.b32 	%r1406, %r1403, %r1404, 19;
	mov.b64 	%rd1700, {%r1406, %r1405};
	shf.l.wrap.b32 	%r1407, %r1403, %r1404, 3;
	shf.l.wrap.b32 	%r1408, %r1404, %r1403, 3;
	mov.b64 	%rd1701, {%r1408, %r1407};
	shr.u64 	%rd1702, %rd1686, 6;
	xor.b64  	%rd1703, %rd1700, %rd1702;
	xor.b64  	%rd1704, %rd1703, %rd1701;
	shf.r.wrap.b32 	%r1409, %r1018, %r1017, 1;
	shf.r.wrap.b32 	%r1410, %r1017, %r1018, 1;
	mov.b64 	%rd1705, {%r1410, %r1409};
	shf.r.wrap.b32 	%r1411, %r1018, %r1017, 8;
	shf.r.wrap.b32 	%r1412, %r1017, %r1018, 8;
	mov.b64 	%rd1706, {%r1412, %r1411};
	shr.u64 	%rd1707, %rd1117, 7;
	xor.b64  	%rd1708, %rd1705, %rd1707;
	xor.b64  	%rd1709, %rd1708, %rd1706;
	add.s64 	%rd1710, %rd1621, %rd1104;
	add.s64 	%rd1711, %rd1710, %rd1704;
	add.s64 	%rd1712, %rd1711, %rd1709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1413,%dummy}, %rd1699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1414}, %rd1699;
	}
	shf.r.wrap.b32 	%r1415, %r1414, %r1413, 19;
	shf.r.wrap.b32 	%r1416, %r1413, %r1414, 19;
	mov.b64 	%rd1713, {%r1416, %r1415};
	shf.l.wrap.b32 	%r1417, %r1413, %r1414, 3;
	shf.l.wrap.b32 	%r1418, %r1414, %r1413, 3;
	mov.b64 	%rd1714, {%r1418, %r1417};
	shr.u64 	%rd1715, %rd1699, 6;
	xor.b64  	%rd1716, %rd1713, %rd1715;
	xor.b64  	%rd1717, %rd1716, %rd1714;
	shf.r.wrap.b32 	%r1419, %r1028, %r1027, 1;
	shf.r.wrap.b32 	%r1420, %r1027, %r1028, 1;
	mov.b64 	%rd1718, {%r1420, %r1419};
	shf.r.wrap.b32 	%r1421, %r1028, %r1027, 8;
	shf.r.wrap.b32 	%r1422, %r1027, %r1028, 8;
	mov.b64 	%rd1719, {%r1422, %r1421};
	shr.u64 	%rd1720, %rd1130, 7;
	xor.b64  	%rd1721, %rd1718, %rd1720;
	xor.b64  	%rd1722, %rd1721, %rd1719;
	add.s64 	%rd1723, %rd1634, %rd1117;
	add.s64 	%rd1724, %rd1723, %rd1717;
	add.s64 	%rd1725, %rd1724, %rd1722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd1712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd1712;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 19;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 19;
	mov.b64 	%rd1726, {%r1426, %r1425};
	shf.l.wrap.b32 	%r1427, %r1423, %r1424, 3;
	shf.l.wrap.b32 	%r1428, %r1424, %r1423, 3;
	mov.b64 	%rd1727, {%r1428, %r1427};
	shr.u64 	%rd1728, %rd1712, 6;
	xor.b64  	%rd1729, %rd1726, %rd1728;
	xor.b64  	%rd1730, %rd1729, %rd1727;
	shf.r.wrap.b32 	%r1429, %r1038, %r1037, 1;
	shf.r.wrap.b32 	%r1430, %r1037, %r1038, 1;
	mov.b64 	%rd1731, {%r1430, %r1429};
	shf.r.wrap.b32 	%r1431, %r1038, %r1037, 8;
	shf.r.wrap.b32 	%r1432, %r1037, %r1038, 8;
	mov.b64 	%rd1732, {%r1432, %r1431};
	shr.u64 	%rd1733, %rd1143, 7;
	xor.b64  	%rd1734, %rd1731, %rd1733;
	xor.b64  	%rd1735, %rd1734, %rd1732;
	add.s64 	%rd1736, %rd1647, %rd1130;
	add.s64 	%rd1737, %rd1736, %rd1730;
	add.s64 	%rd1738, %rd1737, %rd1735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd1725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd1725;
	}
	shf.r.wrap.b32 	%r1435, %r1434, %r1433, 19;
	shf.r.wrap.b32 	%r1436, %r1433, %r1434, 19;
	mov.b64 	%rd1739, {%r1436, %r1435};
	shf.l.wrap.b32 	%r1437, %r1433, %r1434, 3;
	shf.l.wrap.b32 	%r1438, %r1434, %r1433, 3;
	mov.b64 	%rd1740, {%r1438, %r1437};
	shr.u64 	%rd1741, %rd1725, 6;
	xor.b64  	%rd1742, %rd1739, %rd1741;
	xor.b64  	%rd1743, %rd1742, %rd1740;
	shf.r.wrap.b32 	%r1439, %r1048, %r1047, 1;
	shf.r.wrap.b32 	%r1440, %r1047, %r1048, 1;
	mov.b64 	%rd1744, {%r1440, %r1439};
	shf.r.wrap.b32 	%r1441, %r1048, %r1047, 8;
	shf.r.wrap.b32 	%r1442, %r1047, %r1048, 8;
	mov.b64 	%rd1745, {%r1442, %r1441};
	shr.u64 	%rd1746, %rd1156, 7;
	xor.b64  	%rd1747, %rd1744, %rd1746;
	xor.b64  	%rd1748, %rd1747, %rd1745;
	add.s64 	%rd1749, %rd1660, %rd1143;
	add.s64 	%rd1750, %rd1749, %rd1743;
	add.s64 	%rd1751, %rd1750, %rd1748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1443,%dummy}, %rd1738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1444}, %rd1738;
	}
	shf.r.wrap.b32 	%r1445, %r1444, %r1443, 19;
	shf.r.wrap.b32 	%r1446, %r1443, %r1444, 19;
	mov.b64 	%rd1752, {%r1446, %r1445};
	shf.l.wrap.b32 	%r1447, %r1443, %r1444, 3;
	shf.l.wrap.b32 	%r1448, %r1444, %r1443, 3;
	mov.b64 	%rd1753, {%r1448, %r1447};
	shr.u64 	%rd1754, %rd1738, 6;
	xor.b64  	%rd1755, %rd1752, %rd1754;
	xor.b64  	%rd1756, %rd1755, %rd1753;
	shf.r.wrap.b32 	%r1449, %r1058, %r1057, 1;
	shf.r.wrap.b32 	%r1450, %r1057, %r1058, 1;
	mov.b64 	%rd1757, {%r1450, %r1449};
	shf.r.wrap.b32 	%r1451, %r1058, %r1057, 8;
	shf.r.wrap.b32 	%r1452, %r1057, %r1058, 8;
	mov.b64 	%rd1758, {%r1452, %r1451};
	shr.u64 	%rd1759, %rd1169, 7;
	xor.b64  	%rd1760, %rd1757, %rd1759;
	xor.b64  	%rd1761, %rd1760, %rd1758;
	add.s64 	%rd1762, %rd1673, %rd1156;
	add.s64 	%rd1763, %rd1762, %rd1756;
	add.s64 	%rd1764, %rd1763, %rd1761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd1751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd1751;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 19;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 19;
	mov.b64 	%rd1765, {%r1456, %r1455};
	shf.l.wrap.b32 	%r1457, %r1453, %r1454, 3;
	shf.l.wrap.b32 	%r1458, %r1454, %r1453, 3;
	mov.b64 	%rd1766, {%r1458, %r1457};
	shr.u64 	%rd1767, %rd1751, 6;
	xor.b64  	%rd1768, %rd1765, %rd1767;
	xor.b64  	%rd1769, %rd1768, %rd1766;
	shf.r.wrap.b32 	%r1459, %r1068, %r1067, 1;
	shf.r.wrap.b32 	%r1460, %r1067, %r1068, 1;
	mov.b64 	%rd1770, {%r1460, %r1459};
	shf.r.wrap.b32 	%r1461, %r1068, %r1067, 8;
	shf.r.wrap.b32 	%r1462, %r1067, %r1068, 8;
	mov.b64 	%rd1771, {%r1462, %r1461};
	shr.u64 	%rd1772, %rd1182, 7;
	xor.b64  	%rd1773, %rd1770, %rd1772;
	xor.b64  	%rd1774, %rd1773, %rd1771;
	add.s64 	%rd1775, %rd1686, %rd1169;
	add.s64 	%rd1776, %rd1775, %rd1769;
	add.s64 	%rd1777, %rd1776, %rd1774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1463,%dummy}, %rd1764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1464}, %rd1764;
	}
	shf.r.wrap.b32 	%r1465, %r1464, %r1463, 19;
	shf.r.wrap.b32 	%r1466, %r1463, %r1464, 19;
	mov.b64 	%rd1778, {%r1466, %r1465};
	shf.l.wrap.b32 	%r1467, %r1463, %r1464, 3;
	shf.l.wrap.b32 	%r1468, %r1464, %r1463, 3;
	mov.b64 	%rd1779, {%r1468, %r1467};
	shr.u64 	%rd1780, %rd1764, 6;
	xor.b64  	%rd1781, %rd1778, %rd1780;
	xor.b64  	%rd1782, %rd1781, %rd1779;
	shf.r.wrap.b32 	%r1469, %r1334, %r1333, 1;
	shf.r.wrap.b32 	%r1470, %r1333, %r1334, 1;
	mov.b64 	%rd1783, {%r1470, %r1469};
	shf.r.wrap.b32 	%r1471, %r1334, %r1333, 8;
	shf.r.wrap.b32 	%r1472, %r1333, %r1334, 8;
	mov.b64 	%rd1784, {%r1472, %r1471};
	shr.u64 	%rd1785, %rd1195, 7;
	xor.b64  	%rd1786, %rd1783, %rd1785;
	xor.b64  	%rd1787, %rd1786, %rd1784;
	add.s64 	%rd1788, %rd1699, %rd1182;
	add.s64 	%rd1789, %rd1788, %rd1782;
	add.s64 	%rd1790, %rd1789, %rd1787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1473,%dummy}, %rd1777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1474}, %rd1777;
	}
	shf.r.wrap.b32 	%r1475, %r1474, %r1473, 19;
	shf.r.wrap.b32 	%r1476, %r1473, %r1474, 19;
	mov.b64 	%rd1791, {%r1476, %r1475};
	shf.l.wrap.b32 	%r1477, %r1473, %r1474, 3;
	shf.l.wrap.b32 	%r1478, %r1474, %r1473, 3;
	mov.b64 	%rd1792, {%r1478, %r1477};
	shr.u64 	%rd1793, %rd1777, 6;
	xor.b64  	%rd1794, %rd1791, %rd1793;
	xor.b64  	%rd1795, %rd1794, %rd1792;
	shf.r.wrap.b32 	%r1479, %r1344, %r1343, 1;
	shf.r.wrap.b32 	%r1480, %r1343, %r1344, 1;
	mov.b64 	%rd1796, {%r1480, %r1479};
	shf.r.wrap.b32 	%r1481, %r1344, %r1343, 8;
	shf.r.wrap.b32 	%r1482, %r1343, %r1344, 8;
	mov.b64 	%rd1797, {%r1482, %r1481};
	shr.u64 	%rd1798, %rd1208, 7;
	xor.b64  	%rd1799, %rd1796, %rd1798;
	xor.b64  	%rd1800, %rd1799, %rd1797;
	add.s64 	%rd1801, %rd1712, %rd1195;
	add.s64 	%rd1802, %rd1801, %rd1795;
	add.s64 	%rd1803, %rd1802, %rd1800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1483,%dummy}, %rd1790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1484}, %rd1790;
	}
	shf.r.wrap.b32 	%r1485, %r1484, %r1483, 19;
	shf.r.wrap.b32 	%r1486, %r1483, %r1484, 19;
	mov.b64 	%rd1804, {%r1486, %r1485};
	shf.l.wrap.b32 	%r1487, %r1483, %r1484, 3;
	shf.l.wrap.b32 	%r1488, %r1484, %r1483, 3;
	mov.b64 	%rd1805, {%r1488, %r1487};
	shr.u64 	%rd1806, %rd1790, 6;
	xor.b64  	%rd1807, %rd1804, %rd1806;
	xor.b64  	%rd1808, %rd1807, %rd1805;
	shf.r.wrap.b32 	%r1489, %r1354, %r1353, 1;
	shf.r.wrap.b32 	%r1490, %r1353, %r1354, 1;
	mov.b64 	%rd1809, {%r1490, %r1489};
	shf.r.wrap.b32 	%r1491, %r1354, %r1353, 8;
	shf.r.wrap.b32 	%r1492, %r1353, %r1354, 8;
	mov.b64 	%rd1810, {%r1492, %r1491};
	shr.u64 	%rd1811, %rd1621, 7;
	xor.b64  	%rd1812, %rd1809, %rd1811;
	xor.b64  	%rd1813, %rd1812, %rd1810;
	add.s64 	%rd1814, %rd1725, %rd1208;
	add.s64 	%rd1815, %rd1814, %rd1808;
	add.s64 	%rd1816, %rd1815, %rd1813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd1597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd1597;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 14;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 14;
	mov.b64 	%rd1817, {%r1496, %r1495};
	shf.r.wrap.b32 	%r1497, %r1494, %r1493, 18;
	shf.r.wrap.b32 	%r1498, %r1493, %r1494, 18;
	mov.b64 	%rd1818, {%r1498, %r1497};
	xor.b64  	%rd1819, %rd1818, %rd1817;
	shf.l.wrap.b32 	%r1499, %r1493, %r1494, 23;
	shf.l.wrap.b32 	%r1500, %r1494, %r1493, 23;
	mov.b64 	%rd1820, {%r1500, %r1499};
	xor.b64  	%rd1821, %rd1819, %rd1820;
	xor.b64  	%rd1822, %rd1572, %rd1547;
	and.b64  	%rd1823, %rd1822, %rd1597;
	xor.b64  	%rd1824, %rd1823, %rd1547;
	add.s64 	%rd1825, %rd1824, %rd1522;
	add.s64 	%rd1826, %rd1825, %rd1621;
	ld.const.u64 	%rd1827, [k_sha512+384];
	add.s64 	%rd1828, %rd1826, %rd1827;
	add.s64 	%rd1829, %rd1828, %rd1821;
	add.s64 	%rd1830, %rd1829, %rd1533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1501,%dummy}, %rd1608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1502}, %rd1608;
	}
	shf.r.wrap.b32 	%r1503, %r1502, %r1501, 28;
	shf.r.wrap.b32 	%r1504, %r1501, %r1502, 28;
	mov.b64 	%rd1831, {%r1504, %r1503};
	shf.l.wrap.b32 	%r1505, %r1501, %r1502, 30;
	shf.l.wrap.b32 	%r1506, %r1502, %r1501, 30;
	mov.b64 	%rd1832, {%r1506, %r1505};
	xor.b64  	%rd1833, %rd1832, %rd1831;
	shf.l.wrap.b32 	%r1507, %r1501, %r1502, 25;
	shf.l.wrap.b32 	%r1508, %r1502, %r1501, 25;
	mov.b64 	%rd1834, {%r1508, %r1507};
	xor.b64  	%rd1835, %rd1833, %rd1834;
	xor.b64  	%rd1836, %rd1608, %rd1558;
	xor.b64  	%rd1837, %rd1608, %rd1583;
	and.b64  	%rd1838, %rd1837, %rd1836;
	xor.b64  	%rd1839, %rd1838, %rd1608;
	add.s64 	%rd1840, %rd1829, %rd1839;
	add.s64 	%rd1841, %rd1840, %rd1835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1509,%dummy}, %rd1830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1510}, %rd1830;
	}
	shf.r.wrap.b32 	%r1511, %r1510, %r1509, 14;
	shf.r.wrap.b32 	%r1512, %r1509, %r1510, 14;
	mov.b64 	%rd1842, {%r1512, %r1511};
	shf.r.wrap.b32 	%r1513, %r1510, %r1509, 18;
	shf.r.wrap.b32 	%r1514, %r1509, %r1510, 18;
	mov.b64 	%rd1843, {%r1514, %r1513};
	xor.b64  	%rd1844, %rd1843, %rd1842;
	shf.l.wrap.b32 	%r1515, %r1509, %r1510, 23;
	shf.l.wrap.b32 	%r1516, %r1510, %r1509, 23;
	mov.b64 	%rd1845, {%r1516, %r1515};
	xor.b64  	%rd1846, %rd1844, %rd1845;
	xor.b64  	%rd1847, %rd1597, %rd1572;
	and.b64  	%rd1848, %rd1830, %rd1847;
	xor.b64  	%rd1849, %rd1848, %rd1572;
	add.s64 	%rd1850, %rd1634, %rd1547;
	ld.const.u64 	%rd1851, [k_sha512+392];
	add.s64 	%rd1852, %rd1850, %rd1851;
	add.s64 	%rd1853, %rd1852, %rd1849;
	add.s64 	%rd1854, %rd1853, %rd1846;
	add.s64 	%rd1855, %rd1854, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1517,%dummy}, %rd1841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1518}, %rd1841;
	}
	shf.r.wrap.b32 	%r1519, %r1518, %r1517, 28;
	shf.r.wrap.b32 	%r1520, %r1517, %r1518, 28;
	mov.b64 	%rd1856, {%r1520, %r1519};
	shf.l.wrap.b32 	%r1521, %r1517, %r1518, 30;
	shf.l.wrap.b32 	%r1522, %r1518, %r1517, 30;
	mov.b64 	%rd1857, {%r1522, %r1521};
	xor.b64  	%rd1858, %rd1857, %rd1856;
	shf.l.wrap.b32 	%r1523, %r1517, %r1518, 25;
	shf.l.wrap.b32 	%r1524, %r1518, %r1517, 25;
	mov.b64 	%rd1859, {%r1524, %r1523};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	xor.b64  	%rd1861, %rd1841, %rd1583;
	xor.b64  	%rd1862, %rd1841, %rd1608;
	and.b64  	%rd1863, %rd1862, %rd1861;
	xor.b64  	%rd1864, %rd1863, %rd1841;
	add.s64 	%rd1865, %rd1854, %rd1864;
	add.s64 	%rd1866, %rd1865, %rd1860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1525,%dummy}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd1855;
	}
	shf.r.wrap.b32 	%r1527, %r1526, %r1525, 14;
	shf.r.wrap.b32 	%r1528, %r1525, %r1526, 14;
	mov.b64 	%rd1867, {%r1528, %r1527};
	shf.r.wrap.b32 	%r1529, %r1526, %r1525, 18;
	shf.r.wrap.b32 	%r1530, %r1525, %r1526, 18;
	mov.b64 	%rd1868, {%r1530, %r1529};
	xor.b64  	%rd1869, %rd1868, %rd1867;
	shf.l.wrap.b32 	%r1531, %r1525, %r1526, 23;
	shf.l.wrap.b32 	%r1532, %r1526, %r1525, 23;
	mov.b64 	%rd1870, {%r1532, %r1531};
	xor.b64  	%rd1871, %rd1869, %rd1870;
	xor.b64  	%rd1872, %rd1830, %rd1597;
	and.b64  	%rd1873, %rd1855, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1597;
	add.s64 	%rd1875, %rd1647, %rd1572;
	ld.const.u64 	%rd1876, [k_sha512+400];
	add.s64 	%rd1877, %rd1875, %rd1876;
	add.s64 	%rd1878, %rd1877, %rd1874;
	add.s64 	%rd1879, %rd1878, %rd1871;
	add.s64 	%rd1880, %rd1879, %rd1583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1533,%dummy}, %rd1866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1534}, %rd1866;
	}
	shf.r.wrap.b32 	%r1535, %r1534, %r1533, 28;
	shf.r.wrap.b32 	%r1536, %r1533, %r1534, 28;
	mov.b64 	%rd1881, {%r1536, %r1535};
	shf.l.wrap.b32 	%r1537, %r1533, %r1534, 30;
	shf.l.wrap.b32 	%r1538, %r1534, %r1533, 30;
	mov.b64 	%rd1882, {%r1538, %r1537};
	xor.b64  	%rd1883, %rd1882, %rd1881;
	shf.l.wrap.b32 	%r1539, %r1533, %r1534, 25;
	shf.l.wrap.b32 	%r1540, %r1534, %r1533, 25;
	mov.b64 	%rd1884, {%r1540, %r1539};
	xor.b64  	%rd1885, %rd1883, %rd1884;
	xor.b64  	%rd1886, %rd1866, %rd1608;
	xor.b64  	%rd1887, %rd1866, %rd1841;
	and.b64  	%rd1888, %rd1887, %rd1886;
	xor.b64  	%rd1889, %rd1888, %rd1866;
	add.s64 	%rd1890, %rd1879, %rd1889;
	add.s64 	%rd1891, %rd1890, %rd1885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1541,%dummy}, %rd1880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1542}, %rd1880;
	}
	shf.r.wrap.b32 	%r1543, %r1542, %r1541, 14;
	shf.r.wrap.b32 	%r1544, %r1541, %r1542, 14;
	mov.b64 	%rd1892, {%r1544, %r1543};
	shf.r.wrap.b32 	%r1545, %r1542, %r1541, 18;
	shf.r.wrap.b32 	%r1546, %r1541, %r1542, 18;
	mov.b64 	%rd1893, {%r1546, %r1545};
	xor.b64  	%rd1894, %rd1893, %rd1892;
	shf.l.wrap.b32 	%r1547, %r1541, %r1542, 23;
	shf.l.wrap.b32 	%r1548, %r1542, %r1541, 23;
	mov.b64 	%rd1895, {%r1548, %r1547};
	xor.b64  	%rd1896, %rd1894, %rd1895;
	xor.b64  	%rd1897, %rd1855, %rd1830;
	and.b64  	%rd1898, %rd1880, %rd1897;
	xor.b64  	%rd1899, %rd1898, %rd1830;
	add.s64 	%rd1900, %rd1660, %rd1597;
	ld.const.u64 	%rd1901, [k_sha512+408];
	add.s64 	%rd1902, %rd1900, %rd1901;
	add.s64 	%rd1903, %rd1902, %rd1899;
	add.s64 	%rd1904, %rd1903, %rd1896;
	add.s64 	%rd1905, %rd1904, %rd1608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1549,%dummy}, %rd1891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1550}, %rd1891;
	}
	shf.r.wrap.b32 	%r1551, %r1550, %r1549, 28;
	shf.r.wrap.b32 	%r1552, %r1549, %r1550, 28;
	mov.b64 	%rd1906, {%r1552, %r1551};
	shf.l.wrap.b32 	%r1553, %r1549, %r1550, 30;
	shf.l.wrap.b32 	%r1554, %r1550, %r1549, 30;
	mov.b64 	%rd1907, {%r1554, %r1553};
	xor.b64  	%rd1908, %rd1907, %rd1906;
	shf.l.wrap.b32 	%r1555, %r1549, %r1550, 25;
	shf.l.wrap.b32 	%r1556, %r1550, %r1549, 25;
	mov.b64 	%rd1909, {%r1556, %r1555};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	xor.b64  	%rd1911, %rd1891, %rd1841;
	xor.b64  	%rd1912, %rd1891, %rd1866;
	and.b64  	%rd1913, %rd1912, %rd1911;
	xor.b64  	%rd1914, %rd1913, %rd1891;
	add.s64 	%rd1915, %rd1904, %rd1914;
	add.s64 	%rd1916, %rd1915, %rd1910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1557,%dummy}, %rd1905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1558}, %rd1905;
	}
	shf.r.wrap.b32 	%r1559, %r1558, %r1557, 14;
	shf.r.wrap.b32 	%r1560, %r1557, %r1558, 14;
	mov.b64 	%rd1917, {%r1560, %r1559};
	shf.r.wrap.b32 	%r1561, %r1558, %r1557, 18;
	shf.r.wrap.b32 	%r1562, %r1557, %r1558, 18;
	mov.b64 	%rd1918, {%r1562, %r1561};
	xor.b64  	%rd1919, %rd1918, %rd1917;
	shf.l.wrap.b32 	%r1563, %r1557, %r1558, 23;
	shf.l.wrap.b32 	%r1564, %r1558, %r1557, 23;
	mov.b64 	%rd1920, {%r1564, %r1563};
	xor.b64  	%rd1921, %rd1919, %rd1920;
	xor.b64  	%rd1922, %rd1880, %rd1855;
	and.b64  	%rd1923, %rd1905, %rd1922;
	xor.b64  	%rd1924, %rd1923, %rd1855;
	add.s64 	%rd1925, %rd1830, %rd1673;
	ld.const.u64 	%rd1926, [k_sha512+416];
	add.s64 	%rd1927, %rd1925, %rd1926;
	add.s64 	%rd1928, %rd1927, %rd1924;
	add.s64 	%rd1929, %rd1928, %rd1921;
	add.s64 	%rd1930, %rd1929, %rd1841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1565,%dummy}, %rd1916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1566}, %rd1916;
	}
	shf.r.wrap.b32 	%r1567, %r1566, %r1565, 28;
	shf.r.wrap.b32 	%r1568, %r1565, %r1566, 28;
	mov.b64 	%rd1931, {%r1568, %r1567};
	shf.l.wrap.b32 	%r1569, %r1565, %r1566, 30;
	shf.l.wrap.b32 	%r1570, %r1566, %r1565, 30;
	mov.b64 	%rd1932, {%r1570, %r1569};
	xor.b64  	%rd1933, %rd1932, %rd1931;
	shf.l.wrap.b32 	%r1571, %r1565, %r1566, 25;
	shf.l.wrap.b32 	%r1572, %r1566, %r1565, 25;
	mov.b64 	%rd1934, {%r1572, %r1571};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	xor.b64  	%rd1936, %rd1916, %rd1866;
	xor.b64  	%rd1937, %rd1916, %rd1891;
	and.b64  	%rd1938, %rd1937, %rd1936;
	xor.b64  	%rd1939, %rd1938, %rd1916;
	add.s64 	%rd1940, %rd1929, %rd1939;
	add.s64 	%rd1941, %rd1940, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1573,%dummy}, %rd1930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1574}, %rd1930;
	}
	shf.r.wrap.b32 	%r1575, %r1574, %r1573, 14;
	shf.r.wrap.b32 	%r1576, %r1573, %r1574, 14;
	mov.b64 	%rd1942, {%r1576, %r1575};
	shf.r.wrap.b32 	%r1577, %r1574, %r1573, 18;
	shf.r.wrap.b32 	%r1578, %r1573, %r1574, 18;
	mov.b64 	%rd1943, {%r1578, %r1577};
	xor.b64  	%rd1944, %rd1943, %rd1942;
	shf.l.wrap.b32 	%r1579, %r1573, %r1574, 23;
	shf.l.wrap.b32 	%r1580, %r1574, %r1573, 23;
	mov.b64 	%rd1945, {%r1580, %r1579};
	xor.b64  	%rd1946, %rd1944, %rd1945;
	xor.b64  	%rd1947, %rd1905, %rd1880;
	and.b64  	%rd1948, %rd1930, %rd1947;
	xor.b64  	%rd1949, %rd1948, %rd1880;
	add.s64 	%rd1950, %rd1855, %rd1686;
	ld.const.u64 	%rd1951, [k_sha512+424];
	add.s64 	%rd1952, %rd1950, %rd1951;
	add.s64 	%rd1953, %rd1952, %rd1949;
	add.s64 	%rd1954, %rd1953, %rd1946;
	add.s64 	%rd1955, %rd1954, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd1941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1582}, %rd1941;
	}
	shf.r.wrap.b32 	%r1583, %r1582, %r1581, 28;
	shf.r.wrap.b32 	%r1584, %r1581, %r1582, 28;
	mov.b64 	%rd1956, {%r1584, %r1583};
	shf.l.wrap.b32 	%r1585, %r1581, %r1582, 30;
	shf.l.wrap.b32 	%r1586, %r1582, %r1581, 30;
	mov.b64 	%rd1957, {%r1586, %r1585};
	xor.b64  	%rd1958, %rd1957, %rd1956;
	shf.l.wrap.b32 	%r1587, %r1581, %r1582, 25;
	shf.l.wrap.b32 	%r1588, %r1582, %r1581, 25;
	mov.b64 	%rd1959, {%r1588, %r1587};
	xor.b64  	%rd1960, %rd1958, %rd1959;
	xor.b64  	%rd1961, %rd1941, %rd1891;
	xor.b64  	%rd1962, %rd1941, %rd1916;
	and.b64  	%rd1963, %rd1962, %rd1961;
	xor.b64  	%rd1964, %rd1963, %rd1941;
	add.s64 	%rd1965, %rd1954, %rd1964;
	add.s64 	%rd1966, %rd1965, %rd1960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1589,%dummy}, %rd1955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1590}, %rd1955;
	}
	shf.r.wrap.b32 	%r1591, %r1590, %r1589, 14;
	shf.r.wrap.b32 	%r1592, %r1589, %r1590, 14;
	mov.b64 	%rd1967, {%r1592, %r1591};
	shf.r.wrap.b32 	%r1593, %r1590, %r1589, 18;
	shf.r.wrap.b32 	%r1594, %r1589, %r1590, 18;
	mov.b64 	%rd1968, {%r1594, %r1593};
	xor.b64  	%rd1969, %rd1968, %rd1967;
	shf.l.wrap.b32 	%r1595, %r1589, %r1590, 23;
	shf.l.wrap.b32 	%r1596, %r1590, %r1589, 23;
	mov.b64 	%rd1970, {%r1596, %r1595};
	xor.b64  	%rd1971, %rd1969, %rd1970;
	xor.b64  	%rd1972, %rd1930, %rd1905;
	and.b64  	%rd1973, %rd1955, %rd1972;
	xor.b64  	%rd1974, %rd1973, %rd1905;
	add.s64 	%rd1975, %rd1880, %rd1699;
	ld.const.u64 	%rd1976, [k_sha512+432];
	add.s64 	%rd1977, %rd1975, %rd1976;
	add.s64 	%rd1978, %rd1977, %rd1974;
	add.s64 	%rd1979, %rd1978, %rd1971;
	add.s64 	%rd1980, %rd1979, %rd1891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1597,%dummy}, %rd1966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1598}, %rd1966;
	}
	shf.r.wrap.b32 	%r1599, %r1598, %r1597, 28;
	shf.r.wrap.b32 	%r1600, %r1597, %r1598, 28;
	mov.b64 	%rd1981, {%r1600, %r1599};
	shf.l.wrap.b32 	%r1601, %r1597, %r1598, 30;
	shf.l.wrap.b32 	%r1602, %r1598, %r1597, 30;
	mov.b64 	%rd1982, {%r1602, %r1601};
	xor.b64  	%rd1983, %rd1982, %rd1981;
	shf.l.wrap.b32 	%r1603, %r1597, %r1598, 25;
	shf.l.wrap.b32 	%r1604, %r1598, %r1597, 25;
	mov.b64 	%rd1984, {%r1604, %r1603};
	xor.b64  	%rd1985, %rd1983, %rd1984;
	xor.b64  	%rd1986, %rd1966, %rd1916;
	xor.b64  	%rd1987, %rd1966, %rd1941;
	and.b64  	%rd1988, %rd1987, %rd1986;
	xor.b64  	%rd1989, %rd1988, %rd1966;
	add.s64 	%rd1990, %rd1979, %rd1989;
	add.s64 	%rd1991, %rd1990, %rd1985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd1980;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 14;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 14;
	mov.b64 	%rd1992, {%r1608, %r1607};
	shf.r.wrap.b32 	%r1609, %r1606, %r1605, 18;
	shf.r.wrap.b32 	%r1610, %r1605, %r1606, 18;
	mov.b64 	%rd1993, {%r1610, %r1609};
	xor.b64  	%rd1994, %rd1993, %rd1992;
	shf.l.wrap.b32 	%r1611, %r1605, %r1606, 23;
	shf.l.wrap.b32 	%r1612, %r1606, %r1605, 23;
	mov.b64 	%rd1995, {%r1612, %r1611};
	xor.b64  	%rd1996, %rd1994, %rd1995;
	xor.b64  	%rd1997, %rd1955, %rd1930;
	and.b64  	%rd1998, %rd1980, %rd1997;
	xor.b64  	%rd1999, %rd1998, %rd1930;
	add.s64 	%rd2000, %rd1905, %rd1712;
	ld.const.u64 	%rd2001, [k_sha512+440];
	add.s64 	%rd2002, %rd2000, %rd2001;
	add.s64 	%rd2003, %rd2002, %rd1999;
	add.s64 	%rd2004, %rd2003, %rd1996;
	add.s64 	%rd2005, %rd2004, %rd1916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1613,%dummy}, %rd1991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1614}, %rd1991;
	}
	shf.r.wrap.b32 	%r1615, %r1614, %r1613, 28;
	shf.r.wrap.b32 	%r1616, %r1613, %r1614, 28;
	mov.b64 	%rd2006, {%r1616, %r1615};
	shf.l.wrap.b32 	%r1617, %r1613, %r1614, 30;
	shf.l.wrap.b32 	%r1618, %r1614, %r1613, 30;
	mov.b64 	%rd2007, {%r1618, %r1617};
	xor.b64  	%rd2008, %rd2007, %rd2006;
	shf.l.wrap.b32 	%r1619, %r1613, %r1614, 25;
	shf.l.wrap.b32 	%r1620, %r1614, %r1613, 25;
	mov.b64 	%rd2009, {%r1620, %r1619};
	xor.b64  	%rd2010, %rd2008, %rd2009;
	xor.b64  	%rd2011, %rd1991, %rd1941;
	xor.b64  	%rd2012, %rd1991, %rd1966;
	and.b64  	%rd2013, %rd2012, %rd2011;
	xor.b64  	%rd2014, %rd2013, %rd1991;
	add.s64 	%rd2015, %rd2004, %rd2014;
	add.s64 	%rd2016, %rd2015, %rd2010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1621,%dummy}, %rd2005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1622}, %rd2005;
	}
	shf.r.wrap.b32 	%r1623, %r1622, %r1621, 14;
	shf.r.wrap.b32 	%r1624, %r1621, %r1622, 14;
	mov.b64 	%rd2017, {%r1624, %r1623};
	shf.r.wrap.b32 	%r1625, %r1622, %r1621, 18;
	shf.r.wrap.b32 	%r1626, %r1621, %r1622, 18;
	mov.b64 	%rd2018, {%r1626, %r1625};
	xor.b64  	%rd2019, %rd2018, %rd2017;
	shf.l.wrap.b32 	%r1627, %r1621, %r1622, 23;
	shf.l.wrap.b32 	%r1628, %r1622, %r1621, 23;
	mov.b64 	%rd2020, {%r1628, %r1627};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	xor.b64  	%rd2022, %rd1980, %rd1955;
	and.b64  	%rd2023, %rd2005, %rd2022;
	xor.b64  	%rd2024, %rd2023, %rd1955;
	add.s64 	%rd2025, %rd1930, %rd1725;
	ld.const.u64 	%rd2026, [k_sha512+448];
	add.s64 	%rd2027, %rd2025, %rd2026;
	add.s64 	%rd2028, %rd2027, %rd2024;
	add.s64 	%rd2029, %rd2028, %rd2021;
	add.s64 	%rd2030, %rd2029, %rd1941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1629,%dummy}, %rd2016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1630}, %rd2016;
	}
	shf.r.wrap.b32 	%r1631, %r1630, %r1629, 28;
	shf.r.wrap.b32 	%r1632, %r1629, %r1630, 28;
	mov.b64 	%rd2031, {%r1632, %r1631};
	shf.l.wrap.b32 	%r1633, %r1629, %r1630, 30;
	shf.l.wrap.b32 	%r1634, %r1630, %r1629, 30;
	mov.b64 	%rd2032, {%r1634, %r1633};
	xor.b64  	%rd2033, %rd2032, %rd2031;
	shf.l.wrap.b32 	%r1635, %r1629, %r1630, 25;
	shf.l.wrap.b32 	%r1636, %r1630, %r1629, 25;
	mov.b64 	%rd2034, {%r1636, %r1635};
	xor.b64  	%rd2035, %rd2033, %rd2034;
	xor.b64  	%rd2036, %rd2016, %rd1966;
	xor.b64  	%rd2037, %rd2016, %rd1991;
	and.b64  	%rd2038, %rd2037, %rd2036;
	xor.b64  	%rd2039, %rd2038, %rd2016;
	add.s64 	%rd2040, %rd2029, %rd2039;
	add.s64 	%rd2041, %rd2040, %rd2035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1637,%dummy}, %rd2030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1638}, %rd2030;
	}
	shf.r.wrap.b32 	%r1639, %r1638, %r1637, 14;
	shf.r.wrap.b32 	%r1640, %r1637, %r1638, 14;
	mov.b64 	%rd2042, {%r1640, %r1639};
	shf.r.wrap.b32 	%r1641, %r1638, %r1637, 18;
	shf.r.wrap.b32 	%r1642, %r1637, %r1638, 18;
	mov.b64 	%rd2043, {%r1642, %r1641};
	xor.b64  	%rd2044, %rd2043, %rd2042;
	shf.l.wrap.b32 	%r1643, %r1637, %r1638, 23;
	shf.l.wrap.b32 	%r1644, %r1638, %r1637, 23;
	mov.b64 	%rd2045, {%r1644, %r1643};
	xor.b64  	%rd2046, %rd2044, %rd2045;
	xor.b64  	%rd2047, %rd2005, %rd1980;
	and.b64  	%rd2048, %rd2030, %rd2047;
	xor.b64  	%rd2049, %rd2048, %rd1980;
	add.s64 	%rd2050, %rd1955, %rd1738;
	ld.const.u64 	%rd2051, [k_sha512+456];
	add.s64 	%rd2052, %rd2050, %rd2051;
	add.s64 	%rd2053, %rd2052, %rd2049;
	add.s64 	%rd2054, %rd2053, %rd2046;
	add.s64 	%rd2055, %rd2054, %rd1966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1645,%dummy}, %rd2041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1646}, %rd2041;
	}
	shf.r.wrap.b32 	%r1647, %r1646, %r1645, 28;
	shf.r.wrap.b32 	%r1648, %r1645, %r1646, 28;
	mov.b64 	%rd2056, {%r1648, %r1647};
	shf.l.wrap.b32 	%r1649, %r1645, %r1646, 30;
	shf.l.wrap.b32 	%r1650, %r1646, %r1645, 30;
	mov.b64 	%rd2057, {%r1650, %r1649};
	xor.b64  	%rd2058, %rd2057, %rd2056;
	shf.l.wrap.b32 	%r1651, %r1645, %r1646, 25;
	shf.l.wrap.b32 	%r1652, %r1646, %r1645, 25;
	mov.b64 	%rd2059, {%r1652, %r1651};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	xor.b64  	%rd2061, %rd2041, %rd1991;
	xor.b64  	%rd2062, %rd2041, %rd2016;
	and.b64  	%rd2063, %rd2062, %rd2061;
	xor.b64  	%rd2064, %rd2063, %rd2041;
	add.s64 	%rd2065, %rd2054, %rd2064;
	add.s64 	%rd2066, %rd2065, %rd2060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1653,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1654}, %rd2055;
	}
	shf.r.wrap.b32 	%r1655, %r1654, %r1653, 14;
	shf.r.wrap.b32 	%r1656, %r1653, %r1654, 14;
	mov.b64 	%rd2067, {%r1656, %r1655};
	shf.r.wrap.b32 	%r1657, %r1654, %r1653, 18;
	shf.r.wrap.b32 	%r1658, %r1653, %r1654, 18;
	mov.b64 	%rd2068, {%r1658, %r1657};
	xor.b64  	%rd2069, %rd2068, %rd2067;
	shf.l.wrap.b32 	%r1659, %r1653, %r1654, 23;
	shf.l.wrap.b32 	%r1660, %r1654, %r1653, 23;
	mov.b64 	%rd2070, {%r1660, %r1659};
	xor.b64  	%rd2071, %rd2069, %rd2070;
	xor.b64  	%rd2072, %rd2030, %rd2005;
	and.b64  	%rd2073, %rd2055, %rd2072;
	xor.b64  	%rd2074, %rd2073, %rd2005;
	add.s64 	%rd2075, %rd1980, %rd1751;
	ld.const.u64 	%rd2076, [k_sha512+464];
	add.s64 	%rd2077, %rd2075, %rd2076;
	add.s64 	%rd2078, %rd2077, %rd2074;
	add.s64 	%rd2079, %rd2078, %rd2071;
	add.s64 	%rd2080, %rd2079, %rd1991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1661,%dummy}, %rd2066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1662}, %rd2066;
	}
	shf.r.wrap.b32 	%r1663, %r1662, %r1661, 28;
	shf.r.wrap.b32 	%r1664, %r1661, %r1662, 28;
	mov.b64 	%rd2081, {%r1664, %r1663};
	shf.l.wrap.b32 	%r1665, %r1661, %r1662, 30;
	shf.l.wrap.b32 	%r1666, %r1662, %r1661, 30;
	mov.b64 	%rd2082, {%r1666, %r1665};
	xor.b64  	%rd2083, %rd2082, %rd2081;
	shf.l.wrap.b32 	%r1667, %r1661, %r1662, 25;
	shf.l.wrap.b32 	%r1668, %r1662, %r1661, 25;
	mov.b64 	%rd2084, {%r1668, %r1667};
	xor.b64  	%rd2085, %rd2083, %rd2084;
	xor.b64  	%rd2086, %rd2066, %rd2016;
	xor.b64  	%rd2087, %rd2066, %rd2041;
	and.b64  	%rd2088, %rd2087, %rd2086;
	xor.b64  	%rd2089, %rd2088, %rd2066;
	add.s64 	%rd2090, %rd2079, %rd2089;
	add.s64 	%rd2091, %rd2090, %rd2085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1669,%dummy}, %rd2080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1670}, %rd2080;
	}
	shf.r.wrap.b32 	%r1671, %r1670, %r1669, 14;
	shf.r.wrap.b32 	%r1672, %r1669, %r1670, 14;
	mov.b64 	%rd2092, {%r1672, %r1671};
	shf.r.wrap.b32 	%r1673, %r1670, %r1669, 18;
	shf.r.wrap.b32 	%r1674, %r1669, %r1670, 18;
	mov.b64 	%rd2093, {%r1674, %r1673};
	xor.b64  	%rd2094, %rd2093, %rd2092;
	shf.l.wrap.b32 	%r1675, %r1669, %r1670, 23;
	shf.l.wrap.b32 	%r1676, %r1670, %r1669, 23;
	mov.b64 	%rd2095, {%r1676, %r1675};
	xor.b64  	%rd2096, %rd2094, %rd2095;
	xor.b64  	%rd2097, %rd2055, %rd2030;
	and.b64  	%rd2098, %rd2080, %rd2097;
	xor.b64  	%rd2099, %rd2098, %rd2030;
	add.s64 	%rd2100, %rd2005, %rd1764;
	ld.const.u64 	%rd2101, [k_sha512+472];
	add.s64 	%rd2102, %rd2100, %rd2101;
	add.s64 	%rd2103, %rd2102, %rd2099;
	add.s64 	%rd2104, %rd2103, %rd2096;
	add.s64 	%rd2105, %rd2104, %rd2016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1677,%dummy}, %rd2091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1678}, %rd2091;
	}
	shf.r.wrap.b32 	%r1679, %r1678, %r1677, 28;
	shf.r.wrap.b32 	%r1680, %r1677, %r1678, 28;
	mov.b64 	%rd2106, {%r1680, %r1679};
	shf.l.wrap.b32 	%r1681, %r1677, %r1678, 30;
	shf.l.wrap.b32 	%r1682, %r1678, %r1677, 30;
	mov.b64 	%rd2107, {%r1682, %r1681};
	xor.b64  	%rd2108, %rd2107, %rd2106;
	shf.l.wrap.b32 	%r1683, %r1677, %r1678, 25;
	shf.l.wrap.b32 	%r1684, %r1678, %r1677, 25;
	mov.b64 	%rd2109, {%r1684, %r1683};
	xor.b64  	%rd2110, %rd2108, %rd2109;
	xor.b64  	%rd2111, %rd2091, %rd2041;
	xor.b64  	%rd2112, %rd2091, %rd2066;
	and.b64  	%rd2113, %rd2112, %rd2111;
	xor.b64  	%rd2114, %rd2113, %rd2091;
	add.s64 	%rd2115, %rd2104, %rd2114;
	add.s64 	%rd2116, %rd2115, %rd2110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1685,%dummy}, %rd2105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1686}, %rd2105;
	}
	shf.r.wrap.b32 	%r1687, %r1686, %r1685, 14;
	shf.r.wrap.b32 	%r1688, %r1685, %r1686, 14;
	mov.b64 	%rd2117, {%r1688, %r1687};
	shf.r.wrap.b32 	%r1689, %r1686, %r1685, 18;
	shf.r.wrap.b32 	%r1690, %r1685, %r1686, 18;
	mov.b64 	%rd2118, {%r1690, %r1689};
	xor.b64  	%rd2119, %rd2118, %rd2117;
	shf.l.wrap.b32 	%r1691, %r1685, %r1686, 23;
	shf.l.wrap.b32 	%r1692, %r1686, %r1685, 23;
	mov.b64 	%rd2120, {%r1692, %r1691};
	xor.b64  	%rd2121, %rd2119, %rd2120;
	xor.b64  	%rd2122, %rd2080, %rd2055;
	and.b64  	%rd2123, %rd2105, %rd2122;
	xor.b64  	%rd2124, %rd2123, %rd2055;
	add.s64 	%rd2125, %rd2030, %rd1777;
	ld.const.u64 	%rd2126, [k_sha512+480];
	add.s64 	%rd2127, %rd2125, %rd2126;
	add.s64 	%rd2128, %rd2127, %rd2124;
	add.s64 	%rd2129, %rd2128, %rd2121;
	add.s64 	%rd2130, %rd2129, %rd2041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1693,%dummy}, %rd2116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1694}, %rd2116;
	}
	shf.r.wrap.b32 	%r1695, %r1694, %r1693, 28;
	shf.r.wrap.b32 	%r1696, %r1693, %r1694, 28;
	mov.b64 	%rd2131, {%r1696, %r1695};
	shf.l.wrap.b32 	%r1697, %r1693, %r1694, 30;
	shf.l.wrap.b32 	%r1698, %r1694, %r1693, 30;
	mov.b64 	%rd2132, {%r1698, %r1697};
	xor.b64  	%rd2133, %rd2132, %rd2131;
	shf.l.wrap.b32 	%r1699, %r1693, %r1694, 25;
	shf.l.wrap.b32 	%r1700, %r1694, %r1693, 25;
	mov.b64 	%rd2134, {%r1700, %r1699};
	xor.b64  	%rd2135, %rd2133, %rd2134;
	xor.b64  	%rd2136, %rd2116, %rd2066;
	xor.b64  	%rd2137, %rd2116, %rd2091;
	and.b64  	%rd2138, %rd2137, %rd2136;
	xor.b64  	%rd2139, %rd2138, %rd2116;
	add.s64 	%rd2140, %rd2129, %rd2139;
	add.s64 	%rd2141, %rd2140, %rd2135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1701,%dummy}, %rd2130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1702}, %rd2130;
	}
	shf.r.wrap.b32 	%r1703, %r1702, %r1701, 14;
	shf.r.wrap.b32 	%r1704, %r1701, %r1702, 14;
	mov.b64 	%rd2142, {%r1704, %r1703};
	shf.r.wrap.b32 	%r1705, %r1702, %r1701, 18;
	shf.r.wrap.b32 	%r1706, %r1701, %r1702, 18;
	mov.b64 	%rd2143, {%r1706, %r1705};
	xor.b64  	%rd2144, %rd2143, %rd2142;
	shf.l.wrap.b32 	%r1707, %r1701, %r1702, 23;
	shf.l.wrap.b32 	%r1708, %r1702, %r1701, 23;
	mov.b64 	%rd2145, {%r1708, %r1707};
	xor.b64  	%rd2146, %rd2144, %rd2145;
	xor.b64  	%rd2147, %rd2105, %rd2080;
	and.b64  	%rd2148, %rd2130, %rd2147;
	xor.b64  	%rd2149, %rd2148, %rd2080;
	add.s64 	%rd2150, %rd2055, %rd1790;
	ld.const.u64 	%rd2151, [k_sha512+488];
	add.s64 	%rd2152, %rd2150, %rd2151;
	add.s64 	%rd2153, %rd2152, %rd2149;
	add.s64 	%rd2154, %rd2153, %rd2146;
	add.s64 	%rd2155, %rd2154, %rd2066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1709,%dummy}, %rd2141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1710}, %rd2141;
	}
	shf.r.wrap.b32 	%r1711, %r1710, %r1709, 28;
	shf.r.wrap.b32 	%r1712, %r1709, %r1710, 28;
	mov.b64 	%rd2156, {%r1712, %r1711};
	shf.l.wrap.b32 	%r1713, %r1709, %r1710, 30;
	shf.l.wrap.b32 	%r1714, %r1710, %r1709, 30;
	mov.b64 	%rd2157, {%r1714, %r1713};
	xor.b64  	%rd2158, %rd2157, %rd2156;
	shf.l.wrap.b32 	%r1715, %r1709, %r1710, 25;
	shf.l.wrap.b32 	%r1716, %r1710, %r1709, 25;
	mov.b64 	%rd2159, {%r1716, %r1715};
	xor.b64  	%rd2160, %rd2158, %rd2159;
	xor.b64  	%rd2161, %rd2141, %rd2091;
	xor.b64  	%rd2162, %rd2141, %rd2116;
	and.b64  	%rd2163, %rd2162, %rd2161;
	xor.b64  	%rd2164, %rd2163, %rd2141;
	add.s64 	%rd2165, %rd2154, %rd2164;
	add.s64 	%rd2166, %rd2165, %rd2160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1717,%dummy}, %rd2155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1718}, %rd2155;
	}
	shf.r.wrap.b32 	%r1719, %r1718, %r1717, 14;
	shf.r.wrap.b32 	%r1720, %r1717, %r1718, 14;
	mov.b64 	%rd2167, {%r1720, %r1719};
	shf.r.wrap.b32 	%r1721, %r1718, %r1717, 18;
	shf.r.wrap.b32 	%r1722, %r1717, %r1718, 18;
	mov.b64 	%rd2168, {%r1722, %r1721};
	xor.b64  	%rd2169, %rd2168, %rd2167;
	shf.l.wrap.b32 	%r1723, %r1717, %r1718, 23;
	shf.l.wrap.b32 	%r1724, %r1718, %r1717, 23;
	mov.b64 	%rd2170, {%r1724, %r1723};
	xor.b64  	%rd2171, %rd2169, %rd2170;
	xor.b64  	%rd2172, %rd2130, %rd2105;
	and.b64  	%rd2173, %rd2155, %rd2172;
	xor.b64  	%rd2174, %rd2173, %rd2105;
	add.s64 	%rd2175, %rd2080, %rd1803;
	ld.const.u64 	%rd2176, [k_sha512+496];
	add.s64 	%rd2177, %rd2175, %rd2176;
	add.s64 	%rd2178, %rd2177, %rd2174;
	add.s64 	%rd2179, %rd2178, %rd2171;
	add.s64 	%rd2180, %rd2179, %rd2091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1725,%dummy}, %rd2166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1726}, %rd2166;
	}
	shf.r.wrap.b32 	%r1727, %r1726, %r1725, 28;
	shf.r.wrap.b32 	%r1728, %r1725, %r1726, 28;
	mov.b64 	%rd2181, {%r1728, %r1727};
	shf.l.wrap.b32 	%r1729, %r1725, %r1726, 30;
	shf.l.wrap.b32 	%r1730, %r1726, %r1725, 30;
	mov.b64 	%rd2182, {%r1730, %r1729};
	xor.b64  	%rd2183, %rd2182, %rd2181;
	shf.l.wrap.b32 	%r1731, %r1725, %r1726, 25;
	shf.l.wrap.b32 	%r1732, %r1726, %r1725, 25;
	mov.b64 	%rd2184, {%r1732, %r1731};
	xor.b64  	%rd2185, %rd2183, %rd2184;
	xor.b64  	%rd2186, %rd2166, %rd2116;
	xor.b64  	%rd2187, %rd2166, %rd2141;
	and.b64  	%rd2188, %rd2187, %rd2186;
	xor.b64  	%rd2189, %rd2188, %rd2166;
	add.s64 	%rd2190, %rd2179, %rd2189;
	add.s64 	%rd2191, %rd2190, %rd2185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1733,%dummy}, %rd2180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1734}, %rd2180;
	}
	shf.r.wrap.b32 	%r1735, %r1734, %r1733, 14;
	shf.r.wrap.b32 	%r1736, %r1733, %r1734, 14;
	mov.b64 	%rd2192, {%r1736, %r1735};
	shf.r.wrap.b32 	%r1737, %r1734, %r1733, 18;
	shf.r.wrap.b32 	%r1738, %r1733, %r1734, 18;
	mov.b64 	%rd2193, {%r1738, %r1737};
	xor.b64  	%rd2194, %rd2193, %rd2192;
	shf.l.wrap.b32 	%r1739, %r1733, %r1734, 23;
	shf.l.wrap.b32 	%r1740, %r1734, %r1733, 23;
	mov.b64 	%rd2195, {%r1740, %r1739};
	xor.b64  	%rd2196, %rd2194, %rd2195;
	xor.b64  	%rd2197, %rd2155, %rd2130;
	and.b64  	%rd2198, %rd2180, %rd2197;
	xor.b64  	%rd2199, %rd2198, %rd2130;
	add.s64 	%rd2200, %rd2105, %rd1816;
	ld.const.u64 	%rd2201, [k_sha512+504];
	add.s64 	%rd2202, %rd2200, %rd2201;
	add.s64 	%rd2203, %rd2202, %rd2199;
	add.s64 	%rd2204, %rd2203, %rd2196;
	add.s64 	%rd2205, %rd2204, %rd2116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1741,%dummy}, %rd2191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1742}, %rd2191;
	}
	shf.r.wrap.b32 	%r1743, %r1742, %r1741, 28;
	shf.r.wrap.b32 	%r1744, %r1741, %r1742, 28;
	mov.b64 	%rd2206, {%r1744, %r1743};
	shf.l.wrap.b32 	%r1745, %r1741, %r1742, 30;
	shf.l.wrap.b32 	%r1746, %r1742, %r1741, 30;
	mov.b64 	%rd2207, {%r1746, %r1745};
	xor.b64  	%rd2208, %rd2207, %rd2206;
	shf.l.wrap.b32 	%r1747, %r1741, %r1742, 25;
	shf.l.wrap.b32 	%r1748, %r1742, %r1741, 25;
	mov.b64 	%rd2209, {%r1748, %r1747};
	xor.b64  	%rd2210, %rd2208, %rd2209;
	xor.b64  	%rd2211, %rd2191, %rd2141;
	xor.b64  	%rd2212, %rd2191, %rd2166;
	and.b64  	%rd2213, %rd2212, %rd2211;
	xor.b64  	%rd2214, %rd2213, %rd2191;
	add.s64 	%rd2215, %rd2204, %rd2214;
	add.s64 	%rd2216, %rd2215, %rd2210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1749,%dummy}, %rd1803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1750}, %rd1803;
	}
	shf.r.wrap.b32 	%r1751, %r1750, %r1749, 19;
	shf.r.wrap.b32 	%r1752, %r1749, %r1750, 19;
	mov.b64 	%rd2217, {%r1752, %r1751};
	shf.l.wrap.b32 	%r1753, %r1749, %r1750, 3;
	shf.l.wrap.b32 	%r1754, %r1750, %r1749, 3;
	mov.b64 	%rd2218, {%r1754, %r1753};
	shr.u64 	%rd2219, %rd1803, 6;
	xor.b64  	%rd2220, %rd2217, %rd2219;
	xor.b64  	%rd2221, %rd2220, %rd2218;
	shf.r.wrap.b32 	%r1755, %r1364, %r1363, 1;
	shf.r.wrap.b32 	%r1756, %r1363, %r1364, 1;
	mov.b64 	%rd2222, {%r1756, %r1755};
	shf.r.wrap.b32 	%r1757, %r1364, %r1363, 8;
	shf.r.wrap.b32 	%r1758, %r1363, %r1364, 8;
	mov.b64 	%rd2223, {%r1758, %r1757};
	shr.u64 	%rd2224, %rd1634, 7;
	xor.b64  	%rd2225, %rd2222, %rd2224;
	xor.b64  	%rd2226, %rd2225, %rd2223;
	add.s64 	%rd2227, %rd1621, %rd1738;
	add.s64 	%rd2228, %rd2227, %rd2221;
	add.s64 	%rd2229, %rd2228, %rd2226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd1816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd1816;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 19;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 19;
	mov.b64 	%rd2230, {%r1762, %r1761};
	shf.l.wrap.b32 	%r1763, %r1759, %r1760, 3;
	shf.l.wrap.b32 	%r1764, %r1760, %r1759, 3;
	mov.b64 	%rd2231, {%r1764, %r1763};
	shr.u64 	%rd2232, %rd1816, 6;
	xor.b64  	%rd2233, %rd2230, %rd2232;
	xor.b64  	%rd2234, %rd2233, %rd2231;
	shf.r.wrap.b32 	%r1765, %r1374, %r1373, 1;
	shf.r.wrap.b32 	%r1766, %r1373, %r1374, 1;
	mov.b64 	%rd2235, {%r1766, %r1765};
	shf.r.wrap.b32 	%r1767, %r1374, %r1373, 8;
	shf.r.wrap.b32 	%r1768, %r1373, %r1374, 8;
	mov.b64 	%rd2236, {%r1768, %r1767};
	shr.u64 	%rd2237, %rd1647, 7;
	xor.b64  	%rd2238, %rd2235, %rd2237;
	xor.b64  	%rd2239, %rd2238, %rd2236;
	add.s64 	%rd2240, %rd1634, %rd1751;
	add.s64 	%rd2241, %rd2240, %rd2234;
	add.s64 	%rd2242, %rd2241, %rd2239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1769,%dummy}, %rd2229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1770}, %rd2229;
	}
	shf.r.wrap.b32 	%r1771, %r1770, %r1769, 19;
	shf.r.wrap.b32 	%r1772, %r1769, %r1770, 19;
	mov.b64 	%rd2243, {%r1772, %r1771};
	shf.l.wrap.b32 	%r1773, %r1769, %r1770, 3;
	shf.l.wrap.b32 	%r1774, %r1770, %r1769, 3;
	mov.b64 	%rd2244, {%r1774, %r1773};
	shr.u64 	%rd2245, %rd2229, 6;
	xor.b64  	%rd2246, %rd2243, %rd2245;
	xor.b64  	%rd2247, %rd2246, %rd2244;
	shf.r.wrap.b32 	%r1775, %r1384, %r1383, 1;
	shf.r.wrap.b32 	%r1776, %r1383, %r1384, 1;
	mov.b64 	%rd2248, {%r1776, %r1775};
	shf.r.wrap.b32 	%r1777, %r1384, %r1383, 8;
	shf.r.wrap.b32 	%r1778, %r1383, %r1384, 8;
	mov.b64 	%rd2249, {%r1778, %r1777};
	shr.u64 	%rd2250, %rd1660, 7;
	xor.b64  	%rd2251, %rd2248, %rd2250;
	xor.b64  	%rd2252, %rd2251, %rd2249;
	add.s64 	%rd2253, %rd1647, %rd1764;
	add.s64 	%rd2254, %rd2253, %rd2247;
	add.s64 	%rd2255, %rd2254, %rd2252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1779,%dummy}, %rd2242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1780}, %rd2242;
	}
	shf.r.wrap.b32 	%r1781, %r1780, %r1779, 19;
	shf.r.wrap.b32 	%r1782, %r1779, %r1780, 19;
	mov.b64 	%rd2256, {%r1782, %r1781};
	shf.l.wrap.b32 	%r1783, %r1779, %r1780, 3;
	shf.l.wrap.b32 	%r1784, %r1780, %r1779, 3;
	mov.b64 	%rd2257, {%r1784, %r1783};
	shr.u64 	%rd2258, %rd2242, 6;
	xor.b64  	%rd2259, %rd2256, %rd2258;
	xor.b64  	%rd2260, %rd2259, %rd2257;
	shf.r.wrap.b32 	%r1785, %r1394, %r1393, 1;
	shf.r.wrap.b32 	%r1786, %r1393, %r1394, 1;
	mov.b64 	%rd2261, {%r1786, %r1785};
	shf.r.wrap.b32 	%r1787, %r1394, %r1393, 8;
	shf.r.wrap.b32 	%r1788, %r1393, %r1394, 8;
	mov.b64 	%rd2262, {%r1788, %r1787};
	shr.u64 	%rd2263, %rd1673, 7;
	xor.b64  	%rd2264, %rd2261, %rd2263;
	xor.b64  	%rd2265, %rd2264, %rd2262;
	add.s64 	%rd2266, %rd1777, %rd1660;
	add.s64 	%rd2267, %rd2266, %rd2260;
	add.s64 	%rd2268, %rd2267, %rd2265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1789,%dummy}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1790}, %rd2255;
	}
	shf.r.wrap.b32 	%r1791, %r1790, %r1789, 19;
	shf.r.wrap.b32 	%r1792, %r1789, %r1790, 19;
	mov.b64 	%rd2269, {%r1792, %r1791};
	shf.l.wrap.b32 	%r1793, %r1789, %r1790, 3;
	shf.l.wrap.b32 	%r1794, %r1790, %r1789, 3;
	mov.b64 	%rd2270, {%r1794, %r1793};
	shr.u64 	%rd2271, %rd2255, 6;
	xor.b64  	%rd2272, %rd2269, %rd2271;
	xor.b64  	%rd2273, %rd2272, %rd2270;
	shf.r.wrap.b32 	%r1795, %r1404, %r1403, 1;
	shf.r.wrap.b32 	%r1796, %r1403, %r1404, 1;
	mov.b64 	%rd2274, {%r1796, %r1795};
	shf.r.wrap.b32 	%r1797, %r1404, %r1403, 8;
	shf.r.wrap.b32 	%r1798, %r1403, %r1404, 8;
	mov.b64 	%rd2275, {%r1798, %r1797};
	shr.u64 	%rd2276, %rd1686, 7;
	xor.b64  	%rd2277, %rd2274, %rd2276;
	xor.b64  	%rd2278, %rd2277, %rd2275;
	add.s64 	%rd2279, %rd1790, %rd1673;
	add.s64 	%rd2280, %rd2279, %rd2273;
	add.s64 	%rd2281, %rd2280, %rd2278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1799,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1800}, %rd2268;
	}
	shf.r.wrap.b32 	%r1801, %r1800, %r1799, 19;
	shf.r.wrap.b32 	%r1802, %r1799, %r1800, 19;
	mov.b64 	%rd2282, {%r1802, %r1801};
	shf.l.wrap.b32 	%r1803, %r1799, %r1800, 3;
	shf.l.wrap.b32 	%r1804, %r1800, %r1799, 3;
	mov.b64 	%rd2283, {%r1804, %r1803};
	shr.u64 	%rd2284, %rd2268, 6;
	xor.b64  	%rd2285, %rd2282, %rd2284;
	xor.b64  	%rd2286, %rd2285, %rd2283;
	shf.r.wrap.b32 	%r1805, %r1414, %r1413, 1;
	shf.r.wrap.b32 	%r1806, %r1413, %r1414, 1;
	mov.b64 	%rd2287, {%r1806, %r1805};
	shf.r.wrap.b32 	%r1807, %r1414, %r1413, 8;
	shf.r.wrap.b32 	%r1808, %r1413, %r1414, 8;
	mov.b64 	%rd2288, {%r1808, %r1807};
	shr.u64 	%rd2289, %rd1699, 7;
	xor.b64  	%rd2290, %rd2287, %rd2289;
	xor.b64  	%rd2291, %rd2290, %rd2288;
	add.s64 	%rd2292, %rd1803, %rd1686;
	add.s64 	%rd2293, %rd2292, %rd2286;
	add.s64 	%rd2294, %rd2293, %rd2291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1809,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1810}, %rd2281;
	}
	shf.r.wrap.b32 	%r1811, %r1810, %r1809, 19;
	shf.r.wrap.b32 	%r1812, %r1809, %r1810, 19;
	mov.b64 	%rd2295, {%r1812, %r1811};
	shf.l.wrap.b32 	%r1813, %r1809, %r1810, 3;
	shf.l.wrap.b32 	%r1814, %r1810, %r1809, 3;
	mov.b64 	%rd2296, {%r1814, %r1813};
	shr.u64 	%rd2297, %rd2281, 6;
	xor.b64  	%rd2298, %rd2295, %rd2297;
	xor.b64  	%rd2299, %rd2298, %rd2296;
	shf.r.wrap.b32 	%r1815, %r1424, %r1423, 1;
	shf.r.wrap.b32 	%r1816, %r1423, %r1424, 1;
	mov.b64 	%rd2300, {%r1816, %r1815};
	shf.r.wrap.b32 	%r1817, %r1424, %r1423, 8;
	shf.r.wrap.b32 	%r1818, %r1423, %r1424, 8;
	mov.b64 	%rd2301, {%r1818, %r1817};
	shr.u64 	%rd2302, %rd1712, 7;
	xor.b64  	%rd2303, %rd2300, %rd2302;
	xor.b64  	%rd2304, %rd2303, %rd2301;
	add.s64 	%rd2305, %rd1816, %rd1699;
	add.s64 	%rd2306, %rd2305, %rd2299;
	add.s64 	%rd2307, %rd2306, %rd2304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1819,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1820}, %rd2294;
	}
	shf.r.wrap.b32 	%r1821, %r1820, %r1819, 19;
	shf.r.wrap.b32 	%r1822, %r1819, %r1820, 19;
	mov.b64 	%rd2308, {%r1822, %r1821};
	shf.l.wrap.b32 	%r1823, %r1819, %r1820, 3;
	shf.l.wrap.b32 	%r1824, %r1820, %r1819, 3;
	mov.b64 	%rd2309, {%r1824, %r1823};
	shr.u64 	%rd2310, %rd2294, 6;
	xor.b64  	%rd2311, %rd2308, %rd2310;
	xor.b64  	%rd2312, %rd2311, %rd2309;
	shf.r.wrap.b32 	%r1825, %r1434, %r1433, 1;
	shf.r.wrap.b32 	%r1826, %r1433, %r1434, 1;
	mov.b64 	%rd2313, {%r1826, %r1825};
	shf.r.wrap.b32 	%r1827, %r1434, %r1433, 8;
	shf.r.wrap.b32 	%r1828, %r1433, %r1434, 8;
	mov.b64 	%rd2314, {%r1828, %r1827};
	shr.u64 	%rd2315, %rd1725, 7;
	xor.b64  	%rd2316, %rd2313, %rd2315;
	xor.b64  	%rd2317, %rd2316, %rd2314;
	add.s64 	%rd2318, %rd2229, %rd1712;
	add.s64 	%rd2319, %rd2318, %rd2312;
	add.s64 	%rd2320, %rd2319, %rd2317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1829,%dummy}, %rd2307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1830}, %rd2307;
	}
	shf.r.wrap.b32 	%r1831, %r1830, %r1829, 19;
	shf.r.wrap.b32 	%r1832, %r1829, %r1830, 19;
	mov.b64 	%rd2321, {%r1832, %r1831};
	shf.l.wrap.b32 	%r1833, %r1829, %r1830, 3;
	shf.l.wrap.b32 	%r1834, %r1830, %r1829, 3;
	mov.b64 	%rd2322, {%r1834, %r1833};
	shr.u64 	%rd2323, %rd2307, 6;
	xor.b64  	%rd2324, %rd2321, %rd2323;
	xor.b64  	%rd2325, %rd2324, %rd2322;
	shf.r.wrap.b32 	%r1835, %r1444, %r1443, 1;
	shf.r.wrap.b32 	%r1836, %r1443, %r1444, 1;
	mov.b64 	%rd2326, {%r1836, %r1835};
	shf.r.wrap.b32 	%r1837, %r1444, %r1443, 8;
	shf.r.wrap.b32 	%r1838, %r1443, %r1444, 8;
	mov.b64 	%rd2327, {%r1838, %r1837};
	shr.u64 	%rd2328, %rd1738, 7;
	xor.b64  	%rd2329, %rd2326, %rd2328;
	xor.b64  	%rd2330, %rd2329, %rd2327;
	add.s64 	%rd2331, %rd2242, %rd1725;
	add.s64 	%rd2332, %rd2331, %rd2325;
	add.s64 	%rd2333, %rd2332, %rd2330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd2320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd2320;
	}
	shf.r.wrap.b32 	%r1841, %r1840, %r1839, 19;
	shf.r.wrap.b32 	%r1842, %r1839, %r1840, 19;
	mov.b64 	%rd2334, {%r1842, %r1841};
	shf.l.wrap.b32 	%r1843, %r1839, %r1840, 3;
	shf.l.wrap.b32 	%r1844, %r1840, %r1839, 3;
	mov.b64 	%rd2335, {%r1844, %r1843};
	shr.u64 	%rd2336, %rd2320, 6;
	xor.b64  	%rd2337, %rd2334, %rd2336;
	xor.b64  	%rd2338, %rd2337, %rd2335;
	shf.r.wrap.b32 	%r1845, %r1454, %r1453, 1;
	shf.r.wrap.b32 	%r1846, %r1453, %r1454, 1;
	mov.b64 	%rd2339, {%r1846, %r1845};
	shf.r.wrap.b32 	%r1847, %r1454, %r1453, 8;
	shf.r.wrap.b32 	%r1848, %r1453, %r1454, 8;
	mov.b64 	%rd2340, {%r1848, %r1847};
	shr.u64 	%rd2341, %rd1751, 7;
	xor.b64  	%rd2342, %rd2339, %rd2341;
	xor.b64  	%rd2343, %rd2342, %rd2340;
	add.s64 	%rd2344, %rd2255, %rd1738;
	add.s64 	%rd2345, %rd2344, %rd2338;
	add.s64 	%rd2346, %rd2345, %rd2343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1849,%dummy}, %rd2333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1850}, %rd2333;
	}
	shf.r.wrap.b32 	%r1851, %r1850, %r1849, 19;
	shf.r.wrap.b32 	%r1852, %r1849, %r1850, 19;
	mov.b64 	%rd2347, {%r1852, %r1851};
	shf.l.wrap.b32 	%r1853, %r1849, %r1850, 3;
	shf.l.wrap.b32 	%r1854, %r1850, %r1849, 3;
	mov.b64 	%rd2348, {%r1854, %r1853};
	shr.u64 	%rd2349, %rd2333, 6;
	xor.b64  	%rd2350, %rd2347, %rd2349;
	xor.b64  	%rd2351, %rd2350, %rd2348;
	shf.r.wrap.b32 	%r1855, %r1464, %r1463, 1;
	shf.r.wrap.b32 	%r1856, %r1463, %r1464, 1;
	mov.b64 	%rd2352, {%r1856, %r1855};
	shf.r.wrap.b32 	%r1857, %r1464, %r1463, 8;
	shf.r.wrap.b32 	%r1858, %r1463, %r1464, 8;
	mov.b64 	%rd2353, {%r1858, %r1857};
	shr.u64 	%rd2354, %rd1764, 7;
	xor.b64  	%rd2355, %rd2352, %rd2354;
	xor.b64  	%rd2356, %rd2355, %rd2353;
	add.s64 	%rd2357, %rd2268, %rd1751;
	add.s64 	%rd2358, %rd2357, %rd2351;
	add.s64 	%rd2359, %rd2358, %rd2356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1859,%dummy}, %rd2346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1860}, %rd2346;
	}
	shf.r.wrap.b32 	%r1861, %r1860, %r1859, 19;
	shf.r.wrap.b32 	%r1862, %r1859, %r1860, 19;
	mov.b64 	%rd2360, {%r1862, %r1861};
	shf.l.wrap.b32 	%r1863, %r1859, %r1860, 3;
	shf.l.wrap.b32 	%r1864, %r1860, %r1859, 3;
	mov.b64 	%rd2361, {%r1864, %r1863};
	shr.u64 	%rd2362, %rd2346, 6;
	xor.b64  	%rd2363, %rd2360, %rd2362;
	xor.b64  	%rd2364, %rd2363, %rd2361;
	shf.r.wrap.b32 	%r1865, %r1474, %r1473, 1;
	shf.r.wrap.b32 	%r1866, %r1473, %r1474, 1;
	mov.b64 	%rd2365, {%r1866, %r1865};
	shf.r.wrap.b32 	%r1867, %r1474, %r1473, 8;
	shf.r.wrap.b32 	%r1868, %r1473, %r1474, 8;
	mov.b64 	%rd2366, {%r1868, %r1867};
	shr.u64 	%rd2367, %rd1777, 7;
	xor.b64  	%rd2368, %rd2365, %rd2367;
	xor.b64  	%rd2369, %rd2368, %rd2366;
	add.s64 	%rd2370, %rd2281, %rd1764;
	add.s64 	%rd2371, %rd2370, %rd2364;
	add.s64 	%rd2372, %rd2371, %rd2369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1869,%dummy}, %rd2359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1870}, %rd2359;
	}
	shf.r.wrap.b32 	%r1871, %r1870, %r1869, 19;
	shf.r.wrap.b32 	%r1872, %r1869, %r1870, 19;
	mov.b64 	%rd2373, {%r1872, %r1871};
	shf.l.wrap.b32 	%r1873, %r1869, %r1870, 3;
	shf.l.wrap.b32 	%r1874, %r1870, %r1869, 3;
	mov.b64 	%rd2374, {%r1874, %r1873};
	shr.u64 	%rd2375, %rd2359, 6;
	xor.b64  	%rd2376, %rd2373, %rd2375;
	xor.b64  	%rd2377, %rd2376, %rd2374;
	shf.r.wrap.b32 	%r1875, %r1484, %r1483, 1;
	shf.r.wrap.b32 	%r1876, %r1483, %r1484, 1;
	mov.b64 	%rd2378, {%r1876, %r1875};
	shf.r.wrap.b32 	%r1877, %r1484, %r1483, 8;
	shf.r.wrap.b32 	%r1878, %r1483, %r1484, 8;
	mov.b64 	%rd2379, {%r1878, %r1877};
	shr.u64 	%rd2380, %rd1790, 7;
	xor.b64  	%rd2381, %rd2378, %rd2380;
	xor.b64  	%rd2382, %rd2381, %rd2379;
	add.s64 	%rd2383, %rd2294, %rd1777;
	add.s64 	%rd2384, %rd2383, %rd2377;
	add.s64 	%rd2385, %rd2384, %rd2382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1879,%dummy}, %rd2372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1880}, %rd2372;
	}
	shf.r.wrap.b32 	%r1881, %r1880, %r1879, 19;
	shf.r.wrap.b32 	%r1882, %r1879, %r1880, 19;
	mov.b64 	%rd2386, {%r1882, %r1881};
	shf.l.wrap.b32 	%r1883, %r1879, %r1880, 3;
	shf.l.wrap.b32 	%r1884, %r1880, %r1879, 3;
	mov.b64 	%rd2387, {%r1884, %r1883};
	shr.u64 	%rd2388, %rd2372, 6;
	xor.b64  	%rd2389, %rd2386, %rd2388;
	xor.b64  	%rd2390, %rd2389, %rd2387;
	shf.r.wrap.b32 	%r1885, %r1750, %r1749, 1;
	shf.r.wrap.b32 	%r1886, %r1749, %r1750, 1;
	mov.b64 	%rd2391, {%r1886, %r1885};
	shf.r.wrap.b32 	%r1887, %r1750, %r1749, 8;
	shf.r.wrap.b32 	%r1888, %r1749, %r1750, 8;
	mov.b64 	%rd2392, {%r1888, %r1887};
	shr.u64 	%rd2393, %rd1803, 7;
	xor.b64  	%rd2394, %rd2391, %rd2393;
	xor.b64  	%rd2395, %rd2394, %rd2392;
	add.s64 	%rd2396, %rd2307, %rd1790;
	add.s64 	%rd2397, %rd2396, %rd2390;
	add.s64 	%rd2398, %rd2397, %rd2395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1889,%dummy}, %rd2385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1890}, %rd2385;
	}
	shf.r.wrap.b32 	%r1891, %r1890, %r1889, 19;
	shf.r.wrap.b32 	%r1892, %r1889, %r1890, 19;
	mov.b64 	%rd2399, {%r1892, %r1891};
	shf.l.wrap.b32 	%r1893, %r1889, %r1890, 3;
	shf.l.wrap.b32 	%r1894, %r1890, %r1889, 3;
	mov.b64 	%rd2400, {%r1894, %r1893};
	shr.u64 	%rd2401, %rd2385, 6;
	xor.b64  	%rd2402, %rd2399, %rd2401;
	xor.b64  	%rd2403, %rd2402, %rd2400;
	shf.r.wrap.b32 	%r1895, %r1760, %r1759, 1;
	shf.r.wrap.b32 	%r1896, %r1759, %r1760, 1;
	mov.b64 	%rd2404, {%r1896, %r1895};
	shf.r.wrap.b32 	%r1897, %r1760, %r1759, 8;
	shf.r.wrap.b32 	%r1898, %r1759, %r1760, 8;
	mov.b64 	%rd2405, {%r1898, %r1897};
	shr.u64 	%rd2406, %rd1816, 7;
	xor.b64  	%rd2407, %rd2404, %rd2406;
	xor.b64  	%rd2408, %rd2407, %rd2405;
	add.s64 	%rd2409, %rd2320, %rd1803;
	add.s64 	%rd2410, %rd2409, %rd2403;
	add.s64 	%rd2411, %rd2410, %rd2408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1899,%dummy}, %rd2398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1900}, %rd2398;
	}
	shf.r.wrap.b32 	%r1901, %r1900, %r1899, 19;
	shf.r.wrap.b32 	%r1902, %r1899, %r1900, 19;
	mov.b64 	%rd2412, {%r1902, %r1901};
	shf.l.wrap.b32 	%r1903, %r1899, %r1900, 3;
	shf.l.wrap.b32 	%r1904, %r1900, %r1899, 3;
	mov.b64 	%rd2413, {%r1904, %r1903};
	shr.u64 	%rd2414, %rd2398, 6;
	xor.b64  	%rd2415, %rd2412, %rd2414;
	xor.b64  	%rd2416, %rd2415, %rd2413;
	shf.r.wrap.b32 	%r1905, %r1770, %r1769, 1;
	shf.r.wrap.b32 	%r1906, %r1769, %r1770, 1;
	mov.b64 	%rd2417, {%r1906, %r1905};
	shf.r.wrap.b32 	%r1907, %r1770, %r1769, 8;
	shf.r.wrap.b32 	%r1908, %r1769, %r1770, 8;
	mov.b64 	%rd2418, {%r1908, %r1907};
	shr.u64 	%rd2419, %rd2229, 7;
	xor.b64  	%rd2420, %rd2417, %rd2419;
	xor.b64  	%rd2421, %rd2420, %rd2418;
	add.s64 	%rd2422, %rd2333, %rd1816;
	add.s64 	%rd2423, %rd2422, %rd2416;
	add.s64 	%rd2424, %rd2423, %rd2421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1909,%dummy}, %rd2205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd2205;
	}
	shf.r.wrap.b32 	%r1911, %r1910, %r1909, 14;
	shf.r.wrap.b32 	%r1912, %r1909, %r1910, 14;
	mov.b64 	%rd2425, {%r1912, %r1911};
	shf.r.wrap.b32 	%r1913, %r1910, %r1909, 18;
	shf.r.wrap.b32 	%r1914, %r1909, %r1910, 18;
	mov.b64 	%rd2426, {%r1914, %r1913};
	xor.b64  	%rd2427, %rd2426, %rd2425;
	shf.l.wrap.b32 	%r1915, %r1909, %r1910, 23;
	shf.l.wrap.b32 	%r1916, %r1910, %r1909, 23;
	mov.b64 	%rd2428, {%r1916, %r1915};
	xor.b64  	%rd2429, %rd2427, %rd2428;
	xor.b64  	%rd2430, %rd2180, %rd2155;
	and.b64  	%rd2431, %rd2430, %rd2205;
	xor.b64  	%rd2432, %rd2431, %rd2155;
	add.s64 	%rd2433, %rd2432, %rd2130;
	add.s64 	%rd2434, %rd2433, %rd2229;
	ld.const.u64 	%rd2435, [k_sha512+512];
	add.s64 	%rd2436, %rd2434, %rd2435;
	add.s64 	%rd2437, %rd2436, %rd2429;
	add.s64 	%rd2438, %rd2437, %rd2141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1917,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1918}, %rd2216;
	}
	shf.r.wrap.b32 	%r1919, %r1918, %r1917, 28;
	shf.r.wrap.b32 	%r1920, %r1917, %r1918, 28;
	mov.b64 	%rd2439, {%r1920, %r1919};
	shf.l.wrap.b32 	%r1921, %r1917, %r1918, 30;
	shf.l.wrap.b32 	%r1922, %r1918, %r1917, 30;
	mov.b64 	%rd2440, {%r1922, %r1921};
	xor.b64  	%rd2441, %rd2440, %rd2439;
	shf.l.wrap.b32 	%r1923, %r1917, %r1918, 25;
	shf.l.wrap.b32 	%r1924, %r1918, %r1917, 25;
	mov.b64 	%rd2442, {%r1924, %r1923};
	xor.b64  	%rd2443, %rd2441, %rd2442;
	xor.b64  	%rd2444, %rd2216, %rd2166;
	xor.b64  	%rd2445, %rd2216, %rd2191;
	and.b64  	%rd2446, %rd2445, %rd2444;
	xor.b64  	%rd2447, %rd2446, %rd2216;
	add.s64 	%rd2448, %rd2437, %rd2447;
	add.s64 	%rd2449, %rd2448, %rd2443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1925,%dummy}, %rd2438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1926}, %rd2438;
	}
	shf.r.wrap.b32 	%r1927, %r1926, %r1925, 14;
	shf.r.wrap.b32 	%r1928, %r1925, %r1926, 14;
	mov.b64 	%rd2450, {%r1928, %r1927};
	shf.r.wrap.b32 	%r1929, %r1926, %r1925, 18;
	shf.r.wrap.b32 	%r1930, %r1925, %r1926, 18;
	mov.b64 	%rd2451, {%r1930, %r1929};
	xor.b64  	%rd2452, %rd2451, %rd2450;
	shf.l.wrap.b32 	%r1931, %r1925, %r1926, 23;
	shf.l.wrap.b32 	%r1932, %r1926, %r1925, 23;
	mov.b64 	%rd2453, {%r1932, %r1931};
	xor.b64  	%rd2454, %rd2452, %rd2453;
	xor.b64  	%rd2455, %rd2205, %rd2180;
	and.b64  	%rd2456, %rd2438, %rd2455;
	xor.b64  	%rd2457, %rd2456, %rd2180;
	add.s64 	%rd2458, %rd2242, %rd2155;
	ld.const.u64 	%rd2459, [k_sha512+520];
	add.s64 	%rd2460, %rd2458, %rd2459;
	add.s64 	%rd2461, %rd2460, %rd2457;
	add.s64 	%rd2462, %rd2461, %rd2454;
	add.s64 	%rd2463, %rd2462, %rd2166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1933,%dummy}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1934}, %rd2449;
	}
	shf.r.wrap.b32 	%r1935, %r1934, %r1933, 28;
	shf.r.wrap.b32 	%r1936, %r1933, %r1934, 28;
	mov.b64 	%rd2464, {%r1936, %r1935};
	shf.l.wrap.b32 	%r1937, %r1933, %r1934, 30;
	shf.l.wrap.b32 	%r1938, %r1934, %r1933, 30;
	mov.b64 	%rd2465, {%r1938, %r1937};
	xor.b64  	%rd2466, %rd2465, %rd2464;
	shf.l.wrap.b32 	%r1939, %r1933, %r1934, 25;
	shf.l.wrap.b32 	%r1940, %r1934, %r1933, 25;
	mov.b64 	%rd2467, {%r1940, %r1939};
	xor.b64  	%rd2468, %rd2466, %rd2467;
	xor.b64  	%rd2469, %rd2449, %rd2191;
	xor.b64  	%rd2470, %rd2449, %rd2216;
	and.b64  	%rd2471, %rd2470, %rd2469;
	xor.b64  	%rd2472, %rd2471, %rd2449;
	add.s64 	%rd2473, %rd2462, %rd2472;
	add.s64 	%rd2474, %rd2473, %rd2468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1941,%dummy}, %rd2463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1942}, %rd2463;
	}
	shf.r.wrap.b32 	%r1943, %r1942, %r1941, 14;
	shf.r.wrap.b32 	%r1944, %r1941, %r1942, 14;
	mov.b64 	%rd2475, {%r1944, %r1943};
	shf.r.wrap.b32 	%r1945, %r1942, %r1941, 18;
	shf.r.wrap.b32 	%r1946, %r1941, %r1942, 18;
	mov.b64 	%rd2476, {%r1946, %r1945};
	xor.b64  	%rd2477, %rd2476, %rd2475;
	shf.l.wrap.b32 	%r1947, %r1941, %r1942, 23;
	shf.l.wrap.b32 	%r1948, %r1942, %r1941, 23;
	mov.b64 	%rd2478, {%r1948, %r1947};
	xor.b64  	%rd2479, %rd2477, %rd2478;
	xor.b64  	%rd2480, %rd2438, %rd2205;
	and.b64  	%rd2481, %rd2463, %rd2480;
	xor.b64  	%rd2482, %rd2481, %rd2205;
	add.s64 	%rd2483, %rd2255, %rd2180;
	ld.const.u64 	%rd2484, [k_sha512+528];
	add.s64 	%rd2485, %rd2483, %rd2484;
	add.s64 	%rd2486, %rd2485, %rd2482;
	add.s64 	%rd2487, %rd2486, %rd2479;
	add.s64 	%rd2488, %rd2487, %rd2191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1949,%dummy}, %rd2474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1950}, %rd2474;
	}
	shf.r.wrap.b32 	%r1951, %r1950, %r1949, 28;
	shf.r.wrap.b32 	%r1952, %r1949, %r1950, 28;
	mov.b64 	%rd2489, {%r1952, %r1951};
	shf.l.wrap.b32 	%r1953, %r1949, %r1950, 30;
	shf.l.wrap.b32 	%r1954, %r1950, %r1949, 30;
	mov.b64 	%rd2490, {%r1954, %r1953};
	xor.b64  	%rd2491, %rd2490, %rd2489;
	shf.l.wrap.b32 	%r1955, %r1949, %r1950, 25;
	shf.l.wrap.b32 	%r1956, %r1950, %r1949, 25;
	mov.b64 	%rd2492, {%r1956, %r1955};
	xor.b64  	%rd2493, %rd2491, %rd2492;
	xor.b64  	%rd2494, %rd2474, %rd2216;
	xor.b64  	%rd2495, %rd2474, %rd2449;
	and.b64  	%rd2496, %rd2495, %rd2494;
	xor.b64  	%rd2497, %rd2496, %rd2474;
	add.s64 	%rd2498, %rd2487, %rd2497;
	add.s64 	%rd2499, %rd2498, %rd2493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1957,%dummy}, %rd2488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1958}, %rd2488;
	}
	shf.r.wrap.b32 	%r1959, %r1958, %r1957, 14;
	shf.r.wrap.b32 	%r1960, %r1957, %r1958, 14;
	mov.b64 	%rd2500, {%r1960, %r1959};
	shf.r.wrap.b32 	%r1961, %r1958, %r1957, 18;
	shf.r.wrap.b32 	%r1962, %r1957, %r1958, 18;
	mov.b64 	%rd2501, {%r1962, %r1961};
	xor.b64  	%rd2502, %rd2501, %rd2500;
	shf.l.wrap.b32 	%r1963, %r1957, %r1958, 23;
	shf.l.wrap.b32 	%r1964, %r1958, %r1957, 23;
	mov.b64 	%rd2503, {%r1964, %r1963};
	xor.b64  	%rd2504, %rd2502, %rd2503;
	xor.b64  	%rd2505, %rd2463, %rd2438;
	and.b64  	%rd2506, %rd2488, %rd2505;
	xor.b64  	%rd2507, %rd2506, %rd2438;
	add.s64 	%rd2508, %rd2268, %rd2205;
	ld.const.u64 	%rd2509, [k_sha512+536];
	add.s64 	%rd2510, %rd2508, %rd2509;
	add.s64 	%rd2511, %rd2510, %rd2507;
	add.s64 	%rd2512, %rd2511, %rd2504;
	add.s64 	%rd2513, %rd2512, %rd2216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1965,%dummy}, %rd2499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1966}, %rd2499;
	}
	shf.r.wrap.b32 	%r1967, %r1966, %r1965, 28;
	shf.r.wrap.b32 	%r1968, %r1965, %r1966, 28;
	mov.b64 	%rd2514, {%r1968, %r1967};
	shf.l.wrap.b32 	%r1969, %r1965, %r1966, 30;
	shf.l.wrap.b32 	%r1970, %r1966, %r1965, 30;
	mov.b64 	%rd2515, {%r1970, %r1969};
	xor.b64  	%rd2516, %rd2515, %rd2514;
	shf.l.wrap.b32 	%r1971, %r1965, %r1966, 25;
	shf.l.wrap.b32 	%r1972, %r1966, %r1965, 25;
	mov.b64 	%rd2517, {%r1972, %r1971};
	xor.b64  	%rd2518, %rd2516, %rd2517;
	xor.b64  	%rd2519, %rd2499, %rd2449;
	xor.b64  	%rd2520, %rd2499, %rd2474;
	and.b64  	%rd2521, %rd2520, %rd2519;
	xor.b64  	%rd2522, %rd2521, %rd2499;
	add.s64 	%rd2523, %rd2512, %rd2522;
	add.s64 	%rd2524, %rd2523, %rd2518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1973,%dummy}, %rd2513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1974}, %rd2513;
	}
	shf.r.wrap.b32 	%r1975, %r1974, %r1973, 14;
	shf.r.wrap.b32 	%r1976, %r1973, %r1974, 14;
	mov.b64 	%rd2525, {%r1976, %r1975};
	shf.r.wrap.b32 	%r1977, %r1974, %r1973, 18;
	shf.r.wrap.b32 	%r1978, %r1973, %r1974, 18;
	mov.b64 	%rd2526, {%r1978, %r1977};
	xor.b64  	%rd2527, %rd2526, %rd2525;
	shf.l.wrap.b32 	%r1979, %r1973, %r1974, 23;
	shf.l.wrap.b32 	%r1980, %r1974, %r1973, 23;
	mov.b64 	%rd2528, {%r1980, %r1979};
	xor.b64  	%rd2529, %rd2527, %rd2528;
	xor.b64  	%rd2530, %rd2488, %rd2463;
	and.b64  	%rd2531, %rd2513, %rd2530;
	xor.b64  	%rd2532, %rd2531, %rd2463;
	add.s64 	%rd2533, %rd2438, %rd2281;
	ld.const.u64 	%rd2534, [k_sha512+544];
	add.s64 	%rd2535, %rd2533, %rd2534;
	add.s64 	%rd2536, %rd2535, %rd2532;
	add.s64 	%rd2537, %rd2536, %rd2529;
	add.s64 	%rd2538, %rd2537, %rd2449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1981,%dummy}, %rd2524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1982}, %rd2524;
	}
	shf.r.wrap.b32 	%r1983, %r1982, %r1981, 28;
	shf.r.wrap.b32 	%r1984, %r1981, %r1982, 28;
	mov.b64 	%rd2539, {%r1984, %r1983};
	shf.l.wrap.b32 	%r1985, %r1981, %r1982, 30;
	shf.l.wrap.b32 	%r1986, %r1982, %r1981, 30;
	mov.b64 	%rd2540, {%r1986, %r1985};
	xor.b64  	%rd2541, %rd2540, %rd2539;
	shf.l.wrap.b32 	%r1987, %r1981, %r1982, 25;
	shf.l.wrap.b32 	%r1988, %r1982, %r1981, 25;
	mov.b64 	%rd2542, {%r1988, %r1987};
	xor.b64  	%rd2543, %rd2541, %rd2542;
	xor.b64  	%rd2544, %rd2524, %rd2474;
	xor.b64  	%rd2545, %rd2524, %rd2499;
	and.b64  	%rd2546, %rd2545, %rd2544;
	xor.b64  	%rd2547, %rd2546, %rd2524;
	add.s64 	%rd2548, %rd2537, %rd2547;
	add.s64 	%rd2549, %rd2548, %rd2543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1989,%dummy}, %rd2538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1990}, %rd2538;
	}
	shf.r.wrap.b32 	%r1991, %r1990, %r1989, 14;
	shf.r.wrap.b32 	%r1992, %r1989, %r1990, 14;
	mov.b64 	%rd2550, {%r1992, %r1991};
	shf.r.wrap.b32 	%r1993, %r1990, %r1989, 18;
	shf.r.wrap.b32 	%r1994, %r1989, %r1990, 18;
	mov.b64 	%rd2551, {%r1994, %r1993};
	xor.b64  	%rd2552, %rd2551, %rd2550;
	shf.l.wrap.b32 	%r1995, %r1989, %r1990, 23;
	shf.l.wrap.b32 	%r1996, %r1990, %r1989, 23;
	mov.b64 	%rd2553, {%r1996, %r1995};
	xor.b64  	%rd2554, %rd2552, %rd2553;
	xor.b64  	%rd2555, %rd2513, %rd2488;
	and.b64  	%rd2556, %rd2538, %rd2555;
	xor.b64  	%rd2557, %rd2556, %rd2488;
	add.s64 	%rd2558, %rd2463, %rd2294;
	ld.const.u64 	%rd2559, [k_sha512+552];
	add.s64 	%rd2560, %rd2558, %rd2559;
	add.s64 	%rd2561, %rd2560, %rd2557;
	add.s64 	%rd2562, %rd2561, %rd2554;
	add.s64 	%rd2563, %rd2562, %rd2474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1997,%dummy}, %rd2549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1998}, %rd2549;
	}
	shf.r.wrap.b32 	%r1999, %r1998, %r1997, 28;
	shf.r.wrap.b32 	%r2000, %r1997, %r1998, 28;
	mov.b64 	%rd2564, {%r2000, %r1999};
	shf.l.wrap.b32 	%r2001, %r1997, %r1998, 30;
	shf.l.wrap.b32 	%r2002, %r1998, %r1997, 30;
	mov.b64 	%rd2565, {%r2002, %r2001};
	xor.b64  	%rd2566, %rd2565, %rd2564;
	shf.l.wrap.b32 	%r2003, %r1997, %r1998, 25;
	shf.l.wrap.b32 	%r2004, %r1998, %r1997, 25;
	mov.b64 	%rd2567, {%r2004, %r2003};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	xor.b64  	%rd2569, %rd2549, %rd2499;
	xor.b64  	%rd2570, %rd2549, %rd2524;
	and.b64  	%rd2571, %rd2570, %rd2569;
	xor.b64  	%rd2572, %rd2571, %rd2549;
	add.s64 	%rd2573, %rd2562, %rd2572;
	add.s64 	%rd2574, %rd2573, %rd2568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2005,%dummy}, %rd2563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2006}, %rd2563;
	}
	shf.r.wrap.b32 	%r2007, %r2006, %r2005, 14;
	shf.r.wrap.b32 	%r2008, %r2005, %r2006, 14;
	mov.b64 	%rd2575, {%r2008, %r2007};
	shf.r.wrap.b32 	%r2009, %r2006, %r2005, 18;
	shf.r.wrap.b32 	%r2010, %r2005, %r2006, 18;
	mov.b64 	%rd2576, {%r2010, %r2009};
	xor.b64  	%rd2577, %rd2576, %rd2575;
	shf.l.wrap.b32 	%r2011, %r2005, %r2006, 23;
	shf.l.wrap.b32 	%r2012, %r2006, %r2005, 23;
	mov.b64 	%rd2578, {%r2012, %r2011};
	xor.b64  	%rd2579, %rd2577, %rd2578;
	xor.b64  	%rd2580, %rd2538, %rd2513;
	and.b64  	%rd2581, %rd2563, %rd2580;
	xor.b64  	%rd2582, %rd2581, %rd2513;
	add.s64 	%rd2583, %rd2488, %rd2307;
	ld.const.u64 	%rd2584, [k_sha512+560];
	add.s64 	%rd2585, %rd2583, %rd2584;
	add.s64 	%rd2586, %rd2585, %rd2582;
	add.s64 	%rd2587, %rd2586, %rd2579;
	add.s64 	%rd2588, %rd2587, %rd2499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2013,%dummy}, %rd2574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2014}, %rd2574;
	}
	shf.r.wrap.b32 	%r2015, %r2014, %r2013, 28;
	shf.r.wrap.b32 	%r2016, %r2013, %r2014, 28;
	mov.b64 	%rd2589, {%r2016, %r2015};
	shf.l.wrap.b32 	%r2017, %r2013, %r2014, 30;
	shf.l.wrap.b32 	%r2018, %r2014, %r2013, 30;
	mov.b64 	%rd2590, {%r2018, %r2017};
	xor.b64  	%rd2591, %rd2590, %rd2589;
	shf.l.wrap.b32 	%r2019, %r2013, %r2014, 25;
	shf.l.wrap.b32 	%r2020, %r2014, %r2013, 25;
	mov.b64 	%rd2592, {%r2020, %r2019};
	xor.b64  	%rd2593, %rd2591, %rd2592;
	xor.b64  	%rd2594, %rd2574, %rd2524;
	xor.b64  	%rd2595, %rd2574, %rd2549;
	and.b64  	%rd2596, %rd2595, %rd2594;
	xor.b64  	%rd2597, %rd2596, %rd2574;
	add.s64 	%rd2598, %rd2587, %rd2597;
	add.s64 	%rd2599, %rd2598, %rd2593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2021,%dummy}, %rd2588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2022}, %rd2588;
	}
	shf.r.wrap.b32 	%r2023, %r2022, %r2021, 14;
	shf.r.wrap.b32 	%r2024, %r2021, %r2022, 14;
	mov.b64 	%rd2600, {%r2024, %r2023};
	shf.r.wrap.b32 	%r2025, %r2022, %r2021, 18;
	shf.r.wrap.b32 	%r2026, %r2021, %r2022, 18;
	mov.b64 	%rd2601, {%r2026, %r2025};
	xor.b64  	%rd2602, %rd2601, %rd2600;
	shf.l.wrap.b32 	%r2027, %r2021, %r2022, 23;
	shf.l.wrap.b32 	%r2028, %r2022, %r2021, 23;
	mov.b64 	%rd2603, {%r2028, %r2027};
	xor.b64  	%rd2604, %rd2602, %rd2603;
	xor.b64  	%rd2605, %rd2563, %rd2538;
	and.b64  	%rd2606, %rd2588, %rd2605;
	xor.b64  	%rd2607, %rd2606, %rd2538;
	add.s64 	%rd2608, %rd2513, %rd2320;
	ld.const.u64 	%rd2609, [k_sha512+568];
	add.s64 	%rd2610, %rd2608, %rd2609;
	add.s64 	%rd2611, %rd2610, %rd2607;
	add.s64 	%rd2612, %rd2611, %rd2604;
	add.s64 	%rd2613, %rd2612, %rd2524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2029,%dummy}, %rd2599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2030}, %rd2599;
	}
	shf.r.wrap.b32 	%r2031, %r2030, %r2029, 28;
	shf.r.wrap.b32 	%r2032, %r2029, %r2030, 28;
	mov.b64 	%rd2614, {%r2032, %r2031};
	shf.l.wrap.b32 	%r2033, %r2029, %r2030, 30;
	shf.l.wrap.b32 	%r2034, %r2030, %r2029, 30;
	mov.b64 	%rd2615, {%r2034, %r2033};
	xor.b64  	%rd2616, %rd2615, %rd2614;
	shf.l.wrap.b32 	%r2035, %r2029, %r2030, 25;
	shf.l.wrap.b32 	%r2036, %r2030, %r2029, 25;
	mov.b64 	%rd2617, {%r2036, %r2035};
	xor.b64  	%rd2618, %rd2616, %rd2617;
	xor.b64  	%rd2619, %rd2599, %rd2549;
	xor.b64  	%rd2620, %rd2599, %rd2574;
	and.b64  	%rd2621, %rd2620, %rd2619;
	xor.b64  	%rd2622, %rd2621, %rd2599;
	add.s64 	%rd2623, %rd2612, %rd2622;
	add.s64 	%rd2624, %rd2623, %rd2618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2037,%dummy}, %rd2613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2038}, %rd2613;
	}
	shf.r.wrap.b32 	%r2039, %r2038, %r2037, 14;
	shf.r.wrap.b32 	%r2040, %r2037, %r2038, 14;
	mov.b64 	%rd2625, {%r2040, %r2039};
	shf.r.wrap.b32 	%r2041, %r2038, %r2037, 18;
	shf.r.wrap.b32 	%r2042, %r2037, %r2038, 18;
	mov.b64 	%rd2626, {%r2042, %r2041};
	xor.b64  	%rd2627, %rd2626, %rd2625;
	shf.l.wrap.b32 	%r2043, %r2037, %r2038, 23;
	shf.l.wrap.b32 	%r2044, %r2038, %r2037, 23;
	mov.b64 	%rd2628, {%r2044, %r2043};
	xor.b64  	%rd2629, %rd2627, %rd2628;
	xor.b64  	%rd2630, %rd2588, %rd2563;
	and.b64  	%rd2631, %rd2613, %rd2630;
	xor.b64  	%rd2632, %rd2631, %rd2563;
	add.s64 	%rd2633, %rd2538, %rd2333;
	ld.const.u64 	%rd2634, [k_sha512+576];
	add.s64 	%rd2635, %rd2633, %rd2634;
	add.s64 	%rd2636, %rd2635, %rd2632;
	add.s64 	%rd2637, %rd2636, %rd2629;
	add.s64 	%rd2638, %rd2637, %rd2549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2045,%dummy}, %rd2624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2046}, %rd2624;
	}
	shf.r.wrap.b32 	%r2047, %r2046, %r2045, 28;
	shf.r.wrap.b32 	%r2048, %r2045, %r2046, 28;
	mov.b64 	%rd2639, {%r2048, %r2047};
	shf.l.wrap.b32 	%r2049, %r2045, %r2046, 30;
	shf.l.wrap.b32 	%r2050, %r2046, %r2045, 30;
	mov.b64 	%rd2640, {%r2050, %r2049};
	xor.b64  	%rd2641, %rd2640, %rd2639;
	shf.l.wrap.b32 	%r2051, %r2045, %r2046, 25;
	shf.l.wrap.b32 	%r2052, %r2046, %r2045, 25;
	mov.b64 	%rd2642, {%r2052, %r2051};
	xor.b64  	%rd2643, %rd2641, %rd2642;
	xor.b64  	%rd2644, %rd2624, %rd2574;
	xor.b64  	%rd2645, %rd2624, %rd2599;
	and.b64  	%rd2646, %rd2645, %rd2644;
	xor.b64  	%rd2647, %rd2646, %rd2624;
	add.s64 	%rd2648, %rd2637, %rd2647;
	add.s64 	%rd2649, %rd2648, %rd2643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2053,%dummy}, %rd2638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2054}, %rd2638;
	}
	shf.r.wrap.b32 	%r2055, %r2054, %r2053, 14;
	shf.r.wrap.b32 	%r2056, %r2053, %r2054, 14;
	mov.b64 	%rd2650, {%r2056, %r2055};
	shf.r.wrap.b32 	%r2057, %r2054, %r2053, 18;
	shf.r.wrap.b32 	%r2058, %r2053, %r2054, 18;
	mov.b64 	%rd2651, {%r2058, %r2057};
	xor.b64  	%rd2652, %rd2651, %rd2650;
	shf.l.wrap.b32 	%r2059, %r2053, %r2054, 23;
	shf.l.wrap.b32 	%r2060, %r2054, %r2053, 23;
	mov.b64 	%rd2653, {%r2060, %r2059};
	xor.b64  	%rd2654, %rd2652, %rd2653;
	xor.b64  	%rd2655, %rd2613, %rd2588;
	and.b64  	%rd2656, %rd2638, %rd2655;
	xor.b64  	%rd2657, %rd2656, %rd2588;
	add.s64 	%rd2658, %rd2563, %rd2346;
	ld.const.u64 	%rd2659, [k_sha512+584];
	add.s64 	%rd2660, %rd2658, %rd2659;
	add.s64 	%rd2661, %rd2660, %rd2657;
	add.s64 	%rd2662, %rd2661, %rd2654;
	add.s64 	%rd2663, %rd2662, %rd2574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2061,%dummy}, %rd2649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2062}, %rd2649;
	}
	shf.r.wrap.b32 	%r2063, %r2062, %r2061, 28;
	shf.r.wrap.b32 	%r2064, %r2061, %r2062, 28;
	mov.b64 	%rd2664, {%r2064, %r2063};
	shf.l.wrap.b32 	%r2065, %r2061, %r2062, 30;
	shf.l.wrap.b32 	%r2066, %r2062, %r2061, 30;
	mov.b64 	%rd2665, {%r2066, %r2065};
	xor.b64  	%rd2666, %rd2665, %rd2664;
	shf.l.wrap.b32 	%r2067, %r2061, %r2062, 25;
	shf.l.wrap.b32 	%r2068, %r2062, %r2061, 25;
	mov.b64 	%rd2667, {%r2068, %r2067};
	xor.b64  	%rd2668, %rd2666, %rd2667;
	xor.b64  	%rd2669, %rd2649, %rd2599;
	xor.b64  	%rd2670, %rd2649, %rd2624;
	and.b64  	%rd2671, %rd2670, %rd2669;
	xor.b64  	%rd2672, %rd2671, %rd2649;
	add.s64 	%rd2673, %rd2662, %rd2672;
	add.s64 	%rd2674, %rd2673, %rd2668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2069,%dummy}, %rd2663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2070}, %rd2663;
	}
	shf.r.wrap.b32 	%r2071, %r2070, %r2069, 14;
	shf.r.wrap.b32 	%r2072, %r2069, %r2070, 14;
	mov.b64 	%rd2675, {%r2072, %r2071};
	shf.r.wrap.b32 	%r2073, %r2070, %r2069, 18;
	shf.r.wrap.b32 	%r2074, %r2069, %r2070, 18;
	mov.b64 	%rd2676, {%r2074, %r2073};
	xor.b64  	%rd2677, %rd2676, %rd2675;
	shf.l.wrap.b32 	%r2075, %r2069, %r2070, 23;
	shf.l.wrap.b32 	%r2076, %r2070, %r2069, 23;
	mov.b64 	%rd2678, {%r2076, %r2075};
	xor.b64  	%rd2679, %rd2677, %rd2678;
	xor.b64  	%rd2680, %rd2638, %rd2613;
	and.b64  	%rd2681, %rd2663, %rd2680;
	xor.b64  	%rd2682, %rd2681, %rd2613;
	add.s64 	%rd2683, %rd2588, %rd2359;
	ld.const.u64 	%rd2684, [k_sha512+592];
	add.s64 	%rd2685, %rd2683, %rd2684;
	add.s64 	%rd2686, %rd2685, %rd2682;
	add.s64 	%rd2687, %rd2686, %rd2679;
	add.s64 	%rd2688, %rd2687, %rd2599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2077,%dummy}, %rd2674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2078}, %rd2674;
	}
	shf.r.wrap.b32 	%r2079, %r2078, %r2077, 28;
	shf.r.wrap.b32 	%r2080, %r2077, %r2078, 28;
	mov.b64 	%rd2689, {%r2080, %r2079};
	shf.l.wrap.b32 	%r2081, %r2077, %r2078, 30;
	shf.l.wrap.b32 	%r2082, %r2078, %r2077, 30;
	mov.b64 	%rd2690, {%r2082, %r2081};
	xor.b64  	%rd2691, %rd2690, %rd2689;
	shf.l.wrap.b32 	%r2083, %r2077, %r2078, 25;
	shf.l.wrap.b32 	%r2084, %r2078, %r2077, 25;
	mov.b64 	%rd2692, {%r2084, %r2083};
	xor.b64  	%rd2693, %rd2691, %rd2692;
	xor.b64  	%rd2694, %rd2674, %rd2624;
	xor.b64  	%rd2695, %rd2674, %rd2649;
	and.b64  	%rd2696, %rd2695, %rd2694;
	xor.b64  	%rd2697, %rd2696, %rd2674;
	add.s64 	%rd2698, %rd2687, %rd2697;
	add.s64 	%rd2699, %rd2698, %rd2693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2085,%dummy}, %rd2688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2086}, %rd2688;
	}
	shf.r.wrap.b32 	%r2087, %r2086, %r2085, 14;
	shf.r.wrap.b32 	%r2088, %r2085, %r2086, 14;
	mov.b64 	%rd2700, {%r2088, %r2087};
	shf.r.wrap.b32 	%r2089, %r2086, %r2085, 18;
	shf.r.wrap.b32 	%r2090, %r2085, %r2086, 18;
	mov.b64 	%rd2701, {%r2090, %r2089};
	xor.b64  	%rd2702, %rd2701, %rd2700;
	shf.l.wrap.b32 	%r2091, %r2085, %r2086, 23;
	shf.l.wrap.b32 	%r2092, %r2086, %r2085, 23;
	mov.b64 	%rd2703, {%r2092, %r2091};
	xor.b64  	%rd2704, %rd2702, %rd2703;
	xor.b64  	%rd2705, %rd2663, %rd2638;
	and.b64  	%rd2706, %rd2688, %rd2705;
	xor.b64  	%rd2707, %rd2706, %rd2638;
	add.s64 	%rd2708, %rd2613, %rd2372;
	ld.const.u64 	%rd2709, [k_sha512+600];
	add.s64 	%rd2710, %rd2708, %rd2709;
	add.s64 	%rd2711, %rd2710, %rd2707;
	add.s64 	%rd2712, %rd2711, %rd2704;
	add.s64 	%rd2713, %rd2712, %rd2624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2093,%dummy}, %rd2699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2094}, %rd2699;
	}
	shf.r.wrap.b32 	%r2095, %r2094, %r2093, 28;
	shf.r.wrap.b32 	%r2096, %r2093, %r2094, 28;
	mov.b64 	%rd2714, {%r2096, %r2095};
	shf.l.wrap.b32 	%r2097, %r2093, %r2094, 30;
	shf.l.wrap.b32 	%r2098, %r2094, %r2093, 30;
	mov.b64 	%rd2715, {%r2098, %r2097};
	xor.b64  	%rd2716, %rd2715, %rd2714;
	shf.l.wrap.b32 	%r2099, %r2093, %r2094, 25;
	shf.l.wrap.b32 	%r2100, %r2094, %r2093, 25;
	mov.b64 	%rd2717, {%r2100, %r2099};
	xor.b64  	%rd2718, %rd2716, %rd2717;
	xor.b64  	%rd2719, %rd2699, %rd2649;
	xor.b64  	%rd2720, %rd2699, %rd2674;
	and.b64  	%rd2721, %rd2720, %rd2719;
	xor.b64  	%rd2722, %rd2721, %rd2699;
	add.s64 	%rd2723, %rd2712, %rd2722;
	add.s64 	%rd2724, %rd2723, %rd2718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2101,%dummy}, %rd2713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2102}, %rd2713;
	}
	shf.r.wrap.b32 	%r2103, %r2102, %r2101, 14;
	shf.r.wrap.b32 	%r2104, %r2101, %r2102, 14;
	mov.b64 	%rd2725, {%r2104, %r2103};
	shf.r.wrap.b32 	%r2105, %r2102, %r2101, 18;
	shf.r.wrap.b32 	%r2106, %r2101, %r2102, 18;
	mov.b64 	%rd2726, {%r2106, %r2105};
	xor.b64  	%rd2727, %rd2726, %rd2725;
	shf.l.wrap.b32 	%r2107, %r2101, %r2102, 23;
	shf.l.wrap.b32 	%r2108, %r2102, %r2101, 23;
	mov.b64 	%rd2728, {%r2108, %r2107};
	xor.b64  	%rd2729, %rd2727, %rd2728;
	xor.b64  	%rd2730, %rd2688, %rd2663;
	and.b64  	%rd2731, %rd2713, %rd2730;
	xor.b64  	%rd2732, %rd2731, %rd2663;
	add.s64 	%rd2733, %rd2638, %rd2385;
	ld.const.u64 	%rd2734, [k_sha512+608];
	add.s64 	%rd2735, %rd2733, %rd2734;
	add.s64 	%rd2736, %rd2735, %rd2732;
	add.s64 	%rd2737, %rd2736, %rd2729;
	add.s64 	%rd2738, %rd2737, %rd2649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2109,%dummy}, %rd2724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2110}, %rd2724;
	}
	shf.r.wrap.b32 	%r2111, %r2110, %r2109, 28;
	shf.r.wrap.b32 	%r2112, %r2109, %r2110, 28;
	mov.b64 	%rd2739, {%r2112, %r2111};
	shf.l.wrap.b32 	%r2113, %r2109, %r2110, 30;
	shf.l.wrap.b32 	%r2114, %r2110, %r2109, 30;
	mov.b64 	%rd2740, {%r2114, %r2113};
	xor.b64  	%rd2741, %rd2740, %rd2739;
	shf.l.wrap.b32 	%r2115, %r2109, %r2110, 25;
	shf.l.wrap.b32 	%r2116, %r2110, %r2109, 25;
	mov.b64 	%rd2742, {%r2116, %r2115};
	xor.b64  	%rd2743, %rd2741, %rd2742;
	xor.b64  	%rd2744, %rd2724, %rd2674;
	xor.b64  	%rd2745, %rd2724, %rd2699;
	and.b64  	%rd2746, %rd2745, %rd2744;
	xor.b64  	%rd2747, %rd2746, %rd2724;
	add.s64 	%rd2748, %rd2737, %rd2747;
	add.s64 	%rd2749, %rd2748, %rd2743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2117,%dummy}, %rd2738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2118}, %rd2738;
	}
	shf.r.wrap.b32 	%r2119, %r2118, %r2117, 14;
	shf.r.wrap.b32 	%r2120, %r2117, %r2118, 14;
	mov.b64 	%rd2750, {%r2120, %r2119};
	shf.r.wrap.b32 	%r2121, %r2118, %r2117, 18;
	shf.r.wrap.b32 	%r2122, %r2117, %r2118, 18;
	mov.b64 	%rd2751, {%r2122, %r2121};
	xor.b64  	%rd2752, %rd2751, %rd2750;
	shf.l.wrap.b32 	%r2123, %r2117, %r2118, 23;
	shf.l.wrap.b32 	%r2124, %r2118, %r2117, 23;
	mov.b64 	%rd2753, {%r2124, %r2123};
	xor.b64  	%rd2754, %rd2752, %rd2753;
	xor.b64  	%rd2755, %rd2713, %rd2688;
	and.b64  	%rd2756, %rd2738, %rd2755;
	xor.b64  	%rd2757, %rd2756, %rd2688;
	add.s64 	%rd2758, %rd2663, %rd2398;
	ld.const.u64 	%rd2759, [k_sha512+616];
	add.s64 	%rd2760, %rd2758, %rd2759;
	add.s64 	%rd2761, %rd2760, %rd2757;
	add.s64 	%rd2762, %rd2761, %rd2754;
	add.s64 	%rd2763, %rd2762, %rd2674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2125,%dummy}, %rd2749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2126}, %rd2749;
	}
	shf.r.wrap.b32 	%r2127, %r2126, %r2125, 28;
	shf.r.wrap.b32 	%r2128, %r2125, %r2126, 28;
	mov.b64 	%rd2764, {%r2128, %r2127};
	shf.l.wrap.b32 	%r2129, %r2125, %r2126, 30;
	shf.l.wrap.b32 	%r2130, %r2126, %r2125, 30;
	mov.b64 	%rd2765, {%r2130, %r2129};
	xor.b64  	%rd2766, %rd2765, %rd2764;
	shf.l.wrap.b32 	%r2131, %r2125, %r2126, 25;
	shf.l.wrap.b32 	%r2132, %r2126, %r2125, 25;
	mov.b64 	%rd2767, {%r2132, %r2131};
	xor.b64  	%rd2768, %rd2766, %rd2767;
	xor.b64  	%rd2769, %rd2749, %rd2699;
	xor.b64  	%rd2770, %rd2749, %rd2724;
	and.b64  	%rd2771, %rd2770, %rd2769;
	xor.b64  	%rd2772, %rd2771, %rd2749;
	add.s64 	%rd2773, %rd2762, %rd2772;
	add.s64 	%rd2774, %rd2773, %rd2768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2133,%dummy}, %rd2763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2134}, %rd2763;
	}
	shf.r.wrap.b32 	%r2135, %r2134, %r2133, 14;
	shf.r.wrap.b32 	%r2136, %r2133, %r2134, 14;
	mov.b64 	%rd2775, {%r2136, %r2135};
	shf.r.wrap.b32 	%r2137, %r2134, %r2133, 18;
	shf.r.wrap.b32 	%r2138, %r2133, %r2134, 18;
	mov.b64 	%rd2776, {%r2138, %r2137};
	xor.b64  	%rd2777, %rd2776, %rd2775;
	shf.l.wrap.b32 	%r2139, %r2133, %r2134, 23;
	shf.l.wrap.b32 	%r2140, %r2134, %r2133, 23;
	mov.b64 	%rd2778, {%r2140, %r2139};
	xor.b64  	%rd2779, %rd2777, %rd2778;
	xor.b64  	%rd2780, %rd2738, %rd2713;
	and.b64  	%rd2781, %rd2763, %rd2780;
	xor.b64  	%rd2782, %rd2781, %rd2713;
	add.s64 	%rd2783, %rd2688, %rd2411;
	ld.const.u64 	%rd2784, [k_sha512+624];
	add.s64 	%rd2785, %rd2783, %rd2784;
	add.s64 	%rd2786, %rd2785, %rd2782;
	add.s64 	%rd2787, %rd2786, %rd2779;
	add.s64 	%rd2788, %rd2787, %rd2699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2141,%dummy}, %rd2774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2142}, %rd2774;
	}
	shf.r.wrap.b32 	%r2143, %r2142, %r2141, 28;
	shf.r.wrap.b32 	%r2144, %r2141, %r2142, 28;
	mov.b64 	%rd2789, {%r2144, %r2143};
	shf.l.wrap.b32 	%r2145, %r2141, %r2142, 30;
	shf.l.wrap.b32 	%r2146, %r2142, %r2141, 30;
	mov.b64 	%rd2790, {%r2146, %r2145};
	xor.b64  	%rd2791, %rd2790, %rd2789;
	shf.l.wrap.b32 	%r2147, %r2141, %r2142, 25;
	shf.l.wrap.b32 	%r2148, %r2142, %r2141, 25;
	mov.b64 	%rd2792, {%r2148, %r2147};
	xor.b64  	%rd2793, %rd2791, %rd2792;
	xor.b64  	%rd2794, %rd2774, %rd2724;
	xor.b64  	%rd2795, %rd2774, %rd2749;
	and.b64  	%rd2796, %rd2795, %rd2794;
	xor.b64  	%rd2797, %rd2796, %rd2774;
	add.s64 	%rd2798, %rd2787, %rd2797;
	add.s64 	%rd2799, %rd2798, %rd2793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2149,%dummy}, %rd2788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2150}, %rd2788;
	}
	shf.r.wrap.b32 	%r2151, %r2150, %r2149, 14;
	shf.r.wrap.b32 	%r2152, %r2149, %r2150, 14;
	mov.b64 	%rd2800, {%r2152, %r2151};
	shf.r.wrap.b32 	%r2153, %r2150, %r2149, 18;
	shf.r.wrap.b32 	%r2154, %r2149, %r2150, 18;
	mov.b64 	%rd2801, {%r2154, %r2153};
	xor.b64  	%rd2802, %rd2801, %rd2800;
	shf.l.wrap.b32 	%r2155, %r2149, %r2150, 23;
	shf.l.wrap.b32 	%r2156, %r2150, %r2149, 23;
	mov.b64 	%rd2803, {%r2156, %r2155};
	xor.b64  	%rd2804, %rd2802, %rd2803;
	xor.b64  	%rd2805, %rd2763, %rd2738;
	and.b64  	%rd2806, %rd2788, %rd2805;
	xor.b64  	%rd2807, %rd2806, %rd2738;
	add.s64 	%rd2808, %rd2713, %rd2424;
	ld.const.u64 	%rd2809, [k_sha512+632];
	add.s64 	%rd2810, %rd2808, %rd2809;
	add.s64 	%rd2811, %rd2810, %rd2807;
	add.s64 	%rd2812, %rd2811, %rd2804;
	add.s64 	%rd2813, %rd2812, %rd2724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2157,%dummy}, %rd2799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2158}, %rd2799;
	}
	shf.r.wrap.b32 	%r2159, %r2158, %r2157, 28;
	shf.r.wrap.b32 	%r2160, %r2157, %r2158, 28;
	mov.b64 	%rd2814, {%r2160, %r2159};
	shf.l.wrap.b32 	%r2161, %r2157, %r2158, 30;
	shf.l.wrap.b32 	%r2162, %r2158, %r2157, 30;
	mov.b64 	%rd2815, {%r2162, %r2161};
	xor.b64  	%rd2816, %rd2815, %rd2814;
	shf.l.wrap.b32 	%r2163, %r2157, %r2158, 25;
	shf.l.wrap.b32 	%r2164, %r2158, %r2157, 25;
	mov.b64 	%rd2817, {%r2164, %r2163};
	xor.b64  	%rd2818, %rd2816, %rd2817;
	xor.b64  	%rd2819, %rd2799, %rd2749;
	xor.b64  	%rd2820, %rd2799, %rd2774;
	and.b64  	%rd2821, %rd2820, %rd2819;
	xor.b64  	%rd2822, %rd2821, %rd2799;
	add.s64 	%rd2823, %rd2812, %rd2822;
	add.s64 	%rd2824, %rd2823, %rd2818;
	add.s64 	%rd2825, %rd2824, 7640891576956012808;
	add.s64 	%rd2826, %rd2799, -4942790177534073029;
	add.s64 	%rd2827, %rd2774, 4354685564936845355;
	add.s64 	%rd2828, %rd2749, -6534734903238641935;
	add.s64 	%rd2829, %rd2813, 5840696475078001361;
	add.s64 	%rd2830, %rd2788, -7276294671716946913;
	add.s64 	%rd2831, %rd2763, 2270897969802886507;
	add.s64 	%rd2832, %rd2738, 6620516959819538809;
	mul.wide.u32 	%rd2833, %r1, 64;
	add.s64 	%rd2834, %rd2, %rd2833;
	st.global.u64 	[%rd2834], %rd2825;
	st.global.u64 	[%rd2834+8], %rd2826;
	st.global.u64 	[%rd2834+16], %rd2827;
	st.global.u64 	[%rd2834+24], %rd2828;
	st.global.u64 	[%rd2834+32], %rd2829;
	st.global.u64 	[%rd2834+40], %rd2830;
	st.global.u64 	[%rd2834+48], %rd2831;
	st.global.u64 	[%rd2834+56], %rd2832;

BB1_2:
	ret;
}

	// .globl	m09600_loop
.entry m09600_loop(
	.param .u64 .ptr .global .align 4 m09600_loop_param_0,
	.param .u64 .ptr .global .align 4 m09600_loop_param_1,
	.param .u64 .ptr .global .align 4 m09600_loop_param_2,
	.param .u64 .ptr .global .align 4 m09600_loop_param_3,
	.param .u64 .ptr .global .align 8 m09600_loop_param_4,
	.param .u64 .ptr .global .align 1 m09600_loop_param_5,
	.param .u64 .ptr .global .align 4 m09600_loop_param_6,
	.param .u64 .ptr .global .align 4 m09600_loop_param_7,
	.param .u64 .ptr .global .align 4 m09600_loop_param_8,
	.param .u64 .ptr .global .align 4 m09600_loop_param_9,
	.param .u64 .ptr .global .align 4 m09600_loop_param_10,
	.param .u64 .ptr .global .align 4 m09600_loop_param_11,
	.param .u64 .ptr .global .align 4 m09600_loop_param_12,
	.param .u64 .ptr .global .align 4 m09600_loop_param_13,
	.param .u64 .ptr .global .align 4 m09600_loop_param_14,
	.param .u64 .ptr .global .align 4 m09600_loop_param_15,
	.param .u64 .ptr .global .align 4 m09600_loop_param_16,
	.param .u64 .ptr .global .align 4 m09600_loop_param_17,
	.param .u64 .ptr .global .align 4 m09600_loop_param_18,
	.param .u64 .ptr .global .align 4 m09600_loop_param_19,
	.param .u64 .ptr .global .align 4 m09600_loop_param_20,
	.param .u64 .ptr .global .align 4 m09600_loop_param_21,
	.param .u64 .ptr .global .align 4 m09600_loop_param_22,
	.param .u64 .ptr .global .align 4 m09600_loop_param_23,
	.param .u32 m09600_loop_param_24,
	.param .u32 m09600_loop_param_25,
	.param .u32 m09600_loop_param_26,
	.param .u32 m09600_loop_param_27,
	.param .u32 m09600_loop_param_28,
	.param .u32 m09600_loop_param_29,
	.param .u32 m09600_loop_param_30,
	.param .u32 m09600_loop_param_31,
	.param .u32 m09600_loop_param_32,
	.param .u32 m09600_loop_param_33,
	.param .u32 m09600_loop_param_34
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<1942>;
	.reg .b64 	%rd<2920>;


	ld.param.u64 	%rd131, [m09600_loop_param_4];
	ld.param.u32 	%r1940, [m09600_loop_param_28];
	ld.param.u32 	%r7, [m09600_loop_param_29];
	ld.param.u32 	%r8, [m09600_loop_param_34];
	mov.b32	%r9, %envreg3;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %ntid.x;
	mad.lo.s32 	%r12, %r10, %r11, %r9;
	mov.u32 	%r13, %tid.x;
	add.s32 	%r1, %r12, %r13;
	setp.ge.u32	%p1, %r1, %r8;
	@%p1 bra 	BB2_5;

	mul.wide.u32 	%rd132, %r1, 64;
	add.s64 	%rd1, %rd131, %rd132;
	ld.global.u64 	%rd133, [%rd1];
	shl.b64 	%rd134, %rd133, 32;
	ld.global.u64 	%rd135, [%rd1+8];
	shr.u64 	%rd136, %rd135, 32;
	or.b64  	%rd2914, %rd136, %rd134;
	shl.b64 	%rd137, %rd135, 32;
	ld.global.u64 	%rd138, [%rd1+16];
	shr.u64 	%rd139, %rd138, 32;
	or.b64  	%rd2913, %rd139, %rd137;
	shl.b64 	%rd140, %rd138, 32;
	ld.global.u64 	%rd141, [%rd1+24];
	shr.u64 	%rd142, %rd141, 32;
	or.b64  	%rd2912, %rd142, %rd140;
	shl.b64 	%rd143, %rd141, 32;
	ld.global.u64 	%rd144, [%rd1+32];
	shr.u64 	%rd145, %rd144, 32;
	or.b64  	%rd2919, %rd145, %rd143;
	shl.b64 	%rd146, %rd144, 32;
	ld.global.u64 	%rd147, [%rd1+40];
	shr.u64 	%rd148, %rd147, 32;
	or.b64  	%rd2918, %rd148, %rd146;
	shl.b64 	%rd149, %rd147, 32;
	ld.global.u64 	%rd150, [%rd1+48];
	shr.u64 	%rd151, %rd150, 32;
	or.b64  	%rd2917, %rd151, %rd149;
	shl.b64 	%rd152, %rd150, 32;
	ld.global.u64 	%rd2915, [%rd1+56];
	shr.u64 	%rd153, %rd2915, 32;
	or.b64  	%rd2916, %rd153, %rd152;
	shr.u64 	%rd2911, %rd133, 32;
	setp.eq.s32	%p2, %r7, 0;
	@%p2 bra 	BB2_4;

	ld.const.u64 	%rd154, [k_sha512];
	add.s64 	%rd18, %rd154, 6620516959819538809;
	mov.u64 	%rd155, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15,%dummy}, %rd155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16}, %rd155;
	}
	shf.r.wrap.b32 	%r17, %r16, %r15, 18;
	shf.r.wrap.b32 	%r18, %r15, %r16, 18;
	mov.b64 	%rd156, {%r18, %r17};
	shf.r.wrap.b32 	%r19, %r16, %r15, 14;
	shf.r.wrap.b32 	%r20, %r15, %r16, 14;
	mov.b64 	%rd157, {%r20, %r19};
	xor.b64  	%rd158, %rd156, %rd157;
	shf.l.wrap.b32 	%r21, %r15, %r16, 23;
	shf.l.wrap.b32 	%r22, %r16, %r15, 23;
	mov.b64 	%rd159, {%r22, %r21};
	xor.b64  	%rd19, %rd158, %rd159;
	mov.u64 	%rd160, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r23}, %rd160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r24,%dummy}, %rd160;
	}
	shf.l.wrap.b32 	%r25, %r24, %r23, 30;
	shf.l.wrap.b32 	%r26, %r23, %r24, 30;
	mov.b64 	%rd161, {%r26, %r25};
	shf.r.wrap.b32 	%r27, %r23, %r24, 28;
	shf.r.wrap.b32 	%r28, %r24, %r23, 28;
	mov.b64 	%rd162, {%r28, %r27};
	xor.b64  	%rd163, %rd161, %rd162;
	shf.l.wrap.b32 	%r29, %r24, %r23, 25;
	shf.l.wrap.b32 	%r30, %r23, %r24, 25;
	mov.b64 	%rd164, {%r30, %r29};
	xor.b64  	%rd20, %rd163, %rd164;
	ld.const.u64 	%rd21, [k_sha512+8];
	ld.const.u64 	%rd22, [k_sha512+16];
	ld.const.u64 	%rd23, [k_sha512+24];
	ld.const.u64 	%rd24, [k_sha512+32];
	ld.const.u64 	%rd25, [k_sha512+40];
	ld.const.u64 	%rd26, [k_sha512+48];
	ld.const.u64 	%rd27, [k_sha512+56];
	ld.const.u64 	%rd28, [k_sha512+64];
	ld.const.u64 	%rd29, [k_sha512+72];
	ld.const.u64 	%rd30, [k_sha512+80];
	ld.const.u64 	%rd31, [k_sha512+88];
	ld.const.u64 	%rd32, [k_sha512+96];
	ld.const.u64 	%rd33, [k_sha512+104];
	ld.const.u64 	%rd34, [k_sha512+112];
	ld.const.u64 	%rd35, [k_sha512+120];
	ld.const.u64 	%rd36, [k_sha512+128];
	ld.const.u64 	%rd37, [k_sha512+136];
	ld.const.u64 	%rd38, [k_sha512+144];
	ld.const.u64 	%rd39, [k_sha512+152];
	ld.const.u64 	%rd40, [k_sha512+160];
	ld.const.u64 	%rd41, [k_sha512+168];
	ld.const.u64 	%rd42, [k_sha512+176];
	ld.const.u64 	%rd43, [k_sha512+184];
	ld.const.u64 	%rd44, [k_sha512+192];
	ld.const.u64 	%rd45, [k_sha512+200];
	ld.const.u64 	%rd46, [k_sha512+208];
	ld.const.u64 	%rd47, [k_sha512+216];
	ld.const.u64 	%rd48, [k_sha512+224];
	ld.const.u64 	%rd49, [k_sha512+232];
	ld.const.u64 	%rd50, [k_sha512+240];
	ld.const.u64 	%rd51, [k_sha512+248];
	ld.const.u64 	%rd52, [k_sha512+256];
	ld.const.u64 	%rd53, [k_sha512+264];
	ld.const.u64 	%rd54, [k_sha512+272];
	ld.const.u64 	%rd55, [k_sha512+280];
	ld.const.u64 	%rd56, [k_sha512+288];
	ld.const.u64 	%rd57, [k_sha512+296];
	ld.const.u64 	%rd58, [k_sha512+304];
	ld.const.u64 	%rd59, [k_sha512+312];
	ld.const.u64 	%rd60, [k_sha512+320];
	ld.const.u64 	%rd61, [k_sha512+328];
	ld.const.u64 	%rd62, [k_sha512+336];
	ld.const.u64 	%rd63, [k_sha512+344];
	ld.const.u64 	%rd64, [k_sha512+352];
	ld.const.u64 	%rd65, [k_sha512+360];
	ld.const.u64 	%rd66, [k_sha512+368];
	ld.const.u64 	%rd67, [k_sha512+376];
	ld.const.u64 	%rd68, [k_sha512+384];
	ld.const.u64 	%rd69, [k_sha512+392];
	ld.const.u64 	%rd70, [k_sha512+400];
	ld.const.u64 	%rd71, [k_sha512+408];
	ld.const.u64 	%rd72, [k_sha512+416];
	ld.const.u64 	%rd73, [k_sha512+424];
	ld.const.u64 	%rd74, [k_sha512+432];
	ld.const.u64 	%rd75, [k_sha512+440];
	ld.const.u64 	%rd76, [k_sha512+448];
	ld.const.u64 	%rd77, [k_sha512+456];
	ld.const.u64 	%rd78, [k_sha512+464];
	ld.const.u64 	%rd79, [k_sha512+472];
	ld.const.u64 	%rd80, [k_sha512+480];
	ld.const.u64 	%rd81, [k_sha512+488];
	ld.const.u64 	%rd82, [k_sha512+496];
	ld.const.u64 	%rd83, [k_sha512+504];
	ld.const.u64 	%rd84, [k_sha512+512];
	ld.const.u64 	%rd85, [k_sha512+520];
	ld.const.u64 	%rd86, [k_sha512+528];
	ld.const.u64 	%rd87, [k_sha512+536];
	ld.const.u64 	%rd88, [k_sha512+544];
	ld.const.u64 	%rd89, [k_sha512+552];
	ld.const.u64 	%rd90, [k_sha512+560];
	ld.const.u64 	%rd91, [k_sha512+568];
	ld.const.u64 	%rd92, [k_sha512+576];
	ld.const.u64 	%rd93, [k_sha512+584];
	ld.const.u64 	%rd94, [k_sha512+592];
	ld.const.u64 	%rd95, [k_sha512+600];
	ld.const.u64 	%rd96, [k_sha512+608];
	ld.const.u64 	%rd97, [k_sha512+616];
	ld.const.u64 	%rd98, [k_sha512+624];
	ld.const.u64 	%rd99, [k_sha512+632];
	mov.u64 	%rd165, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r31}, %rd165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r32,%dummy}, %rd165;
	}
	shf.l.wrap.b32 	%r33, %r32, %r31, 3;
	shf.l.wrap.b32 	%r34, %r31, %r32, 3;
	mov.b64 	%rd166, {%r34, %r33};
	shf.r.wrap.b32 	%r35, %r31, %r32, 19;
	shf.r.wrap.b32 	%r36, %r32, %r31, 19;
	mov.b64 	%rd167, {%r36, %r35};
	xor.b64  	%rd100, %rd167, %rd166;
	mov.u64 	%rd168, 544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37,%dummy}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38}, %rd168;
	}
	shf.r.wrap.b32 	%r39, %r38, %r37, 19;
	shf.r.wrap.b32 	%r40, %r37, %r38, 19;
	mov.b64 	%rd169, {%r40, %r39};
	shf.l.wrap.b32 	%r41, %r37, %r38, 3;
	shf.l.wrap.b32 	%r42, %r38, %r37, 3;
	mov.b64 	%rd170, {%r42, %r41};
	xor.b64  	%rd171, %rd169, %rd170;
	xor.b64  	%rd101, %rd171, 8;
	shf.r.wrap.b32 	%r43, %r31, %r32, 8;
	shf.r.wrap.b32 	%r44, %r32, %r31, 8;
	mov.b64 	%rd172, {%r44, %r43};
	shf.r.wrap.b32 	%r45, %r31, %r32, 1;
	shf.r.wrap.b32 	%r46, %r32, %r31, 1;
	mov.b64 	%rd173, {%r46, %r45};
	xor.b64  	%rd102, %rd173, %rd172;
	shf.r.wrap.b32 	%r47, %r38, %r37, 1;
	shf.r.wrap.b32 	%r48, %r37, %r38, 1;
	mov.b64 	%rd174, {%r48, %r47};
	shf.r.wrap.b32 	%r49, %r38, %r37, 8;
	shf.r.wrap.b32 	%r50, %r37, %r38, 8;
	mov.b64 	%rd175, {%r50, %r49};
	xor.b64  	%rd176, %rd174, %rd175;
	xor.b64  	%rd103, %rd176, 4;
	mov.u32 	%r1941, 0;

BB2_3:
	shl.b64 	%rd177, %rd2915, 32;
	or.b64  	%rd178, %rd177, 2147483648;
	shr.u32 	%r51, %r1940, 24;
	shr.u32 	%r52, %r1940, 8;
	and.b32  	%r53, %r52, 65280;
	or.b32  	%r54, %r53, %r51;
	shl.b32 	%r55, %r1940, 24;
	shl.b32 	%r56, %r1940, 8;
	and.b32  	%r57, %r56, 16711680;
	or.b32  	%r58, %r55, %r57;
	or.b32  	%r59, %r58, %r54;
	cvt.u64.u32	%rd179, %r59;
	shl.b64 	%rd180, %rd179, 32;
	or.b64  	%rd181, %rd180, %rd2911;
	add.s64 	%rd182, %rd18, %rd181;
	add.s64 	%rd183, %rd182, %rd19;
	add.s64 	%rd184, %rd183, -4263291710961585108;
	add.s64 	%rd185, %rd183, %rd20;
	add.s64 	%rd186, %rd185, 6482280703085258342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r60,%dummy}, %rd184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r61}, %rd184;
	}
	shf.r.wrap.b32 	%r62, %r61, %r60, 14;
	shf.r.wrap.b32 	%r63, %r60, %r61, 14;
	mov.b64 	%rd187, {%r63, %r62};
	shf.r.wrap.b32 	%r64, %r61, %r60, 18;
	shf.r.wrap.b32 	%r65, %r60, %r61, 18;
	mov.b64 	%rd188, {%r65, %r64};
	xor.b64  	%rd189, %rd188, %rd187;
	shf.l.wrap.b32 	%r66, %r60, %r61, 23;
	shf.l.wrap.b32 	%r67, %r61, %r60, 23;
	mov.b64 	%rd190, {%r67, %r66};
	xor.b64  	%rd191, %rd189, %rd190;
	and.b64  	%rd192, %rd184, -3887949035690463538;
	xor.b64  	%rd193, %rd192, -7276294671716946913;
	add.s64 	%rd194, %rd2914, %rd21;
	add.s64 	%rd195, %rd194, %rd193;
	add.s64 	%rd196, %rd195, %rd191;
	xor.b64  	%rd197, %rd186, -4942790177534073029;
	xor.b64  	%rd198, %rd186, 7640891576956012808;
	and.b64  	%rd199, %rd198, %rd197;
	xor.b64  	%rd200, %rd199, %rd186;
	add.s64 	%rd201, %rd196, %rd200;
	add.s64 	%rd202, %rd196, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r68,%dummy}, %rd186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r69}, %rd186;
	}
	shf.r.wrap.b32 	%r70, %r69, %r68, 28;
	shf.r.wrap.b32 	%r71, %r68, %r69, 28;
	mov.b64 	%rd203, {%r71, %r70};
	shf.l.wrap.b32 	%r72, %r68, %r69, 30;
	shf.l.wrap.b32 	%r73, %r69, %r68, 30;
	mov.b64 	%rd204, {%r73, %r72};
	xor.b64  	%rd205, %rd204, %rd203;
	shf.l.wrap.b32 	%r74, %r68, %r69, 25;
	shf.l.wrap.b32 	%r75, %r69, %r68, 25;
	mov.b64 	%rd206, {%r75, %r74};
	xor.b64  	%rd207, %rd205, %rd206;
	add.s64 	%rd208, %rd201, %rd207;
	add.s64 	%rd209, %rd208, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd202;
	}
	shf.r.wrap.b32 	%r78, %r77, %r76, 14;
	shf.r.wrap.b32 	%r79, %r76, %r77, 14;
	mov.b64 	%rd210, {%r79, %r78};
	shf.r.wrap.b32 	%r80, %r77, %r76, 18;
	shf.r.wrap.b32 	%r81, %r76, %r77, 18;
	mov.b64 	%rd211, {%r81, %r80};
	xor.b64  	%rd212, %rd211, %rd210;
	shf.l.wrap.b32 	%r82, %r76, %r77, 23;
	shf.l.wrap.b32 	%r83, %r77, %r76, 23;
	mov.b64 	%rd213, {%r83, %r82};
	xor.b64  	%rd214, %rd212, %rd213;
	xor.b64  	%rd215, %rd184, 5840696475078001361;
	and.b64  	%rd216, %rd202, %rd215;
	xor.b64  	%rd217, %rd216, 5840696475078001361;
	add.s64 	%rd218, %rd2913, %rd22;
	add.s64 	%rd219, %rd218, %rd217;
	add.s64 	%rd220, %rd219, %rd214;
	xor.b64  	%rd221, %rd209, 7640891576956012808;
	xor.b64  	%rd222, %rd209, %rd186;
	and.b64  	%rd223, %rd222, %rd221;
	xor.b64  	%rd224, %rd223, %rd209;
	add.s64 	%rd225, %rd220, %rd224;
	add.s64 	%rd226, %rd220, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r84,%dummy}, %rd209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r85}, %rd209;
	}
	shf.r.wrap.b32 	%r86, %r85, %r84, 28;
	shf.r.wrap.b32 	%r87, %r84, %r85, 28;
	mov.b64 	%rd227, {%r87, %r86};
	shf.l.wrap.b32 	%r88, %r84, %r85, 30;
	shf.l.wrap.b32 	%r89, %r85, %r84, 30;
	mov.b64 	%rd228, {%r89, %r88};
	xor.b64  	%rd229, %rd228, %rd227;
	shf.l.wrap.b32 	%r90, %r84, %r85, 25;
	shf.l.wrap.b32 	%r91, %r85, %r84, 25;
	mov.b64 	%rd230, {%r91, %r90};
	xor.b64  	%rd231, %rd229, %rd230;
	add.s64 	%rd232, %rd225, %rd231;
	add.s64 	%rd233, %rd232, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r92,%dummy}, %rd226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r93}, %rd226;
	}
	shf.r.wrap.b32 	%r94, %r93, %r92, 14;
	shf.r.wrap.b32 	%r95, %r92, %r93, 14;
	mov.b64 	%rd234, {%r95, %r94};
	shf.r.wrap.b32 	%r96, %r93, %r92, 18;
	shf.r.wrap.b32 	%r97, %r92, %r93, 18;
	mov.b64 	%rd235, {%r97, %r96};
	xor.b64  	%rd236, %rd235, %rd234;
	shf.l.wrap.b32 	%r98, %r92, %r93, 23;
	shf.l.wrap.b32 	%r99, %r93, %r92, 23;
	mov.b64 	%rd237, {%r99, %r98};
	xor.b64  	%rd238, %rd236, %rd237;
	xor.b64  	%rd239, %rd202, %rd184;
	and.b64  	%rd240, %rd226, %rd239;
	xor.b64  	%rd241, %rd240, %rd184;
	add.s64 	%rd242, %rd2912, %rd23;
	add.s64 	%rd243, %rd242, %rd241;
	add.s64 	%rd244, %rd243, %rd238;
	xor.b64  	%rd245, %rd233, %rd186;
	xor.b64  	%rd246, %rd233, %rd209;
	and.b64  	%rd247, %rd246, %rd245;
	xor.b64  	%rd248, %rd247, %rd233;
	add.s64 	%rd249, %rd244, %rd248;
	add.s64 	%rd250, %rd244, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r100,%dummy}, %rd233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r101}, %rd233;
	}
	shf.r.wrap.b32 	%r102, %r101, %r100, 28;
	shf.r.wrap.b32 	%r103, %r100, %r101, 28;
	mov.b64 	%rd251, {%r103, %r102};
	shf.l.wrap.b32 	%r104, %r100, %r101, 30;
	shf.l.wrap.b32 	%r105, %r101, %r100, 30;
	mov.b64 	%rd252, {%r105, %r104};
	xor.b64  	%rd253, %rd252, %rd251;
	shf.l.wrap.b32 	%r106, %r100, %r101, 25;
	shf.l.wrap.b32 	%r107, %r101, %r100, 25;
	mov.b64 	%rd254, {%r107, %r106};
	xor.b64  	%rd255, %rd253, %rd254;
	add.s64 	%rd256, %rd249, %rd255;
	add.s64 	%rd257, %rd256, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r108,%dummy}, %rd250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r109}, %rd250;
	}
	shf.r.wrap.b32 	%r110, %r109, %r108, 14;
	shf.r.wrap.b32 	%r111, %r108, %r109, 14;
	mov.b64 	%rd258, {%r111, %r110};
	shf.r.wrap.b32 	%r112, %r109, %r108, 18;
	shf.r.wrap.b32 	%r113, %r108, %r109, 18;
	mov.b64 	%rd259, {%r113, %r112};
	xor.b64  	%rd260, %rd259, %rd258;
	shf.l.wrap.b32 	%r114, %r108, %r109, 23;
	shf.l.wrap.b32 	%r115, %r109, %r108, 23;
	mov.b64 	%rd261, {%r115, %r114};
	xor.b64  	%rd262, %rd260, %rd261;
	xor.b64  	%rd263, %rd226, %rd202;
	and.b64  	%rd264, %rd250, %rd263;
	xor.b64  	%rd265, %rd264, %rd202;
	add.s64 	%rd266, %rd184, %rd2919;
	add.s64 	%rd267, %rd266, %rd24;
	add.s64 	%rd268, %rd267, %rd265;
	add.s64 	%rd269, %rd268, %rd262;
	add.s64 	%rd270, %rd269, %rd186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r116,%dummy}, %rd257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r117}, %rd257;
	}
	shf.r.wrap.b32 	%r118, %r117, %r116, 28;
	shf.r.wrap.b32 	%r119, %r116, %r117, 28;
	mov.b64 	%rd271, {%r119, %r118};
	shf.l.wrap.b32 	%r120, %r116, %r117, 30;
	shf.l.wrap.b32 	%r121, %r117, %r116, 30;
	mov.b64 	%rd272, {%r121, %r120};
	xor.b64  	%rd273, %rd272, %rd271;
	shf.l.wrap.b32 	%r122, %r116, %r117, 25;
	shf.l.wrap.b32 	%r123, %r117, %r116, 25;
	mov.b64 	%rd274, {%r123, %r122};
	xor.b64  	%rd275, %rd273, %rd274;
	xor.b64  	%rd276, %rd257, %rd209;
	xor.b64  	%rd277, %rd257, %rd233;
	and.b64  	%rd278, %rd277, %rd276;
	xor.b64  	%rd279, %rd278, %rd257;
	add.s64 	%rd280, %rd269, %rd279;
	add.s64 	%rd281, %rd280, %rd275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r124,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r125}, %rd270;
	}
	shf.r.wrap.b32 	%r126, %r125, %r124, 14;
	shf.r.wrap.b32 	%r127, %r124, %r125, 14;
	mov.b64 	%rd282, {%r127, %r126};
	shf.r.wrap.b32 	%r128, %r125, %r124, 18;
	shf.r.wrap.b32 	%r129, %r124, %r125, 18;
	mov.b64 	%rd283, {%r129, %r128};
	xor.b64  	%rd284, %rd283, %rd282;
	shf.l.wrap.b32 	%r130, %r124, %r125, 23;
	shf.l.wrap.b32 	%r131, %r125, %r124, 23;
	mov.b64 	%rd285, {%r131, %r130};
	xor.b64  	%rd286, %rd284, %rd285;
	xor.b64  	%rd287, %rd250, %rd226;
	and.b64  	%rd288, %rd270, %rd287;
	xor.b64  	%rd289, %rd288, %rd226;
	add.s64 	%rd290, %rd202, %rd2918;
	add.s64 	%rd291, %rd290, %rd25;
	add.s64 	%rd292, %rd291, %rd289;
	add.s64 	%rd293, %rd292, %rd286;
	add.s64 	%rd294, %rd293, %rd209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r132,%dummy}, %rd281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r133}, %rd281;
	}
	shf.r.wrap.b32 	%r134, %r133, %r132, 28;
	shf.r.wrap.b32 	%r135, %r132, %r133, 28;
	mov.b64 	%rd295, {%r135, %r134};
	shf.l.wrap.b32 	%r136, %r132, %r133, 30;
	shf.l.wrap.b32 	%r137, %r133, %r132, 30;
	mov.b64 	%rd296, {%r137, %r136};
	xor.b64  	%rd297, %rd296, %rd295;
	shf.l.wrap.b32 	%r138, %r132, %r133, 25;
	shf.l.wrap.b32 	%r139, %r133, %r132, 25;
	mov.b64 	%rd298, {%r139, %r138};
	xor.b64  	%rd299, %rd297, %rd298;
	xor.b64  	%rd300, %rd281, %rd233;
	xor.b64  	%rd301, %rd281, %rd257;
	and.b64  	%rd302, %rd301, %rd300;
	xor.b64  	%rd303, %rd302, %rd281;
	add.s64 	%rd304, %rd293, %rd303;
	add.s64 	%rd305, %rd304, %rd299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r140,%dummy}, %rd294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r141}, %rd294;
	}
	shf.r.wrap.b32 	%r142, %r141, %r140, 14;
	shf.r.wrap.b32 	%r143, %r140, %r141, 14;
	mov.b64 	%rd306, {%r143, %r142};
	shf.r.wrap.b32 	%r144, %r141, %r140, 18;
	shf.r.wrap.b32 	%r145, %r140, %r141, 18;
	mov.b64 	%rd307, {%r145, %r144};
	xor.b64  	%rd308, %rd307, %rd306;
	shf.l.wrap.b32 	%r146, %r140, %r141, 23;
	shf.l.wrap.b32 	%r147, %r141, %r140, 23;
	mov.b64 	%rd309, {%r147, %r146};
	xor.b64  	%rd310, %rd308, %rd309;
	xor.b64  	%rd311, %rd270, %rd250;
	and.b64  	%rd312, %rd294, %rd311;
	xor.b64  	%rd313, %rd312, %rd250;
	add.s64 	%rd314, %rd226, %rd2917;
	add.s64 	%rd315, %rd314, %rd26;
	add.s64 	%rd316, %rd315, %rd313;
	add.s64 	%rd317, %rd316, %rd310;
	add.s64 	%rd318, %rd317, %rd233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r148,%dummy}, %rd305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r149}, %rd305;
	}
	shf.r.wrap.b32 	%r150, %r149, %r148, 28;
	shf.r.wrap.b32 	%r151, %r148, %r149, 28;
	mov.b64 	%rd319, {%r151, %r150};
	shf.l.wrap.b32 	%r152, %r148, %r149, 30;
	shf.l.wrap.b32 	%r153, %r149, %r148, 30;
	mov.b64 	%rd320, {%r153, %r152};
	xor.b64  	%rd321, %rd320, %rd319;
	shf.l.wrap.b32 	%r154, %r148, %r149, 25;
	shf.l.wrap.b32 	%r155, %r149, %r148, 25;
	mov.b64 	%rd322, {%r155, %r154};
	xor.b64  	%rd323, %rd321, %rd322;
	xor.b64  	%rd324, %rd305, %rd257;
	xor.b64  	%rd325, %rd305, %rd281;
	and.b64  	%rd326, %rd325, %rd324;
	xor.b64  	%rd327, %rd326, %rd305;
	add.s64 	%rd328, %rd317, %rd327;
	add.s64 	%rd329, %rd328, %rd323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r156,%dummy}, %rd318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r157}, %rd318;
	}
	shf.r.wrap.b32 	%r158, %r157, %r156, 14;
	shf.r.wrap.b32 	%r159, %r156, %r157, 14;
	mov.b64 	%rd330, {%r159, %r158};
	shf.r.wrap.b32 	%r160, %r157, %r156, 18;
	shf.r.wrap.b32 	%r161, %r156, %r157, 18;
	mov.b64 	%rd331, {%r161, %r160};
	xor.b64  	%rd332, %rd331, %rd330;
	shf.l.wrap.b32 	%r162, %r156, %r157, 23;
	shf.l.wrap.b32 	%r163, %r157, %r156, 23;
	mov.b64 	%rd333, {%r163, %r162};
	xor.b64  	%rd334, %rd332, %rd333;
	xor.b64  	%rd335, %rd294, %rd270;
	and.b64  	%rd336, %rd318, %rd335;
	xor.b64  	%rd337, %rd336, %rd270;
	add.s64 	%rd338, %rd250, %rd2916;
	add.s64 	%rd339, %rd338, %rd27;
	add.s64 	%rd340, %rd339, %rd337;
	add.s64 	%rd341, %rd340, %rd334;
	add.s64 	%rd342, %rd341, %rd257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r164,%dummy}, %rd329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r165}, %rd329;
	}
	shf.r.wrap.b32 	%r166, %r165, %r164, 28;
	shf.r.wrap.b32 	%r167, %r164, %r165, 28;
	mov.b64 	%rd343, {%r167, %r166};
	shf.l.wrap.b32 	%r168, %r164, %r165, 30;
	shf.l.wrap.b32 	%r169, %r165, %r164, 30;
	mov.b64 	%rd344, {%r169, %r168};
	xor.b64  	%rd345, %rd344, %rd343;
	shf.l.wrap.b32 	%r170, %r164, %r165, 25;
	shf.l.wrap.b32 	%r171, %r165, %r164, 25;
	mov.b64 	%rd346, {%r171, %r170};
	xor.b64  	%rd347, %rd345, %rd346;
	xor.b64  	%rd348, %rd329, %rd281;
	xor.b64  	%rd349, %rd329, %rd305;
	and.b64  	%rd350, %rd349, %rd348;
	xor.b64  	%rd351, %rd350, %rd329;
	add.s64 	%rd352, %rd341, %rd351;
	add.s64 	%rd353, %rd352, %rd347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r172,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r173}, %rd342;
	}
	shf.r.wrap.b32 	%r174, %r173, %r172, 14;
	shf.r.wrap.b32 	%r175, %r172, %r173, 14;
	mov.b64 	%rd354, {%r175, %r174};
	shf.r.wrap.b32 	%r176, %r173, %r172, 18;
	shf.r.wrap.b32 	%r177, %r172, %r173, 18;
	mov.b64 	%rd355, {%r177, %r176};
	xor.b64  	%rd356, %rd355, %rd354;
	shf.l.wrap.b32 	%r178, %r172, %r173, 23;
	shf.l.wrap.b32 	%r179, %r173, %r172, 23;
	mov.b64 	%rd357, {%r179, %r178};
	xor.b64  	%rd358, %rd356, %rd357;
	xor.b64  	%rd359, %rd318, %rd294;
	and.b64  	%rd360, %rd342, %rd359;
	xor.b64  	%rd361, %rd360, %rd294;
	add.s64 	%rd362, %rd270, %rd178;
	add.s64 	%rd363, %rd362, %rd28;
	add.s64 	%rd364, %rd363, %rd361;
	add.s64 	%rd365, %rd364, %rd358;
	add.s64 	%rd366, %rd365, %rd281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r180,%dummy}, %rd353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r181}, %rd353;
	}
	shf.r.wrap.b32 	%r182, %r181, %r180, 28;
	shf.r.wrap.b32 	%r183, %r180, %r181, 28;
	mov.b64 	%rd367, {%r183, %r182};
	shf.l.wrap.b32 	%r184, %r180, %r181, 30;
	shf.l.wrap.b32 	%r185, %r181, %r180, 30;
	mov.b64 	%rd368, {%r185, %r184};
	xor.b64  	%rd369, %rd368, %rd367;
	shf.l.wrap.b32 	%r186, %r180, %r181, 25;
	shf.l.wrap.b32 	%r187, %r181, %r180, 25;
	mov.b64 	%rd370, {%r187, %r186};
	xor.b64  	%rd371, %rd369, %rd370;
	xor.b64  	%rd372, %rd353, %rd305;
	xor.b64  	%rd373, %rd353, %rd329;
	and.b64  	%rd374, %rd373, %rd372;
	xor.b64  	%rd375, %rd374, %rd353;
	add.s64 	%rd376, %rd365, %rd375;
	add.s64 	%rd377, %rd376, %rd371;
	add.s64 	%rd378, %rd29, %rd294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r188,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r189}, %rd366;
	}
	shf.r.wrap.b32 	%r190, %r189, %r188, 14;
	shf.r.wrap.b32 	%r191, %r188, %r189, 14;
	mov.b64 	%rd379, {%r191, %r190};
	shf.r.wrap.b32 	%r192, %r189, %r188, 18;
	shf.r.wrap.b32 	%r193, %r188, %r189, 18;
	mov.b64 	%rd380, {%r193, %r192};
	xor.b64  	%rd381, %rd380, %rd379;
	shf.l.wrap.b32 	%r194, %r188, %r189, 23;
	shf.l.wrap.b32 	%r195, %r189, %r188, 23;
	mov.b64 	%rd382, {%r195, %r194};
	xor.b64  	%rd383, %rd381, %rd382;
	xor.b64  	%rd384, %rd342, %rd318;
	and.b64  	%rd385, %rd366, %rd384;
	xor.b64  	%rd386, %rd385, %rd318;
	add.s64 	%rd387, %rd378, %rd386;
	add.s64 	%rd388, %rd387, %rd383;
	add.s64 	%rd389, %rd388, %rd305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r196,%dummy}, %rd377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r197}, %rd377;
	}
	shf.r.wrap.b32 	%r198, %r197, %r196, 28;
	shf.r.wrap.b32 	%r199, %r196, %r197, 28;
	mov.b64 	%rd390, {%r199, %r198};
	shf.l.wrap.b32 	%r200, %r196, %r197, 30;
	shf.l.wrap.b32 	%r201, %r197, %r196, 30;
	mov.b64 	%rd391, {%r201, %r200};
	xor.b64  	%rd392, %rd391, %rd390;
	shf.l.wrap.b32 	%r202, %r196, %r197, 25;
	shf.l.wrap.b32 	%r203, %r197, %r196, 25;
	mov.b64 	%rd393, {%r203, %r202};
	xor.b64  	%rd394, %rd392, %rd393;
	xor.b64  	%rd395, %rd377, %rd329;
	xor.b64  	%rd396, %rd377, %rd353;
	and.b64  	%rd397, %rd396, %rd395;
	xor.b64  	%rd398, %rd397, %rd377;
	add.s64 	%rd399, %rd388, %rd398;
	add.s64 	%rd400, %rd399, %rd394;
	add.s64 	%rd401, %rd30, %rd318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r204,%dummy}, %rd389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r205}, %rd389;
	}
	shf.r.wrap.b32 	%r206, %r205, %r204, 14;
	shf.r.wrap.b32 	%r207, %r204, %r205, 14;
	mov.b64 	%rd402, {%r207, %r206};
	shf.r.wrap.b32 	%r208, %r205, %r204, 18;
	shf.r.wrap.b32 	%r209, %r204, %r205, 18;
	mov.b64 	%rd403, {%r209, %r208};
	xor.b64  	%rd404, %rd403, %rd402;
	shf.l.wrap.b32 	%r210, %r204, %r205, 23;
	shf.l.wrap.b32 	%r211, %r205, %r204, 23;
	mov.b64 	%rd405, {%r211, %r210};
	xor.b64  	%rd406, %rd404, %rd405;
	xor.b64  	%rd407, %rd366, %rd342;
	and.b64  	%rd408, %rd389, %rd407;
	xor.b64  	%rd409, %rd408, %rd342;
	add.s64 	%rd410, %rd401, %rd409;
	add.s64 	%rd411, %rd410, %rd406;
	add.s64 	%rd412, %rd411, %rd329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r212,%dummy}, %rd400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r213}, %rd400;
	}
	shf.r.wrap.b32 	%r214, %r213, %r212, 28;
	shf.r.wrap.b32 	%r215, %r212, %r213, 28;
	mov.b64 	%rd413, {%r215, %r214};
	shf.l.wrap.b32 	%r216, %r212, %r213, 30;
	shf.l.wrap.b32 	%r217, %r213, %r212, 30;
	mov.b64 	%rd414, {%r217, %r216};
	xor.b64  	%rd415, %rd414, %rd413;
	shf.l.wrap.b32 	%r218, %r212, %r213, 25;
	shf.l.wrap.b32 	%r219, %r213, %r212, 25;
	mov.b64 	%rd416, {%r219, %r218};
	xor.b64  	%rd417, %rd415, %rd416;
	xor.b64  	%rd418, %rd400, %rd353;
	xor.b64  	%rd419, %rd400, %rd377;
	and.b64  	%rd420, %rd419, %rd418;
	xor.b64  	%rd421, %rd420, %rd400;
	add.s64 	%rd422, %rd411, %rd421;
	add.s64 	%rd423, %rd422, %rd417;
	add.s64 	%rd424, %rd31, %rd342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r220,%dummy}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r221}, %rd412;
	}
	shf.r.wrap.b32 	%r222, %r221, %r220, 14;
	shf.r.wrap.b32 	%r223, %r220, %r221, 14;
	mov.b64 	%rd425, {%r223, %r222};
	shf.r.wrap.b32 	%r224, %r221, %r220, 18;
	shf.r.wrap.b32 	%r225, %r220, %r221, 18;
	mov.b64 	%rd426, {%r225, %r224};
	xor.b64  	%rd427, %rd426, %rd425;
	shf.l.wrap.b32 	%r226, %r220, %r221, 23;
	shf.l.wrap.b32 	%r227, %r221, %r220, 23;
	mov.b64 	%rd428, {%r227, %r226};
	xor.b64  	%rd429, %rd427, %rd428;
	xor.b64  	%rd430, %rd389, %rd366;
	and.b64  	%rd431, %rd412, %rd430;
	xor.b64  	%rd432, %rd431, %rd366;
	add.s64 	%rd433, %rd424, %rd432;
	add.s64 	%rd434, %rd433, %rd429;
	add.s64 	%rd435, %rd434, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r228,%dummy}, %rd423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r229}, %rd423;
	}
	shf.r.wrap.b32 	%r230, %r229, %r228, 28;
	shf.r.wrap.b32 	%r231, %r228, %r229, 28;
	mov.b64 	%rd436, {%r231, %r230};
	shf.l.wrap.b32 	%r232, %r228, %r229, 30;
	shf.l.wrap.b32 	%r233, %r229, %r228, 30;
	mov.b64 	%rd437, {%r233, %r232};
	xor.b64  	%rd438, %rd437, %rd436;
	shf.l.wrap.b32 	%r234, %r228, %r229, 25;
	shf.l.wrap.b32 	%r235, %r229, %r228, 25;
	mov.b64 	%rd439, {%r235, %r234};
	xor.b64  	%rd440, %rd438, %rd439;
	xor.b64  	%rd441, %rd423, %rd377;
	xor.b64  	%rd442, %rd423, %rd400;
	and.b64  	%rd443, %rd442, %rd441;
	xor.b64  	%rd444, %rd443, %rd423;
	add.s64 	%rd445, %rd434, %rd444;
	add.s64 	%rd446, %rd445, %rd440;
	add.s64 	%rd447, %rd32, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r236,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r237}, %rd435;
	}
	shf.r.wrap.b32 	%r238, %r237, %r236, 14;
	shf.r.wrap.b32 	%r239, %r236, %r237, 14;
	mov.b64 	%rd448, {%r239, %r238};
	shf.r.wrap.b32 	%r240, %r237, %r236, 18;
	shf.r.wrap.b32 	%r241, %r236, %r237, 18;
	mov.b64 	%rd449, {%r241, %r240};
	xor.b64  	%rd450, %rd449, %rd448;
	shf.l.wrap.b32 	%r242, %r236, %r237, 23;
	shf.l.wrap.b32 	%r243, %r237, %r236, 23;
	mov.b64 	%rd451, {%r243, %r242};
	xor.b64  	%rd452, %rd450, %rd451;
	xor.b64  	%rd453, %rd412, %rd389;
	and.b64  	%rd454, %rd435, %rd453;
	xor.b64  	%rd455, %rd454, %rd389;
	add.s64 	%rd456, %rd447, %rd455;
	add.s64 	%rd457, %rd456, %rd452;
	add.s64 	%rd458, %rd457, %rd377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r244,%dummy}, %rd446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r245}, %rd446;
	}
	shf.r.wrap.b32 	%r246, %r245, %r244, 28;
	shf.r.wrap.b32 	%r247, %r244, %r245, 28;
	mov.b64 	%rd459, {%r247, %r246};
	shf.l.wrap.b32 	%r248, %r244, %r245, 30;
	shf.l.wrap.b32 	%r249, %r245, %r244, 30;
	mov.b64 	%rd460, {%r249, %r248};
	xor.b64  	%rd461, %rd460, %rd459;
	shf.l.wrap.b32 	%r250, %r244, %r245, 25;
	shf.l.wrap.b32 	%r251, %r245, %r244, 25;
	mov.b64 	%rd462, {%r251, %r250};
	xor.b64  	%rd463, %rd461, %rd462;
	xor.b64  	%rd464, %rd446, %rd400;
	xor.b64  	%rd465, %rd446, %rd423;
	and.b64  	%rd466, %rd465, %rd464;
	xor.b64  	%rd467, %rd466, %rd446;
	add.s64 	%rd468, %rd457, %rd467;
	add.s64 	%rd469, %rd468, %rd463;
	add.s64 	%rd470, %rd33, %rd389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r252,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r253}, %rd458;
	}
	shf.r.wrap.b32 	%r254, %r253, %r252, 14;
	shf.r.wrap.b32 	%r255, %r252, %r253, 14;
	mov.b64 	%rd471, {%r255, %r254};
	shf.r.wrap.b32 	%r256, %r253, %r252, 18;
	shf.r.wrap.b32 	%r257, %r252, %r253, 18;
	mov.b64 	%rd472, {%r257, %r256};
	xor.b64  	%rd473, %rd472, %rd471;
	shf.l.wrap.b32 	%r258, %r252, %r253, 23;
	shf.l.wrap.b32 	%r259, %r253, %r252, 23;
	mov.b64 	%rd474, {%r259, %r258};
	xor.b64  	%rd475, %rd473, %rd474;
	xor.b64  	%rd476, %rd435, %rd412;
	and.b64  	%rd477, %rd458, %rd476;
	xor.b64  	%rd478, %rd477, %rd412;
	add.s64 	%rd479, %rd470, %rd478;
	add.s64 	%rd480, %rd479, %rd475;
	add.s64 	%rd481, %rd480, %rd400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r260,%dummy}, %rd469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r261}, %rd469;
	}
	shf.r.wrap.b32 	%r262, %r261, %r260, 28;
	shf.r.wrap.b32 	%r263, %r260, %r261, 28;
	mov.b64 	%rd482, {%r263, %r262};
	shf.l.wrap.b32 	%r264, %r260, %r261, 30;
	shf.l.wrap.b32 	%r265, %r261, %r260, 30;
	mov.b64 	%rd483, {%r265, %r264};
	xor.b64  	%rd484, %rd483, %rd482;
	shf.l.wrap.b32 	%r266, %r260, %r261, 25;
	shf.l.wrap.b32 	%r267, %r261, %r260, 25;
	mov.b64 	%rd485, {%r267, %r266};
	xor.b64  	%rd486, %rd484, %rd485;
	xor.b64  	%rd487, %rd469, %rd423;
	xor.b64  	%rd488, %rd469, %rd446;
	and.b64  	%rd489, %rd488, %rd487;
	xor.b64  	%rd490, %rd489, %rd469;
	add.s64 	%rd491, %rd480, %rd490;
	add.s64 	%rd492, %rd491, %rd486;
	add.s64 	%rd493, %rd34, %rd412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r268,%dummy}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd481;
	}
	shf.r.wrap.b32 	%r270, %r269, %r268, 14;
	shf.r.wrap.b32 	%r271, %r268, %r269, 14;
	mov.b64 	%rd494, {%r271, %r270};
	shf.r.wrap.b32 	%r272, %r269, %r268, 18;
	shf.r.wrap.b32 	%r273, %r268, %r269, 18;
	mov.b64 	%rd495, {%r273, %r272};
	xor.b64  	%rd496, %rd495, %rd494;
	shf.l.wrap.b32 	%r274, %r268, %r269, 23;
	shf.l.wrap.b32 	%r275, %r269, %r268, 23;
	mov.b64 	%rd497, {%r275, %r274};
	xor.b64  	%rd498, %rd496, %rd497;
	xor.b64  	%rd499, %rd458, %rd435;
	and.b64  	%rd500, %rd481, %rd499;
	xor.b64  	%rd501, %rd500, %rd435;
	add.s64 	%rd502, %rd493, %rd501;
	add.s64 	%rd503, %rd502, %rd498;
	add.s64 	%rd504, %rd503, %rd423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r276,%dummy}, %rd492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r277}, %rd492;
	}
	shf.r.wrap.b32 	%r278, %r277, %r276, 28;
	shf.r.wrap.b32 	%r279, %r276, %r277, 28;
	mov.b64 	%rd505, {%r279, %r278};
	shf.l.wrap.b32 	%r280, %r276, %r277, 30;
	shf.l.wrap.b32 	%r281, %r277, %r276, 30;
	mov.b64 	%rd506, {%r281, %r280};
	xor.b64  	%rd507, %rd506, %rd505;
	shf.l.wrap.b32 	%r282, %r276, %r277, 25;
	shf.l.wrap.b32 	%r283, %r277, %r276, 25;
	mov.b64 	%rd508, {%r283, %r282};
	xor.b64  	%rd509, %rd507, %rd508;
	xor.b64  	%rd510, %rd492, %rd446;
	xor.b64  	%rd511, %rd492, %rd469;
	and.b64  	%rd512, %rd511, %rd510;
	xor.b64  	%rd513, %rd512, %rd492;
	add.s64 	%rd514, %rd503, %rd513;
	add.s64 	%rd515, %rd514, %rd509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r284,%dummy}, %rd504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r285}, %rd504;
	}
	shf.r.wrap.b32 	%r286, %r285, %r284, 14;
	shf.r.wrap.b32 	%r287, %r284, %r285, 14;
	mov.b64 	%rd516, {%r287, %r286};
	shf.r.wrap.b32 	%r288, %r285, %r284, 18;
	shf.r.wrap.b32 	%r289, %r284, %r285, 18;
	mov.b64 	%rd517, {%r289, %r288};
	xor.b64  	%rd518, %rd517, %rd516;
	shf.l.wrap.b32 	%r290, %r284, %r285, 23;
	shf.l.wrap.b32 	%r291, %r285, %r284, 23;
	mov.b64 	%rd519, {%r291, %r290};
	xor.b64  	%rd520, %rd518, %rd519;
	xor.b64  	%rd521, %rd481, %rd458;
	and.b64  	%rd522, %rd504, %rd521;
	xor.b64  	%rd523, %rd522, %rd458;
	add.s64 	%rd524, %rd435, %rd35;
	add.s64 	%rd525, %rd524, %rd523;
	add.s64 	%rd526, %rd525, %rd520;
	add.s64 	%rd527, %rd526, 544;
	add.s64 	%rd528, %rd527, %rd446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r292,%dummy}, %rd515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r293}, %rd515;
	}
	shf.r.wrap.b32 	%r294, %r293, %r292, 28;
	shf.r.wrap.b32 	%r295, %r292, %r293, 28;
	mov.b64 	%rd529, {%r295, %r294};
	shf.l.wrap.b32 	%r296, %r292, %r293, 30;
	shf.l.wrap.b32 	%r297, %r293, %r292, 30;
	mov.b64 	%rd530, {%r297, %r296};
	xor.b64  	%rd531, %rd530, %rd529;
	shf.l.wrap.b32 	%r298, %r292, %r293, 25;
	shf.l.wrap.b32 	%r299, %r293, %r292, 25;
	mov.b64 	%rd532, {%r299, %r298};
	xor.b64  	%rd533, %rd531, %rd532;
	xor.b64  	%rd534, %rd515, %rd469;
	xor.b64  	%rd535, %rd515, %rd492;
	and.b64  	%rd536, %rd535, %rd534;
	xor.b64  	%rd537, %rd536, %rd515;
	add.s64 	%rd538, %rd527, %rd537;
	add.s64 	%rd539, %rd538, %rd533;
	shr.u64 	%rd540, %rd2914, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd2914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd2914;
	}
	shf.r.wrap.b32 	%r302, %r301, %r300, 1;
	shf.r.wrap.b32 	%r303, %r300, %r301, 1;
	mov.b64 	%rd541, {%r303, %r302};
	xor.b64  	%rd542, %rd541, %rd540;
	shf.r.wrap.b32 	%r304, %r301, %r300, 8;
	shf.r.wrap.b32 	%r305, %r300, %r301, 8;
	mov.b64 	%rd543, {%r305, %r304};
	xor.b64  	%rd544, %rd542, %rd543;
	add.s64 	%rd545, %rd181, %rd100;
	add.s64 	%rd546, %rd545, %rd544;
	shr.u64 	%rd547, %rd2913, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd2913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd2913;
	}
	shf.r.wrap.b32 	%r308, %r307, %r306, 1;
	shf.r.wrap.b32 	%r309, %r306, %r307, 1;
	mov.b64 	%rd548, {%r309, %r308};
	xor.b64  	%rd549, %rd548, %rd547;
	shf.r.wrap.b32 	%r310, %r307, %r306, 8;
	shf.r.wrap.b32 	%r311, %r306, %r307, 8;
	mov.b64 	%rd550, {%r311, %r310};
	xor.b64  	%rd551, %rd549, %rd550;
	add.s64 	%rd552, %rd2914, %rd101;
	add.s64 	%rd553, %rd552, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd546;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 19;
	shf.r.wrap.b32 	%r315, %r312, %r313, 19;
	mov.b64 	%rd554, {%r315, %r314};
	shf.l.wrap.b32 	%r316, %r312, %r313, 3;
	shf.l.wrap.b32 	%r317, %r313, %r312, 3;
	mov.b64 	%rd555, {%r317, %r316};
	shr.u64 	%rd556, %rd546, 6;
	xor.b64  	%rd557, %rd554, %rd556;
	xor.b64  	%rd558, %rd557, %rd555;
	shr.u64 	%rd559, %rd2912, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd2912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r319}, %rd2912;
	}
	shf.r.wrap.b32 	%r320, %r319, %r318, 1;
	shf.r.wrap.b32 	%r321, %r318, %r319, 1;
	mov.b64 	%rd560, {%r321, %r320};
	xor.b64  	%rd561, %rd560, %rd559;
	shf.r.wrap.b32 	%r322, %r319, %r318, 8;
	shf.r.wrap.b32 	%r323, %r318, %r319, 8;
	mov.b64 	%rd562, {%r323, %r322};
	xor.b64  	%rd563, %rd561, %rd562;
	add.s64 	%rd564, %rd2913, %rd558;
	add.s64 	%rd565, %rd564, %rd563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd553;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 19;
	shf.r.wrap.b32 	%r327, %r324, %r325, 19;
	mov.b64 	%rd566, {%r327, %r326};
	shf.l.wrap.b32 	%r328, %r324, %r325, 3;
	shf.l.wrap.b32 	%r329, %r325, %r324, 3;
	mov.b64 	%rd567, {%r329, %r328};
	shr.u64 	%rd568, %rd553, 6;
	xor.b64  	%rd569, %rd566, %rd568;
	xor.b64  	%rd570, %rd569, %rd567;
	shr.u64 	%rd571, %rd2919, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r330,%dummy}, %rd2919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r331}, %rd2919;
	}
	shf.r.wrap.b32 	%r332, %r331, %r330, 1;
	shf.r.wrap.b32 	%r333, %r330, %r331, 1;
	mov.b64 	%rd572, {%r333, %r332};
	xor.b64  	%rd573, %rd572, %rd571;
	shf.r.wrap.b32 	%r334, %r331, %r330, 8;
	shf.r.wrap.b32 	%r335, %r330, %r331, 8;
	mov.b64 	%rd574, {%r335, %r334};
	xor.b64  	%rd575, %rd573, %rd574;
	add.s64 	%rd576, %rd2912, %rd570;
	add.s64 	%rd577, %rd576, %rd575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd565;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 19;
	shf.r.wrap.b32 	%r339, %r336, %r337, 19;
	mov.b64 	%rd578, {%r339, %r338};
	shf.l.wrap.b32 	%r340, %r336, %r337, 3;
	shf.l.wrap.b32 	%r341, %r337, %r336, 3;
	mov.b64 	%rd579, {%r341, %r340};
	shr.u64 	%rd580, %rd565, 6;
	xor.b64  	%rd581, %rd578, %rd580;
	xor.b64  	%rd582, %rd581, %rd579;
	shr.u64 	%rd583, %rd2918, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r342,%dummy}, %rd2918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r343}, %rd2918;
	}
	shf.r.wrap.b32 	%r344, %r343, %r342, 1;
	shf.r.wrap.b32 	%r345, %r342, %r343, 1;
	mov.b64 	%rd584, {%r345, %r344};
	xor.b64  	%rd585, %rd584, %rd583;
	shf.r.wrap.b32 	%r346, %r343, %r342, 8;
	shf.r.wrap.b32 	%r347, %r342, %r343, 8;
	mov.b64 	%rd586, {%r347, %r346};
	xor.b64  	%rd587, %rd585, %rd586;
	add.s64 	%rd588, %rd2919, %rd582;
	add.s64 	%rd589, %rd588, %rd587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r348,%dummy}, %rd577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd577;
	}
	shf.r.wrap.b32 	%r350, %r349, %r348, 19;
	shf.r.wrap.b32 	%r351, %r348, %r349, 19;
	mov.b64 	%rd590, {%r351, %r350};
	shf.l.wrap.b32 	%r352, %r348, %r349, 3;
	shf.l.wrap.b32 	%r353, %r349, %r348, 3;
	mov.b64 	%rd591, {%r353, %r352};
	shr.u64 	%rd592, %rd577, 6;
	xor.b64  	%rd593, %rd590, %rd592;
	xor.b64  	%rd594, %rd593, %rd591;
	shr.u64 	%rd595, %rd2917, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd2917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd2917;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 1;
	shf.r.wrap.b32 	%r357, %r354, %r355, 1;
	mov.b64 	%rd596, {%r357, %r356};
	xor.b64  	%rd597, %rd596, %rd595;
	shf.r.wrap.b32 	%r358, %r355, %r354, 8;
	shf.r.wrap.b32 	%r359, %r354, %r355, 8;
	mov.b64 	%rd598, {%r359, %r358};
	xor.b64  	%rd599, %rd597, %rd598;
	add.s64 	%rd600, %rd2918, %rd594;
	add.s64 	%rd601, %rd600, %rd599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd589;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 19;
	shf.r.wrap.b32 	%r363, %r360, %r361, 19;
	mov.b64 	%rd602, {%r363, %r362};
	shf.l.wrap.b32 	%r364, %r360, %r361, 3;
	shf.l.wrap.b32 	%r365, %r361, %r360, 3;
	mov.b64 	%rd603, {%r365, %r364};
	shr.u64 	%rd604, %rd589, 6;
	xor.b64  	%rd605, %rd602, %rd604;
	xor.b64  	%rd606, %rd605, %rd603;
	shr.u64 	%rd607, %rd2916, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd2916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r367}, %rd2916;
	}
	shf.r.wrap.b32 	%r368, %r367, %r366, 1;
	shf.r.wrap.b32 	%r369, %r366, %r367, 1;
	mov.b64 	%rd608, {%r369, %r368};
	xor.b64  	%rd609, %rd608, %rd607;
	shf.r.wrap.b32 	%r370, %r367, %r366, 8;
	shf.r.wrap.b32 	%r371, %r366, %r367, 8;
	mov.b64 	%rd610, {%r371, %r370};
	xor.b64  	%rd611, %rd609, %rd610;
	add.s64 	%rd612, %rd2917, %rd606;
	add.s64 	%rd613, %rd612, %rd611;
	add.s64 	%rd614, %rd613, 544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r372,%dummy}, %rd601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd601;
	}
	shf.r.wrap.b32 	%r374, %r373, %r372, 19;
	shf.r.wrap.b32 	%r375, %r372, %r373, 19;
	mov.b64 	%rd615, {%r375, %r374};
	shf.l.wrap.b32 	%r376, %r372, %r373, 3;
	shf.l.wrap.b32 	%r377, %r373, %r372, 3;
	mov.b64 	%rd616, {%r377, %r376};
	shr.u64 	%rd617, %rd601, 6;
	xor.b64  	%rd618, %rd615, %rd617;
	xor.b64  	%rd619, %rd618, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r379}, %rd178;
	}
	shf.r.wrap.b32 	%r380, %r379, %r378, 1;
	shf.r.wrap.b32 	%r381, %r378, %r379, 1;
	mov.b64 	%rd620, {%r381, %r380};
	shf.r.wrap.b32 	%r382, %r379, %r378, 8;
	shf.r.wrap.b32 	%r383, %r378, %r379, 8;
	mov.b64 	%rd621, {%r383, %r382};
	shr.u64 	%rd622, %rd178, 7;
	xor.b64  	%rd623, %rd620, %rd622;
	xor.b64  	%rd624, %rd623, %rd621;
	add.s64 	%rd625, %rd546, %rd2916;
	add.s64 	%rd626, %rd625, %rd619;
	add.s64 	%rd627, %rd626, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd614;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 19;
	shf.r.wrap.b32 	%r387, %r384, %r385, 19;
	mov.b64 	%rd628, {%r387, %r386};
	shf.l.wrap.b32 	%r388, %r384, %r385, 3;
	shf.l.wrap.b32 	%r389, %r385, %r384, 3;
	mov.b64 	%rd629, {%r389, %r388};
	shr.u64 	%rd630, %rd614, 6;
	xor.b64  	%rd631, %rd628, %rd630;
	xor.b64  	%rd632, %rd631, %rd629;
	add.s64 	%rd633, %rd553, %rd178;
	add.s64 	%rd634, %rd633, %rd632;
	add.s64 	%rd635, %rd634, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r390,%dummy}, %rd627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r391}, %rd627;
	}
	shf.r.wrap.b32 	%r392, %r391, %r390, 19;
	shf.r.wrap.b32 	%r393, %r390, %r391, 19;
	mov.b64 	%rd636, {%r393, %r392};
	shf.l.wrap.b32 	%r394, %r390, %r391, 3;
	shf.l.wrap.b32 	%r395, %r391, %r390, 3;
	mov.b64 	%rd637, {%r395, %r394};
	shr.u64 	%rd638, %rd627, 6;
	xor.b64  	%rd639, %rd636, %rd638;
	xor.b64  	%rd640, %rd639, %rd637;
	add.s64 	%rd641, %rd565, %rd640;
	add.s64 	%rd642, %rd641, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r396,%dummy}, %rd635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd635;
	}
	shf.r.wrap.b32 	%r398, %r397, %r396, 19;
	shf.r.wrap.b32 	%r399, %r396, %r397, 19;
	mov.b64 	%rd643, {%r399, %r398};
	shf.l.wrap.b32 	%r400, %r396, %r397, 3;
	shf.l.wrap.b32 	%r401, %r397, %r396, 3;
	mov.b64 	%rd644, {%r401, %r400};
	shr.u64 	%rd645, %rd635, 6;
	xor.b64  	%rd646, %rd643, %rd645;
	xor.b64  	%rd647, %rd646, %rd644;
	add.s64 	%rd648, %rd577, %rd647;
	add.s64 	%rd649, %rd648, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r403}, %rd642;
	}
	shf.r.wrap.b32 	%r404, %r403, %r402, 19;
	shf.r.wrap.b32 	%r405, %r402, %r403, 19;
	mov.b64 	%rd650, {%r405, %r404};
	shf.l.wrap.b32 	%r406, %r402, %r403, 3;
	shf.l.wrap.b32 	%r407, %r403, %r402, 3;
	mov.b64 	%rd651, {%r407, %r406};
	shr.u64 	%rd652, %rd642, 6;
	xor.b64  	%rd653, %rd650, %rd652;
	xor.b64  	%rd654, %rd653, %rd651;
	add.s64 	%rd655, %rd589, %rd654;
	add.s64 	%rd656, %rd655, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd649;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 19;
	shf.r.wrap.b32 	%r411, %r408, %r409, 19;
	mov.b64 	%rd657, {%r411, %r410};
	shf.l.wrap.b32 	%r412, %r408, %r409, 3;
	shf.l.wrap.b32 	%r413, %r409, %r408, 3;
	mov.b64 	%rd658, {%r413, %r412};
	shr.u64 	%rd659, %rd649, 6;
	xor.b64  	%rd660, %rd657, %rd659;
	xor.b64  	%rd661, %rd660, %rd658;
	add.s64 	%rd662, %rd601, %rd661;
	add.s64 	%rd663, %rd662, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r414,%dummy}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r415}, %rd656;
	}
	shf.r.wrap.b32 	%r416, %r415, %r414, 19;
	shf.r.wrap.b32 	%r417, %r414, %r415, 19;
	mov.b64 	%rd664, {%r417, %r416};
	shf.l.wrap.b32 	%r418, %r414, %r415, 3;
	shf.l.wrap.b32 	%r419, %r415, %r414, 3;
	mov.b64 	%rd665, {%r419, %r418};
	shr.u64 	%rd666, %rd656, 6;
	xor.b64  	%rd667, %rd664, %rd666;
	xor.b64  	%rd668, %rd667, %rd665;
	add.s64 	%rd669, %rd614, %rd668;
	add.s64 	%rd670, %rd669, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r420,%dummy}, %rd663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r421}, %rd663;
	}
	shf.r.wrap.b32 	%r422, %r421, %r420, 19;
	shf.r.wrap.b32 	%r423, %r420, %r421, 19;
	mov.b64 	%rd671, {%r423, %r422};
	shf.l.wrap.b32 	%r424, %r420, %r421, 3;
	shf.l.wrap.b32 	%r425, %r421, %r420, 3;
	mov.b64 	%rd672, {%r425, %r424};
	shr.u64 	%rd673, %rd663, 6;
	xor.b64  	%rd674, %rd671, %rd673;
	xor.b64  	%rd675, %rd674, %rd672;
	add.s64 	%rd676, %rd627, %rd675;
	add.s64 	%rd677, %rd676, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd670;
	}
	shf.r.wrap.b32 	%r428, %r427, %r426, 19;
	shf.r.wrap.b32 	%r429, %r426, %r427, 19;
	mov.b64 	%rd678, {%r429, %r428};
	shf.l.wrap.b32 	%r430, %r426, %r427, 3;
	shf.l.wrap.b32 	%r431, %r427, %r426, 3;
	mov.b64 	%rd679, {%r431, %r430};
	shr.u64 	%rd680, %rd670, 6;
	xor.b64  	%rd681, %rd678, %rd680;
	xor.b64  	%rd682, %rd681, %rd679;
	shf.r.wrap.b32 	%r432, %r313, %r312, 1;
	shf.r.wrap.b32 	%r433, %r312, %r313, 1;
	mov.b64 	%rd683, {%r433, %r432};
	shf.r.wrap.b32 	%r434, %r313, %r312, 8;
	shf.r.wrap.b32 	%r435, %r312, %r313, 8;
	mov.b64 	%rd684, {%r435, %r434};
	shr.u64 	%rd685, %rd546, 7;
	xor.b64  	%rd686, %rd683, %rd685;
	xor.b64  	%rd687, %rd686, %rd684;
	add.s64 	%rd688, %rd635, %rd682;
	add.s64 	%rd689, %rd688, %rd687;
	add.s64 	%rd690, %rd689, 544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r436,%dummy}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r437}, %rd528;
	}
	shf.r.wrap.b32 	%r438, %r437, %r436, 14;
	shf.r.wrap.b32 	%r439, %r436, %r437, 14;
	mov.b64 	%rd691, {%r439, %r438};
	shf.r.wrap.b32 	%r440, %r437, %r436, 18;
	shf.r.wrap.b32 	%r441, %r436, %r437, 18;
	mov.b64 	%rd692, {%r441, %r440};
	xor.b64  	%rd693, %rd692, %rd691;
	shf.l.wrap.b32 	%r442, %r436, %r437, 23;
	shf.l.wrap.b32 	%r443, %r437, %r436, 23;
	mov.b64 	%rd694, {%r443, %r442};
	xor.b64  	%rd695, %rd693, %rd694;
	xor.b64  	%rd696, %rd504, %rd481;
	and.b64  	%rd697, %rd696, %rd528;
	xor.b64  	%rd698, %rd697, %rd481;
	add.s64 	%rd699, %rd698, %rd458;
	add.s64 	%rd700, %rd699, %rd546;
	add.s64 	%rd701, %rd700, %rd36;
	add.s64 	%rd702, %rd701, %rd695;
	add.s64 	%rd703, %rd702, %rd469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r444,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r445}, %rd539;
	}
	shf.r.wrap.b32 	%r446, %r445, %r444, 28;
	shf.r.wrap.b32 	%r447, %r444, %r445, 28;
	mov.b64 	%rd704, {%r447, %r446};
	shf.l.wrap.b32 	%r448, %r444, %r445, 30;
	shf.l.wrap.b32 	%r449, %r445, %r444, 30;
	mov.b64 	%rd705, {%r449, %r448};
	xor.b64  	%rd706, %rd705, %rd704;
	shf.l.wrap.b32 	%r450, %r444, %r445, 25;
	shf.l.wrap.b32 	%r451, %r445, %r444, 25;
	mov.b64 	%rd707, {%r451, %r450};
	xor.b64  	%rd708, %rd706, %rd707;
	xor.b64  	%rd709, %rd539, %rd492;
	xor.b64  	%rd710, %rd539, %rd515;
	and.b64  	%rd711, %rd710, %rd709;
	xor.b64  	%rd712, %rd711, %rd539;
	add.s64 	%rd713, %rd702, %rd712;
	add.s64 	%rd714, %rd713, %rd708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r452,%dummy}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r453}, %rd703;
	}
	shf.r.wrap.b32 	%r454, %r453, %r452, 14;
	shf.r.wrap.b32 	%r455, %r452, %r453, 14;
	mov.b64 	%rd715, {%r455, %r454};
	shf.r.wrap.b32 	%r456, %r453, %r452, 18;
	shf.r.wrap.b32 	%r457, %r452, %r453, 18;
	mov.b64 	%rd716, {%r457, %r456};
	xor.b64  	%rd717, %rd716, %rd715;
	shf.l.wrap.b32 	%r458, %r452, %r453, 23;
	shf.l.wrap.b32 	%r459, %r453, %r452, 23;
	mov.b64 	%rd718, {%r459, %r458};
	xor.b64  	%rd719, %rd717, %rd718;
	xor.b64  	%rd720, %rd528, %rd504;
	and.b64  	%rd721, %rd703, %rd720;
	xor.b64  	%rd722, %rd721, %rd504;
	add.s64 	%rd723, %rd553, %rd481;
	add.s64 	%rd724, %rd723, %rd37;
	add.s64 	%rd725, %rd724, %rd722;
	add.s64 	%rd726, %rd725, %rd719;
	add.s64 	%rd727, %rd726, %rd492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r460,%dummy}, %rd714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r461}, %rd714;
	}
	shf.r.wrap.b32 	%r462, %r461, %r460, 28;
	shf.r.wrap.b32 	%r463, %r460, %r461, 28;
	mov.b64 	%rd728, {%r463, %r462};
	shf.l.wrap.b32 	%r464, %r460, %r461, 30;
	shf.l.wrap.b32 	%r465, %r461, %r460, 30;
	mov.b64 	%rd729, {%r465, %r464};
	xor.b64  	%rd730, %rd729, %rd728;
	shf.l.wrap.b32 	%r466, %r460, %r461, 25;
	shf.l.wrap.b32 	%r467, %r461, %r460, 25;
	mov.b64 	%rd731, {%r467, %r466};
	xor.b64  	%rd732, %rd730, %rd731;
	xor.b64  	%rd733, %rd714, %rd515;
	xor.b64  	%rd734, %rd714, %rd539;
	and.b64  	%rd735, %rd734, %rd733;
	xor.b64  	%rd736, %rd735, %rd714;
	add.s64 	%rd737, %rd726, %rd736;
	add.s64 	%rd738, %rd737, %rd732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r468,%dummy}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd727;
	}
	shf.r.wrap.b32 	%r470, %r469, %r468, 14;
	shf.r.wrap.b32 	%r471, %r468, %r469, 14;
	mov.b64 	%rd739, {%r471, %r470};
	shf.r.wrap.b32 	%r472, %r469, %r468, 18;
	shf.r.wrap.b32 	%r473, %r468, %r469, 18;
	mov.b64 	%rd740, {%r473, %r472};
	xor.b64  	%rd741, %rd740, %rd739;
	shf.l.wrap.b32 	%r474, %r468, %r469, 23;
	shf.l.wrap.b32 	%r475, %r469, %r468, 23;
	mov.b64 	%rd742, {%r475, %r474};
	xor.b64  	%rd743, %rd741, %rd742;
	xor.b64  	%rd744, %rd703, %rd528;
	and.b64  	%rd745, %rd727, %rd744;
	xor.b64  	%rd746, %rd745, %rd528;
	add.s64 	%rd747, %rd565, %rd504;
	add.s64 	%rd748, %rd747, %rd38;
	add.s64 	%rd749, %rd748, %rd746;
	add.s64 	%rd750, %rd749, %rd743;
	add.s64 	%rd751, %rd750, %rd515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r476,%dummy}, %rd738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r477}, %rd738;
	}
	shf.r.wrap.b32 	%r478, %r477, %r476, 28;
	shf.r.wrap.b32 	%r479, %r476, %r477, 28;
	mov.b64 	%rd752, {%r479, %r478};
	shf.l.wrap.b32 	%r480, %r476, %r477, 30;
	shf.l.wrap.b32 	%r481, %r477, %r476, 30;
	mov.b64 	%rd753, {%r481, %r480};
	xor.b64  	%rd754, %rd753, %rd752;
	shf.l.wrap.b32 	%r482, %r476, %r477, 25;
	shf.l.wrap.b32 	%r483, %r477, %r476, 25;
	mov.b64 	%rd755, {%r483, %r482};
	xor.b64  	%rd756, %rd754, %rd755;
	xor.b64  	%rd757, %rd738, %rd539;
	xor.b64  	%rd758, %rd738, %rd714;
	and.b64  	%rd759, %rd758, %rd757;
	xor.b64  	%rd760, %rd759, %rd738;
	add.s64 	%rd761, %rd750, %rd760;
	add.s64 	%rd762, %rd761, %rd756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd751;
	}
	shf.r.wrap.b32 	%r486, %r485, %r484, 14;
	shf.r.wrap.b32 	%r487, %r484, %r485, 14;
	mov.b64 	%rd763, {%r487, %r486};
	shf.r.wrap.b32 	%r488, %r485, %r484, 18;
	shf.r.wrap.b32 	%r489, %r484, %r485, 18;
	mov.b64 	%rd764, {%r489, %r488};
	xor.b64  	%rd765, %rd764, %rd763;
	shf.l.wrap.b32 	%r490, %r484, %r485, 23;
	shf.l.wrap.b32 	%r491, %r485, %r484, 23;
	mov.b64 	%rd766, {%r491, %r490};
	xor.b64  	%rd767, %rd765, %rd766;
	xor.b64  	%rd768, %rd727, %rd703;
	and.b64  	%rd769, %rd751, %rd768;
	xor.b64  	%rd770, %rd769, %rd703;
	add.s64 	%rd771, %rd577, %rd528;
	add.s64 	%rd772, %rd771, %rd39;
	add.s64 	%rd773, %rd772, %rd770;
	add.s64 	%rd774, %rd773, %rd767;
	add.s64 	%rd775, %rd774, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd762;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 28;
	shf.r.wrap.b32 	%r495, %r492, %r493, 28;
	mov.b64 	%rd776, {%r495, %r494};
	shf.l.wrap.b32 	%r496, %r492, %r493, 30;
	shf.l.wrap.b32 	%r497, %r493, %r492, 30;
	mov.b64 	%rd777, {%r497, %r496};
	xor.b64  	%rd778, %rd777, %rd776;
	shf.l.wrap.b32 	%r498, %r492, %r493, 25;
	shf.l.wrap.b32 	%r499, %r493, %r492, 25;
	mov.b64 	%rd779, {%r499, %r498};
	xor.b64  	%rd780, %rd778, %rd779;
	xor.b64  	%rd781, %rd762, %rd714;
	xor.b64  	%rd782, %rd762, %rd738;
	and.b64  	%rd783, %rd782, %rd781;
	xor.b64  	%rd784, %rd783, %rd762;
	add.s64 	%rd785, %rd774, %rd784;
	add.s64 	%rd786, %rd785, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd775;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 14;
	shf.r.wrap.b32 	%r503, %r500, %r501, 14;
	mov.b64 	%rd787, {%r503, %r502};
	shf.r.wrap.b32 	%r504, %r501, %r500, 18;
	shf.r.wrap.b32 	%r505, %r500, %r501, 18;
	mov.b64 	%rd788, {%r505, %r504};
	xor.b64  	%rd789, %rd788, %rd787;
	shf.l.wrap.b32 	%r506, %r500, %r501, 23;
	shf.l.wrap.b32 	%r507, %r501, %r500, 23;
	mov.b64 	%rd790, {%r507, %r506};
	xor.b64  	%rd791, %rd789, %rd790;
	xor.b64  	%rd792, %rd751, %rd727;
	and.b64  	%rd793, %rd775, %rd792;
	xor.b64  	%rd794, %rd793, %rd727;
	add.s64 	%rd795, %rd703, %rd589;
	add.s64 	%rd796, %rd795, %rd40;
	add.s64 	%rd797, %rd796, %rd794;
	add.s64 	%rd798, %rd797, %rd791;
	add.s64 	%rd799, %rd798, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r508,%dummy}, %rd786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd786;
	}
	shf.r.wrap.b32 	%r510, %r509, %r508, 28;
	shf.r.wrap.b32 	%r511, %r508, %r509, 28;
	mov.b64 	%rd800, {%r511, %r510};
	shf.l.wrap.b32 	%r512, %r508, %r509, 30;
	shf.l.wrap.b32 	%r513, %r509, %r508, 30;
	mov.b64 	%rd801, {%r513, %r512};
	xor.b64  	%rd802, %rd801, %rd800;
	shf.l.wrap.b32 	%r514, %r508, %r509, 25;
	shf.l.wrap.b32 	%r515, %r509, %r508, 25;
	mov.b64 	%rd803, {%r515, %r514};
	xor.b64  	%rd804, %rd802, %rd803;
	xor.b64  	%rd805, %rd786, %rd738;
	xor.b64  	%rd806, %rd786, %rd762;
	and.b64  	%rd807, %rd806, %rd805;
	xor.b64  	%rd808, %rd807, %rd786;
	add.s64 	%rd809, %rd798, %rd808;
	add.s64 	%rd810, %rd809, %rd804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r516,%dummy}, %rd799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r517}, %rd799;
	}
	shf.r.wrap.b32 	%r518, %r517, %r516, 14;
	shf.r.wrap.b32 	%r519, %r516, %r517, 14;
	mov.b64 	%rd811, {%r519, %r518};
	shf.r.wrap.b32 	%r520, %r517, %r516, 18;
	shf.r.wrap.b32 	%r521, %r516, %r517, 18;
	mov.b64 	%rd812, {%r521, %r520};
	xor.b64  	%rd813, %rd812, %rd811;
	shf.l.wrap.b32 	%r522, %r516, %r517, 23;
	shf.l.wrap.b32 	%r523, %r517, %r516, 23;
	mov.b64 	%rd814, {%r523, %r522};
	xor.b64  	%rd815, %rd813, %rd814;
	xor.b64  	%rd816, %rd775, %rd751;
	and.b64  	%rd817, %rd799, %rd816;
	xor.b64  	%rd818, %rd817, %rd751;
	add.s64 	%rd819, %rd727, %rd601;
	add.s64 	%rd820, %rd819, %rd41;
	add.s64 	%rd821, %rd820, %rd818;
	add.s64 	%rd822, %rd821, %rd815;
	add.s64 	%rd823, %rd822, %rd738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r524,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r525}, %rd810;
	}
	shf.r.wrap.b32 	%r526, %r525, %r524, 28;
	shf.r.wrap.b32 	%r527, %r524, %r525, 28;
	mov.b64 	%rd824, {%r527, %r526};
	shf.l.wrap.b32 	%r528, %r524, %r525, 30;
	shf.l.wrap.b32 	%r529, %r525, %r524, 30;
	mov.b64 	%rd825, {%r529, %r528};
	xor.b64  	%rd826, %rd825, %rd824;
	shf.l.wrap.b32 	%r530, %r524, %r525, 25;
	shf.l.wrap.b32 	%r531, %r525, %r524, 25;
	mov.b64 	%rd827, {%r531, %r530};
	xor.b64  	%rd828, %rd826, %rd827;
	xor.b64  	%rd829, %rd810, %rd762;
	xor.b64  	%rd830, %rd810, %rd786;
	and.b64  	%rd831, %rd830, %rd829;
	xor.b64  	%rd832, %rd831, %rd810;
	add.s64 	%rd833, %rd822, %rd832;
	add.s64 	%rd834, %rd833, %rd828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r532,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r533}, %rd823;
	}
	shf.r.wrap.b32 	%r534, %r533, %r532, 14;
	shf.r.wrap.b32 	%r535, %r532, %r533, 14;
	mov.b64 	%rd835, {%r535, %r534};
	shf.r.wrap.b32 	%r536, %r533, %r532, 18;
	shf.r.wrap.b32 	%r537, %r532, %r533, 18;
	mov.b64 	%rd836, {%r537, %r536};
	xor.b64  	%rd837, %rd836, %rd835;
	shf.l.wrap.b32 	%r538, %r532, %r533, 23;
	shf.l.wrap.b32 	%r539, %r533, %r532, 23;
	mov.b64 	%rd838, {%r539, %r538};
	xor.b64  	%rd839, %rd837, %rd838;
	xor.b64  	%rd840, %rd799, %rd775;
	and.b64  	%rd841, %rd823, %rd840;
	xor.b64  	%rd842, %rd841, %rd775;
	add.s64 	%rd843, %rd751, %rd614;
	add.s64 	%rd844, %rd843, %rd42;
	add.s64 	%rd845, %rd844, %rd842;
	add.s64 	%rd846, %rd845, %rd839;
	add.s64 	%rd847, %rd846, %rd762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r540,%dummy}, %rd834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r541}, %rd834;
	}
	shf.r.wrap.b32 	%r542, %r541, %r540, 28;
	shf.r.wrap.b32 	%r543, %r540, %r541, 28;
	mov.b64 	%rd848, {%r543, %r542};
	shf.l.wrap.b32 	%r544, %r540, %r541, 30;
	shf.l.wrap.b32 	%r545, %r541, %r540, 30;
	mov.b64 	%rd849, {%r545, %r544};
	xor.b64  	%rd850, %rd849, %rd848;
	shf.l.wrap.b32 	%r546, %r540, %r541, 25;
	shf.l.wrap.b32 	%r547, %r541, %r540, 25;
	mov.b64 	%rd851, {%r547, %r546};
	xor.b64  	%rd852, %rd850, %rd851;
	xor.b64  	%rd853, %rd834, %rd786;
	xor.b64  	%rd854, %rd834, %rd810;
	and.b64  	%rd855, %rd854, %rd853;
	xor.b64  	%rd856, %rd855, %rd834;
	add.s64 	%rd857, %rd846, %rd856;
	add.s64 	%rd858, %rd857, %rd852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r548,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r549}, %rd847;
	}
	shf.r.wrap.b32 	%r550, %r549, %r548, 14;
	shf.r.wrap.b32 	%r551, %r548, %r549, 14;
	mov.b64 	%rd859, {%r551, %r550};
	shf.r.wrap.b32 	%r552, %r549, %r548, 18;
	shf.r.wrap.b32 	%r553, %r548, %r549, 18;
	mov.b64 	%rd860, {%r553, %r552};
	xor.b64  	%rd861, %rd860, %rd859;
	shf.l.wrap.b32 	%r554, %r548, %r549, 23;
	shf.l.wrap.b32 	%r555, %r549, %r548, 23;
	mov.b64 	%rd862, {%r555, %r554};
	xor.b64  	%rd863, %rd861, %rd862;
	xor.b64  	%rd864, %rd823, %rd799;
	and.b64  	%rd865, %rd847, %rd864;
	xor.b64  	%rd866, %rd865, %rd799;
	add.s64 	%rd867, %rd775, %rd627;
	add.s64 	%rd868, %rd867, %rd43;
	add.s64 	%rd869, %rd868, %rd866;
	add.s64 	%rd870, %rd869, %rd863;
	add.s64 	%rd871, %rd870, %rd786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd858;
	}
	shf.r.wrap.b32 	%r558, %r557, %r556, 28;
	shf.r.wrap.b32 	%r559, %r556, %r557, 28;
	mov.b64 	%rd872, {%r559, %r558};
	shf.l.wrap.b32 	%r560, %r556, %r557, 30;
	shf.l.wrap.b32 	%r561, %r557, %r556, 30;
	mov.b64 	%rd873, {%r561, %r560};
	xor.b64  	%rd874, %rd873, %rd872;
	shf.l.wrap.b32 	%r562, %r556, %r557, 25;
	shf.l.wrap.b32 	%r563, %r557, %r556, 25;
	mov.b64 	%rd875, {%r563, %r562};
	xor.b64  	%rd876, %rd874, %rd875;
	xor.b64  	%rd877, %rd858, %rd810;
	xor.b64  	%rd878, %rd858, %rd834;
	and.b64  	%rd879, %rd878, %rd877;
	xor.b64  	%rd880, %rd879, %rd858;
	add.s64 	%rd881, %rd870, %rd880;
	add.s64 	%rd882, %rd881, %rd876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r564,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r565}, %rd871;
	}
	shf.r.wrap.b32 	%r566, %r565, %r564, 14;
	shf.r.wrap.b32 	%r567, %r564, %r565, 14;
	mov.b64 	%rd883, {%r567, %r566};
	shf.r.wrap.b32 	%r568, %r565, %r564, 18;
	shf.r.wrap.b32 	%r569, %r564, %r565, 18;
	mov.b64 	%rd884, {%r569, %r568};
	xor.b64  	%rd885, %rd884, %rd883;
	shf.l.wrap.b32 	%r570, %r564, %r565, 23;
	shf.l.wrap.b32 	%r571, %r565, %r564, 23;
	mov.b64 	%rd886, {%r571, %r570};
	xor.b64  	%rd887, %rd885, %rd886;
	xor.b64  	%rd888, %rd847, %rd823;
	and.b64  	%rd889, %rd871, %rd888;
	xor.b64  	%rd890, %rd889, %rd823;
	add.s64 	%rd891, %rd799, %rd635;
	add.s64 	%rd892, %rd891, %rd44;
	add.s64 	%rd893, %rd892, %rd890;
	add.s64 	%rd894, %rd893, %rd887;
	add.s64 	%rd895, %rd894, %rd810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r572,%dummy}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r573}, %rd882;
	}
	shf.r.wrap.b32 	%r574, %r573, %r572, 28;
	shf.r.wrap.b32 	%r575, %r572, %r573, 28;
	mov.b64 	%rd896, {%r575, %r574};
	shf.l.wrap.b32 	%r576, %r572, %r573, 30;
	shf.l.wrap.b32 	%r577, %r573, %r572, 30;
	mov.b64 	%rd897, {%r577, %r576};
	xor.b64  	%rd898, %rd897, %rd896;
	shf.l.wrap.b32 	%r578, %r572, %r573, 25;
	shf.l.wrap.b32 	%r579, %r573, %r572, 25;
	mov.b64 	%rd899, {%r579, %r578};
	xor.b64  	%rd900, %rd898, %rd899;
	xor.b64  	%rd901, %rd882, %rd834;
	xor.b64  	%rd902, %rd882, %rd858;
	and.b64  	%rd903, %rd902, %rd901;
	xor.b64  	%rd904, %rd903, %rd882;
	add.s64 	%rd905, %rd894, %rd904;
	add.s64 	%rd906, %rd905, %rd900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r580,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r581}, %rd895;
	}
	shf.r.wrap.b32 	%r582, %r581, %r580, 14;
	shf.r.wrap.b32 	%r583, %r580, %r581, 14;
	mov.b64 	%rd907, {%r583, %r582};
	shf.r.wrap.b32 	%r584, %r581, %r580, 18;
	shf.r.wrap.b32 	%r585, %r580, %r581, 18;
	mov.b64 	%rd908, {%r585, %r584};
	xor.b64  	%rd909, %rd908, %rd907;
	shf.l.wrap.b32 	%r586, %r580, %r581, 23;
	shf.l.wrap.b32 	%r587, %r581, %r580, 23;
	mov.b64 	%rd910, {%r587, %r586};
	xor.b64  	%rd911, %rd909, %rd910;
	xor.b64  	%rd912, %rd871, %rd847;
	and.b64  	%rd913, %rd895, %rd912;
	xor.b64  	%rd914, %rd913, %rd847;
	add.s64 	%rd915, %rd823, %rd642;
	add.s64 	%rd916, %rd915, %rd45;
	add.s64 	%rd917, %rd916, %rd914;
	add.s64 	%rd918, %rd917, %rd911;
	add.s64 	%rd919, %rd918, %rd834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r588,%dummy}, %rd906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r589}, %rd906;
	}
	shf.r.wrap.b32 	%r590, %r589, %r588, 28;
	shf.r.wrap.b32 	%r591, %r588, %r589, 28;
	mov.b64 	%rd920, {%r591, %r590};
	shf.l.wrap.b32 	%r592, %r588, %r589, 30;
	shf.l.wrap.b32 	%r593, %r589, %r588, 30;
	mov.b64 	%rd921, {%r593, %r592};
	xor.b64  	%rd922, %rd921, %rd920;
	shf.l.wrap.b32 	%r594, %r588, %r589, 25;
	shf.l.wrap.b32 	%r595, %r589, %r588, 25;
	mov.b64 	%rd923, {%r595, %r594};
	xor.b64  	%rd924, %rd922, %rd923;
	xor.b64  	%rd925, %rd906, %rd858;
	xor.b64  	%rd926, %rd906, %rd882;
	and.b64  	%rd927, %rd926, %rd925;
	xor.b64  	%rd928, %rd927, %rd906;
	add.s64 	%rd929, %rd918, %rd928;
	add.s64 	%rd930, %rd929, %rd924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd919;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 14;
	shf.r.wrap.b32 	%r599, %r596, %r597, 14;
	mov.b64 	%rd931, {%r599, %r598};
	shf.r.wrap.b32 	%r600, %r597, %r596, 18;
	shf.r.wrap.b32 	%r601, %r596, %r597, 18;
	mov.b64 	%rd932, {%r601, %r600};
	xor.b64  	%rd933, %rd932, %rd931;
	shf.l.wrap.b32 	%r602, %r596, %r597, 23;
	shf.l.wrap.b32 	%r603, %r597, %r596, 23;
	mov.b64 	%rd934, {%r603, %r602};
	xor.b64  	%rd935, %rd933, %rd934;
	xor.b64  	%rd936, %rd895, %rd871;
	and.b64  	%rd937, %rd919, %rd936;
	xor.b64  	%rd938, %rd937, %rd871;
	add.s64 	%rd939, %rd847, %rd649;
	add.s64 	%rd940, %rd939, %rd46;
	add.s64 	%rd941, %rd940, %rd938;
	add.s64 	%rd942, %rd941, %rd935;
	add.s64 	%rd943, %rd942, %rd858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r604,%dummy}, %rd930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd930;
	}
	shf.r.wrap.b32 	%r606, %r605, %r604, 28;
	shf.r.wrap.b32 	%r607, %r604, %r605, 28;
	mov.b64 	%rd944, {%r607, %r606};
	shf.l.wrap.b32 	%r608, %r604, %r605, 30;
	shf.l.wrap.b32 	%r609, %r605, %r604, 30;
	mov.b64 	%rd945, {%r609, %r608};
	xor.b64  	%rd946, %rd945, %rd944;
	shf.l.wrap.b32 	%r610, %r604, %r605, 25;
	shf.l.wrap.b32 	%r611, %r605, %r604, 25;
	mov.b64 	%rd947, {%r611, %r610};
	xor.b64  	%rd948, %rd946, %rd947;
	xor.b64  	%rd949, %rd930, %rd882;
	xor.b64  	%rd950, %rd930, %rd906;
	and.b64  	%rd951, %rd950, %rd949;
	xor.b64  	%rd952, %rd951, %rd930;
	add.s64 	%rd953, %rd942, %rd952;
	add.s64 	%rd954, %rd953, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd943;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 14;
	shf.r.wrap.b32 	%r615, %r612, %r613, 14;
	mov.b64 	%rd955, {%r615, %r614};
	shf.r.wrap.b32 	%r616, %r613, %r612, 18;
	shf.r.wrap.b32 	%r617, %r612, %r613, 18;
	mov.b64 	%rd956, {%r617, %r616};
	xor.b64  	%rd957, %rd956, %rd955;
	shf.l.wrap.b32 	%r618, %r612, %r613, 23;
	shf.l.wrap.b32 	%r619, %r613, %r612, 23;
	mov.b64 	%rd958, {%r619, %r618};
	xor.b64  	%rd959, %rd957, %rd958;
	xor.b64  	%rd960, %rd919, %rd895;
	and.b64  	%rd961, %rd943, %rd960;
	xor.b64  	%rd962, %rd961, %rd895;
	add.s64 	%rd963, %rd871, %rd656;
	add.s64 	%rd964, %rd963, %rd47;
	add.s64 	%rd965, %rd964, %rd962;
	add.s64 	%rd966, %rd965, %rd959;
	add.s64 	%rd967, %rd966, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r620,%dummy}, %rd954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r621}, %rd954;
	}
	shf.r.wrap.b32 	%r622, %r621, %r620, 28;
	shf.r.wrap.b32 	%r623, %r620, %r621, 28;
	mov.b64 	%rd968, {%r623, %r622};
	shf.l.wrap.b32 	%r624, %r620, %r621, 30;
	shf.l.wrap.b32 	%r625, %r621, %r620, 30;
	mov.b64 	%rd969, {%r625, %r624};
	xor.b64  	%rd970, %rd969, %rd968;
	shf.l.wrap.b32 	%r626, %r620, %r621, 25;
	shf.l.wrap.b32 	%r627, %r621, %r620, 25;
	mov.b64 	%rd971, {%r627, %r626};
	xor.b64  	%rd972, %rd970, %rd971;
	xor.b64  	%rd973, %rd954, %rd906;
	xor.b64  	%rd974, %rd954, %rd930;
	and.b64  	%rd975, %rd974, %rd973;
	xor.b64  	%rd976, %rd975, %rd954;
	add.s64 	%rd977, %rd966, %rd976;
	add.s64 	%rd978, %rd977, %rd972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r628,%dummy}, %rd967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r629}, %rd967;
	}
	shf.r.wrap.b32 	%r630, %r629, %r628, 14;
	shf.r.wrap.b32 	%r631, %r628, %r629, 14;
	mov.b64 	%rd979, {%r631, %r630};
	shf.r.wrap.b32 	%r632, %r629, %r628, 18;
	shf.r.wrap.b32 	%r633, %r628, %r629, 18;
	mov.b64 	%rd980, {%r633, %r632};
	xor.b64  	%rd981, %rd980, %rd979;
	shf.l.wrap.b32 	%r634, %r628, %r629, 23;
	shf.l.wrap.b32 	%r635, %r629, %r628, 23;
	mov.b64 	%rd982, {%r635, %r634};
	xor.b64  	%rd983, %rd981, %rd982;
	xor.b64  	%rd984, %rd943, %rd919;
	and.b64  	%rd985, %rd967, %rd984;
	xor.b64  	%rd986, %rd985, %rd919;
	add.s64 	%rd987, %rd895, %rd663;
	add.s64 	%rd988, %rd987, %rd48;
	add.s64 	%rd989, %rd988, %rd986;
	add.s64 	%rd990, %rd989, %rd983;
	add.s64 	%rd991, %rd990, %rd906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r636,%dummy}, %rd978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r637}, %rd978;
	}
	shf.r.wrap.b32 	%r638, %r637, %r636, 28;
	shf.r.wrap.b32 	%r639, %r636, %r637, 28;
	mov.b64 	%rd992, {%r639, %r638};
	shf.l.wrap.b32 	%r640, %r636, %r637, 30;
	shf.l.wrap.b32 	%r641, %r637, %r636, 30;
	mov.b64 	%rd993, {%r641, %r640};
	xor.b64  	%rd994, %rd993, %rd992;
	shf.l.wrap.b32 	%r642, %r636, %r637, 25;
	shf.l.wrap.b32 	%r643, %r637, %r636, 25;
	mov.b64 	%rd995, {%r643, %r642};
	xor.b64  	%rd996, %rd994, %rd995;
	xor.b64  	%rd997, %rd978, %rd930;
	xor.b64  	%rd998, %rd978, %rd954;
	and.b64  	%rd999, %rd998, %rd997;
	xor.b64  	%rd1000, %rd999, %rd978;
	add.s64 	%rd1001, %rd990, %rd1000;
	add.s64 	%rd1002, %rd1001, %rd996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r644,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r645}, %rd991;
	}
	shf.r.wrap.b32 	%r646, %r645, %r644, 14;
	shf.r.wrap.b32 	%r647, %r644, %r645, 14;
	mov.b64 	%rd1003, {%r647, %r646};
	shf.r.wrap.b32 	%r648, %r645, %r644, 18;
	shf.r.wrap.b32 	%r649, %r644, %r645, 18;
	mov.b64 	%rd1004, {%r649, %r648};
	xor.b64  	%rd1005, %rd1004, %rd1003;
	shf.l.wrap.b32 	%r650, %r644, %r645, 23;
	shf.l.wrap.b32 	%r651, %r645, %r644, 23;
	mov.b64 	%rd1006, {%r651, %r650};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	xor.b64  	%rd1008, %rd967, %rd943;
	and.b64  	%rd1009, %rd991, %rd1008;
	xor.b64  	%rd1010, %rd1009, %rd943;
	add.s64 	%rd1011, %rd919, %rd670;
	add.s64 	%rd1012, %rd1011, %rd49;
	add.s64 	%rd1013, %rd1012, %rd1010;
	add.s64 	%rd1014, %rd1013, %rd1007;
	add.s64 	%rd1015, %rd1014, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r652,%dummy}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd1002;
	}
	shf.r.wrap.b32 	%r654, %r653, %r652, 28;
	shf.r.wrap.b32 	%r655, %r652, %r653, 28;
	mov.b64 	%rd1016, {%r655, %r654};
	shf.l.wrap.b32 	%r656, %r652, %r653, 30;
	shf.l.wrap.b32 	%r657, %r653, %r652, 30;
	mov.b64 	%rd1017, {%r657, %r656};
	xor.b64  	%rd1018, %rd1017, %rd1016;
	shf.l.wrap.b32 	%r658, %r652, %r653, 25;
	shf.l.wrap.b32 	%r659, %r653, %r652, 25;
	mov.b64 	%rd1019, {%r659, %r658};
	xor.b64  	%rd1020, %rd1018, %rd1019;
	xor.b64  	%rd1021, %rd1002, %rd954;
	xor.b64  	%rd1022, %rd1002, %rd978;
	and.b64  	%rd1023, %rd1022, %rd1021;
	xor.b64  	%rd1024, %rd1023, %rd1002;
	add.s64 	%rd1025, %rd1014, %rd1024;
	add.s64 	%rd1026, %rd1025, %rd1020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r660,%dummy}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd1015;
	}
	shf.r.wrap.b32 	%r662, %r661, %r660, 14;
	shf.r.wrap.b32 	%r663, %r660, %r661, 14;
	mov.b64 	%rd1027, {%r663, %r662};
	shf.r.wrap.b32 	%r664, %r661, %r660, 18;
	shf.r.wrap.b32 	%r665, %r660, %r661, 18;
	mov.b64 	%rd1028, {%r665, %r664};
	xor.b64  	%rd1029, %rd1028, %rd1027;
	shf.l.wrap.b32 	%r666, %r660, %r661, 23;
	shf.l.wrap.b32 	%r667, %r661, %r660, 23;
	mov.b64 	%rd1030, {%r667, %r666};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	xor.b64  	%rd1032, %rd991, %rd967;
	and.b64  	%rd1033, %rd1015, %rd1032;
	xor.b64  	%rd1034, %rd1033, %rd967;
	add.s64 	%rd1035, %rd943, %rd677;
	add.s64 	%rd1036, %rd1035, %rd50;
	add.s64 	%rd1037, %rd1036, %rd1034;
	add.s64 	%rd1038, %rd1037, %rd1031;
	add.s64 	%rd1039, %rd1038, %rd954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r668,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd1026;
	}
	shf.r.wrap.b32 	%r670, %r669, %r668, 28;
	shf.r.wrap.b32 	%r671, %r668, %r669, 28;
	mov.b64 	%rd1040, {%r671, %r670};
	shf.l.wrap.b32 	%r672, %r668, %r669, 30;
	shf.l.wrap.b32 	%r673, %r669, %r668, 30;
	mov.b64 	%rd1041, {%r673, %r672};
	xor.b64  	%rd1042, %rd1041, %rd1040;
	shf.l.wrap.b32 	%r674, %r668, %r669, 25;
	shf.l.wrap.b32 	%r675, %r669, %r668, 25;
	mov.b64 	%rd1043, {%r675, %r674};
	xor.b64  	%rd1044, %rd1042, %rd1043;
	xor.b64  	%rd1045, %rd1026, %rd978;
	xor.b64  	%rd1046, %rd1026, %rd1002;
	and.b64  	%rd1047, %rd1046, %rd1045;
	xor.b64  	%rd1048, %rd1047, %rd1026;
	add.s64 	%rd1049, %rd1038, %rd1048;
	add.s64 	%rd1050, %rd1049, %rd1044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r676,%dummy}, %rd1039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r677}, %rd1039;
	}
	shf.r.wrap.b32 	%r678, %r677, %r676, 14;
	shf.r.wrap.b32 	%r679, %r676, %r677, 14;
	mov.b64 	%rd1051, {%r679, %r678};
	shf.r.wrap.b32 	%r680, %r677, %r676, 18;
	shf.r.wrap.b32 	%r681, %r676, %r677, 18;
	mov.b64 	%rd1052, {%r681, %r680};
	xor.b64  	%rd1053, %rd1052, %rd1051;
	shf.l.wrap.b32 	%r682, %r676, %r677, 23;
	shf.l.wrap.b32 	%r683, %r677, %r676, 23;
	mov.b64 	%rd1054, {%r683, %r682};
	xor.b64  	%rd1055, %rd1053, %rd1054;
	xor.b64  	%rd1056, %rd1015, %rd991;
	and.b64  	%rd1057, %rd1039, %rd1056;
	xor.b64  	%rd1058, %rd1057, %rd991;
	add.s64 	%rd1059, %rd967, %rd690;
	add.s64 	%rd1060, %rd1059, %rd51;
	add.s64 	%rd1061, %rd1060, %rd1058;
	add.s64 	%rd1062, %rd1061, %rd1055;
	add.s64 	%rd1063, %rd1062, %rd978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r684,%dummy}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r685}, %rd1050;
	}
	shf.r.wrap.b32 	%r686, %r685, %r684, 28;
	shf.r.wrap.b32 	%r687, %r684, %r685, 28;
	mov.b64 	%rd1064, {%r687, %r686};
	shf.l.wrap.b32 	%r688, %r684, %r685, 30;
	shf.l.wrap.b32 	%r689, %r685, %r684, 30;
	mov.b64 	%rd1065, {%r689, %r688};
	xor.b64  	%rd1066, %rd1065, %rd1064;
	shf.l.wrap.b32 	%r690, %r684, %r685, 25;
	shf.l.wrap.b32 	%r691, %r685, %r684, 25;
	mov.b64 	%rd1067, {%r691, %r690};
	xor.b64  	%rd1068, %rd1066, %rd1067;
	xor.b64  	%rd1069, %rd1050, %rd1002;
	xor.b64  	%rd1070, %rd1050, %rd1026;
	and.b64  	%rd1071, %rd1070, %rd1069;
	xor.b64  	%rd1072, %rd1071, %rd1050;
	add.s64 	%rd1073, %rd1062, %rd1072;
	add.s64 	%rd1074, %rd1073, %rd1068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r692,%dummy}, %rd677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r693}, %rd677;
	}
	shf.r.wrap.b32 	%r694, %r693, %r692, 19;
	shf.r.wrap.b32 	%r695, %r692, %r693, 19;
	mov.b64 	%rd1075, {%r695, %r694};
	shf.l.wrap.b32 	%r696, %r692, %r693, 3;
	shf.l.wrap.b32 	%r697, %r693, %r692, 3;
	mov.b64 	%rd1076, {%r697, %r696};
	shr.u64 	%rd1077, %rd677, 6;
	xor.b64  	%rd1078, %rd1075, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd1076;
	shf.r.wrap.b32 	%r698, %r325, %r324, 1;
	shf.r.wrap.b32 	%r699, %r324, %r325, 1;
	mov.b64 	%rd1080, {%r699, %r698};
	shf.r.wrap.b32 	%r700, %r325, %r324, 8;
	shf.r.wrap.b32 	%r701, %r324, %r325, 8;
	mov.b64 	%rd1081, {%r701, %r700};
	shr.u64 	%rd1082, %rd553, 7;
	xor.b64  	%rd1083, %rd1080, %rd1082;
	xor.b64  	%rd1084, %rd1083, %rd1081;
	add.s64 	%rd1085, %rd546, %rd642;
	add.s64 	%rd1086, %rd1085, %rd1079;
	add.s64 	%rd1087, %rd1086, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r702,%dummy}, %rd690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r703}, %rd690;
	}
	shf.r.wrap.b32 	%r704, %r703, %r702, 19;
	shf.r.wrap.b32 	%r705, %r702, %r703, 19;
	mov.b64 	%rd1088, {%r705, %r704};
	shf.l.wrap.b32 	%r706, %r702, %r703, 3;
	shf.l.wrap.b32 	%r707, %r703, %r702, 3;
	mov.b64 	%rd1089, {%r707, %r706};
	shr.u64 	%rd1090, %rd690, 6;
	xor.b64  	%rd1091, %rd1088, %rd1090;
	xor.b64  	%rd1092, %rd1091, %rd1089;
	shf.r.wrap.b32 	%r708, %r337, %r336, 1;
	shf.r.wrap.b32 	%r709, %r336, %r337, 1;
	mov.b64 	%rd1093, {%r709, %r708};
	shf.r.wrap.b32 	%r710, %r337, %r336, 8;
	shf.r.wrap.b32 	%r711, %r336, %r337, 8;
	mov.b64 	%rd1094, {%r711, %r710};
	shr.u64 	%rd1095, %rd565, 7;
	xor.b64  	%rd1096, %rd1093, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1094;
	add.s64 	%rd1098, %rd553, %rd649;
	add.s64 	%rd1099, %rd1098, %rd1092;
	add.s64 	%rd1100, %rd1099, %rd1097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r712,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r713}, %rd1087;
	}
	shf.r.wrap.b32 	%r714, %r713, %r712, 19;
	shf.r.wrap.b32 	%r715, %r712, %r713, 19;
	mov.b64 	%rd1101, {%r715, %r714};
	shf.l.wrap.b32 	%r716, %r712, %r713, 3;
	shf.l.wrap.b32 	%r717, %r713, %r712, 3;
	mov.b64 	%rd1102, {%r717, %r716};
	shr.u64 	%rd1103, %rd1087, 6;
	xor.b64  	%rd1104, %rd1101, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1102;
	shf.r.wrap.b32 	%r718, %r349, %r348, 1;
	shf.r.wrap.b32 	%r719, %r348, %r349, 1;
	mov.b64 	%rd1106, {%r719, %r718};
	shf.r.wrap.b32 	%r720, %r349, %r348, 8;
	shf.r.wrap.b32 	%r721, %r348, %r349, 8;
	mov.b64 	%rd1107, {%r721, %r720};
	shr.u64 	%rd1108, %rd577, 7;
	xor.b64  	%rd1109, %rd1106, %rd1108;
	xor.b64  	%rd1110, %rd1109, %rd1107;
	add.s64 	%rd1111, %rd565, %rd656;
	add.s64 	%rd1112, %rd1111, %rd1105;
	add.s64 	%rd1113, %rd1112, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r722,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r723}, %rd1100;
	}
	shf.r.wrap.b32 	%r724, %r723, %r722, 19;
	shf.r.wrap.b32 	%r725, %r722, %r723, 19;
	mov.b64 	%rd1114, {%r725, %r724};
	shf.l.wrap.b32 	%r726, %r722, %r723, 3;
	shf.l.wrap.b32 	%r727, %r723, %r722, 3;
	mov.b64 	%rd1115, {%r727, %r726};
	shr.u64 	%rd1116, %rd1100, 6;
	xor.b64  	%rd1117, %rd1114, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1115;
	shf.r.wrap.b32 	%r728, %r361, %r360, 1;
	shf.r.wrap.b32 	%r729, %r360, %r361, 1;
	mov.b64 	%rd1119, {%r729, %r728};
	shf.r.wrap.b32 	%r730, %r361, %r360, 8;
	shf.r.wrap.b32 	%r731, %r360, %r361, 8;
	mov.b64 	%rd1120, {%r731, %r730};
	shr.u64 	%rd1121, %rd589, 7;
	xor.b64  	%rd1122, %rd1119, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1120;
	add.s64 	%rd1124, %rd663, %rd577;
	add.s64 	%rd1125, %rd1124, %rd1118;
	add.s64 	%rd1126, %rd1125, %rd1123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r732,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r733}, %rd1113;
	}
	shf.r.wrap.b32 	%r734, %r733, %r732, 19;
	shf.r.wrap.b32 	%r735, %r732, %r733, 19;
	mov.b64 	%rd1127, {%r735, %r734};
	shf.l.wrap.b32 	%r736, %r732, %r733, 3;
	shf.l.wrap.b32 	%r737, %r733, %r732, 3;
	mov.b64 	%rd1128, {%r737, %r736};
	shr.u64 	%rd1129, %rd1113, 6;
	xor.b64  	%rd1130, %rd1127, %rd1129;
	xor.b64  	%rd1131, %rd1130, %rd1128;
	shf.r.wrap.b32 	%r738, %r373, %r372, 1;
	shf.r.wrap.b32 	%r739, %r372, %r373, 1;
	mov.b64 	%rd1132, {%r739, %r738};
	shf.r.wrap.b32 	%r740, %r373, %r372, 8;
	shf.r.wrap.b32 	%r741, %r372, %r373, 8;
	mov.b64 	%rd1133, {%r741, %r740};
	shr.u64 	%rd1134, %rd601, 7;
	xor.b64  	%rd1135, %rd1132, %rd1134;
	xor.b64  	%rd1136, %rd1135, %rd1133;
	add.s64 	%rd1137, %rd670, %rd589;
	add.s64 	%rd1138, %rd1137, %rd1131;
	add.s64 	%rd1139, %rd1138, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r742,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r743}, %rd1126;
	}
	shf.r.wrap.b32 	%r744, %r743, %r742, 19;
	shf.r.wrap.b32 	%r745, %r742, %r743, 19;
	mov.b64 	%rd1140, {%r745, %r744};
	shf.l.wrap.b32 	%r746, %r742, %r743, 3;
	shf.l.wrap.b32 	%r747, %r743, %r742, 3;
	mov.b64 	%rd1141, {%r747, %r746};
	shr.u64 	%rd1142, %rd1126, 6;
	xor.b64  	%rd1143, %rd1140, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1141;
	shf.r.wrap.b32 	%r748, %r385, %r384, 1;
	shf.r.wrap.b32 	%r749, %r384, %r385, 1;
	mov.b64 	%rd1145, {%r749, %r748};
	shf.r.wrap.b32 	%r750, %r385, %r384, 8;
	shf.r.wrap.b32 	%r751, %r384, %r385, 8;
	mov.b64 	%rd1146, {%r751, %r750};
	shr.u64 	%rd1147, %rd614, 7;
	xor.b64  	%rd1148, %rd1145, %rd1147;
	xor.b64  	%rd1149, %rd1148, %rd1146;
	add.s64 	%rd1150, %rd677, %rd601;
	add.s64 	%rd1151, %rd1150, %rd1144;
	add.s64 	%rd1152, %rd1151, %rd1149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r752,%dummy}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r753}, %rd1139;
	}
	shf.r.wrap.b32 	%r754, %r753, %r752, 19;
	shf.r.wrap.b32 	%r755, %r752, %r753, 19;
	mov.b64 	%rd1153, {%r755, %r754};
	shf.l.wrap.b32 	%r756, %r752, %r753, 3;
	shf.l.wrap.b32 	%r757, %r753, %r752, 3;
	mov.b64 	%rd1154, {%r757, %r756};
	shr.u64 	%rd1155, %rd1139, 6;
	xor.b64  	%rd1156, %rd1153, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd1154;
	shf.r.wrap.b32 	%r758, %r391, %r390, 1;
	shf.r.wrap.b32 	%r759, %r390, %r391, 1;
	mov.b64 	%rd1158, {%r759, %r758};
	shf.r.wrap.b32 	%r760, %r391, %r390, 8;
	shf.r.wrap.b32 	%r761, %r390, %r391, 8;
	mov.b64 	%rd1159, {%r761, %r760};
	shr.u64 	%rd1160, %rd627, 7;
	xor.b64  	%rd1161, %rd1158, %rd1160;
	xor.b64  	%rd1162, %rd1161, %rd1159;
	add.s64 	%rd1163, %rd690, %rd614;
	add.s64 	%rd1164, %rd1163, %rd1157;
	add.s64 	%rd1165, %rd1164, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r762,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r763}, %rd1152;
	}
	shf.r.wrap.b32 	%r764, %r763, %r762, 19;
	shf.r.wrap.b32 	%r765, %r762, %r763, 19;
	mov.b64 	%rd1166, {%r765, %r764};
	shf.l.wrap.b32 	%r766, %r762, %r763, 3;
	shf.l.wrap.b32 	%r767, %r763, %r762, 3;
	mov.b64 	%rd1167, {%r767, %r766};
	shr.u64 	%rd1168, %rd1152, 6;
	xor.b64  	%rd1169, %rd1166, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1167;
	shf.r.wrap.b32 	%r768, %r397, %r396, 1;
	shf.r.wrap.b32 	%r769, %r396, %r397, 1;
	mov.b64 	%rd1171, {%r769, %r768};
	shf.r.wrap.b32 	%r770, %r397, %r396, 8;
	shf.r.wrap.b32 	%r771, %r396, %r397, 8;
	mov.b64 	%rd1172, {%r771, %r770};
	shr.u64 	%rd1173, %rd635, 7;
	xor.b64  	%rd1174, %rd1171, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1172;
	add.s64 	%rd1176, %rd1087, %rd627;
	add.s64 	%rd1177, %rd1176, %rd1170;
	add.s64 	%rd1178, %rd1177, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r772,%dummy}, %rd1165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1165;
	}
	shf.r.wrap.b32 	%r774, %r773, %r772, 19;
	shf.r.wrap.b32 	%r775, %r772, %r773, 19;
	mov.b64 	%rd1179, {%r775, %r774};
	shf.l.wrap.b32 	%r776, %r772, %r773, 3;
	shf.l.wrap.b32 	%r777, %r773, %r772, 3;
	mov.b64 	%rd1180, {%r777, %r776};
	shr.u64 	%rd1181, %rd1165, 6;
	xor.b64  	%rd1182, %rd1179, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1180;
	shf.r.wrap.b32 	%r778, %r403, %r402, 1;
	shf.r.wrap.b32 	%r779, %r402, %r403, 1;
	mov.b64 	%rd1184, {%r779, %r778};
	shf.r.wrap.b32 	%r780, %r403, %r402, 8;
	shf.r.wrap.b32 	%r781, %r402, %r403, 8;
	mov.b64 	%rd1185, {%r781, %r780};
	shr.u64 	%rd1186, %rd642, 7;
	xor.b64  	%rd1187, %rd1184, %rd1186;
	xor.b64  	%rd1188, %rd1187, %rd1185;
	add.s64 	%rd1189, %rd1100, %rd635;
	add.s64 	%rd1190, %rd1189, %rd1183;
	add.s64 	%rd1191, %rd1190, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r782,%dummy}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r783}, %rd1178;
	}
	shf.r.wrap.b32 	%r784, %r783, %r782, 19;
	shf.r.wrap.b32 	%r785, %r782, %r783, 19;
	mov.b64 	%rd1192, {%r785, %r784};
	shf.l.wrap.b32 	%r786, %r782, %r783, 3;
	shf.l.wrap.b32 	%r787, %r783, %r782, 3;
	mov.b64 	%rd1193, {%r787, %r786};
	shr.u64 	%rd1194, %rd1178, 6;
	xor.b64  	%rd1195, %rd1192, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1193;
	shf.r.wrap.b32 	%r788, %r409, %r408, 1;
	shf.r.wrap.b32 	%r789, %r408, %r409, 1;
	mov.b64 	%rd1197, {%r789, %r788};
	shf.r.wrap.b32 	%r790, %r409, %r408, 8;
	shf.r.wrap.b32 	%r791, %r408, %r409, 8;
	mov.b64 	%rd1198, {%r791, %r790};
	shr.u64 	%rd1199, %rd649, 7;
	xor.b64  	%rd1200, %rd1197, %rd1199;
	xor.b64  	%rd1201, %rd1200, %rd1198;
	add.s64 	%rd1202, %rd1113, %rd642;
	add.s64 	%rd1203, %rd1202, %rd1196;
	add.s64 	%rd1204, %rd1203, %rd1201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r792,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r793}, %rd1191;
	}
	shf.r.wrap.b32 	%r794, %r793, %r792, 19;
	shf.r.wrap.b32 	%r795, %r792, %r793, 19;
	mov.b64 	%rd1205, {%r795, %r794};
	shf.l.wrap.b32 	%r796, %r792, %r793, 3;
	shf.l.wrap.b32 	%r797, %r793, %r792, 3;
	mov.b64 	%rd1206, {%r797, %r796};
	shr.u64 	%rd1207, %rd1191, 6;
	xor.b64  	%rd1208, %rd1205, %rd1207;
	xor.b64  	%rd1209, %rd1208, %rd1206;
	shf.r.wrap.b32 	%r798, %r415, %r414, 1;
	shf.r.wrap.b32 	%r799, %r414, %r415, 1;
	mov.b64 	%rd1210, {%r799, %r798};
	shf.r.wrap.b32 	%r800, %r415, %r414, 8;
	shf.r.wrap.b32 	%r801, %r414, %r415, 8;
	mov.b64 	%rd1211, {%r801, %r800};
	shr.u64 	%rd1212, %rd656, 7;
	xor.b64  	%rd1213, %rd1210, %rd1212;
	xor.b64  	%rd1214, %rd1213, %rd1211;
	add.s64 	%rd1215, %rd1126, %rd649;
	add.s64 	%rd1216, %rd1215, %rd1209;
	add.s64 	%rd1217, %rd1216, %rd1214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r802,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r803}, %rd1204;
	}
	shf.r.wrap.b32 	%r804, %r803, %r802, 19;
	shf.r.wrap.b32 	%r805, %r802, %r803, 19;
	mov.b64 	%rd1218, {%r805, %r804};
	shf.l.wrap.b32 	%r806, %r802, %r803, 3;
	shf.l.wrap.b32 	%r807, %r803, %r802, 3;
	mov.b64 	%rd1219, {%r807, %r806};
	shr.u64 	%rd1220, %rd1204, 6;
	xor.b64  	%rd1221, %rd1218, %rd1220;
	xor.b64  	%rd1222, %rd1221, %rd1219;
	shf.r.wrap.b32 	%r808, %r421, %r420, 1;
	shf.r.wrap.b32 	%r809, %r420, %r421, 1;
	mov.b64 	%rd1223, {%r809, %r808};
	shf.r.wrap.b32 	%r810, %r421, %r420, 8;
	shf.r.wrap.b32 	%r811, %r420, %r421, 8;
	mov.b64 	%rd1224, {%r811, %r810};
	shr.u64 	%rd1225, %rd663, 7;
	xor.b64  	%rd1226, %rd1223, %rd1225;
	xor.b64  	%rd1227, %rd1226, %rd1224;
	add.s64 	%rd1228, %rd1139, %rd656;
	add.s64 	%rd1229, %rd1228, %rd1222;
	add.s64 	%rd1230, %rd1229, %rd1227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r812,%dummy}, %rd1217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd1217;
	}
	shf.r.wrap.b32 	%r814, %r813, %r812, 19;
	shf.r.wrap.b32 	%r815, %r812, %r813, 19;
	mov.b64 	%rd1231, {%r815, %r814};
	shf.l.wrap.b32 	%r816, %r812, %r813, 3;
	shf.l.wrap.b32 	%r817, %r813, %r812, 3;
	mov.b64 	%rd1232, {%r817, %r816};
	shr.u64 	%rd1233, %rd1217, 6;
	xor.b64  	%rd1234, %rd1231, %rd1233;
	xor.b64  	%rd1235, %rd1234, %rd1232;
	shf.r.wrap.b32 	%r818, %r427, %r426, 1;
	shf.r.wrap.b32 	%r819, %r426, %r427, 1;
	mov.b64 	%rd1236, {%r819, %r818};
	shf.r.wrap.b32 	%r820, %r427, %r426, 8;
	shf.r.wrap.b32 	%r821, %r426, %r427, 8;
	mov.b64 	%rd1237, {%r821, %r820};
	shr.u64 	%rd1238, %rd670, 7;
	xor.b64  	%rd1239, %rd1236, %rd1238;
	xor.b64  	%rd1240, %rd1239, %rd1237;
	add.s64 	%rd1241, %rd1152, %rd663;
	add.s64 	%rd1242, %rd1241, %rd1235;
	add.s64 	%rd1243, %rd1242, %rd1240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r822,%dummy}, %rd1230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd1230;
	}
	shf.r.wrap.b32 	%r824, %r823, %r822, 19;
	shf.r.wrap.b32 	%r825, %r822, %r823, 19;
	mov.b64 	%rd1244, {%r825, %r824};
	shf.l.wrap.b32 	%r826, %r822, %r823, 3;
	shf.l.wrap.b32 	%r827, %r823, %r822, 3;
	mov.b64 	%rd1245, {%r827, %r826};
	shr.u64 	%rd1246, %rd1230, 6;
	xor.b64  	%rd1247, %rd1244, %rd1246;
	xor.b64  	%rd1248, %rd1247, %rd1245;
	shf.r.wrap.b32 	%r828, %r693, %r692, 1;
	shf.r.wrap.b32 	%r829, %r692, %r693, 1;
	mov.b64 	%rd1249, {%r829, %r828};
	shf.r.wrap.b32 	%r830, %r693, %r692, 8;
	shf.r.wrap.b32 	%r831, %r692, %r693, 8;
	mov.b64 	%rd1250, {%r831, %r830};
	shr.u64 	%rd1251, %rd677, 7;
	xor.b64  	%rd1252, %rd1249, %rd1251;
	xor.b64  	%rd1253, %rd1252, %rd1250;
	add.s64 	%rd1254, %rd1165, %rd670;
	add.s64 	%rd1255, %rd1254, %rd1248;
	add.s64 	%rd1256, %rd1255, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r832,%dummy}, %rd1243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r833}, %rd1243;
	}
	shf.r.wrap.b32 	%r834, %r833, %r832, 19;
	shf.r.wrap.b32 	%r835, %r832, %r833, 19;
	mov.b64 	%rd1257, {%r835, %r834};
	shf.l.wrap.b32 	%r836, %r832, %r833, 3;
	shf.l.wrap.b32 	%r837, %r833, %r832, 3;
	mov.b64 	%rd1258, {%r837, %r836};
	shr.u64 	%rd1259, %rd1243, 6;
	xor.b64  	%rd1260, %rd1257, %rd1259;
	xor.b64  	%rd1261, %rd1260, %rd1258;
	shf.r.wrap.b32 	%r838, %r703, %r702, 1;
	shf.r.wrap.b32 	%r839, %r702, %r703, 1;
	mov.b64 	%rd1262, {%r839, %r838};
	shf.r.wrap.b32 	%r840, %r703, %r702, 8;
	shf.r.wrap.b32 	%r841, %r702, %r703, 8;
	mov.b64 	%rd1263, {%r841, %r840};
	shr.u64 	%rd1264, %rd690, 7;
	xor.b64  	%rd1265, %rd1262, %rd1264;
	xor.b64  	%rd1266, %rd1265, %rd1263;
	add.s64 	%rd1267, %rd1178, %rd677;
	add.s64 	%rd1268, %rd1267, %rd1261;
	add.s64 	%rd1269, %rd1268, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r842,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r843}, %rd1256;
	}
	shf.r.wrap.b32 	%r844, %r843, %r842, 19;
	shf.r.wrap.b32 	%r845, %r842, %r843, 19;
	mov.b64 	%rd1270, {%r845, %r844};
	shf.l.wrap.b32 	%r846, %r842, %r843, 3;
	shf.l.wrap.b32 	%r847, %r843, %r842, 3;
	mov.b64 	%rd1271, {%r847, %r846};
	shr.u64 	%rd1272, %rd1256, 6;
	xor.b64  	%rd1273, %rd1270, %rd1272;
	xor.b64  	%rd1274, %rd1273, %rd1271;
	shf.r.wrap.b32 	%r848, %r713, %r712, 1;
	shf.r.wrap.b32 	%r849, %r712, %r713, 1;
	mov.b64 	%rd1275, {%r849, %r848};
	shf.r.wrap.b32 	%r850, %r713, %r712, 8;
	shf.r.wrap.b32 	%r851, %r712, %r713, 8;
	mov.b64 	%rd1276, {%r851, %r850};
	shr.u64 	%rd1277, %rd1087, 7;
	xor.b64  	%rd1278, %rd1275, %rd1277;
	xor.b64  	%rd1279, %rd1278, %rd1276;
	add.s64 	%rd1280, %rd1191, %rd690;
	add.s64 	%rd1281, %rd1280, %rd1274;
	add.s64 	%rd1282, %rd1281, %rd1279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r852,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r853}, %rd1063;
	}
	shf.r.wrap.b32 	%r854, %r853, %r852, 14;
	shf.r.wrap.b32 	%r855, %r852, %r853, 14;
	mov.b64 	%rd1283, {%r855, %r854};
	shf.r.wrap.b32 	%r856, %r853, %r852, 18;
	shf.r.wrap.b32 	%r857, %r852, %r853, 18;
	mov.b64 	%rd1284, {%r857, %r856};
	xor.b64  	%rd1285, %rd1284, %rd1283;
	shf.l.wrap.b32 	%r858, %r852, %r853, 23;
	shf.l.wrap.b32 	%r859, %r853, %r852, 23;
	mov.b64 	%rd1286, {%r859, %r858};
	xor.b64  	%rd1287, %rd1285, %rd1286;
	xor.b64  	%rd1288, %rd1039, %rd1015;
	and.b64  	%rd1289, %rd1288, %rd1063;
	xor.b64  	%rd1290, %rd1289, %rd1015;
	add.s64 	%rd1291, %rd1290, %rd991;
	add.s64 	%rd1292, %rd1291, %rd1087;
	add.s64 	%rd1293, %rd1292, %rd52;
	add.s64 	%rd1294, %rd1293, %rd1287;
	add.s64 	%rd1295, %rd1294, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r860,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r861}, %rd1074;
	}
	shf.r.wrap.b32 	%r862, %r861, %r860, 28;
	shf.r.wrap.b32 	%r863, %r860, %r861, 28;
	mov.b64 	%rd1296, {%r863, %r862};
	shf.l.wrap.b32 	%r864, %r860, %r861, 30;
	shf.l.wrap.b32 	%r865, %r861, %r860, 30;
	mov.b64 	%rd1297, {%r865, %r864};
	xor.b64  	%rd1298, %rd1297, %rd1296;
	shf.l.wrap.b32 	%r866, %r860, %r861, 25;
	shf.l.wrap.b32 	%r867, %r861, %r860, 25;
	mov.b64 	%rd1299, {%r867, %r866};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	xor.b64  	%rd1301, %rd1074, %rd1026;
	xor.b64  	%rd1302, %rd1074, %rd1050;
	and.b64  	%rd1303, %rd1302, %rd1301;
	xor.b64  	%rd1304, %rd1303, %rd1074;
	add.s64 	%rd1305, %rd1294, %rd1304;
	add.s64 	%rd1306, %rd1305, %rd1300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r868,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r869}, %rd1295;
	}
	shf.r.wrap.b32 	%r870, %r869, %r868, 14;
	shf.r.wrap.b32 	%r871, %r868, %r869, 14;
	mov.b64 	%rd1307, {%r871, %r870};
	shf.r.wrap.b32 	%r872, %r869, %r868, 18;
	shf.r.wrap.b32 	%r873, %r868, %r869, 18;
	mov.b64 	%rd1308, {%r873, %r872};
	xor.b64  	%rd1309, %rd1308, %rd1307;
	shf.l.wrap.b32 	%r874, %r868, %r869, 23;
	shf.l.wrap.b32 	%r875, %r869, %r868, 23;
	mov.b64 	%rd1310, {%r875, %r874};
	xor.b64  	%rd1311, %rd1309, %rd1310;
	xor.b64  	%rd1312, %rd1063, %rd1039;
	and.b64  	%rd1313, %rd1295, %rd1312;
	xor.b64  	%rd1314, %rd1313, %rd1039;
	add.s64 	%rd1315, %rd1100, %rd1015;
	add.s64 	%rd1316, %rd1315, %rd53;
	add.s64 	%rd1317, %rd1316, %rd1314;
	add.s64 	%rd1318, %rd1317, %rd1311;
	add.s64 	%rd1319, %rd1318, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r876,%dummy}, %rd1306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r877}, %rd1306;
	}
	shf.r.wrap.b32 	%r878, %r877, %r876, 28;
	shf.r.wrap.b32 	%r879, %r876, %r877, 28;
	mov.b64 	%rd1320, {%r879, %r878};
	shf.l.wrap.b32 	%r880, %r876, %r877, 30;
	shf.l.wrap.b32 	%r881, %r877, %r876, 30;
	mov.b64 	%rd1321, {%r881, %r880};
	xor.b64  	%rd1322, %rd1321, %rd1320;
	shf.l.wrap.b32 	%r882, %r876, %r877, 25;
	shf.l.wrap.b32 	%r883, %r877, %r876, 25;
	mov.b64 	%rd1323, {%r883, %r882};
	xor.b64  	%rd1324, %rd1322, %rd1323;
	xor.b64  	%rd1325, %rd1306, %rd1050;
	xor.b64  	%rd1326, %rd1306, %rd1074;
	and.b64  	%rd1327, %rd1326, %rd1325;
	xor.b64  	%rd1328, %rd1327, %rd1306;
	add.s64 	%rd1329, %rd1318, %rd1328;
	add.s64 	%rd1330, %rd1329, %rd1324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r884,%dummy}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r885}, %rd1319;
	}
	shf.r.wrap.b32 	%r886, %r885, %r884, 14;
	shf.r.wrap.b32 	%r887, %r884, %r885, 14;
	mov.b64 	%rd1331, {%r887, %r886};
	shf.r.wrap.b32 	%r888, %r885, %r884, 18;
	shf.r.wrap.b32 	%r889, %r884, %r885, 18;
	mov.b64 	%rd1332, {%r889, %r888};
	xor.b64  	%rd1333, %rd1332, %rd1331;
	shf.l.wrap.b32 	%r890, %r884, %r885, 23;
	shf.l.wrap.b32 	%r891, %r885, %r884, 23;
	mov.b64 	%rd1334, {%r891, %r890};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	xor.b64  	%rd1336, %rd1295, %rd1063;
	and.b64  	%rd1337, %rd1319, %rd1336;
	xor.b64  	%rd1338, %rd1337, %rd1063;
	add.s64 	%rd1339, %rd1113, %rd1039;
	add.s64 	%rd1340, %rd1339, %rd54;
	add.s64 	%rd1341, %rd1340, %rd1338;
	add.s64 	%rd1342, %rd1341, %rd1335;
	add.s64 	%rd1343, %rd1342, %rd1050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r892,%dummy}, %rd1330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r893}, %rd1330;
	}
	shf.r.wrap.b32 	%r894, %r893, %r892, 28;
	shf.r.wrap.b32 	%r895, %r892, %r893, 28;
	mov.b64 	%rd1344, {%r895, %r894};
	shf.l.wrap.b32 	%r896, %r892, %r893, 30;
	shf.l.wrap.b32 	%r897, %r893, %r892, 30;
	mov.b64 	%rd1345, {%r897, %r896};
	xor.b64  	%rd1346, %rd1345, %rd1344;
	shf.l.wrap.b32 	%r898, %r892, %r893, 25;
	shf.l.wrap.b32 	%r899, %r893, %r892, 25;
	mov.b64 	%rd1347, {%r899, %r898};
	xor.b64  	%rd1348, %rd1346, %rd1347;
	xor.b64  	%rd1349, %rd1330, %rd1074;
	xor.b64  	%rd1350, %rd1330, %rd1306;
	and.b64  	%rd1351, %rd1350, %rd1349;
	xor.b64  	%rd1352, %rd1351, %rd1330;
	add.s64 	%rd1353, %rd1342, %rd1352;
	add.s64 	%rd1354, %rd1353, %rd1348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r900,%dummy}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r901}, %rd1343;
	}
	shf.r.wrap.b32 	%r902, %r901, %r900, 14;
	shf.r.wrap.b32 	%r903, %r900, %r901, 14;
	mov.b64 	%rd1355, {%r903, %r902};
	shf.r.wrap.b32 	%r904, %r901, %r900, 18;
	shf.r.wrap.b32 	%r905, %r900, %r901, 18;
	mov.b64 	%rd1356, {%r905, %r904};
	xor.b64  	%rd1357, %rd1356, %rd1355;
	shf.l.wrap.b32 	%r906, %r900, %r901, 23;
	shf.l.wrap.b32 	%r907, %r901, %r900, 23;
	mov.b64 	%rd1358, {%r907, %r906};
	xor.b64  	%rd1359, %rd1357, %rd1358;
	xor.b64  	%rd1360, %rd1319, %rd1295;
	and.b64  	%rd1361, %rd1343, %rd1360;
	xor.b64  	%rd1362, %rd1361, %rd1295;
	add.s64 	%rd1363, %rd1126, %rd1063;
	add.s64 	%rd1364, %rd1363, %rd55;
	add.s64 	%rd1365, %rd1364, %rd1362;
	add.s64 	%rd1366, %rd1365, %rd1359;
	add.s64 	%rd1367, %rd1366, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r908,%dummy}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r909}, %rd1354;
	}
	shf.r.wrap.b32 	%r910, %r909, %r908, 28;
	shf.r.wrap.b32 	%r911, %r908, %r909, 28;
	mov.b64 	%rd1368, {%r911, %r910};
	shf.l.wrap.b32 	%r912, %r908, %r909, 30;
	shf.l.wrap.b32 	%r913, %r909, %r908, 30;
	mov.b64 	%rd1369, {%r913, %r912};
	xor.b64  	%rd1370, %rd1369, %rd1368;
	shf.l.wrap.b32 	%r914, %r908, %r909, 25;
	shf.l.wrap.b32 	%r915, %r909, %r908, 25;
	mov.b64 	%rd1371, {%r915, %r914};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	xor.b64  	%rd1373, %rd1354, %rd1306;
	xor.b64  	%rd1374, %rd1354, %rd1330;
	and.b64  	%rd1375, %rd1374, %rd1373;
	xor.b64  	%rd1376, %rd1375, %rd1354;
	add.s64 	%rd1377, %rd1366, %rd1376;
	add.s64 	%rd1378, %rd1377, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r916,%dummy}, %rd1367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd1367;
	}
	shf.r.wrap.b32 	%r918, %r917, %r916, 14;
	shf.r.wrap.b32 	%r919, %r916, %r917, 14;
	mov.b64 	%rd1379, {%r919, %r918};
	shf.r.wrap.b32 	%r920, %r917, %r916, 18;
	shf.r.wrap.b32 	%r921, %r916, %r917, 18;
	mov.b64 	%rd1380, {%r921, %r920};
	xor.b64  	%rd1381, %rd1380, %rd1379;
	shf.l.wrap.b32 	%r922, %r916, %r917, 23;
	shf.l.wrap.b32 	%r923, %r917, %r916, 23;
	mov.b64 	%rd1382, {%r923, %r922};
	xor.b64  	%rd1383, %rd1381, %rd1382;
	xor.b64  	%rd1384, %rd1343, %rd1319;
	and.b64  	%rd1385, %rd1367, %rd1384;
	xor.b64  	%rd1386, %rd1385, %rd1319;
	add.s64 	%rd1387, %rd1295, %rd1139;
	add.s64 	%rd1388, %rd1387, %rd56;
	add.s64 	%rd1389, %rd1388, %rd1386;
	add.s64 	%rd1390, %rd1389, %rd1383;
	add.s64 	%rd1391, %rd1390, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r924,%dummy}, %rd1378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd1378;
	}
	shf.r.wrap.b32 	%r926, %r925, %r924, 28;
	shf.r.wrap.b32 	%r927, %r924, %r925, 28;
	mov.b64 	%rd1392, {%r927, %r926};
	shf.l.wrap.b32 	%r928, %r924, %r925, 30;
	shf.l.wrap.b32 	%r929, %r925, %r924, 30;
	mov.b64 	%rd1393, {%r929, %r928};
	xor.b64  	%rd1394, %rd1393, %rd1392;
	shf.l.wrap.b32 	%r930, %r924, %r925, 25;
	shf.l.wrap.b32 	%r931, %r925, %r924, 25;
	mov.b64 	%rd1395, {%r931, %r930};
	xor.b64  	%rd1396, %rd1394, %rd1395;
	xor.b64  	%rd1397, %rd1378, %rd1330;
	xor.b64  	%rd1398, %rd1378, %rd1354;
	and.b64  	%rd1399, %rd1398, %rd1397;
	xor.b64  	%rd1400, %rd1399, %rd1378;
	add.s64 	%rd1401, %rd1390, %rd1400;
	add.s64 	%rd1402, %rd1401, %rd1396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r932,%dummy}, %rd1391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r933}, %rd1391;
	}
	shf.r.wrap.b32 	%r934, %r933, %r932, 14;
	shf.r.wrap.b32 	%r935, %r932, %r933, 14;
	mov.b64 	%rd1403, {%r935, %r934};
	shf.r.wrap.b32 	%r936, %r933, %r932, 18;
	shf.r.wrap.b32 	%r937, %r932, %r933, 18;
	mov.b64 	%rd1404, {%r937, %r936};
	xor.b64  	%rd1405, %rd1404, %rd1403;
	shf.l.wrap.b32 	%r938, %r932, %r933, 23;
	shf.l.wrap.b32 	%r939, %r933, %r932, 23;
	mov.b64 	%rd1406, {%r939, %r938};
	xor.b64  	%rd1407, %rd1405, %rd1406;
	xor.b64  	%rd1408, %rd1367, %rd1343;
	and.b64  	%rd1409, %rd1391, %rd1408;
	xor.b64  	%rd1410, %rd1409, %rd1343;
	add.s64 	%rd1411, %rd1319, %rd1152;
	add.s64 	%rd1412, %rd1411, %rd57;
	add.s64 	%rd1413, %rd1412, %rd1410;
	add.s64 	%rd1414, %rd1413, %rd1407;
	add.s64 	%rd1415, %rd1414, %rd1330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r940,%dummy}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r941}, %rd1402;
	}
	shf.r.wrap.b32 	%r942, %r941, %r940, 28;
	shf.r.wrap.b32 	%r943, %r940, %r941, 28;
	mov.b64 	%rd1416, {%r943, %r942};
	shf.l.wrap.b32 	%r944, %r940, %r941, 30;
	shf.l.wrap.b32 	%r945, %r941, %r940, 30;
	mov.b64 	%rd1417, {%r945, %r944};
	xor.b64  	%rd1418, %rd1417, %rd1416;
	shf.l.wrap.b32 	%r946, %r940, %r941, 25;
	shf.l.wrap.b32 	%r947, %r941, %r940, 25;
	mov.b64 	%rd1419, {%r947, %r946};
	xor.b64  	%rd1420, %rd1418, %rd1419;
	xor.b64  	%rd1421, %rd1402, %rd1354;
	xor.b64  	%rd1422, %rd1402, %rd1378;
	and.b64  	%rd1423, %rd1422, %rd1421;
	xor.b64  	%rd1424, %rd1423, %rd1402;
	add.s64 	%rd1425, %rd1414, %rd1424;
	add.s64 	%rd1426, %rd1425, %rd1420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r948,%dummy}, %rd1415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r949}, %rd1415;
	}
	shf.r.wrap.b32 	%r950, %r949, %r948, 14;
	shf.r.wrap.b32 	%r951, %r948, %r949, 14;
	mov.b64 	%rd1427, {%r951, %r950};
	shf.r.wrap.b32 	%r952, %r949, %r948, 18;
	shf.r.wrap.b32 	%r953, %r948, %r949, 18;
	mov.b64 	%rd1428, {%r953, %r952};
	xor.b64  	%rd1429, %rd1428, %rd1427;
	shf.l.wrap.b32 	%r954, %r948, %r949, 23;
	shf.l.wrap.b32 	%r955, %r949, %r948, 23;
	mov.b64 	%rd1430, {%r955, %r954};
	xor.b64  	%rd1431, %rd1429, %rd1430;
	xor.b64  	%rd1432, %rd1391, %rd1367;
	and.b64  	%rd1433, %rd1415, %rd1432;
	xor.b64  	%rd1434, %rd1433, %rd1367;
	add.s64 	%rd1435, %rd1343, %rd1165;
	add.s64 	%rd1436, %rd1435, %rd58;
	add.s64 	%rd1437, %rd1436, %rd1434;
	add.s64 	%rd1438, %rd1437, %rd1431;
	add.s64 	%rd1439, %rd1438, %rd1354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r956,%dummy}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r957}, %rd1426;
	}
	shf.r.wrap.b32 	%r958, %r957, %r956, 28;
	shf.r.wrap.b32 	%r959, %r956, %r957, 28;
	mov.b64 	%rd1440, {%r959, %r958};
	shf.l.wrap.b32 	%r960, %r956, %r957, 30;
	shf.l.wrap.b32 	%r961, %r957, %r956, 30;
	mov.b64 	%rd1441, {%r961, %r960};
	xor.b64  	%rd1442, %rd1441, %rd1440;
	shf.l.wrap.b32 	%r962, %r956, %r957, 25;
	shf.l.wrap.b32 	%r963, %r957, %r956, 25;
	mov.b64 	%rd1443, {%r963, %r962};
	xor.b64  	%rd1444, %rd1442, %rd1443;
	xor.b64  	%rd1445, %rd1426, %rd1378;
	xor.b64  	%rd1446, %rd1426, %rd1402;
	and.b64  	%rd1447, %rd1446, %rd1445;
	xor.b64  	%rd1448, %rd1447, %rd1426;
	add.s64 	%rd1449, %rd1438, %rd1448;
	add.s64 	%rd1450, %rd1449, %rd1444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r964,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r965}, %rd1439;
	}
	shf.r.wrap.b32 	%r966, %r965, %r964, 14;
	shf.r.wrap.b32 	%r967, %r964, %r965, 14;
	mov.b64 	%rd1451, {%r967, %r966};
	shf.r.wrap.b32 	%r968, %r965, %r964, 18;
	shf.r.wrap.b32 	%r969, %r964, %r965, 18;
	mov.b64 	%rd1452, {%r969, %r968};
	xor.b64  	%rd1453, %rd1452, %rd1451;
	shf.l.wrap.b32 	%r970, %r964, %r965, 23;
	shf.l.wrap.b32 	%r971, %r965, %r964, 23;
	mov.b64 	%rd1454, {%r971, %r970};
	xor.b64  	%rd1455, %rd1453, %rd1454;
	xor.b64  	%rd1456, %rd1415, %rd1391;
	and.b64  	%rd1457, %rd1439, %rd1456;
	xor.b64  	%rd1458, %rd1457, %rd1391;
	add.s64 	%rd1459, %rd1367, %rd1178;
	add.s64 	%rd1460, %rd1459, %rd59;
	add.s64 	%rd1461, %rd1460, %rd1458;
	add.s64 	%rd1462, %rd1461, %rd1455;
	add.s64 	%rd1463, %rd1462, %rd1378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd1450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd1450;
	}
	shf.r.wrap.b32 	%r974, %r973, %r972, 28;
	shf.r.wrap.b32 	%r975, %r972, %r973, 28;
	mov.b64 	%rd1464, {%r975, %r974};
	shf.l.wrap.b32 	%r976, %r972, %r973, 30;
	shf.l.wrap.b32 	%r977, %r973, %r972, 30;
	mov.b64 	%rd1465, {%r977, %r976};
	xor.b64  	%rd1466, %rd1465, %rd1464;
	shf.l.wrap.b32 	%r978, %r972, %r973, 25;
	shf.l.wrap.b32 	%r979, %r973, %r972, 25;
	mov.b64 	%rd1467, {%r979, %r978};
	xor.b64  	%rd1468, %rd1466, %rd1467;
	xor.b64  	%rd1469, %rd1450, %rd1402;
	xor.b64  	%rd1470, %rd1450, %rd1426;
	and.b64  	%rd1471, %rd1470, %rd1469;
	xor.b64  	%rd1472, %rd1471, %rd1450;
	add.s64 	%rd1473, %rd1462, %rd1472;
	add.s64 	%rd1474, %rd1473, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r980,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r981}, %rd1463;
	}
	shf.r.wrap.b32 	%r982, %r981, %r980, 14;
	shf.r.wrap.b32 	%r983, %r980, %r981, 14;
	mov.b64 	%rd1475, {%r983, %r982};
	shf.r.wrap.b32 	%r984, %r981, %r980, 18;
	shf.r.wrap.b32 	%r985, %r980, %r981, 18;
	mov.b64 	%rd1476, {%r985, %r984};
	xor.b64  	%rd1477, %rd1476, %rd1475;
	shf.l.wrap.b32 	%r986, %r980, %r981, 23;
	shf.l.wrap.b32 	%r987, %r981, %r980, 23;
	mov.b64 	%rd1478, {%r987, %r986};
	xor.b64  	%rd1479, %rd1477, %rd1478;
	xor.b64  	%rd1480, %rd1439, %rd1415;
	and.b64  	%rd1481, %rd1463, %rd1480;
	xor.b64  	%rd1482, %rd1481, %rd1415;
	add.s64 	%rd1483, %rd1391, %rd1191;
	add.s64 	%rd1484, %rd1483, %rd60;
	add.s64 	%rd1485, %rd1484, %rd1482;
	add.s64 	%rd1486, %rd1485, %rd1479;
	add.s64 	%rd1487, %rd1486, %rd1402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd1474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd1474;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 28;
	shf.r.wrap.b32 	%r991, %r988, %r989, 28;
	mov.b64 	%rd1488, {%r991, %r990};
	shf.l.wrap.b32 	%r992, %r988, %r989, 30;
	shf.l.wrap.b32 	%r993, %r989, %r988, 30;
	mov.b64 	%rd1489, {%r993, %r992};
	xor.b64  	%rd1490, %rd1489, %rd1488;
	shf.l.wrap.b32 	%r994, %r988, %r989, 25;
	shf.l.wrap.b32 	%r995, %r989, %r988, 25;
	mov.b64 	%rd1491, {%r995, %r994};
	xor.b64  	%rd1492, %rd1490, %rd1491;
	xor.b64  	%rd1493, %rd1474, %rd1426;
	xor.b64  	%rd1494, %rd1474, %rd1450;
	and.b64  	%rd1495, %rd1494, %rd1493;
	xor.b64  	%rd1496, %rd1495, %rd1474;
	add.s64 	%rd1497, %rd1486, %rd1496;
	add.s64 	%rd1498, %rd1497, %rd1492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r996,%dummy}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r997}, %rd1487;
	}
	shf.r.wrap.b32 	%r998, %r997, %r996, 14;
	shf.r.wrap.b32 	%r999, %r996, %r997, 14;
	mov.b64 	%rd1499, {%r999, %r998};
	shf.r.wrap.b32 	%r1000, %r997, %r996, 18;
	shf.r.wrap.b32 	%r1001, %r996, %r997, 18;
	mov.b64 	%rd1500, {%r1001, %r1000};
	xor.b64  	%rd1501, %rd1500, %rd1499;
	shf.l.wrap.b32 	%r1002, %r996, %r997, 23;
	shf.l.wrap.b32 	%r1003, %r997, %r996, 23;
	mov.b64 	%rd1502, {%r1003, %r1002};
	xor.b64  	%rd1503, %rd1501, %rd1502;
	xor.b64  	%rd1504, %rd1463, %rd1439;
	and.b64  	%rd1505, %rd1487, %rd1504;
	xor.b64  	%rd1506, %rd1505, %rd1439;
	add.s64 	%rd1507, %rd1415, %rd1204;
	add.s64 	%rd1508, %rd1507, %rd61;
	add.s64 	%rd1509, %rd1508, %rd1506;
	add.s64 	%rd1510, %rd1509, %rd1503;
	add.s64 	%rd1511, %rd1510, %rd1426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1004,%dummy}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd1498;
	}
	shf.r.wrap.b32 	%r1006, %r1005, %r1004, 28;
	shf.r.wrap.b32 	%r1007, %r1004, %r1005, 28;
	mov.b64 	%rd1512, {%r1007, %r1006};
	shf.l.wrap.b32 	%r1008, %r1004, %r1005, 30;
	shf.l.wrap.b32 	%r1009, %r1005, %r1004, 30;
	mov.b64 	%rd1513, {%r1009, %r1008};
	xor.b64  	%rd1514, %rd1513, %rd1512;
	shf.l.wrap.b32 	%r1010, %r1004, %r1005, 25;
	shf.l.wrap.b32 	%r1011, %r1005, %r1004, 25;
	mov.b64 	%rd1515, {%r1011, %r1010};
	xor.b64  	%rd1516, %rd1514, %rd1515;
	xor.b64  	%rd1517, %rd1498, %rd1450;
	xor.b64  	%rd1518, %rd1498, %rd1474;
	and.b64  	%rd1519, %rd1518, %rd1517;
	xor.b64  	%rd1520, %rd1519, %rd1498;
	add.s64 	%rd1521, %rd1510, %rd1520;
	add.s64 	%rd1522, %rd1521, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1012,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1013}, %rd1511;
	}
	shf.r.wrap.b32 	%r1014, %r1013, %r1012, 14;
	shf.r.wrap.b32 	%r1015, %r1012, %r1013, 14;
	mov.b64 	%rd1523, {%r1015, %r1014};
	shf.r.wrap.b32 	%r1016, %r1013, %r1012, 18;
	shf.r.wrap.b32 	%r1017, %r1012, %r1013, 18;
	mov.b64 	%rd1524, {%r1017, %r1016};
	xor.b64  	%rd1525, %rd1524, %rd1523;
	shf.l.wrap.b32 	%r1018, %r1012, %r1013, 23;
	shf.l.wrap.b32 	%r1019, %r1013, %r1012, 23;
	mov.b64 	%rd1526, {%r1019, %r1018};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	xor.b64  	%rd1528, %rd1487, %rd1463;
	and.b64  	%rd1529, %rd1511, %rd1528;
	xor.b64  	%rd1530, %rd1529, %rd1463;
	add.s64 	%rd1531, %rd1439, %rd1217;
	add.s64 	%rd1532, %rd1531, %rd62;
	add.s64 	%rd1533, %rd1532, %rd1530;
	add.s64 	%rd1534, %rd1533, %rd1527;
	add.s64 	%rd1535, %rd1534, %rd1450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1020,%dummy}, %rd1522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1021}, %rd1522;
	}
	shf.r.wrap.b32 	%r1022, %r1021, %r1020, 28;
	shf.r.wrap.b32 	%r1023, %r1020, %r1021, 28;
	mov.b64 	%rd1536, {%r1023, %r1022};
	shf.l.wrap.b32 	%r1024, %r1020, %r1021, 30;
	shf.l.wrap.b32 	%r1025, %r1021, %r1020, 30;
	mov.b64 	%rd1537, {%r1025, %r1024};
	xor.b64  	%rd1538, %rd1537, %rd1536;
	shf.l.wrap.b32 	%r1026, %r1020, %r1021, 25;
	shf.l.wrap.b32 	%r1027, %r1021, %r1020, 25;
	mov.b64 	%rd1539, {%r1027, %r1026};
	xor.b64  	%rd1540, %rd1538, %rd1539;
	xor.b64  	%rd1541, %rd1522, %rd1474;
	xor.b64  	%rd1542, %rd1522, %rd1498;
	and.b64  	%rd1543, %rd1542, %rd1541;
	xor.b64  	%rd1544, %rd1543, %rd1522;
	add.s64 	%rd1545, %rd1534, %rd1544;
	add.s64 	%rd1546, %rd1545, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1028,%dummy}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1029}, %rd1535;
	}
	shf.r.wrap.b32 	%r1030, %r1029, %r1028, 14;
	shf.r.wrap.b32 	%r1031, %r1028, %r1029, 14;
	mov.b64 	%rd1547, {%r1031, %r1030};
	shf.r.wrap.b32 	%r1032, %r1029, %r1028, 18;
	shf.r.wrap.b32 	%r1033, %r1028, %r1029, 18;
	mov.b64 	%rd1548, {%r1033, %r1032};
	xor.b64  	%rd1549, %rd1548, %rd1547;
	shf.l.wrap.b32 	%r1034, %r1028, %r1029, 23;
	shf.l.wrap.b32 	%r1035, %r1029, %r1028, 23;
	mov.b64 	%rd1550, {%r1035, %r1034};
	xor.b64  	%rd1551, %rd1549, %rd1550;
	xor.b64  	%rd1552, %rd1511, %rd1487;
	and.b64  	%rd1553, %rd1535, %rd1552;
	xor.b64  	%rd1554, %rd1553, %rd1487;
	add.s64 	%rd1555, %rd1463, %rd1230;
	add.s64 	%rd1556, %rd1555, %rd63;
	add.s64 	%rd1557, %rd1556, %rd1554;
	add.s64 	%rd1558, %rd1557, %rd1551;
	add.s64 	%rd1559, %rd1558, %rd1474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1036,%dummy}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1037}, %rd1546;
	}
	shf.r.wrap.b32 	%r1038, %r1037, %r1036, 28;
	shf.r.wrap.b32 	%r1039, %r1036, %r1037, 28;
	mov.b64 	%rd1560, {%r1039, %r1038};
	shf.l.wrap.b32 	%r1040, %r1036, %r1037, 30;
	shf.l.wrap.b32 	%r1041, %r1037, %r1036, 30;
	mov.b64 	%rd1561, {%r1041, %r1040};
	xor.b64  	%rd1562, %rd1561, %rd1560;
	shf.l.wrap.b32 	%r1042, %r1036, %r1037, 25;
	shf.l.wrap.b32 	%r1043, %r1037, %r1036, 25;
	mov.b64 	%rd1563, {%r1043, %r1042};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	xor.b64  	%rd1565, %rd1546, %rd1498;
	xor.b64  	%rd1566, %rd1546, %rd1522;
	and.b64  	%rd1567, %rd1566, %rd1565;
	xor.b64  	%rd1568, %rd1567, %rd1546;
	add.s64 	%rd1569, %rd1558, %rd1568;
	add.s64 	%rd1570, %rd1569, %rd1564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1044,%dummy}, %rd1559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1045}, %rd1559;
	}
	shf.r.wrap.b32 	%r1046, %r1045, %r1044, 14;
	shf.r.wrap.b32 	%r1047, %r1044, %r1045, 14;
	mov.b64 	%rd1571, {%r1047, %r1046};
	shf.r.wrap.b32 	%r1048, %r1045, %r1044, 18;
	shf.r.wrap.b32 	%r1049, %r1044, %r1045, 18;
	mov.b64 	%rd1572, {%r1049, %r1048};
	xor.b64  	%rd1573, %rd1572, %rd1571;
	shf.l.wrap.b32 	%r1050, %r1044, %r1045, 23;
	shf.l.wrap.b32 	%r1051, %r1045, %r1044, 23;
	mov.b64 	%rd1574, {%r1051, %r1050};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	xor.b64  	%rd1576, %rd1535, %rd1511;
	and.b64  	%rd1577, %rd1559, %rd1576;
	xor.b64  	%rd1578, %rd1577, %rd1511;
	add.s64 	%rd1579, %rd1487, %rd1243;
	add.s64 	%rd1580, %rd1579, %rd64;
	add.s64 	%rd1581, %rd1580, %rd1578;
	add.s64 	%rd1582, %rd1581, %rd1575;
	add.s64 	%rd1583, %rd1582, %rd1498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1052,%dummy}, %rd1570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1053}, %rd1570;
	}
	shf.r.wrap.b32 	%r1054, %r1053, %r1052, 28;
	shf.r.wrap.b32 	%r1055, %r1052, %r1053, 28;
	mov.b64 	%rd1584, {%r1055, %r1054};
	shf.l.wrap.b32 	%r1056, %r1052, %r1053, 30;
	shf.l.wrap.b32 	%r1057, %r1053, %r1052, 30;
	mov.b64 	%rd1585, {%r1057, %r1056};
	xor.b64  	%rd1586, %rd1585, %rd1584;
	shf.l.wrap.b32 	%r1058, %r1052, %r1053, 25;
	shf.l.wrap.b32 	%r1059, %r1053, %r1052, 25;
	mov.b64 	%rd1587, {%r1059, %r1058};
	xor.b64  	%rd1588, %rd1586, %rd1587;
	xor.b64  	%rd1589, %rd1570, %rd1522;
	xor.b64  	%rd1590, %rd1570, %rd1546;
	and.b64  	%rd1591, %rd1590, %rd1589;
	xor.b64  	%rd1592, %rd1591, %rd1570;
	add.s64 	%rd1593, %rd1582, %rd1592;
	add.s64 	%rd1594, %rd1593, %rd1588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1060,%dummy}, %rd1583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1061}, %rd1583;
	}
	shf.r.wrap.b32 	%r1062, %r1061, %r1060, 14;
	shf.r.wrap.b32 	%r1063, %r1060, %r1061, 14;
	mov.b64 	%rd1595, {%r1063, %r1062};
	shf.r.wrap.b32 	%r1064, %r1061, %r1060, 18;
	shf.r.wrap.b32 	%r1065, %r1060, %r1061, 18;
	mov.b64 	%rd1596, {%r1065, %r1064};
	xor.b64  	%rd1597, %rd1596, %rd1595;
	shf.l.wrap.b32 	%r1066, %r1060, %r1061, 23;
	shf.l.wrap.b32 	%r1067, %r1061, %r1060, 23;
	mov.b64 	%rd1598, {%r1067, %r1066};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	xor.b64  	%rd1600, %rd1559, %rd1535;
	and.b64  	%rd1601, %rd1583, %rd1600;
	xor.b64  	%rd1602, %rd1601, %rd1535;
	add.s64 	%rd1603, %rd1511, %rd1256;
	add.s64 	%rd1604, %rd1603, %rd65;
	add.s64 	%rd1605, %rd1604, %rd1602;
	add.s64 	%rd1606, %rd1605, %rd1599;
	add.s64 	%rd1607, %rd1606, %rd1522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1068,%dummy}, %rd1594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1069}, %rd1594;
	}
	shf.r.wrap.b32 	%r1070, %r1069, %r1068, 28;
	shf.r.wrap.b32 	%r1071, %r1068, %r1069, 28;
	mov.b64 	%rd1608, {%r1071, %r1070};
	shf.l.wrap.b32 	%r1072, %r1068, %r1069, 30;
	shf.l.wrap.b32 	%r1073, %r1069, %r1068, 30;
	mov.b64 	%rd1609, {%r1073, %r1072};
	xor.b64  	%rd1610, %rd1609, %rd1608;
	shf.l.wrap.b32 	%r1074, %r1068, %r1069, 25;
	shf.l.wrap.b32 	%r1075, %r1069, %r1068, 25;
	mov.b64 	%rd1611, {%r1075, %r1074};
	xor.b64  	%rd1612, %rd1610, %rd1611;
	xor.b64  	%rd1613, %rd1594, %rd1546;
	xor.b64  	%rd1614, %rd1594, %rd1570;
	and.b64  	%rd1615, %rd1614, %rd1613;
	xor.b64  	%rd1616, %rd1615, %rd1594;
	add.s64 	%rd1617, %rd1606, %rd1616;
	add.s64 	%rd1618, %rd1617, %rd1612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1076,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd1607;
	}
	shf.r.wrap.b32 	%r1078, %r1077, %r1076, 14;
	shf.r.wrap.b32 	%r1079, %r1076, %r1077, 14;
	mov.b64 	%rd1619, {%r1079, %r1078};
	shf.r.wrap.b32 	%r1080, %r1077, %r1076, 18;
	shf.r.wrap.b32 	%r1081, %r1076, %r1077, 18;
	mov.b64 	%rd1620, {%r1081, %r1080};
	xor.b64  	%rd1621, %rd1620, %rd1619;
	shf.l.wrap.b32 	%r1082, %r1076, %r1077, 23;
	shf.l.wrap.b32 	%r1083, %r1077, %r1076, 23;
	mov.b64 	%rd1622, {%r1083, %r1082};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	xor.b64  	%rd1624, %rd1583, %rd1559;
	and.b64  	%rd1625, %rd1607, %rd1624;
	xor.b64  	%rd1626, %rd1625, %rd1559;
	add.s64 	%rd1627, %rd1535, %rd1269;
	add.s64 	%rd1628, %rd1627, %rd66;
	add.s64 	%rd1629, %rd1628, %rd1626;
	add.s64 	%rd1630, %rd1629, %rd1623;
	add.s64 	%rd1631, %rd1630, %rd1546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1084,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1085}, %rd1618;
	}
	shf.r.wrap.b32 	%r1086, %r1085, %r1084, 28;
	shf.r.wrap.b32 	%r1087, %r1084, %r1085, 28;
	mov.b64 	%rd1632, {%r1087, %r1086};
	shf.l.wrap.b32 	%r1088, %r1084, %r1085, 30;
	shf.l.wrap.b32 	%r1089, %r1085, %r1084, 30;
	mov.b64 	%rd1633, {%r1089, %r1088};
	xor.b64  	%rd1634, %rd1633, %rd1632;
	shf.l.wrap.b32 	%r1090, %r1084, %r1085, 25;
	shf.l.wrap.b32 	%r1091, %r1085, %r1084, 25;
	mov.b64 	%rd1635, {%r1091, %r1090};
	xor.b64  	%rd1636, %rd1634, %rd1635;
	xor.b64  	%rd1637, %rd1618, %rd1570;
	xor.b64  	%rd1638, %rd1618, %rd1594;
	and.b64  	%rd1639, %rd1638, %rd1637;
	xor.b64  	%rd1640, %rd1639, %rd1618;
	add.s64 	%rd1641, %rd1630, %rd1640;
	add.s64 	%rd1642, %rd1641, %rd1636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1092,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd1631;
	}
	shf.r.wrap.b32 	%r1094, %r1093, %r1092, 14;
	shf.r.wrap.b32 	%r1095, %r1092, %r1093, 14;
	mov.b64 	%rd1643, {%r1095, %r1094};
	shf.r.wrap.b32 	%r1096, %r1093, %r1092, 18;
	shf.r.wrap.b32 	%r1097, %r1092, %r1093, 18;
	mov.b64 	%rd1644, {%r1097, %r1096};
	xor.b64  	%rd1645, %rd1644, %rd1643;
	shf.l.wrap.b32 	%r1098, %r1092, %r1093, 23;
	shf.l.wrap.b32 	%r1099, %r1093, %r1092, 23;
	mov.b64 	%rd1646, {%r1099, %r1098};
	xor.b64  	%rd1647, %rd1645, %rd1646;
	xor.b64  	%rd1648, %rd1607, %rd1583;
	and.b64  	%rd1649, %rd1631, %rd1648;
	xor.b64  	%rd1650, %rd1649, %rd1583;
	add.s64 	%rd1651, %rd1559, %rd1282;
	add.s64 	%rd1652, %rd1651, %rd67;
	add.s64 	%rd1653, %rd1652, %rd1650;
	add.s64 	%rd1654, %rd1653, %rd1647;
	add.s64 	%rd1655, %rd1654, %rd1570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1100,%dummy}, %rd1642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1101}, %rd1642;
	}
	shf.r.wrap.b32 	%r1102, %r1101, %r1100, 28;
	shf.r.wrap.b32 	%r1103, %r1100, %r1101, 28;
	mov.b64 	%rd1656, {%r1103, %r1102};
	shf.l.wrap.b32 	%r1104, %r1100, %r1101, 30;
	shf.l.wrap.b32 	%r1105, %r1101, %r1100, 30;
	mov.b64 	%rd1657, {%r1105, %r1104};
	xor.b64  	%rd1658, %rd1657, %rd1656;
	shf.l.wrap.b32 	%r1106, %r1100, %r1101, 25;
	shf.l.wrap.b32 	%r1107, %r1101, %r1100, 25;
	mov.b64 	%rd1659, {%r1107, %r1106};
	xor.b64  	%rd1660, %rd1658, %rd1659;
	xor.b64  	%rd1661, %rd1642, %rd1594;
	xor.b64  	%rd1662, %rd1642, %rd1618;
	and.b64  	%rd1663, %rd1662, %rd1661;
	xor.b64  	%rd1664, %rd1663, %rd1642;
	add.s64 	%rd1665, %rd1654, %rd1664;
	add.s64 	%rd1666, %rd1665, %rd1660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1108,%dummy}, %rd1269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1109}, %rd1269;
	}
	shf.r.wrap.b32 	%r1110, %r1109, %r1108, 19;
	shf.r.wrap.b32 	%r1111, %r1108, %r1109, 19;
	mov.b64 	%rd1667, {%r1111, %r1110};
	shf.l.wrap.b32 	%r1112, %r1108, %r1109, 3;
	shf.l.wrap.b32 	%r1113, %r1109, %r1108, 3;
	mov.b64 	%rd1668, {%r1113, %r1112};
	shr.u64 	%rd1669, %rd1269, 6;
	xor.b64  	%rd1670, %rd1667, %rd1669;
	xor.b64  	%rd1671, %rd1670, %rd1668;
	shf.r.wrap.b32 	%r1114, %r723, %r722, 1;
	shf.r.wrap.b32 	%r1115, %r722, %r723, 1;
	mov.b64 	%rd1672, {%r1115, %r1114};
	shf.r.wrap.b32 	%r1116, %r723, %r722, 8;
	shf.r.wrap.b32 	%r1117, %r722, %r723, 8;
	mov.b64 	%rd1673, {%r1117, %r1116};
	shr.u64 	%rd1674, %rd1100, 7;
	xor.b64  	%rd1675, %rd1672, %rd1674;
	xor.b64  	%rd1676, %rd1675, %rd1673;
	add.s64 	%rd1677, %rd1087, %rd1204;
	add.s64 	%rd1678, %rd1677, %rd1671;
	add.s64 	%rd1679, %rd1678, %rd1676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd1282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1119}, %rd1282;
	}
	shf.r.wrap.b32 	%r1120, %r1119, %r1118, 19;
	shf.r.wrap.b32 	%r1121, %r1118, %r1119, 19;
	mov.b64 	%rd1680, {%r1121, %r1120};
	shf.l.wrap.b32 	%r1122, %r1118, %r1119, 3;
	shf.l.wrap.b32 	%r1123, %r1119, %r1118, 3;
	mov.b64 	%rd1681, {%r1123, %r1122};
	shr.u64 	%rd1682, %rd1282, 6;
	xor.b64  	%rd1683, %rd1680, %rd1682;
	xor.b64  	%rd1684, %rd1683, %rd1681;
	shf.r.wrap.b32 	%r1124, %r733, %r732, 1;
	shf.r.wrap.b32 	%r1125, %r732, %r733, 1;
	mov.b64 	%rd1685, {%r1125, %r1124};
	shf.r.wrap.b32 	%r1126, %r733, %r732, 8;
	shf.r.wrap.b32 	%r1127, %r732, %r733, 8;
	mov.b64 	%rd1686, {%r1127, %r1126};
	shr.u64 	%rd1687, %rd1113, 7;
	xor.b64  	%rd1688, %rd1685, %rd1687;
	xor.b64  	%rd1689, %rd1688, %rd1686;
	add.s64 	%rd1690, %rd1100, %rd1217;
	add.s64 	%rd1691, %rd1690, %rd1684;
	add.s64 	%rd1692, %rd1691, %rd1689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd1679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd1679;
	}
	shf.r.wrap.b32 	%r1130, %r1129, %r1128, 19;
	shf.r.wrap.b32 	%r1131, %r1128, %r1129, 19;
	mov.b64 	%rd1693, {%r1131, %r1130};
	shf.l.wrap.b32 	%r1132, %r1128, %r1129, 3;
	shf.l.wrap.b32 	%r1133, %r1129, %r1128, 3;
	mov.b64 	%rd1694, {%r1133, %r1132};
	shr.u64 	%rd1695, %rd1679, 6;
	xor.b64  	%rd1696, %rd1693, %rd1695;
	xor.b64  	%rd1697, %rd1696, %rd1694;
	shf.r.wrap.b32 	%r1134, %r743, %r742, 1;
	shf.r.wrap.b32 	%r1135, %r742, %r743, 1;
	mov.b64 	%rd1698, {%r1135, %r1134};
	shf.r.wrap.b32 	%r1136, %r743, %r742, 8;
	shf.r.wrap.b32 	%r1137, %r742, %r743, 8;
	mov.b64 	%rd1699, {%r1137, %r1136};
	shr.u64 	%rd1700, %rd1126, 7;
	xor.b64  	%rd1701, %rd1698, %rd1700;
	xor.b64  	%rd1702, %rd1701, %rd1699;
	add.s64 	%rd1703, %rd1113, %rd1230;
	add.s64 	%rd1704, %rd1703, %rd1697;
	add.s64 	%rd1705, %rd1704, %rd1702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd1692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1139}, %rd1692;
	}
	shf.r.wrap.b32 	%r1140, %r1139, %r1138, 19;
	shf.r.wrap.b32 	%r1141, %r1138, %r1139, 19;
	mov.b64 	%rd1706, {%r1141, %r1140};
	shf.l.wrap.b32 	%r1142, %r1138, %r1139, 3;
	shf.l.wrap.b32 	%r1143, %r1139, %r1138, 3;
	mov.b64 	%rd1707, {%r1143, %r1142};
	shr.u64 	%rd1708, %rd1692, 6;
	xor.b64  	%rd1709, %rd1706, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1707;
	shf.r.wrap.b32 	%r1144, %r753, %r752, 1;
	shf.r.wrap.b32 	%r1145, %r752, %r753, 1;
	mov.b64 	%rd1711, {%r1145, %r1144};
	shf.r.wrap.b32 	%r1146, %r753, %r752, 8;
	shf.r.wrap.b32 	%r1147, %r752, %r753, 8;
	mov.b64 	%rd1712, {%r1147, %r1146};
	shr.u64 	%rd1713, %rd1139, 7;
	xor.b64  	%rd1714, %rd1711, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd1712;
	add.s64 	%rd1716, %rd1243, %rd1126;
	add.s64 	%rd1717, %rd1716, %rd1710;
	add.s64 	%rd1718, %rd1717, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1148,%dummy}, %rd1705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd1705;
	}
	shf.r.wrap.b32 	%r1150, %r1149, %r1148, 19;
	shf.r.wrap.b32 	%r1151, %r1148, %r1149, 19;
	mov.b64 	%rd1719, {%r1151, %r1150};
	shf.l.wrap.b32 	%r1152, %r1148, %r1149, 3;
	shf.l.wrap.b32 	%r1153, %r1149, %r1148, 3;
	mov.b64 	%rd1720, {%r1153, %r1152};
	shr.u64 	%rd1721, %rd1705, 6;
	xor.b64  	%rd1722, %rd1719, %rd1721;
	xor.b64  	%rd1723, %rd1722, %rd1720;
	shf.r.wrap.b32 	%r1154, %r763, %r762, 1;
	shf.r.wrap.b32 	%r1155, %r762, %r763, 1;
	mov.b64 	%rd1724, {%r1155, %r1154};
	shf.r.wrap.b32 	%r1156, %r763, %r762, 8;
	shf.r.wrap.b32 	%r1157, %r762, %r763, 8;
	mov.b64 	%rd1725, {%r1157, %r1156};
	shr.u64 	%rd1726, %rd1152, 7;
	xor.b64  	%rd1727, %rd1724, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1725;
	add.s64 	%rd1729, %rd1256, %rd1139;
	add.s64 	%rd1730, %rd1729, %rd1723;
	add.s64 	%rd1731, %rd1730, %rd1728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1158,%dummy}, %rd1718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1159}, %rd1718;
	}
	shf.r.wrap.b32 	%r1160, %r1159, %r1158, 19;
	shf.r.wrap.b32 	%r1161, %r1158, %r1159, 19;
	mov.b64 	%rd1732, {%r1161, %r1160};
	shf.l.wrap.b32 	%r1162, %r1158, %r1159, 3;
	shf.l.wrap.b32 	%r1163, %r1159, %r1158, 3;
	mov.b64 	%rd1733, {%r1163, %r1162};
	shr.u64 	%rd1734, %rd1718, 6;
	xor.b64  	%rd1735, %rd1732, %rd1734;
	xor.b64  	%rd1736, %rd1735, %rd1733;
	shf.r.wrap.b32 	%r1164, %r773, %r772, 1;
	shf.r.wrap.b32 	%r1165, %r772, %r773, 1;
	mov.b64 	%rd1737, {%r1165, %r1164};
	shf.r.wrap.b32 	%r1166, %r773, %r772, 8;
	shf.r.wrap.b32 	%r1167, %r772, %r773, 8;
	mov.b64 	%rd1738, {%r1167, %r1166};
	shr.u64 	%rd1739, %rd1165, 7;
	xor.b64  	%rd1740, %rd1737, %rd1739;
	xor.b64  	%rd1741, %rd1740, %rd1738;
	add.s64 	%rd1742, %rd1269, %rd1152;
	add.s64 	%rd1743, %rd1742, %rd1736;
	add.s64 	%rd1744, %rd1743, %rd1741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1168,%dummy}, %rd1731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1169}, %rd1731;
	}
	shf.r.wrap.b32 	%r1170, %r1169, %r1168, 19;
	shf.r.wrap.b32 	%r1171, %r1168, %r1169, 19;
	mov.b64 	%rd1745, {%r1171, %r1170};
	shf.l.wrap.b32 	%r1172, %r1168, %r1169, 3;
	shf.l.wrap.b32 	%r1173, %r1169, %r1168, 3;
	mov.b64 	%rd1746, {%r1173, %r1172};
	shr.u64 	%rd1747, %rd1731, 6;
	xor.b64  	%rd1748, %rd1745, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1746;
	shf.r.wrap.b32 	%r1174, %r783, %r782, 1;
	shf.r.wrap.b32 	%r1175, %r782, %r783, 1;
	mov.b64 	%rd1750, {%r1175, %r1174};
	shf.r.wrap.b32 	%r1176, %r783, %r782, 8;
	shf.r.wrap.b32 	%r1177, %r782, %r783, 8;
	mov.b64 	%rd1751, {%r1177, %r1176};
	shr.u64 	%rd1752, %rd1178, 7;
	xor.b64  	%rd1753, %rd1750, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1751;
	add.s64 	%rd1755, %rd1282, %rd1165;
	add.s64 	%rd1756, %rd1755, %rd1749;
	add.s64 	%rd1757, %rd1756, %rd1754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd1744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1179}, %rd1744;
	}
	shf.r.wrap.b32 	%r1180, %r1179, %r1178, 19;
	shf.r.wrap.b32 	%r1181, %r1178, %r1179, 19;
	mov.b64 	%rd1758, {%r1181, %r1180};
	shf.l.wrap.b32 	%r1182, %r1178, %r1179, 3;
	shf.l.wrap.b32 	%r1183, %r1179, %r1178, 3;
	mov.b64 	%rd1759, {%r1183, %r1182};
	shr.u64 	%rd1760, %rd1744, 6;
	xor.b64  	%rd1761, %rd1758, %rd1760;
	xor.b64  	%rd1762, %rd1761, %rd1759;
	shf.r.wrap.b32 	%r1184, %r793, %r792, 1;
	shf.r.wrap.b32 	%r1185, %r792, %r793, 1;
	mov.b64 	%rd1763, {%r1185, %r1184};
	shf.r.wrap.b32 	%r1186, %r793, %r792, 8;
	shf.r.wrap.b32 	%r1187, %r792, %r793, 8;
	mov.b64 	%rd1764, {%r1187, %r1186};
	shr.u64 	%rd1765, %rd1191, 7;
	xor.b64  	%rd1766, %rd1763, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1764;
	add.s64 	%rd1768, %rd1679, %rd1178;
	add.s64 	%rd1769, %rd1768, %rd1762;
	add.s64 	%rd1770, %rd1769, %rd1767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1188,%dummy}, %rd1757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1189}, %rd1757;
	}
	shf.r.wrap.b32 	%r1190, %r1189, %r1188, 19;
	shf.r.wrap.b32 	%r1191, %r1188, %r1189, 19;
	mov.b64 	%rd1771, {%r1191, %r1190};
	shf.l.wrap.b32 	%r1192, %r1188, %r1189, 3;
	shf.l.wrap.b32 	%r1193, %r1189, %r1188, 3;
	mov.b64 	%rd1772, {%r1193, %r1192};
	shr.u64 	%rd1773, %rd1757, 6;
	xor.b64  	%rd1774, %rd1771, %rd1773;
	xor.b64  	%rd1775, %rd1774, %rd1772;
	shf.r.wrap.b32 	%r1194, %r803, %r802, 1;
	shf.r.wrap.b32 	%r1195, %r802, %r803, 1;
	mov.b64 	%rd1776, {%r1195, %r1194};
	shf.r.wrap.b32 	%r1196, %r803, %r802, 8;
	shf.r.wrap.b32 	%r1197, %r802, %r803, 8;
	mov.b64 	%rd1777, {%r1197, %r1196};
	shr.u64 	%rd1778, %rd1204, 7;
	xor.b64  	%rd1779, %rd1776, %rd1778;
	xor.b64  	%rd1780, %rd1779, %rd1777;
	add.s64 	%rd1781, %rd1692, %rd1191;
	add.s64 	%rd1782, %rd1781, %rd1775;
	add.s64 	%rd1783, %rd1782, %rd1780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1198,%dummy}, %rd1770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1199}, %rd1770;
	}
	shf.r.wrap.b32 	%r1200, %r1199, %r1198, 19;
	shf.r.wrap.b32 	%r1201, %r1198, %r1199, 19;
	mov.b64 	%rd1784, {%r1201, %r1200};
	shf.l.wrap.b32 	%r1202, %r1198, %r1199, 3;
	shf.l.wrap.b32 	%r1203, %r1199, %r1198, 3;
	mov.b64 	%rd1785, {%r1203, %r1202};
	shr.u64 	%rd1786, %rd1770, 6;
	xor.b64  	%rd1787, %rd1784, %rd1786;
	xor.b64  	%rd1788, %rd1787, %rd1785;
	shf.r.wrap.b32 	%r1204, %r813, %r812, 1;
	shf.r.wrap.b32 	%r1205, %r812, %r813, 1;
	mov.b64 	%rd1789, {%r1205, %r1204};
	shf.r.wrap.b32 	%r1206, %r813, %r812, 8;
	shf.r.wrap.b32 	%r1207, %r812, %r813, 8;
	mov.b64 	%rd1790, {%r1207, %r1206};
	shr.u64 	%rd1791, %rd1217, 7;
	xor.b64  	%rd1792, %rd1789, %rd1791;
	xor.b64  	%rd1793, %rd1792, %rd1790;
	add.s64 	%rd1794, %rd1705, %rd1204;
	add.s64 	%rd1795, %rd1794, %rd1788;
	add.s64 	%rd1796, %rd1795, %rd1793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1208,%dummy}, %rd1783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1209}, %rd1783;
	}
	shf.r.wrap.b32 	%r1210, %r1209, %r1208, 19;
	shf.r.wrap.b32 	%r1211, %r1208, %r1209, 19;
	mov.b64 	%rd1797, {%r1211, %r1210};
	shf.l.wrap.b32 	%r1212, %r1208, %r1209, 3;
	shf.l.wrap.b32 	%r1213, %r1209, %r1208, 3;
	mov.b64 	%rd1798, {%r1213, %r1212};
	shr.u64 	%rd1799, %rd1783, 6;
	xor.b64  	%rd1800, %rd1797, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd1798;
	shf.r.wrap.b32 	%r1214, %r823, %r822, 1;
	shf.r.wrap.b32 	%r1215, %r822, %r823, 1;
	mov.b64 	%rd1802, {%r1215, %r1214};
	shf.r.wrap.b32 	%r1216, %r823, %r822, 8;
	shf.r.wrap.b32 	%r1217, %r822, %r823, 8;
	mov.b64 	%rd1803, {%r1217, %r1216};
	shr.u64 	%rd1804, %rd1230, 7;
	xor.b64  	%rd1805, %rd1802, %rd1804;
	xor.b64  	%rd1806, %rd1805, %rd1803;
	add.s64 	%rd1807, %rd1718, %rd1217;
	add.s64 	%rd1808, %rd1807, %rd1801;
	add.s64 	%rd1809, %rd1808, %rd1806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1218,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1219}, %rd1796;
	}
	shf.r.wrap.b32 	%r1220, %r1219, %r1218, 19;
	shf.r.wrap.b32 	%r1221, %r1218, %r1219, 19;
	mov.b64 	%rd1810, {%r1221, %r1220};
	shf.l.wrap.b32 	%r1222, %r1218, %r1219, 3;
	shf.l.wrap.b32 	%r1223, %r1219, %r1218, 3;
	mov.b64 	%rd1811, {%r1223, %r1222};
	shr.u64 	%rd1812, %rd1796, 6;
	xor.b64  	%rd1813, %rd1810, %rd1812;
	xor.b64  	%rd1814, %rd1813, %rd1811;
	shf.r.wrap.b32 	%r1224, %r833, %r832, 1;
	shf.r.wrap.b32 	%r1225, %r832, %r833, 1;
	mov.b64 	%rd1815, {%r1225, %r1224};
	shf.r.wrap.b32 	%r1226, %r833, %r832, 8;
	shf.r.wrap.b32 	%r1227, %r832, %r833, 8;
	mov.b64 	%rd1816, {%r1227, %r1226};
	shr.u64 	%rd1817, %rd1243, 7;
	xor.b64  	%rd1818, %rd1815, %rd1817;
	xor.b64  	%rd1819, %rd1818, %rd1816;
	add.s64 	%rd1820, %rd1731, %rd1230;
	add.s64 	%rd1821, %rd1820, %rd1814;
	add.s64 	%rd1822, %rd1821, %rd1819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1228,%dummy}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1229}, %rd1809;
	}
	shf.r.wrap.b32 	%r1230, %r1229, %r1228, 19;
	shf.r.wrap.b32 	%r1231, %r1228, %r1229, 19;
	mov.b64 	%rd1823, {%r1231, %r1230};
	shf.l.wrap.b32 	%r1232, %r1228, %r1229, 3;
	shf.l.wrap.b32 	%r1233, %r1229, %r1228, 3;
	mov.b64 	%rd1824, {%r1233, %r1232};
	shr.u64 	%rd1825, %rd1809, 6;
	xor.b64  	%rd1826, %rd1823, %rd1825;
	xor.b64  	%rd1827, %rd1826, %rd1824;
	shf.r.wrap.b32 	%r1234, %r843, %r842, 1;
	shf.r.wrap.b32 	%r1235, %r842, %r843, 1;
	mov.b64 	%rd1828, {%r1235, %r1234};
	shf.r.wrap.b32 	%r1236, %r843, %r842, 8;
	shf.r.wrap.b32 	%r1237, %r842, %r843, 8;
	mov.b64 	%rd1829, {%r1237, %r1236};
	shr.u64 	%rd1830, %rd1256, 7;
	xor.b64  	%rd1831, %rd1828, %rd1830;
	xor.b64  	%rd1832, %rd1831, %rd1829;
	add.s64 	%rd1833, %rd1744, %rd1243;
	add.s64 	%rd1834, %rd1833, %rd1827;
	add.s64 	%rd1835, %rd1834, %rd1832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1238,%dummy}, %rd1822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1239}, %rd1822;
	}
	shf.r.wrap.b32 	%r1240, %r1239, %r1238, 19;
	shf.r.wrap.b32 	%r1241, %r1238, %r1239, 19;
	mov.b64 	%rd1836, {%r1241, %r1240};
	shf.l.wrap.b32 	%r1242, %r1238, %r1239, 3;
	shf.l.wrap.b32 	%r1243, %r1239, %r1238, 3;
	mov.b64 	%rd1837, {%r1243, %r1242};
	shr.u64 	%rd1838, %rd1822, 6;
	xor.b64  	%rd1839, %rd1836, %rd1838;
	xor.b64  	%rd1840, %rd1839, %rd1837;
	shf.r.wrap.b32 	%r1244, %r1109, %r1108, 1;
	shf.r.wrap.b32 	%r1245, %r1108, %r1109, 1;
	mov.b64 	%rd1841, {%r1245, %r1244};
	shf.r.wrap.b32 	%r1246, %r1109, %r1108, 8;
	shf.r.wrap.b32 	%r1247, %r1108, %r1109, 8;
	mov.b64 	%rd1842, {%r1247, %r1246};
	shr.u64 	%rd1843, %rd1269, 7;
	xor.b64  	%rd1844, %rd1841, %rd1843;
	xor.b64  	%rd1845, %rd1844, %rd1842;
	add.s64 	%rd1846, %rd1757, %rd1256;
	add.s64 	%rd1847, %rd1846, %rd1840;
	add.s64 	%rd1848, %rd1847, %rd1845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd1835;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 19;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 19;
	mov.b64 	%rd1849, {%r1251, %r1250};
	shf.l.wrap.b32 	%r1252, %r1248, %r1249, 3;
	shf.l.wrap.b32 	%r1253, %r1249, %r1248, 3;
	mov.b64 	%rd1850, {%r1253, %r1252};
	shr.u64 	%rd1851, %rd1835, 6;
	xor.b64  	%rd1852, %rd1849, %rd1851;
	xor.b64  	%rd1853, %rd1852, %rd1850;
	shf.r.wrap.b32 	%r1254, %r1119, %r1118, 1;
	shf.r.wrap.b32 	%r1255, %r1118, %r1119, 1;
	mov.b64 	%rd1854, {%r1255, %r1254};
	shf.r.wrap.b32 	%r1256, %r1119, %r1118, 8;
	shf.r.wrap.b32 	%r1257, %r1118, %r1119, 8;
	mov.b64 	%rd1855, {%r1257, %r1256};
	shr.u64 	%rd1856, %rd1282, 7;
	xor.b64  	%rd1857, %rd1854, %rd1856;
	xor.b64  	%rd1858, %rd1857, %rd1855;
	add.s64 	%rd1859, %rd1770, %rd1269;
	add.s64 	%rd1860, %rd1859, %rd1853;
	add.s64 	%rd1861, %rd1860, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1258,%dummy}, %rd1848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1259}, %rd1848;
	}
	shf.r.wrap.b32 	%r1260, %r1259, %r1258, 19;
	shf.r.wrap.b32 	%r1261, %r1258, %r1259, 19;
	mov.b64 	%rd1862, {%r1261, %r1260};
	shf.l.wrap.b32 	%r1262, %r1258, %r1259, 3;
	shf.l.wrap.b32 	%r1263, %r1259, %r1258, 3;
	mov.b64 	%rd1863, {%r1263, %r1262};
	shr.u64 	%rd1864, %rd1848, 6;
	xor.b64  	%rd1865, %rd1862, %rd1864;
	xor.b64  	%rd1866, %rd1865, %rd1863;
	shf.r.wrap.b32 	%r1264, %r1129, %r1128, 1;
	shf.r.wrap.b32 	%r1265, %r1128, %r1129, 1;
	mov.b64 	%rd1867, {%r1265, %r1264};
	shf.r.wrap.b32 	%r1266, %r1129, %r1128, 8;
	shf.r.wrap.b32 	%r1267, %r1128, %r1129, 8;
	mov.b64 	%rd1868, {%r1267, %r1266};
	shr.u64 	%rd1869, %rd1679, 7;
	xor.b64  	%rd1870, %rd1867, %rd1869;
	xor.b64  	%rd1871, %rd1870, %rd1868;
	add.s64 	%rd1872, %rd1783, %rd1282;
	add.s64 	%rd1873, %rd1872, %rd1866;
	add.s64 	%rd1874, %rd1873, %rd1871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1268,%dummy}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1269}, %rd1655;
	}
	shf.r.wrap.b32 	%r1270, %r1269, %r1268, 14;
	shf.r.wrap.b32 	%r1271, %r1268, %r1269, 14;
	mov.b64 	%rd1875, {%r1271, %r1270};
	shf.r.wrap.b32 	%r1272, %r1269, %r1268, 18;
	shf.r.wrap.b32 	%r1273, %r1268, %r1269, 18;
	mov.b64 	%rd1876, {%r1273, %r1272};
	xor.b64  	%rd1877, %rd1876, %rd1875;
	shf.l.wrap.b32 	%r1274, %r1268, %r1269, 23;
	shf.l.wrap.b32 	%r1275, %r1269, %r1268, 23;
	mov.b64 	%rd1878, {%r1275, %r1274};
	xor.b64  	%rd1879, %rd1877, %rd1878;
	xor.b64  	%rd1880, %rd1631, %rd1607;
	and.b64  	%rd1881, %rd1880, %rd1655;
	xor.b64  	%rd1882, %rd1881, %rd1607;
	add.s64 	%rd1883, %rd1882, %rd1583;
	add.s64 	%rd1884, %rd1883, %rd1679;
	add.s64 	%rd1885, %rd1884, %rd68;
	add.s64 	%rd1886, %rd1885, %rd1879;
	add.s64 	%rd1887, %rd1886, %rd1594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1276,%dummy}, %rd1666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1277}, %rd1666;
	}
	shf.r.wrap.b32 	%r1278, %r1277, %r1276, 28;
	shf.r.wrap.b32 	%r1279, %r1276, %r1277, 28;
	mov.b64 	%rd1888, {%r1279, %r1278};
	shf.l.wrap.b32 	%r1280, %r1276, %r1277, 30;
	shf.l.wrap.b32 	%r1281, %r1277, %r1276, 30;
	mov.b64 	%rd1889, {%r1281, %r1280};
	xor.b64  	%rd1890, %rd1889, %rd1888;
	shf.l.wrap.b32 	%r1282, %r1276, %r1277, 25;
	shf.l.wrap.b32 	%r1283, %r1277, %r1276, 25;
	mov.b64 	%rd1891, {%r1283, %r1282};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	xor.b64  	%rd1893, %rd1666, %rd1618;
	xor.b64  	%rd1894, %rd1666, %rd1642;
	and.b64  	%rd1895, %rd1894, %rd1893;
	xor.b64  	%rd1896, %rd1895, %rd1666;
	add.s64 	%rd1897, %rd1886, %rd1896;
	add.s64 	%rd1898, %rd1897, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1284,%dummy}, %rd1887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1285}, %rd1887;
	}
	shf.r.wrap.b32 	%r1286, %r1285, %r1284, 14;
	shf.r.wrap.b32 	%r1287, %r1284, %r1285, 14;
	mov.b64 	%rd1899, {%r1287, %r1286};
	shf.r.wrap.b32 	%r1288, %r1285, %r1284, 18;
	shf.r.wrap.b32 	%r1289, %r1284, %r1285, 18;
	mov.b64 	%rd1900, {%r1289, %r1288};
	xor.b64  	%rd1901, %rd1900, %rd1899;
	shf.l.wrap.b32 	%r1290, %r1284, %r1285, 23;
	shf.l.wrap.b32 	%r1291, %r1285, %r1284, 23;
	mov.b64 	%rd1902, {%r1291, %r1290};
	xor.b64  	%rd1903, %rd1901, %rd1902;
	xor.b64  	%rd1904, %rd1655, %rd1631;
	and.b64  	%rd1905, %rd1887, %rd1904;
	xor.b64  	%rd1906, %rd1905, %rd1631;
	add.s64 	%rd1907, %rd1692, %rd1607;
	add.s64 	%rd1908, %rd1907, %rd69;
	add.s64 	%rd1909, %rd1908, %rd1906;
	add.s64 	%rd1910, %rd1909, %rd1903;
	add.s64 	%rd1911, %rd1910, %rd1618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd1898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1898;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 28;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 28;
	mov.b64 	%rd1912, {%r1295, %r1294};
	shf.l.wrap.b32 	%r1296, %r1292, %r1293, 30;
	shf.l.wrap.b32 	%r1297, %r1293, %r1292, 30;
	mov.b64 	%rd1913, {%r1297, %r1296};
	xor.b64  	%rd1914, %rd1913, %rd1912;
	shf.l.wrap.b32 	%r1298, %r1292, %r1293, 25;
	shf.l.wrap.b32 	%r1299, %r1293, %r1292, 25;
	mov.b64 	%rd1915, {%r1299, %r1298};
	xor.b64  	%rd1916, %rd1914, %rd1915;
	xor.b64  	%rd1917, %rd1898, %rd1642;
	xor.b64  	%rd1918, %rd1898, %rd1666;
	and.b64  	%rd1919, %rd1918, %rd1917;
	xor.b64  	%rd1920, %rd1919, %rd1898;
	add.s64 	%rd1921, %rd1910, %rd1920;
	add.s64 	%rd1922, %rd1921, %rd1916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd1911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd1911;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 14;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 14;
	mov.b64 	%rd1923, {%r1303, %r1302};
	shf.r.wrap.b32 	%r1304, %r1301, %r1300, 18;
	shf.r.wrap.b32 	%r1305, %r1300, %r1301, 18;
	mov.b64 	%rd1924, {%r1305, %r1304};
	xor.b64  	%rd1925, %rd1924, %rd1923;
	shf.l.wrap.b32 	%r1306, %r1300, %r1301, 23;
	shf.l.wrap.b32 	%r1307, %r1301, %r1300, 23;
	mov.b64 	%rd1926, {%r1307, %r1306};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	xor.b64  	%rd1928, %rd1887, %rd1655;
	and.b64  	%rd1929, %rd1911, %rd1928;
	xor.b64  	%rd1930, %rd1929, %rd1655;
	add.s64 	%rd1931, %rd1705, %rd1631;
	add.s64 	%rd1932, %rd1931, %rd70;
	add.s64 	%rd1933, %rd1932, %rd1930;
	add.s64 	%rd1934, %rd1933, %rd1927;
	add.s64 	%rd1935, %rd1934, %rd1642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1308,%dummy}, %rd1922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd1922;
	}
	shf.r.wrap.b32 	%r1310, %r1309, %r1308, 28;
	shf.r.wrap.b32 	%r1311, %r1308, %r1309, 28;
	mov.b64 	%rd1936, {%r1311, %r1310};
	shf.l.wrap.b32 	%r1312, %r1308, %r1309, 30;
	shf.l.wrap.b32 	%r1313, %r1309, %r1308, 30;
	mov.b64 	%rd1937, {%r1313, %r1312};
	xor.b64  	%rd1938, %rd1937, %rd1936;
	shf.l.wrap.b32 	%r1314, %r1308, %r1309, 25;
	shf.l.wrap.b32 	%r1315, %r1309, %r1308, 25;
	mov.b64 	%rd1939, {%r1315, %r1314};
	xor.b64  	%rd1940, %rd1938, %rd1939;
	xor.b64  	%rd1941, %rd1922, %rd1666;
	xor.b64  	%rd1942, %rd1922, %rd1898;
	and.b64  	%rd1943, %rd1942, %rd1941;
	xor.b64  	%rd1944, %rd1943, %rd1922;
	add.s64 	%rd1945, %rd1934, %rd1944;
	add.s64 	%rd1946, %rd1945, %rd1940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1316,%dummy}, %rd1935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1317}, %rd1935;
	}
	shf.r.wrap.b32 	%r1318, %r1317, %r1316, 14;
	shf.r.wrap.b32 	%r1319, %r1316, %r1317, 14;
	mov.b64 	%rd1947, {%r1319, %r1318};
	shf.r.wrap.b32 	%r1320, %r1317, %r1316, 18;
	shf.r.wrap.b32 	%r1321, %r1316, %r1317, 18;
	mov.b64 	%rd1948, {%r1321, %r1320};
	xor.b64  	%rd1949, %rd1948, %rd1947;
	shf.l.wrap.b32 	%r1322, %r1316, %r1317, 23;
	shf.l.wrap.b32 	%r1323, %r1317, %r1316, 23;
	mov.b64 	%rd1950, {%r1323, %r1322};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	xor.b64  	%rd1952, %rd1911, %rd1887;
	and.b64  	%rd1953, %rd1935, %rd1952;
	xor.b64  	%rd1954, %rd1953, %rd1887;
	add.s64 	%rd1955, %rd1718, %rd1655;
	add.s64 	%rd1956, %rd1955, %rd71;
	add.s64 	%rd1957, %rd1956, %rd1954;
	add.s64 	%rd1958, %rd1957, %rd1951;
	add.s64 	%rd1959, %rd1958, %rd1666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1324,%dummy}, %rd1946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1325}, %rd1946;
	}
	shf.r.wrap.b32 	%r1326, %r1325, %r1324, 28;
	shf.r.wrap.b32 	%r1327, %r1324, %r1325, 28;
	mov.b64 	%rd1960, {%r1327, %r1326};
	shf.l.wrap.b32 	%r1328, %r1324, %r1325, 30;
	shf.l.wrap.b32 	%r1329, %r1325, %r1324, 30;
	mov.b64 	%rd1961, {%r1329, %r1328};
	xor.b64  	%rd1962, %rd1961, %rd1960;
	shf.l.wrap.b32 	%r1330, %r1324, %r1325, 25;
	shf.l.wrap.b32 	%r1331, %r1325, %r1324, 25;
	mov.b64 	%rd1963, {%r1331, %r1330};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	xor.b64  	%rd1965, %rd1946, %rd1898;
	xor.b64  	%rd1966, %rd1946, %rd1922;
	and.b64  	%rd1967, %rd1966, %rd1965;
	xor.b64  	%rd1968, %rd1967, %rd1946;
	add.s64 	%rd1969, %rd1958, %rd1968;
	add.s64 	%rd1970, %rd1969, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1332,%dummy}, %rd1959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1333}, %rd1959;
	}
	shf.r.wrap.b32 	%r1334, %r1333, %r1332, 14;
	shf.r.wrap.b32 	%r1335, %r1332, %r1333, 14;
	mov.b64 	%rd1971, {%r1335, %r1334};
	shf.r.wrap.b32 	%r1336, %r1333, %r1332, 18;
	shf.r.wrap.b32 	%r1337, %r1332, %r1333, 18;
	mov.b64 	%rd1972, {%r1337, %r1336};
	xor.b64  	%rd1973, %rd1972, %rd1971;
	shf.l.wrap.b32 	%r1338, %r1332, %r1333, 23;
	shf.l.wrap.b32 	%r1339, %r1333, %r1332, 23;
	mov.b64 	%rd1974, {%r1339, %r1338};
	xor.b64  	%rd1975, %rd1973, %rd1974;
	xor.b64  	%rd1976, %rd1935, %rd1911;
	and.b64  	%rd1977, %rd1959, %rd1976;
	xor.b64  	%rd1978, %rd1977, %rd1911;
	add.s64 	%rd1979, %rd1887, %rd1731;
	add.s64 	%rd1980, %rd1979, %rd72;
	add.s64 	%rd1981, %rd1980, %rd1978;
	add.s64 	%rd1982, %rd1981, %rd1975;
	add.s64 	%rd1983, %rd1982, %rd1898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1340,%dummy}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1341}, %rd1970;
	}
	shf.r.wrap.b32 	%r1342, %r1341, %r1340, 28;
	shf.r.wrap.b32 	%r1343, %r1340, %r1341, 28;
	mov.b64 	%rd1984, {%r1343, %r1342};
	shf.l.wrap.b32 	%r1344, %r1340, %r1341, 30;
	shf.l.wrap.b32 	%r1345, %r1341, %r1340, 30;
	mov.b64 	%rd1985, {%r1345, %r1344};
	xor.b64  	%rd1986, %rd1985, %rd1984;
	shf.l.wrap.b32 	%r1346, %r1340, %r1341, 25;
	shf.l.wrap.b32 	%r1347, %r1341, %r1340, 25;
	mov.b64 	%rd1987, {%r1347, %r1346};
	xor.b64  	%rd1988, %rd1986, %rd1987;
	xor.b64  	%rd1989, %rd1970, %rd1922;
	xor.b64  	%rd1990, %rd1970, %rd1946;
	and.b64  	%rd1991, %rd1990, %rd1989;
	xor.b64  	%rd1992, %rd1991, %rd1970;
	add.s64 	%rd1993, %rd1982, %rd1992;
	add.s64 	%rd1994, %rd1993, %rd1988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1348,%dummy}, %rd1983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1349}, %rd1983;
	}
	shf.r.wrap.b32 	%r1350, %r1349, %r1348, 14;
	shf.r.wrap.b32 	%r1351, %r1348, %r1349, 14;
	mov.b64 	%rd1995, {%r1351, %r1350};
	shf.r.wrap.b32 	%r1352, %r1349, %r1348, 18;
	shf.r.wrap.b32 	%r1353, %r1348, %r1349, 18;
	mov.b64 	%rd1996, {%r1353, %r1352};
	xor.b64  	%rd1997, %rd1996, %rd1995;
	shf.l.wrap.b32 	%r1354, %r1348, %r1349, 23;
	shf.l.wrap.b32 	%r1355, %r1349, %r1348, 23;
	mov.b64 	%rd1998, {%r1355, %r1354};
	xor.b64  	%rd1999, %rd1997, %rd1998;
	xor.b64  	%rd2000, %rd1959, %rd1935;
	and.b64  	%rd2001, %rd1983, %rd2000;
	xor.b64  	%rd2002, %rd2001, %rd1935;
	add.s64 	%rd2003, %rd1911, %rd1744;
	add.s64 	%rd2004, %rd2003, %rd73;
	add.s64 	%rd2005, %rd2004, %rd2002;
	add.s64 	%rd2006, %rd2005, %rd1999;
	add.s64 	%rd2007, %rd2006, %rd1922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1356,%dummy}, %rd1994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1357}, %rd1994;
	}
	shf.r.wrap.b32 	%r1358, %r1357, %r1356, 28;
	shf.r.wrap.b32 	%r1359, %r1356, %r1357, 28;
	mov.b64 	%rd2008, {%r1359, %r1358};
	shf.l.wrap.b32 	%r1360, %r1356, %r1357, 30;
	shf.l.wrap.b32 	%r1361, %r1357, %r1356, 30;
	mov.b64 	%rd2009, {%r1361, %r1360};
	xor.b64  	%rd2010, %rd2009, %rd2008;
	shf.l.wrap.b32 	%r1362, %r1356, %r1357, 25;
	shf.l.wrap.b32 	%r1363, %r1357, %r1356, 25;
	mov.b64 	%rd2011, {%r1363, %r1362};
	xor.b64  	%rd2012, %rd2010, %rd2011;
	xor.b64  	%rd2013, %rd1994, %rd1946;
	xor.b64  	%rd2014, %rd1994, %rd1970;
	and.b64  	%rd2015, %rd2014, %rd2013;
	xor.b64  	%rd2016, %rd2015, %rd1994;
	add.s64 	%rd2017, %rd2006, %rd2016;
	add.s64 	%rd2018, %rd2017, %rd2012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1364,%dummy}, %rd2007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1365}, %rd2007;
	}
	shf.r.wrap.b32 	%r1366, %r1365, %r1364, 14;
	shf.r.wrap.b32 	%r1367, %r1364, %r1365, 14;
	mov.b64 	%rd2019, {%r1367, %r1366};
	shf.r.wrap.b32 	%r1368, %r1365, %r1364, 18;
	shf.r.wrap.b32 	%r1369, %r1364, %r1365, 18;
	mov.b64 	%rd2020, {%r1369, %r1368};
	xor.b64  	%rd2021, %rd2020, %rd2019;
	shf.l.wrap.b32 	%r1370, %r1364, %r1365, 23;
	shf.l.wrap.b32 	%r1371, %r1365, %r1364, 23;
	mov.b64 	%rd2022, {%r1371, %r1370};
	xor.b64  	%rd2023, %rd2021, %rd2022;
	xor.b64  	%rd2024, %rd1983, %rd1959;
	and.b64  	%rd2025, %rd2007, %rd2024;
	xor.b64  	%rd2026, %rd2025, %rd1959;
	add.s64 	%rd2027, %rd1935, %rd1757;
	add.s64 	%rd2028, %rd2027, %rd74;
	add.s64 	%rd2029, %rd2028, %rd2026;
	add.s64 	%rd2030, %rd2029, %rd2023;
	add.s64 	%rd2031, %rd2030, %rd1946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1372,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1373}, %rd2018;
	}
	shf.r.wrap.b32 	%r1374, %r1373, %r1372, 28;
	shf.r.wrap.b32 	%r1375, %r1372, %r1373, 28;
	mov.b64 	%rd2032, {%r1375, %r1374};
	shf.l.wrap.b32 	%r1376, %r1372, %r1373, 30;
	shf.l.wrap.b32 	%r1377, %r1373, %r1372, 30;
	mov.b64 	%rd2033, {%r1377, %r1376};
	xor.b64  	%rd2034, %rd2033, %rd2032;
	shf.l.wrap.b32 	%r1378, %r1372, %r1373, 25;
	shf.l.wrap.b32 	%r1379, %r1373, %r1372, 25;
	mov.b64 	%rd2035, {%r1379, %r1378};
	xor.b64  	%rd2036, %rd2034, %rd2035;
	xor.b64  	%rd2037, %rd2018, %rd1970;
	xor.b64  	%rd2038, %rd2018, %rd1994;
	and.b64  	%rd2039, %rd2038, %rd2037;
	xor.b64  	%rd2040, %rd2039, %rd2018;
	add.s64 	%rd2041, %rd2030, %rd2040;
	add.s64 	%rd2042, %rd2041, %rd2036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1380,%dummy}, %rd2031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1381}, %rd2031;
	}
	shf.r.wrap.b32 	%r1382, %r1381, %r1380, 14;
	shf.r.wrap.b32 	%r1383, %r1380, %r1381, 14;
	mov.b64 	%rd2043, {%r1383, %r1382};
	shf.r.wrap.b32 	%r1384, %r1381, %r1380, 18;
	shf.r.wrap.b32 	%r1385, %r1380, %r1381, 18;
	mov.b64 	%rd2044, {%r1385, %r1384};
	xor.b64  	%rd2045, %rd2044, %rd2043;
	shf.l.wrap.b32 	%r1386, %r1380, %r1381, 23;
	shf.l.wrap.b32 	%r1387, %r1381, %r1380, 23;
	mov.b64 	%rd2046, {%r1387, %r1386};
	xor.b64  	%rd2047, %rd2045, %rd2046;
	xor.b64  	%rd2048, %rd2007, %rd1983;
	and.b64  	%rd2049, %rd2031, %rd2048;
	xor.b64  	%rd2050, %rd2049, %rd1983;
	add.s64 	%rd2051, %rd1959, %rd1770;
	add.s64 	%rd2052, %rd2051, %rd75;
	add.s64 	%rd2053, %rd2052, %rd2050;
	add.s64 	%rd2054, %rd2053, %rd2047;
	add.s64 	%rd2055, %rd2054, %rd1970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1388,%dummy}, %rd2042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd2042;
	}
	shf.r.wrap.b32 	%r1390, %r1389, %r1388, 28;
	shf.r.wrap.b32 	%r1391, %r1388, %r1389, 28;
	mov.b64 	%rd2056, {%r1391, %r1390};
	shf.l.wrap.b32 	%r1392, %r1388, %r1389, 30;
	shf.l.wrap.b32 	%r1393, %r1389, %r1388, 30;
	mov.b64 	%rd2057, {%r1393, %r1392};
	xor.b64  	%rd2058, %rd2057, %rd2056;
	shf.l.wrap.b32 	%r1394, %r1388, %r1389, 25;
	shf.l.wrap.b32 	%r1395, %r1389, %r1388, 25;
	mov.b64 	%rd2059, {%r1395, %r1394};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	xor.b64  	%rd2061, %rd2042, %rd1994;
	xor.b64  	%rd2062, %rd2042, %rd2018;
	and.b64  	%rd2063, %rd2062, %rd2061;
	xor.b64  	%rd2064, %rd2063, %rd2042;
	add.s64 	%rd2065, %rd2054, %rd2064;
	add.s64 	%rd2066, %rd2065, %rd2060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1396,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd2055;
	}
	shf.r.wrap.b32 	%r1398, %r1397, %r1396, 14;
	shf.r.wrap.b32 	%r1399, %r1396, %r1397, 14;
	mov.b64 	%rd2067, {%r1399, %r1398};
	shf.r.wrap.b32 	%r1400, %r1397, %r1396, 18;
	shf.r.wrap.b32 	%r1401, %r1396, %r1397, 18;
	mov.b64 	%rd2068, {%r1401, %r1400};
	xor.b64  	%rd2069, %rd2068, %rd2067;
	shf.l.wrap.b32 	%r1402, %r1396, %r1397, 23;
	shf.l.wrap.b32 	%r1403, %r1397, %r1396, 23;
	mov.b64 	%rd2070, {%r1403, %r1402};
	xor.b64  	%rd2071, %rd2069, %rd2070;
	xor.b64  	%rd2072, %rd2031, %rd2007;
	and.b64  	%rd2073, %rd2055, %rd2072;
	xor.b64  	%rd2074, %rd2073, %rd2007;
	add.s64 	%rd2075, %rd1983, %rd1783;
	add.s64 	%rd2076, %rd2075, %rd76;
	add.s64 	%rd2077, %rd2076, %rd2074;
	add.s64 	%rd2078, %rd2077, %rd2071;
	add.s64 	%rd2079, %rd2078, %rd1994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1404,%dummy}, %rd2066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1405}, %rd2066;
	}
	shf.r.wrap.b32 	%r1406, %r1405, %r1404, 28;
	shf.r.wrap.b32 	%r1407, %r1404, %r1405, 28;
	mov.b64 	%rd2080, {%r1407, %r1406};
	shf.l.wrap.b32 	%r1408, %r1404, %r1405, 30;
	shf.l.wrap.b32 	%r1409, %r1405, %r1404, 30;
	mov.b64 	%rd2081, {%r1409, %r1408};
	xor.b64  	%rd2082, %rd2081, %rd2080;
	shf.l.wrap.b32 	%r1410, %r1404, %r1405, 25;
	shf.l.wrap.b32 	%r1411, %r1405, %r1404, 25;
	mov.b64 	%rd2083, {%r1411, %r1410};
	xor.b64  	%rd2084, %rd2082, %rd2083;
	xor.b64  	%rd2085, %rd2066, %rd2018;
	xor.b64  	%rd2086, %rd2066, %rd2042;
	and.b64  	%rd2087, %rd2086, %rd2085;
	xor.b64  	%rd2088, %rd2087, %rd2066;
	add.s64 	%rd2089, %rd2078, %rd2088;
	add.s64 	%rd2090, %rd2089, %rd2084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1412,%dummy}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd2079;
	}
	shf.r.wrap.b32 	%r1414, %r1413, %r1412, 14;
	shf.r.wrap.b32 	%r1415, %r1412, %r1413, 14;
	mov.b64 	%rd2091, {%r1415, %r1414};
	shf.r.wrap.b32 	%r1416, %r1413, %r1412, 18;
	shf.r.wrap.b32 	%r1417, %r1412, %r1413, 18;
	mov.b64 	%rd2092, {%r1417, %r1416};
	xor.b64  	%rd2093, %rd2092, %rd2091;
	shf.l.wrap.b32 	%r1418, %r1412, %r1413, 23;
	shf.l.wrap.b32 	%r1419, %r1413, %r1412, 23;
	mov.b64 	%rd2094, {%r1419, %r1418};
	xor.b64  	%rd2095, %rd2093, %rd2094;
	xor.b64  	%rd2096, %rd2055, %rd2031;
	and.b64  	%rd2097, %rd2079, %rd2096;
	xor.b64  	%rd2098, %rd2097, %rd2031;
	add.s64 	%rd2099, %rd2007, %rd1796;
	add.s64 	%rd2100, %rd2099, %rd77;
	add.s64 	%rd2101, %rd2100, %rd2098;
	add.s64 	%rd2102, %rd2101, %rd2095;
	add.s64 	%rd2103, %rd2102, %rd2018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1420,%dummy}, %rd2090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1421}, %rd2090;
	}
	shf.r.wrap.b32 	%r1422, %r1421, %r1420, 28;
	shf.r.wrap.b32 	%r1423, %r1420, %r1421, 28;
	mov.b64 	%rd2104, {%r1423, %r1422};
	shf.l.wrap.b32 	%r1424, %r1420, %r1421, 30;
	shf.l.wrap.b32 	%r1425, %r1421, %r1420, 30;
	mov.b64 	%rd2105, {%r1425, %r1424};
	xor.b64  	%rd2106, %rd2105, %rd2104;
	shf.l.wrap.b32 	%r1426, %r1420, %r1421, 25;
	shf.l.wrap.b32 	%r1427, %r1421, %r1420, 25;
	mov.b64 	%rd2107, {%r1427, %r1426};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	xor.b64  	%rd2109, %rd2090, %rd2042;
	xor.b64  	%rd2110, %rd2090, %rd2066;
	and.b64  	%rd2111, %rd2110, %rd2109;
	xor.b64  	%rd2112, %rd2111, %rd2090;
	add.s64 	%rd2113, %rd2102, %rd2112;
	add.s64 	%rd2114, %rd2113, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1428,%dummy}, %rd2103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1429}, %rd2103;
	}
	shf.r.wrap.b32 	%r1430, %r1429, %r1428, 14;
	shf.r.wrap.b32 	%r1431, %r1428, %r1429, 14;
	mov.b64 	%rd2115, {%r1431, %r1430};
	shf.r.wrap.b32 	%r1432, %r1429, %r1428, 18;
	shf.r.wrap.b32 	%r1433, %r1428, %r1429, 18;
	mov.b64 	%rd2116, {%r1433, %r1432};
	xor.b64  	%rd2117, %rd2116, %rd2115;
	shf.l.wrap.b32 	%r1434, %r1428, %r1429, 23;
	shf.l.wrap.b32 	%r1435, %r1429, %r1428, 23;
	mov.b64 	%rd2118, {%r1435, %r1434};
	xor.b64  	%rd2119, %rd2117, %rd2118;
	xor.b64  	%rd2120, %rd2079, %rd2055;
	and.b64  	%rd2121, %rd2103, %rd2120;
	xor.b64  	%rd2122, %rd2121, %rd2055;
	add.s64 	%rd2123, %rd2031, %rd1809;
	add.s64 	%rd2124, %rd2123, %rd78;
	add.s64 	%rd2125, %rd2124, %rd2122;
	add.s64 	%rd2126, %rd2125, %rd2119;
	add.s64 	%rd2127, %rd2126, %rd2042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1436,%dummy}, %rd2114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd2114;
	}
	shf.r.wrap.b32 	%r1438, %r1437, %r1436, 28;
	shf.r.wrap.b32 	%r1439, %r1436, %r1437, 28;
	mov.b64 	%rd2128, {%r1439, %r1438};
	shf.l.wrap.b32 	%r1440, %r1436, %r1437, 30;
	shf.l.wrap.b32 	%r1441, %r1437, %r1436, 30;
	mov.b64 	%rd2129, {%r1441, %r1440};
	xor.b64  	%rd2130, %rd2129, %rd2128;
	shf.l.wrap.b32 	%r1442, %r1436, %r1437, 25;
	shf.l.wrap.b32 	%r1443, %r1437, %r1436, 25;
	mov.b64 	%rd2131, {%r1443, %r1442};
	xor.b64  	%rd2132, %rd2130, %rd2131;
	xor.b64  	%rd2133, %rd2114, %rd2066;
	xor.b64  	%rd2134, %rd2114, %rd2090;
	and.b64  	%rd2135, %rd2134, %rd2133;
	xor.b64  	%rd2136, %rd2135, %rd2114;
	add.s64 	%rd2137, %rd2126, %rd2136;
	add.s64 	%rd2138, %rd2137, %rd2132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1444,%dummy}, %rd2127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1445}, %rd2127;
	}
	shf.r.wrap.b32 	%r1446, %r1445, %r1444, 14;
	shf.r.wrap.b32 	%r1447, %r1444, %r1445, 14;
	mov.b64 	%rd2139, {%r1447, %r1446};
	shf.r.wrap.b32 	%r1448, %r1445, %r1444, 18;
	shf.r.wrap.b32 	%r1449, %r1444, %r1445, 18;
	mov.b64 	%rd2140, {%r1449, %r1448};
	xor.b64  	%rd2141, %rd2140, %rd2139;
	shf.l.wrap.b32 	%r1450, %r1444, %r1445, 23;
	shf.l.wrap.b32 	%r1451, %r1445, %r1444, 23;
	mov.b64 	%rd2142, {%r1451, %r1450};
	xor.b64  	%rd2143, %rd2141, %rd2142;
	xor.b64  	%rd2144, %rd2103, %rd2079;
	and.b64  	%rd2145, %rd2127, %rd2144;
	xor.b64  	%rd2146, %rd2145, %rd2079;
	add.s64 	%rd2147, %rd2055, %rd1822;
	add.s64 	%rd2148, %rd2147, %rd79;
	add.s64 	%rd2149, %rd2148, %rd2146;
	add.s64 	%rd2150, %rd2149, %rd2143;
	add.s64 	%rd2151, %rd2150, %rd2066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1452,%dummy}, %rd2138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1453}, %rd2138;
	}
	shf.r.wrap.b32 	%r1454, %r1453, %r1452, 28;
	shf.r.wrap.b32 	%r1455, %r1452, %r1453, 28;
	mov.b64 	%rd2152, {%r1455, %r1454};
	shf.l.wrap.b32 	%r1456, %r1452, %r1453, 30;
	shf.l.wrap.b32 	%r1457, %r1453, %r1452, 30;
	mov.b64 	%rd2153, {%r1457, %r1456};
	xor.b64  	%rd2154, %rd2153, %rd2152;
	shf.l.wrap.b32 	%r1458, %r1452, %r1453, 25;
	shf.l.wrap.b32 	%r1459, %r1453, %r1452, 25;
	mov.b64 	%rd2155, {%r1459, %r1458};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	xor.b64  	%rd2157, %rd2138, %rd2090;
	xor.b64  	%rd2158, %rd2138, %rd2114;
	and.b64  	%rd2159, %rd2158, %rd2157;
	xor.b64  	%rd2160, %rd2159, %rd2138;
	add.s64 	%rd2161, %rd2150, %rd2160;
	add.s64 	%rd2162, %rd2161, %rd2156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1460,%dummy}, %rd2151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1461}, %rd2151;
	}
	shf.r.wrap.b32 	%r1462, %r1461, %r1460, 14;
	shf.r.wrap.b32 	%r1463, %r1460, %r1461, 14;
	mov.b64 	%rd2163, {%r1463, %r1462};
	shf.r.wrap.b32 	%r1464, %r1461, %r1460, 18;
	shf.r.wrap.b32 	%r1465, %r1460, %r1461, 18;
	mov.b64 	%rd2164, {%r1465, %r1464};
	xor.b64  	%rd2165, %rd2164, %rd2163;
	shf.l.wrap.b32 	%r1466, %r1460, %r1461, 23;
	shf.l.wrap.b32 	%r1467, %r1461, %r1460, 23;
	mov.b64 	%rd2166, {%r1467, %r1466};
	xor.b64  	%rd2167, %rd2165, %rd2166;
	xor.b64  	%rd2168, %rd2127, %rd2103;
	and.b64  	%rd2169, %rd2151, %rd2168;
	xor.b64  	%rd2170, %rd2169, %rd2103;
	add.s64 	%rd2171, %rd2079, %rd1835;
	add.s64 	%rd2172, %rd2171, %rd80;
	add.s64 	%rd2173, %rd2172, %rd2170;
	add.s64 	%rd2174, %rd2173, %rd2167;
	add.s64 	%rd2175, %rd2174, %rd2090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1468,%dummy}, %rd2162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1469}, %rd2162;
	}
	shf.r.wrap.b32 	%r1470, %r1469, %r1468, 28;
	shf.r.wrap.b32 	%r1471, %r1468, %r1469, 28;
	mov.b64 	%rd2176, {%r1471, %r1470};
	shf.l.wrap.b32 	%r1472, %r1468, %r1469, 30;
	shf.l.wrap.b32 	%r1473, %r1469, %r1468, 30;
	mov.b64 	%rd2177, {%r1473, %r1472};
	xor.b64  	%rd2178, %rd2177, %rd2176;
	shf.l.wrap.b32 	%r1474, %r1468, %r1469, 25;
	shf.l.wrap.b32 	%r1475, %r1469, %r1468, 25;
	mov.b64 	%rd2179, {%r1475, %r1474};
	xor.b64  	%rd2180, %rd2178, %rd2179;
	xor.b64  	%rd2181, %rd2162, %rd2114;
	xor.b64  	%rd2182, %rd2162, %rd2138;
	and.b64  	%rd2183, %rd2182, %rd2181;
	xor.b64  	%rd2184, %rd2183, %rd2162;
	add.s64 	%rd2185, %rd2174, %rd2184;
	add.s64 	%rd2186, %rd2185, %rd2180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1476,%dummy}, %rd2175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1477}, %rd2175;
	}
	shf.r.wrap.b32 	%r1478, %r1477, %r1476, 14;
	shf.r.wrap.b32 	%r1479, %r1476, %r1477, 14;
	mov.b64 	%rd2187, {%r1479, %r1478};
	shf.r.wrap.b32 	%r1480, %r1477, %r1476, 18;
	shf.r.wrap.b32 	%r1481, %r1476, %r1477, 18;
	mov.b64 	%rd2188, {%r1481, %r1480};
	xor.b64  	%rd2189, %rd2188, %rd2187;
	shf.l.wrap.b32 	%r1482, %r1476, %r1477, 23;
	shf.l.wrap.b32 	%r1483, %r1477, %r1476, 23;
	mov.b64 	%rd2190, {%r1483, %r1482};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	xor.b64  	%rd2192, %rd2151, %rd2127;
	and.b64  	%rd2193, %rd2175, %rd2192;
	xor.b64  	%rd2194, %rd2193, %rd2127;
	add.s64 	%rd2195, %rd2103, %rd1848;
	add.s64 	%rd2196, %rd2195, %rd81;
	add.s64 	%rd2197, %rd2196, %rd2194;
	add.s64 	%rd2198, %rd2197, %rd2191;
	add.s64 	%rd2199, %rd2198, %rd2114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1484,%dummy}, %rd2186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1485}, %rd2186;
	}
	shf.r.wrap.b32 	%r1486, %r1485, %r1484, 28;
	shf.r.wrap.b32 	%r1487, %r1484, %r1485, 28;
	mov.b64 	%rd2200, {%r1487, %r1486};
	shf.l.wrap.b32 	%r1488, %r1484, %r1485, 30;
	shf.l.wrap.b32 	%r1489, %r1485, %r1484, 30;
	mov.b64 	%rd2201, {%r1489, %r1488};
	xor.b64  	%rd2202, %rd2201, %rd2200;
	shf.l.wrap.b32 	%r1490, %r1484, %r1485, 25;
	shf.l.wrap.b32 	%r1491, %r1485, %r1484, 25;
	mov.b64 	%rd2203, {%r1491, %r1490};
	xor.b64  	%rd2204, %rd2202, %rd2203;
	xor.b64  	%rd2205, %rd2186, %rd2138;
	xor.b64  	%rd2206, %rd2186, %rd2162;
	and.b64  	%rd2207, %rd2206, %rd2205;
	xor.b64  	%rd2208, %rd2207, %rd2186;
	add.s64 	%rd2209, %rd2198, %rd2208;
	add.s64 	%rd2210, %rd2209, %rd2204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1492,%dummy}, %rd2199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1493}, %rd2199;
	}
	shf.r.wrap.b32 	%r1494, %r1493, %r1492, 14;
	shf.r.wrap.b32 	%r1495, %r1492, %r1493, 14;
	mov.b64 	%rd2211, {%r1495, %r1494};
	shf.r.wrap.b32 	%r1496, %r1493, %r1492, 18;
	shf.r.wrap.b32 	%r1497, %r1492, %r1493, 18;
	mov.b64 	%rd2212, {%r1497, %r1496};
	xor.b64  	%rd2213, %rd2212, %rd2211;
	shf.l.wrap.b32 	%r1498, %r1492, %r1493, 23;
	shf.l.wrap.b32 	%r1499, %r1493, %r1492, 23;
	mov.b64 	%rd2214, {%r1499, %r1498};
	xor.b64  	%rd2215, %rd2213, %rd2214;
	xor.b64  	%rd2216, %rd2175, %rd2151;
	and.b64  	%rd2217, %rd2199, %rd2216;
	xor.b64  	%rd2218, %rd2217, %rd2151;
	add.s64 	%rd2219, %rd2127, %rd1861;
	add.s64 	%rd2220, %rd2219, %rd82;
	add.s64 	%rd2221, %rd2220, %rd2218;
	add.s64 	%rd2222, %rd2221, %rd2215;
	add.s64 	%rd2223, %rd2222, %rd2138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1500,%dummy}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd2210;
	}
	shf.r.wrap.b32 	%r1502, %r1501, %r1500, 28;
	shf.r.wrap.b32 	%r1503, %r1500, %r1501, 28;
	mov.b64 	%rd2224, {%r1503, %r1502};
	shf.l.wrap.b32 	%r1504, %r1500, %r1501, 30;
	shf.l.wrap.b32 	%r1505, %r1501, %r1500, 30;
	mov.b64 	%rd2225, {%r1505, %r1504};
	xor.b64  	%rd2226, %rd2225, %rd2224;
	shf.l.wrap.b32 	%r1506, %r1500, %r1501, 25;
	shf.l.wrap.b32 	%r1507, %r1501, %r1500, 25;
	mov.b64 	%rd2227, {%r1507, %r1506};
	xor.b64  	%rd2228, %rd2226, %rd2227;
	xor.b64  	%rd2229, %rd2210, %rd2162;
	xor.b64  	%rd2230, %rd2210, %rd2186;
	and.b64  	%rd2231, %rd2230, %rd2229;
	xor.b64  	%rd2232, %rd2231, %rd2210;
	add.s64 	%rd2233, %rd2222, %rd2232;
	add.s64 	%rd2234, %rd2233, %rd2228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1508,%dummy}, %rd2223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd2223;
	}
	shf.r.wrap.b32 	%r1510, %r1509, %r1508, 14;
	shf.r.wrap.b32 	%r1511, %r1508, %r1509, 14;
	mov.b64 	%rd2235, {%r1511, %r1510};
	shf.r.wrap.b32 	%r1512, %r1509, %r1508, 18;
	shf.r.wrap.b32 	%r1513, %r1508, %r1509, 18;
	mov.b64 	%rd2236, {%r1513, %r1512};
	xor.b64  	%rd2237, %rd2236, %rd2235;
	shf.l.wrap.b32 	%r1514, %r1508, %r1509, 23;
	shf.l.wrap.b32 	%r1515, %r1509, %r1508, 23;
	mov.b64 	%rd2238, {%r1515, %r1514};
	xor.b64  	%rd2239, %rd2237, %rd2238;
	xor.b64  	%rd2240, %rd2199, %rd2175;
	and.b64  	%rd2241, %rd2223, %rd2240;
	xor.b64  	%rd2242, %rd2241, %rd2175;
	add.s64 	%rd2243, %rd2151, %rd1874;
	add.s64 	%rd2244, %rd2243, %rd83;
	add.s64 	%rd2245, %rd2244, %rd2242;
	add.s64 	%rd2246, %rd2245, %rd2239;
	add.s64 	%rd2247, %rd2246, %rd2162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1516,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1517}, %rd2234;
	}
	shf.r.wrap.b32 	%r1518, %r1517, %r1516, 28;
	shf.r.wrap.b32 	%r1519, %r1516, %r1517, 28;
	mov.b64 	%rd2248, {%r1519, %r1518};
	shf.l.wrap.b32 	%r1520, %r1516, %r1517, 30;
	shf.l.wrap.b32 	%r1521, %r1517, %r1516, 30;
	mov.b64 	%rd2249, {%r1521, %r1520};
	xor.b64  	%rd2250, %rd2249, %rd2248;
	shf.l.wrap.b32 	%r1522, %r1516, %r1517, 25;
	shf.l.wrap.b32 	%r1523, %r1517, %r1516, 25;
	mov.b64 	%rd2251, {%r1523, %r1522};
	xor.b64  	%rd2252, %rd2250, %rd2251;
	xor.b64  	%rd2253, %rd2234, %rd2186;
	xor.b64  	%rd2254, %rd2234, %rd2210;
	and.b64  	%rd2255, %rd2254, %rd2253;
	xor.b64  	%rd2256, %rd2255, %rd2234;
	add.s64 	%rd2257, %rd2246, %rd2256;
	add.s64 	%rd2258, %rd2257, %rd2252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1524,%dummy}, %rd1861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1525}, %rd1861;
	}
	shf.r.wrap.b32 	%r1526, %r1525, %r1524, 19;
	shf.r.wrap.b32 	%r1527, %r1524, %r1525, 19;
	mov.b64 	%rd2259, {%r1527, %r1526};
	shf.l.wrap.b32 	%r1528, %r1524, %r1525, 3;
	shf.l.wrap.b32 	%r1529, %r1525, %r1524, 3;
	mov.b64 	%rd2260, {%r1529, %r1528};
	shr.u64 	%rd2261, %rd1861, 6;
	xor.b64  	%rd2262, %rd2259, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd2260;
	shf.r.wrap.b32 	%r1530, %r1139, %r1138, 1;
	shf.r.wrap.b32 	%r1531, %r1138, %r1139, 1;
	mov.b64 	%rd2264, {%r1531, %r1530};
	shf.r.wrap.b32 	%r1532, %r1139, %r1138, 8;
	shf.r.wrap.b32 	%r1533, %r1138, %r1139, 8;
	mov.b64 	%rd2265, {%r1533, %r1532};
	shr.u64 	%rd2266, %rd1692, 7;
	xor.b64  	%rd2267, %rd2264, %rd2266;
	xor.b64  	%rd2268, %rd2267, %rd2265;
	add.s64 	%rd2269, %rd1679, %rd1796;
	add.s64 	%rd2270, %rd2269, %rd2263;
	add.s64 	%rd2271, %rd2270, %rd2268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd1874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1535}, %rd1874;
	}
	shf.r.wrap.b32 	%r1536, %r1535, %r1534, 19;
	shf.r.wrap.b32 	%r1537, %r1534, %r1535, 19;
	mov.b64 	%rd2272, {%r1537, %r1536};
	shf.l.wrap.b32 	%r1538, %r1534, %r1535, 3;
	shf.l.wrap.b32 	%r1539, %r1535, %r1534, 3;
	mov.b64 	%rd2273, {%r1539, %r1538};
	shr.u64 	%rd2274, %rd1874, 6;
	xor.b64  	%rd2275, %rd2272, %rd2274;
	xor.b64  	%rd2276, %rd2275, %rd2273;
	shf.r.wrap.b32 	%r1540, %r1149, %r1148, 1;
	shf.r.wrap.b32 	%r1541, %r1148, %r1149, 1;
	mov.b64 	%rd2277, {%r1541, %r1540};
	shf.r.wrap.b32 	%r1542, %r1149, %r1148, 8;
	shf.r.wrap.b32 	%r1543, %r1148, %r1149, 8;
	mov.b64 	%rd2278, {%r1543, %r1542};
	shr.u64 	%rd2279, %rd1705, 7;
	xor.b64  	%rd2280, %rd2277, %rd2279;
	xor.b64  	%rd2281, %rd2280, %rd2278;
	add.s64 	%rd2282, %rd1692, %rd1809;
	add.s64 	%rd2283, %rd2282, %rd2276;
	add.s64 	%rd2284, %rd2283, %rd2281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1544,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1545}, %rd2271;
	}
	shf.r.wrap.b32 	%r1546, %r1545, %r1544, 19;
	shf.r.wrap.b32 	%r1547, %r1544, %r1545, 19;
	mov.b64 	%rd2285, {%r1547, %r1546};
	shf.l.wrap.b32 	%r1548, %r1544, %r1545, 3;
	shf.l.wrap.b32 	%r1549, %r1545, %r1544, 3;
	mov.b64 	%rd2286, {%r1549, %r1548};
	shr.u64 	%rd2287, %rd2271, 6;
	xor.b64  	%rd2288, %rd2285, %rd2287;
	xor.b64  	%rd2289, %rd2288, %rd2286;
	shf.r.wrap.b32 	%r1550, %r1159, %r1158, 1;
	shf.r.wrap.b32 	%r1551, %r1158, %r1159, 1;
	mov.b64 	%rd2290, {%r1551, %r1550};
	shf.r.wrap.b32 	%r1552, %r1159, %r1158, 8;
	shf.r.wrap.b32 	%r1553, %r1158, %r1159, 8;
	mov.b64 	%rd2291, {%r1553, %r1552};
	shr.u64 	%rd2292, %rd1718, 7;
	xor.b64  	%rd2293, %rd2290, %rd2292;
	xor.b64  	%rd2294, %rd2293, %rd2291;
	add.s64 	%rd2295, %rd1705, %rd1822;
	add.s64 	%rd2296, %rd2295, %rd2289;
	add.s64 	%rd2297, %rd2296, %rd2294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1554,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1555}, %rd2284;
	}
	shf.r.wrap.b32 	%r1556, %r1555, %r1554, 19;
	shf.r.wrap.b32 	%r1557, %r1554, %r1555, 19;
	mov.b64 	%rd2298, {%r1557, %r1556};
	shf.l.wrap.b32 	%r1558, %r1554, %r1555, 3;
	shf.l.wrap.b32 	%r1559, %r1555, %r1554, 3;
	mov.b64 	%rd2299, {%r1559, %r1558};
	shr.u64 	%rd2300, %rd2284, 6;
	xor.b64  	%rd2301, %rd2298, %rd2300;
	xor.b64  	%rd2302, %rd2301, %rd2299;
	shf.r.wrap.b32 	%r1560, %r1169, %r1168, 1;
	shf.r.wrap.b32 	%r1561, %r1168, %r1169, 1;
	mov.b64 	%rd2303, {%r1561, %r1560};
	shf.r.wrap.b32 	%r1562, %r1169, %r1168, 8;
	shf.r.wrap.b32 	%r1563, %r1168, %r1169, 8;
	mov.b64 	%rd2304, {%r1563, %r1562};
	shr.u64 	%rd2305, %rd1731, 7;
	xor.b64  	%rd2306, %rd2303, %rd2305;
	xor.b64  	%rd2307, %rd2306, %rd2304;
	add.s64 	%rd2308, %rd1835, %rd1718;
	add.s64 	%rd2309, %rd2308, %rd2302;
	add.s64 	%rd2310, %rd2309, %rd2307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1564,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1565}, %rd2297;
	}
	shf.r.wrap.b32 	%r1566, %r1565, %r1564, 19;
	shf.r.wrap.b32 	%r1567, %r1564, %r1565, 19;
	mov.b64 	%rd2311, {%r1567, %r1566};
	shf.l.wrap.b32 	%r1568, %r1564, %r1565, 3;
	shf.l.wrap.b32 	%r1569, %r1565, %r1564, 3;
	mov.b64 	%rd2312, {%r1569, %r1568};
	shr.u64 	%rd2313, %rd2297, 6;
	xor.b64  	%rd2314, %rd2311, %rd2313;
	xor.b64  	%rd2315, %rd2314, %rd2312;
	shf.r.wrap.b32 	%r1570, %r1179, %r1178, 1;
	shf.r.wrap.b32 	%r1571, %r1178, %r1179, 1;
	mov.b64 	%rd2316, {%r1571, %r1570};
	shf.r.wrap.b32 	%r1572, %r1179, %r1178, 8;
	shf.r.wrap.b32 	%r1573, %r1178, %r1179, 8;
	mov.b64 	%rd2317, {%r1573, %r1572};
	shr.u64 	%rd2318, %rd1744, 7;
	xor.b64  	%rd2319, %rd2316, %rd2318;
	xor.b64  	%rd2320, %rd2319, %rd2317;
	add.s64 	%rd2321, %rd1848, %rd1731;
	add.s64 	%rd2322, %rd2321, %rd2315;
	add.s64 	%rd2323, %rd2322, %rd2320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1574,%dummy}, %rd2310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1575}, %rd2310;
	}
	shf.r.wrap.b32 	%r1576, %r1575, %r1574, 19;
	shf.r.wrap.b32 	%r1577, %r1574, %r1575, 19;
	mov.b64 	%rd2324, {%r1577, %r1576};
	shf.l.wrap.b32 	%r1578, %r1574, %r1575, 3;
	shf.l.wrap.b32 	%r1579, %r1575, %r1574, 3;
	mov.b64 	%rd2325, {%r1579, %r1578};
	shr.u64 	%rd2326, %rd2310, 6;
	xor.b64  	%rd2327, %rd2324, %rd2326;
	xor.b64  	%rd2328, %rd2327, %rd2325;
	shf.r.wrap.b32 	%r1580, %r1189, %r1188, 1;
	shf.r.wrap.b32 	%r1581, %r1188, %r1189, 1;
	mov.b64 	%rd2329, {%r1581, %r1580};
	shf.r.wrap.b32 	%r1582, %r1189, %r1188, 8;
	shf.r.wrap.b32 	%r1583, %r1188, %r1189, 8;
	mov.b64 	%rd2330, {%r1583, %r1582};
	shr.u64 	%rd2331, %rd1757, 7;
	xor.b64  	%rd2332, %rd2329, %rd2331;
	xor.b64  	%rd2333, %rd2332, %rd2330;
	add.s64 	%rd2334, %rd1861, %rd1744;
	add.s64 	%rd2335, %rd2334, %rd2328;
	add.s64 	%rd2336, %rd2335, %rd2333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd2323;
	}
	shf.r.wrap.b32 	%r1586, %r1585, %r1584, 19;
	shf.r.wrap.b32 	%r1587, %r1584, %r1585, 19;
	mov.b64 	%rd2337, {%r1587, %r1586};
	shf.l.wrap.b32 	%r1588, %r1584, %r1585, 3;
	shf.l.wrap.b32 	%r1589, %r1585, %r1584, 3;
	mov.b64 	%rd2338, {%r1589, %r1588};
	shr.u64 	%rd2339, %rd2323, 6;
	xor.b64  	%rd2340, %rd2337, %rd2339;
	xor.b64  	%rd2341, %rd2340, %rd2338;
	shf.r.wrap.b32 	%r1590, %r1199, %r1198, 1;
	shf.r.wrap.b32 	%r1591, %r1198, %r1199, 1;
	mov.b64 	%rd2342, {%r1591, %r1590};
	shf.r.wrap.b32 	%r1592, %r1199, %r1198, 8;
	shf.r.wrap.b32 	%r1593, %r1198, %r1199, 8;
	mov.b64 	%rd2343, {%r1593, %r1592};
	shr.u64 	%rd2344, %rd1770, 7;
	xor.b64  	%rd2345, %rd2342, %rd2344;
	xor.b64  	%rd2346, %rd2345, %rd2343;
	add.s64 	%rd2347, %rd1874, %rd1757;
	add.s64 	%rd2348, %rd2347, %rd2341;
	add.s64 	%rd2349, %rd2348, %rd2346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd2336;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 19;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 19;
	mov.b64 	%rd2350, {%r1597, %r1596};
	shf.l.wrap.b32 	%r1598, %r1594, %r1595, 3;
	shf.l.wrap.b32 	%r1599, %r1595, %r1594, 3;
	mov.b64 	%rd2351, {%r1599, %r1598};
	shr.u64 	%rd2352, %rd2336, 6;
	xor.b64  	%rd2353, %rd2350, %rd2352;
	xor.b64  	%rd2354, %rd2353, %rd2351;
	shf.r.wrap.b32 	%r1600, %r1209, %r1208, 1;
	shf.r.wrap.b32 	%r1601, %r1208, %r1209, 1;
	mov.b64 	%rd2355, {%r1601, %r1600};
	shf.r.wrap.b32 	%r1602, %r1209, %r1208, 8;
	shf.r.wrap.b32 	%r1603, %r1208, %r1209, 8;
	mov.b64 	%rd2356, {%r1603, %r1602};
	shr.u64 	%rd2357, %rd1783, 7;
	xor.b64  	%rd2358, %rd2355, %rd2357;
	xor.b64  	%rd2359, %rd2358, %rd2356;
	add.s64 	%rd2360, %rd2271, %rd1770;
	add.s64 	%rd2361, %rd2360, %rd2354;
	add.s64 	%rd2362, %rd2361, %rd2359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd2349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1605}, %rd2349;
	}
	shf.r.wrap.b32 	%r1606, %r1605, %r1604, 19;
	shf.r.wrap.b32 	%r1607, %r1604, %r1605, 19;
	mov.b64 	%rd2363, {%r1607, %r1606};
	shf.l.wrap.b32 	%r1608, %r1604, %r1605, 3;
	shf.l.wrap.b32 	%r1609, %r1605, %r1604, 3;
	mov.b64 	%rd2364, {%r1609, %r1608};
	shr.u64 	%rd2365, %rd2349, 6;
	xor.b64  	%rd2366, %rd2363, %rd2365;
	xor.b64  	%rd2367, %rd2366, %rd2364;
	shf.r.wrap.b32 	%r1610, %r1219, %r1218, 1;
	shf.r.wrap.b32 	%r1611, %r1218, %r1219, 1;
	mov.b64 	%rd2368, {%r1611, %r1610};
	shf.r.wrap.b32 	%r1612, %r1219, %r1218, 8;
	shf.r.wrap.b32 	%r1613, %r1218, %r1219, 8;
	mov.b64 	%rd2369, {%r1613, %r1612};
	shr.u64 	%rd2370, %rd1796, 7;
	xor.b64  	%rd2371, %rd2368, %rd2370;
	xor.b64  	%rd2372, %rd2371, %rd2369;
	add.s64 	%rd2373, %rd2284, %rd1783;
	add.s64 	%rd2374, %rd2373, %rd2367;
	add.s64 	%rd2375, %rd2374, %rd2372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd2362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd2362;
	}
	shf.r.wrap.b32 	%r1616, %r1615, %r1614, 19;
	shf.r.wrap.b32 	%r1617, %r1614, %r1615, 19;
	mov.b64 	%rd2376, {%r1617, %r1616};
	shf.l.wrap.b32 	%r1618, %r1614, %r1615, 3;
	shf.l.wrap.b32 	%r1619, %r1615, %r1614, 3;
	mov.b64 	%rd2377, {%r1619, %r1618};
	shr.u64 	%rd2378, %rd2362, 6;
	xor.b64  	%rd2379, %rd2376, %rd2378;
	xor.b64  	%rd2380, %rd2379, %rd2377;
	shf.r.wrap.b32 	%r1620, %r1229, %r1228, 1;
	shf.r.wrap.b32 	%r1621, %r1228, %r1229, 1;
	mov.b64 	%rd2381, {%r1621, %r1620};
	shf.r.wrap.b32 	%r1622, %r1229, %r1228, 8;
	shf.r.wrap.b32 	%r1623, %r1228, %r1229, 8;
	mov.b64 	%rd2382, {%r1623, %r1622};
	shr.u64 	%rd2383, %rd1809, 7;
	xor.b64  	%rd2384, %rd2381, %rd2383;
	xor.b64  	%rd2385, %rd2384, %rd2382;
	add.s64 	%rd2386, %rd2297, %rd1796;
	add.s64 	%rd2387, %rd2386, %rd2380;
	add.s64 	%rd2388, %rd2387, %rd2385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1624,%dummy}, %rd2375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1625}, %rd2375;
	}
	shf.r.wrap.b32 	%r1626, %r1625, %r1624, 19;
	shf.r.wrap.b32 	%r1627, %r1624, %r1625, 19;
	mov.b64 	%rd2389, {%r1627, %r1626};
	shf.l.wrap.b32 	%r1628, %r1624, %r1625, 3;
	shf.l.wrap.b32 	%r1629, %r1625, %r1624, 3;
	mov.b64 	%rd2390, {%r1629, %r1628};
	shr.u64 	%rd2391, %rd2375, 6;
	xor.b64  	%rd2392, %rd2389, %rd2391;
	xor.b64  	%rd2393, %rd2392, %rd2390;
	shf.r.wrap.b32 	%r1630, %r1239, %r1238, 1;
	shf.r.wrap.b32 	%r1631, %r1238, %r1239, 1;
	mov.b64 	%rd2394, {%r1631, %r1630};
	shf.r.wrap.b32 	%r1632, %r1239, %r1238, 8;
	shf.r.wrap.b32 	%r1633, %r1238, %r1239, 8;
	mov.b64 	%rd2395, {%r1633, %r1632};
	shr.u64 	%rd2396, %rd1822, 7;
	xor.b64  	%rd2397, %rd2394, %rd2396;
	xor.b64  	%rd2398, %rd2397, %rd2395;
	add.s64 	%rd2399, %rd2310, %rd1809;
	add.s64 	%rd2400, %rd2399, %rd2393;
	add.s64 	%rd2401, %rd2400, %rd2398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1634,%dummy}, %rd2388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1635}, %rd2388;
	}
	shf.r.wrap.b32 	%r1636, %r1635, %r1634, 19;
	shf.r.wrap.b32 	%r1637, %r1634, %r1635, 19;
	mov.b64 	%rd2402, {%r1637, %r1636};
	shf.l.wrap.b32 	%r1638, %r1634, %r1635, 3;
	shf.l.wrap.b32 	%r1639, %r1635, %r1634, 3;
	mov.b64 	%rd2403, {%r1639, %r1638};
	shr.u64 	%rd2404, %rd2388, 6;
	xor.b64  	%rd2405, %rd2402, %rd2404;
	xor.b64  	%rd2406, %rd2405, %rd2403;
	shf.r.wrap.b32 	%r1640, %r1249, %r1248, 1;
	shf.r.wrap.b32 	%r1641, %r1248, %r1249, 1;
	mov.b64 	%rd2407, {%r1641, %r1640};
	shf.r.wrap.b32 	%r1642, %r1249, %r1248, 8;
	shf.r.wrap.b32 	%r1643, %r1248, %r1249, 8;
	mov.b64 	%rd2408, {%r1643, %r1642};
	shr.u64 	%rd2409, %rd1835, 7;
	xor.b64  	%rd2410, %rd2407, %rd2409;
	xor.b64  	%rd2411, %rd2410, %rd2408;
	add.s64 	%rd2412, %rd2323, %rd1822;
	add.s64 	%rd2413, %rd2412, %rd2406;
	add.s64 	%rd2414, %rd2413, %rd2411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd2401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd2401;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 19;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 19;
	mov.b64 	%rd2415, {%r1647, %r1646};
	shf.l.wrap.b32 	%r1648, %r1644, %r1645, 3;
	shf.l.wrap.b32 	%r1649, %r1645, %r1644, 3;
	mov.b64 	%rd2416, {%r1649, %r1648};
	shr.u64 	%rd2417, %rd2401, 6;
	xor.b64  	%rd2418, %rd2415, %rd2417;
	xor.b64  	%rd2419, %rd2418, %rd2416;
	shf.r.wrap.b32 	%r1650, %r1259, %r1258, 1;
	shf.r.wrap.b32 	%r1651, %r1258, %r1259, 1;
	mov.b64 	%rd2420, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1259, %r1258, 8;
	shf.r.wrap.b32 	%r1653, %r1258, %r1259, 8;
	mov.b64 	%rd2421, {%r1653, %r1652};
	shr.u64 	%rd2422, %rd1848, 7;
	xor.b64  	%rd2423, %rd2420, %rd2422;
	xor.b64  	%rd2424, %rd2423, %rd2421;
	add.s64 	%rd2425, %rd2336, %rd1835;
	add.s64 	%rd2426, %rd2425, %rd2419;
	add.s64 	%rd2427, %rd2426, %rd2424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1654,%dummy}, %rd2414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1655}, %rd2414;
	}
	shf.r.wrap.b32 	%r1656, %r1655, %r1654, 19;
	shf.r.wrap.b32 	%r1657, %r1654, %r1655, 19;
	mov.b64 	%rd2428, {%r1657, %r1656};
	shf.l.wrap.b32 	%r1658, %r1654, %r1655, 3;
	shf.l.wrap.b32 	%r1659, %r1655, %r1654, 3;
	mov.b64 	%rd2429, {%r1659, %r1658};
	shr.u64 	%rd2430, %rd2414, 6;
	xor.b64  	%rd2431, %rd2428, %rd2430;
	xor.b64  	%rd2432, %rd2431, %rd2429;
	shf.r.wrap.b32 	%r1660, %r1525, %r1524, 1;
	shf.r.wrap.b32 	%r1661, %r1524, %r1525, 1;
	mov.b64 	%rd2433, {%r1661, %r1660};
	shf.r.wrap.b32 	%r1662, %r1525, %r1524, 8;
	shf.r.wrap.b32 	%r1663, %r1524, %r1525, 8;
	mov.b64 	%rd2434, {%r1663, %r1662};
	shr.u64 	%rd2435, %rd1861, 7;
	xor.b64  	%rd2436, %rd2433, %rd2435;
	xor.b64  	%rd2437, %rd2436, %rd2434;
	add.s64 	%rd2438, %rd2349, %rd1848;
	add.s64 	%rd2439, %rd2438, %rd2432;
	add.s64 	%rd2440, %rd2439, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd2427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd2427;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 19;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 19;
	mov.b64 	%rd2441, {%r1667, %r1666};
	shf.l.wrap.b32 	%r1668, %r1664, %r1665, 3;
	shf.l.wrap.b32 	%r1669, %r1665, %r1664, 3;
	mov.b64 	%rd2442, {%r1669, %r1668};
	shr.u64 	%rd2443, %rd2427, 6;
	xor.b64  	%rd2444, %rd2441, %rd2443;
	xor.b64  	%rd2445, %rd2444, %rd2442;
	shf.r.wrap.b32 	%r1670, %r1535, %r1534, 1;
	shf.r.wrap.b32 	%r1671, %r1534, %r1535, 1;
	mov.b64 	%rd2446, {%r1671, %r1670};
	shf.r.wrap.b32 	%r1672, %r1535, %r1534, 8;
	shf.r.wrap.b32 	%r1673, %r1534, %r1535, 8;
	mov.b64 	%rd2447, {%r1673, %r1672};
	shr.u64 	%rd2448, %rd1874, 7;
	xor.b64  	%rd2449, %rd2446, %rd2448;
	xor.b64  	%rd2450, %rd2449, %rd2447;
	add.s64 	%rd2451, %rd2362, %rd1861;
	add.s64 	%rd2452, %rd2451, %rd2445;
	add.s64 	%rd2453, %rd2452, %rd2450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd2440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1675}, %rd2440;
	}
	shf.r.wrap.b32 	%r1676, %r1675, %r1674, 19;
	shf.r.wrap.b32 	%r1677, %r1674, %r1675, 19;
	mov.b64 	%rd2454, {%r1677, %r1676};
	shf.l.wrap.b32 	%r1678, %r1674, %r1675, 3;
	shf.l.wrap.b32 	%r1679, %r1675, %r1674, 3;
	mov.b64 	%rd2455, {%r1679, %r1678};
	shr.u64 	%rd2456, %rd2440, 6;
	xor.b64  	%rd2457, %rd2454, %rd2456;
	xor.b64  	%rd2458, %rd2457, %rd2455;
	shf.r.wrap.b32 	%r1680, %r1545, %r1544, 1;
	shf.r.wrap.b32 	%r1681, %r1544, %r1545, 1;
	mov.b64 	%rd2459, {%r1681, %r1680};
	shf.r.wrap.b32 	%r1682, %r1545, %r1544, 8;
	shf.r.wrap.b32 	%r1683, %r1544, %r1545, 8;
	mov.b64 	%rd2460, {%r1683, %r1682};
	shr.u64 	%rd2461, %rd2271, 7;
	xor.b64  	%rd2462, %rd2459, %rd2461;
	xor.b64  	%rd2463, %rd2462, %rd2460;
	add.s64 	%rd2464, %rd2375, %rd1874;
	add.s64 	%rd2465, %rd2464, %rd2458;
	add.s64 	%rd2466, %rd2465, %rd2463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1684,%dummy}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1685}, %rd2247;
	}
	shf.r.wrap.b32 	%r1686, %r1685, %r1684, 14;
	shf.r.wrap.b32 	%r1687, %r1684, %r1685, 14;
	mov.b64 	%rd2467, {%r1687, %r1686};
	shf.r.wrap.b32 	%r1688, %r1685, %r1684, 18;
	shf.r.wrap.b32 	%r1689, %r1684, %r1685, 18;
	mov.b64 	%rd2468, {%r1689, %r1688};
	xor.b64  	%rd2469, %rd2468, %rd2467;
	shf.l.wrap.b32 	%r1690, %r1684, %r1685, 23;
	shf.l.wrap.b32 	%r1691, %r1685, %r1684, 23;
	mov.b64 	%rd2470, {%r1691, %r1690};
	xor.b64  	%rd2471, %rd2469, %rd2470;
	xor.b64  	%rd2472, %rd2223, %rd2199;
	and.b64  	%rd2473, %rd2472, %rd2247;
	xor.b64  	%rd2474, %rd2473, %rd2199;
	add.s64 	%rd2475, %rd2474, %rd2175;
	add.s64 	%rd2476, %rd2475, %rd2271;
	add.s64 	%rd2477, %rd2476, %rd84;
	add.s64 	%rd2478, %rd2477, %rd2471;
	add.s64 	%rd2479, %rd2478, %rd2186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1692,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1693}, %rd2258;
	}
	shf.r.wrap.b32 	%r1694, %r1693, %r1692, 28;
	shf.r.wrap.b32 	%r1695, %r1692, %r1693, 28;
	mov.b64 	%rd2480, {%r1695, %r1694};
	shf.l.wrap.b32 	%r1696, %r1692, %r1693, 30;
	shf.l.wrap.b32 	%r1697, %r1693, %r1692, 30;
	mov.b64 	%rd2481, {%r1697, %r1696};
	xor.b64  	%rd2482, %rd2481, %rd2480;
	shf.l.wrap.b32 	%r1698, %r1692, %r1693, 25;
	shf.l.wrap.b32 	%r1699, %r1693, %r1692, 25;
	mov.b64 	%rd2483, {%r1699, %r1698};
	xor.b64  	%rd2484, %rd2482, %rd2483;
	xor.b64  	%rd2485, %rd2258, %rd2210;
	xor.b64  	%rd2486, %rd2258, %rd2234;
	and.b64  	%rd2487, %rd2486, %rd2485;
	xor.b64  	%rd2488, %rd2487, %rd2258;
	add.s64 	%rd2489, %rd2478, %rd2488;
	add.s64 	%rd2490, %rd2489, %rd2484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1700,%dummy}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1701}, %rd2479;
	}
	shf.r.wrap.b32 	%r1702, %r1701, %r1700, 14;
	shf.r.wrap.b32 	%r1703, %r1700, %r1701, 14;
	mov.b64 	%rd2491, {%r1703, %r1702};
	shf.r.wrap.b32 	%r1704, %r1701, %r1700, 18;
	shf.r.wrap.b32 	%r1705, %r1700, %r1701, 18;
	mov.b64 	%rd2492, {%r1705, %r1704};
	xor.b64  	%rd2493, %rd2492, %rd2491;
	shf.l.wrap.b32 	%r1706, %r1700, %r1701, 23;
	shf.l.wrap.b32 	%r1707, %r1701, %r1700, 23;
	mov.b64 	%rd2494, {%r1707, %r1706};
	xor.b64  	%rd2495, %rd2493, %rd2494;
	xor.b64  	%rd2496, %rd2247, %rd2223;
	and.b64  	%rd2497, %rd2479, %rd2496;
	xor.b64  	%rd2498, %rd2497, %rd2223;
	add.s64 	%rd2499, %rd2284, %rd2199;
	add.s64 	%rd2500, %rd2499, %rd85;
	add.s64 	%rd2501, %rd2500, %rd2498;
	add.s64 	%rd2502, %rd2501, %rd2495;
	add.s64 	%rd2503, %rd2502, %rd2210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1708,%dummy}, %rd2490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1709}, %rd2490;
	}
	shf.r.wrap.b32 	%r1710, %r1709, %r1708, 28;
	shf.r.wrap.b32 	%r1711, %r1708, %r1709, 28;
	mov.b64 	%rd2504, {%r1711, %r1710};
	shf.l.wrap.b32 	%r1712, %r1708, %r1709, 30;
	shf.l.wrap.b32 	%r1713, %r1709, %r1708, 30;
	mov.b64 	%rd2505, {%r1713, %r1712};
	xor.b64  	%rd2506, %rd2505, %rd2504;
	shf.l.wrap.b32 	%r1714, %r1708, %r1709, 25;
	shf.l.wrap.b32 	%r1715, %r1709, %r1708, 25;
	mov.b64 	%rd2507, {%r1715, %r1714};
	xor.b64  	%rd2508, %rd2506, %rd2507;
	xor.b64  	%rd2509, %rd2490, %rd2234;
	xor.b64  	%rd2510, %rd2490, %rd2258;
	and.b64  	%rd2511, %rd2510, %rd2509;
	xor.b64  	%rd2512, %rd2511, %rd2490;
	add.s64 	%rd2513, %rd2502, %rd2512;
	add.s64 	%rd2514, %rd2513, %rd2508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1716,%dummy}, %rd2503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1717}, %rd2503;
	}
	shf.r.wrap.b32 	%r1718, %r1717, %r1716, 14;
	shf.r.wrap.b32 	%r1719, %r1716, %r1717, 14;
	mov.b64 	%rd2515, {%r1719, %r1718};
	shf.r.wrap.b32 	%r1720, %r1717, %r1716, 18;
	shf.r.wrap.b32 	%r1721, %r1716, %r1717, 18;
	mov.b64 	%rd2516, {%r1721, %r1720};
	xor.b64  	%rd2517, %rd2516, %rd2515;
	shf.l.wrap.b32 	%r1722, %r1716, %r1717, 23;
	shf.l.wrap.b32 	%r1723, %r1717, %r1716, 23;
	mov.b64 	%rd2518, {%r1723, %r1722};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	xor.b64  	%rd2520, %rd2479, %rd2247;
	and.b64  	%rd2521, %rd2503, %rd2520;
	xor.b64  	%rd2522, %rd2521, %rd2247;
	add.s64 	%rd2523, %rd2297, %rd2223;
	add.s64 	%rd2524, %rd2523, %rd86;
	add.s64 	%rd2525, %rd2524, %rd2522;
	add.s64 	%rd2526, %rd2525, %rd2519;
	add.s64 	%rd2527, %rd2526, %rd2234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1724,%dummy}, %rd2514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1725}, %rd2514;
	}
	shf.r.wrap.b32 	%r1726, %r1725, %r1724, 28;
	shf.r.wrap.b32 	%r1727, %r1724, %r1725, 28;
	mov.b64 	%rd2528, {%r1727, %r1726};
	shf.l.wrap.b32 	%r1728, %r1724, %r1725, 30;
	shf.l.wrap.b32 	%r1729, %r1725, %r1724, 30;
	mov.b64 	%rd2529, {%r1729, %r1728};
	xor.b64  	%rd2530, %rd2529, %rd2528;
	shf.l.wrap.b32 	%r1730, %r1724, %r1725, 25;
	shf.l.wrap.b32 	%r1731, %r1725, %r1724, 25;
	mov.b64 	%rd2531, {%r1731, %r1730};
	xor.b64  	%rd2532, %rd2530, %rd2531;
	xor.b64  	%rd2533, %rd2514, %rd2258;
	xor.b64  	%rd2534, %rd2514, %rd2490;
	and.b64  	%rd2535, %rd2534, %rd2533;
	xor.b64  	%rd2536, %rd2535, %rd2514;
	add.s64 	%rd2537, %rd2526, %rd2536;
	add.s64 	%rd2538, %rd2537, %rd2532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1732,%dummy}, %rd2527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1733}, %rd2527;
	}
	shf.r.wrap.b32 	%r1734, %r1733, %r1732, 14;
	shf.r.wrap.b32 	%r1735, %r1732, %r1733, 14;
	mov.b64 	%rd2539, {%r1735, %r1734};
	shf.r.wrap.b32 	%r1736, %r1733, %r1732, 18;
	shf.r.wrap.b32 	%r1737, %r1732, %r1733, 18;
	mov.b64 	%rd2540, {%r1737, %r1736};
	xor.b64  	%rd2541, %rd2540, %rd2539;
	shf.l.wrap.b32 	%r1738, %r1732, %r1733, 23;
	shf.l.wrap.b32 	%r1739, %r1733, %r1732, 23;
	mov.b64 	%rd2542, {%r1739, %r1738};
	xor.b64  	%rd2543, %rd2541, %rd2542;
	xor.b64  	%rd2544, %rd2503, %rd2479;
	and.b64  	%rd2545, %rd2527, %rd2544;
	xor.b64  	%rd2546, %rd2545, %rd2479;
	add.s64 	%rd2547, %rd2310, %rd2247;
	add.s64 	%rd2548, %rd2547, %rd87;
	add.s64 	%rd2549, %rd2548, %rd2546;
	add.s64 	%rd2550, %rd2549, %rd2543;
	add.s64 	%rd2551, %rd2550, %rd2258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1740,%dummy}, %rd2538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1741}, %rd2538;
	}
	shf.r.wrap.b32 	%r1742, %r1741, %r1740, 28;
	shf.r.wrap.b32 	%r1743, %r1740, %r1741, 28;
	mov.b64 	%rd2552, {%r1743, %r1742};
	shf.l.wrap.b32 	%r1744, %r1740, %r1741, 30;
	shf.l.wrap.b32 	%r1745, %r1741, %r1740, 30;
	mov.b64 	%rd2553, {%r1745, %r1744};
	xor.b64  	%rd2554, %rd2553, %rd2552;
	shf.l.wrap.b32 	%r1746, %r1740, %r1741, 25;
	shf.l.wrap.b32 	%r1747, %r1741, %r1740, 25;
	mov.b64 	%rd2555, {%r1747, %r1746};
	xor.b64  	%rd2556, %rd2554, %rd2555;
	xor.b64  	%rd2557, %rd2538, %rd2490;
	xor.b64  	%rd2558, %rd2538, %rd2514;
	and.b64  	%rd2559, %rd2558, %rd2557;
	xor.b64  	%rd2560, %rd2559, %rd2538;
	add.s64 	%rd2561, %rd2550, %rd2560;
	add.s64 	%rd2562, %rd2561, %rd2556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1748,%dummy}, %rd2551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1749}, %rd2551;
	}
	shf.r.wrap.b32 	%r1750, %r1749, %r1748, 14;
	shf.r.wrap.b32 	%r1751, %r1748, %r1749, 14;
	mov.b64 	%rd2563, {%r1751, %r1750};
	shf.r.wrap.b32 	%r1752, %r1749, %r1748, 18;
	shf.r.wrap.b32 	%r1753, %r1748, %r1749, 18;
	mov.b64 	%rd2564, {%r1753, %r1752};
	xor.b64  	%rd2565, %rd2564, %rd2563;
	shf.l.wrap.b32 	%r1754, %r1748, %r1749, 23;
	shf.l.wrap.b32 	%r1755, %r1749, %r1748, 23;
	mov.b64 	%rd2566, {%r1755, %r1754};
	xor.b64  	%rd2567, %rd2565, %rd2566;
	xor.b64  	%rd2568, %rd2527, %rd2503;
	and.b64  	%rd2569, %rd2551, %rd2568;
	xor.b64  	%rd2570, %rd2569, %rd2503;
	add.s64 	%rd2571, %rd2479, %rd2323;
	add.s64 	%rd2572, %rd2571, %rd88;
	add.s64 	%rd2573, %rd2572, %rd2570;
	add.s64 	%rd2574, %rd2573, %rd2567;
	add.s64 	%rd2575, %rd2574, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1756,%dummy}, %rd2562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1757}, %rd2562;
	}
	shf.r.wrap.b32 	%r1758, %r1757, %r1756, 28;
	shf.r.wrap.b32 	%r1759, %r1756, %r1757, 28;
	mov.b64 	%rd2576, {%r1759, %r1758};
	shf.l.wrap.b32 	%r1760, %r1756, %r1757, 30;
	shf.l.wrap.b32 	%r1761, %r1757, %r1756, 30;
	mov.b64 	%rd2577, {%r1761, %r1760};
	xor.b64  	%rd2578, %rd2577, %rd2576;
	shf.l.wrap.b32 	%r1762, %r1756, %r1757, 25;
	shf.l.wrap.b32 	%r1763, %r1757, %r1756, 25;
	mov.b64 	%rd2579, {%r1763, %r1762};
	xor.b64  	%rd2580, %rd2578, %rd2579;
	xor.b64  	%rd2581, %rd2562, %rd2514;
	xor.b64  	%rd2582, %rd2562, %rd2538;
	and.b64  	%rd2583, %rd2582, %rd2581;
	xor.b64  	%rd2584, %rd2583, %rd2562;
	add.s64 	%rd2585, %rd2574, %rd2584;
	add.s64 	%rd2586, %rd2585, %rd2580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1764,%dummy}, %rd2575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1765}, %rd2575;
	}
	shf.r.wrap.b32 	%r1766, %r1765, %r1764, 14;
	shf.r.wrap.b32 	%r1767, %r1764, %r1765, 14;
	mov.b64 	%rd2587, {%r1767, %r1766};
	shf.r.wrap.b32 	%r1768, %r1765, %r1764, 18;
	shf.r.wrap.b32 	%r1769, %r1764, %r1765, 18;
	mov.b64 	%rd2588, {%r1769, %r1768};
	xor.b64  	%rd2589, %rd2588, %rd2587;
	shf.l.wrap.b32 	%r1770, %r1764, %r1765, 23;
	shf.l.wrap.b32 	%r1771, %r1765, %r1764, 23;
	mov.b64 	%rd2590, {%r1771, %r1770};
	xor.b64  	%rd2591, %rd2589, %rd2590;
	xor.b64  	%rd2592, %rd2551, %rd2527;
	and.b64  	%rd2593, %rd2575, %rd2592;
	xor.b64  	%rd2594, %rd2593, %rd2527;
	add.s64 	%rd2595, %rd2503, %rd2336;
	add.s64 	%rd2596, %rd2595, %rd89;
	add.s64 	%rd2597, %rd2596, %rd2594;
	add.s64 	%rd2598, %rd2597, %rd2591;
	add.s64 	%rd2599, %rd2598, %rd2514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1772,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1773}, %rd2586;
	}
	shf.r.wrap.b32 	%r1774, %r1773, %r1772, 28;
	shf.r.wrap.b32 	%r1775, %r1772, %r1773, 28;
	mov.b64 	%rd2600, {%r1775, %r1774};
	shf.l.wrap.b32 	%r1776, %r1772, %r1773, 30;
	shf.l.wrap.b32 	%r1777, %r1773, %r1772, 30;
	mov.b64 	%rd2601, {%r1777, %r1776};
	xor.b64  	%rd2602, %rd2601, %rd2600;
	shf.l.wrap.b32 	%r1778, %r1772, %r1773, 25;
	shf.l.wrap.b32 	%r1779, %r1773, %r1772, 25;
	mov.b64 	%rd2603, {%r1779, %r1778};
	xor.b64  	%rd2604, %rd2602, %rd2603;
	xor.b64  	%rd2605, %rd2586, %rd2538;
	xor.b64  	%rd2606, %rd2586, %rd2562;
	and.b64  	%rd2607, %rd2606, %rd2605;
	xor.b64  	%rd2608, %rd2607, %rd2586;
	add.s64 	%rd2609, %rd2598, %rd2608;
	add.s64 	%rd2610, %rd2609, %rd2604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1780,%dummy}, %rd2599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1781}, %rd2599;
	}
	shf.r.wrap.b32 	%r1782, %r1781, %r1780, 14;
	shf.r.wrap.b32 	%r1783, %r1780, %r1781, 14;
	mov.b64 	%rd2611, {%r1783, %r1782};
	shf.r.wrap.b32 	%r1784, %r1781, %r1780, 18;
	shf.r.wrap.b32 	%r1785, %r1780, %r1781, 18;
	mov.b64 	%rd2612, {%r1785, %r1784};
	xor.b64  	%rd2613, %rd2612, %rd2611;
	shf.l.wrap.b32 	%r1786, %r1780, %r1781, 23;
	shf.l.wrap.b32 	%r1787, %r1781, %r1780, 23;
	mov.b64 	%rd2614, {%r1787, %r1786};
	xor.b64  	%rd2615, %rd2613, %rd2614;
	xor.b64  	%rd2616, %rd2575, %rd2551;
	and.b64  	%rd2617, %rd2599, %rd2616;
	xor.b64  	%rd2618, %rd2617, %rd2551;
	add.s64 	%rd2619, %rd2527, %rd2349;
	add.s64 	%rd2620, %rd2619, %rd90;
	add.s64 	%rd2621, %rd2620, %rd2618;
	add.s64 	%rd2622, %rd2621, %rd2615;
	add.s64 	%rd2623, %rd2622, %rd2538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1788,%dummy}, %rd2610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1789}, %rd2610;
	}
	shf.r.wrap.b32 	%r1790, %r1789, %r1788, 28;
	shf.r.wrap.b32 	%r1791, %r1788, %r1789, 28;
	mov.b64 	%rd2624, {%r1791, %r1790};
	shf.l.wrap.b32 	%r1792, %r1788, %r1789, 30;
	shf.l.wrap.b32 	%r1793, %r1789, %r1788, 30;
	mov.b64 	%rd2625, {%r1793, %r1792};
	xor.b64  	%rd2626, %rd2625, %rd2624;
	shf.l.wrap.b32 	%r1794, %r1788, %r1789, 25;
	shf.l.wrap.b32 	%r1795, %r1789, %r1788, 25;
	mov.b64 	%rd2627, {%r1795, %r1794};
	xor.b64  	%rd2628, %rd2626, %rd2627;
	xor.b64  	%rd2629, %rd2610, %rd2562;
	xor.b64  	%rd2630, %rd2610, %rd2586;
	and.b64  	%rd2631, %rd2630, %rd2629;
	xor.b64  	%rd2632, %rd2631, %rd2610;
	add.s64 	%rd2633, %rd2622, %rd2632;
	add.s64 	%rd2634, %rd2633, %rd2628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1796,%dummy}, %rd2623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1797}, %rd2623;
	}
	shf.r.wrap.b32 	%r1798, %r1797, %r1796, 14;
	shf.r.wrap.b32 	%r1799, %r1796, %r1797, 14;
	mov.b64 	%rd2635, {%r1799, %r1798};
	shf.r.wrap.b32 	%r1800, %r1797, %r1796, 18;
	shf.r.wrap.b32 	%r1801, %r1796, %r1797, 18;
	mov.b64 	%rd2636, {%r1801, %r1800};
	xor.b64  	%rd2637, %rd2636, %rd2635;
	shf.l.wrap.b32 	%r1802, %r1796, %r1797, 23;
	shf.l.wrap.b32 	%r1803, %r1797, %r1796, 23;
	mov.b64 	%rd2638, {%r1803, %r1802};
	xor.b64  	%rd2639, %rd2637, %rd2638;
	xor.b64  	%rd2640, %rd2599, %rd2575;
	and.b64  	%rd2641, %rd2623, %rd2640;
	xor.b64  	%rd2642, %rd2641, %rd2575;
	add.s64 	%rd2643, %rd2551, %rd2362;
	add.s64 	%rd2644, %rd2643, %rd91;
	add.s64 	%rd2645, %rd2644, %rd2642;
	add.s64 	%rd2646, %rd2645, %rd2639;
	add.s64 	%rd2647, %rd2646, %rd2562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1804,%dummy}, %rd2634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1805}, %rd2634;
	}
	shf.r.wrap.b32 	%r1806, %r1805, %r1804, 28;
	shf.r.wrap.b32 	%r1807, %r1804, %r1805, 28;
	mov.b64 	%rd2648, {%r1807, %r1806};
	shf.l.wrap.b32 	%r1808, %r1804, %r1805, 30;
	shf.l.wrap.b32 	%r1809, %r1805, %r1804, 30;
	mov.b64 	%rd2649, {%r1809, %r1808};
	xor.b64  	%rd2650, %rd2649, %rd2648;
	shf.l.wrap.b32 	%r1810, %r1804, %r1805, 25;
	shf.l.wrap.b32 	%r1811, %r1805, %r1804, 25;
	mov.b64 	%rd2651, {%r1811, %r1810};
	xor.b64  	%rd2652, %rd2650, %rd2651;
	xor.b64  	%rd2653, %rd2634, %rd2586;
	xor.b64  	%rd2654, %rd2634, %rd2610;
	and.b64  	%rd2655, %rd2654, %rd2653;
	xor.b64  	%rd2656, %rd2655, %rd2634;
	add.s64 	%rd2657, %rd2646, %rd2656;
	add.s64 	%rd2658, %rd2657, %rd2652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1812,%dummy}, %rd2647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1813}, %rd2647;
	}
	shf.r.wrap.b32 	%r1814, %r1813, %r1812, 14;
	shf.r.wrap.b32 	%r1815, %r1812, %r1813, 14;
	mov.b64 	%rd2659, {%r1815, %r1814};
	shf.r.wrap.b32 	%r1816, %r1813, %r1812, 18;
	shf.r.wrap.b32 	%r1817, %r1812, %r1813, 18;
	mov.b64 	%rd2660, {%r1817, %r1816};
	xor.b64  	%rd2661, %rd2660, %rd2659;
	shf.l.wrap.b32 	%r1818, %r1812, %r1813, 23;
	shf.l.wrap.b32 	%r1819, %r1813, %r1812, 23;
	mov.b64 	%rd2662, {%r1819, %r1818};
	xor.b64  	%rd2663, %rd2661, %rd2662;
	xor.b64  	%rd2664, %rd2623, %rd2599;
	and.b64  	%rd2665, %rd2647, %rd2664;
	xor.b64  	%rd2666, %rd2665, %rd2599;
	add.s64 	%rd2667, %rd2575, %rd2375;
	add.s64 	%rd2668, %rd2667, %rd92;
	add.s64 	%rd2669, %rd2668, %rd2666;
	add.s64 	%rd2670, %rd2669, %rd2663;
	add.s64 	%rd2671, %rd2670, %rd2586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1820,%dummy}, %rd2658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1821}, %rd2658;
	}
	shf.r.wrap.b32 	%r1822, %r1821, %r1820, 28;
	shf.r.wrap.b32 	%r1823, %r1820, %r1821, 28;
	mov.b64 	%rd2672, {%r1823, %r1822};
	shf.l.wrap.b32 	%r1824, %r1820, %r1821, 30;
	shf.l.wrap.b32 	%r1825, %r1821, %r1820, 30;
	mov.b64 	%rd2673, {%r1825, %r1824};
	xor.b64  	%rd2674, %rd2673, %rd2672;
	shf.l.wrap.b32 	%r1826, %r1820, %r1821, 25;
	shf.l.wrap.b32 	%r1827, %r1821, %r1820, 25;
	mov.b64 	%rd2675, {%r1827, %r1826};
	xor.b64  	%rd2676, %rd2674, %rd2675;
	xor.b64  	%rd2677, %rd2658, %rd2610;
	xor.b64  	%rd2678, %rd2658, %rd2634;
	and.b64  	%rd2679, %rd2678, %rd2677;
	xor.b64  	%rd2680, %rd2679, %rd2658;
	add.s64 	%rd2681, %rd2670, %rd2680;
	add.s64 	%rd2682, %rd2681, %rd2676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1828,%dummy}, %rd2671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1829}, %rd2671;
	}
	shf.r.wrap.b32 	%r1830, %r1829, %r1828, 14;
	shf.r.wrap.b32 	%r1831, %r1828, %r1829, 14;
	mov.b64 	%rd2683, {%r1831, %r1830};
	shf.r.wrap.b32 	%r1832, %r1829, %r1828, 18;
	shf.r.wrap.b32 	%r1833, %r1828, %r1829, 18;
	mov.b64 	%rd2684, {%r1833, %r1832};
	xor.b64  	%rd2685, %rd2684, %rd2683;
	shf.l.wrap.b32 	%r1834, %r1828, %r1829, 23;
	shf.l.wrap.b32 	%r1835, %r1829, %r1828, 23;
	mov.b64 	%rd2686, {%r1835, %r1834};
	xor.b64  	%rd2687, %rd2685, %rd2686;
	xor.b64  	%rd2688, %rd2647, %rd2623;
	and.b64  	%rd2689, %rd2671, %rd2688;
	xor.b64  	%rd2690, %rd2689, %rd2623;
	add.s64 	%rd2691, %rd2599, %rd2388;
	add.s64 	%rd2692, %rd2691, %rd93;
	add.s64 	%rd2693, %rd2692, %rd2690;
	add.s64 	%rd2694, %rd2693, %rd2687;
	add.s64 	%rd2695, %rd2694, %rd2610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1836,%dummy}, %rd2682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1837}, %rd2682;
	}
	shf.r.wrap.b32 	%r1838, %r1837, %r1836, 28;
	shf.r.wrap.b32 	%r1839, %r1836, %r1837, 28;
	mov.b64 	%rd2696, {%r1839, %r1838};
	shf.l.wrap.b32 	%r1840, %r1836, %r1837, 30;
	shf.l.wrap.b32 	%r1841, %r1837, %r1836, 30;
	mov.b64 	%rd2697, {%r1841, %r1840};
	xor.b64  	%rd2698, %rd2697, %rd2696;
	shf.l.wrap.b32 	%r1842, %r1836, %r1837, 25;
	shf.l.wrap.b32 	%r1843, %r1837, %r1836, 25;
	mov.b64 	%rd2699, {%r1843, %r1842};
	xor.b64  	%rd2700, %rd2698, %rd2699;
	xor.b64  	%rd2701, %rd2682, %rd2634;
	xor.b64  	%rd2702, %rd2682, %rd2658;
	and.b64  	%rd2703, %rd2702, %rd2701;
	xor.b64  	%rd2704, %rd2703, %rd2682;
	add.s64 	%rd2705, %rd2694, %rd2704;
	add.s64 	%rd2706, %rd2705, %rd2700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1844,%dummy}, %rd2695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1845}, %rd2695;
	}
	shf.r.wrap.b32 	%r1846, %r1845, %r1844, 14;
	shf.r.wrap.b32 	%r1847, %r1844, %r1845, 14;
	mov.b64 	%rd2707, {%r1847, %r1846};
	shf.r.wrap.b32 	%r1848, %r1845, %r1844, 18;
	shf.r.wrap.b32 	%r1849, %r1844, %r1845, 18;
	mov.b64 	%rd2708, {%r1849, %r1848};
	xor.b64  	%rd2709, %rd2708, %rd2707;
	shf.l.wrap.b32 	%r1850, %r1844, %r1845, 23;
	shf.l.wrap.b32 	%r1851, %r1845, %r1844, 23;
	mov.b64 	%rd2710, {%r1851, %r1850};
	xor.b64  	%rd2711, %rd2709, %rd2710;
	xor.b64  	%rd2712, %rd2671, %rd2647;
	and.b64  	%rd2713, %rd2695, %rd2712;
	xor.b64  	%rd2714, %rd2713, %rd2647;
	add.s64 	%rd2715, %rd2623, %rd2401;
	add.s64 	%rd2716, %rd2715, %rd94;
	add.s64 	%rd2717, %rd2716, %rd2714;
	add.s64 	%rd2718, %rd2717, %rd2711;
	add.s64 	%rd2719, %rd2718, %rd2634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1852,%dummy}, %rd2706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1853}, %rd2706;
	}
	shf.r.wrap.b32 	%r1854, %r1853, %r1852, 28;
	shf.r.wrap.b32 	%r1855, %r1852, %r1853, 28;
	mov.b64 	%rd2720, {%r1855, %r1854};
	shf.l.wrap.b32 	%r1856, %r1852, %r1853, 30;
	shf.l.wrap.b32 	%r1857, %r1853, %r1852, 30;
	mov.b64 	%rd2721, {%r1857, %r1856};
	xor.b64  	%rd2722, %rd2721, %rd2720;
	shf.l.wrap.b32 	%r1858, %r1852, %r1853, 25;
	shf.l.wrap.b32 	%r1859, %r1853, %r1852, 25;
	mov.b64 	%rd2723, {%r1859, %r1858};
	xor.b64  	%rd2724, %rd2722, %rd2723;
	xor.b64  	%rd2725, %rd2706, %rd2658;
	xor.b64  	%rd2726, %rd2706, %rd2682;
	and.b64  	%rd2727, %rd2726, %rd2725;
	xor.b64  	%rd2728, %rd2727, %rd2706;
	add.s64 	%rd2729, %rd2718, %rd2728;
	add.s64 	%rd2730, %rd2729, %rd2724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1860,%dummy}, %rd2719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1861}, %rd2719;
	}
	shf.r.wrap.b32 	%r1862, %r1861, %r1860, 14;
	shf.r.wrap.b32 	%r1863, %r1860, %r1861, 14;
	mov.b64 	%rd2731, {%r1863, %r1862};
	shf.r.wrap.b32 	%r1864, %r1861, %r1860, 18;
	shf.r.wrap.b32 	%r1865, %r1860, %r1861, 18;
	mov.b64 	%rd2732, {%r1865, %r1864};
	xor.b64  	%rd2733, %rd2732, %rd2731;
	shf.l.wrap.b32 	%r1866, %r1860, %r1861, 23;
	shf.l.wrap.b32 	%r1867, %r1861, %r1860, 23;
	mov.b64 	%rd2734, {%r1867, %r1866};
	xor.b64  	%rd2735, %rd2733, %rd2734;
	xor.b64  	%rd2736, %rd2695, %rd2671;
	and.b64  	%rd2737, %rd2719, %rd2736;
	xor.b64  	%rd2738, %rd2737, %rd2671;
	add.s64 	%rd2739, %rd2647, %rd2414;
	add.s64 	%rd2740, %rd2739, %rd95;
	add.s64 	%rd2741, %rd2740, %rd2738;
	add.s64 	%rd2742, %rd2741, %rd2735;
	add.s64 	%rd2743, %rd2742, %rd2658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1868,%dummy}, %rd2730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1869}, %rd2730;
	}
	shf.r.wrap.b32 	%r1870, %r1869, %r1868, 28;
	shf.r.wrap.b32 	%r1871, %r1868, %r1869, 28;
	mov.b64 	%rd2744, {%r1871, %r1870};
	shf.l.wrap.b32 	%r1872, %r1868, %r1869, 30;
	shf.l.wrap.b32 	%r1873, %r1869, %r1868, 30;
	mov.b64 	%rd2745, {%r1873, %r1872};
	xor.b64  	%rd2746, %rd2745, %rd2744;
	shf.l.wrap.b32 	%r1874, %r1868, %r1869, 25;
	shf.l.wrap.b32 	%r1875, %r1869, %r1868, 25;
	mov.b64 	%rd2747, {%r1875, %r1874};
	xor.b64  	%rd2748, %rd2746, %rd2747;
	xor.b64  	%rd2749, %rd2730, %rd2682;
	xor.b64  	%rd2750, %rd2730, %rd2706;
	and.b64  	%rd2751, %rd2750, %rd2749;
	xor.b64  	%rd2752, %rd2751, %rd2730;
	add.s64 	%rd2753, %rd2742, %rd2752;
	add.s64 	%rd2754, %rd2753, %rd2748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1876,%dummy}, %rd2743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1877}, %rd2743;
	}
	shf.r.wrap.b32 	%r1878, %r1877, %r1876, 14;
	shf.r.wrap.b32 	%r1879, %r1876, %r1877, 14;
	mov.b64 	%rd2755, {%r1879, %r1878};
	shf.r.wrap.b32 	%r1880, %r1877, %r1876, 18;
	shf.r.wrap.b32 	%r1881, %r1876, %r1877, 18;
	mov.b64 	%rd2756, {%r1881, %r1880};
	xor.b64  	%rd2757, %rd2756, %rd2755;
	shf.l.wrap.b32 	%r1882, %r1876, %r1877, 23;
	shf.l.wrap.b32 	%r1883, %r1877, %r1876, 23;
	mov.b64 	%rd2758, {%r1883, %r1882};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	xor.b64  	%rd2760, %rd2719, %rd2695;
	and.b64  	%rd2761, %rd2743, %rd2760;
	xor.b64  	%rd2762, %rd2761, %rd2695;
	add.s64 	%rd2763, %rd2671, %rd2427;
	add.s64 	%rd2764, %rd2763, %rd96;
	add.s64 	%rd2765, %rd2764, %rd2762;
	add.s64 	%rd2766, %rd2765, %rd2759;
	add.s64 	%rd2767, %rd2766, %rd2682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1884,%dummy}, %rd2754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1885}, %rd2754;
	}
	shf.r.wrap.b32 	%r1886, %r1885, %r1884, 28;
	shf.r.wrap.b32 	%r1887, %r1884, %r1885, 28;
	mov.b64 	%rd2768, {%r1887, %r1886};
	shf.l.wrap.b32 	%r1888, %r1884, %r1885, 30;
	shf.l.wrap.b32 	%r1889, %r1885, %r1884, 30;
	mov.b64 	%rd2769, {%r1889, %r1888};
	xor.b64  	%rd2770, %rd2769, %rd2768;
	shf.l.wrap.b32 	%r1890, %r1884, %r1885, 25;
	shf.l.wrap.b32 	%r1891, %r1885, %r1884, 25;
	mov.b64 	%rd2771, {%r1891, %r1890};
	xor.b64  	%rd2772, %rd2770, %rd2771;
	xor.b64  	%rd2773, %rd2754, %rd2706;
	xor.b64  	%rd2774, %rd2754, %rd2730;
	and.b64  	%rd2775, %rd2774, %rd2773;
	xor.b64  	%rd2776, %rd2775, %rd2754;
	add.s64 	%rd2777, %rd2766, %rd2776;
	add.s64 	%rd2778, %rd2777, %rd2772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1892,%dummy}, %rd2767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1893}, %rd2767;
	}
	shf.r.wrap.b32 	%r1894, %r1893, %r1892, 14;
	shf.r.wrap.b32 	%r1895, %r1892, %r1893, 14;
	mov.b64 	%rd2779, {%r1895, %r1894};
	shf.r.wrap.b32 	%r1896, %r1893, %r1892, 18;
	shf.r.wrap.b32 	%r1897, %r1892, %r1893, 18;
	mov.b64 	%rd2780, {%r1897, %r1896};
	xor.b64  	%rd2781, %rd2780, %rd2779;
	shf.l.wrap.b32 	%r1898, %r1892, %r1893, 23;
	shf.l.wrap.b32 	%r1899, %r1893, %r1892, 23;
	mov.b64 	%rd2782, {%r1899, %r1898};
	xor.b64  	%rd2783, %rd2781, %rd2782;
	xor.b64  	%rd2784, %rd2743, %rd2719;
	and.b64  	%rd2785, %rd2767, %rd2784;
	xor.b64  	%rd2786, %rd2785, %rd2719;
	add.s64 	%rd2787, %rd2695, %rd2440;
	add.s64 	%rd2788, %rd2787, %rd97;
	add.s64 	%rd2789, %rd2788, %rd2786;
	add.s64 	%rd2790, %rd2789, %rd2783;
	add.s64 	%rd2791, %rd2790, %rd2706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1900,%dummy}, %rd2778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd2778;
	}
	shf.r.wrap.b32 	%r1902, %r1901, %r1900, 28;
	shf.r.wrap.b32 	%r1903, %r1900, %r1901, 28;
	mov.b64 	%rd2792, {%r1903, %r1902};
	shf.l.wrap.b32 	%r1904, %r1900, %r1901, 30;
	shf.l.wrap.b32 	%r1905, %r1901, %r1900, 30;
	mov.b64 	%rd2793, {%r1905, %r1904};
	xor.b64  	%rd2794, %rd2793, %rd2792;
	shf.l.wrap.b32 	%r1906, %r1900, %r1901, 25;
	shf.l.wrap.b32 	%r1907, %r1901, %r1900, 25;
	mov.b64 	%rd2795, {%r1907, %r1906};
	xor.b64  	%rd2796, %rd2794, %rd2795;
	xor.b64  	%rd2797, %rd2778, %rd2730;
	xor.b64  	%rd2798, %rd2778, %rd2754;
	and.b64  	%rd2799, %rd2798, %rd2797;
	xor.b64  	%rd2800, %rd2799, %rd2778;
	add.s64 	%rd2801, %rd2790, %rd2800;
	add.s64 	%rd2802, %rd2801, %rd2796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1908,%dummy}, %rd2791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1909}, %rd2791;
	}
	shf.r.wrap.b32 	%r1910, %r1909, %r1908, 14;
	shf.r.wrap.b32 	%r1911, %r1908, %r1909, 14;
	mov.b64 	%rd2803, {%r1911, %r1910};
	shf.r.wrap.b32 	%r1912, %r1909, %r1908, 18;
	shf.r.wrap.b32 	%r1913, %r1908, %r1909, 18;
	mov.b64 	%rd2804, {%r1913, %r1912};
	xor.b64  	%rd2805, %rd2804, %rd2803;
	shf.l.wrap.b32 	%r1914, %r1908, %r1909, 23;
	shf.l.wrap.b32 	%r1915, %r1909, %r1908, 23;
	mov.b64 	%rd2806, {%r1915, %r1914};
	xor.b64  	%rd2807, %rd2805, %rd2806;
	xor.b64  	%rd2808, %rd2767, %rd2743;
	and.b64  	%rd2809, %rd2791, %rd2808;
	xor.b64  	%rd2810, %rd2809, %rd2743;
	add.s64 	%rd2811, %rd2719, %rd2453;
	add.s64 	%rd2812, %rd2811, %rd98;
	add.s64 	%rd2813, %rd2812, %rd2810;
	add.s64 	%rd2814, %rd2813, %rd2807;
	add.s64 	%rd2815, %rd2814, %rd2730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1916,%dummy}, %rd2802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd2802;
	}
	shf.r.wrap.b32 	%r1918, %r1917, %r1916, 28;
	shf.r.wrap.b32 	%r1919, %r1916, %r1917, 28;
	mov.b64 	%rd2816, {%r1919, %r1918};
	shf.l.wrap.b32 	%r1920, %r1916, %r1917, 30;
	shf.l.wrap.b32 	%r1921, %r1917, %r1916, 30;
	mov.b64 	%rd2817, {%r1921, %r1920};
	xor.b64  	%rd2818, %rd2817, %rd2816;
	shf.l.wrap.b32 	%r1922, %r1916, %r1917, 25;
	shf.l.wrap.b32 	%r1923, %r1917, %r1916, 25;
	mov.b64 	%rd2819, {%r1923, %r1922};
	xor.b64  	%rd2820, %rd2818, %rd2819;
	xor.b64  	%rd2821, %rd2802, %rd2754;
	xor.b64  	%rd2822, %rd2802, %rd2778;
	and.b64  	%rd2823, %rd2822, %rd2821;
	xor.b64  	%rd2824, %rd2823, %rd2802;
	add.s64 	%rd2825, %rd2814, %rd2824;
	add.s64 	%rd2826, %rd2825, %rd2820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd2815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd2815;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 14;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 14;
	mov.b64 	%rd2827, {%r1927, %r1926};
	shf.r.wrap.b32 	%r1928, %r1925, %r1924, 18;
	shf.r.wrap.b32 	%r1929, %r1924, %r1925, 18;
	mov.b64 	%rd2828, {%r1929, %r1928};
	xor.b64  	%rd2829, %rd2828, %rd2827;
	shf.l.wrap.b32 	%r1930, %r1924, %r1925, 23;
	shf.l.wrap.b32 	%r1931, %r1925, %r1924, 23;
	mov.b64 	%rd2830, {%r1931, %r1930};
	xor.b64  	%rd2831, %rd2829, %rd2830;
	xor.b64  	%rd2832, %rd2791, %rd2767;
	and.b64  	%rd2833, %rd2815, %rd2832;
	xor.b64  	%rd2834, %rd2833, %rd2767;
	add.s64 	%rd2835, %rd2743, %rd2466;
	add.s64 	%rd2836, %rd2835, %rd99;
	add.s64 	%rd2837, %rd2836, %rd2834;
	add.s64 	%rd2838, %rd2837, %rd2831;
	add.s64 	%rd2839, %rd2838, %rd2754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1932,%dummy}, %rd2826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd2826;
	}
	shf.r.wrap.b32 	%r1934, %r1933, %r1932, 28;
	shf.r.wrap.b32 	%r1935, %r1932, %r1933, 28;
	mov.b64 	%rd2840, {%r1935, %r1934};
	shf.l.wrap.b32 	%r1936, %r1932, %r1933, 30;
	shf.l.wrap.b32 	%r1937, %r1933, %r1932, 30;
	mov.b64 	%rd2841, {%r1937, %r1936};
	xor.b64  	%rd2842, %rd2841, %rd2840;
	shf.l.wrap.b32 	%r1938, %r1932, %r1933, 25;
	shf.l.wrap.b32 	%r1939, %r1933, %r1932, 25;
	mov.b64 	%rd2843, {%r1939, %r1938};
	xor.b64  	%rd2844, %rd2842, %rd2843;
	xor.b64  	%rd2845, %rd2826, %rd2778;
	xor.b64  	%rd2846, %rd2826, %rd2802;
	and.b64  	%rd2847, %rd2846, %rd2845;
	xor.b64  	%rd2848, %rd2847, %rd2826;
	add.s64 	%rd2849, %rd2838, %rd2848;
	add.s64 	%rd2850, %rd2849, %rd2844;
	add.s64 	%rd2851, %rd2850, 7640891576956012808;
	add.s64 	%rd2852, %rd2826, -4942790177534073029;
	add.s64 	%rd2853, %rd2802, 4354685564936845355;
	add.s64 	%rd2854, %rd2778, -6534734903238641935;
	add.s64 	%rd2855, %rd2839, 5840696475078001361;
	add.s64 	%rd2856, %rd2815, -7276294671716946913;
	add.s64 	%rd2857, %rd2791, 2270897969802886507;
	add.s64 	%rd2915, %rd2767, 6620516959819538809;
	shl.b64 	%rd2858, %rd2851, 32;
	shr.u64 	%rd2859, %rd2852, 32;
	or.b64  	%rd2914, %rd2858, %rd2859;
	shl.b64 	%rd2860, %rd2852, 32;
	shr.u64 	%rd2861, %rd2853, 32;
	or.b64  	%rd2913, %rd2860, %rd2861;
	shl.b64 	%rd2862, %rd2853, 32;
	shr.u64 	%rd2863, %rd2854, 32;
	or.b64  	%rd2912, %rd2862, %rd2863;
	shl.b64 	%rd2864, %rd2854, 32;
	shr.u64 	%rd2865, %rd2855, 32;
	or.b64  	%rd2919, %rd2864, %rd2865;
	shl.b64 	%rd2866, %rd2855, 32;
	shr.u64 	%rd2867, %rd2856, 32;
	or.b64  	%rd2918, %rd2866, %rd2867;
	shl.b64 	%rd2868, %rd2856, 32;
	shr.u64 	%rd2869, %rd2857, 32;
	or.b64  	%rd2917, %rd2868, %rd2869;
	shl.b64 	%rd2870, %rd2857, 32;
	shr.u64 	%rd2871, %rd2915, 32;
	or.b64  	%rd2916, %rd2870, %rd2871;
	add.s32 	%r1940, %r1940, 1;
	shr.u64 	%rd2911, %rd2851, 32;
	add.s32 	%r1941, %r1941, 1;
	setp.lt.u32	%p3, %r1941, %r7;
	@%p3 bra 	BB2_3;

BB2_4:
	add.s64 	%rd2901, %rd1, 56;
	add.s64 	%rd2900, %rd1, 48;
	add.s64 	%rd2899, %rd1, 40;
	add.s64 	%rd2898, %rd1, 32;
	add.s64 	%rd2897, %rd1, 24;
	add.s64 	%rd2896, %rd1, 16;
	add.s64 	%rd2895, %rd1, 8;
	shr.u64 	%rd2872, %rd2914, 32;
	shl.b64 	%rd2873, %rd2911, 32;
	or.b64  	%rd2874, %rd2873, %rd2872;
	st.global.u64 	[%rd1], %rd2874;
	shr.u64 	%rd2875, %rd2913, 32;
	shl.b64 	%rd2876, %rd2914, 32;
	or.b64  	%rd2877, %rd2875, %rd2876;
	st.global.u64 	[%rd2895], %rd2877;
	shr.u64 	%rd2878, %rd2912, 32;
	shl.b64 	%rd2879, %rd2913, 32;
	or.b64  	%rd2880, %rd2878, %rd2879;
	st.global.u64 	[%rd2896], %rd2880;
	shr.u64 	%rd2881, %rd2919, 32;
	shl.b64 	%rd2882, %rd2912, 32;
	or.b64  	%rd2883, %rd2882, %rd2881;
	st.global.u64 	[%rd2897], %rd2883;
	shr.u64 	%rd2884, %rd2918, 32;
	shl.b64 	%rd2885, %rd2919, 32;
	or.b64  	%rd2886, %rd2884, %rd2885;
	st.global.u64 	[%rd2898], %rd2886;
	shr.u64 	%rd2887, %rd2917, 32;
	shl.b64 	%rd2888, %rd2918, 32;
	or.b64  	%rd2889, %rd2887, %rd2888;
	st.global.u64 	[%rd2899], %rd2889;
	shr.u64 	%rd2890, %rd2916, 32;
	shl.b64 	%rd2891, %rd2917, 32;
	or.b64  	%rd2892, %rd2890, %rd2891;
	st.global.u64 	[%rd2900], %rd2892;
	and.b64  	%rd2893, %rd2915, 4294967295;
	bfi.b64 	%rd2894, %rd2916, %rd2893, 32, 32;
	st.global.u64 	[%rd2901], %rd2894;

BB2_5:
	ret;
}

	// .globl	m09600_comp
.entry m09600_comp(
	.param .u64 .ptr .global .align 4 m09600_comp_param_0,
	.param .u64 .ptr .global .align 4 m09600_comp_param_1,
	.param .u64 .ptr .global .align 4 m09600_comp_param_2,
	.param .u64 .ptr .global .align 4 m09600_comp_param_3,
	.param .u64 .ptr .global .align 8 m09600_comp_param_4,
	.param .u64 .ptr .global .align 1 m09600_comp_param_5,
	.param .u64 .ptr .global .align 4 m09600_comp_param_6,
	.param .u64 .ptr .global .align 4 m09600_comp_param_7,
	.param .u64 .ptr .global .align 4 m09600_comp_param_8,
	.param .u64 .ptr .global .align 4 m09600_comp_param_9,
	.param .u64 .ptr .global .align 4 m09600_comp_param_10,
	.param .u64 .ptr .global .align 4 m09600_comp_param_11,
	.param .u64 .ptr .global .align 4 m09600_comp_param_12,
	.param .u64 .ptr .global .align 4 m09600_comp_param_13,
	.param .u64 .ptr .global .align 4 m09600_comp_param_14,
	.param .u64 .ptr .global .align 4 m09600_comp_param_15,
	.param .u64 .ptr .global .align 4 m09600_comp_param_16,
	.param .u64 .ptr .global .align 4 m09600_comp_param_17,
	.param .u64 .ptr .global .align 4 m09600_comp_param_18,
	.param .u64 .ptr .global .align 4 m09600_comp_param_19,
	.param .u64 .ptr .global .align 4 m09600_comp_param_20,
	.param .u64 .ptr .global .align 4 m09600_comp_param_21,
	.param .u64 .ptr .global .align 4 m09600_comp_param_22,
	.param .u64 .ptr .global .align 4 m09600_comp_param_23,
	.param .u32 m09600_comp_param_24,
	.param .u32 m09600_comp_param_25,
	.param .u32 m09600_comp_param_26,
	.param .u32 m09600_comp_param_27,
	.param .u32 m09600_comp_param_28,
	.param .u32 m09600_comp_param_29,
	.param .u32 m09600_comp_param_30,
	.param .u32 m09600_comp_param_31,
	.param .u32 m09600_comp_param_32,
	.param .u32 m09600_comp_param_33,
	.param .u32 m09600_comp_param_34
)
{
	.local .align 16 .b8 	__local_depot3[240];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<29>;
	.reg .b32 	%r<8209>;
	.reg .b64 	%rd<10082>;
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_td0[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_td1[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_td2[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_td3[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_td4[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_te0[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_te1[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_te2[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_te3[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_te4[1024];

	mov.u64 	%rd10081, __local_depot3;
	cvta.local.u64 	%SP, %rd10081;
	ld.param.u64 	%rd26, [m09600_comp_param_4];
	ld.param.u64 	%rd39, [m09600_comp_param_18];
	ld.param.u32 	%r96, [m09600_comp_param_32];
	ld.param.u32 	%r97, [m09600_comp_param_34];
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd10079, %rd41;
	mov.u32 	%r98, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.b32	%r99, %envreg3;
	mad.lo.s32 	%r100, %r98, %r1, %r99;
	mov.u32 	%r8186, %tid.x;
	add.s32 	%r3, %r100, %r8186;
	setp.gt.u32	%p1, %r8186, 255;
	@%p1 bra 	BB3_2;

BB3_1:
	mul.wide.u32 	%rd42, %r8186, 4;
	mov.u64 	%rd43, td0;
	add.s64 	%rd44, %rd43, %rd42;
	ld.const.u32 	%r101, [%rd44];
	mov.u64 	%rd45, m09600_comp$s_td0;
	add.s64 	%rd46, %rd45, %rd42;
	st.shared.u32 	[%rd46], %r101;
	mov.u64 	%rd47, td1;
	add.s64 	%rd48, %rd47, %rd42;
	ld.const.u32 	%r102, [%rd48];
	mov.u64 	%rd49, m09600_comp$s_td1;
	add.s64 	%rd50, %rd49, %rd42;
	st.shared.u32 	[%rd50], %r102;
	mov.u64 	%rd51, td2;
	add.s64 	%rd52, %rd51, %rd42;
	ld.const.u32 	%r103, [%rd52];
	mov.u64 	%rd53, m09600_comp$s_td2;
	add.s64 	%rd54, %rd53, %rd42;
	st.shared.u32 	[%rd54], %r103;
	mov.u64 	%rd55, td3;
	add.s64 	%rd56, %rd55, %rd42;
	ld.const.u32 	%r104, [%rd56];
	mov.u64 	%rd57, m09600_comp$s_td3;
	add.s64 	%rd58, %rd57, %rd42;
	st.shared.u32 	[%rd58], %r104;
	mov.u64 	%rd59, td4;
	add.s64 	%rd60, %rd59, %rd42;
	ld.const.u32 	%r105, [%rd60];
	mov.u64 	%rd61, m09600_comp$s_td4;
	add.s64 	%rd62, %rd61, %rd42;
	st.shared.u32 	[%rd62], %r105;
	mov.u64 	%rd63, te0;
	add.s64 	%rd64, %rd63, %rd42;
	ld.const.u32 	%r106, [%rd64];
	mov.u64 	%rd65, m09600_comp$s_te0;
	add.s64 	%rd66, %rd65, %rd42;
	st.shared.u32 	[%rd66], %r106;
	mov.u64 	%rd67, te1;
	add.s64 	%rd68, %rd67, %rd42;
	ld.const.u32 	%r107, [%rd68];
	mov.u64 	%rd69, m09600_comp$s_te1;
	add.s64 	%rd70, %rd69, %rd42;
	st.shared.u32 	[%rd70], %r107;
	mov.u64 	%rd71, te2;
	add.s64 	%rd72, %rd71, %rd42;
	ld.const.u32 	%r108, [%rd72];
	mov.u64 	%rd73, m09600_comp$s_te2;
	add.s64 	%rd74, %rd73, %rd42;
	st.shared.u32 	[%rd74], %r108;
	mov.u64 	%rd75, te3;
	add.s64 	%rd76, %rd75, %rd42;
	ld.const.u32 	%r109, [%rd76];
	mov.u64 	%rd77, m09600_comp$s_te3;
	add.s64 	%rd78, %rd77, %rd42;
	st.shared.u32 	[%rd78], %r109;
	mov.u64 	%rd79, te4;
	add.s64 	%rd80, %rd79, %rd42;
	ld.const.u32 	%r110, [%rd80];
	mov.u64 	%rd81, m09600_comp$s_te4;
	add.s64 	%rd82, %rd81, %rd42;
	st.shared.u32 	[%rd82], %r110;
	add.s32 	%r8186, %r8186, %r1;
	setp.lt.u32	%p2, %r8186, 256;
	@%p2 bra 	BB3_1;

BB3_2:
	bar.sync 	0;
	setp.ge.u32	%p3, %r3, %r97;
	@%p3 bra 	BB3_37;

	mul.wide.u32 	%rd84, %r3, 64;
	add.s64 	%rd85, %rd26, %rd84;
	mov.u64 	%rd86, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r112,%dummy}, %rd86;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r113}, %rd86;
	}
	shf.r.wrap.b32 	%r114, %r113, %r112, 18;
	shf.r.wrap.b32 	%r115, %r112, %r113, 18;
	mov.b64 	%rd87, {%r115, %r114};
	shf.r.wrap.b32 	%r116, %r113, %r112, 14;
	shf.r.wrap.b32 	%r117, %r112, %r113, 14;
	mov.b64 	%rd88, {%r117, %r116};
	xor.b64  	%rd89, %rd87, %rd88;
	shf.l.wrap.b32 	%r118, %r112, %r113, 23;
	shf.l.wrap.b32 	%r119, %r113, %r112, 23;
	mov.b64 	%rd90, {%r119, %r118};
	xor.b64  	%rd91, %rd89, %rd90;
	ld.global.u64 	%rd92, [%rd85];
	ld.const.u64 	%rd93, [k_sha512];
	add.s64 	%rd94, %rd92, %rd93;
	add.s64 	%rd95, %rd94, %rd91;
	mov.u64 	%rd96, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r120}, %rd96;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r121,%dummy}, %rd96;
	}
	shf.l.wrap.b32 	%r122, %r121, %r120, 30;
	shf.l.wrap.b32 	%r123, %r120, %r121, 30;
	mov.b64 	%rd97, {%r123, %r122};
	shf.r.wrap.b32 	%r124, %r120, %r121, 28;
	shf.r.wrap.b32 	%r125, %r121, %r120, 28;
	mov.b64 	%rd98, {%r125, %r124};
	xor.b64  	%rd99, %rd97, %rd98;
	shf.l.wrap.b32 	%r126, %r121, %r120, 25;
	shf.l.wrap.b32 	%r127, %r120, %r121, 25;
	mov.b64 	%rd100, {%r127, %r126};
	xor.b64  	%rd101, %rd99, %rd100;
	add.s64 	%rd102, %rd95, %rd101;
	add.s64 	%rd103, %rd95, 2357225248857953701;
	add.s64 	%rd104, %rd102, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r128,%dummy}, %rd103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r129}, %rd103;
	}
	shf.r.wrap.b32 	%r130, %r129, %r128, 14;
	shf.r.wrap.b32 	%r131, %r128, %r129, 14;
	mov.b64 	%rd105, {%r131, %r130};
	shf.r.wrap.b32 	%r132, %r129, %r128, 18;
	shf.r.wrap.b32 	%r133, %r128, %r129, 18;
	mov.b64 	%rd106, {%r133, %r132};
	xor.b64  	%rd107, %rd106, %rd105;
	shf.l.wrap.b32 	%r134, %r128, %r129, 23;
	shf.l.wrap.b32 	%r135, %r129, %r128, 23;
	mov.b64 	%rd108, {%r135, %r134};
	xor.b64  	%rd109, %rd107, %rd108;
	and.b64  	%rd110, %rd103, -3887949035690463538;
	xor.b64  	%rd111, %rd110, -7276294671716946913;
	ld.global.u64 	%rd112, [%rd85+8];
	ld.const.u64 	%rd113, [k_sha512+8];
	add.s64 	%rd114, %rd112, %rd113;
	add.s64 	%rd115, %rd114, 2270897969802886507;
	add.s64 	%rd116, %rd115, %rd111;
	add.s64 	%rd117, %rd116, %rd109;
	add.s64 	%rd118, %rd117, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r136,%dummy}, %rd104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r137}, %rd104;
	}
	shf.r.wrap.b32 	%r138, %r137, %r136, 28;
	shf.r.wrap.b32 	%r139, %r136, %r137, 28;
	mov.b64 	%rd119, {%r139, %r138};
	shf.l.wrap.b32 	%r140, %r136, %r137, 30;
	shf.l.wrap.b32 	%r141, %r137, %r136, 30;
	mov.b64 	%rd120, {%r141, %r140};
	xor.b64  	%rd121, %rd120, %rd119;
	shf.l.wrap.b32 	%r142, %r136, %r137, 25;
	shf.l.wrap.b32 	%r143, %r137, %r136, 25;
	mov.b64 	%rd122, {%r143, %r142};
	xor.b64  	%rd123, %rd121, %rd122;
	xor.b64  	%rd124, %rd104, -4942790177534073029;
	xor.b64  	%rd125, %rd104, 7640891576956012808;
	and.b64  	%rd126, %rd125, %rd124;
	xor.b64  	%rd127, %rd126, %rd104;
	add.s64 	%rd128, %rd117, %rd127;
	add.s64 	%rd129, %rd128, %rd123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r144,%dummy}, %rd118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r145}, %rd118;
	}
	shf.r.wrap.b32 	%r146, %r145, %r144, 14;
	shf.r.wrap.b32 	%r147, %r144, %r145, 14;
	mov.b64 	%rd130, {%r147, %r146};
	shf.r.wrap.b32 	%r148, %r145, %r144, 18;
	shf.r.wrap.b32 	%r149, %r144, %r145, 18;
	mov.b64 	%rd131, {%r149, %r148};
	xor.b64  	%rd132, %rd131, %rd130;
	shf.l.wrap.b32 	%r150, %r144, %r145, 23;
	shf.l.wrap.b32 	%r151, %r145, %r144, 23;
	mov.b64 	%rd133, {%r151, %r150};
	xor.b64  	%rd134, %rd132, %rd133;
	xor.b64  	%rd135, %rd103, 5840696475078001361;
	and.b64  	%rd136, %rd118, %rd135;
	xor.b64  	%rd137, %rd136, 5840696475078001361;
	ld.global.u64 	%rd138, [%rd85+16];
	ld.const.u64 	%rd139, [k_sha512+16];
	add.s64 	%rd140, %rd138, %rd139;
	add.s64 	%rd141, %rd140, -7276294671716946913;
	add.s64 	%rd142, %rd141, %rd137;
	add.s64 	%rd143, %rd142, %rd134;
	add.s64 	%rd144, %rd143, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r152,%dummy}, %rd129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r153}, %rd129;
	}
	shf.r.wrap.b32 	%r154, %r153, %r152, 28;
	shf.r.wrap.b32 	%r155, %r152, %r153, 28;
	mov.b64 	%rd145, {%r155, %r154};
	shf.l.wrap.b32 	%r156, %r152, %r153, 30;
	shf.l.wrap.b32 	%r157, %r153, %r152, 30;
	mov.b64 	%rd146, {%r157, %r156};
	xor.b64  	%rd147, %rd146, %rd145;
	shf.l.wrap.b32 	%r158, %r152, %r153, 25;
	shf.l.wrap.b32 	%r159, %r153, %r152, 25;
	mov.b64 	%rd148, {%r159, %r158};
	xor.b64  	%rd149, %rd147, %rd148;
	xor.b64  	%rd150, %rd129, 7640891576956012808;
	xor.b64  	%rd151, %rd129, %rd104;
	and.b64  	%rd152, %rd151, %rd150;
	xor.b64  	%rd153, %rd152, %rd129;
	add.s64 	%rd154, %rd143, %rd153;
	add.s64 	%rd155, %rd154, %rd149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r160,%dummy}, %rd144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd144;
	}
	shf.r.wrap.b32 	%r162, %r161, %r160, 14;
	shf.r.wrap.b32 	%r163, %r160, %r161, 14;
	mov.b64 	%rd156, {%r163, %r162};
	shf.r.wrap.b32 	%r164, %r161, %r160, 18;
	shf.r.wrap.b32 	%r165, %r160, %r161, 18;
	mov.b64 	%rd157, {%r165, %r164};
	xor.b64  	%rd158, %rd157, %rd156;
	shf.l.wrap.b32 	%r166, %r160, %r161, 23;
	shf.l.wrap.b32 	%r167, %r161, %r160, 23;
	mov.b64 	%rd159, {%r167, %r166};
	xor.b64  	%rd160, %rd158, %rd159;
	xor.b64  	%rd161, %rd118, %rd103;
	and.b64  	%rd162, %rd144, %rd161;
	xor.b64  	%rd163, %rd162, %rd103;
	ld.global.u64 	%rd164, [%rd85+24];
	ld.const.u64 	%rd165, [k_sha512+24];
	add.s64 	%rd166, %rd164, %rd165;
	add.s64 	%rd167, %rd166, 5840696475078001361;
	add.s64 	%rd168, %rd167, %rd163;
	add.s64 	%rd169, %rd168, %rd160;
	add.s64 	%rd170, %rd169, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r168,%dummy}, %rd155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r169}, %rd155;
	}
	shf.r.wrap.b32 	%r170, %r169, %r168, 28;
	shf.r.wrap.b32 	%r171, %r168, %r169, 28;
	mov.b64 	%rd171, {%r171, %r170};
	shf.l.wrap.b32 	%r172, %r168, %r169, 30;
	shf.l.wrap.b32 	%r173, %r169, %r168, 30;
	mov.b64 	%rd172, {%r173, %r172};
	xor.b64  	%rd173, %rd172, %rd171;
	shf.l.wrap.b32 	%r174, %r168, %r169, 25;
	shf.l.wrap.b32 	%r175, %r169, %r168, 25;
	mov.b64 	%rd174, {%r175, %r174};
	xor.b64  	%rd175, %rd173, %rd174;
	xor.b64  	%rd176, %rd155, %rd104;
	xor.b64  	%rd177, %rd155, %rd129;
	and.b64  	%rd178, %rd177, %rd176;
	xor.b64  	%rd179, %rd178, %rd155;
	add.s64 	%rd180, %rd169, %rd179;
	add.s64 	%rd181, %rd180, %rd175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r176,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r177}, %rd170;
	}
	shf.r.wrap.b32 	%r178, %r177, %r176, 14;
	shf.r.wrap.b32 	%r179, %r176, %r177, 14;
	mov.b64 	%rd182, {%r179, %r178};
	shf.r.wrap.b32 	%r180, %r177, %r176, 18;
	shf.r.wrap.b32 	%r181, %r176, %r177, 18;
	mov.b64 	%rd183, {%r181, %r180};
	xor.b64  	%rd184, %rd183, %rd182;
	shf.l.wrap.b32 	%r182, %r176, %r177, 23;
	shf.l.wrap.b32 	%r183, %r177, %r176, 23;
	mov.b64 	%rd185, {%r183, %r182};
	xor.b64  	%rd186, %rd184, %rd185;
	xor.b64  	%rd187, %rd144, %rd118;
	and.b64  	%rd188, %rd170, %rd187;
	xor.b64  	%rd189, %rd188, %rd118;
	ld.global.u64 	%rd190, [%rd85+32];
	add.s64 	%rd191, %rd103, %rd190;
	ld.const.u64 	%rd192, [k_sha512+32];
	add.s64 	%rd193, %rd191, %rd192;
	add.s64 	%rd194, %rd193, %rd189;
	add.s64 	%rd195, %rd194, %rd186;
	add.s64 	%rd196, %rd195, %rd104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r184,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r185}, %rd181;
	}
	shf.r.wrap.b32 	%r186, %r185, %r184, 28;
	shf.r.wrap.b32 	%r187, %r184, %r185, 28;
	mov.b64 	%rd197, {%r187, %r186};
	shf.l.wrap.b32 	%r188, %r184, %r185, 30;
	shf.l.wrap.b32 	%r189, %r185, %r184, 30;
	mov.b64 	%rd198, {%r189, %r188};
	xor.b64  	%rd199, %rd198, %rd197;
	shf.l.wrap.b32 	%r190, %r184, %r185, 25;
	shf.l.wrap.b32 	%r191, %r185, %r184, 25;
	mov.b64 	%rd200, {%r191, %r190};
	xor.b64  	%rd201, %rd199, %rd200;
	xor.b64  	%rd202, %rd181, %rd129;
	xor.b64  	%rd203, %rd181, %rd155;
	and.b64  	%rd204, %rd203, %rd202;
	xor.b64  	%rd205, %rd204, %rd181;
	add.s64 	%rd206, %rd195, %rd205;
	add.s64 	%rd207, %rd206, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r192,%dummy}, %rd196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r193}, %rd196;
	}
	shf.r.wrap.b32 	%r194, %r193, %r192, 14;
	shf.r.wrap.b32 	%r195, %r192, %r193, 14;
	mov.b64 	%rd208, {%r195, %r194};
	shf.r.wrap.b32 	%r196, %r193, %r192, 18;
	shf.r.wrap.b32 	%r197, %r192, %r193, 18;
	mov.b64 	%rd209, {%r197, %r196};
	xor.b64  	%rd210, %rd209, %rd208;
	shf.l.wrap.b32 	%r198, %r192, %r193, 23;
	shf.l.wrap.b32 	%r199, %r193, %r192, 23;
	mov.b64 	%rd211, {%r199, %r198};
	xor.b64  	%rd212, %rd210, %rd211;
	xor.b64  	%rd213, %rd170, %rd144;
	and.b64  	%rd214, %rd196, %rd213;
	xor.b64  	%rd215, %rd214, %rd144;
	ld.global.u64 	%rd216, [%rd85+40];
	add.s64 	%rd217, %rd118, %rd216;
	ld.const.u64 	%rd218, [k_sha512+40];
	add.s64 	%rd219, %rd217, %rd218;
	add.s64 	%rd220, %rd219, %rd215;
	add.s64 	%rd221, %rd220, %rd212;
	add.s64 	%rd222, %rd221, %rd129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r200,%dummy}, %rd207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r201}, %rd207;
	}
	shf.r.wrap.b32 	%r202, %r201, %r200, 28;
	shf.r.wrap.b32 	%r203, %r200, %r201, 28;
	mov.b64 	%rd223, {%r203, %r202};
	shf.l.wrap.b32 	%r204, %r200, %r201, 30;
	shf.l.wrap.b32 	%r205, %r201, %r200, 30;
	mov.b64 	%rd224, {%r205, %r204};
	xor.b64  	%rd225, %rd224, %rd223;
	shf.l.wrap.b32 	%r206, %r200, %r201, 25;
	shf.l.wrap.b32 	%r207, %r201, %r200, 25;
	mov.b64 	%rd226, {%r207, %r206};
	xor.b64  	%rd227, %rd225, %rd226;
	xor.b64  	%rd228, %rd207, %rd155;
	xor.b64  	%rd229, %rd207, %rd181;
	and.b64  	%rd230, %rd229, %rd228;
	xor.b64  	%rd231, %rd230, %rd207;
	add.s64 	%rd232, %rd221, %rd231;
	add.s64 	%rd233, %rd232, %rd227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r208,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r209}, %rd222;
	}
	shf.r.wrap.b32 	%r210, %r209, %r208, 14;
	shf.r.wrap.b32 	%r211, %r208, %r209, 14;
	mov.b64 	%rd234, {%r211, %r210};
	shf.r.wrap.b32 	%r212, %r209, %r208, 18;
	shf.r.wrap.b32 	%r213, %r208, %r209, 18;
	mov.b64 	%rd235, {%r213, %r212};
	xor.b64  	%rd236, %rd235, %rd234;
	shf.l.wrap.b32 	%r214, %r208, %r209, 23;
	shf.l.wrap.b32 	%r215, %r209, %r208, 23;
	mov.b64 	%rd237, {%r215, %r214};
	xor.b64  	%rd238, %rd236, %rd237;
	xor.b64  	%rd239, %rd196, %rd170;
	and.b64  	%rd240, %rd222, %rd239;
	xor.b64  	%rd241, %rd240, %rd170;
	ld.global.u64 	%rd242, [%rd85+48];
	add.s64 	%rd243, %rd144, %rd242;
	ld.const.u64 	%rd244, [k_sha512+48];
	add.s64 	%rd245, %rd243, %rd244;
	add.s64 	%rd246, %rd245, %rd241;
	add.s64 	%rd247, %rd246, %rd238;
	add.s64 	%rd248, %rd247, %rd155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r216,%dummy}, %rd233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r217}, %rd233;
	}
	shf.r.wrap.b32 	%r218, %r217, %r216, 28;
	shf.r.wrap.b32 	%r219, %r216, %r217, 28;
	mov.b64 	%rd249, {%r219, %r218};
	shf.l.wrap.b32 	%r220, %r216, %r217, 30;
	shf.l.wrap.b32 	%r221, %r217, %r216, 30;
	mov.b64 	%rd250, {%r221, %r220};
	xor.b64  	%rd251, %rd250, %rd249;
	shf.l.wrap.b32 	%r222, %r216, %r217, 25;
	shf.l.wrap.b32 	%r223, %r217, %r216, 25;
	mov.b64 	%rd252, {%r223, %r222};
	xor.b64  	%rd253, %rd251, %rd252;
	xor.b64  	%rd254, %rd233, %rd181;
	xor.b64  	%rd255, %rd233, %rd207;
	and.b64  	%rd256, %rd255, %rd254;
	xor.b64  	%rd257, %rd256, %rd233;
	add.s64 	%rd258, %rd247, %rd257;
	add.s64 	%rd259, %rd258, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r224,%dummy}, %rd248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd248;
	}
	shf.r.wrap.b32 	%r226, %r225, %r224, 14;
	shf.r.wrap.b32 	%r227, %r224, %r225, 14;
	mov.b64 	%rd260, {%r227, %r226};
	shf.r.wrap.b32 	%r228, %r225, %r224, 18;
	shf.r.wrap.b32 	%r229, %r224, %r225, 18;
	mov.b64 	%rd261, {%r229, %r228};
	xor.b64  	%rd262, %rd261, %rd260;
	shf.l.wrap.b32 	%r230, %r224, %r225, 23;
	shf.l.wrap.b32 	%r231, %r225, %r224, 23;
	mov.b64 	%rd263, {%r231, %r230};
	xor.b64  	%rd264, %rd262, %rd263;
	xor.b64  	%rd265, %rd222, %rd196;
	and.b64  	%rd266, %rd248, %rd265;
	xor.b64  	%rd267, %rd266, %rd196;
	ld.global.u64 	%rd268, [%rd85+56];
	add.s64 	%rd269, %rd170, %rd268;
	ld.const.u64 	%rd270, [k_sha512+56];
	add.s64 	%rd271, %rd269, %rd270;
	add.s64 	%rd272, %rd271, %rd267;
	add.s64 	%rd273, %rd272, %rd264;
	add.s64 	%rd274, %rd273, %rd181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r232,%dummy}, %rd259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd259;
	}
	shf.r.wrap.b32 	%r234, %r233, %r232, 28;
	shf.r.wrap.b32 	%r235, %r232, %r233, 28;
	mov.b64 	%rd275, {%r235, %r234};
	shf.l.wrap.b32 	%r236, %r232, %r233, 30;
	shf.l.wrap.b32 	%r237, %r233, %r232, 30;
	mov.b64 	%rd276, {%r237, %r236};
	xor.b64  	%rd277, %rd276, %rd275;
	shf.l.wrap.b32 	%r238, %r232, %r233, 25;
	shf.l.wrap.b32 	%r239, %r233, %r232, 25;
	mov.b64 	%rd278, {%r239, %r238};
	xor.b64  	%rd279, %rd277, %rd278;
	xor.b64  	%rd280, %rd259, %rd207;
	xor.b64  	%rd281, %rd259, %rd233;
	and.b64  	%rd282, %rd281, %rd280;
	xor.b64  	%rd283, %rd282, %rd259;
	add.s64 	%rd284, %rd273, %rd283;
	add.s64 	%rd285, %rd284, %rd279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r240,%dummy}, %rd274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r241}, %rd274;
	}
	shf.r.wrap.b32 	%r242, %r241, %r240, 14;
	shf.r.wrap.b32 	%r243, %r240, %r241, 14;
	mov.b64 	%rd286, {%r243, %r242};
	shf.r.wrap.b32 	%r244, %r241, %r240, 18;
	shf.r.wrap.b32 	%r245, %r240, %r241, 18;
	mov.b64 	%rd287, {%r245, %r244};
	xor.b64  	%rd288, %rd287, %rd286;
	shf.l.wrap.b32 	%r246, %r240, %r241, 23;
	shf.l.wrap.b32 	%r247, %r241, %r240, 23;
	mov.b64 	%rd289, {%r247, %r246};
	xor.b64  	%rd290, %rd288, %rd289;
	xor.b64  	%rd291, %rd248, %rd222;
	and.b64  	%rd292, %rd274, %rd291;
	xor.b64  	%rd293, %rd292, %rd222;
	ld.const.u64 	%rd294, [k_sha512+64];
	add.s64 	%rd295, %rd196, %rd294;
	add.s64 	%rd296, %rd295, %rd293;
	add.s64 	%rd297, %rd296, %rd290;
	add.s64 	%rd298, %rd297, -96877461722390919;
	add.s64 	%rd299, %rd298, %rd207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r248,%dummy}, %rd285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd285;
	}
	shf.r.wrap.b32 	%r250, %r249, %r248, 28;
	shf.r.wrap.b32 	%r251, %r248, %r249, 28;
	mov.b64 	%rd300, {%r251, %r250};
	shf.l.wrap.b32 	%r252, %r248, %r249, 30;
	shf.l.wrap.b32 	%r253, %r249, %r248, 30;
	mov.b64 	%rd301, {%r253, %r252};
	xor.b64  	%rd302, %rd301, %rd300;
	shf.l.wrap.b32 	%r254, %r248, %r249, 25;
	shf.l.wrap.b32 	%r255, %r249, %r248, 25;
	mov.b64 	%rd303, {%r255, %r254};
	xor.b64  	%rd304, %rd302, %rd303;
	xor.b64  	%rd305, %rd285, %rd233;
	xor.b64  	%rd306, %rd285, %rd259;
	and.b64  	%rd307, %rd306, %rd305;
	xor.b64  	%rd308, %rd307, %rd285;
	add.s64 	%rd309, %rd298, %rd308;
	add.s64 	%rd310, %rd309, %rd304;
	ld.const.u64 	%rd311, [k_sha512+72];
	add.s64 	%rd312, %rd311, %rd222;
	xor.b64  	%rd313, %rd312, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r256,%dummy}, %rd299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd299;
	}
	shf.r.wrap.b32 	%r258, %r257, %r256, 14;
	shf.r.wrap.b32 	%r259, %r256, %r257, 14;
	mov.b64 	%rd314, {%r259, %r258};
	shf.r.wrap.b32 	%r260, %r257, %r256, 18;
	shf.r.wrap.b32 	%r261, %r256, %r257, 18;
	mov.b64 	%rd315, {%r261, %r260};
	xor.b64  	%rd316, %rd315, %rd314;
	shf.l.wrap.b32 	%r262, %r256, %r257, 23;
	shf.l.wrap.b32 	%r263, %r257, %r256, 23;
	mov.b64 	%rd317, {%r263, %r262};
	xor.b64  	%rd318, %rd316, %rd317;
	xor.b64  	%rd319, %rd274, %rd248;
	and.b64  	%rd320, %rd299, %rd319;
	xor.b64  	%rd321, %rd320, %rd248;
	add.s64 	%rd322, %rd313, %rd321;
	add.s64 	%rd323, %rd322, %rd318;
	add.s64 	%rd324, %rd323, %rd233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r264,%dummy}, %rd310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd310;
	}
	shf.r.wrap.b32 	%r266, %r265, %r264, 28;
	shf.r.wrap.b32 	%r267, %r264, %r265, 28;
	mov.b64 	%rd325, {%r267, %r266};
	shf.l.wrap.b32 	%r268, %r264, %r265, 30;
	shf.l.wrap.b32 	%r269, %r265, %r264, 30;
	mov.b64 	%rd326, {%r269, %r268};
	xor.b64  	%rd327, %rd326, %rd325;
	shf.l.wrap.b32 	%r270, %r264, %r265, 25;
	shf.l.wrap.b32 	%r271, %r265, %r264, 25;
	mov.b64 	%rd328, {%r271, %r270};
	xor.b64  	%rd329, %rd327, %rd328;
	xor.b64  	%rd330, %rd310, %rd259;
	xor.b64  	%rd331, %rd310, %rd285;
	and.b64  	%rd332, %rd331, %rd330;
	xor.b64  	%rd333, %rd332, %rd310;
	add.s64 	%rd334, %rd323, %rd333;
	add.s64 	%rd335, %rd334, %rd329;
	ld.const.u64 	%rd336, [k_sha512+80];
	add.s64 	%rd337, %rd336, %rd248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r272,%dummy}, %rd324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r273}, %rd324;
	}
	shf.r.wrap.b32 	%r274, %r273, %r272, 14;
	shf.r.wrap.b32 	%r275, %r272, %r273, 14;
	mov.b64 	%rd338, {%r275, %r274};
	shf.r.wrap.b32 	%r276, %r273, %r272, 18;
	shf.r.wrap.b32 	%r277, %r272, %r273, 18;
	mov.b64 	%rd339, {%r277, %r276};
	xor.b64  	%rd340, %rd339, %rd338;
	shf.l.wrap.b32 	%r278, %r272, %r273, 23;
	shf.l.wrap.b32 	%r279, %r273, %r272, 23;
	mov.b64 	%rd341, {%r279, %r278};
	xor.b64  	%rd342, %rd340, %rd341;
	xor.b64  	%rd343, %rd299, %rd274;
	and.b64  	%rd344, %rd324, %rd343;
	xor.b64  	%rd345, %rd344, %rd274;
	add.s64 	%rd346, %rd337, %rd345;
	add.s64 	%rd347, %rd346, %rd342;
	add.s64 	%rd348, %rd347, %rd259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r280,%dummy}, %rd335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd335;
	}
	shf.r.wrap.b32 	%r282, %r281, %r280, 28;
	shf.r.wrap.b32 	%r283, %r280, %r281, 28;
	mov.b64 	%rd349, {%r283, %r282};
	shf.l.wrap.b32 	%r284, %r280, %r281, 30;
	shf.l.wrap.b32 	%r285, %r281, %r280, 30;
	mov.b64 	%rd350, {%r285, %r284};
	xor.b64  	%rd351, %rd350, %rd349;
	shf.l.wrap.b32 	%r286, %r280, %r281, 25;
	shf.l.wrap.b32 	%r287, %r281, %r280, 25;
	mov.b64 	%rd352, {%r287, %r286};
	xor.b64  	%rd353, %rd351, %rd352;
	xor.b64  	%rd354, %rd335, %rd285;
	xor.b64  	%rd355, %rd335, %rd310;
	and.b64  	%rd356, %rd355, %rd354;
	xor.b64  	%rd357, %rd356, %rd335;
	add.s64 	%rd358, %rd347, %rd357;
	add.s64 	%rd359, %rd358, %rd353;
	ld.const.u64 	%rd360, [k_sha512+88];
	add.s64 	%rd361, %rd360, %rd274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r288,%dummy}, %rd348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r289}, %rd348;
	}
	shf.r.wrap.b32 	%r290, %r289, %r288, 14;
	shf.r.wrap.b32 	%r291, %r288, %r289, 14;
	mov.b64 	%rd362, {%r291, %r290};
	shf.r.wrap.b32 	%r292, %r289, %r288, 18;
	shf.r.wrap.b32 	%r293, %r288, %r289, 18;
	mov.b64 	%rd363, {%r293, %r292};
	xor.b64  	%rd364, %rd363, %rd362;
	shf.l.wrap.b32 	%r294, %r288, %r289, 23;
	shf.l.wrap.b32 	%r295, %r289, %r288, 23;
	mov.b64 	%rd365, {%r295, %r294};
	xor.b64  	%rd366, %rd364, %rd365;
	xor.b64  	%rd367, %rd324, %rd299;
	and.b64  	%rd368, %rd348, %rd367;
	xor.b64  	%rd369, %rd368, %rd299;
	add.s64 	%rd370, %rd361, %rd369;
	add.s64 	%rd371, %rd370, %rd366;
	add.s64 	%rd372, %rd371, %rd285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r296,%dummy}, %rd359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r297}, %rd359;
	}
	shf.r.wrap.b32 	%r298, %r297, %r296, 28;
	shf.r.wrap.b32 	%r299, %r296, %r297, 28;
	mov.b64 	%rd373, {%r299, %r298};
	shf.l.wrap.b32 	%r300, %r296, %r297, 30;
	shf.l.wrap.b32 	%r301, %r297, %r296, 30;
	mov.b64 	%rd374, {%r301, %r300};
	xor.b64  	%rd375, %rd374, %rd373;
	shf.l.wrap.b32 	%r302, %r296, %r297, 25;
	shf.l.wrap.b32 	%r303, %r297, %r296, 25;
	mov.b64 	%rd376, {%r303, %r302};
	xor.b64  	%rd377, %rd375, %rd376;
	xor.b64  	%rd378, %rd359, %rd310;
	xor.b64  	%rd379, %rd359, %rd335;
	and.b64  	%rd380, %rd379, %rd378;
	xor.b64  	%rd381, %rd380, %rd359;
	add.s64 	%rd382, %rd371, %rd381;
	add.s64 	%rd383, %rd382, %rd377;
	ld.const.u64 	%rd384, [k_sha512+96];
	add.s64 	%rd385, %rd384, %rd299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r304,%dummy}, %rd372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r305}, %rd372;
	}
	shf.r.wrap.b32 	%r306, %r305, %r304, 14;
	shf.r.wrap.b32 	%r307, %r304, %r305, 14;
	mov.b64 	%rd386, {%r307, %r306};
	shf.r.wrap.b32 	%r308, %r305, %r304, 18;
	shf.r.wrap.b32 	%r309, %r304, %r305, 18;
	mov.b64 	%rd387, {%r309, %r308};
	xor.b64  	%rd388, %rd387, %rd386;
	shf.l.wrap.b32 	%r310, %r304, %r305, 23;
	shf.l.wrap.b32 	%r311, %r305, %r304, 23;
	mov.b64 	%rd389, {%r311, %r310};
	xor.b64  	%rd390, %rd388, %rd389;
	xor.b64  	%rd391, %rd348, %rd324;
	and.b64  	%rd392, %rd372, %rd391;
	xor.b64  	%rd393, %rd392, %rd324;
	add.s64 	%rd394, %rd385, %rd393;
	add.s64 	%rd395, %rd394, %rd390;
	add.s64 	%rd396, %rd395, %rd310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd383;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 28;
	shf.r.wrap.b32 	%r315, %r312, %r313, 28;
	mov.b64 	%rd397, {%r315, %r314};
	shf.l.wrap.b32 	%r316, %r312, %r313, 30;
	shf.l.wrap.b32 	%r317, %r313, %r312, 30;
	mov.b64 	%rd398, {%r317, %r316};
	xor.b64  	%rd399, %rd398, %rd397;
	shf.l.wrap.b32 	%r318, %r312, %r313, 25;
	shf.l.wrap.b32 	%r319, %r313, %r312, 25;
	mov.b64 	%rd400, {%r319, %r318};
	xor.b64  	%rd401, %rd399, %rd400;
	xor.b64  	%rd402, %rd383, %rd335;
	xor.b64  	%rd403, %rd383, %rd359;
	and.b64  	%rd404, %rd403, %rd402;
	xor.b64  	%rd405, %rd404, %rd383;
	add.s64 	%rd406, %rd395, %rd405;
	add.s64 	%rd407, %rd406, %rd401;
	ld.const.u64 	%rd408, [k_sha512+104];
	add.s64 	%rd409, %rd408, %rd324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r320,%dummy}, %rd396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r321}, %rd396;
	}
	shf.r.wrap.b32 	%r322, %r321, %r320, 14;
	shf.r.wrap.b32 	%r323, %r320, %r321, 14;
	mov.b64 	%rd410, {%r323, %r322};
	shf.r.wrap.b32 	%r324, %r321, %r320, 18;
	shf.r.wrap.b32 	%r325, %r320, %r321, 18;
	mov.b64 	%rd411, {%r325, %r324};
	xor.b64  	%rd412, %rd411, %rd410;
	shf.l.wrap.b32 	%r326, %r320, %r321, 23;
	shf.l.wrap.b32 	%r327, %r321, %r320, 23;
	mov.b64 	%rd413, {%r327, %r326};
	xor.b64  	%rd414, %rd412, %rd413;
	xor.b64  	%rd415, %rd372, %rd348;
	and.b64  	%rd416, %rd396, %rd415;
	xor.b64  	%rd417, %rd416, %rd348;
	add.s64 	%rd418, %rd409, %rd417;
	add.s64 	%rd419, %rd418, %rd414;
	add.s64 	%rd420, %rd419, %rd335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r328,%dummy}, %rd407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r329}, %rd407;
	}
	shf.r.wrap.b32 	%r330, %r329, %r328, 28;
	shf.r.wrap.b32 	%r331, %r328, %r329, 28;
	mov.b64 	%rd421, {%r331, %r330};
	shf.l.wrap.b32 	%r332, %r328, %r329, 30;
	shf.l.wrap.b32 	%r333, %r329, %r328, 30;
	mov.b64 	%rd422, {%r333, %r332};
	xor.b64  	%rd423, %rd422, %rd421;
	shf.l.wrap.b32 	%r334, %r328, %r329, 25;
	shf.l.wrap.b32 	%r335, %r329, %r328, 25;
	mov.b64 	%rd424, {%r335, %r334};
	xor.b64  	%rd425, %rd423, %rd424;
	xor.b64  	%rd426, %rd407, %rd359;
	xor.b64  	%rd427, %rd407, %rd383;
	and.b64  	%rd428, %rd427, %rd426;
	xor.b64  	%rd429, %rd428, %rd407;
	add.s64 	%rd430, %rd419, %rd429;
	add.s64 	%rd431, %rd430, %rd425;
	ld.const.u64 	%rd432, [k_sha512+112];
	add.s64 	%rd433, %rd432, %rd348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd420;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 14;
	shf.r.wrap.b32 	%r339, %r336, %r337, 14;
	mov.b64 	%rd434, {%r339, %r338};
	shf.r.wrap.b32 	%r340, %r337, %r336, 18;
	shf.r.wrap.b32 	%r341, %r336, %r337, 18;
	mov.b64 	%rd435, {%r341, %r340};
	xor.b64  	%rd436, %rd435, %rd434;
	shf.l.wrap.b32 	%r342, %r336, %r337, 23;
	shf.l.wrap.b32 	%r343, %r337, %r336, 23;
	mov.b64 	%rd437, {%r343, %r342};
	xor.b64  	%rd438, %rd436, %rd437;
	xor.b64  	%rd439, %rd396, %rd372;
	and.b64  	%rd440, %rd420, %rd439;
	xor.b64  	%rd441, %rd440, %rd372;
	add.s64 	%rd442, %rd433, %rd441;
	add.s64 	%rd443, %rd442, %rd438;
	add.s64 	%rd444, %rd443, %rd359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r344,%dummy}, %rd431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r345}, %rd431;
	}
	shf.r.wrap.b32 	%r346, %r345, %r344, 28;
	shf.r.wrap.b32 	%r347, %r344, %r345, 28;
	mov.b64 	%rd445, {%r347, %r346};
	shf.l.wrap.b32 	%r348, %r344, %r345, 30;
	shf.l.wrap.b32 	%r349, %r345, %r344, 30;
	mov.b64 	%rd446, {%r349, %r348};
	xor.b64  	%rd447, %rd446, %rd445;
	shf.l.wrap.b32 	%r350, %r344, %r345, 25;
	shf.l.wrap.b32 	%r351, %r345, %r344, 25;
	mov.b64 	%rd448, {%r351, %r350};
	xor.b64  	%rd449, %rd447, %rd448;
	xor.b64  	%rd450, %rd431, %rd383;
	xor.b64  	%rd451, %rd431, %rd407;
	and.b64  	%rd452, %rd451, %rd450;
	xor.b64  	%rd453, %rd452, %rd431;
	add.s64 	%rd454, %rd443, %rd453;
	add.s64 	%rd455, %rd454, %rd449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r352,%dummy}, %rd444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r353}, %rd444;
	}
	shf.r.wrap.b32 	%r354, %r353, %r352, 14;
	shf.r.wrap.b32 	%r355, %r352, %r353, 14;
	mov.b64 	%rd456, {%r355, %r354};
	shf.r.wrap.b32 	%r356, %r353, %r352, 18;
	shf.r.wrap.b32 	%r357, %r352, %r353, 18;
	mov.b64 	%rd457, {%r357, %r356};
	xor.b64  	%rd458, %rd457, %rd456;
	shf.l.wrap.b32 	%r358, %r352, %r353, 23;
	shf.l.wrap.b32 	%r359, %r353, %r352, 23;
	mov.b64 	%rd459, {%r359, %r358};
	xor.b64  	%rd460, %rd458, %rd459;
	xor.b64  	%rd461, %rd420, %rd396;
	and.b64  	%rd462, %rd444, %rd461;
	xor.b64  	%rd463, %rd462, %rd396;
	ld.const.u64 	%rd464, [k_sha512+120];
	add.s64 	%rd465, %rd372, %rd464;
	add.s64 	%rd466, %rd465, %rd463;
	add.s64 	%rd467, %rd466, %rd460;
	add.s64 	%rd468, %rd467, 576;
	add.s64 	%rd469, %rd468, %rd383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd455;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 28;
	shf.r.wrap.b32 	%r363, %r360, %r361, 28;
	mov.b64 	%rd470, {%r363, %r362};
	shf.l.wrap.b32 	%r364, %r360, %r361, 30;
	shf.l.wrap.b32 	%r365, %r361, %r360, 30;
	mov.b64 	%rd471, {%r365, %r364};
	xor.b64  	%rd472, %rd471, %rd470;
	shf.l.wrap.b32 	%r366, %r360, %r361, 25;
	shf.l.wrap.b32 	%r367, %r361, %r360, 25;
	mov.b64 	%rd473, {%r367, %r366};
	xor.b64  	%rd474, %rd472, %rd473;
	xor.b64  	%rd475, %rd455, %rd407;
	xor.b64  	%rd476, %rd455, %rd431;
	and.b64  	%rd477, %rd476, %rd475;
	xor.b64  	%rd478, %rd477, %rd455;
	add.s64 	%rd479, %rd468, %rd478;
	add.s64 	%rd480, %rd479, %rd474;
	mov.u64 	%rd481, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd481;
	}
	shf.l.wrap.b32 	%r370, %r369, %r368, 3;
	shf.l.wrap.b32 	%r371, %r368, %r369, 3;
	mov.b64 	%rd482, {%r371, %r370};
	shf.r.wrap.b32 	%r372, %r368, %r369, 19;
	shf.r.wrap.b32 	%r373, %r369, %r368, 19;
	mov.b64 	%rd483, {%r373, %r372};
	xor.b64  	%rd2, %rd483, %rd482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r374,%dummy}, %rd112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r375}, %rd112;
	}
	shf.r.wrap.b32 	%r376, %r375, %r374, 1;
	shf.r.wrap.b32 	%r377, %r374, %r375, 1;
	mov.b64 	%rd484, {%r377, %r376};
	shf.r.wrap.b32 	%r378, %r375, %r374, 8;
	shf.r.wrap.b32 	%r379, %r374, %r375, 8;
	mov.b64 	%rd485, {%r379, %r378};
	shr.u64 	%rd486, %rd112, 7;
	xor.b64  	%rd487, %rd484, %rd486;
	xor.b64  	%rd488, %rd487, %rd485;
	xor.b64  	%rd489, %rd92, -9223372036854775808;
	add.s64 	%rd490, %rd489, %rd2;
	add.s64 	%rd491, %rd490, %rd488;
	mov.u64 	%rd492, 576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r380,%dummy}, %rd492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd492;
	}
	shf.r.wrap.b32 	%r382, %r381, %r380, 19;
	shf.r.wrap.b32 	%r383, %r380, %r381, 19;
	mov.b64 	%rd493, {%r383, %r382};
	shf.l.wrap.b32 	%r384, %r380, %r381, 3;
	shf.l.wrap.b32 	%r385, %r381, %r380, 3;
	mov.b64 	%rd494, {%r385, %r384};
	xor.b64  	%rd495, %rd493, %rd494;
	xor.b64  	%rd496, %rd495, 9;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r386,%dummy}, %rd138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r387}, %rd138;
	}
	shf.r.wrap.b32 	%r388, %r387, %r386, 1;
	shf.r.wrap.b32 	%r389, %r386, %r387, 1;
	mov.b64 	%rd497, {%r389, %r388};
	shf.r.wrap.b32 	%r390, %r387, %r386, 8;
	shf.r.wrap.b32 	%r391, %r386, %r387, 8;
	mov.b64 	%rd498, {%r391, %r390};
	shr.u64 	%rd499, %rd138, 7;
	xor.b64  	%rd500, %rd497, %rd499;
	xor.b64  	%rd501, %rd500, %rd498;
	add.s64 	%rd502, %rd112, %rd496;
	add.s64 	%rd503, %rd502, %rd501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r392,%dummy}, %rd491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd491;
	}
	shf.r.wrap.b32 	%r394, %r393, %r392, 19;
	shf.r.wrap.b32 	%r395, %r392, %r393, 19;
	mov.b64 	%rd504, {%r395, %r394};
	shf.l.wrap.b32 	%r396, %r392, %r393, 3;
	shf.l.wrap.b32 	%r397, %r393, %r392, 3;
	mov.b64 	%rd505, {%r397, %r396};
	shr.u64 	%rd506, %rd491, 6;
	xor.b64  	%rd507, %rd504, %rd506;
	xor.b64  	%rd508, %rd507, %rd505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r398,%dummy}, %rd164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r399}, %rd164;
	}
	shf.r.wrap.b32 	%r400, %r399, %r398, 1;
	shf.r.wrap.b32 	%r401, %r398, %r399, 1;
	mov.b64 	%rd509, {%r401, %r400};
	shf.r.wrap.b32 	%r402, %r399, %r398, 8;
	shf.r.wrap.b32 	%r403, %r398, %r399, 8;
	mov.b64 	%rd510, {%r403, %r402};
	shr.u64 	%rd511, %rd164, 7;
	xor.b64  	%rd512, %rd509, %rd511;
	xor.b64  	%rd513, %rd512, %rd510;
	add.s64 	%rd514, %rd138, %rd508;
	add.s64 	%rd515, %rd514, %rd513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r404,%dummy}, %rd503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r405}, %rd503;
	}
	shf.r.wrap.b32 	%r406, %r405, %r404, 19;
	shf.r.wrap.b32 	%r407, %r404, %r405, 19;
	mov.b64 	%rd516, {%r407, %r406};
	shf.l.wrap.b32 	%r408, %r404, %r405, 3;
	shf.l.wrap.b32 	%r409, %r405, %r404, 3;
	mov.b64 	%rd517, {%r409, %r408};
	shr.u64 	%rd518, %rd503, 6;
	xor.b64  	%rd519, %rd516, %rd518;
	xor.b64  	%rd520, %rd519, %rd517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r410,%dummy}, %rd190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r411}, %rd190;
	}
	shf.r.wrap.b32 	%r412, %r411, %r410, 1;
	shf.r.wrap.b32 	%r413, %r410, %r411, 1;
	mov.b64 	%rd521, {%r413, %r412};
	shf.r.wrap.b32 	%r414, %r411, %r410, 8;
	shf.r.wrap.b32 	%r415, %r410, %r411, 8;
	mov.b64 	%rd522, {%r415, %r414};
	shr.u64 	%rd523, %rd190, 7;
	xor.b64  	%rd524, %rd521, %rd523;
	xor.b64  	%rd525, %rd524, %rd522;
	add.s64 	%rd526, %rd164, %rd520;
	add.s64 	%rd527, %rd526, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd515;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 19;
	shf.r.wrap.b32 	%r419, %r416, %r417, 19;
	mov.b64 	%rd528, {%r419, %r418};
	shf.l.wrap.b32 	%r420, %r416, %r417, 3;
	shf.l.wrap.b32 	%r421, %r417, %r416, 3;
	mov.b64 	%rd529, {%r421, %r420};
	shr.u64 	%rd530, %rd515, 6;
	xor.b64  	%rd531, %rd528, %rd530;
	xor.b64  	%rd532, %rd531, %rd529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r422,%dummy}, %rd216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r423}, %rd216;
	}
	shf.r.wrap.b32 	%r424, %r423, %r422, 1;
	shf.r.wrap.b32 	%r425, %r422, %r423, 1;
	mov.b64 	%rd533, {%r425, %r424};
	shf.r.wrap.b32 	%r426, %r423, %r422, 8;
	shf.r.wrap.b32 	%r427, %r422, %r423, 8;
	mov.b64 	%rd534, {%r427, %r426};
	shr.u64 	%rd535, %rd216, 7;
	xor.b64  	%rd536, %rd533, %rd535;
	xor.b64  	%rd537, %rd536, %rd534;
	add.s64 	%rd538, %rd190, %rd532;
	add.s64 	%rd539, %rd538, %rd537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r428,%dummy}, %rd527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd527;
	}
	shf.r.wrap.b32 	%r430, %r429, %r428, 19;
	shf.r.wrap.b32 	%r431, %r428, %r429, 19;
	mov.b64 	%rd540, {%r431, %r430};
	shf.l.wrap.b32 	%r432, %r428, %r429, 3;
	shf.l.wrap.b32 	%r433, %r429, %r428, 3;
	mov.b64 	%rd541, {%r433, %r432};
	shr.u64 	%rd542, %rd527, 6;
	xor.b64  	%rd543, %rd540, %rd542;
	xor.b64  	%rd544, %rd543, %rd541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r434,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r435}, %rd242;
	}
	shf.r.wrap.b32 	%r436, %r435, %r434, 1;
	shf.r.wrap.b32 	%r437, %r434, %r435, 1;
	mov.b64 	%rd545, {%r437, %r436};
	shf.r.wrap.b32 	%r438, %r435, %r434, 8;
	shf.r.wrap.b32 	%r439, %r434, %r435, 8;
	mov.b64 	%rd546, {%r439, %r438};
	shr.u64 	%rd547, %rd242, 7;
	xor.b64  	%rd548, %rd545, %rd547;
	xor.b64  	%rd549, %rd548, %rd546;
	add.s64 	%rd550, %rd216, %rd544;
	add.s64 	%rd551, %rd550, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r440,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r441}, %rd539;
	}
	shf.r.wrap.b32 	%r442, %r441, %r440, 19;
	shf.r.wrap.b32 	%r443, %r440, %r441, 19;
	mov.b64 	%rd552, {%r443, %r442};
	shf.l.wrap.b32 	%r444, %r440, %r441, 3;
	shf.l.wrap.b32 	%r445, %r441, %r440, 3;
	mov.b64 	%rd553, {%r445, %r444};
	shr.u64 	%rd554, %rd539, 6;
	xor.b64  	%rd555, %rd552, %rd554;
	xor.b64  	%rd556, %rd555, %rd553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r446,%dummy}, %rd268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r447}, %rd268;
	}
	shf.r.wrap.b32 	%r448, %r447, %r446, 1;
	shf.r.wrap.b32 	%r449, %r446, %r447, 1;
	mov.b64 	%rd557, {%r449, %r448};
	shf.r.wrap.b32 	%r450, %r447, %r446, 8;
	shf.r.wrap.b32 	%r451, %r446, %r447, 8;
	mov.b64 	%rd558, {%r451, %r450};
	shr.u64 	%rd559, %rd268, 7;
	xor.b64  	%rd560, %rd557, %rd559;
	xor.b64  	%rd561, %rd560, %rd558;
	add.s64 	%rd562, %rd242, %rd556;
	add.s64 	%rd563, %rd562, %rd561;
	add.s64 	%rd564, %rd563, 576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r452,%dummy}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r453}, %rd551;
	}
	shf.r.wrap.b32 	%r454, %r453, %r452, 19;
	shf.r.wrap.b32 	%r455, %r452, %r453, 19;
	mov.b64 	%rd565, {%r455, %r454};
	shf.l.wrap.b32 	%r456, %r452, %r453, 3;
	shf.l.wrap.b32 	%r457, %r453, %r452, 3;
	mov.b64 	%rd566, {%r457, %r456};
	shr.u64 	%rd567, %rd551, 6;
	xor.b64  	%rd568, %rd565, %rd567;
	xor.b64  	%rd569, %rd568, %rd566;
	mov.u64 	%rd570, -96877461722390919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r459}, %rd570;
	}
	shf.r.wrap.b32 	%r460, %r459, %r458, 1;
	shf.r.wrap.b32 	%r461, %r458, %r459, 1;
	mov.b64 	%rd571, {%r461, %r460};
	shf.r.wrap.b32 	%r462, %r459, %r458, 8;
	shf.r.wrap.b32 	%r463, %r458, %r459, 8;
	mov.b64 	%rd572, {%r463, %r462};
	xor.b64  	%rd573, %rd571, %rd572;
	xor.b64  	%rd574, %rd573, 143358332906149692;
	add.s64 	%rd575, %rd491, %rd268;
	add.s64 	%rd576, %rd575, %rd569;
	add.s64 	%rd577, %rd576, %rd574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r464,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd564;
	}
	shf.r.wrap.b32 	%r466, %r465, %r464, 19;
	shf.r.wrap.b32 	%r467, %r464, %r465, 19;
	mov.b64 	%rd578, {%r467, %r466};
	shf.l.wrap.b32 	%r468, %r464, %r465, 3;
	shf.l.wrap.b32 	%r469, %r465, %r464, 3;
	mov.b64 	%rd579, {%r469, %r468};
	shr.u64 	%rd580, %rd564, 6;
	xor.b64  	%rd581, %rd578, %rd580;
	xor.b64  	%rd582, %rd581, %rd579;
	mov.u64 	%rd583, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r470,%dummy}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r471}, %rd583;
	}
	shf.r.wrap.b32 	%r472, %r471, %r470, 1;
	shf.r.wrap.b32 	%r473, %r470, %r471, 1;
	mov.b64 	%rd584, {%r473, %r472};
	shf.r.wrap.b32 	%r474, %r471, %r470, 8;
	shf.r.wrap.b32 	%r475, %r470, %r471, 8;
	mov.b64 	%rd585, {%r475, %r474};
	xor.b64  	%rd586, %rd584, %rd585;
	xor.b64  	%rd3, %rd586, 72057594037927936;
	add.s64 	%rd587, %rd503, %rd582;
	add.s64 	%rd588, %rd587, %rd3;
	add.s64 	%rd589, %rd588, -96877461722390919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r476,%dummy}, %rd577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r477}, %rd577;
	}
	shf.r.wrap.b32 	%r478, %r477, %r476, 19;
	shf.r.wrap.b32 	%r479, %r476, %r477, 19;
	mov.b64 	%rd590, {%r479, %r478};
	shf.l.wrap.b32 	%r480, %r476, %r477, 3;
	shf.l.wrap.b32 	%r481, %r477, %r476, 3;
	mov.b64 	%rd591, {%r481, %r480};
	shr.u64 	%rd592, %rd577, 6;
	xor.b64  	%rd593, %rd590, %rd592;
	xor.b64  	%rd594, %rd593, %rd591;
	shf.r.wrap.b32 	%r482, %r368, %r369, 8;
	shf.r.wrap.b32 	%r483, %r369, %r368, 8;
	mov.b64 	%rd595, {%r483, %r482};
	shf.r.wrap.b32 	%r484, %r368, %r369, 1;
	shf.r.wrap.b32 	%r485, %r369, %r368, 1;
	mov.b64 	%rd596, {%r485, %r484};
	xor.b64  	%rd4, %rd596, %rd595;
	xor.b64  	%rd597, %rd515, -9223372036854775808;
	add.s64 	%rd598, %rd597, %rd594;
	add.s64 	%rd599, %rd598, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r486,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r487}, %rd589;
	}
	shf.r.wrap.b32 	%r488, %r487, %r486, 19;
	shf.r.wrap.b32 	%r489, %r486, %r487, 19;
	mov.b64 	%rd600, {%r489, %r488};
	shf.l.wrap.b32 	%r490, %r486, %r487, 3;
	shf.l.wrap.b32 	%r491, %r487, %r486, 3;
	mov.b64 	%rd601, {%r491, %r490};
	shr.u64 	%rd602, %rd589, 6;
	xor.b64  	%rd603, %rd600, %rd602;
	xor.b64  	%rd604, %rd603, %rd601;
	add.s64 	%rd605, %rd527, %rd604;
	add.s64 	%rd606, %rd605, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd599;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 19;
	shf.r.wrap.b32 	%r495, %r492, %r493, 19;
	mov.b64 	%rd607, {%r495, %r494};
	shf.l.wrap.b32 	%r496, %r492, %r493, 3;
	shf.l.wrap.b32 	%r497, %r493, %r492, 3;
	mov.b64 	%rd608, {%r497, %r496};
	shr.u64 	%rd609, %rd599, 6;
	xor.b64  	%rd610, %rd607, %rd609;
	xor.b64  	%rd611, %rd610, %rd608;
	add.s64 	%rd612, %rd539, %rd611;
	add.s64 	%rd613, %rd612, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r498,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r499}, %rd606;
	}
	shf.r.wrap.b32 	%r500, %r499, %r498, 19;
	shf.r.wrap.b32 	%r501, %r498, %r499, 19;
	mov.b64 	%rd614, {%r501, %r500};
	shf.l.wrap.b32 	%r502, %r498, %r499, 3;
	shf.l.wrap.b32 	%r503, %r499, %r498, 3;
	mov.b64 	%rd615, {%r503, %r502};
	shr.u64 	%rd616, %rd606, 6;
	xor.b64  	%rd617, %rd614, %rd616;
	xor.b64  	%rd618, %rd617, %rd615;
	add.s64 	%rd619, %rd551, %rd618;
	add.s64 	%rd620, %rd619, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r504,%dummy}, %rd613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r505}, %rd613;
	}
	shf.r.wrap.b32 	%r506, %r505, %r504, 19;
	shf.r.wrap.b32 	%r507, %r504, %r505, 19;
	mov.b64 	%rd621, {%r507, %r506};
	shf.l.wrap.b32 	%r508, %r504, %r505, 3;
	shf.l.wrap.b32 	%r509, %r505, %r504, 3;
	mov.b64 	%rd622, {%r509, %r508};
	shr.u64 	%rd623, %rd613, 6;
	xor.b64  	%rd624, %rd621, %rd623;
	xor.b64  	%rd625, %rd624, %rd622;
	add.s64 	%rd626, %rd564, %rd625;
	add.s64 	%rd627, %rd626, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r510,%dummy}, %rd620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r511}, %rd620;
	}
	shf.r.wrap.b32 	%r512, %r511, %r510, 19;
	shf.r.wrap.b32 	%r513, %r510, %r511, 19;
	mov.b64 	%rd628, {%r513, %r512};
	shf.l.wrap.b32 	%r514, %r510, %r511, 3;
	shf.l.wrap.b32 	%r515, %r511, %r510, 3;
	mov.b64 	%rd629, {%r515, %r514};
	shr.u64 	%rd630, %rd620, 6;
	xor.b64  	%rd631, %rd628, %rd630;
	xor.b64  	%rd632, %rd631, %rd629;
	shf.r.wrap.b32 	%r516, %r381, %r380, 1;
	shf.r.wrap.b32 	%r517, %r380, %r381, 1;
	mov.b64 	%rd633, {%r517, %r516};
	shf.r.wrap.b32 	%r518, %r381, %r380, 8;
	shf.r.wrap.b32 	%r519, %r380, %r381, 8;
	mov.b64 	%rd634, {%r519, %r518};
	xor.b64  	%rd635, %rd633, %rd634;
	xor.b64  	%rd636, %rd635, 4;
	add.s64 	%rd637, %rd577, %rd632;
	add.s64 	%rd638, %rd637, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r521}, %rd627;
	}
	shf.r.wrap.b32 	%r522, %r521, %r520, 19;
	shf.r.wrap.b32 	%r523, %r520, %r521, 19;
	mov.b64 	%rd639, {%r523, %r522};
	shf.l.wrap.b32 	%r524, %r520, %r521, 3;
	shf.l.wrap.b32 	%r525, %r521, %r520, 3;
	mov.b64 	%rd640, {%r525, %r524};
	shr.u64 	%rd641, %rd627, 6;
	xor.b64  	%rd642, %rd639, %rd641;
	xor.b64  	%rd643, %rd642, %rd640;
	shf.r.wrap.b32 	%r526, %r393, %r392, 1;
	shf.r.wrap.b32 	%r527, %r392, %r393, 1;
	mov.b64 	%rd644, {%r527, %r526};
	shf.r.wrap.b32 	%r528, %r393, %r392, 8;
	shf.r.wrap.b32 	%r529, %r392, %r393, 8;
	mov.b64 	%rd645, {%r529, %r528};
	shr.u64 	%rd646, %rd491, 7;
	xor.b64  	%rd647, %rd644, %rd646;
	xor.b64  	%rd648, %rd647, %rd645;
	add.s64 	%rd649, %rd589, %rd643;
	add.s64 	%rd650, %rd649, %rd648;
	add.s64 	%rd651, %rd650, 576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r530,%dummy}, %rd469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r531}, %rd469;
	}
	shf.r.wrap.b32 	%r532, %r531, %r530, 14;
	shf.r.wrap.b32 	%r533, %r530, %r531, 14;
	mov.b64 	%rd652, {%r533, %r532};
	shf.r.wrap.b32 	%r534, %r531, %r530, 18;
	shf.r.wrap.b32 	%r535, %r530, %r531, 18;
	mov.b64 	%rd653, {%r535, %r534};
	xor.b64  	%rd654, %rd653, %rd652;
	shf.l.wrap.b32 	%r536, %r530, %r531, 23;
	shf.l.wrap.b32 	%r537, %r531, %r530, 23;
	mov.b64 	%rd655, {%r537, %r536};
	xor.b64  	%rd656, %rd654, %rd655;
	xor.b64  	%rd657, %rd444, %rd420;
	and.b64  	%rd658, %rd657, %rd469;
	xor.b64  	%rd659, %rd658, %rd420;
	add.s64 	%rd660, %rd659, %rd396;
	add.s64 	%rd661, %rd660, %rd491;
	ld.const.u64 	%rd662, [k_sha512+128];
	add.s64 	%rd663, %rd661, %rd662;
	add.s64 	%rd664, %rd663, %rd656;
	add.s64 	%rd665, %rd664, %rd407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r539}, %rd480;
	}
	shf.r.wrap.b32 	%r540, %r539, %r538, 28;
	shf.r.wrap.b32 	%r541, %r538, %r539, 28;
	mov.b64 	%rd666, {%r541, %r540};
	shf.l.wrap.b32 	%r542, %r538, %r539, 30;
	shf.l.wrap.b32 	%r543, %r539, %r538, 30;
	mov.b64 	%rd667, {%r543, %r542};
	xor.b64  	%rd668, %rd667, %rd666;
	shf.l.wrap.b32 	%r544, %r538, %r539, 25;
	shf.l.wrap.b32 	%r545, %r539, %r538, 25;
	mov.b64 	%rd669, {%r545, %r544};
	xor.b64  	%rd670, %rd668, %rd669;
	xor.b64  	%rd671, %rd480, %rd431;
	xor.b64  	%rd672, %rd480, %rd455;
	and.b64  	%rd673, %rd672, %rd671;
	xor.b64  	%rd674, %rd673, %rd480;
	add.s64 	%rd675, %rd664, %rd674;
	add.s64 	%rd676, %rd675, %rd670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd665;
	}
	shf.r.wrap.b32 	%r548, %r547, %r546, 14;
	shf.r.wrap.b32 	%r549, %r546, %r547, 14;
	mov.b64 	%rd677, {%r549, %r548};
	shf.r.wrap.b32 	%r550, %r547, %r546, 18;
	shf.r.wrap.b32 	%r551, %r546, %r547, 18;
	mov.b64 	%rd678, {%r551, %r550};
	xor.b64  	%rd679, %rd678, %rd677;
	shf.l.wrap.b32 	%r552, %r546, %r547, 23;
	shf.l.wrap.b32 	%r553, %r547, %r546, 23;
	mov.b64 	%rd680, {%r553, %r552};
	xor.b64  	%rd681, %rd679, %rd680;
	xor.b64  	%rd682, %rd469, %rd444;
	and.b64  	%rd683, %rd665, %rd682;
	xor.b64  	%rd684, %rd683, %rd444;
	add.s64 	%rd685, %rd503, %rd420;
	ld.const.u64 	%rd686, [k_sha512+136];
	add.s64 	%rd687, %rd685, %rd686;
	add.s64 	%rd688, %rd687, %rd684;
	add.s64 	%rd689, %rd688, %rd681;
	add.s64 	%rd690, %rd689, %rd431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r555}, %rd676;
	}
	shf.r.wrap.b32 	%r556, %r555, %r554, 28;
	shf.r.wrap.b32 	%r557, %r554, %r555, 28;
	mov.b64 	%rd691, {%r557, %r556};
	shf.l.wrap.b32 	%r558, %r554, %r555, 30;
	shf.l.wrap.b32 	%r559, %r555, %r554, 30;
	mov.b64 	%rd692, {%r559, %r558};
	xor.b64  	%rd693, %rd692, %rd691;
	shf.l.wrap.b32 	%r560, %r554, %r555, 25;
	shf.l.wrap.b32 	%r561, %r555, %r554, 25;
	mov.b64 	%rd694, {%r561, %r560};
	xor.b64  	%rd695, %rd693, %rd694;
	xor.b64  	%rd696, %rd676, %rd455;
	xor.b64  	%rd697, %rd676, %rd480;
	and.b64  	%rd698, %rd697, %rd696;
	xor.b64  	%rd699, %rd698, %rd676;
	add.s64 	%rd700, %rd689, %rd699;
	add.s64 	%rd701, %rd700, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd690;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 14;
	shf.r.wrap.b32 	%r565, %r562, %r563, 14;
	mov.b64 	%rd702, {%r565, %r564};
	shf.r.wrap.b32 	%r566, %r563, %r562, 18;
	shf.r.wrap.b32 	%r567, %r562, %r563, 18;
	mov.b64 	%rd703, {%r567, %r566};
	xor.b64  	%rd704, %rd703, %rd702;
	shf.l.wrap.b32 	%r568, %r562, %r563, 23;
	shf.l.wrap.b32 	%r569, %r563, %r562, 23;
	mov.b64 	%rd705, {%r569, %r568};
	xor.b64  	%rd706, %rd704, %rd705;
	xor.b64  	%rd707, %rd665, %rd469;
	and.b64  	%rd708, %rd690, %rd707;
	xor.b64  	%rd709, %rd708, %rd469;
	add.s64 	%rd710, %rd515, %rd444;
	ld.const.u64 	%rd711, [k_sha512+144];
	add.s64 	%rd712, %rd710, %rd711;
	add.s64 	%rd713, %rd712, %rd709;
	add.s64 	%rd714, %rd713, %rd706;
	add.s64 	%rd715, %rd714, %rd455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd701;
	}
	shf.r.wrap.b32 	%r572, %r571, %r570, 28;
	shf.r.wrap.b32 	%r573, %r570, %r571, 28;
	mov.b64 	%rd716, {%r573, %r572};
	shf.l.wrap.b32 	%r574, %r570, %r571, 30;
	shf.l.wrap.b32 	%r575, %r571, %r570, 30;
	mov.b64 	%rd717, {%r575, %r574};
	xor.b64  	%rd718, %rd717, %rd716;
	shf.l.wrap.b32 	%r576, %r570, %r571, 25;
	shf.l.wrap.b32 	%r577, %r571, %r570, 25;
	mov.b64 	%rd719, {%r577, %r576};
	xor.b64  	%rd720, %rd718, %rd719;
	xor.b64  	%rd721, %rd701, %rd480;
	xor.b64  	%rd722, %rd701, %rd676;
	and.b64  	%rd723, %rd722, %rd721;
	xor.b64  	%rd724, %rd723, %rd701;
	add.s64 	%rd725, %rd714, %rd724;
	add.s64 	%rd726, %rd725, %rd720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r579}, %rd715;
	}
	shf.r.wrap.b32 	%r580, %r579, %r578, 14;
	shf.r.wrap.b32 	%r581, %r578, %r579, 14;
	mov.b64 	%rd727, {%r581, %r580};
	shf.r.wrap.b32 	%r582, %r579, %r578, 18;
	shf.r.wrap.b32 	%r583, %r578, %r579, 18;
	mov.b64 	%rd728, {%r583, %r582};
	xor.b64  	%rd729, %rd728, %rd727;
	shf.l.wrap.b32 	%r584, %r578, %r579, 23;
	shf.l.wrap.b32 	%r585, %r579, %r578, 23;
	mov.b64 	%rd730, {%r585, %r584};
	xor.b64  	%rd731, %rd729, %rd730;
	xor.b64  	%rd732, %rd690, %rd665;
	and.b64  	%rd733, %rd715, %rd732;
	xor.b64  	%rd734, %rd733, %rd665;
	add.s64 	%rd735, %rd527, %rd469;
	ld.const.u64 	%rd736, [k_sha512+152];
	add.s64 	%rd737, %rd735, %rd736;
	add.s64 	%rd738, %rd737, %rd734;
	add.s64 	%rd739, %rd738, %rd731;
	add.s64 	%rd740, %rd739, %rd480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r587}, %rd726;
	}
	shf.r.wrap.b32 	%r588, %r587, %r586, 28;
	shf.r.wrap.b32 	%r589, %r586, %r587, 28;
	mov.b64 	%rd741, {%r589, %r588};
	shf.l.wrap.b32 	%r590, %r586, %r587, 30;
	shf.l.wrap.b32 	%r591, %r587, %r586, 30;
	mov.b64 	%rd742, {%r591, %r590};
	xor.b64  	%rd743, %rd742, %rd741;
	shf.l.wrap.b32 	%r592, %r586, %r587, 25;
	shf.l.wrap.b32 	%r593, %r587, %r586, 25;
	mov.b64 	%rd744, {%r593, %r592};
	xor.b64  	%rd745, %rd743, %rd744;
	xor.b64  	%rd746, %rd726, %rd676;
	xor.b64  	%rd747, %rd726, %rd701;
	and.b64  	%rd748, %rd747, %rd746;
	xor.b64  	%rd749, %rd748, %rd726;
	add.s64 	%rd750, %rd739, %rd749;
	add.s64 	%rd751, %rd750, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r594,%dummy}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r595}, %rd740;
	}
	shf.r.wrap.b32 	%r596, %r595, %r594, 14;
	shf.r.wrap.b32 	%r597, %r594, %r595, 14;
	mov.b64 	%rd752, {%r597, %r596};
	shf.r.wrap.b32 	%r598, %r595, %r594, 18;
	shf.r.wrap.b32 	%r599, %r594, %r595, 18;
	mov.b64 	%rd753, {%r599, %r598};
	xor.b64  	%rd754, %rd753, %rd752;
	shf.l.wrap.b32 	%r600, %r594, %r595, 23;
	shf.l.wrap.b32 	%r601, %r595, %r594, 23;
	mov.b64 	%rd755, {%r601, %r600};
	xor.b64  	%rd756, %rd754, %rd755;
	xor.b64  	%rd757, %rd715, %rd690;
	and.b64  	%rd758, %rd740, %rd757;
	xor.b64  	%rd759, %rd758, %rd690;
	add.s64 	%rd760, %rd665, %rd539;
	ld.const.u64 	%rd761, [k_sha512+160];
	add.s64 	%rd762, %rd760, %rd761;
	add.s64 	%rd763, %rd762, %rd759;
	add.s64 	%rd764, %rd763, %rd756;
	add.s64 	%rd765, %rd764, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r603}, %rd751;
	}
	shf.r.wrap.b32 	%r604, %r603, %r602, 28;
	shf.r.wrap.b32 	%r605, %r602, %r603, 28;
	mov.b64 	%rd766, {%r605, %r604};
	shf.l.wrap.b32 	%r606, %r602, %r603, 30;
	shf.l.wrap.b32 	%r607, %r603, %r602, 30;
	mov.b64 	%rd767, {%r607, %r606};
	xor.b64  	%rd768, %rd767, %rd766;
	shf.l.wrap.b32 	%r608, %r602, %r603, 25;
	shf.l.wrap.b32 	%r609, %r603, %r602, 25;
	mov.b64 	%rd769, {%r609, %r608};
	xor.b64  	%rd770, %rd768, %rd769;
	xor.b64  	%rd771, %rd751, %rd701;
	xor.b64  	%rd772, %rd751, %rd726;
	and.b64  	%rd773, %rd772, %rd771;
	xor.b64  	%rd774, %rd773, %rd751;
	add.s64 	%rd775, %rd764, %rd774;
	add.s64 	%rd776, %rd775, %rd770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r611}, %rd765;
	}
	shf.r.wrap.b32 	%r612, %r611, %r610, 14;
	shf.r.wrap.b32 	%r613, %r610, %r611, 14;
	mov.b64 	%rd777, {%r613, %r612};
	shf.r.wrap.b32 	%r614, %r611, %r610, 18;
	shf.r.wrap.b32 	%r615, %r610, %r611, 18;
	mov.b64 	%rd778, {%r615, %r614};
	xor.b64  	%rd779, %rd778, %rd777;
	shf.l.wrap.b32 	%r616, %r610, %r611, 23;
	shf.l.wrap.b32 	%r617, %r611, %r610, 23;
	mov.b64 	%rd780, {%r617, %r616};
	xor.b64  	%rd781, %rd779, %rd780;
	xor.b64  	%rd782, %rd740, %rd715;
	and.b64  	%rd783, %rd765, %rd782;
	xor.b64  	%rd784, %rd783, %rd715;
	add.s64 	%rd785, %rd690, %rd551;
	ld.const.u64 	%rd786, [k_sha512+168];
	add.s64 	%rd787, %rd785, %rd786;
	add.s64 	%rd788, %rd787, %rd784;
	add.s64 	%rd789, %rd788, %rd781;
	add.s64 	%rd790, %rd789, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd776;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 28;
	shf.r.wrap.b32 	%r621, %r618, %r619, 28;
	mov.b64 	%rd791, {%r621, %r620};
	shf.l.wrap.b32 	%r622, %r618, %r619, 30;
	shf.l.wrap.b32 	%r623, %r619, %r618, 30;
	mov.b64 	%rd792, {%r623, %r622};
	xor.b64  	%rd793, %rd792, %rd791;
	shf.l.wrap.b32 	%r624, %r618, %r619, 25;
	shf.l.wrap.b32 	%r625, %r619, %r618, 25;
	mov.b64 	%rd794, {%r625, %r624};
	xor.b64  	%rd795, %rd793, %rd794;
	xor.b64  	%rd796, %rd776, %rd726;
	xor.b64  	%rd797, %rd776, %rd751;
	and.b64  	%rd798, %rd797, %rd796;
	xor.b64  	%rd799, %rd798, %rd776;
	add.s64 	%rd800, %rd789, %rd799;
	add.s64 	%rd801, %rd800, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd790;
	}
	shf.r.wrap.b32 	%r628, %r627, %r626, 14;
	shf.r.wrap.b32 	%r629, %r626, %r627, 14;
	mov.b64 	%rd802, {%r629, %r628};
	shf.r.wrap.b32 	%r630, %r627, %r626, 18;
	shf.r.wrap.b32 	%r631, %r626, %r627, 18;
	mov.b64 	%rd803, {%r631, %r630};
	xor.b64  	%rd804, %rd803, %rd802;
	shf.l.wrap.b32 	%r632, %r626, %r627, 23;
	shf.l.wrap.b32 	%r633, %r627, %r626, 23;
	mov.b64 	%rd805, {%r633, %r632};
	xor.b64  	%rd806, %rd804, %rd805;
	xor.b64  	%rd807, %rd765, %rd740;
	and.b64  	%rd808, %rd790, %rd807;
	xor.b64  	%rd809, %rd808, %rd740;
	add.s64 	%rd810, %rd715, %rd564;
	ld.const.u64 	%rd811, [k_sha512+176];
	add.s64 	%rd812, %rd810, %rd811;
	add.s64 	%rd813, %rd812, %rd809;
	add.s64 	%rd814, %rd813, %rd806;
	add.s64 	%rd815, %rd814, %rd726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r635}, %rd801;
	}
	shf.r.wrap.b32 	%r636, %r635, %r634, 28;
	shf.r.wrap.b32 	%r637, %r634, %r635, 28;
	mov.b64 	%rd816, {%r637, %r636};
	shf.l.wrap.b32 	%r638, %r634, %r635, 30;
	shf.l.wrap.b32 	%r639, %r635, %r634, 30;
	mov.b64 	%rd817, {%r639, %r638};
	xor.b64  	%rd818, %rd817, %rd816;
	shf.l.wrap.b32 	%r640, %r634, %r635, 25;
	shf.l.wrap.b32 	%r641, %r635, %r634, 25;
	mov.b64 	%rd819, {%r641, %r640};
	xor.b64  	%rd820, %rd818, %rd819;
	xor.b64  	%rd821, %rd801, %rd751;
	xor.b64  	%rd822, %rd801, %rd776;
	and.b64  	%rd823, %rd822, %rd821;
	xor.b64  	%rd824, %rd823, %rd801;
	add.s64 	%rd825, %rd814, %rd824;
	add.s64 	%rd826, %rd825, %rd820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r642,%dummy}, %rd815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r643}, %rd815;
	}
	shf.r.wrap.b32 	%r644, %r643, %r642, 14;
	shf.r.wrap.b32 	%r645, %r642, %r643, 14;
	mov.b64 	%rd827, {%r645, %r644};
	shf.r.wrap.b32 	%r646, %r643, %r642, 18;
	shf.r.wrap.b32 	%r647, %r642, %r643, 18;
	mov.b64 	%rd828, {%r647, %r646};
	xor.b64  	%rd829, %rd828, %rd827;
	shf.l.wrap.b32 	%r648, %r642, %r643, 23;
	shf.l.wrap.b32 	%r649, %r643, %r642, 23;
	mov.b64 	%rd830, {%r649, %r648};
	xor.b64  	%rd831, %rd829, %rd830;
	xor.b64  	%rd832, %rd790, %rd765;
	and.b64  	%rd833, %rd815, %rd832;
	xor.b64  	%rd834, %rd833, %rd765;
	add.s64 	%rd835, %rd740, %rd577;
	ld.const.u64 	%rd836, [k_sha512+184];
	add.s64 	%rd837, %rd835, %rd836;
	add.s64 	%rd838, %rd837, %rd834;
	add.s64 	%rd839, %rd838, %rd831;
	add.s64 	%rd840, %rd839, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r650,%dummy}, %rd826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r651}, %rd826;
	}
	shf.r.wrap.b32 	%r652, %r651, %r650, 28;
	shf.r.wrap.b32 	%r653, %r650, %r651, 28;
	mov.b64 	%rd841, {%r653, %r652};
	shf.l.wrap.b32 	%r654, %r650, %r651, 30;
	shf.l.wrap.b32 	%r655, %r651, %r650, 30;
	mov.b64 	%rd842, {%r655, %r654};
	xor.b64  	%rd843, %rd842, %rd841;
	shf.l.wrap.b32 	%r656, %r650, %r651, 25;
	shf.l.wrap.b32 	%r657, %r651, %r650, 25;
	mov.b64 	%rd844, {%r657, %r656};
	xor.b64  	%rd845, %rd843, %rd844;
	xor.b64  	%rd846, %rd826, %rd776;
	xor.b64  	%rd847, %rd826, %rd801;
	and.b64  	%rd848, %rd847, %rd846;
	xor.b64  	%rd849, %rd848, %rd826;
	add.s64 	%rd850, %rd839, %rd849;
	add.s64 	%rd851, %rd850, %rd845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r658,%dummy}, %rd840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r659}, %rd840;
	}
	shf.r.wrap.b32 	%r660, %r659, %r658, 14;
	shf.r.wrap.b32 	%r661, %r658, %r659, 14;
	mov.b64 	%rd852, {%r661, %r660};
	shf.r.wrap.b32 	%r662, %r659, %r658, 18;
	shf.r.wrap.b32 	%r663, %r658, %r659, 18;
	mov.b64 	%rd853, {%r663, %r662};
	xor.b64  	%rd854, %rd853, %rd852;
	shf.l.wrap.b32 	%r664, %r658, %r659, 23;
	shf.l.wrap.b32 	%r665, %r659, %r658, 23;
	mov.b64 	%rd855, {%r665, %r664};
	xor.b64  	%rd856, %rd854, %rd855;
	xor.b64  	%rd857, %rd815, %rd790;
	and.b64  	%rd858, %rd840, %rd857;
	xor.b64  	%rd859, %rd858, %rd790;
	add.s64 	%rd860, %rd765, %rd589;
	ld.const.u64 	%rd861, [k_sha512+192];
	add.s64 	%rd862, %rd860, %rd861;
	add.s64 	%rd863, %rd862, %rd859;
	add.s64 	%rd864, %rd863, %rd856;
	add.s64 	%rd865, %rd864, %rd776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r667}, %rd851;
	}
	shf.r.wrap.b32 	%r668, %r667, %r666, 28;
	shf.r.wrap.b32 	%r669, %r666, %r667, 28;
	mov.b64 	%rd866, {%r669, %r668};
	shf.l.wrap.b32 	%r670, %r666, %r667, 30;
	shf.l.wrap.b32 	%r671, %r667, %r666, 30;
	mov.b64 	%rd867, {%r671, %r670};
	xor.b64  	%rd868, %rd867, %rd866;
	shf.l.wrap.b32 	%r672, %r666, %r667, 25;
	shf.l.wrap.b32 	%r673, %r667, %r666, 25;
	mov.b64 	%rd869, {%r673, %r672};
	xor.b64  	%rd870, %rd868, %rd869;
	xor.b64  	%rd871, %rd851, %rd801;
	xor.b64  	%rd872, %rd851, %rd826;
	and.b64  	%rd873, %rd872, %rd871;
	xor.b64  	%rd874, %rd873, %rd851;
	add.s64 	%rd875, %rd864, %rd874;
	add.s64 	%rd876, %rd875, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd865;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 14;
	shf.r.wrap.b32 	%r677, %r674, %r675, 14;
	mov.b64 	%rd877, {%r677, %r676};
	shf.r.wrap.b32 	%r678, %r675, %r674, 18;
	shf.r.wrap.b32 	%r679, %r674, %r675, 18;
	mov.b64 	%rd878, {%r679, %r678};
	xor.b64  	%rd879, %rd878, %rd877;
	shf.l.wrap.b32 	%r680, %r674, %r675, 23;
	shf.l.wrap.b32 	%r681, %r675, %r674, 23;
	mov.b64 	%rd880, {%r681, %r680};
	xor.b64  	%rd881, %rd879, %rd880;
	xor.b64  	%rd882, %rd840, %rd815;
	and.b64  	%rd883, %rd865, %rd882;
	xor.b64  	%rd884, %rd883, %rd815;
	add.s64 	%rd885, %rd790, %rd599;
	ld.const.u64 	%rd886, [k_sha512+200];
	add.s64 	%rd887, %rd885, %rd886;
	add.s64 	%rd888, %rd887, %rd884;
	add.s64 	%rd889, %rd888, %rd881;
	add.s64 	%rd890, %rd889, %rd801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd876;
	}
	shf.r.wrap.b32 	%r684, %r683, %r682, 28;
	shf.r.wrap.b32 	%r685, %r682, %r683, 28;
	mov.b64 	%rd891, {%r685, %r684};
	shf.l.wrap.b32 	%r686, %r682, %r683, 30;
	shf.l.wrap.b32 	%r687, %r683, %r682, 30;
	mov.b64 	%rd892, {%r687, %r686};
	xor.b64  	%rd893, %rd892, %rd891;
	shf.l.wrap.b32 	%r688, %r682, %r683, 25;
	shf.l.wrap.b32 	%r689, %r683, %r682, 25;
	mov.b64 	%rd894, {%r689, %r688};
	xor.b64  	%rd895, %rd893, %rd894;
	xor.b64  	%rd896, %rd876, %rd826;
	xor.b64  	%rd897, %rd876, %rd851;
	and.b64  	%rd898, %rd897, %rd896;
	xor.b64  	%rd899, %rd898, %rd876;
	add.s64 	%rd900, %rd889, %rd899;
	add.s64 	%rd901, %rd900, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd890;
	}
	shf.r.wrap.b32 	%r692, %r691, %r690, 14;
	shf.r.wrap.b32 	%r693, %r690, %r691, 14;
	mov.b64 	%rd902, {%r693, %r692};
	shf.r.wrap.b32 	%r694, %r691, %r690, 18;
	shf.r.wrap.b32 	%r695, %r690, %r691, 18;
	mov.b64 	%rd903, {%r695, %r694};
	xor.b64  	%rd904, %rd903, %rd902;
	shf.l.wrap.b32 	%r696, %r690, %r691, 23;
	shf.l.wrap.b32 	%r697, %r691, %r690, 23;
	mov.b64 	%rd905, {%r697, %r696};
	xor.b64  	%rd906, %rd904, %rd905;
	xor.b64  	%rd907, %rd865, %rd840;
	and.b64  	%rd908, %rd890, %rd907;
	xor.b64  	%rd909, %rd908, %rd840;
	add.s64 	%rd910, %rd815, %rd606;
	ld.const.u64 	%rd911, [k_sha512+208];
	add.s64 	%rd912, %rd910, %rd911;
	add.s64 	%rd913, %rd912, %rd909;
	add.s64 	%rd914, %rd913, %rd906;
	add.s64 	%rd915, %rd914, %rd826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r699}, %rd901;
	}
	shf.r.wrap.b32 	%r700, %r699, %r698, 28;
	shf.r.wrap.b32 	%r701, %r698, %r699, 28;
	mov.b64 	%rd916, {%r701, %r700};
	shf.l.wrap.b32 	%r702, %r698, %r699, 30;
	shf.l.wrap.b32 	%r703, %r699, %r698, 30;
	mov.b64 	%rd917, {%r703, %r702};
	xor.b64  	%rd918, %rd917, %rd916;
	shf.l.wrap.b32 	%r704, %r698, %r699, 25;
	shf.l.wrap.b32 	%r705, %r699, %r698, 25;
	mov.b64 	%rd919, {%r705, %r704};
	xor.b64  	%rd920, %rd918, %rd919;
	xor.b64  	%rd921, %rd901, %rd851;
	xor.b64  	%rd922, %rd901, %rd876;
	and.b64  	%rd923, %rd922, %rd921;
	xor.b64  	%rd924, %rd923, %rd901;
	add.s64 	%rd925, %rd914, %rd924;
	add.s64 	%rd926, %rd925, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r706,%dummy}, %rd915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r707}, %rd915;
	}
	shf.r.wrap.b32 	%r708, %r707, %r706, 14;
	shf.r.wrap.b32 	%r709, %r706, %r707, 14;
	mov.b64 	%rd927, {%r709, %r708};
	shf.r.wrap.b32 	%r710, %r707, %r706, 18;
	shf.r.wrap.b32 	%r711, %r706, %r707, 18;
	mov.b64 	%rd928, {%r711, %r710};
	xor.b64  	%rd929, %rd928, %rd927;
	shf.l.wrap.b32 	%r712, %r706, %r707, 23;
	shf.l.wrap.b32 	%r713, %r707, %r706, 23;
	mov.b64 	%rd930, {%r713, %r712};
	xor.b64  	%rd931, %rd929, %rd930;
	xor.b64  	%rd932, %rd890, %rd865;
	and.b64  	%rd933, %rd915, %rd932;
	xor.b64  	%rd934, %rd933, %rd865;
	add.s64 	%rd935, %rd840, %rd613;
	ld.const.u64 	%rd936, [k_sha512+216];
	add.s64 	%rd937, %rd935, %rd936;
	add.s64 	%rd938, %rd937, %rd934;
	add.s64 	%rd939, %rd938, %rd931;
	add.s64 	%rd940, %rd939, %rd851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r714,%dummy}, %rd926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r715}, %rd926;
	}
	shf.r.wrap.b32 	%r716, %r715, %r714, 28;
	shf.r.wrap.b32 	%r717, %r714, %r715, 28;
	mov.b64 	%rd941, {%r717, %r716};
	shf.l.wrap.b32 	%r718, %r714, %r715, 30;
	shf.l.wrap.b32 	%r719, %r715, %r714, 30;
	mov.b64 	%rd942, {%r719, %r718};
	xor.b64  	%rd943, %rd942, %rd941;
	shf.l.wrap.b32 	%r720, %r714, %r715, 25;
	shf.l.wrap.b32 	%r721, %r715, %r714, 25;
	mov.b64 	%rd944, {%r721, %r720};
	xor.b64  	%rd945, %rd943, %rd944;
	xor.b64  	%rd946, %rd926, %rd876;
	xor.b64  	%rd947, %rd926, %rd901;
	and.b64  	%rd948, %rd947, %rd946;
	xor.b64  	%rd949, %rd948, %rd926;
	add.s64 	%rd950, %rd939, %rd949;
	add.s64 	%rd951, %rd950, %rd945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r722,%dummy}, %rd940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r723}, %rd940;
	}
	shf.r.wrap.b32 	%r724, %r723, %r722, 14;
	shf.r.wrap.b32 	%r725, %r722, %r723, 14;
	mov.b64 	%rd952, {%r725, %r724};
	shf.r.wrap.b32 	%r726, %r723, %r722, 18;
	shf.r.wrap.b32 	%r727, %r722, %r723, 18;
	mov.b64 	%rd953, {%r727, %r726};
	xor.b64  	%rd954, %rd953, %rd952;
	shf.l.wrap.b32 	%r728, %r722, %r723, 23;
	shf.l.wrap.b32 	%r729, %r723, %r722, 23;
	mov.b64 	%rd955, {%r729, %r728};
	xor.b64  	%rd956, %rd954, %rd955;
	xor.b64  	%rd957, %rd915, %rd890;
	and.b64  	%rd958, %rd940, %rd957;
	xor.b64  	%rd959, %rd958, %rd890;
	add.s64 	%rd960, %rd865, %rd620;
	ld.const.u64 	%rd961, [k_sha512+224];
	add.s64 	%rd962, %rd960, %rd961;
	add.s64 	%rd963, %rd962, %rd959;
	add.s64 	%rd964, %rd963, %rd956;
	add.s64 	%rd965, %rd964, %rd876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd951;
	}
	shf.r.wrap.b32 	%r732, %r731, %r730, 28;
	shf.r.wrap.b32 	%r733, %r730, %r731, 28;
	mov.b64 	%rd966, {%r733, %r732};
	shf.l.wrap.b32 	%r734, %r730, %r731, 30;
	shf.l.wrap.b32 	%r735, %r731, %r730, 30;
	mov.b64 	%rd967, {%r735, %r734};
	xor.b64  	%rd968, %rd967, %rd966;
	shf.l.wrap.b32 	%r736, %r730, %r731, 25;
	shf.l.wrap.b32 	%r737, %r731, %r730, 25;
	mov.b64 	%rd969, {%r737, %r736};
	xor.b64  	%rd970, %rd968, %rd969;
	xor.b64  	%rd971, %rd951, %rd901;
	xor.b64  	%rd972, %rd951, %rd926;
	and.b64  	%rd973, %rd972, %rd971;
	xor.b64  	%rd974, %rd973, %rd951;
	add.s64 	%rd975, %rd964, %rd974;
	add.s64 	%rd976, %rd975, %rd970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r738,%dummy}, %rd965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r739}, %rd965;
	}
	shf.r.wrap.b32 	%r740, %r739, %r738, 14;
	shf.r.wrap.b32 	%r741, %r738, %r739, 14;
	mov.b64 	%rd977, {%r741, %r740};
	shf.r.wrap.b32 	%r742, %r739, %r738, 18;
	shf.r.wrap.b32 	%r743, %r738, %r739, 18;
	mov.b64 	%rd978, {%r743, %r742};
	xor.b64  	%rd979, %rd978, %rd977;
	shf.l.wrap.b32 	%r744, %r738, %r739, 23;
	shf.l.wrap.b32 	%r745, %r739, %r738, 23;
	mov.b64 	%rd980, {%r745, %r744};
	xor.b64  	%rd981, %rd979, %rd980;
	xor.b64  	%rd982, %rd940, %rd915;
	and.b64  	%rd983, %rd965, %rd982;
	xor.b64  	%rd984, %rd983, %rd915;
	add.s64 	%rd985, %rd890, %rd627;
	ld.const.u64 	%rd986, [k_sha512+232];
	add.s64 	%rd987, %rd985, %rd986;
	add.s64 	%rd988, %rd987, %rd984;
	add.s64 	%rd989, %rd988, %rd981;
	add.s64 	%rd990, %rd989, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r746,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r747}, %rd976;
	}
	shf.r.wrap.b32 	%r748, %r747, %r746, 28;
	shf.r.wrap.b32 	%r749, %r746, %r747, 28;
	mov.b64 	%rd991, {%r749, %r748};
	shf.l.wrap.b32 	%r750, %r746, %r747, 30;
	shf.l.wrap.b32 	%r751, %r747, %r746, 30;
	mov.b64 	%rd992, {%r751, %r750};
	xor.b64  	%rd993, %rd992, %rd991;
	shf.l.wrap.b32 	%r752, %r746, %r747, 25;
	shf.l.wrap.b32 	%r753, %r747, %r746, 25;
	mov.b64 	%rd994, {%r753, %r752};
	xor.b64  	%rd995, %rd993, %rd994;
	xor.b64  	%rd996, %rd976, %rd926;
	xor.b64  	%rd997, %rd976, %rd951;
	and.b64  	%rd998, %rd997, %rd996;
	xor.b64  	%rd999, %rd998, %rd976;
	add.s64 	%rd1000, %rd989, %rd999;
	add.s64 	%rd1001, %rd1000, %rd995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r754,%dummy}, %rd990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r755}, %rd990;
	}
	shf.r.wrap.b32 	%r756, %r755, %r754, 14;
	shf.r.wrap.b32 	%r757, %r754, %r755, 14;
	mov.b64 	%rd1002, {%r757, %r756};
	shf.r.wrap.b32 	%r758, %r755, %r754, 18;
	shf.r.wrap.b32 	%r759, %r754, %r755, 18;
	mov.b64 	%rd1003, {%r759, %r758};
	xor.b64  	%rd1004, %rd1003, %rd1002;
	shf.l.wrap.b32 	%r760, %r754, %r755, 23;
	shf.l.wrap.b32 	%r761, %r755, %r754, 23;
	mov.b64 	%rd1005, {%r761, %r760};
	xor.b64  	%rd1006, %rd1004, %rd1005;
	xor.b64  	%rd1007, %rd965, %rd940;
	and.b64  	%rd1008, %rd990, %rd1007;
	xor.b64  	%rd1009, %rd1008, %rd940;
	add.s64 	%rd1010, %rd915, %rd638;
	ld.const.u64 	%rd1011, [k_sha512+240];
	add.s64 	%rd1012, %rd1010, %rd1011;
	add.s64 	%rd1013, %rd1012, %rd1009;
	add.s64 	%rd1014, %rd1013, %rd1006;
	add.s64 	%rd1015, %rd1014, %rd926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r762,%dummy}, %rd1001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r763}, %rd1001;
	}
	shf.r.wrap.b32 	%r764, %r763, %r762, 28;
	shf.r.wrap.b32 	%r765, %r762, %r763, 28;
	mov.b64 	%rd1016, {%r765, %r764};
	shf.l.wrap.b32 	%r766, %r762, %r763, 30;
	shf.l.wrap.b32 	%r767, %r763, %r762, 30;
	mov.b64 	%rd1017, {%r767, %r766};
	xor.b64  	%rd1018, %rd1017, %rd1016;
	shf.l.wrap.b32 	%r768, %r762, %r763, 25;
	shf.l.wrap.b32 	%r769, %r763, %r762, 25;
	mov.b64 	%rd1019, {%r769, %r768};
	xor.b64  	%rd1020, %rd1018, %rd1019;
	xor.b64  	%rd1021, %rd1001, %rd951;
	xor.b64  	%rd1022, %rd1001, %rd976;
	and.b64  	%rd1023, %rd1022, %rd1021;
	xor.b64  	%rd1024, %rd1023, %rd1001;
	add.s64 	%rd1025, %rd1014, %rd1024;
	add.s64 	%rd1026, %rd1025, %rd1020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r770,%dummy}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r771}, %rd1015;
	}
	shf.r.wrap.b32 	%r772, %r771, %r770, 14;
	shf.r.wrap.b32 	%r773, %r770, %r771, 14;
	mov.b64 	%rd1027, {%r773, %r772};
	shf.r.wrap.b32 	%r774, %r771, %r770, 18;
	shf.r.wrap.b32 	%r775, %r770, %r771, 18;
	mov.b64 	%rd1028, {%r775, %r774};
	xor.b64  	%rd1029, %rd1028, %rd1027;
	shf.l.wrap.b32 	%r776, %r770, %r771, 23;
	shf.l.wrap.b32 	%r777, %r771, %r770, 23;
	mov.b64 	%rd1030, {%r777, %r776};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	xor.b64  	%rd1032, %rd990, %rd965;
	and.b64  	%rd1033, %rd1015, %rd1032;
	xor.b64  	%rd1034, %rd1033, %rd965;
	add.s64 	%rd1035, %rd940, %rd651;
	ld.const.u64 	%rd1036, [k_sha512+248];
	add.s64 	%rd1037, %rd1035, %rd1036;
	add.s64 	%rd1038, %rd1037, %rd1034;
	add.s64 	%rd1039, %rd1038, %rd1031;
	add.s64 	%rd1040, %rd1039, %rd951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r778,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r779}, %rd1026;
	}
	shf.r.wrap.b32 	%r780, %r779, %r778, 28;
	shf.r.wrap.b32 	%r781, %r778, %r779, 28;
	mov.b64 	%rd1041, {%r781, %r780};
	shf.l.wrap.b32 	%r782, %r778, %r779, 30;
	shf.l.wrap.b32 	%r783, %r779, %r778, 30;
	mov.b64 	%rd1042, {%r783, %r782};
	xor.b64  	%rd1043, %rd1042, %rd1041;
	shf.l.wrap.b32 	%r784, %r778, %r779, 25;
	shf.l.wrap.b32 	%r785, %r779, %r778, 25;
	mov.b64 	%rd1044, {%r785, %r784};
	xor.b64  	%rd1045, %rd1043, %rd1044;
	xor.b64  	%rd1046, %rd1026, %rd976;
	xor.b64  	%rd1047, %rd1026, %rd1001;
	and.b64  	%rd1048, %rd1047, %rd1046;
	xor.b64  	%rd1049, %rd1048, %rd1026;
	add.s64 	%rd1050, %rd1039, %rd1049;
	add.s64 	%rd1051, %rd1050, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r786,%dummy}, %rd638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r787}, %rd638;
	}
	shf.r.wrap.b32 	%r788, %r787, %r786, 19;
	shf.r.wrap.b32 	%r789, %r786, %r787, 19;
	mov.b64 	%rd1052, {%r789, %r788};
	shf.l.wrap.b32 	%r790, %r786, %r787, 3;
	shf.l.wrap.b32 	%r791, %r787, %r786, 3;
	mov.b64 	%rd1053, {%r791, %r790};
	shr.u64 	%rd1054, %rd638, 6;
	xor.b64  	%rd1055, %rd1052, %rd1054;
	xor.b64  	%rd1056, %rd1055, %rd1053;
	shf.r.wrap.b32 	%r792, %r405, %r404, 1;
	shf.r.wrap.b32 	%r793, %r404, %r405, 1;
	mov.b64 	%rd1057, {%r793, %r792};
	shf.r.wrap.b32 	%r794, %r405, %r404, 8;
	shf.r.wrap.b32 	%r795, %r404, %r405, 8;
	mov.b64 	%rd1058, {%r795, %r794};
	shr.u64 	%rd1059, %rd503, 7;
	xor.b64  	%rd1060, %rd1057, %rd1059;
	xor.b64  	%rd1061, %rd1060, %rd1058;
	add.s64 	%rd1062, %rd491, %rd599;
	add.s64 	%rd1063, %rd1062, %rd1056;
	add.s64 	%rd1064, %rd1063, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r796,%dummy}, %rd651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r797}, %rd651;
	}
	shf.r.wrap.b32 	%r798, %r797, %r796, 19;
	shf.r.wrap.b32 	%r799, %r796, %r797, 19;
	mov.b64 	%rd1065, {%r799, %r798};
	shf.l.wrap.b32 	%r800, %r796, %r797, 3;
	shf.l.wrap.b32 	%r801, %r797, %r796, 3;
	mov.b64 	%rd1066, {%r801, %r800};
	shr.u64 	%rd1067, %rd651, 6;
	xor.b64  	%rd1068, %rd1065, %rd1067;
	xor.b64  	%rd1069, %rd1068, %rd1066;
	shf.r.wrap.b32 	%r802, %r417, %r416, 1;
	shf.r.wrap.b32 	%r803, %r416, %r417, 1;
	mov.b64 	%rd1070, {%r803, %r802};
	shf.r.wrap.b32 	%r804, %r417, %r416, 8;
	shf.r.wrap.b32 	%r805, %r416, %r417, 8;
	mov.b64 	%rd1071, {%r805, %r804};
	shr.u64 	%rd1072, %rd515, 7;
	xor.b64  	%rd1073, %rd1070, %rd1072;
	xor.b64  	%rd1074, %rd1073, %rd1071;
	add.s64 	%rd1075, %rd503, %rd606;
	add.s64 	%rd1076, %rd1075, %rd1069;
	add.s64 	%rd1077, %rd1076, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r807}, %rd1064;
	}
	shf.r.wrap.b32 	%r808, %r807, %r806, 19;
	shf.r.wrap.b32 	%r809, %r806, %r807, 19;
	mov.b64 	%rd1078, {%r809, %r808};
	shf.l.wrap.b32 	%r810, %r806, %r807, 3;
	shf.l.wrap.b32 	%r811, %r807, %r806, 3;
	mov.b64 	%rd1079, {%r811, %r810};
	shr.u64 	%rd1080, %rd1064, 6;
	xor.b64  	%rd1081, %rd1078, %rd1080;
	xor.b64  	%rd1082, %rd1081, %rd1079;
	shf.r.wrap.b32 	%r812, %r429, %r428, 1;
	shf.r.wrap.b32 	%r813, %r428, %r429, 1;
	mov.b64 	%rd1083, {%r813, %r812};
	shf.r.wrap.b32 	%r814, %r429, %r428, 8;
	shf.r.wrap.b32 	%r815, %r428, %r429, 8;
	mov.b64 	%rd1084, {%r815, %r814};
	shr.u64 	%rd1085, %rd527, 7;
	xor.b64  	%rd1086, %rd1083, %rd1085;
	xor.b64  	%rd1087, %rd1086, %rd1084;
	add.s64 	%rd1088, %rd515, %rd613;
	add.s64 	%rd1089, %rd1088, %rd1082;
	add.s64 	%rd1090, %rd1089, %rd1087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r816,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r817}, %rd1077;
	}
	shf.r.wrap.b32 	%r818, %r817, %r816, 19;
	shf.r.wrap.b32 	%r819, %r816, %r817, 19;
	mov.b64 	%rd1091, {%r819, %r818};
	shf.l.wrap.b32 	%r820, %r816, %r817, 3;
	shf.l.wrap.b32 	%r821, %r817, %r816, 3;
	mov.b64 	%rd1092, {%r821, %r820};
	shr.u64 	%rd1093, %rd1077, 6;
	xor.b64  	%rd1094, %rd1091, %rd1093;
	xor.b64  	%rd1095, %rd1094, %rd1092;
	shf.r.wrap.b32 	%r822, %r441, %r440, 1;
	shf.r.wrap.b32 	%r823, %r440, %r441, 1;
	mov.b64 	%rd1096, {%r823, %r822};
	shf.r.wrap.b32 	%r824, %r441, %r440, 8;
	shf.r.wrap.b32 	%r825, %r440, %r441, 8;
	mov.b64 	%rd1097, {%r825, %r824};
	shr.u64 	%rd1098, %rd539, 7;
	xor.b64  	%rd1099, %rd1096, %rd1098;
	xor.b64  	%rd1100, %rd1099, %rd1097;
	add.s64 	%rd1101, %rd620, %rd527;
	add.s64 	%rd1102, %rd1101, %rd1095;
	add.s64 	%rd1103, %rd1102, %rd1100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r826,%dummy}, %rd1090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r827}, %rd1090;
	}
	shf.r.wrap.b32 	%r828, %r827, %r826, 19;
	shf.r.wrap.b32 	%r829, %r826, %r827, 19;
	mov.b64 	%rd1104, {%r829, %r828};
	shf.l.wrap.b32 	%r830, %r826, %r827, 3;
	shf.l.wrap.b32 	%r831, %r827, %r826, 3;
	mov.b64 	%rd1105, {%r831, %r830};
	shr.u64 	%rd1106, %rd1090, 6;
	xor.b64  	%rd1107, %rd1104, %rd1106;
	xor.b64  	%rd1108, %rd1107, %rd1105;
	shf.r.wrap.b32 	%r832, %r453, %r452, 1;
	shf.r.wrap.b32 	%r833, %r452, %r453, 1;
	mov.b64 	%rd1109, {%r833, %r832};
	shf.r.wrap.b32 	%r834, %r453, %r452, 8;
	shf.r.wrap.b32 	%r835, %r452, %r453, 8;
	mov.b64 	%rd1110, {%r835, %r834};
	shr.u64 	%rd1111, %rd551, 7;
	xor.b64  	%rd1112, %rd1109, %rd1111;
	xor.b64  	%rd1113, %rd1112, %rd1110;
	add.s64 	%rd1114, %rd627, %rd539;
	add.s64 	%rd1115, %rd1114, %rd1108;
	add.s64 	%rd1116, %rd1115, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r836,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r837}, %rd1103;
	}
	shf.r.wrap.b32 	%r838, %r837, %r836, 19;
	shf.r.wrap.b32 	%r839, %r836, %r837, 19;
	mov.b64 	%rd1117, {%r839, %r838};
	shf.l.wrap.b32 	%r840, %r836, %r837, 3;
	shf.l.wrap.b32 	%r841, %r837, %r836, 3;
	mov.b64 	%rd1118, {%r841, %r840};
	shr.u64 	%rd1119, %rd1103, 6;
	xor.b64  	%rd1120, %rd1117, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1118;
	shf.r.wrap.b32 	%r842, %r465, %r464, 1;
	shf.r.wrap.b32 	%r843, %r464, %r465, 1;
	mov.b64 	%rd1122, {%r843, %r842};
	shf.r.wrap.b32 	%r844, %r465, %r464, 8;
	shf.r.wrap.b32 	%r845, %r464, %r465, 8;
	mov.b64 	%rd1123, {%r845, %r844};
	shr.u64 	%rd1124, %rd564, 7;
	xor.b64  	%rd1125, %rd1122, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1123;
	add.s64 	%rd1127, %rd638, %rd551;
	add.s64 	%rd1128, %rd1127, %rd1121;
	add.s64 	%rd1129, %rd1128, %rd1126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r847}, %rd1116;
	}
	shf.r.wrap.b32 	%r848, %r847, %r846, 19;
	shf.r.wrap.b32 	%r849, %r846, %r847, 19;
	mov.b64 	%rd1130, {%r849, %r848};
	shf.l.wrap.b32 	%r850, %r846, %r847, 3;
	shf.l.wrap.b32 	%r851, %r847, %r846, 3;
	mov.b64 	%rd1131, {%r851, %r850};
	shr.u64 	%rd1132, %rd1116, 6;
	xor.b64  	%rd1133, %rd1130, %rd1132;
	xor.b64  	%rd1134, %rd1133, %rd1131;
	shf.r.wrap.b32 	%r852, %r477, %r476, 1;
	shf.r.wrap.b32 	%r853, %r476, %r477, 1;
	mov.b64 	%rd1135, {%r853, %r852};
	shf.r.wrap.b32 	%r854, %r477, %r476, 8;
	shf.r.wrap.b32 	%r855, %r476, %r477, 8;
	mov.b64 	%rd1136, {%r855, %r854};
	shr.u64 	%rd1137, %rd577, 7;
	xor.b64  	%rd1138, %rd1135, %rd1137;
	xor.b64  	%rd1139, %rd1138, %rd1136;
	add.s64 	%rd1140, %rd651, %rd564;
	add.s64 	%rd1141, %rd1140, %rd1134;
	add.s64 	%rd1142, %rd1141, %rd1139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r856,%dummy}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd1129;
	}
	shf.r.wrap.b32 	%r858, %r857, %r856, 19;
	shf.r.wrap.b32 	%r859, %r856, %r857, 19;
	mov.b64 	%rd1143, {%r859, %r858};
	shf.l.wrap.b32 	%r860, %r856, %r857, 3;
	shf.l.wrap.b32 	%r861, %r857, %r856, 3;
	mov.b64 	%rd1144, {%r861, %r860};
	shr.u64 	%rd1145, %rd1129, 6;
	xor.b64  	%rd1146, %rd1143, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1144;
	shf.r.wrap.b32 	%r862, %r487, %r486, 1;
	shf.r.wrap.b32 	%r863, %r486, %r487, 1;
	mov.b64 	%rd1148, {%r863, %r862};
	shf.r.wrap.b32 	%r864, %r487, %r486, 8;
	shf.r.wrap.b32 	%r865, %r486, %r487, 8;
	mov.b64 	%rd1149, {%r865, %r864};
	shr.u64 	%rd1150, %rd589, 7;
	xor.b64  	%rd1151, %rd1148, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1149;
	add.s64 	%rd1153, %rd1064, %rd577;
	add.s64 	%rd1154, %rd1153, %rd1147;
	add.s64 	%rd1155, %rd1154, %rd1152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r866,%dummy}, %rd1142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r867}, %rd1142;
	}
	shf.r.wrap.b32 	%r868, %r867, %r866, 19;
	shf.r.wrap.b32 	%r869, %r866, %r867, 19;
	mov.b64 	%rd1156, {%r869, %r868};
	shf.l.wrap.b32 	%r870, %r866, %r867, 3;
	shf.l.wrap.b32 	%r871, %r867, %r866, 3;
	mov.b64 	%rd1157, {%r871, %r870};
	shr.u64 	%rd1158, %rd1142, 6;
	xor.b64  	%rd1159, %rd1156, %rd1158;
	xor.b64  	%rd1160, %rd1159, %rd1157;
	shf.r.wrap.b32 	%r872, %r493, %r492, 1;
	shf.r.wrap.b32 	%r873, %r492, %r493, 1;
	mov.b64 	%rd1161, {%r873, %r872};
	shf.r.wrap.b32 	%r874, %r493, %r492, 8;
	shf.r.wrap.b32 	%r875, %r492, %r493, 8;
	mov.b64 	%rd1162, {%r875, %r874};
	shr.u64 	%rd1163, %rd599, 7;
	xor.b64  	%rd1164, %rd1161, %rd1163;
	xor.b64  	%rd1165, %rd1164, %rd1162;
	add.s64 	%rd1166, %rd1077, %rd589;
	add.s64 	%rd1167, %rd1166, %rd1160;
	add.s64 	%rd1168, %rd1167, %rd1165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r876,%dummy}, %rd1155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r877}, %rd1155;
	}
	shf.r.wrap.b32 	%r878, %r877, %r876, 19;
	shf.r.wrap.b32 	%r879, %r876, %r877, 19;
	mov.b64 	%rd1169, {%r879, %r878};
	shf.l.wrap.b32 	%r880, %r876, %r877, 3;
	shf.l.wrap.b32 	%r881, %r877, %r876, 3;
	mov.b64 	%rd1170, {%r881, %r880};
	shr.u64 	%rd1171, %rd1155, 6;
	xor.b64  	%rd1172, %rd1169, %rd1171;
	xor.b64  	%rd1173, %rd1172, %rd1170;
	shf.r.wrap.b32 	%r882, %r499, %r498, 1;
	shf.r.wrap.b32 	%r883, %r498, %r499, 1;
	mov.b64 	%rd1174, {%r883, %r882};
	shf.r.wrap.b32 	%r884, %r499, %r498, 8;
	shf.r.wrap.b32 	%r885, %r498, %r499, 8;
	mov.b64 	%rd1175, {%r885, %r884};
	shr.u64 	%rd1176, %rd606, 7;
	xor.b64  	%rd1177, %rd1174, %rd1176;
	xor.b64  	%rd1178, %rd1177, %rd1175;
	add.s64 	%rd1179, %rd1090, %rd599;
	add.s64 	%rd1180, %rd1179, %rd1173;
	add.s64 	%rd1181, %rd1180, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r886,%dummy}, %rd1168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r887}, %rd1168;
	}
	shf.r.wrap.b32 	%r888, %r887, %r886, 19;
	shf.r.wrap.b32 	%r889, %r886, %r887, 19;
	mov.b64 	%rd1182, {%r889, %r888};
	shf.l.wrap.b32 	%r890, %r886, %r887, 3;
	shf.l.wrap.b32 	%r891, %r887, %r886, 3;
	mov.b64 	%rd1183, {%r891, %r890};
	shr.u64 	%rd1184, %rd1168, 6;
	xor.b64  	%rd1185, %rd1182, %rd1184;
	xor.b64  	%rd1186, %rd1185, %rd1183;
	shf.r.wrap.b32 	%r892, %r505, %r504, 1;
	shf.r.wrap.b32 	%r893, %r504, %r505, 1;
	mov.b64 	%rd1187, {%r893, %r892};
	shf.r.wrap.b32 	%r894, %r505, %r504, 8;
	shf.r.wrap.b32 	%r895, %r504, %r505, 8;
	mov.b64 	%rd1188, {%r895, %r894};
	shr.u64 	%rd1189, %rd613, 7;
	xor.b64  	%rd1190, %rd1187, %rd1189;
	xor.b64  	%rd1191, %rd1190, %rd1188;
	add.s64 	%rd1192, %rd1103, %rd606;
	add.s64 	%rd1193, %rd1192, %rd1186;
	add.s64 	%rd1194, %rd1193, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r896,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r897}, %rd1181;
	}
	shf.r.wrap.b32 	%r898, %r897, %r896, 19;
	shf.r.wrap.b32 	%r899, %r896, %r897, 19;
	mov.b64 	%rd1195, {%r899, %r898};
	shf.l.wrap.b32 	%r900, %r896, %r897, 3;
	shf.l.wrap.b32 	%r901, %r897, %r896, 3;
	mov.b64 	%rd1196, {%r901, %r900};
	shr.u64 	%rd1197, %rd1181, 6;
	xor.b64  	%rd1198, %rd1195, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1196;
	shf.r.wrap.b32 	%r902, %r511, %r510, 1;
	shf.r.wrap.b32 	%r903, %r510, %r511, 1;
	mov.b64 	%rd1200, {%r903, %r902};
	shf.r.wrap.b32 	%r904, %r511, %r510, 8;
	shf.r.wrap.b32 	%r905, %r510, %r511, 8;
	mov.b64 	%rd1201, {%r905, %r904};
	shr.u64 	%rd1202, %rd620, 7;
	xor.b64  	%rd1203, %rd1200, %rd1202;
	xor.b64  	%rd1204, %rd1203, %rd1201;
	add.s64 	%rd1205, %rd1116, %rd613;
	add.s64 	%rd1206, %rd1205, %rd1199;
	add.s64 	%rd1207, %rd1206, %rd1204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r906,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r907}, %rd1194;
	}
	shf.r.wrap.b32 	%r908, %r907, %r906, 19;
	shf.r.wrap.b32 	%r909, %r906, %r907, 19;
	mov.b64 	%rd1208, {%r909, %r908};
	shf.l.wrap.b32 	%r910, %r906, %r907, 3;
	shf.l.wrap.b32 	%r911, %r907, %r906, 3;
	mov.b64 	%rd1209, {%r911, %r910};
	shr.u64 	%rd1210, %rd1194, 6;
	xor.b64  	%rd1211, %rd1208, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd1209;
	shf.r.wrap.b32 	%r912, %r521, %r520, 1;
	shf.r.wrap.b32 	%r913, %r520, %r521, 1;
	mov.b64 	%rd1213, {%r913, %r912};
	shf.r.wrap.b32 	%r914, %r521, %r520, 8;
	shf.r.wrap.b32 	%r915, %r520, %r521, 8;
	mov.b64 	%rd1214, {%r915, %r914};
	shr.u64 	%rd1215, %rd627, 7;
	xor.b64  	%rd1216, %rd1213, %rd1215;
	xor.b64  	%rd1217, %rd1216, %rd1214;
	add.s64 	%rd1218, %rd1129, %rd620;
	add.s64 	%rd1219, %rd1218, %rd1212;
	add.s64 	%rd1220, %rd1219, %rd1217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r916,%dummy}, %rd1207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd1207;
	}
	shf.r.wrap.b32 	%r918, %r917, %r916, 19;
	shf.r.wrap.b32 	%r919, %r916, %r917, 19;
	mov.b64 	%rd1221, {%r919, %r918};
	shf.l.wrap.b32 	%r920, %r916, %r917, 3;
	shf.l.wrap.b32 	%r921, %r917, %r916, 3;
	mov.b64 	%rd1222, {%r921, %r920};
	shr.u64 	%rd1223, %rd1207, 6;
	xor.b64  	%rd1224, %rd1221, %rd1223;
	xor.b64  	%rd1225, %rd1224, %rd1222;
	shf.r.wrap.b32 	%r922, %r787, %r786, 1;
	shf.r.wrap.b32 	%r923, %r786, %r787, 1;
	mov.b64 	%rd1226, {%r923, %r922};
	shf.r.wrap.b32 	%r924, %r787, %r786, 8;
	shf.r.wrap.b32 	%r925, %r786, %r787, 8;
	mov.b64 	%rd1227, {%r925, %r924};
	shr.u64 	%rd1228, %rd638, 7;
	xor.b64  	%rd1229, %rd1226, %rd1228;
	xor.b64  	%rd1230, %rd1229, %rd1227;
	add.s64 	%rd1231, %rd1142, %rd627;
	add.s64 	%rd1232, %rd1231, %rd1225;
	add.s64 	%rd1233, %rd1232, %rd1230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd1220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd1220;
	}
	shf.r.wrap.b32 	%r928, %r927, %r926, 19;
	shf.r.wrap.b32 	%r929, %r926, %r927, 19;
	mov.b64 	%rd1234, {%r929, %r928};
	shf.l.wrap.b32 	%r930, %r926, %r927, 3;
	shf.l.wrap.b32 	%r931, %r927, %r926, 3;
	mov.b64 	%rd1235, {%r931, %r930};
	shr.u64 	%rd1236, %rd1220, 6;
	xor.b64  	%rd1237, %rd1234, %rd1236;
	xor.b64  	%rd1238, %rd1237, %rd1235;
	shf.r.wrap.b32 	%r932, %r797, %r796, 1;
	shf.r.wrap.b32 	%r933, %r796, %r797, 1;
	mov.b64 	%rd1239, {%r933, %r932};
	shf.r.wrap.b32 	%r934, %r797, %r796, 8;
	shf.r.wrap.b32 	%r935, %r796, %r797, 8;
	mov.b64 	%rd1240, {%r935, %r934};
	shr.u64 	%rd1241, %rd651, 7;
	xor.b64  	%rd1242, %rd1239, %rd1241;
	xor.b64  	%rd1243, %rd1242, %rd1240;
	add.s64 	%rd1244, %rd1155, %rd638;
	add.s64 	%rd1245, %rd1244, %rd1238;
	add.s64 	%rd1246, %rd1245, %rd1243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r936,%dummy}, %rd1233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd1233;
	}
	shf.r.wrap.b32 	%r938, %r937, %r936, 19;
	shf.r.wrap.b32 	%r939, %r936, %r937, 19;
	mov.b64 	%rd1247, {%r939, %r938};
	shf.l.wrap.b32 	%r940, %r936, %r937, 3;
	shf.l.wrap.b32 	%r941, %r937, %r936, 3;
	mov.b64 	%rd1248, {%r941, %r940};
	shr.u64 	%rd1249, %rd1233, 6;
	xor.b64  	%rd1250, %rd1247, %rd1249;
	xor.b64  	%rd1251, %rd1250, %rd1248;
	shf.r.wrap.b32 	%r942, %r807, %r806, 1;
	shf.r.wrap.b32 	%r943, %r806, %r807, 1;
	mov.b64 	%rd1252, {%r943, %r942};
	shf.r.wrap.b32 	%r944, %r807, %r806, 8;
	shf.r.wrap.b32 	%r945, %r806, %r807, 8;
	mov.b64 	%rd1253, {%r945, %r944};
	shr.u64 	%rd1254, %rd1064, 7;
	xor.b64  	%rd1255, %rd1252, %rd1254;
	xor.b64  	%rd1256, %rd1255, %rd1253;
	add.s64 	%rd1257, %rd1168, %rd651;
	add.s64 	%rd1258, %rd1257, %rd1251;
	add.s64 	%rd1259, %rd1258, %rd1256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r946,%dummy}, %rd1040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r947}, %rd1040;
	}
	shf.r.wrap.b32 	%r948, %r947, %r946, 14;
	shf.r.wrap.b32 	%r949, %r946, %r947, 14;
	mov.b64 	%rd1260, {%r949, %r948};
	shf.r.wrap.b32 	%r950, %r947, %r946, 18;
	shf.r.wrap.b32 	%r951, %r946, %r947, 18;
	mov.b64 	%rd1261, {%r951, %r950};
	xor.b64  	%rd1262, %rd1261, %rd1260;
	shf.l.wrap.b32 	%r952, %r946, %r947, 23;
	shf.l.wrap.b32 	%r953, %r947, %r946, 23;
	mov.b64 	%rd1263, {%r953, %r952};
	xor.b64  	%rd1264, %rd1262, %rd1263;
	xor.b64  	%rd1265, %rd1015, %rd990;
	and.b64  	%rd1266, %rd1265, %rd1040;
	xor.b64  	%rd1267, %rd1266, %rd990;
	add.s64 	%rd1268, %rd1267, %rd965;
	add.s64 	%rd1269, %rd1268, %rd1064;
	ld.const.u64 	%rd1270, [k_sha512+256];
	add.s64 	%rd1271, %rd1269, %rd1270;
	add.s64 	%rd1272, %rd1271, %rd1264;
	add.s64 	%rd1273, %rd1272, %rd976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd1051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r955}, %rd1051;
	}
	shf.r.wrap.b32 	%r956, %r955, %r954, 28;
	shf.r.wrap.b32 	%r957, %r954, %r955, 28;
	mov.b64 	%rd1274, {%r957, %r956};
	shf.l.wrap.b32 	%r958, %r954, %r955, 30;
	shf.l.wrap.b32 	%r959, %r955, %r954, 30;
	mov.b64 	%rd1275, {%r959, %r958};
	xor.b64  	%rd1276, %rd1275, %rd1274;
	shf.l.wrap.b32 	%r960, %r954, %r955, 25;
	shf.l.wrap.b32 	%r961, %r955, %r954, 25;
	mov.b64 	%rd1277, {%r961, %r960};
	xor.b64  	%rd1278, %rd1276, %rd1277;
	xor.b64  	%rd1279, %rd1051, %rd1001;
	xor.b64  	%rd1280, %rd1051, %rd1026;
	and.b64  	%rd1281, %rd1280, %rd1279;
	xor.b64  	%rd1282, %rd1281, %rd1051;
	add.s64 	%rd1283, %rd1272, %rd1282;
	add.s64 	%rd1284, %rd1283, %rd1278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r962,%dummy}, %rd1273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r963}, %rd1273;
	}
	shf.r.wrap.b32 	%r964, %r963, %r962, 14;
	shf.r.wrap.b32 	%r965, %r962, %r963, 14;
	mov.b64 	%rd1285, {%r965, %r964};
	shf.r.wrap.b32 	%r966, %r963, %r962, 18;
	shf.r.wrap.b32 	%r967, %r962, %r963, 18;
	mov.b64 	%rd1286, {%r967, %r966};
	xor.b64  	%rd1287, %rd1286, %rd1285;
	shf.l.wrap.b32 	%r968, %r962, %r963, 23;
	shf.l.wrap.b32 	%r969, %r963, %r962, 23;
	mov.b64 	%rd1288, {%r969, %r968};
	xor.b64  	%rd1289, %rd1287, %rd1288;
	xor.b64  	%rd1290, %rd1040, %rd1015;
	and.b64  	%rd1291, %rd1273, %rd1290;
	xor.b64  	%rd1292, %rd1291, %rd1015;
	add.s64 	%rd1293, %rd1077, %rd990;
	ld.const.u64 	%rd1294, [k_sha512+264];
	add.s64 	%rd1295, %rd1293, %rd1294;
	add.s64 	%rd1296, %rd1295, %rd1292;
	add.s64 	%rd1297, %rd1296, %rd1289;
	add.s64 	%rd1298, %rd1297, %rd1001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r970,%dummy}, %rd1284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r971}, %rd1284;
	}
	shf.r.wrap.b32 	%r972, %r971, %r970, 28;
	shf.r.wrap.b32 	%r973, %r970, %r971, 28;
	mov.b64 	%rd1299, {%r973, %r972};
	shf.l.wrap.b32 	%r974, %r970, %r971, 30;
	shf.l.wrap.b32 	%r975, %r971, %r970, 30;
	mov.b64 	%rd1300, {%r975, %r974};
	xor.b64  	%rd1301, %rd1300, %rd1299;
	shf.l.wrap.b32 	%r976, %r970, %r971, 25;
	shf.l.wrap.b32 	%r977, %r971, %r970, 25;
	mov.b64 	%rd1302, {%r977, %r976};
	xor.b64  	%rd1303, %rd1301, %rd1302;
	xor.b64  	%rd1304, %rd1284, %rd1026;
	xor.b64  	%rd1305, %rd1284, %rd1051;
	and.b64  	%rd1306, %rd1305, %rd1304;
	xor.b64  	%rd1307, %rd1306, %rd1284;
	add.s64 	%rd1308, %rd1297, %rd1307;
	add.s64 	%rd1309, %rd1308, %rd1303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r978,%dummy}, %rd1298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r979}, %rd1298;
	}
	shf.r.wrap.b32 	%r980, %r979, %r978, 14;
	shf.r.wrap.b32 	%r981, %r978, %r979, 14;
	mov.b64 	%rd1310, {%r981, %r980};
	shf.r.wrap.b32 	%r982, %r979, %r978, 18;
	shf.r.wrap.b32 	%r983, %r978, %r979, 18;
	mov.b64 	%rd1311, {%r983, %r982};
	xor.b64  	%rd1312, %rd1311, %rd1310;
	shf.l.wrap.b32 	%r984, %r978, %r979, 23;
	shf.l.wrap.b32 	%r985, %r979, %r978, 23;
	mov.b64 	%rd1313, {%r985, %r984};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	xor.b64  	%rd1315, %rd1273, %rd1040;
	and.b64  	%rd1316, %rd1298, %rd1315;
	xor.b64  	%rd1317, %rd1316, %rd1040;
	add.s64 	%rd1318, %rd1090, %rd1015;
	ld.const.u64 	%rd1319, [k_sha512+272];
	add.s64 	%rd1320, %rd1318, %rd1319;
	add.s64 	%rd1321, %rd1320, %rd1317;
	add.s64 	%rd1322, %rd1321, %rd1314;
	add.s64 	%rd1323, %rd1322, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r986,%dummy}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r987}, %rd1309;
	}
	shf.r.wrap.b32 	%r988, %r987, %r986, 28;
	shf.r.wrap.b32 	%r989, %r986, %r987, 28;
	mov.b64 	%rd1324, {%r989, %r988};
	shf.l.wrap.b32 	%r990, %r986, %r987, 30;
	shf.l.wrap.b32 	%r991, %r987, %r986, 30;
	mov.b64 	%rd1325, {%r991, %r990};
	xor.b64  	%rd1326, %rd1325, %rd1324;
	shf.l.wrap.b32 	%r992, %r986, %r987, 25;
	shf.l.wrap.b32 	%r993, %r987, %r986, 25;
	mov.b64 	%rd1327, {%r993, %r992};
	xor.b64  	%rd1328, %rd1326, %rd1327;
	xor.b64  	%rd1329, %rd1309, %rd1051;
	xor.b64  	%rd1330, %rd1309, %rd1284;
	and.b64  	%rd1331, %rd1330, %rd1329;
	xor.b64  	%rd1332, %rd1331, %rd1309;
	add.s64 	%rd1333, %rd1322, %rd1332;
	add.s64 	%rd1334, %rd1333, %rd1328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r994,%dummy}, %rd1323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r995}, %rd1323;
	}
	shf.r.wrap.b32 	%r996, %r995, %r994, 14;
	shf.r.wrap.b32 	%r997, %r994, %r995, 14;
	mov.b64 	%rd1335, {%r997, %r996};
	shf.r.wrap.b32 	%r998, %r995, %r994, 18;
	shf.r.wrap.b32 	%r999, %r994, %r995, 18;
	mov.b64 	%rd1336, {%r999, %r998};
	xor.b64  	%rd1337, %rd1336, %rd1335;
	shf.l.wrap.b32 	%r1000, %r994, %r995, 23;
	shf.l.wrap.b32 	%r1001, %r995, %r994, 23;
	mov.b64 	%rd1338, {%r1001, %r1000};
	xor.b64  	%rd1339, %rd1337, %rd1338;
	xor.b64  	%rd1340, %rd1298, %rd1273;
	and.b64  	%rd1341, %rd1323, %rd1340;
	xor.b64  	%rd1342, %rd1341, %rd1273;
	add.s64 	%rd1343, %rd1103, %rd1040;
	ld.const.u64 	%rd1344, [k_sha512+280];
	add.s64 	%rd1345, %rd1343, %rd1344;
	add.s64 	%rd1346, %rd1345, %rd1342;
	add.s64 	%rd1347, %rd1346, %rd1339;
	add.s64 	%rd1348, %rd1347, %rd1051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1002,%dummy}, %rd1334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1003}, %rd1334;
	}
	shf.r.wrap.b32 	%r1004, %r1003, %r1002, 28;
	shf.r.wrap.b32 	%r1005, %r1002, %r1003, 28;
	mov.b64 	%rd1349, {%r1005, %r1004};
	shf.l.wrap.b32 	%r1006, %r1002, %r1003, 30;
	shf.l.wrap.b32 	%r1007, %r1003, %r1002, 30;
	mov.b64 	%rd1350, {%r1007, %r1006};
	xor.b64  	%rd1351, %rd1350, %rd1349;
	shf.l.wrap.b32 	%r1008, %r1002, %r1003, 25;
	shf.l.wrap.b32 	%r1009, %r1003, %r1002, 25;
	mov.b64 	%rd1352, {%r1009, %r1008};
	xor.b64  	%rd1353, %rd1351, %rd1352;
	xor.b64  	%rd1354, %rd1334, %rd1284;
	xor.b64  	%rd1355, %rd1334, %rd1309;
	and.b64  	%rd1356, %rd1355, %rd1354;
	xor.b64  	%rd1357, %rd1356, %rd1334;
	add.s64 	%rd1358, %rd1347, %rd1357;
	add.s64 	%rd1359, %rd1358, %rd1353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1010,%dummy}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1011}, %rd1348;
	}
	shf.r.wrap.b32 	%r1012, %r1011, %r1010, 14;
	shf.r.wrap.b32 	%r1013, %r1010, %r1011, 14;
	mov.b64 	%rd1360, {%r1013, %r1012};
	shf.r.wrap.b32 	%r1014, %r1011, %r1010, 18;
	shf.r.wrap.b32 	%r1015, %r1010, %r1011, 18;
	mov.b64 	%rd1361, {%r1015, %r1014};
	xor.b64  	%rd1362, %rd1361, %rd1360;
	shf.l.wrap.b32 	%r1016, %r1010, %r1011, 23;
	shf.l.wrap.b32 	%r1017, %r1011, %r1010, 23;
	mov.b64 	%rd1363, {%r1017, %r1016};
	xor.b64  	%rd1364, %rd1362, %rd1363;
	xor.b64  	%rd1365, %rd1323, %rd1298;
	and.b64  	%rd1366, %rd1348, %rd1365;
	xor.b64  	%rd1367, %rd1366, %rd1298;
	add.s64 	%rd1368, %rd1273, %rd1116;
	ld.const.u64 	%rd1369, [k_sha512+288];
	add.s64 	%rd1370, %rd1368, %rd1369;
	add.s64 	%rd1371, %rd1370, %rd1367;
	add.s64 	%rd1372, %rd1371, %rd1364;
	add.s64 	%rd1373, %rd1372, %rd1284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1018,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1019}, %rd1359;
	}
	shf.r.wrap.b32 	%r1020, %r1019, %r1018, 28;
	shf.r.wrap.b32 	%r1021, %r1018, %r1019, 28;
	mov.b64 	%rd1374, {%r1021, %r1020};
	shf.l.wrap.b32 	%r1022, %r1018, %r1019, 30;
	shf.l.wrap.b32 	%r1023, %r1019, %r1018, 30;
	mov.b64 	%rd1375, {%r1023, %r1022};
	xor.b64  	%rd1376, %rd1375, %rd1374;
	shf.l.wrap.b32 	%r1024, %r1018, %r1019, 25;
	shf.l.wrap.b32 	%r1025, %r1019, %r1018, 25;
	mov.b64 	%rd1377, {%r1025, %r1024};
	xor.b64  	%rd1378, %rd1376, %rd1377;
	xor.b64  	%rd1379, %rd1359, %rd1309;
	xor.b64  	%rd1380, %rd1359, %rd1334;
	and.b64  	%rd1381, %rd1380, %rd1379;
	xor.b64  	%rd1382, %rd1381, %rd1359;
	add.s64 	%rd1383, %rd1372, %rd1382;
	add.s64 	%rd1384, %rd1383, %rd1378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1026,%dummy}, %rd1373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1027}, %rd1373;
	}
	shf.r.wrap.b32 	%r1028, %r1027, %r1026, 14;
	shf.r.wrap.b32 	%r1029, %r1026, %r1027, 14;
	mov.b64 	%rd1385, {%r1029, %r1028};
	shf.r.wrap.b32 	%r1030, %r1027, %r1026, 18;
	shf.r.wrap.b32 	%r1031, %r1026, %r1027, 18;
	mov.b64 	%rd1386, {%r1031, %r1030};
	xor.b64  	%rd1387, %rd1386, %rd1385;
	shf.l.wrap.b32 	%r1032, %r1026, %r1027, 23;
	shf.l.wrap.b32 	%r1033, %r1027, %r1026, 23;
	mov.b64 	%rd1388, {%r1033, %r1032};
	xor.b64  	%rd1389, %rd1387, %rd1388;
	xor.b64  	%rd1390, %rd1348, %rd1323;
	and.b64  	%rd1391, %rd1373, %rd1390;
	xor.b64  	%rd1392, %rd1391, %rd1323;
	add.s64 	%rd1393, %rd1298, %rd1129;
	ld.const.u64 	%rd1394, [k_sha512+296];
	add.s64 	%rd1395, %rd1393, %rd1394;
	add.s64 	%rd1396, %rd1395, %rd1392;
	add.s64 	%rd1397, %rd1396, %rd1389;
	add.s64 	%rd1398, %rd1397, %rd1309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1034,%dummy}, %rd1384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1035}, %rd1384;
	}
	shf.r.wrap.b32 	%r1036, %r1035, %r1034, 28;
	shf.r.wrap.b32 	%r1037, %r1034, %r1035, 28;
	mov.b64 	%rd1399, {%r1037, %r1036};
	shf.l.wrap.b32 	%r1038, %r1034, %r1035, 30;
	shf.l.wrap.b32 	%r1039, %r1035, %r1034, 30;
	mov.b64 	%rd1400, {%r1039, %r1038};
	xor.b64  	%rd1401, %rd1400, %rd1399;
	shf.l.wrap.b32 	%r1040, %r1034, %r1035, 25;
	shf.l.wrap.b32 	%r1041, %r1035, %r1034, 25;
	mov.b64 	%rd1402, {%r1041, %r1040};
	xor.b64  	%rd1403, %rd1401, %rd1402;
	xor.b64  	%rd1404, %rd1384, %rd1334;
	xor.b64  	%rd1405, %rd1384, %rd1359;
	and.b64  	%rd1406, %rd1405, %rd1404;
	xor.b64  	%rd1407, %rd1406, %rd1384;
	add.s64 	%rd1408, %rd1397, %rd1407;
	add.s64 	%rd1409, %rd1408, %rd1403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1042,%dummy}, %rd1398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1043}, %rd1398;
	}
	shf.r.wrap.b32 	%r1044, %r1043, %r1042, 14;
	shf.r.wrap.b32 	%r1045, %r1042, %r1043, 14;
	mov.b64 	%rd1410, {%r1045, %r1044};
	shf.r.wrap.b32 	%r1046, %r1043, %r1042, 18;
	shf.r.wrap.b32 	%r1047, %r1042, %r1043, 18;
	mov.b64 	%rd1411, {%r1047, %r1046};
	xor.b64  	%rd1412, %rd1411, %rd1410;
	shf.l.wrap.b32 	%r1048, %r1042, %r1043, 23;
	shf.l.wrap.b32 	%r1049, %r1043, %r1042, 23;
	mov.b64 	%rd1413, {%r1049, %r1048};
	xor.b64  	%rd1414, %rd1412, %rd1413;
	xor.b64  	%rd1415, %rd1373, %rd1348;
	and.b64  	%rd1416, %rd1398, %rd1415;
	xor.b64  	%rd1417, %rd1416, %rd1348;
	add.s64 	%rd1418, %rd1323, %rd1142;
	ld.const.u64 	%rd1419, [k_sha512+304];
	add.s64 	%rd1420, %rd1418, %rd1419;
	add.s64 	%rd1421, %rd1420, %rd1417;
	add.s64 	%rd1422, %rd1421, %rd1414;
	add.s64 	%rd1423, %rd1422, %rd1334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1050,%dummy}, %rd1409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1051}, %rd1409;
	}
	shf.r.wrap.b32 	%r1052, %r1051, %r1050, 28;
	shf.r.wrap.b32 	%r1053, %r1050, %r1051, 28;
	mov.b64 	%rd1424, {%r1053, %r1052};
	shf.l.wrap.b32 	%r1054, %r1050, %r1051, 30;
	shf.l.wrap.b32 	%r1055, %r1051, %r1050, 30;
	mov.b64 	%rd1425, {%r1055, %r1054};
	xor.b64  	%rd1426, %rd1425, %rd1424;
	shf.l.wrap.b32 	%r1056, %r1050, %r1051, 25;
	shf.l.wrap.b32 	%r1057, %r1051, %r1050, 25;
	mov.b64 	%rd1427, {%r1057, %r1056};
	xor.b64  	%rd1428, %rd1426, %rd1427;
	xor.b64  	%rd1429, %rd1409, %rd1359;
	xor.b64  	%rd1430, %rd1409, %rd1384;
	and.b64  	%rd1431, %rd1430, %rd1429;
	xor.b64  	%rd1432, %rd1431, %rd1409;
	add.s64 	%rd1433, %rd1422, %rd1432;
	add.s64 	%rd1434, %rd1433, %rd1428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1058,%dummy}, %rd1423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1059}, %rd1423;
	}
	shf.r.wrap.b32 	%r1060, %r1059, %r1058, 14;
	shf.r.wrap.b32 	%r1061, %r1058, %r1059, 14;
	mov.b64 	%rd1435, {%r1061, %r1060};
	shf.r.wrap.b32 	%r1062, %r1059, %r1058, 18;
	shf.r.wrap.b32 	%r1063, %r1058, %r1059, 18;
	mov.b64 	%rd1436, {%r1063, %r1062};
	xor.b64  	%rd1437, %rd1436, %rd1435;
	shf.l.wrap.b32 	%r1064, %r1058, %r1059, 23;
	shf.l.wrap.b32 	%r1065, %r1059, %r1058, 23;
	mov.b64 	%rd1438, {%r1065, %r1064};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	xor.b64  	%rd1440, %rd1398, %rd1373;
	and.b64  	%rd1441, %rd1423, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd1373;
	add.s64 	%rd1443, %rd1348, %rd1155;
	ld.const.u64 	%rd1444, [k_sha512+312];
	add.s64 	%rd1445, %rd1443, %rd1444;
	add.s64 	%rd1446, %rd1445, %rd1442;
	add.s64 	%rd1447, %rd1446, %rd1439;
	add.s64 	%rd1448, %rd1447, %rd1359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd1434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1067}, %rd1434;
	}
	shf.r.wrap.b32 	%r1068, %r1067, %r1066, 28;
	shf.r.wrap.b32 	%r1069, %r1066, %r1067, 28;
	mov.b64 	%rd1449, {%r1069, %r1068};
	shf.l.wrap.b32 	%r1070, %r1066, %r1067, 30;
	shf.l.wrap.b32 	%r1071, %r1067, %r1066, 30;
	mov.b64 	%rd1450, {%r1071, %r1070};
	xor.b64  	%rd1451, %rd1450, %rd1449;
	shf.l.wrap.b32 	%r1072, %r1066, %r1067, 25;
	shf.l.wrap.b32 	%r1073, %r1067, %r1066, 25;
	mov.b64 	%rd1452, {%r1073, %r1072};
	xor.b64  	%rd1453, %rd1451, %rd1452;
	xor.b64  	%rd1454, %rd1434, %rd1384;
	xor.b64  	%rd1455, %rd1434, %rd1409;
	and.b64  	%rd1456, %rd1455, %rd1454;
	xor.b64  	%rd1457, %rd1456, %rd1434;
	add.s64 	%rd1458, %rd1447, %rd1457;
	add.s64 	%rd1459, %rd1458, %rd1453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1074,%dummy}, %rd1448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1075}, %rd1448;
	}
	shf.r.wrap.b32 	%r1076, %r1075, %r1074, 14;
	shf.r.wrap.b32 	%r1077, %r1074, %r1075, 14;
	mov.b64 	%rd1460, {%r1077, %r1076};
	shf.r.wrap.b32 	%r1078, %r1075, %r1074, 18;
	shf.r.wrap.b32 	%r1079, %r1074, %r1075, 18;
	mov.b64 	%rd1461, {%r1079, %r1078};
	xor.b64  	%rd1462, %rd1461, %rd1460;
	shf.l.wrap.b32 	%r1080, %r1074, %r1075, 23;
	shf.l.wrap.b32 	%r1081, %r1075, %r1074, 23;
	mov.b64 	%rd1463, {%r1081, %r1080};
	xor.b64  	%rd1464, %rd1462, %rd1463;
	xor.b64  	%rd1465, %rd1423, %rd1398;
	and.b64  	%rd1466, %rd1448, %rd1465;
	xor.b64  	%rd1467, %rd1466, %rd1398;
	add.s64 	%rd1468, %rd1373, %rd1168;
	ld.const.u64 	%rd1469, [k_sha512+320];
	add.s64 	%rd1470, %rd1468, %rd1469;
	add.s64 	%rd1471, %rd1470, %rd1467;
	add.s64 	%rd1472, %rd1471, %rd1464;
	add.s64 	%rd1473, %rd1472, %rd1384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd1459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1083}, %rd1459;
	}
	shf.r.wrap.b32 	%r1084, %r1083, %r1082, 28;
	shf.r.wrap.b32 	%r1085, %r1082, %r1083, 28;
	mov.b64 	%rd1474, {%r1085, %r1084};
	shf.l.wrap.b32 	%r1086, %r1082, %r1083, 30;
	shf.l.wrap.b32 	%r1087, %r1083, %r1082, 30;
	mov.b64 	%rd1475, {%r1087, %r1086};
	xor.b64  	%rd1476, %rd1475, %rd1474;
	shf.l.wrap.b32 	%r1088, %r1082, %r1083, 25;
	shf.l.wrap.b32 	%r1089, %r1083, %r1082, 25;
	mov.b64 	%rd1477, {%r1089, %r1088};
	xor.b64  	%rd1478, %rd1476, %rd1477;
	xor.b64  	%rd1479, %rd1459, %rd1409;
	xor.b64  	%rd1480, %rd1459, %rd1434;
	and.b64  	%rd1481, %rd1480, %rd1479;
	xor.b64  	%rd1482, %rd1481, %rd1459;
	add.s64 	%rd1483, %rd1472, %rd1482;
	add.s64 	%rd1484, %rd1483, %rd1478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd1473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1091}, %rd1473;
	}
	shf.r.wrap.b32 	%r1092, %r1091, %r1090, 14;
	shf.r.wrap.b32 	%r1093, %r1090, %r1091, 14;
	mov.b64 	%rd1485, {%r1093, %r1092};
	shf.r.wrap.b32 	%r1094, %r1091, %r1090, 18;
	shf.r.wrap.b32 	%r1095, %r1090, %r1091, 18;
	mov.b64 	%rd1486, {%r1095, %r1094};
	xor.b64  	%rd1487, %rd1486, %rd1485;
	shf.l.wrap.b32 	%r1096, %r1090, %r1091, 23;
	shf.l.wrap.b32 	%r1097, %r1091, %r1090, 23;
	mov.b64 	%rd1488, {%r1097, %r1096};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	xor.b64  	%rd1490, %rd1448, %rd1423;
	and.b64  	%rd1491, %rd1473, %rd1490;
	xor.b64  	%rd1492, %rd1491, %rd1423;
	add.s64 	%rd1493, %rd1398, %rd1181;
	ld.const.u64 	%rd1494, [k_sha512+328];
	add.s64 	%rd1495, %rd1493, %rd1494;
	add.s64 	%rd1496, %rd1495, %rd1492;
	add.s64 	%rd1497, %rd1496, %rd1489;
	add.s64 	%rd1498, %rd1497, %rd1409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1098,%dummy}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1099}, %rd1484;
	}
	shf.r.wrap.b32 	%r1100, %r1099, %r1098, 28;
	shf.r.wrap.b32 	%r1101, %r1098, %r1099, 28;
	mov.b64 	%rd1499, {%r1101, %r1100};
	shf.l.wrap.b32 	%r1102, %r1098, %r1099, 30;
	shf.l.wrap.b32 	%r1103, %r1099, %r1098, 30;
	mov.b64 	%rd1500, {%r1103, %r1102};
	xor.b64  	%rd1501, %rd1500, %rd1499;
	shf.l.wrap.b32 	%r1104, %r1098, %r1099, 25;
	shf.l.wrap.b32 	%r1105, %r1099, %r1098, 25;
	mov.b64 	%rd1502, {%r1105, %r1104};
	xor.b64  	%rd1503, %rd1501, %rd1502;
	xor.b64  	%rd1504, %rd1484, %rd1434;
	xor.b64  	%rd1505, %rd1484, %rd1459;
	and.b64  	%rd1506, %rd1505, %rd1504;
	xor.b64  	%rd1507, %rd1506, %rd1484;
	add.s64 	%rd1508, %rd1497, %rd1507;
	add.s64 	%rd1509, %rd1508, %rd1503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd1498;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 14;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 14;
	mov.b64 	%rd1510, {%r1109, %r1108};
	shf.r.wrap.b32 	%r1110, %r1107, %r1106, 18;
	shf.r.wrap.b32 	%r1111, %r1106, %r1107, 18;
	mov.b64 	%rd1511, {%r1111, %r1110};
	xor.b64  	%rd1512, %rd1511, %rd1510;
	shf.l.wrap.b32 	%r1112, %r1106, %r1107, 23;
	shf.l.wrap.b32 	%r1113, %r1107, %r1106, 23;
	mov.b64 	%rd1513, {%r1113, %r1112};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	xor.b64  	%rd1515, %rd1473, %rd1448;
	and.b64  	%rd1516, %rd1498, %rd1515;
	xor.b64  	%rd1517, %rd1516, %rd1448;
	add.s64 	%rd1518, %rd1423, %rd1194;
	ld.const.u64 	%rd1519, [k_sha512+336];
	add.s64 	%rd1520, %rd1518, %rd1519;
	add.s64 	%rd1521, %rd1520, %rd1517;
	add.s64 	%rd1522, %rd1521, %rd1514;
	add.s64 	%rd1523, %rd1522, %rd1434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1114,%dummy}, %rd1509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1115}, %rd1509;
	}
	shf.r.wrap.b32 	%r1116, %r1115, %r1114, 28;
	shf.r.wrap.b32 	%r1117, %r1114, %r1115, 28;
	mov.b64 	%rd1524, {%r1117, %r1116};
	shf.l.wrap.b32 	%r1118, %r1114, %r1115, 30;
	shf.l.wrap.b32 	%r1119, %r1115, %r1114, 30;
	mov.b64 	%rd1525, {%r1119, %r1118};
	xor.b64  	%rd1526, %rd1525, %rd1524;
	shf.l.wrap.b32 	%r1120, %r1114, %r1115, 25;
	shf.l.wrap.b32 	%r1121, %r1115, %r1114, 25;
	mov.b64 	%rd1527, {%r1121, %r1120};
	xor.b64  	%rd1528, %rd1526, %rd1527;
	xor.b64  	%rd1529, %rd1509, %rd1459;
	xor.b64  	%rd1530, %rd1509, %rd1484;
	and.b64  	%rd1531, %rd1530, %rd1529;
	xor.b64  	%rd1532, %rd1531, %rd1509;
	add.s64 	%rd1533, %rd1522, %rd1532;
	add.s64 	%rd1534, %rd1533, %rd1528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1122,%dummy}, %rd1523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1123}, %rd1523;
	}
	shf.r.wrap.b32 	%r1124, %r1123, %r1122, 14;
	shf.r.wrap.b32 	%r1125, %r1122, %r1123, 14;
	mov.b64 	%rd1535, {%r1125, %r1124};
	shf.r.wrap.b32 	%r1126, %r1123, %r1122, 18;
	shf.r.wrap.b32 	%r1127, %r1122, %r1123, 18;
	mov.b64 	%rd1536, {%r1127, %r1126};
	xor.b64  	%rd1537, %rd1536, %rd1535;
	shf.l.wrap.b32 	%r1128, %r1122, %r1123, 23;
	shf.l.wrap.b32 	%r1129, %r1123, %r1122, 23;
	mov.b64 	%rd1538, {%r1129, %r1128};
	xor.b64  	%rd1539, %rd1537, %rd1538;
	xor.b64  	%rd1540, %rd1498, %rd1473;
	and.b64  	%rd1541, %rd1523, %rd1540;
	xor.b64  	%rd1542, %rd1541, %rd1473;
	add.s64 	%rd1543, %rd1448, %rd1207;
	ld.const.u64 	%rd1544, [k_sha512+344];
	add.s64 	%rd1545, %rd1543, %rd1544;
	add.s64 	%rd1546, %rd1545, %rd1542;
	add.s64 	%rd1547, %rd1546, %rd1539;
	add.s64 	%rd1548, %rd1547, %rd1459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd1534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1131}, %rd1534;
	}
	shf.r.wrap.b32 	%r1132, %r1131, %r1130, 28;
	shf.r.wrap.b32 	%r1133, %r1130, %r1131, 28;
	mov.b64 	%rd1549, {%r1133, %r1132};
	shf.l.wrap.b32 	%r1134, %r1130, %r1131, 30;
	shf.l.wrap.b32 	%r1135, %r1131, %r1130, 30;
	mov.b64 	%rd1550, {%r1135, %r1134};
	xor.b64  	%rd1551, %rd1550, %rd1549;
	shf.l.wrap.b32 	%r1136, %r1130, %r1131, 25;
	shf.l.wrap.b32 	%r1137, %r1131, %r1130, 25;
	mov.b64 	%rd1552, {%r1137, %r1136};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	xor.b64  	%rd1554, %rd1534, %rd1484;
	xor.b64  	%rd1555, %rd1534, %rd1509;
	and.b64  	%rd1556, %rd1555, %rd1554;
	xor.b64  	%rd1557, %rd1556, %rd1534;
	add.s64 	%rd1558, %rd1547, %rd1557;
	add.s64 	%rd1559, %rd1558, %rd1553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd1548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1139}, %rd1548;
	}
	shf.r.wrap.b32 	%r1140, %r1139, %r1138, 14;
	shf.r.wrap.b32 	%r1141, %r1138, %r1139, 14;
	mov.b64 	%rd1560, {%r1141, %r1140};
	shf.r.wrap.b32 	%r1142, %r1139, %r1138, 18;
	shf.r.wrap.b32 	%r1143, %r1138, %r1139, 18;
	mov.b64 	%rd1561, {%r1143, %r1142};
	xor.b64  	%rd1562, %rd1561, %rd1560;
	shf.l.wrap.b32 	%r1144, %r1138, %r1139, 23;
	shf.l.wrap.b32 	%r1145, %r1139, %r1138, 23;
	mov.b64 	%rd1563, {%r1145, %r1144};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	xor.b64  	%rd1565, %rd1523, %rd1498;
	and.b64  	%rd1566, %rd1548, %rd1565;
	xor.b64  	%rd1567, %rd1566, %rd1498;
	add.s64 	%rd1568, %rd1473, %rd1220;
	ld.const.u64 	%rd1569, [k_sha512+352];
	add.s64 	%rd1570, %rd1568, %rd1569;
	add.s64 	%rd1571, %rd1570, %rd1567;
	add.s64 	%rd1572, %rd1571, %rd1564;
	add.s64 	%rd1573, %rd1572, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1146,%dummy}, %rd1559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1147}, %rd1559;
	}
	shf.r.wrap.b32 	%r1148, %r1147, %r1146, 28;
	shf.r.wrap.b32 	%r1149, %r1146, %r1147, 28;
	mov.b64 	%rd1574, {%r1149, %r1148};
	shf.l.wrap.b32 	%r1150, %r1146, %r1147, 30;
	shf.l.wrap.b32 	%r1151, %r1147, %r1146, 30;
	mov.b64 	%rd1575, {%r1151, %r1150};
	xor.b64  	%rd1576, %rd1575, %rd1574;
	shf.l.wrap.b32 	%r1152, %r1146, %r1147, 25;
	shf.l.wrap.b32 	%r1153, %r1147, %r1146, 25;
	mov.b64 	%rd1577, {%r1153, %r1152};
	xor.b64  	%rd1578, %rd1576, %rd1577;
	xor.b64  	%rd1579, %rd1559, %rd1509;
	xor.b64  	%rd1580, %rd1559, %rd1534;
	and.b64  	%rd1581, %rd1580, %rd1579;
	xor.b64  	%rd1582, %rd1581, %rd1559;
	add.s64 	%rd1583, %rd1572, %rd1582;
	add.s64 	%rd1584, %rd1583, %rd1578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1154,%dummy}, %rd1573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1155}, %rd1573;
	}
	shf.r.wrap.b32 	%r1156, %r1155, %r1154, 14;
	shf.r.wrap.b32 	%r1157, %r1154, %r1155, 14;
	mov.b64 	%rd1585, {%r1157, %r1156};
	shf.r.wrap.b32 	%r1158, %r1155, %r1154, 18;
	shf.r.wrap.b32 	%r1159, %r1154, %r1155, 18;
	mov.b64 	%rd1586, {%r1159, %r1158};
	xor.b64  	%rd1587, %rd1586, %rd1585;
	shf.l.wrap.b32 	%r1160, %r1154, %r1155, 23;
	shf.l.wrap.b32 	%r1161, %r1155, %r1154, 23;
	mov.b64 	%rd1588, {%r1161, %r1160};
	xor.b64  	%rd1589, %rd1587, %rd1588;
	xor.b64  	%rd1590, %rd1548, %rd1523;
	and.b64  	%rd1591, %rd1573, %rd1590;
	xor.b64  	%rd1592, %rd1591, %rd1523;
	add.s64 	%rd1593, %rd1498, %rd1233;
	ld.const.u64 	%rd1594, [k_sha512+360];
	add.s64 	%rd1595, %rd1593, %rd1594;
	add.s64 	%rd1596, %rd1595, %rd1592;
	add.s64 	%rd1597, %rd1596, %rd1589;
	add.s64 	%rd1598, %rd1597, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd1584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1163}, %rd1584;
	}
	shf.r.wrap.b32 	%r1164, %r1163, %r1162, 28;
	shf.r.wrap.b32 	%r1165, %r1162, %r1163, 28;
	mov.b64 	%rd1599, {%r1165, %r1164};
	shf.l.wrap.b32 	%r1166, %r1162, %r1163, 30;
	shf.l.wrap.b32 	%r1167, %r1163, %r1162, 30;
	mov.b64 	%rd1600, {%r1167, %r1166};
	xor.b64  	%rd1601, %rd1600, %rd1599;
	shf.l.wrap.b32 	%r1168, %r1162, %r1163, 25;
	shf.l.wrap.b32 	%r1169, %r1163, %r1162, 25;
	mov.b64 	%rd1602, {%r1169, %r1168};
	xor.b64  	%rd1603, %rd1601, %rd1602;
	xor.b64  	%rd1604, %rd1584, %rd1534;
	xor.b64  	%rd1605, %rd1584, %rd1559;
	and.b64  	%rd1606, %rd1605, %rd1604;
	xor.b64  	%rd1607, %rd1606, %rd1584;
	add.s64 	%rd1608, %rd1597, %rd1607;
	add.s64 	%rd1609, %rd1608, %rd1603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1170,%dummy}, %rd1598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1171}, %rd1598;
	}
	shf.r.wrap.b32 	%r1172, %r1171, %r1170, 14;
	shf.r.wrap.b32 	%r1173, %r1170, %r1171, 14;
	mov.b64 	%rd1610, {%r1173, %r1172};
	shf.r.wrap.b32 	%r1174, %r1171, %r1170, 18;
	shf.r.wrap.b32 	%r1175, %r1170, %r1171, 18;
	mov.b64 	%rd1611, {%r1175, %r1174};
	xor.b64  	%rd1612, %rd1611, %rd1610;
	shf.l.wrap.b32 	%r1176, %r1170, %r1171, 23;
	shf.l.wrap.b32 	%r1177, %r1171, %r1170, 23;
	mov.b64 	%rd1613, {%r1177, %r1176};
	xor.b64  	%rd1614, %rd1612, %rd1613;
	xor.b64  	%rd1615, %rd1573, %rd1548;
	and.b64  	%rd1616, %rd1598, %rd1615;
	xor.b64  	%rd1617, %rd1616, %rd1548;
	add.s64 	%rd1618, %rd1523, %rd1246;
	ld.const.u64 	%rd1619, [k_sha512+368];
	add.s64 	%rd1620, %rd1618, %rd1619;
	add.s64 	%rd1621, %rd1620, %rd1617;
	add.s64 	%rd1622, %rd1621, %rd1614;
	add.s64 	%rd1623, %rd1622, %rd1534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1179}, %rd1609;
	}
	shf.r.wrap.b32 	%r1180, %r1179, %r1178, 28;
	shf.r.wrap.b32 	%r1181, %r1178, %r1179, 28;
	mov.b64 	%rd1624, {%r1181, %r1180};
	shf.l.wrap.b32 	%r1182, %r1178, %r1179, 30;
	shf.l.wrap.b32 	%r1183, %r1179, %r1178, 30;
	mov.b64 	%rd1625, {%r1183, %r1182};
	xor.b64  	%rd1626, %rd1625, %rd1624;
	shf.l.wrap.b32 	%r1184, %r1178, %r1179, 25;
	shf.l.wrap.b32 	%r1185, %r1179, %r1178, 25;
	mov.b64 	%rd1627, {%r1185, %r1184};
	xor.b64  	%rd1628, %rd1626, %rd1627;
	xor.b64  	%rd1629, %rd1609, %rd1559;
	xor.b64  	%rd1630, %rd1609, %rd1584;
	and.b64  	%rd1631, %rd1630, %rd1629;
	xor.b64  	%rd1632, %rd1631, %rd1609;
	add.s64 	%rd1633, %rd1622, %rd1632;
	add.s64 	%rd1634, %rd1633, %rd1628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1186,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1187}, %rd1623;
	}
	shf.r.wrap.b32 	%r1188, %r1187, %r1186, 14;
	shf.r.wrap.b32 	%r1189, %r1186, %r1187, 14;
	mov.b64 	%rd1635, {%r1189, %r1188};
	shf.r.wrap.b32 	%r1190, %r1187, %r1186, 18;
	shf.r.wrap.b32 	%r1191, %r1186, %r1187, 18;
	mov.b64 	%rd1636, {%r1191, %r1190};
	xor.b64  	%rd1637, %rd1636, %rd1635;
	shf.l.wrap.b32 	%r1192, %r1186, %r1187, 23;
	shf.l.wrap.b32 	%r1193, %r1187, %r1186, 23;
	mov.b64 	%rd1638, {%r1193, %r1192};
	xor.b64  	%rd1639, %rd1637, %rd1638;
	xor.b64  	%rd1640, %rd1598, %rd1573;
	and.b64  	%rd1641, %rd1623, %rd1640;
	xor.b64  	%rd1642, %rd1641, %rd1573;
	add.s64 	%rd1643, %rd1548, %rd1259;
	ld.const.u64 	%rd1644, [k_sha512+376];
	add.s64 	%rd1645, %rd1643, %rd1644;
	add.s64 	%rd1646, %rd1645, %rd1642;
	add.s64 	%rd1647, %rd1646, %rd1639;
	add.s64 	%rd1648, %rd1647, %rd1559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd1634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1195}, %rd1634;
	}
	shf.r.wrap.b32 	%r1196, %r1195, %r1194, 28;
	shf.r.wrap.b32 	%r1197, %r1194, %r1195, 28;
	mov.b64 	%rd1649, {%r1197, %r1196};
	shf.l.wrap.b32 	%r1198, %r1194, %r1195, 30;
	shf.l.wrap.b32 	%r1199, %r1195, %r1194, 30;
	mov.b64 	%rd1650, {%r1199, %r1198};
	xor.b64  	%rd1651, %rd1650, %rd1649;
	shf.l.wrap.b32 	%r1200, %r1194, %r1195, 25;
	shf.l.wrap.b32 	%r1201, %r1195, %r1194, 25;
	mov.b64 	%rd1652, {%r1201, %r1200};
	xor.b64  	%rd1653, %rd1651, %rd1652;
	xor.b64  	%rd1654, %rd1634, %rd1584;
	xor.b64  	%rd1655, %rd1634, %rd1609;
	and.b64  	%rd1656, %rd1655, %rd1654;
	xor.b64  	%rd1657, %rd1656, %rd1634;
	add.s64 	%rd1658, %rd1647, %rd1657;
	add.s64 	%rd1659, %rd1658, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1202,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1203}, %rd1246;
	}
	shf.r.wrap.b32 	%r1204, %r1203, %r1202, 19;
	shf.r.wrap.b32 	%r1205, %r1202, %r1203, 19;
	mov.b64 	%rd1660, {%r1205, %r1204};
	shf.l.wrap.b32 	%r1206, %r1202, %r1203, 3;
	shf.l.wrap.b32 	%r1207, %r1203, %r1202, 3;
	mov.b64 	%rd1661, {%r1207, %r1206};
	shr.u64 	%rd1662, %rd1246, 6;
	xor.b64  	%rd1663, %rd1660, %rd1662;
	xor.b64  	%rd1664, %rd1663, %rd1661;
	shf.r.wrap.b32 	%r1208, %r817, %r816, 1;
	shf.r.wrap.b32 	%r1209, %r816, %r817, 1;
	mov.b64 	%rd1665, {%r1209, %r1208};
	shf.r.wrap.b32 	%r1210, %r817, %r816, 8;
	shf.r.wrap.b32 	%r1211, %r816, %r817, 8;
	mov.b64 	%rd1666, {%r1211, %r1210};
	shr.u64 	%rd1667, %rd1077, 7;
	xor.b64  	%rd1668, %rd1665, %rd1667;
	xor.b64  	%rd1669, %rd1668, %rd1666;
	add.s64 	%rd1670, %rd1064, %rd1181;
	add.s64 	%rd1671, %rd1670, %rd1664;
	add.s64 	%rd1672, %rd1671, %rd1669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1212,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1213}, %rd1259;
	}
	shf.r.wrap.b32 	%r1214, %r1213, %r1212, 19;
	shf.r.wrap.b32 	%r1215, %r1212, %r1213, 19;
	mov.b64 	%rd1673, {%r1215, %r1214};
	shf.l.wrap.b32 	%r1216, %r1212, %r1213, 3;
	shf.l.wrap.b32 	%r1217, %r1213, %r1212, 3;
	mov.b64 	%rd1674, {%r1217, %r1216};
	shr.u64 	%rd1675, %rd1259, 6;
	xor.b64  	%rd1676, %rd1673, %rd1675;
	xor.b64  	%rd1677, %rd1676, %rd1674;
	shf.r.wrap.b32 	%r1218, %r827, %r826, 1;
	shf.r.wrap.b32 	%r1219, %r826, %r827, 1;
	mov.b64 	%rd1678, {%r1219, %r1218};
	shf.r.wrap.b32 	%r1220, %r827, %r826, 8;
	shf.r.wrap.b32 	%r1221, %r826, %r827, 8;
	mov.b64 	%rd1679, {%r1221, %r1220};
	shr.u64 	%rd1680, %rd1090, 7;
	xor.b64  	%rd1681, %rd1678, %rd1680;
	xor.b64  	%rd1682, %rd1681, %rd1679;
	add.s64 	%rd1683, %rd1077, %rd1194;
	add.s64 	%rd1684, %rd1683, %rd1677;
	add.s64 	%rd1685, %rd1684, %rd1682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1222,%dummy}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1223}, %rd1672;
	}
	shf.r.wrap.b32 	%r1224, %r1223, %r1222, 19;
	shf.r.wrap.b32 	%r1225, %r1222, %r1223, 19;
	mov.b64 	%rd1686, {%r1225, %r1224};
	shf.l.wrap.b32 	%r1226, %r1222, %r1223, 3;
	shf.l.wrap.b32 	%r1227, %r1223, %r1222, 3;
	mov.b64 	%rd1687, {%r1227, %r1226};
	shr.u64 	%rd1688, %rd1672, 6;
	xor.b64  	%rd1689, %rd1686, %rd1688;
	xor.b64  	%rd1690, %rd1689, %rd1687;
	shf.r.wrap.b32 	%r1228, %r837, %r836, 1;
	shf.r.wrap.b32 	%r1229, %r836, %r837, 1;
	mov.b64 	%rd1691, {%r1229, %r1228};
	shf.r.wrap.b32 	%r1230, %r837, %r836, 8;
	shf.r.wrap.b32 	%r1231, %r836, %r837, 8;
	mov.b64 	%rd1692, {%r1231, %r1230};
	shr.u64 	%rd1693, %rd1103, 7;
	xor.b64  	%rd1694, %rd1691, %rd1693;
	xor.b64  	%rd1695, %rd1694, %rd1692;
	add.s64 	%rd1696, %rd1090, %rd1207;
	add.s64 	%rd1697, %rd1696, %rd1690;
	add.s64 	%rd1698, %rd1697, %rd1695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1232,%dummy}, %rd1685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1233}, %rd1685;
	}
	shf.r.wrap.b32 	%r1234, %r1233, %r1232, 19;
	shf.r.wrap.b32 	%r1235, %r1232, %r1233, 19;
	mov.b64 	%rd1699, {%r1235, %r1234};
	shf.l.wrap.b32 	%r1236, %r1232, %r1233, 3;
	shf.l.wrap.b32 	%r1237, %r1233, %r1232, 3;
	mov.b64 	%rd1700, {%r1237, %r1236};
	shr.u64 	%rd1701, %rd1685, 6;
	xor.b64  	%rd1702, %rd1699, %rd1701;
	xor.b64  	%rd1703, %rd1702, %rd1700;
	shf.r.wrap.b32 	%r1238, %r847, %r846, 1;
	shf.r.wrap.b32 	%r1239, %r846, %r847, 1;
	mov.b64 	%rd1704, {%r1239, %r1238};
	shf.r.wrap.b32 	%r1240, %r847, %r846, 8;
	shf.r.wrap.b32 	%r1241, %r846, %r847, 8;
	mov.b64 	%rd1705, {%r1241, %r1240};
	shr.u64 	%rd1706, %rd1116, 7;
	xor.b64  	%rd1707, %rd1704, %rd1706;
	xor.b64  	%rd1708, %rd1707, %rd1705;
	add.s64 	%rd1709, %rd1220, %rd1103;
	add.s64 	%rd1710, %rd1709, %rd1703;
	add.s64 	%rd1711, %rd1710, %rd1708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1242,%dummy}, %rd1698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1243}, %rd1698;
	}
	shf.r.wrap.b32 	%r1244, %r1243, %r1242, 19;
	shf.r.wrap.b32 	%r1245, %r1242, %r1243, 19;
	mov.b64 	%rd1712, {%r1245, %r1244};
	shf.l.wrap.b32 	%r1246, %r1242, %r1243, 3;
	shf.l.wrap.b32 	%r1247, %r1243, %r1242, 3;
	mov.b64 	%rd1713, {%r1247, %r1246};
	shr.u64 	%rd1714, %rd1698, 6;
	xor.b64  	%rd1715, %rd1712, %rd1714;
	xor.b64  	%rd1716, %rd1715, %rd1713;
	shf.r.wrap.b32 	%r1248, %r857, %r856, 1;
	shf.r.wrap.b32 	%r1249, %r856, %r857, 1;
	mov.b64 	%rd1717, {%r1249, %r1248};
	shf.r.wrap.b32 	%r1250, %r857, %r856, 8;
	shf.r.wrap.b32 	%r1251, %r856, %r857, 8;
	mov.b64 	%rd1718, {%r1251, %r1250};
	shr.u64 	%rd1719, %rd1129, 7;
	xor.b64  	%rd1720, %rd1717, %rd1719;
	xor.b64  	%rd1721, %rd1720, %rd1718;
	add.s64 	%rd1722, %rd1233, %rd1116;
	add.s64 	%rd1723, %rd1722, %rd1716;
	add.s64 	%rd1724, %rd1723, %rd1721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1252,%dummy}, %rd1711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1253}, %rd1711;
	}
	shf.r.wrap.b32 	%r1254, %r1253, %r1252, 19;
	shf.r.wrap.b32 	%r1255, %r1252, %r1253, 19;
	mov.b64 	%rd1725, {%r1255, %r1254};
	shf.l.wrap.b32 	%r1256, %r1252, %r1253, 3;
	shf.l.wrap.b32 	%r1257, %r1253, %r1252, 3;
	mov.b64 	%rd1726, {%r1257, %r1256};
	shr.u64 	%rd1727, %rd1711, 6;
	xor.b64  	%rd1728, %rd1725, %rd1727;
	xor.b64  	%rd1729, %rd1728, %rd1726;
	shf.r.wrap.b32 	%r1258, %r867, %r866, 1;
	shf.r.wrap.b32 	%r1259, %r866, %r867, 1;
	mov.b64 	%rd1730, {%r1259, %r1258};
	shf.r.wrap.b32 	%r1260, %r867, %r866, 8;
	shf.r.wrap.b32 	%r1261, %r866, %r867, 8;
	mov.b64 	%rd1731, {%r1261, %r1260};
	shr.u64 	%rd1732, %rd1142, 7;
	xor.b64  	%rd1733, %rd1730, %rd1732;
	xor.b64  	%rd1734, %rd1733, %rd1731;
	add.s64 	%rd1735, %rd1246, %rd1129;
	add.s64 	%rd1736, %rd1735, %rd1729;
	add.s64 	%rd1737, %rd1736, %rd1734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd1724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1263}, %rd1724;
	}
	shf.r.wrap.b32 	%r1264, %r1263, %r1262, 19;
	shf.r.wrap.b32 	%r1265, %r1262, %r1263, 19;
	mov.b64 	%rd1738, {%r1265, %r1264};
	shf.l.wrap.b32 	%r1266, %r1262, %r1263, 3;
	shf.l.wrap.b32 	%r1267, %r1263, %r1262, 3;
	mov.b64 	%rd1739, {%r1267, %r1266};
	shr.u64 	%rd1740, %rd1724, 6;
	xor.b64  	%rd1741, %rd1738, %rd1740;
	xor.b64  	%rd1742, %rd1741, %rd1739;
	shf.r.wrap.b32 	%r1268, %r877, %r876, 1;
	shf.r.wrap.b32 	%r1269, %r876, %r877, 1;
	mov.b64 	%rd1743, {%r1269, %r1268};
	shf.r.wrap.b32 	%r1270, %r877, %r876, 8;
	shf.r.wrap.b32 	%r1271, %r876, %r877, 8;
	mov.b64 	%rd1744, {%r1271, %r1270};
	shr.u64 	%rd1745, %rd1155, 7;
	xor.b64  	%rd1746, %rd1743, %rd1745;
	xor.b64  	%rd1747, %rd1746, %rd1744;
	add.s64 	%rd1748, %rd1259, %rd1142;
	add.s64 	%rd1749, %rd1748, %rd1742;
	add.s64 	%rd1750, %rd1749, %rd1747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1272,%dummy}, %rd1737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1273}, %rd1737;
	}
	shf.r.wrap.b32 	%r1274, %r1273, %r1272, 19;
	shf.r.wrap.b32 	%r1275, %r1272, %r1273, 19;
	mov.b64 	%rd1751, {%r1275, %r1274};
	shf.l.wrap.b32 	%r1276, %r1272, %r1273, 3;
	shf.l.wrap.b32 	%r1277, %r1273, %r1272, 3;
	mov.b64 	%rd1752, {%r1277, %r1276};
	shr.u64 	%rd1753, %rd1737, 6;
	xor.b64  	%rd1754, %rd1751, %rd1753;
	xor.b64  	%rd1755, %rd1754, %rd1752;
	shf.r.wrap.b32 	%r1278, %r887, %r886, 1;
	shf.r.wrap.b32 	%r1279, %r886, %r887, 1;
	mov.b64 	%rd1756, {%r1279, %r1278};
	shf.r.wrap.b32 	%r1280, %r887, %r886, 8;
	shf.r.wrap.b32 	%r1281, %r886, %r887, 8;
	mov.b64 	%rd1757, {%r1281, %r1280};
	shr.u64 	%rd1758, %rd1168, 7;
	xor.b64  	%rd1759, %rd1756, %rd1758;
	xor.b64  	%rd1760, %rd1759, %rd1757;
	add.s64 	%rd1761, %rd1672, %rd1155;
	add.s64 	%rd1762, %rd1761, %rd1755;
	add.s64 	%rd1763, %rd1762, %rd1760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1282,%dummy}, %rd1750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1283}, %rd1750;
	}
	shf.r.wrap.b32 	%r1284, %r1283, %r1282, 19;
	shf.r.wrap.b32 	%r1285, %r1282, %r1283, 19;
	mov.b64 	%rd1764, {%r1285, %r1284};
	shf.l.wrap.b32 	%r1286, %r1282, %r1283, 3;
	shf.l.wrap.b32 	%r1287, %r1283, %r1282, 3;
	mov.b64 	%rd1765, {%r1287, %r1286};
	shr.u64 	%rd1766, %rd1750, 6;
	xor.b64  	%rd1767, %rd1764, %rd1766;
	xor.b64  	%rd1768, %rd1767, %rd1765;
	shf.r.wrap.b32 	%r1288, %r897, %r896, 1;
	shf.r.wrap.b32 	%r1289, %r896, %r897, 1;
	mov.b64 	%rd1769, {%r1289, %r1288};
	shf.r.wrap.b32 	%r1290, %r897, %r896, 8;
	shf.r.wrap.b32 	%r1291, %r896, %r897, 8;
	mov.b64 	%rd1770, {%r1291, %r1290};
	shr.u64 	%rd1771, %rd1181, 7;
	xor.b64  	%rd1772, %rd1769, %rd1771;
	xor.b64  	%rd1773, %rd1772, %rd1770;
	add.s64 	%rd1774, %rd1685, %rd1168;
	add.s64 	%rd1775, %rd1774, %rd1768;
	add.s64 	%rd1776, %rd1775, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd1763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1763;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 19;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 19;
	mov.b64 	%rd1777, {%r1295, %r1294};
	shf.l.wrap.b32 	%r1296, %r1292, %r1293, 3;
	shf.l.wrap.b32 	%r1297, %r1293, %r1292, 3;
	mov.b64 	%rd1778, {%r1297, %r1296};
	shr.u64 	%rd1779, %rd1763, 6;
	xor.b64  	%rd1780, %rd1777, %rd1779;
	xor.b64  	%rd1781, %rd1780, %rd1778;
	shf.r.wrap.b32 	%r1298, %r907, %r906, 1;
	shf.r.wrap.b32 	%r1299, %r906, %r907, 1;
	mov.b64 	%rd1782, {%r1299, %r1298};
	shf.r.wrap.b32 	%r1300, %r907, %r906, 8;
	shf.r.wrap.b32 	%r1301, %r906, %r907, 8;
	mov.b64 	%rd1783, {%r1301, %r1300};
	shr.u64 	%rd1784, %rd1194, 7;
	xor.b64  	%rd1785, %rd1782, %rd1784;
	xor.b64  	%rd1786, %rd1785, %rd1783;
	add.s64 	%rd1787, %rd1698, %rd1181;
	add.s64 	%rd1788, %rd1787, %rd1781;
	add.s64 	%rd1789, %rd1788, %rd1786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1302,%dummy}, %rd1776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1303}, %rd1776;
	}
	shf.r.wrap.b32 	%r1304, %r1303, %r1302, 19;
	shf.r.wrap.b32 	%r1305, %r1302, %r1303, 19;
	mov.b64 	%rd1790, {%r1305, %r1304};
	shf.l.wrap.b32 	%r1306, %r1302, %r1303, 3;
	shf.l.wrap.b32 	%r1307, %r1303, %r1302, 3;
	mov.b64 	%rd1791, {%r1307, %r1306};
	shr.u64 	%rd1792, %rd1776, 6;
	xor.b64  	%rd1793, %rd1790, %rd1792;
	xor.b64  	%rd1794, %rd1793, %rd1791;
	shf.r.wrap.b32 	%r1308, %r917, %r916, 1;
	shf.r.wrap.b32 	%r1309, %r916, %r917, 1;
	mov.b64 	%rd1795, {%r1309, %r1308};
	shf.r.wrap.b32 	%r1310, %r917, %r916, 8;
	shf.r.wrap.b32 	%r1311, %r916, %r917, 8;
	mov.b64 	%rd1796, {%r1311, %r1310};
	shr.u64 	%rd1797, %rd1207, 7;
	xor.b64  	%rd1798, %rd1795, %rd1797;
	xor.b64  	%rd1799, %rd1798, %rd1796;
	add.s64 	%rd1800, %rd1711, %rd1194;
	add.s64 	%rd1801, %rd1800, %rd1794;
	add.s64 	%rd1802, %rd1801, %rd1799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1312,%dummy}, %rd1789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1313}, %rd1789;
	}
	shf.r.wrap.b32 	%r1314, %r1313, %r1312, 19;
	shf.r.wrap.b32 	%r1315, %r1312, %r1313, 19;
	mov.b64 	%rd1803, {%r1315, %r1314};
	shf.l.wrap.b32 	%r1316, %r1312, %r1313, 3;
	shf.l.wrap.b32 	%r1317, %r1313, %r1312, 3;
	mov.b64 	%rd1804, {%r1317, %r1316};
	shr.u64 	%rd1805, %rd1789, 6;
	xor.b64  	%rd1806, %rd1803, %rd1805;
	xor.b64  	%rd1807, %rd1806, %rd1804;
	shf.r.wrap.b32 	%r1318, %r927, %r926, 1;
	shf.r.wrap.b32 	%r1319, %r926, %r927, 1;
	mov.b64 	%rd1808, {%r1319, %r1318};
	shf.r.wrap.b32 	%r1320, %r927, %r926, 8;
	shf.r.wrap.b32 	%r1321, %r926, %r927, 8;
	mov.b64 	%rd1809, {%r1321, %r1320};
	shr.u64 	%rd1810, %rd1220, 7;
	xor.b64  	%rd1811, %rd1808, %rd1810;
	xor.b64  	%rd1812, %rd1811, %rd1809;
	add.s64 	%rd1813, %rd1724, %rd1207;
	add.s64 	%rd1814, %rd1813, %rd1807;
	add.s64 	%rd1815, %rd1814, %rd1812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1322,%dummy}, %rd1802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1323}, %rd1802;
	}
	shf.r.wrap.b32 	%r1324, %r1323, %r1322, 19;
	shf.r.wrap.b32 	%r1325, %r1322, %r1323, 19;
	mov.b64 	%rd1816, {%r1325, %r1324};
	shf.l.wrap.b32 	%r1326, %r1322, %r1323, 3;
	shf.l.wrap.b32 	%r1327, %r1323, %r1322, 3;
	mov.b64 	%rd1817, {%r1327, %r1326};
	shr.u64 	%rd1818, %rd1802, 6;
	xor.b64  	%rd1819, %rd1816, %rd1818;
	xor.b64  	%rd1820, %rd1819, %rd1817;
	shf.r.wrap.b32 	%r1328, %r937, %r936, 1;
	shf.r.wrap.b32 	%r1329, %r936, %r937, 1;
	mov.b64 	%rd1821, {%r1329, %r1328};
	shf.r.wrap.b32 	%r1330, %r937, %r936, 8;
	shf.r.wrap.b32 	%r1331, %r936, %r937, 8;
	mov.b64 	%rd1822, {%r1331, %r1330};
	shr.u64 	%rd1823, %rd1233, 7;
	xor.b64  	%rd1824, %rd1821, %rd1823;
	xor.b64  	%rd1825, %rd1824, %rd1822;
	add.s64 	%rd1826, %rd1737, %rd1220;
	add.s64 	%rd1827, %rd1826, %rd1820;
	add.s64 	%rd1828, %rd1827, %rd1825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1332,%dummy}, %rd1815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1333}, %rd1815;
	}
	shf.r.wrap.b32 	%r1334, %r1333, %r1332, 19;
	shf.r.wrap.b32 	%r1335, %r1332, %r1333, 19;
	mov.b64 	%rd1829, {%r1335, %r1334};
	shf.l.wrap.b32 	%r1336, %r1332, %r1333, 3;
	shf.l.wrap.b32 	%r1337, %r1333, %r1332, 3;
	mov.b64 	%rd1830, {%r1337, %r1336};
	shr.u64 	%rd1831, %rd1815, 6;
	xor.b64  	%rd1832, %rd1829, %rd1831;
	xor.b64  	%rd1833, %rd1832, %rd1830;
	shf.r.wrap.b32 	%r1338, %r1203, %r1202, 1;
	shf.r.wrap.b32 	%r1339, %r1202, %r1203, 1;
	mov.b64 	%rd1834, {%r1339, %r1338};
	shf.r.wrap.b32 	%r1340, %r1203, %r1202, 8;
	shf.r.wrap.b32 	%r1341, %r1202, %r1203, 8;
	mov.b64 	%rd1835, {%r1341, %r1340};
	shr.u64 	%rd1836, %rd1246, 7;
	xor.b64  	%rd1837, %rd1834, %rd1836;
	xor.b64  	%rd1838, %rd1837, %rd1835;
	add.s64 	%rd1839, %rd1750, %rd1233;
	add.s64 	%rd1840, %rd1839, %rd1833;
	add.s64 	%rd1841, %rd1840, %rd1838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd1828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd1828;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 19;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 19;
	mov.b64 	%rd1842, {%r1345, %r1344};
	shf.l.wrap.b32 	%r1346, %r1342, %r1343, 3;
	shf.l.wrap.b32 	%r1347, %r1343, %r1342, 3;
	mov.b64 	%rd1843, {%r1347, %r1346};
	shr.u64 	%rd1844, %rd1828, 6;
	xor.b64  	%rd1845, %rd1842, %rd1844;
	xor.b64  	%rd1846, %rd1845, %rd1843;
	shf.r.wrap.b32 	%r1348, %r1213, %r1212, 1;
	shf.r.wrap.b32 	%r1349, %r1212, %r1213, 1;
	mov.b64 	%rd1847, {%r1349, %r1348};
	shf.r.wrap.b32 	%r1350, %r1213, %r1212, 8;
	shf.r.wrap.b32 	%r1351, %r1212, %r1213, 8;
	mov.b64 	%rd1848, {%r1351, %r1350};
	shr.u64 	%rd1849, %rd1259, 7;
	xor.b64  	%rd1850, %rd1847, %rd1849;
	xor.b64  	%rd1851, %rd1850, %rd1848;
	add.s64 	%rd1852, %rd1763, %rd1246;
	add.s64 	%rd1853, %rd1852, %rd1846;
	add.s64 	%rd1854, %rd1853, %rd1851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1352,%dummy}, %rd1841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd1841;
	}
	shf.r.wrap.b32 	%r1354, %r1353, %r1352, 19;
	shf.r.wrap.b32 	%r1355, %r1352, %r1353, 19;
	mov.b64 	%rd1855, {%r1355, %r1354};
	shf.l.wrap.b32 	%r1356, %r1352, %r1353, 3;
	shf.l.wrap.b32 	%r1357, %r1353, %r1352, 3;
	mov.b64 	%rd1856, {%r1357, %r1356};
	shr.u64 	%rd1857, %rd1841, 6;
	xor.b64  	%rd1858, %rd1855, %rd1857;
	xor.b64  	%rd1859, %rd1858, %rd1856;
	shf.r.wrap.b32 	%r1358, %r1223, %r1222, 1;
	shf.r.wrap.b32 	%r1359, %r1222, %r1223, 1;
	mov.b64 	%rd1860, {%r1359, %r1358};
	shf.r.wrap.b32 	%r1360, %r1223, %r1222, 8;
	shf.r.wrap.b32 	%r1361, %r1222, %r1223, 8;
	mov.b64 	%rd1861, {%r1361, %r1360};
	shr.u64 	%rd1862, %rd1672, 7;
	xor.b64  	%rd1863, %rd1860, %rd1862;
	xor.b64  	%rd1864, %rd1863, %rd1861;
	add.s64 	%rd1865, %rd1776, %rd1259;
	add.s64 	%rd1866, %rd1865, %rd1859;
	add.s64 	%rd1867, %rd1866, %rd1864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1362,%dummy}, %rd1648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1363}, %rd1648;
	}
	shf.r.wrap.b32 	%r1364, %r1363, %r1362, 14;
	shf.r.wrap.b32 	%r1365, %r1362, %r1363, 14;
	mov.b64 	%rd1868, {%r1365, %r1364};
	shf.r.wrap.b32 	%r1366, %r1363, %r1362, 18;
	shf.r.wrap.b32 	%r1367, %r1362, %r1363, 18;
	mov.b64 	%rd1869, {%r1367, %r1366};
	xor.b64  	%rd1870, %rd1869, %rd1868;
	shf.l.wrap.b32 	%r1368, %r1362, %r1363, 23;
	shf.l.wrap.b32 	%r1369, %r1363, %r1362, 23;
	mov.b64 	%rd1871, {%r1369, %r1368};
	xor.b64  	%rd1872, %rd1870, %rd1871;
	xor.b64  	%rd1873, %rd1623, %rd1598;
	and.b64  	%rd1874, %rd1873, %rd1648;
	xor.b64  	%rd1875, %rd1874, %rd1598;
	add.s64 	%rd1876, %rd1875, %rd1573;
	add.s64 	%rd1877, %rd1876, %rd1672;
	ld.const.u64 	%rd1878, [k_sha512+384];
	add.s64 	%rd1879, %rd1877, %rd1878;
	add.s64 	%rd1880, %rd1879, %rd1872;
	add.s64 	%rd1881, %rd1880, %rd1584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd1659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1371}, %rd1659;
	}
	shf.r.wrap.b32 	%r1372, %r1371, %r1370, 28;
	shf.r.wrap.b32 	%r1373, %r1370, %r1371, 28;
	mov.b64 	%rd1882, {%r1373, %r1372};
	shf.l.wrap.b32 	%r1374, %r1370, %r1371, 30;
	shf.l.wrap.b32 	%r1375, %r1371, %r1370, 30;
	mov.b64 	%rd1883, {%r1375, %r1374};
	xor.b64  	%rd1884, %rd1883, %rd1882;
	shf.l.wrap.b32 	%r1376, %r1370, %r1371, 25;
	shf.l.wrap.b32 	%r1377, %r1371, %r1370, 25;
	mov.b64 	%rd1885, {%r1377, %r1376};
	xor.b64  	%rd1886, %rd1884, %rd1885;
	xor.b64  	%rd1887, %rd1659, %rd1609;
	xor.b64  	%rd1888, %rd1659, %rd1634;
	and.b64  	%rd1889, %rd1888, %rd1887;
	xor.b64  	%rd1890, %rd1889, %rd1659;
	add.s64 	%rd1891, %rd1880, %rd1890;
	add.s64 	%rd1892, %rd1891, %rd1886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1378,%dummy}, %rd1881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1379}, %rd1881;
	}
	shf.r.wrap.b32 	%r1380, %r1379, %r1378, 14;
	shf.r.wrap.b32 	%r1381, %r1378, %r1379, 14;
	mov.b64 	%rd1893, {%r1381, %r1380};
	shf.r.wrap.b32 	%r1382, %r1379, %r1378, 18;
	shf.r.wrap.b32 	%r1383, %r1378, %r1379, 18;
	mov.b64 	%rd1894, {%r1383, %r1382};
	xor.b64  	%rd1895, %rd1894, %rd1893;
	shf.l.wrap.b32 	%r1384, %r1378, %r1379, 23;
	shf.l.wrap.b32 	%r1385, %r1379, %r1378, 23;
	mov.b64 	%rd1896, {%r1385, %r1384};
	xor.b64  	%rd1897, %rd1895, %rd1896;
	xor.b64  	%rd1898, %rd1648, %rd1623;
	and.b64  	%rd1899, %rd1881, %rd1898;
	xor.b64  	%rd1900, %rd1899, %rd1623;
	add.s64 	%rd1901, %rd1685, %rd1598;
	ld.const.u64 	%rd1902, [k_sha512+392];
	add.s64 	%rd1903, %rd1901, %rd1902;
	add.s64 	%rd1904, %rd1903, %rd1900;
	add.s64 	%rd1905, %rd1904, %rd1897;
	add.s64 	%rd1906, %rd1905, %rd1609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1386,%dummy}, %rd1892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1387}, %rd1892;
	}
	shf.r.wrap.b32 	%r1388, %r1387, %r1386, 28;
	shf.r.wrap.b32 	%r1389, %r1386, %r1387, 28;
	mov.b64 	%rd1907, {%r1389, %r1388};
	shf.l.wrap.b32 	%r1390, %r1386, %r1387, 30;
	shf.l.wrap.b32 	%r1391, %r1387, %r1386, 30;
	mov.b64 	%rd1908, {%r1391, %r1390};
	xor.b64  	%rd1909, %rd1908, %rd1907;
	shf.l.wrap.b32 	%r1392, %r1386, %r1387, 25;
	shf.l.wrap.b32 	%r1393, %r1387, %r1386, 25;
	mov.b64 	%rd1910, {%r1393, %r1392};
	xor.b64  	%rd1911, %rd1909, %rd1910;
	xor.b64  	%rd1912, %rd1892, %rd1634;
	xor.b64  	%rd1913, %rd1892, %rd1659;
	and.b64  	%rd1914, %rd1913, %rd1912;
	xor.b64  	%rd1915, %rd1914, %rd1892;
	add.s64 	%rd1916, %rd1905, %rd1915;
	add.s64 	%rd1917, %rd1916, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1394,%dummy}, %rd1906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1395}, %rd1906;
	}
	shf.r.wrap.b32 	%r1396, %r1395, %r1394, 14;
	shf.r.wrap.b32 	%r1397, %r1394, %r1395, 14;
	mov.b64 	%rd1918, {%r1397, %r1396};
	shf.r.wrap.b32 	%r1398, %r1395, %r1394, 18;
	shf.r.wrap.b32 	%r1399, %r1394, %r1395, 18;
	mov.b64 	%rd1919, {%r1399, %r1398};
	xor.b64  	%rd1920, %rd1919, %rd1918;
	shf.l.wrap.b32 	%r1400, %r1394, %r1395, 23;
	shf.l.wrap.b32 	%r1401, %r1395, %r1394, 23;
	mov.b64 	%rd1921, {%r1401, %r1400};
	xor.b64  	%rd1922, %rd1920, %rd1921;
	xor.b64  	%rd1923, %rd1881, %rd1648;
	and.b64  	%rd1924, %rd1906, %rd1923;
	xor.b64  	%rd1925, %rd1924, %rd1648;
	add.s64 	%rd1926, %rd1698, %rd1623;
	ld.const.u64 	%rd1927, [k_sha512+400];
	add.s64 	%rd1928, %rd1926, %rd1927;
	add.s64 	%rd1929, %rd1928, %rd1925;
	add.s64 	%rd1930, %rd1929, %rd1922;
	add.s64 	%rd1931, %rd1930, %rd1634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1402,%dummy}, %rd1917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1403}, %rd1917;
	}
	shf.r.wrap.b32 	%r1404, %r1403, %r1402, 28;
	shf.r.wrap.b32 	%r1405, %r1402, %r1403, 28;
	mov.b64 	%rd1932, {%r1405, %r1404};
	shf.l.wrap.b32 	%r1406, %r1402, %r1403, 30;
	shf.l.wrap.b32 	%r1407, %r1403, %r1402, 30;
	mov.b64 	%rd1933, {%r1407, %r1406};
	xor.b64  	%rd1934, %rd1933, %rd1932;
	shf.l.wrap.b32 	%r1408, %r1402, %r1403, 25;
	shf.l.wrap.b32 	%r1409, %r1403, %r1402, 25;
	mov.b64 	%rd1935, {%r1409, %r1408};
	xor.b64  	%rd1936, %rd1934, %rd1935;
	xor.b64  	%rd1937, %rd1917, %rd1659;
	xor.b64  	%rd1938, %rd1917, %rd1892;
	and.b64  	%rd1939, %rd1938, %rd1937;
	xor.b64  	%rd1940, %rd1939, %rd1917;
	add.s64 	%rd1941, %rd1930, %rd1940;
	add.s64 	%rd1942, %rd1941, %rd1936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1410,%dummy}, %rd1931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1411}, %rd1931;
	}
	shf.r.wrap.b32 	%r1412, %r1411, %r1410, 14;
	shf.r.wrap.b32 	%r1413, %r1410, %r1411, 14;
	mov.b64 	%rd1943, {%r1413, %r1412};
	shf.r.wrap.b32 	%r1414, %r1411, %r1410, 18;
	shf.r.wrap.b32 	%r1415, %r1410, %r1411, 18;
	mov.b64 	%rd1944, {%r1415, %r1414};
	xor.b64  	%rd1945, %rd1944, %rd1943;
	shf.l.wrap.b32 	%r1416, %r1410, %r1411, 23;
	shf.l.wrap.b32 	%r1417, %r1411, %r1410, 23;
	mov.b64 	%rd1946, {%r1417, %r1416};
	xor.b64  	%rd1947, %rd1945, %rd1946;
	xor.b64  	%rd1948, %rd1906, %rd1881;
	and.b64  	%rd1949, %rd1931, %rd1948;
	xor.b64  	%rd1950, %rd1949, %rd1881;
	add.s64 	%rd1951, %rd1711, %rd1648;
	ld.const.u64 	%rd1952, [k_sha512+408];
	add.s64 	%rd1953, %rd1951, %rd1952;
	add.s64 	%rd1954, %rd1953, %rd1950;
	add.s64 	%rd1955, %rd1954, %rd1947;
	add.s64 	%rd1956, %rd1955, %rd1659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd1942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1419}, %rd1942;
	}
	shf.r.wrap.b32 	%r1420, %r1419, %r1418, 28;
	shf.r.wrap.b32 	%r1421, %r1418, %r1419, 28;
	mov.b64 	%rd1957, {%r1421, %r1420};
	shf.l.wrap.b32 	%r1422, %r1418, %r1419, 30;
	shf.l.wrap.b32 	%r1423, %r1419, %r1418, 30;
	mov.b64 	%rd1958, {%r1423, %r1422};
	xor.b64  	%rd1959, %rd1958, %rd1957;
	shf.l.wrap.b32 	%r1424, %r1418, %r1419, 25;
	shf.l.wrap.b32 	%r1425, %r1419, %r1418, 25;
	mov.b64 	%rd1960, {%r1425, %r1424};
	xor.b64  	%rd1961, %rd1959, %rd1960;
	xor.b64  	%rd1962, %rd1942, %rd1892;
	xor.b64  	%rd1963, %rd1942, %rd1917;
	and.b64  	%rd1964, %rd1963, %rd1962;
	xor.b64  	%rd1965, %rd1964, %rd1942;
	add.s64 	%rd1966, %rd1955, %rd1965;
	add.s64 	%rd1967, %rd1966, %rd1961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1426,%dummy}, %rd1956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1427}, %rd1956;
	}
	shf.r.wrap.b32 	%r1428, %r1427, %r1426, 14;
	shf.r.wrap.b32 	%r1429, %r1426, %r1427, 14;
	mov.b64 	%rd1968, {%r1429, %r1428};
	shf.r.wrap.b32 	%r1430, %r1427, %r1426, 18;
	shf.r.wrap.b32 	%r1431, %r1426, %r1427, 18;
	mov.b64 	%rd1969, {%r1431, %r1430};
	xor.b64  	%rd1970, %rd1969, %rd1968;
	shf.l.wrap.b32 	%r1432, %r1426, %r1427, 23;
	shf.l.wrap.b32 	%r1433, %r1427, %r1426, 23;
	mov.b64 	%rd1971, {%r1433, %r1432};
	xor.b64  	%rd1972, %rd1970, %rd1971;
	xor.b64  	%rd1973, %rd1931, %rd1906;
	and.b64  	%rd1974, %rd1956, %rd1973;
	xor.b64  	%rd1975, %rd1974, %rd1906;
	add.s64 	%rd1976, %rd1881, %rd1724;
	ld.const.u64 	%rd1977, [k_sha512+416];
	add.s64 	%rd1978, %rd1976, %rd1977;
	add.s64 	%rd1979, %rd1978, %rd1975;
	add.s64 	%rd1980, %rd1979, %rd1972;
	add.s64 	%rd1981, %rd1980, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1434,%dummy}, %rd1967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1435}, %rd1967;
	}
	shf.r.wrap.b32 	%r1436, %r1435, %r1434, 28;
	shf.r.wrap.b32 	%r1437, %r1434, %r1435, 28;
	mov.b64 	%rd1982, {%r1437, %r1436};
	shf.l.wrap.b32 	%r1438, %r1434, %r1435, 30;
	shf.l.wrap.b32 	%r1439, %r1435, %r1434, 30;
	mov.b64 	%rd1983, {%r1439, %r1438};
	xor.b64  	%rd1984, %rd1983, %rd1982;
	shf.l.wrap.b32 	%r1440, %r1434, %r1435, 25;
	shf.l.wrap.b32 	%r1441, %r1435, %r1434, 25;
	mov.b64 	%rd1985, {%r1441, %r1440};
	xor.b64  	%rd1986, %rd1984, %rd1985;
	xor.b64  	%rd1987, %rd1967, %rd1917;
	xor.b64  	%rd1988, %rd1967, %rd1942;
	and.b64  	%rd1989, %rd1988, %rd1987;
	xor.b64  	%rd1990, %rd1989, %rd1967;
	add.s64 	%rd1991, %rd1980, %rd1990;
	add.s64 	%rd1992, %rd1991, %rd1986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1442,%dummy}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1443}, %rd1981;
	}
	shf.r.wrap.b32 	%r1444, %r1443, %r1442, 14;
	shf.r.wrap.b32 	%r1445, %r1442, %r1443, 14;
	mov.b64 	%rd1993, {%r1445, %r1444};
	shf.r.wrap.b32 	%r1446, %r1443, %r1442, 18;
	shf.r.wrap.b32 	%r1447, %r1442, %r1443, 18;
	mov.b64 	%rd1994, {%r1447, %r1446};
	xor.b64  	%rd1995, %rd1994, %rd1993;
	shf.l.wrap.b32 	%r1448, %r1442, %r1443, 23;
	shf.l.wrap.b32 	%r1449, %r1443, %r1442, 23;
	mov.b64 	%rd1996, {%r1449, %r1448};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	xor.b64  	%rd1998, %rd1956, %rd1931;
	and.b64  	%rd1999, %rd1981, %rd1998;
	xor.b64  	%rd2000, %rd1999, %rd1931;
	add.s64 	%rd2001, %rd1906, %rd1737;
	ld.const.u64 	%rd2002, [k_sha512+424];
	add.s64 	%rd2003, %rd2001, %rd2002;
	add.s64 	%rd2004, %rd2003, %rd2000;
	add.s64 	%rd2005, %rd2004, %rd1997;
	add.s64 	%rd2006, %rd2005, %rd1917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1450,%dummy}, %rd1992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1451}, %rd1992;
	}
	shf.r.wrap.b32 	%r1452, %r1451, %r1450, 28;
	shf.r.wrap.b32 	%r1453, %r1450, %r1451, 28;
	mov.b64 	%rd2007, {%r1453, %r1452};
	shf.l.wrap.b32 	%r1454, %r1450, %r1451, 30;
	shf.l.wrap.b32 	%r1455, %r1451, %r1450, 30;
	mov.b64 	%rd2008, {%r1455, %r1454};
	xor.b64  	%rd2009, %rd2008, %rd2007;
	shf.l.wrap.b32 	%r1456, %r1450, %r1451, 25;
	shf.l.wrap.b32 	%r1457, %r1451, %r1450, 25;
	mov.b64 	%rd2010, {%r1457, %r1456};
	xor.b64  	%rd2011, %rd2009, %rd2010;
	xor.b64  	%rd2012, %rd1992, %rd1942;
	xor.b64  	%rd2013, %rd1992, %rd1967;
	and.b64  	%rd2014, %rd2013, %rd2012;
	xor.b64  	%rd2015, %rd2014, %rd1992;
	add.s64 	%rd2016, %rd2005, %rd2015;
	add.s64 	%rd2017, %rd2016, %rd2011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1458,%dummy}, %rd2006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1459}, %rd2006;
	}
	shf.r.wrap.b32 	%r1460, %r1459, %r1458, 14;
	shf.r.wrap.b32 	%r1461, %r1458, %r1459, 14;
	mov.b64 	%rd2018, {%r1461, %r1460};
	shf.r.wrap.b32 	%r1462, %r1459, %r1458, 18;
	shf.r.wrap.b32 	%r1463, %r1458, %r1459, 18;
	mov.b64 	%rd2019, {%r1463, %r1462};
	xor.b64  	%rd2020, %rd2019, %rd2018;
	shf.l.wrap.b32 	%r1464, %r1458, %r1459, 23;
	shf.l.wrap.b32 	%r1465, %r1459, %r1458, 23;
	mov.b64 	%rd2021, {%r1465, %r1464};
	xor.b64  	%rd2022, %rd2020, %rd2021;
	xor.b64  	%rd2023, %rd1981, %rd1956;
	and.b64  	%rd2024, %rd2006, %rd2023;
	xor.b64  	%rd2025, %rd2024, %rd1956;
	add.s64 	%rd2026, %rd1931, %rd1750;
	ld.const.u64 	%rd2027, [k_sha512+432];
	add.s64 	%rd2028, %rd2026, %rd2027;
	add.s64 	%rd2029, %rd2028, %rd2025;
	add.s64 	%rd2030, %rd2029, %rd2022;
	add.s64 	%rd2031, %rd2030, %rd1942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1467}, %rd2017;
	}
	shf.r.wrap.b32 	%r1468, %r1467, %r1466, 28;
	shf.r.wrap.b32 	%r1469, %r1466, %r1467, 28;
	mov.b64 	%rd2032, {%r1469, %r1468};
	shf.l.wrap.b32 	%r1470, %r1466, %r1467, 30;
	shf.l.wrap.b32 	%r1471, %r1467, %r1466, 30;
	mov.b64 	%rd2033, {%r1471, %r1470};
	xor.b64  	%rd2034, %rd2033, %rd2032;
	shf.l.wrap.b32 	%r1472, %r1466, %r1467, 25;
	shf.l.wrap.b32 	%r1473, %r1467, %r1466, 25;
	mov.b64 	%rd2035, {%r1473, %r1472};
	xor.b64  	%rd2036, %rd2034, %rd2035;
	xor.b64  	%rd2037, %rd2017, %rd1967;
	xor.b64  	%rd2038, %rd2017, %rd1992;
	and.b64  	%rd2039, %rd2038, %rd2037;
	xor.b64  	%rd2040, %rd2039, %rd2017;
	add.s64 	%rd2041, %rd2030, %rd2040;
	add.s64 	%rd2042, %rd2041, %rd2036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd2031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1475}, %rd2031;
	}
	shf.r.wrap.b32 	%r1476, %r1475, %r1474, 14;
	shf.r.wrap.b32 	%r1477, %r1474, %r1475, 14;
	mov.b64 	%rd2043, {%r1477, %r1476};
	shf.r.wrap.b32 	%r1478, %r1475, %r1474, 18;
	shf.r.wrap.b32 	%r1479, %r1474, %r1475, 18;
	mov.b64 	%rd2044, {%r1479, %r1478};
	xor.b64  	%rd2045, %rd2044, %rd2043;
	shf.l.wrap.b32 	%r1480, %r1474, %r1475, 23;
	shf.l.wrap.b32 	%r1481, %r1475, %r1474, 23;
	mov.b64 	%rd2046, {%r1481, %r1480};
	xor.b64  	%rd2047, %rd2045, %rd2046;
	xor.b64  	%rd2048, %rd2006, %rd1981;
	and.b64  	%rd2049, %rd2031, %rd2048;
	xor.b64  	%rd2050, %rd2049, %rd1981;
	add.s64 	%rd2051, %rd1956, %rd1763;
	ld.const.u64 	%rd2052, [k_sha512+440];
	add.s64 	%rd2053, %rd2051, %rd2052;
	add.s64 	%rd2054, %rd2053, %rd2050;
	add.s64 	%rd2055, %rd2054, %rd2047;
	add.s64 	%rd2056, %rd2055, %rd1967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd2042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1483}, %rd2042;
	}
	shf.r.wrap.b32 	%r1484, %r1483, %r1482, 28;
	shf.r.wrap.b32 	%r1485, %r1482, %r1483, 28;
	mov.b64 	%rd2057, {%r1485, %r1484};
	shf.l.wrap.b32 	%r1486, %r1482, %r1483, 30;
	shf.l.wrap.b32 	%r1487, %r1483, %r1482, 30;
	mov.b64 	%rd2058, {%r1487, %r1486};
	xor.b64  	%rd2059, %rd2058, %rd2057;
	shf.l.wrap.b32 	%r1488, %r1482, %r1483, 25;
	shf.l.wrap.b32 	%r1489, %r1483, %r1482, 25;
	mov.b64 	%rd2060, {%r1489, %r1488};
	xor.b64  	%rd2061, %rd2059, %rd2060;
	xor.b64  	%rd2062, %rd2042, %rd1992;
	xor.b64  	%rd2063, %rd2042, %rd2017;
	and.b64  	%rd2064, %rd2063, %rd2062;
	xor.b64  	%rd2065, %rd2064, %rd2042;
	add.s64 	%rd2066, %rd2055, %rd2065;
	add.s64 	%rd2067, %rd2066, %rd2061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1490,%dummy}, %rd2056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1491}, %rd2056;
	}
	shf.r.wrap.b32 	%r1492, %r1491, %r1490, 14;
	shf.r.wrap.b32 	%r1493, %r1490, %r1491, 14;
	mov.b64 	%rd2068, {%r1493, %r1492};
	shf.r.wrap.b32 	%r1494, %r1491, %r1490, 18;
	shf.r.wrap.b32 	%r1495, %r1490, %r1491, 18;
	mov.b64 	%rd2069, {%r1495, %r1494};
	xor.b64  	%rd2070, %rd2069, %rd2068;
	shf.l.wrap.b32 	%r1496, %r1490, %r1491, 23;
	shf.l.wrap.b32 	%r1497, %r1491, %r1490, 23;
	mov.b64 	%rd2071, {%r1497, %r1496};
	xor.b64  	%rd2072, %rd2070, %rd2071;
	xor.b64  	%rd2073, %rd2031, %rd2006;
	and.b64  	%rd2074, %rd2056, %rd2073;
	xor.b64  	%rd2075, %rd2074, %rd2006;
	add.s64 	%rd2076, %rd1981, %rd1776;
	ld.const.u64 	%rd2077, [k_sha512+448];
	add.s64 	%rd2078, %rd2076, %rd2077;
	add.s64 	%rd2079, %rd2078, %rd2075;
	add.s64 	%rd2080, %rd2079, %rd2072;
	add.s64 	%rd2081, %rd2080, %rd1992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1498,%dummy}, %rd2067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1499}, %rd2067;
	}
	shf.r.wrap.b32 	%r1500, %r1499, %r1498, 28;
	shf.r.wrap.b32 	%r1501, %r1498, %r1499, 28;
	mov.b64 	%rd2082, {%r1501, %r1500};
	shf.l.wrap.b32 	%r1502, %r1498, %r1499, 30;
	shf.l.wrap.b32 	%r1503, %r1499, %r1498, 30;
	mov.b64 	%rd2083, {%r1503, %r1502};
	xor.b64  	%rd2084, %rd2083, %rd2082;
	shf.l.wrap.b32 	%r1504, %r1498, %r1499, 25;
	shf.l.wrap.b32 	%r1505, %r1499, %r1498, 25;
	mov.b64 	%rd2085, {%r1505, %r1504};
	xor.b64  	%rd2086, %rd2084, %rd2085;
	xor.b64  	%rd2087, %rd2067, %rd2017;
	xor.b64  	%rd2088, %rd2067, %rd2042;
	and.b64  	%rd2089, %rd2088, %rd2087;
	xor.b64  	%rd2090, %rd2089, %rd2067;
	add.s64 	%rd2091, %rd2080, %rd2090;
	add.s64 	%rd2092, %rd2091, %rd2086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1506,%dummy}, %rd2081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1507}, %rd2081;
	}
	shf.r.wrap.b32 	%r1508, %r1507, %r1506, 14;
	shf.r.wrap.b32 	%r1509, %r1506, %r1507, 14;
	mov.b64 	%rd2093, {%r1509, %r1508};
	shf.r.wrap.b32 	%r1510, %r1507, %r1506, 18;
	shf.r.wrap.b32 	%r1511, %r1506, %r1507, 18;
	mov.b64 	%rd2094, {%r1511, %r1510};
	xor.b64  	%rd2095, %rd2094, %rd2093;
	shf.l.wrap.b32 	%r1512, %r1506, %r1507, 23;
	shf.l.wrap.b32 	%r1513, %r1507, %r1506, 23;
	mov.b64 	%rd2096, {%r1513, %r1512};
	xor.b64  	%rd2097, %rd2095, %rd2096;
	xor.b64  	%rd2098, %rd2056, %rd2031;
	and.b64  	%rd2099, %rd2081, %rd2098;
	xor.b64  	%rd2100, %rd2099, %rd2031;
	add.s64 	%rd2101, %rd2006, %rd1789;
	ld.const.u64 	%rd2102, [k_sha512+456];
	add.s64 	%rd2103, %rd2101, %rd2102;
	add.s64 	%rd2104, %rd2103, %rd2100;
	add.s64 	%rd2105, %rd2104, %rd2097;
	add.s64 	%rd2106, %rd2105, %rd2017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1514,%dummy}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1515}, %rd2092;
	}
	shf.r.wrap.b32 	%r1516, %r1515, %r1514, 28;
	shf.r.wrap.b32 	%r1517, %r1514, %r1515, 28;
	mov.b64 	%rd2107, {%r1517, %r1516};
	shf.l.wrap.b32 	%r1518, %r1514, %r1515, 30;
	shf.l.wrap.b32 	%r1519, %r1515, %r1514, 30;
	mov.b64 	%rd2108, {%r1519, %r1518};
	xor.b64  	%rd2109, %rd2108, %rd2107;
	shf.l.wrap.b32 	%r1520, %r1514, %r1515, 25;
	shf.l.wrap.b32 	%r1521, %r1515, %r1514, 25;
	mov.b64 	%rd2110, {%r1521, %r1520};
	xor.b64  	%rd2111, %rd2109, %rd2110;
	xor.b64  	%rd2112, %rd2092, %rd2042;
	xor.b64  	%rd2113, %rd2092, %rd2067;
	and.b64  	%rd2114, %rd2113, %rd2112;
	xor.b64  	%rd2115, %rd2114, %rd2092;
	add.s64 	%rd2116, %rd2105, %rd2115;
	add.s64 	%rd2117, %rd2116, %rd2111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1522,%dummy}, %rd2106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1523}, %rd2106;
	}
	shf.r.wrap.b32 	%r1524, %r1523, %r1522, 14;
	shf.r.wrap.b32 	%r1525, %r1522, %r1523, 14;
	mov.b64 	%rd2118, {%r1525, %r1524};
	shf.r.wrap.b32 	%r1526, %r1523, %r1522, 18;
	shf.r.wrap.b32 	%r1527, %r1522, %r1523, 18;
	mov.b64 	%rd2119, {%r1527, %r1526};
	xor.b64  	%rd2120, %rd2119, %rd2118;
	shf.l.wrap.b32 	%r1528, %r1522, %r1523, 23;
	shf.l.wrap.b32 	%r1529, %r1523, %r1522, 23;
	mov.b64 	%rd2121, {%r1529, %r1528};
	xor.b64  	%rd2122, %rd2120, %rd2121;
	xor.b64  	%rd2123, %rd2081, %rd2056;
	and.b64  	%rd2124, %rd2106, %rd2123;
	xor.b64  	%rd2125, %rd2124, %rd2056;
	add.s64 	%rd2126, %rd2031, %rd1802;
	ld.const.u64 	%rd2127, [k_sha512+464];
	add.s64 	%rd2128, %rd2126, %rd2127;
	add.s64 	%rd2129, %rd2128, %rd2125;
	add.s64 	%rd2130, %rd2129, %rd2122;
	add.s64 	%rd2131, %rd2130, %rd2042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1530,%dummy}, %rd2117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1531}, %rd2117;
	}
	shf.r.wrap.b32 	%r1532, %r1531, %r1530, 28;
	shf.r.wrap.b32 	%r1533, %r1530, %r1531, 28;
	mov.b64 	%rd2132, {%r1533, %r1532};
	shf.l.wrap.b32 	%r1534, %r1530, %r1531, 30;
	shf.l.wrap.b32 	%r1535, %r1531, %r1530, 30;
	mov.b64 	%rd2133, {%r1535, %r1534};
	xor.b64  	%rd2134, %rd2133, %rd2132;
	shf.l.wrap.b32 	%r1536, %r1530, %r1531, 25;
	shf.l.wrap.b32 	%r1537, %r1531, %r1530, 25;
	mov.b64 	%rd2135, {%r1537, %r1536};
	xor.b64  	%rd2136, %rd2134, %rd2135;
	xor.b64  	%rd2137, %rd2117, %rd2067;
	xor.b64  	%rd2138, %rd2117, %rd2092;
	and.b64  	%rd2139, %rd2138, %rd2137;
	xor.b64  	%rd2140, %rd2139, %rd2117;
	add.s64 	%rd2141, %rd2130, %rd2140;
	add.s64 	%rd2142, %rd2141, %rd2136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1538,%dummy}, %rd2131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1539}, %rd2131;
	}
	shf.r.wrap.b32 	%r1540, %r1539, %r1538, 14;
	shf.r.wrap.b32 	%r1541, %r1538, %r1539, 14;
	mov.b64 	%rd2143, {%r1541, %r1540};
	shf.r.wrap.b32 	%r1542, %r1539, %r1538, 18;
	shf.r.wrap.b32 	%r1543, %r1538, %r1539, 18;
	mov.b64 	%rd2144, {%r1543, %r1542};
	xor.b64  	%rd2145, %rd2144, %rd2143;
	shf.l.wrap.b32 	%r1544, %r1538, %r1539, 23;
	shf.l.wrap.b32 	%r1545, %r1539, %r1538, 23;
	mov.b64 	%rd2146, {%r1545, %r1544};
	xor.b64  	%rd2147, %rd2145, %rd2146;
	xor.b64  	%rd2148, %rd2106, %rd2081;
	and.b64  	%rd2149, %rd2131, %rd2148;
	xor.b64  	%rd2150, %rd2149, %rd2081;
	add.s64 	%rd2151, %rd2056, %rd1815;
	ld.const.u64 	%rd2152, [k_sha512+472];
	add.s64 	%rd2153, %rd2151, %rd2152;
	add.s64 	%rd2154, %rd2153, %rd2150;
	add.s64 	%rd2155, %rd2154, %rd2147;
	add.s64 	%rd2156, %rd2155, %rd2067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd2142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1547}, %rd2142;
	}
	shf.r.wrap.b32 	%r1548, %r1547, %r1546, 28;
	shf.r.wrap.b32 	%r1549, %r1546, %r1547, 28;
	mov.b64 	%rd2157, {%r1549, %r1548};
	shf.l.wrap.b32 	%r1550, %r1546, %r1547, 30;
	shf.l.wrap.b32 	%r1551, %r1547, %r1546, 30;
	mov.b64 	%rd2158, {%r1551, %r1550};
	xor.b64  	%rd2159, %rd2158, %rd2157;
	shf.l.wrap.b32 	%r1552, %r1546, %r1547, 25;
	shf.l.wrap.b32 	%r1553, %r1547, %r1546, 25;
	mov.b64 	%rd2160, {%r1553, %r1552};
	xor.b64  	%rd2161, %rd2159, %rd2160;
	xor.b64  	%rd2162, %rd2142, %rd2092;
	xor.b64  	%rd2163, %rd2142, %rd2117;
	and.b64  	%rd2164, %rd2163, %rd2162;
	xor.b64  	%rd2165, %rd2164, %rd2142;
	add.s64 	%rd2166, %rd2155, %rd2165;
	add.s64 	%rd2167, %rd2166, %rd2161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1554,%dummy}, %rd2156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1555}, %rd2156;
	}
	shf.r.wrap.b32 	%r1556, %r1555, %r1554, 14;
	shf.r.wrap.b32 	%r1557, %r1554, %r1555, 14;
	mov.b64 	%rd2168, {%r1557, %r1556};
	shf.r.wrap.b32 	%r1558, %r1555, %r1554, 18;
	shf.r.wrap.b32 	%r1559, %r1554, %r1555, 18;
	mov.b64 	%rd2169, {%r1559, %r1558};
	xor.b64  	%rd2170, %rd2169, %rd2168;
	shf.l.wrap.b32 	%r1560, %r1554, %r1555, 23;
	shf.l.wrap.b32 	%r1561, %r1555, %r1554, 23;
	mov.b64 	%rd2171, {%r1561, %r1560};
	xor.b64  	%rd2172, %rd2170, %rd2171;
	xor.b64  	%rd2173, %rd2131, %rd2106;
	and.b64  	%rd2174, %rd2156, %rd2173;
	xor.b64  	%rd2175, %rd2174, %rd2106;
	add.s64 	%rd2176, %rd2081, %rd1828;
	ld.const.u64 	%rd2177, [k_sha512+480];
	add.s64 	%rd2178, %rd2176, %rd2177;
	add.s64 	%rd2179, %rd2178, %rd2175;
	add.s64 	%rd2180, %rd2179, %rd2172;
	add.s64 	%rd2181, %rd2180, %rd2092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1562,%dummy}, %rd2167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1563}, %rd2167;
	}
	shf.r.wrap.b32 	%r1564, %r1563, %r1562, 28;
	shf.r.wrap.b32 	%r1565, %r1562, %r1563, 28;
	mov.b64 	%rd2182, {%r1565, %r1564};
	shf.l.wrap.b32 	%r1566, %r1562, %r1563, 30;
	shf.l.wrap.b32 	%r1567, %r1563, %r1562, 30;
	mov.b64 	%rd2183, {%r1567, %r1566};
	xor.b64  	%rd2184, %rd2183, %rd2182;
	shf.l.wrap.b32 	%r1568, %r1562, %r1563, 25;
	shf.l.wrap.b32 	%r1569, %r1563, %r1562, 25;
	mov.b64 	%rd2185, {%r1569, %r1568};
	xor.b64  	%rd2186, %rd2184, %rd2185;
	xor.b64  	%rd2187, %rd2167, %rd2117;
	xor.b64  	%rd2188, %rd2167, %rd2142;
	and.b64  	%rd2189, %rd2188, %rd2187;
	xor.b64  	%rd2190, %rd2189, %rd2167;
	add.s64 	%rd2191, %rd2180, %rd2190;
	add.s64 	%rd2192, %rd2191, %rd2186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1570,%dummy}, %rd2181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1571}, %rd2181;
	}
	shf.r.wrap.b32 	%r1572, %r1571, %r1570, 14;
	shf.r.wrap.b32 	%r1573, %r1570, %r1571, 14;
	mov.b64 	%rd2193, {%r1573, %r1572};
	shf.r.wrap.b32 	%r1574, %r1571, %r1570, 18;
	shf.r.wrap.b32 	%r1575, %r1570, %r1571, 18;
	mov.b64 	%rd2194, {%r1575, %r1574};
	xor.b64  	%rd2195, %rd2194, %rd2193;
	shf.l.wrap.b32 	%r1576, %r1570, %r1571, 23;
	shf.l.wrap.b32 	%r1577, %r1571, %r1570, 23;
	mov.b64 	%rd2196, {%r1577, %r1576};
	xor.b64  	%rd2197, %rd2195, %rd2196;
	xor.b64  	%rd2198, %rd2156, %rd2131;
	and.b64  	%rd2199, %rd2181, %rd2198;
	xor.b64  	%rd2200, %rd2199, %rd2131;
	add.s64 	%rd2201, %rd2106, %rd1841;
	ld.const.u64 	%rd2202, [k_sha512+488];
	add.s64 	%rd2203, %rd2201, %rd2202;
	add.s64 	%rd2204, %rd2203, %rd2200;
	add.s64 	%rd2205, %rd2204, %rd2197;
	add.s64 	%rd2206, %rd2205, %rd2117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd2192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd2192;
	}
	shf.r.wrap.b32 	%r1580, %r1579, %r1578, 28;
	shf.r.wrap.b32 	%r1581, %r1578, %r1579, 28;
	mov.b64 	%rd2207, {%r1581, %r1580};
	shf.l.wrap.b32 	%r1582, %r1578, %r1579, 30;
	shf.l.wrap.b32 	%r1583, %r1579, %r1578, 30;
	mov.b64 	%rd2208, {%r1583, %r1582};
	xor.b64  	%rd2209, %rd2208, %rd2207;
	shf.l.wrap.b32 	%r1584, %r1578, %r1579, 25;
	shf.l.wrap.b32 	%r1585, %r1579, %r1578, 25;
	mov.b64 	%rd2210, {%r1585, %r1584};
	xor.b64  	%rd2211, %rd2209, %rd2210;
	xor.b64  	%rd2212, %rd2192, %rd2142;
	xor.b64  	%rd2213, %rd2192, %rd2167;
	and.b64  	%rd2214, %rd2213, %rd2212;
	xor.b64  	%rd2215, %rd2214, %rd2192;
	add.s64 	%rd2216, %rd2205, %rd2215;
	add.s64 	%rd2217, %rd2216, %rd2211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd2206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd2206;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 14;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 14;
	mov.b64 	%rd2218, {%r1589, %r1588};
	shf.r.wrap.b32 	%r1590, %r1587, %r1586, 18;
	shf.r.wrap.b32 	%r1591, %r1586, %r1587, 18;
	mov.b64 	%rd2219, {%r1591, %r1590};
	xor.b64  	%rd2220, %rd2219, %rd2218;
	shf.l.wrap.b32 	%r1592, %r1586, %r1587, 23;
	shf.l.wrap.b32 	%r1593, %r1587, %r1586, 23;
	mov.b64 	%rd2221, {%r1593, %r1592};
	xor.b64  	%rd2222, %rd2220, %rd2221;
	xor.b64  	%rd2223, %rd2181, %rd2156;
	and.b64  	%rd2224, %rd2206, %rd2223;
	xor.b64  	%rd2225, %rd2224, %rd2156;
	add.s64 	%rd2226, %rd2131, %rd1854;
	ld.const.u64 	%rd2227, [k_sha512+496];
	add.s64 	%rd2228, %rd2226, %rd2227;
	add.s64 	%rd2229, %rd2228, %rd2225;
	add.s64 	%rd2230, %rd2229, %rd2222;
	add.s64 	%rd2231, %rd2230, %rd2142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd2217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd2217;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 28;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 28;
	mov.b64 	%rd2232, {%r1597, %r1596};
	shf.l.wrap.b32 	%r1598, %r1594, %r1595, 30;
	shf.l.wrap.b32 	%r1599, %r1595, %r1594, 30;
	mov.b64 	%rd2233, {%r1599, %r1598};
	xor.b64  	%rd2234, %rd2233, %rd2232;
	shf.l.wrap.b32 	%r1600, %r1594, %r1595, 25;
	shf.l.wrap.b32 	%r1601, %r1595, %r1594, 25;
	mov.b64 	%rd2235, {%r1601, %r1600};
	xor.b64  	%rd2236, %rd2234, %rd2235;
	xor.b64  	%rd2237, %rd2217, %rd2167;
	xor.b64  	%rd2238, %rd2217, %rd2192;
	and.b64  	%rd2239, %rd2238, %rd2237;
	xor.b64  	%rd2240, %rd2239, %rd2217;
	add.s64 	%rd2241, %rd2230, %rd2240;
	add.s64 	%rd2242, %rd2241, %rd2236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1602,%dummy}, %rd2231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1603}, %rd2231;
	}
	shf.r.wrap.b32 	%r1604, %r1603, %r1602, 14;
	shf.r.wrap.b32 	%r1605, %r1602, %r1603, 14;
	mov.b64 	%rd2243, {%r1605, %r1604};
	shf.r.wrap.b32 	%r1606, %r1603, %r1602, 18;
	shf.r.wrap.b32 	%r1607, %r1602, %r1603, 18;
	mov.b64 	%rd2244, {%r1607, %r1606};
	xor.b64  	%rd2245, %rd2244, %rd2243;
	shf.l.wrap.b32 	%r1608, %r1602, %r1603, 23;
	shf.l.wrap.b32 	%r1609, %r1603, %r1602, 23;
	mov.b64 	%rd2246, {%r1609, %r1608};
	xor.b64  	%rd2247, %rd2245, %rd2246;
	xor.b64  	%rd2248, %rd2206, %rd2181;
	and.b64  	%rd2249, %rd2231, %rd2248;
	xor.b64  	%rd2250, %rd2249, %rd2181;
	add.s64 	%rd2251, %rd2156, %rd1867;
	ld.const.u64 	%rd2252, [k_sha512+504];
	add.s64 	%rd2253, %rd2251, %rd2252;
	add.s64 	%rd2254, %rd2253, %rd2250;
	add.s64 	%rd2255, %rd2254, %rd2247;
	add.s64 	%rd2256, %rd2255, %rd2167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1610,%dummy}, %rd2242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1611}, %rd2242;
	}
	shf.r.wrap.b32 	%r1612, %r1611, %r1610, 28;
	shf.r.wrap.b32 	%r1613, %r1610, %r1611, 28;
	mov.b64 	%rd2257, {%r1613, %r1612};
	shf.l.wrap.b32 	%r1614, %r1610, %r1611, 30;
	shf.l.wrap.b32 	%r1615, %r1611, %r1610, 30;
	mov.b64 	%rd2258, {%r1615, %r1614};
	xor.b64  	%rd2259, %rd2258, %rd2257;
	shf.l.wrap.b32 	%r1616, %r1610, %r1611, 25;
	shf.l.wrap.b32 	%r1617, %r1611, %r1610, 25;
	mov.b64 	%rd2260, {%r1617, %r1616};
	xor.b64  	%rd2261, %rd2259, %rd2260;
	xor.b64  	%rd2262, %rd2242, %rd2192;
	xor.b64  	%rd2263, %rd2242, %rd2217;
	and.b64  	%rd2264, %rd2263, %rd2262;
	xor.b64  	%rd2265, %rd2264, %rd2242;
	add.s64 	%rd2266, %rd2255, %rd2265;
	add.s64 	%rd2267, %rd2266, %rd2261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1618,%dummy}, %rd1854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1619}, %rd1854;
	}
	shf.r.wrap.b32 	%r1620, %r1619, %r1618, 19;
	shf.r.wrap.b32 	%r1621, %r1618, %r1619, 19;
	mov.b64 	%rd2268, {%r1621, %r1620};
	shf.l.wrap.b32 	%r1622, %r1618, %r1619, 3;
	shf.l.wrap.b32 	%r1623, %r1619, %r1618, 3;
	mov.b64 	%rd2269, {%r1623, %r1622};
	shr.u64 	%rd2270, %rd1854, 6;
	xor.b64  	%rd2271, %rd2268, %rd2270;
	xor.b64  	%rd2272, %rd2271, %rd2269;
	shf.r.wrap.b32 	%r1624, %r1233, %r1232, 1;
	shf.r.wrap.b32 	%r1625, %r1232, %r1233, 1;
	mov.b64 	%rd2273, {%r1625, %r1624};
	shf.r.wrap.b32 	%r1626, %r1233, %r1232, 8;
	shf.r.wrap.b32 	%r1627, %r1232, %r1233, 8;
	mov.b64 	%rd2274, {%r1627, %r1626};
	shr.u64 	%rd2275, %rd1685, 7;
	xor.b64  	%rd2276, %rd2273, %rd2275;
	xor.b64  	%rd2277, %rd2276, %rd2274;
	add.s64 	%rd2278, %rd1672, %rd1789;
	add.s64 	%rd2279, %rd2278, %rd2272;
	add.s64 	%rd2280, %rd2279, %rd2277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1628,%dummy}, %rd1867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1629}, %rd1867;
	}
	shf.r.wrap.b32 	%r1630, %r1629, %r1628, 19;
	shf.r.wrap.b32 	%r1631, %r1628, %r1629, 19;
	mov.b64 	%rd2281, {%r1631, %r1630};
	shf.l.wrap.b32 	%r1632, %r1628, %r1629, 3;
	shf.l.wrap.b32 	%r1633, %r1629, %r1628, 3;
	mov.b64 	%rd2282, {%r1633, %r1632};
	shr.u64 	%rd2283, %rd1867, 6;
	xor.b64  	%rd2284, %rd2281, %rd2283;
	xor.b64  	%rd2285, %rd2284, %rd2282;
	shf.r.wrap.b32 	%r1634, %r1243, %r1242, 1;
	shf.r.wrap.b32 	%r1635, %r1242, %r1243, 1;
	mov.b64 	%rd2286, {%r1635, %r1634};
	shf.r.wrap.b32 	%r1636, %r1243, %r1242, 8;
	shf.r.wrap.b32 	%r1637, %r1242, %r1243, 8;
	mov.b64 	%rd2287, {%r1637, %r1636};
	shr.u64 	%rd2288, %rd1698, 7;
	xor.b64  	%rd2289, %rd2286, %rd2288;
	xor.b64  	%rd2290, %rd2289, %rd2287;
	add.s64 	%rd2291, %rd1685, %rd1802;
	add.s64 	%rd2292, %rd2291, %rd2285;
	add.s64 	%rd2293, %rd2292, %rd2290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1638,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1639}, %rd2280;
	}
	shf.r.wrap.b32 	%r1640, %r1639, %r1638, 19;
	shf.r.wrap.b32 	%r1641, %r1638, %r1639, 19;
	mov.b64 	%rd2294, {%r1641, %r1640};
	shf.l.wrap.b32 	%r1642, %r1638, %r1639, 3;
	shf.l.wrap.b32 	%r1643, %r1639, %r1638, 3;
	mov.b64 	%rd2295, {%r1643, %r1642};
	shr.u64 	%rd2296, %rd2280, 6;
	xor.b64  	%rd2297, %rd2294, %rd2296;
	xor.b64  	%rd2298, %rd2297, %rd2295;
	shf.r.wrap.b32 	%r1644, %r1253, %r1252, 1;
	shf.r.wrap.b32 	%r1645, %r1252, %r1253, 1;
	mov.b64 	%rd2299, {%r1645, %r1644};
	shf.r.wrap.b32 	%r1646, %r1253, %r1252, 8;
	shf.r.wrap.b32 	%r1647, %r1252, %r1253, 8;
	mov.b64 	%rd2300, {%r1647, %r1646};
	shr.u64 	%rd2301, %rd1711, 7;
	xor.b64  	%rd2302, %rd2299, %rd2301;
	xor.b64  	%rd2303, %rd2302, %rd2300;
	add.s64 	%rd2304, %rd1698, %rd1815;
	add.s64 	%rd2305, %rd2304, %rd2298;
	add.s64 	%rd2306, %rd2305, %rd2303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1648,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd2293;
	}
	shf.r.wrap.b32 	%r1650, %r1649, %r1648, 19;
	shf.r.wrap.b32 	%r1651, %r1648, %r1649, 19;
	mov.b64 	%rd2307, {%r1651, %r1650};
	shf.l.wrap.b32 	%r1652, %r1648, %r1649, 3;
	shf.l.wrap.b32 	%r1653, %r1649, %r1648, 3;
	mov.b64 	%rd2308, {%r1653, %r1652};
	shr.u64 	%rd2309, %rd2293, 6;
	xor.b64  	%rd2310, %rd2307, %rd2309;
	xor.b64  	%rd2311, %rd2310, %rd2308;
	shf.r.wrap.b32 	%r1654, %r1263, %r1262, 1;
	shf.r.wrap.b32 	%r1655, %r1262, %r1263, 1;
	mov.b64 	%rd2312, {%r1655, %r1654};
	shf.r.wrap.b32 	%r1656, %r1263, %r1262, 8;
	shf.r.wrap.b32 	%r1657, %r1262, %r1263, 8;
	mov.b64 	%rd2313, {%r1657, %r1656};
	shr.u64 	%rd2314, %rd1724, 7;
	xor.b64  	%rd2315, %rd2312, %rd2314;
	xor.b64  	%rd2316, %rd2315, %rd2313;
	add.s64 	%rd2317, %rd1828, %rd1711;
	add.s64 	%rd2318, %rd2317, %rd2311;
	add.s64 	%rd2319, %rd2318, %rd2316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1658,%dummy}, %rd2306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1659}, %rd2306;
	}
	shf.r.wrap.b32 	%r1660, %r1659, %r1658, 19;
	shf.r.wrap.b32 	%r1661, %r1658, %r1659, 19;
	mov.b64 	%rd2320, {%r1661, %r1660};
	shf.l.wrap.b32 	%r1662, %r1658, %r1659, 3;
	shf.l.wrap.b32 	%r1663, %r1659, %r1658, 3;
	mov.b64 	%rd2321, {%r1663, %r1662};
	shr.u64 	%rd2322, %rd2306, 6;
	xor.b64  	%rd2323, %rd2320, %rd2322;
	xor.b64  	%rd2324, %rd2323, %rd2321;
	shf.r.wrap.b32 	%r1664, %r1273, %r1272, 1;
	shf.r.wrap.b32 	%r1665, %r1272, %r1273, 1;
	mov.b64 	%rd2325, {%r1665, %r1664};
	shf.r.wrap.b32 	%r1666, %r1273, %r1272, 8;
	shf.r.wrap.b32 	%r1667, %r1272, %r1273, 8;
	mov.b64 	%rd2326, {%r1667, %r1666};
	shr.u64 	%rd2327, %rd1737, 7;
	xor.b64  	%rd2328, %rd2325, %rd2327;
	xor.b64  	%rd2329, %rd2328, %rd2326;
	add.s64 	%rd2330, %rd1841, %rd1724;
	add.s64 	%rd2331, %rd2330, %rd2324;
	add.s64 	%rd2332, %rd2331, %rd2329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1668,%dummy}, %rd2319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1669}, %rd2319;
	}
	shf.r.wrap.b32 	%r1670, %r1669, %r1668, 19;
	shf.r.wrap.b32 	%r1671, %r1668, %r1669, 19;
	mov.b64 	%rd2333, {%r1671, %r1670};
	shf.l.wrap.b32 	%r1672, %r1668, %r1669, 3;
	shf.l.wrap.b32 	%r1673, %r1669, %r1668, 3;
	mov.b64 	%rd2334, {%r1673, %r1672};
	shr.u64 	%rd2335, %rd2319, 6;
	xor.b64  	%rd2336, %rd2333, %rd2335;
	xor.b64  	%rd2337, %rd2336, %rd2334;
	shf.r.wrap.b32 	%r1674, %r1283, %r1282, 1;
	shf.r.wrap.b32 	%r1675, %r1282, %r1283, 1;
	mov.b64 	%rd2338, {%r1675, %r1674};
	shf.r.wrap.b32 	%r1676, %r1283, %r1282, 8;
	shf.r.wrap.b32 	%r1677, %r1282, %r1283, 8;
	mov.b64 	%rd2339, {%r1677, %r1676};
	shr.u64 	%rd2340, %rd1750, 7;
	xor.b64  	%rd2341, %rd2338, %rd2340;
	xor.b64  	%rd2342, %rd2341, %rd2339;
	add.s64 	%rd2343, %rd1854, %rd1737;
	add.s64 	%rd2344, %rd2343, %rd2337;
	add.s64 	%rd2345, %rd2344, %rd2342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1678,%dummy}, %rd2332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1679}, %rd2332;
	}
	shf.r.wrap.b32 	%r1680, %r1679, %r1678, 19;
	shf.r.wrap.b32 	%r1681, %r1678, %r1679, 19;
	mov.b64 	%rd2346, {%r1681, %r1680};
	shf.l.wrap.b32 	%r1682, %r1678, %r1679, 3;
	shf.l.wrap.b32 	%r1683, %r1679, %r1678, 3;
	mov.b64 	%rd2347, {%r1683, %r1682};
	shr.u64 	%rd2348, %rd2332, 6;
	xor.b64  	%rd2349, %rd2346, %rd2348;
	xor.b64  	%rd2350, %rd2349, %rd2347;
	shf.r.wrap.b32 	%r1684, %r1293, %r1292, 1;
	shf.r.wrap.b32 	%r1685, %r1292, %r1293, 1;
	mov.b64 	%rd2351, {%r1685, %r1684};
	shf.r.wrap.b32 	%r1686, %r1293, %r1292, 8;
	shf.r.wrap.b32 	%r1687, %r1292, %r1293, 8;
	mov.b64 	%rd2352, {%r1687, %r1686};
	shr.u64 	%rd2353, %rd1763, 7;
	xor.b64  	%rd2354, %rd2351, %rd2353;
	xor.b64  	%rd2355, %rd2354, %rd2352;
	add.s64 	%rd2356, %rd1867, %rd1750;
	add.s64 	%rd2357, %rd2356, %rd2350;
	add.s64 	%rd2358, %rd2357, %rd2355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1688,%dummy}, %rd2345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1689}, %rd2345;
	}
	shf.r.wrap.b32 	%r1690, %r1689, %r1688, 19;
	shf.r.wrap.b32 	%r1691, %r1688, %r1689, 19;
	mov.b64 	%rd2359, {%r1691, %r1690};
	shf.l.wrap.b32 	%r1692, %r1688, %r1689, 3;
	shf.l.wrap.b32 	%r1693, %r1689, %r1688, 3;
	mov.b64 	%rd2360, {%r1693, %r1692};
	shr.u64 	%rd2361, %rd2345, 6;
	xor.b64  	%rd2362, %rd2359, %rd2361;
	xor.b64  	%rd2363, %rd2362, %rd2360;
	shf.r.wrap.b32 	%r1694, %r1303, %r1302, 1;
	shf.r.wrap.b32 	%r1695, %r1302, %r1303, 1;
	mov.b64 	%rd2364, {%r1695, %r1694};
	shf.r.wrap.b32 	%r1696, %r1303, %r1302, 8;
	shf.r.wrap.b32 	%r1697, %r1302, %r1303, 8;
	mov.b64 	%rd2365, {%r1697, %r1696};
	shr.u64 	%rd2366, %rd1776, 7;
	xor.b64  	%rd2367, %rd2364, %rd2366;
	xor.b64  	%rd2368, %rd2367, %rd2365;
	add.s64 	%rd2369, %rd2280, %rd1763;
	add.s64 	%rd2370, %rd2369, %rd2363;
	add.s64 	%rd2371, %rd2370, %rd2368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1698,%dummy}, %rd2358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1699}, %rd2358;
	}
	shf.r.wrap.b32 	%r1700, %r1699, %r1698, 19;
	shf.r.wrap.b32 	%r1701, %r1698, %r1699, 19;
	mov.b64 	%rd2372, {%r1701, %r1700};
	shf.l.wrap.b32 	%r1702, %r1698, %r1699, 3;
	shf.l.wrap.b32 	%r1703, %r1699, %r1698, 3;
	mov.b64 	%rd2373, {%r1703, %r1702};
	shr.u64 	%rd2374, %rd2358, 6;
	xor.b64  	%rd2375, %rd2372, %rd2374;
	xor.b64  	%rd2376, %rd2375, %rd2373;
	shf.r.wrap.b32 	%r1704, %r1313, %r1312, 1;
	shf.r.wrap.b32 	%r1705, %r1312, %r1313, 1;
	mov.b64 	%rd2377, {%r1705, %r1704};
	shf.r.wrap.b32 	%r1706, %r1313, %r1312, 8;
	shf.r.wrap.b32 	%r1707, %r1312, %r1313, 8;
	mov.b64 	%rd2378, {%r1707, %r1706};
	shr.u64 	%rd2379, %rd1789, 7;
	xor.b64  	%rd2380, %rd2377, %rd2379;
	xor.b64  	%rd2381, %rd2380, %rd2378;
	add.s64 	%rd2382, %rd2293, %rd1776;
	add.s64 	%rd2383, %rd2382, %rd2376;
	add.s64 	%rd2384, %rd2383, %rd2381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1708,%dummy}, %rd2371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1709}, %rd2371;
	}
	shf.r.wrap.b32 	%r1710, %r1709, %r1708, 19;
	shf.r.wrap.b32 	%r1711, %r1708, %r1709, 19;
	mov.b64 	%rd2385, {%r1711, %r1710};
	shf.l.wrap.b32 	%r1712, %r1708, %r1709, 3;
	shf.l.wrap.b32 	%r1713, %r1709, %r1708, 3;
	mov.b64 	%rd2386, {%r1713, %r1712};
	shr.u64 	%rd2387, %rd2371, 6;
	xor.b64  	%rd2388, %rd2385, %rd2387;
	xor.b64  	%rd2389, %rd2388, %rd2386;
	shf.r.wrap.b32 	%r1714, %r1323, %r1322, 1;
	shf.r.wrap.b32 	%r1715, %r1322, %r1323, 1;
	mov.b64 	%rd2390, {%r1715, %r1714};
	shf.r.wrap.b32 	%r1716, %r1323, %r1322, 8;
	shf.r.wrap.b32 	%r1717, %r1322, %r1323, 8;
	mov.b64 	%rd2391, {%r1717, %r1716};
	shr.u64 	%rd2392, %rd1802, 7;
	xor.b64  	%rd2393, %rd2390, %rd2392;
	xor.b64  	%rd2394, %rd2393, %rd2391;
	add.s64 	%rd2395, %rd2306, %rd1789;
	add.s64 	%rd2396, %rd2395, %rd2389;
	add.s64 	%rd2397, %rd2396, %rd2394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1718,%dummy}, %rd2384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1719}, %rd2384;
	}
	shf.r.wrap.b32 	%r1720, %r1719, %r1718, 19;
	shf.r.wrap.b32 	%r1721, %r1718, %r1719, 19;
	mov.b64 	%rd2398, {%r1721, %r1720};
	shf.l.wrap.b32 	%r1722, %r1718, %r1719, 3;
	shf.l.wrap.b32 	%r1723, %r1719, %r1718, 3;
	mov.b64 	%rd2399, {%r1723, %r1722};
	shr.u64 	%rd2400, %rd2384, 6;
	xor.b64  	%rd2401, %rd2398, %rd2400;
	xor.b64  	%rd2402, %rd2401, %rd2399;
	shf.r.wrap.b32 	%r1724, %r1333, %r1332, 1;
	shf.r.wrap.b32 	%r1725, %r1332, %r1333, 1;
	mov.b64 	%rd2403, {%r1725, %r1724};
	shf.r.wrap.b32 	%r1726, %r1333, %r1332, 8;
	shf.r.wrap.b32 	%r1727, %r1332, %r1333, 8;
	mov.b64 	%rd2404, {%r1727, %r1726};
	shr.u64 	%rd2405, %rd1815, 7;
	xor.b64  	%rd2406, %rd2403, %rd2405;
	xor.b64  	%rd2407, %rd2406, %rd2404;
	add.s64 	%rd2408, %rd2319, %rd1802;
	add.s64 	%rd2409, %rd2408, %rd2402;
	add.s64 	%rd2410, %rd2409, %rd2407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1728,%dummy}, %rd2397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd2397;
	}
	shf.r.wrap.b32 	%r1730, %r1729, %r1728, 19;
	shf.r.wrap.b32 	%r1731, %r1728, %r1729, 19;
	mov.b64 	%rd2411, {%r1731, %r1730};
	shf.l.wrap.b32 	%r1732, %r1728, %r1729, 3;
	shf.l.wrap.b32 	%r1733, %r1729, %r1728, 3;
	mov.b64 	%rd2412, {%r1733, %r1732};
	shr.u64 	%rd2413, %rd2397, 6;
	xor.b64  	%rd2414, %rd2411, %rd2413;
	xor.b64  	%rd2415, %rd2414, %rd2412;
	shf.r.wrap.b32 	%r1734, %r1343, %r1342, 1;
	shf.r.wrap.b32 	%r1735, %r1342, %r1343, 1;
	mov.b64 	%rd2416, {%r1735, %r1734};
	shf.r.wrap.b32 	%r1736, %r1343, %r1342, 8;
	shf.r.wrap.b32 	%r1737, %r1342, %r1343, 8;
	mov.b64 	%rd2417, {%r1737, %r1736};
	shr.u64 	%rd2418, %rd1828, 7;
	xor.b64  	%rd2419, %rd2416, %rd2418;
	xor.b64  	%rd2420, %rd2419, %rd2417;
	add.s64 	%rd2421, %rd2332, %rd1815;
	add.s64 	%rd2422, %rd2421, %rd2415;
	add.s64 	%rd2423, %rd2422, %rd2420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1738,%dummy}, %rd2410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1739}, %rd2410;
	}
	shf.r.wrap.b32 	%r1740, %r1739, %r1738, 19;
	shf.r.wrap.b32 	%r1741, %r1738, %r1739, 19;
	mov.b64 	%rd2424, {%r1741, %r1740};
	shf.l.wrap.b32 	%r1742, %r1738, %r1739, 3;
	shf.l.wrap.b32 	%r1743, %r1739, %r1738, 3;
	mov.b64 	%rd2425, {%r1743, %r1742};
	shr.u64 	%rd2426, %rd2410, 6;
	xor.b64  	%rd2427, %rd2424, %rd2426;
	xor.b64  	%rd2428, %rd2427, %rd2425;
	shf.r.wrap.b32 	%r1744, %r1353, %r1352, 1;
	shf.r.wrap.b32 	%r1745, %r1352, %r1353, 1;
	mov.b64 	%rd2429, {%r1745, %r1744};
	shf.r.wrap.b32 	%r1746, %r1353, %r1352, 8;
	shf.r.wrap.b32 	%r1747, %r1352, %r1353, 8;
	mov.b64 	%rd2430, {%r1747, %r1746};
	shr.u64 	%rd2431, %rd1841, 7;
	xor.b64  	%rd2432, %rd2429, %rd2431;
	xor.b64  	%rd2433, %rd2432, %rd2430;
	add.s64 	%rd2434, %rd2345, %rd1828;
	add.s64 	%rd2435, %rd2434, %rd2428;
	add.s64 	%rd2436, %rd2435, %rd2433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1748,%dummy}, %rd2423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1749}, %rd2423;
	}
	shf.r.wrap.b32 	%r1750, %r1749, %r1748, 19;
	shf.r.wrap.b32 	%r1751, %r1748, %r1749, 19;
	mov.b64 	%rd2437, {%r1751, %r1750};
	shf.l.wrap.b32 	%r1752, %r1748, %r1749, 3;
	shf.l.wrap.b32 	%r1753, %r1749, %r1748, 3;
	mov.b64 	%rd2438, {%r1753, %r1752};
	shr.u64 	%rd2439, %rd2423, 6;
	xor.b64  	%rd2440, %rd2437, %rd2439;
	xor.b64  	%rd2441, %rd2440, %rd2438;
	shf.r.wrap.b32 	%r1754, %r1619, %r1618, 1;
	shf.r.wrap.b32 	%r1755, %r1618, %r1619, 1;
	mov.b64 	%rd2442, {%r1755, %r1754};
	shf.r.wrap.b32 	%r1756, %r1619, %r1618, 8;
	shf.r.wrap.b32 	%r1757, %r1618, %r1619, 8;
	mov.b64 	%rd2443, {%r1757, %r1756};
	shr.u64 	%rd2444, %rd1854, 7;
	xor.b64  	%rd2445, %rd2442, %rd2444;
	xor.b64  	%rd2446, %rd2445, %rd2443;
	add.s64 	%rd2447, %rd2358, %rd1841;
	add.s64 	%rd2448, %rd2447, %rd2441;
	add.s64 	%rd2449, %rd2448, %rd2446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd2436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1759}, %rd2436;
	}
	shf.r.wrap.b32 	%r1760, %r1759, %r1758, 19;
	shf.r.wrap.b32 	%r1761, %r1758, %r1759, 19;
	mov.b64 	%rd2450, {%r1761, %r1760};
	shf.l.wrap.b32 	%r1762, %r1758, %r1759, 3;
	shf.l.wrap.b32 	%r1763, %r1759, %r1758, 3;
	mov.b64 	%rd2451, {%r1763, %r1762};
	shr.u64 	%rd2452, %rd2436, 6;
	xor.b64  	%rd2453, %rd2450, %rd2452;
	xor.b64  	%rd2454, %rd2453, %rd2451;
	shf.r.wrap.b32 	%r1764, %r1629, %r1628, 1;
	shf.r.wrap.b32 	%r1765, %r1628, %r1629, 1;
	mov.b64 	%rd2455, {%r1765, %r1764};
	shf.r.wrap.b32 	%r1766, %r1629, %r1628, 8;
	shf.r.wrap.b32 	%r1767, %r1628, %r1629, 8;
	mov.b64 	%rd2456, {%r1767, %r1766};
	shr.u64 	%rd2457, %rd1867, 7;
	xor.b64  	%rd2458, %rd2455, %rd2457;
	xor.b64  	%rd2459, %rd2458, %rd2456;
	add.s64 	%rd2460, %rd2371, %rd1854;
	add.s64 	%rd2461, %rd2460, %rd2454;
	add.s64 	%rd2462, %rd2461, %rd2459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2449;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 19;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 19;
	mov.b64 	%rd2463, {%r1771, %r1770};
	shf.l.wrap.b32 	%r1772, %r1768, %r1769, 3;
	shf.l.wrap.b32 	%r1773, %r1769, %r1768, 3;
	mov.b64 	%rd2464, {%r1773, %r1772};
	shr.u64 	%rd2465, %rd2449, 6;
	xor.b64  	%rd2466, %rd2463, %rd2465;
	xor.b64  	%rd2467, %rd2466, %rd2464;
	shf.r.wrap.b32 	%r1774, %r1639, %r1638, 1;
	shf.r.wrap.b32 	%r1775, %r1638, %r1639, 1;
	mov.b64 	%rd2468, {%r1775, %r1774};
	shf.r.wrap.b32 	%r1776, %r1639, %r1638, 8;
	shf.r.wrap.b32 	%r1777, %r1638, %r1639, 8;
	mov.b64 	%rd2469, {%r1777, %r1776};
	shr.u64 	%rd2470, %rd2280, 7;
	xor.b64  	%rd2471, %rd2468, %rd2470;
	xor.b64  	%rd2472, %rd2471, %rd2469;
	add.s64 	%rd2473, %rd2384, %rd1867;
	add.s64 	%rd2474, %rd2473, %rd2467;
	add.s64 	%rd2475, %rd2474, %rd2472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1778,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1779}, %rd2256;
	}
	shf.r.wrap.b32 	%r1780, %r1779, %r1778, 14;
	shf.r.wrap.b32 	%r1781, %r1778, %r1779, 14;
	mov.b64 	%rd2476, {%r1781, %r1780};
	shf.r.wrap.b32 	%r1782, %r1779, %r1778, 18;
	shf.r.wrap.b32 	%r1783, %r1778, %r1779, 18;
	mov.b64 	%rd2477, {%r1783, %r1782};
	xor.b64  	%rd2478, %rd2477, %rd2476;
	shf.l.wrap.b32 	%r1784, %r1778, %r1779, 23;
	shf.l.wrap.b32 	%r1785, %r1779, %r1778, 23;
	mov.b64 	%rd2479, {%r1785, %r1784};
	xor.b64  	%rd2480, %rd2478, %rd2479;
	xor.b64  	%rd2481, %rd2231, %rd2206;
	and.b64  	%rd2482, %rd2481, %rd2256;
	xor.b64  	%rd2483, %rd2482, %rd2206;
	add.s64 	%rd2484, %rd2483, %rd2181;
	add.s64 	%rd2485, %rd2484, %rd2280;
	ld.const.u64 	%rd2486, [k_sha512+512];
	add.s64 	%rd2487, %rd2485, %rd2486;
	add.s64 	%rd2488, %rd2487, %rd2480;
	add.s64 	%rd2489, %rd2488, %rd2192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1786,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1787}, %rd2267;
	}
	shf.r.wrap.b32 	%r1788, %r1787, %r1786, 28;
	shf.r.wrap.b32 	%r1789, %r1786, %r1787, 28;
	mov.b64 	%rd2490, {%r1789, %r1788};
	shf.l.wrap.b32 	%r1790, %r1786, %r1787, 30;
	shf.l.wrap.b32 	%r1791, %r1787, %r1786, 30;
	mov.b64 	%rd2491, {%r1791, %r1790};
	xor.b64  	%rd2492, %rd2491, %rd2490;
	shf.l.wrap.b32 	%r1792, %r1786, %r1787, 25;
	shf.l.wrap.b32 	%r1793, %r1787, %r1786, 25;
	mov.b64 	%rd2493, {%r1793, %r1792};
	xor.b64  	%rd2494, %rd2492, %rd2493;
	xor.b64  	%rd2495, %rd2267, %rd2217;
	xor.b64  	%rd2496, %rd2267, %rd2242;
	and.b64  	%rd2497, %rd2496, %rd2495;
	xor.b64  	%rd2498, %rd2497, %rd2267;
	add.s64 	%rd2499, %rd2488, %rd2498;
	add.s64 	%rd2500, %rd2499, %rd2494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1794,%dummy}, %rd2489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1795}, %rd2489;
	}
	shf.r.wrap.b32 	%r1796, %r1795, %r1794, 14;
	shf.r.wrap.b32 	%r1797, %r1794, %r1795, 14;
	mov.b64 	%rd2501, {%r1797, %r1796};
	shf.r.wrap.b32 	%r1798, %r1795, %r1794, 18;
	shf.r.wrap.b32 	%r1799, %r1794, %r1795, 18;
	mov.b64 	%rd2502, {%r1799, %r1798};
	xor.b64  	%rd2503, %rd2502, %rd2501;
	shf.l.wrap.b32 	%r1800, %r1794, %r1795, 23;
	shf.l.wrap.b32 	%r1801, %r1795, %r1794, 23;
	mov.b64 	%rd2504, {%r1801, %r1800};
	xor.b64  	%rd2505, %rd2503, %rd2504;
	xor.b64  	%rd2506, %rd2256, %rd2231;
	and.b64  	%rd2507, %rd2489, %rd2506;
	xor.b64  	%rd2508, %rd2507, %rd2231;
	add.s64 	%rd2509, %rd2293, %rd2206;
	ld.const.u64 	%rd2510, [k_sha512+520];
	add.s64 	%rd2511, %rd2509, %rd2510;
	add.s64 	%rd2512, %rd2511, %rd2508;
	add.s64 	%rd2513, %rd2512, %rd2505;
	add.s64 	%rd2514, %rd2513, %rd2217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1802,%dummy}, %rd2500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1803}, %rd2500;
	}
	shf.r.wrap.b32 	%r1804, %r1803, %r1802, 28;
	shf.r.wrap.b32 	%r1805, %r1802, %r1803, 28;
	mov.b64 	%rd2515, {%r1805, %r1804};
	shf.l.wrap.b32 	%r1806, %r1802, %r1803, 30;
	shf.l.wrap.b32 	%r1807, %r1803, %r1802, 30;
	mov.b64 	%rd2516, {%r1807, %r1806};
	xor.b64  	%rd2517, %rd2516, %rd2515;
	shf.l.wrap.b32 	%r1808, %r1802, %r1803, 25;
	shf.l.wrap.b32 	%r1809, %r1803, %r1802, 25;
	mov.b64 	%rd2518, {%r1809, %r1808};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	xor.b64  	%rd2520, %rd2500, %rd2242;
	xor.b64  	%rd2521, %rd2500, %rd2267;
	and.b64  	%rd2522, %rd2521, %rd2520;
	xor.b64  	%rd2523, %rd2522, %rd2500;
	add.s64 	%rd2524, %rd2513, %rd2523;
	add.s64 	%rd2525, %rd2524, %rd2519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1810,%dummy}, %rd2514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1811}, %rd2514;
	}
	shf.r.wrap.b32 	%r1812, %r1811, %r1810, 14;
	shf.r.wrap.b32 	%r1813, %r1810, %r1811, 14;
	mov.b64 	%rd2526, {%r1813, %r1812};
	shf.r.wrap.b32 	%r1814, %r1811, %r1810, 18;
	shf.r.wrap.b32 	%r1815, %r1810, %r1811, 18;
	mov.b64 	%rd2527, {%r1815, %r1814};
	xor.b64  	%rd2528, %rd2527, %rd2526;
	shf.l.wrap.b32 	%r1816, %r1810, %r1811, 23;
	shf.l.wrap.b32 	%r1817, %r1811, %r1810, 23;
	mov.b64 	%rd2529, {%r1817, %r1816};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	xor.b64  	%rd2531, %rd2489, %rd2256;
	and.b64  	%rd2532, %rd2514, %rd2531;
	xor.b64  	%rd2533, %rd2532, %rd2256;
	add.s64 	%rd2534, %rd2306, %rd2231;
	ld.const.u64 	%rd2535, [k_sha512+528];
	add.s64 	%rd2536, %rd2534, %rd2535;
	add.s64 	%rd2537, %rd2536, %rd2533;
	add.s64 	%rd2538, %rd2537, %rd2530;
	add.s64 	%rd2539, %rd2538, %rd2242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1818,%dummy}, %rd2525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1819}, %rd2525;
	}
	shf.r.wrap.b32 	%r1820, %r1819, %r1818, 28;
	shf.r.wrap.b32 	%r1821, %r1818, %r1819, 28;
	mov.b64 	%rd2540, {%r1821, %r1820};
	shf.l.wrap.b32 	%r1822, %r1818, %r1819, 30;
	shf.l.wrap.b32 	%r1823, %r1819, %r1818, 30;
	mov.b64 	%rd2541, {%r1823, %r1822};
	xor.b64  	%rd2542, %rd2541, %rd2540;
	shf.l.wrap.b32 	%r1824, %r1818, %r1819, 25;
	shf.l.wrap.b32 	%r1825, %r1819, %r1818, 25;
	mov.b64 	%rd2543, {%r1825, %r1824};
	xor.b64  	%rd2544, %rd2542, %rd2543;
	xor.b64  	%rd2545, %rd2525, %rd2267;
	xor.b64  	%rd2546, %rd2525, %rd2500;
	and.b64  	%rd2547, %rd2546, %rd2545;
	xor.b64  	%rd2548, %rd2547, %rd2525;
	add.s64 	%rd2549, %rd2538, %rd2548;
	add.s64 	%rd2550, %rd2549, %rd2544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1826,%dummy}, %rd2539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1827}, %rd2539;
	}
	shf.r.wrap.b32 	%r1828, %r1827, %r1826, 14;
	shf.r.wrap.b32 	%r1829, %r1826, %r1827, 14;
	mov.b64 	%rd2551, {%r1829, %r1828};
	shf.r.wrap.b32 	%r1830, %r1827, %r1826, 18;
	shf.r.wrap.b32 	%r1831, %r1826, %r1827, 18;
	mov.b64 	%rd2552, {%r1831, %r1830};
	xor.b64  	%rd2553, %rd2552, %rd2551;
	shf.l.wrap.b32 	%r1832, %r1826, %r1827, 23;
	shf.l.wrap.b32 	%r1833, %r1827, %r1826, 23;
	mov.b64 	%rd2554, {%r1833, %r1832};
	xor.b64  	%rd2555, %rd2553, %rd2554;
	xor.b64  	%rd2556, %rd2514, %rd2489;
	and.b64  	%rd2557, %rd2539, %rd2556;
	xor.b64  	%rd2558, %rd2557, %rd2489;
	add.s64 	%rd2559, %rd2319, %rd2256;
	ld.const.u64 	%rd2560, [k_sha512+536];
	add.s64 	%rd2561, %rd2559, %rd2560;
	add.s64 	%rd2562, %rd2561, %rd2558;
	add.s64 	%rd2563, %rd2562, %rd2555;
	add.s64 	%rd2564, %rd2563, %rd2267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1834,%dummy}, %rd2550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1835}, %rd2550;
	}
	shf.r.wrap.b32 	%r1836, %r1835, %r1834, 28;
	shf.r.wrap.b32 	%r1837, %r1834, %r1835, 28;
	mov.b64 	%rd2565, {%r1837, %r1836};
	shf.l.wrap.b32 	%r1838, %r1834, %r1835, 30;
	shf.l.wrap.b32 	%r1839, %r1835, %r1834, 30;
	mov.b64 	%rd2566, {%r1839, %r1838};
	xor.b64  	%rd2567, %rd2566, %rd2565;
	shf.l.wrap.b32 	%r1840, %r1834, %r1835, 25;
	shf.l.wrap.b32 	%r1841, %r1835, %r1834, 25;
	mov.b64 	%rd2568, {%r1841, %r1840};
	xor.b64  	%rd2569, %rd2567, %rd2568;
	xor.b64  	%rd2570, %rd2550, %rd2500;
	xor.b64  	%rd2571, %rd2550, %rd2525;
	and.b64  	%rd2572, %rd2571, %rd2570;
	xor.b64  	%rd2573, %rd2572, %rd2550;
	add.s64 	%rd2574, %rd2563, %rd2573;
	add.s64 	%rd2575, %rd2574, %rd2569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1842,%dummy}, %rd2564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1843}, %rd2564;
	}
	shf.r.wrap.b32 	%r1844, %r1843, %r1842, 14;
	shf.r.wrap.b32 	%r1845, %r1842, %r1843, 14;
	mov.b64 	%rd2576, {%r1845, %r1844};
	shf.r.wrap.b32 	%r1846, %r1843, %r1842, 18;
	shf.r.wrap.b32 	%r1847, %r1842, %r1843, 18;
	mov.b64 	%rd2577, {%r1847, %r1846};
	xor.b64  	%rd2578, %rd2577, %rd2576;
	shf.l.wrap.b32 	%r1848, %r1842, %r1843, 23;
	shf.l.wrap.b32 	%r1849, %r1843, %r1842, 23;
	mov.b64 	%rd2579, {%r1849, %r1848};
	xor.b64  	%rd2580, %rd2578, %rd2579;
	xor.b64  	%rd2581, %rd2539, %rd2514;
	and.b64  	%rd2582, %rd2564, %rd2581;
	xor.b64  	%rd2583, %rd2582, %rd2514;
	add.s64 	%rd2584, %rd2489, %rd2332;
	ld.const.u64 	%rd2585, [k_sha512+544];
	add.s64 	%rd2586, %rd2584, %rd2585;
	add.s64 	%rd2587, %rd2586, %rd2583;
	add.s64 	%rd2588, %rd2587, %rd2580;
	add.s64 	%rd2589, %rd2588, %rd2500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1850,%dummy}, %rd2575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1851}, %rd2575;
	}
	shf.r.wrap.b32 	%r1852, %r1851, %r1850, 28;
	shf.r.wrap.b32 	%r1853, %r1850, %r1851, 28;
	mov.b64 	%rd2590, {%r1853, %r1852};
	shf.l.wrap.b32 	%r1854, %r1850, %r1851, 30;
	shf.l.wrap.b32 	%r1855, %r1851, %r1850, 30;
	mov.b64 	%rd2591, {%r1855, %r1854};
	xor.b64  	%rd2592, %rd2591, %rd2590;
	shf.l.wrap.b32 	%r1856, %r1850, %r1851, 25;
	shf.l.wrap.b32 	%r1857, %r1851, %r1850, 25;
	mov.b64 	%rd2593, {%r1857, %r1856};
	xor.b64  	%rd2594, %rd2592, %rd2593;
	xor.b64  	%rd2595, %rd2575, %rd2525;
	xor.b64  	%rd2596, %rd2575, %rd2550;
	and.b64  	%rd2597, %rd2596, %rd2595;
	xor.b64  	%rd2598, %rd2597, %rd2575;
	add.s64 	%rd2599, %rd2588, %rd2598;
	add.s64 	%rd2600, %rd2599, %rd2594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1858,%dummy}, %rd2589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1859}, %rd2589;
	}
	shf.r.wrap.b32 	%r1860, %r1859, %r1858, 14;
	shf.r.wrap.b32 	%r1861, %r1858, %r1859, 14;
	mov.b64 	%rd2601, {%r1861, %r1860};
	shf.r.wrap.b32 	%r1862, %r1859, %r1858, 18;
	shf.r.wrap.b32 	%r1863, %r1858, %r1859, 18;
	mov.b64 	%rd2602, {%r1863, %r1862};
	xor.b64  	%rd2603, %rd2602, %rd2601;
	shf.l.wrap.b32 	%r1864, %r1858, %r1859, 23;
	shf.l.wrap.b32 	%r1865, %r1859, %r1858, 23;
	mov.b64 	%rd2604, {%r1865, %r1864};
	xor.b64  	%rd2605, %rd2603, %rd2604;
	xor.b64  	%rd2606, %rd2564, %rd2539;
	and.b64  	%rd2607, %rd2589, %rd2606;
	xor.b64  	%rd2608, %rd2607, %rd2539;
	add.s64 	%rd2609, %rd2514, %rd2345;
	ld.const.u64 	%rd2610, [k_sha512+552];
	add.s64 	%rd2611, %rd2609, %rd2610;
	add.s64 	%rd2612, %rd2611, %rd2608;
	add.s64 	%rd2613, %rd2612, %rd2605;
	add.s64 	%rd2614, %rd2613, %rd2525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1866,%dummy}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1867}, %rd2600;
	}
	shf.r.wrap.b32 	%r1868, %r1867, %r1866, 28;
	shf.r.wrap.b32 	%r1869, %r1866, %r1867, 28;
	mov.b64 	%rd2615, {%r1869, %r1868};
	shf.l.wrap.b32 	%r1870, %r1866, %r1867, 30;
	shf.l.wrap.b32 	%r1871, %r1867, %r1866, 30;
	mov.b64 	%rd2616, {%r1871, %r1870};
	xor.b64  	%rd2617, %rd2616, %rd2615;
	shf.l.wrap.b32 	%r1872, %r1866, %r1867, 25;
	shf.l.wrap.b32 	%r1873, %r1867, %r1866, 25;
	mov.b64 	%rd2618, {%r1873, %r1872};
	xor.b64  	%rd2619, %rd2617, %rd2618;
	xor.b64  	%rd2620, %rd2600, %rd2550;
	xor.b64  	%rd2621, %rd2600, %rd2575;
	and.b64  	%rd2622, %rd2621, %rd2620;
	xor.b64  	%rd2623, %rd2622, %rd2600;
	add.s64 	%rd2624, %rd2613, %rd2623;
	add.s64 	%rd2625, %rd2624, %rd2619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1874,%dummy}, %rd2614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1875}, %rd2614;
	}
	shf.r.wrap.b32 	%r1876, %r1875, %r1874, 14;
	shf.r.wrap.b32 	%r1877, %r1874, %r1875, 14;
	mov.b64 	%rd2626, {%r1877, %r1876};
	shf.r.wrap.b32 	%r1878, %r1875, %r1874, 18;
	shf.r.wrap.b32 	%r1879, %r1874, %r1875, 18;
	mov.b64 	%rd2627, {%r1879, %r1878};
	xor.b64  	%rd2628, %rd2627, %rd2626;
	shf.l.wrap.b32 	%r1880, %r1874, %r1875, 23;
	shf.l.wrap.b32 	%r1881, %r1875, %r1874, 23;
	mov.b64 	%rd2629, {%r1881, %r1880};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	xor.b64  	%rd2631, %rd2589, %rd2564;
	and.b64  	%rd2632, %rd2614, %rd2631;
	xor.b64  	%rd2633, %rd2632, %rd2564;
	add.s64 	%rd2634, %rd2539, %rd2358;
	ld.const.u64 	%rd2635, [k_sha512+560];
	add.s64 	%rd2636, %rd2634, %rd2635;
	add.s64 	%rd2637, %rd2636, %rd2633;
	add.s64 	%rd2638, %rd2637, %rd2630;
	add.s64 	%rd2639, %rd2638, %rd2550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1882,%dummy}, %rd2625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1883}, %rd2625;
	}
	shf.r.wrap.b32 	%r1884, %r1883, %r1882, 28;
	shf.r.wrap.b32 	%r1885, %r1882, %r1883, 28;
	mov.b64 	%rd2640, {%r1885, %r1884};
	shf.l.wrap.b32 	%r1886, %r1882, %r1883, 30;
	shf.l.wrap.b32 	%r1887, %r1883, %r1882, 30;
	mov.b64 	%rd2641, {%r1887, %r1886};
	xor.b64  	%rd2642, %rd2641, %rd2640;
	shf.l.wrap.b32 	%r1888, %r1882, %r1883, 25;
	shf.l.wrap.b32 	%r1889, %r1883, %r1882, 25;
	mov.b64 	%rd2643, {%r1889, %r1888};
	xor.b64  	%rd2644, %rd2642, %rd2643;
	xor.b64  	%rd2645, %rd2625, %rd2575;
	xor.b64  	%rd2646, %rd2625, %rd2600;
	and.b64  	%rd2647, %rd2646, %rd2645;
	xor.b64  	%rd2648, %rd2647, %rd2625;
	add.s64 	%rd2649, %rd2638, %rd2648;
	add.s64 	%rd2650, %rd2649, %rd2644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1890,%dummy}, %rd2639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1891}, %rd2639;
	}
	shf.r.wrap.b32 	%r1892, %r1891, %r1890, 14;
	shf.r.wrap.b32 	%r1893, %r1890, %r1891, 14;
	mov.b64 	%rd2651, {%r1893, %r1892};
	shf.r.wrap.b32 	%r1894, %r1891, %r1890, 18;
	shf.r.wrap.b32 	%r1895, %r1890, %r1891, 18;
	mov.b64 	%rd2652, {%r1895, %r1894};
	xor.b64  	%rd2653, %rd2652, %rd2651;
	shf.l.wrap.b32 	%r1896, %r1890, %r1891, 23;
	shf.l.wrap.b32 	%r1897, %r1891, %r1890, 23;
	mov.b64 	%rd2654, {%r1897, %r1896};
	xor.b64  	%rd2655, %rd2653, %rd2654;
	xor.b64  	%rd2656, %rd2614, %rd2589;
	and.b64  	%rd2657, %rd2639, %rd2656;
	xor.b64  	%rd2658, %rd2657, %rd2589;
	add.s64 	%rd2659, %rd2564, %rd2371;
	ld.const.u64 	%rd2660, [k_sha512+568];
	add.s64 	%rd2661, %rd2659, %rd2660;
	add.s64 	%rd2662, %rd2661, %rd2658;
	add.s64 	%rd2663, %rd2662, %rd2655;
	add.s64 	%rd2664, %rd2663, %rd2575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1898,%dummy}, %rd2650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1899}, %rd2650;
	}
	shf.r.wrap.b32 	%r1900, %r1899, %r1898, 28;
	shf.r.wrap.b32 	%r1901, %r1898, %r1899, 28;
	mov.b64 	%rd2665, {%r1901, %r1900};
	shf.l.wrap.b32 	%r1902, %r1898, %r1899, 30;
	shf.l.wrap.b32 	%r1903, %r1899, %r1898, 30;
	mov.b64 	%rd2666, {%r1903, %r1902};
	xor.b64  	%rd2667, %rd2666, %rd2665;
	shf.l.wrap.b32 	%r1904, %r1898, %r1899, 25;
	shf.l.wrap.b32 	%r1905, %r1899, %r1898, 25;
	mov.b64 	%rd2668, {%r1905, %r1904};
	xor.b64  	%rd2669, %rd2667, %rd2668;
	xor.b64  	%rd2670, %rd2650, %rd2600;
	xor.b64  	%rd2671, %rd2650, %rd2625;
	and.b64  	%rd2672, %rd2671, %rd2670;
	xor.b64  	%rd2673, %rd2672, %rd2650;
	add.s64 	%rd2674, %rd2663, %rd2673;
	add.s64 	%rd2675, %rd2674, %rd2669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1906,%dummy}, %rd2664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1907}, %rd2664;
	}
	shf.r.wrap.b32 	%r1908, %r1907, %r1906, 14;
	shf.r.wrap.b32 	%r1909, %r1906, %r1907, 14;
	mov.b64 	%rd2676, {%r1909, %r1908};
	shf.r.wrap.b32 	%r1910, %r1907, %r1906, 18;
	shf.r.wrap.b32 	%r1911, %r1906, %r1907, 18;
	mov.b64 	%rd2677, {%r1911, %r1910};
	xor.b64  	%rd2678, %rd2677, %rd2676;
	shf.l.wrap.b32 	%r1912, %r1906, %r1907, 23;
	shf.l.wrap.b32 	%r1913, %r1907, %r1906, 23;
	mov.b64 	%rd2679, {%r1913, %r1912};
	xor.b64  	%rd2680, %rd2678, %rd2679;
	xor.b64  	%rd2681, %rd2639, %rd2614;
	and.b64  	%rd2682, %rd2664, %rd2681;
	xor.b64  	%rd2683, %rd2682, %rd2614;
	add.s64 	%rd2684, %rd2589, %rd2384;
	ld.const.u64 	%rd2685, [k_sha512+576];
	add.s64 	%rd2686, %rd2684, %rd2685;
	add.s64 	%rd2687, %rd2686, %rd2683;
	add.s64 	%rd2688, %rd2687, %rd2680;
	add.s64 	%rd2689, %rd2688, %rd2600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1914,%dummy}, %rd2675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1915}, %rd2675;
	}
	shf.r.wrap.b32 	%r1916, %r1915, %r1914, 28;
	shf.r.wrap.b32 	%r1917, %r1914, %r1915, 28;
	mov.b64 	%rd2690, {%r1917, %r1916};
	shf.l.wrap.b32 	%r1918, %r1914, %r1915, 30;
	shf.l.wrap.b32 	%r1919, %r1915, %r1914, 30;
	mov.b64 	%rd2691, {%r1919, %r1918};
	xor.b64  	%rd2692, %rd2691, %rd2690;
	shf.l.wrap.b32 	%r1920, %r1914, %r1915, 25;
	shf.l.wrap.b32 	%r1921, %r1915, %r1914, 25;
	mov.b64 	%rd2693, {%r1921, %r1920};
	xor.b64  	%rd2694, %rd2692, %rd2693;
	xor.b64  	%rd2695, %rd2675, %rd2625;
	xor.b64  	%rd2696, %rd2675, %rd2650;
	and.b64  	%rd2697, %rd2696, %rd2695;
	xor.b64  	%rd2698, %rd2697, %rd2675;
	add.s64 	%rd2699, %rd2688, %rd2698;
	add.s64 	%rd2700, %rd2699, %rd2694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1922,%dummy}, %rd2689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1923}, %rd2689;
	}
	shf.r.wrap.b32 	%r1924, %r1923, %r1922, 14;
	shf.r.wrap.b32 	%r1925, %r1922, %r1923, 14;
	mov.b64 	%rd2701, {%r1925, %r1924};
	shf.r.wrap.b32 	%r1926, %r1923, %r1922, 18;
	shf.r.wrap.b32 	%r1927, %r1922, %r1923, 18;
	mov.b64 	%rd2702, {%r1927, %r1926};
	xor.b64  	%rd2703, %rd2702, %rd2701;
	shf.l.wrap.b32 	%r1928, %r1922, %r1923, 23;
	shf.l.wrap.b32 	%r1929, %r1923, %r1922, 23;
	mov.b64 	%rd2704, {%r1929, %r1928};
	xor.b64  	%rd2705, %rd2703, %rd2704;
	xor.b64  	%rd2706, %rd2664, %rd2639;
	and.b64  	%rd2707, %rd2689, %rd2706;
	xor.b64  	%rd2708, %rd2707, %rd2639;
	add.s64 	%rd2709, %rd2614, %rd2397;
	ld.const.u64 	%rd2710, [k_sha512+584];
	add.s64 	%rd2711, %rd2709, %rd2710;
	add.s64 	%rd2712, %rd2711, %rd2708;
	add.s64 	%rd2713, %rd2712, %rd2705;
	add.s64 	%rd2714, %rd2713, %rd2625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd2700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1931}, %rd2700;
	}
	shf.r.wrap.b32 	%r1932, %r1931, %r1930, 28;
	shf.r.wrap.b32 	%r1933, %r1930, %r1931, 28;
	mov.b64 	%rd2715, {%r1933, %r1932};
	shf.l.wrap.b32 	%r1934, %r1930, %r1931, 30;
	shf.l.wrap.b32 	%r1935, %r1931, %r1930, 30;
	mov.b64 	%rd2716, {%r1935, %r1934};
	xor.b64  	%rd2717, %rd2716, %rd2715;
	shf.l.wrap.b32 	%r1936, %r1930, %r1931, 25;
	shf.l.wrap.b32 	%r1937, %r1931, %r1930, 25;
	mov.b64 	%rd2718, {%r1937, %r1936};
	xor.b64  	%rd2719, %rd2717, %rd2718;
	xor.b64  	%rd2720, %rd2700, %rd2650;
	xor.b64  	%rd2721, %rd2700, %rd2675;
	and.b64  	%rd2722, %rd2721, %rd2720;
	xor.b64  	%rd2723, %rd2722, %rd2700;
	add.s64 	%rd2724, %rd2713, %rd2723;
	add.s64 	%rd2725, %rd2724, %rd2719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1938,%dummy}, %rd2714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1939}, %rd2714;
	}
	shf.r.wrap.b32 	%r1940, %r1939, %r1938, 14;
	shf.r.wrap.b32 	%r1941, %r1938, %r1939, 14;
	mov.b64 	%rd2726, {%r1941, %r1940};
	shf.r.wrap.b32 	%r1942, %r1939, %r1938, 18;
	shf.r.wrap.b32 	%r1943, %r1938, %r1939, 18;
	mov.b64 	%rd2727, {%r1943, %r1942};
	xor.b64  	%rd2728, %rd2727, %rd2726;
	shf.l.wrap.b32 	%r1944, %r1938, %r1939, 23;
	shf.l.wrap.b32 	%r1945, %r1939, %r1938, 23;
	mov.b64 	%rd2729, {%r1945, %r1944};
	xor.b64  	%rd2730, %rd2728, %rd2729;
	xor.b64  	%rd2731, %rd2689, %rd2664;
	and.b64  	%rd2732, %rd2714, %rd2731;
	xor.b64  	%rd2733, %rd2732, %rd2664;
	add.s64 	%rd2734, %rd2639, %rd2410;
	ld.const.u64 	%rd2735, [k_sha512+592];
	add.s64 	%rd2736, %rd2734, %rd2735;
	add.s64 	%rd2737, %rd2736, %rd2733;
	add.s64 	%rd2738, %rd2737, %rd2730;
	add.s64 	%rd2739, %rd2738, %rd2650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1946,%dummy}, %rd2725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1947}, %rd2725;
	}
	shf.r.wrap.b32 	%r1948, %r1947, %r1946, 28;
	shf.r.wrap.b32 	%r1949, %r1946, %r1947, 28;
	mov.b64 	%rd2740, {%r1949, %r1948};
	shf.l.wrap.b32 	%r1950, %r1946, %r1947, 30;
	shf.l.wrap.b32 	%r1951, %r1947, %r1946, 30;
	mov.b64 	%rd2741, {%r1951, %r1950};
	xor.b64  	%rd2742, %rd2741, %rd2740;
	shf.l.wrap.b32 	%r1952, %r1946, %r1947, 25;
	shf.l.wrap.b32 	%r1953, %r1947, %r1946, 25;
	mov.b64 	%rd2743, {%r1953, %r1952};
	xor.b64  	%rd2744, %rd2742, %rd2743;
	xor.b64  	%rd2745, %rd2725, %rd2675;
	xor.b64  	%rd2746, %rd2725, %rd2700;
	and.b64  	%rd2747, %rd2746, %rd2745;
	xor.b64  	%rd2748, %rd2747, %rd2725;
	add.s64 	%rd2749, %rd2738, %rd2748;
	add.s64 	%rd2750, %rd2749, %rd2744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1954,%dummy}, %rd2739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1955}, %rd2739;
	}
	shf.r.wrap.b32 	%r1956, %r1955, %r1954, 14;
	shf.r.wrap.b32 	%r1957, %r1954, %r1955, 14;
	mov.b64 	%rd2751, {%r1957, %r1956};
	shf.r.wrap.b32 	%r1958, %r1955, %r1954, 18;
	shf.r.wrap.b32 	%r1959, %r1954, %r1955, 18;
	mov.b64 	%rd2752, {%r1959, %r1958};
	xor.b64  	%rd2753, %rd2752, %rd2751;
	shf.l.wrap.b32 	%r1960, %r1954, %r1955, 23;
	shf.l.wrap.b32 	%r1961, %r1955, %r1954, 23;
	mov.b64 	%rd2754, {%r1961, %r1960};
	xor.b64  	%rd2755, %rd2753, %rd2754;
	xor.b64  	%rd2756, %rd2714, %rd2689;
	and.b64  	%rd2757, %rd2739, %rd2756;
	xor.b64  	%rd2758, %rd2757, %rd2689;
	add.s64 	%rd2759, %rd2664, %rd2423;
	ld.const.u64 	%rd2760, [k_sha512+600];
	add.s64 	%rd2761, %rd2759, %rd2760;
	add.s64 	%rd2762, %rd2761, %rd2758;
	add.s64 	%rd2763, %rd2762, %rd2755;
	add.s64 	%rd2764, %rd2763, %rd2675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1962,%dummy}, %rd2750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1963}, %rd2750;
	}
	shf.r.wrap.b32 	%r1964, %r1963, %r1962, 28;
	shf.r.wrap.b32 	%r1965, %r1962, %r1963, 28;
	mov.b64 	%rd2765, {%r1965, %r1964};
	shf.l.wrap.b32 	%r1966, %r1962, %r1963, 30;
	shf.l.wrap.b32 	%r1967, %r1963, %r1962, 30;
	mov.b64 	%rd2766, {%r1967, %r1966};
	xor.b64  	%rd2767, %rd2766, %rd2765;
	shf.l.wrap.b32 	%r1968, %r1962, %r1963, 25;
	shf.l.wrap.b32 	%r1969, %r1963, %r1962, 25;
	mov.b64 	%rd2768, {%r1969, %r1968};
	xor.b64  	%rd2769, %rd2767, %rd2768;
	xor.b64  	%rd2770, %rd2750, %rd2700;
	xor.b64  	%rd2771, %rd2750, %rd2725;
	and.b64  	%rd2772, %rd2771, %rd2770;
	xor.b64  	%rd2773, %rd2772, %rd2750;
	add.s64 	%rd2774, %rd2763, %rd2773;
	add.s64 	%rd2775, %rd2774, %rd2769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1970,%dummy}, %rd2764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1971}, %rd2764;
	}
	shf.r.wrap.b32 	%r1972, %r1971, %r1970, 14;
	shf.r.wrap.b32 	%r1973, %r1970, %r1971, 14;
	mov.b64 	%rd2776, {%r1973, %r1972};
	shf.r.wrap.b32 	%r1974, %r1971, %r1970, 18;
	shf.r.wrap.b32 	%r1975, %r1970, %r1971, 18;
	mov.b64 	%rd2777, {%r1975, %r1974};
	xor.b64  	%rd2778, %rd2777, %rd2776;
	shf.l.wrap.b32 	%r1976, %r1970, %r1971, 23;
	shf.l.wrap.b32 	%r1977, %r1971, %r1970, 23;
	mov.b64 	%rd2779, {%r1977, %r1976};
	xor.b64  	%rd2780, %rd2778, %rd2779;
	xor.b64  	%rd2781, %rd2739, %rd2714;
	and.b64  	%rd2782, %rd2764, %rd2781;
	xor.b64  	%rd2783, %rd2782, %rd2714;
	add.s64 	%rd2784, %rd2689, %rd2436;
	ld.const.u64 	%rd2785, [k_sha512+608];
	add.s64 	%rd2786, %rd2784, %rd2785;
	add.s64 	%rd2787, %rd2786, %rd2783;
	add.s64 	%rd2788, %rd2787, %rd2780;
	add.s64 	%rd2789, %rd2788, %rd2700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1978,%dummy}, %rd2775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1979}, %rd2775;
	}
	shf.r.wrap.b32 	%r1980, %r1979, %r1978, 28;
	shf.r.wrap.b32 	%r1981, %r1978, %r1979, 28;
	mov.b64 	%rd2790, {%r1981, %r1980};
	shf.l.wrap.b32 	%r1982, %r1978, %r1979, 30;
	shf.l.wrap.b32 	%r1983, %r1979, %r1978, 30;
	mov.b64 	%rd2791, {%r1983, %r1982};
	xor.b64  	%rd2792, %rd2791, %rd2790;
	shf.l.wrap.b32 	%r1984, %r1978, %r1979, 25;
	shf.l.wrap.b32 	%r1985, %r1979, %r1978, 25;
	mov.b64 	%rd2793, {%r1985, %r1984};
	xor.b64  	%rd2794, %rd2792, %rd2793;
	xor.b64  	%rd2795, %rd2775, %rd2725;
	xor.b64  	%rd2796, %rd2775, %rd2750;
	and.b64  	%rd2797, %rd2796, %rd2795;
	xor.b64  	%rd2798, %rd2797, %rd2775;
	add.s64 	%rd2799, %rd2788, %rd2798;
	add.s64 	%rd2800, %rd2799, %rd2794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1986,%dummy}, %rd2789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1987}, %rd2789;
	}
	shf.r.wrap.b32 	%r1988, %r1987, %r1986, 14;
	shf.r.wrap.b32 	%r1989, %r1986, %r1987, 14;
	mov.b64 	%rd2801, {%r1989, %r1988};
	shf.r.wrap.b32 	%r1990, %r1987, %r1986, 18;
	shf.r.wrap.b32 	%r1991, %r1986, %r1987, 18;
	mov.b64 	%rd2802, {%r1991, %r1990};
	xor.b64  	%rd2803, %rd2802, %rd2801;
	shf.l.wrap.b32 	%r1992, %r1986, %r1987, 23;
	shf.l.wrap.b32 	%r1993, %r1987, %r1986, 23;
	mov.b64 	%rd2804, {%r1993, %r1992};
	xor.b64  	%rd2805, %rd2803, %rd2804;
	xor.b64  	%rd2806, %rd2764, %rd2739;
	and.b64  	%rd2807, %rd2789, %rd2806;
	xor.b64  	%rd2808, %rd2807, %rd2739;
	add.s64 	%rd2809, %rd2714, %rd2449;
	ld.const.u64 	%rd2810, [k_sha512+616];
	add.s64 	%rd2811, %rd2809, %rd2810;
	add.s64 	%rd2812, %rd2811, %rd2808;
	add.s64 	%rd2813, %rd2812, %rd2805;
	add.s64 	%rd2814, %rd2813, %rd2725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd2800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1995}, %rd2800;
	}
	shf.r.wrap.b32 	%r1996, %r1995, %r1994, 28;
	shf.r.wrap.b32 	%r1997, %r1994, %r1995, 28;
	mov.b64 	%rd2815, {%r1997, %r1996};
	shf.l.wrap.b32 	%r1998, %r1994, %r1995, 30;
	shf.l.wrap.b32 	%r1999, %r1995, %r1994, 30;
	mov.b64 	%rd2816, {%r1999, %r1998};
	xor.b64  	%rd2817, %rd2816, %rd2815;
	shf.l.wrap.b32 	%r2000, %r1994, %r1995, 25;
	shf.l.wrap.b32 	%r2001, %r1995, %r1994, 25;
	mov.b64 	%rd2818, {%r2001, %r2000};
	xor.b64  	%rd2819, %rd2817, %rd2818;
	xor.b64  	%rd2820, %rd2800, %rd2750;
	xor.b64  	%rd2821, %rd2800, %rd2775;
	and.b64  	%rd2822, %rd2821, %rd2820;
	xor.b64  	%rd2823, %rd2822, %rd2800;
	add.s64 	%rd2824, %rd2813, %rd2823;
	add.s64 	%rd2825, %rd2824, %rd2819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd2814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2003}, %rd2814;
	}
	shf.r.wrap.b32 	%r2004, %r2003, %r2002, 14;
	shf.r.wrap.b32 	%r2005, %r2002, %r2003, 14;
	mov.b64 	%rd2826, {%r2005, %r2004};
	shf.r.wrap.b32 	%r2006, %r2003, %r2002, 18;
	shf.r.wrap.b32 	%r2007, %r2002, %r2003, 18;
	mov.b64 	%rd2827, {%r2007, %r2006};
	xor.b64  	%rd2828, %rd2827, %rd2826;
	shf.l.wrap.b32 	%r2008, %r2002, %r2003, 23;
	shf.l.wrap.b32 	%r2009, %r2003, %r2002, 23;
	mov.b64 	%rd2829, {%r2009, %r2008};
	xor.b64  	%rd2830, %rd2828, %rd2829;
	xor.b64  	%rd2831, %rd2789, %rd2764;
	and.b64  	%rd2832, %rd2814, %rd2831;
	xor.b64  	%rd2833, %rd2832, %rd2764;
	add.s64 	%rd2834, %rd2739, %rd2462;
	ld.const.u64 	%rd2835, [k_sha512+624];
	add.s64 	%rd2836, %rd2834, %rd2835;
	add.s64 	%rd2837, %rd2836, %rd2833;
	add.s64 	%rd2838, %rd2837, %rd2830;
	add.s64 	%rd2839, %rd2838, %rd2750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd2825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2011}, %rd2825;
	}
	shf.r.wrap.b32 	%r2012, %r2011, %r2010, 28;
	shf.r.wrap.b32 	%r2013, %r2010, %r2011, 28;
	mov.b64 	%rd2840, {%r2013, %r2012};
	shf.l.wrap.b32 	%r2014, %r2010, %r2011, 30;
	shf.l.wrap.b32 	%r2015, %r2011, %r2010, 30;
	mov.b64 	%rd2841, {%r2015, %r2014};
	xor.b64  	%rd2842, %rd2841, %rd2840;
	shf.l.wrap.b32 	%r2016, %r2010, %r2011, 25;
	shf.l.wrap.b32 	%r2017, %r2011, %r2010, 25;
	mov.b64 	%rd2843, {%r2017, %r2016};
	xor.b64  	%rd2844, %rd2842, %rd2843;
	xor.b64  	%rd2845, %rd2825, %rd2775;
	xor.b64  	%rd2846, %rd2825, %rd2800;
	and.b64  	%rd2847, %rd2846, %rd2845;
	xor.b64  	%rd2848, %rd2847, %rd2825;
	add.s64 	%rd2849, %rd2838, %rd2848;
	add.s64 	%rd2850, %rd2849, %rd2844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2018,%dummy}, %rd2839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2019}, %rd2839;
	}
	shf.r.wrap.b32 	%r2020, %r2019, %r2018, 14;
	shf.r.wrap.b32 	%r2021, %r2018, %r2019, 14;
	mov.b64 	%rd2851, {%r2021, %r2020};
	shf.r.wrap.b32 	%r2022, %r2019, %r2018, 18;
	shf.r.wrap.b32 	%r2023, %r2018, %r2019, 18;
	mov.b64 	%rd2852, {%r2023, %r2022};
	xor.b64  	%rd2853, %rd2852, %rd2851;
	shf.l.wrap.b32 	%r2024, %r2018, %r2019, 23;
	shf.l.wrap.b32 	%r2025, %r2019, %r2018, 23;
	mov.b64 	%rd2854, {%r2025, %r2024};
	xor.b64  	%rd2855, %rd2853, %rd2854;
	xor.b64  	%rd2856, %rd2814, %rd2789;
	and.b64  	%rd2857, %rd2839, %rd2856;
	xor.b64  	%rd2858, %rd2857, %rd2789;
	add.s64 	%rd2859, %rd2764, %rd2475;
	ld.const.u64 	%rd2860, [k_sha512+632];
	add.s64 	%rd2861, %rd2859, %rd2860;
	add.s64 	%rd2862, %rd2861, %rd2858;
	add.s64 	%rd2863, %rd2862, %rd2855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2026,%dummy}, %rd2850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2027}, %rd2850;
	}
	shf.r.wrap.b32 	%r2028, %r2027, %r2026, 28;
	shf.r.wrap.b32 	%r2029, %r2026, %r2027, 28;
	mov.b64 	%rd2864, {%r2029, %r2028};
	shf.l.wrap.b32 	%r2030, %r2026, %r2027, 30;
	shf.l.wrap.b32 	%r2031, %r2027, %r2026, 30;
	mov.b64 	%rd2865, {%r2031, %r2030};
	xor.b64  	%rd2866, %rd2865, %rd2864;
	shf.l.wrap.b32 	%r2032, %r2026, %r2027, 25;
	shf.l.wrap.b32 	%r2033, %r2027, %r2026, 25;
	mov.b64 	%rd2867, {%r2033, %r2032};
	xor.b64  	%rd2868, %rd2866, %rd2867;
	xor.b64  	%rd2869, %rd2850, %rd2800;
	xor.b64  	%rd2870, %rd2850, %rd2825;
	and.b64  	%rd2871, %rd2870, %rd2869;
	xor.b64  	%rd2872, %rd2871, %rd2850;
	add.s64 	%rd2873, %rd2863, %rd2872;
	add.s64 	%rd2874, %rd2873, %rd2868;
	add.s64 	%rd2875, %rd2874, 7640891576956012808;
	add.s64 	%rd2876, %rd2825, 4354685564936845355;
	add.s64 	%rd5, %rd91, 6620516959819538809;
	add.s64 	%rd2877, %rd5, %rd92;
	add.s64 	%rd2878, %rd2877, %rd93;
	add.s64 	%rd2879, %rd2878, -4263291710961585108;
	add.s64 	%rd6, %rd101, 6482280703085258342;
	add.s64 	%rd2880, %rd6, %rd2878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2034,%dummy}, %rd2879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2035}, %rd2879;
	}
	shf.r.wrap.b32 	%r2036, %r2035, %r2034, 14;
	shf.r.wrap.b32 	%r2037, %r2034, %r2035, 14;
	mov.b64 	%rd2881, {%r2037, %r2036};
	shf.r.wrap.b32 	%r2038, %r2035, %r2034, 18;
	shf.r.wrap.b32 	%r2039, %r2034, %r2035, 18;
	mov.b64 	%rd2882, {%r2039, %r2038};
	xor.b64  	%rd2883, %rd2882, %rd2881;
	shf.l.wrap.b32 	%r2040, %r2034, %r2035, 23;
	shf.l.wrap.b32 	%r2041, %r2035, %r2034, 23;
	mov.b64 	%rd2884, {%r2041, %r2040};
	xor.b64  	%rd2885, %rd2883, %rd2884;
	and.b64  	%rd2886, %rd2879, -3887949035690463538;
	xor.b64  	%rd2887, %rd2886, -7276294671716946913;
	add.s64 	%rd2888, %rd115, %rd2887;
	add.s64 	%rd2889, %rd2888, %rd2885;
	add.s64 	%rd2890, %rd2889, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2042,%dummy}, %rd2880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2043}, %rd2880;
	}
	shf.r.wrap.b32 	%r2044, %r2043, %r2042, 28;
	shf.r.wrap.b32 	%r2045, %r2042, %r2043, 28;
	mov.b64 	%rd2891, {%r2045, %r2044};
	shf.l.wrap.b32 	%r2046, %r2042, %r2043, 30;
	shf.l.wrap.b32 	%r2047, %r2043, %r2042, 30;
	mov.b64 	%rd2892, {%r2047, %r2046};
	xor.b64  	%rd2893, %rd2892, %rd2891;
	shf.l.wrap.b32 	%r2048, %r2042, %r2043, 25;
	shf.l.wrap.b32 	%r2049, %r2043, %r2042, 25;
	mov.b64 	%rd2894, {%r2049, %r2048};
	xor.b64  	%rd2895, %rd2893, %rd2894;
	xor.b64  	%rd2896, %rd2880, -4942790177534073029;
	xor.b64  	%rd2897, %rd2880, 7640891576956012808;
	and.b64  	%rd2898, %rd2897, %rd2896;
	xor.b64  	%rd2899, %rd2898, %rd2880;
	add.s64 	%rd2900, %rd2889, %rd2899;
	add.s64 	%rd2901, %rd2900, %rd2895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2050,%dummy}, %rd2890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2051}, %rd2890;
	}
	shf.r.wrap.b32 	%r2052, %r2051, %r2050, 14;
	shf.r.wrap.b32 	%r2053, %r2050, %r2051, 14;
	mov.b64 	%rd2902, {%r2053, %r2052};
	shf.r.wrap.b32 	%r2054, %r2051, %r2050, 18;
	shf.r.wrap.b32 	%r2055, %r2050, %r2051, 18;
	mov.b64 	%rd2903, {%r2055, %r2054};
	xor.b64  	%rd2904, %rd2903, %rd2902;
	shf.l.wrap.b32 	%r2056, %r2050, %r2051, 23;
	shf.l.wrap.b32 	%r2057, %r2051, %r2050, 23;
	mov.b64 	%rd2905, {%r2057, %r2056};
	xor.b64  	%rd2906, %rd2904, %rd2905;
	xor.b64  	%rd2907, %rd2879, 5840696475078001361;
	and.b64  	%rd2908, %rd2890, %rd2907;
	xor.b64  	%rd2909, %rd2908, 5840696475078001361;
	add.s64 	%rd2910, %rd141, %rd2909;
	add.s64 	%rd2911, %rd2910, %rd2906;
	add.s64 	%rd2912, %rd2911, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2058,%dummy}, %rd2901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2059}, %rd2901;
	}
	shf.r.wrap.b32 	%r2060, %r2059, %r2058, 28;
	shf.r.wrap.b32 	%r2061, %r2058, %r2059, 28;
	mov.b64 	%rd2913, {%r2061, %r2060};
	shf.l.wrap.b32 	%r2062, %r2058, %r2059, 30;
	shf.l.wrap.b32 	%r2063, %r2059, %r2058, 30;
	mov.b64 	%rd2914, {%r2063, %r2062};
	xor.b64  	%rd2915, %rd2914, %rd2913;
	shf.l.wrap.b32 	%r2064, %r2058, %r2059, 25;
	shf.l.wrap.b32 	%r2065, %r2059, %r2058, 25;
	mov.b64 	%rd2916, {%r2065, %r2064};
	xor.b64  	%rd2917, %rd2915, %rd2916;
	xor.b64  	%rd2918, %rd2901, 7640891576956012808;
	xor.b64  	%rd2919, %rd2901, %rd2880;
	and.b64  	%rd2920, %rd2919, %rd2918;
	xor.b64  	%rd2921, %rd2920, %rd2901;
	add.s64 	%rd2922, %rd2911, %rd2921;
	add.s64 	%rd2923, %rd2922, %rd2917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2066,%dummy}, %rd2912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2067}, %rd2912;
	}
	shf.r.wrap.b32 	%r2068, %r2067, %r2066, 14;
	shf.r.wrap.b32 	%r2069, %r2066, %r2067, 14;
	mov.b64 	%rd2924, {%r2069, %r2068};
	shf.r.wrap.b32 	%r2070, %r2067, %r2066, 18;
	shf.r.wrap.b32 	%r2071, %r2066, %r2067, 18;
	mov.b64 	%rd2925, {%r2071, %r2070};
	xor.b64  	%rd2926, %rd2925, %rd2924;
	shf.l.wrap.b32 	%r2072, %r2066, %r2067, 23;
	shf.l.wrap.b32 	%r2073, %r2067, %r2066, 23;
	mov.b64 	%rd2927, {%r2073, %r2072};
	xor.b64  	%rd2928, %rd2926, %rd2927;
	xor.b64  	%rd2929, %rd2890, %rd2879;
	and.b64  	%rd2930, %rd2912, %rd2929;
	xor.b64  	%rd2931, %rd2930, %rd2879;
	add.s64 	%rd2932, %rd167, %rd2931;
	add.s64 	%rd2933, %rd2932, %rd2928;
	add.s64 	%rd2934, %rd2933, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2074,%dummy}, %rd2923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2075}, %rd2923;
	}
	shf.r.wrap.b32 	%r2076, %r2075, %r2074, 28;
	shf.r.wrap.b32 	%r2077, %r2074, %r2075, 28;
	mov.b64 	%rd2935, {%r2077, %r2076};
	shf.l.wrap.b32 	%r2078, %r2074, %r2075, 30;
	shf.l.wrap.b32 	%r2079, %r2075, %r2074, 30;
	mov.b64 	%rd2936, {%r2079, %r2078};
	xor.b64  	%rd2937, %rd2936, %rd2935;
	shf.l.wrap.b32 	%r2080, %r2074, %r2075, 25;
	shf.l.wrap.b32 	%r2081, %r2075, %r2074, 25;
	mov.b64 	%rd2938, {%r2081, %r2080};
	xor.b64  	%rd2939, %rd2937, %rd2938;
	xor.b64  	%rd2940, %rd2923, %rd2880;
	xor.b64  	%rd2941, %rd2923, %rd2901;
	and.b64  	%rd2942, %rd2941, %rd2940;
	xor.b64  	%rd2943, %rd2942, %rd2923;
	add.s64 	%rd2944, %rd2933, %rd2943;
	add.s64 	%rd2945, %rd2944, %rd2939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2082,%dummy}, %rd2934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2083}, %rd2934;
	}
	shf.r.wrap.b32 	%r2084, %r2083, %r2082, 14;
	shf.r.wrap.b32 	%r2085, %r2082, %r2083, 14;
	mov.b64 	%rd2946, {%r2085, %r2084};
	shf.r.wrap.b32 	%r2086, %r2083, %r2082, 18;
	shf.r.wrap.b32 	%r2087, %r2082, %r2083, 18;
	mov.b64 	%rd2947, {%r2087, %r2086};
	xor.b64  	%rd2948, %rd2947, %rd2946;
	shf.l.wrap.b32 	%r2088, %r2082, %r2083, 23;
	shf.l.wrap.b32 	%r2089, %r2083, %r2082, 23;
	mov.b64 	%rd2949, {%r2089, %r2088};
	xor.b64  	%rd2950, %rd2948, %rd2949;
	xor.b64  	%rd2951, %rd2912, %rd2890;
	and.b64  	%rd2952, %rd2934, %rd2951;
	xor.b64  	%rd2953, %rd2952, %rd2890;
	add.s64 	%rd2954, %rd2879, %rd190;
	add.s64 	%rd2955, %rd2954, %rd192;
	add.s64 	%rd2956, %rd2955, %rd2953;
	add.s64 	%rd2957, %rd2956, %rd2950;
	add.s64 	%rd2958, %rd2957, %rd2880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd2945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2091}, %rd2945;
	}
	shf.r.wrap.b32 	%r2092, %r2091, %r2090, 28;
	shf.r.wrap.b32 	%r2093, %r2090, %r2091, 28;
	mov.b64 	%rd2959, {%r2093, %r2092};
	shf.l.wrap.b32 	%r2094, %r2090, %r2091, 30;
	shf.l.wrap.b32 	%r2095, %r2091, %r2090, 30;
	mov.b64 	%rd2960, {%r2095, %r2094};
	xor.b64  	%rd2961, %rd2960, %rd2959;
	shf.l.wrap.b32 	%r2096, %r2090, %r2091, 25;
	shf.l.wrap.b32 	%r2097, %r2091, %r2090, 25;
	mov.b64 	%rd2962, {%r2097, %r2096};
	xor.b64  	%rd2963, %rd2961, %rd2962;
	xor.b64  	%rd2964, %rd2945, %rd2901;
	xor.b64  	%rd2965, %rd2945, %rd2923;
	and.b64  	%rd2966, %rd2965, %rd2964;
	xor.b64  	%rd2967, %rd2966, %rd2945;
	add.s64 	%rd2968, %rd2957, %rd2967;
	add.s64 	%rd2969, %rd2968, %rd2963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2098,%dummy}, %rd2958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd2958;
	}
	shf.r.wrap.b32 	%r2100, %r2099, %r2098, 14;
	shf.r.wrap.b32 	%r2101, %r2098, %r2099, 14;
	mov.b64 	%rd2970, {%r2101, %r2100};
	shf.r.wrap.b32 	%r2102, %r2099, %r2098, 18;
	shf.r.wrap.b32 	%r2103, %r2098, %r2099, 18;
	mov.b64 	%rd2971, {%r2103, %r2102};
	xor.b64  	%rd2972, %rd2971, %rd2970;
	shf.l.wrap.b32 	%r2104, %r2098, %r2099, 23;
	shf.l.wrap.b32 	%r2105, %r2099, %r2098, 23;
	mov.b64 	%rd2973, {%r2105, %r2104};
	xor.b64  	%rd2974, %rd2972, %rd2973;
	xor.b64  	%rd2975, %rd2934, %rd2912;
	and.b64  	%rd2976, %rd2958, %rd2975;
	xor.b64  	%rd2977, %rd2976, %rd2912;
	add.s64 	%rd2978, %rd2890, %rd216;
	add.s64 	%rd2979, %rd2978, %rd218;
	add.s64 	%rd2980, %rd2979, %rd2977;
	add.s64 	%rd2981, %rd2980, %rd2974;
	add.s64 	%rd2982, %rd2981, %rd2901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2106,%dummy}, %rd2969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2107}, %rd2969;
	}
	shf.r.wrap.b32 	%r2108, %r2107, %r2106, 28;
	shf.r.wrap.b32 	%r2109, %r2106, %r2107, 28;
	mov.b64 	%rd2983, {%r2109, %r2108};
	shf.l.wrap.b32 	%r2110, %r2106, %r2107, 30;
	shf.l.wrap.b32 	%r2111, %r2107, %r2106, 30;
	mov.b64 	%rd2984, {%r2111, %r2110};
	xor.b64  	%rd2985, %rd2984, %rd2983;
	shf.l.wrap.b32 	%r2112, %r2106, %r2107, 25;
	shf.l.wrap.b32 	%r2113, %r2107, %r2106, 25;
	mov.b64 	%rd2986, {%r2113, %r2112};
	xor.b64  	%rd2987, %rd2985, %rd2986;
	xor.b64  	%rd2988, %rd2969, %rd2923;
	xor.b64  	%rd2989, %rd2969, %rd2945;
	and.b64  	%rd2990, %rd2989, %rd2988;
	xor.b64  	%rd2991, %rd2990, %rd2969;
	add.s64 	%rd2992, %rd2981, %rd2991;
	add.s64 	%rd2993, %rd2992, %rd2987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2114,%dummy}, %rd2982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2115}, %rd2982;
	}
	shf.r.wrap.b32 	%r2116, %r2115, %r2114, 14;
	shf.r.wrap.b32 	%r2117, %r2114, %r2115, 14;
	mov.b64 	%rd2994, {%r2117, %r2116};
	shf.r.wrap.b32 	%r2118, %r2115, %r2114, 18;
	shf.r.wrap.b32 	%r2119, %r2114, %r2115, 18;
	mov.b64 	%rd2995, {%r2119, %r2118};
	xor.b64  	%rd2996, %rd2995, %rd2994;
	shf.l.wrap.b32 	%r2120, %r2114, %r2115, 23;
	shf.l.wrap.b32 	%r2121, %r2115, %r2114, 23;
	mov.b64 	%rd2997, {%r2121, %r2120};
	xor.b64  	%rd2998, %rd2996, %rd2997;
	xor.b64  	%rd2999, %rd2958, %rd2934;
	and.b64  	%rd3000, %rd2982, %rd2999;
	xor.b64  	%rd3001, %rd3000, %rd2934;
	add.s64 	%rd3002, %rd2912, %rd242;
	add.s64 	%rd3003, %rd3002, %rd244;
	add.s64 	%rd3004, %rd3003, %rd3001;
	add.s64 	%rd3005, %rd3004, %rd2998;
	add.s64 	%rd3006, %rd3005, %rd2923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2122,%dummy}, %rd2993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2123}, %rd2993;
	}
	shf.r.wrap.b32 	%r2124, %r2123, %r2122, 28;
	shf.r.wrap.b32 	%r2125, %r2122, %r2123, 28;
	mov.b64 	%rd3007, {%r2125, %r2124};
	shf.l.wrap.b32 	%r2126, %r2122, %r2123, 30;
	shf.l.wrap.b32 	%r2127, %r2123, %r2122, 30;
	mov.b64 	%rd3008, {%r2127, %r2126};
	xor.b64  	%rd3009, %rd3008, %rd3007;
	shf.l.wrap.b32 	%r2128, %r2122, %r2123, 25;
	shf.l.wrap.b32 	%r2129, %r2123, %r2122, 25;
	mov.b64 	%rd3010, {%r2129, %r2128};
	xor.b64  	%rd3011, %rd3009, %rd3010;
	xor.b64  	%rd3012, %rd2993, %rd2945;
	xor.b64  	%rd3013, %rd2993, %rd2969;
	and.b64  	%rd3014, %rd3013, %rd3012;
	xor.b64  	%rd3015, %rd3014, %rd2993;
	add.s64 	%rd3016, %rd3005, %rd3015;
	add.s64 	%rd3017, %rd3016, %rd3011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2130,%dummy}, %rd3006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2131}, %rd3006;
	}
	shf.r.wrap.b32 	%r2132, %r2131, %r2130, 14;
	shf.r.wrap.b32 	%r2133, %r2130, %r2131, 14;
	mov.b64 	%rd3018, {%r2133, %r2132};
	shf.r.wrap.b32 	%r2134, %r2131, %r2130, 18;
	shf.r.wrap.b32 	%r2135, %r2130, %r2131, 18;
	mov.b64 	%rd3019, {%r2135, %r2134};
	xor.b64  	%rd3020, %rd3019, %rd3018;
	shf.l.wrap.b32 	%r2136, %r2130, %r2131, 23;
	shf.l.wrap.b32 	%r2137, %r2131, %r2130, 23;
	mov.b64 	%rd3021, {%r2137, %r2136};
	xor.b64  	%rd3022, %rd3020, %rd3021;
	xor.b64  	%rd3023, %rd2982, %rd2958;
	and.b64  	%rd3024, %rd3006, %rd3023;
	xor.b64  	%rd3025, %rd3024, %rd2958;
	add.s64 	%rd3026, %rd2934, %rd268;
	add.s64 	%rd3027, %rd3026, %rd270;
	add.s64 	%rd3028, %rd3027, %rd3025;
	add.s64 	%rd3029, %rd3028, %rd3022;
	add.s64 	%rd3030, %rd3029, %rd2945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2138,%dummy}, %rd3017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2139}, %rd3017;
	}
	shf.r.wrap.b32 	%r2140, %r2139, %r2138, 28;
	shf.r.wrap.b32 	%r2141, %r2138, %r2139, 28;
	mov.b64 	%rd3031, {%r2141, %r2140};
	shf.l.wrap.b32 	%r2142, %r2138, %r2139, 30;
	shf.l.wrap.b32 	%r2143, %r2139, %r2138, 30;
	mov.b64 	%rd3032, {%r2143, %r2142};
	xor.b64  	%rd3033, %rd3032, %rd3031;
	shf.l.wrap.b32 	%r2144, %r2138, %r2139, 25;
	shf.l.wrap.b32 	%r2145, %r2139, %r2138, 25;
	mov.b64 	%rd3034, {%r2145, %r2144};
	xor.b64  	%rd3035, %rd3033, %rd3034;
	xor.b64  	%rd3036, %rd3017, %rd2969;
	xor.b64  	%rd3037, %rd3017, %rd2993;
	and.b64  	%rd3038, %rd3037, %rd3036;
	xor.b64  	%rd3039, %rd3038, %rd3017;
	add.s64 	%rd3040, %rd3029, %rd3039;
	add.s64 	%rd3041, %rd3040, %rd3035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2146,%dummy}, %rd3030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2147}, %rd3030;
	}
	shf.r.wrap.b32 	%r2148, %r2147, %r2146, 14;
	shf.r.wrap.b32 	%r2149, %r2146, %r2147, 14;
	mov.b64 	%rd3042, {%r2149, %r2148};
	shf.r.wrap.b32 	%r2150, %r2147, %r2146, 18;
	shf.r.wrap.b32 	%r2151, %r2146, %r2147, 18;
	mov.b64 	%rd3043, {%r2151, %r2150};
	xor.b64  	%rd3044, %rd3043, %rd3042;
	shf.l.wrap.b32 	%r2152, %r2146, %r2147, 23;
	shf.l.wrap.b32 	%r2153, %r2147, %r2146, 23;
	mov.b64 	%rd3045, {%r2153, %r2152};
	xor.b64  	%rd3046, %rd3044, %rd3045;
	xor.b64  	%rd3047, %rd3006, %rd2982;
	and.b64  	%rd3048, %rd3030, %rd3047;
	xor.b64  	%rd3049, %rd3048, %rd2982;
	add.s64 	%rd3050, %rd2958, %rd294;
	add.s64 	%rd3051, %rd3050, %rd3049;
	add.s64 	%rd3052, %rd3051, %rd3046;
	add.s64 	%rd3053, %rd3052, -2906493647876705202;
	add.s64 	%rd3054, %rd3053, %rd2969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2154,%dummy}, %rd3041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2155}, %rd3041;
	}
	shf.r.wrap.b32 	%r2156, %r2155, %r2154, 28;
	shf.r.wrap.b32 	%r2157, %r2154, %r2155, 28;
	mov.b64 	%rd3055, {%r2157, %r2156};
	shf.l.wrap.b32 	%r2158, %r2154, %r2155, 30;
	shf.l.wrap.b32 	%r2159, %r2155, %r2154, 30;
	mov.b64 	%rd3056, {%r2159, %r2158};
	xor.b64  	%rd3057, %rd3056, %rd3055;
	shf.l.wrap.b32 	%r2160, %r2154, %r2155, 25;
	shf.l.wrap.b32 	%r2161, %r2155, %r2154, 25;
	mov.b64 	%rd3058, {%r2161, %r2160};
	xor.b64  	%rd3059, %rd3057, %rd3058;
	xor.b64  	%rd3060, %rd3041, %rd2993;
	xor.b64  	%rd3061, %rd3041, %rd3017;
	and.b64  	%rd3062, %rd3061, %rd3060;
	xor.b64  	%rd3063, %rd3062, %rd3041;
	add.s64 	%rd3064, %rd3053, %rd3063;
	add.s64 	%rd3065, %rd3064, %rd3059;
	add.s64 	%rd3066, %rd311, %rd2982;
	xor.b64  	%rd3067, %rd3066, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2162,%dummy}, %rd3054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2163}, %rd3054;
	}
	shf.r.wrap.b32 	%r2164, %r2163, %r2162, 14;
	shf.r.wrap.b32 	%r2165, %r2162, %r2163, 14;
	mov.b64 	%rd3068, {%r2165, %r2164};
	shf.r.wrap.b32 	%r2166, %r2163, %r2162, 18;
	shf.r.wrap.b32 	%r2167, %r2162, %r2163, 18;
	mov.b64 	%rd3069, {%r2167, %r2166};
	xor.b64  	%rd3070, %rd3069, %rd3068;
	shf.l.wrap.b32 	%r2168, %r2162, %r2163, 23;
	shf.l.wrap.b32 	%r2169, %r2163, %r2162, 23;
	mov.b64 	%rd3071, {%r2169, %r2168};
	xor.b64  	%rd3072, %rd3070, %rd3071;
	xor.b64  	%rd3073, %rd3030, %rd3006;
	and.b64  	%rd3074, %rd3054, %rd3073;
	xor.b64  	%rd3075, %rd3074, %rd3006;
	add.s64 	%rd3076, %rd3067, %rd3075;
	add.s64 	%rd3077, %rd3076, %rd3072;
	add.s64 	%rd3078, %rd3077, %rd2993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2170,%dummy}, %rd3065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2171}, %rd3065;
	}
	shf.r.wrap.b32 	%r2172, %r2171, %r2170, 28;
	shf.r.wrap.b32 	%r2173, %r2170, %r2171, 28;
	mov.b64 	%rd3079, {%r2173, %r2172};
	shf.l.wrap.b32 	%r2174, %r2170, %r2171, 30;
	shf.l.wrap.b32 	%r2175, %r2171, %r2170, 30;
	mov.b64 	%rd3080, {%r2175, %r2174};
	xor.b64  	%rd3081, %rd3080, %rd3079;
	shf.l.wrap.b32 	%r2176, %r2170, %r2171, 25;
	shf.l.wrap.b32 	%r2177, %r2171, %r2170, 25;
	mov.b64 	%rd3082, {%r2177, %r2176};
	xor.b64  	%rd3083, %rd3081, %rd3082;
	xor.b64  	%rd3084, %rd3065, %rd3017;
	xor.b64  	%rd3085, %rd3065, %rd3041;
	and.b64  	%rd3086, %rd3085, %rd3084;
	xor.b64  	%rd3087, %rd3086, %rd3065;
	add.s64 	%rd3088, %rd3077, %rd3087;
	add.s64 	%rd3089, %rd3088, %rd3083;
	add.s64 	%rd3090, %rd336, %rd3006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2178,%dummy}, %rd3078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2179}, %rd3078;
	}
	shf.r.wrap.b32 	%r2180, %r2179, %r2178, 14;
	shf.r.wrap.b32 	%r2181, %r2178, %r2179, 14;
	mov.b64 	%rd3091, {%r2181, %r2180};
	shf.r.wrap.b32 	%r2182, %r2179, %r2178, 18;
	shf.r.wrap.b32 	%r2183, %r2178, %r2179, 18;
	mov.b64 	%rd3092, {%r2183, %r2182};
	xor.b64  	%rd3093, %rd3092, %rd3091;
	shf.l.wrap.b32 	%r2184, %r2178, %r2179, 23;
	shf.l.wrap.b32 	%r2185, %r2179, %r2178, 23;
	mov.b64 	%rd3094, {%r2185, %r2184};
	xor.b64  	%rd3095, %rd3093, %rd3094;
	xor.b64  	%rd3096, %rd3054, %rd3030;
	and.b64  	%rd3097, %rd3078, %rd3096;
	xor.b64  	%rd3098, %rd3097, %rd3030;
	add.s64 	%rd3099, %rd3090, %rd3098;
	add.s64 	%rd3100, %rd3099, %rd3095;
	add.s64 	%rd3101, %rd3100, %rd3017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2186,%dummy}, %rd3089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2187}, %rd3089;
	}
	shf.r.wrap.b32 	%r2188, %r2187, %r2186, 28;
	shf.r.wrap.b32 	%r2189, %r2186, %r2187, 28;
	mov.b64 	%rd3102, {%r2189, %r2188};
	shf.l.wrap.b32 	%r2190, %r2186, %r2187, 30;
	shf.l.wrap.b32 	%r2191, %r2187, %r2186, 30;
	mov.b64 	%rd3103, {%r2191, %r2190};
	xor.b64  	%rd3104, %rd3103, %rd3102;
	shf.l.wrap.b32 	%r2192, %r2186, %r2187, 25;
	shf.l.wrap.b32 	%r2193, %r2187, %r2186, 25;
	mov.b64 	%rd3105, {%r2193, %r2192};
	xor.b64  	%rd3106, %rd3104, %rd3105;
	xor.b64  	%rd3107, %rd3089, %rd3041;
	xor.b64  	%rd3108, %rd3089, %rd3065;
	and.b64  	%rd3109, %rd3108, %rd3107;
	xor.b64  	%rd3110, %rd3109, %rd3089;
	add.s64 	%rd3111, %rd3100, %rd3110;
	add.s64 	%rd3112, %rd3111, %rd3106;
	add.s64 	%rd3113, %rd360, %rd3030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2194,%dummy}, %rd3101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2195}, %rd3101;
	}
	shf.r.wrap.b32 	%r2196, %r2195, %r2194, 14;
	shf.r.wrap.b32 	%r2197, %r2194, %r2195, 14;
	mov.b64 	%rd3114, {%r2197, %r2196};
	shf.r.wrap.b32 	%r2198, %r2195, %r2194, 18;
	shf.r.wrap.b32 	%r2199, %r2194, %r2195, 18;
	mov.b64 	%rd3115, {%r2199, %r2198};
	xor.b64  	%rd3116, %rd3115, %rd3114;
	shf.l.wrap.b32 	%r2200, %r2194, %r2195, 23;
	shf.l.wrap.b32 	%r2201, %r2195, %r2194, 23;
	mov.b64 	%rd3117, {%r2201, %r2200};
	xor.b64  	%rd3118, %rd3116, %rd3117;
	xor.b64  	%rd3119, %rd3078, %rd3054;
	and.b64  	%rd3120, %rd3101, %rd3119;
	xor.b64  	%rd3121, %rd3120, %rd3054;
	add.s64 	%rd3122, %rd3113, %rd3121;
	add.s64 	%rd3123, %rd3122, %rd3118;
	add.s64 	%rd3124, %rd3123, %rd3041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2202,%dummy}, %rd3112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2203}, %rd3112;
	}
	shf.r.wrap.b32 	%r2204, %r2203, %r2202, 28;
	shf.r.wrap.b32 	%r2205, %r2202, %r2203, 28;
	mov.b64 	%rd3125, {%r2205, %r2204};
	shf.l.wrap.b32 	%r2206, %r2202, %r2203, 30;
	shf.l.wrap.b32 	%r2207, %r2203, %r2202, 30;
	mov.b64 	%rd3126, {%r2207, %r2206};
	xor.b64  	%rd3127, %rd3126, %rd3125;
	shf.l.wrap.b32 	%r2208, %r2202, %r2203, 25;
	shf.l.wrap.b32 	%r2209, %r2203, %r2202, 25;
	mov.b64 	%rd3128, {%r2209, %r2208};
	xor.b64  	%rd3129, %rd3127, %rd3128;
	xor.b64  	%rd3130, %rd3112, %rd3065;
	xor.b64  	%rd3131, %rd3112, %rd3089;
	and.b64  	%rd3132, %rd3131, %rd3130;
	xor.b64  	%rd3133, %rd3132, %rd3112;
	add.s64 	%rd3134, %rd3123, %rd3133;
	add.s64 	%rd3135, %rd3134, %rd3129;
	add.s64 	%rd3136, %rd384, %rd3054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2210,%dummy}, %rd3124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2211}, %rd3124;
	}
	shf.r.wrap.b32 	%r2212, %r2211, %r2210, 14;
	shf.r.wrap.b32 	%r2213, %r2210, %r2211, 14;
	mov.b64 	%rd3137, {%r2213, %r2212};
	shf.r.wrap.b32 	%r2214, %r2211, %r2210, 18;
	shf.r.wrap.b32 	%r2215, %r2210, %r2211, 18;
	mov.b64 	%rd3138, {%r2215, %r2214};
	xor.b64  	%rd3139, %rd3138, %rd3137;
	shf.l.wrap.b32 	%r2216, %r2210, %r2211, 23;
	shf.l.wrap.b32 	%r2217, %r2211, %r2210, 23;
	mov.b64 	%rd3140, {%r2217, %r2216};
	xor.b64  	%rd3141, %rd3139, %rd3140;
	xor.b64  	%rd3142, %rd3101, %rd3078;
	and.b64  	%rd3143, %rd3124, %rd3142;
	xor.b64  	%rd3144, %rd3143, %rd3078;
	add.s64 	%rd3145, %rd3136, %rd3144;
	add.s64 	%rd3146, %rd3145, %rd3141;
	add.s64 	%rd3147, %rd3146, %rd3065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2218,%dummy}, %rd3135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2219}, %rd3135;
	}
	shf.r.wrap.b32 	%r2220, %r2219, %r2218, 28;
	shf.r.wrap.b32 	%r2221, %r2218, %r2219, 28;
	mov.b64 	%rd3148, {%r2221, %r2220};
	shf.l.wrap.b32 	%r2222, %r2218, %r2219, 30;
	shf.l.wrap.b32 	%r2223, %r2219, %r2218, 30;
	mov.b64 	%rd3149, {%r2223, %r2222};
	xor.b64  	%rd3150, %rd3149, %rd3148;
	shf.l.wrap.b32 	%r2224, %r2218, %r2219, 25;
	shf.l.wrap.b32 	%r2225, %r2219, %r2218, 25;
	mov.b64 	%rd3151, {%r2225, %r2224};
	xor.b64  	%rd3152, %rd3150, %rd3151;
	xor.b64  	%rd3153, %rd3135, %rd3089;
	xor.b64  	%rd3154, %rd3135, %rd3112;
	and.b64  	%rd3155, %rd3154, %rd3153;
	xor.b64  	%rd3156, %rd3155, %rd3135;
	add.s64 	%rd3157, %rd3146, %rd3156;
	add.s64 	%rd3158, %rd3157, %rd3152;
	add.s64 	%rd3159, %rd408, %rd3078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2226,%dummy}, %rd3147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2227}, %rd3147;
	}
	shf.r.wrap.b32 	%r2228, %r2227, %r2226, 14;
	shf.r.wrap.b32 	%r2229, %r2226, %r2227, 14;
	mov.b64 	%rd3160, {%r2229, %r2228};
	shf.r.wrap.b32 	%r2230, %r2227, %r2226, 18;
	shf.r.wrap.b32 	%r2231, %r2226, %r2227, 18;
	mov.b64 	%rd3161, {%r2231, %r2230};
	xor.b64  	%rd3162, %rd3161, %rd3160;
	shf.l.wrap.b32 	%r2232, %r2226, %r2227, 23;
	shf.l.wrap.b32 	%r2233, %r2227, %r2226, 23;
	mov.b64 	%rd3163, {%r2233, %r2232};
	xor.b64  	%rd3164, %rd3162, %rd3163;
	xor.b64  	%rd3165, %rd3124, %rd3101;
	and.b64  	%rd3166, %rd3147, %rd3165;
	xor.b64  	%rd3167, %rd3166, %rd3101;
	add.s64 	%rd3168, %rd3159, %rd3167;
	add.s64 	%rd3169, %rd3168, %rd3164;
	add.s64 	%rd3170, %rd3169, %rd3089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2234,%dummy}, %rd3158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2235}, %rd3158;
	}
	shf.r.wrap.b32 	%r2236, %r2235, %r2234, 28;
	shf.r.wrap.b32 	%r2237, %r2234, %r2235, 28;
	mov.b64 	%rd3171, {%r2237, %r2236};
	shf.l.wrap.b32 	%r2238, %r2234, %r2235, 30;
	shf.l.wrap.b32 	%r2239, %r2235, %r2234, 30;
	mov.b64 	%rd3172, {%r2239, %r2238};
	xor.b64  	%rd3173, %rd3172, %rd3171;
	shf.l.wrap.b32 	%r2240, %r2234, %r2235, 25;
	shf.l.wrap.b32 	%r2241, %r2235, %r2234, 25;
	mov.b64 	%rd3174, {%r2241, %r2240};
	xor.b64  	%rd3175, %rd3173, %rd3174;
	xor.b64  	%rd3176, %rd3158, %rd3112;
	xor.b64  	%rd3177, %rd3158, %rd3135;
	and.b64  	%rd3178, %rd3177, %rd3176;
	xor.b64  	%rd3179, %rd3178, %rd3158;
	add.s64 	%rd3180, %rd3169, %rd3179;
	add.s64 	%rd3181, %rd3180, %rd3175;
	add.s64 	%rd3182, %rd432, %rd3101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2242,%dummy}, %rd3170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2243}, %rd3170;
	}
	shf.r.wrap.b32 	%r2244, %r2243, %r2242, 14;
	shf.r.wrap.b32 	%r2245, %r2242, %r2243, 14;
	mov.b64 	%rd3183, {%r2245, %r2244};
	shf.r.wrap.b32 	%r2246, %r2243, %r2242, 18;
	shf.r.wrap.b32 	%r2247, %r2242, %r2243, 18;
	mov.b64 	%rd3184, {%r2247, %r2246};
	xor.b64  	%rd3185, %rd3184, %rd3183;
	shf.l.wrap.b32 	%r2248, %r2242, %r2243, 23;
	shf.l.wrap.b32 	%r2249, %r2243, %r2242, 23;
	mov.b64 	%rd3186, {%r2249, %r2248};
	xor.b64  	%rd3187, %rd3185, %rd3186;
	xor.b64  	%rd3188, %rd3147, %rd3124;
	and.b64  	%rd3189, %rd3170, %rd3188;
	xor.b64  	%rd3190, %rd3189, %rd3124;
	add.s64 	%rd3191, %rd3182, %rd3190;
	add.s64 	%rd3192, %rd3191, %rd3187;
	add.s64 	%rd3193, %rd3192, %rd3112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2250,%dummy}, %rd3181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2251}, %rd3181;
	}
	shf.r.wrap.b32 	%r2252, %r2251, %r2250, 28;
	shf.r.wrap.b32 	%r2253, %r2250, %r2251, 28;
	mov.b64 	%rd3194, {%r2253, %r2252};
	shf.l.wrap.b32 	%r2254, %r2250, %r2251, 30;
	shf.l.wrap.b32 	%r2255, %r2251, %r2250, 30;
	mov.b64 	%rd3195, {%r2255, %r2254};
	xor.b64  	%rd3196, %rd3195, %rd3194;
	shf.l.wrap.b32 	%r2256, %r2250, %r2251, 25;
	shf.l.wrap.b32 	%r2257, %r2251, %r2250, 25;
	mov.b64 	%rd3197, {%r2257, %r2256};
	xor.b64  	%rd3198, %rd3196, %rd3197;
	xor.b64  	%rd3199, %rd3181, %rd3135;
	xor.b64  	%rd3200, %rd3181, %rd3158;
	and.b64  	%rd3201, %rd3200, %rd3199;
	xor.b64  	%rd3202, %rd3201, %rd3181;
	add.s64 	%rd3203, %rd3192, %rd3202;
	add.s64 	%rd3204, %rd3203, %rd3198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2258,%dummy}, %rd3193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2259}, %rd3193;
	}
	shf.r.wrap.b32 	%r2260, %r2259, %r2258, 14;
	shf.r.wrap.b32 	%r2261, %r2258, %r2259, 14;
	mov.b64 	%rd3205, {%r2261, %r2260};
	shf.r.wrap.b32 	%r2262, %r2259, %r2258, 18;
	shf.r.wrap.b32 	%r2263, %r2258, %r2259, 18;
	mov.b64 	%rd3206, {%r2263, %r2262};
	xor.b64  	%rd3207, %rd3206, %rd3205;
	shf.l.wrap.b32 	%r2264, %r2258, %r2259, 23;
	shf.l.wrap.b32 	%r2265, %r2259, %r2258, 23;
	mov.b64 	%rd3208, {%r2265, %r2264};
	xor.b64  	%rd3209, %rd3207, %rd3208;
	xor.b64  	%rd3210, %rd3170, %rd3147;
	and.b64  	%rd3211, %rd3193, %rd3210;
	xor.b64  	%rd3212, %rd3211, %rd3147;
	add.s64 	%rd3213, %rd3124, %rd464;
	add.s64 	%rd3214, %rd3213, %rd3212;
	add.s64 	%rd3215, %rd3214, %rd3209;
	add.s64 	%rd3216, %rd3215, 576;
	add.s64 	%rd3217, %rd3216, %rd3135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2266,%dummy}, %rd3204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2267}, %rd3204;
	}
	shf.r.wrap.b32 	%r2268, %r2267, %r2266, 28;
	shf.r.wrap.b32 	%r2269, %r2266, %r2267, 28;
	mov.b64 	%rd3218, {%r2269, %r2268};
	shf.l.wrap.b32 	%r2270, %r2266, %r2267, 30;
	shf.l.wrap.b32 	%r2271, %r2267, %r2266, 30;
	mov.b64 	%rd3219, {%r2271, %r2270};
	xor.b64  	%rd3220, %rd3219, %rd3218;
	shf.l.wrap.b32 	%r2272, %r2266, %r2267, 25;
	shf.l.wrap.b32 	%r2273, %r2267, %r2266, 25;
	mov.b64 	%rd3221, {%r2273, %r2272};
	xor.b64  	%rd3222, %rd3220, %rd3221;
	xor.b64  	%rd3223, %rd3204, %rd3158;
	xor.b64  	%rd3224, %rd3204, %rd3181;
	and.b64  	%rd3225, %rd3224, %rd3223;
	xor.b64  	%rd3226, %rd3225, %rd3204;
	add.s64 	%rd3227, %rd3216, %rd3226;
	add.s64 	%rd3228, %rd3227, %rd3222;
	mov.u64 	%rd3229, -2906493647876705202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2274,%dummy}, %rd3229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2275}, %rd3229;
	}
	shf.r.wrap.b32 	%r2276, %r2275, %r2274, 1;
	shf.r.wrap.b32 	%r2277, %r2274, %r2275, 1;
	mov.b64 	%rd3230, {%r2277, %r2276};
	shf.r.wrap.b32 	%r2278, %r2275, %r2274, 8;
	shf.r.wrap.b32 	%r2279, %r2274, %r2275, 8;
	mov.b64 	%rd3231, {%r2279, %r2278};
	xor.b64  	%rd3232, %rd3230, %rd3231;
	xor.b64  	%rd3233, %rd3232, 121408206451819112;
	add.s64 	%rd3234, %rd576, %rd3233;
	add.s64 	%rd3235, %rd588, -2906493647876705202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2280,%dummy}, %rd3234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2281}, %rd3234;
	}
	shf.r.wrap.b32 	%r2282, %r2281, %r2280, 19;
	shf.r.wrap.b32 	%r2283, %r2280, %r2281, 19;
	mov.b64 	%rd3236, {%r2283, %r2282};
	shf.l.wrap.b32 	%r2284, %r2280, %r2281, 3;
	shf.l.wrap.b32 	%r2285, %r2281, %r2280, 3;
	mov.b64 	%rd3237, {%r2285, %r2284};
	shr.u64 	%rd3238, %rd3234, 6;
	xor.b64  	%rd3239, %rd3236, %rd3238;
	xor.b64  	%rd3240, %rd3239, %rd3237;
	add.s64 	%rd3241, %rd597, %rd3240;
	add.s64 	%rd3242, %rd3241, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2286,%dummy}, %rd3235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2287}, %rd3235;
	}
	shf.r.wrap.b32 	%r2288, %r2287, %r2286, 19;
	shf.r.wrap.b32 	%r2289, %r2286, %r2287, 19;
	mov.b64 	%rd3243, {%r2289, %r2288};
	shf.l.wrap.b32 	%r2290, %r2286, %r2287, 3;
	shf.l.wrap.b32 	%r2291, %r2287, %r2286, 3;
	mov.b64 	%rd3244, {%r2291, %r2290};
	shr.u64 	%rd3245, %rd3235, 6;
	xor.b64  	%rd3246, %rd3243, %rd3245;
	xor.b64  	%rd3247, %rd3246, %rd3244;
	add.s64 	%rd3248, %rd527, %rd3247;
	add.s64 	%rd3249, %rd3248, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2292,%dummy}, %rd3242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2293}, %rd3242;
	}
	shf.r.wrap.b32 	%r2294, %r2293, %r2292, 19;
	shf.r.wrap.b32 	%r2295, %r2292, %r2293, 19;
	mov.b64 	%rd3250, {%r2295, %r2294};
	shf.l.wrap.b32 	%r2296, %r2292, %r2293, 3;
	shf.l.wrap.b32 	%r2297, %r2293, %r2292, 3;
	mov.b64 	%rd3251, {%r2297, %r2296};
	shr.u64 	%rd3252, %rd3242, 6;
	xor.b64  	%rd3253, %rd3250, %rd3252;
	xor.b64  	%rd3254, %rd3253, %rd3251;
	add.s64 	%rd3255, %rd539, %rd3254;
	add.s64 	%rd3256, %rd3255, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2298,%dummy}, %rd3249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2299}, %rd3249;
	}
	shf.r.wrap.b32 	%r2300, %r2299, %r2298, 19;
	shf.r.wrap.b32 	%r2301, %r2298, %r2299, 19;
	mov.b64 	%rd3257, {%r2301, %r2300};
	shf.l.wrap.b32 	%r2302, %r2298, %r2299, 3;
	shf.l.wrap.b32 	%r2303, %r2299, %r2298, 3;
	mov.b64 	%rd3258, {%r2303, %r2302};
	shr.u64 	%rd3259, %rd3249, 6;
	xor.b64  	%rd3260, %rd3257, %rd3259;
	xor.b64  	%rd3261, %rd3260, %rd3258;
	add.s64 	%rd3262, %rd551, %rd3261;
	add.s64 	%rd3263, %rd3262, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2304,%dummy}, %rd3256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2305}, %rd3256;
	}
	shf.r.wrap.b32 	%r2306, %r2305, %r2304, 19;
	shf.r.wrap.b32 	%r2307, %r2304, %r2305, 19;
	mov.b64 	%rd3264, {%r2307, %r2306};
	shf.l.wrap.b32 	%r2308, %r2304, %r2305, 3;
	shf.l.wrap.b32 	%r2309, %r2305, %r2304, 3;
	mov.b64 	%rd3265, {%r2309, %r2308};
	shr.u64 	%rd3266, %rd3256, 6;
	xor.b64  	%rd3267, %rd3264, %rd3266;
	xor.b64  	%rd3268, %rd3267, %rd3265;
	add.s64 	%rd3269, %rd564, %rd3268;
	add.s64 	%rd3270, %rd3269, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2310,%dummy}, %rd3263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2311}, %rd3263;
	}
	shf.r.wrap.b32 	%r2312, %r2311, %r2310, 19;
	shf.r.wrap.b32 	%r2313, %r2310, %r2311, 19;
	mov.b64 	%rd3271, {%r2313, %r2312};
	shf.l.wrap.b32 	%r2314, %r2310, %r2311, 3;
	shf.l.wrap.b32 	%r2315, %r2311, %r2310, 3;
	mov.b64 	%rd3272, {%r2315, %r2314};
	shr.u64 	%rd3273, %rd3263, 6;
	xor.b64  	%rd3274, %rd3271, %rd3273;
	xor.b64  	%rd3275, %rd3274, %rd3272;
	add.s64 	%rd3276, %rd3234, %rd3275;
	add.s64 	%rd3277, %rd3276, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2316,%dummy}, %rd3270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2317}, %rd3270;
	}
	shf.r.wrap.b32 	%r2318, %r2317, %r2316, 19;
	shf.r.wrap.b32 	%r2319, %r2316, %r2317, 19;
	mov.b64 	%rd3278, {%r2319, %r2318};
	shf.l.wrap.b32 	%r2320, %r2316, %r2317, 3;
	shf.l.wrap.b32 	%r2321, %r2317, %r2316, 3;
	mov.b64 	%rd3279, {%r2321, %r2320};
	shr.u64 	%rd3280, %rd3270, 6;
	xor.b64  	%rd3281, %rd3278, %rd3280;
	xor.b64  	%rd3282, %rd3281, %rd3279;
	add.s64 	%rd3283, %rd3235, %rd3282;
	add.s64 	%rd3284, %rd3283, %rd648;
	add.s64 	%rd3285, %rd3284, 576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2322,%dummy}, %rd3217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2323}, %rd3217;
	}
	shf.r.wrap.b32 	%r2324, %r2323, %r2322, 14;
	shf.r.wrap.b32 	%r2325, %r2322, %r2323, 14;
	mov.b64 	%rd3286, {%r2325, %r2324};
	shf.r.wrap.b32 	%r2326, %r2323, %r2322, 18;
	shf.r.wrap.b32 	%r2327, %r2322, %r2323, 18;
	mov.b64 	%rd3287, {%r2327, %r2326};
	xor.b64  	%rd3288, %rd3287, %rd3286;
	shf.l.wrap.b32 	%r2328, %r2322, %r2323, 23;
	shf.l.wrap.b32 	%r2329, %r2323, %r2322, 23;
	mov.b64 	%rd3289, {%r2329, %r2328};
	xor.b64  	%rd3290, %rd3288, %rd3289;
	xor.b64  	%rd3291, %rd3193, %rd3170;
	and.b64  	%rd3292, %rd3291, %rd3217;
	xor.b64  	%rd3293, %rd3292, %rd3170;
	add.s64 	%rd3294, %rd3293, %rd3147;
	add.s64 	%rd3295, %rd3294, %rd491;
	add.s64 	%rd3296, %rd3295, %rd662;
	add.s64 	%rd3297, %rd3296, %rd3290;
	add.s64 	%rd3298, %rd3297, %rd3158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2330,%dummy}, %rd3228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2331}, %rd3228;
	}
	shf.r.wrap.b32 	%r2332, %r2331, %r2330, 28;
	shf.r.wrap.b32 	%r2333, %r2330, %r2331, 28;
	mov.b64 	%rd3299, {%r2333, %r2332};
	shf.l.wrap.b32 	%r2334, %r2330, %r2331, 30;
	shf.l.wrap.b32 	%r2335, %r2331, %r2330, 30;
	mov.b64 	%rd3300, {%r2335, %r2334};
	xor.b64  	%rd3301, %rd3300, %rd3299;
	shf.l.wrap.b32 	%r2336, %r2330, %r2331, 25;
	shf.l.wrap.b32 	%r2337, %r2331, %r2330, 25;
	mov.b64 	%rd3302, {%r2337, %r2336};
	xor.b64  	%rd3303, %rd3301, %rd3302;
	xor.b64  	%rd3304, %rd3228, %rd3181;
	xor.b64  	%rd3305, %rd3228, %rd3204;
	and.b64  	%rd3306, %rd3305, %rd3304;
	xor.b64  	%rd3307, %rd3306, %rd3228;
	add.s64 	%rd3308, %rd3297, %rd3307;
	add.s64 	%rd3309, %rd3308, %rd3303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2338,%dummy}, %rd3298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2339}, %rd3298;
	}
	shf.r.wrap.b32 	%r2340, %r2339, %r2338, 14;
	shf.r.wrap.b32 	%r2341, %r2338, %r2339, 14;
	mov.b64 	%rd3310, {%r2341, %r2340};
	shf.r.wrap.b32 	%r2342, %r2339, %r2338, 18;
	shf.r.wrap.b32 	%r2343, %r2338, %r2339, 18;
	mov.b64 	%rd3311, {%r2343, %r2342};
	xor.b64  	%rd3312, %rd3311, %rd3310;
	shf.l.wrap.b32 	%r2344, %r2338, %r2339, 23;
	shf.l.wrap.b32 	%r2345, %r2339, %r2338, 23;
	mov.b64 	%rd3313, {%r2345, %r2344};
	xor.b64  	%rd3314, %rd3312, %rd3313;
	xor.b64  	%rd3315, %rd3217, %rd3193;
	and.b64  	%rd3316, %rd3298, %rd3315;
	xor.b64  	%rd3317, %rd3316, %rd3193;
	add.s64 	%rd3318, %rd503, %rd3170;
	add.s64 	%rd3319, %rd3318, %rd686;
	add.s64 	%rd3320, %rd3319, %rd3317;
	add.s64 	%rd3321, %rd3320, %rd3314;
	add.s64 	%rd3322, %rd3321, %rd3181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2346,%dummy}, %rd3309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2347}, %rd3309;
	}
	shf.r.wrap.b32 	%r2348, %r2347, %r2346, 28;
	shf.r.wrap.b32 	%r2349, %r2346, %r2347, 28;
	mov.b64 	%rd3323, {%r2349, %r2348};
	shf.l.wrap.b32 	%r2350, %r2346, %r2347, 30;
	shf.l.wrap.b32 	%r2351, %r2347, %r2346, 30;
	mov.b64 	%rd3324, {%r2351, %r2350};
	xor.b64  	%rd3325, %rd3324, %rd3323;
	shf.l.wrap.b32 	%r2352, %r2346, %r2347, 25;
	shf.l.wrap.b32 	%r2353, %r2347, %r2346, 25;
	mov.b64 	%rd3326, {%r2353, %r2352};
	xor.b64  	%rd3327, %rd3325, %rd3326;
	xor.b64  	%rd3328, %rd3309, %rd3204;
	xor.b64  	%rd3329, %rd3309, %rd3228;
	and.b64  	%rd3330, %rd3329, %rd3328;
	xor.b64  	%rd3331, %rd3330, %rd3309;
	add.s64 	%rd3332, %rd3321, %rd3331;
	add.s64 	%rd3333, %rd3332, %rd3327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2354,%dummy}, %rd3322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2355}, %rd3322;
	}
	shf.r.wrap.b32 	%r2356, %r2355, %r2354, 14;
	shf.r.wrap.b32 	%r2357, %r2354, %r2355, 14;
	mov.b64 	%rd3334, {%r2357, %r2356};
	shf.r.wrap.b32 	%r2358, %r2355, %r2354, 18;
	shf.r.wrap.b32 	%r2359, %r2354, %r2355, 18;
	mov.b64 	%rd3335, {%r2359, %r2358};
	xor.b64  	%rd3336, %rd3335, %rd3334;
	shf.l.wrap.b32 	%r2360, %r2354, %r2355, 23;
	shf.l.wrap.b32 	%r2361, %r2355, %r2354, 23;
	mov.b64 	%rd3337, {%r2361, %r2360};
	xor.b64  	%rd3338, %rd3336, %rd3337;
	xor.b64  	%rd3339, %rd3298, %rd3217;
	and.b64  	%rd3340, %rd3322, %rd3339;
	xor.b64  	%rd3341, %rd3340, %rd3217;
	add.s64 	%rd3342, %rd515, %rd3193;
	add.s64 	%rd3343, %rd3342, %rd711;
	add.s64 	%rd3344, %rd3343, %rd3341;
	add.s64 	%rd3345, %rd3344, %rd3338;
	add.s64 	%rd3346, %rd3345, %rd3204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2362,%dummy}, %rd3333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2363}, %rd3333;
	}
	shf.r.wrap.b32 	%r2364, %r2363, %r2362, 28;
	shf.r.wrap.b32 	%r2365, %r2362, %r2363, 28;
	mov.b64 	%rd3347, {%r2365, %r2364};
	shf.l.wrap.b32 	%r2366, %r2362, %r2363, 30;
	shf.l.wrap.b32 	%r2367, %r2363, %r2362, 30;
	mov.b64 	%rd3348, {%r2367, %r2366};
	xor.b64  	%rd3349, %rd3348, %rd3347;
	shf.l.wrap.b32 	%r2368, %r2362, %r2363, 25;
	shf.l.wrap.b32 	%r2369, %r2363, %r2362, 25;
	mov.b64 	%rd3350, {%r2369, %r2368};
	xor.b64  	%rd3351, %rd3349, %rd3350;
	xor.b64  	%rd3352, %rd3333, %rd3228;
	xor.b64  	%rd3353, %rd3333, %rd3309;
	and.b64  	%rd3354, %rd3353, %rd3352;
	xor.b64  	%rd3355, %rd3354, %rd3333;
	add.s64 	%rd3356, %rd3345, %rd3355;
	add.s64 	%rd3357, %rd3356, %rd3351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2370,%dummy}, %rd3346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2371}, %rd3346;
	}
	shf.r.wrap.b32 	%r2372, %r2371, %r2370, 14;
	shf.r.wrap.b32 	%r2373, %r2370, %r2371, 14;
	mov.b64 	%rd3358, {%r2373, %r2372};
	shf.r.wrap.b32 	%r2374, %r2371, %r2370, 18;
	shf.r.wrap.b32 	%r2375, %r2370, %r2371, 18;
	mov.b64 	%rd3359, {%r2375, %r2374};
	xor.b64  	%rd3360, %rd3359, %rd3358;
	shf.l.wrap.b32 	%r2376, %r2370, %r2371, 23;
	shf.l.wrap.b32 	%r2377, %r2371, %r2370, 23;
	mov.b64 	%rd3361, {%r2377, %r2376};
	xor.b64  	%rd3362, %rd3360, %rd3361;
	xor.b64  	%rd3363, %rd3322, %rd3298;
	and.b64  	%rd3364, %rd3346, %rd3363;
	xor.b64  	%rd3365, %rd3364, %rd3298;
	add.s64 	%rd3366, %rd527, %rd3217;
	add.s64 	%rd3367, %rd3366, %rd736;
	add.s64 	%rd3368, %rd3367, %rd3365;
	add.s64 	%rd3369, %rd3368, %rd3362;
	add.s64 	%rd3370, %rd3369, %rd3228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2378,%dummy}, %rd3357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2379}, %rd3357;
	}
	shf.r.wrap.b32 	%r2380, %r2379, %r2378, 28;
	shf.r.wrap.b32 	%r2381, %r2378, %r2379, 28;
	mov.b64 	%rd3371, {%r2381, %r2380};
	shf.l.wrap.b32 	%r2382, %r2378, %r2379, 30;
	shf.l.wrap.b32 	%r2383, %r2379, %r2378, 30;
	mov.b64 	%rd3372, {%r2383, %r2382};
	xor.b64  	%rd3373, %rd3372, %rd3371;
	shf.l.wrap.b32 	%r2384, %r2378, %r2379, 25;
	shf.l.wrap.b32 	%r2385, %r2379, %r2378, 25;
	mov.b64 	%rd3374, {%r2385, %r2384};
	xor.b64  	%rd3375, %rd3373, %rd3374;
	xor.b64  	%rd3376, %rd3357, %rd3309;
	xor.b64  	%rd3377, %rd3357, %rd3333;
	and.b64  	%rd3378, %rd3377, %rd3376;
	xor.b64  	%rd3379, %rd3378, %rd3357;
	add.s64 	%rd3380, %rd3369, %rd3379;
	add.s64 	%rd3381, %rd3380, %rd3375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2386,%dummy}, %rd3370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2387}, %rd3370;
	}
	shf.r.wrap.b32 	%r2388, %r2387, %r2386, 14;
	shf.r.wrap.b32 	%r2389, %r2386, %r2387, 14;
	mov.b64 	%rd3382, {%r2389, %r2388};
	shf.r.wrap.b32 	%r2390, %r2387, %r2386, 18;
	shf.r.wrap.b32 	%r2391, %r2386, %r2387, 18;
	mov.b64 	%rd3383, {%r2391, %r2390};
	xor.b64  	%rd3384, %rd3383, %rd3382;
	shf.l.wrap.b32 	%r2392, %r2386, %r2387, 23;
	shf.l.wrap.b32 	%r2393, %r2387, %r2386, 23;
	mov.b64 	%rd3385, {%r2393, %r2392};
	xor.b64  	%rd3386, %rd3384, %rd3385;
	xor.b64  	%rd3387, %rd3346, %rd3322;
	and.b64  	%rd3388, %rd3370, %rd3387;
	xor.b64  	%rd3389, %rd3388, %rd3322;
	add.s64 	%rd3390, %rd3298, %rd539;
	add.s64 	%rd3391, %rd3390, %rd761;
	add.s64 	%rd3392, %rd3391, %rd3389;
	add.s64 	%rd3393, %rd3392, %rd3386;
	add.s64 	%rd3394, %rd3393, %rd3309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2394,%dummy}, %rd3381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2395}, %rd3381;
	}
	shf.r.wrap.b32 	%r2396, %r2395, %r2394, 28;
	shf.r.wrap.b32 	%r2397, %r2394, %r2395, 28;
	mov.b64 	%rd3395, {%r2397, %r2396};
	shf.l.wrap.b32 	%r2398, %r2394, %r2395, 30;
	shf.l.wrap.b32 	%r2399, %r2395, %r2394, 30;
	mov.b64 	%rd3396, {%r2399, %r2398};
	xor.b64  	%rd3397, %rd3396, %rd3395;
	shf.l.wrap.b32 	%r2400, %r2394, %r2395, 25;
	shf.l.wrap.b32 	%r2401, %r2395, %r2394, 25;
	mov.b64 	%rd3398, {%r2401, %r2400};
	xor.b64  	%rd3399, %rd3397, %rd3398;
	xor.b64  	%rd3400, %rd3381, %rd3333;
	xor.b64  	%rd3401, %rd3381, %rd3357;
	and.b64  	%rd3402, %rd3401, %rd3400;
	xor.b64  	%rd3403, %rd3402, %rd3381;
	add.s64 	%rd3404, %rd3393, %rd3403;
	add.s64 	%rd3405, %rd3404, %rd3399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2402,%dummy}, %rd3394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2403}, %rd3394;
	}
	shf.r.wrap.b32 	%r2404, %r2403, %r2402, 14;
	shf.r.wrap.b32 	%r2405, %r2402, %r2403, 14;
	mov.b64 	%rd3406, {%r2405, %r2404};
	shf.r.wrap.b32 	%r2406, %r2403, %r2402, 18;
	shf.r.wrap.b32 	%r2407, %r2402, %r2403, 18;
	mov.b64 	%rd3407, {%r2407, %r2406};
	xor.b64  	%rd3408, %rd3407, %rd3406;
	shf.l.wrap.b32 	%r2408, %r2402, %r2403, 23;
	shf.l.wrap.b32 	%r2409, %r2403, %r2402, 23;
	mov.b64 	%rd3409, {%r2409, %r2408};
	xor.b64  	%rd3410, %rd3408, %rd3409;
	xor.b64  	%rd3411, %rd3370, %rd3346;
	and.b64  	%rd3412, %rd3394, %rd3411;
	xor.b64  	%rd3413, %rd3412, %rd3346;
	add.s64 	%rd3414, %rd3322, %rd551;
	add.s64 	%rd3415, %rd3414, %rd786;
	add.s64 	%rd3416, %rd3415, %rd3413;
	add.s64 	%rd3417, %rd3416, %rd3410;
	add.s64 	%rd3418, %rd3417, %rd3333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2410,%dummy}, %rd3405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2411}, %rd3405;
	}
	shf.r.wrap.b32 	%r2412, %r2411, %r2410, 28;
	shf.r.wrap.b32 	%r2413, %r2410, %r2411, 28;
	mov.b64 	%rd3419, {%r2413, %r2412};
	shf.l.wrap.b32 	%r2414, %r2410, %r2411, 30;
	shf.l.wrap.b32 	%r2415, %r2411, %r2410, 30;
	mov.b64 	%rd3420, {%r2415, %r2414};
	xor.b64  	%rd3421, %rd3420, %rd3419;
	shf.l.wrap.b32 	%r2416, %r2410, %r2411, 25;
	shf.l.wrap.b32 	%r2417, %r2411, %r2410, 25;
	mov.b64 	%rd3422, {%r2417, %r2416};
	xor.b64  	%rd3423, %rd3421, %rd3422;
	xor.b64  	%rd3424, %rd3405, %rd3357;
	xor.b64  	%rd3425, %rd3405, %rd3381;
	and.b64  	%rd3426, %rd3425, %rd3424;
	xor.b64  	%rd3427, %rd3426, %rd3405;
	add.s64 	%rd3428, %rd3417, %rd3427;
	add.s64 	%rd3429, %rd3428, %rd3423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2418,%dummy}, %rd3418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2419}, %rd3418;
	}
	shf.r.wrap.b32 	%r2420, %r2419, %r2418, 14;
	shf.r.wrap.b32 	%r2421, %r2418, %r2419, 14;
	mov.b64 	%rd3430, {%r2421, %r2420};
	shf.r.wrap.b32 	%r2422, %r2419, %r2418, 18;
	shf.r.wrap.b32 	%r2423, %r2418, %r2419, 18;
	mov.b64 	%rd3431, {%r2423, %r2422};
	xor.b64  	%rd3432, %rd3431, %rd3430;
	shf.l.wrap.b32 	%r2424, %r2418, %r2419, 23;
	shf.l.wrap.b32 	%r2425, %r2419, %r2418, 23;
	mov.b64 	%rd3433, {%r2425, %r2424};
	xor.b64  	%rd3434, %rd3432, %rd3433;
	xor.b64  	%rd3435, %rd3394, %rd3370;
	and.b64  	%rd3436, %rd3418, %rd3435;
	xor.b64  	%rd3437, %rd3436, %rd3370;
	add.s64 	%rd3438, %rd3346, %rd564;
	add.s64 	%rd3439, %rd3438, %rd811;
	add.s64 	%rd3440, %rd3439, %rd3437;
	add.s64 	%rd3441, %rd3440, %rd3434;
	add.s64 	%rd3442, %rd3441, %rd3357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2426,%dummy}, %rd3429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2427}, %rd3429;
	}
	shf.r.wrap.b32 	%r2428, %r2427, %r2426, 28;
	shf.r.wrap.b32 	%r2429, %r2426, %r2427, 28;
	mov.b64 	%rd3443, {%r2429, %r2428};
	shf.l.wrap.b32 	%r2430, %r2426, %r2427, 30;
	shf.l.wrap.b32 	%r2431, %r2427, %r2426, 30;
	mov.b64 	%rd3444, {%r2431, %r2430};
	xor.b64  	%rd3445, %rd3444, %rd3443;
	shf.l.wrap.b32 	%r2432, %r2426, %r2427, 25;
	shf.l.wrap.b32 	%r2433, %r2427, %r2426, 25;
	mov.b64 	%rd3446, {%r2433, %r2432};
	xor.b64  	%rd3447, %rd3445, %rd3446;
	xor.b64  	%rd3448, %rd3429, %rd3381;
	xor.b64  	%rd3449, %rd3429, %rd3405;
	and.b64  	%rd3450, %rd3449, %rd3448;
	xor.b64  	%rd3451, %rd3450, %rd3429;
	add.s64 	%rd3452, %rd3441, %rd3451;
	add.s64 	%rd3453, %rd3452, %rd3447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2434,%dummy}, %rd3442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2435}, %rd3442;
	}
	shf.r.wrap.b32 	%r2436, %r2435, %r2434, 14;
	shf.r.wrap.b32 	%r2437, %r2434, %r2435, 14;
	mov.b64 	%rd3454, {%r2437, %r2436};
	shf.r.wrap.b32 	%r2438, %r2435, %r2434, 18;
	shf.r.wrap.b32 	%r2439, %r2434, %r2435, 18;
	mov.b64 	%rd3455, {%r2439, %r2438};
	xor.b64  	%rd3456, %rd3455, %rd3454;
	shf.l.wrap.b32 	%r2440, %r2434, %r2435, 23;
	shf.l.wrap.b32 	%r2441, %r2435, %r2434, 23;
	mov.b64 	%rd3457, {%r2441, %r2440};
	xor.b64  	%rd3458, %rd3456, %rd3457;
	xor.b64  	%rd3459, %rd3418, %rd3394;
	and.b64  	%rd3460, %rd3442, %rd3459;
	xor.b64  	%rd3461, %rd3460, %rd3394;
	add.s64 	%rd3462, %rd3370, %rd3234;
	add.s64 	%rd3463, %rd3462, %rd836;
	add.s64 	%rd3464, %rd3463, %rd3461;
	add.s64 	%rd3465, %rd3464, %rd3458;
	add.s64 	%rd3466, %rd3465, %rd3381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2442,%dummy}, %rd3453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2443}, %rd3453;
	}
	shf.r.wrap.b32 	%r2444, %r2443, %r2442, 28;
	shf.r.wrap.b32 	%r2445, %r2442, %r2443, 28;
	mov.b64 	%rd3467, {%r2445, %r2444};
	shf.l.wrap.b32 	%r2446, %r2442, %r2443, 30;
	shf.l.wrap.b32 	%r2447, %r2443, %r2442, 30;
	mov.b64 	%rd3468, {%r2447, %r2446};
	xor.b64  	%rd3469, %rd3468, %rd3467;
	shf.l.wrap.b32 	%r2448, %r2442, %r2443, 25;
	shf.l.wrap.b32 	%r2449, %r2443, %r2442, 25;
	mov.b64 	%rd3470, {%r2449, %r2448};
	xor.b64  	%rd3471, %rd3469, %rd3470;
	xor.b64  	%rd3472, %rd3453, %rd3405;
	xor.b64  	%rd3473, %rd3453, %rd3429;
	and.b64  	%rd3474, %rd3473, %rd3472;
	xor.b64  	%rd3475, %rd3474, %rd3453;
	add.s64 	%rd3476, %rd3465, %rd3475;
	add.s64 	%rd3477, %rd3476, %rd3471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2450,%dummy}, %rd3466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2451}, %rd3466;
	}
	shf.r.wrap.b32 	%r2452, %r2451, %r2450, 14;
	shf.r.wrap.b32 	%r2453, %r2450, %r2451, 14;
	mov.b64 	%rd3478, {%r2453, %r2452};
	shf.r.wrap.b32 	%r2454, %r2451, %r2450, 18;
	shf.r.wrap.b32 	%r2455, %r2450, %r2451, 18;
	mov.b64 	%rd3479, {%r2455, %r2454};
	xor.b64  	%rd3480, %rd3479, %rd3478;
	shf.l.wrap.b32 	%r2456, %r2450, %r2451, 23;
	shf.l.wrap.b32 	%r2457, %r2451, %r2450, 23;
	mov.b64 	%rd3481, {%r2457, %r2456};
	xor.b64  	%rd3482, %rd3480, %rd3481;
	xor.b64  	%rd3483, %rd3442, %rd3418;
	and.b64  	%rd3484, %rd3466, %rd3483;
	xor.b64  	%rd3485, %rd3484, %rd3418;
	add.s64 	%rd3486, %rd3394, %rd3235;
	add.s64 	%rd3487, %rd3486, %rd861;
	add.s64 	%rd3488, %rd3487, %rd3485;
	add.s64 	%rd3489, %rd3488, %rd3482;
	add.s64 	%rd3490, %rd3489, %rd3405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2458,%dummy}, %rd3477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2459}, %rd3477;
	}
	shf.r.wrap.b32 	%r2460, %r2459, %r2458, 28;
	shf.r.wrap.b32 	%r2461, %r2458, %r2459, 28;
	mov.b64 	%rd3491, {%r2461, %r2460};
	shf.l.wrap.b32 	%r2462, %r2458, %r2459, 30;
	shf.l.wrap.b32 	%r2463, %r2459, %r2458, 30;
	mov.b64 	%rd3492, {%r2463, %r2462};
	xor.b64  	%rd3493, %rd3492, %rd3491;
	shf.l.wrap.b32 	%r2464, %r2458, %r2459, 25;
	shf.l.wrap.b32 	%r2465, %r2459, %r2458, 25;
	mov.b64 	%rd3494, {%r2465, %r2464};
	xor.b64  	%rd3495, %rd3493, %rd3494;
	xor.b64  	%rd3496, %rd3477, %rd3429;
	xor.b64  	%rd3497, %rd3477, %rd3453;
	and.b64  	%rd3498, %rd3497, %rd3496;
	xor.b64  	%rd3499, %rd3498, %rd3477;
	add.s64 	%rd3500, %rd3489, %rd3499;
	add.s64 	%rd3501, %rd3500, %rd3495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2466,%dummy}, %rd3490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2467}, %rd3490;
	}
	shf.r.wrap.b32 	%r2468, %r2467, %r2466, 14;
	shf.r.wrap.b32 	%r2469, %r2466, %r2467, 14;
	mov.b64 	%rd3502, {%r2469, %r2468};
	shf.r.wrap.b32 	%r2470, %r2467, %r2466, 18;
	shf.r.wrap.b32 	%r2471, %r2466, %r2467, 18;
	mov.b64 	%rd3503, {%r2471, %r2470};
	xor.b64  	%rd3504, %rd3503, %rd3502;
	shf.l.wrap.b32 	%r2472, %r2466, %r2467, 23;
	shf.l.wrap.b32 	%r2473, %r2467, %r2466, 23;
	mov.b64 	%rd3505, {%r2473, %r2472};
	xor.b64  	%rd3506, %rd3504, %rd3505;
	xor.b64  	%rd3507, %rd3466, %rd3442;
	and.b64  	%rd3508, %rd3490, %rd3507;
	xor.b64  	%rd3509, %rd3508, %rd3442;
	add.s64 	%rd3510, %rd3418, %rd3242;
	add.s64 	%rd3511, %rd3510, %rd886;
	add.s64 	%rd3512, %rd3511, %rd3509;
	add.s64 	%rd3513, %rd3512, %rd3506;
	add.s64 	%rd3514, %rd3513, %rd3429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2474,%dummy}, %rd3501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2475}, %rd3501;
	}
	shf.r.wrap.b32 	%r2476, %r2475, %r2474, 28;
	shf.r.wrap.b32 	%r2477, %r2474, %r2475, 28;
	mov.b64 	%rd3515, {%r2477, %r2476};
	shf.l.wrap.b32 	%r2478, %r2474, %r2475, 30;
	shf.l.wrap.b32 	%r2479, %r2475, %r2474, 30;
	mov.b64 	%rd3516, {%r2479, %r2478};
	xor.b64  	%rd3517, %rd3516, %rd3515;
	shf.l.wrap.b32 	%r2480, %r2474, %r2475, 25;
	shf.l.wrap.b32 	%r2481, %r2475, %r2474, 25;
	mov.b64 	%rd3518, {%r2481, %r2480};
	xor.b64  	%rd3519, %rd3517, %rd3518;
	xor.b64  	%rd3520, %rd3501, %rd3453;
	xor.b64  	%rd3521, %rd3501, %rd3477;
	and.b64  	%rd3522, %rd3521, %rd3520;
	xor.b64  	%rd3523, %rd3522, %rd3501;
	add.s64 	%rd3524, %rd3513, %rd3523;
	add.s64 	%rd3525, %rd3524, %rd3519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2482,%dummy}, %rd3514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2483}, %rd3514;
	}
	shf.r.wrap.b32 	%r2484, %r2483, %r2482, 14;
	shf.r.wrap.b32 	%r2485, %r2482, %r2483, 14;
	mov.b64 	%rd3526, {%r2485, %r2484};
	shf.r.wrap.b32 	%r2486, %r2483, %r2482, 18;
	shf.r.wrap.b32 	%r2487, %r2482, %r2483, 18;
	mov.b64 	%rd3527, {%r2487, %r2486};
	xor.b64  	%rd3528, %rd3527, %rd3526;
	shf.l.wrap.b32 	%r2488, %r2482, %r2483, 23;
	shf.l.wrap.b32 	%r2489, %r2483, %r2482, 23;
	mov.b64 	%rd3529, {%r2489, %r2488};
	xor.b64  	%rd3530, %rd3528, %rd3529;
	xor.b64  	%rd3531, %rd3490, %rd3466;
	and.b64  	%rd3532, %rd3514, %rd3531;
	xor.b64  	%rd3533, %rd3532, %rd3466;
	add.s64 	%rd3534, %rd3442, %rd3249;
	add.s64 	%rd3535, %rd3534, %rd911;
	add.s64 	%rd3536, %rd3535, %rd3533;
	add.s64 	%rd3537, %rd3536, %rd3530;
	add.s64 	%rd3538, %rd3537, %rd3453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2490,%dummy}, %rd3525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2491}, %rd3525;
	}
	shf.r.wrap.b32 	%r2492, %r2491, %r2490, 28;
	shf.r.wrap.b32 	%r2493, %r2490, %r2491, 28;
	mov.b64 	%rd3539, {%r2493, %r2492};
	shf.l.wrap.b32 	%r2494, %r2490, %r2491, 30;
	shf.l.wrap.b32 	%r2495, %r2491, %r2490, 30;
	mov.b64 	%rd3540, {%r2495, %r2494};
	xor.b64  	%rd3541, %rd3540, %rd3539;
	shf.l.wrap.b32 	%r2496, %r2490, %r2491, 25;
	shf.l.wrap.b32 	%r2497, %r2491, %r2490, 25;
	mov.b64 	%rd3542, {%r2497, %r2496};
	xor.b64  	%rd3543, %rd3541, %rd3542;
	xor.b64  	%rd3544, %rd3525, %rd3477;
	xor.b64  	%rd3545, %rd3525, %rd3501;
	and.b64  	%rd3546, %rd3545, %rd3544;
	xor.b64  	%rd3547, %rd3546, %rd3525;
	add.s64 	%rd3548, %rd3537, %rd3547;
	add.s64 	%rd3549, %rd3548, %rd3543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2498,%dummy}, %rd3538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2499}, %rd3538;
	}
	shf.r.wrap.b32 	%r2500, %r2499, %r2498, 14;
	shf.r.wrap.b32 	%r2501, %r2498, %r2499, 14;
	mov.b64 	%rd3550, {%r2501, %r2500};
	shf.r.wrap.b32 	%r2502, %r2499, %r2498, 18;
	shf.r.wrap.b32 	%r2503, %r2498, %r2499, 18;
	mov.b64 	%rd3551, {%r2503, %r2502};
	xor.b64  	%rd3552, %rd3551, %rd3550;
	shf.l.wrap.b32 	%r2504, %r2498, %r2499, 23;
	shf.l.wrap.b32 	%r2505, %r2499, %r2498, 23;
	mov.b64 	%rd3553, {%r2505, %r2504};
	xor.b64  	%rd3554, %rd3552, %rd3553;
	xor.b64  	%rd3555, %rd3514, %rd3490;
	and.b64  	%rd3556, %rd3538, %rd3555;
	xor.b64  	%rd3557, %rd3556, %rd3490;
	add.s64 	%rd3558, %rd3466, %rd3256;
	add.s64 	%rd3559, %rd3558, %rd936;
	add.s64 	%rd3560, %rd3559, %rd3557;
	add.s64 	%rd3561, %rd3560, %rd3554;
	add.s64 	%rd3562, %rd3561, %rd3477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2506,%dummy}, %rd3549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2507}, %rd3549;
	}
	shf.r.wrap.b32 	%r2508, %r2507, %r2506, 28;
	shf.r.wrap.b32 	%r2509, %r2506, %r2507, 28;
	mov.b64 	%rd3563, {%r2509, %r2508};
	shf.l.wrap.b32 	%r2510, %r2506, %r2507, 30;
	shf.l.wrap.b32 	%r2511, %r2507, %r2506, 30;
	mov.b64 	%rd3564, {%r2511, %r2510};
	xor.b64  	%rd3565, %rd3564, %rd3563;
	shf.l.wrap.b32 	%r2512, %r2506, %r2507, 25;
	shf.l.wrap.b32 	%r2513, %r2507, %r2506, 25;
	mov.b64 	%rd3566, {%r2513, %r2512};
	xor.b64  	%rd3567, %rd3565, %rd3566;
	xor.b64  	%rd3568, %rd3549, %rd3501;
	xor.b64  	%rd3569, %rd3549, %rd3525;
	and.b64  	%rd3570, %rd3569, %rd3568;
	xor.b64  	%rd3571, %rd3570, %rd3549;
	add.s64 	%rd3572, %rd3561, %rd3571;
	add.s64 	%rd3573, %rd3572, %rd3567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2514,%dummy}, %rd3562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2515}, %rd3562;
	}
	shf.r.wrap.b32 	%r2516, %r2515, %r2514, 14;
	shf.r.wrap.b32 	%r2517, %r2514, %r2515, 14;
	mov.b64 	%rd3574, {%r2517, %r2516};
	shf.r.wrap.b32 	%r2518, %r2515, %r2514, 18;
	shf.r.wrap.b32 	%r2519, %r2514, %r2515, 18;
	mov.b64 	%rd3575, {%r2519, %r2518};
	xor.b64  	%rd3576, %rd3575, %rd3574;
	shf.l.wrap.b32 	%r2520, %r2514, %r2515, 23;
	shf.l.wrap.b32 	%r2521, %r2515, %r2514, 23;
	mov.b64 	%rd3577, {%r2521, %r2520};
	xor.b64  	%rd3578, %rd3576, %rd3577;
	xor.b64  	%rd3579, %rd3538, %rd3514;
	and.b64  	%rd3580, %rd3562, %rd3579;
	xor.b64  	%rd3581, %rd3580, %rd3514;
	add.s64 	%rd3582, %rd3490, %rd3263;
	add.s64 	%rd3583, %rd3582, %rd961;
	add.s64 	%rd3584, %rd3583, %rd3581;
	add.s64 	%rd3585, %rd3584, %rd3578;
	add.s64 	%rd3586, %rd3585, %rd3501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2522,%dummy}, %rd3573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2523}, %rd3573;
	}
	shf.r.wrap.b32 	%r2524, %r2523, %r2522, 28;
	shf.r.wrap.b32 	%r2525, %r2522, %r2523, 28;
	mov.b64 	%rd3587, {%r2525, %r2524};
	shf.l.wrap.b32 	%r2526, %r2522, %r2523, 30;
	shf.l.wrap.b32 	%r2527, %r2523, %r2522, 30;
	mov.b64 	%rd3588, {%r2527, %r2526};
	xor.b64  	%rd3589, %rd3588, %rd3587;
	shf.l.wrap.b32 	%r2528, %r2522, %r2523, 25;
	shf.l.wrap.b32 	%r2529, %r2523, %r2522, 25;
	mov.b64 	%rd3590, {%r2529, %r2528};
	xor.b64  	%rd3591, %rd3589, %rd3590;
	xor.b64  	%rd3592, %rd3573, %rd3525;
	xor.b64  	%rd3593, %rd3573, %rd3549;
	and.b64  	%rd3594, %rd3593, %rd3592;
	xor.b64  	%rd3595, %rd3594, %rd3573;
	add.s64 	%rd3596, %rd3585, %rd3595;
	add.s64 	%rd3597, %rd3596, %rd3591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2530,%dummy}, %rd3586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2531}, %rd3586;
	}
	shf.r.wrap.b32 	%r2532, %r2531, %r2530, 14;
	shf.r.wrap.b32 	%r2533, %r2530, %r2531, 14;
	mov.b64 	%rd3598, {%r2533, %r2532};
	shf.r.wrap.b32 	%r2534, %r2531, %r2530, 18;
	shf.r.wrap.b32 	%r2535, %r2530, %r2531, 18;
	mov.b64 	%rd3599, {%r2535, %r2534};
	xor.b64  	%rd3600, %rd3599, %rd3598;
	shf.l.wrap.b32 	%r2536, %r2530, %r2531, 23;
	shf.l.wrap.b32 	%r2537, %r2531, %r2530, 23;
	mov.b64 	%rd3601, {%r2537, %r2536};
	xor.b64  	%rd3602, %rd3600, %rd3601;
	xor.b64  	%rd3603, %rd3562, %rd3538;
	and.b64  	%rd3604, %rd3586, %rd3603;
	xor.b64  	%rd3605, %rd3604, %rd3538;
	add.s64 	%rd3606, %rd3514, %rd3270;
	add.s64 	%rd3607, %rd3606, %rd986;
	add.s64 	%rd3608, %rd3607, %rd3605;
	add.s64 	%rd3609, %rd3608, %rd3602;
	add.s64 	%rd3610, %rd3609, %rd3525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2538,%dummy}, %rd3597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2539}, %rd3597;
	}
	shf.r.wrap.b32 	%r2540, %r2539, %r2538, 28;
	shf.r.wrap.b32 	%r2541, %r2538, %r2539, 28;
	mov.b64 	%rd3611, {%r2541, %r2540};
	shf.l.wrap.b32 	%r2542, %r2538, %r2539, 30;
	shf.l.wrap.b32 	%r2543, %r2539, %r2538, 30;
	mov.b64 	%rd3612, {%r2543, %r2542};
	xor.b64  	%rd3613, %rd3612, %rd3611;
	shf.l.wrap.b32 	%r2544, %r2538, %r2539, 25;
	shf.l.wrap.b32 	%r2545, %r2539, %r2538, 25;
	mov.b64 	%rd3614, {%r2545, %r2544};
	xor.b64  	%rd3615, %rd3613, %rd3614;
	xor.b64  	%rd3616, %rd3597, %rd3549;
	xor.b64  	%rd3617, %rd3597, %rd3573;
	and.b64  	%rd3618, %rd3617, %rd3616;
	xor.b64  	%rd3619, %rd3618, %rd3597;
	add.s64 	%rd3620, %rd3609, %rd3619;
	add.s64 	%rd3621, %rd3620, %rd3615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2546,%dummy}, %rd3610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2547}, %rd3610;
	}
	shf.r.wrap.b32 	%r2548, %r2547, %r2546, 14;
	shf.r.wrap.b32 	%r2549, %r2546, %r2547, 14;
	mov.b64 	%rd3622, {%r2549, %r2548};
	shf.r.wrap.b32 	%r2550, %r2547, %r2546, 18;
	shf.r.wrap.b32 	%r2551, %r2546, %r2547, 18;
	mov.b64 	%rd3623, {%r2551, %r2550};
	xor.b64  	%rd3624, %rd3623, %rd3622;
	shf.l.wrap.b32 	%r2552, %r2546, %r2547, 23;
	shf.l.wrap.b32 	%r2553, %r2547, %r2546, 23;
	mov.b64 	%rd3625, {%r2553, %r2552};
	xor.b64  	%rd3626, %rd3624, %rd3625;
	xor.b64  	%rd3627, %rd3586, %rd3562;
	and.b64  	%rd3628, %rd3610, %rd3627;
	xor.b64  	%rd3629, %rd3628, %rd3562;
	add.s64 	%rd3630, %rd3538, %rd3277;
	add.s64 	%rd3631, %rd3630, %rd1011;
	add.s64 	%rd3632, %rd3631, %rd3629;
	add.s64 	%rd3633, %rd3632, %rd3626;
	add.s64 	%rd3634, %rd3633, %rd3549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2554,%dummy}, %rd3621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2555}, %rd3621;
	}
	shf.r.wrap.b32 	%r2556, %r2555, %r2554, 28;
	shf.r.wrap.b32 	%r2557, %r2554, %r2555, 28;
	mov.b64 	%rd3635, {%r2557, %r2556};
	shf.l.wrap.b32 	%r2558, %r2554, %r2555, 30;
	shf.l.wrap.b32 	%r2559, %r2555, %r2554, 30;
	mov.b64 	%rd3636, {%r2559, %r2558};
	xor.b64  	%rd3637, %rd3636, %rd3635;
	shf.l.wrap.b32 	%r2560, %r2554, %r2555, 25;
	shf.l.wrap.b32 	%r2561, %r2555, %r2554, 25;
	mov.b64 	%rd3638, {%r2561, %r2560};
	xor.b64  	%rd3639, %rd3637, %rd3638;
	xor.b64  	%rd3640, %rd3621, %rd3573;
	xor.b64  	%rd3641, %rd3621, %rd3597;
	and.b64  	%rd3642, %rd3641, %rd3640;
	xor.b64  	%rd3643, %rd3642, %rd3621;
	add.s64 	%rd3644, %rd3633, %rd3643;
	add.s64 	%rd3645, %rd3644, %rd3639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2562,%dummy}, %rd3634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2563}, %rd3634;
	}
	shf.r.wrap.b32 	%r2564, %r2563, %r2562, 14;
	shf.r.wrap.b32 	%r2565, %r2562, %r2563, 14;
	mov.b64 	%rd3646, {%r2565, %r2564};
	shf.r.wrap.b32 	%r2566, %r2563, %r2562, 18;
	shf.r.wrap.b32 	%r2567, %r2562, %r2563, 18;
	mov.b64 	%rd3647, {%r2567, %r2566};
	xor.b64  	%rd3648, %rd3647, %rd3646;
	shf.l.wrap.b32 	%r2568, %r2562, %r2563, 23;
	shf.l.wrap.b32 	%r2569, %r2563, %r2562, 23;
	mov.b64 	%rd3649, {%r2569, %r2568};
	xor.b64  	%rd3650, %rd3648, %rd3649;
	xor.b64  	%rd3651, %rd3610, %rd3586;
	and.b64  	%rd3652, %rd3634, %rd3651;
	xor.b64  	%rd3653, %rd3652, %rd3586;
	add.s64 	%rd3654, %rd3562, %rd3285;
	add.s64 	%rd3655, %rd3654, %rd1036;
	add.s64 	%rd3656, %rd3655, %rd3653;
	add.s64 	%rd3657, %rd3656, %rd3650;
	add.s64 	%rd3658, %rd3657, %rd3573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2570,%dummy}, %rd3645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2571}, %rd3645;
	}
	shf.r.wrap.b32 	%r2572, %r2571, %r2570, 28;
	shf.r.wrap.b32 	%r2573, %r2570, %r2571, 28;
	mov.b64 	%rd3659, {%r2573, %r2572};
	shf.l.wrap.b32 	%r2574, %r2570, %r2571, 30;
	shf.l.wrap.b32 	%r2575, %r2571, %r2570, 30;
	mov.b64 	%rd3660, {%r2575, %r2574};
	xor.b64  	%rd3661, %rd3660, %rd3659;
	shf.l.wrap.b32 	%r2576, %r2570, %r2571, 25;
	shf.l.wrap.b32 	%r2577, %r2571, %r2570, 25;
	mov.b64 	%rd3662, {%r2577, %r2576};
	xor.b64  	%rd3663, %rd3661, %rd3662;
	xor.b64  	%rd3664, %rd3645, %rd3597;
	xor.b64  	%rd3665, %rd3645, %rd3621;
	and.b64  	%rd3666, %rd3665, %rd3664;
	xor.b64  	%rd3667, %rd3666, %rd3645;
	add.s64 	%rd3668, %rd3657, %rd3667;
	add.s64 	%rd3669, %rd3668, %rd3663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2578,%dummy}, %rd3277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2579}, %rd3277;
	}
	shf.r.wrap.b32 	%r2580, %r2579, %r2578, 19;
	shf.r.wrap.b32 	%r2581, %r2578, %r2579, 19;
	mov.b64 	%rd3670, {%r2581, %r2580};
	shf.l.wrap.b32 	%r2582, %r2578, %r2579, 3;
	shf.l.wrap.b32 	%r2583, %r2579, %r2578, 3;
	mov.b64 	%rd3671, {%r2583, %r2582};
	shr.u64 	%rd3672, %rd3277, 6;
	xor.b64  	%rd3673, %rd3670, %rd3672;
	xor.b64  	%rd3674, %rd3673, %rd3671;
	add.s64 	%rd3675, %rd491, %rd3242;
	add.s64 	%rd3676, %rd3675, %rd3674;
	add.s64 	%rd3677, %rd3676, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2584,%dummy}, %rd3285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2585}, %rd3285;
	}
	shf.r.wrap.b32 	%r2586, %r2585, %r2584, 19;
	shf.r.wrap.b32 	%r2587, %r2584, %r2585, 19;
	mov.b64 	%rd3678, {%r2587, %r2586};
	shf.l.wrap.b32 	%r2588, %r2584, %r2585, 3;
	shf.l.wrap.b32 	%r2589, %r2585, %r2584, 3;
	mov.b64 	%rd3679, {%r2589, %r2588};
	shr.u64 	%rd3680, %rd3285, 6;
	xor.b64  	%rd3681, %rd3678, %rd3680;
	xor.b64  	%rd3682, %rd3681, %rd3679;
	add.s64 	%rd3683, %rd503, %rd3249;
	add.s64 	%rd3684, %rd3683, %rd3682;
	add.s64 	%rd3685, %rd3684, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2590,%dummy}, %rd3677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2591}, %rd3677;
	}
	shf.r.wrap.b32 	%r2592, %r2591, %r2590, 19;
	shf.r.wrap.b32 	%r2593, %r2590, %r2591, 19;
	mov.b64 	%rd3686, {%r2593, %r2592};
	shf.l.wrap.b32 	%r2594, %r2590, %r2591, 3;
	shf.l.wrap.b32 	%r2595, %r2591, %r2590, 3;
	mov.b64 	%rd3687, {%r2595, %r2594};
	shr.u64 	%rd3688, %rd3677, 6;
	xor.b64  	%rd3689, %rd3686, %rd3688;
	xor.b64  	%rd3690, %rd3689, %rd3687;
	add.s64 	%rd3691, %rd515, %rd3256;
	add.s64 	%rd3692, %rd3691, %rd3690;
	add.s64 	%rd3693, %rd3692, %rd1087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2596,%dummy}, %rd3685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2597}, %rd3685;
	}
	shf.r.wrap.b32 	%r2598, %r2597, %r2596, 19;
	shf.r.wrap.b32 	%r2599, %r2596, %r2597, 19;
	mov.b64 	%rd3694, {%r2599, %r2598};
	shf.l.wrap.b32 	%r2600, %r2596, %r2597, 3;
	shf.l.wrap.b32 	%r2601, %r2597, %r2596, 3;
	mov.b64 	%rd3695, {%r2601, %r2600};
	shr.u64 	%rd3696, %rd3685, 6;
	xor.b64  	%rd3697, %rd3694, %rd3696;
	xor.b64  	%rd3698, %rd3697, %rd3695;
	add.s64 	%rd3699, %rd3263, %rd527;
	add.s64 	%rd3700, %rd3699, %rd3698;
	add.s64 	%rd3701, %rd3700, %rd1100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2602,%dummy}, %rd3693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2603}, %rd3693;
	}
	shf.r.wrap.b32 	%r2604, %r2603, %r2602, 19;
	shf.r.wrap.b32 	%r2605, %r2602, %r2603, 19;
	mov.b64 	%rd3702, {%r2605, %r2604};
	shf.l.wrap.b32 	%r2606, %r2602, %r2603, 3;
	shf.l.wrap.b32 	%r2607, %r2603, %r2602, 3;
	mov.b64 	%rd3703, {%r2607, %r2606};
	shr.u64 	%rd3704, %rd3693, 6;
	xor.b64  	%rd3705, %rd3702, %rd3704;
	xor.b64  	%rd3706, %rd3705, %rd3703;
	add.s64 	%rd3707, %rd3270, %rd539;
	add.s64 	%rd3708, %rd3707, %rd3706;
	add.s64 	%rd3709, %rd3708, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2608,%dummy}, %rd3701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2609}, %rd3701;
	}
	shf.r.wrap.b32 	%r2610, %r2609, %r2608, 19;
	shf.r.wrap.b32 	%r2611, %r2608, %r2609, 19;
	mov.b64 	%rd3710, {%r2611, %r2610};
	shf.l.wrap.b32 	%r2612, %r2608, %r2609, 3;
	shf.l.wrap.b32 	%r2613, %r2609, %r2608, 3;
	mov.b64 	%rd3711, {%r2613, %r2612};
	shr.u64 	%rd3712, %rd3701, 6;
	xor.b64  	%rd3713, %rd3710, %rd3712;
	xor.b64  	%rd3714, %rd3713, %rd3711;
	add.s64 	%rd3715, %rd3277, %rd551;
	add.s64 	%rd3716, %rd3715, %rd3714;
	add.s64 	%rd3717, %rd3716, %rd1126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2614,%dummy}, %rd3709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2615}, %rd3709;
	}
	shf.r.wrap.b32 	%r2616, %r2615, %r2614, 19;
	shf.r.wrap.b32 	%r2617, %r2614, %r2615, 19;
	mov.b64 	%rd3718, {%r2617, %r2616};
	shf.l.wrap.b32 	%r2618, %r2614, %r2615, 3;
	shf.l.wrap.b32 	%r2619, %r2615, %r2614, 3;
	mov.b64 	%rd3719, {%r2619, %r2618};
	shr.u64 	%rd3720, %rd3709, 6;
	xor.b64  	%rd3721, %rd3718, %rd3720;
	xor.b64  	%rd3722, %rd3721, %rd3719;
	shf.r.wrap.b32 	%r2620, %r2281, %r2280, 1;
	shf.r.wrap.b32 	%r2621, %r2280, %r2281, 1;
	mov.b64 	%rd3723, {%r2621, %r2620};
	shf.r.wrap.b32 	%r2622, %r2281, %r2280, 8;
	shf.r.wrap.b32 	%r2623, %r2280, %r2281, 8;
	mov.b64 	%rd3724, {%r2623, %r2622};
	shr.u64 	%rd3725, %rd3234, 7;
	xor.b64  	%rd3726, %rd3723, %rd3725;
	xor.b64  	%rd3727, %rd3726, %rd3724;
	add.s64 	%rd3728, %rd3285, %rd564;
	add.s64 	%rd3729, %rd3728, %rd3722;
	add.s64 	%rd3730, %rd3729, %rd3727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2624,%dummy}, %rd3717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2625}, %rd3717;
	}
	shf.r.wrap.b32 	%r2626, %r2625, %r2624, 19;
	shf.r.wrap.b32 	%r2627, %r2624, %r2625, 19;
	mov.b64 	%rd3731, {%r2627, %r2626};
	shf.l.wrap.b32 	%r2628, %r2624, %r2625, 3;
	shf.l.wrap.b32 	%r2629, %r2625, %r2624, 3;
	mov.b64 	%rd3732, {%r2629, %r2628};
	shr.u64 	%rd3733, %rd3717, 6;
	xor.b64  	%rd3734, %rd3731, %rd3733;
	xor.b64  	%rd3735, %rd3734, %rd3732;
	shf.r.wrap.b32 	%r2630, %r2287, %r2286, 1;
	shf.r.wrap.b32 	%r2631, %r2286, %r2287, 1;
	mov.b64 	%rd3736, {%r2631, %r2630};
	shf.r.wrap.b32 	%r2632, %r2287, %r2286, 8;
	shf.r.wrap.b32 	%r2633, %r2286, %r2287, 8;
	mov.b64 	%rd3737, {%r2633, %r2632};
	shr.u64 	%rd3738, %rd3235, 7;
	xor.b64  	%rd3739, %rd3736, %rd3738;
	xor.b64  	%rd3740, %rd3739, %rd3737;
	add.s64 	%rd3741, %rd3677, %rd3234;
	add.s64 	%rd3742, %rd3741, %rd3735;
	add.s64 	%rd3743, %rd3742, %rd3740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2634,%dummy}, %rd3730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2635}, %rd3730;
	}
	shf.r.wrap.b32 	%r2636, %r2635, %r2634, 19;
	shf.r.wrap.b32 	%r2637, %r2634, %r2635, 19;
	mov.b64 	%rd3744, {%r2637, %r2636};
	shf.l.wrap.b32 	%r2638, %r2634, %r2635, 3;
	shf.l.wrap.b32 	%r2639, %r2635, %r2634, 3;
	mov.b64 	%rd3745, {%r2639, %r2638};
	shr.u64 	%rd3746, %rd3730, 6;
	xor.b64  	%rd3747, %rd3744, %rd3746;
	xor.b64  	%rd3748, %rd3747, %rd3745;
	shf.r.wrap.b32 	%r2640, %r2293, %r2292, 1;
	shf.r.wrap.b32 	%r2641, %r2292, %r2293, 1;
	mov.b64 	%rd3749, {%r2641, %r2640};
	shf.r.wrap.b32 	%r2642, %r2293, %r2292, 8;
	shf.r.wrap.b32 	%r2643, %r2292, %r2293, 8;
	mov.b64 	%rd3750, {%r2643, %r2642};
	shr.u64 	%rd3751, %rd3242, 7;
	xor.b64  	%rd3752, %rd3749, %rd3751;
	xor.b64  	%rd3753, %rd3752, %rd3750;
	add.s64 	%rd3754, %rd3685, %rd3235;
	add.s64 	%rd3755, %rd3754, %rd3748;
	add.s64 	%rd3756, %rd3755, %rd3753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2644,%dummy}, %rd3743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2645}, %rd3743;
	}
	shf.r.wrap.b32 	%r2646, %r2645, %r2644, 19;
	shf.r.wrap.b32 	%r2647, %r2644, %r2645, 19;
	mov.b64 	%rd3757, {%r2647, %r2646};
	shf.l.wrap.b32 	%r2648, %r2644, %r2645, 3;
	shf.l.wrap.b32 	%r2649, %r2645, %r2644, 3;
	mov.b64 	%rd3758, {%r2649, %r2648};
	shr.u64 	%rd3759, %rd3743, 6;
	xor.b64  	%rd3760, %rd3757, %rd3759;
	xor.b64  	%rd3761, %rd3760, %rd3758;
	shf.r.wrap.b32 	%r2650, %r2299, %r2298, 1;
	shf.r.wrap.b32 	%r2651, %r2298, %r2299, 1;
	mov.b64 	%rd3762, {%r2651, %r2650};
	shf.r.wrap.b32 	%r2652, %r2299, %r2298, 8;
	shf.r.wrap.b32 	%r2653, %r2298, %r2299, 8;
	mov.b64 	%rd3763, {%r2653, %r2652};
	shr.u64 	%rd3764, %rd3249, 7;
	xor.b64  	%rd3765, %rd3762, %rd3764;
	xor.b64  	%rd3766, %rd3765, %rd3763;
	add.s64 	%rd3767, %rd3693, %rd3242;
	add.s64 	%rd3768, %rd3767, %rd3761;
	add.s64 	%rd3769, %rd3768, %rd3766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2654,%dummy}, %rd3756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2655}, %rd3756;
	}
	shf.r.wrap.b32 	%r2656, %r2655, %r2654, 19;
	shf.r.wrap.b32 	%r2657, %r2654, %r2655, 19;
	mov.b64 	%rd3770, {%r2657, %r2656};
	shf.l.wrap.b32 	%r2658, %r2654, %r2655, 3;
	shf.l.wrap.b32 	%r2659, %r2655, %r2654, 3;
	mov.b64 	%rd3771, {%r2659, %r2658};
	shr.u64 	%rd3772, %rd3756, 6;
	xor.b64  	%rd3773, %rd3770, %rd3772;
	xor.b64  	%rd3774, %rd3773, %rd3771;
	shf.r.wrap.b32 	%r2660, %r2305, %r2304, 1;
	shf.r.wrap.b32 	%r2661, %r2304, %r2305, 1;
	mov.b64 	%rd3775, {%r2661, %r2660};
	shf.r.wrap.b32 	%r2662, %r2305, %r2304, 8;
	shf.r.wrap.b32 	%r2663, %r2304, %r2305, 8;
	mov.b64 	%rd3776, {%r2663, %r2662};
	shr.u64 	%rd3777, %rd3256, 7;
	xor.b64  	%rd3778, %rd3775, %rd3777;
	xor.b64  	%rd3779, %rd3778, %rd3776;
	add.s64 	%rd3780, %rd3701, %rd3249;
	add.s64 	%rd3781, %rd3780, %rd3774;
	add.s64 	%rd3782, %rd3781, %rd3779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2664,%dummy}, %rd3769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2665}, %rd3769;
	}
	shf.r.wrap.b32 	%r2666, %r2665, %r2664, 19;
	shf.r.wrap.b32 	%r2667, %r2664, %r2665, 19;
	mov.b64 	%rd3783, {%r2667, %r2666};
	shf.l.wrap.b32 	%r2668, %r2664, %r2665, 3;
	shf.l.wrap.b32 	%r2669, %r2665, %r2664, 3;
	mov.b64 	%rd3784, {%r2669, %r2668};
	shr.u64 	%rd3785, %rd3769, 6;
	xor.b64  	%rd3786, %rd3783, %rd3785;
	xor.b64  	%rd3787, %rd3786, %rd3784;
	shf.r.wrap.b32 	%r2670, %r2311, %r2310, 1;
	shf.r.wrap.b32 	%r2671, %r2310, %r2311, 1;
	mov.b64 	%rd3788, {%r2671, %r2670};
	shf.r.wrap.b32 	%r2672, %r2311, %r2310, 8;
	shf.r.wrap.b32 	%r2673, %r2310, %r2311, 8;
	mov.b64 	%rd3789, {%r2673, %r2672};
	shr.u64 	%rd3790, %rd3263, 7;
	xor.b64  	%rd3791, %rd3788, %rd3790;
	xor.b64  	%rd3792, %rd3791, %rd3789;
	add.s64 	%rd3793, %rd3709, %rd3256;
	add.s64 	%rd3794, %rd3793, %rd3787;
	add.s64 	%rd3795, %rd3794, %rd3792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2674,%dummy}, %rd3782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2675}, %rd3782;
	}
	shf.r.wrap.b32 	%r2676, %r2675, %r2674, 19;
	shf.r.wrap.b32 	%r2677, %r2674, %r2675, 19;
	mov.b64 	%rd3796, {%r2677, %r2676};
	shf.l.wrap.b32 	%r2678, %r2674, %r2675, 3;
	shf.l.wrap.b32 	%r2679, %r2675, %r2674, 3;
	mov.b64 	%rd3797, {%r2679, %r2678};
	shr.u64 	%rd3798, %rd3782, 6;
	xor.b64  	%rd3799, %rd3796, %rd3798;
	xor.b64  	%rd3800, %rd3799, %rd3797;
	shf.r.wrap.b32 	%r2680, %r2317, %r2316, 1;
	shf.r.wrap.b32 	%r2681, %r2316, %r2317, 1;
	mov.b64 	%rd3801, {%r2681, %r2680};
	shf.r.wrap.b32 	%r2682, %r2317, %r2316, 8;
	shf.r.wrap.b32 	%r2683, %r2316, %r2317, 8;
	mov.b64 	%rd3802, {%r2683, %r2682};
	shr.u64 	%rd3803, %rd3270, 7;
	xor.b64  	%rd3804, %rd3801, %rd3803;
	xor.b64  	%rd3805, %rd3804, %rd3802;
	add.s64 	%rd3806, %rd3717, %rd3263;
	add.s64 	%rd3807, %rd3806, %rd3800;
	add.s64 	%rd3808, %rd3807, %rd3805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2684,%dummy}, %rd3795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2685}, %rd3795;
	}
	shf.r.wrap.b32 	%r2686, %r2685, %r2684, 19;
	shf.r.wrap.b32 	%r2687, %r2684, %r2685, 19;
	mov.b64 	%rd3809, {%r2687, %r2686};
	shf.l.wrap.b32 	%r2688, %r2684, %r2685, 3;
	shf.l.wrap.b32 	%r2689, %r2685, %r2684, 3;
	mov.b64 	%rd3810, {%r2689, %r2688};
	shr.u64 	%rd3811, %rd3795, 6;
	xor.b64  	%rd3812, %rd3809, %rd3811;
	xor.b64  	%rd3813, %rd3812, %rd3810;
	shf.r.wrap.b32 	%r2690, %r2579, %r2578, 1;
	shf.r.wrap.b32 	%r2691, %r2578, %r2579, 1;
	mov.b64 	%rd3814, {%r2691, %r2690};
	shf.r.wrap.b32 	%r2692, %r2579, %r2578, 8;
	shf.r.wrap.b32 	%r2693, %r2578, %r2579, 8;
	mov.b64 	%rd3815, {%r2693, %r2692};
	shr.u64 	%rd3816, %rd3277, 7;
	xor.b64  	%rd3817, %rd3814, %rd3816;
	xor.b64  	%rd3818, %rd3817, %rd3815;
	add.s64 	%rd3819, %rd3730, %rd3270;
	add.s64 	%rd3820, %rd3819, %rd3813;
	add.s64 	%rd3821, %rd3820, %rd3818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2694,%dummy}, %rd3808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2695}, %rd3808;
	}
	shf.r.wrap.b32 	%r2696, %r2695, %r2694, 19;
	shf.r.wrap.b32 	%r2697, %r2694, %r2695, 19;
	mov.b64 	%rd3822, {%r2697, %r2696};
	shf.l.wrap.b32 	%r2698, %r2694, %r2695, 3;
	shf.l.wrap.b32 	%r2699, %r2695, %r2694, 3;
	mov.b64 	%rd3823, {%r2699, %r2698};
	shr.u64 	%rd3824, %rd3808, 6;
	xor.b64  	%rd3825, %rd3822, %rd3824;
	xor.b64  	%rd3826, %rd3825, %rd3823;
	shf.r.wrap.b32 	%r2700, %r2585, %r2584, 1;
	shf.r.wrap.b32 	%r2701, %r2584, %r2585, 1;
	mov.b64 	%rd3827, {%r2701, %r2700};
	shf.r.wrap.b32 	%r2702, %r2585, %r2584, 8;
	shf.r.wrap.b32 	%r2703, %r2584, %r2585, 8;
	mov.b64 	%rd3828, {%r2703, %r2702};
	shr.u64 	%rd3829, %rd3285, 7;
	xor.b64  	%rd3830, %rd3827, %rd3829;
	xor.b64  	%rd3831, %rd3830, %rd3828;
	add.s64 	%rd3832, %rd3743, %rd3277;
	add.s64 	%rd3833, %rd3832, %rd3826;
	add.s64 	%rd3834, %rd3833, %rd3831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2704,%dummy}, %rd3821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2705}, %rd3821;
	}
	shf.r.wrap.b32 	%r2706, %r2705, %r2704, 19;
	shf.r.wrap.b32 	%r2707, %r2704, %r2705, 19;
	mov.b64 	%rd3835, {%r2707, %r2706};
	shf.l.wrap.b32 	%r2708, %r2704, %r2705, 3;
	shf.l.wrap.b32 	%r2709, %r2705, %r2704, 3;
	mov.b64 	%rd3836, {%r2709, %r2708};
	shr.u64 	%rd3837, %rd3821, 6;
	xor.b64  	%rd3838, %rd3835, %rd3837;
	xor.b64  	%rd3839, %rd3838, %rd3836;
	shf.r.wrap.b32 	%r2710, %r2591, %r2590, 1;
	shf.r.wrap.b32 	%r2711, %r2590, %r2591, 1;
	mov.b64 	%rd3840, {%r2711, %r2710};
	shf.r.wrap.b32 	%r2712, %r2591, %r2590, 8;
	shf.r.wrap.b32 	%r2713, %r2590, %r2591, 8;
	mov.b64 	%rd3841, {%r2713, %r2712};
	shr.u64 	%rd3842, %rd3677, 7;
	xor.b64  	%rd3843, %rd3840, %rd3842;
	xor.b64  	%rd3844, %rd3843, %rd3841;
	add.s64 	%rd3845, %rd3756, %rd3285;
	add.s64 	%rd3846, %rd3845, %rd3839;
	add.s64 	%rd3847, %rd3846, %rd3844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2714,%dummy}, %rd3658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2715}, %rd3658;
	}
	shf.r.wrap.b32 	%r2716, %r2715, %r2714, 14;
	shf.r.wrap.b32 	%r2717, %r2714, %r2715, 14;
	mov.b64 	%rd3848, {%r2717, %r2716};
	shf.r.wrap.b32 	%r2718, %r2715, %r2714, 18;
	shf.r.wrap.b32 	%r2719, %r2714, %r2715, 18;
	mov.b64 	%rd3849, {%r2719, %r2718};
	xor.b64  	%rd3850, %rd3849, %rd3848;
	shf.l.wrap.b32 	%r2720, %r2714, %r2715, 23;
	shf.l.wrap.b32 	%r2721, %r2715, %r2714, 23;
	mov.b64 	%rd3851, {%r2721, %r2720};
	xor.b64  	%rd3852, %rd3850, %rd3851;
	xor.b64  	%rd3853, %rd3634, %rd3610;
	and.b64  	%rd3854, %rd3853, %rd3658;
	xor.b64  	%rd3855, %rd3854, %rd3610;
	add.s64 	%rd3856, %rd3855, %rd3586;
	add.s64 	%rd3857, %rd3856, %rd3677;
	add.s64 	%rd3858, %rd3857, %rd1270;
	add.s64 	%rd3859, %rd3858, %rd3852;
	add.s64 	%rd3860, %rd3859, %rd3597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2722,%dummy}, %rd3669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2723}, %rd3669;
	}
	shf.r.wrap.b32 	%r2724, %r2723, %r2722, 28;
	shf.r.wrap.b32 	%r2725, %r2722, %r2723, 28;
	mov.b64 	%rd3861, {%r2725, %r2724};
	shf.l.wrap.b32 	%r2726, %r2722, %r2723, 30;
	shf.l.wrap.b32 	%r2727, %r2723, %r2722, 30;
	mov.b64 	%rd3862, {%r2727, %r2726};
	xor.b64  	%rd3863, %rd3862, %rd3861;
	shf.l.wrap.b32 	%r2728, %r2722, %r2723, 25;
	shf.l.wrap.b32 	%r2729, %r2723, %r2722, 25;
	mov.b64 	%rd3864, {%r2729, %r2728};
	xor.b64  	%rd3865, %rd3863, %rd3864;
	xor.b64  	%rd3866, %rd3669, %rd3621;
	xor.b64  	%rd3867, %rd3669, %rd3645;
	and.b64  	%rd3868, %rd3867, %rd3866;
	xor.b64  	%rd3869, %rd3868, %rd3669;
	add.s64 	%rd3870, %rd3859, %rd3869;
	add.s64 	%rd3871, %rd3870, %rd3865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2730,%dummy}, %rd3860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2731}, %rd3860;
	}
	shf.r.wrap.b32 	%r2732, %r2731, %r2730, 14;
	shf.r.wrap.b32 	%r2733, %r2730, %r2731, 14;
	mov.b64 	%rd3872, {%r2733, %r2732};
	shf.r.wrap.b32 	%r2734, %r2731, %r2730, 18;
	shf.r.wrap.b32 	%r2735, %r2730, %r2731, 18;
	mov.b64 	%rd3873, {%r2735, %r2734};
	xor.b64  	%rd3874, %rd3873, %rd3872;
	shf.l.wrap.b32 	%r2736, %r2730, %r2731, 23;
	shf.l.wrap.b32 	%r2737, %r2731, %r2730, 23;
	mov.b64 	%rd3875, {%r2737, %r2736};
	xor.b64  	%rd3876, %rd3874, %rd3875;
	xor.b64  	%rd3877, %rd3658, %rd3634;
	and.b64  	%rd3878, %rd3860, %rd3877;
	xor.b64  	%rd3879, %rd3878, %rd3634;
	add.s64 	%rd3880, %rd3685, %rd3610;
	add.s64 	%rd3881, %rd3880, %rd1294;
	add.s64 	%rd3882, %rd3881, %rd3879;
	add.s64 	%rd3883, %rd3882, %rd3876;
	add.s64 	%rd3884, %rd3883, %rd3621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2738,%dummy}, %rd3871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2739}, %rd3871;
	}
	shf.r.wrap.b32 	%r2740, %r2739, %r2738, 28;
	shf.r.wrap.b32 	%r2741, %r2738, %r2739, 28;
	mov.b64 	%rd3885, {%r2741, %r2740};
	shf.l.wrap.b32 	%r2742, %r2738, %r2739, 30;
	shf.l.wrap.b32 	%r2743, %r2739, %r2738, 30;
	mov.b64 	%rd3886, {%r2743, %r2742};
	xor.b64  	%rd3887, %rd3886, %rd3885;
	shf.l.wrap.b32 	%r2744, %r2738, %r2739, 25;
	shf.l.wrap.b32 	%r2745, %r2739, %r2738, 25;
	mov.b64 	%rd3888, {%r2745, %r2744};
	xor.b64  	%rd3889, %rd3887, %rd3888;
	xor.b64  	%rd3890, %rd3871, %rd3645;
	xor.b64  	%rd3891, %rd3871, %rd3669;
	and.b64  	%rd3892, %rd3891, %rd3890;
	xor.b64  	%rd3893, %rd3892, %rd3871;
	add.s64 	%rd3894, %rd3883, %rd3893;
	add.s64 	%rd3895, %rd3894, %rd3889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2746,%dummy}, %rd3884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2747}, %rd3884;
	}
	shf.r.wrap.b32 	%r2748, %r2747, %r2746, 14;
	shf.r.wrap.b32 	%r2749, %r2746, %r2747, 14;
	mov.b64 	%rd3896, {%r2749, %r2748};
	shf.r.wrap.b32 	%r2750, %r2747, %r2746, 18;
	shf.r.wrap.b32 	%r2751, %r2746, %r2747, 18;
	mov.b64 	%rd3897, {%r2751, %r2750};
	xor.b64  	%rd3898, %rd3897, %rd3896;
	shf.l.wrap.b32 	%r2752, %r2746, %r2747, 23;
	shf.l.wrap.b32 	%r2753, %r2747, %r2746, 23;
	mov.b64 	%rd3899, {%r2753, %r2752};
	xor.b64  	%rd3900, %rd3898, %rd3899;
	xor.b64  	%rd3901, %rd3860, %rd3658;
	and.b64  	%rd3902, %rd3884, %rd3901;
	xor.b64  	%rd3903, %rd3902, %rd3658;
	add.s64 	%rd3904, %rd3693, %rd3634;
	add.s64 	%rd3905, %rd3904, %rd1319;
	add.s64 	%rd3906, %rd3905, %rd3903;
	add.s64 	%rd3907, %rd3906, %rd3900;
	add.s64 	%rd3908, %rd3907, %rd3645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2754,%dummy}, %rd3895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2755}, %rd3895;
	}
	shf.r.wrap.b32 	%r2756, %r2755, %r2754, 28;
	shf.r.wrap.b32 	%r2757, %r2754, %r2755, 28;
	mov.b64 	%rd3909, {%r2757, %r2756};
	shf.l.wrap.b32 	%r2758, %r2754, %r2755, 30;
	shf.l.wrap.b32 	%r2759, %r2755, %r2754, 30;
	mov.b64 	%rd3910, {%r2759, %r2758};
	xor.b64  	%rd3911, %rd3910, %rd3909;
	shf.l.wrap.b32 	%r2760, %r2754, %r2755, 25;
	shf.l.wrap.b32 	%r2761, %r2755, %r2754, 25;
	mov.b64 	%rd3912, {%r2761, %r2760};
	xor.b64  	%rd3913, %rd3911, %rd3912;
	xor.b64  	%rd3914, %rd3895, %rd3669;
	xor.b64  	%rd3915, %rd3895, %rd3871;
	and.b64  	%rd3916, %rd3915, %rd3914;
	xor.b64  	%rd3917, %rd3916, %rd3895;
	add.s64 	%rd3918, %rd3907, %rd3917;
	add.s64 	%rd3919, %rd3918, %rd3913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2762,%dummy}, %rd3908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2763}, %rd3908;
	}
	shf.r.wrap.b32 	%r2764, %r2763, %r2762, 14;
	shf.r.wrap.b32 	%r2765, %r2762, %r2763, 14;
	mov.b64 	%rd3920, {%r2765, %r2764};
	shf.r.wrap.b32 	%r2766, %r2763, %r2762, 18;
	shf.r.wrap.b32 	%r2767, %r2762, %r2763, 18;
	mov.b64 	%rd3921, {%r2767, %r2766};
	xor.b64  	%rd3922, %rd3921, %rd3920;
	shf.l.wrap.b32 	%r2768, %r2762, %r2763, 23;
	shf.l.wrap.b32 	%r2769, %r2763, %r2762, 23;
	mov.b64 	%rd3923, {%r2769, %r2768};
	xor.b64  	%rd3924, %rd3922, %rd3923;
	xor.b64  	%rd3925, %rd3884, %rd3860;
	and.b64  	%rd3926, %rd3908, %rd3925;
	xor.b64  	%rd3927, %rd3926, %rd3860;
	add.s64 	%rd3928, %rd3701, %rd3658;
	add.s64 	%rd3929, %rd3928, %rd1344;
	add.s64 	%rd3930, %rd3929, %rd3927;
	add.s64 	%rd3931, %rd3930, %rd3924;
	add.s64 	%rd3932, %rd3931, %rd3669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2770,%dummy}, %rd3919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2771}, %rd3919;
	}
	shf.r.wrap.b32 	%r2772, %r2771, %r2770, 28;
	shf.r.wrap.b32 	%r2773, %r2770, %r2771, 28;
	mov.b64 	%rd3933, {%r2773, %r2772};
	shf.l.wrap.b32 	%r2774, %r2770, %r2771, 30;
	shf.l.wrap.b32 	%r2775, %r2771, %r2770, 30;
	mov.b64 	%rd3934, {%r2775, %r2774};
	xor.b64  	%rd3935, %rd3934, %rd3933;
	shf.l.wrap.b32 	%r2776, %r2770, %r2771, 25;
	shf.l.wrap.b32 	%r2777, %r2771, %r2770, 25;
	mov.b64 	%rd3936, {%r2777, %r2776};
	xor.b64  	%rd3937, %rd3935, %rd3936;
	xor.b64  	%rd3938, %rd3919, %rd3871;
	xor.b64  	%rd3939, %rd3919, %rd3895;
	and.b64  	%rd3940, %rd3939, %rd3938;
	xor.b64  	%rd3941, %rd3940, %rd3919;
	add.s64 	%rd3942, %rd3931, %rd3941;
	add.s64 	%rd3943, %rd3942, %rd3937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2778,%dummy}, %rd3932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2779}, %rd3932;
	}
	shf.r.wrap.b32 	%r2780, %r2779, %r2778, 14;
	shf.r.wrap.b32 	%r2781, %r2778, %r2779, 14;
	mov.b64 	%rd3944, {%r2781, %r2780};
	shf.r.wrap.b32 	%r2782, %r2779, %r2778, 18;
	shf.r.wrap.b32 	%r2783, %r2778, %r2779, 18;
	mov.b64 	%rd3945, {%r2783, %r2782};
	xor.b64  	%rd3946, %rd3945, %rd3944;
	shf.l.wrap.b32 	%r2784, %r2778, %r2779, 23;
	shf.l.wrap.b32 	%r2785, %r2779, %r2778, 23;
	mov.b64 	%rd3947, {%r2785, %r2784};
	xor.b64  	%rd3948, %rd3946, %rd3947;
	xor.b64  	%rd3949, %rd3908, %rd3884;
	and.b64  	%rd3950, %rd3932, %rd3949;
	xor.b64  	%rd3951, %rd3950, %rd3884;
	add.s64 	%rd3952, %rd3860, %rd3709;
	add.s64 	%rd3953, %rd3952, %rd1369;
	add.s64 	%rd3954, %rd3953, %rd3951;
	add.s64 	%rd3955, %rd3954, %rd3948;
	add.s64 	%rd3956, %rd3955, %rd3871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2786,%dummy}, %rd3943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2787}, %rd3943;
	}
	shf.r.wrap.b32 	%r2788, %r2787, %r2786, 28;
	shf.r.wrap.b32 	%r2789, %r2786, %r2787, 28;
	mov.b64 	%rd3957, {%r2789, %r2788};
	shf.l.wrap.b32 	%r2790, %r2786, %r2787, 30;
	shf.l.wrap.b32 	%r2791, %r2787, %r2786, 30;
	mov.b64 	%rd3958, {%r2791, %r2790};
	xor.b64  	%rd3959, %rd3958, %rd3957;
	shf.l.wrap.b32 	%r2792, %r2786, %r2787, 25;
	shf.l.wrap.b32 	%r2793, %r2787, %r2786, 25;
	mov.b64 	%rd3960, {%r2793, %r2792};
	xor.b64  	%rd3961, %rd3959, %rd3960;
	xor.b64  	%rd3962, %rd3943, %rd3895;
	xor.b64  	%rd3963, %rd3943, %rd3919;
	and.b64  	%rd3964, %rd3963, %rd3962;
	xor.b64  	%rd3965, %rd3964, %rd3943;
	add.s64 	%rd3966, %rd3955, %rd3965;
	add.s64 	%rd3967, %rd3966, %rd3961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2794,%dummy}, %rd3956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2795}, %rd3956;
	}
	shf.r.wrap.b32 	%r2796, %r2795, %r2794, 14;
	shf.r.wrap.b32 	%r2797, %r2794, %r2795, 14;
	mov.b64 	%rd3968, {%r2797, %r2796};
	shf.r.wrap.b32 	%r2798, %r2795, %r2794, 18;
	shf.r.wrap.b32 	%r2799, %r2794, %r2795, 18;
	mov.b64 	%rd3969, {%r2799, %r2798};
	xor.b64  	%rd3970, %rd3969, %rd3968;
	shf.l.wrap.b32 	%r2800, %r2794, %r2795, 23;
	shf.l.wrap.b32 	%r2801, %r2795, %r2794, 23;
	mov.b64 	%rd3971, {%r2801, %r2800};
	xor.b64  	%rd3972, %rd3970, %rd3971;
	xor.b64  	%rd3973, %rd3932, %rd3908;
	and.b64  	%rd3974, %rd3956, %rd3973;
	xor.b64  	%rd3975, %rd3974, %rd3908;
	add.s64 	%rd3976, %rd3884, %rd3717;
	add.s64 	%rd3977, %rd3976, %rd1394;
	add.s64 	%rd3978, %rd3977, %rd3975;
	add.s64 	%rd3979, %rd3978, %rd3972;
	add.s64 	%rd3980, %rd3979, %rd3895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2802,%dummy}, %rd3967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2803}, %rd3967;
	}
	shf.r.wrap.b32 	%r2804, %r2803, %r2802, 28;
	shf.r.wrap.b32 	%r2805, %r2802, %r2803, 28;
	mov.b64 	%rd3981, {%r2805, %r2804};
	shf.l.wrap.b32 	%r2806, %r2802, %r2803, 30;
	shf.l.wrap.b32 	%r2807, %r2803, %r2802, 30;
	mov.b64 	%rd3982, {%r2807, %r2806};
	xor.b64  	%rd3983, %rd3982, %rd3981;
	shf.l.wrap.b32 	%r2808, %r2802, %r2803, 25;
	shf.l.wrap.b32 	%r2809, %r2803, %r2802, 25;
	mov.b64 	%rd3984, {%r2809, %r2808};
	xor.b64  	%rd3985, %rd3983, %rd3984;
	xor.b64  	%rd3986, %rd3967, %rd3919;
	xor.b64  	%rd3987, %rd3967, %rd3943;
	and.b64  	%rd3988, %rd3987, %rd3986;
	xor.b64  	%rd3989, %rd3988, %rd3967;
	add.s64 	%rd3990, %rd3979, %rd3989;
	add.s64 	%rd3991, %rd3990, %rd3985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2810,%dummy}, %rd3980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2811}, %rd3980;
	}
	shf.r.wrap.b32 	%r2812, %r2811, %r2810, 14;
	shf.r.wrap.b32 	%r2813, %r2810, %r2811, 14;
	mov.b64 	%rd3992, {%r2813, %r2812};
	shf.r.wrap.b32 	%r2814, %r2811, %r2810, 18;
	shf.r.wrap.b32 	%r2815, %r2810, %r2811, 18;
	mov.b64 	%rd3993, {%r2815, %r2814};
	xor.b64  	%rd3994, %rd3993, %rd3992;
	shf.l.wrap.b32 	%r2816, %r2810, %r2811, 23;
	shf.l.wrap.b32 	%r2817, %r2811, %r2810, 23;
	mov.b64 	%rd3995, {%r2817, %r2816};
	xor.b64  	%rd3996, %rd3994, %rd3995;
	xor.b64  	%rd3997, %rd3956, %rd3932;
	and.b64  	%rd3998, %rd3980, %rd3997;
	xor.b64  	%rd3999, %rd3998, %rd3932;
	add.s64 	%rd4000, %rd3908, %rd3730;
	add.s64 	%rd4001, %rd4000, %rd1419;
	add.s64 	%rd4002, %rd4001, %rd3999;
	add.s64 	%rd4003, %rd4002, %rd3996;
	add.s64 	%rd4004, %rd4003, %rd3919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2818,%dummy}, %rd3991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2819}, %rd3991;
	}
	shf.r.wrap.b32 	%r2820, %r2819, %r2818, 28;
	shf.r.wrap.b32 	%r2821, %r2818, %r2819, 28;
	mov.b64 	%rd4005, {%r2821, %r2820};
	shf.l.wrap.b32 	%r2822, %r2818, %r2819, 30;
	shf.l.wrap.b32 	%r2823, %r2819, %r2818, 30;
	mov.b64 	%rd4006, {%r2823, %r2822};
	xor.b64  	%rd4007, %rd4006, %rd4005;
	shf.l.wrap.b32 	%r2824, %r2818, %r2819, 25;
	shf.l.wrap.b32 	%r2825, %r2819, %r2818, 25;
	mov.b64 	%rd4008, {%r2825, %r2824};
	xor.b64  	%rd4009, %rd4007, %rd4008;
	xor.b64  	%rd4010, %rd3991, %rd3943;
	xor.b64  	%rd4011, %rd3991, %rd3967;
	and.b64  	%rd4012, %rd4011, %rd4010;
	xor.b64  	%rd4013, %rd4012, %rd3991;
	add.s64 	%rd4014, %rd4003, %rd4013;
	add.s64 	%rd4015, %rd4014, %rd4009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2826,%dummy}, %rd4004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2827}, %rd4004;
	}
	shf.r.wrap.b32 	%r2828, %r2827, %r2826, 14;
	shf.r.wrap.b32 	%r2829, %r2826, %r2827, 14;
	mov.b64 	%rd4016, {%r2829, %r2828};
	shf.r.wrap.b32 	%r2830, %r2827, %r2826, 18;
	shf.r.wrap.b32 	%r2831, %r2826, %r2827, 18;
	mov.b64 	%rd4017, {%r2831, %r2830};
	xor.b64  	%rd4018, %rd4017, %rd4016;
	shf.l.wrap.b32 	%r2832, %r2826, %r2827, 23;
	shf.l.wrap.b32 	%r2833, %r2827, %r2826, 23;
	mov.b64 	%rd4019, {%r2833, %r2832};
	xor.b64  	%rd4020, %rd4018, %rd4019;
	xor.b64  	%rd4021, %rd3980, %rd3956;
	and.b64  	%rd4022, %rd4004, %rd4021;
	xor.b64  	%rd4023, %rd4022, %rd3956;
	add.s64 	%rd4024, %rd3932, %rd3743;
	add.s64 	%rd4025, %rd4024, %rd1444;
	add.s64 	%rd4026, %rd4025, %rd4023;
	add.s64 	%rd4027, %rd4026, %rd4020;
	add.s64 	%rd4028, %rd4027, %rd3943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2834,%dummy}, %rd4015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2835}, %rd4015;
	}
	shf.r.wrap.b32 	%r2836, %r2835, %r2834, 28;
	shf.r.wrap.b32 	%r2837, %r2834, %r2835, 28;
	mov.b64 	%rd4029, {%r2837, %r2836};
	shf.l.wrap.b32 	%r2838, %r2834, %r2835, 30;
	shf.l.wrap.b32 	%r2839, %r2835, %r2834, 30;
	mov.b64 	%rd4030, {%r2839, %r2838};
	xor.b64  	%rd4031, %rd4030, %rd4029;
	shf.l.wrap.b32 	%r2840, %r2834, %r2835, 25;
	shf.l.wrap.b32 	%r2841, %r2835, %r2834, 25;
	mov.b64 	%rd4032, {%r2841, %r2840};
	xor.b64  	%rd4033, %rd4031, %rd4032;
	xor.b64  	%rd4034, %rd4015, %rd3967;
	xor.b64  	%rd4035, %rd4015, %rd3991;
	and.b64  	%rd4036, %rd4035, %rd4034;
	xor.b64  	%rd4037, %rd4036, %rd4015;
	add.s64 	%rd4038, %rd4027, %rd4037;
	add.s64 	%rd4039, %rd4038, %rd4033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2842,%dummy}, %rd4028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2843}, %rd4028;
	}
	shf.r.wrap.b32 	%r2844, %r2843, %r2842, 14;
	shf.r.wrap.b32 	%r2845, %r2842, %r2843, 14;
	mov.b64 	%rd4040, {%r2845, %r2844};
	shf.r.wrap.b32 	%r2846, %r2843, %r2842, 18;
	shf.r.wrap.b32 	%r2847, %r2842, %r2843, 18;
	mov.b64 	%rd4041, {%r2847, %r2846};
	xor.b64  	%rd4042, %rd4041, %rd4040;
	shf.l.wrap.b32 	%r2848, %r2842, %r2843, 23;
	shf.l.wrap.b32 	%r2849, %r2843, %r2842, 23;
	mov.b64 	%rd4043, {%r2849, %r2848};
	xor.b64  	%rd4044, %rd4042, %rd4043;
	xor.b64  	%rd4045, %rd4004, %rd3980;
	and.b64  	%rd4046, %rd4028, %rd4045;
	xor.b64  	%rd4047, %rd4046, %rd3980;
	add.s64 	%rd4048, %rd3956, %rd3756;
	add.s64 	%rd4049, %rd4048, %rd1469;
	add.s64 	%rd4050, %rd4049, %rd4047;
	add.s64 	%rd4051, %rd4050, %rd4044;
	add.s64 	%rd4052, %rd4051, %rd3967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2850,%dummy}, %rd4039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2851}, %rd4039;
	}
	shf.r.wrap.b32 	%r2852, %r2851, %r2850, 28;
	shf.r.wrap.b32 	%r2853, %r2850, %r2851, 28;
	mov.b64 	%rd4053, {%r2853, %r2852};
	shf.l.wrap.b32 	%r2854, %r2850, %r2851, 30;
	shf.l.wrap.b32 	%r2855, %r2851, %r2850, 30;
	mov.b64 	%rd4054, {%r2855, %r2854};
	xor.b64  	%rd4055, %rd4054, %rd4053;
	shf.l.wrap.b32 	%r2856, %r2850, %r2851, 25;
	shf.l.wrap.b32 	%r2857, %r2851, %r2850, 25;
	mov.b64 	%rd4056, {%r2857, %r2856};
	xor.b64  	%rd4057, %rd4055, %rd4056;
	xor.b64  	%rd4058, %rd4039, %rd3991;
	xor.b64  	%rd4059, %rd4039, %rd4015;
	and.b64  	%rd4060, %rd4059, %rd4058;
	xor.b64  	%rd4061, %rd4060, %rd4039;
	add.s64 	%rd4062, %rd4051, %rd4061;
	add.s64 	%rd4063, %rd4062, %rd4057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2858,%dummy}, %rd4052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2859}, %rd4052;
	}
	shf.r.wrap.b32 	%r2860, %r2859, %r2858, 14;
	shf.r.wrap.b32 	%r2861, %r2858, %r2859, 14;
	mov.b64 	%rd4064, {%r2861, %r2860};
	shf.r.wrap.b32 	%r2862, %r2859, %r2858, 18;
	shf.r.wrap.b32 	%r2863, %r2858, %r2859, 18;
	mov.b64 	%rd4065, {%r2863, %r2862};
	xor.b64  	%rd4066, %rd4065, %rd4064;
	shf.l.wrap.b32 	%r2864, %r2858, %r2859, 23;
	shf.l.wrap.b32 	%r2865, %r2859, %r2858, 23;
	mov.b64 	%rd4067, {%r2865, %r2864};
	xor.b64  	%rd4068, %rd4066, %rd4067;
	xor.b64  	%rd4069, %rd4028, %rd4004;
	and.b64  	%rd4070, %rd4052, %rd4069;
	xor.b64  	%rd4071, %rd4070, %rd4004;
	add.s64 	%rd4072, %rd3980, %rd3769;
	add.s64 	%rd4073, %rd4072, %rd1494;
	add.s64 	%rd4074, %rd4073, %rd4071;
	add.s64 	%rd4075, %rd4074, %rd4068;
	add.s64 	%rd4076, %rd4075, %rd3991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2866,%dummy}, %rd4063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2867}, %rd4063;
	}
	shf.r.wrap.b32 	%r2868, %r2867, %r2866, 28;
	shf.r.wrap.b32 	%r2869, %r2866, %r2867, 28;
	mov.b64 	%rd4077, {%r2869, %r2868};
	shf.l.wrap.b32 	%r2870, %r2866, %r2867, 30;
	shf.l.wrap.b32 	%r2871, %r2867, %r2866, 30;
	mov.b64 	%rd4078, {%r2871, %r2870};
	xor.b64  	%rd4079, %rd4078, %rd4077;
	shf.l.wrap.b32 	%r2872, %r2866, %r2867, 25;
	shf.l.wrap.b32 	%r2873, %r2867, %r2866, 25;
	mov.b64 	%rd4080, {%r2873, %r2872};
	xor.b64  	%rd4081, %rd4079, %rd4080;
	xor.b64  	%rd4082, %rd4063, %rd4015;
	xor.b64  	%rd4083, %rd4063, %rd4039;
	and.b64  	%rd4084, %rd4083, %rd4082;
	xor.b64  	%rd4085, %rd4084, %rd4063;
	add.s64 	%rd4086, %rd4075, %rd4085;
	add.s64 	%rd4087, %rd4086, %rd4081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2874,%dummy}, %rd4076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2875}, %rd4076;
	}
	shf.r.wrap.b32 	%r2876, %r2875, %r2874, 14;
	shf.r.wrap.b32 	%r2877, %r2874, %r2875, 14;
	mov.b64 	%rd4088, {%r2877, %r2876};
	shf.r.wrap.b32 	%r2878, %r2875, %r2874, 18;
	shf.r.wrap.b32 	%r2879, %r2874, %r2875, 18;
	mov.b64 	%rd4089, {%r2879, %r2878};
	xor.b64  	%rd4090, %rd4089, %rd4088;
	shf.l.wrap.b32 	%r2880, %r2874, %r2875, 23;
	shf.l.wrap.b32 	%r2881, %r2875, %r2874, 23;
	mov.b64 	%rd4091, {%r2881, %r2880};
	xor.b64  	%rd4092, %rd4090, %rd4091;
	xor.b64  	%rd4093, %rd4052, %rd4028;
	and.b64  	%rd4094, %rd4076, %rd4093;
	xor.b64  	%rd4095, %rd4094, %rd4028;
	add.s64 	%rd4096, %rd4004, %rd3782;
	add.s64 	%rd4097, %rd4096, %rd1519;
	add.s64 	%rd4098, %rd4097, %rd4095;
	add.s64 	%rd4099, %rd4098, %rd4092;
	add.s64 	%rd4100, %rd4099, %rd4015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2882,%dummy}, %rd4087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2883}, %rd4087;
	}
	shf.r.wrap.b32 	%r2884, %r2883, %r2882, 28;
	shf.r.wrap.b32 	%r2885, %r2882, %r2883, 28;
	mov.b64 	%rd4101, {%r2885, %r2884};
	shf.l.wrap.b32 	%r2886, %r2882, %r2883, 30;
	shf.l.wrap.b32 	%r2887, %r2883, %r2882, 30;
	mov.b64 	%rd4102, {%r2887, %r2886};
	xor.b64  	%rd4103, %rd4102, %rd4101;
	shf.l.wrap.b32 	%r2888, %r2882, %r2883, 25;
	shf.l.wrap.b32 	%r2889, %r2883, %r2882, 25;
	mov.b64 	%rd4104, {%r2889, %r2888};
	xor.b64  	%rd4105, %rd4103, %rd4104;
	xor.b64  	%rd4106, %rd4087, %rd4039;
	xor.b64  	%rd4107, %rd4087, %rd4063;
	and.b64  	%rd4108, %rd4107, %rd4106;
	xor.b64  	%rd4109, %rd4108, %rd4087;
	add.s64 	%rd4110, %rd4099, %rd4109;
	add.s64 	%rd4111, %rd4110, %rd4105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2890,%dummy}, %rd4100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2891}, %rd4100;
	}
	shf.r.wrap.b32 	%r2892, %r2891, %r2890, 14;
	shf.r.wrap.b32 	%r2893, %r2890, %r2891, 14;
	mov.b64 	%rd4112, {%r2893, %r2892};
	shf.r.wrap.b32 	%r2894, %r2891, %r2890, 18;
	shf.r.wrap.b32 	%r2895, %r2890, %r2891, 18;
	mov.b64 	%rd4113, {%r2895, %r2894};
	xor.b64  	%rd4114, %rd4113, %rd4112;
	shf.l.wrap.b32 	%r2896, %r2890, %r2891, 23;
	shf.l.wrap.b32 	%r2897, %r2891, %r2890, 23;
	mov.b64 	%rd4115, {%r2897, %r2896};
	xor.b64  	%rd4116, %rd4114, %rd4115;
	xor.b64  	%rd4117, %rd4076, %rd4052;
	and.b64  	%rd4118, %rd4100, %rd4117;
	xor.b64  	%rd4119, %rd4118, %rd4052;
	add.s64 	%rd4120, %rd4028, %rd3795;
	add.s64 	%rd4121, %rd4120, %rd1544;
	add.s64 	%rd4122, %rd4121, %rd4119;
	add.s64 	%rd4123, %rd4122, %rd4116;
	add.s64 	%rd4124, %rd4123, %rd4039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2898,%dummy}, %rd4111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2899}, %rd4111;
	}
	shf.r.wrap.b32 	%r2900, %r2899, %r2898, 28;
	shf.r.wrap.b32 	%r2901, %r2898, %r2899, 28;
	mov.b64 	%rd4125, {%r2901, %r2900};
	shf.l.wrap.b32 	%r2902, %r2898, %r2899, 30;
	shf.l.wrap.b32 	%r2903, %r2899, %r2898, 30;
	mov.b64 	%rd4126, {%r2903, %r2902};
	xor.b64  	%rd4127, %rd4126, %rd4125;
	shf.l.wrap.b32 	%r2904, %r2898, %r2899, 25;
	shf.l.wrap.b32 	%r2905, %r2899, %r2898, 25;
	mov.b64 	%rd4128, {%r2905, %r2904};
	xor.b64  	%rd4129, %rd4127, %rd4128;
	xor.b64  	%rd4130, %rd4111, %rd4063;
	xor.b64  	%rd4131, %rd4111, %rd4087;
	and.b64  	%rd4132, %rd4131, %rd4130;
	xor.b64  	%rd4133, %rd4132, %rd4111;
	add.s64 	%rd4134, %rd4123, %rd4133;
	add.s64 	%rd4135, %rd4134, %rd4129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2906,%dummy}, %rd4124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2907}, %rd4124;
	}
	shf.r.wrap.b32 	%r2908, %r2907, %r2906, 14;
	shf.r.wrap.b32 	%r2909, %r2906, %r2907, 14;
	mov.b64 	%rd4136, {%r2909, %r2908};
	shf.r.wrap.b32 	%r2910, %r2907, %r2906, 18;
	shf.r.wrap.b32 	%r2911, %r2906, %r2907, 18;
	mov.b64 	%rd4137, {%r2911, %r2910};
	xor.b64  	%rd4138, %rd4137, %rd4136;
	shf.l.wrap.b32 	%r2912, %r2906, %r2907, 23;
	shf.l.wrap.b32 	%r2913, %r2907, %r2906, 23;
	mov.b64 	%rd4139, {%r2913, %r2912};
	xor.b64  	%rd4140, %rd4138, %rd4139;
	xor.b64  	%rd4141, %rd4100, %rd4076;
	and.b64  	%rd4142, %rd4124, %rd4141;
	xor.b64  	%rd4143, %rd4142, %rd4076;
	add.s64 	%rd4144, %rd4052, %rd3808;
	add.s64 	%rd4145, %rd4144, %rd1569;
	add.s64 	%rd4146, %rd4145, %rd4143;
	add.s64 	%rd4147, %rd4146, %rd4140;
	add.s64 	%rd4148, %rd4147, %rd4063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2914,%dummy}, %rd4135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2915}, %rd4135;
	}
	shf.r.wrap.b32 	%r2916, %r2915, %r2914, 28;
	shf.r.wrap.b32 	%r2917, %r2914, %r2915, 28;
	mov.b64 	%rd4149, {%r2917, %r2916};
	shf.l.wrap.b32 	%r2918, %r2914, %r2915, 30;
	shf.l.wrap.b32 	%r2919, %r2915, %r2914, 30;
	mov.b64 	%rd4150, {%r2919, %r2918};
	xor.b64  	%rd4151, %rd4150, %rd4149;
	shf.l.wrap.b32 	%r2920, %r2914, %r2915, 25;
	shf.l.wrap.b32 	%r2921, %r2915, %r2914, 25;
	mov.b64 	%rd4152, {%r2921, %r2920};
	xor.b64  	%rd4153, %rd4151, %rd4152;
	xor.b64  	%rd4154, %rd4135, %rd4087;
	xor.b64  	%rd4155, %rd4135, %rd4111;
	and.b64  	%rd4156, %rd4155, %rd4154;
	xor.b64  	%rd4157, %rd4156, %rd4135;
	add.s64 	%rd4158, %rd4147, %rd4157;
	add.s64 	%rd4159, %rd4158, %rd4153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2922,%dummy}, %rd4148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2923}, %rd4148;
	}
	shf.r.wrap.b32 	%r2924, %r2923, %r2922, 14;
	shf.r.wrap.b32 	%r2925, %r2922, %r2923, 14;
	mov.b64 	%rd4160, {%r2925, %r2924};
	shf.r.wrap.b32 	%r2926, %r2923, %r2922, 18;
	shf.r.wrap.b32 	%r2927, %r2922, %r2923, 18;
	mov.b64 	%rd4161, {%r2927, %r2926};
	xor.b64  	%rd4162, %rd4161, %rd4160;
	shf.l.wrap.b32 	%r2928, %r2922, %r2923, 23;
	shf.l.wrap.b32 	%r2929, %r2923, %r2922, 23;
	mov.b64 	%rd4163, {%r2929, %r2928};
	xor.b64  	%rd4164, %rd4162, %rd4163;
	xor.b64  	%rd4165, %rd4124, %rd4100;
	and.b64  	%rd4166, %rd4148, %rd4165;
	xor.b64  	%rd4167, %rd4166, %rd4100;
	add.s64 	%rd4168, %rd4076, %rd3821;
	add.s64 	%rd4169, %rd4168, %rd1594;
	add.s64 	%rd4170, %rd4169, %rd4167;
	add.s64 	%rd4171, %rd4170, %rd4164;
	add.s64 	%rd4172, %rd4171, %rd4087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2930,%dummy}, %rd4159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2931}, %rd4159;
	}
	shf.r.wrap.b32 	%r2932, %r2931, %r2930, 28;
	shf.r.wrap.b32 	%r2933, %r2930, %r2931, 28;
	mov.b64 	%rd4173, {%r2933, %r2932};
	shf.l.wrap.b32 	%r2934, %r2930, %r2931, 30;
	shf.l.wrap.b32 	%r2935, %r2931, %r2930, 30;
	mov.b64 	%rd4174, {%r2935, %r2934};
	xor.b64  	%rd4175, %rd4174, %rd4173;
	shf.l.wrap.b32 	%r2936, %r2930, %r2931, 25;
	shf.l.wrap.b32 	%r2937, %r2931, %r2930, 25;
	mov.b64 	%rd4176, {%r2937, %r2936};
	xor.b64  	%rd4177, %rd4175, %rd4176;
	xor.b64  	%rd4178, %rd4159, %rd4111;
	xor.b64  	%rd4179, %rd4159, %rd4135;
	and.b64  	%rd4180, %rd4179, %rd4178;
	xor.b64  	%rd4181, %rd4180, %rd4159;
	add.s64 	%rd4182, %rd4171, %rd4181;
	add.s64 	%rd4183, %rd4182, %rd4177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2938,%dummy}, %rd4172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2939}, %rd4172;
	}
	shf.r.wrap.b32 	%r2940, %r2939, %r2938, 14;
	shf.r.wrap.b32 	%r2941, %r2938, %r2939, 14;
	mov.b64 	%rd4184, {%r2941, %r2940};
	shf.r.wrap.b32 	%r2942, %r2939, %r2938, 18;
	shf.r.wrap.b32 	%r2943, %r2938, %r2939, 18;
	mov.b64 	%rd4185, {%r2943, %r2942};
	xor.b64  	%rd4186, %rd4185, %rd4184;
	shf.l.wrap.b32 	%r2944, %r2938, %r2939, 23;
	shf.l.wrap.b32 	%r2945, %r2939, %r2938, 23;
	mov.b64 	%rd4187, {%r2945, %r2944};
	xor.b64  	%rd4188, %rd4186, %rd4187;
	xor.b64  	%rd4189, %rd4148, %rd4124;
	and.b64  	%rd4190, %rd4172, %rd4189;
	xor.b64  	%rd4191, %rd4190, %rd4124;
	add.s64 	%rd4192, %rd4100, %rd3834;
	add.s64 	%rd4193, %rd4192, %rd1619;
	add.s64 	%rd4194, %rd4193, %rd4191;
	add.s64 	%rd4195, %rd4194, %rd4188;
	add.s64 	%rd4196, %rd4195, %rd4111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2946,%dummy}, %rd4183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2947}, %rd4183;
	}
	shf.r.wrap.b32 	%r2948, %r2947, %r2946, 28;
	shf.r.wrap.b32 	%r2949, %r2946, %r2947, 28;
	mov.b64 	%rd4197, {%r2949, %r2948};
	shf.l.wrap.b32 	%r2950, %r2946, %r2947, 30;
	shf.l.wrap.b32 	%r2951, %r2947, %r2946, 30;
	mov.b64 	%rd4198, {%r2951, %r2950};
	xor.b64  	%rd4199, %rd4198, %rd4197;
	shf.l.wrap.b32 	%r2952, %r2946, %r2947, 25;
	shf.l.wrap.b32 	%r2953, %r2947, %r2946, 25;
	mov.b64 	%rd4200, {%r2953, %r2952};
	xor.b64  	%rd4201, %rd4199, %rd4200;
	xor.b64  	%rd4202, %rd4183, %rd4135;
	xor.b64  	%rd4203, %rd4183, %rd4159;
	and.b64  	%rd4204, %rd4203, %rd4202;
	xor.b64  	%rd4205, %rd4204, %rd4183;
	add.s64 	%rd4206, %rd4195, %rd4205;
	add.s64 	%rd4207, %rd4206, %rd4201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2954,%dummy}, %rd4196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2955}, %rd4196;
	}
	shf.r.wrap.b32 	%r2956, %r2955, %r2954, 14;
	shf.r.wrap.b32 	%r2957, %r2954, %r2955, 14;
	mov.b64 	%rd4208, {%r2957, %r2956};
	shf.r.wrap.b32 	%r2958, %r2955, %r2954, 18;
	shf.r.wrap.b32 	%r2959, %r2954, %r2955, 18;
	mov.b64 	%rd4209, {%r2959, %r2958};
	xor.b64  	%rd4210, %rd4209, %rd4208;
	shf.l.wrap.b32 	%r2960, %r2954, %r2955, 23;
	shf.l.wrap.b32 	%r2961, %r2955, %r2954, 23;
	mov.b64 	%rd4211, {%r2961, %r2960};
	xor.b64  	%rd4212, %rd4210, %rd4211;
	xor.b64  	%rd4213, %rd4172, %rd4148;
	and.b64  	%rd4214, %rd4196, %rd4213;
	xor.b64  	%rd4215, %rd4214, %rd4148;
	add.s64 	%rd4216, %rd4124, %rd3847;
	add.s64 	%rd4217, %rd4216, %rd1644;
	add.s64 	%rd4218, %rd4217, %rd4215;
	add.s64 	%rd4219, %rd4218, %rd4212;
	add.s64 	%rd4220, %rd4219, %rd4135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2962,%dummy}, %rd4207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2963}, %rd4207;
	}
	shf.r.wrap.b32 	%r2964, %r2963, %r2962, 28;
	shf.r.wrap.b32 	%r2965, %r2962, %r2963, 28;
	mov.b64 	%rd4221, {%r2965, %r2964};
	shf.l.wrap.b32 	%r2966, %r2962, %r2963, 30;
	shf.l.wrap.b32 	%r2967, %r2963, %r2962, 30;
	mov.b64 	%rd4222, {%r2967, %r2966};
	xor.b64  	%rd4223, %rd4222, %rd4221;
	shf.l.wrap.b32 	%r2968, %r2962, %r2963, 25;
	shf.l.wrap.b32 	%r2969, %r2963, %r2962, 25;
	mov.b64 	%rd4224, {%r2969, %r2968};
	xor.b64  	%rd4225, %rd4223, %rd4224;
	xor.b64  	%rd4226, %rd4207, %rd4159;
	xor.b64  	%rd4227, %rd4207, %rd4183;
	and.b64  	%rd4228, %rd4227, %rd4226;
	xor.b64  	%rd4229, %rd4228, %rd4207;
	add.s64 	%rd4230, %rd4219, %rd4229;
	add.s64 	%rd4231, %rd4230, %rd4225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd3834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd3834;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 19;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 19;
	mov.b64 	%rd4232, {%r2973, %r2972};
	shf.l.wrap.b32 	%r2974, %r2970, %r2971, 3;
	shf.l.wrap.b32 	%r2975, %r2971, %r2970, 3;
	mov.b64 	%rd4233, {%r2975, %r2974};
	shr.u64 	%rd4234, %rd3834, 6;
	xor.b64  	%rd4235, %rd4232, %rd4234;
	xor.b64  	%rd4236, %rd4235, %rd4233;
	shf.r.wrap.b32 	%r2976, %r2597, %r2596, 1;
	shf.r.wrap.b32 	%r2977, %r2596, %r2597, 1;
	mov.b64 	%rd4237, {%r2977, %r2976};
	shf.r.wrap.b32 	%r2978, %r2597, %r2596, 8;
	shf.r.wrap.b32 	%r2979, %r2596, %r2597, 8;
	mov.b64 	%rd4238, {%r2979, %r2978};
	shr.u64 	%rd4239, %rd3685, 7;
	xor.b64  	%rd4240, %rd4237, %rd4239;
	xor.b64  	%rd4241, %rd4240, %rd4238;
	add.s64 	%rd4242, %rd3677, %rd3769;
	add.s64 	%rd4243, %rd4242, %rd4236;
	add.s64 	%rd4244, %rd4243, %rd4241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2980,%dummy}, %rd3847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2981}, %rd3847;
	}
	shf.r.wrap.b32 	%r2982, %r2981, %r2980, 19;
	shf.r.wrap.b32 	%r2983, %r2980, %r2981, 19;
	mov.b64 	%rd4245, {%r2983, %r2982};
	shf.l.wrap.b32 	%r2984, %r2980, %r2981, 3;
	shf.l.wrap.b32 	%r2985, %r2981, %r2980, 3;
	mov.b64 	%rd4246, {%r2985, %r2984};
	shr.u64 	%rd4247, %rd3847, 6;
	xor.b64  	%rd4248, %rd4245, %rd4247;
	xor.b64  	%rd4249, %rd4248, %rd4246;
	shf.r.wrap.b32 	%r2986, %r2603, %r2602, 1;
	shf.r.wrap.b32 	%r2987, %r2602, %r2603, 1;
	mov.b64 	%rd4250, {%r2987, %r2986};
	shf.r.wrap.b32 	%r2988, %r2603, %r2602, 8;
	shf.r.wrap.b32 	%r2989, %r2602, %r2603, 8;
	mov.b64 	%rd4251, {%r2989, %r2988};
	shr.u64 	%rd4252, %rd3693, 7;
	xor.b64  	%rd4253, %rd4250, %rd4252;
	xor.b64  	%rd4254, %rd4253, %rd4251;
	add.s64 	%rd4255, %rd3685, %rd3782;
	add.s64 	%rd4256, %rd4255, %rd4249;
	add.s64 	%rd4257, %rd4256, %rd4254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2990,%dummy}, %rd4244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2991}, %rd4244;
	}
	shf.r.wrap.b32 	%r2992, %r2991, %r2990, 19;
	shf.r.wrap.b32 	%r2993, %r2990, %r2991, 19;
	mov.b64 	%rd4258, {%r2993, %r2992};
	shf.l.wrap.b32 	%r2994, %r2990, %r2991, 3;
	shf.l.wrap.b32 	%r2995, %r2991, %r2990, 3;
	mov.b64 	%rd4259, {%r2995, %r2994};
	shr.u64 	%rd4260, %rd4244, 6;
	xor.b64  	%rd4261, %rd4258, %rd4260;
	xor.b64  	%rd4262, %rd4261, %rd4259;
	shf.r.wrap.b32 	%r2996, %r2609, %r2608, 1;
	shf.r.wrap.b32 	%r2997, %r2608, %r2609, 1;
	mov.b64 	%rd4263, {%r2997, %r2996};
	shf.r.wrap.b32 	%r2998, %r2609, %r2608, 8;
	shf.r.wrap.b32 	%r2999, %r2608, %r2609, 8;
	mov.b64 	%rd4264, {%r2999, %r2998};
	shr.u64 	%rd4265, %rd3701, 7;
	xor.b64  	%rd4266, %rd4263, %rd4265;
	xor.b64  	%rd4267, %rd4266, %rd4264;
	add.s64 	%rd4268, %rd3693, %rd3795;
	add.s64 	%rd4269, %rd4268, %rd4262;
	add.s64 	%rd4270, %rd4269, %rd4267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3000,%dummy}, %rd4257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3001}, %rd4257;
	}
	shf.r.wrap.b32 	%r3002, %r3001, %r3000, 19;
	shf.r.wrap.b32 	%r3003, %r3000, %r3001, 19;
	mov.b64 	%rd4271, {%r3003, %r3002};
	shf.l.wrap.b32 	%r3004, %r3000, %r3001, 3;
	shf.l.wrap.b32 	%r3005, %r3001, %r3000, 3;
	mov.b64 	%rd4272, {%r3005, %r3004};
	shr.u64 	%rd4273, %rd4257, 6;
	xor.b64  	%rd4274, %rd4271, %rd4273;
	xor.b64  	%rd4275, %rd4274, %rd4272;
	shf.r.wrap.b32 	%r3006, %r2615, %r2614, 1;
	shf.r.wrap.b32 	%r3007, %r2614, %r2615, 1;
	mov.b64 	%rd4276, {%r3007, %r3006};
	shf.r.wrap.b32 	%r3008, %r2615, %r2614, 8;
	shf.r.wrap.b32 	%r3009, %r2614, %r2615, 8;
	mov.b64 	%rd4277, {%r3009, %r3008};
	shr.u64 	%rd4278, %rd3709, 7;
	xor.b64  	%rd4279, %rd4276, %rd4278;
	xor.b64  	%rd4280, %rd4279, %rd4277;
	add.s64 	%rd4281, %rd3808, %rd3701;
	add.s64 	%rd4282, %rd4281, %rd4275;
	add.s64 	%rd4283, %rd4282, %rd4280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3010,%dummy}, %rd4270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3011}, %rd4270;
	}
	shf.r.wrap.b32 	%r3012, %r3011, %r3010, 19;
	shf.r.wrap.b32 	%r3013, %r3010, %r3011, 19;
	mov.b64 	%rd4284, {%r3013, %r3012};
	shf.l.wrap.b32 	%r3014, %r3010, %r3011, 3;
	shf.l.wrap.b32 	%r3015, %r3011, %r3010, 3;
	mov.b64 	%rd4285, {%r3015, %r3014};
	shr.u64 	%rd4286, %rd4270, 6;
	xor.b64  	%rd4287, %rd4284, %rd4286;
	xor.b64  	%rd4288, %rd4287, %rd4285;
	shf.r.wrap.b32 	%r3016, %r2625, %r2624, 1;
	shf.r.wrap.b32 	%r3017, %r2624, %r2625, 1;
	mov.b64 	%rd4289, {%r3017, %r3016};
	shf.r.wrap.b32 	%r3018, %r2625, %r2624, 8;
	shf.r.wrap.b32 	%r3019, %r2624, %r2625, 8;
	mov.b64 	%rd4290, {%r3019, %r3018};
	shr.u64 	%rd4291, %rd3717, 7;
	xor.b64  	%rd4292, %rd4289, %rd4291;
	xor.b64  	%rd4293, %rd4292, %rd4290;
	add.s64 	%rd4294, %rd3821, %rd3709;
	add.s64 	%rd4295, %rd4294, %rd4288;
	add.s64 	%rd4296, %rd4295, %rd4293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3020,%dummy}, %rd4283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3021}, %rd4283;
	}
	shf.r.wrap.b32 	%r3022, %r3021, %r3020, 19;
	shf.r.wrap.b32 	%r3023, %r3020, %r3021, 19;
	mov.b64 	%rd4297, {%r3023, %r3022};
	shf.l.wrap.b32 	%r3024, %r3020, %r3021, 3;
	shf.l.wrap.b32 	%r3025, %r3021, %r3020, 3;
	mov.b64 	%rd4298, {%r3025, %r3024};
	shr.u64 	%rd4299, %rd4283, 6;
	xor.b64  	%rd4300, %rd4297, %rd4299;
	xor.b64  	%rd4301, %rd4300, %rd4298;
	shf.r.wrap.b32 	%r3026, %r2635, %r2634, 1;
	shf.r.wrap.b32 	%r3027, %r2634, %r2635, 1;
	mov.b64 	%rd4302, {%r3027, %r3026};
	shf.r.wrap.b32 	%r3028, %r2635, %r2634, 8;
	shf.r.wrap.b32 	%r3029, %r2634, %r2635, 8;
	mov.b64 	%rd4303, {%r3029, %r3028};
	shr.u64 	%rd4304, %rd3730, 7;
	xor.b64  	%rd4305, %rd4302, %rd4304;
	xor.b64  	%rd4306, %rd4305, %rd4303;
	add.s64 	%rd4307, %rd3834, %rd3717;
	add.s64 	%rd4308, %rd4307, %rd4301;
	add.s64 	%rd4309, %rd4308, %rd4306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3030,%dummy}, %rd4296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3031}, %rd4296;
	}
	shf.r.wrap.b32 	%r3032, %r3031, %r3030, 19;
	shf.r.wrap.b32 	%r3033, %r3030, %r3031, 19;
	mov.b64 	%rd4310, {%r3033, %r3032};
	shf.l.wrap.b32 	%r3034, %r3030, %r3031, 3;
	shf.l.wrap.b32 	%r3035, %r3031, %r3030, 3;
	mov.b64 	%rd4311, {%r3035, %r3034};
	shr.u64 	%rd4312, %rd4296, 6;
	xor.b64  	%rd4313, %rd4310, %rd4312;
	xor.b64  	%rd4314, %rd4313, %rd4311;
	shf.r.wrap.b32 	%r3036, %r2645, %r2644, 1;
	shf.r.wrap.b32 	%r3037, %r2644, %r2645, 1;
	mov.b64 	%rd4315, {%r3037, %r3036};
	shf.r.wrap.b32 	%r3038, %r2645, %r2644, 8;
	shf.r.wrap.b32 	%r3039, %r2644, %r2645, 8;
	mov.b64 	%rd4316, {%r3039, %r3038};
	shr.u64 	%rd4317, %rd3743, 7;
	xor.b64  	%rd4318, %rd4315, %rd4317;
	xor.b64  	%rd4319, %rd4318, %rd4316;
	add.s64 	%rd4320, %rd3847, %rd3730;
	add.s64 	%rd4321, %rd4320, %rd4314;
	add.s64 	%rd4322, %rd4321, %rd4319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3040,%dummy}, %rd4309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3041}, %rd4309;
	}
	shf.r.wrap.b32 	%r3042, %r3041, %r3040, 19;
	shf.r.wrap.b32 	%r3043, %r3040, %r3041, 19;
	mov.b64 	%rd4323, {%r3043, %r3042};
	shf.l.wrap.b32 	%r3044, %r3040, %r3041, 3;
	shf.l.wrap.b32 	%r3045, %r3041, %r3040, 3;
	mov.b64 	%rd4324, {%r3045, %r3044};
	shr.u64 	%rd4325, %rd4309, 6;
	xor.b64  	%rd4326, %rd4323, %rd4325;
	xor.b64  	%rd4327, %rd4326, %rd4324;
	shf.r.wrap.b32 	%r3046, %r2655, %r2654, 1;
	shf.r.wrap.b32 	%r3047, %r2654, %r2655, 1;
	mov.b64 	%rd4328, {%r3047, %r3046};
	shf.r.wrap.b32 	%r3048, %r2655, %r2654, 8;
	shf.r.wrap.b32 	%r3049, %r2654, %r2655, 8;
	mov.b64 	%rd4329, {%r3049, %r3048};
	shr.u64 	%rd4330, %rd3756, 7;
	xor.b64  	%rd4331, %rd4328, %rd4330;
	xor.b64  	%rd4332, %rd4331, %rd4329;
	add.s64 	%rd4333, %rd4244, %rd3743;
	add.s64 	%rd4334, %rd4333, %rd4327;
	add.s64 	%rd4335, %rd4334, %rd4332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3050,%dummy}, %rd4322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3051}, %rd4322;
	}
	shf.r.wrap.b32 	%r3052, %r3051, %r3050, 19;
	shf.r.wrap.b32 	%r3053, %r3050, %r3051, 19;
	mov.b64 	%rd4336, {%r3053, %r3052};
	shf.l.wrap.b32 	%r3054, %r3050, %r3051, 3;
	shf.l.wrap.b32 	%r3055, %r3051, %r3050, 3;
	mov.b64 	%rd4337, {%r3055, %r3054};
	shr.u64 	%rd4338, %rd4322, 6;
	xor.b64  	%rd4339, %rd4336, %rd4338;
	xor.b64  	%rd4340, %rd4339, %rd4337;
	shf.r.wrap.b32 	%r3056, %r2665, %r2664, 1;
	shf.r.wrap.b32 	%r3057, %r2664, %r2665, 1;
	mov.b64 	%rd4341, {%r3057, %r3056};
	shf.r.wrap.b32 	%r3058, %r2665, %r2664, 8;
	shf.r.wrap.b32 	%r3059, %r2664, %r2665, 8;
	mov.b64 	%rd4342, {%r3059, %r3058};
	shr.u64 	%rd4343, %rd3769, 7;
	xor.b64  	%rd4344, %rd4341, %rd4343;
	xor.b64  	%rd4345, %rd4344, %rd4342;
	add.s64 	%rd4346, %rd4257, %rd3756;
	add.s64 	%rd4347, %rd4346, %rd4340;
	add.s64 	%rd4348, %rd4347, %rd4345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3060,%dummy}, %rd4335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3061}, %rd4335;
	}
	shf.r.wrap.b32 	%r3062, %r3061, %r3060, 19;
	shf.r.wrap.b32 	%r3063, %r3060, %r3061, 19;
	mov.b64 	%rd4349, {%r3063, %r3062};
	shf.l.wrap.b32 	%r3064, %r3060, %r3061, 3;
	shf.l.wrap.b32 	%r3065, %r3061, %r3060, 3;
	mov.b64 	%rd4350, {%r3065, %r3064};
	shr.u64 	%rd4351, %rd4335, 6;
	xor.b64  	%rd4352, %rd4349, %rd4351;
	xor.b64  	%rd4353, %rd4352, %rd4350;
	shf.r.wrap.b32 	%r3066, %r2675, %r2674, 1;
	shf.r.wrap.b32 	%r3067, %r2674, %r2675, 1;
	mov.b64 	%rd4354, {%r3067, %r3066};
	shf.r.wrap.b32 	%r3068, %r2675, %r2674, 8;
	shf.r.wrap.b32 	%r3069, %r2674, %r2675, 8;
	mov.b64 	%rd4355, {%r3069, %r3068};
	shr.u64 	%rd4356, %rd3782, 7;
	xor.b64  	%rd4357, %rd4354, %rd4356;
	xor.b64  	%rd4358, %rd4357, %rd4355;
	add.s64 	%rd4359, %rd4270, %rd3769;
	add.s64 	%rd4360, %rd4359, %rd4353;
	add.s64 	%rd4361, %rd4360, %rd4358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3070,%dummy}, %rd4348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3071}, %rd4348;
	}
	shf.r.wrap.b32 	%r3072, %r3071, %r3070, 19;
	shf.r.wrap.b32 	%r3073, %r3070, %r3071, 19;
	mov.b64 	%rd4362, {%r3073, %r3072};
	shf.l.wrap.b32 	%r3074, %r3070, %r3071, 3;
	shf.l.wrap.b32 	%r3075, %r3071, %r3070, 3;
	mov.b64 	%rd4363, {%r3075, %r3074};
	shr.u64 	%rd4364, %rd4348, 6;
	xor.b64  	%rd4365, %rd4362, %rd4364;
	xor.b64  	%rd4366, %rd4365, %rd4363;
	shf.r.wrap.b32 	%r3076, %r2685, %r2684, 1;
	shf.r.wrap.b32 	%r3077, %r2684, %r2685, 1;
	mov.b64 	%rd4367, {%r3077, %r3076};
	shf.r.wrap.b32 	%r3078, %r2685, %r2684, 8;
	shf.r.wrap.b32 	%r3079, %r2684, %r2685, 8;
	mov.b64 	%rd4368, {%r3079, %r3078};
	shr.u64 	%rd4369, %rd3795, 7;
	xor.b64  	%rd4370, %rd4367, %rd4369;
	xor.b64  	%rd4371, %rd4370, %rd4368;
	add.s64 	%rd4372, %rd4283, %rd3782;
	add.s64 	%rd4373, %rd4372, %rd4366;
	add.s64 	%rd4374, %rd4373, %rd4371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3080,%dummy}, %rd4361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3081}, %rd4361;
	}
	shf.r.wrap.b32 	%r3082, %r3081, %r3080, 19;
	shf.r.wrap.b32 	%r3083, %r3080, %r3081, 19;
	mov.b64 	%rd4375, {%r3083, %r3082};
	shf.l.wrap.b32 	%r3084, %r3080, %r3081, 3;
	shf.l.wrap.b32 	%r3085, %r3081, %r3080, 3;
	mov.b64 	%rd4376, {%r3085, %r3084};
	shr.u64 	%rd4377, %rd4361, 6;
	xor.b64  	%rd4378, %rd4375, %rd4377;
	xor.b64  	%rd4379, %rd4378, %rd4376;
	shf.r.wrap.b32 	%r3086, %r2695, %r2694, 1;
	shf.r.wrap.b32 	%r3087, %r2694, %r2695, 1;
	mov.b64 	%rd4380, {%r3087, %r3086};
	shf.r.wrap.b32 	%r3088, %r2695, %r2694, 8;
	shf.r.wrap.b32 	%r3089, %r2694, %r2695, 8;
	mov.b64 	%rd4381, {%r3089, %r3088};
	shr.u64 	%rd4382, %rd3808, 7;
	xor.b64  	%rd4383, %rd4380, %rd4382;
	xor.b64  	%rd4384, %rd4383, %rd4381;
	add.s64 	%rd4385, %rd4296, %rd3795;
	add.s64 	%rd4386, %rd4385, %rd4379;
	add.s64 	%rd4387, %rd4386, %rd4384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3090,%dummy}, %rd4374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3091}, %rd4374;
	}
	shf.r.wrap.b32 	%r3092, %r3091, %r3090, 19;
	shf.r.wrap.b32 	%r3093, %r3090, %r3091, 19;
	mov.b64 	%rd4388, {%r3093, %r3092};
	shf.l.wrap.b32 	%r3094, %r3090, %r3091, 3;
	shf.l.wrap.b32 	%r3095, %r3091, %r3090, 3;
	mov.b64 	%rd4389, {%r3095, %r3094};
	shr.u64 	%rd4390, %rd4374, 6;
	xor.b64  	%rd4391, %rd4388, %rd4390;
	xor.b64  	%rd4392, %rd4391, %rd4389;
	shf.r.wrap.b32 	%r3096, %r2705, %r2704, 1;
	shf.r.wrap.b32 	%r3097, %r2704, %r2705, 1;
	mov.b64 	%rd4393, {%r3097, %r3096};
	shf.r.wrap.b32 	%r3098, %r2705, %r2704, 8;
	shf.r.wrap.b32 	%r3099, %r2704, %r2705, 8;
	mov.b64 	%rd4394, {%r3099, %r3098};
	shr.u64 	%rd4395, %rd3821, 7;
	xor.b64  	%rd4396, %rd4393, %rd4395;
	xor.b64  	%rd4397, %rd4396, %rd4394;
	add.s64 	%rd4398, %rd4309, %rd3808;
	add.s64 	%rd4399, %rd4398, %rd4392;
	add.s64 	%rd4400, %rd4399, %rd4397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3100,%dummy}, %rd4387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3101}, %rd4387;
	}
	shf.r.wrap.b32 	%r3102, %r3101, %r3100, 19;
	shf.r.wrap.b32 	%r3103, %r3100, %r3101, 19;
	mov.b64 	%rd4401, {%r3103, %r3102};
	shf.l.wrap.b32 	%r3104, %r3100, %r3101, 3;
	shf.l.wrap.b32 	%r3105, %r3101, %r3100, 3;
	mov.b64 	%rd4402, {%r3105, %r3104};
	shr.u64 	%rd4403, %rd4387, 6;
	xor.b64  	%rd4404, %rd4401, %rd4403;
	xor.b64  	%rd4405, %rd4404, %rd4402;
	shf.r.wrap.b32 	%r3106, %r2971, %r2970, 1;
	shf.r.wrap.b32 	%r3107, %r2970, %r2971, 1;
	mov.b64 	%rd4406, {%r3107, %r3106};
	shf.r.wrap.b32 	%r3108, %r2971, %r2970, 8;
	shf.r.wrap.b32 	%r3109, %r2970, %r2971, 8;
	mov.b64 	%rd4407, {%r3109, %r3108};
	shr.u64 	%rd4408, %rd3834, 7;
	xor.b64  	%rd4409, %rd4406, %rd4408;
	xor.b64  	%rd4410, %rd4409, %rd4407;
	add.s64 	%rd4411, %rd4322, %rd3821;
	add.s64 	%rd4412, %rd4411, %rd4405;
	add.s64 	%rd4413, %rd4412, %rd4410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3110,%dummy}, %rd4400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3111}, %rd4400;
	}
	shf.r.wrap.b32 	%r3112, %r3111, %r3110, 19;
	shf.r.wrap.b32 	%r3113, %r3110, %r3111, 19;
	mov.b64 	%rd4414, {%r3113, %r3112};
	shf.l.wrap.b32 	%r3114, %r3110, %r3111, 3;
	shf.l.wrap.b32 	%r3115, %r3111, %r3110, 3;
	mov.b64 	%rd4415, {%r3115, %r3114};
	shr.u64 	%rd4416, %rd4400, 6;
	xor.b64  	%rd4417, %rd4414, %rd4416;
	xor.b64  	%rd4418, %rd4417, %rd4415;
	shf.r.wrap.b32 	%r3116, %r2981, %r2980, 1;
	shf.r.wrap.b32 	%r3117, %r2980, %r2981, 1;
	mov.b64 	%rd4419, {%r3117, %r3116};
	shf.r.wrap.b32 	%r3118, %r2981, %r2980, 8;
	shf.r.wrap.b32 	%r3119, %r2980, %r2981, 8;
	mov.b64 	%rd4420, {%r3119, %r3118};
	shr.u64 	%rd4421, %rd3847, 7;
	xor.b64  	%rd4422, %rd4419, %rd4421;
	xor.b64  	%rd4423, %rd4422, %rd4420;
	add.s64 	%rd4424, %rd4335, %rd3834;
	add.s64 	%rd4425, %rd4424, %rd4418;
	add.s64 	%rd4426, %rd4425, %rd4423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3120,%dummy}, %rd4413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3121}, %rd4413;
	}
	shf.r.wrap.b32 	%r3122, %r3121, %r3120, 19;
	shf.r.wrap.b32 	%r3123, %r3120, %r3121, 19;
	mov.b64 	%rd4427, {%r3123, %r3122};
	shf.l.wrap.b32 	%r3124, %r3120, %r3121, 3;
	shf.l.wrap.b32 	%r3125, %r3121, %r3120, 3;
	mov.b64 	%rd4428, {%r3125, %r3124};
	shr.u64 	%rd4429, %rd4413, 6;
	xor.b64  	%rd4430, %rd4427, %rd4429;
	xor.b64  	%rd4431, %rd4430, %rd4428;
	shf.r.wrap.b32 	%r3126, %r2991, %r2990, 1;
	shf.r.wrap.b32 	%r3127, %r2990, %r2991, 1;
	mov.b64 	%rd4432, {%r3127, %r3126};
	shf.r.wrap.b32 	%r3128, %r2991, %r2990, 8;
	shf.r.wrap.b32 	%r3129, %r2990, %r2991, 8;
	mov.b64 	%rd4433, {%r3129, %r3128};
	shr.u64 	%rd4434, %rd4244, 7;
	xor.b64  	%rd4435, %rd4432, %rd4434;
	xor.b64  	%rd4436, %rd4435, %rd4433;
	add.s64 	%rd4437, %rd4348, %rd3847;
	add.s64 	%rd4438, %rd4437, %rd4431;
	add.s64 	%rd4439, %rd4438, %rd4436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3130,%dummy}, %rd4220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3131}, %rd4220;
	}
	shf.r.wrap.b32 	%r3132, %r3131, %r3130, 14;
	shf.r.wrap.b32 	%r3133, %r3130, %r3131, 14;
	mov.b64 	%rd4440, {%r3133, %r3132};
	shf.r.wrap.b32 	%r3134, %r3131, %r3130, 18;
	shf.r.wrap.b32 	%r3135, %r3130, %r3131, 18;
	mov.b64 	%rd4441, {%r3135, %r3134};
	xor.b64  	%rd4442, %rd4441, %rd4440;
	shf.l.wrap.b32 	%r3136, %r3130, %r3131, 23;
	shf.l.wrap.b32 	%r3137, %r3131, %r3130, 23;
	mov.b64 	%rd4443, {%r3137, %r3136};
	xor.b64  	%rd4444, %rd4442, %rd4443;
	xor.b64  	%rd4445, %rd4196, %rd4172;
	and.b64  	%rd4446, %rd4445, %rd4220;
	xor.b64  	%rd4447, %rd4446, %rd4172;
	add.s64 	%rd4448, %rd4447, %rd4148;
	add.s64 	%rd4449, %rd4448, %rd4244;
	add.s64 	%rd4450, %rd4449, %rd1878;
	add.s64 	%rd4451, %rd4450, %rd4444;
	add.s64 	%rd4452, %rd4451, %rd4159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3138,%dummy}, %rd4231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3139}, %rd4231;
	}
	shf.r.wrap.b32 	%r3140, %r3139, %r3138, 28;
	shf.r.wrap.b32 	%r3141, %r3138, %r3139, 28;
	mov.b64 	%rd4453, {%r3141, %r3140};
	shf.l.wrap.b32 	%r3142, %r3138, %r3139, 30;
	shf.l.wrap.b32 	%r3143, %r3139, %r3138, 30;
	mov.b64 	%rd4454, {%r3143, %r3142};
	xor.b64  	%rd4455, %rd4454, %rd4453;
	shf.l.wrap.b32 	%r3144, %r3138, %r3139, 25;
	shf.l.wrap.b32 	%r3145, %r3139, %r3138, 25;
	mov.b64 	%rd4456, {%r3145, %r3144};
	xor.b64  	%rd4457, %rd4455, %rd4456;
	xor.b64  	%rd4458, %rd4231, %rd4183;
	xor.b64  	%rd4459, %rd4231, %rd4207;
	and.b64  	%rd4460, %rd4459, %rd4458;
	xor.b64  	%rd4461, %rd4460, %rd4231;
	add.s64 	%rd4462, %rd4451, %rd4461;
	add.s64 	%rd4463, %rd4462, %rd4457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3146,%dummy}, %rd4452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3147}, %rd4452;
	}
	shf.r.wrap.b32 	%r3148, %r3147, %r3146, 14;
	shf.r.wrap.b32 	%r3149, %r3146, %r3147, 14;
	mov.b64 	%rd4464, {%r3149, %r3148};
	shf.r.wrap.b32 	%r3150, %r3147, %r3146, 18;
	shf.r.wrap.b32 	%r3151, %r3146, %r3147, 18;
	mov.b64 	%rd4465, {%r3151, %r3150};
	xor.b64  	%rd4466, %rd4465, %rd4464;
	shf.l.wrap.b32 	%r3152, %r3146, %r3147, 23;
	shf.l.wrap.b32 	%r3153, %r3147, %r3146, 23;
	mov.b64 	%rd4467, {%r3153, %r3152};
	xor.b64  	%rd4468, %rd4466, %rd4467;
	xor.b64  	%rd4469, %rd4220, %rd4196;
	and.b64  	%rd4470, %rd4452, %rd4469;
	xor.b64  	%rd4471, %rd4470, %rd4196;
	add.s64 	%rd4472, %rd4257, %rd4172;
	add.s64 	%rd4473, %rd4472, %rd1902;
	add.s64 	%rd4474, %rd4473, %rd4471;
	add.s64 	%rd4475, %rd4474, %rd4468;
	add.s64 	%rd4476, %rd4475, %rd4183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3154,%dummy}, %rd4463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3155}, %rd4463;
	}
	shf.r.wrap.b32 	%r3156, %r3155, %r3154, 28;
	shf.r.wrap.b32 	%r3157, %r3154, %r3155, 28;
	mov.b64 	%rd4477, {%r3157, %r3156};
	shf.l.wrap.b32 	%r3158, %r3154, %r3155, 30;
	shf.l.wrap.b32 	%r3159, %r3155, %r3154, 30;
	mov.b64 	%rd4478, {%r3159, %r3158};
	xor.b64  	%rd4479, %rd4478, %rd4477;
	shf.l.wrap.b32 	%r3160, %r3154, %r3155, 25;
	shf.l.wrap.b32 	%r3161, %r3155, %r3154, 25;
	mov.b64 	%rd4480, {%r3161, %r3160};
	xor.b64  	%rd4481, %rd4479, %rd4480;
	xor.b64  	%rd4482, %rd4463, %rd4207;
	xor.b64  	%rd4483, %rd4463, %rd4231;
	and.b64  	%rd4484, %rd4483, %rd4482;
	xor.b64  	%rd4485, %rd4484, %rd4463;
	add.s64 	%rd4486, %rd4475, %rd4485;
	add.s64 	%rd4487, %rd4486, %rd4481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3162,%dummy}, %rd4476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3163}, %rd4476;
	}
	shf.r.wrap.b32 	%r3164, %r3163, %r3162, 14;
	shf.r.wrap.b32 	%r3165, %r3162, %r3163, 14;
	mov.b64 	%rd4488, {%r3165, %r3164};
	shf.r.wrap.b32 	%r3166, %r3163, %r3162, 18;
	shf.r.wrap.b32 	%r3167, %r3162, %r3163, 18;
	mov.b64 	%rd4489, {%r3167, %r3166};
	xor.b64  	%rd4490, %rd4489, %rd4488;
	shf.l.wrap.b32 	%r3168, %r3162, %r3163, 23;
	shf.l.wrap.b32 	%r3169, %r3163, %r3162, 23;
	mov.b64 	%rd4491, {%r3169, %r3168};
	xor.b64  	%rd4492, %rd4490, %rd4491;
	xor.b64  	%rd4493, %rd4452, %rd4220;
	and.b64  	%rd4494, %rd4476, %rd4493;
	xor.b64  	%rd4495, %rd4494, %rd4220;
	add.s64 	%rd4496, %rd4270, %rd4196;
	add.s64 	%rd4497, %rd4496, %rd1927;
	add.s64 	%rd4498, %rd4497, %rd4495;
	add.s64 	%rd4499, %rd4498, %rd4492;
	add.s64 	%rd4500, %rd4499, %rd4207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3170,%dummy}, %rd4487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3171}, %rd4487;
	}
	shf.r.wrap.b32 	%r3172, %r3171, %r3170, 28;
	shf.r.wrap.b32 	%r3173, %r3170, %r3171, 28;
	mov.b64 	%rd4501, {%r3173, %r3172};
	shf.l.wrap.b32 	%r3174, %r3170, %r3171, 30;
	shf.l.wrap.b32 	%r3175, %r3171, %r3170, 30;
	mov.b64 	%rd4502, {%r3175, %r3174};
	xor.b64  	%rd4503, %rd4502, %rd4501;
	shf.l.wrap.b32 	%r3176, %r3170, %r3171, 25;
	shf.l.wrap.b32 	%r3177, %r3171, %r3170, 25;
	mov.b64 	%rd4504, {%r3177, %r3176};
	xor.b64  	%rd4505, %rd4503, %rd4504;
	xor.b64  	%rd4506, %rd4487, %rd4231;
	xor.b64  	%rd4507, %rd4487, %rd4463;
	and.b64  	%rd4508, %rd4507, %rd4506;
	xor.b64  	%rd4509, %rd4508, %rd4487;
	add.s64 	%rd4510, %rd4499, %rd4509;
	add.s64 	%rd4511, %rd4510, %rd4505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3178,%dummy}, %rd4500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3179}, %rd4500;
	}
	shf.r.wrap.b32 	%r3180, %r3179, %r3178, 14;
	shf.r.wrap.b32 	%r3181, %r3178, %r3179, 14;
	mov.b64 	%rd4512, {%r3181, %r3180};
	shf.r.wrap.b32 	%r3182, %r3179, %r3178, 18;
	shf.r.wrap.b32 	%r3183, %r3178, %r3179, 18;
	mov.b64 	%rd4513, {%r3183, %r3182};
	xor.b64  	%rd4514, %rd4513, %rd4512;
	shf.l.wrap.b32 	%r3184, %r3178, %r3179, 23;
	shf.l.wrap.b32 	%r3185, %r3179, %r3178, 23;
	mov.b64 	%rd4515, {%r3185, %r3184};
	xor.b64  	%rd4516, %rd4514, %rd4515;
	xor.b64  	%rd4517, %rd4476, %rd4452;
	and.b64  	%rd4518, %rd4500, %rd4517;
	xor.b64  	%rd4519, %rd4518, %rd4452;
	add.s64 	%rd4520, %rd4283, %rd4220;
	add.s64 	%rd4521, %rd4520, %rd1952;
	add.s64 	%rd4522, %rd4521, %rd4519;
	add.s64 	%rd4523, %rd4522, %rd4516;
	add.s64 	%rd4524, %rd4523, %rd4231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3186,%dummy}, %rd4511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3187}, %rd4511;
	}
	shf.r.wrap.b32 	%r3188, %r3187, %r3186, 28;
	shf.r.wrap.b32 	%r3189, %r3186, %r3187, 28;
	mov.b64 	%rd4525, {%r3189, %r3188};
	shf.l.wrap.b32 	%r3190, %r3186, %r3187, 30;
	shf.l.wrap.b32 	%r3191, %r3187, %r3186, 30;
	mov.b64 	%rd4526, {%r3191, %r3190};
	xor.b64  	%rd4527, %rd4526, %rd4525;
	shf.l.wrap.b32 	%r3192, %r3186, %r3187, 25;
	shf.l.wrap.b32 	%r3193, %r3187, %r3186, 25;
	mov.b64 	%rd4528, {%r3193, %r3192};
	xor.b64  	%rd4529, %rd4527, %rd4528;
	xor.b64  	%rd4530, %rd4511, %rd4463;
	xor.b64  	%rd4531, %rd4511, %rd4487;
	and.b64  	%rd4532, %rd4531, %rd4530;
	xor.b64  	%rd4533, %rd4532, %rd4511;
	add.s64 	%rd4534, %rd4523, %rd4533;
	add.s64 	%rd4535, %rd4534, %rd4529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3194,%dummy}, %rd4524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3195}, %rd4524;
	}
	shf.r.wrap.b32 	%r3196, %r3195, %r3194, 14;
	shf.r.wrap.b32 	%r3197, %r3194, %r3195, 14;
	mov.b64 	%rd4536, {%r3197, %r3196};
	shf.r.wrap.b32 	%r3198, %r3195, %r3194, 18;
	shf.r.wrap.b32 	%r3199, %r3194, %r3195, 18;
	mov.b64 	%rd4537, {%r3199, %r3198};
	xor.b64  	%rd4538, %rd4537, %rd4536;
	shf.l.wrap.b32 	%r3200, %r3194, %r3195, 23;
	shf.l.wrap.b32 	%r3201, %r3195, %r3194, 23;
	mov.b64 	%rd4539, {%r3201, %r3200};
	xor.b64  	%rd4540, %rd4538, %rd4539;
	xor.b64  	%rd4541, %rd4500, %rd4476;
	and.b64  	%rd4542, %rd4524, %rd4541;
	xor.b64  	%rd4543, %rd4542, %rd4476;
	add.s64 	%rd4544, %rd4452, %rd4296;
	add.s64 	%rd4545, %rd4544, %rd1977;
	add.s64 	%rd4546, %rd4545, %rd4543;
	add.s64 	%rd4547, %rd4546, %rd4540;
	add.s64 	%rd4548, %rd4547, %rd4463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3202,%dummy}, %rd4535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3203}, %rd4535;
	}
	shf.r.wrap.b32 	%r3204, %r3203, %r3202, 28;
	shf.r.wrap.b32 	%r3205, %r3202, %r3203, 28;
	mov.b64 	%rd4549, {%r3205, %r3204};
	shf.l.wrap.b32 	%r3206, %r3202, %r3203, 30;
	shf.l.wrap.b32 	%r3207, %r3203, %r3202, 30;
	mov.b64 	%rd4550, {%r3207, %r3206};
	xor.b64  	%rd4551, %rd4550, %rd4549;
	shf.l.wrap.b32 	%r3208, %r3202, %r3203, 25;
	shf.l.wrap.b32 	%r3209, %r3203, %r3202, 25;
	mov.b64 	%rd4552, {%r3209, %r3208};
	xor.b64  	%rd4553, %rd4551, %rd4552;
	xor.b64  	%rd4554, %rd4535, %rd4487;
	xor.b64  	%rd4555, %rd4535, %rd4511;
	and.b64  	%rd4556, %rd4555, %rd4554;
	xor.b64  	%rd4557, %rd4556, %rd4535;
	add.s64 	%rd4558, %rd4547, %rd4557;
	add.s64 	%rd4559, %rd4558, %rd4553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3210,%dummy}, %rd4548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3211}, %rd4548;
	}
	shf.r.wrap.b32 	%r3212, %r3211, %r3210, 14;
	shf.r.wrap.b32 	%r3213, %r3210, %r3211, 14;
	mov.b64 	%rd4560, {%r3213, %r3212};
	shf.r.wrap.b32 	%r3214, %r3211, %r3210, 18;
	shf.r.wrap.b32 	%r3215, %r3210, %r3211, 18;
	mov.b64 	%rd4561, {%r3215, %r3214};
	xor.b64  	%rd4562, %rd4561, %rd4560;
	shf.l.wrap.b32 	%r3216, %r3210, %r3211, 23;
	shf.l.wrap.b32 	%r3217, %r3211, %r3210, 23;
	mov.b64 	%rd4563, {%r3217, %r3216};
	xor.b64  	%rd4564, %rd4562, %rd4563;
	xor.b64  	%rd4565, %rd4524, %rd4500;
	and.b64  	%rd4566, %rd4548, %rd4565;
	xor.b64  	%rd4567, %rd4566, %rd4500;
	add.s64 	%rd4568, %rd4476, %rd4309;
	add.s64 	%rd4569, %rd4568, %rd2002;
	add.s64 	%rd4570, %rd4569, %rd4567;
	add.s64 	%rd4571, %rd4570, %rd4564;
	add.s64 	%rd4572, %rd4571, %rd4487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3218,%dummy}, %rd4559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3219}, %rd4559;
	}
	shf.r.wrap.b32 	%r3220, %r3219, %r3218, 28;
	shf.r.wrap.b32 	%r3221, %r3218, %r3219, 28;
	mov.b64 	%rd4573, {%r3221, %r3220};
	shf.l.wrap.b32 	%r3222, %r3218, %r3219, 30;
	shf.l.wrap.b32 	%r3223, %r3219, %r3218, 30;
	mov.b64 	%rd4574, {%r3223, %r3222};
	xor.b64  	%rd4575, %rd4574, %rd4573;
	shf.l.wrap.b32 	%r3224, %r3218, %r3219, 25;
	shf.l.wrap.b32 	%r3225, %r3219, %r3218, 25;
	mov.b64 	%rd4576, {%r3225, %r3224};
	xor.b64  	%rd4577, %rd4575, %rd4576;
	xor.b64  	%rd4578, %rd4559, %rd4511;
	xor.b64  	%rd4579, %rd4559, %rd4535;
	and.b64  	%rd4580, %rd4579, %rd4578;
	xor.b64  	%rd4581, %rd4580, %rd4559;
	add.s64 	%rd4582, %rd4571, %rd4581;
	add.s64 	%rd4583, %rd4582, %rd4577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3226,%dummy}, %rd4572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3227}, %rd4572;
	}
	shf.r.wrap.b32 	%r3228, %r3227, %r3226, 14;
	shf.r.wrap.b32 	%r3229, %r3226, %r3227, 14;
	mov.b64 	%rd4584, {%r3229, %r3228};
	shf.r.wrap.b32 	%r3230, %r3227, %r3226, 18;
	shf.r.wrap.b32 	%r3231, %r3226, %r3227, 18;
	mov.b64 	%rd4585, {%r3231, %r3230};
	xor.b64  	%rd4586, %rd4585, %rd4584;
	shf.l.wrap.b32 	%r3232, %r3226, %r3227, 23;
	shf.l.wrap.b32 	%r3233, %r3227, %r3226, 23;
	mov.b64 	%rd4587, {%r3233, %r3232};
	xor.b64  	%rd4588, %rd4586, %rd4587;
	xor.b64  	%rd4589, %rd4548, %rd4524;
	and.b64  	%rd4590, %rd4572, %rd4589;
	xor.b64  	%rd4591, %rd4590, %rd4524;
	add.s64 	%rd4592, %rd4500, %rd4322;
	add.s64 	%rd4593, %rd4592, %rd2027;
	add.s64 	%rd4594, %rd4593, %rd4591;
	add.s64 	%rd4595, %rd4594, %rd4588;
	add.s64 	%rd4596, %rd4595, %rd4511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3234,%dummy}, %rd4583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3235}, %rd4583;
	}
	shf.r.wrap.b32 	%r3236, %r3235, %r3234, 28;
	shf.r.wrap.b32 	%r3237, %r3234, %r3235, 28;
	mov.b64 	%rd4597, {%r3237, %r3236};
	shf.l.wrap.b32 	%r3238, %r3234, %r3235, 30;
	shf.l.wrap.b32 	%r3239, %r3235, %r3234, 30;
	mov.b64 	%rd4598, {%r3239, %r3238};
	xor.b64  	%rd4599, %rd4598, %rd4597;
	shf.l.wrap.b32 	%r3240, %r3234, %r3235, 25;
	shf.l.wrap.b32 	%r3241, %r3235, %r3234, 25;
	mov.b64 	%rd4600, {%r3241, %r3240};
	xor.b64  	%rd4601, %rd4599, %rd4600;
	xor.b64  	%rd4602, %rd4583, %rd4535;
	xor.b64  	%rd4603, %rd4583, %rd4559;
	and.b64  	%rd4604, %rd4603, %rd4602;
	xor.b64  	%rd4605, %rd4604, %rd4583;
	add.s64 	%rd4606, %rd4595, %rd4605;
	add.s64 	%rd4607, %rd4606, %rd4601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3242,%dummy}, %rd4596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3243}, %rd4596;
	}
	shf.r.wrap.b32 	%r3244, %r3243, %r3242, 14;
	shf.r.wrap.b32 	%r3245, %r3242, %r3243, 14;
	mov.b64 	%rd4608, {%r3245, %r3244};
	shf.r.wrap.b32 	%r3246, %r3243, %r3242, 18;
	shf.r.wrap.b32 	%r3247, %r3242, %r3243, 18;
	mov.b64 	%rd4609, {%r3247, %r3246};
	xor.b64  	%rd4610, %rd4609, %rd4608;
	shf.l.wrap.b32 	%r3248, %r3242, %r3243, 23;
	shf.l.wrap.b32 	%r3249, %r3243, %r3242, 23;
	mov.b64 	%rd4611, {%r3249, %r3248};
	xor.b64  	%rd4612, %rd4610, %rd4611;
	xor.b64  	%rd4613, %rd4572, %rd4548;
	and.b64  	%rd4614, %rd4596, %rd4613;
	xor.b64  	%rd4615, %rd4614, %rd4548;
	add.s64 	%rd4616, %rd4524, %rd4335;
	add.s64 	%rd4617, %rd4616, %rd2052;
	add.s64 	%rd4618, %rd4617, %rd4615;
	add.s64 	%rd4619, %rd4618, %rd4612;
	add.s64 	%rd4620, %rd4619, %rd4535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3250,%dummy}, %rd4607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3251}, %rd4607;
	}
	shf.r.wrap.b32 	%r3252, %r3251, %r3250, 28;
	shf.r.wrap.b32 	%r3253, %r3250, %r3251, 28;
	mov.b64 	%rd4621, {%r3253, %r3252};
	shf.l.wrap.b32 	%r3254, %r3250, %r3251, 30;
	shf.l.wrap.b32 	%r3255, %r3251, %r3250, 30;
	mov.b64 	%rd4622, {%r3255, %r3254};
	xor.b64  	%rd4623, %rd4622, %rd4621;
	shf.l.wrap.b32 	%r3256, %r3250, %r3251, 25;
	shf.l.wrap.b32 	%r3257, %r3251, %r3250, 25;
	mov.b64 	%rd4624, {%r3257, %r3256};
	xor.b64  	%rd4625, %rd4623, %rd4624;
	xor.b64  	%rd4626, %rd4607, %rd4559;
	xor.b64  	%rd4627, %rd4607, %rd4583;
	and.b64  	%rd4628, %rd4627, %rd4626;
	xor.b64  	%rd4629, %rd4628, %rd4607;
	add.s64 	%rd4630, %rd4619, %rd4629;
	add.s64 	%rd4631, %rd4630, %rd4625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3258,%dummy}, %rd4620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3259}, %rd4620;
	}
	shf.r.wrap.b32 	%r3260, %r3259, %r3258, 14;
	shf.r.wrap.b32 	%r3261, %r3258, %r3259, 14;
	mov.b64 	%rd4632, {%r3261, %r3260};
	shf.r.wrap.b32 	%r3262, %r3259, %r3258, 18;
	shf.r.wrap.b32 	%r3263, %r3258, %r3259, 18;
	mov.b64 	%rd4633, {%r3263, %r3262};
	xor.b64  	%rd4634, %rd4633, %rd4632;
	shf.l.wrap.b32 	%r3264, %r3258, %r3259, 23;
	shf.l.wrap.b32 	%r3265, %r3259, %r3258, 23;
	mov.b64 	%rd4635, {%r3265, %r3264};
	xor.b64  	%rd4636, %rd4634, %rd4635;
	xor.b64  	%rd4637, %rd4596, %rd4572;
	and.b64  	%rd4638, %rd4620, %rd4637;
	xor.b64  	%rd4639, %rd4638, %rd4572;
	add.s64 	%rd4640, %rd4548, %rd4348;
	add.s64 	%rd4641, %rd4640, %rd2077;
	add.s64 	%rd4642, %rd4641, %rd4639;
	add.s64 	%rd4643, %rd4642, %rd4636;
	add.s64 	%rd4644, %rd4643, %rd4559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3266,%dummy}, %rd4631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3267}, %rd4631;
	}
	shf.r.wrap.b32 	%r3268, %r3267, %r3266, 28;
	shf.r.wrap.b32 	%r3269, %r3266, %r3267, 28;
	mov.b64 	%rd4645, {%r3269, %r3268};
	shf.l.wrap.b32 	%r3270, %r3266, %r3267, 30;
	shf.l.wrap.b32 	%r3271, %r3267, %r3266, 30;
	mov.b64 	%rd4646, {%r3271, %r3270};
	xor.b64  	%rd4647, %rd4646, %rd4645;
	shf.l.wrap.b32 	%r3272, %r3266, %r3267, 25;
	shf.l.wrap.b32 	%r3273, %r3267, %r3266, 25;
	mov.b64 	%rd4648, {%r3273, %r3272};
	xor.b64  	%rd4649, %rd4647, %rd4648;
	xor.b64  	%rd4650, %rd4631, %rd4583;
	xor.b64  	%rd4651, %rd4631, %rd4607;
	and.b64  	%rd4652, %rd4651, %rd4650;
	xor.b64  	%rd4653, %rd4652, %rd4631;
	add.s64 	%rd4654, %rd4643, %rd4653;
	add.s64 	%rd4655, %rd4654, %rd4649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3274,%dummy}, %rd4644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3275}, %rd4644;
	}
	shf.r.wrap.b32 	%r3276, %r3275, %r3274, 14;
	shf.r.wrap.b32 	%r3277, %r3274, %r3275, 14;
	mov.b64 	%rd4656, {%r3277, %r3276};
	shf.r.wrap.b32 	%r3278, %r3275, %r3274, 18;
	shf.r.wrap.b32 	%r3279, %r3274, %r3275, 18;
	mov.b64 	%rd4657, {%r3279, %r3278};
	xor.b64  	%rd4658, %rd4657, %rd4656;
	shf.l.wrap.b32 	%r3280, %r3274, %r3275, 23;
	shf.l.wrap.b32 	%r3281, %r3275, %r3274, 23;
	mov.b64 	%rd4659, {%r3281, %r3280};
	xor.b64  	%rd4660, %rd4658, %rd4659;
	xor.b64  	%rd4661, %rd4620, %rd4596;
	and.b64  	%rd4662, %rd4644, %rd4661;
	xor.b64  	%rd4663, %rd4662, %rd4596;
	add.s64 	%rd4664, %rd4572, %rd4361;
	add.s64 	%rd4665, %rd4664, %rd2102;
	add.s64 	%rd4666, %rd4665, %rd4663;
	add.s64 	%rd4667, %rd4666, %rd4660;
	add.s64 	%rd4668, %rd4667, %rd4583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3282,%dummy}, %rd4655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3283}, %rd4655;
	}
	shf.r.wrap.b32 	%r3284, %r3283, %r3282, 28;
	shf.r.wrap.b32 	%r3285, %r3282, %r3283, 28;
	mov.b64 	%rd4669, {%r3285, %r3284};
	shf.l.wrap.b32 	%r3286, %r3282, %r3283, 30;
	shf.l.wrap.b32 	%r3287, %r3283, %r3282, 30;
	mov.b64 	%rd4670, {%r3287, %r3286};
	xor.b64  	%rd4671, %rd4670, %rd4669;
	shf.l.wrap.b32 	%r3288, %r3282, %r3283, 25;
	shf.l.wrap.b32 	%r3289, %r3283, %r3282, 25;
	mov.b64 	%rd4672, {%r3289, %r3288};
	xor.b64  	%rd4673, %rd4671, %rd4672;
	xor.b64  	%rd4674, %rd4655, %rd4607;
	xor.b64  	%rd4675, %rd4655, %rd4631;
	and.b64  	%rd4676, %rd4675, %rd4674;
	xor.b64  	%rd4677, %rd4676, %rd4655;
	add.s64 	%rd4678, %rd4667, %rd4677;
	add.s64 	%rd4679, %rd4678, %rd4673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3290,%dummy}, %rd4668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3291}, %rd4668;
	}
	shf.r.wrap.b32 	%r3292, %r3291, %r3290, 14;
	shf.r.wrap.b32 	%r3293, %r3290, %r3291, 14;
	mov.b64 	%rd4680, {%r3293, %r3292};
	shf.r.wrap.b32 	%r3294, %r3291, %r3290, 18;
	shf.r.wrap.b32 	%r3295, %r3290, %r3291, 18;
	mov.b64 	%rd4681, {%r3295, %r3294};
	xor.b64  	%rd4682, %rd4681, %rd4680;
	shf.l.wrap.b32 	%r3296, %r3290, %r3291, 23;
	shf.l.wrap.b32 	%r3297, %r3291, %r3290, 23;
	mov.b64 	%rd4683, {%r3297, %r3296};
	xor.b64  	%rd4684, %rd4682, %rd4683;
	xor.b64  	%rd4685, %rd4644, %rd4620;
	and.b64  	%rd4686, %rd4668, %rd4685;
	xor.b64  	%rd4687, %rd4686, %rd4620;
	add.s64 	%rd4688, %rd4596, %rd4374;
	add.s64 	%rd4689, %rd4688, %rd2127;
	add.s64 	%rd4690, %rd4689, %rd4687;
	add.s64 	%rd4691, %rd4690, %rd4684;
	add.s64 	%rd4692, %rd4691, %rd4607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3298,%dummy}, %rd4679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3299}, %rd4679;
	}
	shf.r.wrap.b32 	%r3300, %r3299, %r3298, 28;
	shf.r.wrap.b32 	%r3301, %r3298, %r3299, 28;
	mov.b64 	%rd4693, {%r3301, %r3300};
	shf.l.wrap.b32 	%r3302, %r3298, %r3299, 30;
	shf.l.wrap.b32 	%r3303, %r3299, %r3298, 30;
	mov.b64 	%rd4694, {%r3303, %r3302};
	xor.b64  	%rd4695, %rd4694, %rd4693;
	shf.l.wrap.b32 	%r3304, %r3298, %r3299, 25;
	shf.l.wrap.b32 	%r3305, %r3299, %r3298, 25;
	mov.b64 	%rd4696, {%r3305, %r3304};
	xor.b64  	%rd4697, %rd4695, %rd4696;
	xor.b64  	%rd4698, %rd4679, %rd4631;
	xor.b64  	%rd4699, %rd4679, %rd4655;
	and.b64  	%rd4700, %rd4699, %rd4698;
	xor.b64  	%rd4701, %rd4700, %rd4679;
	add.s64 	%rd4702, %rd4691, %rd4701;
	add.s64 	%rd4703, %rd4702, %rd4697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3306,%dummy}, %rd4692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3307}, %rd4692;
	}
	shf.r.wrap.b32 	%r3308, %r3307, %r3306, 14;
	shf.r.wrap.b32 	%r3309, %r3306, %r3307, 14;
	mov.b64 	%rd4704, {%r3309, %r3308};
	shf.r.wrap.b32 	%r3310, %r3307, %r3306, 18;
	shf.r.wrap.b32 	%r3311, %r3306, %r3307, 18;
	mov.b64 	%rd4705, {%r3311, %r3310};
	xor.b64  	%rd4706, %rd4705, %rd4704;
	shf.l.wrap.b32 	%r3312, %r3306, %r3307, 23;
	shf.l.wrap.b32 	%r3313, %r3307, %r3306, 23;
	mov.b64 	%rd4707, {%r3313, %r3312};
	xor.b64  	%rd4708, %rd4706, %rd4707;
	xor.b64  	%rd4709, %rd4668, %rd4644;
	and.b64  	%rd4710, %rd4692, %rd4709;
	xor.b64  	%rd4711, %rd4710, %rd4644;
	add.s64 	%rd4712, %rd4620, %rd4387;
	add.s64 	%rd4713, %rd4712, %rd2152;
	add.s64 	%rd4714, %rd4713, %rd4711;
	add.s64 	%rd4715, %rd4714, %rd4708;
	add.s64 	%rd4716, %rd4715, %rd4631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3314,%dummy}, %rd4703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3315}, %rd4703;
	}
	shf.r.wrap.b32 	%r3316, %r3315, %r3314, 28;
	shf.r.wrap.b32 	%r3317, %r3314, %r3315, 28;
	mov.b64 	%rd4717, {%r3317, %r3316};
	shf.l.wrap.b32 	%r3318, %r3314, %r3315, 30;
	shf.l.wrap.b32 	%r3319, %r3315, %r3314, 30;
	mov.b64 	%rd4718, {%r3319, %r3318};
	xor.b64  	%rd4719, %rd4718, %rd4717;
	shf.l.wrap.b32 	%r3320, %r3314, %r3315, 25;
	shf.l.wrap.b32 	%r3321, %r3315, %r3314, 25;
	mov.b64 	%rd4720, {%r3321, %r3320};
	xor.b64  	%rd4721, %rd4719, %rd4720;
	xor.b64  	%rd4722, %rd4703, %rd4655;
	xor.b64  	%rd4723, %rd4703, %rd4679;
	and.b64  	%rd4724, %rd4723, %rd4722;
	xor.b64  	%rd4725, %rd4724, %rd4703;
	add.s64 	%rd4726, %rd4715, %rd4725;
	add.s64 	%rd4727, %rd4726, %rd4721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3322,%dummy}, %rd4716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3323}, %rd4716;
	}
	shf.r.wrap.b32 	%r3324, %r3323, %r3322, 14;
	shf.r.wrap.b32 	%r3325, %r3322, %r3323, 14;
	mov.b64 	%rd4728, {%r3325, %r3324};
	shf.r.wrap.b32 	%r3326, %r3323, %r3322, 18;
	shf.r.wrap.b32 	%r3327, %r3322, %r3323, 18;
	mov.b64 	%rd4729, {%r3327, %r3326};
	xor.b64  	%rd4730, %rd4729, %rd4728;
	shf.l.wrap.b32 	%r3328, %r3322, %r3323, 23;
	shf.l.wrap.b32 	%r3329, %r3323, %r3322, 23;
	mov.b64 	%rd4731, {%r3329, %r3328};
	xor.b64  	%rd4732, %rd4730, %rd4731;
	xor.b64  	%rd4733, %rd4692, %rd4668;
	and.b64  	%rd4734, %rd4716, %rd4733;
	xor.b64  	%rd4735, %rd4734, %rd4668;
	add.s64 	%rd4736, %rd4644, %rd4400;
	add.s64 	%rd4737, %rd4736, %rd2177;
	add.s64 	%rd4738, %rd4737, %rd4735;
	add.s64 	%rd4739, %rd4738, %rd4732;
	add.s64 	%rd4740, %rd4739, %rd4655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3330,%dummy}, %rd4727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3331}, %rd4727;
	}
	shf.r.wrap.b32 	%r3332, %r3331, %r3330, 28;
	shf.r.wrap.b32 	%r3333, %r3330, %r3331, 28;
	mov.b64 	%rd4741, {%r3333, %r3332};
	shf.l.wrap.b32 	%r3334, %r3330, %r3331, 30;
	shf.l.wrap.b32 	%r3335, %r3331, %r3330, 30;
	mov.b64 	%rd4742, {%r3335, %r3334};
	xor.b64  	%rd4743, %rd4742, %rd4741;
	shf.l.wrap.b32 	%r3336, %r3330, %r3331, 25;
	shf.l.wrap.b32 	%r3337, %r3331, %r3330, 25;
	mov.b64 	%rd4744, {%r3337, %r3336};
	xor.b64  	%rd4745, %rd4743, %rd4744;
	xor.b64  	%rd4746, %rd4727, %rd4679;
	xor.b64  	%rd4747, %rd4727, %rd4703;
	and.b64  	%rd4748, %rd4747, %rd4746;
	xor.b64  	%rd4749, %rd4748, %rd4727;
	add.s64 	%rd4750, %rd4739, %rd4749;
	add.s64 	%rd4751, %rd4750, %rd4745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3338,%dummy}, %rd4740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3339}, %rd4740;
	}
	shf.r.wrap.b32 	%r3340, %r3339, %r3338, 14;
	shf.r.wrap.b32 	%r3341, %r3338, %r3339, 14;
	mov.b64 	%rd4752, {%r3341, %r3340};
	shf.r.wrap.b32 	%r3342, %r3339, %r3338, 18;
	shf.r.wrap.b32 	%r3343, %r3338, %r3339, 18;
	mov.b64 	%rd4753, {%r3343, %r3342};
	xor.b64  	%rd4754, %rd4753, %rd4752;
	shf.l.wrap.b32 	%r3344, %r3338, %r3339, 23;
	shf.l.wrap.b32 	%r3345, %r3339, %r3338, 23;
	mov.b64 	%rd4755, {%r3345, %r3344};
	xor.b64  	%rd4756, %rd4754, %rd4755;
	xor.b64  	%rd4757, %rd4716, %rd4692;
	and.b64  	%rd4758, %rd4740, %rd4757;
	xor.b64  	%rd4759, %rd4758, %rd4692;
	add.s64 	%rd4760, %rd4668, %rd4413;
	add.s64 	%rd4761, %rd4760, %rd2202;
	add.s64 	%rd4762, %rd4761, %rd4759;
	add.s64 	%rd4763, %rd4762, %rd4756;
	add.s64 	%rd4764, %rd4763, %rd4679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3346,%dummy}, %rd4751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3347}, %rd4751;
	}
	shf.r.wrap.b32 	%r3348, %r3347, %r3346, 28;
	shf.r.wrap.b32 	%r3349, %r3346, %r3347, 28;
	mov.b64 	%rd4765, {%r3349, %r3348};
	shf.l.wrap.b32 	%r3350, %r3346, %r3347, 30;
	shf.l.wrap.b32 	%r3351, %r3347, %r3346, 30;
	mov.b64 	%rd4766, {%r3351, %r3350};
	xor.b64  	%rd4767, %rd4766, %rd4765;
	shf.l.wrap.b32 	%r3352, %r3346, %r3347, 25;
	shf.l.wrap.b32 	%r3353, %r3347, %r3346, 25;
	mov.b64 	%rd4768, {%r3353, %r3352};
	xor.b64  	%rd4769, %rd4767, %rd4768;
	xor.b64  	%rd4770, %rd4751, %rd4703;
	xor.b64  	%rd4771, %rd4751, %rd4727;
	and.b64  	%rd4772, %rd4771, %rd4770;
	xor.b64  	%rd4773, %rd4772, %rd4751;
	add.s64 	%rd4774, %rd4763, %rd4773;
	add.s64 	%rd4775, %rd4774, %rd4769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3354,%dummy}, %rd4764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3355}, %rd4764;
	}
	shf.r.wrap.b32 	%r3356, %r3355, %r3354, 14;
	shf.r.wrap.b32 	%r3357, %r3354, %r3355, 14;
	mov.b64 	%rd4776, {%r3357, %r3356};
	shf.r.wrap.b32 	%r3358, %r3355, %r3354, 18;
	shf.r.wrap.b32 	%r3359, %r3354, %r3355, 18;
	mov.b64 	%rd4777, {%r3359, %r3358};
	xor.b64  	%rd4778, %rd4777, %rd4776;
	shf.l.wrap.b32 	%r3360, %r3354, %r3355, 23;
	shf.l.wrap.b32 	%r3361, %r3355, %r3354, 23;
	mov.b64 	%rd4779, {%r3361, %r3360};
	xor.b64  	%rd4780, %rd4778, %rd4779;
	xor.b64  	%rd4781, %rd4740, %rd4716;
	and.b64  	%rd4782, %rd4764, %rd4781;
	xor.b64  	%rd4783, %rd4782, %rd4716;
	add.s64 	%rd4784, %rd4692, %rd4426;
	add.s64 	%rd4785, %rd4784, %rd2227;
	add.s64 	%rd4786, %rd4785, %rd4783;
	add.s64 	%rd4787, %rd4786, %rd4780;
	add.s64 	%rd4788, %rd4787, %rd4703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3362,%dummy}, %rd4775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3363}, %rd4775;
	}
	shf.r.wrap.b32 	%r3364, %r3363, %r3362, 28;
	shf.r.wrap.b32 	%r3365, %r3362, %r3363, 28;
	mov.b64 	%rd4789, {%r3365, %r3364};
	shf.l.wrap.b32 	%r3366, %r3362, %r3363, 30;
	shf.l.wrap.b32 	%r3367, %r3363, %r3362, 30;
	mov.b64 	%rd4790, {%r3367, %r3366};
	xor.b64  	%rd4791, %rd4790, %rd4789;
	shf.l.wrap.b32 	%r3368, %r3362, %r3363, 25;
	shf.l.wrap.b32 	%r3369, %r3363, %r3362, 25;
	mov.b64 	%rd4792, {%r3369, %r3368};
	xor.b64  	%rd4793, %rd4791, %rd4792;
	xor.b64  	%rd4794, %rd4775, %rd4727;
	xor.b64  	%rd4795, %rd4775, %rd4751;
	and.b64  	%rd4796, %rd4795, %rd4794;
	xor.b64  	%rd4797, %rd4796, %rd4775;
	add.s64 	%rd4798, %rd4787, %rd4797;
	add.s64 	%rd4799, %rd4798, %rd4793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3370,%dummy}, %rd4788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3371}, %rd4788;
	}
	shf.r.wrap.b32 	%r3372, %r3371, %r3370, 14;
	shf.r.wrap.b32 	%r3373, %r3370, %r3371, 14;
	mov.b64 	%rd4800, {%r3373, %r3372};
	shf.r.wrap.b32 	%r3374, %r3371, %r3370, 18;
	shf.r.wrap.b32 	%r3375, %r3370, %r3371, 18;
	mov.b64 	%rd4801, {%r3375, %r3374};
	xor.b64  	%rd4802, %rd4801, %rd4800;
	shf.l.wrap.b32 	%r3376, %r3370, %r3371, 23;
	shf.l.wrap.b32 	%r3377, %r3371, %r3370, 23;
	mov.b64 	%rd4803, {%r3377, %r3376};
	xor.b64  	%rd4804, %rd4802, %rd4803;
	xor.b64  	%rd4805, %rd4764, %rd4740;
	and.b64  	%rd4806, %rd4788, %rd4805;
	xor.b64  	%rd4807, %rd4806, %rd4740;
	add.s64 	%rd4808, %rd4716, %rd4439;
	add.s64 	%rd4809, %rd4808, %rd2252;
	add.s64 	%rd4810, %rd4809, %rd4807;
	add.s64 	%rd4811, %rd4810, %rd4804;
	add.s64 	%rd4812, %rd4811, %rd4727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3378,%dummy}, %rd4799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3379}, %rd4799;
	}
	shf.r.wrap.b32 	%r3380, %r3379, %r3378, 28;
	shf.r.wrap.b32 	%r3381, %r3378, %r3379, 28;
	mov.b64 	%rd4813, {%r3381, %r3380};
	shf.l.wrap.b32 	%r3382, %r3378, %r3379, 30;
	shf.l.wrap.b32 	%r3383, %r3379, %r3378, 30;
	mov.b64 	%rd4814, {%r3383, %r3382};
	xor.b64  	%rd4815, %rd4814, %rd4813;
	shf.l.wrap.b32 	%r3384, %r3378, %r3379, 25;
	shf.l.wrap.b32 	%r3385, %r3379, %r3378, 25;
	mov.b64 	%rd4816, {%r3385, %r3384};
	xor.b64  	%rd4817, %rd4815, %rd4816;
	xor.b64  	%rd4818, %rd4799, %rd4751;
	xor.b64  	%rd4819, %rd4799, %rd4775;
	and.b64  	%rd4820, %rd4819, %rd4818;
	xor.b64  	%rd4821, %rd4820, %rd4799;
	add.s64 	%rd4822, %rd4811, %rd4821;
	add.s64 	%rd4823, %rd4822, %rd4817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd4426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3387}, %rd4426;
	}
	shf.r.wrap.b32 	%r3388, %r3387, %r3386, 19;
	shf.r.wrap.b32 	%r3389, %r3386, %r3387, 19;
	mov.b64 	%rd4824, {%r3389, %r3388};
	shf.l.wrap.b32 	%r3390, %r3386, %r3387, 3;
	shf.l.wrap.b32 	%r3391, %r3387, %r3386, 3;
	mov.b64 	%rd4825, {%r3391, %r3390};
	shr.u64 	%rd4826, %rd4426, 6;
	xor.b64  	%rd4827, %rd4824, %rd4826;
	xor.b64  	%rd4828, %rd4827, %rd4825;
	shf.r.wrap.b32 	%r3392, %r3001, %r3000, 1;
	shf.r.wrap.b32 	%r3393, %r3000, %r3001, 1;
	mov.b64 	%rd4829, {%r3393, %r3392};
	shf.r.wrap.b32 	%r3394, %r3001, %r3000, 8;
	shf.r.wrap.b32 	%r3395, %r3000, %r3001, 8;
	mov.b64 	%rd4830, {%r3395, %r3394};
	shr.u64 	%rd4831, %rd4257, 7;
	xor.b64  	%rd4832, %rd4829, %rd4831;
	xor.b64  	%rd4833, %rd4832, %rd4830;
	add.s64 	%rd4834, %rd4244, %rd4361;
	add.s64 	%rd4835, %rd4834, %rd4828;
	add.s64 	%rd4836, %rd4835, %rd4833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3396,%dummy}, %rd4439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3397}, %rd4439;
	}
	shf.r.wrap.b32 	%r3398, %r3397, %r3396, 19;
	shf.r.wrap.b32 	%r3399, %r3396, %r3397, 19;
	mov.b64 	%rd4837, {%r3399, %r3398};
	shf.l.wrap.b32 	%r3400, %r3396, %r3397, 3;
	shf.l.wrap.b32 	%r3401, %r3397, %r3396, 3;
	mov.b64 	%rd4838, {%r3401, %r3400};
	shr.u64 	%rd4839, %rd4439, 6;
	xor.b64  	%rd4840, %rd4837, %rd4839;
	xor.b64  	%rd4841, %rd4840, %rd4838;
	shf.r.wrap.b32 	%r3402, %r3011, %r3010, 1;
	shf.r.wrap.b32 	%r3403, %r3010, %r3011, 1;
	mov.b64 	%rd4842, {%r3403, %r3402};
	shf.r.wrap.b32 	%r3404, %r3011, %r3010, 8;
	shf.r.wrap.b32 	%r3405, %r3010, %r3011, 8;
	mov.b64 	%rd4843, {%r3405, %r3404};
	shr.u64 	%rd4844, %rd4270, 7;
	xor.b64  	%rd4845, %rd4842, %rd4844;
	xor.b64  	%rd4846, %rd4845, %rd4843;
	add.s64 	%rd4847, %rd4257, %rd4374;
	add.s64 	%rd4848, %rd4847, %rd4841;
	add.s64 	%rd4849, %rd4848, %rd4846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3406,%dummy}, %rd4836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3407}, %rd4836;
	}
	shf.r.wrap.b32 	%r3408, %r3407, %r3406, 19;
	shf.r.wrap.b32 	%r3409, %r3406, %r3407, 19;
	mov.b64 	%rd4850, {%r3409, %r3408};
	shf.l.wrap.b32 	%r3410, %r3406, %r3407, 3;
	shf.l.wrap.b32 	%r3411, %r3407, %r3406, 3;
	mov.b64 	%rd4851, {%r3411, %r3410};
	shr.u64 	%rd4852, %rd4836, 6;
	xor.b64  	%rd4853, %rd4850, %rd4852;
	xor.b64  	%rd4854, %rd4853, %rd4851;
	shf.r.wrap.b32 	%r3412, %r3021, %r3020, 1;
	shf.r.wrap.b32 	%r3413, %r3020, %r3021, 1;
	mov.b64 	%rd4855, {%r3413, %r3412};
	shf.r.wrap.b32 	%r3414, %r3021, %r3020, 8;
	shf.r.wrap.b32 	%r3415, %r3020, %r3021, 8;
	mov.b64 	%rd4856, {%r3415, %r3414};
	shr.u64 	%rd4857, %rd4283, 7;
	xor.b64  	%rd4858, %rd4855, %rd4857;
	xor.b64  	%rd4859, %rd4858, %rd4856;
	add.s64 	%rd4860, %rd4270, %rd4387;
	add.s64 	%rd4861, %rd4860, %rd4854;
	add.s64 	%rd4862, %rd4861, %rd4859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3416,%dummy}, %rd4849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3417}, %rd4849;
	}
	shf.r.wrap.b32 	%r3418, %r3417, %r3416, 19;
	shf.r.wrap.b32 	%r3419, %r3416, %r3417, 19;
	mov.b64 	%rd4863, {%r3419, %r3418};
	shf.l.wrap.b32 	%r3420, %r3416, %r3417, 3;
	shf.l.wrap.b32 	%r3421, %r3417, %r3416, 3;
	mov.b64 	%rd4864, {%r3421, %r3420};
	shr.u64 	%rd4865, %rd4849, 6;
	xor.b64  	%rd4866, %rd4863, %rd4865;
	xor.b64  	%rd4867, %rd4866, %rd4864;
	shf.r.wrap.b32 	%r3422, %r3031, %r3030, 1;
	shf.r.wrap.b32 	%r3423, %r3030, %r3031, 1;
	mov.b64 	%rd4868, {%r3423, %r3422};
	shf.r.wrap.b32 	%r3424, %r3031, %r3030, 8;
	shf.r.wrap.b32 	%r3425, %r3030, %r3031, 8;
	mov.b64 	%rd4869, {%r3425, %r3424};
	shr.u64 	%rd4870, %rd4296, 7;
	xor.b64  	%rd4871, %rd4868, %rd4870;
	xor.b64  	%rd4872, %rd4871, %rd4869;
	add.s64 	%rd4873, %rd4400, %rd4283;
	add.s64 	%rd4874, %rd4873, %rd4867;
	add.s64 	%rd4875, %rd4874, %rd4872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3426,%dummy}, %rd4862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3427}, %rd4862;
	}
	shf.r.wrap.b32 	%r3428, %r3427, %r3426, 19;
	shf.r.wrap.b32 	%r3429, %r3426, %r3427, 19;
	mov.b64 	%rd4876, {%r3429, %r3428};
	shf.l.wrap.b32 	%r3430, %r3426, %r3427, 3;
	shf.l.wrap.b32 	%r3431, %r3427, %r3426, 3;
	mov.b64 	%rd4877, {%r3431, %r3430};
	shr.u64 	%rd4878, %rd4862, 6;
	xor.b64  	%rd4879, %rd4876, %rd4878;
	xor.b64  	%rd4880, %rd4879, %rd4877;
	shf.r.wrap.b32 	%r3432, %r3041, %r3040, 1;
	shf.r.wrap.b32 	%r3433, %r3040, %r3041, 1;
	mov.b64 	%rd4881, {%r3433, %r3432};
	shf.r.wrap.b32 	%r3434, %r3041, %r3040, 8;
	shf.r.wrap.b32 	%r3435, %r3040, %r3041, 8;
	mov.b64 	%rd4882, {%r3435, %r3434};
	shr.u64 	%rd4883, %rd4309, 7;
	xor.b64  	%rd4884, %rd4881, %rd4883;
	xor.b64  	%rd4885, %rd4884, %rd4882;
	add.s64 	%rd4886, %rd4413, %rd4296;
	add.s64 	%rd4887, %rd4886, %rd4880;
	add.s64 	%rd4888, %rd4887, %rd4885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3436,%dummy}, %rd4875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3437}, %rd4875;
	}
	shf.r.wrap.b32 	%r3438, %r3437, %r3436, 19;
	shf.r.wrap.b32 	%r3439, %r3436, %r3437, 19;
	mov.b64 	%rd4889, {%r3439, %r3438};
	shf.l.wrap.b32 	%r3440, %r3436, %r3437, 3;
	shf.l.wrap.b32 	%r3441, %r3437, %r3436, 3;
	mov.b64 	%rd4890, {%r3441, %r3440};
	shr.u64 	%rd4891, %rd4875, 6;
	xor.b64  	%rd4892, %rd4889, %rd4891;
	xor.b64  	%rd4893, %rd4892, %rd4890;
	shf.r.wrap.b32 	%r3442, %r3051, %r3050, 1;
	shf.r.wrap.b32 	%r3443, %r3050, %r3051, 1;
	mov.b64 	%rd4894, {%r3443, %r3442};
	shf.r.wrap.b32 	%r3444, %r3051, %r3050, 8;
	shf.r.wrap.b32 	%r3445, %r3050, %r3051, 8;
	mov.b64 	%rd4895, {%r3445, %r3444};
	shr.u64 	%rd4896, %rd4322, 7;
	xor.b64  	%rd4897, %rd4894, %rd4896;
	xor.b64  	%rd4898, %rd4897, %rd4895;
	add.s64 	%rd4899, %rd4426, %rd4309;
	add.s64 	%rd4900, %rd4899, %rd4893;
	add.s64 	%rd4901, %rd4900, %rd4898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3446,%dummy}, %rd4888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3447}, %rd4888;
	}
	shf.r.wrap.b32 	%r3448, %r3447, %r3446, 19;
	shf.r.wrap.b32 	%r3449, %r3446, %r3447, 19;
	mov.b64 	%rd4902, {%r3449, %r3448};
	shf.l.wrap.b32 	%r3450, %r3446, %r3447, 3;
	shf.l.wrap.b32 	%r3451, %r3447, %r3446, 3;
	mov.b64 	%rd4903, {%r3451, %r3450};
	shr.u64 	%rd4904, %rd4888, 6;
	xor.b64  	%rd4905, %rd4902, %rd4904;
	xor.b64  	%rd4906, %rd4905, %rd4903;
	shf.r.wrap.b32 	%r3452, %r3061, %r3060, 1;
	shf.r.wrap.b32 	%r3453, %r3060, %r3061, 1;
	mov.b64 	%rd4907, {%r3453, %r3452};
	shf.r.wrap.b32 	%r3454, %r3061, %r3060, 8;
	shf.r.wrap.b32 	%r3455, %r3060, %r3061, 8;
	mov.b64 	%rd4908, {%r3455, %r3454};
	shr.u64 	%rd4909, %rd4335, 7;
	xor.b64  	%rd4910, %rd4907, %rd4909;
	xor.b64  	%rd4911, %rd4910, %rd4908;
	add.s64 	%rd4912, %rd4439, %rd4322;
	add.s64 	%rd4913, %rd4912, %rd4906;
	add.s64 	%rd4914, %rd4913, %rd4911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3456,%dummy}, %rd4901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3457}, %rd4901;
	}
	shf.r.wrap.b32 	%r3458, %r3457, %r3456, 19;
	shf.r.wrap.b32 	%r3459, %r3456, %r3457, 19;
	mov.b64 	%rd4915, {%r3459, %r3458};
	shf.l.wrap.b32 	%r3460, %r3456, %r3457, 3;
	shf.l.wrap.b32 	%r3461, %r3457, %r3456, 3;
	mov.b64 	%rd4916, {%r3461, %r3460};
	shr.u64 	%rd4917, %rd4901, 6;
	xor.b64  	%rd4918, %rd4915, %rd4917;
	xor.b64  	%rd4919, %rd4918, %rd4916;
	shf.r.wrap.b32 	%r3462, %r3071, %r3070, 1;
	shf.r.wrap.b32 	%r3463, %r3070, %r3071, 1;
	mov.b64 	%rd4920, {%r3463, %r3462};
	shf.r.wrap.b32 	%r3464, %r3071, %r3070, 8;
	shf.r.wrap.b32 	%r3465, %r3070, %r3071, 8;
	mov.b64 	%rd4921, {%r3465, %r3464};
	shr.u64 	%rd4922, %rd4348, 7;
	xor.b64  	%rd4923, %rd4920, %rd4922;
	xor.b64  	%rd4924, %rd4923, %rd4921;
	add.s64 	%rd4925, %rd4836, %rd4335;
	add.s64 	%rd4926, %rd4925, %rd4919;
	add.s64 	%rd4927, %rd4926, %rd4924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3466,%dummy}, %rd4914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3467}, %rd4914;
	}
	shf.r.wrap.b32 	%r3468, %r3467, %r3466, 19;
	shf.r.wrap.b32 	%r3469, %r3466, %r3467, 19;
	mov.b64 	%rd4928, {%r3469, %r3468};
	shf.l.wrap.b32 	%r3470, %r3466, %r3467, 3;
	shf.l.wrap.b32 	%r3471, %r3467, %r3466, 3;
	mov.b64 	%rd4929, {%r3471, %r3470};
	shr.u64 	%rd4930, %rd4914, 6;
	xor.b64  	%rd4931, %rd4928, %rd4930;
	xor.b64  	%rd4932, %rd4931, %rd4929;
	shf.r.wrap.b32 	%r3472, %r3081, %r3080, 1;
	shf.r.wrap.b32 	%r3473, %r3080, %r3081, 1;
	mov.b64 	%rd4933, {%r3473, %r3472};
	shf.r.wrap.b32 	%r3474, %r3081, %r3080, 8;
	shf.r.wrap.b32 	%r3475, %r3080, %r3081, 8;
	mov.b64 	%rd4934, {%r3475, %r3474};
	shr.u64 	%rd4935, %rd4361, 7;
	xor.b64  	%rd4936, %rd4933, %rd4935;
	xor.b64  	%rd4937, %rd4936, %rd4934;
	add.s64 	%rd4938, %rd4849, %rd4348;
	add.s64 	%rd4939, %rd4938, %rd4932;
	add.s64 	%rd4940, %rd4939, %rd4937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3476,%dummy}, %rd4927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3477}, %rd4927;
	}
	shf.r.wrap.b32 	%r3478, %r3477, %r3476, 19;
	shf.r.wrap.b32 	%r3479, %r3476, %r3477, 19;
	mov.b64 	%rd4941, {%r3479, %r3478};
	shf.l.wrap.b32 	%r3480, %r3476, %r3477, 3;
	shf.l.wrap.b32 	%r3481, %r3477, %r3476, 3;
	mov.b64 	%rd4942, {%r3481, %r3480};
	shr.u64 	%rd4943, %rd4927, 6;
	xor.b64  	%rd4944, %rd4941, %rd4943;
	xor.b64  	%rd4945, %rd4944, %rd4942;
	shf.r.wrap.b32 	%r3482, %r3091, %r3090, 1;
	shf.r.wrap.b32 	%r3483, %r3090, %r3091, 1;
	mov.b64 	%rd4946, {%r3483, %r3482};
	shf.r.wrap.b32 	%r3484, %r3091, %r3090, 8;
	shf.r.wrap.b32 	%r3485, %r3090, %r3091, 8;
	mov.b64 	%rd4947, {%r3485, %r3484};
	shr.u64 	%rd4948, %rd4374, 7;
	xor.b64  	%rd4949, %rd4946, %rd4948;
	xor.b64  	%rd4950, %rd4949, %rd4947;
	add.s64 	%rd4951, %rd4862, %rd4361;
	add.s64 	%rd4952, %rd4951, %rd4945;
	add.s64 	%rd4953, %rd4952, %rd4950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3486,%dummy}, %rd4940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3487}, %rd4940;
	}
	shf.r.wrap.b32 	%r3488, %r3487, %r3486, 19;
	shf.r.wrap.b32 	%r3489, %r3486, %r3487, 19;
	mov.b64 	%rd4954, {%r3489, %r3488};
	shf.l.wrap.b32 	%r3490, %r3486, %r3487, 3;
	shf.l.wrap.b32 	%r3491, %r3487, %r3486, 3;
	mov.b64 	%rd4955, {%r3491, %r3490};
	shr.u64 	%rd4956, %rd4940, 6;
	xor.b64  	%rd4957, %rd4954, %rd4956;
	xor.b64  	%rd4958, %rd4957, %rd4955;
	shf.r.wrap.b32 	%r3492, %r3101, %r3100, 1;
	shf.r.wrap.b32 	%r3493, %r3100, %r3101, 1;
	mov.b64 	%rd4959, {%r3493, %r3492};
	shf.r.wrap.b32 	%r3494, %r3101, %r3100, 8;
	shf.r.wrap.b32 	%r3495, %r3100, %r3101, 8;
	mov.b64 	%rd4960, {%r3495, %r3494};
	shr.u64 	%rd4961, %rd4387, 7;
	xor.b64  	%rd4962, %rd4959, %rd4961;
	xor.b64  	%rd4963, %rd4962, %rd4960;
	add.s64 	%rd4964, %rd4875, %rd4374;
	add.s64 	%rd4965, %rd4964, %rd4958;
	add.s64 	%rd4966, %rd4965, %rd4963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3496,%dummy}, %rd4953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3497}, %rd4953;
	}
	shf.r.wrap.b32 	%r3498, %r3497, %r3496, 19;
	shf.r.wrap.b32 	%r3499, %r3496, %r3497, 19;
	mov.b64 	%rd4967, {%r3499, %r3498};
	shf.l.wrap.b32 	%r3500, %r3496, %r3497, 3;
	shf.l.wrap.b32 	%r3501, %r3497, %r3496, 3;
	mov.b64 	%rd4968, {%r3501, %r3500};
	shr.u64 	%rd4969, %rd4953, 6;
	xor.b64  	%rd4970, %rd4967, %rd4969;
	xor.b64  	%rd4971, %rd4970, %rd4968;
	shf.r.wrap.b32 	%r3502, %r3111, %r3110, 1;
	shf.r.wrap.b32 	%r3503, %r3110, %r3111, 1;
	mov.b64 	%rd4972, {%r3503, %r3502};
	shf.r.wrap.b32 	%r3504, %r3111, %r3110, 8;
	shf.r.wrap.b32 	%r3505, %r3110, %r3111, 8;
	mov.b64 	%rd4973, {%r3505, %r3504};
	shr.u64 	%rd4974, %rd4400, 7;
	xor.b64  	%rd4975, %rd4972, %rd4974;
	xor.b64  	%rd4976, %rd4975, %rd4973;
	add.s64 	%rd4977, %rd4888, %rd4387;
	add.s64 	%rd4978, %rd4977, %rd4971;
	add.s64 	%rd4979, %rd4978, %rd4976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3506,%dummy}, %rd4966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3507}, %rd4966;
	}
	shf.r.wrap.b32 	%r3508, %r3507, %r3506, 19;
	shf.r.wrap.b32 	%r3509, %r3506, %r3507, 19;
	mov.b64 	%rd4980, {%r3509, %r3508};
	shf.l.wrap.b32 	%r3510, %r3506, %r3507, 3;
	shf.l.wrap.b32 	%r3511, %r3507, %r3506, 3;
	mov.b64 	%rd4981, {%r3511, %r3510};
	shr.u64 	%rd4982, %rd4966, 6;
	xor.b64  	%rd4983, %rd4980, %rd4982;
	xor.b64  	%rd4984, %rd4983, %rd4981;
	shf.r.wrap.b32 	%r3512, %r3121, %r3120, 1;
	shf.r.wrap.b32 	%r3513, %r3120, %r3121, 1;
	mov.b64 	%rd4985, {%r3513, %r3512};
	shf.r.wrap.b32 	%r3514, %r3121, %r3120, 8;
	shf.r.wrap.b32 	%r3515, %r3120, %r3121, 8;
	mov.b64 	%rd4986, {%r3515, %r3514};
	shr.u64 	%rd4987, %rd4413, 7;
	xor.b64  	%rd4988, %rd4985, %rd4987;
	xor.b64  	%rd4989, %rd4988, %rd4986;
	add.s64 	%rd4990, %rd4901, %rd4400;
	add.s64 	%rd4991, %rd4990, %rd4984;
	add.s64 	%rd4992, %rd4991, %rd4989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3516,%dummy}, %rd4979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3517}, %rd4979;
	}
	shf.r.wrap.b32 	%r3518, %r3517, %r3516, 19;
	shf.r.wrap.b32 	%r3519, %r3516, %r3517, 19;
	mov.b64 	%rd4993, {%r3519, %r3518};
	shf.l.wrap.b32 	%r3520, %r3516, %r3517, 3;
	shf.l.wrap.b32 	%r3521, %r3517, %r3516, 3;
	mov.b64 	%rd4994, {%r3521, %r3520};
	shr.u64 	%rd4995, %rd4979, 6;
	xor.b64  	%rd4996, %rd4993, %rd4995;
	xor.b64  	%rd4997, %rd4996, %rd4994;
	shf.r.wrap.b32 	%r3522, %r3387, %r3386, 1;
	shf.r.wrap.b32 	%r3523, %r3386, %r3387, 1;
	mov.b64 	%rd4998, {%r3523, %r3522};
	shf.r.wrap.b32 	%r3524, %r3387, %r3386, 8;
	shf.r.wrap.b32 	%r3525, %r3386, %r3387, 8;
	mov.b64 	%rd4999, {%r3525, %r3524};
	shr.u64 	%rd5000, %rd4426, 7;
	xor.b64  	%rd5001, %rd4998, %rd5000;
	xor.b64  	%rd5002, %rd5001, %rd4999;
	add.s64 	%rd5003, %rd4914, %rd4413;
	add.s64 	%rd5004, %rd5003, %rd4997;
	add.s64 	%rd5005, %rd5004, %rd5002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3526,%dummy}, %rd4992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3527}, %rd4992;
	}
	shf.r.wrap.b32 	%r3528, %r3527, %r3526, 19;
	shf.r.wrap.b32 	%r3529, %r3526, %r3527, 19;
	mov.b64 	%rd5006, {%r3529, %r3528};
	shf.l.wrap.b32 	%r3530, %r3526, %r3527, 3;
	shf.l.wrap.b32 	%r3531, %r3527, %r3526, 3;
	mov.b64 	%rd5007, {%r3531, %r3530};
	shr.u64 	%rd5008, %rd4992, 6;
	xor.b64  	%rd5009, %rd5006, %rd5008;
	xor.b64  	%rd5010, %rd5009, %rd5007;
	shf.r.wrap.b32 	%r3532, %r3397, %r3396, 1;
	shf.r.wrap.b32 	%r3533, %r3396, %r3397, 1;
	mov.b64 	%rd5011, {%r3533, %r3532};
	shf.r.wrap.b32 	%r3534, %r3397, %r3396, 8;
	shf.r.wrap.b32 	%r3535, %r3396, %r3397, 8;
	mov.b64 	%rd5012, {%r3535, %r3534};
	shr.u64 	%rd5013, %rd4439, 7;
	xor.b64  	%rd5014, %rd5011, %rd5013;
	xor.b64  	%rd5015, %rd5014, %rd5012;
	add.s64 	%rd5016, %rd4927, %rd4426;
	add.s64 	%rd5017, %rd5016, %rd5010;
	add.s64 	%rd5018, %rd5017, %rd5015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3536,%dummy}, %rd5005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3537}, %rd5005;
	}
	shf.r.wrap.b32 	%r3538, %r3537, %r3536, 19;
	shf.r.wrap.b32 	%r3539, %r3536, %r3537, 19;
	mov.b64 	%rd5019, {%r3539, %r3538};
	shf.l.wrap.b32 	%r3540, %r3536, %r3537, 3;
	shf.l.wrap.b32 	%r3541, %r3537, %r3536, 3;
	mov.b64 	%rd5020, {%r3541, %r3540};
	shr.u64 	%rd5021, %rd5005, 6;
	xor.b64  	%rd5022, %rd5019, %rd5021;
	xor.b64  	%rd5023, %rd5022, %rd5020;
	shf.r.wrap.b32 	%r3542, %r3407, %r3406, 1;
	shf.r.wrap.b32 	%r3543, %r3406, %r3407, 1;
	mov.b64 	%rd5024, {%r3543, %r3542};
	shf.r.wrap.b32 	%r3544, %r3407, %r3406, 8;
	shf.r.wrap.b32 	%r3545, %r3406, %r3407, 8;
	mov.b64 	%rd5025, {%r3545, %r3544};
	shr.u64 	%rd5026, %rd4836, 7;
	xor.b64  	%rd5027, %rd5024, %rd5026;
	xor.b64  	%rd5028, %rd5027, %rd5025;
	add.s64 	%rd5029, %rd4940, %rd4439;
	add.s64 	%rd5030, %rd5029, %rd5023;
	add.s64 	%rd5031, %rd5030, %rd5028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3546,%dummy}, %rd4812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3547}, %rd4812;
	}
	shf.r.wrap.b32 	%r3548, %r3547, %r3546, 14;
	shf.r.wrap.b32 	%r3549, %r3546, %r3547, 14;
	mov.b64 	%rd5032, {%r3549, %r3548};
	shf.r.wrap.b32 	%r3550, %r3547, %r3546, 18;
	shf.r.wrap.b32 	%r3551, %r3546, %r3547, 18;
	mov.b64 	%rd5033, {%r3551, %r3550};
	xor.b64  	%rd5034, %rd5033, %rd5032;
	shf.l.wrap.b32 	%r3552, %r3546, %r3547, 23;
	shf.l.wrap.b32 	%r3553, %r3547, %r3546, 23;
	mov.b64 	%rd5035, {%r3553, %r3552};
	xor.b64  	%rd5036, %rd5034, %rd5035;
	xor.b64  	%rd5037, %rd4788, %rd4764;
	and.b64  	%rd5038, %rd5037, %rd4812;
	xor.b64  	%rd5039, %rd5038, %rd4764;
	add.s64 	%rd5040, %rd5039, %rd4740;
	add.s64 	%rd5041, %rd5040, %rd4836;
	add.s64 	%rd5042, %rd5041, %rd2486;
	add.s64 	%rd5043, %rd5042, %rd5036;
	add.s64 	%rd5044, %rd5043, %rd4751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3554,%dummy}, %rd4823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3555}, %rd4823;
	}
	shf.r.wrap.b32 	%r3556, %r3555, %r3554, 28;
	shf.r.wrap.b32 	%r3557, %r3554, %r3555, 28;
	mov.b64 	%rd5045, {%r3557, %r3556};
	shf.l.wrap.b32 	%r3558, %r3554, %r3555, 30;
	shf.l.wrap.b32 	%r3559, %r3555, %r3554, 30;
	mov.b64 	%rd5046, {%r3559, %r3558};
	xor.b64  	%rd5047, %rd5046, %rd5045;
	shf.l.wrap.b32 	%r3560, %r3554, %r3555, 25;
	shf.l.wrap.b32 	%r3561, %r3555, %r3554, 25;
	mov.b64 	%rd5048, {%r3561, %r3560};
	xor.b64  	%rd5049, %rd5047, %rd5048;
	xor.b64  	%rd5050, %rd4823, %rd4775;
	xor.b64  	%rd5051, %rd4823, %rd4799;
	and.b64  	%rd5052, %rd5051, %rd5050;
	xor.b64  	%rd5053, %rd5052, %rd4823;
	add.s64 	%rd5054, %rd5043, %rd5053;
	add.s64 	%rd5055, %rd5054, %rd5049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3562,%dummy}, %rd5044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3563}, %rd5044;
	}
	shf.r.wrap.b32 	%r3564, %r3563, %r3562, 14;
	shf.r.wrap.b32 	%r3565, %r3562, %r3563, 14;
	mov.b64 	%rd5056, {%r3565, %r3564};
	shf.r.wrap.b32 	%r3566, %r3563, %r3562, 18;
	shf.r.wrap.b32 	%r3567, %r3562, %r3563, 18;
	mov.b64 	%rd5057, {%r3567, %r3566};
	xor.b64  	%rd5058, %rd5057, %rd5056;
	shf.l.wrap.b32 	%r3568, %r3562, %r3563, 23;
	shf.l.wrap.b32 	%r3569, %r3563, %r3562, 23;
	mov.b64 	%rd5059, {%r3569, %r3568};
	xor.b64  	%rd5060, %rd5058, %rd5059;
	xor.b64  	%rd5061, %rd4812, %rd4788;
	and.b64  	%rd5062, %rd5044, %rd5061;
	xor.b64  	%rd5063, %rd5062, %rd4788;
	add.s64 	%rd5064, %rd4849, %rd4764;
	add.s64 	%rd5065, %rd5064, %rd2510;
	add.s64 	%rd5066, %rd5065, %rd5063;
	add.s64 	%rd5067, %rd5066, %rd5060;
	add.s64 	%rd5068, %rd5067, %rd4775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3570,%dummy}, %rd5055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3571}, %rd5055;
	}
	shf.r.wrap.b32 	%r3572, %r3571, %r3570, 28;
	shf.r.wrap.b32 	%r3573, %r3570, %r3571, 28;
	mov.b64 	%rd5069, {%r3573, %r3572};
	shf.l.wrap.b32 	%r3574, %r3570, %r3571, 30;
	shf.l.wrap.b32 	%r3575, %r3571, %r3570, 30;
	mov.b64 	%rd5070, {%r3575, %r3574};
	xor.b64  	%rd5071, %rd5070, %rd5069;
	shf.l.wrap.b32 	%r3576, %r3570, %r3571, 25;
	shf.l.wrap.b32 	%r3577, %r3571, %r3570, 25;
	mov.b64 	%rd5072, {%r3577, %r3576};
	xor.b64  	%rd5073, %rd5071, %rd5072;
	xor.b64  	%rd5074, %rd5055, %rd4799;
	xor.b64  	%rd5075, %rd5055, %rd4823;
	and.b64  	%rd5076, %rd5075, %rd5074;
	xor.b64  	%rd5077, %rd5076, %rd5055;
	add.s64 	%rd5078, %rd5067, %rd5077;
	add.s64 	%rd5079, %rd5078, %rd5073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3578,%dummy}, %rd5068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3579}, %rd5068;
	}
	shf.r.wrap.b32 	%r3580, %r3579, %r3578, 14;
	shf.r.wrap.b32 	%r3581, %r3578, %r3579, 14;
	mov.b64 	%rd5080, {%r3581, %r3580};
	shf.r.wrap.b32 	%r3582, %r3579, %r3578, 18;
	shf.r.wrap.b32 	%r3583, %r3578, %r3579, 18;
	mov.b64 	%rd5081, {%r3583, %r3582};
	xor.b64  	%rd5082, %rd5081, %rd5080;
	shf.l.wrap.b32 	%r3584, %r3578, %r3579, 23;
	shf.l.wrap.b32 	%r3585, %r3579, %r3578, 23;
	mov.b64 	%rd5083, {%r3585, %r3584};
	xor.b64  	%rd5084, %rd5082, %rd5083;
	xor.b64  	%rd5085, %rd5044, %rd4812;
	and.b64  	%rd5086, %rd5068, %rd5085;
	xor.b64  	%rd5087, %rd5086, %rd4812;
	add.s64 	%rd5088, %rd4862, %rd4788;
	add.s64 	%rd5089, %rd5088, %rd2535;
	add.s64 	%rd5090, %rd5089, %rd5087;
	add.s64 	%rd5091, %rd5090, %rd5084;
	add.s64 	%rd5092, %rd5091, %rd4799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3586,%dummy}, %rd5079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3587}, %rd5079;
	}
	shf.r.wrap.b32 	%r3588, %r3587, %r3586, 28;
	shf.r.wrap.b32 	%r3589, %r3586, %r3587, 28;
	mov.b64 	%rd5093, {%r3589, %r3588};
	shf.l.wrap.b32 	%r3590, %r3586, %r3587, 30;
	shf.l.wrap.b32 	%r3591, %r3587, %r3586, 30;
	mov.b64 	%rd5094, {%r3591, %r3590};
	xor.b64  	%rd5095, %rd5094, %rd5093;
	shf.l.wrap.b32 	%r3592, %r3586, %r3587, 25;
	shf.l.wrap.b32 	%r3593, %r3587, %r3586, 25;
	mov.b64 	%rd5096, {%r3593, %r3592};
	xor.b64  	%rd5097, %rd5095, %rd5096;
	xor.b64  	%rd5098, %rd5079, %rd4823;
	xor.b64  	%rd5099, %rd5079, %rd5055;
	and.b64  	%rd5100, %rd5099, %rd5098;
	xor.b64  	%rd5101, %rd5100, %rd5079;
	add.s64 	%rd5102, %rd5091, %rd5101;
	add.s64 	%rd5103, %rd5102, %rd5097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3594,%dummy}, %rd5092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3595}, %rd5092;
	}
	shf.r.wrap.b32 	%r3596, %r3595, %r3594, 14;
	shf.r.wrap.b32 	%r3597, %r3594, %r3595, 14;
	mov.b64 	%rd5104, {%r3597, %r3596};
	shf.r.wrap.b32 	%r3598, %r3595, %r3594, 18;
	shf.r.wrap.b32 	%r3599, %r3594, %r3595, 18;
	mov.b64 	%rd5105, {%r3599, %r3598};
	xor.b64  	%rd5106, %rd5105, %rd5104;
	shf.l.wrap.b32 	%r3600, %r3594, %r3595, 23;
	shf.l.wrap.b32 	%r3601, %r3595, %r3594, 23;
	mov.b64 	%rd5107, {%r3601, %r3600};
	xor.b64  	%rd5108, %rd5106, %rd5107;
	xor.b64  	%rd5109, %rd5068, %rd5044;
	and.b64  	%rd5110, %rd5092, %rd5109;
	xor.b64  	%rd5111, %rd5110, %rd5044;
	add.s64 	%rd5112, %rd4875, %rd4812;
	add.s64 	%rd5113, %rd5112, %rd2560;
	add.s64 	%rd5114, %rd5113, %rd5111;
	add.s64 	%rd5115, %rd5114, %rd5108;
	add.s64 	%rd5116, %rd5115, %rd4823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3602,%dummy}, %rd5103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3603}, %rd5103;
	}
	shf.r.wrap.b32 	%r3604, %r3603, %r3602, 28;
	shf.r.wrap.b32 	%r3605, %r3602, %r3603, 28;
	mov.b64 	%rd5117, {%r3605, %r3604};
	shf.l.wrap.b32 	%r3606, %r3602, %r3603, 30;
	shf.l.wrap.b32 	%r3607, %r3603, %r3602, 30;
	mov.b64 	%rd5118, {%r3607, %r3606};
	xor.b64  	%rd5119, %rd5118, %rd5117;
	shf.l.wrap.b32 	%r3608, %r3602, %r3603, 25;
	shf.l.wrap.b32 	%r3609, %r3603, %r3602, 25;
	mov.b64 	%rd5120, {%r3609, %r3608};
	xor.b64  	%rd5121, %rd5119, %rd5120;
	xor.b64  	%rd5122, %rd5103, %rd5055;
	xor.b64  	%rd5123, %rd5103, %rd5079;
	and.b64  	%rd5124, %rd5123, %rd5122;
	xor.b64  	%rd5125, %rd5124, %rd5103;
	add.s64 	%rd5126, %rd5115, %rd5125;
	add.s64 	%rd5127, %rd5126, %rd5121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3610,%dummy}, %rd5116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3611}, %rd5116;
	}
	shf.r.wrap.b32 	%r3612, %r3611, %r3610, 14;
	shf.r.wrap.b32 	%r3613, %r3610, %r3611, 14;
	mov.b64 	%rd5128, {%r3613, %r3612};
	shf.r.wrap.b32 	%r3614, %r3611, %r3610, 18;
	shf.r.wrap.b32 	%r3615, %r3610, %r3611, 18;
	mov.b64 	%rd5129, {%r3615, %r3614};
	xor.b64  	%rd5130, %rd5129, %rd5128;
	shf.l.wrap.b32 	%r3616, %r3610, %r3611, 23;
	shf.l.wrap.b32 	%r3617, %r3611, %r3610, 23;
	mov.b64 	%rd5131, {%r3617, %r3616};
	xor.b64  	%rd5132, %rd5130, %rd5131;
	xor.b64  	%rd5133, %rd5092, %rd5068;
	and.b64  	%rd5134, %rd5116, %rd5133;
	xor.b64  	%rd5135, %rd5134, %rd5068;
	add.s64 	%rd5136, %rd5044, %rd4888;
	add.s64 	%rd5137, %rd5136, %rd2585;
	add.s64 	%rd5138, %rd5137, %rd5135;
	add.s64 	%rd5139, %rd5138, %rd5132;
	add.s64 	%rd5140, %rd5139, %rd5055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3618,%dummy}, %rd5127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3619}, %rd5127;
	}
	shf.r.wrap.b32 	%r3620, %r3619, %r3618, 28;
	shf.r.wrap.b32 	%r3621, %r3618, %r3619, 28;
	mov.b64 	%rd5141, {%r3621, %r3620};
	shf.l.wrap.b32 	%r3622, %r3618, %r3619, 30;
	shf.l.wrap.b32 	%r3623, %r3619, %r3618, 30;
	mov.b64 	%rd5142, {%r3623, %r3622};
	xor.b64  	%rd5143, %rd5142, %rd5141;
	shf.l.wrap.b32 	%r3624, %r3618, %r3619, 25;
	shf.l.wrap.b32 	%r3625, %r3619, %r3618, 25;
	mov.b64 	%rd5144, {%r3625, %r3624};
	xor.b64  	%rd5145, %rd5143, %rd5144;
	xor.b64  	%rd5146, %rd5127, %rd5079;
	xor.b64  	%rd5147, %rd5127, %rd5103;
	and.b64  	%rd5148, %rd5147, %rd5146;
	xor.b64  	%rd5149, %rd5148, %rd5127;
	add.s64 	%rd5150, %rd5139, %rd5149;
	add.s64 	%rd5151, %rd5150, %rd5145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3626,%dummy}, %rd5140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3627}, %rd5140;
	}
	shf.r.wrap.b32 	%r3628, %r3627, %r3626, 14;
	shf.r.wrap.b32 	%r3629, %r3626, %r3627, 14;
	mov.b64 	%rd5152, {%r3629, %r3628};
	shf.r.wrap.b32 	%r3630, %r3627, %r3626, 18;
	shf.r.wrap.b32 	%r3631, %r3626, %r3627, 18;
	mov.b64 	%rd5153, {%r3631, %r3630};
	xor.b64  	%rd5154, %rd5153, %rd5152;
	shf.l.wrap.b32 	%r3632, %r3626, %r3627, 23;
	shf.l.wrap.b32 	%r3633, %r3627, %r3626, 23;
	mov.b64 	%rd5155, {%r3633, %r3632};
	xor.b64  	%rd5156, %rd5154, %rd5155;
	xor.b64  	%rd5157, %rd5116, %rd5092;
	and.b64  	%rd5158, %rd5140, %rd5157;
	xor.b64  	%rd5159, %rd5158, %rd5092;
	add.s64 	%rd5160, %rd5068, %rd4901;
	add.s64 	%rd5161, %rd5160, %rd2610;
	add.s64 	%rd5162, %rd5161, %rd5159;
	add.s64 	%rd5163, %rd5162, %rd5156;
	add.s64 	%rd5164, %rd5163, %rd5079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3634,%dummy}, %rd5151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3635}, %rd5151;
	}
	shf.r.wrap.b32 	%r3636, %r3635, %r3634, 28;
	shf.r.wrap.b32 	%r3637, %r3634, %r3635, 28;
	mov.b64 	%rd5165, {%r3637, %r3636};
	shf.l.wrap.b32 	%r3638, %r3634, %r3635, 30;
	shf.l.wrap.b32 	%r3639, %r3635, %r3634, 30;
	mov.b64 	%rd5166, {%r3639, %r3638};
	xor.b64  	%rd5167, %rd5166, %rd5165;
	shf.l.wrap.b32 	%r3640, %r3634, %r3635, 25;
	shf.l.wrap.b32 	%r3641, %r3635, %r3634, 25;
	mov.b64 	%rd5168, {%r3641, %r3640};
	xor.b64  	%rd5169, %rd5167, %rd5168;
	xor.b64  	%rd5170, %rd5151, %rd5103;
	xor.b64  	%rd5171, %rd5151, %rd5127;
	and.b64  	%rd5172, %rd5171, %rd5170;
	xor.b64  	%rd5173, %rd5172, %rd5151;
	add.s64 	%rd5174, %rd5163, %rd5173;
	add.s64 	%rd5175, %rd5174, %rd5169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3642,%dummy}, %rd5164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3643}, %rd5164;
	}
	shf.r.wrap.b32 	%r3644, %r3643, %r3642, 14;
	shf.r.wrap.b32 	%r3645, %r3642, %r3643, 14;
	mov.b64 	%rd5176, {%r3645, %r3644};
	shf.r.wrap.b32 	%r3646, %r3643, %r3642, 18;
	shf.r.wrap.b32 	%r3647, %r3642, %r3643, 18;
	mov.b64 	%rd5177, {%r3647, %r3646};
	xor.b64  	%rd5178, %rd5177, %rd5176;
	shf.l.wrap.b32 	%r3648, %r3642, %r3643, 23;
	shf.l.wrap.b32 	%r3649, %r3643, %r3642, 23;
	mov.b64 	%rd5179, {%r3649, %r3648};
	xor.b64  	%rd5180, %rd5178, %rd5179;
	xor.b64  	%rd5181, %rd5140, %rd5116;
	and.b64  	%rd5182, %rd5164, %rd5181;
	xor.b64  	%rd5183, %rd5182, %rd5116;
	add.s64 	%rd5184, %rd5092, %rd4914;
	add.s64 	%rd5185, %rd5184, %rd2635;
	add.s64 	%rd5186, %rd5185, %rd5183;
	add.s64 	%rd5187, %rd5186, %rd5180;
	add.s64 	%rd5188, %rd5187, %rd5103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3650,%dummy}, %rd5175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3651}, %rd5175;
	}
	shf.r.wrap.b32 	%r3652, %r3651, %r3650, 28;
	shf.r.wrap.b32 	%r3653, %r3650, %r3651, 28;
	mov.b64 	%rd5189, {%r3653, %r3652};
	shf.l.wrap.b32 	%r3654, %r3650, %r3651, 30;
	shf.l.wrap.b32 	%r3655, %r3651, %r3650, 30;
	mov.b64 	%rd5190, {%r3655, %r3654};
	xor.b64  	%rd5191, %rd5190, %rd5189;
	shf.l.wrap.b32 	%r3656, %r3650, %r3651, 25;
	shf.l.wrap.b32 	%r3657, %r3651, %r3650, 25;
	mov.b64 	%rd5192, {%r3657, %r3656};
	xor.b64  	%rd5193, %rd5191, %rd5192;
	xor.b64  	%rd5194, %rd5175, %rd5127;
	xor.b64  	%rd5195, %rd5175, %rd5151;
	and.b64  	%rd5196, %rd5195, %rd5194;
	xor.b64  	%rd5197, %rd5196, %rd5175;
	add.s64 	%rd5198, %rd5187, %rd5197;
	add.s64 	%rd5199, %rd5198, %rd5193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3658,%dummy}, %rd5188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3659}, %rd5188;
	}
	shf.r.wrap.b32 	%r3660, %r3659, %r3658, 14;
	shf.r.wrap.b32 	%r3661, %r3658, %r3659, 14;
	mov.b64 	%rd5200, {%r3661, %r3660};
	shf.r.wrap.b32 	%r3662, %r3659, %r3658, 18;
	shf.r.wrap.b32 	%r3663, %r3658, %r3659, 18;
	mov.b64 	%rd5201, {%r3663, %r3662};
	xor.b64  	%rd5202, %rd5201, %rd5200;
	shf.l.wrap.b32 	%r3664, %r3658, %r3659, 23;
	shf.l.wrap.b32 	%r3665, %r3659, %r3658, 23;
	mov.b64 	%rd5203, {%r3665, %r3664};
	xor.b64  	%rd5204, %rd5202, %rd5203;
	xor.b64  	%rd5205, %rd5164, %rd5140;
	and.b64  	%rd5206, %rd5188, %rd5205;
	xor.b64  	%rd5207, %rd5206, %rd5140;
	add.s64 	%rd5208, %rd5116, %rd4927;
	add.s64 	%rd5209, %rd5208, %rd2660;
	add.s64 	%rd5210, %rd5209, %rd5207;
	add.s64 	%rd5211, %rd5210, %rd5204;
	add.s64 	%rd5212, %rd5211, %rd5127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3666,%dummy}, %rd5199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3667}, %rd5199;
	}
	shf.r.wrap.b32 	%r3668, %r3667, %r3666, 28;
	shf.r.wrap.b32 	%r3669, %r3666, %r3667, 28;
	mov.b64 	%rd5213, {%r3669, %r3668};
	shf.l.wrap.b32 	%r3670, %r3666, %r3667, 30;
	shf.l.wrap.b32 	%r3671, %r3667, %r3666, 30;
	mov.b64 	%rd5214, {%r3671, %r3670};
	xor.b64  	%rd5215, %rd5214, %rd5213;
	shf.l.wrap.b32 	%r3672, %r3666, %r3667, 25;
	shf.l.wrap.b32 	%r3673, %r3667, %r3666, 25;
	mov.b64 	%rd5216, {%r3673, %r3672};
	xor.b64  	%rd5217, %rd5215, %rd5216;
	xor.b64  	%rd5218, %rd5199, %rd5151;
	xor.b64  	%rd5219, %rd5199, %rd5175;
	and.b64  	%rd5220, %rd5219, %rd5218;
	xor.b64  	%rd5221, %rd5220, %rd5199;
	add.s64 	%rd5222, %rd5211, %rd5221;
	add.s64 	%rd5223, %rd5222, %rd5217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3674,%dummy}, %rd5212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3675}, %rd5212;
	}
	shf.r.wrap.b32 	%r3676, %r3675, %r3674, 14;
	shf.r.wrap.b32 	%r3677, %r3674, %r3675, 14;
	mov.b64 	%rd5224, {%r3677, %r3676};
	shf.r.wrap.b32 	%r3678, %r3675, %r3674, 18;
	shf.r.wrap.b32 	%r3679, %r3674, %r3675, 18;
	mov.b64 	%rd5225, {%r3679, %r3678};
	xor.b64  	%rd5226, %rd5225, %rd5224;
	shf.l.wrap.b32 	%r3680, %r3674, %r3675, 23;
	shf.l.wrap.b32 	%r3681, %r3675, %r3674, 23;
	mov.b64 	%rd5227, {%r3681, %r3680};
	xor.b64  	%rd5228, %rd5226, %rd5227;
	xor.b64  	%rd5229, %rd5188, %rd5164;
	and.b64  	%rd5230, %rd5212, %rd5229;
	xor.b64  	%rd5231, %rd5230, %rd5164;
	add.s64 	%rd5232, %rd5140, %rd4940;
	add.s64 	%rd5233, %rd5232, %rd2685;
	add.s64 	%rd5234, %rd5233, %rd5231;
	add.s64 	%rd5235, %rd5234, %rd5228;
	add.s64 	%rd5236, %rd5235, %rd5151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3682,%dummy}, %rd5223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3683}, %rd5223;
	}
	shf.r.wrap.b32 	%r3684, %r3683, %r3682, 28;
	shf.r.wrap.b32 	%r3685, %r3682, %r3683, 28;
	mov.b64 	%rd5237, {%r3685, %r3684};
	shf.l.wrap.b32 	%r3686, %r3682, %r3683, 30;
	shf.l.wrap.b32 	%r3687, %r3683, %r3682, 30;
	mov.b64 	%rd5238, {%r3687, %r3686};
	xor.b64  	%rd5239, %rd5238, %rd5237;
	shf.l.wrap.b32 	%r3688, %r3682, %r3683, 25;
	shf.l.wrap.b32 	%r3689, %r3683, %r3682, 25;
	mov.b64 	%rd5240, {%r3689, %r3688};
	xor.b64  	%rd5241, %rd5239, %rd5240;
	xor.b64  	%rd5242, %rd5223, %rd5175;
	xor.b64  	%rd5243, %rd5223, %rd5199;
	and.b64  	%rd5244, %rd5243, %rd5242;
	xor.b64  	%rd5245, %rd5244, %rd5223;
	add.s64 	%rd5246, %rd5235, %rd5245;
	add.s64 	%rd5247, %rd5246, %rd5241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3690,%dummy}, %rd5236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3691}, %rd5236;
	}
	shf.r.wrap.b32 	%r3692, %r3691, %r3690, 14;
	shf.r.wrap.b32 	%r3693, %r3690, %r3691, 14;
	mov.b64 	%rd5248, {%r3693, %r3692};
	shf.r.wrap.b32 	%r3694, %r3691, %r3690, 18;
	shf.r.wrap.b32 	%r3695, %r3690, %r3691, 18;
	mov.b64 	%rd5249, {%r3695, %r3694};
	xor.b64  	%rd5250, %rd5249, %rd5248;
	shf.l.wrap.b32 	%r3696, %r3690, %r3691, 23;
	shf.l.wrap.b32 	%r3697, %r3691, %r3690, 23;
	mov.b64 	%rd5251, {%r3697, %r3696};
	xor.b64  	%rd5252, %rd5250, %rd5251;
	xor.b64  	%rd5253, %rd5212, %rd5188;
	and.b64  	%rd5254, %rd5236, %rd5253;
	xor.b64  	%rd5255, %rd5254, %rd5188;
	add.s64 	%rd5256, %rd5164, %rd4953;
	add.s64 	%rd5257, %rd5256, %rd2710;
	add.s64 	%rd5258, %rd5257, %rd5255;
	add.s64 	%rd5259, %rd5258, %rd5252;
	add.s64 	%rd5260, %rd5259, %rd5175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3698,%dummy}, %rd5247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3699}, %rd5247;
	}
	shf.r.wrap.b32 	%r3700, %r3699, %r3698, 28;
	shf.r.wrap.b32 	%r3701, %r3698, %r3699, 28;
	mov.b64 	%rd5261, {%r3701, %r3700};
	shf.l.wrap.b32 	%r3702, %r3698, %r3699, 30;
	shf.l.wrap.b32 	%r3703, %r3699, %r3698, 30;
	mov.b64 	%rd5262, {%r3703, %r3702};
	xor.b64  	%rd5263, %rd5262, %rd5261;
	shf.l.wrap.b32 	%r3704, %r3698, %r3699, 25;
	shf.l.wrap.b32 	%r3705, %r3699, %r3698, 25;
	mov.b64 	%rd5264, {%r3705, %r3704};
	xor.b64  	%rd5265, %rd5263, %rd5264;
	xor.b64  	%rd5266, %rd5247, %rd5199;
	xor.b64  	%rd5267, %rd5247, %rd5223;
	and.b64  	%rd5268, %rd5267, %rd5266;
	xor.b64  	%rd5269, %rd5268, %rd5247;
	add.s64 	%rd5270, %rd5259, %rd5269;
	add.s64 	%rd5271, %rd5270, %rd5265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3706,%dummy}, %rd5260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3707}, %rd5260;
	}
	shf.r.wrap.b32 	%r3708, %r3707, %r3706, 14;
	shf.r.wrap.b32 	%r3709, %r3706, %r3707, 14;
	mov.b64 	%rd5272, {%r3709, %r3708};
	shf.r.wrap.b32 	%r3710, %r3707, %r3706, 18;
	shf.r.wrap.b32 	%r3711, %r3706, %r3707, 18;
	mov.b64 	%rd5273, {%r3711, %r3710};
	xor.b64  	%rd5274, %rd5273, %rd5272;
	shf.l.wrap.b32 	%r3712, %r3706, %r3707, 23;
	shf.l.wrap.b32 	%r3713, %r3707, %r3706, 23;
	mov.b64 	%rd5275, {%r3713, %r3712};
	xor.b64  	%rd5276, %rd5274, %rd5275;
	xor.b64  	%rd5277, %rd5236, %rd5212;
	and.b64  	%rd5278, %rd5260, %rd5277;
	xor.b64  	%rd5279, %rd5278, %rd5212;
	add.s64 	%rd5280, %rd5188, %rd4966;
	add.s64 	%rd5281, %rd5280, %rd2735;
	add.s64 	%rd5282, %rd5281, %rd5279;
	add.s64 	%rd5283, %rd5282, %rd5276;
	add.s64 	%rd5284, %rd5283, %rd5199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3714,%dummy}, %rd5271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3715}, %rd5271;
	}
	shf.r.wrap.b32 	%r3716, %r3715, %r3714, 28;
	shf.r.wrap.b32 	%r3717, %r3714, %r3715, 28;
	mov.b64 	%rd5285, {%r3717, %r3716};
	shf.l.wrap.b32 	%r3718, %r3714, %r3715, 30;
	shf.l.wrap.b32 	%r3719, %r3715, %r3714, 30;
	mov.b64 	%rd5286, {%r3719, %r3718};
	xor.b64  	%rd5287, %rd5286, %rd5285;
	shf.l.wrap.b32 	%r3720, %r3714, %r3715, 25;
	shf.l.wrap.b32 	%r3721, %r3715, %r3714, 25;
	mov.b64 	%rd5288, {%r3721, %r3720};
	xor.b64  	%rd5289, %rd5287, %rd5288;
	xor.b64  	%rd5290, %rd5271, %rd5223;
	xor.b64  	%rd5291, %rd5271, %rd5247;
	and.b64  	%rd5292, %rd5291, %rd5290;
	xor.b64  	%rd5293, %rd5292, %rd5271;
	add.s64 	%rd5294, %rd5283, %rd5293;
	add.s64 	%rd5295, %rd5294, %rd5289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3722,%dummy}, %rd5284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3723}, %rd5284;
	}
	shf.r.wrap.b32 	%r3724, %r3723, %r3722, 14;
	shf.r.wrap.b32 	%r3725, %r3722, %r3723, 14;
	mov.b64 	%rd5296, {%r3725, %r3724};
	shf.r.wrap.b32 	%r3726, %r3723, %r3722, 18;
	shf.r.wrap.b32 	%r3727, %r3722, %r3723, 18;
	mov.b64 	%rd5297, {%r3727, %r3726};
	xor.b64  	%rd5298, %rd5297, %rd5296;
	shf.l.wrap.b32 	%r3728, %r3722, %r3723, 23;
	shf.l.wrap.b32 	%r3729, %r3723, %r3722, 23;
	mov.b64 	%rd5299, {%r3729, %r3728};
	xor.b64  	%rd5300, %rd5298, %rd5299;
	xor.b64  	%rd5301, %rd5260, %rd5236;
	and.b64  	%rd5302, %rd5284, %rd5301;
	xor.b64  	%rd5303, %rd5302, %rd5236;
	add.s64 	%rd5304, %rd5212, %rd4979;
	add.s64 	%rd5305, %rd5304, %rd2760;
	add.s64 	%rd5306, %rd5305, %rd5303;
	add.s64 	%rd5307, %rd5306, %rd5300;
	add.s64 	%rd5308, %rd5307, %rd5223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3730,%dummy}, %rd5295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3731}, %rd5295;
	}
	shf.r.wrap.b32 	%r3732, %r3731, %r3730, 28;
	shf.r.wrap.b32 	%r3733, %r3730, %r3731, 28;
	mov.b64 	%rd5309, {%r3733, %r3732};
	shf.l.wrap.b32 	%r3734, %r3730, %r3731, 30;
	shf.l.wrap.b32 	%r3735, %r3731, %r3730, 30;
	mov.b64 	%rd5310, {%r3735, %r3734};
	xor.b64  	%rd5311, %rd5310, %rd5309;
	shf.l.wrap.b32 	%r3736, %r3730, %r3731, 25;
	shf.l.wrap.b32 	%r3737, %r3731, %r3730, 25;
	mov.b64 	%rd5312, {%r3737, %r3736};
	xor.b64  	%rd5313, %rd5311, %rd5312;
	xor.b64  	%rd5314, %rd5295, %rd5247;
	xor.b64  	%rd5315, %rd5295, %rd5271;
	and.b64  	%rd5316, %rd5315, %rd5314;
	xor.b64  	%rd5317, %rd5316, %rd5295;
	add.s64 	%rd5318, %rd5307, %rd5317;
	add.s64 	%rd5319, %rd5318, %rd5313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3738,%dummy}, %rd5308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3739}, %rd5308;
	}
	shf.r.wrap.b32 	%r3740, %r3739, %r3738, 14;
	shf.r.wrap.b32 	%r3741, %r3738, %r3739, 14;
	mov.b64 	%rd5320, {%r3741, %r3740};
	shf.r.wrap.b32 	%r3742, %r3739, %r3738, 18;
	shf.r.wrap.b32 	%r3743, %r3738, %r3739, 18;
	mov.b64 	%rd5321, {%r3743, %r3742};
	xor.b64  	%rd5322, %rd5321, %rd5320;
	shf.l.wrap.b32 	%r3744, %r3738, %r3739, 23;
	shf.l.wrap.b32 	%r3745, %r3739, %r3738, 23;
	mov.b64 	%rd5323, {%r3745, %r3744};
	xor.b64  	%rd5324, %rd5322, %rd5323;
	xor.b64  	%rd5325, %rd5284, %rd5260;
	and.b64  	%rd5326, %rd5308, %rd5325;
	xor.b64  	%rd5327, %rd5326, %rd5260;
	add.s64 	%rd5328, %rd5236, %rd4992;
	add.s64 	%rd5329, %rd5328, %rd2785;
	add.s64 	%rd5330, %rd5329, %rd5327;
	add.s64 	%rd5331, %rd5330, %rd5324;
	add.s64 	%rd5332, %rd5331, %rd5247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3746,%dummy}, %rd5319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3747}, %rd5319;
	}
	shf.r.wrap.b32 	%r3748, %r3747, %r3746, 28;
	shf.r.wrap.b32 	%r3749, %r3746, %r3747, 28;
	mov.b64 	%rd5333, {%r3749, %r3748};
	shf.l.wrap.b32 	%r3750, %r3746, %r3747, 30;
	shf.l.wrap.b32 	%r3751, %r3747, %r3746, 30;
	mov.b64 	%rd5334, {%r3751, %r3750};
	xor.b64  	%rd5335, %rd5334, %rd5333;
	shf.l.wrap.b32 	%r3752, %r3746, %r3747, 25;
	shf.l.wrap.b32 	%r3753, %r3747, %r3746, 25;
	mov.b64 	%rd5336, {%r3753, %r3752};
	xor.b64  	%rd5337, %rd5335, %rd5336;
	xor.b64  	%rd5338, %rd5319, %rd5271;
	xor.b64  	%rd5339, %rd5319, %rd5295;
	and.b64  	%rd5340, %rd5339, %rd5338;
	xor.b64  	%rd5341, %rd5340, %rd5319;
	add.s64 	%rd5342, %rd5331, %rd5341;
	add.s64 	%rd7, %rd5342, %rd5337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3754,%dummy}, %rd5332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3755}, %rd5332;
	}
	shf.r.wrap.b32 	%r3756, %r3755, %r3754, 14;
	shf.r.wrap.b32 	%r3757, %r3754, %r3755, 14;
	mov.b64 	%rd5343, {%r3757, %r3756};
	shf.r.wrap.b32 	%r3758, %r3755, %r3754, 18;
	shf.r.wrap.b32 	%r3759, %r3754, %r3755, 18;
	mov.b64 	%rd5344, {%r3759, %r3758};
	xor.b64  	%rd5345, %rd5344, %rd5343;
	shf.l.wrap.b32 	%r3760, %r3754, %r3755, 23;
	shf.l.wrap.b32 	%r3761, %r3755, %r3754, 23;
	mov.b64 	%rd5346, {%r3761, %r3760};
	xor.b64  	%rd5347, %rd5345, %rd5346;
	xor.b64  	%rd5348, %rd5308, %rd5284;
	and.b64  	%rd5349, %rd5332, %rd5348;
	xor.b64  	%rd5350, %rd5349, %rd5284;
	add.s64 	%rd5351, %rd5260, %rd5005;
	add.s64 	%rd5352, %rd5351, %rd2810;
	add.s64 	%rd5353, %rd5352, %rd5350;
	add.s64 	%rd5354, %rd5353, %rd5347;
	add.s64 	%rd5355, %rd5354, %rd5271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3762,%dummy}, %rd7;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3763}, %rd7;
	}
	shf.r.wrap.b32 	%r3764, %r3763, %r3762, 28;
	shf.r.wrap.b32 	%r3765, %r3762, %r3763, 28;
	mov.b64 	%rd5356, {%r3765, %r3764};
	shf.l.wrap.b32 	%r3766, %r3762, %r3763, 30;
	shf.l.wrap.b32 	%r3767, %r3763, %r3762, 30;
	mov.b64 	%rd5357, {%r3767, %r3766};
	xor.b64  	%rd5358, %rd5357, %rd5356;
	shf.l.wrap.b32 	%r3768, %r3762, %r3763, 25;
	shf.l.wrap.b32 	%r3769, %r3763, %r3762, 25;
	mov.b64 	%rd5359, {%r3769, %r3768};
	xor.b64  	%rd5360, %rd5358, %rd5359;
	xor.b64  	%rd5361, %rd7, %rd5295;
	xor.b64  	%rd5362, %rd7, %rd5319;
	and.b64  	%rd5363, %rd5362, %rd5361;
	xor.b64  	%rd5364, %rd5363, %rd7;
	add.s64 	%rd5365, %rd5354, %rd5364;
	add.s64 	%rd5366, %rd5365, %rd5360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3770,%dummy}, %rd5355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3771}, %rd5355;
	}
	shf.r.wrap.b32 	%r3772, %r3771, %r3770, 14;
	shf.r.wrap.b32 	%r3773, %r3770, %r3771, 14;
	mov.b64 	%rd5367, {%r3773, %r3772};
	shf.r.wrap.b32 	%r3774, %r3771, %r3770, 18;
	shf.r.wrap.b32 	%r3775, %r3770, %r3771, 18;
	mov.b64 	%rd5368, {%r3775, %r3774};
	xor.b64  	%rd5369, %rd5368, %rd5367;
	shf.l.wrap.b32 	%r3776, %r3770, %r3771, 23;
	shf.l.wrap.b32 	%r3777, %r3771, %r3770, 23;
	mov.b64 	%rd5370, {%r3777, %r3776};
	xor.b64  	%rd5371, %rd5369, %rd5370;
	xor.b64  	%rd5372, %rd5332, %rd5308;
	and.b64  	%rd5373, %rd5355, %rd5372;
	xor.b64  	%rd5374, %rd5373, %rd5308;
	add.s64 	%rd5375, %rd5284, %rd5018;
	add.s64 	%rd5376, %rd5375, %rd2835;
	add.s64 	%rd5377, %rd5376, %rd5374;
	add.s64 	%rd5378, %rd5377, %rd5371;
	add.s64 	%rd5379, %rd5378, %rd5295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3778,%dummy}, %rd5366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3779}, %rd5366;
	}
	shf.r.wrap.b32 	%r3780, %r3779, %r3778, 28;
	shf.r.wrap.b32 	%r3781, %r3778, %r3779, 28;
	mov.b64 	%rd5380, {%r3781, %r3780};
	shf.l.wrap.b32 	%r3782, %r3778, %r3779, 30;
	shf.l.wrap.b32 	%r3783, %r3779, %r3778, 30;
	mov.b64 	%rd5381, {%r3783, %r3782};
	xor.b64  	%rd5382, %rd5381, %rd5380;
	shf.l.wrap.b32 	%r3784, %r3778, %r3779, 25;
	shf.l.wrap.b32 	%r3785, %r3779, %r3778, 25;
	mov.b64 	%rd5383, {%r3785, %r3784};
	xor.b64  	%rd5384, %rd5382, %rd5383;
	xor.b64  	%rd5385, %rd5366, %rd5319;
	xor.b64  	%rd5386, %rd5366, %rd7;
	and.b64  	%rd5387, %rd5386, %rd5385;
	xor.b64  	%rd5388, %rd5387, %rd5366;
	add.s64 	%rd5389, %rd5378, %rd5388;
	add.s64 	%rd8, %rd5389, %rd5384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3786,%dummy}, %rd5379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3787}, %rd5379;
	}
	shf.r.wrap.b32 	%r3788, %r3787, %r3786, 14;
	shf.r.wrap.b32 	%r3789, %r3786, %r3787, 14;
	mov.b64 	%rd5390, {%r3789, %r3788};
	shf.r.wrap.b32 	%r3790, %r3787, %r3786, 18;
	shf.r.wrap.b32 	%r3791, %r3786, %r3787, 18;
	mov.b64 	%rd5391, {%r3791, %r3790};
	xor.b64  	%rd5392, %rd5391, %rd5390;
	shf.l.wrap.b32 	%r3792, %r3786, %r3787, 23;
	shf.l.wrap.b32 	%r3793, %r3787, %r3786, 23;
	mov.b64 	%rd5393, {%r3793, %r3792};
	xor.b64  	%rd5394, %rd5392, %rd5393;
	xor.b64  	%rd5395, %rd5355, %rd5332;
	and.b64  	%rd5396, %rd5379, %rd5395;
	xor.b64  	%rd5397, %rd5396, %rd5332;
	add.s64 	%rd5398, %rd5308, %rd5031;
	add.s64 	%rd5399, %rd5398, %rd2860;
	add.s64 	%rd5400, %rd5399, %rd5397;
	add.s64 	%rd5401, %rd5400, %rd5394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3794,%dummy}, %rd8;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3795}, %rd8;
	}
	shf.r.wrap.b32 	%r3796, %r3795, %r3794, 28;
	shf.r.wrap.b32 	%r3797, %r3794, %r3795, 28;
	mov.b64 	%rd5402, {%r3797, %r3796};
	shf.l.wrap.b32 	%r3798, %r3794, %r3795, 30;
	shf.l.wrap.b32 	%r3799, %r3795, %r3794, 30;
	mov.b64 	%rd5403, {%r3799, %r3798};
	xor.b64  	%rd5404, %rd5403, %rd5402;
	shf.l.wrap.b32 	%r3800, %r3794, %r3795, 25;
	shf.l.wrap.b32 	%r3801, %r3795, %r3794, 25;
	mov.b64 	%rd5405, {%r3801, %r3800};
	xor.b64  	%rd5406, %rd5404, %rd5405;
	xor.b64  	%rd5407, %rd8, %rd7;
	xor.b64  	%rd5408, %rd8, %rd5366;
	and.b64  	%rd5409, %rd5408, %rd5407;
	xor.b64  	%rd5410, %rd5409, %rd8;
	add.s64 	%rd5411, %rd5401, %rd5410;
	add.s64 	%rd5412, %rd5411, %rd5406;
	add.s64 	%rd5413, %rd2850, -4942790177534073029;
	add.s64 	%rd5414, %rd2800, -6534734903238641935;
	add.s64 	%rd9, %rd5412, 7640891576956012808;
	add.s64 	%rd10, %rd5366, 4354685564936845355;
	cvt.u64.u32	%rd11, %r96;
	mul.wide.u32 	%rd5415, %r96, 48;
	add.s64 	%rd5416, %rd39, %rd5415;
	ld.global.u32 	%r6, [%rd5416];
	ld.global.u32 	%r7, [%rd5416+4];
	ld.global.u32 	%r8, [%rd5416+8];
	ld.global.u32 	%r9, [%rd5416+12];
	shr.u64 	%rd5417, %rd2875, 32;
	cvt.u32.u64	%r8194, %rd5417;
	cvt.u32.u64	%r8193, %rd2875;
	shr.u64 	%rd5418, %rd5413, 32;
	cvt.u32.u64	%r8192, %rd5418;
	cvt.u32.u64	%r8191, %rd5413;
	shr.u64 	%rd5419, %rd2876, 32;
	cvt.u32.u64	%r8190, %rd5419;
	cvt.u32.u64	%r8189, %rd2876;
	shr.u64 	%rd5420, %rd5414, 32;
	cvt.u32.u64	%r8188, %rd5420;
	cvt.u32.u64	%r8195, %rd5414;
	add.s64 	%rd12, %rd10079, 4;
	st.local.v4.u32 	[%rd10079], {%r8194, %r8193, %r8192, %r8191};
	st.local.v4.u32 	[%rd10079+16], {%r8190, %r8189, %r8188, %r8195};
	mov.u32 	%r8187, -7;
	mov.u64 	%rd10078, rcon;
	mov.u64 	%rd10077, %rd10079;
	bra.uni 	BB3_4;

BB3_5:
	shr.u32 	%r3817, %r8191, 24;
	mul.wide.u32 	%rd5435, %r3817, 4;
	add.s64 	%rd5437, %rd5422, %rd5435;
	ld.shared.u32 	%r3818, [%rd5437];
	and.b32  	%r3819, %r3818, -16777216;
	xor.b32  	%r3820, %r3819, %r8190;
	shr.u32 	%r3821, %r8191, 16;
	mul.wide.u32 	%rd5438, %r3821, 4;
	and.b64  	%rd5439, %rd5438, 1020;
	add.s64 	%rd5441, %rd5426, %rd5439;
	ld.shared.u32 	%r3822, [%rd5441];
	and.b32  	%r3823, %r3822, 16711680;
	xor.b32  	%r3824, %r3820, %r3823;
	shr.u32 	%r3825, %r8191, 8;
	mul.wide.u32 	%rd5442, %r3825, 4;
	and.b64  	%rd5443, %rd5442, 1020;
	add.s64 	%rd5445, %rd5430, %rd5443;
	ld.shared.u32 	%r3826, [%rd5445];
	and.b32  	%r3827, %r3826, 65280;
	xor.b32  	%r3828, %r3824, %r3827;
	mul.wide.u32 	%rd5446, %r8191, 4;
	and.b64  	%rd5447, %rd5446, 1020;
	add.s64 	%rd5449, %rd5433, %rd5447;
	ld.shared.u8 	%r3829, [%rd5449];
	xor.b32  	%r8190, %r3828, %r3829;
	xor.b32  	%r8189, %r8190, %r8189;
	xor.b32  	%r8188, %r8189, %r8188;
	xor.b32  	%r8195, %r8188, %r8195;
	st.local.v4.u32 	[%rd10077+48], {%r8190, %r8189, %r8188, %r8195};
	add.s64 	%rd10078, %rd10078, 4;
	add.s64 	%rd10077, %rd10077, 32;

BB3_4:
	bfe.u32 	%r3802, %r8195, 16, 8;
	mul.wide.u32 	%rd5421, %r3802, 4;
	mov.u64 	%rd5422, m09600_comp$s_te2;
	add.s64 	%rd5423, %rd5422, %rd5421;
	ld.shared.u32 	%r3803, [%rd5423];
	and.b32  	%r3804, %r3803, -16777216;
	xor.b32  	%r3805, %r3804, %r8194;
	shr.u32 	%r3806, %r8195, 8;
	mul.wide.u32 	%rd5424, %r3806, 4;
	and.b64  	%rd5425, %rd5424, 1020;
	mov.u64 	%rd5426, m09600_comp$s_te3;
	add.s64 	%rd5427, %rd5426, %rd5425;
	ld.shared.u32 	%r3807, [%rd5427];
	and.b32  	%r3808, %r3807, 16711680;
	xor.b32  	%r3809, %r3805, %r3808;
	mul.wide.u32 	%rd5428, %r8195, 4;
	and.b64  	%rd5429, %rd5428, 1020;
	mov.u64 	%rd5430, m09600_comp$s_te0;
	add.s64 	%rd5431, %rd5430, %rd5429;
	ld.shared.u32 	%r3810, [%rd5431];
	and.b32  	%r3811, %r3810, 65280;
	xor.b32  	%r3812, %r3809, %r3811;
	shr.u32 	%r3813, %r8195, 24;
	mul.wide.u32 	%rd5432, %r3813, 4;
	mov.u64 	%rd5433, m09600_comp$s_te1;
	add.s64 	%rd5434, %rd5433, %rd5432;
	ld.shared.u8 	%r3814, [%rd5434];
	xor.b32  	%r3815, %r3812, %r3814;
	ld.const.u32 	%r3816, [%rd10078];
	xor.b32  	%r8194, %r3815, %r3816;
	xor.b32  	%r8193, %r8194, %r8193;
	xor.b32  	%r8192, %r8193, %r8192;
	xor.b32  	%r8191, %r8192, %r8191;
	st.local.v4.u32 	[%rd10077+32], {%r8194, %r8193, %r8192, %r8191};
	add.s32 	%r8187, %r8187, 1;
	setp.eq.s32	%p4, %r8187, 0;
	@%p4 bra 	BB3_6;
	bra.uni 	BB3_5;

BB3_6:
	ld.const.u64 	%rd10076, [k_sha512+592];
	ld.const.u64 	%rd10070, [k_sha512+632];
	ld.const.u64 	%rd10069, [k_sha512+624];
	ld.const.u64 	%rd10068, [k_sha512+616];
	ld.const.u64 	%rd10067, [k_sha512+608];
	ld.const.u64 	%rd10066, [k_sha512+600];
	ld.const.u64 	%rd10039, [k_sha512+584];
	ld.const.u64 	%rd10038, [k_sha512+576];
	ld.const.u64 	%rd10037, [k_sha512+568];
	ld.const.u64 	%rd10036, [k_sha512+560];
	ld.const.u64 	%rd10035, [k_sha512+552];
	ld.const.u64 	%rd10034, [k_sha512+544];
	ld.const.u64 	%rd10033, [k_sha512+536];
	ld.const.u64 	%rd10032, [k_sha512+528];
	ld.const.u64 	%rd10031, [k_sha512+520];
	ld.const.u64 	%rd10030, [k_sha512+512];
	ld.const.u64 	%rd10029, [k_sha512+504];
	ld.const.u64 	%rd10028, [k_sha512+496];
	ld.const.u64 	%rd10027, [k_sha512+488];
	ld.const.u64 	%rd10026, [k_sha512+480];
	ld.const.u64 	%rd10025, [k_sha512+472];
	ld.const.u64 	%rd10024, [k_sha512+464];
	ld.const.u64 	%rd10023, [k_sha512+456];
	ld.const.u64 	%rd10022, [k_sha512+448];
	ld.const.u64 	%rd10021, [k_sha512+440];
	ld.const.u64 	%rd10020, [k_sha512+432];
	ld.const.u64 	%rd10019, [k_sha512+424];
	ld.const.u64 	%rd10018, [k_sha512+416];
	ld.const.u64 	%rd10017, [k_sha512+408];
	ld.const.u64 	%rd10016, [k_sha512+400];
	ld.param.u32 	%r8166, [m09600_comp_param_27];
	ld.const.u64 	%rd10015, [k_sha512+392];
	ld.const.u64 	%rd10014, [k_sha512+384];
	ld.const.u64 	%rd10013, [k_sha512+376];
	ld.const.u64 	%rd10012, [k_sha512+368];
	ld.const.u64 	%rd10011, [k_sha512+360];
	ld.const.u64 	%rd10010, [k_sha512+352];
	ld.const.u64 	%rd10009, [k_sha512+344];
	ld.const.u64 	%rd10008, [k_sha512+336];
	ld.const.u64 	%rd10007, [k_sha512+328];
	ld.const.u64 	%rd10006, [k_sha512+320];
	ld.const.u64 	%rd10005, [k_sha512+312];
	ld.const.u64 	%rd10004, [k_sha512+304];
	ld.const.u64 	%rd10003, [k_sha512+296];
	ld.const.u64 	%rd10002, [k_sha512+288];
	ld.const.u64 	%rd10001, [k_sha512+280];
	ld.const.u64 	%rd10000, [k_sha512+272];
	ld.const.u64 	%rd9999, [k_sha512+264];
	ld.const.u64 	%rd9998, [k_sha512+256];
	ld.const.u64 	%rd9997, [k_sha512+248];
	ld.const.u64 	%rd9996, [k_sha512+240];
	ld.const.u64 	%rd9995, [k_sha512+232];
	ld.const.u64 	%rd9994, [k_sha512+224];
	ld.const.u64 	%rd9993, [k_sha512+216];
	ld.const.u64 	%rd9992, [k_sha512+208];
	ld.const.u64 	%rd9991, [k_sha512+200];
	ld.const.u64 	%rd9990, [k_sha512+192];
	ld.const.u64 	%rd9989, [k_sha512+184];
	ld.const.u64 	%rd9988, [k_sha512+176];
	ld.const.u64 	%rd9987, [k_sha512+168];
	ld.const.u64 	%rd9986, [k_sha512+160];
	ld.const.u64 	%rd9985, [k_sha512+152];
	ld.const.u64 	%rd9984, [k_sha512+144];
	ld.const.u64 	%rd9983, [k_sha512+136];
	ld.const.u64 	%rd9982, [k_sha512+128];
	ld.const.u64 	%rd9981, [k_sha512+120];
	ld.const.u64 	%rd9980, [k_sha512+112];
	ld.const.u64 	%rd9979, [k_sha512+104];
	ld.const.u64 	%rd9978, [k_sha512+96];
	ld.const.u64 	%rd9977, [k_sha512+88];
	ld.const.u64 	%rd9976, [k_sha512+80];
	ld.const.u64 	%rd9975, [k_sha512+72];
	ld.const.u64 	%rd9974, [k_sha512+64];
	ld.const.u64 	%rd9973, [k_sha512+56];
	ld.const.u64 	%rd9972, [k_sha512+48];
	ld.const.u64 	%rd9971, [k_sha512+40];
	ld.const.u64 	%rd9970, [k_sha512+32];
	ld.const.u64 	%rd9969, [k_sha512+24];
	ld.const.u64 	%rd9968, [k_sha512+16];
	ld.const.u64 	%rd9967, [k_sha512+8];
	ld.const.u64 	%rd9966, [k_sha512];
	ld.param.u64 	%rd9965, [m09600_comp_param_17];
	ld.local.v4.u32 	{%r3831, %r3832, %r3833, %r3834}, [%rd10079+208];
	shr.u32 	%r3836, %r3831, 24;
	mul.wide.u32 	%rd5451, %r3836, 4;
	add.s64 	%rd5453, %rd5433, %rd5451;
	ld.shared.u8 	%r3837, [%rd5453];
	mul.wide.u32 	%rd5454, %r3837, 4;
	mov.u64 	%rd5455, m09600_comp$s_td0;
	add.s64 	%rd5456, %rd5455, %rd5454;
	bfe.u32 	%r3838, %r3831, 16, 8;
	mul.wide.u32 	%rd5457, %r3838, 4;
	add.s64 	%rd5458, %rd5433, %rd5457;
	ld.shared.u8 	%r3839, [%rd5458];
	mul.wide.u32 	%rd5459, %r3839, 4;
	mov.u64 	%rd5460, m09600_comp$s_td1;
	add.s64 	%rd5461, %rd5460, %rd5459;
	ld.shared.u32 	%r3840, [%rd5461];
	ld.shared.u32 	%r3841, [%rd5456];
	xor.b32  	%r3842, %r3840, %r3841;
	bfe.u32 	%r3843, %r3831, 8, 8;
	mul.wide.u32 	%rd5462, %r3843, 4;
	add.s64 	%rd5463, %rd5433, %rd5462;
	ld.shared.u8 	%r3844, [%rd5463];
	mul.wide.u32 	%rd5464, %r3844, 4;
	mov.u64 	%rd5465, m09600_comp$s_td2;
	add.s64 	%rd5466, %rd5465, %rd5464;
	ld.shared.u32 	%r3845, [%rd5466];
	xor.b32  	%r3846, %r3842, %r3845;
	and.b32  	%r3847, %r3831, 255;
	mul.wide.u32 	%rd5467, %r3847, 4;
	add.s64 	%rd5468, %rd5433, %rd5467;
	ld.shared.u8 	%r3848, [%rd5468];
	mul.wide.u32 	%rd5469, %r3848, 4;
	mov.u64 	%rd5470, m09600_comp$s_td3;
	add.s64 	%rd5471, %rd5470, %rd5469;
	ld.shared.u32 	%r3849, [%rd5471];
	xor.b32  	%r3850, %r3846, %r3849;
	shr.u32 	%r3852, %r3832, 24;
	mul.wide.u32 	%rd5472, %r3852, 4;
	add.s64 	%rd5473, %rd5433, %rd5472;
	ld.shared.u8 	%r3853, [%rd5473];
	mul.wide.u32 	%rd5474, %r3853, 4;
	add.s64 	%rd5475, %rd5455, %rd5474;
	bfe.u32 	%r3854, %r3832, 16, 8;
	mul.wide.u32 	%rd5476, %r3854, 4;
	add.s64 	%rd5477, %rd5433, %rd5476;
	ld.shared.u8 	%r3855, [%rd5477];
	mul.wide.u32 	%rd5478, %r3855, 4;
	add.s64 	%rd5479, %rd5460, %rd5478;
	ld.shared.u32 	%r3856, [%rd5479];
	ld.shared.u32 	%r3857, [%rd5475];
	xor.b32  	%r3858, %r3856, %r3857;
	bfe.u32 	%r3859, %r3832, 8, 8;
	mul.wide.u32 	%rd5480, %r3859, 4;
	add.s64 	%rd5481, %rd5433, %rd5480;
	ld.shared.u8 	%r3860, [%rd5481];
	mul.wide.u32 	%rd5482, %r3860, 4;
	add.s64 	%rd5483, %rd5465, %rd5482;
	ld.shared.u32 	%r3861, [%rd5483];
	xor.b32  	%r3862, %r3858, %r3861;
	and.b32  	%r3863, %r3832, 255;
	mul.wide.u32 	%rd5484, %r3863, 4;
	add.s64 	%rd5485, %rd5433, %rd5484;
	ld.shared.u8 	%r3864, [%rd5485];
	mul.wide.u32 	%rd5486, %r3864, 4;
	add.s64 	%rd5487, %rd5470, %rd5486;
	ld.shared.u32 	%r3865, [%rd5487];
	xor.b32  	%r3866, %r3862, %r3865;
	shr.u32 	%r3868, %r3833, 24;
	mul.wide.u32 	%rd5488, %r3868, 4;
	add.s64 	%rd5489, %rd5433, %rd5488;
	ld.shared.u8 	%r3869, [%rd5489];
	mul.wide.u32 	%rd5490, %r3869, 4;
	add.s64 	%rd5491, %rd5455, %rd5490;
	bfe.u32 	%r3870, %r3833, 16, 8;
	mul.wide.u32 	%rd5492, %r3870, 4;
	add.s64 	%rd5493, %rd5433, %rd5492;
	ld.shared.u8 	%r3871, [%rd5493];
	mul.wide.u32 	%rd5494, %r3871, 4;
	add.s64 	%rd5495, %rd5460, %rd5494;
	ld.shared.u32 	%r3872, [%rd5495];
	ld.shared.u32 	%r3873, [%rd5491];
	xor.b32  	%r3874, %r3872, %r3873;
	bfe.u32 	%r3875, %r3833, 8, 8;
	mul.wide.u32 	%rd5496, %r3875, 4;
	add.s64 	%rd5497, %rd5433, %rd5496;
	ld.shared.u8 	%r3876, [%rd5497];
	mul.wide.u32 	%rd5498, %r3876, 4;
	add.s64 	%rd5499, %rd5465, %rd5498;
	ld.shared.u32 	%r3877, [%rd5499];
	xor.b32  	%r3878, %r3874, %r3877;
	and.b32  	%r3879, %r3833, 255;
	mul.wide.u32 	%rd5500, %r3879, 4;
	add.s64 	%rd5501, %rd5433, %rd5500;
	ld.shared.u8 	%r3880, [%rd5501];
	mul.wide.u32 	%rd5502, %r3880, 4;
	add.s64 	%rd5503, %rd5470, %rd5502;
	ld.shared.u32 	%r3881, [%rd5503];
	xor.b32  	%r3882, %r3878, %r3881;
	shr.u32 	%r3884, %r3834, 24;
	mul.wide.u32 	%rd5504, %r3884, 4;
	add.s64 	%rd5505, %rd5433, %rd5504;
	ld.shared.u8 	%r3885, [%rd5505];
	mul.wide.u32 	%rd5506, %r3885, 4;
	add.s64 	%rd5507, %rd5455, %rd5506;
	bfe.u32 	%r3886, %r3834, 16, 8;
	mul.wide.u32 	%rd5508, %r3886, 4;
	add.s64 	%rd5509, %rd5433, %rd5508;
	ld.shared.u8 	%r3887, [%rd5509];
	mul.wide.u32 	%rd5510, %r3887, 4;
	add.s64 	%rd5511, %rd5460, %rd5510;
	ld.shared.u32 	%r3888, [%rd5511];
	ld.shared.u32 	%r3889, [%rd5507];
	xor.b32  	%r3890, %r3888, %r3889;
	bfe.u32 	%r3891, %r3834, 8, 8;
	mul.wide.u32 	%rd5512, %r3891, 4;
	add.s64 	%rd5513, %rd5433, %rd5512;
	ld.shared.u8 	%r3892, [%rd5513];
	mul.wide.u32 	%rd5514, %r3892, 4;
	add.s64 	%rd5515, %rd5465, %rd5514;
	ld.shared.u32 	%r3893, [%rd5515];
	xor.b32  	%r3894, %r3890, %r3893;
	and.b32  	%r3895, %r3834, 255;
	mul.wide.u32 	%rd5516, %r3895, 4;
	add.s64 	%rd5517, %rd5433, %rd5516;
	ld.shared.u8 	%r3896, [%rd5517];
	mul.wide.u32 	%rd5518, %r3896, 4;
	add.s64 	%rd5519, %rd5470, %rd5518;
	ld.shared.u32 	%r3897, [%rd5519];
	xor.b32  	%r3898, %r3894, %r3897;
	ld.local.v4.u32 	{%r3899, %r3900, %r3901, %r3902}, [%rd10079+192];
	shr.u32 	%r3904, %r3899, 24;
	mul.wide.u32 	%rd5520, %r3904, 4;
	add.s64 	%rd5521, %rd5433, %rd5520;
	ld.shared.u8 	%r3905, [%rd5521];
	mul.wide.u32 	%rd5522, %r3905, 4;
	add.s64 	%rd5523, %rd5455, %rd5522;
	bfe.u32 	%r3906, %r3899, 16, 8;
	mul.wide.u32 	%rd5524, %r3906, 4;
	add.s64 	%rd5525, %rd5433, %rd5524;
	ld.shared.u8 	%r3907, [%rd5525];
	mul.wide.u32 	%rd5526, %r3907, 4;
	add.s64 	%rd5527, %rd5460, %rd5526;
	ld.shared.u32 	%r3908, [%rd5527];
	ld.shared.u32 	%r3909, [%rd5523];
	xor.b32  	%r3910, %r3908, %r3909;
	bfe.u32 	%r3911, %r3899, 8, 8;
	mul.wide.u32 	%rd5528, %r3911, 4;
	add.s64 	%rd5529, %rd5433, %rd5528;
	ld.shared.u8 	%r3912, [%rd5529];
	mul.wide.u32 	%rd5530, %r3912, 4;
	add.s64 	%rd5531, %rd5465, %rd5530;
	ld.shared.u32 	%r3913, [%rd5531];
	xor.b32  	%r3914, %r3910, %r3913;
	and.b32  	%r3915, %r3899, 255;
	mul.wide.u32 	%rd5532, %r3915, 4;
	add.s64 	%rd5533, %rd5433, %rd5532;
	ld.shared.u8 	%r3916, [%rd5533];
	mul.wide.u32 	%rd5534, %r3916, 4;
	add.s64 	%rd5535, %rd5470, %rd5534;
	ld.shared.u32 	%r3917, [%rd5535];
	xor.b32  	%r3918, %r3914, %r3917;
	shr.u32 	%r3920, %r3900, 24;
	mul.wide.u32 	%rd5536, %r3920, 4;
	add.s64 	%rd5537, %rd5433, %rd5536;
	ld.shared.u8 	%r3921, [%rd5537];
	mul.wide.u32 	%rd5538, %r3921, 4;
	add.s64 	%rd5539, %rd5455, %rd5538;
	bfe.u32 	%r3922, %r3900, 16, 8;
	mul.wide.u32 	%rd5540, %r3922, 4;
	add.s64 	%rd5541, %rd5433, %rd5540;
	ld.shared.u8 	%r3923, [%rd5541];
	mul.wide.u32 	%rd5542, %r3923, 4;
	add.s64 	%rd5543, %rd5460, %rd5542;
	ld.shared.u32 	%r3924, [%rd5543];
	ld.shared.u32 	%r3925, [%rd5539];
	xor.b32  	%r3926, %r3924, %r3925;
	bfe.u32 	%r3927, %r3900, 8, 8;
	mul.wide.u32 	%rd5544, %r3927, 4;
	add.s64 	%rd5545, %rd5433, %rd5544;
	ld.shared.u8 	%r3928, [%rd5545];
	mul.wide.u32 	%rd5546, %r3928, 4;
	add.s64 	%rd5547, %rd5465, %rd5546;
	ld.shared.u32 	%r3929, [%rd5547];
	xor.b32  	%r3930, %r3926, %r3929;
	and.b32  	%r3931, %r3900, 255;
	mul.wide.u32 	%rd5548, %r3931, 4;
	add.s64 	%rd5549, %rd5433, %rd5548;
	ld.shared.u8 	%r3932, [%rd5549];
	mul.wide.u32 	%rd5550, %r3932, 4;
	add.s64 	%rd5551, %rd5470, %rd5550;
	ld.shared.u32 	%r3933, [%rd5551];
	xor.b32  	%r3934, %r3930, %r3933;
	shr.u32 	%r3936, %r3901, 24;
	mul.wide.u32 	%rd5552, %r3936, 4;
	add.s64 	%rd5553, %rd5433, %rd5552;
	ld.shared.u8 	%r3937, [%rd5553];
	mul.wide.u32 	%rd5554, %r3937, 4;
	add.s64 	%rd5555, %rd5455, %rd5554;
	bfe.u32 	%r3938, %r3901, 16, 8;
	mul.wide.u32 	%rd5556, %r3938, 4;
	add.s64 	%rd5557, %rd5433, %rd5556;
	ld.shared.u8 	%r3939, [%rd5557];
	mul.wide.u32 	%rd5558, %r3939, 4;
	add.s64 	%rd5559, %rd5460, %rd5558;
	ld.shared.u32 	%r3940, [%rd5559];
	ld.shared.u32 	%r3941, [%rd5555];
	xor.b32  	%r3942, %r3940, %r3941;
	bfe.u32 	%r3943, %r3901, 8, 8;
	mul.wide.u32 	%rd5560, %r3943, 4;
	add.s64 	%rd5561, %rd5433, %rd5560;
	ld.shared.u8 	%r3944, [%rd5561];
	mul.wide.u32 	%rd5562, %r3944, 4;
	add.s64 	%rd5563, %rd5465, %rd5562;
	ld.shared.u32 	%r3945, [%rd5563];
	xor.b32  	%r3946, %r3942, %r3945;
	and.b32  	%r3947, %r3901, 255;
	mul.wide.u32 	%rd5564, %r3947, 4;
	add.s64 	%rd5565, %rd5433, %rd5564;
	ld.shared.u8 	%r3948, [%rd5565];
	mul.wide.u32 	%rd5566, %r3948, 4;
	add.s64 	%rd5567, %rd5470, %rd5566;
	ld.shared.u32 	%r3949, [%rd5567];
	xor.b32  	%r3950, %r3946, %r3949;
	shr.u32 	%r3952, %r3902, 24;
	mul.wide.u32 	%rd5568, %r3952, 4;
	add.s64 	%rd5569, %rd5433, %rd5568;
	ld.shared.u8 	%r3953, [%rd5569];
	mul.wide.u32 	%rd5570, %r3953, 4;
	add.s64 	%rd5571, %rd5455, %rd5570;
	bfe.u32 	%r3954, %r3902, 16, 8;
	mul.wide.u32 	%rd5572, %r3954, 4;
	add.s64 	%rd5573, %rd5433, %rd5572;
	ld.shared.u8 	%r3955, [%rd5573];
	mul.wide.u32 	%rd5574, %r3955, 4;
	add.s64 	%rd5575, %rd5460, %rd5574;
	ld.shared.u32 	%r3956, [%rd5575];
	ld.shared.u32 	%r3957, [%rd5571];
	xor.b32  	%r3958, %r3956, %r3957;
	bfe.u32 	%r3959, %r3902, 8, 8;
	mul.wide.u32 	%rd5576, %r3959, 4;
	add.s64 	%rd5577, %rd5433, %rd5576;
	ld.shared.u8 	%r3960, [%rd5577];
	mul.wide.u32 	%rd5578, %r3960, 4;
	add.s64 	%rd5579, %rd5465, %rd5578;
	ld.shared.u32 	%r3961, [%rd5579];
	xor.b32  	%r3962, %r3958, %r3961;
	and.b32  	%r3963, %r3902, 255;
	mul.wide.u32 	%rd5580, %r3963, 4;
	add.s64 	%rd5581, %rd5433, %rd5580;
	ld.shared.u8 	%r3964, [%rd5581];
	mul.wide.u32 	%rd5582, %r3964, 4;
	add.s64 	%rd5583, %rd5470, %rd5582;
	ld.shared.u32 	%r3965, [%rd5583];
	xor.b32  	%r3966, %r3962, %r3965;
	ld.local.v4.u32 	{%r3967, %r3968, %r3969, %r3970}, [%rd10079+176];
	shr.u32 	%r3972, %r3967, 24;
	mul.wide.u32 	%rd5584, %r3972, 4;
	add.s64 	%rd5585, %rd5433, %rd5584;
	ld.shared.u8 	%r3973, [%rd5585];
	mul.wide.u32 	%rd5586, %r3973, 4;
	add.s64 	%rd5587, %rd5455, %rd5586;
	bfe.u32 	%r3974, %r3967, 16, 8;
	mul.wide.u32 	%rd5588, %r3974, 4;
	add.s64 	%rd5589, %rd5433, %rd5588;
	ld.shared.u8 	%r3975, [%rd5589];
	mul.wide.u32 	%rd5590, %r3975, 4;
	add.s64 	%rd5591, %rd5460, %rd5590;
	ld.shared.u32 	%r3976, [%rd5591];
	ld.shared.u32 	%r3977, [%rd5587];
	xor.b32  	%r3978, %r3976, %r3977;
	bfe.u32 	%r3979, %r3967, 8, 8;
	mul.wide.u32 	%rd5592, %r3979, 4;
	add.s64 	%rd5593, %rd5433, %rd5592;
	ld.shared.u8 	%r3980, [%rd5593];
	mul.wide.u32 	%rd5594, %r3980, 4;
	add.s64 	%rd5595, %rd5465, %rd5594;
	ld.shared.u32 	%r3981, [%rd5595];
	xor.b32  	%r3982, %r3978, %r3981;
	and.b32  	%r3983, %r3967, 255;
	mul.wide.u32 	%rd5596, %r3983, 4;
	add.s64 	%rd5597, %rd5433, %rd5596;
	ld.shared.u8 	%r3984, [%rd5597];
	mul.wide.u32 	%rd5598, %r3984, 4;
	add.s64 	%rd5599, %rd5470, %rd5598;
	ld.shared.u32 	%r3985, [%rd5599];
	xor.b32  	%r3986, %r3982, %r3985;
	shr.u32 	%r3988, %r3968, 24;
	mul.wide.u32 	%rd5600, %r3988, 4;
	add.s64 	%rd5601, %rd5433, %rd5600;
	ld.shared.u8 	%r3989, [%rd5601];
	mul.wide.u32 	%rd5602, %r3989, 4;
	add.s64 	%rd5603, %rd5455, %rd5602;
	bfe.u32 	%r3990, %r3968, 16, 8;
	mul.wide.u32 	%rd5604, %r3990, 4;
	add.s64 	%rd5605, %rd5433, %rd5604;
	ld.shared.u8 	%r3991, [%rd5605];
	mul.wide.u32 	%rd5606, %r3991, 4;
	add.s64 	%rd5607, %rd5460, %rd5606;
	ld.shared.u32 	%r3992, [%rd5607];
	ld.shared.u32 	%r3993, [%rd5603];
	xor.b32  	%r3994, %r3992, %r3993;
	bfe.u32 	%r3995, %r3968, 8, 8;
	mul.wide.u32 	%rd5608, %r3995, 4;
	add.s64 	%rd5609, %rd5433, %rd5608;
	ld.shared.u8 	%r3996, [%rd5609];
	mul.wide.u32 	%rd5610, %r3996, 4;
	add.s64 	%rd5611, %rd5465, %rd5610;
	ld.shared.u32 	%r3997, [%rd5611];
	xor.b32  	%r3998, %r3994, %r3997;
	and.b32  	%r3999, %r3968, 255;
	mul.wide.u32 	%rd5612, %r3999, 4;
	add.s64 	%rd5613, %rd5433, %rd5612;
	ld.shared.u8 	%r4000, [%rd5613];
	mul.wide.u32 	%rd5614, %r4000, 4;
	add.s64 	%rd5615, %rd5470, %rd5614;
	ld.shared.u32 	%r4001, [%rd5615];
	xor.b32  	%r4002, %r3998, %r4001;
	shr.u32 	%r4004, %r3969, 24;
	mul.wide.u32 	%rd5616, %r4004, 4;
	add.s64 	%rd5617, %rd5433, %rd5616;
	ld.shared.u8 	%r4005, [%rd5617];
	mul.wide.u32 	%rd5618, %r4005, 4;
	add.s64 	%rd5619, %rd5455, %rd5618;
	bfe.u32 	%r4006, %r3969, 16, 8;
	mul.wide.u32 	%rd5620, %r4006, 4;
	add.s64 	%rd5621, %rd5433, %rd5620;
	ld.shared.u8 	%r4007, [%rd5621];
	mul.wide.u32 	%rd5622, %r4007, 4;
	add.s64 	%rd5623, %rd5460, %rd5622;
	ld.shared.u32 	%r4008, [%rd5623];
	ld.shared.u32 	%r4009, [%rd5619];
	xor.b32  	%r4010, %r4008, %r4009;
	bfe.u32 	%r4011, %r3969, 8, 8;
	mul.wide.u32 	%rd5624, %r4011, 4;
	add.s64 	%rd5625, %rd5433, %rd5624;
	ld.shared.u8 	%r4012, [%rd5625];
	mul.wide.u32 	%rd5626, %r4012, 4;
	add.s64 	%rd5627, %rd5465, %rd5626;
	ld.shared.u32 	%r4013, [%rd5627];
	xor.b32  	%r4014, %r4010, %r4013;
	and.b32  	%r4015, %r3969, 255;
	mul.wide.u32 	%rd5628, %r4015, 4;
	add.s64 	%rd5629, %rd5433, %rd5628;
	ld.shared.u8 	%r4016, [%rd5629];
	mul.wide.u32 	%rd5630, %r4016, 4;
	add.s64 	%rd5631, %rd5470, %rd5630;
	ld.shared.u32 	%r4017, [%rd5631];
	xor.b32  	%r4018, %r4014, %r4017;
	shr.u32 	%r4020, %r3970, 24;
	mul.wide.u32 	%rd5632, %r4020, 4;
	add.s64 	%rd5633, %rd5433, %rd5632;
	ld.shared.u8 	%r4021, [%rd5633];
	mul.wide.u32 	%rd5634, %r4021, 4;
	add.s64 	%rd5635, %rd5455, %rd5634;
	bfe.u32 	%r4022, %r3970, 16, 8;
	mul.wide.u32 	%rd5636, %r4022, 4;
	add.s64 	%rd5637, %rd5433, %rd5636;
	ld.shared.u8 	%r4023, [%rd5637];
	mul.wide.u32 	%rd5638, %r4023, 4;
	add.s64 	%rd5639, %rd5460, %rd5638;
	ld.shared.u32 	%r4024, [%rd5639];
	ld.shared.u32 	%r4025, [%rd5635];
	xor.b32  	%r4026, %r4024, %r4025;
	bfe.u32 	%r4027, %r3970, 8, 8;
	mul.wide.u32 	%rd5640, %r4027, 4;
	add.s64 	%rd5641, %rd5433, %rd5640;
	ld.shared.u8 	%r4028, [%rd5641];
	mul.wide.u32 	%rd5642, %r4028, 4;
	add.s64 	%rd5643, %rd5465, %rd5642;
	ld.shared.u32 	%r4029, [%rd5643];
	xor.b32  	%r4030, %r4026, %r4029;
	and.b32  	%r4031, %r3970, 255;
	mul.wide.u32 	%rd5644, %r4031, 4;
	add.s64 	%rd5645, %rd5433, %rd5644;
	ld.shared.u8 	%r4032, [%rd5645];
	mul.wide.u32 	%rd5646, %r4032, 4;
	add.s64 	%rd5647, %rd5470, %rd5646;
	ld.shared.u32 	%r4033, [%rd5647];
	xor.b32  	%r4034, %r4030, %r4033;
	ld.local.v4.u32 	{%r4035, %r4036, %r4037, %r4038}, [%rd10079+160];
	shr.u32 	%r4040, %r4035, 24;
	mul.wide.u32 	%rd5648, %r4040, 4;
	add.s64 	%rd5649, %rd5433, %rd5648;
	ld.shared.u8 	%r4041, [%rd5649];
	mul.wide.u32 	%rd5650, %r4041, 4;
	add.s64 	%rd5651, %rd5455, %rd5650;
	bfe.u32 	%r4042, %r4035, 16, 8;
	mul.wide.u32 	%rd5652, %r4042, 4;
	add.s64 	%rd5653, %rd5433, %rd5652;
	ld.shared.u8 	%r4043, [%rd5653];
	mul.wide.u32 	%rd5654, %r4043, 4;
	add.s64 	%rd5655, %rd5460, %rd5654;
	ld.shared.u32 	%r4044, [%rd5655];
	ld.shared.u32 	%r4045, [%rd5651];
	xor.b32  	%r4046, %r4044, %r4045;
	bfe.u32 	%r4047, %r4035, 8, 8;
	mul.wide.u32 	%rd5656, %r4047, 4;
	add.s64 	%rd5657, %rd5433, %rd5656;
	ld.shared.u8 	%r4048, [%rd5657];
	mul.wide.u32 	%rd5658, %r4048, 4;
	add.s64 	%rd5659, %rd5465, %rd5658;
	ld.shared.u32 	%r4049, [%rd5659];
	xor.b32  	%r4050, %r4046, %r4049;
	and.b32  	%r4051, %r4035, 255;
	mul.wide.u32 	%rd5660, %r4051, 4;
	add.s64 	%rd5661, %rd5433, %rd5660;
	ld.shared.u8 	%r4052, [%rd5661];
	mul.wide.u32 	%rd5662, %r4052, 4;
	add.s64 	%rd5663, %rd5470, %rd5662;
	ld.shared.u32 	%r4053, [%rd5663];
	xor.b32  	%r4054, %r4050, %r4053;
	shr.u32 	%r4056, %r4036, 24;
	mul.wide.u32 	%rd5664, %r4056, 4;
	add.s64 	%rd5665, %rd5433, %rd5664;
	ld.shared.u8 	%r4057, [%rd5665];
	mul.wide.u32 	%rd5666, %r4057, 4;
	add.s64 	%rd5667, %rd5455, %rd5666;
	bfe.u32 	%r4058, %r4036, 16, 8;
	mul.wide.u32 	%rd5668, %r4058, 4;
	add.s64 	%rd5669, %rd5433, %rd5668;
	ld.shared.u8 	%r4059, [%rd5669];
	mul.wide.u32 	%rd5670, %r4059, 4;
	add.s64 	%rd5671, %rd5460, %rd5670;
	ld.shared.u32 	%r4060, [%rd5671];
	ld.shared.u32 	%r4061, [%rd5667];
	xor.b32  	%r4062, %r4060, %r4061;
	bfe.u32 	%r4063, %r4036, 8, 8;
	mul.wide.u32 	%rd5672, %r4063, 4;
	add.s64 	%rd5673, %rd5433, %rd5672;
	ld.shared.u8 	%r4064, [%rd5673];
	mul.wide.u32 	%rd5674, %r4064, 4;
	add.s64 	%rd5675, %rd5465, %rd5674;
	ld.shared.u32 	%r4065, [%rd5675];
	xor.b32  	%r4066, %r4062, %r4065;
	and.b32  	%r4067, %r4036, 255;
	mul.wide.u32 	%rd5676, %r4067, 4;
	add.s64 	%rd5677, %rd5433, %rd5676;
	ld.shared.u8 	%r4068, [%rd5677];
	mul.wide.u32 	%rd5678, %r4068, 4;
	add.s64 	%rd5679, %rd5470, %rd5678;
	ld.shared.u32 	%r4069, [%rd5679];
	xor.b32  	%r4070, %r4066, %r4069;
	shr.u32 	%r4072, %r4037, 24;
	mul.wide.u32 	%rd5680, %r4072, 4;
	add.s64 	%rd5681, %rd5433, %rd5680;
	ld.shared.u8 	%r4073, [%rd5681];
	mul.wide.u32 	%rd5682, %r4073, 4;
	add.s64 	%rd5683, %rd5455, %rd5682;
	bfe.u32 	%r4074, %r4037, 16, 8;
	mul.wide.u32 	%rd5684, %r4074, 4;
	add.s64 	%rd5685, %rd5433, %rd5684;
	ld.shared.u8 	%r4075, [%rd5685];
	mul.wide.u32 	%rd5686, %r4075, 4;
	add.s64 	%rd5687, %rd5460, %rd5686;
	ld.shared.u32 	%r4076, [%rd5687];
	ld.shared.u32 	%r4077, [%rd5683];
	xor.b32  	%r4078, %r4076, %r4077;
	bfe.u32 	%r4079, %r4037, 8, 8;
	mul.wide.u32 	%rd5688, %r4079, 4;
	add.s64 	%rd5689, %rd5433, %rd5688;
	ld.shared.u8 	%r4080, [%rd5689];
	mul.wide.u32 	%rd5690, %r4080, 4;
	add.s64 	%rd5691, %rd5465, %rd5690;
	ld.shared.u32 	%r4081, [%rd5691];
	xor.b32  	%r4082, %r4078, %r4081;
	and.b32  	%r4083, %r4037, 255;
	mul.wide.u32 	%rd5692, %r4083, 4;
	add.s64 	%rd5693, %rd5433, %rd5692;
	ld.shared.u8 	%r4084, [%rd5693];
	mul.wide.u32 	%rd5694, %r4084, 4;
	add.s64 	%rd5695, %rd5470, %rd5694;
	ld.shared.u32 	%r4085, [%rd5695];
	xor.b32  	%r4086, %r4082, %r4085;
	shr.u32 	%r4088, %r4038, 24;
	mul.wide.u32 	%rd5696, %r4088, 4;
	add.s64 	%rd5697, %rd5433, %rd5696;
	ld.shared.u8 	%r4089, [%rd5697];
	mul.wide.u32 	%rd5698, %r4089, 4;
	add.s64 	%rd5699, %rd5455, %rd5698;
	bfe.u32 	%r4090, %r4038, 16, 8;
	mul.wide.u32 	%rd5700, %r4090, 4;
	add.s64 	%rd5701, %rd5433, %rd5700;
	ld.shared.u8 	%r4091, [%rd5701];
	mul.wide.u32 	%rd5702, %r4091, 4;
	add.s64 	%rd5703, %rd5460, %rd5702;
	ld.shared.u32 	%r4092, [%rd5703];
	ld.shared.u32 	%r4093, [%rd5699];
	xor.b32  	%r4094, %r4092, %r4093;
	bfe.u32 	%r4095, %r4038, 8, 8;
	mul.wide.u32 	%rd5704, %r4095, 4;
	add.s64 	%rd5705, %rd5433, %rd5704;
	ld.shared.u8 	%r4096, [%rd5705];
	mul.wide.u32 	%rd5706, %r4096, 4;
	add.s64 	%rd5707, %rd5465, %rd5706;
	ld.shared.u32 	%r4097, [%rd5707];
	xor.b32  	%r4098, %r4094, %r4097;
	and.b32  	%r4099, %r4038, 255;
	mul.wide.u32 	%rd5708, %r4099, 4;
	add.s64 	%rd5709, %rd5433, %rd5708;
	ld.shared.u8 	%r4100, [%rd5709];
	mul.wide.u32 	%rd5710, %r4100, 4;
	add.s64 	%rd5711, %rd5470, %rd5710;
	ld.shared.u32 	%r4101, [%rd5711];
	xor.b32  	%r4102, %r4098, %r4101;
	ld.local.v4.u32 	{%r4103, %r4104, %r4105, %r4106}, [%rd10079+144];
	shr.u32 	%r4108, %r4103, 24;
	mul.wide.u32 	%rd5712, %r4108, 4;
	add.s64 	%rd5713, %rd5433, %rd5712;
	ld.shared.u8 	%r4109, [%rd5713];
	mul.wide.u32 	%rd5714, %r4109, 4;
	add.s64 	%rd5715, %rd5455, %rd5714;
	bfe.u32 	%r4110, %r4103, 16, 8;
	mul.wide.u32 	%rd5716, %r4110, 4;
	add.s64 	%rd5717, %rd5433, %rd5716;
	ld.shared.u8 	%r4111, [%rd5717];
	mul.wide.u32 	%rd5718, %r4111, 4;
	add.s64 	%rd5719, %rd5460, %rd5718;
	ld.shared.u32 	%r4112, [%rd5719];
	ld.shared.u32 	%r4113, [%rd5715];
	xor.b32  	%r4114, %r4112, %r4113;
	bfe.u32 	%r4115, %r4103, 8, 8;
	mul.wide.u32 	%rd5720, %r4115, 4;
	add.s64 	%rd5721, %rd5433, %rd5720;
	ld.shared.u8 	%r4116, [%rd5721];
	mul.wide.u32 	%rd5722, %r4116, 4;
	add.s64 	%rd5723, %rd5465, %rd5722;
	ld.shared.u32 	%r4117, [%rd5723];
	xor.b32  	%r4118, %r4114, %r4117;
	and.b32  	%r4119, %r4103, 255;
	mul.wide.u32 	%rd5724, %r4119, 4;
	add.s64 	%rd5725, %rd5433, %rd5724;
	ld.shared.u8 	%r4120, [%rd5725];
	mul.wide.u32 	%rd5726, %r4120, 4;
	add.s64 	%rd5727, %rd5470, %rd5726;
	ld.shared.u32 	%r4121, [%rd5727];
	xor.b32  	%r4122, %r4118, %r4121;
	shr.u32 	%r4124, %r4104, 24;
	mul.wide.u32 	%rd5728, %r4124, 4;
	add.s64 	%rd5729, %rd5433, %rd5728;
	ld.shared.u8 	%r4125, [%rd5729];
	mul.wide.u32 	%rd5730, %r4125, 4;
	add.s64 	%rd5731, %rd5455, %rd5730;
	bfe.u32 	%r4126, %r4104, 16, 8;
	mul.wide.u32 	%rd5732, %r4126, 4;
	add.s64 	%rd5733, %rd5433, %rd5732;
	ld.shared.u8 	%r4127, [%rd5733];
	mul.wide.u32 	%rd5734, %r4127, 4;
	add.s64 	%rd5735, %rd5460, %rd5734;
	ld.shared.u32 	%r4128, [%rd5735];
	ld.shared.u32 	%r4129, [%rd5731];
	xor.b32  	%r4130, %r4128, %r4129;
	bfe.u32 	%r4131, %r4104, 8, 8;
	mul.wide.u32 	%rd5736, %r4131, 4;
	add.s64 	%rd5737, %rd5433, %rd5736;
	ld.shared.u8 	%r4132, [%rd5737];
	mul.wide.u32 	%rd5738, %r4132, 4;
	add.s64 	%rd5739, %rd5465, %rd5738;
	ld.shared.u32 	%r4133, [%rd5739];
	xor.b32  	%r4134, %r4130, %r4133;
	and.b32  	%r4135, %r4104, 255;
	mul.wide.u32 	%rd5740, %r4135, 4;
	add.s64 	%rd5741, %rd5433, %rd5740;
	ld.shared.u8 	%r4136, [%rd5741];
	mul.wide.u32 	%rd5742, %r4136, 4;
	add.s64 	%rd5743, %rd5470, %rd5742;
	ld.shared.u32 	%r4137, [%rd5743];
	xor.b32  	%r4138, %r4134, %r4137;
	shr.u32 	%r4140, %r4105, 24;
	mul.wide.u32 	%rd5744, %r4140, 4;
	add.s64 	%rd5745, %rd5433, %rd5744;
	ld.shared.u8 	%r4141, [%rd5745];
	mul.wide.u32 	%rd5746, %r4141, 4;
	add.s64 	%rd5747, %rd5455, %rd5746;
	bfe.u32 	%r4142, %r4105, 16, 8;
	mul.wide.u32 	%rd5748, %r4142, 4;
	add.s64 	%rd5749, %rd5433, %rd5748;
	ld.shared.u8 	%r4143, [%rd5749];
	mul.wide.u32 	%rd5750, %r4143, 4;
	add.s64 	%rd5751, %rd5460, %rd5750;
	ld.shared.u32 	%r4144, [%rd5751];
	ld.shared.u32 	%r4145, [%rd5747];
	xor.b32  	%r4146, %r4144, %r4145;
	bfe.u32 	%r4147, %r4105, 8, 8;
	mul.wide.u32 	%rd5752, %r4147, 4;
	add.s64 	%rd5753, %rd5433, %rd5752;
	ld.shared.u8 	%r4148, [%rd5753];
	mul.wide.u32 	%rd5754, %r4148, 4;
	add.s64 	%rd5755, %rd5465, %rd5754;
	ld.shared.u32 	%r4149, [%rd5755];
	xor.b32  	%r4150, %r4146, %r4149;
	and.b32  	%r4151, %r4105, 255;
	mul.wide.u32 	%rd5756, %r4151, 4;
	add.s64 	%rd5757, %rd5433, %rd5756;
	ld.shared.u8 	%r4152, [%rd5757];
	mul.wide.u32 	%rd5758, %r4152, 4;
	add.s64 	%rd5759, %rd5470, %rd5758;
	ld.shared.u32 	%r4153, [%rd5759];
	xor.b32  	%r4154, %r4150, %r4153;
	shr.u32 	%r4156, %r4106, 24;
	mul.wide.u32 	%rd5760, %r4156, 4;
	add.s64 	%rd5761, %rd5433, %rd5760;
	ld.shared.u8 	%r4157, [%rd5761];
	mul.wide.u32 	%rd5762, %r4157, 4;
	add.s64 	%rd5763, %rd5455, %rd5762;
	bfe.u32 	%r4158, %r4106, 16, 8;
	mul.wide.u32 	%rd5764, %r4158, 4;
	add.s64 	%rd5765, %rd5433, %rd5764;
	ld.shared.u8 	%r4159, [%rd5765];
	mul.wide.u32 	%rd5766, %r4159, 4;
	add.s64 	%rd5767, %rd5460, %rd5766;
	ld.shared.u32 	%r4160, [%rd5767];
	ld.shared.u32 	%r4161, [%rd5763];
	xor.b32  	%r4162, %r4160, %r4161;
	bfe.u32 	%r4163, %r4106, 8, 8;
	mul.wide.u32 	%rd5768, %r4163, 4;
	add.s64 	%rd5769, %rd5433, %rd5768;
	ld.shared.u8 	%r4164, [%rd5769];
	mul.wide.u32 	%rd5770, %r4164, 4;
	add.s64 	%rd5771, %rd5465, %rd5770;
	ld.shared.u32 	%r4165, [%rd5771];
	xor.b32  	%r4166, %r4162, %r4165;
	and.b32  	%r4167, %r4106, 255;
	mul.wide.u32 	%rd5772, %r4167, 4;
	add.s64 	%rd5773, %rd5433, %rd5772;
	ld.shared.u8 	%r4168, [%rd5773];
	mul.wide.u32 	%rd5774, %r4168, 4;
	add.s64 	%rd5775, %rd5470, %rd5774;
	ld.shared.u32 	%r4169, [%rd5775];
	xor.b32  	%r4170, %r4166, %r4169;
	ld.local.v4.u32 	{%r4171, %r4172, %r4173, %r4174}, [%rd10079+128];
	shr.u32 	%r4176, %r4171, 24;
	mul.wide.u32 	%rd5776, %r4176, 4;
	add.s64 	%rd5777, %rd5433, %rd5776;
	ld.shared.u8 	%r4177, [%rd5777];
	mul.wide.u32 	%rd5778, %r4177, 4;
	add.s64 	%rd5779, %rd5455, %rd5778;
	bfe.u32 	%r4178, %r4171, 16, 8;
	mul.wide.u32 	%rd5780, %r4178, 4;
	add.s64 	%rd5781, %rd5433, %rd5780;
	ld.shared.u8 	%r4179, [%rd5781];
	mul.wide.u32 	%rd5782, %r4179, 4;
	add.s64 	%rd5783, %rd5460, %rd5782;
	ld.shared.u32 	%r4180, [%rd5783];
	ld.shared.u32 	%r4181, [%rd5779];
	xor.b32  	%r4182, %r4180, %r4181;
	bfe.u32 	%r4183, %r4171, 8, 8;
	mul.wide.u32 	%rd5784, %r4183, 4;
	add.s64 	%rd5785, %rd5433, %rd5784;
	ld.shared.u8 	%r4184, [%rd5785];
	mul.wide.u32 	%rd5786, %r4184, 4;
	add.s64 	%rd5787, %rd5465, %rd5786;
	ld.shared.u32 	%r4185, [%rd5787];
	xor.b32  	%r4186, %r4182, %r4185;
	and.b32  	%r4187, %r4171, 255;
	mul.wide.u32 	%rd5788, %r4187, 4;
	add.s64 	%rd5789, %rd5433, %rd5788;
	ld.shared.u8 	%r4188, [%rd5789];
	mul.wide.u32 	%rd5790, %r4188, 4;
	add.s64 	%rd5791, %rd5470, %rd5790;
	ld.shared.u32 	%r4189, [%rd5791];
	xor.b32  	%r4190, %r4186, %r4189;
	shr.u32 	%r4192, %r4172, 24;
	mul.wide.u32 	%rd5792, %r4192, 4;
	add.s64 	%rd5793, %rd5433, %rd5792;
	ld.shared.u8 	%r4193, [%rd5793];
	mul.wide.u32 	%rd5794, %r4193, 4;
	add.s64 	%rd5795, %rd5455, %rd5794;
	bfe.u32 	%r4194, %r4172, 16, 8;
	mul.wide.u32 	%rd5796, %r4194, 4;
	add.s64 	%rd5797, %rd5433, %rd5796;
	ld.shared.u8 	%r4195, [%rd5797];
	mul.wide.u32 	%rd5798, %r4195, 4;
	add.s64 	%rd5799, %rd5460, %rd5798;
	ld.shared.u32 	%r4196, [%rd5799];
	ld.shared.u32 	%r4197, [%rd5795];
	xor.b32  	%r4198, %r4196, %r4197;
	bfe.u32 	%r4199, %r4172, 8, 8;
	mul.wide.u32 	%rd5800, %r4199, 4;
	add.s64 	%rd5801, %rd5433, %rd5800;
	ld.shared.u8 	%r4200, [%rd5801];
	mul.wide.u32 	%rd5802, %r4200, 4;
	add.s64 	%rd5803, %rd5465, %rd5802;
	ld.shared.u32 	%r4201, [%rd5803];
	xor.b32  	%r4202, %r4198, %r4201;
	and.b32  	%r4203, %r4172, 255;
	mul.wide.u32 	%rd5804, %r4203, 4;
	add.s64 	%rd5805, %rd5433, %rd5804;
	ld.shared.u8 	%r4204, [%rd5805];
	mul.wide.u32 	%rd5806, %r4204, 4;
	add.s64 	%rd5807, %rd5470, %rd5806;
	ld.shared.u32 	%r4205, [%rd5807];
	xor.b32  	%r4206, %r4202, %r4205;
	shr.u32 	%r4208, %r4173, 24;
	mul.wide.u32 	%rd5808, %r4208, 4;
	add.s64 	%rd5809, %rd5433, %rd5808;
	ld.shared.u8 	%r4209, [%rd5809];
	mul.wide.u32 	%rd5810, %r4209, 4;
	add.s64 	%rd5811, %rd5455, %rd5810;
	bfe.u32 	%r4210, %r4173, 16, 8;
	mul.wide.u32 	%rd5812, %r4210, 4;
	add.s64 	%rd5813, %rd5433, %rd5812;
	ld.shared.u8 	%r4211, [%rd5813];
	mul.wide.u32 	%rd5814, %r4211, 4;
	add.s64 	%rd5815, %rd5460, %rd5814;
	ld.shared.u32 	%r4212, [%rd5815];
	ld.shared.u32 	%r4213, [%rd5811];
	xor.b32  	%r4214, %r4212, %r4213;
	bfe.u32 	%r4215, %r4173, 8, 8;
	mul.wide.u32 	%rd5816, %r4215, 4;
	add.s64 	%rd5817, %rd5433, %rd5816;
	ld.shared.u8 	%r4216, [%rd5817];
	mul.wide.u32 	%rd5818, %r4216, 4;
	add.s64 	%rd5819, %rd5465, %rd5818;
	ld.shared.u32 	%r4217, [%rd5819];
	xor.b32  	%r4218, %r4214, %r4217;
	and.b32  	%r4219, %r4173, 255;
	mul.wide.u32 	%rd5820, %r4219, 4;
	add.s64 	%rd5821, %rd5433, %rd5820;
	ld.shared.u8 	%r4220, [%rd5821];
	mul.wide.u32 	%rd5822, %r4220, 4;
	add.s64 	%rd5823, %rd5470, %rd5822;
	ld.shared.u32 	%r4221, [%rd5823];
	xor.b32  	%r4222, %r4218, %r4221;
	shr.u32 	%r4224, %r4174, 24;
	mul.wide.u32 	%rd5824, %r4224, 4;
	add.s64 	%rd5825, %rd5433, %rd5824;
	ld.shared.u8 	%r4225, [%rd5825];
	mul.wide.u32 	%rd5826, %r4225, 4;
	add.s64 	%rd5827, %rd5455, %rd5826;
	bfe.u32 	%r4226, %r4174, 16, 8;
	mul.wide.u32 	%rd5828, %r4226, 4;
	add.s64 	%rd5829, %rd5433, %rd5828;
	ld.shared.u8 	%r4227, [%rd5829];
	mul.wide.u32 	%rd5830, %r4227, 4;
	add.s64 	%rd5831, %rd5460, %rd5830;
	ld.shared.u32 	%r4228, [%rd5831];
	ld.shared.u32 	%r4229, [%rd5827];
	xor.b32  	%r4230, %r4228, %r4229;
	bfe.u32 	%r4231, %r4174, 8, 8;
	mul.wide.u32 	%rd5832, %r4231, 4;
	add.s64 	%rd5833, %rd5433, %rd5832;
	ld.shared.u8 	%r4232, [%rd5833];
	mul.wide.u32 	%rd5834, %r4232, 4;
	add.s64 	%rd5835, %rd5465, %rd5834;
	ld.shared.u32 	%r4233, [%rd5835];
	xor.b32  	%r4234, %r4230, %r4233;
	and.b32  	%r4235, %r4174, 255;
	mul.wide.u32 	%rd5836, %r4235, 4;
	add.s64 	%rd5837, %rd5433, %rd5836;
	ld.shared.u8 	%r4236, [%rd5837];
	mul.wide.u32 	%rd5838, %r4236, 4;
	add.s64 	%rd5839, %rd5470, %rd5838;
	ld.shared.u32 	%r4237, [%rd5839];
	xor.b32  	%r4238, %r4234, %r4237;
	ld.local.v4.u32 	{%r4239, %r4240, %r4241, %r4242}, [%rd10079+112];
	shr.u32 	%r4244, %r4239, 24;
	mul.wide.u32 	%rd5840, %r4244, 4;
	add.s64 	%rd5841, %rd5433, %rd5840;
	ld.shared.u8 	%r4245, [%rd5841];
	mul.wide.u32 	%rd5842, %r4245, 4;
	add.s64 	%rd5843, %rd5455, %rd5842;
	bfe.u32 	%r4246, %r4239, 16, 8;
	mul.wide.u32 	%rd5844, %r4246, 4;
	add.s64 	%rd5845, %rd5433, %rd5844;
	ld.shared.u8 	%r4247, [%rd5845];
	mul.wide.u32 	%rd5846, %r4247, 4;
	add.s64 	%rd5847, %rd5460, %rd5846;
	ld.shared.u32 	%r4248, [%rd5847];
	ld.shared.u32 	%r4249, [%rd5843];
	xor.b32  	%r4250, %r4248, %r4249;
	bfe.u32 	%r4251, %r4239, 8, 8;
	mul.wide.u32 	%rd5848, %r4251, 4;
	add.s64 	%rd5849, %rd5433, %rd5848;
	ld.shared.u8 	%r4252, [%rd5849];
	mul.wide.u32 	%rd5850, %r4252, 4;
	add.s64 	%rd5851, %rd5465, %rd5850;
	ld.shared.u32 	%r4253, [%rd5851];
	xor.b32  	%r4254, %r4250, %r4253;
	and.b32  	%r4255, %r4239, 255;
	mul.wide.u32 	%rd5852, %r4255, 4;
	add.s64 	%rd5853, %rd5433, %rd5852;
	ld.shared.u8 	%r4256, [%rd5853];
	mul.wide.u32 	%rd5854, %r4256, 4;
	add.s64 	%rd5855, %rd5470, %rd5854;
	ld.shared.u32 	%r4257, [%rd5855];
	xor.b32  	%r4258, %r4254, %r4257;
	shr.u32 	%r4260, %r4240, 24;
	mul.wide.u32 	%rd5856, %r4260, 4;
	add.s64 	%rd5857, %rd5433, %rd5856;
	ld.shared.u8 	%r4261, [%rd5857];
	mul.wide.u32 	%rd5858, %r4261, 4;
	add.s64 	%rd5859, %rd5455, %rd5858;
	bfe.u32 	%r4262, %r4240, 16, 8;
	mul.wide.u32 	%rd5860, %r4262, 4;
	add.s64 	%rd5861, %rd5433, %rd5860;
	ld.shared.u8 	%r4263, [%rd5861];
	mul.wide.u32 	%rd5862, %r4263, 4;
	add.s64 	%rd5863, %rd5460, %rd5862;
	ld.shared.u32 	%r4264, [%rd5863];
	ld.shared.u32 	%r4265, [%rd5859];
	xor.b32  	%r4266, %r4264, %r4265;
	bfe.u32 	%r4267, %r4240, 8, 8;
	mul.wide.u32 	%rd5864, %r4267, 4;
	add.s64 	%rd5865, %rd5433, %rd5864;
	ld.shared.u8 	%r4268, [%rd5865];
	mul.wide.u32 	%rd5866, %r4268, 4;
	add.s64 	%rd5867, %rd5465, %rd5866;
	ld.shared.u32 	%r4269, [%rd5867];
	xor.b32  	%r4270, %r4266, %r4269;
	and.b32  	%r4271, %r4240, 255;
	mul.wide.u32 	%rd5868, %r4271, 4;
	add.s64 	%rd5869, %rd5433, %rd5868;
	ld.shared.u8 	%r4272, [%rd5869];
	mul.wide.u32 	%rd5870, %r4272, 4;
	add.s64 	%rd5871, %rd5470, %rd5870;
	ld.shared.u32 	%r4273, [%rd5871];
	xor.b32  	%r4274, %r4270, %r4273;
	shr.u32 	%r4276, %r4241, 24;
	mul.wide.u32 	%rd5872, %r4276, 4;
	add.s64 	%rd5873, %rd5433, %rd5872;
	ld.shared.u8 	%r4277, [%rd5873];
	mul.wide.u32 	%rd5874, %r4277, 4;
	add.s64 	%rd5875, %rd5455, %rd5874;
	bfe.u32 	%r4278, %r4241, 16, 8;
	mul.wide.u32 	%rd5876, %r4278, 4;
	add.s64 	%rd5877, %rd5433, %rd5876;
	ld.shared.u8 	%r4279, [%rd5877];
	mul.wide.u32 	%rd5878, %r4279, 4;
	add.s64 	%rd5879, %rd5460, %rd5878;
	ld.shared.u32 	%r4280, [%rd5879];
	ld.shared.u32 	%r4281, [%rd5875];
	xor.b32  	%r4282, %r4280, %r4281;
	bfe.u32 	%r4283, %r4241, 8, 8;
	mul.wide.u32 	%rd5880, %r4283, 4;
	add.s64 	%rd5881, %rd5433, %rd5880;
	ld.shared.u8 	%r4284, [%rd5881];
	mul.wide.u32 	%rd5882, %r4284, 4;
	add.s64 	%rd5883, %rd5465, %rd5882;
	ld.shared.u32 	%r4285, [%rd5883];
	xor.b32  	%r4286, %r4282, %r4285;
	and.b32  	%r4287, %r4241, 255;
	mul.wide.u32 	%rd5884, %r4287, 4;
	add.s64 	%rd5885, %rd5433, %rd5884;
	ld.shared.u8 	%r4288, [%rd5885];
	mul.wide.u32 	%rd5886, %r4288, 4;
	add.s64 	%rd5887, %rd5470, %rd5886;
	ld.shared.u32 	%r4289, [%rd5887];
	xor.b32  	%r4290, %r4286, %r4289;
	shr.u32 	%r4292, %r4242, 24;
	mul.wide.u32 	%rd5888, %r4292, 4;
	add.s64 	%rd5889, %rd5433, %rd5888;
	ld.shared.u8 	%r4293, [%rd5889];
	mul.wide.u32 	%rd5890, %r4293, 4;
	add.s64 	%rd5891, %rd5455, %rd5890;
	bfe.u32 	%r4294, %r4242, 16, 8;
	mul.wide.u32 	%rd5892, %r4294, 4;
	add.s64 	%rd5893, %rd5433, %rd5892;
	ld.shared.u8 	%r4295, [%rd5893];
	mul.wide.u32 	%rd5894, %r4295, 4;
	add.s64 	%rd5895, %rd5460, %rd5894;
	ld.shared.u32 	%r4296, [%rd5895];
	ld.shared.u32 	%r4297, [%rd5891];
	xor.b32  	%r4298, %r4296, %r4297;
	bfe.u32 	%r4299, %r4242, 8, 8;
	mul.wide.u32 	%rd5896, %r4299, 4;
	add.s64 	%rd5897, %rd5433, %rd5896;
	ld.shared.u8 	%r4300, [%rd5897];
	mul.wide.u32 	%rd5898, %r4300, 4;
	add.s64 	%rd5899, %rd5465, %rd5898;
	ld.shared.u32 	%r4301, [%rd5899];
	xor.b32  	%r4302, %r4298, %r4301;
	and.b32  	%r4303, %r4242, 255;
	mul.wide.u32 	%rd5900, %r4303, 4;
	add.s64 	%rd5901, %rd5433, %rd5900;
	ld.shared.u8 	%r4304, [%rd5901];
	mul.wide.u32 	%rd5902, %r4304, 4;
	add.s64 	%rd5903, %rd5470, %rd5902;
	ld.shared.u32 	%r4305, [%rd5903];
	xor.b32  	%r4306, %r4302, %r4305;
	ld.local.v4.u32 	{%r4307, %r4308, %r4309, %r4310}, [%rd10079+96];
	shr.u32 	%r4312, %r4307, 24;
	mul.wide.u32 	%rd5904, %r4312, 4;
	add.s64 	%rd5905, %rd5433, %rd5904;
	ld.shared.u8 	%r4313, [%rd5905];
	mul.wide.u32 	%rd5906, %r4313, 4;
	add.s64 	%rd5907, %rd5455, %rd5906;
	bfe.u32 	%r4314, %r4307, 16, 8;
	mul.wide.u32 	%rd5908, %r4314, 4;
	add.s64 	%rd5909, %rd5433, %rd5908;
	ld.shared.u8 	%r4315, [%rd5909];
	mul.wide.u32 	%rd5910, %r4315, 4;
	add.s64 	%rd5911, %rd5460, %rd5910;
	ld.shared.u32 	%r4316, [%rd5911];
	ld.shared.u32 	%r4317, [%rd5907];
	xor.b32  	%r4318, %r4316, %r4317;
	bfe.u32 	%r4319, %r4307, 8, 8;
	mul.wide.u32 	%rd5912, %r4319, 4;
	add.s64 	%rd5913, %rd5433, %rd5912;
	ld.shared.u8 	%r4320, [%rd5913];
	mul.wide.u32 	%rd5914, %r4320, 4;
	add.s64 	%rd5915, %rd5465, %rd5914;
	ld.shared.u32 	%r4321, [%rd5915];
	xor.b32  	%r4322, %r4318, %r4321;
	and.b32  	%r4323, %r4307, 255;
	mul.wide.u32 	%rd5916, %r4323, 4;
	add.s64 	%rd5917, %rd5433, %rd5916;
	ld.shared.u8 	%r4324, [%rd5917];
	mul.wide.u32 	%rd5918, %r4324, 4;
	add.s64 	%rd5919, %rd5470, %rd5918;
	ld.shared.u32 	%r4325, [%rd5919];
	xor.b32  	%r4326, %r4322, %r4325;
	shr.u32 	%r4328, %r4308, 24;
	mul.wide.u32 	%rd5920, %r4328, 4;
	add.s64 	%rd5921, %rd5433, %rd5920;
	ld.shared.u8 	%r4329, [%rd5921];
	mul.wide.u32 	%rd5922, %r4329, 4;
	add.s64 	%rd5923, %rd5455, %rd5922;
	bfe.u32 	%r4330, %r4308, 16, 8;
	mul.wide.u32 	%rd5924, %r4330, 4;
	add.s64 	%rd5925, %rd5433, %rd5924;
	ld.shared.u8 	%r4331, [%rd5925];
	mul.wide.u32 	%rd5926, %r4331, 4;
	add.s64 	%rd5927, %rd5460, %rd5926;
	ld.shared.u32 	%r4332, [%rd5927];
	ld.shared.u32 	%r4333, [%rd5923];
	xor.b32  	%r4334, %r4332, %r4333;
	bfe.u32 	%r4335, %r4308, 8, 8;
	mul.wide.u32 	%rd5928, %r4335, 4;
	add.s64 	%rd5929, %rd5433, %rd5928;
	ld.shared.u8 	%r4336, [%rd5929];
	mul.wide.u32 	%rd5930, %r4336, 4;
	add.s64 	%rd5931, %rd5465, %rd5930;
	ld.shared.u32 	%r4337, [%rd5931];
	xor.b32  	%r4338, %r4334, %r4337;
	and.b32  	%r4339, %r4308, 255;
	mul.wide.u32 	%rd5932, %r4339, 4;
	add.s64 	%rd5933, %rd5433, %rd5932;
	ld.shared.u8 	%r4340, [%rd5933];
	mul.wide.u32 	%rd5934, %r4340, 4;
	add.s64 	%rd5935, %rd5470, %rd5934;
	ld.shared.u32 	%r4341, [%rd5935];
	xor.b32  	%r4342, %r4338, %r4341;
	shr.u32 	%r4344, %r4309, 24;
	mul.wide.u32 	%rd5936, %r4344, 4;
	add.s64 	%rd5937, %rd5433, %rd5936;
	ld.shared.u8 	%r4345, [%rd5937];
	mul.wide.u32 	%rd5938, %r4345, 4;
	add.s64 	%rd5939, %rd5455, %rd5938;
	bfe.u32 	%r4346, %r4309, 16, 8;
	mul.wide.u32 	%rd5940, %r4346, 4;
	add.s64 	%rd5941, %rd5433, %rd5940;
	ld.shared.u8 	%r4347, [%rd5941];
	mul.wide.u32 	%rd5942, %r4347, 4;
	add.s64 	%rd5943, %rd5460, %rd5942;
	ld.shared.u32 	%r4348, [%rd5943];
	ld.shared.u32 	%r4349, [%rd5939];
	xor.b32  	%r4350, %r4348, %r4349;
	bfe.u32 	%r4351, %r4309, 8, 8;
	mul.wide.u32 	%rd5944, %r4351, 4;
	add.s64 	%rd5945, %rd5433, %rd5944;
	ld.shared.u8 	%r4352, [%rd5945];
	mul.wide.u32 	%rd5946, %r4352, 4;
	add.s64 	%rd5947, %rd5465, %rd5946;
	ld.shared.u32 	%r4353, [%rd5947];
	xor.b32  	%r4354, %r4350, %r4353;
	and.b32  	%r4355, %r4309, 255;
	mul.wide.u32 	%rd5948, %r4355, 4;
	add.s64 	%rd5949, %rd5433, %rd5948;
	ld.shared.u8 	%r4356, [%rd5949];
	mul.wide.u32 	%rd5950, %r4356, 4;
	add.s64 	%rd5951, %rd5470, %rd5950;
	ld.shared.u32 	%r4357, [%rd5951];
	xor.b32  	%r4358, %r4354, %r4357;
	shr.u32 	%r4360, %r4310, 24;
	mul.wide.u32 	%rd5952, %r4360, 4;
	add.s64 	%rd5953, %rd5433, %rd5952;
	ld.shared.u8 	%r4361, [%rd5953];
	mul.wide.u32 	%rd5954, %r4361, 4;
	add.s64 	%rd5955, %rd5455, %rd5954;
	bfe.u32 	%r4362, %r4310, 16, 8;
	mul.wide.u32 	%rd5956, %r4362, 4;
	add.s64 	%rd5957, %rd5433, %rd5956;
	ld.shared.u8 	%r4363, [%rd5957];
	mul.wide.u32 	%rd5958, %r4363, 4;
	add.s64 	%rd5959, %rd5460, %rd5958;
	ld.shared.u32 	%r4364, [%rd5959];
	ld.shared.u32 	%r4365, [%rd5955];
	xor.b32  	%r4366, %r4364, %r4365;
	bfe.u32 	%r4367, %r4310, 8, 8;
	mul.wide.u32 	%rd5960, %r4367, 4;
	add.s64 	%rd5961, %rd5433, %rd5960;
	ld.shared.u8 	%r4368, [%rd5961];
	mul.wide.u32 	%rd5962, %r4368, 4;
	add.s64 	%rd5963, %rd5465, %rd5962;
	ld.shared.u32 	%r4369, [%rd5963];
	xor.b32  	%r4370, %r4366, %r4369;
	and.b32  	%r4371, %r4310, 255;
	mul.wide.u32 	%rd5964, %r4371, 4;
	add.s64 	%rd5965, %rd5433, %rd5964;
	ld.shared.u8 	%r4372, [%rd5965];
	mul.wide.u32 	%rd5966, %r4372, 4;
	add.s64 	%rd5967, %rd5470, %rd5966;
	ld.shared.u32 	%r4373, [%rd5967];
	xor.b32  	%r4374, %r4370, %r4373;
	ld.local.v4.u32 	{%r4375, %r4376, %r4377, %r4378}, [%rd10079+80];
	shr.u32 	%r4380, %r4375, 24;
	mul.wide.u32 	%rd5968, %r4380, 4;
	add.s64 	%rd5969, %rd5433, %rd5968;
	ld.shared.u8 	%r4381, [%rd5969];
	mul.wide.u32 	%rd5970, %r4381, 4;
	add.s64 	%rd5971, %rd5455, %rd5970;
	bfe.u32 	%r4382, %r4375, 16, 8;
	mul.wide.u32 	%rd5972, %r4382, 4;
	add.s64 	%rd5973, %rd5433, %rd5972;
	ld.shared.u8 	%r4383, [%rd5973];
	mul.wide.u32 	%rd5974, %r4383, 4;
	add.s64 	%rd5975, %rd5460, %rd5974;
	ld.shared.u32 	%r4384, [%rd5975];
	ld.shared.u32 	%r4385, [%rd5971];
	xor.b32  	%r4386, %r4384, %r4385;
	bfe.u32 	%r4387, %r4375, 8, 8;
	mul.wide.u32 	%rd5976, %r4387, 4;
	add.s64 	%rd5977, %rd5433, %rd5976;
	ld.shared.u8 	%r4388, [%rd5977];
	mul.wide.u32 	%rd5978, %r4388, 4;
	add.s64 	%rd5979, %rd5465, %rd5978;
	ld.shared.u32 	%r4389, [%rd5979];
	xor.b32  	%r4390, %r4386, %r4389;
	and.b32  	%r4391, %r4375, 255;
	mul.wide.u32 	%rd5980, %r4391, 4;
	add.s64 	%rd5981, %rd5433, %rd5980;
	ld.shared.u8 	%r4392, [%rd5981];
	mul.wide.u32 	%rd5982, %r4392, 4;
	add.s64 	%rd5983, %rd5470, %rd5982;
	ld.shared.u32 	%r4393, [%rd5983];
	xor.b32  	%r4394, %r4390, %r4393;
	shr.u32 	%r4396, %r4376, 24;
	mul.wide.u32 	%rd5984, %r4396, 4;
	add.s64 	%rd5985, %rd5433, %rd5984;
	ld.shared.u8 	%r4397, [%rd5985];
	mul.wide.u32 	%rd5986, %r4397, 4;
	add.s64 	%rd5987, %rd5455, %rd5986;
	bfe.u32 	%r4398, %r4376, 16, 8;
	mul.wide.u32 	%rd5988, %r4398, 4;
	add.s64 	%rd5989, %rd5433, %rd5988;
	ld.shared.u8 	%r4399, [%rd5989];
	mul.wide.u32 	%rd5990, %r4399, 4;
	add.s64 	%rd5991, %rd5460, %rd5990;
	ld.shared.u32 	%r4400, [%rd5991];
	ld.shared.u32 	%r4401, [%rd5987];
	xor.b32  	%r4402, %r4400, %r4401;
	bfe.u32 	%r4403, %r4376, 8, 8;
	mul.wide.u32 	%rd5992, %r4403, 4;
	add.s64 	%rd5993, %rd5433, %rd5992;
	ld.shared.u8 	%r4404, [%rd5993];
	mul.wide.u32 	%rd5994, %r4404, 4;
	add.s64 	%rd5995, %rd5465, %rd5994;
	ld.shared.u32 	%r4405, [%rd5995];
	xor.b32  	%r4406, %r4402, %r4405;
	and.b32  	%r4407, %r4376, 255;
	mul.wide.u32 	%rd5996, %r4407, 4;
	add.s64 	%rd5997, %rd5433, %rd5996;
	ld.shared.u8 	%r4408, [%rd5997];
	mul.wide.u32 	%rd5998, %r4408, 4;
	add.s64 	%rd5999, %rd5470, %rd5998;
	ld.shared.u32 	%r4409, [%rd5999];
	xor.b32  	%r4410, %r4406, %r4409;
	shr.u32 	%r4412, %r4377, 24;
	mul.wide.u32 	%rd6000, %r4412, 4;
	add.s64 	%rd6001, %rd5433, %rd6000;
	ld.shared.u8 	%r4413, [%rd6001];
	mul.wide.u32 	%rd6002, %r4413, 4;
	add.s64 	%rd6003, %rd5455, %rd6002;
	bfe.u32 	%r4414, %r4377, 16, 8;
	mul.wide.u32 	%rd6004, %r4414, 4;
	add.s64 	%rd6005, %rd5433, %rd6004;
	ld.shared.u8 	%r4415, [%rd6005];
	mul.wide.u32 	%rd6006, %r4415, 4;
	add.s64 	%rd6007, %rd5460, %rd6006;
	ld.shared.u32 	%r4416, [%rd6007];
	ld.shared.u32 	%r4417, [%rd6003];
	xor.b32  	%r4418, %r4416, %r4417;
	bfe.u32 	%r4419, %r4377, 8, 8;
	mul.wide.u32 	%rd6008, %r4419, 4;
	add.s64 	%rd6009, %rd5433, %rd6008;
	ld.shared.u8 	%r4420, [%rd6009];
	mul.wide.u32 	%rd6010, %r4420, 4;
	add.s64 	%rd6011, %rd5465, %rd6010;
	ld.shared.u32 	%r4421, [%rd6011];
	xor.b32  	%r4422, %r4418, %r4421;
	and.b32  	%r4423, %r4377, 255;
	mul.wide.u32 	%rd6012, %r4423, 4;
	add.s64 	%rd6013, %rd5433, %rd6012;
	ld.shared.u8 	%r4424, [%rd6013];
	mul.wide.u32 	%rd6014, %r4424, 4;
	add.s64 	%rd6015, %rd5470, %rd6014;
	ld.shared.u32 	%r4425, [%rd6015];
	xor.b32  	%r4426, %r4422, %r4425;
	shr.u32 	%r4428, %r4378, 24;
	mul.wide.u32 	%rd6016, %r4428, 4;
	add.s64 	%rd6017, %rd5433, %rd6016;
	ld.shared.u8 	%r4429, [%rd6017];
	mul.wide.u32 	%rd6018, %r4429, 4;
	add.s64 	%rd6019, %rd5455, %rd6018;
	bfe.u32 	%r4430, %r4378, 16, 8;
	mul.wide.u32 	%rd6020, %r4430, 4;
	add.s64 	%rd6021, %rd5433, %rd6020;
	ld.shared.u8 	%r4431, [%rd6021];
	mul.wide.u32 	%rd6022, %r4431, 4;
	add.s64 	%rd6023, %rd5460, %rd6022;
	ld.shared.u32 	%r4432, [%rd6023];
	ld.shared.u32 	%r4433, [%rd6019];
	xor.b32  	%r4434, %r4432, %r4433;
	bfe.u32 	%r4435, %r4378, 8, 8;
	mul.wide.u32 	%rd6024, %r4435, 4;
	add.s64 	%rd6025, %rd5433, %rd6024;
	ld.shared.u8 	%r4436, [%rd6025];
	mul.wide.u32 	%rd6026, %r4436, 4;
	add.s64 	%rd6027, %rd5465, %rd6026;
	ld.shared.u32 	%r4437, [%rd6027];
	xor.b32  	%r4438, %r4434, %r4437;
	and.b32  	%r4439, %r4378, 255;
	mul.wide.u32 	%rd6028, %r4439, 4;
	add.s64 	%rd6029, %rd5433, %rd6028;
	ld.shared.u8 	%r4440, [%rd6029];
	mul.wide.u32 	%rd6030, %r4440, 4;
	add.s64 	%rd6031, %rd5470, %rd6030;
	ld.shared.u32 	%r4441, [%rd6031];
	xor.b32  	%r4442, %r4438, %r4441;
	ld.local.v4.u32 	{%r4443, %r4444, %r4445, %r4446}, [%rd10079+64];
	shr.u32 	%r4448, %r4443, 24;
	mul.wide.u32 	%rd6032, %r4448, 4;
	add.s64 	%rd6033, %rd5433, %rd6032;
	ld.shared.u8 	%r4449, [%rd6033];
	mul.wide.u32 	%rd6034, %r4449, 4;
	add.s64 	%rd6035, %rd5455, %rd6034;
	bfe.u32 	%r4450, %r4443, 16, 8;
	mul.wide.u32 	%rd6036, %r4450, 4;
	add.s64 	%rd6037, %rd5433, %rd6036;
	ld.shared.u8 	%r4451, [%rd6037];
	mul.wide.u32 	%rd6038, %r4451, 4;
	add.s64 	%rd6039, %rd5460, %rd6038;
	ld.shared.u32 	%r4452, [%rd6039];
	ld.shared.u32 	%r4453, [%rd6035];
	xor.b32  	%r4454, %r4452, %r4453;
	bfe.u32 	%r4455, %r4443, 8, 8;
	mul.wide.u32 	%rd6040, %r4455, 4;
	add.s64 	%rd6041, %rd5433, %rd6040;
	ld.shared.u8 	%r4456, [%rd6041];
	mul.wide.u32 	%rd6042, %r4456, 4;
	add.s64 	%rd6043, %rd5465, %rd6042;
	ld.shared.u32 	%r4457, [%rd6043];
	xor.b32  	%r4458, %r4454, %r4457;
	and.b32  	%r4459, %r4443, 255;
	mul.wide.u32 	%rd6044, %r4459, 4;
	add.s64 	%rd6045, %rd5433, %rd6044;
	ld.shared.u8 	%r4460, [%rd6045];
	mul.wide.u32 	%rd6046, %r4460, 4;
	add.s64 	%rd6047, %rd5470, %rd6046;
	ld.shared.u32 	%r4461, [%rd6047];
	xor.b32  	%r4462, %r4458, %r4461;
	shr.u32 	%r4464, %r4444, 24;
	mul.wide.u32 	%rd6048, %r4464, 4;
	add.s64 	%rd6049, %rd5433, %rd6048;
	ld.shared.u8 	%r4465, [%rd6049];
	mul.wide.u32 	%rd6050, %r4465, 4;
	add.s64 	%rd6051, %rd5455, %rd6050;
	bfe.u32 	%r4466, %r4444, 16, 8;
	mul.wide.u32 	%rd6052, %r4466, 4;
	add.s64 	%rd6053, %rd5433, %rd6052;
	ld.shared.u8 	%r4467, [%rd6053];
	mul.wide.u32 	%rd6054, %r4467, 4;
	add.s64 	%rd6055, %rd5460, %rd6054;
	ld.shared.u32 	%r4468, [%rd6055];
	ld.shared.u32 	%r4469, [%rd6051];
	xor.b32  	%r4470, %r4468, %r4469;
	bfe.u32 	%r4471, %r4444, 8, 8;
	mul.wide.u32 	%rd6056, %r4471, 4;
	add.s64 	%rd6057, %rd5433, %rd6056;
	ld.shared.u8 	%r4472, [%rd6057];
	mul.wide.u32 	%rd6058, %r4472, 4;
	add.s64 	%rd6059, %rd5465, %rd6058;
	ld.shared.u32 	%r4473, [%rd6059];
	xor.b32  	%r4474, %r4470, %r4473;
	and.b32  	%r4475, %r4444, 255;
	mul.wide.u32 	%rd6060, %r4475, 4;
	add.s64 	%rd6061, %rd5433, %rd6060;
	ld.shared.u8 	%r4476, [%rd6061];
	mul.wide.u32 	%rd6062, %r4476, 4;
	add.s64 	%rd6063, %rd5470, %rd6062;
	ld.shared.u32 	%r4477, [%rd6063];
	xor.b32  	%r4478, %r4474, %r4477;
	shr.u32 	%r4480, %r4445, 24;
	mul.wide.u32 	%rd6064, %r4480, 4;
	add.s64 	%rd6065, %rd5433, %rd6064;
	ld.shared.u8 	%r4481, [%rd6065];
	mul.wide.u32 	%rd6066, %r4481, 4;
	add.s64 	%rd6067, %rd5455, %rd6066;
	bfe.u32 	%r4482, %r4445, 16, 8;
	mul.wide.u32 	%rd6068, %r4482, 4;
	add.s64 	%rd6069, %rd5433, %rd6068;
	ld.shared.u8 	%r4483, [%rd6069];
	mul.wide.u32 	%rd6070, %r4483, 4;
	add.s64 	%rd6071, %rd5460, %rd6070;
	ld.shared.u32 	%r4484, [%rd6071];
	ld.shared.u32 	%r4485, [%rd6067];
	xor.b32  	%r4486, %r4484, %r4485;
	bfe.u32 	%r4487, %r4445, 8, 8;
	mul.wide.u32 	%rd6072, %r4487, 4;
	add.s64 	%rd6073, %rd5433, %rd6072;
	ld.shared.u8 	%r4488, [%rd6073];
	mul.wide.u32 	%rd6074, %r4488, 4;
	add.s64 	%rd6075, %rd5465, %rd6074;
	ld.shared.u32 	%r4489, [%rd6075];
	xor.b32  	%r4490, %r4486, %r4489;
	and.b32  	%r4491, %r4445, 255;
	mul.wide.u32 	%rd6076, %r4491, 4;
	add.s64 	%rd6077, %rd5433, %rd6076;
	ld.shared.u8 	%r4492, [%rd6077];
	mul.wide.u32 	%rd6078, %r4492, 4;
	add.s64 	%rd6079, %rd5470, %rd6078;
	ld.shared.u32 	%r4493, [%rd6079];
	xor.b32  	%r4494, %r4490, %r4493;
	shr.u32 	%r4496, %r4446, 24;
	mul.wide.u32 	%rd6080, %r4496, 4;
	add.s64 	%rd6081, %rd5433, %rd6080;
	ld.shared.u8 	%r4497, [%rd6081];
	mul.wide.u32 	%rd6082, %r4497, 4;
	add.s64 	%rd6083, %rd5455, %rd6082;
	bfe.u32 	%r4498, %r4446, 16, 8;
	mul.wide.u32 	%rd6084, %r4498, 4;
	add.s64 	%rd6085, %rd5433, %rd6084;
	ld.shared.u8 	%r4499, [%rd6085];
	mul.wide.u32 	%rd6086, %r4499, 4;
	add.s64 	%rd6087, %rd5460, %rd6086;
	ld.shared.u32 	%r4500, [%rd6087];
	ld.shared.u32 	%r4501, [%rd6083];
	xor.b32  	%r4502, %r4500, %r4501;
	bfe.u32 	%r4503, %r4446, 8, 8;
	mul.wide.u32 	%rd6088, %r4503, 4;
	add.s64 	%rd6089, %rd5433, %rd6088;
	ld.shared.u8 	%r4504, [%rd6089];
	mul.wide.u32 	%rd6090, %r4504, 4;
	add.s64 	%rd6091, %rd5465, %rd6090;
	ld.shared.u32 	%r4505, [%rd6091];
	xor.b32  	%r4506, %r4502, %r4505;
	and.b32  	%r4507, %r4446, 255;
	mul.wide.u32 	%rd6092, %r4507, 4;
	add.s64 	%rd6093, %rd5433, %rd6092;
	ld.shared.u8 	%r4508, [%rd6093];
	mul.wide.u32 	%rd6094, %r4508, 4;
	add.s64 	%rd6095, %rd5470, %rd6094;
	ld.shared.u32 	%r4509, [%rd6095];
	xor.b32  	%r4510, %r4506, %r4509;
	ld.local.v4.u32 	{%r4511, %r4512, %r4513, %r4514}, [%rd10079+48];
	shr.u32 	%r4516, %r4511, 24;
	mul.wide.u32 	%rd6096, %r4516, 4;
	add.s64 	%rd6097, %rd5433, %rd6096;
	ld.shared.u8 	%r4517, [%rd6097];
	mul.wide.u32 	%rd6098, %r4517, 4;
	add.s64 	%rd6099, %rd5455, %rd6098;
	bfe.u32 	%r4518, %r4511, 16, 8;
	mul.wide.u32 	%rd6100, %r4518, 4;
	add.s64 	%rd6101, %rd5433, %rd6100;
	ld.shared.u8 	%r4519, [%rd6101];
	mul.wide.u32 	%rd6102, %r4519, 4;
	add.s64 	%rd6103, %rd5460, %rd6102;
	ld.shared.u32 	%r4520, [%rd6103];
	ld.shared.u32 	%r4521, [%rd6099];
	xor.b32  	%r4522, %r4520, %r4521;
	bfe.u32 	%r4523, %r4511, 8, 8;
	mul.wide.u32 	%rd6104, %r4523, 4;
	add.s64 	%rd6105, %rd5433, %rd6104;
	ld.shared.u8 	%r4524, [%rd6105];
	mul.wide.u32 	%rd6106, %r4524, 4;
	add.s64 	%rd6107, %rd5465, %rd6106;
	ld.shared.u32 	%r4525, [%rd6107];
	xor.b32  	%r4526, %r4522, %r4525;
	and.b32  	%r4527, %r4511, 255;
	mul.wide.u32 	%rd6108, %r4527, 4;
	add.s64 	%rd6109, %rd5433, %rd6108;
	ld.shared.u8 	%r4528, [%rd6109];
	mul.wide.u32 	%rd6110, %r4528, 4;
	add.s64 	%rd6111, %rd5470, %rd6110;
	ld.shared.u32 	%r4529, [%rd6111];
	xor.b32  	%r4530, %r4526, %r4529;
	shr.u32 	%r4532, %r4512, 24;
	mul.wide.u32 	%rd6112, %r4532, 4;
	add.s64 	%rd6113, %rd5433, %rd6112;
	ld.shared.u8 	%r4533, [%rd6113];
	mul.wide.u32 	%rd6114, %r4533, 4;
	add.s64 	%rd6115, %rd5455, %rd6114;
	bfe.u32 	%r4534, %r4512, 16, 8;
	mul.wide.u32 	%rd6116, %r4534, 4;
	add.s64 	%rd6117, %rd5433, %rd6116;
	ld.shared.u8 	%r4535, [%rd6117];
	mul.wide.u32 	%rd6118, %r4535, 4;
	add.s64 	%rd6119, %rd5460, %rd6118;
	ld.shared.u32 	%r4536, [%rd6119];
	ld.shared.u32 	%r4537, [%rd6115];
	xor.b32  	%r4538, %r4536, %r4537;
	bfe.u32 	%r4539, %r4512, 8, 8;
	mul.wide.u32 	%rd6120, %r4539, 4;
	add.s64 	%rd6121, %rd5433, %rd6120;
	ld.shared.u8 	%r4540, [%rd6121];
	mul.wide.u32 	%rd6122, %r4540, 4;
	add.s64 	%rd6123, %rd5465, %rd6122;
	ld.shared.u32 	%r4541, [%rd6123];
	xor.b32  	%r4542, %r4538, %r4541;
	and.b32  	%r4543, %r4512, 255;
	mul.wide.u32 	%rd6124, %r4543, 4;
	add.s64 	%rd6125, %rd5433, %rd6124;
	ld.shared.u8 	%r4544, [%rd6125];
	mul.wide.u32 	%rd6126, %r4544, 4;
	add.s64 	%rd6127, %rd5470, %rd6126;
	ld.shared.u32 	%r4545, [%rd6127];
	xor.b32  	%r4546, %r4542, %r4545;
	shr.u32 	%r4548, %r4513, 24;
	mul.wide.u32 	%rd6128, %r4548, 4;
	add.s64 	%rd6129, %rd5433, %rd6128;
	ld.shared.u8 	%r4549, [%rd6129];
	mul.wide.u32 	%rd6130, %r4549, 4;
	add.s64 	%rd6131, %rd5455, %rd6130;
	bfe.u32 	%r4550, %r4513, 16, 8;
	mul.wide.u32 	%rd6132, %r4550, 4;
	add.s64 	%rd6133, %rd5433, %rd6132;
	ld.shared.u8 	%r4551, [%rd6133];
	mul.wide.u32 	%rd6134, %r4551, 4;
	add.s64 	%rd6135, %rd5460, %rd6134;
	ld.shared.u32 	%r4552, [%rd6135];
	ld.shared.u32 	%r4553, [%rd6131];
	xor.b32  	%r4554, %r4552, %r4553;
	bfe.u32 	%r4555, %r4513, 8, 8;
	mul.wide.u32 	%rd6136, %r4555, 4;
	add.s64 	%rd6137, %rd5433, %rd6136;
	ld.shared.u8 	%r4556, [%rd6137];
	mul.wide.u32 	%rd6138, %r4556, 4;
	add.s64 	%rd6139, %rd5465, %rd6138;
	ld.shared.u32 	%r4557, [%rd6139];
	xor.b32  	%r4558, %r4554, %r4557;
	and.b32  	%r4559, %r4513, 255;
	mul.wide.u32 	%rd6140, %r4559, 4;
	add.s64 	%rd6141, %rd5433, %rd6140;
	ld.shared.u8 	%r4560, [%rd6141];
	mul.wide.u32 	%rd6142, %r4560, 4;
	add.s64 	%rd6143, %rd5470, %rd6142;
	ld.shared.u32 	%r4561, [%rd6143];
	xor.b32  	%r4562, %r4558, %r4561;
	shr.u32 	%r4564, %r4514, 24;
	mul.wide.u32 	%rd6144, %r4564, 4;
	add.s64 	%rd6145, %rd5433, %rd6144;
	ld.shared.u8 	%r4565, [%rd6145];
	mul.wide.u32 	%rd6146, %r4565, 4;
	add.s64 	%rd6147, %rd5455, %rd6146;
	bfe.u32 	%r4566, %r4514, 16, 8;
	mul.wide.u32 	%rd6148, %r4566, 4;
	add.s64 	%rd6149, %rd5433, %rd6148;
	ld.shared.u8 	%r4567, [%rd6149];
	mul.wide.u32 	%rd6150, %r4567, 4;
	add.s64 	%rd6151, %rd5460, %rd6150;
	ld.shared.u32 	%r4568, [%rd6151];
	ld.shared.u32 	%r4569, [%rd6147];
	xor.b32  	%r4570, %r4568, %r4569;
	bfe.u32 	%r4571, %r4514, 8, 8;
	mul.wide.u32 	%rd6152, %r4571, 4;
	add.s64 	%rd6153, %rd5433, %rd6152;
	ld.shared.u8 	%r4572, [%rd6153];
	mul.wide.u32 	%rd6154, %r4572, 4;
	add.s64 	%rd6155, %rd5465, %rd6154;
	ld.shared.u32 	%r4573, [%rd6155];
	xor.b32  	%r4574, %r4570, %r4573;
	and.b32  	%r4575, %r4514, 255;
	mul.wide.u32 	%rd6156, %r4575, 4;
	add.s64 	%rd6157, %rd5433, %rd6156;
	ld.shared.u8 	%r4576, [%rd6157];
	mul.wide.u32 	%rd6158, %r4576, 4;
	add.s64 	%rd6159, %rd5470, %rd6158;
	ld.shared.u32 	%r4577, [%rd6159];
	xor.b32  	%r4578, %r4574, %r4577;
	ld.local.v4.u32 	{%r4579, %r4580, %r4581, %r4582}, [%rd10079+32];
	shr.u32 	%r4584, %r4579, 24;
	mul.wide.u32 	%rd6160, %r4584, 4;
	add.s64 	%rd6161, %rd5433, %rd6160;
	ld.shared.u8 	%r4585, [%rd6161];
	mul.wide.u32 	%rd6162, %r4585, 4;
	add.s64 	%rd6163, %rd5455, %rd6162;
	bfe.u32 	%r4586, %r4579, 16, 8;
	mul.wide.u32 	%rd6164, %r4586, 4;
	add.s64 	%rd6165, %rd5433, %rd6164;
	ld.shared.u8 	%r4587, [%rd6165];
	mul.wide.u32 	%rd6166, %r4587, 4;
	add.s64 	%rd6167, %rd5460, %rd6166;
	ld.shared.u32 	%r4588, [%rd6167];
	ld.shared.u32 	%r4589, [%rd6163];
	xor.b32  	%r4590, %r4588, %r4589;
	bfe.u32 	%r4591, %r4579, 8, 8;
	mul.wide.u32 	%rd6168, %r4591, 4;
	add.s64 	%rd6169, %rd5433, %rd6168;
	ld.shared.u8 	%r4592, [%rd6169];
	mul.wide.u32 	%rd6170, %r4592, 4;
	add.s64 	%rd6171, %rd5465, %rd6170;
	ld.shared.u32 	%r4593, [%rd6171];
	xor.b32  	%r4594, %r4590, %r4593;
	and.b32  	%r4595, %r4579, 255;
	mul.wide.u32 	%rd6172, %r4595, 4;
	add.s64 	%rd6173, %rd5433, %rd6172;
	ld.shared.u8 	%r4596, [%rd6173];
	mul.wide.u32 	%rd6174, %r4596, 4;
	add.s64 	%rd6175, %rd5470, %rd6174;
	ld.shared.u32 	%r4597, [%rd6175];
	xor.b32  	%r4598, %r4594, %r4597;
	shr.u32 	%r4600, %r4580, 24;
	mul.wide.u32 	%rd6176, %r4600, 4;
	add.s64 	%rd6177, %rd5433, %rd6176;
	ld.shared.u8 	%r4601, [%rd6177];
	mul.wide.u32 	%rd6178, %r4601, 4;
	add.s64 	%rd6179, %rd5455, %rd6178;
	bfe.u32 	%r4602, %r4580, 16, 8;
	mul.wide.u32 	%rd6180, %r4602, 4;
	add.s64 	%rd6181, %rd5433, %rd6180;
	ld.shared.u8 	%r4603, [%rd6181];
	mul.wide.u32 	%rd6182, %r4603, 4;
	add.s64 	%rd6183, %rd5460, %rd6182;
	ld.shared.u32 	%r4604, [%rd6183];
	ld.shared.u32 	%r4605, [%rd6179];
	xor.b32  	%r4606, %r4604, %r4605;
	bfe.u32 	%r4607, %r4580, 8, 8;
	mul.wide.u32 	%rd6184, %r4607, 4;
	add.s64 	%rd6185, %rd5433, %rd6184;
	ld.shared.u8 	%r4608, [%rd6185];
	mul.wide.u32 	%rd6186, %r4608, 4;
	add.s64 	%rd6187, %rd5465, %rd6186;
	ld.shared.u32 	%r4609, [%rd6187];
	xor.b32  	%r4610, %r4606, %r4609;
	and.b32  	%r4611, %r4580, 255;
	mul.wide.u32 	%rd6188, %r4611, 4;
	add.s64 	%rd6189, %rd5433, %rd6188;
	ld.shared.u8 	%r4612, [%rd6189];
	mul.wide.u32 	%rd6190, %r4612, 4;
	add.s64 	%rd6191, %rd5470, %rd6190;
	ld.shared.u32 	%r4613, [%rd6191];
	xor.b32  	%r4614, %r4610, %r4613;
	shr.u32 	%r4616, %r4581, 24;
	mul.wide.u32 	%rd6192, %r4616, 4;
	add.s64 	%rd6193, %rd5433, %rd6192;
	ld.shared.u8 	%r4617, [%rd6193];
	mul.wide.u32 	%rd6194, %r4617, 4;
	add.s64 	%rd6195, %rd5455, %rd6194;
	bfe.u32 	%r4618, %r4581, 16, 8;
	mul.wide.u32 	%rd6196, %r4618, 4;
	add.s64 	%rd6197, %rd5433, %rd6196;
	ld.shared.u8 	%r4619, [%rd6197];
	mul.wide.u32 	%rd6198, %r4619, 4;
	add.s64 	%rd6199, %rd5460, %rd6198;
	ld.shared.u32 	%r4620, [%rd6199];
	ld.shared.u32 	%r4621, [%rd6195];
	xor.b32  	%r4622, %r4620, %r4621;
	bfe.u32 	%r4623, %r4581, 8, 8;
	mul.wide.u32 	%rd6200, %r4623, 4;
	add.s64 	%rd6201, %rd5433, %rd6200;
	ld.shared.u8 	%r4624, [%rd6201];
	mul.wide.u32 	%rd6202, %r4624, 4;
	add.s64 	%rd6203, %rd5465, %rd6202;
	ld.shared.u32 	%r4625, [%rd6203];
	xor.b32  	%r4626, %r4622, %r4625;
	and.b32  	%r4627, %r4581, 255;
	mul.wide.u32 	%rd6204, %r4627, 4;
	add.s64 	%rd6205, %rd5433, %rd6204;
	ld.shared.u8 	%r4628, [%rd6205];
	mul.wide.u32 	%rd6206, %r4628, 4;
	add.s64 	%rd6207, %rd5470, %rd6206;
	ld.shared.u32 	%r4629, [%rd6207];
	xor.b32  	%r4630, %r4626, %r4629;
	shr.u32 	%r4632, %r4582, 24;
	mul.wide.u32 	%rd6208, %r4632, 4;
	add.s64 	%rd6209, %rd5433, %rd6208;
	ld.shared.u8 	%r4633, [%rd6209];
	mul.wide.u32 	%rd6210, %r4633, 4;
	add.s64 	%rd6211, %rd5455, %rd6210;
	bfe.u32 	%r4634, %r4582, 16, 8;
	mul.wide.u32 	%rd6212, %r4634, 4;
	add.s64 	%rd6213, %rd5433, %rd6212;
	ld.shared.u8 	%r4635, [%rd6213];
	mul.wide.u32 	%rd6214, %r4635, 4;
	add.s64 	%rd6215, %rd5460, %rd6214;
	ld.shared.u32 	%r4636, [%rd6215];
	ld.shared.u32 	%r4637, [%rd6211];
	xor.b32  	%r4638, %r4636, %r4637;
	bfe.u32 	%r4639, %r4582, 8, 8;
	mul.wide.u32 	%rd6216, %r4639, 4;
	add.s64 	%rd6217, %rd5433, %rd6216;
	ld.shared.u8 	%r4640, [%rd6217];
	mul.wide.u32 	%rd6218, %r4640, 4;
	add.s64 	%rd6219, %rd5465, %rd6218;
	ld.shared.u32 	%r4641, [%rd6219];
	xor.b32  	%r4642, %r4638, %r4641;
	and.b32  	%r4643, %r4582, 255;
	mul.wide.u32 	%rd6220, %r4643, 4;
	add.s64 	%rd6221, %rd5433, %rd6220;
	ld.shared.u8 	%r4644, [%rd6221];
	mul.wide.u32 	%rd6222, %r4644, 4;
	add.s64 	%rd6223, %rd5470, %rd6222;
	ld.shared.u32 	%r4645, [%rd6223];
	xor.b32  	%r4646, %r4642, %r4645;
	ld.local.v4.u32 	{%r4647, %r4648, %r4649, %r4650}, [%rd12+12];
	shr.u32 	%r4652, %r4647, 24;
	mul.wide.u32 	%rd6224, %r4652, 4;
	add.s64 	%rd6225, %rd5433, %rd6224;
	ld.shared.u8 	%r4653, [%rd6225];
	mul.wide.u32 	%rd6226, %r4653, 4;
	add.s64 	%rd6227, %rd5455, %rd6226;
	bfe.u32 	%r4654, %r4647, 16, 8;
	mul.wide.u32 	%rd6228, %r4654, 4;
	add.s64 	%rd6229, %rd5433, %rd6228;
	ld.shared.u8 	%r4655, [%rd6229];
	mul.wide.u32 	%rd6230, %r4655, 4;
	add.s64 	%rd6231, %rd5460, %rd6230;
	ld.shared.u32 	%r4656, [%rd6231];
	ld.shared.u32 	%r4657, [%rd6227];
	xor.b32  	%r4658, %r4656, %r4657;
	bfe.u32 	%r4659, %r4647, 8, 8;
	mul.wide.u32 	%rd6232, %r4659, 4;
	add.s64 	%rd6233, %rd5433, %rd6232;
	ld.shared.u8 	%r4660, [%rd6233];
	mul.wide.u32 	%rd6234, %r4660, 4;
	add.s64 	%rd6235, %rd5465, %rd6234;
	ld.shared.u32 	%r4661, [%rd6235];
	xor.b32  	%r4662, %r4658, %r4661;
	and.b32  	%r4663, %r4647, 255;
	mul.wide.u32 	%rd6236, %r4663, 4;
	add.s64 	%rd6237, %rd5433, %rd6236;
	ld.shared.u8 	%r4664, [%rd6237];
	mul.wide.u32 	%rd6238, %r4664, 4;
	add.s64 	%rd6239, %rd5470, %rd6238;
	ld.shared.u32 	%r4665, [%rd6239];
	xor.b32  	%r4666, %r4662, %r4665;
	shr.u32 	%r4668, %r4648, 24;
	mul.wide.u32 	%rd6240, %r4668, 4;
	add.s64 	%rd6241, %rd5433, %rd6240;
	ld.shared.u8 	%r4669, [%rd6241];
	mul.wide.u32 	%rd6242, %r4669, 4;
	add.s64 	%rd6243, %rd5455, %rd6242;
	bfe.u32 	%r4670, %r4648, 16, 8;
	mul.wide.u32 	%rd6244, %r4670, 4;
	add.s64 	%rd6245, %rd5433, %rd6244;
	ld.shared.u8 	%r4671, [%rd6245];
	mul.wide.u32 	%rd6246, %r4671, 4;
	add.s64 	%rd6247, %rd5460, %rd6246;
	ld.shared.u32 	%r4672, [%rd6247];
	ld.shared.u32 	%r4673, [%rd6243];
	xor.b32  	%r4674, %r4672, %r4673;
	bfe.u32 	%r4675, %r4648, 8, 8;
	mul.wide.u32 	%rd6248, %r4675, 4;
	add.s64 	%rd6249, %rd5433, %rd6248;
	ld.shared.u8 	%r4676, [%rd6249];
	mul.wide.u32 	%rd6250, %r4676, 4;
	add.s64 	%rd6251, %rd5465, %rd6250;
	ld.shared.u32 	%r4677, [%rd6251];
	xor.b32  	%r4678, %r4674, %r4677;
	and.b32  	%r4679, %r4648, 255;
	mul.wide.u32 	%rd6252, %r4679, 4;
	add.s64 	%rd6253, %rd5433, %rd6252;
	ld.shared.u8 	%r4680, [%rd6253];
	mul.wide.u32 	%rd6254, %r4680, 4;
	add.s64 	%rd6255, %rd5470, %rd6254;
	ld.shared.u32 	%r4681, [%rd6255];
	xor.b32  	%r4682, %r4678, %r4681;
	shr.u32 	%r4684, %r4649, 24;
	mul.wide.u32 	%rd6256, %r4684, 4;
	add.s64 	%rd6257, %rd5433, %rd6256;
	ld.shared.u8 	%r4685, [%rd6257];
	mul.wide.u32 	%rd6258, %r4685, 4;
	add.s64 	%rd6259, %rd5455, %rd6258;
	bfe.u32 	%r4686, %r4649, 16, 8;
	mul.wide.u32 	%rd6260, %r4686, 4;
	add.s64 	%rd6261, %rd5433, %rd6260;
	ld.shared.u8 	%r4687, [%rd6261];
	mul.wide.u32 	%rd6262, %r4687, 4;
	add.s64 	%rd6263, %rd5460, %rd6262;
	ld.shared.u32 	%r4688, [%rd6263];
	ld.shared.u32 	%r4689, [%rd6259];
	xor.b32  	%r4690, %r4688, %r4689;
	bfe.u32 	%r4691, %r4649, 8, 8;
	mul.wide.u32 	%rd6264, %r4691, 4;
	add.s64 	%rd6265, %rd5433, %rd6264;
	ld.shared.u8 	%r4692, [%rd6265];
	mul.wide.u32 	%rd6266, %r4692, 4;
	add.s64 	%rd6267, %rd5465, %rd6266;
	ld.shared.u32 	%r4693, [%rd6267];
	xor.b32  	%r4694, %r4690, %r4693;
	and.b32  	%r4695, %r4649, 255;
	mul.wide.u32 	%rd6268, %r4695, 4;
	add.s64 	%rd6269, %rd5433, %rd6268;
	ld.shared.u8 	%r4696, [%rd6269];
	mul.wide.u32 	%rd6270, %r4696, 4;
	add.s64 	%rd6271, %rd5470, %rd6270;
	ld.shared.u32 	%r4697, [%rd6271];
	xor.b32  	%r4698, %r4694, %r4697;
	shr.u32 	%r4700, %r4650, 24;
	mul.wide.u32 	%rd6272, %r4700, 4;
	add.s64 	%rd6273, %rd5433, %rd6272;
	ld.shared.u8 	%r4701, [%rd6273];
	mul.wide.u32 	%rd6274, %r4701, 4;
	add.s64 	%rd6275, %rd5455, %rd6274;
	bfe.u32 	%r4702, %r4650, 16, 8;
	mul.wide.u32 	%rd6276, %r4702, 4;
	add.s64 	%rd6277, %rd5433, %rd6276;
	ld.shared.u8 	%r4703, [%rd6277];
	mul.wide.u32 	%rd6278, %r4703, 4;
	add.s64 	%rd6279, %rd5460, %rd6278;
	ld.shared.u32 	%r4704, [%rd6279];
	ld.shared.u32 	%r4705, [%rd6275];
	xor.b32  	%r4706, %r4704, %r4705;
	bfe.u32 	%r4707, %r4650, 8, 8;
	mul.wide.u32 	%rd6280, %r4707, 4;
	add.s64 	%rd6281, %rd5433, %rd6280;
	ld.shared.u8 	%r4708, [%rd6281];
	mul.wide.u32 	%rd6282, %r4708, 4;
	add.s64 	%rd6283, %rd5465, %rd6282;
	ld.shared.u32 	%r4709, [%rd6283];
	xor.b32  	%r4710, %r4706, %r4709;
	and.b32  	%r4711, %r4650, 255;
	mul.wide.u32 	%rd6284, %r4711, 4;
	add.s64 	%rd6285, %rd5433, %rd6284;
	ld.shared.u8 	%r4712, [%rd6285];
	mul.wide.u32 	%rd6286, %r4712, 4;
	add.s64 	%rd6287, %rd5470, %rd6286;
	ld.shared.u32 	%r4713, [%rd6287];
	xor.b32  	%r4714, %r4710, %r4713;
	ld.local.v4.u32 	{%r4715, %r4716, %r4717, %r4718}, [%rd10079+224];
	xor.b32  	%r4720, %r4715, %r6;
	xor.b32  	%r4722, %r4716, %r7;
	xor.b32  	%r4724, %r4717, %r8;
	xor.b32  	%r4726, %r4718, %r9;
	shr.u32 	%r4727, %r4720, 24;
	mul.wide.u32 	%rd6288, %r4727, 4;
	add.s64 	%rd6289, %rd5455, %rd6288;
	bfe.u32 	%r4728, %r4726, 16, 8;
	mul.wide.u32 	%rd6290, %r4728, 4;
	add.s64 	%rd6291, %rd5460, %rd6290;
	ld.shared.u32 	%r4729, [%rd6291];
	ld.shared.u32 	%r4730, [%rd6289];
	xor.b32  	%r4731, %r4729, %r4730;
	bfe.u32 	%r4732, %r4724, 8, 8;
	mul.wide.u32 	%rd6292, %r4732, 4;
	add.s64 	%rd6293, %rd5465, %rd6292;
	ld.shared.u32 	%r4733, [%rd6293];
	xor.b32  	%r4734, %r4731, %r4733;
	and.b32  	%r4735, %r4722, 255;
	mul.wide.u32 	%rd6294, %r4735, 4;
	add.s64 	%rd6295, %rd5470, %rd6294;
	ld.shared.u32 	%r4736, [%rd6295];
	xor.b32  	%r4737, %r4734, %r4736;
	xor.b32  	%r4738, %r4737, %r3850;
	shr.u32 	%r4739, %r4722, 24;
	mul.wide.u32 	%rd6296, %r4739, 4;
	add.s64 	%rd6297, %rd5455, %rd6296;
	bfe.u32 	%r4740, %r4720, 16, 8;
	mul.wide.u32 	%rd6298, %r4740, 4;
	add.s64 	%rd6299, %rd5460, %rd6298;
	ld.shared.u32 	%r4741, [%rd6299];
	ld.shared.u32 	%r4742, [%rd6297];
	xor.b32  	%r4743, %r4741, %r4742;
	bfe.u32 	%r4744, %r4726, 8, 8;
	mul.wide.u32 	%rd6300, %r4744, 4;
	add.s64 	%rd6301, %rd5465, %rd6300;
	ld.shared.u32 	%r4745, [%rd6301];
	xor.b32  	%r4746, %r4743, %r4745;
	and.b32  	%r4747, %r4724, 255;
	mul.wide.u32 	%rd6302, %r4747, 4;
	add.s64 	%rd6303, %rd5470, %rd6302;
	ld.shared.u32 	%r4748, [%rd6303];
	xor.b32  	%r4749, %r4746, %r4748;
	xor.b32  	%r4750, %r4749, %r3866;
	shr.u32 	%r4751, %r4724, 24;
	mul.wide.u32 	%rd6304, %r4751, 4;
	add.s64 	%rd6305, %rd5455, %rd6304;
	bfe.u32 	%r4752, %r4722, 16, 8;
	mul.wide.u32 	%rd6306, %r4752, 4;
	add.s64 	%rd6307, %rd5460, %rd6306;
	ld.shared.u32 	%r4753, [%rd6307];
	ld.shared.u32 	%r4754, [%rd6305];
	xor.b32  	%r4755, %r4753, %r4754;
	bfe.u32 	%r4756, %r4720, 8, 8;
	mul.wide.u32 	%rd6308, %r4756, 4;
	add.s64 	%rd6309, %rd5465, %rd6308;
	ld.shared.u32 	%r4757, [%rd6309];
	xor.b32  	%r4758, %r4755, %r4757;
	and.b32  	%r4759, %r4726, 255;
	mul.wide.u32 	%rd6310, %r4759, 4;
	add.s64 	%rd6311, %rd5470, %rd6310;
	ld.shared.u32 	%r4760, [%rd6311];
	xor.b32  	%r4761, %r4758, %r4760;
	xor.b32  	%r4762, %r4761, %r3882;
	shr.u32 	%r4763, %r4726, 24;
	mul.wide.u32 	%rd6312, %r4763, 4;
	add.s64 	%rd6313, %rd5455, %rd6312;
	bfe.u32 	%r4764, %r4724, 16, 8;
	mul.wide.u32 	%rd6314, %r4764, 4;
	add.s64 	%rd6315, %rd5460, %rd6314;
	ld.shared.u32 	%r4765, [%rd6315];
	ld.shared.u32 	%r4766, [%rd6313];
	xor.b32  	%r4767, %r4765, %r4766;
	bfe.u32 	%r4768, %r4722, 8, 8;
	mul.wide.u32 	%rd6316, %r4768, 4;
	add.s64 	%rd6317, %rd5465, %rd6316;
	ld.shared.u32 	%r4769, [%rd6317];
	xor.b32  	%r4770, %r4767, %r4769;
	and.b32  	%r4771, %r4720, 255;
	mul.wide.u32 	%rd6318, %r4771, 4;
	add.s64 	%rd6319, %rd5470, %rd6318;
	ld.shared.u32 	%r4772, [%rd6319];
	xor.b32  	%r4773, %r4770, %r4772;
	xor.b32  	%r4774, %r4773, %r3898;
	shr.u32 	%r4775, %r4738, 24;
	mul.wide.u32 	%rd6320, %r4775, 4;
	add.s64 	%rd6321, %rd5455, %rd6320;
	bfe.u32 	%r4776, %r4774, 16, 8;
	mul.wide.u32 	%rd6322, %r4776, 4;
	add.s64 	%rd6323, %rd5460, %rd6322;
	ld.shared.u32 	%r4777, [%rd6323];
	ld.shared.u32 	%r4778, [%rd6321];
	xor.b32  	%r4779, %r4777, %r4778;
	bfe.u32 	%r4780, %r4762, 8, 8;
	mul.wide.u32 	%rd6324, %r4780, 4;
	add.s64 	%rd6325, %rd5465, %rd6324;
	ld.shared.u32 	%r4781, [%rd6325];
	xor.b32  	%r4782, %r4779, %r4781;
	and.b32  	%r4783, %r4750, 255;
	mul.wide.u32 	%rd6326, %r4783, 4;
	add.s64 	%rd6327, %rd5470, %rd6326;
	ld.shared.u32 	%r4784, [%rd6327];
	xor.b32  	%r4785, %r4782, %r4784;
	xor.b32  	%r4786, %r4785, %r3918;
	shr.u32 	%r4787, %r4750, 24;
	mul.wide.u32 	%rd6328, %r4787, 4;
	add.s64 	%rd6329, %rd5455, %rd6328;
	bfe.u32 	%r4788, %r4738, 16, 8;
	mul.wide.u32 	%rd6330, %r4788, 4;
	add.s64 	%rd6331, %rd5460, %rd6330;
	ld.shared.u32 	%r4789, [%rd6331];
	ld.shared.u32 	%r4790, [%rd6329];
	xor.b32  	%r4791, %r4789, %r4790;
	bfe.u32 	%r4792, %r4774, 8, 8;
	mul.wide.u32 	%rd6332, %r4792, 4;
	add.s64 	%rd6333, %rd5465, %rd6332;
	ld.shared.u32 	%r4793, [%rd6333];
	xor.b32  	%r4794, %r4791, %r4793;
	and.b32  	%r4795, %r4762, 255;
	mul.wide.u32 	%rd6334, %r4795, 4;
	add.s64 	%rd6335, %rd5470, %rd6334;
	ld.shared.u32 	%r4796, [%rd6335];
	xor.b32  	%r4797, %r4794, %r4796;
	xor.b32  	%r4798, %r4797, %r3934;
	shr.u32 	%r4799, %r4762, 24;
	mul.wide.u32 	%rd6336, %r4799, 4;
	add.s64 	%rd6337, %rd5455, %rd6336;
	bfe.u32 	%r4800, %r4750, 16, 8;
	mul.wide.u32 	%rd6338, %r4800, 4;
	add.s64 	%rd6339, %rd5460, %rd6338;
	ld.shared.u32 	%r4801, [%rd6339];
	ld.shared.u32 	%r4802, [%rd6337];
	xor.b32  	%r4803, %r4801, %r4802;
	bfe.u32 	%r4804, %r4738, 8, 8;
	mul.wide.u32 	%rd6340, %r4804, 4;
	add.s64 	%rd6341, %rd5465, %rd6340;
	ld.shared.u32 	%r4805, [%rd6341];
	xor.b32  	%r4806, %r4803, %r4805;
	and.b32  	%r4807, %r4774, 255;
	mul.wide.u32 	%rd6342, %r4807, 4;
	add.s64 	%rd6343, %rd5470, %rd6342;
	ld.shared.u32 	%r4808, [%rd6343];
	xor.b32  	%r4809, %r4806, %r4808;
	xor.b32  	%r4810, %r4809, %r3950;
	shr.u32 	%r4811, %r4774, 24;
	mul.wide.u32 	%rd6344, %r4811, 4;
	add.s64 	%rd6345, %rd5455, %rd6344;
	bfe.u32 	%r4812, %r4762, 16, 8;
	mul.wide.u32 	%rd6346, %r4812, 4;
	add.s64 	%rd6347, %rd5460, %rd6346;
	ld.shared.u32 	%r4813, [%rd6347];
	ld.shared.u32 	%r4814, [%rd6345];
	xor.b32  	%r4815, %r4813, %r4814;
	bfe.u32 	%r4816, %r4750, 8, 8;
	mul.wide.u32 	%rd6348, %r4816, 4;
	add.s64 	%rd6349, %rd5465, %rd6348;
	ld.shared.u32 	%r4817, [%rd6349];
	xor.b32  	%r4818, %r4815, %r4817;
	and.b32  	%r4819, %r4738, 255;
	mul.wide.u32 	%rd6350, %r4819, 4;
	add.s64 	%rd6351, %rd5470, %rd6350;
	ld.shared.u32 	%r4820, [%rd6351];
	xor.b32  	%r4821, %r4818, %r4820;
	xor.b32  	%r4822, %r4821, %r3966;
	shr.u32 	%r4823, %r4786, 24;
	mul.wide.u32 	%rd6352, %r4823, 4;
	add.s64 	%rd6353, %rd5455, %rd6352;
	bfe.u32 	%r4824, %r4822, 16, 8;
	mul.wide.u32 	%rd6354, %r4824, 4;
	add.s64 	%rd6355, %rd5460, %rd6354;
	ld.shared.u32 	%r4825, [%rd6355];
	ld.shared.u32 	%r4826, [%rd6353];
	xor.b32  	%r4827, %r4825, %r4826;
	bfe.u32 	%r4828, %r4810, 8, 8;
	mul.wide.u32 	%rd6356, %r4828, 4;
	add.s64 	%rd6357, %rd5465, %rd6356;
	ld.shared.u32 	%r4829, [%rd6357];
	xor.b32  	%r4830, %r4827, %r4829;
	and.b32  	%r4831, %r4798, 255;
	mul.wide.u32 	%rd6358, %r4831, 4;
	add.s64 	%rd6359, %rd5470, %rd6358;
	ld.shared.u32 	%r4832, [%rd6359];
	xor.b32  	%r4833, %r4830, %r4832;
	xor.b32  	%r4834, %r4833, %r3986;
	shr.u32 	%r4835, %r4798, 24;
	mul.wide.u32 	%rd6360, %r4835, 4;
	add.s64 	%rd6361, %rd5455, %rd6360;
	bfe.u32 	%r4836, %r4786, 16, 8;
	mul.wide.u32 	%rd6362, %r4836, 4;
	add.s64 	%rd6363, %rd5460, %rd6362;
	ld.shared.u32 	%r4837, [%rd6363];
	ld.shared.u32 	%r4838, [%rd6361];
	xor.b32  	%r4839, %r4837, %r4838;
	bfe.u32 	%r4840, %r4822, 8, 8;
	mul.wide.u32 	%rd6364, %r4840, 4;
	add.s64 	%rd6365, %rd5465, %rd6364;
	ld.shared.u32 	%r4841, [%rd6365];
	xor.b32  	%r4842, %r4839, %r4841;
	and.b32  	%r4843, %r4810, 255;
	mul.wide.u32 	%rd6366, %r4843, 4;
	add.s64 	%rd6367, %rd5470, %rd6366;
	ld.shared.u32 	%r4844, [%rd6367];
	xor.b32  	%r4845, %r4842, %r4844;
	xor.b32  	%r4846, %r4845, %r4002;
	shr.u32 	%r4847, %r4810, 24;
	mul.wide.u32 	%rd6368, %r4847, 4;
	add.s64 	%rd6369, %rd5455, %rd6368;
	bfe.u32 	%r4848, %r4798, 16, 8;
	mul.wide.u32 	%rd6370, %r4848, 4;
	add.s64 	%rd6371, %rd5460, %rd6370;
	ld.shared.u32 	%r4849, [%rd6371];
	ld.shared.u32 	%r4850, [%rd6369];
	xor.b32  	%r4851, %r4849, %r4850;
	bfe.u32 	%r4852, %r4786, 8, 8;
	mul.wide.u32 	%rd6372, %r4852, 4;
	add.s64 	%rd6373, %rd5465, %rd6372;
	ld.shared.u32 	%r4853, [%rd6373];
	xor.b32  	%r4854, %r4851, %r4853;
	and.b32  	%r4855, %r4822, 255;
	mul.wide.u32 	%rd6374, %r4855, 4;
	add.s64 	%rd6375, %rd5470, %rd6374;
	ld.shared.u32 	%r4856, [%rd6375];
	xor.b32  	%r4857, %r4854, %r4856;
	xor.b32  	%r4858, %r4857, %r4018;
	shr.u32 	%r4859, %r4822, 24;
	mul.wide.u32 	%rd6376, %r4859, 4;
	add.s64 	%rd6377, %rd5455, %rd6376;
	bfe.u32 	%r4860, %r4810, 16, 8;
	mul.wide.u32 	%rd6378, %r4860, 4;
	add.s64 	%rd6379, %rd5460, %rd6378;
	ld.shared.u32 	%r4861, [%rd6379];
	ld.shared.u32 	%r4862, [%rd6377];
	xor.b32  	%r4863, %r4861, %r4862;
	bfe.u32 	%r4864, %r4798, 8, 8;
	mul.wide.u32 	%rd6380, %r4864, 4;
	add.s64 	%rd6381, %rd5465, %rd6380;
	ld.shared.u32 	%r4865, [%rd6381];
	xor.b32  	%r4866, %r4863, %r4865;
	and.b32  	%r4867, %r4786, 255;
	mul.wide.u32 	%rd6382, %r4867, 4;
	add.s64 	%rd6383, %rd5470, %rd6382;
	ld.shared.u32 	%r4868, [%rd6383];
	xor.b32  	%r4869, %r4866, %r4868;
	xor.b32  	%r4870, %r4869, %r4034;
	shr.u32 	%r4871, %r4834, 24;
	mul.wide.u32 	%rd6384, %r4871, 4;
	add.s64 	%rd6385, %rd5455, %rd6384;
	bfe.u32 	%r4872, %r4870, 16, 8;
	mul.wide.u32 	%rd6386, %r4872, 4;
	add.s64 	%rd6387, %rd5460, %rd6386;
	ld.shared.u32 	%r4873, [%rd6387];
	ld.shared.u32 	%r4874, [%rd6385];
	xor.b32  	%r4875, %r4873, %r4874;
	bfe.u32 	%r4876, %r4858, 8, 8;
	mul.wide.u32 	%rd6388, %r4876, 4;
	add.s64 	%rd6389, %rd5465, %rd6388;
	ld.shared.u32 	%r4877, [%rd6389];
	xor.b32  	%r4878, %r4875, %r4877;
	and.b32  	%r4879, %r4846, 255;
	mul.wide.u32 	%rd6390, %r4879, 4;
	add.s64 	%rd6391, %rd5470, %rd6390;
	ld.shared.u32 	%r4880, [%rd6391];
	xor.b32  	%r4881, %r4878, %r4880;
	xor.b32  	%r4882, %r4881, %r4054;
	shr.u32 	%r4883, %r4846, 24;
	mul.wide.u32 	%rd6392, %r4883, 4;
	add.s64 	%rd6393, %rd5455, %rd6392;
	bfe.u32 	%r4884, %r4834, 16, 8;
	mul.wide.u32 	%rd6394, %r4884, 4;
	add.s64 	%rd6395, %rd5460, %rd6394;
	ld.shared.u32 	%r4885, [%rd6395];
	ld.shared.u32 	%r4886, [%rd6393];
	xor.b32  	%r4887, %r4885, %r4886;
	bfe.u32 	%r4888, %r4870, 8, 8;
	mul.wide.u32 	%rd6396, %r4888, 4;
	add.s64 	%rd6397, %rd5465, %rd6396;
	ld.shared.u32 	%r4889, [%rd6397];
	xor.b32  	%r4890, %r4887, %r4889;
	and.b32  	%r4891, %r4858, 255;
	mul.wide.u32 	%rd6398, %r4891, 4;
	add.s64 	%rd6399, %rd5470, %rd6398;
	ld.shared.u32 	%r4892, [%rd6399];
	xor.b32  	%r4893, %r4890, %r4892;
	xor.b32  	%r4894, %r4893, %r4070;
	shr.u32 	%r4895, %r4858, 24;
	mul.wide.u32 	%rd6400, %r4895, 4;
	add.s64 	%rd6401, %rd5455, %rd6400;
	bfe.u32 	%r4896, %r4846, 16, 8;
	mul.wide.u32 	%rd6402, %r4896, 4;
	add.s64 	%rd6403, %rd5460, %rd6402;
	ld.shared.u32 	%r4897, [%rd6403];
	ld.shared.u32 	%r4898, [%rd6401];
	xor.b32  	%r4899, %r4897, %r4898;
	bfe.u32 	%r4900, %r4834, 8, 8;
	mul.wide.u32 	%rd6404, %r4900, 4;
	add.s64 	%rd6405, %rd5465, %rd6404;
	ld.shared.u32 	%r4901, [%rd6405];
	xor.b32  	%r4902, %r4899, %r4901;
	and.b32  	%r4903, %r4870, 255;
	mul.wide.u32 	%rd6406, %r4903, 4;
	add.s64 	%rd6407, %rd5470, %rd6406;
	ld.shared.u32 	%r4904, [%rd6407];
	xor.b32  	%r4905, %r4902, %r4904;
	xor.b32  	%r4906, %r4905, %r4086;
	shr.u32 	%r4907, %r4870, 24;
	mul.wide.u32 	%rd6408, %r4907, 4;
	add.s64 	%rd6409, %rd5455, %rd6408;
	bfe.u32 	%r4908, %r4858, 16, 8;
	mul.wide.u32 	%rd6410, %r4908, 4;
	add.s64 	%rd6411, %rd5460, %rd6410;
	ld.shared.u32 	%r4909, [%rd6411];
	ld.shared.u32 	%r4910, [%rd6409];
	xor.b32  	%r4911, %r4909, %r4910;
	bfe.u32 	%r4912, %r4846, 8, 8;
	mul.wide.u32 	%rd6412, %r4912, 4;
	add.s64 	%rd6413, %rd5465, %rd6412;
	ld.shared.u32 	%r4913, [%rd6413];
	xor.b32  	%r4914, %r4911, %r4913;
	and.b32  	%r4915, %r4834, 255;
	mul.wide.u32 	%rd6414, %r4915, 4;
	add.s64 	%rd6415, %rd5470, %rd6414;
	ld.shared.u32 	%r4916, [%rd6415];
	xor.b32  	%r4917, %r4914, %r4916;
	xor.b32  	%r4918, %r4917, %r4102;
	shr.u32 	%r4919, %r4882, 24;
	mul.wide.u32 	%rd6416, %r4919, 4;
	add.s64 	%rd6417, %rd5455, %rd6416;
	bfe.u32 	%r4920, %r4918, 16, 8;
	mul.wide.u32 	%rd6418, %r4920, 4;
	add.s64 	%rd6419, %rd5460, %rd6418;
	ld.shared.u32 	%r4921, [%rd6419];
	ld.shared.u32 	%r4922, [%rd6417];
	xor.b32  	%r4923, %r4921, %r4922;
	bfe.u32 	%r4924, %r4906, 8, 8;
	mul.wide.u32 	%rd6420, %r4924, 4;
	add.s64 	%rd6421, %rd5465, %rd6420;
	ld.shared.u32 	%r4925, [%rd6421];
	xor.b32  	%r4926, %r4923, %r4925;
	and.b32  	%r4927, %r4894, 255;
	mul.wide.u32 	%rd6422, %r4927, 4;
	add.s64 	%rd6423, %rd5470, %rd6422;
	ld.shared.u32 	%r4928, [%rd6423];
	xor.b32  	%r4929, %r4926, %r4928;
	xor.b32  	%r4930, %r4929, %r4122;
	shr.u32 	%r4931, %r4894, 24;
	mul.wide.u32 	%rd6424, %r4931, 4;
	add.s64 	%rd6425, %rd5455, %rd6424;
	bfe.u32 	%r4932, %r4882, 16, 8;
	mul.wide.u32 	%rd6426, %r4932, 4;
	add.s64 	%rd6427, %rd5460, %rd6426;
	ld.shared.u32 	%r4933, [%rd6427];
	ld.shared.u32 	%r4934, [%rd6425];
	xor.b32  	%r4935, %r4933, %r4934;
	bfe.u32 	%r4936, %r4918, 8, 8;
	mul.wide.u32 	%rd6428, %r4936, 4;
	add.s64 	%rd6429, %rd5465, %rd6428;
	ld.shared.u32 	%r4937, [%rd6429];
	xor.b32  	%r4938, %r4935, %r4937;
	and.b32  	%r4939, %r4906, 255;
	mul.wide.u32 	%rd6430, %r4939, 4;
	add.s64 	%rd6431, %rd5470, %rd6430;
	ld.shared.u32 	%r4940, [%rd6431];
	xor.b32  	%r4941, %r4938, %r4940;
	xor.b32  	%r4942, %r4941, %r4138;
	shr.u32 	%r4943, %r4906, 24;
	mul.wide.u32 	%rd6432, %r4943, 4;
	add.s64 	%rd6433, %rd5455, %rd6432;
	bfe.u32 	%r4944, %r4894, 16, 8;
	mul.wide.u32 	%rd6434, %r4944, 4;
	add.s64 	%rd6435, %rd5460, %rd6434;
	ld.shared.u32 	%r4945, [%rd6435];
	ld.shared.u32 	%r4946, [%rd6433];
	xor.b32  	%r4947, %r4945, %r4946;
	bfe.u32 	%r4948, %r4882, 8, 8;
	mul.wide.u32 	%rd6436, %r4948, 4;
	add.s64 	%rd6437, %rd5465, %rd6436;
	ld.shared.u32 	%r4949, [%rd6437];
	xor.b32  	%r4950, %r4947, %r4949;
	and.b32  	%r4951, %r4918, 255;
	mul.wide.u32 	%rd6438, %r4951, 4;
	add.s64 	%rd6439, %rd5470, %rd6438;
	ld.shared.u32 	%r4952, [%rd6439];
	xor.b32  	%r4953, %r4950, %r4952;
	xor.b32  	%r4954, %r4953, %r4154;
	shr.u32 	%r4955, %r4918, 24;
	mul.wide.u32 	%rd6440, %r4955, 4;
	add.s64 	%rd6441, %rd5455, %rd6440;
	bfe.u32 	%r4956, %r4906, 16, 8;
	mul.wide.u32 	%rd6442, %r4956, 4;
	add.s64 	%rd6443, %rd5460, %rd6442;
	ld.shared.u32 	%r4957, [%rd6443];
	ld.shared.u32 	%r4958, [%rd6441];
	xor.b32  	%r4959, %r4957, %r4958;
	bfe.u32 	%r4960, %r4894, 8, 8;
	mul.wide.u32 	%rd6444, %r4960, 4;
	add.s64 	%rd6445, %rd5465, %rd6444;
	ld.shared.u32 	%r4961, [%rd6445];
	xor.b32  	%r4962, %r4959, %r4961;
	and.b32  	%r4963, %r4882, 255;
	mul.wide.u32 	%rd6446, %r4963, 4;
	add.s64 	%rd6447, %rd5470, %rd6446;
	ld.shared.u32 	%r4964, [%rd6447];
	xor.b32  	%r4965, %r4962, %r4964;
	xor.b32  	%r4966, %r4965, %r4170;
	shr.u32 	%r4967, %r4930, 24;
	mul.wide.u32 	%rd6448, %r4967, 4;
	add.s64 	%rd6449, %rd5455, %rd6448;
	bfe.u32 	%r4968, %r4966, 16, 8;
	mul.wide.u32 	%rd6450, %r4968, 4;
	add.s64 	%rd6451, %rd5460, %rd6450;
	ld.shared.u32 	%r4969, [%rd6451];
	ld.shared.u32 	%r4970, [%rd6449];
	xor.b32  	%r4971, %r4969, %r4970;
	bfe.u32 	%r4972, %r4954, 8, 8;
	mul.wide.u32 	%rd6452, %r4972, 4;
	add.s64 	%rd6453, %rd5465, %rd6452;
	ld.shared.u32 	%r4973, [%rd6453];
	xor.b32  	%r4974, %r4971, %r4973;
	and.b32  	%r4975, %r4942, 255;
	mul.wide.u32 	%rd6454, %r4975, 4;
	add.s64 	%rd6455, %rd5470, %rd6454;
	ld.shared.u32 	%r4976, [%rd6455];
	xor.b32  	%r4977, %r4974, %r4976;
	xor.b32  	%r4978, %r4977, %r4190;
	shr.u32 	%r4979, %r4942, 24;
	mul.wide.u32 	%rd6456, %r4979, 4;
	add.s64 	%rd6457, %rd5455, %rd6456;
	bfe.u32 	%r4980, %r4930, 16, 8;
	mul.wide.u32 	%rd6458, %r4980, 4;
	add.s64 	%rd6459, %rd5460, %rd6458;
	ld.shared.u32 	%r4981, [%rd6459];
	ld.shared.u32 	%r4982, [%rd6457];
	xor.b32  	%r4983, %r4981, %r4982;
	bfe.u32 	%r4984, %r4966, 8, 8;
	mul.wide.u32 	%rd6460, %r4984, 4;
	add.s64 	%rd6461, %rd5465, %rd6460;
	ld.shared.u32 	%r4985, [%rd6461];
	xor.b32  	%r4986, %r4983, %r4985;
	and.b32  	%r4987, %r4954, 255;
	mul.wide.u32 	%rd6462, %r4987, 4;
	add.s64 	%rd6463, %rd5470, %rd6462;
	ld.shared.u32 	%r4988, [%rd6463];
	xor.b32  	%r4989, %r4986, %r4988;
	xor.b32  	%r4990, %r4989, %r4206;
	shr.u32 	%r4991, %r4954, 24;
	mul.wide.u32 	%rd6464, %r4991, 4;
	add.s64 	%rd6465, %rd5455, %rd6464;
	bfe.u32 	%r4992, %r4942, 16, 8;
	mul.wide.u32 	%rd6466, %r4992, 4;
	add.s64 	%rd6467, %rd5460, %rd6466;
	ld.shared.u32 	%r4993, [%rd6467];
	ld.shared.u32 	%r4994, [%rd6465];
	xor.b32  	%r4995, %r4993, %r4994;
	bfe.u32 	%r4996, %r4930, 8, 8;
	mul.wide.u32 	%rd6468, %r4996, 4;
	add.s64 	%rd6469, %rd5465, %rd6468;
	ld.shared.u32 	%r4997, [%rd6469];
	xor.b32  	%r4998, %r4995, %r4997;
	and.b32  	%r4999, %r4966, 255;
	mul.wide.u32 	%rd6470, %r4999, 4;
	add.s64 	%rd6471, %rd5470, %rd6470;
	ld.shared.u32 	%r5000, [%rd6471];
	xor.b32  	%r5001, %r4998, %r5000;
	xor.b32  	%r5002, %r5001, %r4222;
	shr.u32 	%r5003, %r4966, 24;
	mul.wide.u32 	%rd6472, %r5003, 4;
	add.s64 	%rd6473, %rd5455, %rd6472;
	bfe.u32 	%r5004, %r4954, 16, 8;
	mul.wide.u32 	%rd6474, %r5004, 4;
	add.s64 	%rd6475, %rd5460, %rd6474;
	ld.shared.u32 	%r5005, [%rd6475];
	ld.shared.u32 	%r5006, [%rd6473];
	xor.b32  	%r5007, %r5005, %r5006;
	bfe.u32 	%r5008, %r4942, 8, 8;
	mul.wide.u32 	%rd6476, %r5008, 4;
	add.s64 	%rd6477, %rd5465, %rd6476;
	ld.shared.u32 	%r5009, [%rd6477];
	xor.b32  	%r5010, %r5007, %r5009;
	and.b32  	%r5011, %r4930, 255;
	mul.wide.u32 	%rd6478, %r5011, 4;
	add.s64 	%rd6479, %rd5470, %rd6478;
	ld.shared.u32 	%r5012, [%rd6479];
	xor.b32  	%r5013, %r5010, %r5012;
	xor.b32  	%r5014, %r5013, %r4238;
	shr.u32 	%r5015, %r4978, 24;
	mul.wide.u32 	%rd6480, %r5015, 4;
	add.s64 	%rd6481, %rd5455, %rd6480;
	bfe.u32 	%r5016, %r5014, 16, 8;
	mul.wide.u32 	%rd6482, %r5016, 4;
	add.s64 	%rd6483, %rd5460, %rd6482;
	ld.shared.u32 	%r5017, [%rd6483];
	ld.shared.u32 	%r5018, [%rd6481];
	xor.b32  	%r5019, %r5017, %r5018;
	bfe.u32 	%r5020, %r5002, 8, 8;
	mul.wide.u32 	%rd6484, %r5020, 4;
	add.s64 	%rd6485, %rd5465, %rd6484;
	ld.shared.u32 	%r5021, [%rd6485];
	xor.b32  	%r5022, %r5019, %r5021;
	and.b32  	%r5023, %r4990, 255;
	mul.wide.u32 	%rd6486, %r5023, 4;
	add.s64 	%rd6487, %rd5470, %rd6486;
	ld.shared.u32 	%r5024, [%rd6487];
	xor.b32  	%r5025, %r5022, %r5024;
	xor.b32  	%r5026, %r5025, %r4258;
	shr.u32 	%r5027, %r4990, 24;
	mul.wide.u32 	%rd6488, %r5027, 4;
	add.s64 	%rd6489, %rd5455, %rd6488;
	bfe.u32 	%r5028, %r4978, 16, 8;
	mul.wide.u32 	%rd6490, %r5028, 4;
	add.s64 	%rd6491, %rd5460, %rd6490;
	ld.shared.u32 	%r5029, [%rd6491];
	ld.shared.u32 	%r5030, [%rd6489];
	xor.b32  	%r5031, %r5029, %r5030;
	bfe.u32 	%r5032, %r5014, 8, 8;
	mul.wide.u32 	%rd6492, %r5032, 4;
	add.s64 	%rd6493, %rd5465, %rd6492;
	ld.shared.u32 	%r5033, [%rd6493];
	xor.b32  	%r5034, %r5031, %r5033;
	and.b32  	%r5035, %r5002, 255;
	mul.wide.u32 	%rd6494, %r5035, 4;
	add.s64 	%rd6495, %rd5470, %rd6494;
	ld.shared.u32 	%r5036, [%rd6495];
	xor.b32  	%r5037, %r5034, %r5036;
	xor.b32  	%r5038, %r5037, %r4274;
	shr.u32 	%r5039, %r5002, 24;
	mul.wide.u32 	%rd6496, %r5039, 4;
	add.s64 	%rd6497, %rd5455, %rd6496;
	bfe.u32 	%r5040, %r4990, 16, 8;
	mul.wide.u32 	%rd6498, %r5040, 4;
	add.s64 	%rd6499, %rd5460, %rd6498;
	ld.shared.u32 	%r5041, [%rd6499];
	ld.shared.u32 	%r5042, [%rd6497];
	xor.b32  	%r5043, %r5041, %r5042;
	bfe.u32 	%r5044, %r4978, 8, 8;
	mul.wide.u32 	%rd6500, %r5044, 4;
	add.s64 	%rd6501, %rd5465, %rd6500;
	ld.shared.u32 	%r5045, [%rd6501];
	xor.b32  	%r5046, %r5043, %r5045;
	and.b32  	%r5047, %r5014, 255;
	mul.wide.u32 	%rd6502, %r5047, 4;
	add.s64 	%rd6503, %rd5470, %rd6502;
	ld.shared.u32 	%r5048, [%rd6503];
	xor.b32  	%r5049, %r5046, %r5048;
	xor.b32  	%r5050, %r5049, %r4290;
	shr.u32 	%r5051, %r5014, 24;
	mul.wide.u32 	%rd6504, %r5051, 4;
	add.s64 	%rd6505, %rd5455, %rd6504;
	bfe.u32 	%r5052, %r5002, 16, 8;
	mul.wide.u32 	%rd6506, %r5052, 4;
	add.s64 	%rd6507, %rd5460, %rd6506;
	ld.shared.u32 	%r5053, [%rd6507];
	ld.shared.u32 	%r5054, [%rd6505];
	xor.b32  	%r5055, %r5053, %r5054;
	bfe.u32 	%r5056, %r4990, 8, 8;
	mul.wide.u32 	%rd6508, %r5056, 4;
	add.s64 	%rd6509, %rd5465, %rd6508;
	ld.shared.u32 	%r5057, [%rd6509];
	xor.b32  	%r5058, %r5055, %r5057;
	and.b32  	%r5059, %r4978, 255;
	mul.wide.u32 	%rd6510, %r5059, 4;
	add.s64 	%rd6511, %rd5470, %rd6510;
	ld.shared.u32 	%r5060, [%rd6511];
	xor.b32  	%r5061, %r5058, %r5060;
	xor.b32  	%r5062, %r5061, %r4306;
	shr.u32 	%r5063, %r5026, 24;
	mul.wide.u32 	%rd6512, %r5063, 4;
	add.s64 	%rd6513, %rd5455, %rd6512;
	bfe.u32 	%r5064, %r5062, 16, 8;
	mul.wide.u32 	%rd6514, %r5064, 4;
	add.s64 	%rd6515, %rd5460, %rd6514;
	ld.shared.u32 	%r5065, [%rd6515];
	ld.shared.u32 	%r5066, [%rd6513];
	xor.b32  	%r5067, %r5065, %r5066;
	bfe.u32 	%r5068, %r5050, 8, 8;
	mul.wide.u32 	%rd6516, %r5068, 4;
	add.s64 	%rd6517, %rd5465, %rd6516;
	ld.shared.u32 	%r5069, [%rd6517];
	xor.b32  	%r5070, %r5067, %r5069;
	and.b32  	%r5071, %r5038, 255;
	mul.wide.u32 	%rd6518, %r5071, 4;
	add.s64 	%rd6519, %rd5470, %rd6518;
	ld.shared.u32 	%r5072, [%rd6519];
	xor.b32  	%r5073, %r5070, %r5072;
	xor.b32  	%r5074, %r5073, %r4326;
	shr.u32 	%r5075, %r5038, 24;
	mul.wide.u32 	%rd6520, %r5075, 4;
	add.s64 	%rd6521, %rd5455, %rd6520;
	bfe.u32 	%r5076, %r5026, 16, 8;
	mul.wide.u32 	%rd6522, %r5076, 4;
	add.s64 	%rd6523, %rd5460, %rd6522;
	ld.shared.u32 	%r5077, [%rd6523];
	ld.shared.u32 	%r5078, [%rd6521];
	xor.b32  	%r5079, %r5077, %r5078;
	bfe.u32 	%r5080, %r5062, 8, 8;
	mul.wide.u32 	%rd6524, %r5080, 4;
	add.s64 	%rd6525, %rd5465, %rd6524;
	ld.shared.u32 	%r5081, [%rd6525];
	xor.b32  	%r5082, %r5079, %r5081;
	and.b32  	%r5083, %r5050, 255;
	mul.wide.u32 	%rd6526, %r5083, 4;
	add.s64 	%rd6527, %rd5470, %rd6526;
	ld.shared.u32 	%r5084, [%rd6527];
	xor.b32  	%r5085, %r5082, %r5084;
	xor.b32  	%r5086, %r5085, %r4342;
	shr.u32 	%r5087, %r5050, 24;
	mul.wide.u32 	%rd6528, %r5087, 4;
	add.s64 	%rd6529, %rd5455, %rd6528;
	bfe.u32 	%r5088, %r5038, 16, 8;
	mul.wide.u32 	%rd6530, %r5088, 4;
	add.s64 	%rd6531, %rd5460, %rd6530;
	ld.shared.u32 	%r5089, [%rd6531];
	ld.shared.u32 	%r5090, [%rd6529];
	xor.b32  	%r5091, %r5089, %r5090;
	bfe.u32 	%r5092, %r5026, 8, 8;
	mul.wide.u32 	%rd6532, %r5092, 4;
	add.s64 	%rd6533, %rd5465, %rd6532;
	ld.shared.u32 	%r5093, [%rd6533];
	xor.b32  	%r5094, %r5091, %r5093;
	and.b32  	%r5095, %r5062, 255;
	mul.wide.u32 	%rd6534, %r5095, 4;
	add.s64 	%rd6535, %rd5470, %rd6534;
	ld.shared.u32 	%r5096, [%rd6535];
	xor.b32  	%r5097, %r5094, %r5096;
	xor.b32  	%r5098, %r5097, %r4358;
	shr.u32 	%r5099, %r5062, 24;
	mul.wide.u32 	%rd6536, %r5099, 4;
	add.s64 	%rd6537, %rd5455, %rd6536;
	bfe.u32 	%r5100, %r5050, 16, 8;
	mul.wide.u32 	%rd6538, %r5100, 4;
	add.s64 	%rd6539, %rd5460, %rd6538;
	ld.shared.u32 	%r5101, [%rd6539];
	ld.shared.u32 	%r5102, [%rd6537];
	xor.b32  	%r5103, %r5101, %r5102;
	bfe.u32 	%r5104, %r5038, 8, 8;
	mul.wide.u32 	%rd6540, %r5104, 4;
	add.s64 	%rd6541, %rd5465, %rd6540;
	ld.shared.u32 	%r5105, [%rd6541];
	xor.b32  	%r5106, %r5103, %r5105;
	and.b32  	%r5107, %r5026, 255;
	mul.wide.u32 	%rd6542, %r5107, 4;
	add.s64 	%rd6543, %rd5470, %rd6542;
	ld.shared.u32 	%r5108, [%rd6543];
	xor.b32  	%r5109, %r5106, %r5108;
	xor.b32  	%r5110, %r5109, %r4374;
	shr.u32 	%r5111, %r5074, 24;
	mul.wide.u32 	%rd6544, %r5111, 4;
	add.s64 	%rd6545, %rd5455, %rd6544;
	bfe.u32 	%r5112, %r5110, 16, 8;
	mul.wide.u32 	%rd6546, %r5112, 4;
	add.s64 	%rd6547, %rd5460, %rd6546;
	ld.shared.u32 	%r5113, [%rd6547];
	ld.shared.u32 	%r5114, [%rd6545];
	xor.b32  	%r5115, %r5113, %r5114;
	bfe.u32 	%r5116, %r5098, 8, 8;
	mul.wide.u32 	%rd6548, %r5116, 4;
	add.s64 	%rd6549, %rd5465, %rd6548;
	ld.shared.u32 	%r5117, [%rd6549];
	xor.b32  	%r5118, %r5115, %r5117;
	and.b32  	%r5119, %r5086, 255;
	mul.wide.u32 	%rd6550, %r5119, 4;
	add.s64 	%rd6551, %rd5470, %rd6550;
	ld.shared.u32 	%r5120, [%rd6551];
	xor.b32  	%r5121, %r5118, %r5120;
	xor.b32  	%r5122, %r5121, %r4394;
	shr.u32 	%r5123, %r5086, 24;
	mul.wide.u32 	%rd6552, %r5123, 4;
	add.s64 	%rd6553, %rd5455, %rd6552;
	bfe.u32 	%r5124, %r5074, 16, 8;
	mul.wide.u32 	%rd6554, %r5124, 4;
	add.s64 	%rd6555, %rd5460, %rd6554;
	ld.shared.u32 	%r5125, [%rd6555];
	ld.shared.u32 	%r5126, [%rd6553];
	xor.b32  	%r5127, %r5125, %r5126;
	bfe.u32 	%r5128, %r5110, 8, 8;
	mul.wide.u32 	%rd6556, %r5128, 4;
	add.s64 	%rd6557, %rd5465, %rd6556;
	ld.shared.u32 	%r5129, [%rd6557];
	xor.b32  	%r5130, %r5127, %r5129;
	and.b32  	%r5131, %r5098, 255;
	mul.wide.u32 	%rd6558, %r5131, 4;
	add.s64 	%rd6559, %rd5470, %rd6558;
	ld.shared.u32 	%r5132, [%rd6559];
	xor.b32  	%r5133, %r5130, %r5132;
	xor.b32  	%r5134, %r5133, %r4410;
	shr.u32 	%r5135, %r5098, 24;
	mul.wide.u32 	%rd6560, %r5135, 4;
	add.s64 	%rd6561, %rd5455, %rd6560;
	bfe.u32 	%r5136, %r5086, 16, 8;
	mul.wide.u32 	%rd6562, %r5136, 4;
	add.s64 	%rd6563, %rd5460, %rd6562;
	ld.shared.u32 	%r5137, [%rd6563];
	ld.shared.u32 	%r5138, [%rd6561];
	xor.b32  	%r5139, %r5137, %r5138;
	bfe.u32 	%r5140, %r5074, 8, 8;
	mul.wide.u32 	%rd6564, %r5140, 4;
	add.s64 	%rd6565, %rd5465, %rd6564;
	ld.shared.u32 	%r5141, [%rd6565];
	xor.b32  	%r5142, %r5139, %r5141;
	and.b32  	%r5143, %r5110, 255;
	mul.wide.u32 	%rd6566, %r5143, 4;
	add.s64 	%rd6567, %rd5470, %rd6566;
	ld.shared.u32 	%r5144, [%rd6567];
	xor.b32  	%r5145, %r5142, %r5144;
	xor.b32  	%r5146, %r5145, %r4426;
	shr.u32 	%r5147, %r5110, 24;
	mul.wide.u32 	%rd6568, %r5147, 4;
	add.s64 	%rd6569, %rd5455, %rd6568;
	bfe.u32 	%r5148, %r5098, 16, 8;
	mul.wide.u32 	%rd6570, %r5148, 4;
	add.s64 	%rd6571, %rd5460, %rd6570;
	ld.shared.u32 	%r5149, [%rd6571];
	ld.shared.u32 	%r5150, [%rd6569];
	xor.b32  	%r5151, %r5149, %r5150;
	bfe.u32 	%r5152, %r5086, 8, 8;
	mul.wide.u32 	%rd6572, %r5152, 4;
	add.s64 	%rd6573, %rd5465, %rd6572;
	ld.shared.u32 	%r5153, [%rd6573];
	xor.b32  	%r5154, %r5151, %r5153;
	and.b32  	%r5155, %r5074, 255;
	mul.wide.u32 	%rd6574, %r5155, 4;
	add.s64 	%rd6575, %rd5470, %rd6574;
	ld.shared.u32 	%r5156, [%rd6575];
	xor.b32  	%r5157, %r5154, %r5156;
	xor.b32  	%r5158, %r5157, %r4442;
	shr.u32 	%r5159, %r5122, 24;
	mul.wide.u32 	%rd6576, %r5159, 4;
	add.s64 	%rd6577, %rd5455, %rd6576;
	bfe.u32 	%r5160, %r5158, 16, 8;
	mul.wide.u32 	%rd6578, %r5160, 4;
	add.s64 	%rd6579, %rd5460, %rd6578;
	ld.shared.u32 	%r5161, [%rd6579];
	ld.shared.u32 	%r5162, [%rd6577];
	xor.b32  	%r5163, %r5161, %r5162;
	bfe.u32 	%r5164, %r5146, 8, 8;
	mul.wide.u32 	%rd6580, %r5164, 4;
	add.s64 	%rd6581, %rd5465, %rd6580;
	ld.shared.u32 	%r5165, [%rd6581];
	xor.b32  	%r5166, %r5163, %r5165;
	and.b32  	%r5167, %r5134, 255;
	mul.wide.u32 	%rd6582, %r5167, 4;
	add.s64 	%rd6583, %rd5470, %rd6582;
	ld.shared.u32 	%r5168, [%rd6583];
	xor.b32  	%r5169, %r5166, %r5168;
	xor.b32  	%r5170, %r5169, %r4462;
	shr.u32 	%r5171, %r5134, 24;
	mul.wide.u32 	%rd6584, %r5171, 4;
	add.s64 	%rd6585, %rd5455, %rd6584;
	bfe.u32 	%r5172, %r5122, 16, 8;
	mul.wide.u32 	%rd6586, %r5172, 4;
	add.s64 	%rd6587, %rd5460, %rd6586;
	ld.shared.u32 	%r5173, [%rd6587];
	ld.shared.u32 	%r5174, [%rd6585];
	xor.b32  	%r5175, %r5173, %r5174;
	bfe.u32 	%r5176, %r5158, 8, 8;
	mul.wide.u32 	%rd6588, %r5176, 4;
	add.s64 	%rd6589, %rd5465, %rd6588;
	ld.shared.u32 	%r5177, [%rd6589];
	xor.b32  	%r5178, %r5175, %r5177;
	and.b32  	%r5179, %r5146, 255;
	mul.wide.u32 	%rd6590, %r5179, 4;
	add.s64 	%rd6591, %rd5470, %rd6590;
	ld.shared.u32 	%r5180, [%rd6591];
	xor.b32  	%r5181, %r5178, %r5180;
	xor.b32  	%r5182, %r5181, %r4478;
	shr.u32 	%r5183, %r5146, 24;
	mul.wide.u32 	%rd6592, %r5183, 4;
	add.s64 	%rd6593, %rd5455, %rd6592;
	bfe.u32 	%r5184, %r5134, 16, 8;
	mul.wide.u32 	%rd6594, %r5184, 4;
	add.s64 	%rd6595, %rd5460, %rd6594;
	ld.shared.u32 	%r5185, [%rd6595];
	ld.shared.u32 	%r5186, [%rd6593];
	xor.b32  	%r5187, %r5185, %r5186;
	bfe.u32 	%r5188, %r5122, 8, 8;
	mul.wide.u32 	%rd6596, %r5188, 4;
	add.s64 	%rd6597, %rd5465, %rd6596;
	ld.shared.u32 	%r5189, [%rd6597];
	xor.b32  	%r5190, %r5187, %r5189;
	and.b32  	%r5191, %r5158, 255;
	mul.wide.u32 	%rd6598, %r5191, 4;
	add.s64 	%rd6599, %rd5470, %rd6598;
	ld.shared.u32 	%r5192, [%rd6599];
	xor.b32  	%r5193, %r5190, %r5192;
	xor.b32  	%r5194, %r5193, %r4494;
	shr.u32 	%r5195, %r5158, 24;
	mul.wide.u32 	%rd6600, %r5195, 4;
	add.s64 	%rd6601, %rd5455, %rd6600;
	bfe.u32 	%r5196, %r5146, 16, 8;
	mul.wide.u32 	%rd6602, %r5196, 4;
	add.s64 	%rd6603, %rd5460, %rd6602;
	ld.shared.u32 	%r5197, [%rd6603];
	ld.shared.u32 	%r5198, [%rd6601];
	xor.b32  	%r5199, %r5197, %r5198;
	bfe.u32 	%r5200, %r5134, 8, 8;
	mul.wide.u32 	%rd6604, %r5200, 4;
	add.s64 	%rd6605, %rd5465, %rd6604;
	ld.shared.u32 	%r5201, [%rd6605];
	xor.b32  	%r5202, %r5199, %r5201;
	and.b32  	%r5203, %r5122, 255;
	mul.wide.u32 	%rd6606, %r5203, 4;
	add.s64 	%rd6607, %rd5470, %rd6606;
	ld.shared.u32 	%r5204, [%rd6607];
	xor.b32  	%r5205, %r5202, %r5204;
	xor.b32  	%r5206, %r5205, %r4510;
	shr.u32 	%r5207, %r5170, 24;
	mul.wide.u32 	%rd6608, %r5207, 4;
	add.s64 	%rd6609, %rd5455, %rd6608;
	bfe.u32 	%r5208, %r5206, 16, 8;
	mul.wide.u32 	%rd6610, %r5208, 4;
	add.s64 	%rd6611, %rd5460, %rd6610;
	ld.shared.u32 	%r5209, [%rd6611];
	ld.shared.u32 	%r5210, [%rd6609];
	xor.b32  	%r5211, %r5209, %r5210;
	bfe.u32 	%r5212, %r5194, 8, 8;
	mul.wide.u32 	%rd6612, %r5212, 4;
	add.s64 	%rd6613, %rd5465, %rd6612;
	ld.shared.u32 	%r5213, [%rd6613];
	xor.b32  	%r5214, %r5211, %r5213;
	and.b32  	%r5215, %r5182, 255;
	mul.wide.u32 	%rd6614, %r5215, 4;
	add.s64 	%rd6615, %rd5470, %rd6614;
	ld.shared.u32 	%r5216, [%rd6615];
	xor.b32  	%r5217, %r5214, %r5216;
	xor.b32  	%r5218, %r5217, %r4530;
	shr.u32 	%r5219, %r5182, 24;
	mul.wide.u32 	%rd6616, %r5219, 4;
	add.s64 	%rd6617, %rd5455, %rd6616;
	bfe.u32 	%r5220, %r5170, 16, 8;
	mul.wide.u32 	%rd6618, %r5220, 4;
	add.s64 	%rd6619, %rd5460, %rd6618;
	ld.shared.u32 	%r5221, [%rd6619];
	ld.shared.u32 	%r5222, [%rd6617];
	xor.b32  	%r5223, %r5221, %r5222;
	bfe.u32 	%r5224, %r5206, 8, 8;
	mul.wide.u32 	%rd6620, %r5224, 4;
	add.s64 	%rd6621, %rd5465, %rd6620;
	ld.shared.u32 	%r5225, [%rd6621];
	xor.b32  	%r5226, %r5223, %r5225;
	and.b32  	%r5227, %r5194, 255;
	mul.wide.u32 	%rd6622, %r5227, 4;
	add.s64 	%rd6623, %rd5470, %rd6622;
	ld.shared.u32 	%r5228, [%rd6623];
	xor.b32  	%r5229, %r5226, %r5228;
	xor.b32  	%r5230, %r5229, %r4546;
	shr.u32 	%r5231, %r5194, 24;
	mul.wide.u32 	%rd6624, %r5231, 4;
	add.s64 	%rd6625, %rd5455, %rd6624;
	bfe.u32 	%r5232, %r5182, 16, 8;
	mul.wide.u32 	%rd6626, %r5232, 4;
	add.s64 	%rd6627, %rd5460, %rd6626;
	ld.shared.u32 	%r5233, [%rd6627];
	ld.shared.u32 	%r5234, [%rd6625];
	xor.b32  	%r5235, %r5233, %r5234;
	bfe.u32 	%r5236, %r5170, 8, 8;
	mul.wide.u32 	%rd6628, %r5236, 4;
	add.s64 	%rd6629, %rd5465, %rd6628;
	ld.shared.u32 	%r5237, [%rd6629];
	xor.b32  	%r5238, %r5235, %r5237;
	and.b32  	%r5239, %r5206, 255;
	mul.wide.u32 	%rd6630, %r5239, 4;
	add.s64 	%rd6631, %rd5470, %rd6630;
	ld.shared.u32 	%r5240, [%rd6631];
	xor.b32  	%r5241, %r5238, %r5240;
	xor.b32  	%r5242, %r5241, %r4562;
	shr.u32 	%r5243, %r5206, 24;
	mul.wide.u32 	%rd6632, %r5243, 4;
	add.s64 	%rd6633, %rd5455, %rd6632;
	bfe.u32 	%r5244, %r5194, 16, 8;
	mul.wide.u32 	%rd6634, %r5244, 4;
	add.s64 	%rd6635, %rd5460, %rd6634;
	ld.shared.u32 	%r5245, [%rd6635];
	ld.shared.u32 	%r5246, [%rd6633];
	xor.b32  	%r5247, %r5245, %r5246;
	bfe.u32 	%r5248, %r5182, 8, 8;
	mul.wide.u32 	%rd6636, %r5248, 4;
	add.s64 	%rd6637, %rd5465, %rd6636;
	ld.shared.u32 	%r5249, [%rd6637];
	xor.b32  	%r5250, %r5247, %r5249;
	and.b32  	%r5251, %r5170, 255;
	mul.wide.u32 	%rd6638, %r5251, 4;
	add.s64 	%rd6639, %rd5470, %rd6638;
	ld.shared.u32 	%r5252, [%rd6639];
	xor.b32  	%r5253, %r5250, %r5252;
	xor.b32  	%r5254, %r5253, %r4578;
	shr.u32 	%r5255, %r5218, 24;
	mul.wide.u32 	%rd6640, %r5255, 4;
	add.s64 	%rd6641, %rd5455, %rd6640;
	bfe.u32 	%r5256, %r5254, 16, 8;
	mul.wide.u32 	%rd6642, %r5256, 4;
	add.s64 	%rd6643, %rd5460, %rd6642;
	ld.shared.u32 	%r5257, [%rd6643];
	ld.shared.u32 	%r5258, [%rd6641];
	xor.b32  	%r5259, %r5257, %r5258;
	bfe.u32 	%r5260, %r5242, 8, 8;
	mul.wide.u32 	%rd6644, %r5260, 4;
	add.s64 	%rd6645, %rd5465, %rd6644;
	ld.shared.u32 	%r5261, [%rd6645];
	xor.b32  	%r5262, %r5259, %r5261;
	and.b32  	%r5263, %r5230, 255;
	mul.wide.u32 	%rd6646, %r5263, 4;
	add.s64 	%rd6647, %rd5470, %rd6646;
	ld.shared.u32 	%r5264, [%rd6647];
	xor.b32  	%r5265, %r5262, %r5264;
	xor.b32  	%r5266, %r5265, %r4598;
	shr.u32 	%r5267, %r5230, 24;
	mul.wide.u32 	%rd6648, %r5267, 4;
	add.s64 	%rd6649, %rd5455, %rd6648;
	bfe.u32 	%r5268, %r5218, 16, 8;
	mul.wide.u32 	%rd6650, %r5268, 4;
	add.s64 	%rd6651, %rd5460, %rd6650;
	ld.shared.u32 	%r5269, [%rd6651];
	ld.shared.u32 	%r5270, [%rd6649];
	xor.b32  	%r5271, %r5269, %r5270;
	bfe.u32 	%r5272, %r5254, 8, 8;
	mul.wide.u32 	%rd6652, %r5272, 4;
	add.s64 	%rd6653, %rd5465, %rd6652;
	ld.shared.u32 	%r5273, [%rd6653];
	xor.b32  	%r5274, %r5271, %r5273;
	and.b32  	%r5275, %r5242, 255;
	mul.wide.u32 	%rd6654, %r5275, 4;
	add.s64 	%rd6655, %rd5470, %rd6654;
	ld.shared.u32 	%r5276, [%rd6655];
	xor.b32  	%r5277, %r5274, %r5276;
	xor.b32  	%r5278, %r5277, %r4614;
	shr.u32 	%r5279, %r5242, 24;
	mul.wide.u32 	%rd6656, %r5279, 4;
	add.s64 	%rd6657, %rd5455, %rd6656;
	bfe.u32 	%r5280, %r5230, 16, 8;
	mul.wide.u32 	%rd6658, %r5280, 4;
	add.s64 	%rd6659, %rd5460, %rd6658;
	ld.shared.u32 	%r5281, [%rd6659];
	ld.shared.u32 	%r5282, [%rd6657];
	xor.b32  	%r5283, %r5281, %r5282;
	bfe.u32 	%r5284, %r5218, 8, 8;
	mul.wide.u32 	%rd6660, %r5284, 4;
	add.s64 	%rd6661, %rd5465, %rd6660;
	ld.shared.u32 	%r5285, [%rd6661];
	xor.b32  	%r5286, %r5283, %r5285;
	and.b32  	%r5287, %r5254, 255;
	mul.wide.u32 	%rd6662, %r5287, 4;
	add.s64 	%rd6663, %rd5470, %rd6662;
	ld.shared.u32 	%r5288, [%rd6663];
	xor.b32  	%r5289, %r5286, %r5288;
	xor.b32  	%r5290, %r5289, %r4630;
	shr.u32 	%r5291, %r5254, 24;
	mul.wide.u32 	%rd6664, %r5291, 4;
	add.s64 	%rd6665, %rd5455, %rd6664;
	bfe.u32 	%r5292, %r5242, 16, 8;
	mul.wide.u32 	%rd6666, %r5292, 4;
	add.s64 	%rd6667, %rd5460, %rd6666;
	ld.shared.u32 	%r5293, [%rd6667];
	ld.shared.u32 	%r5294, [%rd6665];
	xor.b32  	%r5295, %r5293, %r5294;
	bfe.u32 	%r5296, %r5230, 8, 8;
	mul.wide.u32 	%rd6668, %r5296, 4;
	add.s64 	%rd6669, %rd5465, %rd6668;
	ld.shared.u32 	%r5297, [%rd6669];
	xor.b32  	%r5298, %r5295, %r5297;
	and.b32  	%r5299, %r5218, 255;
	mul.wide.u32 	%rd6670, %r5299, 4;
	add.s64 	%rd6671, %rd5470, %rd6670;
	ld.shared.u32 	%r5300, [%rd6671];
	xor.b32  	%r5301, %r5298, %r5300;
	xor.b32  	%r5302, %r5301, %r4646;
	shr.u32 	%r5303, %r5266, 24;
	mul.wide.u32 	%rd6672, %r5303, 4;
	add.s64 	%rd6673, %rd5455, %rd6672;
	bfe.u32 	%r5304, %r5302, 16, 8;
	mul.wide.u32 	%rd6674, %r5304, 4;
	add.s64 	%rd6675, %rd5460, %rd6674;
	ld.shared.u32 	%r5305, [%rd6675];
	ld.shared.u32 	%r5306, [%rd6673];
	xor.b32  	%r5307, %r5305, %r5306;
	bfe.u32 	%r5308, %r5290, 8, 8;
	mul.wide.u32 	%rd6676, %r5308, 4;
	add.s64 	%rd6677, %rd5465, %rd6676;
	ld.shared.u32 	%r5309, [%rd6677];
	xor.b32  	%r5310, %r5307, %r5309;
	and.b32  	%r5311, %r5278, 255;
	mul.wide.u32 	%rd6678, %r5311, 4;
	add.s64 	%rd6679, %rd5470, %rd6678;
	ld.shared.u32 	%r5312, [%rd6679];
	xor.b32  	%r5313, %r5310, %r5312;
	xor.b32  	%r5314, %r5313, %r4666;
	shr.u32 	%r5315, %r5278, 24;
	mul.wide.u32 	%rd6680, %r5315, 4;
	add.s64 	%rd6681, %rd5455, %rd6680;
	bfe.u32 	%r5316, %r5266, 16, 8;
	mul.wide.u32 	%rd6682, %r5316, 4;
	add.s64 	%rd6683, %rd5460, %rd6682;
	ld.shared.u32 	%r5317, [%rd6683];
	ld.shared.u32 	%r5318, [%rd6681];
	xor.b32  	%r5319, %r5317, %r5318;
	bfe.u32 	%r5320, %r5302, 8, 8;
	mul.wide.u32 	%rd6684, %r5320, 4;
	add.s64 	%rd6685, %rd5465, %rd6684;
	ld.shared.u32 	%r5321, [%rd6685];
	xor.b32  	%r5322, %r5319, %r5321;
	and.b32  	%r5323, %r5290, 255;
	mul.wide.u32 	%rd6686, %r5323, 4;
	add.s64 	%rd6687, %rd5470, %rd6686;
	ld.shared.u32 	%r5324, [%rd6687];
	xor.b32  	%r5325, %r5322, %r5324;
	xor.b32  	%r5326, %r5325, %r4682;
	shr.u32 	%r5327, %r5290, 24;
	mul.wide.u32 	%rd6688, %r5327, 4;
	add.s64 	%rd6689, %rd5455, %rd6688;
	bfe.u32 	%r5328, %r5278, 16, 8;
	mul.wide.u32 	%rd6690, %r5328, 4;
	add.s64 	%rd6691, %rd5460, %rd6690;
	ld.shared.u32 	%r5329, [%rd6691];
	ld.shared.u32 	%r5330, [%rd6689];
	xor.b32  	%r5331, %r5329, %r5330;
	bfe.u32 	%r5332, %r5266, 8, 8;
	mul.wide.u32 	%rd6692, %r5332, 4;
	add.s64 	%rd6693, %rd5465, %rd6692;
	ld.shared.u32 	%r5333, [%rd6693];
	xor.b32  	%r5334, %r5331, %r5333;
	and.b32  	%r5335, %r5302, 255;
	mul.wide.u32 	%rd6694, %r5335, 4;
	add.s64 	%rd6695, %rd5470, %rd6694;
	ld.shared.u32 	%r5336, [%rd6695];
	xor.b32  	%r5337, %r5334, %r5336;
	xor.b32  	%r5338, %r5337, %r4698;
	shr.u32 	%r5339, %r5302, 24;
	mul.wide.u32 	%rd6696, %r5339, 4;
	add.s64 	%rd6697, %rd5455, %rd6696;
	bfe.u32 	%r5340, %r5290, 16, 8;
	mul.wide.u32 	%rd6698, %r5340, 4;
	add.s64 	%rd6699, %rd5460, %rd6698;
	ld.shared.u32 	%r5341, [%rd6699];
	ld.shared.u32 	%r5342, [%rd6697];
	xor.b32  	%r5343, %r5341, %r5342;
	bfe.u32 	%r5344, %r5278, 8, 8;
	mul.wide.u32 	%rd6700, %r5344, 4;
	add.s64 	%rd6701, %rd5465, %rd6700;
	ld.shared.u32 	%r5345, [%rd6701];
	xor.b32  	%r5346, %r5343, %r5345;
	and.b32  	%r5347, %r5266, 255;
	mul.wide.u32 	%rd6702, %r5347, 4;
	add.s64 	%rd6703, %rd5470, %rd6702;
	ld.shared.u32 	%r5348, [%rd6703];
	xor.b32  	%r5349, %r5346, %r5348;
	xor.b32  	%r5350, %r5349, %r4714;
	shr.u32 	%r5351, %r5314, 24;
	mul.wide.u32 	%rd6704, %r5351, 4;
	mov.u64 	%rd6705, m09600_comp$s_td4;
	add.s64 	%rd6706, %rd6705, %rd6704;
	ld.shared.u32 	%r5352, [%rd6706];
	and.b32  	%r5353, %r5352, -16777216;
	bfe.u32 	%r5354, %r5350, 16, 8;
	mul.wide.u32 	%rd6707, %r5354, 4;
	add.s64 	%rd6708, %rd6705, %rd6707;
	ld.shared.u32 	%r5355, [%rd6708];
	and.b32  	%r5356, %r5355, 16711680;
	or.b32  	%r5357, %r5356, %r5353;
	bfe.u32 	%r5358, %r5338, 8, 8;
	mul.wide.u32 	%rd6709, %r5358, 4;
	add.s64 	%rd6710, %rd6705, %rd6709;
	ld.shared.u32 	%r5359, [%rd6710];
	and.b32  	%r5360, %r5359, 65280;
	or.b32  	%r5361, %r5357, %r5360;
	and.b32  	%r5362, %r5326, 255;
	mul.wide.u32 	%rd6711, %r5362, 4;
	add.s64 	%rd6712, %rd6705, %rd6711;
	ld.shared.u8 	%r5363, [%rd6712];
	or.b32  	%r5364, %r5361, %r5363;
	ld.local.u32 	%r5365, [%rd10079];
	xor.b32  	%r5366, %r5364, %r5365;
	shr.u32 	%r5367, %r5326, 24;
	mul.wide.u32 	%rd6713, %r5367, 4;
	add.s64 	%rd6714, %rd6705, %rd6713;
	ld.shared.u32 	%r5368, [%rd6714];
	and.b32  	%r5369, %r5368, -16777216;
	bfe.u32 	%r5370, %r5314, 16, 8;
	mul.wide.u32 	%rd6715, %r5370, 4;
	add.s64 	%rd6716, %rd6705, %rd6715;
	ld.shared.u32 	%r5371, [%rd6716];
	and.b32  	%r5372, %r5371, 16711680;
	or.b32  	%r5373, %r5372, %r5369;
	bfe.u32 	%r5374, %r5350, 8, 8;
	mul.wide.u32 	%rd6717, %r5374, 4;
	add.s64 	%rd6718, %rd6705, %rd6717;
	ld.shared.u32 	%r5375, [%rd6718];
	and.b32  	%r5376, %r5375, 65280;
	or.b32  	%r5377, %r5373, %r5376;
	and.b32  	%r5378, %r5338, 255;
	mul.wide.u32 	%rd6719, %r5378, 4;
	add.s64 	%rd6720, %rd6705, %rd6719;
	ld.shared.u8 	%r5379, [%rd6720];
	or.b32  	%r5380, %r5377, %r5379;
	ld.local.u32 	%r5381, [%rd12];
	xor.b32  	%r5382, %r5380, %r5381;
	shr.u32 	%r5383, %r5338, 24;
	mul.wide.u32 	%rd6721, %r5383, 4;
	add.s64 	%rd6722, %rd6705, %rd6721;
	ld.shared.u32 	%r5384, [%rd6722];
	and.b32  	%r5385, %r5384, -16777216;
	bfe.u32 	%r5386, %r5326, 16, 8;
	mul.wide.u32 	%rd6723, %r5386, 4;
	add.s64 	%rd6724, %rd6705, %rd6723;
	ld.shared.u32 	%r5387, [%rd6724];
	and.b32  	%r5388, %r5387, 16711680;
	or.b32  	%r5389, %r5388, %r5385;
	bfe.u32 	%r5390, %r5314, 8, 8;
	mul.wide.u32 	%rd6725, %r5390, 4;
	add.s64 	%rd6726, %rd6705, %rd6725;
	ld.shared.u32 	%r5391, [%rd6726];
	and.b32  	%r5392, %r5391, 65280;
	or.b32  	%r5393, %r5389, %r5392;
	and.b32  	%r5394, %r5350, 255;
	mul.wide.u32 	%rd6727, %r5394, 4;
	add.s64 	%rd6728, %rd6705, %rd6727;
	ld.shared.u8 	%r5395, [%rd6728];
	or.b32  	%r5396, %r5393, %r5395;
	ld.local.v2.u32 	{%r5397, %r5398}, [%rd12+4];
	xor.b32  	%r5400, %r5396, %r5397;
	shr.u32 	%r5401, %r5350, 24;
	mul.wide.u32 	%rd6729, %r5401, 4;
	add.s64 	%rd6730, %rd6705, %rd6729;
	ld.shared.u32 	%r5402, [%rd6730];
	and.b32  	%r5403, %r5402, -16777216;
	bfe.u32 	%r5404, %r5338, 16, 8;
	mul.wide.u32 	%rd6731, %r5404, 4;
	add.s64 	%rd6732, %rd6705, %rd6731;
	ld.shared.u32 	%r5405, [%rd6732];
	and.b32  	%r5406, %r5405, 16711680;
	or.b32  	%r5407, %r5406, %r5403;
	bfe.u32 	%r5408, %r5326, 8, 8;
	mul.wide.u32 	%rd6733, %r5408, 4;
	add.s64 	%rd6734, %rd6705, %rd6733;
	ld.shared.u32 	%r5409, [%rd6734];
	and.b32  	%r5410, %r5409, 65280;
	or.b32  	%r5411, %r5407, %r5410;
	and.b32  	%r5412, %r5314, 255;
	mul.wide.u32 	%rd6735, %r5412, 4;
	add.s64 	%rd6736, %rd6705, %rd6735;
	ld.shared.u8 	%r5413, [%rd6736];
	or.b32  	%r5414, %r5411, %r5413;
	xor.b32  	%r5416, %r5414, %r5398;
	mul.wide.u32 	%rd6737, %r8166, 180;
	add.s64 	%rd6738, %rd9965, %rd6737;
	ld.global.u32 	%r36, [%rd6738];
	ld.global.u32 	%r37, [%rd6738+4];
	ld.global.u32 	%r38, [%rd6738+8];
	ld.global.u32 	%r39, [%rd6738+12];
	xor.b32  	%r5417, %r5366, %r36;
	xor.b32  	%r5418, %r5382, %r37;
	mov.b64	%rd6739, {%r5418, %r5417};
	xor.b32  	%r5419, %r5400, %r38;
	xor.b32  	%r5420, %r5416, %r39;
	mov.b64	%rd6740, {%r5420, %r5419};
	add.s64 	%rd6742, %rd5, %rd9966;
	add.s64 	%rd6743, %rd6742, %rd6739;
	add.s64 	%rd6744, %rd6743, -4263291710961585108;
	add.s64 	%rd6745, %rd6, %rd6743;
	add.s64 	%rd6747, %rd9967, %rd6740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5421,%dummy}, %rd6744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5422}, %rd6744;
	}
	shf.r.wrap.b32 	%r5423, %r5422, %r5421, 14;
	shf.r.wrap.b32 	%r5424, %r5421, %r5422, 14;
	mov.b64 	%rd6748, {%r5424, %r5423};
	shf.r.wrap.b32 	%r5425, %r5422, %r5421, 18;
	shf.r.wrap.b32 	%r5426, %r5421, %r5422, 18;
	mov.b64 	%rd6749, {%r5426, %r5425};
	xor.b64  	%rd6750, %rd6749, %rd6748;
	shf.l.wrap.b32 	%r5427, %r5421, %r5422, 23;
	shf.l.wrap.b32 	%r5428, %r5422, %r5421, 23;
	mov.b64 	%rd6751, {%r5428, %r5427};
	xor.b64  	%rd6752, %rd6750, %rd6751;
	add.s64 	%rd6753, %rd6747, %rd6752;
	and.b64  	%rd6754, %rd6744, -3887949035690463538;
	xor.b64  	%rd6755, %rd6754, -7276294671716946913;
	add.s64 	%rd6756, %rd6753, %rd6755;
	xor.b64  	%rd6757, %rd6745, -4942790177534073029;
	xor.b64  	%rd6758, %rd6745, 7640891576956012808;
	and.b64  	%rd6759, %rd6758, %rd6757;
	xor.b64  	%rd6760, %rd6759, %rd6745;
	add.s64 	%rd6761, %rd6756, %rd6760;
	add.s64 	%rd6762, %rd6756, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5429,%dummy}, %rd6745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5430}, %rd6745;
	}
	shf.r.wrap.b32 	%r5431, %r5430, %r5429, 28;
	shf.r.wrap.b32 	%r5432, %r5429, %r5430, 28;
	mov.b64 	%rd6763, {%r5432, %r5431};
	shf.l.wrap.b32 	%r5433, %r5429, %r5430, 30;
	shf.l.wrap.b32 	%r5434, %r5430, %r5429, 30;
	mov.b64 	%rd6764, {%r5434, %r5433};
	xor.b64  	%rd6765, %rd6764, %rd6763;
	shf.l.wrap.b32 	%r5435, %r5429, %r5430, 25;
	shf.l.wrap.b32 	%r5436, %r5430, %r5429, 25;
	mov.b64 	%rd6766, {%r5436, %r5435};
	xor.b64  	%rd6767, %rd6765, %rd6766;
	add.s64 	%rd6768, %rd6761, %rd6767;
	add.s64 	%rd6769, %rd6768, 2270897969802886507;
	xor.b64  	%rd6771, %rd6744, 5840696475078001361;
	and.b64  	%rd6772, %rd6762, %rd6771;
	xor.b64  	%rd6773, %rd6772, 5840696475078001361;
	add.s64 	%rd6774, %rd9968, %rd6773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5437,%dummy}, %rd6762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5438}, %rd6762;
	}
	shf.r.wrap.b32 	%r5439, %r5438, %r5437, 14;
	shf.r.wrap.b32 	%r5440, %r5437, %r5438, 14;
	mov.b64 	%rd6775, {%r5440, %r5439};
	shf.r.wrap.b32 	%r5441, %r5438, %r5437, 18;
	shf.r.wrap.b32 	%r5442, %r5437, %r5438, 18;
	mov.b64 	%rd6776, {%r5442, %r5441};
	xor.b64  	%rd6777, %rd6776, %rd6775;
	shf.l.wrap.b32 	%r5443, %r5437, %r5438, 23;
	shf.l.wrap.b32 	%r5444, %r5438, %r5437, 23;
	mov.b64 	%rd6778, {%r5444, %r5443};
	xor.b64  	%rd6779, %rd6777, %rd6778;
	add.s64 	%rd6780, %rd6774, %rd6779;
	xor.b64  	%rd6781, %rd6769, 7640891576956012808;
	xor.b64  	%rd6782, %rd6769, %rd6745;
	and.b64  	%rd6783, %rd6782, %rd6781;
	xor.b64  	%rd6784, %rd6783, %rd6769;
	add.s64 	%rd6785, %rd6780, %rd6784;
	add.s64 	%rd6786, %rd6780, -2995712812396244134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5445,%dummy}, %rd6769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5446}, %rd6769;
	}
	shf.r.wrap.b32 	%r5447, %r5446, %r5445, 28;
	shf.r.wrap.b32 	%r5448, %r5445, %r5446, 28;
	mov.b64 	%rd6787, {%r5448, %r5447};
	shf.l.wrap.b32 	%r5449, %r5445, %r5446, 30;
	shf.l.wrap.b32 	%r5450, %r5446, %r5445, 30;
	mov.b64 	%rd6788, {%r5450, %r5449};
	xor.b64  	%rd6789, %rd6788, %rd6787;
	shf.l.wrap.b32 	%r5451, %r5445, %r5446, 25;
	shf.l.wrap.b32 	%r5452, %r5446, %r5445, 25;
	mov.b64 	%rd6790, {%r5452, %r5451};
	xor.b64  	%rd6791, %rd6789, %rd6790;
	add.s64 	%rd6792, %rd6785, %rd6791;
	add.s64 	%rd6793, %rd6792, 1947077365137828895;
	xor.b64  	%rd6795, %rd6762, %rd6744;
	and.b64  	%rd6796, %rd6786, %rd6795;
	xor.b64  	%rd6797, %rd6796, %rd6744;
	add.s64 	%rd6798, %rd9969, %rd6797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5453,%dummy}, %rd6786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5454}, %rd6786;
	}
	shf.r.wrap.b32 	%r5455, %r5454, %r5453, 14;
	shf.r.wrap.b32 	%r5456, %r5453, %r5454, 14;
	mov.b64 	%rd6799, {%r5456, %r5455};
	shf.r.wrap.b32 	%r5457, %r5454, %r5453, 18;
	shf.r.wrap.b32 	%r5458, %r5453, %r5454, 18;
	mov.b64 	%rd6800, {%r5458, %r5457};
	xor.b64  	%rd6801, %rd6800, %rd6799;
	shf.l.wrap.b32 	%r5459, %r5453, %r5454, 23;
	shf.l.wrap.b32 	%r5460, %r5454, %r5453, 23;
	mov.b64 	%rd6802, {%r5460, %r5459};
	xor.b64  	%rd6803, %rd6801, %rd6802;
	add.s64 	%rd6804, %rd6798, %rd6803;
	xor.b64  	%rd6805, %rd6793, %rd6745;
	xor.b64  	%rd6806, %rd6793, %rd6769;
	and.b64  	%rd6807, %rd6806, %rd6805;
	xor.b64  	%rd6808, %rd6807, %rd6793;
	add.s64 	%rd6809, %rd6804, %rd6808;
	add.s64 	%rd6810, %rd6804, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5461,%dummy}, %rd6793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5462}, %rd6793;
	}
	shf.r.wrap.b32 	%r5463, %r5462, %r5461, 28;
	shf.r.wrap.b32 	%r5464, %r5461, %r5462, 28;
	mov.b64 	%rd6811, {%r5464, %r5463};
	shf.l.wrap.b32 	%r5465, %r5461, %r5462, 30;
	shf.l.wrap.b32 	%r5466, %r5462, %r5461, 30;
	mov.b64 	%rd6812, {%r5466, %r5465};
	xor.b64  	%rd6813, %rd6812, %rd6811;
	shf.l.wrap.b32 	%r5467, %r5461, %r5462, 25;
	shf.l.wrap.b32 	%r5468, %r5462, %r5461, 25;
	mov.b64 	%rd6814, {%r5468, %r5467};
	xor.b64  	%rd6815, %rd6813, %rd6814;
	add.s64 	%rd6816, %rd6809, %rd6815;
	add.s64 	%rd6817, %rd6816, 5840696475078001361;
	add.s64 	%rd6819, %rd9970, %rd6744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5469,%dummy}, %rd6810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5470}, %rd6810;
	}
	shf.r.wrap.b32 	%r5471, %r5470, %r5469, 14;
	shf.r.wrap.b32 	%r5472, %r5469, %r5470, 14;
	mov.b64 	%rd6820, {%r5472, %r5471};
	shf.r.wrap.b32 	%r5473, %r5470, %r5469, 18;
	shf.r.wrap.b32 	%r5474, %r5469, %r5470, 18;
	mov.b64 	%rd6821, {%r5474, %r5473};
	xor.b64  	%rd6822, %rd6821, %rd6820;
	shf.l.wrap.b32 	%r5475, %r5469, %r5470, 23;
	shf.l.wrap.b32 	%r5476, %r5470, %r5469, 23;
	mov.b64 	%rd6823, {%r5476, %r5475};
	xor.b64  	%rd6824, %rd6822, %rd6823;
	xor.b64  	%rd6825, %rd6786, %rd6762;
	and.b64  	%rd6826, %rd6810, %rd6825;
	xor.b64  	%rd6827, %rd6826, %rd6762;
	add.s64 	%rd6828, %rd6819, %rd6827;
	add.s64 	%rd6829, %rd6828, %rd6824;
	add.s64 	%rd6830, %rd6829, %rd6745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5477,%dummy}, %rd6817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5478}, %rd6817;
	}
	shf.r.wrap.b32 	%r5479, %r5478, %r5477, 28;
	shf.r.wrap.b32 	%r5480, %r5477, %r5478, 28;
	mov.b64 	%rd6831, {%r5480, %r5479};
	shf.l.wrap.b32 	%r5481, %r5477, %r5478, 30;
	shf.l.wrap.b32 	%r5482, %r5478, %r5477, 30;
	mov.b64 	%rd6832, {%r5482, %r5481};
	xor.b64  	%rd6833, %rd6832, %rd6831;
	shf.l.wrap.b32 	%r5483, %r5477, %r5478, 25;
	shf.l.wrap.b32 	%r5484, %r5478, %r5477, 25;
	mov.b64 	%rd6834, {%r5484, %r5483};
	xor.b64  	%rd6835, %rd6833, %rd6834;
	xor.b64  	%rd6836, %rd6817, %rd6769;
	xor.b64  	%rd6837, %rd6817, %rd6793;
	and.b64  	%rd6838, %rd6837, %rd6836;
	xor.b64  	%rd6839, %rd6838, %rd6817;
	add.s64 	%rd6840, %rd6829, %rd6839;
	add.s64 	%rd6841, %rd6840, %rd6835;
	add.s64 	%rd6843, %rd9971, %rd6762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5485,%dummy}, %rd6830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5486}, %rd6830;
	}
	shf.r.wrap.b32 	%r5487, %r5486, %r5485, 14;
	shf.r.wrap.b32 	%r5488, %r5485, %r5486, 14;
	mov.b64 	%rd6844, {%r5488, %r5487};
	shf.r.wrap.b32 	%r5489, %r5486, %r5485, 18;
	shf.r.wrap.b32 	%r5490, %r5485, %r5486, 18;
	mov.b64 	%rd6845, {%r5490, %r5489};
	xor.b64  	%rd6846, %rd6845, %rd6844;
	shf.l.wrap.b32 	%r5491, %r5485, %r5486, 23;
	shf.l.wrap.b32 	%r5492, %r5486, %r5485, 23;
	mov.b64 	%rd6847, {%r5492, %r5491};
	xor.b64  	%rd6848, %rd6846, %rd6847;
	xor.b64  	%rd6849, %rd6810, %rd6786;
	and.b64  	%rd6850, %rd6830, %rd6849;
	xor.b64  	%rd6851, %rd6850, %rd6786;
	add.s64 	%rd6852, %rd6843, %rd6851;
	add.s64 	%rd6853, %rd6852, %rd6848;
	add.s64 	%rd6854, %rd6853, %rd6769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5493,%dummy}, %rd6841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5494}, %rd6841;
	}
	shf.r.wrap.b32 	%r5495, %r5494, %r5493, 28;
	shf.r.wrap.b32 	%r5496, %r5493, %r5494, 28;
	mov.b64 	%rd6855, {%r5496, %r5495};
	shf.l.wrap.b32 	%r5497, %r5493, %r5494, 30;
	shf.l.wrap.b32 	%r5498, %r5494, %r5493, 30;
	mov.b64 	%rd6856, {%r5498, %r5497};
	xor.b64  	%rd6857, %rd6856, %rd6855;
	shf.l.wrap.b32 	%r5499, %r5493, %r5494, 25;
	shf.l.wrap.b32 	%r5500, %r5494, %r5493, 25;
	mov.b64 	%rd6858, {%r5500, %r5499};
	xor.b64  	%rd6859, %rd6857, %rd6858;
	xor.b64  	%rd6860, %rd6841, %rd6793;
	xor.b64  	%rd6861, %rd6841, %rd6817;
	and.b64  	%rd6862, %rd6861, %rd6860;
	xor.b64  	%rd6863, %rd6862, %rd6841;
	add.s64 	%rd6864, %rd6853, %rd6863;
	add.s64 	%rd6865, %rd6864, %rd6859;
	add.s64 	%rd6867, %rd9972, %rd6786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5501,%dummy}, %rd6854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5502}, %rd6854;
	}
	shf.r.wrap.b32 	%r5503, %r5502, %r5501, 14;
	shf.r.wrap.b32 	%r5504, %r5501, %r5502, 14;
	mov.b64 	%rd6868, {%r5504, %r5503};
	shf.r.wrap.b32 	%r5505, %r5502, %r5501, 18;
	shf.r.wrap.b32 	%r5506, %r5501, %r5502, 18;
	mov.b64 	%rd6869, {%r5506, %r5505};
	xor.b64  	%rd6870, %rd6869, %rd6868;
	shf.l.wrap.b32 	%r5507, %r5501, %r5502, 23;
	shf.l.wrap.b32 	%r5508, %r5502, %r5501, 23;
	mov.b64 	%rd6871, {%r5508, %r5507};
	xor.b64  	%rd6872, %rd6870, %rd6871;
	xor.b64  	%rd6873, %rd6830, %rd6810;
	and.b64  	%rd6874, %rd6854, %rd6873;
	xor.b64  	%rd6875, %rd6874, %rd6810;
	add.s64 	%rd6876, %rd6867, %rd6875;
	add.s64 	%rd6877, %rd6876, %rd6872;
	add.s64 	%rd6878, %rd6877, %rd6793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5509,%dummy}, %rd6865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5510}, %rd6865;
	}
	shf.r.wrap.b32 	%r5511, %r5510, %r5509, 28;
	shf.r.wrap.b32 	%r5512, %r5509, %r5510, 28;
	mov.b64 	%rd6879, {%r5512, %r5511};
	shf.l.wrap.b32 	%r5513, %r5509, %r5510, 30;
	shf.l.wrap.b32 	%r5514, %r5510, %r5509, 30;
	mov.b64 	%rd6880, {%r5514, %r5513};
	xor.b64  	%rd6881, %rd6880, %rd6879;
	shf.l.wrap.b32 	%r5515, %r5509, %r5510, 25;
	shf.l.wrap.b32 	%r5516, %r5510, %r5509, 25;
	mov.b64 	%rd6882, {%r5516, %r5515};
	xor.b64  	%rd6883, %rd6881, %rd6882;
	xor.b64  	%rd6884, %rd6865, %rd6817;
	xor.b64  	%rd6885, %rd6865, %rd6841;
	and.b64  	%rd6886, %rd6885, %rd6884;
	xor.b64  	%rd6887, %rd6886, %rd6865;
	add.s64 	%rd6888, %rd6877, %rd6887;
	add.s64 	%rd6889, %rd6888, %rd6883;
	add.s64 	%rd6891, %rd9973, %rd6810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5517,%dummy}, %rd6878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5518}, %rd6878;
	}
	shf.r.wrap.b32 	%r5519, %r5518, %r5517, 14;
	shf.r.wrap.b32 	%r5520, %r5517, %r5518, 14;
	mov.b64 	%rd6892, {%r5520, %r5519};
	shf.r.wrap.b32 	%r5521, %r5518, %r5517, 18;
	shf.r.wrap.b32 	%r5522, %r5517, %r5518, 18;
	mov.b64 	%rd6893, {%r5522, %r5521};
	xor.b64  	%rd6894, %rd6893, %rd6892;
	shf.l.wrap.b32 	%r5523, %r5517, %r5518, 23;
	shf.l.wrap.b32 	%r5524, %r5518, %r5517, 23;
	mov.b64 	%rd6895, {%r5524, %r5523};
	xor.b64  	%rd6896, %rd6894, %rd6895;
	xor.b64  	%rd6897, %rd6854, %rd6830;
	and.b64  	%rd6898, %rd6878, %rd6897;
	xor.b64  	%rd6899, %rd6898, %rd6830;
	add.s64 	%rd6900, %rd6891, %rd6899;
	add.s64 	%rd6901, %rd6900, %rd6896;
	add.s64 	%rd6902, %rd6901, %rd6817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5525,%dummy}, %rd6889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5526}, %rd6889;
	}
	shf.r.wrap.b32 	%r5527, %r5526, %r5525, 28;
	shf.r.wrap.b32 	%r5528, %r5525, %r5526, 28;
	mov.b64 	%rd6903, {%r5528, %r5527};
	shf.l.wrap.b32 	%r5529, %r5525, %r5526, 30;
	shf.l.wrap.b32 	%r5530, %r5526, %r5525, 30;
	mov.b64 	%rd6904, {%r5530, %r5529};
	xor.b64  	%rd6905, %rd6904, %rd6903;
	shf.l.wrap.b32 	%r5531, %r5525, %r5526, 25;
	shf.l.wrap.b32 	%r5532, %r5526, %r5525, 25;
	mov.b64 	%rd6906, {%r5532, %r5531};
	xor.b64  	%rd6907, %rd6905, %rd6906;
	xor.b64  	%rd6908, %rd6889, %rd6841;
	xor.b64  	%rd6909, %rd6889, %rd6865;
	and.b64  	%rd6910, %rd6909, %rd6908;
	xor.b64  	%rd6911, %rd6910, %rd6889;
	add.s64 	%rd6912, %rd6901, %rd6911;
	add.s64 	%rd6913, %rd6912, %rd6907;
	add.s64 	%rd6915, %rd9974, %rd6830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5533,%dummy}, %rd6902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5534}, %rd6902;
	}
	shf.r.wrap.b32 	%r5535, %r5534, %r5533, 14;
	shf.r.wrap.b32 	%r5536, %r5533, %r5534, 14;
	mov.b64 	%rd6916, {%r5536, %r5535};
	shf.r.wrap.b32 	%r5537, %r5534, %r5533, 18;
	shf.r.wrap.b32 	%r5538, %r5533, %r5534, 18;
	mov.b64 	%rd6917, {%r5538, %r5537};
	xor.b64  	%rd6918, %rd6917, %rd6916;
	shf.l.wrap.b32 	%r5539, %r5533, %r5534, 23;
	shf.l.wrap.b32 	%r5540, %r5534, %r5533, 23;
	mov.b64 	%rd6919, {%r5540, %r5539};
	xor.b64  	%rd6920, %rd6918, %rd6919;
	xor.b64  	%rd6921, %rd6878, %rd6854;
	and.b64  	%rd6922, %rd6902, %rd6921;
	xor.b64  	%rd6923, %rd6922, %rd6854;
	add.s64 	%rd6924, %rd6915, %rd6923;
	add.s64 	%rd6925, %rd6924, %rd6920;
	add.s64 	%rd6926, %rd6925, %rd6841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5541,%dummy}, %rd6913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5542}, %rd6913;
	}
	shf.r.wrap.b32 	%r5543, %r5542, %r5541, 28;
	shf.r.wrap.b32 	%r5544, %r5541, %r5542, 28;
	mov.b64 	%rd6927, {%r5544, %r5543};
	shf.l.wrap.b32 	%r5545, %r5541, %r5542, 30;
	shf.l.wrap.b32 	%r5546, %r5542, %r5541, 30;
	mov.b64 	%rd6928, {%r5546, %r5545};
	xor.b64  	%rd6929, %rd6928, %rd6927;
	shf.l.wrap.b32 	%r5547, %r5541, %r5542, 25;
	shf.l.wrap.b32 	%r5548, %r5542, %r5541, 25;
	mov.b64 	%rd6930, {%r5548, %r5547};
	xor.b64  	%rd6931, %rd6929, %rd6930;
	xor.b64  	%rd6932, %rd6913, %rd6865;
	xor.b64  	%rd6933, %rd6913, %rd6889;
	and.b64  	%rd6934, %rd6933, %rd6932;
	xor.b64  	%rd6935, %rd6934, %rd6913;
	add.s64 	%rd6936, %rd6925, %rd6935;
	add.s64 	%rd6937, %rd6936, %rd6931;
	add.s64 	%rd6939, %rd9975, %rd6854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5549,%dummy}, %rd6926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5550}, %rd6926;
	}
	shf.r.wrap.b32 	%r5551, %r5550, %r5549, 14;
	shf.r.wrap.b32 	%r5552, %r5549, %r5550, 14;
	mov.b64 	%rd6940, {%r5552, %r5551};
	shf.r.wrap.b32 	%r5553, %r5550, %r5549, 18;
	shf.r.wrap.b32 	%r5554, %r5549, %r5550, 18;
	mov.b64 	%rd6941, {%r5554, %r5553};
	xor.b64  	%rd6942, %rd6941, %rd6940;
	shf.l.wrap.b32 	%r5555, %r5549, %r5550, 23;
	shf.l.wrap.b32 	%r5556, %r5550, %r5549, 23;
	mov.b64 	%rd6943, {%r5556, %r5555};
	xor.b64  	%rd6944, %rd6942, %rd6943;
	xor.b64  	%rd6945, %rd6902, %rd6878;
	and.b64  	%rd6946, %rd6926, %rd6945;
	xor.b64  	%rd6947, %rd6946, %rd6878;
	add.s64 	%rd6948, %rd6939, %rd6947;
	add.s64 	%rd6949, %rd6948, %rd6944;
	add.s64 	%rd6950, %rd6949, %rd6865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5557,%dummy}, %rd6937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5558}, %rd6937;
	}
	shf.r.wrap.b32 	%r5559, %r5558, %r5557, 28;
	shf.r.wrap.b32 	%r5560, %r5557, %r5558, 28;
	mov.b64 	%rd6951, {%r5560, %r5559};
	shf.l.wrap.b32 	%r5561, %r5557, %r5558, 30;
	shf.l.wrap.b32 	%r5562, %r5558, %r5557, 30;
	mov.b64 	%rd6952, {%r5562, %r5561};
	xor.b64  	%rd6953, %rd6952, %rd6951;
	shf.l.wrap.b32 	%r5563, %r5557, %r5558, 25;
	shf.l.wrap.b32 	%r5564, %r5558, %r5557, 25;
	mov.b64 	%rd6954, {%r5564, %r5563};
	xor.b64  	%rd6955, %rd6953, %rd6954;
	xor.b64  	%rd6956, %rd6937, %rd6889;
	xor.b64  	%rd6957, %rd6937, %rd6913;
	and.b64  	%rd6958, %rd6957, %rd6956;
	xor.b64  	%rd6959, %rd6958, %rd6937;
	add.s64 	%rd6960, %rd6949, %rd6959;
	add.s64 	%rd6961, %rd6960, %rd6955;
	add.s64 	%rd6963, %rd9976, %rd6878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5565,%dummy}, %rd6950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5566}, %rd6950;
	}
	shf.r.wrap.b32 	%r5567, %r5566, %r5565, 14;
	shf.r.wrap.b32 	%r5568, %r5565, %r5566, 14;
	mov.b64 	%rd6964, {%r5568, %r5567};
	shf.r.wrap.b32 	%r5569, %r5566, %r5565, 18;
	shf.r.wrap.b32 	%r5570, %r5565, %r5566, 18;
	mov.b64 	%rd6965, {%r5570, %r5569};
	xor.b64  	%rd6966, %rd6965, %rd6964;
	shf.l.wrap.b32 	%r5571, %r5565, %r5566, 23;
	shf.l.wrap.b32 	%r5572, %r5566, %r5565, 23;
	mov.b64 	%rd6967, {%r5572, %r5571};
	xor.b64  	%rd6968, %rd6966, %rd6967;
	xor.b64  	%rd6969, %rd6926, %rd6902;
	and.b64  	%rd6970, %rd6950, %rd6969;
	xor.b64  	%rd6971, %rd6970, %rd6902;
	add.s64 	%rd6972, %rd6963, %rd6971;
	add.s64 	%rd6973, %rd6972, %rd6968;
	add.s64 	%rd6974, %rd6973, %rd6889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5573,%dummy}, %rd6961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5574}, %rd6961;
	}
	shf.r.wrap.b32 	%r5575, %r5574, %r5573, 28;
	shf.r.wrap.b32 	%r5576, %r5573, %r5574, 28;
	mov.b64 	%rd6975, {%r5576, %r5575};
	shf.l.wrap.b32 	%r5577, %r5573, %r5574, 30;
	shf.l.wrap.b32 	%r5578, %r5574, %r5573, 30;
	mov.b64 	%rd6976, {%r5578, %r5577};
	xor.b64  	%rd6977, %rd6976, %rd6975;
	shf.l.wrap.b32 	%r5579, %r5573, %r5574, 25;
	shf.l.wrap.b32 	%r5580, %r5574, %r5573, 25;
	mov.b64 	%rd6978, {%r5580, %r5579};
	xor.b64  	%rd6979, %rd6977, %rd6978;
	xor.b64  	%rd6980, %rd6961, %rd6913;
	xor.b64  	%rd6981, %rd6961, %rd6937;
	and.b64  	%rd6982, %rd6981, %rd6980;
	xor.b64  	%rd6983, %rd6982, %rd6961;
	add.s64 	%rd6984, %rd6973, %rd6983;
	add.s64 	%rd6985, %rd6984, %rd6979;
	add.s64 	%rd6987, %rd9977, %rd6902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5581,%dummy}, %rd6974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5582}, %rd6974;
	}
	shf.r.wrap.b32 	%r5583, %r5582, %r5581, 14;
	shf.r.wrap.b32 	%r5584, %r5581, %r5582, 14;
	mov.b64 	%rd6988, {%r5584, %r5583};
	shf.r.wrap.b32 	%r5585, %r5582, %r5581, 18;
	shf.r.wrap.b32 	%r5586, %r5581, %r5582, 18;
	mov.b64 	%rd6989, {%r5586, %r5585};
	xor.b64  	%rd6990, %rd6989, %rd6988;
	shf.l.wrap.b32 	%r5587, %r5581, %r5582, 23;
	shf.l.wrap.b32 	%r5588, %r5582, %r5581, 23;
	mov.b64 	%rd6991, {%r5588, %r5587};
	xor.b64  	%rd6992, %rd6990, %rd6991;
	xor.b64  	%rd6993, %rd6950, %rd6926;
	and.b64  	%rd6994, %rd6974, %rd6993;
	xor.b64  	%rd6995, %rd6994, %rd6926;
	add.s64 	%rd6996, %rd6987, %rd6995;
	add.s64 	%rd6997, %rd6996, %rd6992;
	add.s64 	%rd6998, %rd6997, %rd6913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5589,%dummy}, %rd6985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5590}, %rd6985;
	}
	shf.r.wrap.b32 	%r5591, %r5590, %r5589, 28;
	shf.r.wrap.b32 	%r5592, %r5589, %r5590, 28;
	mov.b64 	%rd6999, {%r5592, %r5591};
	shf.l.wrap.b32 	%r5593, %r5589, %r5590, 30;
	shf.l.wrap.b32 	%r5594, %r5590, %r5589, 30;
	mov.b64 	%rd7000, {%r5594, %r5593};
	xor.b64  	%rd7001, %rd7000, %rd6999;
	shf.l.wrap.b32 	%r5595, %r5589, %r5590, 25;
	shf.l.wrap.b32 	%r5596, %r5590, %r5589, 25;
	mov.b64 	%rd7002, {%r5596, %r5595};
	xor.b64  	%rd7003, %rd7001, %rd7002;
	xor.b64  	%rd7004, %rd6985, %rd6937;
	xor.b64  	%rd7005, %rd6985, %rd6961;
	and.b64  	%rd7006, %rd7005, %rd7004;
	xor.b64  	%rd7007, %rd7006, %rd6985;
	add.s64 	%rd7008, %rd6997, %rd7007;
	add.s64 	%rd7009, %rd7008, %rd7003;
	add.s64 	%rd7011, %rd9978, %rd6926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5597,%dummy}, %rd6998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5598}, %rd6998;
	}
	shf.r.wrap.b32 	%r5599, %r5598, %r5597, 14;
	shf.r.wrap.b32 	%r5600, %r5597, %r5598, 14;
	mov.b64 	%rd7012, {%r5600, %r5599};
	shf.r.wrap.b32 	%r5601, %r5598, %r5597, 18;
	shf.r.wrap.b32 	%r5602, %r5597, %r5598, 18;
	mov.b64 	%rd7013, {%r5602, %r5601};
	xor.b64  	%rd7014, %rd7013, %rd7012;
	shf.l.wrap.b32 	%r5603, %r5597, %r5598, 23;
	shf.l.wrap.b32 	%r5604, %r5598, %r5597, 23;
	mov.b64 	%rd7015, {%r5604, %r5603};
	xor.b64  	%rd7016, %rd7014, %rd7015;
	xor.b64  	%rd7017, %rd6974, %rd6950;
	and.b64  	%rd7018, %rd6998, %rd7017;
	xor.b64  	%rd7019, %rd7018, %rd6950;
	add.s64 	%rd7020, %rd7011, %rd7019;
	add.s64 	%rd7021, %rd7020, %rd7016;
	add.s64 	%rd7022, %rd7021, %rd6937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5605,%dummy}, %rd7009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5606}, %rd7009;
	}
	shf.r.wrap.b32 	%r5607, %r5606, %r5605, 28;
	shf.r.wrap.b32 	%r5608, %r5605, %r5606, 28;
	mov.b64 	%rd7023, {%r5608, %r5607};
	shf.l.wrap.b32 	%r5609, %r5605, %r5606, 30;
	shf.l.wrap.b32 	%r5610, %r5606, %r5605, 30;
	mov.b64 	%rd7024, {%r5610, %r5609};
	xor.b64  	%rd7025, %rd7024, %rd7023;
	shf.l.wrap.b32 	%r5611, %r5605, %r5606, 25;
	shf.l.wrap.b32 	%r5612, %r5606, %r5605, 25;
	mov.b64 	%rd7026, {%r5612, %r5611};
	xor.b64  	%rd7027, %rd7025, %rd7026;
	xor.b64  	%rd7028, %rd7009, %rd6961;
	xor.b64  	%rd7029, %rd7009, %rd6985;
	and.b64  	%rd7030, %rd7029, %rd7028;
	xor.b64  	%rd7031, %rd7030, %rd7009;
	add.s64 	%rd7032, %rd7021, %rd7031;
	add.s64 	%rd7033, %rd7032, %rd7027;
	add.s64 	%rd7035, %rd9979, %rd6950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5613,%dummy}, %rd7022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5614}, %rd7022;
	}
	shf.r.wrap.b32 	%r5615, %r5614, %r5613, 14;
	shf.r.wrap.b32 	%r5616, %r5613, %r5614, 14;
	mov.b64 	%rd7036, {%r5616, %r5615};
	shf.r.wrap.b32 	%r5617, %r5614, %r5613, 18;
	shf.r.wrap.b32 	%r5618, %r5613, %r5614, 18;
	mov.b64 	%rd7037, {%r5618, %r5617};
	xor.b64  	%rd7038, %rd7037, %rd7036;
	shf.l.wrap.b32 	%r5619, %r5613, %r5614, 23;
	shf.l.wrap.b32 	%r5620, %r5614, %r5613, 23;
	mov.b64 	%rd7039, {%r5620, %r5619};
	xor.b64  	%rd7040, %rd7038, %rd7039;
	xor.b64  	%rd7041, %rd6998, %rd6974;
	and.b64  	%rd7042, %rd7022, %rd7041;
	xor.b64  	%rd7043, %rd7042, %rd6974;
	add.s64 	%rd7044, %rd7035, %rd7043;
	add.s64 	%rd7045, %rd7044, %rd7040;
	add.s64 	%rd7046, %rd7045, %rd6961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5621,%dummy}, %rd7033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5622}, %rd7033;
	}
	shf.r.wrap.b32 	%r5623, %r5622, %r5621, 28;
	shf.r.wrap.b32 	%r5624, %r5621, %r5622, 28;
	mov.b64 	%rd7047, {%r5624, %r5623};
	shf.l.wrap.b32 	%r5625, %r5621, %r5622, 30;
	shf.l.wrap.b32 	%r5626, %r5622, %r5621, 30;
	mov.b64 	%rd7048, {%r5626, %r5625};
	xor.b64  	%rd7049, %rd7048, %rd7047;
	shf.l.wrap.b32 	%r5627, %r5621, %r5622, 25;
	shf.l.wrap.b32 	%r5628, %r5622, %r5621, 25;
	mov.b64 	%rd7050, {%r5628, %r5627};
	xor.b64  	%rd7051, %rd7049, %rd7050;
	xor.b64  	%rd7052, %rd7033, %rd6985;
	xor.b64  	%rd7053, %rd7033, %rd7009;
	and.b64  	%rd7054, %rd7053, %rd7052;
	xor.b64  	%rd7055, %rd7054, %rd7033;
	add.s64 	%rd7056, %rd7045, %rd7055;
	add.s64 	%rd7057, %rd7056, %rd7051;
	add.s64 	%rd7059, %rd9980, %rd6974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5629,%dummy}, %rd7046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5630}, %rd7046;
	}
	shf.r.wrap.b32 	%r5631, %r5630, %r5629, 14;
	shf.r.wrap.b32 	%r5632, %r5629, %r5630, 14;
	mov.b64 	%rd7060, {%r5632, %r5631};
	shf.r.wrap.b32 	%r5633, %r5630, %r5629, 18;
	shf.r.wrap.b32 	%r5634, %r5629, %r5630, 18;
	mov.b64 	%rd7061, {%r5634, %r5633};
	xor.b64  	%rd7062, %rd7061, %rd7060;
	shf.l.wrap.b32 	%r5635, %r5629, %r5630, 23;
	shf.l.wrap.b32 	%r5636, %r5630, %r5629, 23;
	mov.b64 	%rd7063, {%r5636, %r5635};
	xor.b64  	%rd7064, %rd7062, %rd7063;
	xor.b64  	%rd7065, %rd7022, %rd6998;
	and.b64  	%rd7066, %rd7046, %rd7065;
	xor.b64  	%rd7067, %rd7066, %rd6998;
	add.s64 	%rd7068, %rd7059, %rd7067;
	add.s64 	%rd7069, %rd7068, %rd7064;
	add.s64 	%rd7070, %rd7069, %rd6985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5637,%dummy}, %rd7057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5638}, %rd7057;
	}
	shf.r.wrap.b32 	%r5639, %r5638, %r5637, 28;
	shf.r.wrap.b32 	%r5640, %r5637, %r5638, 28;
	mov.b64 	%rd7071, {%r5640, %r5639};
	shf.l.wrap.b32 	%r5641, %r5637, %r5638, 30;
	shf.l.wrap.b32 	%r5642, %r5638, %r5637, 30;
	mov.b64 	%rd7072, {%r5642, %r5641};
	xor.b64  	%rd7073, %rd7072, %rd7071;
	shf.l.wrap.b32 	%r5643, %r5637, %r5638, 25;
	shf.l.wrap.b32 	%r5644, %r5638, %r5637, 25;
	mov.b64 	%rd7074, {%r5644, %r5643};
	xor.b64  	%rd7075, %rd7073, %rd7074;
	xor.b64  	%rd7076, %rd7057, %rd7009;
	xor.b64  	%rd7077, %rd7057, %rd7033;
	and.b64  	%rd7078, %rd7077, %rd7076;
	xor.b64  	%rd7079, %rd7078, %rd7057;
	add.s64 	%rd7080, %rd7069, %rd7079;
	add.s64 	%rd7081, %rd7080, %rd7075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5645,%dummy}, %rd7070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5646}, %rd7070;
	}
	shf.r.wrap.b32 	%r5647, %r5646, %r5645, 14;
	shf.r.wrap.b32 	%r5648, %r5645, %r5646, 14;
	mov.b64 	%rd7082, {%r5648, %r5647};
	shf.r.wrap.b32 	%r5649, %r5646, %r5645, 18;
	shf.r.wrap.b32 	%r5650, %r5645, %r5646, 18;
	mov.b64 	%rd7083, {%r5650, %r5649};
	xor.b64  	%rd7084, %rd7083, %rd7082;
	shf.l.wrap.b32 	%r5651, %r5645, %r5646, 23;
	shf.l.wrap.b32 	%r5652, %r5646, %r5645, 23;
	mov.b64 	%rd7085, {%r5652, %r5651};
	xor.b64  	%rd7086, %rd7084, %rd7085;
	xor.b64  	%rd7087, %rd7046, %rd7022;
	and.b64  	%rd7088, %rd7070, %rd7087;
	xor.b64  	%rd7089, %rd7088, %rd7022;
	add.s64 	%rd7091, %rd6998, %rd9981;
	add.s64 	%rd7092, %rd7091, %rd7089;
	add.s64 	%rd7093, %rd7092, %rd7086;
	add.s64 	%rd7094, %rd7093, 128;
	add.s64 	%rd7095, %rd7094, %rd7009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5653,%dummy}, %rd7081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5654}, %rd7081;
	}
	shf.r.wrap.b32 	%r5655, %r5654, %r5653, 28;
	shf.r.wrap.b32 	%r5656, %r5653, %r5654, 28;
	mov.b64 	%rd7096, {%r5656, %r5655};
	shf.l.wrap.b32 	%r5657, %r5653, %r5654, 30;
	shf.l.wrap.b32 	%r5658, %r5654, %r5653, 30;
	mov.b64 	%rd7097, {%r5658, %r5657};
	xor.b64  	%rd7098, %rd7097, %rd7096;
	shf.l.wrap.b32 	%r5659, %r5653, %r5654, 25;
	shf.l.wrap.b32 	%r5660, %r5654, %r5653, 25;
	mov.b64 	%rd7099, {%r5660, %r5659};
	xor.b64  	%rd7100, %rd7098, %rd7099;
	xor.b64  	%rd7101, %rd7081, %rd7033;
	xor.b64  	%rd7102, %rd7081, %rd7057;
	and.b64  	%rd7103, %rd7102, %rd7101;
	xor.b64  	%rd7104, %rd7103, %rd7081;
	add.s64 	%rd7105, %rd7094, %rd7104;
	add.s64 	%rd7106, %rd7105, %rd7100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5661,%dummy}, %rd6740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5662}, %rd6740;
	}
	shf.r.wrap.b32 	%r5663, %r5662, %r5661, 1;
	shf.r.wrap.b32 	%r5664, %r5661, %r5662, 1;
	mov.b64 	%rd7107, {%r5664, %r5663};
	shf.r.wrap.b32 	%r5665, %r5662, %r5661, 8;
	shf.r.wrap.b32 	%r5666, %r5661, %r5662, 8;
	mov.b64 	%rd7108, {%r5666, %r5665};
	shr.u64 	%rd7109, %rd6740, 7;
	xor.b64  	%rd7110, %rd7107, %rd7109;
	xor.b64  	%rd7111, %rd7110, %rd7108;
	add.s64 	%rd7112, %rd6739, %rd2;
	add.s64 	%rd7113, %rd7112, %rd7111;
	mov.u64 	%rd7114, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5667,%dummy}, %rd7114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5668}, %rd7114;
	}
	shf.r.wrap.b32 	%r5669, %r5668, %r5667, 19;
	shf.r.wrap.b32 	%r5670, %r5667, %r5668, 19;
	mov.b64 	%rd7115, {%r5670, %r5669};
	shf.l.wrap.b32 	%r5671, %r5667, %r5668, 3;
	shf.l.wrap.b32 	%r5672, %r5668, %r5667, 3;
	mov.b64 	%rd7116, {%r5672, %r5671};
	xor.b64  	%rd7117, %rd7115, %rd7116;
	xor.b64  	%rd7118, %rd7117, 2;
	add.s64 	%rd7119, %rd6740, %rd7118;
	add.s64 	%rd7120, %rd7119, %rd3;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5673,%dummy}, %rd7113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5674}, %rd7113;
	}
	shf.r.wrap.b32 	%r5675, %r5674, %r5673, 19;
	shf.r.wrap.b32 	%r5676, %r5673, %r5674, 19;
	mov.b64 	%rd7121, {%r5676, %r5675};
	shf.l.wrap.b32 	%r5677, %r5673, %r5674, 3;
	shf.l.wrap.b32 	%r5678, %r5674, %r5673, 3;
	mov.b64 	%rd7122, {%r5678, %r5677};
	shr.u64 	%rd7123, %rd7113, 6;
	xor.b64  	%rd7124, %rd7121, %rd7123;
	xor.b64  	%rd7125, %rd7124, %rd7122;
	xor.b64  	%rd7126, %rd7125, -9223372036854775808;
	add.s64 	%rd7127, %rd7126, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5679,%dummy}, %rd7120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5680}, %rd7120;
	}
	shf.r.wrap.b32 	%r5681, %r5680, %r5679, 19;
	shf.r.wrap.b32 	%r5682, %r5679, %r5680, 19;
	mov.b64 	%rd7128, {%r5682, %r5681};
	shf.l.wrap.b32 	%r5683, %r5679, %r5680, 3;
	shf.l.wrap.b32 	%r5684, %r5680, %r5679, 3;
	mov.b64 	%rd7129, {%r5684, %r5683};
	shr.u64 	%rd7130, %rd7120, 6;
	xor.b64  	%rd7131, %rd7128, %rd7130;
	xor.b64  	%rd7132, %rd7131, %rd7129;
	add.s64 	%rd7133, %rd7132, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5685,%dummy}, %rd7127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5686}, %rd7127;
	}
	shf.r.wrap.b32 	%r5687, %r5686, %r5685, 19;
	shf.r.wrap.b32 	%r5688, %r5685, %r5686, 19;
	mov.b64 	%rd7134, {%r5688, %r5687};
	shf.l.wrap.b32 	%r5689, %r5685, %r5686, 3;
	shf.l.wrap.b32 	%r5690, %r5686, %r5685, 3;
	mov.b64 	%rd7135, {%r5690, %r5689};
	shr.u64 	%rd7136, %rd7127, 6;
	xor.b64  	%rd7137, %rd7134, %rd7136;
	xor.b64  	%rd7138, %rd7137, %rd7135;
	add.s64 	%rd7139, %rd7138, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5691,%dummy}, %rd7133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5692}, %rd7133;
	}
	shf.r.wrap.b32 	%r5693, %r5692, %r5691, 19;
	shf.r.wrap.b32 	%r5694, %r5691, %r5692, 19;
	mov.b64 	%rd7140, {%r5694, %r5693};
	shf.l.wrap.b32 	%r5695, %r5691, %r5692, 3;
	shf.l.wrap.b32 	%r5696, %r5692, %r5691, 3;
	mov.b64 	%rd7141, {%r5696, %r5695};
	shr.u64 	%rd7142, %rd7133, 6;
	xor.b64  	%rd7143, %rd7140, %rd7142;
	xor.b64  	%rd7144, %rd7143, %rd7141;
	add.s64 	%rd7145, %rd7144, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5697,%dummy}, %rd7139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5698}, %rd7139;
	}
	shf.r.wrap.b32 	%r5699, %r5698, %r5697, 19;
	shf.r.wrap.b32 	%r5700, %r5697, %r5698, 19;
	mov.b64 	%rd7146, {%r5700, %r5699};
	shf.l.wrap.b32 	%r5701, %r5697, %r5698, 3;
	shf.l.wrap.b32 	%r5702, %r5698, %r5697, 3;
	mov.b64 	%rd7147, {%r5702, %r5701};
	shr.u64 	%rd7148, %rd7139, 6;
	xor.b64  	%rd7149, %rd7146, %rd7148;
	xor.b64  	%rd7150, %rd7149, %rd7147;
	add.s64 	%rd7151, %rd7150, %rd4;
	add.s64 	%rd7152, %rd7151, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5703,%dummy}, %rd7145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5704}, %rd7145;
	}
	shf.r.wrap.b32 	%r5705, %r5704, %r5703, 19;
	shf.r.wrap.b32 	%r5706, %r5703, %r5704, 19;
	mov.b64 	%rd7153, {%r5706, %r5705};
	shf.l.wrap.b32 	%r5707, %r5703, %r5704, 3;
	shf.l.wrap.b32 	%r5708, %r5704, %r5703, 3;
	mov.b64 	%rd7154, {%r5708, %r5707};
	shr.u64 	%rd7155, %rd7145, 6;
	xor.b64  	%rd7156, %rd7153, %rd7155;
	xor.b64  	%rd7157, %rd7156, %rd7154;
	add.s64 	%rd7158, %rd7113, %rd7157;
	add.s64 	%rd7159, %rd7158, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5709,%dummy}, %rd7152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5710}, %rd7152;
	}
	shf.r.wrap.b32 	%r5711, %r5710, %r5709, 19;
	shf.r.wrap.b32 	%r5712, %r5709, %r5710, 19;
	mov.b64 	%rd7160, {%r5712, %r5711};
	shf.l.wrap.b32 	%r5713, %r5709, %r5710, 3;
	shf.l.wrap.b32 	%r5714, %r5710, %r5709, 3;
	mov.b64 	%rd7161, {%r5714, %r5713};
	shr.u64 	%rd7162, %rd7152, 6;
	xor.b64  	%rd7163, %rd7160, %rd7162;
	xor.b64  	%rd7164, %rd7163, %rd7161;
	add.s64 	%rd7165, %rd7120, %rd7164;
	add.s64 	%rd7166, %rd7165, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5715,%dummy}, %rd7159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5716}, %rd7159;
	}
	shf.r.wrap.b32 	%r5717, %r5716, %r5715, 19;
	shf.r.wrap.b32 	%r5718, %r5715, %r5716, 19;
	mov.b64 	%rd7167, {%r5718, %r5717};
	shf.l.wrap.b32 	%r5719, %r5715, %r5716, 3;
	shf.l.wrap.b32 	%r5720, %r5716, %r5715, 3;
	mov.b64 	%rd7168, {%r5720, %r5719};
	shr.u64 	%rd7169, %rd7159, 6;
	xor.b64  	%rd7170, %rd7167, %rd7169;
	xor.b64  	%rd7171, %rd7170, %rd7168;
	add.s64 	%rd7172, %rd7127, %rd7171;
	add.s64 	%rd7173, %rd7172, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5721,%dummy}, %rd7166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5722}, %rd7166;
	}
	shf.r.wrap.b32 	%r5723, %r5722, %r5721, 19;
	shf.r.wrap.b32 	%r5724, %r5721, %r5722, 19;
	mov.b64 	%rd7174, {%r5724, %r5723};
	shf.l.wrap.b32 	%r5725, %r5721, %r5722, 3;
	shf.l.wrap.b32 	%r5726, %r5722, %r5721, 3;
	mov.b64 	%rd7175, {%r5726, %r5725};
	shr.u64 	%rd7176, %rd7166, 6;
	xor.b64  	%rd7177, %rd7174, %rd7176;
	xor.b64  	%rd7178, %rd7177, %rd7175;
	add.s64 	%rd7179, %rd7133, %rd7178;
	add.s64 	%rd7180, %rd7179, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5727,%dummy}, %rd7173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5728}, %rd7173;
	}
	shf.r.wrap.b32 	%r5729, %r5728, %r5727, 19;
	shf.r.wrap.b32 	%r5730, %r5727, %r5728, 19;
	mov.b64 	%rd7181, {%r5730, %r5729};
	shf.l.wrap.b32 	%r5731, %r5727, %r5728, 3;
	shf.l.wrap.b32 	%r5732, %r5728, %r5727, 3;
	mov.b64 	%rd7182, {%r5732, %r5731};
	shr.u64 	%rd7183, %rd7173, 6;
	xor.b64  	%rd7184, %rd7181, %rd7183;
	xor.b64  	%rd7185, %rd7184, %rd7182;
	add.s64 	%rd7186, %rd7139, %rd7185;
	add.s64 	%rd7187, %rd7186, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5733,%dummy}, %rd7180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5734}, %rd7180;
	}
	shf.r.wrap.b32 	%r5735, %r5734, %r5733, 19;
	shf.r.wrap.b32 	%r5736, %r5733, %r5734, 19;
	mov.b64 	%rd7188, {%r5736, %r5735};
	shf.l.wrap.b32 	%r5737, %r5733, %r5734, 3;
	shf.l.wrap.b32 	%r5738, %r5734, %r5733, 3;
	mov.b64 	%rd7189, {%r5738, %r5737};
	shr.u64 	%rd7190, %rd7180, 6;
	xor.b64  	%rd7191, %rd7188, %rd7190;
	xor.b64  	%rd7192, %rd7191, %rd7189;
	add.s64 	%rd7193, %rd7145, %rd7192;
	add.s64 	%rd7194, %rd7193, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5739,%dummy}, %rd7187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5740}, %rd7187;
	}
	shf.r.wrap.b32 	%r5741, %r5740, %r5739, 19;
	shf.r.wrap.b32 	%r5742, %r5739, %r5740, 19;
	mov.b64 	%rd7195, {%r5742, %r5741};
	shf.l.wrap.b32 	%r5743, %r5739, %r5740, 3;
	shf.l.wrap.b32 	%r5744, %r5740, %r5739, 3;
	mov.b64 	%rd7196, {%r5744, %r5743};
	shr.u64 	%rd7197, %rd7187, 6;
	xor.b64  	%rd7198, %rd7195, %rd7197;
	xor.b64  	%rd7199, %rd7198, %rd7196;
	add.s64 	%rd7200, %rd7152, %rd7199;
	add.s64 	%rd7201, %rd7200, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5745,%dummy}, %rd7194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5746}, %rd7194;
	}
	shf.r.wrap.b32 	%r5747, %r5746, %r5745, 19;
	shf.r.wrap.b32 	%r5748, %r5745, %r5746, 19;
	mov.b64 	%rd7202, {%r5748, %r5747};
	shf.l.wrap.b32 	%r5749, %r5745, %r5746, 3;
	shf.l.wrap.b32 	%r5750, %r5746, %r5745, 3;
	mov.b64 	%rd7203, {%r5750, %r5749};
	shr.u64 	%rd7204, %rd7194, 6;
	xor.b64  	%rd7205, %rd7202, %rd7204;
	xor.b64  	%rd7206, %rd7205, %rd7203;
	shf.r.wrap.b32 	%r5751, %r5668, %r5667, 1;
	shf.r.wrap.b32 	%r5752, %r5667, %r5668, 1;
	mov.b64 	%rd7207, {%r5752, %r5751};
	shf.r.wrap.b32 	%r5753, %r5668, %r5667, 8;
	shf.r.wrap.b32 	%r5754, %r5667, %r5668, 8;
	mov.b64 	%rd7208, {%r5754, %r5753};
	xor.b64  	%rd7209, %rd7207, %rd7208;
	xor.b64  	%rd7210, %rd7209, 1;
	add.s64 	%rd7211, %rd7159, %rd7206;
	add.s64 	%rd7212, %rd7211, %rd7210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5755,%dummy}, %rd7201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5756}, %rd7201;
	}
	shf.r.wrap.b32 	%r5757, %r5756, %r5755, 19;
	shf.r.wrap.b32 	%r5758, %r5755, %r5756, 19;
	mov.b64 	%rd7213, {%r5758, %r5757};
	shf.l.wrap.b32 	%r5759, %r5755, %r5756, 3;
	shf.l.wrap.b32 	%r5760, %r5756, %r5755, 3;
	mov.b64 	%rd7214, {%r5760, %r5759};
	shr.u64 	%rd7215, %rd7201, 6;
	xor.b64  	%rd7216, %rd7213, %rd7215;
	xor.b64  	%rd7217, %rd7216, %rd7214;
	shf.r.wrap.b32 	%r5761, %r5674, %r5673, 1;
	shf.r.wrap.b32 	%r5762, %r5673, %r5674, 1;
	mov.b64 	%rd7218, {%r5762, %r5761};
	shf.r.wrap.b32 	%r5763, %r5674, %r5673, 8;
	shf.r.wrap.b32 	%r5764, %r5673, %r5674, 8;
	mov.b64 	%rd7219, {%r5764, %r5763};
	shr.u64 	%rd7220, %rd7113, 7;
	xor.b64  	%rd7221, %rd7218, %rd7220;
	xor.b64  	%rd7222, %rd7221, %rd7219;
	add.s64 	%rd7223, %rd7166, %rd7217;
	add.s64 	%rd7224, %rd7223, %rd7222;
	add.s64 	%rd7225, %rd7224, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5765,%dummy}, %rd7095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5766}, %rd7095;
	}
	shf.r.wrap.b32 	%r5767, %r5766, %r5765, 14;
	shf.r.wrap.b32 	%r5768, %r5765, %r5766, 14;
	mov.b64 	%rd7226, {%r5768, %r5767};
	shf.r.wrap.b32 	%r5769, %r5766, %r5765, 18;
	shf.r.wrap.b32 	%r5770, %r5765, %r5766, 18;
	mov.b64 	%rd7227, {%r5770, %r5769};
	xor.b64  	%rd7228, %rd7227, %rd7226;
	shf.l.wrap.b32 	%r5771, %r5765, %r5766, 23;
	shf.l.wrap.b32 	%r5772, %r5766, %r5765, 23;
	mov.b64 	%rd7229, {%r5772, %r5771};
	xor.b64  	%rd7230, %rd7228, %rd7229;
	xor.b64  	%rd7231, %rd7070, %rd7046;
	and.b64  	%rd7232, %rd7231, %rd7095;
	xor.b64  	%rd7233, %rd7232, %rd7046;
	add.s64 	%rd7234, %rd7233, %rd7022;
	add.s64 	%rd7235, %rd7234, %rd7113;
	add.s64 	%rd7237, %rd7235, %rd9982;
	add.s64 	%rd7238, %rd7237, %rd7230;
	add.s64 	%rd7239, %rd7238, %rd7033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5773,%dummy}, %rd7106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5774}, %rd7106;
	}
	shf.r.wrap.b32 	%r5775, %r5774, %r5773, 28;
	shf.r.wrap.b32 	%r5776, %r5773, %r5774, 28;
	mov.b64 	%rd7240, {%r5776, %r5775};
	shf.l.wrap.b32 	%r5777, %r5773, %r5774, 30;
	shf.l.wrap.b32 	%r5778, %r5774, %r5773, 30;
	mov.b64 	%rd7241, {%r5778, %r5777};
	xor.b64  	%rd7242, %rd7241, %rd7240;
	shf.l.wrap.b32 	%r5779, %r5773, %r5774, 25;
	shf.l.wrap.b32 	%r5780, %r5774, %r5773, 25;
	mov.b64 	%rd7243, {%r5780, %r5779};
	xor.b64  	%rd7244, %rd7242, %rd7243;
	xor.b64  	%rd7245, %rd7106, %rd7057;
	xor.b64  	%rd7246, %rd7106, %rd7081;
	and.b64  	%rd7247, %rd7246, %rd7245;
	xor.b64  	%rd7248, %rd7247, %rd7106;
	add.s64 	%rd7249, %rd7238, %rd7248;
	add.s64 	%rd7250, %rd7249, %rd7244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5781,%dummy}, %rd7239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5782}, %rd7239;
	}
	shf.r.wrap.b32 	%r5783, %r5782, %r5781, 14;
	shf.r.wrap.b32 	%r5784, %r5781, %r5782, 14;
	mov.b64 	%rd7251, {%r5784, %r5783};
	shf.r.wrap.b32 	%r5785, %r5782, %r5781, 18;
	shf.r.wrap.b32 	%r5786, %r5781, %r5782, 18;
	mov.b64 	%rd7252, {%r5786, %r5785};
	xor.b64  	%rd7253, %rd7252, %rd7251;
	shf.l.wrap.b32 	%r5787, %r5781, %r5782, 23;
	shf.l.wrap.b32 	%r5788, %r5782, %r5781, 23;
	mov.b64 	%rd7254, {%r5788, %r5787};
	xor.b64  	%rd7255, %rd7253, %rd7254;
	xor.b64  	%rd7256, %rd7095, %rd7070;
	and.b64  	%rd7257, %rd7239, %rd7256;
	xor.b64  	%rd7258, %rd7257, %rd7070;
	add.s64 	%rd7259, %rd7120, %rd7046;
	add.s64 	%rd7261, %rd7259, %rd9983;
	add.s64 	%rd7262, %rd7261, %rd7258;
	add.s64 	%rd7263, %rd7262, %rd7255;
	add.s64 	%rd7264, %rd7263, %rd7057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5789,%dummy}, %rd7250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5790}, %rd7250;
	}
	shf.r.wrap.b32 	%r5791, %r5790, %r5789, 28;
	shf.r.wrap.b32 	%r5792, %r5789, %r5790, 28;
	mov.b64 	%rd7265, {%r5792, %r5791};
	shf.l.wrap.b32 	%r5793, %r5789, %r5790, 30;
	shf.l.wrap.b32 	%r5794, %r5790, %r5789, 30;
	mov.b64 	%rd7266, {%r5794, %r5793};
	xor.b64  	%rd7267, %rd7266, %rd7265;
	shf.l.wrap.b32 	%r5795, %r5789, %r5790, 25;
	shf.l.wrap.b32 	%r5796, %r5790, %r5789, 25;
	mov.b64 	%rd7268, {%r5796, %r5795};
	xor.b64  	%rd7269, %rd7267, %rd7268;
	xor.b64  	%rd7270, %rd7250, %rd7081;
	xor.b64  	%rd7271, %rd7250, %rd7106;
	and.b64  	%rd7272, %rd7271, %rd7270;
	xor.b64  	%rd7273, %rd7272, %rd7250;
	add.s64 	%rd7274, %rd7263, %rd7273;
	add.s64 	%rd7275, %rd7274, %rd7269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5797,%dummy}, %rd7264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5798}, %rd7264;
	}
	shf.r.wrap.b32 	%r5799, %r5798, %r5797, 14;
	shf.r.wrap.b32 	%r5800, %r5797, %r5798, 14;
	mov.b64 	%rd7276, {%r5800, %r5799};
	shf.r.wrap.b32 	%r5801, %r5798, %r5797, 18;
	shf.r.wrap.b32 	%r5802, %r5797, %r5798, 18;
	mov.b64 	%rd7277, {%r5802, %r5801};
	xor.b64  	%rd7278, %rd7277, %rd7276;
	shf.l.wrap.b32 	%r5803, %r5797, %r5798, 23;
	shf.l.wrap.b32 	%r5804, %r5798, %r5797, 23;
	mov.b64 	%rd7279, {%r5804, %r5803};
	xor.b64  	%rd7280, %rd7278, %rd7279;
	xor.b64  	%rd7281, %rd7239, %rd7095;
	and.b64  	%rd7282, %rd7264, %rd7281;
	xor.b64  	%rd7283, %rd7282, %rd7095;
	add.s64 	%rd7284, %rd7127, %rd7070;
	add.s64 	%rd7286, %rd7284, %rd9984;
	add.s64 	%rd7287, %rd7286, %rd7283;
	add.s64 	%rd7288, %rd7287, %rd7280;
	add.s64 	%rd7289, %rd7288, %rd7081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5805,%dummy}, %rd7275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5806}, %rd7275;
	}
	shf.r.wrap.b32 	%r5807, %r5806, %r5805, 28;
	shf.r.wrap.b32 	%r5808, %r5805, %r5806, 28;
	mov.b64 	%rd7290, {%r5808, %r5807};
	shf.l.wrap.b32 	%r5809, %r5805, %r5806, 30;
	shf.l.wrap.b32 	%r5810, %r5806, %r5805, 30;
	mov.b64 	%rd7291, {%r5810, %r5809};
	xor.b64  	%rd7292, %rd7291, %rd7290;
	shf.l.wrap.b32 	%r5811, %r5805, %r5806, 25;
	shf.l.wrap.b32 	%r5812, %r5806, %r5805, 25;
	mov.b64 	%rd7293, {%r5812, %r5811};
	xor.b64  	%rd7294, %rd7292, %rd7293;
	xor.b64  	%rd7295, %rd7275, %rd7106;
	xor.b64  	%rd7296, %rd7275, %rd7250;
	and.b64  	%rd7297, %rd7296, %rd7295;
	xor.b64  	%rd7298, %rd7297, %rd7275;
	add.s64 	%rd7299, %rd7288, %rd7298;
	add.s64 	%rd7300, %rd7299, %rd7294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5813,%dummy}, %rd7289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5814}, %rd7289;
	}
	shf.r.wrap.b32 	%r5815, %r5814, %r5813, 14;
	shf.r.wrap.b32 	%r5816, %r5813, %r5814, 14;
	mov.b64 	%rd7301, {%r5816, %r5815};
	shf.r.wrap.b32 	%r5817, %r5814, %r5813, 18;
	shf.r.wrap.b32 	%r5818, %r5813, %r5814, 18;
	mov.b64 	%rd7302, {%r5818, %r5817};
	xor.b64  	%rd7303, %rd7302, %rd7301;
	shf.l.wrap.b32 	%r5819, %r5813, %r5814, 23;
	shf.l.wrap.b32 	%r5820, %r5814, %r5813, 23;
	mov.b64 	%rd7304, {%r5820, %r5819};
	xor.b64  	%rd7305, %rd7303, %rd7304;
	xor.b64  	%rd7306, %rd7264, %rd7239;
	and.b64  	%rd7307, %rd7289, %rd7306;
	xor.b64  	%rd7308, %rd7307, %rd7239;
	add.s64 	%rd7309, %rd7133, %rd7095;
	add.s64 	%rd7311, %rd7309, %rd9985;
	add.s64 	%rd7312, %rd7311, %rd7308;
	add.s64 	%rd7313, %rd7312, %rd7305;
	add.s64 	%rd7314, %rd7313, %rd7106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5821,%dummy}, %rd7300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5822}, %rd7300;
	}
	shf.r.wrap.b32 	%r5823, %r5822, %r5821, 28;
	shf.r.wrap.b32 	%r5824, %r5821, %r5822, 28;
	mov.b64 	%rd7315, {%r5824, %r5823};
	shf.l.wrap.b32 	%r5825, %r5821, %r5822, 30;
	shf.l.wrap.b32 	%r5826, %r5822, %r5821, 30;
	mov.b64 	%rd7316, {%r5826, %r5825};
	xor.b64  	%rd7317, %rd7316, %rd7315;
	shf.l.wrap.b32 	%r5827, %r5821, %r5822, 25;
	shf.l.wrap.b32 	%r5828, %r5822, %r5821, 25;
	mov.b64 	%rd7318, {%r5828, %r5827};
	xor.b64  	%rd7319, %rd7317, %rd7318;
	xor.b64  	%rd7320, %rd7300, %rd7250;
	xor.b64  	%rd7321, %rd7300, %rd7275;
	and.b64  	%rd7322, %rd7321, %rd7320;
	xor.b64  	%rd7323, %rd7322, %rd7300;
	add.s64 	%rd7324, %rd7313, %rd7323;
	add.s64 	%rd7325, %rd7324, %rd7319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5829,%dummy}, %rd7314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5830}, %rd7314;
	}
	shf.r.wrap.b32 	%r5831, %r5830, %r5829, 14;
	shf.r.wrap.b32 	%r5832, %r5829, %r5830, 14;
	mov.b64 	%rd7326, {%r5832, %r5831};
	shf.r.wrap.b32 	%r5833, %r5830, %r5829, 18;
	shf.r.wrap.b32 	%r5834, %r5829, %r5830, 18;
	mov.b64 	%rd7327, {%r5834, %r5833};
	xor.b64  	%rd7328, %rd7327, %rd7326;
	shf.l.wrap.b32 	%r5835, %r5829, %r5830, 23;
	shf.l.wrap.b32 	%r5836, %r5830, %r5829, 23;
	mov.b64 	%rd7329, {%r5836, %r5835};
	xor.b64  	%rd7330, %rd7328, %rd7329;
	xor.b64  	%rd7331, %rd7289, %rd7264;
	and.b64  	%rd7332, %rd7314, %rd7331;
	xor.b64  	%rd7333, %rd7332, %rd7264;
	add.s64 	%rd7334, %rd7239, %rd7139;
	add.s64 	%rd7336, %rd7334, %rd9986;
	add.s64 	%rd7337, %rd7336, %rd7333;
	add.s64 	%rd7338, %rd7337, %rd7330;
	add.s64 	%rd7339, %rd7338, %rd7250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5837,%dummy}, %rd7325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5838}, %rd7325;
	}
	shf.r.wrap.b32 	%r5839, %r5838, %r5837, 28;
	shf.r.wrap.b32 	%r5840, %r5837, %r5838, 28;
	mov.b64 	%rd7340, {%r5840, %r5839};
	shf.l.wrap.b32 	%r5841, %r5837, %r5838, 30;
	shf.l.wrap.b32 	%r5842, %r5838, %r5837, 30;
	mov.b64 	%rd7341, {%r5842, %r5841};
	xor.b64  	%rd7342, %rd7341, %rd7340;
	shf.l.wrap.b32 	%r5843, %r5837, %r5838, 25;
	shf.l.wrap.b32 	%r5844, %r5838, %r5837, 25;
	mov.b64 	%rd7343, {%r5844, %r5843};
	xor.b64  	%rd7344, %rd7342, %rd7343;
	xor.b64  	%rd7345, %rd7325, %rd7275;
	xor.b64  	%rd7346, %rd7325, %rd7300;
	and.b64  	%rd7347, %rd7346, %rd7345;
	xor.b64  	%rd7348, %rd7347, %rd7325;
	add.s64 	%rd7349, %rd7338, %rd7348;
	add.s64 	%rd7350, %rd7349, %rd7344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5845,%dummy}, %rd7339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5846}, %rd7339;
	}
	shf.r.wrap.b32 	%r5847, %r5846, %r5845, 14;
	shf.r.wrap.b32 	%r5848, %r5845, %r5846, 14;
	mov.b64 	%rd7351, {%r5848, %r5847};
	shf.r.wrap.b32 	%r5849, %r5846, %r5845, 18;
	shf.r.wrap.b32 	%r5850, %r5845, %r5846, 18;
	mov.b64 	%rd7352, {%r5850, %r5849};
	xor.b64  	%rd7353, %rd7352, %rd7351;
	shf.l.wrap.b32 	%r5851, %r5845, %r5846, 23;
	shf.l.wrap.b32 	%r5852, %r5846, %r5845, 23;
	mov.b64 	%rd7354, {%r5852, %r5851};
	xor.b64  	%rd7355, %rd7353, %rd7354;
	xor.b64  	%rd7356, %rd7314, %rd7289;
	and.b64  	%rd7357, %rd7339, %rd7356;
	xor.b64  	%rd7358, %rd7357, %rd7289;
	add.s64 	%rd7359, %rd7264, %rd7145;
	add.s64 	%rd7361, %rd7359, %rd9987;
	add.s64 	%rd7362, %rd7361, %rd7358;
	add.s64 	%rd7363, %rd7362, %rd7355;
	add.s64 	%rd7364, %rd7363, %rd7275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5853,%dummy}, %rd7350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5854}, %rd7350;
	}
	shf.r.wrap.b32 	%r5855, %r5854, %r5853, 28;
	shf.r.wrap.b32 	%r5856, %r5853, %r5854, 28;
	mov.b64 	%rd7365, {%r5856, %r5855};
	shf.l.wrap.b32 	%r5857, %r5853, %r5854, 30;
	shf.l.wrap.b32 	%r5858, %r5854, %r5853, 30;
	mov.b64 	%rd7366, {%r5858, %r5857};
	xor.b64  	%rd7367, %rd7366, %rd7365;
	shf.l.wrap.b32 	%r5859, %r5853, %r5854, 25;
	shf.l.wrap.b32 	%r5860, %r5854, %r5853, 25;
	mov.b64 	%rd7368, {%r5860, %r5859};
	xor.b64  	%rd7369, %rd7367, %rd7368;
	xor.b64  	%rd7370, %rd7350, %rd7300;
	xor.b64  	%rd7371, %rd7350, %rd7325;
	and.b64  	%rd7372, %rd7371, %rd7370;
	xor.b64  	%rd7373, %rd7372, %rd7350;
	add.s64 	%rd7374, %rd7363, %rd7373;
	add.s64 	%rd7375, %rd7374, %rd7369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5861,%dummy}, %rd7364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5862}, %rd7364;
	}
	shf.r.wrap.b32 	%r5863, %r5862, %r5861, 14;
	shf.r.wrap.b32 	%r5864, %r5861, %r5862, 14;
	mov.b64 	%rd7376, {%r5864, %r5863};
	shf.r.wrap.b32 	%r5865, %r5862, %r5861, 18;
	shf.r.wrap.b32 	%r5866, %r5861, %r5862, 18;
	mov.b64 	%rd7377, {%r5866, %r5865};
	xor.b64  	%rd7378, %rd7377, %rd7376;
	shf.l.wrap.b32 	%r5867, %r5861, %r5862, 23;
	shf.l.wrap.b32 	%r5868, %r5862, %r5861, 23;
	mov.b64 	%rd7379, {%r5868, %r5867};
	xor.b64  	%rd7380, %rd7378, %rd7379;
	xor.b64  	%rd7381, %rd7339, %rd7314;
	and.b64  	%rd7382, %rd7364, %rd7381;
	xor.b64  	%rd7383, %rd7382, %rd7314;
	add.s64 	%rd7384, %rd7289, %rd7152;
	add.s64 	%rd7386, %rd7384, %rd9988;
	add.s64 	%rd7387, %rd7386, %rd7383;
	add.s64 	%rd7388, %rd7387, %rd7380;
	add.s64 	%rd7389, %rd7388, %rd7300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5869,%dummy}, %rd7375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5870}, %rd7375;
	}
	shf.r.wrap.b32 	%r5871, %r5870, %r5869, 28;
	shf.r.wrap.b32 	%r5872, %r5869, %r5870, 28;
	mov.b64 	%rd7390, {%r5872, %r5871};
	shf.l.wrap.b32 	%r5873, %r5869, %r5870, 30;
	shf.l.wrap.b32 	%r5874, %r5870, %r5869, 30;
	mov.b64 	%rd7391, {%r5874, %r5873};
	xor.b64  	%rd7392, %rd7391, %rd7390;
	shf.l.wrap.b32 	%r5875, %r5869, %r5870, 25;
	shf.l.wrap.b32 	%r5876, %r5870, %r5869, 25;
	mov.b64 	%rd7393, {%r5876, %r5875};
	xor.b64  	%rd7394, %rd7392, %rd7393;
	xor.b64  	%rd7395, %rd7375, %rd7325;
	xor.b64  	%rd7396, %rd7375, %rd7350;
	and.b64  	%rd7397, %rd7396, %rd7395;
	xor.b64  	%rd7398, %rd7397, %rd7375;
	add.s64 	%rd7399, %rd7388, %rd7398;
	add.s64 	%rd7400, %rd7399, %rd7394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5877,%dummy}, %rd7389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5878}, %rd7389;
	}
	shf.r.wrap.b32 	%r5879, %r5878, %r5877, 14;
	shf.r.wrap.b32 	%r5880, %r5877, %r5878, 14;
	mov.b64 	%rd7401, {%r5880, %r5879};
	shf.r.wrap.b32 	%r5881, %r5878, %r5877, 18;
	shf.r.wrap.b32 	%r5882, %r5877, %r5878, 18;
	mov.b64 	%rd7402, {%r5882, %r5881};
	xor.b64  	%rd7403, %rd7402, %rd7401;
	shf.l.wrap.b32 	%r5883, %r5877, %r5878, 23;
	shf.l.wrap.b32 	%r5884, %r5878, %r5877, 23;
	mov.b64 	%rd7404, {%r5884, %r5883};
	xor.b64  	%rd7405, %rd7403, %rd7404;
	xor.b64  	%rd7406, %rd7364, %rd7339;
	and.b64  	%rd7407, %rd7389, %rd7406;
	xor.b64  	%rd7408, %rd7407, %rd7339;
	add.s64 	%rd7409, %rd7314, %rd7159;
	add.s64 	%rd7411, %rd7409, %rd9989;
	add.s64 	%rd7412, %rd7411, %rd7408;
	add.s64 	%rd7413, %rd7412, %rd7405;
	add.s64 	%rd7414, %rd7413, %rd7325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5885,%dummy}, %rd7400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5886}, %rd7400;
	}
	shf.r.wrap.b32 	%r5887, %r5886, %r5885, 28;
	shf.r.wrap.b32 	%r5888, %r5885, %r5886, 28;
	mov.b64 	%rd7415, {%r5888, %r5887};
	shf.l.wrap.b32 	%r5889, %r5885, %r5886, 30;
	shf.l.wrap.b32 	%r5890, %r5886, %r5885, 30;
	mov.b64 	%rd7416, {%r5890, %r5889};
	xor.b64  	%rd7417, %rd7416, %rd7415;
	shf.l.wrap.b32 	%r5891, %r5885, %r5886, 25;
	shf.l.wrap.b32 	%r5892, %r5886, %r5885, 25;
	mov.b64 	%rd7418, {%r5892, %r5891};
	xor.b64  	%rd7419, %rd7417, %rd7418;
	xor.b64  	%rd7420, %rd7400, %rd7350;
	xor.b64  	%rd7421, %rd7400, %rd7375;
	and.b64  	%rd7422, %rd7421, %rd7420;
	xor.b64  	%rd7423, %rd7422, %rd7400;
	add.s64 	%rd7424, %rd7413, %rd7423;
	add.s64 	%rd7425, %rd7424, %rd7419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5893,%dummy}, %rd7414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5894}, %rd7414;
	}
	shf.r.wrap.b32 	%r5895, %r5894, %r5893, 14;
	shf.r.wrap.b32 	%r5896, %r5893, %r5894, 14;
	mov.b64 	%rd7426, {%r5896, %r5895};
	shf.r.wrap.b32 	%r5897, %r5894, %r5893, 18;
	shf.r.wrap.b32 	%r5898, %r5893, %r5894, 18;
	mov.b64 	%rd7427, {%r5898, %r5897};
	xor.b64  	%rd7428, %rd7427, %rd7426;
	shf.l.wrap.b32 	%r5899, %r5893, %r5894, 23;
	shf.l.wrap.b32 	%r5900, %r5894, %r5893, 23;
	mov.b64 	%rd7429, {%r5900, %r5899};
	xor.b64  	%rd7430, %rd7428, %rd7429;
	xor.b64  	%rd7431, %rd7389, %rd7364;
	and.b64  	%rd7432, %rd7414, %rd7431;
	xor.b64  	%rd7433, %rd7432, %rd7364;
	add.s64 	%rd7434, %rd7339, %rd7166;
	add.s64 	%rd7436, %rd7434, %rd9990;
	add.s64 	%rd7437, %rd7436, %rd7433;
	add.s64 	%rd7438, %rd7437, %rd7430;
	add.s64 	%rd7439, %rd7438, %rd7350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5901,%dummy}, %rd7425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5902}, %rd7425;
	}
	shf.r.wrap.b32 	%r5903, %r5902, %r5901, 28;
	shf.r.wrap.b32 	%r5904, %r5901, %r5902, 28;
	mov.b64 	%rd7440, {%r5904, %r5903};
	shf.l.wrap.b32 	%r5905, %r5901, %r5902, 30;
	shf.l.wrap.b32 	%r5906, %r5902, %r5901, 30;
	mov.b64 	%rd7441, {%r5906, %r5905};
	xor.b64  	%rd7442, %rd7441, %rd7440;
	shf.l.wrap.b32 	%r5907, %r5901, %r5902, 25;
	shf.l.wrap.b32 	%r5908, %r5902, %r5901, 25;
	mov.b64 	%rd7443, {%r5908, %r5907};
	xor.b64  	%rd7444, %rd7442, %rd7443;
	xor.b64  	%rd7445, %rd7425, %rd7375;
	xor.b64  	%rd7446, %rd7425, %rd7400;
	and.b64  	%rd7447, %rd7446, %rd7445;
	xor.b64  	%rd7448, %rd7447, %rd7425;
	add.s64 	%rd7449, %rd7438, %rd7448;
	add.s64 	%rd7450, %rd7449, %rd7444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5909,%dummy}, %rd7439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5910}, %rd7439;
	}
	shf.r.wrap.b32 	%r5911, %r5910, %r5909, 14;
	shf.r.wrap.b32 	%r5912, %r5909, %r5910, 14;
	mov.b64 	%rd7451, {%r5912, %r5911};
	shf.r.wrap.b32 	%r5913, %r5910, %r5909, 18;
	shf.r.wrap.b32 	%r5914, %r5909, %r5910, 18;
	mov.b64 	%rd7452, {%r5914, %r5913};
	xor.b64  	%rd7453, %rd7452, %rd7451;
	shf.l.wrap.b32 	%r5915, %r5909, %r5910, 23;
	shf.l.wrap.b32 	%r5916, %r5910, %r5909, 23;
	mov.b64 	%rd7454, {%r5916, %r5915};
	xor.b64  	%rd7455, %rd7453, %rd7454;
	xor.b64  	%rd7456, %rd7414, %rd7389;
	and.b64  	%rd7457, %rd7439, %rd7456;
	xor.b64  	%rd7458, %rd7457, %rd7389;
	add.s64 	%rd7459, %rd7364, %rd7173;
	add.s64 	%rd7461, %rd7459, %rd9991;
	add.s64 	%rd7462, %rd7461, %rd7458;
	add.s64 	%rd7463, %rd7462, %rd7455;
	add.s64 	%rd7464, %rd7463, %rd7375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5917,%dummy}, %rd7450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5918}, %rd7450;
	}
	shf.r.wrap.b32 	%r5919, %r5918, %r5917, 28;
	shf.r.wrap.b32 	%r5920, %r5917, %r5918, 28;
	mov.b64 	%rd7465, {%r5920, %r5919};
	shf.l.wrap.b32 	%r5921, %r5917, %r5918, 30;
	shf.l.wrap.b32 	%r5922, %r5918, %r5917, 30;
	mov.b64 	%rd7466, {%r5922, %r5921};
	xor.b64  	%rd7467, %rd7466, %rd7465;
	shf.l.wrap.b32 	%r5923, %r5917, %r5918, 25;
	shf.l.wrap.b32 	%r5924, %r5918, %r5917, 25;
	mov.b64 	%rd7468, {%r5924, %r5923};
	xor.b64  	%rd7469, %rd7467, %rd7468;
	xor.b64  	%rd7470, %rd7450, %rd7400;
	xor.b64  	%rd7471, %rd7450, %rd7425;
	and.b64  	%rd7472, %rd7471, %rd7470;
	xor.b64  	%rd7473, %rd7472, %rd7450;
	add.s64 	%rd7474, %rd7463, %rd7473;
	add.s64 	%rd7475, %rd7474, %rd7469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5925,%dummy}, %rd7464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5926}, %rd7464;
	}
	shf.r.wrap.b32 	%r5927, %r5926, %r5925, 14;
	shf.r.wrap.b32 	%r5928, %r5925, %r5926, 14;
	mov.b64 	%rd7476, {%r5928, %r5927};
	shf.r.wrap.b32 	%r5929, %r5926, %r5925, 18;
	shf.r.wrap.b32 	%r5930, %r5925, %r5926, 18;
	mov.b64 	%rd7477, {%r5930, %r5929};
	xor.b64  	%rd7478, %rd7477, %rd7476;
	shf.l.wrap.b32 	%r5931, %r5925, %r5926, 23;
	shf.l.wrap.b32 	%r5932, %r5926, %r5925, 23;
	mov.b64 	%rd7479, {%r5932, %r5931};
	xor.b64  	%rd7480, %rd7478, %rd7479;
	xor.b64  	%rd7481, %rd7439, %rd7414;
	and.b64  	%rd7482, %rd7464, %rd7481;
	xor.b64  	%rd7483, %rd7482, %rd7414;
	add.s64 	%rd7484, %rd7389, %rd7180;
	add.s64 	%rd7486, %rd7484, %rd9992;
	add.s64 	%rd7487, %rd7486, %rd7483;
	add.s64 	%rd7488, %rd7487, %rd7480;
	add.s64 	%rd7489, %rd7488, %rd7400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5933,%dummy}, %rd7475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5934}, %rd7475;
	}
	shf.r.wrap.b32 	%r5935, %r5934, %r5933, 28;
	shf.r.wrap.b32 	%r5936, %r5933, %r5934, 28;
	mov.b64 	%rd7490, {%r5936, %r5935};
	shf.l.wrap.b32 	%r5937, %r5933, %r5934, 30;
	shf.l.wrap.b32 	%r5938, %r5934, %r5933, 30;
	mov.b64 	%rd7491, {%r5938, %r5937};
	xor.b64  	%rd7492, %rd7491, %rd7490;
	shf.l.wrap.b32 	%r5939, %r5933, %r5934, 25;
	shf.l.wrap.b32 	%r5940, %r5934, %r5933, 25;
	mov.b64 	%rd7493, {%r5940, %r5939};
	xor.b64  	%rd7494, %rd7492, %rd7493;
	xor.b64  	%rd7495, %rd7475, %rd7425;
	xor.b64  	%rd7496, %rd7475, %rd7450;
	and.b64  	%rd7497, %rd7496, %rd7495;
	xor.b64  	%rd7498, %rd7497, %rd7475;
	add.s64 	%rd7499, %rd7488, %rd7498;
	add.s64 	%rd7500, %rd7499, %rd7494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5941,%dummy}, %rd7489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5942}, %rd7489;
	}
	shf.r.wrap.b32 	%r5943, %r5942, %r5941, 14;
	shf.r.wrap.b32 	%r5944, %r5941, %r5942, 14;
	mov.b64 	%rd7501, {%r5944, %r5943};
	shf.r.wrap.b32 	%r5945, %r5942, %r5941, 18;
	shf.r.wrap.b32 	%r5946, %r5941, %r5942, 18;
	mov.b64 	%rd7502, {%r5946, %r5945};
	xor.b64  	%rd7503, %rd7502, %rd7501;
	shf.l.wrap.b32 	%r5947, %r5941, %r5942, 23;
	shf.l.wrap.b32 	%r5948, %r5942, %r5941, 23;
	mov.b64 	%rd7504, {%r5948, %r5947};
	xor.b64  	%rd7505, %rd7503, %rd7504;
	xor.b64  	%rd7506, %rd7464, %rd7439;
	and.b64  	%rd7507, %rd7489, %rd7506;
	xor.b64  	%rd7508, %rd7507, %rd7439;
	add.s64 	%rd7509, %rd7414, %rd7187;
	add.s64 	%rd7511, %rd7509, %rd9993;
	add.s64 	%rd7512, %rd7511, %rd7508;
	add.s64 	%rd7513, %rd7512, %rd7505;
	add.s64 	%rd7514, %rd7513, %rd7425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5949,%dummy}, %rd7500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5950}, %rd7500;
	}
	shf.r.wrap.b32 	%r5951, %r5950, %r5949, 28;
	shf.r.wrap.b32 	%r5952, %r5949, %r5950, 28;
	mov.b64 	%rd7515, {%r5952, %r5951};
	shf.l.wrap.b32 	%r5953, %r5949, %r5950, 30;
	shf.l.wrap.b32 	%r5954, %r5950, %r5949, 30;
	mov.b64 	%rd7516, {%r5954, %r5953};
	xor.b64  	%rd7517, %rd7516, %rd7515;
	shf.l.wrap.b32 	%r5955, %r5949, %r5950, 25;
	shf.l.wrap.b32 	%r5956, %r5950, %r5949, 25;
	mov.b64 	%rd7518, {%r5956, %r5955};
	xor.b64  	%rd7519, %rd7517, %rd7518;
	xor.b64  	%rd7520, %rd7500, %rd7450;
	xor.b64  	%rd7521, %rd7500, %rd7475;
	and.b64  	%rd7522, %rd7521, %rd7520;
	xor.b64  	%rd7523, %rd7522, %rd7500;
	add.s64 	%rd7524, %rd7513, %rd7523;
	add.s64 	%rd7525, %rd7524, %rd7519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5957,%dummy}, %rd7514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5958}, %rd7514;
	}
	shf.r.wrap.b32 	%r5959, %r5958, %r5957, 14;
	shf.r.wrap.b32 	%r5960, %r5957, %r5958, 14;
	mov.b64 	%rd7526, {%r5960, %r5959};
	shf.r.wrap.b32 	%r5961, %r5958, %r5957, 18;
	shf.r.wrap.b32 	%r5962, %r5957, %r5958, 18;
	mov.b64 	%rd7527, {%r5962, %r5961};
	xor.b64  	%rd7528, %rd7527, %rd7526;
	shf.l.wrap.b32 	%r5963, %r5957, %r5958, 23;
	shf.l.wrap.b32 	%r5964, %r5958, %r5957, 23;
	mov.b64 	%rd7529, {%r5964, %r5963};
	xor.b64  	%rd7530, %rd7528, %rd7529;
	xor.b64  	%rd7531, %rd7489, %rd7464;
	and.b64  	%rd7532, %rd7514, %rd7531;
	xor.b64  	%rd7533, %rd7532, %rd7464;
	add.s64 	%rd7534, %rd7439, %rd7194;
	add.s64 	%rd7536, %rd7534, %rd9994;
	add.s64 	%rd7537, %rd7536, %rd7533;
	add.s64 	%rd7538, %rd7537, %rd7530;
	add.s64 	%rd7539, %rd7538, %rd7450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5965,%dummy}, %rd7525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5966}, %rd7525;
	}
	shf.r.wrap.b32 	%r5967, %r5966, %r5965, 28;
	shf.r.wrap.b32 	%r5968, %r5965, %r5966, 28;
	mov.b64 	%rd7540, {%r5968, %r5967};
	shf.l.wrap.b32 	%r5969, %r5965, %r5966, 30;
	shf.l.wrap.b32 	%r5970, %r5966, %r5965, 30;
	mov.b64 	%rd7541, {%r5970, %r5969};
	xor.b64  	%rd7542, %rd7541, %rd7540;
	shf.l.wrap.b32 	%r5971, %r5965, %r5966, 25;
	shf.l.wrap.b32 	%r5972, %r5966, %r5965, 25;
	mov.b64 	%rd7543, {%r5972, %r5971};
	xor.b64  	%rd7544, %rd7542, %rd7543;
	xor.b64  	%rd7545, %rd7525, %rd7475;
	xor.b64  	%rd7546, %rd7525, %rd7500;
	and.b64  	%rd7547, %rd7546, %rd7545;
	xor.b64  	%rd7548, %rd7547, %rd7525;
	add.s64 	%rd7549, %rd7538, %rd7548;
	add.s64 	%rd7550, %rd7549, %rd7544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5973,%dummy}, %rd7539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5974}, %rd7539;
	}
	shf.r.wrap.b32 	%r5975, %r5974, %r5973, 14;
	shf.r.wrap.b32 	%r5976, %r5973, %r5974, 14;
	mov.b64 	%rd7551, {%r5976, %r5975};
	shf.r.wrap.b32 	%r5977, %r5974, %r5973, 18;
	shf.r.wrap.b32 	%r5978, %r5973, %r5974, 18;
	mov.b64 	%rd7552, {%r5978, %r5977};
	xor.b64  	%rd7553, %rd7552, %rd7551;
	shf.l.wrap.b32 	%r5979, %r5973, %r5974, 23;
	shf.l.wrap.b32 	%r5980, %r5974, %r5973, 23;
	mov.b64 	%rd7554, {%r5980, %r5979};
	xor.b64  	%rd7555, %rd7553, %rd7554;
	xor.b64  	%rd7556, %rd7514, %rd7489;
	and.b64  	%rd7557, %rd7539, %rd7556;
	xor.b64  	%rd7558, %rd7557, %rd7489;
	add.s64 	%rd7559, %rd7464, %rd7201;
	add.s64 	%rd7561, %rd7559, %rd9995;
	add.s64 	%rd7562, %rd7561, %rd7558;
	add.s64 	%rd7563, %rd7562, %rd7555;
	add.s64 	%rd7564, %rd7563, %rd7475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5981,%dummy}, %rd7550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5982}, %rd7550;
	}
	shf.r.wrap.b32 	%r5983, %r5982, %r5981, 28;
	shf.r.wrap.b32 	%r5984, %r5981, %r5982, 28;
	mov.b64 	%rd7565, {%r5984, %r5983};
	shf.l.wrap.b32 	%r5985, %r5981, %r5982, 30;
	shf.l.wrap.b32 	%r5986, %r5982, %r5981, 30;
	mov.b64 	%rd7566, {%r5986, %r5985};
	xor.b64  	%rd7567, %rd7566, %rd7565;
	shf.l.wrap.b32 	%r5987, %r5981, %r5982, 25;
	shf.l.wrap.b32 	%r5988, %r5982, %r5981, 25;
	mov.b64 	%rd7568, {%r5988, %r5987};
	xor.b64  	%rd7569, %rd7567, %rd7568;
	xor.b64  	%rd7570, %rd7550, %rd7500;
	xor.b64  	%rd7571, %rd7550, %rd7525;
	and.b64  	%rd7572, %rd7571, %rd7570;
	xor.b64  	%rd7573, %rd7572, %rd7550;
	add.s64 	%rd7574, %rd7563, %rd7573;
	add.s64 	%rd7575, %rd7574, %rd7569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5989,%dummy}, %rd7564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5990}, %rd7564;
	}
	shf.r.wrap.b32 	%r5991, %r5990, %r5989, 14;
	shf.r.wrap.b32 	%r5992, %r5989, %r5990, 14;
	mov.b64 	%rd7576, {%r5992, %r5991};
	shf.r.wrap.b32 	%r5993, %r5990, %r5989, 18;
	shf.r.wrap.b32 	%r5994, %r5989, %r5990, 18;
	mov.b64 	%rd7577, {%r5994, %r5993};
	xor.b64  	%rd7578, %rd7577, %rd7576;
	shf.l.wrap.b32 	%r5995, %r5989, %r5990, 23;
	shf.l.wrap.b32 	%r5996, %r5990, %r5989, 23;
	mov.b64 	%rd7579, {%r5996, %r5995};
	xor.b64  	%rd7580, %rd7578, %rd7579;
	xor.b64  	%rd7581, %rd7539, %rd7514;
	and.b64  	%rd7582, %rd7564, %rd7581;
	xor.b64  	%rd7583, %rd7582, %rd7514;
	add.s64 	%rd7584, %rd7489, %rd7212;
	add.s64 	%rd7586, %rd7584, %rd9996;
	add.s64 	%rd7587, %rd7586, %rd7583;
	add.s64 	%rd7588, %rd7587, %rd7580;
	add.s64 	%rd7589, %rd7588, %rd7500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5997,%dummy}, %rd7575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5998}, %rd7575;
	}
	shf.r.wrap.b32 	%r5999, %r5998, %r5997, 28;
	shf.r.wrap.b32 	%r6000, %r5997, %r5998, 28;
	mov.b64 	%rd7590, {%r6000, %r5999};
	shf.l.wrap.b32 	%r6001, %r5997, %r5998, 30;
	shf.l.wrap.b32 	%r6002, %r5998, %r5997, 30;
	mov.b64 	%rd7591, {%r6002, %r6001};
	xor.b64  	%rd7592, %rd7591, %rd7590;
	shf.l.wrap.b32 	%r6003, %r5997, %r5998, 25;
	shf.l.wrap.b32 	%r6004, %r5998, %r5997, 25;
	mov.b64 	%rd7593, {%r6004, %r6003};
	xor.b64  	%rd7594, %rd7592, %rd7593;
	xor.b64  	%rd7595, %rd7575, %rd7525;
	xor.b64  	%rd7596, %rd7575, %rd7550;
	and.b64  	%rd7597, %rd7596, %rd7595;
	xor.b64  	%rd7598, %rd7597, %rd7575;
	add.s64 	%rd7599, %rd7588, %rd7598;
	add.s64 	%rd7600, %rd7599, %rd7594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6005,%dummy}, %rd7589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6006}, %rd7589;
	}
	shf.r.wrap.b32 	%r6007, %r6006, %r6005, 14;
	shf.r.wrap.b32 	%r6008, %r6005, %r6006, 14;
	mov.b64 	%rd7601, {%r6008, %r6007};
	shf.r.wrap.b32 	%r6009, %r6006, %r6005, 18;
	shf.r.wrap.b32 	%r6010, %r6005, %r6006, 18;
	mov.b64 	%rd7602, {%r6010, %r6009};
	xor.b64  	%rd7603, %rd7602, %rd7601;
	shf.l.wrap.b32 	%r6011, %r6005, %r6006, 23;
	shf.l.wrap.b32 	%r6012, %r6006, %r6005, 23;
	mov.b64 	%rd7604, {%r6012, %r6011};
	xor.b64  	%rd7605, %rd7603, %rd7604;
	xor.b64  	%rd7606, %rd7564, %rd7539;
	and.b64  	%rd7607, %rd7589, %rd7606;
	xor.b64  	%rd7608, %rd7607, %rd7539;
	add.s64 	%rd7609, %rd7514, %rd7225;
	add.s64 	%rd7611, %rd7609, %rd9997;
	add.s64 	%rd7612, %rd7611, %rd7608;
	add.s64 	%rd7613, %rd7612, %rd7605;
	add.s64 	%rd7614, %rd7613, %rd7525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6013,%dummy}, %rd7600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6014}, %rd7600;
	}
	shf.r.wrap.b32 	%r6015, %r6014, %r6013, 28;
	shf.r.wrap.b32 	%r6016, %r6013, %r6014, 28;
	mov.b64 	%rd7615, {%r6016, %r6015};
	shf.l.wrap.b32 	%r6017, %r6013, %r6014, 30;
	shf.l.wrap.b32 	%r6018, %r6014, %r6013, 30;
	mov.b64 	%rd7616, {%r6018, %r6017};
	xor.b64  	%rd7617, %rd7616, %rd7615;
	shf.l.wrap.b32 	%r6019, %r6013, %r6014, 25;
	shf.l.wrap.b32 	%r6020, %r6014, %r6013, 25;
	mov.b64 	%rd7618, {%r6020, %r6019};
	xor.b64  	%rd7619, %rd7617, %rd7618;
	xor.b64  	%rd7620, %rd7600, %rd7550;
	xor.b64  	%rd7621, %rd7600, %rd7575;
	and.b64  	%rd7622, %rd7621, %rd7620;
	xor.b64  	%rd7623, %rd7622, %rd7600;
	add.s64 	%rd7624, %rd7613, %rd7623;
	add.s64 	%rd7625, %rd7624, %rd7619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6021,%dummy}, %rd7212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6022}, %rd7212;
	}
	shf.r.wrap.b32 	%r6023, %r6022, %r6021, 19;
	shf.r.wrap.b32 	%r6024, %r6021, %r6022, 19;
	mov.b64 	%rd7626, {%r6024, %r6023};
	shf.l.wrap.b32 	%r6025, %r6021, %r6022, 3;
	shf.l.wrap.b32 	%r6026, %r6022, %r6021, 3;
	mov.b64 	%rd7627, {%r6026, %r6025};
	shr.u64 	%rd7628, %rd7212, 6;
	xor.b64  	%rd7629, %rd7626, %rd7628;
	xor.b64  	%rd7630, %rd7629, %rd7627;
	shf.r.wrap.b32 	%r6027, %r5680, %r5679, 1;
	shf.r.wrap.b32 	%r6028, %r5679, %r5680, 1;
	mov.b64 	%rd7631, {%r6028, %r6027};
	shf.r.wrap.b32 	%r6029, %r5680, %r5679, 8;
	shf.r.wrap.b32 	%r6030, %r5679, %r5680, 8;
	mov.b64 	%rd7632, {%r6030, %r6029};
	shr.u64 	%rd7633, %rd7120, 7;
	xor.b64  	%rd7634, %rd7631, %rd7633;
	xor.b64  	%rd7635, %rd7634, %rd7632;
	add.s64 	%rd7636, %rd7113, %rd7173;
	add.s64 	%rd7637, %rd7636, %rd7630;
	add.s64 	%rd7638, %rd7637, %rd7635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6031,%dummy}, %rd7225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6032}, %rd7225;
	}
	shf.r.wrap.b32 	%r6033, %r6032, %r6031, 19;
	shf.r.wrap.b32 	%r6034, %r6031, %r6032, 19;
	mov.b64 	%rd7639, {%r6034, %r6033};
	shf.l.wrap.b32 	%r6035, %r6031, %r6032, 3;
	shf.l.wrap.b32 	%r6036, %r6032, %r6031, 3;
	mov.b64 	%rd7640, {%r6036, %r6035};
	shr.u64 	%rd7641, %rd7225, 6;
	xor.b64  	%rd7642, %rd7639, %rd7641;
	xor.b64  	%rd7643, %rd7642, %rd7640;
	shf.r.wrap.b32 	%r6037, %r5686, %r5685, 1;
	shf.r.wrap.b32 	%r6038, %r5685, %r5686, 1;
	mov.b64 	%rd7644, {%r6038, %r6037};
	shf.r.wrap.b32 	%r6039, %r5686, %r5685, 8;
	shf.r.wrap.b32 	%r6040, %r5685, %r5686, 8;
	mov.b64 	%rd7645, {%r6040, %r6039};
	shr.u64 	%rd7646, %rd7127, 7;
	xor.b64  	%rd7647, %rd7644, %rd7646;
	xor.b64  	%rd7648, %rd7647, %rd7645;
	add.s64 	%rd7649, %rd7120, %rd7180;
	add.s64 	%rd7650, %rd7649, %rd7643;
	add.s64 	%rd7651, %rd7650, %rd7648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6041,%dummy}, %rd7638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6042}, %rd7638;
	}
	shf.r.wrap.b32 	%r6043, %r6042, %r6041, 19;
	shf.r.wrap.b32 	%r6044, %r6041, %r6042, 19;
	mov.b64 	%rd7652, {%r6044, %r6043};
	shf.l.wrap.b32 	%r6045, %r6041, %r6042, 3;
	shf.l.wrap.b32 	%r6046, %r6042, %r6041, 3;
	mov.b64 	%rd7653, {%r6046, %r6045};
	shr.u64 	%rd7654, %rd7638, 6;
	xor.b64  	%rd7655, %rd7652, %rd7654;
	xor.b64  	%rd7656, %rd7655, %rd7653;
	shf.r.wrap.b32 	%r6047, %r5692, %r5691, 1;
	shf.r.wrap.b32 	%r6048, %r5691, %r5692, 1;
	mov.b64 	%rd7657, {%r6048, %r6047};
	shf.r.wrap.b32 	%r6049, %r5692, %r5691, 8;
	shf.r.wrap.b32 	%r6050, %r5691, %r5692, 8;
	mov.b64 	%rd7658, {%r6050, %r6049};
	shr.u64 	%rd7659, %rd7133, 7;
	xor.b64  	%rd7660, %rd7657, %rd7659;
	xor.b64  	%rd7661, %rd7660, %rd7658;
	add.s64 	%rd7662, %rd7127, %rd7187;
	add.s64 	%rd7663, %rd7662, %rd7656;
	add.s64 	%rd7664, %rd7663, %rd7661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6051,%dummy}, %rd7651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6052}, %rd7651;
	}
	shf.r.wrap.b32 	%r6053, %r6052, %r6051, 19;
	shf.r.wrap.b32 	%r6054, %r6051, %r6052, 19;
	mov.b64 	%rd7665, {%r6054, %r6053};
	shf.l.wrap.b32 	%r6055, %r6051, %r6052, 3;
	shf.l.wrap.b32 	%r6056, %r6052, %r6051, 3;
	mov.b64 	%rd7666, {%r6056, %r6055};
	shr.u64 	%rd7667, %rd7651, 6;
	xor.b64  	%rd7668, %rd7665, %rd7667;
	xor.b64  	%rd7669, %rd7668, %rd7666;
	shf.r.wrap.b32 	%r6057, %r5698, %r5697, 1;
	shf.r.wrap.b32 	%r6058, %r5697, %r5698, 1;
	mov.b64 	%rd7670, {%r6058, %r6057};
	shf.r.wrap.b32 	%r6059, %r5698, %r5697, 8;
	shf.r.wrap.b32 	%r6060, %r5697, %r5698, 8;
	mov.b64 	%rd7671, {%r6060, %r6059};
	shr.u64 	%rd7672, %rd7139, 7;
	xor.b64  	%rd7673, %rd7670, %rd7672;
	xor.b64  	%rd7674, %rd7673, %rd7671;
	add.s64 	%rd7675, %rd7194, %rd7133;
	add.s64 	%rd7676, %rd7675, %rd7669;
	add.s64 	%rd7677, %rd7676, %rd7674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6061,%dummy}, %rd7664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6062}, %rd7664;
	}
	shf.r.wrap.b32 	%r6063, %r6062, %r6061, 19;
	shf.r.wrap.b32 	%r6064, %r6061, %r6062, 19;
	mov.b64 	%rd7678, {%r6064, %r6063};
	shf.l.wrap.b32 	%r6065, %r6061, %r6062, 3;
	shf.l.wrap.b32 	%r6066, %r6062, %r6061, 3;
	mov.b64 	%rd7679, {%r6066, %r6065};
	shr.u64 	%rd7680, %rd7664, 6;
	xor.b64  	%rd7681, %rd7678, %rd7680;
	xor.b64  	%rd7682, %rd7681, %rd7679;
	shf.r.wrap.b32 	%r6067, %r5704, %r5703, 1;
	shf.r.wrap.b32 	%r6068, %r5703, %r5704, 1;
	mov.b64 	%rd7683, {%r6068, %r6067};
	shf.r.wrap.b32 	%r6069, %r5704, %r5703, 8;
	shf.r.wrap.b32 	%r6070, %r5703, %r5704, 8;
	mov.b64 	%rd7684, {%r6070, %r6069};
	shr.u64 	%rd7685, %rd7145, 7;
	xor.b64  	%rd7686, %rd7683, %rd7685;
	xor.b64  	%rd7687, %rd7686, %rd7684;
	add.s64 	%rd7688, %rd7201, %rd7139;
	add.s64 	%rd7689, %rd7688, %rd7682;
	add.s64 	%rd7690, %rd7689, %rd7687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6071,%dummy}, %rd7677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6072}, %rd7677;
	}
	shf.r.wrap.b32 	%r6073, %r6072, %r6071, 19;
	shf.r.wrap.b32 	%r6074, %r6071, %r6072, 19;
	mov.b64 	%rd7691, {%r6074, %r6073};
	shf.l.wrap.b32 	%r6075, %r6071, %r6072, 3;
	shf.l.wrap.b32 	%r6076, %r6072, %r6071, 3;
	mov.b64 	%rd7692, {%r6076, %r6075};
	shr.u64 	%rd7693, %rd7677, 6;
	xor.b64  	%rd7694, %rd7691, %rd7693;
	xor.b64  	%rd7695, %rd7694, %rd7692;
	shf.r.wrap.b32 	%r6077, %r5710, %r5709, 1;
	shf.r.wrap.b32 	%r6078, %r5709, %r5710, 1;
	mov.b64 	%rd7696, {%r6078, %r6077};
	shf.r.wrap.b32 	%r6079, %r5710, %r5709, 8;
	shf.r.wrap.b32 	%r6080, %r5709, %r5710, 8;
	mov.b64 	%rd7697, {%r6080, %r6079};
	shr.u64 	%rd7698, %rd7152, 7;
	xor.b64  	%rd7699, %rd7696, %rd7698;
	xor.b64  	%rd7700, %rd7699, %rd7697;
	add.s64 	%rd7701, %rd7212, %rd7145;
	add.s64 	%rd7702, %rd7701, %rd7695;
	add.s64 	%rd7703, %rd7702, %rd7700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6081,%dummy}, %rd7690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6082}, %rd7690;
	}
	shf.r.wrap.b32 	%r6083, %r6082, %r6081, 19;
	shf.r.wrap.b32 	%r6084, %r6081, %r6082, 19;
	mov.b64 	%rd7704, {%r6084, %r6083};
	shf.l.wrap.b32 	%r6085, %r6081, %r6082, 3;
	shf.l.wrap.b32 	%r6086, %r6082, %r6081, 3;
	mov.b64 	%rd7705, {%r6086, %r6085};
	shr.u64 	%rd7706, %rd7690, 6;
	xor.b64  	%rd7707, %rd7704, %rd7706;
	xor.b64  	%rd7708, %rd7707, %rd7705;
	shf.r.wrap.b32 	%r6087, %r5716, %r5715, 1;
	shf.r.wrap.b32 	%r6088, %r5715, %r5716, 1;
	mov.b64 	%rd7709, {%r6088, %r6087};
	shf.r.wrap.b32 	%r6089, %r5716, %r5715, 8;
	shf.r.wrap.b32 	%r6090, %r5715, %r5716, 8;
	mov.b64 	%rd7710, {%r6090, %r6089};
	shr.u64 	%rd7711, %rd7159, 7;
	xor.b64  	%rd7712, %rd7709, %rd7711;
	xor.b64  	%rd7713, %rd7712, %rd7710;
	add.s64 	%rd7714, %rd7225, %rd7152;
	add.s64 	%rd7715, %rd7714, %rd7708;
	add.s64 	%rd7716, %rd7715, %rd7713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6091,%dummy}, %rd7703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6092}, %rd7703;
	}
	shf.r.wrap.b32 	%r6093, %r6092, %r6091, 19;
	shf.r.wrap.b32 	%r6094, %r6091, %r6092, 19;
	mov.b64 	%rd7717, {%r6094, %r6093};
	shf.l.wrap.b32 	%r6095, %r6091, %r6092, 3;
	shf.l.wrap.b32 	%r6096, %r6092, %r6091, 3;
	mov.b64 	%rd7718, {%r6096, %r6095};
	shr.u64 	%rd7719, %rd7703, 6;
	xor.b64  	%rd7720, %rd7717, %rd7719;
	xor.b64  	%rd7721, %rd7720, %rd7718;
	shf.r.wrap.b32 	%r6097, %r5722, %r5721, 1;
	shf.r.wrap.b32 	%r6098, %r5721, %r5722, 1;
	mov.b64 	%rd7722, {%r6098, %r6097};
	shf.r.wrap.b32 	%r6099, %r5722, %r5721, 8;
	shf.r.wrap.b32 	%r6100, %r5721, %r5722, 8;
	mov.b64 	%rd7723, {%r6100, %r6099};
	shr.u64 	%rd7724, %rd7166, 7;
	xor.b64  	%rd7725, %rd7722, %rd7724;
	xor.b64  	%rd7726, %rd7725, %rd7723;
	add.s64 	%rd7727, %rd7638, %rd7159;
	add.s64 	%rd7728, %rd7727, %rd7721;
	add.s64 	%rd7729, %rd7728, %rd7726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6101,%dummy}, %rd7716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6102}, %rd7716;
	}
	shf.r.wrap.b32 	%r6103, %r6102, %r6101, 19;
	shf.r.wrap.b32 	%r6104, %r6101, %r6102, 19;
	mov.b64 	%rd7730, {%r6104, %r6103};
	shf.l.wrap.b32 	%r6105, %r6101, %r6102, 3;
	shf.l.wrap.b32 	%r6106, %r6102, %r6101, 3;
	mov.b64 	%rd7731, {%r6106, %r6105};
	shr.u64 	%rd7732, %rd7716, 6;
	xor.b64  	%rd7733, %rd7730, %rd7732;
	xor.b64  	%rd7734, %rd7733, %rd7731;
	shf.r.wrap.b32 	%r6107, %r5728, %r5727, 1;
	shf.r.wrap.b32 	%r6108, %r5727, %r5728, 1;
	mov.b64 	%rd7735, {%r6108, %r6107};
	shf.r.wrap.b32 	%r6109, %r5728, %r5727, 8;
	shf.r.wrap.b32 	%r6110, %r5727, %r5728, 8;
	mov.b64 	%rd7736, {%r6110, %r6109};
	shr.u64 	%rd7737, %rd7173, 7;
	xor.b64  	%rd7738, %rd7735, %rd7737;
	xor.b64  	%rd7739, %rd7738, %rd7736;
	add.s64 	%rd7740, %rd7651, %rd7166;
	add.s64 	%rd7741, %rd7740, %rd7734;
	add.s64 	%rd7742, %rd7741, %rd7739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6111,%dummy}, %rd7729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6112}, %rd7729;
	}
	shf.r.wrap.b32 	%r6113, %r6112, %r6111, 19;
	shf.r.wrap.b32 	%r6114, %r6111, %r6112, 19;
	mov.b64 	%rd7743, {%r6114, %r6113};
	shf.l.wrap.b32 	%r6115, %r6111, %r6112, 3;
	shf.l.wrap.b32 	%r6116, %r6112, %r6111, 3;
	mov.b64 	%rd7744, {%r6116, %r6115};
	shr.u64 	%rd7745, %rd7729, 6;
	xor.b64  	%rd7746, %rd7743, %rd7745;
	xor.b64  	%rd7747, %rd7746, %rd7744;
	shf.r.wrap.b32 	%r6117, %r5734, %r5733, 1;
	shf.r.wrap.b32 	%r6118, %r5733, %r5734, 1;
	mov.b64 	%rd7748, {%r6118, %r6117};
	shf.r.wrap.b32 	%r6119, %r5734, %r5733, 8;
	shf.r.wrap.b32 	%r6120, %r5733, %r5734, 8;
	mov.b64 	%rd7749, {%r6120, %r6119};
	shr.u64 	%rd7750, %rd7180, 7;
	xor.b64  	%rd7751, %rd7748, %rd7750;
	xor.b64  	%rd7752, %rd7751, %rd7749;
	add.s64 	%rd7753, %rd7664, %rd7173;
	add.s64 	%rd7754, %rd7753, %rd7747;
	add.s64 	%rd7755, %rd7754, %rd7752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6121,%dummy}, %rd7742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6122}, %rd7742;
	}
	shf.r.wrap.b32 	%r6123, %r6122, %r6121, 19;
	shf.r.wrap.b32 	%r6124, %r6121, %r6122, 19;
	mov.b64 	%rd7756, {%r6124, %r6123};
	shf.l.wrap.b32 	%r6125, %r6121, %r6122, 3;
	shf.l.wrap.b32 	%r6126, %r6122, %r6121, 3;
	mov.b64 	%rd7757, {%r6126, %r6125};
	shr.u64 	%rd7758, %rd7742, 6;
	xor.b64  	%rd7759, %rd7756, %rd7758;
	xor.b64  	%rd7760, %rd7759, %rd7757;
	shf.r.wrap.b32 	%r6127, %r5740, %r5739, 1;
	shf.r.wrap.b32 	%r6128, %r5739, %r5740, 1;
	mov.b64 	%rd7761, {%r6128, %r6127};
	shf.r.wrap.b32 	%r6129, %r5740, %r5739, 8;
	shf.r.wrap.b32 	%r6130, %r5739, %r5740, 8;
	mov.b64 	%rd7762, {%r6130, %r6129};
	shr.u64 	%rd7763, %rd7187, 7;
	xor.b64  	%rd7764, %rd7761, %rd7763;
	xor.b64  	%rd7765, %rd7764, %rd7762;
	add.s64 	%rd7766, %rd7677, %rd7180;
	add.s64 	%rd7767, %rd7766, %rd7760;
	add.s64 	%rd7768, %rd7767, %rd7765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6131,%dummy}, %rd7755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6132}, %rd7755;
	}
	shf.r.wrap.b32 	%r6133, %r6132, %r6131, 19;
	shf.r.wrap.b32 	%r6134, %r6131, %r6132, 19;
	mov.b64 	%rd7769, {%r6134, %r6133};
	shf.l.wrap.b32 	%r6135, %r6131, %r6132, 3;
	shf.l.wrap.b32 	%r6136, %r6132, %r6131, 3;
	mov.b64 	%rd7770, {%r6136, %r6135};
	shr.u64 	%rd7771, %rd7755, 6;
	xor.b64  	%rd7772, %rd7769, %rd7771;
	xor.b64  	%rd7773, %rd7772, %rd7770;
	shf.r.wrap.b32 	%r6137, %r5746, %r5745, 1;
	shf.r.wrap.b32 	%r6138, %r5745, %r5746, 1;
	mov.b64 	%rd7774, {%r6138, %r6137};
	shf.r.wrap.b32 	%r6139, %r5746, %r5745, 8;
	shf.r.wrap.b32 	%r6140, %r5745, %r5746, 8;
	mov.b64 	%rd7775, {%r6140, %r6139};
	shr.u64 	%rd7776, %rd7194, 7;
	xor.b64  	%rd7777, %rd7774, %rd7776;
	xor.b64  	%rd7778, %rd7777, %rd7775;
	add.s64 	%rd7779, %rd7690, %rd7187;
	add.s64 	%rd7780, %rd7779, %rd7773;
	add.s64 	%rd7781, %rd7780, %rd7778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6141,%dummy}, %rd7768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6142}, %rd7768;
	}
	shf.r.wrap.b32 	%r6143, %r6142, %r6141, 19;
	shf.r.wrap.b32 	%r6144, %r6141, %r6142, 19;
	mov.b64 	%rd7782, {%r6144, %r6143};
	shf.l.wrap.b32 	%r6145, %r6141, %r6142, 3;
	shf.l.wrap.b32 	%r6146, %r6142, %r6141, 3;
	mov.b64 	%rd7783, {%r6146, %r6145};
	shr.u64 	%rd7784, %rd7768, 6;
	xor.b64  	%rd7785, %rd7782, %rd7784;
	xor.b64  	%rd7786, %rd7785, %rd7783;
	shf.r.wrap.b32 	%r6147, %r5756, %r5755, 1;
	shf.r.wrap.b32 	%r6148, %r5755, %r5756, 1;
	mov.b64 	%rd7787, {%r6148, %r6147};
	shf.r.wrap.b32 	%r6149, %r5756, %r5755, 8;
	shf.r.wrap.b32 	%r6150, %r5755, %r5756, 8;
	mov.b64 	%rd7788, {%r6150, %r6149};
	shr.u64 	%rd7789, %rd7201, 7;
	xor.b64  	%rd7790, %rd7787, %rd7789;
	xor.b64  	%rd7791, %rd7790, %rd7788;
	add.s64 	%rd7792, %rd7703, %rd7194;
	add.s64 	%rd7793, %rd7792, %rd7786;
	add.s64 	%rd7794, %rd7793, %rd7791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6151,%dummy}, %rd7781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6152}, %rd7781;
	}
	shf.r.wrap.b32 	%r6153, %r6152, %r6151, 19;
	shf.r.wrap.b32 	%r6154, %r6151, %r6152, 19;
	mov.b64 	%rd7795, {%r6154, %r6153};
	shf.l.wrap.b32 	%r6155, %r6151, %r6152, 3;
	shf.l.wrap.b32 	%r6156, %r6152, %r6151, 3;
	mov.b64 	%rd7796, {%r6156, %r6155};
	shr.u64 	%rd7797, %rd7781, 6;
	xor.b64  	%rd7798, %rd7795, %rd7797;
	xor.b64  	%rd7799, %rd7798, %rd7796;
	shf.r.wrap.b32 	%r6157, %r6022, %r6021, 1;
	shf.r.wrap.b32 	%r6158, %r6021, %r6022, 1;
	mov.b64 	%rd7800, {%r6158, %r6157};
	shf.r.wrap.b32 	%r6159, %r6022, %r6021, 8;
	shf.r.wrap.b32 	%r6160, %r6021, %r6022, 8;
	mov.b64 	%rd7801, {%r6160, %r6159};
	shr.u64 	%rd7802, %rd7212, 7;
	xor.b64  	%rd7803, %rd7800, %rd7802;
	xor.b64  	%rd7804, %rd7803, %rd7801;
	add.s64 	%rd7805, %rd7716, %rd7201;
	add.s64 	%rd7806, %rd7805, %rd7799;
	add.s64 	%rd7807, %rd7806, %rd7804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6161,%dummy}, %rd7794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6162}, %rd7794;
	}
	shf.r.wrap.b32 	%r6163, %r6162, %r6161, 19;
	shf.r.wrap.b32 	%r6164, %r6161, %r6162, 19;
	mov.b64 	%rd7808, {%r6164, %r6163};
	shf.l.wrap.b32 	%r6165, %r6161, %r6162, 3;
	shf.l.wrap.b32 	%r6166, %r6162, %r6161, 3;
	mov.b64 	%rd7809, {%r6166, %r6165};
	shr.u64 	%rd7810, %rd7794, 6;
	xor.b64  	%rd7811, %rd7808, %rd7810;
	xor.b64  	%rd7812, %rd7811, %rd7809;
	shf.r.wrap.b32 	%r6167, %r6032, %r6031, 1;
	shf.r.wrap.b32 	%r6168, %r6031, %r6032, 1;
	mov.b64 	%rd7813, {%r6168, %r6167};
	shf.r.wrap.b32 	%r6169, %r6032, %r6031, 8;
	shf.r.wrap.b32 	%r6170, %r6031, %r6032, 8;
	mov.b64 	%rd7814, {%r6170, %r6169};
	shr.u64 	%rd7815, %rd7225, 7;
	xor.b64  	%rd7816, %rd7813, %rd7815;
	xor.b64  	%rd7817, %rd7816, %rd7814;
	add.s64 	%rd7818, %rd7729, %rd7212;
	add.s64 	%rd7819, %rd7818, %rd7812;
	add.s64 	%rd7820, %rd7819, %rd7817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6171,%dummy}, %rd7807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6172}, %rd7807;
	}
	shf.r.wrap.b32 	%r6173, %r6172, %r6171, 19;
	shf.r.wrap.b32 	%r6174, %r6171, %r6172, 19;
	mov.b64 	%rd7821, {%r6174, %r6173};
	shf.l.wrap.b32 	%r6175, %r6171, %r6172, 3;
	shf.l.wrap.b32 	%r6176, %r6172, %r6171, 3;
	mov.b64 	%rd7822, {%r6176, %r6175};
	shr.u64 	%rd7823, %rd7807, 6;
	xor.b64  	%rd7824, %rd7821, %rd7823;
	xor.b64  	%rd7825, %rd7824, %rd7822;
	shf.r.wrap.b32 	%r6177, %r6042, %r6041, 1;
	shf.r.wrap.b32 	%r6178, %r6041, %r6042, 1;
	mov.b64 	%rd7826, {%r6178, %r6177};
	shf.r.wrap.b32 	%r6179, %r6042, %r6041, 8;
	shf.r.wrap.b32 	%r6180, %r6041, %r6042, 8;
	mov.b64 	%rd7827, {%r6180, %r6179};
	shr.u64 	%rd7828, %rd7638, 7;
	xor.b64  	%rd7829, %rd7826, %rd7828;
	xor.b64  	%rd7830, %rd7829, %rd7827;
	add.s64 	%rd7831, %rd7742, %rd7225;
	add.s64 	%rd7832, %rd7831, %rd7825;
	add.s64 	%rd7833, %rd7832, %rd7830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6181,%dummy}, %rd7614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6182}, %rd7614;
	}
	shf.r.wrap.b32 	%r6183, %r6182, %r6181, 14;
	shf.r.wrap.b32 	%r6184, %r6181, %r6182, 14;
	mov.b64 	%rd7834, {%r6184, %r6183};
	shf.r.wrap.b32 	%r6185, %r6182, %r6181, 18;
	shf.r.wrap.b32 	%r6186, %r6181, %r6182, 18;
	mov.b64 	%rd7835, {%r6186, %r6185};
	xor.b64  	%rd7836, %rd7835, %rd7834;
	shf.l.wrap.b32 	%r6187, %r6181, %r6182, 23;
	shf.l.wrap.b32 	%r6188, %r6182, %r6181, 23;
	mov.b64 	%rd7837, {%r6188, %r6187};
	xor.b64  	%rd7838, %rd7836, %rd7837;
	xor.b64  	%rd7839, %rd7589, %rd7564;
	and.b64  	%rd7840, %rd7839, %rd7614;
	xor.b64  	%rd7841, %rd7840, %rd7564;
	add.s64 	%rd7842, %rd7841, %rd7539;
	add.s64 	%rd7843, %rd7842, %rd7638;
	add.s64 	%rd7845, %rd7843, %rd9998;
	add.s64 	%rd7846, %rd7845, %rd7838;
	add.s64 	%rd7847, %rd7846, %rd7550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6189,%dummy}, %rd7625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6190}, %rd7625;
	}
	shf.r.wrap.b32 	%r6191, %r6190, %r6189, 28;
	shf.r.wrap.b32 	%r6192, %r6189, %r6190, 28;
	mov.b64 	%rd7848, {%r6192, %r6191};
	shf.l.wrap.b32 	%r6193, %r6189, %r6190, 30;
	shf.l.wrap.b32 	%r6194, %r6190, %r6189, 30;
	mov.b64 	%rd7849, {%r6194, %r6193};
	xor.b64  	%rd7850, %rd7849, %rd7848;
	shf.l.wrap.b32 	%r6195, %r6189, %r6190, 25;
	shf.l.wrap.b32 	%r6196, %r6190, %r6189, 25;
	mov.b64 	%rd7851, {%r6196, %r6195};
	xor.b64  	%rd7852, %rd7850, %rd7851;
	xor.b64  	%rd7853, %rd7625, %rd7575;
	xor.b64  	%rd7854, %rd7625, %rd7600;
	and.b64  	%rd7855, %rd7854, %rd7853;
	xor.b64  	%rd7856, %rd7855, %rd7625;
	add.s64 	%rd7857, %rd7846, %rd7856;
	add.s64 	%rd7858, %rd7857, %rd7852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6197,%dummy}, %rd7847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6198}, %rd7847;
	}
	shf.r.wrap.b32 	%r6199, %r6198, %r6197, 14;
	shf.r.wrap.b32 	%r6200, %r6197, %r6198, 14;
	mov.b64 	%rd7859, {%r6200, %r6199};
	shf.r.wrap.b32 	%r6201, %r6198, %r6197, 18;
	shf.r.wrap.b32 	%r6202, %r6197, %r6198, 18;
	mov.b64 	%rd7860, {%r6202, %r6201};
	xor.b64  	%rd7861, %rd7860, %rd7859;
	shf.l.wrap.b32 	%r6203, %r6197, %r6198, 23;
	shf.l.wrap.b32 	%r6204, %r6198, %r6197, 23;
	mov.b64 	%rd7862, {%r6204, %r6203};
	xor.b64  	%rd7863, %rd7861, %rd7862;
	xor.b64  	%rd7864, %rd7614, %rd7589;
	and.b64  	%rd7865, %rd7847, %rd7864;
	xor.b64  	%rd7866, %rd7865, %rd7589;
	add.s64 	%rd7867, %rd7651, %rd7564;
	add.s64 	%rd7869, %rd7867, %rd9999;
	add.s64 	%rd7870, %rd7869, %rd7866;
	add.s64 	%rd7871, %rd7870, %rd7863;
	add.s64 	%rd7872, %rd7871, %rd7575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6205,%dummy}, %rd7858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6206}, %rd7858;
	}
	shf.r.wrap.b32 	%r6207, %r6206, %r6205, 28;
	shf.r.wrap.b32 	%r6208, %r6205, %r6206, 28;
	mov.b64 	%rd7873, {%r6208, %r6207};
	shf.l.wrap.b32 	%r6209, %r6205, %r6206, 30;
	shf.l.wrap.b32 	%r6210, %r6206, %r6205, 30;
	mov.b64 	%rd7874, {%r6210, %r6209};
	xor.b64  	%rd7875, %rd7874, %rd7873;
	shf.l.wrap.b32 	%r6211, %r6205, %r6206, 25;
	shf.l.wrap.b32 	%r6212, %r6206, %r6205, 25;
	mov.b64 	%rd7876, {%r6212, %r6211};
	xor.b64  	%rd7877, %rd7875, %rd7876;
	xor.b64  	%rd7878, %rd7858, %rd7600;
	xor.b64  	%rd7879, %rd7858, %rd7625;
	and.b64  	%rd7880, %rd7879, %rd7878;
	xor.b64  	%rd7881, %rd7880, %rd7858;
	add.s64 	%rd7882, %rd7871, %rd7881;
	add.s64 	%rd7883, %rd7882, %rd7877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6213,%dummy}, %rd7872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6214}, %rd7872;
	}
	shf.r.wrap.b32 	%r6215, %r6214, %r6213, 14;
	shf.r.wrap.b32 	%r6216, %r6213, %r6214, 14;
	mov.b64 	%rd7884, {%r6216, %r6215};
	shf.r.wrap.b32 	%r6217, %r6214, %r6213, 18;
	shf.r.wrap.b32 	%r6218, %r6213, %r6214, 18;
	mov.b64 	%rd7885, {%r6218, %r6217};
	xor.b64  	%rd7886, %rd7885, %rd7884;
	shf.l.wrap.b32 	%r6219, %r6213, %r6214, 23;
	shf.l.wrap.b32 	%r6220, %r6214, %r6213, 23;
	mov.b64 	%rd7887, {%r6220, %r6219};
	xor.b64  	%rd7888, %rd7886, %rd7887;
	xor.b64  	%rd7889, %rd7847, %rd7614;
	and.b64  	%rd7890, %rd7872, %rd7889;
	xor.b64  	%rd7891, %rd7890, %rd7614;
	add.s64 	%rd7892, %rd7664, %rd7589;
	add.s64 	%rd7894, %rd7892, %rd10000;
	add.s64 	%rd7895, %rd7894, %rd7891;
	add.s64 	%rd7896, %rd7895, %rd7888;
	add.s64 	%rd7897, %rd7896, %rd7600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6221,%dummy}, %rd7883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6222}, %rd7883;
	}
	shf.r.wrap.b32 	%r6223, %r6222, %r6221, 28;
	shf.r.wrap.b32 	%r6224, %r6221, %r6222, 28;
	mov.b64 	%rd7898, {%r6224, %r6223};
	shf.l.wrap.b32 	%r6225, %r6221, %r6222, 30;
	shf.l.wrap.b32 	%r6226, %r6222, %r6221, 30;
	mov.b64 	%rd7899, {%r6226, %r6225};
	xor.b64  	%rd7900, %rd7899, %rd7898;
	shf.l.wrap.b32 	%r6227, %r6221, %r6222, 25;
	shf.l.wrap.b32 	%r6228, %r6222, %r6221, 25;
	mov.b64 	%rd7901, {%r6228, %r6227};
	xor.b64  	%rd7902, %rd7900, %rd7901;
	xor.b64  	%rd7903, %rd7883, %rd7625;
	xor.b64  	%rd7904, %rd7883, %rd7858;
	and.b64  	%rd7905, %rd7904, %rd7903;
	xor.b64  	%rd7906, %rd7905, %rd7883;
	add.s64 	%rd7907, %rd7896, %rd7906;
	add.s64 	%rd7908, %rd7907, %rd7902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6229,%dummy}, %rd7897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6230}, %rd7897;
	}
	shf.r.wrap.b32 	%r6231, %r6230, %r6229, 14;
	shf.r.wrap.b32 	%r6232, %r6229, %r6230, 14;
	mov.b64 	%rd7909, {%r6232, %r6231};
	shf.r.wrap.b32 	%r6233, %r6230, %r6229, 18;
	shf.r.wrap.b32 	%r6234, %r6229, %r6230, 18;
	mov.b64 	%rd7910, {%r6234, %r6233};
	xor.b64  	%rd7911, %rd7910, %rd7909;
	shf.l.wrap.b32 	%r6235, %r6229, %r6230, 23;
	shf.l.wrap.b32 	%r6236, %r6230, %r6229, 23;
	mov.b64 	%rd7912, {%r6236, %r6235};
	xor.b64  	%rd7913, %rd7911, %rd7912;
	xor.b64  	%rd7914, %rd7872, %rd7847;
	and.b64  	%rd7915, %rd7897, %rd7914;
	xor.b64  	%rd7916, %rd7915, %rd7847;
	add.s64 	%rd7917, %rd7677, %rd7614;
	add.s64 	%rd7919, %rd7917, %rd10001;
	add.s64 	%rd7920, %rd7919, %rd7916;
	add.s64 	%rd7921, %rd7920, %rd7913;
	add.s64 	%rd7922, %rd7921, %rd7625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6237,%dummy}, %rd7908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6238}, %rd7908;
	}
	shf.r.wrap.b32 	%r6239, %r6238, %r6237, 28;
	shf.r.wrap.b32 	%r6240, %r6237, %r6238, 28;
	mov.b64 	%rd7923, {%r6240, %r6239};
	shf.l.wrap.b32 	%r6241, %r6237, %r6238, 30;
	shf.l.wrap.b32 	%r6242, %r6238, %r6237, 30;
	mov.b64 	%rd7924, {%r6242, %r6241};
	xor.b64  	%rd7925, %rd7924, %rd7923;
	shf.l.wrap.b32 	%r6243, %r6237, %r6238, 25;
	shf.l.wrap.b32 	%r6244, %r6238, %r6237, 25;
	mov.b64 	%rd7926, {%r6244, %r6243};
	xor.b64  	%rd7927, %rd7925, %rd7926;
	xor.b64  	%rd7928, %rd7908, %rd7858;
	xor.b64  	%rd7929, %rd7908, %rd7883;
	and.b64  	%rd7930, %rd7929, %rd7928;
	xor.b64  	%rd7931, %rd7930, %rd7908;
	add.s64 	%rd7932, %rd7921, %rd7931;
	add.s64 	%rd7933, %rd7932, %rd7927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6245,%dummy}, %rd7922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6246}, %rd7922;
	}
	shf.r.wrap.b32 	%r6247, %r6246, %r6245, 14;
	shf.r.wrap.b32 	%r6248, %r6245, %r6246, 14;
	mov.b64 	%rd7934, {%r6248, %r6247};
	shf.r.wrap.b32 	%r6249, %r6246, %r6245, 18;
	shf.r.wrap.b32 	%r6250, %r6245, %r6246, 18;
	mov.b64 	%rd7935, {%r6250, %r6249};
	xor.b64  	%rd7936, %rd7935, %rd7934;
	shf.l.wrap.b32 	%r6251, %r6245, %r6246, 23;
	shf.l.wrap.b32 	%r6252, %r6246, %r6245, 23;
	mov.b64 	%rd7937, {%r6252, %r6251};
	xor.b64  	%rd7938, %rd7936, %rd7937;
	xor.b64  	%rd7939, %rd7897, %rd7872;
	and.b64  	%rd7940, %rd7922, %rd7939;
	xor.b64  	%rd7941, %rd7940, %rd7872;
	add.s64 	%rd7942, %rd7847, %rd7690;
	add.s64 	%rd7944, %rd7942, %rd10002;
	add.s64 	%rd7945, %rd7944, %rd7941;
	add.s64 	%rd7946, %rd7945, %rd7938;
	add.s64 	%rd7947, %rd7946, %rd7858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6253,%dummy}, %rd7933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6254}, %rd7933;
	}
	shf.r.wrap.b32 	%r6255, %r6254, %r6253, 28;
	shf.r.wrap.b32 	%r6256, %r6253, %r6254, 28;
	mov.b64 	%rd7948, {%r6256, %r6255};
	shf.l.wrap.b32 	%r6257, %r6253, %r6254, 30;
	shf.l.wrap.b32 	%r6258, %r6254, %r6253, 30;
	mov.b64 	%rd7949, {%r6258, %r6257};
	xor.b64  	%rd7950, %rd7949, %rd7948;
	shf.l.wrap.b32 	%r6259, %r6253, %r6254, 25;
	shf.l.wrap.b32 	%r6260, %r6254, %r6253, 25;
	mov.b64 	%rd7951, {%r6260, %r6259};
	xor.b64  	%rd7952, %rd7950, %rd7951;
	xor.b64  	%rd7953, %rd7933, %rd7883;
	xor.b64  	%rd7954, %rd7933, %rd7908;
	and.b64  	%rd7955, %rd7954, %rd7953;
	xor.b64  	%rd7956, %rd7955, %rd7933;
	add.s64 	%rd7957, %rd7946, %rd7956;
	add.s64 	%rd7958, %rd7957, %rd7952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6261,%dummy}, %rd7947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6262}, %rd7947;
	}
	shf.r.wrap.b32 	%r6263, %r6262, %r6261, 14;
	shf.r.wrap.b32 	%r6264, %r6261, %r6262, 14;
	mov.b64 	%rd7959, {%r6264, %r6263};
	shf.r.wrap.b32 	%r6265, %r6262, %r6261, 18;
	shf.r.wrap.b32 	%r6266, %r6261, %r6262, 18;
	mov.b64 	%rd7960, {%r6266, %r6265};
	xor.b64  	%rd7961, %rd7960, %rd7959;
	shf.l.wrap.b32 	%r6267, %r6261, %r6262, 23;
	shf.l.wrap.b32 	%r6268, %r6262, %r6261, 23;
	mov.b64 	%rd7962, {%r6268, %r6267};
	xor.b64  	%rd7963, %rd7961, %rd7962;
	xor.b64  	%rd7964, %rd7922, %rd7897;
	and.b64  	%rd7965, %rd7947, %rd7964;
	xor.b64  	%rd7966, %rd7965, %rd7897;
	add.s64 	%rd7967, %rd7872, %rd7703;
	add.s64 	%rd7969, %rd7967, %rd10003;
	add.s64 	%rd7970, %rd7969, %rd7966;
	add.s64 	%rd7971, %rd7970, %rd7963;
	add.s64 	%rd7972, %rd7971, %rd7883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6269,%dummy}, %rd7958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6270}, %rd7958;
	}
	shf.r.wrap.b32 	%r6271, %r6270, %r6269, 28;
	shf.r.wrap.b32 	%r6272, %r6269, %r6270, 28;
	mov.b64 	%rd7973, {%r6272, %r6271};
	shf.l.wrap.b32 	%r6273, %r6269, %r6270, 30;
	shf.l.wrap.b32 	%r6274, %r6270, %r6269, 30;
	mov.b64 	%rd7974, {%r6274, %r6273};
	xor.b64  	%rd7975, %rd7974, %rd7973;
	shf.l.wrap.b32 	%r6275, %r6269, %r6270, 25;
	shf.l.wrap.b32 	%r6276, %r6270, %r6269, 25;
	mov.b64 	%rd7976, {%r6276, %r6275};
	xor.b64  	%rd7977, %rd7975, %rd7976;
	xor.b64  	%rd7978, %rd7958, %rd7908;
	xor.b64  	%rd7979, %rd7958, %rd7933;
	and.b64  	%rd7980, %rd7979, %rd7978;
	xor.b64  	%rd7981, %rd7980, %rd7958;
	add.s64 	%rd7982, %rd7971, %rd7981;
	add.s64 	%rd7983, %rd7982, %rd7977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6277,%dummy}, %rd7972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6278}, %rd7972;
	}
	shf.r.wrap.b32 	%r6279, %r6278, %r6277, 14;
	shf.r.wrap.b32 	%r6280, %r6277, %r6278, 14;
	mov.b64 	%rd7984, {%r6280, %r6279};
	shf.r.wrap.b32 	%r6281, %r6278, %r6277, 18;
	shf.r.wrap.b32 	%r6282, %r6277, %r6278, 18;
	mov.b64 	%rd7985, {%r6282, %r6281};
	xor.b64  	%rd7986, %rd7985, %rd7984;
	shf.l.wrap.b32 	%r6283, %r6277, %r6278, 23;
	shf.l.wrap.b32 	%r6284, %r6278, %r6277, 23;
	mov.b64 	%rd7987, {%r6284, %r6283};
	xor.b64  	%rd7988, %rd7986, %rd7987;
	xor.b64  	%rd7989, %rd7947, %rd7922;
	and.b64  	%rd7990, %rd7972, %rd7989;
	xor.b64  	%rd7991, %rd7990, %rd7922;
	add.s64 	%rd7992, %rd7897, %rd7716;
	add.s64 	%rd7994, %rd7992, %rd10004;
	add.s64 	%rd7995, %rd7994, %rd7991;
	add.s64 	%rd7996, %rd7995, %rd7988;
	add.s64 	%rd7997, %rd7996, %rd7908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6285,%dummy}, %rd7983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6286}, %rd7983;
	}
	shf.r.wrap.b32 	%r6287, %r6286, %r6285, 28;
	shf.r.wrap.b32 	%r6288, %r6285, %r6286, 28;
	mov.b64 	%rd7998, {%r6288, %r6287};
	shf.l.wrap.b32 	%r6289, %r6285, %r6286, 30;
	shf.l.wrap.b32 	%r6290, %r6286, %r6285, 30;
	mov.b64 	%rd7999, {%r6290, %r6289};
	xor.b64  	%rd8000, %rd7999, %rd7998;
	shf.l.wrap.b32 	%r6291, %r6285, %r6286, 25;
	shf.l.wrap.b32 	%r6292, %r6286, %r6285, 25;
	mov.b64 	%rd8001, {%r6292, %r6291};
	xor.b64  	%rd8002, %rd8000, %rd8001;
	xor.b64  	%rd8003, %rd7983, %rd7933;
	xor.b64  	%rd8004, %rd7983, %rd7958;
	and.b64  	%rd8005, %rd8004, %rd8003;
	xor.b64  	%rd8006, %rd8005, %rd7983;
	add.s64 	%rd8007, %rd7996, %rd8006;
	add.s64 	%rd8008, %rd8007, %rd8002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6293,%dummy}, %rd7997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6294}, %rd7997;
	}
	shf.r.wrap.b32 	%r6295, %r6294, %r6293, 14;
	shf.r.wrap.b32 	%r6296, %r6293, %r6294, 14;
	mov.b64 	%rd8009, {%r6296, %r6295};
	shf.r.wrap.b32 	%r6297, %r6294, %r6293, 18;
	shf.r.wrap.b32 	%r6298, %r6293, %r6294, 18;
	mov.b64 	%rd8010, {%r6298, %r6297};
	xor.b64  	%rd8011, %rd8010, %rd8009;
	shf.l.wrap.b32 	%r6299, %r6293, %r6294, 23;
	shf.l.wrap.b32 	%r6300, %r6294, %r6293, 23;
	mov.b64 	%rd8012, {%r6300, %r6299};
	xor.b64  	%rd8013, %rd8011, %rd8012;
	xor.b64  	%rd8014, %rd7972, %rd7947;
	and.b64  	%rd8015, %rd7997, %rd8014;
	xor.b64  	%rd8016, %rd8015, %rd7947;
	add.s64 	%rd8017, %rd7922, %rd7729;
	add.s64 	%rd8019, %rd8017, %rd10005;
	add.s64 	%rd8020, %rd8019, %rd8016;
	add.s64 	%rd8021, %rd8020, %rd8013;
	add.s64 	%rd8022, %rd8021, %rd7933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6301,%dummy}, %rd8008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6302}, %rd8008;
	}
	shf.r.wrap.b32 	%r6303, %r6302, %r6301, 28;
	shf.r.wrap.b32 	%r6304, %r6301, %r6302, 28;
	mov.b64 	%rd8023, {%r6304, %r6303};
	shf.l.wrap.b32 	%r6305, %r6301, %r6302, 30;
	shf.l.wrap.b32 	%r6306, %r6302, %r6301, 30;
	mov.b64 	%rd8024, {%r6306, %r6305};
	xor.b64  	%rd8025, %rd8024, %rd8023;
	shf.l.wrap.b32 	%r6307, %r6301, %r6302, 25;
	shf.l.wrap.b32 	%r6308, %r6302, %r6301, 25;
	mov.b64 	%rd8026, {%r6308, %r6307};
	xor.b64  	%rd8027, %rd8025, %rd8026;
	xor.b64  	%rd8028, %rd8008, %rd7958;
	xor.b64  	%rd8029, %rd8008, %rd7983;
	and.b64  	%rd8030, %rd8029, %rd8028;
	xor.b64  	%rd8031, %rd8030, %rd8008;
	add.s64 	%rd8032, %rd8021, %rd8031;
	add.s64 	%rd8033, %rd8032, %rd8027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6309,%dummy}, %rd8022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6310}, %rd8022;
	}
	shf.r.wrap.b32 	%r6311, %r6310, %r6309, 14;
	shf.r.wrap.b32 	%r6312, %r6309, %r6310, 14;
	mov.b64 	%rd8034, {%r6312, %r6311};
	shf.r.wrap.b32 	%r6313, %r6310, %r6309, 18;
	shf.r.wrap.b32 	%r6314, %r6309, %r6310, 18;
	mov.b64 	%rd8035, {%r6314, %r6313};
	xor.b64  	%rd8036, %rd8035, %rd8034;
	shf.l.wrap.b32 	%r6315, %r6309, %r6310, 23;
	shf.l.wrap.b32 	%r6316, %r6310, %r6309, 23;
	mov.b64 	%rd8037, {%r6316, %r6315};
	xor.b64  	%rd8038, %rd8036, %rd8037;
	xor.b64  	%rd8039, %rd7997, %rd7972;
	and.b64  	%rd8040, %rd8022, %rd8039;
	xor.b64  	%rd8041, %rd8040, %rd7972;
	add.s64 	%rd8042, %rd7947, %rd7742;
	add.s64 	%rd8044, %rd8042, %rd10006;
	add.s64 	%rd8045, %rd8044, %rd8041;
	add.s64 	%rd8046, %rd8045, %rd8038;
	add.s64 	%rd8047, %rd8046, %rd7958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6317,%dummy}, %rd8033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6318}, %rd8033;
	}
	shf.r.wrap.b32 	%r6319, %r6318, %r6317, 28;
	shf.r.wrap.b32 	%r6320, %r6317, %r6318, 28;
	mov.b64 	%rd8048, {%r6320, %r6319};
	shf.l.wrap.b32 	%r6321, %r6317, %r6318, 30;
	shf.l.wrap.b32 	%r6322, %r6318, %r6317, 30;
	mov.b64 	%rd8049, {%r6322, %r6321};
	xor.b64  	%rd8050, %rd8049, %rd8048;
	shf.l.wrap.b32 	%r6323, %r6317, %r6318, 25;
	shf.l.wrap.b32 	%r6324, %r6318, %r6317, 25;
	mov.b64 	%rd8051, {%r6324, %r6323};
	xor.b64  	%rd8052, %rd8050, %rd8051;
	xor.b64  	%rd8053, %rd8033, %rd7983;
	xor.b64  	%rd8054, %rd8033, %rd8008;
	and.b64  	%rd8055, %rd8054, %rd8053;
	xor.b64  	%rd8056, %rd8055, %rd8033;
	add.s64 	%rd8057, %rd8046, %rd8056;
	add.s64 	%rd8058, %rd8057, %rd8052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6325,%dummy}, %rd8047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6326}, %rd8047;
	}
	shf.r.wrap.b32 	%r6327, %r6326, %r6325, 14;
	shf.r.wrap.b32 	%r6328, %r6325, %r6326, 14;
	mov.b64 	%rd8059, {%r6328, %r6327};
	shf.r.wrap.b32 	%r6329, %r6326, %r6325, 18;
	shf.r.wrap.b32 	%r6330, %r6325, %r6326, 18;
	mov.b64 	%rd8060, {%r6330, %r6329};
	xor.b64  	%rd8061, %rd8060, %rd8059;
	shf.l.wrap.b32 	%r6331, %r6325, %r6326, 23;
	shf.l.wrap.b32 	%r6332, %r6326, %r6325, 23;
	mov.b64 	%rd8062, {%r6332, %r6331};
	xor.b64  	%rd8063, %rd8061, %rd8062;
	xor.b64  	%rd8064, %rd8022, %rd7997;
	and.b64  	%rd8065, %rd8047, %rd8064;
	xor.b64  	%rd8066, %rd8065, %rd7997;
	add.s64 	%rd8067, %rd7972, %rd7755;
	add.s64 	%rd8069, %rd8067, %rd10007;
	add.s64 	%rd8070, %rd8069, %rd8066;
	add.s64 	%rd8071, %rd8070, %rd8063;
	add.s64 	%rd8072, %rd8071, %rd7983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6333,%dummy}, %rd8058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6334}, %rd8058;
	}
	shf.r.wrap.b32 	%r6335, %r6334, %r6333, 28;
	shf.r.wrap.b32 	%r6336, %r6333, %r6334, 28;
	mov.b64 	%rd8073, {%r6336, %r6335};
	shf.l.wrap.b32 	%r6337, %r6333, %r6334, 30;
	shf.l.wrap.b32 	%r6338, %r6334, %r6333, 30;
	mov.b64 	%rd8074, {%r6338, %r6337};
	xor.b64  	%rd8075, %rd8074, %rd8073;
	shf.l.wrap.b32 	%r6339, %r6333, %r6334, 25;
	shf.l.wrap.b32 	%r6340, %r6334, %r6333, 25;
	mov.b64 	%rd8076, {%r6340, %r6339};
	xor.b64  	%rd8077, %rd8075, %rd8076;
	xor.b64  	%rd8078, %rd8058, %rd8008;
	xor.b64  	%rd8079, %rd8058, %rd8033;
	and.b64  	%rd8080, %rd8079, %rd8078;
	xor.b64  	%rd8081, %rd8080, %rd8058;
	add.s64 	%rd8082, %rd8071, %rd8081;
	add.s64 	%rd8083, %rd8082, %rd8077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6341,%dummy}, %rd8072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6342}, %rd8072;
	}
	shf.r.wrap.b32 	%r6343, %r6342, %r6341, 14;
	shf.r.wrap.b32 	%r6344, %r6341, %r6342, 14;
	mov.b64 	%rd8084, {%r6344, %r6343};
	shf.r.wrap.b32 	%r6345, %r6342, %r6341, 18;
	shf.r.wrap.b32 	%r6346, %r6341, %r6342, 18;
	mov.b64 	%rd8085, {%r6346, %r6345};
	xor.b64  	%rd8086, %rd8085, %rd8084;
	shf.l.wrap.b32 	%r6347, %r6341, %r6342, 23;
	shf.l.wrap.b32 	%r6348, %r6342, %r6341, 23;
	mov.b64 	%rd8087, {%r6348, %r6347};
	xor.b64  	%rd8088, %rd8086, %rd8087;
	xor.b64  	%rd8089, %rd8047, %rd8022;
	and.b64  	%rd8090, %rd8072, %rd8089;
	xor.b64  	%rd8091, %rd8090, %rd8022;
	add.s64 	%rd8092, %rd7997, %rd7768;
	add.s64 	%rd8094, %rd8092, %rd10008;
	add.s64 	%rd8095, %rd8094, %rd8091;
	add.s64 	%rd8096, %rd8095, %rd8088;
	add.s64 	%rd8097, %rd8096, %rd8008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6349,%dummy}, %rd8083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6350}, %rd8083;
	}
	shf.r.wrap.b32 	%r6351, %r6350, %r6349, 28;
	shf.r.wrap.b32 	%r6352, %r6349, %r6350, 28;
	mov.b64 	%rd8098, {%r6352, %r6351};
	shf.l.wrap.b32 	%r6353, %r6349, %r6350, 30;
	shf.l.wrap.b32 	%r6354, %r6350, %r6349, 30;
	mov.b64 	%rd8099, {%r6354, %r6353};
	xor.b64  	%rd8100, %rd8099, %rd8098;
	shf.l.wrap.b32 	%r6355, %r6349, %r6350, 25;
	shf.l.wrap.b32 	%r6356, %r6350, %r6349, 25;
	mov.b64 	%rd8101, {%r6356, %r6355};
	xor.b64  	%rd8102, %rd8100, %rd8101;
	xor.b64  	%rd8103, %rd8083, %rd8033;
	xor.b64  	%rd8104, %rd8083, %rd8058;
	and.b64  	%rd8105, %rd8104, %rd8103;
	xor.b64  	%rd8106, %rd8105, %rd8083;
	add.s64 	%rd8107, %rd8096, %rd8106;
	add.s64 	%rd8108, %rd8107, %rd8102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6357,%dummy}, %rd8097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6358}, %rd8097;
	}
	shf.r.wrap.b32 	%r6359, %r6358, %r6357, 14;
	shf.r.wrap.b32 	%r6360, %r6357, %r6358, 14;
	mov.b64 	%rd8109, {%r6360, %r6359};
	shf.r.wrap.b32 	%r6361, %r6358, %r6357, 18;
	shf.r.wrap.b32 	%r6362, %r6357, %r6358, 18;
	mov.b64 	%rd8110, {%r6362, %r6361};
	xor.b64  	%rd8111, %rd8110, %rd8109;
	shf.l.wrap.b32 	%r6363, %r6357, %r6358, 23;
	shf.l.wrap.b32 	%r6364, %r6358, %r6357, 23;
	mov.b64 	%rd8112, {%r6364, %r6363};
	xor.b64  	%rd8113, %rd8111, %rd8112;
	xor.b64  	%rd8114, %rd8072, %rd8047;
	and.b64  	%rd8115, %rd8097, %rd8114;
	xor.b64  	%rd8116, %rd8115, %rd8047;
	add.s64 	%rd8117, %rd8022, %rd7781;
	add.s64 	%rd8119, %rd8117, %rd10009;
	add.s64 	%rd8120, %rd8119, %rd8116;
	add.s64 	%rd8121, %rd8120, %rd8113;
	add.s64 	%rd8122, %rd8121, %rd8033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6365,%dummy}, %rd8108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6366}, %rd8108;
	}
	shf.r.wrap.b32 	%r6367, %r6366, %r6365, 28;
	shf.r.wrap.b32 	%r6368, %r6365, %r6366, 28;
	mov.b64 	%rd8123, {%r6368, %r6367};
	shf.l.wrap.b32 	%r6369, %r6365, %r6366, 30;
	shf.l.wrap.b32 	%r6370, %r6366, %r6365, 30;
	mov.b64 	%rd8124, {%r6370, %r6369};
	xor.b64  	%rd8125, %rd8124, %rd8123;
	shf.l.wrap.b32 	%r6371, %r6365, %r6366, 25;
	shf.l.wrap.b32 	%r6372, %r6366, %r6365, 25;
	mov.b64 	%rd8126, {%r6372, %r6371};
	xor.b64  	%rd8127, %rd8125, %rd8126;
	xor.b64  	%rd8128, %rd8108, %rd8058;
	xor.b64  	%rd8129, %rd8108, %rd8083;
	and.b64  	%rd8130, %rd8129, %rd8128;
	xor.b64  	%rd8131, %rd8130, %rd8108;
	add.s64 	%rd8132, %rd8121, %rd8131;
	add.s64 	%rd8133, %rd8132, %rd8127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6373,%dummy}, %rd8122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6374}, %rd8122;
	}
	shf.r.wrap.b32 	%r6375, %r6374, %r6373, 14;
	shf.r.wrap.b32 	%r6376, %r6373, %r6374, 14;
	mov.b64 	%rd8134, {%r6376, %r6375};
	shf.r.wrap.b32 	%r6377, %r6374, %r6373, 18;
	shf.r.wrap.b32 	%r6378, %r6373, %r6374, 18;
	mov.b64 	%rd8135, {%r6378, %r6377};
	xor.b64  	%rd8136, %rd8135, %rd8134;
	shf.l.wrap.b32 	%r6379, %r6373, %r6374, 23;
	shf.l.wrap.b32 	%r6380, %r6374, %r6373, 23;
	mov.b64 	%rd8137, {%r6380, %r6379};
	xor.b64  	%rd8138, %rd8136, %rd8137;
	xor.b64  	%rd8139, %rd8097, %rd8072;
	and.b64  	%rd8140, %rd8122, %rd8139;
	xor.b64  	%rd8141, %rd8140, %rd8072;
	add.s64 	%rd8142, %rd8047, %rd7794;
	add.s64 	%rd8144, %rd8142, %rd10010;
	add.s64 	%rd8145, %rd8144, %rd8141;
	add.s64 	%rd8146, %rd8145, %rd8138;
	add.s64 	%rd8147, %rd8146, %rd8058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6381,%dummy}, %rd8133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6382}, %rd8133;
	}
	shf.r.wrap.b32 	%r6383, %r6382, %r6381, 28;
	shf.r.wrap.b32 	%r6384, %r6381, %r6382, 28;
	mov.b64 	%rd8148, {%r6384, %r6383};
	shf.l.wrap.b32 	%r6385, %r6381, %r6382, 30;
	shf.l.wrap.b32 	%r6386, %r6382, %r6381, 30;
	mov.b64 	%rd8149, {%r6386, %r6385};
	xor.b64  	%rd8150, %rd8149, %rd8148;
	shf.l.wrap.b32 	%r6387, %r6381, %r6382, 25;
	shf.l.wrap.b32 	%r6388, %r6382, %r6381, 25;
	mov.b64 	%rd8151, {%r6388, %r6387};
	xor.b64  	%rd8152, %rd8150, %rd8151;
	xor.b64  	%rd8153, %rd8133, %rd8083;
	xor.b64  	%rd8154, %rd8133, %rd8108;
	and.b64  	%rd8155, %rd8154, %rd8153;
	xor.b64  	%rd8156, %rd8155, %rd8133;
	add.s64 	%rd8157, %rd8146, %rd8156;
	add.s64 	%rd8158, %rd8157, %rd8152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6389,%dummy}, %rd8147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6390}, %rd8147;
	}
	shf.r.wrap.b32 	%r6391, %r6390, %r6389, 14;
	shf.r.wrap.b32 	%r6392, %r6389, %r6390, 14;
	mov.b64 	%rd8159, {%r6392, %r6391};
	shf.r.wrap.b32 	%r6393, %r6390, %r6389, 18;
	shf.r.wrap.b32 	%r6394, %r6389, %r6390, 18;
	mov.b64 	%rd8160, {%r6394, %r6393};
	xor.b64  	%rd8161, %rd8160, %rd8159;
	shf.l.wrap.b32 	%r6395, %r6389, %r6390, 23;
	shf.l.wrap.b32 	%r6396, %r6390, %r6389, 23;
	mov.b64 	%rd8162, {%r6396, %r6395};
	xor.b64  	%rd8163, %rd8161, %rd8162;
	xor.b64  	%rd8164, %rd8122, %rd8097;
	and.b64  	%rd8165, %rd8147, %rd8164;
	xor.b64  	%rd8166, %rd8165, %rd8097;
	add.s64 	%rd8167, %rd8072, %rd7807;
	add.s64 	%rd8169, %rd8167, %rd10011;
	add.s64 	%rd8170, %rd8169, %rd8166;
	add.s64 	%rd8171, %rd8170, %rd8163;
	add.s64 	%rd8172, %rd8171, %rd8083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6397,%dummy}, %rd8158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6398}, %rd8158;
	}
	shf.r.wrap.b32 	%r6399, %r6398, %r6397, 28;
	shf.r.wrap.b32 	%r6400, %r6397, %r6398, 28;
	mov.b64 	%rd8173, {%r6400, %r6399};
	shf.l.wrap.b32 	%r6401, %r6397, %r6398, 30;
	shf.l.wrap.b32 	%r6402, %r6398, %r6397, 30;
	mov.b64 	%rd8174, {%r6402, %r6401};
	xor.b64  	%rd8175, %rd8174, %rd8173;
	shf.l.wrap.b32 	%r6403, %r6397, %r6398, 25;
	shf.l.wrap.b32 	%r6404, %r6398, %r6397, 25;
	mov.b64 	%rd8176, {%r6404, %r6403};
	xor.b64  	%rd8177, %rd8175, %rd8176;
	xor.b64  	%rd8178, %rd8158, %rd8108;
	xor.b64  	%rd8179, %rd8158, %rd8133;
	and.b64  	%rd8180, %rd8179, %rd8178;
	xor.b64  	%rd8181, %rd8180, %rd8158;
	add.s64 	%rd8182, %rd8171, %rd8181;
	add.s64 	%rd8183, %rd8182, %rd8177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6405,%dummy}, %rd8172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6406}, %rd8172;
	}
	shf.r.wrap.b32 	%r6407, %r6406, %r6405, 14;
	shf.r.wrap.b32 	%r6408, %r6405, %r6406, 14;
	mov.b64 	%rd8184, {%r6408, %r6407};
	shf.r.wrap.b32 	%r6409, %r6406, %r6405, 18;
	shf.r.wrap.b32 	%r6410, %r6405, %r6406, 18;
	mov.b64 	%rd8185, {%r6410, %r6409};
	xor.b64  	%rd8186, %rd8185, %rd8184;
	shf.l.wrap.b32 	%r6411, %r6405, %r6406, 23;
	shf.l.wrap.b32 	%r6412, %r6406, %r6405, 23;
	mov.b64 	%rd8187, {%r6412, %r6411};
	xor.b64  	%rd8188, %rd8186, %rd8187;
	xor.b64  	%rd8189, %rd8147, %rd8122;
	and.b64  	%rd8190, %rd8172, %rd8189;
	xor.b64  	%rd8191, %rd8190, %rd8122;
	add.s64 	%rd8192, %rd8097, %rd7820;
	add.s64 	%rd8194, %rd8192, %rd10012;
	add.s64 	%rd8195, %rd8194, %rd8191;
	add.s64 	%rd8196, %rd8195, %rd8188;
	add.s64 	%rd8197, %rd8196, %rd8108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6413,%dummy}, %rd8183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6414}, %rd8183;
	}
	shf.r.wrap.b32 	%r6415, %r6414, %r6413, 28;
	shf.r.wrap.b32 	%r6416, %r6413, %r6414, 28;
	mov.b64 	%rd8198, {%r6416, %r6415};
	shf.l.wrap.b32 	%r6417, %r6413, %r6414, 30;
	shf.l.wrap.b32 	%r6418, %r6414, %r6413, 30;
	mov.b64 	%rd8199, {%r6418, %r6417};
	xor.b64  	%rd8200, %rd8199, %rd8198;
	shf.l.wrap.b32 	%r6419, %r6413, %r6414, 25;
	shf.l.wrap.b32 	%r6420, %r6414, %r6413, 25;
	mov.b64 	%rd8201, {%r6420, %r6419};
	xor.b64  	%rd8202, %rd8200, %rd8201;
	xor.b64  	%rd8203, %rd8183, %rd8133;
	xor.b64  	%rd8204, %rd8183, %rd8158;
	and.b64  	%rd8205, %rd8204, %rd8203;
	xor.b64  	%rd8206, %rd8205, %rd8183;
	add.s64 	%rd8207, %rd8196, %rd8206;
	add.s64 	%rd8208, %rd8207, %rd8202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6421,%dummy}, %rd8197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6422}, %rd8197;
	}
	shf.r.wrap.b32 	%r6423, %r6422, %r6421, 14;
	shf.r.wrap.b32 	%r6424, %r6421, %r6422, 14;
	mov.b64 	%rd8209, {%r6424, %r6423};
	shf.r.wrap.b32 	%r6425, %r6422, %r6421, 18;
	shf.r.wrap.b32 	%r6426, %r6421, %r6422, 18;
	mov.b64 	%rd8210, {%r6426, %r6425};
	xor.b64  	%rd8211, %rd8210, %rd8209;
	shf.l.wrap.b32 	%r6427, %r6421, %r6422, 23;
	shf.l.wrap.b32 	%r6428, %r6422, %r6421, 23;
	mov.b64 	%rd8212, {%r6428, %r6427};
	xor.b64  	%rd8213, %rd8211, %rd8212;
	xor.b64  	%rd8214, %rd8172, %rd8147;
	and.b64  	%rd8215, %rd8197, %rd8214;
	xor.b64  	%rd8216, %rd8215, %rd8147;
	add.s64 	%rd8217, %rd8122, %rd7833;
	add.s64 	%rd8219, %rd8217, %rd10013;
	add.s64 	%rd8220, %rd8219, %rd8216;
	add.s64 	%rd8221, %rd8220, %rd8213;
	add.s64 	%rd8222, %rd8221, %rd8133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6429,%dummy}, %rd8208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6430}, %rd8208;
	}
	shf.r.wrap.b32 	%r6431, %r6430, %r6429, 28;
	shf.r.wrap.b32 	%r6432, %r6429, %r6430, 28;
	mov.b64 	%rd8223, {%r6432, %r6431};
	shf.l.wrap.b32 	%r6433, %r6429, %r6430, 30;
	shf.l.wrap.b32 	%r6434, %r6430, %r6429, 30;
	mov.b64 	%rd8224, {%r6434, %r6433};
	xor.b64  	%rd8225, %rd8224, %rd8223;
	shf.l.wrap.b32 	%r6435, %r6429, %r6430, 25;
	shf.l.wrap.b32 	%r6436, %r6430, %r6429, 25;
	mov.b64 	%rd8226, {%r6436, %r6435};
	xor.b64  	%rd8227, %rd8225, %rd8226;
	xor.b64  	%rd8228, %rd8208, %rd8158;
	xor.b64  	%rd8229, %rd8208, %rd8183;
	and.b64  	%rd8230, %rd8229, %rd8228;
	xor.b64  	%rd8231, %rd8230, %rd8208;
	add.s64 	%rd8232, %rd8221, %rd8231;
	add.s64 	%rd8233, %rd8232, %rd8227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6437,%dummy}, %rd7820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6438}, %rd7820;
	}
	shf.r.wrap.b32 	%r6439, %r6438, %r6437, 19;
	shf.r.wrap.b32 	%r6440, %r6437, %r6438, 19;
	mov.b64 	%rd8234, {%r6440, %r6439};
	shf.l.wrap.b32 	%r6441, %r6437, %r6438, 3;
	shf.l.wrap.b32 	%r6442, %r6438, %r6437, 3;
	mov.b64 	%rd8235, {%r6442, %r6441};
	shr.u64 	%rd8236, %rd7820, 6;
	xor.b64  	%rd8237, %rd8234, %rd8236;
	xor.b64  	%rd8238, %rd8237, %rd8235;
	shf.r.wrap.b32 	%r6443, %r6052, %r6051, 1;
	shf.r.wrap.b32 	%r6444, %r6051, %r6052, 1;
	mov.b64 	%rd8239, {%r6444, %r6443};
	shf.r.wrap.b32 	%r6445, %r6052, %r6051, 8;
	shf.r.wrap.b32 	%r6446, %r6051, %r6052, 8;
	mov.b64 	%rd8240, {%r6446, %r6445};
	shr.u64 	%rd8241, %rd7651, 7;
	xor.b64  	%rd8242, %rd8239, %rd8241;
	xor.b64  	%rd8243, %rd8242, %rd8240;
	add.s64 	%rd8244, %rd7638, %rd7755;
	add.s64 	%rd8245, %rd8244, %rd8238;
	add.s64 	%rd8246, %rd8245, %rd8243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6447,%dummy}, %rd7833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6448}, %rd7833;
	}
	shf.r.wrap.b32 	%r6449, %r6448, %r6447, 19;
	shf.r.wrap.b32 	%r6450, %r6447, %r6448, 19;
	mov.b64 	%rd8247, {%r6450, %r6449};
	shf.l.wrap.b32 	%r6451, %r6447, %r6448, 3;
	shf.l.wrap.b32 	%r6452, %r6448, %r6447, 3;
	mov.b64 	%rd8248, {%r6452, %r6451};
	shr.u64 	%rd8249, %rd7833, 6;
	xor.b64  	%rd8250, %rd8247, %rd8249;
	xor.b64  	%rd8251, %rd8250, %rd8248;
	shf.r.wrap.b32 	%r6453, %r6062, %r6061, 1;
	shf.r.wrap.b32 	%r6454, %r6061, %r6062, 1;
	mov.b64 	%rd8252, {%r6454, %r6453};
	shf.r.wrap.b32 	%r6455, %r6062, %r6061, 8;
	shf.r.wrap.b32 	%r6456, %r6061, %r6062, 8;
	mov.b64 	%rd8253, {%r6456, %r6455};
	shr.u64 	%rd8254, %rd7664, 7;
	xor.b64  	%rd8255, %rd8252, %rd8254;
	xor.b64  	%rd8256, %rd8255, %rd8253;
	add.s64 	%rd8257, %rd7651, %rd7768;
	add.s64 	%rd8258, %rd8257, %rd8251;
	add.s64 	%rd8259, %rd8258, %rd8256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6457,%dummy}, %rd8246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6458}, %rd8246;
	}
	shf.r.wrap.b32 	%r6459, %r6458, %r6457, 19;
	shf.r.wrap.b32 	%r6460, %r6457, %r6458, 19;
	mov.b64 	%rd8260, {%r6460, %r6459};
	shf.l.wrap.b32 	%r6461, %r6457, %r6458, 3;
	shf.l.wrap.b32 	%r6462, %r6458, %r6457, 3;
	mov.b64 	%rd8261, {%r6462, %r6461};
	shr.u64 	%rd8262, %rd8246, 6;
	xor.b64  	%rd8263, %rd8260, %rd8262;
	xor.b64  	%rd8264, %rd8263, %rd8261;
	shf.r.wrap.b32 	%r6463, %r6072, %r6071, 1;
	shf.r.wrap.b32 	%r6464, %r6071, %r6072, 1;
	mov.b64 	%rd8265, {%r6464, %r6463};
	shf.r.wrap.b32 	%r6465, %r6072, %r6071, 8;
	shf.r.wrap.b32 	%r6466, %r6071, %r6072, 8;
	mov.b64 	%rd8266, {%r6466, %r6465};
	shr.u64 	%rd8267, %rd7677, 7;
	xor.b64  	%rd8268, %rd8265, %rd8267;
	xor.b64  	%rd8269, %rd8268, %rd8266;
	add.s64 	%rd8270, %rd7664, %rd7781;
	add.s64 	%rd8271, %rd8270, %rd8264;
	add.s64 	%rd8272, %rd8271, %rd8269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6467,%dummy}, %rd8259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6468}, %rd8259;
	}
	shf.r.wrap.b32 	%r6469, %r6468, %r6467, 19;
	shf.r.wrap.b32 	%r6470, %r6467, %r6468, 19;
	mov.b64 	%rd8273, {%r6470, %r6469};
	shf.l.wrap.b32 	%r6471, %r6467, %r6468, 3;
	shf.l.wrap.b32 	%r6472, %r6468, %r6467, 3;
	mov.b64 	%rd8274, {%r6472, %r6471};
	shr.u64 	%rd8275, %rd8259, 6;
	xor.b64  	%rd8276, %rd8273, %rd8275;
	xor.b64  	%rd8277, %rd8276, %rd8274;
	shf.r.wrap.b32 	%r6473, %r6082, %r6081, 1;
	shf.r.wrap.b32 	%r6474, %r6081, %r6082, 1;
	mov.b64 	%rd8278, {%r6474, %r6473};
	shf.r.wrap.b32 	%r6475, %r6082, %r6081, 8;
	shf.r.wrap.b32 	%r6476, %r6081, %r6082, 8;
	mov.b64 	%rd8279, {%r6476, %r6475};
	shr.u64 	%rd8280, %rd7690, 7;
	xor.b64  	%rd8281, %rd8278, %rd8280;
	xor.b64  	%rd8282, %rd8281, %rd8279;
	add.s64 	%rd8283, %rd7794, %rd7677;
	add.s64 	%rd8284, %rd8283, %rd8277;
	add.s64 	%rd8285, %rd8284, %rd8282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6477,%dummy}, %rd8272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6478}, %rd8272;
	}
	shf.r.wrap.b32 	%r6479, %r6478, %r6477, 19;
	shf.r.wrap.b32 	%r6480, %r6477, %r6478, 19;
	mov.b64 	%rd8286, {%r6480, %r6479};
	shf.l.wrap.b32 	%r6481, %r6477, %r6478, 3;
	shf.l.wrap.b32 	%r6482, %r6478, %r6477, 3;
	mov.b64 	%rd8287, {%r6482, %r6481};
	shr.u64 	%rd8288, %rd8272, 6;
	xor.b64  	%rd8289, %rd8286, %rd8288;
	xor.b64  	%rd8290, %rd8289, %rd8287;
	shf.r.wrap.b32 	%r6483, %r6092, %r6091, 1;
	shf.r.wrap.b32 	%r6484, %r6091, %r6092, 1;
	mov.b64 	%rd8291, {%r6484, %r6483};
	shf.r.wrap.b32 	%r6485, %r6092, %r6091, 8;
	shf.r.wrap.b32 	%r6486, %r6091, %r6092, 8;
	mov.b64 	%rd8292, {%r6486, %r6485};
	shr.u64 	%rd8293, %rd7703, 7;
	xor.b64  	%rd8294, %rd8291, %rd8293;
	xor.b64  	%rd8295, %rd8294, %rd8292;
	add.s64 	%rd8296, %rd7807, %rd7690;
	add.s64 	%rd8297, %rd8296, %rd8290;
	add.s64 	%rd8298, %rd8297, %rd8295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6487,%dummy}, %rd8285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6488}, %rd8285;
	}
	shf.r.wrap.b32 	%r6489, %r6488, %r6487, 19;
	shf.r.wrap.b32 	%r6490, %r6487, %r6488, 19;
	mov.b64 	%rd8299, {%r6490, %r6489};
	shf.l.wrap.b32 	%r6491, %r6487, %r6488, 3;
	shf.l.wrap.b32 	%r6492, %r6488, %r6487, 3;
	mov.b64 	%rd8300, {%r6492, %r6491};
	shr.u64 	%rd8301, %rd8285, 6;
	xor.b64  	%rd8302, %rd8299, %rd8301;
	xor.b64  	%rd8303, %rd8302, %rd8300;
	shf.r.wrap.b32 	%r6493, %r6102, %r6101, 1;
	shf.r.wrap.b32 	%r6494, %r6101, %r6102, 1;
	mov.b64 	%rd8304, {%r6494, %r6493};
	shf.r.wrap.b32 	%r6495, %r6102, %r6101, 8;
	shf.r.wrap.b32 	%r6496, %r6101, %r6102, 8;
	mov.b64 	%rd8305, {%r6496, %r6495};
	shr.u64 	%rd8306, %rd7716, 7;
	xor.b64  	%rd8307, %rd8304, %rd8306;
	xor.b64  	%rd8308, %rd8307, %rd8305;
	add.s64 	%rd8309, %rd7820, %rd7703;
	add.s64 	%rd8310, %rd8309, %rd8303;
	add.s64 	%rd8311, %rd8310, %rd8308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6497,%dummy}, %rd8298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6498}, %rd8298;
	}
	shf.r.wrap.b32 	%r6499, %r6498, %r6497, 19;
	shf.r.wrap.b32 	%r6500, %r6497, %r6498, 19;
	mov.b64 	%rd8312, {%r6500, %r6499};
	shf.l.wrap.b32 	%r6501, %r6497, %r6498, 3;
	shf.l.wrap.b32 	%r6502, %r6498, %r6497, 3;
	mov.b64 	%rd8313, {%r6502, %r6501};
	shr.u64 	%rd8314, %rd8298, 6;
	xor.b64  	%rd8315, %rd8312, %rd8314;
	xor.b64  	%rd8316, %rd8315, %rd8313;
	shf.r.wrap.b32 	%r6503, %r6112, %r6111, 1;
	shf.r.wrap.b32 	%r6504, %r6111, %r6112, 1;
	mov.b64 	%rd8317, {%r6504, %r6503};
	shf.r.wrap.b32 	%r6505, %r6112, %r6111, 8;
	shf.r.wrap.b32 	%r6506, %r6111, %r6112, 8;
	mov.b64 	%rd8318, {%r6506, %r6505};
	shr.u64 	%rd8319, %rd7729, 7;
	xor.b64  	%rd8320, %rd8317, %rd8319;
	xor.b64  	%rd8321, %rd8320, %rd8318;
	add.s64 	%rd8322, %rd7833, %rd7716;
	add.s64 	%rd8323, %rd8322, %rd8316;
	add.s64 	%rd8324, %rd8323, %rd8321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6507,%dummy}, %rd8311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6508}, %rd8311;
	}
	shf.r.wrap.b32 	%r6509, %r6508, %r6507, 19;
	shf.r.wrap.b32 	%r6510, %r6507, %r6508, 19;
	mov.b64 	%rd8325, {%r6510, %r6509};
	shf.l.wrap.b32 	%r6511, %r6507, %r6508, 3;
	shf.l.wrap.b32 	%r6512, %r6508, %r6507, 3;
	mov.b64 	%rd8326, {%r6512, %r6511};
	shr.u64 	%rd8327, %rd8311, 6;
	xor.b64  	%rd8328, %rd8325, %rd8327;
	xor.b64  	%rd8329, %rd8328, %rd8326;
	shf.r.wrap.b32 	%r6513, %r6122, %r6121, 1;
	shf.r.wrap.b32 	%r6514, %r6121, %r6122, 1;
	mov.b64 	%rd8330, {%r6514, %r6513};
	shf.r.wrap.b32 	%r6515, %r6122, %r6121, 8;
	shf.r.wrap.b32 	%r6516, %r6121, %r6122, 8;
	mov.b64 	%rd8331, {%r6516, %r6515};
	shr.u64 	%rd8332, %rd7742, 7;
	xor.b64  	%rd8333, %rd8330, %rd8332;
	xor.b64  	%rd8334, %rd8333, %rd8331;
	add.s64 	%rd8335, %rd8246, %rd7729;
	add.s64 	%rd8336, %rd8335, %rd8329;
	add.s64 	%rd8337, %rd8336, %rd8334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6517,%dummy}, %rd8324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6518}, %rd8324;
	}
	shf.r.wrap.b32 	%r6519, %r6518, %r6517, 19;
	shf.r.wrap.b32 	%r6520, %r6517, %r6518, 19;
	mov.b64 	%rd8338, {%r6520, %r6519};
	shf.l.wrap.b32 	%r6521, %r6517, %r6518, 3;
	shf.l.wrap.b32 	%r6522, %r6518, %r6517, 3;
	mov.b64 	%rd8339, {%r6522, %r6521};
	shr.u64 	%rd8340, %rd8324, 6;
	xor.b64  	%rd8341, %rd8338, %rd8340;
	xor.b64  	%rd8342, %rd8341, %rd8339;
	shf.r.wrap.b32 	%r6523, %r6132, %r6131, 1;
	shf.r.wrap.b32 	%r6524, %r6131, %r6132, 1;
	mov.b64 	%rd8343, {%r6524, %r6523};
	shf.r.wrap.b32 	%r6525, %r6132, %r6131, 8;
	shf.r.wrap.b32 	%r6526, %r6131, %r6132, 8;
	mov.b64 	%rd8344, {%r6526, %r6525};
	shr.u64 	%rd8345, %rd7755, 7;
	xor.b64  	%rd8346, %rd8343, %rd8345;
	xor.b64  	%rd8347, %rd8346, %rd8344;
	add.s64 	%rd8348, %rd8259, %rd7742;
	add.s64 	%rd8349, %rd8348, %rd8342;
	add.s64 	%rd8350, %rd8349, %rd8347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6527,%dummy}, %rd8337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6528}, %rd8337;
	}
	shf.r.wrap.b32 	%r6529, %r6528, %r6527, 19;
	shf.r.wrap.b32 	%r6530, %r6527, %r6528, 19;
	mov.b64 	%rd8351, {%r6530, %r6529};
	shf.l.wrap.b32 	%r6531, %r6527, %r6528, 3;
	shf.l.wrap.b32 	%r6532, %r6528, %r6527, 3;
	mov.b64 	%rd8352, {%r6532, %r6531};
	shr.u64 	%rd8353, %rd8337, 6;
	xor.b64  	%rd8354, %rd8351, %rd8353;
	xor.b64  	%rd8355, %rd8354, %rd8352;
	shf.r.wrap.b32 	%r6533, %r6142, %r6141, 1;
	shf.r.wrap.b32 	%r6534, %r6141, %r6142, 1;
	mov.b64 	%rd8356, {%r6534, %r6533};
	shf.r.wrap.b32 	%r6535, %r6142, %r6141, 8;
	shf.r.wrap.b32 	%r6536, %r6141, %r6142, 8;
	mov.b64 	%rd8357, {%r6536, %r6535};
	shr.u64 	%rd8358, %rd7768, 7;
	xor.b64  	%rd8359, %rd8356, %rd8358;
	xor.b64  	%rd8360, %rd8359, %rd8357;
	add.s64 	%rd8361, %rd8272, %rd7755;
	add.s64 	%rd8362, %rd8361, %rd8355;
	add.s64 	%rd8363, %rd8362, %rd8360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6537,%dummy}, %rd8350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6538}, %rd8350;
	}
	shf.r.wrap.b32 	%r6539, %r6538, %r6537, 19;
	shf.r.wrap.b32 	%r6540, %r6537, %r6538, 19;
	mov.b64 	%rd8364, {%r6540, %r6539};
	shf.l.wrap.b32 	%r6541, %r6537, %r6538, 3;
	shf.l.wrap.b32 	%r6542, %r6538, %r6537, 3;
	mov.b64 	%rd8365, {%r6542, %r6541};
	shr.u64 	%rd8366, %rd8350, 6;
	xor.b64  	%rd8367, %rd8364, %rd8366;
	xor.b64  	%rd8368, %rd8367, %rd8365;
	shf.r.wrap.b32 	%r6543, %r6152, %r6151, 1;
	shf.r.wrap.b32 	%r6544, %r6151, %r6152, 1;
	mov.b64 	%rd8369, {%r6544, %r6543};
	shf.r.wrap.b32 	%r6545, %r6152, %r6151, 8;
	shf.r.wrap.b32 	%r6546, %r6151, %r6152, 8;
	mov.b64 	%rd8370, {%r6546, %r6545};
	shr.u64 	%rd8371, %rd7781, 7;
	xor.b64  	%rd8372, %rd8369, %rd8371;
	xor.b64  	%rd8373, %rd8372, %rd8370;
	add.s64 	%rd8374, %rd8285, %rd7768;
	add.s64 	%rd8375, %rd8374, %rd8368;
	add.s64 	%rd8376, %rd8375, %rd8373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6547,%dummy}, %rd8363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6548}, %rd8363;
	}
	shf.r.wrap.b32 	%r6549, %r6548, %r6547, 19;
	shf.r.wrap.b32 	%r6550, %r6547, %r6548, 19;
	mov.b64 	%rd8377, {%r6550, %r6549};
	shf.l.wrap.b32 	%r6551, %r6547, %r6548, 3;
	shf.l.wrap.b32 	%r6552, %r6548, %r6547, 3;
	mov.b64 	%rd8378, {%r6552, %r6551};
	shr.u64 	%rd8379, %rd8363, 6;
	xor.b64  	%rd8380, %rd8377, %rd8379;
	xor.b64  	%rd8381, %rd8380, %rd8378;
	shf.r.wrap.b32 	%r6553, %r6162, %r6161, 1;
	shf.r.wrap.b32 	%r6554, %r6161, %r6162, 1;
	mov.b64 	%rd8382, {%r6554, %r6553};
	shf.r.wrap.b32 	%r6555, %r6162, %r6161, 8;
	shf.r.wrap.b32 	%r6556, %r6161, %r6162, 8;
	mov.b64 	%rd8383, {%r6556, %r6555};
	shr.u64 	%rd8384, %rd7794, 7;
	xor.b64  	%rd8385, %rd8382, %rd8384;
	xor.b64  	%rd8386, %rd8385, %rd8383;
	add.s64 	%rd8387, %rd8298, %rd7781;
	add.s64 	%rd8388, %rd8387, %rd8381;
	add.s64 	%rd8389, %rd8388, %rd8386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6557,%dummy}, %rd8376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6558}, %rd8376;
	}
	shf.r.wrap.b32 	%r6559, %r6558, %r6557, 19;
	shf.r.wrap.b32 	%r6560, %r6557, %r6558, 19;
	mov.b64 	%rd8390, {%r6560, %r6559};
	shf.l.wrap.b32 	%r6561, %r6557, %r6558, 3;
	shf.l.wrap.b32 	%r6562, %r6558, %r6557, 3;
	mov.b64 	%rd8391, {%r6562, %r6561};
	shr.u64 	%rd8392, %rd8376, 6;
	xor.b64  	%rd8393, %rd8390, %rd8392;
	xor.b64  	%rd8394, %rd8393, %rd8391;
	shf.r.wrap.b32 	%r6563, %r6172, %r6171, 1;
	shf.r.wrap.b32 	%r6564, %r6171, %r6172, 1;
	mov.b64 	%rd8395, {%r6564, %r6563};
	shf.r.wrap.b32 	%r6565, %r6172, %r6171, 8;
	shf.r.wrap.b32 	%r6566, %r6171, %r6172, 8;
	mov.b64 	%rd8396, {%r6566, %r6565};
	shr.u64 	%rd8397, %rd7807, 7;
	xor.b64  	%rd8398, %rd8395, %rd8397;
	xor.b64  	%rd8399, %rd8398, %rd8396;
	add.s64 	%rd8400, %rd8311, %rd7794;
	add.s64 	%rd8401, %rd8400, %rd8394;
	add.s64 	%rd8402, %rd8401, %rd8399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6567,%dummy}, %rd8389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6568}, %rd8389;
	}
	shf.r.wrap.b32 	%r6569, %r6568, %r6567, 19;
	shf.r.wrap.b32 	%r6570, %r6567, %r6568, 19;
	mov.b64 	%rd8403, {%r6570, %r6569};
	shf.l.wrap.b32 	%r6571, %r6567, %r6568, 3;
	shf.l.wrap.b32 	%r6572, %r6568, %r6567, 3;
	mov.b64 	%rd8404, {%r6572, %r6571};
	shr.u64 	%rd8405, %rd8389, 6;
	xor.b64  	%rd8406, %rd8403, %rd8405;
	xor.b64  	%rd8407, %rd8406, %rd8404;
	shf.r.wrap.b32 	%r6573, %r6438, %r6437, 1;
	shf.r.wrap.b32 	%r6574, %r6437, %r6438, 1;
	mov.b64 	%rd8408, {%r6574, %r6573};
	shf.r.wrap.b32 	%r6575, %r6438, %r6437, 8;
	shf.r.wrap.b32 	%r6576, %r6437, %r6438, 8;
	mov.b64 	%rd8409, {%r6576, %r6575};
	shr.u64 	%rd8410, %rd7820, 7;
	xor.b64  	%rd8411, %rd8408, %rd8410;
	xor.b64  	%rd8412, %rd8411, %rd8409;
	add.s64 	%rd8413, %rd8324, %rd7807;
	add.s64 	%rd8414, %rd8413, %rd8407;
	add.s64 	%rd8415, %rd8414, %rd8412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6577,%dummy}, %rd8402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6578}, %rd8402;
	}
	shf.r.wrap.b32 	%r6579, %r6578, %r6577, 19;
	shf.r.wrap.b32 	%r6580, %r6577, %r6578, 19;
	mov.b64 	%rd8416, {%r6580, %r6579};
	shf.l.wrap.b32 	%r6581, %r6577, %r6578, 3;
	shf.l.wrap.b32 	%r6582, %r6578, %r6577, 3;
	mov.b64 	%rd8417, {%r6582, %r6581};
	shr.u64 	%rd8418, %rd8402, 6;
	xor.b64  	%rd8419, %rd8416, %rd8418;
	xor.b64  	%rd8420, %rd8419, %rd8417;
	shf.r.wrap.b32 	%r6583, %r6448, %r6447, 1;
	shf.r.wrap.b32 	%r6584, %r6447, %r6448, 1;
	mov.b64 	%rd8421, {%r6584, %r6583};
	shf.r.wrap.b32 	%r6585, %r6448, %r6447, 8;
	shf.r.wrap.b32 	%r6586, %r6447, %r6448, 8;
	mov.b64 	%rd8422, {%r6586, %r6585};
	shr.u64 	%rd8423, %rd7833, 7;
	xor.b64  	%rd8424, %rd8421, %rd8423;
	xor.b64  	%rd8425, %rd8424, %rd8422;
	add.s64 	%rd8426, %rd8337, %rd7820;
	add.s64 	%rd8427, %rd8426, %rd8420;
	add.s64 	%rd8428, %rd8427, %rd8425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6587,%dummy}, %rd8415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6588}, %rd8415;
	}
	shf.r.wrap.b32 	%r6589, %r6588, %r6587, 19;
	shf.r.wrap.b32 	%r6590, %r6587, %r6588, 19;
	mov.b64 	%rd8429, {%r6590, %r6589};
	shf.l.wrap.b32 	%r6591, %r6587, %r6588, 3;
	shf.l.wrap.b32 	%r6592, %r6588, %r6587, 3;
	mov.b64 	%rd8430, {%r6592, %r6591};
	shr.u64 	%rd8431, %rd8415, 6;
	xor.b64  	%rd8432, %rd8429, %rd8431;
	xor.b64  	%rd8433, %rd8432, %rd8430;
	shf.r.wrap.b32 	%r6593, %r6458, %r6457, 1;
	shf.r.wrap.b32 	%r6594, %r6457, %r6458, 1;
	mov.b64 	%rd8434, {%r6594, %r6593};
	shf.r.wrap.b32 	%r6595, %r6458, %r6457, 8;
	shf.r.wrap.b32 	%r6596, %r6457, %r6458, 8;
	mov.b64 	%rd8435, {%r6596, %r6595};
	shr.u64 	%rd8436, %rd8246, 7;
	xor.b64  	%rd8437, %rd8434, %rd8436;
	xor.b64  	%rd8438, %rd8437, %rd8435;
	add.s64 	%rd8439, %rd8350, %rd7833;
	add.s64 	%rd8440, %rd8439, %rd8433;
	add.s64 	%rd8441, %rd8440, %rd8438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6597,%dummy}, %rd8222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6598}, %rd8222;
	}
	shf.r.wrap.b32 	%r6599, %r6598, %r6597, 14;
	shf.r.wrap.b32 	%r6600, %r6597, %r6598, 14;
	mov.b64 	%rd8442, {%r6600, %r6599};
	shf.r.wrap.b32 	%r6601, %r6598, %r6597, 18;
	shf.r.wrap.b32 	%r6602, %r6597, %r6598, 18;
	mov.b64 	%rd8443, {%r6602, %r6601};
	xor.b64  	%rd8444, %rd8443, %rd8442;
	shf.l.wrap.b32 	%r6603, %r6597, %r6598, 23;
	shf.l.wrap.b32 	%r6604, %r6598, %r6597, 23;
	mov.b64 	%rd8445, {%r6604, %r6603};
	xor.b64  	%rd8446, %rd8444, %rd8445;
	xor.b64  	%rd8447, %rd8197, %rd8172;
	and.b64  	%rd8448, %rd8447, %rd8222;
	xor.b64  	%rd8449, %rd8448, %rd8172;
	add.s64 	%rd8450, %rd8449, %rd8147;
	add.s64 	%rd8451, %rd8450, %rd8246;
	add.s64 	%rd8453, %rd8451, %rd10014;
	add.s64 	%rd8454, %rd8453, %rd8446;
	add.s64 	%rd8455, %rd8454, %rd8158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6605,%dummy}, %rd8233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6606}, %rd8233;
	}
	shf.r.wrap.b32 	%r6607, %r6606, %r6605, 28;
	shf.r.wrap.b32 	%r6608, %r6605, %r6606, 28;
	mov.b64 	%rd8456, {%r6608, %r6607};
	shf.l.wrap.b32 	%r6609, %r6605, %r6606, 30;
	shf.l.wrap.b32 	%r6610, %r6606, %r6605, 30;
	mov.b64 	%rd8457, {%r6610, %r6609};
	xor.b64  	%rd8458, %rd8457, %rd8456;
	shf.l.wrap.b32 	%r6611, %r6605, %r6606, 25;
	shf.l.wrap.b32 	%r6612, %r6606, %r6605, 25;
	mov.b64 	%rd8459, {%r6612, %r6611};
	xor.b64  	%rd8460, %rd8458, %rd8459;
	xor.b64  	%rd8461, %rd8233, %rd8183;
	xor.b64  	%rd8462, %rd8233, %rd8208;
	and.b64  	%rd8463, %rd8462, %rd8461;
	xor.b64  	%rd8464, %rd8463, %rd8233;
	add.s64 	%rd8465, %rd8454, %rd8464;
	add.s64 	%rd8466, %rd8465, %rd8460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6613,%dummy}, %rd8455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6614}, %rd8455;
	}
	shf.r.wrap.b32 	%r6615, %r6614, %r6613, 14;
	shf.r.wrap.b32 	%r6616, %r6613, %r6614, 14;
	mov.b64 	%rd8467, {%r6616, %r6615};
	shf.r.wrap.b32 	%r6617, %r6614, %r6613, 18;
	shf.r.wrap.b32 	%r6618, %r6613, %r6614, 18;
	mov.b64 	%rd8468, {%r6618, %r6617};
	xor.b64  	%rd8469, %rd8468, %rd8467;
	shf.l.wrap.b32 	%r6619, %r6613, %r6614, 23;
	shf.l.wrap.b32 	%r6620, %r6614, %r6613, 23;
	mov.b64 	%rd8470, {%r6620, %r6619};
	xor.b64  	%rd8471, %rd8469, %rd8470;
	xor.b64  	%rd8472, %rd8222, %rd8197;
	and.b64  	%rd8473, %rd8455, %rd8472;
	xor.b64  	%rd8474, %rd8473, %rd8197;
	add.s64 	%rd8475, %rd8259, %rd8172;
	add.s64 	%rd8477, %rd8475, %rd10015;
	add.s64 	%rd8478, %rd8477, %rd8474;
	add.s64 	%rd8479, %rd8478, %rd8471;
	add.s64 	%rd8480, %rd8479, %rd8183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6621,%dummy}, %rd8466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6622}, %rd8466;
	}
	shf.r.wrap.b32 	%r6623, %r6622, %r6621, 28;
	shf.r.wrap.b32 	%r6624, %r6621, %r6622, 28;
	mov.b64 	%rd8481, {%r6624, %r6623};
	shf.l.wrap.b32 	%r6625, %r6621, %r6622, 30;
	shf.l.wrap.b32 	%r6626, %r6622, %r6621, 30;
	mov.b64 	%rd8482, {%r6626, %r6625};
	xor.b64  	%rd8483, %rd8482, %rd8481;
	shf.l.wrap.b32 	%r6627, %r6621, %r6622, 25;
	shf.l.wrap.b32 	%r6628, %r6622, %r6621, 25;
	mov.b64 	%rd8484, {%r6628, %r6627};
	xor.b64  	%rd8485, %rd8483, %rd8484;
	xor.b64  	%rd8486, %rd8466, %rd8208;
	xor.b64  	%rd8487, %rd8466, %rd8233;
	and.b64  	%rd8488, %rd8487, %rd8486;
	xor.b64  	%rd8489, %rd8488, %rd8466;
	add.s64 	%rd8490, %rd8479, %rd8489;
	add.s64 	%rd8491, %rd8490, %rd8485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6629,%dummy}, %rd8480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6630}, %rd8480;
	}
	shf.r.wrap.b32 	%r6631, %r6630, %r6629, 14;
	shf.r.wrap.b32 	%r6632, %r6629, %r6630, 14;
	mov.b64 	%rd8492, {%r6632, %r6631};
	shf.r.wrap.b32 	%r6633, %r6630, %r6629, 18;
	shf.r.wrap.b32 	%r6634, %r6629, %r6630, 18;
	mov.b64 	%rd8493, {%r6634, %r6633};
	xor.b64  	%rd8494, %rd8493, %rd8492;
	shf.l.wrap.b32 	%r6635, %r6629, %r6630, 23;
	shf.l.wrap.b32 	%r6636, %r6630, %r6629, 23;
	mov.b64 	%rd8495, {%r6636, %r6635};
	xor.b64  	%rd8496, %rd8494, %rd8495;
	xor.b64  	%rd8497, %rd8455, %rd8222;
	and.b64  	%rd8498, %rd8480, %rd8497;
	xor.b64  	%rd8499, %rd8498, %rd8222;
	add.s64 	%rd8500, %rd8272, %rd8197;
	add.s64 	%rd8502, %rd8500, %rd10016;
	add.s64 	%rd8503, %rd8502, %rd8499;
	add.s64 	%rd8504, %rd8503, %rd8496;
	add.s64 	%rd8505, %rd8504, %rd8208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6637,%dummy}, %rd8491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6638}, %rd8491;
	}
	shf.r.wrap.b32 	%r6639, %r6638, %r6637, 28;
	shf.r.wrap.b32 	%r6640, %r6637, %r6638, 28;
	mov.b64 	%rd8506, {%r6640, %r6639};
	shf.l.wrap.b32 	%r6641, %r6637, %r6638, 30;
	shf.l.wrap.b32 	%r6642, %r6638, %r6637, 30;
	mov.b64 	%rd8507, {%r6642, %r6641};
	xor.b64  	%rd8508, %rd8507, %rd8506;
	shf.l.wrap.b32 	%r6643, %r6637, %r6638, 25;
	shf.l.wrap.b32 	%r6644, %r6638, %r6637, 25;
	mov.b64 	%rd8509, {%r6644, %r6643};
	xor.b64  	%rd8510, %rd8508, %rd8509;
	xor.b64  	%rd8511, %rd8491, %rd8233;
	xor.b64  	%rd8512, %rd8491, %rd8466;
	and.b64  	%rd8513, %rd8512, %rd8511;
	xor.b64  	%rd8514, %rd8513, %rd8491;
	add.s64 	%rd8515, %rd8504, %rd8514;
	add.s64 	%rd8516, %rd8515, %rd8510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6645,%dummy}, %rd8505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6646}, %rd8505;
	}
	shf.r.wrap.b32 	%r6647, %r6646, %r6645, 14;
	shf.r.wrap.b32 	%r6648, %r6645, %r6646, 14;
	mov.b64 	%rd8517, {%r6648, %r6647};
	shf.r.wrap.b32 	%r6649, %r6646, %r6645, 18;
	shf.r.wrap.b32 	%r6650, %r6645, %r6646, 18;
	mov.b64 	%rd8518, {%r6650, %r6649};
	xor.b64  	%rd8519, %rd8518, %rd8517;
	shf.l.wrap.b32 	%r6651, %r6645, %r6646, 23;
	shf.l.wrap.b32 	%r6652, %r6646, %r6645, 23;
	mov.b64 	%rd8520, {%r6652, %r6651};
	xor.b64  	%rd8521, %rd8519, %rd8520;
	xor.b64  	%rd8522, %rd8480, %rd8455;
	and.b64  	%rd8523, %rd8505, %rd8522;
	xor.b64  	%rd8524, %rd8523, %rd8455;
	add.s64 	%rd8525, %rd8285, %rd8222;
	add.s64 	%rd8527, %rd8525, %rd10017;
	add.s64 	%rd8528, %rd8527, %rd8524;
	add.s64 	%rd8529, %rd8528, %rd8521;
	add.s64 	%rd8530, %rd8529, %rd8233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6653,%dummy}, %rd8516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6654}, %rd8516;
	}
	shf.r.wrap.b32 	%r6655, %r6654, %r6653, 28;
	shf.r.wrap.b32 	%r6656, %r6653, %r6654, 28;
	mov.b64 	%rd8531, {%r6656, %r6655};
	shf.l.wrap.b32 	%r6657, %r6653, %r6654, 30;
	shf.l.wrap.b32 	%r6658, %r6654, %r6653, 30;
	mov.b64 	%rd8532, {%r6658, %r6657};
	xor.b64  	%rd8533, %rd8532, %rd8531;
	shf.l.wrap.b32 	%r6659, %r6653, %r6654, 25;
	shf.l.wrap.b32 	%r6660, %r6654, %r6653, 25;
	mov.b64 	%rd8534, {%r6660, %r6659};
	xor.b64  	%rd8535, %rd8533, %rd8534;
	xor.b64  	%rd8536, %rd8516, %rd8466;
	xor.b64  	%rd8537, %rd8516, %rd8491;
	and.b64  	%rd8538, %rd8537, %rd8536;
	xor.b64  	%rd8539, %rd8538, %rd8516;
	add.s64 	%rd8540, %rd8529, %rd8539;
	add.s64 	%rd8541, %rd8540, %rd8535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6661,%dummy}, %rd8530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6662}, %rd8530;
	}
	shf.r.wrap.b32 	%r6663, %r6662, %r6661, 14;
	shf.r.wrap.b32 	%r6664, %r6661, %r6662, 14;
	mov.b64 	%rd8542, {%r6664, %r6663};
	shf.r.wrap.b32 	%r6665, %r6662, %r6661, 18;
	shf.r.wrap.b32 	%r6666, %r6661, %r6662, 18;
	mov.b64 	%rd8543, {%r6666, %r6665};
	xor.b64  	%rd8544, %rd8543, %rd8542;
	shf.l.wrap.b32 	%r6667, %r6661, %r6662, 23;
	shf.l.wrap.b32 	%r6668, %r6662, %r6661, 23;
	mov.b64 	%rd8545, {%r6668, %r6667};
	xor.b64  	%rd8546, %rd8544, %rd8545;
	xor.b64  	%rd8547, %rd8505, %rd8480;
	and.b64  	%rd8548, %rd8530, %rd8547;
	xor.b64  	%rd8549, %rd8548, %rd8480;
	add.s64 	%rd8550, %rd8455, %rd8298;
	add.s64 	%rd8552, %rd8550, %rd10018;
	add.s64 	%rd8553, %rd8552, %rd8549;
	add.s64 	%rd8554, %rd8553, %rd8546;
	add.s64 	%rd8555, %rd8554, %rd8466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6669,%dummy}, %rd8541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6670}, %rd8541;
	}
	shf.r.wrap.b32 	%r6671, %r6670, %r6669, 28;
	shf.r.wrap.b32 	%r6672, %r6669, %r6670, 28;
	mov.b64 	%rd8556, {%r6672, %r6671};
	shf.l.wrap.b32 	%r6673, %r6669, %r6670, 30;
	shf.l.wrap.b32 	%r6674, %r6670, %r6669, 30;
	mov.b64 	%rd8557, {%r6674, %r6673};
	xor.b64  	%rd8558, %rd8557, %rd8556;
	shf.l.wrap.b32 	%r6675, %r6669, %r6670, 25;
	shf.l.wrap.b32 	%r6676, %r6670, %r6669, 25;
	mov.b64 	%rd8559, {%r6676, %r6675};
	xor.b64  	%rd8560, %rd8558, %rd8559;
	xor.b64  	%rd8561, %rd8541, %rd8491;
	xor.b64  	%rd8562, %rd8541, %rd8516;
	and.b64  	%rd8563, %rd8562, %rd8561;
	xor.b64  	%rd8564, %rd8563, %rd8541;
	add.s64 	%rd8565, %rd8554, %rd8564;
	add.s64 	%rd8566, %rd8565, %rd8560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6677,%dummy}, %rd8555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6678}, %rd8555;
	}
	shf.r.wrap.b32 	%r6679, %r6678, %r6677, 14;
	shf.r.wrap.b32 	%r6680, %r6677, %r6678, 14;
	mov.b64 	%rd8567, {%r6680, %r6679};
	shf.r.wrap.b32 	%r6681, %r6678, %r6677, 18;
	shf.r.wrap.b32 	%r6682, %r6677, %r6678, 18;
	mov.b64 	%rd8568, {%r6682, %r6681};
	xor.b64  	%rd8569, %rd8568, %rd8567;
	shf.l.wrap.b32 	%r6683, %r6677, %r6678, 23;
	shf.l.wrap.b32 	%r6684, %r6678, %r6677, 23;
	mov.b64 	%rd8570, {%r6684, %r6683};
	xor.b64  	%rd8571, %rd8569, %rd8570;
	xor.b64  	%rd8572, %rd8530, %rd8505;
	and.b64  	%rd8573, %rd8555, %rd8572;
	xor.b64  	%rd8574, %rd8573, %rd8505;
	add.s64 	%rd8575, %rd8480, %rd8311;
	add.s64 	%rd8577, %rd8575, %rd10019;
	add.s64 	%rd8578, %rd8577, %rd8574;
	add.s64 	%rd8579, %rd8578, %rd8571;
	add.s64 	%rd8580, %rd8579, %rd8491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6685,%dummy}, %rd8566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6686}, %rd8566;
	}
	shf.r.wrap.b32 	%r6687, %r6686, %r6685, 28;
	shf.r.wrap.b32 	%r6688, %r6685, %r6686, 28;
	mov.b64 	%rd8581, {%r6688, %r6687};
	shf.l.wrap.b32 	%r6689, %r6685, %r6686, 30;
	shf.l.wrap.b32 	%r6690, %r6686, %r6685, 30;
	mov.b64 	%rd8582, {%r6690, %r6689};
	xor.b64  	%rd8583, %rd8582, %rd8581;
	shf.l.wrap.b32 	%r6691, %r6685, %r6686, 25;
	shf.l.wrap.b32 	%r6692, %r6686, %r6685, 25;
	mov.b64 	%rd8584, {%r6692, %r6691};
	xor.b64  	%rd8585, %rd8583, %rd8584;
	xor.b64  	%rd8586, %rd8566, %rd8516;
	xor.b64  	%rd8587, %rd8566, %rd8541;
	and.b64  	%rd8588, %rd8587, %rd8586;
	xor.b64  	%rd8589, %rd8588, %rd8566;
	add.s64 	%rd8590, %rd8579, %rd8589;
	add.s64 	%rd8591, %rd8590, %rd8585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6693,%dummy}, %rd8580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6694}, %rd8580;
	}
	shf.r.wrap.b32 	%r6695, %r6694, %r6693, 14;
	shf.r.wrap.b32 	%r6696, %r6693, %r6694, 14;
	mov.b64 	%rd8592, {%r6696, %r6695};
	shf.r.wrap.b32 	%r6697, %r6694, %r6693, 18;
	shf.r.wrap.b32 	%r6698, %r6693, %r6694, 18;
	mov.b64 	%rd8593, {%r6698, %r6697};
	xor.b64  	%rd8594, %rd8593, %rd8592;
	shf.l.wrap.b32 	%r6699, %r6693, %r6694, 23;
	shf.l.wrap.b32 	%r6700, %r6694, %r6693, 23;
	mov.b64 	%rd8595, {%r6700, %r6699};
	xor.b64  	%rd8596, %rd8594, %rd8595;
	xor.b64  	%rd8597, %rd8555, %rd8530;
	and.b64  	%rd8598, %rd8580, %rd8597;
	xor.b64  	%rd8599, %rd8598, %rd8530;
	add.s64 	%rd8600, %rd8505, %rd8324;
	add.s64 	%rd8602, %rd8600, %rd10020;
	add.s64 	%rd8603, %rd8602, %rd8599;
	add.s64 	%rd8604, %rd8603, %rd8596;
	add.s64 	%rd8605, %rd8604, %rd8516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6701,%dummy}, %rd8591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6702}, %rd8591;
	}
	shf.r.wrap.b32 	%r6703, %r6702, %r6701, 28;
	shf.r.wrap.b32 	%r6704, %r6701, %r6702, 28;
	mov.b64 	%rd8606, {%r6704, %r6703};
	shf.l.wrap.b32 	%r6705, %r6701, %r6702, 30;
	shf.l.wrap.b32 	%r6706, %r6702, %r6701, 30;
	mov.b64 	%rd8607, {%r6706, %r6705};
	xor.b64  	%rd8608, %rd8607, %rd8606;
	shf.l.wrap.b32 	%r6707, %r6701, %r6702, 25;
	shf.l.wrap.b32 	%r6708, %r6702, %r6701, 25;
	mov.b64 	%rd8609, {%r6708, %r6707};
	xor.b64  	%rd8610, %rd8608, %rd8609;
	xor.b64  	%rd8611, %rd8591, %rd8541;
	xor.b64  	%rd8612, %rd8591, %rd8566;
	and.b64  	%rd8613, %rd8612, %rd8611;
	xor.b64  	%rd8614, %rd8613, %rd8591;
	add.s64 	%rd8615, %rd8604, %rd8614;
	add.s64 	%rd8616, %rd8615, %rd8610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6709,%dummy}, %rd8605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6710}, %rd8605;
	}
	shf.r.wrap.b32 	%r6711, %r6710, %r6709, 14;
	shf.r.wrap.b32 	%r6712, %r6709, %r6710, 14;
	mov.b64 	%rd8617, {%r6712, %r6711};
	shf.r.wrap.b32 	%r6713, %r6710, %r6709, 18;
	shf.r.wrap.b32 	%r6714, %r6709, %r6710, 18;
	mov.b64 	%rd8618, {%r6714, %r6713};
	xor.b64  	%rd8619, %rd8618, %rd8617;
	shf.l.wrap.b32 	%r6715, %r6709, %r6710, 23;
	shf.l.wrap.b32 	%r6716, %r6710, %r6709, 23;
	mov.b64 	%rd8620, {%r6716, %r6715};
	xor.b64  	%rd8621, %rd8619, %rd8620;
	xor.b64  	%rd8622, %rd8580, %rd8555;
	and.b64  	%rd8623, %rd8605, %rd8622;
	xor.b64  	%rd8624, %rd8623, %rd8555;
	add.s64 	%rd8625, %rd8530, %rd8337;
	add.s64 	%rd8627, %rd8625, %rd10021;
	add.s64 	%rd8628, %rd8627, %rd8624;
	add.s64 	%rd8629, %rd8628, %rd8621;
	add.s64 	%rd8630, %rd8629, %rd8541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6717,%dummy}, %rd8616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6718}, %rd8616;
	}
	shf.r.wrap.b32 	%r6719, %r6718, %r6717, 28;
	shf.r.wrap.b32 	%r6720, %r6717, %r6718, 28;
	mov.b64 	%rd8631, {%r6720, %r6719};
	shf.l.wrap.b32 	%r6721, %r6717, %r6718, 30;
	shf.l.wrap.b32 	%r6722, %r6718, %r6717, 30;
	mov.b64 	%rd8632, {%r6722, %r6721};
	xor.b64  	%rd8633, %rd8632, %rd8631;
	shf.l.wrap.b32 	%r6723, %r6717, %r6718, 25;
	shf.l.wrap.b32 	%r6724, %r6718, %r6717, 25;
	mov.b64 	%rd8634, {%r6724, %r6723};
	xor.b64  	%rd8635, %rd8633, %rd8634;
	xor.b64  	%rd8636, %rd8616, %rd8566;
	xor.b64  	%rd8637, %rd8616, %rd8591;
	and.b64  	%rd8638, %rd8637, %rd8636;
	xor.b64  	%rd8639, %rd8638, %rd8616;
	add.s64 	%rd8640, %rd8629, %rd8639;
	add.s64 	%rd8641, %rd8640, %rd8635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6725,%dummy}, %rd8630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6726}, %rd8630;
	}
	shf.r.wrap.b32 	%r6727, %r6726, %r6725, 14;
	shf.r.wrap.b32 	%r6728, %r6725, %r6726, 14;
	mov.b64 	%rd8642, {%r6728, %r6727};
	shf.r.wrap.b32 	%r6729, %r6726, %r6725, 18;
	shf.r.wrap.b32 	%r6730, %r6725, %r6726, 18;
	mov.b64 	%rd8643, {%r6730, %r6729};
	xor.b64  	%rd8644, %rd8643, %rd8642;
	shf.l.wrap.b32 	%r6731, %r6725, %r6726, 23;
	shf.l.wrap.b32 	%r6732, %r6726, %r6725, 23;
	mov.b64 	%rd8645, {%r6732, %r6731};
	xor.b64  	%rd8646, %rd8644, %rd8645;
	xor.b64  	%rd8647, %rd8605, %rd8580;
	and.b64  	%rd8648, %rd8630, %rd8647;
	xor.b64  	%rd8649, %rd8648, %rd8580;
	add.s64 	%rd8650, %rd8555, %rd8350;
	add.s64 	%rd8652, %rd8650, %rd10022;
	add.s64 	%rd8653, %rd8652, %rd8649;
	add.s64 	%rd8654, %rd8653, %rd8646;
	add.s64 	%rd8655, %rd8654, %rd8566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6733,%dummy}, %rd8641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6734}, %rd8641;
	}
	shf.r.wrap.b32 	%r6735, %r6734, %r6733, 28;
	shf.r.wrap.b32 	%r6736, %r6733, %r6734, 28;
	mov.b64 	%rd8656, {%r6736, %r6735};
	shf.l.wrap.b32 	%r6737, %r6733, %r6734, 30;
	shf.l.wrap.b32 	%r6738, %r6734, %r6733, 30;
	mov.b64 	%rd8657, {%r6738, %r6737};
	xor.b64  	%rd8658, %rd8657, %rd8656;
	shf.l.wrap.b32 	%r6739, %r6733, %r6734, 25;
	shf.l.wrap.b32 	%r6740, %r6734, %r6733, 25;
	mov.b64 	%rd8659, {%r6740, %r6739};
	xor.b64  	%rd8660, %rd8658, %rd8659;
	xor.b64  	%rd8661, %rd8641, %rd8591;
	xor.b64  	%rd8662, %rd8641, %rd8616;
	and.b64  	%rd8663, %rd8662, %rd8661;
	xor.b64  	%rd8664, %rd8663, %rd8641;
	add.s64 	%rd8665, %rd8654, %rd8664;
	add.s64 	%rd8666, %rd8665, %rd8660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6741,%dummy}, %rd8655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6742}, %rd8655;
	}
	shf.r.wrap.b32 	%r6743, %r6742, %r6741, 14;
	shf.r.wrap.b32 	%r6744, %r6741, %r6742, 14;
	mov.b64 	%rd8667, {%r6744, %r6743};
	shf.r.wrap.b32 	%r6745, %r6742, %r6741, 18;
	shf.r.wrap.b32 	%r6746, %r6741, %r6742, 18;
	mov.b64 	%rd8668, {%r6746, %r6745};
	xor.b64  	%rd8669, %rd8668, %rd8667;
	shf.l.wrap.b32 	%r6747, %r6741, %r6742, 23;
	shf.l.wrap.b32 	%r6748, %r6742, %r6741, 23;
	mov.b64 	%rd8670, {%r6748, %r6747};
	xor.b64  	%rd8671, %rd8669, %rd8670;
	xor.b64  	%rd8672, %rd8630, %rd8605;
	and.b64  	%rd8673, %rd8655, %rd8672;
	xor.b64  	%rd8674, %rd8673, %rd8605;
	add.s64 	%rd8675, %rd8580, %rd8363;
	add.s64 	%rd8677, %rd8675, %rd10023;
	add.s64 	%rd8678, %rd8677, %rd8674;
	add.s64 	%rd8679, %rd8678, %rd8671;
	add.s64 	%rd8680, %rd8679, %rd8591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6749,%dummy}, %rd8666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6750}, %rd8666;
	}
	shf.r.wrap.b32 	%r6751, %r6750, %r6749, 28;
	shf.r.wrap.b32 	%r6752, %r6749, %r6750, 28;
	mov.b64 	%rd8681, {%r6752, %r6751};
	shf.l.wrap.b32 	%r6753, %r6749, %r6750, 30;
	shf.l.wrap.b32 	%r6754, %r6750, %r6749, 30;
	mov.b64 	%rd8682, {%r6754, %r6753};
	xor.b64  	%rd8683, %rd8682, %rd8681;
	shf.l.wrap.b32 	%r6755, %r6749, %r6750, 25;
	shf.l.wrap.b32 	%r6756, %r6750, %r6749, 25;
	mov.b64 	%rd8684, {%r6756, %r6755};
	xor.b64  	%rd8685, %rd8683, %rd8684;
	xor.b64  	%rd8686, %rd8666, %rd8616;
	xor.b64  	%rd8687, %rd8666, %rd8641;
	and.b64  	%rd8688, %rd8687, %rd8686;
	xor.b64  	%rd8689, %rd8688, %rd8666;
	add.s64 	%rd8690, %rd8679, %rd8689;
	add.s64 	%rd8691, %rd8690, %rd8685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6757,%dummy}, %rd8680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6758}, %rd8680;
	}
	shf.r.wrap.b32 	%r6759, %r6758, %r6757, 14;
	shf.r.wrap.b32 	%r6760, %r6757, %r6758, 14;
	mov.b64 	%rd8692, {%r6760, %r6759};
	shf.r.wrap.b32 	%r6761, %r6758, %r6757, 18;
	shf.r.wrap.b32 	%r6762, %r6757, %r6758, 18;
	mov.b64 	%rd8693, {%r6762, %r6761};
	xor.b64  	%rd8694, %rd8693, %rd8692;
	shf.l.wrap.b32 	%r6763, %r6757, %r6758, 23;
	shf.l.wrap.b32 	%r6764, %r6758, %r6757, 23;
	mov.b64 	%rd8695, {%r6764, %r6763};
	xor.b64  	%rd8696, %rd8694, %rd8695;
	xor.b64  	%rd8697, %rd8655, %rd8630;
	and.b64  	%rd8698, %rd8680, %rd8697;
	xor.b64  	%rd8699, %rd8698, %rd8630;
	add.s64 	%rd8700, %rd8605, %rd8376;
	add.s64 	%rd8702, %rd8700, %rd10024;
	add.s64 	%rd8703, %rd8702, %rd8699;
	add.s64 	%rd8704, %rd8703, %rd8696;
	add.s64 	%rd8705, %rd8704, %rd8616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6765,%dummy}, %rd8691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6766}, %rd8691;
	}
	shf.r.wrap.b32 	%r6767, %r6766, %r6765, 28;
	shf.r.wrap.b32 	%r6768, %r6765, %r6766, 28;
	mov.b64 	%rd8706, {%r6768, %r6767};
	shf.l.wrap.b32 	%r6769, %r6765, %r6766, 30;
	shf.l.wrap.b32 	%r6770, %r6766, %r6765, 30;
	mov.b64 	%rd8707, {%r6770, %r6769};
	xor.b64  	%rd8708, %rd8707, %rd8706;
	shf.l.wrap.b32 	%r6771, %r6765, %r6766, 25;
	shf.l.wrap.b32 	%r6772, %r6766, %r6765, 25;
	mov.b64 	%rd8709, {%r6772, %r6771};
	xor.b64  	%rd8710, %rd8708, %rd8709;
	xor.b64  	%rd8711, %rd8691, %rd8641;
	xor.b64  	%rd8712, %rd8691, %rd8666;
	and.b64  	%rd8713, %rd8712, %rd8711;
	xor.b64  	%rd8714, %rd8713, %rd8691;
	add.s64 	%rd8715, %rd8704, %rd8714;
	add.s64 	%rd8716, %rd8715, %rd8710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6773,%dummy}, %rd8705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6774}, %rd8705;
	}
	shf.r.wrap.b32 	%r6775, %r6774, %r6773, 14;
	shf.r.wrap.b32 	%r6776, %r6773, %r6774, 14;
	mov.b64 	%rd8717, {%r6776, %r6775};
	shf.r.wrap.b32 	%r6777, %r6774, %r6773, 18;
	shf.r.wrap.b32 	%r6778, %r6773, %r6774, 18;
	mov.b64 	%rd8718, {%r6778, %r6777};
	xor.b64  	%rd8719, %rd8718, %rd8717;
	shf.l.wrap.b32 	%r6779, %r6773, %r6774, 23;
	shf.l.wrap.b32 	%r6780, %r6774, %r6773, 23;
	mov.b64 	%rd8720, {%r6780, %r6779};
	xor.b64  	%rd8721, %rd8719, %rd8720;
	xor.b64  	%rd8722, %rd8680, %rd8655;
	and.b64  	%rd8723, %rd8705, %rd8722;
	xor.b64  	%rd8724, %rd8723, %rd8655;
	add.s64 	%rd8725, %rd8630, %rd8389;
	add.s64 	%rd8727, %rd8725, %rd10025;
	add.s64 	%rd8728, %rd8727, %rd8724;
	add.s64 	%rd8729, %rd8728, %rd8721;
	add.s64 	%rd8730, %rd8729, %rd8641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6781,%dummy}, %rd8716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6782}, %rd8716;
	}
	shf.r.wrap.b32 	%r6783, %r6782, %r6781, 28;
	shf.r.wrap.b32 	%r6784, %r6781, %r6782, 28;
	mov.b64 	%rd8731, {%r6784, %r6783};
	shf.l.wrap.b32 	%r6785, %r6781, %r6782, 30;
	shf.l.wrap.b32 	%r6786, %r6782, %r6781, 30;
	mov.b64 	%rd8732, {%r6786, %r6785};
	xor.b64  	%rd8733, %rd8732, %rd8731;
	shf.l.wrap.b32 	%r6787, %r6781, %r6782, 25;
	shf.l.wrap.b32 	%r6788, %r6782, %r6781, 25;
	mov.b64 	%rd8734, {%r6788, %r6787};
	xor.b64  	%rd8735, %rd8733, %rd8734;
	xor.b64  	%rd8736, %rd8716, %rd8666;
	xor.b64  	%rd8737, %rd8716, %rd8691;
	and.b64  	%rd8738, %rd8737, %rd8736;
	xor.b64  	%rd8739, %rd8738, %rd8716;
	add.s64 	%rd8740, %rd8729, %rd8739;
	add.s64 	%rd8741, %rd8740, %rd8735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6789,%dummy}, %rd8730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6790}, %rd8730;
	}
	shf.r.wrap.b32 	%r6791, %r6790, %r6789, 14;
	shf.r.wrap.b32 	%r6792, %r6789, %r6790, 14;
	mov.b64 	%rd8742, {%r6792, %r6791};
	shf.r.wrap.b32 	%r6793, %r6790, %r6789, 18;
	shf.r.wrap.b32 	%r6794, %r6789, %r6790, 18;
	mov.b64 	%rd8743, {%r6794, %r6793};
	xor.b64  	%rd8744, %rd8743, %rd8742;
	shf.l.wrap.b32 	%r6795, %r6789, %r6790, 23;
	shf.l.wrap.b32 	%r6796, %r6790, %r6789, 23;
	mov.b64 	%rd8745, {%r6796, %r6795};
	xor.b64  	%rd8746, %rd8744, %rd8745;
	xor.b64  	%rd8747, %rd8705, %rd8680;
	and.b64  	%rd8748, %rd8730, %rd8747;
	xor.b64  	%rd8749, %rd8748, %rd8680;
	add.s64 	%rd8750, %rd8655, %rd8402;
	add.s64 	%rd8752, %rd8750, %rd10026;
	add.s64 	%rd8753, %rd8752, %rd8749;
	add.s64 	%rd8754, %rd8753, %rd8746;
	add.s64 	%rd8755, %rd8754, %rd8666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6797,%dummy}, %rd8741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6798}, %rd8741;
	}
	shf.r.wrap.b32 	%r6799, %r6798, %r6797, 28;
	shf.r.wrap.b32 	%r6800, %r6797, %r6798, 28;
	mov.b64 	%rd8756, {%r6800, %r6799};
	shf.l.wrap.b32 	%r6801, %r6797, %r6798, 30;
	shf.l.wrap.b32 	%r6802, %r6798, %r6797, 30;
	mov.b64 	%rd8757, {%r6802, %r6801};
	xor.b64  	%rd8758, %rd8757, %rd8756;
	shf.l.wrap.b32 	%r6803, %r6797, %r6798, 25;
	shf.l.wrap.b32 	%r6804, %r6798, %r6797, 25;
	mov.b64 	%rd8759, {%r6804, %r6803};
	xor.b64  	%rd8760, %rd8758, %rd8759;
	xor.b64  	%rd8761, %rd8741, %rd8691;
	xor.b64  	%rd8762, %rd8741, %rd8716;
	and.b64  	%rd8763, %rd8762, %rd8761;
	xor.b64  	%rd8764, %rd8763, %rd8741;
	add.s64 	%rd8765, %rd8754, %rd8764;
	add.s64 	%rd8766, %rd8765, %rd8760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6805,%dummy}, %rd8755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6806}, %rd8755;
	}
	shf.r.wrap.b32 	%r6807, %r6806, %r6805, 14;
	shf.r.wrap.b32 	%r6808, %r6805, %r6806, 14;
	mov.b64 	%rd8767, {%r6808, %r6807};
	shf.r.wrap.b32 	%r6809, %r6806, %r6805, 18;
	shf.r.wrap.b32 	%r6810, %r6805, %r6806, 18;
	mov.b64 	%rd8768, {%r6810, %r6809};
	xor.b64  	%rd8769, %rd8768, %rd8767;
	shf.l.wrap.b32 	%r6811, %r6805, %r6806, 23;
	shf.l.wrap.b32 	%r6812, %r6806, %r6805, 23;
	mov.b64 	%rd8770, {%r6812, %r6811};
	xor.b64  	%rd8771, %rd8769, %rd8770;
	xor.b64  	%rd8772, %rd8730, %rd8705;
	and.b64  	%rd8773, %rd8755, %rd8772;
	xor.b64  	%rd8774, %rd8773, %rd8705;
	add.s64 	%rd8775, %rd8680, %rd8415;
	add.s64 	%rd8777, %rd8775, %rd10027;
	add.s64 	%rd8778, %rd8777, %rd8774;
	add.s64 	%rd8779, %rd8778, %rd8771;
	add.s64 	%rd8780, %rd8779, %rd8691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6813,%dummy}, %rd8766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6814}, %rd8766;
	}
	shf.r.wrap.b32 	%r6815, %r6814, %r6813, 28;
	shf.r.wrap.b32 	%r6816, %r6813, %r6814, 28;
	mov.b64 	%rd8781, {%r6816, %r6815};
	shf.l.wrap.b32 	%r6817, %r6813, %r6814, 30;
	shf.l.wrap.b32 	%r6818, %r6814, %r6813, 30;
	mov.b64 	%rd8782, {%r6818, %r6817};
	xor.b64  	%rd8783, %rd8782, %rd8781;
	shf.l.wrap.b32 	%r6819, %r6813, %r6814, 25;
	shf.l.wrap.b32 	%r6820, %r6814, %r6813, 25;
	mov.b64 	%rd8784, {%r6820, %r6819};
	xor.b64  	%rd8785, %rd8783, %rd8784;
	xor.b64  	%rd8786, %rd8766, %rd8716;
	xor.b64  	%rd8787, %rd8766, %rd8741;
	and.b64  	%rd8788, %rd8787, %rd8786;
	xor.b64  	%rd8789, %rd8788, %rd8766;
	add.s64 	%rd8790, %rd8779, %rd8789;
	add.s64 	%rd8791, %rd8790, %rd8785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6821,%dummy}, %rd8780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6822}, %rd8780;
	}
	shf.r.wrap.b32 	%r6823, %r6822, %r6821, 14;
	shf.r.wrap.b32 	%r6824, %r6821, %r6822, 14;
	mov.b64 	%rd8792, {%r6824, %r6823};
	shf.r.wrap.b32 	%r6825, %r6822, %r6821, 18;
	shf.r.wrap.b32 	%r6826, %r6821, %r6822, 18;
	mov.b64 	%rd8793, {%r6826, %r6825};
	xor.b64  	%rd8794, %rd8793, %rd8792;
	shf.l.wrap.b32 	%r6827, %r6821, %r6822, 23;
	shf.l.wrap.b32 	%r6828, %r6822, %r6821, 23;
	mov.b64 	%rd8795, {%r6828, %r6827};
	xor.b64  	%rd8796, %rd8794, %rd8795;
	xor.b64  	%rd8797, %rd8755, %rd8730;
	and.b64  	%rd8798, %rd8780, %rd8797;
	xor.b64  	%rd8799, %rd8798, %rd8730;
	add.s64 	%rd8800, %rd8705, %rd8428;
	add.s64 	%rd8802, %rd8800, %rd10028;
	add.s64 	%rd8803, %rd8802, %rd8799;
	add.s64 	%rd8804, %rd8803, %rd8796;
	add.s64 	%rd8805, %rd8804, %rd8716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6829,%dummy}, %rd8791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6830}, %rd8791;
	}
	shf.r.wrap.b32 	%r6831, %r6830, %r6829, 28;
	shf.r.wrap.b32 	%r6832, %r6829, %r6830, 28;
	mov.b64 	%rd8806, {%r6832, %r6831};
	shf.l.wrap.b32 	%r6833, %r6829, %r6830, 30;
	shf.l.wrap.b32 	%r6834, %r6830, %r6829, 30;
	mov.b64 	%rd8807, {%r6834, %r6833};
	xor.b64  	%rd8808, %rd8807, %rd8806;
	shf.l.wrap.b32 	%r6835, %r6829, %r6830, 25;
	shf.l.wrap.b32 	%r6836, %r6830, %r6829, 25;
	mov.b64 	%rd8809, {%r6836, %r6835};
	xor.b64  	%rd8810, %rd8808, %rd8809;
	xor.b64  	%rd8811, %rd8791, %rd8741;
	xor.b64  	%rd8812, %rd8791, %rd8766;
	and.b64  	%rd8813, %rd8812, %rd8811;
	xor.b64  	%rd8814, %rd8813, %rd8791;
	add.s64 	%rd8815, %rd8804, %rd8814;
	add.s64 	%rd8816, %rd8815, %rd8810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6837,%dummy}, %rd8805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6838}, %rd8805;
	}
	shf.r.wrap.b32 	%r6839, %r6838, %r6837, 14;
	shf.r.wrap.b32 	%r6840, %r6837, %r6838, 14;
	mov.b64 	%rd8817, {%r6840, %r6839};
	shf.r.wrap.b32 	%r6841, %r6838, %r6837, 18;
	shf.r.wrap.b32 	%r6842, %r6837, %r6838, 18;
	mov.b64 	%rd8818, {%r6842, %r6841};
	xor.b64  	%rd8819, %rd8818, %rd8817;
	shf.l.wrap.b32 	%r6843, %r6837, %r6838, 23;
	shf.l.wrap.b32 	%r6844, %r6838, %r6837, 23;
	mov.b64 	%rd8820, {%r6844, %r6843};
	xor.b64  	%rd8821, %rd8819, %rd8820;
	xor.b64  	%rd8822, %rd8780, %rd8755;
	and.b64  	%rd8823, %rd8805, %rd8822;
	xor.b64  	%rd8824, %rd8823, %rd8755;
	add.s64 	%rd8825, %rd8730, %rd8441;
	add.s64 	%rd8827, %rd8825, %rd10029;
	add.s64 	%rd8828, %rd8827, %rd8824;
	add.s64 	%rd8829, %rd8828, %rd8821;
	add.s64 	%rd8830, %rd8829, %rd8741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6845,%dummy}, %rd8816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6846}, %rd8816;
	}
	shf.r.wrap.b32 	%r6847, %r6846, %r6845, 28;
	shf.r.wrap.b32 	%r6848, %r6845, %r6846, 28;
	mov.b64 	%rd8831, {%r6848, %r6847};
	shf.l.wrap.b32 	%r6849, %r6845, %r6846, 30;
	shf.l.wrap.b32 	%r6850, %r6846, %r6845, 30;
	mov.b64 	%rd8832, {%r6850, %r6849};
	xor.b64  	%rd8833, %rd8832, %rd8831;
	shf.l.wrap.b32 	%r6851, %r6845, %r6846, 25;
	shf.l.wrap.b32 	%r6852, %r6846, %r6845, 25;
	mov.b64 	%rd8834, {%r6852, %r6851};
	xor.b64  	%rd8835, %rd8833, %rd8834;
	xor.b64  	%rd8836, %rd8816, %rd8766;
	xor.b64  	%rd8837, %rd8816, %rd8791;
	and.b64  	%rd8838, %rd8837, %rd8836;
	xor.b64  	%rd8839, %rd8838, %rd8816;
	add.s64 	%rd8840, %rd8829, %rd8839;
	add.s64 	%rd8841, %rd8840, %rd8835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6853,%dummy}, %rd8428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6854}, %rd8428;
	}
	shf.r.wrap.b32 	%r6855, %r6854, %r6853, 19;
	shf.r.wrap.b32 	%r6856, %r6853, %r6854, 19;
	mov.b64 	%rd8842, {%r6856, %r6855};
	shf.l.wrap.b32 	%r6857, %r6853, %r6854, 3;
	shf.l.wrap.b32 	%r6858, %r6854, %r6853, 3;
	mov.b64 	%rd8843, {%r6858, %r6857};
	shr.u64 	%rd8844, %rd8428, 6;
	xor.b64  	%rd8845, %rd8842, %rd8844;
	xor.b64  	%rd8846, %rd8845, %rd8843;
	shf.r.wrap.b32 	%r6859, %r6468, %r6467, 1;
	shf.r.wrap.b32 	%r6860, %r6467, %r6468, 1;
	mov.b64 	%rd8847, {%r6860, %r6859};
	shf.r.wrap.b32 	%r6861, %r6468, %r6467, 8;
	shf.r.wrap.b32 	%r6862, %r6467, %r6468, 8;
	mov.b64 	%rd8848, {%r6862, %r6861};
	shr.u64 	%rd8849, %rd8259, 7;
	xor.b64  	%rd8850, %rd8847, %rd8849;
	xor.b64  	%rd8851, %rd8850, %rd8848;
	add.s64 	%rd8852, %rd8246, %rd8363;
	add.s64 	%rd8853, %rd8852, %rd8846;
	add.s64 	%rd8854, %rd8853, %rd8851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6863,%dummy}, %rd8441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6864}, %rd8441;
	}
	shf.r.wrap.b32 	%r6865, %r6864, %r6863, 19;
	shf.r.wrap.b32 	%r6866, %r6863, %r6864, 19;
	mov.b64 	%rd8855, {%r6866, %r6865};
	shf.l.wrap.b32 	%r6867, %r6863, %r6864, 3;
	shf.l.wrap.b32 	%r6868, %r6864, %r6863, 3;
	mov.b64 	%rd8856, {%r6868, %r6867};
	shr.u64 	%rd8857, %rd8441, 6;
	xor.b64  	%rd8858, %rd8855, %rd8857;
	xor.b64  	%rd8859, %rd8858, %rd8856;
	shf.r.wrap.b32 	%r6869, %r6478, %r6477, 1;
	shf.r.wrap.b32 	%r6870, %r6477, %r6478, 1;
	mov.b64 	%rd8860, {%r6870, %r6869};
	shf.r.wrap.b32 	%r6871, %r6478, %r6477, 8;
	shf.r.wrap.b32 	%r6872, %r6477, %r6478, 8;
	mov.b64 	%rd8861, {%r6872, %r6871};
	shr.u64 	%rd8862, %rd8272, 7;
	xor.b64  	%rd8863, %rd8860, %rd8862;
	xor.b64  	%rd8864, %rd8863, %rd8861;
	add.s64 	%rd8865, %rd8259, %rd8376;
	add.s64 	%rd8866, %rd8865, %rd8859;
	add.s64 	%rd8867, %rd8866, %rd8864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6873,%dummy}, %rd8854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6874}, %rd8854;
	}
	shf.r.wrap.b32 	%r6875, %r6874, %r6873, 19;
	shf.r.wrap.b32 	%r6876, %r6873, %r6874, 19;
	mov.b64 	%rd8868, {%r6876, %r6875};
	shf.l.wrap.b32 	%r6877, %r6873, %r6874, 3;
	shf.l.wrap.b32 	%r6878, %r6874, %r6873, 3;
	mov.b64 	%rd8869, {%r6878, %r6877};
	shr.u64 	%rd8870, %rd8854, 6;
	xor.b64  	%rd8871, %rd8868, %rd8870;
	xor.b64  	%rd8872, %rd8871, %rd8869;
	shf.r.wrap.b32 	%r6879, %r6488, %r6487, 1;
	shf.r.wrap.b32 	%r6880, %r6487, %r6488, 1;
	mov.b64 	%rd8873, {%r6880, %r6879};
	shf.r.wrap.b32 	%r6881, %r6488, %r6487, 8;
	shf.r.wrap.b32 	%r6882, %r6487, %r6488, 8;
	mov.b64 	%rd8874, {%r6882, %r6881};
	shr.u64 	%rd8875, %rd8285, 7;
	xor.b64  	%rd8876, %rd8873, %rd8875;
	xor.b64  	%rd8877, %rd8876, %rd8874;
	add.s64 	%rd8878, %rd8272, %rd8389;
	add.s64 	%rd8879, %rd8878, %rd8872;
	add.s64 	%rd8880, %rd8879, %rd8877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6883,%dummy}, %rd8867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6884}, %rd8867;
	}
	shf.r.wrap.b32 	%r6885, %r6884, %r6883, 19;
	shf.r.wrap.b32 	%r6886, %r6883, %r6884, 19;
	mov.b64 	%rd8881, {%r6886, %r6885};
	shf.l.wrap.b32 	%r6887, %r6883, %r6884, 3;
	shf.l.wrap.b32 	%r6888, %r6884, %r6883, 3;
	mov.b64 	%rd8882, {%r6888, %r6887};
	shr.u64 	%rd8883, %rd8867, 6;
	xor.b64  	%rd8884, %rd8881, %rd8883;
	xor.b64  	%rd8885, %rd8884, %rd8882;
	shf.r.wrap.b32 	%r6889, %r6498, %r6497, 1;
	shf.r.wrap.b32 	%r6890, %r6497, %r6498, 1;
	mov.b64 	%rd8886, {%r6890, %r6889};
	shf.r.wrap.b32 	%r6891, %r6498, %r6497, 8;
	shf.r.wrap.b32 	%r6892, %r6497, %r6498, 8;
	mov.b64 	%rd8887, {%r6892, %r6891};
	shr.u64 	%rd8888, %rd8298, 7;
	xor.b64  	%rd8889, %rd8886, %rd8888;
	xor.b64  	%rd8890, %rd8889, %rd8887;
	add.s64 	%rd8891, %rd8402, %rd8285;
	add.s64 	%rd8892, %rd8891, %rd8885;
	add.s64 	%rd8893, %rd8892, %rd8890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6893,%dummy}, %rd8880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6894}, %rd8880;
	}
	shf.r.wrap.b32 	%r6895, %r6894, %r6893, 19;
	shf.r.wrap.b32 	%r6896, %r6893, %r6894, 19;
	mov.b64 	%rd8894, {%r6896, %r6895};
	shf.l.wrap.b32 	%r6897, %r6893, %r6894, 3;
	shf.l.wrap.b32 	%r6898, %r6894, %r6893, 3;
	mov.b64 	%rd8895, {%r6898, %r6897};
	shr.u64 	%rd8896, %rd8880, 6;
	xor.b64  	%rd8897, %rd8894, %rd8896;
	xor.b64  	%rd8898, %rd8897, %rd8895;
	shf.r.wrap.b32 	%r6899, %r6508, %r6507, 1;
	shf.r.wrap.b32 	%r6900, %r6507, %r6508, 1;
	mov.b64 	%rd8899, {%r6900, %r6899};
	shf.r.wrap.b32 	%r6901, %r6508, %r6507, 8;
	shf.r.wrap.b32 	%r6902, %r6507, %r6508, 8;
	mov.b64 	%rd8900, {%r6902, %r6901};
	shr.u64 	%rd8901, %rd8311, 7;
	xor.b64  	%rd8902, %rd8899, %rd8901;
	xor.b64  	%rd8903, %rd8902, %rd8900;
	add.s64 	%rd8904, %rd8415, %rd8298;
	add.s64 	%rd8905, %rd8904, %rd8898;
	add.s64 	%rd8906, %rd8905, %rd8903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6903,%dummy}, %rd8893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6904}, %rd8893;
	}
	shf.r.wrap.b32 	%r6905, %r6904, %r6903, 19;
	shf.r.wrap.b32 	%r6906, %r6903, %r6904, 19;
	mov.b64 	%rd8907, {%r6906, %r6905};
	shf.l.wrap.b32 	%r6907, %r6903, %r6904, 3;
	shf.l.wrap.b32 	%r6908, %r6904, %r6903, 3;
	mov.b64 	%rd8908, {%r6908, %r6907};
	shr.u64 	%rd8909, %rd8893, 6;
	xor.b64  	%rd8910, %rd8907, %rd8909;
	xor.b64  	%rd8911, %rd8910, %rd8908;
	shf.r.wrap.b32 	%r6909, %r6518, %r6517, 1;
	shf.r.wrap.b32 	%r6910, %r6517, %r6518, 1;
	mov.b64 	%rd8912, {%r6910, %r6909};
	shf.r.wrap.b32 	%r6911, %r6518, %r6517, 8;
	shf.r.wrap.b32 	%r6912, %r6517, %r6518, 8;
	mov.b64 	%rd8913, {%r6912, %r6911};
	shr.u64 	%rd8914, %rd8324, 7;
	xor.b64  	%rd8915, %rd8912, %rd8914;
	xor.b64  	%rd8916, %rd8915, %rd8913;
	add.s64 	%rd8917, %rd8428, %rd8311;
	add.s64 	%rd8918, %rd8917, %rd8911;
	add.s64 	%rd8919, %rd8918, %rd8916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6913,%dummy}, %rd8906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6914}, %rd8906;
	}
	shf.r.wrap.b32 	%r6915, %r6914, %r6913, 19;
	shf.r.wrap.b32 	%r6916, %r6913, %r6914, 19;
	mov.b64 	%rd8920, {%r6916, %r6915};
	shf.l.wrap.b32 	%r6917, %r6913, %r6914, 3;
	shf.l.wrap.b32 	%r6918, %r6914, %r6913, 3;
	mov.b64 	%rd8921, {%r6918, %r6917};
	shr.u64 	%rd8922, %rd8906, 6;
	xor.b64  	%rd8923, %rd8920, %rd8922;
	xor.b64  	%rd8924, %rd8923, %rd8921;
	shf.r.wrap.b32 	%r6919, %r6528, %r6527, 1;
	shf.r.wrap.b32 	%r6920, %r6527, %r6528, 1;
	mov.b64 	%rd8925, {%r6920, %r6919};
	shf.r.wrap.b32 	%r6921, %r6528, %r6527, 8;
	shf.r.wrap.b32 	%r6922, %r6527, %r6528, 8;
	mov.b64 	%rd8926, {%r6922, %r6921};
	shr.u64 	%rd8927, %rd8337, 7;
	xor.b64  	%rd8928, %rd8925, %rd8927;
	xor.b64  	%rd8929, %rd8928, %rd8926;
	add.s64 	%rd8930, %rd8441, %rd8324;
	add.s64 	%rd8931, %rd8930, %rd8924;
	add.s64 	%rd8932, %rd8931, %rd8929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6923,%dummy}, %rd8919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6924}, %rd8919;
	}
	shf.r.wrap.b32 	%r6925, %r6924, %r6923, 19;
	shf.r.wrap.b32 	%r6926, %r6923, %r6924, 19;
	mov.b64 	%rd8933, {%r6926, %r6925};
	shf.l.wrap.b32 	%r6927, %r6923, %r6924, 3;
	shf.l.wrap.b32 	%r6928, %r6924, %r6923, 3;
	mov.b64 	%rd8934, {%r6928, %r6927};
	shr.u64 	%rd8935, %rd8919, 6;
	xor.b64  	%rd8936, %rd8933, %rd8935;
	xor.b64  	%rd8937, %rd8936, %rd8934;
	shf.r.wrap.b32 	%r6929, %r6538, %r6537, 1;
	shf.r.wrap.b32 	%r6930, %r6537, %r6538, 1;
	mov.b64 	%rd8938, {%r6930, %r6929};
	shf.r.wrap.b32 	%r6931, %r6538, %r6537, 8;
	shf.r.wrap.b32 	%r6932, %r6537, %r6538, 8;
	mov.b64 	%rd8939, {%r6932, %r6931};
	shr.u64 	%rd8940, %rd8350, 7;
	xor.b64  	%rd8941, %rd8938, %rd8940;
	xor.b64  	%rd8942, %rd8941, %rd8939;
	add.s64 	%rd8943, %rd8854, %rd8337;
	add.s64 	%rd8944, %rd8943, %rd8937;
	add.s64 	%rd8945, %rd8944, %rd8942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6933,%dummy}, %rd8932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6934}, %rd8932;
	}
	shf.r.wrap.b32 	%r6935, %r6934, %r6933, 19;
	shf.r.wrap.b32 	%r6936, %r6933, %r6934, 19;
	mov.b64 	%rd8946, {%r6936, %r6935};
	shf.l.wrap.b32 	%r6937, %r6933, %r6934, 3;
	shf.l.wrap.b32 	%r6938, %r6934, %r6933, 3;
	mov.b64 	%rd8947, {%r6938, %r6937};
	shr.u64 	%rd8948, %rd8932, 6;
	xor.b64  	%rd8949, %rd8946, %rd8948;
	xor.b64  	%rd8950, %rd8949, %rd8947;
	shf.r.wrap.b32 	%r6939, %r6548, %r6547, 1;
	shf.r.wrap.b32 	%r6940, %r6547, %r6548, 1;
	mov.b64 	%rd8951, {%r6940, %r6939};
	shf.r.wrap.b32 	%r6941, %r6548, %r6547, 8;
	shf.r.wrap.b32 	%r6942, %r6547, %r6548, 8;
	mov.b64 	%rd8952, {%r6942, %r6941};
	shr.u64 	%rd8953, %rd8363, 7;
	xor.b64  	%rd8954, %rd8951, %rd8953;
	xor.b64  	%rd8955, %rd8954, %rd8952;
	add.s64 	%rd8956, %rd8867, %rd8350;
	add.s64 	%rd8957, %rd8956, %rd8950;
	add.s64 	%rd8958, %rd8957, %rd8955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6943,%dummy}, %rd8945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6944}, %rd8945;
	}
	shf.r.wrap.b32 	%r6945, %r6944, %r6943, 19;
	shf.r.wrap.b32 	%r6946, %r6943, %r6944, 19;
	mov.b64 	%rd8959, {%r6946, %r6945};
	shf.l.wrap.b32 	%r6947, %r6943, %r6944, 3;
	shf.l.wrap.b32 	%r6948, %r6944, %r6943, 3;
	mov.b64 	%rd8960, {%r6948, %r6947};
	shr.u64 	%rd8961, %rd8945, 6;
	xor.b64  	%rd8962, %rd8959, %rd8961;
	xor.b64  	%rd8963, %rd8962, %rd8960;
	shf.r.wrap.b32 	%r6949, %r6558, %r6557, 1;
	shf.r.wrap.b32 	%r6950, %r6557, %r6558, 1;
	mov.b64 	%rd8964, {%r6950, %r6949};
	shf.r.wrap.b32 	%r6951, %r6558, %r6557, 8;
	shf.r.wrap.b32 	%r6952, %r6557, %r6558, 8;
	mov.b64 	%rd8965, {%r6952, %r6951};
	shr.u64 	%rd8966, %rd8376, 7;
	xor.b64  	%rd8967, %rd8964, %rd8966;
	xor.b64  	%rd8968, %rd8967, %rd8965;
	add.s64 	%rd8969, %rd8880, %rd8363;
	add.s64 	%rd8970, %rd8969, %rd8963;
	add.s64 	%rd8971, %rd8970, %rd8968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6953,%dummy}, %rd8958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6954}, %rd8958;
	}
	shf.r.wrap.b32 	%r6955, %r6954, %r6953, 19;
	shf.r.wrap.b32 	%r6956, %r6953, %r6954, 19;
	mov.b64 	%rd8972, {%r6956, %r6955};
	shf.l.wrap.b32 	%r6957, %r6953, %r6954, 3;
	shf.l.wrap.b32 	%r6958, %r6954, %r6953, 3;
	mov.b64 	%rd8973, {%r6958, %r6957};
	shr.u64 	%rd8974, %rd8958, 6;
	xor.b64  	%rd8975, %rd8972, %rd8974;
	xor.b64  	%rd8976, %rd8975, %rd8973;
	shf.r.wrap.b32 	%r6959, %r6568, %r6567, 1;
	shf.r.wrap.b32 	%r6960, %r6567, %r6568, 1;
	mov.b64 	%rd8977, {%r6960, %r6959};
	shf.r.wrap.b32 	%r6961, %r6568, %r6567, 8;
	shf.r.wrap.b32 	%r6962, %r6567, %r6568, 8;
	mov.b64 	%rd8978, {%r6962, %r6961};
	shr.u64 	%rd8979, %rd8389, 7;
	xor.b64  	%rd8980, %rd8977, %rd8979;
	xor.b64  	%rd8981, %rd8980, %rd8978;
	add.s64 	%rd8982, %rd8893, %rd8376;
	add.s64 	%rd8983, %rd8982, %rd8976;
	add.s64 	%rd8984, %rd8983, %rd8981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6963,%dummy}, %rd8971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6964}, %rd8971;
	}
	shf.r.wrap.b32 	%r6965, %r6964, %r6963, 19;
	shf.r.wrap.b32 	%r6966, %r6963, %r6964, 19;
	mov.b64 	%rd8985, {%r6966, %r6965};
	shf.l.wrap.b32 	%r6967, %r6963, %r6964, 3;
	shf.l.wrap.b32 	%r6968, %r6964, %r6963, 3;
	mov.b64 	%rd8986, {%r6968, %r6967};
	shr.u64 	%rd8987, %rd8971, 6;
	xor.b64  	%rd8988, %rd8985, %rd8987;
	xor.b64  	%rd8989, %rd8988, %rd8986;
	shf.r.wrap.b32 	%r6969, %r6578, %r6577, 1;
	shf.r.wrap.b32 	%r6970, %r6577, %r6578, 1;
	mov.b64 	%rd8990, {%r6970, %r6969};
	shf.r.wrap.b32 	%r6971, %r6578, %r6577, 8;
	shf.r.wrap.b32 	%r6972, %r6577, %r6578, 8;
	mov.b64 	%rd8991, {%r6972, %r6971};
	shr.u64 	%rd8992, %rd8402, 7;
	xor.b64  	%rd8993, %rd8990, %rd8992;
	xor.b64  	%rd8994, %rd8993, %rd8991;
	add.s64 	%rd8995, %rd8906, %rd8389;
	add.s64 	%rd8996, %rd8995, %rd8989;
	add.s64 	%rd8997, %rd8996, %rd8994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6973,%dummy}, %rd8984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6974}, %rd8984;
	}
	shf.r.wrap.b32 	%r6975, %r6974, %r6973, 19;
	shf.r.wrap.b32 	%r6976, %r6973, %r6974, 19;
	mov.b64 	%rd8998, {%r6976, %r6975};
	shf.l.wrap.b32 	%r6977, %r6973, %r6974, 3;
	shf.l.wrap.b32 	%r6978, %r6974, %r6973, 3;
	mov.b64 	%rd8999, {%r6978, %r6977};
	shr.u64 	%rd9000, %rd8984, 6;
	xor.b64  	%rd9001, %rd8998, %rd9000;
	xor.b64  	%rd9002, %rd9001, %rd8999;
	shf.r.wrap.b32 	%r6979, %r6588, %r6587, 1;
	shf.r.wrap.b32 	%r6980, %r6587, %r6588, 1;
	mov.b64 	%rd9003, {%r6980, %r6979};
	shf.r.wrap.b32 	%r6981, %r6588, %r6587, 8;
	shf.r.wrap.b32 	%r6982, %r6587, %r6588, 8;
	mov.b64 	%rd9004, {%r6982, %r6981};
	shr.u64 	%rd9005, %rd8415, 7;
	xor.b64  	%rd9006, %rd9003, %rd9005;
	xor.b64  	%rd9007, %rd9006, %rd9004;
	add.s64 	%rd9008, %rd8919, %rd8402;
	add.s64 	%rd9009, %rd9008, %rd9002;
	add.s64 	%rd9010, %rd9009, %rd9007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6983,%dummy}, %rd8997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6984}, %rd8997;
	}
	shf.r.wrap.b32 	%r6985, %r6984, %r6983, 19;
	shf.r.wrap.b32 	%r6986, %r6983, %r6984, 19;
	mov.b64 	%rd9011, {%r6986, %r6985};
	shf.l.wrap.b32 	%r6987, %r6983, %r6984, 3;
	shf.l.wrap.b32 	%r6988, %r6984, %r6983, 3;
	mov.b64 	%rd9012, {%r6988, %r6987};
	shr.u64 	%rd9013, %rd8997, 6;
	xor.b64  	%rd9014, %rd9011, %rd9013;
	xor.b64  	%rd9015, %rd9014, %rd9012;
	shf.r.wrap.b32 	%r6989, %r6854, %r6853, 1;
	shf.r.wrap.b32 	%r6990, %r6853, %r6854, 1;
	mov.b64 	%rd9016, {%r6990, %r6989};
	shf.r.wrap.b32 	%r6991, %r6854, %r6853, 8;
	shf.r.wrap.b32 	%r6992, %r6853, %r6854, 8;
	mov.b64 	%rd9017, {%r6992, %r6991};
	shr.u64 	%rd9018, %rd8428, 7;
	xor.b64  	%rd9019, %rd9016, %rd9018;
	xor.b64  	%rd9020, %rd9019, %rd9017;
	add.s64 	%rd9021, %rd8932, %rd8415;
	add.s64 	%rd9022, %rd9021, %rd9015;
	add.s64 	%rd9023, %rd9022, %rd9020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6993,%dummy}, %rd9010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6994}, %rd9010;
	}
	shf.r.wrap.b32 	%r6995, %r6994, %r6993, 19;
	shf.r.wrap.b32 	%r6996, %r6993, %r6994, 19;
	mov.b64 	%rd9024, {%r6996, %r6995};
	shf.l.wrap.b32 	%r6997, %r6993, %r6994, 3;
	shf.l.wrap.b32 	%r6998, %r6994, %r6993, 3;
	mov.b64 	%rd9025, {%r6998, %r6997};
	shr.u64 	%rd9026, %rd9010, 6;
	xor.b64  	%rd9027, %rd9024, %rd9026;
	xor.b64  	%rd9028, %rd9027, %rd9025;
	shf.r.wrap.b32 	%r6999, %r6864, %r6863, 1;
	shf.r.wrap.b32 	%r7000, %r6863, %r6864, 1;
	mov.b64 	%rd9029, {%r7000, %r6999};
	shf.r.wrap.b32 	%r7001, %r6864, %r6863, 8;
	shf.r.wrap.b32 	%r7002, %r6863, %r6864, 8;
	mov.b64 	%rd9030, {%r7002, %r7001};
	shr.u64 	%rd9031, %rd8441, 7;
	xor.b64  	%rd9032, %rd9029, %rd9031;
	xor.b64  	%rd9033, %rd9032, %rd9030;
	add.s64 	%rd9034, %rd8945, %rd8428;
	add.s64 	%rd9035, %rd9034, %rd9028;
	add.s64 	%rd9036, %rd9035, %rd9033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7003,%dummy}, %rd9023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7004}, %rd9023;
	}
	shf.r.wrap.b32 	%r7005, %r7004, %r7003, 19;
	shf.r.wrap.b32 	%r7006, %r7003, %r7004, 19;
	mov.b64 	%rd9037, {%r7006, %r7005};
	shf.l.wrap.b32 	%r7007, %r7003, %r7004, 3;
	shf.l.wrap.b32 	%r7008, %r7004, %r7003, 3;
	mov.b64 	%rd9038, {%r7008, %r7007};
	shr.u64 	%rd9039, %rd9023, 6;
	xor.b64  	%rd9040, %rd9037, %rd9039;
	xor.b64  	%rd9041, %rd9040, %rd9038;
	shf.r.wrap.b32 	%r7009, %r6874, %r6873, 1;
	shf.r.wrap.b32 	%r7010, %r6873, %r6874, 1;
	mov.b64 	%rd9042, {%r7010, %r7009};
	shf.r.wrap.b32 	%r7011, %r6874, %r6873, 8;
	shf.r.wrap.b32 	%r7012, %r6873, %r6874, 8;
	mov.b64 	%rd9043, {%r7012, %r7011};
	shr.u64 	%rd9044, %rd8854, 7;
	xor.b64  	%rd9045, %rd9042, %rd9044;
	xor.b64  	%rd9046, %rd9045, %rd9043;
	add.s64 	%rd9047, %rd8958, %rd8441;
	add.s64 	%rd9048, %rd9047, %rd9041;
	add.s64 	%rd9049, %rd9048, %rd9046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7013,%dummy}, %rd8830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7014}, %rd8830;
	}
	shf.r.wrap.b32 	%r7015, %r7014, %r7013, 14;
	shf.r.wrap.b32 	%r7016, %r7013, %r7014, 14;
	mov.b64 	%rd9050, {%r7016, %r7015};
	shf.r.wrap.b32 	%r7017, %r7014, %r7013, 18;
	shf.r.wrap.b32 	%r7018, %r7013, %r7014, 18;
	mov.b64 	%rd9051, {%r7018, %r7017};
	xor.b64  	%rd9052, %rd9051, %rd9050;
	shf.l.wrap.b32 	%r7019, %r7013, %r7014, 23;
	shf.l.wrap.b32 	%r7020, %r7014, %r7013, 23;
	mov.b64 	%rd9053, {%r7020, %r7019};
	xor.b64  	%rd9054, %rd9052, %rd9053;
	xor.b64  	%rd9055, %rd8805, %rd8780;
	and.b64  	%rd9056, %rd9055, %rd8830;
	xor.b64  	%rd9057, %rd9056, %rd8780;
	add.s64 	%rd9058, %rd9057, %rd8755;
	add.s64 	%rd9059, %rd9058, %rd8854;
	add.s64 	%rd9061, %rd9059, %rd10030;
	add.s64 	%rd9062, %rd9061, %rd9054;
	add.s64 	%rd9063, %rd9062, %rd8766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7021,%dummy}, %rd8841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7022}, %rd8841;
	}
	shf.r.wrap.b32 	%r7023, %r7022, %r7021, 28;
	shf.r.wrap.b32 	%r7024, %r7021, %r7022, 28;
	mov.b64 	%rd9064, {%r7024, %r7023};
	shf.l.wrap.b32 	%r7025, %r7021, %r7022, 30;
	shf.l.wrap.b32 	%r7026, %r7022, %r7021, 30;
	mov.b64 	%rd9065, {%r7026, %r7025};
	xor.b64  	%rd9066, %rd9065, %rd9064;
	shf.l.wrap.b32 	%r7027, %r7021, %r7022, 25;
	shf.l.wrap.b32 	%r7028, %r7022, %r7021, 25;
	mov.b64 	%rd9067, {%r7028, %r7027};
	xor.b64  	%rd9068, %rd9066, %rd9067;
	xor.b64  	%rd9069, %rd8841, %rd8791;
	xor.b64  	%rd9070, %rd8841, %rd8816;
	and.b64  	%rd9071, %rd9070, %rd9069;
	xor.b64  	%rd9072, %rd9071, %rd8841;
	add.s64 	%rd9073, %rd9062, %rd9072;
	add.s64 	%rd9074, %rd9073, %rd9068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7029,%dummy}, %rd9063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7030}, %rd9063;
	}
	shf.r.wrap.b32 	%r7031, %r7030, %r7029, 14;
	shf.r.wrap.b32 	%r7032, %r7029, %r7030, 14;
	mov.b64 	%rd9075, {%r7032, %r7031};
	shf.r.wrap.b32 	%r7033, %r7030, %r7029, 18;
	shf.r.wrap.b32 	%r7034, %r7029, %r7030, 18;
	mov.b64 	%rd9076, {%r7034, %r7033};
	xor.b64  	%rd9077, %rd9076, %rd9075;
	shf.l.wrap.b32 	%r7035, %r7029, %r7030, 23;
	shf.l.wrap.b32 	%r7036, %r7030, %r7029, 23;
	mov.b64 	%rd9078, {%r7036, %r7035};
	xor.b64  	%rd9079, %rd9077, %rd9078;
	xor.b64  	%rd9080, %rd8830, %rd8805;
	and.b64  	%rd9081, %rd9063, %rd9080;
	xor.b64  	%rd9082, %rd9081, %rd8805;
	add.s64 	%rd9083, %rd8867, %rd8780;
	add.s64 	%rd9085, %rd9083, %rd10031;
	add.s64 	%rd9086, %rd9085, %rd9082;
	add.s64 	%rd9087, %rd9086, %rd9079;
	add.s64 	%rd9088, %rd9087, %rd8791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7037,%dummy}, %rd9074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7038}, %rd9074;
	}
	shf.r.wrap.b32 	%r7039, %r7038, %r7037, 28;
	shf.r.wrap.b32 	%r7040, %r7037, %r7038, 28;
	mov.b64 	%rd9089, {%r7040, %r7039};
	shf.l.wrap.b32 	%r7041, %r7037, %r7038, 30;
	shf.l.wrap.b32 	%r7042, %r7038, %r7037, 30;
	mov.b64 	%rd9090, {%r7042, %r7041};
	xor.b64  	%rd9091, %rd9090, %rd9089;
	shf.l.wrap.b32 	%r7043, %r7037, %r7038, 25;
	shf.l.wrap.b32 	%r7044, %r7038, %r7037, 25;
	mov.b64 	%rd9092, {%r7044, %r7043};
	xor.b64  	%rd9093, %rd9091, %rd9092;
	xor.b64  	%rd9094, %rd9074, %rd8816;
	xor.b64  	%rd9095, %rd9074, %rd8841;
	and.b64  	%rd9096, %rd9095, %rd9094;
	xor.b64  	%rd9097, %rd9096, %rd9074;
	add.s64 	%rd9098, %rd9087, %rd9097;
	add.s64 	%rd9099, %rd9098, %rd9093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7045,%dummy}, %rd9088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7046}, %rd9088;
	}
	shf.r.wrap.b32 	%r7047, %r7046, %r7045, 14;
	shf.r.wrap.b32 	%r7048, %r7045, %r7046, 14;
	mov.b64 	%rd9100, {%r7048, %r7047};
	shf.r.wrap.b32 	%r7049, %r7046, %r7045, 18;
	shf.r.wrap.b32 	%r7050, %r7045, %r7046, 18;
	mov.b64 	%rd9101, {%r7050, %r7049};
	xor.b64  	%rd9102, %rd9101, %rd9100;
	shf.l.wrap.b32 	%r7051, %r7045, %r7046, 23;
	shf.l.wrap.b32 	%r7052, %r7046, %r7045, 23;
	mov.b64 	%rd9103, {%r7052, %r7051};
	xor.b64  	%rd9104, %rd9102, %rd9103;
	xor.b64  	%rd9105, %rd9063, %rd8830;
	and.b64  	%rd9106, %rd9088, %rd9105;
	xor.b64  	%rd9107, %rd9106, %rd8830;
	add.s64 	%rd9108, %rd8880, %rd8805;
	add.s64 	%rd9110, %rd9108, %rd10032;
	add.s64 	%rd9111, %rd9110, %rd9107;
	add.s64 	%rd9112, %rd9111, %rd9104;
	add.s64 	%rd9113, %rd9112, %rd8816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7053,%dummy}, %rd9099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7054}, %rd9099;
	}
	shf.r.wrap.b32 	%r7055, %r7054, %r7053, 28;
	shf.r.wrap.b32 	%r7056, %r7053, %r7054, 28;
	mov.b64 	%rd9114, {%r7056, %r7055};
	shf.l.wrap.b32 	%r7057, %r7053, %r7054, 30;
	shf.l.wrap.b32 	%r7058, %r7054, %r7053, 30;
	mov.b64 	%rd9115, {%r7058, %r7057};
	xor.b64  	%rd9116, %rd9115, %rd9114;
	shf.l.wrap.b32 	%r7059, %r7053, %r7054, 25;
	shf.l.wrap.b32 	%r7060, %r7054, %r7053, 25;
	mov.b64 	%rd9117, {%r7060, %r7059};
	xor.b64  	%rd9118, %rd9116, %rd9117;
	xor.b64  	%rd9119, %rd9099, %rd8841;
	xor.b64  	%rd9120, %rd9099, %rd9074;
	and.b64  	%rd9121, %rd9120, %rd9119;
	xor.b64  	%rd9122, %rd9121, %rd9099;
	add.s64 	%rd9123, %rd9112, %rd9122;
	add.s64 	%rd9124, %rd9123, %rd9118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7061,%dummy}, %rd9113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7062}, %rd9113;
	}
	shf.r.wrap.b32 	%r7063, %r7062, %r7061, 14;
	shf.r.wrap.b32 	%r7064, %r7061, %r7062, 14;
	mov.b64 	%rd9125, {%r7064, %r7063};
	shf.r.wrap.b32 	%r7065, %r7062, %r7061, 18;
	shf.r.wrap.b32 	%r7066, %r7061, %r7062, 18;
	mov.b64 	%rd9126, {%r7066, %r7065};
	xor.b64  	%rd9127, %rd9126, %rd9125;
	shf.l.wrap.b32 	%r7067, %r7061, %r7062, 23;
	shf.l.wrap.b32 	%r7068, %r7062, %r7061, 23;
	mov.b64 	%rd9128, {%r7068, %r7067};
	xor.b64  	%rd9129, %rd9127, %rd9128;
	xor.b64  	%rd9130, %rd9088, %rd9063;
	and.b64  	%rd9131, %rd9113, %rd9130;
	xor.b64  	%rd9132, %rd9131, %rd9063;
	add.s64 	%rd9133, %rd8893, %rd8830;
	add.s64 	%rd9135, %rd9133, %rd10033;
	add.s64 	%rd9136, %rd9135, %rd9132;
	add.s64 	%rd9137, %rd9136, %rd9129;
	add.s64 	%rd9138, %rd9137, %rd8841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7069,%dummy}, %rd9124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7070}, %rd9124;
	}
	shf.r.wrap.b32 	%r7071, %r7070, %r7069, 28;
	shf.r.wrap.b32 	%r7072, %r7069, %r7070, 28;
	mov.b64 	%rd9139, {%r7072, %r7071};
	shf.l.wrap.b32 	%r7073, %r7069, %r7070, 30;
	shf.l.wrap.b32 	%r7074, %r7070, %r7069, 30;
	mov.b64 	%rd9140, {%r7074, %r7073};
	xor.b64  	%rd9141, %rd9140, %rd9139;
	shf.l.wrap.b32 	%r7075, %r7069, %r7070, 25;
	shf.l.wrap.b32 	%r7076, %r7070, %r7069, 25;
	mov.b64 	%rd9142, {%r7076, %r7075};
	xor.b64  	%rd9143, %rd9141, %rd9142;
	xor.b64  	%rd9144, %rd9124, %rd9074;
	xor.b64  	%rd9145, %rd9124, %rd9099;
	and.b64  	%rd9146, %rd9145, %rd9144;
	xor.b64  	%rd9147, %rd9146, %rd9124;
	add.s64 	%rd9148, %rd9137, %rd9147;
	add.s64 	%rd9149, %rd9148, %rd9143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7077,%dummy}, %rd9138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7078}, %rd9138;
	}
	shf.r.wrap.b32 	%r7079, %r7078, %r7077, 14;
	shf.r.wrap.b32 	%r7080, %r7077, %r7078, 14;
	mov.b64 	%rd9150, {%r7080, %r7079};
	shf.r.wrap.b32 	%r7081, %r7078, %r7077, 18;
	shf.r.wrap.b32 	%r7082, %r7077, %r7078, 18;
	mov.b64 	%rd9151, {%r7082, %r7081};
	xor.b64  	%rd9152, %rd9151, %rd9150;
	shf.l.wrap.b32 	%r7083, %r7077, %r7078, 23;
	shf.l.wrap.b32 	%r7084, %r7078, %r7077, 23;
	mov.b64 	%rd9153, {%r7084, %r7083};
	xor.b64  	%rd9154, %rd9152, %rd9153;
	xor.b64  	%rd9155, %rd9113, %rd9088;
	and.b64  	%rd9156, %rd9138, %rd9155;
	xor.b64  	%rd9157, %rd9156, %rd9088;
	add.s64 	%rd9158, %rd9063, %rd8906;
	add.s64 	%rd9160, %rd9158, %rd10034;
	add.s64 	%rd9161, %rd9160, %rd9157;
	add.s64 	%rd9162, %rd9161, %rd9154;
	add.s64 	%rd9163, %rd9162, %rd9074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7085,%dummy}, %rd9149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7086}, %rd9149;
	}
	shf.r.wrap.b32 	%r7087, %r7086, %r7085, 28;
	shf.r.wrap.b32 	%r7088, %r7085, %r7086, 28;
	mov.b64 	%rd9164, {%r7088, %r7087};
	shf.l.wrap.b32 	%r7089, %r7085, %r7086, 30;
	shf.l.wrap.b32 	%r7090, %r7086, %r7085, 30;
	mov.b64 	%rd9165, {%r7090, %r7089};
	xor.b64  	%rd9166, %rd9165, %rd9164;
	shf.l.wrap.b32 	%r7091, %r7085, %r7086, 25;
	shf.l.wrap.b32 	%r7092, %r7086, %r7085, 25;
	mov.b64 	%rd9167, {%r7092, %r7091};
	xor.b64  	%rd9168, %rd9166, %rd9167;
	xor.b64  	%rd9169, %rd9149, %rd9099;
	xor.b64  	%rd9170, %rd9149, %rd9124;
	and.b64  	%rd9171, %rd9170, %rd9169;
	xor.b64  	%rd9172, %rd9171, %rd9149;
	add.s64 	%rd9173, %rd9162, %rd9172;
	add.s64 	%rd9174, %rd9173, %rd9168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7093,%dummy}, %rd9163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7094}, %rd9163;
	}
	shf.r.wrap.b32 	%r7095, %r7094, %r7093, 14;
	shf.r.wrap.b32 	%r7096, %r7093, %r7094, 14;
	mov.b64 	%rd9175, {%r7096, %r7095};
	shf.r.wrap.b32 	%r7097, %r7094, %r7093, 18;
	shf.r.wrap.b32 	%r7098, %r7093, %r7094, 18;
	mov.b64 	%rd9176, {%r7098, %r7097};
	xor.b64  	%rd9177, %rd9176, %rd9175;
	shf.l.wrap.b32 	%r7099, %r7093, %r7094, 23;
	shf.l.wrap.b32 	%r7100, %r7094, %r7093, 23;
	mov.b64 	%rd9178, {%r7100, %r7099};
	xor.b64  	%rd9179, %rd9177, %rd9178;
	xor.b64  	%rd9180, %rd9138, %rd9113;
	and.b64  	%rd9181, %rd9163, %rd9180;
	xor.b64  	%rd9182, %rd9181, %rd9113;
	add.s64 	%rd9183, %rd9088, %rd8919;
	add.s64 	%rd9185, %rd9183, %rd10035;
	add.s64 	%rd9186, %rd9185, %rd9182;
	add.s64 	%rd9187, %rd9186, %rd9179;
	add.s64 	%rd9188, %rd9187, %rd9099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7101,%dummy}, %rd9174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7102}, %rd9174;
	}
	shf.r.wrap.b32 	%r7103, %r7102, %r7101, 28;
	shf.r.wrap.b32 	%r7104, %r7101, %r7102, 28;
	mov.b64 	%rd9189, {%r7104, %r7103};
	shf.l.wrap.b32 	%r7105, %r7101, %r7102, 30;
	shf.l.wrap.b32 	%r7106, %r7102, %r7101, 30;
	mov.b64 	%rd9190, {%r7106, %r7105};
	xor.b64  	%rd9191, %rd9190, %rd9189;
	shf.l.wrap.b32 	%r7107, %r7101, %r7102, 25;
	shf.l.wrap.b32 	%r7108, %r7102, %r7101, 25;
	mov.b64 	%rd9192, {%r7108, %r7107};
	xor.b64  	%rd9193, %rd9191, %rd9192;
	xor.b64  	%rd9194, %rd9174, %rd9124;
	xor.b64  	%rd9195, %rd9174, %rd9149;
	and.b64  	%rd9196, %rd9195, %rd9194;
	xor.b64  	%rd9197, %rd9196, %rd9174;
	add.s64 	%rd9198, %rd9187, %rd9197;
	add.s64 	%rd9199, %rd9198, %rd9193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7109,%dummy}, %rd9188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7110}, %rd9188;
	}
	shf.r.wrap.b32 	%r7111, %r7110, %r7109, 14;
	shf.r.wrap.b32 	%r7112, %r7109, %r7110, 14;
	mov.b64 	%rd9200, {%r7112, %r7111};
	shf.r.wrap.b32 	%r7113, %r7110, %r7109, 18;
	shf.r.wrap.b32 	%r7114, %r7109, %r7110, 18;
	mov.b64 	%rd9201, {%r7114, %r7113};
	xor.b64  	%rd9202, %rd9201, %rd9200;
	shf.l.wrap.b32 	%r7115, %r7109, %r7110, 23;
	shf.l.wrap.b32 	%r7116, %r7110, %r7109, 23;
	mov.b64 	%rd9203, {%r7116, %r7115};
	xor.b64  	%rd9204, %rd9202, %rd9203;
	xor.b64  	%rd9205, %rd9163, %rd9138;
	and.b64  	%rd9206, %rd9188, %rd9205;
	xor.b64  	%rd9207, %rd9206, %rd9138;
	add.s64 	%rd9208, %rd9113, %rd8932;
	add.s64 	%rd9210, %rd9208, %rd10036;
	add.s64 	%rd9211, %rd9210, %rd9207;
	add.s64 	%rd9212, %rd9211, %rd9204;
	add.s64 	%rd9213, %rd9212, %rd9124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7117,%dummy}, %rd9199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7118}, %rd9199;
	}
	shf.r.wrap.b32 	%r7119, %r7118, %r7117, 28;
	shf.r.wrap.b32 	%r7120, %r7117, %r7118, 28;
	mov.b64 	%rd9214, {%r7120, %r7119};
	shf.l.wrap.b32 	%r7121, %r7117, %r7118, 30;
	shf.l.wrap.b32 	%r7122, %r7118, %r7117, 30;
	mov.b64 	%rd9215, {%r7122, %r7121};
	xor.b64  	%rd9216, %rd9215, %rd9214;
	shf.l.wrap.b32 	%r7123, %r7117, %r7118, 25;
	shf.l.wrap.b32 	%r7124, %r7118, %r7117, 25;
	mov.b64 	%rd9217, {%r7124, %r7123};
	xor.b64  	%rd9218, %rd9216, %rd9217;
	xor.b64  	%rd9219, %rd9199, %rd9149;
	xor.b64  	%rd9220, %rd9199, %rd9174;
	and.b64  	%rd9221, %rd9220, %rd9219;
	xor.b64  	%rd9222, %rd9221, %rd9199;
	add.s64 	%rd9223, %rd9212, %rd9222;
	add.s64 	%rd9224, %rd9223, %rd9218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7125,%dummy}, %rd9213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7126}, %rd9213;
	}
	shf.r.wrap.b32 	%r7127, %r7126, %r7125, 14;
	shf.r.wrap.b32 	%r7128, %r7125, %r7126, 14;
	mov.b64 	%rd9225, {%r7128, %r7127};
	shf.r.wrap.b32 	%r7129, %r7126, %r7125, 18;
	shf.r.wrap.b32 	%r7130, %r7125, %r7126, 18;
	mov.b64 	%rd9226, {%r7130, %r7129};
	xor.b64  	%rd9227, %rd9226, %rd9225;
	shf.l.wrap.b32 	%r7131, %r7125, %r7126, 23;
	shf.l.wrap.b32 	%r7132, %r7126, %r7125, 23;
	mov.b64 	%rd9228, {%r7132, %r7131};
	xor.b64  	%rd9229, %rd9227, %rd9228;
	xor.b64  	%rd9230, %rd9188, %rd9163;
	and.b64  	%rd9231, %rd9213, %rd9230;
	xor.b64  	%rd9232, %rd9231, %rd9163;
	add.s64 	%rd9233, %rd9138, %rd8945;
	add.s64 	%rd9235, %rd9233, %rd10037;
	add.s64 	%rd9236, %rd9235, %rd9232;
	add.s64 	%rd9237, %rd9236, %rd9229;
	add.s64 	%rd9238, %rd9237, %rd9149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7133,%dummy}, %rd9224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7134}, %rd9224;
	}
	shf.r.wrap.b32 	%r7135, %r7134, %r7133, 28;
	shf.r.wrap.b32 	%r7136, %r7133, %r7134, 28;
	mov.b64 	%rd9239, {%r7136, %r7135};
	shf.l.wrap.b32 	%r7137, %r7133, %r7134, 30;
	shf.l.wrap.b32 	%r7138, %r7134, %r7133, 30;
	mov.b64 	%rd9240, {%r7138, %r7137};
	xor.b64  	%rd9241, %rd9240, %rd9239;
	shf.l.wrap.b32 	%r7139, %r7133, %r7134, 25;
	shf.l.wrap.b32 	%r7140, %r7134, %r7133, 25;
	mov.b64 	%rd9242, {%r7140, %r7139};
	xor.b64  	%rd9243, %rd9241, %rd9242;
	xor.b64  	%rd9244, %rd9224, %rd9174;
	xor.b64  	%rd9245, %rd9224, %rd9199;
	and.b64  	%rd9246, %rd9245, %rd9244;
	xor.b64  	%rd9247, %rd9246, %rd9224;
	add.s64 	%rd9248, %rd9237, %rd9247;
	add.s64 	%rd9249, %rd9248, %rd9243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7141,%dummy}, %rd9238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7142}, %rd9238;
	}
	shf.r.wrap.b32 	%r7143, %r7142, %r7141, 14;
	shf.r.wrap.b32 	%r7144, %r7141, %r7142, 14;
	mov.b64 	%rd9250, {%r7144, %r7143};
	shf.r.wrap.b32 	%r7145, %r7142, %r7141, 18;
	shf.r.wrap.b32 	%r7146, %r7141, %r7142, 18;
	mov.b64 	%rd9251, {%r7146, %r7145};
	xor.b64  	%rd9252, %rd9251, %rd9250;
	shf.l.wrap.b32 	%r7147, %r7141, %r7142, 23;
	shf.l.wrap.b32 	%r7148, %r7142, %r7141, 23;
	mov.b64 	%rd9253, {%r7148, %r7147};
	xor.b64  	%rd9254, %rd9252, %rd9253;
	xor.b64  	%rd9255, %rd9213, %rd9188;
	and.b64  	%rd9256, %rd9238, %rd9255;
	xor.b64  	%rd9257, %rd9256, %rd9188;
	add.s64 	%rd9258, %rd9163, %rd8958;
	add.s64 	%rd9260, %rd9258, %rd10038;
	add.s64 	%rd9261, %rd9260, %rd9257;
	add.s64 	%rd9262, %rd9261, %rd9254;
	add.s64 	%rd9263, %rd9262, %rd9174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7149,%dummy}, %rd9249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7150}, %rd9249;
	}
	shf.r.wrap.b32 	%r7151, %r7150, %r7149, 28;
	shf.r.wrap.b32 	%r7152, %r7149, %r7150, 28;
	mov.b64 	%rd9264, {%r7152, %r7151};
	shf.l.wrap.b32 	%r7153, %r7149, %r7150, 30;
	shf.l.wrap.b32 	%r7154, %r7150, %r7149, 30;
	mov.b64 	%rd9265, {%r7154, %r7153};
	xor.b64  	%rd9266, %rd9265, %rd9264;
	shf.l.wrap.b32 	%r7155, %r7149, %r7150, 25;
	shf.l.wrap.b32 	%r7156, %r7150, %r7149, 25;
	mov.b64 	%rd9267, {%r7156, %r7155};
	xor.b64  	%rd9268, %rd9266, %rd9267;
	xor.b64  	%rd9269, %rd9249, %rd9199;
	xor.b64  	%rd9270, %rd9249, %rd9224;
	and.b64  	%rd9271, %rd9270, %rd9269;
	xor.b64  	%rd9272, %rd9271, %rd9249;
	add.s64 	%rd9273, %rd9262, %rd9272;
	add.s64 	%rd9274, %rd9273, %rd9268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7157,%dummy}, %rd9263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7158}, %rd9263;
	}
	shf.r.wrap.b32 	%r7159, %r7158, %r7157, 14;
	shf.r.wrap.b32 	%r7160, %r7157, %r7158, 14;
	mov.b64 	%rd9275, {%r7160, %r7159};
	shf.r.wrap.b32 	%r7161, %r7158, %r7157, 18;
	shf.r.wrap.b32 	%r7162, %r7157, %r7158, 18;
	mov.b64 	%rd9276, {%r7162, %r7161};
	xor.b64  	%rd9277, %rd9276, %rd9275;
	shf.l.wrap.b32 	%r7163, %r7157, %r7158, 23;
	shf.l.wrap.b32 	%r7164, %r7158, %r7157, 23;
	mov.b64 	%rd9278, {%r7164, %r7163};
	xor.b64  	%rd9279, %rd9277, %rd9278;
	xor.b64  	%rd9280, %rd9238, %rd9213;
	and.b64  	%rd9281, %rd9263, %rd9280;
	xor.b64  	%rd9282, %rd9281, %rd9213;
	add.s64 	%rd9283, %rd9188, %rd8971;
	add.s64 	%rd9285, %rd9283, %rd10039;
	add.s64 	%rd9286, %rd9285, %rd9282;
	add.s64 	%rd9287, %rd9286, %rd9279;
	add.s64 	%rd9288, %rd9287, %rd9199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7165,%dummy}, %rd9274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7166}, %rd9274;
	}
	shf.r.wrap.b32 	%r7167, %r7166, %r7165, 28;
	shf.r.wrap.b32 	%r7168, %r7165, %r7166, 28;
	mov.b64 	%rd9289, {%r7168, %r7167};
	shf.l.wrap.b32 	%r7169, %r7165, %r7166, 30;
	shf.l.wrap.b32 	%r7170, %r7166, %r7165, 30;
	mov.b64 	%rd9290, {%r7170, %r7169};
	xor.b64  	%rd9291, %rd9290, %rd9289;
	shf.l.wrap.b32 	%r7171, %r7165, %r7166, 25;
	shf.l.wrap.b32 	%r7172, %r7166, %r7165, 25;
	mov.b64 	%rd9292, {%r7172, %r7171};
	xor.b64  	%rd9293, %rd9291, %rd9292;
	xor.b64  	%rd9294, %rd9274, %rd9224;
	xor.b64  	%rd9295, %rd9274, %rd9249;
	and.b64  	%rd9296, %rd9295, %rd9294;
	xor.b64  	%rd9297, %rd9296, %rd9274;
	add.s64 	%rd9298, %rd9287, %rd9297;
	add.s64 	%rd9299, %rd9298, %rd9293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7173,%dummy}, %rd9288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7174}, %rd9288;
	}
	shf.r.wrap.b32 	%r7175, %r7174, %r7173, 14;
	shf.r.wrap.b32 	%r7176, %r7173, %r7174, 14;
	mov.b64 	%rd9300, {%r7176, %r7175};
	shf.r.wrap.b32 	%r7177, %r7174, %r7173, 18;
	shf.r.wrap.b32 	%r7178, %r7173, %r7174, 18;
	mov.b64 	%rd9301, {%r7178, %r7177};
	xor.b64  	%rd9302, %rd9301, %rd9300;
	shf.l.wrap.b32 	%r7179, %r7173, %r7174, 23;
	shf.l.wrap.b32 	%r7180, %r7174, %r7173, 23;
	mov.b64 	%rd9303, {%r7180, %r7179};
	xor.b64  	%rd9304, %rd9302, %rd9303;
	xor.b64  	%rd9305, %rd9263, %rd9238;
	and.b64  	%rd9306, %rd9288, %rd9305;
	xor.b64  	%rd9307, %rd9306, %rd9238;
	add.s64 	%rd9308, %rd9213, %rd8984;
	add.s64 	%rd9310, %rd9308, %rd10076;
	add.s64 	%rd9311, %rd9310, %rd9307;
	add.s64 	%rd9312, %rd9311, %rd9304;
	add.s64 	%rd9313, %rd9312, %rd9224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7181,%dummy}, %rd9299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7182}, %rd9299;
	}
	shf.r.wrap.b32 	%r7183, %r7182, %r7181, 28;
	shf.r.wrap.b32 	%r7184, %r7181, %r7182, 28;
	mov.b64 	%rd9314, {%r7184, %r7183};
	shf.l.wrap.b32 	%r7185, %r7181, %r7182, 30;
	shf.l.wrap.b32 	%r7186, %r7182, %r7181, 30;
	mov.b64 	%rd9315, {%r7186, %r7185};
	xor.b64  	%rd9316, %rd9315, %rd9314;
	shf.l.wrap.b32 	%r7187, %r7181, %r7182, 25;
	shf.l.wrap.b32 	%r7188, %r7182, %r7181, 25;
	mov.b64 	%rd9317, {%r7188, %r7187};
	xor.b64  	%rd9318, %rd9316, %rd9317;
	xor.b64  	%rd9319, %rd9299, %rd9249;
	xor.b64  	%rd9320, %rd9299, %rd9274;
	and.b64  	%rd9321, %rd9320, %rd9319;
	xor.b64  	%rd9322, %rd9321, %rd9299;
	add.s64 	%rd9323, %rd9312, %rd9322;
	add.s64 	%rd9324, %rd9323, %rd9318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7189,%dummy}, %rd9313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7190}, %rd9313;
	}
	shf.r.wrap.b32 	%r7191, %r7190, %r7189, 14;
	shf.r.wrap.b32 	%r7192, %r7189, %r7190, 14;
	mov.b64 	%rd9325, {%r7192, %r7191};
	shf.r.wrap.b32 	%r7193, %r7190, %r7189, 18;
	shf.r.wrap.b32 	%r7194, %r7189, %r7190, 18;
	mov.b64 	%rd9326, {%r7194, %r7193};
	xor.b64  	%rd9327, %rd9326, %rd9325;
	shf.l.wrap.b32 	%r7195, %r7189, %r7190, 23;
	shf.l.wrap.b32 	%r7196, %r7190, %r7189, 23;
	mov.b64 	%rd9328, {%r7196, %r7195};
	xor.b64  	%rd9329, %rd9327, %rd9328;
	xor.b64  	%rd9330, %rd9288, %rd9263;
	and.b64  	%rd9331, %rd9313, %rd9330;
	xor.b64  	%rd9332, %rd9331, %rd9263;
	add.s64 	%rd9333, %rd9238, %rd8997;
	add.s64 	%rd9335, %rd9333, %rd10066;
	add.s64 	%rd9336, %rd9335, %rd9332;
	add.s64 	%rd9337, %rd9336, %rd9329;
	add.s64 	%rd9338, %rd9337, %rd9249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7197,%dummy}, %rd9324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7198}, %rd9324;
	}
	shf.r.wrap.b32 	%r7199, %r7198, %r7197, 28;
	shf.r.wrap.b32 	%r7200, %r7197, %r7198, 28;
	mov.b64 	%rd9339, {%r7200, %r7199};
	shf.l.wrap.b32 	%r7201, %r7197, %r7198, 30;
	shf.l.wrap.b32 	%r7202, %r7198, %r7197, 30;
	mov.b64 	%rd9340, {%r7202, %r7201};
	xor.b64  	%rd9341, %rd9340, %rd9339;
	shf.l.wrap.b32 	%r7203, %r7197, %r7198, 25;
	shf.l.wrap.b32 	%r7204, %r7198, %r7197, 25;
	mov.b64 	%rd9342, {%r7204, %r7203};
	xor.b64  	%rd9343, %rd9341, %rd9342;
	xor.b64  	%rd9344, %rd9324, %rd9274;
	xor.b64  	%rd9345, %rd9324, %rd9299;
	and.b64  	%rd9346, %rd9345, %rd9344;
	xor.b64  	%rd9347, %rd9346, %rd9324;
	add.s64 	%rd9348, %rd9337, %rd9347;
	add.s64 	%rd9349, %rd9348, %rd9343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7205,%dummy}, %rd9338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7206}, %rd9338;
	}
	shf.r.wrap.b32 	%r7207, %r7206, %r7205, 14;
	shf.r.wrap.b32 	%r7208, %r7205, %r7206, 14;
	mov.b64 	%rd9350, {%r7208, %r7207};
	shf.r.wrap.b32 	%r7209, %r7206, %r7205, 18;
	shf.r.wrap.b32 	%r7210, %r7205, %r7206, 18;
	mov.b64 	%rd9351, {%r7210, %r7209};
	xor.b64  	%rd9352, %rd9351, %rd9350;
	shf.l.wrap.b32 	%r7211, %r7205, %r7206, 23;
	shf.l.wrap.b32 	%r7212, %r7206, %r7205, 23;
	mov.b64 	%rd9353, {%r7212, %r7211};
	xor.b64  	%rd9354, %rd9352, %rd9353;
	xor.b64  	%rd9355, %rd9313, %rd9288;
	and.b64  	%rd9356, %rd9338, %rd9355;
	xor.b64  	%rd9357, %rd9356, %rd9288;
	add.s64 	%rd9358, %rd9263, %rd9010;
	add.s64 	%rd9360, %rd9358, %rd10067;
	add.s64 	%rd9361, %rd9360, %rd9357;
	add.s64 	%rd9362, %rd9361, %rd9354;
	add.s64 	%rd9363, %rd9362, %rd9274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7213,%dummy}, %rd9349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7214}, %rd9349;
	}
	shf.r.wrap.b32 	%r7215, %r7214, %r7213, 28;
	shf.r.wrap.b32 	%r7216, %r7213, %r7214, 28;
	mov.b64 	%rd9364, {%r7216, %r7215};
	shf.l.wrap.b32 	%r7217, %r7213, %r7214, 30;
	shf.l.wrap.b32 	%r7218, %r7214, %r7213, 30;
	mov.b64 	%rd9365, {%r7218, %r7217};
	xor.b64  	%rd9366, %rd9365, %rd9364;
	shf.l.wrap.b32 	%r7219, %r7213, %r7214, 25;
	shf.l.wrap.b32 	%r7220, %r7214, %r7213, 25;
	mov.b64 	%rd9367, {%r7220, %r7219};
	xor.b64  	%rd9368, %rd9366, %rd9367;
	xor.b64  	%rd9369, %rd9349, %rd9299;
	xor.b64  	%rd9370, %rd9349, %rd9324;
	and.b64  	%rd9371, %rd9370, %rd9369;
	xor.b64  	%rd9372, %rd9371, %rd9349;
	add.s64 	%rd9373, %rd9362, %rd9372;
	add.s64 	%rd9374, %rd9373, %rd9368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7221,%dummy}, %rd9363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7222}, %rd9363;
	}
	shf.r.wrap.b32 	%r7223, %r7222, %r7221, 14;
	shf.r.wrap.b32 	%r7224, %r7221, %r7222, 14;
	mov.b64 	%rd9375, {%r7224, %r7223};
	shf.r.wrap.b32 	%r7225, %r7222, %r7221, 18;
	shf.r.wrap.b32 	%r7226, %r7221, %r7222, 18;
	mov.b64 	%rd9376, {%r7226, %r7225};
	xor.b64  	%rd9377, %rd9376, %rd9375;
	shf.l.wrap.b32 	%r7227, %r7221, %r7222, 23;
	shf.l.wrap.b32 	%r7228, %r7222, %r7221, 23;
	mov.b64 	%rd9378, {%r7228, %r7227};
	xor.b64  	%rd9379, %rd9377, %rd9378;
	xor.b64  	%rd9380, %rd9338, %rd9313;
	and.b64  	%rd9381, %rd9363, %rd9380;
	xor.b64  	%rd9382, %rd9381, %rd9313;
	add.s64 	%rd9383, %rd9288, %rd9023;
	add.s64 	%rd9385, %rd9383, %rd10068;
	add.s64 	%rd9386, %rd9385, %rd9382;
	add.s64 	%rd9387, %rd9386, %rd9379;
	add.s64 	%rd9388, %rd9387, %rd9299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7229,%dummy}, %rd9374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7230}, %rd9374;
	}
	shf.r.wrap.b32 	%r7231, %r7230, %r7229, 28;
	shf.r.wrap.b32 	%r7232, %r7229, %r7230, 28;
	mov.b64 	%rd9389, {%r7232, %r7231};
	shf.l.wrap.b32 	%r7233, %r7229, %r7230, 30;
	shf.l.wrap.b32 	%r7234, %r7230, %r7229, 30;
	mov.b64 	%rd9390, {%r7234, %r7233};
	xor.b64  	%rd9391, %rd9390, %rd9389;
	shf.l.wrap.b32 	%r7235, %r7229, %r7230, 25;
	shf.l.wrap.b32 	%r7236, %r7230, %r7229, 25;
	mov.b64 	%rd9392, {%r7236, %r7235};
	xor.b64  	%rd9393, %rd9391, %rd9392;
	xor.b64  	%rd9394, %rd9374, %rd9324;
	xor.b64  	%rd9395, %rd9374, %rd9349;
	and.b64  	%rd9396, %rd9395, %rd9394;
	xor.b64  	%rd9397, %rd9396, %rd9374;
	add.s64 	%rd9398, %rd9387, %rd9397;
	add.s64 	%rd9399, %rd9398, %rd9393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7237,%dummy}, %rd9388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7238}, %rd9388;
	}
	shf.r.wrap.b32 	%r7239, %r7238, %r7237, 14;
	shf.r.wrap.b32 	%r7240, %r7237, %r7238, 14;
	mov.b64 	%rd9400, {%r7240, %r7239};
	shf.r.wrap.b32 	%r7241, %r7238, %r7237, 18;
	shf.r.wrap.b32 	%r7242, %r7237, %r7238, 18;
	mov.b64 	%rd9401, {%r7242, %r7241};
	xor.b64  	%rd9402, %rd9401, %rd9400;
	shf.l.wrap.b32 	%r7243, %r7237, %r7238, 23;
	shf.l.wrap.b32 	%r7244, %r7238, %r7237, 23;
	mov.b64 	%rd9403, {%r7244, %r7243};
	xor.b64  	%rd9404, %rd9402, %rd9403;
	xor.b64  	%rd9405, %rd9363, %rd9338;
	and.b64  	%rd9406, %rd9388, %rd9405;
	xor.b64  	%rd9407, %rd9406, %rd9338;
	add.s64 	%rd9408, %rd9313, %rd9036;
	add.s64 	%rd9410, %rd9408, %rd10069;
	add.s64 	%rd9411, %rd9410, %rd9407;
	add.s64 	%rd9412, %rd9411, %rd9404;
	add.s64 	%rd9413, %rd9412, %rd9324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7245,%dummy}, %rd9399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7246}, %rd9399;
	}
	shf.r.wrap.b32 	%r7247, %r7246, %r7245, 28;
	shf.r.wrap.b32 	%r7248, %r7245, %r7246, 28;
	mov.b64 	%rd9414, {%r7248, %r7247};
	shf.l.wrap.b32 	%r7249, %r7245, %r7246, 30;
	shf.l.wrap.b32 	%r7250, %r7246, %r7245, 30;
	mov.b64 	%rd9415, {%r7250, %r7249};
	xor.b64  	%rd9416, %rd9415, %rd9414;
	shf.l.wrap.b32 	%r7251, %r7245, %r7246, 25;
	shf.l.wrap.b32 	%r7252, %r7246, %r7245, 25;
	mov.b64 	%rd9417, {%r7252, %r7251};
	xor.b64  	%rd9418, %rd9416, %rd9417;
	xor.b64  	%rd9419, %rd9399, %rd9349;
	xor.b64  	%rd9420, %rd9399, %rd9374;
	and.b64  	%rd9421, %rd9420, %rd9419;
	xor.b64  	%rd9422, %rd9421, %rd9399;
	add.s64 	%rd9423, %rd9412, %rd9422;
	add.s64 	%rd18, %rd9423, %rd9418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7253,%dummy}, %rd9413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7254}, %rd9413;
	}
	shf.r.wrap.b32 	%r7255, %r7254, %r7253, 14;
	shf.r.wrap.b32 	%r7256, %r7253, %r7254, 14;
	mov.b64 	%rd9424, {%r7256, %r7255};
	shf.r.wrap.b32 	%r7257, %r7254, %r7253, 18;
	shf.r.wrap.b32 	%r7258, %r7253, %r7254, 18;
	mov.b64 	%rd9425, {%r7258, %r7257};
	xor.b64  	%rd9426, %rd9425, %rd9424;
	shf.l.wrap.b32 	%r7259, %r7253, %r7254, 23;
	shf.l.wrap.b32 	%r7260, %r7254, %r7253, 23;
	mov.b64 	%rd9427, {%r7260, %r7259};
	xor.b64  	%rd9428, %rd9426, %rd9427;
	xor.b64  	%rd9429, %rd9388, %rd9363;
	and.b64  	%rd9430, %rd9413, %rd9429;
	xor.b64  	%rd9431, %rd9430, %rd9363;
	add.s64 	%rd9432, %rd9338, %rd9049;
	add.s64 	%rd9434, %rd9432, %rd10070;
	add.s64 	%rd9435, %rd9434, %rd9431;
	add.s64 	%rd9436, %rd9435, %rd9428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7261,%dummy}, %rd18;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7262}, %rd18;
	}
	shf.r.wrap.b32 	%r7263, %r7262, %r7261, 28;
	shf.r.wrap.b32 	%r7264, %r7261, %r7262, 28;
	mov.b64 	%rd9437, {%r7264, %r7263};
	shf.l.wrap.b32 	%r7265, %r7261, %r7262, 30;
	shf.l.wrap.b32 	%r7266, %r7262, %r7261, 30;
	mov.b64 	%rd9438, {%r7266, %r7265};
	xor.b64  	%rd9439, %rd9438, %rd9437;
	shf.l.wrap.b32 	%r7267, %r7261, %r7262, 25;
	shf.l.wrap.b32 	%r7268, %r7262, %r7261, 25;
	mov.b64 	%rd9440, {%r7268, %r7267};
	xor.b64  	%rd9441, %rd9439, %rd9440;
	xor.b64  	%rd9442, %rd18, %rd9374;
	xor.b64  	%rd9443, %rd18, %rd9399;
	and.b64  	%rd9444, %rd9443, %rd9442;
	xor.b64  	%rd9445, %rd9444, %rd18;
	add.s64 	%rd9446, %rd9436, %rd9445;
	add.s64 	%rd9447, %rd9446, %rd9441;
	add.s64 	%rd19, %rd9447, 7640891576956012808;
	shr.u64 	%rd9448, %rd9, 32;
	cvt.u32.u64	%r8203, %rd9448;
	add.s64 	%rd9449, %rd8, -4942790177534073029;
	shr.u64 	%rd9450, %rd9449, 32;
	cvt.u32.u64	%r8201, %rd9450;
	cvt.u32.u64	%r8200, %rd9449;
	shr.u64 	%rd9451, %rd10, 32;
	cvt.u32.u64	%r8199, %rd9451;
	add.s64 	%rd9452, %rd7, -6534734903238641935;
	shr.u64 	%rd9453, %rd9452, 32;
	cvt.u32.u64	%r8197, %rd9453;
	cvt.u32.u64	%r8204, %rd9452;
	st.local.u32 	[%rd10079], %r8203;
	cvt.u32.u64	%r8202, %rd9;
	st.local.u32 	[%rd12], %r8202;
	st.local.v2.u32 	[%rd12+4], {%r8201, %r8200};
	cvt.u32.u64	%r8198, %rd10;
	st.local.v4.u32 	[%rd12+12], {%r8199, %r8198, %r8197, %r8204};
	mov.u32 	%r8196, -7;
	mov.u64 	%rd10080, rcon;
	bra.uni 	BB3_7;

BB3_8:
	mov.u64 	%rd10047, m09600_comp$s_te1;
	mov.u64 	%rd10046, m09600_comp$s_te0;
	mov.u64 	%rd10045, m09600_comp$s_te3;
	mov.u64 	%rd10044, m09600_comp$s_te2;
	shr.u32 	%r7284, %r8200, 24;
	mul.wide.u32 	%rd9468, %r7284, 4;
	add.s64 	%rd9470, %rd10044, %rd9468;
	ld.shared.u32 	%r7285, [%rd9470];
	and.b32  	%r7286, %r7285, -16777216;
	xor.b32  	%r7287, %r7286, %r8199;
	shr.u32 	%r7288, %r8200, 16;
	mul.wide.u32 	%rd9471, %r7288, 4;
	and.b64  	%rd9472, %rd9471, 1020;
	add.s64 	%rd9474, %rd10045, %rd9472;
	ld.shared.u32 	%r7289, [%rd9474];
	and.b32  	%r7290, %r7289, 16711680;
	xor.b32  	%r7291, %r7287, %r7290;
	shr.u32 	%r7292, %r8200, 8;
	mul.wide.u32 	%rd9475, %r7292, 4;
	and.b64  	%rd9476, %rd9475, 1020;
	add.s64 	%rd9478, %rd10046, %rd9476;
	ld.shared.u32 	%r7293, [%rd9478];
	and.b32  	%r7294, %r7293, 65280;
	xor.b32  	%r7295, %r7291, %r7294;
	mul.wide.u32 	%rd9479, %r8200, 4;
	and.b64  	%rd9480, %rd9479, 1020;
	add.s64 	%rd9482, %rd10047, %rd9480;
	ld.shared.u8 	%r7296, [%rd9482];
	xor.b32  	%r8199, %r7295, %r7296;
	xor.b32  	%r8198, %r8199, %r8198;
	xor.b32  	%r8197, %r8198, %r8197;
	xor.b32  	%r8204, %r8197, %r8204;
	st.local.v4.u32 	[%rd10079+48], {%r8199, %r8198, %r8197, %r8204};
	add.s64 	%rd10080, %rd10080, 4;
	add.s64 	%rd10079, %rd10079, 32;

BB3_7:
	mov.u64 	%rd10043, m09600_comp$s_te1;
	mov.u64 	%rd10042, m09600_comp$s_te0;
	mov.u64 	%rd10041, m09600_comp$s_te3;
	mov.u64 	%rd10040, m09600_comp$s_te2;
	bfe.u32 	%r7269, %r8204, 16, 8;
	mul.wide.u32 	%rd9454, %r7269, 4;
	add.s64 	%rd9456, %rd10040, %rd9454;
	ld.shared.u32 	%r7270, [%rd9456];
	and.b32  	%r7271, %r7270, -16777216;
	xor.b32  	%r7272, %r7271, %r8203;
	shr.u32 	%r7273, %r8204, 8;
	mul.wide.u32 	%rd9457, %r7273, 4;
	and.b64  	%rd9458, %rd9457, 1020;
	add.s64 	%rd9460, %rd10041, %rd9458;
	ld.shared.u32 	%r7274, [%rd9460];
	and.b32  	%r7275, %r7274, 16711680;
	xor.b32  	%r7276, %r7272, %r7275;
	mul.wide.u32 	%rd9461, %r8204, 4;
	and.b64  	%rd9462, %rd9461, 1020;
	add.s64 	%rd9464, %rd10042, %rd9462;
	ld.shared.u32 	%r7277, [%rd9464];
	and.b32  	%r7278, %r7277, 65280;
	xor.b32  	%r7279, %r7276, %r7278;
	shr.u32 	%r7280, %r8204, 24;
	mul.wide.u32 	%rd9465, %r7280, 4;
	add.s64 	%rd9467, %rd10043, %rd9465;
	ld.shared.u8 	%r7281, [%rd9467];
	xor.b32  	%r7282, %r7279, %r7281;
	ld.const.u32 	%r7283, [%rd10080];
	xor.b32  	%r8203, %r7282, %r7283;
	xor.b32  	%r8202, %r8203, %r8202;
	xor.b32  	%r8201, %r8202, %r8201;
	xor.b32  	%r8200, %r8201, %r8200;
	st.local.v4.u32 	[%rd10079+32], {%r8203, %r8202, %r8201, %r8200};
	add.s32 	%r8196, %r8196, 1;
	setp.eq.s32	%p5, %r8196, 0;
	@%p5 bra 	BB3_9;
	bra.uni 	BB3_8;

BB3_9:
	ld.param.u32 	%r8178, [m09600_comp_param_24];
	add.u64 	%rd10073, %SP, 0;
	cvta.to.local.u64 	%rd10072, %rd10073;
	add.s64 	%rd10071, %rd10072, 4;
	add.u64 	%rd10062, %SP, 0;
	cvta.to.local.u64 	%rd10061, %rd10062;
	add.s64 	%rd10060, %rd10061, 32;
	ld.param.u64 	%rd10052, [m09600_comp_param_6];
	mov.u64 	%rd10051, m09600_comp$s_te1;
	mov.u64 	%rd10050, m09600_comp$s_te0;
	mov.u64 	%rd10049, m09600_comp$s_te3;
	mov.u64 	%rd10048, m09600_comp$s_te2;
	ld.param.u32 	%r8164, [m09600_comp_param_25];
	shr.u64 	%rd9483, %rd19, 32;
	cvt.u32.u64	%r7297, %rd9483;
	xor.b32  	%r7298, %r36, %r7297;
	cvt.u32.u64	%r7299, %rd19;
	xor.b32  	%r7300, %r37, %r7299;
	add.s64 	%rd9484, %rd18, -4942790177534073029;
	shr.u64 	%rd9485, %rd9484, 32;
	cvt.u32.u64	%r7301, %rd9485;
	xor.b32  	%r7302, %r38, %r7301;
	cvt.u32.u64	%r7303, %rd9484;
	xor.b32  	%r7304, %r39, %r7303;
	ld.local.u32 	%r7305, [%rd10061];
	xor.b32  	%r7306, %r7298, %r7305;
	ld.local.u32 	%r7307, [%rd10071];
	xor.b32  	%r7308, %r7300, %r7307;
	ld.local.v2.u32 	{%r7309, %r7310}, [%rd10071+4];
	xor.b32  	%r7312, %r7302, %r7309;
	xor.b32  	%r7314, %r7304, %r7310;
	shr.u32 	%r7315, %r7306, 24;
	mul.wide.u32 	%rd9486, %r7315, 4;
	add.s64 	%rd9488, %rd10050, %rd9486;
	bfe.u32 	%r7316, %r7308, 16, 8;
	mul.wide.u32 	%rd9489, %r7316, 4;
	add.s64 	%rd9491, %rd10051, %rd9489;
	ld.shared.u32 	%r7317, [%rd9491];
	ld.shared.u32 	%r7318, [%rd9488];
	xor.b32  	%r7319, %r7317, %r7318;
	bfe.u32 	%r7320, %r7312, 8, 8;
	mul.wide.u32 	%rd9492, %r7320, 4;
	add.s64 	%rd9494, %rd10048, %rd9492;
	ld.shared.u32 	%r7321, [%rd9494];
	xor.b32  	%r7322, %r7319, %r7321;
	and.b32  	%r7323, %r7314, 255;
	mul.wide.u32 	%rd9495, %r7323, 4;
	add.s64 	%rd9497, %rd10049, %rd9495;
	ld.shared.u32 	%r7324, [%rd9497];
	xor.b32  	%r7325, %r7322, %r7324;
	ld.local.v4.u32 	{%r7326, %r7327, %r7328, %r7329}, [%rd10071+12];
	xor.b32  	%r7331, %r7325, %r7326;
	shr.u32 	%r7332, %r7308, 24;
	mul.wide.u32 	%rd9498, %r7332, 4;
	add.s64 	%rd9499, %rd10050, %rd9498;
	bfe.u32 	%r7333, %r7312, 16, 8;
	mul.wide.u32 	%rd9500, %r7333, 4;
	add.s64 	%rd9501, %rd10051, %rd9500;
	ld.shared.u32 	%r7334, [%rd9501];
	ld.shared.u32 	%r7335, [%rd9499];
	xor.b32  	%r7336, %r7334, %r7335;
	bfe.u32 	%r7337, %r7314, 8, 8;
	mul.wide.u32 	%rd9502, %r7337, 4;
	add.s64 	%rd9503, %rd10048, %rd9502;
	ld.shared.u32 	%r7338, [%rd9503];
	xor.b32  	%r7339, %r7336, %r7338;
	and.b32  	%r7340, %r7306, 255;
	mul.wide.u32 	%rd9504, %r7340, 4;
	add.s64 	%rd9505, %rd10049, %rd9504;
	ld.shared.u32 	%r7341, [%rd9505];
	xor.b32  	%r7342, %r7339, %r7341;
	xor.b32  	%r7344, %r7342, %r7327;
	shr.u32 	%r7345, %r7312, 24;
	mul.wide.u32 	%rd9506, %r7345, 4;
	add.s64 	%rd9507, %rd10050, %rd9506;
	bfe.u32 	%r7346, %r7314, 16, 8;
	mul.wide.u32 	%rd9508, %r7346, 4;
	add.s64 	%rd9509, %rd10051, %rd9508;
	ld.shared.u32 	%r7347, [%rd9509];
	ld.shared.u32 	%r7348, [%rd9507];
	xor.b32  	%r7349, %r7347, %r7348;
	bfe.u32 	%r7350, %r7306, 8, 8;
	mul.wide.u32 	%rd9510, %r7350, 4;
	add.s64 	%rd9511, %rd10048, %rd9510;
	ld.shared.u32 	%r7351, [%rd9511];
	xor.b32  	%r7352, %r7349, %r7351;
	and.b32  	%r7353, %r7308, 255;
	mul.wide.u32 	%rd9512, %r7353, 4;
	add.s64 	%rd9513, %rd10049, %rd9512;
	ld.shared.u32 	%r7354, [%rd9513];
	xor.b32  	%r7355, %r7352, %r7354;
	xor.b32  	%r7357, %r7355, %r7328;
	shr.u32 	%r7358, %r7314, 24;
	mul.wide.u32 	%rd9514, %r7358, 4;
	add.s64 	%rd9515, %rd10050, %rd9514;
	bfe.u32 	%r7359, %r7306, 16, 8;
	mul.wide.u32 	%rd9516, %r7359, 4;
	add.s64 	%rd9517, %rd10051, %rd9516;
	ld.shared.u32 	%r7360, [%rd9517];
	ld.shared.u32 	%r7361, [%rd9515];
	xor.b32  	%r7362, %r7360, %r7361;
	bfe.u32 	%r7363, %r7308, 8, 8;
	mul.wide.u32 	%rd9518, %r7363, 4;
	add.s64 	%rd9519, %rd10048, %rd9518;
	ld.shared.u32 	%r7364, [%rd9519];
	xor.b32  	%r7365, %r7362, %r7364;
	and.b32  	%r7366, %r7312, 255;
	mul.wide.u32 	%rd9520, %r7366, 4;
	add.s64 	%rd9521, %rd10049, %rd9520;
	ld.shared.u32 	%r7367, [%rd9521];
	xor.b32  	%r7368, %r7365, %r7367;
	xor.b32  	%r7370, %r7368, %r7329;
	shr.u32 	%r7371, %r7331, 24;
	mul.wide.u32 	%rd9522, %r7371, 4;
	add.s64 	%rd9523, %rd10050, %rd9522;
	bfe.u32 	%r7372, %r7344, 16, 8;
	mul.wide.u32 	%rd9524, %r7372, 4;
	add.s64 	%rd9525, %rd10051, %rd9524;
	ld.shared.u32 	%r7373, [%rd9525];
	ld.shared.u32 	%r7374, [%rd9523];
	xor.b32  	%r7375, %r7373, %r7374;
	bfe.u32 	%r7376, %r7357, 8, 8;
	mul.wide.u32 	%rd9526, %r7376, 4;
	add.s64 	%rd9527, %rd10048, %rd9526;
	ld.shared.u32 	%r7377, [%rd9527];
	xor.b32  	%r7378, %r7375, %r7377;
	and.b32  	%r7379, %r7370, 255;
	mul.wide.u32 	%rd9528, %r7379, 4;
	add.s64 	%rd9529, %rd10049, %rd9528;
	ld.shared.u32 	%r7380, [%rd9529];
	xor.b32  	%r7381, %r7378, %r7380;
	ld.local.v4.u32 	{%r7382, %r7383, %r7384, %r7385}, [%rd10060];
	xor.b32  	%r7387, %r7381, %r7382;
	shr.u32 	%r7388, %r7344, 24;
	mul.wide.u32 	%rd9530, %r7388, 4;
	add.s64 	%rd9531, %rd10050, %rd9530;
	bfe.u32 	%r7389, %r7357, 16, 8;
	mul.wide.u32 	%rd9532, %r7389, 4;
	add.s64 	%rd9533, %rd10051, %rd9532;
	ld.shared.u32 	%r7390, [%rd9533];
	ld.shared.u32 	%r7391, [%rd9531];
	xor.b32  	%r7392, %r7390, %r7391;
	bfe.u32 	%r7393, %r7370, 8, 8;
	mul.wide.u32 	%rd9534, %r7393, 4;
	add.s64 	%rd9535, %rd10048, %rd9534;
	ld.shared.u32 	%r7394, [%rd9535];
	xor.b32  	%r7395, %r7392, %r7394;
	and.b32  	%r7396, %r7331, 255;
	mul.wide.u32 	%rd9536, %r7396, 4;
	add.s64 	%rd9537, %rd10049, %rd9536;
	ld.shared.u32 	%r7397, [%rd9537];
	xor.b32  	%r7398, %r7395, %r7397;
	xor.b32  	%r7400, %r7398, %r7383;
	shr.u32 	%r7401, %r7357, 24;
	mul.wide.u32 	%rd9538, %r7401, 4;
	add.s64 	%rd9539, %rd10050, %rd9538;
	bfe.u32 	%r7402, %r7370, 16, 8;
	mul.wide.u32 	%rd9540, %r7402, 4;
	add.s64 	%rd9541, %rd10051, %rd9540;
	ld.shared.u32 	%r7403, [%rd9541];
	ld.shared.u32 	%r7404, [%rd9539];
	xor.b32  	%r7405, %r7403, %r7404;
	bfe.u32 	%r7406, %r7331, 8, 8;
	mul.wide.u32 	%rd9542, %r7406, 4;
	add.s64 	%rd9543, %rd10048, %rd9542;
	ld.shared.u32 	%r7407, [%rd9543];
	xor.b32  	%r7408, %r7405, %r7407;
	and.b32  	%r7409, %r7344, 255;
	mul.wide.u32 	%rd9544, %r7409, 4;
	add.s64 	%rd9545, %rd10049, %rd9544;
	ld.shared.u32 	%r7410, [%rd9545];
	xor.b32  	%r7411, %r7408, %r7410;
	xor.b32  	%r7413, %r7411, %r7384;
	shr.u32 	%r7414, %r7370, 24;
	mul.wide.u32 	%rd9546, %r7414, 4;
	add.s64 	%rd9547, %rd10050, %rd9546;
	bfe.u32 	%r7415, %r7331, 16, 8;
	mul.wide.u32 	%rd9548, %r7415, 4;
	add.s64 	%rd9549, %rd10051, %rd9548;
	ld.shared.u32 	%r7416, [%rd9549];
	ld.shared.u32 	%r7417, [%rd9547];
	xor.b32  	%r7418, %r7416, %r7417;
	bfe.u32 	%r7419, %r7344, 8, 8;
	mul.wide.u32 	%rd9550, %r7419, 4;
	add.s64 	%rd9551, %rd10048, %rd9550;
	ld.shared.u32 	%r7420, [%rd9551];
	xor.b32  	%r7421, %r7418, %r7420;
	and.b32  	%r7422, %r7357, 255;
	mul.wide.u32 	%rd9552, %r7422, 4;
	add.s64 	%rd9553, %rd10049, %rd9552;
	ld.shared.u32 	%r7423, [%rd9553];
	xor.b32  	%r7424, %r7421, %r7423;
	xor.b32  	%r7426, %r7424, %r7385;
	shr.u32 	%r7427, %r7387, 24;
	mul.wide.u32 	%rd9554, %r7427, 4;
	add.s64 	%rd9555, %rd10050, %rd9554;
	bfe.u32 	%r7428, %r7400, 16, 8;
	mul.wide.u32 	%rd9556, %r7428, 4;
	add.s64 	%rd9557, %rd10051, %rd9556;
	ld.shared.u32 	%r7429, [%rd9557];
	ld.shared.u32 	%r7430, [%rd9555];
	xor.b32  	%r7431, %r7429, %r7430;
	bfe.u32 	%r7432, %r7413, 8, 8;
	mul.wide.u32 	%rd9558, %r7432, 4;
	add.s64 	%rd9559, %rd10048, %rd9558;
	ld.shared.u32 	%r7433, [%rd9559];
	xor.b32  	%r7434, %r7431, %r7433;
	and.b32  	%r7435, %r7426, 255;
	mul.wide.u32 	%rd9560, %r7435, 4;
	add.s64 	%rd9561, %rd10049, %rd9560;
	ld.shared.u32 	%r7436, [%rd9561];
	xor.b32  	%r7437, %r7434, %r7436;
	ld.local.v4.u32 	{%r7438, %r7439, %r7440, %r7441}, [%rd10060+16];
	xor.b32  	%r7443, %r7437, %r7438;
	shr.u32 	%r7444, %r7400, 24;
	mul.wide.u32 	%rd9562, %r7444, 4;
	add.s64 	%rd9563, %rd10050, %rd9562;
	bfe.u32 	%r7445, %r7413, 16, 8;
	mul.wide.u32 	%rd9564, %r7445, 4;
	add.s64 	%rd9565, %rd10051, %rd9564;
	ld.shared.u32 	%r7446, [%rd9565];
	ld.shared.u32 	%r7447, [%rd9563];
	xor.b32  	%r7448, %r7446, %r7447;
	bfe.u32 	%r7449, %r7426, 8, 8;
	mul.wide.u32 	%rd9566, %r7449, 4;
	add.s64 	%rd9567, %rd10048, %rd9566;
	ld.shared.u32 	%r7450, [%rd9567];
	xor.b32  	%r7451, %r7448, %r7450;
	and.b32  	%r7452, %r7387, 255;
	mul.wide.u32 	%rd9568, %r7452, 4;
	add.s64 	%rd9569, %rd10049, %rd9568;
	ld.shared.u32 	%r7453, [%rd9569];
	xor.b32  	%r7454, %r7451, %r7453;
	xor.b32  	%r7456, %r7454, %r7439;
	shr.u32 	%r7457, %r7413, 24;
	mul.wide.u32 	%rd9570, %r7457, 4;
	add.s64 	%rd9571, %rd10050, %rd9570;
	bfe.u32 	%r7458, %r7426, 16, 8;
	mul.wide.u32 	%rd9572, %r7458, 4;
	add.s64 	%rd9573, %rd10051, %rd9572;
	ld.shared.u32 	%r7459, [%rd9573];
	ld.shared.u32 	%r7460, [%rd9571];
	xor.b32  	%r7461, %r7459, %r7460;
	bfe.u32 	%r7462, %r7387, 8, 8;
	mul.wide.u32 	%rd9574, %r7462, 4;
	add.s64 	%rd9575, %rd10048, %rd9574;
	ld.shared.u32 	%r7463, [%rd9575];
	xor.b32  	%r7464, %r7461, %r7463;
	and.b32  	%r7465, %r7400, 255;
	mul.wide.u32 	%rd9576, %r7465, 4;
	add.s64 	%rd9577, %rd10049, %rd9576;
	ld.shared.u32 	%r7466, [%rd9577];
	xor.b32  	%r7467, %r7464, %r7466;
	xor.b32  	%r7469, %r7467, %r7440;
	shr.u32 	%r7470, %r7426, 24;
	mul.wide.u32 	%rd9578, %r7470, 4;
	add.s64 	%rd9579, %rd10050, %rd9578;
	bfe.u32 	%r7471, %r7387, 16, 8;
	mul.wide.u32 	%rd9580, %r7471, 4;
	add.s64 	%rd9581, %rd10051, %rd9580;
	ld.shared.u32 	%r7472, [%rd9581];
	ld.shared.u32 	%r7473, [%rd9579];
	xor.b32  	%r7474, %r7472, %r7473;
	bfe.u32 	%r7475, %r7400, 8, 8;
	mul.wide.u32 	%rd9582, %r7475, 4;
	add.s64 	%rd9583, %rd10048, %rd9582;
	ld.shared.u32 	%r7476, [%rd9583];
	xor.b32  	%r7477, %r7474, %r7476;
	and.b32  	%r7478, %r7413, 255;
	mul.wide.u32 	%rd9584, %r7478, 4;
	add.s64 	%rd9585, %rd10049, %rd9584;
	ld.shared.u32 	%r7479, [%rd9585];
	xor.b32  	%r7480, %r7477, %r7479;
	xor.b32  	%r7482, %r7480, %r7441;
	shr.u32 	%r7483, %r7443, 24;
	mul.wide.u32 	%rd9586, %r7483, 4;
	add.s64 	%rd9587, %rd10050, %rd9586;
	bfe.u32 	%r7484, %r7456, 16, 8;
	mul.wide.u32 	%rd9588, %r7484, 4;
	add.s64 	%rd9589, %rd10051, %rd9588;
	ld.shared.u32 	%r7485, [%rd9589];
	ld.shared.u32 	%r7486, [%rd9587];
	xor.b32  	%r7487, %r7485, %r7486;
	bfe.u32 	%r7488, %r7469, 8, 8;
	mul.wide.u32 	%rd9590, %r7488, 4;
	add.s64 	%rd9591, %rd10048, %rd9590;
	ld.shared.u32 	%r7489, [%rd9591];
	xor.b32  	%r7490, %r7487, %r7489;
	and.b32  	%r7491, %r7482, 255;
	mul.wide.u32 	%rd9592, %r7491, 4;
	add.s64 	%rd9593, %rd10049, %rd9592;
	ld.shared.u32 	%r7492, [%rd9593];
	xor.b32  	%r7493, %r7490, %r7492;
	ld.local.v4.u32 	{%r7494, %r7495, %r7496, %r7497}, [%rd10060+32];
	xor.b32  	%r7499, %r7493, %r7494;
	shr.u32 	%r7500, %r7456, 24;
	mul.wide.u32 	%rd9594, %r7500, 4;
	add.s64 	%rd9595, %rd10050, %rd9594;
	bfe.u32 	%r7501, %r7469, 16, 8;
	mul.wide.u32 	%rd9596, %r7501, 4;
	add.s64 	%rd9597, %rd10051, %rd9596;
	ld.shared.u32 	%r7502, [%rd9597];
	ld.shared.u32 	%r7503, [%rd9595];
	xor.b32  	%r7504, %r7502, %r7503;
	bfe.u32 	%r7505, %r7482, 8, 8;
	mul.wide.u32 	%rd9598, %r7505, 4;
	add.s64 	%rd9599, %rd10048, %rd9598;
	ld.shared.u32 	%r7506, [%rd9599];
	xor.b32  	%r7507, %r7504, %r7506;
	and.b32  	%r7508, %r7443, 255;
	mul.wide.u32 	%rd9600, %r7508, 4;
	add.s64 	%rd9601, %rd10049, %rd9600;
	ld.shared.u32 	%r7509, [%rd9601];
	xor.b32  	%r7510, %r7507, %r7509;
	xor.b32  	%r7512, %r7510, %r7495;
	shr.u32 	%r7513, %r7469, 24;
	mul.wide.u32 	%rd9602, %r7513, 4;
	add.s64 	%rd9603, %rd10050, %rd9602;
	bfe.u32 	%r7514, %r7482, 16, 8;
	mul.wide.u32 	%rd9604, %r7514, 4;
	add.s64 	%rd9605, %rd10051, %rd9604;
	ld.shared.u32 	%r7515, [%rd9605];
	ld.shared.u32 	%r7516, [%rd9603];
	xor.b32  	%r7517, %r7515, %r7516;
	bfe.u32 	%r7518, %r7443, 8, 8;
	mul.wide.u32 	%rd9606, %r7518, 4;
	add.s64 	%rd9607, %rd10048, %rd9606;
	ld.shared.u32 	%r7519, [%rd9607];
	xor.b32  	%r7520, %r7517, %r7519;
	and.b32  	%r7521, %r7456, 255;
	mul.wide.u32 	%rd9608, %r7521, 4;
	add.s64 	%rd9609, %rd10049, %rd9608;
	ld.shared.u32 	%r7522, [%rd9609];
	xor.b32  	%r7523, %r7520, %r7522;
	xor.b32  	%r7525, %r7523, %r7496;
	shr.u32 	%r7526, %r7482, 24;
	mul.wide.u32 	%rd9610, %r7526, 4;
	add.s64 	%rd9611, %rd10050, %rd9610;
	bfe.u32 	%r7527, %r7443, 16, 8;
	mul.wide.u32 	%rd9612, %r7527, 4;
	add.s64 	%rd9613, %rd10051, %rd9612;
	ld.shared.u32 	%r7528, [%rd9613];
	ld.shared.u32 	%r7529, [%rd9611];
	xor.b32  	%r7530, %r7528, %r7529;
	bfe.u32 	%r7531, %r7456, 8, 8;
	mul.wide.u32 	%rd9614, %r7531, 4;
	add.s64 	%rd9615, %rd10048, %rd9614;
	ld.shared.u32 	%r7532, [%rd9615];
	xor.b32  	%r7533, %r7530, %r7532;
	and.b32  	%r7534, %r7469, 255;
	mul.wide.u32 	%rd9616, %r7534, 4;
	add.s64 	%rd9617, %rd10049, %rd9616;
	ld.shared.u32 	%r7535, [%rd9617];
	xor.b32  	%r7536, %r7533, %r7535;
	xor.b32  	%r7538, %r7536, %r7497;
	shr.u32 	%r7539, %r7499, 24;
	mul.wide.u32 	%rd9618, %r7539, 4;
	add.s64 	%rd9619, %rd10050, %rd9618;
	bfe.u32 	%r7540, %r7512, 16, 8;
	mul.wide.u32 	%rd9620, %r7540, 4;
	add.s64 	%rd9621, %rd10051, %rd9620;
	ld.shared.u32 	%r7541, [%rd9621];
	ld.shared.u32 	%r7542, [%rd9619];
	xor.b32  	%r7543, %r7541, %r7542;
	bfe.u32 	%r7544, %r7525, 8, 8;
	mul.wide.u32 	%rd9622, %r7544, 4;
	add.s64 	%rd9623, %rd10048, %rd9622;
	ld.shared.u32 	%r7545, [%rd9623];
	xor.b32  	%r7546, %r7543, %r7545;
	and.b32  	%r7547, %r7538, 255;
	mul.wide.u32 	%rd9624, %r7547, 4;
	add.s64 	%rd9625, %rd10049, %rd9624;
	ld.shared.u32 	%r7548, [%rd9625];
	xor.b32  	%r7549, %r7546, %r7548;
	ld.local.v4.u32 	{%r7550, %r7551, %r7552, %r7553}, [%rd10060+48];
	xor.b32  	%r7555, %r7549, %r7550;
	shr.u32 	%r7556, %r7512, 24;
	mul.wide.u32 	%rd9626, %r7556, 4;
	add.s64 	%rd9627, %rd10050, %rd9626;
	bfe.u32 	%r7557, %r7525, 16, 8;
	mul.wide.u32 	%rd9628, %r7557, 4;
	add.s64 	%rd9629, %rd10051, %rd9628;
	ld.shared.u32 	%r7558, [%rd9629];
	ld.shared.u32 	%r7559, [%rd9627];
	xor.b32  	%r7560, %r7558, %r7559;
	bfe.u32 	%r7561, %r7538, 8, 8;
	mul.wide.u32 	%rd9630, %r7561, 4;
	add.s64 	%rd9631, %rd10048, %rd9630;
	ld.shared.u32 	%r7562, [%rd9631];
	xor.b32  	%r7563, %r7560, %r7562;
	and.b32  	%r7564, %r7499, 255;
	mul.wide.u32 	%rd9632, %r7564, 4;
	add.s64 	%rd9633, %rd10049, %rd9632;
	ld.shared.u32 	%r7565, [%rd9633];
	xor.b32  	%r7566, %r7563, %r7565;
	xor.b32  	%r7568, %r7566, %r7551;
	shr.u32 	%r7569, %r7525, 24;
	mul.wide.u32 	%rd9634, %r7569, 4;
	add.s64 	%rd9635, %rd10050, %rd9634;
	bfe.u32 	%r7570, %r7538, 16, 8;
	mul.wide.u32 	%rd9636, %r7570, 4;
	add.s64 	%rd9637, %rd10051, %rd9636;
	ld.shared.u32 	%r7571, [%rd9637];
	ld.shared.u32 	%r7572, [%rd9635];
	xor.b32  	%r7573, %r7571, %r7572;
	bfe.u32 	%r7574, %r7499, 8, 8;
	mul.wide.u32 	%rd9638, %r7574, 4;
	add.s64 	%rd9639, %rd10048, %rd9638;
	ld.shared.u32 	%r7575, [%rd9639];
	xor.b32  	%r7576, %r7573, %r7575;
	and.b32  	%r7577, %r7512, 255;
	mul.wide.u32 	%rd9640, %r7577, 4;
	add.s64 	%rd9641, %rd10049, %rd9640;
	ld.shared.u32 	%r7578, [%rd9641];
	xor.b32  	%r7579, %r7576, %r7578;
	xor.b32  	%r7581, %r7579, %r7552;
	shr.u32 	%r7582, %r7538, 24;
	mul.wide.u32 	%rd9642, %r7582, 4;
	add.s64 	%rd9643, %rd10050, %rd9642;
	bfe.u32 	%r7583, %r7499, 16, 8;
	mul.wide.u32 	%rd9644, %r7583, 4;
	add.s64 	%rd9645, %rd10051, %rd9644;
	ld.shared.u32 	%r7584, [%rd9645];
	ld.shared.u32 	%r7585, [%rd9643];
	xor.b32  	%r7586, %r7584, %r7585;
	bfe.u32 	%r7587, %r7512, 8, 8;
	mul.wide.u32 	%rd9646, %r7587, 4;
	add.s64 	%rd9647, %rd10048, %rd9646;
	ld.shared.u32 	%r7588, [%rd9647];
	xor.b32  	%r7589, %r7586, %r7588;
	and.b32  	%r7590, %r7525, 255;
	mul.wide.u32 	%rd9648, %r7590, 4;
	add.s64 	%rd9649, %rd10049, %rd9648;
	ld.shared.u32 	%r7591, [%rd9649];
	xor.b32  	%r7592, %r7589, %r7591;
	xor.b32  	%r7594, %r7592, %r7553;
	shr.u32 	%r7595, %r7555, 24;
	mul.wide.u32 	%rd9650, %r7595, 4;
	add.s64 	%rd9651, %rd10050, %rd9650;
	bfe.u32 	%r7596, %r7568, 16, 8;
	mul.wide.u32 	%rd9652, %r7596, 4;
	add.s64 	%rd9653, %rd10051, %rd9652;
	ld.shared.u32 	%r7597, [%rd9653];
	ld.shared.u32 	%r7598, [%rd9651];
	xor.b32  	%r7599, %r7597, %r7598;
	bfe.u32 	%r7600, %r7581, 8, 8;
	mul.wide.u32 	%rd9654, %r7600, 4;
	add.s64 	%rd9655, %rd10048, %rd9654;
	ld.shared.u32 	%r7601, [%rd9655];
	xor.b32  	%r7602, %r7599, %r7601;
	and.b32  	%r7603, %r7594, 255;
	mul.wide.u32 	%rd9656, %r7603, 4;
	add.s64 	%rd9657, %rd10049, %rd9656;
	ld.shared.u32 	%r7604, [%rd9657];
	xor.b32  	%r7605, %r7602, %r7604;
	ld.local.v4.u32 	{%r7606, %r7607, %r7608, %r7609}, [%rd10060+64];
	xor.b32  	%r7611, %r7605, %r7606;
	shr.u32 	%r7612, %r7568, 24;
	mul.wide.u32 	%rd9658, %r7612, 4;
	add.s64 	%rd9659, %rd10050, %rd9658;
	bfe.u32 	%r7613, %r7581, 16, 8;
	mul.wide.u32 	%rd9660, %r7613, 4;
	add.s64 	%rd9661, %rd10051, %rd9660;
	ld.shared.u32 	%r7614, [%rd9661];
	ld.shared.u32 	%r7615, [%rd9659];
	xor.b32  	%r7616, %r7614, %r7615;
	bfe.u32 	%r7617, %r7594, 8, 8;
	mul.wide.u32 	%rd9662, %r7617, 4;
	add.s64 	%rd9663, %rd10048, %rd9662;
	ld.shared.u32 	%r7618, [%rd9663];
	xor.b32  	%r7619, %r7616, %r7618;
	and.b32  	%r7620, %r7555, 255;
	mul.wide.u32 	%rd9664, %r7620, 4;
	add.s64 	%rd9665, %rd10049, %rd9664;
	ld.shared.u32 	%r7621, [%rd9665];
	xor.b32  	%r7622, %r7619, %r7621;
	xor.b32  	%r7624, %r7622, %r7607;
	shr.u32 	%r7625, %r7581, 24;
	mul.wide.u32 	%rd9666, %r7625, 4;
	add.s64 	%rd9667, %rd10050, %rd9666;
	bfe.u32 	%r7626, %r7594, 16, 8;
	mul.wide.u32 	%rd9668, %r7626, 4;
	add.s64 	%rd9669, %rd10051, %rd9668;
	ld.shared.u32 	%r7627, [%rd9669];
	ld.shared.u32 	%r7628, [%rd9667];
	xor.b32  	%r7629, %r7627, %r7628;
	bfe.u32 	%r7630, %r7555, 8, 8;
	mul.wide.u32 	%rd9670, %r7630, 4;
	add.s64 	%rd9671, %rd10048, %rd9670;
	ld.shared.u32 	%r7631, [%rd9671];
	xor.b32  	%r7632, %r7629, %r7631;
	and.b32  	%r7633, %r7568, 255;
	mul.wide.u32 	%rd9672, %r7633, 4;
	add.s64 	%rd9673, %rd10049, %rd9672;
	ld.shared.u32 	%r7634, [%rd9673];
	xor.b32  	%r7635, %r7632, %r7634;
	xor.b32  	%r7637, %r7635, %r7608;
	shr.u32 	%r7638, %r7594, 24;
	mul.wide.u32 	%rd9674, %r7638, 4;
	add.s64 	%rd9675, %rd10050, %rd9674;
	bfe.u32 	%r7639, %r7555, 16, 8;
	mul.wide.u32 	%rd9676, %r7639, 4;
	add.s64 	%rd9677, %rd10051, %rd9676;
	ld.shared.u32 	%r7640, [%rd9677];
	ld.shared.u32 	%r7641, [%rd9675];
	xor.b32  	%r7642, %r7640, %r7641;
	bfe.u32 	%r7643, %r7568, 8, 8;
	mul.wide.u32 	%rd9678, %r7643, 4;
	add.s64 	%rd9679, %rd10048, %rd9678;
	ld.shared.u32 	%r7644, [%rd9679];
	xor.b32  	%r7645, %r7642, %r7644;
	and.b32  	%r7646, %r7581, 255;
	mul.wide.u32 	%rd9680, %r7646, 4;
	add.s64 	%rd9681, %rd10049, %rd9680;
	ld.shared.u32 	%r7647, [%rd9681];
	xor.b32  	%r7648, %r7645, %r7647;
	xor.b32  	%r7650, %r7648, %r7609;
	shr.u32 	%r7651, %r7611, 24;
	mul.wide.u32 	%rd9682, %r7651, 4;
	add.s64 	%rd9683, %rd10050, %rd9682;
	bfe.u32 	%r7652, %r7624, 16, 8;
	mul.wide.u32 	%rd9684, %r7652, 4;
	add.s64 	%rd9685, %rd10051, %rd9684;
	ld.shared.u32 	%r7653, [%rd9685];
	ld.shared.u32 	%r7654, [%rd9683];
	xor.b32  	%r7655, %r7653, %r7654;
	bfe.u32 	%r7656, %r7637, 8, 8;
	mul.wide.u32 	%rd9686, %r7656, 4;
	add.s64 	%rd9687, %rd10048, %rd9686;
	ld.shared.u32 	%r7657, [%rd9687];
	xor.b32  	%r7658, %r7655, %r7657;
	and.b32  	%r7659, %r7650, 255;
	mul.wide.u32 	%rd9688, %r7659, 4;
	add.s64 	%rd9689, %rd10049, %rd9688;
	ld.shared.u32 	%r7660, [%rd9689];
	xor.b32  	%r7661, %r7658, %r7660;
	ld.local.v4.u32 	{%r7662, %r7663, %r7664, %r7665}, [%rd10060+80];
	xor.b32  	%r7667, %r7661, %r7662;
	shr.u32 	%r7668, %r7624, 24;
	mul.wide.u32 	%rd9690, %r7668, 4;
	add.s64 	%rd9691, %rd10050, %rd9690;
	bfe.u32 	%r7669, %r7637, 16, 8;
	mul.wide.u32 	%rd9692, %r7669, 4;
	add.s64 	%rd9693, %rd10051, %rd9692;
	ld.shared.u32 	%r7670, [%rd9693];
	ld.shared.u32 	%r7671, [%rd9691];
	xor.b32  	%r7672, %r7670, %r7671;
	bfe.u32 	%r7673, %r7650, 8, 8;
	mul.wide.u32 	%rd9694, %r7673, 4;
	add.s64 	%rd9695, %rd10048, %rd9694;
	ld.shared.u32 	%r7674, [%rd9695];
	xor.b32  	%r7675, %r7672, %r7674;
	and.b32  	%r7676, %r7611, 255;
	mul.wide.u32 	%rd9696, %r7676, 4;
	add.s64 	%rd9697, %rd10049, %rd9696;
	ld.shared.u32 	%r7677, [%rd9697];
	xor.b32  	%r7678, %r7675, %r7677;
	xor.b32  	%r7680, %r7678, %r7663;
	shr.u32 	%r7681, %r7637, 24;
	mul.wide.u32 	%rd9698, %r7681, 4;
	add.s64 	%rd9699, %rd10050, %rd9698;
	bfe.u32 	%r7682, %r7650, 16, 8;
	mul.wide.u32 	%rd9700, %r7682, 4;
	add.s64 	%rd9701, %rd10051, %rd9700;
	ld.shared.u32 	%r7683, [%rd9701];
	ld.shared.u32 	%r7684, [%rd9699];
	xor.b32  	%r7685, %r7683, %r7684;
	bfe.u32 	%r7686, %r7611, 8, 8;
	mul.wide.u32 	%rd9702, %r7686, 4;
	add.s64 	%rd9703, %rd10048, %rd9702;
	ld.shared.u32 	%r7687, [%rd9703];
	xor.b32  	%r7688, %r7685, %r7687;
	and.b32  	%r7689, %r7624, 255;
	mul.wide.u32 	%rd9704, %r7689, 4;
	add.s64 	%rd9705, %rd10049, %rd9704;
	ld.shared.u32 	%r7690, [%rd9705];
	xor.b32  	%r7691, %r7688, %r7690;
	xor.b32  	%r7693, %r7691, %r7664;
	shr.u32 	%r7694, %r7650, 24;
	mul.wide.u32 	%rd9706, %r7694, 4;
	add.s64 	%rd9707, %rd10050, %rd9706;
	bfe.u32 	%r7695, %r7611, 16, 8;
	mul.wide.u32 	%rd9708, %r7695, 4;
	add.s64 	%rd9709, %rd10051, %rd9708;
	ld.shared.u32 	%r7696, [%rd9709];
	ld.shared.u32 	%r7697, [%rd9707];
	xor.b32  	%r7698, %r7696, %r7697;
	bfe.u32 	%r7699, %r7624, 8, 8;
	mul.wide.u32 	%rd9710, %r7699, 4;
	add.s64 	%rd9711, %rd10048, %rd9710;
	ld.shared.u32 	%r7700, [%rd9711];
	xor.b32  	%r7701, %r7698, %r7700;
	and.b32  	%r7702, %r7637, 255;
	mul.wide.u32 	%rd9712, %r7702, 4;
	add.s64 	%rd9713, %rd10049, %rd9712;
	ld.shared.u32 	%r7703, [%rd9713];
	xor.b32  	%r7704, %r7701, %r7703;
	xor.b32  	%r7706, %r7704, %r7665;
	shr.u32 	%r7707, %r7667, 24;
	mul.wide.u32 	%rd9714, %r7707, 4;
	add.s64 	%rd9715, %rd10050, %rd9714;
	bfe.u32 	%r7708, %r7680, 16, 8;
	mul.wide.u32 	%rd9716, %r7708, 4;
	add.s64 	%rd9717, %rd10051, %rd9716;
	ld.shared.u32 	%r7709, [%rd9717];
	ld.shared.u32 	%r7710, [%rd9715];
	xor.b32  	%r7711, %r7709, %r7710;
	bfe.u32 	%r7712, %r7693, 8, 8;
	mul.wide.u32 	%rd9718, %r7712, 4;
	add.s64 	%rd9719, %rd10048, %rd9718;
	ld.shared.u32 	%r7713, [%rd9719];
	xor.b32  	%r7714, %r7711, %r7713;
	and.b32  	%r7715, %r7706, 255;
	mul.wide.u32 	%rd9720, %r7715, 4;
	add.s64 	%rd9721, %rd10049, %rd9720;
	ld.shared.u32 	%r7716, [%rd9721];
	xor.b32  	%r7717, %r7714, %r7716;
	ld.local.v4.u32 	{%r7718, %r7719, %r7720, %r7721}, [%rd10060+96];
	xor.b32  	%r7723, %r7717, %r7718;
	shr.u32 	%r7724, %r7680, 24;
	mul.wide.u32 	%rd9722, %r7724, 4;
	add.s64 	%rd9723, %rd10050, %rd9722;
	bfe.u32 	%r7725, %r7693, 16, 8;
	mul.wide.u32 	%rd9724, %r7725, 4;
	add.s64 	%rd9725, %rd10051, %rd9724;
	ld.shared.u32 	%r7726, [%rd9725];
	ld.shared.u32 	%r7727, [%rd9723];
	xor.b32  	%r7728, %r7726, %r7727;
	bfe.u32 	%r7729, %r7706, 8, 8;
	mul.wide.u32 	%rd9726, %r7729, 4;
	add.s64 	%rd9727, %rd10048, %rd9726;
	ld.shared.u32 	%r7730, [%rd9727];
	xor.b32  	%r7731, %r7728, %r7730;
	and.b32  	%r7732, %r7667, 255;
	mul.wide.u32 	%rd9728, %r7732, 4;
	add.s64 	%rd9729, %rd10049, %rd9728;
	ld.shared.u32 	%r7733, [%rd9729];
	xor.b32  	%r7734, %r7731, %r7733;
	xor.b32  	%r7736, %r7734, %r7719;
	shr.u32 	%r7737, %r7693, 24;
	mul.wide.u32 	%rd9730, %r7737, 4;
	add.s64 	%rd9731, %rd10050, %rd9730;
	bfe.u32 	%r7738, %r7706, 16, 8;
	mul.wide.u32 	%rd9732, %r7738, 4;
	add.s64 	%rd9733, %rd10051, %rd9732;
	ld.shared.u32 	%r7739, [%rd9733];
	ld.shared.u32 	%r7740, [%rd9731];
	xor.b32  	%r7741, %r7739, %r7740;
	bfe.u32 	%r7742, %r7667, 8, 8;
	mul.wide.u32 	%rd9734, %r7742, 4;
	add.s64 	%rd9735, %rd10048, %rd9734;
	ld.shared.u32 	%r7743, [%rd9735];
	xor.b32  	%r7744, %r7741, %r7743;
	and.b32  	%r7745, %r7680, 255;
	mul.wide.u32 	%rd9736, %r7745, 4;
	add.s64 	%rd9737, %rd10049, %rd9736;
	ld.shared.u32 	%r7746, [%rd9737];
	xor.b32  	%r7747, %r7744, %r7746;
	xor.b32  	%r7749, %r7747, %r7720;
	shr.u32 	%r7750, %r7706, 24;
	mul.wide.u32 	%rd9738, %r7750, 4;
	add.s64 	%rd9739, %rd10050, %rd9738;
	bfe.u32 	%r7751, %r7667, 16, 8;
	mul.wide.u32 	%rd9740, %r7751, 4;
	add.s64 	%rd9741, %rd10051, %rd9740;
	ld.shared.u32 	%r7752, [%rd9741];
	ld.shared.u32 	%r7753, [%rd9739];
	xor.b32  	%r7754, %r7752, %r7753;
	bfe.u32 	%r7755, %r7680, 8, 8;
	mul.wide.u32 	%rd9742, %r7755, 4;
	add.s64 	%rd9743, %rd10048, %rd9742;
	ld.shared.u32 	%r7756, [%rd9743];
	xor.b32  	%r7757, %r7754, %r7756;
	and.b32  	%r7758, %r7693, 255;
	mul.wide.u32 	%rd9744, %r7758, 4;
	add.s64 	%rd9745, %rd10049, %rd9744;
	ld.shared.u32 	%r7759, [%rd9745];
	xor.b32  	%r7760, %r7757, %r7759;
	xor.b32  	%r7762, %r7760, %r7721;
	shr.u32 	%r7763, %r7723, 24;
	mul.wide.u32 	%rd9746, %r7763, 4;
	add.s64 	%rd9747, %rd10050, %rd9746;
	bfe.u32 	%r7764, %r7736, 16, 8;
	mul.wide.u32 	%rd9748, %r7764, 4;
	add.s64 	%rd9749, %rd10051, %rd9748;
	ld.shared.u32 	%r7765, [%rd9749];
	ld.shared.u32 	%r7766, [%rd9747];
	xor.b32  	%r7767, %r7765, %r7766;
	bfe.u32 	%r7768, %r7749, 8, 8;
	mul.wide.u32 	%rd9750, %r7768, 4;
	add.s64 	%rd9751, %rd10048, %rd9750;
	ld.shared.u32 	%r7769, [%rd9751];
	xor.b32  	%r7770, %r7767, %r7769;
	and.b32  	%r7771, %r7762, 255;
	mul.wide.u32 	%rd9752, %r7771, 4;
	add.s64 	%rd9753, %rd10049, %rd9752;
	ld.shared.u32 	%r7772, [%rd9753];
	xor.b32  	%r7773, %r7770, %r7772;
	ld.local.v4.u32 	{%r7774, %r7775, %r7776, %r7777}, [%rd10060+112];
	xor.b32  	%r7779, %r7773, %r7774;
	shr.u32 	%r7780, %r7736, 24;
	mul.wide.u32 	%rd9754, %r7780, 4;
	add.s64 	%rd9755, %rd10050, %rd9754;
	bfe.u32 	%r7781, %r7749, 16, 8;
	mul.wide.u32 	%rd9756, %r7781, 4;
	add.s64 	%rd9757, %rd10051, %rd9756;
	ld.shared.u32 	%r7782, [%rd9757];
	ld.shared.u32 	%r7783, [%rd9755];
	xor.b32  	%r7784, %r7782, %r7783;
	bfe.u32 	%r7785, %r7762, 8, 8;
	mul.wide.u32 	%rd9758, %r7785, 4;
	add.s64 	%rd9759, %rd10048, %rd9758;
	ld.shared.u32 	%r7786, [%rd9759];
	xor.b32  	%r7787, %r7784, %r7786;
	and.b32  	%r7788, %r7723, 255;
	mul.wide.u32 	%rd9760, %r7788, 4;
	add.s64 	%rd9761, %rd10049, %rd9760;
	ld.shared.u32 	%r7789, [%rd9761];
	xor.b32  	%r7790, %r7787, %r7789;
	xor.b32  	%r7792, %r7790, %r7775;
	shr.u32 	%r7793, %r7749, 24;
	mul.wide.u32 	%rd9762, %r7793, 4;
	add.s64 	%rd9763, %rd10050, %rd9762;
	bfe.u32 	%r7794, %r7762, 16, 8;
	mul.wide.u32 	%rd9764, %r7794, 4;
	add.s64 	%rd9765, %rd10051, %rd9764;
	ld.shared.u32 	%r7795, [%rd9765];
	ld.shared.u32 	%r7796, [%rd9763];
	xor.b32  	%r7797, %r7795, %r7796;
	bfe.u32 	%r7798, %r7723, 8, 8;
	mul.wide.u32 	%rd9766, %r7798, 4;
	add.s64 	%rd9767, %rd10048, %rd9766;
	ld.shared.u32 	%r7799, [%rd9767];
	xor.b32  	%r7800, %r7797, %r7799;
	and.b32  	%r7801, %r7736, 255;
	mul.wide.u32 	%rd9768, %r7801, 4;
	add.s64 	%rd9769, %rd10049, %rd9768;
	ld.shared.u32 	%r7802, [%rd9769];
	xor.b32  	%r7803, %r7800, %r7802;
	xor.b32  	%r7805, %r7803, %r7776;
	shr.u32 	%r7806, %r7762, 24;
	mul.wide.u32 	%rd9770, %r7806, 4;
	add.s64 	%rd9771, %rd10050, %rd9770;
	bfe.u32 	%r7807, %r7723, 16, 8;
	mul.wide.u32 	%rd9772, %r7807, 4;
	add.s64 	%rd9773, %rd10051, %rd9772;
	ld.shared.u32 	%r7808, [%rd9773];
	ld.shared.u32 	%r7809, [%rd9771];
	xor.b32  	%r7810, %r7808, %r7809;
	bfe.u32 	%r7811, %r7736, 8, 8;
	mul.wide.u32 	%rd9774, %r7811, 4;
	add.s64 	%rd9775, %rd10048, %rd9774;
	ld.shared.u32 	%r7812, [%rd9775];
	xor.b32  	%r7813, %r7810, %r7812;
	and.b32  	%r7814, %r7749, 255;
	mul.wide.u32 	%rd9776, %r7814, 4;
	add.s64 	%rd9777, %rd10049, %rd9776;
	ld.shared.u32 	%r7815, [%rd9777];
	xor.b32  	%r7816, %r7813, %r7815;
	xor.b32  	%r7818, %r7816, %r7777;
	shr.u32 	%r7819, %r7779, 24;
	mul.wide.u32 	%rd9778, %r7819, 4;
	add.s64 	%rd9779, %rd10050, %rd9778;
	bfe.u32 	%r7820, %r7792, 16, 8;
	mul.wide.u32 	%rd9780, %r7820, 4;
	add.s64 	%rd9781, %rd10051, %rd9780;
	ld.shared.u32 	%r7821, [%rd9781];
	ld.shared.u32 	%r7822, [%rd9779];
	xor.b32  	%r7823, %r7821, %r7822;
	bfe.u32 	%r7824, %r7805, 8, 8;
	mul.wide.u32 	%rd9782, %r7824, 4;
	add.s64 	%rd9783, %rd10048, %rd9782;
	ld.shared.u32 	%r7825, [%rd9783];
	xor.b32  	%r7826, %r7823, %r7825;
	and.b32  	%r7827, %r7818, 255;
	mul.wide.u32 	%rd9784, %r7827, 4;
	add.s64 	%rd9785, %rd10049, %rd9784;
	ld.shared.u32 	%r7828, [%rd9785];
	xor.b32  	%r7829, %r7826, %r7828;
	ld.local.v4.u32 	{%r7830, %r7831, %r7832, %r7833}, [%rd10060+128];
	xor.b32  	%r7835, %r7829, %r7830;
	shr.u32 	%r7836, %r7792, 24;
	mul.wide.u32 	%rd9786, %r7836, 4;
	add.s64 	%rd9787, %rd10050, %rd9786;
	bfe.u32 	%r7837, %r7805, 16, 8;
	mul.wide.u32 	%rd9788, %r7837, 4;
	add.s64 	%rd9789, %rd10051, %rd9788;
	ld.shared.u32 	%r7838, [%rd9789];
	ld.shared.u32 	%r7839, [%rd9787];
	xor.b32  	%r7840, %r7838, %r7839;
	bfe.u32 	%r7841, %r7818, 8, 8;
	mul.wide.u32 	%rd9790, %r7841, 4;
	add.s64 	%rd9791, %rd10048, %rd9790;
	ld.shared.u32 	%r7842, [%rd9791];
	xor.b32  	%r7843, %r7840, %r7842;
	and.b32  	%r7844, %r7779, 255;
	mul.wide.u32 	%rd9792, %r7844, 4;
	add.s64 	%rd9793, %rd10049, %rd9792;
	ld.shared.u32 	%r7845, [%rd9793];
	xor.b32  	%r7846, %r7843, %r7845;
	xor.b32  	%r7848, %r7846, %r7831;
	shr.u32 	%r7849, %r7805, 24;
	mul.wide.u32 	%rd9794, %r7849, 4;
	add.s64 	%rd9795, %rd10050, %rd9794;
	bfe.u32 	%r7850, %r7818, 16, 8;
	mul.wide.u32 	%rd9796, %r7850, 4;
	add.s64 	%rd9797, %rd10051, %rd9796;
	ld.shared.u32 	%r7851, [%rd9797];
	ld.shared.u32 	%r7852, [%rd9795];
	xor.b32  	%r7853, %r7851, %r7852;
	bfe.u32 	%r7854, %r7779, 8, 8;
	mul.wide.u32 	%rd9798, %r7854, 4;
	add.s64 	%rd9799, %rd10048, %rd9798;
	ld.shared.u32 	%r7855, [%rd9799];
	xor.b32  	%r7856, %r7853, %r7855;
	and.b32  	%r7857, %r7792, 255;
	mul.wide.u32 	%rd9800, %r7857, 4;
	add.s64 	%rd9801, %rd10049, %rd9800;
	ld.shared.u32 	%r7858, [%rd9801];
	xor.b32  	%r7859, %r7856, %r7858;
	xor.b32  	%r7861, %r7859, %r7832;
	shr.u32 	%r7862, %r7818, 24;
	mul.wide.u32 	%rd9802, %r7862, 4;
	add.s64 	%rd9803, %rd10050, %rd9802;
	bfe.u32 	%r7863, %r7779, 16, 8;
	mul.wide.u32 	%rd9804, %r7863, 4;
	add.s64 	%rd9805, %rd10051, %rd9804;
	ld.shared.u32 	%r7864, [%rd9805];
	ld.shared.u32 	%r7865, [%rd9803];
	xor.b32  	%r7866, %r7864, %r7865;
	bfe.u32 	%r7867, %r7792, 8, 8;
	mul.wide.u32 	%rd9806, %r7867, 4;
	add.s64 	%rd9807, %rd10048, %rd9806;
	ld.shared.u32 	%r7868, [%rd9807];
	xor.b32  	%r7869, %r7866, %r7868;
	and.b32  	%r7870, %r7805, 255;
	mul.wide.u32 	%rd9808, %r7870, 4;
	add.s64 	%rd9809, %rd10049, %rd9808;
	ld.shared.u32 	%r7871, [%rd9809];
	xor.b32  	%r7872, %r7869, %r7871;
	xor.b32  	%r7874, %r7872, %r7833;
	shr.u32 	%r7875, %r7835, 24;
	mul.wide.u32 	%rd9810, %r7875, 4;
	add.s64 	%rd9811, %rd10050, %rd9810;
	bfe.u32 	%r7876, %r7848, 16, 8;
	mul.wide.u32 	%rd9812, %r7876, 4;
	add.s64 	%rd9813, %rd10051, %rd9812;
	ld.shared.u32 	%r7877, [%rd9813];
	ld.shared.u32 	%r7878, [%rd9811];
	xor.b32  	%r7879, %r7877, %r7878;
	bfe.u32 	%r7880, %r7861, 8, 8;
	mul.wide.u32 	%rd9814, %r7880, 4;
	add.s64 	%rd9815, %rd10048, %rd9814;
	ld.shared.u32 	%r7881, [%rd9815];
	xor.b32  	%r7882, %r7879, %r7881;
	and.b32  	%r7883, %r7874, 255;
	mul.wide.u32 	%rd9816, %r7883, 4;
	add.s64 	%rd9817, %rd10049, %rd9816;
	ld.shared.u32 	%r7884, [%rd9817];
	xor.b32  	%r7885, %r7882, %r7884;
	ld.local.v4.u32 	{%r7886, %r7887, %r7888, %r7889}, [%rd10060+144];
	xor.b32  	%r7891, %r7885, %r7886;
	shr.u32 	%r7892, %r7848, 24;
	mul.wide.u32 	%rd9818, %r7892, 4;
	add.s64 	%rd9819, %rd10050, %rd9818;
	bfe.u32 	%r7893, %r7861, 16, 8;
	mul.wide.u32 	%rd9820, %r7893, 4;
	add.s64 	%rd9821, %rd10051, %rd9820;
	ld.shared.u32 	%r7894, [%rd9821];
	ld.shared.u32 	%r7895, [%rd9819];
	xor.b32  	%r7896, %r7894, %r7895;
	bfe.u32 	%r7897, %r7874, 8, 8;
	mul.wide.u32 	%rd9822, %r7897, 4;
	add.s64 	%rd9823, %rd10048, %rd9822;
	ld.shared.u32 	%r7898, [%rd9823];
	xor.b32  	%r7899, %r7896, %r7898;
	and.b32  	%r7900, %r7835, 255;
	mul.wide.u32 	%rd9824, %r7900, 4;
	add.s64 	%rd9825, %rd10049, %rd9824;
	ld.shared.u32 	%r7901, [%rd9825];
	xor.b32  	%r7902, %r7899, %r7901;
	xor.b32  	%r7904, %r7902, %r7887;
	shr.u32 	%r7905, %r7861, 24;
	mul.wide.u32 	%rd9826, %r7905, 4;
	add.s64 	%rd9827, %rd10050, %rd9826;
	bfe.u32 	%r7906, %r7874, 16, 8;
	mul.wide.u32 	%rd9828, %r7906, 4;
	add.s64 	%rd9829, %rd10051, %rd9828;
	ld.shared.u32 	%r7907, [%rd9829];
	ld.shared.u32 	%r7908, [%rd9827];
	xor.b32  	%r7909, %r7907, %r7908;
	bfe.u32 	%r7910, %r7835, 8, 8;
	mul.wide.u32 	%rd9830, %r7910, 4;
	add.s64 	%rd9831, %rd10048, %rd9830;
	ld.shared.u32 	%r7911, [%rd9831];
	xor.b32  	%r7912, %r7909, %r7911;
	and.b32  	%r7913, %r7848, 255;
	mul.wide.u32 	%rd9832, %r7913, 4;
	add.s64 	%rd9833, %rd10049, %rd9832;
	ld.shared.u32 	%r7914, [%rd9833];
	xor.b32  	%r7915, %r7912, %r7914;
	xor.b32  	%r7917, %r7915, %r7888;
	shr.u32 	%r7918, %r7874, 24;
	mul.wide.u32 	%rd9834, %r7918, 4;
	add.s64 	%rd9835, %rd10050, %rd9834;
	bfe.u32 	%r7919, %r7835, 16, 8;
	mul.wide.u32 	%rd9836, %r7919, 4;
	add.s64 	%rd9837, %rd10051, %rd9836;
	ld.shared.u32 	%r7920, [%rd9837];
	ld.shared.u32 	%r7921, [%rd9835];
	xor.b32  	%r7922, %r7920, %r7921;
	bfe.u32 	%r7923, %r7848, 8, 8;
	mul.wide.u32 	%rd9838, %r7923, 4;
	add.s64 	%rd9839, %rd10048, %rd9838;
	ld.shared.u32 	%r7924, [%rd9839];
	xor.b32  	%r7925, %r7922, %r7924;
	and.b32  	%r7926, %r7861, 255;
	mul.wide.u32 	%rd9840, %r7926, 4;
	add.s64 	%rd9841, %rd10049, %rd9840;
	ld.shared.u32 	%r7927, [%rd9841];
	xor.b32  	%r7928, %r7925, %r7927;
	xor.b32  	%r7930, %r7928, %r7889;
	shr.u32 	%r7931, %r7891, 24;
	mul.wide.u32 	%rd9842, %r7931, 4;
	add.s64 	%rd9843, %rd10050, %rd9842;
	bfe.u32 	%r7932, %r7904, 16, 8;
	mul.wide.u32 	%rd9844, %r7932, 4;
	add.s64 	%rd9845, %rd10051, %rd9844;
	ld.shared.u32 	%r7933, [%rd9845];
	ld.shared.u32 	%r7934, [%rd9843];
	xor.b32  	%r7935, %r7933, %r7934;
	bfe.u32 	%r7936, %r7917, 8, 8;
	mul.wide.u32 	%rd9846, %r7936, 4;
	add.s64 	%rd9847, %rd10048, %rd9846;
	ld.shared.u32 	%r7937, [%rd9847];
	xor.b32  	%r7938, %r7935, %r7937;
	and.b32  	%r7939, %r7930, 255;
	mul.wide.u32 	%rd9848, %r7939, 4;
	add.s64 	%rd9849, %rd10049, %rd9848;
	ld.shared.u32 	%r7940, [%rd9849];
	xor.b32  	%r7941, %r7938, %r7940;
	ld.local.v4.u32 	{%r7942, %r7943, %r7944, %r7945}, [%rd10060+160];
	xor.b32  	%r7947, %r7941, %r7942;
	shr.u32 	%r7948, %r7904, 24;
	mul.wide.u32 	%rd9850, %r7948, 4;
	add.s64 	%rd9851, %rd10050, %rd9850;
	bfe.u32 	%r7949, %r7917, 16, 8;
	mul.wide.u32 	%rd9852, %r7949, 4;
	add.s64 	%rd9853, %rd10051, %rd9852;
	ld.shared.u32 	%r7950, [%rd9853];
	ld.shared.u32 	%r7951, [%rd9851];
	xor.b32  	%r7952, %r7950, %r7951;
	bfe.u32 	%r7953, %r7930, 8, 8;
	mul.wide.u32 	%rd9854, %r7953, 4;
	add.s64 	%rd9855, %rd10048, %rd9854;
	ld.shared.u32 	%r7954, [%rd9855];
	xor.b32  	%r7955, %r7952, %r7954;
	and.b32  	%r7956, %r7891, 255;
	mul.wide.u32 	%rd9856, %r7956, 4;
	add.s64 	%rd9857, %rd10049, %rd9856;
	ld.shared.u32 	%r7957, [%rd9857];
	xor.b32  	%r7958, %r7955, %r7957;
	xor.b32  	%r7960, %r7958, %r7943;
	shr.u32 	%r7961, %r7917, 24;
	mul.wide.u32 	%rd9858, %r7961, 4;
	add.s64 	%rd9859, %rd10050, %rd9858;
	bfe.u32 	%r7962, %r7930, 16, 8;
	mul.wide.u32 	%rd9860, %r7962, 4;
	add.s64 	%rd9861, %rd10051, %rd9860;
	ld.shared.u32 	%r7963, [%rd9861];
	ld.shared.u32 	%r7964, [%rd9859];
	xor.b32  	%r7965, %r7963, %r7964;
	bfe.u32 	%r7966, %r7891, 8, 8;
	mul.wide.u32 	%rd9862, %r7966, 4;
	add.s64 	%rd9863, %rd10048, %rd9862;
	ld.shared.u32 	%r7967, [%rd9863];
	xor.b32  	%r7968, %r7965, %r7967;
	and.b32  	%r7969, %r7904, 255;
	mul.wide.u32 	%rd9864, %r7969, 4;
	add.s64 	%rd9865, %rd10049, %rd9864;
	ld.shared.u32 	%r7970, [%rd9865];
	xor.b32  	%r7971, %r7968, %r7970;
	xor.b32  	%r7973, %r7971, %r7944;
	shr.u32 	%r7974, %r7930, 24;
	mul.wide.u32 	%rd9866, %r7974, 4;
	add.s64 	%rd9867, %rd10050, %rd9866;
	bfe.u32 	%r7975, %r7891, 16, 8;
	mul.wide.u32 	%rd9868, %r7975, 4;
	add.s64 	%rd9869, %rd10051, %rd9868;
	ld.shared.u32 	%r7976, [%rd9869];
	ld.shared.u32 	%r7977, [%rd9867];
	xor.b32  	%r7978, %r7976, %r7977;
	bfe.u32 	%r7979, %r7904, 8, 8;
	mul.wide.u32 	%rd9870, %r7979, 4;
	add.s64 	%rd9871, %rd10048, %rd9870;
	ld.shared.u32 	%r7980, [%rd9871];
	xor.b32  	%r7981, %r7978, %r7980;
	and.b32  	%r7982, %r7917, 255;
	mul.wide.u32 	%rd9872, %r7982, 4;
	add.s64 	%rd9873, %rd10049, %rd9872;
	ld.shared.u32 	%r7983, [%rd9873];
	xor.b32  	%r7984, %r7981, %r7983;
	xor.b32  	%r7986, %r7984, %r7945;
	shr.u32 	%r7987, %r7947, 24;
	mul.wide.u32 	%rd9874, %r7987, 4;
	add.s64 	%rd9875, %rd10050, %rd9874;
	bfe.u32 	%r7988, %r7960, 16, 8;
	mul.wide.u32 	%rd9876, %r7988, 4;
	add.s64 	%rd9877, %rd10051, %rd9876;
	ld.shared.u32 	%r7989, [%rd9877];
	ld.shared.u32 	%r7990, [%rd9875];
	xor.b32  	%r7991, %r7989, %r7990;
	bfe.u32 	%r7992, %r7973, 8, 8;
	mul.wide.u32 	%rd9878, %r7992, 4;
	add.s64 	%rd9879, %rd10048, %rd9878;
	ld.shared.u32 	%r7993, [%rd9879];
	xor.b32  	%r7994, %r7991, %r7993;
	and.b32  	%r7995, %r7986, 255;
	mul.wide.u32 	%rd9880, %r7995, 4;
	add.s64 	%rd9881, %rd10049, %rd9880;
	ld.shared.u32 	%r7996, [%rd9881];
	xor.b32  	%r7997, %r7994, %r7996;
	ld.local.v4.u32 	{%r7998, %r7999, %r8000, %r8001}, [%rd10060+176];
	xor.b32  	%r8003, %r7997, %r7998;
	shr.u32 	%r8004, %r7960, 24;
	mul.wide.u32 	%rd9882, %r8004, 4;
	add.s64 	%rd9883, %rd10050, %rd9882;
	bfe.u32 	%r8005, %r7973, 16, 8;
	mul.wide.u32 	%rd9884, %r8005, 4;
	add.s64 	%rd9885, %rd10051, %rd9884;
	ld.shared.u32 	%r8006, [%rd9885];
	ld.shared.u32 	%r8007, [%rd9883];
	xor.b32  	%r8008, %r8006, %r8007;
	bfe.u32 	%r8009, %r7986, 8, 8;
	mul.wide.u32 	%rd9886, %r8009, 4;
	add.s64 	%rd9887, %rd10048, %rd9886;
	ld.shared.u32 	%r8010, [%rd9887];
	xor.b32  	%r8011, %r8008, %r8010;
	and.b32  	%r8012, %r7947, 255;
	mul.wide.u32 	%rd9888, %r8012, 4;
	add.s64 	%rd9889, %rd10049, %rd9888;
	ld.shared.u32 	%r8013, [%rd9889];
	xor.b32  	%r8014, %r8011, %r8013;
	xor.b32  	%r8016, %r8014, %r7999;
	shr.u32 	%r8017, %r7973, 24;
	mul.wide.u32 	%rd9890, %r8017, 4;
	add.s64 	%rd9891, %rd10050, %rd9890;
	bfe.u32 	%r8018, %r7986, 16, 8;
	mul.wide.u32 	%rd9892, %r8018, 4;
	add.s64 	%rd9893, %rd10051, %rd9892;
	ld.shared.u32 	%r8019, [%rd9893];
	ld.shared.u32 	%r8020, [%rd9891];
	xor.b32  	%r8021, %r8019, %r8020;
	bfe.u32 	%r8022, %r7947, 8, 8;
	mul.wide.u32 	%rd9894, %r8022, 4;
	add.s64 	%rd9895, %rd10048, %rd9894;
	ld.shared.u32 	%r8023, [%rd9895];
	xor.b32  	%r8024, %r8021, %r8023;
	and.b32  	%r8025, %r7960, 255;
	mul.wide.u32 	%rd9896, %r8025, 4;
	add.s64 	%rd9897, %rd10049, %rd9896;
	ld.shared.u32 	%r8026, [%rd9897];
	xor.b32  	%r8027, %r8024, %r8026;
	xor.b32  	%r8029, %r8027, %r8000;
	shr.u32 	%r8030, %r7986, 24;
	mul.wide.u32 	%rd9898, %r8030, 4;
	add.s64 	%rd9899, %rd10050, %rd9898;
	bfe.u32 	%r8031, %r7947, 16, 8;
	mul.wide.u32 	%rd9900, %r8031, 4;
	add.s64 	%rd9901, %rd10051, %rd9900;
	ld.shared.u32 	%r8032, [%rd9901];
	ld.shared.u32 	%r8033, [%rd9899];
	xor.b32  	%r8034, %r8032, %r8033;
	bfe.u32 	%r8035, %r7960, 8, 8;
	mul.wide.u32 	%rd9902, %r8035, 4;
	add.s64 	%rd9903, %rd10048, %rd9902;
	ld.shared.u32 	%r8036, [%rd9903];
	xor.b32  	%r8037, %r8034, %r8036;
	and.b32  	%r8038, %r7973, 255;
	mul.wide.u32 	%rd9904, %r8038, 4;
	add.s64 	%rd9905, %rd10049, %rd9904;
	ld.shared.u32 	%r8039, [%rd9905];
	xor.b32  	%r8040, %r8037, %r8039;
	xor.b32  	%r8042, %r8040, %r8001;
	shr.u32 	%r8043, %r8003, 24;
	mul.wide.u32 	%rd9906, %r8043, 4;
	mov.u64 	%rd9907, m09600_comp$s_te4;
	add.s64 	%rd9908, %rd9907, %rd9906;
	ld.shared.u32 	%r8044, [%rd9908];
	and.b32  	%r8045, %r8044, -16777216;
	bfe.u32 	%r8046, %r8016, 16, 8;
	mul.wide.u32 	%rd9909, %r8046, 4;
	add.s64 	%rd9910, %rd9907, %rd9909;
	ld.shared.u32 	%r8047, [%rd9910];
	and.b32  	%r8048, %r8047, 16711680;
	or.b32  	%r8049, %r8048, %r8045;
	bfe.u32 	%r8050, %r8029, 8, 8;
	mul.wide.u32 	%rd9911, %r8050, 4;
	add.s64 	%rd9912, %rd9907, %rd9911;
	ld.shared.u32 	%r8051, [%rd9912];
	and.b32  	%r8052, %r8051, 65280;
	or.b32  	%r8053, %r8049, %r8052;
	and.b32  	%r8054, %r8042, 255;
	mul.wide.u32 	%rd9913, %r8054, 4;
	add.s64 	%rd9914, %rd9907, %rd9913;
	ld.shared.u8 	%r8055, [%rd9914];
	or.b32  	%r8056, %r8053, %r8055;
	ld.local.v4.u32 	{%r8057, %r8058, %r8059, %r8060}, [%rd10060+192];
	xor.b32  	%r66, %r8056, %r8057;
	shr.u32 	%r8062, %r8016, 24;
	mul.wide.u32 	%rd9915, %r8062, 4;
	add.s64 	%rd9916, %rd9907, %rd9915;
	ld.shared.u32 	%r8063, [%rd9916];
	and.b32  	%r8064, %r8063, -16777216;
	bfe.u32 	%r8065, %r8029, 16, 8;
	mul.wide.u32 	%rd9917, %r8065, 4;
	add.s64 	%rd9918, %rd9907, %rd9917;
	ld.shared.u32 	%r8066, [%rd9918];
	and.b32  	%r8067, %r8066, 16711680;
	or.b32  	%r8068, %r8067, %r8064;
	bfe.u32 	%r8069, %r8042, 8, 8;
	mul.wide.u32 	%rd9919, %r8069, 4;
	add.s64 	%rd9920, %rd9907, %rd9919;
	ld.shared.u32 	%r8070, [%rd9920];
	and.b32  	%r8071, %r8070, 65280;
	or.b32  	%r8072, %r8068, %r8071;
	and.b32  	%r8073, %r8003, 255;
	mul.wide.u32 	%rd9921, %r8073, 4;
	add.s64 	%rd9922, %rd9907, %rd9921;
	ld.shared.u8 	%r8074, [%rd9922];
	or.b32  	%r8075, %r8072, %r8074;
	xor.b32  	%r67, %r8075, %r8058;
	shr.u32 	%r8077, %r8029, 24;
	mul.wide.u32 	%rd9923, %r8077, 4;
	add.s64 	%rd9924, %rd9907, %rd9923;
	ld.shared.u32 	%r8078, [%rd9924];
	and.b32  	%r8079, %r8078, -16777216;
	bfe.u32 	%r8080, %r8042, 16, 8;
	mul.wide.u32 	%rd9925, %r8080, 4;
	add.s64 	%rd9926, %rd9907, %rd9925;
	ld.shared.u32 	%r8081, [%rd9926];
	and.b32  	%r8082, %r8081, 16711680;
	or.b32  	%r8083, %r8082, %r8079;
	bfe.u32 	%r8084, %r8003, 8, 8;
	mul.wide.u32 	%rd9927, %r8084, 4;
	add.s64 	%rd9928, %rd9907, %rd9927;
	ld.shared.u32 	%r8085, [%rd9928];
	and.b32  	%r8086, %r8085, 65280;
	or.b32  	%r8087, %r8083, %r8086;
	and.b32  	%r8088, %r8016, 255;
	mul.wide.u32 	%rd9929, %r8088, 4;
	add.s64 	%rd9930, %rd9907, %rd9929;
	ld.shared.u8 	%r8089, [%rd9930];
	or.b32  	%r8090, %r8087, %r8089;
	xor.b32  	%r68, %r8090, %r8059;
	shr.u32 	%r8092, %r8042, 24;
	mul.wide.u32 	%rd9931, %r8092, 4;
	add.s64 	%rd9932, %rd9907, %rd9931;
	ld.shared.u32 	%r8093, [%rd9932];
	and.b32  	%r8094, %r8093, -16777216;
	bfe.u32 	%r8095, %r8003, 16, 8;
	mul.wide.u32 	%rd9933, %r8095, 4;
	add.s64 	%rd9934, %rd9907, %rd9933;
	ld.shared.u32 	%r8096, [%rd9934];
	and.b32  	%r8097, %r8096, 16711680;
	or.b32  	%r8098, %r8097, %r8094;
	bfe.u32 	%r8099, %r8016, 8, 8;
	mul.wide.u32 	%rd9935, %r8099, 4;
	add.s64 	%rd9936, %rd9907, %rd9935;
	ld.shared.u32 	%r8100, [%rd9936];
	and.b32  	%r8101, %r8100, 65280;
	or.b32  	%r8102, %r8098, %r8101;
	and.b32  	%r8103, %r8029, 255;
	mul.wide.u32 	%rd9937, %r8103, 4;
	add.s64 	%rd9938, %rd9907, %rd9937;
	ld.shared.u8 	%r8104, [%rd9938];
	or.b32  	%r8105, %r8102, %r8104;
	xor.b32  	%r69, %r8105, %r8060;
	and.b32  	%r70, %r8164, 31;
	shr.u32 	%r8107, %r66, %r70;
	and.b32  	%r8108, %r8107, %r8178;
	mul.wide.u32 	%rd9939, %r8108, 4;
	add.s64 	%rd9940, %rd10052, %rd9939;
	and.b32  	%r8109, %r66, 31;
	mov.u32 	%r8110, 1;
	shl.b32 	%r71, %r8110, %r8109;
	ld.global.u32 	%r8111, [%rd9940];
	and.b32  	%r8112, %r8111, %r71;
	setp.eq.s32	%p6, %r8112, 0;
	@%p6 bra 	BB3_37;

	ld.param.u32 	%r8179, [m09600_comp_param_24];
	ld.param.u64 	%rd10053, [m09600_comp_param_7];
	shr.u32 	%r8113, %r67, %r70;
	and.b32  	%r8114, %r8113, %r8179;
	mul.wide.u32 	%rd9941, %r8114, 4;
	add.s64 	%rd9942, %rd10053, %rd9941;
	and.b32  	%r8115, %r67, 31;
	shl.b32 	%r72, %r8110, %r8115;
	ld.global.u32 	%r8117, [%rd9942];
	and.b32  	%r8118, %r8117, %r72;
	setp.eq.s32	%p7, %r8118, 0;
	@%p7 bra 	BB3_37;

	ld.param.u32 	%r8180, [m09600_comp_param_24];
	ld.param.u64 	%rd10054, [m09600_comp_param_8];
	shr.u32 	%r8119, %r68, %r70;
	and.b32  	%r8120, %r8119, %r8180;
	mul.wide.u32 	%rd9943, %r8120, 4;
	add.s64 	%rd9944, %rd10054, %rd9943;
	and.b32  	%r8121, %r68, 31;
	shl.b32 	%r73, %r8110, %r8121;
	ld.global.u32 	%r8123, [%rd9944];
	and.b32  	%r8124, %r8123, %r73;
	setp.eq.s32	%p8, %r8124, 0;
	@%p8 bra 	BB3_37;

	ld.param.u32 	%r8181, [m09600_comp_param_24];
	ld.param.u64 	%rd10055, [m09600_comp_param_9];
	shr.u32 	%r8125, %r69, %r70;
	and.b32  	%r8126, %r8125, %r8181;
	mul.wide.u32 	%rd9945, %r8126, 4;
	add.s64 	%rd9946, %rd10055, %rd9945;
	and.b32  	%r8127, %r69, 31;
	shl.b32 	%r74, %r8110, %r8127;
	ld.global.u32 	%r8129, [%rd9946];
	and.b32  	%r8130, %r8129, %r74;
	setp.eq.s32	%p9, %r8130, 0;
	@%p9 bra 	BB3_37;

	ld.param.u32 	%r8182, [m09600_comp_param_24];
	ld.param.u64 	%rd10056, [m09600_comp_param_10];
	ld.param.u32 	%r8165, [m09600_comp_param_26];
	and.b32  	%r75, %r8165, 31;
	shr.u32 	%r8131, %r66, %r75;
	and.b32  	%r8132, %r8131, %r8182;
	mul.wide.u32 	%rd9947, %r8132, 4;
	add.s64 	%rd9948, %rd10056, %rd9947;
	ld.global.u32 	%r8133, [%rd9948];
	and.b32  	%r8134, %r8133, %r71;
	setp.eq.s32	%p10, %r8134, 0;
	@%p10 bra 	BB3_37;

	ld.param.u32 	%r8183, [m09600_comp_param_24];
	ld.param.u64 	%rd10057, [m09600_comp_param_11];
	shr.u32 	%r8135, %r67, %r75;
	and.b32  	%r8136, %r8135, %r8183;
	mul.wide.u32 	%rd9949, %r8136, 4;
	add.s64 	%rd9950, %rd10057, %rd9949;
	ld.global.u32 	%r8137, [%rd9950];
	and.b32  	%r8138, %r8137, %r72;
	setp.eq.s32	%p11, %r8138, 0;
	@%p11 bra 	BB3_37;

	ld.param.u32 	%r8184, [m09600_comp_param_24];
	ld.param.u64 	%rd10058, [m09600_comp_param_12];
	shr.u32 	%r8139, %r68, %r75;
	and.b32  	%r8140, %r8139, %r8184;
	mul.wide.u32 	%rd9951, %r8140, 4;
	add.s64 	%rd9952, %rd10058, %rd9951;
	ld.global.u32 	%r8141, [%rd9952];
	and.b32  	%r8142, %r8141, %r73;
	setp.eq.s32	%p12, %r8142, 0;
	@%p12 bra 	BB3_37;

	ld.param.u32 	%r8185, [m09600_comp_param_24];
	ld.param.u64 	%rd10059, [m09600_comp_param_13];
	shr.u32 	%r8143, %r69, %r75;
	and.b32  	%r8144, %r8143, %r8185;
	mul.wide.u32 	%rd9953, %r8144, 4;
	add.s64 	%rd9954, %rd10059, %rd9953;
	ld.global.u32 	%r8145, [%rd9954];
	and.b32  	%r8146, %r8145, %r74;
	setp.eq.s32	%p13, %r8146, 0;
	@%p13 bra 	BB3_37;

	ld.param.u32 	%r8169, [m09600_comp_param_31];
	setp.eq.s32	%p14, %r8169, 0;
	mov.u32 	%r8206, 0;
	mov.u32 	%r8147, -1;
	@%p14 bra 	BB3_31;

	ld.param.u32 	%r8205, [m09600_comp_param_31];

BB3_19:
	ld.param.u64 	%rd10063, [m09600_comp_param_15];
	shr.u32 	%r78, %r8205, 1;
	add.s32 	%r8208, %r78, %r8206;
	cvt.u64.u32	%rd9955, %r8208;
	add.s64 	%rd24, %rd9955, %rd11;
	shl.b64 	%rd9956, %rd24, 4;
	add.s64 	%rd25, %rd10063, %rd9956;
	ld.global.u32 	%r80, [%rd25+12];
	setp.gt.u32	%p15, %r69, %r80;
	mov.u32 	%r8207, %r8110;
	@%p15 bra 	BB3_29;

	setp.lt.u32	%p16, %r69, %r80;
	mov.u32 	%r8150, -1;
	@%p16 bra 	BB3_21;
	bra.uni 	BB3_22;

BB3_21:
	mov.u32 	%r8207, %r8150;
	bra.uni 	BB3_29;

BB3_22:
	ld.global.u32 	%r81, [%rd25+8];
	setp.gt.u32	%p17, %r68, %r81;
	mov.u32 	%r8207, %r8110;
	@%p17 bra 	BB3_29;

	setp.lt.u32	%p18, %r68, %r81;
	@%p18 bra 	BB3_24;
	bra.uni 	BB3_25;

BB3_24:
	mov.u32 	%r8207, %r8150;
	bra.uni 	BB3_29;

BB3_25:
	ld.global.u32 	%r82, [%rd25+4];
	setp.gt.u32	%p19, %r67, %r82;
	mov.u32 	%r8207, %r8110;
	@%p19 bra 	BB3_29;

	setp.lt.u32	%p20, %r67, %r82;
	mov.u32 	%r8207, %r8150;
	@%p20 bra 	BB3_29;

	ld.global.u32 	%r83, [%rd25];
	setp.gt.u32	%p21, %r66, %r83;
	mov.u32 	%r8207, %r8110;
	@%p21 bra 	BB3_29;

	setp.lt.u32	%p22, %r66, %r83;
	selp.b32	%r8207, -1, 0, %p22;

BB3_29:
	add.s32 	%r8156, %r78, 1;
	setp.gt.s32	%p23, %r8207, 0;
	selp.b32	%r8157, %r8156, 0, %p23;
	add.s32 	%r8206, %r8157, %r8206;
	selp.b32	%r8158, -1, 0, %p23;
	add.s32 	%r8159, %r8158, %r8205;
	shr.u32 	%r8205, %r8159, 1;
	setp.eq.s32	%p24, %r8207, 0;
	@%p24 bra 	BB3_32;

	setp.ne.s32	%p25, %r8205, 0;
	@%p25 bra 	BB3_19;

BB3_31:
	mov.u32 	%r8208, %r8147;

BB3_32:
	setp.eq.s32	%p26, %r8208, -1;
	@%p26 bra 	BB3_37;

	ld.param.u64 	%rd10064, [m09600_comp_param_16];
	ld.param.u32 	%r8167, [m09600_comp_param_32];
	add.s32 	%r89, %r8208, %r8167;
	mul.wide.u32 	%rd9961, %r89, 4;
	add.s64 	%rd9962, %rd10064, %rd9961;
	atom.global.add.u32 	%r8161, [%rd9962], 1;
	setp.ne.s32	%p27, %r8161, 0;
	@%p27 bra 	BB3_37;

	ld.param.u64 	%rd10074, [m09600_comp_param_19];
	ld.param.u32 	%r8171, [m09600_comp_param_31];
	atom.global.add.u32 	%r90, [%rd10074], 1;
	setp.lt.u32	%p28, %r90, %r8171;
	@%p28 bra 	BB3_36;
	bra.uni 	BB3_35;

BB3_36:
	mov.b32	%r8177, %envreg3;
	mov.u32 	%r8176, %ntid.x;
	mov.u32 	%r8175, %ctaid.x;
	mov.u32 	%r8174, %tid.x;
	mad.lo.s32 	%r8173, %r8175, %r8176, %r8177;
	add.s32 	%r8172, %r8173, %r8174;
	ld.param.u64 	%rd10065, [m09600_comp_param_14];
	ld.param.u32 	%r8168, [m09600_comp_param_27];
	mul.wide.u32 	%rd9963, %r90, 20;
	add.s64 	%rd9964, %rd10065, %rd9963;
	st.global.u32 	[%rd9964], %r8168;
	st.global.u32 	[%rd9964+4], %r8208;
	st.global.u32 	[%rd9964+8], %r89;
	st.global.u32 	[%rd9964+12], %r8172;
	mov.u32 	%r8163, 0;
	st.global.u32 	[%rd9964+16], %r8163;
	bra.uni 	BB3_37;

BB3_35:
	ld.param.u64 	%rd10075, [m09600_comp_param_19];
	atom.global.add.u32 	%r8162, [%rd10075], -1;

BB3_37:
	ret;
}


  