//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_decompress
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
.const .align 8 .b8 te0[1024] = {165, 99, 99, 198, 132, 124, 124, 248, 153, 119, 119, 238, 141, 123, 123, 246, 13, 242, 242, 255, 189, 107, 107, 214, 177, 111, 111, 222, 84, 197, 197, 145, 80, 48, 48, 96, 3, 1, 1, 2, 169, 103, 103, 206, 125, 43, 43, 86, 25, 254, 254, 231, 98, 215, 215, 181, 230, 171, 171, 77, 154, 118, 118, 236, 69, 202, 202, 143, 157, 130, 130, 31, 64, 201, 201, 137, 135, 125, 125, 250, 21, 250, 250, 239, 235, 89, 89, 178, 201, 71, 71, 142, 11, 240, 240, 251, 236, 173, 173, 65, 103, 212, 212, 179, 253, 162, 162, 95, 234, 175, 175, 69, 191, 156, 156, 35, 247, 164, 164, 83, 150, 114, 114, 228, 91, 192, 192, 155, 194, 183, 183, 117, 28, 253, 253, 225, 174, 147, 147, 61, 106, 38, 38, 76, 90, 54, 54, 108, 65, 63, 63, 126, 2, 247, 247, 245, 79, 204, 204, 131, 92, 52, 52, 104, 244, 165, 165, 81, 52, 229, 229, 209, 8, 241, 241, 249, 147, 113, 113, 226, 115, 216, 216, 171, 83, 49, 49, 98, 63, 21, 21, 42, 12, 4, 4, 8, 82, 199, 199, 149, 101, 35, 35, 70, 94, 195, 195, 157, 40, 24, 24, 48, 161, 150, 150, 55, 15, 5, 5, 10, 181, 154, 154, 47, 9, 7, 7, 14, 54, 18, 18, 36, 155, 128, 128, 27, 61, 226, 226, 223, 38, 235, 235, 205, 105, 39, 39, 78, 205, 178, 178, 127, 159, 117, 117, 234, 27, 9, 9, 18, 158, 131, 131, 29, 116, 44, 44, 88, 46, 26, 26, 52, 45, 27, 27, 54, 178, 110, 110, 220, 238, 90, 90, 180, 251, 160, 160, 91, 246, 82, 82, 164, 77, 59, 59, 118, 97, 214, 214, 183, 206, 179, 179, 125, 123, 41, 41, 82, 62, 227, 227, 221, 113, 47, 47, 94, 151, 132, 132, 19, 245, 83, 83, 166, 104, 209, 209, 185, 0, 0, 0, 0, 44, 237, 237, 193, 96, 32, 32, 64, 31, 252, 252, 227, 200, 177, 177, 121, 237, 91, 91, 182, 190, 106, 106, 212, 70, 203, 203, 141, 217, 190, 190, 103, 75, 57, 57, 114, 222, 74, 74, 148, 212, 76, 76, 152, 232, 88, 88, 176, 74, 207, 207, 133, 107, 208, 208, 187, 42, 239, 239, 197, 229, 170, 170, 79, 22, 251, 251, 237, 197, 67, 67, 134, 215, 77, 77, 154, 85, 51, 51, 102, 148, 133, 133, 17, 207, 69, 69, 138, 16, 249, 249, 233, 6, 2, 2, 4, 129, 127, 127, 254, 240, 80, 80, 160, 68, 60, 60, 120, 186, 159, 159, 37, 227, 168, 168, 75, 243, 81, 81, 162, 254, 163, 163, 93, 192, 64, 64, 128, 138, 143, 143, 5, 173, 146, 146, 63, 188, 157, 157, 33, 72, 56, 56, 112, 4, 245, 245, 241, 223, 188, 188, 99, 193, 182, 182, 119, 117, 218, 218, 175, 99, 33, 33, 66, 48, 16, 16, 32, 26, 255, 255, 229, 14, 243, 243, 253, 109, 210, 210, 191, 76, 205, 205, 129, 20, 12, 12, 24, 53, 19, 19, 38, 47, 236, 236, 195, 225, 95, 95, 190, 162, 151, 151, 53, 204, 68, 68, 136, 57, 23, 23, 46, 87, 196, 196, 147, 242, 167, 167, 85, 130, 126, 126, 252, 71, 61, 61, 122, 172, 100, 100, 200, 231, 93, 93, 186, 43, 25, 25, 50, 149, 115, 115, 230, 160, 96, 96, 192, 152, 129, 129, 25, 209, 79, 79, 158, 127, 220, 220, 163, 102, 34, 34, 68, 126, 42, 42, 84, 171, 144, 144, 59, 131, 136, 136, 11, 202, 70, 70, 140, 41, 238, 238, 199, 211, 184, 184, 107, 60, 20, 20, 40, 121, 222, 222, 167, 226, 94, 94, 188, 29, 11, 11, 22, 118, 219, 219, 173, 59, 224, 224, 219, 86, 50, 50, 100, 78, 58, 58, 116, 30, 10, 10, 20, 219, 73, 73, 146, 10, 6, 6, 12, 108, 36, 36, 72, 228, 92, 92, 184, 93, 194, 194, 159, 110, 211, 211, 189, 239, 172, 172, 67, 166, 98, 98, 196, 168, 145, 145, 57, 164, 149, 149, 49, 55, 228, 228, 211, 139, 121, 121, 242, 50, 231, 231, 213, 67, 200, 200, 139, 89, 55, 55, 110, 183, 109, 109, 218, 140, 141, 141, 1, 100, 213, 213, 177, 210, 78, 78, 156, 224, 169, 169, 73, 180, 108, 108, 216, 250, 86, 86, 172, 7, 244, 244, 243, 37, 234, 234, 207, 175, 101, 101, 202, 142, 122, 122, 244, 233, 174, 174, 71, 24, 8, 8, 16, 213, 186, 186, 111, 136, 120, 120, 240, 111, 37, 37, 74, 114, 46, 46, 92, 36, 28, 28, 56, 241, 166, 166, 87, 199, 180, 180, 115, 81, 198, 198, 151, 35, 232, 232, 203, 124, 221, 221, 161, 156, 116, 116, 232, 33, 31, 31, 62, 221, 75, 75, 150, 220, 189, 189, 97, 134, 139, 139, 13, 133, 138, 138, 15, 144, 112, 112, 224, 66, 62, 62, 124, 196, 181, 181, 113, 170, 102, 102, 204, 216, 72, 72, 144, 5, 3, 3, 6, 1, 246, 246, 247, 18, 14, 14, 28, 163, 97, 97, 194, 95, 53, 53, 106, 249, 87, 87, 174, 208, 185, 185, 105, 145, 134, 134, 23, 88, 193, 193, 153, 39, 29, 29, 58, 185, 158, 158, 39, 56, 225, 225, 217, 19, 248, 248, 235, 179, 152, 152, 43, 51, 17, 17, 34, 187, 105, 105, 210, 112, 217, 217, 169, 137, 142, 142, 7, 167, 148, 148, 51, 182, 155, 155, 45, 34, 30, 30, 60, 146, 135, 135, 21, 32, 233, 233, 201, 73, 206, 206, 135, 255, 85, 85, 170, 120, 40, 40, 80, 122, 223, 223, 165, 143, 140, 140, 3, 248, 161, 161, 89, 128, 137, 137, 9, 23, 13, 13, 26, 218, 191, 191, 101, 49, 230, 230, 215, 198, 66, 66, 132, 184, 104, 104, 208, 195, 65, 65, 130, 176, 153, 153, 41, 119, 45, 45, 90, 17, 15, 15, 30, 203, 176, 176, 123, 252, 84, 84, 168, 214, 187, 187, 109, 58, 22, 22, 44};
.const .align 8 .b8 te1[1024] = {99, 99, 198, 165, 124, 124, 248, 132, 119, 119, 238, 153, 123, 123, 246, 141, 242, 242, 255, 13, 107, 107, 214, 189, 111, 111, 222, 177, 197, 197, 145, 84, 48, 48, 96, 80, 1, 1, 2, 3, 103, 103, 206, 169, 43, 43, 86, 125, 254, 254, 231, 25, 215, 215, 181, 98, 171, 171, 77, 230, 118, 118, 236, 154, 202, 202, 143, 69, 130, 130, 31, 157, 201, 201, 137, 64, 125, 125, 250, 135, 250, 250, 239, 21, 89, 89, 178, 235, 71, 71, 142, 201, 240, 240, 251, 11, 173, 173, 65, 236, 212, 212, 179, 103, 162, 162, 95, 253, 175, 175, 69, 234, 156, 156, 35, 191, 164, 164, 83, 247, 114, 114, 228, 150, 192, 192, 155, 91, 183, 183, 117, 194, 253, 253, 225, 28, 147, 147, 61, 174, 38, 38, 76, 106, 54, 54, 108, 90, 63, 63, 126, 65, 247, 247, 245, 2, 204, 204, 131, 79, 52, 52, 104, 92, 165, 165, 81, 244, 229, 229, 209, 52, 241, 241, 249, 8, 113, 113, 226, 147, 216, 216, 171, 115, 49, 49, 98, 83, 21, 21, 42, 63, 4, 4, 8, 12, 199, 199, 149, 82, 35, 35, 70, 101, 195, 195, 157, 94, 24, 24, 48, 40, 150, 150, 55, 161, 5, 5, 10, 15, 154, 154, 47, 181, 7, 7, 14, 9, 18, 18, 36, 54, 128, 128, 27, 155, 226, 226, 223, 61, 235, 235, 205, 38, 39, 39, 78, 105, 178, 178, 127, 205, 117, 117, 234, 159, 9, 9, 18, 27, 131, 131, 29, 158, 44, 44, 88, 116, 26, 26, 52, 46, 27, 27, 54, 45, 110, 110, 220, 178, 90, 90, 180, 238, 160, 160, 91, 251, 82, 82, 164, 246, 59, 59, 118, 77, 214, 214, 183, 97, 179, 179, 125, 206, 41, 41, 82, 123, 227, 227, 221, 62, 47, 47, 94, 113, 132, 132, 19, 151, 83, 83, 166, 245, 209, 209, 185, 104, 0, 0, 0, 0, 237, 237, 193, 44, 32, 32, 64, 96, 252, 252, 227, 31, 177, 177, 121, 200, 91, 91, 182, 237, 106, 106, 212, 190, 203, 203, 141, 70, 190, 190, 103, 217, 57, 57, 114, 75, 74, 74, 148, 222, 76, 76, 152, 212, 88, 88, 176, 232, 207, 207, 133, 74, 208, 208, 187, 107, 239, 239, 197, 42, 170, 170, 79, 229, 251, 251, 237, 22, 67, 67, 134, 197, 77, 77, 154, 215, 51, 51, 102, 85, 133, 133, 17, 148, 69, 69, 138, 207, 249, 249, 233, 16, 2, 2, 4, 6, 127, 127, 254, 129, 80, 80, 160, 240, 60, 60, 120, 68, 159, 159, 37, 186, 168, 168, 75, 227, 81, 81, 162, 243, 163, 163, 93, 254, 64, 64, 128, 192, 143, 143, 5, 138, 146, 146, 63, 173, 157, 157, 33, 188, 56, 56, 112, 72, 245, 245, 241, 4, 188, 188, 99, 223, 182, 182, 119, 193, 218, 218, 175, 117, 33, 33, 66, 99, 16, 16, 32, 48, 255, 255, 229, 26, 243, 243, 253, 14, 210, 210, 191, 109, 205, 205, 129, 76, 12, 12, 24, 20, 19, 19, 38, 53, 236, 236, 195, 47, 95, 95, 190, 225, 151, 151, 53, 162, 68, 68, 136, 204, 23, 23, 46, 57, 196, 196, 147, 87, 167, 167, 85, 242, 126, 126, 252, 130, 61, 61, 122, 71, 100, 100, 200, 172, 93, 93, 186, 231, 25, 25, 50, 43, 115, 115, 230, 149, 96, 96, 192, 160, 129, 129, 25, 152, 79, 79, 158, 209, 220, 220, 163, 127, 34, 34, 68, 102, 42, 42, 84, 126, 144, 144, 59, 171, 136, 136, 11, 131, 70, 70, 140, 202, 238, 238, 199, 41, 184, 184, 107, 211, 20, 20, 40, 60, 222, 222, 167, 121, 94, 94, 188, 226, 11, 11, 22, 29, 219, 219, 173, 118, 224, 224, 219, 59, 50, 50, 100, 86, 58, 58, 116, 78, 10, 10, 20, 30, 73, 73, 146, 219, 6, 6, 12, 10, 36, 36, 72, 108, 92, 92, 184, 228, 194, 194, 159, 93, 211, 211, 189, 110, 172, 172, 67, 239, 98, 98, 196, 166, 145, 145, 57, 168, 149, 149, 49, 164, 228, 228, 211, 55, 121, 121, 242, 139, 231, 231, 213, 50, 200, 200, 139, 67, 55, 55, 110, 89, 109, 109, 218, 183, 141, 141, 1, 140, 213, 213, 177, 100, 78, 78, 156, 210, 169, 169, 73, 224, 108, 108, 216, 180, 86, 86, 172, 250, 244, 244, 243, 7, 234, 234, 207, 37, 101, 101, 202, 175, 122, 122, 244, 142, 174, 174, 71, 233, 8, 8, 16, 24, 186, 186, 111, 213, 120, 120, 240, 136, 37, 37, 74, 111, 46, 46, 92, 114, 28, 28, 56, 36, 166, 166, 87, 241, 180, 180, 115, 199, 198, 198, 151, 81, 232, 232, 203, 35, 221, 221, 161, 124, 116, 116, 232, 156, 31, 31, 62, 33, 75, 75, 150, 221, 189, 189, 97, 220, 139, 139, 13, 134, 138, 138, 15, 133, 112, 112, 224, 144, 62, 62, 124, 66, 181, 181, 113, 196, 102, 102, 204, 170, 72, 72, 144, 216, 3, 3, 6, 5, 246, 246, 247, 1, 14, 14, 28, 18, 97, 97, 194, 163, 53, 53, 106, 95, 87, 87, 174, 249, 185, 185, 105, 208, 134, 134, 23, 145, 193, 193, 153, 88, 29, 29, 58, 39, 158, 158, 39, 185, 225, 225, 217, 56, 248, 248, 235, 19, 152, 152, 43, 179, 17, 17, 34, 51, 105, 105, 210, 187, 217, 217, 169, 112, 142, 142, 7, 137, 148, 148, 51, 167, 155, 155, 45, 182, 30, 30, 60, 34, 135, 135, 21, 146, 233, 233, 201, 32, 206, 206, 135, 73, 85, 85, 170, 255, 40, 40, 80, 120, 223, 223, 165, 122, 140, 140, 3, 143, 161, 161, 89, 248, 137, 137, 9, 128, 13, 13, 26, 23, 191, 191, 101, 218, 230, 230, 215, 49, 66, 66, 132, 198, 104, 104, 208, 184, 65, 65, 130, 195, 153, 153, 41, 176, 45, 45, 90, 119, 15, 15, 30, 17, 176, 176, 123, 203, 84, 84, 168, 252, 187, 187, 109, 214, 22, 22, 44, 58};
.const .align 8 .b8 te2[1024] = {99, 198, 165, 99, 124, 248, 132, 124, 119, 238, 153, 119, 123, 246, 141, 123, 242, 255, 13, 242, 107, 214, 189, 107, 111, 222, 177, 111, 197, 145, 84, 197, 48, 96, 80, 48, 1, 2, 3, 1, 103, 206, 169, 103, 43, 86, 125, 43, 254, 231, 25, 254, 215, 181, 98, 215, 171, 77, 230, 171, 118, 236, 154, 118, 202, 143, 69, 202, 130, 31, 157, 130, 201, 137, 64, 201, 125, 250, 135, 125, 250, 239, 21, 250, 89, 178, 235, 89, 71, 142, 201, 71, 240, 251, 11, 240, 173, 65, 236, 173, 212, 179, 103, 212, 162, 95, 253, 162, 175, 69, 234, 175, 156, 35, 191, 156, 164, 83, 247, 164, 114, 228, 150, 114, 192, 155, 91, 192, 183, 117, 194, 183, 253, 225, 28, 253, 147, 61, 174, 147, 38, 76, 106, 38, 54, 108, 90, 54, 63, 126, 65, 63, 247, 245, 2, 247, 204, 131, 79, 204, 52, 104, 92, 52, 165, 81, 244, 165, 229, 209, 52, 229, 241, 249, 8, 241, 113, 226, 147, 113, 216, 171, 115, 216, 49, 98, 83, 49, 21, 42, 63, 21, 4, 8, 12, 4, 199, 149, 82, 199, 35, 70, 101, 35, 195, 157, 94, 195, 24, 48, 40, 24, 150, 55, 161, 150, 5, 10, 15, 5, 154, 47, 181, 154, 7, 14, 9, 7, 18, 36, 54, 18, 128, 27, 155, 128, 226, 223, 61, 226, 235, 205, 38, 235, 39, 78, 105, 39, 178, 127, 205, 178, 117, 234, 159, 117, 9, 18, 27, 9, 131, 29, 158, 131, 44, 88, 116, 44, 26, 52, 46, 26, 27, 54, 45, 27, 110, 220, 178, 110, 90, 180, 238, 90, 160, 91, 251, 160, 82, 164, 246, 82, 59, 118, 77, 59, 214, 183, 97, 214, 179, 125, 206, 179, 41, 82, 123, 41, 227, 221, 62, 227, 47, 94, 113, 47, 132, 19, 151, 132, 83, 166, 245, 83, 209, 185, 104, 209, 0, 0, 0, 0, 237, 193, 44, 237, 32, 64, 96, 32, 252, 227, 31, 252, 177, 121, 200, 177, 91, 182, 237, 91, 106, 212, 190, 106, 203, 141, 70, 203, 190, 103, 217, 190, 57, 114, 75, 57, 74, 148, 222, 74, 76, 152, 212, 76, 88, 176, 232, 88, 207, 133, 74, 207, 208, 187, 107, 208, 239, 197, 42, 239, 170, 79, 229, 170, 251, 237, 22, 251, 67, 134, 197, 67, 77, 154, 215, 77, 51, 102, 85, 51, 133, 17, 148, 133, 69, 138, 207, 69, 249, 233, 16, 249, 2, 4, 6, 2, 127, 254, 129, 127, 80, 160, 240, 80, 60, 120, 68, 60, 159, 37, 186, 159, 168, 75, 227, 168, 81, 162, 243, 81, 163, 93, 254, 163, 64, 128, 192, 64, 143, 5, 138, 143, 146, 63, 173, 146, 157, 33, 188, 157, 56, 112, 72, 56, 245, 241, 4, 245, 188, 99, 223, 188, 182, 119, 193, 182, 218, 175, 117, 218, 33, 66, 99, 33, 16, 32, 48, 16, 255, 229, 26, 255, 243, 253, 14, 243, 210, 191, 109, 210, 205, 129, 76, 205, 12, 24, 20, 12, 19, 38, 53, 19, 236, 195, 47, 236, 95, 190, 225, 95, 151, 53, 162, 151, 68, 136, 204, 68, 23, 46, 57, 23, 196, 147, 87, 196, 167, 85, 242, 167, 126, 252, 130, 126, 61, 122, 71, 61, 100, 200, 172, 100, 93, 186, 231, 93, 25, 50, 43, 25, 115, 230, 149, 115, 96, 192, 160, 96, 129, 25, 152, 129, 79, 158, 209, 79, 220, 163, 127, 220, 34, 68, 102, 34, 42, 84, 126, 42, 144, 59, 171, 144, 136, 11, 131, 136, 70, 140, 202, 70, 238, 199, 41, 238, 184, 107, 211, 184, 20, 40, 60, 20, 222, 167, 121, 222, 94, 188, 226, 94, 11, 22, 29, 11, 219, 173, 118, 219, 224, 219, 59, 224, 50, 100, 86, 50, 58, 116, 78, 58, 10, 20, 30, 10, 73, 146, 219, 73, 6, 12, 10, 6, 36, 72, 108, 36, 92, 184, 228, 92, 194, 159, 93, 194, 211, 189, 110, 211, 172, 67, 239, 172, 98, 196, 166, 98, 145, 57, 168, 145, 149, 49, 164, 149, 228, 211, 55, 228, 121, 242, 139, 121, 231, 213, 50, 231, 200, 139, 67, 200, 55, 110, 89, 55, 109, 218, 183, 109, 141, 1, 140, 141, 213, 177, 100, 213, 78, 156, 210, 78, 169, 73, 224, 169, 108, 216, 180, 108, 86, 172, 250, 86, 244, 243, 7, 244, 234, 207, 37, 234, 101, 202, 175, 101, 122, 244, 142, 122, 174, 71, 233, 174, 8, 16, 24, 8, 186, 111, 213, 186, 120, 240, 136, 120, 37, 74, 111, 37, 46, 92, 114, 46, 28, 56, 36, 28, 166, 87, 241, 166, 180, 115, 199, 180, 198, 151, 81, 198, 232, 203, 35, 232, 221, 161, 124, 221, 116, 232, 156, 116, 31, 62, 33, 31, 75, 150, 221, 75, 189, 97, 220, 189, 139, 13, 134, 139, 138, 15, 133, 138, 112, 224, 144, 112, 62, 124, 66, 62, 181, 113, 196, 181, 102, 204, 170, 102, 72, 144, 216, 72, 3, 6, 5, 3, 246, 247, 1, 246, 14, 28, 18, 14, 97, 194, 163, 97, 53, 106, 95, 53, 87, 174, 249, 87, 185, 105, 208, 185, 134, 23, 145, 134, 193, 153, 88, 193, 29, 58, 39, 29, 158, 39, 185, 158, 225, 217, 56, 225, 248, 235, 19, 248, 152, 43, 179, 152, 17, 34, 51, 17, 105, 210, 187, 105, 217, 169, 112, 217, 142, 7, 137, 142, 148, 51, 167, 148, 155, 45, 182, 155, 30, 60, 34, 30, 135, 21, 146, 135, 233, 201, 32, 233, 206, 135, 73, 206, 85, 170, 255, 85, 40, 80, 120, 40, 223, 165, 122, 223, 140, 3, 143, 140, 161, 89, 248, 161, 137, 9, 128, 137, 13, 26, 23, 13, 191, 101, 218, 191, 230, 215, 49, 230, 66, 132, 198, 66, 104, 208, 184, 104, 65, 130, 195, 65, 153, 41, 176, 153, 45, 90, 119, 45, 15, 30, 17, 15, 176, 123, 203, 176, 84, 168, 252, 84, 187, 109, 214, 187, 22, 44, 58, 22};
.const .align 8 .b8 te3[1024] = {198, 165, 99, 99, 248, 132, 124, 124, 238, 153, 119, 119, 246, 141, 123, 123, 255, 13, 242, 242, 214, 189, 107, 107, 222, 177, 111, 111, 145, 84, 197, 197, 96, 80, 48, 48, 2, 3, 1, 1, 206, 169, 103, 103, 86, 125, 43, 43, 231, 25, 254, 254, 181, 98, 215, 215, 77, 230, 171, 171, 236, 154, 118, 118, 143, 69, 202, 202, 31, 157, 130, 130, 137, 64, 201, 201, 250, 135, 125, 125, 239, 21, 250, 250, 178, 235, 89, 89, 142, 201, 71, 71, 251, 11, 240, 240, 65, 236, 173, 173, 179, 103, 212, 212, 95, 253, 162, 162, 69, 234, 175, 175, 35, 191, 156, 156, 83, 247, 164, 164, 228, 150, 114, 114, 155, 91, 192, 192, 117, 194, 183, 183, 225, 28, 253, 253, 61, 174, 147, 147, 76, 106, 38, 38, 108, 90, 54, 54, 126, 65, 63, 63, 245, 2, 247, 247, 131, 79, 204, 204, 104, 92, 52, 52, 81, 244, 165, 165, 209, 52, 229, 229, 249, 8, 241, 241, 226, 147, 113, 113, 171, 115, 216, 216, 98, 83, 49, 49, 42, 63, 21, 21, 8, 12, 4, 4, 149, 82, 199, 199, 70, 101, 35, 35, 157, 94, 195, 195, 48, 40, 24, 24, 55, 161, 150, 150, 10, 15, 5, 5, 47, 181, 154, 154, 14, 9, 7, 7, 36, 54, 18, 18, 27, 155, 128, 128, 223, 61, 226, 226, 205, 38, 235, 235, 78, 105, 39, 39, 127, 205, 178, 178, 234, 159, 117, 117, 18, 27, 9, 9, 29, 158, 131, 131, 88, 116, 44, 44, 52, 46, 26, 26, 54, 45, 27, 27, 220, 178, 110, 110, 180, 238, 90, 90, 91, 251, 160, 160, 164, 246, 82, 82, 118, 77, 59, 59, 183, 97, 214, 214, 125, 206, 179, 179, 82, 123, 41, 41, 221, 62, 227, 227, 94, 113, 47, 47, 19, 151, 132, 132, 166, 245, 83, 83, 185, 104, 209, 209, 0, 0, 0, 0, 193, 44, 237, 237, 64, 96, 32, 32, 227, 31, 252, 252, 121, 200, 177, 177, 182, 237, 91, 91, 212, 190, 106, 106, 141, 70, 203, 203, 103, 217, 190, 190, 114, 75, 57, 57, 148, 222, 74, 74, 152, 212, 76, 76, 176, 232, 88, 88, 133, 74, 207, 207, 187, 107, 208, 208, 197, 42, 239, 239, 79, 229, 170, 170, 237, 22, 251, 251, 134, 197, 67, 67, 154, 215, 77, 77, 102, 85, 51, 51, 17, 148, 133, 133, 138, 207, 69, 69, 233, 16, 249, 249, 4, 6, 2, 2, 254, 129, 127, 127, 160, 240, 80, 80, 120, 68, 60, 60, 37, 186, 159, 159, 75, 227, 168, 168, 162, 243, 81, 81, 93, 254, 163, 163, 128, 192, 64, 64, 5, 138, 143, 143, 63, 173, 146, 146, 33, 188, 157, 157, 112, 72, 56, 56, 241, 4, 245, 245, 99, 223, 188, 188, 119, 193, 182, 182, 175, 117, 218, 218, 66, 99, 33, 33, 32, 48, 16, 16, 229, 26, 255, 255, 253, 14, 243, 243, 191, 109, 210, 210, 129, 76, 205, 205, 24, 20, 12, 12, 38, 53, 19, 19, 195, 47, 236, 236, 190, 225, 95, 95, 53, 162, 151, 151, 136, 204, 68, 68, 46, 57, 23, 23, 147, 87, 196, 196, 85, 242, 167, 167, 252, 130, 126, 126, 122, 71, 61, 61, 200, 172, 100, 100, 186, 231, 93, 93, 50, 43, 25, 25, 230, 149, 115, 115, 192, 160, 96, 96, 25, 152, 129, 129, 158, 209, 79, 79, 163, 127, 220, 220, 68, 102, 34, 34, 84, 126, 42, 42, 59, 171, 144, 144, 11, 131, 136, 136, 140, 202, 70, 70, 199, 41, 238, 238, 107, 211, 184, 184, 40, 60, 20, 20, 167, 121, 222, 222, 188, 226, 94, 94, 22, 29, 11, 11, 173, 118, 219, 219, 219, 59, 224, 224, 100, 86, 50, 50, 116, 78, 58, 58, 20, 30, 10, 10, 146, 219, 73, 73, 12, 10, 6, 6, 72, 108, 36, 36, 184, 228, 92, 92, 159, 93, 194, 194, 189, 110, 211, 211, 67, 239, 172, 172, 196, 166, 98, 98, 57, 168, 145, 145, 49, 164, 149, 149, 211, 55, 228, 228, 242, 139, 121, 121, 213, 50, 231, 231, 139, 67, 200, 200, 110, 89, 55, 55, 218, 183, 109, 109, 1, 140, 141, 141, 177, 100, 213, 213, 156, 210, 78, 78, 73, 224, 169, 169, 216, 180, 108, 108, 172, 250, 86, 86, 243, 7, 244, 244, 207, 37, 234, 234, 202, 175, 101, 101, 244, 142, 122, 122, 71, 233, 174, 174, 16, 24, 8, 8, 111, 213, 186, 186, 240, 136, 120, 120, 74, 111, 37, 37, 92, 114, 46, 46, 56, 36, 28, 28, 87, 241, 166, 166, 115, 199, 180, 180, 151, 81, 198, 198, 203, 35, 232, 232, 161, 124, 221, 221, 232, 156, 116, 116, 62, 33, 31, 31, 150, 221, 75, 75, 97, 220, 189, 189, 13, 134, 139, 139, 15, 133, 138, 138, 224, 144, 112, 112, 124, 66, 62, 62, 113, 196, 181, 181, 204, 170, 102, 102, 144, 216, 72, 72, 6, 5, 3, 3, 247, 1, 246, 246, 28, 18, 14, 14, 194, 163, 97, 97, 106, 95, 53, 53, 174, 249, 87, 87, 105, 208, 185, 185, 23, 145, 134, 134, 153, 88, 193, 193, 58, 39, 29, 29, 39, 185, 158, 158, 217, 56, 225, 225, 235, 19, 248, 248, 43, 179, 152, 152, 34, 51, 17, 17, 210, 187, 105, 105, 169, 112, 217, 217, 7, 137, 142, 142, 51, 167, 148, 148, 45, 182, 155, 155, 60, 34, 30, 30, 21, 146, 135, 135, 201, 32, 233, 233, 135, 73, 206, 206, 170, 255, 85, 85, 80, 120, 40, 40, 165, 122, 223, 223, 3, 143, 140, 140, 89, 248, 161, 161, 9, 128, 137, 137, 26, 23, 13, 13, 101, 218, 191, 191, 215, 49, 230, 230, 132, 198, 66, 66, 208, 184, 104, 104, 130, 195, 65, 65, 41, 176, 153, 153, 90, 119, 45, 45, 30, 17, 15, 15, 123, 203, 176, 176, 168, 252, 84, 84, 109, 214, 187, 187, 44, 58, 22, 22};
.const .align 8 .b8 te4[1024] = {99, 99, 99, 99, 124, 124, 124, 124, 119, 119, 119, 119, 123, 123, 123, 123, 242, 242, 242, 242, 107, 107, 107, 107, 111, 111, 111, 111, 197, 197, 197, 197, 48, 48, 48, 48, 1, 1, 1, 1, 103, 103, 103, 103, 43, 43, 43, 43, 254, 254, 254, 254, 215, 215, 215, 215, 171, 171, 171, 171, 118, 118, 118, 118, 202, 202, 202, 202, 130, 130, 130, 130, 201, 201, 201, 201, 125, 125, 125, 125, 250, 250, 250, 250, 89, 89, 89, 89, 71, 71, 71, 71, 240, 240, 240, 240, 173, 173, 173, 173, 212, 212, 212, 212, 162, 162, 162, 162, 175, 175, 175, 175, 156, 156, 156, 156, 164, 164, 164, 164, 114, 114, 114, 114, 192, 192, 192, 192, 183, 183, 183, 183, 253, 253, 253, 253, 147, 147, 147, 147, 38, 38, 38, 38, 54, 54, 54, 54, 63, 63, 63, 63, 247, 247, 247, 247, 204, 204, 204, 204, 52, 52, 52, 52, 165, 165, 165, 165, 229, 229, 229, 229, 241, 241, 241, 241, 113, 113, 113, 113, 216, 216, 216, 216, 49, 49, 49, 49, 21, 21, 21, 21, 4, 4, 4, 4, 199, 199, 199, 199, 35, 35, 35, 35, 195, 195, 195, 195, 24, 24, 24, 24, 150, 150, 150, 150, 5, 5, 5, 5, 154, 154, 154, 154, 7, 7, 7, 7, 18, 18, 18, 18, 128, 128, 128, 128, 226, 226, 226, 226, 235, 235, 235, 235, 39, 39, 39, 39, 178, 178, 178, 178, 117, 117, 117, 117, 9, 9, 9, 9, 131, 131, 131, 131, 44, 44, 44, 44, 26, 26, 26, 26, 27, 27, 27, 27, 110, 110, 110, 110, 90, 90, 90, 90, 160, 160, 160, 160, 82, 82, 82, 82, 59, 59, 59, 59, 214, 214, 214, 214, 179, 179, 179, 179, 41, 41, 41, 41, 227, 227, 227, 227, 47, 47, 47, 47, 132, 132, 132, 132, 83, 83, 83, 83, 209, 209, 209, 209, 0, 0, 0, 0, 237, 237, 237, 237, 32, 32, 32, 32, 252, 252, 252, 252, 177, 177, 177, 177, 91, 91, 91, 91, 106, 106, 106, 106, 203, 203, 203, 203, 190, 190, 190, 190, 57, 57, 57, 57, 74, 74, 74, 74, 76, 76, 76, 76, 88, 88, 88, 88, 207, 207, 207, 207, 208, 208, 208, 208, 239, 239, 239, 239, 170, 170, 170, 170, 251, 251, 251, 251, 67, 67, 67, 67, 77, 77, 77, 77, 51, 51, 51, 51, 133, 133, 133, 133, 69, 69, 69, 69, 249, 249, 249, 249, 2, 2, 2, 2, 127, 127, 127, 127, 80, 80, 80, 80, 60, 60, 60, 60, 159, 159, 159, 159, 168, 168, 168, 168, 81, 81, 81, 81, 163, 163, 163, 163, 64, 64, 64, 64, 143, 143, 143, 143, 146, 146, 146, 146, 157, 157, 157, 157, 56, 56, 56, 56, 245, 245, 245, 245, 188, 188, 188, 188, 182, 182, 182, 182, 218, 218, 218, 218, 33, 33, 33, 33, 16, 16, 16, 16, 255, 255, 255, 255, 243, 243, 243, 243, 210, 210, 210, 210, 205, 205, 205, 205, 12, 12, 12, 12, 19, 19, 19, 19, 236, 236, 236, 236, 95, 95, 95, 95, 151, 151, 151, 151, 68, 68, 68, 68, 23, 23, 23, 23, 196, 196, 196, 196, 167, 167, 167, 167, 126, 126, 126, 126, 61, 61, 61, 61, 100, 100, 100, 100, 93, 93, 93, 93, 25, 25, 25, 25, 115, 115, 115, 115, 96, 96, 96, 96, 129, 129, 129, 129, 79, 79, 79, 79, 220, 220, 220, 220, 34, 34, 34, 34, 42, 42, 42, 42, 144, 144, 144, 144, 136, 136, 136, 136, 70, 70, 70, 70, 238, 238, 238, 238, 184, 184, 184, 184, 20, 20, 20, 20, 222, 222, 222, 222, 94, 94, 94, 94, 11, 11, 11, 11, 219, 219, 219, 219, 224, 224, 224, 224, 50, 50, 50, 50, 58, 58, 58, 58, 10, 10, 10, 10, 73, 73, 73, 73, 6, 6, 6, 6, 36, 36, 36, 36, 92, 92, 92, 92, 194, 194, 194, 194, 211, 211, 211, 211, 172, 172, 172, 172, 98, 98, 98, 98, 145, 145, 145, 145, 149, 149, 149, 149, 228, 228, 228, 228, 121, 121, 121, 121, 231, 231, 231, 231, 200, 200, 200, 200, 55, 55, 55, 55, 109, 109, 109, 109, 141, 141, 141, 141, 213, 213, 213, 213, 78, 78, 78, 78, 169, 169, 169, 169, 108, 108, 108, 108, 86, 86, 86, 86, 244, 244, 244, 244, 234, 234, 234, 234, 101, 101, 101, 101, 122, 122, 122, 122, 174, 174, 174, 174, 8, 8, 8, 8, 186, 186, 186, 186, 120, 120, 120, 120, 37, 37, 37, 37, 46, 46, 46, 46, 28, 28, 28, 28, 166, 166, 166, 166, 180, 180, 180, 180, 198, 198, 198, 198, 232, 232, 232, 232, 221, 221, 221, 221, 116, 116, 116, 116, 31, 31, 31, 31, 75, 75, 75, 75, 189, 189, 189, 189, 139, 139, 139, 139, 138, 138, 138, 138, 112, 112, 112, 112, 62, 62, 62, 62, 181, 181, 181, 181, 102, 102, 102, 102, 72, 72, 72, 72, 3, 3, 3, 3, 246, 246, 246, 246, 14, 14, 14, 14, 97, 97, 97, 97, 53, 53, 53, 53, 87, 87, 87, 87, 185, 185, 185, 185, 134, 134, 134, 134, 193, 193, 193, 193, 29, 29, 29, 29, 158, 158, 158, 158, 225, 225, 225, 225, 248, 248, 248, 248, 152, 152, 152, 152, 17, 17, 17, 17, 105, 105, 105, 105, 217, 217, 217, 217, 142, 142, 142, 142, 148, 148, 148, 148, 155, 155, 155, 155, 30, 30, 30, 30, 135, 135, 135, 135, 233, 233, 233, 233, 206, 206, 206, 206, 85, 85, 85, 85, 40, 40, 40, 40, 223, 223, 223, 223, 140, 140, 140, 140, 161, 161, 161, 161, 137, 137, 137, 137, 13, 13, 13, 13, 191, 191, 191, 191, 230, 230, 230, 230, 66, 66, 66, 66, 104, 104, 104, 104, 65, 65, 65, 65, 153, 153, 153, 153, 45, 45, 45, 45, 15, 15, 15, 15, 176, 176, 176, 176, 84, 84, 84, 84, 187, 187, 187, 187, 22, 22, 22, 22};
.const .align 8 .b8 td0[1024] = {80, 167, 244, 81, 83, 101, 65, 126, 195, 164, 23, 26, 150, 94, 39, 58, 203, 107, 171, 59, 241, 69, 157, 31, 171, 88, 250, 172, 147, 3, 227, 75, 85, 250, 48, 32, 246, 109, 118, 173, 145, 118, 204, 136, 37, 76, 2, 245, 252, 215, 229, 79, 215, 203, 42, 197, 128, 68, 53, 38, 143, 163, 98, 181, 73, 90, 177, 222, 103, 27, 186, 37, 152, 14, 234, 69, 225, 192, 254, 93, 2, 117, 47, 195, 18, 240, 76, 129, 163, 151, 70, 141, 198, 249, 211, 107, 231, 95, 143, 3, 149, 156, 146, 21, 235, 122, 109, 191, 218, 89, 82, 149, 45, 131, 190, 212, 211, 33, 116, 88, 41, 105, 224, 73, 68, 200, 201, 142, 106, 137, 194, 117, 120, 121, 142, 244, 107, 62, 88, 153, 221, 113, 185, 39, 182, 79, 225, 190, 23, 173, 136, 240, 102, 172, 32, 201, 180, 58, 206, 125, 24, 74, 223, 99, 130, 49, 26, 229, 96, 51, 81, 151, 69, 127, 83, 98, 224, 119, 100, 177, 132, 174, 107, 187, 28, 160, 129, 254, 148, 43, 8, 249, 88, 104, 72, 112, 25, 253, 69, 143, 135, 108, 222, 148, 183, 248, 123, 82, 35, 211, 115, 171, 226, 2, 75, 114, 87, 143, 31, 227, 42, 171, 85, 102, 7, 40, 235, 178, 3, 194, 181, 47, 154, 123, 197, 134, 165, 8, 55, 211, 242, 135, 40, 48, 178, 165, 191, 35, 186, 106, 3, 2, 92, 130, 22, 237, 43, 28, 207, 138, 146, 180, 121, 167, 240, 242, 7, 243, 161, 226, 105, 78, 205, 244, 218, 101, 213, 190, 5, 6, 31, 98, 52, 209, 138, 254, 166, 196, 157, 83, 46, 52, 160, 85, 243, 162, 50, 225, 138, 5, 117, 235, 246, 164, 57, 236, 131, 11, 170, 239, 96, 64, 6, 159, 113, 94, 81, 16, 110, 189, 249, 138, 33, 62, 61, 6, 221, 150, 174, 5, 62, 221, 70, 189, 230, 77, 181, 141, 84, 145, 5, 93, 196, 113, 111, 212, 6, 4, 255, 21, 80, 96, 36, 251, 152, 25, 151, 233, 189, 214, 204, 67, 64, 137, 119, 158, 217, 103, 189, 66, 232, 176, 136, 139, 137, 7, 56, 91, 25, 231, 219, 238, 200, 121, 71, 10, 124, 161, 233, 15, 66, 124, 201, 30, 132, 248, 0, 0, 0, 0, 131, 134, 128, 9, 72, 237, 43, 50, 172, 112, 17, 30, 78, 114, 90, 108, 251, 255, 14, 253, 86, 56, 133, 15, 30, 213, 174, 61, 39, 57, 45, 54, 100, 217, 15, 10, 33, 166, 92, 104, 209, 84, 91, 155, 58, 46, 54, 36, 177, 103, 10, 12, 15, 231, 87, 147, 210, 150, 238, 180, 158, 145, 155, 27, 79, 197, 192, 128, 162, 32, 220, 97, 105, 75, 119, 90, 22, 26, 18, 28, 10, 186, 147, 226, 229, 42, 160, 192, 67, 224, 34, 60, 29, 23, 27, 18, 11, 13, 9, 14, 173, 199, 139, 242, 185, 168, 182, 45, 200, 169, 30, 20, 133, 25, 241, 87, 76, 7, 117, 175, 187, 221, 153, 238, 253, 96, 127, 163, 159, 38, 1, 247, 188, 245, 114, 92, 197, 59, 102, 68, 52, 126, 251, 91, 118, 41, 67, 139, 220, 198, 35, 203, 104, 252, 237, 182, 99, 241, 228, 184, 202, 220, 49, 215, 16, 133, 99, 66, 64, 34, 151, 19, 32, 17, 198, 132, 125, 36, 74, 133, 248, 61, 187, 210, 17, 50, 249, 174, 109, 161, 41, 199, 75, 47, 158, 29, 243, 48, 178, 220, 236, 82, 134, 13, 208, 227, 193, 119, 108, 22, 179, 43, 153, 185, 112, 169, 250, 72, 148, 17, 34, 100, 233, 71, 196, 140, 252, 168, 26, 63, 240, 160, 216, 44, 125, 86, 239, 144, 51, 34, 199, 78, 73, 135, 193, 209, 56, 217, 254, 162, 202, 140, 54, 11, 212, 152, 207, 129, 245, 166, 40, 222, 122, 165, 38, 142, 183, 218, 164, 191, 173, 63, 228, 157, 58, 44, 13, 146, 120, 80, 155, 204, 95, 106, 98, 70, 126, 84, 194, 19, 141, 246, 232, 184, 216, 144, 94, 247, 57, 46, 245, 175, 195, 130, 190, 128, 93, 159, 124, 147, 208, 105, 169, 45, 213, 111, 179, 18, 37, 207, 59, 153, 172, 200, 167, 125, 24, 16, 110, 99, 156, 232, 123, 187, 59, 219, 9, 120, 38, 205, 244, 24, 89, 110, 1, 183, 154, 236, 168, 154, 79, 131, 101, 110, 149, 230, 126, 230, 255, 170, 8, 207, 188, 33, 230, 232, 21, 239, 217, 155, 231, 186, 206, 54, 111, 74, 212, 9, 159, 234, 214, 124, 176, 41, 175, 178, 164, 49, 49, 35, 63, 42, 48, 148, 165, 198, 192, 102, 162, 53, 55, 188, 78, 116, 166, 202, 130, 252, 176, 208, 144, 224, 21, 216, 167, 51, 74, 152, 4, 241, 247, 218, 236, 65, 14, 80, 205, 127, 47, 246, 145, 23, 141, 214, 77, 118, 77, 176, 239, 67, 84, 77, 170, 204, 223, 4, 150, 228, 227, 181, 209, 158, 27, 136, 106, 76, 184, 31, 44, 193, 127, 81, 101, 70, 4, 234, 94, 157, 93, 53, 140, 1, 115, 116, 135, 250, 46, 65, 11, 251, 90, 29, 103, 179, 82, 210, 219, 146, 51, 86, 16, 233, 19, 71, 214, 109, 140, 97, 215, 154, 122, 12, 161, 55, 142, 20, 248, 89, 137, 60, 19, 235, 238, 39, 169, 206, 53, 201, 97, 183, 237, 229, 28, 225, 60, 177, 71, 122, 89, 223, 210, 156, 63, 115, 242, 85, 121, 206, 20, 24, 191, 55, 199, 115, 234, 205, 247, 83, 91, 170, 253, 95, 20, 111, 61, 223, 134, 219, 68, 120, 129, 243, 175, 202, 62, 196, 104, 185, 44, 52, 36, 56, 95, 64, 163, 194, 114, 195, 29, 22, 12, 37, 226, 188, 139, 73, 60, 40, 65, 149, 13, 255, 113, 1, 168, 57, 222, 179, 12, 8, 156, 228, 180, 216, 144, 193, 86, 100, 97, 132, 203, 123, 112, 182, 50, 213, 116, 92, 108, 72, 66, 87, 184, 208};
.const .align 8 .b8 td1[1024] = {167, 244, 81, 80, 101, 65, 126, 83, 164, 23, 26, 195, 94, 39, 58, 150, 107, 171, 59, 203, 69, 157, 31, 241, 88, 250, 172, 171, 3, 227, 75, 147, 250, 48, 32, 85, 109, 118, 173, 246, 118, 204, 136, 145, 76, 2, 245, 37, 215, 229, 79, 252, 203, 42, 197, 215, 68, 53, 38, 128, 163, 98, 181, 143, 90, 177, 222, 73, 27, 186, 37, 103, 14, 234, 69, 152, 192, 254, 93, 225, 117, 47, 195, 2, 240, 76, 129, 18, 151, 70, 141, 163, 249, 211, 107, 198, 95, 143, 3, 231, 156, 146, 21, 149, 122, 109, 191, 235, 89, 82, 149, 218, 131, 190, 212, 45, 33, 116, 88, 211, 105, 224, 73, 41, 200, 201, 142, 68, 137, 194, 117, 106, 121, 142, 244, 120, 62, 88, 153, 107, 113, 185, 39, 221, 79, 225, 190, 182, 173, 136, 240, 23, 172, 32, 201, 102, 58, 206, 125, 180, 74, 223, 99, 24, 49, 26, 229, 130, 51, 81, 151, 96, 127, 83, 98, 69, 119, 100, 177, 224, 174, 107, 187, 132, 160, 129, 254, 28, 43, 8, 249, 148, 104, 72, 112, 88, 253, 69, 143, 25, 108, 222, 148, 135, 248, 123, 82, 183, 211, 115, 171, 35, 2, 75, 114, 226, 143, 31, 227, 87, 171, 85, 102, 42, 40, 235, 178, 7, 194, 181, 47, 3, 123, 197, 134, 154, 8, 55, 211, 165, 135, 40, 48, 242, 165, 191, 35, 178, 106, 3, 2, 186, 130, 22, 237, 92, 28, 207, 138, 43, 180, 121, 167, 146, 242, 7, 243, 240, 226, 105, 78, 161, 244, 218, 101, 205, 190, 5, 6, 213, 98, 52, 209, 31, 254, 166, 196, 138, 83, 46, 52, 157, 85, 243, 162, 160, 225, 138, 5, 50, 235, 246, 164, 117, 236, 131, 11, 57, 239, 96, 64, 170, 159, 113, 94, 6, 16, 110, 189, 81, 138, 33, 62, 249, 6, 221, 150, 61, 5, 62, 221, 174, 189, 230, 77, 70, 141, 84, 145, 181, 93, 196, 113, 5, 212, 6, 4, 111, 21, 80, 96, 255, 251, 152, 25, 36, 233, 189, 214, 151, 67, 64, 137, 204, 158, 217, 103, 119, 66, 232, 176, 189, 139, 137, 7, 136, 91, 25, 231, 56, 238, 200, 121, 219, 10, 124, 161, 71, 15, 66, 124, 233, 30, 132, 248, 201, 0, 0, 0, 0, 134, 128, 9, 131, 237, 43, 50, 72, 112, 17, 30, 172, 114, 90, 108, 78, 255, 14, 253, 251, 56, 133, 15, 86, 213, 174, 61, 30, 57, 45, 54, 39, 217, 15, 10, 100, 166, 92, 104, 33, 84, 91, 155, 209, 46, 54, 36, 58, 103, 10, 12, 177, 231, 87, 147, 15, 150, 238, 180, 210, 145, 155, 27, 158, 197, 192, 128, 79, 32, 220, 97, 162, 75, 119, 90, 105, 26, 18, 28, 22, 186, 147, 226, 10, 42, 160, 192, 229, 224, 34, 60, 67, 23, 27, 18, 29, 13, 9, 14, 11, 199, 139, 242, 173, 168, 182, 45, 185, 169, 30, 20, 200, 25, 241, 87, 133, 7, 117, 175, 76, 221, 153, 238, 187, 96, 127, 163, 253, 38, 1, 247, 159, 245, 114, 92, 188, 59, 102, 68, 197, 126, 251, 91, 52, 41, 67, 139, 118, 198, 35, 203, 220, 252, 237, 182, 104, 241, 228, 184, 99, 220, 49, 215, 202, 133, 99, 66, 16, 34, 151, 19, 64, 17, 198, 132, 32, 36, 74, 133, 125, 61, 187, 210, 248, 50, 249, 174, 17, 161, 41, 199, 109, 47, 158, 29, 75, 48, 178, 220, 243, 82, 134, 13, 236, 227, 193, 119, 208, 22, 179, 43, 108, 185, 112, 169, 153, 72, 148, 17, 250, 100, 233, 71, 34, 140, 252, 168, 196, 63, 240, 160, 26, 44, 125, 86, 216, 144, 51, 34, 239, 78, 73, 135, 199, 209, 56, 217, 193, 162, 202, 140, 254, 11, 212, 152, 54, 129, 245, 166, 207, 222, 122, 165, 40, 142, 183, 218, 38, 191, 173, 63, 164, 157, 58, 44, 228, 146, 120, 80, 13, 204, 95, 106, 155, 70, 126, 84, 98, 19, 141, 246, 194, 184, 216, 144, 232, 247, 57, 46, 94, 175, 195, 130, 245, 128, 93, 159, 190, 147, 208, 105, 124, 45, 213, 111, 169, 18, 37, 207, 179, 153, 172, 200, 59, 125, 24, 16, 167, 99, 156, 232, 110, 187, 59, 219, 123, 120, 38, 205, 9, 24, 89, 110, 244, 183, 154, 236, 1, 154, 79, 131, 168, 110, 149, 230, 101, 230, 255, 170, 126, 207, 188, 33, 8, 232, 21, 239, 230, 155, 231, 186, 217, 54, 111, 74, 206, 9, 159, 234, 212, 124, 176, 41, 214, 178, 164, 49, 175, 35, 63, 42, 49, 148, 165, 198, 48, 102, 162, 53, 192, 188, 78, 116, 55, 202, 130, 252, 166, 208, 144, 224, 176, 216, 167, 51, 21, 152, 4, 241, 74, 218, 236, 65, 247, 80, 205, 127, 14, 246, 145, 23, 47, 214, 77, 118, 141, 176, 239, 67, 77, 77, 170, 204, 84, 4, 150, 228, 223, 181, 209, 158, 227, 136, 106, 76, 27, 31, 44, 193, 184, 81, 101, 70, 127, 234, 94, 157, 4, 53, 140, 1, 93, 116, 135, 250, 115, 65, 11, 251, 46, 29, 103, 179, 90, 210, 219, 146, 82, 86, 16, 233, 51, 71, 214, 109, 19, 97, 215, 154, 140, 12, 161, 55, 122, 20, 248, 89, 142, 60, 19, 235, 137, 39, 169, 206, 238, 201, 97, 183, 53, 229, 28, 225, 237, 177, 71, 122, 60, 223, 210, 156, 89, 115, 242, 85, 63, 206, 20, 24, 121, 55, 199, 115, 191, 205, 247, 83, 234, 170, 253, 95, 91, 111, 61, 223, 20, 219, 68, 120, 134, 243, 175, 202, 129, 196, 104, 185, 62, 52, 36, 56, 44, 64, 163, 194, 95, 195, 29, 22, 114, 37, 226, 188, 12, 73, 60, 40, 139, 149, 13, 255, 65, 1, 168, 57, 113, 179, 12, 8, 222, 228, 180, 216, 156, 193, 86, 100, 144, 132, 203, 123, 97, 182, 50, 213, 112, 92, 108, 72, 116, 87, 184, 208, 66};
.const .align 8 .b8 td2[1024] = {244, 81, 80, 167, 65, 126, 83, 101, 23, 26, 195, 164, 39, 58, 150, 94, 171, 59, 203, 107, 157, 31, 241, 69, 250, 172, 171, 88, 227, 75, 147, 3, 48, 32, 85, 250, 118, 173, 246, 109, 204, 136, 145, 118, 2, 245, 37, 76, 229, 79, 252, 215, 42, 197, 215, 203, 53, 38, 128, 68, 98, 181, 143, 163, 177, 222, 73, 90, 186, 37, 103, 27, 234, 69, 152, 14, 254, 93, 225, 192, 47, 195, 2, 117, 76, 129, 18, 240, 70, 141, 163, 151, 211, 107, 198, 249, 143, 3, 231, 95, 146, 21, 149, 156, 109, 191, 235, 122, 82, 149, 218, 89, 190, 212, 45, 131, 116, 88, 211, 33, 224, 73, 41, 105, 201, 142, 68, 200, 194, 117, 106, 137, 142, 244, 120, 121, 88, 153, 107, 62, 185, 39, 221, 113, 225, 190, 182, 79, 136, 240, 23, 173, 32, 201, 102, 172, 206, 125, 180, 58, 223, 99, 24, 74, 26, 229, 130, 49, 81, 151, 96, 51, 83, 98, 69, 127, 100, 177, 224, 119, 107, 187, 132, 174, 129, 254, 28, 160, 8, 249, 148, 43, 72, 112, 88, 104, 69, 143, 25, 253, 222, 148, 135, 108, 123, 82, 183, 248, 115, 171, 35, 211, 75, 114, 226, 2, 31, 227, 87, 143, 85, 102, 42, 171, 235, 178, 7, 40, 181, 47, 3, 194, 197, 134, 154, 123, 55, 211, 165, 8, 40, 48, 242, 135, 191, 35, 178, 165, 3, 2, 186, 106, 22, 237, 92, 130, 207, 138, 43, 28, 121, 167, 146, 180, 7, 243, 240, 242, 105, 78, 161, 226, 218, 101, 205, 244, 5, 6, 213, 190, 52, 209, 31, 98, 166, 196, 138, 254, 46, 52, 157, 83, 243, 162, 160, 85, 138, 5, 50, 225, 246, 164, 117, 235, 131, 11, 57, 236, 96, 64, 170, 239, 113, 94, 6, 159, 110, 189, 81, 16, 33, 62, 249, 138, 221, 150, 61, 6, 62, 221, 174, 5, 230, 77, 70, 189, 84, 145, 181, 141, 196, 113, 5, 93, 6, 4, 111, 212, 80, 96, 255, 21, 152, 25, 36, 251, 189, 214, 151, 233, 64, 137, 204, 67, 217, 103, 119, 158, 232, 176, 189, 66, 137, 7, 136, 139, 25, 231, 56, 91, 200, 121, 219, 238, 124, 161, 71, 10, 66, 124, 233, 15, 132, 248, 201, 30, 0, 0, 0, 0, 128, 9, 131, 134, 43, 50, 72, 237, 17, 30, 172, 112, 90, 108, 78, 114, 14, 253, 251, 255, 133, 15, 86, 56, 174, 61, 30, 213, 45, 54, 39, 57, 15, 10, 100, 217, 92, 104, 33, 166, 91, 155, 209, 84, 54, 36, 58, 46, 10, 12, 177, 103, 87, 147, 15, 231, 238, 180, 210, 150, 155, 27, 158, 145, 192, 128, 79, 197, 220, 97, 162, 32, 119, 90, 105, 75, 18, 28, 22, 26, 147, 226, 10, 186, 160, 192, 229, 42, 34, 60, 67, 224, 27, 18, 29, 23, 9, 14, 11, 13, 139, 242, 173, 199, 182, 45, 185, 168, 30, 20, 200, 169, 241, 87, 133, 25, 117, 175, 76, 7, 153, 238, 187, 221, 127, 163, 253, 96, 1, 247, 159, 38, 114, 92, 188, 245, 102, 68, 197, 59, 251, 91, 52, 126, 67, 139, 118, 41, 35, 203, 220, 198, 237, 182, 104, 252, 228, 184, 99, 241, 49, 215, 202, 220, 99, 66, 16, 133, 151, 19, 64, 34, 198, 132, 32, 17, 74, 133, 125, 36, 187, 210, 248, 61, 249, 174, 17, 50, 41, 199, 109, 161, 158, 29, 75, 47, 178, 220, 243, 48, 134, 13, 236, 82, 193, 119, 208, 227, 179, 43, 108, 22, 112, 169, 153, 185, 148, 17, 250, 72, 233, 71, 34, 100, 252, 168, 196, 140, 240, 160, 26, 63, 125, 86, 216, 44, 51, 34, 239, 144, 73, 135, 199, 78, 56, 217, 193, 209, 202, 140, 254, 162, 212, 152, 54, 11, 245, 166, 207, 129, 122, 165, 40, 222, 183, 218, 38, 142, 173, 63, 164, 191, 58, 44, 228, 157, 120, 80, 13, 146, 95, 106, 155, 204, 126, 84, 98, 70, 141, 246, 194, 19, 216, 144, 232, 184, 57, 46, 94, 247, 195, 130, 245, 175, 93, 159, 190, 128, 208, 105, 124, 147, 213, 111, 169, 45, 37, 207, 179, 18, 172, 200, 59, 153, 24, 16, 167, 125, 156, 232, 110, 99, 59, 219, 123, 187, 38, 205, 9, 120, 89, 110, 244, 24, 154, 236, 1, 183, 79, 131, 168, 154, 149, 230, 101, 110, 255, 170, 126, 230, 188, 33, 8, 207, 21, 239, 230, 232, 231, 186, 217, 155, 111, 74, 206, 54, 159, 234, 212, 9, 176, 41, 214, 124, 164, 49, 175, 178, 63, 42, 49, 35, 165, 198, 48, 148, 162, 53, 192, 102, 78, 116, 55, 188, 130, 252, 166, 202, 144, 224, 176, 208, 167, 51, 21, 216, 4, 241, 74, 152, 236, 65, 247, 218, 205, 127, 14, 80, 145, 23, 47, 246, 77, 118, 141, 214, 239, 67, 77, 176, 170, 204, 84, 77, 150, 228, 223, 4, 209, 158, 227, 181, 106, 76, 27, 136, 44, 193, 184, 31, 101, 70, 127, 81, 94, 157, 4, 234, 140, 1, 93, 53, 135, 250, 115, 116, 11, 251, 46, 65, 103, 179, 90, 29, 219, 146, 82, 210, 16, 233, 51, 86, 214, 109, 19, 71, 215, 154, 140, 97, 161, 55, 122, 12, 248, 89, 142, 20, 19, 235, 137, 60, 169, 206, 238, 39, 97, 183, 53, 201, 28, 225, 237, 229, 71, 122, 60, 177, 210, 156, 89, 223, 242, 85, 63, 115, 20, 24, 121, 206, 199, 115, 191, 55, 247, 83, 234, 205, 253, 95, 91, 170, 61, 223, 20, 111, 68, 120, 134, 219, 175, 202, 129, 243, 104, 185, 62, 196, 36, 56, 44, 52, 163, 194, 95, 64, 29, 22, 114, 195, 226, 188, 12, 37, 60, 40, 139, 73, 13, 255, 65, 149, 168, 57, 113, 1, 12, 8, 222, 179, 180, 216, 156, 228, 86, 100, 144, 193, 203, 123, 97, 132, 50, 213, 112, 182, 108, 72, 116, 92, 184, 208, 66, 87};
.const .align 8 .b8 td3[1024] = {81, 80, 167, 244, 126, 83, 101, 65, 26, 195, 164, 23, 58, 150, 94, 39, 59, 203, 107, 171, 31, 241, 69, 157, 172, 171, 88, 250, 75, 147, 3, 227, 32, 85, 250, 48, 173, 246, 109, 118, 136, 145, 118, 204, 245, 37, 76, 2, 79, 252, 215, 229, 197, 215, 203, 42, 38, 128, 68, 53, 181, 143, 163, 98, 222, 73, 90, 177, 37, 103, 27, 186, 69, 152, 14, 234, 93, 225, 192, 254, 195, 2, 117, 47, 129, 18, 240, 76, 141, 163, 151, 70, 107, 198, 249, 211, 3, 231, 95, 143, 21, 149, 156, 146, 191, 235, 122, 109, 149, 218, 89, 82, 212, 45, 131, 190, 88, 211, 33, 116, 73, 41, 105, 224, 142, 68, 200, 201, 117, 106, 137, 194, 244, 120, 121, 142, 153, 107, 62, 88, 39, 221, 113, 185, 190, 182, 79, 225, 240, 23, 173, 136, 201, 102, 172, 32, 125, 180, 58, 206, 99, 24, 74, 223, 229, 130, 49, 26, 151, 96, 51, 81, 98, 69, 127, 83, 177, 224, 119, 100, 187, 132, 174, 107, 254, 28, 160, 129, 249, 148, 43, 8, 112, 88, 104, 72, 143, 25, 253, 69, 148, 135, 108, 222, 82, 183, 248, 123, 171, 35, 211, 115, 114, 226, 2, 75, 227, 87, 143, 31, 102, 42, 171, 85, 178, 7, 40, 235, 47, 3, 194, 181, 134, 154, 123, 197, 211, 165, 8, 55, 48, 242, 135, 40, 35, 178, 165, 191, 2, 186, 106, 3, 237, 92, 130, 22, 138, 43, 28, 207, 167, 146, 180, 121, 243, 240, 242, 7, 78, 161, 226, 105, 101, 205, 244, 218, 6, 213, 190, 5, 209, 31, 98, 52, 196, 138, 254, 166, 52, 157, 83, 46, 162, 160, 85, 243, 5, 50, 225, 138, 164, 117, 235, 246, 11, 57, 236, 131, 64, 170, 239, 96, 94, 6, 159, 113, 189, 81, 16, 110, 62, 249, 138, 33, 150, 61, 6, 221, 221, 174, 5, 62, 77, 70, 189, 230, 145, 181, 141, 84, 113, 5, 93, 196, 4, 111, 212, 6, 96, 255, 21, 80, 25, 36, 251, 152, 214, 151, 233, 189, 137, 204, 67, 64, 103, 119, 158, 217, 176, 189, 66, 232, 7, 136, 139, 137, 231, 56, 91, 25, 121, 219, 238, 200, 161, 71, 10, 124, 124, 233, 15, 66, 248, 201, 30, 132, 0, 0, 0, 0, 9, 131, 134, 128, 50, 72, 237, 43, 30, 172, 112, 17, 108, 78, 114, 90, 253, 251, 255, 14, 15, 86, 56, 133, 61, 30, 213, 174, 54, 39, 57, 45, 10, 100, 217, 15, 104, 33, 166, 92, 155, 209, 84, 91, 36, 58, 46, 54, 12, 177, 103, 10, 147, 15, 231, 87, 180, 210, 150, 238, 27, 158, 145, 155, 128, 79, 197, 192, 97, 162, 32, 220, 90, 105, 75, 119, 28, 22, 26, 18, 226, 10, 186, 147, 192, 229, 42, 160, 60, 67, 224, 34, 18, 29, 23, 27, 14, 11, 13, 9, 242, 173, 199, 139, 45, 185, 168, 182, 20, 200, 169, 30, 87, 133, 25, 241, 175, 76, 7, 117, 238, 187, 221, 153, 163, 253, 96, 127, 247, 159, 38, 1, 92, 188, 245, 114, 68, 197, 59, 102, 91, 52, 126, 251, 139, 118, 41, 67, 203, 220, 198, 35, 182, 104, 252, 237, 184, 99, 241, 228, 215, 202, 220, 49, 66, 16, 133, 99, 19, 64, 34, 151, 132, 32, 17, 198, 133, 125, 36, 74, 210, 248, 61, 187, 174, 17, 50, 249, 199, 109, 161, 41, 29, 75, 47, 158, 220, 243, 48, 178, 13, 236, 82, 134, 119, 208, 227, 193, 43, 108, 22, 179, 169, 153, 185, 112, 17, 250, 72, 148, 71, 34, 100, 233, 168, 196, 140, 252, 160, 26, 63, 240, 86, 216, 44, 125, 34, 239, 144, 51, 135, 199, 78, 73, 217, 193, 209, 56, 140, 254, 162, 202, 152, 54, 11, 212, 166, 207, 129, 245, 165, 40, 222, 122, 218, 38, 142, 183, 63, 164, 191, 173, 44, 228, 157, 58, 80, 13, 146, 120, 106, 155, 204, 95, 84, 98, 70, 126, 246, 194, 19, 141, 144, 232, 184, 216, 46, 94, 247, 57, 130, 245, 175, 195, 159, 190, 128, 93, 105, 124, 147, 208, 111, 169, 45, 213, 207, 179, 18, 37, 200, 59, 153, 172, 16, 167, 125, 24, 232, 110, 99, 156, 219, 123, 187, 59, 205, 9, 120, 38, 110, 244, 24, 89, 236, 1, 183, 154, 131, 168, 154, 79, 230, 101, 110, 149, 170, 126, 230, 255, 33, 8, 207, 188, 239, 230, 232, 21, 186, 217, 155, 231, 74, 206, 54, 111, 234, 212, 9, 159, 41, 214, 124, 176, 49, 175, 178, 164, 42, 49, 35, 63, 198, 48, 148, 165, 53, 192, 102, 162, 116, 55, 188, 78, 252, 166, 202, 130, 224, 176, 208, 144, 51, 21, 216, 167, 241, 74, 152, 4, 65, 247, 218, 236, 127, 14, 80, 205, 23, 47, 246, 145, 118, 141, 214, 77, 67, 77, 176, 239, 204, 84, 77, 170, 228, 223, 4, 150, 158, 227, 181, 209, 76, 27, 136, 106, 193, 184, 31, 44, 70, 127, 81, 101, 157, 4, 234, 94, 1, 93, 53, 140, 250, 115, 116, 135, 251, 46, 65, 11, 179, 90, 29, 103, 146, 82, 210, 219, 233, 51, 86, 16, 109, 19, 71, 214, 154, 140, 97, 215, 55, 122, 12, 161, 89, 142, 20, 248, 235, 137, 60, 19, 206, 238, 39, 169, 183, 53, 201, 97, 225, 237, 229, 28, 122, 60, 177, 71, 156, 89, 223, 210, 85, 63, 115, 242, 24, 121, 206, 20, 115, 191, 55, 199, 83, 234, 205, 247, 95, 91, 170, 253, 223, 20, 111, 61, 120, 134, 219, 68, 202, 129, 243, 175, 185, 62, 196, 104, 56, 44, 52, 36, 194, 95, 64, 163, 22, 114, 195, 29, 188, 12, 37, 226, 40, 139, 73, 60, 255, 65, 149, 13, 57, 113, 1, 168, 8, 222, 179, 12, 216, 156, 228, 180, 100, 144, 193, 86, 123, 97, 132, 203, 213, 112, 182, 50, 72, 116, 92, 108, 208, 66, 87, 184};
.const .align 8 .b8 td4[1024] = {82, 82, 82, 82, 9, 9, 9, 9, 106, 106, 106, 106, 213, 213, 213, 213, 48, 48, 48, 48, 54, 54, 54, 54, 165, 165, 165, 165, 56, 56, 56, 56, 191, 191, 191, 191, 64, 64, 64, 64, 163, 163, 163, 163, 158, 158, 158, 158, 129, 129, 129, 129, 243, 243, 243, 243, 215, 215, 215, 215, 251, 251, 251, 251, 124, 124, 124, 124, 227, 227, 227, 227, 57, 57, 57, 57, 130, 130, 130, 130, 155, 155, 155, 155, 47, 47, 47, 47, 255, 255, 255, 255, 135, 135, 135, 135, 52, 52, 52, 52, 142, 142, 142, 142, 67, 67, 67, 67, 68, 68, 68, 68, 196, 196, 196, 196, 222, 222, 222, 222, 233, 233, 233, 233, 203, 203, 203, 203, 84, 84, 84, 84, 123, 123, 123, 123, 148, 148, 148, 148, 50, 50, 50, 50, 166, 166, 166, 166, 194, 194, 194, 194, 35, 35, 35, 35, 61, 61, 61, 61, 238, 238, 238, 238, 76, 76, 76, 76, 149, 149, 149, 149, 11, 11, 11, 11, 66, 66, 66, 66, 250, 250, 250, 250, 195, 195, 195, 195, 78, 78, 78, 78, 8, 8, 8, 8, 46, 46, 46, 46, 161, 161, 161, 161, 102, 102, 102, 102, 40, 40, 40, 40, 217, 217, 217, 217, 36, 36, 36, 36, 178, 178, 178, 178, 118, 118, 118, 118, 91, 91, 91, 91, 162, 162, 162, 162, 73, 73, 73, 73, 109, 109, 109, 109, 139, 139, 139, 139, 209, 209, 209, 209, 37, 37, 37, 37, 114, 114, 114, 114, 248, 248, 248, 248, 246, 246, 246, 246, 100, 100, 100, 100, 134, 134, 134, 134, 104, 104, 104, 104, 152, 152, 152, 152, 22, 22, 22, 22, 212, 212, 212, 212, 164, 164, 164, 164, 92, 92, 92, 92, 204, 204, 204, 204, 93, 93, 93, 93, 101, 101, 101, 101, 182, 182, 182, 182, 146, 146, 146, 146, 108, 108, 108, 108, 112, 112, 112, 112, 72, 72, 72, 72, 80, 80, 80, 80, 253, 253, 253, 253, 237, 237, 237, 237, 185, 185, 185, 185, 218, 218, 218, 218, 94, 94, 94, 94, 21, 21, 21, 21, 70, 70, 70, 70, 87, 87, 87, 87, 167, 167, 167, 167, 141, 141, 141, 141, 157, 157, 157, 157, 132, 132, 132, 132, 144, 144, 144, 144, 216, 216, 216, 216, 171, 171, 171, 171, 0, 0, 0, 0, 140, 140, 140, 140, 188, 188, 188, 188, 211, 211, 211, 211, 10, 10, 10, 10, 247, 247, 247, 247, 228, 228, 228, 228, 88, 88, 88, 88, 5, 5, 5, 5, 184, 184, 184, 184, 179, 179, 179, 179, 69, 69, 69, 69, 6, 6, 6, 6, 208, 208, 208, 208, 44, 44, 44, 44, 30, 30, 30, 30, 143, 143, 143, 143, 202, 202, 202, 202, 63, 63, 63, 63, 15, 15, 15, 15, 2, 2, 2, 2, 193, 193, 193, 193, 175, 175, 175, 175, 189, 189, 189, 189, 3, 3, 3, 3, 1, 1, 1, 1, 19, 19, 19, 19, 138, 138, 138, 138, 107, 107, 107, 107, 58, 58, 58, 58, 145, 145, 145, 145, 17, 17, 17, 17, 65, 65, 65, 65, 79, 79, 79, 79, 103, 103, 103, 103, 220, 220, 220, 220, 234, 234, 234, 234, 151, 151, 151, 151, 242, 242, 242, 242, 207, 207, 207, 207, 206, 206, 206, 206, 240, 240, 240, 240, 180, 180, 180, 180, 230, 230, 230, 230, 115, 115, 115, 115, 150, 150, 150, 150, 172, 172, 172, 172, 116, 116, 116, 116, 34, 34, 34, 34, 231, 231, 231, 231, 173, 173, 173, 173, 53, 53, 53, 53, 133, 133, 133, 133, 226, 226, 226, 226, 249, 249, 249, 249, 55, 55, 55, 55, 232, 232, 232, 232, 28, 28, 28, 28, 117, 117, 117, 117, 223, 223, 223, 223, 110, 110, 110, 110, 71, 71, 71, 71, 241, 241, 241, 241, 26, 26, 26, 26, 113, 113, 113, 113, 29, 29, 29, 29, 41, 41, 41, 41, 197, 197, 197, 197, 137, 137, 137, 137, 111, 111, 111, 111, 183, 183, 183, 183, 98, 98, 98, 98, 14, 14, 14, 14, 170, 170, 170, 170, 24, 24, 24, 24, 190, 190, 190, 190, 27, 27, 27, 27, 252, 252, 252, 252, 86, 86, 86, 86, 62, 62, 62, 62, 75, 75, 75, 75, 198, 198, 198, 198, 210, 210, 210, 210, 121, 121, 121, 121, 32, 32, 32, 32, 154, 154, 154, 154, 219, 219, 219, 219, 192, 192, 192, 192, 254, 254, 254, 254, 120, 120, 120, 120, 205, 205, 205, 205, 90, 90, 90, 90, 244, 244, 244, 244, 31, 31, 31, 31, 221, 221, 221, 221, 168, 168, 168, 168, 51, 51, 51, 51, 136, 136, 136, 136, 7, 7, 7, 7, 199, 199, 199, 199, 49, 49, 49, 49, 177, 177, 177, 177, 18, 18, 18, 18, 16, 16, 16, 16, 89, 89, 89, 89, 39, 39, 39, 39, 128, 128, 128, 128, 236, 236, 236, 236, 95, 95, 95, 95, 96, 96, 96, 96, 81, 81, 81, 81, 127, 127, 127, 127, 169, 169, 169, 169, 25, 25, 25, 25, 181, 181, 181, 181, 74, 74, 74, 74, 13, 13, 13, 13, 45, 45, 45, 45, 229, 229, 229, 229, 122, 122, 122, 122, 159, 159, 159, 159, 147, 147, 147, 147, 201, 201, 201, 201, 156, 156, 156, 156, 239, 239, 239, 239, 160, 160, 160, 160, 224, 224, 224, 224, 59, 59, 59, 59, 77, 77, 77, 77, 174, 174, 174, 174, 42, 42, 42, 42, 245, 245, 245, 245, 176, 176, 176, 176, 200, 200, 200, 200, 235, 235, 235, 235, 187, 187, 187, 187, 60, 60, 60, 60, 131, 131, 131, 131, 83, 83, 83, 83, 153, 153, 153, 153, 97, 97, 97, 97, 23, 23, 23, 23, 43, 43, 43, 43, 4, 4, 4, 4, 126, 126, 126, 126, 186, 186, 186, 186, 119, 119, 119, 119, 214, 214, 214, 214, 38, 38, 38, 38, 225, 225, 225, 225, 105, 105, 105, 105, 20, 20, 20, 20, 99, 99, 99, 99, 85, 85, 85, 85, 33, 33, 33, 33, 12, 12, 12, 12, 125, 125, 125, 125};
.const .align 8 .b8 rcon[40] = {0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 32, 0, 0, 0, 64, 0, 0, 0, 128, 0, 0, 0, 27, 0, 0, 0, 54};
// m11300_comp$s_td0 has been demoted
// m11300_comp$s_td1 has been demoted
// m11300_comp$s_td2 has been demoted
// m11300_comp$s_td3 has been demoted
// m11300_comp$s_td4 has been demoted
// m11300_comp$s_te0 has been demoted
// m11300_comp$s_te1 has been demoted
// m11300_comp$s_te2 has been demoted
// m11300_comp$s_te3 has been demoted

.entry gpu_decompress(
	.param .u64 .ptr .global .align 4 gpu_decompress_param_0,
	.param .u64 .ptr .global .align 4 gpu_decompress_param_1,
	.param .u64 .ptr .global .align 4 gpu_decompress_param_2,
	.param .u64 gpu_decompress_param_3
)
{
	.local .align 4 .b8 	__local_depot0[260];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<56>;
	.reg .b64 	%rd<45>;


	mov.u64 	%rd44, __local_depot0;
	cvta.local.u64 	%SP, %rd44;
	ld.param.u64 	%rd6, [gpu_decompress_param_0];
	ld.param.u64 	%rd7, [gpu_decompress_param_1];
	ld.param.u64 	%rd8, [gpu_decompress_param_2];
	ld.param.u64 	%rd9, [gpu_decompress_param_3];
	add.u64 	%rd10, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd10;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %ntid.x;
	mov.b32	%r24, %envreg3;
	mad.lo.s32 	%r25, %r22, %r23, %r24;
	mov.u32 	%r26, %tid.x;
	add.s32 	%r27, %r25, %r26;
	cvt.s64.s32	%rd2, %r27;
	setp.ge.u64	%p1, %rd2, %rd9;
	@%p1 bra 	BB0_12;

	mul.lo.s64 	%rd11, %rd2, 12;
	add.s64 	%rd12, %rd6, %rd11;
	ld.global.u32 	%r1, [%rd12];
	ld.global.u32 	%r2, [%rd12+4];
	ld.global.u32 	%r3, [%rd12+8];
	mov.u64 	%rd13, 0;
	st.local.u32 	[%rd1+4], %rd13;
	st.local.u32 	[%rd1], %rd13;
	st.local.u32 	[%rd1+12], %rd13;
	st.local.u32 	[%rd1+8], %rd13;
	st.local.u32 	[%rd1+20], %rd13;
	st.local.u32 	[%rd1+16], %rd13;
	st.local.u32 	[%rd1+28], %rd13;
	st.local.u32 	[%rd1+24], %rd13;
	st.local.u32 	[%rd1+36], %rd13;
	st.local.u32 	[%rd1+32], %rd13;
	st.local.u32 	[%rd1+44], %rd13;
	st.local.u32 	[%rd1+40], %rd13;
	st.local.u32 	[%rd1+52], %rd13;
	st.local.u32 	[%rd1+48], %rd13;
	st.local.u32 	[%rd1+60], %rd13;
	st.local.u32 	[%rd1+56], %rd13;
	st.local.u32 	[%rd1+68], %rd13;
	st.local.u32 	[%rd1+64], %rd13;
	st.local.u32 	[%rd1+76], %rd13;
	st.local.u32 	[%rd1+72], %rd13;
	st.local.u32 	[%rd1+84], %rd13;
	st.local.u32 	[%rd1+80], %rd13;
	st.local.u32 	[%rd1+92], %rd13;
	st.local.u32 	[%rd1+88], %rd13;
	st.local.u32 	[%rd1+100], %rd13;
	st.local.u32 	[%rd1+96], %rd13;
	st.local.u32 	[%rd1+108], %rd13;
	st.local.u32 	[%rd1+104], %rd13;
	st.local.u32 	[%rd1+116], %rd13;
	st.local.u32 	[%rd1+112], %rd13;
	st.local.u32 	[%rd1+124], %rd13;
	st.local.u32 	[%rd1+120], %rd13;
	st.local.u32 	[%rd1+132], %rd13;
	st.local.u32 	[%rd1+128], %rd13;
	st.local.u32 	[%rd1+140], %rd13;
	st.local.u32 	[%rd1+136], %rd13;
	st.local.u32 	[%rd1+148], %rd13;
	st.local.u32 	[%rd1+144], %rd13;
	st.local.u32 	[%rd1+156], %rd13;
	st.local.u32 	[%rd1+152], %rd13;
	st.local.u32 	[%rd1+164], %rd13;
	st.local.u32 	[%rd1+160], %rd13;
	st.local.u32 	[%rd1+172], %rd13;
	st.local.u32 	[%rd1+168], %rd13;
	st.local.u32 	[%rd1+180], %rd13;
	st.local.u32 	[%rd1+176], %rd13;
	st.local.u32 	[%rd1+188], %rd13;
	st.local.u32 	[%rd1+184], %rd13;
	st.local.u32 	[%rd1+196], %rd13;
	st.local.u32 	[%rd1+192], %rd13;
	st.local.u32 	[%rd1+204], %rd13;
	st.local.u32 	[%rd1+200], %rd13;
	st.local.u32 	[%rd1+212], %rd13;
	st.local.u32 	[%rd1+208], %rd13;
	st.local.u32 	[%rd1+220], %rd13;
	st.local.u32 	[%rd1+216], %rd13;
	st.local.u32 	[%rd1+228], %rd13;
	st.local.u32 	[%rd1+224], %rd13;
	st.local.u32 	[%rd1+236], %rd13;
	st.local.u32 	[%rd1+232], %rd13;
	st.local.u32 	[%rd1+244], %rd13;
	st.local.u32 	[%rd1+240], %rd13;
	st.local.u32 	[%rd1+252], %rd13;
	st.local.u32 	[%rd1+248], %rd13;
	setp.eq.s32	%p2, %r2, 0;
	@%p2 bra 	BB0_10;

	and.b32  	%r4, %r2, 3;
	setp.eq.s32	%p3, %r4, 0;
	mov.u32 	%r54, 0;
	@%p3 bra 	BB0_8;

	setp.eq.s32	%p4, %r4, 1;
	mov.u32 	%r50, 0;
	@%p4 bra 	BB0_7;

	setp.eq.s32	%p5, %r4, 2;
	mov.u32 	%r48, 0;
	@%p5 bra 	BB0_6;

	mul.wide.u32 	%rd14, %r1, 4;
	add.s64 	%rd15, %rd7, %rd14;
	ld.global.u32 	%r32, [%rd15];
	st.local.u32 	[%rd1], %r32;
	add.s32 	%r1, %r1, 1;
	mov.u32 	%r48, 1;

BB0_6:
	mul.wide.u32 	%rd16, %r1, 4;
	add.s64 	%rd17, %rd7, %rd16;
	ld.global.u32 	%r33, [%rd17];
	mul.wide.u32 	%rd18, %r48, 4;
	add.s64 	%rd19, %rd1, %rd18;
	st.local.u32 	[%rd19], %r33;
	add.s32 	%r50, %r48, 1;
	add.s32 	%r1, %r1, 1;

BB0_7:
	mul.wide.u32 	%rd20, %r1, 4;
	add.s64 	%rd21, %rd7, %rd20;
	ld.global.u32 	%r34, [%rd21];
	mul.wide.u32 	%rd22, %r50, 4;
	add.s64 	%rd23, %rd1, %rd22;
	st.local.u32 	[%rd23], %r34;
	add.s32 	%r54, %r50, 1;
	add.s32 	%r1, %r1, 1;

BB0_8:
	setp.lt.u32	%p6, %r2, 4;
	@%p6 bra 	BB0_10;

BB0_9:
	mul.wide.u32 	%rd24, %r1, 4;
	add.s64 	%rd25, %rd7, %rd24;
	ld.global.u32 	%r35, [%rd25];
	mul.wide.u32 	%rd26, %r54, 4;
	add.s64 	%rd27, %rd1, %rd26;
	st.local.u32 	[%rd27], %r35;
	add.s32 	%r36, %r1, 1;
	mul.wide.u32 	%rd28, %r36, 4;
	add.s64 	%rd29, %rd7, %rd28;
	ld.global.u32 	%r37, [%rd29];
	add.s32 	%r38, %r54, 1;
	mul.wide.u32 	%rd30, %r38, 4;
	add.s64 	%rd31, %rd1, %rd30;
	st.local.u32 	[%rd31], %r37;
	add.s32 	%r39, %r1, 2;
	mul.wide.u32 	%rd32, %r39, 4;
	add.s64 	%rd33, %rd7, %rd32;
	ld.global.u32 	%r40, [%rd33];
	add.s32 	%r41, %r54, 2;
	mul.wide.u32 	%rd34, %r41, 4;
	add.s64 	%rd35, %rd1, %rd34;
	st.local.u32 	[%rd35], %r40;
	add.s32 	%r42, %r1, 3;
	mul.wide.u32 	%rd36, %r42, 4;
	add.s64 	%rd37, %rd7, %rd36;
	ld.global.u32 	%r43, [%rd37];
	add.s32 	%r44, %r54, 3;
	mul.wide.u32 	%rd38, %r44, 4;
	add.s64 	%rd39, %rd1, %rd38;
	st.local.u32 	[%rd39], %r43;
	add.s32 	%r1, %r1, 4;
	add.s32 	%r54, %r54, 4;
	setp.lt.u32	%p7, %r54, %r2;
	@%p7 bra 	BB0_9;

BB0_10:
	st.local.u32 	[%rd1+256], %r3;
	mul.lo.s64 	%rd40, %rd2, 260;
	add.s64 	%rd5, %rd8, %rd40;
	mov.u32 	%r55, 0;
	mov.pred 	%p8, 0;
	@%p8 bra 	BB0_12;

BB0_11:
	mul.wide.s32 	%rd41, %r55, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.local.u32 	%r46, [%rd42];
	add.s64 	%rd43, %rd5, %rd41;
	st.global.u32 	[%rd43], %r46;
	add.s32 	%r55, %r55, 1;
	setp.lt.u32	%p9, %r55, 65;
	@%p9 bra 	BB0_11;

BB0_12:
	ret;
}

	// .globl	gpu_memset
.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u64 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd2, [gpu_memset_param_0];
	ld.param.u32 	%r1, [gpu_memset_param_1];
	ld.param.u64 	%rd3, [gpu_memset_param_2];
	mov.b32	%r2, %envreg3;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mad.lo.s32 	%r5, %r3, %r4, %r2;
	mov.u32 	%r6, %tid.x;
	add.s32 	%r7, %r5, %r6;
	cvt.s64.s32	%rd1, %r7;
	setp.ge.u64	%p1, %rd1, %rd3;
	@%p1 bra 	BB1_2;

	shl.b64 	%rd4, %rd1, 4;
	add.s64 	%rd5, %rd2, %rd4;
	st.global.v4.u32 	[%rd5], {%r1, %r1, %r1, %r1};

BB1_2:
	ret;
}

	// .globl	gpu_atinit
.entry gpu_atinit(
	.param .u64 .ptr .global .align 4 gpu_atinit_param_0,
	.param .u64 gpu_atinit_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [gpu_atinit_param_0];
	ld.param.u64 	%rd3, [gpu_atinit_param_1];
	mov.b32	%r1, %envreg3;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mad.lo.s32 	%r4, %r2, %r3, %r1;
	mov.u32 	%r5, %tid.x;
	add.s32 	%r6, %r4, %r5;
	cvt.s64.s32	%rd1, %r6;
	setp.ge.u64	%p1, %rd1, %rd3;
	@%p1 bra 	BB2_2;

	cvt.u32.u64	%r7, %rd1;
	shr.u64 	%rd4, %rd1, 32;
	cvt.u32.u64	%r8, %rd4;
	xor.b32  	%r9, %r7, 1549556828;
	xor.b32  	%r10, %r8, 909522486;
	mul.lo.s64 	%rd5, %rd1, 260;
	add.s64 	%rd6, %rd2, %rd5;
	st.global.u32 	[%rd6], %r9;
	st.global.u32 	[%rd6+4], %r10;
	mov.u32 	%r11, 0;
	st.global.u32 	[%rd6+8], %r11;
	st.global.u32 	[%rd6+12], %r11;
	st.global.u32 	[%rd6+16], %r11;
	st.global.u32 	[%rd6+20], %r11;
	st.global.u32 	[%rd6+24], %r11;
	st.global.u32 	[%rd6+28], %r11;
	st.global.u32 	[%rd6+32], %r11;
	st.global.u32 	[%rd6+36], %r11;
	st.global.u32 	[%rd6+40], %r11;
	st.global.u32 	[%rd6+44], %r11;
	st.global.u32 	[%rd6+48], %r11;
	st.global.u32 	[%rd6+52], %r11;
	st.global.u32 	[%rd6+56], %r11;
	st.global.u32 	[%rd6+60], %r11;
	st.global.u32 	[%rd6+64], %r11;
	st.global.u32 	[%rd6+68], %r11;
	st.global.u32 	[%rd6+72], %r11;
	st.global.u32 	[%rd6+76], %r11;
	st.global.u32 	[%rd6+80], %r11;
	st.global.u32 	[%rd6+84], %r11;
	st.global.u32 	[%rd6+88], %r11;
	st.global.u32 	[%rd6+92], %r11;
	st.global.u32 	[%rd6+96], %r11;
	st.global.u32 	[%rd6+100], %r11;
	st.global.u32 	[%rd6+104], %r11;
	st.global.u32 	[%rd6+108], %r11;
	st.global.u32 	[%rd6+112], %r11;
	st.global.u32 	[%rd6+116], %r11;
	st.global.u32 	[%rd6+120], %r11;
	st.global.u32 	[%rd6+124], %r11;
	st.global.u32 	[%rd6+128], %r11;
	st.global.u32 	[%rd6+132], %r11;
	st.global.u32 	[%rd6+136], %r11;
	st.global.u32 	[%rd6+140], %r11;
	st.global.u32 	[%rd6+144], %r11;
	st.global.u32 	[%rd6+148], %r11;
	st.global.u32 	[%rd6+152], %r11;
	st.global.u32 	[%rd6+156], %r11;
	st.global.u32 	[%rd6+160], %r11;
	st.global.u32 	[%rd6+164], %r11;
	st.global.u32 	[%rd6+168], %r11;
	st.global.u32 	[%rd6+172], %r11;
	st.global.u32 	[%rd6+176], %r11;
	st.global.u32 	[%rd6+180], %r11;
	st.global.u32 	[%rd6+184], %r11;
	st.global.u32 	[%rd6+188], %r11;
	st.global.u32 	[%rd6+192], %r11;
	st.global.u32 	[%rd6+196], %r11;
	st.global.u32 	[%rd6+200], %r11;
	st.global.u32 	[%rd6+204], %r11;
	st.global.u32 	[%rd6+208], %r11;
	st.global.u32 	[%rd6+212], %r11;
	st.global.u32 	[%rd6+216], %r11;
	st.global.u32 	[%rd6+220], %r11;
	st.global.u32 	[%rd6+224], %r11;
	st.global.u32 	[%rd6+228], %r11;
	st.global.u32 	[%rd6+232], %r11;
	st.global.u32 	[%rd6+236], %r11;
	st.global.u32 	[%rd6+240], %r11;
	st.global.u32 	[%rd6+244], %r11;
	st.global.u32 	[%rd6+248], %r11;
	st.global.u32 	[%rd6+252], %r11;
	mov.u32 	%r12, 7;
	st.global.u32 	[%rd6+256], %r12;

BB2_2:
	ret;
}

.func sha512_update_128(
	.param .b64 sha512_update_128_param_0,
	.param .b64 sha512_update_128_param_1,
	.param .b64 sha512_update_128_param_2,
	.param .b64 sha512_update_128_param_3,
	.param .b64 sha512_update_128_param_4,
	.param .b64 sha512_update_128_param_5,
	.param .b64 sha512_update_128_param_6,
	.param .b64 sha512_update_128_param_7,
	.param .b64 sha512_update_128_param_8,
	.param .b32 sha512_update_128_param_9
)
{
	.reg .pred 	%p<96>;
	.reg .b32 	%r<9706>;
	.reg .b64 	%rd<2941>;


	ld.param.u64 	%rd10, [sha512_update_128_param_0];
	ld.param.u64 	%rd11, [sha512_update_128_param_1];
	ld.param.u64 	%rd12, [sha512_update_128_param_2];
	ld.param.u64 	%rd13, [sha512_update_128_param_3];
	ld.param.u64 	%rd14, [sha512_update_128_param_4];
	ld.param.u64 	%rd15, [sha512_update_128_param_5];
	ld.param.u64 	%rd16, [sha512_update_128_param_6];
	ld.param.u64 	%rd17, [sha512_update_128_param_7];
	ld.param.u64 	%rd18, [sha512_update_128_param_8];
	ld.param.u32 	%r569, [sha512_update_128_param_9];
	cvta.to.local.u64 	%rd1, %rd12;
	cvta.to.local.u64 	%rd2, %rd13;
	cvta.to.local.u64 	%rd3, %rd14;
	cvta.to.local.u64 	%rd4, %rd15;
	cvta.to.local.u64 	%rd5, %rd16;
	cvta.to.local.u64 	%rd6, %rd17;
	cvta.to.local.u64 	%rd7, %rd18;
	cvta.to.local.u64 	%rd8, %rd11;
	add.s64 	%rd9, %rd10, 192;
	ld.u32 	%r570, [%rd10+192];
	and.b32  	%r571, %r570, 127;
	add.s32 	%r572, %r570, %r569;
	st.u32 	[%rd10+192], %r572;
	add.s32 	%r573, %r571, %r569;
	setp.lt.s32	%p1, %r573, 128;
	bfe.u32 	%r1, %r570, 2, 5;
	and.b32  	%r574, %r570, 3;
	shl.b32 	%r575, %r574, 2;
	mov.u32 	%r576, 1985229328;
	shr.u32 	%r577, %r576, %r575;
	and.b32  	%r2, %r577, 65535;
	@%p1 bra 	BB3_90;
	bra.uni 	BB3_1;

BB3_90:
	setp.gt.s32	%p49, %r1, 15;
	@%p49 bra 	BB3_122;

	setp.gt.s32	%p73, %r1, 7;
	@%p73 bra 	BB3_107;

	setp.gt.s32	%p85, %r1, 3;
	@%p85 bra 	BB3_100;

	setp.gt.s32	%p91, %r1, 1;
	@%p91 bra 	BB3_97;

	setp.eq.s32	%p94, %r1, 0;
	@%p94 bra 	BB3_168;
	bra.uni 	BB3_95;

BB3_168:
	ld.local.u32 	%r9450, [%rd7+12];
	ld.local.u32 	%r9451, [%rd7+8];
	// inline asm
	prmt.b32 %r9449, %r9450, %r9451, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r9449;
	ld.local.u32 	%r9455, [%rd7+4];
	// inline asm
	prmt.b32 %r9453, %r9451, %r9455, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r9453;
	ld.local.u32 	%r9459, [%rd7];
	// inline asm
	prmt.b32 %r9457, %r9455, %r9459, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r9457;
	ld.local.u32 	%r9463, [%rd6+12];
	// inline asm
	prmt.b32 %r9461, %r9459, %r9463, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r9461;
	ld.local.u32 	%r9466, [%rd6+12];
	ld.local.u32 	%r9467, [%rd6+8];
	// inline asm
	prmt.b32 %r9465, %r9466, %r9467, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r9465;
	ld.local.u32 	%r9471, [%rd6+4];
	// inline asm
	prmt.b32 %r9469, %r9467, %r9471, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r9469;
	ld.local.u32 	%r9475, [%rd6];
	// inline asm
	prmt.b32 %r9473, %r9471, %r9475, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r9473;
	ld.local.u32 	%r9479, [%rd5+12];
	// inline asm
	prmt.b32 %r9477, %r9475, %r9479, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r9477;
	ld.local.u32 	%r9482, [%rd5+12];
	ld.local.u32 	%r9483, [%rd5+8];
	// inline asm
	prmt.b32 %r9481, %r9482, %r9483, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r9481;
	ld.local.u32 	%r9487, [%rd5+4];
	// inline asm
	prmt.b32 %r9485, %r9483, %r9487, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r9485;
	ld.local.u32 	%r9491, [%rd5];
	// inline asm
	prmt.b32 %r9489, %r9487, %r9491, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r9489;
	ld.local.u32 	%r9495, [%rd4+12];
	// inline asm
	prmt.b32 %r9493, %r9491, %r9495, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r9493;
	ld.local.u32 	%r9498, [%rd4+12];
	ld.local.u32 	%r9499, [%rd4+8];
	// inline asm
	prmt.b32 %r9497, %r9498, %r9499, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r9497;
	ld.local.u32 	%r9503, [%rd4+4];
	// inline asm
	prmt.b32 %r9501, %r9499, %r9503, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r9501;
	ld.local.u32 	%r9507, [%rd4];
	// inline asm
	prmt.b32 %r9505, %r9503, %r9507, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r9505;
	ld.local.u32 	%r9511, [%rd3+12];
	// inline asm
	prmt.b32 %r9509, %r9507, %r9511, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r9509;
	ld.local.u32 	%r9514, [%rd3+12];
	ld.local.u32 	%r9515, [%rd3+8];
	// inline asm
	prmt.b32 %r9513, %r9514, %r9515, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r9513;
	ld.local.u32 	%r9519, [%rd3+4];
	// inline asm
	prmt.b32 %r9517, %r9515, %r9519, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r9517;
	ld.local.u32 	%r9523, [%rd3];
	// inline asm
	prmt.b32 %r9521, %r9519, %r9523, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r9521;
	ld.local.u32 	%r9527, [%rd2+12];
	// inline asm
	prmt.b32 %r9525, %r9523, %r9527, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r9525;
	ld.local.u32 	%r9530, [%rd2+12];
	ld.local.u32 	%r9531, [%rd2+8];
	// inline asm
	prmt.b32 %r9529, %r9530, %r9531, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r9529;
	ld.local.u32 	%r9535, [%rd2+4];
	// inline asm
	prmt.b32 %r9533, %r9531, %r9535, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r9533;
	ld.local.u32 	%r9539, [%rd2];
	// inline asm
	prmt.b32 %r9537, %r9535, %r9539, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r9537;
	ld.local.u32 	%r9543, [%rd1+12];
	// inline asm
	prmt.b32 %r9541, %r9539, %r9543, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r9541;
	ld.local.u32 	%r9546, [%rd1+12];
	ld.local.u32 	%r9547, [%rd1+8];
	// inline asm
	prmt.b32 %r9545, %r9546, %r9547, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r9545;
	ld.local.u32 	%r9551, [%rd1+4];
	// inline asm
	prmt.b32 %r9549, %r9547, %r9551, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r9549;
	ld.local.u32 	%r9555, [%rd1];
	// inline asm
	prmt.b32 %r9553, %r9551, %r9555, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r9553;
	ld.local.u32 	%r9559, [%rd8+12];
	// inline asm
	prmt.b32 %r9557, %r9555, %r9559, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r9557;
	ld.local.u32 	%r9562, [%rd8+12];
	ld.local.u32 	%r9563, [%rd8+8];
	// inline asm
	prmt.b32 %r9561, %r9562, %r9563, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r9561;
	ld.local.u32 	%r9567, [%rd8+4];
	// inline asm
	prmt.b32 %r9565, %r9563, %r9567, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r9565;
	ld.local.u32 	%r9571, [%rd8];
	// inline asm
	prmt.b32 %r9569, %r9567, %r9571, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r9569;
	mov.u32 	%r9575, 0;
	// inline asm
	prmt.b32 %r9705, %r9571, %r9575, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r9705;
	bra.uni 	BB3_170;

BB3_1:
	setp.gt.s32	%p2, %r1, 15;
	@%p2 bra 	BB3_33;

	setp.gt.s32	%p26, %r1, 7;
	@%p26 bra 	BB3_18;

	setp.gt.s32	%p38, %r1, 3;
	@%p38 bra 	BB3_11;

	setp.gt.s32	%p44, %r1, 1;
	@%p44 bra 	BB3_8;

	setp.eq.s32	%p47, %r1, 0;
	@%p47 bra 	BB3_86;
	bra.uni 	BB3_6;

BB3_86:
	ld.local.u32 	%r5168, [%rd7+12];
	mov.u32 	%r9673, 0;
	// inline asm
	prmt.b32 %r9676, %r9673, %r5168, %r2;
	// inline asm
	ld.local.u32 	%r5172, [%rd7+8];
	// inline asm
	prmt.b32 %r5170, %r5168, %r5172, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r5170;
	ld.local.u32 	%r5176, [%rd7+4];
	// inline asm
	prmt.b32 %r5174, %r5172, %r5176, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r5174;
	ld.local.u32 	%r5180, [%rd7];
	// inline asm
	prmt.b32 %r5178, %r5176, %r5180, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r5178;
	ld.local.u32 	%r5184, [%rd6+12];
	// inline asm
	prmt.b32 %r5182, %r5180, %r5184, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r5182;
	ld.local.u32 	%r5187, [%rd6+12];
	ld.local.u32 	%r5188, [%rd6+8];
	// inline asm
	prmt.b32 %r5186, %r5187, %r5188, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r5186;
	ld.local.u32 	%r5192, [%rd6+4];
	// inline asm
	prmt.b32 %r5190, %r5188, %r5192, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r5190;
	ld.local.u32 	%r5196, [%rd6];
	// inline asm
	prmt.b32 %r5194, %r5192, %r5196, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r5194;
	ld.local.u32 	%r5200, [%rd5+12];
	// inline asm
	prmt.b32 %r5198, %r5196, %r5200, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r5198;
	ld.local.u32 	%r5203, [%rd5+12];
	ld.local.u32 	%r5204, [%rd5+8];
	// inline asm
	prmt.b32 %r5202, %r5203, %r5204, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r5202;
	ld.local.u32 	%r5208, [%rd5+4];
	// inline asm
	prmt.b32 %r5206, %r5204, %r5208, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r5206;
	ld.local.u32 	%r5212, [%rd5];
	// inline asm
	prmt.b32 %r5210, %r5208, %r5212, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r5210;
	ld.local.u32 	%r5216, [%rd4+12];
	// inline asm
	prmt.b32 %r5214, %r5212, %r5216, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r5214;
	ld.local.u32 	%r5219, [%rd4+12];
	ld.local.u32 	%r5220, [%rd4+8];
	// inline asm
	prmt.b32 %r5218, %r5219, %r5220, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r5218;
	ld.local.u32 	%r5224, [%rd4+4];
	// inline asm
	prmt.b32 %r5222, %r5220, %r5224, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r5222;
	ld.local.u32 	%r5228, [%rd4];
	// inline asm
	prmt.b32 %r5226, %r5224, %r5228, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r5226;
	ld.local.u32 	%r5232, [%rd3+12];
	// inline asm
	prmt.b32 %r5230, %r5228, %r5232, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r5230;
	ld.local.u32 	%r5235, [%rd3+12];
	ld.local.u32 	%r5236, [%rd3+8];
	// inline asm
	prmt.b32 %r5234, %r5235, %r5236, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r5234;
	ld.local.u32 	%r5240, [%rd3+4];
	// inline asm
	prmt.b32 %r5238, %r5236, %r5240, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r5238;
	ld.local.u32 	%r5244, [%rd3];
	// inline asm
	prmt.b32 %r5242, %r5240, %r5244, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r5242;
	ld.local.u32 	%r5248, [%rd2+12];
	// inline asm
	prmt.b32 %r5246, %r5244, %r5248, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r5246;
	ld.local.u32 	%r5251, [%rd2+12];
	ld.local.u32 	%r5252, [%rd2+8];
	// inline asm
	prmt.b32 %r5250, %r5251, %r5252, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r5250;
	ld.local.u32 	%r5256, [%rd2+4];
	// inline asm
	prmt.b32 %r5254, %r5252, %r5256, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r5254;
	ld.local.u32 	%r5260, [%rd2];
	// inline asm
	prmt.b32 %r5258, %r5256, %r5260, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r5258;
	ld.local.u32 	%r5264, [%rd1+12];
	// inline asm
	prmt.b32 %r5262, %r5260, %r5264, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r5262;
	ld.local.u32 	%r5267, [%rd1+12];
	ld.local.u32 	%r5268, [%rd1+8];
	// inline asm
	prmt.b32 %r5266, %r5267, %r5268, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r5266;
	ld.local.u32 	%r5272, [%rd1+4];
	// inline asm
	prmt.b32 %r5270, %r5268, %r5272, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r5270;
	ld.local.u32 	%r5276, [%rd1];
	// inline asm
	prmt.b32 %r5274, %r5272, %r5276, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r5274;
	ld.local.u32 	%r5280, [%rd8+12];
	// inline asm
	prmt.b32 %r5278, %r5276, %r5280, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r5278;
	ld.local.u32 	%r5283, [%rd8+12];
	ld.local.u32 	%r5284, [%rd8+8];
	// inline asm
	prmt.b32 %r5282, %r5283, %r5284, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r5282;
	ld.local.u32 	%r5288, [%rd8+4];
	// inline asm
	prmt.b32 %r5286, %r5284, %r5288, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r5286;
	ld.local.u32 	%r5292, [%rd8];
	// inline asm
	prmt.b32 %r5290, %r5288, %r5292, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r5290;
	// inline asm
	prmt.b32 %r9672, %r5292, %r9673, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r9672;
	mov.u32 	%r9674, %r9673;
	mov.u32 	%r9675, %r9673;
	bra.uni 	BB3_88;

BB3_122:
	setp.gt.s32	%p50, %r1, 23;
	@%p50 bra 	BB3_138;

	setp.gt.s32	%p62, %r1, 19;
	@%p62 bra 	BB3_131;

	setp.gt.s32	%p68, %r1, 17;
	@%p68 bra 	BB3_128;

	setp.eq.s32	%p71, %r1, 16;
	@%p71 bra 	BB3_160;
	bra.uni 	BB3_126;

BB3_160:
	ld.local.u32 	%r7930, [%rd3+12];
	ld.local.u32 	%r7931, [%rd3+8];
	// inline asm
	prmt.b32 %r7929, %r7930, %r7931, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7929;
	ld.local.u32 	%r7934, [%rd3+8];
	ld.local.u32 	%r7935, [%rd3+4];
	// inline asm
	prmt.b32 %r7933, %r7934, %r7935, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7933;
	ld.local.u32 	%r7938, [%rd3+4];
	ld.local.u32 	%r7939, [%rd3];
	// inline asm
	prmt.b32 %r7937, %r7938, %r7939, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7937;
	ld.local.u32 	%r7942, [%rd3];
	ld.local.u32 	%r7943, [%rd2+12];
	// inline asm
	prmt.b32 %r7941, %r7942, %r7943, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7941;
	ld.local.u32 	%r7946, [%rd2+12];
	ld.local.u32 	%r7947, [%rd2+8];
	// inline asm
	prmt.b32 %r7945, %r7946, %r7947, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7945;
	ld.local.u32 	%r7950, [%rd2+8];
	ld.local.u32 	%r7951, [%rd2+4];
	// inline asm
	prmt.b32 %r7949, %r7950, %r7951, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7949;
	ld.local.u32 	%r7954, [%rd2+4];
	ld.local.u32 	%r7955, [%rd2];
	// inline asm
	prmt.b32 %r7953, %r7954, %r7955, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7953;
	ld.local.u32 	%r7958, [%rd2];
	ld.local.u32 	%r7959, [%rd1+12];
	// inline asm
	prmt.b32 %r7957, %r7958, %r7959, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7957;
	ld.local.u32 	%r7962, [%rd1+12];
	ld.local.u32 	%r7963, [%rd1+8];
	// inline asm
	prmt.b32 %r7961, %r7962, %r7963, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7961;
	ld.local.u32 	%r7966, [%rd1+8];
	ld.local.u32 	%r7967, [%rd1+4];
	// inline asm
	prmt.b32 %r7965, %r7966, %r7967, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7965;
	ld.local.u32 	%r7970, [%rd1+4];
	ld.local.u32 	%r7971, [%rd1];
	// inline asm
	prmt.b32 %r7969, %r7970, %r7971, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7969;
	ld.local.u32 	%r7974, [%rd1];
	ld.local.u32 	%r7975, [%rd8+12];
	// inline asm
	prmt.b32 %r7973, %r7974, %r7975, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7973;
	ld.local.u32 	%r7978, [%rd8+12];
	ld.local.u32 	%r7979, [%rd8+8];
	// inline asm
	prmt.b32 %r7977, %r7978, %r7979, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7977;
	ld.local.u32 	%r7982, [%rd8+8];
	ld.local.u32 	%r7983, [%rd8+4];
	// inline asm
	prmt.b32 %r7981, %r7982, %r7983, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7981;
	ld.local.u32 	%r7986, [%rd8+4];
	ld.local.u32 	%r7987, [%rd8];
	// inline asm
	prmt.b32 %r7985, %r7986, %r7987, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7985;
	ld.local.u32 	%r7990, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7989, %r7990, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7989;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2927, 0;
	st.local.u32 	[%rd8+4], %rd2927;
	st.local.u32 	[%rd8], %rd2927;
	bra.uni 	BB3_170;

BB3_33:
	setp.gt.s32	%p3, %r1, 23;
	@%p3 bra 	BB3_49;

	setp.gt.s32	%p15, %r1, 19;
	@%p15 bra 	BB3_42;

	setp.gt.s32	%p21, %r1, 17;
	@%p21 bra 	BB3_39;

	setp.eq.s32	%p24, %r1, 16;
	@%p24 bra 	BB3_71;
	bra.uni 	BB3_37;

BB3_71:
	ld.local.u32 	%r2680, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9692, %r9672, %r2680, %r2;
	// inline asm
	ld.local.u32 	%r2684, [%rd7+8];
	// inline asm
	prmt.b32 %r9685, %r2680, %r2684, %r2;
	// inline asm
	ld.local.u32 	%r2688, [%rd7+4];
	// inline asm
	prmt.b32 %r9686, %r2684, %r2688, %r2;
	// inline asm
	ld.local.u32 	%r2692, [%rd7];
	// inline asm
	prmt.b32 %r9687, %r2688, %r2692, %r2;
	// inline asm
	ld.local.u32 	%r2696, [%rd6+12];
	// inline asm
	prmt.b32 %r9688, %r2692, %r2696, %r2;
	// inline asm
	ld.local.u32 	%r2700, [%rd6+8];
	// inline asm
	prmt.b32 %r9681, %r2696, %r2700, %r2;
	// inline asm
	ld.local.u32 	%r2704, [%rd6+4];
	// inline asm
	prmt.b32 %r9682, %r2700, %r2704, %r2;
	// inline asm
	ld.local.u32 	%r2708, [%rd6];
	// inline asm
	prmt.b32 %r9683, %r2704, %r2708, %r2;
	// inline asm
	ld.local.u32 	%r2712, [%rd5+12];
	// inline asm
	prmt.b32 %r9684, %r2708, %r2712, %r2;
	// inline asm
	ld.local.u32 	%r2716, [%rd5+8];
	// inline asm
	prmt.b32 %r9677, %r2712, %r2716, %r2;
	// inline asm
	ld.local.u32 	%r2720, [%rd5+4];
	// inline asm
	prmt.b32 %r9678, %r2716, %r2720, %r2;
	// inline asm
	ld.local.u32 	%r2724, [%rd5];
	// inline asm
	prmt.b32 %r9679, %r2720, %r2724, %r2;
	// inline asm
	ld.local.u32 	%r2728, [%rd4+12];
	// inline asm
	prmt.b32 %r9680, %r2724, %r2728, %r2;
	// inline asm
	ld.local.u32 	%r2732, [%rd4+8];
	// inline asm
	prmt.b32 %r9673, %r2728, %r2732, %r2;
	// inline asm
	ld.local.u32 	%r2736, [%rd4+4];
	// inline asm
	prmt.b32 %r9674, %r2732, %r2736, %r2;
	// inline asm
	ld.local.u32 	%r2740, [%rd4];
	// inline asm
	prmt.b32 %r9675, %r2736, %r2740, %r2;
	// inline asm
	ld.local.u32 	%r2744, [%rd3+12];
	// inline asm
	prmt.b32 %r9676, %r2740, %r2744, %r2;
	// inline asm
	ld.local.u32 	%r2748, [%rd3+8];
	// inline asm
	prmt.b32 %r2746, %r2744, %r2748, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2746;
	ld.local.u32 	%r2751, [%rd3+8];
	ld.local.u32 	%r2752, [%rd3+4];
	// inline asm
	prmt.b32 %r2750, %r2751, %r2752, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2750;
	ld.local.u32 	%r2755, [%rd3+4];
	ld.local.u32 	%r2756, [%rd3];
	// inline asm
	prmt.b32 %r2754, %r2755, %r2756, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2754;
	ld.local.u32 	%r2759, [%rd3];
	ld.local.u32 	%r2760, [%rd2+12];
	// inline asm
	prmt.b32 %r2758, %r2759, %r2760, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2758;
	ld.local.u32 	%r2763, [%rd2+12];
	ld.local.u32 	%r2764, [%rd2+8];
	// inline asm
	prmt.b32 %r2762, %r2763, %r2764, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2762;
	ld.local.u32 	%r2767, [%rd2+8];
	ld.local.u32 	%r2768, [%rd2+4];
	// inline asm
	prmt.b32 %r2766, %r2767, %r2768, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2766;
	ld.local.u32 	%r2771, [%rd2+4];
	ld.local.u32 	%r2772, [%rd2];
	// inline asm
	prmt.b32 %r2770, %r2771, %r2772, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2770;
	ld.local.u32 	%r2775, [%rd2];
	ld.local.u32 	%r2776, [%rd1+12];
	// inline asm
	prmt.b32 %r2774, %r2775, %r2776, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2774;
	ld.local.u32 	%r2779, [%rd1+12];
	ld.local.u32 	%r2780, [%rd1+8];
	// inline asm
	prmt.b32 %r2778, %r2779, %r2780, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2778;
	ld.local.u32 	%r2783, [%rd1+8];
	ld.local.u32 	%r2784, [%rd1+4];
	// inline asm
	prmt.b32 %r2782, %r2783, %r2784, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2782;
	ld.local.u32 	%r2787, [%rd1+4];
	ld.local.u32 	%r2788, [%rd1];
	// inline asm
	prmt.b32 %r2786, %r2787, %r2788, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2786;
	ld.local.u32 	%r2791, [%rd1];
	ld.local.u32 	%r2792, [%rd8+12];
	// inline asm
	prmt.b32 %r2790, %r2791, %r2792, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r2790;
	ld.local.u32 	%r2795, [%rd8+12];
	ld.local.u32 	%r2796, [%rd8+8];
	// inline asm
	prmt.b32 %r2794, %r2795, %r2796, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r2794;
	ld.local.u32 	%r2799, [%rd8+8];
	ld.local.u32 	%r2800, [%rd8+4];
	// inline asm
	prmt.b32 %r2798, %r2799, %r2800, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r2798;
	ld.local.u32 	%r2803, [%rd8+4];
	ld.local.u32 	%r2804, [%rd8];
	// inline asm
	prmt.b32 %r2802, %r2803, %r2804, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r2802;
	ld.local.u32 	%r2807, [%rd8];
	// inline asm
	prmt.b32 %r2806, %r2807, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r2806;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd34, 0;
	st.local.u32 	[%rd8+4], %rd34;
	st.local.u32 	[%rd8], %rd34;
	mov.u32 	%r9689, %r9672;
	mov.u32 	%r9690, %r9672;
	mov.u32 	%r9691, %r9672;
	bra.uni 	BB3_83;

BB3_107:
	setp.gt.s32	%p74, %r1, 11;
	@%p74 bra 	BB3_115;

	setp.gt.s32	%p80, %r1, 9;
	@%p80 bra 	BB3_112;

	setp.eq.s32	%p83, %r1, 8;
	@%p83 bra 	BB3_164;
	bra.uni 	BB3_110;

BB3_164:
	ld.local.u32 	%r8562, [%rd5+12];
	ld.local.u32 	%r8563, [%rd5+8];
	// inline asm
	prmt.b32 %r8561, %r8562, %r8563, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8561;
	ld.local.u32 	%r8566, [%rd5+8];
	ld.local.u32 	%r8567, [%rd5+4];
	// inline asm
	prmt.b32 %r8565, %r8566, %r8567, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8565;
	ld.local.u32 	%r8570, [%rd5+4];
	ld.local.u32 	%r8571, [%rd5];
	// inline asm
	prmt.b32 %r8569, %r8570, %r8571, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8569;
	ld.local.u32 	%r8574, [%rd5];
	ld.local.u32 	%r8575, [%rd4+12];
	// inline asm
	prmt.b32 %r8573, %r8574, %r8575, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8573;
	ld.local.u32 	%r8578, [%rd4+12];
	ld.local.u32 	%r8579, [%rd4+8];
	// inline asm
	prmt.b32 %r8577, %r8578, %r8579, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8577;
	ld.local.u32 	%r8582, [%rd4+8];
	ld.local.u32 	%r8583, [%rd4+4];
	// inline asm
	prmt.b32 %r8581, %r8582, %r8583, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8581;
	ld.local.u32 	%r8586, [%rd4+4];
	ld.local.u32 	%r8587, [%rd4];
	// inline asm
	prmt.b32 %r8585, %r8586, %r8587, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8585;
	ld.local.u32 	%r8590, [%rd4];
	ld.local.u32 	%r8591, [%rd3+12];
	// inline asm
	prmt.b32 %r8589, %r8590, %r8591, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8589;
	ld.local.u32 	%r8594, [%rd3+12];
	ld.local.u32 	%r8595, [%rd3+8];
	// inline asm
	prmt.b32 %r8593, %r8594, %r8595, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8593;
	ld.local.u32 	%r8598, [%rd3+8];
	ld.local.u32 	%r8599, [%rd3+4];
	// inline asm
	prmt.b32 %r8597, %r8598, %r8599, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8597;
	ld.local.u32 	%r8602, [%rd3+4];
	ld.local.u32 	%r8603, [%rd3];
	// inline asm
	prmt.b32 %r8601, %r8602, %r8603, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8601;
	ld.local.u32 	%r8606, [%rd3];
	ld.local.u32 	%r8607, [%rd2+12];
	// inline asm
	prmt.b32 %r8605, %r8606, %r8607, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8605;
	ld.local.u32 	%r8610, [%rd2+12];
	ld.local.u32 	%r8611, [%rd2+8];
	// inline asm
	prmt.b32 %r8609, %r8610, %r8611, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8609;
	ld.local.u32 	%r8614, [%rd2+8];
	ld.local.u32 	%r8615, [%rd2+4];
	// inline asm
	prmt.b32 %r8613, %r8614, %r8615, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8613;
	ld.local.u32 	%r8618, [%rd2+4];
	ld.local.u32 	%r8619, [%rd2];
	// inline asm
	prmt.b32 %r8617, %r8618, %r8619, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8617;
	ld.local.u32 	%r8622, [%rd2];
	ld.local.u32 	%r8623, [%rd1+12];
	// inline asm
	prmt.b32 %r8621, %r8622, %r8623, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8621;
	ld.local.u32 	%r8626, [%rd1+12];
	ld.local.u32 	%r8627, [%rd1+8];
	// inline asm
	prmt.b32 %r8625, %r8626, %r8627, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8625;
	ld.local.u32 	%r8630, [%rd1+8];
	ld.local.u32 	%r8631, [%rd1+4];
	// inline asm
	prmt.b32 %r8629, %r8630, %r8631, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8629;
	ld.local.u32 	%r8634, [%rd1+4];
	ld.local.u32 	%r8635, [%rd1];
	// inline asm
	prmt.b32 %r8633, %r8634, %r8635, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8633;
	ld.local.u32 	%r8638, [%rd1];
	ld.local.u32 	%r8639, [%rd8+12];
	// inline asm
	prmt.b32 %r8637, %r8638, %r8639, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8637;
	ld.local.u32 	%r8642, [%rd8+12];
	ld.local.u32 	%r8643, [%rd8+8];
	// inline asm
	prmt.b32 %r8641, %r8642, %r8643, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8641;
	ld.local.u32 	%r8646, [%rd8+8];
	ld.local.u32 	%r8647, [%rd8+4];
	// inline asm
	prmt.b32 %r8645, %r8646, %r8647, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8645;
	ld.local.u32 	%r8650, [%rd8+4];
	ld.local.u32 	%r8651, [%rd8];
	// inline asm
	prmt.b32 %r8649, %r8650, %r8651, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r8649;
	ld.local.u32 	%r8654, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8653, %r8654, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r8653;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2935, 0;
	st.local.u32 	[%rd8+4], %rd2935;
	st.local.u32 	[%rd8], %rd2935;
	bra.uni 	BB3_170;

BB3_18:
	setp.gt.s32	%p27, %r1, 11;
	@%p27 bra 	BB3_26;

	setp.gt.s32	%p33, %r1, 9;
	@%p33 bra 	BB3_23;

	setp.eq.s32	%p36, %r1, 8;
	@%p36 bra 	BB3_75;
	bra.uni 	BB3_21;

BB3_75:
	ld.local.u32 	%r3892, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9684, %r9672, %r3892, %r2;
	// inline asm
	ld.local.u32 	%r3896, [%rd7+8];
	// inline asm
	prmt.b32 %r9677, %r3892, %r3896, %r2;
	// inline asm
	ld.local.u32 	%r3900, [%rd7+4];
	// inline asm
	prmt.b32 %r9678, %r3896, %r3900, %r2;
	// inline asm
	ld.local.u32 	%r3904, [%rd7];
	// inline asm
	prmt.b32 %r9679, %r3900, %r3904, %r2;
	// inline asm
	ld.local.u32 	%r3908, [%rd6+12];
	// inline asm
	prmt.b32 %r9680, %r3904, %r3908, %r2;
	// inline asm
	ld.local.u32 	%r3912, [%rd6+8];
	// inline asm
	prmt.b32 %r9673, %r3908, %r3912, %r2;
	// inline asm
	ld.local.u32 	%r3916, [%rd6+4];
	// inline asm
	prmt.b32 %r9674, %r3912, %r3916, %r2;
	// inline asm
	ld.local.u32 	%r3920, [%rd6];
	// inline asm
	prmt.b32 %r9675, %r3916, %r3920, %r2;
	// inline asm
	ld.local.u32 	%r3924, [%rd5+12];
	// inline asm
	prmt.b32 %r9676, %r3920, %r3924, %r2;
	// inline asm
	ld.local.u32 	%r3928, [%rd5+8];
	// inline asm
	prmt.b32 %r3926, %r3924, %r3928, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3926;
	ld.local.u32 	%r3931, [%rd5+8];
	ld.local.u32 	%r3932, [%rd5+4];
	// inline asm
	prmt.b32 %r3930, %r3931, %r3932, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3930;
	ld.local.u32 	%r3935, [%rd5+4];
	ld.local.u32 	%r3936, [%rd5];
	// inline asm
	prmt.b32 %r3934, %r3935, %r3936, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3934;
	ld.local.u32 	%r3939, [%rd5];
	ld.local.u32 	%r3940, [%rd4+12];
	// inline asm
	prmt.b32 %r3938, %r3939, %r3940, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3938;
	ld.local.u32 	%r3943, [%rd4+12];
	ld.local.u32 	%r3944, [%rd4+8];
	// inline asm
	prmt.b32 %r3942, %r3943, %r3944, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3942;
	ld.local.u32 	%r3947, [%rd4+8];
	ld.local.u32 	%r3948, [%rd4+4];
	// inline asm
	prmt.b32 %r3946, %r3947, %r3948, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3946;
	ld.local.u32 	%r3951, [%rd4+4];
	ld.local.u32 	%r3952, [%rd4];
	// inline asm
	prmt.b32 %r3950, %r3951, %r3952, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3950;
	ld.local.u32 	%r3955, [%rd4];
	ld.local.u32 	%r3956, [%rd3+12];
	// inline asm
	prmt.b32 %r3954, %r3955, %r3956, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3954;
	ld.local.u32 	%r3959, [%rd3+12];
	ld.local.u32 	%r3960, [%rd3+8];
	// inline asm
	prmt.b32 %r3958, %r3959, %r3960, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3958;
	ld.local.u32 	%r3963, [%rd3+8];
	ld.local.u32 	%r3964, [%rd3+4];
	// inline asm
	prmt.b32 %r3962, %r3963, %r3964, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3962;
	ld.local.u32 	%r3967, [%rd3+4];
	ld.local.u32 	%r3968, [%rd3];
	// inline asm
	prmt.b32 %r3966, %r3967, %r3968, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3966;
	ld.local.u32 	%r3971, [%rd3];
	ld.local.u32 	%r3972, [%rd2+12];
	// inline asm
	prmt.b32 %r3970, %r3971, %r3972, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3970;
	ld.local.u32 	%r3975, [%rd2+12];
	ld.local.u32 	%r3976, [%rd2+8];
	// inline asm
	prmt.b32 %r3974, %r3975, %r3976, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3974;
	ld.local.u32 	%r3979, [%rd2+8];
	ld.local.u32 	%r3980, [%rd2+4];
	// inline asm
	prmt.b32 %r3978, %r3979, %r3980, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3978;
	ld.local.u32 	%r3983, [%rd2+4];
	ld.local.u32 	%r3984, [%rd2];
	// inline asm
	prmt.b32 %r3982, %r3983, %r3984, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3982;
	ld.local.u32 	%r3987, [%rd2];
	ld.local.u32 	%r3988, [%rd1+12];
	// inline asm
	prmt.b32 %r3986, %r3987, %r3988, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3986;
	ld.local.u32 	%r3991, [%rd1+12];
	ld.local.u32 	%r3992, [%rd1+8];
	// inline asm
	prmt.b32 %r3990, %r3991, %r3992, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3990;
	ld.local.u32 	%r3995, [%rd1+8];
	ld.local.u32 	%r3996, [%rd1+4];
	// inline asm
	prmt.b32 %r3994, %r3995, %r3996, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3994;
	ld.local.u32 	%r3999, [%rd1+4];
	ld.local.u32 	%r4000, [%rd1];
	// inline asm
	prmt.b32 %r3998, %r3999, %r4000, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r3998;
	ld.local.u32 	%r4003, [%rd1];
	ld.local.u32 	%r4004, [%rd8+12];
	// inline asm
	prmt.b32 %r4002, %r4003, %r4004, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4002;
	ld.local.u32 	%r4007, [%rd8+12];
	ld.local.u32 	%r4008, [%rd8+8];
	// inline asm
	prmt.b32 %r4006, %r4007, %r4008, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4006;
	ld.local.u32 	%r4011, [%rd8+8];
	ld.local.u32 	%r4012, [%rd8+4];
	// inline asm
	prmt.b32 %r4010, %r4011, %r4012, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4010;
	ld.local.u32 	%r4015, [%rd8+4];
	ld.local.u32 	%r4016, [%rd8];
	// inline asm
	prmt.b32 %r4014, %r4015, %r4016, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4014;
	ld.local.u32 	%r4019, [%rd8];
	// inline asm
	prmt.b32 %r4018, %r4019, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4018;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd42, 0;
	st.local.u32 	[%rd8+4], %rd42;
	st.local.u32 	[%rd8], %rd42;
	mov.u32 	%r9681, %r9672;
	mov.u32 	%r9682, %r9672;
	mov.u32 	%r9683, %r9672;
	bra.uni 	BB3_81;

BB3_138:
	setp.gt.s32	%p51, %r1, 27;
	@%p51 bra 	BB3_146;

	setp.gt.s32	%p57, %r1, 25;
	@%p57 bra 	BB3_143;

	setp.eq.s32	%p60, %r1, 24;
	@%p60 bra 	BB3_156;
	bra.uni 	BB3_141;

BB3_156:
	ld.local.u32 	%r7554, [%rd1+12];
	ld.local.u32 	%r7555, [%rd1+8];
	// inline asm
	prmt.b32 %r7553, %r7554, %r7555, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7553;
	ld.local.u32 	%r7558, [%rd1+8];
	ld.local.u32 	%r7559, [%rd1+4];
	// inline asm
	prmt.b32 %r7557, %r7558, %r7559, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7557;
	ld.local.u32 	%r7562, [%rd1+4];
	ld.local.u32 	%r7563, [%rd1];
	// inline asm
	prmt.b32 %r7561, %r7562, %r7563, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7561;
	ld.local.u32 	%r7566, [%rd1];
	ld.local.u32 	%r7567, [%rd8+12];
	// inline asm
	prmt.b32 %r7565, %r7566, %r7567, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7565;
	ld.local.u32 	%r7570, [%rd8+12];
	ld.local.u32 	%r7571, [%rd8+8];
	// inline asm
	prmt.b32 %r7569, %r7570, %r7571, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7569;
	ld.local.u32 	%r7574, [%rd8+8];
	ld.local.u32 	%r7575, [%rd8+4];
	// inline asm
	prmt.b32 %r7573, %r7574, %r7575, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7573;
	ld.local.u32 	%r7578, [%rd8+4];
	ld.local.u32 	%r7579, [%rd8];
	// inline asm
	prmt.b32 %r7577, %r7578, %r7579, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7577;
	ld.local.u32 	%r7582, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7581, %r7582, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7581;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2919, 0;
	st.local.u32 	[%rd8+4], %rd2919;
	st.local.u32 	[%rd8], %rd2919;
	bra.uni 	BB3_170;

BB3_49:
	setp.gt.s32	%p4, %r1, 27;
	@%p4 bra 	BB3_57;

	setp.gt.s32	%p10, %r1, 25;
	@%p10 bra 	BB3_54;

	setp.eq.s32	%p13, %r1, 24;
	@%p13 bra 	BB3_67;
	bra.uni 	BB3_52;

BB3_67:
	ld.local.u32 	%r1532, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9700, %r9672, %r1532, %r2;
	// inline asm
	ld.local.u32 	%r1536, [%rd7+8];
	// inline asm
	prmt.b32 %r9693, %r1532, %r1536, %r2;
	// inline asm
	ld.local.u32 	%r1540, [%rd7+4];
	// inline asm
	prmt.b32 %r9694, %r1536, %r1540, %r2;
	// inline asm
	ld.local.u32 	%r1544, [%rd7];
	// inline asm
	prmt.b32 %r9695, %r1540, %r1544, %r2;
	// inline asm
	ld.local.u32 	%r1548, [%rd6+12];
	// inline asm
	prmt.b32 %r9696, %r1544, %r1548, %r2;
	// inline asm
	ld.local.u32 	%r1552, [%rd6+8];
	// inline asm
	prmt.b32 %r9689, %r1548, %r1552, %r2;
	// inline asm
	ld.local.u32 	%r1556, [%rd6+4];
	// inline asm
	prmt.b32 %r9690, %r1552, %r1556, %r2;
	// inline asm
	ld.local.u32 	%r1560, [%rd6];
	// inline asm
	prmt.b32 %r9691, %r1556, %r1560, %r2;
	// inline asm
	ld.local.u32 	%r1564, [%rd5+12];
	// inline asm
	prmt.b32 %r9692, %r1560, %r1564, %r2;
	// inline asm
	ld.local.u32 	%r1568, [%rd5+8];
	// inline asm
	prmt.b32 %r9685, %r1564, %r1568, %r2;
	// inline asm
	ld.local.u32 	%r1572, [%rd5+4];
	// inline asm
	prmt.b32 %r9686, %r1568, %r1572, %r2;
	// inline asm
	ld.local.u32 	%r1576, [%rd5];
	// inline asm
	prmt.b32 %r9687, %r1572, %r1576, %r2;
	// inline asm
	ld.local.u32 	%r1580, [%rd4+12];
	// inline asm
	prmt.b32 %r9688, %r1576, %r1580, %r2;
	// inline asm
	ld.local.u32 	%r1584, [%rd4+8];
	// inline asm
	prmt.b32 %r9681, %r1580, %r1584, %r2;
	// inline asm
	ld.local.u32 	%r1588, [%rd4+4];
	// inline asm
	prmt.b32 %r9682, %r1584, %r1588, %r2;
	// inline asm
	ld.local.u32 	%r1592, [%rd4];
	// inline asm
	prmt.b32 %r9683, %r1588, %r1592, %r2;
	// inline asm
	ld.local.u32 	%r1596, [%rd3+12];
	// inline asm
	prmt.b32 %r9684, %r1592, %r1596, %r2;
	// inline asm
	ld.local.u32 	%r1600, [%rd3+8];
	// inline asm
	prmt.b32 %r9677, %r1596, %r1600, %r2;
	// inline asm
	ld.local.u32 	%r1604, [%rd3+4];
	// inline asm
	prmt.b32 %r9678, %r1600, %r1604, %r2;
	// inline asm
	ld.local.u32 	%r1608, [%rd3];
	// inline asm
	prmt.b32 %r9679, %r1604, %r1608, %r2;
	// inline asm
	ld.local.u32 	%r1612, [%rd2+12];
	// inline asm
	prmt.b32 %r9680, %r1608, %r1612, %r2;
	// inline asm
	ld.local.u32 	%r1616, [%rd2+8];
	// inline asm
	prmt.b32 %r9673, %r1612, %r1616, %r2;
	// inline asm
	ld.local.u32 	%r1620, [%rd2+4];
	// inline asm
	prmt.b32 %r9674, %r1616, %r1620, %r2;
	// inline asm
	ld.local.u32 	%r1624, [%rd2];
	// inline asm
	prmt.b32 %r9675, %r1620, %r1624, %r2;
	// inline asm
	ld.local.u32 	%r1628, [%rd1+12];
	// inline asm
	prmt.b32 %r9676, %r1624, %r1628, %r2;
	// inline asm
	ld.local.u32 	%r1632, [%rd1+8];
	// inline asm
	prmt.b32 %r1630, %r1628, %r1632, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1630;
	ld.local.u32 	%r1635, [%rd1+8];
	ld.local.u32 	%r1636, [%rd1+4];
	// inline asm
	prmt.b32 %r1634, %r1635, %r1636, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1634;
	ld.local.u32 	%r1639, [%rd1+4];
	ld.local.u32 	%r1640, [%rd1];
	// inline asm
	prmt.b32 %r1638, %r1639, %r1640, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1638;
	ld.local.u32 	%r1643, [%rd1];
	ld.local.u32 	%r1644, [%rd8+12];
	// inline asm
	prmt.b32 %r1642, %r1643, %r1644, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1642;
	ld.local.u32 	%r1647, [%rd8+12];
	ld.local.u32 	%r1648, [%rd8+8];
	// inline asm
	prmt.b32 %r1646, %r1647, %r1648, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r1646;
	ld.local.u32 	%r1651, [%rd8+8];
	ld.local.u32 	%r1652, [%rd8+4];
	// inline asm
	prmt.b32 %r1650, %r1651, %r1652, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r1650;
	ld.local.u32 	%r1655, [%rd8+4];
	ld.local.u32 	%r1656, [%rd8];
	// inline asm
	prmt.b32 %r1654, %r1655, %r1656, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r1654;
	ld.local.u32 	%r1659, [%rd8];
	// inline asm
	prmt.b32 %r1658, %r1659, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r1658;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd26, 0;
	st.local.u32 	[%rd8+4], %rd26;
	st.local.u32 	[%rd8], %rd26;
	mov.u32 	%r9697, %r9672;
	mov.u32 	%r9698, %r9672;
	mov.u32 	%r9699, %r9672;
	bra.uni 	BB3_85;

BB3_100:
	setp.gt.s32	%p86, %r1, 5;
	@%p86 bra 	BB3_104;

	setp.eq.s32	%p89, %r1, 4;
	@%p89 bra 	BB3_166;
	bra.uni 	BB3_102;

BB3_166:
	ld.local.u32 	%r8974, [%rd6+12];
	ld.local.u32 	%r8975, [%rd6+8];
	// inline asm
	prmt.b32 %r8973, %r8974, %r8975, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8973;
	ld.local.u32 	%r8978, [%rd6+8];
	ld.local.u32 	%r8979, [%rd6+4];
	// inline asm
	prmt.b32 %r8977, %r8978, %r8979, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8977;
	ld.local.u32 	%r8982, [%rd6+4];
	ld.local.u32 	%r8983, [%rd6];
	// inline asm
	prmt.b32 %r8981, %r8982, %r8983, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8981;
	ld.local.u32 	%r8986, [%rd6];
	ld.local.u32 	%r8987, [%rd5+12];
	// inline asm
	prmt.b32 %r8985, %r8986, %r8987, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8985;
	ld.local.u32 	%r8990, [%rd5+12];
	ld.local.u32 	%r8991, [%rd5+8];
	// inline asm
	prmt.b32 %r8989, %r8990, %r8991, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8989;
	ld.local.u32 	%r8994, [%rd5+8];
	ld.local.u32 	%r8995, [%rd5+4];
	// inline asm
	prmt.b32 %r8993, %r8994, %r8995, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8993;
	ld.local.u32 	%r8998, [%rd5+4];
	ld.local.u32 	%r8999, [%rd5];
	// inline asm
	prmt.b32 %r8997, %r8998, %r8999, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8997;
	ld.local.u32 	%r9002, [%rd5];
	ld.local.u32 	%r9003, [%rd4+12];
	// inline asm
	prmt.b32 %r9001, %r9002, %r9003, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r9001;
	ld.local.u32 	%r9006, [%rd4+12];
	ld.local.u32 	%r9007, [%rd4+8];
	// inline asm
	prmt.b32 %r9005, %r9006, %r9007, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r9005;
	ld.local.u32 	%r9010, [%rd4+8];
	ld.local.u32 	%r9011, [%rd4+4];
	// inline asm
	prmt.b32 %r9009, %r9010, %r9011, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r9009;
	ld.local.u32 	%r9014, [%rd4+4];
	ld.local.u32 	%r9015, [%rd4];
	// inline asm
	prmt.b32 %r9013, %r9014, %r9015, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r9013;
	ld.local.u32 	%r9018, [%rd4];
	ld.local.u32 	%r9019, [%rd3+12];
	// inline asm
	prmt.b32 %r9017, %r9018, %r9019, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r9017;
	ld.local.u32 	%r9022, [%rd3+12];
	ld.local.u32 	%r9023, [%rd3+8];
	// inline asm
	prmt.b32 %r9021, %r9022, %r9023, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r9021;
	ld.local.u32 	%r9026, [%rd3+8];
	ld.local.u32 	%r9027, [%rd3+4];
	// inline asm
	prmt.b32 %r9025, %r9026, %r9027, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r9025;
	ld.local.u32 	%r9030, [%rd3+4];
	ld.local.u32 	%r9031, [%rd3];
	// inline asm
	prmt.b32 %r9029, %r9030, %r9031, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r9029;
	ld.local.u32 	%r9034, [%rd3];
	ld.local.u32 	%r9035, [%rd2+12];
	// inline asm
	prmt.b32 %r9033, %r9034, %r9035, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r9033;
	ld.local.u32 	%r9038, [%rd2+12];
	ld.local.u32 	%r9039, [%rd2+8];
	// inline asm
	prmt.b32 %r9037, %r9038, %r9039, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r9037;
	ld.local.u32 	%r9042, [%rd2+8];
	ld.local.u32 	%r9043, [%rd2+4];
	// inline asm
	prmt.b32 %r9041, %r9042, %r9043, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r9041;
	ld.local.u32 	%r9046, [%rd2+4];
	ld.local.u32 	%r9047, [%rd2];
	// inline asm
	prmt.b32 %r9045, %r9046, %r9047, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r9045;
	ld.local.u32 	%r9050, [%rd2];
	ld.local.u32 	%r9051, [%rd1+12];
	// inline asm
	prmt.b32 %r9049, %r9050, %r9051, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r9049;
	ld.local.u32 	%r9054, [%rd1+12];
	ld.local.u32 	%r9055, [%rd1+8];
	// inline asm
	prmt.b32 %r9053, %r9054, %r9055, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r9053;
	ld.local.u32 	%r9058, [%rd1+8];
	ld.local.u32 	%r9059, [%rd1+4];
	// inline asm
	prmt.b32 %r9057, %r9058, %r9059, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r9057;
	ld.local.u32 	%r9062, [%rd1+4];
	ld.local.u32 	%r9063, [%rd1];
	// inline asm
	prmt.b32 %r9061, %r9062, %r9063, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r9061;
	ld.local.u32 	%r9066, [%rd1];
	ld.local.u32 	%r9067, [%rd8+12];
	// inline asm
	prmt.b32 %r9065, %r9066, %r9067, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r9065;
	ld.local.u32 	%r9070, [%rd8+12];
	ld.local.u32 	%r9071, [%rd8+8];
	// inline asm
	prmt.b32 %r9069, %r9070, %r9071, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r9069;
	ld.local.u32 	%r9074, [%rd8+8];
	ld.local.u32 	%r9075, [%rd8+4];
	// inline asm
	prmt.b32 %r9073, %r9074, %r9075, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r9073;
	ld.local.u32 	%r9078, [%rd8+4];
	ld.local.u32 	%r9079, [%rd8];
	// inline asm
	prmt.b32 %r9077, %r9078, %r9079, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r9077;
	ld.local.u32 	%r9082, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9081, %r9082, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r9081;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2939, 0;
	st.local.u32 	[%rd8+4], %rd2939;
	st.local.u32 	[%rd8], %rd2939;
	bra.uni 	BB3_170;

BB3_11:
	setp.gt.s32	%p39, %r1, 5;
	@%p39 bra 	BB3_15;

	setp.eq.s32	%p42, %r1, 4;
	@%p42 bra 	BB3_77;
	bra.uni 	BB3_13;

BB3_77:
	ld.local.u32 	%r4522, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9680, %r9672, %r4522, %r2;
	// inline asm
	ld.local.u32 	%r4526, [%rd7+8];
	// inline asm
	prmt.b32 %r9673, %r4522, %r4526, %r2;
	// inline asm
	ld.local.u32 	%r4530, [%rd7+4];
	// inline asm
	prmt.b32 %r9674, %r4526, %r4530, %r2;
	// inline asm
	ld.local.u32 	%r4534, [%rd7];
	// inline asm
	prmt.b32 %r9675, %r4530, %r4534, %r2;
	// inline asm
	ld.local.u32 	%r4538, [%rd6+12];
	// inline asm
	prmt.b32 %r9676, %r4534, %r4538, %r2;
	// inline asm
	ld.local.u32 	%r4542, [%rd6+8];
	// inline asm
	prmt.b32 %r4540, %r4538, %r4542, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4540;
	ld.local.u32 	%r4545, [%rd6+8];
	ld.local.u32 	%r4546, [%rd6+4];
	// inline asm
	prmt.b32 %r4544, %r4545, %r4546, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4544;
	ld.local.u32 	%r4549, [%rd6+4];
	ld.local.u32 	%r4550, [%rd6];
	// inline asm
	prmt.b32 %r4548, %r4549, %r4550, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4548;
	ld.local.u32 	%r4553, [%rd6];
	ld.local.u32 	%r4554, [%rd5+12];
	// inline asm
	prmt.b32 %r4552, %r4553, %r4554, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4552;
	ld.local.u32 	%r4557, [%rd5+12];
	ld.local.u32 	%r4558, [%rd5+8];
	// inline asm
	prmt.b32 %r4556, %r4557, %r4558, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4556;
	ld.local.u32 	%r4561, [%rd5+8];
	ld.local.u32 	%r4562, [%rd5+4];
	// inline asm
	prmt.b32 %r4560, %r4561, %r4562, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4560;
	ld.local.u32 	%r4565, [%rd5+4];
	ld.local.u32 	%r4566, [%rd5];
	// inline asm
	prmt.b32 %r4564, %r4565, %r4566, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4564;
	ld.local.u32 	%r4569, [%rd5];
	ld.local.u32 	%r4570, [%rd4+12];
	// inline asm
	prmt.b32 %r4568, %r4569, %r4570, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4568;
	ld.local.u32 	%r4573, [%rd4+12];
	ld.local.u32 	%r4574, [%rd4+8];
	// inline asm
	prmt.b32 %r4572, %r4573, %r4574, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4572;
	ld.local.u32 	%r4577, [%rd4+8];
	ld.local.u32 	%r4578, [%rd4+4];
	// inline asm
	prmt.b32 %r4576, %r4577, %r4578, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4576;
	ld.local.u32 	%r4581, [%rd4+4];
	ld.local.u32 	%r4582, [%rd4];
	// inline asm
	prmt.b32 %r4580, %r4581, %r4582, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4580;
	ld.local.u32 	%r4585, [%rd4];
	ld.local.u32 	%r4586, [%rd3+12];
	// inline asm
	prmt.b32 %r4584, %r4585, %r4586, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4584;
	ld.local.u32 	%r4589, [%rd3+12];
	ld.local.u32 	%r4590, [%rd3+8];
	// inline asm
	prmt.b32 %r4588, %r4589, %r4590, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4588;
	ld.local.u32 	%r4593, [%rd3+8];
	ld.local.u32 	%r4594, [%rd3+4];
	// inline asm
	prmt.b32 %r4592, %r4593, %r4594, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4592;
	ld.local.u32 	%r4597, [%rd3+4];
	ld.local.u32 	%r4598, [%rd3];
	// inline asm
	prmt.b32 %r4596, %r4597, %r4598, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4596;
	ld.local.u32 	%r4601, [%rd3];
	ld.local.u32 	%r4602, [%rd2+12];
	// inline asm
	prmt.b32 %r4600, %r4601, %r4602, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4600;
	ld.local.u32 	%r4605, [%rd2+12];
	ld.local.u32 	%r4606, [%rd2+8];
	// inline asm
	prmt.b32 %r4604, %r4605, %r4606, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4604;
	ld.local.u32 	%r4609, [%rd2+8];
	ld.local.u32 	%r4610, [%rd2+4];
	// inline asm
	prmt.b32 %r4608, %r4609, %r4610, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4608;
	ld.local.u32 	%r4613, [%rd2+4];
	ld.local.u32 	%r4614, [%rd2];
	// inline asm
	prmt.b32 %r4612, %r4613, %r4614, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4612;
	ld.local.u32 	%r4617, [%rd2];
	ld.local.u32 	%r4618, [%rd1+12];
	// inline asm
	prmt.b32 %r4616, %r4617, %r4618, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4616;
	ld.local.u32 	%r4621, [%rd1+12];
	ld.local.u32 	%r4622, [%rd1+8];
	// inline asm
	prmt.b32 %r4620, %r4621, %r4622, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4620;
	ld.local.u32 	%r4625, [%rd1+8];
	ld.local.u32 	%r4626, [%rd1+4];
	// inline asm
	prmt.b32 %r4624, %r4625, %r4626, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4624;
	ld.local.u32 	%r4629, [%rd1+4];
	ld.local.u32 	%r4630, [%rd1];
	// inline asm
	prmt.b32 %r4628, %r4629, %r4630, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4628;
	ld.local.u32 	%r4633, [%rd1];
	ld.local.u32 	%r4634, [%rd8+12];
	// inline asm
	prmt.b32 %r4632, %r4633, %r4634, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4632;
	ld.local.u32 	%r4637, [%rd8+12];
	ld.local.u32 	%r4638, [%rd8+8];
	// inline asm
	prmt.b32 %r4636, %r4637, %r4638, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r4636;
	ld.local.u32 	%r4641, [%rd8+8];
	ld.local.u32 	%r4642, [%rd8+4];
	// inline asm
	prmt.b32 %r4640, %r4641, %r4642, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r4640;
	ld.local.u32 	%r4645, [%rd8+4];
	ld.local.u32 	%r4646, [%rd8];
	// inline asm
	prmt.b32 %r4644, %r4645, %r4646, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r4644;
	ld.local.u32 	%r4649, [%rd8];
	// inline asm
	prmt.b32 %r4648, %r4649, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r4648;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd46, 0;
	st.local.u32 	[%rd8+4], %rd46;
	st.local.u32 	[%rd8], %rd46;
	mov.u32 	%r9677, %r9672;
	mov.u32 	%r9678, %r9672;
	mov.u32 	%r9679, %r9672;
	bra.uni 	BB3_80;

BB3_131:
	setp.gt.s32	%p63, %r1, 21;
	@%p63 bra 	BB3_135;

	setp.eq.s32	%p66, %r1, 20;
	@%p66 bra 	BB3_158;
	bra.uni 	BB3_133;

BB3_158:
	ld.local.u32 	%r7710, [%rd2+12];
	ld.local.u32 	%r7711, [%rd2+8];
	// inline asm
	prmt.b32 %r7709, %r7710, %r7711, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7709;
	ld.local.u32 	%r7714, [%rd2+8];
	ld.local.u32 	%r7715, [%rd2+4];
	// inline asm
	prmt.b32 %r7713, %r7714, %r7715, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7713;
	ld.local.u32 	%r7718, [%rd2+4];
	ld.local.u32 	%r7719, [%rd2];
	// inline asm
	prmt.b32 %r7717, %r7718, %r7719, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7717;
	ld.local.u32 	%r7722, [%rd2];
	ld.local.u32 	%r7723, [%rd1+12];
	// inline asm
	prmt.b32 %r7721, %r7722, %r7723, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7721;
	ld.local.u32 	%r7726, [%rd1+12];
	ld.local.u32 	%r7727, [%rd1+8];
	// inline asm
	prmt.b32 %r7725, %r7726, %r7727, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7725;
	ld.local.u32 	%r7730, [%rd1+8];
	ld.local.u32 	%r7731, [%rd1+4];
	// inline asm
	prmt.b32 %r7729, %r7730, %r7731, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7729;
	ld.local.u32 	%r7734, [%rd1+4];
	ld.local.u32 	%r7735, [%rd1];
	// inline asm
	prmt.b32 %r7733, %r7734, %r7735, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7733;
	ld.local.u32 	%r7738, [%rd1];
	ld.local.u32 	%r7739, [%rd8+12];
	// inline asm
	prmt.b32 %r7737, %r7738, %r7739, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7737;
	ld.local.u32 	%r7742, [%rd8+12];
	ld.local.u32 	%r7743, [%rd8+8];
	// inline asm
	prmt.b32 %r7741, %r7742, %r7743, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7741;
	ld.local.u32 	%r7746, [%rd8+8];
	ld.local.u32 	%r7747, [%rd8+4];
	// inline asm
	prmt.b32 %r7745, %r7746, %r7747, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7745;
	ld.local.u32 	%r7750, [%rd8+4];
	ld.local.u32 	%r7751, [%rd8];
	// inline asm
	prmt.b32 %r7749, %r7750, %r7751, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7749;
	ld.local.u32 	%r7754, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7753, %r7754, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7753;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2923, 0;
	st.local.u32 	[%rd8+4], %rd2923;
	st.local.u32 	[%rd8], %rd2923;
	bra.uni 	BB3_170;

BB3_42:
	setp.gt.s32	%p16, %r1, 21;
	@%p16 bra 	BB3_46;

	setp.eq.s32	%p19, %r1, 20;
	@%p19 bra 	BB3_69;
	bra.uni 	BB3_44;

BB3_69:
	ld.local.u32 	%r2098, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9696, %r9672, %r2098, %r2;
	// inline asm
	ld.local.u32 	%r2102, [%rd7+8];
	// inline asm
	prmt.b32 %r9689, %r2098, %r2102, %r2;
	// inline asm
	ld.local.u32 	%r2106, [%rd7+4];
	// inline asm
	prmt.b32 %r9690, %r2102, %r2106, %r2;
	// inline asm
	ld.local.u32 	%r2110, [%rd7];
	// inline asm
	prmt.b32 %r9691, %r2106, %r2110, %r2;
	// inline asm
	ld.local.u32 	%r2114, [%rd6+12];
	// inline asm
	prmt.b32 %r9692, %r2110, %r2114, %r2;
	// inline asm
	ld.local.u32 	%r2118, [%rd6+8];
	// inline asm
	prmt.b32 %r9685, %r2114, %r2118, %r2;
	// inline asm
	ld.local.u32 	%r2122, [%rd6+4];
	// inline asm
	prmt.b32 %r9686, %r2118, %r2122, %r2;
	// inline asm
	ld.local.u32 	%r2126, [%rd6];
	// inline asm
	prmt.b32 %r9687, %r2122, %r2126, %r2;
	// inline asm
	ld.local.u32 	%r2130, [%rd5+12];
	// inline asm
	prmt.b32 %r9688, %r2126, %r2130, %r2;
	// inline asm
	ld.local.u32 	%r2134, [%rd5+8];
	// inline asm
	prmt.b32 %r9681, %r2130, %r2134, %r2;
	// inline asm
	ld.local.u32 	%r2138, [%rd5+4];
	// inline asm
	prmt.b32 %r9682, %r2134, %r2138, %r2;
	// inline asm
	ld.local.u32 	%r2142, [%rd5];
	// inline asm
	prmt.b32 %r9683, %r2138, %r2142, %r2;
	// inline asm
	ld.local.u32 	%r2146, [%rd4+12];
	// inline asm
	prmt.b32 %r9684, %r2142, %r2146, %r2;
	// inline asm
	ld.local.u32 	%r2150, [%rd4+8];
	// inline asm
	prmt.b32 %r9677, %r2146, %r2150, %r2;
	// inline asm
	ld.local.u32 	%r2154, [%rd4+4];
	// inline asm
	prmt.b32 %r9678, %r2150, %r2154, %r2;
	// inline asm
	ld.local.u32 	%r2158, [%rd4];
	// inline asm
	prmt.b32 %r9679, %r2154, %r2158, %r2;
	// inline asm
	ld.local.u32 	%r2162, [%rd3+12];
	// inline asm
	prmt.b32 %r9680, %r2158, %r2162, %r2;
	// inline asm
	ld.local.u32 	%r2166, [%rd3+8];
	// inline asm
	prmt.b32 %r9673, %r2162, %r2166, %r2;
	// inline asm
	ld.local.u32 	%r2170, [%rd3+4];
	// inline asm
	prmt.b32 %r9674, %r2166, %r2170, %r2;
	// inline asm
	ld.local.u32 	%r2174, [%rd3];
	// inline asm
	prmt.b32 %r9675, %r2170, %r2174, %r2;
	// inline asm
	ld.local.u32 	%r2178, [%rd2+12];
	// inline asm
	prmt.b32 %r9676, %r2174, %r2178, %r2;
	// inline asm
	ld.local.u32 	%r2182, [%rd2+8];
	// inline asm
	prmt.b32 %r2180, %r2178, %r2182, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2180;
	ld.local.u32 	%r2185, [%rd2+8];
	ld.local.u32 	%r2186, [%rd2+4];
	// inline asm
	prmt.b32 %r2184, %r2185, %r2186, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2184;
	ld.local.u32 	%r2189, [%rd2+4];
	ld.local.u32 	%r2190, [%rd2];
	// inline asm
	prmt.b32 %r2188, %r2189, %r2190, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2188;
	ld.local.u32 	%r2193, [%rd2];
	ld.local.u32 	%r2194, [%rd1+12];
	// inline asm
	prmt.b32 %r2192, %r2193, %r2194, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2192;
	ld.local.u32 	%r2197, [%rd1+12];
	ld.local.u32 	%r2198, [%rd1+8];
	// inline asm
	prmt.b32 %r2196, %r2197, %r2198, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2196;
	ld.local.u32 	%r2201, [%rd1+8];
	ld.local.u32 	%r2202, [%rd1+4];
	// inline asm
	prmt.b32 %r2200, %r2201, %r2202, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2200;
	ld.local.u32 	%r2205, [%rd1+4];
	ld.local.u32 	%r2206, [%rd1];
	// inline asm
	prmt.b32 %r2204, %r2205, %r2206, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2204;
	ld.local.u32 	%r2209, [%rd1];
	ld.local.u32 	%r2210, [%rd8+12];
	// inline asm
	prmt.b32 %r2208, %r2209, %r2210, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2208;
	ld.local.u32 	%r2213, [%rd8+12];
	ld.local.u32 	%r2214, [%rd8+8];
	// inline asm
	prmt.b32 %r2212, %r2213, %r2214, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2212;
	ld.local.u32 	%r2217, [%rd8+8];
	ld.local.u32 	%r2218, [%rd8+4];
	// inline asm
	prmt.b32 %r2216, %r2217, %r2218, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2216;
	ld.local.u32 	%r2221, [%rd8+4];
	ld.local.u32 	%r2222, [%rd8];
	// inline asm
	prmt.b32 %r2220, %r2221, %r2222, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2220;
	ld.local.u32 	%r2225, [%rd8];
	// inline asm
	prmt.b32 %r2224, %r2225, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r2224;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd30, 0;
	st.local.u32 	[%rd8+4], %rd30;
	st.local.u32 	[%rd8], %rd30;
	mov.u32 	%r9693, %r9672;
	mov.u32 	%r9694, %r9672;
	mov.u32 	%r9695, %r9672;
	bra.uni 	BB3_84;

BB3_115:
	setp.gt.s32	%p75, %r1, 13;
	@%p75 bra 	BB3_119;

	setp.eq.s32	%p78, %r1, 12;
	@%p78 bra 	BB3_162;
	bra.uni 	BB3_117;

BB3_162:
	ld.local.u32 	%r8214, [%rd4+12];
	ld.local.u32 	%r8215, [%rd4+8];
	// inline asm
	prmt.b32 %r8213, %r8214, %r8215, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8213;
	ld.local.u32 	%r8218, [%rd4+8];
	ld.local.u32 	%r8219, [%rd4+4];
	// inline asm
	prmt.b32 %r8217, %r8218, %r8219, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8217;
	ld.local.u32 	%r8222, [%rd4+4];
	ld.local.u32 	%r8223, [%rd4];
	// inline asm
	prmt.b32 %r8221, %r8222, %r8223, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8221;
	ld.local.u32 	%r8226, [%rd4];
	ld.local.u32 	%r8227, [%rd3+12];
	// inline asm
	prmt.b32 %r8225, %r8226, %r8227, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8225;
	ld.local.u32 	%r8230, [%rd3+12];
	ld.local.u32 	%r8231, [%rd3+8];
	// inline asm
	prmt.b32 %r8229, %r8230, %r8231, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8229;
	ld.local.u32 	%r8234, [%rd3+8];
	ld.local.u32 	%r8235, [%rd3+4];
	// inline asm
	prmt.b32 %r8233, %r8234, %r8235, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8233;
	ld.local.u32 	%r8238, [%rd3+4];
	ld.local.u32 	%r8239, [%rd3];
	// inline asm
	prmt.b32 %r8237, %r8238, %r8239, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8237;
	ld.local.u32 	%r8242, [%rd3];
	ld.local.u32 	%r8243, [%rd2+12];
	// inline asm
	prmt.b32 %r8241, %r8242, %r8243, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8241;
	ld.local.u32 	%r8246, [%rd2+12];
	ld.local.u32 	%r8247, [%rd2+8];
	// inline asm
	prmt.b32 %r8245, %r8246, %r8247, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8245;
	ld.local.u32 	%r8250, [%rd2+8];
	ld.local.u32 	%r8251, [%rd2+4];
	// inline asm
	prmt.b32 %r8249, %r8250, %r8251, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8249;
	ld.local.u32 	%r8254, [%rd2+4];
	ld.local.u32 	%r8255, [%rd2];
	// inline asm
	prmt.b32 %r8253, %r8254, %r8255, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8253;
	ld.local.u32 	%r8258, [%rd2];
	ld.local.u32 	%r8259, [%rd1+12];
	// inline asm
	prmt.b32 %r8257, %r8258, %r8259, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8257;
	ld.local.u32 	%r8262, [%rd1+12];
	ld.local.u32 	%r8263, [%rd1+8];
	// inline asm
	prmt.b32 %r8261, %r8262, %r8263, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8261;
	ld.local.u32 	%r8266, [%rd1+8];
	ld.local.u32 	%r8267, [%rd1+4];
	// inline asm
	prmt.b32 %r8265, %r8266, %r8267, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8265;
	ld.local.u32 	%r8270, [%rd1+4];
	ld.local.u32 	%r8271, [%rd1];
	// inline asm
	prmt.b32 %r8269, %r8270, %r8271, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8269;
	ld.local.u32 	%r8274, [%rd1];
	ld.local.u32 	%r8275, [%rd8+12];
	// inline asm
	prmt.b32 %r8273, %r8274, %r8275, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8273;
	ld.local.u32 	%r8278, [%rd8+12];
	ld.local.u32 	%r8279, [%rd8+8];
	// inline asm
	prmt.b32 %r8277, %r8278, %r8279, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8277;
	ld.local.u32 	%r8282, [%rd8+8];
	ld.local.u32 	%r8283, [%rd8+4];
	// inline asm
	prmt.b32 %r8281, %r8282, %r8283, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8281;
	ld.local.u32 	%r8286, [%rd8+4];
	ld.local.u32 	%r8287, [%rd8];
	// inline asm
	prmt.b32 %r8285, %r8286, %r8287, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8285;
	ld.local.u32 	%r8290, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8289, %r8290, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8289;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2931, 0;
	st.local.u32 	[%rd8+4], %rd2931;
	st.local.u32 	[%rd8], %rd2931;
	bra.uni 	BB3_170;

BB3_26:
	setp.gt.s32	%p28, %r1, 13;
	@%p28 bra 	BB3_30;

	setp.eq.s32	%p31, %r1, 12;
	@%p31 bra 	BB3_73;
	bra.uni 	BB3_28;

BB3_73:
	ld.local.u32 	%r3278, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9688, %r9672, %r3278, %r2;
	// inline asm
	ld.local.u32 	%r3282, [%rd7+8];
	// inline asm
	prmt.b32 %r9681, %r3278, %r3282, %r2;
	// inline asm
	ld.local.u32 	%r3286, [%rd7+4];
	// inline asm
	prmt.b32 %r9682, %r3282, %r3286, %r2;
	// inline asm
	ld.local.u32 	%r3290, [%rd7];
	// inline asm
	prmt.b32 %r9683, %r3286, %r3290, %r2;
	// inline asm
	ld.local.u32 	%r3294, [%rd6+12];
	// inline asm
	prmt.b32 %r9684, %r3290, %r3294, %r2;
	// inline asm
	ld.local.u32 	%r3298, [%rd6+8];
	// inline asm
	prmt.b32 %r9677, %r3294, %r3298, %r2;
	// inline asm
	ld.local.u32 	%r3302, [%rd6+4];
	// inline asm
	prmt.b32 %r9678, %r3298, %r3302, %r2;
	// inline asm
	ld.local.u32 	%r3306, [%rd6];
	// inline asm
	prmt.b32 %r9679, %r3302, %r3306, %r2;
	// inline asm
	ld.local.u32 	%r3310, [%rd5+12];
	// inline asm
	prmt.b32 %r9680, %r3306, %r3310, %r2;
	// inline asm
	ld.local.u32 	%r3314, [%rd5+8];
	// inline asm
	prmt.b32 %r9673, %r3310, %r3314, %r2;
	// inline asm
	ld.local.u32 	%r3318, [%rd5+4];
	// inline asm
	prmt.b32 %r9674, %r3314, %r3318, %r2;
	// inline asm
	ld.local.u32 	%r3322, [%rd5];
	// inline asm
	prmt.b32 %r9675, %r3318, %r3322, %r2;
	// inline asm
	ld.local.u32 	%r3326, [%rd4+12];
	// inline asm
	prmt.b32 %r9676, %r3322, %r3326, %r2;
	// inline asm
	ld.local.u32 	%r3330, [%rd4+8];
	// inline asm
	prmt.b32 %r3328, %r3326, %r3330, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3328;
	ld.local.u32 	%r3333, [%rd4+8];
	ld.local.u32 	%r3334, [%rd4+4];
	// inline asm
	prmt.b32 %r3332, %r3333, %r3334, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3332;
	ld.local.u32 	%r3337, [%rd4+4];
	ld.local.u32 	%r3338, [%rd4];
	// inline asm
	prmt.b32 %r3336, %r3337, %r3338, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3336;
	ld.local.u32 	%r3341, [%rd4];
	ld.local.u32 	%r3342, [%rd3+12];
	// inline asm
	prmt.b32 %r3340, %r3341, %r3342, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3340;
	ld.local.u32 	%r3345, [%rd3+12];
	ld.local.u32 	%r3346, [%rd3+8];
	// inline asm
	prmt.b32 %r3344, %r3345, %r3346, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3344;
	ld.local.u32 	%r3349, [%rd3+8];
	ld.local.u32 	%r3350, [%rd3+4];
	// inline asm
	prmt.b32 %r3348, %r3349, %r3350, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3348;
	ld.local.u32 	%r3353, [%rd3+4];
	ld.local.u32 	%r3354, [%rd3];
	// inline asm
	prmt.b32 %r3352, %r3353, %r3354, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3352;
	ld.local.u32 	%r3357, [%rd3];
	ld.local.u32 	%r3358, [%rd2+12];
	// inline asm
	prmt.b32 %r3356, %r3357, %r3358, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3356;
	ld.local.u32 	%r3361, [%rd2+12];
	ld.local.u32 	%r3362, [%rd2+8];
	// inline asm
	prmt.b32 %r3360, %r3361, %r3362, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3360;
	ld.local.u32 	%r3365, [%rd2+8];
	ld.local.u32 	%r3366, [%rd2+4];
	// inline asm
	prmt.b32 %r3364, %r3365, %r3366, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3364;
	ld.local.u32 	%r3369, [%rd2+4];
	ld.local.u32 	%r3370, [%rd2];
	// inline asm
	prmt.b32 %r3368, %r3369, %r3370, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3368;
	ld.local.u32 	%r3373, [%rd2];
	ld.local.u32 	%r3374, [%rd1+12];
	// inline asm
	prmt.b32 %r3372, %r3373, %r3374, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3372;
	ld.local.u32 	%r3377, [%rd1+12];
	ld.local.u32 	%r3378, [%rd1+8];
	// inline asm
	prmt.b32 %r3376, %r3377, %r3378, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3376;
	ld.local.u32 	%r3381, [%rd1+8];
	ld.local.u32 	%r3382, [%rd1+4];
	// inline asm
	prmt.b32 %r3380, %r3381, %r3382, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3380;
	ld.local.u32 	%r3385, [%rd1+4];
	ld.local.u32 	%r3386, [%rd1];
	// inline asm
	prmt.b32 %r3384, %r3385, %r3386, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3384;
	ld.local.u32 	%r3389, [%rd1];
	ld.local.u32 	%r3390, [%rd8+12];
	// inline asm
	prmt.b32 %r3388, %r3389, %r3390, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3388;
	ld.local.u32 	%r3393, [%rd8+12];
	ld.local.u32 	%r3394, [%rd8+8];
	// inline asm
	prmt.b32 %r3392, %r3393, %r3394, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3392;
	ld.local.u32 	%r3397, [%rd8+8];
	ld.local.u32 	%r3398, [%rd8+4];
	// inline asm
	prmt.b32 %r3396, %r3397, %r3398, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3396;
	ld.local.u32 	%r3401, [%rd8+4];
	ld.local.u32 	%r3402, [%rd8];
	// inline asm
	prmt.b32 %r3400, %r3401, %r3402, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r3400;
	ld.local.u32 	%r3405, [%rd8];
	// inline asm
	prmt.b32 %r3404, %r3405, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r3404;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd38, 0;
	st.local.u32 	[%rd8+4], %rd38;
	st.local.u32 	[%rd8], %rd38;
	mov.u32 	%r9685, %r9672;
	mov.u32 	%r9686, %r9672;
	mov.u32 	%r9687, %r9672;
	bra.uni 	BB3_82;

BB3_146:
	setp.gt.s32	%p52, %r1, 29;
	@%p52 bra 	BB3_150;

	setp.eq.s32	%p55, %r1, 28;
	@%p55 bra 	BB3_154;
	bra.uni 	BB3_148;

BB3_154:
	ld.local.u32 	%r7462, [%rd8+12];
	ld.local.u32 	%r7463, [%rd8+8];
	// inline asm
	prmt.b32 %r7461, %r7462, %r7463, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7461;
	ld.local.u32 	%r7466, [%rd8+8];
	ld.local.u32 	%r7467, [%rd8+4];
	// inline asm
	prmt.b32 %r7465, %r7466, %r7467, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7465;
	ld.local.u32 	%r7470, [%rd8+4];
	ld.local.u32 	%r7471, [%rd8];
	// inline asm
	prmt.b32 %r7469, %r7470, %r7471, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7469;
	ld.local.u32 	%r7474, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7473, %r7474, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7473;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2915, 0;
	st.local.u32 	[%rd8+4], %rd2915;
	st.local.u32 	[%rd8], %rd2915;
	bra.uni 	BB3_170;

BB3_57:
	setp.gt.s32	%p5, %r1, 29;
	@%p5 bra 	BB3_61;

	setp.eq.s32	%p8, %r1, 28;
	@%p8 bra 	BB3_65;
	bra.uni 	BB3_59;

BB3_65:
	ld.local.u32 	%r982, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9704, %r9672, %r982, %r2;
	// inline asm
	ld.local.u32 	%r986, [%rd7+8];
	// inline asm
	prmt.b32 %r9697, %r982, %r986, %r2;
	// inline asm
	ld.local.u32 	%r990, [%rd7+4];
	// inline asm
	prmt.b32 %r9698, %r986, %r990, %r2;
	// inline asm
	ld.local.u32 	%r994, [%rd7];
	// inline asm
	prmt.b32 %r9699, %r990, %r994, %r2;
	// inline asm
	ld.local.u32 	%r998, [%rd6+12];
	// inline asm
	prmt.b32 %r9700, %r994, %r998, %r2;
	// inline asm
	ld.local.u32 	%r1002, [%rd6+8];
	// inline asm
	prmt.b32 %r9693, %r998, %r1002, %r2;
	// inline asm
	ld.local.u32 	%r1006, [%rd6+4];
	// inline asm
	prmt.b32 %r9694, %r1002, %r1006, %r2;
	// inline asm
	ld.local.u32 	%r1010, [%rd6];
	// inline asm
	prmt.b32 %r9695, %r1006, %r1010, %r2;
	// inline asm
	ld.local.u32 	%r1014, [%rd5+12];
	// inline asm
	prmt.b32 %r9696, %r1010, %r1014, %r2;
	// inline asm
	ld.local.u32 	%r1018, [%rd5+8];
	// inline asm
	prmt.b32 %r9689, %r1014, %r1018, %r2;
	// inline asm
	ld.local.u32 	%r1022, [%rd5+4];
	// inline asm
	prmt.b32 %r9690, %r1018, %r1022, %r2;
	// inline asm
	ld.local.u32 	%r1026, [%rd5];
	// inline asm
	prmt.b32 %r9691, %r1022, %r1026, %r2;
	// inline asm
	ld.local.u32 	%r1030, [%rd4+12];
	// inline asm
	prmt.b32 %r9692, %r1026, %r1030, %r2;
	// inline asm
	ld.local.u32 	%r1034, [%rd4+8];
	// inline asm
	prmt.b32 %r9685, %r1030, %r1034, %r2;
	// inline asm
	ld.local.u32 	%r1038, [%rd4+4];
	// inline asm
	prmt.b32 %r9686, %r1034, %r1038, %r2;
	// inline asm
	ld.local.u32 	%r1042, [%rd4];
	// inline asm
	prmt.b32 %r9687, %r1038, %r1042, %r2;
	// inline asm
	ld.local.u32 	%r1046, [%rd3+12];
	// inline asm
	prmt.b32 %r9688, %r1042, %r1046, %r2;
	// inline asm
	ld.local.u32 	%r1050, [%rd3+8];
	// inline asm
	prmt.b32 %r9681, %r1046, %r1050, %r2;
	// inline asm
	ld.local.u32 	%r1054, [%rd3+4];
	// inline asm
	prmt.b32 %r9682, %r1050, %r1054, %r2;
	// inline asm
	ld.local.u32 	%r1058, [%rd3];
	// inline asm
	prmt.b32 %r9683, %r1054, %r1058, %r2;
	// inline asm
	ld.local.u32 	%r1062, [%rd2+12];
	// inline asm
	prmt.b32 %r9684, %r1058, %r1062, %r2;
	// inline asm
	ld.local.u32 	%r1066, [%rd2+8];
	// inline asm
	prmt.b32 %r9677, %r1062, %r1066, %r2;
	// inline asm
	ld.local.u32 	%r1070, [%rd2+4];
	// inline asm
	prmt.b32 %r9678, %r1066, %r1070, %r2;
	// inline asm
	ld.local.u32 	%r1074, [%rd2];
	// inline asm
	prmt.b32 %r9679, %r1070, %r1074, %r2;
	// inline asm
	ld.local.u32 	%r1078, [%rd1+12];
	// inline asm
	prmt.b32 %r9680, %r1074, %r1078, %r2;
	// inline asm
	ld.local.u32 	%r1082, [%rd1+8];
	// inline asm
	prmt.b32 %r9673, %r1078, %r1082, %r2;
	// inline asm
	ld.local.u32 	%r1086, [%rd1+4];
	// inline asm
	prmt.b32 %r9674, %r1082, %r1086, %r2;
	// inline asm
	ld.local.u32 	%r1090, [%rd1];
	// inline asm
	prmt.b32 %r9675, %r1086, %r1090, %r2;
	// inline asm
	ld.local.u32 	%r1094, [%rd8+12];
	// inline asm
	prmt.b32 %r9676, %r1090, %r1094, %r2;
	// inline asm
	ld.local.u32 	%r1098, [%rd8+8];
	// inline asm
	prmt.b32 %r1096, %r1094, %r1098, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1096;
	ld.local.u32 	%r1101, [%rd8+8];
	ld.local.u32 	%r1102, [%rd8+4];
	// inline asm
	prmt.b32 %r1100, %r1101, %r1102, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1100;
	ld.local.u32 	%r1105, [%rd8+4];
	ld.local.u32 	%r1106, [%rd8];
	// inline asm
	prmt.b32 %r1104, %r1105, %r1106, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1104;
	ld.local.u32 	%r1109, [%rd8];
	// inline asm
	prmt.b32 %r1108, %r1109, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1108;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd22, 0;
	st.local.u32 	[%rd8+4], %rd22;
	st.local.u32 	[%rd8], %rd22;
	mov.u32 	%r9701, %r9672;
	mov.u32 	%r9702, %r9672;
	mov.u32 	%r9703, %r9672;
	bra.uni 	BB3_89;

BB3_97:
	setp.eq.s32	%p92, %r1, 2;
	@%p92 bra 	BB3_167;
	bra.uni 	BB3_98;

BB3_167:
	ld.local.u32 	%r9204, [%rd7+4];
	ld.local.u32 	%r9205, [%rd7];
	// inline asm
	prmt.b32 %r9203, %r9204, %r9205, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r9203;
	ld.local.u32 	%r9209, [%rd6+12];
	// inline asm
	prmt.b32 %r9207, %r9205, %r9209, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r9207;
	ld.local.u32 	%r9212, [%rd6+12];
	ld.local.u32 	%r9213, [%rd6+8];
	// inline asm
	prmt.b32 %r9211, %r9212, %r9213, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r9211;
	ld.local.u32 	%r9216, [%rd6+8];
	ld.local.u32 	%r9217, [%rd6+4];
	// inline asm
	prmt.b32 %r9215, %r9216, %r9217, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r9215;
	ld.local.u32 	%r9220, [%rd6+4];
	ld.local.u32 	%r9221, [%rd6];
	// inline asm
	prmt.b32 %r9219, %r9220, %r9221, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r9219;
	ld.local.u32 	%r9225, [%rd5+12];
	// inline asm
	prmt.b32 %r9223, %r9221, %r9225, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r9223;
	ld.local.u32 	%r9228, [%rd5+12];
	ld.local.u32 	%r9229, [%rd5+8];
	// inline asm
	prmt.b32 %r9227, %r9228, %r9229, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r9227;
	ld.local.u32 	%r9232, [%rd5+8];
	ld.local.u32 	%r9233, [%rd5+4];
	// inline asm
	prmt.b32 %r9231, %r9232, %r9233, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r9231;
	ld.local.u32 	%r9236, [%rd5+4];
	ld.local.u32 	%r9237, [%rd5];
	// inline asm
	prmt.b32 %r9235, %r9236, %r9237, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r9235;
	ld.local.u32 	%r9241, [%rd4+12];
	// inline asm
	prmt.b32 %r9239, %r9237, %r9241, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r9239;
	ld.local.u32 	%r9244, [%rd4+12];
	ld.local.u32 	%r9245, [%rd4+8];
	// inline asm
	prmt.b32 %r9243, %r9244, %r9245, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r9243;
	ld.local.u32 	%r9248, [%rd4+8];
	ld.local.u32 	%r9249, [%rd4+4];
	// inline asm
	prmt.b32 %r9247, %r9248, %r9249, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r9247;
	ld.local.u32 	%r9252, [%rd4+4];
	ld.local.u32 	%r9253, [%rd4];
	// inline asm
	prmt.b32 %r9251, %r9252, %r9253, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r9251;
	ld.local.u32 	%r9257, [%rd3+12];
	// inline asm
	prmt.b32 %r9255, %r9253, %r9257, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r9255;
	ld.local.u32 	%r9260, [%rd3+12];
	ld.local.u32 	%r9261, [%rd3+8];
	// inline asm
	prmt.b32 %r9259, %r9260, %r9261, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r9259;
	ld.local.u32 	%r9264, [%rd3+8];
	ld.local.u32 	%r9265, [%rd3+4];
	// inline asm
	prmt.b32 %r9263, %r9264, %r9265, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r9263;
	ld.local.u32 	%r9268, [%rd3+4];
	ld.local.u32 	%r9269, [%rd3];
	// inline asm
	prmt.b32 %r9267, %r9268, %r9269, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r9267;
	ld.local.u32 	%r9273, [%rd2+12];
	// inline asm
	prmt.b32 %r9271, %r9269, %r9273, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r9271;
	ld.local.u32 	%r9276, [%rd2+12];
	ld.local.u32 	%r9277, [%rd2+8];
	// inline asm
	prmt.b32 %r9275, %r9276, %r9277, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r9275;
	ld.local.u32 	%r9280, [%rd2+8];
	ld.local.u32 	%r9281, [%rd2+4];
	// inline asm
	prmt.b32 %r9279, %r9280, %r9281, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r9279;
	ld.local.u32 	%r9284, [%rd2+4];
	ld.local.u32 	%r9285, [%rd2];
	// inline asm
	prmt.b32 %r9283, %r9284, %r9285, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r9283;
	ld.local.u32 	%r9289, [%rd1+12];
	// inline asm
	prmt.b32 %r9287, %r9285, %r9289, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r9287;
	ld.local.u32 	%r9292, [%rd1+12];
	ld.local.u32 	%r9293, [%rd1+8];
	// inline asm
	prmt.b32 %r9291, %r9292, %r9293, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r9291;
	ld.local.u32 	%r9296, [%rd1+8];
	ld.local.u32 	%r9297, [%rd1+4];
	// inline asm
	prmt.b32 %r9295, %r9296, %r9297, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r9295;
	ld.local.u32 	%r9300, [%rd1+4];
	ld.local.u32 	%r9301, [%rd1];
	// inline asm
	prmt.b32 %r9299, %r9300, %r9301, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r9299;
	ld.local.u32 	%r9305, [%rd8+12];
	// inline asm
	prmt.b32 %r9303, %r9301, %r9305, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r9303;
	ld.local.u32 	%r9308, [%rd8+12];
	ld.local.u32 	%r9309, [%rd8+8];
	// inline asm
	prmt.b32 %r9307, %r9308, %r9309, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r9307;
	ld.local.u32 	%r9312, [%rd8+8];
	ld.local.u32 	%r9313, [%rd8+4];
	// inline asm
	prmt.b32 %r9311, %r9312, %r9313, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r9311;
	ld.local.u32 	%r9316, [%rd8+4];
	ld.local.u32 	%r9317, [%rd8];
	// inline asm
	prmt.b32 %r9315, %r9316, %r9317, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r9315;
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9319, %r9317, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r9319;
	mov.u64 	%rd2940, 0;
	st.local.u32 	[%rd8+4], %rd2940;
	st.local.u32 	[%rd8], %rd2940;
	bra.uni 	BB3_170;

BB3_8:
	setp.eq.s32	%p45, %r1, 2;
	@%p45 bra 	BB3_78;
	bra.uni 	BB3_9;

BB3_78:
	ld.local.u32 	%r4843, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9674, %r9672, %r4843, %r2;
	// inline asm
	ld.local.u32 	%r4847, [%rd7+8];
	// inline asm
	prmt.b32 %r9675, %r4843, %r4847, %r2;
	// inline asm
	ld.local.u32 	%r4851, [%rd7+4];
	// inline asm
	prmt.b32 %r9676, %r4847, %r4851, %r2;
	// inline asm
	ld.local.u32 	%r4855, [%rd7];
	// inline asm
	prmt.b32 %r4853, %r4851, %r4855, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4853;
	ld.local.u32 	%r4859, [%rd6+12];
	// inline asm
	prmt.b32 %r4857, %r4855, %r4859, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4857;
	ld.local.u32 	%r4862, [%rd6+12];
	ld.local.u32 	%r4863, [%rd6+8];
	// inline asm
	prmt.b32 %r4861, %r4862, %r4863, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4861;
	ld.local.u32 	%r4866, [%rd6+8];
	ld.local.u32 	%r4867, [%rd6+4];
	// inline asm
	prmt.b32 %r4865, %r4866, %r4867, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4865;
	ld.local.u32 	%r4870, [%rd6+4];
	ld.local.u32 	%r4871, [%rd6];
	// inline asm
	prmt.b32 %r4869, %r4870, %r4871, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4869;
	ld.local.u32 	%r4875, [%rd5+12];
	// inline asm
	prmt.b32 %r4873, %r4871, %r4875, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4873;
	ld.local.u32 	%r4878, [%rd5+12];
	ld.local.u32 	%r4879, [%rd5+8];
	// inline asm
	prmt.b32 %r4877, %r4878, %r4879, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4877;
	ld.local.u32 	%r4882, [%rd5+8];
	ld.local.u32 	%r4883, [%rd5+4];
	// inline asm
	prmt.b32 %r4881, %r4882, %r4883, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4881;
	ld.local.u32 	%r4886, [%rd5+4];
	ld.local.u32 	%r4887, [%rd5];
	// inline asm
	prmt.b32 %r4885, %r4886, %r4887, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4885;
	ld.local.u32 	%r4891, [%rd4+12];
	// inline asm
	prmt.b32 %r4889, %r4887, %r4891, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4889;
	ld.local.u32 	%r4894, [%rd4+12];
	ld.local.u32 	%r4895, [%rd4+8];
	// inline asm
	prmt.b32 %r4893, %r4894, %r4895, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4893;
	ld.local.u32 	%r4898, [%rd4+8];
	ld.local.u32 	%r4899, [%rd4+4];
	// inline asm
	prmt.b32 %r4897, %r4898, %r4899, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4897;
	ld.local.u32 	%r4902, [%rd4+4];
	ld.local.u32 	%r4903, [%rd4];
	// inline asm
	prmt.b32 %r4901, %r4902, %r4903, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4901;
	ld.local.u32 	%r4907, [%rd3+12];
	// inline asm
	prmt.b32 %r4905, %r4903, %r4907, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4905;
	ld.local.u32 	%r4910, [%rd3+12];
	ld.local.u32 	%r4911, [%rd3+8];
	// inline asm
	prmt.b32 %r4909, %r4910, %r4911, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4909;
	ld.local.u32 	%r4914, [%rd3+8];
	ld.local.u32 	%r4915, [%rd3+4];
	// inline asm
	prmt.b32 %r4913, %r4914, %r4915, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4913;
	ld.local.u32 	%r4918, [%rd3+4];
	ld.local.u32 	%r4919, [%rd3];
	// inline asm
	prmt.b32 %r4917, %r4918, %r4919, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4917;
	ld.local.u32 	%r4923, [%rd2+12];
	// inline asm
	prmt.b32 %r4921, %r4919, %r4923, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4921;
	ld.local.u32 	%r4926, [%rd2+12];
	ld.local.u32 	%r4927, [%rd2+8];
	// inline asm
	prmt.b32 %r4925, %r4926, %r4927, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4925;
	ld.local.u32 	%r4930, [%rd2+8];
	ld.local.u32 	%r4931, [%rd2+4];
	// inline asm
	prmt.b32 %r4929, %r4930, %r4931, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4929;
	ld.local.u32 	%r4934, [%rd2+4];
	ld.local.u32 	%r4935, [%rd2];
	// inline asm
	prmt.b32 %r4933, %r4934, %r4935, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4933;
	ld.local.u32 	%r4939, [%rd1+12];
	// inline asm
	prmt.b32 %r4937, %r4935, %r4939, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4937;
	ld.local.u32 	%r4942, [%rd1+12];
	ld.local.u32 	%r4943, [%rd1+8];
	// inline asm
	prmt.b32 %r4941, %r4942, %r4943, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4941;
	ld.local.u32 	%r4946, [%rd1+8];
	ld.local.u32 	%r4947, [%rd1+4];
	// inline asm
	prmt.b32 %r4945, %r4946, %r4947, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4945;
	ld.local.u32 	%r4950, [%rd1+4];
	ld.local.u32 	%r4951, [%rd1];
	// inline asm
	prmt.b32 %r4949, %r4950, %r4951, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r4949;
	ld.local.u32 	%r4955, [%rd8+12];
	// inline asm
	prmt.b32 %r4953, %r4951, %r4955, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r4953;
	ld.local.u32 	%r4958, [%rd8+12];
	ld.local.u32 	%r4959, [%rd8+8];
	// inline asm
	prmt.b32 %r4957, %r4958, %r4959, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r4957;
	ld.local.u32 	%r4962, [%rd8+8];
	ld.local.u32 	%r4963, [%rd8+4];
	// inline asm
	prmt.b32 %r4961, %r4962, %r4963, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r4961;
	ld.local.u32 	%r4966, [%rd8+4];
	ld.local.u32 	%r4967, [%rd8];
	// inline asm
	prmt.b32 %r4965, %r4966, %r4967, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4965;
	// inline asm
	prmt.b32 %r4969, %r4967, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4969;
	mov.u64 	%rd47, 0;
	st.local.u32 	[%rd8+4], %rd47;
	st.local.u32 	[%rd8], %rd47;
	mov.u32 	%r9673, %r9672;
	bra.uni 	BB3_79;

BB3_128:
	setp.eq.s32	%p69, %r1, 18;
	@%p69 bra 	BB3_159;
	bra.uni 	BB3_129;

BB3_159:
	ld.local.u32 	%r7812, [%rd3+4];
	ld.local.u32 	%r7813, [%rd3];
	// inline asm
	prmt.b32 %r7811, %r7812, %r7813, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7811;
	ld.local.u32 	%r7816, [%rd3];
	ld.local.u32 	%r7817, [%rd2+12];
	// inline asm
	prmt.b32 %r7815, %r7816, %r7817, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7815;
	ld.local.u32 	%r7820, [%rd2+12];
	ld.local.u32 	%r7821, [%rd2+8];
	// inline asm
	prmt.b32 %r7819, %r7820, %r7821, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7819;
	ld.local.u32 	%r7824, [%rd2+8];
	ld.local.u32 	%r7825, [%rd2+4];
	// inline asm
	prmt.b32 %r7823, %r7824, %r7825, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7823;
	ld.local.u32 	%r7828, [%rd2+4];
	ld.local.u32 	%r7829, [%rd2];
	// inline asm
	prmt.b32 %r7827, %r7828, %r7829, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7827;
	ld.local.u32 	%r7832, [%rd2];
	ld.local.u32 	%r7833, [%rd1+12];
	// inline asm
	prmt.b32 %r7831, %r7832, %r7833, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7831;
	ld.local.u32 	%r7836, [%rd1+12];
	ld.local.u32 	%r7837, [%rd1+8];
	// inline asm
	prmt.b32 %r7835, %r7836, %r7837, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7835;
	ld.local.u32 	%r7840, [%rd1+8];
	ld.local.u32 	%r7841, [%rd1+4];
	// inline asm
	prmt.b32 %r7839, %r7840, %r7841, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7839;
	ld.local.u32 	%r7844, [%rd1+4];
	ld.local.u32 	%r7845, [%rd1];
	// inline asm
	prmt.b32 %r7843, %r7844, %r7845, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7843;
	ld.local.u32 	%r7848, [%rd1];
	ld.local.u32 	%r7849, [%rd8+12];
	// inline asm
	prmt.b32 %r7847, %r7848, %r7849, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7847;
	ld.local.u32 	%r7852, [%rd8+12];
	ld.local.u32 	%r7853, [%rd8+8];
	// inline asm
	prmt.b32 %r7851, %r7852, %r7853, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7851;
	ld.local.u32 	%r7856, [%rd8+8];
	ld.local.u32 	%r7857, [%rd8+4];
	// inline asm
	prmt.b32 %r7855, %r7856, %r7857, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7855;
	ld.local.u32 	%r7860, [%rd8+4];
	ld.local.u32 	%r7861, [%rd8];
	// inline asm
	prmt.b32 %r7859, %r7860, %r7861, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7859;
	ld.local.u32 	%r7864, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7863, %r7864, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7863;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2925, 0;
	st.local.u32 	[%rd8+4], %rd2925;
	st.local.u32 	[%rd8], %rd2925;
	bra.uni 	BB3_170;

BB3_39:
	setp.eq.s32	%p22, %r1, 18;
	@%p22 bra 	BB3_70;
	bra.uni 	BB3_40;

BB3_70:
	ld.local.u32 	%r2387, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9690, %r9672, %r2387, %r2;
	// inline asm
	ld.local.u32 	%r2391, [%rd7+8];
	// inline asm
	prmt.b32 %r9691, %r2387, %r2391, %r2;
	// inline asm
	ld.local.u32 	%r2395, [%rd7+4];
	// inline asm
	prmt.b32 %r9692, %r2391, %r2395, %r2;
	// inline asm
	ld.local.u32 	%r2399, [%rd7];
	// inline asm
	prmt.b32 %r9685, %r2395, %r2399, %r2;
	// inline asm
	ld.local.u32 	%r2403, [%rd6+12];
	// inline asm
	prmt.b32 %r9686, %r2399, %r2403, %r2;
	// inline asm
	ld.local.u32 	%r2407, [%rd6+8];
	// inline asm
	prmt.b32 %r9687, %r2403, %r2407, %r2;
	// inline asm
	ld.local.u32 	%r2411, [%rd6+4];
	// inline asm
	prmt.b32 %r9688, %r2407, %r2411, %r2;
	// inline asm
	ld.local.u32 	%r2415, [%rd6];
	// inline asm
	prmt.b32 %r9681, %r2411, %r2415, %r2;
	// inline asm
	ld.local.u32 	%r2419, [%rd5+12];
	// inline asm
	prmt.b32 %r9682, %r2415, %r2419, %r2;
	// inline asm
	ld.local.u32 	%r2423, [%rd5+8];
	// inline asm
	prmt.b32 %r9683, %r2419, %r2423, %r2;
	// inline asm
	ld.local.u32 	%r2427, [%rd5+4];
	// inline asm
	prmt.b32 %r9684, %r2423, %r2427, %r2;
	// inline asm
	ld.local.u32 	%r2431, [%rd5];
	// inline asm
	prmt.b32 %r9677, %r2427, %r2431, %r2;
	// inline asm
	ld.local.u32 	%r2435, [%rd4+12];
	// inline asm
	prmt.b32 %r9678, %r2431, %r2435, %r2;
	// inline asm
	ld.local.u32 	%r2439, [%rd4+8];
	// inline asm
	prmt.b32 %r9679, %r2435, %r2439, %r2;
	// inline asm
	ld.local.u32 	%r2443, [%rd4+4];
	// inline asm
	prmt.b32 %r9680, %r2439, %r2443, %r2;
	// inline asm
	ld.local.u32 	%r2447, [%rd4];
	// inline asm
	prmt.b32 %r9673, %r2443, %r2447, %r2;
	// inline asm
	ld.local.u32 	%r2451, [%rd3+12];
	// inline asm
	prmt.b32 %r9674, %r2447, %r2451, %r2;
	// inline asm
	ld.local.u32 	%r2455, [%rd3+8];
	// inline asm
	prmt.b32 %r9675, %r2451, %r2455, %r2;
	// inline asm
	ld.local.u32 	%r2459, [%rd3+4];
	// inline asm
	prmt.b32 %r9676, %r2455, %r2459, %r2;
	// inline asm
	ld.local.u32 	%r2463, [%rd3];
	// inline asm
	prmt.b32 %r2461, %r2459, %r2463, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2461;
	ld.local.u32 	%r2466, [%rd3];
	ld.local.u32 	%r2467, [%rd2+12];
	// inline asm
	prmt.b32 %r2465, %r2466, %r2467, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2465;
	ld.local.u32 	%r2470, [%rd2+12];
	ld.local.u32 	%r2471, [%rd2+8];
	// inline asm
	prmt.b32 %r2469, %r2470, %r2471, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2469;
	ld.local.u32 	%r2474, [%rd2+8];
	ld.local.u32 	%r2475, [%rd2+4];
	// inline asm
	prmt.b32 %r2473, %r2474, %r2475, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2473;
	ld.local.u32 	%r2478, [%rd2+4];
	ld.local.u32 	%r2479, [%rd2];
	// inline asm
	prmt.b32 %r2477, %r2478, %r2479, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2477;
	ld.local.u32 	%r2482, [%rd2];
	ld.local.u32 	%r2483, [%rd1+12];
	// inline asm
	prmt.b32 %r2481, %r2482, %r2483, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2481;
	ld.local.u32 	%r2486, [%rd1+12];
	ld.local.u32 	%r2487, [%rd1+8];
	// inline asm
	prmt.b32 %r2485, %r2486, %r2487, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2485;
	ld.local.u32 	%r2490, [%rd1+8];
	ld.local.u32 	%r2491, [%rd1+4];
	// inline asm
	prmt.b32 %r2489, %r2490, %r2491, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2489;
	ld.local.u32 	%r2494, [%rd1+4];
	ld.local.u32 	%r2495, [%rd1];
	// inline asm
	prmt.b32 %r2493, %r2494, %r2495, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2493;
	ld.local.u32 	%r2498, [%rd1];
	ld.local.u32 	%r2499, [%rd8+12];
	// inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2497;
	ld.local.u32 	%r2502, [%rd8+12];
	ld.local.u32 	%r2503, [%rd8+8];
	// inline asm
	prmt.b32 %r2501, %r2502, %r2503, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2501;
	ld.local.u32 	%r2506, [%rd8+8];
	ld.local.u32 	%r2507, [%rd8+4];
	// inline asm
	prmt.b32 %r2505, %r2506, %r2507, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r2505;
	ld.local.u32 	%r2510, [%rd8+4];
	ld.local.u32 	%r2511, [%rd8];
	// inline asm
	prmt.b32 %r2509, %r2510, %r2511, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r2509;
	ld.local.u32 	%r2514, [%rd8];
	// inline asm
	prmt.b32 %r2513, %r2514, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r2513;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd32, 0;
	st.local.u32 	[%rd8+4], %rd32;
	st.local.u32 	[%rd8], %rd32;
	mov.u32 	%r9689, %r9672;
	bra.uni 	BB3_83;

BB3_112:
	setp.eq.s32	%p81, %r1, 10;
	@%p81 bra 	BB3_163;
	bra.uni 	BB3_113;

BB3_163:
	ld.local.u32 	%r8380, [%rd5+4];
	ld.local.u32 	%r8381, [%rd5];
	// inline asm
	prmt.b32 %r8379, %r8380, %r8381, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8379;
	ld.local.u32 	%r8384, [%rd5];
	ld.local.u32 	%r8385, [%rd4+12];
	// inline asm
	prmt.b32 %r8383, %r8384, %r8385, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8383;
	ld.local.u32 	%r8388, [%rd4+12];
	ld.local.u32 	%r8389, [%rd4+8];
	// inline asm
	prmt.b32 %r8387, %r8388, %r8389, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8387;
	ld.local.u32 	%r8392, [%rd4+8];
	ld.local.u32 	%r8393, [%rd4+4];
	// inline asm
	prmt.b32 %r8391, %r8392, %r8393, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8391;
	ld.local.u32 	%r8396, [%rd4+4];
	ld.local.u32 	%r8397, [%rd4];
	// inline asm
	prmt.b32 %r8395, %r8396, %r8397, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8395;
	ld.local.u32 	%r8400, [%rd4];
	ld.local.u32 	%r8401, [%rd3+12];
	// inline asm
	prmt.b32 %r8399, %r8400, %r8401, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8399;
	ld.local.u32 	%r8404, [%rd3+12];
	ld.local.u32 	%r8405, [%rd3+8];
	// inline asm
	prmt.b32 %r8403, %r8404, %r8405, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8403;
	ld.local.u32 	%r8408, [%rd3+8];
	ld.local.u32 	%r8409, [%rd3+4];
	// inline asm
	prmt.b32 %r8407, %r8408, %r8409, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8407;
	ld.local.u32 	%r8412, [%rd3+4];
	ld.local.u32 	%r8413, [%rd3];
	// inline asm
	prmt.b32 %r8411, %r8412, %r8413, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8411;
	ld.local.u32 	%r8416, [%rd3];
	ld.local.u32 	%r8417, [%rd2+12];
	// inline asm
	prmt.b32 %r8415, %r8416, %r8417, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8415;
	ld.local.u32 	%r8420, [%rd2+12];
	ld.local.u32 	%r8421, [%rd2+8];
	// inline asm
	prmt.b32 %r8419, %r8420, %r8421, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8419;
	ld.local.u32 	%r8424, [%rd2+8];
	ld.local.u32 	%r8425, [%rd2+4];
	// inline asm
	prmt.b32 %r8423, %r8424, %r8425, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8423;
	ld.local.u32 	%r8428, [%rd2+4];
	ld.local.u32 	%r8429, [%rd2];
	// inline asm
	prmt.b32 %r8427, %r8428, %r8429, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8427;
	ld.local.u32 	%r8432, [%rd2];
	ld.local.u32 	%r8433, [%rd1+12];
	// inline asm
	prmt.b32 %r8431, %r8432, %r8433, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8431;
	ld.local.u32 	%r8436, [%rd1+12];
	ld.local.u32 	%r8437, [%rd1+8];
	// inline asm
	prmt.b32 %r8435, %r8436, %r8437, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8435;
	ld.local.u32 	%r8440, [%rd1+8];
	ld.local.u32 	%r8441, [%rd1+4];
	// inline asm
	prmt.b32 %r8439, %r8440, %r8441, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8439;
	ld.local.u32 	%r8444, [%rd1+4];
	ld.local.u32 	%r8445, [%rd1];
	// inline asm
	prmt.b32 %r8443, %r8444, %r8445, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8443;
	ld.local.u32 	%r8448, [%rd1];
	ld.local.u32 	%r8449, [%rd8+12];
	// inline asm
	prmt.b32 %r8447, %r8448, %r8449, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8447;
	ld.local.u32 	%r8452, [%rd8+12];
	ld.local.u32 	%r8453, [%rd8+8];
	// inline asm
	prmt.b32 %r8451, %r8452, %r8453, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8451;
	ld.local.u32 	%r8456, [%rd8+8];
	ld.local.u32 	%r8457, [%rd8+4];
	// inline asm
	prmt.b32 %r8455, %r8456, %r8457, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8455;
	ld.local.u32 	%r8460, [%rd8+4];
	ld.local.u32 	%r8461, [%rd8];
	// inline asm
	prmt.b32 %r8459, %r8460, %r8461, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8459;
	ld.local.u32 	%r8464, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8463, %r8464, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8463;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2933, 0;
	st.local.u32 	[%rd8+4], %rd2933;
	st.local.u32 	[%rd8], %rd2933;
	bra.uni 	BB3_170;

BB3_23:
	setp.eq.s32	%p34, %r1, 10;
	@%p34 bra 	BB3_74;
	bra.uni 	BB3_24;

BB3_74:
	ld.local.u32 	%r3583, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9682, %r9672, %r3583, %r2;
	// inline asm
	ld.local.u32 	%r3587, [%rd7+8];
	// inline asm
	prmt.b32 %r9683, %r3583, %r3587, %r2;
	// inline asm
	ld.local.u32 	%r3591, [%rd7+4];
	// inline asm
	prmt.b32 %r9684, %r3587, %r3591, %r2;
	// inline asm
	ld.local.u32 	%r3595, [%rd7];
	// inline asm
	prmt.b32 %r9677, %r3591, %r3595, %r2;
	// inline asm
	ld.local.u32 	%r3599, [%rd6+12];
	// inline asm
	prmt.b32 %r9678, %r3595, %r3599, %r2;
	// inline asm
	ld.local.u32 	%r3603, [%rd6+8];
	// inline asm
	prmt.b32 %r9679, %r3599, %r3603, %r2;
	// inline asm
	ld.local.u32 	%r3607, [%rd6+4];
	// inline asm
	prmt.b32 %r9680, %r3603, %r3607, %r2;
	// inline asm
	ld.local.u32 	%r3611, [%rd6];
	// inline asm
	prmt.b32 %r9673, %r3607, %r3611, %r2;
	// inline asm
	ld.local.u32 	%r3615, [%rd5+12];
	// inline asm
	prmt.b32 %r9674, %r3611, %r3615, %r2;
	// inline asm
	ld.local.u32 	%r3619, [%rd5+8];
	// inline asm
	prmt.b32 %r9675, %r3615, %r3619, %r2;
	// inline asm
	ld.local.u32 	%r3623, [%rd5+4];
	// inline asm
	prmt.b32 %r9676, %r3619, %r3623, %r2;
	// inline asm
	ld.local.u32 	%r3627, [%rd5];
	// inline asm
	prmt.b32 %r3625, %r3623, %r3627, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3625;
	ld.local.u32 	%r3630, [%rd5];
	ld.local.u32 	%r3631, [%rd4+12];
	// inline asm
	prmt.b32 %r3629, %r3630, %r3631, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3629;
	ld.local.u32 	%r3634, [%rd4+12];
	ld.local.u32 	%r3635, [%rd4+8];
	// inline asm
	prmt.b32 %r3633, %r3634, %r3635, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3633;
	ld.local.u32 	%r3638, [%rd4+8];
	ld.local.u32 	%r3639, [%rd4+4];
	// inline asm
	prmt.b32 %r3637, %r3638, %r3639, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3637;
	ld.local.u32 	%r3642, [%rd4+4];
	ld.local.u32 	%r3643, [%rd4];
	// inline asm
	prmt.b32 %r3641, %r3642, %r3643, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3641;
	ld.local.u32 	%r3646, [%rd4];
	ld.local.u32 	%r3647, [%rd3+12];
	// inline asm
	prmt.b32 %r3645, %r3646, %r3647, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3645;
	ld.local.u32 	%r3650, [%rd3+12];
	ld.local.u32 	%r3651, [%rd3+8];
	// inline asm
	prmt.b32 %r3649, %r3650, %r3651, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3649;
	ld.local.u32 	%r3654, [%rd3+8];
	ld.local.u32 	%r3655, [%rd3+4];
	// inline asm
	prmt.b32 %r3653, %r3654, %r3655, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3653;
	ld.local.u32 	%r3658, [%rd3+4];
	ld.local.u32 	%r3659, [%rd3];
	// inline asm
	prmt.b32 %r3657, %r3658, %r3659, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3657;
	ld.local.u32 	%r3662, [%rd3];
	ld.local.u32 	%r3663, [%rd2+12];
	// inline asm
	prmt.b32 %r3661, %r3662, %r3663, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3661;
	ld.local.u32 	%r3666, [%rd2+12];
	ld.local.u32 	%r3667, [%rd2+8];
	// inline asm
	prmt.b32 %r3665, %r3666, %r3667, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3665;
	ld.local.u32 	%r3670, [%rd2+8];
	ld.local.u32 	%r3671, [%rd2+4];
	// inline asm
	prmt.b32 %r3669, %r3670, %r3671, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3669;
	ld.local.u32 	%r3674, [%rd2+4];
	ld.local.u32 	%r3675, [%rd2];
	// inline asm
	prmt.b32 %r3673, %r3674, %r3675, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3673;
	ld.local.u32 	%r3678, [%rd2];
	ld.local.u32 	%r3679, [%rd1+12];
	// inline asm
	prmt.b32 %r3677, %r3678, %r3679, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3677;
	ld.local.u32 	%r3682, [%rd1+12];
	ld.local.u32 	%r3683, [%rd1+8];
	// inline asm
	prmt.b32 %r3681, %r3682, %r3683, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3681;
	ld.local.u32 	%r3686, [%rd1+8];
	ld.local.u32 	%r3687, [%rd1+4];
	// inline asm
	prmt.b32 %r3685, %r3686, %r3687, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3685;
	ld.local.u32 	%r3690, [%rd1+4];
	ld.local.u32 	%r3691, [%rd1];
	// inline asm
	prmt.b32 %r3689, %r3690, %r3691, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3689;
	ld.local.u32 	%r3694, [%rd1];
	ld.local.u32 	%r3695, [%rd8+12];
	// inline asm
	prmt.b32 %r3693, %r3694, %r3695, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3693;
	ld.local.u32 	%r3698, [%rd8+12];
	ld.local.u32 	%r3699, [%rd8+8];
	// inline asm
	prmt.b32 %r3697, %r3698, %r3699, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r3697;
	ld.local.u32 	%r3702, [%rd8+8];
	ld.local.u32 	%r3703, [%rd8+4];
	// inline asm
	prmt.b32 %r3701, %r3702, %r3703, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r3701;
	ld.local.u32 	%r3706, [%rd8+4];
	ld.local.u32 	%r3707, [%rd8];
	// inline asm
	prmt.b32 %r3705, %r3706, %r3707, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r3705;
	ld.local.u32 	%r3710, [%rd8];
	// inline asm
	prmt.b32 %r3709, %r3710, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r3709;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd40, 0;
	st.local.u32 	[%rd8+4], %rd40;
	st.local.u32 	[%rd8], %rd40;
	mov.u32 	%r9681, %r9672;
	bra.uni 	BB3_81;

BB3_143:
	setp.eq.s32	%p58, %r1, 26;
	@%p58 bra 	BB3_155;
	bra.uni 	BB3_144;

BB3_155:
	ld.local.u32 	%r7500, [%rd1+4];
	ld.local.u32 	%r7501, [%rd1];
	// inline asm
	prmt.b32 %r7499, %r7500, %r7501, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7499;
	ld.local.u32 	%r7504, [%rd1];
	ld.local.u32 	%r7505, [%rd8+12];
	// inline asm
	prmt.b32 %r7503, %r7504, %r7505, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7503;
	ld.local.u32 	%r7508, [%rd8+12];
	ld.local.u32 	%r7509, [%rd8+8];
	// inline asm
	prmt.b32 %r7507, %r7508, %r7509, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7507;
	ld.local.u32 	%r7512, [%rd8+8];
	ld.local.u32 	%r7513, [%rd8+4];
	// inline asm
	prmt.b32 %r7511, %r7512, %r7513, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7511;
	ld.local.u32 	%r7516, [%rd8+4];
	ld.local.u32 	%r7517, [%rd8];
	// inline asm
	prmt.b32 %r7515, %r7516, %r7517, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7515;
	ld.local.u32 	%r7520, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7519, %r7520, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7519;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2917, 0;
	st.local.u32 	[%rd8+4], %rd2917;
	st.local.u32 	[%rd8], %rd2917;
	bra.uni 	BB3_170;

BB3_54:
	setp.eq.s32	%p11, %r1, 26;
	@%p11 bra 	BB3_66;
	bra.uni 	BB3_55;

BB3_66:
	ld.local.u32 	%r1255, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9698, %r9672, %r1255, %r2;
	// inline asm
	ld.local.u32 	%r1259, [%rd7+8];
	// inline asm
	prmt.b32 %r9699, %r1255, %r1259, %r2;
	// inline asm
	ld.local.u32 	%r1263, [%rd7+4];
	// inline asm
	prmt.b32 %r9700, %r1259, %r1263, %r2;
	// inline asm
	ld.local.u32 	%r1267, [%rd7];
	// inline asm
	prmt.b32 %r9693, %r1263, %r1267, %r2;
	// inline asm
	ld.local.u32 	%r1271, [%rd6+12];
	// inline asm
	prmt.b32 %r9694, %r1267, %r1271, %r2;
	// inline asm
	ld.local.u32 	%r1275, [%rd6+8];
	// inline asm
	prmt.b32 %r9695, %r1271, %r1275, %r2;
	// inline asm
	ld.local.u32 	%r1279, [%rd6+4];
	// inline asm
	prmt.b32 %r9696, %r1275, %r1279, %r2;
	// inline asm
	ld.local.u32 	%r1283, [%rd6];
	// inline asm
	prmt.b32 %r9689, %r1279, %r1283, %r2;
	// inline asm
	ld.local.u32 	%r1287, [%rd5+12];
	// inline asm
	prmt.b32 %r9690, %r1283, %r1287, %r2;
	// inline asm
	ld.local.u32 	%r1291, [%rd5+8];
	// inline asm
	prmt.b32 %r9691, %r1287, %r1291, %r2;
	// inline asm
	ld.local.u32 	%r1295, [%rd5+4];
	// inline asm
	prmt.b32 %r9692, %r1291, %r1295, %r2;
	// inline asm
	ld.local.u32 	%r1299, [%rd5];
	// inline asm
	prmt.b32 %r9685, %r1295, %r1299, %r2;
	// inline asm
	ld.local.u32 	%r1303, [%rd4+12];
	// inline asm
	prmt.b32 %r9686, %r1299, %r1303, %r2;
	// inline asm
	ld.local.u32 	%r1307, [%rd4+8];
	// inline asm
	prmt.b32 %r9687, %r1303, %r1307, %r2;
	// inline asm
	ld.local.u32 	%r1311, [%rd4+4];
	// inline asm
	prmt.b32 %r9688, %r1307, %r1311, %r2;
	// inline asm
	ld.local.u32 	%r1315, [%rd4];
	// inline asm
	prmt.b32 %r9681, %r1311, %r1315, %r2;
	// inline asm
	ld.local.u32 	%r1319, [%rd3+12];
	// inline asm
	prmt.b32 %r9682, %r1315, %r1319, %r2;
	// inline asm
	ld.local.u32 	%r1323, [%rd3+8];
	// inline asm
	prmt.b32 %r9683, %r1319, %r1323, %r2;
	// inline asm
	ld.local.u32 	%r1327, [%rd3+4];
	// inline asm
	prmt.b32 %r9684, %r1323, %r1327, %r2;
	// inline asm
	ld.local.u32 	%r1331, [%rd3];
	// inline asm
	prmt.b32 %r9677, %r1327, %r1331, %r2;
	// inline asm
	ld.local.u32 	%r1335, [%rd2+12];
	// inline asm
	prmt.b32 %r9678, %r1331, %r1335, %r2;
	// inline asm
	ld.local.u32 	%r1339, [%rd2+8];
	// inline asm
	prmt.b32 %r9679, %r1335, %r1339, %r2;
	// inline asm
	ld.local.u32 	%r1343, [%rd2+4];
	// inline asm
	prmt.b32 %r9680, %r1339, %r1343, %r2;
	// inline asm
	ld.local.u32 	%r1347, [%rd2];
	// inline asm
	prmt.b32 %r9673, %r1343, %r1347, %r2;
	// inline asm
	ld.local.u32 	%r1351, [%rd1+12];
	// inline asm
	prmt.b32 %r9674, %r1347, %r1351, %r2;
	// inline asm
	ld.local.u32 	%r1355, [%rd1+8];
	// inline asm
	prmt.b32 %r9675, %r1351, %r1355, %r2;
	// inline asm
	ld.local.u32 	%r1359, [%rd1+4];
	// inline asm
	prmt.b32 %r9676, %r1355, %r1359, %r2;
	// inline asm
	ld.local.u32 	%r1363, [%rd1];
	// inline asm
	prmt.b32 %r1361, %r1359, %r1363, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1361;
	ld.local.u32 	%r1366, [%rd1];
	ld.local.u32 	%r1367, [%rd8+12];
	// inline asm
	prmt.b32 %r1365, %r1366, %r1367, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1365;
	ld.local.u32 	%r1370, [%rd8+12];
	ld.local.u32 	%r1371, [%rd8+8];
	// inline asm
	prmt.b32 %r1369, %r1370, %r1371, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1369;
	ld.local.u32 	%r1374, [%rd8+8];
	ld.local.u32 	%r1375, [%rd8+4];
	// inline asm
	prmt.b32 %r1373, %r1374, %r1375, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1373;
	ld.local.u32 	%r1378, [%rd8+4];
	ld.local.u32 	%r1379, [%rd8];
	// inline asm
	prmt.b32 %r1377, %r1378, %r1379, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r1377;
	ld.local.u32 	%r1382, [%rd8];
	// inline asm
	prmt.b32 %r1381, %r1382, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r1381;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd24, 0;
	st.local.u32 	[%rd8+4], %rd24;
	st.local.u32 	[%rd8], %rd24;
	mov.u32 	%r9697, %r9672;
	bra.uni 	BB3_85;

BB3_104:
	setp.eq.s32	%p87, %r1, 6;
	@%p87 bra 	BB3_165;
	bra.uni 	BB3_105;

BB3_165:
	ld.local.u32 	%r8760, [%rd6+4];
	ld.local.u32 	%r8761, [%rd6];
	// inline asm
	prmt.b32 %r8759, %r8760, %r8761, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8759;
	ld.local.u32 	%r8764, [%rd6];
	ld.local.u32 	%r8765, [%rd5+12];
	// inline asm
	prmt.b32 %r8763, %r8764, %r8765, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8763;
	ld.local.u32 	%r8768, [%rd5+12];
	ld.local.u32 	%r8769, [%rd5+8];
	// inline asm
	prmt.b32 %r8767, %r8768, %r8769, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8767;
	ld.local.u32 	%r8772, [%rd5+8];
	ld.local.u32 	%r8773, [%rd5+4];
	// inline asm
	prmt.b32 %r8771, %r8772, %r8773, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8771;
	ld.local.u32 	%r8776, [%rd5+4];
	ld.local.u32 	%r8777, [%rd5];
	// inline asm
	prmt.b32 %r8775, %r8776, %r8777, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8775;
	ld.local.u32 	%r8780, [%rd5];
	ld.local.u32 	%r8781, [%rd4+12];
	// inline asm
	prmt.b32 %r8779, %r8780, %r8781, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8779;
	ld.local.u32 	%r8784, [%rd4+12];
	ld.local.u32 	%r8785, [%rd4+8];
	// inline asm
	prmt.b32 %r8783, %r8784, %r8785, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8783;
	ld.local.u32 	%r8788, [%rd4+8];
	ld.local.u32 	%r8789, [%rd4+4];
	// inline asm
	prmt.b32 %r8787, %r8788, %r8789, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8787;
	ld.local.u32 	%r8792, [%rd4+4];
	ld.local.u32 	%r8793, [%rd4];
	// inline asm
	prmt.b32 %r8791, %r8792, %r8793, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8791;
	ld.local.u32 	%r8796, [%rd4];
	ld.local.u32 	%r8797, [%rd3+12];
	// inline asm
	prmt.b32 %r8795, %r8796, %r8797, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8795;
	ld.local.u32 	%r8800, [%rd3+12];
	ld.local.u32 	%r8801, [%rd3+8];
	// inline asm
	prmt.b32 %r8799, %r8800, %r8801, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8799;
	ld.local.u32 	%r8804, [%rd3+8];
	ld.local.u32 	%r8805, [%rd3+4];
	// inline asm
	prmt.b32 %r8803, %r8804, %r8805, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8803;
	ld.local.u32 	%r8808, [%rd3+4];
	ld.local.u32 	%r8809, [%rd3];
	// inline asm
	prmt.b32 %r8807, %r8808, %r8809, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8807;
	ld.local.u32 	%r8812, [%rd3];
	ld.local.u32 	%r8813, [%rd2+12];
	// inline asm
	prmt.b32 %r8811, %r8812, %r8813, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8811;
	ld.local.u32 	%r8816, [%rd2+12];
	ld.local.u32 	%r8817, [%rd2+8];
	// inline asm
	prmt.b32 %r8815, %r8816, %r8817, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8815;
	ld.local.u32 	%r8820, [%rd2+8];
	ld.local.u32 	%r8821, [%rd2+4];
	// inline asm
	prmt.b32 %r8819, %r8820, %r8821, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8819;
	ld.local.u32 	%r8824, [%rd2+4];
	ld.local.u32 	%r8825, [%rd2];
	// inline asm
	prmt.b32 %r8823, %r8824, %r8825, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8823;
	ld.local.u32 	%r8828, [%rd2];
	ld.local.u32 	%r8829, [%rd1+12];
	// inline asm
	prmt.b32 %r8827, %r8828, %r8829, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8827;
	ld.local.u32 	%r8832, [%rd1+12];
	ld.local.u32 	%r8833, [%rd1+8];
	// inline asm
	prmt.b32 %r8831, %r8832, %r8833, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8831;
	ld.local.u32 	%r8836, [%rd1+8];
	ld.local.u32 	%r8837, [%rd1+4];
	// inline asm
	prmt.b32 %r8835, %r8836, %r8837, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8835;
	ld.local.u32 	%r8840, [%rd1+4];
	ld.local.u32 	%r8841, [%rd1];
	// inline asm
	prmt.b32 %r8839, %r8840, %r8841, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8839;
	ld.local.u32 	%r8844, [%rd1];
	ld.local.u32 	%r8845, [%rd8+12];
	// inline asm
	prmt.b32 %r8843, %r8844, %r8845, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8843;
	ld.local.u32 	%r8848, [%rd8+12];
	ld.local.u32 	%r8849, [%rd8+8];
	// inline asm
	prmt.b32 %r8847, %r8848, %r8849, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r8847;
	ld.local.u32 	%r8852, [%rd8+8];
	ld.local.u32 	%r8853, [%rd8+4];
	// inline asm
	prmt.b32 %r8851, %r8852, %r8853, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r8851;
	ld.local.u32 	%r8856, [%rd8+4];
	ld.local.u32 	%r8857, [%rd8];
	// inline asm
	prmt.b32 %r8855, %r8856, %r8857, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r8855;
	ld.local.u32 	%r8860, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8859, %r8860, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r8859;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2937, 0;
	st.local.u32 	[%rd8+4], %rd2937;
	st.local.u32 	[%rd8], %rd2937;
	bra.uni 	BB3_170;

BB3_15:
	setp.eq.s32	%p40, %r1, 6;
	@%p40 bra 	BB3_76;
	bra.uni 	BB3_16;

BB3_76:
	ld.local.u32 	%r4205, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9678, %r9672, %r4205, %r2;
	// inline asm
	ld.local.u32 	%r4209, [%rd7+8];
	// inline asm
	prmt.b32 %r9679, %r4205, %r4209, %r2;
	// inline asm
	ld.local.u32 	%r4213, [%rd7+4];
	// inline asm
	prmt.b32 %r9680, %r4209, %r4213, %r2;
	// inline asm
	ld.local.u32 	%r4217, [%rd7];
	// inline asm
	prmt.b32 %r9673, %r4213, %r4217, %r2;
	// inline asm
	ld.local.u32 	%r4221, [%rd6+12];
	// inline asm
	prmt.b32 %r9674, %r4217, %r4221, %r2;
	// inline asm
	ld.local.u32 	%r4225, [%rd6+8];
	// inline asm
	prmt.b32 %r9675, %r4221, %r4225, %r2;
	// inline asm
	ld.local.u32 	%r4229, [%rd6+4];
	// inline asm
	prmt.b32 %r9676, %r4225, %r4229, %r2;
	// inline asm
	ld.local.u32 	%r4233, [%rd6];
	// inline asm
	prmt.b32 %r4231, %r4229, %r4233, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4231;
	ld.local.u32 	%r4236, [%rd6];
	ld.local.u32 	%r4237, [%rd5+12];
	// inline asm
	prmt.b32 %r4235, %r4236, %r4237, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4235;
	ld.local.u32 	%r4240, [%rd5+12];
	ld.local.u32 	%r4241, [%rd5+8];
	// inline asm
	prmt.b32 %r4239, %r4240, %r4241, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4239;
	ld.local.u32 	%r4244, [%rd5+8];
	ld.local.u32 	%r4245, [%rd5+4];
	// inline asm
	prmt.b32 %r4243, %r4244, %r4245, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4243;
	ld.local.u32 	%r4248, [%rd5+4];
	ld.local.u32 	%r4249, [%rd5];
	// inline asm
	prmt.b32 %r4247, %r4248, %r4249, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4247;
	ld.local.u32 	%r4252, [%rd5];
	ld.local.u32 	%r4253, [%rd4+12];
	// inline asm
	prmt.b32 %r4251, %r4252, %r4253, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4251;
	ld.local.u32 	%r4256, [%rd4+12];
	ld.local.u32 	%r4257, [%rd4+8];
	// inline asm
	prmt.b32 %r4255, %r4256, %r4257, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4255;
	ld.local.u32 	%r4260, [%rd4+8];
	ld.local.u32 	%r4261, [%rd4+4];
	// inline asm
	prmt.b32 %r4259, %r4260, %r4261, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4259;
	ld.local.u32 	%r4264, [%rd4+4];
	ld.local.u32 	%r4265, [%rd4];
	// inline asm
	prmt.b32 %r4263, %r4264, %r4265, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4263;
	ld.local.u32 	%r4268, [%rd4];
	ld.local.u32 	%r4269, [%rd3+12];
	// inline asm
	prmt.b32 %r4267, %r4268, %r4269, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4267;
	ld.local.u32 	%r4272, [%rd3+12];
	ld.local.u32 	%r4273, [%rd3+8];
	// inline asm
	prmt.b32 %r4271, %r4272, %r4273, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4271;
	ld.local.u32 	%r4276, [%rd3+8];
	ld.local.u32 	%r4277, [%rd3+4];
	// inline asm
	prmt.b32 %r4275, %r4276, %r4277, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4275;
	ld.local.u32 	%r4280, [%rd3+4];
	ld.local.u32 	%r4281, [%rd3];
	// inline asm
	prmt.b32 %r4279, %r4280, %r4281, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4279;
	ld.local.u32 	%r4284, [%rd3];
	ld.local.u32 	%r4285, [%rd2+12];
	// inline asm
	prmt.b32 %r4283, %r4284, %r4285, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4283;
	ld.local.u32 	%r4288, [%rd2+12];
	ld.local.u32 	%r4289, [%rd2+8];
	// inline asm
	prmt.b32 %r4287, %r4288, %r4289, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4287;
	ld.local.u32 	%r4292, [%rd2+8];
	ld.local.u32 	%r4293, [%rd2+4];
	// inline asm
	prmt.b32 %r4291, %r4292, %r4293, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4291;
	ld.local.u32 	%r4296, [%rd2+4];
	ld.local.u32 	%r4297, [%rd2];
	// inline asm
	prmt.b32 %r4295, %r4296, %r4297, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4295;
	ld.local.u32 	%r4300, [%rd2];
	ld.local.u32 	%r4301, [%rd1+12];
	// inline asm
	prmt.b32 %r4299, %r4300, %r4301, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4299;
	ld.local.u32 	%r4304, [%rd1+12];
	ld.local.u32 	%r4305, [%rd1+8];
	// inline asm
	prmt.b32 %r4303, %r4304, %r4305, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4303;
	ld.local.u32 	%r4308, [%rd1+8];
	ld.local.u32 	%r4309, [%rd1+4];
	// inline asm
	prmt.b32 %r4307, %r4308, %r4309, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4307;
	ld.local.u32 	%r4312, [%rd1+4];
	ld.local.u32 	%r4313, [%rd1];
	// inline asm
	prmt.b32 %r4311, %r4312, %r4313, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4311;
	ld.local.u32 	%r4316, [%rd1];
	ld.local.u32 	%r4317, [%rd8+12];
	// inline asm
	prmt.b32 %r4315, %r4316, %r4317, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4315;
	ld.local.u32 	%r4320, [%rd8+12];
	ld.local.u32 	%r4321, [%rd8+8];
	// inline asm
	prmt.b32 %r4319, %r4320, %r4321, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4319;
	ld.local.u32 	%r4324, [%rd8+8];
	ld.local.u32 	%r4325, [%rd8+4];
	// inline asm
	prmt.b32 %r4323, %r4324, %r4325, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4323;
	ld.local.u32 	%r4328, [%rd8+4];
	ld.local.u32 	%r4329, [%rd8];
	// inline asm
	prmt.b32 %r4327, %r4328, %r4329, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r4327;
	ld.local.u32 	%r4332, [%rd8];
	// inline asm
	prmt.b32 %r4331, %r4332, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r4331;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd44, 0;
	st.local.u32 	[%rd8+4], %rd44;
	st.local.u32 	[%rd8], %rd44;
	mov.u32 	%r9677, %r9672;
	bra.uni 	BB3_80;

BB3_135:
	setp.eq.s32	%p64, %r1, 22;
	@%p64 bra 	BB3_157;
	bra.uni 	BB3_136;

BB3_157:
	ld.local.u32 	%r7624, [%rd2+4];
	ld.local.u32 	%r7625, [%rd2];
	// inline asm
	prmt.b32 %r7623, %r7624, %r7625, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7623;
	ld.local.u32 	%r7628, [%rd2];
	ld.local.u32 	%r7629, [%rd1+12];
	// inline asm
	prmt.b32 %r7627, %r7628, %r7629, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7627;
	ld.local.u32 	%r7632, [%rd1+12];
	ld.local.u32 	%r7633, [%rd1+8];
	// inline asm
	prmt.b32 %r7631, %r7632, %r7633, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7631;
	ld.local.u32 	%r7636, [%rd1+8];
	ld.local.u32 	%r7637, [%rd1+4];
	// inline asm
	prmt.b32 %r7635, %r7636, %r7637, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7635;
	ld.local.u32 	%r7640, [%rd1+4];
	ld.local.u32 	%r7641, [%rd1];
	// inline asm
	prmt.b32 %r7639, %r7640, %r7641, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7639;
	ld.local.u32 	%r7644, [%rd1];
	ld.local.u32 	%r7645, [%rd8+12];
	// inline asm
	prmt.b32 %r7643, %r7644, %r7645, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7643;
	ld.local.u32 	%r7648, [%rd8+12];
	ld.local.u32 	%r7649, [%rd8+8];
	// inline asm
	prmt.b32 %r7647, %r7648, %r7649, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7647;
	ld.local.u32 	%r7652, [%rd8+8];
	ld.local.u32 	%r7653, [%rd8+4];
	// inline asm
	prmt.b32 %r7651, %r7652, %r7653, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7651;
	ld.local.u32 	%r7656, [%rd8+4];
	ld.local.u32 	%r7657, [%rd8];
	// inline asm
	prmt.b32 %r7655, %r7656, %r7657, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7655;
	ld.local.u32 	%r7660, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7659, %r7660, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7659;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2921, 0;
	st.local.u32 	[%rd8+4], %rd2921;
	st.local.u32 	[%rd8], %rd2921;
	bra.uni 	BB3_170;

BB3_46:
	setp.eq.s32	%p17, %r1, 22;
	@%p17 bra 	BB3_68;
	bra.uni 	BB3_47;

BB3_68:
	ld.local.u32 	%r1813, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9694, %r9672, %r1813, %r2;
	// inline asm
	ld.local.u32 	%r1817, [%rd7+8];
	// inline asm
	prmt.b32 %r9695, %r1813, %r1817, %r2;
	// inline asm
	ld.local.u32 	%r1821, [%rd7+4];
	// inline asm
	prmt.b32 %r9696, %r1817, %r1821, %r2;
	// inline asm
	ld.local.u32 	%r1825, [%rd7];
	// inline asm
	prmt.b32 %r9689, %r1821, %r1825, %r2;
	// inline asm
	ld.local.u32 	%r1829, [%rd6+12];
	// inline asm
	prmt.b32 %r9690, %r1825, %r1829, %r2;
	// inline asm
	ld.local.u32 	%r1833, [%rd6+8];
	// inline asm
	prmt.b32 %r9691, %r1829, %r1833, %r2;
	// inline asm
	ld.local.u32 	%r1837, [%rd6+4];
	// inline asm
	prmt.b32 %r9692, %r1833, %r1837, %r2;
	// inline asm
	ld.local.u32 	%r1841, [%rd6];
	// inline asm
	prmt.b32 %r9685, %r1837, %r1841, %r2;
	// inline asm
	ld.local.u32 	%r1845, [%rd5+12];
	// inline asm
	prmt.b32 %r9686, %r1841, %r1845, %r2;
	// inline asm
	ld.local.u32 	%r1849, [%rd5+8];
	// inline asm
	prmt.b32 %r9687, %r1845, %r1849, %r2;
	// inline asm
	ld.local.u32 	%r1853, [%rd5+4];
	// inline asm
	prmt.b32 %r9688, %r1849, %r1853, %r2;
	// inline asm
	ld.local.u32 	%r1857, [%rd5];
	// inline asm
	prmt.b32 %r9681, %r1853, %r1857, %r2;
	// inline asm
	ld.local.u32 	%r1861, [%rd4+12];
	// inline asm
	prmt.b32 %r9682, %r1857, %r1861, %r2;
	// inline asm
	ld.local.u32 	%r1865, [%rd4+8];
	// inline asm
	prmt.b32 %r9683, %r1861, %r1865, %r2;
	// inline asm
	ld.local.u32 	%r1869, [%rd4+4];
	// inline asm
	prmt.b32 %r9684, %r1865, %r1869, %r2;
	// inline asm
	ld.local.u32 	%r1873, [%rd4];
	// inline asm
	prmt.b32 %r9677, %r1869, %r1873, %r2;
	// inline asm
	ld.local.u32 	%r1877, [%rd3+12];
	// inline asm
	prmt.b32 %r9678, %r1873, %r1877, %r2;
	// inline asm
	ld.local.u32 	%r1881, [%rd3+8];
	// inline asm
	prmt.b32 %r9679, %r1877, %r1881, %r2;
	// inline asm
	ld.local.u32 	%r1885, [%rd3+4];
	// inline asm
	prmt.b32 %r9680, %r1881, %r1885, %r2;
	// inline asm
	ld.local.u32 	%r1889, [%rd3];
	// inline asm
	prmt.b32 %r9673, %r1885, %r1889, %r2;
	// inline asm
	ld.local.u32 	%r1893, [%rd2+12];
	// inline asm
	prmt.b32 %r9674, %r1889, %r1893, %r2;
	// inline asm
	ld.local.u32 	%r1897, [%rd2+8];
	// inline asm
	prmt.b32 %r9675, %r1893, %r1897, %r2;
	// inline asm
	ld.local.u32 	%r1901, [%rd2+4];
	// inline asm
	prmt.b32 %r9676, %r1897, %r1901, %r2;
	// inline asm
	ld.local.u32 	%r1905, [%rd2];
	// inline asm
	prmt.b32 %r1903, %r1901, %r1905, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1903;
	ld.local.u32 	%r1908, [%rd2];
	ld.local.u32 	%r1909, [%rd1+12];
	// inline asm
	prmt.b32 %r1907, %r1908, %r1909, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1907;
	ld.local.u32 	%r1912, [%rd1+12];
	ld.local.u32 	%r1913, [%rd1+8];
	// inline asm
	prmt.b32 %r1911, %r1912, %r1913, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1911;
	ld.local.u32 	%r1916, [%rd1+8];
	ld.local.u32 	%r1917, [%rd1+4];
	// inline asm
	prmt.b32 %r1915, %r1916, %r1917, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1915;
	ld.local.u32 	%r1920, [%rd1+4];
	ld.local.u32 	%r1921, [%rd1];
	// inline asm
	prmt.b32 %r1919, %r1920, %r1921, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r1919;
	ld.local.u32 	%r1924, [%rd1];
	ld.local.u32 	%r1925, [%rd8+12];
	// inline asm
	prmt.b32 %r1923, %r1924, %r1925, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r1923;
	ld.local.u32 	%r1928, [%rd8+12];
	ld.local.u32 	%r1929, [%rd8+8];
	// inline asm
	prmt.b32 %r1927, %r1928, %r1929, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r1927;
	ld.local.u32 	%r1932, [%rd8+8];
	ld.local.u32 	%r1933, [%rd8+4];
	// inline asm
	prmt.b32 %r1931, %r1932, %r1933, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r1931;
	ld.local.u32 	%r1936, [%rd8+4];
	ld.local.u32 	%r1937, [%rd8];
	// inline asm
	prmt.b32 %r1935, %r1936, %r1937, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r1935;
	ld.local.u32 	%r1940, [%rd8];
	// inline asm
	prmt.b32 %r1939, %r1940, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r1939;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd28, 0;
	st.local.u32 	[%rd8+4], %rd28;
	st.local.u32 	[%rd8], %rd28;
	mov.u32 	%r9693, %r9672;
	bra.uni 	BB3_84;

BB3_119:
	setp.eq.s32	%p76, %r1, 14;
	@%p76 bra 	BB3_161;
	bra.uni 	BB3_120;

BB3_161:
	ld.local.u32 	%r8064, [%rd4+4];
	ld.local.u32 	%r8065, [%rd4];
	// inline asm
	prmt.b32 %r8063, %r8064, %r8065, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8063;
	ld.local.u32 	%r8068, [%rd4];
	ld.local.u32 	%r8069, [%rd3+12];
	// inline asm
	prmt.b32 %r8067, %r8068, %r8069, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8067;
	ld.local.u32 	%r8072, [%rd3+12];
	ld.local.u32 	%r8073, [%rd3+8];
	// inline asm
	prmt.b32 %r8071, %r8072, %r8073, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8071;
	ld.local.u32 	%r8076, [%rd3+8];
	ld.local.u32 	%r8077, [%rd3+4];
	// inline asm
	prmt.b32 %r8075, %r8076, %r8077, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8075;
	ld.local.u32 	%r8080, [%rd3+4];
	ld.local.u32 	%r8081, [%rd3];
	// inline asm
	prmt.b32 %r8079, %r8080, %r8081, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8079;
	ld.local.u32 	%r8084, [%rd3];
	ld.local.u32 	%r8085, [%rd2+12];
	// inline asm
	prmt.b32 %r8083, %r8084, %r8085, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8083;
	ld.local.u32 	%r8088, [%rd2+12];
	ld.local.u32 	%r8089, [%rd2+8];
	// inline asm
	prmt.b32 %r8087, %r8088, %r8089, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8087;
	ld.local.u32 	%r8092, [%rd2+8];
	ld.local.u32 	%r8093, [%rd2+4];
	// inline asm
	prmt.b32 %r8091, %r8092, %r8093, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8091;
	ld.local.u32 	%r8096, [%rd2+4];
	ld.local.u32 	%r8097, [%rd2];
	// inline asm
	prmt.b32 %r8095, %r8096, %r8097, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8095;
	ld.local.u32 	%r8100, [%rd2];
	ld.local.u32 	%r8101, [%rd1+12];
	// inline asm
	prmt.b32 %r8099, %r8100, %r8101, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8099;
	ld.local.u32 	%r8104, [%rd1+12];
	ld.local.u32 	%r8105, [%rd1+8];
	// inline asm
	prmt.b32 %r8103, %r8104, %r8105, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8103;
	ld.local.u32 	%r8108, [%rd1+8];
	ld.local.u32 	%r8109, [%rd1+4];
	// inline asm
	prmt.b32 %r8107, %r8108, %r8109, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8107;
	ld.local.u32 	%r8112, [%rd1+4];
	ld.local.u32 	%r8113, [%rd1];
	// inline asm
	prmt.b32 %r8111, %r8112, %r8113, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8111;
	ld.local.u32 	%r8116, [%rd1];
	ld.local.u32 	%r8117, [%rd8+12];
	// inline asm
	prmt.b32 %r8115, %r8116, %r8117, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8115;
	ld.local.u32 	%r8120, [%rd8+12];
	ld.local.u32 	%r8121, [%rd8+8];
	// inline asm
	prmt.b32 %r8119, %r8120, %r8121, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8119;
	ld.local.u32 	%r8124, [%rd8+8];
	ld.local.u32 	%r8125, [%rd8+4];
	// inline asm
	prmt.b32 %r8123, %r8124, %r8125, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8123;
	ld.local.u32 	%r8128, [%rd8+4];
	ld.local.u32 	%r8129, [%rd8];
	// inline asm
	prmt.b32 %r8127, %r8128, %r8129, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8127;
	ld.local.u32 	%r8132, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8131, %r8132, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8131;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2929, 0;
	st.local.u32 	[%rd8+4], %rd2929;
	st.local.u32 	[%rd8], %rd2929;
	bra.uni 	BB3_170;

BB3_30:
	setp.eq.s32	%p29, %r1, 14;
	@%p29 bra 	BB3_72;
	bra.uni 	BB3_31;

BB3_72:
	ld.local.u32 	%r2977, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9686, %r9672, %r2977, %r2;
	// inline asm
	ld.local.u32 	%r2981, [%rd7+8];
	// inline asm
	prmt.b32 %r9687, %r2977, %r2981, %r2;
	// inline asm
	ld.local.u32 	%r2985, [%rd7+4];
	// inline asm
	prmt.b32 %r9688, %r2981, %r2985, %r2;
	// inline asm
	ld.local.u32 	%r2989, [%rd7];
	// inline asm
	prmt.b32 %r9681, %r2985, %r2989, %r2;
	// inline asm
	ld.local.u32 	%r2993, [%rd6+12];
	// inline asm
	prmt.b32 %r9682, %r2989, %r2993, %r2;
	// inline asm
	ld.local.u32 	%r2997, [%rd6+8];
	// inline asm
	prmt.b32 %r9683, %r2993, %r2997, %r2;
	// inline asm
	ld.local.u32 	%r3001, [%rd6+4];
	// inline asm
	prmt.b32 %r9684, %r2997, %r3001, %r2;
	// inline asm
	ld.local.u32 	%r3005, [%rd6];
	// inline asm
	prmt.b32 %r9677, %r3001, %r3005, %r2;
	// inline asm
	ld.local.u32 	%r3009, [%rd5+12];
	// inline asm
	prmt.b32 %r9678, %r3005, %r3009, %r2;
	// inline asm
	ld.local.u32 	%r3013, [%rd5+8];
	// inline asm
	prmt.b32 %r9679, %r3009, %r3013, %r2;
	// inline asm
	ld.local.u32 	%r3017, [%rd5+4];
	// inline asm
	prmt.b32 %r9680, %r3013, %r3017, %r2;
	// inline asm
	ld.local.u32 	%r3021, [%rd5];
	// inline asm
	prmt.b32 %r9673, %r3017, %r3021, %r2;
	// inline asm
	ld.local.u32 	%r3025, [%rd4+12];
	// inline asm
	prmt.b32 %r9674, %r3021, %r3025, %r2;
	// inline asm
	ld.local.u32 	%r3029, [%rd4+8];
	// inline asm
	prmt.b32 %r9675, %r3025, %r3029, %r2;
	// inline asm
	ld.local.u32 	%r3033, [%rd4+4];
	// inline asm
	prmt.b32 %r9676, %r3029, %r3033, %r2;
	// inline asm
	ld.local.u32 	%r3037, [%rd4];
	// inline asm
	prmt.b32 %r3035, %r3033, %r3037, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3035;
	ld.local.u32 	%r3040, [%rd4];
	ld.local.u32 	%r3041, [%rd3+12];
	// inline asm
	prmt.b32 %r3039, %r3040, %r3041, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3039;
	ld.local.u32 	%r3044, [%rd3+12];
	ld.local.u32 	%r3045, [%rd3+8];
	// inline asm
	prmt.b32 %r3043, %r3044, %r3045, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3043;
	ld.local.u32 	%r3048, [%rd3+8];
	ld.local.u32 	%r3049, [%rd3+4];
	// inline asm
	prmt.b32 %r3047, %r3048, %r3049, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3047;
	ld.local.u32 	%r3052, [%rd3+4];
	ld.local.u32 	%r3053, [%rd3];
	// inline asm
	prmt.b32 %r3051, %r3052, %r3053, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3051;
	ld.local.u32 	%r3056, [%rd3];
	ld.local.u32 	%r3057, [%rd2+12];
	// inline asm
	prmt.b32 %r3055, %r3056, %r3057, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3055;
	ld.local.u32 	%r3060, [%rd2+12];
	ld.local.u32 	%r3061, [%rd2+8];
	// inline asm
	prmt.b32 %r3059, %r3060, %r3061, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3059;
	ld.local.u32 	%r3064, [%rd2+8];
	ld.local.u32 	%r3065, [%rd2+4];
	// inline asm
	prmt.b32 %r3063, %r3064, %r3065, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3063;
	ld.local.u32 	%r3068, [%rd2+4];
	ld.local.u32 	%r3069, [%rd2];
	// inline asm
	prmt.b32 %r3067, %r3068, %r3069, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3067;
	ld.local.u32 	%r3072, [%rd2];
	ld.local.u32 	%r3073, [%rd1+12];
	// inline asm
	prmt.b32 %r3071, %r3072, %r3073, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3071;
	ld.local.u32 	%r3076, [%rd1+12];
	ld.local.u32 	%r3077, [%rd1+8];
	// inline asm
	prmt.b32 %r3075, %r3076, %r3077, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3075;
	ld.local.u32 	%r3080, [%rd1+8];
	ld.local.u32 	%r3081, [%rd1+4];
	// inline asm
	prmt.b32 %r3079, %r3080, %r3081, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3079;
	ld.local.u32 	%r3084, [%rd1+4];
	ld.local.u32 	%r3085, [%rd1];
	// inline asm
	prmt.b32 %r3083, %r3084, %r3085, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3083;
	ld.local.u32 	%r3088, [%rd1];
	ld.local.u32 	%r3089, [%rd8+12];
	// inline asm
	prmt.b32 %r3087, %r3088, %r3089, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3087;
	ld.local.u32 	%r3092, [%rd8+12];
	ld.local.u32 	%r3093, [%rd8+8];
	// inline asm
	prmt.b32 %r3091, %r3092, %r3093, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3091;
	ld.local.u32 	%r3096, [%rd8+8];
	ld.local.u32 	%r3097, [%rd8+4];
	// inline asm
	prmt.b32 %r3095, %r3096, %r3097, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3095;
	ld.local.u32 	%r3100, [%rd8+4];
	ld.local.u32 	%r3101, [%rd8];
	// inline asm
	prmt.b32 %r3099, %r3100, %r3101, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3099;
	ld.local.u32 	%r3104, [%rd8];
	// inline asm
	prmt.b32 %r3103, %r3104, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3103;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd36, 0;
	st.local.u32 	[%rd8+4], %rd36;
	st.local.u32 	[%rd8], %rd36;
	mov.u32 	%r9685, %r9672;
	bra.uni 	BB3_82;

BB3_150:
	setp.eq.s32	%p53, %r1, 30;
	@%p53 bra 	BB3_153;
	bra.uni 	BB3_151;

BB3_153:
	ld.local.u32 	%r7440, [%rd8+4];
	ld.local.u32 	%r7441, [%rd8];
	// inline asm
	prmt.b32 %r7439, %r7440, %r7441, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7439;
	ld.local.u32 	%r7444, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7443, %r7444, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7443;
	st.local.u32 	[%rd7+4], %r9705;
	st.local.u32 	[%rd7], %r9705;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2913, 0;
	st.local.u32 	[%rd8+4], %rd2913;
	st.local.u32 	[%rd8], %rd2913;
	bra.uni 	BB3_170;

BB3_61:
	setp.eq.s32	%p6, %r1, 30;
	@%p6 bra 	BB3_64;
	bra.uni 	BB3_62;

BB3_64:
	ld.local.u32 	%r713, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9702, %r9672, %r713, %r2;
	// inline asm
	ld.local.u32 	%r717, [%rd7+8];
	// inline asm
	prmt.b32 %r9703, %r713, %r717, %r2;
	// inline asm
	ld.local.u32 	%r721, [%rd7+4];
	// inline asm
	prmt.b32 %r9704, %r717, %r721, %r2;
	// inline asm
	ld.local.u32 	%r725, [%rd7];
	// inline asm
	prmt.b32 %r9697, %r721, %r725, %r2;
	// inline asm
	ld.local.u32 	%r729, [%rd6+12];
	// inline asm
	prmt.b32 %r9698, %r725, %r729, %r2;
	// inline asm
	ld.local.u32 	%r733, [%rd6+8];
	// inline asm
	prmt.b32 %r9699, %r729, %r733, %r2;
	// inline asm
	ld.local.u32 	%r737, [%rd6+4];
	// inline asm
	prmt.b32 %r9700, %r733, %r737, %r2;
	// inline asm
	ld.local.u32 	%r741, [%rd6];
	// inline asm
	prmt.b32 %r9693, %r737, %r741, %r2;
	// inline asm
	ld.local.u32 	%r745, [%rd5+12];
	// inline asm
	prmt.b32 %r9694, %r741, %r745, %r2;
	// inline asm
	ld.local.u32 	%r749, [%rd5+8];
	// inline asm
	prmt.b32 %r9695, %r745, %r749, %r2;
	// inline asm
	ld.local.u32 	%r753, [%rd5+4];
	// inline asm
	prmt.b32 %r9696, %r749, %r753, %r2;
	// inline asm
	ld.local.u32 	%r757, [%rd5];
	// inline asm
	prmt.b32 %r9689, %r753, %r757, %r2;
	// inline asm
	ld.local.u32 	%r761, [%rd4+12];
	// inline asm
	prmt.b32 %r9690, %r757, %r761, %r2;
	// inline asm
	ld.local.u32 	%r765, [%rd4+8];
	// inline asm
	prmt.b32 %r9691, %r761, %r765, %r2;
	// inline asm
	ld.local.u32 	%r769, [%rd4+4];
	// inline asm
	prmt.b32 %r9692, %r765, %r769, %r2;
	// inline asm
	ld.local.u32 	%r773, [%rd4];
	// inline asm
	prmt.b32 %r9685, %r769, %r773, %r2;
	// inline asm
	ld.local.u32 	%r777, [%rd3+12];
	// inline asm
	prmt.b32 %r9686, %r773, %r777, %r2;
	// inline asm
	ld.local.u32 	%r781, [%rd3+8];
	// inline asm
	prmt.b32 %r9687, %r777, %r781, %r2;
	// inline asm
	ld.local.u32 	%r785, [%rd3+4];
	// inline asm
	prmt.b32 %r9688, %r781, %r785, %r2;
	// inline asm
	ld.local.u32 	%r789, [%rd3];
	// inline asm
	prmt.b32 %r9681, %r785, %r789, %r2;
	// inline asm
	ld.local.u32 	%r793, [%rd2+12];
	// inline asm
	prmt.b32 %r9682, %r789, %r793, %r2;
	// inline asm
	ld.local.u32 	%r797, [%rd2+8];
	// inline asm
	prmt.b32 %r9683, %r793, %r797, %r2;
	// inline asm
	ld.local.u32 	%r801, [%rd2+4];
	// inline asm
	prmt.b32 %r9684, %r797, %r801, %r2;
	// inline asm
	ld.local.u32 	%r805, [%rd2];
	// inline asm
	prmt.b32 %r9677, %r801, %r805, %r2;
	// inline asm
	ld.local.u32 	%r809, [%rd1+12];
	// inline asm
	prmt.b32 %r9678, %r805, %r809, %r2;
	// inline asm
	ld.local.u32 	%r813, [%rd1+8];
	// inline asm
	prmt.b32 %r9679, %r809, %r813, %r2;
	// inline asm
	ld.local.u32 	%r817, [%rd1+4];
	// inline asm
	prmt.b32 %r9680, %r813, %r817, %r2;
	// inline asm
	ld.local.u32 	%r821, [%rd1];
	// inline asm
	prmt.b32 %r9673, %r817, %r821, %r2;
	// inline asm
	ld.local.u32 	%r825, [%rd8+12];
	// inline asm
	prmt.b32 %r9674, %r821, %r825, %r2;
	// inline asm
	ld.local.u32 	%r829, [%rd8+8];
	// inline asm
	prmt.b32 %r9675, %r825, %r829, %r2;
	// inline asm
	ld.local.u32 	%r833, [%rd8+4];
	// inline asm
	prmt.b32 %r9676, %r829, %r833, %r2;
	// inline asm
	ld.local.u32 	%r837, [%rd8];
	// inline asm
	prmt.b32 %r835, %r833, %r837, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r835;
	ld.local.u32 	%r840, [%rd8];
	// inline asm
	prmt.b32 %r839, %r840, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r839;
	st.local.u32 	[%rd7+4], %r9672;
	st.local.u32 	[%rd7], %r9672;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd20, 0;
	st.local.u32 	[%rd8+4], %rd20;
	st.local.u32 	[%rd8], %rd20;
	mov.u32 	%r9701, %r9672;
	bra.uni 	BB3_89;

BB3_95:
	setp.eq.s32	%p95, %r1, 1;
	@%p95 bra 	BB3_96;
	bra.uni 	BB3_169;

BB3_96:
	ld.local.u32 	%r9325, [%rd7+8];
	ld.local.u32 	%r9326, [%rd7+4];
	// inline asm
	prmt.b32 %r9324, %r9325, %r9326, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r9324;
	ld.local.u32 	%r9330, [%rd7];
	// inline asm
	prmt.b32 %r9328, %r9326, %r9330, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r9328;
	ld.local.u32 	%r9334, [%rd6+12];
	// inline asm
	prmt.b32 %r9332, %r9330, %r9334, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r9332;
	ld.local.u32 	%r9337, [%rd6+12];
	ld.local.u32 	%r9338, [%rd6+8];
	// inline asm
	prmt.b32 %r9336, %r9337, %r9338, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r9336;
	ld.local.u32 	%r9341, [%rd6+8];
	ld.local.u32 	%r9342, [%rd6+4];
	// inline asm
	prmt.b32 %r9340, %r9341, %r9342, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r9340;
	ld.local.u32 	%r9346, [%rd6];
	// inline asm
	prmt.b32 %r9344, %r9342, %r9346, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r9344;
	ld.local.u32 	%r9350, [%rd5+12];
	// inline asm
	prmt.b32 %r9348, %r9346, %r9350, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r9348;
	ld.local.u32 	%r9353, [%rd5+12];
	ld.local.u32 	%r9354, [%rd5+8];
	// inline asm
	prmt.b32 %r9352, %r9353, %r9354, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r9352;
	ld.local.u32 	%r9357, [%rd5+8];
	ld.local.u32 	%r9358, [%rd5+4];
	// inline asm
	prmt.b32 %r9356, %r9357, %r9358, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r9356;
	ld.local.u32 	%r9362, [%rd5];
	// inline asm
	prmt.b32 %r9360, %r9358, %r9362, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r9360;
	ld.local.u32 	%r9366, [%rd4+12];
	// inline asm
	prmt.b32 %r9364, %r9362, %r9366, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r9364;
	ld.local.u32 	%r9369, [%rd4+12];
	ld.local.u32 	%r9370, [%rd4+8];
	// inline asm
	prmt.b32 %r9368, %r9369, %r9370, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r9368;
	ld.local.u32 	%r9373, [%rd4+8];
	ld.local.u32 	%r9374, [%rd4+4];
	// inline asm
	prmt.b32 %r9372, %r9373, %r9374, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r9372;
	ld.local.u32 	%r9378, [%rd4];
	// inline asm
	prmt.b32 %r9376, %r9374, %r9378, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r9376;
	ld.local.u32 	%r9382, [%rd3+12];
	// inline asm
	prmt.b32 %r9380, %r9378, %r9382, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r9380;
	ld.local.u32 	%r9385, [%rd3+12];
	ld.local.u32 	%r9386, [%rd3+8];
	// inline asm
	prmt.b32 %r9384, %r9385, %r9386, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r9384;
	ld.local.u32 	%r9389, [%rd3+8];
	ld.local.u32 	%r9390, [%rd3+4];
	// inline asm
	prmt.b32 %r9388, %r9389, %r9390, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r9388;
	ld.local.u32 	%r9394, [%rd3];
	// inline asm
	prmt.b32 %r9392, %r9390, %r9394, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r9392;
	ld.local.u32 	%r9398, [%rd2+12];
	// inline asm
	prmt.b32 %r9396, %r9394, %r9398, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r9396;
	ld.local.u32 	%r9401, [%rd2+12];
	ld.local.u32 	%r9402, [%rd2+8];
	// inline asm
	prmt.b32 %r9400, %r9401, %r9402, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r9400;
	ld.local.u32 	%r9405, [%rd2+8];
	ld.local.u32 	%r9406, [%rd2+4];
	// inline asm
	prmt.b32 %r9404, %r9405, %r9406, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r9404;
	ld.local.u32 	%r9410, [%rd2];
	// inline asm
	prmt.b32 %r9408, %r9406, %r9410, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r9408;
	ld.local.u32 	%r9414, [%rd1+12];
	// inline asm
	prmt.b32 %r9412, %r9410, %r9414, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r9412;
	ld.local.u32 	%r9417, [%rd1+12];
	ld.local.u32 	%r9418, [%rd1+8];
	// inline asm
	prmt.b32 %r9416, %r9417, %r9418, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r9416;
	ld.local.u32 	%r9421, [%rd1+8];
	ld.local.u32 	%r9422, [%rd1+4];
	// inline asm
	prmt.b32 %r9420, %r9421, %r9422, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r9420;
	ld.local.u32 	%r9426, [%rd1];
	// inline asm
	prmt.b32 %r9424, %r9422, %r9426, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r9424;
	ld.local.u32 	%r9430, [%rd8+12];
	// inline asm
	prmt.b32 %r9428, %r9426, %r9430, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r9428;
	ld.local.u32 	%r9433, [%rd8+12];
	ld.local.u32 	%r9434, [%rd8+8];
	// inline asm
	prmt.b32 %r9432, %r9433, %r9434, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r9432;
	ld.local.u32 	%r9437, [%rd8+8];
	ld.local.u32 	%r9438, [%rd8+4];
	// inline asm
	prmt.b32 %r9436, %r9437, %r9438, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r9436;
	ld.local.u32 	%r9442, [%rd8];
	// inline asm
	prmt.b32 %r9440, %r9438, %r9442, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r9440;
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9444, %r9442, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r9444;
	st.local.u32 	[%rd8], %r9705;
	bra.uni 	BB3_170;

BB3_6:
	setp.eq.s32	%p48, %r1, 1;
	@%p48 bra 	BB3_7;
	bra.uni 	BB3_87;

BB3_7:
	ld.local.u32 	%r5005, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9675, %r9672, %r5005, %r2;
	// inline asm
	ld.local.u32 	%r5009, [%rd7+8];
	// inline asm
	prmt.b32 %r9676, %r5005, %r5009, %r2;
	// inline asm
	ld.local.u32 	%r5013, [%rd7+4];
	// inline asm
	prmt.b32 %r5011, %r5009, %r5013, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r5011;
	ld.local.u32 	%r5017, [%rd7];
	// inline asm
	prmt.b32 %r5015, %r5013, %r5017, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r5015;
	ld.local.u32 	%r5021, [%rd6+12];
	// inline asm
	prmt.b32 %r5019, %r5017, %r5021, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r5019;
	ld.local.u32 	%r5024, [%rd6+12];
	ld.local.u32 	%r5025, [%rd6+8];
	// inline asm
	prmt.b32 %r5023, %r5024, %r5025, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r5023;
	ld.local.u32 	%r5028, [%rd6+8];
	ld.local.u32 	%r5029, [%rd6+4];
	// inline asm
	prmt.b32 %r5027, %r5028, %r5029, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r5027;
	ld.local.u32 	%r5033, [%rd6];
	// inline asm
	prmt.b32 %r5031, %r5029, %r5033, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r5031;
	ld.local.u32 	%r5037, [%rd5+12];
	// inline asm
	prmt.b32 %r5035, %r5033, %r5037, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r5035;
	ld.local.u32 	%r5040, [%rd5+12];
	ld.local.u32 	%r5041, [%rd5+8];
	// inline asm
	prmt.b32 %r5039, %r5040, %r5041, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r5039;
	ld.local.u32 	%r5044, [%rd5+8];
	ld.local.u32 	%r5045, [%rd5+4];
	// inline asm
	prmt.b32 %r5043, %r5044, %r5045, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r5043;
	ld.local.u32 	%r5049, [%rd5];
	// inline asm
	prmt.b32 %r5047, %r5045, %r5049, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r5047;
	ld.local.u32 	%r5053, [%rd4+12];
	// inline asm
	prmt.b32 %r5051, %r5049, %r5053, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r5051;
	ld.local.u32 	%r5056, [%rd4+12];
	ld.local.u32 	%r5057, [%rd4+8];
	// inline asm
	prmt.b32 %r5055, %r5056, %r5057, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r5055;
	ld.local.u32 	%r5060, [%rd4+8];
	ld.local.u32 	%r5061, [%rd4+4];
	// inline asm
	prmt.b32 %r5059, %r5060, %r5061, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r5059;
	ld.local.u32 	%r5065, [%rd4];
	// inline asm
	prmt.b32 %r5063, %r5061, %r5065, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r5063;
	ld.local.u32 	%r5069, [%rd3+12];
	// inline asm
	prmt.b32 %r5067, %r5065, %r5069, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r5067;
	ld.local.u32 	%r5072, [%rd3+12];
	ld.local.u32 	%r5073, [%rd3+8];
	// inline asm
	prmt.b32 %r5071, %r5072, %r5073, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r5071;
	ld.local.u32 	%r5076, [%rd3+8];
	ld.local.u32 	%r5077, [%rd3+4];
	// inline asm
	prmt.b32 %r5075, %r5076, %r5077, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r5075;
	ld.local.u32 	%r5081, [%rd3];
	// inline asm
	prmt.b32 %r5079, %r5077, %r5081, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r5079;
	ld.local.u32 	%r5085, [%rd2+12];
	// inline asm
	prmt.b32 %r5083, %r5081, %r5085, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r5083;
	ld.local.u32 	%r5088, [%rd2+12];
	ld.local.u32 	%r5089, [%rd2+8];
	// inline asm
	prmt.b32 %r5087, %r5088, %r5089, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r5087;
	ld.local.u32 	%r5092, [%rd2+8];
	ld.local.u32 	%r5093, [%rd2+4];
	// inline asm
	prmt.b32 %r5091, %r5092, %r5093, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r5091;
	ld.local.u32 	%r5097, [%rd2];
	// inline asm
	prmt.b32 %r5095, %r5093, %r5097, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r5095;
	ld.local.u32 	%r5101, [%rd1+12];
	// inline asm
	prmt.b32 %r5099, %r5097, %r5101, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r5099;
	ld.local.u32 	%r5104, [%rd1+12];
	ld.local.u32 	%r5105, [%rd1+8];
	// inline asm
	prmt.b32 %r5103, %r5104, %r5105, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r5103;
	ld.local.u32 	%r5108, [%rd1+8];
	ld.local.u32 	%r5109, [%rd1+4];
	// inline asm
	prmt.b32 %r5107, %r5108, %r5109, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r5107;
	ld.local.u32 	%r5113, [%rd1];
	// inline asm
	prmt.b32 %r5111, %r5109, %r5113, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r5111;
	ld.local.u32 	%r5117, [%rd8+12];
	// inline asm
	prmt.b32 %r5115, %r5113, %r5117, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r5115;
	ld.local.u32 	%r5120, [%rd8+12];
	ld.local.u32 	%r5121, [%rd8+8];
	// inline asm
	prmt.b32 %r5119, %r5120, %r5121, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r5119;
	ld.local.u32 	%r5124, [%rd8+8];
	ld.local.u32 	%r5125, [%rd8+4];
	// inline asm
	prmt.b32 %r5123, %r5124, %r5125, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r5123;
	ld.local.u32 	%r5129, [%rd8];
	// inline asm
	prmt.b32 %r5127, %r5125, %r5129, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r5127;
	// inline asm
	prmt.b32 %r5131, %r5129, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r5131;
	st.local.u32 	[%rd8], %r9672;
	mov.u32 	%r9673, %r9672;
	mov.u32 	%r9674, %r9672;
	bra.uni 	BB3_79;

BB3_126:
	setp.eq.s32	%p72, %r1, 17;
	@%p72 bra 	BB3_127;
	bra.uni 	BB3_169;

BB3_127:
	ld.local.u32 	%r7869, [%rd3+8];
	ld.local.u32 	%r7870, [%rd3+4];
	// inline asm
	prmt.b32 %r7868, %r7869, %r7870, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7868;
	ld.local.u32 	%r7873, [%rd3+4];
	ld.local.u32 	%r7874, [%rd3];
	// inline asm
	prmt.b32 %r7872, %r7873, %r7874, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7872;
	ld.local.u32 	%r7877, [%rd3];
	ld.local.u32 	%r7878, [%rd2+12];
	// inline asm
	prmt.b32 %r7876, %r7877, %r7878, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7876;
	ld.local.u32 	%r7881, [%rd2+12];
	ld.local.u32 	%r7882, [%rd2+8];
	// inline asm
	prmt.b32 %r7880, %r7881, %r7882, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7880;
	ld.local.u32 	%r7885, [%rd2+8];
	ld.local.u32 	%r7886, [%rd2+4];
	// inline asm
	prmt.b32 %r7884, %r7885, %r7886, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7884;
	ld.local.u32 	%r7889, [%rd2+4];
	ld.local.u32 	%r7890, [%rd2];
	// inline asm
	prmt.b32 %r7888, %r7889, %r7890, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7888;
	ld.local.u32 	%r7893, [%rd2];
	ld.local.u32 	%r7894, [%rd1+12];
	// inline asm
	prmt.b32 %r7892, %r7893, %r7894, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7892;
	ld.local.u32 	%r7897, [%rd1+12];
	ld.local.u32 	%r7898, [%rd1+8];
	// inline asm
	prmt.b32 %r7896, %r7897, %r7898, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7896;
	ld.local.u32 	%r7901, [%rd1+8];
	ld.local.u32 	%r7902, [%rd1+4];
	// inline asm
	prmt.b32 %r7900, %r7901, %r7902, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7900;
	ld.local.u32 	%r7905, [%rd1+4];
	ld.local.u32 	%r7906, [%rd1];
	// inline asm
	prmt.b32 %r7904, %r7905, %r7906, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7904;
	ld.local.u32 	%r7909, [%rd1];
	ld.local.u32 	%r7910, [%rd8+12];
	// inline asm
	prmt.b32 %r7908, %r7909, %r7910, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7908;
	ld.local.u32 	%r7913, [%rd8+12];
	ld.local.u32 	%r7914, [%rd8+8];
	// inline asm
	prmt.b32 %r7912, %r7913, %r7914, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7912;
	ld.local.u32 	%r7917, [%rd8+8];
	ld.local.u32 	%r7918, [%rd8+4];
	// inline asm
	prmt.b32 %r7916, %r7917, %r7918, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7916;
	ld.local.u32 	%r7921, [%rd8+4];
	ld.local.u32 	%r7922, [%rd8];
	// inline asm
	prmt.b32 %r7920, %r7921, %r7922, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7920;
	ld.local.u32 	%r7925, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7924, %r7925, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7924;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2926, 0;
	st.local.u32 	[%rd8+4], %rd2926;
	st.local.u32 	[%rd8], %rd2926;
	bra.uni 	BB3_170;

BB3_37:
	setp.eq.s32	%p25, %r1, 17;
	@%p25 bra 	BB3_38;
	bra.uni 	BB3_87;

BB3_38:
	ld.local.u32 	%r2533, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9691, %r9672, %r2533, %r2;
	// inline asm
	ld.local.u32 	%r2537, [%rd7+8];
	// inline asm
	prmt.b32 %r9692, %r2533, %r2537, %r2;
	// inline asm
	ld.local.u32 	%r2541, [%rd7+4];
	// inline asm
	prmt.b32 %r9685, %r2537, %r2541, %r2;
	// inline asm
	ld.local.u32 	%r2545, [%rd7];
	// inline asm
	prmt.b32 %r9686, %r2541, %r2545, %r2;
	// inline asm
	ld.local.u32 	%r2549, [%rd6+12];
	// inline asm
	prmt.b32 %r9687, %r2545, %r2549, %r2;
	// inline asm
	ld.local.u32 	%r2553, [%rd6+8];
	// inline asm
	prmt.b32 %r9688, %r2549, %r2553, %r2;
	// inline asm
	ld.local.u32 	%r2557, [%rd6+4];
	// inline asm
	prmt.b32 %r9681, %r2553, %r2557, %r2;
	// inline asm
	ld.local.u32 	%r2561, [%rd6];
	// inline asm
	prmt.b32 %r9682, %r2557, %r2561, %r2;
	// inline asm
	ld.local.u32 	%r2565, [%rd5+12];
	// inline asm
	prmt.b32 %r9683, %r2561, %r2565, %r2;
	// inline asm
	ld.local.u32 	%r2569, [%rd5+8];
	// inline asm
	prmt.b32 %r9684, %r2565, %r2569, %r2;
	// inline asm
	ld.local.u32 	%r2573, [%rd5+4];
	// inline asm
	prmt.b32 %r9677, %r2569, %r2573, %r2;
	// inline asm
	ld.local.u32 	%r2577, [%rd5];
	// inline asm
	prmt.b32 %r9678, %r2573, %r2577, %r2;
	// inline asm
	ld.local.u32 	%r2581, [%rd4+12];
	// inline asm
	prmt.b32 %r9679, %r2577, %r2581, %r2;
	// inline asm
	ld.local.u32 	%r2585, [%rd4+8];
	// inline asm
	prmt.b32 %r9680, %r2581, %r2585, %r2;
	// inline asm
	ld.local.u32 	%r2589, [%rd4+4];
	// inline asm
	prmt.b32 %r9673, %r2585, %r2589, %r2;
	// inline asm
	ld.local.u32 	%r2593, [%rd4];
	// inline asm
	prmt.b32 %r9674, %r2589, %r2593, %r2;
	// inline asm
	ld.local.u32 	%r2597, [%rd3+12];
	// inline asm
	prmt.b32 %r9675, %r2593, %r2597, %r2;
	// inline asm
	ld.local.u32 	%r2601, [%rd3+8];
	// inline asm
	prmt.b32 %r9676, %r2597, %r2601, %r2;
	// inline asm
	ld.local.u32 	%r2605, [%rd3+4];
	// inline asm
	prmt.b32 %r2603, %r2601, %r2605, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2603;
	ld.local.u32 	%r2608, [%rd3+4];
	ld.local.u32 	%r2609, [%rd3];
	// inline asm
	prmt.b32 %r2607, %r2608, %r2609, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2607;
	ld.local.u32 	%r2612, [%rd3];
	ld.local.u32 	%r2613, [%rd2+12];
	// inline asm
	prmt.b32 %r2611, %r2612, %r2613, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2611;
	ld.local.u32 	%r2616, [%rd2+12];
	ld.local.u32 	%r2617, [%rd2+8];
	// inline asm
	prmt.b32 %r2615, %r2616, %r2617, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2615;
	ld.local.u32 	%r2620, [%rd2+8];
	ld.local.u32 	%r2621, [%rd2+4];
	// inline asm
	prmt.b32 %r2619, %r2620, %r2621, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2619;
	ld.local.u32 	%r2624, [%rd2+4];
	ld.local.u32 	%r2625, [%rd2];
	// inline asm
	prmt.b32 %r2623, %r2624, %r2625, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2623;
	ld.local.u32 	%r2628, [%rd2];
	ld.local.u32 	%r2629, [%rd1+12];
	// inline asm
	prmt.b32 %r2627, %r2628, %r2629, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2627;
	ld.local.u32 	%r2632, [%rd1+12];
	ld.local.u32 	%r2633, [%rd1+8];
	// inline asm
	prmt.b32 %r2631, %r2632, %r2633, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2631;
	ld.local.u32 	%r2636, [%rd1+8];
	ld.local.u32 	%r2637, [%rd1+4];
	// inline asm
	prmt.b32 %r2635, %r2636, %r2637, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2635;
	ld.local.u32 	%r2640, [%rd1+4];
	ld.local.u32 	%r2641, [%rd1];
	// inline asm
	prmt.b32 %r2639, %r2640, %r2641, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2639;
	ld.local.u32 	%r2644, [%rd1];
	ld.local.u32 	%r2645, [%rd8+12];
	// inline asm
	prmt.b32 %r2643, %r2644, %r2645, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2643;
	ld.local.u32 	%r2648, [%rd8+12];
	ld.local.u32 	%r2649, [%rd8+8];
	// inline asm
	prmt.b32 %r2647, %r2648, %r2649, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r2647;
	ld.local.u32 	%r2652, [%rd8+8];
	ld.local.u32 	%r2653, [%rd8+4];
	// inline asm
	prmt.b32 %r2651, %r2652, %r2653, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r2651;
	ld.local.u32 	%r2656, [%rd8+4];
	ld.local.u32 	%r2657, [%rd8];
	// inline asm
	prmt.b32 %r2655, %r2656, %r2657, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r2655;
	ld.local.u32 	%r2660, [%rd8];
	// inline asm
	prmt.b32 %r2659, %r2660, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r2659;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd33, 0;
	st.local.u32 	[%rd8+4], %rd33;
	st.local.u32 	[%rd8], %rd33;
	mov.u32 	%r9689, %r9672;
	mov.u32 	%r9690, %r9672;
	bra.uni 	BB3_83;

BB3_110:
	setp.eq.s32	%p84, %r1, 9;
	@%p84 bra 	BB3_111;
	bra.uni 	BB3_169;

BB3_111:
	ld.local.u32 	%r8469, [%rd5+8];
	ld.local.u32 	%r8470, [%rd5+4];
	// inline asm
	prmt.b32 %r8468, %r8469, %r8470, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8468;
	ld.local.u32 	%r8473, [%rd5+4];
	ld.local.u32 	%r8474, [%rd5];
	// inline asm
	prmt.b32 %r8472, %r8473, %r8474, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8472;
	ld.local.u32 	%r8477, [%rd5];
	ld.local.u32 	%r8478, [%rd4+12];
	// inline asm
	prmt.b32 %r8476, %r8477, %r8478, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8476;
	ld.local.u32 	%r8481, [%rd4+12];
	ld.local.u32 	%r8482, [%rd4+8];
	// inline asm
	prmt.b32 %r8480, %r8481, %r8482, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8480;
	ld.local.u32 	%r8485, [%rd4+8];
	ld.local.u32 	%r8486, [%rd4+4];
	// inline asm
	prmt.b32 %r8484, %r8485, %r8486, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8484;
	ld.local.u32 	%r8489, [%rd4+4];
	ld.local.u32 	%r8490, [%rd4];
	// inline asm
	prmt.b32 %r8488, %r8489, %r8490, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8488;
	ld.local.u32 	%r8493, [%rd4];
	ld.local.u32 	%r8494, [%rd3+12];
	// inline asm
	prmt.b32 %r8492, %r8493, %r8494, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8492;
	ld.local.u32 	%r8497, [%rd3+12];
	ld.local.u32 	%r8498, [%rd3+8];
	// inline asm
	prmt.b32 %r8496, %r8497, %r8498, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8496;
	ld.local.u32 	%r8501, [%rd3+8];
	ld.local.u32 	%r8502, [%rd3+4];
	// inline asm
	prmt.b32 %r8500, %r8501, %r8502, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8500;
	ld.local.u32 	%r8505, [%rd3+4];
	ld.local.u32 	%r8506, [%rd3];
	// inline asm
	prmt.b32 %r8504, %r8505, %r8506, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8504;
	ld.local.u32 	%r8509, [%rd3];
	ld.local.u32 	%r8510, [%rd2+12];
	// inline asm
	prmt.b32 %r8508, %r8509, %r8510, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8508;
	ld.local.u32 	%r8513, [%rd2+12];
	ld.local.u32 	%r8514, [%rd2+8];
	// inline asm
	prmt.b32 %r8512, %r8513, %r8514, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8512;
	ld.local.u32 	%r8517, [%rd2+8];
	ld.local.u32 	%r8518, [%rd2+4];
	// inline asm
	prmt.b32 %r8516, %r8517, %r8518, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8516;
	ld.local.u32 	%r8521, [%rd2+4];
	ld.local.u32 	%r8522, [%rd2];
	// inline asm
	prmt.b32 %r8520, %r8521, %r8522, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8520;
	ld.local.u32 	%r8525, [%rd2];
	ld.local.u32 	%r8526, [%rd1+12];
	// inline asm
	prmt.b32 %r8524, %r8525, %r8526, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8524;
	ld.local.u32 	%r8529, [%rd1+12];
	ld.local.u32 	%r8530, [%rd1+8];
	// inline asm
	prmt.b32 %r8528, %r8529, %r8530, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8528;
	ld.local.u32 	%r8533, [%rd1+8];
	ld.local.u32 	%r8534, [%rd1+4];
	// inline asm
	prmt.b32 %r8532, %r8533, %r8534, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8532;
	ld.local.u32 	%r8537, [%rd1+4];
	ld.local.u32 	%r8538, [%rd1];
	// inline asm
	prmt.b32 %r8536, %r8537, %r8538, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8536;
	ld.local.u32 	%r8541, [%rd1];
	ld.local.u32 	%r8542, [%rd8+12];
	// inline asm
	prmt.b32 %r8540, %r8541, %r8542, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8540;
	ld.local.u32 	%r8545, [%rd8+12];
	ld.local.u32 	%r8546, [%rd8+8];
	// inline asm
	prmt.b32 %r8544, %r8545, %r8546, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8544;
	ld.local.u32 	%r8549, [%rd8+8];
	ld.local.u32 	%r8550, [%rd8+4];
	// inline asm
	prmt.b32 %r8548, %r8549, %r8550, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8548;
	ld.local.u32 	%r8553, [%rd8+4];
	ld.local.u32 	%r8554, [%rd8];
	// inline asm
	prmt.b32 %r8552, %r8553, %r8554, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8552;
	ld.local.u32 	%r8557, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8556, %r8557, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r8556;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2934, 0;
	st.local.u32 	[%rd8+4], %rd2934;
	st.local.u32 	[%rd8], %rd2934;
	bra.uni 	BB3_170;

BB3_21:
	setp.eq.s32	%p37, %r1, 9;
	@%p37 bra 	BB3_22;
	bra.uni 	BB3_87;

BB3_22:
	ld.local.u32 	%r3737, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9683, %r9672, %r3737, %r2;
	// inline asm
	ld.local.u32 	%r3741, [%rd7+8];
	// inline asm
	prmt.b32 %r9684, %r3737, %r3741, %r2;
	// inline asm
	ld.local.u32 	%r3745, [%rd7+4];
	// inline asm
	prmt.b32 %r9677, %r3741, %r3745, %r2;
	// inline asm
	ld.local.u32 	%r3749, [%rd7];
	// inline asm
	prmt.b32 %r9678, %r3745, %r3749, %r2;
	// inline asm
	ld.local.u32 	%r3753, [%rd6+12];
	// inline asm
	prmt.b32 %r9679, %r3749, %r3753, %r2;
	// inline asm
	ld.local.u32 	%r3757, [%rd6+8];
	// inline asm
	prmt.b32 %r9680, %r3753, %r3757, %r2;
	// inline asm
	ld.local.u32 	%r3761, [%rd6+4];
	// inline asm
	prmt.b32 %r9673, %r3757, %r3761, %r2;
	// inline asm
	ld.local.u32 	%r3765, [%rd6];
	// inline asm
	prmt.b32 %r9674, %r3761, %r3765, %r2;
	// inline asm
	ld.local.u32 	%r3769, [%rd5+12];
	// inline asm
	prmt.b32 %r9675, %r3765, %r3769, %r2;
	// inline asm
	ld.local.u32 	%r3773, [%rd5+8];
	// inline asm
	prmt.b32 %r9676, %r3769, %r3773, %r2;
	// inline asm
	ld.local.u32 	%r3777, [%rd5+4];
	// inline asm
	prmt.b32 %r3775, %r3773, %r3777, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3775;
	ld.local.u32 	%r3780, [%rd5+4];
	ld.local.u32 	%r3781, [%rd5];
	// inline asm
	prmt.b32 %r3779, %r3780, %r3781, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3779;
	ld.local.u32 	%r3784, [%rd5];
	ld.local.u32 	%r3785, [%rd4+12];
	// inline asm
	prmt.b32 %r3783, %r3784, %r3785, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3783;
	ld.local.u32 	%r3788, [%rd4+12];
	ld.local.u32 	%r3789, [%rd4+8];
	// inline asm
	prmt.b32 %r3787, %r3788, %r3789, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3787;
	ld.local.u32 	%r3792, [%rd4+8];
	ld.local.u32 	%r3793, [%rd4+4];
	// inline asm
	prmt.b32 %r3791, %r3792, %r3793, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3791;
	ld.local.u32 	%r3796, [%rd4+4];
	ld.local.u32 	%r3797, [%rd4];
	// inline asm
	prmt.b32 %r3795, %r3796, %r3797, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3795;
	ld.local.u32 	%r3800, [%rd4];
	ld.local.u32 	%r3801, [%rd3+12];
	// inline asm
	prmt.b32 %r3799, %r3800, %r3801, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3799;
	ld.local.u32 	%r3804, [%rd3+12];
	ld.local.u32 	%r3805, [%rd3+8];
	// inline asm
	prmt.b32 %r3803, %r3804, %r3805, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3803;
	ld.local.u32 	%r3808, [%rd3+8];
	ld.local.u32 	%r3809, [%rd3+4];
	// inline asm
	prmt.b32 %r3807, %r3808, %r3809, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3807;
	ld.local.u32 	%r3812, [%rd3+4];
	ld.local.u32 	%r3813, [%rd3];
	// inline asm
	prmt.b32 %r3811, %r3812, %r3813, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3811;
	ld.local.u32 	%r3816, [%rd3];
	ld.local.u32 	%r3817, [%rd2+12];
	// inline asm
	prmt.b32 %r3815, %r3816, %r3817, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3815;
	ld.local.u32 	%r3820, [%rd2+12];
	ld.local.u32 	%r3821, [%rd2+8];
	// inline asm
	prmt.b32 %r3819, %r3820, %r3821, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3819;
	ld.local.u32 	%r3824, [%rd2+8];
	ld.local.u32 	%r3825, [%rd2+4];
	// inline asm
	prmt.b32 %r3823, %r3824, %r3825, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3823;
	ld.local.u32 	%r3828, [%rd2+4];
	ld.local.u32 	%r3829, [%rd2];
	// inline asm
	prmt.b32 %r3827, %r3828, %r3829, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3827;
	ld.local.u32 	%r3832, [%rd2];
	ld.local.u32 	%r3833, [%rd1+12];
	// inline asm
	prmt.b32 %r3831, %r3832, %r3833, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3831;
	ld.local.u32 	%r3836, [%rd1+12];
	ld.local.u32 	%r3837, [%rd1+8];
	// inline asm
	prmt.b32 %r3835, %r3836, %r3837, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3835;
	ld.local.u32 	%r3840, [%rd1+8];
	ld.local.u32 	%r3841, [%rd1+4];
	// inline asm
	prmt.b32 %r3839, %r3840, %r3841, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3839;
	ld.local.u32 	%r3844, [%rd1+4];
	ld.local.u32 	%r3845, [%rd1];
	// inline asm
	prmt.b32 %r3843, %r3844, %r3845, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3843;
	ld.local.u32 	%r3848, [%rd1];
	ld.local.u32 	%r3849, [%rd8+12];
	// inline asm
	prmt.b32 %r3847, %r3848, %r3849, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r3847;
	ld.local.u32 	%r3852, [%rd8+12];
	ld.local.u32 	%r3853, [%rd8+8];
	// inline asm
	prmt.b32 %r3851, %r3852, %r3853, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r3851;
	ld.local.u32 	%r3856, [%rd8+8];
	ld.local.u32 	%r3857, [%rd8+4];
	// inline asm
	prmt.b32 %r3855, %r3856, %r3857, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r3855;
	ld.local.u32 	%r3860, [%rd8+4];
	ld.local.u32 	%r3861, [%rd8];
	// inline asm
	prmt.b32 %r3859, %r3860, %r3861, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r3859;
	ld.local.u32 	%r3864, [%rd8];
	// inline asm
	prmt.b32 %r3863, %r3864, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r3863;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd41, 0;
	st.local.u32 	[%rd8+4], %rd41;
	st.local.u32 	[%rd8], %rd41;
	mov.u32 	%r9681, %r9672;
	mov.u32 	%r9682, %r9672;
	bra.uni 	BB3_81;

BB3_141:
	setp.eq.s32	%p61, %r1, 25;
	@%p61 bra 	BB3_142;
	bra.uni 	BB3_169;

BB3_142:
	ld.local.u32 	%r7525, [%rd1+8];
	ld.local.u32 	%r7526, [%rd1+4];
	// inline asm
	prmt.b32 %r7524, %r7525, %r7526, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7524;
	ld.local.u32 	%r7529, [%rd1+4];
	ld.local.u32 	%r7530, [%rd1];
	// inline asm
	prmt.b32 %r7528, %r7529, %r7530, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7528;
	ld.local.u32 	%r7533, [%rd1];
	ld.local.u32 	%r7534, [%rd8+12];
	// inline asm
	prmt.b32 %r7532, %r7533, %r7534, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7532;
	ld.local.u32 	%r7537, [%rd8+12];
	ld.local.u32 	%r7538, [%rd8+8];
	// inline asm
	prmt.b32 %r7536, %r7537, %r7538, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7536;
	ld.local.u32 	%r7541, [%rd8+8];
	ld.local.u32 	%r7542, [%rd8+4];
	// inline asm
	prmt.b32 %r7540, %r7541, %r7542, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7540;
	ld.local.u32 	%r7545, [%rd8+4];
	ld.local.u32 	%r7546, [%rd8];
	// inline asm
	prmt.b32 %r7544, %r7545, %r7546, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7544;
	ld.local.u32 	%r7549, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7548, %r7549, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7548;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2918, 0;
	st.local.u32 	[%rd8+4], %rd2918;
	st.local.u32 	[%rd8], %rd2918;
	bra.uni 	BB3_170;

BB3_52:
	setp.eq.s32	%p14, %r1, 25;
	@%p14 bra 	BB3_53;
	bra.uni 	BB3_87;

BB3_53:
	ld.local.u32 	%r1393, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9699, %r9672, %r1393, %r2;
	// inline asm
	ld.local.u32 	%r1397, [%rd7+8];
	// inline asm
	prmt.b32 %r9700, %r1393, %r1397, %r2;
	// inline asm
	ld.local.u32 	%r1401, [%rd7+4];
	// inline asm
	prmt.b32 %r9693, %r1397, %r1401, %r2;
	// inline asm
	ld.local.u32 	%r1405, [%rd7];
	// inline asm
	prmt.b32 %r9694, %r1401, %r1405, %r2;
	// inline asm
	ld.local.u32 	%r1409, [%rd6+12];
	// inline asm
	prmt.b32 %r9695, %r1405, %r1409, %r2;
	// inline asm
	ld.local.u32 	%r1413, [%rd6+8];
	// inline asm
	prmt.b32 %r9696, %r1409, %r1413, %r2;
	// inline asm
	ld.local.u32 	%r1417, [%rd6+4];
	// inline asm
	prmt.b32 %r9689, %r1413, %r1417, %r2;
	// inline asm
	ld.local.u32 	%r1421, [%rd6];
	// inline asm
	prmt.b32 %r9690, %r1417, %r1421, %r2;
	// inline asm
	ld.local.u32 	%r1425, [%rd5+12];
	// inline asm
	prmt.b32 %r9691, %r1421, %r1425, %r2;
	// inline asm
	ld.local.u32 	%r1429, [%rd5+8];
	// inline asm
	prmt.b32 %r9692, %r1425, %r1429, %r2;
	// inline asm
	ld.local.u32 	%r1433, [%rd5+4];
	// inline asm
	prmt.b32 %r9685, %r1429, %r1433, %r2;
	// inline asm
	ld.local.u32 	%r1437, [%rd5];
	// inline asm
	prmt.b32 %r9686, %r1433, %r1437, %r2;
	// inline asm
	ld.local.u32 	%r1441, [%rd4+12];
	// inline asm
	prmt.b32 %r9687, %r1437, %r1441, %r2;
	// inline asm
	ld.local.u32 	%r1445, [%rd4+8];
	// inline asm
	prmt.b32 %r9688, %r1441, %r1445, %r2;
	// inline asm
	ld.local.u32 	%r1449, [%rd4+4];
	// inline asm
	prmt.b32 %r9681, %r1445, %r1449, %r2;
	// inline asm
	ld.local.u32 	%r1453, [%rd4];
	// inline asm
	prmt.b32 %r9682, %r1449, %r1453, %r2;
	// inline asm
	ld.local.u32 	%r1457, [%rd3+12];
	// inline asm
	prmt.b32 %r9683, %r1453, %r1457, %r2;
	// inline asm
	ld.local.u32 	%r1461, [%rd3+8];
	// inline asm
	prmt.b32 %r9684, %r1457, %r1461, %r2;
	// inline asm
	ld.local.u32 	%r1465, [%rd3+4];
	// inline asm
	prmt.b32 %r9677, %r1461, %r1465, %r2;
	// inline asm
	ld.local.u32 	%r1469, [%rd3];
	// inline asm
	prmt.b32 %r9678, %r1465, %r1469, %r2;
	// inline asm
	ld.local.u32 	%r1473, [%rd2+12];
	// inline asm
	prmt.b32 %r9679, %r1469, %r1473, %r2;
	// inline asm
	ld.local.u32 	%r1477, [%rd2+8];
	// inline asm
	prmt.b32 %r9680, %r1473, %r1477, %r2;
	// inline asm
	ld.local.u32 	%r1481, [%rd2+4];
	// inline asm
	prmt.b32 %r9673, %r1477, %r1481, %r2;
	// inline asm
	ld.local.u32 	%r1485, [%rd2];
	// inline asm
	prmt.b32 %r9674, %r1481, %r1485, %r2;
	// inline asm
	ld.local.u32 	%r1489, [%rd1+12];
	// inline asm
	prmt.b32 %r9675, %r1485, %r1489, %r2;
	// inline asm
	ld.local.u32 	%r1493, [%rd1+8];
	// inline asm
	prmt.b32 %r9676, %r1489, %r1493, %r2;
	// inline asm
	ld.local.u32 	%r1497, [%rd1+4];
	// inline asm
	prmt.b32 %r1495, %r1493, %r1497, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1495;
	ld.local.u32 	%r1500, [%rd1+4];
	ld.local.u32 	%r1501, [%rd1];
	// inline asm
	prmt.b32 %r1499, %r1500, %r1501, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1499;
	ld.local.u32 	%r1504, [%rd1];
	ld.local.u32 	%r1505, [%rd8+12];
	// inline asm
	prmt.b32 %r1503, %r1504, %r1505, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1503;
	ld.local.u32 	%r1508, [%rd8+12];
	ld.local.u32 	%r1509, [%rd8+8];
	// inline asm
	prmt.b32 %r1507, %r1508, %r1509, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1507;
	ld.local.u32 	%r1512, [%rd8+8];
	ld.local.u32 	%r1513, [%rd8+4];
	// inline asm
	prmt.b32 %r1511, %r1512, %r1513, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r1511;
	ld.local.u32 	%r1516, [%rd8+4];
	ld.local.u32 	%r1517, [%rd8];
	// inline asm
	prmt.b32 %r1515, %r1516, %r1517, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r1515;
	ld.local.u32 	%r1520, [%rd8];
	// inline asm
	prmt.b32 %r1519, %r1520, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r1519;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd25, 0;
	st.local.u32 	[%rd8+4], %rd25;
	st.local.u32 	[%rd8], %rd25;
	mov.u32 	%r9697, %r9672;
	mov.u32 	%r9698, %r9672;
	bra.uni 	BB3_85;

BB3_102:
	setp.eq.s32	%p90, %r1, 5;
	@%p90 bra 	BB3_103;
	bra.uni 	BB3_169;

BB3_103:
	ld.local.u32 	%r8865, [%rd6+8];
	ld.local.u32 	%r8866, [%rd6+4];
	// inline asm
	prmt.b32 %r8864, %r8865, %r8866, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8864;
	ld.local.u32 	%r8869, [%rd6+4];
	ld.local.u32 	%r8870, [%rd6];
	// inline asm
	prmt.b32 %r8868, %r8869, %r8870, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8868;
	ld.local.u32 	%r8873, [%rd6];
	ld.local.u32 	%r8874, [%rd5+12];
	// inline asm
	prmt.b32 %r8872, %r8873, %r8874, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8872;
	ld.local.u32 	%r8877, [%rd5+12];
	ld.local.u32 	%r8878, [%rd5+8];
	// inline asm
	prmt.b32 %r8876, %r8877, %r8878, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8876;
	ld.local.u32 	%r8881, [%rd5+8];
	ld.local.u32 	%r8882, [%rd5+4];
	// inline asm
	prmt.b32 %r8880, %r8881, %r8882, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8880;
	ld.local.u32 	%r8885, [%rd5+4];
	ld.local.u32 	%r8886, [%rd5];
	// inline asm
	prmt.b32 %r8884, %r8885, %r8886, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8884;
	ld.local.u32 	%r8889, [%rd5];
	ld.local.u32 	%r8890, [%rd4+12];
	// inline asm
	prmt.b32 %r8888, %r8889, %r8890, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8888;
	ld.local.u32 	%r8893, [%rd4+12];
	ld.local.u32 	%r8894, [%rd4+8];
	// inline asm
	prmt.b32 %r8892, %r8893, %r8894, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8892;
	ld.local.u32 	%r8897, [%rd4+8];
	ld.local.u32 	%r8898, [%rd4+4];
	// inline asm
	prmt.b32 %r8896, %r8897, %r8898, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8896;
	ld.local.u32 	%r8901, [%rd4+4];
	ld.local.u32 	%r8902, [%rd4];
	// inline asm
	prmt.b32 %r8900, %r8901, %r8902, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8900;
	ld.local.u32 	%r8905, [%rd4];
	ld.local.u32 	%r8906, [%rd3+12];
	// inline asm
	prmt.b32 %r8904, %r8905, %r8906, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8904;
	ld.local.u32 	%r8909, [%rd3+12];
	ld.local.u32 	%r8910, [%rd3+8];
	// inline asm
	prmt.b32 %r8908, %r8909, %r8910, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8908;
	ld.local.u32 	%r8913, [%rd3+8];
	ld.local.u32 	%r8914, [%rd3+4];
	// inline asm
	prmt.b32 %r8912, %r8913, %r8914, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8912;
	ld.local.u32 	%r8917, [%rd3+4];
	ld.local.u32 	%r8918, [%rd3];
	// inline asm
	prmt.b32 %r8916, %r8917, %r8918, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8916;
	ld.local.u32 	%r8921, [%rd3];
	ld.local.u32 	%r8922, [%rd2+12];
	// inline asm
	prmt.b32 %r8920, %r8921, %r8922, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8920;
	ld.local.u32 	%r8925, [%rd2+12];
	ld.local.u32 	%r8926, [%rd2+8];
	// inline asm
	prmt.b32 %r8924, %r8925, %r8926, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8924;
	ld.local.u32 	%r8929, [%rd2+8];
	ld.local.u32 	%r8930, [%rd2+4];
	// inline asm
	prmt.b32 %r8928, %r8929, %r8930, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8928;
	ld.local.u32 	%r8933, [%rd2+4];
	ld.local.u32 	%r8934, [%rd2];
	// inline asm
	prmt.b32 %r8932, %r8933, %r8934, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8932;
	ld.local.u32 	%r8937, [%rd2];
	ld.local.u32 	%r8938, [%rd1+12];
	// inline asm
	prmt.b32 %r8936, %r8937, %r8938, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8936;
	ld.local.u32 	%r8941, [%rd1+12];
	ld.local.u32 	%r8942, [%rd1+8];
	// inline asm
	prmt.b32 %r8940, %r8941, %r8942, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8940;
	ld.local.u32 	%r8945, [%rd1+8];
	ld.local.u32 	%r8946, [%rd1+4];
	// inline asm
	prmt.b32 %r8944, %r8945, %r8946, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8944;
	ld.local.u32 	%r8949, [%rd1+4];
	ld.local.u32 	%r8950, [%rd1];
	// inline asm
	prmt.b32 %r8948, %r8949, %r8950, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8948;
	ld.local.u32 	%r8953, [%rd1];
	ld.local.u32 	%r8954, [%rd8+12];
	// inline asm
	prmt.b32 %r8952, %r8953, %r8954, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r8952;
	ld.local.u32 	%r8957, [%rd8+12];
	ld.local.u32 	%r8958, [%rd8+8];
	// inline asm
	prmt.b32 %r8956, %r8957, %r8958, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r8956;
	ld.local.u32 	%r8961, [%rd8+8];
	ld.local.u32 	%r8962, [%rd8+4];
	// inline asm
	prmt.b32 %r8960, %r8961, %r8962, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r8960;
	ld.local.u32 	%r8965, [%rd8+4];
	ld.local.u32 	%r8966, [%rd8];
	// inline asm
	prmt.b32 %r8964, %r8965, %r8966, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r8964;
	ld.local.u32 	%r8969, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8968, %r8969, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r8968;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2938, 0;
	st.local.u32 	[%rd8+4], %rd2938;
	st.local.u32 	[%rd8], %rd2938;
	bra.uni 	BB3_170;

BB3_13:
	setp.eq.s32	%p43, %r1, 5;
	@%p43 bra 	BB3_14;
	bra.uni 	BB3_87;

BB3_14:
	ld.local.u32 	%r4363, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9679, %r9672, %r4363, %r2;
	// inline asm
	ld.local.u32 	%r4367, [%rd7+8];
	// inline asm
	prmt.b32 %r9680, %r4363, %r4367, %r2;
	// inline asm
	ld.local.u32 	%r4371, [%rd7+4];
	// inline asm
	prmt.b32 %r9673, %r4367, %r4371, %r2;
	// inline asm
	ld.local.u32 	%r4375, [%rd7];
	// inline asm
	prmt.b32 %r9674, %r4371, %r4375, %r2;
	// inline asm
	ld.local.u32 	%r4379, [%rd6+12];
	// inline asm
	prmt.b32 %r9675, %r4375, %r4379, %r2;
	// inline asm
	ld.local.u32 	%r4383, [%rd6+8];
	// inline asm
	prmt.b32 %r9676, %r4379, %r4383, %r2;
	// inline asm
	ld.local.u32 	%r4387, [%rd6+4];
	// inline asm
	prmt.b32 %r4385, %r4383, %r4387, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4385;
	ld.local.u32 	%r4390, [%rd6+4];
	ld.local.u32 	%r4391, [%rd6];
	// inline asm
	prmt.b32 %r4389, %r4390, %r4391, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4389;
	ld.local.u32 	%r4394, [%rd6];
	ld.local.u32 	%r4395, [%rd5+12];
	// inline asm
	prmt.b32 %r4393, %r4394, %r4395, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4393;
	ld.local.u32 	%r4398, [%rd5+12];
	ld.local.u32 	%r4399, [%rd5+8];
	// inline asm
	prmt.b32 %r4397, %r4398, %r4399, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4397;
	ld.local.u32 	%r4402, [%rd5+8];
	ld.local.u32 	%r4403, [%rd5+4];
	// inline asm
	prmt.b32 %r4401, %r4402, %r4403, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4401;
	ld.local.u32 	%r4406, [%rd5+4];
	ld.local.u32 	%r4407, [%rd5];
	// inline asm
	prmt.b32 %r4405, %r4406, %r4407, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4405;
	ld.local.u32 	%r4410, [%rd5];
	ld.local.u32 	%r4411, [%rd4+12];
	// inline asm
	prmt.b32 %r4409, %r4410, %r4411, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4409;
	ld.local.u32 	%r4414, [%rd4+12];
	ld.local.u32 	%r4415, [%rd4+8];
	// inline asm
	prmt.b32 %r4413, %r4414, %r4415, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4413;
	ld.local.u32 	%r4418, [%rd4+8];
	ld.local.u32 	%r4419, [%rd4+4];
	// inline asm
	prmt.b32 %r4417, %r4418, %r4419, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4417;
	ld.local.u32 	%r4422, [%rd4+4];
	ld.local.u32 	%r4423, [%rd4];
	// inline asm
	prmt.b32 %r4421, %r4422, %r4423, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4421;
	ld.local.u32 	%r4426, [%rd4];
	ld.local.u32 	%r4427, [%rd3+12];
	// inline asm
	prmt.b32 %r4425, %r4426, %r4427, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4425;
	ld.local.u32 	%r4430, [%rd3+12];
	ld.local.u32 	%r4431, [%rd3+8];
	// inline asm
	prmt.b32 %r4429, %r4430, %r4431, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4429;
	ld.local.u32 	%r4434, [%rd3+8];
	ld.local.u32 	%r4435, [%rd3+4];
	// inline asm
	prmt.b32 %r4433, %r4434, %r4435, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4433;
	ld.local.u32 	%r4438, [%rd3+4];
	ld.local.u32 	%r4439, [%rd3];
	// inline asm
	prmt.b32 %r4437, %r4438, %r4439, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4437;
	ld.local.u32 	%r4442, [%rd3];
	ld.local.u32 	%r4443, [%rd2+12];
	// inline asm
	prmt.b32 %r4441, %r4442, %r4443, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4441;
	ld.local.u32 	%r4446, [%rd2+12];
	ld.local.u32 	%r4447, [%rd2+8];
	// inline asm
	prmt.b32 %r4445, %r4446, %r4447, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4445;
	ld.local.u32 	%r4450, [%rd2+8];
	ld.local.u32 	%r4451, [%rd2+4];
	// inline asm
	prmt.b32 %r4449, %r4450, %r4451, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4449;
	ld.local.u32 	%r4454, [%rd2+4];
	ld.local.u32 	%r4455, [%rd2];
	// inline asm
	prmt.b32 %r4453, %r4454, %r4455, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4453;
	ld.local.u32 	%r4458, [%rd2];
	ld.local.u32 	%r4459, [%rd1+12];
	// inline asm
	prmt.b32 %r4457, %r4458, %r4459, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4457;
	ld.local.u32 	%r4462, [%rd1+12];
	ld.local.u32 	%r4463, [%rd1+8];
	// inline asm
	prmt.b32 %r4461, %r4462, %r4463, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4461;
	ld.local.u32 	%r4466, [%rd1+8];
	ld.local.u32 	%r4467, [%rd1+4];
	// inline asm
	prmt.b32 %r4465, %r4466, %r4467, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4465;
	ld.local.u32 	%r4470, [%rd1+4];
	ld.local.u32 	%r4471, [%rd1];
	// inline asm
	prmt.b32 %r4469, %r4470, %r4471, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4469;
	ld.local.u32 	%r4474, [%rd1];
	ld.local.u32 	%r4475, [%rd8+12];
	// inline asm
	prmt.b32 %r4473, %r4474, %r4475, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4473;
	ld.local.u32 	%r4478, [%rd8+12];
	ld.local.u32 	%r4479, [%rd8+8];
	// inline asm
	prmt.b32 %r4477, %r4478, %r4479, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4477;
	ld.local.u32 	%r4482, [%rd8+8];
	ld.local.u32 	%r4483, [%rd8+4];
	// inline asm
	prmt.b32 %r4481, %r4482, %r4483, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r4481;
	ld.local.u32 	%r4486, [%rd8+4];
	ld.local.u32 	%r4487, [%rd8];
	// inline asm
	prmt.b32 %r4485, %r4486, %r4487, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r4485;
	ld.local.u32 	%r4490, [%rd8];
	// inline asm
	prmt.b32 %r4489, %r4490, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r4489;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd45, 0;
	st.local.u32 	[%rd8+4], %rd45;
	st.local.u32 	[%rd8], %rd45;
	mov.u32 	%r9677, %r9672;
	mov.u32 	%r9678, %r9672;
	bra.uni 	BB3_80;

BB3_133:
	setp.eq.s32	%p67, %r1, 21;
	@%p67 bra 	BB3_134;
	bra.uni 	BB3_169;

BB3_134:
	ld.local.u32 	%r7665, [%rd2+8];
	ld.local.u32 	%r7666, [%rd2+4];
	// inline asm
	prmt.b32 %r7664, %r7665, %r7666, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7664;
	ld.local.u32 	%r7669, [%rd2+4];
	ld.local.u32 	%r7670, [%rd2];
	// inline asm
	prmt.b32 %r7668, %r7669, %r7670, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7668;
	ld.local.u32 	%r7673, [%rd2];
	ld.local.u32 	%r7674, [%rd1+12];
	// inline asm
	prmt.b32 %r7672, %r7673, %r7674, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7672;
	ld.local.u32 	%r7677, [%rd1+12];
	ld.local.u32 	%r7678, [%rd1+8];
	// inline asm
	prmt.b32 %r7676, %r7677, %r7678, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7676;
	ld.local.u32 	%r7681, [%rd1+8];
	ld.local.u32 	%r7682, [%rd1+4];
	// inline asm
	prmt.b32 %r7680, %r7681, %r7682, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7680;
	ld.local.u32 	%r7685, [%rd1+4];
	ld.local.u32 	%r7686, [%rd1];
	// inline asm
	prmt.b32 %r7684, %r7685, %r7686, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7684;
	ld.local.u32 	%r7689, [%rd1];
	ld.local.u32 	%r7690, [%rd8+12];
	// inline asm
	prmt.b32 %r7688, %r7689, %r7690, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7688;
	ld.local.u32 	%r7693, [%rd8+12];
	ld.local.u32 	%r7694, [%rd8+8];
	// inline asm
	prmt.b32 %r7692, %r7693, %r7694, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7692;
	ld.local.u32 	%r7697, [%rd8+8];
	ld.local.u32 	%r7698, [%rd8+4];
	// inline asm
	prmt.b32 %r7696, %r7697, %r7698, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7696;
	ld.local.u32 	%r7701, [%rd8+4];
	ld.local.u32 	%r7702, [%rd8];
	// inline asm
	prmt.b32 %r7700, %r7701, %r7702, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7700;
	ld.local.u32 	%r7705, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7704, %r7705, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7704;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2922, 0;
	st.local.u32 	[%rd8+4], %rd2922;
	st.local.u32 	[%rd8], %rd2922;
	bra.uni 	BB3_170;

BB3_44:
	setp.eq.s32	%p20, %r1, 21;
	@%p20 bra 	BB3_45;
	bra.uni 	BB3_87;

BB3_45:
	ld.local.u32 	%r1955, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9695, %r9672, %r1955, %r2;
	// inline asm
	ld.local.u32 	%r1959, [%rd7+8];
	// inline asm
	prmt.b32 %r9696, %r1955, %r1959, %r2;
	// inline asm
	ld.local.u32 	%r1963, [%rd7+4];
	// inline asm
	prmt.b32 %r9689, %r1959, %r1963, %r2;
	// inline asm
	ld.local.u32 	%r1967, [%rd7];
	// inline asm
	prmt.b32 %r9690, %r1963, %r1967, %r2;
	// inline asm
	ld.local.u32 	%r1971, [%rd6+12];
	// inline asm
	prmt.b32 %r9691, %r1967, %r1971, %r2;
	// inline asm
	ld.local.u32 	%r1975, [%rd6+8];
	// inline asm
	prmt.b32 %r9692, %r1971, %r1975, %r2;
	// inline asm
	ld.local.u32 	%r1979, [%rd6+4];
	// inline asm
	prmt.b32 %r9685, %r1975, %r1979, %r2;
	// inline asm
	ld.local.u32 	%r1983, [%rd6];
	// inline asm
	prmt.b32 %r9686, %r1979, %r1983, %r2;
	// inline asm
	ld.local.u32 	%r1987, [%rd5+12];
	// inline asm
	prmt.b32 %r9687, %r1983, %r1987, %r2;
	// inline asm
	ld.local.u32 	%r1991, [%rd5+8];
	// inline asm
	prmt.b32 %r9688, %r1987, %r1991, %r2;
	// inline asm
	ld.local.u32 	%r1995, [%rd5+4];
	// inline asm
	prmt.b32 %r9681, %r1991, %r1995, %r2;
	// inline asm
	ld.local.u32 	%r1999, [%rd5];
	// inline asm
	prmt.b32 %r9682, %r1995, %r1999, %r2;
	// inline asm
	ld.local.u32 	%r2003, [%rd4+12];
	// inline asm
	prmt.b32 %r9683, %r1999, %r2003, %r2;
	// inline asm
	ld.local.u32 	%r2007, [%rd4+8];
	// inline asm
	prmt.b32 %r9684, %r2003, %r2007, %r2;
	// inline asm
	ld.local.u32 	%r2011, [%rd4+4];
	// inline asm
	prmt.b32 %r9677, %r2007, %r2011, %r2;
	// inline asm
	ld.local.u32 	%r2015, [%rd4];
	// inline asm
	prmt.b32 %r9678, %r2011, %r2015, %r2;
	// inline asm
	ld.local.u32 	%r2019, [%rd3+12];
	// inline asm
	prmt.b32 %r9679, %r2015, %r2019, %r2;
	// inline asm
	ld.local.u32 	%r2023, [%rd3+8];
	// inline asm
	prmt.b32 %r9680, %r2019, %r2023, %r2;
	// inline asm
	ld.local.u32 	%r2027, [%rd3+4];
	// inline asm
	prmt.b32 %r9673, %r2023, %r2027, %r2;
	// inline asm
	ld.local.u32 	%r2031, [%rd3];
	// inline asm
	prmt.b32 %r9674, %r2027, %r2031, %r2;
	// inline asm
	ld.local.u32 	%r2035, [%rd2+12];
	// inline asm
	prmt.b32 %r9675, %r2031, %r2035, %r2;
	// inline asm
	ld.local.u32 	%r2039, [%rd2+8];
	// inline asm
	prmt.b32 %r9676, %r2035, %r2039, %r2;
	// inline asm
	ld.local.u32 	%r2043, [%rd2+4];
	// inline asm
	prmt.b32 %r2041, %r2039, %r2043, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2041;
	ld.local.u32 	%r2046, [%rd2+4];
	ld.local.u32 	%r2047, [%rd2];
	// inline asm
	prmt.b32 %r2045, %r2046, %r2047, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2045;
	ld.local.u32 	%r2050, [%rd2];
	ld.local.u32 	%r2051, [%rd1+12];
	// inline asm
	prmt.b32 %r2049, %r2050, %r2051, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2049;
	ld.local.u32 	%r2054, [%rd1+12];
	ld.local.u32 	%r2055, [%rd1+8];
	// inline asm
	prmt.b32 %r2053, %r2054, %r2055, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2053;
	ld.local.u32 	%r2058, [%rd1+8];
	ld.local.u32 	%r2059, [%rd1+4];
	// inline asm
	prmt.b32 %r2057, %r2058, %r2059, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2057;
	ld.local.u32 	%r2062, [%rd1+4];
	ld.local.u32 	%r2063, [%rd1];
	// inline asm
	prmt.b32 %r2061, %r2062, %r2063, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2061;
	ld.local.u32 	%r2066, [%rd1];
	ld.local.u32 	%r2067, [%rd8+12];
	// inline asm
	prmt.b32 %r2065, %r2066, %r2067, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2065;
	ld.local.u32 	%r2070, [%rd8+12];
	ld.local.u32 	%r2071, [%rd8+8];
	// inline asm
	prmt.b32 %r2069, %r2070, %r2071, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2069;
	ld.local.u32 	%r2074, [%rd8+8];
	ld.local.u32 	%r2075, [%rd8+4];
	// inline asm
	prmt.b32 %r2073, %r2074, %r2075, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2073;
	ld.local.u32 	%r2078, [%rd8+4];
	ld.local.u32 	%r2079, [%rd8];
	// inline asm
	prmt.b32 %r2077, %r2078, %r2079, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2077;
	ld.local.u32 	%r2082, [%rd8];
	// inline asm
	prmt.b32 %r2081, %r2082, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2081;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd29, 0;
	st.local.u32 	[%rd8+4], %rd29;
	st.local.u32 	[%rd8], %rd29;
	mov.u32 	%r9693, %r9672;
	mov.u32 	%r9694, %r9672;
	bra.uni 	BB3_84;

BB3_117:
	setp.eq.s32	%p79, %r1, 13;
	@%p79 bra 	BB3_118;
	bra.uni 	BB3_169;

BB3_118:
	ld.local.u32 	%r8137, [%rd4+8];
	ld.local.u32 	%r8138, [%rd4+4];
	// inline asm
	prmt.b32 %r8136, %r8137, %r8138, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8136;
	ld.local.u32 	%r8141, [%rd4+4];
	ld.local.u32 	%r8142, [%rd4];
	// inline asm
	prmt.b32 %r8140, %r8141, %r8142, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8140;
	ld.local.u32 	%r8145, [%rd4];
	ld.local.u32 	%r8146, [%rd3+12];
	// inline asm
	prmt.b32 %r8144, %r8145, %r8146, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8144;
	ld.local.u32 	%r8149, [%rd3+12];
	ld.local.u32 	%r8150, [%rd3+8];
	// inline asm
	prmt.b32 %r8148, %r8149, %r8150, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8148;
	ld.local.u32 	%r8153, [%rd3+8];
	ld.local.u32 	%r8154, [%rd3+4];
	// inline asm
	prmt.b32 %r8152, %r8153, %r8154, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8152;
	ld.local.u32 	%r8157, [%rd3+4];
	ld.local.u32 	%r8158, [%rd3];
	// inline asm
	prmt.b32 %r8156, %r8157, %r8158, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8156;
	ld.local.u32 	%r8161, [%rd3];
	ld.local.u32 	%r8162, [%rd2+12];
	// inline asm
	prmt.b32 %r8160, %r8161, %r8162, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8160;
	ld.local.u32 	%r8165, [%rd2+12];
	ld.local.u32 	%r8166, [%rd2+8];
	// inline asm
	prmt.b32 %r8164, %r8165, %r8166, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8164;
	ld.local.u32 	%r8169, [%rd2+8];
	ld.local.u32 	%r8170, [%rd2+4];
	// inline asm
	prmt.b32 %r8168, %r8169, %r8170, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8168;
	ld.local.u32 	%r8173, [%rd2+4];
	ld.local.u32 	%r8174, [%rd2];
	// inline asm
	prmt.b32 %r8172, %r8173, %r8174, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8172;
	ld.local.u32 	%r8177, [%rd2];
	ld.local.u32 	%r8178, [%rd1+12];
	// inline asm
	prmt.b32 %r8176, %r8177, %r8178, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8176;
	ld.local.u32 	%r8181, [%rd1+12];
	ld.local.u32 	%r8182, [%rd1+8];
	// inline asm
	prmt.b32 %r8180, %r8181, %r8182, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8180;
	ld.local.u32 	%r8185, [%rd1+8];
	ld.local.u32 	%r8186, [%rd1+4];
	// inline asm
	prmt.b32 %r8184, %r8185, %r8186, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8184;
	ld.local.u32 	%r8189, [%rd1+4];
	ld.local.u32 	%r8190, [%rd1];
	// inline asm
	prmt.b32 %r8188, %r8189, %r8190, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8188;
	ld.local.u32 	%r8193, [%rd1];
	ld.local.u32 	%r8194, [%rd8+12];
	// inline asm
	prmt.b32 %r8192, %r8193, %r8194, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8192;
	ld.local.u32 	%r8197, [%rd8+12];
	ld.local.u32 	%r8198, [%rd8+8];
	// inline asm
	prmt.b32 %r8196, %r8197, %r8198, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8196;
	ld.local.u32 	%r8201, [%rd8+8];
	ld.local.u32 	%r8202, [%rd8+4];
	// inline asm
	prmt.b32 %r8200, %r8201, %r8202, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8200;
	ld.local.u32 	%r8205, [%rd8+4];
	ld.local.u32 	%r8206, [%rd8];
	// inline asm
	prmt.b32 %r8204, %r8205, %r8206, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8204;
	ld.local.u32 	%r8209, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8208, %r8209, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8208;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2930, 0;
	st.local.u32 	[%rd8+4], %rd2930;
	st.local.u32 	[%rd8], %rd2930;
	bra.uni 	BB3_170;

BB3_28:
	setp.eq.s32	%p32, %r1, 13;
	@%p32 bra 	BB3_29;
	bra.uni 	BB3_87;

BB3_29:
	ld.local.u32 	%r3127, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9687, %r9672, %r3127, %r2;
	// inline asm
	ld.local.u32 	%r3131, [%rd7+8];
	// inline asm
	prmt.b32 %r9688, %r3127, %r3131, %r2;
	// inline asm
	ld.local.u32 	%r3135, [%rd7+4];
	// inline asm
	prmt.b32 %r9681, %r3131, %r3135, %r2;
	// inline asm
	ld.local.u32 	%r3139, [%rd7];
	// inline asm
	prmt.b32 %r9682, %r3135, %r3139, %r2;
	// inline asm
	ld.local.u32 	%r3143, [%rd6+12];
	// inline asm
	prmt.b32 %r9683, %r3139, %r3143, %r2;
	// inline asm
	ld.local.u32 	%r3147, [%rd6+8];
	// inline asm
	prmt.b32 %r9684, %r3143, %r3147, %r2;
	// inline asm
	ld.local.u32 	%r3151, [%rd6+4];
	// inline asm
	prmt.b32 %r9677, %r3147, %r3151, %r2;
	// inline asm
	ld.local.u32 	%r3155, [%rd6];
	// inline asm
	prmt.b32 %r9678, %r3151, %r3155, %r2;
	// inline asm
	ld.local.u32 	%r3159, [%rd5+12];
	// inline asm
	prmt.b32 %r9679, %r3155, %r3159, %r2;
	// inline asm
	ld.local.u32 	%r3163, [%rd5+8];
	// inline asm
	prmt.b32 %r9680, %r3159, %r3163, %r2;
	// inline asm
	ld.local.u32 	%r3167, [%rd5+4];
	// inline asm
	prmt.b32 %r9673, %r3163, %r3167, %r2;
	// inline asm
	ld.local.u32 	%r3171, [%rd5];
	// inline asm
	prmt.b32 %r9674, %r3167, %r3171, %r2;
	// inline asm
	ld.local.u32 	%r3175, [%rd4+12];
	// inline asm
	prmt.b32 %r9675, %r3171, %r3175, %r2;
	// inline asm
	ld.local.u32 	%r3179, [%rd4+8];
	// inline asm
	prmt.b32 %r9676, %r3175, %r3179, %r2;
	// inline asm
	ld.local.u32 	%r3183, [%rd4+4];
	// inline asm
	prmt.b32 %r3181, %r3179, %r3183, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3181;
	ld.local.u32 	%r3186, [%rd4+4];
	ld.local.u32 	%r3187, [%rd4];
	// inline asm
	prmt.b32 %r3185, %r3186, %r3187, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3185;
	ld.local.u32 	%r3190, [%rd4];
	ld.local.u32 	%r3191, [%rd3+12];
	// inline asm
	prmt.b32 %r3189, %r3190, %r3191, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3189;
	ld.local.u32 	%r3194, [%rd3+12];
	ld.local.u32 	%r3195, [%rd3+8];
	// inline asm
	prmt.b32 %r3193, %r3194, %r3195, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3193;
	ld.local.u32 	%r3198, [%rd3+8];
	ld.local.u32 	%r3199, [%rd3+4];
	// inline asm
	prmt.b32 %r3197, %r3198, %r3199, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3197;
	ld.local.u32 	%r3202, [%rd3+4];
	ld.local.u32 	%r3203, [%rd3];
	// inline asm
	prmt.b32 %r3201, %r3202, %r3203, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3201;
	ld.local.u32 	%r3206, [%rd3];
	ld.local.u32 	%r3207, [%rd2+12];
	// inline asm
	prmt.b32 %r3205, %r3206, %r3207, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3205;
	ld.local.u32 	%r3210, [%rd2+12];
	ld.local.u32 	%r3211, [%rd2+8];
	// inline asm
	prmt.b32 %r3209, %r3210, %r3211, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3209;
	ld.local.u32 	%r3214, [%rd2+8];
	ld.local.u32 	%r3215, [%rd2+4];
	// inline asm
	prmt.b32 %r3213, %r3214, %r3215, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3213;
	ld.local.u32 	%r3218, [%rd2+4];
	ld.local.u32 	%r3219, [%rd2];
	// inline asm
	prmt.b32 %r3217, %r3218, %r3219, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3217;
	ld.local.u32 	%r3222, [%rd2];
	ld.local.u32 	%r3223, [%rd1+12];
	// inline asm
	prmt.b32 %r3221, %r3222, %r3223, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3221;
	ld.local.u32 	%r3226, [%rd1+12];
	ld.local.u32 	%r3227, [%rd1+8];
	// inline asm
	prmt.b32 %r3225, %r3226, %r3227, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3225;
	ld.local.u32 	%r3230, [%rd1+8];
	ld.local.u32 	%r3231, [%rd1+4];
	// inline asm
	prmt.b32 %r3229, %r3230, %r3231, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3229;
	ld.local.u32 	%r3234, [%rd1+4];
	ld.local.u32 	%r3235, [%rd1];
	// inline asm
	prmt.b32 %r3233, %r3234, %r3235, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3233;
	ld.local.u32 	%r3238, [%rd1];
	ld.local.u32 	%r3239, [%rd8+12];
	// inline asm
	prmt.b32 %r3237, %r3238, %r3239, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3237;
	ld.local.u32 	%r3242, [%rd8+12];
	ld.local.u32 	%r3243, [%rd8+8];
	// inline asm
	prmt.b32 %r3241, %r3242, %r3243, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3241;
	ld.local.u32 	%r3246, [%rd8+8];
	ld.local.u32 	%r3247, [%rd8+4];
	// inline asm
	prmt.b32 %r3245, %r3246, %r3247, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3245;
	ld.local.u32 	%r3250, [%rd8+4];
	ld.local.u32 	%r3251, [%rd8];
	// inline asm
	prmt.b32 %r3249, %r3250, %r3251, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3249;
	ld.local.u32 	%r3254, [%rd8];
	// inline asm
	prmt.b32 %r3253, %r3254, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r3253;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd37, 0;
	st.local.u32 	[%rd8+4], %rd37;
	st.local.u32 	[%rd8], %rd37;
	mov.u32 	%r9685, %r9672;
	mov.u32 	%r9686, %r9672;
	bra.uni 	BB3_82;

BB3_148:
	setp.eq.s32	%p56, %r1, 29;
	@%p56 bra 	BB3_149;
	bra.uni 	BB3_169;

BB3_149:
	ld.local.u32 	%r7449, [%rd8+8];
	ld.local.u32 	%r7450, [%rd8+4];
	// inline asm
	prmt.b32 %r7448, %r7449, %r7450, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7448;
	ld.local.u32 	%r7453, [%rd8+4];
	ld.local.u32 	%r7454, [%rd8];
	// inline asm
	prmt.b32 %r7452, %r7453, %r7454, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7452;
	ld.local.u32 	%r7457, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7456, %r7457, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7456;
	st.local.u32 	[%rd7], %r9705;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2914, 0;
	st.local.u32 	[%rd8+4], %rd2914;
	st.local.u32 	[%rd8], %rd2914;
	bra.uni 	BB3_170;

BB3_59:
	setp.eq.s32	%p9, %r1, 29;
	@%p9 bra 	BB3_60;
	bra.uni 	BB3_87;

BB3_60:
	ld.local.u32 	%r847, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9703, %r9672, %r847, %r2;
	// inline asm
	ld.local.u32 	%r851, [%rd7+8];
	// inline asm
	prmt.b32 %r9704, %r847, %r851, %r2;
	// inline asm
	ld.local.u32 	%r855, [%rd7+4];
	// inline asm
	prmt.b32 %r9697, %r851, %r855, %r2;
	// inline asm
	ld.local.u32 	%r859, [%rd7];
	// inline asm
	prmt.b32 %r9698, %r855, %r859, %r2;
	// inline asm
	ld.local.u32 	%r863, [%rd6+12];
	// inline asm
	prmt.b32 %r9699, %r859, %r863, %r2;
	// inline asm
	ld.local.u32 	%r867, [%rd6+8];
	// inline asm
	prmt.b32 %r9700, %r863, %r867, %r2;
	// inline asm
	ld.local.u32 	%r871, [%rd6+4];
	// inline asm
	prmt.b32 %r9693, %r867, %r871, %r2;
	// inline asm
	ld.local.u32 	%r875, [%rd6];
	// inline asm
	prmt.b32 %r9694, %r871, %r875, %r2;
	// inline asm
	ld.local.u32 	%r879, [%rd5+12];
	// inline asm
	prmt.b32 %r9695, %r875, %r879, %r2;
	// inline asm
	ld.local.u32 	%r883, [%rd5+8];
	// inline asm
	prmt.b32 %r9696, %r879, %r883, %r2;
	// inline asm
	ld.local.u32 	%r887, [%rd5+4];
	// inline asm
	prmt.b32 %r9689, %r883, %r887, %r2;
	// inline asm
	ld.local.u32 	%r891, [%rd5];
	// inline asm
	prmt.b32 %r9690, %r887, %r891, %r2;
	// inline asm
	ld.local.u32 	%r895, [%rd4+12];
	// inline asm
	prmt.b32 %r9691, %r891, %r895, %r2;
	// inline asm
	ld.local.u32 	%r899, [%rd4+8];
	// inline asm
	prmt.b32 %r9692, %r895, %r899, %r2;
	// inline asm
	ld.local.u32 	%r903, [%rd4+4];
	// inline asm
	prmt.b32 %r9685, %r899, %r903, %r2;
	// inline asm
	ld.local.u32 	%r907, [%rd4];
	// inline asm
	prmt.b32 %r9686, %r903, %r907, %r2;
	// inline asm
	ld.local.u32 	%r911, [%rd3+12];
	// inline asm
	prmt.b32 %r9687, %r907, %r911, %r2;
	// inline asm
	ld.local.u32 	%r915, [%rd3+8];
	// inline asm
	prmt.b32 %r9688, %r911, %r915, %r2;
	// inline asm
	ld.local.u32 	%r919, [%rd3+4];
	// inline asm
	prmt.b32 %r9681, %r915, %r919, %r2;
	// inline asm
	ld.local.u32 	%r923, [%rd3];
	// inline asm
	prmt.b32 %r9682, %r919, %r923, %r2;
	// inline asm
	ld.local.u32 	%r927, [%rd2+12];
	// inline asm
	prmt.b32 %r9683, %r923, %r927, %r2;
	// inline asm
	ld.local.u32 	%r931, [%rd2+8];
	// inline asm
	prmt.b32 %r9684, %r927, %r931, %r2;
	// inline asm
	ld.local.u32 	%r935, [%rd2+4];
	// inline asm
	prmt.b32 %r9677, %r931, %r935, %r2;
	// inline asm
	ld.local.u32 	%r939, [%rd2];
	// inline asm
	prmt.b32 %r9678, %r935, %r939, %r2;
	// inline asm
	ld.local.u32 	%r943, [%rd1+12];
	// inline asm
	prmt.b32 %r9679, %r939, %r943, %r2;
	// inline asm
	ld.local.u32 	%r947, [%rd1+8];
	// inline asm
	prmt.b32 %r9680, %r943, %r947, %r2;
	// inline asm
	ld.local.u32 	%r951, [%rd1+4];
	// inline asm
	prmt.b32 %r9673, %r947, %r951, %r2;
	// inline asm
	ld.local.u32 	%r955, [%rd1];
	// inline asm
	prmt.b32 %r9674, %r951, %r955, %r2;
	// inline asm
	ld.local.u32 	%r959, [%rd8+12];
	// inline asm
	prmt.b32 %r9675, %r955, %r959, %r2;
	// inline asm
	ld.local.u32 	%r963, [%rd8+8];
	// inline asm
	prmt.b32 %r9676, %r959, %r963, %r2;
	// inline asm
	ld.local.u32 	%r967, [%rd8+4];
	// inline asm
	prmt.b32 %r965, %r963, %r967, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r965;
	ld.local.u32 	%r970, [%rd8+4];
	ld.local.u32 	%r971, [%rd8];
	// inline asm
	prmt.b32 %r969, %r970, %r971, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r969;
	ld.local.u32 	%r974, [%rd8];
	// inline asm
	prmt.b32 %r973, %r974, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r973;
	st.local.u32 	[%rd7], %r9672;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd21, 0;
	st.local.u32 	[%rd8+4], %rd21;
	st.local.u32 	[%rd8], %rd21;
	mov.u32 	%r9701, %r9672;
	mov.u32 	%r9702, %r9672;
	bra.uni 	BB3_89;

BB3_98:
	setp.eq.s32	%p93, %r1, 3;
	@%p93 bra 	BB3_99;
	bra.uni 	BB3_169;

BB3_99:
	ld.local.u32 	%r9087, [%rd7];
	ld.local.u32 	%r9088, [%rd6+12];
	// inline asm
	prmt.b32 %r9086, %r9087, %r9088, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r9086;
	ld.local.u32 	%r9091, [%rd6+12];
	ld.local.u32 	%r9092, [%rd6+8];
	// inline asm
	prmt.b32 %r9090, %r9091, %r9092, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r9090;
	ld.local.u32 	%r9095, [%rd6+8];
	ld.local.u32 	%r9096, [%rd6+4];
	// inline asm
	prmt.b32 %r9094, %r9095, %r9096, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r9094;
	ld.local.u32 	%r9099, [%rd6+4];
	ld.local.u32 	%r9100, [%rd6];
	// inline asm
	prmt.b32 %r9098, %r9099, %r9100, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r9098;
	ld.local.u32 	%r9103, [%rd6];
	ld.local.u32 	%r9104, [%rd5+12];
	// inline asm
	prmt.b32 %r9102, %r9103, %r9104, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r9102;
	ld.local.u32 	%r9107, [%rd5+12];
	ld.local.u32 	%r9108, [%rd5+8];
	// inline asm
	prmt.b32 %r9106, %r9107, %r9108, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r9106;
	ld.local.u32 	%r9111, [%rd5+8];
	ld.local.u32 	%r9112, [%rd5+4];
	// inline asm
	prmt.b32 %r9110, %r9111, %r9112, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r9110;
	ld.local.u32 	%r9115, [%rd5+4];
	ld.local.u32 	%r9116, [%rd5];
	// inline asm
	prmt.b32 %r9114, %r9115, %r9116, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r9114;
	ld.local.u32 	%r9119, [%rd5];
	ld.local.u32 	%r9120, [%rd4+12];
	// inline asm
	prmt.b32 %r9118, %r9119, %r9120, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r9118;
	ld.local.u32 	%r9123, [%rd4+12];
	ld.local.u32 	%r9124, [%rd4+8];
	// inline asm
	prmt.b32 %r9122, %r9123, %r9124, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r9122;
	ld.local.u32 	%r9127, [%rd4+8];
	ld.local.u32 	%r9128, [%rd4+4];
	// inline asm
	prmt.b32 %r9126, %r9127, %r9128, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r9126;
	ld.local.u32 	%r9131, [%rd4+4];
	ld.local.u32 	%r9132, [%rd4];
	// inline asm
	prmt.b32 %r9130, %r9131, %r9132, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r9130;
	ld.local.u32 	%r9135, [%rd4];
	ld.local.u32 	%r9136, [%rd3+12];
	// inline asm
	prmt.b32 %r9134, %r9135, %r9136, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r9134;
	ld.local.u32 	%r9139, [%rd3+12];
	ld.local.u32 	%r9140, [%rd3+8];
	// inline asm
	prmt.b32 %r9138, %r9139, %r9140, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r9138;
	ld.local.u32 	%r9143, [%rd3+8];
	ld.local.u32 	%r9144, [%rd3+4];
	// inline asm
	prmt.b32 %r9142, %r9143, %r9144, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r9142;
	ld.local.u32 	%r9147, [%rd3+4];
	ld.local.u32 	%r9148, [%rd3];
	// inline asm
	prmt.b32 %r9146, %r9147, %r9148, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r9146;
	ld.local.u32 	%r9151, [%rd3];
	ld.local.u32 	%r9152, [%rd2+12];
	// inline asm
	prmt.b32 %r9150, %r9151, %r9152, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r9150;
	ld.local.u32 	%r9155, [%rd2+12];
	ld.local.u32 	%r9156, [%rd2+8];
	// inline asm
	prmt.b32 %r9154, %r9155, %r9156, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r9154;
	ld.local.u32 	%r9159, [%rd2+8];
	ld.local.u32 	%r9160, [%rd2+4];
	// inline asm
	prmt.b32 %r9158, %r9159, %r9160, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r9158;
	ld.local.u32 	%r9163, [%rd2+4];
	ld.local.u32 	%r9164, [%rd2];
	// inline asm
	prmt.b32 %r9162, %r9163, %r9164, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r9162;
	ld.local.u32 	%r9167, [%rd2];
	ld.local.u32 	%r9168, [%rd1+12];
	// inline asm
	prmt.b32 %r9166, %r9167, %r9168, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r9166;
	ld.local.u32 	%r9171, [%rd1+12];
	ld.local.u32 	%r9172, [%rd1+8];
	// inline asm
	prmt.b32 %r9170, %r9171, %r9172, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r9170;
	ld.local.u32 	%r9175, [%rd1+8];
	ld.local.u32 	%r9176, [%rd1+4];
	// inline asm
	prmt.b32 %r9174, %r9175, %r9176, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r9174;
	ld.local.u32 	%r9179, [%rd1+4];
	ld.local.u32 	%r9180, [%rd1];
	// inline asm
	prmt.b32 %r9178, %r9179, %r9180, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r9178;
	ld.local.u32 	%r9183, [%rd1];
	ld.local.u32 	%r9184, [%rd8+12];
	// inline asm
	prmt.b32 %r9182, %r9183, %r9184, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r9182;
	ld.local.u32 	%r9187, [%rd8+12];
	ld.local.u32 	%r9188, [%rd8+8];
	// inline asm
	prmt.b32 %r9186, %r9187, %r9188, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r9186;
	ld.local.u32 	%r9191, [%rd8+8];
	ld.local.u32 	%r9192, [%rd8+4];
	// inline asm
	prmt.b32 %r9190, %r9191, %r9192, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r9190;
	ld.local.u32 	%r9195, [%rd8+4];
	ld.local.u32 	%r9196, [%rd8];
	// inline asm
	prmt.b32 %r9194, %r9195, %r9196, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r9194;
	ld.local.u32 	%r9199, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9198, %r9199, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r9198;
	st.local.u32 	[%rd8+8], %r9705;
	st.local.u32 	[%rd8+4], %r9705;
	st.local.u32 	[%rd8], %r9705;
	bra.uni 	BB3_170;

BB3_9:
	setp.eq.s32	%p46, %r1, 3;
	@%p46 bra 	BB3_10;
	bra.uni 	BB3_87;

BB3_10:
	ld.local.u32 	%r4682, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9673, %r9672, %r4682, %r2;
	// inline asm
	ld.local.u32 	%r4686, [%rd7+8];
	// inline asm
	prmt.b32 %r9674, %r4682, %r4686, %r2;
	// inline asm
	ld.local.u32 	%r4690, [%rd7+4];
	// inline asm
	prmt.b32 %r9675, %r4686, %r4690, %r2;
	// inline asm
	ld.local.u32 	%r4694, [%rd7];
	// inline asm
	prmt.b32 %r9676, %r4690, %r4694, %r2;
	// inline asm
	ld.local.u32 	%r4698, [%rd6+12];
	// inline asm
	prmt.b32 %r4696, %r4694, %r4698, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4696;
	ld.local.u32 	%r4701, [%rd6+12];
	ld.local.u32 	%r4702, [%rd6+8];
	// inline asm
	prmt.b32 %r4700, %r4701, %r4702, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4700;
	ld.local.u32 	%r4705, [%rd6+8];
	ld.local.u32 	%r4706, [%rd6+4];
	// inline asm
	prmt.b32 %r4704, %r4705, %r4706, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4704;
	ld.local.u32 	%r4709, [%rd6+4];
	ld.local.u32 	%r4710, [%rd6];
	// inline asm
	prmt.b32 %r4708, %r4709, %r4710, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4708;
	ld.local.u32 	%r4713, [%rd6];
	ld.local.u32 	%r4714, [%rd5+12];
	// inline asm
	prmt.b32 %r4712, %r4713, %r4714, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4712;
	ld.local.u32 	%r4717, [%rd5+12];
	ld.local.u32 	%r4718, [%rd5+8];
	// inline asm
	prmt.b32 %r4716, %r4717, %r4718, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4716;
	ld.local.u32 	%r4721, [%rd5+8];
	ld.local.u32 	%r4722, [%rd5+4];
	// inline asm
	prmt.b32 %r4720, %r4721, %r4722, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4720;
	ld.local.u32 	%r4725, [%rd5+4];
	ld.local.u32 	%r4726, [%rd5];
	// inline asm
	prmt.b32 %r4724, %r4725, %r4726, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4724;
	ld.local.u32 	%r4729, [%rd5];
	ld.local.u32 	%r4730, [%rd4+12];
	// inline asm
	prmt.b32 %r4728, %r4729, %r4730, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4728;
	ld.local.u32 	%r4733, [%rd4+12];
	ld.local.u32 	%r4734, [%rd4+8];
	// inline asm
	prmt.b32 %r4732, %r4733, %r4734, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4732;
	ld.local.u32 	%r4737, [%rd4+8];
	ld.local.u32 	%r4738, [%rd4+4];
	// inline asm
	prmt.b32 %r4736, %r4737, %r4738, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4736;
	ld.local.u32 	%r4741, [%rd4+4];
	ld.local.u32 	%r4742, [%rd4];
	// inline asm
	prmt.b32 %r4740, %r4741, %r4742, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4740;
	ld.local.u32 	%r4745, [%rd4];
	ld.local.u32 	%r4746, [%rd3+12];
	// inline asm
	prmt.b32 %r4744, %r4745, %r4746, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4744;
	ld.local.u32 	%r4749, [%rd3+12];
	ld.local.u32 	%r4750, [%rd3+8];
	// inline asm
	prmt.b32 %r4748, %r4749, %r4750, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4748;
	ld.local.u32 	%r4753, [%rd3+8];
	ld.local.u32 	%r4754, [%rd3+4];
	// inline asm
	prmt.b32 %r4752, %r4753, %r4754, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4752;
	ld.local.u32 	%r4757, [%rd3+4];
	ld.local.u32 	%r4758, [%rd3];
	// inline asm
	prmt.b32 %r4756, %r4757, %r4758, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4756;
	ld.local.u32 	%r4761, [%rd3];
	ld.local.u32 	%r4762, [%rd2+12];
	// inline asm
	prmt.b32 %r4760, %r4761, %r4762, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4760;
	ld.local.u32 	%r4765, [%rd2+12];
	ld.local.u32 	%r4766, [%rd2+8];
	// inline asm
	prmt.b32 %r4764, %r4765, %r4766, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4764;
	ld.local.u32 	%r4769, [%rd2+8];
	ld.local.u32 	%r4770, [%rd2+4];
	// inline asm
	prmt.b32 %r4768, %r4769, %r4770, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4768;
	ld.local.u32 	%r4773, [%rd2+4];
	ld.local.u32 	%r4774, [%rd2];
	// inline asm
	prmt.b32 %r4772, %r4773, %r4774, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4772;
	ld.local.u32 	%r4777, [%rd2];
	ld.local.u32 	%r4778, [%rd1+12];
	// inline asm
	prmt.b32 %r4776, %r4777, %r4778, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4776;
	ld.local.u32 	%r4781, [%rd1+12];
	ld.local.u32 	%r4782, [%rd1+8];
	// inline asm
	prmt.b32 %r4780, %r4781, %r4782, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4780;
	ld.local.u32 	%r4785, [%rd1+8];
	ld.local.u32 	%r4786, [%rd1+4];
	// inline asm
	prmt.b32 %r4784, %r4785, %r4786, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4784;
	ld.local.u32 	%r4789, [%rd1+4];
	ld.local.u32 	%r4790, [%rd1];
	// inline asm
	prmt.b32 %r4788, %r4789, %r4790, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4788;
	ld.local.u32 	%r4793, [%rd1];
	ld.local.u32 	%r4794, [%rd8+12];
	// inline asm
	prmt.b32 %r4792, %r4793, %r4794, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r4792;
	ld.local.u32 	%r4797, [%rd8+12];
	ld.local.u32 	%r4798, [%rd8+8];
	// inline asm
	prmt.b32 %r4796, %r4797, %r4798, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r4796;
	ld.local.u32 	%r4801, [%rd8+8];
	ld.local.u32 	%r4802, [%rd8+4];
	// inline asm
	prmt.b32 %r4800, %r4801, %r4802, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r4800;
	ld.local.u32 	%r4805, [%rd8+4];
	ld.local.u32 	%r4806, [%rd8];
	// inline asm
	prmt.b32 %r4804, %r4805, %r4806, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r4804;
	ld.local.u32 	%r4809, [%rd8];
	// inline asm
	prmt.b32 %r4808, %r4809, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4808;
	st.local.u32 	[%rd8+8], %r9672;
	st.local.u32 	[%rd8+4], %r9672;
	st.local.u32 	[%rd8], %r9672;

BB3_79:
	mov.u32 	%r9677, %r9672;
	mov.u32 	%r9678, %r9672;
	mov.u32 	%r9679, %r9672;
	mov.u32 	%r9680, %r9672;
	bra.uni 	BB3_80;

BB3_129:
	setp.eq.s32	%p70, %r1, 19;
	@%p70 bra 	BB3_130;
	bra.uni 	BB3_169;

BB3_130:
	ld.local.u32 	%r7759, [%rd3];
	ld.local.u32 	%r7760, [%rd2+12];
	// inline asm
	prmt.b32 %r7758, %r7759, %r7760, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7758;
	ld.local.u32 	%r7763, [%rd2+12];
	ld.local.u32 	%r7764, [%rd2+8];
	// inline asm
	prmt.b32 %r7762, %r7763, %r7764, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7762;
	ld.local.u32 	%r7767, [%rd2+8];
	ld.local.u32 	%r7768, [%rd2+4];
	// inline asm
	prmt.b32 %r7766, %r7767, %r7768, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7766;
	ld.local.u32 	%r7771, [%rd2+4];
	ld.local.u32 	%r7772, [%rd2];
	// inline asm
	prmt.b32 %r7770, %r7771, %r7772, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7770;
	ld.local.u32 	%r7775, [%rd2];
	ld.local.u32 	%r7776, [%rd1+12];
	// inline asm
	prmt.b32 %r7774, %r7775, %r7776, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7774;
	ld.local.u32 	%r7779, [%rd1+12];
	ld.local.u32 	%r7780, [%rd1+8];
	// inline asm
	prmt.b32 %r7778, %r7779, %r7780, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7778;
	ld.local.u32 	%r7783, [%rd1+8];
	ld.local.u32 	%r7784, [%rd1+4];
	// inline asm
	prmt.b32 %r7782, %r7783, %r7784, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7782;
	ld.local.u32 	%r7787, [%rd1+4];
	ld.local.u32 	%r7788, [%rd1];
	// inline asm
	prmt.b32 %r7786, %r7787, %r7788, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7786;
	ld.local.u32 	%r7791, [%rd1];
	ld.local.u32 	%r7792, [%rd8+12];
	// inline asm
	prmt.b32 %r7790, %r7791, %r7792, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7790;
	ld.local.u32 	%r7795, [%rd8+12];
	ld.local.u32 	%r7796, [%rd8+8];
	// inline asm
	prmt.b32 %r7794, %r7795, %r7796, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7794;
	ld.local.u32 	%r7799, [%rd8+8];
	ld.local.u32 	%r7800, [%rd8+4];
	// inline asm
	prmt.b32 %r7798, %r7799, %r7800, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7798;
	ld.local.u32 	%r7803, [%rd8+4];
	ld.local.u32 	%r7804, [%rd8];
	// inline asm
	prmt.b32 %r7802, %r7803, %r7804, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7802;
	ld.local.u32 	%r7807, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7806, %r7807, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7806;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2924, 0;
	st.local.u32 	[%rd8+4], %rd2924;
	st.local.u32 	[%rd8], %rd2924;
	bra.uni 	BB3_170;

BB3_40:
	setp.eq.s32	%p23, %r1, 19;
	@%p23 bra 	BB3_41;
	bra.uni 	BB3_87;

BB3_41:
	ld.local.u32 	%r2242, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9689, %r9672, %r2242, %r2;
	// inline asm
	ld.local.u32 	%r2246, [%rd7+8];
	// inline asm
	prmt.b32 %r9690, %r2242, %r2246, %r2;
	// inline asm
	ld.local.u32 	%r2250, [%rd7+4];
	// inline asm
	prmt.b32 %r9691, %r2246, %r2250, %r2;
	// inline asm
	ld.local.u32 	%r2254, [%rd7];
	// inline asm
	prmt.b32 %r9692, %r2250, %r2254, %r2;
	// inline asm
	ld.local.u32 	%r2258, [%rd6+12];
	// inline asm
	prmt.b32 %r9685, %r2254, %r2258, %r2;
	// inline asm
	ld.local.u32 	%r2262, [%rd6+8];
	// inline asm
	prmt.b32 %r9686, %r2258, %r2262, %r2;
	// inline asm
	ld.local.u32 	%r2266, [%rd6+4];
	// inline asm
	prmt.b32 %r9687, %r2262, %r2266, %r2;
	// inline asm
	ld.local.u32 	%r2270, [%rd6];
	// inline asm
	prmt.b32 %r9688, %r2266, %r2270, %r2;
	// inline asm
	ld.local.u32 	%r2274, [%rd5+12];
	// inline asm
	prmt.b32 %r9681, %r2270, %r2274, %r2;
	// inline asm
	ld.local.u32 	%r2278, [%rd5+8];
	// inline asm
	prmt.b32 %r9682, %r2274, %r2278, %r2;
	// inline asm
	ld.local.u32 	%r2282, [%rd5+4];
	// inline asm
	prmt.b32 %r9683, %r2278, %r2282, %r2;
	// inline asm
	ld.local.u32 	%r2286, [%rd5];
	// inline asm
	prmt.b32 %r9684, %r2282, %r2286, %r2;
	// inline asm
	ld.local.u32 	%r2290, [%rd4+12];
	// inline asm
	prmt.b32 %r9677, %r2286, %r2290, %r2;
	// inline asm
	ld.local.u32 	%r2294, [%rd4+8];
	// inline asm
	prmt.b32 %r9678, %r2290, %r2294, %r2;
	// inline asm
	ld.local.u32 	%r2298, [%rd4+4];
	// inline asm
	prmt.b32 %r9679, %r2294, %r2298, %r2;
	// inline asm
	ld.local.u32 	%r2302, [%rd4];
	// inline asm
	prmt.b32 %r9680, %r2298, %r2302, %r2;
	// inline asm
	ld.local.u32 	%r2306, [%rd3+12];
	// inline asm
	prmt.b32 %r9673, %r2302, %r2306, %r2;
	// inline asm
	ld.local.u32 	%r2310, [%rd3+8];
	// inline asm
	prmt.b32 %r9674, %r2306, %r2310, %r2;
	// inline asm
	ld.local.u32 	%r2314, [%rd3+4];
	// inline asm
	prmt.b32 %r9675, %r2310, %r2314, %r2;
	// inline asm
	ld.local.u32 	%r2318, [%rd3];
	// inline asm
	prmt.b32 %r9676, %r2314, %r2318, %r2;
	// inline asm
	ld.local.u32 	%r2322, [%rd2+12];
	// inline asm
	prmt.b32 %r2320, %r2318, %r2322, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2320;
	ld.local.u32 	%r2325, [%rd2+12];
	ld.local.u32 	%r2326, [%rd2+8];
	// inline asm
	prmt.b32 %r2324, %r2325, %r2326, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2324;
	ld.local.u32 	%r2329, [%rd2+8];
	ld.local.u32 	%r2330, [%rd2+4];
	// inline asm
	prmt.b32 %r2328, %r2329, %r2330, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2328;
	ld.local.u32 	%r2333, [%rd2+4];
	ld.local.u32 	%r2334, [%rd2];
	// inline asm
	prmt.b32 %r2332, %r2333, %r2334, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2332;
	ld.local.u32 	%r2337, [%rd2];
	ld.local.u32 	%r2338, [%rd1+12];
	// inline asm
	prmt.b32 %r2336, %r2337, %r2338, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2336;
	ld.local.u32 	%r2341, [%rd1+12];
	ld.local.u32 	%r2342, [%rd1+8];
	// inline asm
	prmt.b32 %r2340, %r2341, %r2342, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2340;
	ld.local.u32 	%r2345, [%rd1+8];
	ld.local.u32 	%r2346, [%rd1+4];
	// inline asm
	prmt.b32 %r2344, %r2345, %r2346, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2344;
	ld.local.u32 	%r2349, [%rd1+4];
	ld.local.u32 	%r2350, [%rd1];
	// inline asm
	prmt.b32 %r2348, %r2349, %r2350, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2348;
	ld.local.u32 	%r2353, [%rd1];
	ld.local.u32 	%r2354, [%rd8+12];
	// inline asm
	prmt.b32 %r2352, %r2353, %r2354, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2352;
	ld.local.u32 	%r2357, [%rd8+12];
	ld.local.u32 	%r2358, [%rd8+8];
	// inline asm
	prmt.b32 %r2356, %r2357, %r2358, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2356;
	ld.local.u32 	%r2361, [%rd8+8];
	ld.local.u32 	%r2362, [%rd8+4];
	// inline asm
	prmt.b32 %r2360, %r2361, %r2362, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2360;
	ld.local.u32 	%r2365, [%rd8+4];
	ld.local.u32 	%r2366, [%rd8];
	// inline asm
	prmt.b32 %r2364, %r2365, %r2366, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r2364;
	ld.local.u32 	%r2369, [%rd8];
	// inline asm
	prmt.b32 %r2368, %r2369, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r2368;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd31, 0;
	st.local.u32 	[%rd8+4], %rd31;
	st.local.u32 	[%rd8], %rd31;
	bra.uni 	BB3_83;

BB3_113:
	setp.eq.s32	%p82, %r1, 11;
	@%p82 bra 	BB3_114;
	bra.uni 	BB3_169;

BB3_114:
	ld.local.u32 	%r8295, [%rd5];
	ld.local.u32 	%r8296, [%rd4+12];
	// inline asm
	prmt.b32 %r8294, %r8295, %r8296, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8294;
	ld.local.u32 	%r8299, [%rd4+12];
	ld.local.u32 	%r8300, [%rd4+8];
	// inline asm
	prmt.b32 %r8298, %r8299, %r8300, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8298;
	ld.local.u32 	%r8303, [%rd4+8];
	ld.local.u32 	%r8304, [%rd4+4];
	// inline asm
	prmt.b32 %r8302, %r8303, %r8304, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8302;
	ld.local.u32 	%r8307, [%rd4+4];
	ld.local.u32 	%r8308, [%rd4];
	// inline asm
	prmt.b32 %r8306, %r8307, %r8308, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8306;
	ld.local.u32 	%r8311, [%rd4];
	ld.local.u32 	%r8312, [%rd3+12];
	// inline asm
	prmt.b32 %r8310, %r8311, %r8312, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8310;
	ld.local.u32 	%r8315, [%rd3+12];
	ld.local.u32 	%r8316, [%rd3+8];
	// inline asm
	prmt.b32 %r8314, %r8315, %r8316, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8314;
	ld.local.u32 	%r8319, [%rd3+8];
	ld.local.u32 	%r8320, [%rd3+4];
	// inline asm
	prmt.b32 %r8318, %r8319, %r8320, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8318;
	ld.local.u32 	%r8323, [%rd3+4];
	ld.local.u32 	%r8324, [%rd3];
	// inline asm
	prmt.b32 %r8322, %r8323, %r8324, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8322;
	ld.local.u32 	%r8327, [%rd3];
	ld.local.u32 	%r8328, [%rd2+12];
	// inline asm
	prmt.b32 %r8326, %r8327, %r8328, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8326;
	ld.local.u32 	%r8331, [%rd2+12];
	ld.local.u32 	%r8332, [%rd2+8];
	// inline asm
	prmt.b32 %r8330, %r8331, %r8332, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8330;
	ld.local.u32 	%r8335, [%rd2+8];
	ld.local.u32 	%r8336, [%rd2+4];
	// inline asm
	prmt.b32 %r8334, %r8335, %r8336, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8334;
	ld.local.u32 	%r8339, [%rd2+4];
	ld.local.u32 	%r8340, [%rd2];
	// inline asm
	prmt.b32 %r8338, %r8339, %r8340, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8338;
	ld.local.u32 	%r8343, [%rd2];
	ld.local.u32 	%r8344, [%rd1+12];
	// inline asm
	prmt.b32 %r8342, %r8343, %r8344, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8342;
	ld.local.u32 	%r8347, [%rd1+12];
	ld.local.u32 	%r8348, [%rd1+8];
	// inline asm
	prmt.b32 %r8346, %r8347, %r8348, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8346;
	ld.local.u32 	%r8351, [%rd1+8];
	ld.local.u32 	%r8352, [%rd1+4];
	// inline asm
	prmt.b32 %r8350, %r8351, %r8352, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8350;
	ld.local.u32 	%r8355, [%rd1+4];
	ld.local.u32 	%r8356, [%rd1];
	// inline asm
	prmt.b32 %r8354, %r8355, %r8356, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8354;
	ld.local.u32 	%r8359, [%rd1];
	ld.local.u32 	%r8360, [%rd8+12];
	// inline asm
	prmt.b32 %r8358, %r8359, %r8360, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8358;
	ld.local.u32 	%r8363, [%rd8+12];
	ld.local.u32 	%r8364, [%rd8+8];
	// inline asm
	prmt.b32 %r8362, %r8363, %r8364, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8362;
	ld.local.u32 	%r8367, [%rd8+8];
	ld.local.u32 	%r8368, [%rd8+4];
	// inline asm
	prmt.b32 %r8366, %r8367, %r8368, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8366;
	ld.local.u32 	%r8371, [%rd8+4];
	ld.local.u32 	%r8372, [%rd8];
	// inline asm
	prmt.b32 %r8370, %r8371, %r8372, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8370;
	ld.local.u32 	%r8375, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8374, %r8375, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8374;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2932, 0;
	st.local.u32 	[%rd8+4], %rd2932;
	st.local.u32 	[%rd8], %rd2932;
	bra.uni 	BB3_170;

BB3_24:
	setp.eq.s32	%p35, %r1, 11;
	@%p35 bra 	BB3_25;
	bra.uni 	BB3_87;

BB3_25:
	ld.local.u32 	%r3430, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9681, %r9672, %r3430, %r2;
	// inline asm
	ld.local.u32 	%r3434, [%rd7+8];
	// inline asm
	prmt.b32 %r9682, %r3430, %r3434, %r2;
	// inline asm
	ld.local.u32 	%r3438, [%rd7+4];
	// inline asm
	prmt.b32 %r9683, %r3434, %r3438, %r2;
	// inline asm
	ld.local.u32 	%r3442, [%rd7];
	// inline asm
	prmt.b32 %r9684, %r3438, %r3442, %r2;
	// inline asm
	ld.local.u32 	%r3446, [%rd6+12];
	// inline asm
	prmt.b32 %r9677, %r3442, %r3446, %r2;
	// inline asm
	ld.local.u32 	%r3450, [%rd6+8];
	// inline asm
	prmt.b32 %r9678, %r3446, %r3450, %r2;
	// inline asm
	ld.local.u32 	%r3454, [%rd6+4];
	// inline asm
	prmt.b32 %r9679, %r3450, %r3454, %r2;
	// inline asm
	ld.local.u32 	%r3458, [%rd6];
	// inline asm
	prmt.b32 %r9680, %r3454, %r3458, %r2;
	// inline asm
	ld.local.u32 	%r3462, [%rd5+12];
	// inline asm
	prmt.b32 %r9673, %r3458, %r3462, %r2;
	// inline asm
	ld.local.u32 	%r3466, [%rd5+8];
	// inline asm
	prmt.b32 %r9674, %r3462, %r3466, %r2;
	// inline asm
	ld.local.u32 	%r3470, [%rd5+4];
	// inline asm
	prmt.b32 %r9675, %r3466, %r3470, %r2;
	// inline asm
	ld.local.u32 	%r3474, [%rd5];
	// inline asm
	prmt.b32 %r9676, %r3470, %r3474, %r2;
	// inline asm
	ld.local.u32 	%r3478, [%rd4+12];
	// inline asm
	prmt.b32 %r3476, %r3474, %r3478, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3476;
	ld.local.u32 	%r3481, [%rd4+12];
	ld.local.u32 	%r3482, [%rd4+8];
	// inline asm
	prmt.b32 %r3480, %r3481, %r3482, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3480;
	ld.local.u32 	%r3485, [%rd4+8];
	ld.local.u32 	%r3486, [%rd4+4];
	// inline asm
	prmt.b32 %r3484, %r3485, %r3486, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3484;
	ld.local.u32 	%r3489, [%rd4+4];
	ld.local.u32 	%r3490, [%rd4];
	// inline asm
	prmt.b32 %r3488, %r3489, %r3490, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3488;
	ld.local.u32 	%r3493, [%rd4];
	ld.local.u32 	%r3494, [%rd3+12];
	// inline asm
	prmt.b32 %r3492, %r3493, %r3494, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3492;
	ld.local.u32 	%r3497, [%rd3+12];
	ld.local.u32 	%r3498, [%rd3+8];
	// inline asm
	prmt.b32 %r3496, %r3497, %r3498, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3496;
	ld.local.u32 	%r3501, [%rd3+8];
	ld.local.u32 	%r3502, [%rd3+4];
	// inline asm
	prmt.b32 %r3500, %r3501, %r3502, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3500;
	ld.local.u32 	%r3505, [%rd3+4];
	ld.local.u32 	%r3506, [%rd3];
	// inline asm
	prmt.b32 %r3504, %r3505, %r3506, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3504;
	ld.local.u32 	%r3509, [%rd3];
	ld.local.u32 	%r3510, [%rd2+12];
	// inline asm
	prmt.b32 %r3508, %r3509, %r3510, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3508;
	ld.local.u32 	%r3513, [%rd2+12];
	ld.local.u32 	%r3514, [%rd2+8];
	// inline asm
	prmt.b32 %r3512, %r3513, %r3514, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3512;
	ld.local.u32 	%r3517, [%rd2+8];
	ld.local.u32 	%r3518, [%rd2+4];
	// inline asm
	prmt.b32 %r3516, %r3517, %r3518, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3516;
	ld.local.u32 	%r3521, [%rd2+4];
	ld.local.u32 	%r3522, [%rd2];
	// inline asm
	prmt.b32 %r3520, %r3521, %r3522, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3520;
	ld.local.u32 	%r3525, [%rd2];
	ld.local.u32 	%r3526, [%rd1+12];
	// inline asm
	prmt.b32 %r3524, %r3525, %r3526, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3524;
	ld.local.u32 	%r3529, [%rd1+12];
	ld.local.u32 	%r3530, [%rd1+8];
	// inline asm
	prmt.b32 %r3528, %r3529, %r3530, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3528;
	ld.local.u32 	%r3533, [%rd1+8];
	ld.local.u32 	%r3534, [%rd1+4];
	// inline asm
	prmt.b32 %r3532, %r3533, %r3534, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3532;
	ld.local.u32 	%r3537, [%rd1+4];
	ld.local.u32 	%r3538, [%rd1];
	// inline asm
	prmt.b32 %r3536, %r3537, %r3538, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3536;
	ld.local.u32 	%r3541, [%rd1];
	ld.local.u32 	%r3542, [%rd8+12];
	// inline asm
	prmt.b32 %r3540, %r3541, %r3542, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3540;
	ld.local.u32 	%r3545, [%rd8+12];
	ld.local.u32 	%r3546, [%rd8+8];
	// inline asm
	prmt.b32 %r3544, %r3545, %r3546, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3544;
	ld.local.u32 	%r3549, [%rd8+8];
	ld.local.u32 	%r3550, [%rd8+4];
	// inline asm
	prmt.b32 %r3548, %r3549, %r3550, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r3548;
	ld.local.u32 	%r3553, [%rd8+4];
	ld.local.u32 	%r3554, [%rd8];
	// inline asm
	prmt.b32 %r3552, %r3553, %r3554, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r3552;
	ld.local.u32 	%r3557, [%rd8];
	// inline asm
	prmt.b32 %r3556, %r3557, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r3556;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd39, 0;
	st.local.u32 	[%rd8+4], %rd39;
	st.local.u32 	[%rd8], %rd39;
	bra.uni 	BB3_81;

BB3_144:
	setp.eq.s32	%p59, %r1, 27;
	@%p59 bra 	BB3_145;
	bra.uni 	BB3_169;

BB3_145:
	ld.local.u32 	%r7479, [%rd1];
	ld.local.u32 	%r7480, [%rd8+12];
	// inline asm
	prmt.b32 %r7478, %r7479, %r7480, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7478;
	ld.local.u32 	%r7483, [%rd8+12];
	ld.local.u32 	%r7484, [%rd8+8];
	// inline asm
	prmt.b32 %r7482, %r7483, %r7484, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7482;
	ld.local.u32 	%r7487, [%rd8+8];
	ld.local.u32 	%r7488, [%rd8+4];
	// inline asm
	prmt.b32 %r7486, %r7487, %r7488, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7486;
	ld.local.u32 	%r7491, [%rd8+4];
	ld.local.u32 	%r7492, [%rd8];
	// inline asm
	prmt.b32 %r7490, %r7491, %r7492, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7490;
	ld.local.u32 	%r7495, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7494, %r7495, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7494;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2916, 0;
	st.local.u32 	[%rd8+4], %rd2916;
	st.local.u32 	[%rd8], %rd2916;
	bra.uni 	BB3_170;

BB3_55:
	setp.eq.s32	%p12, %r1, 27;
	@%p12 bra 	BB3_56;
	bra.uni 	BB3_87;

BB3_56:
	ld.local.u32 	%r1118, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9697, %r9672, %r1118, %r2;
	// inline asm
	ld.local.u32 	%r1122, [%rd7+8];
	// inline asm
	prmt.b32 %r9698, %r1118, %r1122, %r2;
	// inline asm
	ld.local.u32 	%r1126, [%rd7+4];
	// inline asm
	prmt.b32 %r9699, %r1122, %r1126, %r2;
	// inline asm
	ld.local.u32 	%r1130, [%rd7];
	// inline asm
	prmt.b32 %r9700, %r1126, %r1130, %r2;
	// inline asm
	ld.local.u32 	%r1134, [%rd6+12];
	// inline asm
	prmt.b32 %r9693, %r1130, %r1134, %r2;
	// inline asm
	ld.local.u32 	%r1138, [%rd6+8];
	// inline asm
	prmt.b32 %r9694, %r1134, %r1138, %r2;
	// inline asm
	ld.local.u32 	%r1142, [%rd6+4];
	// inline asm
	prmt.b32 %r9695, %r1138, %r1142, %r2;
	// inline asm
	ld.local.u32 	%r1146, [%rd6];
	// inline asm
	prmt.b32 %r9696, %r1142, %r1146, %r2;
	// inline asm
	ld.local.u32 	%r1150, [%rd5+12];
	// inline asm
	prmt.b32 %r9689, %r1146, %r1150, %r2;
	// inline asm
	ld.local.u32 	%r1154, [%rd5+8];
	// inline asm
	prmt.b32 %r9690, %r1150, %r1154, %r2;
	// inline asm
	ld.local.u32 	%r1158, [%rd5+4];
	// inline asm
	prmt.b32 %r9691, %r1154, %r1158, %r2;
	// inline asm
	ld.local.u32 	%r1162, [%rd5];
	// inline asm
	prmt.b32 %r9692, %r1158, %r1162, %r2;
	// inline asm
	ld.local.u32 	%r1166, [%rd4+12];
	// inline asm
	prmt.b32 %r9685, %r1162, %r1166, %r2;
	// inline asm
	ld.local.u32 	%r1170, [%rd4+8];
	// inline asm
	prmt.b32 %r9686, %r1166, %r1170, %r2;
	// inline asm
	ld.local.u32 	%r1174, [%rd4+4];
	// inline asm
	prmt.b32 %r9687, %r1170, %r1174, %r2;
	// inline asm
	ld.local.u32 	%r1178, [%rd4];
	// inline asm
	prmt.b32 %r9688, %r1174, %r1178, %r2;
	// inline asm
	ld.local.u32 	%r1182, [%rd3+12];
	// inline asm
	prmt.b32 %r9681, %r1178, %r1182, %r2;
	// inline asm
	ld.local.u32 	%r1186, [%rd3+8];
	// inline asm
	prmt.b32 %r9682, %r1182, %r1186, %r2;
	// inline asm
	ld.local.u32 	%r1190, [%rd3+4];
	// inline asm
	prmt.b32 %r9683, %r1186, %r1190, %r2;
	// inline asm
	ld.local.u32 	%r1194, [%rd3];
	// inline asm
	prmt.b32 %r9684, %r1190, %r1194, %r2;
	// inline asm
	ld.local.u32 	%r1198, [%rd2+12];
	// inline asm
	prmt.b32 %r9677, %r1194, %r1198, %r2;
	// inline asm
	ld.local.u32 	%r1202, [%rd2+8];
	// inline asm
	prmt.b32 %r9678, %r1198, %r1202, %r2;
	// inline asm
	ld.local.u32 	%r1206, [%rd2+4];
	// inline asm
	prmt.b32 %r9679, %r1202, %r1206, %r2;
	// inline asm
	ld.local.u32 	%r1210, [%rd2];
	// inline asm
	prmt.b32 %r9680, %r1206, %r1210, %r2;
	// inline asm
	ld.local.u32 	%r1214, [%rd1+12];
	// inline asm
	prmt.b32 %r9673, %r1210, %r1214, %r2;
	// inline asm
	ld.local.u32 	%r1218, [%rd1+8];
	// inline asm
	prmt.b32 %r9674, %r1214, %r1218, %r2;
	// inline asm
	ld.local.u32 	%r1222, [%rd1+4];
	// inline asm
	prmt.b32 %r9675, %r1218, %r1222, %r2;
	// inline asm
	ld.local.u32 	%r1226, [%rd1];
	// inline asm
	prmt.b32 %r9676, %r1222, %r1226, %r2;
	// inline asm
	ld.local.u32 	%r1230, [%rd8+12];
	// inline asm
	prmt.b32 %r1228, %r1226, %r1230, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1228;
	ld.local.u32 	%r1233, [%rd8+12];
	ld.local.u32 	%r1234, [%rd8+8];
	// inline asm
	prmt.b32 %r1232, %r1233, %r1234, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1232;
	ld.local.u32 	%r1237, [%rd8+8];
	ld.local.u32 	%r1238, [%rd8+4];
	// inline asm
	prmt.b32 %r1236, %r1237, %r1238, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1236;
	ld.local.u32 	%r1241, [%rd8+4];
	ld.local.u32 	%r1242, [%rd8];
	// inline asm
	prmt.b32 %r1240, %r1241, %r1242, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1240;
	ld.local.u32 	%r1245, [%rd8];
	// inline asm
	prmt.b32 %r1244, %r1245, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r1244;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd23, 0;
	st.local.u32 	[%rd8+4], %rd23;
	st.local.u32 	[%rd8], %rd23;
	bra.uni 	BB3_85;

BB3_105:
	setp.eq.s32	%p88, %r1, 7;
	@%p88 bra 	BB3_106;
	bra.uni 	BB3_169;

BB3_106:
	ld.local.u32 	%r8659, [%rd6];
	ld.local.u32 	%r8660, [%rd5+12];
	// inline asm
	prmt.b32 %r8658, %r8659, %r8660, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8658;
	ld.local.u32 	%r8663, [%rd5+12];
	ld.local.u32 	%r8664, [%rd5+8];
	// inline asm
	prmt.b32 %r8662, %r8663, %r8664, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8662;
	ld.local.u32 	%r8667, [%rd5+8];
	ld.local.u32 	%r8668, [%rd5+4];
	// inline asm
	prmt.b32 %r8666, %r8667, %r8668, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8666;
	ld.local.u32 	%r8671, [%rd5+4];
	ld.local.u32 	%r8672, [%rd5];
	// inline asm
	prmt.b32 %r8670, %r8671, %r8672, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8670;
	ld.local.u32 	%r8675, [%rd5];
	ld.local.u32 	%r8676, [%rd4+12];
	// inline asm
	prmt.b32 %r8674, %r8675, %r8676, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8674;
	ld.local.u32 	%r8679, [%rd4+12];
	ld.local.u32 	%r8680, [%rd4+8];
	// inline asm
	prmt.b32 %r8678, %r8679, %r8680, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8678;
	ld.local.u32 	%r8683, [%rd4+8];
	ld.local.u32 	%r8684, [%rd4+4];
	// inline asm
	prmt.b32 %r8682, %r8683, %r8684, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8682;
	ld.local.u32 	%r8687, [%rd4+4];
	ld.local.u32 	%r8688, [%rd4];
	// inline asm
	prmt.b32 %r8686, %r8687, %r8688, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8686;
	ld.local.u32 	%r8691, [%rd4];
	ld.local.u32 	%r8692, [%rd3+12];
	// inline asm
	prmt.b32 %r8690, %r8691, %r8692, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8690;
	ld.local.u32 	%r8695, [%rd3+12];
	ld.local.u32 	%r8696, [%rd3+8];
	// inline asm
	prmt.b32 %r8694, %r8695, %r8696, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8694;
	ld.local.u32 	%r8699, [%rd3+8];
	ld.local.u32 	%r8700, [%rd3+4];
	// inline asm
	prmt.b32 %r8698, %r8699, %r8700, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8698;
	ld.local.u32 	%r8703, [%rd3+4];
	ld.local.u32 	%r8704, [%rd3];
	// inline asm
	prmt.b32 %r8702, %r8703, %r8704, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8702;
	ld.local.u32 	%r8707, [%rd3];
	ld.local.u32 	%r8708, [%rd2+12];
	// inline asm
	prmt.b32 %r8706, %r8707, %r8708, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8706;
	ld.local.u32 	%r8711, [%rd2+12];
	ld.local.u32 	%r8712, [%rd2+8];
	// inline asm
	prmt.b32 %r8710, %r8711, %r8712, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8710;
	ld.local.u32 	%r8715, [%rd2+8];
	ld.local.u32 	%r8716, [%rd2+4];
	// inline asm
	prmt.b32 %r8714, %r8715, %r8716, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8714;
	ld.local.u32 	%r8719, [%rd2+4];
	ld.local.u32 	%r8720, [%rd2];
	// inline asm
	prmt.b32 %r8718, %r8719, %r8720, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8718;
	ld.local.u32 	%r8723, [%rd2];
	ld.local.u32 	%r8724, [%rd1+12];
	// inline asm
	prmt.b32 %r8722, %r8723, %r8724, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8722;
	ld.local.u32 	%r8727, [%rd1+12];
	ld.local.u32 	%r8728, [%rd1+8];
	// inline asm
	prmt.b32 %r8726, %r8727, %r8728, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8726;
	ld.local.u32 	%r8731, [%rd1+8];
	ld.local.u32 	%r8732, [%rd1+4];
	// inline asm
	prmt.b32 %r8730, %r8731, %r8732, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8730;
	ld.local.u32 	%r8735, [%rd1+4];
	ld.local.u32 	%r8736, [%rd1];
	// inline asm
	prmt.b32 %r8734, %r8735, %r8736, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8734;
	ld.local.u32 	%r8739, [%rd1];
	ld.local.u32 	%r8740, [%rd8+12];
	// inline asm
	prmt.b32 %r8738, %r8739, %r8740, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8738;
	ld.local.u32 	%r8743, [%rd8+12];
	ld.local.u32 	%r8744, [%rd8+8];
	// inline asm
	prmt.b32 %r8742, %r8743, %r8744, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8742;
	ld.local.u32 	%r8747, [%rd8+8];
	ld.local.u32 	%r8748, [%rd8+4];
	// inline asm
	prmt.b32 %r8746, %r8747, %r8748, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r8746;
	ld.local.u32 	%r8751, [%rd8+4];
	ld.local.u32 	%r8752, [%rd8];
	// inline asm
	prmt.b32 %r8750, %r8751, %r8752, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r8750;
	ld.local.u32 	%r8755, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8754, %r8755, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r8754;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2936, 0;
	st.local.u32 	[%rd8+4], %rd2936;
	st.local.u32 	[%rd8], %rd2936;
	bra.uni 	BB3_170;

BB3_16:
	setp.eq.s32	%p41, %r1, 7;
	@%p41 bra 	BB3_17;
	bra.uni 	BB3_87;

BB3_17:
	ld.local.u32 	%r4048, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9677, %r9672, %r4048, %r2;
	// inline asm
	ld.local.u32 	%r4052, [%rd7+8];
	// inline asm
	prmt.b32 %r9678, %r4048, %r4052, %r2;
	// inline asm
	ld.local.u32 	%r4056, [%rd7+4];
	// inline asm
	prmt.b32 %r9679, %r4052, %r4056, %r2;
	// inline asm
	ld.local.u32 	%r4060, [%rd7];
	// inline asm
	prmt.b32 %r9680, %r4056, %r4060, %r2;
	// inline asm
	ld.local.u32 	%r4064, [%rd6+12];
	// inline asm
	prmt.b32 %r9673, %r4060, %r4064, %r2;
	// inline asm
	ld.local.u32 	%r4068, [%rd6+8];
	// inline asm
	prmt.b32 %r9674, %r4064, %r4068, %r2;
	// inline asm
	ld.local.u32 	%r4072, [%rd6+4];
	// inline asm
	prmt.b32 %r9675, %r4068, %r4072, %r2;
	// inline asm
	ld.local.u32 	%r4076, [%rd6];
	// inline asm
	prmt.b32 %r9676, %r4072, %r4076, %r2;
	// inline asm
	ld.local.u32 	%r4080, [%rd5+12];
	// inline asm
	prmt.b32 %r4078, %r4076, %r4080, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4078;
	ld.local.u32 	%r4083, [%rd5+12];
	ld.local.u32 	%r4084, [%rd5+8];
	// inline asm
	prmt.b32 %r4082, %r4083, %r4084, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4082;
	ld.local.u32 	%r4087, [%rd5+8];
	ld.local.u32 	%r4088, [%rd5+4];
	// inline asm
	prmt.b32 %r4086, %r4087, %r4088, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4086;
	ld.local.u32 	%r4091, [%rd5+4];
	ld.local.u32 	%r4092, [%rd5];
	// inline asm
	prmt.b32 %r4090, %r4091, %r4092, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4090;
	ld.local.u32 	%r4095, [%rd5];
	ld.local.u32 	%r4096, [%rd4+12];
	// inline asm
	prmt.b32 %r4094, %r4095, %r4096, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4094;
	ld.local.u32 	%r4099, [%rd4+12];
	ld.local.u32 	%r4100, [%rd4+8];
	// inline asm
	prmt.b32 %r4098, %r4099, %r4100, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4098;
	ld.local.u32 	%r4103, [%rd4+8];
	ld.local.u32 	%r4104, [%rd4+4];
	// inline asm
	prmt.b32 %r4102, %r4103, %r4104, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4102;
	ld.local.u32 	%r4107, [%rd4+4];
	ld.local.u32 	%r4108, [%rd4];
	// inline asm
	prmt.b32 %r4106, %r4107, %r4108, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4106;
	ld.local.u32 	%r4111, [%rd4];
	ld.local.u32 	%r4112, [%rd3+12];
	// inline asm
	prmt.b32 %r4110, %r4111, %r4112, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4110;
	ld.local.u32 	%r4115, [%rd3+12];
	ld.local.u32 	%r4116, [%rd3+8];
	// inline asm
	prmt.b32 %r4114, %r4115, %r4116, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4114;
	ld.local.u32 	%r4119, [%rd3+8];
	ld.local.u32 	%r4120, [%rd3+4];
	// inline asm
	prmt.b32 %r4118, %r4119, %r4120, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4118;
	ld.local.u32 	%r4123, [%rd3+4];
	ld.local.u32 	%r4124, [%rd3];
	// inline asm
	prmt.b32 %r4122, %r4123, %r4124, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4122;
	ld.local.u32 	%r4127, [%rd3];
	ld.local.u32 	%r4128, [%rd2+12];
	// inline asm
	prmt.b32 %r4126, %r4127, %r4128, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4126;
	ld.local.u32 	%r4131, [%rd2+12];
	ld.local.u32 	%r4132, [%rd2+8];
	// inline asm
	prmt.b32 %r4130, %r4131, %r4132, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4130;
	ld.local.u32 	%r4135, [%rd2+8];
	ld.local.u32 	%r4136, [%rd2+4];
	// inline asm
	prmt.b32 %r4134, %r4135, %r4136, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4134;
	ld.local.u32 	%r4139, [%rd2+4];
	ld.local.u32 	%r4140, [%rd2];
	// inline asm
	prmt.b32 %r4138, %r4139, %r4140, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4138;
	ld.local.u32 	%r4143, [%rd2];
	ld.local.u32 	%r4144, [%rd1+12];
	// inline asm
	prmt.b32 %r4142, %r4143, %r4144, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4142;
	ld.local.u32 	%r4147, [%rd1+12];
	ld.local.u32 	%r4148, [%rd1+8];
	// inline asm
	prmt.b32 %r4146, %r4147, %r4148, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4146;
	ld.local.u32 	%r4151, [%rd1+8];
	ld.local.u32 	%r4152, [%rd1+4];
	// inline asm
	prmt.b32 %r4150, %r4151, %r4152, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4150;
	ld.local.u32 	%r4155, [%rd1+4];
	ld.local.u32 	%r4156, [%rd1];
	// inline asm
	prmt.b32 %r4154, %r4155, %r4156, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4154;
	ld.local.u32 	%r4159, [%rd1];
	ld.local.u32 	%r4160, [%rd8+12];
	// inline asm
	prmt.b32 %r4158, %r4159, %r4160, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4158;
	ld.local.u32 	%r4163, [%rd8+12];
	ld.local.u32 	%r4164, [%rd8+8];
	// inline asm
	prmt.b32 %r4162, %r4163, %r4164, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4162;
	ld.local.u32 	%r4167, [%rd8+8];
	ld.local.u32 	%r4168, [%rd8+4];
	// inline asm
	prmt.b32 %r4166, %r4167, %r4168, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4166;
	ld.local.u32 	%r4171, [%rd8+4];
	ld.local.u32 	%r4172, [%rd8];
	// inline asm
	prmt.b32 %r4170, %r4171, %r4172, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4170;
	ld.local.u32 	%r4175, [%rd8];
	// inline asm
	prmt.b32 %r4174, %r4175, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r4174;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd43, 0;
	st.local.u32 	[%rd8+4], %rd43;
	st.local.u32 	[%rd8], %rd43;

BB3_80:
	mov.u32 	%r9681, %r9672;
	mov.u32 	%r9682, %r9672;
	mov.u32 	%r9683, %r9672;
	mov.u32 	%r9684, %r9672;

BB3_81:
	mov.u32 	%r9685, %r9672;
	mov.u32 	%r9686, %r9672;
	mov.u32 	%r9687, %r9672;
	mov.u32 	%r9688, %r9672;

BB3_82:
	mov.u32 	%r9689, %r9672;
	mov.u32 	%r9690, %r9672;
	mov.u32 	%r9691, %r9672;
	mov.u32 	%r9692, %r9672;

BB3_83:
	mov.u32 	%r9693, %r9672;
	mov.u32 	%r9694, %r9672;
	mov.u32 	%r9695, %r9672;
	mov.u32 	%r9696, %r9672;

BB3_84:
	mov.u32 	%r9697, %r9672;
	mov.u32 	%r9698, %r9672;
	mov.u32 	%r9699, %r9672;
	mov.u32 	%r9700, %r9672;

BB3_85:
	mov.u32 	%r9701, %r9672;
	mov.u32 	%r9702, %r9672;
	mov.u32 	%r9703, %r9672;
	mov.u32 	%r9704, %r9672;
	bra.uni 	BB3_89;

BB3_136:
	setp.eq.s32	%p65, %r1, 23;
	@%p65 bra 	BB3_137;
	bra.uni 	BB3_169;

BB3_137:
	ld.local.u32 	%r7587, [%rd2];
	ld.local.u32 	%r7588, [%rd1+12];
	// inline asm
	prmt.b32 %r7586, %r7587, %r7588, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7586;
	ld.local.u32 	%r7591, [%rd1+12];
	ld.local.u32 	%r7592, [%rd1+8];
	// inline asm
	prmt.b32 %r7590, %r7591, %r7592, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7590;
	ld.local.u32 	%r7595, [%rd1+8];
	ld.local.u32 	%r7596, [%rd1+4];
	// inline asm
	prmt.b32 %r7594, %r7595, %r7596, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7594;
	ld.local.u32 	%r7599, [%rd1+4];
	ld.local.u32 	%r7600, [%rd1];
	// inline asm
	prmt.b32 %r7598, %r7599, %r7600, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7598;
	ld.local.u32 	%r7603, [%rd1];
	ld.local.u32 	%r7604, [%rd8+12];
	// inline asm
	prmt.b32 %r7602, %r7603, %r7604, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7602;
	ld.local.u32 	%r7607, [%rd8+12];
	ld.local.u32 	%r7608, [%rd8+8];
	// inline asm
	prmt.b32 %r7606, %r7607, %r7608, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7606;
	ld.local.u32 	%r7611, [%rd8+8];
	ld.local.u32 	%r7612, [%rd8+4];
	// inline asm
	prmt.b32 %r7610, %r7611, %r7612, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7610;
	ld.local.u32 	%r7615, [%rd8+4];
	ld.local.u32 	%r7616, [%rd8];
	// inline asm
	prmt.b32 %r7614, %r7615, %r7616, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7614;
	ld.local.u32 	%r7619, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7618, %r7619, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7618;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2920, 0;
	st.local.u32 	[%rd8+4], %rd2920;
	st.local.u32 	[%rd8], %rd2920;
	bra.uni 	BB3_170;

BB3_47:
	setp.eq.s32	%p18, %r1, 23;
	@%p18 bra 	BB3_48;
	bra.uni 	BB3_87;

BB3_48:
	ld.local.u32 	%r1672, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9693, %r9672, %r1672, %r2;
	// inline asm
	ld.local.u32 	%r1676, [%rd7+8];
	// inline asm
	prmt.b32 %r9694, %r1672, %r1676, %r2;
	// inline asm
	ld.local.u32 	%r1680, [%rd7+4];
	// inline asm
	prmt.b32 %r9695, %r1676, %r1680, %r2;
	// inline asm
	ld.local.u32 	%r1684, [%rd7];
	// inline asm
	prmt.b32 %r9696, %r1680, %r1684, %r2;
	// inline asm
	ld.local.u32 	%r1688, [%rd6+12];
	// inline asm
	prmt.b32 %r9689, %r1684, %r1688, %r2;
	// inline asm
	ld.local.u32 	%r1692, [%rd6+8];
	// inline asm
	prmt.b32 %r9690, %r1688, %r1692, %r2;
	// inline asm
	ld.local.u32 	%r1696, [%rd6+4];
	// inline asm
	prmt.b32 %r9691, %r1692, %r1696, %r2;
	// inline asm
	ld.local.u32 	%r1700, [%rd6];
	// inline asm
	prmt.b32 %r9692, %r1696, %r1700, %r2;
	// inline asm
	ld.local.u32 	%r1704, [%rd5+12];
	// inline asm
	prmt.b32 %r9685, %r1700, %r1704, %r2;
	// inline asm
	ld.local.u32 	%r1708, [%rd5+8];
	// inline asm
	prmt.b32 %r9686, %r1704, %r1708, %r2;
	// inline asm
	ld.local.u32 	%r1712, [%rd5+4];
	// inline asm
	prmt.b32 %r9687, %r1708, %r1712, %r2;
	// inline asm
	ld.local.u32 	%r1716, [%rd5];
	// inline asm
	prmt.b32 %r9688, %r1712, %r1716, %r2;
	// inline asm
	ld.local.u32 	%r1720, [%rd4+12];
	// inline asm
	prmt.b32 %r9681, %r1716, %r1720, %r2;
	// inline asm
	ld.local.u32 	%r1724, [%rd4+8];
	// inline asm
	prmt.b32 %r9682, %r1720, %r1724, %r2;
	// inline asm
	ld.local.u32 	%r1728, [%rd4+4];
	// inline asm
	prmt.b32 %r9683, %r1724, %r1728, %r2;
	// inline asm
	ld.local.u32 	%r1732, [%rd4];
	// inline asm
	prmt.b32 %r9684, %r1728, %r1732, %r2;
	// inline asm
	ld.local.u32 	%r1736, [%rd3+12];
	// inline asm
	prmt.b32 %r9677, %r1732, %r1736, %r2;
	// inline asm
	ld.local.u32 	%r1740, [%rd3+8];
	// inline asm
	prmt.b32 %r9678, %r1736, %r1740, %r2;
	// inline asm
	ld.local.u32 	%r1744, [%rd3+4];
	// inline asm
	prmt.b32 %r9679, %r1740, %r1744, %r2;
	// inline asm
	ld.local.u32 	%r1748, [%rd3];
	// inline asm
	prmt.b32 %r9680, %r1744, %r1748, %r2;
	// inline asm
	ld.local.u32 	%r1752, [%rd2+12];
	// inline asm
	prmt.b32 %r9673, %r1748, %r1752, %r2;
	// inline asm
	ld.local.u32 	%r1756, [%rd2+8];
	// inline asm
	prmt.b32 %r9674, %r1752, %r1756, %r2;
	// inline asm
	ld.local.u32 	%r1760, [%rd2+4];
	// inline asm
	prmt.b32 %r9675, %r1756, %r1760, %r2;
	// inline asm
	ld.local.u32 	%r1764, [%rd2];
	// inline asm
	prmt.b32 %r9676, %r1760, %r1764, %r2;
	// inline asm
	ld.local.u32 	%r1768, [%rd1+12];
	// inline asm
	prmt.b32 %r1766, %r1764, %r1768, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1766;
	ld.local.u32 	%r1771, [%rd1+12];
	ld.local.u32 	%r1772, [%rd1+8];
	// inline asm
	prmt.b32 %r1770, %r1771, %r1772, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1770;
	ld.local.u32 	%r1775, [%rd1+8];
	ld.local.u32 	%r1776, [%rd1+4];
	// inline asm
	prmt.b32 %r1774, %r1775, %r1776, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1774;
	ld.local.u32 	%r1779, [%rd1+4];
	ld.local.u32 	%r1780, [%rd1];
	// inline asm
	prmt.b32 %r1778, %r1779, %r1780, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1778;
	ld.local.u32 	%r1783, [%rd1];
	ld.local.u32 	%r1784, [%rd8+12];
	// inline asm
	prmt.b32 %r1782, %r1783, %r1784, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r1782;
	ld.local.u32 	%r1787, [%rd8+12];
	ld.local.u32 	%r1788, [%rd8+8];
	// inline asm
	prmt.b32 %r1786, %r1787, %r1788, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r1786;
	ld.local.u32 	%r1791, [%rd8+8];
	ld.local.u32 	%r1792, [%rd8+4];
	// inline asm
	prmt.b32 %r1790, %r1791, %r1792, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r1790;
	ld.local.u32 	%r1795, [%rd8+4];
	ld.local.u32 	%r1796, [%rd8];
	// inline asm
	prmt.b32 %r1794, %r1795, %r1796, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r1794;
	ld.local.u32 	%r1799, [%rd8];
	// inline asm
	prmt.b32 %r1798, %r1799, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r1798;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd27, 0;
	st.local.u32 	[%rd8+4], %rd27;
	st.local.u32 	[%rd8], %rd27;
	bra.uni 	BB3_84;

BB3_120:
	setp.eq.s32	%p77, %r1, 15;
	@%p77 bra 	BB3_121;
	bra.uni 	BB3_169;

BB3_121:
	ld.local.u32 	%r7995, [%rd4];
	ld.local.u32 	%r7996, [%rd3+12];
	// inline asm
	prmt.b32 %r7994, %r7995, %r7996, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7994;
	ld.local.u32 	%r7999, [%rd3+12];
	ld.local.u32 	%r8000, [%rd3+8];
	// inline asm
	prmt.b32 %r7998, %r7999, %r8000, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7998;
	ld.local.u32 	%r8003, [%rd3+8];
	ld.local.u32 	%r8004, [%rd3+4];
	// inline asm
	prmt.b32 %r8002, %r8003, %r8004, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8002;
	ld.local.u32 	%r8007, [%rd3+4];
	ld.local.u32 	%r8008, [%rd3];
	// inline asm
	prmt.b32 %r8006, %r8007, %r8008, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8006;
	ld.local.u32 	%r8011, [%rd3];
	ld.local.u32 	%r8012, [%rd2+12];
	// inline asm
	prmt.b32 %r8010, %r8011, %r8012, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8010;
	ld.local.u32 	%r8015, [%rd2+12];
	ld.local.u32 	%r8016, [%rd2+8];
	// inline asm
	prmt.b32 %r8014, %r8015, %r8016, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8014;
	ld.local.u32 	%r8019, [%rd2+8];
	ld.local.u32 	%r8020, [%rd2+4];
	// inline asm
	prmt.b32 %r8018, %r8019, %r8020, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8018;
	ld.local.u32 	%r8023, [%rd2+4];
	ld.local.u32 	%r8024, [%rd2];
	// inline asm
	prmt.b32 %r8022, %r8023, %r8024, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8022;
	ld.local.u32 	%r8027, [%rd2];
	ld.local.u32 	%r8028, [%rd1+12];
	// inline asm
	prmt.b32 %r8026, %r8027, %r8028, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8026;
	ld.local.u32 	%r8031, [%rd1+12];
	ld.local.u32 	%r8032, [%rd1+8];
	// inline asm
	prmt.b32 %r8030, %r8031, %r8032, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8030;
	ld.local.u32 	%r8035, [%rd1+8];
	ld.local.u32 	%r8036, [%rd1+4];
	// inline asm
	prmt.b32 %r8034, %r8035, %r8036, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8034;
	ld.local.u32 	%r8039, [%rd1+4];
	ld.local.u32 	%r8040, [%rd1];
	// inline asm
	prmt.b32 %r8038, %r8039, %r8040, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8038;
	ld.local.u32 	%r8043, [%rd1];
	ld.local.u32 	%r8044, [%rd8+12];
	// inline asm
	prmt.b32 %r8042, %r8043, %r8044, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8042;
	ld.local.u32 	%r8047, [%rd8+12];
	ld.local.u32 	%r8048, [%rd8+8];
	// inline asm
	prmt.b32 %r8046, %r8047, %r8048, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8046;
	ld.local.u32 	%r8051, [%rd8+8];
	ld.local.u32 	%r8052, [%rd8+4];
	// inline asm
	prmt.b32 %r8050, %r8051, %r8052, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8050;
	ld.local.u32 	%r8055, [%rd8+4];
	ld.local.u32 	%r8056, [%rd8];
	// inline asm
	prmt.b32 %r8054, %r8055, %r8056, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8054;
	ld.local.u32 	%r8059, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8058, %r8059, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8058;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2928, 0;
	st.local.u32 	[%rd8+4], %rd2928;
	st.local.u32 	[%rd8], %rd2928;
	bra.uni 	BB3_170;

BB3_31:
	setp.eq.s32	%p30, %r1, 15;
	@%p30 bra 	BB3_32;
	bra.uni 	BB3_87;

BB3_32:
	ld.local.u32 	%r2828, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9685, %r9672, %r2828, %r2;
	// inline asm
	ld.local.u32 	%r2832, [%rd7+8];
	// inline asm
	prmt.b32 %r9686, %r2828, %r2832, %r2;
	// inline asm
	ld.local.u32 	%r2836, [%rd7+4];
	// inline asm
	prmt.b32 %r9687, %r2832, %r2836, %r2;
	// inline asm
	ld.local.u32 	%r2840, [%rd7];
	// inline asm
	prmt.b32 %r9688, %r2836, %r2840, %r2;
	// inline asm
	ld.local.u32 	%r2844, [%rd6+12];
	// inline asm
	prmt.b32 %r9681, %r2840, %r2844, %r2;
	// inline asm
	ld.local.u32 	%r2848, [%rd6+8];
	// inline asm
	prmt.b32 %r9682, %r2844, %r2848, %r2;
	// inline asm
	ld.local.u32 	%r2852, [%rd6+4];
	// inline asm
	prmt.b32 %r9683, %r2848, %r2852, %r2;
	// inline asm
	ld.local.u32 	%r2856, [%rd6];
	// inline asm
	prmt.b32 %r9684, %r2852, %r2856, %r2;
	// inline asm
	ld.local.u32 	%r2860, [%rd5+12];
	// inline asm
	prmt.b32 %r9677, %r2856, %r2860, %r2;
	// inline asm
	ld.local.u32 	%r2864, [%rd5+8];
	// inline asm
	prmt.b32 %r9678, %r2860, %r2864, %r2;
	// inline asm
	ld.local.u32 	%r2868, [%rd5+4];
	// inline asm
	prmt.b32 %r9679, %r2864, %r2868, %r2;
	// inline asm
	ld.local.u32 	%r2872, [%rd5];
	// inline asm
	prmt.b32 %r9680, %r2868, %r2872, %r2;
	// inline asm
	ld.local.u32 	%r2876, [%rd4+12];
	// inline asm
	prmt.b32 %r9673, %r2872, %r2876, %r2;
	// inline asm
	ld.local.u32 	%r2880, [%rd4+8];
	// inline asm
	prmt.b32 %r9674, %r2876, %r2880, %r2;
	// inline asm
	ld.local.u32 	%r2884, [%rd4+4];
	// inline asm
	prmt.b32 %r9675, %r2880, %r2884, %r2;
	// inline asm
	ld.local.u32 	%r2888, [%rd4];
	// inline asm
	prmt.b32 %r9676, %r2884, %r2888, %r2;
	// inline asm
	ld.local.u32 	%r2892, [%rd3+12];
	// inline asm
	prmt.b32 %r2890, %r2888, %r2892, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2890;
	ld.local.u32 	%r2895, [%rd3+12];
	ld.local.u32 	%r2896, [%rd3+8];
	// inline asm
	prmt.b32 %r2894, %r2895, %r2896, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2894;
	ld.local.u32 	%r2899, [%rd3+8];
	ld.local.u32 	%r2900, [%rd3+4];
	// inline asm
	prmt.b32 %r2898, %r2899, %r2900, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2898;
	ld.local.u32 	%r2903, [%rd3+4];
	ld.local.u32 	%r2904, [%rd3];
	// inline asm
	prmt.b32 %r2902, %r2903, %r2904, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2902;
	ld.local.u32 	%r2907, [%rd3];
	ld.local.u32 	%r2908, [%rd2+12];
	// inline asm
	prmt.b32 %r2906, %r2907, %r2908, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2906;
	ld.local.u32 	%r2911, [%rd2+12];
	ld.local.u32 	%r2912, [%rd2+8];
	// inline asm
	prmt.b32 %r2910, %r2911, %r2912, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2910;
	ld.local.u32 	%r2915, [%rd2+8];
	ld.local.u32 	%r2916, [%rd2+4];
	// inline asm
	prmt.b32 %r2914, %r2915, %r2916, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2914;
	ld.local.u32 	%r2919, [%rd2+4];
	ld.local.u32 	%r2920, [%rd2];
	// inline asm
	prmt.b32 %r2918, %r2919, %r2920, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2918;
	ld.local.u32 	%r2923, [%rd2];
	ld.local.u32 	%r2924, [%rd1+12];
	// inline asm
	prmt.b32 %r2922, %r2923, %r2924, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2922;
	ld.local.u32 	%r2927, [%rd1+12];
	ld.local.u32 	%r2928, [%rd1+8];
	// inline asm
	prmt.b32 %r2926, %r2927, %r2928, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2926;
	ld.local.u32 	%r2931, [%rd1+8];
	ld.local.u32 	%r2932, [%rd1+4];
	// inline asm
	prmt.b32 %r2930, %r2931, %r2932, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2930;
	ld.local.u32 	%r2935, [%rd1+4];
	ld.local.u32 	%r2936, [%rd1];
	// inline asm
	prmt.b32 %r2934, %r2935, %r2936, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r2934;
	ld.local.u32 	%r2939, [%rd1];
	ld.local.u32 	%r2940, [%rd8+12];
	// inline asm
	prmt.b32 %r2938, %r2939, %r2940, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r2938;
	ld.local.u32 	%r2943, [%rd8+12];
	ld.local.u32 	%r2944, [%rd8+8];
	// inline asm
	prmt.b32 %r2942, %r2943, %r2944, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r2942;
	ld.local.u32 	%r2947, [%rd8+8];
	ld.local.u32 	%r2948, [%rd8+4];
	// inline asm
	prmt.b32 %r2946, %r2947, %r2948, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r2946;
	ld.local.u32 	%r2951, [%rd8+4];
	ld.local.u32 	%r2952, [%rd8];
	// inline asm
	prmt.b32 %r2950, %r2951, %r2952, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r2950;
	ld.local.u32 	%r2955, [%rd8];
	// inline asm
	prmt.b32 %r2954, %r2955, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r2954;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd35, 0;
	st.local.u32 	[%rd8+4], %rd35;
	st.local.u32 	[%rd8], %rd35;
	bra.uni 	BB3_82;

BB3_151:
	setp.ne.s32	%p54, %r1, 31;
	@%p54 bra 	BB3_169;

	ld.local.u32 	%r7435, [%rd8];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7434, %r7435, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7434;
	st.local.u32 	[%rd7+8], %r9705;
	st.local.u32 	[%rd7+4], %r9705;
	st.local.u32 	[%rd7], %r9705;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	st.local.u32 	[%rd1+4], %r9705;
	st.local.u32 	[%rd1], %r9705;
	st.local.u32 	[%rd8+12], %r9705;
	st.local.u32 	[%rd8+8], %r9705;
	mov.u64 	%rd2912, 0;
	st.local.u32 	[%rd8+4], %rd2912;
	st.local.u32 	[%rd8], %rd2912;
	bra.uni 	BB3_170;

BB3_169:
	ld.local.u32 	%r9705, [%rd8];

BB3_170:
	ld.u32 	%r9577, [%rd10+64];
	or.b32  	%r9578, %r9577, %r9705;
	ld.u32 	%r9579, [%rd10+68];
	ld.u32 	%r9580, [%rd10+72];
	ld.u32 	%r9581, [%rd10+76];
	ld.u32 	%r9582, [%rd10+80];
	ld.u32 	%r9583, [%rd10+84];
	ld.u32 	%r9584, [%rd10+88];
	ld.u32 	%r9585, [%rd10+92];
	ld.u32 	%r9586, [%rd10+96];
	ld.u32 	%r9587, [%rd10+100];
	ld.u32 	%r9588, [%rd10+104];
	ld.u32 	%r9589, [%rd10+108];
	ld.u32 	%r9590, [%rd10+112];
	ld.u32 	%r9591, [%rd10+116];
	ld.u32 	%r9592, [%rd10+120];
	ld.u32 	%r9593, [%rd10+124];
	ld.u32 	%r9594, [%rd10+128];
	ld.u32 	%r9595, [%rd10+132];
	ld.u32 	%r9596, [%rd10+136];
	ld.u32 	%r9597, [%rd10+140];
	ld.u32 	%r9598, [%rd10+144];
	ld.u32 	%r9599, [%rd10+148];
	ld.u32 	%r9600, [%rd10+152];
	ld.u32 	%r9601, [%rd10+156];
	ld.u32 	%r9602, [%rd10+160];
	ld.u32 	%r9603, [%rd10+164];
	ld.u32 	%r9604, [%rd10+168];
	ld.u32 	%r9605, [%rd10+172];
	ld.u32 	%r9606, [%rd10+176];
	ld.u32 	%r9607, [%rd10+180];
	ld.u32 	%r9608, [%rd10+184];
	ld.u32 	%r9609, [%rd10+188];
	st.u32 	[%rd10+64], %r9578;
	ld.local.u32 	%r9610, [%rd8+4];
	or.b32  	%r9611, %r9579, %r9610;
	st.u32 	[%rd10+68], %r9611;
	ld.local.u32 	%r9612, [%rd8+8];
	or.b32  	%r9613, %r9580, %r9612;
	st.u32 	[%rd10+72], %r9613;
	ld.local.u32 	%r9614, [%rd8+12];
	or.b32  	%r9615, %r9581, %r9614;
	st.u32 	[%rd10+76], %r9615;
	ld.local.u32 	%r9616, [%rd1];
	or.b32  	%r9617, %r9582, %r9616;
	st.u32 	[%rd10+80], %r9617;
	ld.local.u32 	%r9618, [%rd1+4];
	or.b32  	%r9619, %r9583, %r9618;
	st.u32 	[%rd10+84], %r9619;
	ld.local.u32 	%r9620, [%rd1+8];
	or.b32  	%r9621, %r9584, %r9620;
	st.u32 	[%rd10+88], %r9621;
	ld.local.u32 	%r9622, [%rd1+12];
	or.b32  	%r9623, %r9585, %r9622;
	st.u32 	[%rd10+92], %r9623;
	ld.local.u32 	%r9624, [%rd2];
	or.b32  	%r9625, %r9586, %r9624;
	st.u32 	[%rd10+96], %r9625;
	ld.local.u32 	%r9626, [%rd2+4];
	or.b32  	%r9627, %r9587, %r9626;
	st.u32 	[%rd10+100], %r9627;
	ld.local.u32 	%r9628, [%rd2+8];
	or.b32  	%r9629, %r9588, %r9628;
	st.u32 	[%rd10+104], %r9629;
	ld.local.u32 	%r9630, [%rd2+12];
	or.b32  	%r9631, %r9589, %r9630;
	st.u32 	[%rd10+108], %r9631;
	ld.local.u32 	%r9632, [%rd3];
	or.b32  	%r9633, %r9590, %r9632;
	st.u32 	[%rd10+112], %r9633;
	ld.local.u32 	%r9634, [%rd3+4];
	or.b32  	%r9635, %r9591, %r9634;
	st.u32 	[%rd10+116], %r9635;
	ld.local.u32 	%r9636, [%rd3+8];
	or.b32  	%r9637, %r9592, %r9636;
	st.u32 	[%rd10+120], %r9637;
	ld.local.u32 	%r9638, [%rd3+12];
	or.b32  	%r9639, %r9593, %r9638;
	st.u32 	[%rd10+124], %r9639;
	ld.local.u32 	%r9640, [%rd4];
	or.b32  	%r9641, %r9594, %r9640;
	st.u32 	[%rd10+128], %r9641;
	ld.local.u32 	%r9642, [%rd4+4];
	or.b32  	%r9643, %r9595, %r9642;
	st.u32 	[%rd10+132], %r9643;
	ld.local.u32 	%r9644, [%rd4+8];
	or.b32  	%r9645, %r9596, %r9644;
	st.u32 	[%rd10+136], %r9645;
	ld.local.u32 	%r9646, [%rd4+12];
	or.b32  	%r9647, %r9597, %r9646;
	st.u32 	[%rd10+140], %r9647;
	ld.local.u32 	%r9648, [%rd5];
	or.b32  	%r9649, %r9598, %r9648;
	st.u32 	[%rd10+144], %r9649;
	ld.local.u32 	%r9650, [%rd5+4];
	or.b32  	%r9651, %r9599, %r9650;
	st.u32 	[%rd10+148], %r9651;
	ld.local.u32 	%r9652, [%rd5+8];
	or.b32  	%r9653, %r9600, %r9652;
	st.u32 	[%rd10+152], %r9653;
	ld.local.u32 	%r9654, [%rd5+12];
	or.b32  	%r9655, %r9601, %r9654;
	st.u32 	[%rd10+156], %r9655;
	ld.local.u32 	%r9656, [%rd6];
	or.b32  	%r9657, %r9602, %r9656;
	st.u32 	[%rd10+160], %r9657;
	ld.local.u32 	%r9658, [%rd6+4];
	or.b32  	%r9659, %r9603, %r9658;
	st.u32 	[%rd10+164], %r9659;
	ld.local.u32 	%r9660, [%rd6+8];
	or.b32  	%r9661, %r9604, %r9660;
	st.u32 	[%rd10+168], %r9661;
	ld.local.u32 	%r9662, [%rd6+12];
	or.b32  	%r9663, %r9605, %r9662;
	st.u32 	[%rd10+172], %r9663;
	ld.local.u32 	%r9664, [%rd7];
	or.b32  	%r9665, %r9606, %r9664;
	st.u32 	[%rd10+176], %r9665;
	ld.local.u32 	%r9666, [%rd7+4];
	or.b32  	%r9667, %r9607, %r9666;
	st.u32 	[%rd10+180], %r9667;
	ld.local.u32 	%r9668, [%rd7+8];
	or.b32  	%r9669, %r9608, %r9668;
	st.u32 	[%rd10+184], %r9669;
	ld.local.u32 	%r9670, [%rd7+12];
	or.b32  	%r9671, %r9609, %r9670;
	st.u32 	[%rd10+188], %r9671;
	bra.uni 	BB3_171;

BB3_62:
	setp.ne.s32	%p7, %r1, 31;
	@%p7 bra 	BB3_87;

	ld.local.u32 	%r580, [%rd7+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9701, %r9672, %r580, %r2;
	// inline asm
	ld.local.u32 	%r584, [%rd7+8];
	// inline asm
	prmt.b32 %r9702, %r580, %r584, %r2;
	// inline asm
	ld.local.u32 	%r588, [%rd7+4];
	// inline asm
	prmt.b32 %r9703, %r584, %r588, %r2;
	// inline asm
	ld.local.u32 	%r592, [%rd7];
	// inline asm
	prmt.b32 %r9704, %r588, %r592, %r2;
	// inline asm
	ld.local.u32 	%r596, [%rd6+12];
	// inline asm
	prmt.b32 %r9697, %r592, %r596, %r2;
	// inline asm
	ld.local.u32 	%r600, [%rd6+8];
	// inline asm
	prmt.b32 %r9698, %r596, %r600, %r2;
	// inline asm
	ld.local.u32 	%r604, [%rd6+4];
	// inline asm
	prmt.b32 %r9699, %r600, %r604, %r2;
	// inline asm
	ld.local.u32 	%r608, [%rd6];
	// inline asm
	prmt.b32 %r9700, %r604, %r608, %r2;
	// inline asm
	ld.local.u32 	%r612, [%rd5+12];
	// inline asm
	prmt.b32 %r9693, %r608, %r612, %r2;
	// inline asm
	ld.local.u32 	%r616, [%rd5+8];
	// inline asm
	prmt.b32 %r9694, %r612, %r616, %r2;
	// inline asm
	ld.local.u32 	%r620, [%rd5+4];
	// inline asm
	prmt.b32 %r9695, %r616, %r620, %r2;
	// inline asm
	ld.local.u32 	%r624, [%rd5];
	// inline asm
	prmt.b32 %r9696, %r620, %r624, %r2;
	// inline asm
	ld.local.u32 	%r628, [%rd4+12];
	// inline asm
	prmt.b32 %r9689, %r624, %r628, %r2;
	// inline asm
	ld.local.u32 	%r632, [%rd4+8];
	// inline asm
	prmt.b32 %r9690, %r628, %r632, %r2;
	// inline asm
	ld.local.u32 	%r636, [%rd4+4];
	// inline asm
	prmt.b32 %r9691, %r632, %r636, %r2;
	// inline asm
	ld.local.u32 	%r640, [%rd4];
	// inline asm
	prmt.b32 %r9692, %r636, %r640, %r2;
	// inline asm
	ld.local.u32 	%r644, [%rd3+12];
	// inline asm
	prmt.b32 %r9685, %r640, %r644, %r2;
	// inline asm
	ld.local.u32 	%r648, [%rd3+8];
	// inline asm
	prmt.b32 %r9686, %r644, %r648, %r2;
	// inline asm
	ld.local.u32 	%r652, [%rd3+4];
	// inline asm
	prmt.b32 %r9687, %r648, %r652, %r2;
	// inline asm
	ld.local.u32 	%r656, [%rd3];
	// inline asm
	prmt.b32 %r9688, %r652, %r656, %r2;
	// inline asm
	ld.local.u32 	%r660, [%rd2+12];
	// inline asm
	prmt.b32 %r9681, %r656, %r660, %r2;
	// inline asm
	ld.local.u32 	%r664, [%rd2+8];
	// inline asm
	prmt.b32 %r9682, %r660, %r664, %r2;
	// inline asm
	ld.local.u32 	%r668, [%rd2+4];
	// inline asm
	prmt.b32 %r9683, %r664, %r668, %r2;
	// inline asm
	ld.local.u32 	%r672, [%rd2];
	// inline asm
	prmt.b32 %r9684, %r668, %r672, %r2;
	// inline asm
	ld.local.u32 	%r676, [%rd1+12];
	// inline asm
	prmt.b32 %r9677, %r672, %r676, %r2;
	// inline asm
	ld.local.u32 	%r680, [%rd1+8];
	// inline asm
	prmt.b32 %r9678, %r676, %r680, %r2;
	// inline asm
	ld.local.u32 	%r684, [%rd1+4];
	// inline asm
	prmt.b32 %r9679, %r680, %r684, %r2;
	// inline asm
	ld.local.u32 	%r688, [%rd1];
	// inline asm
	prmt.b32 %r9680, %r684, %r688, %r2;
	// inline asm
	ld.local.u32 	%r692, [%rd8+12];
	// inline asm
	prmt.b32 %r9673, %r688, %r692, %r2;
	// inline asm
	ld.local.u32 	%r696, [%rd8+8];
	// inline asm
	prmt.b32 %r9674, %r692, %r696, %r2;
	// inline asm
	ld.local.u32 	%r700, [%rd8+4];
	// inline asm
	prmt.b32 %r9675, %r696, %r700, %r2;
	// inline asm
	ld.local.u32 	%r704, [%rd8];
	// inline asm
	prmt.b32 %r9676, %r700, %r704, %r2;
	// inline asm
	// inline asm
	prmt.b32 %r706, %r704, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r706;
	st.local.u32 	[%rd7+8], %r9672;
	st.local.u32 	[%rd7+4], %r9672;
	st.local.u32 	[%rd7], %r9672;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	st.local.u32 	[%rd1+4], %r9672;
	st.local.u32 	[%rd1], %r9672;
	st.local.u32 	[%rd8+12], %r9672;
	st.local.u32 	[%rd8+8], %r9672;
	mov.u64 	%rd19, 0;
	st.local.u32 	[%rd8+4], %rd19;
	st.local.u32 	[%rd8], %rd19;
	bra.uni 	BB3_89;

BB3_87:
	ld.local.u32 	%r9672, [%rd8];
	mov.u32 	%r9673, 0;
	mov.u32 	%r9674, %r9673;
	mov.u32 	%r9675, %r9673;
	mov.u32 	%r9676, %r9673;

BB3_88:
	mov.u32 	%r9677, %r9673;
	mov.u32 	%r9678, %r9673;
	mov.u32 	%r9679, %r9673;
	mov.u32 	%r9680, %r9673;
	mov.u32 	%r9681, %r9673;
	mov.u32 	%r9682, %r9673;
	mov.u32 	%r9683, %r9673;
	mov.u32 	%r9684, %r9673;
	mov.u32 	%r9685, %r9673;
	mov.u32 	%r9686, %r9673;
	mov.u32 	%r9687, %r9673;
	mov.u32 	%r9688, %r9673;
	mov.u32 	%r9689, %r9673;
	mov.u32 	%r9690, %r9673;
	mov.u32 	%r9691, %r9673;
	mov.u32 	%r9692, %r9673;
	mov.u32 	%r9693, %r9673;
	mov.u32 	%r9694, %r9673;
	mov.u32 	%r9695, %r9673;
	mov.u32 	%r9696, %r9673;
	mov.u32 	%r9697, %r9673;
	mov.u32 	%r9698, %r9673;
	mov.u32 	%r9699, %r9673;
	mov.u32 	%r9700, %r9673;
	mov.u32 	%r9701, %r9673;
	mov.u32 	%r9702, %r9673;
	mov.u32 	%r9703, %r9673;
	mov.u32 	%r9704, %r9673;

BB3_89:
	ld.v2.u32 	{%r5361, %r5362}, [%rd9+-128];
	ld.v2.u32 	{%r5364, %r5365}, [%rd9+-120];
	ld.v2.u32 	{%r5366, %r5367}, [%rd9+-112];
	ld.v2.u32 	{%r5368, %r5369}, [%rd9+-104];
	ld.v2.u32 	{%r5370, %r5371}, [%rd9+-96];
	ld.v2.u32 	{%r5372, %r5373}, [%rd9+-88];
	ld.v2.u32 	{%r5374, %r5375}, [%rd9+-80];
	ld.v2.u32 	{%r5376, %r5377}, [%rd9+-72];
	ld.v2.u32 	{%r5378, %r5379}, [%rd9+-64];
	ld.v2.u32 	{%r5380, %r5381}, [%rd9+-56];
	ld.v2.u32 	{%r5382, %r5383}, [%rd9+-48];
	ld.v2.u32 	{%r5384, %r5385}, [%rd9+-40];
	ld.v2.u32 	{%r5386, %r5387}, [%rd9+-32];
	ld.v2.u32 	{%r5388, %r5389}, [%rd9+-24];
	ld.v2.u32 	{%r5390, %r5391}, [%rd9+-16];
	ld.v2.u32 	{%r5392, %r5393}, [%rd9+-8];
	or.b32  	%r5394, %r5361, %r9672;
	st.u32 	[%rd9+-128], %r5394;
	ld.local.u32 	%r5396, [%rd8+4];
	or.b32  	%r5397, %r5362, %r5396;
	st.u32 	[%rd9+-124], %r5397;
	ld.local.u32 	%r5398, [%rd8+8];
	or.b32  	%r5400, %r5364, %r5398;
	st.u32 	[%rd9+-120], %r5400;
	ld.local.u32 	%r5402, [%rd8+12];
	or.b32  	%r5403, %r5365, %r5402;
	st.u32 	[%rd9+-116], %r5403;
	ld.local.u32 	%r5404, [%rd1];
	or.b32  	%r5406, %r5366, %r5404;
	st.u32 	[%rd9+-112], %r5406;
	ld.local.u32 	%r5408, [%rd1+4];
	or.b32  	%r5409, %r5367, %r5408;
	st.u32 	[%rd9+-108], %r5409;
	ld.local.u32 	%r5410, [%rd1+8];
	or.b32  	%r5412, %r5368, %r5410;
	st.u32 	[%rd9+-104], %r5412;
	ld.local.u32 	%r5414, [%rd1+12];
	or.b32  	%r5415, %r5369, %r5414;
	st.u32 	[%rd9+-100], %r5415;
	ld.local.u32 	%r5416, [%rd2];
	or.b32  	%r5418, %r5370, %r5416;
	st.u32 	[%rd9+-96], %r5418;
	ld.local.u32 	%r5420, [%rd2+4];
	or.b32  	%r5421, %r5371, %r5420;
	st.u32 	[%rd9+-92], %r5421;
	ld.local.u32 	%r5422, [%rd2+8];
	or.b32  	%r5424, %r5372, %r5422;
	st.u32 	[%rd9+-88], %r5424;
	ld.local.u32 	%r5426, [%rd2+12];
	or.b32  	%r5427, %r5373, %r5426;
	st.u32 	[%rd9+-84], %r5427;
	ld.local.u32 	%r5428, [%rd3];
	or.b32  	%r5430, %r5374, %r5428;
	st.u32 	[%rd9+-80], %r5430;
	ld.local.u32 	%r5432, [%rd3+4];
	or.b32  	%r5433, %r5375, %r5432;
	st.u32 	[%rd9+-76], %r5433;
	ld.local.u32 	%r5434, [%rd3+8];
	or.b32  	%r5436, %r5376, %r5434;
	st.u32 	[%rd9+-72], %r5436;
	ld.local.u32 	%r5438, [%rd3+12];
	or.b32  	%r5439, %r5377, %r5438;
	st.u32 	[%rd9+-68], %r5439;
	ld.local.u32 	%r5440, [%rd4];
	or.b32  	%r5442, %r5378, %r5440;
	st.u32 	[%rd9+-64], %r5442;
	ld.local.u32 	%r5444, [%rd4+4];
	or.b32  	%r5445, %r5379, %r5444;
	st.u32 	[%rd9+-60], %r5445;
	ld.local.u32 	%r5446, [%rd4+8];
	or.b32  	%r5448, %r5380, %r5446;
	st.u32 	[%rd9+-56], %r5448;
	ld.local.u32 	%r5450, [%rd4+12];
	or.b32  	%r5451, %r5381, %r5450;
	st.u32 	[%rd9+-52], %r5451;
	ld.local.u32 	%r5452, [%rd5];
	or.b32  	%r5454, %r5382, %r5452;
	st.u32 	[%rd9+-48], %r5454;
	ld.local.u32 	%r5456, [%rd5+4];
	or.b32  	%r5457, %r5383, %r5456;
	st.u32 	[%rd9+-44], %r5457;
	ld.local.u32 	%r5458, [%rd5+8];
	or.b32  	%r5460, %r5384, %r5458;
	st.u32 	[%rd9+-40], %r5460;
	ld.local.u32 	%r5462, [%rd5+12];
	or.b32  	%r5463, %r5385, %r5462;
	st.u32 	[%rd9+-36], %r5463;
	ld.local.u32 	%r5464, [%rd6];
	or.b32  	%r5466, %r5386, %r5464;
	st.u32 	[%rd9+-32], %r5466;
	ld.local.u32 	%r5468, [%rd6+4];
	or.b32  	%r5469, %r5387, %r5468;
	st.u32 	[%rd9+-28], %r5469;
	ld.local.u32 	%r5470, [%rd6+8];
	or.b32  	%r5472, %r5388, %r5470;
	st.u32 	[%rd9+-24], %r5472;
	ld.local.u32 	%r5474, [%rd6+12];
	or.b32  	%r5475, %r5389, %r5474;
	st.u32 	[%rd9+-20], %r5475;
	ld.local.u32 	%r5476, [%rd7];
	or.b32  	%r5478, %r5390, %r5476;
	st.u32 	[%rd9+-16], %r5478;
	ld.local.u32 	%r5480, [%rd7+4];
	or.b32  	%r5481, %r5391, %r5480;
	st.u32 	[%rd9+-12], %r5481;
	ld.local.u32 	%r5482, [%rd7+8];
	or.b32  	%r5484, %r5392, %r5482;
	st.u32 	[%rd9+-8], %r5484;
	ld.local.u32 	%r5486, [%rd7+12];
	mov.b64	%rd48, {%r5397, %r5394};
	mov.b64	%rd49, {%r5403, %r5400};
	mov.b64	%rd50, {%r5409, %r5406};
	mov.b64	%rd51, {%r5415, %r5412};
	mov.b64	%rd52, {%r5421, %r5418};
	mov.b64	%rd53, {%r5427, %r5424};
	mov.b64	%rd54, {%r5433, %r5430};
	mov.b64	%rd55, {%r5439, %r5436};
	mov.b64	%rd56, {%r5445, %r5442};
	mov.b64	%rd57, {%r5451, %r5448};
	mov.b64	%rd58, {%r5457, %r5454};
	mov.b64	%rd59, {%r5463, %r5460};
	mov.b64	%rd60, {%r5469, %r5466};
	mov.b64	%rd61, {%r5475, %r5472};
	mov.b64	%rd62, {%r5481, %r5478};
	or.b32  	%r5487, %r5393, %r5486;
	mov.b64	%rd63, {%r5487, %r5484};
	ld.u64 	%rd64, [%rd9+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5488,%dummy}, %rd64;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5489}, %rd64;
	}
	shf.r.wrap.b32 	%r5490, %r5489, %r5488, 14;
	shf.r.wrap.b32 	%r5491, %r5488, %r5489, 14;
	mov.b64 	%rd65, {%r5491, %r5490};
	shf.r.wrap.b32 	%r5492, %r5489, %r5488, 18;
	shf.r.wrap.b32 	%r5493, %r5488, %r5489, 18;
	mov.b64 	%rd66, {%r5493, %r5492};
	xor.b64  	%rd67, %rd66, %rd65;
	shf.l.wrap.b32 	%r5494, %r5488, %r5489, 23;
	shf.l.wrap.b32 	%r5495, %r5489, %r5488, 23;
	mov.b64 	%rd68, {%r5495, %r5494};
	xor.b64  	%rd69, %rd67, %rd68;
	ld.u64 	%rd70, [%rd9+-144];
	ld.u64 	%rd71, [%rd9+-152];
	xor.b64  	%rd72, %rd70, %rd71;
	and.b64  	%rd73, %rd72, %rd64;
	xor.b64  	%rd74, %rd73, %rd70;
	ld.u64 	%rd75, [%rd9+-136];
	add.s64 	%rd76, %rd74, %rd75;
	add.s64 	%rd77, %rd76, %rd48;
	ld.const.u64 	%rd78, [k_sha512];
	add.s64 	%rd79, %rd77, %rd78;
	add.s64 	%rd80, %rd79, %rd69;
	ld.u64 	%rd81, [%rd9+-168];
	add.s64 	%rd82, %rd80, %rd81;
	ld.u64 	%rd83, [%rd9+-192];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5496,%dummy}, %rd83;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5497}, %rd83;
	}
	shf.r.wrap.b32 	%r5498, %r5497, %r5496, 28;
	shf.r.wrap.b32 	%r5499, %r5496, %r5497, 28;
	mov.b64 	%rd84, {%r5499, %r5498};
	shf.l.wrap.b32 	%r5500, %r5496, %r5497, 30;
	shf.l.wrap.b32 	%r5501, %r5497, %r5496, 30;
	mov.b64 	%rd85, {%r5501, %r5500};
	xor.b64  	%rd86, %rd85, %rd84;
	shf.l.wrap.b32 	%r5502, %r5496, %r5497, 25;
	shf.l.wrap.b32 	%r5503, %r5497, %r5496, 25;
	mov.b64 	%rd87, {%r5503, %r5502};
	xor.b64  	%rd88, %rd86, %rd87;
	ld.u64 	%rd89, [%rd9+-176];
	xor.b64  	%rd90, %rd89, %rd83;
	ld.u64 	%rd91, [%rd9+-184];
	xor.b64  	%rd92, %rd91, %rd83;
	and.b64  	%rd93, %rd90, %rd92;
	xor.b64  	%rd94, %rd93, %rd83;
	add.s64 	%rd95, %rd80, %rd94;
	add.s64 	%rd96, %rd95, %rd88;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5504,%dummy}, %rd82;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5505}, %rd82;
	}
	shf.r.wrap.b32 	%r5506, %r5505, %r5504, 14;
	shf.r.wrap.b32 	%r5507, %r5504, %r5505, 14;
	mov.b64 	%rd97, {%r5507, %r5506};
	shf.r.wrap.b32 	%r5508, %r5505, %r5504, 18;
	shf.r.wrap.b32 	%r5509, %r5504, %r5505, 18;
	mov.b64 	%rd98, {%r5509, %r5508};
	xor.b64  	%rd99, %rd98, %rd97;
	shf.l.wrap.b32 	%r5510, %r5504, %r5505, 23;
	shf.l.wrap.b32 	%r5511, %r5505, %r5504, 23;
	mov.b64 	%rd100, {%r5511, %r5510};
	xor.b64  	%rd101, %rd99, %rd100;
	xor.b64  	%rd102, %rd71, %rd64;
	and.b64  	%rd103, %rd82, %rd102;
	xor.b64  	%rd104, %rd103, %rd71;
	add.s64 	%rd105, %rd49, %rd70;
	ld.const.u64 	%rd106, [k_sha512+8];
	add.s64 	%rd107, %rd105, %rd106;
	add.s64 	%rd108, %rd107, %rd104;
	add.s64 	%rd109, %rd108, %rd101;
	add.s64 	%rd110, %rd109, %rd89;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5512,%dummy}, %rd96;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5513}, %rd96;
	}
	shf.r.wrap.b32 	%r5514, %r5513, %r5512, 28;
	shf.r.wrap.b32 	%r5515, %r5512, %r5513, 28;
	mov.b64 	%rd111, {%r5515, %r5514};
	shf.l.wrap.b32 	%r5516, %r5512, %r5513, 30;
	shf.l.wrap.b32 	%r5517, %r5513, %r5512, 30;
	mov.b64 	%rd112, {%r5517, %r5516};
	xor.b64  	%rd113, %rd112, %rd111;
	shf.l.wrap.b32 	%r5518, %r5512, %r5513, 25;
	shf.l.wrap.b32 	%r5519, %r5513, %r5512, 25;
	mov.b64 	%rd114, {%r5519, %r5518};
	xor.b64  	%rd115, %rd113, %rd114;
	xor.b64  	%rd116, %rd96, %rd91;
	xor.b64  	%rd117, %rd96, %rd83;
	and.b64  	%rd118, %rd117, %rd116;
	xor.b64  	%rd119, %rd118, %rd96;
	add.s64 	%rd120, %rd109, %rd119;
	add.s64 	%rd121, %rd120, %rd115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5520,%dummy}, %rd110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5521}, %rd110;
	}
	shf.r.wrap.b32 	%r5522, %r5521, %r5520, 14;
	shf.r.wrap.b32 	%r5523, %r5520, %r5521, 14;
	mov.b64 	%rd122, {%r5523, %r5522};
	shf.r.wrap.b32 	%r5524, %r5521, %r5520, 18;
	shf.r.wrap.b32 	%r5525, %r5520, %r5521, 18;
	mov.b64 	%rd123, {%r5525, %r5524};
	xor.b64  	%rd124, %rd123, %rd122;
	shf.l.wrap.b32 	%r5526, %r5520, %r5521, 23;
	shf.l.wrap.b32 	%r5527, %r5521, %r5520, 23;
	mov.b64 	%rd125, {%r5527, %r5526};
	xor.b64  	%rd126, %rd124, %rd125;
	xor.b64  	%rd127, %rd82, %rd64;
	and.b64  	%rd128, %rd110, %rd127;
	xor.b64  	%rd129, %rd128, %rd64;
	add.s64 	%rd130, %rd50, %rd71;
	ld.const.u64 	%rd131, [k_sha512+16];
	add.s64 	%rd132, %rd130, %rd131;
	add.s64 	%rd133, %rd132, %rd129;
	add.s64 	%rd134, %rd133, %rd126;
	add.s64 	%rd135, %rd134, %rd91;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5528,%dummy}, %rd121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5529}, %rd121;
	}
	shf.r.wrap.b32 	%r5530, %r5529, %r5528, 28;
	shf.r.wrap.b32 	%r5531, %r5528, %r5529, 28;
	mov.b64 	%rd136, {%r5531, %r5530};
	shf.l.wrap.b32 	%r5532, %r5528, %r5529, 30;
	shf.l.wrap.b32 	%r5533, %r5529, %r5528, 30;
	mov.b64 	%rd137, {%r5533, %r5532};
	xor.b64  	%rd138, %rd137, %rd136;
	shf.l.wrap.b32 	%r5534, %r5528, %r5529, 25;
	shf.l.wrap.b32 	%r5535, %r5529, %r5528, 25;
	mov.b64 	%rd139, {%r5535, %r5534};
	xor.b64  	%rd140, %rd138, %rd139;
	xor.b64  	%rd141, %rd121, %rd83;
	xor.b64  	%rd142, %rd121, %rd96;
	and.b64  	%rd143, %rd142, %rd141;
	xor.b64  	%rd144, %rd143, %rd121;
	add.s64 	%rd145, %rd134, %rd144;
	add.s64 	%rd146, %rd145, %rd140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5536,%dummy}, %rd135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5537}, %rd135;
	}
	shf.r.wrap.b32 	%r5538, %r5537, %r5536, 14;
	shf.r.wrap.b32 	%r5539, %r5536, %r5537, 14;
	mov.b64 	%rd147, {%r5539, %r5538};
	shf.r.wrap.b32 	%r5540, %r5537, %r5536, 18;
	shf.r.wrap.b32 	%r5541, %r5536, %r5537, 18;
	mov.b64 	%rd148, {%r5541, %r5540};
	xor.b64  	%rd149, %rd148, %rd147;
	shf.l.wrap.b32 	%r5542, %r5536, %r5537, 23;
	shf.l.wrap.b32 	%r5543, %r5537, %r5536, 23;
	mov.b64 	%rd150, {%r5543, %r5542};
	xor.b64  	%rd151, %rd149, %rd150;
	xor.b64  	%rd152, %rd110, %rd82;
	and.b64  	%rd153, %rd135, %rd152;
	xor.b64  	%rd154, %rd153, %rd82;
	add.s64 	%rd155, %rd51, %rd64;
	ld.const.u64 	%rd156, [k_sha512+24];
	add.s64 	%rd157, %rd155, %rd156;
	add.s64 	%rd158, %rd157, %rd154;
	add.s64 	%rd159, %rd158, %rd151;
	add.s64 	%rd160, %rd159, %rd83;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5544,%dummy}, %rd146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5545}, %rd146;
	}
	shf.r.wrap.b32 	%r5546, %r5545, %r5544, 28;
	shf.r.wrap.b32 	%r5547, %r5544, %r5545, 28;
	mov.b64 	%rd161, {%r5547, %r5546};
	shf.l.wrap.b32 	%r5548, %r5544, %r5545, 30;
	shf.l.wrap.b32 	%r5549, %r5545, %r5544, 30;
	mov.b64 	%rd162, {%r5549, %r5548};
	xor.b64  	%rd163, %rd162, %rd161;
	shf.l.wrap.b32 	%r5550, %r5544, %r5545, 25;
	shf.l.wrap.b32 	%r5551, %r5545, %r5544, 25;
	mov.b64 	%rd164, {%r5551, %r5550};
	xor.b64  	%rd165, %rd163, %rd164;
	xor.b64  	%rd166, %rd146, %rd96;
	xor.b64  	%rd167, %rd146, %rd121;
	and.b64  	%rd168, %rd167, %rd166;
	xor.b64  	%rd169, %rd168, %rd146;
	add.s64 	%rd170, %rd159, %rd169;
	add.s64 	%rd171, %rd170, %rd165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5552,%dummy}, %rd160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5553}, %rd160;
	}
	shf.r.wrap.b32 	%r5554, %r5553, %r5552, 14;
	shf.r.wrap.b32 	%r5555, %r5552, %r5553, 14;
	mov.b64 	%rd172, {%r5555, %r5554};
	shf.r.wrap.b32 	%r5556, %r5553, %r5552, 18;
	shf.r.wrap.b32 	%r5557, %r5552, %r5553, 18;
	mov.b64 	%rd173, {%r5557, %r5556};
	xor.b64  	%rd174, %rd173, %rd172;
	shf.l.wrap.b32 	%r5558, %r5552, %r5553, 23;
	shf.l.wrap.b32 	%r5559, %r5553, %r5552, 23;
	mov.b64 	%rd175, {%r5559, %r5558};
	xor.b64  	%rd176, %rd174, %rd175;
	xor.b64  	%rd177, %rd135, %rd110;
	and.b64  	%rd178, %rd160, %rd177;
	xor.b64  	%rd179, %rd178, %rd110;
	add.s64 	%rd180, %rd82, %rd52;
	ld.const.u64 	%rd181, [k_sha512+32];
	add.s64 	%rd182, %rd180, %rd181;
	add.s64 	%rd183, %rd182, %rd179;
	add.s64 	%rd184, %rd183, %rd176;
	add.s64 	%rd185, %rd184, %rd96;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5560,%dummy}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5561}, %rd171;
	}
	shf.r.wrap.b32 	%r5562, %r5561, %r5560, 28;
	shf.r.wrap.b32 	%r5563, %r5560, %r5561, 28;
	mov.b64 	%rd186, {%r5563, %r5562};
	shf.l.wrap.b32 	%r5564, %r5560, %r5561, 30;
	shf.l.wrap.b32 	%r5565, %r5561, %r5560, 30;
	mov.b64 	%rd187, {%r5565, %r5564};
	xor.b64  	%rd188, %rd187, %rd186;
	shf.l.wrap.b32 	%r5566, %r5560, %r5561, 25;
	shf.l.wrap.b32 	%r5567, %r5561, %r5560, 25;
	mov.b64 	%rd189, {%r5567, %r5566};
	xor.b64  	%rd190, %rd188, %rd189;
	xor.b64  	%rd191, %rd171, %rd121;
	xor.b64  	%rd192, %rd171, %rd146;
	and.b64  	%rd193, %rd192, %rd191;
	xor.b64  	%rd194, %rd193, %rd171;
	add.s64 	%rd195, %rd184, %rd194;
	add.s64 	%rd196, %rd195, %rd190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5568,%dummy}, %rd185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5569}, %rd185;
	}
	shf.r.wrap.b32 	%r5570, %r5569, %r5568, 14;
	shf.r.wrap.b32 	%r5571, %r5568, %r5569, 14;
	mov.b64 	%rd197, {%r5571, %r5570};
	shf.r.wrap.b32 	%r5572, %r5569, %r5568, 18;
	shf.r.wrap.b32 	%r5573, %r5568, %r5569, 18;
	mov.b64 	%rd198, {%r5573, %r5572};
	xor.b64  	%rd199, %rd198, %rd197;
	shf.l.wrap.b32 	%r5574, %r5568, %r5569, 23;
	shf.l.wrap.b32 	%r5575, %r5569, %r5568, 23;
	mov.b64 	%rd200, {%r5575, %r5574};
	xor.b64  	%rd201, %rd199, %rd200;
	xor.b64  	%rd202, %rd160, %rd135;
	and.b64  	%rd203, %rd185, %rd202;
	xor.b64  	%rd204, %rd203, %rd135;
	add.s64 	%rd205, %rd110, %rd53;
	ld.const.u64 	%rd206, [k_sha512+40];
	add.s64 	%rd207, %rd205, %rd206;
	add.s64 	%rd208, %rd207, %rd204;
	add.s64 	%rd209, %rd208, %rd201;
	add.s64 	%rd210, %rd209, %rd121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5576,%dummy}, %rd196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5577}, %rd196;
	}
	shf.r.wrap.b32 	%r5578, %r5577, %r5576, 28;
	shf.r.wrap.b32 	%r5579, %r5576, %r5577, 28;
	mov.b64 	%rd211, {%r5579, %r5578};
	shf.l.wrap.b32 	%r5580, %r5576, %r5577, 30;
	shf.l.wrap.b32 	%r5581, %r5577, %r5576, 30;
	mov.b64 	%rd212, {%r5581, %r5580};
	xor.b64  	%rd213, %rd212, %rd211;
	shf.l.wrap.b32 	%r5582, %r5576, %r5577, 25;
	shf.l.wrap.b32 	%r5583, %r5577, %r5576, 25;
	mov.b64 	%rd214, {%r5583, %r5582};
	xor.b64  	%rd215, %rd213, %rd214;
	xor.b64  	%rd216, %rd196, %rd146;
	xor.b64  	%rd217, %rd196, %rd171;
	and.b64  	%rd218, %rd217, %rd216;
	xor.b64  	%rd219, %rd218, %rd196;
	add.s64 	%rd220, %rd209, %rd219;
	add.s64 	%rd221, %rd220, %rd215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5584,%dummy}, %rd210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5585}, %rd210;
	}
	shf.r.wrap.b32 	%r5586, %r5585, %r5584, 14;
	shf.r.wrap.b32 	%r5587, %r5584, %r5585, 14;
	mov.b64 	%rd222, {%r5587, %r5586};
	shf.r.wrap.b32 	%r5588, %r5585, %r5584, 18;
	shf.r.wrap.b32 	%r5589, %r5584, %r5585, 18;
	mov.b64 	%rd223, {%r5589, %r5588};
	xor.b64  	%rd224, %rd223, %rd222;
	shf.l.wrap.b32 	%r5590, %r5584, %r5585, 23;
	shf.l.wrap.b32 	%r5591, %r5585, %r5584, 23;
	mov.b64 	%rd225, {%r5591, %r5590};
	xor.b64  	%rd226, %rd224, %rd225;
	xor.b64  	%rd227, %rd185, %rd160;
	and.b64  	%rd228, %rd210, %rd227;
	xor.b64  	%rd229, %rd228, %rd160;
	add.s64 	%rd230, %rd135, %rd54;
	ld.const.u64 	%rd231, [k_sha512+48];
	add.s64 	%rd232, %rd230, %rd231;
	add.s64 	%rd233, %rd232, %rd229;
	add.s64 	%rd234, %rd233, %rd226;
	add.s64 	%rd235, %rd234, %rd146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5592,%dummy}, %rd221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5593}, %rd221;
	}
	shf.r.wrap.b32 	%r5594, %r5593, %r5592, 28;
	shf.r.wrap.b32 	%r5595, %r5592, %r5593, 28;
	mov.b64 	%rd236, {%r5595, %r5594};
	shf.l.wrap.b32 	%r5596, %r5592, %r5593, 30;
	shf.l.wrap.b32 	%r5597, %r5593, %r5592, 30;
	mov.b64 	%rd237, {%r5597, %r5596};
	xor.b64  	%rd238, %rd237, %rd236;
	shf.l.wrap.b32 	%r5598, %r5592, %r5593, 25;
	shf.l.wrap.b32 	%r5599, %r5593, %r5592, 25;
	mov.b64 	%rd239, {%r5599, %r5598};
	xor.b64  	%rd240, %rd238, %rd239;
	xor.b64  	%rd241, %rd221, %rd171;
	xor.b64  	%rd242, %rd221, %rd196;
	and.b64  	%rd243, %rd242, %rd241;
	xor.b64  	%rd244, %rd243, %rd221;
	add.s64 	%rd245, %rd234, %rd244;
	add.s64 	%rd246, %rd245, %rd240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5600,%dummy}, %rd235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5601}, %rd235;
	}
	shf.r.wrap.b32 	%r5602, %r5601, %r5600, 14;
	shf.r.wrap.b32 	%r5603, %r5600, %r5601, 14;
	mov.b64 	%rd247, {%r5603, %r5602};
	shf.r.wrap.b32 	%r5604, %r5601, %r5600, 18;
	shf.r.wrap.b32 	%r5605, %r5600, %r5601, 18;
	mov.b64 	%rd248, {%r5605, %r5604};
	xor.b64  	%rd249, %rd248, %rd247;
	shf.l.wrap.b32 	%r5606, %r5600, %r5601, 23;
	shf.l.wrap.b32 	%r5607, %r5601, %r5600, 23;
	mov.b64 	%rd250, {%r5607, %r5606};
	xor.b64  	%rd251, %rd249, %rd250;
	xor.b64  	%rd252, %rd210, %rd185;
	and.b64  	%rd253, %rd235, %rd252;
	xor.b64  	%rd254, %rd253, %rd185;
	add.s64 	%rd255, %rd160, %rd55;
	ld.const.u64 	%rd256, [k_sha512+56];
	add.s64 	%rd257, %rd255, %rd256;
	add.s64 	%rd258, %rd257, %rd254;
	add.s64 	%rd259, %rd258, %rd251;
	add.s64 	%rd260, %rd259, %rd171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5608,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5609}, %rd246;
	}
	shf.r.wrap.b32 	%r5610, %r5609, %r5608, 28;
	shf.r.wrap.b32 	%r5611, %r5608, %r5609, 28;
	mov.b64 	%rd261, {%r5611, %r5610};
	shf.l.wrap.b32 	%r5612, %r5608, %r5609, 30;
	shf.l.wrap.b32 	%r5613, %r5609, %r5608, 30;
	mov.b64 	%rd262, {%r5613, %r5612};
	xor.b64  	%rd263, %rd262, %rd261;
	shf.l.wrap.b32 	%r5614, %r5608, %r5609, 25;
	shf.l.wrap.b32 	%r5615, %r5609, %r5608, 25;
	mov.b64 	%rd264, {%r5615, %r5614};
	xor.b64  	%rd265, %rd263, %rd264;
	xor.b64  	%rd266, %rd246, %rd196;
	xor.b64  	%rd267, %rd246, %rd221;
	and.b64  	%rd268, %rd267, %rd266;
	xor.b64  	%rd269, %rd268, %rd246;
	add.s64 	%rd270, %rd259, %rd269;
	add.s64 	%rd271, %rd270, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5616,%dummy}, %rd260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5617}, %rd260;
	}
	shf.r.wrap.b32 	%r5618, %r5617, %r5616, 14;
	shf.r.wrap.b32 	%r5619, %r5616, %r5617, 14;
	mov.b64 	%rd272, {%r5619, %r5618};
	shf.r.wrap.b32 	%r5620, %r5617, %r5616, 18;
	shf.r.wrap.b32 	%r5621, %r5616, %r5617, 18;
	mov.b64 	%rd273, {%r5621, %r5620};
	xor.b64  	%rd274, %rd273, %rd272;
	shf.l.wrap.b32 	%r5622, %r5616, %r5617, 23;
	shf.l.wrap.b32 	%r5623, %r5617, %r5616, 23;
	mov.b64 	%rd275, {%r5623, %r5622};
	xor.b64  	%rd276, %rd274, %rd275;
	xor.b64  	%rd277, %rd235, %rd210;
	and.b64  	%rd278, %rd260, %rd277;
	xor.b64  	%rd279, %rd278, %rd210;
	add.s64 	%rd280, %rd185, %rd56;
	ld.const.u64 	%rd281, [k_sha512+64];
	add.s64 	%rd282, %rd280, %rd281;
	add.s64 	%rd283, %rd282, %rd279;
	add.s64 	%rd284, %rd283, %rd276;
	add.s64 	%rd285, %rd284, %rd196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5624,%dummy}, %rd271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5625}, %rd271;
	}
	shf.r.wrap.b32 	%r5626, %r5625, %r5624, 28;
	shf.r.wrap.b32 	%r5627, %r5624, %r5625, 28;
	mov.b64 	%rd286, {%r5627, %r5626};
	shf.l.wrap.b32 	%r5628, %r5624, %r5625, 30;
	shf.l.wrap.b32 	%r5629, %r5625, %r5624, 30;
	mov.b64 	%rd287, {%r5629, %r5628};
	xor.b64  	%rd288, %rd287, %rd286;
	shf.l.wrap.b32 	%r5630, %r5624, %r5625, 25;
	shf.l.wrap.b32 	%r5631, %r5625, %r5624, 25;
	mov.b64 	%rd289, {%r5631, %r5630};
	xor.b64  	%rd290, %rd288, %rd289;
	xor.b64  	%rd291, %rd271, %rd221;
	xor.b64  	%rd292, %rd271, %rd246;
	and.b64  	%rd293, %rd292, %rd291;
	xor.b64  	%rd294, %rd293, %rd271;
	add.s64 	%rd295, %rd284, %rd294;
	add.s64 	%rd296, %rd295, %rd290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5632,%dummy}, %rd285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5633}, %rd285;
	}
	shf.r.wrap.b32 	%r5634, %r5633, %r5632, 14;
	shf.r.wrap.b32 	%r5635, %r5632, %r5633, 14;
	mov.b64 	%rd297, {%r5635, %r5634};
	shf.r.wrap.b32 	%r5636, %r5633, %r5632, 18;
	shf.r.wrap.b32 	%r5637, %r5632, %r5633, 18;
	mov.b64 	%rd298, {%r5637, %r5636};
	xor.b64  	%rd299, %rd298, %rd297;
	shf.l.wrap.b32 	%r5638, %r5632, %r5633, 23;
	shf.l.wrap.b32 	%r5639, %r5633, %r5632, 23;
	mov.b64 	%rd300, {%r5639, %r5638};
	xor.b64  	%rd301, %rd299, %rd300;
	xor.b64  	%rd302, %rd260, %rd235;
	and.b64  	%rd303, %rd285, %rd302;
	xor.b64  	%rd304, %rd303, %rd235;
	add.s64 	%rd305, %rd210, %rd57;
	ld.const.u64 	%rd306, [k_sha512+72];
	add.s64 	%rd307, %rd305, %rd306;
	add.s64 	%rd308, %rd307, %rd304;
	add.s64 	%rd309, %rd308, %rd301;
	add.s64 	%rd310, %rd309, %rd221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5640,%dummy}, %rd296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5641}, %rd296;
	}
	shf.r.wrap.b32 	%r5642, %r5641, %r5640, 28;
	shf.r.wrap.b32 	%r5643, %r5640, %r5641, 28;
	mov.b64 	%rd311, {%r5643, %r5642};
	shf.l.wrap.b32 	%r5644, %r5640, %r5641, 30;
	shf.l.wrap.b32 	%r5645, %r5641, %r5640, 30;
	mov.b64 	%rd312, {%r5645, %r5644};
	xor.b64  	%rd313, %rd312, %rd311;
	shf.l.wrap.b32 	%r5646, %r5640, %r5641, 25;
	shf.l.wrap.b32 	%r5647, %r5641, %r5640, 25;
	mov.b64 	%rd314, {%r5647, %r5646};
	xor.b64  	%rd315, %rd313, %rd314;
	xor.b64  	%rd316, %rd296, %rd246;
	xor.b64  	%rd317, %rd296, %rd271;
	and.b64  	%rd318, %rd317, %rd316;
	xor.b64  	%rd319, %rd318, %rd296;
	add.s64 	%rd320, %rd309, %rd319;
	add.s64 	%rd321, %rd320, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5648,%dummy}, %rd310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5649}, %rd310;
	}
	shf.r.wrap.b32 	%r5650, %r5649, %r5648, 14;
	shf.r.wrap.b32 	%r5651, %r5648, %r5649, 14;
	mov.b64 	%rd322, {%r5651, %r5650};
	shf.r.wrap.b32 	%r5652, %r5649, %r5648, 18;
	shf.r.wrap.b32 	%r5653, %r5648, %r5649, 18;
	mov.b64 	%rd323, {%r5653, %r5652};
	xor.b64  	%rd324, %rd323, %rd322;
	shf.l.wrap.b32 	%r5654, %r5648, %r5649, 23;
	shf.l.wrap.b32 	%r5655, %r5649, %r5648, 23;
	mov.b64 	%rd325, {%r5655, %r5654};
	xor.b64  	%rd326, %rd324, %rd325;
	xor.b64  	%rd327, %rd285, %rd260;
	and.b64  	%rd328, %rd310, %rd327;
	xor.b64  	%rd329, %rd328, %rd260;
	add.s64 	%rd330, %rd235, %rd58;
	ld.const.u64 	%rd331, [k_sha512+80];
	add.s64 	%rd332, %rd330, %rd331;
	add.s64 	%rd333, %rd332, %rd329;
	add.s64 	%rd334, %rd333, %rd326;
	add.s64 	%rd335, %rd334, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5656,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd321;
	}
	shf.r.wrap.b32 	%r5658, %r5657, %r5656, 28;
	shf.r.wrap.b32 	%r5659, %r5656, %r5657, 28;
	mov.b64 	%rd336, {%r5659, %r5658};
	shf.l.wrap.b32 	%r5660, %r5656, %r5657, 30;
	shf.l.wrap.b32 	%r5661, %r5657, %r5656, 30;
	mov.b64 	%rd337, {%r5661, %r5660};
	xor.b64  	%rd338, %rd337, %rd336;
	shf.l.wrap.b32 	%r5662, %r5656, %r5657, 25;
	shf.l.wrap.b32 	%r5663, %r5657, %r5656, 25;
	mov.b64 	%rd339, {%r5663, %r5662};
	xor.b64  	%rd340, %rd338, %rd339;
	xor.b64  	%rd341, %rd321, %rd271;
	xor.b64  	%rd342, %rd321, %rd296;
	and.b64  	%rd343, %rd342, %rd341;
	xor.b64  	%rd344, %rd343, %rd321;
	add.s64 	%rd345, %rd334, %rd344;
	add.s64 	%rd346, %rd345, %rd340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5664,%dummy}, %rd335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5665}, %rd335;
	}
	shf.r.wrap.b32 	%r5666, %r5665, %r5664, 14;
	shf.r.wrap.b32 	%r5667, %r5664, %r5665, 14;
	mov.b64 	%rd347, {%r5667, %r5666};
	shf.r.wrap.b32 	%r5668, %r5665, %r5664, 18;
	shf.r.wrap.b32 	%r5669, %r5664, %r5665, 18;
	mov.b64 	%rd348, {%r5669, %r5668};
	xor.b64  	%rd349, %rd348, %rd347;
	shf.l.wrap.b32 	%r5670, %r5664, %r5665, 23;
	shf.l.wrap.b32 	%r5671, %r5665, %r5664, 23;
	mov.b64 	%rd350, {%r5671, %r5670};
	xor.b64  	%rd351, %rd349, %rd350;
	xor.b64  	%rd352, %rd310, %rd285;
	and.b64  	%rd353, %rd335, %rd352;
	xor.b64  	%rd354, %rd353, %rd285;
	add.s64 	%rd355, %rd260, %rd59;
	ld.const.u64 	%rd356, [k_sha512+88];
	add.s64 	%rd357, %rd355, %rd356;
	add.s64 	%rd358, %rd357, %rd354;
	add.s64 	%rd359, %rd358, %rd351;
	add.s64 	%rd360, %rd359, %rd271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5672,%dummy}, %rd346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5673}, %rd346;
	}
	shf.r.wrap.b32 	%r5674, %r5673, %r5672, 28;
	shf.r.wrap.b32 	%r5675, %r5672, %r5673, 28;
	mov.b64 	%rd361, {%r5675, %r5674};
	shf.l.wrap.b32 	%r5676, %r5672, %r5673, 30;
	shf.l.wrap.b32 	%r5677, %r5673, %r5672, 30;
	mov.b64 	%rd362, {%r5677, %r5676};
	xor.b64  	%rd363, %rd362, %rd361;
	shf.l.wrap.b32 	%r5678, %r5672, %r5673, 25;
	shf.l.wrap.b32 	%r5679, %r5673, %r5672, 25;
	mov.b64 	%rd364, {%r5679, %r5678};
	xor.b64  	%rd365, %rd363, %rd364;
	xor.b64  	%rd366, %rd346, %rd296;
	xor.b64  	%rd367, %rd346, %rd321;
	and.b64  	%rd368, %rd367, %rd366;
	xor.b64  	%rd369, %rd368, %rd346;
	add.s64 	%rd370, %rd359, %rd369;
	add.s64 	%rd371, %rd370, %rd365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5680,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5681}, %rd360;
	}
	shf.r.wrap.b32 	%r5682, %r5681, %r5680, 14;
	shf.r.wrap.b32 	%r5683, %r5680, %r5681, 14;
	mov.b64 	%rd372, {%r5683, %r5682};
	shf.r.wrap.b32 	%r5684, %r5681, %r5680, 18;
	shf.r.wrap.b32 	%r5685, %r5680, %r5681, 18;
	mov.b64 	%rd373, {%r5685, %r5684};
	xor.b64  	%rd374, %rd373, %rd372;
	shf.l.wrap.b32 	%r5686, %r5680, %r5681, 23;
	shf.l.wrap.b32 	%r5687, %r5681, %r5680, 23;
	mov.b64 	%rd375, {%r5687, %r5686};
	xor.b64  	%rd376, %rd374, %rd375;
	xor.b64  	%rd377, %rd335, %rd310;
	and.b64  	%rd378, %rd360, %rd377;
	xor.b64  	%rd379, %rd378, %rd310;
	add.s64 	%rd380, %rd285, %rd60;
	ld.const.u64 	%rd381, [k_sha512+96];
	add.s64 	%rd382, %rd380, %rd381;
	add.s64 	%rd383, %rd382, %rd379;
	add.s64 	%rd384, %rd383, %rd376;
	add.s64 	%rd385, %rd384, %rd296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5688,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5689}, %rd371;
	}
	shf.r.wrap.b32 	%r5690, %r5689, %r5688, 28;
	shf.r.wrap.b32 	%r5691, %r5688, %r5689, 28;
	mov.b64 	%rd386, {%r5691, %r5690};
	shf.l.wrap.b32 	%r5692, %r5688, %r5689, 30;
	shf.l.wrap.b32 	%r5693, %r5689, %r5688, 30;
	mov.b64 	%rd387, {%r5693, %r5692};
	xor.b64  	%rd388, %rd387, %rd386;
	shf.l.wrap.b32 	%r5694, %r5688, %r5689, 25;
	shf.l.wrap.b32 	%r5695, %r5689, %r5688, 25;
	mov.b64 	%rd389, {%r5695, %r5694};
	xor.b64  	%rd390, %rd388, %rd389;
	xor.b64  	%rd391, %rd371, %rd321;
	xor.b64  	%rd392, %rd371, %rd346;
	and.b64  	%rd393, %rd392, %rd391;
	xor.b64  	%rd394, %rd393, %rd371;
	add.s64 	%rd395, %rd384, %rd394;
	add.s64 	%rd396, %rd395, %rd390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5696,%dummy}, %rd385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5697}, %rd385;
	}
	shf.r.wrap.b32 	%r5698, %r5697, %r5696, 14;
	shf.r.wrap.b32 	%r5699, %r5696, %r5697, 14;
	mov.b64 	%rd397, {%r5699, %r5698};
	shf.r.wrap.b32 	%r5700, %r5697, %r5696, 18;
	shf.r.wrap.b32 	%r5701, %r5696, %r5697, 18;
	mov.b64 	%rd398, {%r5701, %r5700};
	xor.b64  	%rd399, %rd398, %rd397;
	shf.l.wrap.b32 	%r5702, %r5696, %r5697, 23;
	shf.l.wrap.b32 	%r5703, %r5697, %r5696, 23;
	mov.b64 	%rd400, {%r5703, %r5702};
	xor.b64  	%rd401, %rd399, %rd400;
	xor.b64  	%rd402, %rd360, %rd335;
	and.b64  	%rd403, %rd385, %rd402;
	xor.b64  	%rd404, %rd403, %rd335;
	add.s64 	%rd405, %rd310, %rd61;
	ld.const.u64 	%rd406, [k_sha512+104];
	add.s64 	%rd407, %rd405, %rd406;
	add.s64 	%rd408, %rd407, %rd404;
	add.s64 	%rd409, %rd408, %rd401;
	add.s64 	%rd410, %rd409, %rd321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5704,%dummy}, %rd396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5705}, %rd396;
	}
	shf.r.wrap.b32 	%r5706, %r5705, %r5704, 28;
	shf.r.wrap.b32 	%r5707, %r5704, %r5705, 28;
	mov.b64 	%rd411, {%r5707, %r5706};
	shf.l.wrap.b32 	%r5708, %r5704, %r5705, 30;
	shf.l.wrap.b32 	%r5709, %r5705, %r5704, 30;
	mov.b64 	%rd412, {%r5709, %r5708};
	xor.b64  	%rd413, %rd412, %rd411;
	shf.l.wrap.b32 	%r5710, %r5704, %r5705, 25;
	shf.l.wrap.b32 	%r5711, %r5705, %r5704, 25;
	mov.b64 	%rd414, {%r5711, %r5710};
	xor.b64  	%rd415, %rd413, %rd414;
	xor.b64  	%rd416, %rd396, %rd346;
	xor.b64  	%rd417, %rd396, %rd371;
	and.b64  	%rd418, %rd417, %rd416;
	xor.b64  	%rd419, %rd418, %rd396;
	add.s64 	%rd420, %rd409, %rd419;
	add.s64 	%rd421, %rd420, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5712,%dummy}, %rd410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5713}, %rd410;
	}
	shf.r.wrap.b32 	%r5714, %r5713, %r5712, 14;
	shf.r.wrap.b32 	%r5715, %r5712, %r5713, 14;
	mov.b64 	%rd422, {%r5715, %r5714};
	shf.r.wrap.b32 	%r5716, %r5713, %r5712, 18;
	shf.r.wrap.b32 	%r5717, %r5712, %r5713, 18;
	mov.b64 	%rd423, {%r5717, %r5716};
	xor.b64  	%rd424, %rd423, %rd422;
	shf.l.wrap.b32 	%r5718, %r5712, %r5713, 23;
	shf.l.wrap.b32 	%r5719, %r5713, %r5712, 23;
	mov.b64 	%rd425, {%r5719, %r5718};
	xor.b64  	%rd426, %rd424, %rd425;
	xor.b64  	%rd427, %rd385, %rd360;
	and.b64  	%rd428, %rd410, %rd427;
	xor.b64  	%rd429, %rd428, %rd360;
	add.s64 	%rd430, %rd335, %rd62;
	ld.const.u64 	%rd431, [k_sha512+112];
	add.s64 	%rd432, %rd430, %rd431;
	add.s64 	%rd433, %rd432, %rd429;
	add.s64 	%rd434, %rd433, %rd426;
	add.s64 	%rd435, %rd434, %rd346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5720,%dummy}, %rd421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5721}, %rd421;
	}
	shf.r.wrap.b32 	%r5722, %r5721, %r5720, 28;
	shf.r.wrap.b32 	%r5723, %r5720, %r5721, 28;
	mov.b64 	%rd436, {%r5723, %r5722};
	shf.l.wrap.b32 	%r5724, %r5720, %r5721, 30;
	shf.l.wrap.b32 	%r5725, %r5721, %r5720, 30;
	mov.b64 	%rd437, {%r5725, %r5724};
	xor.b64  	%rd438, %rd437, %rd436;
	shf.l.wrap.b32 	%r5726, %r5720, %r5721, 25;
	shf.l.wrap.b32 	%r5727, %r5721, %r5720, 25;
	mov.b64 	%rd439, {%r5727, %r5726};
	xor.b64  	%rd440, %rd438, %rd439;
	xor.b64  	%rd441, %rd421, %rd371;
	xor.b64  	%rd442, %rd421, %rd396;
	and.b64  	%rd443, %rd442, %rd441;
	xor.b64  	%rd444, %rd443, %rd421;
	add.s64 	%rd445, %rd434, %rd444;
	add.s64 	%rd446, %rd445, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5728,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5729}, %rd435;
	}
	shf.r.wrap.b32 	%r5730, %r5729, %r5728, 14;
	shf.r.wrap.b32 	%r5731, %r5728, %r5729, 14;
	mov.b64 	%rd447, {%r5731, %r5730};
	shf.r.wrap.b32 	%r5732, %r5729, %r5728, 18;
	shf.r.wrap.b32 	%r5733, %r5728, %r5729, 18;
	mov.b64 	%rd448, {%r5733, %r5732};
	xor.b64  	%rd449, %rd448, %rd447;
	shf.l.wrap.b32 	%r5734, %r5728, %r5729, 23;
	shf.l.wrap.b32 	%r5735, %r5729, %r5728, 23;
	mov.b64 	%rd450, {%r5735, %r5734};
	xor.b64  	%rd451, %rd449, %rd450;
	xor.b64  	%rd452, %rd410, %rd385;
	and.b64  	%rd453, %rd435, %rd452;
	xor.b64  	%rd454, %rd453, %rd385;
	add.s64 	%rd455, %rd360, %rd63;
	ld.const.u64 	%rd456, [k_sha512+120];
	add.s64 	%rd457, %rd455, %rd456;
	add.s64 	%rd458, %rd457, %rd454;
	add.s64 	%rd459, %rd458, %rd451;
	add.s64 	%rd460, %rd459, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5736,%dummy}, %rd446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5737}, %rd446;
	}
	shf.r.wrap.b32 	%r5738, %r5737, %r5736, 28;
	shf.r.wrap.b32 	%r5739, %r5736, %r5737, 28;
	mov.b64 	%rd461, {%r5739, %r5738};
	shf.l.wrap.b32 	%r5740, %r5736, %r5737, 30;
	shf.l.wrap.b32 	%r5741, %r5737, %r5736, 30;
	mov.b64 	%rd462, {%r5741, %r5740};
	xor.b64  	%rd463, %rd462, %rd461;
	shf.l.wrap.b32 	%r5742, %r5736, %r5737, 25;
	shf.l.wrap.b32 	%r5743, %r5737, %r5736, 25;
	mov.b64 	%rd464, {%r5743, %r5742};
	xor.b64  	%rd465, %rd463, %rd464;
	xor.b64  	%rd466, %rd446, %rd396;
	xor.b64  	%rd467, %rd446, %rd421;
	and.b64  	%rd468, %rd467, %rd466;
	xor.b64  	%rd469, %rd468, %rd446;
	add.s64 	%rd470, %rd459, %rd469;
	add.s64 	%rd471, %rd470, %rd465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5744,%dummy}, %rd62;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5745}, %rd62;
	}
	shf.r.wrap.b32 	%r5746, %r5745, %r5744, 19;
	shf.r.wrap.b32 	%r5747, %r5744, %r5745, 19;
	mov.b64 	%rd472, {%r5747, %r5746};
	shf.l.wrap.b32 	%r5748, %r5744, %r5745, 3;
	shf.l.wrap.b32 	%r5749, %r5745, %r5744, 3;
	mov.b64 	%rd473, {%r5749, %r5748};
	shr.u64 	%rd474, %rd62, 6;
	xor.b64  	%rd475, %rd472, %rd474;
	xor.b64  	%rd476, %rd475, %rd473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5750,%dummy}, %rd49;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5751}, %rd49;
	}
	shf.r.wrap.b32 	%r5752, %r5751, %r5750, 1;
	shf.r.wrap.b32 	%r5753, %r5750, %r5751, 1;
	mov.b64 	%rd477, {%r5753, %r5752};
	shf.r.wrap.b32 	%r5754, %r5751, %r5750, 8;
	shf.r.wrap.b32 	%r5755, %r5750, %r5751, 8;
	mov.b64 	%rd478, {%r5755, %r5754};
	shr.u64 	%rd479, %rd49, 7;
	xor.b64  	%rd480, %rd477, %rd479;
	xor.b64  	%rd481, %rd480, %rd478;
	add.s64 	%rd482, %rd57, %rd48;
	add.s64 	%rd483, %rd482, %rd476;
	add.s64 	%rd484, %rd483, %rd481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5756,%dummy}, %rd63;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5757}, %rd63;
	}
	shf.r.wrap.b32 	%r5758, %r5757, %r5756, 19;
	shf.r.wrap.b32 	%r5759, %r5756, %r5757, 19;
	mov.b64 	%rd485, {%r5759, %r5758};
	shf.l.wrap.b32 	%r5760, %r5756, %r5757, 3;
	shf.l.wrap.b32 	%r5761, %r5757, %r5756, 3;
	mov.b64 	%rd486, {%r5761, %r5760};
	shr.u64 	%rd487, %rd63, 6;
	xor.b64  	%rd488, %rd485, %rd487;
	xor.b64  	%rd489, %rd488, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5762,%dummy}, %rd50;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5763}, %rd50;
	}
	shf.r.wrap.b32 	%r5764, %r5763, %r5762, 1;
	shf.r.wrap.b32 	%r5765, %r5762, %r5763, 1;
	mov.b64 	%rd490, {%r5765, %r5764};
	shf.r.wrap.b32 	%r5766, %r5763, %r5762, 8;
	shf.r.wrap.b32 	%r5767, %r5762, %r5763, 8;
	mov.b64 	%rd491, {%r5767, %r5766};
	shr.u64 	%rd492, %rd50, 7;
	xor.b64  	%rd493, %rd490, %rd492;
	xor.b64  	%rd494, %rd493, %rd491;
	add.s64 	%rd495, %rd58, %rd49;
	add.s64 	%rd496, %rd495, %rd489;
	add.s64 	%rd497, %rd496, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd484;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 19;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 19;
	mov.b64 	%rd498, {%r5771, %r5770};
	shf.l.wrap.b32 	%r5772, %r5768, %r5769, 3;
	shf.l.wrap.b32 	%r5773, %r5769, %r5768, 3;
	mov.b64 	%rd499, {%r5773, %r5772};
	shr.u64 	%rd500, %rd484, 6;
	xor.b64  	%rd501, %rd498, %rd500;
	xor.b64  	%rd502, %rd501, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5774,%dummy}, %rd51;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5775}, %rd51;
	}
	shf.r.wrap.b32 	%r5776, %r5775, %r5774, 1;
	shf.r.wrap.b32 	%r5777, %r5774, %r5775, 1;
	mov.b64 	%rd503, {%r5777, %r5776};
	shf.r.wrap.b32 	%r5778, %r5775, %r5774, 8;
	shf.r.wrap.b32 	%r5779, %r5774, %r5775, 8;
	mov.b64 	%rd504, {%r5779, %r5778};
	shr.u64 	%rd505, %rd51, 7;
	xor.b64  	%rd506, %rd503, %rd505;
	xor.b64  	%rd507, %rd506, %rd504;
	add.s64 	%rd508, %rd59, %rd50;
	add.s64 	%rd509, %rd508, %rd502;
	add.s64 	%rd510, %rd509, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5780,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5781}, %rd497;
	}
	shf.r.wrap.b32 	%r5782, %r5781, %r5780, 19;
	shf.r.wrap.b32 	%r5783, %r5780, %r5781, 19;
	mov.b64 	%rd511, {%r5783, %r5782};
	shf.l.wrap.b32 	%r5784, %r5780, %r5781, 3;
	shf.l.wrap.b32 	%r5785, %r5781, %r5780, 3;
	mov.b64 	%rd512, {%r5785, %r5784};
	shr.u64 	%rd513, %rd497, 6;
	xor.b64  	%rd514, %rd511, %rd513;
	xor.b64  	%rd515, %rd514, %rd512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5786,%dummy}, %rd52;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5787}, %rd52;
	}
	shf.r.wrap.b32 	%r5788, %r5787, %r5786, 1;
	shf.r.wrap.b32 	%r5789, %r5786, %r5787, 1;
	mov.b64 	%rd516, {%r5789, %r5788};
	shf.r.wrap.b32 	%r5790, %r5787, %r5786, 8;
	shf.r.wrap.b32 	%r5791, %r5786, %r5787, 8;
	mov.b64 	%rd517, {%r5791, %r5790};
	shr.u64 	%rd518, %rd52, 7;
	xor.b64  	%rd519, %rd516, %rd518;
	xor.b64  	%rd520, %rd519, %rd517;
	add.s64 	%rd521, %rd60, %rd51;
	add.s64 	%rd522, %rd521, %rd515;
	add.s64 	%rd523, %rd522, %rd520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5792,%dummy}, %rd510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5793}, %rd510;
	}
	shf.r.wrap.b32 	%r5794, %r5793, %r5792, 19;
	shf.r.wrap.b32 	%r5795, %r5792, %r5793, 19;
	mov.b64 	%rd524, {%r5795, %r5794};
	shf.l.wrap.b32 	%r5796, %r5792, %r5793, 3;
	shf.l.wrap.b32 	%r5797, %r5793, %r5792, 3;
	mov.b64 	%rd525, {%r5797, %r5796};
	shr.u64 	%rd526, %rd510, 6;
	xor.b64  	%rd527, %rd524, %rd526;
	xor.b64  	%rd528, %rd527, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5798,%dummy}, %rd53;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5799}, %rd53;
	}
	shf.r.wrap.b32 	%r5800, %r5799, %r5798, 1;
	shf.r.wrap.b32 	%r5801, %r5798, %r5799, 1;
	mov.b64 	%rd529, {%r5801, %r5800};
	shf.r.wrap.b32 	%r5802, %r5799, %r5798, 8;
	shf.r.wrap.b32 	%r5803, %r5798, %r5799, 8;
	mov.b64 	%rd530, {%r5803, %r5802};
	shr.u64 	%rd531, %rd53, 7;
	xor.b64  	%rd532, %rd529, %rd531;
	xor.b64  	%rd533, %rd532, %rd530;
	add.s64 	%rd534, %rd61, %rd52;
	add.s64 	%rd535, %rd534, %rd528;
	add.s64 	%rd536, %rd535, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5804,%dummy}, %rd523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd523;
	}
	shf.r.wrap.b32 	%r5806, %r5805, %r5804, 19;
	shf.r.wrap.b32 	%r5807, %r5804, %r5805, 19;
	mov.b64 	%rd537, {%r5807, %r5806};
	shf.l.wrap.b32 	%r5808, %r5804, %r5805, 3;
	shf.l.wrap.b32 	%r5809, %r5805, %r5804, 3;
	mov.b64 	%rd538, {%r5809, %r5808};
	shr.u64 	%rd539, %rd523, 6;
	xor.b64  	%rd540, %rd537, %rd539;
	xor.b64  	%rd541, %rd540, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5810,%dummy}, %rd54;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5811}, %rd54;
	}
	shf.r.wrap.b32 	%r5812, %r5811, %r5810, 1;
	shf.r.wrap.b32 	%r5813, %r5810, %r5811, 1;
	mov.b64 	%rd542, {%r5813, %r5812};
	shf.r.wrap.b32 	%r5814, %r5811, %r5810, 8;
	shf.r.wrap.b32 	%r5815, %r5810, %r5811, 8;
	mov.b64 	%rd543, {%r5815, %r5814};
	shr.u64 	%rd544, %rd54, 7;
	xor.b64  	%rd545, %rd542, %rd544;
	xor.b64  	%rd546, %rd545, %rd543;
	add.s64 	%rd547, %rd62, %rd53;
	add.s64 	%rd548, %rd547, %rd541;
	add.s64 	%rd549, %rd548, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5816,%dummy}, %rd536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd536;
	}
	shf.r.wrap.b32 	%r5818, %r5817, %r5816, 19;
	shf.r.wrap.b32 	%r5819, %r5816, %r5817, 19;
	mov.b64 	%rd550, {%r5819, %r5818};
	shf.l.wrap.b32 	%r5820, %r5816, %r5817, 3;
	shf.l.wrap.b32 	%r5821, %r5817, %r5816, 3;
	mov.b64 	%rd551, {%r5821, %r5820};
	shr.u64 	%rd552, %rd536, 6;
	xor.b64  	%rd553, %rd550, %rd552;
	xor.b64  	%rd554, %rd553, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5822,%dummy}, %rd55;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5823}, %rd55;
	}
	shf.r.wrap.b32 	%r5824, %r5823, %r5822, 1;
	shf.r.wrap.b32 	%r5825, %r5822, %r5823, 1;
	mov.b64 	%rd555, {%r5825, %r5824};
	shf.r.wrap.b32 	%r5826, %r5823, %r5822, 8;
	shf.r.wrap.b32 	%r5827, %r5822, %r5823, 8;
	mov.b64 	%rd556, {%r5827, %r5826};
	shr.u64 	%rd557, %rd55, 7;
	xor.b64  	%rd558, %rd555, %rd557;
	xor.b64  	%rd559, %rd558, %rd556;
	add.s64 	%rd560, %rd63, %rd54;
	add.s64 	%rd561, %rd560, %rd554;
	add.s64 	%rd562, %rd561, %rd559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5828,%dummy}, %rd549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd549;
	}
	shf.r.wrap.b32 	%r5830, %r5829, %r5828, 19;
	shf.r.wrap.b32 	%r5831, %r5828, %r5829, 19;
	mov.b64 	%rd563, {%r5831, %r5830};
	shf.l.wrap.b32 	%r5832, %r5828, %r5829, 3;
	shf.l.wrap.b32 	%r5833, %r5829, %r5828, 3;
	mov.b64 	%rd564, {%r5833, %r5832};
	shr.u64 	%rd565, %rd549, 6;
	xor.b64  	%rd566, %rd563, %rd565;
	xor.b64  	%rd567, %rd566, %rd564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5834,%dummy}, %rd56;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5835}, %rd56;
	}
	shf.r.wrap.b32 	%r5836, %r5835, %r5834, 1;
	shf.r.wrap.b32 	%r5837, %r5834, %r5835, 1;
	mov.b64 	%rd568, {%r5837, %r5836};
	shf.r.wrap.b32 	%r5838, %r5835, %r5834, 8;
	shf.r.wrap.b32 	%r5839, %r5834, %r5835, 8;
	mov.b64 	%rd569, {%r5839, %r5838};
	shr.u64 	%rd570, %rd56, 7;
	xor.b64  	%rd571, %rd568, %rd570;
	xor.b64  	%rd572, %rd571, %rd569;
	add.s64 	%rd573, %rd484, %rd55;
	add.s64 	%rd574, %rd573, %rd567;
	add.s64 	%rd575, %rd574, %rd572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5840,%dummy}, %rd562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5841}, %rd562;
	}
	shf.r.wrap.b32 	%r5842, %r5841, %r5840, 19;
	shf.r.wrap.b32 	%r5843, %r5840, %r5841, 19;
	mov.b64 	%rd576, {%r5843, %r5842};
	shf.l.wrap.b32 	%r5844, %r5840, %r5841, 3;
	shf.l.wrap.b32 	%r5845, %r5841, %r5840, 3;
	mov.b64 	%rd577, {%r5845, %r5844};
	shr.u64 	%rd578, %rd562, 6;
	xor.b64  	%rd579, %rd576, %rd578;
	xor.b64  	%rd580, %rd579, %rd577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd57;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5847}, %rd57;
	}
	shf.r.wrap.b32 	%r5848, %r5847, %r5846, 1;
	shf.r.wrap.b32 	%r5849, %r5846, %r5847, 1;
	mov.b64 	%rd581, {%r5849, %r5848};
	shf.r.wrap.b32 	%r5850, %r5847, %r5846, 8;
	shf.r.wrap.b32 	%r5851, %r5846, %r5847, 8;
	mov.b64 	%rd582, {%r5851, %r5850};
	shr.u64 	%rd583, %rd57, 7;
	xor.b64  	%rd584, %rd581, %rd583;
	xor.b64  	%rd585, %rd584, %rd582;
	add.s64 	%rd586, %rd497, %rd56;
	add.s64 	%rd587, %rd586, %rd580;
	add.s64 	%rd588, %rd587, %rd585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5852,%dummy}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5853}, %rd575;
	}
	shf.r.wrap.b32 	%r5854, %r5853, %r5852, 19;
	shf.r.wrap.b32 	%r5855, %r5852, %r5853, 19;
	mov.b64 	%rd589, {%r5855, %r5854};
	shf.l.wrap.b32 	%r5856, %r5852, %r5853, 3;
	shf.l.wrap.b32 	%r5857, %r5853, %r5852, 3;
	mov.b64 	%rd590, {%r5857, %r5856};
	shr.u64 	%rd591, %rd575, 6;
	xor.b64  	%rd592, %rd589, %rd591;
	xor.b64  	%rd593, %rd592, %rd590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5858,%dummy}, %rd58;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5859}, %rd58;
	}
	shf.r.wrap.b32 	%r5860, %r5859, %r5858, 1;
	shf.r.wrap.b32 	%r5861, %r5858, %r5859, 1;
	mov.b64 	%rd594, {%r5861, %r5860};
	shf.r.wrap.b32 	%r5862, %r5859, %r5858, 8;
	shf.r.wrap.b32 	%r5863, %r5858, %r5859, 8;
	mov.b64 	%rd595, {%r5863, %r5862};
	shr.u64 	%rd596, %rd58, 7;
	xor.b64  	%rd597, %rd594, %rd596;
	xor.b64  	%rd598, %rd597, %rd595;
	add.s64 	%rd599, %rd510, %rd57;
	add.s64 	%rd600, %rd599, %rd593;
	add.s64 	%rd601, %rd600, %rd598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5864,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5865}, %rd588;
	}
	shf.r.wrap.b32 	%r5866, %r5865, %r5864, 19;
	shf.r.wrap.b32 	%r5867, %r5864, %r5865, 19;
	mov.b64 	%rd602, {%r5867, %r5866};
	shf.l.wrap.b32 	%r5868, %r5864, %r5865, 3;
	shf.l.wrap.b32 	%r5869, %r5865, %r5864, 3;
	mov.b64 	%rd603, {%r5869, %r5868};
	shr.u64 	%rd604, %rd588, 6;
	xor.b64  	%rd605, %rd602, %rd604;
	xor.b64  	%rd606, %rd605, %rd603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5870,%dummy}, %rd59;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5871}, %rd59;
	}
	shf.r.wrap.b32 	%r5872, %r5871, %r5870, 1;
	shf.r.wrap.b32 	%r5873, %r5870, %r5871, 1;
	mov.b64 	%rd607, {%r5873, %r5872};
	shf.r.wrap.b32 	%r5874, %r5871, %r5870, 8;
	shf.r.wrap.b32 	%r5875, %r5870, %r5871, 8;
	mov.b64 	%rd608, {%r5875, %r5874};
	shr.u64 	%rd609, %rd59, 7;
	xor.b64  	%rd610, %rd607, %rd609;
	xor.b64  	%rd611, %rd610, %rd608;
	add.s64 	%rd612, %rd523, %rd58;
	add.s64 	%rd613, %rd612, %rd606;
	add.s64 	%rd614, %rd613, %rd611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5876,%dummy}, %rd601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5877}, %rd601;
	}
	shf.r.wrap.b32 	%r5878, %r5877, %r5876, 19;
	shf.r.wrap.b32 	%r5879, %r5876, %r5877, 19;
	mov.b64 	%rd615, {%r5879, %r5878};
	shf.l.wrap.b32 	%r5880, %r5876, %r5877, 3;
	shf.l.wrap.b32 	%r5881, %r5877, %r5876, 3;
	mov.b64 	%rd616, {%r5881, %r5880};
	shr.u64 	%rd617, %rd601, 6;
	xor.b64  	%rd618, %rd615, %rd617;
	xor.b64  	%rd619, %rd618, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5882,%dummy}, %rd60;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5883}, %rd60;
	}
	shf.r.wrap.b32 	%r5884, %r5883, %r5882, 1;
	shf.r.wrap.b32 	%r5885, %r5882, %r5883, 1;
	mov.b64 	%rd620, {%r5885, %r5884};
	shf.r.wrap.b32 	%r5886, %r5883, %r5882, 8;
	shf.r.wrap.b32 	%r5887, %r5882, %r5883, 8;
	mov.b64 	%rd621, {%r5887, %r5886};
	shr.u64 	%rd622, %rd60, 7;
	xor.b64  	%rd623, %rd620, %rd622;
	xor.b64  	%rd624, %rd623, %rd621;
	add.s64 	%rd625, %rd536, %rd59;
	add.s64 	%rd626, %rd625, %rd619;
	add.s64 	%rd627, %rd626, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5888,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5889}, %rd614;
	}
	shf.r.wrap.b32 	%r5890, %r5889, %r5888, 19;
	shf.r.wrap.b32 	%r5891, %r5888, %r5889, 19;
	mov.b64 	%rd628, {%r5891, %r5890};
	shf.l.wrap.b32 	%r5892, %r5888, %r5889, 3;
	shf.l.wrap.b32 	%r5893, %r5889, %r5888, 3;
	mov.b64 	%rd629, {%r5893, %r5892};
	shr.u64 	%rd630, %rd614, 6;
	xor.b64  	%rd631, %rd628, %rd630;
	xor.b64  	%rd632, %rd631, %rd629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5894,%dummy}, %rd61;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5895}, %rd61;
	}
	shf.r.wrap.b32 	%r5896, %r5895, %r5894, 1;
	shf.r.wrap.b32 	%r5897, %r5894, %r5895, 1;
	mov.b64 	%rd633, {%r5897, %r5896};
	shf.r.wrap.b32 	%r5898, %r5895, %r5894, 8;
	shf.r.wrap.b32 	%r5899, %r5894, %r5895, 8;
	mov.b64 	%rd634, {%r5899, %r5898};
	shr.u64 	%rd635, %rd61, 7;
	xor.b64  	%rd636, %rd633, %rd635;
	xor.b64  	%rd637, %rd636, %rd634;
	add.s64 	%rd638, %rd549, %rd60;
	add.s64 	%rd639, %rd638, %rd632;
	add.s64 	%rd640, %rd639, %rd637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5900,%dummy}, %rd627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5901}, %rd627;
	}
	shf.r.wrap.b32 	%r5902, %r5901, %r5900, 19;
	shf.r.wrap.b32 	%r5903, %r5900, %r5901, 19;
	mov.b64 	%rd641, {%r5903, %r5902};
	shf.l.wrap.b32 	%r5904, %r5900, %r5901, 3;
	shf.l.wrap.b32 	%r5905, %r5901, %r5900, 3;
	mov.b64 	%rd642, {%r5905, %r5904};
	shr.u64 	%rd643, %rd627, 6;
	xor.b64  	%rd644, %rd641, %rd643;
	xor.b64  	%rd645, %rd644, %rd642;
	shf.r.wrap.b32 	%r5906, %r5745, %r5744, 1;
	shf.r.wrap.b32 	%r5907, %r5744, %r5745, 1;
	mov.b64 	%rd646, {%r5907, %r5906};
	shf.r.wrap.b32 	%r5908, %r5745, %r5744, 8;
	shf.r.wrap.b32 	%r5909, %r5744, %r5745, 8;
	mov.b64 	%rd647, {%r5909, %r5908};
	shr.u64 	%rd648, %rd62, 7;
	xor.b64  	%rd649, %rd646, %rd648;
	xor.b64  	%rd650, %rd649, %rd647;
	add.s64 	%rd651, %rd562, %rd61;
	add.s64 	%rd652, %rd651, %rd645;
	add.s64 	%rd653, %rd652, %rd650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5910,%dummy}, %rd640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5911}, %rd640;
	}
	shf.r.wrap.b32 	%r5912, %r5911, %r5910, 19;
	shf.r.wrap.b32 	%r5913, %r5910, %r5911, 19;
	mov.b64 	%rd654, {%r5913, %r5912};
	shf.l.wrap.b32 	%r5914, %r5910, %r5911, 3;
	shf.l.wrap.b32 	%r5915, %r5911, %r5910, 3;
	mov.b64 	%rd655, {%r5915, %r5914};
	shr.u64 	%rd656, %rd640, 6;
	xor.b64  	%rd657, %rd654, %rd656;
	xor.b64  	%rd658, %rd657, %rd655;
	shf.r.wrap.b32 	%r5916, %r5757, %r5756, 1;
	shf.r.wrap.b32 	%r5917, %r5756, %r5757, 1;
	mov.b64 	%rd659, {%r5917, %r5916};
	shf.r.wrap.b32 	%r5918, %r5757, %r5756, 8;
	shf.r.wrap.b32 	%r5919, %r5756, %r5757, 8;
	mov.b64 	%rd660, {%r5919, %r5918};
	shr.u64 	%rd661, %rd63, 7;
	xor.b64  	%rd662, %rd659, %rd661;
	xor.b64  	%rd663, %rd662, %rd660;
	add.s64 	%rd664, %rd575, %rd62;
	add.s64 	%rd665, %rd664, %rd658;
	add.s64 	%rd666, %rd665, %rd663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5920,%dummy}, %rd653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5921}, %rd653;
	}
	shf.r.wrap.b32 	%r5922, %r5921, %r5920, 19;
	shf.r.wrap.b32 	%r5923, %r5920, %r5921, 19;
	mov.b64 	%rd667, {%r5923, %r5922};
	shf.l.wrap.b32 	%r5924, %r5920, %r5921, 3;
	shf.l.wrap.b32 	%r5925, %r5921, %r5920, 3;
	mov.b64 	%rd668, {%r5925, %r5924};
	shr.u64 	%rd669, %rd653, 6;
	xor.b64  	%rd670, %rd667, %rd669;
	xor.b64  	%rd671, %rd670, %rd668;
	shf.r.wrap.b32 	%r5926, %r5769, %r5768, 1;
	shf.r.wrap.b32 	%r5927, %r5768, %r5769, 1;
	mov.b64 	%rd672, {%r5927, %r5926};
	shf.r.wrap.b32 	%r5928, %r5769, %r5768, 8;
	shf.r.wrap.b32 	%r5929, %r5768, %r5769, 8;
	mov.b64 	%rd673, {%r5929, %r5928};
	shr.u64 	%rd674, %rd484, 7;
	xor.b64  	%rd675, %rd672, %rd674;
	xor.b64  	%rd676, %rd675, %rd673;
	add.s64 	%rd677, %rd588, %rd63;
	add.s64 	%rd678, %rd677, %rd671;
	add.s64 	%rd679, %rd678, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5930,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5931}, %rd460;
	}
	shf.r.wrap.b32 	%r5932, %r5931, %r5930, 14;
	shf.r.wrap.b32 	%r5933, %r5930, %r5931, 14;
	mov.b64 	%rd680, {%r5933, %r5932};
	shf.r.wrap.b32 	%r5934, %r5931, %r5930, 18;
	shf.r.wrap.b32 	%r5935, %r5930, %r5931, 18;
	mov.b64 	%rd681, {%r5935, %r5934};
	xor.b64  	%rd682, %rd681, %rd680;
	shf.l.wrap.b32 	%r5936, %r5930, %r5931, 23;
	shf.l.wrap.b32 	%r5937, %r5931, %r5930, 23;
	mov.b64 	%rd683, {%r5937, %r5936};
	xor.b64  	%rd684, %rd682, %rd683;
	xor.b64  	%rd685, %rd435, %rd410;
	and.b64  	%rd686, %rd685, %rd460;
	xor.b64  	%rd687, %rd686, %rd410;
	add.s64 	%rd688, %rd687, %rd385;
	add.s64 	%rd689, %rd688, %rd484;
	ld.const.u64 	%rd690, [k_sha512+128];
	add.s64 	%rd691, %rd689, %rd690;
	add.s64 	%rd692, %rd691, %rd684;
	add.s64 	%rd693, %rd692, %rd396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5938,%dummy}, %rd471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5939}, %rd471;
	}
	shf.r.wrap.b32 	%r5940, %r5939, %r5938, 28;
	shf.r.wrap.b32 	%r5941, %r5938, %r5939, 28;
	mov.b64 	%rd694, {%r5941, %r5940};
	shf.l.wrap.b32 	%r5942, %r5938, %r5939, 30;
	shf.l.wrap.b32 	%r5943, %r5939, %r5938, 30;
	mov.b64 	%rd695, {%r5943, %r5942};
	xor.b64  	%rd696, %rd695, %rd694;
	shf.l.wrap.b32 	%r5944, %r5938, %r5939, 25;
	shf.l.wrap.b32 	%r5945, %r5939, %r5938, 25;
	mov.b64 	%rd697, {%r5945, %r5944};
	xor.b64  	%rd698, %rd696, %rd697;
	xor.b64  	%rd699, %rd471, %rd421;
	xor.b64  	%rd700, %rd471, %rd446;
	and.b64  	%rd701, %rd700, %rd699;
	xor.b64  	%rd702, %rd701, %rd471;
	add.s64 	%rd703, %rd692, %rd702;
	add.s64 	%rd704, %rd703, %rd698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5946,%dummy}, %rd693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5947}, %rd693;
	}
	shf.r.wrap.b32 	%r5948, %r5947, %r5946, 14;
	shf.r.wrap.b32 	%r5949, %r5946, %r5947, 14;
	mov.b64 	%rd705, {%r5949, %r5948};
	shf.r.wrap.b32 	%r5950, %r5947, %r5946, 18;
	shf.r.wrap.b32 	%r5951, %r5946, %r5947, 18;
	mov.b64 	%rd706, {%r5951, %r5950};
	xor.b64  	%rd707, %rd706, %rd705;
	shf.l.wrap.b32 	%r5952, %r5946, %r5947, 23;
	shf.l.wrap.b32 	%r5953, %r5947, %r5946, 23;
	mov.b64 	%rd708, {%r5953, %r5952};
	xor.b64  	%rd709, %rd707, %rd708;
	xor.b64  	%rd710, %rd460, %rd435;
	and.b64  	%rd711, %rd693, %rd710;
	xor.b64  	%rd712, %rd711, %rd435;
	add.s64 	%rd713, %rd497, %rd410;
	ld.const.u64 	%rd714, [k_sha512+136];
	add.s64 	%rd715, %rd713, %rd714;
	add.s64 	%rd716, %rd715, %rd712;
	add.s64 	%rd717, %rd716, %rd709;
	add.s64 	%rd718, %rd717, %rd421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5954,%dummy}, %rd704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5955}, %rd704;
	}
	shf.r.wrap.b32 	%r5956, %r5955, %r5954, 28;
	shf.r.wrap.b32 	%r5957, %r5954, %r5955, 28;
	mov.b64 	%rd719, {%r5957, %r5956};
	shf.l.wrap.b32 	%r5958, %r5954, %r5955, 30;
	shf.l.wrap.b32 	%r5959, %r5955, %r5954, 30;
	mov.b64 	%rd720, {%r5959, %r5958};
	xor.b64  	%rd721, %rd720, %rd719;
	shf.l.wrap.b32 	%r5960, %r5954, %r5955, 25;
	shf.l.wrap.b32 	%r5961, %r5955, %r5954, 25;
	mov.b64 	%rd722, {%r5961, %r5960};
	xor.b64  	%rd723, %rd721, %rd722;
	xor.b64  	%rd724, %rd704, %rd446;
	xor.b64  	%rd725, %rd704, %rd471;
	and.b64  	%rd726, %rd725, %rd724;
	xor.b64  	%rd727, %rd726, %rd704;
	add.s64 	%rd728, %rd717, %rd727;
	add.s64 	%rd729, %rd728, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5962,%dummy}, %rd718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5963}, %rd718;
	}
	shf.r.wrap.b32 	%r5964, %r5963, %r5962, 14;
	shf.r.wrap.b32 	%r5965, %r5962, %r5963, 14;
	mov.b64 	%rd730, {%r5965, %r5964};
	shf.r.wrap.b32 	%r5966, %r5963, %r5962, 18;
	shf.r.wrap.b32 	%r5967, %r5962, %r5963, 18;
	mov.b64 	%rd731, {%r5967, %r5966};
	xor.b64  	%rd732, %rd731, %rd730;
	shf.l.wrap.b32 	%r5968, %r5962, %r5963, 23;
	shf.l.wrap.b32 	%r5969, %r5963, %r5962, 23;
	mov.b64 	%rd733, {%r5969, %r5968};
	xor.b64  	%rd734, %rd732, %rd733;
	xor.b64  	%rd735, %rd693, %rd460;
	and.b64  	%rd736, %rd718, %rd735;
	xor.b64  	%rd737, %rd736, %rd460;
	add.s64 	%rd738, %rd510, %rd435;
	ld.const.u64 	%rd739, [k_sha512+144];
	add.s64 	%rd740, %rd738, %rd739;
	add.s64 	%rd741, %rd740, %rd737;
	add.s64 	%rd742, %rd741, %rd734;
	add.s64 	%rd743, %rd742, %rd446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5970,%dummy}, %rd729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5971}, %rd729;
	}
	shf.r.wrap.b32 	%r5972, %r5971, %r5970, 28;
	shf.r.wrap.b32 	%r5973, %r5970, %r5971, 28;
	mov.b64 	%rd744, {%r5973, %r5972};
	shf.l.wrap.b32 	%r5974, %r5970, %r5971, 30;
	shf.l.wrap.b32 	%r5975, %r5971, %r5970, 30;
	mov.b64 	%rd745, {%r5975, %r5974};
	xor.b64  	%rd746, %rd745, %rd744;
	shf.l.wrap.b32 	%r5976, %r5970, %r5971, 25;
	shf.l.wrap.b32 	%r5977, %r5971, %r5970, 25;
	mov.b64 	%rd747, {%r5977, %r5976};
	xor.b64  	%rd748, %rd746, %rd747;
	xor.b64  	%rd749, %rd729, %rd471;
	xor.b64  	%rd750, %rd729, %rd704;
	and.b64  	%rd751, %rd750, %rd749;
	xor.b64  	%rd752, %rd751, %rd729;
	add.s64 	%rd753, %rd742, %rd752;
	add.s64 	%rd754, %rd753, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5978,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5979}, %rd743;
	}
	shf.r.wrap.b32 	%r5980, %r5979, %r5978, 14;
	shf.r.wrap.b32 	%r5981, %r5978, %r5979, 14;
	mov.b64 	%rd755, {%r5981, %r5980};
	shf.r.wrap.b32 	%r5982, %r5979, %r5978, 18;
	shf.r.wrap.b32 	%r5983, %r5978, %r5979, 18;
	mov.b64 	%rd756, {%r5983, %r5982};
	xor.b64  	%rd757, %rd756, %rd755;
	shf.l.wrap.b32 	%r5984, %r5978, %r5979, 23;
	shf.l.wrap.b32 	%r5985, %r5979, %r5978, 23;
	mov.b64 	%rd758, {%r5985, %r5984};
	xor.b64  	%rd759, %rd757, %rd758;
	xor.b64  	%rd760, %rd718, %rd693;
	and.b64  	%rd761, %rd743, %rd760;
	xor.b64  	%rd762, %rd761, %rd693;
	add.s64 	%rd763, %rd523, %rd460;
	ld.const.u64 	%rd764, [k_sha512+152];
	add.s64 	%rd765, %rd763, %rd764;
	add.s64 	%rd766, %rd765, %rd762;
	add.s64 	%rd767, %rd766, %rd759;
	add.s64 	%rd768, %rd767, %rd471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5986,%dummy}, %rd754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5987}, %rd754;
	}
	shf.r.wrap.b32 	%r5988, %r5987, %r5986, 28;
	shf.r.wrap.b32 	%r5989, %r5986, %r5987, 28;
	mov.b64 	%rd769, {%r5989, %r5988};
	shf.l.wrap.b32 	%r5990, %r5986, %r5987, 30;
	shf.l.wrap.b32 	%r5991, %r5987, %r5986, 30;
	mov.b64 	%rd770, {%r5991, %r5990};
	xor.b64  	%rd771, %rd770, %rd769;
	shf.l.wrap.b32 	%r5992, %r5986, %r5987, 25;
	shf.l.wrap.b32 	%r5993, %r5987, %r5986, 25;
	mov.b64 	%rd772, {%r5993, %r5992};
	xor.b64  	%rd773, %rd771, %rd772;
	xor.b64  	%rd774, %rd754, %rd704;
	xor.b64  	%rd775, %rd754, %rd729;
	and.b64  	%rd776, %rd775, %rd774;
	xor.b64  	%rd777, %rd776, %rd754;
	add.s64 	%rd778, %rd767, %rd777;
	add.s64 	%rd779, %rd778, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5995}, %rd768;
	}
	shf.r.wrap.b32 	%r5996, %r5995, %r5994, 14;
	shf.r.wrap.b32 	%r5997, %r5994, %r5995, 14;
	mov.b64 	%rd780, {%r5997, %r5996};
	shf.r.wrap.b32 	%r5998, %r5995, %r5994, 18;
	shf.r.wrap.b32 	%r5999, %r5994, %r5995, 18;
	mov.b64 	%rd781, {%r5999, %r5998};
	xor.b64  	%rd782, %rd781, %rd780;
	shf.l.wrap.b32 	%r6000, %r5994, %r5995, 23;
	shf.l.wrap.b32 	%r6001, %r5995, %r5994, 23;
	mov.b64 	%rd783, {%r6001, %r6000};
	xor.b64  	%rd784, %rd782, %rd783;
	xor.b64  	%rd785, %rd743, %rd718;
	and.b64  	%rd786, %rd768, %rd785;
	xor.b64  	%rd787, %rd786, %rd718;
	add.s64 	%rd788, %rd693, %rd536;
	ld.const.u64 	%rd789, [k_sha512+160];
	add.s64 	%rd790, %rd788, %rd789;
	add.s64 	%rd791, %rd790, %rd787;
	add.s64 	%rd792, %rd791, %rd784;
	add.s64 	%rd793, %rd792, %rd704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6003}, %rd779;
	}
	shf.r.wrap.b32 	%r6004, %r6003, %r6002, 28;
	shf.r.wrap.b32 	%r6005, %r6002, %r6003, 28;
	mov.b64 	%rd794, {%r6005, %r6004};
	shf.l.wrap.b32 	%r6006, %r6002, %r6003, 30;
	shf.l.wrap.b32 	%r6007, %r6003, %r6002, 30;
	mov.b64 	%rd795, {%r6007, %r6006};
	xor.b64  	%rd796, %rd795, %rd794;
	shf.l.wrap.b32 	%r6008, %r6002, %r6003, 25;
	shf.l.wrap.b32 	%r6009, %r6003, %r6002, 25;
	mov.b64 	%rd797, {%r6009, %r6008};
	xor.b64  	%rd798, %rd796, %rd797;
	xor.b64  	%rd799, %rd779, %rd729;
	xor.b64  	%rd800, %rd779, %rd754;
	and.b64  	%rd801, %rd800, %rd799;
	xor.b64  	%rd802, %rd801, %rd779;
	add.s64 	%rd803, %rd792, %rd802;
	add.s64 	%rd804, %rd803, %rd798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6010,%dummy}, %rd793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6011}, %rd793;
	}
	shf.r.wrap.b32 	%r6012, %r6011, %r6010, 14;
	shf.r.wrap.b32 	%r6013, %r6010, %r6011, 14;
	mov.b64 	%rd805, {%r6013, %r6012};
	shf.r.wrap.b32 	%r6014, %r6011, %r6010, 18;
	shf.r.wrap.b32 	%r6015, %r6010, %r6011, 18;
	mov.b64 	%rd806, {%r6015, %r6014};
	xor.b64  	%rd807, %rd806, %rd805;
	shf.l.wrap.b32 	%r6016, %r6010, %r6011, 23;
	shf.l.wrap.b32 	%r6017, %r6011, %r6010, 23;
	mov.b64 	%rd808, {%r6017, %r6016};
	xor.b64  	%rd809, %rd807, %rd808;
	xor.b64  	%rd810, %rd768, %rd743;
	and.b64  	%rd811, %rd793, %rd810;
	xor.b64  	%rd812, %rd811, %rd743;
	add.s64 	%rd813, %rd718, %rd549;
	ld.const.u64 	%rd814, [k_sha512+168];
	add.s64 	%rd815, %rd813, %rd814;
	add.s64 	%rd816, %rd815, %rd812;
	add.s64 	%rd817, %rd816, %rd809;
	add.s64 	%rd818, %rd817, %rd729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6018,%dummy}, %rd804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6019}, %rd804;
	}
	shf.r.wrap.b32 	%r6020, %r6019, %r6018, 28;
	shf.r.wrap.b32 	%r6021, %r6018, %r6019, 28;
	mov.b64 	%rd819, {%r6021, %r6020};
	shf.l.wrap.b32 	%r6022, %r6018, %r6019, 30;
	shf.l.wrap.b32 	%r6023, %r6019, %r6018, 30;
	mov.b64 	%rd820, {%r6023, %r6022};
	xor.b64  	%rd821, %rd820, %rd819;
	shf.l.wrap.b32 	%r6024, %r6018, %r6019, 25;
	shf.l.wrap.b32 	%r6025, %r6019, %r6018, 25;
	mov.b64 	%rd822, {%r6025, %r6024};
	xor.b64  	%rd823, %rd821, %rd822;
	xor.b64  	%rd824, %rd804, %rd754;
	xor.b64  	%rd825, %rd804, %rd779;
	and.b64  	%rd826, %rd825, %rd824;
	xor.b64  	%rd827, %rd826, %rd804;
	add.s64 	%rd828, %rd817, %rd827;
	add.s64 	%rd829, %rd828, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6026,%dummy}, %rd818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6027}, %rd818;
	}
	shf.r.wrap.b32 	%r6028, %r6027, %r6026, 14;
	shf.r.wrap.b32 	%r6029, %r6026, %r6027, 14;
	mov.b64 	%rd830, {%r6029, %r6028};
	shf.r.wrap.b32 	%r6030, %r6027, %r6026, 18;
	shf.r.wrap.b32 	%r6031, %r6026, %r6027, 18;
	mov.b64 	%rd831, {%r6031, %r6030};
	xor.b64  	%rd832, %rd831, %rd830;
	shf.l.wrap.b32 	%r6032, %r6026, %r6027, 23;
	shf.l.wrap.b32 	%r6033, %r6027, %r6026, 23;
	mov.b64 	%rd833, {%r6033, %r6032};
	xor.b64  	%rd834, %rd832, %rd833;
	xor.b64  	%rd835, %rd793, %rd768;
	and.b64  	%rd836, %rd818, %rd835;
	xor.b64  	%rd837, %rd836, %rd768;
	add.s64 	%rd838, %rd743, %rd562;
	ld.const.u64 	%rd839, [k_sha512+176];
	add.s64 	%rd840, %rd838, %rd839;
	add.s64 	%rd841, %rd840, %rd837;
	add.s64 	%rd842, %rd841, %rd834;
	add.s64 	%rd843, %rd842, %rd754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6034,%dummy}, %rd829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6035}, %rd829;
	}
	shf.r.wrap.b32 	%r6036, %r6035, %r6034, 28;
	shf.r.wrap.b32 	%r6037, %r6034, %r6035, 28;
	mov.b64 	%rd844, {%r6037, %r6036};
	shf.l.wrap.b32 	%r6038, %r6034, %r6035, 30;
	shf.l.wrap.b32 	%r6039, %r6035, %r6034, 30;
	mov.b64 	%rd845, {%r6039, %r6038};
	xor.b64  	%rd846, %rd845, %rd844;
	shf.l.wrap.b32 	%r6040, %r6034, %r6035, 25;
	shf.l.wrap.b32 	%r6041, %r6035, %r6034, 25;
	mov.b64 	%rd847, {%r6041, %r6040};
	xor.b64  	%rd848, %rd846, %rd847;
	xor.b64  	%rd849, %rd829, %rd779;
	xor.b64  	%rd850, %rd829, %rd804;
	and.b64  	%rd851, %rd850, %rd849;
	xor.b64  	%rd852, %rd851, %rd829;
	add.s64 	%rd853, %rd842, %rd852;
	add.s64 	%rd854, %rd853, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6042,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6043}, %rd843;
	}
	shf.r.wrap.b32 	%r6044, %r6043, %r6042, 14;
	shf.r.wrap.b32 	%r6045, %r6042, %r6043, 14;
	mov.b64 	%rd855, {%r6045, %r6044};
	shf.r.wrap.b32 	%r6046, %r6043, %r6042, 18;
	shf.r.wrap.b32 	%r6047, %r6042, %r6043, 18;
	mov.b64 	%rd856, {%r6047, %r6046};
	xor.b64  	%rd857, %rd856, %rd855;
	shf.l.wrap.b32 	%r6048, %r6042, %r6043, 23;
	shf.l.wrap.b32 	%r6049, %r6043, %r6042, 23;
	mov.b64 	%rd858, {%r6049, %r6048};
	xor.b64  	%rd859, %rd857, %rd858;
	xor.b64  	%rd860, %rd818, %rd793;
	and.b64  	%rd861, %rd843, %rd860;
	xor.b64  	%rd862, %rd861, %rd793;
	add.s64 	%rd863, %rd768, %rd575;
	ld.const.u64 	%rd864, [k_sha512+184];
	add.s64 	%rd865, %rd863, %rd864;
	add.s64 	%rd866, %rd865, %rd862;
	add.s64 	%rd867, %rd866, %rd859;
	add.s64 	%rd868, %rd867, %rd779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6050,%dummy}, %rd854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6051}, %rd854;
	}
	shf.r.wrap.b32 	%r6052, %r6051, %r6050, 28;
	shf.r.wrap.b32 	%r6053, %r6050, %r6051, 28;
	mov.b64 	%rd869, {%r6053, %r6052};
	shf.l.wrap.b32 	%r6054, %r6050, %r6051, 30;
	shf.l.wrap.b32 	%r6055, %r6051, %r6050, 30;
	mov.b64 	%rd870, {%r6055, %r6054};
	xor.b64  	%rd871, %rd870, %rd869;
	shf.l.wrap.b32 	%r6056, %r6050, %r6051, 25;
	shf.l.wrap.b32 	%r6057, %r6051, %r6050, 25;
	mov.b64 	%rd872, {%r6057, %r6056};
	xor.b64  	%rd873, %rd871, %rd872;
	xor.b64  	%rd874, %rd854, %rd804;
	xor.b64  	%rd875, %rd854, %rd829;
	and.b64  	%rd876, %rd875, %rd874;
	xor.b64  	%rd877, %rd876, %rd854;
	add.s64 	%rd878, %rd867, %rd877;
	add.s64 	%rd879, %rd878, %rd873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6058,%dummy}, %rd868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6059}, %rd868;
	}
	shf.r.wrap.b32 	%r6060, %r6059, %r6058, 14;
	shf.r.wrap.b32 	%r6061, %r6058, %r6059, 14;
	mov.b64 	%rd880, {%r6061, %r6060};
	shf.r.wrap.b32 	%r6062, %r6059, %r6058, 18;
	shf.r.wrap.b32 	%r6063, %r6058, %r6059, 18;
	mov.b64 	%rd881, {%r6063, %r6062};
	xor.b64  	%rd882, %rd881, %rd880;
	shf.l.wrap.b32 	%r6064, %r6058, %r6059, 23;
	shf.l.wrap.b32 	%r6065, %r6059, %r6058, 23;
	mov.b64 	%rd883, {%r6065, %r6064};
	xor.b64  	%rd884, %rd882, %rd883;
	xor.b64  	%rd885, %rd843, %rd818;
	and.b64  	%rd886, %rd868, %rd885;
	xor.b64  	%rd887, %rd886, %rd818;
	add.s64 	%rd888, %rd793, %rd588;
	ld.const.u64 	%rd889, [k_sha512+192];
	add.s64 	%rd890, %rd888, %rd889;
	add.s64 	%rd891, %rd890, %rd887;
	add.s64 	%rd892, %rd891, %rd884;
	add.s64 	%rd893, %rd892, %rd804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6066,%dummy}, %rd879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6067}, %rd879;
	}
	shf.r.wrap.b32 	%r6068, %r6067, %r6066, 28;
	shf.r.wrap.b32 	%r6069, %r6066, %r6067, 28;
	mov.b64 	%rd894, {%r6069, %r6068};
	shf.l.wrap.b32 	%r6070, %r6066, %r6067, 30;
	shf.l.wrap.b32 	%r6071, %r6067, %r6066, 30;
	mov.b64 	%rd895, {%r6071, %r6070};
	xor.b64  	%rd896, %rd895, %rd894;
	shf.l.wrap.b32 	%r6072, %r6066, %r6067, 25;
	shf.l.wrap.b32 	%r6073, %r6067, %r6066, 25;
	mov.b64 	%rd897, {%r6073, %r6072};
	xor.b64  	%rd898, %rd896, %rd897;
	xor.b64  	%rd899, %rd879, %rd829;
	xor.b64  	%rd900, %rd879, %rd854;
	and.b64  	%rd901, %rd900, %rd899;
	xor.b64  	%rd902, %rd901, %rd879;
	add.s64 	%rd903, %rd892, %rd902;
	add.s64 	%rd904, %rd903, %rd898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6074,%dummy}, %rd893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6075}, %rd893;
	}
	shf.r.wrap.b32 	%r6076, %r6075, %r6074, 14;
	shf.r.wrap.b32 	%r6077, %r6074, %r6075, 14;
	mov.b64 	%rd905, {%r6077, %r6076};
	shf.r.wrap.b32 	%r6078, %r6075, %r6074, 18;
	shf.r.wrap.b32 	%r6079, %r6074, %r6075, 18;
	mov.b64 	%rd906, {%r6079, %r6078};
	xor.b64  	%rd907, %rd906, %rd905;
	shf.l.wrap.b32 	%r6080, %r6074, %r6075, 23;
	shf.l.wrap.b32 	%r6081, %r6075, %r6074, 23;
	mov.b64 	%rd908, {%r6081, %r6080};
	xor.b64  	%rd909, %rd907, %rd908;
	xor.b64  	%rd910, %rd868, %rd843;
	and.b64  	%rd911, %rd893, %rd910;
	xor.b64  	%rd912, %rd911, %rd843;
	add.s64 	%rd913, %rd818, %rd601;
	ld.const.u64 	%rd914, [k_sha512+200];
	add.s64 	%rd915, %rd913, %rd914;
	add.s64 	%rd916, %rd915, %rd912;
	add.s64 	%rd917, %rd916, %rd909;
	add.s64 	%rd918, %rd917, %rd829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6082,%dummy}, %rd904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6083}, %rd904;
	}
	shf.r.wrap.b32 	%r6084, %r6083, %r6082, 28;
	shf.r.wrap.b32 	%r6085, %r6082, %r6083, 28;
	mov.b64 	%rd919, {%r6085, %r6084};
	shf.l.wrap.b32 	%r6086, %r6082, %r6083, 30;
	shf.l.wrap.b32 	%r6087, %r6083, %r6082, 30;
	mov.b64 	%rd920, {%r6087, %r6086};
	xor.b64  	%rd921, %rd920, %rd919;
	shf.l.wrap.b32 	%r6088, %r6082, %r6083, 25;
	shf.l.wrap.b32 	%r6089, %r6083, %r6082, 25;
	mov.b64 	%rd922, {%r6089, %r6088};
	xor.b64  	%rd923, %rd921, %rd922;
	xor.b64  	%rd924, %rd904, %rd854;
	xor.b64  	%rd925, %rd904, %rd879;
	and.b64  	%rd926, %rd925, %rd924;
	xor.b64  	%rd927, %rd926, %rd904;
	add.s64 	%rd928, %rd917, %rd927;
	add.s64 	%rd929, %rd928, %rd923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6090,%dummy}, %rd918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6091}, %rd918;
	}
	shf.r.wrap.b32 	%r6092, %r6091, %r6090, 14;
	shf.r.wrap.b32 	%r6093, %r6090, %r6091, 14;
	mov.b64 	%rd930, {%r6093, %r6092};
	shf.r.wrap.b32 	%r6094, %r6091, %r6090, 18;
	shf.r.wrap.b32 	%r6095, %r6090, %r6091, 18;
	mov.b64 	%rd931, {%r6095, %r6094};
	xor.b64  	%rd932, %rd931, %rd930;
	shf.l.wrap.b32 	%r6096, %r6090, %r6091, 23;
	shf.l.wrap.b32 	%r6097, %r6091, %r6090, 23;
	mov.b64 	%rd933, {%r6097, %r6096};
	xor.b64  	%rd934, %rd932, %rd933;
	xor.b64  	%rd935, %rd893, %rd868;
	and.b64  	%rd936, %rd918, %rd935;
	xor.b64  	%rd937, %rd936, %rd868;
	add.s64 	%rd938, %rd843, %rd614;
	ld.const.u64 	%rd939, [k_sha512+208];
	add.s64 	%rd940, %rd938, %rd939;
	add.s64 	%rd941, %rd940, %rd937;
	add.s64 	%rd942, %rd941, %rd934;
	add.s64 	%rd943, %rd942, %rd854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6098,%dummy}, %rd929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6099}, %rd929;
	}
	shf.r.wrap.b32 	%r6100, %r6099, %r6098, 28;
	shf.r.wrap.b32 	%r6101, %r6098, %r6099, 28;
	mov.b64 	%rd944, {%r6101, %r6100};
	shf.l.wrap.b32 	%r6102, %r6098, %r6099, 30;
	shf.l.wrap.b32 	%r6103, %r6099, %r6098, 30;
	mov.b64 	%rd945, {%r6103, %r6102};
	xor.b64  	%rd946, %rd945, %rd944;
	shf.l.wrap.b32 	%r6104, %r6098, %r6099, 25;
	shf.l.wrap.b32 	%r6105, %r6099, %r6098, 25;
	mov.b64 	%rd947, {%r6105, %r6104};
	xor.b64  	%rd948, %rd946, %rd947;
	xor.b64  	%rd949, %rd929, %rd879;
	xor.b64  	%rd950, %rd929, %rd904;
	and.b64  	%rd951, %rd950, %rd949;
	xor.b64  	%rd952, %rd951, %rd929;
	add.s64 	%rd953, %rd942, %rd952;
	add.s64 	%rd954, %rd953, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6106,%dummy}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6107}, %rd943;
	}
	shf.r.wrap.b32 	%r6108, %r6107, %r6106, 14;
	shf.r.wrap.b32 	%r6109, %r6106, %r6107, 14;
	mov.b64 	%rd955, {%r6109, %r6108};
	shf.r.wrap.b32 	%r6110, %r6107, %r6106, 18;
	shf.r.wrap.b32 	%r6111, %r6106, %r6107, 18;
	mov.b64 	%rd956, {%r6111, %r6110};
	xor.b64  	%rd957, %rd956, %rd955;
	shf.l.wrap.b32 	%r6112, %r6106, %r6107, 23;
	shf.l.wrap.b32 	%r6113, %r6107, %r6106, 23;
	mov.b64 	%rd958, {%r6113, %r6112};
	xor.b64  	%rd959, %rd957, %rd958;
	xor.b64  	%rd960, %rd918, %rd893;
	and.b64  	%rd961, %rd943, %rd960;
	xor.b64  	%rd962, %rd961, %rd893;
	add.s64 	%rd963, %rd868, %rd627;
	ld.const.u64 	%rd964, [k_sha512+216];
	add.s64 	%rd965, %rd963, %rd964;
	add.s64 	%rd966, %rd965, %rd962;
	add.s64 	%rd967, %rd966, %rd959;
	add.s64 	%rd968, %rd967, %rd879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6114,%dummy}, %rd954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6115}, %rd954;
	}
	shf.r.wrap.b32 	%r6116, %r6115, %r6114, 28;
	shf.r.wrap.b32 	%r6117, %r6114, %r6115, 28;
	mov.b64 	%rd969, {%r6117, %r6116};
	shf.l.wrap.b32 	%r6118, %r6114, %r6115, 30;
	shf.l.wrap.b32 	%r6119, %r6115, %r6114, 30;
	mov.b64 	%rd970, {%r6119, %r6118};
	xor.b64  	%rd971, %rd970, %rd969;
	shf.l.wrap.b32 	%r6120, %r6114, %r6115, 25;
	shf.l.wrap.b32 	%r6121, %r6115, %r6114, 25;
	mov.b64 	%rd972, {%r6121, %r6120};
	xor.b64  	%rd973, %rd971, %rd972;
	xor.b64  	%rd974, %rd954, %rd904;
	xor.b64  	%rd975, %rd954, %rd929;
	and.b64  	%rd976, %rd975, %rd974;
	xor.b64  	%rd977, %rd976, %rd954;
	add.s64 	%rd978, %rd967, %rd977;
	add.s64 	%rd979, %rd978, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6122,%dummy}, %rd968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6123}, %rd968;
	}
	shf.r.wrap.b32 	%r6124, %r6123, %r6122, 14;
	shf.r.wrap.b32 	%r6125, %r6122, %r6123, 14;
	mov.b64 	%rd980, {%r6125, %r6124};
	shf.r.wrap.b32 	%r6126, %r6123, %r6122, 18;
	shf.r.wrap.b32 	%r6127, %r6122, %r6123, 18;
	mov.b64 	%rd981, {%r6127, %r6126};
	xor.b64  	%rd982, %rd981, %rd980;
	shf.l.wrap.b32 	%r6128, %r6122, %r6123, 23;
	shf.l.wrap.b32 	%r6129, %r6123, %r6122, 23;
	mov.b64 	%rd983, {%r6129, %r6128};
	xor.b64  	%rd984, %rd982, %rd983;
	xor.b64  	%rd985, %rd943, %rd918;
	and.b64  	%rd986, %rd968, %rd985;
	xor.b64  	%rd987, %rd986, %rd918;
	add.s64 	%rd988, %rd893, %rd640;
	ld.const.u64 	%rd989, [k_sha512+224];
	add.s64 	%rd990, %rd988, %rd989;
	add.s64 	%rd991, %rd990, %rd987;
	add.s64 	%rd992, %rd991, %rd984;
	add.s64 	%rd993, %rd992, %rd904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6130,%dummy}, %rd979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6131}, %rd979;
	}
	shf.r.wrap.b32 	%r6132, %r6131, %r6130, 28;
	shf.r.wrap.b32 	%r6133, %r6130, %r6131, 28;
	mov.b64 	%rd994, {%r6133, %r6132};
	shf.l.wrap.b32 	%r6134, %r6130, %r6131, 30;
	shf.l.wrap.b32 	%r6135, %r6131, %r6130, 30;
	mov.b64 	%rd995, {%r6135, %r6134};
	xor.b64  	%rd996, %rd995, %rd994;
	shf.l.wrap.b32 	%r6136, %r6130, %r6131, 25;
	shf.l.wrap.b32 	%r6137, %r6131, %r6130, 25;
	mov.b64 	%rd997, {%r6137, %r6136};
	xor.b64  	%rd998, %rd996, %rd997;
	xor.b64  	%rd999, %rd979, %rd929;
	xor.b64  	%rd1000, %rd979, %rd954;
	and.b64  	%rd1001, %rd1000, %rd999;
	xor.b64  	%rd1002, %rd1001, %rd979;
	add.s64 	%rd1003, %rd992, %rd1002;
	add.s64 	%rd1004, %rd1003, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6138,%dummy}, %rd993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6139}, %rd993;
	}
	shf.r.wrap.b32 	%r6140, %r6139, %r6138, 14;
	shf.r.wrap.b32 	%r6141, %r6138, %r6139, 14;
	mov.b64 	%rd1005, {%r6141, %r6140};
	shf.r.wrap.b32 	%r6142, %r6139, %r6138, 18;
	shf.r.wrap.b32 	%r6143, %r6138, %r6139, 18;
	mov.b64 	%rd1006, {%r6143, %r6142};
	xor.b64  	%rd1007, %rd1006, %rd1005;
	shf.l.wrap.b32 	%r6144, %r6138, %r6139, 23;
	shf.l.wrap.b32 	%r6145, %r6139, %r6138, 23;
	mov.b64 	%rd1008, {%r6145, %r6144};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	xor.b64  	%rd1010, %rd968, %rd943;
	and.b64  	%rd1011, %rd993, %rd1010;
	xor.b64  	%rd1012, %rd1011, %rd943;
	add.s64 	%rd1013, %rd918, %rd653;
	ld.const.u64 	%rd1014, [k_sha512+232];
	add.s64 	%rd1015, %rd1013, %rd1014;
	add.s64 	%rd1016, %rd1015, %rd1012;
	add.s64 	%rd1017, %rd1016, %rd1009;
	add.s64 	%rd1018, %rd1017, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6146,%dummy}, %rd1004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6147}, %rd1004;
	}
	shf.r.wrap.b32 	%r6148, %r6147, %r6146, 28;
	shf.r.wrap.b32 	%r6149, %r6146, %r6147, 28;
	mov.b64 	%rd1019, {%r6149, %r6148};
	shf.l.wrap.b32 	%r6150, %r6146, %r6147, 30;
	shf.l.wrap.b32 	%r6151, %r6147, %r6146, 30;
	mov.b64 	%rd1020, {%r6151, %r6150};
	xor.b64  	%rd1021, %rd1020, %rd1019;
	shf.l.wrap.b32 	%r6152, %r6146, %r6147, 25;
	shf.l.wrap.b32 	%r6153, %r6147, %r6146, 25;
	mov.b64 	%rd1022, {%r6153, %r6152};
	xor.b64  	%rd1023, %rd1021, %rd1022;
	xor.b64  	%rd1024, %rd1004, %rd954;
	xor.b64  	%rd1025, %rd1004, %rd979;
	and.b64  	%rd1026, %rd1025, %rd1024;
	xor.b64  	%rd1027, %rd1026, %rd1004;
	add.s64 	%rd1028, %rd1017, %rd1027;
	add.s64 	%rd1029, %rd1028, %rd1023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6154,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6155}, %rd1018;
	}
	shf.r.wrap.b32 	%r6156, %r6155, %r6154, 14;
	shf.r.wrap.b32 	%r6157, %r6154, %r6155, 14;
	mov.b64 	%rd1030, {%r6157, %r6156};
	shf.r.wrap.b32 	%r6158, %r6155, %r6154, 18;
	shf.r.wrap.b32 	%r6159, %r6154, %r6155, 18;
	mov.b64 	%rd1031, {%r6159, %r6158};
	xor.b64  	%rd1032, %rd1031, %rd1030;
	shf.l.wrap.b32 	%r6160, %r6154, %r6155, 23;
	shf.l.wrap.b32 	%r6161, %r6155, %r6154, 23;
	mov.b64 	%rd1033, {%r6161, %r6160};
	xor.b64  	%rd1034, %rd1032, %rd1033;
	xor.b64  	%rd1035, %rd993, %rd968;
	and.b64  	%rd1036, %rd1018, %rd1035;
	xor.b64  	%rd1037, %rd1036, %rd968;
	add.s64 	%rd1038, %rd943, %rd666;
	ld.const.u64 	%rd1039, [k_sha512+240];
	add.s64 	%rd1040, %rd1038, %rd1039;
	add.s64 	%rd1041, %rd1040, %rd1037;
	add.s64 	%rd1042, %rd1041, %rd1034;
	add.s64 	%rd1043, %rd1042, %rd954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6162,%dummy}, %rd1029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6163}, %rd1029;
	}
	shf.r.wrap.b32 	%r6164, %r6163, %r6162, 28;
	shf.r.wrap.b32 	%r6165, %r6162, %r6163, 28;
	mov.b64 	%rd1044, {%r6165, %r6164};
	shf.l.wrap.b32 	%r6166, %r6162, %r6163, 30;
	shf.l.wrap.b32 	%r6167, %r6163, %r6162, 30;
	mov.b64 	%rd1045, {%r6167, %r6166};
	xor.b64  	%rd1046, %rd1045, %rd1044;
	shf.l.wrap.b32 	%r6168, %r6162, %r6163, 25;
	shf.l.wrap.b32 	%r6169, %r6163, %r6162, 25;
	mov.b64 	%rd1047, {%r6169, %r6168};
	xor.b64  	%rd1048, %rd1046, %rd1047;
	xor.b64  	%rd1049, %rd1029, %rd979;
	xor.b64  	%rd1050, %rd1029, %rd1004;
	and.b64  	%rd1051, %rd1050, %rd1049;
	xor.b64  	%rd1052, %rd1051, %rd1029;
	add.s64 	%rd1053, %rd1042, %rd1052;
	add.s64 	%rd1054, %rd1053, %rd1048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6170,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6171}, %rd1043;
	}
	shf.r.wrap.b32 	%r6172, %r6171, %r6170, 14;
	shf.r.wrap.b32 	%r6173, %r6170, %r6171, 14;
	mov.b64 	%rd1055, {%r6173, %r6172};
	shf.r.wrap.b32 	%r6174, %r6171, %r6170, 18;
	shf.r.wrap.b32 	%r6175, %r6170, %r6171, 18;
	mov.b64 	%rd1056, {%r6175, %r6174};
	xor.b64  	%rd1057, %rd1056, %rd1055;
	shf.l.wrap.b32 	%r6176, %r6170, %r6171, 23;
	shf.l.wrap.b32 	%r6177, %r6171, %r6170, 23;
	mov.b64 	%rd1058, {%r6177, %r6176};
	xor.b64  	%rd1059, %rd1057, %rd1058;
	xor.b64  	%rd1060, %rd1018, %rd993;
	and.b64  	%rd1061, %rd1043, %rd1060;
	xor.b64  	%rd1062, %rd1061, %rd993;
	add.s64 	%rd1063, %rd968, %rd679;
	ld.const.u64 	%rd1064, [k_sha512+248];
	add.s64 	%rd1065, %rd1063, %rd1064;
	add.s64 	%rd1066, %rd1065, %rd1062;
	add.s64 	%rd1067, %rd1066, %rd1059;
	add.s64 	%rd1068, %rd1067, %rd979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6178,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6179}, %rd1054;
	}
	shf.r.wrap.b32 	%r6180, %r6179, %r6178, 28;
	shf.r.wrap.b32 	%r6181, %r6178, %r6179, 28;
	mov.b64 	%rd1069, {%r6181, %r6180};
	shf.l.wrap.b32 	%r6182, %r6178, %r6179, 30;
	shf.l.wrap.b32 	%r6183, %r6179, %r6178, 30;
	mov.b64 	%rd1070, {%r6183, %r6182};
	xor.b64  	%rd1071, %rd1070, %rd1069;
	shf.l.wrap.b32 	%r6184, %r6178, %r6179, 25;
	shf.l.wrap.b32 	%r6185, %r6179, %r6178, 25;
	mov.b64 	%rd1072, {%r6185, %r6184};
	xor.b64  	%rd1073, %rd1071, %rd1072;
	xor.b64  	%rd1074, %rd1054, %rd1004;
	xor.b64  	%rd1075, %rd1054, %rd1029;
	and.b64  	%rd1076, %rd1075, %rd1074;
	xor.b64  	%rd1077, %rd1076, %rd1054;
	add.s64 	%rd1078, %rd1067, %rd1077;
	add.s64 	%rd1079, %rd1078, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6186,%dummy}, %rd666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6187}, %rd666;
	}
	shf.r.wrap.b32 	%r6188, %r6187, %r6186, 19;
	shf.r.wrap.b32 	%r6189, %r6186, %r6187, 19;
	mov.b64 	%rd1080, {%r6189, %r6188};
	shf.l.wrap.b32 	%r6190, %r6186, %r6187, 3;
	shf.l.wrap.b32 	%r6191, %r6187, %r6186, 3;
	mov.b64 	%rd1081, {%r6191, %r6190};
	shr.u64 	%rd1082, %rd666, 6;
	xor.b64  	%rd1083, %rd1080, %rd1082;
	xor.b64  	%rd1084, %rd1083, %rd1081;
	shf.r.wrap.b32 	%r6192, %r5781, %r5780, 1;
	shf.r.wrap.b32 	%r6193, %r5780, %r5781, 1;
	mov.b64 	%rd1085, {%r6193, %r6192};
	shf.r.wrap.b32 	%r6194, %r5781, %r5780, 8;
	shf.r.wrap.b32 	%r6195, %r5780, %r5781, 8;
	mov.b64 	%rd1086, {%r6195, %r6194};
	shr.u64 	%rd1087, %rd497, 7;
	xor.b64  	%rd1088, %rd1085, %rd1087;
	xor.b64  	%rd1089, %rd1088, %rd1086;
	add.s64 	%rd1090, %rd601, %rd484;
	add.s64 	%rd1091, %rd1090, %rd1084;
	add.s64 	%rd1092, %rd1091, %rd1089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6196,%dummy}, %rd679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6197}, %rd679;
	}
	shf.r.wrap.b32 	%r6198, %r6197, %r6196, 19;
	shf.r.wrap.b32 	%r6199, %r6196, %r6197, 19;
	mov.b64 	%rd1093, {%r6199, %r6198};
	shf.l.wrap.b32 	%r6200, %r6196, %r6197, 3;
	shf.l.wrap.b32 	%r6201, %r6197, %r6196, 3;
	mov.b64 	%rd1094, {%r6201, %r6200};
	shr.u64 	%rd1095, %rd679, 6;
	xor.b64  	%rd1096, %rd1093, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1094;
	shf.r.wrap.b32 	%r6202, %r5793, %r5792, 1;
	shf.r.wrap.b32 	%r6203, %r5792, %r5793, 1;
	mov.b64 	%rd1098, {%r6203, %r6202};
	shf.r.wrap.b32 	%r6204, %r5793, %r5792, 8;
	shf.r.wrap.b32 	%r6205, %r5792, %r5793, 8;
	mov.b64 	%rd1099, {%r6205, %r6204};
	shr.u64 	%rd1100, %rd510, 7;
	xor.b64  	%rd1101, %rd1098, %rd1100;
	xor.b64  	%rd1102, %rd1101, %rd1099;
	add.s64 	%rd1103, %rd614, %rd497;
	add.s64 	%rd1104, %rd1103, %rd1097;
	add.s64 	%rd1105, %rd1104, %rd1102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6206,%dummy}, %rd1092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6207}, %rd1092;
	}
	shf.r.wrap.b32 	%r6208, %r6207, %r6206, 19;
	shf.r.wrap.b32 	%r6209, %r6206, %r6207, 19;
	mov.b64 	%rd1106, {%r6209, %r6208};
	shf.l.wrap.b32 	%r6210, %r6206, %r6207, 3;
	shf.l.wrap.b32 	%r6211, %r6207, %r6206, 3;
	mov.b64 	%rd1107, {%r6211, %r6210};
	shr.u64 	%rd1108, %rd1092, 6;
	xor.b64  	%rd1109, %rd1106, %rd1108;
	xor.b64  	%rd1110, %rd1109, %rd1107;
	shf.r.wrap.b32 	%r6212, %r5805, %r5804, 1;
	shf.r.wrap.b32 	%r6213, %r5804, %r5805, 1;
	mov.b64 	%rd1111, {%r6213, %r6212};
	shf.r.wrap.b32 	%r6214, %r5805, %r5804, 8;
	shf.r.wrap.b32 	%r6215, %r5804, %r5805, 8;
	mov.b64 	%rd1112, {%r6215, %r6214};
	shr.u64 	%rd1113, %rd523, 7;
	xor.b64  	%rd1114, %rd1111, %rd1113;
	xor.b64  	%rd1115, %rd1114, %rd1112;
	add.s64 	%rd1116, %rd627, %rd510;
	add.s64 	%rd1117, %rd1116, %rd1110;
	add.s64 	%rd1118, %rd1117, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6216,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6217}, %rd1105;
	}
	shf.r.wrap.b32 	%r6218, %r6217, %r6216, 19;
	shf.r.wrap.b32 	%r6219, %r6216, %r6217, 19;
	mov.b64 	%rd1119, {%r6219, %r6218};
	shf.l.wrap.b32 	%r6220, %r6216, %r6217, 3;
	shf.l.wrap.b32 	%r6221, %r6217, %r6216, 3;
	mov.b64 	%rd1120, {%r6221, %r6220};
	shr.u64 	%rd1121, %rd1105, 6;
	xor.b64  	%rd1122, %rd1119, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1120;
	shf.r.wrap.b32 	%r6222, %r5817, %r5816, 1;
	shf.r.wrap.b32 	%r6223, %r5816, %r5817, 1;
	mov.b64 	%rd1124, {%r6223, %r6222};
	shf.r.wrap.b32 	%r6224, %r5817, %r5816, 8;
	shf.r.wrap.b32 	%r6225, %r5816, %r5817, 8;
	mov.b64 	%rd1125, {%r6225, %r6224};
	shr.u64 	%rd1126, %rd536, 7;
	xor.b64  	%rd1127, %rd1124, %rd1126;
	xor.b64  	%rd1128, %rd1127, %rd1125;
	add.s64 	%rd1129, %rd640, %rd523;
	add.s64 	%rd1130, %rd1129, %rd1123;
	add.s64 	%rd1131, %rd1130, %rd1128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6226,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6227}, %rd1118;
	}
	shf.r.wrap.b32 	%r6228, %r6227, %r6226, 19;
	shf.r.wrap.b32 	%r6229, %r6226, %r6227, 19;
	mov.b64 	%rd1132, {%r6229, %r6228};
	shf.l.wrap.b32 	%r6230, %r6226, %r6227, 3;
	shf.l.wrap.b32 	%r6231, %r6227, %r6226, 3;
	mov.b64 	%rd1133, {%r6231, %r6230};
	shr.u64 	%rd1134, %rd1118, 6;
	xor.b64  	%rd1135, %rd1132, %rd1134;
	xor.b64  	%rd1136, %rd1135, %rd1133;
	shf.r.wrap.b32 	%r6232, %r5829, %r5828, 1;
	shf.r.wrap.b32 	%r6233, %r5828, %r5829, 1;
	mov.b64 	%rd1137, {%r6233, %r6232};
	shf.r.wrap.b32 	%r6234, %r5829, %r5828, 8;
	shf.r.wrap.b32 	%r6235, %r5828, %r5829, 8;
	mov.b64 	%rd1138, {%r6235, %r6234};
	shr.u64 	%rd1139, %rd549, 7;
	xor.b64  	%rd1140, %rd1137, %rd1139;
	xor.b64  	%rd1141, %rd1140, %rd1138;
	add.s64 	%rd1142, %rd653, %rd536;
	add.s64 	%rd1143, %rd1142, %rd1136;
	add.s64 	%rd1144, %rd1143, %rd1141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6236,%dummy}, %rd1131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6237}, %rd1131;
	}
	shf.r.wrap.b32 	%r6238, %r6237, %r6236, 19;
	shf.r.wrap.b32 	%r6239, %r6236, %r6237, 19;
	mov.b64 	%rd1145, {%r6239, %r6238};
	shf.l.wrap.b32 	%r6240, %r6236, %r6237, 3;
	shf.l.wrap.b32 	%r6241, %r6237, %r6236, 3;
	mov.b64 	%rd1146, {%r6241, %r6240};
	shr.u64 	%rd1147, %rd1131, 6;
	xor.b64  	%rd1148, %rd1145, %rd1147;
	xor.b64  	%rd1149, %rd1148, %rd1146;
	shf.r.wrap.b32 	%r6242, %r5841, %r5840, 1;
	shf.r.wrap.b32 	%r6243, %r5840, %r5841, 1;
	mov.b64 	%rd1150, {%r6243, %r6242};
	shf.r.wrap.b32 	%r6244, %r5841, %r5840, 8;
	shf.r.wrap.b32 	%r6245, %r5840, %r5841, 8;
	mov.b64 	%rd1151, {%r6245, %r6244};
	shr.u64 	%rd1152, %rd562, 7;
	xor.b64  	%rd1153, %rd1150, %rd1152;
	xor.b64  	%rd1154, %rd1153, %rd1151;
	add.s64 	%rd1155, %rd666, %rd549;
	add.s64 	%rd1156, %rd1155, %rd1149;
	add.s64 	%rd1157, %rd1156, %rd1154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6246,%dummy}, %rd1144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6247}, %rd1144;
	}
	shf.r.wrap.b32 	%r6248, %r6247, %r6246, 19;
	shf.r.wrap.b32 	%r6249, %r6246, %r6247, 19;
	mov.b64 	%rd1158, {%r6249, %r6248};
	shf.l.wrap.b32 	%r6250, %r6246, %r6247, 3;
	shf.l.wrap.b32 	%r6251, %r6247, %r6246, 3;
	mov.b64 	%rd1159, {%r6251, %r6250};
	shr.u64 	%rd1160, %rd1144, 6;
	xor.b64  	%rd1161, %rd1158, %rd1160;
	xor.b64  	%rd1162, %rd1161, %rd1159;
	shf.r.wrap.b32 	%r6252, %r5853, %r5852, 1;
	shf.r.wrap.b32 	%r6253, %r5852, %r5853, 1;
	mov.b64 	%rd1163, {%r6253, %r6252};
	shf.r.wrap.b32 	%r6254, %r5853, %r5852, 8;
	shf.r.wrap.b32 	%r6255, %r5852, %r5853, 8;
	mov.b64 	%rd1164, {%r6255, %r6254};
	shr.u64 	%rd1165, %rd575, 7;
	xor.b64  	%rd1166, %rd1163, %rd1165;
	xor.b64  	%rd1167, %rd1166, %rd1164;
	add.s64 	%rd1168, %rd679, %rd562;
	add.s64 	%rd1169, %rd1168, %rd1162;
	add.s64 	%rd1170, %rd1169, %rd1167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6256,%dummy}, %rd1157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6257}, %rd1157;
	}
	shf.r.wrap.b32 	%r6258, %r6257, %r6256, 19;
	shf.r.wrap.b32 	%r6259, %r6256, %r6257, 19;
	mov.b64 	%rd1171, {%r6259, %r6258};
	shf.l.wrap.b32 	%r6260, %r6256, %r6257, 3;
	shf.l.wrap.b32 	%r6261, %r6257, %r6256, 3;
	mov.b64 	%rd1172, {%r6261, %r6260};
	shr.u64 	%rd1173, %rd1157, 6;
	xor.b64  	%rd1174, %rd1171, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1172;
	shf.r.wrap.b32 	%r6262, %r5865, %r5864, 1;
	shf.r.wrap.b32 	%r6263, %r5864, %r5865, 1;
	mov.b64 	%rd1176, {%r6263, %r6262};
	shf.r.wrap.b32 	%r6264, %r5865, %r5864, 8;
	shf.r.wrap.b32 	%r6265, %r5864, %r5865, 8;
	mov.b64 	%rd1177, {%r6265, %r6264};
	shr.u64 	%rd1178, %rd588, 7;
	xor.b64  	%rd1179, %rd1176, %rd1178;
	xor.b64  	%rd1180, %rd1179, %rd1177;
	add.s64 	%rd1181, %rd1092, %rd575;
	add.s64 	%rd1182, %rd1181, %rd1175;
	add.s64 	%rd1183, %rd1182, %rd1180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6266,%dummy}, %rd1170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6267}, %rd1170;
	}
	shf.r.wrap.b32 	%r6268, %r6267, %r6266, 19;
	shf.r.wrap.b32 	%r6269, %r6266, %r6267, 19;
	mov.b64 	%rd1184, {%r6269, %r6268};
	shf.l.wrap.b32 	%r6270, %r6266, %r6267, 3;
	shf.l.wrap.b32 	%r6271, %r6267, %r6266, 3;
	mov.b64 	%rd1185, {%r6271, %r6270};
	shr.u64 	%rd1186, %rd1170, 6;
	xor.b64  	%rd1187, %rd1184, %rd1186;
	xor.b64  	%rd1188, %rd1187, %rd1185;
	shf.r.wrap.b32 	%r6272, %r5877, %r5876, 1;
	shf.r.wrap.b32 	%r6273, %r5876, %r5877, 1;
	mov.b64 	%rd1189, {%r6273, %r6272};
	shf.r.wrap.b32 	%r6274, %r5877, %r5876, 8;
	shf.r.wrap.b32 	%r6275, %r5876, %r5877, 8;
	mov.b64 	%rd1190, {%r6275, %r6274};
	shr.u64 	%rd1191, %rd601, 7;
	xor.b64  	%rd1192, %rd1189, %rd1191;
	xor.b64  	%rd1193, %rd1192, %rd1190;
	add.s64 	%rd1194, %rd1105, %rd588;
	add.s64 	%rd1195, %rd1194, %rd1188;
	add.s64 	%rd1196, %rd1195, %rd1193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6276,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6277}, %rd1183;
	}
	shf.r.wrap.b32 	%r6278, %r6277, %r6276, 19;
	shf.r.wrap.b32 	%r6279, %r6276, %r6277, 19;
	mov.b64 	%rd1197, {%r6279, %r6278};
	shf.l.wrap.b32 	%r6280, %r6276, %r6277, 3;
	shf.l.wrap.b32 	%r6281, %r6277, %r6276, 3;
	mov.b64 	%rd1198, {%r6281, %r6280};
	shr.u64 	%rd1199, %rd1183, 6;
	xor.b64  	%rd1200, %rd1197, %rd1199;
	xor.b64  	%rd1201, %rd1200, %rd1198;
	shf.r.wrap.b32 	%r6282, %r5889, %r5888, 1;
	shf.r.wrap.b32 	%r6283, %r5888, %r5889, 1;
	mov.b64 	%rd1202, {%r6283, %r6282};
	shf.r.wrap.b32 	%r6284, %r5889, %r5888, 8;
	shf.r.wrap.b32 	%r6285, %r5888, %r5889, 8;
	mov.b64 	%rd1203, {%r6285, %r6284};
	shr.u64 	%rd1204, %rd614, 7;
	xor.b64  	%rd1205, %rd1202, %rd1204;
	xor.b64  	%rd1206, %rd1205, %rd1203;
	add.s64 	%rd1207, %rd1118, %rd601;
	add.s64 	%rd1208, %rd1207, %rd1201;
	add.s64 	%rd1209, %rd1208, %rd1206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6286,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6287}, %rd1196;
	}
	shf.r.wrap.b32 	%r6288, %r6287, %r6286, 19;
	shf.r.wrap.b32 	%r6289, %r6286, %r6287, 19;
	mov.b64 	%rd1210, {%r6289, %r6288};
	shf.l.wrap.b32 	%r6290, %r6286, %r6287, 3;
	shf.l.wrap.b32 	%r6291, %r6287, %r6286, 3;
	mov.b64 	%rd1211, {%r6291, %r6290};
	shr.u64 	%rd1212, %rd1196, 6;
	xor.b64  	%rd1213, %rd1210, %rd1212;
	xor.b64  	%rd1214, %rd1213, %rd1211;
	shf.r.wrap.b32 	%r6292, %r5901, %r5900, 1;
	shf.r.wrap.b32 	%r6293, %r5900, %r5901, 1;
	mov.b64 	%rd1215, {%r6293, %r6292};
	shf.r.wrap.b32 	%r6294, %r5901, %r5900, 8;
	shf.r.wrap.b32 	%r6295, %r5900, %r5901, 8;
	mov.b64 	%rd1216, {%r6295, %r6294};
	shr.u64 	%rd1217, %rd627, 7;
	xor.b64  	%rd1218, %rd1215, %rd1217;
	xor.b64  	%rd1219, %rd1218, %rd1216;
	add.s64 	%rd1220, %rd1131, %rd614;
	add.s64 	%rd1221, %rd1220, %rd1214;
	add.s64 	%rd1222, %rd1221, %rd1219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6296,%dummy}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6297}, %rd1209;
	}
	shf.r.wrap.b32 	%r6298, %r6297, %r6296, 19;
	shf.r.wrap.b32 	%r6299, %r6296, %r6297, 19;
	mov.b64 	%rd1223, {%r6299, %r6298};
	shf.l.wrap.b32 	%r6300, %r6296, %r6297, 3;
	shf.l.wrap.b32 	%r6301, %r6297, %r6296, 3;
	mov.b64 	%rd1224, {%r6301, %r6300};
	shr.u64 	%rd1225, %rd1209, 6;
	xor.b64  	%rd1226, %rd1223, %rd1225;
	xor.b64  	%rd1227, %rd1226, %rd1224;
	shf.r.wrap.b32 	%r6302, %r5911, %r5910, 1;
	shf.r.wrap.b32 	%r6303, %r5910, %r5911, 1;
	mov.b64 	%rd1228, {%r6303, %r6302};
	shf.r.wrap.b32 	%r6304, %r5911, %r5910, 8;
	shf.r.wrap.b32 	%r6305, %r5910, %r5911, 8;
	mov.b64 	%rd1229, {%r6305, %r6304};
	shr.u64 	%rd1230, %rd640, 7;
	xor.b64  	%rd1231, %rd1228, %rd1230;
	xor.b64  	%rd1232, %rd1231, %rd1229;
	add.s64 	%rd1233, %rd1144, %rd627;
	add.s64 	%rd1234, %rd1233, %rd1227;
	add.s64 	%rd1235, %rd1234, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6306,%dummy}, %rd1222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6307}, %rd1222;
	}
	shf.r.wrap.b32 	%r6308, %r6307, %r6306, 19;
	shf.r.wrap.b32 	%r6309, %r6306, %r6307, 19;
	mov.b64 	%rd1236, {%r6309, %r6308};
	shf.l.wrap.b32 	%r6310, %r6306, %r6307, 3;
	shf.l.wrap.b32 	%r6311, %r6307, %r6306, 3;
	mov.b64 	%rd1237, {%r6311, %r6310};
	shr.u64 	%rd1238, %rd1222, 6;
	xor.b64  	%rd1239, %rd1236, %rd1238;
	xor.b64  	%rd1240, %rd1239, %rd1237;
	shf.r.wrap.b32 	%r6312, %r5921, %r5920, 1;
	shf.r.wrap.b32 	%r6313, %r5920, %r5921, 1;
	mov.b64 	%rd1241, {%r6313, %r6312};
	shf.r.wrap.b32 	%r6314, %r5921, %r5920, 8;
	shf.r.wrap.b32 	%r6315, %r5920, %r5921, 8;
	mov.b64 	%rd1242, {%r6315, %r6314};
	shr.u64 	%rd1243, %rd653, 7;
	xor.b64  	%rd1244, %rd1241, %rd1243;
	xor.b64  	%rd1245, %rd1244, %rd1242;
	add.s64 	%rd1246, %rd1157, %rd640;
	add.s64 	%rd1247, %rd1246, %rd1240;
	add.s64 	%rd1248, %rd1247, %rd1245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6316,%dummy}, %rd1235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6317}, %rd1235;
	}
	shf.r.wrap.b32 	%r6318, %r6317, %r6316, 19;
	shf.r.wrap.b32 	%r6319, %r6316, %r6317, 19;
	mov.b64 	%rd1249, {%r6319, %r6318};
	shf.l.wrap.b32 	%r6320, %r6316, %r6317, 3;
	shf.l.wrap.b32 	%r6321, %r6317, %r6316, 3;
	mov.b64 	%rd1250, {%r6321, %r6320};
	shr.u64 	%rd1251, %rd1235, 6;
	xor.b64  	%rd1252, %rd1249, %rd1251;
	xor.b64  	%rd1253, %rd1252, %rd1250;
	shf.r.wrap.b32 	%r6322, %r6187, %r6186, 1;
	shf.r.wrap.b32 	%r6323, %r6186, %r6187, 1;
	mov.b64 	%rd1254, {%r6323, %r6322};
	shf.r.wrap.b32 	%r6324, %r6187, %r6186, 8;
	shf.r.wrap.b32 	%r6325, %r6186, %r6187, 8;
	mov.b64 	%rd1255, {%r6325, %r6324};
	shr.u64 	%rd1256, %rd666, 7;
	xor.b64  	%rd1257, %rd1254, %rd1256;
	xor.b64  	%rd1258, %rd1257, %rd1255;
	add.s64 	%rd1259, %rd1170, %rd653;
	add.s64 	%rd1260, %rd1259, %rd1253;
	add.s64 	%rd1261, %rd1260, %rd1258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6326,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6327}, %rd1248;
	}
	shf.r.wrap.b32 	%r6328, %r6327, %r6326, 19;
	shf.r.wrap.b32 	%r6329, %r6326, %r6327, 19;
	mov.b64 	%rd1262, {%r6329, %r6328};
	shf.l.wrap.b32 	%r6330, %r6326, %r6327, 3;
	shf.l.wrap.b32 	%r6331, %r6327, %r6326, 3;
	mov.b64 	%rd1263, {%r6331, %r6330};
	shr.u64 	%rd1264, %rd1248, 6;
	xor.b64  	%rd1265, %rd1262, %rd1264;
	xor.b64  	%rd1266, %rd1265, %rd1263;
	shf.r.wrap.b32 	%r6332, %r6197, %r6196, 1;
	shf.r.wrap.b32 	%r6333, %r6196, %r6197, 1;
	mov.b64 	%rd1267, {%r6333, %r6332};
	shf.r.wrap.b32 	%r6334, %r6197, %r6196, 8;
	shf.r.wrap.b32 	%r6335, %r6196, %r6197, 8;
	mov.b64 	%rd1268, {%r6335, %r6334};
	shr.u64 	%rd1269, %rd679, 7;
	xor.b64  	%rd1270, %rd1267, %rd1269;
	xor.b64  	%rd1271, %rd1270, %rd1268;
	add.s64 	%rd1272, %rd1183, %rd666;
	add.s64 	%rd1273, %rd1272, %rd1266;
	add.s64 	%rd1274, %rd1273, %rd1271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6336,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6337}, %rd1261;
	}
	shf.r.wrap.b32 	%r6338, %r6337, %r6336, 19;
	shf.r.wrap.b32 	%r6339, %r6336, %r6337, 19;
	mov.b64 	%rd1275, {%r6339, %r6338};
	shf.l.wrap.b32 	%r6340, %r6336, %r6337, 3;
	shf.l.wrap.b32 	%r6341, %r6337, %r6336, 3;
	mov.b64 	%rd1276, {%r6341, %r6340};
	shr.u64 	%rd1277, %rd1261, 6;
	xor.b64  	%rd1278, %rd1275, %rd1277;
	xor.b64  	%rd1279, %rd1278, %rd1276;
	shf.r.wrap.b32 	%r6342, %r6207, %r6206, 1;
	shf.r.wrap.b32 	%r6343, %r6206, %r6207, 1;
	mov.b64 	%rd1280, {%r6343, %r6342};
	shf.r.wrap.b32 	%r6344, %r6207, %r6206, 8;
	shf.r.wrap.b32 	%r6345, %r6206, %r6207, 8;
	mov.b64 	%rd1281, {%r6345, %r6344};
	shr.u64 	%rd1282, %rd1092, 7;
	xor.b64  	%rd1283, %rd1280, %rd1282;
	xor.b64  	%rd1284, %rd1283, %rd1281;
	add.s64 	%rd1285, %rd1196, %rd679;
	add.s64 	%rd1286, %rd1285, %rd1279;
	add.s64 	%rd1287, %rd1286, %rd1284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6346,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6347}, %rd1068;
	}
	shf.r.wrap.b32 	%r6348, %r6347, %r6346, 14;
	shf.r.wrap.b32 	%r6349, %r6346, %r6347, 14;
	mov.b64 	%rd1288, {%r6349, %r6348};
	shf.r.wrap.b32 	%r6350, %r6347, %r6346, 18;
	shf.r.wrap.b32 	%r6351, %r6346, %r6347, 18;
	mov.b64 	%rd1289, {%r6351, %r6350};
	xor.b64  	%rd1290, %rd1289, %rd1288;
	shf.l.wrap.b32 	%r6352, %r6346, %r6347, 23;
	shf.l.wrap.b32 	%r6353, %r6347, %r6346, 23;
	mov.b64 	%rd1291, {%r6353, %r6352};
	xor.b64  	%rd1292, %rd1290, %rd1291;
	xor.b64  	%rd1293, %rd1043, %rd1018;
	and.b64  	%rd1294, %rd1293, %rd1068;
	xor.b64  	%rd1295, %rd1294, %rd1018;
	add.s64 	%rd1296, %rd1295, %rd993;
	add.s64 	%rd1297, %rd1296, %rd1092;
	ld.const.u64 	%rd1298, [k_sha512+256];
	add.s64 	%rd1299, %rd1297, %rd1298;
	add.s64 	%rd1300, %rd1299, %rd1292;
	add.s64 	%rd1301, %rd1300, %rd1004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6354,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6355}, %rd1079;
	}
	shf.r.wrap.b32 	%r6356, %r6355, %r6354, 28;
	shf.r.wrap.b32 	%r6357, %r6354, %r6355, 28;
	mov.b64 	%rd1302, {%r6357, %r6356};
	shf.l.wrap.b32 	%r6358, %r6354, %r6355, 30;
	shf.l.wrap.b32 	%r6359, %r6355, %r6354, 30;
	mov.b64 	%rd1303, {%r6359, %r6358};
	xor.b64  	%rd1304, %rd1303, %rd1302;
	shf.l.wrap.b32 	%r6360, %r6354, %r6355, 25;
	shf.l.wrap.b32 	%r6361, %r6355, %r6354, 25;
	mov.b64 	%rd1305, {%r6361, %r6360};
	xor.b64  	%rd1306, %rd1304, %rd1305;
	xor.b64  	%rd1307, %rd1079, %rd1029;
	xor.b64  	%rd1308, %rd1079, %rd1054;
	and.b64  	%rd1309, %rd1308, %rd1307;
	xor.b64  	%rd1310, %rd1309, %rd1079;
	add.s64 	%rd1311, %rd1300, %rd1310;
	add.s64 	%rd1312, %rd1311, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6362,%dummy}, %rd1301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6363}, %rd1301;
	}
	shf.r.wrap.b32 	%r6364, %r6363, %r6362, 14;
	shf.r.wrap.b32 	%r6365, %r6362, %r6363, 14;
	mov.b64 	%rd1313, {%r6365, %r6364};
	shf.r.wrap.b32 	%r6366, %r6363, %r6362, 18;
	shf.r.wrap.b32 	%r6367, %r6362, %r6363, 18;
	mov.b64 	%rd1314, {%r6367, %r6366};
	xor.b64  	%rd1315, %rd1314, %rd1313;
	shf.l.wrap.b32 	%r6368, %r6362, %r6363, 23;
	shf.l.wrap.b32 	%r6369, %r6363, %r6362, 23;
	mov.b64 	%rd1316, {%r6369, %r6368};
	xor.b64  	%rd1317, %rd1315, %rd1316;
	xor.b64  	%rd1318, %rd1068, %rd1043;
	and.b64  	%rd1319, %rd1301, %rd1318;
	xor.b64  	%rd1320, %rd1319, %rd1043;
	add.s64 	%rd1321, %rd1105, %rd1018;
	ld.const.u64 	%rd1322, [k_sha512+264];
	add.s64 	%rd1323, %rd1321, %rd1322;
	add.s64 	%rd1324, %rd1323, %rd1320;
	add.s64 	%rd1325, %rd1324, %rd1317;
	add.s64 	%rd1326, %rd1325, %rd1029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6370,%dummy}, %rd1312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6371}, %rd1312;
	}
	shf.r.wrap.b32 	%r6372, %r6371, %r6370, 28;
	shf.r.wrap.b32 	%r6373, %r6370, %r6371, 28;
	mov.b64 	%rd1327, {%r6373, %r6372};
	shf.l.wrap.b32 	%r6374, %r6370, %r6371, 30;
	shf.l.wrap.b32 	%r6375, %r6371, %r6370, 30;
	mov.b64 	%rd1328, {%r6375, %r6374};
	xor.b64  	%rd1329, %rd1328, %rd1327;
	shf.l.wrap.b32 	%r6376, %r6370, %r6371, 25;
	shf.l.wrap.b32 	%r6377, %r6371, %r6370, 25;
	mov.b64 	%rd1330, {%r6377, %r6376};
	xor.b64  	%rd1331, %rd1329, %rd1330;
	xor.b64  	%rd1332, %rd1312, %rd1054;
	xor.b64  	%rd1333, %rd1312, %rd1079;
	and.b64  	%rd1334, %rd1333, %rd1332;
	xor.b64  	%rd1335, %rd1334, %rd1312;
	add.s64 	%rd1336, %rd1325, %rd1335;
	add.s64 	%rd1337, %rd1336, %rd1331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6378,%dummy}, %rd1326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6379}, %rd1326;
	}
	shf.r.wrap.b32 	%r6380, %r6379, %r6378, 14;
	shf.r.wrap.b32 	%r6381, %r6378, %r6379, 14;
	mov.b64 	%rd1338, {%r6381, %r6380};
	shf.r.wrap.b32 	%r6382, %r6379, %r6378, 18;
	shf.r.wrap.b32 	%r6383, %r6378, %r6379, 18;
	mov.b64 	%rd1339, {%r6383, %r6382};
	xor.b64  	%rd1340, %rd1339, %rd1338;
	shf.l.wrap.b32 	%r6384, %r6378, %r6379, 23;
	shf.l.wrap.b32 	%r6385, %r6379, %r6378, 23;
	mov.b64 	%rd1341, {%r6385, %r6384};
	xor.b64  	%rd1342, %rd1340, %rd1341;
	xor.b64  	%rd1343, %rd1301, %rd1068;
	and.b64  	%rd1344, %rd1326, %rd1343;
	xor.b64  	%rd1345, %rd1344, %rd1068;
	add.s64 	%rd1346, %rd1118, %rd1043;
	ld.const.u64 	%rd1347, [k_sha512+272];
	add.s64 	%rd1348, %rd1346, %rd1347;
	add.s64 	%rd1349, %rd1348, %rd1345;
	add.s64 	%rd1350, %rd1349, %rd1342;
	add.s64 	%rd1351, %rd1350, %rd1054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6386,%dummy}, %rd1337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6387}, %rd1337;
	}
	shf.r.wrap.b32 	%r6388, %r6387, %r6386, 28;
	shf.r.wrap.b32 	%r6389, %r6386, %r6387, 28;
	mov.b64 	%rd1352, {%r6389, %r6388};
	shf.l.wrap.b32 	%r6390, %r6386, %r6387, 30;
	shf.l.wrap.b32 	%r6391, %r6387, %r6386, 30;
	mov.b64 	%rd1353, {%r6391, %r6390};
	xor.b64  	%rd1354, %rd1353, %rd1352;
	shf.l.wrap.b32 	%r6392, %r6386, %r6387, 25;
	shf.l.wrap.b32 	%r6393, %r6387, %r6386, 25;
	mov.b64 	%rd1355, {%r6393, %r6392};
	xor.b64  	%rd1356, %rd1354, %rd1355;
	xor.b64  	%rd1357, %rd1337, %rd1079;
	xor.b64  	%rd1358, %rd1337, %rd1312;
	and.b64  	%rd1359, %rd1358, %rd1357;
	xor.b64  	%rd1360, %rd1359, %rd1337;
	add.s64 	%rd1361, %rd1350, %rd1360;
	add.s64 	%rd1362, %rd1361, %rd1356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6394,%dummy}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6395}, %rd1351;
	}
	shf.r.wrap.b32 	%r6396, %r6395, %r6394, 14;
	shf.r.wrap.b32 	%r6397, %r6394, %r6395, 14;
	mov.b64 	%rd1363, {%r6397, %r6396};
	shf.r.wrap.b32 	%r6398, %r6395, %r6394, 18;
	shf.r.wrap.b32 	%r6399, %r6394, %r6395, 18;
	mov.b64 	%rd1364, {%r6399, %r6398};
	xor.b64  	%rd1365, %rd1364, %rd1363;
	shf.l.wrap.b32 	%r6400, %r6394, %r6395, 23;
	shf.l.wrap.b32 	%r6401, %r6395, %r6394, 23;
	mov.b64 	%rd1366, {%r6401, %r6400};
	xor.b64  	%rd1367, %rd1365, %rd1366;
	xor.b64  	%rd1368, %rd1326, %rd1301;
	and.b64  	%rd1369, %rd1351, %rd1368;
	xor.b64  	%rd1370, %rd1369, %rd1301;
	add.s64 	%rd1371, %rd1131, %rd1068;
	ld.const.u64 	%rd1372, [k_sha512+280];
	add.s64 	%rd1373, %rd1371, %rd1372;
	add.s64 	%rd1374, %rd1373, %rd1370;
	add.s64 	%rd1375, %rd1374, %rd1367;
	add.s64 	%rd1376, %rd1375, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6402,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6403}, %rd1362;
	}
	shf.r.wrap.b32 	%r6404, %r6403, %r6402, 28;
	shf.r.wrap.b32 	%r6405, %r6402, %r6403, 28;
	mov.b64 	%rd1377, {%r6405, %r6404};
	shf.l.wrap.b32 	%r6406, %r6402, %r6403, 30;
	shf.l.wrap.b32 	%r6407, %r6403, %r6402, 30;
	mov.b64 	%rd1378, {%r6407, %r6406};
	xor.b64  	%rd1379, %rd1378, %rd1377;
	shf.l.wrap.b32 	%r6408, %r6402, %r6403, 25;
	shf.l.wrap.b32 	%r6409, %r6403, %r6402, 25;
	mov.b64 	%rd1380, {%r6409, %r6408};
	xor.b64  	%rd1381, %rd1379, %rd1380;
	xor.b64  	%rd1382, %rd1362, %rd1312;
	xor.b64  	%rd1383, %rd1362, %rd1337;
	and.b64  	%rd1384, %rd1383, %rd1382;
	xor.b64  	%rd1385, %rd1384, %rd1362;
	add.s64 	%rd1386, %rd1375, %rd1385;
	add.s64 	%rd1387, %rd1386, %rd1381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6410,%dummy}, %rd1376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6411}, %rd1376;
	}
	shf.r.wrap.b32 	%r6412, %r6411, %r6410, 14;
	shf.r.wrap.b32 	%r6413, %r6410, %r6411, 14;
	mov.b64 	%rd1388, {%r6413, %r6412};
	shf.r.wrap.b32 	%r6414, %r6411, %r6410, 18;
	shf.r.wrap.b32 	%r6415, %r6410, %r6411, 18;
	mov.b64 	%rd1389, {%r6415, %r6414};
	xor.b64  	%rd1390, %rd1389, %rd1388;
	shf.l.wrap.b32 	%r6416, %r6410, %r6411, 23;
	shf.l.wrap.b32 	%r6417, %r6411, %r6410, 23;
	mov.b64 	%rd1391, {%r6417, %r6416};
	xor.b64  	%rd1392, %rd1390, %rd1391;
	xor.b64  	%rd1393, %rd1351, %rd1326;
	and.b64  	%rd1394, %rd1376, %rd1393;
	xor.b64  	%rd1395, %rd1394, %rd1326;
	add.s64 	%rd1396, %rd1301, %rd1144;
	ld.const.u64 	%rd1397, [k_sha512+288];
	add.s64 	%rd1398, %rd1396, %rd1397;
	add.s64 	%rd1399, %rd1398, %rd1395;
	add.s64 	%rd1400, %rd1399, %rd1392;
	add.s64 	%rd1401, %rd1400, %rd1312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6418,%dummy}, %rd1387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6419}, %rd1387;
	}
	shf.r.wrap.b32 	%r6420, %r6419, %r6418, 28;
	shf.r.wrap.b32 	%r6421, %r6418, %r6419, 28;
	mov.b64 	%rd1402, {%r6421, %r6420};
	shf.l.wrap.b32 	%r6422, %r6418, %r6419, 30;
	shf.l.wrap.b32 	%r6423, %r6419, %r6418, 30;
	mov.b64 	%rd1403, {%r6423, %r6422};
	xor.b64  	%rd1404, %rd1403, %rd1402;
	shf.l.wrap.b32 	%r6424, %r6418, %r6419, 25;
	shf.l.wrap.b32 	%r6425, %r6419, %r6418, 25;
	mov.b64 	%rd1405, {%r6425, %r6424};
	xor.b64  	%rd1406, %rd1404, %rd1405;
	xor.b64  	%rd1407, %rd1387, %rd1337;
	xor.b64  	%rd1408, %rd1387, %rd1362;
	and.b64  	%rd1409, %rd1408, %rd1407;
	xor.b64  	%rd1410, %rd1409, %rd1387;
	add.s64 	%rd1411, %rd1400, %rd1410;
	add.s64 	%rd1412, %rd1411, %rd1406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6426,%dummy}, %rd1401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6427}, %rd1401;
	}
	shf.r.wrap.b32 	%r6428, %r6427, %r6426, 14;
	shf.r.wrap.b32 	%r6429, %r6426, %r6427, 14;
	mov.b64 	%rd1413, {%r6429, %r6428};
	shf.r.wrap.b32 	%r6430, %r6427, %r6426, 18;
	shf.r.wrap.b32 	%r6431, %r6426, %r6427, 18;
	mov.b64 	%rd1414, {%r6431, %r6430};
	xor.b64  	%rd1415, %rd1414, %rd1413;
	shf.l.wrap.b32 	%r6432, %r6426, %r6427, 23;
	shf.l.wrap.b32 	%r6433, %r6427, %r6426, 23;
	mov.b64 	%rd1416, {%r6433, %r6432};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	xor.b64  	%rd1418, %rd1376, %rd1351;
	and.b64  	%rd1419, %rd1401, %rd1418;
	xor.b64  	%rd1420, %rd1419, %rd1351;
	add.s64 	%rd1421, %rd1326, %rd1157;
	ld.const.u64 	%rd1422, [k_sha512+296];
	add.s64 	%rd1423, %rd1421, %rd1422;
	add.s64 	%rd1424, %rd1423, %rd1420;
	add.s64 	%rd1425, %rd1424, %rd1417;
	add.s64 	%rd1426, %rd1425, %rd1337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6434,%dummy}, %rd1412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6435}, %rd1412;
	}
	shf.r.wrap.b32 	%r6436, %r6435, %r6434, 28;
	shf.r.wrap.b32 	%r6437, %r6434, %r6435, 28;
	mov.b64 	%rd1427, {%r6437, %r6436};
	shf.l.wrap.b32 	%r6438, %r6434, %r6435, 30;
	shf.l.wrap.b32 	%r6439, %r6435, %r6434, 30;
	mov.b64 	%rd1428, {%r6439, %r6438};
	xor.b64  	%rd1429, %rd1428, %rd1427;
	shf.l.wrap.b32 	%r6440, %r6434, %r6435, 25;
	shf.l.wrap.b32 	%r6441, %r6435, %r6434, 25;
	mov.b64 	%rd1430, {%r6441, %r6440};
	xor.b64  	%rd1431, %rd1429, %rd1430;
	xor.b64  	%rd1432, %rd1412, %rd1362;
	xor.b64  	%rd1433, %rd1412, %rd1387;
	and.b64  	%rd1434, %rd1433, %rd1432;
	xor.b64  	%rd1435, %rd1434, %rd1412;
	add.s64 	%rd1436, %rd1425, %rd1435;
	add.s64 	%rd1437, %rd1436, %rd1431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6442,%dummy}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6443}, %rd1426;
	}
	shf.r.wrap.b32 	%r6444, %r6443, %r6442, 14;
	shf.r.wrap.b32 	%r6445, %r6442, %r6443, 14;
	mov.b64 	%rd1438, {%r6445, %r6444};
	shf.r.wrap.b32 	%r6446, %r6443, %r6442, 18;
	shf.r.wrap.b32 	%r6447, %r6442, %r6443, 18;
	mov.b64 	%rd1439, {%r6447, %r6446};
	xor.b64  	%rd1440, %rd1439, %rd1438;
	shf.l.wrap.b32 	%r6448, %r6442, %r6443, 23;
	shf.l.wrap.b32 	%r6449, %r6443, %r6442, 23;
	mov.b64 	%rd1441, {%r6449, %r6448};
	xor.b64  	%rd1442, %rd1440, %rd1441;
	xor.b64  	%rd1443, %rd1401, %rd1376;
	and.b64  	%rd1444, %rd1426, %rd1443;
	xor.b64  	%rd1445, %rd1444, %rd1376;
	add.s64 	%rd1446, %rd1351, %rd1170;
	ld.const.u64 	%rd1447, [k_sha512+304];
	add.s64 	%rd1448, %rd1446, %rd1447;
	add.s64 	%rd1449, %rd1448, %rd1445;
	add.s64 	%rd1450, %rd1449, %rd1442;
	add.s64 	%rd1451, %rd1450, %rd1362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6450,%dummy}, %rd1437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6451}, %rd1437;
	}
	shf.r.wrap.b32 	%r6452, %r6451, %r6450, 28;
	shf.r.wrap.b32 	%r6453, %r6450, %r6451, 28;
	mov.b64 	%rd1452, {%r6453, %r6452};
	shf.l.wrap.b32 	%r6454, %r6450, %r6451, 30;
	shf.l.wrap.b32 	%r6455, %r6451, %r6450, 30;
	mov.b64 	%rd1453, {%r6455, %r6454};
	xor.b64  	%rd1454, %rd1453, %rd1452;
	shf.l.wrap.b32 	%r6456, %r6450, %r6451, 25;
	shf.l.wrap.b32 	%r6457, %r6451, %r6450, 25;
	mov.b64 	%rd1455, {%r6457, %r6456};
	xor.b64  	%rd1456, %rd1454, %rd1455;
	xor.b64  	%rd1457, %rd1437, %rd1387;
	xor.b64  	%rd1458, %rd1437, %rd1412;
	and.b64  	%rd1459, %rd1458, %rd1457;
	xor.b64  	%rd1460, %rd1459, %rd1437;
	add.s64 	%rd1461, %rd1450, %rd1460;
	add.s64 	%rd1462, %rd1461, %rd1456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6458,%dummy}, %rd1451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6459}, %rd1451;
	}
	shf.r.wrap.b32 	%r6460, %r6459, %r6458, 14;
	shf.r.wrap.b32 	%r6461, %r6458, %r6459, 14;
	mov.b64 	%rd1463, {%r6461, %r6460};
	shf.r.wrap.b32 	%r6462, %r6459, %r6458, 18;
	shf.r.wrap.b32 	%r6463, %r6458, %r6459, 18;
	mov.b64 	%rd1464, {%r6463, %r6462};
	xor.b64  	%rd1465, %rd1464, %rd1463;
	shf.l.wrap.b32 	%r6464, %r6458, %r6459, 23;
	shf.l.wrap.b32 	%r6465, %r6459, %r6458, 23;
	mov.b64 	%rd1466, {%r6465, %r6464};
	xor.b64  	%rd1467, %rd1465, %rd1466;
	xor.b64  	%rd1468, %rd1426, %rd1401;
	and.b64  	%rd1469, %rd1451, %rd1468;
	xor.b64  	%rd1470, %rd1469, %rd1401;
	add.s64 	%rd1471, %rd1376, %rd1183;
	ld.const.u64 	%rd1472, [k_sha512+312];
	add.s64 	%rd1473, %rd1471, %rd1472;
	add.s64 	%rd1474, %rd1473, %rd1470;
	add.s64 	%rd1475, %rd1474, %rd1467;
	add.s64 	%rd1476, %rd1475, %rd1387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6466,%dummy}, %rd1462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6467}, %rd1462;
	}
	shf.r.wrap.b32 	%r6468, %r6467, %r6466, 28;
	shf.r.wrap.b32 	%r6469, %r6466, %r6467, 28;
	mov.b64 	%rd1477, {%r6469, %r6468};
	shf.l.wrap.b32 	%r6470, %r6466, %r6467, 30;
	shf.l.wrap.b32 	%r6471, %r6467, %r6466, 30;
	mov.b64 	%rd1478, {%r6471, %r6470};
	xor.b64  	%rd1479, %rd1478, %rd1477;
	shf.l.wrap.b32 	%r6472, %r6466, %r6467, 25;
	shf.l.wrap.b32 	%r6473, %r6467, %r6466, 25;
	mov.b64 	%rd1480, {%r6473, %r6472};
	xor.b64  	%rd1481, %rd1479, %rd1480;
	xor.b64  	%rd1482, %rd1462, %rd1412;
	xor.b64  	%rd1483, %rd1462, %rd1437;
	and.b64  	%rd1484, %rd1483, %rd1482;
	xor.b64  	%rd1485, %rd1484, %rd1462;
	add.s64 	%rd1486, %rd1475, %rd1485;
	add.s64 	%rd1487, %rd1486, %rd1481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6474,%dummy}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6475}, %rd1476;
	}
	shf.r.wrap.b32 	%r6476, %r6475, %r6474, 14;
	shf.r.wrap.b32 	%r6477, %r6474, %r6475, 14;
	mov.b64 	%rd1488, {%r6477, %r6476};
	shf.r.wrap.b32 	%r6478, %r6475, %r6474, 18;
	shf.r.wrap.b32 	%r6479, %r6474, %r6475, 18;
	mov.b64 	%rd1489, {%r6479, %r6478};
	xor.b64  	%rd1490, %rd1489, %rd1488;
	shf.l.wrap.b32 	%r6480, %r6474, %r6475, 23;
	shf.l.wrap.b32 	%r6481, %r6475, %r6474, 23;
	mov.b64 	%rd1491, {%r6481, %r6480};
	xor.b64  	%rd1492, %rd1490, %rd1491;
	xor.b64  	%rd1493, %rd1451, %rd1426;
	and.b64  	%rd1494, %rd1476, %rd1493;
	xor.b64  	%rd1495, %rd1494, %rd1426;
	add.s64 	%rd1496, %rd1401, %rd1196;
	ld.const.u64 	%rd1497, [k_sha512+320];
	add.s64 	%rd1498, %rd1496, %rd1497;
	add.s64 	%rd1499, %rd1498, %rd1495;
	add.s64 	%rd1500, %rd1499, %rd1492;
	add.s64 	%rd1501, %rd1500, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6482,%dummy}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6483}, %rd1487;
	}
	shf.r.wrap.b32 	%r6484, %r6483, %r6482, 28;
	shf.r.wrap.b32 	%r6485, %r6482, %r6483, 28;
	mov.b64 	%rd1502, {%r6485, %r6484};
	shf.l.wrap.b32 	%r6486, %r6482, %r6483, 30;
	shf.l.wrap.b32 	%r6487, %r6483, %r6482, 30;
	mov.b64 	%rd1503, {%r6487, %r6486};
	xor.b64  	%rd1504, %rd1503, %rd1502;
	shf.l.wrap.b32 	%r6488, %r6482, %r6483, 25;
	shf.l.wrap.b32 	%r6489, %r6483, %r6482, 25;
	mov.b64 	%rd1505, {%r6489, %r6488};
	xor.b64  	%rd1506, %rd1504, %rd1505;
	xor.b64  	%rd1507, %rd1487, %rd1437;
	xor.b64  	%rd1508, %rd1487, %rd1462;
	and.b64  	%rd1509, %rd1508, %rd1507;
	xor.b64  	%rd1510, %rd1509, %rd1487;
	add.s64 	%rd1511, %rd1500, %rd1510;
	add.s64 	%rd1512, %rd1511, %rd1506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6490,%dummy}, %rd1501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6491}, %rd1501;
	}
	shf.r.wrap.b32 	%r6492, %r6491, %r6490, 14;
	shf.r.wrap.b32 	%r6493, %r6490, %r6491, 14;
	mov.b64 	%rd1513, {%r6493, %r6492};
	shf.r.wrap.b32 	%r6494, %r6491, %r6490, 18;
	shf.r.wrap.b32 	%r6495, %r6490, %r6491, 18;
	mov.b64 	%rd1514, {%r6495, %r6494};
	xor.b64  	%rd1515, %rd1514, %rd1513;
	shf.l.wrap.b32 	%r6496, %r6490, %r6491, 23;
	shf.l.wrap.b32 	%r6497, %r6491, %r6490, 23;
	mov.b64 	%rd1516, {%r6497, %r6496};
	xor.b64  	%rd1517, %rd1515, %rd1516;
	xor.b64  	%rd1518, %rd1476, %rd1451;
	and.b64  	%rd1519, %rd1501, %rd1518;
	xor.b64  	%rd1520, %rd1519, %rd1451;
	add.s64 	%rd1521, %rd1426, %rd1209;
	ld.const.u64 	%rd1522, [k_sha512+328];
	add.s64 	%rd1523, %rd1521, %rd1522;
	add.s64 	%rd1524, %rd1523, %rd1520;
	add.s64 	%rd1525, %rd1524, %rd1517;
	add.s64 	%rd1526, %rd1525, %rd1437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6498,%dummy}, %rd1512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6499}, %rd1512;
	}
	shf.r.wrap.b32 	%r6500, %r6499, %r6498, 28;
	shf.r.wrap.b32 	%r6501, %r6498, %r6499, 28;
	mov.b64 	%rd1527, {%r6501, %r6500};
	shf.l.wrap.b32 	%r6502, %r6498, %r6499, 30;
	shf.l.wrap.b32 	%r6503, %r6499, %r6498, 30;
	mov.b64 	%rd1528, {%r6503, %r6502};
	xor.b64  	%rd1529, %rd1528, %rd1527;
	shf.l.wrap.b32 	%r6504, %r6498, %r6499, 25;
	shf.l.wrap.b32 	%r6505, %r6499, %r6498, 25;
	mov.b64 	%rd1530, {%r6505, %r6504};
	xor.b64  	%rd1531, %rd1529, %rd1530;
	xor.b64  	%rd1532, %rd1512, %rd1462;
	xor.b64  	%rd1533, %rd1512, %rd1487;
	and.b64  	%rd1534, %rd1533, %rd1532;
	xor.b64  	%rd1535, %rd1534, %rd1512;
	add.s64 	%rd1536, %rd1525, %rd1535;
	add.s64 	%rd1537, %rd1536, %rd1531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6506,%dummy}, %rd1526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6507}, %rd1526;
	}
	shf.r.wrap.b32 	%r6508, %r6507, %r6506, 14;
	shf.r.wrap.b32 	%r6509, %r6506, %r6507, 14;
	mov.b64 	%rd1538, {%r6509, %r6508};
	shf.r.wrap.b32 	%r6510, %r6507, %r6506, 18;
	shf.r.wrap.b32 	%r6511, %r6506, %r6507, 18;
	mov.b64 	%rd1539, {%r6511, %r6510};
	xor.b64  	%rd1540, %rd1539, %rd1538;
	shf.l.wrap.b32 	%r6512, %r6506, %r6507, 23;
	shf.l.wrap.b32 	%r6513, %r6507, %r6506, 23;
	mov.b64 	%rd1541, {%r6513, %r6512};
	xor.b64  	%rd1542, %rd1540, %rd1541;
	xor.b64  	%rd1543, %rd1501, %rd1476;
	and.b64  	%rd1544, %rd1526, %rd1543;
	xor.b64  	%rd1545, %rd1544, %rd1476;
	add.s64 	%rd1546, %rd1451, %rd1222;
	ld.const.u64 	%rd1547, [k_sha512+336];
	add.s64 	%rd1548, %rd1546, %rd1547;
	add.s64 	%rd1549, %rd1548, %rd1545;
	add.s64 	%rd1550, %rd1549, %rd1542;
	add.s64 	%rd1551, %rd1550, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6514,%dummy}, %rd1537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6515}, %rd1537;
	}
	shf.r.wrap.b32 	%r6516, %r6515, %r6514, 28;
	shf.r.wrap.b32 	%r6517, %r6514, %r6515, 28;
	mov.b64 	%rd1552, {%r6517, %r6516};
	shf.l.wrap.b32 	%r6518, %r6514, %r6515, 30;
	shf.l.wrap.b32 	%r6519, %r6515, %r6514, 30;
	mov.b64 	%rd1553, {%r6519, %r6518};
	xor.b64  	%rd1554, %rd1553, %rd1552;
	shf.l.wrap.b32 	%r6520, %r6514, %r6515, 25;
	shf.l.wrap.b32 	%r6521, %r6515, %r6514, 25;
	mov.b64 	%rd1555, {%r6521, %r6520};
	xor.b64  	%rd1556, %rd1554, %rd1555;
	xor.b64  	%rd1557, %rd1537, %rd1487;
	xor.b64  	%rd1558, %rd1537, %rd1512;
	and.b64  	%rd1559, %rd1558, %rd1557;
	xor.b64  	%rd1560, %rd1559, %rd1537;
	add.s64 	%rd1561, %rd1550, %rd1560;
	add.s64 	%rd1562, %rd1561, %rd1556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6522,%dummy}, %rd1551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6523}, %rd1551;
	}
	shf.r.wrap.b32 	%r6524, %r6523, %r6522, 14;
	shf.r.wrap.b32 	%r6525, %r6522, %r6523, 14;
	mov.b64 	%rd1563, {%r6525, %r6524};
	shf.r.wrap.b32 	%r6526, %r6523, %r6522, 18;
	shf.r.wrap.b32 	%r6527, %r6522, %r6523, 18;
	mov.b64 	%rd1564, {%r6527, %r6526};
	xor.b64  	%rd1565, %rd1564, %rd1563;
	shf.l.wrap.b32 	%r6528, %r6522, %r6523, 23;
	shf.l.wrap.b32 	%r6529, %r6523, %r6522, 23;
	mov.b64 	%rd1566, {%r6529, %r6528};
	xor.b64  	%rd1567, %rd1565, %rd1566;
	xor.b64  	%rd1568, %rd1526, %rd1501;
	and.b64  	%rd1569, %rd1551, %rd1568;
	xor.b64  	%rd1570, %rd1569, %rd1501;
	add.s64 	%rd1571, %rd1476, %rd1235;
	ld.const.u64 	%rd1572, [k_sha512+344];
	add.s64 	%rd1573, %rd1571, %rd1572;
	add.s64 	%rd1574, %rd1573, %rd1570;
	add.s64 	%rd1575, %rd1574, %rd1567;
	add.s64 	%rd1576, %rd1575, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6530,%dummy}, %rd1562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6531}, %rd1562;
	}
	shf.r.wrap.b32 	%r6532, %r6531, %r6530, 28;
	shf.r.wrap.b32 	%r6533, %r6530, %r6531, 28;
	mov.b64 	%rd1577, {%r6533, %r6532};
	shf.l.wrap.b32 	%r6534, %r6530, %r6531, 30;
	shf.l.wrap.b32 	%r6535, %r6531, %r6530, 30;
	mov.b64 	%rd1578, {%r6535, %r6534};
	xor.b64  	%rd1579, %rd1578, %rd1577;
	shf.l.wrap.b32 	%r6536, %r6530, %r6531, 25;
	shf.l.wrap.b32 	%r6537, %r6531, %r6530, 25;
	mov.b64 	%rd1580, {%r6537, %r6536};
	xor.b64  	%rd1581, %rd1579, %rd1580;
	xor.b64  	%rd1582, %rd1562, %rd1512;
	xor.b64  	%rd1583, %rd1562, %rd1537;
	and.b64  	%rd1584, %rd1583, %rd1582;
	xor.b64  	%rd1585, %rd1584, %rd1562;
	add.s64 	%rd1586, %rd1575, %rd1585;
	add.s64 	%rd1587, %rd1586, %rd1581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6538,%dummy}, %rd1576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6539}, %rd1576;
	}
	shf.r.wrap.b32 	%r6540, %r6539, %r6538, 14;
	shf.r.wrap.b32 	%r6541, %r6538, %r6539, 14;
	mov.b64 	%rd1588, {%r6541, %r6540};
	shf.r.wrap.b32 	%r6542, %r6539, %r6538, 18;
	shf.r.wrap.b32 	%r6543, %r6538, %r6539, 18;
	mov.b64 	%rd1589, {%r6543, %r6542};
	xor.b64  	%rd1590, %rd1589, %rd1588;
	shf.l.wrap.b32 	%r6544, %r6538, %r6539, 23;
	shf.l.wrap.b32 	%r6545, %r6539, %r6538, 23;
	mov.b64 	%rd1591, {%r6545, %r6544};
	xor.b64  	%rd1592, %rd1590, %rd1591;
	xor.b64  	%rd1593, %rd1551, %rd1526;
	and.b64  	%rd1594, %rd1576, %rd1593;
	xor.b64  	%rd1595, %rd1594, %rd1526;
	add.s64 	%rd1596, %rd1501, %rd1248;
	ld.const.u64 	%rd1597, [k_sha512+352];
	add.s64 	%rd1598, %rd1596, %rd1597;
	add.s64 	%rd1599, %rd1598, %rd1595;
	add.s64 	%rd1600, %rd1599, %rd1592;
	add.s64 	%rd1601, %rd1600, %rd1512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6546,%dummy}, %rd1587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6547}, %rd1587;
	}
	shf.r.wrap.b32 	%r6548, %r6547, %r6546, 28;
	shf.r.wrap.b32 	%r6549, %r6546, %r6547, 28;
	mov.b64 	%rd1602, {%r6549, %r6548};
	shf.l.wrap.b32 	%r6550, %r6546, %r6547, 30;
	shf.l.wrap.b32 	%r6551, %r6547, %r6546, 30;
	mov.b64 	%rd1603, {%r6551, %r6550};
	xor.b64  	%rd1604, %rd1603, %rd1602;
	shf.l.wrap.b32 	%r6552, %r6546, %r6547, 25;
	shf.l.wrap.b32 	%r6553, %r6547, %r6546, 25;
	mov.b64 	%rd1605, {%r6553, %r6552};
	xor.b64  	%rd1606, %rd1604, %rd1605;
	xor.b64  	%rd1607, %rd1587, %rd1537;
	xor.b64  	%rd1608, %rd1587, %rd1562;
	and.b64  	%rd1609, %rd1608, %rd1607;
	xor.b64  	%rd1610, %rd1609, %rd1587;
	add.s64 	%rd1611, %rd1600, %rd1610;
	add.s64 	%rd1612, %rd1611, %rd1606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6554,%dummy}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6555}, %rd1601;
	}
	shf.r.wrap.b32 	%r6556, %r6555, %r6554, 14;
	shf.r.wrap.b32 	%r6557, %r6554, %r6555, 14;
	mov.b64 	%rd1613, {%r6557, %r6556};
	shf.r.wrap.b32 	%r6558, %r6555, %r6554, 18;
	shf.r.wrap.b32 	%r6559, %r6554, %r6555, 18;
	mov.b64 	%rd1614, {%r6559, %r6558};
	xor.b64  	%rd1615, %rd1614, %rd1613;
	shf.l.wrap.b32 	%r6560, %r6554, %r6555, 23;
	shf.l.wrap.b32 	%r6561, %r6555, %r6554, 23;
	mov.b64 	%rd1616, {%r6561, %r6560};
	xor.b64  	%rd1617, %rd1615, %rd1616;
	xor.b64  	%rd1618, %rd1576, %rd1551;
	and.b64  	%rd1619, %rd1601, %rd1618;
	xor.b64  	%rd1620, %rd1619, %rd1551;
	add.s64 	%rd1621, %rd1526, %rd1261;
	ld.const.u64 	%rd1622, [k_sha512+360];
	add.s64 	%rd1623, %rd1621, %rd1622;
	add.s64 	%rd1624, %rd1623, %rd1620;
	add.s64 	%rd1625, %rd1624, %rd1617;
	add.s64 	%rd1626, %rd1625, %rd1537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6562,%dummy}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6563}, %rd1612;
	}
	shf.r.wrap.b32 	%r6564, %r6563, %r6562, 28;
	shf.r.wrap.b32 	%r6565, %r6562, %r6563, 28;
	mov.b64 	%rd1627, {%r6565, %r6564};
	shf.l.wrap.b32 	%r6566, %r6562, %r6563, 30;
	shf.l.wrap.b32 	%r6567, %r6563, %r6562, 30;
	mov.b64 	%rd1628, {%r6567, %r6566};
	xor.b64  	%rd1629, %rd1628, %rd1627;
	shf.l.wrap.b32 	%r6568, %r6562, %r6563, 25;
	shf.l.wrap.b32 	%r6569, %r6563, %r6562, 25;
	mov.b64 	%rd1630, {%r6569, %r6568};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	xor.b64  	%rd1632, %rd1612, %rd1562;
	xor.b64  	%rd1633, %rd1612, %rd1587;
	and.b64  	%rd1634, %rd1633, %rd1632;
	xor.b64  	%rd1635, %rd1634, %rd1612;
	add.s64 	%rd1636, %rd1625, %rd1635;
	add.s64 	%rd1637, %rd1636, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6570,%dummy}, %rd1626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6571}, %rd1626;
	}
	shf.r.wrap.b32 	%r6572, %r6571, %r6570, 14;
	shf.r.wrap.b32 	%r6573, %r6570, %r6571, 14;
	mov.b64 	%rd1638, {%r6573, %r6572};
	shf.r.wrap.b32 	%r6574, %r6571, %r6570, 18;
	shf.r.wrap.b32 	%r6575, %r6570, %r6571, 18;
	mov.b64 	%rd1639, {%r6575, %r6574};
	xor.b64  	%rd1640, %rd1639, %rd1638;
	shf.l.wrap.b32 	%r6576, %r6570, %r6571, 23;
	shf.l.wrap.b32 	%r6577, %r6571, %r6570, 23;
	mov.b64 	%rd1641, {%r6577, %r6576};
	xor.b64  	%rd1642, %rd1640, %rd1641;
	xor.b64  	%rd1643, %rd1601, %rd1576;
	and.b64  	%rd1644, %rd1626, %rd1643;
	xor.b64  	%rd1645, %rd1644, %rd1576;
	add.s64 	%rd1646, %rd1551, %rd1274;
	ld.const.u64 	%rd1647, [k_sha512+368];
	add.s64 	%rd1648, %rd1646, %rd1647;
	add.s64 	%rd1649, %rd1648, %rd1645;
	add.s64 	%rd1650, %rd1649, %rd1642;
	add.s64 	%rd1651, %rd1650, %rd1562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6578,%dummy}, %rd1637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6579}, %rd1637;
	}
	shf.r.wrap.b32 	%r6580, %r6579, %r6578, 28;
	shf.r.wrap.b32 	%r6581, %r6578, %r6579, 28;
	mov.b64 	%rd1652, {%r6581, %r6580};
	shf.l.wrap.b32 	%r6582, %r6578, %r6579, 30;
	shf.l.wrap.b32 	%r6583, %r6579, %r6578, 30;
	mov.b64 	%rd1653, {%r6583, %r6582};
	xor.b64  	%rd1654, %rd1653, %rd1652;
	shf.l.wrap.b32 	%r6584, %r6578, %r6579, 25;
	shf.l.wrap.b32 	%r6585, %r6579, %r6578, 25;
	mov.b64 	%rd1655, {%r6585, %r6584};
	xor.b64  	%rd1656, %rd1654, %rd1655;
	xor.b64  	%rd1657, %rd1637, %rd1587;
	xor.b64  	%rd1658, %rd1637, %rd1612;
	and.b64  	%rd1659, %rd1658, %rd1657;
	xor.b64  	%rd1660, %rd1659, %rd1637;
	add.s64 	%rd1661, %rd1650, %rd1660;
	add.s64 	%rd1662, %rd1661, %rd1656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6586,%dummy}, %rd1651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6587}, %rd1651;
	}
	shf.r.wrap.b32 	%r6588, %r6587, %r6586, 14;
	shf.r.wrap.b32 	%r6589, %r6586, %r6587, 14;
	mov.b64 	%rd1663, {%r6589, %r6588};
	shf.r.wrap.b32 	%r6590, %r6587, %r6586, 18;
	shf.r.wrap.b32 	%r6591, %r6586, %r6587, 18;
	mov.b64 	%rd1664, {%r6591, %r6590};
	xor.b64  	%rd1665, %rd1664, %rd1663;
	shf.l.wrap.b32 	%r6592, %r6586, %r6587, 23;
	shf.l.wrap.b32 	%r6593, %r6587, %r6586, 23;
	mov.b64 	%rd1666, {%r6593, %r6592};
	xor.b64  	%rd1667, %rd1665, %rd1666;
	xor.b64  	%rd1668, %rd1626, %rd1601;
	and.b64  	%rd1669, %rd1651, %rd1668;
	xor.b64  	%rd1670, %rd1669, %rd1601;
	add.s64 	%rd1671, %rd1576, %rd1287;
	ld.const.u64 	%rd1672, [k_sha512+376];
	add.s64 	%rd1673, %rd1671, %rd1672;
	add.s64 	%rd1674, %rd1673, %rd1670;
	add.s64 	%rd1675, %rd1674, %rd1667;
	add.s64 	%rd1676, %rd1675, %rd1587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6594,%dummy}, %rd1662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6595}, %rd1662;
	}
	shf.r.wrap.b32 	%r6596, %r6595, %r6594, 28;
	shf.r.wrap.b32 	%r6597, %r6594, %r6595, 28;
	mov.b64 	%rd1677, {%r6597, %r6596};
	shf.l.wrap.b32 	%r6598, %r6594, %r6595, 30;
	shf.l.wrap.b32 	%r6599, %r6595, %r6594, 30;
	mov.b64 	%rd1678, {%r6599, %r6598};
	xor.b64  	%rd1679, %rd1678, %rd1677;
	shf.l.wrap.b32 	%r6600, %r6594, %r6595, 25;
	shf.l.wrap.b32 	%r6601, %r6595, %r6594, 25;
	mov.b64 	%rd1680, {%r6601, %r6600};
	xor.b64  	%rd1681, %rd1679, %rd1680;
	xor.b64  	%rd1682, %rd1662, %rd1612;
	xor.b64  	%rd1683, %rd1662, %rd1637;
	and.b64  	%rd1684, %rd1683, %rd1682;
	xor.b64  	%rd1685, %rd1684, %rd1662;
	add.s64 	%rd1686, %rd1675, %rd1685;
	add.s64 	%rd1687, %rd1686, %rd1681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6602,%dummy}, %rd1274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6603}, %rd1274;
	}
	shf.r.wrap.b32 	%r6604, %r6603, %r6602, 19;
	shf.r.wrap.b32 	%r6605, %r6602, %r6603, 19;
	mov.b64 	%rd1688, {%r6605, %r6604};
	shf.l.wrap.b32 	%r6606, %r6602, %r6603, 3;
	shf.l.wrap.b32 	%r6607, %r6603, %r6602, 3;
	mov.b64 	%rd1689, {%r6607, %r6606};
	shr.u64 	%rd1690, %rd1274, 6;
	xor.b64  	%rd1691, %rd1688, %rd1690;
	xor.b64  	%rd1692, %rd1691, %rd1689;
	shf.r.wrap.b32 	%r6608, %r6217, %r6216, 1;
	shf.r.wrap.b32 	%r6609, %r6216, %r6217, 1;
	mov.b64 	%rd1693, {%r6609, %r6608};
	shf.r.wrap.b32 	%r6610, %r6217, %r6216, 8;
	shf.r.wrap.b32 	%r6611, %r6216, %r6217, 8;
	mov.b64 	%rd1694, {%r6611, %r6610};
	shr.u64 	%rd1695, %rd1105, 7;
	xor.b64  	%rd1696, %rd1693, %rd1695;
	xor.b64  	%rd1697, %rd1696, %rd1694;
	add.s64 	%rd1698, %rd1209, %rd1092;
	add.s64 	%rd1699, %rd1698, %rd1692;
	add.s64 	%rd1700, %rd1699, %rd1697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6612,%dummy}, %rd1287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6613}, %rd1287;
	}
	shf.r.wrap.b32 	%r6614, %r6613, %r6612, 19;
	shf.r.wrap.b32 	%r6615, %r6612, %r6613, 19;
	mov.b64 	%rd1701, {%r6615, %r6614};
	shf.l.wrap.b32 	%r6616, %r6612, %r6613, 3;
	shf.l.wrap.b32 	%r6617, %r6613, %r6612, 3;
	mov.b64 	%rd1702, {%r6617, %r6616};
	shr.u64 	%rd1703, %rd1287, 6;
	xor.b64  	%rd1704, %rd1701, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd1702;
	shf.r.wrap.b32 	%r6618, %r6227, %r6226, 1;
	shf.r.wrap.b32 	%r6619, %r6226, %r6227, 1;
	mov.b64 	%rd1706, {%r6619, %r6618};
	shf.r.wrap.b32 	%r6620, %r6227, %r6226, 8;
	shf.r.wrap.b32 	%r6621, %r6226, %r6227, 8;
	mov.b64 	%rd1707, {%r6621, %r6620};
	shr.u64 	%rd1708, %rd1118, 7;
	xor.b64  	%rd1709, %rd1706, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1707;
	add.s64 	%rd1711, %rd1222, %rd1105;
	add.s64 	%rd1712, %rd1711, %rd1705;
	add.s64 	%rd1713, %rd1712, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6622,%dummy}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6623}, %rd1700;
	}
	shf.r.wrap.b32 	%r6624, %r6623, %r6622, 19;
	shf.r.wrap.b32 	%r6625, %r6622, %r6623, 19;
	mov.b64 	%rd1714, {%r6625, %r6624};
	shf.l.wrap.b32 	%r6626, %r6622, %r6623, 3;
	shf.l.wrap.b32 	%r6627, %r6623, %r6622, 3;
	mov.b64 	%rd1715, {%r6627, %r6626};
	shr.u64 	%rd1716, %rd1700, 6;
	xor.b64  	%rd1717, %rd1714, %rd1716;
	xor.b64  	%rd1718, %rd1717, %rd1715;
	shf.r.wrap.b32 	%r6628, %r6237, %r6236, 1;
	shf.r.wrap.b32 	%r6629, %r6236, %r6237, 1;
	mov.b64 	%rd1719, {%r6629, %r6628};
	shf.r.wrap.b32 	%r6630, %r6237, %r6236, 8;
	shf.r.wrap.b32 	%r6631, %r6236, %r6237, 8;
	mov.b64 	%rd1720, {%r6631, %r6630};
	shr.u64 	%rd1721, %rd1131, 7;
	xor.b64  	%rd1722, %rd1719, %rd1721;
	xor.b64  	%rd1723, %rd1722, %rd1720;
	add.s64 	%rd1724, %rd1235, %rd1118;
	add.s64 	%rd1725, %rd1724, %rd1718;
	add.s64 	%rd1726, %rd1725, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6632,%dummy}, %rd1713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6633}, %rd1713;
	}
	shf.r.wrap.b32 	%r6634, %r6633, %r6632, 19;
	shf.r.wrap.b32 	%r6635, %r6632, %r6633, 19;
	mov.b64 	%rd1727, {%r6635, %r6634};
	shf.l.wrap.b32 	%r6636, %r6632, %r6633, 3;
	shf.l.wrap.b32 	%r6637, %r6633, %r6632, 3;
	mov.b64 	%rd1728, {%r6637, %r6636};
	shr.u64 	%rd1729, %rd1713, 6;
	xor.b64  	%rd1730, %rd1727, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1728;
	shf.r.wrap.b32 	%r6638, %r6247, %r6246, 1;
	shf.r.wrap.b32 	%r6639, %r6246, %r6247, 1;
	mov.b64 	%rd1732, {%r6639, %r6638};
	shf.r.wrap.b32 	%r6640, %r6247, %r6246, 8;
	shf.r.wrap.b32 	%r6641, %r6246, %r6247, 8;
	mov.b64 	%rd1733, {%r6641, %r6640};
	shr.u64 	%rd1734, %rd1144, 7;
	xor.b64  	%rd1735, %rd1732, %rd1734;
	xor.b64  	%rd1736, %rd1735, %rd1733;
	add.s64 	%rd1737, %rd1248, %rd1131;
	add.s64 	%rd1738, %rd1737, %rd1731;
	add.s64 	%rd1739, %rd1738, %rd1736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6642,%dummy}, %rd1726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6643}, %rd1726;
	}
	shf.r.wrap.b32 	%r6644, %r6643, %r6642, 19;
	shf.r.wrap.b32 	%r6645, %r6642, %r6643, 19;
	mov.b64 	%rd1740, {%r6645, %r6644};
	shf.l.wrap.b32 	%r6646, %r6642, %r6643, 3;
	shf.l.wrap.b32 	%r6647, %r6643, %r6642, 3;
	mov.b64 	%rd1741, {%r6647, %r6646};
	shr.u64 	%rd1742, %rd1726, 6;
	xor.b64  	%rd1743, %rd1740, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1741;
	shf.r.wrap.b32 	%r6648, %r6257, %r6256, 1;
	shf.r.wrap.b32 	%r6649, %r6256, %r6257, 1;
	mov.b64 	%rd1745, {%r6649, %r6648};
	shf.r.wrap.b32 	%r6650, %r6257, %r6256, 8;
	shf.r.wrap.b32 	%r6651, %r6256, %r6257, 8;
	mov.b64 	%rd1746, {%r6651, %r6650};
	shr.u64 	%rd1747, %rd1157, 7;
	xor.b64  	%rd1748, %rd1745, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1746;
	add.s64 	%rd1750, %rd1261, %rd1144;
	add.s64 	%rd1751, %rd1750, %rd1744;
	add.s64 	%rd1752, %rd1751, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6652,%dummy}, %rd1739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6653}, %rd1739;
	}
	shf.r.wrap.b32 	%r6654, %r6653, %r6652, 19;
	shf.r.wrap.b32 	%r6655, %r6652, %r6653, 19;
	mov.b64 	%rd1753, {%r6655, %r6654};
	shf.l.wrap.b32 	%r6656, %r6652, %r6653, 3;
	shf.l.wrap.b32 	%r6657, %r6653, %r6652, 3;
	mov.b64 	%rd1754, {%r6657, %r6656};
	shr.u64 	%rd1755, %rd1739, 6;
	xor.b64  	%rd1756, %rd1753, %rd1755;
	xor.b64  	%rd1757, %rd1756, %rd1754;
	shf.r.wrap.b32 	%r6658, %r6267, %r6266, 1;
	shf.r.wrap.b32 	%r6659, %r6266, %r6267, 1;
	mov.b64 	%rd1758, {%r6659, %r6658};
	shf.r.wrap.b32 	%r6660, %r6267, %r6266, 8;
	shf.r.wrap.b32 	%r6661, %r6266, %r6267, 8;
	mov.b64 	%rd1759, {%r6661, %r6660};
	shr.u64 	%rd1760, %rd1170, 7;
	xor.b64  	%rd1761, %rd1758, %rd1760;
	xor.b64  	%rd1762, %rd1761, %rd1759;
	add.s64 	%rd1763, %rd1274, %rd1157;
	add.s64 	%rd1764, %rd1763, %rd1757;
	add.s64 	%rd1765, %rd1764, %rd1762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6662,%dummy}, %rd1752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6663}, %rd1752;
	}
	shf.r.wrap.b32 	%r6664, %r6663, %r6662, 19;
	shf.r.wrap.b32 	%r6665, %r6662, %r6663, 19;
	mov.b64 	%rd1766, {%r6665, %r6664};
	shf.l.wrap.b32 	%r6666, %r6662, %r6663, 3;
	shf.l.wrap.b32 	%r6667, %r6663, %r6662, 3;
	mov.b64 	%rd1767, {%r6667, %r6666};
	shr.u64 	%rd1768, %rd1752, 6;
	xor.b64  	%rd1769, %rd1766, %rd1768;
	xor.b64  	%rd1770, %rd1769, %rd1767;
	shf.r.wrap.b32 	%r6668, %r6277, %r6276, 1;
	shf.r.wrap.b32 	%r6669, %r6276, %r6277, 1;
	mov.b64 	%rd1771, {%r6669, %r6668};
	shf.r.wrap.b32 	%r6670, %r6277, %r6276, 8;
	shf.r.wrap.b32 	%r6671, %r6276, %r6277, 8;
	mov.b64 	%rd1772, {%r6671, %r6670};
	shr.u64 	%rd1773, %rd1183, 7;
	xor.b64  	%rd1774, %rd1771, %rd1773;
	xor.b64  	%rd1775, %rd1774, %rd1772;
	add.s64 	%rd1776, %rd1287, %rd1170;
	add.s64 	%rd1777, %rd1776, %rd1770;
	add.s64 	%rd1778, %rd1777, %rd1775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6672,%dummy}, %rd1765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6673}, %rd1765;
	}
	shf.r.wrap.b32 	%r6674, %r6673, %r6672, 19;
	shf.r.wrap.b32 	%r6675, %r6672, %r6673, 19;
	mov.b64 	%rd1779, {%r6675, %r6674};
	shf.l.wrap.b32 	%r6676, %r6672, %r6673, 3;
	shf.l.wrap.b32 	%r6677, %r6673, %r6672, 3;
	mov.b64 	%rd1780, {%r6677, %r6676};
	shr.u64 	%rd1781, %rd1765, 6;
	xor.b64  	%rd1782, %rd1779, %rd1781;
	xor.b64  	%rd1783, %rd1782, %rd1780;
	shf.r.wrap.b32 	%r6678, %r6287, %r6286, 1;
	shf.r.wrap.b32 	%r6679, %r6286, %r6287, 1;
	mov.b64 	%rd1784, {%r6679, %r6678};
	shf.r.wrap.b32 	%r6680, %r6287, %r6286, 8;
	shf.r.wrap.b32 	%r6681, %r6286, %r6287, 8;
	mov.b64 	%rd1785, {%r6681, %r6680};
	shr.u64 	%rd1786, %rd1196, 7;
	xor.b64  	%rd1787, %rd1784, %rd1786;
	xor.b64  	%rd1788, %rd1787, %rd1785;
	add.s64 	%rd1789, %rd1700, %rd1183;
	add.s64 	%rd1790, %rd1789, %rd1783;
	add.s64 	%rd1791, %rd1790, %rd1788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6682,%dummy}, %rd1778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6683}, %rd1778;
	}
	shf.r.wrap.b32 	%r6684, %r6683, %r6682, 19;
	shf.r.wrap.b32 	%r6685, %r6682, %r6683, 19;
	mov.b64 	%rd1792, {%r6685, %r6684};
	shf.l.wrap.b32 	%r6686, %r6682, %r6683, 3;
	shf.l.wrap.b32 	%r6687, %r6683, %r6682, 3;
	mov.b64 	%rd1793, {%r6687, %r6686};
	shr.u64 	%rd1794, %rd1778, 6;
	xor.b64  	%rd1795, %rd1792, %rd1794;
	xor.b64  	%rd1796, %rd1795, %rd1793;
	shf.r.wrap.b32 	%r6688, %r6297, %r6296, 1;
	shf.r.wrap.b32 	%r6689, %r6296, %r6297, 1;
	mov.b64 	%rd1797, {%r6689, %r6688};
	shf.r.wrap.b32 	%r6690, %r6297, %r6296, 8;
	shf.r.wrap.b32 	%r6691, %r6296, %r6297, 8;
	mov.b64 	%rd1798, {%r6691, %r6690};
	shr.u64 	%rd1799, %rd1209, 7;
	xor.b64  	%rd1800, %rd1797, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd1798;
	add.s64 	%rd1802, %rd1713, %rd1196;
	add.s64 	%rd1803, %rd1802, %rd1796;
	add.s64 	%rd1804, %rd1803, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6692,%dummy}, %rd1791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6693}, %rd1791;
	}
	shf.r.wrap.b32 	%r6694, %r6693, %r6692, 19;
	shf.r.wrap.b32 	%r6695, %r6692, %r6693, 19;
	mov.b64 	%rd1805, {%r6695, %r6694};
	shf.l.wrap.b32 	%r6696, %r6692, %r6693, 3;
	shf.l.wrap.b32 	%r6697, %r6693, %r6692, 3;
	mov.b64 	%rd1806, {%r6697, %r6696};
	shr.u64 	%rd1807, %rd1791, 6;
	xor.b64  	%rd1808, %rd1805, %rd1807;
	xor.b64  	%rd1809, %rd1808, %rd1806;
	shf.r.wrap.b32 	%r6698, %r6307, %r6306, 1;
	shf.r.wrap.b32 	%r6699, %r6306, %r6307, 1;
	mov.b64 	%rd1810, {%r6699, %r6698};
	shf.r.wrap.b32 	%r6700, %r6307, %r6306, 8;
	shf.r.wrap.b32 	%r6701, %r6306, %r6307, 8;
	mov.b64 	%rd1811, {%r6701, %r6700};
	shr.u64 	%rd1812, %rd1222, 7;
	xor.b64  	%rd1813, %rd1810, %rd1812;
	xor.b64  	%rd1814, %rd1813, %rd1811;
	add.s64 	%rd1815, %rd1726, %rd1209;
	add.s64 	%rd1816, %rd1815, %rd1809;
	add.s64 	%rd1817, %rd1816, %rd1814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6702,%dummy}, %rd1804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6703}, %rd1804;
	}
	shf.r.wrap.b32 	%r6704, %r6703, %r6702, 19;
	shf.r.wrap.b32 	%r6705, %r6702, %r6703, 19;
	mov.b64 	%rd1818, {%r6705, %r6704};
	shf.l.wrap.b32 	%r6706, %r6702, %r6703, 3;
	shf.l.wrap.b32 	%r6707, %r6703, %r6702, 3;
	mov.b64 	%rd1819, {%r6707, %r6706};
	shr.u64 	%rd1820, %rd1804, 6;
	xor.b64  	%rd1821, %rd1818, %rd1820;
	xor.b64  	%rd1822, %rd1821, %rd1819;
	shf.r.wrap.b32 	%r6708, %r6317, %r6316, 1;
	shf.r.wrap.b32 	%r6709, %r6316, %r6317, 1;
	mov.b64 	%rd1823, {%r6709, %r6708};
	shf.r.wrap.b32 	%r6710, %r6317, %r6316, 8;
	shf.r.wrap.b32 	%r6711, %r6316, %r6317, 8;
	mov.b64 	%rd1824, {%r6711, %r6710};
	shr.u64 	%rd1825, %rd1235, 7;
	xor.b64  	%rd1826, %rd1823, %rd1825;
	xor.b64  	%rd1827, %rd1826, %rd1824;
	add.s64 	%rd1828, %rd1739, %rd1222;
	add.s64 	%rd1829, %rd1828, %rd1822;
	add.s64 	%rd1830, %rd1829, %rd1827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6712,%dummy}, %rd1817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6713}, %rd1817;
	}
	shf.r.wrap.b32 	%r6714, %r6713, %r6712, 19;
	shf.r.wrap.b32 	%r6715, %r6712, %r6713, 19;
	mov.b64 	%rd1831, {%r6715, %r6714};
	shf.l.wrap.b32 	%r6716, %r6712, %r6713, 3;
	shf.l.wrap.b32 	%r6717, %r6713, %r6712, 3;
	mov.b64 	%rd1832, {%r6717, %r6716};
	shr.u64 	%rd1833, %rd1817, 6;
	xor.b64  	%rd1834, %rd1831, %rd1833;
	xor.b64  	%rd1835, %rd1834, %rd1832;
	shf.r.wrap.b32 	%r6718, %r6327, %r6326, 1;
	shf.r.wrap.b32 	%r6719, %r6326, %r6327, 1;
	mov.b64 	%rd1836, {%r6719, %r6718};
	shf.r.wrap.b32 	%r6720, %r6327, %r6326, 8;
	shf.r.wrap.b32 	%r6721, %r6326, %r6327, 8;
	mov.b64 	%rd1837, {%r6721, %r6720};
	shr.u64 	%rd1838, %rd1248, 7;
	xor.b64  	%rd1839, %rd1836, %rd1838;
	xor.b64  	%rd1840, %rd1839, %rd1837;
	add.s64 	%rd1841, %rd1752, %rd1235;
	add.s64 	%rd1842, %rd1841, %rd1835;
	add.s64 	%rd1843, %rd1842, %rd1840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd1830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6723}, %rd1830;
	}
	shf.r.wrap.b32 	%r6724, %r6723, %r6722, 19;
	shf.r.wrap.b32 	%r6725, %r6722, %r6723, 19;
	mov.b64 	%rd1844, {%r6725, %r6724};
	shf.l.wrap.b32 	%r6726, %r6722, %r6723, 3;
	shf.l.wrap.b32 	%r6727, %r6723, %r6722, 3;
	mov.b64 	%rd1845, {%r6727, %r6726};
	shr.u64 	%rd1846, %rd1830, 6;
	xor.b64  	%rd1847, %rd1844, %rd1846;
	xor.b64  	%rd1848, %rd1847, %rd1845;
	shf.r.wrap.b32 	%r6728, %r6337, %r6336, 1;
	shf.r.wrap.b32 	%r6729, %r6336, %r6337, 1;
	mov.b64 	%rd1849, {%r6729, %r6728};
	shf.r.wrap.b32 	%r6730, %r6337, %r6336, 8;
	shf.r.wrap.b32 	%r6731, %r6336, %r6337, 8;
	mov.b64 	%rd1850, {%r6731, %r6730};
	shr.u64 	%rd1851, %rd1261, 7;
	xor.b64  	%rd1852, %rd1849, %rd1851;
	xor.b64  	%rd1853, %rd1852, %rd1850;
	add.s64 	%rd1854, %rd1765, %rd1248;
	add.s64 	%rd1855, %rd1854, %rd1848;
	add.s64 	%rd1856, %rd1855, %rd1853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6732,%dummy}, %rd1843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6733}, %rd1843;
	}
	shf.r.wrap.b32 	%r6734, %r6733, %r6732, 19;
	shf.r.wrap.b32 	%r6735, %r6732, %r6733, 19;
	mov.b64 	%rd1857, {%r6735, %r6734};
	shf.l.wrap.b32 	%r6736, %r6732, %r6733, 3;
	shf.l.wrap.b32 	%r6737, %r6733, %r6732, 3;
	mov.b64 	%rd1858, {%r6737, %r6736};
	shr.u64 	%rd1859, %rd1843, 6;
	xor.b64  	%rd1860, %rd1857, %rd1859;
	xor.b64  	%rd1861, %rd1860, %rd1858;
	shf.r.wrap.b32 	%r6738, %r6603, %r6602, 1;
	shf.r.wrap.b32 	%r6739, %r6602, %r6603, 1;
	mov.b64 	%rd1862, {%r6739, %r6738};
	shf.r.wrap.b32 	%r6740, %r6603, %r6602, 8;
	shf.r.wrap.b32 	%r6741, %r6602, %r6603, 8;
	mov.b64 	%rd1863, {%r6741, %r6740};
	shr.u64 	%rd1864, %rd1274, 7;
	xor.b64  	%rd1865, %rd1862, %rd1864;
	xor.b64  	%rd1866, %rd1865, %rd1863;
	add.s64 	%rd1867, %rd1778, %rd1261;
	add.s64 	%rd1868, %rd1867, %rd1861;
	add.s64 	%rd1869, %rd1868, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6742,%dummy}, %rd1856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6743}, %rd1856;
	}
	shf.r.wrap.b32 	%r6744, %r6743, %r6742, 19;
	shf.r.wrap.b32 	%r6745, %r6742, %r6743, 19;
	mov.b64 	%rd1870, {%r6745, %r6744};
	shf.l.wrap.b32 	%r6746, %r6742, %r6743, 3;
	shf.l.wrap.b32 	%r6747, %r6743, %r6742, 3;
	mov.b64 	%rd1871, {%r6747, %r6746};
	shr.u64 	%rd1872, %rd1856, 6;
	xor.b64  	%rd1873, %rd1870, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1871;
	shf.r.wrap.b32 	%r6748, %r6613, %r6612, 1;
	shf.r.wrap.b32 	%r6749, %r6612, %r6613, 1;
	mov.b64 	%rd1875, {%r6749, %r6748};
	shf.r.wrap.b32 	%r6750, %r6613, %r6612, 8;
	shf.r.wrap.b32 	%r6751, %r6612, %r6613, 8;
	mov.b64 	%rd1876, {%r6751, %r6750};
	shr.u64 	%rd1877, %rd1287, 7;
	xor.b64  	%rd1878, %rd1875, %rd1877;
	xor.b64  	%rd1879, %rd1878, %rd1876;
	add.s64 	%rd1880, %rd1791, %rd1274;
	add.s64 	%rd1881, %rd1880, %rd1874;
	add.s64 	%rd1882, %rd1881, %rd1879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6752,%dummy}, %rd1869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6753}, %rd1869;
	}
	shf.r.wrap.b32 	%r6754, %r6753, %r6752, 19;
	shf.r.wrap.b32 	%r6755, %r6752, %r6753, 19;
	mov.b64 	%rd1883, {%r6755, %r6754};
	shf.l.wrap.b32 	%r6756, %r6752, %r6753, 3;
	shf.l.wrap.b32 	%r6757, %r6753, %r6752, 3;
	mov.b64 	%rd1884, {%r6757, %r6756};
	shr.u64 	%rd1885, %rd1869, 6;
	xor.b64  	%rd1886, %rd1883, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1884;
	shf.r.wrap.b32 	%r6758, %r6623, %r6622, 1;
	shf.r.wrap.b32 	%r6759, %r6622, %r6623, 1;
	mov.b64 	%rd1888, {%r6759, %r6758};
	shf.r.wrap.b32 	%r6760, %r6623, %r6622, 8;
	shf.r.wrap.b32 	%r6761, %r6622, %r6623, 8;
	mov.b64 	%rd1889, {%r6761, %r6760};
	shr.u64 	%rd1890, %rd1700, 7;
	xor.b64  	%rd1891, %rd1888, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1889;
	add.s64 	%rd1893, %rd1804, %rd1287;
	add.s64 	%rd1894, %rd1893, %rd1887;
	add.s64 	%rd1895, %rd1894, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6762,%dummy}, %rd1676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6763}, %rd1676;
	}
	shf.r.wrap.b32 	%r6764, %r6763, %r6762, 14;
	shf.r.wrap.b32 	%r6765, %r6762, %r6763, 14;
	mov.b64 	%rd1896, {%r6765, %r6764};
	shf.r.wrap.b32 	%r6766, %r6763, %r6762, 18;
	shf.r.wrap.b32 	%r6767, %r6762, %r6763, 18;
	mov.b64 	%rd1897, {%r6767, %r6766};
	xor.b64  	%rd1898, %rd1897, %rd1896;
	shf.l.wrap.b32 	%r6768, %r6762, %r6763, 23;
	shf.l.wrap.b32 	%r6769, %r6763, %r6762, 23;
	mov.b64 	%rd1899, {%r6769, %r6768};
	xor.b64  	%rd1900, %rd1898, %rd1899;
	xor.b64  	%rd1901, %rd1651, %rd1626;
	and.b64  	%rd1902, %rd1901, %rd1676;
	xor.b64  	%rd1903, %rd1902, %rd1626;
	add.s64 	%rd1904, %rd1903, %rd1601;
	add.s64 	%rd1905, %rd1904, %rd1700;
	ld.const.u64 	%rd1906, [k_sha512+384];
	add.s64 	%rd1907, %rd1905, %rd1906;
	add.s64 	%rd1908, %rd1907, %rd1900;
	add.s64 	%rd1909, %rd1908, %rd1612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6770,%dummy}, %rd1687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6771}, %rd1687;
	}
	shf.r.wrap.b32 	%r6772, %r6771, %r6770, 28;
	shf.r.wrap.b32 	%r6773, %r6770, %r6771, 28;
	mov.b64 	%rd1910, {%r6773, %r6772};
	shf.l.wrap.b32 	%r6774, %r6770, %r6771, 30;
	shf.l.wrap.b32 	%r6775, %r6771, %r6770, 30;
	mov.b64 	%rd1911, {%r6775, %r6774};
	xor.b64  	%rd1912, %rd1911, %rd1910;
	shf.l.wrap.b32 	%r6776, %r6770, %r6771, 25;
	shf.l.wrap.b32 	%r6777, %r6771, %r6770, 25;
	mov.b64 	%rd1913, {%r6777, %r6776};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	xor.b64  	%rd1915, %rd1687, %rd1637;
	xor.b64  	%rd1916, %rd1687, %rd1662;
	and.b64  	%rd1917, %rd1916, %rd1915;
	xor.b64  	%rd1918, %rd1917, %rd1687;
	add.s64 	%rd1919, %rd1908, %rd1918;
	add.s64 	%rd1920, %rd1919, %rd1914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6778,%dummy}, %rd1909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6779}, %rd1909;
	}
	shf.r.wrap.b32 	%r6780, %r6779, %r6778, 14;
	shf.r.wrap.b32 	%r6781, %r6778, %r6779, 14;
	mov.b64 	%rd1921, {%r6781, %r6780};
	shf.r.wrap.b32 	%r6782, %r6779, %r6778, 18;
	shf.r.wrap.b32 	%r6783, %r6778, %r6779, 18;
	mov.b64 	%rd1922, {%r6783, %r6782};
	xor.b64  	%rd1923, %rd1922, %rd1921;
	shf.l.wrap.b32 	%r6784, %r6778, %r6779, 23;
	shf.l.wrap.b32 	%r6785, %r6779, %r6778, 23;
	mov.b64 	%rd1924, {%r6785, %r6784};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	xor.b64  	%rd1926, %rd1676, %rd1651;
	and.b64  	%rd1927, %rd1909, %rd1926;
	xor.b64  	%rd1928, %rd1927, %rd1651;
	add.s64 	%rd1929, %rd1713, %rd1626;
	ld.const.u64 	%rd1930, [k_sha512+392];
	add.s64 	%rd1931, %rd1929, %rd1930;
	add.s64 	%rd1932, %rd1931, %rd1928;
	add.s64 	%rd1933, %rd1932, %rd1925;
	add.s64 	%rd1934, %rd1933, %rd1637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6786,%dummy}, %rd1920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6787}, %rd1920;
	}
	shf.r.wrap.b32 	%r6788, %r6787, %r6786, 28;
	shf.r.wrap.b32 	%r6789, %r6786, %r6787, 28;
	mov.b64 	%rd1935, {%r6789, %r6788};
	shf.l.wrap.b32 	%r6790, %r6786, %r6787, 30;
	shf.l.wrap.b32 	%r6791, %r6787, %r6786, 30;
	mov.b64 	%rd1936, {%r6791, %r6790};
	xor.b64  	%rd1937, %rd1936, %rd1935;
	shf.l.wrap.b32 	%r6792, %r6786, %r6787, 25;
	shf.l.wrap.b32 	%r6793, %r6787, %r6786, 25;
	mov.b64 	%rd1938, {%r6793, %r6792};
	xor.b64  	%rd1939, %rd1937, %rd1938;
	xor.b64  	%rd1940, %rd1920, %rd1662;
	xor.b64  	%rd1941, %rd1920, %rd1687;
	and.b64  	%rd1942, %rd1941, %rd1940;
	xor.b64  	%rd1943, %rd1942, %rd1920;
	add.s64 	%rd1944, %rd1933, %rd1943;
	add.s64 	%rd1945, %rd1944, %rd1939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6794,%dummy}, %rd1934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6795}, %rd1934;
	}
	shf.r.wrap.b32 	%r6796, %r6795, %r6794, 14;
	shf.r.wrap.b32 	%r6797, %r6794, %r6795, 14;
	mov.b64 	%rd1946, {%r6797, %r6796};
	shf.r.wrap.b32 	%r6798, %r6795, %r6794, 18;
	shf.r.wrap.b32 	%r6799, %r6794, %r6795, 18;
	mov.b64 	%rd1947, {%r6799, %r6798};
	xor.b64  	%rd1948, %rd1947, %rd1946;
	shf.l.wrap.b32 	%r6800, %r6794, %r6795, 23;
	shf.l.wrap.b32 	%r6801, %r6795, %r6794, 23;
	mov.b64 	%rd1949, {%r6801, %r6800};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	xor.b64  	%rd1951, %rd1909, %rd1676;
	and.b64  	%rd1952, %rd1934, %rd1951;
	xor.b64  	%rd1953, %rd1952, %rd1676;
	add.s64 	%rd1954, %rd1726, %rd1651;
	ld.const.u64 	%rd1955, [k_sha512+400];
	add.s64 	%rd1956, %rd1954, %rd1955;
	add.s64 	%rd1957, %rd1956, %rd1953;
	add.s64 	%rd1958, %rd1957, %rd1950;
	add.s64 	%rd1959, %rd1958, %rd1662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6802,%dummy}, %rd1945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6803}, %rd1945;
	}
	shf.r.wrap.b32 	%r6804, %r6803, %r6802, 28;
	shf.r.wrap.b32 	%r6805, %r6802, %r6803, 28;
	mov.b64 	%rd1960, {%r6805, %r6804};
	shf.l.wrap.b32 	%r6806, %r6802, %r6803, 30;
	shf.l.wrap.b32 	%r6807, %r6803, %r6802, 30;
	mov.b64 	%rd1961, {%r6807, %r6806};
	xor.b64  	%rd1962, %rd1961, %rd1960;
	shf.l.wrap.b32 	%r6808, %r6802, %r6803, 25;
	shf.l.wrap.b32 	%r6809, %r6803, %r6802, 25;
	mov.b64 	%rd1963, {%r6809, %r6808};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	xor.b64  	%rd1965, %rd1945, %rd1687;
	xor.b64  	%rd1966, %rd1945, %rd1920;
	and.b64  	%rd1967, %rd1966, %rd1965;
	xor.b64  	%rd1968, %rd1967, %rd1945;
	add.s64 	%rd1969, %rd1958, %rd1968;
	add.s64 	%rd1970, %rd1969, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6810,%dummy}, %rd1959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6811}, %rd1959;
	}
	shf.r.wrap.b32 	%r6812, %r6811, %r6810, 14;
	shf.r.wrap.b32 	%r6813, %r6810, %r6811, 14;
	mov.b64 	%rd1971, {%r6813, %r6812};
	shf.r.wrap.b32 	%r6814, %r6811, %r6810, 18;
	shf.r.wrap.b32 	%r6815, %r6810, %r6811, 18;
	mov.b64 	%rd1972, {%r6815, %r6814};
	xor.b64  	%rd1973, %rd1972, %rd1971;
	shf.l.wrap.b32 	%r6816, %r6810, %r6811, 23;
	shf.l.wrap.b32 	%r6817, %r6811, %r6810, 23;
	mov.b64 	%rd1974, {%r6817, %r6816};
	xor.b64  	%rd1975, %rd1973, %rd1974;
	xor.b64  	%rd1976, %rd1934, %rd1909;
	and.b64  	%rd1977, %rd1959, %rd1976;
	xor.b64  	%rd1978, %rd1977, %rd1909;
	add.s64 	%rd1979, %rd1739, %rd1676;
	ld.const.u64 	%rd1980, [k_sha512+408];
	add.s64 	%rd1981, %rd1979, %rd1980;
	add.s64 	%rd1982, %rd1981, %rd1978;
	add.s64 	%rd1983, %rd1982, %rd1975;
	add.s64 	%rd1984, %rd1983, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6818,%dummy}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6819}, %rd1970;
	}
	shf.r.wrap.b32 	%r6820, %r6819, %r6818, 28;
	shf.r.wrap.b32 	%r6821, %r6818, %r6819, 28;
	mov.b64 	%rd1985, {%r6821, %r6820};
	shf.l.wrap.b32 	%r6822, %r6818, %r6819, 30;
	shf.l.wrap.b32 	%r6823, %r6819, %r6818, 30;
	mov.b64 	%rd1986, {%r6823, %r6822};
	xor.b64  	%rd1987, %rd1986, %rd1985;
	shf.l.wrap.b32 	%r6824, %r6818, %r6819, 25;
	shf.l.wrap.b32 	%r6825, %r6819, %r6818, 25;
	mov.b64 	%rd1988, {%r6825, %r6824};
	xor.b64  	%rd1989, %rd1987, %rd1988;
	xor.b64  	%rd1990, %rd1970, %rd1920;
	xor.b64  	%rd1991, %rd1970, %rd1945;
	and.b64  	%rd1992, %rd1991, %rd1990;
	xor.b64  	%rd1993, %rd1992, %rd1970;
	add.s64 	%rd1994, %rd1983, %rd1993;
	add.s64 	%rd1995, %rd1994, %rd1989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6826,%dummy}, %rd1984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6827}, %rd1984;
	}
	shf.r.wrap.b32 	%r6828, %r6827, %r6826, 14;
	shf.r.wrap.b32 	%r6829, %r6826, %r6827, 14;
	mov.b64 	%rd1996, {%r6829, %r6828};
	shf.r.wrap.b32 	%r6830, %r6827, %r6826, 18;
	shf.r.wrap.b32 	%r6831, %r6826, %r6827, 18;
	mov.b64 	%rd1997, {%r6831, %r6830};
	xor.b64  	%rd1998, %rd1997, %rd1996;
	shf.l.wrap.b32 	%r6832, %r6826, %r6827, 23;
	shf.l.wrap.b32 	%r6833, %r6827, %r6826, 23;
	mov.b64 	%rd1999, {%r6833, %r6832};
	xor.b64  	%rd2000, %rd1998, %rd1999;
	xor.b64  	%rd2001, %rd1959, %rd1934;
	and.b64  	%rd2002, %rd1984, %rd2001;
	xor.b64  	%rd2003, %rd2002, %rd1934;
	add.s64 	%rd2004, %rd1909, %rd1752;
	ld.const.u64 	%rd2005, [k_sha512+416];
	add.s64 	%rd2006, %rd2004, %rd2005;
	add.s64 	%rd2007, %rd2006, %rd2003;
	add.s64 	%rd2008, %rd2007, %rd2000;
	add.s64 	%rd2009, %rd2008, %rd1920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6834,%dummy}, %rd1995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6835}, %rd1995;
	}
	shf.r.wrap.b32 	%r6836, %r6835, %r6834, 28;
	shf.r.wrap.b32 	%r6837, %r6834, %r6835, 28;
	mov.b64 	%rd2010, {%r6837, %r6836};
	shf.l.wrap.b32 	%r6838, %r6834, %r6835, 30;
	shf.l.wrap.b32 	%r6839, %r6835, %r6834, 30;
	mov.b64 	%rd2011, {%r6839, %r6838};
	xor.b64  	%rd2012, %rd2011, %rd2010;
	shf.l.wrap.b32 	%r6840, %r6834, %r6835, 25;
	shf.l.wrap.b32 	%r6841, %r6835, %r6834, 25;
	mov.b64 	%rd2013, {%r6841, %r6840};
	xor.b64  	%rd2014, %rd2012, %rd2013;
	xor.b64  	%rd2015, %rd1995, %rd1945;
	xor.b64  	%rd2016, %rd1995, %rd1970;
	and.b64  	%rd2017, %rd2016, %rd2015;
	xor.b64  	%rd2018, %rd2017, %rd1995;
	add.s64 	%rd2019, %rd2008, %rd2018;
	add.s64 	%rd2020, %rd2019, %rd2014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6842,%dummy}, %rd2009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6843}, %rd2009;
	}
	shf.r.wrap.b32 	%r6844, %r6843, %r6842, 14;
	shf.r.wrap.b32 	%r6845, %r6842, %r6843, 14;
	mov.b64 	%rd2021, {%r6845, %r6844};
	shf.r.wrap.b32 	%r6846, %r6843, %r6842, 18;
	shf.r.wrap.b32 	%r6847, %r6842, %r6843, 18;
	mov.b64 	%rd2022, {%r6847, %r6846};
	xor.b64  	%rd2023, %rd2022, %rd2021;
	shf.l.wrap.b32 	%r6848, %r6842, %r6843, 23;
	shf.l.wrap.b32 	%r6849, %r6843, %r6842, 23;
	mov.b64 	%rd2024, {%r6849, %r6848};
	xor.b64  	%rd2025, %rd2023, %rd2024;
	xor.b64  	%rd2026, %rd1984, %rd1959;
	and.b64  	%rd2027, %rd2009, %rd2026;
	xor.b64  	%rd2028, %rd2027, %rd1959;
	add.s64 	%rd2029, %rd1934, %rd1765;
	ld.const.u64 	%rd2030, [k_sha512+424];
	add.s64 	%rd2031, %rd2029, %rd2030;
	add.s64 	%rd2032, %rd2031, %rd2028;
	add.s64 	%rd2033, %rd2032, %rd2025;
	add.s64 	%rd2034, %rd2033, %rd1945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6850,%dummy}, %rd2020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6851}, %rd2020;
	}
	shf.r.wrap.b32 	%r6852, %r6851, %r6850, 28;
	shf.r.wrap.b32 	%r6853, %r6850, %r6851, 28;
	mov.b64 	%rd2035, {%r6853, %r6852};
	shf.l.wrap.b32 	%r6854, %r6850, %r6851, 30;
	shf.l.wrap.b32 	%r6855, %r6851, %r6850, 30;
	mov.b64 	%rd2036, {%r6855, %r6854};
	xor.b64  	%rd2037, %rd2036, %rd2035;
	shf.l.wrap.b32 	%r6856, %r6850, %r6851, 25;
	shf.l.wrap.b32 	%r6857, %r6851, %r6850, 25;
	mov.b64 	%rd2038, {%r6857, %r6856};
	xor.b64  	%rd2039, %rd2037, %rd2038;
	xor.b64  	%rd2040, %rd2020, %rd1970;
	xor.b64  	%rd2041, %rd2020, %rd1995;
	and.b64  	%rd2042, %rd2041, %rd2040;
	xor.b64  	%rd2043, %rd2042, %rd2020;
	add.s64 	%rd2044, %rd2033, %rd2043;
	add.s64 	%rd2045, %rd2044, %rd2039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6858,%dummy}, %rd2034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6859}, %rd2034;
	}
	shf.r.wrap.b32 	%r6860, %r6859, %r6858, 14;
	shf.r.wrap.b32 	%r6861, %r6858, %r6859, 14;
	mov.b64 	%rd2046, {%r6861, %r6860};
	shf.r.wrap.b32 	%r6862, %r6859, %r6858, 18;
	shf.r.wrap.b32 	%r6863, %r6858, %r6859, 18;
	mov.b64 	%rd2047, {%r6863, %r6862};
	xor.b64  	%rd2048, %rd2047, %rd2046;
	shf.l.wrap.b32 	%r6864, %r6858, %r6859, 23;
	shf.l.wrap.b32 	%r6865, %r6859, %r6858, 23;
	mov.b64 	%rd2049, {%r6865, %r6864};
	xor.b64  	%rd2050, %rd2048, %rd2049;
	xor.b64  	%rd2051, %rd2009, %rd1984;
	and.b64  	%rd2052, %rd2034, %rd2051;
	xor.b64  	%rd2053, %rd2052, %rd1984;
	add.s64 	%rd2054, %rd1959, %rd1778;
	ld.const.u64 	%rd2055, [k_sha512+432];
	add.s64 	%rd2056, %rd2054, %rd2055;
	add.s64 	%rd2057, %rd2056, %rd2053;
	add.s64 	%rd2058, %rd2057, %rd2050;
	add.s64 	%rd2059, %rd2058, %rd1970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6866,%dummy}, %rd2045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6867}, %rd2045;
	}
	shf.r.wrap.b32 	%r6868, %r6867, %r6866, 28;
	shf.r.wrap.b32 	%r6869, %r6866, %r6867, 28;
	mov.b64 	%rd2060, {%r6869, %r6868};
	shf.l.wrap.b32 	%r6870, %r6866, %r6867, 30;
	shf.l.wrap.b32 	%r6871, %r6867, %r6866, 30;
	mov.b64 	%rd2061, {%r6871, %r6870};
	xor.b64  	%rd2062, %rd2061, %rd2060;
	shf.l.wrap.b32 	%r6872, %r6866, %r6867, 25;
	shf.l.wrap.b32 	%r6873, %r6867, %r6866, 25;
	mov.b64 	%rd2063, {%r6873, %r6872};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	xor.b64  	%rd2065, %rd2045, %rd1995;
	xor.b64  	%rd2066, %rd2045, %rd2020;
	and.b64  	%rd2067, %rd2066, %rd2065;
	xor.b64  	%rd2068, %rd2067, %rd2045;
	add.s64 	%rd2069, %rd2058, %rd2068;
	add.s64 	%rd2070, %rd2069, %rd2064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6874,%dummy}, %rd2059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6875}, %rd2059;
	}
	shf.r.wrap.b32 	%r6876, %r6875, %r6874, 14;
	shf.r.wrap.b32 	%r6877, %r6874, %r6875, 14;
	mov.b64 	%rd2071, {%r6877, %r6876};
	shf.r.wrap.b32 	%r6878, %r6875, %r6874, 18;
	shf.r.wrap.b32 	%r6879, %r6874, %r6875, 18;
	mov.b64 	%rd2072, {%r6879, %r6878};
	xor.b64  	%rd2073, %rd2072, %rd2071;
	shf.l.wrap.b32 	%r6880, %r6874, %r6875, 23;
	shf.l.wrap.b32 	%r6881, %r6875, %r6874, 23;
	mov.b64 	%rd2074, {%r6881, %r6880};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	xor.b64  	%rd2076, %rd2034, %rd2009;
	and.b64  	%rd2077, %rd2059, %rd2076;
	xor.b64  	%rd2078, %rd2077, %rd2009;
	add.s64 	%rd2079, %rd1984, %rd1791;
	ld.const.u64 	%rd2080, [k_sha512+440];
	add.s64 	%rd2081, %rd2079, %rd2080;
	add.s64 	%rd2082, %rd2081, %rd2078;
	add.s64 	%rd2083, %rd2082, %rd2075;
	add.s64 	%rd2084, %rd2083, %rd1995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6882,%dummy}, %rd2070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6883}, %rd2070;
	}
	shf.r.wrap.b32 	%r6884, %r6883, %r6882, 28;
	shf.r.wrap.b32 	%r6885, %r6882, %r6883, 28;
	mov.b64 	%rd2085, {%r6885, %r6884};
	shf.l.wrap.b32 	%r6886, %r6882, %r6883, 30;
	shf.l.wrap.b32 	%r6887, %r6883, %r6882, 30;
	mov.b64 	%rd2086, {%r6887, %r6886};
	xor.b64  	%rd2087, %rd2086, %rd2085;
	shf.l.wrap.b32 	%r6888, %r6882, %r6883, 25;
	shf.l.wrap.b32 	%r6889, %r6883, %r6882, 25;
	mov.b64 	%rd2088, {%r6889, %r6888};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	xor.b64  	%rd2090, %rd2070, %rd2020;
	xor.b64  	%rd2091, %rd2070, %rd2045;
	and.b64  	%rd2092, %rd2091, %rd2090;
	xor.b64  	%rd2093, %rd2092, %rd2070;
	add.s64 	%rd2094, %rd2083, %rd2093;
	add.s64 	%rd2095, %rd2094, %rd2089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd2084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6891}, %rd2084;
	}
	shf.r.wrap.b32 	%r6892, %r6891, %r6890, 14;
	shf.r.wrap.b32 	%r6893, %r6890, %r6891, 14;
	mov.b64 	%rd2096, {%r6893, %r6892};
	shf.r.wrap.b32 	%r6894, %r6891, %r6890, 18;
	shf.r.wrap.b32 	%r6895, %r6890, %r6891, 18;
	mov.b64 	%rd2097, {%r6895, %r6894};
	xor.b64  	%rd2098, %rd2097, %rd2096;
	shf.l.wrap.b32 	%r6896, %r6890, %r6891, 23;
	shf.l.wrap.b32 	%r6897, %r6891, %r6890, 23;
	mov.b64 	%rd2099, {%r6897, %r6896};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	xor.b64  	%rd2101, %rd2059, %rd2034;
	and.b64  	%rd2102, %rd2084, %rd2101;
	xor.b64  	%rd2103, %rd2102, %rd2034;
	add.s64 	%rd2104, %rd2009, %rd1804;
	ld.const.u64 	%rd2105, [k_sha512+448];
	add.s64 	%rd2106, %rd2104, %rd2105;
	add.s64 	%rd2107, %rd2106, %rd2103;
	add.s64 	%rd2108, %rd2107, %rd2100;
	add.s64 	%rd2109, %rd2108, %rd2020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6898,%dummy}, %rd2095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6899}, %rd2095;
	}
	shf.r.wrap.b32 	%r6900, %r6899, %r6898, 28;
	shf.r.wrap.b32 	%r6901, %r6898, %r6899, 28;
	mov.b64 	%rd2110, {%r6901, %r6900};
	shf.l.wrap.b32 	%r6902, %r6898, %r6899, 30;
	shf.l.wrap.b32 	%r6903, %r6899, %r6898, 30;
	mov.b64 	%rd2111, {%r6903, %r6902};
	xor.b64  	%rd2112, %rd2111, %rd2110;
	shf.l.wrap.b32 	%r6904, %r6898, %r6899, 25;
	shf.l.wrap.b32 	%r6905, %r6899, %r6898, 25;
	mov.b64 	%rd2113, {%r6905, %r6904};
	xor.b64  	%rd2114, %rd2112, %rd2113;
	xor.b64  	%rd2115, %rd2095, %rd2045;
	xor.b64  	%rd2116, %rd2095, %rd2070;
	and.b64  	%rd2117, %rd2116, %rd2115;
	xor.b64  	%rd2118, %rd2117, %rd2095;
	add.s64 	%rd2119, %rd2108, %rd2118;
	add.s64 	%rd2120, %rd2119, %rd2114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6906,%dummy}, %rd2109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6907}, %rd2109;
	}
	shf.r.wrap.b32 	%r6908, %r6907, %r6906, 14;
	shf.r.wrap.b32 	%r6909, %r6906, %r6907, 14;
	mov.b64 	%rd2121, {%r6909, %r6908};
	shf.r.wrap.b32 	%r6910, %r6907, %r6906, 18;
	shf.r.wrap.b32 	%r6911, %r6906, %r6907, 18;
	mov.b64 	%rd2122, {%r6911, %r6910};
	xor.b64  	%rd2123, %rd2122, %rd2121;
	shf.l.wrap.b32 	%r6912, %r6906, %r6907, 23;
	shf.l.wrap.b32 	%r6913, %r6907, %r6906, 23;
	mov.b64 	%rd2124, {%r6913, %r6912};
	xor.b64  	%rd2125, %rd2123, %rd2124;
	xor.b64  	%rd2126, %rd2084, %rd2059;
	and.b64  	%rd2127, %rd2109, %rd2126;
	xor.b64  	%rd2128, %rd2127, %rd2059;
	add.s64 	%rd2129, %rd2034, %rd1817;
	ld.const.u64 	%rd2130, [k_sha512+456];
	add.s64 	%rd2131, %rd2129, %rd2130;
	add.s64 	%rd2132, %rd2131, %rd2128;
	add.s64 	%rd2133, %rd2132, %rd2125;
	add.s64 	%rd2134, %rd2133, %rd2045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6914,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6915}, %rd2120;
	}
	shf.r.wrap.b32 	%r6916, %r6915, %r6914, 28;
	shf.r.wrap.b32 	%r6917, %r6914, %r6915, 28;
	mov.b64 	%rd2135, {%r6917, %r6916};
	shf.l.wrap.b32 	%r6918, %r6914, %r6915, 30;
	shf.l.wrap.b32 	%r6919, %r6915, %r6914, 30;
	mov.b64 	%rd2136, {%r6919, %r6918};
	xor.b64  	%rd2137, %rd2136, %rd2135;
	shf.l.wrap.b32 	%r6920, %r6914, %r6915, 25;
	shf.l.wrap.b32 	%r6921, %r6915, %r6914, 25;
	mov.b64 	%rd2138, {%r6921, %r6920};
	xor.b64  	%rd2139, %rd2137, %rd2138;
	xor.b64  	%rd2140, %rd2120, %rd2070;
	xor.b64  	%rd2141, %rd2120, %rd2095;
	and.b64  	%rd2142, %rd2141, %rd2140;
	xor.b64  	%rd2143, %rd2142, %rd2120;
	add.s64 	%rd2144, %rd2133, %rd2143;
	add.s64 	%rd2145, %rd2144, %rd2139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd2134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6923}, %rd2134;
	}
	shf.r.wrap.b32 	%r6924, %r6923, %r6922, 14;
	shf.r.wrap.b32 	%r6925, %r6922, %r6923, 14;
	mov.b64 	%rd2146, {%r6925, %r6924};
	shf.r.wrap.b32 	%r6926, %r6923, %r6922, 18;
	shf.r.wrap.b32 	%r6927, %r6922, %r6923, 18;
	mov.b64 	%rd2147, {%r6927, %r6926};
	xor.b64  	%rd2148, %rd2147, %rd2146;
	shf.l.wrap.b32 	%r6928, %r6922, %r6923, 23;
	shf.l.wrap.b32 	%r6929, %r6923, %r6922, 23;
	mov.b64 	%rd2149, {%r6929, %r6928};
	xor.b64  	%rd2150, %rd2148, %rd2149;
	xor.b64  	%rd2151, %rd2109, %rd2084;
	and.b64  	%rd2152, %rd2134, %rd2151;
	xor.b64  	%rd2153, %rd2152, %rd2084;
	add.s64 	%rd2154, %rd2059, %rd1830;
	ld.const.u64 	%rd2155, [k_sha512+464];
	add.s64 	%rd2156, %rd2154, %rd2155;
	add.s64 	%rd2157, %rd2156, %rd2153;
	add.s64 	%rd2158, %rd2157, %rd2150;
	add.s64 	%rd2159, %rd2158, %rd2070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6930,%dummy}, %rd2145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6931}, %rd2145;
	}
	shf.r.wrap.b32 	%r6932, %r6931, %r6930, 28;
	shf.r.wrap.b32 	%r6933, %r6930, %r6931, 28;
	mov.b64 	%rd2160, {%r6933, %r6932};
	shf.l.wrap.b32 	%r6934, %r6930, %r6931, 30;
	shf.l.wrap.b32 	%r6935, %r6931, %r6930, 30;
	mov.b64 	%rd2161, {%r6935, %r6934};
	xor.b64  	%rd2162, %rd2161, %rd2160;
	shf.l.wrap.b32 	%r6936, %r6930, %r6931, 25;
	shf.l.wrap.b32 	%r6937, %r6931, %r6930, 25;
	mov.b64 	%rd2163, {%r6937, %r6936};
	xor.b64  	%rd2164, %rd2162, %rd2163;
	xor.b64  	%rd2165, %rd2145, %rd2095;
	xor.b64  	%rd2166, %rd2145, %rd2120;
	and.b64  	%rd2167, %rd2166, %rd2165;
	xor.b64  	%rd2168, %rd2167, %rd2145;
	add.s64 	%rd2169, %rd2158, %rd2168;
	add.s64 	%rd2170, %rd2169, %rd2164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6938,%dummy}, %rd2159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6939}, %rd2159;
	}
	shf.r.wrap.b32 	%r6940, %r6939, %r6938, 14;
	shf.r.wrap.b32 	%r6941, %r6938, %r6939, 14;
	mov.b64 	%rd2171, {%r6941, %r6940};
	shf.r.wrap.b32 	%r6942, %r6939, %r6938, 18;
	shf.r.wrap.b32 	%r6943, %r6938, %r6939, 18;
	mov.b64 	%rd2172, {%r6943, %r6942};
	xor.b64  	%rd2173, %rd2172, %rd2171;
	shf.l.wrap.b32 	%r6944, %r6938, %r6939, 23;
	shf.l.wrap.b32 	%r6945, %r6939, %r6938, 23;
	mov.b64 	%rd2174, {%r6945, %r6944};
	xor.b64  	%rd2175, %rd2173, %rd2174;
	xor.b64  	%rd2176, %rd2134, %rd2109;
	and.b64  	%rd2177, %rd2159, %rd2176;
	xor.b64  	%rd2178, %rd2177, %rd2109;
	add.s64 	%rd2179, %rd2084, %rd1843;
	ld.const.u64 	%rd2180, [k_sha512+472];
	add.s64 	%rd2181, %rd2179, %rd2180;
	add.s64 	%rd2182, %rd2181, %rd2178;
	add.s64 	%rd2183, %rd2182, %rd2175;
	add.s64 	%rd2184, %rd2183, %rd2095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6946,%dummy}, %rd2170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6947}, %rd2170;
	}
	shf.r.wrap.b32 	%r6948, %r6947, %r6946, 28;
	shf.r.wrap.b32 	%r6949, %r6946, %r6947, 28;
	mov.b64 	%rd2185, {%r6949, %r6948};
	shf.l.wrap.b32 	%r6950, %r6946, %r6947, 30;
	shf.l.wrap.b32 	%r6951, %r6947, %r6946, 30;
	mov.b64 	%rd2186, {%r6951, %r6950};
	xor.b64  	%rd2187, %rd2186, %rd2185;
	shf.l.wrap.b32 	%r6952, %r6946, %r6947, 25;
	shf.l.wrap.b32 	%r6953, %r6947, %r6946, 25;
	mov.b64 	%rd2188, {%r6953, %r6952};
	xor.b64  	%rd2189, %rd2187, %rd2188;
	xor.b64  	%rd2190, %rd2170, %rd2120;
	xor.b64  	%rd2191, %rd2170, %rd2145;
	and.b64  	%rd2192, %rd2191, %rd2190;
	xor.b64  	%rd2193, %rd2192, %rd2170;
	add.s64 	%rd2194, %rd2183, %rd2193;
	add.s64 	%rd2195, %rd2194, %rd2189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6954,%dummy}, %rd2184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6955}, %rd2184;
	}
	shf.r.wrap.b32 	%r6956, %r6955, %r6954, 14;
	shf.r.wrap.b32 	%r6957, %r6954, %r6955, 14;
	mov.b64 	%rd2196, {%r6957, %r6956};
	shf.r.wrap.b32 	%r6958, %r6955, %r6954, 18;
	shf.r.wrap.b32 	%r6959, %r6954, %r6955, 18;
	mov.b64 	%rd2197, {%r6959, %r6958};
	xor.b64  	%rd2198, %rd2197, %rd2196;
	shf.l.wrap.b32 	%r6960, %r6954, %r6955, 23;
	shf.l.wrap.b32 	%r6961, %r6955, %r6954, 23;
	mov.b64 	%rd2199, {%r6961, %r6960};
	xor.b64  	%rd2200, %rd2198, %rd2199;
	xor.b64  	%rd2201, %rd2159, %rd2134;
	and.b64  	%rd2202, %rd2184, %rd2201;
	xor.b64  	%rd2203, %rd2202, %rd2134;
	add.s64 	%rd2204, %rd2109, %rd1856;
	ld.const.u64 	%rd2205, [k_sha512+480];
	add.s64 	%rd2206, %rd2204, %rd2205;
	add.s64 	%rd2207, %rd2206, %rd2203;
	add.s64 	%rd2208, %rd2207, %rd2200;
	add.s64 	%rd2209, %rd2208, %rd2120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6962,%dummy}, %rd2195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6963}, %rd2195;
	}
	shf.r.wrap.b32 	%r6964, %r6963, %r6962, 28;
	shf.r.wrap.b32 	%r6965, %r6962, %r6963, 28;
	mov.b64 	%rd2210, {%r6965, %r6964};
	shf.l.wrap.b32 	%r6966, %r6962, %r6963, 30;
	shf.l.wrap.b32 	%r6967, %r6963, %r6962, 30;
	mov.b64 	%rd2211, {%r6967, %r6966};
	xor.b64  	%rd2212, %rd2211, %rd2210;
	shf.l.wrap.b32 	%r6968, %r6962, %r6963, 25;
	shf.l.wrap.b32 	%r6969, %r6963, %r6962, 25;
	mov.b64 	%rd2213, {%r6969, %r6968};
	xor.b64  	%rd2214, %rd2212, %rd2213;
	xor.b64  	%rd2215, %rd2195, %rd2145;
	xor.b64  	%rd2216, %rd2195, %rd2170;
	and.b64  	%rd2217, %rd2216, %rd2215;
	xor.b64  	%rd2218, %rd2217, %rd2195;
	add.s64 	%rd2219, %rd2208, %rd2218;
	add.s64 	%rd2220, %rd2219, %rd2214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6970,%dummy}, %rd2209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6971}, %rd2209;
	}
	shf.r.wrap.b32 	%r6972, %r6971, %r6970, 14;
	shf.r.wrap.b32 	%r6973, %r6970, %r6971, 14;
	mov.b64 	%rd2221, {%r6973, %r6972};
	shf.r.wrap.b32 	%r6974, %r6971, %r6970, 18;
	shf.r.wrap.b32 	%r6975, %r6970, %r6971, 18;
	mov.b64 	%rd2222, {%r6975, %r6974};
	xor.b64  	%rd2223, %rd2222, %rd2221;
	shf.l.wrap.b32 	%r6976, %r6970, %r6971, 23;
	shf.l.wrap.b32 	%r6977, %r6971, %r6970, 23;
	mov.b64 	%rd2224, {%r6977, %r6976};
	xor.b64  	%rd2225, %rd2223, %rd2224;
	xor.b64  	%rd2226, %rd2184, %rd2159;
	and.b64  	%rd2227, %rd2209, %rd2226;
	xor.b64  	%rd2228, %rd2227, %rd2159;
	add.s64 	%rd2229, %rd2134, %rd1869;
	ld.const.u64 	%rd2230, [k_sha512+488];
	add.s64 	%rd2231, %rd2229, %rd2230;
	add.s64 	%rd2232, %rd2231, %rd2228;
	add.s64 	%rd2233, %rd2232, %rd2225;
	add.s64 	%rd2234, %rd2233, %rd2145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6978,%dummy}, %rd2220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6979}, %rd2220;
	}
	shf.r.wrap.b32 	%r6980, %r6979, %r6978, 28;
	shf.r.wrap.b32 	%r6981, %r6978, %r6979, 28;
	mov.b64 	%rd2235, {%r6981, %r6980};
	shf.l.wrap.b32 	%r6982, %r6978, %r6979, 30;
	shf.l.wrap.b32 	%r6983, %r6979, %r6978, 30;
	mov.b64 	%rd2236, {%r6983, %r6982};
	xor.b64  	%rd2237, %rd2236, %rd2235;
	shf.l.wrap.b32 	%r6984, %r6978, %r6979, 25;
	shf.l.wrap.b32 	%r6985, %r6979, %r6978, 25;
	mov.b64 	%rd2238, {%r6985, %r6984};
	xor.b64  	%rd2239, %rd2237, %rd2238;
	xor.b64  	%rd2240, %rd2220, %rd2170;
	xor.b64  	%rd2241, %rd2220, %rd2195;
	and.b64  	%rd2242, %rd2241, %rd2240;
	xor.b64  	%rd2243, %rd2242, %rd2220;
	add.s64 	%rd2244, %rd2233, %rd2243;
	add.s64 	%rd2245, %rd2244, %rd2239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6986,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6987}, %rd2234;
	}
	shf.r.wrap.b32 	%r6988, %r6987, %r6986, 14;
	shf.r.wrap.b32 	%r6989, %r6986, %r6987, 14;
	mov.b64 	%rd2246, {%r6989, %r6988};
	shf.r.wrap.b32 	%r6990, %r6987, %r6986, 18;
	shf.r.wrap.b32 	%r6991, %r6986, %r6987, 18;
	mov.b64 	%rd2247, {%r6991, %r6990};
	xor.b64  	%rd2248, %rd2247, %rd2246;
	shf.l.wrap.b32 	%r6992, %r6986, %r6987, 23;
	shf.l.wrap.b32 	%r6993, %r6987, %r6986, 23;
	mov.b64 	%rd2249, {%r6993, %r6992};
	xor.b64  	%rd2250, %rd2248, %rd2249;
	xor.b64  	%rd2251, %rd2209, %rd2184;
	and.b64  	%rd2252, %rd2234, %rd2251;
	xor.b64  	%rd2253, %rd2252, %rd2184;
	add.s64 	%rd2254, %rd2159, %rd1882;
	ld.const.u64 	%rd2255, [k_sha512+496];
	add.s64 	%rd2256, %rd2254, %rd2255;
	add.s64 	%rd2257, %rd2256, %rd2253;
	add.s64 	%rd2258, %rd2257, %rd2250;
	add.s64 	%rd2259, %rd2258, %rd2170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6995}, %rd2245;
	}
	shf.r.wrap.b32 	%r6996, %r6995, %r6994, 28;
	shf.r.wrap.b32 	%r6997, %r6994, %r6995, 28;
	mov.b64 	%rd2260, {%r6997, %r6996};
	shf.l.wrap.b32 	%r6998, %r6994, %r6995, 30;
	shf.l.wrap.b32 	%r6999, %r6995, %r6994, 30;
	mov.b64 	%rd2261, {%r6999, %r6998};
	xor.b64  	%rd2262, %rd2261, %rd2260;
	shf.l.wrap.b32 	%r7000, %r6994, %r6995, 25;
	shf.l.wrap.b32 	%r7001, %r6995, %r6994, 25;
	mov.b64 	%rd2263, {%r7001, %r7000};
	xor.b64  	%rd2264, %rd2262, %rd2263;
	xor.b64  	%rd2265, %rd2245, %rd2195;
	xor.b64  	%rd2266, %rd2245, %rd2220;
	and.b64  	%rd2267, %rd2266, %rd2265;
	xor.b64  	%rd2268, %rd2267, %rd2245;
	add.s64 	%rd2269, %rd2258, %rd2268;
	add.s64 	%rd2270, %rd2269, %rd2264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7002,%dummy}, %rd2259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7003}, %rd2259;
	}
	shf.r.wrap.b32 	%r7004, %r7003, %r7002, 14;
	shf.r.wrap.b32 	%r7005, %r7002, %r7003, 14;
	mov.b64 	%rd2271, {%r7005, %r7004};
	shf.r.wrap.b32 	%r7006, %r7003, %r7002, 18;
	shf.r.wrap.b32 	%r7007, %r7002, %r7003, 18;
	mov.b64 	%rd2272, {%r7007, %r7006};
	xor.b64  	%rd2273, %rd2272, %rd2271;
	shf.l.wrap.b32 	%r7008, %r7002, %r7003, 23;
	shf.l.wrap.b32 	%r7009, %r7003, %r7002, 23;
	mov.b64 	%rd2274, {%r7009, %r7008};
	xor.b64  	%rd2275, %rd2273, %rd2274;
	xor.b64  	%rd2276, %rd2234, %rd2209;
	and.b64  	%rd2277, %rd2259, %rd2276;
	xor.b64  	%rd2278, %rd2277, %rd2209;
	add.s64 	%rd2279, %rd2184, %rd1895;
	ld.const.u64 	%rd2280, [k_sha512+504];
	add.s64 	%rd2281, %rd2279, %rd2280;
	add.s64 	%rd2282, %rd2281, %rd2278;
	add.s64 	%rd2283, %rd2282, %rd2275;
	add.s64 	%rd2284, %rd2283, %rd2195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7010,%dummy}, %rd2270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7011}, %rd2270;
	}
	shf.r.wrap.b32 	%r7012, %r7011, %r7010, 28;
	shf.r.wrap.b32 	%r7013, %r7010, %r7011, 28;
	mov.b64 	%rd2285, {%r7013, %r7012};
	shf.l.wrap.b32 	%r7014, %r7010, %r7011, 30;
	shf.l.wrap.b32 	%r7015, %r7011, %r7010, 30;
	mov.b64 	%rd2286, {%r7015, %r7014};
	xor.b64  	%rd2287, %rd2286, %rd2285;
	shf.l.wrap.b32 	%r7016, %r7010, %r7011, 25;
	shf.l.wrap.b32 	%r7017, %r7011, %r7010, 25;
	mov.b64 	%rd2288, {%r7017, %r7016};
	xor.b64  	%rd2289, %rd2287, %rd2288;
	xor.b64  	%rd2290, %rd2270, %rd2220;
	xor.b64  	%rd2291, %rd2270, %rd2245;
	and.b64  	%rd2292, %rd2291, %rd2290;
	xor.b64  	%rd2293, %rd2292, %rd2270;
	add.s64 	%rd2294, %rd2283, %rd2293;
	add.s64 	%rd2295, %rd2294, %rd2289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7018,%dummy}, %rd1882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7019}, %rd1882;
	}
	shf.r.wrap.b32 	%r7020, %r7019, %r7018, 19;
	shf.r.wrap.b32 	%r7021, %r7018, %r7019, 19;
	mov.b64 	%rd2296, {%r7021, %r7020};
	shf.l.wrap.b32 	%r7022, %r7018, %r7019, 3;
	shf.l.wrap.b32 	%r7023, %r7019, %r7018, 3;
	mov.b64 	%rd2297, {%r7023, %r7022};
	shr.u64 	%rd2298, %rd1882, 6;
	xor.b64  	%rd2299, %rd2296, %rd2298;
	xor.b64  	%rd2300, %rd2299, %rd2297;
	shf.r.wrap.b32 	%r7024, %r6633, %r6632, 1;
	shf.r.wrap.b32 	%r7025, %r6632, %r6633, 1;
	mov.b64 	%rd2301, {%r7025, %r7024};
	shf.r.wrap.b32 	%r7026, %r6633, %r6632, 8;
	shf.r.wrap.b32 	%r7027, %r6632, %r6633, 8;
	mov.b64 	%rd2302, {%r7027, %r7026};
	shr.u64 	%rd2303, %rd1713, 7;
	xor.b64  	%rd2304, %rd2301, %rd2303;
	xor.b64  	%rd2305, %rd2304, %rd2302;
	add.s64 	%rd2306, %rd1817, %rd1700;
	add.s64 	%rd2307, %rd2306, %rd2300;
	add.s64 	%rd2308, %rd2307, %rd2305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7028,%dummy}, %rd1895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7029}, %rd1895;
	}
	shf.r.wrap.b32 	%r7030, %r7029, %r7028, 19;
	shf.r.wrap.b32 	%r7031, %r7028, %r7029, 19;
	mov.b64 	%rd2309, {%r7031, %r7030};
	shf.l.wrap.b32 	%r7032, %r7028, %r7029, 3;
	shf.l.wrap.b32 	%r7033, %r7029, %r7028, 3;
	mov.b64 	%rd2310, {%r7033, %r7032};
	shr.u64 	%rd2311, %rd1895, 6;
	xor.b64  	%rd2312, %rd2309, %rd2311;
	xor.b64  	%rd2313, %rd2312, %rd2310;
	shf.r.wrap.b32 	%r7034, %r6643, %r6642, 1;
	shf.r.wrap.b32 	%r7035, %r6642, %r6643, 1;
	mov.b64 	%rd2314, {%r7035, %r7034};
	shf.r.wrap.b32 	%r7036, %r6643, %r6642, 8;
	shf.r.wrap.b32 	%r7037, %r6642, %r6643, 8;
	mov.b64 	%rd2315, {%r7037, %r7036};
	shr.u64 	%rd2316, %rd1726, 7;
	xor.b64  	%rd2317, %rd2314, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2315;
	add.s64 	%rd2319, %rd1830, %rd1713;
	add.s64 	%rd2320, %rd2319, %rd2313;
	add.s64 	%rd2321, %rd2320, %rd2318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7038,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7039}, %rd2308;
	}
	shf.r.wrap.b32 	%r7040, %r7039, %r7038, 19;
	shf.r.wrap.b32 	%r7041, %r7038, %r7039, 19;
	mov.b64 	%rd2322, {%r7041, %r7040};
	shf.l.wrap.b32 	%r7042, %r7038, %r7039, 3;
	shf.l.wrap.b32 	%r7043, %r7039, %r7038, 3;
	mov.b64 	%rd2323, {%r7043, %r7042};
	shr.u64 	%rd2324, %rd2308, 6;
	xor.b64  	%rd2325, %rd2322, %rd2324;
	xor.b64  	%rd2326, %rd2325, %rd2323;
	shf.r.wrap.b32 	%r7044, %r6653, %r6652, 1;
	shf.r.wrap.b32 	%r7045, %r6652, %r6653, 1;
	mov.b64 	%rd2327, {%r7045, %r7044};
	shf.r.wrap.b32 	%r7046, %r6653, %r6652, 8;
	shf.r.wrap.b32 	%r7047, %r6652, %r6653, 8;
	mov.b64 	%rd2328, {%r7047, %r7046};
	shr.u64 	%rd2329, %rd1739, 7;
	xor.b64  	%rd2330, %rd2327, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd2328;
	add.s64 	%rd2332, %rd1843, %rd1726;
	add.s64 	%rd2333, %rd2332, %rd2326;
	add.s64 	%rd2334, %rd2333, %rd2331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7048,%dummy}, %rd2321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd2321;
	}
	shf.r.wrap.b32 	%r7050, %r7049, %r7048, 19;
	shf.r.wrap.b32 	%r7051, %r7048, %r7049, 19;
	mov.b64 	%rd2335, {%r7051, %r7050};
	shf.l.wrap.b32 	%r7052, %r7048, %r7049, 3;
	shf.l.wrap.b32 	%r7053, %r7049, %r7048, 3;
	mov.b64 	%rd2336, {%r7053, %r7052};
	shr.u64 	%rd2337, %rd2321, 6;
	xor.b64  	%rd2338, %rd2335, %rd2337;
	xor.b64  	%rd2339, %rd2338, %rd2336;
	shf.r.wrap.b32 	%r7054, %r6663, %r6662, 1;
	shf.r.wrap.b32 	%r7055, %r6662, %r6663, 1;
	mov.b64 	%rd2340, {%r7055, %r7054};
	shf.r.wrap.b32 	%r7056, %r6663, %r6662, 8;
	shf.r.wrap.b32 	%r7057, %r6662, %r6663, 8;
	mov.b64 	%rd2341, {%r7057, %r7056};
	shr.u64 	%rd2342, %rd1752, 7;
	xor.b64  	%rd2343, %rd2340, %rd2342;
	xor.b64  	%rd2344, %rd2343, %rd2341;
	add.s64 	%rd2345, %rd1856, %rd1739;
	add.s64 	%rd2346, %rd2345, %rd2339;
	add.s64 	%rd2347, %rd2346, %rd2344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7058,%dummy}, %rd2334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7059}, %rd2334;
	}
	shf.r.wrap.b32 	%r7060, %r7059, %r7058, 19;
	shf.r.wrap.b32 	%r7061, %r7058, %r7059, 19;
	mov.b64 	%rd2348, {%r7061, %r7060};
	shf.l.wrap.b32 	%r7062, %r7058, %r7059, 3;
	shf.l.wrap.b32 	%r7063, %r7059, %r7058, 3;
	mov.b64 	%rd2349, {%r7063, %r7062};
	shr.u64 	%rd2350, %rd2334, 6;
	xor.b64  	%rd2351, %rd2348, %rd2350;
	xor.b64  	%rd2352, %rd2351, %rd2349;
	shf.r.wrap.b32 	%r7064, %r6673, %r6672, 1;
	shf.r.wrap.b32 	%r7065, %r6672, %r6673, 1;
	mov.b64 	%rd2353, {%r7065, %r7064};
	shf.r.wrap.b32 	%r7066, %r6673, %r6672, 8;
	shf.r.wrap.b32 	%r7067, %r6672, %r6673, 8;
	mov.b64 	%rd2354, {%r7067, %r7066};
	shr.u64 	%rd2355, %rd1765, 7;
	xor.b64  	%rd2356, %rd2353, %rd2355;
	xor.b64  	%rd2357, %rd2356, %rd2354;
	add.s64 	%rd2358, %rd1869, %rd1752;
	add.s64 	%rd2359, %rd2358, %rd2352;
	add.s64 	%rd2360, %rd2359, %rd2357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7068,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7069}, %rd2347;
	}
	shf.r.wrap.b32 	%r7070, %r7069, %r7068, 19;
	shf.r.wrap.b32 	%r7071, %r7068, %r7069, 19;
	mov.b64 	%rd2361, {%r7071, %r7070};
	shf.l.wrap.b32 	%r7072, %r7068, %r7069, 3;
	shf.l.wrap.b32 	%r7073, %r7069, %r7068, 3;
	mov.b64 	%rd2362, {%r7073, %r7072};
	shr.u64 	%rd2363, %rd2347, 6;
	xor.b64  	%rd2364, %rd2361, %rd2363;
	xor.b64  	%rd2365, %rd2364, %rd2362;
	shf.r.wrap.b32 	%r7074, %r6683, %r6682, 1;
	shf.r.wrap.b32 	%r7075, %r6682, %r6683, 1;
	mov.b64 	%rd2366, {%r7075, %r7074};
	shf.r.wrap.b32 	%r7076, %r6683, %r6682, 8;
	shf.r.wrap.b32 	%r7077, %r6682, %r6683, 8;
	mov.b64 	%rd2367, {%r7077, %r7076};
	shr.u64 	%rd2368, %rd1778, 7;
	xor.b64  	%rd2369, %rd2366, %rd2368;
	xor.b64  	%rd2370, %rd2369, %rd2367;
	add.s64 	%rd2371, %rd1882, %rd1765;
	add.s64 	%rd2372, %rd2371, %rd2365;
	add.s64 	%rd2373, %rd2372, %rd2370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7078,%dummy}, %rd2360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7079}, %rd2360;
	}
	shf.r.wrap.b32 	%r7080, %r7079, %r7078, 19;
	shf.r.wrap.b32 	%r7081, %r7078, %r7079, 19;
	mov.b64 	%rd2374, {%r7081, %r7080};
	shf.l.wrap.b32 	%r7082, %r7078, %r7079, 3;
	shf.l.wrap.b32 	%r7083, %r7079, %r7078, 3;
	mov.b64 	%rd2375, {%r7083, %r7082};
	shr.u64 	%rd2376, %rd2360, 6;
	xor.b64  	%rd2377, %rd2374, %rd2376;
	xor.b64  	%rd2378, %rd2377, %rd2375;
	shf.r.wrap.b32 	%r7084, %r6693, %r6692, 1;
	shf.r.wrap.b32 	%r7085, %r6692, %r6693, 1;
	mov.b64 	%rd2379, {%r7085, %r7084};
	shf.r.wrap.b32 	%r7086, %r6693, %r6692, 8;
	shf.r.wrap.b32 	%r7087, %r6692, %r6693, 8;
	mov.b64 	%rd2380, {%r7087, %r7086};
	shr.u64 	%rd2381, %rd1791, 7;
	xor.b64  	%rd2382, %rd2379, %rd2381;
	xor.b64  	%rd2383, %rd2382, %rd2380;
	add.s64 	%rd2384, %rd1895, %rd1778;
	add.s64 	%rd2385, %rd2384, %rd2378;
	add.s64 	%rd2386, %rd2385, %rd2383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7088,%dummy}, %rd2373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7089}, %rd2373;
	}
	shf.r.wrap.b32 	%r7090, %r7089, %r7088, 19;
	shf.r.wrap.b32 	%r7091, %r7088, %r7089, 19;
	mov.b64 	%rd2387, {%r7091, %r7090};
	shf.l.wrap.b32 	%r7092, %r7088, %r7089, 3;
	shf.l.wrap.b32 	%r7093, %r7089, %r7088, 3;
	mov.b64 	%rd2388, {%r7093, %r7092};
	shr.u64 	%rd2389, %rd2373, 6;
	xor.b64  	%rd2390, %rd2387, %rd2389;
	xor.b64  	%rd2391, %rd2390, %rd2388;
	shf.r.wrap.b32 	%r7094, %r6703, %r6702, 1;
	shf.r.wrap.b32 	%r7095, %r6702, %r6703, 1;
	mov.b64 	%rd2392, {%r7095, %r7094};
	shf.r.wrap.b32 	%r7096, %r6703, %r6702, 8;
	shf.r.wrap.b32 	%r7097, %r6702, %r6703, 8;
	mov.b64 	%rd2393, {%r7097, %r7096};
	shr.u64 	%rd2394, %rd1804, 7;
	xor.b64  	%rd2395, %rd2392, %rd2394;
	xor.b64  	%rd2396, %rd2395, %rd2393;
	add.s64 	%rd2397, %rd2308, %rd1791;
	add.s64 	%rd2398, %rd2397, %rd2391;
	add.s64 	%rd2399, %rd2398, %rd2396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7098,%dummy}, %rd2386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7099}, %rd2386;
	}
	shf.r.wrap.b32 	%r7100, %r7099, %r7098, 19;
	shf.r.wrap.b32 	%r7101, %r7098, %r7099, 19;
	mov.b64 	%rd2400, {%r7101, %r7100};
	shf.l.wrap.b32 	%r7102, %r7098, %r7099, 3;
	shf.l.wrap.b32 	%r7103, %r7099, %r7098, 3;
	mov.b64 	%rd2401, {%r7103, %r7102};
	shr.u64 	%rd2402, %rd2386, 6;
	xor.b64  	%rd2403, %rd2400, %rd2402;
	xor.b64  	%rd2404, %rd2403, %rd2401;
	shf.r.wrap.b32 	%r7104, %r6713, %r6712, 1;
	shf.r.wrap.b32 	%r7105, %r6712, %r6713, 1;
	mov.b64 	%rd2405, {%r7105, %r7104};
	shf.r.wrap.b32 	%r7106, %r6713, %r6712, 8;
	shf.r.wrap.b32 	%r7107, %r6712, %r6713, 8;
	mov.b64 	%rd2406, {%r7107, %r7106};
	shr.u64 	%rd2407, %rd1817, 7;
	xor.b64  	%rd2408, %rd2405, %rd2407;
	xor.b64  	%rd2409, %rd2408, %rd2406;
	add.s64 	%rd2410, %rd2321, %rd1804;
	add.s64 	%rd2411, %rd2410, %rd2404;
	add.s64 	%rd2412, %rd2411, %rd2409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7108,%dummy}, %rd2399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7109}, %rd2399;
	}
	shf.r.wrap.b32 	%r7110, %r7109, %r7108, 19;
	shf.r.wrap.b32 	%r7111, %r7108, %r7109, 19;
	mov.b64 	%rd2413, {%r7111, %r7110};
	shf.l.wrap.b32 	%r7112, %r7108, %r7109, 3;
	shf.l.wrap.b32 	%r7113, %r7109, %r7108, 3;
	mov.b64 	%rd2414, {%r7113, %r7112};
	shr.u64 	%rd2415, %rd2399, 6;
	xor.b64  	%rd2416, %rd2413, %rd2415;
	xor.b64  	%rd2417, %rd2416, %rd2414;
	shf.r.wrap.b32 	%r7114, %r6723, %r6722, 1;
	shf.r.wrap.b32 	%r7115, %r6722, %r6723, 1;
	mov.b64 	%rd2418, {%r7115, %r7114};
	shf.r.wrap.b32 	%r7116, %r6723, %r6722, 8;
	shf.r.wrap.b32 	%r7117, %r6722, %r6723, 8;
	mov.b64 	%rd2419, {%r7117, %r7116};
	shr.u64 	%rd2420, %rd1830, 7;
	xor.b64  	%rd2421, %rd2418, %rd2420;
	xor.b64  	%rd2422, %rd2421, %rd2419;
	add.s64 	%rd2423, %rd2334, %rd1817;
	add.s64 	%rd2424, %rd2423, %rd2417;
	add.s64 	%rd2425, %rd2424, %rd2422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7118,%dummy}, %rd2412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7119}, %rd2412;
	}
	shf.r.wrap.b32 	%r7120, %r7119, %r7118, 19;
	shf.r.wrap.b32 	%r7121, %r7118, %r7119, 19;
	mov.b64 	%rd2426, {%r7121, %r7120};
	shf.l.wrap.b32 	%r7122, %r7118, %r7119, 3;
	shf.l.wrap.b32 	%r7123, %r7119, %r7118, 3;
	mov.b64 	%rd2427, {%r7123, %r7122};
	shr.u64 	%rd2428, %rd2412, 6;
	xor.b64  	%rd2429, %rd2426, %rd2428;
	xor.b64  	%rd2430, %rd2429, %rd2427;
	shf.r.wrap.b32 	%r7124, %r6733, %r6732, 1;
	shf.r.wrap.b32 	%r7125, %r6732, %r6733, 1;
	mov.b64 	%rd2431, {%r7125, %r7124};
	shf.r.wrap.b32 	%r7126, %r6733, %r6732, 8;
	shf.r.wrap.b32 	%r7127, %r6732, %r6733, 8;
	mov.b64 	%rd2432, {%r7127, %r7126};
	shr.u64 	%rd2433, %rd1843, 7;
	xor.b64  	%rd2434, %rd2431, %rd2433;
	xor.b64  	%rd2435, %rd2434, %rd2432;
	add.s64 	%rd2436, %rd2347, %rd1830;
	add.s64 	%rd2437, %rd2436, %rd2430;
	add.s64 	%rd2438, %rd2437, %rd2435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7128,%dummy}, %rd2425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7129}, %rd2425;
	}
	shf.r.wrap.b32 	%r7130, %r7129, %r7128, 19;
	shf.r.wrap.b32 	%r7131, %r7128, %r7129, 19;
	mov.b64 	%rd2439, {%r7131, %r7130};
	shf.l.wrap.b32 	%r7132, %r7128, %r7129, 3;
	shf.l.wrap.b32 	%r7133, %r7129, %r7128, 3;
	mov.b64 	%rd2440, {%r7133, %r7132};
	shr.u64 	%rd2441, %rd2425, 6;
	xor.b64  	%rd2442, %rd2439, %rd2441;
	xor.b64  	%rd2443, %rd2442, %rd2440;
	shf.r.wrap.b32 	%r7134, %r6743, %r6742, 1;
	shf.r.wrap.b32 	%r7135, %r6742, %r6743, 1;
	mov.b64 	%rd2444, {%r7135, %r7134};
	shf.r.wrap.b32 	%r7136, %r6743, %r6742, 8;
	shf.r.wrap.b32 	%r7137, %r6742, %r6743, 8;
	mov.b64 	%rd2445, {%r7137, %r7136};
	shr.u64 	%rd2446, %rd1856, 7;
	xor.b64  	%rd2447, %rd2444, %rd2446;
	xor.b64  	%rd2448, %rd2447, %rd2445;
	add.s64 	%rd2449, %rd2360, %rd1843;
	add.s64 	%rd2450, %rd2449, %rd2443;
	add.s64 	%rd2451, %rd2450, %rd2448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7138,%dummy}, %rd2438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7139}, %rd2438;
	}
	shf.r.wrap.b32 	%r7140, %r7139, %r7138, 19;
	shf.r.wrap.b32 	%r7141, %r7138, %r7139, 19;
	mov.b64 	%rd2452, {%r7141, %r7140};
	shf.l.wrap.b32 	%r7142, %r7138, %r7139, 3;
	shf.l.wrap.b32 	%r7143, %r7139, %r7138, 3;
	mov.b64 	%rd2453, {%r7143, %r7142};
	shr.u64 	%rd2454, %rd2438, 6;
	xor.b64  	%rd2455, %rd2452, %rd2454;
	xor.b64  	%rd2456, %rd2455, %rd2453;
	shf.r.wrap.b32 	%r7144, %r6753, %r6752, 1;
	shf.r.wrap.b32 	%r7145, %r6752, %r6753, 1;
	mov.b64 	%rd2457, {%r7145, %r7144};
	shf.r.wrap.b32 	%r7146, %r6753, %r6752, 8;
	shf.r.wrap.b32 	%r7147, %r6752, %r6753, 8;
	mov.b64 	%rd2458, {%r7147, %r7146};
	shr.u64 	%rd2459, %rd1869, 7;
	xor.b64  	%rd2460, %rd2457, %rd2459;
	xor.b64  	%rd2461, %rd2460, %rd2458;
	add.s64 	%rd2462, %rd2373, %rd1856;
	add.s64 	%rd2463, %rd2462, %rd2456;
	add.s64 	%rd2464, %rd2463, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7148,%dummy}, %rd2451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7149}, %rd2451;
	}
	shf.r.wrap.b32 	%r7150, %r7149, %r7148, 19;
	shf.r.wrap.b32 	%r7151, %r7148, %r7149, 19;
	mov.b64 	%rd2465, {%r7151, %r7150};
	shf.l.wrap.b32 	%r7152, %r7148, %r7149, 3;
	shf.l.wrap.b32 	%r7153, %r7149, %r7148, 3;
	mov.b64 	%rd2466, {%r7153, %r7152};
	shr.u64 	%rd2467, %rd2451, 6;
	xor.b64  	%rd2468, %rd2465, %rd2467;
	xor.b64  	%rd2469, %rd2468, %rd2466;
	shf.r.wrap.b32 	%r7154, %r7019, %r7018, 1;
	shf.r.wrap.b32 	%r7155, %r7018, %r7019, 1;
	mov.b64 	%rd2470, {%r7155, %r7154};
	shf.r.wrap.b32 	%r7156, %r7019, %r7018, 8;
	shf.r.wrap.b32 	%r7157, %r7018, %r7019, 8;
	mov.b64 	%rd2471, {%r7157, %r7156};
	shr.u64 	%rd2472, %rd1882, 7;
	xor.b64  	%rd2473, %rd2470, %rd2472;
	xor.b64  	%rd2474, %rd2473, %rd2471;
	add.s64 	%rd2475, %rd2386, %rd1869;
	add.s64 	%rd2476, %rd2475, %rd2469;
	add.s64 	%rd2477, %rd2476, %rd2474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7158,%dummy}, %rd2464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7159}, %rd2464;
	}
	shf.r.wrap.b32 	%r7160, %r7159, %r7158, 19;
	shf.r.wrap.b32 	%r7161, %r7158, %r7159, 19;
	mov.b64 	%rd2478, {%r7161, %r7160};
	shf.l.wrap.b32 	%r7162, %r7158, %r7159, 3;
	shf.l.wrap.b32 	%r7163, %r7159, %r7158, 3;
	mov.b64 	%rd2479, {%r7163, %r7162};
	shr.u64 	%rd2480, %rd2464, 6;
	xor.b64  	%rd2481, %rd2478, %rd2480;
	xor.b64  	%rd2482, %rd2481, %rd2479;
	shf.r.wrap.b32 	%r7164, %r7029, %r7028, 1;
	shf.r.wrap.b32 	%r7165, %r7028, %r7029, 1;
	mov.b64 	%rd2483, {%r7165, %r7164};
	shf.r.wrap.b32 	%r7166, %r7029, %r7028, 8;
	shf.r.wrap.b32 	%r7167, %r7028, %r7029, 8;
	mov.b64 	%rd2484, {%r7167, %r7166};
	shr.u64 	%rd2485, %rd1895, 7;
	xor.b64  	%rd2486, %rd2483, %rd2485;
	xor.b64  	%rd2487, %rd2486, %rd2484;
	add.s64 	%rd2488, %rd2399, %rd1882;
	add.s64 	%rd2489, %rd2488, %rd2482;
	add.s64 	%rd2490, %rd2489, %rd2487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7168,%dummy}, %rd2477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7169}, %rd2477;
	}
	shf.r.wrap.b32 	%r7170, %r7169, %r7168, 19;
	shf.r.wrap.b32 	%r7171, %r7168, %r7169, 19;
	mov.b64 	%rd2491, {%r7171, %r7170};
	shf.l.wrap.b32 	%r7172, %r7168, %r7169, 3;
	shf.l.wrap.b32 	%r7173, %r7169, %r7168, 3;
	mov.b64 	%rd2492, {%r7173, %r7172};
	shr.u64 	%rd2493, %rd2477, 6;
	xor.b64  	%rd2494, %rd2491, %rd2493;
	xor.b64  	%rd2495, %rd2494, %rd2492;
	shf.r.wrap.b32 	%r7174, %r7039, %r7038, 1;
	shf.r.wrap.b32 	%r7175, %r7038, %r7039, 1;
	mov.b64 	%rd2496, {%r7175, %r7174};
	shf.r.wrap.b32 	%r7176, %r7039, %r7038, 8;
	shf.r.wrap.b32 	%r7177, %r7038, %r7039, 8;
	mov.b64 	%rd2497, {%r7177, %r7176};
	shr.u64 	%rd2498, %rd2308, 7;
	xor.b64  	%rd2499, %rd2496, %rd2498;
	xor.b64  	%rd2500, %rd2499, %rd2497;
	add.s64 	%rd2501, %rd2412, %rd1895;
	add.s64 	%rd2502, %rd2501, %rd2495;
	add.s64 	%rd2503, %rd2502, %rd2500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7178,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7179}, %rd2284;
	}
	shf.r.wrap.b32 	%r7180, %r7179, %r7178, 14;
	shf.r.wrap.b32 	%r7181, %r7178, %r7179, 14;
	mov.b64 	%rd2504, {%r7181, %r7180};
	shf.r.wrap.b32 	%r7182, %r7179, %r7178, 18;
	shf.r.wrap.b32 	%r7183, %r7178, %r7179, 18;
	mov.b64 	%rd2505, {%r7183, %r7182};
	xor.b64  	%rd2506, %rd2505, %rd2504;
	shf.l.wrap.b32 	%r7184, %r7178, %r7179, 23;
	shf.l.wrap.b32 	%r7185, %r7179, %r7178, 23;
	mov.b64 	%rd2507, {%r7185, %r7184};
	xor.b64  	%rd2508, %rd2506, %rd2507;
	xor.b64  	%rd2509, %rd2259, %rd2234;
	and.b64  	%rd2510, %rd2509, %rd2284;
	xor.b64  	%rd2511, %rd2510, %rd2234;
	add.s64 	%rd2512, %rd2511, %rd2209;
	add.s64 	%rd2513, %rd2512, %rd2308;
	ld.const.u64 	%rd2514, [k_sha512+512];
	add.s64 	%rd2515, %rd2513, %rd2514;
	add.s64 	%rd2516, %rd2515, %rd2508;
	add.s64 	%rd2517, %rd2516, %rd2220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7187}, %rd2295;
	}
	shf.r.wrap.b32 	%r7188, %r7187, %r7186, 28;
	shf.r.wrap.b32 	%r7189, %r7186, %r7187, 28;
	mov.b64 	%rd2518, {%r7189, %r7188};
	shf.l.wrap.b32 	%r7190, %r7186, %r7187, 30;
	shf.l.wrap.b32 	%r7191, %r7187, %r7186, 30;
	mov.b64 	%rd2519, {%r7191, %r7190};
	xor.b64  	%rd2520, %rd2519, %rd2518;
	shf.l.wrap.b32 	%r7192, %r7186, %r7187, 25;
	shf.l.wrap.b32 	%r7193, %r7187, %r7186, 25;
	mov.b64 	%rd2521, {%r7193, %r7192};
	xor.b64  	%rd2522, %rd2520, %rd2521;
	xor.b64  	%rd2523, %rd2295, %rd2245;
	xor.b64  	%rd2524, %rd2295, %rd2270;
	and.b64  	%rd2525, %rd2524, %rd2523;
	xor.b64  	%rd2526, %rd2525, %rd2295;
	add.s64 	%rd2527, %rd2516, %rd2526;
	add.s64 	%rd2528, %rd2527, %rd2522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd2517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7195}, %rd2517;
	}
	shf.r.wrap.b32 	%r7196, %r7195, %r7194, 14;
	shf.r.wrap.b32 	%r7197, %r7194, %r7195, 14;
	mov.b64 	%rd2529, {%r7197, %r7196};
	shf.r.wrap.b32 	%r7198, %r7195, %r7194, 18;
	shf.r.wrap.b32 	%r7199, %r7194, %r7195, 18;
	mov.b64 	%rd2530, {%r7199, %r7198};
	xor.b64  	%rd2531, %rd2530, %rd2529;
	shf.l.wrap.b32 	%r7200, %r7194, %r7195, 23;
	shf.l.wrap.b32 	%r7201, %r7195, %r7194, 23;
	mov.b64 	%rd2532, {%r7201, %r7200};
	xor.b64  	%rd2533, %rd2531, %rd2532;
	xor.b64  	%rd2534, %rd2284, %rd2259;
	and.b64  	%rd2535, %rd2517, %rd2534;
	xor.b64  	%rd2536, %rd2535, %rd2259;
	add.s64 	%rd2537, %rd2321, %rd2234;
	ld.const.u64 	%rd2538, [k_sha512+520];
	add.s64 	%rd2539, %rd2537, %rd2538;
	add.s64 	%rd2540, %rd2539, %rd2536;
	add.s64 	%rd2541, %rd2540, %rd2533;
	add.s64 	%rd2542, %rd2541, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7202,%dummy}, %rd2528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7203}, %rd2528;
	}
	shf.r.wrap.b32 	%r7204, %r7203, %r7202, 28;
	shf.r.wrap.b32 	%r7205, %r7202, %r7203, 28;
	mov.b64 	%rd2543, {%r7205, %r7204};
	shf.l.wrap.b32 	%r7206, %r7202, %r7203, 30;
	shf.l.wrap.b32 	%r7207, %r7203, %r7202, 30;
	mov.b64 	%rd2544, {%r7207, %r7206};
	xor.b64  	%rd2545, %rd2544, %rd2543;
	shf.l.wrap.b32 	%r7208, %r7202, %r7203, 25;
	shf.l.wrap.b32 	%r7209, %r7203, %r7202, 25;
	mov.b64 	%rd2546, {%r7209, %r7208};
	xor.b64  	%rd2547, %rd2545, %rd2546;
	xor.b64  	%rd2548, %rd2528, %rd2270;
	xor.b64  	%rd2549, %rd2528, %rd2295;
	and.b64  	%rd2550, %rd2549, %rd2548;
	xor.b64  	%rd2551, %rd2550, %rd2528;
	add.s64 	%rd2552, %rd2541, %rd2551;
	add.s64 	%rd2553, %rd2552, %rd2547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7210,%dummy}, %rd2542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7211}, %rd2542;
	}
	shf.r.wrap.b32 	%r7212, %r7211, %r7210, 14;
	shf.r.wrap.b32 	%r7213, %r7210, %r7211, 14;
	mov.b64 	%rd2554, {%r7213, %r7212};
	shf.r.wrap.b32 	%r7214, %r7211, %r7210, 18;
	shf.r.wrap.b32 	%r7215, %r7210, %r7211, 18;
	mov.b64 	%rd2555, {%r7215, %r7214};
	xor.b64  	%rd2556, %rd2555, %rd2554;
	shf.l.wrap.b32 	%r7216, %r7210, %r7211, 23;
	shf.l.wrap.b32 	%r7217, %r7211, %r7210, 23;
	mov.b64 	%rd2557, {%r7217, %r7216};
	xor.b64  	%rd2558, %rd2556, %rd2557;
	xor.b64  	%rd2559, %rd2517, %rd2284;
	and.b64  	%rd2560, %rd2542, %rd2559;
	xor.b64  	%rd2561, %rd2560, %rd2284;
	add.s64 	%rd2562, %rd2334, %rd2259;
	ld.const.u64 	%rd2563, [k_sha512+528];
	add.s64 	%rd2564, %rd2562, %rd2563;
	add.s64 	%rd2565, %rd2564, %rd2561;
	add.s64 	%rd2566, %rd2565, %rd2558;
	add.s64 	%rd2567, %rd2566, %rd2270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7218,%dummy}, %rd2553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7219}, %rd2553;
	}
	shf.r.wrap.b32 	%r7220, %r7219, %r7218, 28;
	shf.r.wrap.b32 	%r7221, %r7218, %r7219, 28;
	mov.b64 	%rd2568, {%r7221, %r7220};
	shf.l.wrap.b32 	%r7222, %r7218, %r7219, 30;
	shf.l.wrap.b32 	%r7223, %r7219, %r7218, 30;
	mov.b64 	%rd2569, {%r7223, %r7222};
	xor.b64  	%rd2570, %rd2569, %rd2568;
	shf.l.wrap.b32 	%r7224, %r7218, %r7219, 25;
	shf.l.wrap.b32 	%r7225, %r7219, %r7218, 25;
	mov.b64 	%rd2571, {%r7225, %r7224};
	xor.b64  	%rd2572, %rd2570, %rd2571;
	xor.b64  	%rd2573, %rd2553, %rd2295;
	xor.b64  	%rd2574, %rd2553, %rd2528;
	and.b64  	%rd2575, %rd2574, %rd2573;
	xor.b64  	%rd2576, %rd2575, %rd2553;
	add.s64 	%rd2577, %rd2566, %rd2576;
	add.s64 	%rd2578, %rd2577, %rd2572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7226,%dummy}, %rd2567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7227}, %rd2567;
	}
	shf.r.wrap.b32 	%r7228, %r7227, %r7226, 14;
	shf.r.wrap.b32 	%r7229, %r7226, %r7227, 14;
	mov.b64 	%rd2579, {%r7229, %r7228};
	shf.r.wrap.b32 	%r7230, %r7227, %r7226, 18;
	shf.r.wrap.b32 	%r7231, %r7226, %r7227, 18;
	mov.b64 	%rd2580, {%r7231, %r7230};
	xor.b64  	%rd2581, %rd2580, %rd2579;
	shf.l.wrap.b32 	%r7232, %r7226, %r7227, 23;
	shf.l.wrap.b32 	%r7233, %r7227, %r7226, 23;
	mov.b64 	%rd2582, {%r7233, %r7232};
	xor.b64  	%rd2583, %rd2581, %rd2582;
	xor.b64  	%rd2584, %rd2542, %rd2517;
	and.b64  	%rd2585, %rd2567, %rd2584;
	xor.b64  	%rd2586, %rd2585, %rd2517;
	add.s64 	%rd2587, %rd2347, %rd2284;
	ld.const.u64 	%rd2588, [k_sha512+536];
	add.s64 	%rd2589, %rd2587, %rd2588;
	add.s64 	%rd2590, %rd2589, %rd2586;
	add.s64 	%rd2591, %rd2590, %rd2583;
	add.s64 	%rd2592, %rd2591, %rd2295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7234,%dummy}, %rd2578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7235}, %rd2578;
	}
	shf.r.wrap.b32 	%r7236, %r7235, %r7234, 28;
	shf.r.wrap.b32 	%r7237, %r7234, %r7235, 28;
	mov.b64 	%rd2593, {%r7237, %r7236};
	shf.l.wrap.b32 	%r7238, %r7234, %r7235, 30;
	shf.l.wrap.b32 	%r7239, %r7235, %r7234, 30;
	mov.b64 	%rd2594, {%r7239, %r7238};
	xor.b64  	%rd2595, %rd2594, %rd2593;
	shf.l.wrap.b32 	%r7240, %r7234, %r7235, 25;
	shf.l.wrap.b32 	%r7241, %r7235, %r7234, 25;
	mov.b64 	%rd2596, {%r7241, %r7240};
	xor.b64  	%rd2597, %rd2595, %rd2596;
	xor.b64  	%rd2598, %rd2578, %rd2528;
	xor.b64  	%rd2599, %rd2578, %rd2553;
	and.b64  	%rd2600, %rd2599, %rd2598;
	xor.b64  	%rd2601, %rd2600, %rd2578;
	add.s64 	%rd2602, %rd2591, %rd2601;
	add.s64 	%rd2603, %rd2602, %rd2597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7242,%dummy}, %rd2592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7243}, %rd2592;
	}
	shf.r.wrap.b32 	%r7244, %r7243, %r7242, 14;
	shf.r.wrap.b32 	%r7245, %r7242, %r7243, 14;
	mov.b64 	%rd2604, {%r7245, %r7244};
	shf.r.wrap.b32 	%r7246, %r7243, %r7242, 18;
	shf.r.wrap.b32 	%r7247, %r7242, %r7243, 18;
	mov.b64 	%rd2605, {%r7247, %r7246};
	xor.b64  	%rd2606, %rd2605, %rd2604;
	shf.l.wrap.b32 	%r7248, %r7242, %r7243, 23;
	shf.l.wrap.b32 	%r7249, %r7243, %r7242, 23;
	mov.b64 	%rd2607, {%r7249, %r7248};
	xor.b64  	%rd2608, %rd2606, %rd2607;
	xor.b64  	%rd2609, %rd2567, %rd2542;
	and.b64  	%rd2610, %rd2592, %rd2609;
	xor.b64  	%rd2611, %rd2610, %rd2542;
	add.s64 	%rd2612, %rd2517, %rd2360;
	ld.const.u64 	%rd2613, [k_sha512+544];
	add.s64 	%rd2614, %rd2612, %rd2613;
	add.s64 	%rd2615, %rd2614, %rd2611;
	add.s64 	%rd2616, %rd2615, %rd2608;
	add.s64 	%rd2617, %rd2616, %rd2528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7250,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7251}, %rd2603;
	}
	shf.r.wrap.b32 	%r7252, %r7251, %r7250, 28;
	shf.r.wrap.b32 	%r7253, %r7250, %r7251, 28;
	mov.b64 	%rd2618, {%r7253, %r7252};
	shf.l.wrap.b32 	%r7254, %r7250, %r7251, 30;
	shf.l.wrap.b32 	%r7255, %r7251, %r7250, 30;
	mov.b64 	%rd2619, {%r7255, %r7254};
	xor.b64  	%rd2620, %rd2619, %rd2618;
	shf.l.wrap.b32 	%r7256, %r7250, %r7251, 25;
	shf.l.wrap.b32 	%r7257, %r7251, %r7250, 25;
	mov.b64 	%rd2621, {%r7257, %r7256};
	xor.b64  	%rd2622, %rd2620, %rd2621;
	xor.b64  	%rd2623, %rd2603, %rd2553;
	xor.b64  	%rd2624, %rd2603, %rd2578;
	and.b64  	%rd2625, %rd2624, %rd2623;
	xor.b64  	%rd2626, %rd2625, %rd2603;
	add.s64 	%rd2627, %rd2616, %rd2626;
	add.s64 	%rd2628, %rd2627, %rd2622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7258,%dummy}, %rd2617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7259}, %rd2617;
	}
	shf.r.wrap.b32 	%r7260, %r7259, %r7258, 14;
	shf.r.wrap.b32 	%r7261, %r7258, %r7259, 14;
	mov.b64 	%rd2629, {%r7261, %r7260};
	shf.r.wrap.b32 	%r7262, %r7259, %r7258, 18;
	shf.r.wrap.b32 	%r7263, %r7258, %r7259, 18;
	mov.b64 	%rd2630, {%r7263, %r7262};
	xor.b64  	%rd2631, %rd2630, %rd2629;
	shf.l.wrap.b32 	%r7264, %r7258, %r7259, 23;
	shf.l.wrap.b32 	%r7265, %r7259, %r7258, 23;
	mov.b64 	%rd2632, {%r7265, %r7264};
	xor.b64  	%rd2633, %rd2631, %rd2632;
	xor.b64  	%rd2634, %rd2592, %rd2567;
	and.b64  	%rd2635, %rd2617, %rd2634;
	xor.b64  	%rd2636, %rd2635, %rd2567;
	add.s64 	%rd2637, %rd2542, %rd2373;
	ld.const.u64 	%rd2638, [k_sha512+552];
	add.s64 	%rd2639, %rd2637, %rd2638;
	add.s64 	%rd2640, %rd2639, %rd2636;
	add.s64 	%rd2641, %rd2640, %rd2633;
	add.s64 	%rd2642, %rd2641, %rd2553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7266,%dummy}, %rd2628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7267}, %rd2628;
	}
	shf.r.wrap.b32 	%r7268, %r7267, %r7266, 28;
	shf.r.wrap.b32 	%r7269, %r7266, %r7267, 28;
	mov.b64 	%rd2643, {%r7269, %r7268};
	shf.l.wrap.b32 	%r7270, %r7266, %r7267, 30;
	shf.l.wrap.b32 	%r7271, %r7267, %r7266, 30;
	mov.b64 	%rd2644, {%r7271, %r7270};
	xor.b64  	%rd2645, %rd2644, %rd2643;
	shf.l.wrap.b32 	%r7272, %r7266, %r7267, 25;
	shf.l.wrap.b32 	%r7273, %r7267, %r7266, 25;
	mov.b64 	%rd2646, {%r7273, %r7272};
	xor.b64  	%rd2647, %rd2645, %rd2646;
	xor.b64  	%rd2648, %rd2628, %rd2578;
	xor.b64  	%rd2649, %rd2628, %rd2603;
	and.b64  	%rd2650, %rd2649, %rd2648;
	xor.b64  	%rd2651, %rd2650, %rd2628;
	add.s64 	%rd2652, %rd2641, %rd2651;
	add.s64 	%rd2653, %rd2652, %rd2647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7274,%dummy}, %rd2642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7275}, %rd2642;
	}
	shf.r.wrap.b32 	%r7276, %r7275, %r7274, 14;
	shf.r.wrap.b32 	%r7277, %r7274, %r7275, 14;
	mov.b64 	%rd2654, {%r7277, %r7276};
	shf.r.wrap.b32 	%r7278, %r7275, %r7274, 18;
	shf.r.wrap.b32 	%r7279, %r7274, %r7275, 18;
	mov.b64 	%rd2655, {%r7279, %r7278};
	xor.b64  	%rd2656, %rd2655, %rd2654;
	shf.l.wrap.b32 	%r7280, %r7274, %r7275, 23;
	shf.l.wrap.b32 	%r7281, %r7275, %r7274, 23;
	mov.b64 	%rd2657, {%r7281, %r7280};
	xor.b64  	%rd2658, %rd2656, %rd2657;
	xor.b64  	%rd2659, %rd2617, %rd2592;
	and.b64  	%rd2660, %rd2642, %rd2659;
	xor.b64  	%rd2661, %rd2660, %rd2592;
	add.s64 	%rd2662, %rd2567, %rd2386;
	ld.const.u64 	%rd2663, [k_sha512+560];
	add.s64 	%rd2664, %rd2662, %rd2663;
	add.s64 	%rd2665, %rd2664, %rd2661;
	add.s64 	%rd2666, %rd2665, %rd2658;
	add.s64 	%rd2667, %rd2666, %rd2578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7282,%dummy}, %rd2653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7283}, %rd2653;
	}
	shf.r.wrap.b32 	%r7284, %r7283, %r7282, 28;
	shf.r.wrap.b32 	%r7285, %r7282, %r7283, 28;
	mov.b64 	%rd2668, {%r7285, %r7284};
	shf.l.wrap.b32 	%r7286, %r7282, %r7283, 30;
	shf.l.wrap.b32 	%r7287, %r7283, %r7282, 30;
	mov.b64 	%rd2669, {%r7287, %r7286};
	xor.b64  	%rd2670, %rd2669, %rd2668;
	shf.l.wrap.b32 	%r7288, %r7282, %r7283, 25;
	shf.l.wrap.b32 	%r7289, %r7283, %r7282, 25;
	mov.b64 	%rd2671, {%r7289, %r7288};
	xor.b64  	%rd2672, %rd2670, %rd2671;
	xor.b64  	%rd2673, %rd2653, %rd2603;
	xor.b64  	%rd2674, %rd2653, %rd2628;
	and.b64  	%rd2675, %rd2674, %rd2673;
	xor.b64  	%rd2676, %rd2675, %rd2653;
	add.s64 	%rd2677, %rd2666, %rd2676;
	add.s64 	%rd2678, %rd2677, %rd2672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7290,%dummy}, %rd2667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7291}, %rd2667;
	}
	shf.r.wrap.b32 	%r7292, %r7291, %r7290, 14;
	shf.r.wrap.b32 	%r7293, %r7290, %r7291, 14;
	mov.b64 	%rd2679, {%r7293, %r7292};
	shf.r.wrap.b32 	%r7294, %r7291, %r7290, 18;
	shf.r.wrap.b32 	%r7295, %r7290, %r7291, 18;
	mov.b64 	%rd2680, {%r7295, %r7294};
	xor.b64  	%rd2681, %rd2680, %rd2679;
	shf.l.wrap.b32 	%r7296, %r7290, %r7291, 23;
	shf.l.wrap.b32 	%r7297, %r7291, %r7290, 23;
	mov.b64 	%rd2682, {%r7297, %r7296};
	xor.b64  	%rd2683, %rd2681, %rd2682;
	xor.b64  	%rd2684, %rd2642, %rd2617;
	and.b64  	%rd2685, %rd2667, %rd2684;
	xor.b64  	%rd2686, %rd2685, %rd2617;
	add.s64 	%rd2687, %rd2592, %rd2399;
	ld.const.u64 	%rd2688, [k_sha512+568];
	add.s64 	%rd2689, %rd2687, %rd2688;
	add.s64 	%rd2690, %rd2689, %rd2686;
	add.s64 	%rd2691, %rd2690, %rd2683;
	add.s64 	%rd2692, %rd2691, %rd2603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7298,%dummy}, %rd2678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7299}, %rd2678;
	}
	shf.r.wrap.b32 	%r7300, %r7299, %r7298, 28;
	shf.r.wrap.b32 	%r7301, %r7298, %r7299, 28;
	mov.b64 	%rd2693, {%r7301, %r7300};
	shf.l.wrap.b32 	%r7302, %r7298, %r7299, 30;
	shf.l.wrap.b32 	%r7303, %r7299, %r7298, 30;
	mov.b64 	%rd2694, {%r7303, %r7302};
	xor.b64  	%rd2695, %rd2694, %rd2693;
	shf.l.wrap.b32 	%r7304, %r7298, %r7299, 25;
	shf.l.wrap.b32 	%r7305, %r7299, %r7298, 25;
	mov.b64 	%rd2696, {%r7305, %r7304};
	xor.b64  	%rd2697, %rd2695, %rd2696;
	xor.b64  	%rd2698, %rd2678, %rd2628;
	xor.b64  	%rd2699, %rd2678, %rd2653;
	and.b64  	%rd2700, %rd2699, %rd2698;
	xor.b64  	%rd2701, %rd2700, %rd2678;
	add.s64 	%rd2702, %rd2691, %rd2701;
	add.s64 	%rd2703, %rd2702, %rd2697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7306,%dummy}, %rd2692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7307}, %rd2692;
	}
	shf.r.wrap.b32 	%r7308, %r7307, %r7306, 14;
	shf.r.wrap.b32 	%r7309, %r7306, %r7307, 14;
	mov.b64 	%rd2704, {%r7309, %r7308};
	shf.r.wrap.b32 	%r7310, %r7307, %r7306, 18;
	shf.r.wrap.b32 	%r7311, %r7306, %r7307, 18;
	mov.b64 	%rd2705, {%r7311, %r7310};
	xor.b64  	%rd2706, %rd2705, %rd2704;
	shf.l.wrap.b32 	%r7312, %r7306, %r7307, 23;
	shf.l.wrap.b32 	%r7313, %r7307, %r7306, 23;
	mov.b64 	%rd2707, {%r7313, %r7312};
	xor.b64  	%rd2708, %rd2706, %rd2707;
	xor.b64  	%rd2709, %rd2667, %rd2642;
	and.b64  	%rd2710, %rd2692, %rd2709;
	xor.b64  	%rd2711, %rd2710, %rd2642;
	add.s64 	%rd2712, %rd2617, %rd2412;
	ld.const.u64 	%rd2713, [k_sha512+576];
	add.s64 	%rd2714, %rd2712, %rd2713;
	add.s64 	%rd2715, %rd2714, %rd2711;
	add.s64 	%rd2716, %rd2715, %rd2708;
	add.s64 	%rd2717, %rd2716, %rd2628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7314,%dummy}, %rd2703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7315}, %rd2703;
	}
	shf.r.wrap.b32 	%r7316, %r7315, %r7314, 28;
	shf.r.wrap.b32 	%r7317, %r7314, %r7315, 28;
	mov.b64 	%rd2718, {%r7317, %r7316};
	shf.l.wrap.b32 	%r7318, %r7314, %r7315, 30;
	shf.l.wrap.b32 	%r7319, %r7315, %r7314, 30;
	mov.b64 	%rd2719, {%r7319, %r7318};
	xor.b64  	%rd2720, %rd2719, %rd2718;
	shf.l.wrap.b32 	%r7320, %r7314, %r7315, 25;
	shf.l.wrap.b32 	%r7321, %r7315, %r7314, 25;
	mov.b64 	%rd2721, {%r7321, %r7320};
	xor.b64  	%rd2722, %rd2720, %rd2721;
	xor.b64  	%rd2723, %rd2703, %rd2653;
	xor.b64  	%rd2724, %rd2703, %rd2678;
	and.b64  	%rd2725, %rd2724, %rd2723;
	xor.b64  	%rd2726, %rd2725, %rd2703;
	add.s64 	%rd2727, %rd2716, %rd2726;
	add.s64 	%rd2728, %rd2727, %rd2722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7322,%dummy}, %rd2717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7323}, %rd2717;
	}
	shf.r.wrap.b32 	%r7324, %r7323, %r7322, 14;
	shf.r.wrap.b32 	%r7325, %r7322, %r7323, 14;
	mov.b64 	%rd2729, {%r7325, %r7324};
	shf.r.wrap.b32 	%r7326, %r7323, %r7322, 18;
	shf.r.wrap.b32 	%r7327, %r7322, %r7323, 18;
	mov.b64 	%rd2730, {%r7327, %r7326};
	xor.b64  	%rd2731, %rd2730, %rd2729;
	shf.l.wrap.b32 	%r7328, %r7322, %r7323, 23;
	shf.l.wrap.b32 	%r7329, %r7323, %r7322, 23;
	mov.b64 	%rd2732, {%r7329, %r7328};
	xor.b64  	%rd2733, %rd2731, %rd2732;
	xor.b64  	%rd2734, %rd2692, %rd2667;
	and.b64  	%rd2735, %rd2717, %rd2734;
	xor.b64  	%rd2736, %rd2735, %rd2667;
	add.s64 	%rd2737, %rd2642, %rd2425;
	ld.const.u64 	%rd2738, [k_sha512+584];
	add.s64 	%rd2739, %rd2737, %rd2738;
	add.s64 	%rd2740, %rd2739, %rd2736;
	add.s64 	%rd2741, %rd2740, %rd2733;
	add.s64 	%rd2742, %rd2741, %rd2653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7330,%dummy}, %rd2728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7331}, %rd2728;
	}
	shf.r.wrap.b32 	%r7332, %r7331, %r7330, 28;
	shf.r.wrap.b32 	%r7333, %r7330, %r7331, 28;
	mov.b64 	%rd2743, {%r7333, %r7332};
	shf.l.wrap.b32 	%r7334, %r7330, %r7331, 30;
	shf.l.wrap.b32 	%r7335, %r7331, %r7330, 30;
	mov.b64 	%rd2744, {%r7335, %r7334};
	xor.b64  	%rd2745, %rd2744, %rd2743;
	shf.l.wrap.b32 	%r7336, %r7330, %r7331, 25;
	shf.l.wrap.b32 	%r7337, %r7331, %r7330, 25;
	mov.b64 	%rd2746, {%r7337, %r7336};
	xor.b64  	%rd2747, %rd2745, %rd2746;
	xor.b64  	%rd2748, %rd2728, %rd2678;
	xor.b64  	%rd2749, %rd2728, %rd2703;
	and.b64  	%rd2750, %rd2749, %rd2748;
	xor.b64  	%rd2751, %rd2750, %rd2728;
	add.s64 	%rd2752, %rd2741, %rd2751;
	add.s64 	%rd2753, %rd2752, %rd2747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7338,%dummy}, %rd2742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7339}, %rd2742;
	}
	shf.r.wrap.b32 	%r7340, %r7339, %r7338, 14;
	shf.r.wrap.b32 	%r7341, %r7338, %r7339, 14;
	mov.b64 	%rd2754, {%r7341, %r7340};
	shf.r.wrap.b32 	%r7342, %r7339, %r7338, 18;
	shf.r.wrap.b32 	%r7343, %r7338, %r7339, 18;
	mov.b64 	%rd2755, {%r7343, %r7342};
	xor.b64  	%rd2756, %rd2755, %rd2754;
	shf.l.wrap.b32 	%r7344, %r7338, %r7339, 23;
	shf.l.wrap.b32 	%r7345, %r7339, %r7338, 23;
	mov.b64 	%rd2757, {%r7345, %r7344};
	xor.b64  	%rd2758, %rd2756, %rd2757;
	xor.b64  	%rd2759, %rd2717, %rd2692;
	and.b64  	%rd2760, %rd2742, %rd2759;
	xor.b64  	%rd2761, %rd2760, %rd2692;
	add.s64 	%rd2762, %rd2667, %rd2438;
	ld.const.u64 	%rd2763, [k_sha512+592];
	add.s64 	%rd2764, %rd2762, %rd2763;
	add.s64 	%rd2765, %rd2764, %rd2761;
	add.s64 	%rd2766, %rd2765, %rd2758;
	add.s64 	%rd2767, %rd2766, %rd2678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7346,%dummy}, %rd2753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7347}, %rd2753;
	}
	shf.r.wrap.b32 	%r7348, %r7347, %r7346, 28;
	shf.r.wrap.b32 	%r7349, %r7346, %r7347, 28;
	mov.b64 	%rd2768, {%r7349, %r7348};
	shf.l.wrap.b32 	%r7350, %r7346, %r7347, 30;
	shf.l.wrap.b32 	%r7351, %r7347, %r7346, 30;
	mov.b64 	%rd2769, {%r7351, %r7350};
	xor.b64  	%rd2770, %rd2769, %rd2768;
	shf.l.wrap.b32 	%r7352, %r7346, %r7347, 25;
	shf.l.wrap.b32 	%r7353, %r7347, %r7346, 25;
	mov.b64 	%rd2771, {%r7353, %r7352};
	xor.b64  	%rd2772, %rd2770, %rd2771;
	xor.b64  	%rd2773, %rd2753, %rd2703;
	xor.b64  	%rd2774, %rd2753, %rd2728;
	and.b64  	%rd2775, %rd2774, %rd2773;
	xor.b64  	%rd2776, %rd2775, %rd2753;
	add.s64 	%rd2777, %rd2766, %rd2776;
	add.s64 	%rd2778, %rd2777, %rd2772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7354,%dummy}, %rd2767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7355}, %rd2767;
	}
	shf.r.wrap.b32 	%r7356, %r7355, %r7354, 14;
	shf.r.wrap.b32 	%r7357, %r7354, %r7355, 14;
	mov.b64 	%rd2779, {%r7357, %r7356};
	shf.r.wrap.b32 	%r7358, %r7355, %r7354, 18;
	shf.r.wrap.b32 	%r7359, %r7354, %r7355, 18;
	mov.b64 	%rd2780, {%r7359, %r7358};
	xor.b64  	%rd2781, %rd2780, %rd2779;
	shf.l.wrap.b32 	%r7360, %r7354, %r7355, 23;
	shf.l.wrap.b32 	%r7361, %r7355, %r7354, 23;
	mov.b64 	%rd2782, {%r7361, %r7360};
	xor.b64  	%rd2783, %rd2781, %rd2782;
	xor.b64  	%rd2784, %rd2742, %rd2717;
	and.b64  	%rd2785, %rd2767, %rd2784;
	xor.b64  	%rd2786, %rd2785, %rd2717;
	add.s64 	%rd2787, %rd2692, %rd2451;
	ld.const.u64 	%rd2788, [k_sha512+600];
	add.s64 	%rd2789, %rd2787, %rd2788;
	add.s64 	%rd2790, %rd2789, %rd2786;
	add.s64 	%rd2791, %rd2790, %rd2783;
	add.s64 	%rd2792, %rd2791, %rd2703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7362,%dummy}, %rd2778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7363}, %rd2778;
	}
	shf.r.wrap.b32 	%r7364, %r7363, %r7362, 28;
	shf.r.wrap.b32 	%r7365, %r7362, %r7363, 28;
	mov.b64 	%rd2793, {%r7365, %r7364};
	shf.l.wrap.b32 	%r7366, %r7362, %r7363, 30;
	shf.l.wrap.b32 	%r7367, %r7363, %r7362, 30;
	mov.b64 	%rd2794, {%r7367, %r7366};
	xor.b64  	%rd2795, %rd2794, %rd2793;
	shf.l.wrap.b32 	%r7368, %r7362, %r7363, 25;
	shf.l.wrap.b32 	%r7369, %r7363, %r7362, 25;
	mov.b64 	%rd2796, {%r7369, %r7368};
	xor.b64  	%rd2797, %rd2795, %rd2796;
	xor.b64  	%rd2798, %rd2778, %rd2728;
	xor.b64  	%rd2799, %rd2778, %rd2753;
	and.b64  	%rd2800, %rd2799, %rd2798;
	xor.b64  	%rd2801, %rd2800, %rd2778;
	add.s64 	%rd2802, %rd2791, %rd2801;
	add.s64 	%rd2803, %rd2802, %rd2797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7370,%dummy}, %rd2792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7371}, %rd2792;
	}
	shf.r.wrap.b32 	%r7372, %r7371, %r7370, 14;
	shf.r.wrap.b32 	%r7373, %r7370, %r7371, 14;
	mov.b64 	%rd2804, {%r7373, %r7372};
	shf.r.wrap.b32 	%r7374, %r7371, %r7370, 18;
	shf.r.wrap.b32 	%r7375, %r7370, %r7371, 18;
	mov.b64 	%rd2805, {%r7375, %r7374};
	xor.b64  	%rd2806, %rd2805, %rd2804;
	shf.l.wrap.b32 	%r7376, %r7370, %r7371, 23;
	shf.l.wrap.b32 	%r7377, %r7371, %r7370, 23;
	mov.b64 	%rd2807, {%r7377, %r7376};
	xor.b64  	%rd2808, %rd2806, %rd2807;
	xor.b64  	%rd2809, %rd2767, %rd2742;
	and.b64  	%rd2810, %rd2792, %rd2809;
	xor.b64  	%rd2811, %rd2810, %rd2742;
	add.s64 	%rd2812, %rd2717, %rd2464;
	ld.const.u64 	%rd2813, [k_sha512+608];
	add.s64 	%rd2814, %rd2812, %rd2813;
	add.s64 	%rd2815, %rd2814, %rd2811;
	add.s64 	%rd2816, %rd2815, %rd2808;
	add.s64 	%rd2817, %rd2816, %rd2728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7378,%dummy}, %rd2803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7379}, %rd2803;
	}
	shf.r.wrap.b32 	%r7380, %r7379, %r7378, 28;
	shf.r.wrap.b32 	%r7381, %r7378, %r7379, 28;
	mov.b64 	%rd2818, {%r7381, %r7380};
	shf.l.wrap.b32 	%r7382, %r7378, %r7379, 30;
	shf.l.wrap.b32 	%r7383, %r7379, %r7378, 30;
	mov.b64 	%rd2819, {%r7383, %r7382};
	xor.b64  	%rd2820, %rd2819, %rd2818;
	shf.l.wrap.b32 	%r7384, %r7378, %r7379, 25;
	shf.l.wrap.b32 	%r7385, %r7379, %r7378, 25;
	mov.b64 	%rd2821, {%r7385, %r7384};
	xor.b64  	%rd2822, %rd2820, %rd2821;
	xor.b64  	%rd2823, %rd2803, %rd2753;
	xor.b64  	%rd2824, %rd2803, %rd2778;
	and.b64  	%rd2825, %rd2824, %rd2823;
	xor.b64  	%rd2826, %rd2825, %rd2803;
	add.s64 	%rd2827, %rd2816, %rd2826;
	add.s64 	%rd2828, %rd2827, %rd2822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7386,%dummy}, %rd2817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7387}, %rd2817;
	}
	shf.r.wrap.b32 	%r7388, %r7387, %r7386, 14;
	shf.r.wrap.b32 	%r7389, %r7386, %r7387, 14;
	mov.b64 	%rd2829, {%r7389, %r7388};
	shf.r.wrap.b32 	%r7390, %r7387, %r7386, 18;
	shf.r.wrap.b32 	%r7391, %r7386, %r7387, 18;
	mov.b64 	%rd2830, {%r7391, %r7390};
	xor.b64  	%rd2831, %rd2830, %rd2829;
	shf.l.wrap.b32 	%r7392, %r7386, %r7387, 23;
	shf.l.wrap.b32 	%r7393, %r7387, %r7386, 23;
	mov.b64 	%rd2832, {%r7393, %r7392};
	xor.b64  	%rd2833, %rd2831, %rd2832;
	xor.b64  	%rd2834, %rd2792, %rd2767;
	and.b64  	%rd2835, %rd2817, %rd2834;
	xor.b64  	%rd2836, %rd2835, %rd2767;
	add.s64 	%rd2837, %rd2742, %rd2477;
	ld.const.u64 	%rd2838, [k_sha512+616];
	add.s64 	%rd2839, %rd2837, %rd2838;
	add.s64 	%rd2840, %rd2839, %rd2836;
	add.s64 	%rd2841, %rd2840, %rd2833;
	add.s64 	%rd2842, %rd2841, %rd2753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7394,%dummy}, %rd2828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7395}, %rd2828;
	}
	shf.r.wrap.b32 	%r7396, %r7395, %r7394, 28;
	shf.r.wrap.b32 	%r7397, %r7394, %r7395, 28;
	mov.b64 	%rd2843, {%r7397, %r7396};
	shf.l.wrap.b32 	%r7398, %r7394, %r7395, 30;
	shf.l.wrap.b32 	%r7399, %r7395, %r7394, 30;
	mov.b64 	%rd2844, {%r7399, %r7398};
	xor.b64  	%rd2845, %rd2844, %rd2843;
	shf.l.wrap.b32 	%r7400, %r7394, %r7395, 25;
	shf.l.wrap.b32 	%r7401, %r7395, %r7394, 25;
	mov.b64 	%rd2846, {%r7401, %r7400};
	xor.b64  	%rd2847, %rd2845, %rd2846;
	xor.b64  	%rd2848, %rd2828, %rd2778;
	xor.b64  	%rd2849, %rd2828, %rd2803;
	and.b64  	%rd2850, %rd2849, %rd2848;
	xor.b64  	%rd2851, %rd2850, %rd2828;
	add.s64 	%rd2852, %rd2841, %rd2851;
	add.s64 	%rd2853, %rd2852, %rd2847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7402,%dummy}, %rd2842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7403}, %rd2842;
	}
	shf.r.wrap.b32 	%r7404, %r7403, %r7402, 14;
	shf.r.wrap.b32 	%r7405, %r7402, %r7403, 14;
	mov.b64 	%rd2854, {%r7405, %r7404};
	shf.r.wrap.b32 	%r7406, %r7403, %r7402, 18;
	shf.r.wrap.b32 	%r7407, %r7402, %r7403, 18;
	mov.b64 	%rd2855, {%r7407, %r7406};
	xor.b64  	%rd2856, %rd2855, %rd2854;
	shf.l.wrap.b32 	%r7408, %r7402, %r7403, 23;
	shf.l.wrap.b32 	%r7409, %r7403, %r7402, 23;
	mov.b64 	%rd2857, {%r7409, %r7408};
	xor.b64  	%rd2858, %rd2856, %rd2857;
	xor.b64  	%rd2859, %rd2817, %rd2792;
	and.b64  	%rd2860, %rd2842, %rd2859;
	xor.b64  	%rd2861, %rd2860, %rd2792;
	add.s64 	%rd2862, %rd2767, %rd2490;
	ld.const.u64 	%rd2863, [k_sha512+624];
	add.s64 	%rd2864, %rd2862, %rd2863;
	add.s64 	%rd2865, %rd2864, %rd2861;
	add.s64 	%rd2866, %rd2865, %rd2858;
	add.s64 	%rd2867, %rd2866, %rd2778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7410,%dummy}, %rd2853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7411}, %rd2853;
	}
	shf.r.wrap.b32 	%r7412, %r7411, %r7410, 28;
	shf.r.wrap.b32 	%r7413, %r7410, %r7411, 28;
	mov.b64 	%rd2868, {%r7413, %r7412};
	shf.l.wrap.b32 	%r7414, %r7410, %r7411, 30;
	shf.l.wrap.b32 	%r7415, %r7411, %r7410, 30;
	mov.b64 	%rd2869, {%r7415, %r7414};
	xor.b64  	%rd2870, %rd2869, %rd2868;
	shf.l.wrap.b32 	%r7416, %r7410, %r7411, 25;
	shf.l.wrap.b32 	%r7417, %r7411, %r7410, 25;
	mov.b64 	%rd2871, {%r7417, %r7416};
	xor.b64  	%rd2872, %rd2870, %rd2871;
	xor.b64  	%rd2873, %rd2853, %rd2803;
	xor.b64  	%rd2874, %rd2853, %rd2828;
	and.b64  	%rd2875, %rd2874, %rd2873;
	xor.b64  	%rd2876, %rd2875, %rd2853;
	add.s64 	%rd2877, %rd2866, %rd2876;
	add.s64 	%rd2878, %rd2877, %rd2872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7418,%dummy}, %rd2867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7419}, %rd2867;
	}
	shf.r.wrap.b32 	%r7420, %r7419, %r7418, 14;
	shf.r.wrap.b32 	%r7421, %r7418, %r7419, 14;
	mov.b64 	%rd2879, {%r7421, %r7420};
	shf.r.wrap.b32 	%r7422, %r7419, %r7418, 18;
	shf.r.wrap.b32 	%r7423, %r7418, %r7419, 18;
	mov.b64 	%rd2880, {%r7423, %r7422};
	xor.b64  	%rd2881, %rd2880, %rd2879;
	shf.l.wrap.b32 	%r7424, %r7418, %r7419, 23;
	shf.l.wrap.b32 	%r7425, %r7419, %r7418, 23;
	mov.b64 	%rd2882, {%r7425, %r7424};
	xor.b64  	%rd2883, %rd2881, %rd2882;
	xor.b64  	%rd2884, %rd2842, %rd2817;
	and.b64  	%rd2885, %rd2867, %rd2884;
	xor.b64  	%rd2886, %rd2885, %rd2817;
	add.s64 	%rd2887, %rd2792, %rd2503;
	ld.const.u64 	%rd2888, [k_sha512+632];
	add.s64 	%rd2889, %rd2887, %rd2888;
	add.s64 	%rd2890, %rd2889, %rd2886;
	add.s64 	%rd2891, %rd2890, %rd2883;
	add.s64 	%rd2892, %rd2891, %rd2803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7426,%dummy}, %rd2878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7427}, %rd2878;
	}
	shf.r.wrap.b32 	%r7428, %r7427, %r7426, 28;
	shf.r.wrap.b32 	%r7429, %r7426, %r7427, 28;
	mov.b64 	%rd2893, {%r7429, %r7428};
	shf.l.wrap.b32 	%r7430, %r7426, %r7427, 30;
	shf.l.wrap.b32 	%r7431, %r7427, %r7426, 30;
	mov.b64 	%rd2894, {%r7431, %r7430};
	xor.b64  	%rd2895, %rd2894, %rd2893;
	shf.l.wrap.b32 	%r7432, %r7426, %r7427, 25;
	shf.l.wrap.b32 	%r7433, %r7427, %r7426, 25;
	mov.b64 	%rd2896, {%r7433, %r7432};
	xor.b64  	%rd2897, %rd2895, %rd2896;
	xor.b64  	%rd2898, %rd2878, %rd2828;
	xor.b64  	%rd2899, %rd2878, %rd2853;
	and.b64  	%rd2900, %rd2899, %rd2898;
	xor.b64  	%rd2901, %rd2900, %rd2878;
	add.s64 	%rd2902, %rd2891, %rd2901;
	add.s64 	%rd2903, %rd2902, %rd2897;
	add.s64 	%rd2904, %rd83, %rd2903;
	st.u64 	[%rd9+-192], %rd2904;
	add.s64 	%rd2905, %rd91, %rd2878;
	st.u64 	[%rd9+-184], %rd2905;
	add.s64 	%rd2906, %rd89, %rd2853;
	st.u64 	[%rd9+-176], %rd2906;
	add.s64 	%rd2907, %rd81, %rd2828;
	st.u64 	[%rd9+-168], %rd2907;
	add.s64 	%rd2908, %rd64, %rd2892;
	st.u64 	[%rd9+-160], %rd2908;
	add.s64 	%rd2909, %rd71, %rd2867;
	st.u64 	[%rd9+-152], %rd2909;
	add.s64 	%rd2910, %rd70, %rd2842;
	st.u64 	[%rd9+-144], %rd2910;
	add.s64 	%rd2911, %rd75, %rd2817;
	st.u64 	[%rd9+-136], %rd2911;
	st.v2.u32 	[%rd9+-128], {%r9676, %r9675};
	st.v2.u32 	[%rd9+-120], {%r9674, %r9673};
	st.v2.u32 	[%rd9+-112], {%r9680, %r9679};
	st.v2.u32 	[%rd9+-104], {%r9678, %r9677};
	st.v2.u32 	[%rd9+-96], {%r9684, %r9683};
	st.v2.u32 	[%rd9+-88], {%r9682, %r9681};
	st.v2.u32 	[%rd9+-80], {%r9688, %r9687};
	st.v2.u32 	[%rd9+-72], {%r9686, %r9685};
	st.v2.u32 	[%rd9+-64], {%r9692, %r9691};
	st.v2.u32 	[%rd9+-56], {%r9690, %r9689};
	st.v2.u32 	[%rd9+-48], {%r9696, %r9695};
	st.v2.u32 	[%rd9+-40], {%r9694, %r9693};
	st.v2.u32 	[%rd9+-32], {%r9700, %r9699};
	st.v2.u32 	[%rd9+-24], {%r9698, %r9697};
	st.v2.u32 	[%rd9+-16], {%r9704, %r9703};
	st.v2.u32 	[%rd9+-8], {%r9702, %r9701};

BB3_171:
	ret;
}

.func sha512_update_global_swap(
	.param .b64 sha512_update_global_swap_param_0,
	.param .b64 sha512_update_global_swap_param_1,
	.param .b32 sha512_update_global_swap_param_2
)
{
	.reg .pred 	%p<144>;
	.reg .b32 	%r<20372>;
	.reg .b64 	%rd<5780>;


	ld.param.u64 	%rd83, [sha512_update_global_swap_param_0];
	ld.param.u64 	%rd82, [sha512_update_global_swap_param_1];
	ld.param.u32 	%r2843, [sha512_update_global_swap_param_2];
	cvta.to.local.u64 	%rd1, %rd83;
	add.s32 	%r1, %r2843, -128;
	ld.const.u64 	%rd2, [k_sha512];
	ld.const.u64 	%rd3, [k_sha512+8];
	ld.const.u64 	%rd4, [k_sha512+16];
	ld.const.u64 	%rd5, [k_sha512+24];
	ld.const.u64 	%rd6, [k_sha512+32];
	ld.const.u64 	%rd7, [k_sha512+40];
	ld.const.u64 	%rd8, [k_sha512+48];
	ld.const.u64 	%rd9, [k_sha512+56];
	ld.const.u64 	%rd10, [k_sha512+64];
	ld.const.u64 	%rd11, [k_sha512+72];
	ld.const.u64 	%rd12, [k_sha512+80];
	ld.const.u64 	%rd13, [k_sha512+88];
	ld.const.u64 	%rd14, [k_sha512+96];
	ld.const.u64 	%rd15, [k_sha512+104];
	ld.const.u64 	%rd16, [k_sha512+112];
	ld.const.u64 	%rd17, [k_sha512+120];
	ld.const.u64 	%rd18, [k_sha512+128];
	ld.const.u64 	%rd19, [k_sha512+136];
	ld.const.u64 	%rd20, [k_sha512+144];
	ld.const.u64 	%rd21, [k_sha512+152];
	ld.const.u64 	%rd22, [k_sha512+160];
	ld.const.u64 	%rd23, [k_sha512+168];
	ld.const.u64 	%rd24, [k_sha512+176];
	ld.const.u64 	%rd25, [k_sha512+184];
	ld.const.u64 	%rd26, [k_sha512+192];
	ld.const.u64 	%rd27, [k_sha512+200];
	ld.const.u64 	%rd28, [k_sha512+208];
	ld.const.u64 	%rd29, [k_sha512+216];
	ld.const.u64 	%rd30, [k_sha512+224];
	ld.const.u64 	%rd31, [k_sha512+232];
	ld.const.u64 	%rd32, [k_sha512+240];
	ld.const.u64 	%rd33, [k_sha512+248];
	ld.const.u64 	%rd34, [k_sha512+256];
	ld.const.u64 	%rd35, [k_sha512+264];
	ld.const.u64 	%rd36, [k_sha512+272];
	ld.const.u64 	%rd37, [k_sha512+280];
	ld.const.u64 	%rd38, [k_sha512+288];
	ld.const.u64 	%rd39, [k_sha512+296];
	ld.const.u64 	%rd40, [k_sha512+304];
	ld.const.u64 	%rd41, [k_sha512+312];
	ld.const.u64 	%rd42, [k_sha512+320];
	ld.const.u64 	%rd43, [k_sha512+328];
	ld.const.u64 	%rd44, [k_sha512+336];
	ld.const.u64 	%rd45, [k_sha512+344];
	ld.const.u64 	%rd46, [k_sha512+352];
	ld.const.u64 	%rd47, [k_sha512+360];
	ld.const.u64 	%rd48, [k_sha512+368];
	ld.const.u64 	%rd49, [k_sha512+376];
	ld.const.u64 	%rd50, [k_sha512+384];
	ld.const.u64 	%rd51, [k_sha512+392];
	ld.const.u64 	%rd52, [k_sha512+400];
	ld.const.u64 	%rd53, [k_sha512+408];
	ld.const.u64 	%rd54, [k_sha512+416];
	ld.const.u64 	%rd55, [k_sha512+424];
	ld.const.u64 	%rd56, [k_sha512+432];
	ld.const.u64 	%rd57, [k_sha512+440];
	ld.const.u64 	%rd58, [k_sha512+448];
	ld.const.u64 	%rd59, [k_sha512+456];
	ld.const.u64 	%rd60, [k_sha512+464];
	ld.const.u64 	%rd61, [k_sha512+472];
	ld.const.u64 	%rd62, [k_sha512+480];
	ld.const.u64 	%rd63, [k_sha512+488];
	ld.const.u64 	%rd64, [k_sha512+496];
	ld.const.u64 	%rd65, [k_sha512+504];
	ld.const.u64 	%rd66, [k_sha512+512];
	ld.const.u64 	%rd67, [k_sha512+520];
	ld.const.u64 	%rd68, [k_sha512+528];
	ld.const.u64 	%rd69, [k_sha512+536];
	ld.const.u64 	%rd70, [k_sha512+544];
	ld.const.u64 	%rd71, [k_sha512+552];
	ld.const.u64 	%rd72, [k_sha512+560];
	ld.const.u64 	%rd73, [k_sha512+568];
	ld.const.u64 	%rd74, [k_sha512+576];
	ld.const.u64 	%rd75, [k_sha512+584];
	ld.const.u64 	%rd76, [k_sha512+592];
	ld.const.u64 	%rd77, [k_sha512+600];
	ld.const.u64 	%rd78, [k_sha512+608];
	ld.const.u64 	%rd79, [k_sha512+616];
	ld.const.u64 	%rd80, [k_sha512+624];
	mov.u32 	%r20209, 0;
	ld.const.u64 	%rd81, [k_sha512+632];
	mov.u32 	%r20210, %r20209;
	bra.uni 	BB4_1;

BB4_295:
	ld.local.v2.u32 	{%r18166, %r18167}, [%rd1+64];
	ld.local.v2.u32 	{%r18170, %r18171}, [%rd1+72];
	ld.local.v2.u32 	{%r18174, %r18175}, [%rd1+80];
	ld.local.v2.u32 	{%r18178, %r18179}, [%rd1+88];
	ld.local.v2.u32 	{%r18182, %r18183}, [%rd1+96];
	ld.local.v2.u32 	{%r18186, %r18187}, [%rd1+104];
	ld.local.v2.u32 	{%r18190, %r18191}, [%rd1+112];
	ld.local.v2.u32 	{%r18194, %r18195}, [%rd1+120];
	ld.local.v2.u32 	{%r18198, %r18199}, [%rd1+128];
	ld.local.v2.u32 	{%r18202, %r18203}, [%rd1+136];
	ld.local.v2.u32 	{%r18206, %r18207}, [%rd1+144];
	ld.local.v2.u32 	{%r18210, %r18211}, [%rd1+152];
	ld.local.v2.u32 	{%r18214, %r18215}, [%rd1+160];
	ld.local.v2.u32 	{%r18218, %r18219}, [%rd1+168];
	ld.local.v2.u32 	{%r18222, %r18223}, [%rd1+176];
	ld.local.v2.u32 	{%r18226, %r18227}, [%rd1+184];
	or.b32  	%r18230, %r18166, %r20311;
	or.b32  	%r18231, %r18167, %r20310;
	mov.b64	%rd2996, {%r18231, %r18230};
	or.b32  	%r18232, %r18170, %r20309;
	or.b32  	%r18233, %r18171, %r20308;
	mov.b64	%rd2997, {%r18233, %r18232};
	or.b32  	%r18234, %r18174, %r2854;
	or.b32  	%r18235, %r18175, %r2856;
	mov.b64	%rd2998, {%r18235, %r18234};
	or.b32  	%r18236, %r18178, %r2858;
	or.b32  	%r18237, %r18179, %r2860;
	mov.b64	%rd2999, {%r18237, %r18236};
	or.b32  	%r18238, %r18182, %r2862;
	or.b32  	%r18239, %r18183, %r2864;
	mov.b64	%rd3000, {%r18239, %r18238};
	or.b32  	%r18240, %r18186, %r2866;
	or.b32  	%r18241, %r18187, %r2868;
	mov.b64	%rd3001, {%r18241, %r18240};
	or.b32  	%r18242, %r18190, %r2870;
	or.b32  	%r18243, %r18191, %r2872;
	mov.b64	%rd3002, {%r18243, %r18242};
	or.b32  	%r18244, %r18194, %r2874;
	or.b32  	%r18245, %r18195, %r2876;
	mov.b64	%rd3003, {%r18245, %r18244};
	or.b32  	%r18246, %r18198, %r2878;
	or.b32  	%r18247, %r18199, %r2880;
	mov.b64	%rd3004, {%r18247, %r18246};
	or.b32  	%r18248, %r18202, %r2882;
	or.b32  	%r18249, %r18203, %r2884;
	mov.b64	%rd3005, {%r18249, %r18248};
	or.b32  	%r18250, %r18206, %r2886;
	or.b32  	%r18251, %r18207, %r2888;
	mov.b64	%rd3006, {%r18251, %r18250};
	or.b32  	%r18252, %r18210, %r2890;
	or.b32  	%r18253, %r18211, %r2892;
	mov.b64	%rd3007, {%r18253, %r18252};
	or.b32  	%r18254, %r18214, %r2894;
	or.b32  	%r18255, %r18215, %r2896;
	mov.b64	%rd3008, {%r18255, %r18254};
	or.b32  	%r18256, %r18218, %r2898;
	or.b32  	%r18257, %r18219, %r2900;
	mov.b64	%rd3009, {%r18257, %r18256};
	or.b32  	%r18258, %r18222, %r2902;
	or.b32  	%r18259, %r18223, %r2904;
	mov.b64	%rd3010, {%r18259, %r18258};
	or.b32  	%r18260, %r18226, %r2906;
	or.b32  	%r18261, %r18227, %r2908;
	mov.b64	%rd3011, {%r18261, %r18260};
	ld.local.u64 	%rd3012, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18262,%dummy}, %rd3012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18263}, %rd3012;
	}
	shf.r.wrap.b32 	%r18264, %r18263, %r18262, 14;
	shf.r.wrap.b32 	%r18265, %r18262, %r18263, 14;
	mov.b64 	%rd3013, {%r18265, %r18264};
	shf.r.wrap.b32 	%r18266, %r18263, %r18262, 18;
	shf.r.wrap.b32 	%r18267, %r18262, %r18263, 18;
	mov.b64 	%rd3014, {%r18267, %r18266};
	xor.b64  	%rd3015, %rd3014, %rd3013;
	shf.l.wrap.b32 	%r18268, %r18262, %r18263, 23;
	shf.l.wrap.b32 	%r18269, %r18263, %r18262, 23;
	mov.b64 	%rd3016, {%r18269, %r18268};
	xor.b64  	%rd3017, %rd3015, %rd3016;
	ld.local.u64 	%rd3018, [%rd1+48];
	ld.local.u64 	%rd3019, [%rd1+40];
	xor.b64  	%rd3020, %rd3018, %rd3019;
	and.b64  	%rd3021, %rd3020, %rd3012;
	xor.b64  	%rd3022, %rd3021, %rd3018;
	ld.local.u64 	%rd3023, [%rd1+56];
	add.s64 	%rd3024, %rd3022, %rd3023;
	add.s64 	%rd3025, %rd3024, %rd2996;
	add.s64 	%rd3026, %rd3025, %rd2;
	add.s64 	%rd3027, %rd3026, %rd3017;
	ld.local.u64 	%rd3028, [%rd1+24];
	add.s64 	%rd3029, %rd3027, %rd3028;
	ld.local.u64 	%rd3030, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18270,%dummy}, %rd3030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18271}, %rd3030;
	}
	shf.r.wrap.b32 	%r18272, %r18271, %r18270, 28;
	shf.r.wrap.b32 	%r18273, %r18270, %r18271, 28;
	mov.b64 	%rd3031, {%r18273, %r18272};
	shf.l.wrap.b32 	%r18274, %r18270, %r18271, 30;
	shf.l.wrap.b32 	%r18275, %r18271, %r18270, 30;
	mov.b64 	%rd3032, {%r18275, %r18274};
	xor.b64  	%rd3033, %rd3032, %rd3031;
	shf.l.wrap.b32 	%r18276, %r18270, %r18271, 25;
	shf.l.wrap.b32 	%r18277, %r18271, %r18270, 25;
	mov.b64 	%rd3034, {%r18277, %r18276};
	xor.b64  	%rd3035, %rd3033, %rd3034;
	ld.local.u64 	%rd3036, [%rd1+16];
	xor.b64  	%rd3037, %rd3036, %rd3030;
	ld.local.u64 	%rd3038, [%rd1+8];
	xor.b64  	%rd3039, %rd3038, %rd3030;
	and.b64  	%rd3040, %rd3037, %rd3039;
	xor.b64  	%rd3041, %rd3040, %rd3030;
	add.s64 	%rd3042, %rd3027, %rd3041;
	add.s64 	%rd3043, %rd3042, %rd3035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18278,%dummy}, %rd3029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18279}, %rd3029;
	}
	shf.r.wrap.b32 	%r18280, %r18279, %r18278, 14;
	shf.r.wrap.b32 	%r18281, %r18278, %r18279, 14;
	mov.b64 	%rd3044, {%r18281, %r18280};
	shf.r.wrap.b32 	%r18282, %r18279, %r18278, 18;
	shf.r.wrap.b32 	%r18283, %r18278, %r18279, 18;
	mov.b64 	%rd3045, {%r18283, %r18282};
	xor.b64  	%rd3046, %rd3045, %rd3044;
	shf.l.wrap.b32 	%r18284, %r18278, %r18279, 23;
	shf.l.wrap.b32 	%r18285, %r18279, %r18278, 23;
	mov.b64 	%rd3047, {%r18285, %r18284};
	xor.b64  	%rd3048, %rd3046, %rd3047;
	xor.b64  	%rd3049, %rd3019, %rd3012;
	and.b64  	%rd3050, %rd3029, %rd3049;
	xor.b64  	%rd3051, %rd3050, %rd3019;
	add.s64 	%rd3052, %rd2997, %rd3018;
	add.s64 	%rd3053, %rd3052, %rd3;
	add.s64 	%rd3054, %rd3053, %rd3051;
	add.s64 	%rd3055, %rd3054, %rd3048;
	add.s64 	%rd3056, %rd3055, %rd3036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18286,%dummy}, %rd3043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18287}, %rd3043;
	}
	shf.r.wrap.b32 	%r18288, %r18287, %r18286, 28;
	shf.r.wrap.b32 	%r18289, %r18286, %r18287, 28;
	mov.b64 	%rd3057, {%r18289, %r18288};
	shf.l.wrap.b32 	%r18290, %r18286, %r18287, 30;
	shf.l.wrap.b32 	%r18291, %r18287, %r18286, 30;
	mov.b64 	%rd3058, {%r18291, %r18290};
	xor.b64  	%rd3059, %rd3058, %rd3057;
	shf.l.wrap.b32 	%r18292, %r18286, %r18287, 25;
	shf.l.wrap.b32 	%r18293, %r18287, %r18286, 25;
	mov.b64 	%rd3060, {%r18293, %r18292};
	xor.b64  	%rd3061, %rd3059, %rd3060;
	xor.b64  	%rd3062, %rd3043, %rd3038;
	xor.b64  	%rd3063, %rd3043, %rd3030;
	and.b64  	%rd3064, %rd3063, %rd3062;
	xor.b64  	%rd3065, %rd3064, %rd3043;
	add.s64 	%rd3066, %rd3055, %rd3065;
	add.s64 	%rd3067, %rd3066, %rd3061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18294,%dummy}, %rd3056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18295}, %rd3056;
	}
	shf.r.wrap.b32 	%r18296, %r18295, %r18294, 14;
	shf.r.wrap.b32 	%r18297, %r18294, %r18295, 14;
	mov.b64 	%rd3068, {%r18297, %r18296};
	shf.r.wrap.b32 	%r18298, %r18295, %r18294, 18;
	shf.r.wrap.b32 	%r18299, %r18294, %r18295, 18;
	mov.b64 	%rd3069, {%r18299, %r18298};
	xor.b64  	%rd3070, %rd3069, %rd3068;
	shf.l.wrap.b32 	%r18300, %r18294, %r18295, 23;
	shf.l.wrap.b32 	%r18301, %r18295, %r18294, 23;
	mov.b64 	%rd3071, {%r18301, %r18300};
	xor.b64  	%rd3072, %rd3070, %rd3071;
	xor.b64  	%rd3073, %rd3029, %rd3012;
	and.b64  	%rd3074, %rd3056, %rd3073;
	xor.b64  	%rd3075, %rd3074, %rd3012;
	add.s64 	%rd3076, %rd2998, %rd3019;
	add.s64 	%rd3077, %rd3076, %rd4;
	add.s64 	%rd3078, %rd3077, %rd3075;
	add.s64 	%rd3079, %rd3078, %rd3072;
	add.s64 	%rd3080, %rd3079, %rd3038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18302,%dummy}, %rd3067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18303}, %rd3067;
	}
	shf.r.wrap.b32 	%r18304, %r18303, %r18302, 28;
	shf.r.wrap.b32 	%r18305, %r18302, %r18303, 28;
	mov.b64 	%rd3081, {%r18305, %r18304};
	shf.l.wrap.b32 	%r18306, %r18302, %r18303, 30;
	shf.l.wrap.b32 	%r18307, %r18303, %r18302, 30;
	mov.b64 	%rd3082, {%r18307, %r18306};
	xor.b64  	%rd3083, %rd3082, %rd3081;
	shf.l.wrap.b32 	%r18308, %r18302, %r18303, 25;
	shf.l.wrap.b32 	%r18309, %r18303, %r18302, 25;
	mov.b64 	%rd3084, {%r18309, %r18308};
	xor.b64  	%rd3085, %rd3083, %rd3084;
	xor.b64  	%rd3086, %rd3067, %rd3030;
	xor.b64  	%rd3087, %rd3067, %rd3043;
	and.b64  	%rd3088, %rd3087, %rd3086;
	xor.b64  	%rd3089, %rd3088, %rd3067;
	add.s64 	%rd3090, %rd3079, %rd3089;
	add.s64 	%rd3091, %rd3090, %rd3085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18310,%dummy}, %rd3080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18311}, %rd3080;
	}
	shf.r.wrap.b32 	%r18312, %r18311, %r18310, 14;
	shf.r.wrap.b32 	%r18313, %r18310, %r18311, 14;
	mov.b64 	%rd3092, {%r18313, %r18312};
	shf.r.wrap.b32 	%r18314, %r18311, %r18310, 18;
	shf.r.wrap.b32 	%r18315, %r18310, %r18311, 18;
	mov.b64 	%rd3093, {%r18315, %r18314};
	xor.b64  	%rd3094, %rd3093, %rd3092;
	shf.l.wrap.b32 	%r18316, %r18310, %r18311, 23;
	shf.l.wrap.b32 	%r18317, %r18311, %r18310, 23;
	mov.b64 	%rd3095, {%r18317, %r18316};
	xor.b64  	%rd3096, %rd3094, %rd3095;
	xor.b64  	%rd3097, %rd3056, %rd3029;
	and.b64  	%rd3098, %rd3080, %rd3097;
	xor.b64  	%rd3099, %rd3098, %rd3029;
	add.s64 	%rd3100, %rd2999, %rd3012;
	add.s64 	%rd3101, %rd3100, %rd5;
	add.s64 	%rd3102, %rd3101, %rd3099;
	add.s64 	%rd3103, %rd3102, %rd3096;
	add.s64 	%rd3104, %rd3103, %rd3030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18318,%dummy}, %rd3091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18319}, %rd3091;
	}
	shf.r.wrap.b32 	%r18320, %r18319, %r18318, 28;
	shf.r.wrap.b32 	%r18321, %r18318, %r18319, 28;
	mov.b64 	%rd3105, {%r18321, %r18320};
	shf.l.wrap.b32 	%r18322, %r18318, %r18319, 30;
	shf.l.wrap.b32 	%r18323, %r18319, %r18318, 30;
	mov.b64 	%rd3106, {%r18323, %r18322};
	xor.b64  	%rd3107, %rd3106, %rd3105;
	shf.l.wrap.b32 	%r18324, %r18318, %r18319, 25;
	shf.l.wrap.b32 	%r18325, %r18319, %r18318, 25;
	mov.b64 	%rd3108, {%r18325, %r18324};
	xor.b64  	%rd3109, %rd3107, %rd3108;
	xor.b64  	%rd3110, %rd3091, %rd3043;
	xor.b64  	%rd3111, %rd3091, %rd3067;
	and.b64  	%rd3112, %rd3111, %rd3110;
	xor.b64  	%rd3113, %rd3112, %rd3091;
	add.s64 	%rd3114, %rd3103, %rd3113;
	add.s64 	%rd3115, %rd3114, %rd3109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18326,%dummy}, %rd3104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18327}, %rd3104;
	}
	shf.r.wrap.b32 	%r18328, %r18327, %r18326, 14;
	shf.r.wrap.b32 	%r18329, %r18326, %r18327, 14;
	mov.b64 	%rd3116, {%r18329, %r18328};
	shf.r.wrap.b32 	%r18330, %r18327, %r18326, 18;
	shf.r.wrap.b32 	%r18331, %r18326, %r18327, 18;
	mov.b64 	%rd3117, {%r18331, %r18330};
	xor.b64  	%rd3118, %rd3117, %rd3116;
	shf.l.wrap.b32 	%r18332, %r18326, %r18327, 23;
	shf.l.wrap.b32 	%r18333, %r18327, %r18326, 23;
	mov.b64 	%rd3119, {%r18333, %r18332};
	xor.b64  	%rd3120, %rd3118, %rd3119;
	xor.b64  	%rd3121, %rd3080, %rd3056;
	and.b64  	%rd3122, %rd3104, %rd3121;
	xor.b64  	%rd3123, %rd3122, %rd3056;
	add.s64 	%rd3124, %rd3029, %rd3000;
	add.s64 	%rd3125, %rd3124, %rd6;
	add.s64 	%rd3126, %rd3125, %rd3123;
	add.s64 	%rd3127, %rd3126, %rd3120;
	add.s64 	%rd3128, %rd3127, %rd3043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18334,%dummy}, %rd3115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18335}, %rd3115;
	}
	shf.r.wrap.b32 	%r18336, %r18335, %r18334, 28;
	shf.r.wrap.b32 	%r18337, %r18334, %r18335, 28;
	mov.b64 	%rd3129, {%r18337, %r18336};
	shf.l.wrap.b32 	%r18338, %r18334, %r18335, 30;
	shf.l.wrap.b32 	%r18339, %r18335, %r18334, 30;
	mov.b64 	%rd3130, {%r18339, %r18338};
	xor.b64  	%rd3131, %rd3130, %rd3129;
	shf.l.wrap.b32 	%r18340, %r18334, %r18335, 25;
	shf.l.wrap.b32 	%r18341, %r18335, %r18334, 25;
	mov.b64 	%rd3132, {%r18341, %r18340};
	xor.b64  	%rd3133, %rd3131, %rd3132;
	xor.b64  	%rd3134, %rd3115, %rd3067;
	xor.b64  	%rd3135, %rd3115, %rd3091;
	and.b64  	%rd3136, %rd3135, %rd3134;
	xor.b64  	%rd3137, %rd3136, %rd3115;
	add.s64 	%rd3138, %rd3127, %rd3137;
	add.s64 	%rd3139, %rd3138, %rd3133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18342,%dummy}, %rd3128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18343}, %rd3128;
	}
	shf.r.wrap.b32 	%r18344, %r18343, %r18342, 14;
	shf.r.wrap.b32 	%r18345, %r18342, %r18343, 14;
	mov.b64 	%rd3140, {%r18345, %r18344};
	shf.r.wrap.b32 	%r18346, %r18343, %r18342, 18;
	shf.r.wrap.b32 	%r18347, %r18342, %r18343, 18;
	mov.b64 	%rd3141, {%r18347, %r18346};
	xor.b64  	%rd3142, %rd3141, %rd3140;
	shf.l.wrap.b32 	%r18348, %r18342, %r18343, 23;
	shf.l.wrap.b32 	%r18349, %r18343, %r18342, 23;
	mov.b64 	%rd3143, {%r18349, %r18348};
	xor.b64  	%rd3144, %rd3142, %rd3143;
	xor.b64  	%rd3145, %rd3104, %rd3080;
	and.b64  	%rd3146, %rd3128, %rd3145;
	xor.b64  	%rd3147, %rd3146, %rd3080;
	add.s64 	%rd3148, %rd3056, %rd3001;
	add.s64 	%rd3149, %rd3148, %rd7;
	add.s64 	%rd3150, %rd3149, %rd3147;
	add.s64 	%rd3151, %rd3150, %rd3144;
	add.s64 	%rd3152, %rd3151, %rd3067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18350,%dummy}, %rd3139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18351}, %rd3139;
	}
	shf.r.wrap.b32 	%r18352, %r18351, %r18350, 28;
	shf.r.wrap.b32 	%r18353, %r18350, %r18351, 28;
	mov.b64 	%rd3153, {%r18353, %r18352};
	shf.l.wrap.b32 	%r18354, %r18350, %r18351, 30;
	shf.l.wrap.b32 	%r18355, %r18351, %r18350, 30;
	mov.b64 	%rd3154, {%r18355, %r18354};
	xor.b64  	%rd3155, %rd3154, %rd3153;
	shf.l.wrap.b32 	%r18356, %r18350, %r18351, 25;
	shf.l.wrap.b32 	%r18357, %r18351, %r18350, 25;
	mov.b64 	%rd3156, {%r18357, %r18356};
	xor.b64  	%rd3157, %rd3155, %rd3156;
	xor.b64  	%rd3158, %rd3139, %rd3091;
	xor.b64  	%rd3159, %rd3139, %rd3115;
	and.b64  	%rd3160, %rd3159, %rd3158;
	xor.b64  	%rd3161, %rd3160, %rd3139;
	add.s64 	%rd3162, %rd3151, %rd3161;
	add.s64 	%rd3163, %rd3162, %rd3157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18358,%dummy}, %rd3152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18359}, %rd3152;
	}
	shf.r.wrap.b32 	%r18360, %r18359, %r18358, 14;
	shf.r.wrap.b32 	%r18361, %r18358, %r18359, 14;
	mov.b64 	%rd3164, {%r18361, %r18360};
	shf.r.wrap.b32 	%r18362, %r18359, %r18358, 18;
	shf.r.wrap.b32 	%r18363, %r18358, %r18359, 18;
	mov.b64 	%rd3165, {%r18363, %r18362};
	xor.b64  	%rd3166, %rd3165, %rd3164;
	shf.l.wrap.b32 	%r18364, %r18358, %r18359, 23;
	shf.l.wrap.b32 	%r18365, %r18359, %r18358, 23;
	mov.b64 	%rd3167, {%r18365, %r18364};
	xor.b64  	%rd3168, %rd3166, %rd3167;
	xor.b64  	%rd3169, %rd3128, %rd3104;
	and.b64  	%rd3170, %rd3152, %rd3169;
	xor.b64  	%rd3171, %rd3170, %rd3104;
	add.s64 	%rd3172, %rd3080, %rd3002;
	add.s64 	%rd3173, %rd3172, %rd8;
	add.s64 	%rd3174, %rd3173, %rd3171;
	add.s64 	%rd3175, %rd3174, %rd3168;
	add.s64 	%rd3176, %rd3175, %rd3091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18366,%dummy}, %rd3163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18367}, %rd3163;
	}
	shf.r.wrap.b32 	%r18368, %r18367, %r18366, 28;
	shf.r.wrap.b32 	%r18369, %r18366, %r18367, 28;
	mov.b64 	%rd3177, {%r18369, %r18368};
	shf.l.wrap.b32 	%r18370, %r18366, %r18367, 30;
	shf.l.wrap.b32 	%r18371, %r18367, %r18366, 30;
	mov.b64 	%rd3178, {%r18371, %r18370};
	xor.b64  	%rd3179, %rd3178, %rd3177;
	shf.l.wrap.b32 	%r18372, %r18366, %r18367, 25;
	shf.l.wrap.b32 	%r18373, %r18367, %r18366, 25;
	mov.b64 	%rd3180, {%r18373, %r18372};
	xor.b64  	%rd3181, %rd3179, %rd3180;
	xor.b64  	%rd3182, %rd3163, %rd3115;
	xor.b64  	%rd3183, %rd3163, %rd3139;
	and.b64  	%rd3184, %rd3183, %rd3182;
	xor.b64  	%rd3185, %rd3184, %rd3163;
	add.s64 	%rd3186, %rd3175, %rd3185;
	add.s64 	%rd3187, %rd3186, %rd3181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18374,%dummy}, %rd3176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18375}, %rd3176;
	}
	shf.r.wrap.b32 	%r18376, %r18375, %r18374, 14;
	shf.r.wrap.b32 	%r18377, %r18374, %r18375, 14;
	mov.b64 	%rd3188, {%r18377, %r18376};
	shf.r.wrap.b32 	%r18378, %r18375, %r18374, 18;
	shf.r.wrap.b32 	%r18379, %r18374, %r18375, 18;
	mov.b64 	%rd3189, {%r18379, %r18378};
	xor.b64  	%rd3190, %rd3189, %rd3188;
	shf.l.wrap.b32 	%r18380, %r18374, %r18375, 23;
	shf.l.wrap.b32 	%r18381, %r18375, %r18374, 23;
	mov.b64 	%rd3191, {%r18381, %r18380};
	xor.b64  	%rd3192, %rd3190, %rd3191;
	xor.b64  	%rd3193, %rd3152, %rd3128;
	and.b64  	%rd3194, %rd3176, %rd3193;
	xor.b64  	%rd3195, %rd3194, %rd3128;
	add.s64 	%rd3196, %rd3104, %rd3003;
	add.s64 	%rd3197, %rd3196, %rd9;
	add.s64 	%rd3198, %rd3197, %rd3195;
	add.s64 	%rd3199, %rd3198, %rd3192;
	add.s64 	%rd3200, %rd3199, %rd3115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18382,%dummy}, %rd3187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18383}, %rd3187;
	}
	shf.r.wrap.b32 	%r18384, %r18383, %r18382, 28;
	shf.r.wrap.b32 	%r18385, %r18382, %r18383, 28;
	mov.b64 	%rd3201, {%r18385, %r18384};
	shf.l.wrap.b32 	%r18386, %r18382, %r18383, 30;
	shf.l.wrap.b32 	%r18387, %r18383, %r18382, 30;
	mov.b64 	%rd3202, {%r18387, %r18386};
	xor.b64  	%rd3203, %rd3202, %rd3201;
	shf.l.wrap.b32 	%r18388, %r18382, %r18383, 25;
	shf.l.wrap.b32 	%r18389, %r18383, %r18382, 25;
	mov.b64 	%rd3204, {%r18389, %r18388};
	xor.b64  	%rd3205, %rd3203, %rd3204;
	xor.b64  	%rd3206, %rd3187, %rd3139;
	xor.b64  	%rd3207, %rd3187, %rd3163;
	and.b64  	%rd3208, %rd3207, %rd3206;
	xor.b64  	%rd3209, %rd3208, %rd3187;
	add.s64 	%rd3210, %rd3199, %rd3209;
	add.s64 	%rd3211, %rd3210, %rd3205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18390,%dummy}, %rd3200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18391}, %rd3200;
	}
	shf.r.wrap.b32 	%r18392, %r18391, %r18390, 14;
	shf.r.wrap.b32 	%r18393, %r18390, %r18391, 14;
	mov.b64 	%rd3212, {%r18393, %r18392};
	shf.r.wrap.b32 	%r18394, %r18391, %r18390, 18;
	shf.r.wrap.b32 	%r18395, %r18390, %r18391, 18;
	mov.b64 	%rd3213, {%r18395, %r18394};
	xor.b64  	%rd3214, %rd3213, %rd3212;
	shf.l.wrap.b32 	%r18396, %r18390, %r18391, 23;
	shf.l.wrap.b32 	%r18397, %r18391, %r18390, 23;
	mov.b64 	%rd3215, {%r18397, %r18396};
	xor.b64  	%rd3216, %rd3214, %rd3215;
	xor.b64  	%rd3217, %rd3176, %rd3152;
	and.b64  	%rd3218, %rd3200, %rd3217;
	xor.b64  	%rd3219, %rd3218, %rd3152;
	add.s64 	%rd3220, %rd3128, %rd3004;
	add.s64 	%rd3221, %rd3220, %rd10;
	add.s64 	%rd3222, %rd3221, %rd3219;
	add.s64 	%rd3223, %rd3222, %rd3216;
	add.s64 	%rd3224, %rd3223, %rd3139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18398,%dummy}, %rd3211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18399}, %rd3211;
	}
	shf.r.wrap.b32 	%r18400, %r18399, %r18398, 28;
	shf.r.wrap.b32 	%r18401, %r18398, %r18399, 28;
	mov.b64 	%rd3225, {%r18401, %r18400};
	shf.l.wrap.b32 	%r18402, %r18398, %r18399, 30;
	shf.l.wrap.b32 	%r18403, %r18399, %r18398, 30;
	mov.b64 	%rd3226, {%r18403, %r18402};
	xor.b64  	%rd3227, %rd3226, %rd3225;
	shf.l.wrap.b32 	%r18404, %r18398, %r18399, 25;
	shf.l.wrap.b32 	%r18405, %r18399, %r18398, 25;
	mov.b64 	%rd3228, {%r18405, %r18404};
	xor.b64  	%rd3229, %rd3227, %rd3228;
	xor.b64  	%rd3230, %rd3211, %rd3163;
	xor.b64  	%rd3231, %rd3211, %rd3187;
	and.b64  	%rd3232, %rd3231, %rd3230;
	xor.b64  	%rd3233, %rd3232, %rd3211;
	add.s64 	%rd3234, %rd3223, %rd3233;
	add.s64 	%rd3235, %rd3234, %rd3229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18406,%dummy}, %rd3224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18407}, %rd3224;
	}
	shf.r.wrap.b32 	%r18408, %r18407, %r18406, 14;
	shf.r.wrap.b32 	%r18409, %r18406, %r18407, 14;
	mov.b64 	%rd3236, {%r18409, %r18408};
	shf.r.wrap.b32 	%r18410, %r18407, %r18406, 18;
	shf.r.wrap.b32 	%r18411, %r18406, %r18407, 18;
	mov.b64 	%rd3237, {%r18411, %r18410};
	xor.b64  	%rd3238, %rd3237, %rd3236;
	shf.l.wrap.b32 	%r18412, %r18406, %r18407, 23;
	shf.l.wrap.b32 	%r18413, %r18407, %r18406, 23;
	mov.b64 	%rd3239, {%r18413, %r18412};
	xor.b64  	%rd3240, %rd3238, %rd3239;
	xor.b64  	%rd3241, %rd3200, %rd3176;
	and.b64  	%rd3242, %rd3224, %rd3241;
	xor.b64  	%rd3243, %rd3242, %rd3176;
	add.s64 	%rd3244, %rd3152, %rd3005;
	add.s64 	%rd3245, %rd3244, %rd11;
	add.s64 	%rd3246, %rd3245, %rd3243;
	add.s64 	%rd3247, %rd3246, %rd3240;
	add.s64 	%rd3248, %rd3247, %rd3163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18414,%dummy}, %rd3235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18415}, %rd3235;
	}
	shf.r.wrap.b32 	%r18416, %r18415, %r18414, 28;
	shf.r.wrap.b32 	%r18417, %r18414, %r18415, 28;
	mov.b64 	%rd3249, {%r18417, %r18416};
	shf.l.wrap.b32 	%r18418, %r18414, %r18415, 30;
	shf.l.wrap.b32 	%r18419, %r18415, %r18414, 30;
	mov.b64 	%rd3250, {%r18419, %r18418};
	xor.b64  	%rd3251, %rd3250, %rd3249;
	shf.l.wrap.b32 	%r18420, %r18414, %r18415, 25;
	shf.l.wrap.b32 	%r18421, %r18415, %r18414, 25;
	mov.b64 	%rd3252, {%r18421, %r18420};
	xor.b64  	%rd3253, %rd3251, %rd3252;
	xor.b64  	%rd3254, %rd3235, %rd3187;
	xor.b64  	%rd3255, %rd3235, %rd3211;
	and.b64  	%rd3256, %rd3255, %rd3254;
	xor.b64  	%rd3257, %rd3256, %rd3235;
	add.s64 	%rd3258, %rd3247, %rd3257;
	add.s64 	%rd3259, %rd3258, %rd3253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18422,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18423}, %rd3248;
	}
	shf.r.wrap.b32 	%r18424, %r18423, %r18422, 14;
	shf.r.wrap.b32 	%r18425, %r18422, %r18423, 14;
	mov.b64 	%rd3260, {%r18425, %r18424};
	shf.r.wrap.b32 	%r18426, %r18423, %r18422, 18;
	shf.r.wrap.b32 	%r18427, %r18422, %r18423, 18;
	mov.b64 	%rd3261, {%r18427, %r18426};
	xor.b64  	%rd3262, %rd3261, %rd3260;
	shf.l.wrap.b32 	%r18428, %r18422, %r18423, 23;
	shf.l.wrap.b32 	%r18429, %r18423, %r18422, 23;
	mov.b64 	%rd3263, {%r18429, %r18428};
	xor.b64  	%rd3264, %rd3262, %rd3263;
	xor.b64  	%rd3265, %rd3224, %rd3200;
	and.b64  	%rd3266, %rd3248, %rd3265;
	xor.b64  	%rd3267, %rd3266, %rd3200;
	add.s64 	%rd3268, %rd3176, %rd3006;
	add.s64 	%rd3269, %rd3268, %rd12;
	add.s64 	%rd3270, %rd3269, %rd3267;
	add.s64 	%rd3271, %rd3270, %rd3264;
	add.s64 	%rd3272, %rd3271, %rd3187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18430,%dummy}, %rd3259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18431}, %rd3259;
	}
	shf.r.wrap.b32 	%r18432, %r18431, %r18430, 28;
	shf.r.wrap.b32 	%r18433, %r18430, %r18431, 28;
	mov.b64 	%rd3273, {%r18433, %r18432};
	shf.l.wrap.b32 	%r18434, %r18430, %r18431, 30;
	shf.l.wrap.b32 	%r18435, %r18431, %r18430, 30;
	mov.b64 	%rd3274, {%r18435, %r18434};
	xor.b64  	%rd3275, %rd3274, %rd3273;
	shf.l.wrap.b32 	%r18436, %r18430, %r18431, 25;
	shf.l.wrap.b32 	%r18437, %r18431, %r18430, 25;
	mov.b64 	%rd3276, {%r18437, %r18436};
	xor.b64  	%rd3277, %rd3275, %rd3276;
	xor.b64  	%rd3278, %rd3259, %rd3211;
	xor.b64  	%rd3279, %rd3259, %rd3235;
	and.b64  	%rd3280, %rd3279, %rd3278;
	xor.b64  	%rd3281, %rd3280, %rd3259;
	add.s64 	%rd3282, %rd3271, %rd3281;
	add.s64 	%rd3283, %rd3282, %rd3277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18438,%dummy}, %rd3272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18439}, %rd3272;
	}
	shf.r.wrap.b32 	%r18440, %r18439, %r18438, 14;
	shf.r.wrap.b32 	%r18441, %r18438, %r18439, 14;
	mov.b64 	%rd3284, {%r18441, %r18440};
	shf.r.wrap.b32 	%r18442, %r18439, %r18438, 18;
	shf.r.wrap.b32 	%r18443, %r18438, %r18439, 18;
	mov.b64 	%rd3285, {%r18443, %r18442};
	xor.b64  	%rd3286, %rd3285, %rd3284;
	shf.l.wrap.b32 	%r18444, %r18438, %r18439, 23;
	shf.l.wrap.b32 	%r18445, %r18439, %r18438, 23;
	mov.b64 	%rd3287, {%r18445, %r18444};
	xor.b64  	%rd3288, %rd3286, %rd3287;
	xor.b64  	%rd3289, %rd3248, %rd3224;
	and.b64  	%rd3290, %rd3272, %rd3289;
	xor.b64  	%rd3291, %rd3290, %rd3224;
	add.s64 	%rd3292, %rd3200, %rd3007;
	add.s64 	%rd3293, %rd3292, %rd13;
	add.s64 	%rd3294, %rd3293, %rd3291;
	add.s64 	%rd3295, %rd3294, %rd3288;
	add.s64 	%rd3296, %rd3295, %rd3211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18446,%dummy}, %rd3283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18447}, %rd3283;
	}
	shf.r.wrap.b32 	%r18448, %r18447, %r18446, 28;
	shf.r.wrap.b32 	%r18449, %r18446, %r18447, 28;
	mov.b64 	%rd3297, {%r18449, %r18448};
	shf.l.wrap.b32 	%r18450, %r18446, %r18447, 30;
	shf.l.wrap.b32 	%r18451, %r18447, %r18446, 30;
	mov.b64 	%rd3298, {%r18451, %r18450};
	xor.b64  	%rd3299, %rd3298, %rd3297;
	shf.l.wrap.b32 	%r18452, %r18446, %r18447, 25;
	shf.l.wrap.b32 	%r18453, %r18447, %r18446, 25;
	mov.b64 	%rd3300, {%r18453, %r18452};
	xor.b64  	%rd3301, %rd3299, %rd3300;
	xor.b64  	%rd3302, %rd3283, %rd3235;
	xor.b64  	%rd3303, %rd3283, %rd3259;
	and.b64  	%rd3304, %rd3303, %rd3302;
	xor.b64  	%rd3305, %rd3304, %rd3283;
	add.s64 	%rd3306, %rd3295, %rd3305;
	add.s64 	%rd3307, %rd3306, %rd3301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18454,%dummy}, %rd3296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18455}, %rd3296;
	}
	shf.r.wrap.b32 	%r18456, %r18455, %r18454, 14;
	shf.r.wrap.b32 	%r18457, %r18454, %r18455, 14;
	mov.b64 	%rd3308, {%r18457, %r18456};
	shf.r.wrap.b32 	%r18458, %r18455, %r18454, 18;
	shf.r.wrap.b32 	%r18459, %r18454, %r18455, 18;
	mov.b64 	%rd3309, {%r18459, %r18458};
	xor.b64  	%rd3310, %rd3309, %rd3308;
	shf.l.wrap.b32 	%r18460, %r18454, %r18455, 23;
	shf.l.wrap.b32 	%r18461, %r18455, %r18454, 23;
	mov.b64 	%rd3311, {%r18461, %r18460};
	xor.b64  	%rd3312, %rd3310, %rd3311;
	xor.b64  	%rd3313, %rd3272, %rd3248;
	and.b64  	%rd3314, %rd3296, %rd3313;
	xor.b64  	%rd3315, %rd3314, %rd3248;
	add.s64 	%rd3316, %rd3224, %rd3008;
	add.s64 	%rd3317, %rd3316, %rd14;
	add.s64 	%rd3318, %rd3317, %rd3315;
	add.s64 	%rd3319, %rd3318, %rd3312;
	add.s64 	%rd3320, %rd3319, %rd3235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18462,%dummy}, %rd3307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18463}, %rd3307;
	}
	shf.r.wrap.b32 	%r18464, %r18463, %r18462, 28;
	shf.r.wrap.b32 	%r18465, %r18462, %r18463, 28;
	mov.b64 	%rd3321, {%r18465, %r18464};
	shf.l.wrap.b32 	%r18466, %r18462, %r18463, 30;
	shf.l.wrap.b32 	%r18467, %r18463, %r18462, 30;
	mov.b64 	%rd3322, {%r18467, %r18466};
	xor.b64  	%rd3323, %rd3322, %rd3321;
	shf.l.wrap.b32 	%r18468, %r18462, %r18463, 25;
	shf.l.wrap.b32 	%r18469, %r18463, %r18462, 25;
	mov.b64 	%rd3324, {%r18469, %r18468};
	xor.b64  	%rd3325, %rd3323, %rd3324;
	xor.b64  	%rd3326, %rd3307, %rd3259;
	xor.b64  	%rd3327, %rd3307, %rd3283;
	and.b64  	%rd3328, %rd3327, %rd3326;
	xor.b64  	%rd3329, %rd3328, %rd3307;
	add.s64 	%rd3330, %rd3319, %rd3329;
	add.s64 	%rd3331, %rd3330, %rd3325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18470,%dummy}, %rd3320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18471}, %rd3320;
	}
	shf.r.wrap.b32 	%r18472, %r18471, %r18470, 14;
	shf.r.wrap.b32 	%r18473, %r18470, %r18471, 14;
	mov.b64 	%rd3332, {%r18473, %r18472};
	shf.r.wrap.b32 	%r18474, %r18471, %r18470, 18;
	shf.r.wrap.b32 	%r18475, %r18470, %r18471, 18;
	mov.b64 	%rd3333, {%r18475, %r18474};
	xor.b64  	%rd3334, %rd3333, %rd3332;
	shf.l.wrap.b32 	%r18476, %r18470, %r18471, 23;
	shf.l.wrap.b32 	%r18477, %r18471, %r18470, 23;
	mov.b64 	%rd3335, {%r18477, %r18476};
	xor.b64  	%rd3336, %rd3334, %rd3335;
	xor.b64  	%rd3337, %rd3296, %rd3272;
	and.b64  	%rd3338, %rd3320, %rd3337;
	xor.b64  	%rd3339, %rd3338, %rd3272;
	add.s64 	%rd3340, %rd3248, %rd3009;
	add.s64 	%rd3341, %rd3340, %rd15;
	add.s64 	%rd3342, %rd3341, %rd3339;
	add.s64 	%rd3343, %rd3342, %rd3336;
	add.s64 	%rd3344, %rd3343, %rd3259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18478,%dummy}, %rd3331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18479}, %rd3331;
	}
	shf.r.wrap.b32 	%r18480, %r18479, %r18478, 28;
	shf.r.wrap.b32 	%r18481, %r18478, %r18479, 28;
	mov.b64 	%rd3345, {%r18481, %r18480};
	shf.l.wrap.b32 	%r18482, %r18478, %r18479, 30;
	shf.l.wrap.b32 	%r18483, %r18479, %r18478, 30;
	mov.b64 	%rd3346, {%r18483, %r18482};
	xor.b64  	%rd3347, %rd3346, %rd3345;
	shf.l.wrap.b32 	%r18484, %r18478, %r18479, 25;
	shf.l.wrap.b32 	%r18485, %r18479, %r18478, 25;
	mov.b64 	%rd3348, {%r18485, %r18484};
	xor.b64  	%rd3349, %rd3347, %rd3348;
	xor.b64  	%rd3350, %rd3331, %rd3283;
	xor.b64  	%rd3351, %rd3331, %rd3307;
	and.b64  	%rd3352, %rd3351, %rd3350;
	xor.b64  	%rd3353, %rd3352, %rd3331;
	add.s64 	%rd3354, %rd3343, %rd3353;
	add.s64 	%rd3355, %rd3354, %rd3349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18486,%dummy}, %rd3344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18487}, %rd3344;
	}
	shf.r.wrap.b32 	%r18488, %r18487, %r18486, 14;
	shf.r.wrap.b32 	%r18489, %r18486, %r18487, 14;
	mov.b64 	%rd3356, {%r18489, %r18488};
	shf.r.wrap.b32 	%r18490, %r18487, %r18486, 18;
	shf.r.wrap.b32 	%r18491, %r18486, %r18487, 18;
	mov.b64 	%rd3357, {%r18491, %r18490};
	xor.b64  	%rd3358, %rd3357, %rd3356;
	shf.l.wrap.b32 	%r18492, %r18486, %r18487, 23;
	shf.l.wrap.b32 	%r18493, %r18487, %r18486, 23;
	mov.b64 	%rd3359, {%r18493, %r18492};
	xor.b64  	%rd3360, %rd3358, %rd3359;
	xor.b64  	%rd3361, %rd3320, %rd3296;
	and.b64  	%rd3362, %rd3344, %rd3361;
	xor.b64  	%rd3363, %rd3362, %rd3296;
	add.s64 	%rd3364, %rd3272, %rd3010;
	add.s64 	%rd3365, %rd3364, %rd16;
	add.s64 	%rd3366, %rd3365, %rd3363;
	add.s64 	%rd3367, %rd3366, %rd3360;
	add.s64 	%rd3368, %rd3367, %rd3283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18494,%dummy}, %rd3355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18495}, %rd3355;
	}
	shf.r.wrap.b32 	%r18496, %r18495, %r18494, 28;
	shf.r.wrap.b32 	%r18497, %r18494, %r18495, 28;
	mov.b64 	%rd3369, {%r18497, %r18496};
	shf.l.wrap.b32 	%r18498, %r18494, %r18495, 30;
	shf.l.wrap.b32 	%r18499, %r18495, %r18494, 30;
	mov.b64 	%rd3370, {%r18499, %r18498};
	xor.b64  	%rd3371, %rd3370, %rd3369;
	shf.l.wrap.b32 	%r18500, %r18494, %r18495, 25;
	shf.l.wrap.b32 	%r18501, %r18495, %r18494, 25;
	mov.b64 	%rd3372, {%r18501, %r18500};
	xor.b64  	%rd3373, %rd3371, %rd3372;
	xor.b64  	%rd3374, %rd3355, %rd3307;
	xor.b64  	%rd3375, %rd3355, %rd3331;
	and.b64  	%rd3376, %rd3375, %rd3374;
	xor.b64  	%rd3377, %rd3376, %rd3355;
	add.s64 	%rd3378, %rd3367, %rd3377;
	add.s64 	%rd3379, %rd3378, %rd3373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18502,%dummy}, %rd3368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18503}, %rd3368;
	}
	shf.r.wrap.b32 	%r18504, %r18503, %r18502, 14;
	shf.r.wrap.b32 	%r18505, %r18502, %r18503, 14;
	mov.b64 	%rd3380, {%r18505, %r18504};
	shf.r.wrap.b32 	%r18506, %r18503, %r18502, 18;
	shf.r.wrap.b32 	%r18507, %r18502, %r18503, 18;
	mov.b64 	%rd3381, {%r18507, %r18506};
	xor.b64  	%rd3382, %rd3381, %rd3380;
	shf.l.wrap.b32 	%r18508, %r18502, %r18503, 23;
	shf.l.wrap.b32 	%r18509, %r18503, %r18502, 23;
	mov.b64 	%rd3383, {%r18509, %r18508};
	xor.b64  	%rd3384, %rd3382, %rd3383;
	xor.b64  	%rd3385, %rd3344, %rd3320;
	and.b64  	%rd3386, %rd3368, %rd3385;
	xor.b64  	%rd3387, %rd3386, %rd3320;
	add.s64 	%rd3388, %rd3296, %rd3011;
	add.s64 	%rd3389, %rd3388, %rd17;
	add.s64 	%rd3390, %rd3389, %rd3387;
	add.s64 	%rd3391, %rd3390, %rd3384;
	add.s64 	%rd3392, %rd3391, %rd3307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18510,%dummy}, %rd3379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18511}, %rd3379;
	}
	shf.r.wrap.b32 	%r18512, %r18511, %r18510, 28;
	shf.r.wrap.b32 	%r18513, %r18510, %r18511, 28;
	mov.b64 	%rd3393, {%r18513, %r18512};
	shf.l.wrap.b32 	%r18514, %r18510, %r18511, 30;
	shf.l.wrap.b32 	%r18515, %r18511, %r18510, 30;
	mov.b64 	%rd3394, {%r18515, %r18514};
	xor.b64  	%rd3395, %rd3394, %rd3393;
	shf.l.wrap.b32 	%r18516, %r18510, %r18511, 25;
	shf.l.wrap.b32 	%r18517, %r18511, %r18510, 25;
	mov.b64 	%rd3396, {%r18517, %r18516};
	xor.b64  	%rd3397, %rd3395, %rd3396;
	xor.b64  	%rd3398, %rd3379, %rd3331;
	xor.b64  	%rd3399, %rd3379, %rd3355;
	and.b64  	%rd3400, %rd3399, %rd3398;
	xor.b64  	%rd3401, %rd3400, %rd3379;
	add.s64 	%rd3402, %rd3391, %rd3401;
	add.s64 	%rd3403, %rd3402, %rd3397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18518,%dummy}, %rd3010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18519}, %rd3010;
	}
	shf.r.wrap.b32 	%r18520, %r18519, %r18518, 19;
	shf.r.wrap.b32 	%r18521, %r18518, %r18519, 19;
	mov.b64 	%rd3404, {%r18521, %r18520};
	shf.l.wrap.b32 	%r18522, %r18518, %r18519, 3;
	shf.l.wrap.b32 	%r18523, %r18519, %r18518, 3;
	mov.b64 	%rd3405, {%r18523, %r18522};
	shr.u64 	%rd3406, %rd3010, 6;
	xor.b64  	%rd3407, %rd3404, %rd3406;
	xor.b64  	%rd3408, %rd3407, %rd3405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18524,%dummy}, %rd2997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18525}, %rd2997;
	}
	shf.r.wrap.b32 	%r18526, %r18525, %r18524, 1;
	shf.r.wrap.b32 	%r18527, %r18524, %r18525, 1;
	mov.b64 	%rd3409, {%r18527, %r18526};
	shf.r.wrap.b32 	%r18528, %r18525, %r18524, 8;
	shf.r.wrap.b32 	%r18529, %r18524, %r18525, 8;
	mov.b64 	%rd3410, {%r18529, %r18528};
	shr.u64 	%rd3411, %rd2997, 7;
	xor.b64  	%rd3412, %rd3409, %rd3411;
	xor.b64  	%rd3413, %rd3412, %rd3410;
	add.s64 	%rd3414, %rd3005, %rd2996;
	add.s64 	%rd3415, %rd3414, %rd3408;
	add.s64 	%rd3416, %rd3415, %rd3413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18530,%dummy}, %rd3011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18531}, %rd3011;
	}
	shf.r.wrap.b32 	%r18532, %r18531, %r18530, 19;
	shf.r.wrap.b32 	%r18533, %r18530, %r18531, 19;
	mov.b64 	%rd3417, {%r18533, %r18532};
	shf.l.wrap.b32 	%r18534, %r18530, %r18531, 3;
	shf.l.wrap.b32 	%r18535, %r18531, %r18530, 3;
	mov.b64 	%rd3418, {%r18535, %r18534};
	shr.u64 	%rd3419, %rd3011, 6;
	xor.b64  	%rd3420, %rd3417, %rd3419;
	xor.b64  	%rd3421, %rd3420, %rd3418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18536,%dummy}, %rd2998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18537}, %rd2998;
	}
	shf.r.wrap.b32 	%r18538, %r18537, %r18536, 1;
	shf.r.wrap.b32 	%r18539, %r18536, %r18537, 1;
	mov.b64 	%rd3422, {%r18539, %r18538};
	shf.r.wrap.b32 	%r18540, %r18537, %r18536, 8;
	shf.r.wrap.b32 	%r18541, %r18536, %r18537, 8;
	mov.b64 	%rd3423, {%r18541, %r18540};
	shr.u64 	%rd3424, %rd2998, 7;
	xor.b64  	%rd3425, %rd3422, %rd3424;
	xor.b64  	%rd3426, %rd3425, %rd3423;
	add.s64 	%rd3427, %rd3006, %rd2997;
	add.s64 	%rd3428, %rd3427, %rd3421;
	add.s64 	%rd3429, %rd3428, %rd3426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18542,%dummy}, %rd3416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18543}, %rd3416;
	}
	shf.r.wrap.b32 	%r18544, %r18543, %r18542, 19;
	shf.r.wrap.b32 	%r18545, %r18542, %r18543, 19;
	mov.b64 	%rd3430, {%r18545, %r18544};
	shf.l.wrap.b32 	%r18546, %r18542, %r18543, 3;
	shf.l.wrap.b32 	%r18547, %r18543, %r18542, 3;
	mov.b64 	%rd3431, {%r18547, %r18546};
	shr.u64 	%rd3432, %rd3416, 6;
	xor.b64  	%rd3433, %rd3430, %rd3432;
	xor.b64  	%rd3434, %rd3433, %rd3431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18548,%dummy}, %rd2999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18549}, %rd2999;
	}
	shf.r.wrap.b32 	%r18550, %r18549, %r18548, 1;
	shf.r.wrap.b32 	%r18551, %r18548, %r18549, 1;
	mov.b64 	%rd3435, {%r18551, %r18550};
	shf.r.wrap.b32 	%r18552, %r18549, %r18548, 8;
	shf.r.wrap.b32 	%r18553, %r18548, %r18549, 8;
	mov.b64 	%rd3436, {%r18553, %r18552};
	shr.u64 	%rd3437, %rd2999, 7;
	xor.b64  	%rd3438, %rd3435, %rd3437;
	xor.b64  	%rd3439, %rd3438, %rd3436;
	add.s64 	%rd3440, %rd3007, %rd2998;
	add.s64 	%rd3441, %rd3440, %rd3434;
	add.s64 	%rd3442, %rd3441, %rd3439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18554,%dummy}, %rd3429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18555}, %rd3429;
	}
	shf.r.wrap.b32 	%r18556, %r18555, %r18554, 19;
	shf.r.wrap.b32 	%r18557, %r18554, %r18555, 19;
	mov.b64 	%rd3443, {%r18557, %r18556};
	shf.l.wrap.b32 	%r18558, %r18554, %r18555, 3;
	shf.l.wrap.b32 	%r18559, %r18555, %r18554, 3;
	mov.b64 	%rd3444, {%r18559, %r18558};
	shr.u64 	%rd3445, %rd3429, 6;
	xor.b64  	%rd3446, %rd3443, %rd3445;
	xor.b64  	%rd3447, %rd3446, %rd3444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18560,%dummy}, %rd3000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18561}, %rd3000;
	}
	shf.r.wrap.b32 	%r18562, %r18561, %r18560, 1;
	shf.r.wrap.b32 	%r18563, %r18560, %r18561, 1;
	mov.b64 	%rd3448, {%r18563, %r18562};
	shf.r.wrap.b32 	%r18564, %r18561, %r18560, 8;
	shf.r.wrap.b32 	%r18565, %r18560, %r18561, 8;
	mov.b64 	%rd3449, {%r18565, %r18564};
	shr.u64 	%rd3450, %rd3000, 7;
	xor.b64  	%rd3451, %rd3448, %rd3450;
	xor.b64  	%rd3452, %rd3451, %rd3449;
	add.s64 	%rd3453, %rd3008, %rd2999;
	add.s64 	%rd3454, %rd3453, %rd3447;
	add.s64 	%rd3455, %rd3454, %rd3452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18566,%dummy}, %rd3442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18567}, %rd3442;
	}
	shf.r.wrap.b32 	%r18568, %r18567, %r18566, 19;
	shf.r.wrap.b32 	%r18569, %r18566, %r18567, 19;
	mov.b64 	%rd3456, {%r18569, %r18568};
	shf.l.wrap.b32 	%r18570, %r18566, %r18567, 3;
	shf.l.wrap.b32 	%r18571, %r18567, %r18566, 3;
	mov.b64 	%rd3457, {%r18571, %r18570};
	shr.u64 	%rd3458, %rd3442, 6;
	xor.b64  	%rd3459, %rd3456, %rd3458;
	xor.b64  	%rd3460, %rd3459, %rd3457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18572,%dummy}, %rd3001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18573}, %rd3001;
	}
	shf.r.wrap.b32 	%r18574, %r18573, %r18572, 1;
	shf.r.wrap.b32 	%r18575, %r18572, %r18573, 1;
	mov.b64 	%rd3461, {%r18575, %r18574};
	shf.r.wrap.b32 	%r18576, %r18573, %r18572, 8;
	shf.r.wrap.b32 	%r18577, %r18572, %r18573, 8;
	mov.b64 	%rd3462, {%r18577, %r18576};
	shr.u64 	%rd3463, %rd3001, 7;
	xor.b64  	%rd3464, %rd3461, %rd3463;
	xor.b64  	%rd3465, %rd3464, %rd3462;
	add.s64 	%rd3466, %rd3009, %rd3000;
	add.s64 	%rd3467, %rd3466, %rd3460;
	add.s64 	%rd3468, %rd3467, %rd3465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18578,%dummy}, %rd3455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18579}, %rd3455;
	}
	shf.r.wrap.b32 	%r18580, %r18579, %r18578, 19;
	shf.r.wrap.b32 	%r18581, %r18578, %r18579, 19;
	mov.b64 	%rd3469, {%r18581, %r18580};
	shf.l.wrap.b32 	%r18582, %r18578, %r18579, 3;
	shf.l.wrap.b32 	%r18583, %r18579, %r18578, 3;
	mov.b64 	%rd3470, {%r18583, %r18582};
	shr.u64 	%rd3471, %rd3455, 6;
	xor.b64  	%rd3472, %rd3469, %rd3471;
	xor.b64  	%rd3473, %rd3472, %rd3470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18584,%dummy}, %rd3002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18585}, %rd3002;
	}
	shf.r.wrap.b32 	%r18586, %r18585, %r18584, 1;
	shf.r.wrap.b32 	%r18587, %r18584, %r18585, 1;
	mov.b64 	%rd3474, {%r18587, %r18586};
	shf.r.wrap.b32 	%r18588, %r18585, %r18584, 8;
	shf.r.wrap.b32 	%r18589, %r18584, %r18585, 8;
	mov.b64 	%rd3475, {%r18589, %r18588};
	shr.u64 	%rd3476, %rd3002, 7;
	xor.b64  	%rd3477, %rd3474, %rd3476;
	xor.b64  	%rd3478, %rd3477, %rd3475;
	add.s64 	%rd3479, %rd3010, %rd3001;
	add.s64 	%rd3480, %rd3479, %rd3473;
	add.s64 	%rd3481, %rd3480, %rd3478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18590,%dummy}, %rd3468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18591}, %rd3468;
	}
	shf.r.wrap.b32 	%r18592, %r18591, %r18590, 19;
	shf.r.wrap.b32 	%r18593, %r18590, %r18591, 19;
	mov.b64 	%rd3482, {%r18593, %r18592};
	shf.l.wrap.b32 	%r18594, %r18590, %r18591, 3;
	shf.l.wrap.b32 	%r18595, %r18591, %r18590, 3;
	mov.b64 	%rd3483, {%r18595, %r18594};
	shr.u64 	%rd3484, %rd3468, 6;
	xor.b64  	%rd3485, %rd3482, %rd3484;
	xor.b64  	%rd3486, %rd3485, %rd3483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18596,%dummy}, %rd3003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18597}, %rd3003;
	}
	shf.r.wrap.b32 	%r18598, %r18597, %r18596, 1;
	shf.r.wrap.b32 	%r18599, %r18596, %r18597, 1;
	mov.b64 	%rd3487, {%r18599, %r18598};
	shf.r.wrap.b32 	%r18600, %r18597, %r18596, 8;
	shf.r.wrap.b32 	%r18601, %r18596, %r18597, 8;
	mov.b64 	%rd3488, {%r18601, %r18600};
	shr.u64 	%rd3489, %rd3003, 7;
	xor.b64  	%rd3490, %rd3487, %rd3489;
	xor.b64  	%rd3491, %rd3490, %rd3488;
	add.s64 	%rd3492, %rd3011, %rd3002;
	add.s64 	%rd3493, %rd3492, %rd3486;
	add.s64 	%rd3494, %rd3493, %rd3491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18602,%dummy}, %rd3481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18603}, %rd3481;
	}
	shf.r.wrap.b32 	%r18604, %r18603, %r18602, 19;
	shf.r.wrap.b32 	%r18605, %r18602, %r18603, 19;
	mov.b64 	%rd3495, {%r18605, %r18604};
	shf.l.wrap.b32 	%r18606, %r18602, %r18603, 3;
	shf.l.wrap.b32 	%r18607, %r18603, %r18602, 3;
	mov.b64 	%rd3496, {%r18607, %r18606};
	shr.u64 	%rd3497, %rd3481, 6;
	xor.b64  	%rd3498, %rd3495, %rd3497;
	xor.b64  	%rd3499, %rd3498, %rd3496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18608,%dummy}, %rd3004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18609}, %rd3004;
	}
	shf.r.wrap.b32 	%r18610, %r18609, %r18608, 1;
	shf.r.wrap.b32 	%r18611, %r18608, %r18609, 1;
	mov.b64 	%rd3500, {%r18611, %r18610};
	shf.r.wrap.b32 	%r18612, %r18609, %r18608, 8;
	shf.r.wrap.b32 	%r18613, %r18608, %r18609, 8;
	mov.b64 	%rd3501, {%r18613, %r18612};
	shr.u64 	%rd3502, %rd3004, 7;
	xor.b64  	%rd3503, %rd3500, %rd3502;
	xor.b64  	%rd3504, %rd3503, %rd3501;
	add.s64 	%rd3505, %rd3416, %rd3003;
	add.s64 	%rd3506, %rd3505, %rd3499;
	add.s64 	%rd3507, %rd3506, %rd3504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18614,%dummy}, %rd3494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18615}, %rd3494;
	}
	shf.r.wrap.b32 	%r18616, %r18615, %r18614, 19;
	shf.r.wrap.b32 	%r18617, %r18614, %r18615, 19;
	mov.b64 	%rd3508, {%r18617, %r18616};
	shf.l.wrap.b32 	%r18618, %r18614, %r18615, 3;
	shf.l.wrap.b32 	%r18619, %r18615, %r18614, 3;
	mov.b64 	%rd3509, {%r18619, %r18618};
	shr.u64 	%rd3510, %rd3494, 6;
	xor.b64  	%rd3511, %rd3508, %rd3510;
	xor.b64  	%rd3512, %rd3511, %rd3509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18620,%dummy}, %rd3005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18621}, %rd3005;
	}
	shf.r.wrap.b32 	%r18622, %r18621, %r18620, 1;
	shf.r.wrap.b32 	%r18623, %r18620, %r18621, 1;
	mov.b64 	%rd3513, {%r18623, %r18622};
	shf.r.wrap.b32 	%r18624, %r18621, %r18620, 8;
	shf.r.wrap.b32 	%r18625, %r18620, %r18621, 8;
	mov.b64 	%rd3514, {%r18625, %r18624};
	shr.u64 	%rd3515, %rd3005, 7;
	xor.b64  	%rd3516, %rd3513, %rd3515;
	xor.b64  	%rd3517, %rd3516, %rd3514;
	add.s64 	%rd3518, %rd3429, %rd3004;
	add.s64 	%rd3519, %rd3518, %rd3512;
	add.s64 	%rd3520, %rd3519, %rd3517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18626,%dummy}, %rd3507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18627}, %rd3507;
	}
	shf.r.wrap.b32 	%r18628, %r18627, %r18626, 19;
	shf.r.wrap.b32 	%r18629, %r18626, %r18627, 19;
	mov.b64 	%rd3521, {%r18629, %r18628};
	shf.l.wrap.b32 	%r18630, %r18626, %r18627, 3;
	shf.l.wrap.b32 	%r18631, %r18627, %r18626, 3;
	mov.b64 	%rd3522, {%r18631, %r18630};
	shr.u64 	%rd3523, %rd3507, 6;
	xor.b64  	%rd3524, %rd3521, %rd3523;
	xor.b64  	%rd3525, %rd3524, %rd3522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18632,%dummy}, %rd3006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18633}, %rd3006;
	}
	shf.r.wrap.b32 	%r18634, %r18633, %r18632, 1;
	shf.r.wrap.b32 	%r18635, %r18632, %r18633, 1;
	mov.b64 	%rd3526, {%r18635, %r18634};
	shf.r.wrap.b32 	%r18636, %r18633, %r18632, 8;
	shf.r.wrap.b32 	%r18637, %r18632, %r18633, 8;
	mov.b64 	%rd3527, {%r18637, %r18636};
	shr.u64 	%rd3528, %rd3006, 7;
	xor.b64  	%rd3529, %rd3526, %rd3528;
	xor.b64  	%rd3530, %rd3529, %rd3527;
	add.s64 	%rd3531, %rd3442, %rd3005;
	add.s64 	%rd3532, %rd3531, %rd3525;
	add.s64 	%rd3533, %rd3532, %rd3530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18638,%dummy}, %rd3520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18639}, %rd3520;
	}
	shf.r.wrap.b32 	%r18640, %r18639, %r18638, 19;
	shf.r.wrap.b32 	%r18641, %r18638, %r18639, 19;
	mov.b64 	%rd3534, {%r18641, %r18640};
	shf.l.wrap.b32 	%r18642, %r18638, %r18639, 3;
	shf.l.wrap.b32 	%r18643, %r18639, %r18638, 3;
	mov.b64 	%rd3535, {%r18643, %r18642};
	shr.u64 	%rd3536, %rd3520, 6;
	xor.b64  	%rd3537, %rd3534, %rd3536;
	xor.b64  	%rd3538, %rd3537, %rd3535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18644,%dummy}, %rd3007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18645}, %rd3007;
	}
	shf.r.wrap.b32 	%r18646, %r18645, %r18644, 1;
	shf.r.wrap.b32 	%r18647, %r18644, %r18645, 1;
	mov.b64 	%rd3539, {%r18647, %r18646};
	shf.r.wrap.b32 	%r18648, %r18645, %r18644, 8;
	shf.r.wrap.b32 	%r18649, %r18644, %r18645, 8;
	mov.b64 	%rd3540, {%r18649, %r18648};
	shr.u64 	%rd3541, %rd3007, 7;
	xor.b64  	%rd3542, %rd3539, %rd3541;
	xor.b64  	%rd3543, %rd3542, %rd3540;
	add.s64 	%rd3544, %rd3455, %rd3006;
	add.s64 	%rd3545, %rd3544, %rd3538;
	add.s64 	%rd3546, %rd3545, %rd3543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18650,%dummy}, %rd3533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18651}, %rd3533;
	}
	shf.r.wrap.b32 	%r18652, %r18651, %r18650, 19;
	shf.r.wrap.b32 	%r18653, %r18650, %r18651, 19;
	mov.b64 	%rd3547, {%r18653, %r18652};
	shf.l.wrap.b32 	%r18654, %r18650, %r18651, 3;
	shf.l.wrap.b32 	%r18655, %r18651, %r18650, 3;
	mov.b64 	%rd3548, {%r18655, %r18654};
	shr.u64 	%rd3549, %rd3533, 6;
	xor.b64  	%rd3550, %rd3547, %rd3549;
	xor.b64  	%rd3551, %rd3550, %rd3548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18656,%dummy}, %rd3008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18657}, %rd3008;
	}
	shf.r.wrap.b32 	%r18658, %r18657, %r18656, 1;
	shf.r.wrap.b32 	%r18659, %r18656, %r18657, 1;
	mov.b64 	%rd3552, {%r18659, %r18658};
	shf.r.wrap.b32 	%r18660, %r18657, %r18656, 8;
	shf.r.wrap.b32 	%r18661, %r18656, %r18657, 8;
	mov.b64 	%rd3553, {%r18661, %r18660};
	shr.u64 	%rd3554, %rd3008, 7;
	xor.b64  	%rd3555, %rd3552, %rd3554;
	xor.b64  	%rd3556, %rd3555, %rd3553;
	add.s64 	%rd3557, %rd3468, %rd3007;
	add.s64 	%rd3558, %rd3557, %rd3551;
	add.s64 	%rd3559, %rd3558, %rd3556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18662,%dummy}, %rd3546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18663}, %rd3546;
	}
	shf.r.wrap.b32 	%r18664, %r18663, %r18662, 19;
	shf.r.wrap.b32 	%r18665, %r18662, %r18663, 19;
	mov.b64 	%rd3560, {%r18665, %r18664};
	shf.l.wrap.b32 	%r18666, %r18662, %r18663, 3;
	shf.l.wrap.b32 	%r18667, %r18663, %r18662, 3;
	mov.b64 	%rd3561, {%r18667, %r18666};
	shr.u64 	%rd3562, %rd3546, 6;
	xor.b64  	%rd3563, %rd3560, %rd3562;
	xor.b64  	%rd3564, %rd3563, %rd3561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18668,%dummy}, %rd3009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18669}, %rd3009;
	}
	shf.r.wrap.b32 	%r18670, %r18669, %r18668, 1;
	shf.r.wrap.b32 	%r18671, %r18668, %r18669, 1;
	mov.b64 	%rd3565, {%r18671, %r18670};
	shf.r.wrap.b32 	%r18672, %r18669, %r18668, 8;
	shf.r.wrap.b32 	%r18673, %r18668, %r18669, 8;
	mov.b64 	%rd3566, {%r18673, %r18672};
	shr.u64 	%rd3567, %rd3009, 7;
	xor.b64  	%rd3568, %rd3565, %rd3567;
	xor.b64  	%rd3569, %rd3568, %rd3566;
	add.s64 	%rd3570, %rd3481, %rd3008;
	add.s64 	%rd3571, %rd3570, %rd3564;
	add.s64 	%rd3572, %rd3571, %rd3569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18674,%dummy}, %rd3559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18675}, %rd3559;
	}
	shf.r.wrap.b32 	%r18676, %r18675, %r18674, 19;
	shf.r.wrap.b32 	%r18677, %r18674, %r18675, 19;
	mov.b64 	%rd3573, {%r18677, %r18676};
	shf.l.wrap.b32 	%r18678, %r18674, %r18675, 3;
	shf.l.wrap.b32 	%r18679, %r18675, %r18674, 3;
	mov.b64 	%rd3574, {%r18679, %r18678};
	shr.u64 	%rd3575, %rd3559, 6;
	xor.b64  	%rd3576, %rd3573, %rd3575;
	xor.b64  	%rd3577, %rd3576, %rd3574;
	shf.r.wrap.b32 	%r18680, %r18519, %r18518, 1;
	shf.r.wrap.b32 	%r18681, %r18518, %r18519, 1;
	mov.b64 	%rd3578, {%r18681, %r18680};
	shf.r.wrap.b32 	%r18682, %r18519, %r18518, 8;
	shf.r.wrap.b32 	%r18683, %r18518, %r18519, 8;
	mov.b64 	%rd3579, {%r18683, %r18682};
	shr.u64 	%rd3580, %rd3010, 7;
	xor.b64  	%rd3581, %rd3578, %rd3580;
	xor.b64  	%rd3582, %rd3581, %rd3579;
	add.s64 	%rd3583, %rd3494, %rd3009;
	add.s64 	%rd3584, %rd3583, %rd3577;
	add.s64 	%rd3585, %rd3584, %rd3582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18684,%dummy}, %rd3572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18685}, %rd3572;
	}
	shf.r.wrap.b32 	%r18686, %r18685, %r18684, 19;
	shf.r.wrap.b32 	%r18687, %r18684, %r18685, 19;
	mov.b64 	%rd3586, {%r18687, %r18686};
	shf.l.wrap.b32 	%r18688, %r18684, %r18685, 3;
	shf.l.wrap.b32 	%r18689, %r18685, %r18684, 3;
	mov.b64 	%rd3587, {%r18689, %r18688};
	shr.u64 	%rd3588, %rd3572, 6;
	xor.b64  	%rd3589, %rd3586, %rd3588;
	xor.b64  	%rd3590, %rd3589, %rd3587;
	shf.r.wrap.b32 	%r18690, %r18531, %r18530, 1;
	shf.r.wrap.b32 	%r18691, %r18530, %r18531, 1;
	mov.b64 	%rd3591, {%r18691, %r18690};
	shf.r.wrap.b32 	%r18692, %r18531, %r18530, 8;
	shf.r.wrap.b32 	%r18693, %r18530, %r18531, 8;
	mov.b64 	%rd3592, {%r18693, %r18692};
	shr.u64 	%rd3593, %rd3011, 7;
	xor.b64  	%rd3594, %rd3591, %rd3593;
	xor.b64  	%rd3595, %rd3594, %rd3592;
	add.s64 	%rd3596, %rd3507, %rd3010;
	add.s64 	%rd3597, %rd3596, %rd3590;
	add.s64 	%rd3598, %rd3597, %rd3595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18694,%dummy}, %rd3585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18695}, %rd3585;
	}
	shf.r.wrap.b32 	%r18696, %r18695, %r18694, 19;
	shf.r.wrap.b32 	%r18697, %r18694, %r18695, 19;
	mov.b64 	%rd3599, {%r18697, %r18696};
	shf.l.wrap.b32 	%r18698, %r18694, %r18695, 3;
	shf.l.wrap.b32 	%r18699, %r18695, %r18694, 3;
	mov.b64 	%rd3600, {%r18699, %r18698};
	shr.u64 	%rd3601, %rd3585, 6;
	xor.b64  	%rd3602, %rd3599, %rd3601;
	xor.b64  	%rd3603, %rd3602, %rd3600;
	shf.r.wrap.b32 	%r18700, %r18543, %r18542, 1;
	shf.r.wrap.b32 	%r18701, %r18542, %r18543, 1;
	mov.b64 	%rd3604, {%r18701, %r18700};
	shf.r.wrap.b32 	%r18702, %r18543, %r18542, 8;
	shf.r.wrap.b32 	%r18703, %r18542, %r18543, 8;
	mov.b64 	%rd3605, {%r18703, %r18702};
	shr.u64 	%rd3606, %rd3416, 7;
	xor.b64  	%rd3607, %rd3604, %rd3606;
	xor.b64  	%rd3608, %rd3607, %rd3605;
	add.s64 	%rd3609, %rd3520, %rd3011;
	add.s64 	%rd3610, %rd3609, %rd3603;
	add.s64 	%rd3611, %rd3610, %rd3608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18704,%dummy}, %rd3392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18705}, %rd3392;
	}
	shf.r.wrap.b32 	%r18706, %r18705, %r18704, 14;
	shf.r.wrap.b32 	%r18707, %r18704, %r18705, 14;
	mov.b64 	%rd3612, {%r18707, %r18706};
	shf.r.wrap.b32 	%r18708, %r18705, %r18704, 18;
	shf.r.wrap.b32 	%r18709, %r18704, %r18705, 18;
	mov.b64 	%rd3613, {%r18709, %r18708};
	xor.b64  	%rd3614, %rd3613, %rd3612;
	shf.l.wrap.b32 	%r18710, %r18704, %r18705, 23;
	shf.l.wrap.b32 	%r18711, %r18705, %r18704, 23;
	mov.b64 	%rd3615, {%r18711, %r18710};
	xor.b64  	%rd3616, %rd3614, %rd3615;
	xor.b64  	%rd3617, %rd3368, %rd3344;
	and.b64  	%rd3618, %rd3617, %rd3392;
	xor.b64  	%rd3619, %rd3618, %rd3344;
	add.s64 	%rd3620, %rd3619, %rd3320;
	add.s64 	%rd3621, %rd3620, %rd3416;
	add.s64 	%rd3622, %rd3621, %rd18;
	add.s64 	%rd3623, %rd3622, %rd3616;
	add.s64 	%rd3624, %rd3623, %rd3331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18712,%dummy}, %rd3403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18713}, %rd3403;
	}
	shf.r.wrap.b32 	%r18714, %r18713, %r18712, 28;
	shf.r.wrap.b32 	%r18715, %r18712, %r18713, 28;
	mov.b64 	%rd3625, {%r18715, %r18714};
	shf.l.wrap.b32 	%r18716, %r18712, %r18713, 30;
	shf.l.wrap.b32 	%r18717, %r18713, %r18712, 30;
	mov.b64 	%rd3626, {%r18717, %r18716};
	xor.b64  	%rd3627, %rd3626, %rd3625;
	shf.l.wrap.b32 	%r18718, %r18712, %r18713, 25;
	shf.l.wrap.b32 	%r18719, %r18713, %r18712, 25;
	mov.b64 	%rd3628, {%r18719, %r18718};
	xor.b64  	%rd3629, %rd3627, %rd3628;
	xor.b64  	%rd3630, %rd3403, %rd3355;
	xor.b64  	%rd3631, %rd3403, %rd3379;
	and.b64  	%rd3632, %rd3631, %rd3630;
	xor.b64  	%rd3633, %rd3632, %rd3403;
	add.s64 	%rd3634, %rd3623, %rd3633;
	add.s64 	%rd3635, %rd3634, %rd3629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18720,%dummy}, %rd3624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18721}, %rd3624;
	}
	shf.r.wrap.b32 	%r18722, %r18721, %r18720, 14;
	shf.r.wrap.b32 	%r18723, %r18720, %r18721, 14;
	mov.b64 	%rd3636, {%r18723, %r18722};
	shf.r.wrap.b32 	%r18724, %r18721, %r18720, 18;
	shf.r.wrap.b32 	%r18725, %r18720, %r18721, 18;
	mov.b64 	%rd3637, {%r18725, %r18724};
	xor.b64  	%rd3638, %rd3637, %rd3636;
	shf.l.wrap.b32 	%r18726, %r18720, %r18721, 23;
	shf.l.wrap.b32 	%r18727, %r18721, %r18720, 23;
	mov.b64 	%rd3639, {%r18727, %r18726};
	xor.b64  	%rd3640, %rd3638, %rd3639;
	xor.b64  	%rd3641, %rd3392, %rd3368;
	and.b64  	%rd3642, %rd3624, %rd3641;
	xor.b64  	%rd3643, %rd3642, %rd3368;
	add.s64 	%rd3644, %rd3429, %rd3344;
	add.s64 	%rd3645, %rd3644, %rd19;
	add.s64 	%rd3646, %rd3645, %rd3643;
	add.s64 	%rd3647, %rd3646, %rd3640;
	add.s64 	%rd3648, %rd3647, %rd3355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18728,%dummy}, %rd3635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18729}, %rd3635;
	}
	shf.r.wrap.b32 	%r18730, %r18729, %r18728, 28;
	shf.r.wrap.b32 	%r18731, %r18728, %r18729, 28;
	mov.b64 	%rd3649, {%r18731, %r18730};
	shf.l.wrap.b32 	%r18732, %r18728, %r18729, 30;
	shf.l.wrap.b32 	%r18733, %r18729, %r18728, 30;
	mov.b64 	%rd3650, {%r18733, %r18732};
	xor.b64  	%rd3651, %rd3650, %rd3649;
	shf.l.wrap.b32 	%r18734, %r18728, %r18729, 25;
	shf.l.wrap.b32 	%r18735, %r18729, %r18728, 25;
	mov.b64 	%rd3652, {%r18735, %r18734};
	xor.b64  	%rd3653, %rd3651, %rd3652;
	xor.b64  	%rd3654, %rd3635, %rd3379;
	xor.b64  	%rd3655, %rd3635, %rd3403;
	and.b64  	%rd3656, %rd3655, %rd3654;
	xor.b64  	%rd3657, %rd3656, %rd3635;
	add.s64 	%rd3658, %rd3647, %rd3657;
	add.s64 	%rd3659, %rd3658, %rd3653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18736,%dummy}, %rd3648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18737}, %rd3648;
	}
	shf.r.wrap.b32 	%r18738, %r18737, %r18736, 14;
	shf.r.wrap.b32 	%r18739, %r18736, %r18737, 14;
	mov.b64 	%rd3660, {%r18739, %r18738};
	shf.r.wrap.b32 	%r18740, %r18737, %r18736, 18;
	shf.r.wrap.b32 	%r18741, %r18736, %r18737, 18;
	mov.b64 	%rd3661, {%r18741, %r18740};
	xor.b64  	%rd3662, %rd3661, %rd3660;
	shf.l.wrap.b32 	%r18742, %r18736, %r18737, 23;
	shf.l.wrap.b32 	%r18743, %r18737, %r18736, 23;
	mov.b64 	%rd3663, {%r18743, %r18742};
	xor.b64  	%rd3664, %rd3662, %rd3663;
	xor.b64  	%rd3665, %rd3624, %rd3392;
	and.b64  	%rd3666, %rd3648, %rd3665;
	xor.b64  	%rd3667, %rd3666, %rd3392;
	add.s64 	%rd3668, %rd3442, %rd3368;
	add.s64 	%rd3669, %rd3668, %rd20;
	add.s64 	%rd3670, %rd3669, %rd3667;
	add.s64 	%rd3671, %rd3670, %rd3664;
	add.s64 	%rd3672, %rd3671, %rd3379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18744,%dummy}, %rd3659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18745}, %rd3659;
	}
	shf.r.wrap.b32 	%r18746, %r18745, %r18744, 28;
	shf.r.wrap.b32 	%r18747, %r18744, %r18745, 28;
	mov.b64 	%rd3673, {%r18747, %r18746};
	shf.l.wrap.b32 	%r18748, %r18744, %r18745, 30;
	shf.l.wrap.b32 	%r18749, %r18745, %r18744, 30;
	mov.b64 	%rd3674, {%r18749, %r18748};
	xor.b64  	%rd3675, %rd3674, %rd3673;
	shf.l.wrap.b32 	%r18750, %r18744, %r18745, 25;
	shf.l.wrap.b32 	%r18751, %r18745, %r18744, 25;
	mov.b64 	%rd3676, {%r18751, %r18750};
	xor.b64  	%rd3677, %rd3675, %rd3676;
	xor.b64  	%rd3678, %rd3659, %rd3403;
	xor.b64  	%rd3679, %rd3659, %rd3635;
	and.b64  	%rd3680, %rd3679, %rd3678;
	xor.b64  	%rd3681, %rd3680, %rd3659;
	add.s64 	%rd3682, %rd3671, %rd3681;
	add.s64 	%rd3683, %rd3682, %rd3677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18752,%dummy}, %rd3672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18753}, %rd3672;
	}
	shf.r.wrap.b32 	%r18754, %r18753, %r18752, 14;
	shf.r.wrap.b32 	%r18755, %r18752, %r18753, 14;
	mov.b64 	%rd3684, {%r18755, %r18754};
	shf.r.wrap.b32 	%r18756, %r18753, %r18752, 18;
	shf.r.wrap.b32 	%r18757, %r18752, %r18753, 18;
	mov.b64 	%rd3685, {%r18757, %r18756};
	xor.b64  	%rd3686, %rd3685, %rd3684;
	shf.l.wrap.b32 	%r18758, %r18752, %r18753, 23;
	shf.l.wrap.b32 	%r18759, %r18753, %r18752, 23;
	mov.b64 	%rd3687, {%r18759, %r18758};
	xor.b64  	%rd3688, %rd3686, %rd3687;
	xor.b64  	%rd3689, %rd3648, %rd3624;
	and.b64  	%rd3690, %rd3672, %rd3689;
	xor.b64  	%rd3691, %rd3690, %rd3624;
	add.s64 	%rd3692, %rd3455, %rd3392;
	add.s64 	%rd3693, %rd3692, %rd21;
	add.s64 	%rd3694, %rd3693, %rd3691;
	add.s64 	%rd3695, %rd3694, %rd3688;
	add.s64 	%rd3696, %rd3695, %rd3403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18760,%dummy}, %rd3683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18761}, %rd3683;
	}
	shf.r.wrap.b32 	%r18762, %r18761, %r18760, 28;
	shf.r.wrap.b32 	%r18763, %r18760, %r18761, 28;
	mov.b64 	%rd3697, {%r18763, %r18762};
	shf.l.wrap.b32 	%r18764, %r18760, %r18761, 30;
	shf.l.wrap.b32 	%r18765, %r18761, %r18760, 30;
	mov.b64 	%rd3698, {%r18765, %r18764};
	xor.b64  	%rd3699, %rd3698, %rd3697;
	shf.l.wrap.b32 	%r18766, %r18760, %r18761, 25;
	shf.l.wrap.b32 	%r18767, %r18761, %r18760, 25;
	mov.b64 	%rd3700, {%r18767, %r18766};
	xor.b64  	%rd3701, %rd3699, %rd3700;
	xor.b64  	%rd3702, %rd3683, %rd3635;
	xor.b64  	%rd3703, %rd3683, %rd3659;
	and.b64  	%rd3704, %rd3703, %rd3702;
	xor.b64  	%rd3705, %rd3704, %rd3683;
	add.s64 	%rd3706, %rd3695, %rd3705;
	add.s64 	%rd3707, %rd3706, %rd3701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18768,%dummy}, %rd3696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18769}, %rd3696;
	}
	shf.r.wrap.b32 	%r18770, %r18769, %r18768, 14;
	shf.r.wrap.b32 	%r18771, %r18768, %r18769, 14;
	mov.b64 	%rd3708, {%r18771, %r18770};
	shf.r.wrap.b32 	%r18772, %r18769, %r18768, 18;
	shf.r.wrap.b32 	%r18773, %r18768, %r18769, 18;
	mov.b64 	%rd3709, {%r18773, %r18772};
	xor.b64  	%rd3710, %rd3709, %rd3708;
	shf.l.wrap.b32 	%r18774, %r18768, %r18769, 23;
	shf.l.wrap.b32 	%r18775, %r18769, %r18768, 23;
	mov.b64 	%rd3711, {%r18775, %r18774};
	xor.b64  	%rd3712, %rd3710, %rd3711;
	xor.b64  	%rd3713, %rd3672, %rd3648;
	and.b64  	%rd3714, %rd3696, %rd3713;
	xor.b64  	%rd3715, %rd3714, %rd3648;
	add.s64 	%rd3716, %rd3624, %rd3468;
	add.s64 	%rd3717, %rd3716, %rd22;
	add.s64 	%rd3718, %rd3717, %rd3715;
	add.s64 	%rd3719, %rd3718, %rd3712;
	add.s64 	%rd3720, %rd3719, %rd3635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18776,%dummy}, %rd3707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18777}, %rd3707;
	}
	shf.r.wrap.b32 	%r18778, %r18777, %r18776, 28;
	shf.r.wrap.b32 	%r18779, %r18776, %r18777, 28;
	mov.b64 	%rd3721, {%r18779, %r18778};
	shf.l.wrap.b32 	%r18780, %r18776, %r18777, 30;
	shf.l.wrap.b32 	%r18781, %r18777, %r18776, 30;
	mov.b64 	%rd3722, {%r18781, %r18780};
	xor.b64  	%rd3723, %rd3722, %rd3721;
	shf.l.wrap.b32 	%r18782, %r18776, %r18777, 25;
	shf.l.wrap.b32 	%r18783, %r18777, %r18776, 25;
	mov.b64 	%rd3724, {%r18783, %r18782};
	xor.b64  	%rd3725, %rd3723, %rd3724;
	xor.b64  	%rd3726, %rd3707, %rd3659;
	xor.b64  	%rd3727, %rd3707, %rd3683;
	and.b64  	%rd3728, %rd3727, %rd3726;
	xor.b64  	%rd3729, %rd3728, %rd3707;
	add.s64 	%rd3730, %rd3719, %rd3729;
	add.s64 	%rd3731, %rd3730, %rd3725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18784,%dummy}, %rd3720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18785}, %rd3720;
	}
	shf.r.wrap.b32 	%r18786, %r18785, %r18784, 14;
	shf.r.wrap.b32 	%r18787, %r18784, %r18785, 14;
	mov.b64 	%rd3732, {%r18787, %r18786};
	shf.r.wrap.b32 	%r18788, %r18785, %r18784, 18;
	shf.r.wrap.b32 	%r18789, %r18784, %r18785, 18;
	mov.b64 	%rd3733, {%r18789, %r18788};
	xor.b64  	%rd3734, %rd3733, %rd3732;
	shf.l.wrap.b32 	%r18790, %r18784, %r18785, 23;
	shf.l.wrap.b32 	%r18791, %r18785, %r18784, 23;
	mov.b64 	%rd3735, {%r18791, %r18790};
	xor.b64  	%rd3736, %rd3734, %rd3735;
	xor.b64  	%rd3737, %rd3696, %rd3672;
	and.b64  	%rd3738, %rd3720, %rd3737;
	xor.b64  	%rd3739, %rd3738, %rd3672;
	add.s64 	%rd3740, %rd3648, %rd3481;
	add.s64 	%rd3741, %rd3740, %rd23;
	add.s64 	%rd3742, %rd3741, %rd3739;
	add.s64 	%rd3743, %rd3742, %rd3736;
	add.s64 	%rd3744, %rd3743, %rd3659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18792,%dummy}, %rd3731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18793}, %rd3731;
	}
	shf.r.wrap.b32 	%r18794, %r18793, %r18792, 28;
	shf.r.wrap.b32 	%r18795, %r18792, %r18793, 28;
	mov.b64 	%rd3745, {%r18795, %r18794};
	shf.l.wrap.b32 	%r18796, %r18792, %r18793, 30;
	shf.l.wrap.b32 	%r18797, %r18793, %r18792, 30;
	mov.b64 	%rd3746, {%r18797, %r18796};
	xor.b64  	%rd3747, %rd3746, %rd3745;
	shf.l.wrap.b32 	%r18798, %r18792, %r18793, 25;
	shf.l.wrap.b32 	%r18799, %r18793, %r18792, 25;
	mov.b64 	%rd3748, {%r18799, %r18798};
	xor.b64  	%rd3749, %rd3747, %rd3748;
	xor.b64  	%rd3750, %rd3731, %rd3683;
	xor.b64  	%rd3751, %rd3731, %rd3707;
	and.b64  	%rd3752, %rd3751, %rd3750;
	xor.b64  	%rd3753, %rd3752, %rd3731;
	add.s64 	%rd3754, %rd3743, %rd3753;
	add.s64 	%rd3755, %rd3754, %rd3749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18800,%dummy}, %rd3744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18801}, %rd3744;
	}
	shf.r.wrap.b32 	%r18802, %r18801, %r18800, 14;
	shf.r.wrap.b32 	%r18803, %r18800, %r18801, 14;
	mov.b64 	%rd3756, {%r18803, %r18802};
	shf.r.wrap.b32 	%r18804, %r18801, %r18800, 18;
	shf.r.wrap.b32 	%r18805, %r18800, %r18801, 18;
	mov.b64 	%rd3757, {%r18805, %r18804};
	xor.b64  	%rd3758, %rd3757, %rd3756;
	shf.l.wrap.b32 	%r18806, %r18800, %r18801, 23;
	shf.l.wrap.b32 	%r18807, %r18801, %r18800, 23;
	mov.b64 	%rd3759, {%r18807, %r18806};
	xor.b64  	%rd3760, %rd3758, %rd3759;
	xor.b64  	%rd3761, %rd3720, %rd3696;
	and.b64  	%rd3762, %rd3744, %rd3761;
	xor.b64  	%rd3763, %rd3762, %rd3696;
	add.s64 	%rd3764, %rd3672, %rd3494;
	add.s64 	%rd3765, %rd3764, %rd24;
	add.s64 	%rd3766, %rd3765, %rd3763;
	add.s64 	%rd3767, %rd3766, %rd3760;
	add.s64 	%rd3768, %rd3767, %rd3683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18808,%dummy}, %rd3755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18809}, %rd3755;
	}
	shf.r.wrap.b32 	%r18810, %r18809, %r18808, 28;
	shf.r.wrap.b32 	%r18811, %r18808, %r18809, 28;
	mov.b64 	%rd3769, {%r18811, %r18810};
	shf.l.wrap.b32 	%r18812, %r18808, %r18809, 30;
	shf.l.wrap.b32 	%r18813, %r18809, %r18808, 30;
	mov.b64 	%rd3770, {%r18813, %r18812};
	xor.b64  	%rd3771, %rd3770, %rd3769;
	shf.l.wrap.b32 	%r18814, %r18808, %r18809, 25;
	shf.l.wrap.b32 	%r18815, %r18809, %r18808, 25;
	mov.b64 	%rd3772, {%r18815, %r18814};
	xor.b64  	%rd3773, %rd3771, %rd3772;
	xor.b64  	%rd3774, %rd3755, %rd3707;
	xor.b64  	%rd3775, %rd3755, %rd3731;
	and.b64  	%rd3776, %rd3775, %rd3774;
	xor.b64  	%rd3777, %rd3776, %rd3755;
	add.s64 	%rd3778, %rd3767, %rd3777;
	add.s64 	%rd3779, %rd3778, %rd3773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18816,%dummy}, %rd3768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18817}, %rd3768;
	}
	shf.r.wrap.b32 	%r18818, %r18817, %r18816, 14;
	shf.r.wrap.b32 	%r18819, %r18816, %r18817, 14;
	mov.b64 	%rd3780, {%r18819, %r18818};
	shf.r.wrap.b32 	%r18820, %r18817, %r18816, 18;
	shf.r.wrap.b32 	%r18821, %r18816, %r18817, 18;
	mov.b64 	%rd3781, {%r18821, %r18820};
	xor.b64  	%rd3782, %rd3781, %rd3780;
	shf.l.wrap.b32 	%r18822, %r18816, %r18817, 23;
	shf.l.wrap.b32 	%r18823, %r18817, %r18816, 23;
	mov.b64 	%rd3783, {%r18823, %r18822};
	xor.b64  	%rd3784, %rd3782, %rd3783;
	xor.b64  	%rd3785, %rd3744, %rd3720;
	and.b64  	%rd3786, %rd3768, %rd3785;
	xor.b64  	%rd3787, %rd3786, %rd3720;
	add.s64 	%rd3788, %rd3696, %rd3507;
	add.s64 	%rd3789, %rd3788, %rd25;
	add.s64 	%rd3790, %rd3789, %rd3787;
	add.s64 	%rd3791, %rd3790, %rd3784;
	add.s64 	%rd3792, %rd3791, %rd3707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18824,%dummy}, %rd3779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18825}, %rd3779;
	}
	shf.r.wrap.b32 	%r18826, %r18825, %r18824, 28;
	shf.r.wrap.b32 	%r18827, %r18824, %r18825, 28;
	mov.b64 	%rd3793, {%r18827, %r18826};
	shf.l.wrap.b32 	%r18828, %r18824, %r18825, 30;
	shf.l.wrap.b32 	%r18829, %r18825, %r18824, 30;
	mov.b64 	%rd3794, {%r18829, %r18828};
	xor.b64  	%rd3795, %rd3794, %rd3793;
	shf.l.wrap.b32 	%r18830, %r18824, %r18825, 25;
	shf.l.wrap.b32 	%r18831, %r18825, %r18824, 25;
	mov.b64 	%rd3796, {%r18831, %r18830};
	xor.b64  	%rd3797, %rd3795, %rd3796;
	xor.b64  	%rd3798, %rd3779, %rd3731;
	xor.b64  	%rd3799, %rd3779, %rd3755;
	and.b64  	%rd3800, %rd3799, %rd3798;
	xor.b64  	%rd3801, %rd3800, %rd3779;
	add.s64 	%rd3802, %rd3791, %rd3801;
	add.s64 	%rd3803, %rd3802, %rd3797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18832,%dummy}, %rd3792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18833}, %rd3792;
	}
	shf.r.wrap.b32 	%r18834, %r18833, %r18832, 14;
	shf.r.wrap.b32 	%r18835, %r18832, %r18833, 14;
	mov.b64 	%rd3804, {%r18835, %r18834};
	shf.r.wrap.b32 	%r18836, %r18833, %r18832, 18;
	shf.r.wrap.b32 	%r18837, %r18832, %r18833, 18;
	mov.b64 	%rd3805, {%r18837, %r18836};
	xor.b64  	%rd3806, %rd3805, %rd3804;
	shf.l.wrap.b32 	%r18838, %r18832, %r18833, 23;
	shf.l.wrap.b32 	%r18839, %r18833, %r18832, 23;
	mov.b64 	%rd3807, {%r18839, %r18838};
	xor.b64  	%rd3808, %rd3806, %rd3807;
	xor.b64  	%rd3809, %rd3768, %rd3744;
	and.b64  	%rd3810, %rd3792, %rd3809;
	xor.b64  	%rd3811, %rd3810, %rd3744;
	add.s64 	%rd3812, %rd3720, %rd3520;
	add.s64 	%rd3813, %rd3812, %rd26;
	add.s64 	%rd3814, %rd3813, %rd3811;
	add.s64 	%rd3815, %rd3814, %rd3808;
	add.s64 	%rd3816, %rd3815, %rd3731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18840,%dummy}, %rd3803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18841}, %rd3803;
	}
	shf.r.wrap.b32 	%r18842, %r18841, %r18840, 28;
	shf.r.wrap.b32 	%r18843, %r18840, %r18841, 28;
	mov.b64 	%rd3817, {%r18843, %r18842};
	shf.l.wrap.b32 	%r18844, %r18840, %r18841, 30;
	shf.l.wrap.b32 	%r18845, %r18841, %r18840, 30;
	mov.b64 	%rd3818, {%r18845, %r18844};
	xor.b64  	%rd3819, %rd3818, %rd3817;
	shf.l.wrap.b32 	%r18846, %r18840, %r18841, 25;
	shf.l.wrap.b32 	%r18847, %r18841, %r18840, 25;
	mov.b64 	%rd3820, {%r18847, %r18846};
	xor.b64  	%rd3821, %rd3819, %rd3820;
	xor.b64  	%rd3822, %rd3803, %rd3755;
	xor.b64  	%rd3823, %rd3803, %rd3779;
	and.b64  	%rd3824, %rd3823, %rd3822;
	xor.b64  	%rd3825, %rd3824, %rd3803;
	add.s64 	%rd3826, %rd3815, %rd3825;
	add.s64 	%rd3827, %rd3826, %rd3821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18848,%dummy}, %rd3816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18849}, %rd3816;
	}
	shf.r.wrap.b32 	%r18850, %r18849, %r18848, 14;
	shf.r.wrap.b32 	%r18851, %r18848, %r18849, 14;
	mov.b64 	%rd3828, {%r18851, %r18850};
	shf.r.wrap.b32 	%r18852, %r18849, %r18848, 18;
	shf.r.wrap.b32 	%r18853, %r18848, %r18849, 18;
	mov.b64 	%rd3829, {%r18853, %r18852};
	xor.b64  	%rd3830, %rd3829, %rd3828;
	shf.l.wrap.b32 	%r18854, %r18848, %r18849, 23;
	shf.l.wrap.b32 	%r18855, %r18849, %r18848, 23;
	mov.b64 	%rd3831, {%r18855, %r18854};
	xor.b64  	%rd3832, %rd3830, %rd3831;
	xor.b64  	%rd3833, %rd3792, %rd3768;
	and.b64  	%rd3834, %rd3816, %rd3833;
	xor.b64  	%rd3835, %rd3834, %rd3768;
	add.s64 	%rd3836, %rd3744, %rd3533;
	add.s64 	%rd3837, %rd3836, %rd27;
	add.s64 	%rd3838, %rd3837, %rd3835;
	add.s64 	%rd3839, %rd3838, %rd3832;
	add.s64 	%rd3840, %rd3839, %rd3755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18856,%dummy}, %rd3827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18857}, %rd3827;
	}
	shf.r.wrap.b32 	%r18858, %r18857, %r18856, 28;
	shf.r.wrap.b32 	%r18859, %r18856, %r18857, 28;
	mov.b64 	%rd3841, {%r18859, %r18858};
	shf.l.wrap.b32 	%r18860, %r18856, %r18857, 30;
	shf.l.wrap.b32 	%r18861, %r18857, %r18856, 30;
	mov.b64 	%rd3842, {%r18861, %r18860};
	xor.b64  	%rd3843, %rd3842, %rd3841;
	shf.l.wrap.b32 	%r18862, %r18856, %r18857, 25;
	shf.l.wrap.b32 	%r18863, %r18857, %r18856, 25;
	mov.b64 	%rd3844, {%r18863, %r18862};
	xor.b64  	%rd3845, %rd3843, %rd3844;
	xor.b64  	%rd3846, %rd3827, %rd3779;
	xor.b64  	%rd3847, %rd3827, %rd3803;
	and.b64  	%rd3848, %rd3847, %rd3846;
	xor.b64  	%rd3849, %rd3848, %rd3827;
	add.s64 	%rd3850, %rd3839, %rd3849;
	add.s64 	%rd3851, %rd3850, %rd3845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18864,%dummy}, %rd3840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18865}, %rd3840;
	}
	shf.r.wrap.b32 	%r18866, %r18865, %r18864, 14;
	shf.r.wrap.b32 	%r18867, %r18864, %r18865, 14;
	mov.b64 	%rd3852, {%r18867, %r18866};
	shf.r.wrap.b32 	%r18868, %r18865, %r18864, 18;
	shf.r.wrap.b32 	%r18869, %r18864, %r18865, 18;
	mov.b64 	%rd3853, {%r18869, %r18868};
	xor.b64  	%rd3854, %rd3853, %rd3852;
	shf.l.wrap.b32 	%r18870, %r18864, %r18865, 23;
	shf.l.wrap.b32 	%r18871, %r18865, %r18864, 23;
	mov.b64 	%rd3855, {%r18871, %r18870};
	xor.b64  	%rd3856, %rd3854, %rd3855;
	xor.b64  	%rd3857, %rd3816, %rd3792;
	and.b64  	%rd3858, %rd3840, %rd3857;
	xor.b64  	%rd3859, %rd3858, %rd3792;
	add.s64 	%rd3860, %rd3768, %rd3546;
	add.s64 	%rd3861, %rd3860, %rd28;
	add.s64 	%rd3862, %rd3861, %rd3859;
	add.s64 	%rd3863, %rd3862, %rd3856;
	add.s64 	%rd3864, %rd3863, %rd3779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18872,%dummy}, %rd3851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18873}, %rd3851;
	}
	shf.r.wrap.b32 	%r18874, %r18873, %r18872, 28;
	shf.r.wrap.b32 	%r18875, %r18872, %r18873, 28;
	mov.b64 	%rd3865, {%r18875, %r18874};
	shf.l.wrap.b32 	%r18876, %r18872, %r18873, 30;
	shf.l.wrap.b32 	%r18877, %r18873, %r18872, 30;
	mov.b64 	%rd3866, {%r18877, %r18876};
	xor.b64  	%rd3867, %rd3866, %rd3865;
	shf.l.wrap.b32 	%r18878, %r18872, %r18873, 25;
	shf.l.wrap.b32 	%r18879, %r18873, %r18872, 25;
	mov.b64 	%rd3868, {%r18879, %r18878};
	xor.b64  	%rd3869, %rd3867, %rd3868;
	xor.b64  	%rd3870, %rd3851, %rd3803;
	xor.b64  	%rd3871, %rd3851, %rd3827;
	and.b64  	%rd3872, %rd3871, %rd3870;
	xor.b64  	%rd3873, %rd3872, %rd3851;
	add.s64 	%rd3874, %rd3863, %rd3873;
	add.s64 	%rd3875, %rd3874, %rd3869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18880,%dummy}, %rd3864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18881}, %rd3864;
	}
	shf.r.wrap.b32 	%r18882, %r18881, %r18880, 14;
	shf.r.wrap.b32 	%r18883, %r18880, %r18881, 14;
	mov.b64 	%rd3876, {%r18883, %r18882};
	shf.r.wrap.b32 	%r18884, %r18881, %r18880, 18;
	shf.r.wrap.b32 	%r18885, %r18880, %r18881, 18;
	mov.b64 	%rd3877, {%r18885, %r18884};
	xor.b64  	%rd3878, %rd3877, %rd3876;
	shf.l.wrap.b32 	%r18886, %r18880, %r18881, 23;
	shf.l.wrap.b32 	%r18887, %r18881, %r18880, 23;
	mov.b64 	%rd3879, {%r18887, %r18886};
	xor.b64  	%rd3880, %rd3878, %rd3879;
	xor.b64  	%rd3881, %rd3840, %rd3816;
	and.b64  	%rd3882, %rd3864, %rd3881;
	xor.b64  	%rd3883, %rd3882, %rd3816;
	add.s64 	%rd3884, %rd3792, %rd3559;
	add.s64 	%rd3885, %rd3884, %rd29;
	add.s64 	%rd3886, %rd3885, %rd3883;
	add.s64 	%rd3887, %rd3886, %rd3880;
	add.s64 	%rd3888, %rd3887, %rd3803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18888,%dummy}, %rd3875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18889}, %rd3875;
	}
	shf.r.wrap.b32 	%r18890, %r18889, %r18888, 28;
	shf.r.wrap.b32 	%r18891, %r18888, %r18889, 28;
	mov.b64 	%rd3889, {%r18891, %r18890};
	shf.l.wrap.b32 	%r18892, %r18888, %r18889, 30;
	shf.l.wrap.b32 	%r18893, %r18889, %r18888, 30;
	mov.b64 	%rd3890, {%r18893, %r18892};
	xor.b64  	%rd3891, %rd3890, %rd3889;
	shf.l.wrap.b32 	%r18894, %r18888, %r18889, 25;
	shf.l.wrap.b32 	%r18895, %r18889, %r18888, 25;
	mov.b64 	%rd3892, {%r18895, %r18894};
	xor.b64  	%rd3893, %rd3891, %rd3892;
	xor.b64  	%rd3894, %rd3875, %rd3827;
	xor.b64  	%rd3895, %rd3875, %rd3851;
	and.b64  	%rd3896, %rd3895, %rd3894;
	xor.b64  	%rd3897, %rd3896, %rd3875;
	add.s64 	%rd3898, %rd3887, %rd3897;
	add.s64 	%rd3899, %rd3898, %rd3893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18896,%dummy}, %rd3888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18897}, %rd3888;
	}
	shf.r.wrap.b32 	%r18898, %r18897, %r18896, 14;
	shf.r.wrap.b32 	%r18899, %r18896, %r18897, 14;
	mov.b64 	%rd3900, {%r18899, %r18898};
	shf.r.wrap.b32 	%r18900, %r18897, %r18896, 18;
	shf.r.wrap.b32 	%r18901, %r18896, %r18897, 18;
	mov.b64 	%rd3901, {%r18901, %r18900};
	xor.b64  	%rd3902, %rd3901, %rd3900;
	shf.l.wrap.b32 	%r18902, %r18896, %r18897, 23;
	shf.l.wrap.b32 	%r18903, %r18897, %r18896, 23;
	mov.b64 	%rd3903, {%r18903, %r18902};
	xor.b64  	%rd3904, %rd3902, %rd3903;
	xor.b64  	%rd3905, %rd3864, %rd3840;
	and.b64  	%rd3906, %rd3888, %rd3905;
	xor.b64  	%rd3907, %rd3906, %rd3840;
	add.s64 	%rd3908, %rd3816, %rd3572;
	add.s64 	%rd3909, %rd3908, %rd30;
	add.s64 	%rd3910, %rd3909, %rd3907;
	add.s64 	%rd3911, %rd3910, %rd3904;
	add.s64 	%rd3912, %rd3911, %rd3827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18904,%dummy}, %rd3899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18905}, %rd3899;
	}
	shf.r.wrap.b32 	%r18906, %r18905, %r18904, 28;
	shf.r.wrap.b32 	%r18907, %r18904, %r18905, 28;
	mov.b64 	%rd3913, {%r18907, %r18906};
	shf.l.wrap.b32 	%r18908, %r18904, %r18905, 30;
	shf.l.wrap.b32 	%r18909, %r18905, %r18904, 30;
	mov.b64 	%rd3914, {%r18909, %r18908};
	xor.b64  	%rd3915, %rd3914, %rd3913;
	shf.l.wrap.b32 	%r18910, %r18904, %r18905, 25;
	shf.l.wrap.b32 	%r18911, %r18905, %r18904, 25;
	mov.b64 	%rd3916, {%r18911, %r18910};
	xor.b64  	%rd3917, %rd3915, %rd3916;
	xor.b64  	%rd3918, %rd3899, %rd3851;
	xor.b64  	%rd3919, %rd3899, %rd3875;
	and.b64  	%rd3920, %rd3919, %rd3918;
	xor.b64  	%rd3921, %rd3920, %rd3899;
	add.s64 	%rd3922, %rd3911, %rd3921;
	add.s64 	%rd3923, %rd3922, %rd3917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18912,%dummy}, %rd3912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18913}, %rd3912;
	}
	shf.r.wrap.b32 	%r18914, %r18913, %r18912, 14;
	shf.r.wrap.b32 	%r18915, %r18912, %r18913, 14;
	mov.b64 	%rd3924, {%r18915, %r18914};
	shf.r.wrap.b32 	%r18916, %r18913, %r18912, 18;
	shf.r.wrap.b32 	%r18917, %r18912, %r18913, 18;
	mov.b64 	%rd3925, {%r18917, %r18916};
	xor.b64  	%rd3926, %rd3925, %rd3924;
	shf.l.wrap.b32 	%r18918, %r18912, %r18913, 23;
	shf.l.wrap.b32 	%r18919, %r18913, %r18912, 23;
	mov.b64 	%rd3927, {%r18919, %r18918};
	xor.b64  	%rd3928, %rd3926, %rd3927;
	xor.b64  	%rd3929, %rd3888, %rd3864;
	and.b64  	%rd3930, %rd3912, %rd3929;
	xor.b64  	%rd3931, %rd3930, %rd3864;
	add.s64 	%rd3932, %rd3840, %rd3585;
	add.s64 	%rd3933, %rd3932, %rd31;
	add.s64 	%rd3934, %rd3933, %rd3931;
	add.s64 	%rd3935, %rd3934, %rd3928;
	add.s64 	%rd3936, %rd3935, %rd3851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18920,%dummy}, %rd3923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18921}, %rd3923;
	}
	shf.r.wrap.b32 	%r18922, %r18921, %r18920, 28;
	shf.r.wrap.b32 	%r18923, %r18920, %r18921, 28;
	mov.b64 	%rd3937, {%r18923, %r18922};
	shf.l.wrap.b32 	%r18924, %r18920, %r18921, 30;
	shf.l.wrap.b32 	%r18925, %r18921, %r18920, 30;
	mov.b64 	%rd3938, {%r18925, %r18924};
	xor.b64  	%rd3939, %rd3938, %rd3937;
	shf.l.wrap.b32 	%r18926, %r18920, %r18921, 25;
	shf.l.wrap.b32 	%r18927, %r18921, %r18920, 25;
	mov.b64 	%rd3940, {%r18927, %r18926};
	xor.b64  	%rd3941, %rd3939, %rd3940;
	xor.b64  	%rd3942, %rd3923, %rd3875;
	xor.b64  	%rd3943, %rd3923, %rd3899;
	and.b64  	%rd3944, %rd3943, %rd3942;
	xor.b64  	%rd3945, %rd3944, %rd3923;
	add.s64 	%rd3946, %rd3935, %rd3945;
	add.s64 	%rd3947, %rd3946, %rd3941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18928,%dummy}, %rd3936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18929}, %rd3936;
	}
	shf.r.wrap.b32 	%r18930, %r18929, %r18928, 14;
	shf.r.wrap.b32 	%r18931, %r18928, %r18929, 14;
	mov.b64 	%rd3948, {%r18931, %r18930};
	shf.r.wrap.b32 	%r18932, %r18929, %r18928, 18;
	shf.r.wrap.b32 	%r18933, %r18928, %r18929, 18;
	mov.b64 	%rd3949, {%r18933, %r18932};
	xor.b64  	%rd3950, %rd3949, %rd3948;
	shf.l.wrap.b32 	%r18934, %r18928, %r18929, 23;
	shf.l.wrap.b32 	%r18935, %r18929, %r18928, 23;
	mov.b64 	%rd3951, {%r18935, %r18934};
	xor.b64  	%rd3952, %rd3950, %rd3951;
	xor.b64  	%rd3953, %rd3912, %rd3888;
	and.b64  	%rd3954, %rd3936, %rd3953;
	xor.b64  	%rd3955, %rd3954, %rd3888;
	add.s64 	%rd3956, %rd3864, %rd3598;
	add.s64 	%rd3957, %rd3956, %rd32;
	add.s64 	%rd3958, %rd3957, %rd3955;
	add.s64 	%rd3959, %rd3958, %rd3952;
	add.s64 	%rd3960, %rd3959, %rd3875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18936,%dummy}, %rd3947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18937}, %rd3947;
	}
	shf.r.wrap.b32 	%r18938, %r18937, %r18936, 28;
	shf.r.wrap.b32 	%r18939, %r18936, %r18937, 28;
	mov.b64 	%rd3961, {%r18939, %r18938};
	shf.l.wrap.b32 	%r18940, %r18936, %r18937, 30;
	shf.l.wrap.b32 	%r18941, %r18937, %r18936, 30;
	mov.b64 	%rd3962, {%r18941, %r18940};
	xor.b64  	%rd3963, %rd3962, %rd3961;
	shf.l.wrap.b32 	%r18942, %r18936, %r18937, 25;
	shf.l.wrap.b32 	%r18943, %r18937, %r18936, 25;
	mov.b64 	%rd3964, {%r18943, %r18942};
	xor.b64  	%rd3965, %rd3963, %rd3964;
	xor.b64  	%rd3966, %rd3947, %rd3899;
	xor.b64  	%rd3967, %rd3947, %rd3923;
	and.b64  	%rd3968, %rd3967, %rd3966;
	xor.b64  	%rd3969, %rd3968, %rd3947;
	add.s64 	%rd3970, %rd3959, %rd3969;
	add.s64 	%rd3971, %rd3970, %rd3965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18944,%dummy}, %rd3960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18945}, %rd3960;
	}
	shf.r.wrap.b32 	%r18946, %r18945, %r18944, 14;
	shf.r.wrap.b32 	%r18947, %r18944, %r18945, 14;
	mov.b64 	%rd3972, {%r18947, %r18946};
	shf.r.wrap.b32 	%r18948, %r18945, %r18944, 18;
	shf.r.wrap.b32 	%r18949, %r18944, %r18945, 18;
	mov.b64 	%rd3973, {%r18949, %r18948};
	xor.b64  	%rd3974, %rd3973, %rd3972;
	shf.l.wrap.b32 	%r18950, %r18944, %r18945, 23;
	shf.l.wrap.b32 	%r18951, %r18945, %r18944, 23;
	mov.b64 	%rd3975, {%r18951, %r18950};
	xor.b64  	%rd3976, %rd3974, %rd3975;
	xor.b64  	%rd3977, %rd3936, %rd3912;
	and.b64  	%rd3978, %rd3960, %rd3977;
	xor.b64  	%rd3979, %rd3978, %rd3912;
	add.s64 	%rd3980, %rd3888, %rd3611;
	add.s64 	%rd3981, %rd3980, %rd33;
	add.s64 	%rd3982, %rd3981, %rd3979;
	add.s64 	%rd3983, %rd3982, %rd3976;
	add.s64 	%rd3984, %rd3983, %rd3899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18952,%dummy}, %rd3971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18953}, %rd3971;
	}
	shf.r.wrap.b32 	%r18954, %r18953, %r18952, 28;
	shf.r.wrap.b32 	%r18955, %r18952, %r18953, 28;
	mov.b64 	%rd3985, {%r18955, %r18954};
	shf.l.wrap.b32 	%r18956, %r18952, %r18953, 30;
	shf.l.wrap.b32 	%r18957, %r18953, %r18952, 30;
	mov.b64 	%rd3986, {%r18957, %r18956};
	xor.b64  	%rd3987, %rd3986, %rd3985;
	shf.l.wrap.b32 	%r18958, %r18952, %r18953, 25;
	shf.l.wrap.b32 	%r18959, %r18953, %r18952, 25;
	mov.b64 	%rd3988, {%r18959, %r18958};
	xor.b64  	%rd3989, %rd3987, %rd3988;
	xor.b64  	%rd3990, %rd3971, %rd3923;
	xor.b64  	%rd3991, %rd3971, %rd3947;
	and.b64  	%rd3992, %rd3991, %rd3990;
	xor.b64  	%rd3993, %rd3992, %rd3971;
	add.s64 	%rd3994, %rd3983, %rd3993;
	add.s64 	%rd3995, %rd3994, %rd3989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18960,%dummy}, %rd3598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18961}, %rd3598;
	}
	shf.r.wrap.b32 	%r18962, %r18961, %r18960, 19;
	shf.r.wrap.b32 	%r18963, %r18960, %r18961, 19;
	mov.b64 	%rd3996, {%r18963, %r18962};
	shf.l.wrap.b32 	%r18964, %r18960, %r18961, 3;
	shf.l.wrap.b32 	%r18965, %r18961, %r18960, 3;
	mov.b64 	%rd3997, {%r18965, %r18964};
	shr.u64 	%rd3998, %rd3598, 6;
	xor.b64  	%rd3999, %rd3996, %rd3998;
	xor.b64  	%rd4000, %rd3999, %rd3997;
	shf.r.wrap.b32 	%r18966, %r18555, %r18554, 1;
	shf.r.wrap.b32 	%r18967, %r18554, %r18555, 1;
	mov.b64 	%rd4001, {%r18967, %r18966};
	shf.r.wrap.b32 	%r18968, %r18555, %r18554, 8;
	shf.r.wrap.b32 	%r18969, %r18554, %r18555, 8;
	mov.b64 	%rd4002, {%r18969, %r18968};
	shr.u64 	%rd4003, %rd3429, 7;
	xor.b64  	%rd4004, %rd4001, %rd4003;
	xor.b64  	%rd4005, %rd4004, %rd4002;
	add.s64 	%rd4006, %rd3533, %rd3416;
	add.s64 	%rd4007, %rd4006, %rd4000;
	add.s64 	%rd4008, %rd4007, %rd4005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18970,%dummy}, %rd3611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18971}, %rd3611;
	}
	shf.r.wrap.b32 	%r18972, %r18971, %r18970, 19;
	shf.r.wrap.b32 	%r18973, %r18970, %r18971, 19;
	mov.b64 	%rd4009, {%r18973, %r18972};
	shf.l.wrap.b32 	%r18974, %r18970, %r18971, 3;
	shf.l.wrap.b32 	%r18975, %r18971, %r18970, 3;
	mov.b64 	%rd4010, {%r18975, %r18974};
	shr.u64 	%rd4011, %rd3611, 6;
	xor.b64  	%rd4012, %rd4009, %rd4011;
	xor.b64  	%rd4013, %rd4012, %rd4010;
	shf.r.wrap.b32 	%r18976, %r18567, %r18566, 1;
	shf.r.wrap.b32 	%r18977, %r18566, %r18567, 1;
	mov.b64 	%rd4014, {%r18977, %r18976};
	shf.r.wrap.b32 	%r18978, %r18567, %r18566, 8;
	shf.r.wrap.b32 	%r18979, %r18566, %r18567, 8;
	mov.b64 	%rd4015, {%r18979, %r18978};
	shr.u64 	%rd4016, %rd3442, 7;
	xor.b64  	%rd4017, %rd4014, %rd4016;
	xor.b64  	%rd4018, %rd4017, %rd4015;
	add.s64 	%rd4019, %rd3546, %rd3429;
	add.s64 	%rd4020, %rd4019, %rd4013;
	add.s64 	%rd4021, %rd4020, %rd4018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18980,%dummy}, %rd4008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18981}, %rd4008;
	}
	shf.r.wrap.b32 	%r18982, %r18981, %r18980, 19;
	shf.r.wrap.b32 	%r18983, %r18980, %r18981, 19;
	mov.b64 	%rd4022, {%r18983, %r18982};
	shf.l.wrap.b32 	%r18984, %r18980, %r18981, 3;
	shf.l.wrap.b32 	%r18985, %r18981, %r18980, 3;
	mov.b64 	%rd4023, {%r18985, %r18984};
	shr.u64 	%rd4024, %rd4008, 6;
	xor.b64  	%rd4025, %rd4022, %rd4024;
	xor.b64  	%rd4026, %rd4025, %rd4023;
	shf.r.wrap.b32 	%r18986, %r18579, %r18578, 1;
	shf.r.wrap.b32 	%r18987, %r18578, %r18579, 1;
	mov.b64 	%rd4027, {%r18987, %r18986};
	shf.r.wrap.b32 	%r18988, %r18579, %r18578, 8;
	shf.r.wrap.b32 	%r18989, %r18578, %r18579, 8;
	mov.b64 	%rd4028, {%r18989, %r18988};
	shr.u64 	%rd4029, %rd3455, 7;
	xor.b64  	%rd4030, %rd4027, %rd4029;
	xor.b64  	%rd4031, %rd4030, %rd4028;
	add.s64 	%rd4032, %rd3559, %rd3442;
	add.s64 	%rd4033, %rd4032, %rd4026;
	add.s64 	%rd4034, %rd4033, %rd4031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18990,%dummy}, %rd4021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18991}, %rd4021;
	}
	shf.r.wrap.b32 	%r18992, %r18991, %r18990, 19;
	shf.r.wrap.b32 	%r18993, %r18990, %r18991, 19;
	mov.b64 	%rd4035, {%r18993, %r18992};
	shf.l.wrap.b32 	%r18994, %r18990, %r18991, 3;
	shf.l.wrap.b32 	%r18995, %r18991, %r18990, 3;
	mov.b64 	%rd4036, {%r18995, %r18994};
	shr.u64 	%rd4037, %rd4021, 6;
	xor.b64  	%rd4038, %rd4035, %rd4037;
	xor.b64  	%rd4039, %rd4038, %rd4036;
	shf.r.wrap.b32 	%r18996, %r18591, %r18590, 1;
	shf.r.wrap.b32 	%r18997, %r18590, %r18591, 1;
	mov.b64 	%rd4040, {%r18997, %r18996};
	shf.r.wrap.b32 	%r18998, %r18591, %r18590, 8;
	shf.r.wrap.b32 	%r18999, %r18590, %r18591, 8;
	mov.b64 	%rd4041, {%r18999, %r18998};
	shr.u64 	%rd4042, %rd3468, 7;
	xor.b64  	%rd4043, %rd4040, %rd4042;
	xor.b64  	%rd4044, %rd4043, %rd4041;
	add.s64 	%rd4045, %rd3572, %rd3455;
	add.s64 	%rd4046, %rd4045, %rd4039;
	add.s64 	%rd4047, %rd4046, %rd4044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19000,%dummy}, %rd4034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19001}, %rd4034;
	}
	shf.r.wrap.b32 	%r19002, %r19001, %r19000, 19;
	shf.r.wrap.b32 	%r19003, %r19000, %r19001, 19;
	mov.b64 	%rd4048, {%r19003, %r19002};
	shf.l.wrap.b32 	%r19004, %r19000, %r19001, 3;
	shf.l.wrap.b32 	%r19005, %r19001, %r19000, 3;
	mov.b64 	%rd4049, {%r19005, %r19004};
	shr.u64 	%rd4050, %rd4034, 6;
	xor.b64  	%rd4051, %rd4048, %rd4050;
	xor.b64  	%rd4052, %rd4051, %rd4049;
	shf.r.wrap.b32 	%r19006, %r18603, %r18602, 1;
	shf.r.wrap.b32 	%r19007, %r18602, %r18603, 1;
	mov.b64 	%rd4053, {%r19007, %r19006};
	shf.r.wrap.b32 	%r19008, %r18603, %r18602, 8;
	shf.r.wrap.b32 	%r19009, %r18602, %r18603, 8;
	mov.b64 	%rd4054, {%r19009, %r19008};
	shr.u64 	%rd4055, %rd3481, 7;
	xor.b64  	%rd4056, %rd4053, %rd4055;
	xor.b64  	%rd4057, %rd4056, %rd4054;
	add.s64 	%rd4058, %rd3585, %rd3468;
	add.s64 	%rd4059, %rd4058, %rd4052;
	add.s64 	%rd4060, %rd4059, %rd4057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19010,%dummy}, %rd4047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19011}, %rd4047;
	}
	shf.r.wrap.b32 	%r19012, %r19011, %r19010, 19;
	shf.r.wrap.b32 	%r19013, %r19010, %r19011, 19;
	mov.b64 	%rd4061, {%r19013, %r19012};
	shf.l.wrap.b32 	%r19014, %r19010, %r19011, 3;
	shf.l.wrap.b32 	%r19015, %r19011, %r19010, 3;
	mov.b64 	%rd4062, {%r19015, %r19014};
	shr.u64 	%rd4063, %rd4047, 6;
	xor.b64  	%rd4064, %rd4061, %rd4063;
	xor.b64  	%rd4065, %rd4064, %rd4062;
	shf.r.wrap.b32 	%r19016, %r18615, %r18614, 1;
	shf.r.wrap.b32 	%r19017, %r18614, %r18615, 1;
	mov.b64 	%rd4066, {%r19017, %r19016};
	shf.r.wrap.b32 	%r19018, %r18615, %r18614, 8;
	shf.r.wrap.b32 	%r19019, %r18614, %r18615, 8;
	mov.b64 	%rd4067, {%r19019, %r19018};
	shr.u64 	%rd4068, %rd3494, 7;
	xor.b64  	%rd4069, %rd4066, %rd4068;
	xor.b64  	%rd4070, %rd4069, %rd4067;
	add.s64 	%rd4071, %rd3598, %rd3481;
	add.s64 	%rd4072, %rd4071, %rd4065;
	add.s64 	%rd4073, %rd4072, %rd4070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19020,%dummy}, %rd4060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19021}, %rd4060;
	}
	shf.r.wrap.b32 	%r19022, %r19021, %r19020, 19;
	shf.r.wrap.b32 	%r19023, %r19020, %r19021, 19;
	mov.b64 	%rd4074, {%r19023, %r19022};
	shf.l.wrap.b32 	%r19024, %r19020, %r19021, 3;
	shf.l.wrap.b32 	%r19025, %r19021, %r19020, 3;
	mov.b64 	%rd4075, {%r19025, %r19024};
	shr.u64 	%rd4076, %rd4060, 6;
	xor.b64  	%rd4077, %rd4074, %rd4076;
	xor.b64  	%rd4078, %rd4077, %rd4075;
	shf.r.wrap.b32 	%r19026, %r18627, %r18626, 1;
	shf.r.wrap.b32 	%r19027, %r18626, %r18627, 1;
	mov.b64 	%rd4079, {%r19027, %r19026};
	shf.r.wrap.b32 	%r19028, %r18627, %r18626, 8;
	shf.r.wrap.b32 	%r19029, %r18626, %r18627, 8;
	mov.b64 	%rd4080, {%r19029, %r19028};
	shr.u64 	%rd4081, %rd3507, 7;
	xor.b64  	%rd4082, %rd4079, %rd4081;
	xor.b64  	%rd4083, %rd4082, %rd4080;
	add.s64 	%rd4084, %rd3611, %rd3494;
	add.s64 	%rd4085, %rd4084, %rd4078;
	add.s64 	%rd4086, %rd4085, %rd4083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19030,%dummy}, %rd4073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19031}, %rd4073;
	}
	shf.r.wrap.b32 	%r19032, %r19031, %r19030, 19;
	shf.r.wrap.b32 	%r19033, %r19030, %r19031, 19;
	mov.b64 	%rd4087, {%r19033, %r19032};
	shf.l.wrap.b32 	%r19034, %r19030, %r19031, 3;
	shf.l.wrap.b32 	%r19035, %r19031, %r19030, 3;
	mov.b64 	%rd4088, {%r19035, %r19034};
	shr.u64 	%rd4089, %rd4073, 6;
	xor.b64  	%rd4090, %rd4087, %rd4089;
	xor.b64  	%rd4091, %rd4090, %rd4088;
	shf.r.wrap.b32 	%r19036, %r18639, %r18638, 1;
	shf.r.wrap.b32 	%r19037, %r18638, %r18639, 1;
	mov.b64 	%rd4092, {%r19037, %r19036};
	shf.r.wrap.b32 	%r19038, %r18639, %r18638, 8;
	shf.r.wrap.b32 	%r19039, %r18638, %r18639, 8;
	mov.b64 	%rd4093, {%r19039, %r19038};
	shr.u64 	%rd4094, %rd3520, 7;
	xor.b64  	%rd4095, %rd4092, %rd4094;
	xor.b64  	%rd4096, %rd4095, %rd4093;
	add.s64 	%rd4097, %rd4008, %rd3507;
	add.s64 	%rd4098, %rd4097, %rd4091;
	add.s64 	%rd4099, %rd4098, %rd4096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19040,%dummy}, %rd4086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19041}, %rd4086;
	}
	shf.r.wrap.b32 	%r19042, %r19041, %r19040, 19;
	shf.r.wrap.b32 	%r19043, %r19040, %r19041, 19;
	mov.b64 	%rd4100, {%r19043, %r19042};
	shf.l.wrap.b32 	%r19044, %r19040, %r19041, 3;
	shf.l.wrap.b32 	%r19045, %r19041, %r19040, 3;
	mov.b64 	%rd4101, {%r19045, %r19044};
	shr.u64 	%rd4102, %rd4086, 6;
	xor.b64  	%rd4103, %rd4100, %rd4102;
	xor.b64  	%rd4104, %rd4103, %rd4101;
	shf.r.wrap.b32 	%r19046, %r18651, %r18650, 1;
	shf.r.wrap.b32 	%r19047, %r18650, %r18651, 1;
	mov.b64 	%rd4105, {%r19047, %r19046};
	shf.r.wrap.b32 	%r19048, %r18651, %r18650, 8;
	shf.r.wrap.b32 	%r19049, %r18650, %r18651, 8;
	mov.b64 	%rd4106, {%r19049, %r19048};
	shr.u64 	%rd4107, %rd3533, 7;
	xor.b64  	%rd4108, %rd4105, %rd4107;
	xor.b64  	%rd4109, %rd4108, %rd4106;
	add.s64 	%rd4110, %rd4021, %rd3520;
	add.s64 	%rd4111, %rd4110, %rd4104;
	add.s64 	%rd4112, %rd4111, %rd4109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19050,%dummy}, %rd4099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19051}, %rd4099;
	}
	shf.r.wrap.b32 	%r19052, %r19051, %r19050, 19;
	shf.r.wrap.b32 	%r19053, %r19050, %r19051, 19;
	mov.b64 	%rd4113, {%r19053, %r19052};
	shf.l.wrap.b32 	%r19054, %r19050, %r19051, 3;
	shf.l.wrap.b32 	%r19055, %r19051, %r19050, 3;
	mov.b64 	%rd4114, {%r19055, %r19054};
	shr.u64 	%rd4115, %rd4099, 6;
	xor.b64  	%rd4116, %rd4113, %rd4115;
	xor.b64  	%rd4117, %rd4116, %rd4114;
	shf.r.wrap.b32 	%r19056, %r18663, %r18662, 1;
	shf.r.wrap.b32 	%r19057, %r18662, %r18663, 1;
	mov.b64 	%rd4118, {%r19057, %r19056};
	shf.r.wrap.b32 	%r19058, %r18663, %r18662, 8;
	shf.r.wrap.b32 	%r19059, %r18662, %r18663, 8;
	mov.b64 	%rd4119, {%r19059, %r19058};
	shr.u64 	%rd4120, %rd3546, 7;
	xor.b64  	%rd4121, %rd4118, %rd4120;
	xor.b64  	%rd4122, %rd4121, %rd4119;
	add.s64 	%rd4123, %rd4034, %rd3533;
	add.s64 	%rd4124, %rd4123, %rd4117;
	add.s64 	%rd4125, %rd4124, %rd4122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19060,%dummy}, %rd4112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19061}, %rd4112;
	}
	shf.r.wrap.b32 	%r19062, %r19061, %r19060, 19;
	shf.r.wrap.b32 	%r19063, %r19060, %r19061, 19;
	mov.b64 	%rd4126, {%r19063, %r19062};
	shf.l.wrap.b32 	%r19064, %r19060, %r19061, 3;
	shf.l.wrap.b32 	%r19065, %r19061, %r19060, 3;
	mov.b64 	%rd4127, {%r19065, %r19064};
	shr.u64 	%rd4128, %rd4112, 6;
	xor.b64  	%rd4129, %rd4126, %rd4128;
	xor.b64  	%rd4130, %rd4129, %rd4127;
	shf.r.wrap.b32 	%r19066, %r18675, %r18674, 1;
	shf.r.wrap.b32 	%r19067, %r18674, %r18675, 1;
	mov.b64 	%rd4131, {%r19067, %r19066};
	shf.r.wrap.b32 	%r19068, %r18675, %r18674, 8;
	shf.r.wrap.b32 	%r19069, %r18674, %r18675, 8;
	mov.b64 	%rd4132, {%r19069, %r19068};
	shr.u64 	%rd4133, %rd3559, 7;
	xor.b64  	%rd4134, %rd4131, %rd4133;
	xor.b64  	%rd4135, %rd4134, %rd4132;
	add.s64 	%rd4136, %rd4047, %rd3546;
	add.s64 	%rd4137, %rd4136, %rd4130;
	add.s64 	%rd4138, %rd4137, %rd4135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19070,%dummy}, %rd4125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19071}, %rd4125;
	}
	shf.r.wrap.b32 	%r19072, %r19071, %r19070, 19;
	shf.r.wrap.b32 	%r19073, %r19070, %r19071, 19;
	mov.b64 	%rd4139, {%r19073, %r19072};
	shf.l.wrap.b32 	%r19074, %r19070, %r19071, 3;
	shf.l.wrap.b32 	%r19075, %r19071, %r19070, 3;
	mov.b64 	%rd4140, {%r19075, %r19074};
	shr.u64 	%rd4141, %rd4125, 6;
	xor.b64  	%rd4142, %rd4139, %rd4141;
	xor.b64  	%rd4143, %rd4142, %rd4140;
	shf.r.wrap.b32 	%r19076, %r18685, %r18684, 1;
	shf.r.wrap.b32 	%r19077, %r18684, %r18685, 1;
	mov.b64 	%rd4144, {%r19077, %r19076};
	shf.r.wrap.b32 	%r19078, %r18685, %r18684, 8;
	shf.r.wrap.b32 	%r19079, %r18684, %r18685, 8;
	mov.b64 	%rd4145, {%r19079, %r19078};
	shr.u64 	%rd4146, %rd3572, 7;
	xor.b64  	%rd4147, %rd4144, %rd4146;
	xor.b64  	%rd4148, %rd4147, %rd4145;
	add.s64 	%rd4149, %rd4060, %rd3559;
	add.s64 	%rd4150, %rd4149, %rd4143;
	add.s64 	%rd4151, %rd4150, %rd4148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19080,%dummy}, %rd4138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19081}, %rd4138;
	}
	shf.r.wrap.b32 	%r19082, %r19081, %r19080, 19;
	shf.r.wrap.b32 	%r19083, %r19080, %r19081, 19;
	mov.b64 	%rd4152, {%r19083, %r19082};
	shf.l.wrap.b32 	%r19084, %r19080, %r19081, 3;
	shf.l.wrap.b32 	%r19085, %r19081, %r19080, 3;
	mov.b64 	%rd4153, {%r19085, %r19084};
	shr.u64 	%rd4154, %rd4138, 6;
	xor.b64  	%rd4155, %rd4152, %rd4154;
	xor.b64  	%rd4156, %rd4155, %rd4153;
	shf.r.wrap.b32 	%r19086, %r18695, %r18694, 1;
	shf.r.wrap.b32 	%r19087, %r18694, %r18695, 1;
	mov.b64 	%rd4157, {%r19087, %r19086};
	shf.r.wrap.b32 	%r19088, %r18695, %r18694, 8;
	shf.r.wrap.b32 	%r19089, %r18694, %r18695, 8;
	mov.b64 	%rd4158, {%r19089, %r19088};
	shr.u64 	%rd4159, %rd3585, 7;
	xor.b64  	%rd4160, %rd4157, %rd4159;
	xor.b64  	%rd4161, %rd4160, %rd4158;
	add.s64 	%rd4162, %rd4073, %rd3572;
	add.s64 	%rd4163, %rd4162, %rd4156;
	add.s64 	%rd4164, %rd4163, %rd4161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19090,%dummy}, %rd4151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19091}, %rd4151;
	}
	shf.r.wrap.b32 	%r19092, %r19091, %r19090, 19;
	shf.r.wrap.b32 	%r19093, %r19090, %r19091, 19;
	mov.b64 	%rd4165, {%r19093, %r19092};
	shf.l.wrap.b32 	%r19094, %r19090, %r19091, 3;
	shf.l.wrap.b32 	%r19095, %r19091, %r19090, 3;
	mov.b64 	%rd4166, {%r19095, %r19094};
	shr.u64 	%rd4167, %rd4151, 6;
	xor.b64  	%rd4168, %rd4165, %rd4167;
	xor.b64  	%rd4169, %rd4168, %rd4166;
	shf.r.wrap.b32 	%r19096, %r18961, %r18960, 1;
	shf.r.wrap.b32 	%r19097, %r18960, %r18961, 1;
	mov.b64 	%rd4170, {%r19097, %r19096};
	shf.r.wrap.b32 	%r19098, %r18961, %r18960, 8;
	shf.r.wrap.b32 	%r19099, %r18960, %r18961, 8;
	mov.b64 	%rd4171, {%r19099, %r19098};
	shr.u64 	%rd4172, %rd3598, 7;
	xor.b64  	%rd4173, %rd4170, %rd4172;
	xor.b64  	%rd4174, %rd4173, %rd4171;
	add.s64 	%rd4175, %rd4086, %rd3585;
	add.s64 	%rd4176, %rd4175, %rd4169;
	add.s64 	%rd4177, %rd4176, %rd4174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19100,%dummy}, %rd4164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19101}, %rd4164;
	}
	shf.r.wrap.b32 	%r19102, %r19101, %r19100, 19;
	shf.r.wrap.b32 	%r19103, %r19100, %r19101, 19;
	mov.b64 	%rd4178, {%r19103, %r19102};
	shf.l.wrap.b32 	%r19104, %r19100, %r19101, 3;
	shf.l.wrap.b32 	%r19105, %r19101, %r19100, 3;
	mov.b64 	%rd4179, {%r19105, %r19104};
	shr.u64 	%rd4180, %rd4164, 6;
	xor.b64  	%rd4181, %rd4178, %rd4180;
	xor.b64  	%rd4182, %rd4181, %rd4179;
	shf.r.wrap.b32 	%r19106, %r18971, %r18970, 1;
	shf.r.wrap.b32 	%r19107, %r18970, %r18971, 1;
	mov.b64 	%rd4183, {%r19107, %r19106};
	shf.r.wrap.b32 	%r19108, %r18971, %r18970, 8;
	shf.r.wrap.b32 	%r19109, %r18970, %r18971, 8;
	mov.b64 	%rd4184, {%r19109, %r19108};
	shr.u64 	%rd4185, %rd3611, 7;
	xor.b64  	%rd4186, %rd4183, %rd4185;
	xor.b64  	%rd4187, %rd4186, %rd4184;
	add.s64 	%rd4188, %rd4099, %rd3598;
	add.s64 	%rd4189, %rd4188, %rd4182;
	add.s64 	%rd4190, %rd4189, %rd4187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19110,%dummy}, %rd4177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19111}, %rd4177;
	}
	shf.r.wrap.b32 	%r19112, %r19111, %r19110, 19;
	shf.r.wrap.b32 	%r19113, %r19110, %r19111, 19;
	mov.b64 	%rd4191, {%r19113, %r19112};
	shf.l.wrap.b32 	%r19114, %r19110, %r19111, 3;
	shf.l.wrap.b32 	%r19115, %r19111, %r19110, 3;
	mov.b64 	%rd4192, {%r19115, %r19114};
	shr.u64 	%rd4193, %rd4177, 6;
	xor.b64  	%rd4194, %rd4191, %rd4193;
	xor.b64  	%rd4195, %rd4194, %rd4192;
	shf.r.wrap.b32 	%r19116, %r18981, %r18980, 1;
	shf.r.wrap.b32 	%r19117, %r18980, %r18981, 1;
	mov.b64 	%rd4196, {%r19117, %r19116};
	shf.r.wrap.b32 	%r19118, %r18981, %r18980, 8;
	shf.r.wrap.b32 	%r19119, %r18980, %r18981, 8;
	mov.b64 	%rd4197, {%r19119, %r19118};
	shr.u64 	%rd4198, %rd4008, 7;
	xor.b64  	%rd4199, %rd4196, %rd4198;
	xor.b64  	%rd4200, %rd4199, %rd4197;
	add.s64 	%rd4201, %rd4112, %rd3611;
	add.s64 	%rd4202, %rd4201, %rd4195;
	add.s64 	%rd4203, %rd4202, %rd4200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19120,%dummy}, %rd3984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19121}, %rd3984;
	}
	shf.r.wrap.b32 	%r19122, %r19121, %r19120, 14;
	shf.r.wrap.b32 	%r19123, %r19120, %r19121, 14;
	mov.b64 	%rd4204, {%r19123, %r19122};
	shf.r.wrap.b32 	%r19124, %r19121, %r19120, 18;
	shf.r.wrap.b32 	%r19125, %r19120, %r19121, 18;
	mov.b64 	%rd4205, {%r19125, %r19124};
	xor.b64  	%rd4206, %rd4205, %rd4204;
	shf.l.wrap.b32 	%r19126, %r19120, %r19121, 23;
	shf.l.wrap.b32 	%r19127, %r19121, %r19120, 23;
	mov.b64 	%rd4207, {%r19127, %r19126};
	xor.b64  	%rd4208, %rd4206, %rd4207;
	xor.b64  	%rd4209, %rd3960, %rd3936;
	and.b64  	%rd4210, %rd4209, %rd3984;
	xor.b64  	%rd4211, %rd4210, %rd3936;
	add.s64 	%rd4212, %rd4211, %rd3912;
	add.s64 	%rd4213, %rd4212, %rd4008;
	add.s64 	%rd4214, %rd4213, %rd34;
	add.s64 	%rd4215, %rd4214, %rd4208;
	add.s64 	%rd4216, %rd4215, %rd3923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19128,%dummy}, %rd3995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19129}, %rd3995;
	}
	shf.r.wrap.b32 	%r19130, %r19129, %r19128, 28;
	shf.r.wrap.b32 	%r19131, %r19128, %r19129, 28;
	mov.b64 	%rd4217, {%r19131, %r19130};
	shf.l.wrap.b32 	%r19132, %r19128, %r19129, 30;
	shf.l.wrap.b32 	%r19133, %r19129, %r19128, 30;
	mov.b64 	%rd4218, {%r19133, %r19132};
	xor.b64  	%rd4219, %rd4218, %rd4217;
	shf.l.wrap.b32 	%r19134, %r19128, %r19129, 25;
	shf.l.wrap.b32 	%r19135, %r19129, %r19128, 25;
	mov.b64 	%rd4220, {%r19135, %r19134};
	xor.b64  	%rd4221, %rd4219, %rd4220;
	xor.b64  	%rd4222, %rd3995, %rd3947;
	xor.b64  	%rd4223, %rd3995, %rd3971;
	and.b64  	%rd4224, %rd4223, %rd4222;
	xor.b64  	%rd4225, %rd4224, %rd3995;
	add.s64 	%rd4226, %rd4215, %rd4225;
	add.s64 	%rd4227, %rd4226, %rd4221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19136,%dummy}, %rd4216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19137}, %rd4216;
	}
	shf.r.wrap.b32 	%r19138, %r19137, %r19136, 14;
	shf.r.wrap.b32 	%r19139, %r19136, %r19137, 14;
	mov.b64 	%rd4228, {%r19139, %r19138};
	shf.r.wrap.b32 	%r19140, %r19137, %r19136, 18;
	shf.r.wrap.b32 	%r19141, %r19136, %r19137, 18;
	mov.b64 	%rd4229, {%r19141, %r19140};
	xor.b64  	%rd4230, %rd4229, %rd4228;
	shf.l.wrap.b32 	%r19142, %r19136, %r19137, 23;
	shf.l.wrap.b32 	%r19143, %r19137, %r19136, 23;
	mov.b64 	%rd4231, {%r19143, %r19142};
	xor.b64  	%rd4232, %rd4230, %rd4231;
	xor.b64  	%rd4233, %rd3984, %rd3960;
	and.b64  	%rd4234, %rd4216, %rd4233;
	xor.b64  	%rd4235, %rd4234, %rd3960;
	add.s64 	%rd4236, %rd4021, %rd3936;
	add.s64 	%rd4237, %rd4236, %rd35;
	add.s64 	%rd4238, %rd4237, %rd4235;
	add.s64 	%rd4239, %rd4238, %rd4232;
	add.s64 	%rd4240, %rd4239, %rd3947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19144,%dummy}, %rd4227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19145}, %rd4227;
	}
	shf.r.wrap.b32 	%r19146, %r19145, %r19144, 28;
	shf.r.wrap.b32 	%r19147, %r19144, %r19145, 28;
	mov.b64 	%rd4241, {%r19147, %r19146};
	shf.l.wrap.b32 	%r19148, %r19144, %r19145, 30;
	shf.l.wrap.b32 	%r19149, %r19145, %r19144, 30;
	mov.b64 	%rd4242, {%r19149, %r19148};
	xor.b64  	%rd4243, %rd4242, %rd4241;
	shf.l.wrap.b32 	%r19150, %r19144, %r19145, 25;
	shf.l.wrap.b32 	%r19151, %r19145, %r19144, 25;
	mov.b64 	%rd4244, {%r19151, %r19150};
	xor.b64  	%rd4245, %rd4243, %rd4244;
	xor.b64  	%rd4246, %rd4227, %rd3971;
	xor.b64  	%rd4247, %rd4227, %rd3995;
	and.b64  	%rd4248, %rd4247, %rd4246;
	xor.b64  	%rd4249, %rd4248, %rd4227;
	add.s64 	%rd4250, %rd4239, %rd4249;
	add.s64 	%rd4251, %rd4250, %rd4245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19152,%dummy}, %rd4240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19153}, %rd4240;
	}
	shf.r.wrap.b32 	%r19154, %r19153, %r19152, 14;
	shf.r.wrap.b32 	%r19155, %r19152, %r19153, 14;
	mov.b64 	%rd4252, {%r19155, %r19154};
	shf.r.wrap.b32 	%r19156, %r19153, %r19152, 18;
	shf.r.wrap.b32 	%r19157, %r19152, %r19153, 18;
	mov.b64 	%rd4253, {%r19157, %r19156};
	xor.b64  	%rd4254, %rd4253, %rd4252;
	shf.l.wrap.b32 	%r19158, %r19152, %r19153, 23;
	shf.l.wrap.b32 	%r19159, %r19153, %r19152, 23;
	mov.b64 	%rd4255, {%r19159, %r19158};
	xor.b64  	%rd4256, %rd4254, %rd4255;
	xor.b64  	%rd4257, %rd4216, %rd3984;
	and.b64  	%rd4258, %rd4240, %rd4257;
	xor.b64  	%rd4259, %rd4258, %rd3984;
	add.s64 	%rd4260, %rd4034, %rd3960;
	add.s64 	%rd4261, %rd4260, %rd36;
	add.s64 	%rd4262, %rd4261, %rd4259;
	add.s64 	%rd4263, %rd4262, %rd4256;
	add.s64 	%rd4264, %rd4263, %rd3971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19160,%dummy}, %rd4251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19161}, %rd4251;
	}
	shf.r.wrap.b32 	%r19162, %r19161, %r19160, 28;
	shf.r.wrap.b32 	%r19163, %r19160, %r19161, 28;
	mov.b64 	%rd4265, {%r19163, %r19162};
	shf.l.wrap.b32 	%r19164, %r19160, %r19161, 30;
	shf.l.wrap.b32 	%r19165, %r19161, %r19160, 30;
	mov.b64 	%rd4266, {%r19165, %r19164};
	xor.b64  	%rd4267, %rd4266, %rd4265;
	shf.l.wrap.b32 	%r19166, %r19160, %r19161, 25;
	shf.l.wrap.b32 	%r19167, %r19161, %r19160, 25;
	mov.b64 	%rd4268, {%r19167, %r19166};
	xor.b64  	%rd4269, %rd4267, %rd4268;
	xor.b64  	%rd4270, %rd4251, %rd3995;
	xor.b64  	%rd4271, %rd4251, %rd4227;
	and.b64  	%rd4272, %rd4271, %rd4270;
	xor.b64  	%rd4273, %rd4272, %rd4251;
	add.s64 	%rd4274, %rd4263, %rd4273;
	add.s64 	%rd4275, %rd4274, %rd4269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19168,%dummy}, %rd4264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19169}, %rd4264;
	}
	shf.r.wrap.b32 	%r19170, %r19169, %r19168, 14;
	shf.r.wrap.b32 	%r19171, %r19168, %r19169, 14;
	mov.b64 	%rd4276, {%r19171, %r19170};
	shf.r.wrap.b32 	%r19172, %r19169, %r19168, 18;
	shf.r.wrap.b32 	%r19173, %r19168, %r19169, 18;
	mov.b64 	%rd4277, {%r19173, %r19172};
	xor.b64  	%rd4278, %rd4277, %rd4276;
	shf.l.wrap.b32 	%r19174, %r19168, %r19169, 23;
	shf.l.wrap.b32 	%r19175, %r19169, %r19168, 23;
	mov.b64 	%rd4279, {%r19175, %r19174};
	xor.b64  	%rd4280, %rd4278, %rd4279;
	xor.b64  	%rd4281, %rd4240, %rd4216;
	and.b64  	%rd4282, %rd4264, %rd4281;
	xor.b64  	%rd4283, %rd4282, %rd4216;
	add.s64 	%rd4284, %rd4047, %rd3984;
	add.s64 	%rd4285, %rd4284, %rd37;
	add.s64 	%rd4286, %rd4285, %rd4283;
	add.s64 	%rd4287, %rd4286, %rd4280;
	add.s64 	%rd4288, %rd4287, %rd3995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19176,%dummy}, %rd4275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19177}, %rd4275;
	}
	shf.r.wrap.b32 	%r19178, %r19177, %r19176, 28;
	shf.r.wrap.b32 	%r19179, %r19176, %r19177, 28;
	mov.b64 	%rd4289, {%r19179, %r19178};
	shf.l.wrap.b32 	%r19180, %r19176, %r19177, 30;
	shf.l.wrap.b32 	%r19181, %r19177, %r19176, 30;
	mov.b64 	%rd4290, {%r19181, %r19180};
	xor.b64  	%rd4291, %rd4290, %rd4289;
	shf.l.wrap.b32 	%r19182, %r19176, %r19177, 25;
	shf.l.wrap.b32 	%r19183, %r19177, %r19176, 25;
	mov.b64 	%rd4292, {%r19183, %r19182};
	xor.b64  	%rd4293, %rd4291, %rd4292;
	xor.b64  	%rd4294, %rd4275, %rd4227;
	xor.b64  	%rd4295, %rd4275, %rd4251;
	and.b64  	%rd4296, %rd4295, %rd4294;
	xor.b64  	%rd4297, %rd4296, %rd4275;
	add.s64 	%rd4298, %rd4287, %rd4297;
	add.s64 	%rd4299, %rd4298, %rd4293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19184,%dummy}, %rd4288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19185}, %rd4288;
	}
	shf.r.wrap.b32 	%r19186, %r19185, %r19184, 14;
	shf.r.wrap.b32 	%r19187, %r19184, %r19185, 14;
	mov.b64 	%rd4300, {%r19187, %r19186};
	shf.r.wrap.b32 	%r19188, %r19185, %r19184, 18;
	shf.r.wrap.b32 	%r19189, %r19184, %r19185, 18;
	mov.b64 	%rd4301, {%r19189, %r19188};
	xor.b64  	%rd4302, %rd4301, %rd4300;
	shf.l.wrap.b32 	%r19190, %r19184, %r19185, 23;
	shf.l.wrap.b32 	%r19191, %r19185, %r19184, 23;
	mov.b64 	%rd4303, {%r19191, %r19190};
	xor.b64  	%rd4304, %rd4302, %rd4303;
	xor.b64  	%rd4305, %rd4264, %rd4240;
	and.b64  	%rd4306, %rd4288, %rd4305;
	xor.b64  	%rd4307, %rd4306, %rd4240;
	add.s64 	%rd4308, %rd4216, %rd4060;
	add.s64 	%rd4309, %rd4308, %rd38;
	add.s64 	%rd4310, %rd4309, %rd4307;
	add.s64 	%rd4311, %rd4310, %rd4304;
	add.s64 	%rd4312, %rd4311, %rd4227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19192,%dummy}, %rd4299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19193}, %rd4299;
	}
	shf.r.wrap.b32 	%r19194, %r19193, %r19192, 28;
	shf.r.wrap.b32 	%r19195, %r19192, %r19193, 28;
	mov.b64 	%rd4313, {%r19195, %r19194};
	shf.l.wrap.b32 	%r19196, %r19192, %r19193, 30;
	shf.l.wrap.b32 	%r19197, %r19193, %r19192, 30;
	mov.b64 	%rd4314, {%r19197, %r19196};
	xor.b64  	%rd4315, %rd4314, %rd4313;
	shf.l.wrap.b32 	%r19198, %r19192, %r19193, 25;
	shf.l.wrap.b32 	%r19199, %r19193, %r19192, 25;
	mov.b64 	%rd4316, {%r19199, %r19198};
	xor.b64  	%rd4317, %rd4315, %rd4316;
	xor.b64  	%rd4318, %rd4299, %rd4251;
	xor.b64  	%rd4319, %rd4299, %rd4275;
	and.b64  	%rd4320, %rd4319, %rd4318;
	xor.b64  	%rd4321, %rd4320, %rd4299;
	add.s64 	%rd4322, %rd4311, %rd4321;
	add.s64 	%rd4323, %rd4322, %rd4317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19200,%dummy}, %rd4312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19201}, %rd4312;
	}
	shf.r.wrap.b32 	%r19202, %r19201, %r19200, 14;
	shf.r.wrap.b32 	%r19203, %r19200, %r19201, 14;
	mov.b64 	%rd4324, {%r19203, %r19202};
	shf.r.wrap.b32 	%r19204, %r19201, %r19200, 18;
	shf.r.wrap.b32 	%r19205, %r19200, %r19201, 18;
	mov.b64 	%rd4325, {%r19205, %r19204};
	xor.b64  	%rd4326, %rd4325, %rd4324;
	shf.l.wrap.b32 	%r19206, %r19200, %r19201, 23;
	shf.l.wrap.b32 	%r19207, %r19201, %r19200, 23;
	mov.b64 	%rd4327, {%r19207, %r19206};
	xor.b64  	%rd4328, %rd4326, %rd4327;
	xor.b64  	%rd4329, %rd4288, %rd4264;
	and.b64  	%rd4330, %rd4312, %rd4329;
	xor.b64  	%rd4331, %rd4330, %rd4264;
	add.s64 	%rd4332, %rd4240, %rd4073;
	add.s64 	%rd4333, %rd4332, %rd39;
	add.s64 	%rd4334, %rd4333, %rd4331;
	add.s64 	%rd4335, %rd4334, %rd4328;
	add.s64 	%rd4336, %rd4335, %rd4251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19208,%dummy}, %rd4323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19209}, %rd4323;
	}
	shf.r.wrap.b32 	%r19210, %r19209, %r19208, 28;
	shf.r.wrap.b32 	%r19211, %r19208, %r19209, 28;
	mov.b64 	%rd4337, {%r19211, %r19210};
	shf.l.wrap.b32 	%r19212, %r19208, %r19209, 30;
	shf.l.wrap.b32 	%r19213, %r19209, %r19208, 30;
	mov.b64 	%rd4338, {%r19213, %r19212};
	xor.b64  	%rd4339, %rd4338, %rd4337;
	shf.l.wrap.b32 	%r19214, %r19208, %r19209, 25;
	shf.l.wrap.b32 	%r19215, %r19209, %r19208, 25;
	mov.b64 	%rd4340, {%r19215, %r19214};
	xor.b64  	%rd4341, %rd4339, %rd4340;
	xor.b64  	%rd4342, %rd4323, %rd4275;
	xor.b64  	%rd4343, %rd4323, %rd4299;
	and.b64  	%rd4344, %rd4343, %rd4342;
	xor.b64  	%rd4345, %rd4344, %rd4323;
	add.s64 	%rd4346, %rd4335, %rd4345;
	add.s64 	%rd4347, %rd4346, %rd4341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19216,%dummy}, %rd4336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19217}, %rd4336;
	}
	shf.r.wrap.b32 	%r19218, %r19217, %r19216, 14;
	shf.r.wrap.b32 	%r19219, %r19216, %r19217, 14;
	mov.b64 	%rd4348, {%r19219, %r19218};
	shf.r.wrap.b32 	%r19220, %r19217, %r19216, 18;
	shf.r.wrap.b32 	%r19221, %r19216, %r19217, 18;
	mov.b64 	%rd4349, {%r19221, %r19220};
	xor.b64  	%rd4350, %rd4349, %rd4348;
	shf.l.wrap.b32 	%r19222, %r19216, %r19217, 23;
	shf.l.wrap.b32 	%r19223, %r19217, %r19216, 23;
	mov.b64 	%rd4351, {%r19223, %r19222};
	xor.b64  	%rd4352, %rd4350, %rd4351;
	xor.b64  	%rd4353, %rd4312, %rd4288;
	and.b64  	%rd4354, %rd4336, %rd4353;
	xor.b64  	%rd4355, %rd4354, %rd4288;
	add.s64 	%rd4356, %rd4264, %rd4086;
	add.s64 	%rd4357, %rd4356, %rd40;
	add.s64 	%rd4358, %rd4357, %rd4355;
	add.s64 	%rd4359, %rd4358, %rd4352;
	add.s64 	%rd4360, %rd4359, %rd4275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19224,%dummy}, %rd4347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19225}, %rd4347;
	}
	shf.r.wrap.b32 	%r19226, %r19225, %r19224, 28;
	shf.r.wrap.b32 	%r19227, %r19224, %r19225, 28;
	mov.b64 	%rd4361, {%r19227, %r19226};
	shf.l.wrap.b32 	%r19228, %r19224, %r19225, 30;
	shf.l.wrap.b32 	%r19229, %r19225, %r19224, 30;
	mov.b64 	%rd4362, {%r19229, %r19228};
	xor.b64  	%rd4363, %rd4362, %rd4361;
	shf.l.wrap.b32 	%r19230, %r19224, %r19225, 25;
	shf.l.wrap.b32 	%r19231, %r19225, %r19224, 25;
	mov.b64 	%rd4364, {%r19231, %r19230};
	xor.b64  	%rd4365, %rd4363, %rd4364;
	xor.b64  	%rd4366, %rd4347, %rd4299;
	xor.b64  	%rd4367, %rd4347, %rd4323;
	and.b64  	%rd4368, %rd4367, %rd4366;
	xor.b64  	%rd4369, %rd4368, %rd4347;
	add.s64 	%rd4370, %rd4359, %rd4369;
	add.s64 	%rd4371, %rd4370, %rd4365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19232,%dummy}, %rd4360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19233}, %rd4360;
	}
	shf.r.wrap.b32 	%r19234, %r19233, %r19232, 14;
	shf.r.wrap.b32 	%r19235, %r19232, %r19233, 14;
	mov.b64 	%rd4372, {%r19235, %r19234};
	shf.r.wrap.b32 	%r19236, %r19233, %r19232, 18;
	shf.r.wrap.b32 	%r19237, %r19232, %r19233, 18;
	mov.b64 	%rd4373, {%r19237, %r19236};
	xor.b64  	%rd4374, %rd4373, %rd4372;
	shf.l.wrap.b32 	%r19238, %r19232, %r19233, 23;
	shf.l.wrap.b32 	%r19239, %r19233, %r19232, 23;
	mov.b64 	%rd4375, {%r19239, %r19238};
	xor.b64  	%rd4376, %rd4374, %rd4375;
	xor.b64  	%rd4377, %rd4336, %rd4312;
	and.b64  	%rd4378, %rd4360, %rd4377;
	xor.b64  	%rd4379, %rd4378, %rd4312;
	add.s64 	%rd4380, %rd4288, %rd4099;
	add.s64 	%rd4381, %rd4380, %rd41;
	add.s64 	%rd4382, %rd4381, %rd4379;
	add.s64 	%rd4383, %rd4382, %rd4376;
	add.s64 	%rd4384, %rd4383, %rd4299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19240,%dummy}, %rd4371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19241}, %rd4371;
	}
	shf.r.wrap.b32 	%r19242, %r19241, %r19240, 28;
	shf.r.wrap.b32 	%r19243, %r19240, %r19241, 28;
	mov.b64 	%rd4385, {%r19243, %r19242};
	shf.l.wrap.b32 	%r19244, %r19240, %r19241, 30;
	shf.l.wrap.b32 	%r19245, %r19241, %r19240, 30;
	mov.b64 	%rd4386, {%r19245, %r19244};
	xor.b64  	%rd4387, %rd4386, %rd4385;
	shf.l.wrap.b32 	%r19246, %r19240, %r19241, 25;
	shf.l.wrap.b32 	%r19247, %r19241, %r19240, 25;
	mov.b64 	%rd4388, {%r19247, %r19246};
	xor.b64  	%rd4389, %rd4387, %rd4388;
	xor.b64  	%rd4390, %rd4371, %rd4323;
	xor.b64  	%rd4391, %rd4371, %rd4347;
	and.b64  	%rd4392, %rd4391, %rd4390;
	xor.b64  	%rd4393, %rd4392, %rd4371;
	add.s64 	%rd4394, %rd4383, %rd4393;
	add.s64 	%rd4395, %rd4394, %rd4389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19248,%dummy}, %rd4384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19249}, %rd4384;
	}
	shf.r.wrap.b32 	%r19250, %r19249, %r19248, 14;
	shf.r.wrap.b32 	%r19251, %r19248, %r19249, 14;
	mov.b64 	%rd4396, {%r19251, %r19250};
	shf.r.wrap.b32 	%r19252, %r19249, %r19248, 18;
	shf.r.wrap.b32 	%r19253, %r19248, %r19249, 18;
	mov.b64 	%rd4397, {%r19253, %r19252};
	xor.b64  	%rd4398, %rd4397, %rd4396;
	shf.l.wrap.b32 	%r19254, %r19248, %r19249, 23;
	shf.l.wrap.b32 	%r19255, %r19249, %r19248, 23;
	mov.b64 	%rd4399, {%r19255, %r19254};
	xor.b64  	%rd4400, %rd4398, %rd4399;
	xor.b64  	%rd4401, %rd4360, %rd4336;
	and.b64  	%rd4402, %rd4384, %rd4401;
	xor.b64  	%rd4403, %rd4402, %rd4336;
	add.s64 	%rd4404, %rd4312, %rd4112;
	add.s64 	%rd4405, %rd4404, %rd42;
	add.s64 	%rd4406, %rd4405, %rd4403;
	add.s64 	%rd4407, %rd4406, %rd4400;
	add.s64 	%rd4408, %rd4407, %rd4323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19256,%dummy}, %rd4395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19257}, %rd4395;
	}
	shf.r.wrap.b32 	%r19258, %r19257, %r19256, 28;
	shf.r.wrap.b32 	%r19259, %r19256, %r19257, 28;
	mov.b64 	%rd4409, {%r19259, %r19258};
	shf.l.wrap.b32 	%r19260, %r19256, %r19257, 30;
	shf.l.wrap.b32 	%r19261, %r19257, %r19256, 30;
	mov.b64 	%rd4410, {%r19261, %r19260};
	xor.b64  	%rd4411, %rd4410, %rd4409;
	shf.l.wrap.b32 	%r19262, %r19256, %r19257, 25;
	shf.l.wrap.b32 	%r19263, %r19257, %r19256, 25;
	mov.b64 	%rd4412, {%r19263, %r19262};
	xor.b64  	%rd4413, %rd4411, %rd4412;
	xor.b64  	%rd4414, %rd4395, %rd4347;
	xor.b64  	%rd4415, %rd4395, %rd4371;
	and.b64  	%rd4416, %rd4415, %rd4414;
	xor.b64  	%rd4417, %rd4416, %rd4395;
	add.s64 	%rd4418, %rd4407, %rd4417;
	add.s64 	%rd4419, %rd4418, %rd4413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19264,%dummy}, %rd4408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19265}, %rd4408;
	}
	shf.r.wrap.b32 	%r19266, %r19265, %r19264, 14;
	shf.r.wrap.b32 	%r19267, %r19264, %r19265, 14;
	mov.b64 	%rd4420, {%r19267, %r19266};
	shf.r.wrap.b32 	%r19268, %r19265, %r19264, 18;
	shf.r.wrap.b32 	%r19269, %r19264, %r19265, 18;
	mov.b64 	%rd4421, {%r19269, %r19268};
	xor.b64  	%rd4422, %rd4421, %rd4420;
	shf.l.wrap.b32 	%r19270, %r19264, %r19265, 23;
	shf.l.wrap.b32 	%r19271, %r19265, %r19264, 23;
	mov.b64 	%rd4423, {%r19271, %r19270};
	xor.b64  	%rd4424, %rd4422, %rd4423;
	xor.b64  	%rd4425, %rd4384, %rd4360;
	and.b64  	%rd4426, %rd4408, %rd4425;
	xor.b64  	%rd4427, %rd4426, %rd4360;
	add.s64 	%rd4428, %rd4336, %rd4125;
	add.s64 	%rd4429, %rd4428, %rd43;
	add.s64 	%rd4430, %rd4429, %rd4427;
	add.s64 	%rd4431, %rd4430, %rd4424;
	add.s64 	%rd4432, %rd4431, %rd4347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19272,%dummy}, %rd4419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19273}, %rd4419;
	}
	shf.r.wrap.b32 	%r19274, %r19273, %r19272, 28;
	shf.r.wrap.b32 	%r19275, %r19272, %r19273, 28;
	mov.b64 	%rd4433, {%r19275, %r19274};
	shf.l.wrap.b32 	%r19276, %r19272, %r19273, 30;
	shf.l.wrap.b32 	%r19277, %r19273, %r19272, 30;
	mov.b64 	%rd4434, {%r19277, %r19276};
	xor.b64  	%rd4435, %rd4434, %rd4433;
	shf.l.wrap.b32 	%r19278, %r19272, %r19273, 25;
	shf.l.wrap.b32 	%r19279, %r19273, %r19272, 25;
	mov.b64 	%rd4436, {%r19279, %r19278};
	xor.b64  	%rd4437, %rd4435, %rd4436;
	xor.b64  	%rd4438, %rd4419, %rd4371;
	xor.b64  	%rd4439, %rd4419, %rd4395;
	and.b64  	%rd4440, %rd4439, %rd4438;
	xor.b64  	%rd4441, %rd4440, %rd4419;
	add.s64 	%rd4442, %rd4431, %rd4441;
	add.s64 	%rd4443, %rd4442, %rd4437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19280,%dummy}, %rd4432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19281}, %rd4432;
	}
	shf.r.wrap.b32 	%r19282, %r19281, %r19280, 14;
	shf.r.wrap.b32 	%r19283, %r19280, %r19281, 14;
	mov.b64 	%rd4444, {%r19283, %r19282};
	shf.r.wrap.b32 	%r19284, %r19281, %r19280, 18;
	shf.r.wrap.b32 	%r19285, %r19280, %r19281, 18;
	mov.b64 	%rd4445, {%r19285, %r19284};
	xor.b64  	%rd4446, %rd4445, %rd4444;
	shf.l.wrap.b32 	%r19286, %r19280, %r19281, 23;
	shf.l.wrap.b32 	%r19287, %r19281, %r19280, 23;
	mov.b64 	%rd4447, {%r19287, %r19286};
	xor.b64  	%rd4448, %rd4446, %rd4447;
	xor.b64  	%rd4449, %rd4408, %rd4384;
	and.b64  	%rd4450, %rd4432, %rd4449;
	xor.b64  	%rd4451, %rd4450, %rd4384;
	add.s64 	%rd4452, %rd4360, %rd4138;
	add.s64 	%rd4453, %rd4452, %rd44;
	add.s64 	%rd4454, %rd4453, %rd4451;
	add.s64 	%rd4455, %rd4454, %rd4448;
	add.s64 	%rd4456, %rd4455, %rd4371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19288,%dummy}, %rd4443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19289}, %rd4443;
	}
	shf.r.wrap.b32 	%r19290, %r19289, %r19288, 28;
	shf.r.wrap.b32 	%r19291, %r19288, %r19289, 28;
	mov.b64 	%rd4457, {%r19291, %r19290};
	shf.l.wrap.b32 	%r19292, %r19288, %r19289, 30;
	shf.l.wrap.b32 	%r19293, %r19289, %r19288, 30;
	mov.b64 	%rd4458, {%r19293, %r19292};
	xor.b64  	%rd4459, %rd4458, %rd4457;
	shf.l.wrap.b32 	%r19294, %r19288, %r19289, 25;
	shf.l.wrap.b32 	%r19295, %r19289, %r19288, 25;
	mov.b64 	%rd4460, {%r19295, %r19294};
	xor.b64  	%rd4461, %rd4459, %rd4460;
	xor.b64  	%rd4462, %rd4443, %rd4395;
	xor.b64  	%rd4463, %rd4443, %rd4419;
	and.b64  	%rd4464, %rd4463, %rd4462;
	xor.b64  	%rd4465, %rd4464, %rd4443;
	add.s64 	%rd4466, %rd4455, %rd4465;
	add.s64 	%rd4467, %rd4466, %rd4461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19296,%dummy}, %rd4456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19297}, %rd4456;
	}
	shf.r.wrap.b32 	%r19298, %r19297, %r19296, 14;
	shf.r.wrap.b32 	%r19299, %r19296, %r19297, 14;
	mov.b64 	%rd4468, {%r19299, %r19298};
	shf.r.wrap.b32 	%r19300, %r19297, %r19296, 18;
	shf.r.wrap.b32 	%r19301, %r19296, %r19297, 18;
	mov.b64 	%rd4469, {%r19301, %r19300};
	xor.b64  	%rd4470, %rd4469, %rd4468;
	shf.l.wrap.b32 	%r19302, %r19296, %r19297, 23;
	shf.l.wrap.b32 	%r19303, %r19297, %r19296, 23;
	mov.b64 	%rd4471, {%r19303, %r19302};
	xor.b64  	%rd4472, %rd4470, %rd4471;
	xor.b64  	%rd4473, %rd4432, %rd4408;
	and.b64  	%rd4474, %rd4456, %rd4473;
	xor.b64  	%rd4475, %rd4474, %rd4408;
	add.s64 	%rd4476, %rd4384, %rd4151;
	add.s64 	%rd4477, %rd4476, %rd45;
	add.s64 	%rd4478, %rd4477, %rd4475;
	add.s64 	%rd4479, %rd4478, %rd4472;
	add.s64 	%rd4480, %rd4479, %rd4395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19304,%dummy}, %rd4467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19305}, %rd4467;
	}
	shf.r.wrap.b32 	%r19306, %r19305, %r19304, 28;
	shf.r.wrap.b32 	%r19307, %r19304, %r19305, 28;
	mov.b64 	%rd4481, {%r19307, %r19306};
	shf.l.wrap.b32 	%r19308, %r19304, %r19305, 30;
	shf.l.wrap.b32 	%r19309, %r19305, %r19304, 30;
	mov.b64 	%rd4482, {%r19309, %r19308};
	xor.b64  	%rd4483, %rd4482, %rd4481;
	shf.l.wrap.b32 	%r19310, %r19304, %r19305, 25;
	shf.l.wrap.b32 	%r19311, %r19305, %r19304, 25;
	mov.b64 	%rd4484, {%r19311, %r19310};
	xor.b64  	%rd4485, %rd4483, %rd4484;
	xor.b64  	%rd4486, %rd4467, %rd4419;
	xor.b64  	%rd4487, %rd4467, %rd4443;
	and.b64  	%rd4488, %rd4487, %rd4486;
	xor.b64  	%rd4489, %rd4488, %rd4467;
	add.s64 	%rd4490, %rd4479, %rd4489;
	add.s64 	%rd4491, %rd4490, %rd4485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19312,%dummy}, %rd4480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19313}, %rd4480;
	}
	shf.r.wrap.b32 	%r19314, %r19313, %r19312, 14;
	shf.r.wrap.b32 	%r19315, %r19312, %r19313, 14;
	mov.b64 	%rd4492, {%r19315, %r19314};
	shf.r.wrap.b32 	%r19316, %r19313, %r19312, 18;
	shf.r.wrap.b32 	%r19317, %r19312, %r19313, 18;
	mov.b64 	%rd4493, {%r19317, %r19316};
	xor.b64  	%rd4494, %rd4493, %rd4492;
	shf.l.wrap.b32 	%r19318, %r19312, %r19313, 23;
	shf.l.wrap.b32 	%r19319, %r19313, %r19312, 23;
	mov.b64 	%rd4495, {%r19319, %r19318};
	xor.b64  	%rd4496, %rd4494, %rd4495;
	xor.b64  	%rd4497, %rd4456, %rd4432;
	and.b64  	%rd4498, %rd4480, %rd4497;
	xor.b64  	%rd4499, %rd4498, %rd4432;
	add.s64 	%rd4500, %rd4408, %rd4164;
	add.s64 	%rd4501, %rd4500, %rd46;
	add.s64 	%rd4502, %rd4501, %rd4499;
	add.s64 	%rd4503, %rd4502, %rd4496;
	add.s64 	%rd4504, %rd4503, %rd4419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19320,%dummy}, %rd4491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19321}, %rd4491;
	}
	shf.r.wrap.b32 	%r19322, %r19321, %r19320, 28;
	shf.r.wrap.b32 	%r19323, %r19320, %r19321, 28;
	mov.b64 	%rd4505, {%r19323, %r19322};
	shf.l.wrap.b32 	%r19324, %r19320, %r19321, 30;
	shf.l.wrap.b32 	%r19325, %r19321, %r19320, 30;
	mov.b64 	%rd4506, {%r19325, %r19324};
	xor.b64  	%rd4507, %rd4506, %rd4505;
	shf.l.wrap.b32 	%r19326, %r19320, %r19321, 25;
	shf.l.wrap.b32 	%r19327, %r19321, %r19320, 25;
	mov.b64 	%rd4508, {%r19327, %r19326};
	xor.b64  	%rd4509, %rd4507, %rd4508;
	xor.b64  	%rd4510, %rd4491, %rd4443;
	xor.b64  	%rd4511, %rd4491, %rd4467;
	and.b64  	%rd4512, %rd4511, %rd4510;
	xor.b64  	%rd4513, %rd4512, %rd4491;
	add.s64 	%rd4514, %rd4503, %rd4513;
	add.s64 	%rd4515, %rd4514, %rd4509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19328,%dummy}, %rd4504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19329}, %rd4504;
	}
	shf.r.wrap.b32 	%r19330, %r19329, %r19328, 14;
	shf.r.wrap.b32 	%r19331, %r19328, %r19329, 14;
	mov.b64 	%rd4516, {%r19331, %r19330};
	shf.r.wrap.b32 	%r19332, %r19329, %r19328, 18;
	shf.r.wrap.b32 	%r19333, %r19328, %r19329, 18;
	mov.b64 	%rd4517, {%r19333, %r19332};
	xor.b64  	%rd4518, %rd4517, %rd4516;
	shf.l.wrap.b32 	%r19334, %r19328, %r19329, 23;
	shf.l.wrap.b32 	%r19335, %r19329, %r19328, 23;
	mov.b64 	%rd4519, {%r19335, %r19334};
	xor.b64  	%rd4520, %rd4518, %rd4519;
	xor.b64  	%rd4521, %rd4480, %rd4456;
	and.b64  	%rd4522, %rd4504, %rd4521;
	xor.b64  	%rd4523, %rd4522, %rd4456;
	add.s64 	%rd4524, %rd4432, %rd4177;
	add.s64 	%rd4525, %rd4524, %rd47;
	add.s64 	%rd4526, %rd4525, %rd4523;
	add.s64 	%rd4527, %rd4526, %rd4520;
	add.s64 	%rd4528, %rd4527, %rd4443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19336,%dummy}, %rd4515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19337}, %rd4515;
	}
	shf.r.wrap.b32 	%r19338, %r19337, %r19336, 28;
	shf.r.wrap.b32 	%r19339, %r19336, %r19337, 28;
	mov.b64 	%rd4529, {%r19339, %r19338};
	shf.l.wrap.b32 	%r19340, %r19336, %r19337, 30;
	shf.l.wrap.b32 	%r19341, %r19337, %r19336, 30;
	mov.b64 	%rd4530, {%r19341, %r19340};
	xor.b64  	%rd4531, %rd4530, %rd4529;
	shf.l.wrap.b32 	%r19342, %r19336, %r19337, 25;
	shf.l.wrap.b32 	%r19343, %r19337, %r19336, 25;
	mov.b64 	%rd4532, {%r19343, %r19342};
	xor.b64  	%rd4533, %rd4531, %rd4532;
	xor.b64  	%rd4534, %rd4515, %rd4467;
	xor.b64  	%rd4535, %rd4515, %rd4491;
	and.b64  	%rd4536, %rd4535, %rd4534;
	xor.b64  	%rd4537, %rd4536, %rd4515;
	add.s64 	%rd4538, %rd4527, %rd4537;
	add.s64 	%rd4539, %rd4538, %rd4533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19344,%dummy}, %rd4528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19345}, %rd4528;
	}
	shf.r.wrap.b32 	%r19346, %r19345, %r19344, 14;
	shf.r.wrap.b32 	%r19347, %r19344, %r19345, 14;
	mov.b64 	%rd4540, {%r19347, %r19346};
	shf.r.wrap.b32 	%r19348, %r19345, %r19344, 18;
	shf.r.wrap.b32 	%r19349, %r19344, %r19345, 18;
	mov.b64 	%rd4541, {%r19349, %r19348};
	xor.b64  	%rd4542, %rd4541, %rd4540;
	shf.l.wrap.b32 	%r19350, %r19344, %r19345, 23;
	shf.l.wrap.b32 	%r19351, %r19345, %r19344, 23;
	mov.b64 	%rd4543, {%r19351, %r19350};
	xor.b64  	%rd4544, %rd4542, %rd4543;
	xor.b64  	%rd4545, %rd4504, %rd4480;
	and.b64  	%rd4546, %rd4528, %rd4545;
	xor.b64  	%rd4547, %rd4546, %rd4480;
	add.s64 	%rd4548, %rd4456, %rd4190;
	add.s64 	%rd4549, %rd4548, %rd48;
	add.s64 	%rd4550, %rd4549, %rd4547;
	add.s64 	%rd4551, %rd4550, %rd4544;
	add.s64 	%rd4552, %rd4551, %rd4467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19352,%dummy}, %rd4539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19353}, %rd4539;
	}
	shf.r.wrap.b32 	%r19354, %r19353, %r19352, 28;
	shf.r.wrap.b32 	%r19355, %r19352, %r19353, 28;
	mov.b64 	%rd4553, {%r19355, %r19354};
	shf.l.wrap.b32 	%r19356, %r19352, %r19353, 30;
	shf.l.wrap.b32 	%r19357, %r19353, %r19352, 30;
	mov.b64 	%rd4554, {%r19357, %r19356};
	xor.b64  	%rd4555, %rd4554, %rd4553;
	shf.l.wrap.b32 	%r19358, %r19352, %r19353, 25;
	shf.l.wrap.b32 	%r19359, %r19353, %r19352, 25;
	mov.b64 	%rd4556, {%r19359, %r19358};
	xor.b64  	%rd4557, %rd4555, %rd4556;
	xor.b64  	%rd4558, %rd4539, %rd4491;
	xor.b64  	%rd4559, %rd4539, %rd4515;
	and.b64  	%rd4560, %rd4559, %rd4558;
	xor.b64  	%rd4561, %rd4560, %rd4539;
	add.s64 	%rd4562, %rd4551, %rd4561;
	add.s64 	%rd4563, %rd4562, %rd4557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19360,%dummy}, %rd4552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19361}, %rd4552;
	}
	shf.r.wrap.b32 	%r19362, %r19361, %r19360, 14;
	shf.r.wrap.b32 	%r19363, %r19360, %r19361, 14;
	mov.b64 	%rd4564, {%r19363, %r19362};
	shf.r.wrap.b32 	%r19364, %r19361, %r19360, 18;
	shf.r.wrap.b32 	%r19365, %r19360, %r19361, 18;
	mov.b64 	%rd4565, {%r19365, %r19364};
	xor.b64  	%rd4566, %rd4565, %rd4564;
	shf.l.wrap.b32 	%r19366, %r19360, %r19361, 23;
	shf.l.wrap.b32 	%r19367, %r19361, %r19360, 23;
	mov.b64 	%rd4567, {%r19367, %r19366};
	xor.b64  	%rd4568, %rd4566, %rd4567;
	xor.b64  	%rd4569, %rd4528, %rd4504;
	and.b64  	%rd4570, %rd4552, %rd4569;
	xor.b64  	%rd4571, %rd4570, %rd4504;
	add.s64 	%rd4572, %rd4480, %rd4203;
	add.s64 	%rd4573, %rd4572, %rd49;
	add.s64 	%rd4574, %rd4573, %rd4571;
	add.s64 	%rd4575, %rd4574, %rd4568;
	add.s64 	%rd4576, %rd4575, %rd4491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19368,%dummy}, %rd4563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19369}, %rd4563;
	}
	shf.r.wrap.b32 	%r19370, %r19369, %r19368, 28;
	shf.r.wrap.b32 	%r19371, %r19368, %r19369, 28;
	mov.b64 	%rd4577, {%r19371, %r19370};
	shf.l.wrap.b32 	%r19372, %r19368, %r19369, 30;
	shf.l.wrap.b32 	%r19373, %r19369, %r19368, 30;
	mov.b64 	%rd4578, {%r19373, %r19372};
	xor.b64  	%rd4579, %rd4578, %rd4577;
	shf.l.wrap.b32 	%r19374, %r19368, %r19369, 25;
	shf.l.wrap.b32 	%r19375, %r19369, %r19368, 25;
	mov.b64 	%rd4580, {%r19375, %r19374};
	xor.b64  	%rd4581, %rd4579, %rd4580;
	xor.b64  	%rd4582, %rd4563, %rd4515;
	xor.b64  	%rd4583, %rd4563, %rd4539;
	and.b64  	%rd4584, %rd4583, %rd4582;
	xor.b64  	%rd4585, %rd4584, %rd4563;
	add.s64 	%rd4586, %rd4575, %rd4585;
	add.s64 	%rd4587, %rd4586, %rd4581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19376,%dummy}, %rd4190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19377}, %rd4190;
	}
	shf.r.wrap.b32 	%r19378, %r19377, %r19376, 19;
	shf.r.wrap.b32 	%r19379, %r19376, %r19377, 19;
	mov.b64 	%rd4588, {%r19379, %r19378};
	shf.l.wrap.b32 	%r19380, %r19376, %r19377, 3;
	shf.l.wrap.b32 	%r19381, %r19377, %r19376, 3;
	mov.b64 	%rd4589, {%r19381, %r19380};
	shr.u64 	%rd4590, %rd4190, 6;
	xor.b64  	%rd4591, %rd4588, %rd4590;
	xor.b64  	%rd4592, %rd4591, %rd4589;
	shf.r.wrap.b32 	%r19382, %r18991, %r18990, 1;
	shf.r.wrap.b32 	%r19383, %r18990, %r18991, 1;
	mov.b64 	%rd4593, {%r19383, %r19382};
	shf.r.wrap.b32 	%r19384, %r18991, %r18990, 8;
	shf.r.wrap.b32 	%r19385, %r18990, %r18991, 8;
	mov.b64 	%rd4594, {%r19385, %r19384};
	shr.u64 	%rd4595, %rd4021, 7;
	xor.b64  	%rd4596, %rd4593, %rd4595;
	xor.b64  	%rd4597, %rd4596, %rd4594;
	add.s64 	%rd4598, %rd4125, %rd4008;
	add.s64 	%rd4599, %rd4598, %rd4592;
	add.s64 	%rd4600, %rd4599, %rd4597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19386,%dummy}, %rd4203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19387}, %rd4203;
	}
	shf.r.wrap.b32 	%r19388, %r19387, %r19386, 19;
	shf.r.wrap.b32 	%r19389, %r19386, %r19387, 19;
	mov.b64 	%rd4601, {%r19389, %r19388};
	shf.l.wrap.b32 	%r19390, %r19386, %r19387, 3;
	shf.l.wrap.b32 	%r19391, %r19387, %r19386, 3;
	mov.b64 	%rd4602, {%r19391, %r19390};
	shr.u64 	%rd4603, %rd4203, 6;
	xor.b64  	%rd4604, %rd4601, %rd4603;
	xor.b64  	%rd4605, %rd4604, %rd4602;
	shf.r.wrap.b32 	%r19392, %r19001, %r19000, 1;
	shf.r.wrap.b32 	%r19393, %r19000, %r19001, 1;
	mov.b64 	%rd4606, {%r19393, %r19392};
	shf.r.wrap.b32 	%r19394, %r19001, %r19000, 8;
	shf.r.wrap.b32 	%r19395, %r19000, %r19001, 8;
	mov.b64 	%rd4607, {%r19395, %r19394};
	shr.u64 	%rd4608, %rd4034, 7;
	xor.b64  	%rd4609, %rd4606, %rd4608;
	xor.b64  	%rd4610, %rd4609, %rd4607;
	add.s64 	%rd4611, %rd4138, %rd4021;
	add.s64 	%rd4612, %rd4611, %rd4605;
	add.s64 	%rd4613, %rd4612, %rd4610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19396,%dummy}, %rd4600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19397}, %rd4600;
	}
	shf.r.wrap.b32 	%r19398, %r19397, %r19396, 19;
	shf.r.wrap.b32 	%r19399, %r19396, %r19397, 19;
	mov.b64 	%rd4614, {%r19399, %r19398};
	shf.l.wrap.b32 	%r19400, %r19396, %r19397, 3;
	shf.l.wrap.b32 	%r19401, %r19397, %r19396, 3;
	mov.b64 	%rd4615, {%r19401, %r19400};
	shr.u64 	%rd4616, %rd4600, 6;
	xor.b64  	%rd4617, %rd4614, %rd4616;
	xor.b64  	%rd4618, %rd4617, %rd4615;
	shf.r.wrap.b32 	%r19402, %r19011, %r19010, 1;
	shf.r.wrap.b32 	%r19403, %r19010, %r19011, 1;
	mov.b64 	%rd4619, {%r19403, %r19402};
	shf.r.wrap.b32 	%r19404, %r19011, %r19010, 8;
	shf.r.wrap.b32 	%r19405, %r19010, %r19011, 8;
	mov.b64 	%rd4620, {%r19405, %r19404};
	shr.u64 	%rd4621, %rd4047, 7;
	xor.b64  	%rd4622, %rd4619, %rd4621;
	xor.b64  	%rd4623, %rd4622, %rd4620;
	add.s64 	%rd4624, %rd4151, %rd4034;
	add.s64 	%rd4625, %rd4624, %rd4618;
	add.s64 	%rd4626, %rd4625, %rd4623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19406,%dummy}, %rd4613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19407}, %rd4613;
	}
	shf.r.wrap.b32 	%r19408, %r19407, %r19406, 19;
	shf.r.wrap.b32 	%r19409, %r19406, %r19407, 19;
	mov.b64 	%rd4627, {%r19409, %r19408};
	shf.l.wrap.b32 	%r19410, %r19406, %r19407, 3;
	shf.l.wrap.b32 	%r19411, %r19407, %r19406, 3;
	mov.b64 	%rd4628, {%r19411, %r19410};
	shr.u64 	%rd4629, %rd4613, 6;
	xor.b64  	%rd4630, %rd4627, %rd4629;
	xor.b64  	%rd4631, %rd4630, %rd4628;
	shf.r.wrap.b32 	%r19412, %r19021, %r19020, 1;
	shf.r.wrap.b32 	%r19413, %r19020, %r19021, 1;
	mov.b64 	%rd4632, {%r19413, %r19412};
	shf.r.wrap.b32 	%r19414, %r19021, %r19020, 8;
	shf.r.wrap.b32 	%r19415, %r19020, %r19021, 8;
	mov.b64 	%rd4633, {%r19415, %r19414};
	shr.u64 	%rd4634, %rd4060, 7;
	xor.b64  	%rd4635, %rd4632, %rd4634;
	xor.b64  	%rd4636, %rd4635, %rd4633;
	add.s64 	%rd4637, %rd4164, %rd4047;
	add.s64 	%rd4638, %rd4637, %rd4631;
	add.s64 	%rd4639, %rd4638, %rd4636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19416,%dummy}, %rd4626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19417}, %rd4626;
	}
	shf.r.wrap.b32 	%r19418, %r19417, %r19416, 19;
	shf.r.wrap.b32 	%r19419, %r19416, %r19417, 19;
	mov.b64 	%rd4640, {%r19419, %r19418};
	shf.l.wrap.b32 	%r19420, %r19416, %r19417, 3;
	shf.l.wrap.b32 	%r19421, %r19417, %r19416, 3;
	mov.b64 	%rd4641, {%r19421, %r19420};
	shr.u64 	%rd4642, %rd4626, 6;
	xor.b64  	%rd4643, %rd4640, %rd4642;
	xor.b64  	%rd4644, %rd4643, %rd4641;
	shf.r.wrap.b32 	%r19422, %r19031, %r19030, 1;
	shf.r.wrap.b32 	%r19423, %r19030, %r19031, 1;
	mov.b64 	%rd4645, {%r19423, %r19422};
	shf.r.wrap.b32 	%r19424, %r19031, %r19030, 8;
	shf.r.wrap.b32 	%r19425, %r19030, %r19031, 8;
	mov.b64 	%rd4646, {%r19425, %r19424};
	shr.u64 	%rd4647, %rd4073, 7;
	xor.b64  	%rd4648, %rd4645, %rd4647;
	xor.b64  	%rd4649, %rd4648, %rd4646;
	add.s64 	%rd4650, %rd4177, %rd4060;
	add.s64 	%rd4651, %rd4650, %rd4644;
	add.s64 	%rd4652, %rd4651, %rd4649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19426,%dummy}, %rd4639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19427}, %rd4639;
	}
	shf.r.wrap.b32 	%r19428, %r19427, %r19426, 19;
	shf.r.wrap.b32 	%r19429, %r19426, %r19427, 19;
	mov.b64 	%rd4653, {%r19429, %r19428};
	shf.l.wrap.b32 	%r19430, %r19426, %r19427, 3;
	shf.l.wrap.b32 	%r19431, %r19427, %r19426, 3;
	mov.b64 	%rd4654, {%r19431, %r19430};
	shr.u64 	%rd4655, %rd4639, 6;
	xor.b64  	%rd4656, %rd4653, %rd4655;
	xor.b64  	%rd4657, %rd4656, %rd4654;
	shf.r.wrap.b32 	%r19432, %r19041, %r19040, 1;
	shf.r.wrap.b32 	%r19433, %r19040, %r19041, 1;
	mov.b64 	%rd4658, {%r19433, %r19432};
	shf.r.wrap.b32 	%r19434, %r19041, %r19040, 8;
	shf.r.wrap.b32 	%r19435, %r19040, %r19041, 8;
	mov.b64 	%rd4659, {%r19435, %r19434};
	shr.u64 	%rd4660, %rd4086, 7;
	xor.b64  	%rd4661, %rd4658, %rd4660;
	xor.b64  	%rd4662, %rd4661, %rd4659;
	add.s64 	%rd4663, %rd4190, %rd4073;
	add.s64 	%rd4664, %rd4663, %rd4657;
	add.s64 	%rd4665, %rd4664, %rd4662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19436,%dummy}, %rd4652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19437}, %rd4652;
	}
	shf.r.wrap.b32 	%r19438, %r19437, %r19436, 19;
	shf.r.wrap.b32 	%r19439, %r19436, %r19437, 19;
	mov.b64 	%rd4666, {%r19439, %r19438};
	shf.l.wrap.b32 	%r19440, %r19436, %r19437, 3;
	shf.l.wrap.b32 	%r19441, %r19437, %r19436, 3;
	mov.b64 	%rd4667, {%r19441, %r19440};
	shr.u64 	%rd4668, %rd4652, 6;
	xor.b64  	%rd4669, %rd4666, %rd4668;
	xor.b64  	%rd4670, %rd4669, %rd4667;
	shf.r.wrap.b32 	%r19442, %r19051, %r19050, 1;
	shf.r.wrap.b32 	%r19443, %r19050, %r19051, 1;
	mov.b64 	%rd4671, {%r19443, %r19442};
	shf.r.wrap.b32 	%r19444, %r19051, %r19050, 8;
	shf.r.wrap.b32 	%r19445, %r19050, %r19051, 8;
	mov.b64 	%rd4672, {%r19445, %r19444};
	shr.u64 	%rd4673, %rd4099, 7;
	xor.b64  	%rd4674, %rd4671, %rd4673;
	xor.b64  	%rd4675, %rd4674, %rd4672;
	add.s64 	%rd4676, %rd4203, %rd4086;
	add.s64 	%rd4677, %rd4676, %rd4670;
	add.s64 	%rd4678, %rd4677, %rd4675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19446,%dummy}, %rd4665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19447}, %rd4665;
	}
	shf.r.wrap.b32 	%r19448, %r19447, %r19446, 19;
	shf.r.wrap.b32 	%r19449, %r19446, %r19447, 19;
	mov.b64 	%rd4679, {%r19449, %r19448};
	shf.l.wrap.b32 	%r19450, %r19446, %r19447, 3;
	shf.l.wrap.b32 	%r19451, %r19447, %r19446, 3;
	mov.b64 	%rd4680, {%r19451, %r19450};
	shr.u64 	%rd4681, %rd4665, 6;
	xor.b64  	%rd4682, %rd4679, %rd4681;
	xor.b64  	%rd4683, %rd4682, %rd4680;
	shf.r.wrap.b32 	%r19452, %r19061, %r19060, 1;
	shf.r.wrap.b32 	%r19453, %r19060, %r19061, 1;
	mov.b64 	%rd4684, {%r19453, %r19452};
	shf.r.wrap.b32 	%r19454, %r19061, %r19060, 8;
	shf.r.wrap.b32 	%r19455, %r19060, %r19061, 8;
	mov.b64 	%rd4685, {%r19455, %r19454};
	shr.u64 	%rd4686, %rd4112, 7;
	xor.b64  	%rd4687, %rd4684, %rd4686;
	xor.b64  	%rd4688, %rd4687, %rd4685;
	add.s64 	%rd4689, %rd4600, %rd4099;
	add.s64 	%rd4690, %rd4689, %rd4683;
	add.s64 	%rd4691, %rd4690, %rd4688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19456,%dummy}, %rd4678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19457}, %rd4678;
	}
	shf.r.wrap.b32 	%r19458, %r19457, %r19456, 19;
	shf.r.wrap.b32 	%r19459, %r19456, %r19457, 19;
	mov.b64 	%rd4692, {%r19459, %r19458};
	shf.l.wrap.b32 	%r19460, %r19456, %r19457, 3;
	shf.l.wrap.b32 	%r19461, %r19457, %r19456, 3;
	mov.b64 	%rd4693, {%r19461, %r19460};
	shr.u64 	%rd4694, %rd4678, 6;
	xor.b64  	%rd4695, %rd4692, %rd4694;
	xor.b64  	%rd4696, %rd4695, %rd4693;
	shf.r.wrap.b32 	%r19462, %r19071, %r19070, 1;
	shf.r.wrap.b32 	%r19463, %r19070, %r19071, 1;
	mov.b64 	%rd4697, {%r19463, %r19462};
	shf.r.wrap.b32 	%r19464, %r19071, %r19070, 8;
	shf.r.wrap.b32 	%r19465, %r19070, %r19071, 8;
	mov.b64 	%rd4698, {%r19465, %r19464};
	shr.u64 	%rd4699, %rd4125, 7;
	xor.b64  	%rd4700, %rd4697, %rd4699;
	xor.b64  	%rd4701, %rd4700, %rd4698;
	add.s64 	%rd4702, %rd4613, %rd4112;
	add.s64 	%rd4703, %rd4702, %rd4696;
	add.s64 	%rd4704, %rd4703, %rd4701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19466,%dummy}, %rd4691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19467}, %rd4691;
	}
	shf.r.wrap.b32 	%r19468, %r19467, %r19466, 19;
	shf.r.wrap.b32 	%r19469, %r19466, %r19467, 19;
	mov.b64 	%rd4705, {%r19469, %r19468};
	shf.l.wrap.b32 	%r19470, %r19466, %r19467, 3;
	shf.l.wrap.b32 	%r19471, %r19467, %r19466, 3;
	mov.b64 	%rd4706, {%r19471, %r19470};
	shr.u64 	%rd4707, %rd4691, 6;
	xor.b64  	%rd4708, %rd4705, %rd4707;
	xor.b64  	%rd4709, %rd4708, %rd4706;
	shf.r.wrap.b32 	%r19472, %r19081, %r19080, 1;
	shf.r.wrap.b32 	%r19473, %r19080, %r19081, 1;
	mov.b64 	%rd4710, {%r19473, %r19472};
	shf.r.wrap.b32 	%r19474, %r19081, %r19080, 8;
	shf.r.wrap.b32 	%r19475, %r19080, %r19081, 8;
	mov.b64 	%rd4711, {%r19475, %r19474};
	shr.u64 	%rd4712, %rd4138, 7;
	xor.b64  	%rd4713, %rd4710, %rd4712;
	xor.b64  	%rd4714, %rd4713, %rd4711;
	add.s64 	%rd4715, %rd4626, %rd4125;
	add.s64 	%rd4716, %rd4715, %rd4709;
	add.s64 	%rd4717, %rd4716, %rd4714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19476,%dummy}, %rd4704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19477}, %rd4704;
	}
	shf.r.wrap.b32 	%r19478, %r19477, %r19476, 19;
	shf.r.wrap.b32 	%r19479, %r19476, %r19477, 19;
	mov.b64 	%rd4718, {%r19479, %r19478};
	shf.l.wrap.b32 	%r19480, %r19476, %r19477, 3;
	shf.l.wrap.b32 	%r19481, %r19477, %r19476, 3;
	mov.b64 	%rd4719, {%r19481, %r19480};
	shr.u64 	%rd4720, %rd4704, 6;
	xor.b64  	%rd4721, %rd4718, %rd4720;
	xor.b64  	%rd4722, %rd4721, %rd4719;
	shf.r.wrap.b32 	%r19482, %r19091, %r19090, 1;
	shf.r.wrap.b32 	%r19483, %r19090, %r19091, 1;
	mov.b64 	%rd4723, {%r19483, %r19482};
	shf.r.wrap.b32 	%r19484, %r19091, %r19090, 8;
	shf.r.wrap.b32 	%r19485, %r19090, %r19091, 8;
	mov.b64 	%rd4724, {%r19485, %r19484};
	shr.u64 	%rd4725, %rd4151, 7;
	xor.b64  	%rd4726, %rd4723, %rd4725;
	xor.b64  	%rd4727, %rd4726, %rd4724;
	add.s64 	%rd4728, %rd4639, %rd4138;
	add.s64 	%rd4729, %rd4728, %rd4722;
	add.s64 	%rd4730, %rd4729, %rd4727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19486,%dummy}, %rd4717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19487}, %rd4717;
	}
	shf.r.wrap.b32 	%r19488, %r19487, %r19486, 19;
	shf.r.wrap.b32 	%r19489, %r19486, %r19487, 19;
	mov.b64 	%rd4731, {%r19489, %r19488};
	shf.l.wrap.b32 	%r19490, %r19486, %r19487, 3;
	shf.l.wrap.b32 	%r19491, %r19487, %r19486, 3;
	mov.b64 	%rd4732, {%r19491, %r19490};
	shr.u64 	%rd4733, %rd4717, 6;
	xor.b64  	%rd4734, %rd4731, %rd4733;
	xor.b64  	%rd4735, %rd4734, %rd4732;
	shf.r.wrap.b32 	%r19492, %r19101, %r19100, 1;
	shf.r.wrap.b32 	%r19493, %r19100, %r19101, 1;
	mov.b64 	%rd4736, {%r19493, %r19492};
	shf.r.wrap.b32 	%r19494, %r19101, %r19100, 8;
	shf.r.wrap.b32 	%r19495, %r19100, %r19101, 8;
	mov.b64 	%rd4737, {%r19495, %r19494};
	shr.u64 	%rd4738, %rd4164, 7;
	xor.b64  	%rd4739, %rd4736, %rd4738;
	xor.b64  	%rd4740, %rd4739, %rd4737;
	add.s64 	%rd4741, %rd4652, %rd4151;
	add.s64 	%rd4742, %rd4741, %rd4735;
	add.s64 	%rd4743, %rd4742, %rd4740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19496,%dummy}, %rd4730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19497}, %rd4730;
	}
	shf.r.wrap.b32 	%r19498, %r19497, %r19496, 19;
	shf.r.wrap.b32 	%r19499, %r19496, %r19497, 19;
	mov.b64 	%rd4744, {%r19499, %r19498};
	shf.l.wrap.b32 	%r19500, %r19496, %r19497, 3;
	shf.l.wrap.b32 	%r19501, %r19497, %r19496, 3;
	mov.b64 	%rd4745, {%r19501, %r19500};
	shr.u64 	%rd4746, %rd4730, 6;
	xor.b64  	%rd4747, %rd4744, %rd4746;
	xor.b64  	%rd4748, %rd4747, %rd4745;
	shf.r.wrap.b32 	%r19502, %r19111, %r19110, 1;
	shf.r.wrap.b32 	%r19503, %r19110, %r19111, 1;
	mov.b64 	%rd4749, {%r19503, %r19502};
	shf.r.wrap.b32 	%r19504, %r19111, %r19110, 8;
	shf.r.wrap.b32 	%r19505, %r19110, %r19111, 8;
	mov.b64 	%rd4750, {%r19505, %r19504};
	shr.u64 	%rd4751, %rd4177, 7;
	xor.b64  	%rd4752, %rd4749, %rd4751;
	xor.b64  	%rd4753, %rd4752, %rd4750;
	add.s64 	%rd4754, %rd4665, %rd4164;
	add.s64 	%rd4755, %rd4754, %rd4748;
	add.s64 	%rd4756, %rd4755, %rd4753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19506,%dummy}, %rd4743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19507}, %rd4743;
	}
	shf.r.wrap.b32 	%r19508, %r19507, %r19506, 19;
	shf.r.wrap.b32 	%r19509, %r19506, %r19507, 19;
	mov.b64 	%rd4757, {%r19509, %r19508};
	shf.l.wrap.b32 	%r19510, %r19506, %r19507, 3;
	shf.l.wrap.b32 	%r19511, %r19507, %r19506, 3;
	mov.b64 	%rd4758, {%r19511, %r19510};
	shr.u64 	%rd4759, %rd4743, 6;
	xor.b64  	%rd4760, %rd4757, %rd4759;
	xor.b64  	%rd4761, %rd4760, %rd4758;
	shf.r.wrap.b32 	%r19512, %r19377, %r19376, 1;
	shf.r.wrap.b32 	%r19513, %r19376, %r19377, 1;
	mov.b64 	%rd4762, {%r19513, %r19512};
	shf.r.wrap.b32 	%r19514, %r19377, %r19376, 8;
	shf.r.wrap.b32 	%r19515, %r19376, %r19377, 8;
	mov.b64 	%rd4763, {%r19515, %r19514};
	shr.u64 	%rd4764, %rd4190, 7;
	xor.b64  	%rd4765, %rd4762, %rd4764;
	xor.b64  	%rd4766, %rd4765, %rd4763;
	add.s64 	%rd4767, %rd4678, %rd4177;
	add.s64 	%rd4768, %rd4767, %rd4761;
	add.s64 	%rd4769, %rd4768, %rd4766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19516,%dummy}, %rd4756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19517}, %rd4756;
	}
	shf.r.wrap.b32 	%r19518, %r19517, %r19516, 19;
	shf.r.wrap.b32 	%r19519, %r19516, %r19517, 19;
	mov.b64 	%rd4770, {%r19519, %r19518};
	shf.l.wrap.b32 	%r19520, %r19516, %r19517, 3;
	shf.l.wrap.b32 	%r19521, %r19517, %r19516, 3;
	mov.b64 	%rd4771, {%r19521, %r19520};
	shr.u64 	%rd4772, %rd4756, 6;
	xor.b64  	%rd4773, %rd4770, %rd4772;
	xor.b64  	%rd4774, %rd4773, %rd4771;
	shf.r.wrap.b32 	%r19522, %r19387, %r19386, 1;
	shf.r.wrap.b32 	%r19523, %r19386, %r19387, 1;
	mov.b64 	%rd4775, {%r19523, %r19522};
	shf.r.wrap.b32 	%r19524, %r19387, %r19386, 8;
	shf.r.wrap.b32 	%r19525, %r19386, %r19387, 8;
	mov.b64 	%rd4776, {%r19525, %r19524};
	shr.u64 	%rd4777, %rd4203, 7;
	xor.b64  	%rd4778, %rd4775, %rd4777;
	xor.b64  	%rd4779, %rd4778, %rd4776;
	add.s64 	%rd4780, %rd4691, %rd4190;
	add.s64 	%rd4781, %rd4780, %rd4774;
	add.s64 	%rd4782, %rd4781, %rd4779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19526,%dummy}, %rd4769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19527}, %rd4769;
	}
	shf.r.wrap.b32 	%r19528, %r19527, %r19526, 19;
	shf.r.wrap.b32 	%r19529, %r19526, %r19527, 19;
	mov.b64 	%rd4783, {%r19529, %r19528};
	shf.l.wrap.b32 	%r19530, %r19526, %r19527, 3;
	shf.l.wrap.b32 	%r19531, %r19527, %r19526, 3;
	mov.b64 	%rd4784, {%r19531, %r19530};
	shr.u64 	%rd4785, %rd4769, 6;
	xor.b64  	%rd4786, %rd4783, %rd4785;
	xor.b64  	%rd4787, %rd4786, %rd4784;
	shf.r.wrap.b32 	%r19532, %r19397, %r19396, 1;
	shf.r.wrap.b32 	%r19533, %r19396, %r19397, 1;
	mov.b64 	%rd4788, {%r19533, %r19532};
	shf.r.wrap.b32 	%r19534, %r19397, %r19396, 8;
	shf.r.wrap.b32 	%r19535, %r19396, %r19397, 8;
	mov.b64 	%rd4789, {%r19535, %r19534};
	shr.u64 	%rd4790, %rd4600, 7;
	xor.b64  	%rd4791, %rd4788, %rd4790;
	xor.b64  	%rd4792, %rd4791, %rd4789;
	add.s64 	%rd4793, %rd4704, %rd4203;
	add.s64 	%rd4794, %rd4793, %rd4787;
	add.s64 	%rd4795, %rd4794, %rd4792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19536,%dummy}, %rd4576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19537}, %rd4576;
	}
	shf.r.wrap.b32 	%r19538, %r19537, %r19536, 14;
	shf.r.wrap.b32 	%r19539, %r19536, %r19537, 14;
	mov.b64 	%rd4796, {%r19539, %r19538};
	shf.r.wrap.b32 	%r19540, %r19537, %r19536, 18;
	shf.r.wrap.b32 	%r19541, %r19536, %r19537, 18;
	mov.b64 	%rd4797, {%r19541, %r19540};
	xor.b64  	%rd4798, %rd4797, %rd4796;
	shf.l.wrap.b32 	%r19542, %r19536, %r19537, 23;
	shf.l.wrap.b32 	%r19543, %r19537, %r19536, 23;
	mov.b64 	%rd4799, {%r19543, %r19542};
	xor.b64  	%rd4800, %rd4798, %rd4799;
	xor.b64  	%rd4801, %rd4552, %rd4528;
	and.b64  	%rd4802, %rd4801, %rd4576;
	xor.b64  	%rd4803, %rd4802, %rd4528;
	add.s64 	%rd4804, %rd4803, %rd4504;
	add.s64 	%rd4805, %rd4804, %rd4600;
	add.s64 	%rd4806, %rd4805, %rd50;
	add.s64 	%rd4807, %rd4806, %rd4800;
	add.s64 	%rd4808, %rd4807, %rd4515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19544,%dummy}, %rd4587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19545}, %rd4587;
	}
	shf.r.wrap.b32 	%r19546, %r19545, %r19544, 28;
	shf.r.wrap.b32 	%r19547, %r19544, %r19545, 28;
	mov.b64 	%rd4809, {%r19547, %r19546};
	shf.l.wrap.b32 	%r19548, %r19544, %r19545, 30;
	shf.l.wrap.b32 	%r19549, %r19545, %r19544, 30;
	mov.b64 	%rd4810, {%r19549, %r19548};
	xor.b64  	%rd4811, %rd4810, %rd4809;
	shf.l.wrap.b32 	%r19550, %r19544, %r19545, 25;
	shf.l.wrap.b32 	%r19551, %r19545, %r19544, 25;
	mov.b64 	%rd4812, {%r19551, %r19550};
	xor.b64  	%rd4813, %rd4811, %rd4812;
	xor.b64  	%rd4814, %rd4587, %rd4539;
	xor.b64  	%rd4815, %rd4587, %rd4563;
	and.b64  	%rd4816, %rd4815, %rd4814;
	xor.b64  	%rd4817, %rd4816, %rd4587;
	add.s64 	%rd4818, %rd4807, %rd4817;
	add.s64 	%rd4819, %rd4818, %rd4813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19552,%dummy}, %rd4808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19553}, %rd4808;
	}
	shf.r.wrap.b32 	%r19554, %r19553, %r19552, 14;
	shf.r.wrap.b32 	%r19555, %r19552, %r19553, 14;
	mov.b64 	%rd4820, {%r19555, %r19554};
	shf.r.wrap.b32 	%r19556, %r19553, %r19552, 18;
	shf.r.wrap.b32 	%r19557, %r19552, %r19553, 18;
	mov.b64 	%rd4821, {%r19557, %r19556};
	xor.b64  	%rd4822, %rd4821, %rd4820;
	shf.l.wrap.b32 	%r19558, %r19552, %r19553, 23;
	shf.l.wrap.b32 	%r19559, %r19553, %r19552, 23;
	mov.b64 	%rd4823, {%r19559, %r19558};
	xor.b64  	%rd4824, %rd4822, %rd4823;
	xor.b64  	%rd4825, %rd4576, %rd4552;
	and.b64  	%rd4826, %rd4808, %rd4825;
	xor.b64  	%rd4827, %rd4826, %rd4552;
	add.s64 	%rd4828, %rd4613, %rd4528;
	add.s64 	%rd4829, %rd4828, %rd51;
	add.s64 	%rd4830, %rd4829, %rd4827;
	add.s64 	%rd4831, %rd4830, %rd4824;
	add.s64 	%rd4832, %rd4831, %rd4539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19560,%dummy}, %rd4819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19561}, %rd4819;
	}
	shf.r.wrap.b32 	%r19562, %r19561, %r19560, 28;
	shf.r.wrap.b32 	%r19563, %r19560, %r19561, 28;
	mov.b64 	%rd4833, {%r19563, %r19562};
	shf.l.wrap.b32 	%r19564, %r19560, %r19561, 30;
	shf.l.wrap.b32 	%r19565, %r19561, %r19560, 30;
	mov.b64 	%rd4834, {%r19565, %r19564};
	xor.b64  	%rd4835, %rd4834, %rd4833;
	shf.l.wrap.b32 	%r19566, %r19560, %r19561, 25;
	shf.l.wrap.b32 	%r19567, %r19561, %r19560, 25;
	mov.b64 	%rd4836, {%r19567, %r19566};
	xor.b64  	%rd4837, %rd4835, %rd4836;
	xor.b64  	%rd4838, %rd4819, %rd4563;
	xor.b64  	%rd4839, %rd4819, %rd4587;
	and.b64  	%rd4840, %rd4839, %rd4838;
	xor.b64  	%rd4841, %rd4840, %rd4819;
	add.s64 	%rd4842, %rd4831, %rd4841;
	add.s64 	%rd4843, %rd4842, %rd4837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19568,%dummy}, %rd4832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19569}, %rd4832;
	}
	shf.r.wrap.b32 	%r19570, %r19569, %r19568, 14;
	shf.r.wrap.b32 	%r19571, %r19568, %r19569, 14;
	mov.b64 	%rd4844, {%r19571, %r19570};
	shf.r.wrap.b32 	%r19572, %r19569, %r19568, 18;
	shf.r.wrap.b32 	%r19573, %r19568, %r19569, 18;
	mov.b64 	%rd4845, {%r19573, %r19572};
	xor.b64  	%rd4846, %rd4845, %rd4844;
	shf.l.wrap.b32 	%r19574, %r19568, %r19569, 23;
	shf.l.wrap.b32 	%r19575, %r19569, %r19568, 23;
	mov.b64 	%rd4847, {%r19575, %r19574};
	xor.b64  	%rd4848, %rd4846, %rd4847;
	xor.b64  	%rd4849, %rd4808, %rd4576;
	and.b64  	%rd4850, %rd4832, %rd4849;
	xor.b64  	%rd4851, %rd4850, %rd4576;
	add.s64 	%rd4852, %rd4626, %rd4552;
	add.s64 	%rd4853, %rd4852, %rd52;
	add.s64 	%rd4854, %rd4853, %rd4851;
	add.s64 	%rd4855, %rd4854, %rd4848;
	add.s64 	%rd4856, %rd4855, %rd4563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19576,%dummy}, %rd4843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19577}, %rd4843;
	}
	shf.r.wrap.b32 	%r19578, %r19577, %r19576, 28;
	shf.r.wrap.b32 	%r19579, %r19576, %r19577, 28;
	mov.b64 	%rd4857, {%r19579, %r19578};
	shf.l.wrap.b32 	%r19580, %r19576, %r19577, 30;
	shf.l.wrap.b32 	%r19581, %r19577, %r19576, 30;
	mov.b64 	%rd4858, {%r19581, %r19580};
	xor.b64  	%rd4859, %rd4858, %rd4857;
	shf.l.wrap.b32 	%r19582, %r19576, %r19577, 25;
	shf.l.wrap.b32 	%r19583, %r19577, %r19576, 25;
	mov.b64 	%rd4860, {%r19583, %r19582};
	xor.b64  	%rd4861, %rd4859, %rd4860;
	xor.b64  	%rd4862, %rd4843, %rd4587;
	xor.b64  	%rd4863, %rd4843, %rd4819;
	and.b64  	%rd4864, %rd4863, %rd4862;
	xor.b64  	%rd4865, %rd4864, %rd4843;
	add.s64 	%rd4866, %rd4855, %rd4865;
	add.s64 	%rd4867, %rd4866, %rd4861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19584,%dummy}, %rd4856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19585}, %rd4856;
	}
	shf.r.wrap.b32 	%r19586, %r19585, %r19584, 14;
	shf.r.wrap.b32 	%r19587, %r19584, %r19585, 14;
	mov.b64 	%rd4868, {%r19587, %r19586};
	shf.r.wrap.b32 	%r19588, %r19585, %r19584, 18;
	shf.r.wrap.b32 	%r19589, %r19584, %r19585, 18;
	mov.b64 	%rd4869, {%r19589, %r19588};
	xor.b64  	%rd4870, %rd4869, %rd4868;
	shf.l.wrap.b32 	%r19590, %r19584, %r19585, 23;
	shf.l.wrap.b32 	%r19591, %r19585, %r19584, 23;
	mov.b64 	%rd4871, {%r19591, %r19590};
	xor.b64  	%rd4872, %rd4870, %rd4871;
	xor.b64  	%rd4873, %rd4832, %rd4808;
	and.b64  	%rd4874, %rd4856, %rd4873;
	xor.b64  	%rd4875, %rd4874, %rd4808;
	add.s64 	%rd4876, %rd4639, %rd4576;
	add.s64 	%rd4877, %rd4876, %rd53;
	add.s64 	%rd4878, %rd4877, %rd4875;
	add.s64 	%rd4879, %rd4878, %rd4872;
	add.s64 	%rd4880, %rd4879, %rd4587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19592,%dummy}, %rd4867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19593}, %rd4867;
	}
	shf.r.wrap.b32 	%r19594, %r19593, %r19592, 28;
	shf.r.wrap.b32 	%r19595, %r19592, %r19593, 28;
	mov.b64 	%rd4881, {%r19595, %r19594};
	shf.l.wrap.b32 	%r19596, %r19592, %r19593, 30;
	shf.l.wrap.b32 	%r19597, %r19593, %r19592, 30;
	mov.b64 	%rd4882, {%r19597, %r19596};
	xor.b64  	%rd4883, %rd4882, %rd4881;
	shf.l.wrap.b32 	%r19598, %r19592, %r19593, 25;
	shf.l.wrap.b32 	%r19599, %r19593, %r19592, 25;
	mov.b64 	%rd4884, {%r19599, %r19598};
	xor.b64  	%rd4885, %rd4883, %rd4884;
	xor.b64  	%rd4886, %rd4867, %rd4819;
	xor.b64  	%rd4887, %rd4867, %rd4843;
	and.b64  	%rd4888, %rd4887, %rd4886;
	xor.b64  	%rd4889, %rd4888, %rd4867;
	add.s64 	%rd4890, %rd4879, %rd4889;
	add.s64 	%rd4891, %rd4890, %rd4885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19600,%dummy}, %rd4880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19601}, %rd4880;
	}
	shf.r.wrap.b32 	%r19602, %r19601, %r19600, 14;
	shf.r.wrap.b32 	%r19603, %r19600, %r19601, 14;
	mov.b64 	%rd4892, {%r19603, %r19602};
	shf.r.wrap.b32 	%r19604, %r19601, %r19600, 18;
	shf.r.wrap.b32 	%r19605, %r19600, %r19601, 18;
	mov.b64 	%rd4893, {%r19605, %r19604};
	xor.b64  	%rd4894, %rd4893, %rd4892;
	shf.l.wrap.b32 	%r19606, %r19600, %r19601, 23;
	shf.l.wrap.b32 	%r19607, %r19601, %r19600, 23;
	mov.b64 	%rd4895, {%r19607, %r19606};
	xor.b64  	%rd4896, %rd4894, %rd4895;
	xor.b64  	%rd4897, %rd4856, %rd4832;
	and.b64  	%rd4898, %rd4880, %rd4897;
	xor.b64  	%rd4899, %rd4898, %rd4832;
	add.s64 	%rd4900, %rd4808, %rd4652;
	add.s64 	%rd4901, %rd4900, %rd54;
	add.s64 	%rd4902, %rd4901, %rd4899;
	add.s64 	%rd4903, %rd4902, %rd4896;
	add.s64 	%rd4904, %rd4903, %rd4819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19608,%dummy}, %rd4891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19609}, %rd4891;
	}
	shf.r.wrap.b32 	%r19610, %r19609, %r19608, 28;
	shf.r.wrap.b32 	%r19611, %r19608, %r19609, 28;
	mov.b64 	%rd4905, {%r19611, %r19610};
	shf.l.wrap.b32 	%r19612, %r19608, %r19609, 30;
	shf.l.wrap.b32 	%r19613, %r19609, %r19608, 30;
	mov.b64 	%rd4906, {%r19613, %r19612};
	xor.b64  	%rd4907, %rd4906, %rd4905;
	shf.l.wrap.b32 	%r19614, %r19608, %r19609, 25;
	shf.l.wrap.b32 	%r19615, %r19609, %r19608, 25;
	mov.b64 	%rd4908, {%r19615, %r19614};
	xor.b64  	%rd4909, %rd4907, %rd4908;
	xor.b64  	%rd4910, %rd4891, %rd4843;
	xor.b64  	%rd4911, %rd4891, %rd4867;
	and.b64  	%rd4912, %rd4911, %rd4910;
	xor.b64  	%rd4913, %rd4912, %rd4891;
	add.s64 	%rd4914, %rd4903, %rd4913;
	add.s64 	%rd4915, %rd4914, %rd4909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19616,%dummy}, %rd4904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19617}, %rd4904;
	}
	shf.r.wrap.b32 	%r19618, %r19617, %r19616, 14;
	shf.r.wrap.b32 	%r19619, %r19616, %r19617, 14;
	mov.b64 	%rd4916, {%r19619, %r19618};
	shf.r.wrap.b32 	%r19620, %r19617, %r19616, 18;
	shf.r.wrap.b32 	%r19621, %r19616, %r19617, 18;
	mov.b64 	%rd4917, {%r19621, %r19620};
	xor.b64  	%rd4918, %rd4917, %rd4916;
	shf.l.wrap.b32 	%r19622, %r19616, %r19617, 23;
	shf.l.wrap.b32 	%r19623, %r19617, %r19616, 23;
	mov.b64 	%rd4919, {%r19623, %r19622};
	xor.b64  	%rd4920, %rd4918, %rd4919;
	xor.b64  	%rd4921, %rd4880, %rd4856;
	and.b64  	%rd4922, %rd4904, %rd4921;
	xor.b64  	%rd4923, %rd4922, %rd4856;
	add.s64 	%rd4924, %rd4832, %rd4665;
	add.s64 	%rd4925, %rd4924, %rd55;
	add.s64 	%rd4926, %rd4925, %rd4923;
	add.s64 	%rd4927, %rd4926, %rd4920;
	add.s64 	%rd4928, %rd4927, %rd4843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19624,%dummy}, %rd4915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19625}, %rd4915;
	}
	shf.r.wrap.b32 	%r19626, %r19625, %r19624, 28;
	shf.r.wrap.b32 	%r19627, %r19624, %r19625, 28;
	mov.b64 	%rd4929, {%r19627, %r19626};
	shf.l.wrap.b32 	%r19628, %r19624, %r19625, 30;
	shf.l.wrap.b32 	%r19629, %r19625, %r19624, 30;
	mov.b64 	%rd4930, {%r19629, %r19628};
	xor.b64  	%rd4931, %rd4930, %rd4929;
	shf.l.wrap.b32 	%r19630, %r19624, %r19625, 25;
	shf.l.wrap.b32 	%r19631, %r19625, %r19624, 25;
	mov.b64 	%rd4932, {%r19631, %r19630};
	xor.b64  	%rd4933, %rd4931, %rd4932;
	xor.b64  	%rd4934, %rd4915, %rd4867;
	xor.b64  	%rd4935, %rd4915, %rd4891;
	and.b64  	%rd4936, %rd4935, %rd4934;
	xor.b64  	%rd4937, %rd4936, %rd4915;
	add.s64 	%rd4938, %rd4927, %rd4937;
	add.s64 	%rd4939, %rd4938, %rd4933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19632,%dummy}, %rd4928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19633}, %rd4928;
	}
	shf.r.wrap.b32 	%r19634, %r19633, %r19632, 14;
	shf.r.wrap.b32 	%r19635, %r19632, %r19633, 14;
	mov.b64 	%rd4940, {%r19635, %r19634};
	shf.r.wrap.b32 	%r19636, %r19633, %r19632, 18;
	shf.r.wrap.b32 	%r19637, %r19632, %r19633, 18;
	mov.b64 	%rd4941, {%r19637, %r19636};
	xor.b64  	%rd4942, %rd4941, %rd4940;
	shf.l.wrap.b32 	%r19638, %r19632, %r19633, 23;
	shf.l.wrap.b32 	%r19639, %r19633, %r19632, 23;
	mov.b64 	%rd4943, {%r19639, %r19638};
	xor.b64  	%rd4944, %rd4942, %rd4943;
	xor.b64  	%rd4945, %rd4904, %rd4880;
	and.b64  	%rd4946, %rd4928, %rd4945;
	xor.b64  	%rd4947, %rd4946, %rd4880;
	add.s64 	%rd4948, %rd4856, %rd4678;
	add.s64 	%rd4949, %rd4948, %rd56;
	add.s64 	%rd4950, %rd4949, %rd4947;
	add.s64 	%rd4951, %rd4950, %rd4944;
	add.s64 	%rd4952, %rd4951, %rd4867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19640,%dummy}, %rd4939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19641}, %rd4939;
	}
	shf.r.wrap.b32 	%r19642, %r19641, %r19640, 28;
	shf.r.wrap.b32 	%r19643, %r19640, %r19641, 28;
	mov.b64 	%rd4953, {%r19643, %r19642};
	shf.l.wrap.b32 	%r19644, %r19640, %r19641, 30;
	shf.l.wrap.b32 	%r19645, %r19641, %r19640, 30;
	mov.b64 	%rd4954, {%r19645, %r19644};
	xor.b64  	%rd4955, %rd4954, %rd4953;
	shf.l.wrap.b32 	%r19646, %r19640, %r19641, 25;
	shf.l.wrap.b32 	%r19647, %r19641, %r19640, 25;
	mov.b64 	%rd4956, {%r19647, %r19646};
	xor.b64  	%rd4957, %rd4955, %rd4956;
	xor.b64  	%rd4958, %rd4939, %rd4891;
	xor.b64  	%rd4959, %rd4939, %rd4915;
	and.b64  	%rd4960, %rd4959, %rd4958;
	xor.b64  	%rd4961, %rd4960, %rd4939;
	add.s64 	%rd4962, %rd4951, %rd4961;
	add.s64 	%rd4963, %rd4962, %rd4957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19648,%dummy}, %rd4952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19649}, %rd4952;
	}
	shf.r.wrap.b32 	%r19650, %r19649, %r19648, 14;
	shf.r.wrap.b32 	%r19651, %r19648, %r19649, 14;
	mov.b64 	%rd4964, {%r19651, %r19650};
	shf.r.wrap.b32 	%r19652, %r19649, %r19648, 18;
	shf.r.wrap.b32 	%r19653, %r19648, %r19649, 18;
	mov.b64 	%rd4965, {%r19653, %r19652};
	xor.b64  	%rd4966, %rd4965, %rd4964;
	shf.l.wrap.b32 	%r19654, %r19648, %r19649, 23;
	shf.l.wrap.b32 	%r19655, %r19649, %r19648, 23;
	mov.b64 	%rd4967, {%r19655, %r19654};
	xor.b64  	%rd4968, %rd4966, %rd4967;
	xor.b64  	%rd4969, %rd4928, %rd4904;
	and.b64  	%rd4970, %rd4952, %rd4969;
	xor.b64  	%rd4971, %rd4970, %rd4904;
	add.s64 	%rd4972, %rd4880, %rd4691;
	add.s64 	%rd4973, %rd4972, %rd57;
	add.s64 	%rd4974, %rd4973, %rd4971;
	add.s64 	%rd4975, %rd4974, %rd4968;
	add.s64 	%rd4976, %rd4975, %rd4891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19656,%dummy}, %rd4963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19657}, %rd4963;
	}
	shf.r.wrap.b32 	%r19658, %r19657, %r19656, 28;
	shf.r.wrap.b32 	%r19659, %r19656, %r19657, 28;
	mov.b64 	%rd4977, {%r19659, %r19658};
	shf.l.wrap.b32 	%r19660, %r19656, %r19657, 30;
	shf.l.wrap.b32 	%r19661, %r19657, %r19656, 30;
	mov.b64 	%rd4978, {%r19661, %r19660};
	xor.b64  	%rd4979, %rd4978, %rd4977;
	shf.l.wrap.b32 	%r19662, %r19656, %r19657, 25;
	shf.l.wrap.b32 	%r19663, %r19657, %r19656, 25;
	mov.b64 	%rd4980, {%r19663, %r19662};
	xor.b64  	%rd4981, %rd4979, %rd4980;
	xor.b64  	%rd4982, %rd4963, %rd4915;
	xor.b64  	%rd4983, %rd4963, %rd4939;
	and.b64  	%rd4984, %rd4983, %rd4982;
	xor.b64  	%rd4985, %rd4984, %rd4963;
	add.s64 	%rd4986, %rd4975, %rd4985;
	add.s64 	%rd4987, %rd4986, %rd4981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19664,%dummy}, %rd4976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19665}, %rd4976;
	}
	shf.r.wrap.b32 	%r19666, %r19665, %r19664, 14;
	shf.r.wrap.b32 	%r19667, %r19664, %r19665, 14;
	mov.b64 	%rd4988, {%r19667, %r19666};
	shf.r.wrap.b32 	%r19668, %r19665, %r19664, 18;
	shf.r.wrap.b32 	%r19669, %r19664, %r19665, 18;
	mov.b64 	%rd4989, {%r19669, %r19668};
	xor.b64  	%rd4990, %rd4989, %rd4988;
	shf.l.wrap.b32 	%r19670, %r19664, %r19665, 23;
	shf.l.wrap.b32 	%r19671, %r19665, %r19664, 23;
	mov.b64 	%rd4991, {%r19671, %r19670};
	xor.b64  	%rd4992, %rd4990, %rd4991;
	xor.b64  	%rd4993, %rd4952, %rd4928;
	and.b64  	%rd4994, %rd4976, %rd4993;
	xor.b64  	%rd4995, %rd4994, %rd4928;
	add.s64 	%rd4996, %rd4904, %rd4704;
	add.s64 	%rd4997, %rd4996, %rd58;
	add.s64 	%rd4998, %rd4997, %rd4995;
	add.s64 	%rd4999, %rd4998, %rd4992;
	add.s64 	%rd5000, %rd4999, %rd4915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19672,%dummy}, %rd4987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19673}, %rd4987;
	}
	shf.r.wrap.b32 	%r19674, %r19673, %r19672, 28;
	shf.r.wrap.b32 	%r19675, %r19672, %r19673, 28;
	mov.b64 	%rd5001, {%r19675, %r19674};
	shf.l.wrap.b32 	%r19676, %r19672, %r19673, 30;
	shf.l.wrap.b32 	%r19677, %r19673, %r19672, 30;
	mov.b64 	%rd5002, {%r19677, %r19676};
	xor.b64  	%rd5003, %rd5002, %rd5001;
	shf.l.wrap.b32 	%r19678, %r19672, %r19673, 25;
	shf.l.wrap.b32 	%r19679, %r19673, %r19672, 25;
	mov.b64 	%rd5004, {%r19679, %r19678};
	xor.b64  	%rd5005, %rd5003, %rd5004;
	xor.b64  	%rd5006, %rd4987, %rd4939;
	xor.b64  	%rd5007, %rd4987, %rd4963;
	and.b64  	%rd5008, %rd5007, %rd5006;
	xor.b64  	%rd5009, %rd5008, %rd4987;
	add.s64 	%rd5010, %rd4999, %rd5009;
	add.s64 	%rd5011, %rd5010, %rd5005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19680,%dummy}, %rd5000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19681}, %rd5000;
	}
	shf.r.wrap.b32 	%r19682, %r19681, %r19680, 14;
	shf.r.wrap.b32 	%r19683, %r19680, %r19681, 14;
	mov.b64 	%rd5012, {%r19683, %r19682};
	shf.r.wrap.b32 	%r19684, %r19681, %r19680, 18;
	shf.r.wrap.b32 	%r19685, %r19680, %r19681, 18;
	mov.b64 	%rd5013, {%r19685, %r19684};
	xor.b64  	%rd5014, %rd5013, %rd5012;
	shf.l.wrap.b32 	%r19686, %r19680, %r19681, 23;
	shf.l.wrap.b32 	%r19687, %r19681, %r19680, 23;
	mov.b64 	%rd5015, {%r19687, %r19686};
	xor.b64  	%rd5016, %rd5014, %rd5015;
	xor.b64  	%rd5017, %rd4976, %rd4952;
	and.b64  	%rd5018, %rd5000, %rd5017;
	xor.b64  	%rd5019, %rd5018, %rd4952;
	add.s64 	%rd5020, %rd4928, %rd4717;
	add.s64 	%rd5021, %rd5020, %rd59;
	add.s64 	%rd5022, %rd5021, %rd5019;
	add.s64 	%rd5023, %rd5022, %rd5016;
	add.s64 	%rd5024, %rd5023, %rd4939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19688,%dummy}, %rd5011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19689}, %rd5011;
	}
	shf.r.wrap.b32 	%r19690, %r19689, %r19688, 28;
	shf.r.wrap.b32 	%r19691, %r19688, %r19689, 28;
	mov.b64 	%rd5025, {%r19691, %r19690};
	shf.l.wrap.b32 	%r19692, %r19688, %r19689, 30;
	shf.l.wrap.b32 	%r19693, %r19689, %r19688, 30;
	mov.b64 	%rd5026, {%r19693, %r19692};
	xor.b64  	%rd5027, %rd5026, %rd5025;
	shf.l.wrap.b32 	%r19694, %r19688, %r19689, 25;
	shf.l.wrap.b32 	%r19695, %r19689, %r19688, 25;
	mov.b64 	%rd5028, {%r19695, %r19694};
	xor.b64  	%rd5029, %rd5027, %rd5028;
	xor.b64  	%rd5030, %rd5011, %rd4963;
	xor.b64  	%rd5031, %rd5011, %rd4987;
	and.b64  	%rd5032, %rd5031, %rd5030;
	xor.b64  	%rd5033, %rd5032, %rd5011;
	add.s64 	%rd5034, %rd5023, %rd5033;
	add.s64 	%rd5035, %rd5034, %rd5029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19696,%dummy}, %rd5024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19697}, %rd5024;
	}
	shf.r.wrap.b32 	%r19698, %r19697, %r19696, 14;
	shf.r.wrap.b32 	%r19699, %r19696, %r19697, 14;
	mov.b64 	%rd5036, {%r19699, %r19698};
	shf.r.wrap.b32 	%r19700, %r19697, %r19696, 18;
	shf.r.wrap.b32 	%r19701, %r19696, %r19697, 18;
	mov.b64 	%rd5037, {%r19701, %r19700};
	xor.b64  	%rd5038, %rd5037, %rd5036;
	shf.l.wrap.b32 	%r19702, %r19696, %r19697, 23;
	shf.l.wrap.b32 	%r19703, %r19697, %r19696, 23;
	mov.b64 	%rd5039, {%r19703, %r19702};
	xor.b64  	%rd5040, %rd5038, %rd5039;
	xor.b64  	%rd5041, %rd5000, %rd4976;
	and.b64  	%rd5042, %rd5024, %rd5041;
	xor.b64  	%rd5043, %rd5042, %rd4976;
	add.s64 	%rd5044, %rd4952, %rd4730;
	add.s64 	%rd5045, %rd5044, %rd60;
	add.s64 	%rd5046, %rd5045, %rd5043;
	add.s64 	%rd5047, %rd5046, %rd5040;
	add.s64 	%rd5048, %rd5047, %rd4963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19704,%dummy}, %rd5035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19705}, %rd5035;
	}
	shf.r.wrap.b32 	%r19706, %r19705, %r19704, 28;
	shf.r.wrap.b32 	%r19707, %r19704, %r19705, 28;
	mov.b64 	%rd5049, {%r19707, %r19706};
	shf.l.wrap.b32 	%r19708, %r19704, %r19705, 30;
	shf.l.wrap.b32 	%r19709, %r19705, %r19704, 30;
	mov.b64 	%rd5050, {%r19709, %r19708};
	xor.b64  	%rd5051, %rd5050, %rd5049;
	shf.l.wrap.b32 	%r19710, %r19704, %r19705, 25;
	shf.l.wrap.b32 	%r19711, %r19705, %r19704, 25;
	mov.b64 	%rd5052, {%r19711, %r19710};
	xor.b64  	%rd5053, %rd5051, %rd5052;
	xor.b64  	%rd5054, %rd5035, %rd4987;
	xor.b64  	%rd5055, %rd5035, %rd5011;
	and.b64  	%rd5056, %rd5055, %rd5054;
	xor.b64  	%rd5057, %rd5056, %rd5035;
	add.s64 	%rd5058, %rd5047, %rd5057;
	add.s64 	%rd5059, %rd5058, %rd5053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19712,%dummy}, %rd5048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19713}, %rd5048;
	}
	shf.r.wrap.b32 	%r19714, %r19713, %r19712, 14;
	shf.r.wrap.b32 	%r19715, %r19712, %r19713, 14;
	mov.b64 	%rd5060, {%r19715, %r19714};
	shf.r.wrap.b32 	%r19716, %r19713, %r19712, 18;
	shf.r.wrap.b32 	%r19717, %r19712, %r19713, 18;
	mov.b64 	%rd5061, {%r19717, %r19716};
	xor.b64  	%rd5062, %rd5061, %rd5060;
	shf.l.wrap.b32 	%r19718, %r19712, %r19713, 23;
	shf.l.wrap.b32 	%r19719, %r19713, %r19712, 23;
	mov.b64 	%rd5063, {%r19719, %r19718};
	xor.b64  	%rd5064, %rd5062, %rd5063;
	xor.b64  	%rd5065, %rd5024, %rd5000;
	and.b64  	%rd5066, %rd5048, %rd5065;
	xor.b64  	%rd5067, %rd5066, %rd5000;
	add.s64 	%rd5068, %rd4976, %rd4743;
	add.s64 	%rd5069, %rd5068, %rd61;
	add.s64 	%rd5070, %rd5069, %rd5067;
	add.s64 	%rd5071, %rd5070, %rd5064;
	add.s64 	%rd5072, %rd5071, %rd4987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19720,%dummy}, %rd5059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19721}, %rd5059;
	}
	shf.r.wrap.b32 	%r19722, %r19721, %r19720, 28;
	shf.r.wrap.b32 	%r19723, %r19720, %r19721, 28;
	mov.b64 	%rd5073, {%r19723, %r19722};
	shf.l.wrap.b32 	%r19724, %r19720, %r19721, 30;
	shf.l.wrap.b32 	%r19725, %r19721, %r19720, 30;
	mov.b64 	%rd5074, {%r19725, %r19724};
	xor.b64  	%rd5075, %rd5074, %rd5073;
	shf.l.wrap.b32 	%r19726, %r19720, %r19721, 25;
	shf.l.wrap.b32 	%r19727, %r19721, %r19720, 25;
	mov.b64 	%rd5076, {%r19727, %r19726};
	xor.b64  	%rd5077, %rd5075, %rd5076;
	xor.b64  	%rd5078, %rd5059, %rd5011;
	xor.b64  	%rd5079, %rd5059, %rd5035;
	and.b64  	%rd5080, %rd5079, %rd5078;
	xor.b64  	%rd5081, %rd5080, %rd5059;
	add.s64 	%rd5082, %rd5071, %rd5081;
	add.s64 	%rd5083, %rd5082, %rd5077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19728,%dummy}, %rd5072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19729}, %rd5072;
	}
	shf.r.wrap.b32 	%r19730, %r19729, %r19728, 14;
	shf.r.wrap.b32 	%r19731, %r19728, %r19729, 14;
	mov.b64 	%rd5084, {%r19731, %r19730};
	shf.r.wrap.b32 	%r19732, %r19729, %r19728, 18;
	shf.r.wrap.b32 	%r19733, %r19728, %r19729, 18;
	mov.b64 	%rd5085, {%r19733, %r19732};
	xor.b64  	%rd5086, %rd5085, %rd5084;
	shf.l.wrap.b32 	%r19734, %r19728, %r19729, 23;
	shf.l.wrap.b32 	%r19735, %r19729, %r19728, 23;
	mov.b64 	%rd5087, {%r19735, %r19734};
	xor.b64  	%rd5088, %rd5086, %rd5087;
	xor.b64  	%rd5089, %rd5048, %rd5024;
	and.b64  	%rd5090, %rd5072, %rd5089;
	xor.b64  	%rd5091, %rd5090, %rd5024;
	add.s64 	%rd5092, %rd5000, %rd4756;
	add.s64 	%rd5093, %rd5092, %rd62;
	add.s64 	%rd5094, %rd5093, %rd5091;
	add.s64 	%rd5095, %rd5094, %rd5088;
	add.s64 	%rd5096, %rd5095, %rd5011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19736,%dummy}, %rd5083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19737}, %rd5083;
	}
	shf.r.wrap.b32 	%r19738, %r19737, %r19736, 28;
	shf.r.wrap.b32 	%r19739, %r19736, %r19737, 28;
	mov.b64 	%rd5097, {%r19739, %r19738};
	shf.l.wrap.b32 	%r19740, %r19736, %r19737, 30;
	shf.l.wrap.b32 	%r19741, %r19737, %r19736, 30;
	mov.b64 	%rd5098, {%r19741, %r19740};
	xor.b64  	%rd5099, %rd5098, %rd5097;
	shf.l.wrap.b32 	%r19742, %r19736, %r19737, 25;
	shf.l.wrap.b32 	%r19743, %r19737, %r19736, 25;
	mov.b64 	%rd5100, {%r19743, %r19742};
	xor.b64  	%rd5101, %rd5099, %rd5100;
	xor.b64  	%rd5102, %rd5083, %rd5035;
	xor.b64  	%rd5103, %rd5083, %rd5059;
	and.b64  	%rd5104, %rd5103, %rd5102;
	xor.b64  	%rd5105, %rd5104, %rd5083;
	add.s64 	%rd5106, %rd5095, %rd5105;
	add.s64 	%rd5107, %rd5106, %rd5101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19744,%dummy}, %rd5096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19745}, %rd5096;
	}
	shf.r.wrap.b32 	%r19746, %r19745, %r19744, 14;
	shf.r.wrap.b32 	%r19747, %r19744, %r19745, 14;
	mov.b64 	%rd5108, {%r19747, %r19746};
	shf.r.wrap.b32 	%r19748, %r19745, %r19744, 18;
	shf.r.wrap.b32 	%r19749, %r19744, %r19745, 18;
	mov.b64 	%rd5109, {%r19749, %r19748};
	xor.b64  	%rd5110, %rd5109, %rd5108;
	shf.l.wrap.b32 	%r19750, %r19744, %r19745, 23;
	shf.l.wrap.b32 	%r19751, %r19745, %r19744, 23;
	mov.b64 	%rd5111, {%r19751, %r19750};
	xor.b64  	%rd5112, %rd5110, %rd5111;
	xor.b64  	%rd5113, %rd5072, %rd5048;
	and.b64  	%rd5114, %rd5096, %rd5113;
	xor.b64  	%rd5115, %rd5114, %rd5048;
	add.s64 	%rd5116, %rd5024, %rd4769;
	add.s64 	%rd5117, %rd5116, %rd63;
	add.s64 	%rd5118, %rd5117, %rd5115;
	add.s64 	%rd5119, %rd5118, %rd5112;
	add.s64 	%rd5120, %rd5119, %rd5035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19752,%dummy}, %rd5107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19753}, %rd5107;
	}
	shf.r.wrap.b32 	%r19754, %r19753, %r19752, 28;
	shf.r.wrap.b32 	%r19755, %r19752, %r19753, 28;
	mov.b64 	%rd5121, {%r19755, %r19754};
	shf.l.wrap.b32 	%r19756, %r19752, %r19753, 30;
	shf.l.wrap.b32 	%r19757, %r19753, %r19752, 30;
	mov.b64 	%rd5122, {%r19757, %r19756};
	xor.b64  	%rd5123, %rd5122, %rd5121;
	shf.l.wrap.b32 	%r19758, %r19752, %r19753, 25;
	shf.l.wrap.b32 	%r19759, %r19753, %r19752, 25;
	mov.b64 	%rd5124, {%r19759, %r19758};
	xor.b64  	%rd5125, %rd5123, %rd5124;
	xor.b64  	%rd5126, %rd5107, %rd5059;
	xor.b64  	%rd5127, %rd5107, %rd5083;
	and.b64  	%rd5128, %rd5127, %rd5126;
	xor.b64  	%rd5129, %rd5128, %rd5107;
	add.s64 	%rd5130, %rd5119, %rd5129;
	add.s64 	%rd5131, %rd5130, %rd5125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19760,%dummy}, %rd5120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19761}, %rd5120;
	}
	shf.r.wrap.b32 	%r19762, %r19761, %r19760, 14;
	shf.r.wrap.b32 	%r19763, %r19760, %r19761, 14;
	mov.b64 	%rd5132, {%r19763, %r19762};
	shf.r.wrap.b32 	%r19764, %r19761, %r19760, 18;
	shf.r.wrap.b32 	%r19765, %r19760, %r19761, 18;
	mov.b64 	%rd5133, {%r19765, %r19764};
	xor.b64  	%rd5134, %rd5133, %rd5132;
	shf.l.wrap.b32 	%r19766, %r19760, %r19761, 23;
	shf.l.wrap.b32 	%r19767, %r19761, %r19760, 23;
	mov.b64 	%rd5135, {%r19767, %r19766};
	xor.b64  	%rd5136, %rd5134, %rd5135;
	xor.b64  	%rd5137, %rd5096, %rd5072;
	and.b64  	%rd5138, %rd5120, %rd5137;
	xor.b64  	%rd5139, %rd5138, %rd5072;
	add.s64 	%rd5140, %rd5048, %rd4782;
	add.s64 	%rd5141, %rd5140, %rd64;
	add.s64 	%rd5142, %rd5141, %rd5139;
	add.s64 	%rd5143, %rd5142, %rd5136;
	add.s64 	%rd5144, %rd5143, %rd5059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19768,%dummy}, %rd5131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19769}, %rd5131;
	}
	shf.r.wrap.b32 	%r19770, %r19769, %r19768, 28;
	shf.r.wrap.b32 	%r19771, %r19768, %r19769, 28;
	mov.b64 	%rd5145, {%r19771, %r19770};
	shf.l.wrap.b32 	%r19772, %r19768, %r19769, 30;
	shf.l.wrap.b32 	%r19773, %r19769, %r19768, 30;
	mov.b64 	%rd5146, {%r19773, %r19772};
	xor.b64  	%rd5147, %rd5146, %rd5145;
	shf.l.wrap.b32 	%r19774, %r19768, %r19769, 25;
	shf.l.wrap.b32 	%r19775, %r19769, %r19768, 25;
	mov.b64 	%rd5148, {%r19775, %r19774};
	xor.b64  	%rd5149, %rd5147, %rd5148;
	xor.b64  	%rd5150, %rd5131, %rd5083;
	xor.b64  	%rd5151, %rd5131, %rd5107;
	and.b64  	%rd5152, %rd5151, %rd5150;
	xor.b64  	%rd5153, %rd5152, %rd5131;
	add.s64 	%rd5154, %rd5143, %rd5153;
	add.s64 	%rd5155, %rd5154, %rd5149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19776,%dummy}, %rd5144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19777}, %rd5144;
	}
	shf.r.wrap.b32 	%r19778, %r19777, %r19776, 14;
	shf.r.wrap.b32 	%r19779, %r19776, %r19777, 14;
	mov.b64 	%rd5156, {%r19779, %r19778};
	shf.r.wrap.b32 	%r19780, %r19777, %r19776, 18;
	shf.r.wrap.b32 	%r19781, %r19776, %r19777, 18;
	mov.b64 	%rd5157, {%r19781, %r19780};
	xor.b64  	%rd5158, %rd5157, %rd5156;
	shf.l.wrap.b32 	%r19782, %r19776, %r19777, 23;
	shf.l.wrap.b32 	%r19783, %r19777, %r19776, 23;
	mov.b64 	%rd5159, {%r19783, %r19782};
	xor.b64  	%rd5160, %rd5158, %rd5159;
	xor.b64  	%rd5161, %rd5120, %rd5096;
	and.b64  	%rd5162, %rd5144, %rd5161;
	xor.b64  	%rd5163, %rd5162, %rd5096;
	add.s64 	%rd5164, %rd5072, %rd4795;
	add.s64 	%rd5165, %rd5164, %rd65;
	add.s64 	%rd5166, %rd5165, %rd5163;
	add.s64 	%rd5167, %rd5166, %rd5160;
	add.s64 	%rd5168, %rd5167, %rd5083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19784,%dummy}, %rd5155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19785}, %rd5155;
	}
	shf.r.wrap.b32 	%r19786, %r19785, %r19784, 28;
	shf.r.wrap.b32 	%r19787, %r19784, %r19785, 28;
	mov.b64 	%rd5169, {%r19787, %r19786};
	shf.l.wrap.b32 	%r19788, %r19784, %r19785, 30;
	shf.l.wrap.b32 	%r19789, %r19785, %r19784, 30;
	mov.b64 	%rd5170, {%r19789, %r19788};
	xor.b64  	%rd5171, %rd5170, %rd5169;
	shf.l.wrap.b32 	%r19790, %r19784, %r19785, 25;
	shf.l.wrap.b32 	%r19791, %r19785, %r19784, 25;
	mov.b64 	%rd5172, {%r19791, %r19790};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	xor.b64  	%rd5174, %rd5155, %rd5107;
	xor.b64  	%rd5175, %rd5155, %rd5131;
	and.b64  	%rd5176, %rd5175, %rd5174;
	xor.b64  	%rd5177, %rd5176, %rd5155;
	add.s64 	%rd5178, %rd5167, %rd5177;
	add.s64 	%rd5179, %rd5178, %rd5173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19792,%dummy}, %rd4782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19793}, %rd4782;
	}
	shf.r.wrap.b32 	%r19794, %r19793, %r19792, 19;
	shf.r.wrap.b32 	%r19795, %r19792, %r19793, 19;
	mov.b64 	%rd5180, {%r19795, %r19794};
	shf.l.wrap.b32 	%r19796, %r19792, %r19793, 3;
	shf.l.wrap.b32 	%r19797, %r19793, %r19792, 3;
	mov.b64 	%rd5181, {%r19797, %r19796};
	shr.u64 	%rd5182, %rd4782, 6;
	xor.b64  	%rd5183, %rd5180, %rd5182;
	xor.b64  	%rd5184, %rd5183, %rd5181;
	shf.r.wrap.b32 	%r19798, %r19407, %r19406, 1;
	shf.r.wrap.b32 	%r19799, %r19406, %r19407, 1;
	mov.b64 	%rd5185, {%r19799, %r19798};
	shf.r.wrap.b32 	%r19800, %r19407, %r19406, 8;
	shf.r.wrap.b32 	%r19801, %r19406, %r19407, 8;
	mov.b64 	%rd5186, {%r19801, %r19800};
	shr.u64 	%rd5187, %rd4613, 7;
	xor.b64  	%rd5188, %rd5185, %rd5187;
	xor.b64  	%rd5189, %rd5188, %rd5186;
	add.s64 	%rd5190, %rd4717, %rd4600;
	add.s64 	%rd5191, %rd5190, %rd5184;
	add.s64 	%rd5192, %rd5191, %rd5189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19802,%dummy}, %rd4795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19803}, %rd4795;
	}
	shf.r.wrap.b32 	%r19804, %r19803, %r19802, 19;
	shf.r.wrap.b32 	%r19805, %r19802, %r19803, 19;
	mov.b64 	%rd5193, {%r19805, %r19804};
	shf.l.wrap.b32 	%r19806, %r19802, %r19803, 3;
	shf.l.wrap.b32 	%r19807, %r19803, %r19802, 3;
	mov.b64 	%rd5194, {%r19807, %r19806};
	shr.u64 	%rd5195, %rd4795, 6;
	xor.b64  	%rd5196, %rd5193, %rd5195;
	xor.b64  	%rd5197, %rd5196, %rd5194;
	shf.r.wrap.b32 	%r19808, %r19417, %r19416, 1;
	shf.r.wrap.b32 	%r19809, %r19416, %r19417, 1;
	mov.b64 	%rd5198, {%r19809, %r19808};
	shf.r.wrap.b32 	%r19810, %r19417, %r19416, 8;
	shf.r.wrap.b32 	%r19811, %r19416, %r19417, 8;
	mov.b64 	%rd5199, {%r19811, %r19810};
	shr.u64 	%rd5200, %rd4626, 7;
	xor.b64  	%rd5201, %rd5198, %rd5200;
	xor.b64  	%rd5202, %rd5201, %rd5199;
	add.s64 	%rd5203, %rd4730, %rd4613;
	add.s64 	%rd5204, %rd5203, %rd5197;
	add.s64 	%rd5205, %rd5204, %rd5202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19812,%dummy}, %rd5192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19813}, %rd5192;
	}
	shf.r.wrap.b32 	%r19814, %r19813, %r19812, 19;
	shf.r.wrap.b32 	%r19815, %r19812, %r19813, 19;
	mov.b64 	%rd5206, {%r19815, %r19814};
	shf.l.wrap.b32 	%r19816, %r19812, %r19813, 3;
	shf.l.wrap.b32 	%r19817, %r19813, %r19812, 3;
	mov.b64 	%rd5207, {%r19817, %r19816};
	shr.u64 	%rd5208, %rd5192, 6;
	xor.b64  	%rd5209, %rd5206, %rd5208;
	xor.b64  	%rd5210, %rd5209, %rd5207;
	shf.r.wrap.b32 	%r19818, %r19427, %r19426, 1;
	shf.r.wrap.b32 	%r19819, %r19426, %r19427, 1;
	mov.b64 	%rd5211, {%r19819, %r19818};
	shf.r.wrap.b32 	%r19820, %r19427, %r19426, 8;
	shf.r.wrap.b32 	%r19821, %r19426, %r19427, 8;
	mov.b64 	%rd5212, {%r19821, %r19820};
	shr.u64 	%rd5213, %rd4639, 7;
	xor.b64  	%rd5214, %rd5211, %rd5213;
	xor.b64  	%rd5215, %rd5214, %rd5212;
	add.s64 	%rd5216, %rd4743, %rd4626;
	add.s64 	%rd5217, %rd5216, %rd5210;
	add.s64 	%rd5218, %rd5217, %rd5215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19822,%dummy}, %rd5205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19823}, %rd5205;
	}
	shf.r.wrap.b32 	%r19824, %r19823, %r19822, 19;
	shf.r.wrap.b32 	%r19825, %r19822, %r19823, 19;
	mov.b64 	%rd5219, {%r19825, %r19824};
	shf.l.wrap.b32 	%r19826, %r19822, %r19823, 3;
	shf.l.wrap.b32 	%r19827, %r19823, %r19822, 3;
	mov.b64 	%rd5220, {%r19827, %r19826};
	shr.u64 	%rd5221, %rd5205, 6;
	xor.b64  	%rd5222, %rd5219, %rd5221;
	xor.b64  	%rd5223, %rd5222, %rd5220;
	shf.r.wrap.b32 	%r19828, %r19437, %r19436, 1;
	shf.r.wrap.b32 	%r19829, %r19436, %r19437, 1;
	mov.b64 	%rd5224, {%r19829, %r19828};
	shf.r.wrap.b32 	%r19830, %r19437, %r19436, 8;
	shf.r.wrap.b32 	%r19831, %r19436, %r19437, 8;
	mov.b64 	%rd5225, {%r19831, %r19830};
	shr.u64 	%rd5226, %rd4652, 7;
	xor.b64  	%rd5227, %rd5224, %rd5226;
	xor.b64  	%rd5228, %rd5227, %rd5225;
	add.s64 	%rd5229, %rd4756, %rd4639;
	add.s64 	%rd5230, %rd5229, %rd5223;
	add.s64 	%rd5231, %rd5230, %rd5228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19832,%dummy}, %rd5218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19833}, %rd5218;
	}
	shf.r.wrap.b32 	%r19834, %r19833, %r19832, 19;
	shf.r.wrap.b32 	%r19835, %r19832, %r19833, 19;
	mov.b64 	%rd5232, {%r19835, %r19834};
	shf.l.wrap.b32 	%r19836, %r19832, %r19833, 3;
	shf.l.wrap.b32 	%r19837, %r19833, %r19832, 3;
	mov.b64 	%rd5233, {%r19837, %r19836};
	shr.u64 	%rd5234, %rd5218, 6;
	xor.b64  	%rd5235, %rd5232, %rd5234;
	xor.b64  	%rd5236, %rd5235, %rd5233;
	shf.r.wrap.b32 	%r19838, %r19447, %r19446, 1;
	shf.r.wrap.b32 	%r19839, %r19446, %r19447, 1;
	mov.b64 	%rd5237, {%r19839, %r19838};
	shf.r.wrap.b32 	%r19840, %r19447, %r19446, 8;
	shf.r.wrap.b32 	%r19841, %r19446, %r19447, 8;
	mov.b64 	%rd5238, {%r19841, %r19840};
	shr.u64 	%rd5239, %rd4665, 7;
	xor.b64  	%rd5240, %rd5237, %rd5239;
	xor.b64  	%rd5241, %rd5240, %rd5238;
	add.s64 	%rd5242, %rd4769, %rd4652;
	add.s64 	%rd5243, %rd5242, %rd5236;
	add.s64 	%rd5244, %rd5243, %rd5241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19842,%dummy}, %rd5231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19843}, %rd5231;
	}
	shf.r.wrap.b32 	%r19844, %r19843, %r19842, 19;
	shf.r.wrap.b32 	%r19845, %r19842, %r19843, 19;
	mov.b64 	%rd5245, {%r19845, %r19844};
	shf.l.wrap.b32 	%r19846, %r19842, %r19843, 3;
	shf.l.wrap.b32 	%r19847, %r19843, %r19842, 3;
	mov.b64 	%rd5246, {%r19847, %r19846};
	shr.u64 	%rd5247, %rd5231, 6;
	xor.b64  	%rd5248, %rd5245, %rd5247;
	xor.b64  	%rd5249, %rd5248, %rd5246;
	shf.r.wrap.b32 	%r19848, %r19457, %r19456, 1;
	shf.r.wrap.b32 	%r19849, %r19456, %r19457, 1;
	mov.b64 	%rd5250, {%r19849, %r19848};
	shf.r.wrap.b32 	%r19850, %r19457, %r19456, 8;
	shf.r.wrap.b32 	%r19851, %r19456, %r19457, 8;
	mov.b64 	%rd5251, {%r19851, %r19850};
	shr.u64 	%rd5252, %rd4678, 7;
	xor.b64  	%rd5253, %rd5250, %rd5252;
	xor.b64  	%rd5254, %rd5253, %rd5251;
	add.s64 	%rd5255, %rd4782, %rd4665;
	add.s64 	%rd5256, %rd5255, %rd5249;
	add.s64 	%rd5257, %rd5256, %rd5254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19852,%dummy}, %rd5244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19853}, %rd5244;
	}
	shf.r.wrap.b32 	%r19854, %r19853, %r19852, 19;
	shf.r.wrap.b32 	%r19855, %r19852, %r19853, 19;
	mov.b64 	%rd5258, {%r19855, %r19854};
	shf.l.wrap.b32 	%r19856, %r19852, %r19853, 3;
	shf.l.wrap.b32 	%r19857, %r19853, %r19852, 3;
	mov.b64 	%rd5259, {%r19857, %r19856};
	shr.u64 	%rd5260, %rd5244, 6;
	xor.b64  	%rd5261, %rd5258, %rd5260;
	xor.b64  	%rd5262, %rd5261, %rd5259;
	shf.r.wrap.b32 	%r19858, %r19467, %r19466, 1;
	shf.r.wrap.b32 	%r19859, %r19466, %r19467, 1;
	mov.b64 	%rd5263, {%r19859, %r19858};
	shf.r.wrap.b32 	%r19860, %r19467, %r19466, 8;
	shf.r.wrap.b32 	%r19861, %r19466, %r19467, 8;
	mov.b64 	%rd5264, {%r19861, %r19860};
	shr.u64 	%rd5265, %rd4691, 7;
	xor.b64  	%rd5266, %rd5263, %rd5265;
	xor.b64  	%rd5267, %rd5266, %rd5264;
	add.s64 	%rd5268, %rd4795, %rd4678;
	add.s64 	%rd5269, %rd5268, %rd5262;
	add.s64 	%rd5270, %rd5269, %rd5267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19862,%dummy}, %rd5257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19863}, %rd5257;
	}
	shf.r.wrap.b32 	%r19864, %r19863, %r19862, 19;
	shf.r.wrap.b32 	%r19865, %r19862, %r19863, 19;
	mov.b64 	%rd5271, {%r19865, %r19864};
	shf.l.wrap.b32 	%r19866, %r19862, %r19863, 3;
	shf.l.wrap.b32 	%r19867, %r19863, %r19862, 3;
	mov.b64 	%rd5272, {%r19867, %r19866};
	shr.u64 	%rd5273, %rd5257, 6;
	xor.b64  	%rd5274, %rd5271, %rd5273;
	xor.b64  	%rd5275, %rd5274, %rd5272;
	shf.r.wrap.b32 	%r19868, %r19477, %r19476, 1;
	shf.r.wrap.b32 	%r19869, %r19476, %r19477, 1;
	mov.b64 	%rd5276, {%r19869, %r19868};
	shf.r.wrap.b32 	%r19870, %r19477, %r19476, 8;
	shf.r.wrap.b32 	%r19871, %r19476, %r19477, 8;
	mov.b64 	%rd5277, {%r19871, %r19870};
	shr.u64 	%rd5278, %rd4704, 7;
	xor.b64  	%rd5279, %rd5276, %rd5278;
	xor.b64  	%rd5280, %rd5279, %rd5277;
	add.s64 	%rd5281, %rd5192, %rd4691;
	add.s64 	%rd5282, %rd5281, %rd5275;
	add.s64 	%rd5283, %rd5282, %rd5280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19872,%dummy}, %rd5270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19873}, %rd5270;
	}
	shf.r.wrap.b32 	%r19874, %r19873, %r19872, 19;
	shf.r.wrap.b32 	%r19875, %r19872, %r19873, 19;
	mov.b64 	%rd5284, {%r19875, %r19874};
	shf.l.wrap.b32 	%r19876, %r19872, %r19873, 3;
	shf.l.wrap.b32 	%r19877, %r19873, %r19872, 3;
	mov.b64 	%rd5285, {%r19877, %r19876};
	shr.u64 	%rd5286, %rd5270, 6;
	xor.b64  	%rd5287, %rd5284, %rd5286;
	xor.b64  	%rd5288, %rd5287, %rd5285;
	shf.r.wrap.b32 	%r19878, %r19487, %r19486, 1;
	shf.r.wrap.b32 	%r19879, %r19486, %r19487, 1;
	mov.b64 	%rd5289, {%r19879, %r19878};
	shf.r.wrap.b32 	%r19880, %r19487, %r19486, 8;
	shf.r.wrap.b32 	%r19881, %r19486, %r19487, 8;
	mov.b64 	%rd5290, {%r19881, %r19880};
	shr.u64 	%rd5291, %rd4717, 7;
	xor.b64  	%rd5292, %rd5289, %rd5291;
	xor.b64  	%rd5293, %rd5292, %rd5290;
	add.s64 	%rd5294, %rd5205, %rd4704;
	add.s64 	%rd5295, %rd5294, %rd5288;
	add.s64 	%rd5296, %rd5295, %rd5293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19882,%dummy}, %rd5283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19883}, %rd5283;
	}
	shf.r.wrap.b32 	%r19884, %r19883, %r19882, 19;
	shf.r.wrap.b32 	%r19885, %r19882, %r19883, 19;
	mov.b64 	%rd5297, {%r19885, %r19884};
	shf.l.wrap.b32 	%r19886, %r19882, %r19883, 3;
	shf.l.wrap.b32 	%r19887, %r19883, %r19882, 3;
	mov.b64 	%rd5298, {%r19887, %r19886};
	shr.u64 	%rd5299, %rd5283, 6;
	xor.b64  	%rd5300, %rd5297, %rd5299;
	xor.b64  	%rd5301, %rd5300, %rd5298;
	shf.r.wrap.b32 	%r19888, %r19497, %r19496, 1;
	shf.r.wrap.b32 	%r19889, %r19496, %r19497, 1;
	mov.b64 	%rd5302, {%r19889, %r19888};
	shf.r.wrap.b32 	%r19890, %r19497, %r19496, 8;
	shf.r.wrap.b32 	%r19891, %r19496, %r19497, 8;
	mov.b64 	%rd5303, {%r19891, %r19890};
	shr.u64 	%rd5304, %rd4730, 7;
	xor.b64  	%rd5305, %rd5302, %rd5304;
	xor.b64  	%rd5306, %rd5305, %rd5303;
	add.s64 	%rd5307, %rd5218, %rd4717;
	add.s64 	%rd5308, %rd5307, %rd5301;
	add.s64 	%rd5309, %rd5308, %rd5306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19892,%dummy}, %rd5296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19893}, %rd5296;
	}
	shf.r.wrap.b32 	%r19894, %r19893, %r19892, 19;
	shf.r.wrap.b32 	%r19895, %r19892, %r19893, 19;
	mov.b64 	%rd5310, {%r19895, %r19894};
	shf.l.wrap.b32 	%r19896, %r19892, %r19893, 3;
	shf.l.wrap.b32 	%r19897, %r19893, %r19892, 3;
	mov.b64 	%rd5311, {%r19897, %r19896};
	shr.u64 	%rd5312, %rd5296, 6;
	xor.b64  	%rd5313, %rd5310, %rd5312;
	xor.b64  	%rd5314, %rd5313, %rd5311;
	shf.r.wrap.b32 	%r19898, %r19507, %r19506, 1;
	shf.r.wrap.b32 	%r19899, %r19506, %r19507, 1;
	mov.b64 	%rd5315, {%r19899, %r19898};
	shf.r.wrap.b32 	%r19900, %r19507, %r19506, 8;
	shf.r.wrap.b32 	%r19901, %r19506, %r19507, 8;
	mov.b64 	%rd5316, {%r19901, %r19900};
	shr.u64 	%rd5317, %rd4743, 7;
	xor.b64  	%rd5318, %rd5315, %rd5317;
	xor.b64  	%rd5319, %rd5318, %rd5316;
	add.s64 	%rd5320, %rd5231, %rd4730;
	add.s64 	%rd5321, %rd5320, %rd5314;
	add.s64 	%rd5322, %rd5321, %rd5319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19902,%dummy}, %rd5309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19903}, %rd5309;
	}
	shf.r.wrap.b32 	%r19904, %r19903, %r19902, 19;
	shf.r.wrap.b32 	%r19905, %r19902, %r19903, 19;
	mov.b64 	%rd5323, {%r19905, %r19904};
	shf.l.wrap.b32 	%r19906, %r19902, %r19903, 3;
	shf.l.wrap.b32 	%r19907, %r19903, %r19902, 3;
	mov.b64 	%rd5324, {%r19907, %r19906};
	shr.u64 	%rd5325, %rd5309, 6;
	xor.b64  	%rd5326, %rd5323, %rd5325;
	xor.b64  	%rd5327, %rd5326, %rd5324;
	shf.r.wrap.b32 	%r19908, %r19517, %r19516, 1;
	shf.r.wrap.b32 	%r19909, %r19516, %r19517, 1;
	mov.b64 	%rd5328, {%r19909, %r19908};
	shf.r.wrap.b32 	%r19910, %r19517, %r19516, 8;
	shf.r.wrap.b32 	%r19911, %r19516, %r19517, 8;
	mov.b64 	%rd5329, {%r19911, %r19910};
	shr.u64 	%rd5330, %rd4756, 7;
	xor.b64  	%rd5331, %rd5328, %rd5330;
	xor.b64  	%rd5332, %rd5331, %rd5329;
	add.s64 	%rd5333, %rd5244, %rd4743;
	add.s64 	%rd5334, %rd5333, %rd5327;
	add.s64 	%rd5335, %rd5334, %rd5332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19912,%dummy}, %rd5322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19913}, %rd5322;
	}
	shf.r.wrap.b32 	%r19914, %r19913, %r19912, 19;
	shf.r.wrap.b32 	%r19915, %r19912, %r19913, 19;
	mov.b64 	%rd5336, {%r19915, %r19914};
	shf.l.wrap.b32 	%r19916, %r19912, %r19913, 3;
	shf.l.wrap.b32 	%r19917, %r19913, %r19912, 3;
	mov.b64 	%rd5337, {%r19917, %r19916};
	shr.u64 	%rd5338, %rd5322, 6;
	xor.b64  	%rd5339, %rd5336, %rd5338;
	xor.b64  	%rd5340, %rd5339, %rd5337;
	shf.r.wrap.b32 	%r19918, %r19527, %r19526, 1;
	shf.r.wrap.b32 	%r19919, %r19526, %r19527, 1;
	mov.b64 	%rd5341, {%r19919, %r19918};
	shf.r.wrap.b32 	%r19920, %r19527, %r19526, 8;
	shf.r.wrap.b32 	%r19921, %r19526, %r19527, 8;
	mov.b64 	%rd5342, {%r19921, %r19920};
	shr.u64 	%rd5343, %rd4769, 7;
	xor.b64  	%rd5344, %rd5341, %rd5343;
	xor.b64  	%rd5345, %rd5344, %rd5342;
	add.s64 	%rd5346, %rd5257, %rd4756;
	add.s64 	%rd5347, %rd5346, %rd5340;
	add.s64 	%rd5348, %rd5347, %rd5345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19922,%dummy}, %rd5335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19923}, %rd5335;
	}
	shf.r.wrap.b32 	%r19924, %r19923, %r19922, 19;
	shf.r.wrap.b32 	%r19925, %r19922, %r19923, 19;
	mov.b64 	%rd5349, {%r19925, %r19924};
	shf.l.wrap.b32 	%r19926, %r19922, %r19923, 3;
	shf.l.wrap.b32 	%r19927, %r19923, %r19922, 3;
	mov.b64 	%rd5350, {%r19927, %r19926};
	shr.u64 	%rd5351, %rd5335, 6;
	xor.b64  	%rd5352, %rd5349, %rd5351;
	xor.b64  	%rd5353, %rd5352, %rd5350;
	shf.r.wrap.b32 	%r19928, %r19793, %r19792, 1;
	shf.r.wrap.b32 	%r19929, %r19792, %r19793, 1;
	mov.b64 	%rd5354, {%r19929, %r19928};
	shf.r.wrap.b32 	%r19930, %r19793, %r19792, 8;
	shf.r.wrap.b32 	%r19931, %r19792, %r19793, 8;
	mov.b64 	%rd5355, {%r19931, %r19930};
	shr.u64 	%rd5356, %rd4782, 7;
	xor.b64  	%rd5357, %rd5354, %rd5356;
	xor.b64  	%rd5358, %rd5357, %rd5355;
	add.s64 	%rd5359, %rd5270, %rd4769;
	add.s64 	%rd5360, %rd5359, %rd5353;
	add.s64 	%rd5361, %rd5360, %rd5358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19932,%dummy}, %rd5348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19933}, %rd5348;
	}
	shf.r.wrap.b32 	%r19934, %r19933, %r19932, 19;
	shf.r.wrap.b32 	%r19935, %r19932, %r19933, 19;
	mov.b64 	%rd5362, {%r19935, %r19934};
	shf.l.wrap.b32 	%r19936, %r19932, %r19933, 3;
	shf.l.wrap.b32 	%r19937, %r19933, %r19932, 3;
	mov.b64 	%rd5363, {%r19937, %r19936};
	shr.u64 	%rd5364, %rd5348, 6;
	xor.b64  	%rd5365, %rd5362, %rd5364;
	xor.b64  	%rd5366, %rd5365, %rd5363;
	shf.r.wrap.b32 	%r19938, %r19803, %r19802, 1;
	shf.r.wrap.b32 	%r19939, %r19802, %r19803, 1;
	mov.b64 	%rd5367, {%r19939, %r19938};
	shf.r.wrap.b32 	%r19940, %r19803, %r19802, 8;
	shf.r.wrap.b32 	%r19941, %r19802, %r19803, 8;
	mov.b64 	%rd5368, {%r19941, %r19940};
	shr.u64 	%rd5369, %rd4795, 7;
	xor.b64  	%rd5370, %rd5367, %rd5369;
	xor.b64  	%rd5371, %rd5370, %rd5368;
	add.s64 	%rd5372, %rd5283, %rd4782;
	add.s64 	%rd5373, %rd5372, %rd5366;
	add.s64 	%rd5374, %rd5373, %rd5371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19942,%dummy}, %rd5361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19943}, %rd5361;
	}
	shf.r.wrap.b32 	%r19944, %r19943, %r19942, 19;
	shf.r.wrap.b32 	%r19945, %r19942, %r19943, 19;
	mov.b64 	%rd5375, {%r19945, %r19944};
	shf.l.wrap.b32 	%r19946, %r19942, %r19943, 3;
	shf.l.wrap.b32 	%r19947, %r19943, %r19942, 3;
	mov.b64 	%rd5376, {%r19947, %r19946};
	shr.u64 	%rd5377, %rd5361, 6;
	xor.b64  	%rd5378, %rd5375, %rd5377;
	xor.b64  	%rd5379, %rd5378, %rd5376;
	shf.r.wrap.b32 	%r19948, %r19813, %r19812, 1;
	shf.r.wrap.b32 	%r19949, %r19812, %r19813, 1;
	mov.b64 	%rd5380, {%r19949, %r19948};
	shf.r.wrap.b32 	%r19950, %r19813, %r19812, 8;
	shf.r.wrap.b32 	%r19951, %r19812, %r19813, 8;
	mov.b64 	%rd5381, {%r19951, %r19950};
	shr.u64 	%rd5382, %rd5192, 7;
	xor.b64  	%rd5383, %rd5380, %rd5382;
	xor.b64  	%rd5384, %rd5383, %rd5381;
	add.s64 	%rd5385, %rd5296, %rd4795;
	add.s64 	%rd5386, %rd5385, %rd5379;
	add.s64 	%rd5387, %rd5386, %rd5384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19952,%dummy}, %rd5168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19953}, %rd5168;
	}
	shf.r.wrap.b32 	%r19954, %r19953, %r19952, 14;
	shf.r.wrap.b32 	%r19955, %r19952, %r19953, 14;
	mov.b64 	%rd5388, {%r19955, %r19954};
	shf.r.wrap.b32 	%r19956, %r19953, %r19952, 18;
	shf.r.wrap.b32 	%r19957, %r19952, %r19953, 18;
	mov.b64 	%rd5389, {%r19957, %r19956};
	xor.b64  	%rd5390, %rd5389, %rd5388;
	shf.l.wrap.b32 	%r19958, %r19952, %r19953, 23;
	shf.l.wrap.b32 	%r19959, %r19953, %r19952, 23;
	mov.b64 	%rd5391, {%r19959, %r19958};
	xor.b64  	%rd5392, %rd5390, %rd5391;
	xor.b64  	%rd5393, %rd5144, %rd5120;
	and.b64  	%rd5394, %rd5393, %rd5168;
	xor.b64  	%rd5395, %rd5394, %rd5120;
	add.s64 	%rd5396, %rd5395, %rd5096;
	add.s64 	%rd5397, %rd5396, %rd5192;
	add.s64 	%rd5398, %rd5397, %rd66;
	add.s64 	%rd5399, %rd5398, %rd5392;
	add.s64 	%rd5400, %rd5399, %rd5107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19960,%dummy}, %rd5179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19961}, %rd5179;
	}
	shf.r.wrap.b32 	%r19962, %r19961, %r19960, 28;
	shf.r.wrap.b32 	%r19963, %r19960, %r19961, 28;
	mov.b64 	%rd5401, {%r19963, %r19962};
	shf.l.wrap.b32 	%r19964, %r19960, %r19961, 30;
	shf.l.wrap.b32 	%r19965, %r19961, %r19960, 30;
	mov.b64 	%rd5402, {%r19965, %r19964};
	xor.b64  	%rd5403, %rd5402, %rd5401;
	shf.l.wrap.b32 	%r19966, %r19960, %r19961, 25;
	shf.l.wrap.b32 	%r19967, %r19961, %r19960, 25;
	mov.b64 	%rd5404, {%r19967, %r19966};
	xor.b64  	%rd5405, %rd5403, %rd5404;
	xor.b64  	%rd5406, %rd5179, %rd5131;
	xor.b64  	%rd5407, %rd5179, %rd5155;
	and.b64  	%rd5408, %rd5407, %rd5406;
	xor.b64  	%rd5409, %rd5408, %rd5179;
	add.s64 	%rd5410, %rd5399, %rd5409;
	add.s64 	%rd5411, %rd5410, %rd5405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19968,%dummy}, %rd5400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19969}, %rd5400;
	}
	shf.r.wrap.b32 	%r19970, %r19969, %r19968, 14;
	shf.r.wrap.b32 	%r19971, %r19968, %r19969, 14;
	mov.b64 	%rd5412, {%r19971, %r19970};
	shf.r.wrap.b32 	%r19972, %r19969, %r19968, 18;
	shf.r.wrap.b32 	%r19973, %r19968, %r19969, 18;
	mov.b64 	%rd5413, {%r19973, %r19972};
	xor.b64  	%rd5414, %rd5413, %rd5412;
	shf.l.wrap.b32 	%r19974, %r19968, %r19969, 23;
	shf.l.wrap.b32 	%r19975, %r19969, %r19968, 23;
	mov.b64 	%rd5415, {%r19975, %r19974};
	xor.b64  	%rd5416, %rd5414, %rd5415;
	xor.b64  	%rd5417, %rd5168, %rd5144;
	and.b64  	%rd5418, %rd5400, %rd5417;
	xor.b64  	%rd5419, %rd5418, %rd5144;
	add.s64 	%rd5420, %rd5205, %rd5120;
	add.s64 	%rd5421, %rd5420, %rd67;
	add.s64 	%rd5422, %rd5421, %rd5419;
	add.s64 	%rd5423, %rd5422, %rd5416;
	add.s64 	%rd5424, %rd5423, %rd5131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19976,%dummy}, %rd5411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19977}, %rd5411;
	}
	shf.r.wrap.b32 	%r19978, %r19977, %r19976, 28;
	shf.r.wrap.b32 	%r19979, %r19976, %r19977, 28;
	mov.b64 	%rd5425, {%r19979, %r19978};
	shf.l.wrap.b32 	%r19980, %r19976, %r19977, 30;
	shf.l.wrap.b32 	%r19981, %r19977, %r19976, 30;
	mov.b64 	%rd5426, {%r19981, %r19980};
	xor.b64  	%rd5427, %rd5426, %rd5425;
	shf.l.wrap.b32 	%r19982, %r19976, %r19977, 25;
	shf.l.wrap.b32 	%r19983, %r19977, %r19976, 25;
	mov.b64 	%rd5428, {%r19983, %r19982};
	xor.b64  	%rd5429, %rd5427, %rd5428;
	xor.b64  	%rd5430, %rd5411, %rd5155;
	xor.b64  	%rd5431, %rd5411, %rd5179;
	and.b64  	%rd5432, %rd5431, %rd5430;
	xor.b64  	%rd5433, %rd5432, %rd5411;
	add.s64 	%rd5434, %rd5423, %rd5433;
	add.s64 	%rd5435, %rd5434, %rd5429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19984,%dummy}, %rd5424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19985}, %rd5424;
	}
	shf.r.wrap.b32 	%r19986, %r19985, %r19984, 14;
	shf.r.wrap.b32 	%r19987, %r19984, %r19985, 14;
	mov.b64 	%rd5436, {%r19987, %r19986};
	shf.r.wrap.b32 	%r19988, %r19985, %r19984, 18;
	shf.r.wrap.b32 	%r19989, %r19984, %r19985, 18;
	mov.b64 	%rd5437, {%r19989, %r19988};
	xor.b64  	%rd5438, %rd5437, %rd5436;
	shf.l.wrap.b32 	%r19990, %r19984, %r19985, 23;
	shf.l.wrap.b32 	%r19991, %r19985, %r19984, 23;
	mov.b64 	%rd5439, {%r19991, %r19990};
	xor.b64  	%rd5440, %rd5438, %rd5439;
	xor.b64  	%rd5441, %rd5400, %rd5168;
	and.b64  	%rd5442, %rd5424, %rd5441;
	xor.b64  	%rd5443, %rd5442, %rd5168;
	add.s64 	%rd5444, %rd5218, %rd5144;
	add.s64 	%rd5445, %rd5444, %rd68;
	add.s64 	%rd5446, %rd5445, %rd5443;
	add.s64 	%rd5447, %rd5446, %rd5440;
	add.s64 	%rd5448, %rd5447, %rd5155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19992,%dummy}, %rd5435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19993}, %rd5435;
	}
	shf.r.wrap.b32 	%r19994, %r19993, %r19992, 28;
	shf.r.wrap.b32 	%r19995, %r19992, %r19993, 28;
	mov.b64 	%rd5449, {%r19995, %r19994};
	shf.l.wrap.b32 	%r19996, %r19992, %r19993, 30;
	shf.l.wrap.b32 	%r19997, %r19993, %r19992, 30;
	mov.b64 	%rd5450, {%r19997, %r19996};
	xor.b64  	%rd5451, %rd5450, %rd5449;
	shf.l.wrap.b32 	%r19998, %r19992, %r19993, 25;
	shf.l.wrap.b32 	%r19999, %r19993, %r19992, 25;
	mov.b64 	%rd5452, {%r19999, %r19998};
	xor.b64  	%rd5453, %rd5451, %rd5452;
	xor.b64  	%rd5454, %rd5435, %rd5179;
	xor.b64  	%rd5455, %rd5435, %rd5411;
	and.b64  	%rd5456, %rd5455, %rd5454;
	xor.b64  	%rd5457, %rd5456, %rd5435;
	add.s64 	%rd5458, %rd5447, %rd5457;
	add.s64 	%rd5459, %rd5458, %rd5453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20000,%dummy}, %rd5448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20001}, %rd5448;
	}
	shf.r.wrap.b32 	%r20002, %r20001, %r20000, 14;
	shf.r.wrap.b32 	%r20003, %r20000, %r20001, 14;
	mov.b64 	%rd5460, {%r20003, %r20002};
	shf.r.wrap.b32 	%r20004, %r20001, %r20000, 18;
	shf.r.wrap.b32 	%r20005, %r20000, %r20001, 18;
	mov.b64 	%rd5461, {%r20005, %r20004};
	xor.b64  	%rd5462, %rd5461, %rd5460;
	shf.l.wrap.b32 	%r20006, %r20000, %r20001, 23;
	shf.l.wrap.b32 	%r20007, %r20001, %r20000, 23;
	mov.b64 	%rd5463, {%r20007, %r20006};
	xor.b64  	%rd5464, %rd5462, %rd5463;
	xor.b64  	%rd5465, %rd5424, %rd5400;
	and.b64  	%rd5466, %rd5448, %rd5465;
	xor.b64  	%rd5467, %rd5466, %rd5400;
	add.s64 	%rd5468, %rd5231, %rd5168;
	add.s64 	%rd5469, %rd5468, %rd69;
	add.s64 	%rd5470, %rd5469, %rd5467;
	add.s64 	%rd5471, %rd5470, %rd5464;
	add.s64 	%rd5472, %rd5471, %rd5179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20008,%dummy}, %rd5459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20009}, %rd5459;
	}
	shf.r.wrap.b32 	%r20010, %r20009, %r20008, 28;
	shf.r.wrap.b32 	%r20011, %r20008, %r20009, 28;
	mov.b64 	%rd5473, {%r20011, %r20010};
	shf.l.wrap.b32 	%r20012, %r20008, %r20009, 30;
	shf.l.wrap.b32 	%r20013, %r20009, %r20008, 30;
	mov.b64 	%rd5474, {%r20013, %r20012};
	xor.b64  	%rd5475, %rd5474, %rd5473;
	shf.l.wrap.b32 	%r20014, %r20008, %r20009, 25;
	shf.l.wrap.b32 	%r20015, %r20009, %r20008, 25;
	mov.b64 	%rd5476, {%r20015, %r20014};
	xor.b64  	%rd5477, %rd5475, %rd5476;
	xor.b64  	%rd5478, %rd5459, %rd5411;
	xor.b64  	%rd5479, %rd5459, %rd5435;
	and.b64  	%rd5480, %rd5479, %rd5478;
	xor.b64  	%rd5481, %rd5480, %rd5459;
	add.s64 	%rd5482, %rd5471, %rd5481;
	add.s64 	%rd5483, %rd5482, %rd5477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20016,%dummy}, %rd5472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20017}, %rd5472;
	}
	shf.r.wrap.b32 	%r20018, %r20017, %r20016, 14;
	shf.r.wrap.b32 	%r20019, %r20016, %r20017, 14;
	mov.b64 	%rd5484, {%r20019, %r20018};
	shf.r.wrap.b32 	%r20020, %r20017, %r20016, 18;
	shf.r.wrap.b32 	%r20021, %r20016, %r20017, 18;
	mov.b64 	%rd5485, {%r20021, %r20020};
	xor.b64  	%rd5486, %rd5485, %rd5484;
	shf.l.wrap.b32 	%r20022, %r20016, %r20017, 23;
	shf.l.wrap.b32 	%r20023, %r20017, %r20016, 23;
	mov.b64 	%rd5487, {%r20023, %r20022};
	xor.b64  	%rd5488, %rd5486, %rd5487;
	xor.b64  	%rd5489, %rd5448, %rd5424;
	and.b64  	%rd5490, %rd5472, %rd5489;
	xor.b64  	%rd5491, %rd5490, %rd5424;
	add.s64 	%rd5492, %rd5400, %rd5244;
	add.s64 	%rd5493, %rd5492, %rd70;
	add.s64 	%rd5494, %rd5493, %rd5491;
	add.s64 	%rd5495, %rd5494, %rd5488;
	add.s64 	%rd5496, %rd5495, %rd5411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20024,%dummy}, %rd5483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20025}, %rd5483;
	}
	shf.r.wrap.b32 	%r20026, %r20025, %r20024, 28;
	shf.r.wrap.b32 	%r20027, %r20024, %r20025, 28;
	mov.b64 	%rd5497, {%r20027, %r20026};
	shf.l.wrap.b32 	%r20028, %r20024, %r20025, 30;
	shf.l.wrap.b32 	%r20029, %r20025, %r20024, 30;
	mov.b64 	%rd5498, {%r20029, %r20028};
	xor.b64  	%rd5499, %rd5498, %rd5497;
	shf.l.wrap.b32 	%r20030, %r20024, %r20025, 25;
	shf.l.wrap.b32 	%r20031, %r20025, %r20024, 25;
	mov.b64 	%rd5500, {%r20031, %r20030};
	xor.b64  	%rd5501, %rd5499, %rd5500;
	xor.b64  	%rd5502, %rd5483, %rd5435;
	xor.b64  	%rd5503, %rd5483, %rd5459;
	and.b64  	%rd5504, %rd5503, %rd5502;
	xor.b64  	%rd5505, %rd5504, %rd5483;
	add.s64 	%rd5506, %rd5495, %rd5505;
	add.s64 	%rd5507, %rd5506, %rd5501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20032,%dummy}, %rd5496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20033}, %rd5496;
	}
	shf.r.wrap.b32 	%r20034, %r20033, %r20032, 14;
	shf.r.wrap.b32 	%r20035, %r20032, %r20033, 14;
	mov.b64 	%rd5508, {%r20035, %r20034};
	shf.r.wrap.b32 	%r20036, %r20033, %r20032, 18;
	shf.r.wrap.b32 	%r20037, %r20032, %r20033, 18;
	mov.b64 	%rd5509, {%r20037, %r20036};
	xor.b64  	%rd5510, %rd5509, %rd5508;
	shf.l.wrap.b32 	%r20038, %r20032, %r20033, 23;
	shf.l.wrap.b32 	%r20039, %r20033, %r20032, 23;
	mov.b64 	%rd5511, {%r20039, %r20038};
	xor.b64  	%rd5512, %rd5510, %rd5511;
	xor.b64  	%rd5513, %rd5472, %rd5448;
	and.b64  	%rd5514, %rd5496, %rd5513;
	xor.b64  	%rd5515, %rd5514, %rd5448;
	add.s64 	%rd5516, %rd5424, %rd5257;
	add.s64 	%rd5517, %rd5516, %rd71;
	add.s64 	%rd5518, %rd5517, %rd5515;
	add.s64 	%rd5519, %rd5518, %rd5512;
	add.s64 	%rd5520, %rd5519, %rd5435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20040,%dummy}, %rd5507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20041}, %rd5507;
	}
	shf.r.wrap.b32 	%r20042, %r20041, %r20040, 28;
	shf.r.wrap.b32 	%r20043, %r20040, %r20041, 28;
	mov.b64 	%rd5521, {%r20043, %r20042};
	shf.l.wrap.b32 	%r20044, %r20040, %r20041, 30;
	shf.l.wrap.b32 	%r20045, %r20041, %r20040, 30;
	mov.b64 	%rd5522, {%r20045, %r20044};
	xor.b64  	%rd5523, %rd5522, %rd5521;
	shf.l.wrap.b32 	%r20046, %r20040, %r20041, 25;
	shf.l.wrap.b32 	%r20047, %r20041, %r20040, 25;
	mov.b64 	%rd5524, {%r20047, %r20046};
	xor.b64  	%rd5525, %rd5523, %rd5524;
	xor.b64  	%rd5526, %rd5507, %rd5459;
	xor.b64  	%rd5527, %rd5507, %rd5483;
	and.b64  	%rd5528, %rd5527, %rd5526;
	xor.b64  	%rd5529, %rd5528, %rd5507;
	add.s64 	%rd5530, %rd5519, %rd5529;
	add.s64 	%rd5531, %rd5530, %rd5525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20048,%dummy}, %rd5520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20049}, %rd5520;
	}
	shf.r.wrap.b32 	%r20050, %r20049, %r20048, 14;
	shf.r.wrap.b32 	%r20051, %r20048, %r20049, 14;
	mov.b64 	%rd5532, {%r20051, %r20050};
	shf.r.wrap.b32 	%r20052, %r20049, %r20048, 18;
	shf.r.wrap.b32 	%r20053, %r20048, %r20049, 18;
	mov.b64 	%rd5533, {%r20053, %r20052};
	xor.b64  	%rd5534, %rd5533, %rd5532;
	shf.l.wrap.b32 	%r20054, %r20048, %r20049, 23;
	shf.l.wrap.b32 	%r20055, %r20049, %r20048, 23;
	mov.b64 	%rd5535, {%r20055, %r20054};
	xor.b64  	%rd5536, %rd5534, %rd5535;
	xor.b64  	%rd5537, %rd5496, %rd5472;
	and.b64  	%rd5538, %rd5520, %rd5537;
	xor.b64  	%rd5539, %rd5538, %rd5472;
	add.s64 	%rd5540, %rd5448, %rd5270;
	add.s64 	%rd5541, %rd5540, %rd72;
	add.s64 	%rd5542, %rd5541, %rd5539;
	add.s64 	%rd5543, %rd5542, %rd5536;
	add.s64 	%rd5544, %rd5543, %rd5459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20056,%dummy}, %rd5531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20057}, %rd5531;
	}
	shf.r.wrap.b32 	%r20058, %r20057, %r20056, 28;
	shf.r.wrap.b32 	%r20059, %r20056, %r20057, 28;
	mov.b64 	%rd5545, {%r20059, %r20058};
	shf.l.wrap.b32 	%r20060, %r20056, %r20057, 30;
	shf.l.wrap.b32 	%r20061, %r20057, %r20056, 30;
	mov.b64 	%rd5546, {%r20061, %r20060};
	xor.b64  	%rd5547, %rd5546, %rd5545;
	shf.l.wrap.b32 	%r20062, %r20056, %r20057, 25;
	shf.l.wrap.b32 	%r20063, %r20057, %r20056, 25;
	mov.b64 	%rd5548, {%r20063, %r20062};
	xor.b64  	%rd5549, %rd5547, %rd5548;
	xor.b64  	%rd5550, %rd5531, %rd5483;
	xor.b64  	%rd5551, %rd5531, %rd5507;
	and.b64  	%rd5552, %rd5551, %rd5550;
	xor.b64  	%rd5553, %rd5552, %rd5531;
	add.s64 	%rd5554, %rd5543, %rd5553;
	add.s64 	%rd5555, %rd5554, %rd5549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20064,%dummy}, %rd5544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20065}, %rd5544;
	}
	shf.r.wrap.b32 	%r20066, %r20065, %r20064, 14;
	shf.r.wrap.b32 	%r20067, %r20064, %r20065, 14;
	mov.b64 	%rd5556, {%r20067, %r20066};
	shf.r.wrap.b32 	%r20068, %r20065, %r20064, 18;
	shf.r.wrap.b32 	%r20069, %r20064, %r20065, 18;
	mov.b64 	%rd5557, {%r20069, %r20068};
	xor.b64  	%rd5558, %rd5557, %rd5556;
	shf.l.wrap.b32 	%r20070, %r20064, %r20065, 23;
	shf.l.wrap.b32 	%r20071, %r20065, %r20064, 23;
	mov.b64 	%rd5559, {%r20071, %r20070};
	xor.b64  	%rd5560, %rd5558, %rd5559;
	xor.b64  	%rd5561, %rd5520, %rd5496;
	and.b64  	%rd5562, %rd5544, %rd5561;
	xor.b64  	%rd5563, %rd5562, %rd5496;
	add.s64 	%rd5564, %rd5472, %rd5283;
	add.s64 	%rd5565, %rd5564, %rd73;
	add.s64 	%rd5566, %rd5565, %rd5563;
	add.s64 	%rd5567, %rd5566, %rd5560;
	add.s64 	%rd5568, %rd5567, %rd5483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20072,%dummy}, %rd5555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20073}, %rd5555;
	}
	shf.r.wrap.b32 	%r20074, %r20073, %r20072, 28;
	shf.r.wrap.b32 	%r20075, %r20072, %r20073, 28;
	mov.b64 	%rd5569, {%r20075, %r20074};
	shf.l.wrap.b32 	%r20076, %r20072, %r20073, 30;
	shf.l.wrap.b32 	%r20077, %r20073, %r20072, 30;
	mov.b64 	%rd5570, {%r20077, %r20076};
	xor.b64  	%rd5571, %rd5570, %rd5569;
	shf.l.wrap.b32 	%r20078, %r20072, %r20073, 25;
	shf.l.wrap.b32 	%r20079, %r20073, %r20072, 25;
	mov.b64 	%rd5572, {%r20079, %r20078};
	xor.b64  	%rd5573, %rd5571, %rd5572;
	xor.b64  	%rd5574, %rd5555, %rd5507;
	xor.b64  	%rd5575, %rd5555, %rd5531;
	and.b64  	%rd5576, %rd5575, %rd5574;
	xor.b64  	%rd5577, %rd5576, %rd5555;
	add.s64 	%rd5578, %rd5567, %rd5577;
	add.s64 	%rd5579, %rd5578, %rd5573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20080,%dummy}, %rd5568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20081}, %rd5568;
	}
	shf.r.wrap.b32 	%r20082, %r20081, %r20080, 14;
	shf.r.wrap.b32 	%r20083, %r20080, %r20081, 14;
	mov.b64 	%rd5580, {%r20083, %r20082};
	shf.r.wrap.b32 	%r20084, %r20081, %r20080, 18;
	shf.r.wrap.b32 	%r20085, %r20080, %r20081, 18;
	mov.b64 	%rd5581, {%r20085, %r20084};
	xor.b64  	%rd5582, %rd5581, %rd5580;
	shf.l.wrap.b32 	%r20086, %r20080, %r20081, 23;
	shf.l.wrap.b32 	%r20087, %r20081, %r20080, 23;
	mov.b64 	%rd5583, {%r20087, %r20086};
	xor.b64  	%rd5584, %rd5582, %rd5583;
	xor.b64  	%rd5585, %rd5544, %rd5520;
	and.b64  	%rd5586, %rd5568, %rd5585;
	xor.b64  	%rd5587, %rd5586, %rd5520;
	add.s64 	%rd5588, %rd5496, %rd5296;
	add.s64 	%rd5589, %rd5588, %rd74;
	add.s64 	%rd5590, %rd5589, %rd5587;
	add.s64 	%rd5591, %rd5590, %rd5584;
	add.s64 	%rd5592, %rd5591, %rd5507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20088,%dummy}, %rd5579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20089}, %rd5579;
	}
	shf.r.wrap.b32 	%r20090, %r20089, %r20088, 28;
	shf.r.wrap.b32 	%r20091, %r20088, %r20089, 28;
	mov.b64 	%rd5593, {%r20091, %r20090};
	shf.l.wrap.b32 	%r20092, %r20088, %r20089, 30;
	shf.l.wrap.b32 	%r20093, %r20089, %r20088, 30;
	mov.b64 	%rd5594, {%r20093, %r20092};
	xor.b64  	%rd5595, %rd5594, %rd5593;
	shf.l.wrap.b32 	%r20094, %r20088, %r20089, 25;
	shf.l.wrap.b32 	%r20095, %r20089, %r20088, 25;
	mov.b64 	%rd5596, {%r20095, %r20094};
	xor.b64  	%rd5597, %rd5595, %rd5596;
	xor.b64  	%rd5598, %rd5579, %rd5531;
	xor.b64  	%rd5599, %rd5579, %rd5555;
	and.b64  	%rd5600, %rd5599, %rd5598;
	xor.b64  	%rd5601, %rd5600, %rd5579;
	add.s64 	%rd5602, %rd5591, %rd5601;
	add.s64 	%rd5603, %rd5602, %rd5597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20096,%dummy}, %rd5592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20097}, %rd5592;
	}
	shf.r.wrap.b32 	%r20098, %r20097, %r20096, 14;
	shf.r.wrap.b32 	%r20099, %r20096, %r20097, 14;
	mov.b64 	%rd5604, {%r20099, %r20098};
	shf.r.wrap.b32 	%r20100, %r20097, %r20096, 18;
	shf.r.wrap.b32 	%r20101, %r20096, %r20097, 18;
	mov.b64 	%rd5605, {%r20101, %r20100};
	xor.b64  	%rd5606, %rd5605, %rd5604;
	shf.l.wrap.b32 	%r20102, %r20096, %r20097, 23;
	shf.l.wrap.b32 	%r20103, %r20097, %r20096, 23;
	mov.b64 	%rd5607, {%r20103, %r20102};
	xor.b64  	%rd5608, %rd5606, %rd5607;
	xor.b64  	%rd5609, %rd5568, %rd5544;
	and.b64  	%rd5610, %rd5592, %rd5609;
	xor.b64  	%rd5611, %rd5610, %rd5544;
	add.s64 	%rd5612, %rd5520, %rd5309;
	add.s64 	%rd5613, %rd5612, %rd75;
	add.s64 	%rd5614, %rd5613, %rd5611;
	add.s64 	%rd5615, %rd5614, %rd5608;
	add.s64 	%rd5616, %rd5615, %rd5531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20104,%dummy}, %rd5603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20105}, %rd5603;
	}
	shf.r.wrap.b32 	%r20106, %r20105, %r20104, 28;
	shf.r.wrap.b32 	%r20107, %r20104, %r20105, 28;
	mov.b64 	%rd5617, {%r20107, %r20106};
	shf.l.wrap.b32 	%r20108, %r20104, %r20105, 30;
	shf.l.wrap.b32 	%r20109, %r20105, %r20104, 30;
	mov.b64 	%rd5618, {%r20109, %r20108};
	xor.b64  	%rd5619, %rd5618, %rd5617;
	shf.l.wrap.b32 	%r20110, %r20104, %r20105, 25;
	shf.l.wrap.b32 	%r20111, %r20105, %r20104, 25;
	mov.b64 	%rd5620, {%r20111, %r20110};
	xor.b64  	%rd5621, %rd5619, %rd5620;
	xor.b64  	%rd5622, %rd5603, %rd5555;
	xor.b64  	%rd5623, %rd5603, %rd5579;
	and.b64  	%rd5624, %rd5623, %rd5622;
	xor.b64  	%rd5625, %rd5624, %rd5603;
	add.s64 	%rd5626, %rd5615, %rd5625;
	add.s64 	%rd5627, %rd5626, %rd5621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20112,%dummy}, %rd5616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20113}, %rd5616;
	}
	shf.r.wrap.b32 	%r20114, %r20113, %r20112, 14;
	shf.r.wrap.b32 	%r20115, %r20112, %r20113, 14;
	mov.b64 	%rd5628, {%r20115, %r20114};
	shf.r.wrap.b32 	%r20116, %r20113, %r20112, 18;
	shf.r.wrap.b32 	%r20117, %r20112, %r20113, 18;
	mov.b64 	%rd5629, {%r20117, %r20116};
	xor.b64  	%rd5630, %rd5629, %rd5628;
	shf.l.wrap.b32 	%r20118, %r20112, %r20113, 23;
	shf.l.wrap.b32 	%r20119, %r20113, %r20112, 23;
	mov.b64 	%rd5631, {%r20119, %r20118};
	xor.b64  	%rd5632, %rd5630, %rd5631;
	xor.b64  	%rd5633, %rd5592, %rd5568;
	and.b64  	%rd5634, %rd5616, %rd5633;
	xor.b64  	%rd5635, %rd5634, %rd5568;
	add.s64 	%rd5636, %rd5544, %rd5322;
	add.s64 	%rd5637, %rd5636, %rd76;
	add.s64 	%rd5638, %rd5637, %rd5635;
	add.s64 	%rd5639, %rd5638, %rd5632;
	add.s64 	%rd5640, %rd5639, %rd5555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20120,%dummy}, %rd5627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20121}, %rd5627;
	}
	shf.r.wrap.b32 	%r20122, %r20121, %r20120, 28;
	shf.r.wrap.b32 	%r20123, %r20120, %r20121, 28;
	mov.b64 	%rd5641, {%r20123, %r20122};
	shf.l.wrap.b32 	%r20124, %r20120, %r20121, 30;
	shf.l.wrap.b32 	%r20125, %r20121, %r20120, 30;
	mov.b64 	%rd5642, {%r20125, %r20124};
	xor.b64  	%rd5643, %rd5642, %rd5641;
	shf.l.wrap.b32 	%r20126, %r20120, %r20121, 25;
	shf.l.wrap.b32 	%r20127, %r20121, %r20120, 25;
	mov.b64 	%rd5644, {%r20127, %r20126};
	xor.b64  	%rd5645, %rd5643, %rd5644;
	xor.b64  	%rd5646, %rd5627, %rd5579;
	xor.b64  	%rd5647, %rd5627, %rd5603;
	and.b64  	%rd5648, %rd5647, %rd5646;
	xor.b64  	%rd5649, %rd5648, %rd5627;
	add.s64 	%rd5650, %rd5639, %rd5649;
	add.s64 	%rd5651, %rd5650, %rd5645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20128,%dummy}, %rd5640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20129}, %rd5640;
	}
	shf.r.wrap.b32 	%r20130, %r20129, %r20128, 14;
	shf.r.wrap.b32 	%r20131, %r20128, %r20129, 14;
	mov.b64 	%rd5652, {%r20131, %r20130};
	shf.r.wrap.b32 	%r20132, %r20129, %r20128, 18;
	shf.r.wrap.b32 	%r20133, %r20128, %r20129, 18;
	mov.b64 	%rd5653, {%r20133, %r20132};
	xor.b64  	%rd5654, %rd5653, %rd5652;
	shf.l.wrap.b32 	%r20134, %r20128, %r20129, 23;
	shf.l.wrap.b32 	%r20135, %r20129, %r20128, 23;
	mov.b64 	%rd5655, {%r20135, %r20134};
	xor.b64  	%rd5656, %rd5654, %rd5655;
	xor.b64  	%rd5657, %rd5616, %rd5592;
	and.b64  	%rd5658, %rd5640, %rd5657;
	xor.b64  	%rd5659, %rd5658, %rd5592;
	add.s64 	%rd5660, %rd5568, %rd5335;
	add.s64 	%rd5661, %rd5660, %rd77;
	add.s64 	%rd5662, %rd5661, %rd5659;
	add.s64 	%rd5663, %rd5662, %rd5656;
	add.s64 	%rd5664, %rd5663, %rd5579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20136,%dummy}, %rd5651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20137}, %rd5651;
	}
	shf.r.wrap.b32 	%r20138, %r20137, %r20136, 28;
	shf.r.wrap.b32 	%r20139, %r20136, %r20137, 28;
	mov.b64 	%rd5665, {%r20139, %r20138};
	shf.l.wrap.b32 	%r20140, %r20136, %r20137, 30;
	shf.l.wrap.b32 	%r20141, %r20137, %r20136, 30;
	mov.b64 	%rd5666, {%r20141, %r20140};
	xor.b64  	%rd5667, %rd5666, %rd5665;
	shf.l.wrap.b32 	%r20142, %r20136, %r20137, 25;
	shf.l.wrap.b32 	%r20143, %r20137, %r20136, 25;
	mov.b64 	%rd5668, {%r20143, %r20142};
	xor.b64  	%rd5669, %rd5667, %rd5668;
	xor.b64  	%rd5670, %rd5651, %rd5603;
	xor.b64  	%rd5671, %rd5651, %rd5627;
	and.b64  	%rd5672, %rd5671, %rd5670;
	xor.b64  	%rd5673, %rd5672, %rd5651;
	add.s64 	%rd5674, %rd5663, %rd5673;
	add.s64 	%rd5675, %rd5674, %rd5669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20144,%dummy}, %rd5664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20145}, %rd5664;
	}
	shf.r.wrap.b32 	%r20146, %r20145, %r20144, 14;
	shf.r.wrap.b32 	%r20147, %r20144, %r20145, 14;
	mov.b64 	%rd5676, {%r20147, %r20146};
	shf.r.wrap.b32 	%r20148, %r20145, %r20144, 18;
	shf.r.wrap.b32 	%r20149, %r20144, %r20145, 18;
	mov.b64 	%rd5677, {%r20149, %r20148};
	xor.b64  	%rd5678, %rd5677, %rd5676;
	shf.l.wrap.b32 	%r20150, %r20144, %r20145, 23;
	shf.l.wrap.b32 	%r20151, %r20145, %r20144, 23;
	mov.b64 	%rd5679, {%r20151, %r20150};
	xor.b64  	%rd5680, %rd5678, %rd5679;
	xor.b64  	%rd5681, %rd5640, %rd5616;
	and.b64  	%rd5682, %rd5664, %rd5681;
	xor.b64  	%rd5683, %rd5682, %rd5616;
	add.s64 	%rd5684, %rd5592, %rd5348;
	add.s64 	%rd5685, %rd5684, %rd78;
	add.s64 	%rd5686, %rd5685, %rd5683;
	add.s64 	%rd5687, %rd5686, %rd5680;
	add.s64 	%rd5688, %rd5687, %rd5603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20152,%dummy}, %rd5675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20153}, %rd5675;
	}
	shf.r.wrap.b32 	%r20154, %r20153, %r20152, 28;
	shf.r.wrap.b32 	%r20155, %r20152, %r20153, 28;
	mov.b64 	%rd5689, {%r20155, %r20154};
	shf.l.wrap.b32 	%r20156, %r20152, %r20153, 30;
	shf.l.wrap.b32 	%r20157, %r20153, %r20152, 30;
	mov.b64 	%rd5690, {%r20157, %r20156};
	xor.b64  	%rd5691, %rd5690, %rd5689;
	shf.l.wrap.b32 	%r20158, %r20152, %r20153, 25;
	shf.l.wrap.b32 	%r20159, %r20153, %r20152, 25;
	mov.b64 	%rd5692, {%r20159, %r20158};
	xor.b64  	%rd5693, %rd5691, %rd5692;
	xor.b64  	%rd5694, %rd5675, %rd5627;
	xor.b64  	%rd5695, %rd5675, %rd5651;
	and.b64  	%rd5696, %rd5695, %rd5694;
	xor.b64  	%rd5697, %rd5696, %rd5675;
	add.s64 	%rd5698, %rd5687, %rd5697;
	add.s64 	%rd5699, %rd5698, %rd5693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20160,%dummy}, %rd5688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20161}, %rd5688;
	}
	shf.r.wrap.b32 	%r20162, %r20161, %r20160, 14;
	shf.r.wrap.b32 	%r20163, %r20160, %r20161, 14;
	mov.b64 	%rd5700, {%r20163, %r20162};
	shf.r.wrap.b32 	%r20164, %r20161, %r20160, 18;
	shf.r.wrap.b32 	%r20165, %r20160, %r20161, 18;
	mov.b64 	%rd5701, {%r20165, %r20164};
	xor.b64  	%rd5702, %rd5701, %rd5700;
	shf.l.wrap.b32 	%r20166, %r20160, %r20161, 23;
	shf.l.wrap.b32 	%r20167, %r20161, %r20160, 23;
	mov.b64 	%rd5703, {%r20167, %r20166};
	xor.b64  	%rd5704, %rd5702, %rd5703;
	xor.b64  	%rd5705, %rd5664, %rd5640;
	and.b64  	%rd5706, %rd5688, %rd5705;
	xor.b64  	%rd5707, %rd5706, %rd5640;
	add.s64 	%rd5708, %rd5616, %rd5361;
	add.s64 	%rd5709, %rd5708, %rd79;
	add.s64 	%rd5710, %rd5709, %rd5707;
	add.s64 	%rd5711, %rd5710, %rd5704;
	add.s64 	%rd5712, %rd5711, %rd5627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20168,%dummy}, %rd5699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20169}, %rd5699;
	}
	shf.r.wrap.b32 	%r20170, %r20169, %r20168, 28;
	shf.r.wrap.b32 	%r20171, %r20168, %r20169, 28;
	mov.b64 	%rd5713, {%r20171, %r20170};
	shf.l.wrap.b32 	%r20172, %r20168, %r20169, 30;
	shf.l.wrap.b32 	%r20173, %r20169, %r20168, 30;
	mov.b64 	%rd5714, {%r20173, %r20172};
	xor.b64  	%rd5715, %rd5714, %rd5713;
	shf.l.wrap.b32 	%r20174, %r20168, %r20169, 25;
	shf.l.wrap.b32 	%r20175, %r20169, %r20168, 25;
	mov.b64 	%rd5716, {%r20175, %r20174};
	xor.b64  	%rd5717, %rd5715, %rd5716;
	xor.b64  	%rd5718, %rd5699, %rd5651;
	xor.b64  	%rd5719, %rd5699, %rd5675;
	and.b64  	%rd5720, %rd5719, %rd5718;
	xor.b64  	%rd5721, %rd5720, %rd5699;
	add.s64 	%rd5722, %rd5711, %rd5721;
	add.s64 	%rd5723, %rd5722, %rd5717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20176,%dummy}, %rd5712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20177}, %rd5712;
	}
	shf.r.wrap.b32 	%r20178, %r20177, %r20176, 14;
	shf.r.wrap.b32 	%r20179, %r20176, %r20177, 14;
	mov.b64 	%rd5724, {%r20179, %r20178};
	shf.r.wrap.b32 	%r20180, %r20177, %r20176, 18;
	shf.r.wrap.b32 	%r20181, %r20176, %r20177, 18;
	mov.b64 	%rd5725, {%r20181, %r20180};
	xor.b64  	%rd5726, %rd5725, %rd5724;
	shf.l.wrap.b32 	%r20182, %r20176, %r20177, 23;
	shf.l.wrap.b32 	%r20183, %r20177, %r20176, 23;
	mov.b64 	%rd5727, {%r20183, %r20182};
	xor.b64  	%rd5728, %rd5726, %rd5727;
	xor.b64  	%rd5729, %rd5688, %rd5664;
	and.b64  	%rd5730, %rd5712, %rd5729;
	xor.b64  	%rd5731, %rd5730, %rd5664;
	add.s64 	%rd5732, %rd5640, %rd5374;
	add.s64 	%rd5733, %rd5732, %rd80;
	add.s64 	%rd5734, %rd5733, %rd5731;
	add.s64 	%rd5735, %rd5734, %rd5728;
	add.s64 	%rd5736, %rd5735, %rd5651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20184,%dummy}, %rd5723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20185}, %rd5723;
	}
	shf.r.wrap.b32 	%r20186, %r20185, %r20184, 28;
	shf.r.wrap.b32 	%r20187, %r20184, %r20185, 28;
	mov.b64 	%rd5737, {%r20187, %r20186};
	shf.l.wrap.b32 	%r20188, %r20184, %r20185, 30;
	shf.l.wrap.b32 	%r20189, %r20185, %r20184, 30;
	mov.b64 	%rd5738, {%r20189, %r20188};
	xor.b64  	%rd5739, %rd5738, %rd5737;
	shf.l.wrap.b32 	%r20190, %r20184, %r20185, 25;
	shf.l.wrap.b32 	%r20191, %r20185, %r20184, 25;
	mov.b64 	%rd5740, {%r20191, %r20190};
	xor.b64  	%rd5741, %rd5739, %rd5740;
	xor.b64  	%rd5742, %rd5723, %rd5675;
	xor.b64  	%rd5743, %rd5723, %rd5699;
	and.b64  	%rd5744, %rd5743, %rd5742;
	xor.b64  	%rd5745, %rd5744, %rd5723;
	add.s64 	%rd5746, %rd5735, %rd5745;
	add.s64 	%rd5747, %rd5746, %rd5741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20192,%dummy}, %rd5736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20193}, %rd5736;
	}
	shf.r.wrap.b32 	%r20194, %r20193, %r20192, 14;
	shf.r.wrap.b32 	%r20195, %r20192, %r20193, 14;
	mov.b64 	%rd5748, {%r20195, %r20194};
	shf.r.wrap.b32 	%r20196, %r20193, %r20192, 18;
	shf.r.wrap.b32 	%r20197, %r20192, %r20193, 18;
	mov.b64 	%rd5749, {%r20197, %r20196};
	xor.b64  	%rd5750, %rd5749, %rd5748;
	shf.l.wrap.b32 	%r20198, %r20192, %r20193, 23;
	shf.l.wrap.b32 	%r20199, %r20193, %r20192, 23;
	mov.b64 	%rd5751, {%r20199, %r20198};
	xor.b64  	%rd5752, %rd5750, %rd5751;
	xor.b64  	%rd5753, %rd5712, %rd5688;
	and.b64  	%rd5754, %rd5736, %rd5753;
	xor.b64  	%rd5755, %rd5754, %rd5688;
	add.s64 	%rd5756, %rd5664, %rd5387;
	add.s64 	%rd5757, %rd5756, %rd81;
	add.s64 	%rd5758, %rd5757, %rd5755;
	add.s64 	%rd5759, %rd5758, %rd5752;
	add.s64 	%rd5760, %rd5759, %rd5675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20200,%dummy}, %rd5747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20201}, %rd5747;
	}
	shf.r.wrap.b32 	%r20202, %r20201, %r20200, 28;
	shf.r.wrap.b32 	%r20203, %r20200, %r20201, 28;
	mov.b64 	%rd5761, {%r20203, %r20202};
	shf.l.wrap.b32 	%r20204, %r20200, %r20201, 30;
	shf.l.wrap.b32 	%r20205, %r20201, %r20200, 30;
	mov.b64 	%rd5762, {%r20205, %r20204};
	xor.b64  	%rd5763, %rd5762, %rd5761;
	shf.l.wrap.b32 	%r20206, %r20200, %r20201, 25;
	shf.l.wrap.b32 	%r20207, %r20201, %r20200, 25;
	mov.b64 	%rd5764, {%r20207, %r20206};
	xor.b64  	%rd5765, %rd5763, %rd5764;
	xor.b64  	%rd5766, %rd5747, %rd5699;
	xor.b64  	%rd5767, %rd5747, %rd5723;
	and.b64  	%rd5768, %rd5767, %rd5766;
	xor.b64  	%rd5769, %rd5768, %rd5747;
	add.s64 	%rd5770, %rd5759, %rd5769;
	add.s64 	%rd5771, %rd5770, %rd5765;
	add.s64 	%rd5772, %rd3030, %rd5771;
	st.local.u64 	[%rd1], %rd5772;
	add.s64 	%rd5773, %rd3038, %rd5747;
	st.local.u64 	[%rd1+8], %rd5773;
	add.s64 	%rd5774, %rd3036, %rd5723;
	st.local.u64 	[%rd1+16], %rd5774;
	add.s64 	%rd5775, %rd3028, %rd5699;
	st.local.u64 	[%rd1+24], %rd5775;
	add.s64 	%rd5776, %rd3012, %rd5760;
	st.local.u64 	[%rd1+32], %rd5776;
	add.s64 	%rd5777, %rd3019, %rd5736;
	st.local.u64 	[%rd1+40], %rd5777;
	add.s64 	%rd5778, %rd3018, %rd5712;
	st.local.u64 	[%rd1+48], %rd5778;
	add.s64 	%rd5779, %rd3023, %rd5688;
	st.local.u64 	[%rd1+56], %rd5779;
	st.local.v2.u32 	[%rd1+64], {%r20343, %r20342};
	st.local.v2.u32 	[%rd1+72], {%r20341, %r20340};
	st.local.v2.u32 	[%rd1+80], {%r20347, %r20346};
	st.local.v2.u32 	[%rd1+88], {%r20345, %r20344};
	st.local.v2.u32 	[%rd1+96], {%r20351, %r20350};
	st.local.v2.u32 	[%rd1+104], {%r20349, %r20348};
	st.local.v2.u32 	[%rd1+112], {%r20355, %r20354};
	st.local.v2.u32 	[%rd1+120], {%r20353, %r20352};
	st.local.v2.u32 	[%rd1+128], {%r20359, %r20358};
	st.local.v2.u32 	[%rd1+136], {%r20357, %r20356};
	st.local.v2.u32 	[%rd1+144], {%r20363, %r20362};
	st.local.v2.u32 	[%rd1+152], {%r20361, %r20360};
	st.local.v2.u32 	[%rd1+160], {%r20367, %r20366};
	st.local.v2.u32 	[%rd1+168], {%r20365, %r20364};
	st.local.v2.u32 	[%rd1+176], {%r20371, %r20370};
	st.local.v2.u32 	[%rd1+184], {%r20369, %r20368};
	add.s32 	%r20209, %r20209, 128;
	add.s32 	%r20210, %r20210, 32;

BB4_1:
	mul.wide.s32 	%rd84, %r20210, 4;
	add.s64 	%rd85, %rd82, %rd84;
	ld.global.u32 	%r2847, [%rd85];
	add.s32 	%r2910, %r20210, 1;
	mul.wide.s32 	%rd86, %r2910, 4;
	add.s64 	%rd87, %rd82, %rd86;
	ld.global.u32 	%r2849, [%rd87];
	add.s32 	%r2911, %r20210, 2;
	mul.wide.s32 	%rd88, %r2911, 4;
	add.s64 	%rd89, %rd82, %rd88;
	ld.global.u32 	%r2851, [%rd89];
	add.s32 	%r2912, %r20210, 3;
	mul.wide.s32 	%rd90, %r2912, 4;
	add.s64 	%rd91, %rd82, %rd90;
	ld.global.u32 	%r2853, [%rd91];
	add.s32 	%r2913, %r20210, 4;
	mul.wide.s32 	%rd92, %r2913, 4;
	add.s64 	%rd93, %rd82, %rd92;
	ld.global.u32 	%r2855, [%rd93];
	add.s32 	%r2914, %r20210, 5;
	mul.wide.s32 	%rd94, %r2914, 4;
	add.s64 	%rd95, %rd82, %rd94;
	ld.global.u32 	%r2857, [%rd95];
	add.s32 	%r2915, %r20210, 6;
	mul.wide.s32 	%rd96, %r2915, 4;
	add.s64 	%rd97, %rd82, %rd96;
	ld.global.u32 	%r2859, [%rd97];
	add.s32 	%r2916, %r20210, 7;
	mul.wide.s32 	%rd98, %r2916, 4;
	add.s64 	%rd99, %rd82, %rd98;
	ld.global.u32 	%r2861, [%rd99];
	add.s32 	%r2917, %r20210, 8;
	mul.wide.s32 	%rd100, %r2917, 4;
	add.s64 	%rd101, %rd82, %rd100;
	ld.global.u32 	%r2863, [%rd101];
	add.s32 	%r2918, %r20210, 9;
	mul.wide.s32 	%rd102, %r2918, 4;
	add.s64 	%rd103, %rd82, %rd102;
	ld.global.u32 	%r2865, [%rd103];
	add.s32 	%r2919, %r20210, 10;
	mul.wide.s32 	%rd104, %r2919, 4;
	add.s64 	%rd105, %rd82, %rd104;
	ld.global.u32 	%r2867, [%rd105];
	add.s32 	%r2920, %r20210, 11;
	mul.wide.s32 	%rd106, %r2920, 4;
	add.s64 	%rd107, %rd82, %rd106;
	ld.global.u32 	%r2869, [%rd107];
	add.s32 	%r2921, %r20210, 12;
	mul.wide.s32 	%rd108, %r2921, 4;
	add.s64 	%rd109, %rd82, %rd108;
	ld.global.u32 	%r2871, [%rd109];
	add.s32 	%r2922, %r20210, 13;
	mul.wide.s32 	%rd110, %r2922, 4;
	add.s64 	%rd111, %rd82, %rd110;
	ld.global.u32 	%r2873, [%rd111];
	add.s32 	%r2923, %r20210, 14;
	mul.wide.s32 	%rd112, %r2923, 4;
	add.s64 	%rd113, %rd82, %rd112;
	ld.global.u32 	%r2875, [%rd113];
	add.s32 	%r2924, %r20210, 15;
	mul.wide.s32 	%rd114, %r2924, 4;
	add.s64 	%rd115, %rd82, %rd114;
	ld.global.u32 	%r2877, [%rd115];
	add.s32 	%r2925, %r20210, 16;
	mul.wide.s32 	%rd116, %r2925, 4;
	add.s64 	%rd117, %rd82, %rd116;
	ld.global.u32 	%r2879, [%rd117];
	add.s32 	%r2926, %r20210, 17;
	mul.wide.s32 	%rd118, %r2926, 4;
	add.s64 	%rd119, %rd82, %rd118;
	ld.global.u32 	%r2881, [%rd119];
	add.s32 	%r2927, %r20210, 18;
	mul.wide.s32 	%rd120, %r2927, 4;
	add.s64 	%rd121, %rd82, %rd120;
	ld.global.u32 	%r2883, [%rd121];
	add.s32 	%r2928, %r20210, 19;
	mul.wide.s32 	%rd122, %r2928, 4;
	add.s64 	%rd123, %rd82, %rd122;
	ld.global.u32 	%r2885, [%rd123];
	add.s32 	%r2929, %r20210, 20;
	mul.wide.s32 	%rd124, %r2929, 4;
	add.s64 	%rd125, %rd82, %rd124;
	ld.global.u32 	%r2887, [%rd125];
	add.s32 	%r2930, %r20210, 21;
	mul.wide.s32 	%rd126, %r2930, 4;
	add.s64 	%rd127, %rd82, %rd126;
	ld.global.u32 	%r2889, [%rd127];
	add.s32 	%r2931, %r20210, 22;
	mul.wide.s32 	%rd128, %r2931, 4;
	add.s64 	%rd129, %rd82, %rd128;
	ld.global.u32 	%r2891, [%rd129];
	add.s32 	%r2932, %r20210, 23;
	mul.wide.s32 	%rd130, %r2932, 4;
	add.s64 	%rd131, %rd82, %rd130;
	ld.global.u32 	%r2893, [%rd131];
	add.s32 	%r2933, %r20210, 24;
	mul.wide.s32 	%rd132, %r2933, 4;
	add.s64 	%rd133, %rd82, %rd132;
	ld.global.u32 	%r2895, [%rd133];
	add.s32 	%r2934, %r20210, 25;
	mul.wide.s32 	%rd134, %r2934, 4;
	add.s64 	%rd135, %rd82, %rd134;
	ld.global.u32 	%r2897, [%rd135];
	add.s32 	%r2935, %r20210, 26;
	mul.wide.s32 	%rd136, %r2935, 4;
	add.s64 	%rd137, %rd82, %rd136;
	ld.global.u32 	%r2899, [%rd137];
	add.s32 	%r2936, %r20210, 27;
	mul.wide.s32 	%rd138, %r2936, 4;
	add.s64 	%rd139, %rd82, %rd138;
	ld.global.u32 	%r2901, [%rd139];
	add.s32 	%r2937, %r20210, 28;
	mul.wide.s32 	%rd140, %r2937, 4;
	add.s64 	%rd141, %rd82, %rd140;
	ld.global.u32 	%r2903, [%rd141];
	add.s32 	%r2938, %r20210, 29;
	mul.wide.s32 	%rd142, %r2938, 4;
	add.s64 	%rd143, %rd82, %rd142;
	ld.global.u32 	%r2905, [%rd143];
	add.s32 	%r2939, %r20210, 30;
	mul.wide.s32 	%rd144, %r2939, 4;
	add.s64 	%rd145, %rd82, %rd144;
	ld.global.u32 	%r2907, [%rd145];
	add.s32 	%r2940, %r20210, 31;
	mul.wide.s32 	%rd146, %r2940, 4;
	add.s64 	%rd147, %rd82, %rd146;
	ld.global.u32 	%r2909, [%rd147];
	// inline asm
	prmt.b32 %r2846, %r2847, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2848, %r2849, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2850, %r2851, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2852, %r2853, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2855, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2857, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2859, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2861, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2863, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2865, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2867, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2869, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2871, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2873, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2875, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2877, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2879, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2881, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2883, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2885, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2887, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2889, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2891, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2893, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2895, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2897, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2899, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2901, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2903, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2905, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2907, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2909, 0, 0x0123;
	// inline asm
	setp.lt.s32	%p1, %r20209, %r1;
	@%p1 bra 	BB4_208;
	bra.uni 	BB4_2;

BB4_208:
	ld.local.u32 	%r12944, [%rd1+192];
	add.s32 	%r12945, %r12944, 128;
	st.local.u32 	[%rd1+192], %r12945;
	bfe.u32 	%r12943, %r12944, 2, 5;
	and.b32  	%r12946, %r12944, 3;
	shl.b32 	%r12947, %r12946, 2;
	mov.u32 	%r12948, 1985229328;
	shr.u32 	%r12949, %r12948, %r12947;
	and.b32  	%r1720, %r12949, 65535;
	mov.u32 	%r20340, 0;
	setp.gt.s32	%p97, %r12943, 15;
	@%p97 bra 	BB4_241;

	setp.gt.s32	%p121, %r12943, 7;
	@%p121 bra 	BB4_226;

	setp.gt.s32	%p133, %r12943, 3;
	@%p133 bra 	BB4_218;

	setp.gt.s32	%p139, %r12943, 1;
	@%p139 bra 	BB4_215;

	setp.eq.s32	%p142, %r12943, 0;
	@%p142 bra 	BB4_293;
	bra.uni 	BB4_213;

BB4_293:
	mov.u32 	%r20340, 0;
	// inline asm
	prmt.b32 %r20343, %r20340, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20308, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20309, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20310, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20311, %r2846, %r20340, %r1720;
	// inline asm
	mov.u32 	%r20341, %r20340;
	mov.u32 	%r20342, %r20340;
	bra.uni 	BB4_294;

BB4_241:
	setp.gt.s32	%p98, %r12943, 23;
	@%p98 bra 	BB4_257;

	setp.gt.s32	%p110, %r12943, 19;
	@%p110 bra 	BB4_250;

	setp.gt.s32	%p116, %r12943, 17;
	@%p116 bra 	BB4_247;

	setp.eq.s32	%p119, %r12943, 16;
	@%p119 bra 	BB4_280;
	bra.uni 	BB4_245;

BB4_280:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20359, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r20356, %r20308;
	mov.u32 	%r20357, %r20308;
	mov.u32 	%r20358, %r20308;
	bra.uni 	BB4_287;

BB4_226:
	setp.gt.s32	%p122, %r12943, 11;
	@%p122 bra 	BB4_234;

	setp.gt.s32	%p128, %r12943, 9;
	@%p128 bra 	BB4_231;

	setp.eq.s32	%p131, %r12943, 8;
	@%p131 bra 	BB4_284;
	bra.uni 	BB4_229;

BB4_284:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20351, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r20348, %r20308;
	mov.u32 	%r20349, %r20308;
	mov.u32 	%r20350, %r20308;
	bra.uni 	BB4_285;

BB4_257:
	setp.gt.s32	%p99, %r12943, 27;
	@%p99 bra 	BB4_265;

	setp.gt.s32	%p105, %r12943, 25;
	@%p105 bra 	BB4_262;

	setp.eq.s32	%p108, %r12943, 24;
	@%p108 bra 	BB4_276;
	bra.uni 	BB4_260;

BB4_276:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20367, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20360, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20361, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20362, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2892, %r20308;
	mov.u32 	%r2890, %r20308;
	mov.u32 	%r2888, %r20308;
	mov.u32 	%r2886, %r20308;
	mov.u32 	%r20364, %r20308;
	mov.u32 	%r20365, %r20308;
	mov.u32 	%r20366, %r20308;
	bra.uni 	BB4_289;

BB4_218:
	setp.gt.s32	%p134, %r12943, 5;
	@%p134 bra 	BB4_222;

	setp.eq.s32	%p137, %r12943, 4;
	@%p137 bra 	BB4_291;
	bra.uni 	BB4_220;

BB4_291:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20347, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r20344, %r20308;
	mov.u32 	%r20345, %r20308;
	mov.u32 	%r20346, %r20308;
	bra.uni 	BB4_225;

BB4_250:
	setp.gt.s32	%p111, %r12943, 21;
	@%p111 bra 	BB4_254;

	setp.eq.s32	%p114, %r12943, 20;
	@%p114 bra 	BB4_278;
	bra.uni 	BB4_252;

BB4_278:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20363, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r20360, %r20308;
	mov.u32 	%r20361, %r20308;
	mov.u32 	%r20362, %r20308;
	bra.uni 	BB4_288;

BB4_234:
	setp.gt.s32	%p123, %r12943, 13;
	@%p123 bra 	BB4_238;

	setp.eq.s32	%p126, %r12943, 12;
	@%p126 bra 	BB4_282;
	bra.uni 	BB4_236;

BB4_282:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20355, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r20352, %r20308;
	mov.u32 	%r20353, %r20308;
	mov.u32 	%r20354, %r20308;
	bra.uni 	BB4_286;

BB4_265:
	setp.gt.s32	%p100, %r12943, 29;
	@%p100 bra 	BB4_269;

	setp.eq.s32	%p103, %r12943, 28;
	@%p103 bra 	BB4_274;
	bra.uni 	BB4_267;

BB4_274:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20371, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20364, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20365, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20366, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20367, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20360, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20361, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20362, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2892, %r20308;
	mov.u32 	%r2890, %r20308;
	mov.u32 	%r2888, %r20308;
	mov.u32 	%r2886, %r20308;
	mov.u32 	%r2900, %r20308;
	mov.u32 	%r2898, %r20308;
	mov.u32 	%r2896, %r20308;
	mov.u32 	%r2894, %r20308;
	mov.u32 	%r20368, %r20308;
	mov.u32 	%r20369, %r20308;
	mov.u32 	%r20370, %r20308;
	bra.uni 	BB4_295;

BB4_215:
	setp.eq.s32	%p140, %r12943, 2;
	@%p140 bra 	BB4_292;
	bra.uni 	BB4_216;

BB4_292:
	mov.u32 	%r20310, 0;
	// inline asm
	prmt.b32 %r20341, %r20310, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20308, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20309, %r2846, %r20310, %r1720;
	// inline asm
	mov.u32 	%r20311, %r20310;
	mov.u32 	%r20340, %r20310;
	mov.u32 	%r20344, %r20310;
	mov.u32 	%r20345, %r20310;
	mov.u32 	%r20346, %r20310;
	mov.u32 	%r20347, %r20310;
	mov.u32 	%r20348, %r20310;
	mov.u32 	%r20349, %r20310;
	mov.u32 	%r20350, %r20310;
	mov.u32 	%r20351, %r20310;
	mov.u32 	%r20352, %r20310;
	mov.u32 	%r20353, %r20310;
	mov.u32 	%r20354, %r20310;
	mov.u32 	%r20355, %r20310;
	mov.u32 	%r20356, %r20310;
	mov.u32 	%r20357, %r20310;
	mov.u32 	%r20358, %r20310;
	mov.u32 	%r20359, %r20310;
	mov.u32 	%r20360, %r20310;
	mov.u32 	%r20361, %r20310;
	mov.u32 	%r20362, %r20310;
	mov.u32 	%r20363, %r20310;
	mov.u32 	%r20364, %r20310;
	mov.u32 	%r20365, %r20310;
	mov.u32 	%r20366, %r20310;
	mov.u32 	%r20367, %r20310;
	mov.u32 	%r20368, %r20310;
	mov.u32 	%r20369, %r20310;
	mov.u32 	%r20370, %r20310;
	mov.u32 	%r20371, %r20310;
	bra.uni 	BB4_295;

BB4_247:
	setp.eq.s32	%p117, %r12943, 18;
	@%p117 bra 	BB4_279;
	bra.uni 	BB4_248;

BB4_279:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20357, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r20356, %r20308;
	bra.uni 	BB4_287;

BB4_231:
	setp.eq.s32	%p129, %r12943, 10;
	@%p129 bra 	BB4_283;
	bra.uni 	BB4_232;

BB4_283:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20349, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r20348, %r20308;
	bra.uni 	BB4_285;

BB4_262:
	setp.eq.s32	%p106, %r12943, 26;
	@%p106 bra 	BB4_275;
	bra.uni 	BB4_263;

BB4_275:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20365, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20366, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20367, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20360, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20361, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20362, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2892, %r20308;
	mov.u32 	%r2890, %r20308;
	mov.u32 	%r2888, %r20308;
	mov.u32 	%r2886, %r20308;
	mov.u32 	%r2896, %r20308;
	mov.u32 	%r2894, %r20308;
	mov.u32 	%r20364, %r20308;
	bra.uni 	BB4_289;

BB4_222:
	setp.eq.s32	%p135, %r12943, 6;
	@%p135 bra 	BB4_290;
	bra.uni 	BB4_223;

BB4_290:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20345, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r20344, %r20308;
	bra.uni 	BB4_225;

BB4_254:
	setp.eq.s32	%p112, %r12943, 22;
	@%p112 bra 	BB4_277;
	bra.uni 	BB4_255;

BB4_277:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20361, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20362, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2888, %r20308;
	mov.u32 	%r2886, %r20308;
	mov.u32 	%r20360, %r20308;
	bra.uni 	BB4_288;

BB4_238:
	setp.eq.s32	%p124, %r12943, 14;
	@%p124 bra 	BB4_281;
	bra.uni 	BB4_239;

BB4_281:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20353, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r20352, %r20308;
	bra.uni 	BB4_286;

BB4_269:
	setp.eq.s32	%p101, %r12943, 30;
	@%p101 bra 	BB4_273;
	bra.uni 	BB4_270;

BB4_273:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20369, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20370, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20364, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20365, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20366, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20367, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20360, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20361, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20362, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2892, %r20308;
	mov.u32 	%r2890, %r20308;
	mov.u32 	%r2888, %r20308;
	mov.u32 	%r2886, %r20308;
	mov.u32 	%r2900, %r20308;
	mov.u32 	%r2898, %r20308;
	mov.u32 	%r2896, %r20308;
	mov.u32 	%r2894, %r20308;
	mov.u32 	%r2904, %r20308;
	mov.u32 	%r2902, %r20308;
	mov.u32 	%r20368, %r20308;
	bra.uni 	BB4_295;

BB4_213:
	setp.eq.s32	%p143, %r12943, 1;
	@%p143 bra 	BB4_214;
	bra.uni 	BB4_271;

BB4_214:
	mov.u32 	%r20311, 0;
	// inline asm
	prmt.b32 %r20342, %r20311, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20308, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20309, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20310, %r2846, %r20311, %r1720;
	// inline asm
	mov.u32 	%r20340, %r20311;
	mov.u32 	%r20341, %r20311;
	mov.u32 	%r20344, %r20311;
	mov.u32 	%r20345, %r20311;
	mov.u32 	%r20346, %r20311;
	mov.u32 	%r20347, %r20311;
	mov.u32 	%r20348, %r20311;
	mov.u32 	%r20349, %r20311;
	mov.u32 	%r20350, %r20311;
	mov.u32 	%r20351, %r20311;
	mov.u32 	%r20352, %r20311;
	mov.u32 	%r20353, %r20311;
	mov.u32 	%r20354, %r20311;
	mov.u32 	%r20355, %r20311;
	mov.u32 	%r20356, %r20311;
	mov.u32 	%r20357, %r20311;
	mov.u32 	%r20358, %r20311;
	mov.u32 	%r20359, %r20311;
	mov.u32 	%r20360, %r20311;
	mov.u32 	%r20361, %r20311;
	mov.u32 	%r20362, %r20311;
	mov.u32 	%r20363, %r20311;
	mov.u32 	%r20364, %r20311;
	mov.u32 	%r20365, %r20311;
	mov.u32 	%r20366, %r20311;
	mov.u32 	%r20367, %r20311;
	mov.u32 	%r20368, %r20311;
	mov.u32 	%r20369, %r20311;
	mov.u32 	%r20370, %r20311;
	mov.u32 	%r20371, %r20311;
	bra.uni 	BB4_295;

BB4_245:
	setp.eq.s32	%p120, %r12943, 17;
	@%p120 bra 	BB4_246;
	bra.uni 	BB4_271;

BB4_246:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20358, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r20356, %r20308;
	mov.u32 	%r20357, %r20308;
	bra.uni 	BB4_287;

BB4_229:
	setp.eq.s32	%p132, %r12943, 9;
	@%p132 bra 	BB4_230;
	bra.uni 	BB4_271;

BB4_230:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20350, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r20348, %r20308;
	mov.u32 	%r20349, %r20308;
	bra.uni 	BB4_285;

BB4_260:
	setp.eq.s32	%p109, %r12943, 25;
	@%p109 bra 	BB4_261;
	bra.uni 	BB4_271;

BB4_261:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20366, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20367, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20360, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20361, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20362, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2892, %r20308;
	mov.u32 	%r2890, %r20308;
	mov.u32 	%r2888, %r20308;
	mov.u32 	%r2886, %r20308;
	mov.u32 	%r2894, %r20308;
	mov.u32 	%r20364, %r20308;
	mov.u32 	%r20365, %r20308;
	bra.uni 	BB4_289;

BB4_220:
	setp.eq.s32	%p138, %r12943, 5;
	@%p138 bra 	BB4_221;
	bra.uni 	BB4_271;

BB4_221:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20346, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r20344, %r20308;
	mov.u32 	%r20345, %r20308;
	bra.uni 	BB4_225;

BB4_252:
	setp.eq.s32	%p115, %r12943, 21;
	@%p115 bra 	BB4_253;
	bra.uni 	BB4_271;

BB4_253:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20362, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2886, %r20308;
	mov.u32 	%r20360, %r20308;
	mov.u32 	%r20361, %r20308;
	bra.uni 	BB4_288;

BB4_236:
	setp.eq.s32	%p127, %r12943, 13;
	@%p127 bra 	BB4_237;
	bra.uni 	BB4_271;

BB4_237:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20354, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r20352, %r20308;
	mov.u32 	%r20353, %r20308;
	bra.uni 	BB4_286;

BB4_267:
	setp.eq.s32	%p104, %r12943, 29;
	@%p104 bra 	BB4_268;
	bra.uni 	BB4_271;

BB4_268:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20370, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20364, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20365, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20366, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20367, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20360, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20361, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20362, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2892, %r20308;
	mov.u32 	%r2890, %r20308;
	mov.u32 	%r2888, %r20308;
	mov.u32 	%r2886, %r20308;
	mov.u32 	%r2900, %r20308;
	mov.u32 	%r2898, %r20308;
	mov.u32 	%r2896, %r20308;
	mov.u32 	%r2894, %r20308;
	mov.u32 	%r2902, %r20308;
	mov.u32 	%r20368, %r20308;
	mov.u32 	%r20369, %r20308;
	bra.uni 	BB4_295;

BB4_216:
	setp.eq.s32	%p141, %r12943, 3;
	@%p141 bra 	BB4_217;
	bra.uni 	BB4_271;

BB4_217:
	mov.u32 	%r20309, 0;
	// inline asm
	prmt.b32 %r20340, %r20309, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20308, %r2846, %r20309, %r1720;
	// inline asm
	mov.u32 	%r20310, %r20309;
	mov.u32 	%r20311, %r20309;
	mov.u32 	%r20344, %r20309;
	mov.u32 	%r20345, %r20309;
	mov.u32 	%r20346, %r20309;
	mov.u32 	%r20347, %r20309;
	mov.u32 	%r20348, %r20309;
	mov.u32 	%r20349, %r20309;
	mov.u32 	%r20350, %r20309;
	mov.u32 	%r20351, %r20309;
	mov.u32 	%r20352, %r20309;
	mov.u32 	%r20353, %r20309;
	mov.u32 	%r20354, %r20309;
	mov.u32 	%r20355, %r20309;
	mov.u32 	%r20356, %r20309;
	mov.u32 	%r20357, %r20309;
	mov.u32 	%r20358, %r20309;
	mov.u32 	%r20359, %r20309;
	mov.u32 	%r20360, %r20309;
	mov.u32 	%r20361, %r20309;
	mov.u32 	%r20362, %r20309;
	mov.u32 	%r20363, %r20309;
	mov.u32 	%r20364, %r20309;
	mov.u32 	%r20365, %r20309;
	mov.u32 	%r20366, %r20309;
	mov.u32 	%r20367, %r20309;
	mov.u32 	%r20368, %r20309;
	mov.u32 	%r20369, %r20309;
	mov.u32 	%r20370, %r20309;
	mov.u32 	%r20371, %r20309;
	bra.uni 	BB4_295;

BB4_248:
	setp.eq.s32	%p118, %r12943, 19;
	@%p118 bra 	BB4_249;
	bra.uni 	BB4_271;

BB4_249:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20356, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	bra.uni 	BB4_287;

BB4_232:
	setp.eq.s32	%p130, %r12943, 11;
	@%p130 bra 	BB4_233;
	bra.uni 	BB4_271;

BB4_233:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20348, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	bra.uni 	BB4_285;

BB4_263:
	setp.eq.s32	%p107, %r12943, 27;
	@%p107 bra 	BB4_264;
	bra.uni 	BB4_271;

BB4_264:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20364, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20365, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20366, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20367, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20360, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20361, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20362, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2892, %r20308;
	mov.u32 	%r2890, %r20308;
	mov.u32 	%r2888, %r20308;
	mov.u32 	%r2886, %r20308;
	mov.u32 	%r2898, %r20308;
	mov.u32 	%r2896, %r20308;
	mov.u32 	%r2894, %r20308;
	bra.uni 	BB4_289;

BB4_223:
	setp.eq.s32	%p136, %r12943, 7;
	@%p136 bra 	BB4_224;
	bra.uni 	BB4_271;

BB4_224:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20344, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;

BB4_225:
	mov.u32 	%r20348, %r20308;
	mov.u32 	%r20349, %r20308;
	mov.u32 	%r20350, %r20308;
	mov.u32 	%r20351, %r20308;

BB4_285:
	mov.u32 	%r20352, %r20308;
	mov.u32 	%r20353, %r20308;
	mov.u32 	%r20354, %r20308;
	mov.u32 	%r20355, %r20308;

BB4_286:
	mov.u32 	%r20356, %r20308;
	mov.u32 	%r20357, %r20308;
	mov.u32 	%r20358, %r20308;
	mov.u32 	%r20359, %r20308;

BB4_287:
	mov.u32 	%r20360, %r20308;
	mov.u32 	%r20361, %r20308;
	mov.u32 	%r20362, %r20308;
	mov.u32 	%r20363, %r20308;

BB4_288:
	mov.u32 	%r20364, %r20308;
	mov.u32 	%r20365, %r20308;
	mov.u32 	%r20366, %r20308;
	mov.u32 	%r20367, %r20308;

BB4_289:
	mov.u32 	%r20368, %r20308;
	mov.u32 	%r20369, %r20308;
	mov.u32 	%r20370, %r20308;
	mov.u32 	%r20371, %r20308;
	bra.uni 	BB4_295;

BB4_255:
	setp.eq.s32	%p113, %r12943, 23;
	@%p113 bra 	BB4_256;
	bra.uni 	BB4_271;

BB4_256:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20360, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20361, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20362, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2890, %r20308;
	mov.u32 	%r2888, %r20308;
	mov.u32 	%r2886, %r20308;
	bra.uni 	BB4_288;

BB4_239:
	setp.eq.s32	%p125, %r12943, 15;
	@%p125 bra 	BB4_240;
	bra.uni 	BB4_271;

BB4_240:
	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20352, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	bra.uni 	BB4_286;

BB4_270:
	setp.ne.s32	%p102, %r12943, 31;
	@%p102 bra 	BB4_271;

	mov.u32 	%r20308, 0;
	// inline asm
	prmt.b32 %r20368, %r20308, %r2908, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20369, %r2908, %r2906, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20370, %r2906, %r2904, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2904, %r2902, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20364, %r2902, %r2900, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20365, %r2900, %r2898, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20366, %r2898, %r2896, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20367, %r2896, %r2894, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20360, %r2894, %r2892, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20361, %r2892, %r2890, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20362, %r2890, %r2888, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20363, %r2888, %r2886, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20356, %r2886, %r2884, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20357, %r2884, %r2882, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20358, %r2882, %r2880, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20359, %r2880, %r2878, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20352, %r2878, %r2876, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20353, %r2876, %r2874, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20354, %r2874, %r2872, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20355, %r2872, %r2870, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20348, %r2870, %r2868, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20349, %r2868, %r2866, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20350, %r2866, %r2864, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20351, %r2864, %r2862, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20344, %r2862, %r2860, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20345, %r2860, %r2858, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20346, %r2858, %r2856, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20347, %r2856, %r2854, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2854, %r2852, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2852, %r2850, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20342, %r2850, %r2848, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r20343, %r2848, %r2846, %r1720;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2846, %r20308, %r1720;
	// inline asm
	mov.u32 	%r20309, %r20308;
	mov.u32 	%r20310, %r20308;
	mov.u32 	%r20311, %r20308;
	mov.u32 	%r2860, %r20308;
	mov.u32 	%r2858, %r20308;
	mov.u32 	%r2856, %r20308;
	mov.u32 	%r2854, %r20308;
	mov.u32 	%r2868, %r20308;
	mov.u32 	%r2866, %r20308;
	mov.u32 	%r2864, %r20308;
	mov.u32 	%r2862, %r20308;
	mov.u32 	%r2876, %r20308;
	mov.u32 	%r2874, %r20308;
	mov.u32 	%r2872, %r20308;
	mov.u32 	%r2870, %r20308;
	mov.u32 	%r2884, %r20308;
	mov.u32 	%r2882, %r20308;
	mov.u32 	%r2880, %r20308;
	mov.u32 	%r2878, %r20308;
	mov.u32 	%r2892, %r20308;
	mov.u32 	%r2890, %r20308;
	mov.u32 	%r2888, %r20308;
	mov.u32 	%r2886, %r20308;
	mov.u32 	%r2900, %r20308;
	mov.u32 	%r2898, %r20308;
	mov.u32 	%r2896, %r20308;
	mov.u32 	%r2894, %r20308;
	mov.u32 	%r2906, %r20308;
	mov.u32 	%r2904, %r20308;
	mov.u32 	%r2902, %r20308;
	bra.uni 	BB4_295;

BB4_271:
	mov.u32 	%r20308, %r2852;
	mov.u32 	%r20309, %r2850;
	mov.u32 	%r20310, %r2848;
	mov.u32 	%r20311, %r2846;
	mov.u32 	%r20341, %r20340;
	mov.u32 	%r20342, %r20340;
	mov.u32 	%r20343, %r20340;

BB4_294:
	mov.u32 	%r20344, %r20340;
	mov.u32 	%r20345, %r20340;
	mov.u32 	%r20346, %r20340;
	mov.u32 	%r20347, %r20340;
	mov.u32 	%r20348, %r20340;
	mov.u32 	%r20349, %r20340;
	mov.u32 	%r20350, %r20340;
	mov.u32 	%r20351, %r20340;
	mov.u32 	%r20352, %r20340;
	mov.u32 	%r20353, %r20340;
	mov.u32 	%r20354, %r20340;
	mov.u32 	%r20355, %r20340;
	mov.u32 	%r20356, %r20340;
	mov.u32 	%r20357, %r20340;
	mov.u32 	%r20358, %r20340;
	mov.u32 	%r20359, %r20340;
	mov.u32 	%r20360, %r20340;
	mov.u32 	%r20361, %r20340;
	mov.u32 	%r20362, %r20340;
	mov.u32 	%r20363, %r20340;
	mov.u32 	%r20364, %r20340;
	mov.u32 	%r20365, %r20340;
	mov.u32 	%r20366, %r20340;
	mov.u32 	%r20367, %r20340;
	mov.u32 	%r20368, %r20340;
	mov.u32 	%r20369, %r20340;
	mov.u32 	%r20370, %r20340;
	mov.u32 	%r20371, %r20340;
	bra.uni 	BB4_295;

BB4_2:
	ld.param.u32 	%r20208, [sha512_update_global_swap_param_2];
	sub.s32 	%r2941, %r20208, %r20209;
	ld.local.u32 	%r2942, [%rd1+192];
	and.b32  	%r2943, %r2942, 127;
	add.s32 	%r2944, %r2942, %r2941;
	st.local.u32 	[%rd1+192], %r2944;
	add.s32 	%r2945, %r2943, %r2941;
	setp.lt.s32	%p2, %r2945, 128;
	bfe.u32 	%r36, %r2942, 2, 5;
	and.b32  	%r2946, %r2942, 3;
	shl.b32 	%r2947, %r2946, 2;
	mov.u32 	%r2948, 1985229328;
	shr.u32 	%r2949, %r2948, %r2947;
	and.b32  	%r37, %r2949, 65535;
	@%p2 bra 	BB4_91;
	bra.uni 	BB4_3;

BB4_91:
	setp.gt.s32	%p50, %r36, 15;
	@%p50 bra 	BB4_123;

	setp.gt.s32	%p74, %r36, 7;
	@%p74 bra 	BB4_108;

	setp.gt.s32	%p86, %r36, 3;
	@%p86 bra 	BB4_101;

	setp.gt.s32	%p92, %r36, 1;
	@%p92 bra 	BB4_98;

	setp.eq.s32	%p95, %r36, 0;
	@%p95 bra 	BB4_205;
	bra.uni 	BB4_96;

BB4_205:
	// inline asm
	prmt.b32 %r2908, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2852, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2850, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2848, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r12846, 0;
	// inline asm
	prmt.b32 %r20306, %r2846, %r12846, %r37;
	// inline asm
	bra.uni 	BB4_206;

BB4_3:
	mov.u32 	%r20243, 0;
	setp.gt.s32	%p3, %r36, 15;
	@%p3 bra 	BB4_36;

	setp.gt.s32	%p27, %r36, 7;
	@%p27 bra 	BB4_21;

	setp.gt.s32	%p39, %r36, 3;
	@%p39 bra 	BB4_13;

	setp.gt.s32	%p45, %r36, 1;
	@%p45 bra 	BB4_10;

	setp.eq.s32	%p48, %r36, 0;
	@%p48 bra 	BB4_88;
	bra.uni 	BB4_8;

BB4_88:
	mov.u32 	%r20243, 0;
	// inline asm
	prmt.b32 %r20246, %r20243, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20211, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20212, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20213, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20242, %r2846, %r20243, %r37;
	// inline asm
	mov.u32 	%r20244, %r20243;
	mov.u32 	%r20245, %r20243;
	bra.uni 	BB4_89;

BB4_123:
	setp.gt.s32	%p51, %r36, 23;
	@%p51 bra 	BB4_139;

	setp.gt.s32	%p63, %r36, 19;
	@%p63 bra 	BB4_132;

	setp.gt.s32	%p69, %r36, 17;
	@%p69 bra 	BB4_129;

	setp.eq.s32	%p72, %r36, 16;
	@%p72 bra 	BB4_180;
	bra.uni 	BB4_127;

BB4_180:
	// inline asm
	prmt.b32 %r2908, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2878, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	bra.uni 	BB4_181;

BB4_36:
	setp.gt.s32	%p4, %r36, 23;
	@%p4 bra 	BB4_52;

	setp.gt.s32	%p16, %r36, 19;
	@%p16 bra 	BB4_45;

	setp.gt.s32	%p22, %r36, 17;
	@%p22 bra 	BB4_42;

	setp.eq.s32	%p25, %r36, 16;
	@%p25 bra 	BB4_75;
	bra.uni 	BB4_40;

BB4_75:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20262, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20259, %r20211;
	mov.u32 	%r20260, %r20211;
	mov.u32 	%r20261, %r20211;
	bra.uni 	BB4_82;

BB4_108:
	setp.gt.s32	%p75, %r36, 11;
	@%p75 bra 	BB4_116;

	setp.gt.s32	%p81, %r36, 9;
	@%p81 bra 	BB4_113;

	setp.eq.s32	%p84, %r36, 8;
	@%p84 bra 	BB4_194;
	bra.uni 	BB4_111;

BB4_194:
	// inline asm
	prmt.b32 %r2908, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2862, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	bra.uni 	BB4_195;

BB4_21:
	setp.gt.s32	%p28, %r36, 11;
	@%p28 bra 	BB4_29;

	setp.gt.s32	%p34, %r36, 9;
	@%p34 bra 	BB4_26;

	setp.eq.s32	%p37, %r36, 8;
	@%p37 bra 	BB4_79;
	bra.uni 	BB4_24;

BB4_79:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20254, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20251, %r20211;
	mov.u32 	%r20252, %r20211;
	mov.u32 	%r20253, %r20211;
	bra.uni 	BB4_80;

BB4_139:
	setp.gt.s32	%p52, %r36, 27;
	@%p52 bra 	BB4_147;

	setp.gt.s32	%p58, %r36, 25;
	@%p58 bra 	BB4_144;

	setp.eq.s32	%p61, %r36, 24;
	@%p61 bra 	BB4_166;
	bra.uni 	BB4_142;

BB4_166:
	// inline asm
	prmt.b32 %r2908, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2894, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;
	mov.u32 	%r2892, %r2852;
	bra.uni 	BB4_167;

BB4_52:
	setp.gt.s32	%p5, %r36, 27;
	@%p5 bra 	BB4_60;

	setp.gt.s32	%p11, %r36, 25;
	@%p11 bra 	BB4_57;

	setp.eq.s32	%p14, %r36, 24;
	@%p14 bra 	BB4_71;
	bra.uni 	BB4_55;

BB4_71:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20270, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20263, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20264, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20265, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2892, %r20211;
	mov.u32 	%r2890, %r20211;
	mov.u32 	%r2888, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20267, %r20211;
	mov.u32 	%r20268, %r20211;
	mov.u32 	%r20269, %r20211;
	bra.uni 	BB4_84;

BB4_101:
	setp.gt.s32	%p87, %r36, 5;
	@%p87 bra 	BB4_105;

	setp.eq.s32	%p90, %r36, 4;
	@%p90 bra 	BB4_201;
	bra.uni 	BB4_103;

BB4_201:
	// inline asm
	prmt.b32 %r2908, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2854, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r20306, %r2852;
	bra.uni 	BB4_206;

BB4_13:
	setp.gt.s32	%p40, %r36, 5;
	@%p40 bra 	BB4_17;

	setp.eq.s32	%p43, %r36, 4;
	@%p43 bra 	BB4_86;
	bra.uni 	BB4_15;

BB4_86:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20250, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20247, %r20211;
	mov.u32 	%r20248, %r20211;
	mov.u32 	%r20249, %r20211;
	bra.uni 	BB4_20;

BB4_132:
	setp.gt.s32	%p64, %r36, 21;
	@%p64 bra 	BB4_136;

	setp.eq.s32	%p67, %r36, 20;
	@%p67 bra 	BB4_173;
	bra.uni 	BB4_134;

BB4_173:
	// inline asm
	prmt.b32 %r2908, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2886, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	bra.uni 	BB4_174;

BB4_45:
	setp.gt.s32	%p17, %r36, 21;
	@%p17 bra 	BB4_49;

	setp.eq.s32	%p20, %r36, 20;
	@%p20 bra 	BB4_73;
	bra.uni 	BB4_47;

BB4_73:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20266, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20263, %r20211;
	mov.u32 	%r20264, %r20211;
	mov.u32 	%r20265, %r20211;
	bra.uni 	BB4_83;

BB4_116:
	setp.gt.s32	%p76, %r36, 13;
	@%p76 bra 	BB4_120;

	setp.eq.s32	%p79, %r36, 12;
	@%p79 bra 	BB4_187;
	bra.uni 	BB4_118;

BB4_187:
	// inline asm
	prmt.b32 %r2908, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2870, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	bra.uni 	BB4_188;

BB4_29:
	setp.gt.s32	%p29, %r36, 13;
	@%p29 bra 	BB4_33;

	setp.eq.s32	%p32, %r36, 12;
	@%p32 bra 	BB4_77;
	bra.uni 	BB4_31;

BB4_77:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20258, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20255, %r20211;
	mov.u32 	%r20256, %r20211;
	mov.u32 	%r20257, %r20211;
	bra.uni 	BB4_81;

BB4_147:
	setp.gt.s32	%p53, %r36, 29;
	@%p53 bra 	BB4_151;

	setp.eq.s32	%p56, %r36, 28;
	@%p56 bra 	BB4_159;
	bra.uni 	BB4_149;

BB4_159:
	// inline asm
	prmt.b32 %r2908, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2902, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;
	mov.u32 	%r2892, %r2852;
	mov.u32 	%r2890, %r2852;
	mov.u32 	%r2888, %r2852;
	mov.u32 	%r2886, %r2852;
	mov.u32 	%r2900, %r2852;
	bra.uni 	BB4_160;

BB4_60:
	setp.gt.s32	%p6, %r36, 29;
	@%p6 bra 	BB4_64;

	setp.eq.s32	%p9, %r36, 28;
	@%p9 bra 	BB4_69;
	bra.uni 	BB4_62;

BB4_69:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20274, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20267, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20268, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20269, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20270, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20263, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20264, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20265, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2892, %r20211;
	mov.u32 	%r2890, %r20211;
	mov.u32 	%r2888, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r2900, %r20211;
	mov.u32 	%r2898, %r20211;
	mov.u32 	%r2896, %r20211;
	mov.u32 	%r2894, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20271, %r20211;
	mov.u32 	%r20272, %r20211;
	mov.u32 	%r20273, %r20211;
	bra.uni 	BB4_90;

BB4_98:
	setp.eq.s32	%p93, %r36, 2;
	@%p93 bra 	BB4_203;
	bra.uni 	BB4_99;

BB4_203:
	// inline asm
	prmt.b32 %r2908, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2852, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2848, 0;
	// inline asm
	prmt.b32 %r2850, %r2846, %r2848, %r37;
	// inline asm
	mov.u32 	%r20306, %r2848;
	bra.uni 	BB4_206;

BB4_10:
	setp.eq.s32	%p46, %r36, 2;
	@%p46 bra 	BB4_87;
	bra.uni 	BB4_11;

BB4_87:
	mov.u32 	%r20213, 0;
	// inline asm
	prmt.b32 %r20244, %r20213, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20211, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20212, %r2846, %r20213, %r37;
	// inline asm
	mov.u32 	%r20242, %r20213;
	mov.u32 	%r20243, %r20213;
	mov.u32 	%r20247, %r20213;
	mov.u32 	%r20248, %r20213;
	mov.u32 	%r20249, %r20213;
	mov.u32 	%r20250, %r20213;
	mov.u32 	%r20251, %r20213;
	mov.u32 	%r20252, %r20213;
	mov.u32 	%r20253, %r20213;
	mov.u32 	%r20254, %r20213;
	mov.u32 	%r20255, %r20213;
	mov.u32 	%r20256, %r20213;
	mov.u32 	%r20257, %r20213;
	mov.u32 	%r20258, %r20213;
	mov.u32 	%r20259, %r20213;
	mov.u32 	%r20260, %r20213;
	mov.u32 	%r20261, %r20213;
	mov.u32 	%r20262, %r20213;
	mov.u32 	%r20263, %r20213;
	mov.u32 	%r20264, %r20213;
	mov.u32 	%r20265, %r20213;
	mov.u32 	%r20266, %r20213;
	mov.u32 	%r20267, %r20213;
	mov.u32 	%r20268, %r20213;
	mov.u32 	%r20269, %r20213;
	mov.u32 	%r20270, %r20213;
	mov.u32 	%r20271, %r20213;
	mov.u32 	%r20272, %r20213;
	mov.u32 	%r20273, %r20213;
	mov.u32 	%r20274, %r20213;
	bra.uni 	BB4_90;

BB4_129:
	setp.eq.s32	%p70, %r36, 18;
	@%p70 bra 	BB4_178;
	bra.uni 	BB4_130;

BB4_178:
	// inline asm
	prmt.b32 %r2908, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2882, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	bra.uni 	BB4_175;

BB4_42:
	setp.eq.s32	%p23, %r36, 18;
	@%p23 bra 	BB4_74;
	bra.uni 	BB4_43;

BB4_74:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20260, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20259, %r20211;
	bra.uni 	BB4_82;

BB4_113:
	setp.eq.s32	%p82, %r36, 10;
	@%p82 bra 	BB4_192;
	bra.uni 	BB4_114;

BB4_192:
	// inline asm
	prmt.b32 %r2908, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2866, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	bra.uni 	BB4_189;

BB4_26:
	setp.eq.s32	%p35, %r36, 10;
	@%p35 bra 	BB4_78;
	bra.uni 	BB4_27;

BB4_78:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20252, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20251, %r20211;
	bra.uni 	BB4_80;

BB4_144:
	setp.eq.s32	%p59, %r36, 26;
	@%p59 bra 	BB4_164;
	bra.uni 	BB4_145;

BB4_164:
	// inline asm
	prmt.b32 %r2908, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2898, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;
	mov.u32 	%r2892, %r2852;
	mov.u32 	%r2890, %r2852;
	mov.u32 	%r2888, %r2852;
	mov.u32 	%r2886, %r2852;
	bra.uni 	BB4_161;

BB4_57:
	setp.eq.s32	%p12, %r36, 26;
	@%p12 bra 	BB4_70;
	bra.uni 	BB4_58;

BB4_70:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20268, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20269, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20270, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20263, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20264, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20265, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2892, %r20211;
	mov.u32 	%r2890, %r20211;
	mov.u32 	%r2888, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r2896, %r20211;
	mov.u32 	%r2894, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20267, %r20211;
	bra.uni 	BB4_84;

BB4_105:
	setp.eq.s32	%p88, %r36, 6;
	@%p88 bra 	BB4_199;
	bra.uni 	BB4_106;

BB4_199:
	// inline asm
	prmt.b32 %r2908, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2858, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	bra.uni 	BB4_196;

BB4_17:
	setp.eq.s32	%p41, %r36, 6;
	@%p41 bra 	BB4_85;
	bra.uni 	BB4_18;

BB4_85:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20248, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20247, %r20211;
	bra.uni 	BB4_20;

BB4_136:
	setp.eq.s32	%p65, %r36, 22;
	@%p65 bra 	BB4_171;
	bra.uni 	BB4_137;

BB4_171:
	// inline asm
	prmt.b32 %r2908, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2890, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;
	bra.uni 	BB4_168;

BB4_49:
	setp.eq.s32	%p18, %r36, 22;
	@%p18 bra 	BB4_72;
	bra.uni 	BB4_50;

BB4_72:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20264, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20265, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2888, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20263, %r20211;
	bra.uni 	BB4_83;

BB4_120:
	setp.eq.s32	%p77, %r36, 14;
	@%p77 bra 	BB4_185;
	bra.uni 	BB4_121;

BB4_185:
	// inline asm
	prmt.b32 %r2908, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2874, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	bra.uni 	BB4_182;

BB4_33:
	setp.eq.s32	%p30, %r36, 14;
	@%p30 bra 	BB4_76;
	bra.uni 	BB4_34;

BB4_76:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20256, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20255, %r20211;
	bra.uni 	BB4_81;

BB4_151:
	setp.eq.s32	%p54, %r36, 30;
	@%p54 bra 	BB4_157;
	bra.uni 	BB4_152;

BB4_157:
	// inline asm
	prmt.b32 %r2908, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2906, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;
	mov.u32 	%r2892, %r2852;
	mov.u32 	%r2890, %r2852;
	mov.u32 	%r2888, %r2852;
	mov.u32 	%r2886, %r2852;
	mov.u32 	%r2900, %r2852;
	mov.u32 	%r2898, %r2852;
	mov.u32 	%r2896, %r2852;
	mov.u32 	%r2894, %r2852;
	bra.uni 	BB4_155;

BB4_64:
	setp.eq.s32	%p7, %r36, 30;
	@%p7 bra 	BB4_68;
	bra.uni 	BB4_65;

BB4_68:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20272, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20273, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20274, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20267, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20268, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20269, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20270, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20263, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20264, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20265, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2892, %r20211;
	mov.u32 	%r2890, %r20211;
	mov.u32 	%r2888, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r2900, %r20211;
	mov.u32 	%r2898, %r20211;
	mov.u32 	%r2896, %r20211;
	mov.u32 	%r2894, %r20211;
	mov.u32 	%r2904, %r20211;
	mov.u32 	%r2902, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20271, %r20211;
	bra.uni 	BB4_90;

BB4_96:
	setp.eq.s32	%p96, %r36, 1;
	@%p96 bra 	BB4_204;
	bra.uni 	BB4_97;

BB4_204:
	// inline asm
	prmt.b32 %r2908, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2852, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2850, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r20306, 0;
	// inline asm
	prmt.b32 %r2848, %r2846, %r20306, %r37;
	// inline asm
	bra.uni 	BB4_206;

BB4_8:
	setp.eq.s32	%p49, %r36, 1;
	@%p49 bra 	BB4_9;
	bra.uni 	BB4_66;

BB4_9:
	mov.u32 	%r20242, 0;
	// inline asm
	prmt.b32 %r20245, %r20242, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20211, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20212, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20213, %r2846, %r20242, %r37;
	// inline asm
	mov.u32 	%r20243, %r20242;
	mov.u32 	%r20244, %r20242;
	mov.u32 	%r20247, %r20242;
	mov.u32 	%r20248, %r20242;
	mov.u32 	%r20249, %r20242;
	mov.u32 	%r20250, %r20242;
	mov.u32 	%r20251, %r20242;
	mov.u32 	%r20252, %r20242;
	mov.u32 	%r20253, %r20242;
	mov.u32 	%r20254, %r20242;
	mov.u32 	%r20255, %r20242;
	mov.u32 	%r20256, %r20242;
	mov.u32 	%r20257, %r20242;
	mov.u32 	%r20258, %r20242;
	mov.u32 	%r20259, %r20242;
	mov.u32 	%r20260, %r20242;
	mov.u32 	%r20261, %r20242;
	mov.u32 	%r20262, %r20242;
	mov.u32 	%r20263, %r20242;
	mov.u32 	%r20264, %r20242;
	mov.u32 	%r20265, %r20242;
	mov.u32 	%r20266, %r20242;
	mov.u32 	%r20267, %r20242;
	mov.u32 	%r20268, %r20242;
	mov.u32 	%r20269, %r20242;
	mov.u32 	%r20270, %r20242;
	mov.u32 	%r20271, %r20242;
	mov.u32 	%r20272, %r20242;
	mov.u32 	%r20273, %r20242;
	mov.u32 	%r20274, %r20242;
	bra.uni 	BB4_90;

BB4_127:
	setp.eq.s32	%p73, %r36, 17;
	@%p73 bra 	BB4_179;
	bra.uni 	BB4_128;

BB4_179:
	// inline asm
	prmt.b32 %r2908, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2880, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	bra.uni 	BB4_176;

BB4_40:
	setp.eq.s32	%p26, %r36, 17;
	@%p26 bra 	BB4_41;
	bra.uni 	BB4_66;

BB4_41:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20261, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20259, %r20211;
	mov.u32 	%r20260, %r20211;
	bra.uni 	BB4_82;

BB4_111:
	setp.eq.s32	%p85, %r36, 9;
	@%p85 bra 	BB4_193;
	bra.uni 	BB4_112;

BB4_193:
	// inline asm
	prmt.b32 %r2908, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2864, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	bra.uni 	BB4_190;

BB4_24:
	setp.eq.s32	%p38, %r36, 9;
	@%p38 bra 	BB4_25;
	bra.uni 	BB4_66;

BB4_25:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20253, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20251, %r20211;
	mov.u32 	%r20252, %r20211;
	bra.uni 	BB4_80;

BB4_142:
	setp.eq.s32	%p62, %r36, 25;
	@%p62 bra 	BB4_165;
	bra.uni 	BB4_143;

BB4_165:
	// inline asm
	prmt.b32 %r2908, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2896, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;
	mov.u32 	%r2892, %r2852;
	mov.u32 	%r2890, %r2852;
	mov.u32 	%r2888, %r2852;
	mov.u32 	%r2886, %r2852;
	bra.uni 	BB4_162;

BB4_55:
	setp.eq.s32	%p15, %r36, 25;
	@%p15 bra 	BB4_56;
	bra.uni 	BB4_66;

BB4_56:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20269, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20270, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20263, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20264, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20265, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2892, %r20211;
	mov.u32 	%r2890, %r20211;
	mov.u32 	%r2888, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r2894, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20267, %r20211;
	mov.u32 	%r20268, %r20211;
	bra.uni 	BB4_84;

BB4_103:
	setp.eq.s32	%p91, %r36, 5;
	@%p91 bra 	BB4_200;
	bra.uni 	BB4_104;

BB4_200:
	// inline asm
	prmt.b32 %r2908, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2856, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	bra.uni 	BB4_197;

BB4_15:
	setp.eq.s32	%p44, %r36, 5;
	@%p44 bra 	BB4_16;
	bra.uni 	BB4_66;

BB4_16:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20249, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20247, %r20211;
	mov.u32 	%r20248, %r20211;
	bra.uni 	BB4_20;

BB4_134:
	setp.eq.s32	%p68, %r36, 21;
	@%p68 bra 	BB4_172;
	bra.uni 	BB4_135;

BB4_172:
	// inline asm
	prmt.b32 %r2908, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2888, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;
	bra.uni 	BB4_169;

BB4_47:
	setp.eq.s32	%p21, %r36, 21;
	@%p21 bra 	BB4_48;
	bra.uni 	BB4_66;

BB4_48:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20265, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20263, %r20211;
	mov.u32 	%r20264, %r20211;
	bra.uni 	BB4_83;

BB4_118:
	setp.eq.s32	%p80, %r36, 13;
	@%p80 bra 	BB4_186;
	bra.uni 	BB4_119;

BB4_186:
	// inline asm
	prmt.b32 %r2908, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2872, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	bra.uni 	BB4_183;

BB4_31:
	setp.eq.s32	%p33, %r36, 13;
	@%p33 bra 	BB4_32;
	bra.uni 	BB4_66;

BB4_32:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20257, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20255, %r20211;
	mov.u32 	%r20256, %r20211;
	bra.uni 	BB4_81;

BB4_149:
	setp.eq.s32	%p57, %r36, 29;
	@%p57 bra 	BB4_158;
	bra.uni 	BB4_150;

BB4_158:
	// inline asm
	prmt.b32 %r2908, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2904, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;
	mov.u32 	%r2892, %r2852;
	mov.u32 	%r2890, %r2852;
	mov.u32 	%r2888, %r2852;
	mov.u32 	%r2886, %r2852;
	mov.u32 	%r2900, %r2852;
	mov.u32 	%r2898, %r2852;
	mov.u32 	%r2896, %r2852;
	mov.u32 	%r2894, %r2852;
	bra.uni 	BB4_156;

BB4_62:
	setp.eq.s32	%p10, %r36, 29;
	@%p10 bra 	BB4_63;
	bra.uni 	BB4_66;

BB4_63:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20273, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20274, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20267, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20268, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20269, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20270, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20263, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20264, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20265, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2892, %r20211;
	mov.u32 	%r2890, %r20211;
	mov.u32 	%r2888, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r2900, %r20211;
	mov.u32 	%r2898, %r20211;
	mov.u32 	%r2896, %r20211;
	mov.u32 	%r2894, %r20211;
	mov.u32 	%r2902, %r20211;
	mov.u32 	%r20242, %r20211;
	mov.u32 	%r20271, %r20211;
	mov.u32 	%r20272, %r20211;
	bra.uni 	BB4_90;

BB4_99:
	setp.eq.s32	%p94, %r36, 3;
	@%p94 bra 	BB4_202;
	bra.uni 	BB4_100;

BB4_202:
	// inline asm
	prmt.b32 %r2908, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2850, 0;
	// inline asm
	prmt.b32 %r2852, %r2846, %r2850, %r37;
	// inline asm
	mov.u32 	%r2848, %r2850;
	mov.u32 	%r20306, %r2850;
	bra.uni 	BB4_206;

BB4_11:
	setp.eq.s32	%p47, %r36, 3;
	@%p47 bra 	BB4_12;
	bra.uni 	BB4_66;

BB4_12:
	mov.u32 	%r20212, 0;
	// inline asm
	prmt.b32 %r20243, %r20212, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2858, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2856, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2854, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20211, %r2846, %r20212, %r37;
	// inline asm
	mov.u32 	%r20213, %r20212;
	mov.u32 	%r20242, %r20212;
	mov.u32 	%r20247, %r20212;
	mov.u32 	%r20248, %r20212;
	mov.u32 	%r20249, %r20212;
	mov.u32 	%r20250, %r20212;
	mov.u32 	%r20251, %r20212;
	mov.u32 	%r20252, %r20212;
	mov.u32 	%r20253, %r20212;
	mov.u32 	%r20254, %r20212;
	mov.u32 	%r20255, %r20212;
	mov.u32 	%r20256, %r20212;
	mov.u32 	%r20257, %r20212;
	mov.u32 	%r20258, %r20212;
	mov.u32 	%r20259, %r20212;
	mov.u32 	%r20260, %r20212;
	mov.u32 	%r20261, %r20212;
	mov.u32 	%r20262, %r20212;
	mov.u32 	%r20263, %r20212;
	mov.u32 	%r20264, %r20212;
	mov.u32 	%r20265, %r20212;
	mov.u32 	%r20266, %r20212;
	mov.u32 	%r20267, %r20212;
	mov.u32 	%r20268, %r20212;
	mov.u32 	%r20269, %r20212;
	mov.u32 	%r20270, %r20212;
	mov.u32 	%r20271, %r20212;
	mov.u32 	%r20272, %r20212;
	mov.u32 	%r20273, %r20212;
	mov.u32 	%r20274, %r20212;
	bra.uni 	BB4_90;

BB4_130:
	setp.eq.s32	%p71, %r36, 19;
	@%p71 bra 	BB4_177;
	bra.uni 	BB4_131;

BB4_177:
	// inline asm
	prmt.b32 %r2908, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2884, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;

BB4_174:
	mov.u32 	%r2882, %r2852;

BB4_175:
	mov.u32 	%r2880, %r2852;

BB4_176:
	mov.u32 	%r2878, %r2852;
	mov.u32 	%r20306, %r2852;
	bra.uni 	BB4_206;

BB4_43:
	setp.eq.s32	%p24, %r36, 19;
	@%p24 bra 	BB4_44;
	bra.uni 	BB4_66;

BB4_44:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20259, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r20242, %r20211;
	bra.uni 	BB4_82;

BB4_114:
	setp.eq.s32	%p83, %r36, 11;
	@%p83 bra 	BB4_191;
	bra.uni 	BB4_115;

BB4_191:
	// inline asm
	prmt.b32 %r2908, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2868, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;

BB4_188:
	mov.u32 	%r2866, %r2852;

BB4_189:
	mov.u32 	%r2864, %r2852;

BB4_190:
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r20306, %r2852;
	bra.uni 	BB4_206;

BB4_27:
	setp.eq.s32	%p36, %r36, 11;
	@%p36 bra 	BB4_28;
	bra.uni 	BB4_66;

BB4_28:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20251, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r20242, %r20211;
	bra.uni 	BB4_80;

BB4_145:
	setp.eq.s32	%p60, %r36, 27;
	@%p60 bra 	BB4_163;
	bra.uni 	BB4_146;

BB4_163:
	// inline asm
	prmt.b32 %r2908, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2900, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;
	mov.u32 	%r2892, %r2852;
	mov.u32 	%r2890, %r2852;
	mov.u32 	%r2888, %r2852;
	mov.u32 	%r2886, %r2852;

BB4_160:
	mov.u32 	%r2898, %r2852;

BB4_161:
	mov.u32 	%r2896, %r2852;

BB4_162:
	mov.u32 	%r2894, %r2852;
	mov.u32 	%r20306, %r2852;
	bra.uni 	BB4_206;

BB4_58:
	setp.eq.s32	%p13, %r36, 27;
	@%p13 bra 	BB4_59;
	bra.uni 	BB4_66;

BB4_59:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20267, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20268, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20269, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20270, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20263, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20264, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20265, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2892, %r20211;
	mov.u32 	%r2890, %r20211;
	mov.u32 	%r2888, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r2898, %r20211;
	mov.u32 	%r2896, %r20211;
	mov.u32 	%r2894, %r20211;
	mov.u32 	%r20242, %r20211;
	bra.uni 	BB4_84;

BB4_106:
	setp.eq.s32	%p89, %r36, 7;
	@%p89 bra 	BB4_198;
	bra.uni 	BB4_107;

BB4_198:
	// inline asm
	prmt.b32 %r2908, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2860, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;

BB4_195:
	mov.u32 	%r2858, %r2852;

BB4_196:
	mov.u32 	%r2856, %r2852;

BB4_197:
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r20306, %r2852;
	bra.uni 	BB4_206;

BB4_18:
	setp.eq.s32	%p42, %r36, 7;
	@%p42 bra 	BB4_19;
	bra.uni 	BB4_66;

BB4_19:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20247, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2874, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2872, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2870, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2868, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2866, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2864, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2862, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2860, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r20242, %r20211;

BB4_20:
	mov.u32 	%r20251, %r20211;
	mov.u32 	%r20252, %r20211;
	mov.u32 	%r20253, %r20211;
	mov.u32 	%r20254, %r20211;

BB4_80:
	mov.u32 	%r20255, %r20211;
	mov.u32 	%r20256, %r20211;
	mov.u32 	%r20257, %r20211;
	mov.u32 	%r20258, %r20211;

BB4_81:
	mov.u32 	%r20259, %r20211;
	mov.u32 	%r20260, %r20211;
	mov.u32 	%r20261, %r20211;
	mov.u32 	%r20262, %r20211;

BB4_82:
	mov.u32 	%r20263, %r20211;
	mov.u32 	%r20264, %r20211;
	mov.u32 	%r20265, %r20211;
	mov.u32 	%r20266, %r20211;

BB4_83:
	mov.u32 	%r20267, %r20211;
	mov.u32 	%r20268, %r20211;
	mov.u32 	%r20269, %r20211;
	mov.u32 	%r20270, %r20211;

BB4_84:
	mov.u32 	%r20271, %r20211;
	mov.u32 	%r20272, %r20211;
	mov.u32 	%r20273, %r20211;
	mov.u32 	%r20274, %r20211;
	bra.uni 	BB4_90;

BB4_137:
	setp.eq.s32	%p66, %r36, 23;
	@%p66 bra 	BB4_170;
	bra.uni 	BB4_138;

BB4_170:
	// inline asm
	prmt.b32 %r2908, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2892, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;

BB4_167:
	mov.u32 	%r2890, %r2852;

BB4_168:
	mov.u32 	%r2888, %r2852;

BB4_169:
	mov.u32 	%r2886, %r2852;
	mov.u32 	%r20306, %r2852;
	bra.uni 	BB4_206;

BB4_50:
	setp.eq.s32	%p19, %r36, 23;
	@%p19 bra 	BB4_51;
	bra.uni 	BB4_66;

BB4_51:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20263, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20264, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20265, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2890, %r20211;
	mov.u32 	%r2888, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r20242, %r20211;
	bra.uni 	BB4_83;

BB4_121:
	setp.eq.s32	%p78, %r36, 15;
	@%p78 bra 	BB4_184;
	bra.uni 	BB4_122;

BB4_184:
	// inline asm
	prmt.b32 %r2908, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2848, %r2846, %r37;
	// inline asm
	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2876, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;

BB4_181:
	mov.u32 	%r2874, %r2852;

BB4_182:
	mov.u32 	%r2872, %r2852;

BB4_183:
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r20306, %r2852;
	bra.uni 	BB4_206;

BB4_34:
	setp.eq.s32	%p31, %r36, 15;
	@%p31 bra 	BB4_35;
	bra.uni 	BB4_66;

BB4_35:
	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20255, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2906, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2904, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2902, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2900, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2898, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2896, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2894, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2892, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2890, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2888, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2886, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2884, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2882, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2880, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2878, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2876, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r20242, %r20211;
	bra.uni 	BB4_81;

BB4_152:
	setp.ne.s32	%p55, %r36, 31;
	@%p55 bra 	BB4_153;

	mov.u32 	%r2852, 0;
	// inline asm
	prmt.b32 %r2908, %r2846, %r2852, %r37;
	// inline asm
	mov.u32 	%r2850, %r2852;
	mov.u32 	%r2848, %r2852;
	mov.u32 	%r2860, %r2852;
	mov.u32 	%r2858, %r2852;
	mov.u32 	%r2856, %r2852;
	mov.u32 	%r2854, %r2852;
	mov.u32 	%r2868, %r2852;
	mov.u32 	%r2866, %r2852;
	mov.u32 	%r2864, %r2852;
	mov.u32 	%r2862, %r2852;
	mov.u32 	%r2876, %r2852;
	mov.u32 	%r2874, %r2852;
	mov.u32 	%r2872, %r2852;
	mov.u32 	%r2870, %r2852;
	mov.u32 	%r2884, %r2852;
	mov.u32 	%r2882, %r2852;
	mov.u32 	%r2880, %r2852;
	mov.u32 	%r2878, %r2852;
	mov.u32 	%r2892, %r2852;
	mov.u32 	%r2890, %r2852;
	mov.u32 	%r2888, %r2852;
	mov.u32 	%r2886, %r2852;
	mov.u32 	%r2900, %r2852;
	mov.u32 	%r2898, %r2852;
	mov.u32 	%r2896, %r2852;
	mov.u32 	%r2894, %r2852;
	mov.u32 	%r2906, %r2852;

BB4_155:
	mov.u32 	%r2904, %r2852;

BB4_156:
	mov.u32 	%r2902, %r2852;
	mov.u32 	%r20306, %r2852;
	bra.uni 	BB4_206;

BB4_65:
	setp.ne.s32	%p8, %r36, 31;
	@%p8 bra 	BB4_66;

	mov.u32 	%r20211, 0;
	// inline asm
	prmt.b32 %r20271, %r20211, %r2908, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20272, %r2908, %r2906, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20273, %r2906, %r2904, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20274, %r2904, %r2902, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20267, %r2902, %r2900, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20268, %r2900, %r2898, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20269, %r2898, %r2896, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20270, %r2896, %r2894, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20263, %r2894, %r2892, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20264, %r2892, %r2890, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20265, %r2890, %r2888, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20266, %r2888, %r2886, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20259, %r2886, %r2884, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20260, %r2884, %r2882, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20261, %r2882, %r2880, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20262, %r2880, %r2878, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20255, %r2878, %r2876, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20256, %r2876, %r2874, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20257, %r2874, %r2872, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20258, %r2872, %r2870, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20251, %r2870, %r2868, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20252, %r2868, %r2866, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20253, %r2866, %r2864, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20254, %r2864, %r2862, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20247, %r2862, %r2860, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20248, %r2860, %r2858, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20249, %r2858, %r2856, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20250, %r2856, %r2854, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20243, %r2854, %r2852, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20244, %r2852, %r2850, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20245, %r2850, %r2848, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r20246, %r2848, %r2846, %r37;
	// inline asm
	// inline asm
	prmt.b32 %r2908, %r2846, %r20211, %r37;
	// inline asm
	mov.u32 	%r20212, %r20211;
	mov.u32 	%r20213, %r20211;
	mov.u32 	%r2860, %r20211;
	mov.u32 	%r2858, %r20211;
	mov.u32 	%r2856, %r20211;
	mov.u32 	%r2854, %r20211;
	mov.u32 	%r2868, %r20211;
	mov.u32 	%r2866, %r20211;
	mov.u32 	%r2864, %r20211;
	mov.u32 	%r2862, %r20211;
	mov.u32 	%r2876, %r20211;
	mov.u32 	%r2874, %r20211;
	mov.u32 	%r2872, %r20211;
	mov.u32 	%r2870, %r20211;
	mov.u32 	%r2884, %r20211;
	mov.u32 	%r2882, %r20211;
	mov.u32 	%r2880, %r20211;
	mov.u32 	%r2878, %r20211;
	mov.u32 	%r2892, %r20211;
	mov.u32 	%r2890, %r20211;
	mov.u32 	%r2888, %r20211;
	mov.u32 	%r2886, %r20211;
	mov.u32 	%r2900, %r20211;
	mov.u32 	%r2898, %r20211;
	mov.u32 	%r2896, %r20211;
	mov.u32 	%r2894, %r20211;
	mov.u32 	%r2906, %r20211;
	mov.u32 	%r2904, %r20211;
	mov.u32 	%r2902, %r20211;
	mov.u32 	%r20242, %r20211;
	bra.uni 	BB4_90;

BB4_66:
	mov.u32 	%r20211, %r2852;
	mov.u32 	%r20212, %r2850;
	mov.u32 	%r20213, %r2848;
	mov.u32 	%r20242, %r2846;
	mov.u32 	%r20244, %r20243;
	mov.u32 	%r20245, %r20243;
	mov.u32 	%r20246, %r20243;

BB4_89:
	mov.u32 	%r20247, %r20243;
	mov.u32 	%r20248, %r20243;
	mov.u32 	%r20249, %r20243;
	mov.u32 	%r20250, %r20243;
	mov.u32 	%r20251, %r20243;
	mov.u32 	%r20252, %r20243;
	mov.u32 	%r20253, %r20243;
	mov.u32 	%r20254, %r20243;
	mov.u32 	%r20255, %r20243;
	mov.u32 	%r20256, %r20243;
	mov.u32 	%r20257, %r20243;
	mov.u32 	%r20258, %r20243;
	mov.u32 	%r20259, %r20243;
	mov.u32 	%r20260, %r20243;
	mov.u32 	%r20261, %r20243;
	mov.u32 	%r20262, %r20243;
	mov.u32 	%r20263, %r20243;
	mov.u32 	%r20264, %r20243;
	mov.u32 	%r20265, %r20243;
	mov.u32 	%r20266, %r20243;
	mov.u32 	%r20267, %r20243;
	mov.u32 	%r20268, %r20243;
	mov.u32 	%r20269, %r20243;
	mov.u32 	%r20270, %r20243;
	mov.u32 	%r20271, %r20243;
	mov.u32 	%r20272, %r20243;
	mov.u32 	%r20273, %r20243;
	mov.u32 	%r20274, %r20243;

BB4_90:
	ld.local.v2.u32 	{%r8198, %r8199}, [%rd1+64];
	ld.local.v2.u32 	{%r8202, %r8203}, [%rd1+72];
	ld.local.v2.u32 	{%r8206, %r8207}, [%rd1+80];
	ld.local.v2.u32 	{%r8210, %r8211}, [%rd1+88];
	ld.local.v2.u32 	{%r8214, %r8215}, [%rd1+96];
	ld.local.v2.u32 	{%r8218, %r8219}, [%rd1+104];
	ld.local.v2.u32 	{%r8222, %r8223}, [%rd1+112];
	ld.local.v2.u32 	{%r8226, %r8227}, [%rd1+120];
	ld.local.v2.u32 	{%r8230, %r8231}, [%rd1+128];
	ld.local.v2.u32 	{%r8234, %r8235}, [%rd1+136];
	ld.local.v2.u32 	{%r8238, %r8239}, [%rd1+144];
	ld.local.v2.u32 	{%r8242, %r8243}, [%rd1+152];
	ld.local.v2.u32 	{%r8246, %r8247}, [%rd1+160];
	ld.local.v2.u32 	{%r8250, %r8251}, [%rd1+168];
	ld.local.v2.u32 	{%r8254, %r8255}, [%rd1+176];
	ld.local.v2.u32 	{%r8258, %r8259}, [%rd1+184];
	or.b32  	%r8262, %r8198, %r20242;
	or.b32  	%r8263, %r8199, %r20213;
	mov.b64	%rd148, {%r8263, %r8262};
	or.b32  	%r8264, %r8202, %r20212;
	or.b32  	%r8265, %r8203, %r20211;
	mov.b64	%rd149, {%r8265, %r8264};
	or.b32  	%r8266, %r8206, %r2854;
	or.b32  	%r8267, %r8207, %r2856;
	mov.b64	%rd150, {%r8267, %r8266};
	or.b32  	%r8268, %r8210, %r2858;
	or.b32  	%r8269, %r8211, %r2860;
	mov.b64	%rd151, {%r8269, %r8268};
	or.b32  	%r8270, %r8214, %r2862;
	or.b32  	%r8271, %r8215, %r2864;
	mov.b64	%rd152, {%r8271, %r8270};
	or.b32  	%r8272, %r8218, %r2866;
	or.b32  	%r8273, %r8219, %r2868;
	mov.b64	%rd153, {%r8273, %r8272};
	or.b32  	%r8274, %r8222, %r2870;
	or.b32  	%r8275, %r8223, %r2872;
	mov.b64	%rd154, {%r8275, %r8274};
	or.b32  	%r8276, %r8226, %r2874;
	or.b32  	%r8277, %r8227, %r2876;
	mov.b64	%rd155, {%r8277, %r8276};
	or.b32  	%r8278, %r8230, %r2878;
	or.b32  	%r8279, %r8231, %r2880;
	mov.b64	%rd156, {%r8279, %r8278};
	or.b32  	%r8280, %r8234, %r2882;
	or.b32  	%r8281, %r8235, %r2884;
	mov.b64	%rd157, {%r8281, %r8280};
	or.b32  	%r8282, %r8238, %r2886;
	or.b32  	%r8283, %r8239, %r2888;
	mov.b64	%rd158, {%r8283, %r8282};
	or.b32  	%r8284, %r8242, %r2890;
	or.b32  	%r8285, %r8243, %r2892;
	mov.b64	%rd159, {%r8285, %r8284};
	or.b32  	%r8286, %r8246, %r2894;
	or.b32  	%r8287, %r8247, %r2896;
	mov.b64	%rd160, {%r8287, %r8286};
	or.b32  	%r8288, %r8250, %r2898;
	or.b32  	%r8289, %r8251, %r2900;
	mov.b64	%rd161, {%r8289, %r8288};
	or.b32  	%r8290, %r8254, %r2902;
	or.b32  	%r8291, %r8255, %r2904;
	mov.b64	%rd162, {%r8291, %r8290};
	or.b32  	%r8292, %r8258, %r2906;
	or.b32  	%r8293, %r8259, %r2908;
	mov.b64	%rd163, {%r8293, %r8292};
	ld.local.u64 	%rd164, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8294,%dummy}, %rd164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8295}, %rd164;
	}
	shf.r.wrap.b32 	%r8296, %r8295, %r8294, 14;
	shf.r.wrap.b32 	%r8297, %r8294, %r8295, 14;
	mov.b64 	%rd165, {%r8297, %r8296};
	shf.r.wrap.b32 	%r8298, %r8295, %r8294, 18;
	shf.r.wrap.b32 	%r8299, %r8294, %r8295, 18;
	mov.b64 	%rd166, {%r8299, %r8298};
	xor.b64  	%rd167, %rd166, %rd165;
	shf.l.wrap.b32 	%r8300, %r8294, %r8295, 23;
	shf.l.wrap.b32 	%r8301, %r8295, %r8294, 23;
	mov.b64 	%rd168, {%r8301, %r8300};
	xor.b64  	%rd169, %rd167, %rd168;
	ld.local.u64 	%rd170, [%rd1+48];
	ld.local.u64 	%rd171, [%rd1+40];
	xor.b64  	%rd172, %rd170, %rd171;
	and.b64  	%rd173, %rd172, %rd164;
	xor.b64  	%rd174, %rd173, %rd170;
	ld.local.u64 	%rd175, [%rd1+56];
	add.s64 	%rd176, %rd175, %rd148;
	add.s64 	%rd177, %rd176, %rd2;
	add.s64 	%rd178, %rd177, %rd174;
	add.s64 	%rd179, %rd178, %rd169;
	ld.local.u64 	%rd180, [%rd1+24];
	add.s64 	%rd181, %rd179, %rd180;
	ld.local.u64 	%rd182, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8302,%dummy}, %rd182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8303}, %rd182;
	}
	shf.r.wrap.b32 	%r8304, %r8303, %r8302, 28;
	shf.r.wrap.b32 	%r8305, %r8302, %r8303, 28;
	mov.b64 	%rd183, {%r8305, %r8304};
	shf.l.wrap.b32 	%r8306, %r8302, %r8303, 30;
	shf.l.wrap.b32 	%r8307, %r8303, %r8302, 30;
	mov.b64 	%rd184, {%r8307, %r8306};
	xor.b64  	%rd185, %rd184, %rd183;
	shf.l.wrap.b32 	%r8308, %r8302, %r8303, 25;
	shf.l.wrap.b32 	%r8309, %r8303, %r8302, 25;
	mov.b64 	%rd186, {%r8309, %r8308};
	xor.b64  	%rd187, %rd185, %rd186;
	ld.local.u64 	%rd188, [%rd1+16];
	xor.b64  	%rd189, %rd188, %rd182;
	ld.local.u64 	%rd190, [%rd1+8];
	xor.b64  	%rd191, %rd190, %rd182;
	and.b64  	%rd192, %rd189, %rd191;
	xor.b64  	%rd193, %rd192, %rd182;
	add.s64 	%rd194, %rd179, %rd193;
	add.s64 	%rd195, %rd194, %rd187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8310,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8311}, %rd181;
	}
	shf.r.wrap.b32 	%r8312, %r8311, %r8310, 14;
	shf.r.wrap.b32 	%r8313, %r8310, %r8311, 14;
	mov.b64 	%rd196, {%r8313, %r8312};
	shf.r.wrap.b32 	%r8314, %r8311, %r8310, 18;
	shf.r.wrap.b32 	%r8315, %r8310, %r8311, 18;
	mov.b64 	%rd197, {%r8315, %r8314};
	xor.b64  	%rd198, %rd197, %rd196;
	shf.l.wrap.b32 	%r8316, %r8310, %r8311, 23;
	shf.l.wrap.b32 	%r8317, %r8311, %r8310, 23;
	mov.b64 	%rd199, {%r8317, %r8316};
	xor.b64  	%rd200, %rd198, %rd199;
	xor.b64  	%rd201, %rd171, %rd164;
	and.b64  	%rd202, %rd181, %rd201;
	xor.b64  	%rd203, %rd202, %rd171;
	add.s64 	%rd204, %rd170, %rd149;
	add.s64 	%rd205, %rd204, %rd3;
	add.s64 	%rd206, %rd205, %rd203;
	add.s64 	%rd207, %rd206, %rd200;
	add.s64 	%rd208, %rd207, %rd188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8318,%dummy}, %rd195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8319}, %rd195;
	}
	shf.r.wrap.b32 	%r8320, %r8319, %r8318, 28;
	shf.r.wrap.b32 	%r8321, %r8318, %r8319, 28;
	mov.b64 	%rd209, {%r8321, %r8320};
	shf.l.wrap.b32 	%r8322, %r8318, %r8319, 30;
	shf.l.wrap.b32 	%r8323, %r8319, %r8318, 30;
	mov.b64 	%rd210, {%r8323, %r8322};
	xor.b64  	%rd211, %rd210, %rd209;
	shf.l.wrap.b32 	%r8324, %r8318, %r8319, 25;
	shf.l.wrap.b32 	%r8325, %r8319, %r8318, 25;
	mov.b64 	%rd212, {%r8325, %r8324};
	xor.b64  	%rd213, %rd211, %rd212;
	xor.b64  	%rd214, %rd195, %rd190;
	xor.b64  	%rd215, %rd195, %rd182;
	and.b64  	%rd216, %rd215, %rd214;
	xor.b64  	%rd217, %rd216, %rd195;
	add.s64 	%rd218, %rd207, %rd217;
	add.s64 	%rd219, %rd218, %rd213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8326,%dummy}, %rd208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8327}, %rd208;
	}
	shf.r.wrap.b32 	%r8328, %r8327, %r8326, 14;
	shf.r.wrap.b32 	%r8329, %r8326, %r8327, 14;
	mov.b64 	%rd220, {%r8329, %r8328};
	shf.r.wrap.b32 	%r8330, %r8327, %r8326, 18;
	shf.r.wrap.b32 	%r8331, %r8326, %r8327, 18;
	mov.b64 	%rd221, {%r8331, %r8330};
	xor.b64  	%rd222, %rd221, %rd220;
	shf.l.wrap.b32 	%r8332, %r8326, %r8327, 23;
	shf.l.wrap.b32 	%r8333, %r8327, %r8326, 23;
	mov.b64 	%rd223, {%r8333, %r8332};
	xor.b64  	%rd224, %rd222, %rd223;
	xor.b64  	%rd225, %rd181, %rd164;
	and.b64  	%rd226, %rd208, %rd225;
	xor.b64  	%rd227, %rd226, %rd164;
	add.s64 	%rd228, %rd171, %rd150;
	add.s64 	%rd229, %rd228, %rd4;
	add.s64 	%rd230, %rd229, %rd227;
	add.s64 	%rd231, %rd230, %rd224;
	add.s64 	%rd232, %rd231, %rd190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8334,%dummy}, %rd219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8335}, %rd219;
	}
	shf.r.wrap.b32 	%r8336, %r8335, %r8334, 28;
	shf.r.wrap.b32 	%r8337, %r8334, %r8335, 28;
	mov.b64 	%rd233, {%r8337, %r8336};
	shf.l.wrap.b32 	%r8338, %r8334, %r8335, 30;
	shf.l.wrap.b32 	%r8339, %r8335, %r8334, 30;
	mov.b64 	%rd234, {%r8339, %r8338};
	xor.b64  	%rd235, %rd234, %rd233;
	shf.l.wrap.b32 	%r8340, %r8334, %r8335, 25;
	shf.l.wrap.b32 	%r8341, %r8335, %r8334, 25;
	mov.b64 	%rd236, {%r8341, %r8340};
	xor.b64  	%rd237, %rd235, %rd236;
	xor.b64  	%rd238, %rd219, %rd182;
	xor.b64  	%rd239, %rd219, %rd195;
	and.b64  	%rd240, %rd239, %rd238;
	xor.b64  	%rd241, %rd240, %rd219;
	add.s64 	%rd242, %rd231, %rd241;
	add.s64 	%rd243, %rd242, %rd237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8342,%dummy}, %rd232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8343}, %rd232;
	}
	shf.r.wrap.b32 	%r8344, %r8343, %r8342, 14;
	shf.r.wrap.b32 	%r8345, %r8342, %r8343, 14;
	mov.b64 	%rd244, {%r8345, %r8344};
	shf.r.wrap.b32 	%r8346, %r8343, %r8342, 18;
	shf.r.wrap.b32 	%r8347, %r8342, %r8343, 18;
	mov.b64 	%rd245, {%r8347, %r8346};
	xor.b64  	%rd246, %rd245, %rd244;
	shf.l.wrap.b32 	%r8348, %r8342, %r8343, 23;
	shf.l.wrap.b32 	%r8349, %r8343, %r8342, 23;
	mov.b64 	%rd247, {%r8349, %r8348};
	xor.b64  	%rd248, %rd246, %rd247;
	xor.b64  	%rd249, %rd208, %rd181;
	and.b64  	%rd250, %rd232, %rd249;
	xor.b64  	%rd251, %rd250, %rd181;
	add.s64 	%rd252, %rd164, %rd151;
	add.s64 	%rd253, %rd252, %rd5;
	add.s64 	%rd254, %rd253, %rd251;
	add.s64 	%rd255, %rd254, %rd248;
	add.s64 	%rd256, %rd255, %rd182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8350,%dummy}, %rd243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8351}, %rd243;
	}
	shf.r.wrap.b32 	%r8352, %r8351, %r8350, 28;
	shf.r.wrap.b32 	%r8353, %r8350, %r8351, 28;
	mov.b64 	%rd257, {%r8353, %r8352};
	shf.l.wrap.b32 	%r8354, %r8350, %r8351, 30;
	shf.l.wrap.b32 	%r8355, %r8351, %r8350, 30;
	mov.b64 	%rd258, {%r8355, %r8354};
	xor.b64  	%rd259, %rd258, %rd257;
	shf.l.wrap.b32 	%r8356, %r8350, %r8351, 25;
	shf.l.wrap.b32 	%r8357, %r8351, %r8350, 25;
	mov.b64 	%rd260, {%r8357, %r8356};
	xor.b64  	%rd261, %rd259, %rd260;
	xor.b64  	%rd262, %rd243, %rd195;
	xor.b64  	%rd263, %rd243, %rd219;
	and.b64  	%rd264, %rd263, %rd262;
	xor.b64  	%rd265, %rd264, %rd243;
	add.s64 	%rd266, %rd255, %rd265;
	add.s64 	%rd267, %rd266, %rd261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8358,%dummy}, %rd256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8359}, %rd256;
	}
	shf.r.wrap.b32 	%r8360, %r8359, %r8358, 14;
	shf.r.wrap.b32 	%r8361, %r8358, %r8359, 14;
	mov.b64 	%rd268, {%r8361, %r8360};
	shf.r.wrap.b32 	%r8362, %r8359, %r8358, 18;
	shf.r.wrap.b32 	%r8363, %r8358, %r8359, 18;
	mov.b64 	%rd269, {%r8363, %r8362};
	xor.b64  	%rd270, %rd269, %rd268;
	shf.l.wrap.b32 	%r8364, %r8358, %r8359, 23;
	shf.l.wrap.b32 	%r8365, %r8359, %r8358, 23;
	mov.b64 	%rd271, {%r8365, %r8364};
	xor.b64  	%rd272, %rd270, %rd271;
	xor.b64  	%rd273, %rd232, %rd208;
	and.b64  	%rd274, %rd256, %rd273;
	xor.b64  	%rd275, %rd274, %rd208;
	add.s64 	%rd276, %rd181, %rd152;
	add.s64 	%rd277, %rd276, %rd6;
	add.s64 	%rd278, %rd277, %rd275;
	add.s64 	%rd279, %rd278, %rd272;
	add.s64 	%rd280, %rd279, %rd195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8366,%dummy}, %rd267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8367}, %rd267;
	}
	shf.r.wrap.b32 	%r8368, %r8367, %r8366, 28;
	shf.r.wrap.b32 	%r8369, %r8366, %r8367, 28;
	mov.b64 	%rd281, {%r8369, %r8368};
	shf.l.wrap.b32 	%r8370, %r8366, %r8367, 30;
	shf.l.wrap.b32 	%r8371, %r8367, %r8366, 30;
	mov.b64 	%rd282, {%r8371, %r8370};
	xor.b64  	%rd283, %rd282, %rd281;
	shf.l.wrap.b32 	%r8372, %r8366, %r8367, 25;
	shf.l.wrap.b32 	%r8373, %r8367, %r8366, 25;
	mov.b64 	%rd284, {%r8373, %r8372};
	xor.b64  	%rd285, %rd283, %rd284;
	xor.b64  	%rd286, %rd267, %rd219;
	xor.b64  	%rd287, %rd267, %rd243;
	and.b64  	%rd288, %rd287, %rd286;
	xor.b64  	%rd289, %rd288, %rd267;
	add.s64 	%rd290, %rd279, %rd289;
	add.s64 	%rd291, %rd290, %rd285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8374,%dummy}, %rd280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8375}, %rd280;
	}
	shf.r.wrap.b32 	%r8376, %r8375, %r8374, 14;
	shf.r.wrap.b32 	%r8377, %r8374, %r8375, 14;
	mov.b64 	%rd292, {%r8377, %r8376};
	shf.r.wrap.b32 	%r8378, %r8375, %r8374, 18;
	shf.r.wrap.b32 	%r8379, %r8374, %r8375, 18;
	mov.b64 	%rd293, {%r8379, %r8378};
	xor.b64  	%rd294, %rd293, %rd292;
	shf.l.wrap.b32 	%r8380, %r8374, %r8375, 23;
	shf.l.wrap.b32 	%r8381, %r8375, %r8374, 23;
	mov.b64 	%rd295, {%r8381, %r8380};
	xor.b64  	%rd296, %rd294, %rd295;
	xor.b64  	%rd297, %rd256, %rd232;
	and.b64  	%rd298, %rd280, %rd297;
	xor.b64  	%rd299, %rd298, %rd232;
	add.s64 	%rd300, %rd208, %rd153;
	add.s64 	%rd301, %rd300, %rd7;
	add.s64 	%rd302, %rd301, %rd299;
	add.s64 	%rd303, %rd302, %rd296;
	add.s64 	%rd304, %rd303, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8382,%dummy}, %rd291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8383}, %rd291;
	}
	shf.r.wrap.b32 	%r8384, %r8383, %r8382, 28;
	shf.r.wrap.b32 	%r8385, %r8382, %r8383, 28;
	mov.b64 	%rd305, {%r8385, %r8384};
	shf.l.wrap.b32 	%r8386, %r8382, %r8383, 30;
	shf.l.wrap.b32 	%r8387, %r8383, %r8382, 30;
	mov.b64 	%rd306, {%r8387, %r8386};
	xor.b64  	%rd307, %rd306, %rd305;
	shf.l.wrap.b32 	%r8388, %r8382, %r8383, 25;
	shf.l.wrap.b32 	%r8389, %r8383, %r8382, 25;
	mov.b64 	%rd308, {%r8389, %r8388};
	xor.b64  	%rd309, %rd307, %rd308;
	xor.b64  	%rd310, %rd291, %rd243;
	xor.b64  	%rd311, %rd291, %rd267;
	and.b64  	%rd312, %rd311, %rd310;
	xor.b64  	%rd313, %rd312, %rd291;
	add.s64 	%rd314, %rd303, %rd313;
	add.s64 	%rd315, %rd314, %rd309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8390,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8391}, %rd304;
	}
	shf.r.wrap.b32 	%r8392, %r8391, %r8390, 14;
	shf.r.wrap.b32 	%r8393, %r8390, %r8391, 14;
	mov.b64 	%rd316, {%r8393, %r8392};
	shf.r.wrap.b32 	%r8394, %r8391, %r8390, 18;
	shf.r.wrap.b32 	%r8395, %r8390, %r8391, 18;
	mov.b64 	%rd317, {%r8395, %r8394};
	xor.b64  	%rd318, %rd317, %rd316;
	shf.l.wrap.b32 	%r8396, %r8390, %r8391, 23;
	shf.l.wrap.b32 	%r8397, %r8391, %r8390, 23;
	mov.b64 	%rd319, {%r8397, %r8396};
	xor.b64  	%rd320, %rd318, %rd319;
	xor.b64  	%rd321, %rd280, %rd256;
	and.b64  	%rd322, %rd304, %rd321;
	xor.b64  	%rd323, %rd322, %rd256;
	add.s64 	%rd324, %rd232, %rd154;
	add.s64 	%rd325, %rd324, %rd8;
	add.s64 	%rd326, %rd325, %rd323;
	add.s64 	%rd327, %rd326, %rd320;
	add.s64 	%rd328, %rd327, %rd243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8398,%dummy}, %rd315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8399}, %rd315;
	}
	shf.r.wrap.b32 	%r8400, %r8399, %r8398, 28;
	shf.r.wrap.b32 	%r8401, %r8398, %r8399, 28;
	mov.b64 	%rd329, {%r8401, %r8400};
	shf.l.wrap.b32 	%r8402, %r8398, %r8399, 30;
	shf.l.wrap.b32 	%r8403, %r8399, %r8398, 30;
	mov.b64 	%rd330, {%r8403, %r8402};
	xor.b64  	%rd331, %rd330, %rd329;
	shf.l.wrap.b32 	%r8404, %r8398, %r8399, 25;
	shf.l.wrap.b32 	%r8405, %r8399, %r8398, 25;
	mov.b64 	%rd332, {%r8405, %r8404};
	xor.b64  	%rd333, %rd331, %rd332;
	xor.b64  	%rd334, %rd315, %rd267;
	xor.b64  	%rd335, %rd315, %rd291;
	and.b64  	%rd336, %rd335, %rd334;
	xor.b64  	%rd337, %rd336, %rd315;
	add.s64 	%rd338, %rd327, %rd337;
	add.s64 	%rd339, %rd338, %rd333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8406,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8407}, %rd328;
	}
	shf.r.wrap.b32 	%r8408, %r8407, %r8406, 14;
	shf.r.wrap.b32 	%r8409, %r8406, %r8407, 14;
	mov.b64 	%rd340, {%r8409, %r8408};
	shf.r.wrap.b32 	%r8410, %r8407, %r8406, 18;
	shf.r.wrap.b32 	%r8411, %r8406, %r8407, 18;
	mov.b64 	%rd341, {%r8411, %r8410};
	xor.b64  	%rd342, %rd341, %rd340;
	shf.l.wrap.b32 	%r8412, %r8406, %r8407, 23;
	shf.l.wrap.b32 	%r8413, %r8407, %r8406, 23;
	mov.b64 	%rd343, {%r8413, %r8412};
	xor.b64  	%rd344, %rd342, %rd343;
	xor.b64  	%rd345, %rd304, %rd280;
	and.b64  	%rd346, %rd328, %rd345;
	xor.b64  	%rd347, %rd346, %rd280;
	add.s64 	%rd348, %rd256, %rd155;
	add.s64 	%rd349, %rd348, %rd9;
	add.s64 	%rd350, %rd349, %rd347;
	add.s64 	%rd351, %rd350, %rd344;
	add.s64 	%rd352, %rd351, %rd267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8414,%dummy}, %rd339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8415}, %rd339;
	}
	shf.r.wrap.b32 	%r8416, %r8415, %r8414, 28;
	shf.r.wrap.b32 	%r8417, %r8414, %r8415, 28;
	mov.b64 	%rd353, {%r8417, %r8416};
	shf.l.wrap.b32 	%r8418, %r8414, %r8415, 30;
	shf.l.wrap.b32 	%r8419, %r8415, %r8414, 30;
	mov.b64 	%rd354, {%r8419, %r8418};
	xor.b64  	%rd355, %rd354, %rd353;
	shf.l.wrap.b32 	%r8420, %r8414, %r8415, 25;
	shf.l.wrap.b32 	%r8421, %r8415, %r8414, 25;
	mov.b64 	%rd356, {%r8421, %r8420};
	xor.b64  	%rd357, %rd355, %rd356;
	xor.b64  	%rd358, %rd339, %rd291;
	xor.b64  	%rd359, %rd339, %rd315;
	and.b64  	%rd360, %rd359, %rd358;
	xor.b64  	%rd361, %rd360, %rd339;
	add.s64 	%rd362, %rd351, %rd361;
	add.s64 	%rd363, %rd362, %rd357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8422,%dummy}, %rd352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8423}, %rd352;
	}
	shf.r.wrap.b32 	%r8424, %r8423, %r8422, 14;
	shf.r.wrap.b32 	%r8425, %r8422, %r8423, 14;
	mov.b64 	%rd364, {%r8425, %r8424};
	shf.r.wrap.b32 	%r8426, %r8423, %r8422, 18;
	shf.r.wrap.b32 	%r8427, %r8422, %r8423, 18;
	mov.b64 	%rd365, {%r8427, %r8426};
	xor.b64  	%rd366, %rd365, %rd364;
	shf.l.wrap.b32 	%r8428, %r8422, %r8423, 23;
	shf.l.wrap.b32 	%r8429, %r8423, %r8422, 23;
	mov.b64 	%rd367, {%r8429, %r8428};
	xor.b64  	%rd368, %rd366, %rd367;
	xor.b64  	%rd369, %rd328, %rd304;
	and.b64  	%rd370, %rd352, %rd369;
	xor.b64  	%rd371, %rd370, %rd304;
	add.s64 	%rd372, %rd280, %rd156;
	add.s64 	%rd373, %rd372, %rd10;
	add.s64 	%rd374, %rd373, %rd371;
	add.s64 	%rd375, %rd374, %rd368;
	add.s64 	%rd376, %rd375, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8430,%dummy}, %rd363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8431}, %rd363;
	}
	shf.r.wrap.b32 	%r8432, %r8431, %r8430, 28;
	shf.r.wrap.b32 	%r8433, %r8430, %r8431, 28;
	mov.b64 	%rd377, {%r8433, %r8432};
	shf.l.wrap.b32 	%r8434, %r8430, %r8431, 30;
	shf.l.wrap.b32 	%r8435, %r8431, %r8430, 30;
	mov.b64 	%rd378, {%r8435, %r8434};
	xor.b64  	%rd379, %rd378, %rd377;
	shf.l.wrap.b32 	%r8436, %r8430, %r8431, 25;
	shf.l.wrap.b32 	%r8437, %r8431, %r8430, 25;
	mov.b64 	%rd380, {%r8437, %r8436};
	xor.b64  	%rd381, %rd379, %rd380;
	xor.b64  	%rd382, %rd363, %rd315;
	xor.b64  	%rd383, %rd363, %rd339;
	and.b64  	%rd384, %rd383, %rd382;
	xor.b64  	%rd385, %rd384, %rd363;
	add.s64 	%rd386, %rd375, %rd385;
	add.s64 	%rd387, %rd386, %rd381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8438,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8439}, %rd376;
	}
	shf.r.wrap.b32 	%r8440, %r8439, %r8438, 14;
	shf.r.wrap.b32 	%r8441, %r8438, %r8439, 14;
	mov.b64 	%rd388, {%r8441, %r8440};
	shf.r.wrap.b32 	%r8442, %r8439, %r8438, 18;
	shf.r.wrap.b32 	%r8443, %r8438, %r8439, 18;
	mov.b64 	%rd389, {%r8443, %r8442};
	xor.b64  	%rd390, %rd389, %rd388;
	shf.l.wrap.b32 	%r8444, %r8438, %r8439, 23;
	shf.l.wrap.b32 	%r8445, %r8439, %r8438, 23;
	mov.b64 	%rd391, {%r8445, %r8444};
	xor.b64  	%rd392, %rd390, %rd391;
	xor.b64  	%rd393, %rd352, %rd328;
	and.b64  	%rd394, %rd376, %rd393;
	xor.b64  	%rd395, %rd394, %rd328;
	add.s64 	%rd396, %rd304, %rd157;
	add.s64 	%rd397, %rd396, %rd11;
	add.s64 	%rd398, %rd397, %rd395;
	add.s64 	%rd399, %rd398, %rd392;
	add.s64 	%rd400, %rd399, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8446,%dummy}, %rd387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8447}, %rd387;
	}
	shf.r.wrap.b32 	%r8448, %r8447, %r8446, 28;
	shf.r.wrap.b32 	%r8449, %r8446, %r8447, 28;
	mov.b64 	%rd401, {%r8449, %r8448};
	shf.l.wrap.b32 	%r8450, %r8446, %r8447, 30;
	shf.l.wrap.b32 	%r8451, %r8447, %r8446, 30;
	mov.b64 	%rd402, {%r8451, %r8450};
	xor.b64  	%rd403, %rd402, %rd401;
	shf.l.wrap.b32 	%r8452, %r8446, %r8447, 25;
	shf.l.wrap.b32 	%r8453, %r8447, %r8446, 25;
	mov.b64 	%rd404, {%r8453, %r8452};
	xor.b64  	%rd405, %rd403, %rd404;
	xor.b64  	%rd406, %rd387, %rd339;
	xor.b64  	%rd407, %rd387, %rd363;
	and.b64  	%rd408, %rd407, %rd406;
	xor.b64  	%rd409, %rd408, %rd387;
	add.s64 	%rd410, %rd399, %rd409;
	add.s64 	%rd411, %rd410, %rd405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8454,%dummy}, %rd400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8455}, %rd400;
	}
	shf.r.wrap.b32 	%r8456, %r8455, %r8454, 14;
	shf.r.wrap.b32 	%r8457, %r8454, %r8455, 14;
	mov.b64 	%rd412, {%r8457, %r8456};
	shf.r.wrap.b32 	%r8458, %r8455, %r8454, 18;
	shf.r.wrap.b32 	%r8459, %r8454, %r8455, 18;
	mov.b64 	%rd413, {%r8459, %r8458};
	xor.b64  	%rd414, %rd413, %rd412;
	shf.l.wrap.b32 	%r8460, %r8454, %r8455, 23;
	shf.l.wrap.b32 	%r8461, %r8455, %r8454, 23;
	mov.b64 	%rd415, {%r8461, %r8460};
	xor.b64  	%rd416, %rd414, %rd415;
	xor.b64  	%rd417, %rd376, %rd352;
	and.b64  	%rd418, %rd400, %rd417;
	xor.b64  	%rd419, %rd418, %rd352;
	add.s64 	%rd420, %rd328, %rd158;
	add.s64 	%rd421, %rd420, %rd12;
	add.s64 	%rd422, %rd421, %rd419;
	add.s64 	%rd423, %rd422, %rd416;
	add.s64 	%rd424, %rd423, %rd339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8462,%dummy}, %rd411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8463}, %rd411;
	}
	shf.r.wrap.b32 	%r8464, %r8463, %r8462, 28;
	shf.r.wrap.b32 	%r8465, %r8462, %r8463, 28;
	mov.b64 	%rd425, {%r8465, %r8464};
	shf.l.wrap.b32 	%r8466, %r8462, %r8463, 30;
	shf.l.wrap.b32 	%r8467, %r8463, %r8462, 30;
	mov.b64 	%rd426, {%r8467, %r8466};
	xor.b64  	%rd427, %rd426, %rd425;
	shf.l.wrap.b32 	%r8468, %r8462, %r8463, 25;
	shf.l.wrap.b32 	%r8469, %r8463, %r8462, 25;
	mov.b64 	%rd428, {%r8469, %r8468};
	xor.b64  	%rd429, %rd427, %rd428;
	xor.b64  	%rd430, %rd411, %rd363;
	xor.b64  	%rd431, %rd411, %rd387;
	and.b64  	%rd432, %rd431, %rd430;
	xor.b64  	%rd433, %rd432, %rd411;
	add.s64 	%rd434, %rd423, %rd433;
	add.s64 	%rd435, %rd434, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8470,%dummy}, %rd424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8471}, %rd424;
	}
	shf.r.wrap.b32 	%r8472, %r8471, %r8470, 14;
	shf.r.wrap.b32 	%r8473, %r8470, %r8471, 14;
	mov.b64 	%rd436, {%r8473, %r8472};
	shf.r.wrap.b32 	%r8474, %r8471, %r8470, 18;
	shf.r.wrap.b32 	%r8475, %r8470, %r8471, 18;
	mov.b64 	%rd437, {%r8475, %r8474};
	xor.b64  	%rd438, %rd437, %rd436;
	shf.l.wrap.b32 	%r8476, %r8470, %r8471, 23;
	shf.l.wrap.b32 	%r8477, %r8471, %r8470, 23;
	mov.b64 	%rd439, {%r8477, %r8476};
	xor.b64  	%rd440, %rd438, %rd439;
	xor.b64  	%rd441, %rd400, %rd376;
	and.b64  	%rd442, %rd424, %rd441;
	xor.b64  	%rd443, %rd442, %rd376;
	add.s64 	%rd444, %rd352, %rd159;
	add.s64 	%rd445, %rd444, %rd13;
	add.s64 	%rd446, %rd445, %rd443;
	add.s64 	%rd447, %rd446, %rd440;
	add.s64 	%rd448, %rd447, %rd363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8478,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8479}, %rd435;
	}
	shf.r.wrap.b32 	%r8480, %r8479, %r8478, 28;
	shf.r.wrap.b32 	%r8481, %r8478, %r8479, 28;
	mov.b64 	%rd449, {%r8481, %r8480};
	shf.l.wrap.b32 	%r8482, %r8478, %r8479, 30;
	shf.l.wrap.b32 	%r8483, %r8479, %r8478, 30;
	mov.b64 	%rd450, {%r8483, %r8482};
	xor.b64  	%rd451, %rd450, %rd449;
	shf.l.wrap.b32 	%r8484, %r8478, %r8479, 25;
	shf.l.wrap.b32 	%r8485, %r8479, %r8478, 25;
	mov.b64 	%rd452, {%r8485, %r8484};
	xor.b64  	%rd453, %rd451, %rd452;
	xor.b64  	%rd454, %rd435, %rd387;
	xor.b64  	%rd455, %rd435, %rd411;
	and.b64  	%rd456, %rd455, %rd454;
	xor.b64  	%rd457, %rd456, %rd435;
	add.s64 	%rd458, %rd447, %rd457;
	add.s64 	%rd459, %rd458, %rd453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8486,%dummy}, %rd448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8487}, %rd448;
	}
	shf.r.wrap.b32 	%r8488, %r8487, %r8486, 14;
	shf.r.wrap.b32 	%r8489, %r8486, %r8487, 14;
	mov.b64 	%rd460, {%r8489, %r8488};
	shf.r.wrap.b32 	%r8490, %r8487, %r8486, 18;
	shf.r.wrap.b32 	%r8491, %r8486, %r8487, 18;
	mov.b64 	%rd461, {%r8491, %r8490};
	xor.b64  	%rd462, %rd461, %rd460;
	shf.l.wrap.b32 	%r8492, %r8486, %r8487, 23;
	shf.l.wrap.b32 	%r8493, %r8487, %r8486, 23;
	mov.b64 	%rd463, {%r8493, %r8492};
	xor.b64  	%rd464, %rd462, %rd463;
	xor.b64  	%rd465, %rd424, %rd400;
	and.b64  	%rd466, %rd448, %rd465;
	xor.b64  	%rd467, %rd466, %rd400;
	add.s64 	%rd468, %rd376, %rd160;
	add.s64 	%rd469, %rd468, %rd14;
	add.s64 	%rd470, %rd469, %rd467;
	add.s64 	%rd471, %rd470, %rd464;
	add.s64 	%rd472, %rd471, %rd387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8494,%dummy}, %rd459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8495}, %rd459;
	}
	shf.r.wrap.b32 	%r8496, %r8495, %r8494, 28;
	shf.r.wrap.b32 	%r8497, %r8494, %r8495, 28;
	mov.b64 	%rd473, {%r8497, %r8496};
	shf.l.wrap.b32 	%r8498, %r8494, %r8495, 30;
	shf.l.wrap.b32 	%r8499, %r8495, %r8494, 30;
	mov.b64 	%rd474, {%r8499, %r8498};
	xor.b64  	%rd475, %rd474, %rd473;
	shf.l.wrap.b32 	%r8500, %r8494, %r8495, 25;
	shf.l.wrap.b32 	%r8501, %r8495, %r8494, 25;
	mov.b64 	%rd476, {%r8501, %r8500};
	xor.b64  	%rd477, %rd475, %rd476;
	xor.b64  	%rd478, %rd459, %rd411;
	xor.b64  	%rd479, %rd459, %rd435;
	and.b64  	%rd480, %rd479, %rd478;
	xor.b64  	%rd481, %rd480, %rd459;
	add.s64 	%rd482, %rd471, %rd481;
	add.s64 	%rd483, %rd482, %rd477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8502,%dummy}, %rd472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8503}, %rd472;
	}
	shf.r.wrap.b32 	%r8504, %r8503, %r8502, 14;
	shf.r.wrap.b32 	%r8505, %r8502, %r8503, 14;
	mov.b64 	%rd484, {%r8505, %r8504};
	shf.r.wrap.b32 	%r8506, %r8503, %r8502, 18;
	shf.r.wrap.b32 	%r8507, %r8502, %r8503, 18;
	mov.b64 	%rd485, {%r8507, %r8506};
	xor.b64  	%rd486, %rd485, %rd484;
	shf.l.wrap.b32 	%r8508, %r8502, %r8503, 23;
	shf.l.wrap.b32 	%r8509, %r8503, %r8502, 23;
	mov.b64 	%rd487, {%r8509, %r8508};
	xor.b64  	%rd488, %rd486, %rd487;
	xor.b64  	%rd489, %rd448, %rd424;
	and.b64  	%rd490, %rd472, %rd489;
	xor.b64  	%rd491, %rd490, %rd424;
	add.s64 	%rd492, %rd400, %rd161;
	add.s64 	%rd493, %rd492, %rd15;
	add.s64 	%rd494, %rd493, %rd491;
	add.s64 	%rd495, %rd494, %rd488;
	add.s64 	%rd496, %rd495, %rd411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8510,%dummy}, %rd483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8511}, %rd483;
	}
	shf.r.wrap.b32 	%r8512, %r8511, %r8510, 28;
	shf.r.wrap.b32 	%r8513, %r8510, %r8511, 28;
	mov.b64 	%rd497, {%r8513, %r8512};
	shf.l.wrap.b32 	%r8514, %r8510, %r8511, 30;
	shf.l.wrap.b32 	%r8515, %r8511, %r8510, 30;
	mov.b64 	%rd498, {%r8515, %r8514};
	xor.b64  	%rd499, %rd498, %rd497;
	shf.l.wrap.b32 	%r8516, %r8510, %r8511, 25;
	shf.l.wrap.b32 	%r8517, %r8511, %r8510, 25;
	mov.b64 	%rd500, {%r8517, %r8516};
	xor.b64  	%rd501, %rd499, %rd500;
	xor.b64  	%rd502, %rd483, %rd435;
	xor.b64  	%rd503, %rd483, %rd459;
	and.b64  	%rd504, %rd503, %rd502;
	xor.b64  	%rd505, %rd504, %rd483;
	add.s64 	%rd506, %rd495, %rd505;
	add.s64 	%rd507, %rd506, %rd501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8518,%dummy}, %rd496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8519}, %rd496;
	}
	shf.r.wrap.b32 	%r8520, %r8519, %r8518, 14;
	shf.r.wrap.b32 	%r8521, %r8518, %r8519, 14;
	mov.b64 	%rd508, {%r8521, %r8520};
	shf.r.wrap.b32 	%r8522, %r8519, %r8518, 18;
	shf.r.wrap.b32 	%r8523, %r8518, %r8519, 18;
	mov.b64 	%rd509, {%r8523, %r8522};
	xor.b64  	%rd510, %rd509, %rd508;
	shf.l.wrap.b32 	%r8524, %r8518, %r8519, 23;
	shf.l.wrap.b32 	%r8525, %r8519, %r8518, 23;
	mov.b64 	%rd511, {%r8525, %r8524};
	xor.b64  	%rd512, %rd510, %rd511;
	xor.b64  	%rd513, %rd472, %rd448;
	and.b64  	%rd514, %rd496, %rd513;
	xor.b64  	%rd515, %rd514, %rd448;
	add.s64 	%rd516, %rd424, %rd162;
	add.s64 	%rd517, %rd516, %rd16;
	add.s64 	%rd518, %rd517, %rd515;
	add.s64 	%rd519, %rd518, %rd512;
	add.s64 	%rd520, %rd519, %rd435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8526,%dummy}, %rd507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8527}, %rd507;
	}
	shf.r.wrap.b32 	%r8528, %r8527, %r8526, 28;
	shf.r.wrap.b32 	%r8529, %r8526, %r8527, 28;
	mov.b64 	%rd521, {%r8529, %r8528};
	shf.l.wrap.b32 	%r8530, %r8526, %r8527, 30;
	shf.l.wrap.b32 	%r8531, %r8527, %r8526, 30;
	mov.b64 	%rd522, {%r8531, %r8530};
	xor.b64  	%rd523, %rd522, %rd521;
	shf.l.wrap.b32 	%r8532, %r8526, %r8527, 25;
	shf.l.wrap.b32 	%r8533, %r8527, %r8526, 25;
	mov.b64 	%rd524, {%r8533, %r8532};
	xor.b64  	%rd525, %rd523, %rd524;
	xor.b64  	%rd526, %rd507, %rd459;
	xor.b64  	%rd527, %rd507, %rd483;
	and.b64  	%rd528, %rd527, %rd526;
	xor.b64  	%rd529, %rd528, %rd507;
	add.s64 	%rd530, %rd519, %rd529;
	add.s64 	%rd531, %rd530, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8534,%dummy}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8535}, %rd520;
	}
	shf.r.wrap.b32 	%r8536, %r8535, %r8534, 14;
	shf.r.wrap.b32 	%r8537, %r8534, %r8535, 14;
	mov.b64 	%rd532, {%r8537, %r8536};
	shf.r.wrap.b32 	%r8538, %r8535, %r8534, 18;
	shf.r.wrap.b32 	%r8539, %r8534, %r8535, 18;
	mov.b64 	%rd533, {%r8539, %r8538};
	xor.b64  	%rd534, %rd533, %rd532;
	shf.l.wrap.b32 	%r8540, %r8534, %r8535, 23;
	shf.l.wrap.b32 	%r8541, %r8535, %r8534, 23;
	mov.b64 	%rd535, {%r8541, %r8540};
	xor.b64  	%rd536, %rd534, %rd535;
	xor.b64  	%rd537, %rd496, %rd472;
	and.b64  	%rd538, %rd520, %rd537;
	xor.b64  	%rd539, %rd538, %rd472;
	add.s64 	%rd540, %rd448, %rd163;
	add.s64 	%rd541, %rd540, %rd17;
	add.s64 	%rd542, %rd541, %rd539;
	add.s64 	%rd543, %rd542, %rd536;
	add.s64 	%rd544, %rd543, %rd459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8542,%dummy}, %rd531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8543}, %rd531;
	}
	shf.r.wrap.b32 	%r8544, %r8543, %r8542, 28;
	shf.r.wrap.b32 	%r8545, %r8542, %r8543, 28;
	mov.b64 	%rd545, {%r8545, %r8544};
	shf.l.wrap.b32 	%r8546, %r8542, %r8543, 30;
	shf.l.wrap.b32 	%r8547, %r8543, %r8542, 30;
	mov.b64 	%rd546, {%r8547, %r8546};
	xor.b64  	%rd547, %rd546, %rd545;
	shf.l.wrap.b32 	%r8548, %r8542, %r8543, 25;
	shf.l.wrap.b32 	%r8549, %r8543, %r8542, 25;
	mov.b64 	%rd548, {%r8549, %r8548};
	xor.b64  	%rd549, %rd547, %rd548;
	xor.b64  	%rd550, %rd531, %rd483;
	xor.b64  	%rd551, %rd531, %rd507;
	and.b64  	%rd552, %rd551, %rd550;
	xor.b64  	%rd553, %rd552, %rd531;
	add.s64 	%rd554, %rd543, %rd553;
	add.s64 	%rd555, %rd554, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8550,%dummy}, %rd162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8551}, %rd162;
	}
	shf.r.wrap.b32 	%r8552, %r8551, %r8550, 19;
	shf.r.wrap.b32 	%r8553, %r8550, %r8551, 19;
	mov.b64 	%rd556, {%r8553, %r8552};
	shf.l.wrap.b32 	%r8554, %r8550, %r8551, 3;
	shf.l.wrap.b32 	%r8555, %r8551, %r8550, 3;
	mov.b64 	%rd557, {%r8555, %r8554};
	shr.u64 	%rd558, %rd162, 6;
	xor.b64  	%rd559, %rd556, %rd558;
	xor.b64  	%rd560, %rd559, %rd557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8556,%dummy}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8557}, %rd149;
	}
	shf.r.wrap.b32 	%r8558, %r8557, %r8556, 1;
	shf.r.wrap.b32 	%r8559, %r8556, %r8557, 1;
	mov.b64 	%rd561, {%r8559, %r8558};
	shf.r.wrap.b32 	%r8560, %r8557, %r8556, 8;
	shf.r.wrap.b32 	%r8561, %r8556, %r8557, 8;
	mov.b64 	%rd562, {%r8561, %r8560};
	shr.u64 	%rd563, %rd149, 7;
	xor.b64  	%rd564, %rd561, %rd563;
	xor.b64  	%rd565, %rd564, %rd562;
	add.s64 	%rd566, %rd157, %rd148;
	add.s64 	%rd567, %rd566, %rd560;
	add.s64 	%rd568, %rd567, %rd565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8562,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8563}, %rd163;
	}
	shf.r.wrap.b32 	%r8564, %r8563, %r8562, 19;
	shf.r.wrap.b32 	%r8565, %r8562, %r8563, 19;
	mov.b64 	%rd569, {%r8565, %r8564};
	shf.l.wrap.b32 	%r8566, %r8562, %r8563, 3;
	shf.l.wrap.b32 	%r8567, %r8563, %r8562, 3;
	mov.b64 	%rd570, {%r8567, %r8566};
	shr.u64 	%rd571, %rd163, 6;
	xor.b64  	%rd572, %rd569, %rd571;
	xor.b64  	%rd573, %rd572, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8568,%dummy}, %rd150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8569}, %rd150;
	}
	shf.r.wrap.b32 	%r8570, %r8569, %r8568, 1;
	shf.r.wrap.b32 	%r8571, %r8568, %r8569, 1;
	mov.b64 	%rd574, {%r8571, %r8570};
	shf.r.wrap.b32 	%r8572, %r8569, %r8568, 8;
	shf.r.wrap.b32 	%r8573, %r8568, %r8569, 8;
	mov.b64 	%rd575, {%r8573, %r8572};
	shr.u64 	%rd576, %rd150, 7;
	xor.b64  	%rd577, %rd574, %rd576;
	xor.b64  	%rd578, %rd577, %rd575;
	add.s64 	%rd579, %rd158, %rd149;
	add.s64 	%rd580, %rd579, %rd573;
	add.s64 	%rd581, %rd580, %rd578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8574,%dummy}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8575}, %rd568;
	}
	shf.r.wrap.b32 	%r8576, %r8575, %r8574, 19;
	shf.r.wrap.b32 	%r8577, %r8574, %r8575, 19;
	mov.b64 	%rd582, {%r8577, %r8576};
	shf.l.wrap.b32 	%r8578, %r8574, %r8575, 3;
	shf.l.wrap.b32 	%r8579, %r8575, %r8574, 3;
	mov.b64 	%rd583, {%r8579, %r8578};
	shr.u64 	%rd584, %rd568, 6;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8580,%dummy}, %rd151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8581}, %rd151;
	}
	shf.r.wrap.b32 	%r8582, %r8581, %r8580, 1;
	shf.r.wrap.b32 	%r8583, %r8580, %r8581, 1;
	mov.b64 	%rd587, {%r8583, %r8582};
	shf.r.wrap.b32 	%r8584, %r8581, %r8580, 8;
	shf.r.wrap.b32 	%r8585, %r8580, %r8581, 8;
	mov.b64 	%rd588, {%r8585, %r8584};
	shr.u64 	%rd589, %rd151, 7;
	xor.b64  	%rd590, %rd587, %rd589;
	xor.b64  	%rd591, %rd590, %rd588;
	add.s64 	%rd592, %rd159, %rd150;
	add.s64 	%rd593, %rd592, %rd586;
	add.s64 	%rd594, %rd593, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8586,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8587}, %rd581;
	}
	shf.r.wrap.b32 	%r8588, %r8587, %r8586, 19;
	shf.r.wrap.b32 	%r8589, %r8586, %r8587, 19;
	mov.b64 	%rd595, {%r8589, %r8588};
	shf.l.wrap.b32 	%r8590, %r8586, %r8587, 3;
	shf.l.wrap.b32 	%r8591, %r8587, %r8586, 3;
	mov.b64 	%rd596, {%r8591, %r8590};
	shr.u64 	%rd597, %rd581, 6;
	xor.b64  	%rd598, %rd595, %rd597;
	xor.b64  	%rd599, %rd598, %rd596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8592,%dummy}, %rd152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8593}, %rd152;
	}
	shf.r.wrap.b32 	%r8594, %r8593, %r8592, 1;
	shf.r.wrap.b32 	%r8595, %r8592, %r8593, 1;
	mov.b64 	%rd600, {%r8595, %r8594};
	shf.r.wrap.b32 	%r8596, %r8593, %r8592, 8;
	shf.r.wrap.b32 	%r8597, %r8592, %r8593, 8;
	mov.b64 	%rd601, {%r8597, %r8596};
	shr.u64 	%rd602, %rd152, 7;
	xor.b64  	%rd603, %rd600, %rd602;
	xor.b64  	%rd604, %rd603, %rd601;
	add.s64 	%rd605, %rd160, %rd151;
	add.s64 	%rd606, %rd605, %rd599;
	add.s64 	%rd607, %rd606, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8598,%dummy}, %rd594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8599}, %rd594;
	}
	shf.r.wrap.b32 	%r8600, %r8599, %r8598, 19;
	shf.r.wrap.b32 	%r8601, %r8598, %r8599, 19;
	mov.b64 	%rd608, {%r8601, %r8600};
	shf.l.wrap.b32 	%r8602, %r8598, %r8599, 3;
	shf.l.wrap.b32 	%r8603, %r8599, %r8598, 3;
	mov.b64 	%rd609, {%r8603, %r8602};
	shr.u64 	%rd610, %rd594, 6;
	xor.b64  	%rd611, %rd608, %rd610;
	xor.b64  	%rd612, %rd611, %rd609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8604,%dummy}, %rd153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8605}, %rd153;
	}
	shf.r.wrap.b32 	%r8606, %r8605, %r8604, 1;
	shf.r.wrap.b32 	%r8607, %r8604, %r8605, 1;
	mov.b64 	%rd613, {%r8607, %r8606};
	shf.r.wrap.b32 	%r8608, %r8605, %r8604, 8;
	shf.r.wrap.b32 	%r8609, %r8604, %r8605, 8;
	mov.b64 	%rd614, {%r8609, %r8608};
	shr.u64 	%rd615, %rd153, 7;
	xor.b64  	%rd616, %rd613, %rd615;
	xor.b64  	%rd617, %rd616, %rd614;
	add.s64 	%rd618, %rd161, %rd152;
	add.s64 	%rd619, %rd618, %rd612;
	add.s64 	%rd620, %rd619, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8610,%dummy}, %rd607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8611}, %rd607;
	}
	shf.r.wrap.b32 	%r8612, %r8611, %r8610, 19;
	shf.r.wrap.b32 	%r8613, %r8610, %r8611, 19;
	mov.b64 	%rd621, {%r8613, %r8612};
	shf.l.wrap.b32 	%r8614, %r8610, %r8611, 3;
	shf.l.wrap.b32 	%r8615, %r8611, %r8610, 3;
	mov.b64 	%rd622, {%r8615, %r8614};
	shr.u64 	%rd623, %rd607, 6;
	xor.b64  	%rd624, %rd621, %rd623;
	xor.b64  	%rd625, %rd624, %rd622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8616,%dummy}, %rd154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8617}, %rd154;
	}
	shf.r.wrap.b32 	%r8618, %r8617, %r8616, 1;
	shf.r.wrap.b32 	%r8619, %r8616, %r8617, 1;
	mov.b64 	%rd626, {%r8619, %r8618};
	shf.r.wrap.b32 	%r8620, %r8617, %r8616, 8;
	shf.r.wrap.b32 	%r8621, %r8616, %r8617, 8;
	mov.b64 	%rd627, {%r8621, %r8620};
	shr.u64 	%rd628, %rd154, 7;
	xor.b64  	%rd629, %rd626, %rd628;
	xor.b64  	%rd630, %rd629, %rd627;
	add.s64 	%rd631, %rd162, %rd153;
	add.s64 	%rd632, %rd631, %rd625;
	add.s64 	%rd633, %rd632, %rd630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8622,%dummy}, %rd620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8623}, %rd620;
	}
	shf.r.wrap.b32 	%r8624, %r8623, %r8622, 19;
	shf.r.wrap.b32 	%r8625, %r8622, %r8623, 19;
	mov.b64 	%rd634, {%r8625, %r8624};
	shf.l.wrap.b32 	%r8626, %r8622, %r8623, 3;
	shf.l.wrap.b32 	%r8627, %r8623, %r8622, 3;
	mov.b64 	%rd635, {%r8627, %r8626};
	shr.u64 	%rd636, %rd620, 6;
	xor.b64  	%rd637, %rd634, %rd636;
	xor.b64  	%rd638, %rd637, %rd635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8628,%dummy}, %rd155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8629}, %rd155;
	}
	shf.r.wrap.b32 	%r8630, %r8629, %r8628, 1;
	shf.r.wrap.b32 	%r8631, %r8628, %r8629, 1;
	mov.b64 	%rd639, {%r8631, %r8630};
	shf.r.wrap.b32 	%r8632, %r8629, %r8628, 8;
	shf.r.wrap.b32 	%r8633, %r8628, %r8629, 8;
	mov.b64 	%rd640, {%r8633, %r8632};
	shr.u64 	%rd641, %rd155, 7;
	xor.b64  	%rd642, %rd639, %rd641;
	xor.b64  	%rd643, %rd642, %rd640;
	add.s64 	%rd644, %rd163, %rd154;
	add.s64 	%rd645, %rd644, %rd638;
	add.s64 	%rd646, %rd645, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8634,%dummy}, %rd633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8635}, %rd633;
	}
	shf.r.wrap.b32 	%r8636, %r8635, %r8634, 19;
	shf.r.wrap.b32 	%r8637, %r8634, %r8635, 19;
	mov.b64 	%rd647, {%r8637, %r8636};
	shf.l.wrap.b32 	%r8638, %r8634, %r8635, 3;
	shf.l.wrap.b32 	%r8639, %r8635, %r8634, 3;
	mov.b64 	%rd648, {%r8639, %r8638};
	shr.u64 	%rd649, %rd633, 6;
	xor.b64  	%rd650, %rd647, %rd649;
	xor.b64  	%rd651, %rd650, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8640,%dummy}, %rd156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8641}, %rd156;
	}
	shf.r.wrap.b32 	%r8642, %r8641, %r8640, 1;
	shf.r.wrap.b32 	%r8643, %r8640, %r8641, 1;
	mov.b64 	%rd652, {%r8643, %r8642};
	shf.r.wrap.b32 	%r8644, %r8641, %r8640, 8;
	shf.r.wrap.b32 	%r8645, %r8640, %r8641, 8;
	mov.b64 	%rd653, {%r8645, %r8644};
	shr.u64 	%rd654, %rd156, 7;
	xor.b64  	%rd655, %rd652, %rd654;
	xor.b64  	%rd656, %rd655, %rd653;
	add.s64 	%rd657, %rd568, %rd155;
	add.s64 	%rd658, %rd657, %rd651;
	add.s64 	%rd659, %rd658, %rd656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8646,%dummy}, %rd646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8647}, %rd646;
	}
	shf.r.wrap.b32 	%r8648, %r8647, %r8646, 19;
	shf.r.wrap.b32 	%r8649, %r8646, %r8647, 19;
	mov.b64 	%rd660, {%r8649, %r8648};
	shf.l.wrap.b32 	%r8650, %r8646, %r8647, 3;
	shf.l.wrap.b32 	%r8651, %r8647, %r8646, 3;
	mov.b64 	%rd661, {%r8651, %r8650};
	shr.u64 	%rd662, %rd646, 6;
	xor.b64  	%rd663, %rd660, %rd662;
	xor.b64  	%rd664, %rd663, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8652,%dummy}, %rd157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8653}, %rd157;
	}
	shf.r.wrap.b32 	%r8654, %r8653, %r8652, 1;
	shf.r.wrap.b32 	%r8655, %r8652, %r8653, 1;
	mov.b64 	%rd665, {%r8655, %r8654};
	shf.r.wrap.b32 	%r8656, %r8653, %r8652, 8;
	shf.r.wrap.b32 	%r8657, %r8652, %r8653, 8;
	mov.b64 	%rd666, {%r8657, %r8656};
	shr.u64 	%rd667, %rd157, 7;
	xor.b64  	%rd668, %rd665, %rd667;
	xor.b64  	%rd669, %rd668, %rd666;
	add.s64 	%rd670, %rd581, %rd156;
	add.s64 	%rd671, %rd670, %rd664;
	add.s64 	%rd672, %rd671, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8658,%dummy}, %rd659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8659}, %rd659;
	}
	shf.r.wrap.b32 	%r8660, %r8659, %r8658, 19;
	shf.r.wrap.b32 	%r8661, %r8658, %r8659, 19;
	mov.b64 	%rd673, {%r8661, %r8660};
	shf.l.wrap.b32 	%r8662, %r8658, %r8659, 3;
	shf.l.wrap.b32 	%r8663, %r8659, %r8658, 3;
	mov.b64 	%rd674, {%r8663, %r8662};
	shr.u64 	%rd675, %rd659, 6;
	xor.b64  	%rd676, %rd673, %rd675;
	xor.b64  	%rd677, %rd676, %rd674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8664,%dummy}, %rd158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8665}, %rd158;
	}
	shf.r.wrap.b32 	%r8666, %r8665, %r8664, 1;
	shf.r.wrap.b32 	%r8667, %r8664, %r8665, 1;
	mov.b64 	%rd678, {%r8667, %r8666};
	shf.r.wrap.b32 	%r8668, %r8665, %r8664, 8;
	shf.r.wrap.b32 	%r8669, %r8664, %r8665, 8;
	mov.b64 	%rd679, {%r8669, %r8668};
	shr.u64 	%rd680, %rd158, 7;
	xor.b64  	%rd681, %rd678, %rd680;
	xor.b64  	%rd682, %rd681, %rd679;
	add.s64 	%rd683, %rd594, %rd157;
	add.s64 	%rd684, %rd683, %rd677;
	add.s64 	%rd685, %rd684, %rd682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8670,%dummy}, %rd672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8671}, %rd672;
	}
	shf.r.wrap.b32 	%r8672, %r8671, %r8670, 19;
	shf.r.wrap.b32 	%r8673, %r8670, %r8671, 19;
	mov.b64 	%rd686, {%r8673, %r8672};
	shf.l.wrap.b32 	%r8674, %r8670, %r8671, 3;
	shf.l.wrap.b32 	%r8675, %r8671, %r8670, 3;
	mov.b64 	%rd687, {%r8675, %r8674};
	shr.u64 	%rd688, %rd672, 6;
	xor.b64  	%rd689, %rd686, %rd688;
	xor.b64  	%rd690, %rd689, %rd687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8676,%dummy}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8677}, %rd159;
	}
	shf.r.wrap.b32 	%r8678, %r8677, %r8676, 1;
	shf.r.wrap.b32 	%r8679, %r8676, %r8677, 1;
	mov.b64 	%rd691, {%r8679, %r8678};
	shf.r.wrap.b32 	%r8680, %r8677, %r8676, 8;
	shf.r.wrap.b32 	%r8681, %r8676, %r8677, 8;
	mov.b64 	%rd692, {%r8681, %r8680};
	shr.u64 	%rd693, %rd159, 7;
	xor.b64  	%rd694, %rd691, %rd693;
	xor.b64  	%rd695, %rd694, %rd692;
	add.s64 	%rd696, %rd607, %rd158;
	add.s64 	%rd697, %rd696, %rd690;
	add.s64 	%rd698, %rd697, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8682,%dummy}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8683}, %rd685;
	}
	shf.r.wrap.b32 	%r8684, %r8683, %r8682, 19;
	shf.r.wrap.b32 	%r8685, %r8682, %r8683, 19;
	mov.b64 	%rd699, {%r8685, %r8684};
	shf.l.wrap.b32 	%r8686, %r8682, %r8683, 3;
	shf.l.wrap.b32 	%r8687, %r8683, %r8682, 3;
	mov.b64 	%rd700, {%r8687, %r8686};
	shr.u64 	%rd701, %rd685, 6;
	xor.b64  	%rd702, %rd699, %rd701;
	xor.b64  	%rd703, %rd702, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8688,%dummy}, %rd160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8689}, %rd160;
	}
	shf.r.wrap.b32 	%r8690, %r8689, %r8688, 1;
	shf.r.wrap.b32 	%r8691, %r8688, %r8689, 1;
	mov.b64 	%rd704, {%r8691, %r8690};
	shf.r.wrap.b32 	%r8692, %r8689, %r8688, 8;
	shf.r.wrap.b32 	%r8693, %r8688, %r8689, 8;
	mov.b64 	%rd705, {%r8693, %r8692};
	shr.u64 	%rd706, %rd160, 7;
	xor.b64  	%rd707, %rd704, %rd706;
	xor.b64  	%rd708, %rd707, %rd705;
	add.s64 	%rd709, %rd620, %rd159;
	add.s64 	%rd710, %rd709, %rd703;
	add.s64 	%rd711, %rd710, %rd708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8694,%dummy}, %rd698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8695}, %rd698;
	}
	shf.r.wrap.b32 	%r8696, %r8695, %r8694, 19;
	shf.r.wrap.b32 	%r8697, %r8694, %r8695, 19;
	mov.b64 	%rd712, {%r8697, %r8696};
	shf.l.wrap.b32 	%r8698, %r8694, %r8695, 3;
	shf.l.wrap.b32 	%r8699, %r8695, %r8694, 3;
	mov.b64 	%rd713, {%r8699, %r8698};
	shr.u64 	%rd714, %rd698, 6;
	xor.b64  	%rd715, %rd712, %rd714;
	xor.b64  	%rd716, %rd715, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8700,%dummy}, %rd161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8701}, %rd161;
	}
	shf.r.wrap.b32 	%r8702, %r8701, %r8700, 1;
	shf.r.wrap.b32 	%r8703, %r8700, %r8701, 1;
	mov.b64 	%rd717, {%r8703, %r8702};
	shf.r.wrap.b32 	%r8704, %r8701, %r8700, 8;
	shf.r.wrap.b32 	%r8705, %r8700, %r8701, 8;
	mov.b64 	%rd718, {%r8705, %r8704};
	shr.u64 	%rd719, %rd161, 7;
	xor.b64  	%rd720, %rd717, %rd719;
	xor.b64  	%rd721, %rd720, %rd718;
	add.s64 	%rd722, %rd633, %rd160;
	add.s64 	%rd723, %rd722, %rd716;
	add.s64 	%rd724, %rd723, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8706,%dummy}, %rd711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8707}, %rd711;
	}
	shf.r.wrap.b32 	%r8708, %r8707, %r8706, 19;
	shf.r.wrap.b32 	%r8709, %r8706, %r8707, 19;
	mov.b64 	%rd725, {%r8709, %r8708};
	shf.l.wrap.b32 	%r8710, %r8706, %r8707, 3;
	shf.l.wrap.b32 	%r8711, %r8707, %r8706, 3;
	mov.b64 	%rd726, {%r8711, %r8710};
	shr.u64 	%rd727, %rd711, 6;
	xor.b64  	%rd728, %rd725, %rd727;
	xor.b64  	%rd729, %rd728, %rd726;
	shf.r.wrap.b32 	%r8712, %r8551, %r8550, 1;
	shf.r.wrap.b32 	%r8713, %r8550, %r8551, 1;
	mov.b64 	%rd730, {%r8713, %r8712};
	shf.r.wrap.b32 	%r8714, %r8551, %r8550, 8;
	shf.r.wrap.b32 	%r8715, %r8550, %r8551, 8;
	mov.b64 	%rd731, {%r8715, %r8714};
	shr.u64 	%rd732, %rd162, 7;
	xor.b64  	%rd733, %rd730, %rd732;
	xor.b64  	%rd734, %rd733, %rd731;
	add.s64 	%rd735, %rd646, %rd161;
	add.s64 	%rd736, %rd735, %rd729;
	add.s64 	%rd737, %rd736, %rd734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8716,%dummy}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8717}, %rd724;
	}
	shf.r.wrap.b32 	%r8718, %r8717, %r8716, 19;
	shf.r.wrap.b32 	%r8719, %r8716, %r8717, 19;
	mov.b64 	%rd738, {%r8719, %r8718};
	shf.l.wrap.b32 	%r8720, %r8716, %r8717, 3;
	shf.l.wrap.b32 	%r8721, %r8717, %r8716, 3;
	mov.b64 	%rd739, {%r8721, %r8720};
	shr.u64 	%rd740, %rd724, 6;
	xor.b64  	%rd741, %rd738, %rd740;
	xor.b64  	%rd742, %rd741, %rd739;
	shf.r.wrap.b32 	%r8722, %r8563, %r8562, 1;
	shf.r.wrap.b32 	%r8723, %r8562, %r8563, 1;
	mov.b64 	%rd743, {%r8723, %r8722};
	shf.r.wrap.b32 	%r8724, %r8563, %r8562, 8;
	shf.r.wrap.b32 	%r8725, %r8562, %r8563, 8;
	mov.b64 	%rd744, {%r8725, %r8724};
	shr.u64 	%rd745, %rd163, 7;
	xor.b64  	%rd746, %rd743, %rd745;
	xor.b64  	%rd747, %rd746, %rd744;
	add.s64 	%rd748, %rd659, %rd162;
	add.s64 	%rd749, %rd748, %rd742;
	add.s64 	%rd750, %rd749, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8726,%dummy}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8727}, %rd737;
	}
	shf.r.wrap.b32 	%r8728, %r8727, %r8726, 19;
	shf.r.wrap.b32 	%r8729, %r8726, %r8727, 19;
	mov.b64 	%rd751, {%r8729, %r8728};
	shf.l.wrap.b32 	%r8730, %r8726, %r8727, 3;
	shf.l.wrap.b32 	%r8731, %r8727, %r8726, 3;
	mov.b64 	%rd752, {%r8731, %r8730};
	shr.u64 	%rd753, %rd737, 6;
	xor.b64  	%rd754, %rd751, %rd753;
	xor.b64  	%rd755, %rd754, %rd752;
	shf.r.wrap.b32 	%r8732, %r8575, %r8574, 1;
	shf.r.wrap.b32 	%r8733, %r8574, %r8575, 1;
	mov.b64 	%rd756, {%r8733, %r8732};
	shf.r.wrap.b32 	%r8734, %r8575, %r8574, 8;
	shf.r.wrap.b32 	%r8735, %r8574, %r8575, 8;
	mov.b64 	%rd757, {%r8735, %r8734};
	shr.u64 	%rd758, %rd568, 7;
	xor.b64  	%rd759, %rd756, %rd758;
	xor.b64  	%rd760, %rd759, %rd757;
	add.s64 	%rd761, %rd672, %rd163;
	add.s64 	%rd762, %rd761, %rd755;
	add.s64 	%rd763, %rd762, %rd760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8736,%dummy}, %rd544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8737}, %rd544;
	}
	shf.r.wrap.b32 	%r8738, %r8737, %r8736, 14;
	shf.r.wrap.b32 	%r8739, %r8736, %r8737, 14;
	mov.b64 	%rd764, {%r8739, %r8738};
	shf.r.wrap.b32 	%r8740, %r8737, %r8736, 18;
	shf.r.wrap.b32 	%r8741, %r8736, %r8737, 18;
	mov.b64 	%rd765, {%r8741, %r8740};
	xor.b64  	%rd766, %rd765, %rd764;
	shf.l.wrap.b32 	%r8742, %r8736, %r8737, 23;
	shf.l.wrap.b32 	%r8743, %r8737, %r8736, 23;
	mov.b64 	%rd767, {%r8743, %r8742};
	xor.b64  	%rd768, %rd766, %rd767;
	xor.b64  	%rd769, %rd520, %rd496;
	and.b64  	%rd770, %rd544, %rd769;
	xor.b64  	%rd771, %rd770, %rd496;
	add.s64 	%rd772, %rd771, %rd472;
	add.s64 	%rd773, %rd772, %rd568;
	add.s64 	%rd775, %rd773, %rd18;
	add.s64 	%rd776, %rd775, %rd768;
	add.s64 	%rd777, %rd776, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8744,%dummy}, %rd555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8745}, %rd555;
	}
	shf.r.wrap.b32 	%r8746, %r8745, %r8744, 28;
	shf.r.wrap.b32 	%r8747, %r8744, %r8745, 28;
	mov.b64 	%rd778, {%r8747, %r8746};
	shf.l.wrap.b32 	%r8748, %r8744, %r8745, 30;
	shf.l.wrap.b32 	%r8749, %r8745, %r8744, 30;
	mov.b64 	%rd779, {%r8749, %r8748};
	xor.b64  	%rd780, %rd779, %rd778;
	shf.l.wrap.b32 	%r8750, %r8744, %r8745, 25;
	shf.l.wrap.b32 	%r8751, %r8745, %r8744, 25;
	mov.b64 	%rd781, {%r8751, %r8750};
	xor.b64  	%rd782, %rd780, %rd781;
	xor.b64  	%rd783, %rd555, %rd507;
	xor.b64  	%rd784, %rd555, %rd531;
	and.b64  	%rd785, %rd784, %rd783;
	xor.b64  	%rd786, %rd785, %rd555;
	add.s64 	%rd787, %rd776, %rd786;
	add.s64 	%rd788, %rd787, %rd782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8752,%dummy}, %rd777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8753}, %rd777;
	}
	shf.r.wrap.b32 	%r8754, %r8753, %r8752, 14;
	shf.r.wrap.b32 	%r8755, %r8752, %r8753, 14;
	mov.b64 	%rd789, {%r8755, %r8754};
	shf.r.wrap.b32 	%r8756, %r8753, %r8752, 18;
	shf.r.wrap.b32 	%r8757, %r8752, %r8753, 18;
	mov.b64 	%rd790, {%r8757, %r8756};
	xor.b64  	%rd791, %rd790, %rd789;
	shf.l.wrap.b32 	%r8758, %r8752, %r8753, 23;
	shf.l.wrap.b32 	%r8759, %r8753, %r8752, 23;
	mov.b64 	%rd792, {%r8759, %r8758};
	xor.b64  	%rd793, %rd791, %rd792;
	xor.b64  	%rd794, %rd544, %rd520;
	and.b64  	%rd795, %rd777, %rd794;
	xor.b64  	%rd796, %rd795, %rd520;
	add.s64 	%rd797, %rd581, %rd496;
	add.s64 	%rd799, %rd797, %rd19;
	add.s64 	%rd800, %rd799, %rd796;
	add.s64 	%rd801, %rd800, %rd793;
	add.s64 	%rd802, %rd801, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8760,%dummy}, %rd788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8761}, %rd788;
	}
	shf.r.wrap.b32 	%r8762, %r8761, %r8760, 28;
	shf.r.wrap.b32 	%r8763, %r8760, %r8761, 28;
	mov.b64 	%rd803, {%r8763, %r8762};
	shf.l.wrap.b32 	%r8764, %r8760, %r8761, 30;
	shf.l.wrap.b32 	%r8765, %r8761, %r8760, 30;
	mov.b64 	%rd804, {%r8765, %r8764};
	xor.b64  	%rd805, %rd804, %rd803;
	shf.l.wrap.b32 	%r8766, %r8760, %r8761, 25;
	shf.l.wrap.b32 	%r8767, %r8761, %r8760, 25;
	mov.b64 	%rd806, {%r8767, %r8766};
	xor.b64  	%rd807, %rd805, %rd806;
	xor.b64  	%rd808, %rd788, %rd531;
	xor.b64  	%rd809, %rd788, %rd555;
	and.b64  	%rd810, %rd809, %rd808;
	xor.b64  	%rd811, %rd810, %rd788;
	add.s64 	%rd812, %rd801, %rd811;
	add.s64 	%rd813, %rd812, %rd807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8768,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8769}, %rd802;
	}
	shf.r.wrap.b32 	%r8770, %r8769, %r8768, 14;
	shf.r.wrap.b32 	%r8771, %r8768, %r8769, 14;
	mov.b64 	%rd814, {%r8771, %r8770};
	shf.r.wrap.b32 	%r8772, %r8769, %r8768, 18;
	shf.r.wrap.b32 	%r8773, %r8768, %r8769, 18;
	mov.b64 	%rd815, {%r8773, %r8772};
	xor.b64  	%rd816, %rd815, %rd814;
	shf.l.wrap.b32 	%r8774, %r8768, %r8769, 23;
	shf.l.wrap.b32 	%r8775, %r8769, %r8768, 23;
	mov.b64 	%rd817, {%r8775, %r8774};
	xor.b64  	%rd818, %rd816, %rd817;
	xor.b64  	%rd819, %rd777, %rd544;
	and.b64  	%rd820, %rd802, %rd819;
	xor.b64  	%rd821, %rd820, %rd544;
	add.s64 	%rd822, %rd594, %rd520;
	add.s64 	%rd824, %rd822, %rd20;
	add.s64 	%rd825, %rd824, %rd821;
	add.s64 	%rd826, %rd825, %rd818;
	add.s64 	%rd827, %rd826, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8776,%dummy}, %rd813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8777}, %rd813;
	}
	shf.r.wrap.b32 	%r8778, %r8777, %r8776, 28;
	shf.r.wrap.b32 	%r8779, %r8776, %r8777, 28;
	mov.b64 	%rd828, {%r8779, %r8778};
	shf.l.wrap.b32 	%r8780, %r8776, %r8777, 30;
	shf.l.wrap.b32 	%r8781, %r8777, %r8776, 30;
	mov.b64 	%rd829, {%r8781, %r8780};
	xor.b64  	%rd830, %rd829, %rd828;
	shf.l.wrap.b32 	%r8782, %r8776, %r8777, 25;
	shf.l.wrap.b32 	%r8783, %r8777, %r8776, 25;
	mov.b64 	%rd831, {%r8783, %r8782};
	xor.b64  	%rd832, %rd830, %rd831;
	xor.b64  	%rd833, %rd813, %rd555;
	xor.b64  	%rd834, %rd813, %rd788;
	and.b64  	%rd835, %rd834, %rd833;
	xor.b64  	%rd836, %rd835, %rd813;
	add.s64 	%rd837, %rd826, %rd836;
	add.s64 	%rd838, %rd837, %rd832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8784,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8785}, %rd827;
	}
	shf.r.wrap.b32 	%r8786, %r8785, %r8784, 14;
	shf.r.wrap.b32 	%r8787, %r8784, %r8785, 14;
	mov.b64 	%rd839, {%r8787, %r8786};
	shf.r.wrap.b32 	%r8788, %r8785, %r8784, 18;
	shf.r.wrap.b32 	%r8789, %r8784, %r8785, 18;
	mov.b64 	%rd840, {%r8789, %r8788};
	xor.b64  	%rd841, %rd840, %rd839;
	shf.l.wrap.b32 	%r8790, %r8784, %r8785, 23;
	shf.l.wrap.b32 	%r8791, %r8785, %r8784, 23;
	mov.b64 	%rd842, {%r8791, %r8790};
	xor.b64  	%rd843, %rd841, %rd842;
	xor.b64  	%rd844, %rd802, %rd777;
	and.b64  	%rd845, %rd827, %rd844;
	xor.b64  	%rd846, %rd845, %rd777;
	add.s64 	%rd847, %rd607, %rd544;
	add.s64 	%rd849, %rd847, %rd21;
	add.s64 	%rd850, %rd849, %rd846;
	add.s64 	%rd851, %rd850, %rd843;
	add.s64 	%rd852, %rd851, %rd555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8792,%dummy}, %rd838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8793}, %rd838;
	}
	shf.r.wrap.b32 	%r8794, %r8793, %r8792, 28;
	shf.r.wrap.b32 	%r8795, %r8792, %r8793, 28;
	mov.b64 	%rd853, {%r8795, %r8794};
	shf.l.wrap.b32 	%r8796, %r8792, %r8793, 30;
	shf.l.wrap.b32 	%r8797, %r8793, %r8792, 30;
	mov.b64 	%rd854, {%r8797, %r8796};
	xor.b64  	%rd855, %rd854, %rd853;
	shf.l.wrap.b32 	%r8798, %r8792, %r8793, 25;
	shf.l.wrap.b32 	%r8799, %r8793, %r8792, 25;
	mov.b64 	%rd856, {%r8799, %r8798};
	xor.b64  	%rd857, %rd855, %rd856;
	xor.b64  	%rd858, %rd838, %rd788;
	xor.b64  	%rd859, %rd838, %rd813;
	and.b64  	%rd860, %rd859, %rd858;
	xor.b64  	%rd861, %rd860, %rd838;
	add.s64 	%rd862, %rd851, %rd861;
	add.s64 	%rd863, %rd862, %rd857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8800,%dummy}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8801}, %rd852;
	}
	shf.r.wrap.b32 	%r8802, %r8801, %r8800, 14;
	shf.r.wrap.b32 	%r8803, %r8800, %r8801, 14;
	mov.b64 	%rd864, {%r8803, %r8802};
	shf.r.wrap.b32 	%r8804, %r8801, %r8800, 18;
	shf.r.wrap.b32 	%r8805, %r8800, %r8801, 18;
	mov.b64 	%rd865, {%r8805, %r8804};
	xor.b64  	%rd866, %rd865, %rd864;
	shf.l.wrap.b32 	%r8806, %r8800, %r8801, 23;
	shf.l.wrap.b32 	%r8807, %r8801, %r8800, 23;
	mov.b64 	%rd867, {%r8807, %r8806};
	xor.b64  	%rd868, %rd866, %rd867;
	xor.b64  	%rd869, %rd827, %rd802;
	and.b64  	%rd870, %rd852, %rd869;
	xor.b64  	%rd871, %rd870, %rd802;
	add.s64 	%rd872, %rd777, %rd620;
	add.s64 	%rd874, %rd872, %rd22;
	add.s64 	%rd875, %rd874, %rd871;
	add.s64 	%rd876, %rd875, %rd868;
	add.s64 	%rd877, %rd876, %rd788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8808,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8809}, %rd863;
	}
	shf.r.wrap.b32 	%r8810, %r8809, %r8808, 28;
	shf.r.wrap.b32 	%r8811, %r8808, %r8809, 28;
	mov.b64 	%rd878, {%r8811, %r8810};
	shf.l.wrap.b32 	%r8812, %r8808, %r8809, 30;
	shf.l.wrap.b32 	%r8813, %r8809, %r8808, 30;
	mov.b64 	%rd879, {%r8813, %r8812};
	xor.b64  	%rd880, %rd879, %rd878;
	shf.l.wrap.b32 	%r8814, %r8808, %r8809, 25;
	shf.l.wrap.b32 	%r8815, %r8809, %r8808, 25;
	mov.b64 	%rd881, {%r8815, %r8814};
	xor.b64  	%rd882, %rd880, %rd881;
	xor.b64  	%rd883, %rd863, %rd813;
	xor.b64  	%rd884, %rd863, %rd838;
	and.b64  	%rd885, %rd884, %rd883;
	xor.b64  	%rd886, %rd885, %rd863;
	add.s64 	%rd887, %rd876, %rd886;
	add.s64 	%rd888, %rd887, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8816,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8817}, %rd877;
	}
	shf.r.wrap.b32 	%r8818, %r8817, %r8816, 14;
	shf.r.wrap.b32 	%r8819, %r8816, %r8817, 14;
	mov.b64 	%rd889, {%r8819, %r8818};
	shf.r.wrap.b32 	%r8820, %r8817, %r8816, 18;
	shf.r.wrap.b32 	%r8821, %r8816, %r8817, 18;
	mov.b64 	%rd890, {%r8821, %r8820};
	xor.b64  	%rd891, %rd890, %rd889;
	shf.l.wrap.b32 	%r8822, %r8816, %r8817, 23;
	shf.l.wrap.b32 	%r8823, %r8817, %r8816, 23;
	mov.b64 	%rd892, {%r8823, %r8822};
	xor.b64  	%rd893, %rd891, %rd892;
	xor.b64  	%rd894, %rd852, %rd827;
	and.b64  	%rd895, %rd877, %rd894;
	xor.b64  	%rd896, %rd895, %rd827;
	add.s64 	%rd897, %rd802, %rd633;
	add.s64 	%rd899, %rd897, %rd23;
	add.s64 	%rd900, %rd899, %rd896;
	add.s64 	%rd901, %rd900, %rd893;
	add.s64 	%rd902, %rd901, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8824,%dummy}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8825}, %rd888;
	}
	shf.r.wrap.b32 	%r8826, %r8825, %r8824, 28;
	shf.r.wrap.b32 	%r8827, %r8824, %r8825, 28;
	mov.b64 	%rd903, {%r8827, %r8826};
	shf.l.wrap.b32 	%r8828, %r8824, %r8825, 30;
	shf.l.wrap.b32 	%r8829, %r8825, %r8824, 30;
	mov.b64 	%rd904, {%r8829, %r8828};
	xor.b64  	%rd905, %rd904, %rd903;
	shf.l.wrap.b32 	%r8830, %r8824, %r8825, 25;
	shf.l.wrap.b32 	%r8831, %r8825, %r8824, 25;
	mov.b64 	%rd906, {%r8831, %r8830};
	xor.b64  	%rd907, %rd905, %rd906;
	xor.b64  	%rd908, %rd888, %rd838;
	xor.b64  	%rd909, %rd888, %rd863;
	and.b64  	%rd910, %rd909, %rd908;
	xor.b64  	%rd911, %rd910, %rd888;
	add.s64 	%rd912, %rd901, %rd911;
	add.s64 	%rd913, %rd912, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8832,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8833}, %rd902;
	}
	shf.r.wrap.b32 	%r8834, %r8833, %r8832, 14;
	shf.r.wrap.b32 	%r8835, %r8832, %r8833, 14;
	mov.b64 	%rd914, {%r8835, %r8834};
	shf.r.wrap.b32 	%r8836, %r8833, %r8832, 18;
	shf.r.wrap.b32 	%r8837, %r8832, %r8833, 18;
	mov.b64 	%rd915, {%r8837, %r8836};
	xor.b64  	%rd916, %rd915, %rd914;
	shf.l.wrap.b32 	%r8838, %r8832, %r8833, 23;
	shf.l.wrap.b32 	%r8839, %r8833, %r8832, 23;
	mov.b64 	%rd917, {%r8839, %r8838};
	xor.b64  	%rd918, %rd916, %rd917;
	xor.b64  	%rd919, %rd877, %rd852;
	and.b64  	%rd920, %rd902, %rd919;
	xor.b64  	%rd921, %rd920, %rd852;
	add.s64 	%rd922, %rd827, %rd646;
	add.s64 	%rd924, %rd922, %rd24;
	add.s64 	%rd925, %rd924, %rd921;
	add.s64 	%rd926, %rd925, %rd918;
	add.s64 	%rd927, %rd926, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8840,%dummy}, %rd913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8841}, %rd913;
	}
	shf.r.wrap.b32 	%r8842, %r8841, %r8840, 28;
	shf.r.wrap.b32 	%r8843, %r8840, %r8841, 28;
	mov.b64 	%rd928, {%r8843, %r8842};
	shf.l.wrap.b32 	%r8844, %r8840, %r8841, 30;
	shf.l.wrap.b32 	%r8845, %r8841, %r8840, 30;
	mov.b64 	%rd929, {%r8845, %r8844};
	xor.b64  	%rd930, %rd929, %rd928;
	shf.l.wrap.b32 	%r8846, %r8840, %r8841, 25;
	shf.l.wrap.b32 	%r8847, %r8841, %r8840, 25;
	mov.b64 	%rd931, {%r8847, %r8846};
	xor.b64  	%rd932, %rd930, %rd931;
	xor.b64  	%rd933, %rd913, %rd863;
	xor.b64  	%rd934, %rd913, %rd888;
	and.b64  	%rd935, %rd934, %rd933;
	xor.b64  	%rd936, %rd935, %rd913;
	add.s64 	%rd937, %rd926, %rd936;
	add.s64 	%rd938, %rd937, %rd932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8848,%dummy}, %rd927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8849}, %rd927;
	}
	shf.r.wrap.b32 	%r8850, %r8849, %r8848, 14;
	shf.r.wrap.b32 	%r8851, %r8848, %r8849, 14;
	mov.b64 	%rd939, {%r8851, %r8850};
	shf.r.wrap.b32 	%r8852, %r8849, %r8848, 18;
	shf.r.wrap.b32 	%r8853, %r8848, %r8849, 18;
	mov.b64 	%rd940, {%r8853, %r8852};
	xor.b64  	%rd941, %rd940, %rd939;
	shf.l.wrap.b32 	%r8854, %r8848, %r8849, 23;
	shf.l.wrap.b32 	%r8855, %r8849, %r8848, 23;
	mov.b64 	%rd942, {%r8855, %r8854};
	xor.b64  	%rd943, %rd941, %rd942;
	xor.b64  	%rd944, %rd902, %rd877;
	and.b64  	%rd945, %rd927, %rd944;
	xor.b64  	%rd946, %rd945, %rd877;
	add.s64 	%rd947, %rd852, %rd659;
	add.s64 	%rd949, %rd947, %rd25;
	add.s64 	%rd950, %rd949, %rd946;
	add.s64 	%rd951, %rd950, %rd943;
	add.s64 	%rd952, %rd951, %rd863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8856,%dummy}, %rd938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8857}, %rd938;
	}
	shf.r.wrap.b32 	%r8858, %r8857, %r8856, 28;
	shf.r.wrap.b32 	%r8859, %r8856, %r8857, 28;
	mov.b64 	%rd953, {%r8859, %r8858};
	shf.l.wrap.b32 	%r8860, %r8856, %r8857, 30;
	shf.l.wrap.b32 	%r8861, %r8857, %r8856, 30;
	mov.b64 	%rd954, {%r8861, %r8860};
	xor.b64  	%rd955, %rd954, %rd953;
	shf.l.wrap.b32 	%r8862, %r8856, %r8857, 25;
	shf.l.wrap.b32 	%r8863, %r8857, %r8856, 25;
	mov.b64 	%rd956, {%r8863, %r8862};
	xor.b64  	%rd957, %rd955, %rd956;
	xor.b64  	%rd958, %rd938, %rd888;
	xor.b64  	%rd959, %rd938, %rd913;
	and.b64  	%rd960, %rd959, %rd958;
	xor.b64  	%rd961, %rd960, %rd938;
	add.s64 	%rd962, %rd951, %rd961;
	add.s64 	%rd963, %rd962, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8864,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8865}, %rd952;
	}
	shf.r.wrap.b32 	%r8866, %r8865, %r8864, 14;
	shf.r.wrap.b32 	%r8867, %r8864, %r8865, 14;
	mov.b64 	%rd964, {%r8867, %r8866};
	shf.r.wrap.b32 	%r8868, %r8865, %r8864, 18;
	shf.r.wrap.b32 	%r8869, %r8864, %r8865, 18;
	mov.b64 	%rd965, {%r8869, %r8868};
	xor.b64  	%rd966, %rd965, %rd964;
	shf.l.wrap.b32 	%r8870, %r8864, %r8865, 23;
	shf.l.wrap.b32 	%r8871, %r8865, %r8864, 23;
	mov.b64 	%rd967, {%r8871, %r8870};
	xor.b64  	%rd968, %rd966, %rd967;
	xor.b64  	%rd969, %rd927, %rd902;
	and.b64  	%rd970, %rd952, %rd969;
	xor.b64  	%rd971, %rd970, %rd902;
	add.s64 	%rd972, %rd877, %rd672;
	add.s64 	%rd974, %rd972, %rd26;
	add.s64 	%rd975, %rd974, %rd971;
	add.s64 	%rd976, %rd975, %rd968;
	add.s64 	%rd977, %rd976, %rd888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8872,%dummy}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8873}, %rd963;
	}
	shf.r.wrap.b32 	%r8874, %r8873, %r8872, 28;
	shf.r.wrap.b32 	%r8875, %r8872, %r8873, 28;
	mov.b64 	%rd978, {%r8875, %r8874};
	shf.l.wrap.b32 	%r8876, %r8872, %r8873, 30;
	shf.l.wrap.b32 	%r8877, %r8873, %r8872, 30;
	mov.b64 	%rd979, {%r8877, %r8876};
	xor.b64  	%rd980, %rd979, %rd978;
	shf.l.wrap.b32 	%r8878, %r8872, %r8873, 25;
	shf.l.wrap.b32 	%r8879, %r8873, %r8872, 25;
	mov.b64 	%rd981, {%r8879, %r8878};
	xor.b64  	%rd982, %rd980, %rd981;
	xor.b64  	%rd983, %rd963, %rd913;
	xor.b64  	%rd984, %rd963, %rd938;
	and.b64  	%rd985, %rd984, %rd983;
	xor.b64  	%rd986, %rd985, %rd963;
	add.s64 	%rd987, %rd976, %rd986;
	add.s64 	%rd988, %rd987, %rd982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8880,%dummy}, %rd977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8881}, %rd977;
	}
	shf.r.wrap.b32 	%r8882, %r8881, %r8880, 14;
	shf.r.wrap.b32 	%r8883, %r8880, %r8881, 14;
	mov.b64 	%rd989, {%r8883, %r8882};
	shf.r.wrap.b32 	%r8884, %r8881, %r8880, 18;
	shf.r.wrap.b32 	%r8885, %r8880, %r8881, 18;
	mov.b64 	%rd990, {%r8885, %r8884};
	xor.b64  	%rd991, %rd990, %rd989;
	shf.l.wrap.b32 	%r8886, %r8880, %r8881, 23;
	shf.l.wrap.b32 	%r8887, %r8881, %r8880, 23;
	mov.b64 	%rd992, {%r8887, %r8886};
	xor.b64  	%rd993, %rd991, %rd992;
	xor.b64  	%rd994, %rd952, %rd927;
	and.b64  	%rd995, %rd977, %rd994;
	xor.b64  	%rd996, %rd995, %rd927;
	add.s64 	%rd997, %rd902, %rd685;
	add.s64 	%rd999, %rd997, %rd27;
	add.s64 	%rd1000, %rd999, %rd996;
	add.s64 	%rd1001, %rd1000, %rd993;
	add.s64 	%rd1002, %rd1001, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8888,%dummy}, %rd988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8889}, %rd988;
	}
	shf.r.wrap.b32 	%r8890, %r8889, %r8888, 28;
	shf.r.wrap.b32 	%r8891, %r8888, %r8889, 28;
	mov.b64 	%rd1003, {%r8891, %r8890};
	shf.l.wrap.b32 	%r8892, %r8888, %r8889, 30;
	shf.l.wrap.b32 	%r8893, %r8889, %r8888, 30;
	mov.b64 	%rd1004, {%r8893, %r8892};
	xor.b64  	%rd1005, %rd1004, %rd1003;
	shf.l.wrap.b32 	%r8894, %r8888, %r8889, 25;
	shf.l.wrap.b32 	%r8895, %r8889, %r8888, 25;
	mov.b64 	%rd1006, {%r8895, %r8894};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	xor.b64  	%rd1008, %rd988, %rd938;
	xor.b64  	%rd1009, %rd988, %rd963;
	and.b64  	%rd1010, %rd1009, %rd1008;
	xor.b64  	%rd1011, %rd1010, %rd988;
	add.s64 	%rd1012, %rd1001, %rd1011;
	add.s64 	%rd1013, %rd1012, %rd1007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8896,%dummy}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8897}, %rd1002;
	}
	shf.r.wrap.b32 	%r8898, %r8897, %r8896, 14;
	shf.r.wrap.b32 	%r8899, %r8896, %r8897, 14;
	mov.b64 	%rd1014, {%r8899, %r8898};
	shf.r.wrap.b32 	%r8900, %r8897, %r8896, 18;
	shf.r.wrap.b32 	%r8901, %r8896, %r8897, 18;
	mov.b64 	%rd1015, {%r8901, %r8900};
	xor.b64  	%rd1016, %rd1015, %rd1014;
	shf.l.wrap.b32 	%r8902, %r8896, %r8897, 23;
	shf.l.wrap.b32 	%r8903, %r8897, %r8896, 23;
	mov.b64 	%rd1017, {%r8903, %r8902};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	xor.b64  	%rd1019, %rd977, %rd952;
	and.b64  	%rd1020, %rd1002, %rd1019;
	xor.b64  	%rd1021, %rd1020, %rd952;
	add.s64 	%rd1022, %rd927, %rd698;
	add.s64 	%rd1024, %rd1022, %rd28;
	add.s64 	%rd1025, %rd1024, %rd1021;
	add.s64 	%rd1026, %rd1025, %rd1018;
	add.s64 	%rd1027, %rd1026, %rd938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8904,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8905}, %rd1013;
	}
	shf.r.wrap.b32 	%r8906, %r8905, %r8904, 28;
	shf.r.wrap.b32 	%r8907, %r8904, %r8905, 28;
	mov.b64 	%rd1028, {%r8907, %r8906};
	shf.l.wrap.b32 	%r8908, %r8904, %r8905, 30;
	shf.l.wrap.b32 	%r8909, %r8905, %r8904, 30;
	mov.b64 	%rd1029, {%r8909, %r8908};
	xor.b64  	%rd1030, %rd1029, %rd1028;
	shf.l.wrap.b32 	%r8910, %r8904, %r8905, 25;
	shf.l.wrap.b32 	%r8911, %r8905, %r8904, 25;
	mov.b64 	%rd1031, {%r8911, %r8910};
	xor.b64  	%rd1032, %rd1030, %rd1031;
	xor.b64  	%rd1033, %rd1013, %rd963;
	xor.b64  	%rd1034, %rd1013, %rd988;
	and.b64  	%rd1035, %rd1034, %rd1033;
	xor.b64  	%rd1036, %rd1035, %rd1013;
	add.s64 	%rd1037, %rd1026, %rd1036;
	add.s64 	%rd1038, %rd1037, %rd1032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8912,%dummy}, %rd1027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8913}, %rd1027;
	}
	shf.r.wrap.b32 	%r8914, %r8913, %r8912, 14;
	shf.r.wrap.b32 	%r8915, %r8912, %r8913, 14;
	mov.b64 	%rd1039, {%r8915, %r8914};
	shf.r.wrap.b32 	%r8916, %r8913, %r8912, 18;
	shf.r.wrap.b32 	%r8917, %r8912, %r8913, 18;
	mov.b64 	%rd1040, {%r8917, %r8916};
	xor.b64  	%rd1041, %rd1040, %rd1039;
	shf.l.wrap.b32 	%r8918, %r8912, %r8913, 23;
	shf.l.wrap.b32 	%r8919, %r8913, %r8912, 23;
	mov.b64 	%rd1042, {%r8919, %r8918};
	xor.b64  	%rd1043, %rd1041, %rd1042;
	xor.b64  	%rd1044, %rd1002, %rd977;
	and.b64  	%rd1045, %rd1027, %rd1044;
	xor.b64  	%rd1046, %rd1045, %rd977;
	add.s64 	%rd1047, %rd952, %rd711;
	add.s64 	%rd1049, %rd1047, %rd29;
	add.s64 	%rd1050, %rd1049, %rd1046;
	add.s64 	%rd1051, %rd1050, %rd1043;
	add.s64 	%rd1052, %rd1051, %rd963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8920,%dummy}, %rd1038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8921}, %rd1038;
	}
	shf.r.wrap.b32 	%r8922, %r8921, %r8920, 28;
	shf.r.wrap.b32 	%r8923, %r8920, %r8921, 28;
	mov.b64 	%rd1053, {%r8923, %r8922};
	shf.l.wrap.b32 	%r8924, %r8920, %r8921, 30;
	shf.l.wrap.b32 	%r8925, %r8921, %r8920, 30;
	mov.b64 	%rd1054, {%r8925, %r8924};
	xor.b64  	%rd1055, %rd1054, %rd1053;
	shf.l.wrap.b32 	%r8926, %r8920, %r8921, 25;
	shf.l.wrap.b32 	%r8927, %r8921, %r8920, 25;
	mov.b64 	%rd1056, {%r8927, %r8926};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	xor.b64  	%rd1058, %rd1038, %rd988;
	xor.b64  	%rd1059, %rd1038, %rd1013;
	and.b64  	%rd1060, %rd1059, %rd1058;
	xor.b64  	%rd1061, %rd1060, %rd1038;
	add.s64 	%rd1062, %rd1051, %rd1061;
	add.s64 	%rd1063, %rd1062, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8928,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8929}, %rd1052;
	}
	shf.r.wrap.b32 	%r8930, %r8929, %r8928, 14;
	shf.r.wrap.b32 	%r8931, %r8928, %r8929, 14;
	mov.b64 	%rd1064, {%r8931, %r8930};
	shf.r.wrap.b32 	%r8932, %r8929, %r8928, 18;
	shf.r.wrap.b32 	%r8933, %r8928, %r8929, 18;
	mov.b64 	%rd1065, {%r8933, %r8932};
	xor.b64  	%rd1066, %rd1065, %rd1064;
	shf.l.wrap.b32 	%r8934, %r8928, %r8929, 23;
	shf.l.wrap.b32 	%r8935, %r8929, %r8928, 23;
	mov.b64 	%rd1067, {%r8935, %r8934};
	xor.b64  	%rd1068, %rd1066, %rd1067;
	xor.b64  	%rd1069, %rd1027, %rd1002;
	and.b64  	%rd1070, %rd1052, %rd1069;
	xor.b64  	%rd1071, %rd1070, %rd1002;
	add.s64 	%rd1072, %rd977, %rd724;
	add.s64 	%rd1074, %rd1072, %rd30;
	add.s64 	%rd1075, %rd1074, %rd1071;
	add.s64 	%rd1076, %rd1075, %rd1068;
	add.s64 	%rd1077, %rd1076, %rd988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8936,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8937}, %rd1063;
	}
	shf.r.wrap.b32 	%r8938, %r8937, %r8936, 28;
	shf.r.wrap.b32 	%r8939, %r8936, %r8937, 28;
	mov.b64 	%rd1078, {%r8939, %r8938};
	shf.l.wrap.b32 	%r8940, %r8936, %r8937, 30;
	shf.l.wrap.b32 	%r8941, %r8937, %r8936, 30;
	mov.b64 	%rd1079, {%r8941, %r8940};
	xor.b64  	%rd1080, %rd1079, %rd1078;
	shf.l.wrap.b32 	%r8942, %r8936, %r8937, 25;
	shf.l.wrap.b32 	%r8943, %r8937, %r8936, 25;
	mov.b64 	%rd1081, {%r8943, %r8942};
	xor.b64  	%rd1082, %rd1080, %rd1081;
	xor.b64  	%rd1083, %rd1063, %rd1013;
	xor.b64  	%rd1084, %rd1063, %rd1038;
	and.b64  	%rd1085, %rd1084, %rd1083;
	xor.b64  	%rd1086, %rd1085, %rd1063;
	add.s64 	%rd1087, %rd1076, %rd1086;
	add.s64 	%rd1088, %rd1087, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8944,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8945}, %rd1077;
	}
	shf.r.wrap.b32 	%r8946, %r8945, %r8944, 14;
	shf.r.wrap.b32 	%r8947, %r8944, %r8945, 14;
	mov.b64 	%rd1089, {%r8947, %r8946};
	shf.r.wrap.b32 	%r8948, %r8945, %r8944, 18;
	shf.r.wrap.b32 	%r8949, %r8944, %r8945, 18;
	mov.b64 	%rd1090, {%r8949, %r8948};
	xor.b64  	%rd1091, %rd1090, %rd1089;
	shf.l.wrap.b32 	%r8950, %r8944, %r8945, 23;
	shf.l.wrap.b32 	%r8951, %r8945, %r8944, 23;
	mov.b64 	%rd1092, {%r8951, %r8950};
	xor.b64  	%rd1093, %rd1091, %rd1092;
	xor.b64  	%rd1094, %rd1052, %rd1027;
	and.b64  	%rd1095, %rd1077, %rd1094;
	xor.b64  	%rd1096, %rd1095, %rd1027;
	add.s64 	%rd1097, %rd1002, %rd737;
	add.s64 	%rd1099, %rd1097, %rd31;
	add.s64 	%rd1100, %rd1099, %rd1096;
	add.s64 	%rd1101, %rd1100, %rd1093;
	add.s64 	%rd1102, %rd1101, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8952,%dummy}, %rd1088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8953}, %rd1088;
	}
	shf.r.wrap.b32 	%r8954, %r8953, %r8952, 28;
	shf.r.wrap.b32 	%r8955, %r8952, %r8953, 28;
	mov.b64 	%rd1103, {%r8955, %r8954};
	shf.l.wrap.b32 	%r8956, %r8952, %r8953, 30;
	shf.l.wrap.b32 	%r8957, %r8953, %r8952, 30;
	mov.b64 	%rd1104, {%r8957, %r8956};
	xor.b64  	%rd1105, %rd1104, %rd1103;
	shf.l.wrap.b32 	%r8958, %r8952, %r8953, 25;
	shf.l.wrap.b32 	%r8959, %r8953, %r8952, 25;
	mov.b64 	%rd1106, {%r8959, %r8958};
	xor.b64  	%rd1107, %rd1105, %rd1106;
	xor.b64  	%rd1108, %rd1088, %rd1038;
	xor.b64  	%rd1109, %rd1088, %rd1063;
	and.b64  	%rd1110, %rd1109, %rd1108;
	xor.b64  	%rd1111, %rd1110, %rd1088;
	add.s64 	%rd1112, %rd1101, %rd1111;
	add.s64 	%rd1113, %rd1112, %rd1107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8960,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8961}, %rd1102;
	}
	shf.r.wrap.b32 	%r8962, %r8961, %r8960, 14;
	shf.r.wrap.b32 	%r8963, %r8960, %r8961, 14;
	mov.b64 	%rd1114, {%r8963, %r8962};
	shf.r.wrap.b32 	%r8964, %r8961, %r8960, 18;
	shf.r.wrap.b32 	%r8965, %r8960, %r8961, 18;
	mov.b64 	%rd1115, {%r8965, %r8964};
	xor.b64  	%rd1116, %rd1115, %rd1114;
	shf.l.wrap.b32 	%r8966, %r8960, %r8961, 23;
	shf.l.wrap.b32 	%r8967, %r8961, %r8960, 23;
	mov.b64 	%rd1117, {%r8967, %r8966};
	xor.b64  	%rd1118, %rd1116, %rd1117;
	xor.b64  	%rd1119, %rd1077, %rd1052;
	and.b64  	%rd1120, %rd1102, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1052;
	add.s64 	%rd1122, %rd1027, %rd750;
	add.s64 	%rd1124, %rd1122, %rd32;
	add.s64 	%rd1125, %rd1124, %rd1121;
	add.s64 	%rd1126, %rd1125, %rd1118;
	add.s64 	%rd1127, %rd1126, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8968,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8969}, %rd1113;
	}
	shf.r.wrap.b32 	%r8970, %r8969, %r8968, 28;
	shf.r.wrap.b32 	%r8971, %r8968, %r8969, 28;
	mov.b64 	%rd1128, {%r8971, %r8970};
	shf.l.wrap.b32 	%r8972, %r8968, %r8969, 30;
	shf.l.wrap.b32 	%r8973, %r8969, %r8968, 30;
	mov.b64 	%rd1129, {%r8973, %r8972};
	xor.b64  	%rd1130, %rd1129, %rd1128;
	shf.l.wrap.b32 	%r8974, %r8968, %r8969, 25;
	shf.l.wrap.b32 	%r8975, %r8969, %r8968, 25;
	mov.b64 	%rd1131, {%r8975, %r8974};
	xor.b64  	%rd1132, %rd1130, %rd1131;
	xor.b64  	%rd1133, %rd1113, %rd1063;
	xor.b64  	%rd1134, %rd1113, %rd1088;
	and.b64  	%rd1135, %rd1134, %rd1133;
	xor.b64  	%rd1136, %rd1135, %rd1113;
	add.s64 	%rd1137, %rd1126, %rd1136;
	add.s64 	%rd1138, %rd1137, %rd1132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8976,%dummy}, %rd1127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8977}, %rd1127;
	}
	shf.r.wrap.b32 	%r8978, %r8977, %r8976, 14;
	shf.r.wrap.b32 	%r8979, %r8976, %r8977, 14;
	mov.b64 	%rd1139, {%r8979, %r8978};
	shf.r.wrap.b32 	%r8980, %r8977, %r8976, 18;
	shf.r.wrap.b32 	%r8981, %r8976, %r8977, 18;
	mov.b64 	%rd1140, {%r8981, %r8980};
	xor.b64  	%rd1141, %rd1140, %rd1139;
	shf.l.wrap.b32 	%r8982, %r8976, %r8977, 23;
	shf.l.wrap.b32 	%r8983, %r8977, %r8976, 23;
	mov.b64 	%rd1142, {%r8983, %r8982};
	xor.b64  	%rd1143, %rd1141, %rd1142;
	xor.b64  	%rd1144, %rd1102, %rd1077;
	and.b64  	%rd1145, %rd1127, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1077;
	add.s64 	%rd1147, %rd1052, %rd763;
	add.s64 	%rd1149, %rd1147, %rd33;
	add.s64 	%rd1150, %rd1149, %rd1146;
	add.s64 	%rd1151, %rd1150, %rd1143;
	add.s64 	%rd1152, %rd1151, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8984,%dummy}, %rd1138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8985}, %rd1138;
	}
	shf.r.wrap.b32 	%r8986, %r8985, %r8984, 28;
	shf.r.wrap.b32 	%r8987, %r8984, %r8985, 28;
	mov.b64 	%rd1153, {%r8987, %r8986};
	shf.l.wrap.b32 	%r8988, %r8984, %r8985, 30;
	shf.l.wrap.b32 	%r8989, %r8985, %r8984, 30;
	mov.b64 	%rd1154, {%r8989, %r8988};
	xor.b64  	%rd1155, %rd1154, %rd1153;
	shf.l.wrap.b32 	%r8990, %r8984, %r8985, 25;
	shf.l.wrap.b32 	%r8991, %r8985, %r8984, 25;
	mov.b64 	%rd1156, {%r8991, %r8990};
	xor.b64  	%rd1157, %rd1155, %rd1156;
	xor.b64  	%rd1158, %rd1138, %rd1088;
	xor.b64  	%rd1159, %rd1138, %rd1113;
	and.b64  	%rd1160, %rd1159, %rd1158;
	xor.b64  	%rd1161, %rd1160, %rd1138;
	add.s64 	%rd1162, %rd1151, %rd1161;
	add.s64 	%rd1163, %rd1162, %rd1157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8992,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8993}, %rd750;
	}
	shf.r.wrap.b32 	%r8994, %r8993, %r8992, 19;
	shf.r.wrap.b32 	%r8995, %r8992, %r8993, 19;
	mov.b64 	%rd1164, {%r8995, %r8994};
	shf.l.wrap.b32 	%r8996, %r8992, %r8993, 3;
	shf.l.wrap.b32 	%r8997, %r8993, %r8992, 3;
	mov.b64 	%rd1165, {%r8997, %r8996};
	shr.u64 	%rd1166, %rd750, 6;
	xor.b64  	%rd1167, %rd1164, %rd1166;
	xor.b64  	%rd1168, %rd1167, %rd1165;
	shf.r.wrap.b32 	%r8998, %r8587, %r8586, 1;
	shf.r.wrap.b32 	%r8999, %r8586, %r8587, 1;
	mov.b64 	%rd1169, {%r8999, %r8998};
	shf.r.wrap.b32 	%r9000, %r8587, %r8586, 8;
	shf.r.wrap.b32 	%r9001, %r8586, %r8587, 8;
	mov.b64 	%rd1170, {%r9001, %r9000};
	shr.u64 	%rd1171, %rd581, 7;
	xor.b64  	%rd1172, %rd1169, %rd1171;
	xor.b64  	%rd1173, %rd1172, %rd1170;
	add.s64 	%rd1174, %rd685, %rd568;
	add.s64 	%rd1175, %rd1174, %rd1168;
	add.s64 	%rd1176, %rd1175, %rd1173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9002,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9003}, %rd763;
	}
	shf.r.wrap.b32 	%r9004, %r9003, %r9002, 19;
	shf.r.wrap.b32 	%r9005, %r9002, %r9003, 19;
	mov.b64 	%rd1177, {%r9005, %r9004};
	shf.l.wrap.b32 	%r9006, %r9002, %r9003, 3;
	shf.l.wrap.b32 	%r9007, %r9003, %r9002, 3;
	mov.b64 	%rd1178, {%r9007, %r9006};
	shr.u64 	%rd1179, %rd763, 6;
	xor.b64  	%rd1180, %rd1177, %rd1179;
	xor.b64  	%rd1181, %rd1180, %rd1178;
	shf.r.wrap.b32 	%r9008, %r8599, %r8598, 1;
	shf.r.wrap.b32 	%r9009, %r8598, %r8599, 1;
	mov.b64 	%rd1182, {%r9009, %r9008};
	shf.r.wrap.b32 	%r9010, %r8599, %r8598, 8;
	shf.r.wrap.b32 	%r9011, %r8598, %r8599, 8;
	mov.b64 	%rd1183, {%r9011, %r9010};
	shr.u64 	%rd1184, %rd594, 7;
	xor.b64  	%rd1185, %rd1182, %rd1184;
	xor.b64  	%rd1186, %rd1185, %rd1183;
	add.s64 	%rd1187, %rd698, %rd581;
	add.s64 	%rd1188, %rd1187, %rd1181;
	add.s64 	%rd1189, %rd1188, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9012,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9013}, %rd1176;
	}
	shf.r.wrap.b32 	%r9014, %r9013, %r9012, 19;
	shf.r.wrap.b32 	%r9015, %r9012, %r9013, 19;
	mov.b64 	%rd1190, {%r9015, %r9014};
	shf.l.wrap.b32 	%r9016, %r9012, %r9013, 3;
	shf.l.wrap.b32 	%r9017, %r9013, %r9012, 3;
	mov.b64 	%rd1191, {%r9017, %r9016};
	shr.u64 	%rd1192, %rd1176, 6;
	xor.b64  	%rd1193, %rd1190, %rd1192;
	xor.b64  	%rd1194, %rd1193, %rd1191;
	shf.r.wrap.b32 	%r9018, %r8611, %r8610, 1;
	shf.r.wrap.b32 	%r9019, %r8610, %r8611, 1;
	mov.b64 	%rd1195, {%r9019, %r9018};
	shf.r.wrap.b32 	%r9020, %r8611, %r8610, 8;
	shf.r.wrap.b32 	%r9021, %r8610, %r8611, 8;
	mov.b64 	%rd1196, {%r9021, %r9020};
	shr.u64 	%rd1197, %rd607, 7;
	xor.b64  	%rd1198, %rd1195, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1196;
	add.s64 	%rd1200, %rd711, %rd594;
	add.s64 	%rd1201, %rd1200, %rd1194;
	add.s64 	%rd1202, %rd1201, %rd1199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9022,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9023}, %rd1189;
	}
	shf.r.wrap.b32 	%r9024, %r9023, %r9022, 19;
	shf.r.wrap.b32 	%r9025, %r9022, %r9023, 19;
	mov.b64 	%rd1203, {%r9025, %r9024};
	shf.l.wrap.b32 	%r9026, %r9022, %r9023, 3;
	shf.l.wrap.b32 	%r9027, %r9023, %r9022, 3;
	mov.b64 	%rd1204, {%r9027, %r9026};
	shr.u64 	%rd1205, %rd1189, 6;
	xor.b64  	%rd1206, %rd1203, %rd1205;
	xor.b64  	%rd1207, %rd1206, %rd1204;
	shf.r.wrap.b32 	%r9028, %r8623, %r8622, 1;
	shf.r.wrap.b32 	%r9029, %r8622, %r8623, 1;
	mov.b64 	%rd1208, {%r9029, %r9028};
	shf.r.wrap.b32 	%r9030, %r8623, %r8622, 8;
	shf.r.wrap.b32 	%r9031, %r8622, %r8623, 8;
	mov.b64 	%rd1209, {%r9031, %r9030};
	shr.u64 	%rd1210, %rd620, 7;
	xor.b64  	%rd1211, %rd1208, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd1209;
	add.s64 	%rd1213, %rd724, %rd607;
	add.s64 	%rd1214, %rd1213, %rd1207;
	add.s64 	%rd1215, %rd1214, %rd1212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9032,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9033}, %rd1202;
	}
	shf.r.wrap.b32 	%r9034, %r9033, %r9032, 19;
	shf.r.wrap.b32 	%r9035, %r9032, %r9033, 19;
	mov.b64 	%rd1216, {%r9035, %r9034};
	shf.l.wrap.b32 	%r9036, %r9032, %r9033, 3;
	shf.l.wrap.b32 	%r9037, %r9033, %r9032, 3;
	mov.b64 	%rd1217, {%r9037, %r9036};
	shr.u64 	%rd1218, %rd1202, 6;
	xor.b64  	%rd1219, %rd1216, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd1217;
	shf.r.wrap.b32 	%r9038, %r8635, %r8634, 1;
	shf.r.wrap.b32 	%r9039, %r8634, %r8635, 1;
	mov.b64 	%rd1221, {%r9039, %r9038};
	shf.r.wrap.b32 	%r9040, %r8635, %r8634, 8;
	shf.r.wrap.b32 	%r9041, %r8634, %r8635, 8;
	mov.b64 	%rd1222, {%r9041, %r9040};
	shr.u64 	%rd1223, %rd633, 7;
	xor.b64  	%rd1224, %rd1221, %rd1223;
	xor.b64  	%rd1225, %rd1224, %rd1222;
	add.s64 	%rd1226, %rd737, %rd620;
	add.s64 	%rd1227, %rd1226, %rd1220;
	add.s64 	%rd1228, %rd1227, %rd1225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9042,%dummy}, %rd1215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9043}, %rd1215;
	}
	shf.r.wrap.b32 	%r9044, %r9043, %r9042, 19;
	shf.r.wrap.b32 	%r9045, %r9042, %r9043, 19;
	mov.b64 	%rd1229, {%r9045, %r9044};
	shf.l.wrap.b32 	%r9046, %r9042, %r9043, 3;
	shf.l.wrap.b32 	%r9047, %r9043, %r9042, 3;
	mov.b64 	%rd1230, {%r9047, %r9046};
	shr.u64 	%rd1231, %rd1215, 6;
	xor.b64  	%rd1232, %rd1229, %rd1231;
	xor.b64  	%rd1233, %rd1232, %rd1230;
	shf.r.wrap.b32 	%r9048, %r8647, %r8646, 1;
	shf.r.wrap.b32 	%r9049, %r8646, %r8647, 1;
	mov.b64 	%rd1234, {%r9049, %r9048};
	shf.r.wrap.b32 	%r9050, %r8647, %r8646, 8;
	shf.r.wrap.b32 	%r9051, %r8646, %r8647, 8;
	mov.b64 	%rd1235, {%r9051, %r9050};
	shr.u64 	%rd1236, %rd646, 7;
	xor.b64  	%rd1237, %rd1234, %rd1236;
	xor.b64  	%rd1238, %rd1237, %rd1235;
	add.s64 	%rd1239, %rd750, %rd633;
	add.s64 	%rd1240, %rd1239, %rd1233;
	add.s64 	%rd1241, %rd1240, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9052,%dummy}, %rd1228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9053}, %rd1228;
	}
	shf.r.wrap.b32 	%r9054, %r9053, %r9052, 19;
	shf.r.wrap.b32 	%r9055, %r9052, %r9053, 19;
	mov.b64 	%rd1242, {%r9055, %r9054};
	shf.l.wrap.b32 	%r9056, %r9052, %r9053, 3;
	shf.l.wrap.b32 	%r9057, %r9053, %r9052, 3;
	mov.b64 	%rd1243, {%r9057, %r9056};
	shr.u64 	%rd1244, %rd1228, 6;
	xor.b64  	%rd1245, %rd1242, %rd1244;
	xor.b64  	%rd1246, %rd1245, %rd1243;
	shf.r.wrap.b32 	%r9058, %r8659, %r8658, 1;
	shf.r.wrap.b32 	%r9059, %r8658, %r8659, 1;
	mov.b64 	%rd1247, {%r9059, %r9058};
	shf.r.wrap.b32 	%r9060, %r8659, %r8658, 8;
	shf.r.wrap.b32 	%r9061, %r8658, %r8659, 8;
	mov.b64 	%rd1248, {%r9061, %r9060};
	shr.u64 	%rd1249, %rd659, 7;
	xor.b64  	%rd1250, %rd1247, %rd1249;
	xor.b64  	%rd1251, %rd1250, %rd1248;
	add.s64 	%rd1252, %rd763, %rd646;
	add.s64 	%rd1253, %rd1252, %rd1246;
	add.s64 	%rd1254, %rd1253, %rd1251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9062,%dummy}, %rd1241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9063}, %rd1241;
	}
	shf.r.wrap.b32 	%r9064, %r9063, %r9062, 19;
	shf.r.wrap.b32 	%r9065, %r9062, %r9063, 19;
	mov.b64 	%rd1255, {%r9065, %r9064};
	shf.l.wrap.b32 	%r9066, %r9062, %r9063, 3;
	shf.l.wrap.b32 	%r9067, %r9063, %r9062, 3;
	mov.b64 	%rd1256, {%r9067, %r9066};
	shr.u64 	%rd1257, %rd1241, 6;
	xor.b64  	%rd1258, %rd1255, %rd1257;
	xor.b64  	%rd1259, %rd1258, %rd1256;
	shf.r.wrap.b32 	%r9068, %r8671, %r8670, 1;
	shf.r.wrap.b32 	%r9069, %r8670, %r8671, 1;
	mov.b64 	%rd1260, {%r9069, %r9068};
	shf.r.wrap.b32 	%r9070, %r8671, %r8670, 8;
	shf.r.wrap.b32 	%r9071, %r8670, %r8671, 8;
	mov.b64 	%rd1261, {%r9071, %r9070};
	shr.u64 	%rd1262, %rd672, 7;
	xor.b64  	%rd1263, %rd1260, %rd1262;
	xor.b64  	%rd1264, %rd1263, %rd1261;
	add.s64 	%rd1265, %rd1176, %rd659;
	add.s64 	%rd1266, %rd1265, %rd1259;
	add.s64 	%rd1267, %rd1266, %rd1264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9072,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9073}, %rd1254;
	}
	shf.r.wrap.b32 	%r9074, %r9073, %r9072, 19;
	shf.r.wrap.b32 	%r9075, %r9072, %r9073, 19;
	mov.b64 	%rd1268, {%r9075, %r9074};
	shf.l.wrap.b32 	%r9076, %r9072, %r9073, 3;
	shf.l.wrap.b32 	%r9077, %r9073, %r9072, 3;
	mov.b64 	%rd1269, {%r9077, %r9076};
	shr.u64 	%rd1270, %rd1254, 6;
	xor.b64  	%rd1271, %rd1268, %rd1270;
	xor.b64  	%rd1272, %rd1271, %rd1269;
	shf.r.wrap.b32 	%r9078, %r8683, %r8682, 1;
	shf.r.wrap.b32 	%r9079, %r8682, %r8683, 1;
	mov.b64 	%rd1273, {%r9079, %r9078};
	shf.r.wrap.b32 	%r9080, %r8683, %r8682, 8;
	shf.r.wrap.b32 	%r9081, %r8682, %r8683, 8;
	mov.b64 	%rd1274, {%r9081, %r9080};
	shr.u64 	%rd1275, %rd685, 7;
	xor.b64  	%rd1276, %rd1273, %rd1275;
	xor.b64  	%rd1277, %rd1276, %rd1274;
	add.s64 	%rd1278, %rd1189, %rd672;
	add.s64 	%rd1279, %rd1278, %rd1272;
	add.s64 	%rd1280, %rd1279, %rd1277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9082,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9083}, %rd1267;
	}
	shf.r.wrap.b32 	%r9084, %r9083, %r9082, 19;
	shf.r.wrap.b32 	%r9085, %r9082, %r9083, 19;
	mov.b64 	%rd1281, {%r9085, %r9084};
	shf.l.wrap.b32 	%r9086, %r9082, %r9083, 3;
	shf.l.wrap.b32 	%r9087, %r9083, %r9082, 3;
	mov.b64 	%rd1282, {%r9087, %r9086};
	shr.u64 	%rd1283, %rd1267, 6;
	xor.b64  	%rd1284, %rd1281, %rd1283;
	xor.b64  	%rd1285, %rd1284, %rd1282;
	shf.r.wrap.b32 	%r9088, %r8695, %r8694, 1;
	shf.r.wrap.b32 	%r9089, %r8694, %r8695, 1;
	mov.b64 	%rd1286, {%r9089, %r9088};
	shf.r.wrap.b32 	%r9090, %r8695, %r8694, 8;
	shf.r.wrap.b32 	%r9091, %r8694, %r8695, 8;
	mov.b64 	%rd1287, {%r9091, %r9090};
	shr.u64 	%rd1288, %rd698, 7;
	xor.b64  	%rd1289, %rd1286, %rd1288;
	xor.b64  	%rd1290, %rd1289, %rd1287;
	add.s64 	%rd1291, %rd1202, %rd685;
	add.s64 	%rd1292, %rd1291, %rd1285;
	add.s64 	%rd1293, %rd1292, %rd1290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9092,%dummy}, %rd1280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9093}, %rd1280;
	}
	shf.r.wrap.b32 	%r9094, %r9093, %r9092, 19;
	shf.r.wrap.b32 	%r9095, %r9092, %r9093, 19;
	mov.b64 	%rd1294, {%r9095, %r9094};
	shf.l.wrap.b32 	%r9096, %r9092, %r9093, 3;
	shf.l.wrap.b32 	%r9097, %r9093, %r9092, 3;
	mov.b64 	%rd1295, {%r9097, %r9096};
	shr.u64 	%rd1296, %rd1280, 6;
	xor.b64  	%rd1297, %rd1294, %rd1296;
	xor.b64  	%rd1298, %rd1297, %rd1295;
	shf.r.wrap.b32 	%r9098, %r8707, %r8706, 1;
	shf.r.wrap.b32 	%r9099, %r8706, %r8707, 1;
	mov.b64 	%rd1299, {%r9099, %r9098};
	shf.r.wrap.b32 	%r9100, %r8707, %r8706, 8;
	shf.r.wrap.b32 	%r9101, %r8706, %r8707, 8;
	mov.b64 	%rd1300, {%r9101, %r9100};
	shr.u64 	%rd1301, %rd711, 7;
	xor.b64  	%rd1302, %rd1299, %rd1301;
	xor.b64  	%rd1303, %rd1302, %rd1300;
	add.s64 	%rd1304, %rd1215, %rd698;
	add.s64 	%rd1305, %rd1304, %rd1298;
	add.s64 	%rd1306, %rd1305, %rd1303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9102,%dummy}, %rd1293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9103}, %rd1293;
	}
	shf.r.wrap.b32 	%r9104, %r9103, %r9102, 19;
	shf.r.wrap.b32 	%r9105, %r9102, %r9103, 19;
	mov.b64 	%rd1307, {%r9105, %r9104};
	shf.l.wrap.b32 	%r9106, %r9102, %r9103, 3;
	shf.l.wrap.b32 	%r9107, %r9103, %r9102, 3;
	mov.b64 	%rd1308, {%r9107, %r9106};
	shr.u64 	%rd1309, %rd1293, 6;
	xor.b64  	%rd1310, %rd1307, %rd1309;
	xor.b64  	%rd1311, %rd1310, %rd1308;
	shf.r.wrap.b32 	%r9108, %r8717, %r8716, 1;
	shf.r.wrap.b32 	%r9109, %r8716, %r8717, 1;
	mov.b64 	%rd1312, {%r9109, %r9108};
	shf.r.wrap.b32 	%r9110, %r8717, %r8716, 8;
	shf.r.wrap.b32 	%r9111, %r8716, %r8717, 8;
	mov.b64 	%rd1313, {%r9111, %r9110};
	shr.u64 	%rd1314, %rd724, 7;
	xor.b64  	%rd1315, %rd1312, %rd1314;
	xor.b64  	%rd1316, %rd1315, %rd1313;
	add.s64 	%rd1317, %rd1228, %rd711;
	add.s64 	%rd1318, %rd1317, %rd1311;
	add.s64 	%rd1319, %rd1318, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9112,%dummy}, %rd1306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9113}, %rd1306;
	}
	shf.r.wrap.b32 	%r9114, %r9113, %r9112, 19;
	shf.r.wrap.b32 	%r9115, %r9112, %r9113, 19;
	mov.b64 	%rd1320, {%r9115, %r9114};
	shf.l.wrap.b32 	%r9116, %r9112, %r9113, 3;
	shf.l.wrap.b32 	%r9117, %r9113, %r9112, 3;
	mov.b64 	%rd1321, {%r9117, %r9116};
	shr.u64 	%rd1322, %rd1306, 6;
	xor.b64  	%rd1323, %rd1320, %rd1322;
	xor.b64  	%rd1324, %rd1323, %rd1321;
	shf.r.wrap.b32 	%r9118, %r8727, %r8726, 1;
	shf.r.wrap.b32 	%r9119, %r8726, %r8727, 1;
	mov.b64 	%rd1325, {%r9119, %r9118};
	shf.r.wrap.b32 	%r9120, %r8727, %r8726, 8;
	shf.r.wrap.b32 	%r9121, %r8726, %r8727, 8;
	mov.b64 	%rd1326, {%r9121, %r9120};
	shr.u64 	%rd1327, %rd737, 7;
	xor.b64  	%rd1328, %rd1325, %rd1327;
	xor.b64  	%rd1329, %rd1328, %rd1326;
	add.s64 	%rd1330, %rd1241, %rd724;
	add.s64 	%rd1331, %rd1330, %rd1324;
	add.s64 	%rd1332, %rd1331, %rd1329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9122,%dummy}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9123}, %rd1319;
	}
	shf.r.wrap.b32 	%r9124, %r9123, %r9122, 19;
	shf.r.wrap.b32 	%r9125, %r9122, %r9123, 19;
	mov.b64 	%rd1333, {%r9125, %r9124};
	shf.l.wrap.b32 	%r9126, %r9122, %r9123, 3;
	shf.l.wrap.b32 	%r9127, %r9123, %r9122, 3;
	mov.b64 	%rd1334, {%r9127, %r9126};
	shr.u64 	%rd1335, %rd1319, 6;
	xor.b64  	%rd1336, %rd1333, %rd1335;
	xor.b64  	%rd1337, %rd1336, %rd1334;
	shf.r.wrap.b32 	%r9128, %r8993, %r8992, 1;
	shf.r.wrap.b32 	%r9129, %r8992, %r8993, 1;
	mov.b64 	%rd1338, {%r9129, %r9128};
	shf.r.wrap.b32 	%r9130, %r8993, %r8992, 8;
	shf.r.wrap.b32 	%r9131, %r8992, %r8993, 8;
	mov.b64 	%rd1339, {%r9131, %r9130};
	shr.u64 	%rd1340, %rd750, 7;
	xor.b64  	%rd1341, %rd1338, %rd1340;
	xor.b64  	%rd1342, %rd1341, %rd1339;
	add.s64 	%rd1343, %rd1254, %rd737;
	add.s64 	%rd1344, %rd1343, %rd1337;
	add.s64 	%rd1345, %rd1344, %rd1342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9132,%dummy}, %rd1332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9133}, %rd1332;
	}
	shf.r.wrap.b32 	%r9134, %r9133, %r9132, 19;
	shf.r.wrap.b32 	%r9135, %r9132, %r9133, 19;
	mov.b64 	%rd1346, {%r9135, %r9134};
	shf.l.wrap.b32 	%r9136, %r9132, %r9133, 3;
	shf.l.wrap.b32 	%r9137, %r9133, %r9132, 3;
	mov.b64 	%rd1347, {%r9137, %r9136};
	shr.u64 	%rd1348, %rd1332, 6;
	xor.b64  	%rd1349, %rd1346, %rd1348;
	xor.b64  	%rd1350, %rd1349, %rd1347;
	shf.r.wrap.b32 	%r9138, %r9003, %r9002, 1;
	shf.r.wrap.b32 	%r9139, %r9002, %r9003, 1;
	mov.b64 	%rd1351, {%r9139, %r9138};
	shf.r.wrap.b32 	%r9140, %r9003, %r9002, 8;
	shf.r.wrap.b32 	%r9141, %r9002, %r9003, 8;
	mov.b64 	%rd1352, {%r9141, %r9140};
	shr.u64 	%rd1353, %rd763, 7;
	xor.b64  	%rd1354, %rd1351, %rd1353;
	xor.b64  	%rd1355, %rd1354, %rd1352;
	add.s64 	%rd1356, %rd1267, %rd750;
	add.s64 	%rd1357, %rd1356, %rd1350;
	add.s64 	%rd1358, %rd1357, %rd1355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9142,%dummy}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9143}, %rd1345;
	}
	shf.r.wrap.b32 	%r9144, %r9143, %r9142, 19;
	shf.r.wrap.b32 	%r9145, %r9142, %r9143, 19;
	mov.b64 	%rd1359, {%r9145, %r9144};
	shf.l.wrap.b32 	%r9146, %r9142, %r9143, 3;
	shf.l.wrap.b32 	%r9147, %r9143, %r9142, 3;
	mov.b64 	%rd1360, {%r9147, %r9146};
	shr.u64 	%rd1361, %rd1345, 6;
	xor.b64  	%rd1362, %rd1359, %rd1361;
	xor.b64  	%rd1363, %rd1362, %rd1360;
	shf.r.wrap.b32 	%r9148, %r9013, %r9012, 1;
	shf.r.wrap.b32 	%r9149, %r9012, %r9013, 1;
	mov.b64 	%rd1364, {%r9149, %r9148};
	shf.r.wrap.b32 	%r9150, %r9013, %r9012, 8;
	shf.r.wrap.b32 	%r9151, %r9012, %r9013, 8;
	mov.b64 	%rd1365, {%r9151, %r9150};
	shr.u64 	%rd1366, %rd1176, 7;
	xor.b64  	%rd1367, %rd1364, %rd1366;
	xor.b64  	%rd1368, %rd1367, %rd1365;
	add.s64 	%rd1369, %rd1280, %rd763;
	add.s64 	%rd1370, %rd1369, %rd1363;
	add.s64 	%rd1371, %rd1370, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9152,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9153}, %rd1152;
	}
	shf.r.wrap.b32 	%r9154, %r9153, %r9152, 14;
	shf.r.wrap.b32 	%r9155, %r9152, %r9153, 14;
	mov.b64 	%rd1372, {%r9155, %r9154};
	shf.r.wrap.b32 	%r9156, %r9153, %r9152, 18;
	shf.r.wrap.b32 	%r9157, %r9152, %r9153, 18;
	mov.b64 	%rd1373, {%r9157, %r9156};
	xor.b64  	%rd1374, %rd1373, %rd1372;
	shf.l.wrap.b32 	%r9158, %r9152, %r9153, 23;
	shf.l.wrap.b32 	%r9159, %r9153, %r9152, 23;
	mov.b64 	%rd1375, {%r9159, %r9158};
	xor.b64  	%rd1376, %rd1374, %rd1375;
	xor.b64  	%rd1377, %rd1127, %rd1102;
	and.b64  	%rd1378, %rd1152, %rd1377;
	xor.b64  	%rd1379, %rd1378, %rd1102;
	add.s64 	%rd1380, %rd1379, %rd1077;
	add.s64 	%rd1381, %rd1380, %rd1176;
	add.s64 	%rd1383, %rd1381, %rd34;
	add.s64 	%rd1384, %rd1383, %rd1376;
	add.s64 	%rd1385, %rd1384, %rd1088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9160,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9161}, %rd1163;
	}
	shf.r.wrap.b32 	%r9162, %r9161, %r9160, 28;
	shf.r.wrap.b32 	%r9163, %r9160, %r9161, 28;
	mov.b64 	%rd1386, {%r9163, %r9162};
	shf.l.wrap.b32 	%r9164, %r9160, %r9161, 30;
	shf.l.wrap.b32 	%r9165, %r9161, %r9160, 30;
	mov.b64 	%rd1387, {%r9165, %r9164};
	xor.b64  	%rd1388, %rd1387, %rd1386;
	shf.l.wrap.b32 	%r9166, %r9160, %r9161, 25;
	shf.l.wrap.b32 	%r9167, %r9161, %r9160, 25;
	mov.b64 	%rd1389, {%r9167, %r9166};
	xor.b64  	%rd1390, %rd1388, %rd1389;
	xor.b64  	%rd1391, %rd1163, %rd1113;
	xor.b64  	%rd1392, %rd1163, %rd1138;
	and.b64  	%rd1393, %rd1392, %rd1391;
	xor.b64  	%rd1394, %rd1393, %rd1163;
	add.s64 	%rd1395, %rd1384, %rd1394;
	add.s64 	%rd1396, %rd1395, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9168,%dummy}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9169}, %rd1385;
	}
	shf.r.wrap.b32 	%r9170, %r9169, %r9168, 14;
	shf.r.wrap.b32 	%r9171, %r9168, %r9169, 14;
	mov.b64 	%rd1397, {%r9171, %r9170};
	shf.r.wrap.b32 	%r9172, %r9169, %r9168, 18;
	shf.r.wrap.b32 	%r9173, %r9168, %r9169, 18;
	mov.b64 	%rd1398, {%r9173, %r9172};
	xor.b64  	%rd1399, %rd1398, %rd1397;
	shf.l.wrap.b32 	%r9174, %r9168, %r9169, 23;
	shf.l.wrap.b32 	%r9175, %r9169, %r9168, 23;
	mov.b64 	%rd1400, {%r9175, %r9174};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	xor.b64  	%rd1402, %rd1152, %rd1127;
	and.b64  	%rd1403, %rd1385, %rd1402;
	xor.b64  	%rd1404, %rd1403, %rd1127;
	add.s64 	%rd1405, %rd1189, %rd1102;
	add.s64 	%rd1407, %rd1405, %rd35;
	add.s64 	%rd1408, %rd1407, %rd1404;
	add.s64 	%rd1409, %rd1408, %rd1401;
	add.s64 	%rd1410, %rd1409, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9176,%dummy}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9177}, %rd1396;
	}
	shf.r.wrap.b32 	%r9178, %r9177, %r9176, 28;
	shf.r.wrap.b32 	%r9179, %r9176, %r9177, 28;
	mov.b64 	%rd1411, {%r9179, %r9178};
	shf.l.wrap.b32 	%r9180, %r9176, %r9177, 30;
	shf.l.wrap.b32 	%r9181, %r9177, %r9176, 30;
	mov.b64 	%rd1412, {%r9181, %r9180};
	xor.b64  	%rd1413, %rd1412, %rd1411;
	shf.l.wrap.b32 	%r9182, %r9176, %r9177, 25;
	shf.l.wrap.b32 	%r9183, %r9177, %r9176, 25;
	mov.b64 	%rd1414, {%r9183, %r9182};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	xor.b64  	%rd1416, %rd1396, %rd1138;
	xor.b64  	%rd1417, %rd1396, %rd1163;
	and.b64  	%rd1418, %rd1417, %rd1416;
	xor.b64  	%rd1419, %rd1418, %rd1396;
	add.s64 	%rd1420, %rd1409, %rd1419;
	add.s64 	%rd1421, %rd1420, %rd1415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9184,%dummy}, %rd1410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9185}, %rd1410;
	}
	shf.r.wrap.b32 	%r9186, %r9185, %r9184, 14;
	shf.r.wrap.b32 	%r9187, %r9184, %r9185, 14;
	mov.b64 	%rd1422, {%r9187, %r9186};
	shf.r.wrap.b32 	%r9188, %r9185, %r9184, 18;
	shf.r.wrap.b32 	%r9189, %r9184, %r9185, 18;
	mov.b64 	%rd1423, {%r9189, %r9188};
	xor.b64  	%rd1424, %rd1423, %rd1422;
	shf.l.wrap.b32 	%r9190, %r9184, %r9185, 23;
	shf.l.wrap.b32 	%r9191, %r9185, %r9184, 23;
	mov.b64 	%rd1425, {%r9191, %r9190};
	xor.b64  	%rd1426, %rd1424, %rd1425;
	xor.b64  	%rd1427, %rd1385, %rd1152;
	and.b64  	%rd1428, %rd1410, %rd1427;
	xor.b64  	%rd1429, %rd1428, %rd1152;
	add.s64 	%rd1430, %rd1202, %rd1127;
	add.s64 	%rd1432, %rd1430, %rd36;
	add.s64 	%rd1433, %rd1432, %rd1429;
	add.s64 	%rd1434, %rd1433, %rd1426;
	add.s64 	%rd1435, %rd1434, %rd1138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9192,%dummy}, %rd1421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9193}, %rd1421;
	}
	shf.r.wrap.b32 	%r9194, %r9193, %r9192, 28;
	shf.r.wrap.b32 	%r9195, %r9192, %r9193, 28;
	mov.b64 	%rd1436, {%r9195, %r9194};
	shf.l.wrap.b32 	%r9196, %r9192, %r9193, 30;
	shf.l.wrap.b32 	%r9197, %r9193, %r9192, 30;
	mov.b64 	%rd1437, {%r9197, %r9196};
	xor.b64  	%rd1438, %rd1437, %rd1436;
	shf.l.wrap.b32 	%r9198, %r9192, %r9193, 25;
	shf.l.wrap.b32 	%r9199, %r9193, %r9192, 25;
	mov.b64 	%rd1439, {%r9199, %r9198};
	xor.b64  	%rd1440, %rd1438, %rd1439;
	xor.b64  	%rd1441, %rd1421, %rd1163;
	xor.b64  	%rd1442, %rd1421, %rd1396;
	and.b64  	%rd1443, %rd1442, %rd1441;
	xor.b64  	%rd1444, %rd1443, %rd1421;
	add.s64 	%rd1445, %rd1434, %rd1444;
	add.s64 	%rd1446, %rd1445, %rd1440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9200,%dummy}, %rd1435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9201}, %rd1435;
	}
	shf.r.wrap.b32 	%r9202, %r9201, %r9200, 14;
	shf.r.wrap.b32 	%r9203, %r9200, %r9201, 14;
	mov.b64 	%rd1447, {%r9203, %r9202};
	shf.r.wrap.b32 	%r9204, %r9201, %r9200, 18;
	shf.r.wrap.b32 	%r9205, %r9200, %r9201, 18;
	mov.b64 	%rd1448, {%r9205, %r9204};
	xor.b64  	%rd1449, %rd1448, %rd1447;
	shf.l.wrap.b32 	%r9206, %r9200, %r9201, 23;
	shf.l.wrap.b32 	%r9207, %r9201, %r9200, 23;
	mov.b64 	%rd1450, {%r9207, %r9206};
	xor.b64  	%rd1451, %rd1449, %rd1450;
	xor.b64  	%rd1452, %rd1410, %rd1385;
	and.b64  	%rd1453, %rd1435, %rd1452;
	xor.b64  	%rd1454, %rd1453, %rd1385;
	add.s64 	%rd1455, %rd1215, %rd1152;
	add.s64 	%rd1457, %rd1455, %rd37;
	add.s64 	%rd1458, %rd1457, %rd1454;
	add.s64 	%rd1459, %rd1458, %rd1451;
	add.s64 	%rd1460, %rd1459, %rd1163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9208,%dummy}, %rd1446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9209}, %rd1446;
	}
	shf.r.wrap.b32 	%r9210, %r9209, %r9208, 28;
	shf.r.wrap.b32 	%r9211, %r9208, %r9209, 28;
	mov.b64 	%rd1461, {%r9211, %r9210};
	shf.l.wrap.b32 	%r9212, %r9208, %r9209, 30;
	shf.l.wrap.b32 	%r9213, %r9209, %r9208, 30;
	mov.b64 	%rd1462, {%r9213, %r9212};
	xor.b64  	%rd1463, %rd1462, %rd1461;
	shf.l.wrap.b32 	%r9214, %r9208, %r9209, 25;
	shf.l.wrap.b32 	%r9215, %r9209, %r9208, 25;
	mov.b64 	%rd1464, {%r9215, %r9214};
	xor.b64  	%rd1465, %rd1463, %rd1464;
	xor.b64  	%rd1466, %rd1446, %rd1396;
	xor.b64  	%rd1467, %rd1446, %rd1421;
	and.b64  	%rd1468, %rd1467, %rd1466;
	xor.b64  	%rd1469, %rd1468, %rd1446;
	add.s64 	%rd1470, %rd1459, %rd1469;
	add.s64 	%rd1471, %rd1470, %rd1465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9216,%dummy}, %rd1460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9217}, %rd1460;
	}
	shf.r.wrap.b32 	%r9218, %r9217, %r9216, 14;
	shf.r.wrap.b32 	%r9219, %r9216, %r9217, 14;
	mov.b64 	%rd1472, {%r9219, %r9218};
	shf.r.wrap.b32 	%r9220, %r9217, %r9216, 18;
	shf.r.wrap.b32 	%r9221, %r9216, %r9217, 18;
	mov.b64 	%rd1473, {%r9221, %r9220};
	xor.b64  	%rd1474, %rd1473, %rd1472;
	shf.l.wrap.b32 	%r9222, %r9216, %r9217, 23;
	shf.l.wrap.b32 	%r9223, %r9217, %r9216, 23;
	mov.b64 	%rd1475, {%r9223, %r9222};
	xor.b64  	%rd1476, %rd1474, %rd1475;
	xor.b64  	%rd1477, %rd1435, %rd1410;
	and.b64  	%rd1478, %rd1460, %rd1477;
	xor.b64  	%rd1479, %rd1478, %rd1410;
	add.s64 	%rd1480, %rd1385, %rd1228;
	add.s64 	%rd1482, %rd1480, %rd38;
	add.s64 	%rd1483, %rd1482, %rd1479;
	add.s64 	%rd1484, %rd1483, %rd1476;
	add.s64 	%rd1485, %rd1484, %rd1396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9224,%dummy}, %rd1471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9225}, %rd1471;
	}
	shf.r.wrap.b32 	%r9226, %r9225, %r9224, 28;
	shf.r.wrap.b32 	%r9227, %r9224, %r9225, 28;
	mov.b64 	%rd1486, {%r9227, %r9226};
	shf.l.wrap.b32 	%r9228, %r9224, %r9225, 30;
	shf.l.wrap.b32 	%r9229, %r9225, %r9224, 30;
	mov.b64 	%rd1487, {%r9229, %r9228};
	xor.b64  	%rd1488, %rd1487, %rd1486;
	shf.l.wrap.b32 	%r9230, %r9224, %r9225, 25;
	shf.l.wrap.b32 	%r9231, %r9225, %r9224, 25;
	mov.b64 	%rd1489, {%r9231, %r9230};
	xor.b64  	%rd1490, %rd1488, %rd1489;
	xor.b64  	%rd1491, %rd1471, %rd1421;
	xor.b64  	%rd1492, %rd1471, %rd1446;
	and.b64  	%rd1493, %rd1492, %rd1491;
	xor.b64  	%rd1494, %rd1493, %rd1471;
	add.s64 	%rd1495, %rd1484, %rd1494;
	add.s64 	%rd1496, %rd1495, %rd1490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9232,%dummy}, %rd1485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9233}, %rd1485;
	}
	shf.r.wrap.b32 	%r9234, %r9233, %r9232, 14;
	shf.r.wrap.b32 	%r9235, %r9232, %r9233, 14;
	mov.b64 	%rd1497, {%r9235, %r9234};
	shf.r.wrap.b32 	%r9236, %r9233, %r9232, 18;
	shf.r.wrap.b32 	%r9237, %r9232, %r9233, 18;
	mov.b64 	%rd1498, {%r9237, %r9236};
	xor.b64  	%rd1499, %rd1498, %rd1497;
	shf.l.wrap.b32 	%r9238, %r9232, %r9233, 23;
	shf.l.wrap.b32 	%r9239, %r9233, %r9232, 23;
	mov.b64 	%rd1500, {%r9239, %r9238};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	xor.b64  	%rd1502, %rd1460, %rd1435;
	and.b64  	%rd1503, %rd1485, %rd1502;
	xor.b64  	%rd1504, %rd1503, %rd1435;
	add.s64 	%rd1505, %rd1410, %rd1241;
	add.s64 	%rd1507, %rd1505, %rd39;
	add.s64 	%rd1508, %rd1507, %rd1504;
	add.s64 	%rd1509, %rd1508, %rd1501;
	add.s64 	%rd1510, %rd1509, %rd1421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9240,%dummy}, %rd1496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9241}, %rd1496;
	}
	shf.r.wrap.b32 	%r9242, %r9241, %r9240, 28;
	shf.r.wrap.b32 	%r9243, %r9240, %r9241, 28;
	mov.b64 	%rd1511, {%r9243, %r9242};
	shf.l.wrap.b32 	%r9244, %r9240, %r9241, 30;
	shf.l.wrap.b32 	%r9245, %r9241, %r9240, 30;
	mov.b64 	%rd1512, {%r9245, %r9244};
	xor.b64  	%rd1513, %rd1512, %rd1511;
	shf.l.wrap.b32 	%r9246, %r9240, %r9241, 25;
	shf.l.wrap.b32 	%r9247, %r9241, %r9240, 25;
	mov.b64 	%rd1514, {%r9247, %r9246};
	xor.b64  	%rd1515, %rd1513, %rd1514;
	xor.b64  	%rd1516, %rd1496, %rd1446;
	xor.b64  	%rd1517, %rd1496, %rd1471;
	and.b64  	%rd1518, %rd1517, %rd1516;
	xor.b64  	%rd1519, %rd1518, %rd1496;
	add.s64 	%rd1520, %rd1509, %rd1519;
	add.s64 	%rd1521, %rd1520, %rd1515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9248,%dummy}, %rd1510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9249}, %rd1510;
	}
	shf.r.wrap.b32 	%r9250, %r9249, %r9248, 14;
	shf.r.wrap.b32 	%r9251, %r9248, %r9249, 14;
	mov.b64 	%rd1522, {%r9251, %r9250};
	shf.r.wrap.b32 	%r9252, %r9249, %r9248, 18;
	shf.r.wrap.b32 	%r9253, %r9248, %r9249, 18;
	mov.b64 	%rd1523, {%r9253, %r9252};
	xor.b64  	%rd1524, %rd1523, %rd1522;
	shf.l.wrap.b32 	%r9254, %r9248, %r9249, 23;
	shf.l.wrap.b32 	%r9255, %r9249, %r9248, 23;
	mov.b64 	%rd1525, {%r9255, %r9254};
	xor.b64  	%rd1526, %rd1524, %rd1525;
	xor.b64  	%rd1527, %rd1485, %rd1460;
	and.b64  	%rd1528, %rd1510, %rd1527;
	xor.b64  	%rd1529, %rd1528, %rd1460;
	add.s64 	%rd1530, %rd1435, %rd1254;
	add.s64 	%rd1532, %rd1530, %rd40;
	add.s64 	%rd1533, %rd1532, %rd1529;
	add.s64 	%rd1534, %rd1533, %rd1526;
	add.s64 	%rd1535, %rd1534, %rd1446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9256,%dummy}, %rd1521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9257}, %rd1521;
	}
	shf.r.wrap.b32 	%r9258, %r9257, %r9256, 28;
	shf.r.wrap.b32 	%r9259, %r9256, %r9257, 28;
	mov.b64 	%rd1536, {%r9259, %r9258};
	shf.l.wrap.b32 	%r9260, %r9256, %r9257, 30;
	shf.l.wrap.b32 	%r9261, %r9257, %r9256, 30;
	mov.b64 	%rd1537, {%r9261, %r9260};
	xor.b64  	%rd1538, %rd1537, %rd1536;
	shf.l.wrap.b32 	%r9262, %r9256, %r9257, 25;
	shf.l.wrap.b32 	%r9263, %r9257, %r9256, 25;
	mov.b64 	%rd1539, {%r9263, %r9262};
	xor.b64  	%rd1540, %rd1538, %rd1539;
	xor.b64  	%rd1541, %rd1521, %rd1471;
	xor.b64  	%rd1542, %rd1521, %rd1496;
	and.b64  	%rd1543, %rd1542, %rd1541;
	xor.b64  	%rd1544, %rd1543, %rd1521;
	add.s64 	%rd1545, %rd1534, %rd1544;
	add.s64 	%rd1546, %rd1545, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9264,%dummy}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9265}, %rd1535;
	}
	shf.r.wrap.b32 	%r9266, %r9265, %r9264, 14;
	shf.r.wrap.b32 	%r9267, %r9264, %r9265, 14;
	mov.b64 	%rd1547, {%r9267, %r9266};
	shf.r.wrap.b32 	%r9268, %r9265, %r9264, 18;
	shf.r.wrap.b32 	%r9269, %r9264, %r9265, 18;
	mov.b64 	%rd1548, {%r9269, %r9268};
	xor.b64  	%rd1549, %rd1548, %rd1547;
	shf.l.wrap.b32 	%r9270, %r9264, %r9265, 23;
	shf.l.wrap.b32 	%r9271, %r9265, %r9264, 23;
	mov.b64 	%rd1550, {%r9271, %r9270};
	xor.b64  	%rd1551, %rd1549, %rd1550;
	xor.b64  	%rd1552, %rd1510, %rd1485;
	and.b64  	%rd1553, %rd1535, %rd1552;
	xor.b64  	%rd1554, %rd1553, %rd1485;
	add.s64 	%rd1555, %rd1460, %rd1267;
	add.s64 	%rd1557, %rd1555, %rd41;
	add.s64 	%rd1558, %rd1557, %rd1554;
	add.s64 	%rd1559, %rd1558, %rd1551;
	add.s64 	%rd1560, %rd1559, %rd1471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9272,%dummy}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9273}, %rd1546;
	}
	shf.r.wrap.b32 	%r9274, %r9273, %r9272, 28;
	shf.r.wrap.b32 	%r9275, %r9272, %r9273, 28;
	mov.b64 	%rd1561, {%r9275, %r9274};
	shf.l.wrap.b32 	%r9276, %r9272, %r9273, 30;
	shf.l.wrap.b32 	%r9277, %r9273, %r9272, 30;
	mov.b64 	%rd1562, {%r9277, %r9276};
	xor.b64  	%rd1563, %rd1562, %rd1561;
	shf.l.wrap.b32 	%r9278, %r9272, %r9273, 25;
	shf.l.wrap.b32 	%r9279, %r9273, %r9272, 25;
	mov.b64 	%rd1564, {%r9279, %r9278};
	xor.b64  	%rd1565, %rd1563, %rd1564;
	xor.b64  	%rd1566, %rd1546, %rd1496;
	xor.b64  	%rd1567, %rd1546, %rd1521;
	and.b64  	%rd1568, %rd1567, %rd1566;
	xor.b64  	%rd1569, %rd1568, %rd1546;
	add.s64 	%rd1570, %rd1559, %rd1569;
	add.s64 	%rd1571, %rd1570, %rd1565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9280,%dummy}, %rd1560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9281}, %rd1560;
	}
	shf.r.wrap.b32 	%r9282, %r9281, %r9280, 14;
	shf.r.wrap.b32 	%r9283, %r9280, %r9281, 14;
	mov.b64 	%rd1572, {%r9283, %r9282};
	shf.r.wrap.b32 	%r9284, %r9281, %r9280, 18;
	shf.r.wrap.b32 	%r9285, %r9280, %r9281, 18;
	mov.b64 	%rd1573, {%r9285, %r9284};
	xor.b64  	%rd1574, %rd1573, %rd1572;
	shf.l.wrap.b32 	%r9286, %r9280, %r9281, 23;
	shf.l.wrap.b32 	%r9287, %r9281, %r9280, 23;
	mov.b64 	%rd1575, {%r9287, %r9286};
	xor.b64  	%rd1576, %rd1574, %rd1575;
	xor.b64  	%rd1577, %rd1535, %rd1510;
	and.b64  	%rd1578, %rd1560, %rd1577;
	xor.b64  	%rd1579, %rd1578, %rd1510;
	add.s64 	%rd1580, %rd1485, %rd1280;
	add.s64 	%rd1582, %rd1580, %rd42;
	add.s64 	%rd1583, %rd1582, %rd1579;
	add.s64 	%rd1584, %rd1583, %rd1576;
	add.s64 	%rd1585, %rd1584, %rd1496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9288,%dummy}, %rd1571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9289}, %rd1571;
	}
	shf.r.wrap.b32 	%r9290, %r9289, %r9288, 28;
	shf.r.wrap.b32 	%r9291, %r9288, %r9289, 28;
	mov.b64 	%rd1586, {%r9291, %r9290};
	shf.l.wrap.b32 	%r9292, %r9288, %r9289, 30;
	shf.l.wrap.b32 	%r9293, %r9289, %r9288, 30;
	mov.b64 	%rd1587, {%r9293, %r9292};
	xor.b64  	%rd1588, %rd1587, %rd1586;
	shf.l.wrap.b32 	%r9294, %r9288, %r9289, 25;
	shf.l.wrap.b32 	%r9295, %r9289, %r9288, 25;
	mov.b64 	%rd1589, {%r9295, %r9294};
	xor.b64  	%rd1590, %rd1588, %rd1589;
	xor.b64  	%rd1591, %rd1571, %rd1521;
	xor.b64  	%rd1592, %rd1571, %rd1546;
	and.b64  	%rd1593, %rd1592, %rd1591;
	xor.b64  	%rd1594, %rd1593, %rd1571;
	add.s64 	%rd1595, %rd1584, %rd1594;
	add.s64 	%rd1596, %rd1595, %rd1590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9296,%dummy}, %rd1585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9297}, %rd1585;
	}
	shf.r.wrap.b32 	%r9298, %r9297, %r9296, 14;
	shf.r.wrap.b32 	%r9299, %r9296, %r9297, 14;
	mov.b64 	%rd1597, {%r9299, %r9298};
	shf.r.wrap.b32 	%r9300, %r9297, %r9296, 18;
	shf.r.wrap.b32 	%r9301, %r9296, %r9297, 18;
	mov.b64 	%rd1598, {%r9301, %r9300};
	xor.b64  	%rd1599, %rd1598, %rd1597;
	shf.l.wrap.b32 	%r9302, %r9296, %r9297, 23;
	shf.l.wrap.b32 	%r9303, %r9297, %r9296, 23;
	mov.b64 	%rd1600, {%r9303, %r9302};
	xor.b64  	%rd1601, %rd1599, %rd1600;
	xor.b64  	%rd1602, %rd1560, %rd1535;
	and.b64  	%rd1603, %rd1585, %rd1602;
	xor.b64  	%rd1604, %rd1603, %rd1535;
	add.s64 	%rd1605, %rd1510, %rd1293;
	add.s64 	%rd1607, %rd1605, %rd43;
	add.s64 	%rd1608, %rd1607, %rd1604;
	add.s64 	%rd1609, %rd1608, %rd1601;
	add.s64 	%rd1610, %rd1609, %rd1521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9304,%dummy}, %rd1596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9305}, %rd1596;
	}
	shf.r.wrap.b32 	%r9306, %r9305, %r9304, 28;
	shf.r.wrap.b32 	%r9307, %r9304, %r9305, 28;
	mov.b64 	%rd1611, {%r9307, %r9306};
	shf.l.wrap.b32 	%r9308, %r9304, %r9305, 30;
	shf.l.wrap.b32 	%r9309, %r9305, %r9304, 30;
	mov.b64 	%rd1612, {%r9309, %r9308};
	xor.b64  	%rd1613, %rd1612, %rd1611;
	shf.l.wrap.b32 	%r9310, %r9304, %r9305, 25;
	shf.l.wrap.b32 	%r9311, %r9305, %r9304, 25;
	mov.b64 	%rd1614, {%r9311, %r9310};
	xor.b64  	%rd1615, %rd1613, %rd1614;
	xor.b64  	%rd1616, %rd1596, %rd1546;
	xor.b64  	%rd1617, %rd1596, %rd1571;
	and.b64  	%rd1618, %rd1617, %rd1616;
	xor.b64  	%rd1619, %rd1618, %rd1596;
	add.s64 	%rd1620, %rd1609, %rd1619;
	add.s64 	%rd1621, %rd1620, %rd1615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9312,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9313}, %rd1610;
	}
	shf.r.wrap.b32 	%r9314, %r9313, %r9312, 14;
	shf.r.wrap.b32 	%r9315, %r9312, %r9313, 14;
	mov.b64 	%rd1622, {%r9315, %r9314};
	shf.r.wrap.b32 	%r9316, %r9313, %r9312, 18;
	shf.r.wrap.b32 	%r9317, %r9312, %r9313, 18;
	mov.b64 	%rd1623, {%r9317, %r9316};
	xor.b64  	%rd1624, %rd1623, %rd1622;
	shf.l.wrap.b32 	%r9318, %r9312, %r9313, 23;
	shf.l.wrap.b32 	%r9319, %r9313, %r9312, 23;
	mov.b64 	%rd1625, {%r9319, %r9318};
	xor.b64  	%rd1626, %rd1624, %rd1625;
	xor.b64  	%rd1627, %rd1585, %rd1560;
	and.b64  	%rd1628, %rd1610, %rd1627;
	xor.b64  	%rd1629, %rd1628, %rd1560;
	add.s64 	%rd1630, %rd1535, %rd1306;
	add.s64 	%rd1632, %rd1630, %rd44;
	add.s64 	%rd1633, %rd1632, %rd1629;
	add.s64 	%rd1634, %rd1633, %rd1626;
	add.s64 	%rd1635, %rd1634, %rd1546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9320,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9321}, %rd1621;
	}
	shf.r.wrap.b32 	%r9322, %r9321, %r9320, 28;
	shf.r.wrap.b32 	%r9323, %r9320, %r9321, 28;
	mov.b64 	%rd1636, {%r9323, %r9322};
	shf.l.wrap.b32 	%r9324, %r9320, %r9321, 30;
	shf.l.wrap.b32 	%r9325, %r9321, %r9320, 30;
	mov.b64 	%rd1637, {%r9325, %r9324};
	xor.b64  	%rd1638, %rd1637, %rd1636;
	shf.l.wrap.b32 	%r9326, %r9320, %r9321, 25;
	shf.l.wrap.b32 	%r9327, %r9321, %r9320, 25;
	mov.b64 	%rd1639, {%r9327, %r9326};
	xor.b64  	%rd1640, %rd1638, %rd1639;
	xor.b64  	%rd1641, %rd1621, %rd1571;
	xor.b64  	%rd1642, %rd1621, %rd1596;
	and.b64  	%rd1643, %rd1642, %rd1641;
	xor.b64  	%rd1644, %rd1643, %rd1621;
	add.s64 	%rd1645, %rd1634, %rd1644;
	add.s64 	%rd1646, %rd1645, %rd1640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9328,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9329}, %rd1635;
	}
	shf.r.wrap.b32 	%r9330, %r9329, %r9328, 14;
	shf.r.wrap.b32 	%r9331, %r9328, %r9329, 14;
	mov.b64 	%rd1647, {%r9331, %r9330};
	shf.r.wrap.b32 	%r9332, %r9329, %r9328, 18;
	shf.r.wrap.b32 	%r9333, %r9328, %r9329, 18;
	mov.b64 	%rd1648, {%r9333, %r9332};
	xor.b64  	%rd1649, %rd1648, %rd1647;
	shf.l.wrap.b32 	%r9334, %r9328, %r9329, 23;
	shf.l.wrap.b32 	%r9335, %r9329, %r9328, 23;
	mov.b64 	%rd1650, {%r9335, %r9334};
	xor.b64  	%rd1651, %rd1649, %rd1650;
	xor.b64  	%rd1652, %rd1610, %rd1585;
	and.b64  	%rd1653, %rd1635, %rd1652;
	xor.b64  	%rd1654, %rd1653, %rd1585;
	add.s64 	%rd1655, %rd1560, %rd1319;
	add.s64 	%rd1657, %rd1655, %rd45;
	add.s64 	%rd1658, %rd1657, %rd1654;
	add.s64 	%rd1659, %rd1658, %rd1651;
	add.s64 	%rd1660, %rd1659, %rd1571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9336,%dummy}, %rd1646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9337}, %rd1646;
	}
	shf.r.wrap.b32 	%r9338, %r9337, %r9336, 28;
	shf.r.wrap.b32 	%r9339, %r9336, %r9337, 28;
	mov.b64 	%rd1661, {%r9339, %r9338};
	shf.l.wrap.b32 	%r9340, %r9336, %r9337, 30;
	shf.l.wrap.b32 	%r9341, %r9337, %r9336, 30;
	mov.b64 	%rd1662, {%r9341, %r9340};
	xor.b64  	%rd1663, %rd1662, %rd1661;
	shf.l.wrap.b32 	%r9342, %r9336, %r9337, 25;
	shf.l.wrap.b32 	%r9343, %r9337, %r9336, 25;
	mov.b64 	%rd1664, {%r9343, %r9342};
	xor.b64  	%rd1665, %rd1663, %rd1664;
	xor.b64  	%rd1666, %rd1646, %rd1596;
	xor.b64  	%rd1667, %rd1646, %rd1621;
	and.b64  	%rd1668, %rd1667, %rd1666;
	xor.b64  	%rd1669, %rd1668, %rd1646;
	add.s64 	%rd1670, %rd1659, %rd1669;
	add.s64 	%rd1671, %rd1670, %rd1665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9344,%dummy}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9345}, %rd1660;
	}
	shf.r.wrap.b32 	%r9346, %r9345, %r9344, 14;
	shf.r.wrap.b32 	%r9347, %r9344, %r9345, 14;
	mov.b64 	%rd1672, {%r9347, %r9346};
	shf.r.wrap.b32 	%r9348, %r9345, %r9344, 18;
	shf.r.wrap.b32 	%r9349, %r9344, %r9345, 18;
	mov.b64 	%rd1673, {%r9349, %r9348};
	xor.b64  	%rd1674, %rd1673, %rd1672;
	shf.l.wrap.b32 	%r9350, %r9344, %r9345, 23;
	shf.l.wrap.b32 	%r9351, %r9345, %r9344, 23;
	mov.b64 	%rd1675, {%r9351, %r9350};
	xor.b64  	%rd1676, %rd1674, %rd1675;
	xor.b64  	%rd1677, %rd1635, %rd1610;
	and.b64  	%rd1678, %rd1660, %rd1677;
	xor.b64  	%rd1679, %rd1678, %rd1610;
	add.s64 	%rd1680, %rd1585, %rd1332;
	add.s64 	%rd1682, %rd1680, %rd46;
	add.s64 	%rd1683, %rd1682, %rd1679;
	add.s64 	%rd1684, %rd1683, %rd1676;
	add.s64 	%rd1685, %rd1684, %rd1596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9352,%dummy}, %rd1671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9353}, %rd1671;
	}
	shf.r.wrap.b32 	%r9354, %r9353, %r9352, 28;
	shf.r.wrap.b32 	%r9355, %r9352, %r9353, 28;
	mov.b64 	%rd1686, {%r9355, %r9354};
	shf.l.wrap.b32 	%r9356, %r9352, %r9353, 30;
	shf.l.wrap.b32 	%r9357, %r9353, %r9352, 30;
	mov.b64 	%rd1687, {%r9357, %r9356};
	xor.b64  	%rd1688, %rd1687, %rd1686;
	shf.l.wrap.b32 	%r9358, %r9352, %r9353, 25;
	shf.l.wrap.b32 	%r9359, %r9353, %r9352, 25;
	mov.b64 	%rd1689, {%r9359, %r9358};
	xor.b64  	%rd1690, %rd1688, %rd1689;
	xor.b64  	%rd1691, %rd1671, %rd1621;
	xor.b64  	%rd1692, %rd1671, %rd1646;
	and.b64  	%rd1693, %rd1692, %rd1691;
	xor.b64  	%rd1694, %rd1693, %rd1671;
	add.s64 	%rd1695, %rd1684, %rd1694;
	add.s64 	%rd1696, %rd1695, %rd1690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9360,%dummy}, %rd1685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9361}, %rd1685;
	}
	shf.r.wrap.b32 	%r9362, %r9361, %r9360, 14;
	shf.r.wrap.b32 	%r9363, %r9360, %r9361, 14;
	mov.b64 	%rd1697, {%r9363, %r9362};
	shf.r.wrap.b32 	%r9364, %r9361, %r9360, 18;
	shf.r.wrap.b32 	%r9365, %r9360, %r9361, 18;
	mov.b64 	%rd1698, {%r9365, %r9364};
	xor.b64  	%rd1699, %rd1698, %rd1697;
	shf.l.wrap.b32 	%r9366, %r9360, %r9361, 23;
	shf.l.wrap.b32 	%r9367, %r9361, %r9360, 23;
	mov.b64 	%rd1700, {%r9367, %r9366};
	xor.b64  	%rd1701, %rd1699, %rd1700;
	xor.b64  	%rd1702, %rd1660, %rd1635;
	and.b64  	%rd1703, %rd1685, %rd1702;
	xor.b64  	%rd1704, %rd1703, %rd1635;
	add.s64 	%rd1705, %rd1610, %rd1345;
	add.s64 	%rd1707, %rd1705, %rd47;
	add.s64 	%rd1708, %rd1707, %rd1704;
	add.s64 	%rd1709, %rd1708, %rd1701;
	add.s64 	%rd1710, %rd1709, %rd1621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9368,%dummy}, %rd1696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9369}, %rd1696;
	}
	shf.r.wrap.b32 	%r9370, %r9369, %r9368, 28;
	shf.r.wrap.b32 	%r9371, %r9368, %r9369, 28;
	mov.b64 	%rd1711, {%r9371, %r9370};
	shf.l.wrap.b32 	%r9372, %r9368, %r9369, 30;
	shf.l.wrap.b32 	%r9373, %r9369, %r9368, 30;
	mov.b64 	%rd1712, {%r9373, %r9372};
	xor.b64  	%rd1713, %rd1712, %rd1711;
	shf.l.wrap.b32 	%r9374, %r9368, %r9369, 25;
	shf.l.wrap.b32 	%r9375, %r9369, %r9368, 25;
	mov.b64 	%rd1714, {%r9375, %r9374};
	xor.b64  	%rd1715, %rd1713, %rd1714;
	xor.b64  	%rd1716, %rd1696, %rd1646;
	xor.b64  	%rd1717, %rd1696, %rd1671;
	and.b64  	%rd1718, %rd1717, %rd1716;
	xor.b64  	%rd1719, %rd1718, %rd1696;
	add.s64 	%rd1720, %rd1709, %rd1719;
	add.s64 	%rd1721, %rd1720, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9376,%dummy}, %rd1710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9377}, %rd1710;
	}
	shf.r.wrap.b32 	%r9378, %r9377, %r9376, 14;
	shf.r.wrap.b32 	%r9379, %r9376, %r9377, 14;
	mov.b64 	%rd1722, {%r9379, %r9378};
	shf.r.wrap.b32 	%r9380, %r9377, %r9376, 18;
	shf.r.wrap.b32 	%r9381, %r9376, %r9377, 18;
	mov.b64 	%rd1723, {%r9381, %r9380};
	xor.b64  	%rd1724, %rd1723, %rd1722;
	shf.l.wrap.b32 	%r9382, %r9376, %r9377, 23;
	shf.l.wrap.b32 	%r9383, %r9377, %r9376, 23;
	mov.b64 	%rd1725, {%r9383, %r9382};
	xor.b64  	%rd1726, %rd1724, %rd1725;
	xor.b64  	%rd1727, %rd1685, %rd1660;
	and.b64  	%rd1728, %rd1710, %rd1727;
	xor.b64  	%rd1729, %rd1728, %rd1660;
	add.s64 	%rd1730, %rd1635, %rd1358;
	add.s64 	%rd1732, %rd1730, %rd48;
	add.s64 	%rd1733, %rd1732, %rd1729;
	add.s64 	%rd1734, %rd1733, %rd1726;
	add.s64 	%rd1735, %rd1734, %rd1646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9384,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9385}, %rd1721;
	}
	shf.r.wrap.b32 	%r9386, %r9385, %r9384, 28;
	shf.r.wrap.b32 	%r9387, %r9384, %r9385, 28;
	mov.b64 	%rd1736, {%r9387, %r9386};
	shf.l.wrap.b32 	%r9388, %r9384, %r9385, 30;
	shf.l.wrap.b32 	%r9389, %r9385, %r9384, 30;
	mov.b64 	%rd1737, {%r9389, %r9388};
	xor.b64  	%rd1738, %rd1737, %rd1736;
	shf.l.wrap.b32 	%r9390, %r9384, %r9385, 25;
	shf.l.wrap.b32 	%r9391, %r9385, %r9384, 25;
	mov.b64 	%rd1739, {%r9391, %r9390};
	xor.b64  	%rd1740, %rd1738, %rd1739;
	xor.b64  	%rd1741, %rd1721, %rd1671;
	xor.b64  	%rd1742, %rd1721, %rd1696;
	and.b64  	%rd1743, %rd1742, %rd1741;
	xor.b64  	%rd1744, %rd1743, %rd1721;
	add.s64 	%rd1745, %rd1734, %rd1744;
	add.s64 	%rd1746, %rd1745, %rd1740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9392,%dummy}, %rd1735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9393}, %rd1735;
	}
	shf.r.wrap.b32 	%r9394, %r9393, %r9392, 14;
	shf.r.wrap.b32 	%r9395, %r9392, %r9393, 14;
	mov.b64 	%rd1747, {%r9395, %r9394};
	shf.r.wrap.b32 	%r9396, %r9393, %r9392, 18;
	shf.r.wrap.b32 	%r9397, %r9392, %r9393, 18;
	mov.b64 	%rd1748, {%r9397, %r9396};
	xor.b64  	%rd1749, %rd1748, %rd1747;
	shf.l.wrap.b32 	%r9398, %r9392, %r9393, 23;
	shf.l.wrap.b32 	%r9399, %r9393, %r9392, 23;
	mov.b64 	%rd1750, {%r9399, %r9398};
	xor.b64  	%rd1751, %rd1749, %rd1750;
	xor.b64  	%rd1752, %rd1710, %rd1685;
	and.b64  	%rd1753, %rd1735, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1685;
	add.s64 	%rd1755, %rd1660, %rd1371;
	add.s64 	%rd1757, %rd1755, %rd49;
	add.s64 	%rd1758, %rd1757, %rd1754;
	add.s64 	%rd1759, %rd1758, %rd1751;
	add.s64 	%rd1760, %rd1759, %rd1671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9400,%dummy}, %rd1746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9401}, %rd1746;
	}
	shf.r.wrap.b32 	%r9402, %r9401, %r9400, 28;
	shf.r.wrap.b32 	%r9403, %r9400, %r9401, 28;
	mov.b64 	%rd1761, {%r9403, %r9402};
	shf.l.wrap.b32 	%r9404, %r9400, %r9401, 30;
	shf.l.wrap.b32 	%r9405, %r9401, %r9400, 30;
	mov.b64 	%rd1762, {%r9405, %r9404};
	xor.b64  	%rd1763, %rd1762, %rd1761;
	shf.l.wrap.b32 	%r9406, %r9400, %r9401, 25;
	shf.l.wrap.b32 	%r9407, %r9401, %r9400, 25;
	mov.b64 	%rd1764, {%r9407, %r9406};
	xor.b64  	%rd1765, %rd1763, %rd1764;
	xor.b64  	%rd1766, %rd1746, %rd1696;
	xor.b64  	%rd1767, %rd1746, %rd1721;
	and.b64  	%rd1768, %rd1767, %rd1766;
	xor.b64  	%rd1769, %rd1768, %rd1746;
	add.s64 	%rd1770, %rd1759, %rd1769;
	add.s64 	%rd1771, %rd1770, %rd1765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9408,%dummy}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9409}, %rd1358;
	}
	shf.r.wrap.b32 	%r9410, %r9409, %r9408, 19;
	shf.r.wrap.b32 	%r9411, %r9408, %r9409, 19;
	mov.b64 	%rd1772, {%r9411, %r9410};
	shf.l.wrap.b32 	%r9412, %r9408, %r9409, 3;
	shf.l.wrap.b32 	%r9413, %r9409, %r9408, 3;
	mov.b64 	%rd1773, {%r9413, %r9412};
	shr.u64 	%rd1774, %rd1358, 6;
	xor.b64  	%rd1775, %rd1772, %rd1774;
	xor.b64  	%rd1776, %rd1775, %rd1773;
	shf.r.wrap.b32 	%r9414, %r9023, %r9022, 1;
	shf.r.wrap.b32 	%r9415, %r9022, %r9023, 1;
	mov.b64 	%rd1777, {%r9415, %r9414};
	shf.r.wrap.b32 	%r9416, %r9023, %r9022, 8;
	shf.r.wrap.b32 	%r9417, %r9022, %r9023, 8;
	mov.b64 	%rd1778, {%r9417, %r9416};
	shr.u64 	%rd1779, %rd1189, 7;
	xor.b64  	%rd1780, %rd1777, %rd1779;
	xor.b64  	%rd1781, %rd1780, %rd1778;
	add.s64 	%rd1782, %rd1293, %rd1176;
	add.s64 	%rd1783, %rd1782, %rd1776;
	add.s64 	%rd1784, %rd1783, %rd1781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9418,%dummy}, %rd1371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9419}, %rd1371;
	}
	shf.r.wrap.b32 	%r9420, %r9419, %r9418, 19;
	shf.r.wrap.b32 	%r9421, %r9418, %r9419, 19;
	mov.b64 	%rd1785, {%r9421, %r9420};
	shf.l.wrap.b32 	%r9422, %r9418, %r9419, 3;
	shf.l.wrap.b32 	%r9423, %r9419, %r9418, 3;
	mov.b64 	%rd1786, {%r9423, %r9422};
	shr.u64 	%rd1787, %rd1371, 6;
	xor.b64  	%rd1788, %rd1785, %rd1787;
	xor.b64  	%rd1789, %rd1788, %rd1786;
	shf.r.wrap.b32 	%r9424, %r9033, %r9032, 1;
	shf.r.wrap.b32 	%r9425, %r9032, %r9033, 1;
	mov.b64 	%rd1790, {%r9425, %r9424};
	shf.r.wrap.b32 	%r9426, %r9033, %r9032, 8;
	shf.r.wrap.b32 	%r9427, %r9032, %r9033, 8;
	mov.b64 	%rd1791, {%r9427, %r9426};
	shr.u64 	%rd1792, %rd1202, 7;
	xor.b64  	%rd1793, %rd1790, %rd1792;
	xor.b64  	%rd1794, %rd1793, %rd1791;
	add.s64 	%rd1795, %rd1306, %rd1189;
	add.s64 	%rd1796, %rd1795, %rd1789;
	add.s64 	%rd1797, %rd1796, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9428,%dummy}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9429}, %rd1784;
	}
	shf.r.wrap.b32 	%r9430, %r9429, %r9428, 19;
	shf.r.wrap.b32 	%r9431, %r9428, %r9429, 19;
	mov.b64 	%rd1798, {%r9431, %r9430};
	shf.l.wrap.b32 	%r9432, %r9428, %r9429, 3;
	shf.l.wrap.b32 	%r9433, %r9429, %r9428, 3;
	mov.b64 	%rd1799, {%r9433, %r9432};
	shr.u64 	%rd1800, %rd1784, 6;
	xor.b64  	%rd1801, %rd1798, %rd1800;
	xor.b64  	%rd1802, %rd1801, %rd1799;
	shf.r.wrap.b32 	%r9434, %r9043, %r9042, 1;
	shf.r.wrap.b32 	%r9435, %r9042, %r9043, 1;
	mov.b64 	%rd1803, {%r9435, %r9434};
	shf.r.wrap.b32 	%r9436, %r9043, %r9042, 8;
	shf.r.wrap.b32 	%r9437, %r9042, %r9043, 8;
	mov.b64 	%rd1804, {%r9437, %r9436};
	shr.u64 	%rd1805, %rd1215, 7;
	xor.b64  	%rd1806, %rd1803, %rd1805;
	xor.b64  	%rd1807, %rd1806, %rd1804;
	add.s64 	%rd1808, %rd1319, %rd1202;
	add.s64 	%rd1809, %rd1808, %rd1802;
	add.s64 	%rd1810, %rd1809, %rd1807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9438,%dummy}, %rd1797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9439}, %rd1797;
	}
	shf.r.wrap.b32 	%r9440, %r9439, %r9438, 19;
	shf.r.wrap.b32 	%r9441, %r9438, %r9439, 19;
	mov.b64 	%rd1811, {%r9441, %r9440};
	shf.l.wrap.b32 	%r9442, %r9438, %r9439, 3;
	shf.l.wrap.b32 	%r9443, %r9439, %r9438, 3;
	mov.b64 	%rd1812, {%r9443, %r9442};
	shr.u64 	%rd1813, %rd1797, 6;
	xor.b64  	%rd1814, %rd1811, %rd1813;
	xor.b64  	%rd1815, %rd1814, %rd1812;
	shf.r.wrap.b32 	%r9444, %r9053, %r9052, 1;
	shf.r.wrap.b32 	%r9445, %r9052, %r9053, 1;
	mov.b64 	%rd1816, {%r9445, %r9444};
	shf.r.wrap.b32 	%r9446, %r9053, %r9052, 8;
	shf.r.wrap.b32 	%r9447, %r9052, %r9053, 8;
	mov.b64 	%rd1817, {%r9447, %r9446};
	shr.u64 	%rd1818, %rd1228, 7;
	xor.b64  	%rd1819, %rd1816, %rd1818;
	xor.b64  	%rd1820, %rd1819, %rd1817;
	add.s64 	%rd1821, %rd1332, %rd1215;
	add.s64 	%rd1822, %rd1821, %rd1815;
	add.s64 	%rd1823, %rd1822, %rd1820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9448,%dummy}, %rd1810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9449}, %rd1810;
	}
	shf.r.wrap.b32 	%r9450, %r9449, %r9448, 19;
	shf.r.wrap.b32 	%r9451, %r9448, %r9449, 19;
	mov.b64 	%rd1824, {%r9451, %r9450};
	shf.l.wrap.b32 	%r9452, %r9448, %r9449, 3;
	shf.l.wrap.b32 	%r9453, %r9449, %r9448, 3;
	mov.b64 	%rd1825, {%r9453, %r9452};
	shr.u64 	%rd1826, %rd1810, 6;
	xor.b64  	%rd1827, %rd1824, %rd1826;
	xor.b64  	%rd1828, %rd1827, %rd1825;
	shf.r.wrap.b32 	%r9454, %r9063, %r9062, 1;
	shf.r.wrap.b32 	%r9455, %r9062, %r9063, 1;
	mov.b64 	%rd1829, {%r9455, %r9454};
	shf.r.wrap.b32 	%r9456, %r9063, %r9062, 8;
	shf.r.wrap.b32 	%r9457, %r9062, %r9063, 8;
	mov.b64 	%rd1830, {%r9457, %r9456};
	shr.u64 	%rd1831, %rd1241, 7;
	xor.b64  	%rd1832, %rd1829, %rd1831;
	xor.b64  	%rd1833, %rd1832, %rd1830;
	add.s64 	%rd1834, %rd1345, %rd1228;
	add.s64 	%rd1835, %rd1834, %rd1828;
	add.s64 	%rd1836, %rd1835, %rd1833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9458,%dummy}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9459}, %rd1823;
	}
	shf.r.wrap.b32 	%r9460, %r9459, %r9458, 19;
	shf.r.wrap.b32 	%r9461, %r9458, %r9459, 19;
	mov.b64 	%rd1837, {%r9461, %r9460};
	shf.l.wrap.b32 	%r9462, %r9458, %r9459, 3;
	shf.l.wrap.b32 	%r9463, %r9459, %r9458, 3;
	mov.b64 	%rd1838, {%r9463, %r9462};
	shr.u64 	%rd1839, %rd1823, 6;
	xor.b64  	%rd1840, %rd1837, %rd1839;
	xor.b64  	%rd1841, %rd1840, %rd1838;
	shf.r.wrap.b32 	%r9464, %r9073, %r9072, 1;
	shf.r.wrap.b32 	%r9465, %r9072, %r9073, 1;
	mov.b64 	%rd1842, {%r9465, %r9464};
	shf.r.wrap.b32 	%r9466, %r9073, %r9072, 8;
	shf.r.wrap.b32 	%r9467, %r9072, %r9073, 8;
	mov.b64 	%rd1843, {%r9467, %r9466};
	shr.u64 	%rd1844, %rd1254, 7;
	xor.b64  	%rd1845, %rd1842, %rd1844;
	xor.b64  	%rd1846, %rd1845, %rd1843;
	add.s64 	%rd1847, %rd1358, %rd1241;
	add.s64 	%rd1848, %rd1847, %rd1841;
	add.s64 	%rd1849, %rd1848, %rd1846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9468,%dummy}, %rd1836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9469}, %rd1836;
	}
	shf.r.wrap.b32 	%r9470, %r9469, %r9468, 19;
	shf.r.wrap.b32 	%r9471, %r9468, %r9469, 19;
	mov.b64 	%rd1850, {%r9471, %r9470};
	shf.l.wrap.b32 	%r9472, %r9468, %r9469, 3;
	shf.l.wrap.b32 	%r9473, %r9469, %r9468, 3;
	mov.b64 	%rd1851, {%r9473, %r9472};
	shr.u64 	%rd1852, %rd1836, 6;
	xor.b64  	%rd1853, %rd1850, %rd1852;
	xor.b64  	%rd1854, %rd1853, %rd1851;
	shf.r.wrap.b32 	%r9474, %r9083, %r9082, 1;
	shf.r.wrap.b32 	%r9475, %r9082, %r9083, 1;
	mov.b64 	%rd1855, {%r9475, %r9474};
	shf.r.wrap.b32 	%r9476, %r9083, %r9082, 8;
	shf.r.wrap.b32 	%r9477, %r9082, %r9083, 8;
	mov.b64 	%rd1856, {%r9477, %r9476};
	shr.u64 	%rd1857, %rd1267, 7;
	xor.b64  	%rd1858, %rd1855, %rd1857;
	xor.b64  	%rd1859, %rd1858, %rd1856;
	add.s64 	%rd1860, %rd1371, %rd1254;
	add.s64 	%rd1861, %rd1860, %rd1854;
	add.s64 	%rd1862, %rd1861, %rd1859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9478,%dummy}, %rd1849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9479}, %rd1849;
	}
	shf.r.wrap.b32 	%r9480, %r9479, %r9478, 19;
	shf.r.wrap.b32 	%r9481, %r9478, %r9479, 19;
	mov.b64 	%rd1863, {%r9481, %r9480};
	shf.l.wrap.b32 	%r9482, %r9478, %r9479, 3;
	shf.l.wrap.b32 	%r9483, %r9479, %r9478, 3;
	mov.b64 	%rd1864, {%r9483, %r9482};
	shr.u64 	%rd1865, %rd1849, 6;
	xor.b64  	%rd1866, %rd1863, %rd1865;
	xor.b64  	%rd1867, %rd1866, %rd1864;
	shf.r.wrap.b32 	%r9484, %r9093, %r9092, 1;
	shf.r.wrap.b32 	%r9485, %r9092, %r9093, 1;
	mov.b64 	%rd1868, {%r9485, %r9484};
	shf.r.wrap.b32 	%r9486, %r9093, %r9092, 8;
	shf.r.wrap.b32 	%r9487, %r9092, %r9093, 8;
	mov.b64 	%rd1869, {%r9487, %r9486};
	shr.u64 	%rd1870, %rd1280, 7;
	xor.b64  	%rd1871, %rd1868, %rd1870;
	xor.b64  	%rd1872, %rd1871, %rd1869;
	add.s64 	%rd1873, %rd1784, %rd1267;
	add.s64 	%rd1874, %rd1873, %rd1867;
	add.s64 	%rd1875, %rd1874, %rd1872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9488,%dummy}, %rd1862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9489}, %rd1862;
	}
	shf.r.wrap.b32 	%r9490, %r9489, %r9488, 19;
	shf.r.wrap.b32 	%r9491, %r9488, %r9489, 19;
	mov.b64 	%rd1876, {%r9491, %r9490};
	shf.l.wrap.b32 	%r9492, %r9488, %r9489, 3;
	shf.l.wrap.b32 	%r9493, %r9489, %r9488, 3;
	mov.b64 	%rd1877, {%r9493, %r9492};
	shr.u64 	%rd1878, %rd1862, 6;
	xor.b64  	%rd1879, %rd1876, %rd1878;
	xor.b64  	%rd1880, %rd1879, %rd1877;
	shf.r.wrap.b32 	%r9494, %r9103, %r9102, 1;
	shf.r.wrap.b32 	%r9495, %r9102, %r9103, 1;
	mov.b64 	%rd1881, {%r9495, %r9494};
	shf.r.wrap.b32 	%r9496, %r9103, %r9102, 8;
	shf.r.wrap.b32 	%r9497, %r9102, %r9103, 8;
	mov.b64 	%rd1882, {%r9497, %r9496};
	shr.u64 	%rd1883, %rd1293, 7;
	xor.b64  	%rd1884, %rd1881, %rd1883;
	xor.b64  	%rd1885, %rd1884, %rd1882;
	add.s64 	%rd1886, %rd1797, %rd1280;
	add.s64 	%rd1887, %rd1886, %rd1880;
	add.s64 	%rd1888, %rd1887, %rd1885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9498,%dummy}, %rd1875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9499}, %rd1875;
	}
	shf.r.wrap.b32 	%r9500, %r9499, %r9498, 19;
	shf.r.wrap.b32 	%r9501, %r9498, %r9499, 19;
	mov.b64 	%rd1889, {%r9501, %r9500};
	shf.l.wrap.b32 	%r9502, %r9498, %r9499, 3;
	shf.l.wrap.b32 	%r9503, %r9499, %r9498, 3;
	mov.b64 	%rd1890, {%r9503, %r9502};
	shr.u64 	%rd1891, %rd1875, 6;
	xor.b64  	%rd1892, %rd1889, %rd1891;
	xor.b64  	%rd1893, %rd1892, %rd1890;
	shf.r.wrap.b32 	%r9504, %r9113, %r9112, 1;
	shf.r.wrap.b32 	%r9505, %r9112, %r9113, 1;
	mov.b64 	%rd1894, {%r9505, %r9504};
	shf.r.wrap.b32 	%r9506, %r9113, %r9112, 8;
	shf.r.wrap.b32 	%r9507, %r9112, %r9113, 8;
	mov.b64 	%rd1895, {%r9507, %r9506};
	shr.u64 	%rd1896, %rd1306, 7;
	xor.b64  	%rd1897, %rd1894, %rd1896;
	xor.b64  	%rd1898, %rd1897, %rd1895;
	add.s64 	%rd1899, %rd1810, %rd1293;
	add.s64 	%rd1900, %rd1899, %rd1893;
	add.s64 	%rd1901, %rd1900, %rd1898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9508,%dummy}, %rd1888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9509}, %rd1888;
	}
	shf.r.wrap.b32 	%r9510, %r9509, %r9508, 19;
	shf.r.wrap.b32 	%r9511, %r9508, %r9509, 19;
	mov.b64 	%rd1902, {%r9511, %r9510};
	shf.l.wrap.b32 	%r9512, %r9508, %r9509, 3;
	shf.l.wrap.b32 	%r9513, %r9509, %r9508, 3;
	mov.b64 	%rd1903, {%r9513, %r9512};
	shr.u64 	%rd1904, %rd1888, 6;
	xor.b64  	%rd1905, %rd1902, %rd1904;
	xor.b64  	%rd1906, %rd1905, %rd1903;
	shf.r.wrap.b32 	%r9514, %r9123, %r9122, 1;
	shf.r.wrap.b32 	%r9515, %r9122, %r9123, 1;
	mov.b64 	%rd1907, {%r9515, %r9514};
	shf.r.wrap.b32 	%r9516, %r9123, %r9122, 8;
	shf.r.wrap.b32 	%r9517, %r9122, %r9123, 8;
	mov.b64 	%rd1908, {%r9517, %r9516};
	shr.u64 	%rd1909, %rd1319, 7;
	xor.b64  	%rd1910, %rd1907, %rd1909;
	xor.b64  	%rd1911, %rd1910, %rd1908;
	add.s64 	%rd1912, %rd1823, %rd1306;
	add.s64 	%rd1913, %rd1912, %rd1906;
	add.s64 	%rd1914, %rd1913, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9518,%dummy}, %rd1901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9519}, %rd1901;
	}
	shf.r.wrap.b32 	%r9520, %r9519, %r9518, 19;
	shf.r.wrap.b32 	%r9521, %r9518, %r9519, 19;
	mov.b64 	%rd1915, {%r9521, %r9520};
	shf.l.wrap.b32 	%r9522, %r9518, %r9519, 3;
	shf.l.wrap.b32 	%r9523, %r9519, %r9518, 3;
	mov.b64 	%rd1916, {%r9523, %r9522};
	shr.u64 	%rd1917, %rd1901, 6;
	xor.b64  	%rd1918, %rd1915, %rd1917;
	xor.b64  	%rd1919, %rd1918, %rd1916;
	shf.r.wrap.b32 	%r9524, %r9133, %r9132, 1;
	shf.r.wrap.b32 	%r9525, %r9132, %r9133, 1;
	mov.b64 	%rd1920, {%r9525, %r9524};
	shf.r.wrap.b32 	%r9526, %r9133, %r9132, 8;
	shf.r.wrap.b32 	%r9527, %r9132, %r9133, 8;
	mov.b64 	%rd1921, {%r9527, %r9526};
	shr.u64 	%rd1922, %rd1332, 7;
	xor.b64  	%rd1923, %rd1920, %rd1922;
	xor.b64  	%rd1924, %rd1923, %rd1921;
	add.s64 	%rd1925, %rd1836, %rd1319;
	add.s64 	%rd1926, %rd1925, %rd1919;
	add.s64 	%rd1927, %rd1926, %rd1924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9528,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9529}, %rd1914;
	}
	shf.r.wrap.b32 	%r9530, %r9529, %r9528, 19;
	shf.r.wrap.b32 	%r9531, %r9528, %r9529, 19;
	mov.b64 	%rd1928, {%r9531, %r9530};
	shf.l.wrap.b32 	%r9532, %r9528, %r9529, 3;
	shf.l.wrap.b32 	%r9533, %r9529, %r9528, 3;
	mov.b64 	%rd1929, {%r9533, %r9532};
	shr.u64 	%rd1930, %rd1914, 6;
	xor.b64  	%rd1931, %rd1928, %rd1930;
	xor.b64  	%rd1932, %rd1931, %rd1929;
	shf.r.wrap.b32 	%r9534, %r9143, %r9142, 1;
	shf.r.wrap.b32 	%r9535, %r9142, %r9143, 1;
	mov.b64 	%rd1933, {%r9535, %r9534};
	shf.r.wrap.b32 	%r9536, %r9143, %r9142, 8;
	shf.r.wrap.b32 	%r9537, %r9142, %r9143, 8;
	mov.b64 	%rd1934, {%r9537, %r9536};
	shr.u64 	%rd1935, %rd1345, 7;
	xor.b64  	%rd1936, %rd1933, %rd1935;
	xor.b64  	%rd1937, %rd1936, %rd1934;
	add.s64 	%rd1938, %rd1849, %rd1332;
	add.s64 	%rd1939, %rd1938, %rd1932;
	add.s64 	%rd1940, %rd1939, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9538,%dummy}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9539}, %rd1927;
	}
	shf.r.wrap.b32 	%r9540, %r9539, %r9538, 19;
	shf.r.wrap.b32 	%r9541, %r9538, %r9539, 19;
	mov.b64 	%rd1941, {%r9541, %r9540};
	shf.l.wrap.b32 	%r9542, %r9538, %r9539, 3;
	shf.l.wrap.b32 	%r9543, %r9539, %r9538, 3;
	mov.b64 	%rd1942, {%r9543, %r9542};
	shr.u64 	%rd1943, %rd1927, 6;
	xor.b64  	%rd1944, %rd1941, %rd1943;
	xor.b64  	%rd1945, %rd1944, %rd1942;
	shf.r.wrap.b32 	%r9544, %r9409, %r9408, 1;
	shf.r.wrap.b32 	%r9545, %r9408, %r9409, 1;
	mov.b64 	%rd1946, {%r9545, %r9544};
	shf.r.wrap.b32 	%r9546, %r9409, %r9408, 8;
	shf.r.wrap.b32 	%r9547, %r9408, %r9409, 8;
	mov.b64 	%rd1947, {%r9547, %r9546};
	shr.u64 	%rd1948, %rd1358, 7;
	xor.b64  	%rd1949, %rd1946, %rd1948;
	xor.b64  	%rd1950, %rd1949, %rd1947;
	add.s64 	%rd1951, %rd1862, %rd1345;
	add.s64 	%rd1952, %rd1951, %rd1945;
	add.s64 	%rd1953, %rd1952, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9548,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9549}, %rd1940;
	}
	shf.r.wrap.b32 	%r9550, %r9549, %r9548, 19;
	shf.r.wrap.b32 	%r9551, %r9548, %r9549, 19;
	mov.b64 	%rd1954, {%r9551, %r9550};
	shf.l.wrap.b32 	%r9552, %r9548, %r9549, 3;
	shf.l.wrap.b32 	%r9553, %r9549, %r9548, 3;
	mov.b64 	%rd1955, {%r9553, %r9552};
	shr.u64 	%rd1956, %rd1940, 6;
	xor.b64  	%rd1957, %rd1954, %rd1956;
	xor.b64  	%rd1958, %rd1957, %rd1955;
	shf.r.wrap.b32 	%r9554, %r9419, %r9418, 1;
	shf.r.wrap.b32 	%r9555, %r9418, %r9419, 1;
	mov.b64 	%rd1959, {%r9555, %r9554};
	shf.r.wrap.b32 	%r9556, %r9419, %r9418, 8;
	shf.r.wrap.b32 	%r9557, %r9418, %r9419, 8;
	mov.b64 	%rd1960, {%r9557, %r9556};
	shr.u64 	%rd1961, %rd1371, 7;
	xor.b64  	%rd1962, %rd1959, %rd1961;
	xor.b64  	%rd1963, %rd1962, %rd1960;
	add.s64 	%rd1964, %rd1875, %rd1358;
	add.s64 	%rd1965, %rd1964, %rd1958;
	add.s64 	%rd1966, %rd1965, %rd1963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9558,%dummy}, %rd1953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9559}, %rd1953;
	}
	shf.r.wrap.b32 	%r9560, %r9559, %r9558, 19;
	shf.r.wrap.b32 	%r9561, %r9558, %r9559, 19;
	mov.b64 	%rd1967, {%r9561, %r9560};
	shf.l.wrap.b32 	%r9562, %r9558, %r9559, 3;
	shf.l.wrap.b32 	%r9563, %r9559, %r9558, 3;
	mov.b64 	%rd1968, {%r9563, %r9562};
	shr.u64 	%rd1969, %rd1953, 6;
	xor.b64  	%rd1970, %rd1967, %rd1969;
	xor.b64  	%rd1971, %rd1970, %rd1968;
	shf.r.wrap.b32 	%r9564, %r9429, %r9428, 1;
	shf.r.wrap.b32 	%r9565, %r9428, %r9429, 1;
	mov.b64 	%rd1972, {%r9565, %r9564};
	shf.r.wrap.b32 	%r9566, %r9429, %r9428, 8;
	shf.r.wrap.b32 	%r9567, %r9428, %r9429, 8;
	mov.b64 	%rd1973, {%r9567, %r9566};
	shr.u64 	%rd1974, %rd1784, 7;
	xor.b64  	%rd1975, %rd1972, %rd1974;
	xor.b64  	%rd1976, %rd1975, %rd1973;
	add.s64 	%rd1977, %rd1888, %rd1371;
	add.s64 	%rd1978, %rd1977, %rd1971;
	add.s64 	%rd1979, %rd1978, %rd1976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9568,%dummy}, %rd1760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9569}, %rd1760;
	}
	shf.r.wrap.b32 	%r9570, %r9569, %r9568, 14;
	shf.r.wrap.b32 	%r9571, %r9568, %r9569, 14;
	mov.b64 	%rd1980, {%r9571, %r9570};
	shf.r.wrap.b32 	%r9572, %r9569, %r9568, 18;
	shf.r.wrap.b32 	%r9573, %r9568, %r9569, 18;
	mov.b64 	%rd1981, {%r9573, %r9572};
	xor.b64  	%rd1982, %rd1981, %rd1980;
	shf.l.wrap.b32 	%r9574, %r9568, %r9569, 23;
	shf.l.wrap.b32 	%r9575, %r9569, %r9568, 23;
	mov.b64 	%rd1983, {%r9575, %r9574};
	xor.b64  	%rd1984, %rd1982, %rd1983;
	xor.b64  	%rd1985, %rd1735, %rd1710;
	and.b64  	%rd1986, %rd1760, %rd1985;
	xor.b64  	%rd1987, %rd1986, %rd1710;
	add.s64 	%rd1988, %rd1987, %rd1685;
	add.s64 	%rd1989, %rd1988, %rd1784;
	add.s64 	%rd1991, %rd1989, %rd50;
	add.s64 	%rd1992, %rd1991, %rd1984;
	add.s64 	%rd1993, %rd1992, %rd1696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9576,%dummy}, %rd1771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9577}, %rd1771;
	}
	shf.r.wrap.b32 	%r9578, %r9577, %r9576, 28;
	shf.r.wrap.b32 	%r9579, %r9576, %r9577, 28;
	mov.b64 	%rd1994, {%r9579, %r9578};
	shf.l.wrap.b32 	%r9580, %r9576, %r9577, 30;
	shf.l.wrap.b32 	%r9581, %r9577, %r9576, 30;
	mov.b64 	%rd1995, {%r9581, %r9580};
	xor.b64  	%rd1996, %rd1995, %rd1994;
	shf.l.wrap.b32 	%r9582, %r9576, %r9577, 25;
	shf.l.wrap.b32 	%r9583, %r9577, %r9576, 25;
	mov.b64 	%rd1997, {%r9583, %r9582};
	xor.b64  	%rd1998, %rd1996, %rd1997;
	xor.b64  	%rd1999, %rd1771, %rd1721;
	xor.b64  	%rd2000, %rd1771, %rd1746;
	and.b64  	%rd2001, %rd2000, %rd1999;
	xor.b64  	%rd2002, %rd2001, %rd1771;
	add.s64 	%rd2003, %rd1992, %rd2002;
	add.s64 	%rd2004, %rd2003, %rd1998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9584,%dummy}, %rd1993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9585}, %rd1993;
	}
	shf.r.wrap.b32 	%r9586, %r9585, %r9584, 14;
	shf.r.wrap.b32 	%r9587, %r9584, %r9585, 14;
	mov.b64 	%rd2005, {%r9587, %r9586};
	shf.r.wrap.b32 	%r9588, %r9585, %r9584, 18;
	shf.r.wrap.b32 	%r9589, %r9584, %r9585, 18;
	mov.b64 	%rd2006, {%r9589, %r9588};
	xor.b64  	%rd2007, %rd2006, %rd2005;
	shf.l.wrap.b32 	%r9590, %r9584, %r9585, 23;
	shf.l.wrap.b32 	%r9591, %r9585, %r9584, 23;
	mov.b64 	%rd2008, {%r9591, %r9590};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	xor.b64  	%rd2010, %rd1760, %rd1735;
	and.b64  	%rd2011, %rd1993, %rd2010;
	xor.b64  	%rd2012, %rd2011, %rd1735;
	add.s64 	%rd2013, %rd1797, %rd1710;
	add.s64 	%rd2015, %rd2013, %rd51;
	add.s64 	%rd2016, %rd2015, %rd2012;
	add.s64 	%rd2017, %rd2016, %rd2009;
	add.s64 	%rd2018, %rd2017, %rd1721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9592,%dummy}, %rd2004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9593}, %rd2004;
	}
	shf.r.wrap.b32 	%r9594, %r9593, %r9592, 28;
	shf.r.wrap.b32 	%r9595, %r9592, %r9593, 28;
	mov.b64 	%rd2019, {%r9595, %r9594};
	shf.l.wrap.b32 	%r9596, %r9592, %r9593, 30;
	shf.l.wrap.b32 	%r9597, %r9593, %r9592, 30;
	mov.b64 	%rd2020, {%r9597, %r9596};
	xor.b64  	%rd2021, %rd2020, %rd2019;
	shf.l.wrap.b32 	%r9598, %r9592, %r9593, 25;
	shf.l.wrap.b32 	%r9599, %r9593, %r9592, 25;
	mov.b64 	%rd2022, {%r9599, %r9598};
	xor.b64  	%rd2023, %rd2021, %rd2022;
	xor.b64  	%rd2024, %rd2004, %rd1746;
	xor.b64  	%rd2025, %rd2004, %rd1771;
	and.b64  	%rd2026, %rd2025, %rd2024;
	xor.b64  	%rd2027, %rd2026, %rd2004;
	add.s64 	%rd2028, %rd2017, %rd2027;
	add.s64 	%rd2029, %rd2028, %rd2023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9600,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9601}, %rd2018;
	}
	shf.r.wrap.b32 	%r9602, %r9601, %r9600, 14;
	shf.r.wrap.b32 	%r9603, %r9600, %r9601, 14;
	mov.b64 	%rd2030, {%r9603, %r9602};
	shf.r.wrap.b32 	%r9604, %r9601, %r9600, 18;
	shf.r.wrap.b32 	%r9605, %r9600, %r9601, 18;
	mov.b64 	%rd2031, {%r9605, %r9604};
	xor.b64  	%rd2032, %rd2031, %rd2030;
	shf.l.wrap.b32 	%r9606, %r9600, %r9601, 23;
	shf.l.wrap.b32 	%r9607, %r9601, %r9600, 23;
	mov.b64 	%rd2033, {%r9607, %r9606};
	xor.b64  	%rd2034, %rd2032, %rd2033;
	xor.b64  	%rd2035, %rd1993, %rd1760;
	and.b64  	%rd2036, %rd2018, %rd2035;
	xor.b64  	%rd2037, %rd2036, %rd1760;
	add.s64 	%rd2038, %rd1810, %rd1735;
	add.s64 	%rd2040, %rd2038, %rd52;
	add.s64 	%rd2041, %rd2040, %rd2037;
	add.s64 	%rd2042, %rd2041, %rd2034;
	add.s64 	%rd2043, %rd2042, %rd1746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9608,%dummy}, %rd2029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9609}, %rd2029;
	}
	shf.r.wrap.b32 	%r9610, %r9609, %r9608, 28;
	shf.r.wrap.b32 	%r9611, %r9608, %r9609, 28;
	mov.b64 	%rd2044, {%r9611, %r9610};
	shf.l.wrap.b32 	%r9612, %r9608, %r9609, 30;
	shf.l.wrap.b32 	%r9613, %r9609, %r9608, 30;
	mov.b64 	%rd2045, {%r9613, %r9612};
	xor.b64  	%rd2046, %rd2045, %rd2044;
	shf.l.wrap.b32 	%r9614, %r9608, %r9609, 25;
	shf.l.wrap.b32 	%r9615, %r9609, %r9608, 25;
	mov.b64 	%rd2047, {%r9615, %r9614};
	xor.b64  	%rd2048, %rd2046, %rd2047;
	xor.b64  	%rd2049, %rd2029, %rd1771;
	xor.b64  	%rd2050, %rd2029, %rd2004;
	and.b64  	%rd2051, %rd2050, %rd2049;
	xor.b64  	%rd2052, %rd2051, %rd2029;
	add.s64 	%rd2053, %rd2042, %rd2052;
	add.s64 	%rd2054, %rd2053, %rd2048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9616,%dummy}, %rd2043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9617}, %rd2043;
	}
	shf.r.wrap.b32 	%r9618, %r9617, %r9616, 14;
	shf.r.wrap.b32 	%r9619, %r9616, %r9617, 14;
	mov.b64 	%rd2055, {%r9619, %r9618};
	shf.r.wrap.b32 	%r9620, %r9617, %r9616, 18;
	shf.r.wrap.b32 	%r9621, %r9616, %r9617, 18;
	mov.b64 	%rd2056, {%r9621, %r9620};
	xor.b64  	%rd2057, %rd2056, %rd2055;
	shf.l.wrap.b32 	%r9622, %r9616, %r9617, 23;
	shf.l.wrap.b32 	%r9623, %r9617, %r9616, 23;
	mov.b64 	%rd2058, {%r9623, %r9622};
	xor.b64  	%rd2059, %rd2057, %rd2058;
	xor.b64  	%rd2060, %rd2018, %rd1993;
	and.b64  	%rd2061, %rd2043, %rd2060;
	xor.b64  	%rd2062, %rd2061, %rd1993;
	add.s64 	%rd2063, %rd1823, %rd1760;
	add.s64 	%rd2065, %rd2063, %rd53;
	add.s64 	%rd2066, %rd2065, %rd2062;
	add.s64 	%rd2067, %rd2066, %rd2059;
	add.s64 	%rd2068, %rd2067, %rd1771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9624,%dummy}, %rd2054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9625}, %rd2054;
	}
	shf.r.wrap.b32 	%r9626, %r9625, %r9624, 28;
	shf.r.wrap.b32 	%r9627, %r9624, %r9625, 28;
	mov.b64 	%rd2069, {%r9627, %r9626};
	shf.l.wrap.b32 	%r9628, %r9624, %r9625, 30;
	shf.l.wrap.b32 	%r9629, %r9625, %r9624, 30;
	mov.b64 	%rd2070, {%r9629, %r9628};
	xor.b64  	%rd2071, %rd2070, %rd2069;
	shf.l.wrap.b32 	%r9630, %r9624, %r9625, 25;
	shf.l.wrap.b32 	%r9631, %r9625, %r9624, 25;
	mov.b64 	%rd2072, {%r9631, %r9630};
	xor.b64  	%rd2073, %rd2071, %rd2072;
	xor.b64  	%rd2074, %rd2054, %rd2004;
	xor.b64  	%rd2075, %rd2054, %rd2029;
	and.b64  	%rd2076, %rd2075, %rd2074;
	xor.b64  	%rd2077, %rd2076, %rd2054;
	add.s64 	%rd2078, %rd2067, %rd2077;
	add.s64 	%rd2079, %rd2078, %rd2073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9632,%dummy}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9633}, %rd2068;
	}
	shf.r.wrap.b32 	%r9634, %r9633, %r9632, 14;
	shf.r.wrap.b32 	%r9635, %r9632, %r9633, 14;
	mov.b64 	%rd2080, {%r9635, %r9634};
	shf.r.wrap.b32 	%r9636, %r9633, %r9632, 18;
	shf.r.wrap.b32 	%r9637, %r9632, %r9633, 18;
	mov.b64 	%rd2081, {%r9637, %r9636};
	xor.b64  	%rd2082, %rd2081, %rd2080;
	shf.l.wrap.b32 	%r9638, %r9632, %r9633, 23;
	shf.l.wrap.b32 	%r9639, %r9633, %r9632, 23;
	mov.b64 	%rd2083, {%r9639, %r9638};
	xor.b64  	%rd2084, %rd2082, %rd2083;
	xor.b64  	%rd2085, %rd2043, %rd2018;
	and.b64  	%rd2086, %rd2068, %rd2085;
	xor.b64  	%rd2087, %rd2086, %rd2018;
	add.s64 	%rd2088, %rd1993, %rd1836;
	add.s64 	%rd2090, %rd2088, %rd54;
	add.s64 	%rd2091, %rd2090, %rd2087;
	add.s64 	%rd2092, %rd2091, %rd2084;
	add.s64 	%rd2093, %rd2092, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9640,%dummy}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9641}, %rd2079;
	}
	shf.r.wrap.b32 	%r9642, %r9641, %r9640, 28;
	shf.r.wrap.b32 	%r9643, %r9640, %r9641, 28;
	mov.b64 	%rd2094, {%r9643, %r9642};
	shf.l.wrap.b32 	%r9644, %r9640, %r9641, 30;
	shf.l.wrap.b32 	%r9645, %r9641, %r9640, 30;
	mov.b64 	%rd2095, {%r9645, %r9644};
	xor.b64  	%rd2096, %rd2095, %rd2094;
	shf.l.wrap.b32 	%r9646, %r9640, %r9641, 25;
	shf.l.wrap.b32 	%r9647, %r9641, %r9640, 25;
	mov.b64 	%rd2097, {%r9647, %r9646};
	xor.b64  	%rd2098, %rd2096, %rd2097;
	xor.b64  	%rd2099, %rd2079, %rd2029;
	xor.b64  	%rd2100, %rd2079, %rd2054;
	and.b64  	%rd2101, %rd2100, %rd2099;
	xor.b64  	%rd2102, %rd2101, %rd2079;
	add.s64 	%rd2103, %rd2092, %rd2102;
	add.s64 	%rd2104, %rd2103, %rd2098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9648,%dummy}, %rd2093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9649}, %rd2093;
	}
	shf.r.wrap.b32 	%r9650, %r9649, %r9648, 14;
	shf.r.wrap.b32 	%r9651, %r9648, %r9649, 14;
	mov.b64 	%rd2105, {%r9651, %r9650};
	shf.r.wrap.b32 	%r9652, %r9649, %r9648, 18;
	shf.r.wrap.b32 	%r9653, %r9648, %r9649, 18;
	mov.b64 	%rd2106, {%r9653, %r9652};
	xor.b64  	%rd2107, %rd2106, %rd2105;
	shf.l.wrap.b32 	%r9654, %r9648, %r9649, 23;
	shf.l.wrap.b32 	%r9655, %r9649, %r9648, 23;
	mov.b64 	%rd2108, {%r9655, %r9654};
	xor.b64  	%rd2109, %rd2107, %rd2108;
	xor.b64  	%rd2110, %rd2068, %rd2043;
	and.b64  	%rd2111, %rd2093, %rd2110;
	xor.b64  	%rd2112, %rd2111, %rd2043;
	add.s64 	%rd2113, %rd2018, %rd1849;
	add.s64 	%rd2115, %rd2113, %rd55;
	add.s64 	%rd2116, %rd2115, %rd2112;
	add.s64 	%rd2117, %rd2116, %rd2109;
	add.s64 	%rd2118, %rd2117, %rd2029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9656,%dummy}, %rd2104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9657}, %rd2104;
	}
	shf.r.wrap.b32 	%r9658, %r9657, %r9656, 28;
	shf.r.wrap.b32 	%r9659, %r9656, %r9657, 28;
	mov.b64 	%rd2119, {%r9659, %r9658};
	shf.l.wrap.b32 	%r9660, %r9656, %r9657, 30;
	shf.l.wrap.b32 	%r9661, %r9657, %r9656, 30;
	mov.b64 	%rd2120, {%r9661, %r9660};
	xor.b64  	%rd2121, %rd2120, %rd2119;
	shf.l.wrap.b32 	%r9662, %r9656, %r9657, 25;
	shf.l.wrap.b32 	%r9663, %r9657, %r9656, 25;
	mov.b64 	%rd2122, {%r9663, %r9662};
	xor.b64  	%rd2123, %rd2121, %rd2122;
	xor.b64  	%rd2124, %rd2104, %rd2054;
	xor.b64  	%rd2125, %rd2104, %rd2079;
	and.b64  	%rd2126, %rd2125, %rd2124;
	xor.b64  	%rd2127, %rd2126, %rd2104;
	add.s64 	%rd2128, %rd2117, %rd2127;
	add.s64 	%rd2129, %rd2128, %rd2123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9664,%dummy}, %rd2118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9665}, %rd2118;
	}
	shf.r.wrap.b32 	%r9666, %r9665, %r9664, 14;
	shf.r.wrap.b32 	%r9667, %r9664, %r9665, 14;
	mov.b64 	%rd2130, {%r9667, %r9666};
	shf.r.wrap.b32 	%r9668, %r9665, %r9664, 18;
	shf.r.wrap.b32 	%r9669, %r9664, %r9665, 18;
	mov.b64 	%rd2131, {%r9669, %r9668};
	xor.b64  	%rd2132, %rd2131, %rd2130;
	shf.l.wrap.b32 	%r9670, %r9664, %r9665, 23;
	shf.l.wrap.b32 	%r9671, %r9665, %r9664, 23;
	mov.b64 	%rd2133, {%r9671, %r9670};
	xor.b64  	%rd2134, %rd2132, %rd2133;
	xor.b64  	%rd2135, %rd2093, %rd2068;
	and.b64  	%rd2136, %rd2118, %rd2135;
	xor.b64  	%rd2137, %rd2136, %rd2068;
	add.s64 	%rd2138, %rd2043, %rd1862;
	add.s64 	%rd2140, %rd2138, %rd56;
	add.s64 	%rd2141, %rd2140, %rd2137;
	add.s64 	%rd2142, %rd2141, %rd2134;
	add.s64 	%rd2143, %rd2142, %rd2054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9672,%dummy}, %rd2129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9673}, %rd2129;
	}
	shf.r.wrap.b32 	%r9674, %r9673, %r9672, 28;
	shf.r.wrap.b32 	%r9675, %r9672, %r9673, 28;
	mov.b64 	%rd2144, {%r9675, %r9674};
	shf.l.wrap.b32 	%r9676, %r9672, %r9673, 30;
	shf.l.wrap.b32 	%r9677, %r9673, %r9672, 30;
	mov.b64 	%rd2145, {%r9677, %r9676};
	xor.b64  	%rd2146, %rd2145, %rd2144;
	shf.l.wrap.b32 	%r9678, %r9672, %r9673, 25;
	shf.l.wrap.b32 	%r9679, %r9673, %r9672, 25;
	mov.b64 	%rd2147, {%r9679, %r9678};
	xor.b64  	%rd2148, %rd2146, %rd2147;
	xor.b64  	%rd2149, %rd2129, %rd2079;
	xor.b64  	%rd2150, %rd2129, %rd2104;
	and.b64  	%rd2151, %rd2150, %rd2149;
	xor.b64  	%rd2152, %rd2151, %rd2129;
	add.s64 	%rd2153, %rd2142, %rd2152;
	add.s64 	%rd2154, %rd2153, %rd2148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9680,%dummy}, %rd2143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9681}, %rd2143;
	}
	shf.r.wrap.b32 	%r9682, %r9681, %r9680, 14;
	shf.r.wrap.b32 	%r9683, %r9680, %r9681, 14;
	mov.b64 	%rd2155, {%r9683, %r9682};
	shf.r.wrap.b32 	%r9684, %r9681, %r9680, 18;
	shf.r.wrap.b32 	%r9685, %r9680, %r9681, 18;
	mov.b64 	%rd2156, {%r9685, %r9684};
	xor.b64  	%rd2157, %rd2156, %rd2155;
	shf.l.wrap.b32 	%r9686, %r9680, %r9681, 23;
	shf.l.wrap.b32 	%r9687, %r9681, %r9680, 23;
	mov.b64 	%rd2158, {%r9687, %r9686};
	xor.b64  	%rd2159, %rd2157, %rd2158;
	xor.b64  	%rd2160, %rd2118, %rd2093;
	and.b64  	%rd2161, %rd2143, %rd2160;
	xor.b64  	%rd2162, %rd2161, %rd2093;
	add.s64 	%rd2163, %rd2068, %rd1875;
	add.s64 	%rd2165, %rd2163, %rd57;
	add.s64 	%rd2166, %rd2165, %rd2162;
	add.s64 	%rd2167, %rd2166, %rd2159;
	add.s64 	%rd2168, %rd2167, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9688,%dummy}, %rd2154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9689}, %rd2154;
	}
	shf.r.wrap.b32 	%r9690, %r9689, %r9688, 28;
	shf.r.wrap.b32 	%r9691, %r9688, %r9689, 28;
	mov.b64 	%rd2169, {%r9691, %r9690};
	shf.l.wrap.b32 	%r9692, %r9688, %r9689, 30;
	shf.l.wrap.b32 	%r9693, %r9689, %r9688, 30;
	mov.b64 	%rd2170, {%r9693, %r9692};
	xor.b64  	%rd2171, %rd2170, %rd2169;
	shf.l.wrap.b32 	%r9694, %r9688, %r9689, 25;
	shf.l.wrap.b32 	%r9695, %r9689, %r9688, 25;
	mov.b64 	%rd2172, {%r9695, %r9694};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	xor.b64  	%rd2174, %rd2154, %rd2104;
	xor.b64  	%rd2175, %rd2154, %rd2129;
	and.b64  	%rd2176, %rd2175, %rd2174;
	xor.b64  	%rd2177, %rd2176, %rd2154;
	add.s64 	%rd2178, %rd2167, %rd2177;
	add.s64 	%rd2179, %rd2178, %rd2173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9696,%dummy}, %rd2168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9697}, %rd2168;
	}
	shf.r.wrap.b32 	%r9698, %r9697, %r9696, 14;
	shf.r.wrap.b32 	%r9699, %r9696, %r9697, 14;
	mov.b64 	%rd2180, {%r9699, %r9698};
	shf.r.wrap.b32 	%r9700, %r9697, %r9696, 18;
	shf.r.wrap.b32 	%r9701, %r9696, %r9697, 18;
	mov.b64 	%rd2181, {%r9701, %r9700};
	xor.b64  	%rd2182, %rd2181, %rd2180;
	shf.l.wrap.b32 	%r9702, %r9696, %r9697, 23;
	shf.l.wrap.b32 	%r9703, %r9697, %r9696, 23;
	mov.b64 	%rd2183, {%r9703, %r9702};
	xor.b64  	%rd2184, %rd2182, %rd2183;
	xor.b64  	%rd2185, %rd2143, %rd2118;
	and.b64  	%rd2186, %rd2168, %rd2185;
	xor.b64  	%rd2187, %rd2186, %rd2118;
	add.s64 	%rd2188, %rd2093, %rd1888;
	add.s64 	%rd2190, %rd2188, %rd58;
	add.s64 	%rd2191, %rd2190, %rd2187;
	add.s64 	%rd2192, %rd2191, %rd2184;
	add.s64 	%rd2193, %rd2192, %rd2104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9704,%dummy}, %rd2179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9705}, %rd2179;
	}
	shf.r.wrap.b32 	%r9706, %r9705, %r9704, 28;
	shf.r.wrap.b32 	%r9707, %r9704, %r9705, 28;
	mov.b64 	%rd2194, {%r9707, %r9706};
	shf.l.wrap.b32 	%r9708, %r9704, %r9705, 30;
	shf.l.wrap.b32 	%r9709, %r9705, %r9704, 30;
	mov.b64 	%rd2195, {%r9709, %r9708};
	xor.b64  	%rd2196, %rd2195, %rd2194;
	shf.l.wrap.b32 	%r9710, %r9704, %r9705, 25;
	shf.l.wrap.b32 	%r9711, %r9705, %r9704, 25;
	mov.b64 	%rd2197, {%r9711, %r9710};
	xor.b64  	%rd2198, %rd2196, %rd2197;
	xor.b64  	%rd2199, %rd2179, %rd2129;
	xor.b64  	%rd2200, %rd2179, %rd2154;
	and.b64  	%rd2201, %rd2200, %rd2199;
	xor.b64  	%rd2202, %rd2201, %rd2179;
	add.s64 	%rd2203, %rd2192, %rd2202;
	add.s64 	%rd2204, %rd2203, %rd2198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9712,%dummy}, %rd2193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9713}, %rd2193;
	}
	shf.r.wrap.b32 	%r9714, %r9713, %r9712, 14;
	shf.r.wrap.b32 	%r9715, %r9712, %r9713, 14;
	mov.b64 	%rd2205, {%r9715, %r9714};
	shf.r.wrap.b32 	%r9716, %r9713, %r9712, 18;
	shf.r.wrap.b32 	%r9717, %r9712, %r9713, 18;
	mov.b64 	%rd2206, {%r9717, %r9716};
	xor.b64  	%rd2207, %rd2206, %rd2205;
	shf.l.wrap.b32 	%r9718, %r9712, %r9713, 23;
	shf.l.wrap.b32 	%r9719, %r9713, %r9712, 23;
	mov.b64 	%rd2208, {%r9719, %r9718};
	xor.b64  	%rd2209, %rd2207, %rd2208;
	xor.b64  	%rd2210, %rd2168, %rd2143;
	and.b64  	%rd2211, %rd2193, %rd2210;
	xor.b64  	%rd2212, %rd2211, %rd2143;
	add.s64 	%rd2213, %rd2118, %rd1901;
	add.s64 	%rd2215, %rd2213, %rd59;
	add.s64 	%rd2216, %rd2215, %rd2212;
	add.s64 	%rd2217, %rd2216, %rd2209;
	add.s64 	%rd2218, %rd2217, %rd2129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9720,%dummy}, %rd2204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9721}, %rd2204;
	}
	shf.r.wrap.b32 	%r9722, %r9721, %r9720, 28;
	shf.r.wrap.b32 	%r9723, %r9720, %r9721, 28;
	mov.b64 	%rd2219, {%r9723, %r9722};
	shf.l.wrap.b32 	%r9724, %r9720, %r9721, 30;
	shf.l.wrap.b32 	%r9725, %r9721, %r9720, 30;
	mov.b64 	%rd2220, {%r9725, %r9724};
	xor.b64  	%rd2221, %rd2220, %rd2219;
	shf.l.wrap.b32 	%r9726, %r9720, %r9721, 25;
	shf.l.wrap.b32 	%r9727, %r9721, %r9720, 25;
	mov.b64 	%rd2222, {%r9727, %r9726};
	xor.b64  	%rd2223, %rd2221, %rd2222;
	xor.b64  	%rd2224, %rd2204, %rd2154;
	xor.b64  	%rd2225, %rd2204, %rd2179;
	and.b64  	%rd2226, %rd2225, %rd2224;
	xor.b64  	%rd2227, %rd2226, %rd2204;
	add.s64 	%rd2228, %rd2217, %rd2227;
	add.s64 	%rd2229, %rd2228, %rd2223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9728,%dummy}, %rd2218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9729}, %rd2218;
	}
	shf.r.wrap.b32 	%r9730, %r9729, %r9728, 14;
	shf.r.wrap.b32 	%r9731, %r9728, %r9729, 14;
	mov.b64 	%rd2230, {%r9731, %r9730};
	shf.r.wrap.b32 	%r9732, %r9729, %r9728, 18;
	shf.r.wrap.b32 	%r9733, %r9728, %r9729, 18;
	mov.b64 	%rd2231, {%r9733, %r9732};
	xor.b64  	%rd2232, %rd2231, %rd2230;
	shf.l.wrap.b32 	%r9734, %r9728, %r9729, 23;
	shf.l.wrap.b32 	%r9735, %r9729, %r9728, 23;
	mov.b64 	%rd2233, {%r9735, %r9734};
	xor.b64  	%rd2234, %rd2232, %rd2233;
	xor.b64  	%rd2235, %rd2193, %rd2168;
	and.b64  	%rd2236, %rd2218, %rd2235;
	xor.b64  	%rd2237, %rd2236, %rd2168;
	add.s64 	%rd2238, %rd2143, %rd1914;
	add.s64 	%rd2240, %rd2238, %rd60;
	add.s64 	%rd2241, %rd2240, %rd2237;
	add.s64 	%rd2242, %rd2241, %rd2234;
	add.s64 	%rd2243, %rd2242, %rd2154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9736,%dummy}, %rd2229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9737}, %rd2229;
	}
	shf.r.wrap.b32 	%r9738, %r9737, %r9736, 28;
	shf.r.wrap.b32 	%r9739, %r9736, %r9737, 28;
	mov.b64 	%rd2244, {%r9739, %r9738};
	shf.l.wrap.b32 	%r9740, %r9736, %r9737, 30;
	shf.l.wrap.b32 	%r9741, %r9737, %r9736, 30;
	mov.b64 	%rd2245, {%r9741, %r9740};
	xor.b64  	%rd2246, %rd2245, %rd2244;
	shf.l.wrap.b32 	%r9742, %r9736, %r9737, 25;
	shf.l.wrap.b32 	%r9743, %r9737, %r9736, 25;
	mov.b64 	%rd2247, {%r9743, %r9742};
	xor.b64  	%rd2248, %rd2246, %rd2247;
	xor.b64  	%rd2249, %rd2229, %rd2179;
	xor.b64  	%rd2250, %rd2229, %rd2204;
	and.b64  	%rd2251, %rd2250, %rd2249;
	xor.b64  	%rd2252, %rd2251, %rd2229;
	add.s64 	%rd2253, %rd2242, %rd2252;
	add.s64 	%rd2254, %rd2253, %rd2248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9744,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9745}, %rd2243;
	}
	shf.r.wrap.b32 	%r9746, %r9745, %r9744, 14;
	shf.r.wrap.b32 	%r9747, %r9744, %r9745, 14;
	mov.b64 	%rd2255, {%r9747, %r9746};
	shf.r.wrap.b32 	%r9748, %r9745, %r9744, 18;
	shf.r.wrap.b32 	%r9749, %r9744, %r9745, 18;
	mov.b64 	%rd2256, {%r9749, %r9748};
	xor.b64  	%rd2257, %rd2256, %rd2255;
	shf.l.wrap.b32 	%r9750, %r9744, %r9745, 23;
	shf.l.wrap.b32 	%r9751, %r9745, %r9744, 23;
	mov.b64 	%rd2258, {%r9751, %r9750};
	xor.b64  	%rd2259, %rd2257, %rd2258;
	xor.b64  	%rd2260, %rd2218, %rd2193;
	and.b64  	%rd2261, %rd2243, %rd2260;
	xor.b64  	%rd2262, %rd2261, %rd2193;
	add.s64 	%rd2263, %rd2168, %rd1927;
	add.s64 	%rd2265, %rd2263, %rd61;
	add.s64 	%rd2266, %rd2265, %rd2262;
	add.s64 	%rd2267, %rd2266, %rd2259;
	add.s64 	%rd2268, %rd2267, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9752,%dummy}, %rd2254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9753}, %rd2254;
	}
	shf.r.wrap.b32 	%r9754, %r9753, %r9752, 28;
	shf.r.wrap.b32 	%r9755, %r9752, %r9753, 28;
	mov.b64 	%rd2269, {%r9755, %r9754};
	shf.l.wrap.b32 	%r9756, %r9752, %r9753, 30;
	shf.l.wrap.b32 	%r9757, %r9753, %r9752, 30;
	mov.b64 	%rd2270, {%r9757, %r9756};
	xor.b64  	%rd2271, %rd2270, %rd2269;
	shf.l.wrap.b32 	%r9758, %r9752, %r9753, 25;
	shf.l.wrap.b32 	%r9759, %r9753, %r9752, 25;
	mov.b64 	%rd2272, {%r9759, %r9758};
	xor.b64  	%rd2273, %rd2271, %rd2272;
	xor.b64  	%rd2274, %rd2254, %rd2204;
	xor.b64  	%rd2275, %rd2254, %rd2229;
	and.b64  	%rd2276, %rd2275, %rd2274;
	xor.b64  	%rd2277, %rd2276, %rd2254;
	add.s64 	%rd2278, %rd2267, %rd2277;
	add.s64 	%rd2279, %rd2278, %rd2273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9760,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9761}, %rd2268;
	}
	shf.r.wrap.b32 	%r9762, %r9761, %r9760, 14;
	shf.r.wrap.b32 	%r9763, %r9760, %r9761, 14;
	mov.b64 	%rd2280, {%r9763, %r9762};
	shf.r.wrap.b32 	%r9764, %r9761, %r9760, 18;
	shf.r.wrap.b32 	%r9765, %r9760, %r9761, 18;
	mov.b64 	%rd2281, {%r9765, %r9764};
	xor.b64  	%rd2282, %rd2281, %rd2280;
	shf.l.wrap.b32 	%r9766, %r9760, %r9761, 23;
	shf.l.wrap.b32 	%r9767, %r9761, %r9760, 23;
	mov.b64 	%rd2283, {%r9767, %r9766};
	xor.b64  	%rd2284, %rd2282, %rd2283;
	xor.b64  	%rd2285, %rd2243, %rd2218;
	and.b64  	%rd2286, %rd2268, %rd2285;
	xor.b64  	%rd2287, %rd2286, %rd2218;
	add.s64 	%rd2288, %rd2193, %rd1940;
	add.s64 	%rd2290, %rd2288, %rd62;
	add.s64 	%rd2291, %rd2290, %rd2287;
	add.s64 	%rd2292, %rd2291, %rd2284;
	add.s64 	%rd2293, %rd2292, %rd2204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9768,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9769}, %rd2279;
	}
	shf.r.wrap.b32 	%r9770, %r9769, %r9768, 28;
	shf.r.wrap.b32 	%r9771, %r9768, %r9769, 28;
	mov.b64 	%rd2294, {%r9771, %r9770};
	shf.l.wrap.b32 	%r9772, %r9768, %r9769, 30;
	shf.l.wrap.b32 	%r9773, %r9769, %r9768, 30;
	mov.b64 	%rd2295, {%r9773, %r9772};
	xor.b64  	%rd2296, %rd2295, %rd2294;
	shf.l.wrap.b32 	%r9774, %r9768, %r9769, 25;
	shf.l.wrap.b32 	%r9775, %r9769, %r9768, 25;
	mov.b64 	%rd2297, {%r9775, %r9774};
	xor.b64  	%rd2298, %rd2296, %rd2297;
	xor.b64  	%rd2299, %rd2279, %rd2229;
	xor.b64  	%rd2300, %rd2279, %rd2254;
	and.b64  	%rd2301, %rd2300, %rd2299;
	xor.b64  	%rd2302, %rd2301, %rd2279;
	add.s64 	%rd2303, %rd2292, %rd2302;
	add.s64 	%rd2304, %rd2303, %rd2298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9776,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9777}, %rd2293;
	}
	shf.r.wrap.b32 	%r9778, %r9777, %r9776, 14;
	shf.r.wrap.b32 	%r9779, %r9776, %r9777, 14;
	mov.b64 	%rd2305, {%r9779, %r9778};
	shf.r.wrap.b32 	%r9780, %r9777, %r9776, 18;
	shf.r.wrap.b32 	%r9781, %r9776, %r9777, 18;
	mov.b64 	%rd2306, {%r9781, %r9780};
	xor.b64  	%rd2307, %rd2306, %rd2305;
	shf.l.wrap.b32 	%r9782, %r9776, %r9777, 23;
	shf.l.wrap.b32 	%r9783, %r9777, %r9776, 23;
	mov.b64 	%rd2308, {%r9783, %r9782};
	xor.b64  	%rd2309, %rd2307, %rd2308;
	xor.b64  	%rd2310, %rd2268, %rd2243;
	and.b64  	%rd2311, %rd2293, %rd2310;
	xor.b64  	%rd2312, %rd2311, %rd2243;
	add.s64 	%rd2313, %rd2218, %rd1953;
	add.s64 	%rd2315, %rd2313, %rd63;
	add.s64 	%rd2316, %rd2315, %rd2312;
	add.s64 	%rd2317, %rd2316, %rd2309;
	add.s64 	%rd2318, %rd2317, %rd2229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9784,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9785}, %rd2304;
	}
	shf.r.wrap.b32 	%r9786, %r9785, %r9784, 28;
	shf.r.wrap.b32 	%r9787, %r9784, %r9785, 28;
	mov.b64 	%rd2319, {%r9787, %r9786};
	shf.l.wrap.b32 	%r9788, %r9784, %r9785, 30;
	shf.l.wrap.b32 	%r9789, %r9785, %r9784, 30;
	mov.b64 	%rd2320, {%r9789, %r9788};
	xor.b64  	%rd2321, %rd2320, %rd2319;
	shf.l.wrap.b32 	%r9790, %r9784, %r9785, 25;
	shf.l.wrap.b32 	%r9791, %r9785, %r9784, 25;
	mov.b64 	%rd2322, {%r9791, %r9790};
	xor.b64  	%rd2323, %rd2321, %rd2322;
	xor.b64  	%rd2324, %rd2304, %rd2254;
	xor.b64  	%rd2325, %rd2304, %rd2279;
	and.b64  	%rd2326, %rd2325, %rd2324;
	xor.b64  	%rd2327, %rd2326, %rd2304;
	add.s64 	%rd2328, %rd2317, %rd2327;
	add.s64 	%rd2329, %rd2328, %rd2323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9792,%dummy}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9793}, %rd2318;
	}
	shf.r.wrap.b32 	%r9794, %r9793, %r9792, 14;
	shf.r.wrap.b32 	%r9795, %r9792, %r9793, 14;
	mov.b64 	%rd2330, {%r9795, %r9794};
	shf.r.wrap.b32 	%r9796, %r9793, %r9792, 18;
	shf.r.wrap.b32 	%r9797, %r9792, %r9793, 18;
	mov.b64 	%rd2331, {%r9797, %r9796};
	xor.b64  	%rd2332, %rd2331, %rd2330;
	shf.l.wrap.b32 	%r9798, %r9792, %r9793, 23;
	shf.l.wrap.b32 	%r9799, %r9793, %r9792, 23;
	mov.b64 	%rd2333, {%r9799, %r9798};
	xor.b64  	%rd2334, %rd2332, %rd2333;
	xor.b64  	%rd2335, %rd2293, %rd2268;
	and.b64  	%rd2336, %rd2318, %rd2335;
	xor.b64  	%rd2337, %rd2336, %rd2268;
	add.s64 	%rd2338, %rd2243, %rd1966;
	add.s64 	%rd2340, %rd2338, %rd64;
	add.s64 	%rd2341, %rd2340, %rd2337;
	add.s64 	%rd2342, %rd2341, %rd2334;
	add.s64 	%rd2343, %rd2342, %rd2254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9800,%dummy}, %rd2329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9801}, %rd2329;
	}
	shf.r.wrap.b32 	%r9802, %r9801, %r9800, 28;
	shf.r.wrap.b32 	%r9803, %r9800, %r9801, 28;
	mov.b64 	%rd2344, {%r9803, %r9802};
	shf.l.wrap.b32 	%r9804, %r9800, %r9801, 30;
	shf.l.wrap.b32 	%r9805, %r9801, %r9800, 30;
	mov.b64 	%rd2345, {%r9805, %r9804};
	xor.b64  	%rd2346, %rd2345, %rd2344;
	shf.l.wrap.b32 	%r9806, %r9800, %r9801, 25;
	shf.l.wrap.b32 	%r9807, %r9801, %r9800, 25;
	mov.b64 	%rd2347, {%r9807, %r9806};
	xor.b64  	%rd2348, %rd2346, %rd2347;
	xor.b64  	%rd2349, %rd2329, %rd2279;
	xor.b64  	%rd2350, %rd2329, %rd2304;
	and.b64  	%rd2351, %rd2350, %rd2349;
	xor.b64  	%rd2352, %rd2351, %rd2329;
	add.s64 	%rd2353, %rd2342, %rd2352;
	add.s64 	%rd2354, %rd2353, %rd2348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9808,%dummy}, %rd2343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9809}, %rd2343;
	}
	shf.r.wrap.b32 	%r9810, %r9809, %r9808, 14;
	shf.r.wrap.b32 	%r9811, %r9808, %r9809, 14;
	mov.b64 	%rd2355, {%r9811, %r9810};
	shf.r.wrap.b32 	%r9812, %r9809, %r9808, 18;
	shf.r.wrap.b32 	%r9813, %r9808, %r9809, 18;
	mov.b64 	%rd2356, {%r9813, %r9812};
	xor.b64  	%rd2357, %rd2356, %rd2355;
	shf.l.wrap.b32 	%r9814, %r9808, %r9809, 23;
	shf.l.wrap.b32 	%r9815, %r9809, %r9808, 23;
	mov.b64 	%rd2358, {%r9815, %r9814};
	xor.b64  	%rd2359, %rd2357, %rd2358;
	xor.b64  	%rd2360, %rd2318, %rd2293;
	and.b64  	%rd2361, %rd2343, %rd2360;
	xor.b64  	%rd2362, %rd2361, %rd2293;
	add.s64 	%rd2363, %rd2268, %rd1979;
	add.s64 	%rd2365, %rd2363, %rd65;
	add.s64 	%rd2366, %rd2365, %rd2362;
	add.s64 	%rd2367, %rd2366, %rd2359;
	add.s64 	%rd2368, %rd2367, %rd2279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9816,%dummy}, %rd2354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9817}, %rd2354;
	}
	shf.r.wrap.b32 	%r9818, %r9817, %r9816, 28;
	shf.r.wrap.b32 	%r9819, %r9816, %r9817, 28;
	mov.b64 	%rd2369, {%r9819, %r9818};
	shf.l.wrap.b32 	%r9820, %r9816, %r9817, 30;
	shf.l.wrap.b32 	%r9821, %r9817, %r9816, 30;
	mov.b64 	%rd2370, {%r9821, %r9820};
	xor.b64  	%rd2371, %rd2370, %rd2369;
	shf.l.wrap.b32 	%r9822, %r9816, %r9817, 25;
	shf.l.wrap.b32 	%r9823, %r9817, %r9816, 25;
	mov.b64 	%rd2372, {%r9823, %r9822};
	xor.b64  	%rd2373, %rd2371, %rd2372;
	xor.b64  	%rd2374, %rd2354, %rd2304;
	xor.b64  	%rd2375, %rd2354, %rd2329;
	and.b64  	%rd2376, %rd2375, %rd2374;
	xor.b64  	%rd2377, %rd2376, %rd2354;
	add.s64 	%rd2378, %rd2367, %rd2377;
	add.s64 	%rd2379, %rd2378, %rd2373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9824,%dummy}, %rd1966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9825}, %rd1966;
	}
	shf.r.wrap.b32 	%r9826, %r9825, %r9824, 19;
	shf.r.wrap.b32 	%r9827, %r9824, %r9825, 19;
	mov.b64 	%rd2380, {%r9827, %r9826};
	shf.l.wrap.b32 	%r9828, %r9824, %r9825, 3;
	shf.l.wrap.b32 	%r9829, %r9825, %r9824, 3;
	mov.b64 	%rd2381, {%r9829, %r9828};
	shr.u64 	%rd2382, %rd1966, 6;
	xor.b64  	%rd2383, %rd2380, %rd2382;
	xor.b64  	%rd2384, %rd2383, %rd2381;
	shf.r.wrap.b32 	%r9830, %r9439, %r9438, 1;
	shf.r.wrap.b32 	%r9831, %r9438, %r9439, 1;
	mov.b64 	%rd2385, {%r9831, %r9830};
	shf.r.wrap.b32 	%r9832, %r9439, %r9438, 8;
	shf.r.wrap.b32 	%r9833, %r9438, %r9439, 8;
	mov.b64 	%rd2386, {%r9833, %r9832};
	shr.u64 	%rd2387, %rd1797, 7;
	xor.b64  	%rd2388, %rd2385, %rd2387;
	xor.b64  	%rd2389, %rd2388, %rd2386;
	add.s64 	%rd2390, %rd1901, %rd1784;
	add.s64 	%rd2391, %rd2390, %rd2384;
	add.s64 	%rd2392, %rd2391, %rd2389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9834,%dummy}, %rd1979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9835}, %rd1979;
	}
	shf.r.wrap.b32 	%r9836, %r9835, %r9834, 19;
	shf.r.wrap.b32 	%r9837, %r9834, %r9835, 19;
	mov.b64 	%rd2393, {%r9837, %r9836};
	shf.l.wrap.b32 	%r9838, %r9834, %r9835, 3;
	shf.l.wrap.b32 	%r9839, %r9835, %r9834, 3;
	mov.b64 	%rd2394, {%r9839, %r9838};
	shr.u64 	%rd2395, %rd1979, 6;
	xor.b64  	%rd2396, %rd2393, %rd2395;
	xor.b64  	%rd2397, %rd2396, %rd2394;
	shf.r.wrap.b32 	%r9840, %r9449, %r9448, 1;
	shf.r.wrap.b32 	%r9841, %r9448, %r9449, 1;
	mov.b64 	%rd2398, {%r9841, %r9840};
	shf.r.wrap.b32 	%r9842, %r9449, %r9448, 8;
	shf.r.wrap.b32 	%r9843, %r9448, %r9449, 8;
	mov.b64 	%rd2399, {%r9843, %r9842};
	shr.u64 	%rd2400, %rd1810, 7;
	xor.b64  	%rd2401, %rd2398, %rd2400;
	xor.b64  	%rd2402, %rd2401, %rd2399;
	add.s64 	%rd2403, %rd1914, %rd1797;
	add.s64 	%rd2404, %rd2403, %rd2397;
	add.s64 	%rd2405, %rd2404, %rd2402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9844,%dummy}, %rd2392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9845}, %rd2392;
	}
	shf.r.wrap.b32 	%r9846, %r9845, %r9844, 19;
	shf.r.wrap.b32 	%r9847, %r9844, %r9845, 19;
	mov.b64 	%rd2406, {%r9847, %r9846};
	shf.l.wrap.b32 	%r9848, %r9844, %r9845, 3;
	shf.l.wrap.b32 	%r9849, %r9845, %r9844, 3;
	mov.b64 	%rd2407, {%r9849, %r9848};
	shr.u64 	%rd2408, %rd2392, 6;
	xor.b64  	%rd2409, %rd2406, %rd2408;
	xor.b64  	%rd2410, %rd2409, %rd2407;
	shf.r.wrap.b32 	%r9850, %r9459, %r9458, 1;
	shf.r.wrap.b32 	%r9851, %r9458, %r9459, 1;
	mov.b64 	%rd2411, {%r9851, %r9850};
	shf.r.wrap.b32 	%r9852, %r9459, %r9458, 8;
	shf.r.wrap.b32 	%r9853, %r9458, %r9459, 8;
	mov.b64 	%rd2412, {%r9853, %r9852};
	shr.u64 	%rd2413, %rd1823, 7;
	xor.b64  	%rd2414, %rd2411, %rd2413;
	xor.b64  	%rd2415, %rd2414, %rd2412;
	add.s64 	%rd2416, %rd1927, %rd1810;
	add.s64 	%rd2417, %rd2416, %rd2410;
	add.s64 	%rd2418, %rd2417, %rd2415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9854,%dummy}, %rd2405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9855}, %rd2405;
	}
	shf.r.wrap.b32 	%r9856, %r9855, %r9854, 19;
	shf.r.wrap.b32 	%r9857, %r9854, %r9855, 19;
	mov.b64 	%rd2419, {%r9857, %r9856};
	shf.l.wrap.b32 	%r9858, %r9854, %r9855, 3;
	shf.l.wrap.b32 	%r9859, %r9855, %r9854, 3;
	mov.b64 	%rd2420, {%r9859, %r9858};
	shr.u64 	%rd2421, %rd2405, 6;
	xor.b64  	%rd2422, %rd2419, %rd2421;
	xor.b64  	%rd2423, %rd2422, %rd2420;
	shf.r.wrap.b32 	%r9860, %r9469, %r9468, 1;
	shf.r.wrap.b32 	%r9861, %r9468, %r9469, 1;
	mov.b64 	%rd2424, {%r9861, %r9860};
	shf.r.wrap.b32 	%r9862, %r9469, %r9468, 8;
	shf.r.wrap.b32 	%r9863, %r9468, %r9469, 8;
	mov.b64 	%rd2425, {%r9863, %r9862};
	shr.u64 	%rd2426, %rd1836, 7;
	xor.b64  	%rd2427, %rd2424, %rd2426;
	xor.b64  	%rd2428, %rd2427, %rd2425;
	add.s64 	%rd2429, %rd1940, %rd1823;
	add.s64 	%rd2430, %rd2429, %rd2423;
	add.s64 	%rd2431, %rd2430, %rd2428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9864,%dummy}, %rd2418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9865}, %rd2418;
	}
	shf.r.wrap.b32 	%r9866, %r9865, %r9864, 19;
	shf.r.wrap.b32 	%r9867, %r9864, %r9865, 19;
	mov.b64 	%rd2432, {%r9867, %r9866};
	shf.l.wrap.b32 	%r9868, %r9864, %r9865, 3;
	shf.l.wrap.b32 	%r9869, %r9865, %r9864, 3;
	mov.b64 	%rd2433, {%r9869, %r9868};
	shr.u64 	%rd2434, %rd2418, 6;
	xor.b64  	%rd2435, %rd2432, %rd2434;
	xor.b64  	%rd2436, %rd2435, %rd2433;
	shf.r.wrap.b32 	%r9870, %r9479, %r9478, 1;
	shf.r.wrap.b32 	%r9871, %r9478, %r9479, 1;
	mov.b64 	%rd2437, {%r9871, %r9870};
	shf.r.wrap.b32 	%r9872, %r9479, %r9478, 8;
	shf.r.wrap.b32 	%r9873, %r9478, %r9479, 8;
	mov.b64 	%rd2438, {%r9873, %r9872};
	shr.u64 	%rd2439, %rd1849, 7;
	xor.b64  	%rd2440, %rd2437, %rd2439;
	xor.b64  	%rd2441, %rd2440, %rd2438;
	add.s64 	%rd2442, %rd1953, %rd1836;
	add.s64 	%rd2443, %rd2442, %rd2436;
	add.s64 	%rd2444, %rd2443, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9874,%dummy}, %rd2431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9875}, %rd2431;
	}
	shf.r.wrap.b32 	%r9876, %r9875, %r9874, 19;
	shf.r.wrap.b32 	%r9877, %r9874, %r9875, 19;
	mov.b64 	%rd2445, {%r9877, %r9876};
	shf.l.wrap.b32 	%r9878, %r9874, %r9875, 3;
	shf.l.wrap.b32 	%r9879, %r9875, %r9874, 3;
	mov.b64 	%rd2446, {%r9879, %r9878};
	shr.u64 	%rd2447, %rd2431, 6;
	xor.b64  	%rd2448, %rd2445, %rd2447;
	xor.b64  	%rd2449, %rd2448, %rd2446;
	shf.r.wrap.b32 	%r9880, %r9489, %r9488, 1;
	shf.r.wrap.b32 	%r9881, %r9488, %r9489, 1;
	mov.b64 	%rd2450, {%r9881, %r9880};
	shf.r.wrap.b32 	%r9882, %r9489, %r9488, 8;
	shf.r.wrap.b32 	%r9883, %r9488, %r9489, 8;
	mov.b64 	%rd2451, {%r9883, %r9882};
	shr.u64 	%rd2452, %rd1862, 7;
	xor.b64  	%rd2453, %rd2450, %rd2452;
	xor.b64  	%rd2454, %rd2453, %rd2451;
	add.s64 	%rd2455, %rd1966, %rd1849;
	add.s64 	%rd2456, %rd2455, %rd2449;
	add.s64 	%rd2457, %rd2456, %rd2454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9884,%dummy}, %rd2444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9885}, %rd2444;
	}
	shf.r.wrap.b32 	%r9886, %r9885, %r9884, 19;
	shf.r.wrap.b32 	%r9887, %r9884, %r9885, 19;
	mov.b64 	%rd2458, {%r9887, %r9886};
	shf.l.wrap.b32 	%r9888, %r9884, %r9885, 3;
	shf.l.wrap.b32 	%r9889, %r9885, %r9884, 3;
	mov.b64 	%rd2459, {%r9889, %r9888};
	shr.u64 	%rd2460, %rd2444, 6;
	xor.b64  	%rd2461, %rd2458, %rd2460;
	xor.b64  	%rd2462, %rd2461, %rd2459;
	shf.r.wrap.b32 	%r9890, %r9499, %r9498, 1;
	shf.r.wrap.b32 	%r9891, %r9498, %r9499, 1;
	mov.b64 	%rd2463, {%r9891, %r9890};
	shf.r.wrap.b32 	%r9892, %r9499, %r9498, 8;
	shf.r.wrap.b32 	%r9893, %r9498, %r9499, 8;
	mov.b64 	%rd2464, {%r9893, %r9892};
	shr.u64 	%rd2465, %rd1875, 7;
	xor.b64  	%rd2466, %rd2463, %rd2465;
	xor.b64  	%rd2467, %rd2466, %rd2464;
	add.s64 	%rd2468, %rd1979, %rd1862;
	add.s64 	%rd2469, %rd2468, %rd2462;
	add.s64 	%rd2470, %rd2469, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9894,%dummy}, %rd2457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9895}, %rd2457;
	}
	shf.r.wrap.b32 	%r9896, %r9895, %r9894, 19;
	shf.r.wrap.b32 	%r9897, %r9894, %r9895, 19;
	mov.b64 	%rd2471, {%r9897, %r9896};
	shf.l.wrap.b32 	%r9898, %r9894, %r9895, 3;
	shf.l.wrap.b32 	%r9899, %r9895, %r9894, 3;
	mov.b64 	%rd2472, {%r9899, %r9898};
	shr.u64 	%rd2473, %rd2457, 6;
	xor.b64  	%rd2474, %rd2471, %rd2473;
	xor.b64  	%rd2475, %rd2474, %rd2472;
	shf.r.wrap.b32 	%r9900, %r9509, %r9508, 1;
	shf.r.wrap.b32 	%r9901, %r9508, %r9509, 1;
	mov.b64 	%rd2476, {%r9901, %r9900};
	shf.r.wrap.b32 	%r9902, %r9509, %r9508, 8;
	shf.r.wrap.b32 	%r9903, %r9508, %r9509, 8;
	mov.b64 	%rd2477, {%r9903, %r9902};
	shr.u64 	%rd2478, %rd1888, 7;
	xor.b64  	%rd2479, %rd2476, %rd2478;
	xor.b64  	%rd2480, %rd2479, %rd2477;
	add.s64 	%rd2481, %rd2392, %rd1875;
	add.s64 	%rd2482, %rd2481, %rd2475;
	add.s64 	%rd2483, %rd2482, %rd2480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9904,%dummy}, %rd2470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9905}, %rd2470;
	}
	shf.r.wrap.b32 	%r9906, %r9905, %r9904, 19;
	shf.r.wrap.b32 	%r9907, %r9904, %r9905, 19;
	mov.b64 	%rd2484, {%r9907, %r9906};
	shf.l.wrap.b32 	%r9908, %r9904, %r9905, 3;
	shf.l.wrap.b32 	%r9909, %r9905, %r9904, 3;
	mov.b64 	%rd2485, {%r9909, %r9908};
	shr.u64 	%rd2486, %rd2470, 6;
	xor.b64  	%rd2487, %rd2484, %rd2486;
	xor.b64  	%rd2488, %rd2487, %rd2485;
	shf.r.wrap.b32 	%r9910, %r9519, %r9518, 1;
	shf.r.wrap.b32 	%r9911, %r9518, %r9519, 1;
	mov.b64 	%rd2489, {%r9911, %r9910};
	shf.r.wrap.b32 	%r9912, %r9519, %r9518, 8;
	shf.r.wrap.b32 	%r9913, %r9518, %r9519, 8;
	mov.b64 	%rd2490, {%r9913, %r9912};
	shr.u64 	%rd2491, %rd1901, 7;
	xor.b64  	%rd2492, %rd2489, %rd2491;
	xor.b64  	%rd2493, %rd2492, %rd2490;
	add.s64 	%rd2494, %rd2405, %rd1888;
	add.s64 	%rd2495, %rd2494, %rd2488;
	add.s64 	%rd2496, %rd2495, %rd2493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9914,%dummy}, %rd2483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9915}, %rd2483;
	}
	shf.r.wrap.b32 	%r9916, %r9915, %r9914, 19;
	shf.r.wrap.b32 	%r9917, %r9914, %r9915, 19;
	mov.b64 	%rd2497, {%r9917, %r9916};
	shf.l.wrap.b32 	%r9918, %r9914, %r9915, 3;
	shf.l.wrap.b32 	%r9919, %r9915, %r9914, 3;
	mov.b64 	%rd2498, {%r9919, %r9918};
	shr.u64 	%rd2499, %rd2483, 6;
	xor.b64  	%rd2500, %rd2497, %rd2499;
	xor.b64  	%rd2501, %rd2500, %rd2498;
	shf.r.wrap.b32 	%r9920, %r9529, %r9528, 1;
	shf.r.wrap.b32 	%r9921, %r9528, %r9529, 1;
	mov.b64 	%rd2502, {%r9921, %r9920};
	shf.r.wrap.b32 	%r9922, %r9529, %r9528, 8;
	shf.r.wrap.b32 	%r9923, %r9528, %r9529, 8;
	mov.b64 	%rd2503, {%r9923, %r9922};
	shr.u64 	%rd2504, %rd1914, 7;
	xor.b64  	%rd2505, %rd2502, %rd2504;
	xor.b64  	%rd2506, %rd2505, %rd2503;
	add.s64 	%rd2507, %rd2418, %rd1901;
	add.s64 	%rd2508, %rd2507, %rd2501;
	add.s64 	%rd2509, %rd2508, %rd2506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9924,%dummy}, %rd2496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9925}, %rd2496;
	}
	shf.r.wrap.b32 	%r9926, %r9925, %r9924, 19;
	shf.r.wrap.b32 	%r9927, %r9924, %r9925, 19;
	mov.b64 	%rd2510, {%r9927, %r9926};
	shf.l.wrap.b32 	%r9928, %r9924, %r9925, 3;
	shf.l.wrap.b32 	%r9929, %r9925, %r9924, 3;
	mov.b64 	%rd2511, {%r9929, %r9928};
	shr.u64 	%rd2512, %rd2496, 6;
	xor.b64  	%rd2513, %rd2510, %rd2512;
	xor.b64  	%rd2514, %rd2513, %rd2511;
	shf.r.wrap.b32 	%r9930, %r9539, %r9538, 1;
	shf.r.wrap.b32 	%r9931, %r9538, %r9539, 1;
	mov.b64 	%rd2515, {%r9931, %r9930};
	shf.r.wrap.b32 	%r9932, %r9539, %r9538, 8;
	shf.r.wrap.b32 	%r9933, %r9538, %r9539, 8;
	mov.b64 	%rd2516, {%r9933, %r9932};
	shr.u64 	%rd2517, %rd1927, 7;
	xor.b64  	%rd2518, %rd2515, %rd2517;
	xor.b64  	%rd2519, %rd2518, %rd2516;
	add.s64 	%rd2520, %rd2431, %rd1914;
	add.s64 	%rd2521, %rd2520, %rd2514;
	add.s64 	%rd2522, %rd2521, %rd2519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9934,%dummy}, %rd2509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9935}, %rd2509;
	}
	shf.r.wrap.b32 	%r9936, %r9935, %r9934, 19;
	shf.r.wrap.b32 	%r9937, %r9934, %r9935, 19;
	mov.b64 	%rd2523, {%r9937, %r9936};
	shf.l.wrap.b32 	%r9938, %r9934, %r9935, 3;
	shf.l.wrap.b32 	%r9939, %r9935, %r9934, 3;
	mov.b64 	%rd2524, {%r9939, %r9938};
	shr.u64 	%rd2525, %rd2509, 6;
	xor.b64  	%rd2526, %rd2523, %rd2525;
	xor.b64  	%rd2527, %rd2526, %rd2524;
	shf.r.wrap.b32 	%r9940, %r9549, %r9548, 1;
	shf.r.wrap.b32 	%r9941, %r9548, %r9549, 1;
	mov.b64 	%rd2528, {%r9941, %r9940};
	shf.r.wrap.b32 	%r9942, %r9549, %r9548, 8;
	shf.r.wrap.b32 	%r9943, %r9548, %r9549, 8;
	mov.b64 	%rd2529, {%r9943, %r9942};
	shr.u64 	%rd2530, %rd1940, 7;
	xor.b64  	%rd2531, %rd2528, %rd2530;
	xor.b64  	%rd2532, %rd2531, %rd2529;
	add.s64 	%rd2533, %rd2444, %rd1927;
	add.s64 	%rd2534, %rd2533, %rd2527;
	add.s64 	%rd2535, %rd2534, %rd2532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9944,%dummy}, %rd2522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9945}, %rd2522;
	}
	shf.r.wrap.b32 	%r9946, %r9945, %r9944, 19;
	shf.r.wrap.b32 	%r9947, %r9944, %r9945, 19;
	mov.b64 	%rd2536, {%r9947, %r9946};
	shf.l.wrap.b32 	%r9948, %r9944, %r9945, 3;
	shf.l.wrap.b32 	%r9949, %r9945, %r9944, 3;
	mov.b64 	%rd2537, {%r9949, %r9948};
	shr.u64 	%rd2538, %rd2522, 6;
	xor.b64  	%rd2539, %rd2536, %rd2538;
	xor.b64  	%rd2540, %rd2539, %rd2537;
	shf.r.wrap.b32 	%r9950, %r9559, %r9558, 1;
	shf.r.wrap.b32 	%r9951, %r9558, %r9559, 1;
	mov.b64 	%rd2541, {%r9951, %r9950};
	shf.r.wrap.b32 	%r9952, %r9559, %r9558, 8;
	shf.r.wrap.b32 	%r9953, %r9558, %r9559, 8;
	mov.b64 	%rd2542, {%r9953, %r9952};
	shr.u64 	%rd2543, %rd1953, 7;
	xor.b64  	%rd2544, %rd2541, %rd2543;
	xor.b64  	%rd2545, %rd2544, %rd2542;
	add.s64 	%rd2546, %rd2457, %rd1940;
	add.s64 	%rd2547, %rd2546, %rd2540;
	add.s64 	%rd2548, %rd2547, %rd2545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9954,%dummy}, %rd2535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9955}, %rd2535;
	}
	shf.r.wrap.b32 	%r9956, %r9955, %r9954, 19;
	shf.r.wrap.b32 	%r9957, %r9954, %r9955, 19;
	mov.b64 	%rd2549, {%r9957, %r9956};
	shf.l.wrap.b32 	%r9958, %r9954, %r9955, 3;
	shf.l.wrap.b32 	%r9959, %r9955, %r9954, 3;
	mov.b64 	%rd2550, {%r9959, %r9958};
	shr.u64 	%rd2551, %rd2535, 6;
	xor.b64  	%rd2552, %rd2549, %rd2551;
	xor.b64  	%rd2553, %rd2552, %rd2550;
	shf.r.wrap.b32 	%r9960, %r9825, %r9824, 1;
	shf.r.wrap.b32 	%r9961, %r9824, %r9825, 1;
	mov.b64 	%rd2554, {%r9961, %r9960};
	shf.r.wrap.b32 	%r9962, %r9825, %r9824, 8;
	shf.r.wrap.b32 	%r9963, %r9824, %r9825, 8;
	mov.b64 	%rd2555, {%r9963, %r9962};
	shr.u64 	%rd2556, %rd1966, 7;
	xor.b64  	%rd2557, %rd2554, %rd2556;
	xor.b64  	%rd2558, %rd2557, %rd2555;
	add.s64 	%rd2559, %rd2470, %rd1953;
	add.s64 	%rd2560, %rd2559, %rd2553;
	add.s64 	%rd2561, %rd2560, %rd2558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9964,%dummy}, %rd2548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9965}, %rd2548;
	}
	shf.r.wrap.b32 	%r9966, %r9965, %r9964, 19;
	shf.r.wrap.b32 	%r9967, %r9964, %r9965, 19;
	mov.b64 	%rd2562, {%r9967, %r9966};
	shf.l.wrap.b32 	%r9968, %r9964, %r9965, 3;
	shf.l.wrap.b32 	%r9969, %r9965, %r9964, 3;
	mov.b64 	%rd2563, {%r9969, %r9968};
	shr.u64 	%rd2564, %rd2548, 6;
	xor.b64  	%rd2565, %rd2562, %rd2564;
	xor.b64  	%rd2566, %rd2565, %rd2563;
	shf.r.wrap.b32 	%r9970, %r9835, %r9834, 1;
	shf.r.wrap.b32 	%r9971, %r9834, %r9835, 1;
	mov.b64 	%rd2567, {%r9971, %r9970};
	shf.r.wrap.b32 	%r9972, %r9835, %r9834, 8;
	shf.r.wrap.b32 	%r9973, %r9834, %r9835, 8;
	mov.b64 	%rd2568, {%r9973, %r9972};
	shr.u64 	%rd2569, %rd1979, 7;
	xor.b64  	%rd2570, %rd2567, %rd2569;
	xor.b64  	%rd2571, %rd2570, %rd2568;
	add.s64 	%rd2572, %rd2483, %rd1966;
	add.s64 	%rd2573, %rd2572, %rd2566;
	add.s64 	%rd2574, %rd2573, %rd2571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9974,%dummy}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9975}, %rd2561;
	}
	shf.r.wrap.b32 	%r9976, %r9975, %r9974, 19;
	shf.r.wrap.b32 	%r9977, %r9974, %r9975, 19;
	mov.b64 	%rd2575, {%r9977, %r9976};
	shf.l.wrap.b32 	%r9978, %r9974, %r9975, 3;
	shf.l.wrap.b32 	%r9979, %r9975, %r9974, 3;
	mov.b64 	%rd2576, {%r9979, %r9978};
	shr.u64 	%rd2577, %rd2561, 6;
	xor.b64  	%rd2578, %rd2575, %rd2577;
	xor.b64  	%rd2579, %rd2578, %rd2576;
	shf.r.wrap.b32 	%r9980, %r9845, %r9844, 1;
	shf.r.wrap.b32 	%r9981, %r9844, %r9845, 1;
	mov.b64 	%rd2580, {%r9981, %r9980};
	shf.r.wrap.b32 	%r9982, %r9845, %r9844, 8;
	shf.r.wrap.b32 	%r9983, %r9844, %r9845, 8;
	mov.b64 	%rd2581, {%r9983, %r9982};
	shr.u64 	%rd2582, %rd2392, 7;
	xor.b64  	%rd2583, %rd2580, %rd2582;
	xor.b64  	%rd2584, %rd2583, %rd2581;
	add.s64 	%rd2585, %rd2496, %rd1979;
	add.s64 	%rd2586, %rd2585, %rd2579;
	add.s64 	%rd2587, %rd2586, %rd2584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9984,%dummy}, %rd2368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9985}, %rd2368;
	}
	shf.r.wrap.b32 	%r9986, %r9985, %r9984, 14;
	shf.r.wrap.b32 	%r9987, %r9984, %r9985, 14;
	mov.b64 	%rd2588, {%r9987, %r9986};
	shf.r.wrap.b32 	%r9988, %r9985, %r9984, 18;
	shf.r.wrap.b32 	%r9989, %r9984, %r9985, 18;
	mov.b64 	%rd2589, {%r9989, %r9988};
	xor.b64  	%rd2590, %rd2589, %rd2588;
	shf.l.wrap.b32 	%r9990, %r9984, %r9985, 23;
	shf.l.wrap.b32 	%r9991, %r9985, %r9984, 23;
	mov.b64 	%rd2591, {%r9991, %r9990};
	xor.b64  	%rd2592, %rd2590, %rd2591;
	xor.b64  	%rd2593, %rd2343, %rd2318;
	and.b64  	%rd2594, %rd2368, %rd2593;
	xor.b64  	%rd2595, %rd2594, %rd2318;
	add.s64 	%rd2596, %rd2595, %rd2293;
	add.s64 	%rd2597, %rd2596, %rd2392;
	add.s64 	%rd2599, %rd2597, %rd66;
	add.s64 	%rd2600, %rd2599, %rd2592;
	add.s64 	%rd2601, %rd2600, %rd2304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9992,%dummy}, %rd2379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9993}, %rd2379;
	}
	shf.r.wrap.b32 	%r9994, %r9993, %r9992, 28;
	shf.r.wrap.b32 	%r9995, %r9992, %r9993, 28;
	mov.b64 	%rd2602, {%r9995, %r9994};
	shf.l.wrap.b32 	%r9996, %r9992, %r9993, 30;
	shf.l.wrap.b32 	%r9997, %r9993, %r9992, 30;
	mov.b64 	%rd2603, {%r9997, %r9996};
	xor.b64  	%rd2604, %rd2603, %rd2602;
	shf.l.wrap.b32 	%r9998, %r9992, %r9993, 25;
	shf.l.wrap.b32 	%r9999, %r9993, %r9992, 25;
	mov.b64 	%rd2605, {%r9999, %r9998};
	xor.b64  	%rd2606, %rd2604, %rd2605;
	xor.b64  	%rd2607, %rd2379, %rd2329;
	xor.b64  	%rd2608, %rd2379, %rd2354;
	and.b64  	%rd2609, %rd2608, %rd2607;
	xor.b64  	%rd2610, %rd2609, %rd2379;
	add.s64 	%rd2611, %rd2600, %rd2610;
	add.s64 	%rd2612, %rd2611, %rd2606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10000,%dummy}, %rd2601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10001}, %rd2601;
	}
	shf.r.wrap.b32 	%r10002, %r10001, %r10000, 14;
	shf.r.wrap.b32 	%r10003, %r10000, %r10001, 14;
	mov.b64 	%rd2613, {%r10003, %r10002};
	shf.r.wrap.b32 	%r10004, %r10001, %r10000, 18;
	shf.r.wrap.b32 	%r10005, %r10000, %r10001, 18;
	mov.b64 	%rd2614, {%r10005, %r10004};
	xor.b64  	%rd2615, %rd2614, %rd2613;
	shf.l.wrap.b32 	%r10006, %r10000, %r10001, 23;
	shf.l.wrap.b32 	%r10007, %r10001, %r10000, 23;
	mov.b64 	%rd2616, {%r10007, %r10006};
	xor.b64  	%rd2617, %rd2615, %rd2616;
	xor.b64  	%rd2618, %rd2368, %rd2343;
	and.b64  	%rd2619, %rd2601, %rd2618;
	xor.b64  	%rd2620, %rd2619, %rd2343;
	add.s64 	%rd2621, %rd2405, %rd2318;
	add.s64 	%rd2623, %rd2621, %rd67;
	add.s64 	%rd2624, %rd2623, %rd2620;
	add.s64 	%rd2625, %rd2624, %rd2617;
	add.s64 	%rd2626, %rd2625, %rd2329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10008,%dummy}, %rd2612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10009}, %rd2612;
	}
	shf.r.wrap.b32 	%r10010, %r10009, %r10008, 28;
	shf.r.wrap.b32 	%r10011, %r10008, %r10009, 28;
	mov.b64 	%rd2627, {%r10011, %r10010};
	shf.l.wrap.b32 	%r10012, %r10008, %r10009, 30;
	shf.l.wrap.b32 	%r10013, %r10009, %r10008, 30;
	mov.b64 	%rd2628, {%r10013, %r10012};
	xor.b64  	%rd2629, %rd2628, %rd2627;
	shf.l.wrap.b32 	%r10014, %r10008, %r10009, 25;
	shf.l.wrap.b32 	%r10015, %r10009, %r10008, 25;
	mov.b64 	%rd2630, {%r10015, %r10014};
	xor.b64  	%rd2631, %rd2629, %rd2630;
	xor.b64  	%rd2632, %rd2612, %rd2354;
	xor.b64  	%rd2633, %rd2612, %rd2379;
	and.b64  	%rd2634, %rd2633, %rd2632;
	xor.b64  	%rd2635, %rd2634, %rd2612;
	add.s64 	%rd2636, %rd2625, %rd2635;
	add.s64 	%rd2637, %rd2636, %rd2631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10016,%dummy}, %rd2626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10017}, %rd2626;
	}
	shf.r.wrap.b32 	%r10018, %r10017, %r10016, 14;
	shf.r.wrap.b32 	%r10019, %r10016, %r10017, 14;
	mov.b64 	%rd2638, {%r10019, %r10018};
	shf.r.wrap.b32 	%r10020, %r10017, %r10016, 18;
	shf.r.wrap.b32 	%r10021, %r10016, %r10017, 18;
	mov.b64 	%rd2639, {%r10021, %r10020};
	xor.b64  	%rd2640, %rd2639, %rd2638;
	shf.l.wrap.b32 	%r10022, %r10016, %r10017, 23;
	shf.l.wrap.b32 	%r10023, %r10017, %r10016, 23;
	mov.b64 	%rd2641, {%r10023, %r10022};
	xor.b64  	%rd2642, %rd2640, %rd2641;
	xor.b64  	%rd2643, %rd2601, %rd2368;
	and.b64  	%rd2644, %rd2626, %rd2643;
	xor.b64  	%rd2645, %rd2644, %rd2368;
	add.s64 	%rd2646, %rd2418, %rd2343;
	add.s64 	%rd2648, %rd2646, %rd68;
	add.s64 	%rd2649, %rd2648, %rd2645;
	add.s64 	%rd2650, %rd2649, %rd2642;
	add.s64 	%rd2651, %rd2650, %rd2354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10024,%dummy}, %rd2637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10025}, %rd2637;
	}
	shf.r.wrap.b32 	%r10026, %r10025, %r10024, 28;
	shf.r.wrap.b32 	%r10027, %r10024, %r10025, 28;
	mov.b64 	%rd2652, {%r10027, %r10026};
	shf.l.wrap.b32 	%r10028, %r10024, %r10025, 30;
	shf.l.wrap.b32 	%r10029, %r10025, %r10024, 30;
	mov.b64 	%rd2653, {%r10029, %r10028};
	xor.b64  	%rd2654, %rd2653, %rd2652;
	shf.l.wrap.b32 	%r10030, %r10024, %r10025, 25;
	shf.l.wrap.b32 	%r10031, %r10025, %r10024, 25;
	mov.b64 	%rd2655, {%r10031, %r10030};
	xor.b64  	%rd2656, %rd2654, %rd2655;
	xor.b64  	%rd2657, %rd2637, %rd2379;
	xor.b64  	%rd2658, %rd2637, %rd2612;
	and.b64  	%rd2659, %rd2658, %rd2657;
	xor.b64  	%rd2660, %rd2659, %rd2637;
	add.s64 	%rd2661, %rd2650, %rd2660;
	add.s64 	%rd2662, %rd2661, %rd2656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10032,%dummy}, %rd2651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10033}, %rd2651;
	}
	shf.r.wrap.b32 	%r10034, %r10033, %r10032, 14;
	shf.r.wrap.b32 	%r10035, %r10032, %r10033, 14;
	mov.b64 	%rd2663, {%r10035, %r10034};
	shf.r.wrap.b32 	%r10036, %r10033, %r10032, 18;
	shf.r.wrap.b32 	%r10037, %r10032, %r10033, 18;
	mov.b64 	%rd2664, {%r10037, %r10036};
	xor.b64  	%rd2665, %rd2664, %rd2663;
	shf.l.wrap.b32 	%r10038, %r10032, %r10033, 23;
	shf.l.wrap.b32 	%r10039, %r10033, %r10032, 23;
	mov.b64 	%rd2666, {%r10039, %r10038};
	xor.b64  	%rd2667, %rd2665, %rd2666;
	xor.b64  	%rd2668, %rd2626, %rd2601;
	and.b64  	%rd2669, %rd2651, %rd2668;
	xor.b64  	%rd2670, %rd2669, %rd2601;
	add.s64 	%rd2671, %rd2431, %rd2368;
	add.s64 	%rd2673, %rd2671, %rd69;
	add.s64 	%rd2674, %rd2673, %rd2670;
	add.s64 	%rd2675, %rd2674, %rd2667;
	add.s64 	%rd2676, %rd2675, %rd2379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10040,%dummy}, %rd2662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10041}, %rd2662;
	}
	shf.r.wrap.b32 	%r10042, %r10041, %r10040, 28;
	shf.r.wrap.b32 	%r10043, %r10040, %r10041, 28;
	mov.b64 	%rd2677, {%r10043, %r10042};
	shf.l.wrap.b32 	%r10044, %r10040, %r10041, 30;
	shf.l.wrap.b32 	%r10045, %r10041, %r10040, 30;
	mov.b64 	%rd2678, {%r10045, %r10044};
	xor.b64  	%rd2679, %rd2678, %rd2677;
	shf.l.wrap.b32 	%r10046, %r10040, %r10041, 25;
	shf.l.wrap.b32 	%r10047, %r10041, %r10040, 25;
	mov.b64 	%rd2680, {%r10047, %r10046};
	xor.b64  	%rd2681, %rd2679, %rd2680;
	xor.b64  	%rd2682, %rd2662, %rd2612;
	xor.b64  	%rd2683, %rd2662, %rd2637;
	and.b64  	%rd2684, %rd2683, %rd2682;
	xor.b64  	%rd2685, %rd2684, %rd2662;
	add.s64 	%rd2686, %rd2675, %rd2685;
	add.s64 	%rd2687, %rd2686, %rd2681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10048,%dummy}, %rd2676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10049}, %rd2676;
	}
	shf.r.wrap.b32 	%r10050, %r10049, %r10048, 14;
	shf.r.wrap.b32 	%r10051, %r10048, %r10049, 14;
	mov.b64 	%rd2688, {%r10051, %r10050};
	shf.r.wrap.b32 	%r10052, %r10049, %r10048, 18;
	shf.r.wrap.b32 	%r10053, %r10048, %r10049, 18;
	mov.b64 	%rd2689, {%r10053, %r10052};
	xor.b64  	%rd2690, %rd2689, %rd2688;
	shf.l.wrap.b32 	%r10054, %r10048, %r10049, 23;
	shf.l.wrap.b32 	%r10055, %r10049, %r10048, 23;
	mov.b64 	%rd2691, {%r10055, %r10054};
	xor.b64  	%rd2692, %rd2690, %rd2691;
	xor.b64  	%rd2693, %rd2651, %rd2626;
	and.b64  	%rd2694, %rd2676, %rd2693;
	xor.b64  	%rd2695, %rd2694, %rd2626;
	add.s64 	%rd2696, %rd2601, %rd2444;
	add.s64 	%rd2698, %rd2696, %rd70;
	add.s64 	%rd2699, %rd2698, %rd2695;
	add.s64 	%rd2700, %rd2699, %rd2692;
	add.s64 	%rd2701, %rd2700, %rd2612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10056,%dummy}, %rd2687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10057}, %rd2687;
	}
	shf.r.wrap.b32 	%r10058, %r10057, %r10056, 28;
	shf.r.wrap.b32 	%r10059, %r10056, %r10057, 28;
	mov.b64 	%rd2702, {%r10059, %r10058};
	shf.l.wrap.b32 	%r10060, %r10056, %r10057, 30;
	shf.l.wrap.b32 	%r10061, %r10057, %r10056, 30;
	mov.b64 	%rd2703, {%r10061, %r10060};
	xor.b64  	%rd2704, %rd2703, %rd2702;
	shf.l.wrap.b32 	%r10062, %r10056, %r10057, 25;
	shf.l.wrap.b32 	%r10063, %r10057, %r10056, 25;
	mov.b64 	%rd2705, {%r10063, %r10062};
	xor.b64  	%rd2706, %rd2704, %rd2705;
	xor.b64  	%rd2707, %rd2687, %rd2637;
	xor.b64  	%rd2708, %rd2687, %rd2662;
	and.b64  	%rd2709, %rd2708, %rd2707;
	xor.b64  	%rd2710, %rd2709, %rd2687;
	add.s64 	%rd2711, %rd2700, %rd2710;
	add.s64 	%rd2712, %rd2711, %rd2706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10064,%dummy}, %rd2701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10065}, %rd2701;
	}
	shf.r.wrap.b32 	%r10066, %r10065, %r10064, 14;
	shf.r.wrap.b32 	%r10067, %r10064, %r10065, 14;
	mov.b64 	%rd2713, {%r10067, %r10066};
	shf.r.wrap.b32 	%r10068, %r10065, %r10064, 18;
	shf.r.wrap.b32 	%r10069, %r10064, %r10065, 18;
	mov.b64 	%rd2714, {%r10069, %r10068};
	xor.b64  	%rd2715, %rd2714, %rd2713;
	shf.l.wrap.b32 	%r10070, %r10064, %r10065, 23;
	shf.l.wrap.b32 	%r10071, %r10065, %r10064, 23;
	mov.b64 	%rd2716, {%r10071, %r10070};
	xor.b64  	%rd2717, %rd2715, %rd2716;
	xor.b64  	%rd2718, %rd2676, %rd2651;
	and.b64  	%rd2719, %rd2701, %rd2718;
	xor.b64  	%rd2720, %rd2719, %rd2651;
	add.s64 	%rd2721, %rd2626, %rd2457;
	add.s64 	%rd2723, %rd2721, %rd71;
	add.s64 	%rd2724, %rd2723, %rd2720;
	add.s64 	%rd2725, %rd2724, %rd2717;
	add.s64 	%rd2726, %rd2725, %rd2637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10072,%dummy}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10073}, %rd2712;
	}
	shf.r.wrap.b32 	%r10074, %r10073, %r10072, 28;
	shf.r.wrap.b32 	%r10075, %r10072, %r10073, 28;
	mov.b64 	%rd2727, {%r10075, %r10074};
	shf.l.wrap.b32 	%r10076, %r10072, %r10073, 30;
	shf.l.wrap.b32 	%r10077, %r10073, %r10072, 30;
	mov.b64 	%rd2728, {%r10077, %r10076};
	xor.b64  	%rd2729, %rd2728, %rd2727;
	shf.l.wrap.b32 	%r10078, %r10072, %r10073, 25;
	shf.l.wrap.b32 	%r10079, %r10073, %r10072, 25;
	mov.b64 	%rd2730, {%r10079, %r10078};
	xor.b64  	%rd2731, %rd2729, %rd2730;
	xor.b64  	%rd2732, %rd2712, %rd2662;
	xor.b64  	%rd2733, %rd2712, %rd2687;
	and.b64  	%rd2734, %rd2733, %rd2732;
	xor.b64  	%rd2735, %rd2734, %rd2712;
	add.s64 	%rd2736, %rd2725, %rd2735;
	add.s64 	%rd2737, %rd2736, %rd2731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10080,%dummy}, %rd2726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10081}, %rd2726;
	}
	shf.r.wrap.b32 	%r10082, %r10081, %r10080, 14;
	shf.r.wrap.b32 	%r10083, %r10080, %r10081, 14;
	mov.b64 	%rd2738, {%r10083, %r10082};
	shf.r.wrap.b32 	%r10084, %r10081, %r10080, 18;
	shf.r.wrap.b32 	%r10085, %r10080, %r10081, 18;
	mov.b64 	%rd2739, {%r10085, %r10084};
	xor.b64  	%rd2740, %rd2739, %rd2738;
	shf.l.wrap.b32 	%r10086, %r10080, %r10081, 23;
	shf.l.wrap.b32 	%r10087, %r10081, %r10080, 23;
	mov.b64 	%rd2741, {%r10087, %r10086};
	xor.b64  	%rd2742, %rd2740, %rd2741;
	xor.b64  	%rd2743, %rd2701, %rd2676;
	and.b64  	%rd2744, %rd2726, %rd2743;
	xor.b64  	%rd2745, %rd2744, %rd2676;
	add.s64 	%rd2746, %rd2651, %rd2470;
	add.s64 	%rd2748, %rd2746, %rd72;
	add.s64 	%rd2749, %rd2748, %rd2745;
	add.s64 	%rd2750, %rd2749, %rd2742;
	add.s64 	%rd2751, %rd2750, %rd2662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10088,%dummy}, %rd2737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10089}, %rd2737;
	}
	shf.r.wrap.b32 	%r10090, %r10089, %r10088, 28;
	shf.r.wrap.b32 	%r10091, %r10088, %r10089, 28;
	mov.b64 	%rd2752, {%r10091, %r10090};
	shf.l.wrap.b32 	%r10092, %r10088, %r10089, 30;
	shf.l.wrap.b32 	%r10093, %r10089, %r10088, 30;
	mov.b64 	%rd2753, {%r10093, %r10092};
	xor.b64  	%rd2754, %rd2753, %rd2752;
	shf.l.wrap.b32 	%r10094, %r10088, %r10089, 25;
	shf.l.wrap.b32 	%r10095, %r10089, %r10088, 25;
	mov.b64 	%rd2755, {%r10095, %r10094};
	xor.b64  	%rd2756, %rd2754, %rd2755;
	xor.b64  	%rd2757, %rd2737, %rd2687;
	xor.b64  	%rd2758, %rd2737, %rd2712;
	and.b64  	%rd2759, %rd2758, %rd2757;
	xor.b64  	%rd2760, %rd2759, %rd2737;
	add.s64 	%rd2761, %rd2750, %rd2760;
	add.s64 	%rd2762, %rd2761, %rd2756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10096,%dummy}, %rd2751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10097}, %rd2751;
	}
	shf.r.wrap.b32 	%r10098, %r10097, %r10096, 14;
	shf.r.wrap.b32 	%r10099, %r10096, %r10097, 14;
	mov.b64 	%rd2763, {%r10099, %r10098};
	shf.r.wrap.b32 	%r10100, %r10097, %r10096, 18;
	shf.r.wrap.b32 	%r10101, %r10096, %r10097, 18;
	mov.b64 	%rd2764, {%r10101, %r10100};
	xor.b64  	%rd2765, %rd2764, %rd2763;
	shf.l.wrap.b32 	%r10102, %r10096, %r10097, 23;
	shf.l.wrap.b32 	%r10103, %r10097, %r10096, 23;
	mov.b64 	%rd2766, {%r10103, %r10102};
	xor.b64  	%rd2767, %rd2765, %rd2766;
	xor.b64  	%rd2768, %rd2726, %rd2701;
	and.b64  	%rd2769, %rd2751, %rd2768;
	xor.b64  	%rd2770, %rd2769, %rd2701;
	add.s64 	%rd2771, %rd2676, %rd2483;
	add.s64 	%rd2773, %rd2771, %rd73;
	add.s64 	%rd2774, %rd2773, %rd2770;
	add.s64 	%rd2775, %rd2774, %rd2767;
	add.s64 	%rd2776, %rd2775, %rd2687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10104,%dummy}, %rd2762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10105}, %rd2762;
	}
	shf.r.wrap.b32 	%r10106, %r10105, %r10104, 28;
	shf.r.wrap.b32 	%r10107, %r10104, %r10105, 28;
	mov.b64 	%rd2777, {%r10107, %r10106};
	shf.l.wrap.b32 	%r10108, %r10104, %r10105, 30;
	shf.l.wrap.b32 	%r10109, %r10105, %r10104, 30;
	mov.b64 	%rd2778, {%r10109, %r10108};
	xor.b64  	%rd2779, %rd2778, %rd2777;
	shf.l.wrap.b32 	%r10110, %r10104, %r10105, 25;
	shf.l.wrap.b32 	%r10111, %r10105, %r10104, 25;
	mov.b64 	%rd2780, {%r10111, %r10110};
	xor.b64  	%rd2781, %rd2779, %rd2780;
	xor.b64  	%rd2782, %rd2762, %rd2712;
	xor.b64  	%rd2783, %rd2762, %rd2737;
	and.b64  	%rd2784, %rd2783, %rd2782;
	xor.b64  	%rd2785, %rd2784, %rd2762;
	add.s64 	%rd2786, %rd2775, %rd2785;
	add.s64 	%rd2787, %rd2786, %rd2781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10112,%dummy}, %rd2776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10113}, %rd2776;
	}
	shf.r.wrap.b32 	%r10114, %r10113, %r10112, 14;
	shf.r.wrap.b32 	%r10115, %r10112, %r10113, 14;
	mov.b64 	%rd2788, {%r10115, %r10114};
	shf.r.wrap.b32 	%r10116, %r10113, %r10112, 18;
	shf.r.wrap.b32 	%r10117, %r10112, %r10113, 18;
	mov.b64 	%rd2789, {%r10117, %r10116};
	xor.b64  	%rd2790, %rd2789, %rd2788;
	shf.l.wrap.b32 	%r10118, %r10112, %r10113, 23;
	shf.l.wrap.b32 	%r10119, %r10113, %r10112, 23;
	mov.b64 	%rd2791, {%r10119, %r10118};
	xor.b64  	%rd2792, %rd2790, %rd2791;
	xor.b64  	%rd2793, %rd2751, %rd2726;
	and.b64  	%rd2794, %rd2776, %rd2793;
	xor.b64  	%rd2795, %rd2794, %rd2726;
	add.s64 	%rd2796, %rd2701, %rd2496;
	add.s64 	%rd2798, %rd2796, %rd74;
	add.s64 	%rd2799, %rd2798, %rd2795;
	add.s64 	%rd2800, %rd2799, %rd2792;
	add.s64 	%rd2801, %rd2800, %rd2712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10120,%dummy}, %rd2787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10121}, %rd2787;
	}
	shf.r.wrap.b32 	%r10122, %r10121, %r10120, 28;
	shf.r.wrap.b32 	%r10123, %r10120, %r10121, 28;
	mov.b64 	%rd2802, {%r10123, %r10122};
	shf.l.wrap.b32 	%r10124, %r10120, %r10121, 30;
	shf.l.wrap.b32 	%r10125, %r10121, %r10120, 30;
	mov.b64 	%rd2803, {%r10125, %r10124};
	xor.b64  	%rd2804, %rd2803, %rd2802;
	shf.l.wrap.b32 	%r10126, %r10120, %r10121, 25;
	shf.l.wrap.b32 	%r10127, %r10121, %r10120, 25;
	mov.b64 	%rd2805, {%r10127, %r10126};
	xor.b64  	%rd2806, %rd2804, %rd2805;
	xor.b64  	%rd2807, %rd2787, %rd2737;
	xor.b64  	%rd2808, %rd2787, %rd2762;
	and.b64  	%rd2809, %rd2808, %rd2807;
	xor.b64  	%rd2810, %rd2809, %rd2787;
	add.s64 	%rd2811, %rd2800, %rd2810;
	add.s64 	%rd2812, %rd2811, %rd2806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10128,%dummy}, %rd2801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10129}, %rd2801;
	}
	shf.r.wrap.b32 	%r10130, %r10129, %r10128, 14;
	shf.r.wrap.b32 	%r10131, %r10128, %r10129, 14;
	mov.b64 	%rd2813, {%r10131, %r10130};
	shf.r.wrap.b32 	%r10132, %r10129, %r10128, 18;
	shf.r.wrap.b32 	%r10133, %r10128, %r10129, 18;
	mov.b64 	%rd2814, {%r10133, %r10132};
	xor.b64  	%rd2815, %rd2814, %rd2813;
	shf.l.wrap.b32 	%r10134, %r10128, %r10129, 23;
	shf.l.wrap.b32 	%r10135, %r10129, %r10128, 23;
	mov.b64 	%rd2816, {%r10135, %r10134};
	xor.b64  	%rd2817, %rd2815, %rd2816;
	xor.b64  	%rd2818, %rd2776, %rd2751;
	and.b64  	%rd2819, %rd2801, %rd2818;
	xor.b64  	%rd2820, %rd2819, %rd2751;
	add.s64 	%rd2821, %rd2726, %rd2509;
	add.s64 	%rd2823, %rd2821, %rd75;
	add.s64 	%rd2824, %rd2823, %rd2820;
	add.s64 	%rd2825, %rd2824, %rd2817;
	add.s64 	%rd2826, %rd2825, %rd2737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10136,%dummy}, %rd2812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10137}, %rd2812;
	}
	shf.r.wrap.b32 	%r10138, %r10137, %r10136, 28;
	shf.r.wrap.b32 	%r10139, %r10136, %r10137, 28;
	mov.b64 	%rd2827, {%r10139, %r10138};
	shf.l.wrap.b32 	%r10140, %r10136, %r10137, 30;
	shf.l.wrap.b32 	%r10141, %r10137, %r10136, 30;
	mov.b64 	%rd2828, {%r10141, %r10140};
	xor.b64  	%rd2829, %rd2828, %rd2827;
	shf.l.wrap.b32 	%r10142, %r10136, %r10137, 25;
	shf.l.wrap.b32 	%r10143, %r10137, %r10136, 25;
	mov.b64 	%rd2830, {%r10143, %r10142};
	xor.b64  	%rd2831, %rd2829, %rd2830;
	xor.b64  	%rd2832, %rd2812, %rd2762;
	xor.b64  	%rd2833, %rd2812, %rd2787;
	and.b64  	%rd2834, %rd2833, %rd2832;
	xor.b64  	%rd2835, %rd2834, %rd2812;
	add.s64 	%rd2836, %rd2825, %rd2835;
	add.s64 	%rd2837, %rd2836, %rd2831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10144,%dummy}, %rd2826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10145}, %rd2826;
	}
	shf.r.wrap.b32 	%r10146, %r10145, %r10144, 14;
	shf.r.wrap.b32 	%r10147, %r10144, %r10145, 14;
	mov.b64 	%rd2838, {%r10147, %r10146};
	shf.r.wrap.b32 	%r10148, %r10145, %r10144, 18;
	shf.r.wrap.b32 	%r10149, %r10144, %r10145, 18;
	mov.b64 	%rd2839, {%r10149, %r10148};
	xor.b64  	%rd2840, %rd2839, %rd2838;
	shf.l.wrap.b32 	%r10150, %r10144, %r10145, 23;
	shf.l.wrap.b32 	%r10151, %r10145, %r10144, 23;
	mov.b64 	%rd2841, {%r10151, %r10150};
	xor.b64  	%rd2842, %rd2840, %rd2841;
	xor.b64  	%rd2843, %rd2801, %rd2776;
	and.b64  	%rd2844, %rd2826, %rd2843;
	xor.b64  	%rd2845, %rd2844, %rd2776;
	add.s64 	%rd2846, %rd2751, %rd2522;
	add.s64 	%rd2848, %rd2846, %rd76;
	add.s64 	%rd2849, %rd2848, %rd2845;
	add.s64 	%rd2850, %rd2849, %rd2842;
	add.s64 	%rd2851, %rd2850, %rd2762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10152,%dummy}, %rd2837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10153}, %rd2837;
	}
	shf.r.wrap.b32 	%r10154, %r10153, %r10152, 28;
	shf.r.wrap.b32 	%r10155, %r10152, %r10153, 28;
	mov.b64 	%rd2852, {%r10155, %r10154};
	shf.l.wrap.b32 	%r10156, %r10152, %r10153, 30;
	shf.l.wrap.b32 	%r10157, %r10153, %r10152, 30;
	mov.b64 	%rd2853, {%r10157, %r10156};
	xor.b64  	%rd2854, %rd2853, %rd2852;
	shf.l.wrap.b32 	%r10158, %r10152, %r10153, 25;
	shf.l.wrap.b32 	%r10159, %r10153, %r10152, 25;
	mov.b64 	%rd2855, {%r10159, %r10158};
	xor.b64  	%rd2856, %rd2854, %rd2855;
	xor.b64  	%rd2857, %rd2837, %rd2787;
	xor.b64  	%rd2858, %rd2837, %rd2812;
	and.b64  	%rd2859, %rd2858, %rd2857;
	xor.b64  	%rd2860, %rd2859, %rd2837;
	add.s64 	%rd2861, %rd2850, %rd2860;
	add.s64 	%rd2862, %rd2861, %rd2856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10160,%dummy}, %rd2851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10161}, %rd2851;
	}
	shf.r.wrap.b32 	%r10162, %r10161, %r10160, 14;
	shf.r.wrap.b32 	%r10163, %r10160, %r10161, 14;
	mov.b64 	%rd2863, {%r10163, %r10162};
	shf.r.wrap.b32 	%r10164, %r10161, %r10160, 18;
	shf.r.wrap.b32 	%r10165, %r10160, %r10161, 18;
	mov.b64 	%rd2864, {%r10165, %r10164};
	xor.b64  	%rd2865, %rd2864, %rd2863;
	shf.l.wrap.b32 	%r10166, %r10160, %r10161, 23;
	shf.l.wrap.b32 	%r10167, %r10161, %r10160, 23;
	mov.b64 	%rd2866, {%r10167, %r10166};
	xor.b64  	%rd2867, %rd2865, %rd2866;
	xor.b64  	%rd2868, %rd2826, %rd2801;
	and.b64  	%rd2869, %rd2851, %rd2868;
	xor.b64  	%rd2870, %rd2869, %rd2801;
	add.s64 	%rd2871, %rd2776, %rd2535;
	add.s64 	%rd2873, %rd2871, %rd77;
	add.s64 	%rd2874, %rd2873, %rd2870;
	add.s64 	%rd2875, %rd2874, %rd2867;
	add.s64 	%rd2876, %rd2875, %rd2787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10168,%dummy}, %rd2862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10169}, %rd2862;
	}
	shf.r.wrap.b32 	%r10170, %r10169, %r10168, 28;
	shf.r.wrap.b32 	%r10171, %r10168, %r10169, 28;
	mov.b64 	%rd2877, {%r10171, %r10170};
	shf.l.wrap.b32 	%r10172, %r10168, %r10169, 30;
	shf.l.wrap.b32 	%r10173, %r10169, %r10168, 30;
	mov.b64 	%rd2878, {%r10173, %r10172};
	xor.b64  	%rd2879, %rd2878, %rd2877;
	shf.l.wrap.b32 	%r10174, %r10168, %r10169, 25;
	shf.l.wrap.b32 	%r10175, %r10169, %r10168, 25;
	mov.b64 	%rd2880, {%r10175, %r10174};
	xor.b64  	%rd2881, %rd2879, %rd2880;
	xor.b64  	%rd2882, %rd2862, %rd2812;
	xor.b64  	%rd2883, %rd2862, %rd2837;
	and.b64  	%rd2884, %rd2883, %rd2882;
	xor.b64  	%rd2885, %rd2884, %rd2862;
	add.s64 	%rd2886, %rd2875, %rd2885;
	add.s64 	%rd2887, %rd2886, %rd2881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10176,%dummy}, %rd2876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10177}, %rd2876;
	}
	shf.r.wrap.b32 	%r10178, %r10177, %r10176, 14;
	shf.r.wrap.b32 	%r10179, %r10176, %r10177, 14;
	mov.b64 	%rd2888, {%r10179, %r10178};
	shf.r.wrap.b32 	%r10180, %r10177, %r10176, 18;
	shf.r.wrap.b32 	%r10181, %r10176, %r10177, 18;
	mov.b64 	%rd2889, {%r10181, %r10180};
	xor.b64  	%rd2890, %rd2889, %rd2888;
	shf.l.wrap.b32 	%r10182, %r10176, %r10177, 23;
	shf.l.wrap.b32 	%r10183, %r10177, %r10176, 23;
	mov.b64 	%rd2891, {%r10183, %r10182};
	xor.b64  	%rd2892, %rd2890, %rd2891;
	xor.b64  	%rd2893, %rd2851, %rd2826;
	and.b64  	%rd2894, %rd2876, %rd2893;
	xor.b64  	%rd2895, %rd2894, %rd2826;
	add.s64 	%rd2896, %rd2801, %rd2548;
	add.s64 	%rd2898, %rd2896, %rd78;
	add.s64 	%rd2899, %rd2898, %rd2895;
	add.s64 	%rd2900, %rd2899, %rd2892;
	add.s64 	%rd2901, %rd2900, %rd2812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10184,%dummy}, %rd2887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10185}, %rd2887;
	}
	shf.r.wrap.b32 	%r10186, %r10185, %r10184, 28;
	shf.r.wrap.b32 	%r10187, %r10184, %r10185, 28;
	mov.b64 	%rd2902, {%r10187, %r10186};
	shf.l.wrap.b32 	%r10188, %r10184, %r10185, 30;
	shf.l.wrap.b32 	%r10189, %r10185, %r10184, 30;
	mov.b64 	%rd2903, {%r10189, %r10188};
	xor.b64  	%rd2904, %rd2903, %rd2902;
	shf.l.wrap.b32 	%r10190, %r10184, %r10185, 25;
	shf.l.wrap.b32 	%r10191, %r10185, %r10184, 25;
	mov.b64 	%rd2905, {%r10191, %r10190};
	xor.b64  	%rd2906, %rd2904, %rd2905;
	xor.b64  	%rd2907, %rd2887, %rd2837;
	xor.b64  	%rd2908, %rd2887, %rd2862;
	and.b64  	%rd2909, %rd2908, %rd2907;
	xor.b64  	%rd2910, %rd2909, %rd2887;
	add.s64 	%rd2911, %rd2900, %rd2910;
	add.s64 	%rd2912, %rd2911, %rd2906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10192,%dummy}, %rd2901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10193}, %rd2901;
	}
	shf.r.wrap.b32 	%r10194, %r10193, %r10192, 14;
	shf.r.wrap.b32 	%r10195, %r10192, %r10193, 14;
	mov.b64 	%rd2913, {%r10195, %r10194};
	shf.r.wrap.b32 	%r10196, %r10193, %r10192, 18;
	shf.r.wrap.b32 	%r10197, %r10192, %r10193, 18;
	mov.b64 	%rd2914, {%r10197, %r10196};
	xor.b64  	%rd2915, %rd2914, %rd2913;
	shf.l.wrap.b32 	%r10198, %r10192, %r10193, 23;
	shf.l.wrap.b32 	%r10199, %r10193, %r10192, 23;
	mov.b64 	%rd2916, {%r10199, %r10198};
	xor.b64  	%rd2917, %rd2915, %rd2916;
	xor.b64  	%rd2918, %rd2876, %rd2851;
	and.b64  	%rd2919, %rd2901, %rd2918;
	xor.b64  	%rd2920, %rd2919, %rd2851;
	add.s64 	%rd2921, %rd2826, %rd2561;
	add.s64 	%rd2923, %rd2921, %rd79;
	add.s64 	%rd2924, %rd2923, %rd2920;
	add.s64 	%rd2925, %rd2924, %rd2917;
	add.s64 	%rd2926, %rd2925, %rd2837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10200,%dummy}, %rd2912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10201}, %rd2912;
	}
	shf.r.wrap.b32 	%r10202, %r10201, %r10200, 28;
	shf.r.wrap.b32 	%r10203, %r10200, %r10201, 28;
	mov.b64 	%rd2927, {%r10203, %r10202};
	shf.l.wrap.b32 	%r10204, %r10200, %r10201, 30;
	shf.l.wrap.b32 	%r10205, %r10201, %r10200, 30;
	mov.b64 	%rd2928, {%r10205, %r10204};
	xor.b64  	%rd2929, %rd2928, %rd2927;
	shf.l.wrap.b32 	%r10206, %r10200, %r10201, 25;
	shf.l.wrap.b32 	%r10207, %r10201, %r10200, 25;
	mov.b64 	%rd2930, {%r10207, %r10206};
	xor.b64  	%rd2931, %rd2929, %rd2930;
	xor.b64  	%rd2932, %rd2912, %rd2862;
	xor.b64  	%rd2933, %rd2912, %rd2887;
	and.b64  	%rd2934, %rd2933, %rd2932;
	xor.b64  	%rd2935, %rd2934, %rd2912;
	add.s64 	%rd2936, %rd2925, %rd2935;
	add.s64 	%rd2937, %rd2936, %rd2931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10208,%dummy}, %rd2926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10209}, %rd2926;
	}
	shf.r.wrap.b32 	%r10210, %r10209, %r10208, 14;
	shf.r.wrap.b32 	%r10211, %r10208, %r10209, 14;
	mov.b64 	%rd2938, {%r10211, %r10210};
	shf.r.wrap.b32 	%r10212, %r10209, %r10208, 18;
	shf.r.wrap.b32 	%r10213, %r10208, %r10209, 18;
	mov.b64 	%rd2939, {%r10213, %r10212};
	xor.b64  	%rd2940, %rd2939, %rd2938;
	shf.l.wrap.b32 	%r10214, %r10208, %r10209, 23;
	shf.l.wrap.b32 	%r10215, %r10209, %r10208, 23;
	mov.b64 	%rd2941, {%r10215, %r10214};
	xor.b64  	%rd2942, %rd2940, %rd2941;
	xor.b64  	%rd2943, %rd2901, %rd2876;
	and.b64  	%rd2944, %rd2926, %rd2943;
	xor.b64  	%rd2945, %rd2944, %rd2876;
	add.s64 	%rd2946, %rd2574, %rd2851;
	add.s64 	%rd2948, %rd2946, %rd80;
	add.s64 	%rd2949, %rd2948, %rd2945;
	add.s64 	%rd2950, %rd2949, %rd2942;
	add.s64 	%rd2951, %rd2950, %rd2862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10216,%dummy}, %rd2937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10217}, %rd2937;
	}
	shf.r.wrap.b32 	%r10218, %r10217, %r10216, 28;
	shf.r.wrap.b32 	%r10219, %r10216, %r10217, 28;
	mov.b64 	%rd2952, {%r10219, %r10218};
	shf.l.wrap.b32 	%r10220, %r10216, %r10217, 30;
	shf.l.wrap.b32 	%r10221, %r10217, %r10216, 30;
	mov.b64 	%rd2953, {%r10221, %r10220};
	xor.b64  	%rd2954, %rd2953, %rd2952;
	shf.l.wrap.b32 	%r10222, %r10216, %r10217, 25;
	shf.l.wrap.b32 	%r10223, %r10217, %r10216, 25;
	mov.b64 	%rd2955, {%r10223, %r10222};
	xor.b64  	%rd2956, %rd2954, %rd2955;
	xor.b64  	%rd2957, %rd2937, %rd2887;
	xor.b64  	%rd2958, %rd2937, %rd2912;
	and.b64  	%rd2959, %rd2958, %rd2957;
	xor.b64  	%rd2960, %rd2959, %rd2937;
	add.s64 	%rd2961, %rd2950, %rd2960;
	add.s64 	%rd2962, %rd2961, %rd2956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10224,%dummy}, %rd2951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10225}, %rd2951;
	}
	shf.r.wrap.b32 	%r10226, %r10225, %r10224, 14;
	shf.r.wrap.b32 	%r10227, %r10224, %r10225, 14;
	mov.b64 	%rd2963, {%r10227, %r10226};
	shf.r.wrap.b32 	%r10228, %r10225, %r10224, 18;
	shf.r.wrap.b32 	%r10229, %r10224, %r10225, 18;
	mov.b64 	%rd2964, {%r10229, %r10228};
	xor.b64  	%rd2965, %rd2964, %rd2963;
	shf.l.wrap.b32 	%r10230, %r10224, %r10225, 23;
	shf.l.wrap.b32 	%r10231, %r10225, %r10224, 23;
	mov.b64 	%rd2966, {%r10231, %r10230};
	xor.b64  	%rd2967, %rd2965, %rd2966;
	xor.b64  	%rd2968, %rd2926, %rd2901;
	and.b64  	%rd2969, %rd2951, %rd2968;
	xor.b64  	%rd2970, %rd2969, %rd2901;
	add.s64 	%rd2971, %rd2587, %rd2876;
	add.s64 	%rd2973, %rd2971, %rd81;
	add.s64 	%rd2974, %rd2973, %rd2970;
	add.s64 	%rd2975, %rd2974, %rd2967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10232,%dummy}, %rd2962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10233}, %rd2962;
	}
	shf.r.wrap.b32 	%r10234, %r10233, %r10232, 28;
	shf.r.wrap.b32 	%r10235, %r10232, %r10233, 28;
	mov.b64 	%rd2976, {%r10235, %r10234};
	shf.l.wrap.b32 	%r10236, %r10232, %r10233, 30;
	shf.l.wrap.b32 	%r10237, %r10233, %r10232, 30;
	mov.b64 	%rd2977, {%r10237, %r10236};
	xor.b64  	%rd2978, %rd2977, %rd2976;
	shf.l.wrap.b32 	%r10238, %r10232, %r10233, 25;
	shf.l.wrap.b32 	%r10239, %r10233, %r10232, 25;
	mov.b64 	%rd2979, {%r10239, %r10238};
	xor.b64  	%rd2980, %rd2978, %rd2979;
	xor.b64  	%rd2981, %rd2962, %rd2912;
	xor.b64  	%rd2982, %rd2962, %rd2937;
	and.b64  	%rd2983, %rd2982, %rd2981;
	xor.b64  	%rd2984, %rd2983, %rd2962;
	add.s64 	%rd2985, %rd2984, %rd182;
	add.s64 	%rd2986, %rd2985, %rd2975;
	add.s64 	%rd2987, %rd2986, %rd2980;
	st.local.u64 	[%rd1], %rd2987;
	add.s64 	%rd2988, %rd2962, %rd190;
	st.local.u64 	[%rd1+8], %rd2988;
	add.s64 	%rd2989, %rd2937, %rd188;
	st.local.u64 	[%rd1+16], %rd2989;
	add.s64 	%rd2990, %rd2912, %rd180;
	st.local.u64 	[%rd1+24], %rd2990;
	add.s64 	%rd2991, %rd2887, %rd164;
	add.s64 	%rd2992, %rd2991, %rd2975;
	st.local.u64 	[%rd1+32], %rd2992;
	add.s64 	%rd2993, %rd2951, %rd171;
	st.local.u64 	[%rd1+40], %rd2993;
	add.s64 	%rd2994, %rd2926, %rd170;
	st.local.u64 	[%rd1+48], %rd2994;
	add.s64 	%rd2995, %rd2901, %rd175;
	st.local.u64 	[%rd1+56], %rd2995;
	st.local.v2.u32 	[%rd1+64], {%r20246, %r20245};
	st.local.v2.u32 	[%rd1+72], {%r20244, %r20243};
	st.local.v2.u32 	[%rd1+80], {%r20250, %r20249};
	st.local.v2.u32 	[%rd1+88], {%r20248, %r20247};
	st.local.v2.u32 	[%rd1+96], {%r20254, %r20253};
	st.local.v2.u32 	[%rd1+104], {%r20252, %r20251};
	st.local.v2.u32 	[%rd1+112], {%r20258, %r20257};
	st.local.v2.u32 	[%rd1+120], {%r20256, %r20255};
	st.local.v2.u32 	[%rd1+128], {%r20262, %r20261};
	st.local.v2.u32 	[%rd1+136], {%r20260, %r20259};
	st.local.v2.u32 	[%rd1+144], {%r20266, %r20265};
	st.local.v2.u32 	[%rd1+152], {%r20264, %r20263};
	st.local.v2.u32 	[%rd1+160], {%r20270, %r20269};
	st.local.v2.u32 	[%rd1+168], {%r20268, %r20267};
	st.local.v2.u32 	[%rd1+176], {%r20274, %r20273};
	st.local.u32 	[%rd1+184], %r20272;
	bra.uni 	BB4_207;

BB4_97:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_128:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_112:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_143:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_104:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_135:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_119:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_150:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_100:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_131:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_115:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_146:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_107:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_138:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_122:
	mov.u32 	%r20306, %r2846;
	bra.uni 	BB4_206;

BB4_153:
	mov.u32 	%r20306, %r2846;

BB4_206:
	ld.local.u32 	%r12848, [%rd1+64];
	or.b32  	%r12849, %r12848, %r20306;
	ld.local.u32 	%r12850, [%rd1+68];
	ld.local.u32 	%r12851, [%rd1+72];
	ld.local.u32 	%r12852, [%rd1+76];
	ld.local.u32 	%r12853, [%rd1+80];
	ld.local.u32 	%r12854, [%rd1+84];
	ld.local.u32 	%r12855, [%rd1+88];
	ld.local.u32 	%r12856, [%rd1+92];
	ld.local.u32 	%r12857, [%rd1+96];
	ld.local.u32 	%r12858, [%rd1+100];
	ld.local.u32 	%r12859, [%rd1+104];
	ld.local.u32 	%r12860, [%rd1+108];
	ld.local.u32 	%r12861, [%rd1+112];
	ld.local.u32 	%r12862, [%rd1+116];
	ld.local.u32 	%r12863, [%rd1+120];
	ld.local.u32 	%r12864, [%rd1+124];
	ld.local.u32 	%r12865, [%rd1+128];
	ld.local.u32 	%r12866, [%rd1+132];
	ld.local.u32 	%r12867, [%rd1+136];
	ld.local.u32 	%r12868, [%rd1+140];
	ld.local.u32 	%r12869, [%rd1+144];
	ld.local.u32 	%r12870, [%rd1+148];
	ld.local.u32 	%r12871, [%rd1+152];
	ld.local.u32 	%r12872, [%rd1+156];
	ld.local.u32 	%r12873, [%rd1+160];
	ld.local.u32 	%r12874, [%rd1+164];
	ld.local.u32 	%r12875, [%rd1+168];
	ld.local.u32 	%r12876, [%rd1+172];
	ld.local.u32 	%r12877, [%rd1+176];
	ld.local.u32 	%r12878, [%rd1+180];
	ld.local.u32 	%r12879, [%rd1+184];
	ld.local.u32 	%r12880, [%rd1+188];
	st.local.u32 	[%rd1+64], %r12849;
	or.b32  	%r12881, %r12850, %r2848;
	st.local.u32 	[%rd1+68], %r12881;
	or.b32  	%r12882, %r12851, %r2850;
	st.local.u32 	[%rd1+72], %r12882;
	or.b32  	%r12883, %r12852, %r2852;
	st.local.u32 	[%rd1+76], %r12883;
	or.b32  	%r12884, %r12853, %r2854;
	st.local.u32 	[%rd1+80], %r12884;
	or.b32  	%r12885, %r12854, %r2856;
	st.local.u32 	[%rd1+84], %r12885;
	or.b32  	%r12886, %r12855, %r2858;
	st.local.u32 	[%rd1+88], %r12886;
	or.b32  	%r12887, %r12856, %r2860;
	st.local.u32 	[%rd1+92], %r12887;
	or.b32  	%r12888, %r12857, %r2862;
	st.local.u32 	[%rd1+96], %r12888;
	or.b32  	%r12889, %r12858, %r2864;
	st.local.u32 	[%rd1+100], %r12889;
	or.b32  	%r12890, %r12859, %r2866;
	st.local.u32 	[%rd1+104], %r12890;
	or.b32  	%r12891, %r12860, %r2868;
	st.local.u32 	[%rd1+108], %r12891;
	or.b32  	%r12892, %r12861, %r2870;
	st.local.u32 	[%rd1+112], %r12892;
	or.b32  	%r12893, %r12862, %r2872;
	st.local.u32 	[%rd1+116], %r12893;
	or.b32  	%r12894, %r12863, %r2874;
	st.local.u32 	[%rd1+120], %r12894;
	or.b32  	%r12895, %r12864, %r2876;
	st.local.u32 	[%rd1+124], %r12895;
	or.b32  	%r12896, %r12865, %r2878;
	st.local.u32 	[%rd1+128], %r12896;
	or.b32  	%r12897, %r12866, %r2880;
	st.local.u32 	[%rd1+132], %r12897;
	or.b32  	%r12898, %r12867, %r2882;
	st.local.u32 	[%rd1+136], %r12898;
	or.b32  	%r12899, %r12868, %r2884;
	st.local.u32 	[%rd1+140], %r12899;
	or.b32  	%r12900, %r12869, %r2886;
	st.local.u32 	[%rd1+144], %r12900;
	or.b32  	%r12901, %r12870, %r2888;
	st.local.u32 	[%rd1+148], %r12901;
	or.b32  	%r12902, %r12871, %r2890;
	st.local.u32 	[%rd1+152], %r12902;
	or.b32  	%r12903, %r12872, %r2892;
	st.local.u32 	[%rd1+156], %r12903;
	or.b32  	%r12904, %r12873, %r2894;
	st.local.u32 	[%rd1+160], %r12904;
	or.b32  	%r12905, %r12874, %r2896;
	st.local.u32 	[%rd1+164], %r12905;
	or.b32  	%r12906, %r12875, %r2898;
	st.local.u32 	[%rd1+168], %r12906;
	or.b32  	%r12907, %r12876, %r2900;
	st.local.u32 	[%rd1+172], %r12907;
	or.b32  	%r12908, %r12877, %r2902;
	st.local.u32 	[%rd1+176], %r12908;
	or.b32  	%r12909, %r12878, %r2904;
	st.local.u32 	[%rd1+180], %r12909;
	or.b32  	%r12910, %r12879, %r2906;
	st.local.u32 	[%rd1+184], %r12910;
	or.b32  	%r20271, %r12880, %r2908;

BB4_207:
	st.local.u32 	[%rd1+188], %r20271;
	ret;
}

	// .globl	m11300_init
.entry m11300_init(
	.param .u64 .ptr .global .align 4 m11300_init_param_0,
	.param .u64 .ptr .global .align 4 m11300_init_param_1,
	.param .u64 .ptr .global .align 4 m11300_init_param_2,
	.param .u64 .ptr .global .align 4 m11300_init_param_3,
	.param .u64 .ptr .global .align 8 m11300_init_param_4,
	.param .u64 .ptr .global .align 1 m11300_init_param_5,
	.param .u64 .ptr .global .align 4 m11300_init_param_6,
	.param .u64 .ptr .global .align 4 m11300_init_param_7,
	.param .u64 .ptr .global .align 4 m11300_init_param_8,
	.param .u64 .ptr .global .align 4 m11300_init_param_9,
	.param .u64 .ptr .global .align 4 m11300_init_param_10,
	.param .u64 .ptr .global .align 4 m11300_init_param_11,
	.param .u64 .ptr .global .align 4 m11300_init_param_12,
	.param .u64 .ptr .global .align 4 m11300_init_param_13,
	.param .u64 .ptr .global .align 8 m11300_init_param_14,
	.param .u64 .ptr .global .align 4 m11300_init_param_15,
	.param .u64 .ptr .global .align 4 m11300_init_param_16,
	.param .u64 .ptr .global .align 4 m11300_init_param_17,
	.param .u64 .ptr .global .align 4 m11300_init_param_18,
	.param .u64 .ptr .global .align 4 m11300_init_param_19,
	.param .u64 .ptr .global .align 4 m11300_init_param_20,
	.param .u64 .ptr .global .align 4 m11300_init_param_21,
	.param .u64 .ptr .global .align 4 m11300_init_param_22,
	.param .u64 .ptr .global .align 4 m11300_init_param_23,
	.param .u32 m11300_init_param_24,
	.param .u32 m11300_init_param_25,
	.param .u32 m11300_init_param_26,
	.param .u32 m11300_init_param_27,
	.param .u32 m11300_init_param_28,
	.param .u32 m11300_init_param_29,
	.param .u32 m11300_init_param_30,
	.param .u32 m11300_init_param_31,
	.param .u32 m11300_init_param_32,
	.param .u32 m11300_init_param_33,
	.param .u64 m11300_init_param_34
)
{
	.local .align 16 .b8 	__local_depot5[336];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<16>;
	.reg .b32 	%r<6368>;
	.reg .b64 	%rd<8815>;


	mov.u64 	%rd8814, __local_depot5;
	cvta.local.u64 	%SP, %rd8814;
	ld.param.u64 	%rd316, [m11300_init_param_0];
	ld.param.u64 	%rd319, [m11300_init_param_34];
	add.u64 	%rd320, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd320;
	mov.u32 	%r104, %ctaid.x;
	mov.u32 	%r105, %ntid.x;
	mov.b32	%r106, %envreg3;
	mad.lo.s32 	%r107, %r104, %r105, %r106;
	mov.u32 	%r108, %tid.x;
	add.s32 	%r109, %r107, %r108;
	cvt.s64.s32	%rd2, %r109;
	setp.ge.u64	%p1, %rd2, %rd319;
	@%p1 bra 	BB5_7;

	mov.u64 	%rd8741, 7640891576956012808;
	st.local.u64 	[%rd1], %rd8741;
	mov.u64 	%rd8740, -4942790177534073029;
	st.local.u64 	[%rd1+8], %rd8740;
	mov.u64 	%rd8739, 4354685564936845355;
	st.local.u64 	[%rd1+16], %rd8739;
	mov.u64 	%rd8738, -6534734903238641935;
	st.local.u64 	[%rd1+24], %rd8738;
	mov.u64 	%rd8737, 5840696475078001361;
	st.local.u64 	[%rd1+32], %rd8737;
	mov.u64 	%rd8736, -7276294671716946913;
	st.local.u64 	[%rd1+40], %rd8736;
	mov.u64 	%rd8735, 2270897969802886507;
	st.local.u64 	[%rd1+48], %rd8735;
	mov.u64 	%rd8734, 6620516959819538809;
	st.local.u64 	[%rd1+56], %rd8734;
	mov.u32 	%r6335, 0;
	st.local.v2.u32 	[%rd1+64], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+72], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+80], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+88], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+96], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+104], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+112], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+120], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+128], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+136], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+144], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+152], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+160], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+168], {%r6335, %r6335};
	st.local.v2.u32 	[%rd1+176], {%r6335, %r6335};
	add.s64 	%rd3, %rd1, 184;
	st.local.v2.u32 	[%rd1+184], {%r6335, %r6335};
	st.local.u32 	[%rd1+192], %r6335;
	mul.lo.s64 	%rd329, %rd2, 260;
	add.s64 	%rd330, %rd316, %rd329;
	ld.global.u32 	%r1, [%rd330+256];
	ld.const.u64 	%rd4, [k_sha512];
	ld.const.u64 	%rd5, [k_sha512+8];
	ld.const.u64 	%rd6, [k_sha512+16];
	ld.const.u64 	%rd7, [k_sha512+24];
	ld.const.u64 	%rd8, [k_sha512+32];
	ld.const.u64 	%rd9, [k_sha512+40];
	ld.const.u64 	%rd10, [k_sha512+48];
	ld.const.u64 	%rd11, [k_sha512+56];
	ld.const.u64 	%rd12, [k_sha512+64];
	ld.const.u64 	%rd13, [k_sha512+72];
	ld.const.u64 	%rd14, [k_sha512+80];
	ld.const.u64 	%rd15, [k_sha512+88];
	ld.const.u64 	%rd16, [k_sha512+96];
	ld.const.u64 	%rd17, [k_sha512+104];
	ld.const.u64 	%rd18, [k_sha512+112];
	ld.const.u64 	%rd19, [k_sha512+120];
	ld.const.u64 	%rd20, [k_sha512+128];
	ld.const.u64 	%rd21, [k_sha512+136];
	ld.const.u64 	%rd22, [k_sha512+144];
	ld.const.u64 	%rd23, [k_sha512+152];
	ld.const.u64 	%rd24, [k_sha512+160];
	ld.const.u64 	%rd25, [k_sha512+168];
	ld.const.u64 	%rd26, [k_sha512+176];
	ld.const.u64 	%rd27, [k_sha512+184];
	ld.const.u64 	%rd28, [k_sha512+192];
	ld.const.u64 	%rd29, [k_sha512+200];
	ld.const.u64 	%rd30, [k_sha512+208];
	ld.const.u64 	%rd31, [k_sha512+216];
	ld.const.u64 	%rd32, [k_sha512+224];
	ld.const.u64 	%rd33, [k_sha512+232];
	ld.const.u64 	%rd34, [k_sha512+240];
	ld.const.u64 	%rd35, [k_sha512+248];
	ld.const.u64 	%rd36, [k_sha512+256];
	ld.const.u64 	%rd37, [k_sha512+264];
	ld.const.u64 	%rd38, [k_sha512+272];
	ld.const.u64 	%rd39, [k_sha512+280];
	ld.const.u64 	%rd40, [k_sha512+288];
	ld.const.u64 	%rd41, [k_sha512+296];
	ld.const.u64 	%rd42, [k_sha512+304];
	ld.const.u64 	%rd43, [k_sha512+312];
	ld.const.u64 	%rd44, [k_sha512+320];
	ld.const.u64 	%rd45, [k_sha512+328];
	ld.const.u64 	%rd46, [k_sha512+336];
	ld.const.u64 	%rd47, [k_sha512+344];
	ld.const.u64 	%rd48, [k_sha512+352];
	ld.const.u64 	%rd49, [k_sha512+360];
	ld.const.u64 	%rd50, [k_sha512+368];
	ld.const.u64 	%rd51, [k_sha512+376];
	ld.const.u64 	%rd52, [k_sha512+384];
	ld.const.u64 	%rd53, [k_sha512+392];
	ld.const.u64 	%rd54, [k_sha512+400];
	ld.const.u64 	%rd55, [k_sha512+408];
	ld.const.u64 	%rd56, [k_sha512+416];
	ld.const.u64 	%rd57, [k_sha512+424];
	ld.const.u64 	%rd58, [k_sha512+432];
	ld.const.u64 	%rd59, [k_sha512+440];
	ld.const.u64 	%rd60, [k_sha512+448];
	ld.const.u64 	%rd61, [k_sha512+456];
	ld.const.u64 	%rd62, [k_sha512+464];
	ld.const.u64 	%rd63, [k_sha512+472];
	ld.const.u64 	%rd64, [k_sha512+480];
	ld.const.u64 	%rd65, [k_sha512+488];
	ld.const.u64 	%rd66, [k_sha512+496];
	ld.const.u64 	%rd67, [k_sha512+504];
	ld.const.u64 	%rd68, [k_sha512+512];
	ld.const.u64 	%rd69, [k_sha512+520];
	ld.const.u64 	%rd70, [k_sha512+528];
	ld.const.u64 	%rd71, [k_sha512+536];
	ld.const.u64 	%rd72, [k_sha512+544];
	ld.const.u64 	%rd73, [k_sha512+552];
	ld.const.u64 	%rd74, [k_sha512+560];
	ld.const.u64 	%rd75, [k_sha512+568];
	ld.const.u64 	%rd76, [k_sha512+576];
	ld.const.u64 	%rd77, [k_sha512+584];
	ld.const.u64 	%rd78, [k_sha512+592];
	ld.const.u64 	%rd79, [k_sha512+600];
	ld.const.u64 	%rd80, [k_sha512+608];
	ld.const.u64 	%rd81, [k_sha512+616];
	ld.const.u64 	%rd82, [k_sha512+624];
	ld.const.u64 	%rd83, [k_sha512+632];
	mov.u32 	%r6336, %r6335;
	mov.u32 	%r6337, %r6335;
	bra.uni 	BB5_2;

BB5_8:
	add.s32 	%r6336, %r6336, 128;
	st.local.u32 	[%rd1+192], %r6336;
	mov.u32 	%r4379, 0;
	mov.u32 	%r4380, 12816;
	// inline asm
	prmt.b32 %r4249, %r4379, %r175, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4377, %r113, %r4379, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4373, %r115, %r113, %r4380;
	// inline asm
	or.b32  	%r4381, %r6335, %r4377;
	mov.b64	%rd5962, {%r4373, %r4381};
	// inline asm
	prmt.b32 %r4369, %r117, %r115, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4365, %r119, %r117, %r4380;
	// inline asm
	mov.b64	%rd5963, {%r4365, %r4369};
	// inline asm
	prmt.b32 %r4361, %r121, %r119, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4357, %r123, %r121, %r4380;
	// inline asm
	mov.b64	%rd5964, {%r4357, %r4361};
	// inline asm
	prmt.b32 %r4353, %r125, %r123, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4349, %r127, %r125, %r4380;
	// inline asm
	mov.b64	%rd5965, {%r4349, %r4353};
	// inline asm
	prmt.b32 %r4345, %r129, %r127, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4341, %r131, %r129, %r4380;
	// inline asm
	mov.b64	%rd5966, {%r4341, %r4345};
	// inline asm
	prmt.b32 %r4337, %r133, %r131, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4333, %r135, %r133, %r4380;
	// inline asm
	mov.b64	%rd5967, {%r4333, %r4337};
	// inline asm
	prmt.b32 %r4329, %r137, %r135, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4325, %r139, %r137, %r4380;
	// inline asm
	mov.b64	%rd5968, {%r4325, %r4329};
	// inline asm
	prmt.b32 %r4321, %r141, %r139, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4317, %r143, %r141, %r4380;
	// inline asm
	mov.b64	%rd5969, {%r4317, %r4321};
	// inline asm
	prmt.b32 %r4313, %r145, %r143, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4309, %r147, %r145, %r4380;
	// inline asm
	mov.b64	%rd5970, {%r4309, %r4313};
	// inline asm
	prmt.b32 %r4305, %r149, %r147, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4301, %r151, %r149, %r4380;
	// inline asm
	mov.b64	%rd5971, {%r4301, %r4305};
	// inline asm
	prmt.b32 %r4297, %r153, %r151, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4293, %r155, %r153, %r4380;
	// inline asm
	mov.b64	%rd5972, {%r4293, %r4297};
	// inline asm
	prmt.b32 %r4289, %r157, %r155, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4285, %r159, %r157, %r4380;
	// inline asm
	mov.b64	%rd5973, {%r4285, %r4289};
	// inline asm
	prmt.b32 %r4281, %r161, %r159, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4277, %r163, %r161, %r4380;
	// inline asm
	mov.b64	%rd5974, {%r4277, %r4281};
	// inline asm
	prmt.b32 %r4273, %r165, %r163, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4269, %r167, %r165, %r4380;
	// inline asm
	mov.b64	%rd5975, {%r4269, %r4273};
	// inline asm
	prmt.b32 %r4265, %r169, %r167, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4261, %r171, %r169, %r4380;
	// inline asm
	mov.b64	%rd5976, {%r4261, %r4265};
	// inline asm
	prmt.b32 %r4257, %r173, %r171, %r4380;
	// inline asm
	// inline asm
	prmt.b32 %r4253, %r175, %r173, %r4380;
	// inline asm
	mov.b64	%rd5977, {%r4253, %r4257};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4382,%dummy}, %rd8737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4383}, %rd8737;
	}
	shf.r.wrap.b32 	%r4384, %r4383, %r4382, 18;
	shf.r.wrap.b32 	%r4385, %r4382, %r4383, 18;
	mov.b64 	%rd5978, {%r4385, %r4384};
	shf.r.wrap.b32 	%r4386, %r4383, %r4382, 14;
	shf.r.wrap.b32 	%r4387, %r4382, %r4383, 14;
	mov.b64 	%rd5979, {%r4387, %r4386};
	xor.b64  	%rd5980, %rd5978, %rd5979;
	shf.l.wrap.b32 	%r4388, %r4382, %r4383, 23;
	shf.l.wrap.b32 	%r4389, %r4383, %r4382, 23;
	mov.b64 	%rd5981, {%r4389, %r4388};
	xor.b64  	%rd5982, %rd5980, %rd5981;
	xor.b64  	%rd5983, %rd8735, %rd8736;
	and.b64  	%rd5984, %rd5983, %rd8737;
	xor.b64  	%rd5985, %rd5984, %rd8735;
	add.s64 	%rd5986, %rd5985, %rd8734;
	add.s64 	%rd5987, %rd5986, %rd5962;
	add.s64 	%rd5988, %rd5987, %rd4;
	add.s64 	%rd5989, %rd5988, %rd5982;
	add.s64 	%rd5990, %rd5989, %rd8738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4390}, %rd8741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4391,%dummy}, %rd8741;
	}
	shf.l.wrap.b32 	%r4392, %r4391, %r4390, 30;
	shf.l.wrap.b32 	%r4393, %r4390, %r4391, 30;
	mov.b64 	%rd5991, {%r4393, %r4392};
	shf.r.wrap.b32 	%r4394, %r4390, %r4391, 28;
	shf.r.wrap.b32 	%r4395, %r4391, %r4390, 28;
	mov.b64 	%rd5992, {%r4395, %r4394};
	xor.b64  	%rd5993, %rd5991, %rd5992;
	shf.l.wrap.b32 	%r4396, %r4391, %r4390, 25;
	shf.l.wrap.b32 	%r4397, %r4390, %r4391, 25;
	mov.b64 	%rd5994, {%r4397, %r4396};
	xor.b64  	%rd5995, %rd5993, %rd5994;
	xor.b64  	%rd5996, %rd8740, %rd8741;
	xor.b64  	%rd5997, %rd8739, %rd8741;
	and.b64  	%rd5998, %rd5997, %rd5996;
	xor.b64  	%rd5999, %rd5998, %rd8741;
	add.s64 	%rd6000, %rd5989, %rd5999;
	add.s64 	%rd6001, %rd6000, %rd5995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4398,%dummy}, %rd5990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4399}, %rd5990;
	}
	shf.r.wrap.b32 	%r4400, %r4399, %r4398, 14;
	shf.r.wrap.b32 	%r4401, %r4398, %r4399, 14;
	mov.b64 	%rd6002, {%r4401, %r4400};
	shf.r.wrap.b32 	%r4402, %r4399, %r4398, 18;
	shf.r.wrap.b32 	%r4403, %r4398, %r4399, 18;
	mov.b64 	%rd6003, {%r4403, %r4402};
	xor.b64  	%rd6004, %rd6003, %rd6002;
	shf.l.wrap.b32 	%r4404, %r4398, %r4399, 23;
	shf.l.wrap.b32 	%r4405, %r4399, %r4398, 23;
	mov.b64 	%rd6005, {%r4405, %r4404};
	xor.b64  	%rd6006, %rd6004, %rd6005;
	xor.b64  	%rd6007, %rd8736, %rd8737;
	and.b64  	%rd6008, %rd5990, %rd6007;
	xor.b64  	%rd6009, %rd6008, %rd8736;
	add.s64 	%rd6010, %rd5963, %rd8735;
	add.s64 	%rd6011, %rd6010, %rd5;
	add.s64 	%rd6012, %rd6011, %rd6009;
	add.s64 	%rd6013, %rd6012, %rd6006;
	add.s64 	%rd6014, %rd6013, %rd8739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4406,%dummy}, %rd6001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4407}, %rd6001;
	}
	shf.r.wrap.b32 	%r4408, %r4407, %r4406, 28;
	shf.r.wrap.b32 	%r4409, %r4406, %r4407, 28;
	mov.b64 	%rd6015, {%r4409, %r4408};
	shf.l.wrap.b32 	%r4410, %r4406, %r4407, 30;
	shf.l.wrap.b32 	%r4411, %r4407, %r4406, 30;
	mov.b64 	%rd6016, {%r4411, %r4410};
	xor.b64  	%rd6017, %rd6016, %rd6015;
	shf.l.wrap.b32 	%r4412, %r4406, %r4407, 25;
	shf.l.wrap.b32 	%r4413, %r4407, %r4406, 25;
	mov.b64 	%rd6018, {%r4413, %r4412};
	xor.b64  	%rd6019, %rd6017, %rd6018;
	xor.b64  	%rd6020, %rd6001, %rd8740;
	xor.b64  	%rd6021, %rd6001, %rd8741;
	and.b64  	%rd6022, %rd6021, %rd6020;
	xor.b64  	%rd6023, %rd6022, %rd6001;
	add.s64 	%rd6024, %rd6013, %rd6023;
	add.s64 	%rd6025, %rd6024, %rd6019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4414,%dummy}, %rd6014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4415}, %rd6014;
	}
	shf.r.wrap.b32 	%r4416, %r4415, %r4414, 14;
	shf.r.wrap.b32 	%r4417, %r4414, %r4415, 14;
	mov.b64 	%rd6026, {%r4417, %r4416};
	shf.r.wrap.b32 	%r4418, %r4415, %r4414, 18;
	shf.r.wrap.b32 	%r4419, %r4414, %r4415, 18;
	mov.b64 	%rd6027, {%r4419, %r4418};
	xor.b64  	%rd6028, %rd6027, %rd6026;
	shf.l.wrap.b32 	%r4420, %r4414, %r4415, 23;
	shf.l.wrap.b32 	%r4421, %r4415, %r4414, 23;
	mov.b64 	%rd6029, {%r4421, %r4420};
	xor.b64  	%rd6030, %rd6028, %rd6029;
	xor.b64  	%rd6031, %rd5990, %rd8737;
	and.b64  	%rd6032, %rd6014, %rd6031;
	xor.b64  	%rd6033, %rd6032, %rd8737;
	add.s64 	%rd6034, %rd5964, %rd8736;
	add.s64 	%rd6035, %rd6034, %rd6;
	add.s64 	%rd6036, %rd6035, %rd6033;
	add.s64 	%rd6037, %rd6036, %rd6030;
	add.s64 	%rd6038, %rd6037, %rd8740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4422,%dummy}, %rd6025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4423}, %rd6025;
	}
	shf.r.wrap.b32 	%r4424, %r4423, %r4422, 28;
	shf.r.wrap.b32 	%r4425, %r4422, %r4423, 28;
	mov.b64 	%rd6039, {%r4425, %r4424};
	shf.l.wrap.b32 	%r4426, %r4422, %r4423, 30;
	shf.l.wrap.b32 	%r4427, %r4423, %r4422, 30;
	mov.b64 	%rd6040, {%r4427, %r4426};
	xor.b64  	%rd6041, %rd6040, %rd6039;
	shf.l.wrap.b32 	%r4428, %r4422, %r4423, 25;
	shf.l.wrap.b32 	%r4429, %r4423, %r4422, 25;
	mov.b64 	%rd6042, {%r4429, %r4428};
	xor.b64  	%rd6043, %rd6041, %rd6042;
	xor.b64  	%rd6044, %rd6025, %rd8741;
	xor.b64  	%rd6045, %rd6025, %rd6001;
	and.b64  	%rd6046, %rd6045, %rd6044;
	xor.b64  	%rd6047, %rd6046, %rd6025;
	add.s64 	%rd6048, %rd6037, %rd6047;
	add.s64 	%rd6049, %rd6048, %rd6043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4430,%dummy}, %rd6038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4431}, %rd6038;
	}
	shf.r.wrap.b32 	%r4432, %r4431, %r4430, 14;
	shf.r.wrap.b32 	%r4433, %r4430, %r4431, 14;
	mov.b64 	%rd6050, {%r4433, %r4432};
	shf.r.wrap.b32 	%r4434, %r4431, %r4430, 18;
	shf.r.wrap.b32 	%r4435, %r4430, %r4431, 18;
	mov.b64 	%rd6051, {%r4435, %r4434};
	xor.b64  	%rd6052, %rd6051, %rd6050;
	shf.l.wrap.b32 	%r4436, %r4430, %r4431, 23;
	shf.l.wrap.b32 	%r4437, %r4431, %r4430, 23;
	mov.b64 	%rd6053, {%r4437, %r4436};
	xor.b64  	%rd6054, %rd6052, %rd6053;
	xor.b64  	%rd6055, %rd6014, %rd5990;
	and.b64  	%rd6056, %rd6038, %rd6055;
	xor.b64  	%rd6057, %rd6056, %rd5990;
	add.s64 	%rd6058, %rd5965, %rd8737;
	add.s64 	%rd6059, %rd6058, %rd7;
	add.s64 	%rd6060, %rd6059, %rd6057;
	add.s64 	%rd6061, %rd6060, %rd6054;
	add.s64 	%rd6062, %rd6061, %rd8741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4438,%dummy}, %rd6049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4439}, %rd6049;
	}
	shf.r.wrap.b32 	%r4440, %r4439, %r4438, 28;
	shf.r.wrap.b32 	%r4441, %r4438, %r4439, 28;
	mov.b64 	%rd6063, {%r4441, %r4440};
	shf.l.wrap.b32 	%r4442, %r4438, %r4439, 30;
	shf.l.wrap.b32 	%r4443, %r4439, %r4438, 30;
	mov.b64 	%rd6064, {%r4443, %r4442};
	xor.b64  	%rd6065, %rd6064, %rd6063;
	shf.l.wrap.b32 	%r4444, %r4438, %r4439, 25;
	shf.l.wrap.b32 	%r4445, %r4439, %r4438, 25;
	mov.b64 	%rd6066, {%r4445, %r4444};
	xor.b64  	%rd6067, %rd6065, %rd6066;
	xor.b64  	%rd6068, %rd6049, %rd6001;
	xor.b64  	%rd6069, %rd6049, %rd6025;
	and.b64  	%rd6070, %rd6069, %rd6068;
	xor.b64  	%rd6071, %rd6070, %rd6049;
	add.s64 	%rd6072, %rd6061, %rd6071;
	add.s64 	%rd6073, %rd6072, %rd6067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4446,%dummy}, %rd6062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4447}, %rd6062;
	}
	shf.r.wrap.b32 	%r4448, %r4447, %r4446, 14;
	shf.r.wrap.b32 	%r4449, %r4446, %r4447, 14;
	mov.b64 	%rd6074, {%r4449, %r4448};
	shf.r.wrap.b32 	%r4450, %r4447, %r4446, 18;
	shf.r.wrap.b32 	%r4451, %r4446, %r4447, 18;
	mov.b64 	%rd6075, {%r4451, %r4450};
	xor.b64  	%rd6076, %rd6075, %rd6074;
	shf.l.wrap.b32 	%r4452, %r4446, %r4447, 23;
	shf.l.wrap.b32 	%r4453, %r4447, %r4446, 23;
	mov.b64 	%rd6077, {%r4453, %r4452};
	xor.b64  	%rd6078, %rd6076, %rd6077;
	xor.b64  	%rd6079, %rd6038, %rd6014;
	and.b64  	%rd6080, %rd6062, %rd6079;
	xor.b64  	%rd6081, %rd6080, %rd6014;
	add.s64 	%rd6082, %rd5990, %rd5966;
	add.s64 	%rd6083, %rd6082, %rd8;
	add.s64 	%rd6084, %rd6083, %rd6081;
	add.s64 	%rd6085, %rd6084, %rd6078;
	add.s64 	%rd6086, %rd6085, %rd6001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4454,%dummy}, %rd6073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4455}, %rd6073;
	}
	shf.r.wrap.b32 	%r4456, %r4455, %r4454, 28;
	shf.r.wrap.b32 	%r4457, %r4454, %r4455, 28;
	mov.b64 	%rd6087, {%r4457, %r4456};
	shf.l.wrap.b32 	%r4458, %r4454, %r4455, 30;
	shf.l.wrap.b32 	%r4459, %r4455, %r4454, 30;
	mov.b64 	%rd6088, {%r4459, %r4458};
	xor.b64  	%rd6089, %rd6088, %rd6087;
	shf.l.wrap.b32 	%r4460, %r4454, %r4455, 25;
	shf.l.wrap.b32 	%r4461, %r4455, %r4454, 25;
	mov.b64 	%rd6090, {%r4461, %r4460};
	xor.b64  	%rd6091, %rd6089, %rd6090;
	xor.b64  	%rd6092, %rd6073, %rd6025;
	xor.b64  	%rd6093, %rd6073, %rd6049;
	and.b64  	%rd6094, %rd6093, %rd6092;
	xor.b64  	%rd6095, %rd6094, %rd6073;
	add.s64 	%rd6096, %rd6085, %rd6095;
	add.s64 	%rd6097, %rd6096, %rd6091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4462,%dummy}, %rd6086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4463}, %rd6086;
	}
	shf.r.wrap.b32 	%r4464, %r4463, %r4462, 14;
	shf.r.wrap.b32 	%r4465, %r4462, %r4463, 14;
	mov.b64 	%rd6098, {%r4465, %r4464};
	shf.r.wrap.b32 	%r4466, %r4463, %r4462, 18;
	shf.r.wrap.b32 	%r4467, %r4462, %r4463, 18;
	mov.b64 	%rd6099, {%r4467, %r4466};
	xor.b64  	%rd6100, %rd6099, %rd6098;
	shf.l.wrap.b32 	%r4468, %r4462, %r4463, 23;
	shf.l.wrap.b32 	%r4469, %r4463, %r4462, 23;
	mov.b64 	%rd6101, {%r4469, %r4468};
	xor.b64  	%rd6102, %rd6100, %rd6101;
	xor.b64  	%rd6103, %rd6062, %rd6038;
	and.b64  	%rd6104, %rd6086, %rd6103;
	xor.b64  	%rd6105, %rd6104, %rd6038;
	add.s64 	%rd6106, %rd6014, %rd5967;
	add.s64 	%rd6107, %rd6106, %rd9;
	add.s64 	%rd6108, %rd6107, %rd6105;
	add.s64 	%rd6109, %rd6108, %rd6102;
	add.s64 	%rd6110, %rd6109, %rd6025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4470,%dummy}, %rd6097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4471}, %rd6097;
	}
	shf.r.wrap.b32 	%r4472, %r4471, %r4470, 28;
	shf.r.wrap.b32 	%r4473, %r4470, %r4471, 28;
	mov.b64 	%rd6111, {%r4473, %r4472};
	shf.l.wrap.b32 	%r4474, %r4470, %r4471, 30;
	shf.l.wrap.b32 	%r4475, %r4471, %r4470, 30;
	mov.b64 	%rd6112, {%r4475, %r4474};
	xor.b64  	%rd6113, %rd6112, %rd6111;
	shf.l.wrap.b32 	%r4476, %r4470, %r4471, 25;
	shf.l.wrap.b32 	%r4477, %r4471, %r4470, 25;
	mov.b64 	%rd6114, {%r4477, %r4476};
	xor.b64  	%rd6115, %rd6113, %rd6114;
	xor.b64  	%rd6116, %rd6097, %rd6049;
	xor.b64  	%rd6117, %rd6097, %rd6073;
	and.b64  	%rd6118, %rd6117, %rd6116;
	xor.b64  	%rd6119, %rd6118, %rd6097;
	add.s64 	%rd6120, %rd6109, %rd6119;
	add.s64 	%rd6121, %rd6120, %rd6115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4478,%dummy}, %rd6110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4479}, %rd6110;
	}
	shf.r.wrap.b32 	%r4480, %r4479, %r4478, 14;
	shf.r.wrap.b32 	%r4481, %r4478, %r4479, 14;
	mov.b64 	%rd6122, {%r4481, %r4480};
	shf.r.wrap.b32 	%r4482, %r4479, %r4478, 18;
	shf.r.wrap.b32 	%r4483, %r4478, %r4479, 18;
	mov.b64 	%rd6123, {%r4483, %r4482};
	xor.b64  	%rd6124, %rd6123, %rd6122;
	shf.l.wrap.b32 	%r4484, %r4478, %r4479, 23;
	shf.l.wrap.b32 	%r4485, %r4479, %r4478, 23;
	mov.b64 	%rd6125, {%r4485, %r4484};
	xor.b64  	%rd6126, %rd6124, %rd6125;
	xor.b64  	%rd6127, %rd6086, %rd6062;
	and.b64  	%rd6128, %rd6110, %rd6127;
	xor.b64  	%rd6129, %rd6128, %rd6062;
	add.s64 	%rd6130, %rd6038, %rd5968;
	add.s64 	%rd6131, %rd6130, %rd10;
	add.s64 	%rd6132, %rd6131, %rd6129;
	add.s64 	%rd6133, %rd6132, %rd6126;
	add.s64 	%rd6134, %rd6133, %rd6049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4486,%dummy}, %rd6121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4487}, %rd6121;
	}
	shf.r.wrap.b32 	%r4488, %r4487, %r4486, 28;
	shf.r.wrap.b32 	%r4489, %r4486, %r4487, 28;
	mov.b64 	%rd6135, {%r4489, %r4488};
	shf.l.wrap.b32 	%r4490, %r4486, %r4487, 30;
	shf.l.wrap.b32 	%r4491, %r4487, %r4486, 30;
	mov.b64 	%rd6136, {%r4491, %r4490};
	xor.b64  	%rd6137, %rd6136, %rd6135;
	shf.l.wrap.b32 	%r4492, %r4486, %r4487, 25;
	shf.l.wrap.b32 	%r4493, %r4487, %r4486, 25;
	mov.b64 	%rd6138, {%r4493, %r4492};
	xor.b64  	%rd6139, %rd6137, %rd6138;
	xor.b64  	%rd6140, %rd6121, %rd6073;
	xor.b64  	%rd6141, %rd6121, %rd6097;
	and.b64  	%rd6142, %rd6141, %rd6140;
	xor.b64  	%rd6143, %rd6142, %rd6121;
	add.s64 	%rd6144, %rd6133, %rd6143;
	add.s64 	%rd6145, %rd6144, %rd6139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4494,%dummy}, %rd6134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4495}, %rd6134;
	}
	shf.r.wrap.b32 	%r4496, %r4495, %r4494, 14;
	shf.r.wrap.b32 	%r4497, %r4494, %r4495, 14;
	mov.b64 	%rd6146, {%r4497, %r4496};
	shf.r.wrap.b32 	%r4498, %r4495, %r4494, 18;
	shf.r.wrap.b32 	%r4499, %r4494, %r4495, 18;
	mov.b64 	%rd6147, {%r4499, %r4498};
	xor.b64  	%rd6148, %rd6147, %rd6146;
	shf.l.wrap.b32 	%r4500, %r4494, %r4495, 23;
	shf.l.wrap.b32 	%r4501, %r4495, %r4494, 23;
	mov.b64 	%rd6149, {%r4501, %r4500};
	xor.b64  	%rd6150, %rd6148, %rd6149;
	xor.b64  	%rd6151, %rd6110, %rd6086;
	and.b64  	%rd6152, %rd6134, %rd6151;
	xor.b64  	%rd6153, %rd6152, %rd6086;
	add.s64 	%rd6154, %rd6062, %rd5969;
	add.s64 	%rd6155, %rd6154, %rd11;
	add.s64 	%rd6156, %rd6155, %rd6153;
	add.s64 	%rd6157, %rd6156, %rd6150;
	add.s64 	%rd6158, %rd6157, %rd6073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4502,%dummy}, %rd6145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4503}, %rd6145;
	}
	shf.r.wrap.b32 	%r4504, %r4503, %r4502, 28;
	shf.r.wrap.b32 	%r4505, %r4502, %r4503, 28;
	mov.b64 	%rd6159, {%r4505, %r4504};
	shf.l.wrap.b32 	%r4506, %r4502, %r4503, 30;
	shf.l.wrap.b32 	%r4507, %r4503, %r4502, 30;
	mov.b64 	%rd6160, {%r4507, %r4506};
	xor.b64  	%rd6161, %rd6160, %rd6159;
	shf.l.wrap.b32 	%r4508, %r4502, %r4503, 25;
	shf.l.wrap.b32 	%r4509, %r4503, %r4502, 25;
	mov.b64 	%rd6162, {%r4509, %r4508};
	xor.b64  	%rd6163, %rd6161, %rd6162;
	xor.b64  	%rd6164, %rd6145, %rd6097;
	xor.b64  	%rd6165, %rd6145, %rd6121;
	and.b64  	%rd6166, %rd6165, %rd6164;
	xor.b64  	%rd6167, %rd6166, %rd6145;
	add.s64 	%rd6168, %rd6157, %rd6167;
	add.s64 	%rd6169, %rd6168, %rd6163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4510,%dummy}, %rd6158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4511}, %rd6158;
	}
	shf.r.wrap.b32 	%r4512, %r4511, %r4510, 14;
	shf.r.wrap.b32 	%r4513, %r4510, %r4511, 14;
	mov.b64 	%rd6170, {%r4513, %r4512};
	shf.r.wrap.b32 	%r4514, %r4511, %r4510, 18;
	shf.r.wrap.b32 	%r4515, %r4510, %r4511, 18;
	mov.b64 	%rd6171, {%r4515, %r4514};
	xor.b64  	%rd6172, %rd6171, %rd6170;
	shf.l.wrap.b32 	%r4516, %r4510, %r4511, 23;
	shf.l.wrap.b32 	%r4517, %r4511, %r4510, 23;
	mov.b64 	%rd6173, {%r4517, %r4516};
	xor.b64  	%rd6174, %rd6172, %rd6173;
	xor.b64  	%rd6175, %rd6134, %rd6110;
	and.b64  	%rd6176, %rd6158, %rd6175;
	xor.b64  	%rd6177, %rd6176, %rd6110;
	add.s64 	%rd6178, %rd6086, %rd5970;
	add.s64 	%rd6179, %rd6178, %rd12;
	add.s64 	%rd6180, %rd6179, %rd6177;
	add.s64 	%rd6181, %rd6180, %rd6174;
	add.s64 	%rd6182, %rd6181, %rd6097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4518,%dummy}, %rd6169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4519}, %rd6169;
	}
	shf.r.wrap.b32 	%r4520, %r4519, %r4518, 28;
	shf.r.wrap.b32 	%r4521, %r4518, %r4519, 28;
	mov.b64 	%rd6183, {%r4521, %r4520};
	shf.l.wrap.b32 	%r4522, %r4518, %r4519, 30;
	shf.l.wrap.b32 	%r4523, %r4519, %r4518, 30;
	mov.b64 	%rd6184, {%r4523, %r4522};
	xor.b64  	%rd6185, %rd6184, %rd6183;
	shf.l.wrap.b32 	%r4524, %r4518, %r4519, 25;
	shf.l.wrap.b32 	%r4525, %r4519, %r4518, 25;
	mov.b64 	%rd6186, {%r4525, %r4524};
	xor.b64  	%rd6187, %rd6185, %rd6186;
	xor.b64  	%rd6188, %rd6169, %rd6121;
	xor.b64  	%rd6189, %rd6169, %rd6145;
	and.b64  	%rd6190, %rd6189, %rd6188;
	xor.b64  	%rd6191, %rd6190, %rd6169;
	add.s64 	%rd6192, %rd6181, %rd6191;
	add.s64 	%rd6193, %rd6192, %rd6187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4526,%dummy}, %rd6182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4527}, %rd6182;
	}
	shf.r.wrap.b32 	%r4528, %r4527, %r4526, 14;
	shf.r.wrap.b32 	%r4529, %r4526, %r4527, 14;
	mov.b64 	%rd6194, {%r4529, %r4528};
	shf.r.wrap.b32 	%r4530, %r4527, %r4526, 18;
	shf.r.wrap.b32 	%r4531, %r4526, %r4527, 18;
	mov.b64 	%rd6195, {%r4531, %r4530};
	xor.b64  	%rd6196, %rd6195, %rd6194;
	shf.l.wrap.b32 	%r4532, %r4526, %r4527, 23;
	shf.l.wrap.b32 	%r4533, %r4527, %r4526, 23;
	mov.b64 	%rd6197, {%r4533, %r4532};
	xor.b64  	%rd6198, %rd6196, %rd6197;
	xor.b64  	%rd6199, %rd6158, %rd6134;
	and.b64  	%rd6200, %rd6182, %rd6199;
	xor.b64  	%rd6201, %rd6200, %rd6134;
	add.s64 	%rd6202, %rd6110, %rd5971;
	add.s64 	%rd6203, %rd6202, %rd13;
	add.s64 	%rd6204, %rd6203, %rd6201;
	add.s64 	%rd6205, %rd6204, %rd6198;
	add.s64 	%rd6206, %rd6205, %rd6121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4534,%dummy}, %rd6193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4535}, %rd6193;
	}
	shf.r.wrap.b32 	%r4536, %r4535, %r4534, 28;
	shf.r.wrap.b32 	%r4537, %r4534, %r4535, 28;
	mov.b64 	%rd6207, {%r4537, %r4536};
	shf.l.wrap.b32 	%r4538, %r4534, %r4535, 30;
	shf.l.wrap.b32 	%r4539, %r4535, %r4534, 30;
	mov.b64 	%rd6208, {%r4539, %r4538};
	xor.b64  	%rd6209, %rd6208, %rd6207;
	shf.l.wrap.b32 	%r4540, %r4534, %r4535, 25;
	shf.l.wrap.b32 	%r4541, %r4535, %r4534, 25;
	mov.b64 	%rd6210, {%r4541, %r4540};
	xor.b64  	%rd6211, %rd6209, %rd6210;
	xor.b64  	%rd6212, %rd6193, %rd6145;
	xor.b64  	%rd6213, %rd6193, %rd6169;
	and.b64  	%rd6214, %rd6213, %rd6212;
	xor.b64  	%rd6215, %rd6214, %rd6193;
	add.s64 	%rd6216, %rd6205, %rd6215;
	add.s64 	%rd6217, %rd6216, %rd6211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4542,%dummy}, %rd6206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4543}, %rd6206;
	}
	shf.r.wrap.b32 	%r4544, %r4543, %r4542, 14;
	shf.r.wrap.b32 	%r4545, %r4542, %r4543, 14;
	mov.b64 	%rd6218, {%r4545, %r4544};
	shf.r.wrap.b32 	%r4546, %r4543, %r4542, 18;
	shf.r.wrap.b32 	%r4547, %r4542, %r4543, 18;
	mov.b64 	%rd6219, {%r4547, %r4546};
	xor.b64  	%rd6220, %rd6219, %rd6218;
	shf.l.wrap.b32 	%r4548, %r4542, %r4543, 23;
	shf.l.wrap.b32 	%r4549, %r4543, %r4542, 23;
	mov.b64 	%rd6221, {%r4549, %r4548};
	xor.b64  	%rd6222, %rd6220, %rd6221;
	xor.b64  	%rd6223, %rd6182, %rd6158;
	and.b64  	%rd6224, %rd6206, %rd6223;
	xor.b64  	%rd6225, %rd6224, %rd6158;
	add.s64 	%rd6226, %rd6134, %rd5972;
	add.s64 	%rd6227, %rd6226, %rd14;
	add.s64 	%rd6228, %rd6227, %rd6225;
	add.s64 	%rd6229, %rd6228, %rd6222;
	add.s64 	%rd6230, %rd6229, %rd6145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4550,%dummy}, %rd6217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4551}, %rd6217;
	}
	shf.r.wrap.b32 	%r4552, %r4551, %r4550, 28;
	shf.r.wrap.b32 	%r4553, %r4550, %r4551, 28;
	mov.b64 	%rd6231, {%r4553, %r4552};
	shf.l.wrap.b32 	%r4554, %r4550, %r4551, 30;
	shf.l.wrap.b32 	%r4555, %r4551, %r4550, 30;
	mov.b64 	%rd6232, {%r4555, %r4554};
	xor.b64  	%rd6233, %rd6232, %rd6231;
	shf.l.wrap.b32 	%r4556, %r4550, %r4551, 25;
	shf.l.wrap.b32 	%r4557, %r4551, %r4550, 25;
	mov.b64 	%rd6234, {%r4557, %r4556};
	xor.b64  	%rd6235, %rd6233, %rd6234;
	xor.b64  	%rd6236, %rd6217, %rd6169;
	xor.b64  	%rd6237, %rd6217, %rd6193;
	and.b64  	%rd6238, %rd6237, %rd6236;
	xor.b64  	%rd6239, %rd6238, %rd6217;
	add.s64 	%rd6240, %rd6229, %rd6239;
	add.s64 	%rd6241, %rd6240, %rd6235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4558,%dummy}, %rd6230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4559}, %rd6230;
	}
	shf.r.wrap.b32 	%r4560, %r4559, %r4558, 14;
	shf.r.wrap.b32 	%r4561, %r4558, %r4559, 14;
	mov.b64 	%rd6242, {%r4561, %r4560};
	shf.r.wrap.b32 	%r4562, %r4559, %r4558, 18;
	shf.r.wrap.b32 	%r4563, %r4558, %r4559, 18;
	mov.b64 	%rd6243, {%r4563, %r4562};
	xor.b64  	%rd6244, %rd6243, %rd6242;
	shf.l.wrap.b32 	%r4564, %r4558, %r4559, 23;
	shf.l.wrap.b32 	%r4565, %r4559, %r4558, 23;
	mov.b64 	%rd6245, {%r4565, %r4564};
	xor.b64  	%rd6246, %rd6244, %rd6245;
	xor.b64  	%rd6247, %rd6206, %rd6182;
	and.b64  	%rd6248, %rd6230, %rd6247;
	xor.b64  	%rd6249, %rd6248, %rd6182;
	add.s64 	%rd6250, %rd6158, %rd5973;
	add.s64 	%rd6251, %rd6250, %rd15;
	add.s64 	%rd6252, %rd6251, %rd6249;
	add.s64 	%rd6253, %rd6252, %rd6246;
	add.s64 	%rd6254, %rd6253, %rd6169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4566,%dummy}, %rd6241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4567}, %rd6241;
	}
	shf.r.wrap.b32 	%r4568, %r4567, %r4566, 28;
	shf.r.wrap.b32 	%r4569, %r4566, %r4567, 28;
	mov.b64 	%rd6255, {%r4569, %r4568};
	shf.l.wrap.b32 	%r4570, %r4566, %r4567, 30;
	shf.l.wrap.b32 	%r4571, %r4567, %r4566, 30;
	mov.b64 	%rd6256, {%r4571, %r4570};
	xor.b64  	%rd6257, %rd6256, %rd6255;
	shf.l.wrap.b32 	%r4572, %r4566, %r4567, 25;
	shf.l.wrap.b32 	%r4573, %r4567, %r4566, 25;
	mov.b64 	%rd6258, {%r4573, %r4572};
	xor.b64  	%rd6259, %rd6257, %rd6258;
	xor.b64  	%rd6260, %rd6241, %rd6193;
	xor.b64  	%rd6261, %rd6241, %rd6217;
	and.b64  	%rd6262, %rd6261, %rd6260;
	xor.b64  	%rd6263, %rd6262, %rd6241;
	add.s64 	%rd6264, %rd6253, %rd6263;
	add.s64 	%rd6265, %rd6264, %rd6259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4574,%dummy}, %rd6254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4575}, %rd6254;
	}
	shf.r.wrap.b32 	%r4576, %r4575, %r4574, 14;
	shf.r.wrap.b32 	%r4577, %r4574, %r4575, 14;
	mov.b64 	%rd6266, {%r4577, %r4576};
	shf.r.wrap.b32 	%r4578, %r4575, %r4574, 18;
	shf.r.wrap.b32 	%r4579, %r4574, %r4575, 18;
	mov.b64 	%rd6267, {%r4579, %r4578};
	xor.b64  	%rd6268, %rd6267, %rd6266;
	shf.l.wrap.b32 	%r4580, %r4574, %r4575, 23;
	shf.l.wrap.b32 	%r4581, %r4575, %r4574, 23;
	mov.b64 	%rd6269, {%r4581, %r4580};
	xor.b64  	%rd6270, %rd6268, %rd6269;
	xor.b64  	%rd6271, %rd6230, %rd6206;
	and.b64  	%rd6272, %rd6254, %rd6271;
	xor.b64  	%rd6273, %rd6272, %rd6206;
	add.s64 	%rd6274, %rd6182, %rd5974;
	add.s64 	%rd6275, %rd6274, %rd16;
	add.s64 	%rd6276, %rd6275, %rd6273;
	add.s64 	%rd6277, %rd6276, %rd6270;
	add.s64 	%rd6278, %rd6277, %rd6193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4582,%dummy}, %rd6265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4583}, %rd6265;
	}
	shf.r.wrap.b32 	%r4584, %r4583, %r4582, 28;
	shf.r.wrap.b32 	%r4585, %r4582, %r4583, 28;
	mov.b64 	%rd6279, {%r4585, %r4584};
	shf.l.wrap.b32 	%r4586, %r4582, %r4583, 30;
	shf.l.wrap.b32 	%r4587, %r4583, %r4582, 30;
	mov.b64 	%rd6280, {%r4587, %r4586};
	xor.b64  	%rd6281, %rd6280, %rd6279;
	shf.l.wrap.b32 	%r4588, %r4582, %r4583, 25;
	shf.l.wrap.b32 	%r4589, %r4583, %r4582, 25;
	mov.b64 	%rd6282, {%r4589, %r4588};
	xor.b64  	%rd6283, %rd6281, %rd6282;
	xor.b64  	%rd6284, %rd6265, %rd6217;
	xor.b64  	%rd6285, %rd6265, %rd6241;
	and.b64  	%rd6286, %rd6285, %rd6284;
	xor.b64  	%rd6287, %rd6286, %rd6265;
	add.s64 	%rd6288, %rd6277, %rd6287;
	add.s64 	%rd6289, %rd6288, %rd6283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4590,%dummy}, %rd6278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4591}, %rd6278;
	}
	shf.r.wrap.b32 	%r4592, %r4591, %r4590, 14;
	shf.r.wrap.b32 	%r4593, %r4590, %r4591, 14;
	mov.b64 	%rd6290, {%r4593, %r4592};
	shf.r.wrap.b32 	%r4594, %r4591, %r4590, 18;
	shf.r.wrap.b32 	%r4595, %r4590, %r4591, 18;
	mov.b64 	%rd6291, {%r4595, %r4594};
	xor.b64  	%rd6292, %rd6291, %rd6290;
	shf.l.wrap.b32 	%r4596, %r4590, %r4591, 23;
	shf.l.wrap.b32 	%r4597, %r4591, %r4590, 23;
	mov.b64 	%rd6293, {%r4597, %r4596};
	xor.b64  	%rd6294, %rd6292, %rd6293;
	xor.b64  	%rd6295, %rd6254, %rd6230;
	and.b64  	%rd6296, %rd6278, %rd6295;
	xor.b64  	%rd6297, %rd6296, %rd6230;
	add.s64 	%rd6298, %rd6206, %rd5975;
	add.s64 	%rd6299, %rd6298, %rd17;
	add.s64 	%rd6300, %rd6299, %rd6297;
	add.s64 	%rd6301, %rd6300, %rd6294;
	add.s64 	%rd6302, %rd6301, %rd6217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4598,%dummy}, %rd6289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4599}, %rd6289;
	}
	shf.r.wrap.b32 	%r4600, %r4599, %r4598, 28;
	shf.r.wrap.b32 	%r4601, %r4598, %r4599, 28;
	mov.b64 	%rd6303, {%r4601, %r4600};
	shf.l.wrap.b32 	%r4602, %r4598, %r4599, 30;
	shf.l.wrap.b32 	%r4603, %r4599, %r4598, 30;
	mov.b64 	%rd6304, {%r4603, %r4602};
	xor.b64  	%rd6305, %rd6304, %rd6303;
	shf.l.wrap.b32 	%r4604, %r4598, %r4599, 25;
	shf.l.wrap.b32 	%r4605, %r4599, %r4598, 25;
	mov.b64 	%rd6306, {%r4605, %r4604};
	xor.b64  	%rd6307, %rd6305, %rd6306;
	xor.b64  	%rd6308, %rd6289, %rd6241;
	xor.b64  	%rd6309, %rd6289, %rd6265;
	and.b64  	%rd6310, %rd6309, %rd6308;
	xor.b64  	%rd6311, %rd6310, %rd6289;
	add.s64 	%rd6312, %rd6301, %rd6311;
	add.s64 	%rd6313, %rd6312, %rd6307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4606,%dummy}, %rd6302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4607}, %rd6302;
	}
	shf.r.wrap.b32 	%r4608, %r4607, %r4606, 14;
	shf.r.wrap.b32 	%r4609, %r4606, %r4607, 14;
	mov.b64 	%rd6314, {%r4609, %r4608};
	shf.r.wrap.b32 	%r4610, %r4607, %r4606, 18;
	shf.r.wrap.b32 	%r4611, %r4606, %r4607, 18;
	mov.b64 	%rd6315, {%r4611, %r4610};
	xor.b64  	%rd6316, %rd6315, %rd6314;
	shf.l.wrap.b32 	%r4612, %r4606, %r4607, 23;
	shf.l.wrap.b32 	%r4613, %r4607, %r4606, 23;
	mov.b64 	%rd6317, {%r4613, %r4612};
	xor.b64  	%rd6318, %rd6316, %rd6317;
	xor.b64  	%rd6319, %rd6278, %rd6254;
	and.b64  	%rd6320, %rd6302, %rd6319;
	xor.b64  	%rd6321, %rd6320, %rd6254;
	add.s64 	%rd6322, %rd6230, %rd5976;
	add.s64 	%rd6323, %rd6322, %rd18;
	add.s64 	%rd6324, %rd6323, %rd6321;
	add.s64 	%rd6325, %rd6324, %rd6318;
	add.s64 	%rd6326, %rd6325, %rd6241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4614,%dummy}, %rd6313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4615}, %rd6313;
	}
	shf.r.wrap.b32 	%r4616, %r4615, %r4614, 28;
	shf.r.wrap.b32 	%r4617, %r4614, %r4615, 28;
	mov.b64 	%rd6327, {%r4617, %r4616};
	shf.l.wrap.b32 	%r4618, %r4614, %r4615, 30;
	shf.l.wrap.b32 	%r4619, %r4615, %r4614, 30;
	mov.b64 	%rd6328, {%r4619, %r4618};
	xor.b64  	%rd6329, %rd6328, %rd6327;
	shf.l.wrap.b32 	%r4620, %r4614, %r4615, 25;
	shf.l.wrap.b32 	%r4621, %r4615, %r4614, 25;
	mov.b64 	%rd6330, {%r4621, %r4620};
	xor.b64  	%rd6331, %rd6329, %rd6330;
	xor.b64  	%rd6332, %rd6313, %rd6265;
	xor.b64  	%rd6333, %rd6313, %rd6289;
	and.b64  	%rd6334, %rd6333, %rd6332;
	xor.b64  	%rd6335, %rd6334, %rd6313;
	add.s64 	%rd6336, %rd6325, %rd6335;
	add.s64 	%rd6337, %rd6336, %rd6331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4622,%dummy}, %rd6326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4623}, %rd6326;
	}
	shf.r.wrap.b32 	%r4624, %r4623, %r4622, 14;
	shf.r.wrap.b32 	%r4625, %r4622, %r4623, 14;
	mov.b64 	%rd6338, {%r4625, %r4624};
	shf.r.wrap.b32 	%r4626, %r4623, %r4622, 18;
	shf.r.wrap.b32 	%r4627, %r4622, %r4623, 18;
	mov.b64 	%rd6339, {%r4627, %r4626};
	xor.b64  	%rd6340, %rd6339, %rd6338;
	shf.l.wrap.b32 	%r4628, %r4622, %r4623, 23;
	shf.l.wrap.b32 	%r4629, %r4623, %r4622, 23;
	mov.b64 	%rd6341, {%r4629, %r4628};
	xor.b64  	%rd6342, %rd6340, %rd6341;
	xor.b64  	%rd6343, %rd6302, %rd6278;
	and.b64  	%rd6344, %rd6326, %rd6343;
	xor.b64  	%rd6345, %rd6344, %rd6278;
	add.s64 	%rd6346, %rd6254, %rd5977;
	add.s64 	%rd6347, %rd6346, %rd19;
	add.s64 	%rd6348, %rd6347, %rd6345;
	add.s64 	%rd6349, %rd6348, %rd6342;
	add.s64 	%rd6350, %rd6349, %rd6265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4630,%dummy}, %rd6337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4631}, %rd6337;
	}
	shf.r.wrap.b32 	%r4632, %r4631, %r4630, 28;
	shf.r.wrap.b32 	%r4633, %r4630, %r4631, 28;
	mov.b64 	%rd6351, {%r4633, %r4632};
	shf.l.wrap.b32 	%r4634, %r4630, %r4631, 30;
	shf.l.wrap.b32 	%r4635, %r4631, %r4630, 30;
	mov.b64 	%rd6352, {%r4635, %r4634};
	xor.b64  	%rd6353, %rd6352, %rd6351;
	shf.l.wrap.b32 	%r4636, %r4630, %r4631, 25;
	shf.l.wrap.b32 	%r4637, %r4631, %r4630, 25;
	mov.b64 	%rd6354, {%r4637, %r4636};
	xor.b64  	%rd6355, %rd6353, %rd6354;
	xor.b64  	%rd6356, %rd6337, %rd6289;
	xor.b64  	%rd6357, %rd6337, %rd6313;
	and.b64  	%rd6358, %rd6357, %rd6356;
	xor.b64  	%rd6359, %rd6358, %rd6337;
	add.s64 	%rd6360, %rd6349, %rd6359;
	add.s64 	%rd6361, %rd6360, %rd6355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4638,%dummy}, %rd5976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4639}, %rd5976;
	}
	shf.r.wrap.b32 	%r4640, %r4639, %r4638, 19;
	shf.r.wrap.b32 	%r4641, %r4638, %r4639, 19;
	mov.b64 	%rd6362, {%r4641, %r4640};
	shf.l.wrap.b32 	%r4642, %r4638, %r4639, 3;
	shf.l.wrap.b32 	%r4643, %r4639, %r4638, 3;
	mov.b64 	%rd6363, {%r4643, %r4642};
	shr.u64 	%rd6364, %rd5976, 6;
	xor.b64  	%rd6365, %rd6362, %rd6364;
	xor.b64  	%rd6366, %rd6365, %rd6363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4644,%dummy}, %rd5963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4645}, %rd5963;
	}
	shf.r.wrap.b32 	%r4646, %r4645, %r4644, 1;
	shf.r.wrap.b32 	%r4647, %r4644, %r4645, 1;
	mov.b64 	%rd6367, {%r4647, %r4646};
	shf.r.wrap.b32 	%r4648, %r4645, %r4644, 8;
	shf.r.wrap.b32 	%r4649, %r4644, %r4645, 8;
	mov.b64 	%rd6368, {%r4649, %r4648};
	shr.u64 	%rd6369, %rd5963, 7;
	xor.b64  	%rd6370, %rd6367, %rd6369;
	xor.b64  	%rd6371, %rd6370, %rd6368;
	add.s64 	%rd6372, %rd5971, %rd5962;
	add.s64 	%rd6373, %rd6372, %rd6366;
	add.s64 	%rd6374, %rd6373, %rd6371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4650,%dummy}, %rd5977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4651}, %rd5977;
	}
	shf.r.wrap.b32 	%r4652, %r4651, %r4650, 19;
	shf.r.wrap.b32 	%r4653, %r4650, %r4651, 19;
	mov.b64 	%rd6375, {%r4653, %r4652};
	shf.l.wrap.b32 	%r4654, %r4650, %r4651, 3;
	shf.l.wrap.b32 	%r4655, %r4651, %r4650, 3;
	mov.b64 	%rd6376, {%r4655, %r4654};
	shr.u64 	%rd6377, %rd5977, 6;
	xor.b64  	%rd6378, %rd6375, %rd6377;
	xor.b64  	%rd6379, %rd6378, %rd6376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4656,%dummy}, %rd5964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4657}, %rd5964;
	}
	shf.r.wrap.b32 	%r4658, %r4657, %r4656, 1;
	shf.r.wrap.b32 	%r4659, %r4656, %r4657, 1;
	mov.b64 	%rd6380, {%r4659, %r4658};
	shf.r.wrap.b32 	%r4660, %r4657, %r4656, 8;
	shf.r.wrap.b32 	%r4661, %r4656, %r4657, 8;
	mov.b64 	%rd6381, {%r4661, %r4660};
	shr.u64 	%rd6382, %rd5964, 7;
	xor.b64  	%rd6383, %rd6380, %rd6382;
	xor.b64  	%rd6384, %rd6383, %rd6381;
	add.s64 	%rd6385, %rd5972, %rd5963;
	add.s64 	%rd6386, %rd6385, %rd6379;
	add.s64 	%rd6387, %rd6386, %rd6384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4662,%dummy}, %rd6374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4663}, %rd6374;
	}
	shf.r.wrap.b32 	%r4664, %r4663, %r4662, 19;
	shf.r.wrap.b32 	%r4665, %r4662, %r4663, 19;
	mov.b64 	%rd6388, {%r4665, %r4664};
	shf.l.wrap.b32 	%r4666, %r4662, %r4663, 3;
	shf.l.wrap.b32 	%r4667, %r4663, %r4662, 3;
	mov.b64 	%rd6389, {%r4667, %r4666};
	shr.u64 	%rd6390, %rd6374, 6;
	xor.b64  	%rd6391, %rd6388, %rd6390;
	xor.b64  	%rd6392, %rd6391, %rd6389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4668,%dummy}, %rd5965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4669}, %rd5965;
	}
	shf.r.wrap.b32 	%r4670, %r4669, %r4668, 1;
	shf.r.wrap.b32 	%r4671, %r4668, %r4669, 1;
	mov.b64 	%rd6393, {%r4671, %r4670};
	shf.r.wrap.b32 	%r4672, %r4669, %r4668, 8;
	shf.r.wrap.b32 	%r4673, %r4668, %r4669, 8;
	mov.b64 	%rd6394, {%r4673, %r4672};
	shr.u64 	%rd6395, %rd5965, 7;
	xor.b64  	%rd6396, %rd6393, %rd6395;
	xor.b64  	%rd6397, %rd6396, %rd6394;
	add.s64 	%rd6398, %rd5973, %rd5964;
	add.s64 	%rd6399, %rd6398, %rd6392;
	add.s64 	%rd6400, %rd6399, %rd6397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4674,%dummy}, %rd6387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4675}, %rd6387;
	}
	shf.r.wrap.b32 	%r4676, %r4675, %r4674, 19;
	shf.r.wrap.b32 	%r4677, %r4674, %r4675, 19;
	mov.b64 	%rd6401, {%r4677, %r4676};
	shf.l.wrap.b32 	%r4678, %r4674, %r4675, 3;
	shf.l.wrap.b32 	%r4679, %r4675, %r4674, 3;
	mov.b64 	%rd6402, {%r4679, %r4678};
	shr.u64 	%rd6403, %rd6387, 6;
	xor.b64  	%rd6404, %rd6401, %rd6403;
	xor.b64  	%rd6405, %rd6404, %rd6402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4680,%dummy}, %rd5966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4681}, %rd5966;
	}
	shf.r.wrap.b32 	%r4682, %r4681, %r4680, 1;
	shf.r.wrap.b32 	%r4683, %r4680, %r4681, 1;
	mov.b64 	%rd6406, {%r4683, %r4682};
	shf.r.wrap.b32 	%r4684, %r4681, %r4680, 8;
	shf.r.wrap.b32 	%r4685, %r4680, %r4681, 8;
	mov.b64 	%rd6407, {%r4685, %r4684};
	shr.u64 	%rd6408, %rd5966, 7;
	xor.b64  	%rd6409, %rd6406, %rd6408;
	xor.b64  	%rd6410, %rd6409, %rd6407;
	add.s64 	%rd6411, %rd5974, %rd5965;
	add.s64 	%rd6412, %rd6411, %rd6405;
	add.s64 	%rd6413, %rd6412, %rd6410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4686,%dummy}, %rd6400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4687}, %rd6400;
	}
	shf.r.wrap.b32 	%r4688, %r4687, %r4686, 19;
	shf.r.wrap.b32 	%r4689, %r4686, %r4687, 19;
	mov.b64 	%rd6414, {%r4689, %r4688};
	shf.l.wrap.b32 	%r4690, %r4686, %r4687, 3;
	shf.l.wrap.b32 	%r4691, %r4687, %r4686, 3;
	mov.b64 	%rd6415, {%r4691, %r4690};
	shr.u64 	%rd6416, %rd6400, 6;
	xor.b64  	%rd6417, %rd6414, %rd6416;
	xor.b64  	%rd6418, %rd6417, %rd6415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4692,%dummy}, %rd5967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4693}, %rd5967;
	}
	shf.r.wrap.b32 	%r4694, %r4693, %r4692, 1;
	shf.r.wrap.b32 	%r4695, %r4692, %r4693, 1;
	mov.b64 	%rd6419, {%r4695, %r4694};
	shf.r.wrap.b32 	%r4696, %r4693, %r4692, 8;
	shf.r.wrap.b32 	%r4697, %r4692, %r4693, 8;
	mov.b64 	%rd6420, {%r4697, %r4696};
	shr.u64 	%rd6421, %rd5967, 7;
	xor.b64  	%rd6422, %rd6419, %rd6421;
	xor.b64  	%rd6423, %rd6422, %rd6420;
	add.s64 	%rd6424, %rd5975, %rd5966;
	add.s64 	%rd6425, %rd6424, %rd6418;
	add.s64 	%rd6426, %rd6425, %rd6423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4698,%dummy}, %rd6413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4699}, %rd6413;
	}
	shf.r.wrap.b32 	%r4700, %r4699, %r4698, 19;
	shf.r.wrap.b32 	%r4701, %r4698, %r4699, 19;
	mov.b64 	%rd6427, {%r4701, %r4700};
	shf.l.wrap.b32 	%r4702, %r4698, %r4699, 3;
	shf.l.wrap.b32 	%r4703, %r4699, %r4698, 3;
	mov.b64 	%rd6428, {%r4703, %r4702};
	shr.u64 	%rd6429, %rd6413, 6;
	xor.b64  	%rd6430, %rd6427, %rd6429;
	xor.b64  	%rd6431, %rd6430, %rd6428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4704,%dummy}, %rd5968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4705}, %rd5968;
	}
	shf.r.wrap.b32 	%r4706, %r4705, %r4704, 1;
	shf.r.wrap.b32 	%r4707, %r4704, %r4705, 1;
	mov.b64 	%rd6432, {%r4707, %r4706};
	shf.r.wrap.b32 	%r4708, %r4705, %r4704, 8;
	shf.r.wrap.b32 	%r4709, %r4704, %r4705, 8;
	mov.b64 	%rd6433, {%r4709, %r4708};
	shr.u64 	%rd6434, %rd5968, 7;
	xor.b64  	%rd6435, %rd6432, %rd6434;
	xor.b64  	%rd6436, %rd6435, %rd6433;
	add.s64 	%rd6437, %rd5976, %rd5967;
	add.s64 	%rd6438, %rd6437, %rd6431;
	add.s64 	%rd6439, %rd6438, %rd6436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4710,%dummy}, %rd6426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4711}, %rd6426;
	}
	shf.r.wrap.b32 	%r4712, %r4711, %r4710, 19;
	shf.r.wrap.b32 	%r4713, %r4710, %r4711, 19;
	mov.b64 	%rd6440, {%r4713, %r4712};
	shf.l.wrap.b32 	%r4714, %r4710, %r4711, 3;
	shf.l.wrap.b32 	%r4715, %r4711, %r4710, 3;
	mov.b64 	%rd6441, {%r4715, %r4714};
	shr.u64 	%rd6442, %rd6426, 6;
	xor.b64  	%rd6443, %rd6440, %rd6442;
	xor.b64  	%rd6444, %rd6443, %rd6441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4716,%dummy}, %rd5969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4717}, %rd5969;
	}
	shf.r.wrap.b32 	%r4718, %r4717, %r4716, 1;
	shf.r.wrap.b32 	%r4719, %r4716, %r4717, 1;
	mov.b64 	%rd6445, {%r4719, %r4718};
	shf.r.wrap.b32 	%r4720, %r4717, %r4716, 8;
	shf.r.wrap.b32 	%r4721, %r4716, %r4717, 8;
	mov.b64 	%rd6446, {%r4721, %r4720};
	shr.u64 	%rd6447, %rd5969, 7;
	xor.b64  	%rd6448, %rd6445, %rd6447;
	xor.b64  	%rd6449, %rd6448, %rd6446;
	add.s64 	%rd6450, %rd5977, %rd5968;
	add.s64 	%rd6451, %rd6450, %rd6444;
	add.s64 	%rd6452, %rd6451, %rd6449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4722,%dummy}, %rd6439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4723}, %rd6439;
	}
	shf.r.wrap.b32 	%r4724, %r4723, %r4722, 19;
	shf.r.wrap.b32 	%r4725, %r4722, %r4723, 19;
	mov.b64 	%rd6453, {%r4725, %r4724};
	shf.l.wrap.b32 	%r4726, %r4722, %r4723, 3;
	shf.l.wrap.b32 	%r4727, %r4723, %r4722, 3;
	mov.b64 	%rd6454, {%r4727, %r4726};
	shr.u64 	%rd6455, %rd6439, 6;
	xor.b64  	%rd6456, %rd6453, %rd6455;
	xor.b64  	%rd6457, %rd6456, %rd6454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4728,%dummy}, %rd5970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4729}, %rd5970;
	}
	shf.r.wrap.b32 	%r4730, %r4729, %r4728, 1;
	shf.r.wrap.b32 	%r4731, %r4728, %r4729, 1;
	mov.b64 	%rd6458, {%r4731, %r4730};
	shf.r.wrap.b32 	%r4732, %r4729, %r4728, 8;
	shf.r.wrap.b32 	%r4733, %r4728, %r4729, 8;
	mov.b64 	%rd6459, {%r4733, %r4732};
	shr.u64 	%rd6460, %rd5970, 7;
	xor.b64  	%rd6461, %rd6458, %rd6460;
	xor.b64  	%rd6462, %rd6461, %rd6459;
	add.s64 	%rd6463, %rd6374, %rd5969;
	add.s64 	%rd6464, %rd6463, %rd6457;
	add.s64 	%rd6465, %rd6464, %rd6462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4734,%dummy}, %rd6452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4735}, %rd6452;
	}
	shf.r.wrap.b32 	%r4736, %r4735, %r4734, 19;
	shf.r.wrap.b32 	%r4737, %r4734, %r4735, 19;
	mov.b64 	%rd6466, {%r4737, %r4736};
	shf.l.wrap.b32 	%r4738, %r4734, %r4735, 3;
	shf.l.wrap.b32 	%r4739, %r4735, %r4734, 3;
	mov.b64 	%rd6467, {%r4739, %r4738};
	shr.u64 	%rd6468, %rd6452, 6;
	xor.b64  	%rd6469, %rd6466, %rd6468;
	xor.b64  	%rd6470, %rd6469, %rd6467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4740,%dummy}, %rd5971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4741}, %rd5971;
	}
	shf.r.wrap.b32 	%r4742, %r4741, %r4740, 1;
	shf.r.wrap.b32 	%r4743, %r4740, %r4741, 1;
	mov.b64 	%rd6471, {%r4743, %r4742};
	shf.r.wrap.b32 	%r4744, %r4741, %r4740, 8;
	shf.r.wrap.b32 	%r4745, %r4740, %r4741, 8;
	mov.b64 	%rd6472, {%r4745, %r4744};
	shr.u64 	%rd6473, %rd5971, 7;
	xor.b64  	%rd6474, %rd6471, %rd6473;
	xor.b64  	%rd6475, %rd6474, %rd6472;
	add.s64 	%rd6476, %rd6387, %rd5970;
	add.s64 	%rd6477, %rd6476, %rd6470;
	add.s64 	%rd6478, %rd6477, %rd6475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4746,%dummy}, %rd6465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4747}, %rd6465;
	}
	shf.r.wrap.b32 	%r4748, %r4747, %r4746, 19;
	shf.r.wrap.b32 	%r4749, %r4746, %r4747, 19;
	mov.b64 	%rd6479, {%r4749, %r4748};
	shf.l.wrap.b32 	%r4750, %r4746, %r4747, 3;
	shf.l.wrap.b32 	%r4751, %r4747, %r4746, 3;
	mov.b64 	%rd6480, {%r4751, %r4750};
	shr.u64 	%rd6481, %rd6465, 6;
	xor.b64  	%rd6482, %rd6479, %rd6481;
	xor.b64  	%rd6483, %rd6482, %rd6480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4752,%dummy}, %rd5972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4753}, %rd5972;
	}
	shf.r.wrap.b32 	%r4754, %r4753, %r4752, 1;
	shf.r.wrap.b32 	%r4755, %r4752, %r4753, 1;
	mov.b64 	%rd6484, {%r4755, %r4754};
	shf.r.wrap.b32 	%r4756, %r4753, %r4752, 8;
	shf.r.wrap.b32 	%r4757, %r4752, %r4753, 8;
	mov.b64 	%rd6485, {%r4757, %r4756};
	shr.u64 	%rd6486, %rd5972, 7;
	xor.b64  	%rd6487, %rd6484, %rd6486;
	xor.b64  	%rd6488, %rd6487, %rd6485;
	add.s64 	%rd6489, %rd6400, %rd5971;
	add.s64 	%rd6490, %rd6489, %rd6483;
	add.s64 	%rd6491, %rd6490, %rd6488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4758,%dummy}, %rd6478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4759}, %rd6478;
	}
	shf.r.wrap.b32 	%r4760, %r4759, %r4758, 19;
	shf.r.wrap.b32 	%r4761, %r4758, %r4759, 19;
	mov.b64 	%rd6492, {%r4761, %r4760};
	shf.l.wrap.b32 	%r4762, %r4758, %r4759, 3;
	shf.l.wrap.b32 	%r4763, %r4759, %r4758, 3;
	mov.b64 	%rd6493, {%r4763, %r4762};
	shr.u64 	%rd6494, %rd6478, 6;
	xor.b64  	%rd6495, %rd6492, %rd6494;
	xor.b64  	%rd6496, %rd6495, %rd6493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4764,%dummy}, %rd5973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4765}, %rd5973;
	}
	shf.r.wrap.b32 	%r4766, %r4765, %r4764, 1;
	shf.r.wrap.b32 	%r4767, %r4764, %r4765, 1;
	mov.b64 	%rd6497, {%r4767, %r4766};
	shf.r.wrap.b32 	%r4768, %r4765, %r4764, 8;
	shf.r.wrap.b32 	%r4769, %r4764, %r4765, 8;
	mov.b64 	%rd6498, {%r4769, %r4768};
	shr.u64 	%rd6499, %rd5973, 7;
	xor.b64  	%rd6500, %rd6497, %rd6499;
	xor.b64  	%rd6501, %rd6500, %rd6498;
	add.s64 	%rd6502, %rd6413, %rd5972;
	add.s64 	%rd6503, %rd6502, %rd6496;
	add.s64 	%rd6504, %rd6503, %rd6501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4770,%dummy}, %rd6491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4771}, %rd6491;
	}
	shf.r.wrap.b32 	%r4772, %r4771, %r4770, 19;
	shf.r.wrap.b32 	%r4773, %r4770, %r4771, 19;
	mov.b64 	%rd6505, {%r4773, %r4772};
	shf.l.wrap.b32 	%r4774, %r4770, %r4771, 3;
	shf.l.wrap.b32 	%r4775, %r4771, %r4770, 3;
	mov.b64 	%rd6506, {%r4775, %r4774};
	shr.u64 	%rd6507, %rd6491, 6;
	xor.b64  	%rd6508, %rd6505, %rd6507;
	xor.b64  	%rd6509, %rd6508, %rd6506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4776,%dummy}, %rd5974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4777}, %rd5974;
	}
	shf.r.wrap.b32 	%r4778, %r4777, %r4776, 1;
	shf.r.wrap.b32 	%r4779, %r4776, %r4777, 1;
	mov.b64 	%rd6510, {%r4779, %r4778};
	shf.r.wrap.b32 	%r4780, %r4777, %r4776, 8;
	shf.r.wrap.b32 	%r4781, %r4776, %r4777, 8;
	mov.b64 	%rd6511, {%r4781, %r4780};
	shr.u64 	%rd6512, %rd5974, 7;
	xor.b64  	%rd6513, %rd6510, %rd6512;
	xor.b64  	%rd6514, %rd6513, %rd6511;
	add.s64 	%rd6515, %rd6426, %rd5973;
	add.s64 	%rd6516, %rd6515, %rd6509;
	add.s64 	%rd6517, %rd6516, %rd6514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4782,%dummy}, %rd6504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4783}, %rd6504;
	}
	shf.r.wrap.b32 	%r4784, %r4783, %r4782, 19;
	shf.r.wrap.b32 	%r4785, %r4782, %r4783, 19;
	mov.b64 	%rd6518, {%r4785, %r4784};
	shf.l.wrap.b32 	%r4786, %r4782, %r4783, 3;
	shf.l.wrap.b32 	%r4787, %r4783, %r4782, 3;
	mov.b64 	%rd6519, {%r4787, %r4786};
	shr.u64 	%rd6520, %rd6504, 6;
	xor.b64  	%rd6521, %rd6518, %rd6520;
	xor.b64  	%rd6522, %rd6521, %rd6519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4788,%dummy}, %rd5975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4789}, %rd5975;
	}
	shf.r.wrap.b32 	%r4790, %r4789, %r4788, 1;
	shf.r.wrap.b32 	%r4791, %r4788, %r4789, 1;
	mov.b64 	%rd6523, {%r4791, %r4790};
	shf.r.wrap.b32 	%r4792, %r4789, %r4788, 8;
	shf.r.wrap.b32 	%r4793, %r4788, %r4789, 8;
	mov.b64 	%rd6524, {%r4793, %r4792};
	shr.u64 	%rd6525, %rd5975, 7;
	xor.b64  	%rd6526, %rd6523, %rd6525;
	xor.b64  	%rd6527, %rd6526, %rd6524;
	add.s64 	%rd6528, %rd6439, %rd5974;
	add.s64 	%rd6529, %rd6528, %rd6522;
	add.s64 	%rd6530, %rd6529, %rd6527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4794,%dummy}, %rd6517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4795}, %rd6517;
	}
	shf.r.wrap.b32 	%r4796, %r4795, %r4794, 19;
	shf.r.wrap.b32 	%r4797, %r4794, %r4795, 19;
	mov.b64 	%rd6531, {%r4797, %r4796};
	shf.l.wrap.b32 	%r4798, %r4794, %r4795, 3;
	shf.l.wrap.b32 	%r4799, %r4795, %r4794, 3;
	mov.b64 	%rd6532, {%r4799, %r4798};
	shr.u64 	%rd6533, %rd6517, 6;
	xor.b64  	%rd6534, %rd6531, %rd6533;
	xor.b64  	%rd6535, %rd6534, %rd6532;
	shf.r.wrap.b32 	%r4800, %r4639, %r4638, 1;
	shf.r.wrap.b32 	%r4801, %r4638, %r4639, 1;
	mov.b64 	%rd6536, {%r4801, %r4800};
	shf.r.wrap.b32 	%r4802, %r4639, %r4638, 8;
	shf.r.wrap.b32 	%r4803, %r4638, %r4639, 8;
	mov.b64 	%rd6537, {%r4803, %r4802};
	shr.u64 	%rd6538, %rd5976, 7;
	xor.b64  	%rd6539, %rd6536, %rd6538;
	xor.b64  	%rd6540, %rd6539, %rd6537;
	add.s64 	%rd6541, %rd6452, %rd5975;
	add.s64 	%rd6542, %rd6541, %rd6535;
	add.s64 	%rd6543, %rd6542, %rd6540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4804,%dummy}, %rd6530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4805}, %rd6530;
	}
	shf.r.wrap.b32 	%r4806, %r4805, %r4804, 19;
	shf.r.wrap.b32 	%r4807, %r4804, %r4805, 19;
	mov.b64 	%rd6544, {%r4807, %r4806};
	shf.l.wrap.b32 	%r4808, %r4804, %r4805, 3;
	shf.l.wrap.b32 	%r4809, %r4805, %r4804, 3;
	mov.b64 	%rd6545, {%r4809, %r4808};
	shr.u64 	%rd6546, %rd6530, 6;
	xor.b64  	%rd6547, %rd6544, %rd6546;
	xor.b64  	%rd6548, %rd6547, %rd6545;
	shf.r.wrap.b32 	%r4810, %r4651, %r4650, 1;
	shf.r.wrap.b32 	%r4811, %r4650, %r4651, 1;
	mov.b64 	%rd6549, {%r4811, %r4810};
	shf.r.wrap.b32 	%r4812, %r4651, %r4650, 8;
	shf.r.wrap.b32 	%r4813, %r4650, %r4651, 8;
	mov.b64 	%rd6550, {%r4813, %r4812};
	shr.u64 	%rd6551, %rd5977, 7;
	xor.b64  	%rd6552, %rd6549, %rd6551;
	xor.b64  	%rd6553, %rd6552, %rd6550;
	add.s64 	%rd6554, %rd6465, %rd5976;
	add.s64 	%rd6555, %rd6554, %rd6548;
	add.s64 	%rd6556, %rd6555, %rd6553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4814,%dummy}, %rd6543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4815}, %rd6543;
	}
	shf.r.wrap.b32 	%r4816, %r4815, %r4814, 19;
	shf.r.wrap.b32 	%r4817, %r4814, %r4815, 19;
	mov.b64 	%rd6557, {%r4817, %r4816};
	shf.l.wrap.b32 	%r4818, %r4814, %r4815, 3;
	shf.l.wrap.b32 	%r4819, %r4815, %r4814, 3;
	mov.b64 	%rd6558, {%r4819, %r4818};
	shr.u64 	%rd6559, %rd6543, 6;
	xor.b64  	%rd6560, %rd6557, %rd6559;
	xor.b64  	%rd6561, %rd6560, %rd6558;
	shf.r.wrap.b32 	%r4820, %r4663, %r4662, 1;
	shf.r.wrap.b32 	%r4821, %r4662, %r4663, 1;
	mov.b64 	%rd6562, {%r4821, %r4820};
	shf.r.wrap.b32 	%r4822, %r4663, %r4662, 8;
	shf.r.wrap.b32 	%r4823, %r4662, %r4663, 8;
	mov.b64 	%rd6563, {%r4823, %r4822};
	shr.u64 	%rd6564, %rd6374, 7;
	xor.b64  	%rd6565, %rd6562, %rd6564;
	xor.b64  	%rd6566, %rd6565, %rd6563;
	add.s64 	%rd6567, %rd6478, %rd5977;
	add.s64 	%rd6568, %rd6567, %rd6561;
	add.s64 	%rd6569, %rd6568, %rd6566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4824,%dummy}, %rd6350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4825}, %rd6350;
	}
	shf.r.wrap.b32 	%r4826, %r4825, %r4824, 14;
	shf.r.wrap.b32 	%r4827, %r4824, %r4825, 14;
	mov.b64 	%rd6570, {%r4827, %r4826};
	shf.r.wrap.b32 	%r4828, %r4825, %r4824, 18;
	shf.r.wrap.b32 	%r4829, %r4824, %r4825, 18;
	mov.b64 	%rd6571, {%r4829, %r4828};
	xor.b64  	%rd6572, %rd6571, %rd6570;
	shf.l.wrap.b32 	%r4830, %r4824, %r4825, 23;
	shf.l.wrap.b32 	%r4831, %r4825, %r4824, 23;
	mov.b64 	%rd6573, {%r4831, %r4830};
	xor.b64  	%rd6574, %rd6572, %rd6573;
	xor.b64  	%rd6575, %rd6326, %rd6302;
	and.b64  	%rd6576, %rd6575, %rd6350;
	xor.b64  	%rd6577, %rd6576, %rd6302;
	add.s64 	%rd6578, %rd6577, %rd6278;
	add.s64 	%rd6579, %rd6578, %rd6374;
	add.s64 	%rd6580, %rd6579, %rd20;
	add.s64 	%rd6581, %rd6580, %rd6574;
	add.s64 	%rd6582, %rd6581, %rd6289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4832,%dummy}, %rd6361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4833}, %rd6361;
	}
	shf.r.wrap.b32 	%r4834, %r4833, %r4832, 28;
	shf.r.wrap.b32 	%r4835, %r4832, %r4833, 28;
	mov.b64 	%rd6583, {%r4835, %r4834};
	shf.l.wrap.b32 	%r4836, %r4832, %r4833, 30;
	shf.l.wrap.b32 	%r4837, %r4833, %r4832, 30;
	mov.b64 	%rd6584, {%r4837, %r4836};
	xor.b64  	%rd6585, %rd6584, %rd6583;
	shf.l.wrap.b32 	%r4838, %r4832, %r4833, 25;
	shf.l.wrap.b32 	%r4839, %r4833, %r4832, 25;
	mov.b64 	%rd6586, {%r4839, %r4838};
	xor.b64  	%rd6587, %rd6585, %rd6586;
	xor.b64  	%rd6588, %rd6361, %rd6313;
	xor.b64  	%rd6589, %rd6361, %rd6337;
	and.b64  	%rd6590, %rd6589, %rd6588;
	xor.b64  	%rd6591, %rd6590, %rd6361;
	add.s64 	%rd6592, %rd6581, %rd6591;
	add.s64 	%rd6593, %rd6592, %rd6587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4840,%dummy}, %rd6582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4841}, %rd6582;
	}
	shf.r.wrap.b32 	%r4842, %r4841, %r4840, 14;
	shf.r.wrap.b32 	%r4843, %r4840, %r4841, 14;
	mov.b64 	%rd6594, {%r4843, %r4842};
	shf.r.wrap.b32 	%r4844, %r4841, %r4840, 18;
	shf.r.wrap.b32 	%r4845, %r4840, %r4841, 18;
	mov.b64 	%rd6595, {%r4845, %r4844};
	xor.b64  	%rd6596, %rd6595, %rd6594;
	shf.l.wrap.b32 	%r4846, %r4840, %r4841, 23;
	shf.l.wrap.b32 	%r4847, %r4841, %r4840, 23;
	mov.b64 	%rd6597, {%r4847, %r4846};
	xor.b64  	%rd6598, %rd6596, %rd6597;
	xor.b64  	%rd6599, %rd6350, %rd6326;
	and.b64  	%rd6600, %rd6582, %rd6599;
	xor.b64  	%rd6601, %rd6600, %rd6326;
	add.s64 	%rd6602, %rd6387, %rd6302;
	add.s64 	%rd6603, %rd6602, %rd21;
	add.s64 	%rd6604, %rd6603, %rd6601;
	add.s64 	%rd6605, %rd6604, %rd6598;
	add.s64 	%rd6606, %rd6605, %rd6313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4848,%dummy}, %rd6593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4849}, %rd6593;
	}
	shf.r.wrap.b32 	%r4850, %r4849, %r4848, 28;
	shf.r.wrap.b32 	%r4851, %r4848, %r4849, 28;
	mov.b64 	%rd6607, {%r4851, %r4850};
	shf.l.wrap.b32 	%r4852, %r4848, %r4849, 30;
	shf.l.wrap.b32 	%r4853, %r4849, %r4848, 30;
	mov.b64 	%rd6608, {%r4853, %r4852};
	xor.b64  	%rd6609, %rd6608, %rd6607;
	shf.l.wrap.b32 	%r4854, %r4848, %r4849, 25;
	shf.l.wrap.b32 	%r4855, %r4849, %r4848, 25;
	mov.b64 	%rd6610, {%r4855, %r4854};
	xor.b64  	%rd6611, %rd6609, %rd6610;
	xor.b64  	%rd6612, %rd6593, %rd6337;
	xor.b64  	%rd6613, %rd6593, %rd6361;
	and.b64  	%rd6614, %rd6613, %rd6612;
	xor.b64  	%rd6615, %rd6614, %rd6593;
	add.s64 	%rd6616, %rd6605, %rd6615;
	add.s64 	%rd6617, %rd6616, %rd6611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4856,%dummy}, %rd6606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4857}, %rd6606;
	}
	shf.r.wrap.b32 	%r4858, %r4857, %r4856, 14;
	shf.r.wrap.b32 	%r4859, %r4856, %r4857, 14;
	mov.b64 	%rd6618, {%r4859, %r4858};
	shf.r.wrap.b32 	%r4860, %r4857, %r4856, 18;
	shf.r.wrap.b32 	%r4861, %r4856, %r4857, 18;
	mov.b64 	%rd6619, {%r4861, %r4860};
	xor.b64  	%rd6620, %rd6619, %rd6618;
	shf.l.wrap.b32 	%r4862, %r4856, %r4857, 23;
	shf.l.wrap.b32 	%r4863, %r4857, %r4856, 23;
	mov.b64 	%rd6621, {%r4863, %r4862};
	xor.b64  	%rd6622, %rd6620, %rd6621;
	xor.b64  	%rd6623, %rd6582, %rd6350;
	and.b64  	%rd6624, %rd6606, %rd6623;
	xor.b64  	%rd6625, %rd6624, %rd6350;
	add.s64 	%rd6626, %rd6400, %rd6326;
	add.s64 	%rd6627, %rd6626, %rd22;
	add.s64 	%rd6628, %rd6627, %rd6625;
	add.s64 	%rd6629, %rd6628, %rd6622;
	add.s64 	%rd6630, %rd6629, %rd6337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4864,%dummy}, %rd6617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4865}, %rd6617;
	}
	shf.r.wrap.b32 	%r4866, %r4865, %r4864, 28;
	shf.r.wrap.b32 	%r4867, %r4864, %r4865, 28;
	mov.b64 	%rd6631, {%r4867, %r4866};
	shf.l.wrap.b32 	%r4868, %r4864, %r4865, 30;
	shf.l.wrap.b32 	%r4869, %r4865, %r4864, 30;
	mov.b64 	%rd6632, {%r4869, %r4868};
	xor.b64  	%rd6633, %rd6632, %rd6631;
	shf.l.wrap.b32 	%r4870, %r4864, %r4865, 25;
	shf.l.wrap.b32 	%r4871, %r4865, %r4864, 25;
	mov.b64 	%rd6634, {%r4871, %r4870};
	xor.b64  	%rd6635, %rd6633, %rd6634;
	xor.b64  	%rd6636, %rd6617, %rd6361;
	xor.b64  	%rd6637, %rd6617, %rd6593;
	and.b64  	%rd6638, %rd6637, %rd6636;
	xor.b64  	%rd6639, %rd6638, %rd6617;
	add.s64 	%rd6640, %rd6629, %rd6639;
	add.s64 	%rd6641, %rd6640, %rd6635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4872,%dummy}, %rd6630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4873}, %rd6630;
	}
	shf.r.wrap.b32 	%r4874, %r4873, %r4872, 14;
	shf.r.wrap.b32 	%r4875, %r4872, %r4873, 14;
	mov.b64 	%rd6642, {%r4875, %r4874};
	shf.r.wrap.b32 	%r4876, %r4873, %r4872, 18;
	shf.r.wrap.b32 	%r4877, %r4872, %r4873, 18;
	mov.b64 	%rd6643, {%r4877, %r4876};
	xor.b64  	%rd6644, %rd6643, %rd6642;
	shf.l.wrap.b32 	%r4878, %r4872, %r4873, 23;
	shf.l.wrap.b32 	%r4879, %r4873, %r4872, 23;
	mov.b64 	%rd6645, {%r4879, %r4878};
	xor.b64  	%rd6646, %rd6644, %rd6645;
	xor.b64  	%rd6647, %rd6606, %rd6582;
	and.b64  	%rd6648, %rd6630, %rd6647;
	xor.b64  	%rd6649, %rd6648, %rd6582;
	add.s64 	%rd6650, %rd6413, %rd6350;
	add.s64 	%rd6651, %rd6650, %rd23;
	add.s64 	%rd6652, %rd6651, %rd6649;
	add.s64 	%rd6653, %rd6652, %rd6646;
	add.s64 	%rd6654, %rd6653, %rd6361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4880,%dummy}, %rd6641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4881}, %rd6641;
	}
	shf.r.wrap.b32 	%r4882, %r4881, %r4880, 28;
	shf.r.wrap.b32 	%r4883, %r4880, %r4881, 28;
	mov.b64 	%rd6655, {%r4883, %r4882};
	shf.l.wrap.b32 	%r4884, %r4880, %r4881, 30;
	shf.l.wrap.b32 	%r4885, %r4881, %r4880, 30;
	mov.b64 	%rd6656, {%r4885, %r4884};
	xor.b64  	%rd6657, %rd6656, %rd6655;
	shf.l.wrap.b32 	%r4886, %r4880, %r4881, 25;
	shf.l.wrap.b32 	%r4887, %r4881, %r4880, 25;
	mov.b64 	%rd6658, {%r4887, %r4886};
	xor.b64  	%rd6659, %rd6657, %rd6658;
	xor.b64  	%rd6660, %rd6641, %rd6593;
	xor.b64  	%rd6661, %rd6641, %rd6617;
	and.b64  	%rd6662, %rd6661, %rd6660;
	xor.b64  	%rd6663, %rd6662, %rd6641;
	add.s64 	%rd6664, %rd6653, %rd6663;
	add.s64 	%rd6665, %rd6664, %rd6659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4888,%dummy}, %rd6654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4889}, %rd6654;
	}
	shf.r.wrap.b32 	%r4890, %r4889, %r4888, 14;
	shf.r.wrap.b32 	%r4891, %r4888, %r4889, 14;
	mov.b64 	%rd6666, {%r4891, %r4890};
	shf.r.wrap.b32 	%r4892, %r4889, %r4888, 18;
	shf.r.wrap.b32 	%r4893, %r4888, %r4889, 18;
	mov.b64 	%rd6667, {%r4893, %r4892};
	xor.b64  	%rd6668, %rd6667, %rd6666;
	shf.l.wrap.b32 	%r4894, %r4888, %r4889, 23;
	shf.l.wrap.b32 	%r4895, %r4889, %r4888, 23;
	mov.b64 	%rd6669, {%r4895, %r4894};
	xor.b64  	%rd6670, %rd6668, %rd6669;
	xor.b64  	%rd6671, %rd6630, %rd6606;
	and.b64  	%rd6672, %rd6654, %rd6671;
	xor.b64  	%rd6673, %rd6672, %rd6606;
	add.s64 	%rd6674, %rd6582, %rd6426;
	add.s64 	%rd6675, %rd6674, %rd24;
	add.s64 	%rd6676, %rd6675, %rd6673;
	add.s64 	%rd6677, %rd6676, %rd6670;
	add.s64 	%rd6678, %rd6677, %rd6593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4896,%dummy}, %rd6665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4897}, %rd6665;
	}
	shf.r.wrap.b32 	%r4898, %r4897, %r4896, 28;
	shf.r.wrap.b32 	%r4899, %r4896, %r4897, 28;
	mov.b64 	%rd6679, {%r4899, %r4898};
	shf.l.wrap.b32 	%r4900, %r4896, %r4897, 30;
	shf.l.wrap.b32 	%r4901, %r4897, %r4896, 30;
	mov.b64 	%rd6680, {%r4901, %r4900};
	xor.b64  	%rd6681, %rd6680, %rd6679;
	shf.l.wrap.b32 	%r4902, %r4896, %r4897, 25;
	shf.l.wrap.b32 	%r4903, %r4897, %r4896, 25;
	mov.b64 	%rd6682, {%r4903, %r4902};
	xor.b64  	%rd6683, %rd6681, %rd6682;
	xor.b64  	%rd6684, %rd6665, %rd6617;
	xor.b64  	%rd6685, %rd6665, %rd6641;
	and.b64  	%rd6686, %rd6685, %rd6684;
	xor.b64  	%rd6687, %rd6686, %rd6665;
	add.s64 	%rd6688, %rd6677, %rd6687;
	add.s64 	%rd6689, %rd6688, %rd6683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4904,%dummy}, %rd6678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4905}, %rd6678;
	}
	shf.r.wrap.b32 	%r4906, %r4905, %r4904, 14;
	shf.r.wrap.b32 	%r4907, %r4904, %r4905, 14;
	mov.b64 	%rd6690, {%r4907, %r4906};
	shf.r.wrap.b32 	%r4908, %r4905, %r4904, 18;
	shf.r.wrap.b32 	%r4909, %r4904, %r4905, 18;
	mov.b64 	%rd6691, {%r4909, %r4908};
	xor.b64  	%rd6692, %rd6691, %rd6690;
	shf.l.wrap.b32 	%r4910, %r4904, %r4905, 23;
	shf.l.wrap.b32 	%r4911, %r4905, %r4904, 23;
	mov.b64 	%rd6693, {%r4911, %r4910};
	xor.b64  	%rd6694, %rd6692, %rd6693;
	xor.b64  	%rd6695, %rd6654, %rd6630;
	and.b64  	%rd6696, %rd6678, %rd6695;
	xor.b64  	%rd6697, %rd6696, %rd6630;
	add.s64 	%rd6698, %rd6606, %rd6439;
	add.s64 	%rd6699, %rd6698, %rd25;
	add.s64 	%rd6700, %rd6699, %rd6697;
	add.s64 	%rd6701, %rd6700, %rd6694;
	add.s64 	%rd6702, %rd6701, %rd6617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4912,%dummy}, %rd6689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4913}, %rd6689;
	}
	shf.r.wrap.b32 	%r4914, %r4913, %r4912, 28;
	shf.r.wrap.b32 	%r4915, %r4912, %r4913, 28;
	mov.b64 	%rd6703, {%r4915, %r4914};
	shf.l.wrap.b32 	%r4916, %r4912, %r4913, 30;
	shf.l.wrap.b32 	%r4917, %r4913, %r4912, 30;
	mov.b64 	%rd6704, {%r4917, %r4916};
	xor.b64  	%rd6705, %rd6704, %rd6703;
	shf.l.wrap.b32 	%r4918, %r4912, %r4913, 25;
	shf.l.wrap.b32 	%r4919, %r4913, %r4912, 25;
	mov.b64 	%rd6706, {%r4919, %r4918};
	xor.b64  	%rd6707, %rd6705, %rd6706;
	xor.b64  	%rd6708, %rd6689, %rd6641;
	xor.b64  	%rd6709, %rd6689, %rd6665;
	and.b64  	%rd6710, %rd6709, %rd6708;
	xor.b64  	%rd6711, %rd6710, %rd6689;
	add.s64 	%rd6712, %rd6701, %rd6711;
	add.s64 	%rd6713, %rd6712, %rd6707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4920,%dummy}, %rd6702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4921}, %rd6702;
	}
	shf.r.wrap.b32 	%r4922, %r4921, %r4920, 14;
	shf.r.wrap.b32 	%r4923, %r4920, %r4921, 14;
	mov.b64 	%rd6714, {%r4923, %r4922};
	shf.r.wrap.b32 	%r4924, %r4921, %r4920, 18;
	shf.r.wrap.b32 	%r4925, %r4920, %r4921, 18;
	mov.b64 	%rd6715, {%r4925, %r4924};
	xor.b64  	%rd6716, %rd6715, %rd6714;
	shf.l.wrap.b32 	%r4926, %r4920, %r4921, 23;
	shf.l.wrap.b32 	%r4927, %r4921, %r4920, 23;
	mov.b64 	%rd6717, {%r4927, %r4926};
	xor.b64  	%rd6718, %rd6716, %rd6717;
	xor.b64  	%rd6719, %rd6678, %rd6654;
	and.b64  	%rd6720, %rd6702, %rd6719;
	xor.b64  	%rd6721, %rd6720, %rd6654;
	add.s64 	%rd6722, %rd6630, %rd6452;
	add.s64 	%rd6723, %rd6722, %rd26;
	add.s64 	%rd6724, %rd6723, %rd6721;
	add.s64 	%rd6725, %rd6724, %rd6718;
	add.s64 	%rd6726, %rd6725, %rd6641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4928,%dummy}, %rd6713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4929}, %rd6713;
	}
	shf.r.wrap.b32 	%r4930, %r4929, %r4928, 28;
	shf.r.wrap.b32 	%r4931, %r4928, %r4929, 28;
	mov.b64 	%rd6727, {%r4931, %r4930};
	shf.l.wrap.b32 	%r4932, %r4928, %r4929, 30;
	shf.l.wrap.b32 	%r4933, %r4929, %r4928, 30;
	mov.b64 	%rd6728, {%r4933, %r4932};
	xor.b64  	%rd6729, %rd6728, %rd6727;
	shf.l.wrap.b32 	%r4934, %r4928, %r4929, 25;
	shf.l.wrap.b32 	%r4935, %r4929, %r4928, 25;
	mov.b64 	%rd6730, {%r4935, %r4934};
	xor.b64  	%rd6731, %rd6729, %rd6730;
	xor.b64  	%rd6732, %rd6713, %rd6665;
	xor.b64  	%rd6733, %rd6713, %rd6689;
	and.b64  	%rd6734, %rd6733, %rd6732;
	xor.b64  	%rd6735, %rd6734, %rd6713;
	add.s64 	%rd6736, %rd6725, %rd6735;
	add.s64 	%rd6737, %rd6736, %rd6731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4936,%dummy}, %rd6726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4937}, %rd6726;
	}
	shf.r.wrap.b32 	%r4938, %r4937, %r4936, 14;
	shf.r.wrap.b32 	%r4939, %r4936, %r4937, 14;
	mov.b64 	%rd6738, {%r4939, %r4938};
	shf.r.wrap.b32 	%r4940, %r4937, %r4936, 18;
	shf.r.wrap.b32 	%r4941, %r4936, %r4937, 18;
	mov.b64 	%rd6739, {%r4941, %r4940};
	xor.b64  	%rd6740, %rd6739, %rd6738;
	shf.l.wrap.b32 	%r4942, %r4936, %r4937, 23;
	shf.l.wrap.b32 	%r4943, %r4937, %r4936, 23;
	mov.b64 	%rd6741, {%r4943, %r4942};
	xor.b64  	%rd6742, %rd6740, %rd6741;
	xor.b64  	%rd6743, %rd6702, %rd6678;
	and.b64  	%rd6744, %rd6726, %rd6743;
	xor.b64  	%rd6745, %rd6744, %rd6678;
	add.s64 	%rd6746, %rd6654, %rd6465;
	add.s64 	%rd6747, %rd6746, %rd27;
	add.s64 	%rd6748, %rd6747, %rd6745;
	add.s64 	%rd6749, %rd6748, %rd6742;
	add.s64 	%rd6750, %rd6749, %rd6665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4944,%dummy}, %rd6737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4945}, %rd6737;
	}
	shf.r.wrap.b32 	%r4946, %r4945, %r4944, 28;
	shf.r.wrap.b32 	%r4947, %r4944, %r4945, 28;
	mov.b64 	%rd6751, {%r4947, %r4946};
	shf.l.wrap.b32 	%r4948, %r4944, %r4945, 30;
	shf.l.wrap.b32 	%r4949, %r4945, %r4944, 30;
	mov.b64 	%rd6752, {%r4949, %r4948};
	xor.b64  	%rd6753, %rd6752, %rd6751;
	shf.l.wrap.b32 	%r4950, %r4944, %r4945, 25;
	shf.l.wrap.b32 	%r4951, %r4945, %r4944, 25;
	mov.b64 	%rd6754, {%r4951, %r4950};
	xor.b64  	%rd6755, %rd6753, %rd6754;
	xor.b64  	%rd6756, %rd6737, %rd6689;
	xor.b64  	%rd6757, %rd6737, %rd6713;
	and.b64  	%rd6758, %rd6757, %rd6756;
	xor.b64  	%rd6759, %rd6758, %rd6737;
	add.s64 	%rd6760, %rd6749, %rd6759;
	add.s64 	%rd6761, %rd6760, %rd6755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4952,%dummy}, %rd6750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4953}, %rd6750;
	}
	shf.r.wrap.b32 	%r4954, %r4953, %r4952, 14;
	shf.r.wrap.b32 	%r4955, %r4952, %r4953, 14;
	mov.b64 	%rd6762, {%r4955, %r4954};
	shf.r.wrap.b32 	%r4956, %r4953, %r4952, 18;
	shf.r.wrap.b32 	%r4957, %r4952, %r4953, 18;
	mov.b64 	%rd6763, {%r4957, %r4956};
	xor.b64  	%rd6764, %rd6763, %rd6762;
	shf.l.wrap.b32 	%r4958, %r4952, %r4953, 23;
	shf.l.wrap.b32 	%r4959, %r4953, %r4952, 23;
	mov.b64 	%rd6765, {%r4959, %r4958};
	xor.b64  	%rd6766, %rd6764, %rd6765;
	xor.b64  	%rd6767, %rd6726, %rd6702;
	and.b64  	%rd6768, %rd6750, %rd6767;
	xor.b64  	%rd6769, %rd6768, %rd6702;
	add.s64 	%rd6770, %rd6678, %rd6478;
	add.s64 	%rd6771, %rd6770, %rd28;
	add.s64 	%rd6772, %rd6771, %rd6769;
	add.s64 	%rd6773, %rd6772, %rd6766;
	add.s64 	%rd6774, %rd6773, %rd6689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4960,%dummy}, %rd6761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4961}, %rd6761;
	}
	shf.r.wrap.b32 	%r4962, %r4961, %r4960, 28;
	shf.r.wrap.b32 	%r4963, %r4960, %r4961, 28;
	mov.b64 	%rd6775, {%r4963, %r4962};
	shf.l.wrap.b32 	%r4964, %r4960, %r4961, 30;
	shf.l.wrap.b32 	%r4965, %r4961, %r4960, 30;
	mov.b64 	%rd6776, {%r4965, %r4964};
	xor.b64  	%rd6777, %rd6776, %rd6775;
	shf.l.wrap.b32 	%r4966, %r4960, %r4961, 25;
	shf.l.wrap.b32 	%r4967, %r4961, %r4960, 25;
	mov.b64 	%rd6778, {%r4967, %r4966};
	xor.b64  	%rd6779, %rd6777, %rd6778;
	xor.b64  	%rd6780, %rd6761, %rd6713;
	xor.b64  	%rd6781, %rd6761, %rd6737;
	and.b64  	%rd6782, %rd6781, %rd6780;
	xor.b64  	%rd6783, %rd6782, %rd6761;
	add.s64 	%rd6784, %rd6773, %rd6783;
	add.s64 	%rd6785, %rd6784, %rd6779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4968,%dummy}, %rd6774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4969}, %rd6774;
	}
	shf.r.wrap.b32 	%r4970, %r4969, %r4968, 14;
	shf.r.wrap.b32 	%r4971, %r4968, %r4969, 14;
	mov.b64 	%rd6786, {%r4971, %r4970};
	shf.r.wrap.b32 	%r4972, %r4969, %r4968, 18;
	shf.r.wrap.b32 	%r4973, %r4968, %r4969, 18;
	mov.b64 	%rd6787, {%r4973, %r4972};
	xor.b64  	%rd6788, %rd6787, %rd6786;
	shf.l.wrap.b32 	%r4974, %r4968, %r4969, 23;
	shf.l.wrap.b32 	%r4975, %r4969, %r4968, 23;
	mov.b64 	%rd6789, {%r4975, %r4974};
	xor.b64  	%rd6790, %rd6788, %rd6789;
	xor.b64  	%rd6791, %rd6750, %rd6726;
	and.b64  	%rd6792, %rd6774, %rd6791;
	xor.b64  	%rd6793, %rd6792, %rd6726;
	add.s64 	%rd6794, %rd6702, %rd6491;
	add.s64 	%rd6795, %rd6794, %rd29;
	add.s64 	%rd6796, %rd6795, %rd6793;
	add.s64 	%rd6797, %rd6796, %rd6790;
	add.s64 	%rd6798, %rd6797, %rd6713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4976,%dummy}, %rd6785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4977}, %rd6785;
	}
	shf.r.wrap.b32 	%r4978, %r4977, %r4976, 28;
	shf.r.wrap.b32 	%r4979, %r4976, %r4977, 28;
	mov.b64 	%rd6799, {%r4979, %r4978};
	shf.l.wrap.b32 	%r4980, %r4976, %r4977, 30;
	shf.l.wrap.b32 	%r4981, %r4977, %r4976, 30;
	mov.b64 	%rd6800, {%r4981, %r4980};
	xor.b64  	%rd6801, %rd6800, %rd6799;
	shf.l.wrap.b32 	%r4982, %r4976, %r4977, 25;
	shf.l.wrap.b32 	%r4983, %r4977, %r4976, 25;
	mov.b64 	%rd6802, {%r4983, %r4982};
	xor.b64  	%rd6803, %rd6801, %rd6802;
	xor.b64  	%rd6804, %rd6785, %rd6737;
	xor.b64  	%rd6805, %rd6785, %rd6761;
	and.b64  	%rd6806, %rd6805, %rd6804;
	xor.b64  	%rd6807, %rd6806, %rd6785;
	add.s64 	%rd6808, %rd6797, %rd6807;
	add.s64 	%rd6809, %rd6808, %rd6803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4984,%dummy}, %rd6798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4985}, %rd6798;
	}
	shf.r.wrap.b32 	%r4986, %r4985, %r4984, 14;
	shf.r.wrap.b32 	%r4987, %r4984, %r4985, 14;
	mov.b64 	%rd6810, {%r4987, %r4986};
	shf.r.wrap.b32 	%r4988, %r4985, %r4984, 18;
	shf.r.wrap.b32 	%r4989, %r4984, %r4985, 18;
	mov.b64 	%rd6811, {%r4989, %r4988};
	xor.b64  	%rd6812, %rd6811, %rd6810;
	shf.l.wrap.b32 	%r4990, %r4984, %r4985, 23;
	shf.l.wrap.b32 	%r4991, %r4985, %r4984, 23;
	mov.b64 	%rd6813, {%r4991, %r4990};
	xor.b64  	%rd6814, %rd6812, %rd6813;
	xor.b64  	%rd6815, %rd6774, %rd6750;
	and.b64  	%rd6816, %rd6798, %rd6815;
	xor.b64  	%rd6817, %rd6816, %rd6750;
	add.s64 	%rd6818, %rd6726, %rd6504;
	add.s64 	%rd6819, %rd6818, %rd30;
	add.s64 	%rd6820, %rd6819, %rd6817;
	add.s64 	%rd6821, %rd6820, %rd6814;
	add.s64 	%rd6822, %rd6821, %rd6737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4992,%dummy}, %rd6809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4993}, %rd6809;
	}
	shf.r.wrap.b32 	%r4994, %r4993, %r4992, 28;
	shf.r.wrap.b32 	%r4995, %r4992, %r4993, 28;
	mov.b64 	%rd6823, {%r4995, %r4994};
	shf.l.wrap.b32 	%r4996, %r4992, %r4993, 30;
	shf.l.wrap.b32 	%r4997, %r4993, %r4992, 30;
	mov.b64 	%rd6824, {%r4997, %r4996};
	xor.b64  	%rd6825, %rd6824, %rd6823;
	shf.l.wrap.b32 	%r4998, %r4992, %r4993, 25;
	shf.l.wrap.b32 	%r4999, %r4993, %r4992, 25;
	mov.b64 	%rd6826, {%r4999, %r4998};
	xor.b64  	%rd6827, %rd6825, %rd6826;
	xor.b64  	%rd6828, %rd6809, %rd6761;
	xor.b64  	%rd6829, %rd6809, %rd6785;
	and.b64  	%rd6830, %rd6829, %rd6828;
	xor.b64  	%rd6831, %rd6830, %rd6809;
	add.s64 	%rd6832, %rd6821, %rd6831;
	add.s64 	%rd6833, %rd6832, %rd6827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5000,%dummy}, %rd6822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5001}, %rd6822;
	}
	shf.r.wrap.b32 	%r5002, %r5001, %r5000, 14;
	shf.r.wrap.b32 	%r5003, %r5000, %r5001, 14;
	mov.b64 	%rd6834, {%r5003, %r5002};
	shf.r.wrap.b32 	%r5004, %r5001, %r5000, 18;
	shf.r.wrap.b32 	%r5005, %r5000, %r5001, 18;
	mov.b64 	%rd6835, {%r5005, %r5004};
	xor.b64  	%rd6836, %rd6835, %rd6834;
	shf.l.wrap.b32 	%r5006, %r5000, %r5001, 23;
	shf.l.wrap.b32 	%r5007, %r5001, %r5000, 23;
	mov.b64 	%rd6837, {%r5007, %r5006};
	xor.b64  	%rd6838, %rd6836, %rd6837;
	xor.b64  	%rd6839, %rd6798, %rd6774;
	and.b64  	%rd6840, %rd6822, %rd6839;
	xor.b64  	%rd6841, %rd6840, %rd6774;
	add.s64 	%rd6842, %rd6750, %rd6517;
	add.s64 	%rd6843, %rd6842, %rd31;
	add.s64 	%rd6844, %rd6843, %rd6841;
	add.s64 	%rd6845, %rd6844, %rd6838;
	add.s64 	%rd6846, %rd6845, %rd6761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5008,%dummy}, %rd6833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5009}, %rd6833;
	}
	shf.r.wrap.b32 	%r5010, %r5009, %r5008, 28;
	shf.r.wrap.b32 	%r5011, %r5008, %r5009, 28;
	mov.b64 	%rd6847, {%r5011, %r5010};
	shf.l.wrap.b32 	%r5012, %r5008, %r5009, 30;
	shf.l.wrap.b32 	%r5013, %r5009, %r5008, 30;
	mov.b64 	%rd6848, {%r5013, %r5012};
	xor.b64  	%rd6849, %rd6848, %rd6847;
	shf.l.wrap.b32 	%r5014, %r5008, %r5009, 25;
	shf.l.wrap.b32 	%r5015, %r5009, %r5008, 25;
	mov.b64 	%rd6850, {%r5015, %r5014};
	xor.b64  	%rd6851, %rd6849, %rd6850;
	xor.b64  	%rd6852, %rd6833, %rd6785;
	xor.b64  	%rd6853, %rd6833, %rd6809;
	and.b64  	%rd6854, %rd6853, %rd6852;
	xor.b64  	%rd6855, %rd6854, %rd6833;
	add.s64 	%rd6856, %rd6845, %rd6855;
	add.s64 	%rd6857, %rd6856, %rd6851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5016,%dummy}, %rd6846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5017}, %rd6846;
	}
	shf.r.wrap.b32 	%r5018, %r5017, %r5016, 14;
	shf.r.wrap.b32 	%r5019, %r5016, %r5017, 14;
	mov.b64 	%rd6858, {%r5019, %r5018};
	shf.r.wrap.b32 	%r5020, %r5017, %r5016, 18;
	shf.r.wrap.b32 	%r5021, %r5016, %r5017, 18;
	mov.b64 	%rd6859, {%r5021, %r5020};
	xor.b64  	%rd6860, %rd6859, %rd6858;
	shf.l.wrap.b32 	%r5022, %r5016, %r5017, 23;
	shf.l.wrap.b32 	%r5023, %r5017, %r5016, 23;
	mov.b64 	%rd6861, {%r5023, %r5022};
	xor.b64  	%rd6862, %rd6860, %rd6861;
	xor.b64  	%rd6863, %rd6822, %rd6798;
	and.b64  	%rd6864, %rd6846, %rd6863;
	xor.b64  	%rd6865, %rd6864, %rd6798;
	add.s64 	%rd6866, %rd6774, %rd6530;
	add.s64 	%rd6867, %rd6866, %rd32;
	add.s64 	%rd6868, %rd6867, %rd6865;
	add.s64 	%rd6869, %rd6868, %rd6862;
	add.s64 	%rd6870, %rd6869, %rd6785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5024,%dummy}, %rd6857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5025}, %rd6857;
	}
	shf.r.wrap.b32 	%r5026, %r5025, %r5024, 28;
	shf.r.wrap.b32 	%r5027, %r5024, %r5025, 28;
	mov.b64 	%rd6871, {%r5027, %r5026};
	shf.l.wrap.b32 	%r5028, %r5024, %r5025, 30;
	shf.l.wrap.b32 	%r5029, %r5025, %r5024, 30;
	mov.b64 	%rd6872, {%r5029, %r5028};
	xor.b64  	%rd6873, %rd6872, %rd6871;
	shf.l.wrap.b32 	%r5030, %r5024, %r5025, 25;
	shf.l.wrap.b32 	%r5031, %r5025, %r5024, 25;
	mov.b64 	%rd6874, {%r5031, %r5030};
	xor.b64  	%rd6875, %rd6873, %rd6874;
	xor.b64  	%rd6876, %rd6857, %rd6809;
	xor.b64  	%rd6877, %rd6857, %rd6833;
	and.b64  	%rd6878, %rd6877, %rd6876;
	xor.b64  	%rd6879, %rd6878, %rd6857;
	add.s64 	%rd6880, %rd6869, %rd6879;
	add.s64 	%rd6881, %rd6880, %rd6875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5032,%dummy}, %rd6870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5033}, %rd6870;
	}
	shf.r.wrap.b32 	%r5034, %r5033, %r5032, 14;
	shf.r.wrap.b32 	%r5035, %r5032, %r5033, 14;
	mov.b64 	%rd6882, {%r5035, %r5034};
	shf.r.wrap.b32 	%r5036, %r5033, %r5032, 18;
	shf.r.wrap.b32 	%r5037, %r5032, %r5033, 18;
	mov.b64 	%rd6883, {%r5037, %r5036};
	xor.b64  	%rd6884, %rd6883, %rd6882;
	shf.l.wrap.b32 	%r5038, %r5032, %r5033, 23;
	shf.l.wrap.b32 	%r5039, %r5033, %r5032, 23;
	mov.b64 	%rd6885, {%r5039, %r5038};
	xor.b64  	%rd6886, %rd6884, %rd6885;
	xor.b64  	%rd6887, %rd6846, %rd6822;
	and.b64  	%rd6888, %rd6870, %rd6887;
	xor.b64  	%rd6889, %rd6888, %rd6822;
	add.s64 	%rd6890, %rd6798, %rd6543;
	add.s64 	%rd6891, %rd6890, %rd33;
	add.s64 	%rd6892, %rd6891, %rd6889;
	add.s64 	%rd6893, %rd6892, %rd6886;
	add.s64 	%rd6894, %rd6893, %rd6809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5040,%dummy}, %rd6881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5041}, %rd6881;
	}
	shf.r.wrap.b32 	%r5042, %r5041, %r5040, 28;
	shf.r.wrap.b32 	%r5043, %r5040, %r5041, 28;
	mov.b64 	%rd6895, {%r5043, %r5042};
	shf.l.wrap.b32 	%r5044, %r5040, %r5041, 30;
	shf.l.wrap.b32 	%r5045, %r5041, %r5040, 30;
	mov.b64 	%rd6896, {%r5045, %r5044};
	xor.b64  	%rd6897, %rd6896, %rd6895;
	shf.l.wrap.b32 	%r5046, %r5040, %r5041, 25;
	shf.l.wrap.b32 	%r5047, %r5041, %r5040, 25;
	mov.b64 	%rd6898, {%r5047, %r5046};
	xor.b64  	%rd6899, %rd6897, %rd6898;
	xor.b64  	%rd6900, %rd6881, %rd6833;
	xor.b64  	%rd6901, %rd6881, %rd6857;
	and.b64  	%rd6902, %rd6901, %rd6900;
	xor.b64  	%rd6903, %rd6902, %rd6881;
	add.s64 	%rd6904, %rd6893, %rd6903;
	add.s64 	%rd6905, %rd6904, %rd6899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5048,%dummy}, %rd6894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5049}, %rd6894;
	}
	shf.r.wrap.b32 	%r5050, %r5049, %r5048, 14;
	shf.r.wrap.b32 	%r5051, %r5048, %r5049, 14;
	mov.b64 	%rd6906, {%r5051, %r5050};
	shf.r.wrap.b32 	%r5052, %r5049, %r5048, 18;
	shf.r.wrap.b32 	%r5053, %r5048, %r5049, 18;
	mov.b64 	%rd6907, {%r5053, %r5052};
	xor.b64  	%rd6908, %rd6907, %rd6906;
	shf.l.wrap.b32 	%r5054, %r5048, %r5049, 23;
	shf.l.wrap.b32 	%r5055, %r5049, %r5048, 23;
	mov.b64 	%rd6909, {%r5055, %r5054};
	xor.b64  	%rd6910, %rd6908, %rd6909;
	xor.b64  	%rd6911, %rd6870, %rd6846;
	and.b64  	%rd6912, %rd6894, %rd6911;
	xor.b64  	%rd6913, %rd6912, %rd6846;
	add.s64 	%rd6914, %rd6822, %rd6556;
	add.s64 	%rd6915, %rd6914, %rd34;
	add.s64 	%rd6916, %rd6915, %rd6913;
	add.s64 	%rd6917, %rd6916, %rd6910;
	add.s64 	%rd6918, %rd6917, %rd6833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5056,%dummy}, %rd6905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5057}, %rd6905;
	}
	shf.r.wrap.b32 	%r5058, %r5057, %r5056, 28;
	shf.r.wrap.b32 	%r5059, %r5056, %r5057, 28;
	mov.b64 	%rd6919, {%r5059, %r5058};
	shf.l.wrap.b32 	%r5060, %r5056, %r5057, 30;
	shf.l.wrap.b32 	%r5061, %r5057, %r5056, 30;
	mov.b64 	%rd6920, {%r5061, %r5060};
	xor.b64  	%rd6921, %rd6920, %rd6919;
	shf.l.wrap.b32 	%r5062, %r5056, %r5057, 25;
	shf.l.wrap.b32 	%r5063, %r5057, %r5056, 25;
	mov.b64 	%rd6922, {%r5063, %r5062};
	xor.b64  	%rd6923, %rd6921, %rd6922;
	xor.b64  	%rd6924, %rd6905, %rd6857;
	xor.b64  	%rd6925, %rd6905, %rd6881;
	and.b64  	%rd6926, %rd6925, %rd6924;
	xor.b64  	%rd6927, %rd6926, %rd6905;
	add.s64 	%rd6928, %rd6917, %rd6927;
	add.s64 	%rd6929, %rd6928, %rd6923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5064,%dummy}, %rd6918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5065}, %rd6918;
	}
	shf.r.wrap.b32 	%r5066, %r5065, %r5064, 14;
	shf.r.wrap.b32 	%r5067, %r5064, %r5065, 14;
	mov.b64 	%rd6930, {%r5067, %r5066};
	shf.r.wrap.b32 	%r5068, %r5065, %r5064, 18;
	shf.r.wrap.b32 	%r5069, %r5064, %r5065, 18;
	mov.b64 	%rd6931, {%r5069, %r5068};
	xor.b64  	%rd6932, %rd6931, %rd6930;
	shf.l.wrap.b32 	%r5070, %r5064, %r5065, 23;
	shf.l.wrap.b32 	%r5071, %r5065, %r5064, 23;
	mov.b64 	%rd6933, {%r5071, %r5070};
	xor.b64  	%rd6934, %rd6932, %rd6933;
	xor.b64  	%rd6935, %rd6894, %rd6870;
	and.b64  	%rd6936, %rd6918, %rd6935;
	xor.b64  	%rd6937, %rd6936, %rd6870;
	add.s64 	%rd6938, %rd6846, %rd6569;
	add.s64 	%rd6939, %rd6938, %rd35;
	add.s64 	%rd6940, %rd6939, %rd6937;
	add.s64 	%rd6941, %rd6940, %rd6934;
	add.s64 	%rd6942, %rd6941, %rd6857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5072,%dummy}, %rd6929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5073}, %rd6929;
	}
	shf.r.wrap.b32 	%r5074, %r5073, %r5072, 28;
	shf.r.wrap.b32 	%r5075, %r5072, %r5073, 28;
	mov.b64 	%rd6943, {%r5075, %r5074};
	shf.l.wrap.b32 	%r5076, %r5072, %r5073, 30;
	shf.l.wrap.b32 	%r5077, %r5073, %r5072, 30;
	mov.b64 	%rd6944, {%r5077, %r5076};
	xor.b64  	%rd6945, %rd6944, %rd6943;
	shf.l.wrap.b32 	%r5078, %r5072, %r5073, 25;
	shf.l.wrap.b32 	%r5079, %r5073, %r5072, 25;
	mov.b64 	%rd6946, {%r5079, %r5078};
	xor.b64  	%rd6947, %rd6945, %rd6946;
	xor.b64  	%rd6948, %rd6929, %rd6881;
	xor.b64  	%rd6949, %rd6929, %rd6905;
	and.b64  	%rd6950, %rd6949, %rd6948;
	xor.b64  	%rd6951, %rd6950, %rd6929;
	add.s64 	%rd6952, %rd6941, %rd6951;
	add.s64 	%rd6953, %rd6952, %rd6947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5080,%dummy}, %rd6556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5081}, %rd6556;
	}
	shf.r.wrap.b32 	%r5082, %r5081, %r5080, 19;
	shf.r.wrap.b32 	%r5083, %r5080, %r5081, 19;
	mov.b64 	%rd6954, {%r5083, %r5082};
	shf.l.wrap.b32 	%r5084, %r5080, %r5081, 3;
	shf.l.wrap.b32 	%r5085, %r5081, %r5080, 3;
	mov.b64 	%rd6955, {%r5085, %r5084};
	shr.u64 	%rd6956, %rd6556, 6;
	xor.b64  	%rd6957, %rd6954, %rd6956;
	xor.b64  	%rd6958, %rd6957, %rd6955;
	shf.r.wrap.b32 	%r5086, %r4675, %r4674, 1;
	shf.r.wrap.b32 	%r5087, %r4674, %r4675, 1;
	mov.b64 	%rd6959, {%r5087, %r5086};
	shf.r.wrap.b32 	%r5088, %r4675, %r4674, 8;
	shf.r.wrap.b32 	%r5089, %r4674, %r4675, 8;
	mov.b64 	%rd6960, {%r5089, %r5088};
	shr.u64 	%rd6961, %rd6387, 7;
	xor.b64  	%rd6962, %rd6959, %rd6961;
	xor.b64  	%rd6963, %rd6962, %rd6960;
	add.s64 	%rd6964, %rd6491, %rd6374;
	add.s64 	%rd6965, %rd6964, %rd6958;
	add.s64 	%rd6966, %rd6965, %rd6963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5090,%dummy}, %rd6569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5091}, %rd6569;
	}
	shf.r.wrap.b32 	%r5092, %r5091, %r5090, 19;
	shf.r.wrap.b32 	%r5093, %r5090, %r5091, 19;
	mov.b64 	%rd6967, {%r5093, %r5092};
	shf.l.wrap.b32 	%r5094, %r5090, %r5091, 3;
	shf.l.wrap.b32 	%r5095, %r5091, %r5090, 3;
	mov.b64 	%rd6968, {%r5095, %r5094};
	shr.u64 	%rd6969, %rd6569, 6;
	xor.b64  	%rd6970, %rd6967, %rd6969;
	xor.b64  	%rd6971, %rd6970, %rd6968;
	shf.r.wrap.b32 	%r5096, %r4687, %r4686, 1;
	shf.r.wrap.b32 	%r5097, %r4686, %r4687, 1;
	mov.b64 	%rd6972, {%r5097, %r5096};
	shf.r.wrap.b32 	%r5098, %r4687, %r4686, 8;
	shf.r.wrap.b32 	%r5099, %r4686, %r4687, 8;
	mov.b64 	%rd6973, {%r5099, %r5098};
	shr.u64 	%rd6974, %rd6400, 7;
	xor.b64  	%rd6975, %rd6972, %rd6974;
	xor.b64  	%rd6976, %rd6975, %rd6973;
	add.s64 	%rd6977, %rd6504, %rd6387;
	add.s64 	%rd6978, %rd6977, %rd6971;
	add.s64 	%rd6979, %rd6978, %rd6976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5100,%dummy}, %rd6966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5101}, %rd6966;
	}
	shf.r.wrap.b32 	%r5102, %r5101, %r5100, 19;
	shf.r.wrap.b32 	%r5103, %r5100, %r5101, 19;
	mov.b64 	%rd6980, {%r5103, %r5102};
	shf.l.wrap.b32 	%r5104, %r5100, %r5101, 3;
	shf.l.wrap.b32 	%r5105, %r5101, %r5100, 3;
	mov.b64 	%rd6981, {%r5105, %r5104};
	shr.u64 	%rd6982, %rd6966, 6;
	xor.b64  	%rd6983, %rd6980, %rd6982;
	xor.b64  	%rd6984, %rd6983, %rd6981;
	shf.r.wrap.b32 	%r5106, %r4699, %r4698, 1;
	shf.r.wrap.b32 	%r5107, %r4698, %r4699, 1;
	mov.b64 	%rd6985, {%r5107, %r5106};
	shf.r.wrap.b32 	%r5108, %r4699, %r4698, 8;
	shf.r.wrap.b32 	%r5109, %r4698, %r4699, 8;
	mov.b64 	%rd6986, {%r5109, %r5108};
	shr.u64 	%rd6987, %rd6413, 7;
	xor.b64  	%rd6988, %rd6985, %rd6987;
	xor.b64  	%rd6989, %rd6988, %rd6986;
	add.s64 	%rd6990, %rd6517, %rd6400;
	add.s64 	%rd6991, %rd6990, %rd6984;
	add.s64 	%rd6992, %rd6991, %rd6989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5110,%dummy}, %rd6979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5111}, %rd6979;
	}
	shf.r.wrap.b32 	%r5112, %r5111, %r5110, 19;
	shf.r.wrap.b32 	%r5113, %r5110, %r5111, 19;
	mov.b64 	%rd6993, {%r5113, %r5112};
	shf.l.wrap.b32 	%r5114, %r5110, %r5111, 3;
	shf.l.wrap.b32 	%r5115, %r5111, %r5110, 3;
	mov.b64 	%rd6994, {%r5115, %r5114};
	shr.u64 	%rd6995, %rd6979, 6;
	xor.b64  	%rd6996, %rd6993, %rd6995;
	xor.b64  	%rd6997, %rd6996, %rd6994;
	shf.r.wrap.b32 	%r5116, %r4711, %r4710, 1;
	shf.r.wrap.b32 	%r5117, %r4710, %r4711, 1;
	mov.b64 	%rd6998, {%r5117, %r5116};
	shf.r.wrap.b32 	%r5118, %r4711, %r4710, 8;
	shf.r.wrap.b32 	%r5119, %r4710, %r4711, 8;
	mov.b64 	%rd6999, {%r5119, %r5118};
	shr.u64 	%rd7000, %rd6426, 7;
	xor.b64  	%rd7001, %rd6998, %rd7000;
	xor.b64  	%rd7002, %rd7001, %rd6999;
	add.s64 	%rd7003, %rd6530, %rd6413;
	add.s64 	%rd7004, %rd7003, %rd6997;
	add.s64 	%rd7005, %rd7004, %rd7002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5120,%dummy}, %rd6992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5121}, %rd6992;
	}
	shf.r.wrap.b32 	%r5122, %r5121, %r5120, 19;
	shf.r.wrap.b32 	%r5123, %r5120, %r5121, 19;
	mov.b64 	%rd7006, {%r5123, %r5122};
	shf.l.wrap.b32 	%r5124, %r5120, %r5121, 3;
	shf.l.wrap.b32 	%r5125, %r5121, %r5120, 3;
	mov.b64 	%rd7007, {%r5125, %r5124};
	shr.u64 	%rd7008, %rd6992, 6;
	xor.b64  	%rd7009, %rd7006, %rd7008;
	xor.b64  	%rd7010, %rd7009, %rd7007;
	shf.r.wrap.b32 	%r5126, %r4723, %r4722, 1;
	shf.r.wrap.b32 	%r5127, %r4722, %r4723, 1;
	mov.b64 	%rd7011, {%r5127, %r5126};
	shf.r.wrap.b32 	%r5128, %r4723, %r4722, 8;
	shf.r.wrap.b32 	%r5129, %r4722, %r4723, 8;
	mov.b64 	%rd7012, {%r5129, %r5128};
	shr.u64 	%rd7013, %rd6439, 7;
	xor.b64  	%rd7014, %rd7011, %rd7013;
	xor.b64  	%rd7015, %rd7014, %rd7012;
	add.s64 	%rd7016, %rd6543, %rd6426;
	add.s64 	%rd7017, %rd7016, %rd7010;
	add.s64 	%rd7018, %rd7017, %rd7015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5130,%dummy}, %rd7005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5131}, %rd7005;
	}
	shf.r.wrap.b32 	%r5132, %r5131, %r5130, 19;
	shf.r.wrap.b32 	%r5133, %r5130, %r5131, 19;
	mov.b64 	%rd7019, {%r5133, %r5132};
	shf.l.wrap.b32 	%r5134, %r5130, %r5131, 3;
	shf.l.wrap.b32 	%r5135, %r5131, %r5130, 3;
	mov.b64 	%rd7020, {%r5135, %r5134};
	shr.u64 	%rd7021, %rd7005, 6;
	xor.b64  	%rd7022, %rd7019, %rd7021;
	xor.b64  	%rd7023, %rd7022, %rd7020;
	shf.r.wrap.b32 	%r5136, %r4735, %r4734, 1;
	shf.r.wrap.b32 	%r5137, %r4734, %r4735, 1;
	mov.b64 	%rd7024, {%r5137, %r5136};
	shf.r.wrap.b32 	%r5138, %r4735, %r4734, 8;
	shf.r.wrap.b32 	%r5139, %r4734, %r4735, 8;
	mov.b64 	%rd7025, {%r5139, %r5138};
	shr.u64 	%rd7026, %rd6452, 7;
	xor.b64  	%rd7027, %rd7024, %rd7026;
	xor.b64  	%rd7028, %rd7027, %rd7025;
	add.s64 	%rd7029, %rd6556, %rd6439;
	add.s64 	%rd7030, %rd7029, %rd7023;
	add.s64 	%rd7031, %rd7030, %rd7028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5140,%dummy}, %rd7018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5141}, %rd7018;
	}
	shf.r.wrap.b32 	%r5142, %r5141, %r5140, 19;
	shf.r.wrap.b32 	%r5143, %r5140, %r5141, 19;
	mov.b64 	%rd7032, {%r5143, %r5142};
	shf.l.wrap.b32 	%r5144, %r5140, %r5141, 3;
	shf.l.wrap.b32 	%r5145, %r5141, %r5140, 3;
	mov.b64 	%rd7033, {%r5145, %r5144};
	shr.u64 	%rd7034, %rd7018, 6;
	xor.b64  	%rd7035, %rd7032, %rd7034;
	xor.b64  	%rd7036, %rd7035, %rd7033;
	shf.r.wrap.b32 	%r5146, %r4747, %r4746, 1;
	shf.r.wrap.b32 	%r5147, %r4746, %r4747, 1;
	mov.b64 	%rd7037, {%r5147, %r5146};
	shf.r.wrap.b32 	%r5148, %r4747, %r4746, 8;
	shf.r.wrap.b32 	%r5149, %r4746, %r4747, 8;
	mov.b64 	%rd7038, {%r5149, %r5148};
	shr.u64 	%rd7039, %rd6465, 7;
	xor.b64  	%rd7040, %rd7037, %rd7039;
	xor.b64  	%rd7041, %rd7040, %rd7038;
	add.s64 	%rd7042, %rd6569, %rd6452;
	add.s64 	%rd7043, %rd7042, %rd7036;
	add.s64 	%rd7044, %rd7043, %rd7041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5150,%dummy}, %rd7031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5151}, %rd7031;
	}
	shf.r.wrap.b32 	%r5152, %r5151, %r5150, 19;
	shf.r.wrap.b32 	%r5153, %r5150, %r5151, 19;
	mov.b64 	%rd7045, {%r5153, %r5152};
	shf.l.wrap.b32 	%r5154, %r5150, %r5151, 3;
	shf.l.wrap.b32 	%r5155, %r5151, %r5150, 3;
	mov.b64 	%rd7046, {%r5155, %r5154};
	shr.u64 	%rd7047, %rd7031, 6;
	xor.b64  	%rd7048, %rd7045, %rd7047;
	xor.b64  	%rd7049, %rd7048, %rd7046;
	shf.r.wrap.b32 	%r5156, %r4759, %r4758, 1;
	shf.r.wrap.b32 	%r5157, %r4758, %r4759, 1;
	mov.b64 	%rd7050, {%r5157, %r5156};
	shf.r.wrap.b32 	%r5158, %r4759, %r4758, 8;
	shf.r.wrap.b32 	%r5159, %r4758, %r4759, 8;
	mov.b64 	%rd7051, {%r5159, %r5158};
	shr.u64 	%rd7052, %rd6478, 7;
	xor.b64  	%rd7053, %rd7050, %rd7052;
	xor.b64  	%rd7054, %rd7053, %rd7051;
	add.s64 	%rd7055, %rd6966, %rd6465;
	add.s64 	%rd7056, %rd7055, %rd7049;
	add.s64 	%rd7057, %rd7056, %rd7054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5160,%dummy}, %rd7044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5161}, %rd7044;
	}
	shf.r.wrap.b32 	%r5162, %r5161, %r5160, 19;
	shf.r.wrap.b32 	%r5163, %r5160, %r5161, 19;
	mov.b64 	%rd7058, {%r5163, %r5162};
	shf.l.wrap.b32 	%r5164, %r5160, %r5161, 3;
	shf.l.wrap.b32 	%r5165, %r5161, %r5160, 3;
	mov.b64 	%rd7059, {%r5165, %r5164};
	shr.u64 	%rd7060, %rd7044, 6;
	xor.b64  	%rd7061, %rd7058, %rd7060;
	xor.b64  	%rd7062, %rd7061, %rd7059;
	shf.r.wrap.b32 	%r5166, %r4771, %r4770, 1;
	shf.r.wrap.b32 	%r5167, %r4770, %r4771, 1;
	mov.b64 	%rd7063, {%r5167, %r5166};
	shf.r.wrap.b32 	%r5168, %r4771, %r4770, 8;
	shf.r.wrap.b32 	%r5169, %r4770, %r4771, 8;
	mov.b64 	%rd7064, {%r5169, %r5168};
	shr.u64 	%rd7065, %rd6491, 7;
	xor.b64  	%rd7066, %rd7063, %rd7065;
	xor.b64  	%rd7067, %rd7066, %rd7064;
	add.s64 	%rd7068, %rd6979, %rd6478;
	add.s64 	%rd7069, %rd7068, %rd7062;
	add.s64 	%rd7070, %rd7069, %rd7067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5170,%dummy}, %rd7057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5171}, %rd7057;
	}
	shf.r.wrap.b32 	%r5172, %r5171, %r5170, 19;
	shf.r.wrap.b32 	%r5173, %r5170, %r5171, 19;
	mov.b64 	%rd7071, {%r5173, %r5172};
	shf.l.wrap.b32 	%r5174, %r5170, %r5171, 3;
	shf.l.wrap.b32 	%r5175, %r5171, %r5170, 3;
	mov.b64 	%rd7072, {%r5175, %r5174};
	shr.u64 	%rd7073, %rd7057, 6;
	xor.b64  	%rd7074, %rd7071, %rd7073;
	xor.b64  	%rd7075, %rd7074, %rd7072;
	shf.r.wrap.b32 	%r5176, %r4783, %r4782, 1;
	shf.r.wrap.b32 	%r5177, %r4782, %r4783, 1;
	mov.b64 	%rd7076, {%r5177, %r5176};
	shf.r.wrap.b32 	%r5178, %r4783, %r4782, 8;
	shf.r.wrap.b32 	%r5179, %r4782, %r4783, 8;
	mov.b64 	%rd7077, {%r5179, %r5178};
	shr.u64 	%rd7078, %rd6504, 7;
	xor.b64  	%rd7079, %rd7076, %rd7078;
	xor.b64  	%rd7080, %rd7079, %rd7077;
	add.s64 	%rd7081, %rd6992, %rd6491;
	add.s64 	%rd7082, %rd7081, %rd7075;
	add.s64 	%rd7083, %rd7082, %rd7080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5180,%dummy}, %rd7070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5181}, %rd7070;
	}
	shf.r.wrap.b32 	%r5182, %r5181, %r5180, 19;
	shf.r.wrap.b32 	%r5183, %r5180, %r5181, 19;
	mov.b64 	%rd7084, {%r5183, %r5182};
	shf.l.wrap.b32 	%r5184, %r5180, %r5181, 3;
	shf.l.wrap.b32 	%r5185, %r5181, %r5180, 3;
	mov.b64 	%rd7085, {%r5185, %r5184};
	shr.u64 	%rd7086, %rd7070, 6;
	xor.b64  	%rd7087, %rd7084, %rd7086;
	xor.b64  	%rd7088, %rd7087, %rd7085;
	shf.r.wrap.b32 	%r5186, %r4795, %r4794, 1;
	shf.r.wrap.b32 	%r5187, %r4794, %r4795, 1;
	mov.b64 	%rd7089, {%r5187, %r5186};
	shf.r.wrap.b32 	%r5188, %r4795, %r4794, 8;
	shf.r.wrap.b32 	%r5189, %r4794, %r4795, 8;
	mov.b64 	%rd7090, {%r5189, %r5188};
	shr.u64 	%rd7091, %rd6517, 7;
	xor.b64  	%rd7092, %rd7089, %rd7091;
	xor.b64  	%rd7093, %rd7092, %rd7090;
	add.s64 	%rd7094, %rd7005, %rd6504;
	add.s64 	%rd7095, %rd7094, %rd7088;
	add.s64 	%rd7096, %rd7095, %rd7093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5190,%dummy}, %rd7083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5191}, %rd7083;
	}
	shf.r.wrap.b32 	%r5192, %r5191, %r5190, 19;
	shf.r.wrap.b32 	%r5193, %r5190, %r5191, 19;
	mov.b64 	%rd7097, {%r5193, %r5192};
	shf.l.wrap.b32 	%r5194, %r5190, %r5191, 3;
	shf.l.wrap.b32 	%r5195, %r5191, %r5190, 3;
	mov.b64 	%rd7098, {%r5195, %r5194};
	shr.u64 	%rd7099, %rd7083, 6;
	xor.b64  	%rd7100, %rd7097, %rd7099;
	xor.b64  	%rd7101, %rd7100, %rd7098;
	shf.r.wrap.b32 	%r5196, %r4805, %r4804, 1;
	shf.r.wrap.b32 	%r5197, %r4804, %r4805, 1;
	mov.b64 	%rd7102, {%r5197, %r5196};
	shf.r.wrap.b32 	%r5198, %r4805, %r4804, 8;
	shf.r.wrap.b32 	%r5199, %r4804, %r4805, 8;
	mov.b64 	%rd7103, {%r5199, %r5198};
	shr.u64 	%rd7104, %rd6530, 7;
	xor.b64  	%rd7105, %rd7102, %rd7104;
	xor.b64  	%rd7106, %rd7105, %rd7103;
	add.s64 	%rd7107, %rd7018, %rd6517;
	add.s64 	%rd7108, %rd7107, %rd7101;
	add.s64 	%rd7109, %rd7108, %rd7106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5200,%dummy}, %rd7096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5201}, %rd7096;
	}
	shf.r.wrap.b32 	%r5202, %r5201, %r5200, 19;
	shf.r.wrap.b32 	%r5203, %r5200, %r5201, 19;
	mov.b64 	%rd7110, {%r5203, %r5202};
	shf.l.wrap.b32 	%r5204, %r5200, %r5201, 3;
	shf.l.wrap.b32 	%r5205, %r5201, %r5200, 3;
	mov.b64 	%rd7111, {%r5205, %r5204};
	shr.u64 	%rd7112, %rd7096, 6;
	xor.b64  	%rd7113, %rd7110, %rd7112;
	xor.b64  	%rd7114, %rd7113, %rd7111;
	shf.r.wrap.b32 	%r5206, %r4815, %r4814, 1;
	shf.r.wrap.b32 	%r5207, %r4814, %r4815, 1;
	mov.b64 	%rd7115, {%r5207, %r5206};
	shf.r.wrap.b32 	%r5208, %r4815, %r4814, 8;
	shf.r.wrap.b32 	%r5209, %r4814, %r4815, 8;
	mov.b64 	%rd7116, {%r5209, %r5208};
	shr.u64 	%rd7117, %rd6543, 7;
	xor.b64  	%rd7118, %rd7115, %rd7117;
	xor.b64  	%rd7119, %rd7118, %rd7116;
	add.s64 	%rd7120, %rd7031, %rd6530;
	add.s64 	%rd7121, %rd7120, %rd7114;
	add.s64 	%rd7122, %rd7121, %rd7119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5210,%dummy}, %rd7109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5211}, %rd7109;
	}
	shf.r.wrap.b32 	%r5212, %r5211, %r5210, 19;
	shf.r.wrap.b32 	%r5213, %r5210, %r5211, 19;
	mov.b64 	%rd7123, {%r5213, %r5212};
	shf.l.wrap.b32 	%r5214, %r5210, %r5211, 3;
	shf.l.wrap.b32 	%r5215, %r5211, %r5210, 3;
	mov.b64 	%rd7124, {%r5215, %r5214};
	shr.u64 	%rd7125, %rd7109, 6;
	xor.b64  	%rd7126, %rd7123, %rd7125;
	xor.b64  	%rd7127, %rd7126, %rd7124;
	shf.r.wrap.b32 	%r5216, %r5081, %r5080, 1;
	shf.r.wrap.b32 	%r5217, %r5080, %r5081, 1;
	mov.b64 	%rd7128, {%r5217, %r5216};
	shf.r.wrap.b32 	%r5218, %r5081, %r5080, 8;
	shf.r.wrap.b32 	%r5219, %r5080, %r5081, 8;
	mov.b64 	%rd7129, {%r5219, %r5218};
	shr.u64 	%rd7130, %rd6556, 7;
	xor.b64  	%rd7131, %rd7128, %rd7130;
	xor.b64  	%rd7132, %rd7131, %rd7129;
	add.s64 	%rd7133, %rd7044, %rd6543;
	add.s64 	%rd7134, %rd7133, %rd7127;
	add.s64 	%rd7135, %rd7134, %rd7132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5220,%dummy}, %rd7122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5221}, %rd7122;
	}
	shf.r.wrap.b32 	%r5222, %r5221, %r5220, 19;
	shf.r.wrap.b32 	%r5223, %r5220, %r5221, 19;
	mov.b64 	%rd7136, {%r5223, %r5222};
	shf.l.wrap.b32 	%r5224, %r5220, %r5221, 3;
	shf.l.wrap.b32 	%r5225, %r5221, %r5220, 3;
	mov.b64 	%rd7137, {%r5225, %r5224};
	shr.u64 	%rd7138, %rd7122, 6;
	xor.b64  	%rd7139, %rd7136, %rd7138;
	xor.b64  	%rd7140, %rd7139, %rd7137;
	shf.r.wrap.b32 	%r5226, %r5091, %r5090, 1;
	shf.r.wrap.b32 	%r5227, %r5090, %r5091, 1;
	mov.b64 	%rd7141, {%r5227, %r5226};
	shf.r.wrap.b32 	%r5228, %r5091, %r5090, 8;
	shf.r.wrap.b32 	%r5229, %r5090, %r5091, 8;
	mov.b64 	%rd7142, {%r5229, %r5228};
	shr.u64 	%rd7143, %rd6569, 7;
	xor.b64  	%rd7144, %rd7141, %rd7143;
	xor.b64  	%rd7145, %rd7144, %rd7142;
	add.s64 	%rd7146, %rd7057, %rd6556;
	add.s64 	%rd7147, %rd7146, %rd7140;
	add.s64 	%rd7148, %rd7147, %rd7145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5230,%dummy}, %rd7135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5231}, %rd7135;
	}
	shf.r.wrap.b32 	%r5232, %r5231, %r5230, 19;
	shf.r.wrap.b32 	%r5233, %r5230, %r5231, 19;
	mov.b64 	%rd7149, {%r5233, %r5232};
	shf.l.wrap.b32 	%r5234, %r5230, %r5231, 3;
	shf.l.wrap.b32 	%r5235, %r5231, %r5230, 3;
	mov.b64 	%rd7150, {%r5235, %r5234};
	shr.u64 	%rd7151, %rd7135, 6;
	xor.b64  	%rd7152, %rd7149, %rd7151;
	xor.b64  	%rd7153, %rd7152, %rd7150;
	shf.r.wrap.b32 	%r5236, %r5101, %r5100, 1;
	shf.r.wrap.b32 	%r5237, %r5100, %r5101, 1;
	mov.b64 	%rd7154, {%r5237, %r5236};
	shf.r.wrap.b32 	%r5238, %r5101, %r5100, 8;
	shf.r.wrap.b32 	%r5239, %r5100, %r5101, 8;
	mov.b64 	%rd7155, {%r5239, %r5238};
	shr.u64 	%rd7156, %rd6966, 7;
	xor.b64  	%rd7157, %rd7154, %rd7156;
	xor.b64  	%rd7158, %rd7157, %rd7155;
	add.s64 	%rd7159, %rd7070, %rd6569;
	add.s64 	%rd7160, %rd7159, %rd7153;
	add.s64 	%rd7161, %rd7160, %rd7158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5240,%dummy}, %rd6942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5241}, %rd6942;
	}
	shf.r.wrap.b32 	%r5242, %r5241, %r5240, 14;
	shf.r.wrap.b32 	%r5243, %r5240, %r5241, 14;
	mov.b64 	%rd7162, {%r5243, %r5242};
	shf.r.wrap.b32 	%r5244, %r5241, %r5240, 18;
	shf.r.wrap.b32 	%r5245, %r5240, %r5241, 18;
	mov.b64 	%rd7163, {%r5245, %r5244};
	xor.b64  	%rd7164, %rd7163, %rd7162;
	shf.l.wrap.b32 	%r5246, %r5240, %r5241, 23;
	shf.l.wrap.b32 	%r5247, %r5241, %r5240, 23;
	mov.b64 	%rd7165, {%r5247, %r5246};
	xor.b64  	%rd7166, %rd7164, %rd7165;
	xor.b64  	%rd7167, %rd6918, %rd6894;
	and.b64  	%rd7168, %rd7167, %rd6942;
	xor.b64  	%rd7169, %rd7168, %rd6894;
	add.s64 	%rd7170, %rd7169, %rd6870;
	add.s64 	%rd7171, %rd7170, %rd6966;
	add.s64 	%rd7172, %rd7171, %rd36;
	add.s64 	%rd7173, %rd7172, %rd7166;
	add.s64 	%rd7174, %rd7173, %rd6881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5248,%dummy}, %rd6953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5249}, %rd6953;
	}
	shf.r.wrap.b32 	%r5250, %r5249, %r5248, 28;
	shf.r.wrap.b32 	%r5251, %r5248, %r5249, 28;
	mov.b64 	%rd7175, {%r5251, %r5250};
	shf.l.wrap.b32 	%r5252, %r5248, %r5249, 30;
	shf.l.wrap.b32 	%r5253, %r5249, %r5248, 30;
	mov.b64 	%rd7176, {%r5253, %r5252};
	xor.b64  	%rd7177, %rd7176, %rd7175;
	shf.l.wrap.b32 	%r5254, %r5248, %r5249, 25;
	shf.l.wrap.b32 	%r5255, %r5249, %r5248, 25;
	mov.b64 	%rd7178, {%r5255, %r5254};
	xor.b64  	%rd7179, %rd7177, %rd7178;
	xor.b64  	%rd7180, %rd6953, %rd6905;
	xor.b64  	%rd7181, %rd6953, %rd6929;
	and.b64  	%rd7182, %rd7181, %rd7180;
	xor.b64  	%rd7183, %rd7182, %rd6953;
	add.s64 	%rd7184, %rd7173, %rd7183;
	add.s64 	%rd7185, %rd7184, %rd7179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5256,%dummy}, %rd7174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5257}, %rd7174;
	}
	shf.r.wrap.b32 	%r5258, %r5257, %r5256, 14;
	shf.r.wrap.b32 	%r5259, %r5256, %r5257, 14;
	mov.b64 	%rd7186, {%r5259, %r5258};
	shf.r.wrap.b32 	%r5260, %r5257, %r5256, 18;
	shf.r.wrap.b32 	%r5261, %r5256, %r5257, 18;
	mov.b64 	%rd7187, {%r5261, %r5260};
	xor.b64  	%rd7188, %rd7187, %rd7186;
	shf.l.wrap.b32 	%r5262, %r5256, %r5257, 23;
	shf.l.wrap.b32 	%r5263, %r5257, %r5256, 23;
	mov.b64 	%rd7189, {%r5263, %r5262};
	xor.b64  	%rd7190, %rd7188, %rd7189;
	xor.b64  	%rd7191, %rd6942, %rd6918;
	and.b64  	%rd7192, %rd7174, %rd7191;
	xor.b64  	%rd7193, %rd7192, %rd6918;
	add.s64 	%rd7194, %rd6979, %rd6894;
	add.s64 	%rd7195, %rd7194, %rd37;
	add.s64 	%rd7196, %rd7195, %rd7193;
	add.s64 	%rd7197, %rd7196, %rd7190;
	add.s64 	%rd7198, %rd7197, %rd6905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5264,%dummy}, %rd7185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5265}, %rd7185;
	}
	shf.r.wrap.b32 	%r5266, %r5265, %r5264, 28;
	shf.r.wrap.b32 	%r5267, %r5264, %r5265, 28;
	mov.b64 	%rd7199, {%r5267, %r5266};
	shf.l.wrap.b32 	%r5268, %r5264, %r5265, 30;
	shf.l.wrap.b32 	%r5269, %r5265, %r5264, 30;
	mov.b64 	%rd7200, {%r5269, %r5268};
	xor.b64  	%rd7201, %rd7200, %rd7199;
	shf.l.wrap.b32 	%r5270, %r5264, %r5265, 25;
	shf.l.wrap.b32 	%r5271, %r5265, %r5264, 25;
	mov.b64 	%rd7202, {%r5271, %r5270};
	xor.b64  	%rd7203, %rd7201, %rd7202;
	xor.b64  	%rd7204, %rd7185, %rd6929;
	xor.b64  	%rd7205, %rd7185, %rd6953;
	and.b64  	%rd7206, %rd7205, %rd7204;
	xor.b64  	%rd7207, %rd7206, %rd7185;
	add.s64 	%rd7208, %rd7197, %rd7207;
	add.s64 	%rd7209, %rd7208, %rd7203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5272,%dummy}, %rd7198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5273}, %rd7198;
	}
	shf.r.wrap.b32 	%r5274, %r5273, %r5272, 14;
	shf.r.wrap.b32 	%r5275, %r5272, %r5273, 14;
	mov.b64 	%rd7210, {%r5275, %r5274};
	shf.r.wrap.b32 	%r5276, %r5273, %r5272, 18;
	shf.r.wrap.b32 	%r5277, %r5272, %r5273, 18;
	mov.b64 	%rd7211, {%r5277, %r5276};
	xor.b64  	%rd7212, %rd7211, %rd7210;
	shf.l.wrap.b32 	%r5278, %r5272, %r5273, 23;
	shf.l.wrap.b32 	%r5279, %r5273, %r5272, 23;
	mov.b64 	%rd7213, {%r5279, %r5278};
	xor.b64  	%rd7214, %rd7212, %rd7213;
	xor.b64  	%rd7215, %rd7174, %rd6942;
	and.b64  	%rd7216, %rd7198, %rd7215;
	xor.b64  	%rd7217, %rd7216, %rd6942;
	add.s64 	%rd7218, %rd6992, %rd6918;
	add.s64 	%rd7219, %rd7218, %rd38;
	add.s64 	%rd7220, %rd7219, %rd7217;
	add.s64 	%rd7221, %rd7220, %rd7214;
	add.s64 	%rd7222, %rd7221, %rd6929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5280,%dummy}, %rd7209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5281}, %rd7209;
	}
	shf.r.wrap.b32 	%r5282, %r5281, %r5280, 28;
	shf.r.wrap.b32 	%r5283, %r5280, %r5281, 28;
	mov.b64 	%rd7223, {%r5283, %r5282};
	shf.l.wrap.b32 	%r5284, %r5280, %r5281, 30;
	shf.l.wrap.b32 	%r5285, %r5281, %r5280, 30;
	mov.b64 	%rd7224, {%r5285, %r5284};
	xor.b64  	%rd7225, %rd7224, %rd7223;
	shf.l.wrap.b32 	%r5286, %r5280, %r5281, 25;
	shf.l.wrap.b32 	%r5287, %r5281, %r5280, 25;
	mov.b64 	%rd7226, {%r5287, %r5286};
	xor.b64  	%rd7227, %rd7225, %rd7226;
	xor.b64  	%rd7228, %rd7209, %rd6953;
	xor.b64  	%rd7229, %rd7209, %rd7185;
	and.b64  	%rd7230, %rd7229, %rd7228;
	xor.b64  	%rd7231, %rd7230, %rd7209;
	add.s64 	%rd7232, %rd7221, %rd7231;
	add.s64 	%rd7233, %rd7232, %rd7227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5288,%dummy}, %rd7222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5289}, %rd7222;
	}
	shf.r.wrap.b32 	%r5290, %r5289, %r5288, 14;
	shf.r.wrap.b32 	%r5291, %r5288, %r5289, 14;
	mov.b64 	%rd7234, {%r5291, %r5290};
	shf.r.wrap.b32 	%r5292, %r5289, %r5288, 18;
	shf.r.wrap.b32 	%r5293, %r5288, %r5289, 18;
	mov.b64 	%rd7235, {%r5293, %r5292};
	xor.b64  	%rd7236, %rd7235, %rd7234;
	shf.l.wrap.b32 	%r5294, %r5288, %r5289, 23;
	shf.l.wrap.b32 	%r5295, %r5289, %r5288, 23;
	mov.b64 	%rd7237, {%r5295, %r5294};
	xor.b64  	%rd7238, %rd7236, %rd7237;
	xor.b64  	%rd7239, %rd7198, %rd7174;
	and.b64  	%rd7240, %rd7222, %rd7239;
	xor.b64  	%rd7241, %rd7240, %rd7174;
	add.s64 	%rd7242, %rd7005, %rd6942;
	add.s64 	%rd7243, %rd7242, %rd39;
	add.s64 	%rd7244, %rd7243, %rd7241;
	add.s64 	%rd7245, %rd7244, %rd7238;
	add.s64 	%rd7246, %rd7245, %rd6953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5296,%dummy}, %rd7233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5297}, %rd7233;
	}
	shf.r.wrap.b32 	%r5298, %r5297, %r5296, 28;
	shf.r.wrap.b32 	%r5299, %r5296, %r5297, 28;
	mov.b64 	%rd7247, {%r5299, %r5298};
	shf.l.wrap.b32 	%r5300, %r5296, %r5297, 30;
	shf.l.wrap.b32 	%r5301, %r5297, %r5296, 30;
	mov.b64 	%rd7248, {%r5301, %r5300};
	xor.b64  	%rd7249, %rd7248, %rd7247;
	shf.l.wrap.b32 	%r5302, %r5296, %r5297, 25;
	shf.l.wrap.b32 	%r5303, %r5297, %r5296, 25;
	mov.b64 	%rd7250, {%r5303, %r5302};
	xor.b64  	%rd7251, %rd7249, %rd7250;
	xor.b64  	%rd7252, %rd7233, %rd7185;
	xor.b64  	%rd7253, %rd7233, %rd7209;
	and.b64  	%rd7254, %rd7253, %rd7252;
	xor.b64  	%rd7255, %rd7254, %rd7233;
	add.s64 	%rd7256, %rd7245, %rd7255;
	add.s64 	%rd7257, %rd7256, %rd7251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5304,%dummy}, %rd7246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5305}, %rd7246;
	}
	shf.r.wrap.b32 	%r5306, %r5305, %r5304, 14;
	shf.r.wrap.b32 	%r5307, %r5304, %r5305, 14;
	mov.b64 	%rd7258, {%r5307, %r5306};
	shf.r.wrap.b32 	%r5308, %r5305, %r5304, 18;
	shf.r.wrap.b32 	%r5309, %r5304, %r5305, 18;
	mov.b64 	%rd7259, {%r5309, %r5308};
	xor.b64  	%rd7260, %rd7259, %rd7258;
	shf.l.wrap.b32 	%r5310, %r5304, %r5305, 23;
	shf.l.wrap.b32 	%r5311, %r5305, %r5304, 23;
	mov.b64 	%rd7261, {%r5311, %r5310};
	xor.b64  	%rd7262, %rd7260, %rd7261;
	xor.b64  	%rd7263, %rd7222, %rd7198;
	and.b64  	%rd7264, %rd7246, %rd7263;
	xor.b64  	%rd7265, %rd7264, %rd7198;
	add.s64 	%rd7266, %rd7174, %rd7018;
	add.s64 	%rd7267, %rd7266, %rd40;
	add.s64 	%rd7268, %rd7267, %rd7265;
	add.s64 	%rd7269, %rd7268, %rd7262;
	add.s64 	%rd7270, %rd7269, %rd7185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5312,%dummy}, %rd7257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5313}, %rd7257;
	}
	shf.r.wrap.b32 	%r5314, %r5313, %r5312, 28;
	shf.r.wrap.b32 	%r5315, %r5312, %r5313, 28;
	mov.b64 	%rd7271, {%r5315, %r5314};
	shf.l.wrap.b32 	%r5316, %r5312, %r5313, 30;
	shf.l.wrap.b32 	%r5317, %r5313, %r5312, 30;
	mov.b64 	%rd7272, {%r5317, %r5316};
	xor.b64  	%rd7273, %rd7272, %rd7271;
	shf.l.wrap.b32 	%r5318, %r5312, %r5313, 25;
	shf.l.wrap.b32 	%r5319, %r5313, %r5312, 25;
	mov.b64 	%rd7274, {%r5319, %r5318};
	xor.b64  	%rd7275, %rd7273, %rd7274;
	xor.b64  	%rd7276, %rd7257, %rd7209;
	xor.b64  	%rd7277, %rd7257, %rd7233;
	and.b64  	%rd7278, %rd7277, %rd7276;
	xor.b64  	%rd7279, %rd7278, %rd7257;
	add.s64 	%rd7280, %rd7269, %rd7279;
	add.s64 	%rd7281, %rd7280, %rd7275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5320,%dummy}, %rd7270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5321}, %rd7270;
	}
	shf.r.wrap.b32 	%r5322, %r5321, %r5320, 14;
	shf.r.wrap.b32 	%r5323, %r5320, %r5321, 14;
	mov.b64 	%rd7282, {%r5323, %r5322};
	shf.r.wrap.b32 	%r5324, %r5321, %r5320, 18;
	shf.r.wrap.b32 	%r5325, %r5320, %r5321, 18;
	mov.b64 	%rd7283, {%r5325, %r5324};
	xor.b64  	%rd7284, %rd7283, %rd7282;
	shf.l.wrap.b32 	%r5326, %r5320, %r5321, 23;
	shf.l.wrap.b32 	%r5327, %r5321, %r5320, 23;
	mov.b64 	%rd7285, {%r5327, %r5326};
	xor.b64  	%rd7286, %rd7284, %rd7285;
	xor.b64  	%rd7287, %rd7246, %rd7222;
	and.b64  	%rd7288, %rd7270, %rd7287;
	xor.b64  	%rd7289, %rd7288, %rd7222;
	add.s64 	%rd7290, %rd7198, %rd7031;
	add.s64 	%rd7291, %rd7290, %rd41;
	add.s64 	%rd7292, %rd7291, %rd7289;
	add.s64 	%rd7293, %rd7292, %rd7286;
	add.s64 	%rd7294, %rd7293, %rd7209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5328,%dummy}, %rd7281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5329}, %rd7281;
	}
	shf.r.wrap.b32 	%r5330, %r5329, %r5328, 28;
	shf.r.wrap.b32 	%r5331, %r5328, %r5329, 28;
	mov.b64 	%rd7295, {%r5331, %r5330};
	shf.l.wrap.b32 	%r5332, %r5328, %r5329, 30;
	shf.l.wrap.b32 	%r5333, %r5329, %r5328, 30;
	mov.b64 	%rd7296, {%r5333, %r5332};
	xor.b64  	%rd7297, %rd7296, %rd7295;
	shf.l.wrap.b32 	%r5334, %r5328, %r5329, 25;
	shf.l.wrap.b32 	%r5335, %r5329, %r5328, 25;
	mov.b64 	%rd7298, {%r5335, %r5334};
	xor.b64  	%rd7299, %rd7297, %rd7298;
	xor.b64  	%rd7300, %rd7281, %rd7233;
	xor.b64  	%rd7301, %rd7281, %rd7257;
	and.b64  	%rd7302, %rd7301, %rd7300;
	xor.b64  	%rd7303, %rd7302, %rd7281;
	add.s64 	%rd7304, %rd7293, %rd7303;
	add.s64 	%rd7305, %rd7304, %rd7299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5336,%dummy}, %rd7294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5337}, %rd7294;
	}
	shf.r.wrap.b32 	%r5338, %r5337, %r5336, 14;
	shf.r.wrap.b32 	%r5339, %r5336, %r5337, 14;
	mov.b64 	%rd7306, {%r5339, %r5338};
	shf.r.wrap.b32 	%r5340, %r5337, %r5336, 18;
	shf.r.wrap.b32 	%r5341, %r5336, %r5337, 18;
	mov.b64 	%rd7307, {%r5341, %r5340};
	xor.b64  	%rd7308, %rd7307, %rd7306;
	shf.l.wrap.b32 	%r5342, %r5336, %r5337, 23;
	shf.l.wrap.b32 	%r5343, %r5337, %r5336, 23;
	mov.b64 	%rd7309, {%r5343, %r5342};
	xor.b64  	%rd7310, %rd7308, %rd7309;
	xor.b64  	%rd7311, %rd7270, %rd7246;
	and.b64  	%rd7312, %rd7294, %rd7311;
	xor.b64  	%rd7313, %rd7312, %rd7246;
	add.s64 	%rd7314, %rd7222, %rd7044;
	add.s64 	%rd7315, %rd7314, %rd42;
	add.s64 	%rd7316, %rd7315, %rd7313;
	add.s64 	%rd7317, %rd7316, %rd7310;
	add.s64 	%rd7318, %rd7317, %rd7233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5344,%dummy}, %rd7305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5345}, %rd7305;
	}
	shf.r.wrap.b32 	%r5346, %r5345, %r5344, 28;
	shf.r.wrap.b32 	%r5347, %r5344, %r5345, 28;
	mov.b64 	%rd7319, {%r5347, %r5346};
	shf.l.wrap.b32 	%r5348, %r5344, %r5345, 30;
	shf.l.wrap.b32 	%r5349, %r5345, %r5344, 30;
	mov.b64 	%rd7320, {%r5349, %r5348};
	xor.b64  	%rd7321, %rd7320, %rd7319;
	shf.l.wrap.b32 	%r5350, %r5344, %r5345, 25;
	shf.l.wrap.b32 	%r5351, %r5345, %r5344, 25;
	mov.b64 	%rd7322, {%r5351, %r5350};
	xor.b64  	%rd7323, %rd7321, %rd7322;
	xor.b64  	%rd7324, %rd7305, %rd7257;
	xor.b64  	%rd7325, %rd7305, %rd7281;
	and.b64  	%rd7326, %rd7325, %rd7324;
	xor.b64  	%rd7327, %rd7326, %rd7305;
	add.s64 	%rd7328, %rd7317, %rd7327;
	add.s64 	%rd7329, %rd7328, %rd7323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5352,%dummy}, %rd7318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5353}, %rd7318;
	}
	shf.r.wrap.b32 	%r5354, %r5353, %r5352, 14;
	shf.r.wrap.b32 	%r5355, %r5352, %r5353, 14;
	mov.b64 	%rd7330, {%r5355, %r5354};
	shf.r.wrap.b32 	%r5356, %r5353, %r5352, 18;
	shf.r.wrap.b32 	%r5357, %r5352, %r5353, 18;
	mov.b64 	%rd7331, {%r5357, %r5356};
	xor.b64  	%rd7332, %rd7331, %rd7330;
	shf.l.wrap.b32 	%r5358, %r5352, %r5353, 23;
	shf.l.wrap.b32 	%r5359, %r5353, %r5352, 23;
	mov.b64 	%rd7333, {%r5359, %r5358};
	xor.b64  	%rd7334, %rd7332, %rd7333;
	xor.b64  	%rd7335, %rd7294, %rd7270;
	and.b64  	%rd7336, %rd7318, %rd7335;
	xor.b64  	%rd7337, %rd7336, %rd7270;
	add.s64 	%rd7338, %rd7246, %rd7057;
	add.s64 	%rd7339, %rd7338, %rd43;
	add.s64 	%rd7340, %rd7339, %rd7337;
	add.s64 	%rd7341, %rd7340, %rd7334;
	add.s64 	%rd7342, %rd7341, %rd7257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5360,%dummy}, %rd7329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5361}, %rd7329;
	}
	shf.r.wrap.b32 	%r5362, %r5361, %r5360, 28;
	shf.r.wrap.b32 	%r5363, %r5360, %r5361, 28;
	mov.b64 	%rd7343, {%r5363, %r5362};
	shf.l.wrap.b32 	%r5364, %r5360, %r5361, 30;
	shf.l.wrap.b32 	%r5365, %r5361, %r5360, 30;
	mov.b64 	%rd7344, {%r5365, %r5364};
	xor.b64  	%rd7345, %rd7344, %rd7343;
	shf.l.wrap.b32 	%r5366, %r5360, %r5361, 25;
	shf.l.wrap.b32 	%r5367, %r5361, %r5360, 25;
	mov.b64 	%rd7346, {%r5367, %r5366};
	xor.b64  	%rd7347, %rd7345, %rd7346;
	xor.b64  	%rd7348, %rd7329, %rd7281;
	xor.b64  	%rd7349, %rd7329, %rd7305;
	and.b64  	%rd7350, %rd7349, %rd7348;
	xor.b64  	%rd7351, %rd7350, %rd7329;
	add.s64 	%rd7352, %rd7341, %rd7351;
	add.s64 	%rd7353, %rd7352, %rd7347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5368,%dummy}, %rd7342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5369}, %rd7342;
	}
	shf.r.wrap.b32 	%r5370, %r5369, %r5368, 14;
	shf.r.wrap.b32 	%r5371, %r5368, %r5369, 14;
	mov.b64 	%rd7354, {%r5371, %r5370};
	shf.r.wrap.b32 	%r5372, %r5369, %r5368, 18;
	shf.r.wrap.b32 	%r5373, %r5368, %r5369, 18;
	mov.b64 	%rd7355, {%r5373, %r5372};
	xor.b64  	%rd7356, %rd7355, %rd7354;
	shf.l.wrap.b32 	%r5374, %r5368, %r5369, 23;
	shf.l.wrap.b32 	%r5375, %r5369, %r5368, 23;
	mov.b64 	%rd7357, {%r5375, %r5374};
	xor.b64  	%rd7358, %rd7356, %rd7357;
	xor.b64  	%rd7359, %rd7318, %rd7294;
	and.b64  	%rd7360, %rd7342, %rd7359;
	xor.b64  	%rd7361, %rd7360, %rd7294;
	add.s64 	%rd7362, %rd7270, %rd7070;
	add.s64 	%rd7363, %rd7362, %rd44;
	add.s64 	%rd7364, %rd7363, %rd7361;
	add.s64 	%rd7365, %rd7364, %rd7358;
	add.s64 	%rd7366, %rd7365, %rd7281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5376,%dummy}, %rd7353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5377}, %rd7353;
	}
	shf.r.wrap.b32 	%r5378, %r5377, %r5376, 28;
	shf.r.wrap.b32 	%r5379, %r5376, %r5377, 28;
	mov.b64 	%rd7367, {%r5379, %r5378};
	shf.l.wrap.b32 	%r5380, %r5376, %r5377, 30;
	shf.l.wrap.b32 	%r5381, %r5377, %r5376, 30;
	mov.b64 	%rd7368, {%r5381, %r5380};
	xor.b64  	%rd7369, %rd7368, %rd7367;
	shf.l.wrap.b32 	%r5382, %r5376, %r5377, 25;
	shf.l.wrap.b32 	%r5383, %r5377, %r5376, 25;
	mov.b64 	%rd7370, {%r5383, %r5382};
	xor.b64  	%rd7371, %rd7369, %rd7370;
	xor.b64  	%rd7372, %rd7353, %rd7305;
	xor.b64  	%rd7373, %rd7353, %rd7329;
	and.b64  	%rd7374, %rd7373, %rd7372;
	xor.b64  	%rd7375, %rd7374, %rd7353;
	add.s64 	%rd7376, %rd7365, %rd7375;
	add.s64 	%rd7377, %rd7376, %rd7371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5384,%dummy}, %rd7366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5385}, %rd7366;
	}
	shf.r.wrap.b32 	%r5386, %r5385, %r5384, 14;
	shf.r.wrap.b32 	%r5387, %r5384, %r5385, 14;
	mov.b64 	%rd7378, {%r5387, %r5386};
	shf.r.wrap.b32 	%r5388, %r5385, %r5384, 18;
	shf.r.wrap.b32 	%r5389, %r5384, %r5385, 18;
	mov.b64 	%rd7379, {%r5389, %r5388};
	xor.b64  	%rd7380, %rd7379, %rd7378;
	shf.l.wrap.b32 	%r5390, %r5384, %r5385, 23;
	shf.l.wrap.b32 	%r5391, %r5385, %r5384, 23;
	mov.b64 	%rd7381, {%r5391, %r5390};
	xor.b64  	%rd7382, %rd7380, %rd7381;
	xor.b64  	%rd7383, %rd7342, %rd7318;
	and.b64  	%rd7384, %rd7366, %rd7383;
	xor.b64  	%rd7385, %rd7384, %rd7318;
	add.s64 	%rd7386, %rd7294, %rd7083;
	add.s64 	%rd7387, %rd7386, %rd45;
	add.s64 	%rd7388, %rd7387, %rd7385;
	add.s64 	%rd7389, %rd7388, %rd7382;
	add.s64 	%rd7390, %rd7389, %rd7305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5392,%dummy}, %rd7377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5393}, %rd7377;
	}
	shf.r.wrap.b32 	%r5394, %r5393, %r5392, 28;
	shf.r.wrap.b32 	%r5395, %r5392, %r5393, 28;
	mov.b64 	%rd7391, {%r5395, %r5394};
	shf.l.wrap.b32 	%r5396, %r5392, %r5393, 30;
	shf.l.wrap.b32 	%r5397, %r5393, %r5392, 30;
	mov.b64 	%rd7392, {%r5397, %r5396};
	xor.b64  	%rd7393, %rd7392, %rd7391;
	shf.l.wrap.b32 	%r5398, %r5392, %r5393, 25;
	shf.l.wrap.b32 	%r5399, %r5393, %r5392, 25;
	mov.b64 	%rd7394, {%r5399, %r5398};
	xor.b64  	%rd7395, %rd7393, %rd7394;
	xor.b64  	%rd7396, %rd7377, %rd7329;
	xor.b64  	%rd7397, %rd7377, %rd7353;
	and.b64  	%rd7398, %rd7397, %rd7396;
	xor.b64  	%rd7399, %rd7398, %rd7377;
	add.s64 	%rd7400, %rd7389, %rd7399;
	add.s64 	%rd7401, %rd7400, %rd7395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5400,%dummy}, %rd7390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5401}, %rd7390;
	}
	shf.r.wrap.b32 	%r5402, %r5401, %r5400, 14;
	shf.r.wrap.b32 	%r5403, %r5400, %r5401, 14;
	mov.b64 	%rd7402, {%r5403, %r5402};
	shf.r.wrap.b32 	%r5404, %r5401, %r5400, 18;
	shf.r.wrap.b32 	%r5405, %r5400, %r5401, 18;
	mov.b64 	%rd7403, {%r5405, %r5404};
	xor.b64  	%rd7404, %rd7403, %rd7402;
	shf.l.wrap.b32 	%r5406, %r5400, %r5401, 23;
	shf.l.wrap.b32 	%r5407, %r5401, %r5400, 23;
	mov.b64 	%rd7405, {%r5407, %r5406};
	xor.b64  	%rd7406, %rd7404, %rd7405;
	xor.b64  	%rd7407, %rd7366, %rd7342;
	and.b64  	%rd7408, %rd7390, %rd7407;
	xor.b64  	%rd7409, %rd7408, %rd7342;
	add.s64 	%rd7410, %rd7318, %rd7096;
	add.s64 	%rd7411, %rd7410, %rd46;
	add.s64 	%rd7412, %rd7411, %rd7409;
	add.s64 	%rd7413, %rd7412, %rd7406;
	add.s64 	%rd7414, %rd7413, %rd7329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5408,%dummy}, %rd7401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5409}, %rd7401;
	}
	shf.r.wrap.b32 	%r5410, %r5409, %r5408, 28;
	shf.r.wrap.b32 	%r5411, %r5408, %r5409, 28;
	mov.b64 	%rd7415, {%r5411, %r5410};
	shf.l.wrap.b32 	%r5412, %r5408, %r5409, 30;
	shf.l.wrap.b32 	%r5413, %r5409, %r5408, 30;
	mov.b64 	%rd7416, {%r5413, %r5412};
	xor.b64  	%rd7417, %rd7416, %rd7415;
	shf.l.wrap.b32 	%r5414, %r5408, %r5409, 25;
	shf.l.wrap.b32 	%r5415, %r5409, %r5408, 25;
	mov.b64 	%rd7418, {%r5415, %r5414};
	xor.b64  	%rd7419, %rd7417, %rd7418;
	xor.b64  	%rd7420, %rd7401, %rd7353;
	xor.b64  	%rd7421, %rd7401, %rd7377;
	and.b64  	%rd7422, %rd7421, %rd7420;
	xor.b64  	%rd7423, %rd7422, %rd7401;
	add.s64 	%rd7424, %rd7413, %rd7423;
	add.s64 	%rd7425, %rd7424, %rd7419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5416,%dummy}, %rd7414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5417}, %rd7414;
	}
	shf.r.wrap.b32 	%r5418, %r5417, %r5416, 14;
	shf.r.wrap.b32 	%r5419, %r5416, %r5417, 14;
	mov.b64 	%rd7426, {%r5419, %r5418};
	shf.r.wrap.b32 	%r5420, %r5417, %r5416, 18;
	shf.r.wrap.b32 	%r5421, %r5416, %r5417, 18;
	mov.b64 	%rd7427, {%r5421, %r5420};
	xor.b64  	%rd7428, %rd7427, %rd7426;
	shf.l.wrap.b32 	%r5422, %r5416, %r5417, 23;
	shf.l.wrap.b32 	%r5423, %r5417, %r5416, 23;
	mov.b64 	%rd7429, {%r5423, %r5422};
	xor.b64  	%rd7430, %rd7428, %rd7429;
	xor.b64  	%rd7431, %rd7390, %rd7366;
	and.b64  	%rd7432, %rd7414, %rd7431;
	xor.b64  	%rd7433, %rd7432, %rd7366;
	add.s64 	%rd7434, %rd7342, %rd7109;
	add.s64 	%rd7435, %rd7434, %rd47;
	add.s64 	%rd7436, %rd7435, %rd7433;
	add.s64 	%rd7437, %rd7436, %rd7430;
	add.s64 	%rd7438, %rd7437, %rd7353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5424,%dummy}, %rd7425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5425}, %rd7425;
	}
	shf.r.wrap.b32 	%r5426, %r5425, %r5424, 28;
	shf.r.wrap.b32 	%r5427, %r5424, %r5425, 28;
	mov.b64 	%rd7439, {%r5427, %r5426};
	shf.l.wrap.b32 	%r5428, %r5424, %r5425, 30;
	shf.l.wrap.b32 	%r5429, %r5425, %r5424, 30;
	mov.b64 	%rd7440, {%r5429, %r5428};
	xor.b64  	%rd7441, %rd7440, %rd7439;
	shf.l.wrap.b32 	%r5430, %r5424, %r5425, 25;
	shf.l.wrap.b32 	%r5431, %r5425, %r5424, 25;
	mov.b64 	%rd7442, {%r5431, %r5430};
	xor.b64  	%rd7443, %rd7441, %rd7442;
	xor.b64  	%rd7444, %rd7425, %rd7377;
	xor.b64  	%rd7445, %rd7425, %rd7401;
	and.b64  	%rd7446, %rd7445, %rd7444;
	xor.b64  	%rd7447, %rd7446, %rd7425;
	add.s64 	%rd7448, %rd7437, %rd7447;
	add.s64 	%rd7449, %rd7448, %rd7443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5432,%dummy}, %rd7438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5433}, %rd7438;
	}
	shf.r.wrap.b32 	%r5434, %r5433, %r5432, 14;
	shf.r.wrap.b32 	%r5435, %r5432, %r5433, 14;
	mov.b64 	%rd7450, {%r5435, %r5434};
	shf.r.wrap.b32 	%r5436, %r5433, %r5432, 18;
	shf.r.wrap.b32 	%r5437, %r5432, %r5433, 18;
	mov.b64 	%rd7451, {%r5437, %r5436};
	xor.b64  	%rd7452, %rd7451, %rd7450;
	shf.l.wrap.b32 	%r5438, %r5432, %r5433, 23;
	shf.l.wrap.b32 	%r5439, %r5433, %r5432, 23;
	mov.b64 	%rd7453, {%r5439, %r5438};
	xor.b64  	%rd7454, %rd7452, %rd7453;
	xor.b64  	%rd7455, %rd7414, %rd7390;
	and.b64  	%rd7456, %rd7438, %rd7455;
	xor.b64  	%rd7457, %rd7456, %rd7390;
	add.s64 	%rd7458, %rd7366, %rd7122;
	add.s64 	%rd7459, %rd7458, %rd48;
	add.s64 	%rd7460, %rd7459, %rd7457;
	add.s64 	%rd7461, %rd7460, %rd7454;
	add.s64 	%rd7462, %rd7461, %rd7377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5440,%dummy}, %rd7449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5441}, %rd7449;
	}
	shf.r.wrap.b32 	%r5442, %r5441, %r5440, 28;
	shf.r.wrap.b32 	%r5443, %r5440, %r5441, 28;
	mov.b64 	%rd7463, {%r5443, %r5442};
	shf.l.wrap.b32 	%r5444, %r5440, %r5441, 30;
	shf.l.wrap.b32 	%r5445, %r5441, %r5440, 30;
	mov.b64 	%rd7464, {%r5445, %r5444};
	xor.b64  	%rd7465, %rd7464, %rd7463;
	shf.l.wrap.b32 	%r5446, %r5440, %r5441, 25;
	shf.l.wrap.b32 	%r5447, %r5441, %r5440, 25;
	mov.b64 	%rd7466, {%r5447, %r5446};
	xor.b64  	%rd7467, %rd7465, %rd7466;
	xor.b64  	%rd7468, %rd7449, %rd7401;
	xor.b64  	%rd7469, %rd7449, %rd7425;
	and.b64  	%rd7470, %rd7469, %rd7468;
	xor.b64  	%rd7471, %rd7470, %rd7449;
	add.s64 	%rd7472, %rd7461, %rd7471;
	add.s64 	%rd7473, %rd7472, %rd7467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5448,%dummy}, %rd7462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5449}, %rd7462;
	}
	shf.r.wrap.b32 	%r5450, %r5449, %r5448, 14;
	shf.r.wrap.b32 	%r5451, %r5448, %r5449, 14;
	mov.b64 	%rd7474, {%r5451, %r5450};
	shf.r.wrap.b32 	%r5452, %r5449, %r5448, 18;
	shf.r.wrap.b32 	%r5453, %r5448, %r5449, 18;
	mov.b64 	%rd7475, {%r5453, %r5452};
	xor.b64  	%rd7476, %rd7475, %rd7474;
	shf.l.wrap.b32 	%r5454, %r5448, %r5449, 23;
	shf.l.wrap.b32 	%r5455, %r5449, %r5448, 23;
	mov.b64 	%rd7477, {%r5455, %r5454};
	xor.b64  	%rd7478, %rd7476, %rd7477;
	xor.b64  	%rd7479, %rd7438, %rd7414;
	and.b64  	%rd7480, %rd7462, %rd7479;
	xor.b64  	%rd7481, %rd7480, %rd7414;
	add.s64 	%rd7482, %rd7390, %rd7135;
	add.s64 	%rd7483, %rd7482, %rd49;
	add.s64 	%rd7484, %rd7483, %rd7481;
	add.s64 	%rd7485, %rd7484, %rd7478;
	add.s64 	%rd7486, %rd7485, %rd7401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5456,%dummy}, %rd7473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5457}, %rd7473;
	}
	shf.r.wrap.b32 	%r5458, %r5457, %r5456, 28;
	shf.r.wrap.b32 	%r5459, %r5456, %r5457, 28;
	mov.b64 	%rd7487, {%r5459, %r5458};
	shf.l.wrap.b32 	%r5460, %r5456, %r5457, 30;
	shf.l.wrap.b32 	%r5461, %r5457, %r5456, 30;
	mov.b64 	%rd7488, {%r5461, %r5460};
	xor.b64  	%rd7489, %rd7488, %rd7487;
	shf.l.wrap.b32 	%r5462, %r5456, %r5457, 25;
	shf.l.wrap.b32 	%r5463, %r5457, %r5456, 25;
	mov.b64 	%rd7490, {%r5463, %r5462};
	xor.b64  	%rd7491, %rd7489, %rd7490;
	xor.b64  	%rd7492, %rd7473, %rd7425;
	xor.b64  	%rd7493, %rd7473, %rd7449;
	and.b64  	%rd7494, %rd7493, %rd7492;
	xor.b64  	%rd7495, %rd7494, %rd7473;
	add.s64 	%rd7496, %rd7485, %rd7495;
	add.s64 	%rd7497, %rd7496, %rd7491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5464,%dummy}, %rd7486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5465}, %rd7486;
	}
	shf.r.wrap.b32 	%r5466, %r5465, %r5464, 14;
	shf.r.wrap.b32 	%r5467, %r5464, %r5465, 14;
	mov.b64 	%rd7498, {%r5467, %r5466};
	shf.r.wrap.b32 	%r5468, %r5465, %r5464, 18;
	shf.r.wrap.b32 	%r5469, %r5464, %r5465, 18;
	mov.b64 	%rd7499, {%r5469, %r5468};
	xor.b64  	%rd7500, %rd7499, %rd7498;
	shf.l.wrap.b32 	%r5470, %r5464, %r5465, 23;
	shf.l.wrap.b32 	%r5471, %r5465, %r5464, 23;
	mov.b64 	%rd7501, {%r5471, %r5470};
	xor.b64  	%rd7502, %rd7500, %rd7501;
	xor.b64  	%rd7503, %rd7462, %rd7438;
	and.b64  	%rd7504, %rd7486, %rd7503;
	xor.b64  	%rd7505, %rd7504, %rd7438;
	add.s64 	%rd7506, %rd7414, %rd7148;
	add.s64 	%rd7507, %rd7506, %rd50;
	add.s64 	%rd7508, %rd7507, %rd7505;
	add.s64 	%rd7509, %rd7508, %rd7502;
	add.s64 	%rd7510, %rd7509, %rd7425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5472,%dummy}, %rd7497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5473}, %rd7497;
	}
	shf.r.wrap.b32 	%r5474, %r5473, %r5472, 28;
	shf.r.wrap.b32 	%r5475, %r5472, %r5473, 28;
	mov.b64 	%rd7511, {%r5475, %r5474};
	shf.l.wrap.b32 	%r5476, %r5472, %r5473, 30;
	shf.l.wrap.b32 	%r5477, %r5473, %r5472, 30;
	mov.b64 	%rd7512, {%r5477, %r5476};
	xor.b64  	%rd7513, %rd7512, %rd7511;
	shf.l.wrap.b32 	%r5478, %r5472, %r5473, 25;
	shf.l.wrap.b32 	%r5479, %r5473, %r5472, 25;
	mov.b64 	%rd7514, {%r5479, %r5478};
	xor.b64  	%rd7515, %rd7513, %rd7514;
	xor.b64  	%rd7516, %rd7497, %rd7449;
	xor.b64  	%rd7517, %rd7497, %rd7473;
	and.b64  	%rd7518, %rd7517, %rd7516;
	xor.b64  	%rd7519, %rd7518, %rd7497;
	add.s64 	%rd7520, %rd7509, %rd7519;
	add.s64 	%rd7521, %rd7520, %rd7515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5480,%dummy}, %rd7510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5481}, %rd7510;
	}
	shf.r.wrap.b32 	%r5482, %r5481, %r5480, 14;
	shf.r.wrap.b32 	%r5483, %r5480, %r5481, 14;
	mov.b64 	%rd7522, {%r5483, %r5482};
	shf.r.wrap.b32 	%r5484, %r5481, %r5480, 18;
	shf.r.wrap.b32 	%r5485, %r5480, %r5481, 18;
	mov.b64 	%rd7523, {%r5485, %r5484};
	xor.b64  	%rd7524, %rd7523, %rd7522;
	shf.l.wrap.b32 	%r5486, %r5480, %r5481, 23;
	shf.l.wrap.b32 	%r5487, %r5481, %r5480, 23;
	mov.b64 	%rd7525, {%r5487, %r5486};
	xor.b64  	%rd7526, %rd7524, %rd7525;
	xor.b64  	%rd7527, %rd7486, %rd7462;
	and.b64  	%rd7528, %rd7510, %rd7527;
	xor.b64  	%rd7529, %rd7528, %rd7462;
	add.s64 	%rd7530, %rd7438, %rd7161;
	add.s64 	%rd7531, %rd7530, %rd51;
	add.s64 	%rd7532, %rd7531, %rd7529;
	add.s64 	%rd7533, %rd7532, %rd7526;
	add.s64 	%rd7534, %rd7533, %rd7449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5488,%dummy}, %rd7521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5489}, %rd7521;
	}
	shf.r.wrap.b32 	%r5490, %r5489, %r5488, 28;
	shf.r.wrap.b32 	%r5491, %r5488, %r5489, 28;
	mov.b64 	%rd7535, {%r5491, %r5490};
	shf.l.wrap.b32 	%r5492, %r5488, %r5489, 30;
	shf.l.wrap.b32 	%r5493, %r5489, %r5488, 30;
	mov.b64 	%rd7536, {%r5493, %r5492};
	xor.b64  	%rd7537, %rd7536, %rd7535;
	shf.l.wrap.b32 	%r5494, %r5488, %r5489, 25;
	shf.l.wrap.b32 	%r5495, %r5489, %r5488, 25;
	mov.b64 	%rd7538, {%r5495, %r5494};
	xor.b64  	%rd7539, %rd7537, %rd7538;
	xor.b64  	%rd7540, %rd7521, %rd7473;
	xor.b64  	%rd7541, %rd7521, %rd7497;
	and.b64  	%rd7542, %rd7541, %rd7540;
	xor.b64  	%rd7543, %rd7542, %rd7521;
	add.s64 	%rd7544, %rd7533, %rd7543;
	add.s64 	%rd7545, %rd7544, %rd7539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5496,%dummy}, %rd7148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5497}, %rd7148;
	}
	shf.r.wrap.b32 	%r5498, %r5497, %r5496, 19;
	shf.r.wrap.b32 	%r5499, %r5496, %r5497, 19;
	mov.b64 	%rd7546, {%r5499, %r5498};
	shf.l.wrap.b32 	%r5500, %r5496, %r5497, 3;
	shf.l.wrap.b32 	%r5501, %r5497, %r5496, 3;
	mov.b64 	%rd7547, {%r5501, %r5500};
	shr.u64 	%rd7548, %rd7148, 6;
	xor.b64  	%rd7549, %rd7546, %rd7548;
	xor.b64  	%rd7550, %rd7549, %rd7547;
	shf.r.wrap.b32 	%r5502, %r5111, %r5110, 1;
	shf.r.wrap.b32 	%r5503, %r5110, %r5111, 1;
	mov.b64 	%rd7551, {%r5503, %r5502};
	shf.r.wrap.b32 	%r5504, %r5111, %r5110, 8;
	shf.r.wrap.b32 	%r5505, %r5110, %r5111, 8;
	mov.b64 	%rd7552, {%r5505, %r5504};
	shr.u64 	%rd7553, %rd6979, 7;
	xor.b64  	%rd7554, %rd7551, %rd7553;
	xor.b64  	%rd7555, %rd7554, %rd7552;
	add.s64 	%rd7556, %rd7083, %rd6966;
	add.s64 	%rd7557, %rd7556, %rd7550;
	add.s64 	%rd7558, %rd7557, %rd7555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5506,%dummy}, %rd7161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5507}, %rd7161;
	}
	shf.r.wrap.b32 	%r5508, %r5507, %r5506, 19;
	shf.r.wrap.b32 	%r5509, %r5506, %r5507, 19;
	mov.b64 	%rd7559, {%r5509, %r5508};
	shf.l.wrap.b32 	%r5510, %r5506, %r5507, 3;
	shf.l.wrap.b32 	%r5511, %r5507, %r5506, 3;
	mov.b64 	%rd7560, {%r5511, %r5510};
	shr.u64 	%rd7561, %rd7161, 6;
	xor.b64  	%rd7562, %rd7559, %rd7561;
	xor.b64  	%rd7563, %rd7562, %rd7560;
	shf.r.wrap.b32 	%r5512, %r5121, %r5120, 1;
	shf.r.wrap.b32 	%r5513, %r5120, %r5121, 1;
	mov.b64 	%rd7564, {%r5513, %r5512};
	shf.r.wrap.b32 	%r5514, %r5121, %r5120, 8;
	shf.r.wrap.b32 	%r5515, %r5120, %r5121, 8;
	mov.b64 	%rd7565, {%r5515, %r5514};
	shr.u64 	%rd7566, %rd6992, 7;
	xor.b64  	%rd7567, %rd7564, %rd7566;
	xor.b64  	%rd7568, %rd7567, %rd7565;
	add.s64 	%rd7569, %rd7096, %rd6979;
	add.s64 	%rd7570, %rd7569, %rd7563;
	add.s64 	%rd7571, %rd7570, %rd7568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5516,%dummy}, %rd7558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5517}, %rd7558;
	}
	shf.r.wrap.b32 	%r5518, %r5517, %r5516, 19;
	shf.r.wrap.b32 	%r5519, %r5516, %r5517, 19;
	mov.b64 	%rd7572, {%r5519, %r5518};
	shf.l.wrap.b32 	%r5520, %r5516, %r5517, 3;
	shf.l.wrap.b32 	%r5521, %r5517, %r5516, 3;
	mov.b64 	%rd7573, {%r5521, %r5520};
	shr.u64 	%rd7574, %rd7558, 6;
	xor.b64  	%rd7575, %rd7572, %rd7574;
	xor.b64  	%rd7576, %rd7575, %rd7573;
	shf.r.wrap.b32 	%r5522, %r5131, %r5130, 1;
	shf.r.wrap.b32 	%r5523, %r5130, %r5131, 1;
	mov.b64 	%rd7577, {%r5523, %r5522};
	shf.r.wrap.b32 	%r5524, %r5131, %r5130, 8;
	shf.r.wrap.b32 	%r5525, %r5130, %r5131, 8;
	mov.b64 	%rd7578, {%r5525, %r5524};
	shr.u64 	%rd7579, %rd7005, 7;
	xor.b64  	%rd7580, %rd7577, %rd7579;
	xor.b64  	%rd7581, %rd7580, %rd7578;
	add.s64 	%rd7582, %rd7109, %rd6992;
	add.s64 	%rd7583, %rd7582, %rd7576;
	add.s64 	%rd7584, %rd7583, %rd7581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5526,%dummy}, %rd7571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5527}, %rd7571;
	}
	shf.r.wrap.b32 	%r5528, %r5527, %r5526, 19;
	shf.r.wrap.b32 	%r5529, %r5526, %r5527, 19;
	mov.b64 	%rd7585, {%r5529, %r5528};
	shf.l.wrap.b32 	%r5530, %r5526, %r5527, 3;
	shf.l.wrap.b32 	%r5531, %r5527, %r5526, 3;
	mov.b64 	%rd7586, {%r5531, %r5530};
	shr.u64 	%rd7587, %rd7571, 6;
	xor.b64  	%rd7588, %rd7585, %rd7587;
	xor.b64  	%rd7589, %rd7588, %rd7586;
	shf.r.wrap.b32 	%r5532, %r5141, %r5140, 1;
	shf.r.wrap.b32 	%r5533, %r5140, %r5141, 1;
	mov.b64 	%rd7590, {%r5533, %r5532};
	shf.r.wrap.b32 	%r5534, %r5141, %r5140, 8;
	shf.r.wrap.b32 	%r5535, %r5140, %r5141, 8;
	mov.b64 	%rd7591, {%r5535, %r5534};
	shr.u64 	%rd7592, %rd7018, 7;
	xor.b64  	%rd7593, %rd7590, %rd7592;
	xor.b64  	%rd7594, %rd7593, %rd7591;
	add.s64 	%rd7595, %rd7122, %rd7005;
	add.s64 	%rd7596, %rd7595, %rd7589;
	add.s64 	%rd7597, %rd7596, %rd7594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5536,%dummy}, %rd7584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5537}, %rd7584;
	}
	shf.r.wrap.b32 	%r5538, %r5537, %r5536, 19;
	shf.r.wrap.b32 	%r5539, %r5536, %r5537, 19;
	mov.b64 	%rd7598, {%r5539, %r5538};
	shf.l.wrap.b32 	%r5540, %r5536, %r5537, 3;
	shf.l.wrap.b32 	%r5541, %r5537, %r5536, 3;
	mov.b64 	%rd7599, {%r5541, %r5540};
	shr.u64 	%rd7600, %rd7584, 6;
	xor.b64  	%rd7601, %rd7598, %rd7600;
	xor.b64  	%rd7602, %rd7601, %rd7599;
	shf.r.wrap.b32 	%r5542, %r5151, %r5150, 1;
	shf.r.wrap.b32 	%r5543, %r5150, %r5151, 1;
	mov.b64 	%rd7603, {%r5543, %r5542};
	shf.r.wrap.b32 	%r5544, %r5151, %r5150, 8;
	shf.r.wrap.b32 	%r5545, %r5150, %r5151, 8;
	mov.b64 	%rd7604, {%r5545, %r5544};
	shr.u64 	%rd7605, %rd7031, 7;
	xor.b64  	%rd7606, %rd7603, %rd7605;
	xor.b64  	%rd7607, %rd7606, %rd7604;
	add.s64 	%rd7608, %rd7135, %rd7018;
	add.s64 	%rd7609, %rd7608, %rd7602;
	add.s64 	%rd7610, %rd7609, %rd7607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5546,%dummy}, %rd7597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5547}, %rd7597;
	}
	shf.r.wrap.b32 	%r5548, %r5547, %r5546, 19;
	shf.r.wrap.b32 	%r5549, %r5546, %r5547, 19;
	mov.b64 	%rd7611, {%r5549, %r5548};
	shf.l.wrap.b32 	%r5550, %r5546, %r5547, 3;
	shf.l.wrap.b32 	%r5551, %r5547, %r5546, 3;
	mov.b64 	%rd7612, {%r5551, %r5550};
	shr.u64 	%rd7613, %rd7597, 6;
	xor.b64  	%rd7614, %rd7611, %rd7613;
	xor.b64  	%rd7615, %rd7614, %rd7612;
	shf.r.wrap.b32 	%r5552, %r5161, %r5160, 1;
	shf.r.wrap.b32 	%r5553, %r5160, %r5161, 1;
	mov.b64 	%rd7616, {%r5553, %r5552};
	shf.r.wrap.b32 	%r5554, %r5161, %r5160, 8;
	shf.r.wrap.b32 	%r5555, %r5160, %r5161, 8;
	mov.b64 	%rd7617, {%r5555, %r5554};
	shr.u64 	%rd7618, %rd7044, 7;
	xor.b64  	%rd7619, %rd7616, %rd7618;
	xor.b64  	%rd7620, %rd7619, %rd7617;
	add.s64 	%rd7621, %rd7148, %rd7031;
	add.s64 	%rd7622, %rd7621, %rd7615;
	add.s64 	%rd7623, %rd7622, %rd7620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5556,%dummy}, %rd7610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5557}, %rd7610;
	}
	shf.r.wrap.b32 	%r5558, %r5557, %r5556, 19;
	shf.r.wrap.b32 	%r5559, %r5556, %r5557, 19;
	mov.b64 	%rd7624, {%r5559, %r5558};
	shf.l.wrap.b32 	%r5560, %r5556, %r5557, 3;
	shf.l.wrap.b32 	%r5561, %r5557, %r5556, 3;
	mov.b64 	%rd7625, {%r5561, %r5560};
	shr.u64 	%rd7626, %rd7610, 6;
	xor.b64  	%rd7627, %rd7624, %rd7626;
	xor.b64  	%rd7628, %rd7627, %rd7625;
	shf.r.wrap.b32 	%r5562, %r5171, %r5170, 1;
	shf.r.wrap.b32 	%r5563, %r5170, %r5171, 1;
	mov.b64 	%rd7629, {%r5563, %r5562};
	shf.r.wrap.b32 	%r5564, %r5171, %r5170, 8;
	shf.r.wrap.b32 	%r5565, %r5170, %r5171, 8;
	mov.b64 	%rd7630, {%r5565, %r5564};
	shr.u64 	%rd7631, %rd7057, 7;
	xor.b64  	%rd7632, %rd7629, %rd7631;
	xor.b64  	%rd7633, %rd7632, %rd7630;
	add.s64 	%rd7634, %rd7161, %rd7044;
	add.s64 	%rd7635, %rd7634, %rd7628;
	add.s64 	%rd7636, %rd7635, %rd7633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5566,%dummy}, %rd7623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5567}, %rd7623;
	}
	shf.r.wrap.b32 	%r5568, %r5567, %r5566, 19;
	shf.r.wrap.b32 	%r5569, %r5566, %r5567, 19;
	mov.b64 	%rd7637, {%r5569, %r5568};
	shf.l.wrap.b32 	%r5570, %r5566, %r5567, 3;
	shf.l.wrap.b32 	%r5571, %r5567, %r5566, 3;
	mov.b64 	%rd7638, {%r5571, %r5570};
	shr.u64 	%rd7639, %rd7623, 6;
	xor.b64  	%rd7640, %rd7637, %rd7639;
	xor.b64  	%rd7641, %rd7640, %rd7638;
	shf.r.wrap.b32 	%r5572, %r5181, %r5180, 1;
	shf.r.wrap.b32 	%r5573, %r5180, %r5181, 1;
	mov.b64 	%rd7642, {%r5573, %r5572};
	shf.r.wrap.b32 	%r5574, %r5181, %r5180, 8;
	shf.r.wrap.b32 	%r5575, %r5180, %r5181, 8;
	mov.b64 	%rd7643, {%r5575, %r5574};
	shr.u64 	%rd7644, %rd7070, 7;
	xor.b64  	%rd7645, %rd7642, %rd7644;
	xor.b64  	%rd7646, %rd7645, %rd7643;
	add.s64 	%rd7647, %rd7558, %rd7057;
	add.s64 	%rd7648, %rd7647, %rd7641;
	add.s64 	%rd7649, %rd7648, %rd7646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5576,%dummy}, %rd7636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5577}, %rd7636;
	}
	shf.r.wrap.b32 	%r5578, %r5577, %r5576, 19;
	shf.r.wrap.b32 	%r5579, %r5576, %r5577, 19;
	mov.b64 	%rd7650, {%r5579, %r5578};
	shf.l.wrap.b32 	%r5580, %r5576, %r5577, 3;
	shf.l.wrap.b32 	%r5581, %r5577, %r5576, 3;
	mov.b64 	%rd7651, {%r5581, %r5580};
	shr.u64 	%rd7652, %rd7636, 6;
	xor.b64  	%rd7653, %rd7650, %rd7652;
	xor.b64  	%rd7654, %rd7653, %rd7651;
	shf.r.wrap.b32 	%r5582, %r5191, %r5190, 1;
	shf.r.wrap.b32 	%r5583, %r5190, %r5191, 1;
	mov.b64 	%rd7655, {%r5583, %r5582};
	shf.r.wrap.b32 	%r5584, %r5191, %r5190, 8;
	shf.r.wrap.b32 	%r5585, %r5190, %r5191, 8;
	mov.b64 	%rd7656, {%r5585, %r5584};
	shr.u64 	%rd7657, %rd7083, 7;
	xor.b64  	%rd7658, %rd7655, %rd7657;
	xor.b64  	%rd7659, %rd7658, %rd7656;
	add.s64 	%rd7660, %rd7571, %rd7070;
	add.s64 	%rd7661, %rd7660, %rd7654;
	add.s64 	%rd7662, %rd7661, %rd7659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5586,%dummy}, %rd7649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5587}, %rd7649;
	}
	shf.r.wrap.b32 	%r5588, %r5587, %r5586, 19;
	shf.r.wrap.b32 	%r5589, %r5586, %r5587, 19;
	mov.b64 	%rd7663, {%r5589, %r5588};
	shf.l.wrap.b32 	%r5590, %r5586, %r5587, 3;
	shf.l.wrap.b32 	%r5591, %r5587, %r5586, 3;
	mov.b64 	%rd7664, {%r5591, %r5590};
	shr.u64 	%rd7665, %rd7649, 6;
	xor.b64  	%rd7666, %rd7663, %rd7665;
	xor.b64  	%rd7667, %rd7666, %rd7664;
	shf.r.wrap.b32 	%r5592, %r5201, %r5200, 1;
	shf.r.wrap.b32 	%r5593, %r5200, %r5201, 1;
	mov.b64 	%rd7668, {%r5593, %r5592};
	shf.r.wrap.b32 	%r5594, %r5201, %r5200, 8;
	shf.r.wrap.b32 	%r5595, %r5200, %r5201, 8;
	mov.b64 	%rd7669, {%r5595, %r5594};
	shr.u64 	%rd7670, %rd7096, 7;
	xor.b64  	%rd7671, %rd7668, %rd7670;
	xor.b64  	%rd7672, %rd7671, %rd7669;
	add.s64 	%rd7673, %rd7584, %rd7083;
	add.s64 	%rd7674, %rd7673, %rd7667;
	add.s64 	%rd7675, %rd7674, %rd7672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5596,%dummy}, %rd7662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5597}, %rd7662;
	}
	shf.r.wrap.b32 	%r5598, %r5597, %r5596, 19;
	shf.r.wrap.b32 	%r5599, %r5596, %r5597, 19;
	mov.b64 	%rd7676, {%r5599, %r5598};
	shf.l.wrap.b32 	%r5600, %r5596, %r5597, 3;
	shf.l.wrap.b32 	%r5601, %r5597, %r5596, 3;
	mov.b64 	%rd7677, {%r5601, %r5600};
	shr.u64 	%rd7678, %rd7662, 6;
	xor.b64  	%rd7679, %rd7676, %rd7678;
	xor.b64  	%rd7680, %rd7679, %rd7677;
	shf.r.wrap.b32 	%r5602, %r5211, %r5210, 1;
	shf.r.wrap.b32 	%r5603, %r5210, %r5211, 1;
	mov.b64 	%rd7681, {%r5603, %r5602};
	shf.r.wrap.b32 	%r5604, %r5211, %r5210, 8;
	shf.r.wrap.b32 	%r5605, %r5210, %r5211, 8;
	mov.b64 	%rd7682, {%r5605, %r5604};
	shr.u64 	%rd7683, %rd7109, 7;
	xor.b64  	%rd7684, %rd7681, %rd7683;
	xor.b64  	%rd7685, %rd7684, %rd7682;
	add.s64 	%rd7686, %rd7597, %rd7096;
	add.s64 	%rd7687, %rd7686, %rd7680;
	add.s64 	%rd7688, %rd7687, %rd7685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5606,%dummy}, %rd7675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5607}, %rd7675;
	}
	shf.r.wrap.b32 	%r5608, %r5607, %r5606, 19;
	shf.r.wrap.b32 	%r5609, %r5606, %r5607, 19;
	mov.b64 	%rd7689, {%r5609, %r5608};
	shf.l.wrap.b32 	%r5610, %r5606, %r5607, 3;
	shf.l.wrap.b32 	%r5611, %r5607, %r5606, 3;
	mov.b64 	%rd7690, {%r5611, %r5610};
	shr.u64 	%rd7691, %rd7675, 6;
	xor.b64  	%rd7692, %rd7689, %rd7691;
	xor.b64  	%rd7693, %rd7692, %rd7690;
	shf.r.wrap.b32 	%r5612, %r5221, %r5220, 1;
	shf.r.wrap.b32 	%r5613, %r5220, %r5221, 1;
	mov.b64 	%rd7694, {%r5613, %r5612};
	shf.r.wrap.b32 	%r5614, %r5221, %r5220, 8;
	shf.r.wrap.b32 	%r5615, %r5220, %r5221, 8;
	mov.b64 	%rd7695, {%r5615, %r5614};
	shr.u64 	%rd7696, %rd7122, 7;
	xor.b64  	%rd7697, %rd7694, %rd7696;
	xor.b64  	%rd7698, %rd7697, %rd7695;
	add.s64 	%rd7699, %rd7610, %rd7109;
	add.s64 	%rd7700, %rd7699, %rd7693;
	add.s64 	%rd7701, %rd7700, %rd7698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5616,%dummy}, %rd7688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5617}, %rd7688;
	}
	shf.r.wrap.b32 	%r5618, %r5617, %r5616, 19;
	shf.r.wrap.b32 	%r5619, %r5616, %r5617, 19;
	mov.b64 	%rd7702, {%r5619, %r5618};
	shf.l.wrap.b32 	%r5620, %r5616, %r5617, 3;
	shf.l.wrap.b32 	%r5621, %r5617, %r5616, 3;
	mov.b64 	%rd7703, {%r5621, %r5620};
	shr.u64 	%rd7704, %rd7688, 6;
	xor.b64  	%rd7705, %rd7702, %rd7704;
	xor.b64  	%rd7706, %rd7705, %rd7703;
	shf.r.wrap.b32 	%r5622, %r5231, %r5230, 1;
	shf.r.wrap.b32 	%r5623, %r5230, %r5231, 1;
	mov.b64 	%rd7707, {%r5623, %r5622};
	shf.r.wrap.b32 	%r5624, %r5231, %r5230, 8;
	shf.r.wrap.b32 	%r5625, %r5230, %r5231, 8;
	mov.b64 	%rd7708, {%r5625, %r5624};
	shr.u64 	%rd7709, %rd7135, 7;
	xor.b64  	%rd7710, %rd7707, %rd7709;
	xor.b64  	%rd7711, %rd7710, %rd7708;
	add.s64 	%rd7712, %rd7623, %rd7122;
	add.s64 	%rd7713, %rd7712, %rd7706;
	add.s64 	%rd7714, %rd7713, %rd7711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5626,%dummy}, %rd7701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5627}, %rd7701;
	}
	shf.r.wrap.b32 	%r5628, %r5627, %r5626, 19;
	shf.r.wrap.b32 	%r5629, %r5626, %r5627, 19;
	mov.b64 	%rd7715, {%r5629, %r5628};
	shf.l.wrap.b32 	%r5630, %r5626, %r5627, 3;
	shf.l.wrap.b32 	%r5631, %r5627, %r5626, 3;
	mov.b64 	%rd7716, {%r5631, %r5630};
	shr.u64 	%rd7717, %rd7701, 6;
	xor.b64  	%rd7718, %rd7715, %rd7717;
	xor.b64  	%rd7719, %rd7718, %rd7716;
	shf.r.wrap.b32 	%r5632, %r5497, %r5496, 1;
	shf.r.wrap.b32 	%r5633, %r5496, %r5497, 1;
	mov.b64 	%rd7720, {%r5633, %r5632};
	shf.r.wrap.b32 	%r5634, %r5497, %r5496, 8;
	shf.r.wrap.b32 	%r5635, %r5496, %r5497, 8;
	mov.b64 	%rd7721, {%r5635, %r5634};
	shr.u64 	%rd7722, %rd7148, 7;
	xor.b64  	%rd7723, %rd7720, %rd7722;
	xor.b64  	%rd7724, %rd7723, %rd7721;
	add.s64 	%rd7725, %rd7636, %rd7135;
	add.s64 	%rd7726, %rd7725, %rd7719;
	add.s64 	%rd7727, %rd7726, %rd7724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5636,%dummy}, %rd7714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5637}, %rd7714;
	}
	shf.r.wrap.b32 	%r5638, %r5637, %r5636, 19;
	shf.r.wrap.b32 	%r5639, %r5636, %r5637, 19;
	mov.b64 	%rd7728, {%r5639, %r5638};
	shf.l.wrap.b32 	%r5640, %r5636, %r5637, 3;
	shf.l.wrap.b32 	%r5641, %r5637, %r5636, 3;
	mov.b64 	%rd7729, {%r5641, %r5640};
	shr.u64 	%rd7730, %rd7714, 6;
	xor.b64  	%rd7731, %rd7728, %rd7730;
	xor.b64  	%rd7732, %rd7731, %rd7729;
	shf.r.wrap.b32 	%r5642, %r5507, %r5506, 1;
	shf.r.wrap.b32 	%r5643, %r5506, %r5507, 1;
	mov.b64 	%rd7733, {%r5643, %r5642};
	shf.r.wrap.b32 	%r5644, %r5507, %r5506, 8;
	shf.r.wrap.b32 	%r5645, %r5506, %r5507, 8;
	mov.b64 	%rd7734, {%r5645, %r5644};
	shr.u64 	%rd7735, %rd7161, 7;
	xor.b64  	%rd7736, %rd7733, %rd7735;
	xor.b64  	%rd7737, %rd7736, %rd7734;
	add.s64 	%rd7738, %rd7649, %rd7148;
	add.s64 	%rd7739, %rd7738, %rd7732;
	add.s64 	%rd7740, %rd7739, %rd7737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5646,%dummy}, %rd7727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5647}, %rd7727;
	}
	shf.r.wrap.b32 	%r5648, %r5647, %r5646, 19;
	shf.r.wrap.b32 	%r5649, %r5646, %r5647, 19;
	mov.b64 	%rd7741, {%r5649, %r5648};
	shf.l.wrap.b32 	%r5650, %r5646, %r5647, 3;
	shf.l.wrap.b32 	%r5651, %r5647, %r5646, 3;
	mov.b64 	%rd7742, {%r5651, %r5650};
	shr.u64 	%rd7743, %rd7727, 6;
	xor.b64  	%rd7744, %rd7741, %rd7743;
	xor.b64  	%rd7745, %rd7744, %rd7742;
	shf.r.wrap.b32 	%r5652, %r5517, %r5516, 1;
	shf.r.wrap.b32 	%r5653, %r5516, %r5517, 1;
	mov.b64 	%rd7746, {%r5653, %r5652};
	shf.r.wrap.b32 	%r5654, %r5517, %r5516, 8;
	shf.r.wrap.b32 	%r5655, %r5516, %r5517, 8;
	mov.b64 	%rd7747, {%r5655, %r5654};
	shr.u64 	%rd7748, %rd7558, 7;
	xor.b64  	%rd7749, %rd7746, %rd7748;
	xor.b64  	%rd7750, %rd7749, %rd7747;
	add.s64 	%rd7751, %rd7662, %rd7161;
	add.s64 	%rd7752, %rd7751, %rd7745;
	add.s64 	%rd7753, %rd7752, %rd7750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5656,%dummy}, %rd7534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd7534;
	}
	shf.r.wrap.b32 	%r5658, %r5657, %r5656, 14;
	shf.r.wrap.b32 	%r5659, %r5656, %r5657, 14;
	mov.b64 	%rd7754, {%r5659, %r5658};
	shf.r.wrap.b32 	%r5660, %r5657, %r5656, 18;
	shf.r.wrap.b32 	%r5661, %r5656, %r5657, 18;
	mov.b64 	%rd7755, {%r5661, %r5660};
	xor.b64  	%rd7756, %rd7755, %rd7754;
	shf.l.wrap.b32 	%r5662, %r5656, %r5657, 23;
	shf.l.wrap.b32 	%r5663, %r5657, %r5656, 23;
	mov.b64 	%rd7757, {%r5663, %r5662};
	xor.b64  	%rd7758, %rd7756, %rd7757;
	xor.b64  	%rd7759, %rd7510, %rd7486;
	and.b64  	%rd7760, %rd7759, %rd7534;
	xor.b64  	%rd7761, %rd7760, %rd7486;
	add.s64 	%rd7762, %rd7761, %rd7462;
	add.s64 	%rd7763, %rd7762, %rd7558;
	add.s64 	%rd7764, %rd7763, %rd52;
	add.s64 	%rd7765, %rd7764, %rd7758;
	add.s64 	%rd7766, %rd7765, %rd7473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5664,%dummy}, %rd7545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5665}, %rd7545;
	}
	shf.r.wrap.b32 	%r5666, %r5665, %r5664, 28;
	shf.r.wrap.b32 	%r5667, %r5664, %r5665, 28;
	mov.b64 	%rd7767, {%r5667, %r5666};
	shf.l.wrap.b32 	%r5668, %r5664, %r5665, 30;
	shf.l.wrap.b32 	%r5669, %r5665, %r5664, 30;
	mov.b64 	%rd7768, {%r5669, %r5668};
	xor.b64  	%rd7769, %rd7768, %rd7767;
	shf.l.wrap.b32 	%r5670, %r5664, %r5665, 25;
	shf.l.wrap.b32 	%r5671, %r5665, %r5664, 25;
	mov.b64 	%rd7770, {%r5671, %r5670};
	xor.b64  	%rd7771, %rd7769, %rd7770;
	xor.b64  	%rd7772, %rd7545, %rd7497;
	xor.b64  	%rd7773, %rd7545, %rd7521;
	and.b64  	%rd7774, %rd7773, %rd7772;
	xor.b64  	%rd7775, %rd7774, %rd7545;
	add.s64 	%rd7776, %rd7765, %rd7775;
	add.s64 	%rd7777, %rd7776, %rd7771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5672,%dummy}, %rd7766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5673}, %rd7766;
	}
	shf.r.wrap.b32 	%r5674, %r5673, %r5672, 14;
	shf.r.wrap.b32 	%r5675, %r5672, %r5673, 14;
	mov.b64 	%rd7778, {%r5675, %r5674};
	shf.r.wrap.b32 	%r5676, %r5673, %r5672, 18;
	shf.r.wrap.b32 	%r5677, %r5672, %r5673, 18;
	mov.b64 	%rd7779, {%r5677, %r5676};
	xor.b64  	%rd7780, %rd7779, %rd7778;
	shf.l.wrap.b32 	%r5678, %r5672, %r5673, 23;
	shf.l.wrap.b32 	%r5679, %r5673, %r5672, 23;
	mov.b64 	%rd7781, {%r5679, %r5678};
	xor.b64  	%rd7782, %rd7780, %rd7781;
	xor.b64  	%rd7783, %rd7534, %rd7510;
	and.b64  	%rd7784, %rd7766, %rd7783;
	xor.b64  	%rd7785, %rd7784, %rd7510;
	add.s64 	%rd7786, %rd7571, %rd7486;
	add.s64 	%rd7787, %rd7786, %rd53;
	add.s64 	%rd7788, %rd7787, %rd7785;
	add.s64 	%rd7789, %rd7788, %rd7782;
	add.s64 	%rd7790, %rd7789, %rd7497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5680,%dummy}, %rd7777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5681}, %rd7777;
	}
	shf.r.wrap.b32 	%r5682, %r5681, %r5680, 28;
	shf.r.wrap.b32 	%r5683, %r5680, %r5681, 28;
	mov.b64 	%rd7791, {%r5683, %r5682};
	shf.l.wrap.b32 	%r5684, %r5680, %r5681, 30;
	shf.l.wrap.b32 	%r5685, %r5681, %r5680, 30;
	mov.b64 	%rd7792, {%r5685, %r5684};
	xor.b64  	%rd7793, %rd7792, %rd7791;
	shf.l.wrap.b32 	%r5686, %r5680, %r5681, 25;
	shf.l.wrap.b32 	%r5687, %r5681, %r5680, 25;
	mov.b64 	%rd7794, {%r5687, %r5686};
	xor.b64  	%rd7795, %rd7793, %rd7794;
	xor.b64  	%rd7796, %rd7777, %rd7521;
	xor.b64  	%rd7797, %rd7777, %rd7545;
	and.b64  	%rd7798, %rd7797, %rd7796;
	xor.b64  	%rd7799, %rd7798, %rd7777;
	add.s64 	%rd7800, %rd7789, %rd7799;
	add.s64 	%rd7801, %rd7800, %rd7795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5688,%dummy}, %rd7790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5689}, %rd7790;
	}
	shf.r.wrap.b32 	%r5690, %r5689, %r5688, 14;
	shf.r.wrap.b32 	%r5691, %r5688, %r5689, 14;
	mov.b64 	%rd7802, {%r5691, %r5690};
	shf.r.wrap.b32 	%r5692, %r5689, %r5688, 18;
	shf.r.wrap.b32 	%r5693, %r5688, %r5689, 18;
	mov.b64 	%rd7803, {%r5693, %r5692};
	xor.b64  	%rd7804, %rd7803, %rd7802;
	shf.l.wrap.b32 	%r5694, %r5688, %r5689, 23;
	shf.l.wrap.b32 	%r5695, %r5689, %r5688, 23;
	mov.b64 	%rd7805, {%r5695, %r5694};
	xor.b64  	%rd7806, %rd7804, %rd7805;
	xor.b64  	%rd7807, %rd7766, %rd7534;
	and.b64  	%rd7808, %rd7790, %rd7807;
	xor.b64  	%rd7809, %rd7808, %rd7534;
	add.s64 	%rd7810, %rd7584, %rd7510;
	add.s64 	%rd7811, %rd7810, %rd54;
	add.s64 	%rd7812, %rd7811, %rd7809;
	add.s64 	%rd7813, %rd7812, %rd7806;
	add.s64 	%rd7814, %rd7813, %rd7521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5696,%dummy}, %rd7801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5697}, %rd7801;
	}
	shf.r.wrap.b32 	%r5698, %r5697, %r5696, 28;
	shf.r.wrap.b32 	%r5699, %r5696, %r5697, 28;
	mov.b64 	%rd7815, {%r5699, %r5698};
	shf.l.wrap.b32 	%r5700, %r5696, %r5697, 30;
	shf.l.wrap.b32 	%r5701, %r5697, %r5696, 30;
	mov.b64 	%rd7816, {%r5701, %r5700};
	xor.b64  	%rd7817, %rd7816, %rd7815;
	shf.l.wrap.b32 	%r5702, %r5696, %r5697, 25;
	shf.l.wrap.b32 	%r5703, %r5697, %r5696, 25;
	mov.b64 	%rd7818, {%r5703, %r5702};
	xor.b64  	%rd7819, %rd7817, %rd7818;
	xor.b64  	%rd7820, %rd7801, %rd7545;
	xor.b64  	%rd7821, %rd7801, %rd7777;
	and.b64  	%rd7822, %rd7821, %rd7820;
	xor.b64  	%rd7823, %rd7822, %rd7801;
	add.s64 	%rd7824, %rd7813, %rd7823;
	add.s64 	%rd7825, %rd7824, %rd7819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5704,%dummy}, %rd7814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5705}, %rd7814;
	}
	shf.r.wrap.b32 	%r5706, %r5705, %r5704, 14;
	shf.r.wrap.b32 	%r5707, %r5704, %r5705, 14;
	mov.b64 	%rd7826, {%r5707, %r5706};
	shf.r.wrap.b32 	%r5708, %r5705, %r5704, 18;
	shf.r.wrap.b32 	%r5709, %r5704, %r5705, 18;
	mov.b64 	%rd7827, {%r5709, %r5708};
	xor.b64  	%rd7828, %rd7827, %rd7826;
	shf.l.wrap.b32 	%r5710, %r5704, %r5705, 23;
	shf.l.wrap.b32 	%r5711, %r5705, %r5704, 23;
	mov.b64 	%rd7829, {%r5711, %r5710};
	xor.b64  	%rd7830, %rd7828, %rd7829;
	xor.b64  	%rd7831, %rd7790, %rd7766;
	and.b64  	%rd7832, %rd7814, %rd7831;
	xor.b64  	%rd7833, %rd7832, %rd7766;
	add.s64 	%rd7834, %rd7597, %rd7534;
	add.s64 	%rd7835, %rd7834, %rd55;
	add.s64 	%rd7836, %rd7835, %rd7833;
	add.s64 	%rd7837, %rd7836, %rd7830;
	add.s64 	%rd7838, %rd7837, %rd7545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5712,%dummy}, %rd7825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5713}, %rd7825;
	}
	shf.r.wrap.b32 	%r5714, %r5713, %r5712, 28;
	shf.r.wrap.b32 	%r5715, %r5712, %r5713, 28;
	mov.b64 	%rd7839, {%r5715, %r5714};
	shf.l.wrap.b32 	%r5716, %r5712, %r5713, 30;
	shf.l.wrap.b32 	%r5717, %r5713, %r5712, 30;
	mov.b64 	%rd7840, {%r5717, %r5716};
	xor.b64  	%rd7841, %rd7840, %rd7839;
	shf.l.wrap.b32 	%r5718, %r5712, %r5713, 25;
	shf.l.wrap.b32 	%r5719, %r5713, %r5712, 25;
	mov.b64 	%rd7842, {%r5719, %r5718};
	xor.b64  	%rd7843, %rd7841, %rd7842;
	xor.b64  	%rd7844, %rd7825, %rd7777;
	xor.b64  	%rd7845, %rd7825, %rd7801;
	and.b64  	%rd7846, %rd7845, %rd7844;
	xor.b64  	%rd7847, %rd7846, %rd7825;
	add.s64 	%rd7848, %rd7837, %rd7847;
	add.s64 	%rd7849, %rd7848, %rd7843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5720,%dummy}, %rd7838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5721}, %rd7838;
	}
	shf.r.wrap.b32 	%r5722, %r5721, %r5720, 14;
	shf.r.wrap.b32 	%r5723, %r5720, %r5721, 14;
	mov.b64 	%rd7850, {%r5723, %r5722};
	shf.r.wrap.b32 	%r5724, %r5721, %r5720, 18;
	shf.r.wrap.b32 	%r5725, %r5720, %r5721, 18;
	mov.b64 	%rd7851, {%r5725, %r5724};
	xor.b64  	%rd7852, %rd7851, %rd7850;
	shf.l.wrap.b32 	%r5726, %r5720, %r5721, 23;
	shf.l.wrap.b32 	%r5727, %r5721, %r5720, 23;
	mov.b64 	%rd7853, {%r5727, %r5726};
	xor.b64  	%rd7854, %rd7852, %rd7853;
	xor.b64  	%rd7855, %rd7814, %rd7790;
	and.b64  	%rd7856, %rd7838, %rd7855;
	xor.b64  	%rd7857, %rd7856, %rd7790;
	add.s64 	%rd7858, %rd7766, %rd7610;
	add.s64 	%rd7859, %rd7858, %rd56;
	add.s64 	%rd7860, %rd7859, %rd7857;
	add.s64 	%rd7861, %rd7860, %rd7854;
	add.s64 	%rd7862, %rd7861, %rd7777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5728,%dummy}, %rd7849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5729}, %rd7849;
	}
	shf.r.wrap.b32 	%r5730, %r5729, %r5728, 28;
	shf.r.wrap.b32 	%r5731, %r5728, %r5729, 28;
	mov.b64 	%rd7863, {%r5731, %r5730};
	shf.l.wrap.b32 	%r5732, %r5728, %r5729, 30;
	shf.l.wrap.b32 	%r5733, %r5729, %r5728, 30;
	mov.b64 	%rd7864, {%r5733, %r5732};
	xor.b64  	%rd7865, %rd7864, %rd7863;
	shf.l.wrap.b32 	%r5734, %r5728, %r5729, 25;
	shf.l.wrap.b32 	%r5735, %r5729, %r5728, 25;
	mov.b64 	%rd7866, {%r5735, %r5734};
	xor.b64  	%rd7867, %rd7865, %rd7866;
	xor.b64  	%rd7868, %rd7849, %rd7801;
	xor.b64  	%rd7869, %rd7849, %rd7825;
	and.b64  	%rd7870, %rd7869, %rd7868;
	xor.b64  	%rd7871, %rd7870, %rd7849;
	add.s64 	%rd7872, %rd7861, %rd7871;
	add.s64 	%rd7873, %rd7872, %rd7867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5736,%dummy}, %rd7862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5737}, %rd7862;
	}
	shf.r.wrap.b32 	%r5738, %r5737, %r5736, 14;
	shf.r.wrap.b32 	%r5739, %r5736, %r5737, 14;
	mov.b64 	%rd7874, {%r5739, %r5738};
	shf.r.wrap.b32 	%r5740, %r5737, %r5736, 18;
	shf.r.wrap.b32 	%r5741, %r5736, %r5737, 18;
	mov.b64 	%rd7875, {%r5741, %r5740};
	xor.b64  	%rd7876, %rd7875, %rd7874;
	shf.l.wrap.b32 	%r5742, %r5736, %r5737, 23;
	shf.l.wrap.b32 	%r5743, %r5737, %r5736, 23;
	mov.b64 	%rd7877, {%r5743, %r5742};
	xor.b64  	%rd7878, %rd7876, %rd7877;
	xor.b64  	%rd7879, %rd7838, %rd7814;
	and.b64  	%rd7880, %rd7862, %rd7879;
	xor.b64  	%rd7881, %rd7880, %rd7814;
	add.s64 	%rd7882, %rd7790, %rd7623;
	add.s64 	%rd7883, %rd7882, %rd57;
	add.s64 	%rd7884, %rd7883, %rd7881;
	add.s64 	%rd7885, %rd7884, %rd7878;
	add.s64 	%rd7886, %rd7885, %rd7801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5744,%dummy}, %rd7873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5745}, %rd7873;
	}
	shf.r.wrap.b32 	%r5746, %r5745, %r5744, 28;
	shf.r.wrap.b32 	%r5747, %r5744, %r5745, 28;
	mov.b64 	%rd7887, {%r5747, %r5746};
	shf.l.wrap.b32 	%r5748, %r5744, %r5745, 30;
	shf.l.wrap.b32 	%r5749, %r5745, %r5744, 30;
	mov.b64 	%rd7888, {%r5749, %r5748};
	xor.b64  	%rd7889, %rd7888, %rd7887;
	shf.l.wrap.b32 	%r5750, %r5744, %r5745, 25;
	shf.l.wrap.b32 	%r5751, %r5745, %r5744, 25;
	mov.b64 	%rd7890, {%r5751, %r5750};
	xor.b64  	%rd7891, %rd7889, %rd7890;
	xor.b64  	%rd7892, %rd7873, %rd7825;
	xor.b64  	%rd7893, %rd7873, %rd7849;
	and.b64  	%rd7894, %rd7893, %rd7892;
	xor.b64  	%rd7895, %rd7894, %rd7873;
	add.s64 	%rd7896, %rd7885, %rd7895;
	add.s64 	%rd7897, %rd7896, %rd7891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5752,%dummy}, %rd7886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5753}, %rd7886;
	}
	shf.r.wrap.b32 	%r5754, %r5753, %r5752, 14;
	shf.r.wrap.b32 	%r5755, %r5752, %r5753, 14;
	mov.b64 	%rd7898, {%r5755, %r5754};
	shf.r.wrap.b32 	%r5756, %r5753, %r5752, 18;
	shf.r.wrap.b32 	%r5757, %r5752, %r5753, 18;
	mov.b64 	%rd7899, {%r5757, %r5756};
	xor.b64  	%rd7900, %rd7899, %rd7898;
	shf.l.wrap.b32 	%r5758, %r5752, %r5753, 23;
	shf.l.wrap.b32 	%r5759, %r5753, %r5752, 23;
	mov.b64 	%rd7901, {%r5759, %r5758};
	xor.b64  	%rd7902, %rd7900, %rd7901;
	xor.b64  	%rd7903, %rd7862, %rd7838;
	and.b64  	%rd7904, %rd7886, %rd7903;
	xor.b64  	%rd7905, %rd7904, %rd7838;
	add.s64 	%rd7906, %rd7814, %rd7636;
	add.s64 	%rd7907, %rd7906, %rd58;
	add.s64 	%rd7908, %rd7907, %rd7905;
	add.s64 	%rd7909, %rd7908, %rd7902;
	add.s64 	%rd7910, %rd7909, %rd7825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5760,%dummy}, %rd7897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5761}, %rd7897;
	}
	shf.r.wrap.b32 	%r5762, %r5761, %r5760, 28;
	shf.r.wrap.b32 	%r5763, %r5760, %r5761, 28;
	mov.b64 	%rd7911, {%r5763, %r5762};
	shf.l.wrap.b32 	%r5764, %r5760, %r5761, 30;
	shf.l.wrap.b32 	%r5765, %r5761, %r5760, 30;
	mov.b64 	%rd7912, {%r5765, %r5764};
	xor.b64  	%rd7913, %rd7912, %rd7911;
	shf.l.wrap.b32 	%r5766, %r5760, %r5761, 25;
	shf.l.wrap.b32 	%r5767, %r5761, %r5760, 25;
	mov.b64 	%rd7914, {%r5767, %r5766};
	xor.b64  	%rd7915, %rd7913, %rd7914;
	xor.b64  	%rd7916, %rd7897, %rd7849;
	xor.b64  	%rd7917, %rd7897, %rd7873;
	and.b64  	%rd7918, %rd7917, %rd7916;
	xor.b64  	%rd7919, %rd7918, %rd7897;
	add.s64 	%rd7920, %rd7909, %rd7919;
	add.s64 	%rd7921, %rd7920, %rd7915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd7910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd7910;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 14;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 14;
	mov.b64 	%rd7922, {%r5771, %r5770};
	shf.r.wrap.b32 	%r5772, %r5769, %r5768, 18;
	shf.r.wrap.b32 	%r5773, %r5768, %r5769, 18;
	mov.b64 	%rd7923, {%r5773, %r5772};
	xor.b64  	%rd7924, %rd7923, %rd7922;
	shf.l.wrap.b32 	%r5774, %r5768, %r5769, 23;
	shf.l.wrap.b32 	%r5775, %r5769, %r5768, 23;
	mov.b64 	%rd7925, {%r5775, %r5774};
	xor.b64  	%rd7926, %rd7924, %rd7925;
	xor.b64  	%rd7927, %rd7886, %rd7862;
	and.b64  	%rd7928, %rd7910, %rd7927;
	xor.b64  	%rd7929, %rd7928, %rd7862;
	add.s64 	%rd7930, %rd7838, %rd7649;
	add.s64 	%rd7931, %rd7930, %rd59;
	add.s64 	%rd7932, %rd7931, %rd7929;
	add.s64 	%rd7933, %rd7932, %rd7926;
	add.s64 	%rd7934, %rd7933, %rd7849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5776,%dummy}, %rd7921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5777}, %rd7921;
	}
	shf.r.wrap.b32 	%r5778, %r5777, %r5776, 28;
	shf.r.wrap.b32 	%r5779, %r5776, %r5777, 28;
	mov.b64 	%rd7935, {%r5779, %r5778};
	shf.l.wrap.b32 	%r5780, %r5776, %r5777, 30;
	shf.l.wrap.b32 	%r5781, %r5777, %r5776, 30;
	mov.b64 	%rd7936, {%r5781, %r5780};
	xor.b64  	%rd7937, %rd7936, %rd7935;
	shf.l.wrap.b32 	%r5782, %r5776, %r5777, 25;
	shf.l.wrap.b32 	%r5783, %r5777, %r5776, 25;
	mov.b64 	%rd7938, {%r5783, %r5782};
	xor.b64  	%rd7939, %rd7937, %rd7938;
	xor.b64  	%rd7940, %rd7921, %rd7873;
	xor.b64  	%rd7941, %rd7921, %rd7897;
	and.b64  	%rd7942, %rd7941, %rd7940;
	xor.b64  	%rd7943, %rd7942, %rd7921;
	add.s64 	%rd7944, %rd7933, %rd7943;
	add.s64 	%rd7945, %rd7944, %rd7939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5784,%dummy}, %rd7934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5785}, %rd7934;
	}
	shf.r.wrap.b32 	%r5786, %r5785, %r5784, 14;
	shf.r.wrap.b32 	%r5787, %r5784, %r5785, 14;
	mov.b64 	%rd7946, {%r5787, %r5786};
	shf.r.wrap.b32 	%r5788, %r5785, %r5784, 18;
	shf.r.wrap.b32 	%r5789, %r5784, %r5785, 18;
	mov.b64 	%rd7947, {%r5789, %r5788};
	xor.b64  	%rd7948, %rd7947, %rd7946;
	shf.l.wrap.b32 	%r5790, %r5784, %r5785, 23;
	shf.l.wrap.b32 	%r5791, %r5785, %r5784, 23;
	mov.b64 	%rd7949, {%r5791, %r5790};
	xor.b64  	%rd7950, %rd7948, %rd7949;
	xor.b64  	%rd7951, %rd7910, %rd7886;
	and.b64  	%rd7952, %rd7934, %rd7951;
	xor.b64  	%rd7953, %rd7952, %rd7886;
	add.s64 	%rd7954, %rd7862, %rd7662;
	add.s64 	%rd7955, %rd7954, %rd60;
	add.s64 	%rd7956, %rd7955, %rd7953;
	add.s64 	%rd7957, %rd7956, %rd7950;
	add.s64 	%rd7958, %rd7957, %rd7873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5792,%dummy}, %rd7945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5793}, %rd7945;
	}
	shf.r.wrap.b32 	%r5794, %r5793, %r5792, 28;
	shf.r.wrap.b32 	%r5795, %r5792, %r5793, 28;
	mov.b64 	%rd7959, {%r5795, %r5794};
	shf.l.wrap.b32 	%r5796, %r5792, %r5793, 30;
	shf.l.wrap.b32 	%r5797, %r5793, %r5792, 30;
	mov.b64 	%rd7960, {%r5797, %r5796};
	xor.b64  	%rd7961, %rd7960, %rd7959;
	shf.l.wrap.b32 	%r5798, %r5792, %r5793, 25;
	shf.l.wrap.b32 	%r5799, %r5793, %r5792, 25;
	mov.b64 	%rd7962, {%r5799, %r5798};
	xor.b64  	%rd7963, %rd7961, %rd7962;
	xor.b64  	%rd7964, %rd7945, %rd7897;
	xor.b64  	%rd7965, %rd7945, %rd7921;
	and.b64  	%rd7966, %rd7965, %rd7964;
	xor.b64  	%rd7967, %rd7966, %rd7945;
	add.s64 	%rd7968, %rd7957, %rd7967;
	add.s64 	%rd7969, %rd7968, %rd7963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5800,%dummy}, %rd7958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5801}, %rd7958;
	}
	shf.r.wrap.b32 	%r5802, %r5801, %r5800, 14;
	shf.r.wrap.b32 	%r5803, %r5800, %r5801, 14;
	mov.b64 	%rd7970, {%r5803, %r5802};
	shf.r.wrap.b32 	%r5804, %r5801, %r5800, 18;
	shf.r.wrap.b32 	%r5805, %r5800, %r5801, 18;
	mov.b64 	%rd7971, {%r5805, %r5804};
	xor.b64  	%rd7972, %rd7971, %rd7970;
	shf.l.wrap.b32 	%r5806, %r5800, %r5801, 23;
	shf.l.wrap.b32 	%r5807, %r5801, %r5800, 23;
	mov.b64 	%rd7973, {%r5807, %r5806};
	xor.b64  	%rd7974, %rd7972, %rd7973;
	xor.b64  	%rd7975, %rd7934, %rd7910;
	and.b64  	%rd7976, %rd7958, %rd7975;
	xor.b64  	%rd7977, %rd7976, %rd7910;
	add.s64 	%rd7978, %rd7886, %rd7675;
	add.s64 	%rd7979, %rd7978, %rd61;
	add.s64 	%rd7980, %rd7979, %rd7977;
	add.s64 	%rd7981, %rd7980, %rd7974;
	add.s64 	%rd7982, %rd7981, %rd7897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5808,%dummy}, %rd7969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5809}, %rd7969;
	}
	shf.r.wrap.b32 	%r5810, %r5809, %r5808, 28;
	shf.r.wrap.b32 	%r5811, %r5808, %r5809, 28;
	mov.b64 	%rd7983, {%r5811, %r5810};
	shf.l.wrap.b32 	%r5812, %r5808, %r5809, 30;
	shf.l.wrap.b32 	%r5813, %r5809, %r5808, 30;
	mov.b64 	%rd7984, {%r5813, %r5812};
	xor.b64  	%rd7985, %rd7984, %rd7983;
	shf.l.wrap.b32 	%r5814, %r5808, %r5809, 25;
	shf.l.wrap.b32 	%r5815, %r5809, %r5808, 25;
	mov.b64 	%rd7986, {%r5815, %r5814};
	xor.b64  	%rd7987, %rd7985, %rd7986;
	xor.b64  	%rd7988, %rd7969, %rd7921;
	xor.b64  	%rd7989, %rd7969, %rd7945;
	and.b64  	%rd7990, %rd7989, %rd7988;
	xor.b64  	%rd7991, %rd7990, %rd7969;
	add.s64 	%rd7992, %rd7981, %rd7991;
	add.s64 	%rd7993, %rd7992, %rd7987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5816,%dummy}, %rd7982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd7982;
	}
	shf.r.wrap.b32 	%r5818, %r5817, %r5816, 14;
	shf.r.wrap.b32 	%r5819, %r5816, %r5817, 14;
	mov.b64 	%rd7994, {%r5819, %r5818};
	shf.r.wrap.b32 	%r5820, %r5817, %r5816, 18;
	shf.r.wrap.b32 	%r5821, %r5816, %r5817, 18;
	mov.b64 	%rd7995, {%r5821, %r5820};
	xor.b64  	%rd7996, %rd7995, %rd7994;
	shf.l.wrap.b32 	%r5822, %r5816, %r5817, 23;
	shf.l.wrap.b32 	%r5823, %r5817, %r5816, 23;
	mov.b64 	%rd7997, {%r5823, %r5822};
	xor.b64  	%rd7998, %rd7996, %rd7997;
	xor.b64  	%rd7999, %rd7958, %rd7934;
	and.b64  	%rd8000, %rd7982, %rd7999;
	xor.b64  	%rd8001, %rd8000, %rd7934;
	add.s64 	%rd8002, %rd7910, %rd7688;
	add.s64 	%rd8003, %rd8002, %rd62;
	add.s64 	%rd8004, %rd8003, %rd8001;
	add.s64 	%rd8005, %rd8004, %rd7998;
	add.s64 	%rd8006, %rd8005, %rd7921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5824,%dummy}, %rd7993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5825}, %rd7993;
	}
	shf.r.wrap.b32 	%r5826, %r5825, %r5824, 28;
	shf.r.wrap.b32 	%r5827, %r5824, %r5825, 28;
	mov.b64 	%rd8007, {%r5827, %r5826};
	shf.l.wrap.b32 	%r5828, %r5824, %r5825, 30;
	shf.l.wrap.b32 	%r5829, %r5825, %r5824, 30;
	mov.b64 	%rd8008, {%r5829, %r5828};
	xor.b64  	%rd8009, %rd8008, %rd8007;
	shf.l.wrap.b32 	%r5830, %r5824, %r5825, 25;
	shf.l.wrap.b32 	%r5831, %r5825, %r5824, 25;
	mov.b64 	%rd8010, {%r5831, %r5830};
	xor.b64  	%rd8011, %rd8009, %rd8010;
	xor.b64  	%rd8012, %rd7993, %rd7945;
	xor.b64  	%rd8013, %rd7993, %rd7969;
	and.b64  	%rd8014, %rd8013, %rd8012;
	xor.b64  	%rd8015, %rd8014, %rd7993;
	add.s64 	%rd8016, %rd8005, %rd8015;
	add.s64 	%rd8017, %rd8016, %rd8011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5832,%dummy}, %rd8006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5833}, %rd8006;
	}
	shf.r.wrap.b32 	%r5834, %r5833, %r5832, 14;
	shf.r.wrap.b32 	%r5835, %r5832, %r5833, 14;
	mov.b64 	%rd8018, {%r5835, %r5834};
	shf.r.wrap.b32 	%r5836, %r5833, %r5832, 18;
	shf.r.wrap.b32 	%r5837, %r5832, %r5833, 18;
	mov.b64 	%rd8019, {%r5837, %r5836};
	xor.b64  	%rd8020, %rd8019, %rd8018;
	shf.l.wrap.b32 	%r5838, %r5832, %r5833, 23;
	shf.l.wrap.b32 	%r5839, %r5833, %r5832, 23;
	mov.b64 	%rd8021, {%r5839, %r5838};
	xor.b64  	%rd8022, %rd8020, %rd8021;
	xor.b64  	%rd8023, %rd7982, %rd7958;
	and.b64  	%rd8024, %rd8006, %rd8023;
	xor.b64  	%rd8025, %rd8024, %rd7958;
	add.s64 	%rd8026, %rd7934, %rd7701;
	add.s64 	%rd8027, %rd8026, %rd63;
	add.s64 	%rd8028, %rd8027, %rd8025;
	add.s64 	%rd8029, %rd8028, %rd8022;
	add.s64 	%rd8030, %rd8029, %rd7945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5840,%dummy}, %rd8017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5841}, %rd8017;
	}
	shf.r.wrap.b32 	%r5842, %r5841, %r5840, 28;
	shf.r.wrap.b32 	%r5843, %r5840, %r5841, 28;
	mov.b64 	%rd8031, {%r5843, %r5842};
	shf.l.wrap.b32 	%r5844, %r5840, %r5841, 30;
	shf.l.wrap.b32 	%r5845, %r5841, %r5840, 30;
	mov.b64 	%rd8032, {%r5845, %r5844};
	xor.b64  	%rd8033, %rd8032, %rd8031;
	shf.l.wrap.b32 	%r5846, %r5840, %r5841, 25;
	shf.l.wrap.b32 	%r5847, %r5841, %r5840, 25;
	mov.b64 	%rd8034, {%r5847, %r5846};
	xor.b64  	%rd8035, %rd8033, %rd8034;
	xor.b64  	%rd8036, %rd8017, %rd7969;
	xor.b64  	%rd8037, %rd8017, %rd7993;
	and.b64  	%rd8038, %rd8037, %rd8036;
	xor.b64  	%rd8039, %rd8038, %rd8017;
	add.s64 	%rd8040, %rd8029, %rd8039;
	add.s64 	%rd8041, %rd8040, %rd8035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5848,%dummy}, %rd8030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5849}, %rd8030;
	}
	shf.r.wrap.b32 	%r5850, %r5849, %r5848, 14;
	shf.r.wrap.b32 	%r5851, %r5848, %r5849, 14;
	mov.b64 	%rd8042, {%r5851, %r5850};
	shf.r.wrap.b32 	%r5852, %r5849, %r5848, 18;
	shf.r.wrap.b32 	%r5853, %r5848, %r5849, 18;
	mov.b64 	%rd8043, {%r5853, %r5852};
	xor.b64  	%rd8044, %rd8043, %rd8042;
	shf.l.wrap.b32 	%r5854, %r5848, %r5849, 23;
	shf.l.wrap.b32 	%r5855, %r5849, %r5848, 23;
	mov.b64 	%rd8045, {%r5855, %r5854};
	xor.b64  	%rd8046, %rd8044, %rd8045;
	xor.b64  	%rd8047, %rd8006, %rd7982;
	and.b64  	%rd8048, %rd8030, %rd8047;
	xor.b64  	%rd8049, %rd8048, %rd7982;
	add.s64 	%rd8050, %rd7958, %rd7714;
	add.s64 	%rd8051, %rd8050, %rd64;
	add.s64 	%rd8052, %rd8051, %rd8049;
	add.s64 	%rd8053, %rd8052, %rd8046;
	add.s64 	%rd8054, %rd8053, %rd7969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5856,%dummy}, %rd8041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5857}, %rd8041;
	}
	shf.r.wrap.b32 	%r5858, %r5857, %r5856, 28;
	shf.r.wrap.b32 	%r5859, %r5856, %r5857, 28;
	mov.b64 	%rd8055, {%r5859, %r5858};
	shf.l.wrap.b32 	%r5860, %r5856, %r5857, 30;
	shf.l.wrap.b32 	%r5861, %r5857, %r5856, 30;
	mov.b64 	%rd8056, {%r5861, %r5860};
	xor.b64  	%rd8057, %rd8056, %rd8055;
	shf.l.wrap.b32 	%r5862, %r5856, %r5857, 25;
	shf.l.wrap.b32 	%r5863, %r5857, %r5856, 25;
	mov.b64 	%rd8058, {%r5863, %r5862};
	xor.b64  	%rd8059, %rd8057, %rd8058;
	xor.b64  	%rd8060, %rd8041, %rd7993;
	xor.b64  	%rd8061, %rd8041, %rd8017;
	and.b64  	%rd8062, %rd8061, %rd8060;
	xor.b64  	%rd8063, %rd8062, %rd8041;
	add.s64 	%rd8064, %rd8053, %rd8063;
	add.s64 	%rd8065, %rd8064, %rd8059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5864,%dummy}, %rd8054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5865}, %rd8054;
	}
	shf.r.wrap.b32 	%r5866, %r5865, %r5864, 14;
	shf.r.wrap.b32 	%r5867, %r5864, %r5865, 14;
	mov.b64 	%rd8066, {%r5867, %r5866};
	shf.r.wrap.b32 	%r5868, %r5865, %r5864, 18;
	shf.r.wrap.b32 	%r5869, %r5864, %r5865, 18;
	mov.b64 	%rd8067, {%r5869, %r5868};
	xor.b64  	%rd8068, %rd8067, %rd8066;
	shf.l.wrap.b32 	%r5870, %r5864, %r5865, 23;
	shf.l.wrap.b32 	%r5871, %r5865, %r5864, 23;
	mov.b64 	%rd8069, {%r5871, %r5870};
	xor.b64  	%rd8070, %rd8068, %rd8069;
	xor.b64  	%rd8071, %rd8030, %rd8006;
	and.b64  	%rd8072, %rd8054, %rd8071;
	xor.b64  	%rd8073, %rd8072, %rd8006;
	add.s64 	%rd8074, %rd7982, %rd7727;
	add.s64 	%rd8075, %rd8074, %rd65;
	add.s64 	%rd8076, %rd8075, %rd8073;
	add.s64 	%rd8077, %rd8076, %rd8070;
	add.s64 	%rd8078, %rd8077, %rd7993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5872,%dummy}, %rd8065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5873}, %rd8065;
	}
	shf.r.wrap.b32 	%r5874, %r5873, %r5872, 28;
	shf.r.wrap.b32 	%r5875, %r5872, %r5873, 28;
	mov.b64 	%rd8079, {%r5875, %r5874};
	shf.l.wrap.b32 	%r5876, %r5872, %r5873, 30;
	shf.l.wrap.b32 	%r5877, %r5873, %r5872, 30;
	mov.b64 	%rd8080, {%r5877, %r5876};
	xor.b64  	%rd8081, %rd8080, %rd8079;
	shf.l.wrap.b32 	%r5878, %r5872, %r5873, 25;
	shf.l.wrap.b32 	%r5879, %r5873, %r5872, 25;
	mov.b64 	%rd8082, {%r5879, %r5878};
	xor.b64  	%rd8083, %rd8081, %rd8082;
	xor.b64  	%rd8084, %rd8065, %rd8017;
	xor.b64  	%rd8085, %rd8065, %rd8041;
	and.b64  	%rd8086, %rd8085, %rd8084;
	xor.b64  	%rd8087, %rd8086, %rd8065;
	add.s64 	%rd8088, %rd8077, %rd8087;
	add.s64 	%rd8089, %rd8088, %rd8083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5880,%dummy}, %rd8078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5881}, %rd8078;
	}
	shf.r.wrap.b32 	%r5882, %r5881, %r5880, 14;
	shf.r.wrap.b32 	%r5883, %r5880, %r5881, 14;
	mov.b64 	%rd8090, {%r5883, %r5882};
	shf.r.wrap.b32 	%r5884, %r5881, %r5880, 18;
	shf.r.wrap.b32 	%r5885, %r5880, %r5881, 18;
	mov.b64 	%rd8091, {%r5885, %r5884};
	xor.b64  	%rd8092, %rd8091, %rd8090;
	shf.l.wrap.b32 	%r5886, %r5880, %r5881, 23;
	shf.l.wrap.b32 	%r5887, %r5881, %r5880, 23;
	mov.b64 	%rd8093, {%r5887, %r5886};
	xor.b64  	%rd8094, %rd8092, %rd8093;
	xor.b64  	%rd8095, %rd8054, %rd8030;
	and.b64  	%rd8096, %rd8078, %rd8095;
	xor.b64  	%rd8097, %rd8096, %rd8030;
	add.s64 	%rd8098, %rd8006, %rd7740;
	add.s64 	%rd8099, %rd8098, %rd66;
	add.s64 	%rd8100, %rd8099, %rd8097;
	add.s64 	%rd8101, %rd8100, %rd8094;
	add.s64 	%rd8102, %rd8101, %rd8017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5888,%dummy}, %rd8089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5889}, %rd8089;
	}
	shf.r.wrap.b32 	%r5890, %r5889, %r5888, 28;
	shf.r.wrap.b32 	%r5891, %r5888, %r5889, 28;
	mov.b64 	%rd8103, {%r5891, %r5890};
	shf.l.wrap.b32 	%r5892, %r5888, %r5889, 30;
	shf.l.wrap.b32 	%r5893, %r5889, %r5888, 30;
	mov.b64 	%rd8104, {%r5893, %r5892};
	xor.b64  	%rd8105, %rd8104, %rd8103;
	shf.l.wrap.b32 	%r5894, %r5888, %r5889, 25;
	shf.l.wrap.b32 	%r5895, %r5889, %r5888, 25;
	mov.b64 	%rd8106, {%r5895, %r5894};
	xor.b64  	%rd8107, %rd8105, %rd8106;
	xor.b64  	%rd8108, %rd8089, %rd8041;
	xor.b64  	%rd8109, %rd8089, %rd8065;
	and.b64  	%rd8110, %rd8109, %rd8108;
	xor.b64  	%rd8111, %rd8110, %rd8089;
	add.s64 	%rd8112, %rd8101, %rd8111;
	add.s64 	%rd8113, %rd8112, %rd8107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5896,%dummy}, %rd8102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5897}, %rd8102;
	}
	shf.r.wrap.b32 	%r5898, %r5897, %r5896, 14;
	shf.r.wrap.b32 	%r5899, %r5896, %r5897, 14;
	mov.b64 	%rd8114, {%r5899, %r5898};
	shf.r.wrap.b32 	%r5900, %r5897, %r5896, 18;
	shf.r.wrap.b32 	%r5901, %r5896, %r5897, 18;
	mov.b64 	%rd8115, {%r5901, %r5900};
	xor.b64  	%rd8116, %rd8115, %rd8114;
	shf.l.wrap.b32 	%r5902, %r5896, %r5897, 23;
	shf.l.wrap.b32 	%r5903, %r5897, %r5896, 23;
	mov.b64 	%rd8117, {%r5903, %r5902};
	xor.b64  	%rd8118, %rd8116, %rd8117;
	xor.b64  	%rd8119, %rd8078, %rd8054;
	and.b64  	%rd8120, %rd8102, %rd8119;
	xor.b64  	%rd8121, %rd8120, %rd8054;
	add.s64 	%rd8122, %rd8030, %rd7753;
	add.s64 	%rd8123, %rd8122, %rd67;
	add.s64 	%rd8124, %rd8123, %rd8121;
	add.s64 	%rd8125, %rd8124, %rd8118;
	add.s64 	%rd8126, %rd8125, %rd8041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5904,%dummy}, %rd8113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5905}, %rd8113;
	}
	shf.r.wrap.b32 	%r5906, %r5905, %r5904, 28;
	shf.r.wrap.b32 	%r5907, %r5904, %r5905, 28;
	mov.b64 	%rd8127, {%r5907, %r5906};
	shf.l.wrap.b32 	%r5908, %r5904, %r5905, 30;
	shf.l.wrap.b32 	%r5909, %r5905, %r5904, 30;
	mov.b64 	%rd8128, {%r5909, %r5908};
	xor.b64  	%rd8129, %rd8128, %rd8127;
	shf.l.wrap.b32 	%r5910, %r5904, %r5905, 25;
	shf.l.wrap.b32 	%r5911, %r5905, %r5904, 25;
	mov.b64 	%rd8130, {%r5911, %r5910};
	xor.b64  	%rd8131, %rd8129, %rd8130;
	xor.b64  	%rd8132, %rd8113, %rd8065;
	xor.b64  	%rd8133, %rd8113, %rd8089;
	and.b64  	%rd8134, %rd8133, %rd8132;
	xor.b64  	%rd8135, %rd8134, %rd8113;
	add.s64 	%rd8136, %rd8125, %rd8135;
	add.s64 	%rd8137, %rd8136, %rd8131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5912,%dummy}, %rd7740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5913}, %rd7740;
	}
	shf.r.wrap.b32 	%r5914, %r5913, %r5912, 19;
	shf.r.wrap.b32 	%r5915, %r5912, %r5913, 19;
	mov.b64 	%rd8138, {%r5915, %r5914};
	shf.l.wrap.b32 	%r5916, %r5912, %r5913, 3;
	shf.l.wrap.b32 	%r5917, %r5913, %r5912, 3;
	mov.b64 	%rd8139, {%r5917, %r5916};
	shr.u64 	%rd8140, %rd7740, 6;
	xor.b64  	%rd8141, %rd8138, %rd8140;
	xor.b64  	%rd8142, %rd8141, %rd8139;
	shf.r.wrap.b32 	%r5918, %r5527, %r5526, 1;
	shf.r.wrap.b32 	%r5919, %r5526, %r5527, 1;
	mov.b64 	%rd8143, {%r5919, %r5918};
	shf.r.wrap.b32 	%r5920, %r5527, %r5526, 8;
	shf.r.wrap.b32 	%r5921, %r5526, %r5527, 8;
	mov.b64 	%rd8144, {%r5921, %r5920};
	shr.u64 	%rd8145, %rd7571, 7;
	xor.b64  	%rd8146, %rd8143, %rd8145;
	xor.b64  	%rd8147, %rd8146, %rd8144;
	add.s64 	%rd8148, %rd7675, %rd7558;
	add.s64 	%rd8149, %rd8148, %rd8142;
	add.s64 	%rd8150, %rd8149, %rd8147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5922,%dummy}, %rd7753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5923}, %rd7753;
	}
	shf.r.wrap.b32 	%r5924, %r5923, %r5922, 19;
	shf.r.wrap.b32 	%r5925, %r5922, %r5923, 19;
	mov.b64 	%rd8151, {%r5925, %r5924};
	shf.l.wrap.b32 	%r5926, %r5922, %r5923, 3;
	shf.l.wrap.b32 	%r5927, %r5923, %r5922, 3;
	mov.b64 	%rd8152, {%r5927, %r5926};
	shr.u64 	%rd8153, %rd7753, 6;
	xor.b64  	%rd8154, %rd8151, %rd8153;
	xor.b64  	%rd8155, %rd8154, %rd8152;
	shf.r.wrap.b32 	%r5928, %r5537, %r5536, 1;
	shf.r.wrap.b32 	%r5929, %r5536, %r5537, 1;
	mov.b64 	%rd8156, {%r5929, %r5928};
	shf.r.wrap.b32 	%r5930, %r5537, %r5536, 8;
	shf.r.wrap.b32 	%r5931, %r5536, %r5537, 8;
	mov.b64 	%rd8157, {%r5931, %r5930};
	shr.u64 	%rd8158, %rd7584, 7;
	xor.b64  	%rd8159, %rd8156, %rd8158;
	xor.b64  	%rd8160, %rd8159, %rd8157;
	add.s64 	%rd8161, %rd7688, %rd7571;
	add.s64 	%rd8162, %rd8161, %rd8155;
	add.s64 	%rd8163, %rd8162, %rd8160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5932,%dummy}, %rd8150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5933}, %rd8150;
	}
	shf.r.wrap.b32 	%r5934, %r5933, %r5932, 19;
	shf.r.wrap.b32 	%r5935, %r5932, %r5933, 19;
	mov.b64 	%rd8164, {%r5935, %r5934};
	shf.l.wrap.b32 	%r5936, %r5932, %r5933, 3;
	shf.l.wrap.b32 	%r5937, %r5933, %r5932, 3;
	mov.b64 	%rd8165, {%r5937, %r5936};
	shr.u64 	%rd8166, %rd8150, 6;
	xor.b64  	%rd8167, %rd8164, %rd8166;
	xor.b64  	%rd8168, %rd8167, %rd8165;
	shf.r.wrap.b32 	%r5938, %r5547, %r5546, 1;
	shf.r.wrap.b32 	%r5939, %r5546, %r5547, 1;
	mov.b64 	%rd8169, {%r5939, %r5938};
	shf.r.wrap.b32 	%r5940, %r5547, %r5546, 8;
	shf.r.wrap.b32 	%r5941, %r5546, %r5547, 8;
	mov.b64 	%rd8170, {%r5941, %r5940};
	shr.u64 	%rd8171, %rd7597, 7;
	xor.b64  	%rd8172, %rd8169, %rd8171;
	xor.b64  	%rd8173, %rd8172, %rd8170;
	add.s64 	%rd8174, %rd7701, %rd7584;
	add.s64 	%rd8175, %rd8174, %rd8168;
	add.s64 	%rd8176, %rd8175, %rd8173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5942,%dummy}, %rd8163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5943}, %rd8163;
	}
	shf.r.wrap.b32 	%r5944, %r5943, %r5942, 19;
	shf.r.wrap.b32 	%r5945, %r5942, %r5943, 19;
	mov.b64 	%rd8177, {%r5945, %r5944};
	shf.l.wrap.b32 	%r5946, %r5942, %r5943, 3;
	shf.l.wrap.b32 	%r5947, %r5943, %r5942, 3;
	mov.b64 	%rd8178, {%r5947, %r5946};
	shr.u64 	%rd8179, %rd8163, 6;
	xor.b64  	%rd8180, %rd8177, %rd8179;
	xor.b64  	%rd8181, %rd8180, %rd8178;
	shf.r.wrap.b32 	%r5948, %r5557, %r5556, 1;
	shf.r.wrap.b32 	%r5949, %r5556, %r5557, 1;
	mov.b64 	%rd8182, {%r5949, %r5948};
	shf.r.wrap.b32 	%r5950, %r5557, %r5556, 8;
	shf.r.wrap.b32 	%r5951, %r5556, %r5557, 8;
	mov.b64 	%rd8183, {%r5951, %r5950};
	shr.u64 	%rd8184, %rd7610, 7;
	xor.b64  	%rd8185, %rd8182, %rd8184;
	xor.b64  	%rd8186, %rd8185, %rd8183;
	add.s64 	%rd8187, %rd7714, %rd7597;
	add.s64 	%rd8188, %rd8187, %rd8181;
	add.s64 	%rd8189, %rd8188, %rd8186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5952,%dummy}, %rd8176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5953}, %rd8176;
	}
	shf.r.wrap.b32 	%r5954, %r5953, %r5952, 19;
	shf.r.wrap.b32 	%r5955, %r5952, %r5953, 19;
	mov.b64 	%rd8190, {%r5955, %r5954};
	shf.l.wrap.b32 	%r5956, %r5952, %r5953, 3;
	shf.l.wrap.b32 	%r5957, %r5953, %r5952, 3;
	mov.b64 	%rd8191, {%r5957, %r5956};
	shr.u64 	%rd8192, %rd8176, 6;
	xor.b64  	%rd8193, %rd8190, %rd8192;
	xor.b64  	%rd8194, %rd8193, %rd8191;
	shf.r.wrap.b32 	%r5958, %r5567, %r5566, 1;
	shf.r.wrap.b32 	%r5959, %r5566, %r5567, 1;
	mov.b64 	%rd8195, {%r5959, %r5958};
	shf.r.wrap.b32 	%r5960, %r5567, %r5566, 8;
	shf.r.wrap.b32 	%r5961, %r5566, %r5567, 8;
	mov.b64 	%rd8196, {%r5961, %r5960};
	shr.u64 	%rd8197, %rd7623, 7;
	xor.b64  	%rd8198, %rd8195, %rd8197;
	xor.b64  	%rd8199, %rd8198, %rd8196;
	add.s64 	%rd8200, %rd7727, %rd7610;
	add.s64 	%rd8201, %rd8200, %rd8194;
	add.s64 	%rd8202, %rd8201, %rd8199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5962,%dummy}, %rd8189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5963}, %rd8189;
	}
	shf.r.wrap.b32 	%r5964, %r5963, %r5962, 19;
	shf.r.wrap.b32 	%r5965, %r5962, %r5963, 19;
	mov.b64 	%rd8203, {%r5965, %r5964};
	shf.l.wrap.b32 	%r5966, %r5962, %r5963, 3;
	shf.l.wrap.b32 	%r5967, %r5963, %r5962, 3;
	mov.b64 	%rd8204, {%r5967, %r5966};
	shr.u64 	%rd8205, %rd8189, 6;
	xor.b64  	%rd8206, %rd8203, %rd8205;
	xor.b64  	%rd8207, %rd8206, %rd8204;
	shf.r.wrap.b32 	%r5968, %r5577, %r5576, 1;
	shf.r.wrap.b32 	%r5969, %r5576, %r5577, 1;
	mov.b64 	%rd8208, {%r5969, %r5968};
	shf.r.wrap.b32 	%r5970, %r5577, %r5576, 8;
	shf.r.wrap.b32 	%r5971, %r5576, %r5577, 8;
	mov.b64 	%rd8209, {%r5971, %r5970};
	shr.u64 	%rd8210, %rd7636, 7;
	xor.b64  	%rd8211, %rd8208, %rd8210;
	xor.b64  	%rd8212, %rd8211, %rd8209;
	add.s64 	%rd8213, %rd7740, %rd7623;
	add.s64 	%rd8214, %rd8213, %rd8207;
	add.s64 	%rd8215, %rd8214, %rd8212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5972,%dummy}, %rd8202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5973}, %rd8202;
	}
	shf.r.wrap.b32 	%r5974, %r5973, %r5972, 19;
	shf.r.wrap.b32 	%r5975, %r5972, %r5973, 19;
	mov.b64 	%rd8216, {%r5975, %r5974};
	shf.l.wrap.b32 	%r5976, %r5972, %r5973, 3;
	shf.l.wrap.b32 	%r5977, %r5973, %r5972, 3;
	mov.b64 	%rd8217, {%r5977, %r5976};
	shr.u64 	%rd8218, %rd8202, 6;
	xor.b64  	%rd8219, %rd8216, %rd8218;
	xor.b64  	%rd8220, %rd8219, %rd8217;
	shf.r.wrap.b32 	%r5978, %r5587, %r5586, 1;
	shf.r.wrap.b32 	%r5979, %r5586, %r5587, 1;
	mov.b64 	%rd8221, {%r5979, %r5978};
	shf.r.wrap.b32 	%r5980, %r5587, %r5586, 8;
	shf.r.wrap.b32 	%r5981, %r5586, %r5587, 8;
	mov.b64 	%rd8222, {%r5981, %r5980};
	shr.u64 	%rd8223, %rd7649, 7;
	xor.b64  	%rd8224, %rd8221, %rd8223;
	xor.b64  	%rd8225, %rd8224, %rd8222;
	add.s64 	%rd8226, %rd7753, %rd7636;
	add.s64 	%rd8227, %rd8226, %rd8220;
	add.s64 	%rd8228, %rd8227, %rd8225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5982,%dummy}, %rd8215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5983}, %rd8215;
	}
	shf.r.wrap.b32 	%r5984, %r5983, %r5982, 19;
	shf.r.wrap.b32 	%r5985, %r5982, %r5983, 19;
	mov.b64 	%rd8229, {%r5985, %r5984};
	shf.l.wrap.b32 	%r5986, %r5982, %r5983, 3;
	shf.l.wrap.b32 	%r5987, %r5983, %r5982, 3;
	mov.b64 	%rd8230, {%r5987, %r5986};
	shr.u64 	%rd8231, %rd8215, 6;
	xor.b64  	%rd8232, %rd8229, %rd8231;
	xor.b64  	%rd8233, %rd8232, %rd8230;
	shf.r.wrap.b32 	%r5988, %r5597, %r5596, 1;
	shf.r.wrap.b32 	%r5989, %r5596, %r5597, 1;
	mov.b64 	%rd8234, {%r5989, %r5988};
	shf.r.wrap.b32 	%r5990, %r5597, %r5596, 8;
	shf.r.wrap.b32 	%r5991, %r5596, %r5597, 8;
	mov.b64 	%rd8235, {%r5991, %r5990};
	shr.u64 	%rd8236, %rd7662, 7;
	xor.b64  	%rd8237, %rd8234, %rd8236;
	xor.b64  	%rd8238, %rd8237, %rd8235;
	add.s64 	%rd8239, %rd8150, %rd7649;
	add.s64 	%rd8240, %rd8239, %rd8233;
	add.s64 	%rd8241, %rd8240, %rd8238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5992,%dummy}, %rd8228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5993}, %rd8228;
	}
	shf.r.wrap.b32 	%r5994, %r5993, %r5992, 19;
	shf.r.wrap.b32 	%r5995, %r5992, %r5993, 19;
	mov.b64 	%rd8242, {%r5995, %r5994};
	shf.l.wrap.b32 	%r5996, %r5992, %r5993, 3;
	shf.l.wrap.b32 	%r5997, %r5993, %r5992, 3;
	mov.b64 	%rd8243, {%r5997, %r5996};
	shr.u64 	%rd8244, %rd8228, 6;
	xor.b64  	%rd8245, %rd8242, %rd8244;
	xor.b64  	%rd8246, %rd8245, %rd8243;
	shf.r.wrap.b32 	%r5998, %r5607, %r5606, 1;
	shf.r.wrap.b32 	%r5999, %r5606, %r5607, 1;
	mov.b64 	%rd8247, {%r5999, %r5998};
	shf.r.wrap.b32 	%r6000, %r5607, %r5606, 8;
	shf.r.wrap.b32 	%r6001, %r5606, %r5607, 8;
	mov.b64 	%rd8248, {%r6001, %r6000};
	shr.u64 	%rd8249, %rd7675, 7;
	xor.b64  	%rd8250, %rd8247, %rd8249;
	xor.b64  	%rd8251, %rd8250, %rd8248;
	add.s64 	%rd8252, %rd8163, %rd7662;
	add.s64 	%rd8253, %rd8252, %rd8246;
	add.s64 	%rd8254, %rd8253, %rd8251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd8241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6003}, %rd8241;
	}
	shf.r.wrap.b32 	%r6004, %r6003, %r6002, 19;
	shf.r.wrap.b32 	%r6005, %r6002, %r6003, 19;
	mov.b64 	%rd8255, {%r6005, %r6004};
	shf.l.wrap.b32 	%r6006, %r6002, %r6003, 3;
	shf.l.wrap.b32 	%r6007, %r6003, %r6002, 3;
	mov.b64 	%rd8256, {%r6007, %r6006};
	shr.u64 	%rd8257, %rd8241, 6;
	xor.b64  	%rd8258, %rd8255, %rd8257;
	xor.b64  	%rd8259, %rd8258, %rd8256;
	shf.r.wrap.b32 	%r6008, %r5617, %r5616, 1;
	shf.r.wrap.b32 	%r6009, %r5616, %r5617, 1;
	mov.b64 	%rd8260, {%r6009, %r6008};
	shf.r.wrap.b32 	%r6010, %r5617, %r5616, 8;
	shf.r.wrap.b32 	%r6011, %r5616, %r5617, 8;
	mov.b64 	%rd8261, {%r6011, %r6010};
	shr.u64 	%rd8262, %rd7688, 7;
	xor.b64  	%rd8263, %rd8260, %rd8262;
	xor.b64  	%rd8264, %rd8263, %rd8261;
	add.s64 	%rd8265, %rd8176, %rd7675;
	add.s64 	%rd8266, %rd8265, %rd8259;
	add.s64 	%rd8267, %rd8266, %rd8264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6012,%dummy}, %rd8254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6013}, %rd8254;
	}
	shf.r.wrap.b32 	%r6014, %r6013, %r6012, 19;
	shf.r.wrap.b32 	%r6015, %r6012, %r6013, 19;
	mov.b64 	%rd8268, {%r6015, %r6014};
	shf.l.wrap.b32 	%r6016, %r6012, %r6013, 3;
	shf.l.wrap.b32 	%r6017, %r6013, %r6012, 3;
	mov.b64 	%rd8269, {%r6017, %r6016};
	shr.u64 	%rd8270, %rd8254, 6;
	xor.b64  	%rd8271, %rd8268, %rd8270;
	xor.b64  	%rd8272, %rd8271, %rd8269;
	shf.r.wrap.b32 	%r6018, %r5627, %r5626, 1;
	shf.r.wrap.b32 	%r6019, %r5626, %r5627, 1;
	mov.b64 	%rd8273, {%r6019, %r6018};
	shf.r.wrap.b32 	%r6020, %r5627, %r5626, 8;
	shf.r.wrap.b32 	%r6021, %r5626, %r5627, 8;
	mov.b64 	%rd8274, {%r6021, %r6020};
	shr.u64 	%rd8275, %rd7701, 7;
	xor.b64  	%rd8276, %rd8273, %rd8275;
	xor.b64  	%rd8277, %rd8276, %rd8274;
	add.s64 	%rd8278, %rd8189, %rd7688;
	add.s64 	%rd8279, %rd8278, %rd8272;
	add.s64 	%rd8280, %rd8279, %rd8277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6022,%dummy}, %rd8267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6023}, %rd8267;
	}
	shf.r.wrap.b32 	%r6024, %r6023, %r6022, 19;
	shf.r.wrap.b32 	%r6025, %r6022, %r6023, 19;
	mov.b64 	%rd8281, {%r6025, %r6024};
	shf.l.wrap.b32 	%r6026, %r6022, %r6023, 3;
	shf.l.wrap.b32 	%r6027, %r6023, %r6022, 3;
	mov.b64 	%rd8282, {%r6027, %r6026};
	shr.u64 	%rd8283, %rd8267, 6;
	xor.b64  	%rd8284, %rd8281, %rd8283;
	xor.b64  	%rd8285, %rd8284, %rd8282;
	shf.r.wrap.b32 	%r6028, %r5637, %r5636, 1;
	shf.r.wrap.b32 	%r6029, %r5636, %r5637, 1;
	mov.b64 	%rd8286, {%r6029, %r6028};
	shf.r.wrap.b32 	%r6030, %r5637, %r5636, 8;
	shf.r.wrap.b32 	%r6031, %r5636, %r5637, 8;
	mov.b64 	%rd8287, {%r6031, %r6030};
	shr.u64 	%rd8288, %rd7714, 7;
	xor.b64  	%rd8289, %rd8286, %rd8288;
	xor.b64  	%rd8290, %rd8289, %rd8287;
	add.s64 	%rd8291, %rd8202, %rd7701;
	add.s64 	%rd8292, %rd8291, %rd8285;
	add.s64 	%rd8293, %rd8292, %rd8290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6032,%dummy}, %rd8280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6033}, %rd8280;
	}
	shf.r.wrap.b32 	%r6034, %r6033, %r6032, 19;
	shf.r.wrap.b32 	%r6035, %r6032, %r6033, 19;
	mov.b64 	%rd8294, {%r6035, %r6034};
	shf.l.wrap.b32 	%r6036, %r6032, %r6033, 3;
	shf.l.wrap.b32 	%r6037, %r6033, %r6032, 3;
	mov.b64 	%rd8295, {%r6037, %r6036};
	shr.u64 	%rd8296, %rd8280, 6;
	xor.b64  	%rd8297, %rd8294, %rd8296;
	xor.b64  	%rd8298, %rd8297, %rd8295;
	shf.r.wrap.b32 	%r6038, %r5647, %r5646, 1;
	shf.r.wrap.b32 	%r6039, %r5646, %r5647, 1;
	mov.b64 	%rd8299, {%r6039, %r6038};
	shf.r.wrap.b32 	%r6040, %r5647, %r5646, 8;
	shf.r.wrap.b32 	%r6041, %r5646, %r5647, 8;
	mov.b64 	%rd8300, {%r6041, %r6040};
	shr.u64 	%rd8301, %rd7727, 7;
	xor.b64  	%rd8302, %rd8299, %rd8301;
	xor.b64  	%rd8303, %rd8302, %rd8300;
	add.s64 	%rd8304, %rd8215, %rd7714;
	add.s64 	%rd8305, %rd8304, %rd8298;
	add.s64 	%rd8306, %rd8305, %rd8303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6042,%dummy}, %rd8293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6043}, %rd8293;
	}
	shf.r.wrap.b32 	%r6044, %r6043, %r6042, 19;
	shf.r.wrap.b32 	%r6045, %r6042, %r6043, 19;
	mov.b64 	%rd8307, {%r6045, %r6044};
	shf.l.wrap.b32 	%r6046, %r6042, %r6043, 3;
	shf.l.wrap.b32 	%r6047, %r6043, %r6042, 3;
	mov.b64 	%rd8308, {%r6047, %r6046};
	shr.u64 	%rd8309, %rd8293, 6;
	xor.b64  	%rd8310, %rd8307, %rd8309;
	xor.b64  	%rd8311, %rd8310, %rd8308;
	shf.r.wrap.b32 	%r6048, %r5913, %r5912, 1;
	shf.r.wrap.b32 	%r6049, %r5912, %r5913, 1;
	mov.b64 	%rd8312, {%r6049, %r6048};
	shf.r.wrap.b32 	%r6050, %r5913, %r5912, 8;
	shf.r.wrap.b32 	%r6051, %r5912, %r5913, 8;
	mov.b64 	%rd8313, {%r6051, %r6050};
	shr.u64 	%rd8314, %rd7740, 7;
	xor.b64  	%rd8315, %rd8312, %rd8314;
	xor.b64  	%rd8316, %rd8315, %rd8313;
	add.s64 	%rd8317, %rd8228, %rd7727;
	add.s64 	%rd8318, %rd8317, %rd8311;
	add.s64 	%rd8319, %rd8318, %rd8316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6052,%dummy}, %rd8306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6053}, %rd8306;
	}
	shf.r.wrap.b32 	%r6054, %r6053, %r6052, 19;
	shf.r.wrap.b32 	%r6055, %r6052, %r6053, 19;
	mov.b64 	%rd8320, {%r6055, %r6054};
	shf.l.wrap.b32 	%r6056, %r6052, %r6053, 3;
	shf.l.wrap.b32 	%r6057, %r6053, %r6052, 3;
	mov.b64 	%rd8321, {%r6057, %r6056};
	shr.u64 	%rd8322, %rd8306, 6;
	xor.b64  	%rd8323, %rd8320, %rd8322;
	xor.b64  	%rd8324, %rd8323, %rd8321;
	shf.r.wrap.b32 	%r6058, %r5923, %r5922, 1;
	shf.r.wrap.b32 	%r6059, %r5922, %r5923, 1;
	mov.b64 	%rd8325, {%r6059, %r6058};
	shf.r.wrap.b32 	%r6060, %r5923, %r5922, 8;
	shf.r.wrap.b32 	%r6061, %r5922, %r5923, 8;
	mov.b64 	%rd8326, {%r6061, %r6060};
	shr.u64 	%rd8327, %rd7753, 7;
	xor.b64  	%rd8328, %rd8325, %rd8327;
	xor.b64  	%rd8329, %rd8328, %rd8326;
	add.s64 	%rd8330, %rd8241, %rd7740;
	add.s64 	%rd8331, %rd8330, %rd8324;
	add.s64 	%rd8332, %rd8331, %rd8329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6062,%dummy}, %rd8319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6063}, %rd8319;
	}
	shf.r.wrap.b32 	%r6064, %r6063, %r6062, 19;
	shf.r.wrap.b32 	%r6065, %r6062, %r6063, 19;
	mov.b64 	%rd8333, {%r6065, %r6064};
	shf.l.wrap.b32 	%r6066, %r6062, %r6063, 3;
	shf.l.wrap.b32 	%r6067, %r6063, %r6062, 3;
	mov.b64 	%rd8334, {%r6067, %r6066};
	shr.u64 	%rd8335, %rd8319, 6;
	xor.b64  	%rd8336, %rd8333, %rd8335;
	xor.b64  	%rd8337, %rd8336, %rd8334;
	shf.r.wrap.b32 	%r6068, %r5933, %r5932, 1;
	shf.r.wrap.b32 	%r6069, %r5932, %r5933, 1;
	mov.b64 	%rd8338, {%r6069, %r6068};
	shf.r.wrap.b32 	%r6070, %r5933, %r5932, 8;
	shf.r.wrap.b32 	%r6071, %r5932, %r5933, 8;
	mov.b64 	%rd8339, {%r6071, %r6070};
	shr.u64 	%rd8340, %rd8150, 7;
	xor.b64  	%rd8341, %rd8338, %rd8340;
	xor.b64  	%rd8342, %rd8341, %rd8339;
	add.s64 	%rd8343, %rd8254, %rd7753;
	add.s64 	%rd8344, %rd8343, %rd8337;
	add.s64 	%rd8345, %rd8344, %rd8342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6072,%dummy}, %rd8126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6073}, %rd8126;
	}
	shf.r.wrap.b32 	%r6074, %r6073, %r6072, 14;
	shf.r.wrap.b32 	%r6075, %r6072, %r6073, 14;
	mov.b64 	%rd8346, {%r6075, %r6074};
	shf.r.wrap.b32 	%r6076, %r6073, %r6072, 18;
	shf.r.wrap.b32 	%r6077, %r6072, %r6073, 18;
	mov.b64 	%rd8347, {%r6077, %r6076};
	xor.b64  	%rd8348, %rd8347, %rd8346;
	shf.l.wrap.b32 	%r6078, %r6072, %r6073, 23;
	shf.l.wrap.b32 	%r6079, %r6073, %r6072, 23;
	mov.b64 	%rd8349, {%r6079, %r6078};
	xor.b64  	%rd8350, %rd8348, %rd8349;
	xor.b64  	%rd8351, %rd8102, %rd8078;
	and.b64  	%rd8352, %rd8351, %rd8126;
	xor.b64  	%rd8353, %rd8352, %rd8078;
	add.s64 	%rd8354, %rd8353, %rd8054;
	add.s64 	%rd8355, %rd8354, %rd8150;
	add.s64 	%rd8356, %rd8355, %rd68;
	add.s64 	%rd8357, %rd8356, %rd8350;
	add.s64 	%rd8358, %rd8357, %rd8065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6080,%dummy}, %rd8137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6081}, %rd8137;
	}
	shf.r.wrap.b32 	%r6082, %r6081, %r6080, 28;
	shf.r.wrap.b32 	%r6083, %r6080, %r6081, 28;
	mov.b64 	%rd8359, {%r6083, %r6082};
	shf.l.wrap.b32 	%r6084, %r6080, %r6081, 30;
	shf.l.wrap.b32 	%r6085, %r6081, %r6080, 30;
	mov.b64 	%rd8360, {%r6085, %r6084};
	xor.b64  	%rd8361, %rd8360, %rd8359;
	shf.l.wrap.b32 	%r6086, %r6080, %r6081, 25;
	shf.l.wrap.b32 	%r6087, %r6081, %r6080, 25;
	mov.b64 	%rd8362, {%r6087, %r6086};
	xor.b64  	%rd8363, %rd8361, %rd8362;
	xor.b64  	%rd8364, %rd8137, %rd8089;
	xor.b64  	%rd8365, %rd8137, %rd8113;
	and.b64  	%rd8366, %rd8365, %rd8364;
	xor.b64  	%rd8367, %rd8366, %rd8137;
	add.s64 	%rd8368, %rd8357, %rd8367;
	add.s64 	%rd8369, %rd8368, %rd8363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6088,%dummy}, %rd8358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6089}, %rd8358;
	}
	shf.r.wrap.b32 	%r6090, %r6089, %r6088, 14;
	shf.r.wrap.b32 	%r6091, %r6088, %r6089, 14;
	mov.b64 	%rd8370, {%r6091, %r6090};
	shf.r.wrap.b32 	%r6092, %r6089, %r6088, 18;
	shf.r.wrap.b32 	%r6093, %r6088, %r6089, 18;
	mov.b64 	%rd8371, {%r6093, %r6092};
	xor.b64  	%rd8372, %rd8371, %rd8370;
	shf.l.wrap.b32 	%r6094, %r6088, %r6089, 23;
	shf.l.wrap.b32 	%r6095, %r6089, %r6088, 23;
	mov.b64 	%rd8373, {%r6095, %r6094};
	xor.b64  	%rd8374, %rd8372, %rd8373;
	xor.b64  	%rd8375, %rd8126, %rd8102;
	and.b64  	%rd8376, %rd8358, %rd8375;
	xor.b64  	%rd8377, %rd8376, %rd8102;
	add.s64 	%rd8378, %rd8163, %rd8078;
	add.s64 	%rd8379, %rd8378, %rd69;
	add.s64 	%rd8380, %rd8379, %rd8377;
	add.s64 	%rd8381, %rd8380, %rd8374;
	add.s64 	%rd8382, %rd8381, %rd8089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6096,%dummy}, %rd8369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6097}, %rd8369;
	}
	shf.r.wrap.b32 	%r6098, %r6097, %r6096, 28;
	shf.r.wrap.b32 	%r6099, %r6096, %r6097, 28;
	mov.b64 	%rd8383, {%r6099, %r6098};
	shf.l.wrap.b32 	%r6100, %r6096, %r6097, 30;
	shf.l.wrap.b32 	%r6101, %r6097, %r6096, 30;
	mov.b64 	%rd8384, {%r6101, %r6100};
	xor.b64  	%rd8385, %rd8384, %rd8383;
	shf.l.wrap.b32 	%r6102, %r6096, %r6097, 25;
	shf.l.wrap.b32 	%r6103, %r6097, %r6096, 25;
	mov.b64 	%rd8386, {%r6103, %r6102};
	xor.b64  	%rd8387, %rd8385, %rd8386;
	xor.b64  	%rd8388, %rd8369, %rd8113;
	xor.b64  	%rd8389, %rd8369, %rd8137;
	and.b64  	%rd8390, %rd8389, %rd8388;
	xor.b64  	%rd8391, %rd8390, %rd8369;
	add.s64 	%rd8392, %rd8381, %rd8391;
	add.s64 	%rd8393, %rd8392, %rd8387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6104,%dummy}, %rd8382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6105}, %rd8382;
	}
	shf.r.wrap.b32 	%r6106, %r6105, %r6104, 14;
	shf.r.wrap.b32 	%r6107, %r6104, %r6105, 14;
	mov.b64 	%rd8394, {%r6107, %r6106};
	shf.r.wrap.b32 	%r6108, %r6105, %r6104, 18;
	shf.r.wrap.b32 	%r6109, %r6104, %r6105, 18;
	mov.b64 	%rd8395, {%r6109, %r6108};
	xor.b64  	%rd8396, %rd8395, %rd8394;
	shf.l.wrap.b32 	%r6110, %r6104, %r6105, 23;
	shf.l.wrap.b32 	%r6111, %r6105, %r6104, 23;
	mov.b64 	%rd8397, {%r6111, %r6110};
	xor.b64  	%rd8398, %rd8396, %rd8397;
	xor.b64  	%rd8399, %rd8358, %rd8126;
	and.b64  	%rd8400, %rd8382, %rd8399;
	xor.b64  	%rd8401, %rd8400, %rd8126;
	add.s64 	%rd8402, %rd8176, %rd8102;
	add.s64 	%rd8403, %rd8402, %rd70;
	add.s64 	%rd8404, %rd8403, %rd8401;
	add.s64 	%rd8405, %rd8404, %rd8398;
	add.s64 	%rd8406, %rd8405, %rd8113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6112,%dummy}, %rd8393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6113}, %rd8393;
	}
	shf.r.wrap.b32 	%r6114, %r6113, %r6112, 28;
	shf.r.wrap.b32 	%r6115, %r6112, %r6113, 28;
	mov.b64 	%rd8407, {%r6115, %r6114};
	shf.l.wrap.b32 	%r6116, %r6112, %r6113, 30;
	shf.l.wrap.b32 	%r6117, %r6113, %r6112, 30;
	mov.b64 	%rd8408, {%r6117, %r6116};
	xor.b64  	%rd8409, %rd8408, %rd8407;
	shf.l.wrap.b32 	%r6118, %r6112, %r6113, 25;
	shf.l.wrap.b32 	%r6119, %r6113, %r6112, 25;
	mov.b64 	%rd8410, {%r6119, %r6118};
	xor.b64  	%rd8411, %rd8409, %rd8410;
	xor.b64  	%rd8412, %rd8393, %rd8137;
	xor.b64  	%rd8413, %rd8393, %rd8369;
	and.b64  	%rd8414, %rd8413, %rd8412;
	xor.b64  	%rd8415, %rd8414, %rd8393;
	add.s64 	%rd8416, %rd8405, %rd8415;
	add.s64 	%rd8417, %rd8416, %rd8411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6120,%dummy}, %rd8406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6121}, %rd8406;
	}
	shf.r.wrap.b32 	%r6122, %r6121, %r6120, 14;
	shf.r.wrap.b32 	%r6123, %r6120, %r6121, 14;
	mov.b64 	%rd8418, {%r6123, %r6122};
	shf.r.wrap.b32 	%r6124, %r6121, %r6120, 18;
	shf.r.wrap.b32 	%r6125, %r6120, %r6121, 18;
	mov.b64 	%rd8419, {%r6125, %r6124};
	xor.b64  	%rd8420, %rd8419, %rd8418;
	shf.l.wrap.b32 	%r6126, %r6120, %r6121, 23;
	shf.l.wrap.b32 	%r6127, %r6121, %r6120, 23;
	mov.b64 	%rd8421, {%r6127, %r6126};
	xor.b64  	%rd8422, %rd8420, %rd8421;
	xor.b64  	%rd8423, %rd8382, %rd8358;
	and.b64  	%rd8424, %rd8406, %rd8423;
	xor.b64  	%rd8425, %rd8424, %rd8358;
	add.s64 	%rd8426, %rd8189, %rd8126;
	add.s64 	%rd8427, %rd8426, %rd71;
	add.s64 	%rd8428, %rd8427, %rd8425;
	add.s64 	%rd8429, %rd8428, %rd8422;
	add.s64 	%rd8430, %rd8429, %rd8137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6128,%dummy}, %rd8417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6129}, %rd8417;
	}
	shf.r.wrap.b32 	%r6130, %r6129, %r6128, 28;
	shf.r.wrap.b32 	%r6131, %r6128, %r6129, 28;
	mov.b64 	%rd8431, {%r6131, %r6130};
	shf.l.wrap.b32 	%r6132, %r6128, %r6129, 30;
	shf.l.wrap.b32 	%r6133, %r6129, %r6128, 30;
	mov.b64 	%rd8432, {%r6133, %r6132};
	xor.b64  	%rd8433, %rd8432, %rd8431;
	shf.l.wrap.b32 	%r6134, %r6128, %r6129, 25;
	shf.l.wrap.b32 	%r6135, %r6129, %r6128, 25;
	mov.b64 	%rd8434, {%r6135, %r6134};
	xor.b64  	%rd8435, %rd8433, %rd8434;
	xor.b64  	%rd8436, %rd8417, %rd8369;
	xor.b64  	%rd8437, %rd8417, %rd8393;
	and.b64  	%rd8438, %rd8437, %rd8436;
	xor.b64  	%rd8439, %rd8438, %rd8417;
	add.s64 	%rd8440, %rd8429, %rd8439;
	add.s64 	%rd8441, %rd8440, %rd8435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6136,%dummy}, %rd8430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6137}, %rd8430;
	}
	shf.r.wrap.b32 	%r6138, %r6137, %r6136, 14;
	shf.r.wrap.b32 	%r6139, %r6136, %r6137, 14;
	mov.b64 	%rd8442, {%r6139, %r6138};
	shf.r.wrap.b32 	%r6140, %r6137, %r6136, 18;
	shf.r.wrap.b32 	%r6141, %r6136, %r6137, 18;
	mov.b64 	%rd8443, {%r6141, %r6140};
	xor.b64  	%rd8444, %rd8443, %rd8442;
	shf.l.wrap.b32 	%r6142, %r6136, %r6137, 23;
	shf.l.wrap.b32 	%r6143, %r6137, %r6136, 23;
	mov.b64 	%rd8445, {%r6143, %r6142};
	xor.b64  	%rd8446, %rd8444, %rd8445;
	xor.b64  	%rd8447, %rd8406, %rd8382;
	and.b64  	%rd8448, %rd8430, %rd8447;
	xor.b64  	%rd8449, %rd8448, %rd8382;
	add.s64 	%rd8450, %rd8358, %rd8202;
	add.s64 	%rd8451, %rd8450, %rd72;
	add.s64 	%rd8452, %rd8451, %rd8449;
	add.s64 	%rd8453, %rd8452, %rd8446;
	add.s64 	%rd8454, %rd8453, %rd8369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6144,%dummy}, %rd8441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6145}, %rd8441;
	}
	shf.r.wrap.b32 	%r6146, %r6145, %r6144, 28;
	shf.r.wrap.b32 	%r6147, %r6144, %r6145, 28;
	mov.b64 	%rd8455, {%r6147, %r6146};
	shf.l.wrap.b32 	%r6148, %r6144, %r6145, 30;
	shf.l.wrap.b32 	%r6149, %r6145, %r6144, 30;
	mov.b64 	%rd8456, {%r6149, %r6148};
	xor.b64  	%rd8457, %rd8456, %rd8455;
	shf.l.wrap.b32 	%r6150, %r6144, %r6145, 25;
	shf.l.wrap.b32 	%r6151, %r6145, %r6144, 25;
	mov.b64 	%rd8458, {%r6151, %r6150};
	xor.b64  	%rd8459, %rd8457, %rd8458;
	xor.b64  	%rd8460, %rd8441, %rd8393;
	xor.b64  	%rd8461, %rd8441, %rd8417;
	and.b64  	%rd8462, %rd8461, %rd8460;
	xor.b64  	%rd8463, %rd8462, %rd8441;
	add.s64 	%rd8464, %rd8453, %rd8463;
	add.s64 	%rd8465, %rd8464, %rd8459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6152,%dummy}, %rd8454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6153}, %rd8454;
	}
	shf.r.wrap.b32 	%r6154, %r6153, %r6152, 14;
	shf.r.wrap.b32 	%r6155, %r6152, %r6153, 14;
	mov.b64 	%rd8466, {%r6155, %r6154};
	shf.r.wrap.b32 	%r6156, %r6153, %r6152, 18;
	shf.r.wrap.b32 	%r6157, %r6152, %r6153, 18;
	mov.b64 	%rd8467, {%r6157, %r6156};
	xor.b64  	%rd8468, %rd8467, %rd8466;
	shf.l.wrap.b32 	%r6158, %r6152, %r6153, 23;
	shf.l.wrap.b32 	%r6159, %r6153, %r6152, 23;
	mov.b64 	%rd8469, {%r6159, %r6158};
	xor.b64  	%rd8470, %rd8468, %rd8469;
	xor.b64  	%rd8471, %rd8430, %rd8406;
	and.b64  	%rd8472, %rd8454, %rd8471;
	xor.b64  	%rd8473, %rd8472, %rd8406;
	add.s64 	%rd8474, %rd8382, %rd8215;
	add.s64 	%rd8475, %rd8474, %rd73;
	add.s64 	%rd8476, %rd8475, %rd8473;
	add.s64 	%rd8477, %rd8476, %rd8470;
	add.s64 	%rd8478, %rd8477, %rd8393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6160,%dummy}, %rd8465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6161}, %rd8465;
	}
	shf.r.wrap.b32 	%r6162, %r6161, %r6160, 28;
	shf.r.wrap.b32 	%r6163, %r6160, %r6161, 28;
	mov.b64 	%rd8479, {%r6163, %r6162};
	shf.l.wrap.b32 	%r6164, %r6160, %r6161, 30;
	shf.l.wrap.b32 	%r6165, %r6161, %r6160, 30;
	mov.b64 	%rd8480, {%r6165, %r6164};
	xor.b64  	%rd8481, %rd8480, %rd8479;
	shf.l.wrap.b32 	%r6166, %r6160, %r6161, 25;
	shf.l.wrap.b32 	%r6167, %r6161, %r6160, 25;
	mov.b64 	%rd8482, {%r6167, %r6166};
	xor.b64  	%rd8483, %rd8481, %rd8482;
	xor.b64  	%rd8484, %rd8465, %rd8417;
	xor.b64  	%rd8485, %rd8465, %rd8441;
	and.b64  	%rd8486, %rd8485, %rd8484;
	xor.b64  	%rd8487, %rd8486, %rd8465;
	add.s64 	%rd8488, %rd8477, %rd8487;
	add.s64 	%rd8489, %rd8488, %rd8483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6168,%dummy}, %rd8478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6169}, %rd8478;
	}
	shf.r.wrap.b32 	%r6170, %r6169, %r6168, 14;
	shf.r.wrap.b32 	%r6171, %r6168, %r6169, 14;
	mov.b64 	%rd8490, {%r6171, %r6170};
	shf.r.wrap.b32 	%r6172, %r6169, %r6168, 18;
	shf.r.wrap.b32 	%r6173, %r6168, %r6169, 18;
	mov.b64 	%rd8491, {%r6173, %r6172};
	xor.b64  	%rd8492, %rd8491, %rd8490;
	shf.l.wrap.b32 	%r6174, %r6168, %r6169, 23;
	shf.l.wrap.b32 	%r6175, %r6169, %r6168, 23;
	mov.b64 	%rd8493, {%r6175, %r6174};
	xor.b64  	%rd8494, %rd8492, %rd8493;
	xor.b64  	%rd8495, %rd8454, %rd8430;
	and.b64  	%rd8496, %rd8478, %rd8495;
	xor.b64  	%rd8497, %rd8496, %rd8430;
	add.s64 	%rd8498, %rd8406, %rd8228;
	add.s64 	%rd8499, %rd8498, %rd74;
	add.s64 	%rd8500, %rd8499, %rd8497;
	add.s64 	%rd8501, %rd8500, %rd8494;
	add.s64 	%rd8502, %rd8501, %rd8417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6176,%dummy}, %rd8489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6177}, %rd8489;
	}
	shf.r.wrap.b32 	%r6178, %r6177, %r6176, 28;
	shf.r.wrap.b32 	%r6179, %r6176, %r6177, 28;
	mov.b64 	%rd8503, {%r6179, %r6178};
	shf.l.wrap.b32 	%r6180, %r6176, %r6177, 30;
	shf.l.wrap.b32 	%r6181, %r6177, %r6176, 30;
	mov.b64 	%rd8504, {%r6181, %r6180};
	xor.b64  	%rd8505, %rd8504, %rd8503;
	shf.l.wrap.b32 	%r6182, %r6176, %r6177, 25;
	shf.l.wrap.b32 	%r6183, %r6177, %r6176, 25;
	mov.b64 	%rd8506, {%r6183, %r6182};
	xor.b64  	%rd8507, %rd8505, %rd8506;
	xor.b64  	%rd8508, %rd8489, %rd8441;
	xor.b64  	%rd8509, %rd8489, %rd8465;
	and.b64  	%rd8510, %rd8509, %rd8508;
	xor.b64  	%rd8511, %rd8510, %rd8489;
	add.s64 	%rd8512, %rd8501, %rd8511;
	add.s64 	%rd8513, %rd8512, %rd8507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6184,%dummy}, %rd8502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6185}, %rd8502;
	}
	shf.r.wrap.b32 	%r6186, %r6185, %r6184, 14;
	shf.r.wrap.b32 	%r6187, %r6184, %r6185, 14;
	mov.b64 	%rd8514, {%r6187, %r6186};
	shf.r.wrap.b32 	%r6188, %r6185, %r6184, 18;
	shf.r.wrap.b32 	%r6189, %r6184, %r6185, 18;
	mov.b64 	%rd8515, {%r6189, %r6188};
	xor.b64  	%rd8516, %rd8515, %rd8514;
	shf.l.wrap.b32 	%r6190, %r6184, %r6185, 23;
	shf.l.wrap.b32 	%r6191, %r6185, %r6184, 23;
	mov.b64 	%rd8517, {%r6191, %r6190};
	xor.b64  	%rd8518, %rd8516, %rd8517;
	xor.b64  	%rd8519, %rd8478, %rd8454;
	and.b64  	%rd8520, %rd8502, %rd8519;
	xor.b64  	%rd8521, %rd8520, %rd8454;
	add.s64 	%rd8522, %rd8430, %rd8241;
	add.s64 	%rd8523, %rd8522, %rd75;
	add.s64 	%rd8524, %rd8523, %rd8521;
	add.s64 	%rd8525, %rd8524, %rd8518;
	add.s64 	%rd8526, %rd8525, %rd8441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6192,%dummy}, %rd8513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6193}, %rd8513;
	}
	shf.r.wrap.b32 	%r6194, %r6193, %r6192, 28;
	shf.r.wrap.b32 	%r6195, %r6192, %r6193, 28;
	mov.b64 	%rd8527, {%r6195, %r6194};
	shf.l.wrap.b32 	%r6196, %r6192, %r6193, 30;
	shf.l.wrap.b32 	%r6197, %r6193, %r6192, 30;
	mov.b64 	%rd8528, {%r6197, %r6196};
	xor.b64  	%rd8529, %rd8528, %rd8527;
	shf.l.wrap.b32 	%r6198, %r6192, %r6193, 25;
	shf.l.wrap.b32 	%r6199, %r6193, %r6192, 25;
	mov.b64 	%rd8530, {%r6199, %r6198};
	xor.b64  	%rd8531, %rd8529, %rd8530;
	xor.b64  	%rd8532, %rd8513, %rd8465;
	xor.b64  	%rd8533, %rd8513, %rd8489;
	and.b64  	%rd8534, %rd8533, %rd8532;
	xor.b64  	%rd8535, %rd8534, %rd8513;
	add.s64 	%rd8536, %rd8525, %rd8535;
	add.s64 	%rd8537, %rd8536, %rd8531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6200,%dummy}, %rd8526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6201}, %rd8526;
	}
	shf.r.wrap.b32 	%r6202, %r6201, %r6200, 14;
	shf.r.wrap.b32 	%r6203, %r6200, %r6201, 14;
	mov.b64 	%rd8538, {%r6203, %r6202};
	shf.r.wrap.b32 	%r6204, %r6201, %r6200, 18;
	shf.r.wrap.b32 	%r6205, %r6200, %r6201, 18;
	mov.b64 	%rd8539, {%r6205, %r6204};
	xor.b64  	%rd8540, %rd8539, %rd8538;
	shf.l.wrap.b32 	%r6206, %r6200, %r6201, 23;
	shf.l.wrap.b32 	%r6207, %r6201, %r6200, 23;
	mov.b64 	%rd8541, {%r6207, %r6206};
	xor.b64  	%rd8542, %rd8540, %rd8541;
	xor.b64  	%rd8543, %rd8502, %rd8478;
	and.b64  	%rd8544, %rd8526, %rd8543;
	xor.b64  	%rd8545, %rd8544, %rd8478;
	add.s64 	%rd8546, %rd8454, %rd8254;
	add.s64 	%rd8547, %rd8546, %rd76;
	add.s64 	%rd8548, %rd8547, %rd8545;
	add.s64 	%rd8549, %rd8548, %rd8542;
	add.s64 	%rd8550, %rd8549, %rd8465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6208,%dummy}, %rd8537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6209}, %rd8537;
	}
	shf.r.wrap.b32 	%r6210, %r6209, %r6208, 28;
	shf.r.wrap.b32 	%r6211, %r6208, %r6209, 28;
	mov.b64 	%rd8551, {%r6211, %r6210};
	shf.l.wrap.b32 	%r6212, %r6208, %r6209, 30;
	shf.l.wrap.b32 	%r6213, %r6209, %r6208, 30;
	mov.b64 	%rd8552, {%r6213, %r6212};
	xor.b64  	%rd8553, %rd8552, %rd8551;
	shf.l.wrap.b32 	%r6214, %r6208, %r6209, 25;
	shf.l.wrap.b32 	%r6215, %r6209, %r6208, 25;
	mov.b64 	%rd8554, {%r6215, %r6214};
	xor.b64  	%rd8555, %rd8553, %rd8554;
	xor.b64  	%rd8556, %rd8537, %rd8489;
	xor.b64  	%rd8557, %rd8537, %rd8513;
	and.b64  	%rd8558, %rd8557, %rd8556;
	xor.b64  	%rd8559, %rd8558, %rd8537;
	add.s64 	%rd8560, %rd8549, %rd8559;
	add.s64 	%rd8561, %rd8560, %rd8555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6216,%dummy}, %rd8550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6217}, %rd8550;
	}
	shf.r.wrap.b32 	%r6218, %r6217, %r6216, 14;
	shf.r.wrap.b32 	%r6219, %r6216, %r6217, 14;
	mov.b64 	%rd8562, {%r6219, %r6218};
	shf.r.wrap.b32 	%r6220, %r6217, %r6216, 18;
	shf.r.wrap.b32 	%r6221, %r6216, %r6217, 18;
	mov.b64 	%rd8563, {%r6221, %r6220};
	xor.b64  	%rd8564, %rd8563, %rd8562;
	shf.l.wrap.b32 	%r6222, %r6216, %r6217, 23;
	shf.l.wrap.b32 	%r6223, %r6217, %r6216, 23;
	mov.b64 	%rd8565, {%r6223, %r6222};
	xor.b64  	%rd8566, %rd8564, %rd8565;
	xor.b64  	%rd8567, %rd8526, %rd8502;
	and.b64  	%rd8568, %rd8550, %rd8567;
	xor.b64  	%rd8569, %rd8568, %rd8502;
	add.s64 	%rd8570, %rd8478, %rd8267;
	add.s64 	%rd8571, %rd8570, %rd77;
	add.s64 	%rd8572, %rd8571, %rd8569;
	add.s64 	%rd8573, %rd8572, %rd8566;
	add.s64 	%rd8574, %rd8573, %rd8489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6224,%dummy}, %rd8561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6225}, %rd8561;
	}
	shf.r.wrap.b32 	%r6226, %r6225, %r6224, 28;
	shf.r.wrap.b32 	%r6227, %r6224, %r6225, 28;
	mov.b64 	%rd8575, {%r6227, %r6226};
	shf.l.wrap.b32 	%r6228, %r6224, %r6225, 30;
	shf.l.wrap.b32 	%r6229, %r6225, %r6224, 30;
	mov.b64 	%rd8576, {%r6229, %r6228};
	xor.b64  	%rd8577, %rd8576, %rd8575;
	shf.l.wrap.b32 	%r6230, %r6224, %r6225, 25;
	shf.l.wrap.b32 	%r6231, %r6225, %r6224, 25;
	mov.b64 	%rd8578, {%r6231, %r6230};
	xor.b64  	%rd8579, %rd8577, %rd8578;
	xor.b64  	%rd8580, %rd8561, %rd8513;
	xor.b64  	%rd8581, %rd8561, %rd8537;
	and.b64  	%rd8582, %rd8581, %rd8580;
	xor.b64  	%rd8583, %rd8582, %rd8561;
	add.s64 	%rd8584, %rd8573, %rd8583;
	add.s64 	%rd8585, %rd8584, %rd8579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6232,%dummy}, %rd8574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6233}, %rd8574;
	}
	shf.r.wrap.b32 	%r6234, %r6233, %r6232, 14;
	shf.r.wrap.b32 	%r6235, %r6232, %r6233, 14;
	mov.b64 	%rd8586, {%r6235, %r6234};
	shf.r.wrap.b32 	%r6236, %r6233, %r6232, 18;
	shf.r.wrap.b32 	%r6237, %r6232, %r6233, 18;
	mov.b64 	%rd8587, {%r6237, %r6236};
	xor.b64  	%rd8588, %rd8587, %rd8586;
	shf.l.wrap.b32 	%r6238, %r6232, %r6233, 23;
	shf.l.wrap.b32 	%r6239, %r6233, %r6232, 23;
	mov.b64 	%rd8589, {%r6239, %r6238};
	xor.b64  	%rd8590, %rd8588, %rd8589;
	xor.b64  	%rd8591, %rd8550, %rd8526;
	and.b64  	%rd8592, %rd8574, %rd8591;
	xor.b64  	%rd8593, %rd8592, %rd8526;
	add.s64 	%rd8594, %rd8502, %rd8280;
	add.s64 	%rd8595, %rd8594, %rd78;
	add.s64 	%rd8596, %rd8595, %rd8593;
	add.s64 	%rd8597, %rd8596, %rd8590;
	add.s64 	%rd8598, %rd8597, %rd8513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6240,%dummy}, %rd8585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6241}, %rd8585;
	}
	shf.r.wrap.b32 	%r6242, %r6241, %r6240, 28;
	shf.r.wrap.b32 	%r6243, %r6240, %r6241, 28;
	mov.b64 	%rd8599, {%r6243, %r6242};
	shf.l.wrap.b32 	%r6244, %r6240, %r6241, 30;
	shf.l.wrap.b32 	%r6245, %r6241, %r6240, 30;
	mov.b64 	%rd8600, {%r6245, %r6244};
	xor.b64  	%rd8601, %rd8600, %rd8599;
	shf.l.wrap.b32 	%r6246, %r6240, %r6241, 25;
	shf.l.wrap.b32 	%r6247, %r6241, %r6240, 25;
	mov.b64 	%rd8602, {%r6247, %r6246};
	xor.b64  	%rd8603, %rd8601, %rd8602;
	xor.b64  	%rd8604, %rd8585, %rd8537;
	xor.b64  	%rd8605, %rd8585, %rd8561;
	and.b64  	%rd8606, %rd8605, %rd8604;
	xor.b64  	%rd8607, %rd8606, %rd8585;
	add.s64 	%rd8608, %rd8597, %rd8607;
	add.s64 	%rd8609, %rd8608, %rd8603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6248,%dummy}, %rd8598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6249}, %rd8598;
	}
	shf.r.wrap.b32 	%r6250, %r6249, %r6248, 14;
	shf.r.wrap.b32 	%r6251, %r6248, %r6249, 14;
	mov.b64 	%rd8610, {%r6251, %r6250};
	shf.r.wrap.b32 	%r6252, %r6249, %r6248, 18;
	shf.r.wrap.b32 	%r6253, %r6248, %r6249, 18;
	mov.b64 	%rd8611, {%r6253, %r6252};
	xor.b64  	%rd8612, %rd8611, %rd8610;
	shf.l.wrap.b32 	%r6254, %r6248, %r6249, 23;
	shf.l.wrap.b32 	%r6255, %r6249, %r6248, 23;
	mov.b64 	%rd8613, {%r6255, %r6254};
	xor.b64  	%rd8614, %rd8612, %rd8613;
	xor.b64  	%rd8615, %rd8574, %rd8550;
	and.b64  	%rd8616, %rd8598, %rd8615;
	xor.b64  	%rd8617, %rd8616, %rd8550;
	add.s64 	%rd8618, %rd8526, %rd8293;
	add.s64 	%rd8619, %rd8618, %rd79;
	add.s64 	%rd8620, %rd8619, %rd8617;
	add.s64 	%rd8621, %rd8620, %rd8614;
	add.s64 	%rd8622, %rd8621, %rd8537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6256,%dummy}, %rd8609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6257}, %rd8609;
	}
	shf.r.wrap.b32 	%r6258, %r6257, %r6256, 28;
	shf.r.wrap.b32 	%r6259, %r6256, %r6257, 28;
	mov.b64 	%rd8623, {%r6259, %r6258};
	shf.l.wrap.b32 	%r6260, %r6256, %r6257, 30;
	shf.l.wrap.b32 	%r6261, %r6257, %r6256, 30;
	mov.b64 	%rd8624, {%r6261, %r6260};
	xor.b64  	%rd8625, %rd8624, %rd8623;
	shf.l.wrap.b32 	%r6262, %r6256, %r6257, 25;
	shf.l.wrap.b32 	%r6263, %r6257, %r6256, 25;
	mov.b64 	%rd8626, {%r6263, %r6262};
	xor.b64  	%rd8627, %rd8625, %rd8626;
	xor.b64  	%rd8628, %rd8609, %rd8561;
	xor.b64  	%rd8629, %rd8609, %rd8585;
	and.b64  	%rd8630, %rd8629, %rd8628;
	xor.b64  	%rd8631, %rd8630, %rd8609;
	add.s64 	%rd8632, %rd8621, %rd8631;
	add.s64 	%rd8633, %rd8632, %rd8627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6264,%dummy}, %rd8622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6265}, %rd8622;
	}
	shf.r.wrap.b32 	%r6266, %r6265, %r6264, 14;
	shf.r.wrap.b32 	%r6267, %r6264, %r6265, 14;
	mov.b64 	%rd8634, {%r6267, %r6266};
	shf.r.wrap.b32 	%r6268, %r6265, %r6264, 18;
	shf.r.wrap.b32 	%r6269, %r6264, %r6265, 18;
	mov.b64 	%rd8635, {%r6269, %r6268};
	xor.b64  	%rd8636, %rd8635, %rd8634;
	shf.l.wrap.b32 	%r6270, %r6264, %r6265, 23;
	shf.l.wrap.b32 	%r6271, %r6265, %r6264, 23;
	mov.b64 	%rd8637, {%r6271, %r6270};
	xor.b64  	%rd8638, %rd8636, %rd8637;
	xor.b64  	%rd8639, %rd8598, %rd8574;
	and.b64  	%rd8640, %rd8622, %rd8639;
	xor.b64  	%rd8641, %rd8640, %rd8574;
	add.s64 	%rd8642, %rd8550, %rd8306;
	add.s64 	%rd8643, %rd8642, %rd80;
	add.s64 	%rd8644, %rd8643, %rd8641;
	add.s64 	%rd8645, %rd8644, %rd8638;
	add.s64 	%rd8646, %rd8645, %rd8561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6272,%dummy}, %rd8633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6273}, %rd8633;
	}
	shf.r.wrap.b32 	%r6274, %r6273, %r6272, 28;
	shf.r.wrap.b32 	%r6275, %r6272, %r6273, 28;
	mov.b64 	%rd8647, {%r6275, %r6274};
	shf.l.wrap.b32 	%r6276, %r6272, %r6273, 30;
	shf.l.wrap.b32 	%r6277, %r6273, %r6272, 30;
	mov.b64 	%rd8648, {%r6277, %r6276};
	xor.b64  	%rd8649, %rd8648, %rd8647;
	shf.l.wrap.b32 	%r6278, %r6272, %r6273, 25;
	shf.l.wrap.b32 	%r6279, %r6273, %r6272, 25;
	mov.b64 	%rd8650, {%r6279, %r6278};
	xor.b64  	%rd8651, %rd8649, %rd8650;
	xor.b64  	%rd8652, %rd8633, %rd8585;
	xor.b64  	%rd8653, %rd8633, %rd8609;
	and.b64  	%rd8654, %rd8653, %rd8652;
	xor.b64  	%rd8655, %rd8654, %rd8633;
	add.s64 	%rd8656, %rd8645, %rd8655;
	add.s64 	%rd8657, %rd8656, %rd8651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6280,%dummy}, %rd8646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6281}, %rd8646;
	}
	shf.r.wrap.b32 	%r6282, %r6281, %r6280, 14;
	shf.r.wrap.b32 	%r6283, %r6280, %r6281, 14;
	mov.b64 	%rd8658, {%r6283, %r6282};
	shf.r.wrap.b32 	%r6284, %r6281, %r6280, 18;
	shf.r.wrap.b32 	%r6285, %r6280, %r6281, 18;
	mov.b64 	%rd8659, {%r6285, %r6284};
	xor.b64  	%rd8660, %rd8659, %rd8658;
	shf.l.wrap.b32 	%r6286, %r6280, %r6281, 23;
	shf.l.wrap.b32 	%r6287, %r6281, %r6280, 23;
	mov.b64 	%rd8661, {%r6287, %r6286};
	xor.b64  	%rd8662, %rd8660, %rd8661;
	xor.b64  	%rd8663, %rd8622, %rd8598;
	and.b64  	%rd8664, %rd8646, %rd8663;
	xor.b64  	%rd8665, %rd8664, %rd8598;
	add.s64 	%rd8666, %rd8574, %rd8319;
	add.s64 	%rd8667, %rd8666, %rd81;
	add.s64 	%rd8668, %rd8667, %rd8665;
	add.s64 	%rd8669, %rd8668, %rd8662;
	add.s64 	%rd8670, %rd8669, %rd8585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6288,%dummy}, %rd8657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6289}, %rd8657;
	}
	shf.r.wrap.b32 	%r6290, %r6289, %r6288, 28;
	shf.r.wrap.b32 	%r6291, %r6288, %r6289, 28;
	mov.b64 	%rd8671, {%r6291, %r6290};
	shf.l.wrap.b32 	%r6292, %r6288, %r6289, 30;
	shf.l.wrap.b32 	%r6293, %r6289, %r6288, 30;
	mov.b64 	%rd8672, {%r6293, %r6292};
	xor.b64  	%rd8673, %rd8672, %rd8671;
	shf.l.wrap.b32 	%r6294, %r6288, %r6289, 25;
	shf.l.wrap.b32 	%r6295, %r6289, %r6288, 25;
	mov.b64 	%rd8674, {%r6295, %r6294};
	xor.b64  	%rd8675, %rd8673, %rd8674;
	xor.b64  	%rd8676, %rd8657, %rd8609;
	xor.b64  	%rd8677, %rd8657, %rd8633;
	and.b64  	%rd8678, %rd8677, %rd8676;
	xor.b64  	%rd8679, %rd8678, %rd8657;
	add.s64 	%rd8680, %rd8669, %rd8679;
	add.s64 	%rd8681, %rd8680, %rd8675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6296,%dummy}, %rd8670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6297}, %rd8670;
	}
	shf.r.wrap.b32 	%r6298, %r6297, %r6296, 14;
	shf.r.wrap.b32 	%r6299, %r6296, %r6297, 14;
	mov.b64 	%rd8682, {%r6299, %r6298};
	shf.r.wrap.b32 	%r6300, %r6297, %r6296, 18;
	shf.r.wrap.b32 	%r6301, %r6296, %r6297, 18;
	mov.b64 	%rd8683, {%r6301, %r6300};
	xor.b64  	%rd8684, %rd8683, %rd8682;
	shf.l.wrap.b32 	%r6302, %r6296, %r6297, 23;
	shf.l.wrap.b32 	%r6303, %r6297, %r6296, 23;
	mov.b64 	%rd8685, {%r6303, %r6302};
	xor.b64  	%rd8686, %rd8684, %rd8685;
	xor.b64  	%rd8687, %rd8646, %rd8622;
	and.b64  	%rd8688, %rd8670, %rd8687;
	xor.b64  	%rd8689, %rd8688, %rd8622;
	add.s64 	%rd8690, %rd8598, %rd8332;
	add.s64 	%rd8691, %rd8690, %rd82;
	add.s64 	%rd8692, %rd8691, %rd8689;
	add.s64 	%rd8693, %rd8692, %rd8686;
	add.s64 	%rd8694, %rd8693, %rd8609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6304,%dummy}, %rd8681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6305}, %rd8681;
	}
	shf.r.wrap.b32 	%r6306, %r6305, %r6304, 28;
	shf.r.wrap.b32 	%r6307, %r6304, %r6305, 28;
	mov.b64 	%rd8695, {%r6307, %r6306};
	shf.l.wrap.b32 	%r6308, %r6304, %r6305, 30;
	shf.l.wrap.b32 	%r6309, %r6305, %r6304, 30;
	mov.b64 	%rd8696, {%r6309, %r6308};
	xor.b64  	%rd8697, %rd8696, %rd8695;
	shf.l.wrap.b32 	%r6310, %r6304, %r6305, 25;
	shf.l.wrap.b32 	%r6311, %r6305, %r6304, 25;
	mov.b64 	%rd8698, {%r6311, %r6310};
	xor.b64  	%rd8699, %rd8697, %rd8698;
	xor.b64  	%rd8700, %rd8681, %rd8633;
	xor.b64  	%rd8701, %rd8681, %rd8657;
	and.b64  	%rd8702, %rd8701, %rd8700;
	xor.b64  	%rd8703, %rd8702, %rd8681;
	add.s64 	%rd8704, %rd8693, %rd8703;
	add.s64 	%rd8705, %rd8704, %rd8699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6312,%dummy}, %rd8694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6313}, %rd8694;
	}
	shf.r.wrap.b32 	%r6314, %r6313, %r6312, 14;
	shf.r.wrap.b32 	%r6315, %r6312, %r6313, 14;
	mov.b64 	%rd8706, {%r6315, %r6314};
	shf.r.wrap.b32 	%r6316, %r6313, %r6312, 18;
	shf.r.wrap.b32 	%r6317, %r6312, %r6313, 18;
	mov.b64 	%rd8707, {%r6317, %r6316};
	xor.b64  	%rd8708, %rd8707, %rd8706;
	shf.l.wrap.b32 	%r6318, %r6312, %r6313, 23;
	shf.l.wrap.b32 	%r6319, %r6313, %r6312, 23;
	mov.b64 	%rd8709, {%r6319, %r6318};
	xor.b64  	%rd8710, %rd8708, %rd8709;
	xor.b64  	%rd8711, %rd8670, %rd8646;
	and.b64  	%rd8712, %rd8694, %rd8711;
	xor.b64  	%rd8713, %rd8712, %rd8646;
	add.s64 	%rd8714, %rd8622, %rd8345;
	add.s64 	%rd8715, %rd8714, %rd83;
	add.s64 	%rd8716, %rd8715, %rd8713;
	add.s64 	%rd8717, %rd8716, %rd8710;
	add.s64 	%rd8718, %rd8717, %rd8633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6320,%dummy}, %rd8705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6321}, %rd8705;
	}
	shf.r.wrap.b32 	%r6322, %r6321, %r6320, 28;
	shf.r.wrap.b32 	%r6323, %r6320, %r6321, 28;
	mov.b64 	%rd8719, {%r6323, %r6322};
	shf.l.wrap.b32 	%r6324, %r6320, %r6321, 30;
	shf.l.wrap.b32 	%r6325, %r6321, %r6320, 30;
	mov.b64 	%rd8720, {%r6325, %r6324};
	xor.b64  	%rd8721, %rd8720, %rd8719;
	shf.l.wrap.b32 	%r6326, %r6320, %r6321, 25;
	shf.l.wrap.b32 	%r6327, %r6321, %r6320, 25;
	mov.b64 	%rd8722, {%r6327, %r6326};
	xor.b64  	%rd8723, %rd8721, %rd8722;
	xor.b64  	%rd8724, %rd8705, %rd8657;
	xor.b64  	%rd8725, %rd8705, %rd8681;
	and.b64  	%rd8726, %rd8725, %rd8724;
	xor.b64  	%rd8727, %rd8726, %rd8705;
	add.s64 	%rd8728, %rd8717, %rd8727;
	add.s64 	%rd8729, %rd8728, %rd8723;
	add.s64 	%rd8741, %rd8741, %rd8729;
	st.local.u64 	[%rd1], %rd8741;
	add.s64 	%rd8740, %rd8740, %rd8705;
	st.local.u64 	[%rd1+8], %rd8740;
	add.s64 	%rd8739, %rd8739, %rd8681;
	st.local.u64 	[%rd1+16], %rd8739;
	add.s64 	%rd8738, %rd8738, %rd8657;
	st.local.u64 	[%rd1+24], %rd8738;
	add.s64 	%rd8737, %rd8737, %rd8718;
	st.local.u64 	[%rd1+32], %rd8737;
	add.s64 	%rd8736, %rd8736, %rd8694;
	st.local.u64 	[%rd1+40], %rd8736;
	add.s64 	%rd8735, %rd8735, %rd8670;
	st.local.u64 	[%rd1+48], %rd8735;
	add.s64 	%rd8734, %rd8734, %rd8646;
	st.local.u64 	[%rd1+56], %rd8734;
	st.local.v2.u32 	[%rd1+64], {%r4249, %r4379};
	st.local.v2.u32 	[%rd1+72], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+80], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+88], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+96], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+104], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+112], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+120], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+128], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+136], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+144], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+152], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+160], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+168], {%r4379, %r4379};
	st.local.v2.u32 	[%rd1+176], {%r4379, %r4379};
	st.local.u32 	[%rd1+184], %r4379;
	st.local.u32 	[%rd3+4], %r4379;
	add.s32 	%r6337, %r6337, 32;
	mov.u32 	%r6335, %r4249;

BB5_2:
	add.s32 	%r177, %r1, -128;
	setp.lt.s32	%p2, %r6336, %r177;
	mul.wide.s32 	%rd333, %r6337, 4;
	add.s64 	%rd334, %rd330, %rd333;
	ld.global.u32 	%r114, [%rd334];
	add.s32 	%r178, %r6337, 1;
	mul.wide.s32 	%rd335, %r178, 4;
	add.s64 	%rd336, %rd330, %rd335;
	ld.global.u32 	%r116, [%rd336];
	add.s32 	%r179, %r6337, 2;
	mul.wide.s32 	%rd337, %r179, 4;
	add.s64 	%rd338, %rd330, %rd337;
	ld.global.u32 	%r118, [%rd338];
	add.s32 	%r180, %r6337, 3;
	mul.wide.s32 	%rd339, %r180, 4;
	add.s64 	%rd340, %rd330, %rd339;
	ld.global.u32 	%r120, [%rd340];
	add.s32 	%r181, %r6337, 4;
	mul.wide.s32 	%rd341, %r181, 4;
	add.s64 	%rd342, %rd330, %rd341;
	ld.global.u32 	%r122, [%rd342];
	add.s32 	%r182, %r6337, 5;
	mul.wide.s32 	%rd343, %r182, 4;
	add.s64 	%rd344, %rd330, %rd343;
	ld.global.u32 	%r124, [%rd344];
	add.s32 	%r183, %r6337, 6;
	mul.wide.s32 	%rd345, %r183, 4;
	add.s64 	%rd346, %rd330, %rd345;
	ld.global.u32 	%r126, [%rd346];
	add.s32 	%r184, %r6337, 7;
	mul.wide.s32 	%rd347, %r184, 4;
	add.s64 	%rd348, %rd330, %rd347;
	ld.global.u32 	%r128, [%rd348];
	add.s32 	%r185, %r6337, 8;
	mul.wide.s32 	%rd349, %r185, 4;
	add.s64 	%rd350, %rd330, %rd349;
	ld.global.u32 	%r130, [%rd350];
	add.s32 	%r186, %r6337, 9;
	mul.wide.s32 	%rd351, %r186, 4;
	add.s64 	%rd352, %rd330, %rd351;
	ld.global.u32 	%r132, [%rd352];
	add.s32 	%r187, %r6337, 10;
	mul.wide.s32 	%rd353, %r187, 4;
	add.s64 	%rd354, %rd330, %rd353;
	ld.global.u32 	%r134, [%rd354];
	add.s32 	%r188, %r6337, 11;
	mul.wide.s32 	%rd355, %r188, 4;
	add.s64 	%rd356, %rd330, %rd355;
	ld.global.u32 	%r136, [%rd356];
	add.s32 	%r189, %r6337, 12;
	mul.wide.s32 	%rd357, %r189, 4;
	add.s64 	%rd358, %rd330, %rd357;
	ld.global.u32 	%r138, [%rd358];
	add.s32 	%r190, %r6337, 13;
	mul.wide.s32 	%rd359, %r190, 4;
	add.s64 	%rd360, %rd330, %rd359;
	ld.global.u32 	%r140, [%rd360];
	add.s32 	%r191, %r6337, 14;
	mul.wide.s32 	%rd361, %r191, 4;
	add.s64 	%rd362, %rd330, %rd361;
	ld.global.u32 	%r142, [%rd362];
	add.s32 	%r192, %r6337, 15;
	mul.wide.s32 	%rd363, %r192, 4;
	add.s64 	%rd364, %rd330, %rd363;
	ld.global.u32 	%r144, [%rd364];
	add.s32 	%r193, %r6337, 16;
	mul.wide.s32 	%rd365, %r193, 4;
	add.s64 	%rd366, %rd330, %rd365;
	ld.global.u32 	%r146, [%rd366];
	add.s32 	%r194, %r6337, 17;
	mul.wide.s32 	%rd367, %r194, 4;
	add.s64 	%rd368, %rd330, %rd367;
	ld.global.u32 	%r148, [%rd368];
	add.s32 	%r195, %r6337, 18;
	mul.wide.s32 	%rd369, %r195, 4;
	add.s64 	%rd370, %rd330, %rd369;
	ld.global.u32 	%r150, [%rd370];
	add.s32 	%r196, %r6337, 19;
	mul.wide.s32 	%rd371, %r196, 4;
	add.s64 	%rd372, %rd330, %rd371;
	ld.global.u32 	%r152, [%rd372];
	add.s32 	%r197, %r6337, 20;
	mul.wide.s32 	%rd373, %r197, 4;
	add.s64 	%rd374, %rd330, %rd373;
	ld.global.u32 	%r154, [%rd374];
	add.s32 	%r198, %r6337, 21;
	mul.wide.s32 	%rd375, %r198, 4;
	add.s64 	%rd376, %rd330, %rd375;
	ld.global.u32 	%r156, [%rd376];
	add.s32 	%r199, %r6337, 22;
	mul.wide.s32 	%rd377, %r199, 4;
	add.s64 	%rd378, %rd330, %rd377;
	ld.global.u32 	%r158, [%rd378];
	add.s32 	%r200, %r6337, 23;
	mul.wide.s32 	%rd379, %r200, 4;
	add.s64 	%rd380, %rd330, %rd379;
	ld.global.u32 	%r160, [%rd380];
	add.s32 	%r201, %r6337, 24;
	mul.wide.s32 	%rd381, %r201, 4;
	add.s64 	%rd382, %rd330, %rd381;
	ld.global.u32 	%r162, [%rd382];
	add.s32 	%r202, %r6337, 25;
	mul.wide.s32 	%rd383, %r202, 4;
	add.s64 	%rd384, %rd330, %rd383;
	ld.global.u32 	%r164, [%rd384];
	add.s32 	%r203, %r6337, 26;
	mul.wide.s32 	%rd385, %r203, 4;
	add.s64 	%rd386, %rd330, %rd385;
	ld.global.u32 	%r166, [%rd386];
	add.s32 	%r204, %r6337, 27;
	mul.wide.s32 	%rd387, %r204, 4;
	add.s64 	%rd388, %rd330, %rd387;
	ld.global.u32 	%r168, [%rd388];
	add.s32 	%r205, %r6337, 28;
	mul.wide.s32 	%rd389, %r205, 4;
	add.s64 	%rd390, %rd330, %rd389;
	ld.global.u32 	%r170, [%rd390];
	add.s32 	%r206, %r6337, 29;
	mul.wide.s32 	%rd391, %r206, 4;
	add.s64 	%rd392, %rd330, %rd391;
	ld.global.u32 	%r172, [%rd392];
	add.s32 	%r207, %r6337, 30;
	mul.wide.s32 	%rd393, %r207, 4;
	add.s64 	%rd394, %rd330, %rd393;
	ld.global.u32 	%r174, [%rd394];
	add.s32 	%r208, %r6337, 31;
	mul.wide.s32 	%rd395, %r208, 4;
	add.s64 	%rd396, %rd330, %rd395;
	ld.global.u32 	%r176, [%rd396];
	// inline asm
	prmt.b32 %r113, %r114, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r115, %r116, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r117, %r118, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r119, %r120, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r121, %r122, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r123, %r124, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r125, %r126, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r127, %r128, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r129, %r130, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r131, %r132, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r133, %r134, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r135, %r136, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r137, %r138, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r139, %r140, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r141, %r142, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r143, %r144, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r145, %r146, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r147, %r148, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r149, %r150, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r151, %r152, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r153, %r154, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r155, %r156, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r157, %r158, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r159, %r160, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r161, %r162, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r163, %r164, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r165, %r166, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r167, %r168, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r169, %r170, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r171, %r172, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r173, %r174, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r175, %r176, 0, 0x0123;
	// inline asm
	@%p2 bra 	BB5_8;

	ld.param.u64 	%rd8731, [m11300_init_param_17];
	ld.param.u32 	%r6328, [m11300_init_param_27];
	add.u64 	%rd8730, %SP, 0;
	add.u64 	%rd397, %SP, 320;
	cvta.to.local.u64 	%rd398, %rd397;
	add.u64 	%rd399, %SP, 304;
	cvta.to.local.u64 	%rd400, %rd399;
	add.u64 	%rd401, %SP, 288;
	cvta.to.local.u64 	%rd402, %rd401;
	add.u64 	%rd403, %SP, 272;
	cvta.to.local.u64 	%rd404, %rd403;
	add.u64 	%rd405, %SP, 256;
	cvta.to.local.u64 	%rd406, %rd405;
	add.u64 	%rd407, %SP, 240;
	cvta.to.local.u64 	%rd408, %rd407;
	add.u64 	%rd409, %SP, 224;
	cvta.to.local.u64 	%rd410, %rd409;
	add.u64 	%rd411, %SP, 208;
	cvta.to.local.u64 	%rd412, %rd411;
	st.local.v4.u32 	[%rd412], {%r113, %r115, %r117, %r119};
	st.local.v4.u32 	[%rd410], {%r121, %r123, %r125, %r127};
	st.local.v4.u32 	[%rd408], {%r129, %r131, %r133, %r135};
	st.local.v4.u32 	[%rd406], {%r137, %r139, %r141, %r143};
	st.local.v4.u32 	[%rd404], {%r145, %r147, %r149, %r151};
	st.local.v4.u32 	[%rd402], {%r153, %r155, %r157, %r159};
	st.local.v4.u32 	[%rd400], {%r161, %r163, %r165, %r167};
	st.local.v4.u32 	[%rd398], {%r169, %r171, %r173, %r175};
	sub.s32 	%r209, %r1, %r6336;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8730;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd411;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd409;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd407;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd405;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd403;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd401;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd399;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd397;
	.param .b32 param9;
	st.param.b32	[param9+0], %r209;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 0
	mul.wide.u32 	%rd414, %r6328, 564;
	add.s64 	%rd415, %rd8731, %rd414;
	ld.global.u32 	%r210, [%rd415+512];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8730;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd415;
	.param .b32 param2;
	st.param.b32	[param2+0], %r210;
	call.uni 
	sha512_update_global_swap, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 1
	ld.local.u32 	%r37, [%rd1+192];
	not.b32 	%r211, %r37;
	and.b32  	%r212, %r37, 127;
	bfe.u32 	%r213, %r37, 2, 2;
	and.b32  	%r214, %r211, 3;
	shl.b32 	%r215, %r214, 3;
	mov.u32 	%r216, 255;
	shl.b32 	%r217, %r216, %r215;
	setp.eq.s32	%p3, %r213, 0;
	selp.b32	%r218, %r217, 0, %p3;
	setp.eq.s32	%p4, %r213, 1;
	selp.b32	%r219, %r217, 0, %p4;
	setp.eq.s32	%p5, %r213, 2;
	selp.b32	%r220, %r217, 0, %p5;
	setp.eq.s32	%p6, %r213, 3;
	selp.b32	%r221, %r217, 0, %p6;
	bfe.u32 	%r222, %r37, 4, 3;
	setp.eq.s32	%p7, %r222, 0;
	selp.b32	%r223, -2139062144, 0, %p7;
	and.b32  	%r224, %r218, %r223;
	ld.local.v2.u32 	{%r225, %r226}, [%rd1+64];
	or.b32  	%r6367, %r224, %r225;
	and.b32  	%r228, %r219, %r223;
	or.b32  	%r6366, %r228, %r226;
	ld.local.v2.u32 	{%r230, %r231}, [%rd1+72];
	ld.local.v2.u32 	{%r232, %r233}, [%rd1+80];
	ld.local.v2.u32 	{%r234, %r235}, [%rd1+88];
	ld.local.v2.u32 	{%r236, %r237}, [%rd1+96];
	ld.local.v2.u32 	{%r238, %r239}, [%rd1+104];
	ld.local.v2.u32 	{%r240, %r241}, [%rd1+112];
	ld.local.v2.u32 	{%r242, %r243}, [%rd1+120];
	ld.local.v2.u32 	{%r244, %r245}, [%rd1+128];
	ld.local.v2.u32 	{%r246, %r247}, [%rd1+136];
	ld.local.v2.u32 	{%r248, %r249}, [%rd1+144];
	ld.local.v2.u32 	{%r250, %r251}, [%rd1+152];
	ld.local.v2.u32 	{%r252, %r253}, [%rd1+160];
	ld.local.v2.u32 	{%r254, %r255}, [%rd1+168];
	ld.local.v2.u32 	{%r256, %r257}, [%rd1+176];
	ld.local.u32 	%r258, [%rd1+184];
	st.local.v2.u32 	[%rd1+64], {%r6367, %r6366};
	and.b32  	%r259, %r220, %r223;
	or.b32  	%r6365, %r259, %r230;
	and.b32  	%r261, %r221, %r223;
	or.b32  	%r6364, %r261, %r231;
	st.local.v2.u32 	[%rd1+72], {%r6365, %r6364};
	setp.eq.s32	%p8, %r222, 1;
	selp.b32	%r263, -2139062144, 0, %p8;
	and.b32  	%r264, %r218, %r263;
	or.b32  	%r6363, %r264, %r232;
	and.b32  	%r266, %r219, %r263;
	or.b32  	%r6362, %r233, %r266;
	st.local.v2.u32 	[%rd1+80], {%r6363, %r6362};
	and.b32  	%r268, %r220, %r263;
	or.b32  	%r6361, %r234, %r268;
	and.b32  	%r270, %r221, %r263;
	or.b32  	%r6360, %r235, %r270;
	st.local.v2.u32 	[%rd1+88], {%r6361, %r6360};
	setp.eq.s32	%p9, %r222, 2;
	selp.b32	%r272, -2139062144, 0, %p9;
	and.b32  	%r273, %r218, %r272;
	or.b32  	%r6359, %r236, %r273;
	and.b32  	%r275, %r219, %r272;
	or.b32  	%r6358, %r237, %r275;
	st.local.v2.u32 	[%rd1+96], {%r6359, %r6358};
	and.b32  	%r277, %r220, %r272;
	or.b32  	%r6357, %r238, %r277;
	and.b32  	%r279, %r221, %r272;
	or.b32  	%r6356, %r239, %r279;
	st.local.v2.u32 	[%rd1+104], {%r6357, %r6356};
	setp.eq.s32	%p10, %r222, 3;
	selp.b32	%r281, -2139062144, 0, %p10;
	and.b32  	%r282, %r218, %r281;
	or.b32  	%r6355, %r240, %r282;
	and.b32  	%r284, %r219, %r281;
	or.b32  	%r6354, %r241, %r284;
	st.local.v2.u32 	[%rd1+112], {%r6355, %r6354};
	and.b32  	%r286, %r220, %r281;
	or.b32  	%r6353, %r242, %r286;
	and.b32  	%r288, %r221, %r281;
	or.b32  	%r6352, %r243, %r288;
	st.local.v2.u32 	[%rd1+120], {%r6353, %r6352};
	setp.eq.s32	%p11, %r222, 4;
	selp.b32	%r290, -2139062144, 0, %p11;
	and.b32  	%r291, %r218, %r290;
	or.b32  	%r6351, %r244, %r291;
	and.b32  	%r293, %r219, %r290;
	or.b32  	%r6350, %r245, %r293;
	st.local.v2.u32 	[%rd1+128], {%r6351, %r6350};
	and.b32  	%r295, %r220, %r290;
	or.b32  	%r6349, %r246, %r295;
	and.b32  	%r297, %r221, %r290;
	or.b32  	%r6348, %r247, %r297;
	st.local.v2.u32 	[%rd1+136], {%r6349, %r6348};
	setp.eq.s32	%p12, %r222, 5;
	selp.b32	%r299, -2139062144, 0, %p12;
	and.b32  	%r300, %r218, %r299;
	or.b32  	%r6347, %r248, %r300;
	and.b32  	%r302, %r219, %r299;
	or.b32  	%r6346, %r249, %r302;
	st.local.v2.u32 	[%rd1+144], {%r6347, %r6346};
	and.b32  	%r304, %r220, %r299;
	or.b32  	%r6345, %r250, %r304;
	and.b32  	%r306, %r221, %r299;
	or.b32  	%r6344, %r251, %r306;
	st.local.v2.u32 	[%rd1+152], {%r6345, %r6344};
	setp.eq.s32	%p13, %r222, 6;
	selp.b32	%r308, -2139062144, 0, %p13;
	and.b32  	%r309, %r218, %r308;
	or.b32  	%r6343, %r252, %r309;
	and.b32  	%r311, %r219, %r308;
	or.b32  	%r6342, %r253, %r311;
	st.local.v2.u32 	[%rd1+160], {%r6343, %r6342};
	and.b32  	%r313, %r220, %r308;
	or.b32  	%r6341, %r254, %r313;
	and.b32  	%r315, %r221, %r308;
	or.b32  	%r6340, %r255, %r315;
	st.local.v2.u32 	[%rd1+168], {%r6341, %r6340};
	setp.eq.s32	%p14, %r222, 7;
	selp.b32	%r317, -2139062144, 0, %p14;
	and.b32  	%r318, %r218, %r317;
	or.b32  	%r6339, %r256, %r318;
	and.b32  	%r320, %r219, %r317;
	or.b32  	%r6338, %r257, %r320;
	st.local.v2.u32 	[%rd1+176], {%r6339, %r6338};
	and.b32  	%r322, %r220, %r317;
	or.b32  	%r68, %r258, %r322;
	st.local.u32 	[%rd1+184], %r68;
	and.b32  	%r323, %r221, %r317;
	ld.local.u32 	%r324, [%rd3+4];
	or.b32  	%r69, %r324, %r323;
	st.local.u32 	[%rd3+4], %r69;
	setp.gt.u32	%p15, %r212, 111;
	ld.local.u64 	%rd8813, [%rd1];
	ld.local.u64 	%rd8812, [%rd1+8];
	ld.local.u64 	%rd8811, [%rd1+16];
	ld.local.u64 	%rd8810, [%rd1+24];
	ld.local.u64 	%rd8809, [%rd1+32];
	ld.local.u64 	%rd8808, [%rd1+40];
	ld.local.u64 	%rd8807, [%rd1+48];
	ld.local.u64 	%rd8806, [%rd1+56];
	@%p15 bra 	BB5_5;
	bra.uni 	BB5_4;

BB5_5:
	mov.b64	%rd416, {%r6366, %r6367};
	mov.b64	%rd417, {%r6364, %r6365};
	mov.b64	%rd418, {%r6362, %r6363};
	mov.b64	%rd419, {%r6360, %r6361};
	mov.b64	%rd420, {%r6358, %r6359};
	mov.b64	%rd421, {%r6356, %r6357};
	mov.b64	%rd422, {%r6354, %r6355};
	mov.b64	%rd423, {%r6352, %r6353};
	mov.b64	%rd424, {%r6350, %r6351};
	mov.b64	%rd425, {%r6348, %r6349};
	mov.b64	%rd426, {%r6346, %r6347};
	mov.b64	%rd427, {%r6344, %r6345};
	mov.b64	%rd428, {%r6342, %r6343};
	mov.b64	%rd429, {%r6340, %r6341};
	mov.b64	%rd430, {%r6338, %r6339};
	mov.b64	%rd431, {%r69, %r68};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd8809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd8809;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 18;
	shf.r.wrap.b32 	%r358, %r355, %r356, 18;
	mov.b64 	%rd432, {%r358, %r357};
	shf.r.wrap.b32 	%r359, %r356, %r355, 14;
	shf.r.wrap.b32 	%r360, %r355, %r356, 14;
	mov.b64 	%rd433, {%r360, %r359};
	xor.b64  	%rd434, %rd432, %rd433;
	shf.l.wrap.b32 	%r361, %r355, %r356, 23;
	shf.l.wrap.b32 	%r362, %r356, %r355, 23;
	mov.b64 	%rd435, {%r362, %r361};
	xor.b64  	%rd436, %rd434, %rd435;
	xor.b64  	%rd437, %rd8807, %rd8808;
	and.b64  	%rd438, %rd437, %rd8809;
	xor.b64  	%rd439, %rd438, %rd8807;
	add.s64 	%rd440, %rd439, %rd8806;
	add.s64 	%rd441, %rd440, %rd416;
	add.s64 	%rd442, %rd441, %rd4;
	add.s64 	%rd443, %rd442, %rd436;
	add.s64 	%rd444, %rd443, %rd8810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r363}, %rd8813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r364,%dummy}, %rd8813;
	}
	shf.l.wrap.b32 	%r365, %r364, %r363, 30;
	shf.l.wrap.b32 	%r366, %r363, %r364, 30;
	mov.b64 	%rd445, {%r366, %r365};
	shf.r.wrap.b32 	%r367, %r363, %r364, 28;
	shf.r.wrap.b32 	%r368, %r364, %r363, 28;
	mov.b64 	%rd446, {%r368, %r367};
	xor.b64  	%rd447, %rd445, %rd446;
	shf.l.wrap.b32 	%r369, %r364, %r363, 25;
	shf.l.wrap.b32 	%r370, %r363, %r364, 25;
	mov.b64 	%rd448, {%r370, %r369};
	xor.b64  	%rd449, %rd447, %rd448;
	xor.b64  	%rd450, %rd8812, %rd8813;
	xor.b64  	%rd451, %rd8811, %rd8813;
	and.b64  	%rd452, %rd451, %rd450;
	xor.b64  	%rd453, %rd452, %rd8813;
	add.s64 	%rd454, %rd443, %rd453;
	add.s64 	%rd455, %rd454, %rd449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd444;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 14;
	shf.r.wrap.b32 	%r374, %r371, %r372, 14;
	mov.b64 	%rd456, {%r374, %r373};
	shf.r.wrap.b32 	%r375, %r372, %r371, 18;
	shf.r.wrap.b32 	%r376, %r371, %r372, 18;
	mov.b64 	%rd457, {%r376, %r375};
	xor.b64  	%rd458, %rd457, %rd456;
	shf.l.wrap.b32 	%r377, %r371, %r372, 23;
	shf.l.wrap.b32 	%r378, %r372, %r371, 23;
	mov.b64 	%rd459, {%r378, %r377};
	xor.b64  	%rd460, %rd458, %rd459;
	xor.b64  	%rd461, %rd8808, %rd8809;
	and.b64  	%rd462, %rd444, %rd461;
	xor.b64  	%rd463, %rd462, %rd8808;
	add.s64 	%rd464, %rd417, %rd8807;
	add.s64 	%rd465, %rd464, %rd5;
	add.s64 	%rd466, %rd465, %rd463;
	add.s64 	%rd467, %rd466, %rd460;
	add.s64 	%rd468, %rd467, %rd8811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd455;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 28;
	shf.r.wrap.b32 	%r382, %r379, %r380, 28;
	mov.b64 	%rd469, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 30;
	shf.l.wrap.b32 	%r384, %r380, %r379, 30;
	mov.b64 	%rd470, {%r384, %r383};
	xor.b64  	%rd471, %rd470, %rd469;
	shf.l.wrap.b32 	%r385, %r379, %r380, 25;
	shf.l.wrap.b32 	%r386, %r380, %r379, 25;
	mov.b64 	%rd472, {%r386, %r385};
	xor.b64  	%rd473, %rd471, %rd472;
	xor.b64  	%rd474, %rd455, %rd8812;
	xor.b64  	%rd475, %rd455, %rd8813;
	and.b64  	%rd476, %rd475, %rd474;
	xor.b64  	%rd477, %rd476, %rd455;
	add.s64 	%rd478, %rd467, %rd477;
	add.s64 	%rd479, %rd478, %rd473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd468;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 14;
	shf.r.wrap.b32 	%r390, %r387, %r388, 14;
	mov.b64 	%rd480, {%r390, %r389};
	shf.r.wrap.b32 	%r391, %r388, %r387, 18;
	shf.r.wrap.b32 	%r392, %r387, %r388, 18;
	mov.b64 	%rd481, {%r392, %r391};
	xor.b64  	%rd482, %rd481, %rd480;
	shf.l.wrap.b32 	%r393, %r387, %r388, 23;
	shf.l.wrap.b32 	%r394, %r388, %r387, 23;
	mov.b64 	%rd483, {%r394, %r393};
	xor.b64  	%rd484, %rd482, %rd483;
	xor.b64  	%rd485, %rd444, %rd8809;
	and.b64  	%rd486, %rd468, %rd485;
	xor.b64  	%rd487, %rd486, %rd8809;
	add.s64 	%rd488, %rd418, %rd8808;
	add.s64 	%rd489, %rd488, %rd6;
	add.s64 	%rd490, %rd489, %rd487;
	add.s64 	%rd491, %rd490, %rd484;
	add.s64 	%rd492, %rd491, %rd8812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd479;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 28;
	shf.r.wrap.b32 	%r398, %r395, %r396, 28;
	mov.b64 	%rd493, {%r398, %r397};
	shf.l.wrap.b32 	%r399, %r395, %r396, 30;
	shf.l.wrap.b32 	%r400, %r396, %r395, 30;
	mov.b64 	%rd494, {%r400, %r399};
	xor.b64  	%rd495, %rd494, %rd493;
	shf.l.wrap.b32 	%r401, %r395, %r396, 25;
	shf.l.wrap.b32 	%r402, %r396, %r395, 25;
	mov.b64 	%rd496, {%r402, %r401};
	xor.b64  	%rd497, %rd495, %rd496;
	xor.b64  	%rd498, %rd479, %rd8813;
	xor.b64  	%rd499, %rd479, %rd455;
	and.b64  	%rd500, %rd499, %rd498;
	xor.b64  	%rd501, %rd500, %rd479;
	add.s64 	%rd502, %rd491, %rd501;
	add.s64 	%rd503, %rd502, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd492;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 14;
	shf.r.wrap.b32 	%r406, %r403, %r404, 14;
	mov.b64 	%rd504, {%r406, %r405};
	shf.r.wrap.b32 	%r407, %r404, %r403, 18;
	shf.r.wrap.b32 	%r408, %r403, %r404, 18;
	mov.b64 	%rd505, {%r408, %r407};
	xor.b64  	%rd506, %rd505, %rd504;
	shf.l.wrap.b32 	%r409, %r403, %r404, 23;
	shf.l.wrap.b32 	%r410, %r404, %r403, 23;
	mov.b64 	%rd507, {%r410, %r409};
	xor.b64  	%rd508, %rd506, %rd507;
	xor.b64  	%rd509, %rd468, %rd444;
	and.b64  	%rd510, %rd492, %rd509;
	xor.b64  	%rd511, %rd510, %rd444;
	add.s64 	%rd512, %rd419, %rd8809;
	add.s64 	%rd513, %rd512, %rd7;
	add.s64 	%rd514, %rd513, %rd511;
	add.s64 	%rd515, %rd514, %rd508;
	add.s64 	%rd516, %rd515, %rd8813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r411,%dummy}, %rd503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r412}, %rd503;
	}
	shf.r.wrap.b32 	%r413, %r412, %r411, 28;
	shf.r.wrap.b32 	%r414, %r411, %r412, 28;
	mov.b64 	%rd517, {%r414, %r413};
	shf.l.wrap.b32 	%r415, %r411, %r412, 30;
	shf.l.wrap.b32 	%r416, %r412, %r411, 30;
	mov.b64 	%rd518, {%r416, %r415};
	xor.b64  	%rd519, %rd518, %rd517;
	shf.l.wrap.b32 	%r417, %r411, %r412, 25;
	shf.l.wrap.b32 	%r418, %r412, %r411, 25;
	mov.b64 	%rd520, {%r418, %r417};
	xor.b64  	%rd521, %rd519, %rd520;
	xor.b64  	%rd522, %rd503, %rd455;
	xor.b64  	%rd523, %rd503, %rd479;
	and.b64  	%rd524, %rd523, %rd522;
	xor.b64  	%rd525, %rd524, %rd503;
	add.s64 	%rd526, %rd515, %rd525;
	add.s64 	%rd527, %rd526, %rd521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd516;
	}
	shf.r.wrap.b32 	%r421, %r420, %r419, 14;
	shf.r.wrap.b32 	%r422, %r419, %r420, 14;
	mov.b64 	%rd528, {%r422, %r421};
	shf.r.wrap.b32 	%r423, %r420, %r419, 18;
	shf.r.wrap.b32 	%r424, %r419, %r420, 18;
	mov.b64 	%rd529, {%r424, %r423};
	xor.b64  	%rd530, %rd529, %rd528;
	shf.l.wrap.b32 	%r425, %r419, %r420, 23;
	shf.l.wrap.b32 	%r426, %r420, %r419, 23;
	mov.b64 	%rd531, {%r426, %r425};
	xor.b64  	%rd532, %rd530, %rd531;
	xor.b64  	%rd533, %rd492, %rd468;
	and.b64  	%rd534, %rd516, %rd533;
	xor.b64  	%rd535, %rd534, %rd468;
	add.s64 	%rd536, %rd444, %rd420;
	add.s64 	%rd537, %rd536, %rd8;
	add.s64 	%rd538, %rd537, %rd535;
	add.s64 	%rd539, %rd538, %rd532;
	add.s64 	%rd540, %rd539, %rd455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd527;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 28;
	shf.r.wrap.b32 	%r430, %r427, %r428, 28;
	mov.b64 	%rd541, {%r430, %r429};
	shf.l.wrap.b32 	%r431, %r427, %r428, 30;
	shf.l.wrap.b32 	%r432, %r428, %r427, 30;
	mov.b64 	%rd542, {%r432, %r431};
	xor.b64  	%rd543, %rd542, %rd541;
	shf.l.wrap.b32 	%r433, %r427, %r428, 25;
	shf.l.wrap.b32 	%r434, %r428, %r427, 25;
	mov.b64 	%rd544, {%r434, %r433};
	xor.b64  	%rd545, %rd543, %rd544;
	xor.b64  	%rd546, %rd527, %rd479;
	xor.b64  	%rd547, %rd527, %rd503;
	and.b64  	%rd548, %rd547, %rd546;
	xor.b64  	%rd549, %rd548, %rd527;
	add.s64 	%rd550, %rd539, %rd549;
	add.s64 	%rd551, %rd550, %rd545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd540;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 14;
	shf.r.wrap.b32 	%r438, %r435, %r436, 14;
	mov.b64 	%rd552, {%r438, %r437};
	shf.r.wrap.b32 	%r439, %r436, %r435, 18;
	shf.r.wrap.b32 	%r440, %r435, %r436, 18;
	mov.b64 	%rd553, {%r440, %r439};
	xor.b64  	%rd554, %rd553, %rd552;
	shf.l.wrap.b32 	%r441, %r435, %r436, 23;
	shf.l.wrap.b32 	%r442, %r436, %r435, 23;
	mov.b64 	%rd555, {%r442, %r441};
	xor.b64  	%rd556, %rd554, %rd555;
	xor.b64  	%rd557, %rd516, %rd492;
	and.b64  	%rd558, %rd540, %rd557;
	xor.b64  	%rd559, %rd558, %rd492;
	add.s64 	%rd560, %rd468, %rd421;
	add.s64 	%rd561, %rd560, %rd9;
	add.s64 	%rd562, %rd561, %rd559;
	add.s64 	%rd563, %rd562, %rd556;
	add.s64 	%rd564, %rd563, %rd479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd551;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 28;
	shf.r.wrap.b32 	%r446, %r443, %r444, 28;
	mov.b64 	%rd565, {%r446, %r445};
	shf.l.wrap.b32 	%r447, %r443, %r444, 30;
	shf.l.wrap.b32 	%r448, %r444, %r443, 30;
	mov.b64 	%rd566, {%r448, %r447};
	xor.b64  	%rd567, %rd566, %rd565;
	shf.l.wrap.b32 	%r449, %r443, %r444, 25;
	shf.l.wrap.b32 	%r450, %r444, %r443, 25;
	mov.b64 	%rd568, {%r450, %r449};
	xor.b64  	%rd569, %rd567, %rd568;
	xor.b64  	%rd570, %rd551, %rd503;
	xor.b64  	%rd571, %rd551, %rd527;
	and.b64  	%rd572, %rd571, %rd570;
	xor.b64  	%rd573, %rd572, %rd551;
	add.s64 	%rd574, %rd563, %rd573;
	add.s64 	%rd575, %rd574, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd564;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 14;
	shf.r.wrap.b32 	%r454, %r451, %r452, 14;
	mov.b64 	%rd576, {%r454, %r453};
	shf.r.wrap.b32 	%r455, %r452, %r451, 18;
	shf.r.wrap.b32 	%r456, %r451, %r452, 18;
	mov.b64 	%rd577, {%r456, %r455};
	xor.b64  	%rd578, %rd577, %rd576;
	shf.l.wrap.b32 	%r457, %r451, %r452, 23;
	shf.l.wrap.b32 	%r458, %r452, %r451, 23;
	mov.b64 	%rd579, {%r458, %r457};
	xor.b64  	%rd580, %rd578, %rd579;
	xor.b64  	%rd581, %rd540, %rd516;
	and.b64  	%rd582, %rd564, %rd581;
	xor.b64  	%rd583, %rd582, %rd516;
	add.s64 	%rd584, %rd492, %rd422;
	add.s64 	%rd585, %rd584, %rd10;
	add.s64 	%rd586, %rd585, %rd583;
	add.s64 	%rd587, %rd586, %rd580;
	add.s64 	%rd588, %rd587, %rd503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd575;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 28;
	shf.r.wrap.b32 	%r462, %r459, %r460, 28;
	mov.b64 	%rd589, {%r462, %r461};
	shf.l.wrap.b32 	%r463, %r459, %r460, 30;
	shf.l.wrap.b32 	%r464, %r460, %r459, 30;
	mov.b64 	%rd590, {%r464, %r463};
	xor.b64  	%rd591, %rd590, %rd589;
	shf.l.wrap.b32 	%r465, %r459, %r460, 25;
	shf.l.wrap.b32 	%r466, %r460, %r459, 25;
	mov.b64 	%rd592, {%r466, %r465};
	xor.b64  	%rd593, %rd591, %rd592;
	xor.b64  	%rd594, %rd575, %rd527;
	xor.b64  	%rd595, %rd575, %rd551;
	and.b64  	%rd596, %rd595, %rd594;
	xor.b64  	%rd597, %rd596, %rd575;
	add.s64 	%rd598, %rd587, %rd597;
	add.s64 	%rd599, %rd598, %rd593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r467,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r468}, %rd588;
	}
	shf.r.wrap.b32 	%r469, %r468, %r467, 14;
	shf.r.wrap.b32 	%r470, %r467, %r468, 14;
	mov.b64 	%rd600, {%r470, %r469};
	shf.r.wrap.b32 	%r471, %r468, %r467, 18;
	shf.r.wrap.b32 	%r472, %r467, %r468, 18;
	mov.b64 	%rd601, {%r472, %r471};
	xor.b64  	%rd602, %rd601, %rd600;
	shf.l.wrap.b32 	%r473, %r467, %r468, 23;
	shf.l.wrap.b32 	%r474, %r468, %r467, 23;
	mov.b64 	%rd603, {%r474, %r473};
	xor.b64  	%rd604, %rd602, %rd603;
	xor.b64  	%rd605, %rd564, %rd540;
	and.b64  	%rd606, %rd588, %rd605;
	xor.b64  	%rd607, %rd606, %rd540;
	add.s64 	%rd608, %rd516, %rd423;
	add.s64 	%rd609, %rd608, %rd11;
	add.s64 	%rd610, %rd609, %rd607;
	add.s64 	%rd611, %rd610, %rd604;
	add.s64 	%rd612, %rd611, %rd527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd599;
	}
	shf.r.wrap.b32 	%r477, %r476, %r475, 28;
	shf.r.wrap.b32 	%r478, %r475, %r476, 28;
	mov.b64 	%rd613, {%r478, %r477};
	shf.l.wrap.b32 	%r479, %r475, %r476, 30;
	shf.l.wrap.b32 	%r480, %r476, %r475, 30;
	mov.b64 	%rd614, {%r480, %r479};
	xor.b64  	%rd615, %rd614, %rd613;
	shf.l.wrap.b32 	%r481, %r475, %r476, 25;
	shf.l.wrap.b32 	%r482, %r476, %r475, 25;
	mov.b64 	%rd616, {%r482, %r481};
	xor.b64  	%rd617, %rd615, %rd616;
	xor.b64  	%rd618, %rd599, %rd551;
	xor.b64  	%rd619, %rd599, %rd575;
	and.b64  	%rd620, %rd619, %rd618;
	xor.b64  	%rd621, %rd620, %rd599;
	add.s64 	%rd622, %rd611, %rd621;
	add.s64 	%rd623, %rd622, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd612;
	}
	shf.r.wrap.b32 	%r485, %r484, %r483, 14;
	shf.r.wrap.b32 	%r486, %r483, %r484, 14;
	mov.b64 	%rd624, {%r486, %r485};
	shf.r.wrap.b32 	%r487, %r484, %r483, 18;
	shf.r.wrap.b32 	%r488, %r483, %r484, 18;
	mov.b64 	%rd625, {%r488, %r487};
	xor.b64  	%rd626, %rd625, %rd624;
	shf.l.wrap.b32 	%r489, %r483, %r484, 23;
	shf.l.wrap.b32 	%r490, %r484, %r483, 23;
	mov.b64 	%rd627, {%r490, %r489};
	xor.b64  	%rd628, %rd626, %rd627;
	xor.b64  	%rd629, %rd588, %rd564;
	and.b64  	%rd630, %rd612, %rd629;
	xor.b64  	%rd631, %rd630, %rd564;
	add.s64 	%rd632, %rd540, %rd424;
	add.s64 	%rd633, %rd632, %rd12;
	add.s64 	%rd634, %rd633, %rd631;
	add.s64 	%rd635, %rd634, %rd628;
	add.s64 	%rd636, %rd635, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd623;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 28;
	shf.r.wrap.b32 	%r494, %r491, %r492, 28;
	mov.b64 	%rd637, {%r494, %r493};
	shf.l.wrap.b32 	%r495, %r491, %r492, 30;
	shf.l.wrap.b32 	%r496, %r492, %r491, 30;
	mov.b64 	%rd638, {%r496, %r495};
	xor.b64  	%rd639, %rd638, %rd637;
	shf.l.wrap.b32 	%r497, %r491, %r492, 25;
	shf.l.wrap.b32 	%r498, %r492, %r491, 25;
	mov.b64 	%rd640, {%r498, %r497};
	xor.b64  	%rd641, %rd639, %rd640;
	xor.b64  	%rd642, %rd623, %rd575;
	xor.b64  	%rd643, %rd623, %rd599;
	and.b64  	%rd644, %rd643, %rd642;
	xor.b64  	%rd645, %rd644, %rd623;
	add.s64 	%rd646, %rd635, %rd645;
	add.s64 	%rd647, %rd646, %rd641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r499,%dummy}, %rd636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r500}, %rd636;
	}
	shf.r.wrap.b32 	%r501, %r500, %r499, 14;
	shf.r.wrap.b32 	%r502, %r499, %r500, 14;
	mov.b64 	%rd648, {%r502, %r501};
	shf.r.wrap.b32 	%r503, %r500, %r499, 18;
	shf.r.wrap.b32 	%r504, %r499, %r500, 18;
	mov.b64 	%rd649, {%r504, %r503};
	xor.b64  	%rd650, %rd649, %rd648;
	shf.l.wrap.b32 	%r505, %r499, %r500, 23;
	shf.l.wrap.b32 	%r506, %r500, %r499, 23;
	mov.b64 	%rd651, {%r506, %r505};
	xor.b64  	%rd652, %rd650, %rd651;
	xor.b64  	%rd653, %rd612, %rd588;
	and.b64  	%rd654, %rd636, %rd653;
	xor.b64  	%rd655, %rd654, %rd588;
	add.s64 	%rd656, %rd564, %rd425;
	add.s64 	%rd657, %rd656, %rd13;
	add.s64 	%rd658, %rd657, %rd655;
	add.s64 	%rd659, %rd658, %rd652;
	add.s64 	%rd660, %rd659, %rd575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r507,%dummy}, %rd647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r508}, %rd647;
	}
	shf.r.wrap.b32 	%r509, %r508, %r507, 28;
	shf.r.wrap.b32 	%r510, %r507, %r508, 28;
	mov.b64 	%rd661, {%r510, %r509};
	shf.l.wrap.b32 	%r511, %r507, %r508, 30;
	shf.l.wrap.b32 	%r512, %r508, %r507, 30;
	mov.b64 	%rd662, {%r512, %r511};
	xor.b64  	%rd663, %rd662, %rd661;
	shf.l.wrap.b32 	%r513, %r507, %r508, 25;
	shf.l.wrap.b32 	%r514, %r508, %r507, 25;
	mov.b64 	%rd664, {%r514, %r513};
	xor.b64  	%rd665, %rd663, %rd664;
	xor.b64  	%rd666, %rd647, %rd599;
	xor.b64  	%rd667, %rd647, %rd623;
	and.b64  	%rd668, %rd667, %rd666;
	xor.b64  	%rd669, %rd668, %rd647;
	add.s64 	%rd670, %rd659, %rd669;
	add.s64 	%rd671, %rd670, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r515,%dummy}, %rd660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r516}, %rd660;
	}
	shf.r.wrap.b32 	%r517, %r516, %r515, 14;
	shf.r.wrap.b32 	%r518, %r515, %r516, 14;
	mov.b64 	%rd672, {%r518, %r517};
	shf.r.wrap.b32 	%r519, %r516, %r515, 18;
	shf.r.wrap.b32 	%r520, %r515, %r516, 18;
	mov.b64 	%rd673, {%r520, %r519};
	xor.b64  	%rd674, %rd673, %rd672;
	shf.l.wrap.b32 	%r521, %r515, %r516, 23;
	shf.l.wrap.b32 	%r522, %r516, %r515, 23;
	mov.b64 	%rd675, {%r522, %r521};
	xor.b64  	%rd676, %rd674, %rd675;
	xor.b64  	%rd677, %rd636, %rd612;
	and.b64  	%rd678, %rd660, %rd677;
	xor.b64  	%rd679, %rd678, %rd612;
	add.s64 	%rd680, %rd588, %rd426;
	add.s64 	%rd681, %rd680, %rd14;
	add.s64 	%rd682, %rd681, %rd679;
	add.s64 	%rd683, %rd682, %rd676;
	add.s64 	%rd684, %rd683, %rd599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r523,%dummy}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd671;
	}
	shf.r.wrap.b32 	%r525, %r524, %r523, 28;
	shf.r.wrap.b32 	%r526, %r523, %r524, 28;
	mov.b64 	%rd685, {%r526, %r525};
	shf.l.wrap.b32 	%r527, %r523, %r524, 30;
	shf.l.wrap.b32 	%r528, %r524, %r523, 30;
	mov.b64 	%rd686, {%r528, %r527};
	xor.b64  	%rd687, %rd686, %rd685;
	shf.l.wrap.b32 	%r529, %r523, %r524, 25;
	shf.l.wrap.b32 	%r530, %r524, %r523, 25;
	mov.b64 	%rd688, {%r530, %r529};
	xor.b64  	%rd689, %rd687, %rd688;
	xor.b64  	%rd690, %rd671, %rd623;
	xor.b64  	%rd691, %rd671, %rd647;
	and.b64  	%rd692, %rd691, %rd690;
	xor.b64  	%rd693, %rd692, %rd671;
	add.s64 	%rd694, %rd683, %rd693;
	add.s64 	%rd695, %rd694, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd684;
	}
	shf.r.wrap.b32 	%r533, %r532, %r531, 14;
	shf.r.wrap.b32 	%r534, %r531, %r532, 14;
	mov.b64 	%rd696, {%r534, %r533};
	shf.r.wrap.b32 	%r535, %r532, %r531, 18;
	shf.r.wrap.b32 	%r536, %r531, %r532, 18;
	mov.b64 	%rd697, {%r536, %r535};
	xor.b64  	%rd698, %rd697, %rd696;
	shf.l.wrap.b32 	%r537, %r531, %r532, 23;
	shf.l.wrap.b32 	%r538, %r532, %r531, 23;
	mov.b64 	%rd699, {%r538, %r537};
	xor.b64  	%rd700, %rd698, %rd699;
	xor.b64  	%rd701, %rd660, %rd636;
	and.b64  	%rd702, %rd684, %rd701;
	xor.b64  	%rd703, %rd702, %rd636;
	add.s64 	%rd704, %rd612, %rd427;
	add.s64 	%rd705, %rd704, %rd15;
	add.s64 	%rd706, %rd705, %rd703;
	add.s64 	%rd707, %rd706, %rd700;
	add.s64 	%rd708, %rd707, %rd623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd695;
	}
	shf.r.wrap.b32 	%r541, %r540, %r539, 28;
	shf.r.wrap.b32 	%r542, %r539, %r540, 28;
	mov.b64 	%rd709, {%r542, %r541};
	shf.l.wrap.b32 	%r543, %r539, %r540, 30;
	shf.l.wrap.b32 	%r544, %r540, %r539, 30;
	mov.b64 	%rd710, {%r544, %r543};
	xor.b64  	%rd711, %rd710, %rd709;
	shf.l.wrap.b32 	%r545, %r539, %r540, 25;
	shf.l.wrap.b32 	%r546, %r540, %r539, 25;
	mov.b64 	%rd712, {%r546, %r545};
	xor.b64  	%rd713, %rd711, %rd712;
	xor.b64  	%rd714, %rd695, %rd647;
	xor.b64  	%rd715, %rd695, %rd671;
	and.b64  	%rd716, %rd715, %rd714;
	xor.b64  	%rd717, %rd716, %rd695;
	add.s64 	%rd718, %rd707, %rd717;
	add.s64 	%rd719, %rd718, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd708;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 14;
	shf.r.wrap.b32 	%r550, %r547, %r548, 14;
	mov.b64 	%rd720, {%r550, %r549};
	shf.r.wrap.b32 	%r551, %r548, %r547, 18;
	shf.r.wrap.b32 	%r552, %r547, %r548, 18;
	mov.b64 	%rd721, {%r552, %r551};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.l.wrap.b32 	%r553, %r547, %r548, 23;
	shf.l.wrap.b32 	%r554, %r548, %r547, 23;
	mov.b64 	%rd723, {%r554, %r553};
	xor.b64  	%rd724, %rd722, %rd723;
	xor.b64  	%rd725, %rd684, %rd660;
	and.b64  	%rd726, %rd708, %rd725;
	xor.b64  	%rd727, %rd726, %rd660;
	add.s64 	%rd728, %rd636, %rd428;
	add.s64 	%rd729, %rd728, %rd16;
	add.s64 	%rd730, %rd729, %rd727;
	add.s64 	%rd731, %rd730, %rd724;
	add.s64 	%rd732, %rd731, %rd647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r555,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r556}, %rd719;
	}
	shf.r.wrap.b32 	%r557, %r556, %r555, 28;
	shf.r.wrap.b32 	%r558, %r555, %r556, 28;
	mov.b64 	%rd733, {%r558, %r557};
	shf.l.wrap.b32 	%r559, %r555, %r556, 30;
	shf.l.wrap.b32 	%r560, %r556, %r555, 30;
	mov.b64 	%rd734, {%r560, %r559};
	xor.b64  	%rd735, %rd734, %rd733;
	shf.l.wrap.b32 	%r561, %r555, %r556, 25;
	shf.l.wrap.b32 	%r562, %r556, %r555, 25;
	mov.b64 	%rd736, {%r562, %r561};
	xor.b64  	%rd737, %rd735, %rd736;
	xor.b64  	%rd738, %rd719, %rd671;
	xor.b64  	%rd739, %rd719, %rd695;
	and.b64  	%rd740, %rd739, %rd738;
	xor.b64  	%rd741, %rd740, %rd719;
	add.s64 	%rd742, %rd731, %rd741;
	add.s64 	%rd743, %rd742, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r563,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd732;
	}
	shf.r.wrap.b32 	%r565, %r564, %r563, 14;
	shf.r.wrap.b32 	%r566, %r563, %r564, 14;
	mov.b64 	%rd744, {%r566, %r565};
	shf.r.wrap.b32 	%r567, %r564, %r563, 18;
	shf.r.wrap.b32 	%r568, %r563, %r564, 18;
	mov.b64 	%rd745, {%r568, %r567};
	xor.b64  	%rd746, %rd745, %rd744;
	shf.l.wrap.b32 	%r569, %r563, %r564, 23;
	shf.l.wrap.b32 	%r570, %r564, %r563, 23;
	mov.b64 	%rd747, {%r570, %r569};
	xor.b64  	%rd748, %rd746, %rd747;
	xor.b64  	%rd749, %rd708, %rd684;
	and.b64  	%rd750, %rd732, %rd749;
	xor.b64  	%rd751, %rd750, %rd684;
	add.s64 	%rd752, %rd660, %rd429;
	add.s64 	%rd753, %rd752, %rd17;
	add.s64 	%rd754, %rd753, %rd751;
	add.s64 	%rd755, %rd754, %rd748;
	add.s64 	%rd756, %rd755, %rd671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r571,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd743;
	}
	shf.r.wrap.b32 	%r573, %r572, %r571, 28;
	shf.r.wrap.b32 	%r574, %r571, %r572, 28;
	mov.b64 	%rd757, {%r574, %r573};
	shf.l.wrap.b32 	%r575, %r571, %r572, 30;
	shf.l.wrap.b32 	%r576, %r572, %r571, 30;
	mov.b64 	%rd758, {%r576, %r575};
	xor.b64  	%rd759, %rd758, %rd757;
	shf.l.wrap.b32 	%r577, %r571, %r572, 25;
	shf.l.wrap.b32 	%r578, %r572, %r571, 25;
	mov.b64 	%rd760, {%r578, %r577};
	xor.b64  	%rd761, %rd759, %rd760;
	xor.b64  	%rd762, %rd743, %rd695;
	xor.b64  	%rd763, %rd743, %rd719;
	and.b64  	%rd764, %rd763, %rd762;
	xor.b64  	%rd765, %rd764, %rd743;
	add.s64 	%rd766, %rd755, %rd765;
	add.s64 	%rd767, %rd766, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r579,%dummy}, %rd756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd756;
	}
	shf.r.wrap.b32 	%r581, %r580, %r579, 14;
	shf.r.wrap.b32 	%r582, %r579, %r580, 14;
	mov.b64 	%rd768, {%r582, %r581};
	shf.r.wrap.b32 	%r583, %r580, %r579, 18;
	shf.r.wrap.b32 	%r584, %r579, %r580, 18;
	mov.b64 	%rd769, {%r584, %r583};
	xor.b64  	%rd770, %rd769, %rd768;
	shf.l.wrap.b32 	%r585, %r579, %r580, 23;
	shf.l.wrap.b32 	%r586, %r580, %r579, 23;
	mov.b64 	%rd771, {%r586, %r585};
	xor.b64  	%rd772, %rd770, %rd771;
	xor.b64  	%rd773, %rd732, %rd708;
	and.b64  	%rd774, %rd756, %rd773;
	xor.b64  	%rd775, %rd774, %rd708;
	add.s64 	%rd776, %rd684, %rd430;
	add.s64 	%rd777, %rd776, %rd18;
	add.s64 	%rd778, %rd777, %rd775;
	add.s64 	%rd779, %rd778, %rd772;
	add.s64 	%rd780, %rd779, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd767;
	}
	shf.r.wrap.b32 	%r589, %r588, %r587, 28;
	shf.r.wrap.b32 	%r590, %r587, %r588, 28;
	mov.b64 	%rd781, {%r590, %r589};
	shf.l.wrap.b32 	%r591, %r587, %r588, 30;
	shf.l.wrap.b32 	%r592, %r588, %r587, 30;
	mov.b64 	%rd782, {%r592, %r591};
	xor.b64  	%rd783, %rd782, %rd781;
	shf.l.wrap.b32 	%r593, %r587, %r588, 25;
	shf.l.wrap.b32 	%r594, %r588, %r587, 25;
	mov.b64 	%rd784, {%r594, %r593};
	xor.b64  	%rd785, %rd783, %rd784;
	xor.b64  	%rd786, %rd767, %rd719;
	xor.b64  	%rd787, %rd767, %rd743;
	and.b64  	%rd788, %rd787, %rd786;
	xor.b64  	%rd789, %rd788, %rd767;
	add.s64 	%rd790, %rd779, %rd789;
	add.s64 	%rd791, %rd790, %rd785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd780;
	}
	shf.r.wrap.b32 	%r597, %r596, %r595, 14;
	shf.r.wrap.b32 	%r598, %r595, %r596, 14;
	mov.b64 	%rd792, {%r598, %r597};
	shf.r.wrap.b32 	%r599, %r596, %r595, 18;
	shf.r.wrap.b32 	%r600, %r595, %r596, 18;
	mov.b64 	%rd793, {%r600, %r599};
	xor.b64  	%rd794, %rd793, %rd792;
	shf.l.wrap.b32 	%r601, %r595, %r596, 23;
	shf.l.wrap.b32 	%r602, %r596, %r595, 23;
	mov.b64 	%rd795, {%r602, %r601};
	xor.b64  	%rd796, %rd794, %rd795;
	xor.b64  	%rd797, %rd756, %rd732;
	and.b64  	%rd798, %rd780, %rd797;
	xor.b64  	%rd799, %rd798, %rd732;
	add.s64 	%rd800, %rd708, %rd431;
	add.s64 	%rd801, %rd800, %rd19;
	add.s64 	%rd802, %rd801, %rd799;
	add.s64 	%rd803, %rd802, %rd796;
	add.s64 	%rd804, %rd803, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd791;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 28;
	shf.r.wrap.b32 	%r606, %r603, %r604, 28;
	mov.b64 	%rd805, {%r606, %r605};
	shf.l.wrap.b32 	%r607, %r603, %r604, 30;
	shf.l.wrap.b32 	%r608, %r604, %r603, 30;
	mov.b64 	%rd806, {%r608, %r607};
	xor.b64  	%rd807, %rd806, %rd805;
	shf.l.wrap.b32 	%r609, %r603, %r604, 25;
	shf.l.wrap.b32 	%r610, %r604, %r603, 25;
	mov.b64 	%rd808, {%r610, %r609};
	xor.b64  	%rd809, %rd807, %rd808;
	xor.b64  	%rd810, %rd791, %rd743;
	xor.b64  	%rd811, %rd791, %rd767;
	and.b64  	%rd812, %rd811, %rd810;
	xor.b64  	%rd813, %rd812, %rd791;
	add.s64 	%rd814, %rd803, %rd813;
	add.s64 	%rd815, %rd814, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd430;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 19;
	shf.r.wrap.b32 	%r614, %r611, %r612, 19;
	mov.b64 	%rd816, {%r614, %r613};
	shf.l.wrap.b32 	%r615, %r611, %r612, 3;
	shf.l.wrap.b32 	%r616, %r612, %r611, 3;
	mov.b64 	%rd817, {%r616, %r615};
	shr.u64 	%rd818, %rd430, 6;
	xor.b64  	%rd819, %rd816, %rd818;
	xor.b64  	%rd820, %rd819, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd417;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 1;
	shf.r.wrap.b32 	%r620, %r617, %r618, 1;
	mov.b64 	%rd821, {%r620, %r619};
	shf.r.wrap.b32 	%r621, %r618, %r617, 8;
	shf.r.wrap.b32 	%r622, %r617, %r618, 8;
	mov.b64 	%rd822, {%r622, %r621};
	shr.u64 	%rd823, %rd417, 7;
	xor.b64  	%rd824, %rd821, %rd823;
	xor.b64  	%rd825, %rd824, %rd822;
	add.s64 	%rd826, %rd425, %rd416;
	add.s64 	%rd827, %rd826, %rd820;
	add.s64 	%rd828, %rd827, %rd825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd431;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 19;
	shf.r.wrap.b32 	%r626, %r623, %r624, 19;
	mov.b64 	%rd829, {%r626, %r625};
	shf.l.wrap.b32 	%r627, %r623, %r624, 3;
	shf.l.wrap.b32 	%r628, %r624, %r623, 3;
	mov.b64 	%rd830, {%r628, %r627};
	shr.u64 	%rd831, %rd431, 6;
	xor.b64  	%rd832, %rd829, %rd831;
	xor.b64  	%rd833, %rd832, %rd830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r629,%dummy}, %rd418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r630}, %rd418;
	}
	shf.r.wrap.b32 	%r631, %r630, %r629, 1;
	shf.r.wrap.b32 	%r632, %r629, %r630, 1;
	mov.b64 	%rd834, {%r632, %r631};
	shf.r.wrap.b32 	%r633, %r630, %r629, 8;
	shf.r.wrap.b32 	%r634, %r629, %r630, 8;
	mov.b64 	%rd835, {%r634, %r633};
	shr.u64 	%rd836, %rd418, 7;
	xor.b64  	%rd837, %rd834, %rd836;
	xor.b64  	%rd838, %rd837, %rd835;
	add.s64 	%rd839, %rd426, %rd417;
	add.s64 	%rd840, %rd839, %rd833;
	add.s64 	%rd841, %rd840, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd828;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 19;
	shf.r.wrap.b32 	%r638, %r635, %r636, 19;
	mov.b64 	%rd842, {%r638, %r637};
	shf.l.wrap.b32 	%r639, %r635, %r636, 3;
	shf.l.wrap.b32 	%r640, %r636, %r635, 3;
	mov.b64 	%rd843, {%r640, %r639};
	shr.u64 	%rd844, %rd828, 6;
	xor.b64  	%rd845, %rd842, %rd844;
	xor.b64  	%rd846, %rd845, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd419;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 1;
	shf.r.wrap.b32 	%r644, %r641, %r642, 1;
	mov.b64 	%rd847, {%r644, %r643};
	shf.r.wrap.b32 	%r645, %r642, %r641, 8;
	shf.r.wrap.b32 	%r646, %r641, %r642, 8;
	mov.b64 	%rd848, {%r646, %r645};
	shr.u64 	%rd849, %rd419, 7;
	xor.b64  	%rd850, %rd847, %rd849;
	xor.b64  	%rd851, %rd850, %rd848;
	add.s64 	%rd852, %rd427, %rd418;
	add.s64 	%rd853, %rd852, %rd846;
	add.s64 	%rd854, %rd853, %rd851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd841;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 19;
	shf.r.wrap.b32 	%r650, %r647, %r648, 19;
	mov.b64 	%rd855, {%r650, %r649};
	shf.l.wrap.b32 	%r651, %r647, %r648, 3;
	shf.l.wrap.b32 	%r652, %r648, %r647, 3;
	mov.b64 	%rd856, {%r652, %r651};
	shr.u64 	%rd857, %rd841, 6;
	xor.b64  	%rd858, %rd855, %rd857;
	xor.b64  	%rd859, %rd858, %rd856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd420;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 1;
	shf.r.wrap.b32 	%r656, %r653, %r654, 1;
	mov.b64 	%rd860, {%r656, %r655};
	shf.r.wrap.b32 	%r657, %r654, %r653, 8;
	shf.r.wrap.b32 	%r658, %r653, %r654, 8;
	mov.b64 	%rd861, {%r658, %r657};
	shr.u64 	%rd862, %rd420, 7;
	xor.b64  	%rd863, %rd860, %rd862;
	xor.b64  	%rd864, %rd863, %rd861;
	add.s64 	%rd865, %rd428, %rd419;
	add.s64 	%rd866, %rd865, %rd859;
	add.s64 	%rd867, %rd866, %rd864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd854;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 19;
	shf.r.wrap.b32 	%r662, %r659, %r660, 19;
	mov.b64 	%rd868, {%r662, %r661};
	shf.l.wrap.b32 	%r663, %r659, %r660, 3;
	shf.l.wrap.b32 	%r664, %r660, %r659, 3;
	mov.b64 	%rd869, {%r664, %r663};
	shr.u64 	%rd870, %rd854, 6;
	xor.b64  	%rd871, %rd868, %rd870;
	xor.b64  	%rd872, %rd871, %rd869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd421;
	}
	shf.r.wrap.b32 	%r667, %r666, %r665, 1;
	shf.r.wrap.b32 	%r668, %r665, %r666, 1;
	mov.b64 	%rd873, {%r668, %r667};
	shf.r.wrap.b32 	%r669, %r666, %r665, 8;
	shf.r.wrap.b32 	%r670, %r665, %r666, 8;
	mov.b64 	%rd874, {%r670, %r669};
	shr.u64 	%rd875, %rd421, 7;
	xor.b64  	%rd876, %rd873, %rd875;
	xor.b64  	%rd877, %rd876, %rd874;
	add.s64 	%rd878, %rd429, %rd420;
	add.s64 	%rd879, %rd878, %rd872;
	add.s64 	%rd880, %rd879, %rd877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r671,%dummy}, %rd867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd867;
	}
	shf.r.wrap.b32 	%r673, %r672, %r671, 19;
	shf.r.wrap.b32 	%r674, %r671, %r672, 19;
	mov.b64 	%rd881, {%r674, %r673};
	shf.l.wrap.b32 	%r675, %r671, %r672, 3;
	shf.l.wrap.b32 	%r676, %r672, %r671, 3;
	mov.b64 	%rd882, {%r676, %r675};
	shr.u64 	%rd883, %rd867, 6;
	xor.b64  	%rd884, %rd881, %rd883;
	xor.b64  	%rd885, %rd884, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd422;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 1;
	shf.r.wrap.b32 	%r680, %r677, %r678, 1;
	mov.b64 	%rd886, {%r680, %r679};
	shf.r.wrap.b32 	%r681, %r678, %r677, 8;
	shf.r.wrap.b32 	%r682, %r677, %r678, 8;
	mov.b64 	%rd887, {%r682, %r681};
	shr.u64 	%rd888, %rd422, 7;
	xor.b64  	%rd889, %rd886, %rd888;
	xor.b64  	%rd890, %rd889, %rd887;
	add.s64 	%rd891, %rd430, %rd421;
	add.s64 	%rd892, %rd891, %rd885;
	add.s64 	%rd893, %rd892, %rd890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r683,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r684}, %rd880;
	}
	shf.r.wrap.b32 	%r685, %r684, %r683, 19;
	shf.r.wrap.b32 	%r686, %r683, %r684, 19;
	mov.b64 	%rd894, {%r686, %r685};
	shf.l.wrap.b32 	%r687, %r683, %r684, 3;
	shf.l.wrap.b32 	%r688, %r684, %r683, 3;
	mov.b64 	%rd895, {%r688, %r687};
	shr.u64 	%rd896, %rd880, 6;
	xor.b64  	%rd897, %rd894, %rd896;
	xor.b64  	%rd898, %rd897, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd423;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 1;
	shf.r.wrap.b32 	%r692, %r689, %r690, 1;
	mov.b64 	%rd899, {%r692, %r691};
	shf.r.wrap.b32 	%r693, %r690, %r689, 8;
	shf.r.wrap.b32 	%r694, %r689, %r690, 8;
	mov.b64 	%rd900, {%r694, %r693};
	shr.u64 	%rd901, %rd423, 7;
	xor.b64  	%rd902, %rd899, %rd901;
	xor.b64  	%rd903, %rd902, %rd900;
	add.s64 	%rd904, %rd431, %rd422;
	add.s64 	%rd905, %rd904, %rd898;
	add.s64 	%rd906, %rd905, %rd903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd893;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 19;
	shf.r.wrap.b32 	%r698, %r695, %r696, 19;
	mov.b64 	%rd907, {%r698, %r697};
	shf.l.wrap.b32 	%r699, %r695, %r696, 3;
	shf.l.wrap.b32 	%r700, %r696, %r695, 3;
	mov.b64 	%rd908, {%r700, %r699};
	shr.u64 	%rd909, %rd893, 6;
	xor.b64  	%rd910, %rd907, %rd909;
	xor.b64  	%rd911, %rd910, %rd908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd424;
	}
	shf.r.wrap.b32 	%r703, %r702, %r701, 1;
	shf.r.wrap.b32 	%r704, %r701, %r702, 1;
	mov.b64 	%rd912, {%r704, %r703};
	shf.r.wrap.b32 	%r705, %r702, %r701, 8;
	shf.r.wrap.b32 	%r706, %r701, %r702, 8;
	mov.b64 	%rd913, {%r706, %r705};
	shr.u64 	%rd914, %rd424, 7;
	xor.b64  	%rd915, %rd912, %rd914;
	xor.b64  	%rd916, %rd915, %rd913;
	add.s64 	%rd917, %rd828, %rd423;
	add.s64 	%rd918, %rd917, %rd911;
	add.s64 	%rd919, %rd918, %rd916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r707,%dummy}, %rd906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r708}, %rd906;
	}
	shf.r.wrap.b32 	%r709, %r708, %r707, 19;
	shf.r.wrap.b32 	%r710, %r707, %r708, 19;
	mov.b64 	%rd920, {%r710, %r709};
	shf.l.wrap.b32 	%r711, %r707, %r708, 3;
	shf.l.wrap.b32 	%r712, %r708, %r707, 3;
	mov.b64 	%rd921, {%r712, %r711};
	shr.u64 	%rd922, %rd906, 6;
	xor.b64  	%rd923, %rd920, %rd922;
	xor.b64  	%rd924, %rd923, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd425;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 1;
	shf.r.wrap.b32 	%r716, %r713, %r714, 1;
	mov.b64 	%rd925, {%r716, %r715};
	shf.r.wrap.b32 	%r717, %r714, %r713, 8;
	shf.r.wrap.b32 	%r718, %r713, %r714, 8;
	mov.b64 	%rd926, {%r718, %r717};
	shr.u64 	%rd927, %rd425, 7;
	xor.b64  	%rd928, %rd925, %rd927;
	xor.b64  	%rd929, %rd928, %rd926;
	add.s64 	%rd930, %rd841, %rd424;
	add.s64 	%rd931, %rd930, %rd924;
	add.s64 	%rd932, %rd931, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r719,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r720}, %rd919;
	}
	shf.r.wrap.b32 	%r721, %r720, %r719, 19;
	shf.r.wrap.b32 	%r722, %r719, %r720, 19;
	mov.b64 	%rd933, {%r722, %r721};
	shf.l.wrap.b32 	%r723, %r719, %r720, 3;
	shf.l.wrap.b32 	%r724, %r720, %r719, 3;
	mov.b64 	%rd934, {%r724, %r723};
	shr.u64 	%rd935, %rd919, 6;
	xor.b64  	%rd936, %rd933, %rd935;
	xor.b64  	%rd937, %rd936, %rd934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r725,%dummy}, %rd426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r726}, %rd426;
	}
	shf.r.wrap.b32 	%r727, %r726, %r725, 1;
	shf.r.wrap.b32 	%r728, %r725, %r726, 1;
	mov.b64 	%rd938, {%r728, %r727};
	shf.r.wrap.b32 	%r729, %r726, %r725, 8;
	shf.r.wrap.b32 	%r730, %r725, %r726, 8;
	mov.b64 	%rd939, {%r730, %r729};
	shr.u64 	%rd940, %rd426, 7;
	xor.b64  	%rd941, %rd938, %rd940;
	xor.b64  	%rd942, %rd941, %rd939;
	add.s64 	%rd943, %rd854, %rd425;
	add.s64 	%rd944, %rd943, %rd937;
	add.s64 	%rd945, %rd944, %rd942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r731,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r732}, %rd932;
	}
	shf.r.wrap.b32 	%r733, %r732, %r731, 19;
	shf.r.wrap.b32 	%r734, %r731, %r732, 19;
	mov.b64 	%rd946, {%r734, %r733};
	shf.l.wrap.b32 	%r735, %r731, %r732, 3;
	shf.l.wrap.b32 	%r736, %r732, %r731, 3;
	mov.b64 	%rd947, {%r736, %r735};
	shr.u64 	%rd948, %rd932, 6;
	xor.b64  	%rd949, %rd946, %rd948;
	xor.b64  	%rd950, %rd949, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd427;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 1;
	shf.r.wrap.b32 	%r740, %r737, %r738, 1;
	mov.b64 	%rd951, {%r740, %r739};
	shf.r.wrap.b32 	%r741, %r738, %r737, 8;
	shf.r.wrap.b32 	%r742, %r737, %r738, 8;
	mov.b64 	%rd952, {%r742, %r741};
	shr.u64 	%rd953, %rd427, 7;
	xor.b64  	%rd954, %rd951, %rd953;
	xor.b64  	%rd955, %rd954, %rd952;
	add.s64 	%rd956, %rd867, %rd426;
	add.s64 	%rd957, %rd956, %rd950;
	add.s64 	%rd958, %rd957, %rd955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r743,%dummy}, %rd945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r744}, %rd945;
	}
	shf.r.wrap.b32 	%r745, %r744, %r743, 19;
	shf.r.wrap.b32 	%r746, %r743, %r744, 19;
	mov.b64 	%rd959, {%r746, %r745};
	shf.l.wrap.b32 	%r747, %r743, %r744, 3;
	shf.l.wrap.b32 	%r748, %r744, %r743, 3;
	mov.b64 	%rd960, {%r748, %r747};
	shr.u64 	%rd961, %rd945, 6;
	xor.b64  	%rd962, %rd959, %rd961;
	xor.b64  	%rd963, %rd962, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd428;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 1;
	shf.r.wrap.b32 	%r752, %r749, %r750, 1;
	mov.b64 	%rd964, {%r752, %r751};
	shf.r.wrap.b32 	%r753, %r750, %r749, 8;
	shf.r.wrap.b32 	%r754, %r749, %r750, 8;
	mov.b64 	%rd965, {%r754, %r753};
	shr.u64 	%rd966, %rd428, 7;
	xor.b64  	%rd967, %rd964, %rd966;
	xor.b64  	%rd968, %rd967, %rd965;
	add.s64 	%rd969, %rd880, %rd427;
	add.s64 	%rd970, %rd969, %rd963;
	add.s64 	%rd971, %rd970, %rd968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r755,%dummy}, %rd958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r756}, %rd958;
	}
	shf.r.wrap.b32 	%r757, %r756, %r755, 19;
	shf.r.wrap.b32 	%r758, %r755, %r756, 19;
	mov.b64 	%rd972, {%r758, %r757};
	shf.l.wrap.b32 	%r759, %r755, %r756, 3;
	shf.l.wrap.b32 	%r760, %r756, %r755, 3;
	mov.b64 	%rd973, {%r760, %r759};
	shr.u64 	%rd974, %rd958, 6;
	xor.b64  	%rd975, %rd972, %rd974;
	xor.b64  	%rd976, %rd975, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r761,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r762}, %rd429;
	}
	shf.r.wrap.b32 	%r763, %r762, %r761, 1;
	shf.r.wrap.b32 	%r764, %r761, %r762, 1;
	mov.b64 	%rd977, {%r764, %r763};
	shf.r.wrap.b32 	%r765, %r762, %r761, 8;
	shf.r.wrap.b32 	%r766, %r761, %r762, 8;
	mov.b64 	%rd978, {%r766, %r765};
	shr.u64 	%rd979, %rd429, 7;
	xor.b64  	%rd980, %rd977, %rd979;
	xor.b64  	%rd981, %rd980, %rd978;
	add.s64 	%rd982, %rd893, %rd428;
	add.s64 	%rd983, %rd982, %rd976;
	add.s64 	%rd984, %rd983, %rd981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r767,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r768}, %rd971;
	}
	shf.r.wrap.b32 	%r769, %r768, %r767, 19;
	shf.r.wrap.b32 	%r770, %r767, %r768, 19;
	mov.b64 	%rd985, {%r770, %r769};
	shf.l.wrap.b32 	%r771, %r767, %r768, 3;
	shf.l.wrap.b32 	%r772, %r768, %r767, 3;
	mov.b64 	%rd986, {%r772, %r771};
	shr.u64 	%rd987, %rd971, 6;
	xor.b64  	%rd988, %rd985, %rd987;
	xor.b64  	%rd989, %rd988, %rd986;
	shf.r.wrap.b32 	%r773, %r612, %r611, 1;
	shf.r.wrap.b32 	%r774, %r611, %r612, 1;
	mov.b64 	%rd990, {%r774, %r773};
	shf.r.wrap.b32 	%r775, %r612, %r611, 8;
	shf.r.wrap.b32 	%r776, %r611, %r612, 8;
	mov.b64 	%rd991, {%r776, %r775};
	shr.u64 	%rd992, %rd430, 7;
	xor.b64  	%rd993, %rd990, %rd992;
	xor.b64  	%rd994, %rd993, %rd991;
	add.s64 	%rd995, %rd906, %rd429;
	add.s64 	%rd996, %rd995, %rd989;
	add.s64 	%rd997, %rd996, %rd994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r777,%dummy}, %rd984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r778}, %rd984;
	}
	shf.r.wrap.b32 	%r779, %r778, %r777, 19;
	shf.r.wrap.b32 	%r780, %r777, %r778, 19;
	mov.b64 	%rd998, {%r780, %r779};
	shf.l.wrap.b32 	%r781, %r777, %r778, 3;
	shf.l.wrap.b32 	%r782, %r778, %r777, 3;
	mov.b64 	%rd999, {%r782, %r781};
	shr.u64 	%rd1000, %rd984, 6;
	xor.b64  	%rd1001, %rd998, %rd1000;
	xor.b64  	%rd1002, %rd1001, %rd999;
	shf.r.wrap.b32 	%r783, %r624, %r623, 1;
	shf.r.wrap.b32 	%r784, %r623, %r624, 1;
	mov.b64 	%rd1003, {%r784, %r783};
	shf.r.wrap.b32 	%r785, %r624, %r623, 8;
	shf.r.wrap.b32 	%r786, %r623, %r624, 8;
	mov.b64 	%rd1004, {%r786, %r785};
	shr.u64 	%rd1005, %rd431, 7;
	xor.b64  	%rd1006, %rd1003, %rd1005;
	xor.b64  	%rd1007, %rd1006, %rd1004;
	add.s64 	%rd1008, %rd919, %rd430;
	add.s64 	%rd1009, %rd1008, %rd1002;
	add.s64 	%rd1010, %rd1009, %rd1007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd997;
	}
	shf.r.wrap.b32 	%r789, %r788, %r787, 19;
	shf.r.wrap.b32 	%r790, %r787, %r788, 19;
	mov.b64 	%rd1011, {%r790, %r789};
	shf.l.wrap.b32 	%r791, %r787, %r788, 3;
	shf.l.wrap.b32 	%r792, %r788, %r787, 3;
	mov.b64 	%rd1012, {%r792, %r791};
	shr.u64 	%rd1013, %rd997, 6;
	xor.b64  	%rd1014, %rd1011, %rd1013;
	xor.b64  	%rd1015, %rd1014, %rd1012;
	shf.r.wrap.b32 	%r793, %r636, %r635, 1;
	shf.r.wrap.b32 	%r794, %r635, %r636, 1;
	mov.b64 	%rd1016, {%r794, %r793};
	shf.r.wrap.b32 	%r795, %r636, %r635, 8;
	shf.r.wrap.b32 	%r796, %r635, %r636, 8;
	mov.b64 	%rd1017, {%r796, %r795};
	shr.u64 	%rd1018, %rd828, 7;
	xor.b64  	%rd1019, %rd1016, %rd1018;
	xor.b64  	%rd1020, %rd1019, %rd1017;
	add.s64 	%rd1021, %rd932, %rd431;
	add.s64 	%rd1022, %rd1021, %rd1015;
	add.s64 	%rd1023, %rd1022, %rd1020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r798}, %rd804;
	}
	shf.r.wrap.b32 	%r799, %r798, %r797, 14;
	shf.r.wrap.b32 	%r800, %r797, %r798, 14;
	mov.b64 	%rd1024, {%r800, %r799};
	shf.r.wrap.b32 	%r801, %r798, %r797, 18;
	shf.r.wrap.b32 	%r802, %r797, %r798, 18;
	mov.b64 	%rd1025, {%r802, %r801};
	xor.b64  	%rd1026, %rd1025, %rd1024;
	shf.l.wrap.b32 	%r803, %r797, %r798, 23;
	shf.l.wrap.b32 	%r804, %r798, %r797, 23;
	mov.b64 	%rd1027, {%r804, %r803};
	xor.b64  	%rd1028, %rd1026, %rd1027;
	xor.b64  	%rd1029, %rd780, %rd756;
	and.b64  	%rd1030, %rd1029, %rd804;
	xor.b64  	%rd1031, %rd1030, %rd756;
	add.s64 	%rd1032, %rd1031, %rd732;
	add.s64 	%rd1033, %rd1032, %rd828;
	ld.const.u64 	%rd8805, [k_sha512+128];
	add.s64 	%rd1034, %rd1033, %rd8805;
	add.s64 	%rd1035, %rd1034, %rd1028;
	add.s64 	%rd1036, %rd1035, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r805,%dummy}, %rd815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r806}, %rd815;
	}
	shf.r.wrap.b32 	%r807, %r806, %r805, 28;
	shf.r.wrap.b32 	%r808, %r805, %r806, 28;
	mov.b64 	%rd1037, {%r808, %r807};
	shf.l.wrap.b32 	%r809, %r805, %r806, 30;
	shf.l.wrap.b32 	%r810, %r806, %r805, 30;
	mov.b64 	%rd1038, {%r810, %r809};
	xor.b64  	%rd1039, %rd1038, %rd1037;
	shf.l.wrap.b32 	%r811, %r805, %r806, 25;
	shf.l.wrap.b32 	%r812, %r806, %r805, 25;
	mov.b64 	%rd1040, {%r812, %r811};
	xor.b64  	%rd1041, %rd1039, %rd1040;
	xor.b64  	%rd1042, %rd815, %rd767;
	xor.b64  	%rd1043, %rd815, %rd791;
	and.b64  	%rd1044, %rd1043, %rd1042;
	xor.b64  	%rd1045, %rd1044, %rd815;
	add.s64 	%rd1046, %rd1035, %rd1045;
	add.s64 	%rd1047, %rd1046, %rd1041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r813,%dummy}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r814}, %rd1036;
	}
	shf.r.wrap.b32 	%r815, %r814, %r813, 14;
	shf.r.wrap.b32 	%r816, %r813, %r814, 14;
	mov.b64 	%rd1048, {%r816, %r815};
	shf.r.wrap.b32 	%r817, %r814, %r813, 18;
	shf.r.wrap.b32 	%r818, %r813, %r814, 18;
	mov.b64 	%rd1049, {%r818, %r817};
	xor.b64  	%rd1050, %rd1049, %rd1048;
	shf.l.wrap.b32 	%r819, %r813, %r814, 23;
	shf.l.wrap.b32 	%r820, %r814, %r813, 23;
	mov.b64 	%rd1051, {%r820, %r819};
	xor.b64  	%rd1052, %rd1050, %rd1051;
	xor.b64  	%rd1053, %rd804, %rd780;
	and.b64  	%rd1054, %rd1036, %rd1053;
	xor.b64  	%rd1055, %rd1054, %rd780;
	add.s64 	%rd1056, %rd841, %rd756;
	ld.const.u64 	%rd8804, [k_sha512+136];
	add.s64 	%rd1057, %rd1056, %rd8804;
	add.s64 	%rd1058, %rd1057, %rd1055;
	add.s64 	%rd1059, %rd1058, %rd1052;
	add.s64 	%rd1060, %rd1059, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r821,%dummy}, %rd1047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r822}, %rd1047;
	}
	shf.r.wrap.b32 	%r823, %r822, %r821, 28;
	shf.r.wrap.b32 	%r824, %r821, %r822, 28;
	mov.b64 	%rd1061, {%r824, %r823};
	shf.l.wrap.b32 	%r825, %r821, %r822, 30;
	shf.l.wrap.b32 	%r826, %r822, %r821, 30;
	mov.b64 	%rd1062, {%r826, %r825};
	xor.b64  	%rd1063, %rd1062, %rd1061;
	shf.l.wrap.b32 	%r827, %r821, %r822, 25;
	shf.l.wrap.b32 	%r828, %r822, %r821, 25;
	mov.b64 	%rd1064, {%r828, %r827};
	xor.b64  	%rd1065, %rd1063, %rd1064;
	xor.b64  	%rd1066, %rd1047, %rd791;
	xor.b64  	%rd1067, %rd1047, %rd815;
	and.b64  	%rd1068, %rd1067, %rd1066;
	xor.b64  	%rd1069, %rd1068, %rd1047;
	add.s64 	%rd1070, %rd1059, %rd1069;
	add.s64 	%rd1071, %rd1070, %rd1065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd1060;
	}
	shf.r.wrap.b32 	%r831, %r830, %r829, 14;
	shf.r.wrap.b32 	%r832, %r829, %r830, 14;
	mov.b64 	%rd1072, {%r832, %r831};
	shf.r.wrap.b32 	%r833, %r830, %r829, 18;
	shf.r.wrap.b32 	%r834, %r829, %r830, 18;
	mov.b64 	%rd1073, {%r834, %r833};
	xor.b64  	%rd1074, %rd1073, %rd1072;
	shf.l.wrap.b32 	%r835, %r829, %r830, 23;
	shf.l.wrap.b32 	%r836, %r830, %r829, 23;
	mov.b64 	%rd1075, {%r836, %r835};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	xor.b64  	%rd1077, %rd1036, %rd804;
	and.b64  	%rd1078, %rd1060, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd804;
	add.s64 	%rd1080, %rd854, %rd780;
	ld.const.u64 	%rd8803, [k_sha512+144];
	add.s64 	%rd1081, %rd1080, %rd8803;
	add.s64 	%rd1082, %rd1081, %rd1079;
	add.s64 	%rd1083, %rd1082, %rd1076;
	add.s64 	%rd1084, %rd1083, %rd791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd1071;
	}
	shf.r.wrap.b32 	%r839, %r838, %r837, 28;
	shf.r.wrap.b32 	%r840, %r837, %r838, 28;
	mov.b64 	%rd1085, {%r840, %r839};
	shf.l.wrap.b32 	%r841, %r837, %r838, 30;
	shf.l.wrap.b32 	%r842, %r838, %r837, 30;
	mov.b64 	%rd1086, {%r842, %r841};
	xor.b64  	%rd1087, %rd1086, %rd1085;
	shf.l.wrap.b32 	%r843, %r837, %r838, 25;
	shf.l.wrap.b32 	%r844, %r838, %r837, 25;
	mov.b64 	%rd1088, {%r844, %r843};
	xor.b64  	%rd1089, %rd1087, %rd1088;
	xor.b64  	%rd1090, %rd1071, %rd815;
	xor.b64  	%rd1091, %rd1071, %rd1047;
	and.b64  	%rd1092, %rd1091, %rd1090;
	xor.b64  	%rd1093, %rd1092, %rd1071;
	add.s64 	%rd1094, %rd1083, %rd1093;
	add.s64 	%rd1095, %rd1094, %rd1089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r846}, %rd1084;
	}
	shf.r.wrap.b32 	%r847, %r846, %r845, 14;
	shf.r.wrap.b32 	%r848, %r845, %r846, 14;
	mov.b64 	%rd1096, {%r848, %r847};
	shf.r.wrap.b32 	%r849, %r846, %r845, 18;
	shf.r.wrap.b32 	%r850, %r845, %r846, 18;
	mov.b64 	%rd1097, {%r850, %r849};
	xor.b64  	%rd1098, %rd1097, %rd1096;
	shf.l.wrap.b32 	%r851, %r845, %r846, 23;
	shf.l.wrap.b32 	%r852, %r846, %r845, 23;
	mov.b64 	%rd1099, {%r852, %r851};
	xor.b64  	%rd1100, %rd1098, %rd1099;
	xor.b64  	%rd1101, %rd1060, %rd1036;
	and.b64  	%rd1102, %rd1084, %rd1101;
	xor.b64  	%rd1103, %rd1102, %rd1036;
	add.s64 	%rd1104, %rd867, %rd804;
	ld.const.u64 	%rd8802, [k_sha512+152];
	add.s64 	%rd1105, %rd1104, %rd8802;
	add.s64 	%rd1106, %rd1105, %rd1103;
	add.s64 	%rd1107, %rd1106, %rd1100;
	add.s64 	%rd1108, %rd1107, %rd815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd1095;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 28;
	shf.r.wrap.b32 	%r856, %r853, %r854, 28;
	mov.b64 	%rd1109, {%r856, %r855};
	shf.l.wrap.b32 	%r857, %r853, %r854, 30;
	shf.l.wrap.b32 	%r858, %r854, %r853, 30;
	mov.b64 	%rd1110, {%r858, %r857};
	xor.b64  	%rd1111, %rd1110, %rd1109;
	shf.l.wrap.b32 	%r859, %r853, %r854, 25;
	shf.l.wrap.b32 	%r860, %r854, %r853, 25;
	mov.b64 	%rd1112, {%r860, %r859};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	xor.b64  	%rd1114, %rd1095, %rd1047;
	xor.b64  	%rd1115, %rd1095, %rd1071;
	and.b64  	%rd1116, %rd1115, %rd1114;
	xor.b64  	%rd1117, %rd1116, %rd1095;
	add.s64 	%rd1118, %rd1107, %rd1117;
	add.s64 	%rd1119, %rd1118, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd1108;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 14;
	shf.r.wrap.b32 	%r864, %r861, %r862, 14;
	mov.b64 	%rd1120, {%r864, %r863};
	shf.r.wrap.b32 	%r865, %r862, %r861, 18;
	shf.r.wrap.b32 	%r866, %r861, %r862, 18;
	mov.b64 	%rd1121, {%r866, %r865};
	xor.b64  	%rd1122, %rd1121, %rd1120;
	shf.l.wrap.b32 	%r867, %r861, %r862, 23;
	shf.l.wrap.b32 	%r868, %r862, %r861, 23;
	mov.b64 	%rd1123, {%r868, %r867};
	xor.b64  	%rd1124, %rd1122, %rd1123;
	xor.b64  	%rd1125, %rd1084, %rd1060;
	and.b64  	%rd1126, %rd1108, %rd1125;
	xor.b64  	%rd1127, %rd1126, %rd1060;
	add.s64 	%rd1128, %rd1036, %rd880;
	ld.const.u64 	%rd8801, [k_sha512+160];
	add.s64 	%rd1129, %rd1128, %rd8801;
	add.s64 	%rd1130, %rd1129, %rd1127;
	add.s64 	%rd1131, %rd1130, %rd1124;
	add.s64 	%rd1132, %rd1131, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd1119;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 28;
	shf.r.wrap.b32 	%r872, %r869, %r870, 28;
	mov.b64 	%rd1133, {%r872, %r871};
	shf.l.wrap.b32 	%r873, %r869, %r870, 30;
	shf.l.wrap.b32 	%r874, %r870, %r869, 30;
	mov.b64 	%rd1134, {%r874, %r873};
	xor.b64  	%rd1135, %rd1134, %rd1133;
	shf.l.wrap.b32 	%r875, %r869, %r870, 25;
	shf.l.wrap.b32 	%r876, %r870, %r869, 25;
	mov.b64 	%rd1136, {%r876, %r875};
	xor.b64  	%rd1137, %rd1135, %rd1136;
	xor.b64  	%rd1138, %rd1119, %rd1071;
	xor.b64  	%rd1139, %rd1119, %rd1095;
	and.b64  	%rd1140, %rd1139, %rd1138;
	xor.b64  	%rd1141, %rd1140, %rd1119;
	add.s64 	%rd1142, %rd1131, %rd1141;
	add.s64 	%rd1143, %rd1142, %rd1137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd1132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd1132;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 14;
	shf.r.wrap.b32 	%r880, %r877, %r878, 14;
	mov.b64 	%rd1144, {%r880, %r879};
	shf.r.wrap.b32 	%r881, %r878, %r877, 18;
	shf.r.wrap.b32 	%r882, %r877, %r878, 18;
	mov.b64 	%rd1145, {%r882, %r881};
	xor.b64  	%rd1146, %rd1145, %rd1144;
	shf.l.wrap.b32 	%r883, %r877, %r878, 23;
	shf.l.wrap.b32 	%r884, %r878, %r877, 23;
	mov.b64 	%rd1147, {%r884, %r883};
	xor.b64  	%rd1148, %rd1146, %rd1147;
	xor.b64  	%rd1149, %rd1108, %rd1084;
	and.b64  	%rd1150, %rd1132, %rd1149;
	xor.b64  	%rd1151, %rd1150, %rd1084;
	add.s64 	%rd1152, %rd1060, %rd893;
	ld.const.u64 	%rd8800, [k_sha512+168];
	add.s64 	%rd1153, %rd1152, %rd8800;
	add.s64 	%rd1154, %rd1153, %rd1151;
	add.s64 	%rd1155, %rd1154, %rd1148;
	add.s64 	%rd1156, %rd1155, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd1143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd1143;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 28;
	shf.r.wrap.b32 	%r888, %r885, %r886, 28;
	mov.b64 	%rd1157, {%r888, %r887};
	shf.l.wrap.b32 	%r889, %r885, %r886, 30;
	shf.l.wrap.b32 	%r890, %r886, %r885, 30;
	mov.b64 	%rd1158, {%r890, %r889};
	xor.b64  	%rd1159, %rd1158, %rd1157;
	shf.l.wrap.b32 	%r891, %r885, %r886, 25;
	shf.l.wrap.b32 	%r892, %r886, %r885, 25;
	mov.b64 	%rd1160, {%r892, %r891};
	xor.b64  	%rd1161, %rd1159, %rd1160;
	xor.b64  	%rd1162, %rd1143, %rd1095;
	xor.b64  	%rd1163, %rd1143, %rd1119;
	and.b64  	%rd1164, %rd1163, %rd1162;
	xor.b64  	%rd1165, %rd1164, %rd1143;
	add.s64 	%rd1166, %rd1155, %rd1165;
	add.s64 	%rd1167, %rd1166, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r893,%dummy}, %rd1156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r894}, %rd1156;
	}
	shf.r.wrap.b32 	%r895, %r894, %r893, 14;
	shf.r.wrap.b32 	%r896, %r893, %r894, 14;
	mov.b64 	%rd1168, {%r896, %r895};
	shf.r.wrap.b32 	%r897, %r894, %r893, 18;
	shf.r.wrap.b32 	%r898, %r893, %r894, 18;
	mov.b64 	%rd1169, {%r898, %r897};
	xor.b64  	%rd1170, %rd1169, %rd1168;
	shf.l.wrap.b32 	%r899, %r893, %r894, 23;
	shf.l.wrap.b32 	%r900, %r894, %r893, 23;
	mov.b64 	%rd1171, {%r900, %r899};
	xor.b64  	%rd1172, %rd1170, %rd1171;
	xor.b64  	%rd1173, %rd1132, %rd1108;
	and.b64  	%rd1174, %rd1156, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1108;
	add.s64 	%rd1176, %rd1084, %rd906;
	ld.const.u64 	%rd8799, [k_sha512+176];
	add.s64 	%rd1177, %rd1176, %rd8799;
	add.s64 	%rd1178, %rd1177, %rd1175;
	add.s64 	%rd1179, %rd1178, %rd1172;
	add.s64 	%rd1180, %rd1179, %rd1095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd1167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r902}, %rd1167;
	}
	shf.r.wrap.b32 	%r903, %r902, %r901, 28;
	shf.r.wrap.b32 	%r904, %r901, %r902, 28;
	mov.b64 	%rd1181, {%r904, %r903};
	shf.l.wrap.b32 	%r905, %r901, %r902, 30;
	shf.l.wrap.b32 	%r906, %r902, %r901, 30;
	mov.b64 	%rd1182, {%r906, %r905};
	xor.b64  	%rd1183, %rd1182, %rd1181;
	shf.l.wrap.b32 	%r907, %r901, %r902, 25;
	shf.l.wrap.b32 	%r908, %r902, %r901, 25;
	mov.b64 	%rd1184, {%r908, %r907};
	xor.b64  	%rd1185, %rd1183, %rd1184;
	xor.b64  	%rd1186, %rd1167, %rd1119;
	xor.b64  	%rd1187, %rd1167, %rd1143;
	and.b64  	%rd1188, %rd1187, %rd1186;
	xor.b64  	%rd1189, %rd1188, %rd1167;
	add.s64 	%rd1190, %rd1179, %rd1189;
	add.s64 	%rd1191, %rd1190, %rd1185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd1180;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 14;
	shf.r.wrap.b32 	%r912, %r909, %r910, 14;
	mov.b64 	%rd1192, {%r912, %r911};
	shf.r.wrap.b32 	%r913, %r910, %r909, 18;
	shf.r.wrap.b32 	%r914, %r909, %r910, 18;
	mov.b64 	%rd1193, {%r914, %r913};
	xor.b64  	%rd1194, %rd1193, %rd1192;
	shf.l.wrap.b32 	%r915, %r909, %r910, 23;
	shf.l.wrap.b32 	%r916, %r910, %r909, 23;
	mov.b64 	%rd1195, {%r916, %r915};
	xor.b64  	%rd1196, %rd1194, %rd1195;
	xor.b64  	%rd1197, %rd1156, %rd1132;
	and.b64  	%rd1198, %rd1180, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1132;
	add.s64 	%rd1200, %rd1108, %rd919;
	ld.const.u64 	%rd8798, [k_sha512+184];
	add.s64 	%rd1201, %rd1200, %rd8798;
	add.s64 	%rd1202, %rd1201, %rd1199;
	add.s64 	%rd1203, %rd1202, %rd1196;
	add.s64 	%rd1204, %rd1203, %rd1119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r918}, %rd1191;
	}
	shf.r.wrap.b32 	%r919, %r918, %r917, 28;
	shf.r.wrap.b32 	%r920, %r917, %r918, 28;
	mov.b64 	%rd1205, {%r920, %r919};
	shf.l.wrap.b32 	%r921, %r917, %r918, 30;
	shf.l.wrap.b32 	%r922, %r918, %r917, 30;
	mov.b64 	%rd1206, {%r922, %r921};
	xor.b64  	%rd1207, %rd1206, %rd1205;
	shf.l.wrap.b32 	%r923, %r917, %r918, 25;
	shf.l.wrap.b32 	%r924, %r918, %r917, 25;
	mov.b64 	%rd1208, {%r924, %r923};
	xor.b64  	%rd1209, %rd1207, %rd1208;
	xor.b64  	%rd1210, %rd1191, %rd1143;
	xor.b64  	%rd1211, %rd1191, %rd1167;
	and.b64  	%rd1212, %rd1211, %rd1210;
	xor.b64  	%rd1213, %rd1212, %rd1191;
	add.s64 	%rd1214, %rd1203, %rd1213;
	add.s64 	%rd1215, %rd1214, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd1204;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 14;
	shf.r.wrap.b32 	%r928, %r925, %r926, 14;
	mov.b64 	%rd1216, {%r928, %r927};
	shf.r.wrap.b32 	%r929, %r926, %r925, 18;
	shf.r.wrap.b32 	%r930, %r925, %r926, 18;
	mov.b64 	%rd1217, {%r930, %r929};
	xor.b64  	%rd1218, %rd1217, %rd1216;
	shf.l.wrap.b32 	%r931, %r925, %r926, 23;
	shf.l.wrap.b32 	%r932, %r926, %r925, 23;
	mov.b64 	%rd1219, {%r932, %r931};
	xor.b64  	%rd1220, %rd1218, %rd1219;
	xor.b64  	%rd1221, %rd1180, %rd1156;
	and.b64  	%rd1222, %rd1204, %rd1221;
	xor.b64  	%rd1223, %rd1222, %rd1156;
	add.s64 	%rd1224, %rd1132, %rd932;
	ld.const.u64 	%rd8797, [k_sha512+192];
	add.s64 	%rd1225, %rd1224, %rd8797;
	add.s64 	%rd1226, %rd1225, %rd1223;
	add.s64 	%rd1227, %rd1226, %rd1220;
	add.s64 	%rd1228, %rd1227, %rd1143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd1215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd1215;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 28;
	shf.r.wrap.b32 	%r936, %r933, %r934, 28;
	mov.b64 	%rd1229, {%r936, %r935};
	shf.l.wrap.b32 	%r937, %r933, %r934, 30;
	shf.l.wrap.b32 	%r938, %r934, %r933, 30;
	mov.b64 	%rd1230, {%r938, %r937};
	xor.b64  	%rd1231, %rd1230, %rd1229;
	shf.l.wrap.b32 	%r939, %r933, %r934, 25;
	shf.l.wrap.b32 	%r940, %r934, %r933, 25;
	mov.b64 	%rd1232, {%r940, %r939};
	xor.b64  	%rd1233, %rd1231, %rd1232;
	xor.b64  	%rd1234, %rd1215, %rd1167;
	xor.b64  	%rd1235, %rd1215, %rd1191;
	and.b64  	%rd1236, %rd1235, %rd1234;
	xor.b64  	%rd1237, %rd1236, %rd1215;
	add.s64 	%rd1238, %rd1227, %rd1237;
	add.s64 	%rd1239, %rd1238, %rd1233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd1228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd1228;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 14;
	shf.r.wrap.b32 	%r944, %r941, %r942, 14;
	mov.b64 	%rd1240, {%r944, %r943};
	shf.r.wrap.b32 	%r945, %r942, %r941, 18;
	shf.r.wrap.b32 	%r946, %r941, %r942, 18;
	mov.b64 	%rd1241, {%r946, %r945};
	xor.b64  	%rd1242, %rd1241, %rd1240;
	shf.l.wrap.b32 	%r947, %r941, %r942, 23;
	shf.l.wrap.b32 	%r948, %r942, %r941, 23;
	mov.b64 	%rd1243, {%r948, %r947};
	xor.b64  	%rd1244, %rd1242, %rd1243;
	xor.b64  	%rd1245, %rd1204, %rd1180;
	and.b64  	%rd1246, %rd1228, %rd1245;
	xor.b64  	%rd1247, %rd1246, %rd1180;
	add.s64 	%rd1248, %rd1156, %rd945;
	ld.const.u64 	%rd8796, [k_sha512+200];
	add.s64 	%rd1249, %rd1248, %rd8796;
	add.s64 	%rd1250, %rd1249, %rd1247;
	add.s64 	%rd1251, %rd1250, %rd1244;
	add.s64 	%rd1252, %rd1251, %rd1167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r949,%dummy}, %rd1239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r950}, %rd1239;
	}
	shf.r.wrap.b32 	%r951, %r950, %r949, 28;
	shf.r.wrap.b32 	%r952, %r949, %r950, 28;
	mov.b64 	%rd1253, {%r952, %r951};
	shf.l.wrap.b32 	%r953, %r949, %r950, 30;
	shf.l.wrap.b32 	%r954, %r950, %r949, 30;
	mov.b64 	%rd1254, {%r954, %r953};
	xor.b64  	%rd1255, %rd1254, %rd1253;
	shf.l.wrap.b32 	%r955, %r949, %r950, 25;
	shf.l.wrap.b32 	%r956, %r950, %r949, 25;
	mov.b64 	%rd1256, {%r956, %r955};
	xor.b64  	%rd1257, %rd1255, %rd1256;
	xor.b64  	%rd1258, %rd1239, %rd1191;
	xor.b64  	%rd1259, %rd1239, %rd1215;
	and.b64  	%rd1260, %rd1259, %rd1258;
	xor.b64  	%rd1261, %rd1260, %rd1239;
	add.s64 	%rd1262, %rd1251, %rd1261;
	add.s64 	%rd1263, %rd1262, %rd1257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd1252;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 14;
	shf.r.wrap.b32 	%r960, %r957, %r958, 14;
	mov.b64 	%rd1264, {%r960, %r959};
	shf.r.wrap.b32 	%r961, %r958, %r957, 18;
	shf.r.wrap.b32 	%r962, %r957, %r958, 18;
	mov.b64 	%rd1265, {%r962, %r961};
	xor.b64  	%rd1266, %rd1265, %rd1264;
	shf.l.wrap.b32 	%r963, %r957, %r958, 23;
	shf.l.wrap.b32 	%r964, %r958, %r957, 23;
	mov.b64 	%rd1267, {%r964, %r963};
	xor.b64  	%rd1268, %rd1266, %rd1267;
	xor.b64  	%rd1269, %rd1228, %rd1204;
	and.b64  	%rd1270, %rd1252, %rd1269;
	xor.b64  	%rd1271, %rd1270, %rd1204;
	add.s64 	%rd1272, %rd1180, %rd958;
	ld.const.u64 	%rd8795, [k_sha512+208];
	add.s64 	%rd1273, %rd1272, %rd8795;
	add.s64 	%rd1274, %rd1273, %rd1271;
	add.s64 	%rd1275, %rd1274, %rd1268;
	add.s64 	%rd1276, %rd1275, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd1263;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 28;
	shf.r.wrap.b32 	%r968, %r965, %r966, 28;
	mov.b64 	%rd1277, {%r968, %r967};
	shf.l.wrap.b32 	%r969, %r965, %r966, 30;
	shf.l.wrap.b32 	%r970, %r966, %r965, 30;
	mov.b64 	%rd1278, {%r970, %r969};
	xor.b64  	%rd1279, %rd1278, %rd1277;
	shf.l.wrap.b32 	%r971, %r965, %r966, 25;
	shf.l.wrap.b32 	%r972, %r966, %r965, 25;
	mov.b64 	%rd1280, {%r972, %r971};
	xor.b64  	%rd1281, %rd1279, %rd1280;
	xor.b64  	%rd1282, %rd1263, %rd1215;
	xor.b64  	%rd1283, %rd1263, %rd1239;
	and.b64  	%rd1284, %rd1283, %rd1282;
	xor.b64  	%rd1285, %rd1284, %rd1263;
	add.s64 	%rd1286, %rd1275, %rd1285;
	add.s64 	%rd1287, %rd1286, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd1276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r974}, %rd1276;
	}
	shf.r.wrap.b32 	%r975, %r974, %r973, 14;
	shf.r.wrap.b32 	%r976, %r973, %r974, 14;
	mov.b64 	%rd1288, {%r976, %r975};
	shf.r.wrap.b32 	%r977, %r974, %r973, 18;
	shf.r.wrap.b32 	%r978, %r973, %r974, 18;
	mov.b64 	%rd1289, {%r978, %r977};
	xor.b64  	%rd1290, %rd1289, %rd1288;
	shf.l.wrap.b32 	%r979, %r973, %r974, 23;
	shf.l.wrap.b32 	%r980, %r974, %r973, 23;
	mov.b64 	%rd1291, {%r980, %r979};
	xor.b64  	%rd1292, %rd1290, %rd1291;
	xor.b64  	%rd1293, %rd1252, %rd1228;
	and.b64  	%rd1294, %rd1276, %rd1293;
	xor.b64  	%rd1295, %rd1294, %rd1228;
	add.s64 	%rd1296, %rd1204, %rd971;
	ld.const.u64 	%rd8794, [k_sha512+216];
	add.s64 	%rd1297, %rd1296, %rd8794;
	add.s64 	%rd1298, %rd1297, %rd1295;
	add.s64 	%rd1299, %rd1298, %rd1292;
	add.s64 	%rd1300, %rd1299, %rd1215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd1287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd1287;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 28;
	shf.r.wrap.b32 	%r984, %r981, %r982, 28;
	mov.b64 	%rd1301, {%r984, %r983};
	shf.l.wrap.b32 	%r985, %r981, %r982, 30;
	shf.l.wrap.b32 	%r986, %r982, %r981, 30;
	mov.b64 	%rd1302, {%r986, %r985};
	xor.b64  	%rd1303, %rd1302, %rd1301;
	shf.l.wrap.b32 	%r987, %r981, %r982, 25;
	shf.l.wrap.b32 	%r988, %r982, %r981, 25;
	mov.b64 	%rd1304, {%r988, %r987};
	xor.b64  	%rd1305, %rd1303, %rd1304;
	xor.b64  	%rd1306, %rd1287, %rd1239;
	xor.b64  	%rd1307, %rd1287, %rd1263;
	and.b64  	%rd1308, %rd1307, %rd1306;
	xor.b64  	%rd1309, %rd1308, %rd1287;
	add.s64 	%rd1310, %rd1299, %rd1309;
	add.s64 	%rd1311, %rd1310, %rd1305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd1300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd1300;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 14;
	shf.r.wrap.b32 	%r992, %r989, %r990, 14;
	mov.b64 	%rd1312, {%r992, %r991};
	shf.r.wrap.b32 	%r993, %r990, %r989, 18;
	shf.r.wrap.b32 	%r994, %r989, %r990, 18;
	mov.b64 	%rd1313, {%r994, %r993};
	xor.b64  	%rd1314, %rd1313, %rd1312;
	shf.l.wrap.b32 	%r995, %r989, %r990, 23;
	shf.l.wrap.b32 	%r996, %r990, %r989, 23;
	mov.b64 	%rd1315, {%r996, %r995};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	xor.b64  	%rd1317, %rd1276, %rd1252;
	and.b64  	%rd1318, %rd1300, %rd1317;
	xor.b64  	%rd1319, %rd1318, %rd1252;
	add.s64 	%rd1320, %rd1228, %rd984;
	ld.const.u64 	%rd8793, [k_sha512+224];
	add.s64 	%rd1321, %rd1320, %rd8793;
	add.s64 	%rd1322, %rd1321, %rd1319;
	add.s64 	%rd1323, %rd1322, %rd1316;
	add.s64 	%rd1324, %rd1323, %rd1239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1311;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 28;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 28;
	mov.b64 	%rd1325, {%r1000, %r999};
	shf.l.wrap.b32 	%r1001, %r997, %r998, 30;
	shf.l.wrap.b32 	%r1002, %r998, %r997, 30;
	mov.b64 	%rd1326, {%r1002, %r1001};
	xor.b64  	%rd1327, %rd1326, %rd1325;
	shf.l.wrap.b32 	%r1003, %r997, %r998, 25;
	shf.l.wrap.b32 	%r1004, %r998, %r997, 25;
	mov.b64 	%rd1328, {%r1004, %r1003};
	xor.b64  	%rd1329, %rd1327, %rd1328;
	xor.b64  	%rd1330, %rd1311, %rd1263;
	xor.b64  	%rd1331, %rd1311, %rd1287;
	and.b64  	%rd1332, %rd1331, %rd1330;
	xor.b64  	%rd1333, %rd1332, %rd1311;
	add.s64 	%rd1334, %rd1323, %rd1333;
	add.s64 	%rd1335, %rd1334, %rd1329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1005,%dummy}, %rd1324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1006}, %rd1324;
	}
	shf.r.wrap.b32 	%r1007, %r1006, %r1005, 14;
	shf.r.wrap.b32 	%r1008, %r1005, %r1006, 14;
	mov.b64 	%rd1336, {%r1008, %r1007};
	shf.r.wrap.b32 	%r1009, %r1006, %r1005, 18;
	shf.r.wrap.b32 	%r1010, %r1005, %r1006, 18;
	mov.b64 	%rd1337, {%r1010, %r1009};
	xor.b64  	%rd1338, %rd1337, %rd1336;
	shf.l.wrap.b32 	%r1011, %r1005, %r1006, 23;
	shf.l.wrap.b32 	%r1012, %r1006, %r1005, 23;
	mov.b64 	%rd1339, {%r1012, %r1011};
	xor.b64  	%rd1340, %rd1338, %rd1339;
	xor.b64  	%rd1341, %rd1300, %rd1276;
	and.b64  	%rd1342, %rd1324, %rd1341;
	xor.b64  	%rd1343, %rd1342, %rd1276;
	add.s64 	%rd1344, %rd1252, %rd997;
	ld.const.u64 	%rd8792, [k_sha512+232];
	add.s64 	%rd1345, %rd1344, %rd8792;
	add.s64 	%rd1346, %rd1345, %rd1343;
	add.s64 	%rd1347, %rd1346, %rd1340;
	add.s64 	%rd1348, %rd1347, %rd1263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1013,%dummy}, %rd1335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1014}, %rd1335;
	}
	shf.r.wrap.b32 	%r1015, %r1014, %r1013, 28;
	shf.r.wrap.b32 	%r1016, %r1013, %r1014, 28;
	mov.b64 	%rd1349, {%r1016, %r1015};
	shf.l.wrap.b32 	%r1017, %r1013, %r1014, 30;
	shf.l.wrap.b32 	%r1018, %r1014, %r1013, 30;
	mov.b64 	%rd1350, {%r1018, %r1017};
	xor.b64  	%rd1351, %rd1350, %rd1349;
	shf.l.wrap.b32 	%r1019, %r1013, %r1014, 25;
	shf.l.wrap.b32 	%r1020, %r1014, %r1013, 25;
	mov.b64 	%rd1352, {%r1020, %r1019};
	xor.b64  	%rd1353, %rd1351, %rd1352;
	xor.b64  	%rd1354, %rd1335, %rd1287;
	xor.b64  	%rd1355, %rd1335, %rd1311;
	and.b64  	%rd1356, %rd1355, %rd1354;
	xor.b64  	%rd1357, %rd1356, %rd1335;
	add.s64 	%rd1358, %rd1347, %rd1357;
	add.s64 	%rd1359, %rd1358, %rd1353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1022}, %rd1348;
	}
	shf.r.wrap.b32 	%r1023, %r1022, %r1021, 14;
	shf.r.wrap.b32 	%r1024, %r1021, %r1022, 14;
	mov.b64 	%rd1360, {%r1024, %r1023};
	shf.r.wrap.b32 	%r1025, %r1022, %r1021, 18;
	shf.r.wrap.b32 	%r1026, %r1021, %r1022, 18;
	mov.b64 	%rd1361, {%r1026, %r1025};
	xor.b64  	%rd1362, %rd1361, %rd1360;
	shf.l.wrap.b32 	%r1027, %r1021, %r1022, 23;
	shf.l.wrap.b32 	%r1028, %r1022, %r1021, 23;
	mov.b64 	%rd1363, {%r1028, %r1027};
	xor.b64  	%rd1364, %rd1362, %rd1363;
	xor.b64  	%rd1365, %rd1324, %rd1300;
	and.b64  	%rd1366, %rd1348, %rd1365;
	xor.b64  	%rd1367, %rd1366, %rd1300;
	add.s64 	%rd1368, %rd1276, %rd1010;
	ld.const.u64 	%rd8791, [k_sha512+240];
	add.s64 	%rd1369, %rd1368, %rd8791;
	add.s64 	%rd1370, %rd1369, %rd1367;
	add.s64 	%rd1371, %rd1370, %rd1364;
	add.s64 	%rd1372, %rd1371, %rd1287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd1359;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 28;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 28;
	mov.b64 	%rd1373, {%r1032, %r1031};
	shf.l.wrap.b32 	%r1033, %r1029, %r1030, 30;
	shf.l.wrap.b32 	%r1034, %r1030, %r1029, 30;
	mov.b64 	%rd1374, {%r1034, %r1033};
	xor.b64  	%rd1375, %rd1374, %rd1373;
	shf.l.wrap.b32 	%r1035, %r1029, %r1030, 25;
	shf.l.wrap.b32 	%r1036, %r1030, %r1029, 25;
	mov.b64 	%rd1376, {%r1036, %r1035};
	xor.b64  	%rd1377, %rd1375, %rd1376;
	xor.b64  	%rd1378, %rd1359, %rd1311;
	xor.b64  	%rd1379, %rd1359, %rd1335;
	and.b64  	%rd1380, %rd1379, %rd1378;
	xor.b64  	%rd1381, %rd1380, %rd1359;
	add.s64 	%rd1382, %rd1371, %rd1381;
	add.s64 	%rd1383, %rd1382, %rd1377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd1372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd1372;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 14;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 14;
	mov.b64 	%rd1384, {%r1040, %r1039};
	shf.r.wrap.b32 	%r1041, %r1038, %r1037, 18;
	shf.r.wrap.b32 	%r1042, %r1037, %r1038, 18;
	mov.b64 	%rd1385, {%r1042, %r1041};
	xor.b64  	%rd1386, %rd1385, %rd1384;
	shf.l.wrap.b32 	%r1043, %r1037, %r1038, 23;
	shf.l.wrap.b32 	%r1044, %r1038, %r1037, 23;
	mov.b64 	%rd1387, {%r1044, %r1043};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	xor.b64  	%rd1389, %rd1348, %rd1324;
	and.b64  	%rd1390, %rd1372, %rd1389;
	xor.b64  	%rd1391, %rd1390, %rd1324;
	add.s64 	%rd1392, %rd1300, %rd1023;
	ld.const.u64 	%rd8790, [k_sha512+248];
	add.s64 	%rd1393, %rd1392, %rd8790;
	add.s64 	%rd1394, %rd1393, %rd1391;
	add.s64 	%rd1395, %rd1394, %rd1388;
	add.s64 	%rd1396, %rd1395, %rd1311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd1383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd1383;
	}
	shf.r.wrap.b32 	%r1047, %r1046, %r1045, 28;
	shf.r.wrap.b32 	%r1048, %r1045, %r1046, 28;
	mov.b64 	%rd1397, {%r1048, %r1047};
	shf.l.wrap.b32 	%r1049, %r1045, %r1046, 30;
	shf.l.wrap.b32 	%r1050, %r1046, %r1045, 30;
	mov.b64 	%rd1398, {%r1050, %r1049};
	xor.b64  	%rd1399, %rd1398, %rd1397;
	shf.l.wrap.b32 	%r1051, %r1045, %r1046, 25;
	shf.l.wrap.b32 	%r1052, %r1046, %r1045, 25;
	mov.b64 	%rd1400, {%r1052, %r1051};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	xor.b64  	%rd1402, %rd1383, %rd1335;
	xor.b64  	%rd1403, %rd1383, %rd1359;
	and.b64  	%rd1404, %rd1403, %rd1402;
	xor.b64  	%rd1405, %rd1404, %rd1383;
	add.s64 	%rd1406, %rd1395, %rd1405;
	add.s64 	%rd1407, %rd1406, %rd1401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd1010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd1010;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 19;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 19;
	mov.b64 	%rd1408, {%r1056, %r1055};
	shf.l.wrap.b32 	%r1057, %r1053, %r1054, 3;
	shf.l.wrap.b32 	%r1058, %r1054, %r1053, 3;
	mov.b64 	%rd1409, {%r1058, %r1057};
	shr.u64 	%rd1410, %rd1010, 6;
	xor.b64  	%rd1411, %rd1408, %rd1410;
	xor.b64  	%rd1412, %rd1411, %rd1409;
	shf.r.wrap.b32 	%r1059, %r648, %r647, 1;
	shf.r.wrap.b32 	%r1060, %r647, %r648, 1;
	mov.b64 	%rd1413, {%r1060, %r1059};
	shf.r.wrap.b32 	%r1061, %r648, %r647, 8;
	shf.r.wrap.b32 	%r1062, %r647, %r648, 8;
	mov.b64 	%rd1414, {%r1062, %r1061};
	shr.u64 	%rd1415, %rd841, 7;
	xor.b64  	%rd1416, %rd1413, %rd1415;
	xor.b64  	%rd1417, %rd1416, %rd1414;
	add.s64 	%rd1418, %rd945, %rd828;
	add.s64 	%rd1419, %rd1418, %rd1412;
	add.s64 	%rd1420, %rd1419, %rd1417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd1023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd1023;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 19;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 19;
	mov.b64 	%rd1421, {%r1066, %r1065};
	shf.l.wrap.b32 	%r1067, %r1063, %r1064, 3;
	shf.l.wrap.b32 	%r1068, %r1064, %r1063, 3;
	mov.b64 	%rd1422, {%r1068, %r1067};
	shr.u64 	%rd1423, %rd1023, 6;
	xor.b64  	%rd1424, %rd1421, %rd1423;
	xor.b64  	%rd1425, %rd1424, %rd1422;
	shf.r.wrap.b32 	%r1069, %r660, %r659, 1;
	shf.r.wrap.b32 	%r1070, %r659, %r660, 1;
	mov.b64 	%rd1426, {%r1070, %r1069};
	shf.r.wrap.b32 	%r1071, %r660, %r659, 8;
	shf.r.wrap.b32 	%r1072, %r659, %r660, 8;
	mov.b64 	%rd1427, {%r1072, %r1071};
	shr.u64 	%rd1428, %rd854, 7;
	xor.b64  	%rd1429, %rd1426, %rd1428;
	xor.b64  	%rd1430, %rd1429, %rd1427;
	add.s64 	%rd1431, %rd958, %rd841;
	add.s64 	%rd1432, %rd1431, %rd1425;
	add.s64 	%rd1433, %rd1432, %rd1430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1073,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1074}, %rd1420;
	}
	shf.r.wrap.b32 	%r1075, %r1074, %r1073, 19;
	shf.r.wrap.b32 	%r1076, %r1073, %r1074, 19;
	mov.b64 	%rd1434, {%r1076, %r1075};
	shf.l.wrap.b32 	%r1077, %r1073, %r1074, 3;
	shf.l.wrap.b32 	%r1078, %r1074, %r1073, 3;
	mov.b64 	%rd1435, {%r1078, %r1077};
	shr.u64 	%rd1436, %rd1420, 6;
	xor.b64  	%rd1437, %rd1434, %rd1436;
	xor.b64  	%rd1438, %rd1437, %rd1435;
	shf.r.wrap.b32 	%r1079, %r672, %r671, 1;
	shf.r.wrap.b32 	%r1080, %r671, %r672, 1;
	mov.b64 	%rd1439, {%r1080, %r1079};
	shf.r.wrap.b32 	%r1081, %r672, %r671, 8;
	shf.r.wrap.b32 	%r1082, %r671, %r672, 8;
	mov.b64 	%rd1440, {%r1082, %r1081};
	shr.u64 	%rd1441, %rd867, 7;
	xor.b64  	%rd1442, %rd1439, %rd1441;
	xor.b64  	%rd1443, %rd1442, %rd1440;
	add.s64 	%rd1444, %rd971, %rd854;
	add.s64 	%rd1445, %rd1444, %rd1438;
	add.s64 	%rd1446, %rd1445, %rd1443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1083,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1084}, %rd1433;
	}
	shf.r.wrap.b32 	%r1085, %r1084, %r1083, 19;
	shf.r.wrap.b32 	%r1086, %r1083, %r1084, 19;
	mov.b64 	%rd1447, {%r1086, %r1085};
	shf.l.wrap.b32 	%r1087, %r1083, %r1084, 3;
	shf.l.wrap.b32 	%r1088, %r1084, %r1083, 3;
	mov.b64 	%rd1448, {%r1088, %r1087};
	shr.u64 	%rd1449, %rd1433, 6;
	xor.b64  	%rd1450, %rd1447, %rd1449;
	xor.b64  	%rd1451, %rd1450, %rd1448;
	shf.r.wrap.b32 	%r1089, %r684, %r683, 1;
	shf.r.wrap.b32 	%r1090, %r683, %r684, 1;
	mov.b64 	%rd1452, {%r1090, %r1089};
	shf.r.wrap.b32 	%r1091, %r684, %r683, 8;
	shf.r.wrap.b32 	%r1092, %r683, %r684, 8;
	mov.b64 	%rd1453, {%r1092, %r1091};
	shr.u64 	%rd1454, %rd880, 7;
	xor.b64  	%rd1455, %rd1452, %rd1454;
	xor.b64  	%rd1456, %rd1455, %rd1453;
	add.s64 	%rd1457, %rd984, %rd867;
	add.s64 	%rd1458, %rd1457, %rd1451;
	add.s64 	%rd1459, %rd1458, %rd1456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1093,%dummy}, %rd1446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1094}, %rd1446;
	}
	shf.r.wrap.b32 	%r1095, %r1094, %r1093, 19;
	shf.r.wrap.b32 	%r1096, %r1093, %r1094, 19;
	mov.b64 	%rd1460, {%r1096, %r1095};
	shf.l.wrap.b32 	%r1097, %r1093, %r1094, 3;
	shf.l.wrap.b32 	%r1098, %r1094, %r1093, 3;
	mov.b64 	%rd1461, {%r1098, %r1097};
	shr.u64 	%rd1462, %rd1446, 6;
	xor.b64  	%rd1463, %rd1460, %rd1462;
	xor.b64  	%rd1464, %rd1463, %rd1461;
	shf.r.wrap.b32 	%r1099, %r696, %r695, 1;
	shf.r.wrap.b32 	%r1100, %r695, %r696, 1;
	mov.b64 	%rd1465, {%r1100, %r1099};
	shf.r.wrap.b32 	%r1101, %r696, %r695, 8;
	shf.r.wrap.b32 	%r1102, %r695, %r696, 8;
	mov.b64 	%rd1466, {%r1102, %r1101};
	shr.u64 	%rd1467, %rd893, 7;
	xor.b64  	%rd1468, %rd1465, %rd1467;
	xor.b64  	%rd1469, %rd1468, %rd1466;
	add.s64 	%rd1470, %rd997, %rd880;
	add.s64 	%rd1471, %rd1470, %rd1464;
	add.s64 	%rd1472, %rd1471, %rd1469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1103,%dummy}, %rd1459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1104}, %rd1459;
	}
	shf.r.wrap.b32 	%r1105, %r1104, %r1103, 19;
	shf.r.wrap.b32 	%r1106, %r1103, %r1104, 19;
	mov.b64 	%rd1473, {%r1106, %r1105};
	shf.l.wrap.b32 	%r1107, %r1103, %r1104, 3;
	shf.l.wrap.b32 	%r1108, %r1104, %r1103, 3;
	mov.b64 	%rd1474, {%r1108, %r1107};
	shr.u64 	%rd1475, %rd1459, 6;
	xor.b64  	%rd1476, %rd1473, %rd1475;
	xor.b64  	%rd1477, %rd1476, %rd1474;
	shf.r.wrap.b32 	%r1109, %r708, %r707, 1;
	shf.r.wrap.b32 	%r1110, %r707, %r708, 1;
	mov.b64 	%rd1478, {%r1110, %r1109};
	shf.r.wrap.b32 	%r1111, %r708, %r707, 8;
	shf.r.wrap.b32 	%r1112, %r707, %r708, 8;
	mov.b64 	%rd1479, {%r1112, %r1111};
	shr.u64 	%rd1480, %rd906, 7;
	xor.b64  	%rd1481, %rd1478, %rd1480;
	xor.b64  	%rd1482, %rd1481, %rd1479;
	add.s64 	%rd1483, %rd1010, %rd893;
	add.s64 	%rd1484, %rd1483, %rd1477;
	add.s64 	%rd1485, %rd1484, %rd1482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd1472;
	}
	shf.r.wrap.b32 	%r1115, %r1114, %r1113, 19;
	shf.r.wrap.b32 	%r1116, %r1113, %r1114, 19;
	mov.b64 	%rd1486, {%r1116, %r1115};
	shf.l.wrap.b32 	%r1117, %r1113, %r1114, 3;
	shf.l.wrap.b32 	%r1118, %r1114, %r1113, 3;
	mov.b64 	%rd1487, {%r1118, %r1117};
	shr.u64 	%rd1488, %rd1472, 6;
	xor.b64  	%rd1489, %rd1486, %rd1488;
	xor.b64  	%rd1490, %rd1489, %rd1487;
	shf.r.wrap.b32 	%r1119, %r720, %r719, 1;
	shf.r.wrap.b32 	%r1120, %r719, %r720, 1;
	mov.b64 	%rd1491, {%r1120, %r1119};
	shf.r.wrap.b32 	%r1121, %r720, %r719, 8;
	shf.r.wrap.b32 	%r1122, %r719, %r720, 8;
	mov.b64 	%rd1492, {%r1122, %r1121};
	shr.u64 	%rd1493, %rd919, 7;
	xor.b64  	%rd1494, %rd1491, %rd1493;
	xor.b64  	%rd1495, %rd1494, %rd1492;
	add.s64 	%rd1496, %rd1023, %rd906;
	add.s64 	%rd1497, %rd1496, %rd1490;
	add.s64 	%rd1498, %rd1497, %rd1495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1123,%dummy}, %rd1485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1124}, %rd1485;
	}
	shf.r.wrap.b32 	%r1125, %r1124, %r1123, 19;
	shf.r.wrap.b32 	%r1126, %r1123, %r1124, 19;
	mov.b64 	%rd1499, {%r1126, %r1125};
	shf.l.wrap.b32 	%r1127, %r1123, %r1124, 3;
	shf.l.wrap.b32 	%r1128, %r1124, %r1123, 3;
	mov.b64 	%rd1500, {%r1128, %r1127};
	shr.u64 	%rd1501, %rd1485, 6;
	xor.b64  	%rd1502, %rd1499, %rd1501;
	xor.b64  	%rd1503, %rd1502, %rd1500;
	shf.r.wrap.b32 	%r1129, %r732, %r731, 1;
	shf.r.wrap.b32 	%r1130, %r731, %r732, 1;
	mov.b64 	%rd1504, {%r1130, %r1129};
	shf.r.wrap.b32 	%r1131, %r732, %r731, 8;
	shf.r.wrap.b32 	%r1132, %r731, %r732, 8;
	mov.b64 	%rd1505, {%r1132, %r1131};
	shr.u64 	%rd1506, %rd932, 7;
	xor.b64  	%rd1507, %rd1504, %rd1506;
	xor.b64  	%rd1508, %rd1507, %rd1505;
	add.s64 	%rd1509, %rd1420, %rd919;
	add.s64 	%rd1510, %rd1509, %rd1503;
	add.s64 	%rd1511, %rd1510, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1133,%dummy}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1134}, %rd1498;
	}
	shf.r.wrap.b32 	%r1135, %r1134, %r1133, 19;
	shf.r.wrap.b32 	%r1136, %r1133, %r1134, 19;
	mov.b64 	%rd1512, {%r1136, %r1135};
	shf.l.wrap.b32 	%r1137, %r1133, %r1134, 3;
	shf.l.wrap.b32 	%r1138, %r1134, %r1133, 3;
	mov.b64 	%rd1513, {%r1138, %r1137};
	shr.u64 	%rd1514, %rd1498, 6;
	xor.b64  	%rd1515, %rd1512, %rd1514;
	xor.b64  	%rd1516, %rd1515, %rd1513;
	shf.r.wrap.b32 	%r1139, %r744, %r743, 1;
	shf.r.wrap.b32 	%r1140, %r743, %r744, 1;
	mov.b64 	%rd1517, {%r1140, %r1139};
	shf.r.wrap.b32 	%r1141, %r744, %r743, 8;
	shf.r.wrap.b32 	%r1142, %r743, %r744, 8;
	mov.b64 	%rd1518, {%r1142, %r1141};
	shr.u64 	%rd1519, %rd945, 7;
	xor.b64  	%rd1520, %rd1517, %rd1519;
	xor.b64  	%rd1521, %rd1520, %rd1518;
	add.s64 	%rd1522, %rd1433, %rd932;
	add.s64 	%rd1523, %rd1522, %rd1516;
	add.s64 	%rd1524, %rd1523, %rd1521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1143,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1144}, %rd1511;
	}
	shf.r.wrap.b32 	%r1145, %r1144, %r1143, 19;
	shf.r.wrap.b32 	%r1146, %r1143, %r1144, 19;
	mov.b64 	%rd1525, {%r1146, %r1145};
	shf.l.wrap.b32 	%r1147, %r1143, %r1144, 3;
	shf.l.wrap.b32 	%r1148, %r1144, %r1143, 3;
	mov.b64 	%rd1526, {%r1148, %r1147};
	shr.u64 	%rd1527, %rd1511, 6;
	xor.b64  	%rd1528, %rd1525, %rd1527;
	xor.b64  	%rd1529, %rd1528, %rd1526;
	shf.r.wrap.b32 	%r1149, %r756, %r755, 1;
	shf.r.wrap.b32 	%r1150, %r755, %r756, 1;
	mov.b64 	%rd1530, {%r1150, %r1149};
	shf.r.wrap.b32 	%r1151, %r756, %r755, 8;
	shf.r.wrap.b32 	%r1152, %r755, %r756, 8;
	mov.b64 	%rd1531, {%r1152, %r1151};
	shr.u64 	%rd1532, %rd958, 7;
	xor.b64  	%rd1533, %rd1530, %rd1532;
	xor.b64  	%rd1534, %rd1533, %rd1531;
	add.s64 	%rd1535, %rd1446, %rd945;
	add.s64 	%rd1536, %rd1535, %rd1529;
	add.s64 	%rd1537, %rd1536, %rd1534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1153,%dummy}, %rd1524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1154}, %rd1524;
	}
	shf.r.wrap.b32 	%r1155, %r1154, %r1153, 19;
	shf.r.wrap.b32 	%r1156, %r1153, %r1154, 19;
	mov.b64 	%rd1538, {%r1156, %r1155};
	shf.l.wrap.b32 	%r1157, %r1153, %r1154, 3;
	shf.l.wrap.b32 	%r1158, %r1154, %r1153, 3;
	mov.b64 	%rd1539, {%r1158, %r1157};
	shr.u64 	%rd1540, %rd1524, 6;
	xor.b64  	%rd1541, %rd1538, %rd1540;
	xor.b64  	%rd1542, %rd1541, %rd1539;
	shf.r.wrap.b32 	%r1159, %r768, %r767, 1;
	shf.r.wrap.b32 	%r1160, %r767, %r768, 1;
	mov.b64 	%rd1543, {%r1160, %r1159};
	shf.r.wrap.b32 	%r1161, %r768, %r767, 8;
	shf.r.wrap.b32 	%r1162, %r767, %r768, 8;
	mov.b64 	%rd1544, {%r1162, %r1161};
	shr.u64 	%rd1545, %rd971, 7;
	xor.b64  	%rd1546, %rd1543, %rd1545;
	xor.b64  	%rd1547, %rd1546, %rd1544;
	add.s64 	%rd1548, %rd1459, %rd958;
	add.s64 	%rd1549, %rd1548, %rd1542;
	add.s64 	%rd1550, %rd1549, %rd1547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1163,%dummy}, %rd1537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1164}, %rd1537;
	}
	shf.r.wrap.b32 	%r1165, %r1164, %r1163, 19;
	shf.r.wrap.b32 	%r1166, %r1163, %r1164, 19;
	mov.b64 	%rd1551, {%r1166, %r1165};
	shf.l.wrap.b32 	%r1167, %r1163, %r1164, 3;
	shf.l.wrap.b32 	%r1168, %r1164, %r1163, 3;
	mov.b64 	%rd1552, {%r1168, %r1167};
	shr.u64 	%rd1553, %rd1537, 6;
	xor.b64  	%rd1554, %rd1551, %rd1553;
	xor.b64  	%rd1555, %rd1554, %rd1552;
	shf.r.wrap.b32 	%r1169, %r778, %r777, 1;
	shf.r.wrap.b32 	%r1170, %r777, %r778, 1;
	mov.b64 	%rd1556, {%r1170, %r1169};
	shf.r.wrap.b32 	%r1171, %r778, %r777, 8;
	shf.r.wrap.b32 	%r1172, %r777, %r778, 8;
	mov.b64 	%rd1557, {%r1172, %r1171};
	shr.u64 	%rd1558, %rd984, 7;
	xor.b64  	%rd1559, %rd1556, %rd1558;
	xor.b64  	%rd1560, %rd1559, %rd1557;
	add.s64 	%rd1561, %rd1472, %rd971;
	add.s64 	%rd1562, %rd1561, %rd1555;
	add.s64 	%rd1563, %rd1562, %rd1560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1550;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 19;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 19;
	mov.b64 	%rd1564, {%r1176, %r1175};
	shf.l.wrap.b32 	%r1177, %r1173, %r1174, 3;
	shf.l.wrap.b32 	%r1178, %r1174, %r1173, 3;
	mov.b64 	%rd1565, {%r1178, %r1177};
	shr.u64 	%rd1566, %rd1550, 6;
	xor.b64  	%rd1567, %rd1564, %rd1566;
	xor.b64  	%rd1568, %rd1567, %rd1565;
	shf.r.wrap.b32 	%r1179, %r788, %r787, 1;
	shf.r.wrap.b32 	%r1180, %r787, %r788, 1;
	mov.b64 	%rd1569, {%r1180, %r1179};
	shf.r.wrap.b32 	%r1181, %r788, %r787, 8;
	shf.r.wrap.b32 	%r1182, %r787, %r788, 8;
	mov.b64 	%rd1570, {%r1182, %r1181};
	shr.u64 	%rd1571, %rd997, 7;
	xor.b64  	%rd1572, %rd1569, %rd1571;
	xor.b64  	%rd1573, %rd1572, %rd1570;
	add.s64 	%rd1574, %rd1485, %rd984;
	add.s64 	%rd1575, %rd1574, %rd1568;
	add.s64 	%rd1576, %rd1575, %rd1573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1183,%dummy}, %rd1563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1184}, %rd1563;
	}
	shf.r.wrap.b32 	%r1185, %r1184, %r1183, 19;
	shf.r.wrap.b32 	%r1186, %r1183, %r1184, 19;
	mov.b64 	%rd1577, {%r1186, %r1185};
	shf.l.wrap.b32 	%r1187, %r1183, %r1184, 3;
	shf.l.wrap.b32 	%r1188, %r1184, %r1183, 3;
	mov.b64 	%rd1578, {%r1188, %r1187};
	shr.u64 	%rd1579, %rd1563, 6;
	xor.b64  	%rd1580, %rd1577, %rd1579;
	xor.b64  	%rd1581, %rd1580, %rd1578;
	shf.r.wrap.b32 	%r1189, %r1054, %r1053, 1;
	shf.r.wrap.b32 	%r1190, %r1053, %r1054, 1;
	mov.b64 	%rd1582, {%r1190, %r1189};
	shf.r.wrap.b32 	%r1191, %r1054, %r1053, 8;
	shf.r.wrap.b32 	%r1192, %r1053, %r1054, 8;
	mov.b64 	%rd1583, {%r1192, %r1191};
	shr.u64 	%rd1584, %rd1010, 7;
	xor.b64  	%rd1585, %rd1582, %rd1584;
	xor.b64  	%rd1586, %rd1585, %rd1583;
	add.s64 	%rd1587, %rd1498, %rd997;
	add.s64 	%rd1588, %rd1587, %rd1581;
	add.s64 	%rd1589, %rd1588, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1193,%dummy}, %rd1576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1194}, %rd1576;
	}
	shf.r.wrap.b32 	%r1195, %r1194, %r1193, 19;
	shf.r.wrap.b32 	%r1196, %r1193, %r1194, 19;
	mov.b64 	%rd1590, {%r1196, %r1195};
	shf.l.wrap.b32 	%r1197, %r1193, %r1194, 3;
	shf.l.wrap.b32 	%r1198, %r1194, %r1193, 3;
	mov.b64 	%rd1591, {%r1198, %r1197};
	shr.u64 	%rd1592, %rd1576, 6;
	xor.b64  	%rd1593, %rd1590, %rd1592;
	xor.b64  	%rd1594, %rd1593, %rd1591;
	shf.r.wrap.b32 	%r1199, %r1064, %r1063, 1;
	shf.r.wrap.b32 	%r1200, %r1063, %r1064, 1;
	mov.b64 	%rd1595, {%r1200, %r1199};
	shf.r.wrap.b32 	%r1201, %r1064, %r1063, 8;
	shf.r.wrap.b32 	%r1202, %r1063, %r1064, 8;
	mov.b64 	%rd1596, {%r1202, %r1201};
	shr.u64 	%rd1597, %rd1023, 7;
	xor.b64  	%rd1598, %rd1595, %rd1597;
	xor.b64  	%rd1599, %rd1598, %rd1596;
	add.s64 	%rd1600, %rd1511, %rd1010;
	add.s64 	%rd1601, %rd1600, %rd1594;
	add.s64 	%rd1602, %rd1601, %rd1599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1203,%dummy}, %rd1589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1204}, %rd1589;
	}
	shf.r.wrap.b32 	%r1205, %r1204, %r1203, 19;
	shf.r.wrap.b32 	%r1206, %r1203, %r1204, 19;
	mov.b64 	%rd1603, {%r1206, %r1205};
	shf.l.wrap.b32 	%r1207, %r1203, %r1204, 3;
	shf.l.wrap.b32 	%r1208, %r1204, %r1203, 3;
	mov.b64 	%rd1604, {%r1208, %r1207};
	shr.u64 	%rd1605, %rd1589, 6;
	xor.b64  	%rd1606, %rd1603, %rd1605;
	xor.b64  	%rd1607, %rd1606, %rd1604;
	shf.r.wrap.b32 	%r1209, %r1074, %r1073, 1;
	shf.r.wrap.b32 	%r1210, %r1073, %r1074, 1;
	mov.b64 	%rd1608, {%r1210, %r1209};
	shf.r.wrap.b32 	%r1211, %r1074, %r1073, 8;
	shf.r.wrap.b32 	%r1212, %r1073, %r1074, 8;
	mov.b64 	%rd1609, {%r1212, %r1211};
	shr.u64 	%rd1610, %rd1420, 7;
	xor.b64  	%rd1611, %rd1608, %rd1610;
	xor.b64  	%rd1612, %rd1611, %rd1609;
	add.s64 	%rd1613, %rd1524, %rd1023;
	add.s64 	%rd1614, %rd1613, %rd1607;
	add.s64 	%rd1615, %rd1614, %rd1612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd1396;
	}
	shf.r.wrap.b32 	%r1215, %r1214, %r1213, 14;
	shf.r.wrap.b32 	%r1216, %r1213, %r1214, 14;
	mov.b64 	%rd1616, {%r1216, %r1215};
	shf.r.wrap.b32 	%r1217, %r1214, %r1213, 18;
	shf.r.wrap.b32 	%r1218, %r1213, %r1214, 18;
	mov.b64 	%rd1617, {%r1218, %r1217};
	xor.b64  	%rd1618, %rd1617, %rd1616;
	shf.l.wrap.b32 	%r1219, %r1213, %r1214, 23;
	shf.l.wrap.b32 	%r1220, %r1214, %r1213, 23;
	mov.b64 	%rd1619, {%r1220, %r1219};
	xor.b64  	%rd1620, %rd1618, %rd1619;
	xor.b64  	%rd1621, %rd1372, %rd1348;
	and.b64  	%rd1622, %rd1621, %rd1396;
	xor.b64  	%rd1623, %rd1622, %rd1348;
	add.s64 	%rd1624, %rd1623, %rd1324;
	add.s64 	%rd1625, %rd1624, %rd1420;
	ld.const.u64 	%rd8789, [k_sha512+256];
	add.s64 	%rd1626, %rd1625, %rd8789;
	add.s64 	%rd1627, %rd1626, %rd1620;
	add.s64 	%rd1628, %rd1627, %rd1335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd1407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd1407;
	}
	shf.r.wrap.b32 	%r1223, %r1222, %r1221, 28;
	shf.r.wrap.b32 	%r1224, %r1221, %r1222, 28;
	mov.b64 	%rd1629, {%r1224, %r1223};
	shf.l.wrap.b32 	%r1225, %r1221, %r1222, 30;
	shf.l.wrap.b32 	%r1226, %r1222, %r1221, 30;
	mov.b64 	%rd1630, {%r1226, %r1225};
	xor.b64  	%rd1631, %rd1630, %rd1629;
	shf.l.wrap.b32 	%r1227, %r1221, %r1222, 25;
	shf.l.wrap.b32 	%r1228, %r1222, %r1221, 25;
	mov.b64 	%rd1632, {%r1228, %r1227};
	xor.b64  	%rd1633, %rd1631, %rd1632;
	xor.b64  	%rd1634, %rd1407, %rd1359;
	xor.b64  	%rd1635, %rd1407, %rd1383;
	and.b64  	%rd1636, %rd1635, %rd1634;
	xor.b64  	%rd1637, %rd1636, %rd1407;
	add.s64 	%rd1638, %rd1627, %rd1637;
	add.s64 	%rd1639, %rd1638, %rd1633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1230}, %rd1628;
	}
	shf.r.wrap.b32 	%r1231, %r1230, %r1229, 14;
	shf.r.wrap.b32 	%r1232, %r1229, %r1230, 14;
	mov.b64 	%rd1640, {%r1232, %r1231};
	shf.r.wrap.b32 	%r1233, %r1230, %r1229, 18;
	shf.r.wrap.b32 	%r1234, %r1229, %r1230, 18;
	mov.b64 	%rd1641, {%r1234, %r1233};
	xor.b64  	%rd1642, %rd1641, %rd1640;
	shf.l.wrap.b32 	%r1235, %r1229, %r1230, 23;
	shf.l.wrap.b32 	%r1236, %r1230, %r1229, 23;
	mov.b64 	%rd1643, {%r1236, %r1235};
	xor.b64  	%rd1644, %rd1642, %rd1643;
	xor.b64  	%rd1645, %rd1396, %rd1372;
	and.b64  	%rd1646, %rd1628, %rd1645;
	xor.b64  	%rd1647, %rd1646, %rd1372;
	add.s64 	%rd1648, %rd1433, %rd1348;
	ld.const.u64 	%rd8788, [k_sha512+264];
	add.s64 	%rd1649, %rd1648, %rd8788;
	add.s64 	%rd1650, %rd1649, %rd1647;
	add.s64 	%rd1651, %rd1650, %rd1644;
	add.s64 	%rd1652, %rd1651, %rd1359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1237,%dummy}, %rd1639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1238}, %rd1639;
	}
	shf.r.wrap.b32 	%r1239, %r1238, %r1237, 28;
	shf.r.wrap.b32 	%r1240, %r1237, %r1238, 28;
	mov.b64 	%rd1653, {%r1240, %r1239};
	shf.l.wrap.b32 	%r1241, %r1237, %r1238, 30;
	shf.l.wrap.b32 	%r1242, %r1238, %r1237, 30;
	mov.b64 	%rd1654, {%r1242, %r1241};
	xor.b64  	%rd1655, %rd1654, %rd1653;
	shf.l.wrap.b32 	%r1243, %r1237, %r1238, 25;
	shf.l.wrap.b32 	%r1244, %r1238, %r1237, 25;
	mov.b64 	%rd1656, {%r1244, %r1243};
	xor.b64  	%rd1657, %rd1655, %rd1656;
	xor.b64  	%rd1658, %rd1639, %rd1383;
	xor.b64  	%rd1659, %rd1639, %rd1407;
	and.b64  	%rd1660, %rd1659, %rd1658;
	xor.b64  	%rd1661, %rd1660, %rd1639;
	add.s64 	%rd1662, %rd1651, %rd1661;
	add.s64 	%rd1663, %rd1662, %rd1657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd1652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd1652;
	}
	shf.r.wrap.b32 	%r1247, %r1246, %r1245, 14;
	shf.r.wrap.b32 	%r1248, %r1245, %r1246, 14;
	mov.b64 	%rd1664, {%r1248, %r1247};
	shf.r.wrap.b32 	%r1249, %r1246, %r1245, 18;
	shf.r.wrap.b32 	%r1250, %r1245, %r1246, 18;
	mov.b64 	%rd1665, {%r1250, %r1249};
	xor.b64  	%rd1666, %rd1665, %rd1664;
	shf.l.wrap.b32 	%r1251, %r1245, %r1246, 23;
	shf.l.wrap.b32 	%r1252, %r1246, %r1245, 23;
	mov.b64 	%rd1667, {%r1252, %r1251};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	xor.b64  	%rd1669, %rd1628, %rd1396;
	and.b64  	%rd1670, %rd1652, %rd1669;
	xor.b64  	%rd1671, %rd1670, %rd1396;
	add.s64 	%rd1672, %rd1446, %rd1372;
	ld.const.u64 	%rd8787, [k_sha512+272];
	add.s64 	%rd1673, %rd1672, %rd8787;
	add.s64 	%rd1674, %rd1673, %rd1671;
	add.s64 	%rd1675, %rd1674, %rd1668;
	add.s64 	%rd1676, %rd1675, %rd1383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd1663;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 28;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 28;
	mov.b64 	%rd1677, {%r1256, %r1255};
	shf.l.wrap.b32 	%r1257, %r1253, %r1254, 30;
	shf.l.wrap.b32 	%r1258, %r1254, %r1253, 30;
	mov.b64 	%rd1678, {%r1258, %r1257};
	xor.b64  	%rd1679, %rd1678, %rd1677;
	shf.l.wrap.b32 	%r1259, %r1253, %r1254, 25;
	shf.l.wrap.b32 	%r1260, %r1254, %r1253, 25;
	mov.b64 	%rd1680, {%r1260, %r1259};
	xor.b64  	%rd1681, %rd1679, %rd1680;
	xor.b64  	%rd1682, %rd1663, %rd1407;
	xor.b64  	%rd1683, %rd1663, %rd1639;
	and.b64  	%rd1684, %rd1683, %rd1682;
	xor.b64  	%rd1685, %rd1684, %rd1663;
	add.s64 	%rd1686, %rd1675, %rd1685;
	add.s64 	%rd1687, %rd1686, %rd1681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1676;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 14;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 14;
	mov.b64 	%rd1688, {%r1264, %r1263};
	shf.r.wrap.b32 	%r1265, %r1262, %r1261, 18;
	shf.r.wrap.b32 	%r1266, %r1261, %r1262, 18;
	mov.b64 	%rd1689, {%r1266, %r1265};
	xor.b64  	%rd1690, %rd1689, %rd1688;
	shf.l.wrap.b32 	%r1267, %r1261, %r1262, 23;
	shf.l.wrap.b32 	%r1268, %r1262, %r1261, 23;
	mov.b64 	%rd1691, {%r1268, %r1267};
	xor.b64  	%rd1692, %rd1690, %rd1691;
	xor.b64  	%rd1693, %rd1652, %rd1628;
	and.b64  	%rd1694, %rd1676, %rd1693;
	xor.b64  	%rd1695, %rd1694, %rd1628;
	add.s64 	%rd1696, %rd1459, %rd1396;
	ld.const.u64 	%rd8786, [k_sha512+280];
	add.s64 	%rd1697, %rd1696, %rd8786;
	add.s64 	%rd1698, %rd1697, %rd1695;
	add.s64 	%rd1699, %rd1698, %rd1692;
	add.s64 	%rd1700, %rd1699, %rd1407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd1687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd1687;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 28;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 28;
	mov.b64 	%rd1701, {%r1272, %r1271};
	shf.l.wrap.b32 	%r1273, %r1269, %r1270, 30;
	shf.l.wrap.b32 	%r1274, %r1270, %r1269, 30;
	mov.b64 	%rd1702, {%r1274, %r1273};
	xor.b64  	%rd1703, %rd1702, %rd1701;
	shf.l.wrap.b32 	%r1275, %r1269, %r1270, 25;
	shf.l.wrap.b32 	%r1276, %r1270, %r1269, 25;
	mov.b64 	%rd1704, {%r1276, %r1275};
	xor.b64  	%rd1705, %rd1703, %rd1704;
	xor.b64  	%rd1706, %rd1687, %rd1639;
	xor.b64  	%rd1707, %rd1687, %rd1663;
	and.b64  	%rd1708, %rd1707, %rd1706;
	xor.b64  	%rd1709, %rd1708, %rd1687;
	add.s64 	%rd1710, %rd1699, %rd1709;
	add.s64 	%rd1711, %rd1710, %rd1705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1278}, %rd1700;
	}
	shf.r.wrap.b32 	%r1279, %r1278, %r1277, 14;
	shf.r.wrap.b32 	%r1280, %r1277, %r1278, 14;
	mov.b64 	%rd1712, {%r1280, %r1279};
	shf.r.wrap.b32 	%r1281, %r1278, %r1277, 18;
	shf.r.wrap.b32 	%r1282, %r1277, %r1278, 18;
	mov.b64 	%rd1713, {%r1282, %r1281};
	xor.b64  	%rd1714, %rd1713, %rd1712;
	shf.l.wrap.b32 	%r1283, %r1277, %r1278, 23;
	shf.l.wrap.b32 	%r1284, %r1278, %r1277, 23;
	mov.b64 	%rd1715, {%r1284, %r1283};
	xor.b64  	%rd1716, %rd1714, %rd1715;
	xor.b64  	%rd1717, %rd1676, %rd1652;
	and.b64  	%rd1718, %rd1700, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1652;
	add.s64 	%rd1720, %rd1628, %rd1472;
	ld.const.u64 	%rd8785, [k_sha512+288];
	add.s64 	%rd1721, %rd1720, %rd8785;
	add.s64 	%rd1722, %rd1721, %rd1719;
	add.s64 	%rd1723, %rd1722, %rd1716;
	add.s64 	%rd1724, %rd1723, %rd1639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1711;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 28;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 28;
	mov.b64 	%rd1725, {%r1288, %r1287};
	shf.l.wrap.b32 	%r1289, %r1285, %r1286, 30;
	shf.l.wrap.b32 	%r1290, %r1286, %r1285, 30;
	mov.b64 	%rd1726, {%r1290, %r1289};
	xor.b64  	%rd1727, %rd1726, %rd1725;
	shf.l.wrap.b32 	%r1291, %r1285, %r1286, 25;
	shf.l.wrap.b32 	%r1292, %r1286, %r1285, 25;
	mov.b64 	%rd1728, {%r1292, %r1291};
	xor.b64  	%rd1729, %rd1727, %rd1728;
	xor.b64  	%rd1730, %rd1711, %rd1663;
	xor.b64  	%rd1731, %rd1711, %rd1687;
	and.b64  	%rd1732, %rd1731, %rd1730;
	xor.b64  	%rd1733, %rd1732, %rd1711;
	add.s64 	%rd1734, %rd1723, %rd1733;
	add.s64 	%rd1735, %rd1734, %rd1729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd1724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1724;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 14;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 14;
	mov.b64 	%rd1736, {%r1296, %r1295};
	shf.r.wrap.b32 	%r1297, %r1294, %r1293, 18;
	shf.r.wrap.b32 	%r1298, %r1293, %r1294, 18;
	mov.b64 	%rd1737, {%r1298, %r1297};
	xor.b64  	%rd1738, %rd1737, %rd1736;
	shf.l.wrap.b32 	%r1299, %r1293, %r1294, 23;
	shf.l.wrap.b32 	%r1300, %r1294, %r1293, 23;
	mov.b64 	%rd1739, {%r1300, %r1299};
	xor.b64  	%rd1740, %rd1738, %rd1739;
	xor.b64  	%rd1741, %rd1700, %rd1676;
	and.b64  	%rd1742, %rd1724, %rd1741;
	xor.b64  	%rd1743, %rd1742, %rd1676;
	add.s64 	%rd1744, %rd1652, %rd1485;
	ld.const.u64 	%rd8784, [k_sha512+296];
	add.s64 	%rd1745, %rd1744, %rd8784;
	add.s64 	%rd1746, %rd1745, %rd1743;
	add.s64 	%rd1747, %rd1746, %rd1740;
	add.s64 	%rd1748, %rd1747, %rd1663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd1735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd1735;
	}
	shf.r.wrap.b32 	%r1303, %r1302, %r1301, 28;
	shf.r.wrap.b32 	%r1304, %r1301, %r1302, 28;
	mov.b64 	%rd1749, {%r1304, %r1303};
	shf.l.wrap.b32 	%r1305, %r1301, %r1302, 30;
	shf.l.wrap.b32 	%r1306, %r1302, %r1301, 30;
	mov.b64 	%rd1750, {%r1306, %r1305};
	xor.b64  	%rd1751, %rd1750, %rd1749;
	shf.l.wrap.b32 	%r1307, %r1301, %r1302, 25;
	shf.l.wrap.b32 	%r1308, %r1302, %r1301, 25;
	mov.b64 	%rd1752, {%r1308, %r1307};
	xor.b64  	%rd1753, %rd1751, %rd1752;
	xor.b64  	%rd1754, %rd1735, %rd1687;
	xor.b64  	%rd1755, %rd1735, %rd1711;
	and.b64  	%rd1756, %rd1755, %rd1754;
	xor.b64  	%rd1757, %rd1756, %rd1735;
	add.s64 	%rd1758, %rd1747, %rd1757;
	add.s64 	%rd1759, %rd1758, %rd1753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd1748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1310}, %rd1748;
	}
	shf.r.wrap.b32 	%r1311, %r1310, %r1309, 14;
	shf.r.wrap.b32 	%r1312, %r1309, %r1310, 14;
	mov.b64 	%rd1760, {%r1312, %r1311};
	shf.r.wrap.b32 	%r1313, %r1310, %r1309, 18;
	shf.r.wrap.b32 	%r1314, %r1309, %r1310, 18;
	mov.b64 	%rd1761, {%r1314, %r1313};
	xor.b64  	%rd1762, %rd1761, %rd1760;
	shf.l.wrap.b32 	%r1315, %r1309, %r1310, 23;
	shf.l.wrap.b32 	%r1316, %r1310, %r1309, 23;
	mov.b64 	%rd1763, {%r1316, %r1315};
	xor.b64  	%rd1764, %rd1762, %rd1763;
	xor.b64  	%rd1765, %rd1724, %rd1700;
	and.b64  	%rd1766, %rd1748, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1700;
	add.s64 	%rd1768, %rd1676, %rd1498;
	ld.const.u64 	%rd8783, [k_sha512+304];
	add.s64 	%rd1769, %rd1768, %rd8783;
	add.s64 	%rd1770, %rd1769, %rd1767;
	add.s64 	%rd1771, %rd1770, %rd1764;
	add.s64 	%rd1772, %rd1771, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd1759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd1759;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 28;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 28;
	mov.b64 	%rd1773, {%r1320, %r1319};
	shf.l.wrap.b32 	%r1321, %r1317, %r1318, 30;
	shf.l.wrap.b32 	%r1322, %r1318, %r1317, 30;
	mov.b64 	%rd1774, {%r1322, %r1321};
	xor.b64  	%rd1775, %rd1774, %rd1773;
	shf.l.wrap.b32 	%r1323, %r1317, %r1318, 25;
	shf.l.wrap.b32 	%r1324, %r1318, %r1317, 25;
	mov.b64 	%rd1776, {%r1324, %r1323};
	xor.b64  	%rd1777, %rd1775, %rd1776;
	xor.b64  	%rd1778, %rd1759, %rd1711;
	xor.b64  	%rd1779, %rd1759, %rd1735;
	and.b64  	%rd1780, %rd1779, %rd1778;
	xor.b64  	%rd1781, %rd1780, %rd1759;
	add.s64 	%rd1782, %rd1771, %rd1781;
	add.s64 	%rd1783, %rd1782, %rd1777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1325,%dummy}, %rd1772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1326}, %rd1772;
	}
	shf.r.wrap.b32 	%r1327, %r1326, %r1325, 14;
	shf.r.wrap.b32 	%r1328, %r1325, %r1326, 14;
	mov.b64 	%rd1784, {%r1328, %r1327};
	shf.r.wrap.b32 	%r1329, %r1326, %r1325, 18;
	shf.r.wrap.b32 	%r1330, %r1325, %r1326, 18;
	mov.b64 	%rd1785, {%r1330, %r1329};
	xor.b64  	%rd1786, %rd1785, %rd1784;
	shf.l.wrap.b32 	%r1331, %r1325, %r1326, 23;
	shf.l.wrap.b32 	%r1332, %r1326, %r1325, 23;
	mov.b64 	%rd1787, {%r1332, %r1331};
	xor.b64  	%rd1788, %rd1786, %rd1787;
	xor.b64  	%rd1789, %rd1748, %rd1724;
	and.b64  	%rd1790, %rd1772, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1724;
	add.s64 	%rd1792, %rd1700, %rd1511;
	ld.const.u64 	%rd8782, [k_sha512+312];
	add.s64 	%rd1793, %rd1792, %rd8782;
	add.s64 	%rd1794, %rd1793, %rd1791;
	add.s64 	%rd1795, %rd1794, %rd1788;
	add.s64 	%rd1796, %rd1795, %rd1711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd1783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd1783;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 28;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 28;
	mov.b64 	%rd1797, {%r1336, %r1335};
	shf.l.wrap.b32 	%r1337, %r1333, %r1334, 30;
	shf.l.wrap.b32 	%r1338, %r1334, %r1333, 30;
	mov.b64 	%rd1798, {%r1338, %r1337};
	xor.b64  	%rd1799, %rd1798, %rd1797;
	shf.l.wrap.b32 	%r1339, %r1333, %r1334, 25;
	shf.l.wrap.b32 	%r1340, %r1334, %r1333, 25;
	mov.b64 	%rd1800, {%r1340, %r1339};
	xor.b64  	%rd1801, %rd1799, %rd1800;
	xor.b64  	%rd1802, %rd1783, %rd1735;
	xor.b64  	%rd1803, %rd1783, %rd1759;
	and.b64  	%rd1804, %rd1803, %rd1802;
	xor.b64  	%rd1805, %rd1804, %rd1783;
	add.s64 	%rd1806, %rd1795, %rd1805;
	add.s64 	%rd1807, %rd1806, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1341,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1342}, %rd1796;
	}
	shf.r.wrap.b32 	%r1343, %r1342, %r1341, 14;
	shf.r.wrap.b32 	%r1344, %r1341, %r1342, 14;
	mov.b64 	%rd1808, {%r1344, %r1343};
	shf.r.wrap.b32 	%r1345, %r1342, %r1341, 18;
	shf.r.wrap.b32 	%r1346, %r1341, %r1342, 18;
	mov.b64 	%rd1809, {%r1346, %r1345};
	xor.b64  	%rd1810, %rd1809, %rd1808;
	shf.l.wrap.b32 	%r1347, %r1341, %r1342, 23;
	shf.l.wrap.b32 	%r1348, %r1342, %r1341, 23;
	mov.b64 	%rd1811, {%r1348, %r1347};
	xor.b64  	%rd1812, %rd1810, %rd1811;
	xor.b64  	%rd1813, %rd1772, %rd1748;
	and.b64  	%rd1814, %rd1796, %rd1813;
	xor.b64  	%rd1815, %rd1814, %rd1748;
	add.s64 	%rd1816, %rd1724, %rd1524;
	ld.const.u64 	%rd8781, [k_sha512+320];
	add.s64 	%rd1817, %rd1816, %rd8781;
	add.s64 	%rd1818, %rd1817, %rd1815;
	add.s64 	%rd1819, %rd1818, %rd1812;
	add.s64 	%rd1820, %rd1819, %rd1735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1349,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1350}, %rd1807;
	}
	shf.r.wrap.b32 	%r1351, %r1350, %r1349, 28;
	shf.r.wrap.b32 	%r1352, %r1349, %r1350, 28;
	mov.b64 	%rd1821, {%r1352, %r1351};
	shf.l.wrap.b32 	%r1353, %r1349, %r1350, 30;
	shf.l.wrap.b32 	%r1354, %r1350, %r1349, 30;
	mov.b64 	%rd1822, {%r1354, %r1353};
	xor.b64  	%rd1823, %rd1822, %rd1821;
	shf.l.wrap.b32 	%r1355, %r1349, %r1350, 25;
	shf.l.wrap.b32 	%r1356, %r1350, %r1349, 25;
	mov.b64 	%rd1824, {%r1356, %r1355};
	xor.b64  	%rd1825, %rd1823, %rd1824;
	xor.b64  	%rd1826, %rd1807, %rd1759;
	xor.b64  	%rd1827, %rd1807, %rd1783;
	and.b64  	%rd1828, %rd1827, %rd1826;
	xor.b64  	%rd1829, %rd1828, %rd1807;
	add.s64 	%rd1830, %rd1819, %rd1829;
	add.s64 	%rd1831, %rd1830, %rd1825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1357,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1358}, %rd1820;
	}
	shf.r.wrap.b32 	%r1359, %r1358, %r1357, 14;
	shf.r.wrap.b32 	%r1360, %r1357, %r1358, 14;
	mov.b64 	%rd1832, {%r1360, %r1359};
	shf.r.wrap.b32 	%r1361, %r1358, %r1357, 18;
	shf.r.wrap.b32 	%r1362, %r1357, %r1358, 18;
	mov.b64 	%rd1833, {%r1362, %r1361};
	xor.b64  	%rd1834, %rd1833, %rd1832;
	shf.l.wrap.b32 	%r1363, %r1357, %r1358, 23;
	shf.l.wrap.b32 	%r1364, %r1358, %r1357, 23;
	mov.b64 	%rd1835, {%r1364, %r1363};
	xor.b64  	%rd1836, %rd1834, %rd1835;
	xor.b64  	%rd1837, %rd1796, %rd1772;
	and.b64  	%rd1838, %rd1820, %rd1837;
	xor.b64  	%rd1839, %rd1838, %rd1772;
	add.s64 	%rd1840, %rd1748, %rd1537;
	ld.const.u64 	%rd8780, [k_sha512+328];
	add.s64 	%rd1841, %rd1840, %rd8780;
	add.s64 	%rd1842, %rd1841, %rd1839;
	add.s64 	%rd1843, %rd1842, %rd1836;
	add.s64 	%rd1844, %rd1843, %rd1759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1365,%dummy}, %rd1831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1366}, %rd1831;
	}
	shf.r.wrap.b32 	%r1367, %r1366, %r1365, 28;
	shf.r.wrap.b32 	%r1368, %r1365, %r1366, 28;
	mov.b64 	%rd1845, {%r1368, %r1367};
	shf.l.wrap.b32 	%r1369, %r1365, %r1366, 30;
	shf.l.wrap.b32 	%r1370, %r1366, %r1365, 30;
	mov.b64 	%rd1846, {%r1370, %r1369};
	xor.b64  	%rd1847, %rd1846, %rd1845;
	shf.l.wrap.b32 	%r1371, %r1365, %r1366, 25;
	shf.l.wrap.b32 	%r1372, %r1366, %r1365, 25;
	mov.b64 	%rd1848, {%r1372, %r1371};
	xor.b64  	%rd1849, %rd1847, %rd1848;
	xor.b64  	%rd1850, %rd1831, %rd1783;
	xor.b64  	%rd1851, %rd1831, %rd1807;
	and.b64  	%rd1852, %rd1851, %rd1850;
	xor.b64  	%rd1853, %rd1852, %rd1831;
	add.s64 	%rd1854, %rd1843, %rd1853;
	add.s64 	%rd1855, %rd1854, %rd1849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd1844;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 14;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 14;
	mov.b64 	%rd1856, {%r1376, %r1375};
	shf.r.wrap.b32 	%r1377, %r1374, %r1373, 18;
	shf.r.wrap.b32 	%r1378, %r1373, %r1374, 18;
	mov.b64 	%rd1857, {%r1378, %r1377};
	xor.b64  	%rd1858, %rd1857, %rd1856;
	shf.l.wrap.b32 	%r1379, %r1373, %r1374, 23;
	shf.l.wrap.b32 	%r1380, %r1374, %r1373, 23;
	mov.b64 	%rd1859, {%r1380, %r1379};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	xor.b64  	%rd1861, %rd1820, %rd1796;
	and.b64  	%rd1862, %rd1844, %rd1861;
	xor.b64  	%rd1863, %rd1862, %rd1796;
	add.s64 	%rd1864, %rd1772, %rd1550;
	ld.const.u64 	%rd8779, [k_sha512+336];
	add.s64 	%rd1865, %rd1864, %rd8779;
	add.s64 	%rd1866, %rd1865, %rd1863;
	add.s64 	%rd1867, %rd1866, %rd1860;
	add.s64 	%rd1868, %rd1867, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd1855;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 28;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 28;
	mov.b64 	%rd1869, {%r1384, %r1383};
	shf.l.wrap.b32 	%r1385, %r1381, %r1382, 30;
	shf.l.wrap.b32 	%r1386, %r1382, %r1381, 30;
	mov.b64 	%rd1870, {%r1386, %r1385};
	xor.b64  	%rd1871, %rd1870, %rd1869;
	shf.l.wrap.b32 	%r1387, %r1381, %r1382, 25;
	shf.l.wrap.b32 	%r1388, %r1382, %r1381, 25;
	mov.b64 	%rd1872, {%r1388, %r1387};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	xor.b64  	%rd1874, %rd1855, %rd1807;
	xor.b64  	%rd1875, %rd1855, %rd1831;
	and.b64  	%rd1876, %rd1875, %rd1874;
	xor.b64  	%rd1877, %rd1876, %rd1855;
	add.s64 	%rd1878, %rd1867, %rd1877;
	add.s64 	%rd1879, %rd1878, %rd1873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1389,%dummy}, %rd1868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1390}, %rd1868;
	}
	shf.r.wrap.b32 	%r1391, %r1390, %r1389, 14;
	shf.r.wrap.b32 	%r1392, %r1389, %r1390, 14;
	mov.b64 	%rd1880, {%r1392, %r1391};
	shf.r.wrap.b32 	%r1393, %r1390, %r1389, 18;
	shf.r.wrap.b32 	%r1394, %r1389, %r1390, 18;
	mov.b64 	%rd1881, {%r1394, %r1393};
	xor.b64  	%rd1882, %rd1881, %rd1880;
	shf.l.wrap.b32 	%r1395, %r1389, %r1390, 23;
	shf.l.wrap.b32 	%r1396, %r1390, %r1389, 23;
	mov.b64 	%rd1883, {%r1396, %r1395};
	xor.b64  	%rd1884, %rd1882, %rd1883;
	xor.b64  	%rd1885, %rd1844, %rd1820;
	and.b64  	%rd1886, %rd1868, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1820;
	add.s64 	%rd1888, %rd1796, %rd1563;
	ld.const.u64 	%rd8778, [k_sha512+344];
	add.s64 	%rd1889, %rd1888, %rd8778;
	add.s64 	%rd1890, %rd1889, %rd1887;
	add.s64 	%rd1891, %rd1890, %rd1884;
	add.s64 	%rd1892, %rd1891, %rd1807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1397,%dummy}, %rd1879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1398}, %rd1879;
	}
	shf.r.wrap.b32 	%r1399, %r1398, %r1397, 28;
	shf.r.wrap.b32 	%r1400, %r1397, %r1398, 28;
	mov.b64 	%rd1893, {%r1400, %r1399};
	shf.l.wrap.b32 	%r1401, %r1397, %r1398, 30;
	shf.l.wrap.b32 	%r1402, %r1398, %r1397, 30;
	mov.b64 	%rd1894, {%r1402, %r1401};
	xor.b64  	%rd1895, %rd1894, %rd1893;
	shf.l.wrap.b32 	%r1403, %r1397, %r1398, 25;
	shf.l.wrap.b32 	%r1404, %r1398, %r1397, 25;
	mov.b64 	%rd1896, {%r1404, %r1403};
	xor.b64  	%rd1897, %rd1895, %rd1896;
	xor.b64  	%rd1898, %rd1879, %rd1831;
	xor.b64  	%rd1899, %rd1879, %rd1855;
	and.b64  	%rd1900, %rd1899, %rd1898;
	xor.b64  	%rd1901, %rd1900, %rd1879;
	add.s64 	%rd1902, %rd1891, %rd1901;
	add.s64 	%rd1903, %rd1902, %rd1897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd1892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd1892;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 14;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 14;
	mov.b64 	%rd1904, {%r1408, %r1407};
	shf.r.wrap.b32 	%r1409, %r1406, %r1405, 18;
	shf.r.wrap.b32 	%r1410, %r1405, %r1406, 18;
	mov.b64 	%rd1905, {%r1410, %r1409};
	xor.b64  	%rd1906, %rd1905, %rd1904;
	shf.l.wrap.b32 	%r1411, %r1405, %r1406, 23;
	shf.l.wrap.b32 	%r1412, %r1406, %r1405, 23;
	mov.b64 	%rd1907, {%r1412, %r1411};
	xor.b64  	%rd1908, %rd1906, %rd1907;
	xor.b64  	%rd1909, %rd1868, %rd1844;
	and.b64  	%rd1910, %rd1892, %rd1909;
	xor.b64  	%rd1911, %rd1910, %rd1844;
	add.s64 	%rd1912, %rd1820, %rd1576;
	ld.const.u64 	%rd8777, [k_sha512+352];
	add.s64 	%rd1913, %rd1912, %rd8777;
	add.s64 	%rd1914, %rd1913, %rd1911;
	add.s64 	%rd1915, %rd1914, %rd1908;
	add.s64 	%rd1916, %rd1915, %rd1831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1413,%dummy}, %rd1903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1414}, %rd1903;
	}
	shf.r.wrap.b32 	%r1415, %r1414, %r1413, 28;
	shf.r.wrap.b32 	%r1416, %r1413, %r1414, 28;
	mov.b64 	%rd1917, {%r1416, %r1415};
	shf.l.wrap.b32 	%r1417, %r1413, %r1414, 30;
	shf.l.wrap.b32 	%r1418, %r1414, %r1413, 30;
	mov.b64 	%rd1918, {%r1418, %r1417};
	xor.b64  	%rd1919, %rd1918, %rd1917;
	shf.l.wrap.b32 	%r1419, %r1413, %r1414, 25;
	shf.l.wrap.b32 	%r1420, %r1414, %r1413, 25;
	mov.b64 	%rd1920, {%r1420, %r1419};
	xor.b64  	%rd1921, %rd1919, %rd1920;
	xor.b64  	%rd1922, %rd1903, %rd1855;
	xor.b64  	%rd1923, %rd1903, %rd1879;
	and.b64  	%rd1924, %rd1923, %rd1922;
	xor.b64  	%rd1925, %rd1924, %rd1903;
	add.s64 	%rd1926, %rd1915, %rd1925;
	add.s64 	%rd1927, %rd1926, %rd1921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1421,%dummy}, %rd1916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1422}, %rd1916;
	}
	shf.r.wrap.b32 	%r1423, %r1422, %r1421, 14;
	shf.r.wrap.b32 	%r1424, %r1421, %r1422, 14;
	mov.b64 	%rd1928, {%r1424, %r1423};
	shf.r.wrap.b32 	%r1425, %r1422, %r1421, 18;
	shf.r.wrap.b32 	%r1426, %r1421, %r1422, 18;
	mov.b64 	%rd1929, {%r1426, %r1425};
	xor.b64  	%rd1930, %rd1929, %rd1928;
	shf.l.wrap.b32 	%r1427, %r1421, %r1422, 23;
	shf.l.wrap.b32 	%r1428, %r1422, %r1421, 23;
	mov.b64 	%rd1931, {%r1428, %r1427};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	xor.b64  	%rd1933, %rd1892, %rd1868;
	and.b64  	%rd1934, %rd1916, %rd1933;
	xor.b64  	%rd1935, %rd1934, %rd1868;
	add.s64 	%rd1936, %rd1844, %rd1589;
	ld.const.u64 	%rd8776, [k_sha512+360];
	add.s64 	%rd1937, %rd1936, %rd8776;
	add.s64 	%rd1938, %rd1937, %rd1935;
	add.s64 	%rd1939, %rd1938, %rd1932;
	add.s64 	%rd1940, %rd1939, %rd1855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1429,%dummy}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1430}, %rd1927;
	}
	shf.r.wrap.b32 	%r1431, %r1430, %r1429, 28;
	shf.r.wrap.b32 	%r1432, %r1429, %r1430, 28;
	mov.b64 	%rd1941, {%r1432, %r1431};
	shf.l.wrap.b32 	%r1433, %r1429, %r1430, 30;
	shf.l.wrap.b32 	%r1434, %r1430, %r1429, 30;
	mov.b64 	%rd1942, {%r1434, %r1433};
	xor.b64  	%rd1943, %rd1942, %rd1941;
	shf.l.wrap.b32 	%r1435, %r1429, %r1430, 25;
	shf.l.wrap.b32 	%r1436, %r1430, %r1429, 25;
	mov.b64 	%rd1944, {%r1436, %r1435};
	xor.b64  	%rd1945, %rd1943, %rd1944;
	xor.b64  	%rd1946, %rd1927, %rd1879;
	xor.b64  	%rd1947, %rd1927, %rd1903;
	and.b64  	%rd1948, %rd1947, %rd1946;
	xor.b64  	%rd1949, %rd1948, %rd1927;
	add.s64 	%rd1950, %rd1939, %rd1949;
	add.s64 	%rd1951, %rd1950, %rd1945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1437,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1438}, %rd1940;
	}
	shf.r.wrap.b32 	%r1439, %r1438, %r1437, 14;
	shf.r.wrap.b32 	%r1440, %r1437, %r1438, 14;
	mov.b64 	%rd1952, {%r1440, %r1439};
	shf.r.wrap.b32 	%r1441, %r1438, %r1437, 18;
	shf.r.wrap.b32 	%r1442, %r1437, %r1438, 18;
	mov.b64 	%rd1953, {%r1442, %r1441};
	xor.b64  	%rd1954, %rd1953, %rd1952;
	shf.l.wrap.b32 	%r1443, %r1437, %r1438, 23;
	shf.l.wrap.b32 	%r1444, %r1438, %r1437, 23;
	mov.b64 	%rd1955, {%r1444, %r1443};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	xor.b64  	%rd1957, %rd1916, %rd1892;
	and.b64  	%rd1958, %rd1940, %rd1957;
	xor.b64  	%rd1959, %rd1958, %rd1892;
	add.s64 	%rd1960, %rd1868, %rd1602;
	ld.const.u64 	%rd8775, [k_sha512+368];
	add.s64 	%rd1961, %rd1960, %rd8775;
	add.s64 	%rd1962, %rd1961, %rd1959;
	add.s64 	%rd1963, %rd1962, %rd1956;
	add.s64 	%rd1964, %rd1963, %rd1879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1445,%dummy}, %rd1951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1446}, %rd1951;
	}
	shf.r.wrap.b32 	%r1447, %r1446, %r1445, 28;
	shf.r.wrap.b32 	%r1448, %r1445, %r1446, 28;
	mov.b64 	%rd1965, {%r1448, %r1447};
	shf.l.wrap.b32 	%r1449, %r1445, %r1446, 30;
	shf.l.wrap.b32 	%r1450, %r1446, %r1445, 30;
	mov.b64 	%rd1966, {%r1450, %r1449};
	xor.b64  	%rd1967, %rd1966, %rd1965;
	shf.l.wrap.b32 	%r1451, %r1445, %r1446, 25;
	shf.l.wrap.b32 	%r1452, %r1446, %r1445, 25;
	mov.b64 	%rd1968, {%r1452, %r1451};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	xor.b64  	%rd1970, %rd1951, %rd1903;
	xor.b64  	%rd1971, %rd1951, %rd1927;
	and.b64  	%rd1972, %rd1971, %rd1970;
	xor.b64  	%rd1973, %rd1972, %rd1951;
	add.s64 	%rd1974, %rd1963, %rd1973;
	add.s64 	%rd1975, %rd1974, %rd1969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd1964;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 14;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 14;
	mov.b64 	%rd1976, {%r1456, %r1455};
	shf.r.wrap.b32 	%r1457, %r1454, %r1453, 18;
	shf.r.wrap.b32 	%r1458, %r1453, %r1454, 18;
	mov.b64 	%rd1977, {%r1458, %r1457};
	xor.b64  	%rd1978, %rd1977, %rd1976;
	shf.l.wrap.b32 	%r1459, %r1453, %r1454, 23;
	shf.l.wrap.b32 	%r1460, %r1454, %r1453, 23;
	mov.b64 	%rd1979, {%r1460, %r1459};
	xor.b64  	%rd1980, %rd1978, %rd1979;
	xor.b64  	%rd1981, %rd1940, %rd1916;
	and.b64  	%rd1982, %rd1964, %rd1981;
	xor.b64  	%rd1983, %rd1982, %rd1916;
	add.s64 	%rd1984, %rd1892, %rd1615;
	ld.const.u64 	%rd8774, [k_sha512+376];
	add.s64 	%rd1985, %rd1984, %rd8774;
	add.s64 	%rd1986, %rd1985, %rd1983;
	add.s64 	%rd1987, %rd1986, %rd1980;
	add.s64 	%rd1988, %rd1987, %rd1903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1461,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1462}, %rd1975;
	}
	shf.r.wrap.b32 	%r1463, %r1462, %r1461, 28;
	shf.r.wrap.b32 	%r1464, %r1461, %r1462, 28;
	mov.b64 	%rd1989, {%r1464, %r1463};
	shf.l.wrap.b32 	%r1465, %r1461, %r1462, 30;
	shf.l.wrap.b32 	%r1466, %r1462, %r1461, 30;
	mov.b64 	%rd1990, {%r1466, %r1465};
	xor.b64  	%rd1991, %rd1990, %rd1989;
	shf.l.wrap.b32 	%r1467, %r1461, %r1462, 25;
	shf.l.wrap.b32 	%r1468, %r1462, %r1461, 25;
	mov.b64 	%rd1992, {%r1468, %r1467};
	xor.b64  	%rd1993, %rd1991, %rd1992;
	xor.b64  	%rd1994, %rd1975, %rd1927;
	xor.b64  	%rd1995, %rd1975, %rd1951;
	and.b64  	%rd1996, %rd1995, %rd1994;
	xor.b64  	%rd1997, %rd1996, %rd1975;
	add.s64 	%rd1998, %rd1987, %rd1997;
	add.s64 	%rd1999, %rd1998, %rd1993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1469,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1470}, %rd1602;
	}
	shf.r.wrap.b32 	%r1471, %r1470, %r1469, 19;
	shf.r.wrap.b32 	%r1472, %r1469, %r1470, 19;
	mov.b64 	%rd2000, {%r1472, %r1471};
	shf.l.wrap.b32 	%r1473, %r1469, %r1470, 3;
	shf.l.wrap.b32 	%r1474, %r1470, %r1469, 3;
	mov.b64 	%rd2001, {%r1474, %r1473};
	shr.u64 	%rd2002, %rd1602, 6;
	xor.b64  	%rd2003, %rd2000, %rd2002;
	xor.b64  	%rd2004, %rd2003, %rd2001;
	shf.r.wrap.b32 	%r1475, %r1084, %r1083, 1;
	shf.r.wrap.b32 	%r1476, %r1083, %r1084, 1;
	mov.b64 	%rd2005, {%r1476, %r1475};
	shf.r.wrap.b32 	%r1477, %r1084, %r1083, 8;
	shf.r.wrap.b32 	%r1478, %r1083, %r1084, 8;
	mov.b64 	%rd2006, {%r1478, %r1477};
	shr.u64 	%rd2007, %rd1433, 7;
	xor.b64  	%rd2008, %rd2005, %rd2007;
	xor.b64  	%rd2009, %rd2008, %rd2006;
	add.s64 	%rd2010, %rd1537, %rd1420;
	add.s64 	%rd2011, %rd2010, %rd2004;
	add.s64 	%rd2012, %rd2011, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1479,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1480}, %rd1615;
	}
	shf.r.wrap.b32 	%r1481, %r1480, %r1479, 19;
	shf.r.wrap.b32 	%r1482, %r1479, %r1480, 19;
	mov.b64 	%rd2013, {%r1482, %r1481};
	shf.l.wrap.b32 	%r1483, %r1479, %r1480, 3;
	shf.l.wrap.b32 	%r1484, %r1480, %r1479, 3;
	mov.b64 	%rd2014, {%r1484, %r1483};
	shr.u64 	%rd2015, %rd1615, 6;
	xor.b64  	%rd2016, %rd2013, %rd2015;
	xor.b64  	%rd2017, %rd2016, %rd2014;
	shf.r.wrap.b32 	%r1485, %r1094, %r1093, 1;
	shf.r.wrap.b32 	%r1486, %r1093, %r1094, 1;
	mov.b64 	%rd2018, {%r1486, %r1485};
	shf.r.wrap.b32 	%r1487, %r1094, %r1093, 8;
	shf.r.wrap.b32 	%r1488, %r1093, %r1094, 8;
	mov.b64 	%rd2019, {%r1488, %r1487};
	shr.u64 	%rd2020, %rd1446, 7;
	xor.b64  	%rd2021, %rd2018, %rd2020;
	xor.b64  	%rd2022, %rd2021, %rd2019;
	add.s64 	%rd2023, %rd1550, %rd1433;
	add.s64 	%rd2024, %rd2023, %rd2017;
	add.s64 	%rd2025, %rd2024, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1489,%dummy}, %rd2012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1490}, %rd2012;
	}
	shf.r.wrap.b32 	%r1491, %r1490, %r1489, 19;
	shf.r.wrap.b32 	%r1492, %r1489, %r1490, 19;
	mov.b64 	%rd2026, {%r1492, %r1491};
	shf.l.wrap.b32 	%r1493, %r1489, %r1490, 3;
	shf.l.wrap.b32 	%r1494, %r1490, %r1489, 3;
	mov.b64 	%rd2027, {%r1494, %r1493};
	shr.u64 	%rd2028, %rd2012, 6;
	xor.b64  	%rd2029, %rd2026, %rd2028;
	xor.b64  	%rd2030, %rd2029, %rd2027;
	shf.r.wrap.b32 	%r1495, %r1104, %r1103, 1;
	shf.r.wrap.b32 	%r1496, %r1103, %r1104, 1;
	mov.b64 	%rd2031, {%r1496, %r1495};
	shf.r.wrap.b32 	%r1497, %r1104, %r1103, 8;
	shf.r.wrap.b32 	%r1498, %r1103, %r1104, 8;
	mov.b64 	%rd2032, {%r1498, %r1497};
	shr.u64 	%rd2033, %rd1459, 7;
	xor.b64  	%rd2034, %rd2031, %rd2033;
	xor.b64  	%rd2035, %rd2034, %rd2032;
	add.s64 	%rd2036, %rd1563, %rd1446;
	add.s64 	%rd2037, %rd2036, %rd2030;
	add.s64 	%rd2038, %rd2037, %rd2035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1499,%dummy}, %rd2025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1500}, %rd2025;
	}
	shf.r.wrap.b32 	%r1501, %r1500, %r1499, 19;
	shf.r.wrap.b32 	%r1502, %r1499, %r1500, 19;
	mov.b64 	%rd2039, {%r1502, %r1501};
	shf.l.wrap.b32 	%r1503, %r1499, %r1500, 3;
	shf.l.wrap.b32 	%r1504, %r1500, %r1499, 3;
	mov.b64 	%rd2040, {%r1504, %r1503};
	shr.u64 	%rd2041, %rd2025, 6;
	xor.b64  	%rd2042, %rd2039, %rd2041;
	xor.b64  	%rd2043, %rd2042, %rd2040;
	shf.r.wrap.b32 	%r1505, %r1114, %r1113, 1;
	shf.r.wrap.b32 	%r1506, %r1113, %r1114, 1;
	mov.b64 	%rd2044, {%r1506, %r1505};
	shf.r.wrap.b32 	%r1507, %r1114, %r1113, 8;
	shf.r.wrap.b32 	%r1508, %r1113, %r1114, 8;
	mov.b64 	%rd2045, {%r1508, %r1507};
	shr.u64 	%rd2046, %rd1472, 7;
	xor.b64  	%rd2047, %rd2044, %rd2046;
	xor.b64  	%rd2048, %rd2047, %rd2045;
	add.s64 	%rd2049, %rd1576, %rd1459;
	add.s64 	%rd2050, %rd2049, %rd2043;
	add.s64 	%rd2051, %rd2050, %rd2048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1509,%dummy}, %rd2038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1510}, %rd2038;
	}
	shf.r.wrap.b32 	%r1511, %r1510, %r1509, 19;
	shf.r.wrap.b32 	%r1512, %r1509, %r1510, 19;
	mov.b64 	%rd2052, {%r1512, %r1511};
	shf.l.wrap.b32 	%r1513, %r1509, %r1510, 3;
	shf.l.wrap.b32 	%r1514, %r1510, %r1509, 3;
	mov.b64 	%rd2053, {%r1514, %r1513};
	shr.u64 	%rd2054, %rd2038, 6;
	xor.b64  	%rd2055, %rd2052, %rd2054;
	xor.b64  	%rd2056, %rd2055, %rd2053;
	shf.r.wrap.b32 	%r1515, %r1124, %r1123, 1;
	shf.r.wrap.b32 	%r1516, %r1123, %r1124, 1;
	mov.b64 	%rd2057, {%r1516, %r1515};
	shf.r.wrap.b32 	%r1517, %r1124, %r1123, 8;
	shf.r.wrap.b32 	%r1518, %r1123, %r1124, 8;
	mov.b64 	%rd2058, {%r1518, %r1517};
	shr.u64 	%rd2059, %rd1485, 7;
	xor.b64  	%rd2060, %rd2057, %rd2059;
	xor.b64  	%rd2061, %rd2060, %rd2058;
	add.s64 	%rd2062, %rd1589, %rd1472;
	add.s64 	%rd2063, %rd2062, %rd2056;
	add.s64 	%rd2064, %rd2063, %rd2061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1519,%dummy}, %rd2051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1520}, %rd2051;
	}
	shf.r.wrap.b32 	%r1521, %r1520, %r1519, 19;
	shf.r.wrap.b32 	%r1522, %r1519, %r1520, 19;
	mov.b64 	%rd2065, {%r1522, %r1521};
	shf.l.wrap.b32 	%r1523, %r1519, %r1520, 3;
	shf.l.wrap.b32 	%r1524, %r1520, %r1519, 3;
	mov.b64 	%rd2066, {%r1524, %r1523};
	shr.u64 	%rd2067, %rd2051, 6;
	xor.b64  	%rd2068, %rd2065, %rd2067;
	xor.b64  	%rd2069, %rd2068, %rd2066;
	shf.r.wrap.b32 	%r1525, %r1134, %r1133, 1;
	shf.r.wrap.b32 	%r1526, %r1133, %r1134, 1;
	mov.b64 	%rd2070, {%r1526, %r1525};
	shf.r.wrap.b32 	%r1527, %r1134, %r1133, 8;
	shf.r.wrap.b32 	%r1528, %r1133, %r1134, 8;
	mov.b64 	%rd2071, {%r1528, %r1527};
	shr.u64 	%rd2072, %rd1498, 7;
	xor.b64  	%rd2073, %rd2070, %rd2072;
	xor.b64  	%rd2074, %rd2073, %rd2071;
	add.s64 	%rd2075, %rd1602, %rd1485;
	add.s64 	%rd2076, %rd2075, %rd2069;
	add.s64 	%rd2077, %rd2076, %rd2074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1529,%dummy}, %rd2064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1530}, %rd2064;
	}
	shf.r.wrap.b32 	%r1531, %r1530, %r1529, 19;
	shf.r.wrap.b32 	%r1532, %r1529, %r1530, 19;
	mov.b64 	%rd2078, {%r1532, %r1531};
	shf.l.wrap.b32 	%r1533, %r1529, %r1530, 3;
	shf.l.wrap.b32 	%r1534, %r1530, %r1529, 3;
	mov.b64 	%rd2079, {%r1534, %r1533};
	shr.u64 	%rd2080, %rd2064, 6;
	xor.b64  	%rd2081, %rd2078, %rd2080;
	xor.b64  	%rd2082, %rd2081, %rd2079;
	shf.r.wrap.b32 	%r1535, %r1144, %r1143, 1;
	shf.r.wrap.b32 	%r1536, %r1143, %r1144, 1;
	mov.b64 	%rd2083, {%r1536, %r1535};
	shf.r.wrap.b32 	%r1537, %r1144, %r1143, 8;
	shf.r.wrap.b32 	%r1538, %r1143, %r1144, 8;
	mov.b64 	%rd2084, {%r1538, %r1537};
	shr.u64 	%rd2085, %rd1511, 7;
	xor.b64  	%rd2086, %rd2083, %rd2085;
	xor.b64  	%rd2087, %rd2086, %rd2084;
	add.s64 	%rd2088, %rd1615, %rd1498;
	add.s64 	%rd2089, %rd2088, %rd2082;
	add.s64 	%rd2090, %rd2089, %rd2087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1539,%dummy}, %rd2077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1540}, %rd2077;
	}
	shf.r.wrap.b32 	%r1541, %r1540, %r1539, 19;
	shf.r.wrap.b32 	%r1542, %r1539, %r1540, 19;
	mov.b64 	%rd2091, {%r1542, %r1541};
	shf.l.wrap.b32 	%r1543, %r1539, %r1540, 3;
	shf.l.wrap.b32 	%r1544, %r1540, %r1539, 3;
	mov.b64 	%rd2092, {%r1544, %r1543};
	shr.u64 	%rd2093, %rd2077, 6;
	xor.b64  	%rd2094, %rd2091, %rd2093;
	xor.b64  	%rd2095, %rd2094, %rd2092;
	shf.r.wrap.b32 	%r1545, %r1154, %r1153, 1;
	shf.r.wrap.b32 	%r1546, %r1153, %r1154, 1;
	mov.b64 	%rd2096, {%r1546, %r1545};
	shf.r.wrap.b32 	%r1547, %r1154, %r1153, 8;
	shf.r.wrap.b32 	%r1548, %r1153, %r1154, 8;
	mov.b64 	%rd2097, {%r1548, %r1547};
	shr.u64 	%rd2098, %rd1524, 7;
	xor.b64  	%rd2099, %rd2096, %rd2098;
	xor.b64  	%rd2100, %rd2099, %rd2097;
	add.s64 	%rd2101, %rd2012, %rd1511;
	add.s64 	%rd2102, %rd2101, %rd2095;
	add.s64 	%rd2103, %rd2102, %rd2100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1549,%dummy}, %rd2090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1550}, %rd2090;
	}
	shf.r.wrap.b32 	%r1551, %r1550, %r1549, 19;
	shf.r.wrap.b32 	%r1552, %r1549, %r1550, 19;
	mov.b64 	%rd2104, {%r1552, %r1551};
	shf.l.wrap.b32 	%r1553, %r1549, %r1550, 3;
	shf.l.wrap.b32 	%r1554, %r1550, %r1549, 3;
	mov.b64 	%rd2105, {%r1554, %r1553};
	shr.u64 	%rd2106, %rd2090, 6;
	xor.b64  	%rd2107, %rd2104, %rd2106;
	xor.b64  	%rd2108, %rd2107, %rd2105;
	shf.r.wrap.b32 	%r1555, %r1164, %r1163, 1;
	shf.r.wrap.b32 	%r1556, %r1163, %r1164, 1;
	mov.b64 	%rd2109, {%r1556, %r1555};
	shf.r.wrap.b32 	%r1557, %r1164, %r1163, 8;
	shf.r.wrap.b32 	%r1558, %r1163, %r1164, 8;
	mov.b64 	%rd2110, {%r1558, %r1557};
	shr.u64 	%rd2111, %rd1537, 7;
	xor.b64  	%rd2112, %rd2109, %rd2111;
	xor.b64  	%rd2113, %rd2112, %rd2110;
	add.s64 	%rd2114, %rd2025, %rd1524;
	add.s64 	%rd2115, %rd2114, %rd2108;
	add.s64 	%rd2116, %rd2115, %rd2113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1559,%dummy}, %rd2103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1560}, %rd2103;
	}
	shf.r.wrap.b32 	%r1561, %r1560, %r1559, 19;
	shf.r.wrap.b32 	%r1562, %r1559, %r1560, 19;
	mov.b64 	%rd2117, {%r1562, %r1561};
	shf.l.wrap.b32 	%r1563, %r1559, %r1560, 3;
	shf.l.wrap.b32 	%r1564, %r1560, %r1559, 3;
	mov.b64 	%rd2118, {%r1564, %r1563};
	shr.u64 	%rd2119, %rd2103, 6;
	xor.b64  	%rd2120, %rd2117, %rd2119;
	xor.b64  	%rd2121, %rd2120, %rd2118;
	shf.r.wrap.b32 	%r1565, %r1174, %r1173, 1;
	shf.r.wrap.b32 	%r1566, %r1173, %r1174, 1;
	mov.b64 	%rd2122, {%r1566, %r1565};
	shf.r.wrap.b32 	%r1567, %r1174, %r1173, 8;
	shf.r.wrap.b32 	%r1568, %r1173, %r1174, 8;
	mov.b64 	%rd2123, {%r1568, %r1567};
	shr.u64 	%rd2124, %rd1550, 7;
	xor.b64  	%rd2125, %rd2122, %rd2124;
	xor.b64  	%rd2126, %rd2125, %rd2123;
	add.s64 	%rd2127, %rd2038, %rd1537;
	add.s64 	%rd2128, %rd2127, %rd2121;
	add.s64 	%rd2129, %rd2128, %rd2126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1569,%dummy}, %rd2116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1570}, %rd2116;
	}
	shf.r.wrap.b32 	%r1571, %r1570, %r1569, 19;
	shf.r.wrap.b32 	%r1572, %r1569, %r1570, 19;
	mov.b64 	%rd2130, {%r1572, %r1571};
	shf.l.wrap.b32 	%r1573, %r1569, %r1570, 3;
	shf.l.wrap.b32 	%r1574, %r1570, %r1569, 3;
	mov.b64 	%rd2131, {%r1574, %r1573};
	shr.u64 	%rd2132, %rd2116, 6;
	xor.b64  	%rd2133, %rd2130, %rd2132;
	xor.b64  	%rd2134, %rd2133, %rd2131;
	shf.r.wrap.b32 	%r1575, %r1184, %r1183, 1;
	shf.r.wrap.b32 	%r1576, %r1183, %r1184, 1;
	mov.b64 	%rd2135, {%r1576, %r1575};
	shf.r.wrap.b32 	%r1577, %r1184, %r1183, 8;
	shf.r.wrap.b32 	%r1578, %r1183, %r1184, 8;
	mov.b64 	%rd2136, {%r1578, %r1577};
	shr.u64 	%rd2137, %rd1563, 7;
	xor.b64  	%rd2138, %rd2135, %rd2137;
	xor.b64  	%rd2139, %rd2138, %rd2136;
	add.s64 	%rd2140, %rd2051, %rd1550;
	add.s64 	%rd2141, %rd2140, %rd2134;
	add.s64 	%rd2142, %rd2141, %rd2139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1579,%dummy}, %rd2129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1580}, %rd2129;
	}
	shf.r.wrap.b32 	%r1581, %r1580, %r1579, 19;
	shf.r.wrap.b32 	%r1582, %r1579, %r1580, 19;
	mov.b64 	%rd2143, {%r1582, %r1581};
	shf.l.wrap.b32 	%r1583, %r1579, %r1580, 3;
	shf.l.wrap.b32 	%r1584, %r1580, %r1579, 3;
	mov.b64 	%rd2144, {%r1584, %r1583};
	shr.u64 	%rd2145, %rd2129, 6;
	xor.b64  	%rd2146, %rd2143, %rd2145;
	xor.b64  	%rd2147, %rd2146, %rd2144;
	shf.r.wrap.b32 	%r1585, %r1194, %r1193, 1;
	shf.r.wrap.b32 	%r1586, %r1193, %r1194, 1;
	mov.b64 	%rd2148, {%r1586, %r1585};
	shf.r.wrap.b32 	%r1587, %r1194, %r1193, 8;
	shf.r.wrap.b32 	%r1588, %r1193, %r1194, 8;
	mov.b64 	%rd2149, {%r1588, %r1587};
	shr.u64 	%rd2150, %rd1576, 7;
	xor.b64  	%rd2151, %rd2148, %rd2150;
	xor.b64  	%rd2152, %rd2151, %rd2149;
	add.s64 	%rd2153, %rd2064, %rd1563;
	add.s64 	%rd2154, %rd2153, %rd2147;
	add.s64 	%rd2155, %rd2154, %rd2152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1589,%dummy}, %rd2142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1590}, %rd2142;
	}
	shf.r.wrap.b32 	%r1591, %r1590, %r1589, 19;
	shf.r.wrap.b32 	%r1592, %r1589, %r1590, 19;
	mov.b64 	%rd2156, {%r1592, %r1591};
	shf.l.wrap.b32 	%r1593, %r1589, %r1590, 3;
	shf.l.wrap.b32 	%r1594, %r1590, %r1589, 3;
	mov.b64 	%rd2157, {%r1594, %r1593};
	shr.u64 	%rd2158, %rd2142, 6;
	xor.b64  	%rd2159, %rd2156, %rd2158;
	xor.b64  	%rd2160, %rd2159, %rd2157;
	shf.r.wrap.b32 	%r1595, %r1204, %r1203, 1;
	shf.r.wrap.b32 	%r1596, %r1203, %r1204, 1;
	mov.b64 	%rd2161, {%r1596, %r1595};
	shf.r.wrap.b32 	%r1597, %r1204, %r1203, 8;
	shf.r.wrap.b32 	%r1598, %r1203, %r1204, 8;
	mov.b64 	%rd2162, {%r1598, %r1597};
	shr.u64 	%rd2163, %rd1589, 7;
	xor.b64  	%rd2164, %rd2161, %rd2163;
	xor.b64  	%rd2165, %rd2164, %rd2162;
	add.s64 	%rd2166, %rd2077, %rd1576;
	add.s64 	%rd2167, %rd2166, %rd2160;
	add.s64 	%rd2168, %rd2167, %rd2165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1599,%dummy}, %rd2155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1600}, %rd2155;
	}
	shf.r.wrap.b32 	%r1601, %r1600, %r1599, 19;
	shf.r.wrap.b32 	%r1602, %r1599, %r1600, 19;
	mov.b64 	%rd2169, {%r1602, %r1601};
	shf.l.wrap.b32 	%r1603, %r1599, %r1600, 3;
	shf.l.wrap.b32 	%r1604, %r1600, %r1599, 3;
	mov.b64 	%rd2170, {%r1604, %r1603};
	shr.u64 	%rd2171, %rd2155, 6;
	xor.b64  	%rd2172, %rd2169, %rd2171;
	xor.b64  	%rd2173, %rd2172, %rd2170;
	shf.r.wrap.b32 	%r1605, %r1470, %r1469, 1;
	shf.r.wrap.b32 	%r1606, %r1469, %r1470, 1;
	mov.b64 	%rd2174, {%r1606, %r1605};
	shf.r.wrap.b32 	%r1607, %r1470, %r1469, 8;
	shf.r.wrap.b32 	%r1608, %r1469, %r1470, 8;
	mov.b64 	%rd2175, {%r1608, %r1607};
	shr.u64 	%rd2176, %rd1602, 7;
	xor.b64  	%rd2177, %rd2174, %rd2176;
	xor.b64  	%rd2178, %rd2177, %rd2175;
	add.s64 	%rd2179, %rd2090, %rd1589;
	add.s64 	%rd2180, %rd2179, %rd2173;
	add.s64 	%rd2181, %rd2180, %rd2178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1609,%dummy}, %rd2168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1610}, %rd2168;
	}
	shf.r.wrap.b32 	%r1611, %r1610, %r1609, 19;
	shf.r.wrap.b32 	%r1612, %r1609, %r1610, 19;
	mov.b64 	%rd2182, {%r1612, %r1611};
	shf.l.wrap.b32 	%r1613, %r1609, %r1610, 3;
	shf.l.wrap.b32 	%r1614, %r1610, %r1609, 3;
	mov.b64 	%rd2183, {%r1614, %r1613};
	shr.u64 	%rd2184, %rd2168, 6;
	xor.b64  	%rd2185, %rd2182, %rd2184;
	xor.b64  	%rd2186, %rd2185, %rd2183;
	shf.r.wrap.b32 	%r1615, %r1480, %r1479, 1;
	shf.r.wrap.b32 	%r1616, %r1479, %r1480, 1;
	mov.b64 	%rd2187, {%r1616, %r1615};
	shf.r.wrap.b32 	%r1617, %r1480, %r1479, 8;
	shf.r.wrap.b32 	%r1618, %r1479, %r1480, 8;
	mov.b64 	%rd2188, {%r1618, %r1617};
	shr.u64 	%rd2189, %rd1615, 7;
	xor.b64  	%rd2190, %rd2187, %rd2189;
	xor.b64  	%rd2191, %rd2190, %rd2188;
	add.s64 	%rd2192, %rd2103, %rd1602;
	add.s64 	%rd2193, %rd2192, %rd2186;
	add.s64 	%rd2194, %rd2193, %rd2191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1619,%dummy}, %rd2181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1620}, %rd2181;
	}
	shf.r.wrap.b32 	%r1621, %r1620, %r1619, 19;
	shf.r.wrap.b32 	%r1622, %r1619, %r1620, 19;
	mov.b64 	%rd2195, {%r1622, %r1621};
	shf.l.wrap.b32 	%r1623, %r1619, %r1620, 3;
	shf.l.wrap.b32 	%r1624, %r1620, %r1619, 3;
	mov.b64 	%rd2196, {%r1624, %r1623};
	shr.u64 	%rd2197, %rd2181, 6;
	xor.b64  	%rd2198, %rd2195, %rd2197;
	xor.b64  	%rd2199, %rd2198, %rd2196;
	shf.r.wrap.b32 	%r1625, %r1490, %r1489, 1;
	shf.r.wrap.b32 	%r1626, %r1489, %r1490, 1;
	mov.b64 	%rd2200, {%r1626, %r1625};
	shf.r.wrap.b32 	%r1627, %r1490, %r1489, 8;
	shf.r.wrap.b32 	%r1628, %r1489, %r1490, 8;
	mov.b64 	%rd2201, {%r1628, %r1627};
	shr.u64 	%rd2202, %rd2012, 7;
	xor.b64  	%rd2203, %rd2200, %rd2202;
	xor.b64  	%rd2204, %rd2203, %rd2201;
	add.s64 	%rd2205, %rd2116, %rd1615;
	add.s64 	%rd2206, %rd2205, %rd2199;
	add.s64 	%rd2207, %rd2206, %rd2204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1629,%dummy}, %rd1988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1630}, %rd1988;
	}
	shf.r.wrap.b32 	%r1631, %r1630, %r1629, 14;
	shf.r.wrap.b32 	%r1632, %r1629, %r1630, 14;
	mov.b64 	%rd2208, {%r1632, %r1631};
	shf.r.wrap.b32 	%r1633, %r1630, %r1629, 18;
	shf.r.wrap.b32 	%r1634, %r1629, %r1630, 18;
	mov.b64 	%rd2209, {%r1634, %r1633};
	xor.b64  	%rd2210, %rd2209, %rd2208;
	shf.l.wrap.b32 	%r1635, %r1629, %r1630, 23;
	shf.l.wrap.b32 	%r1636, %r1630, %r1629, 23;
	mov.b64 	%rd2211, {%r1636, %r1635};
	xor.b64  	%rd2212, %rd2210, %rd2211;
	xor.b64  	%rd2213, %rd1964, %rd1940;
	and.b64  	%rd2214, %rd2213, %rd1988;
	xor.b64  	%rd2215, %rd2214, %rd1940;
	add.s64 	%rd2216, %rd2215, %rd1916;
	add.s64 	%rd2217, %rd2216, %rd2012;
	ld.const.u64 	%rd8773, [k_sha512+384];
	add.s64 	%rd2218, %rd2217, %rd8773;
	add.s64 	%rd2219, %rd2218, %rd2212;
	add.s64 	%rd2220, %rd2219, %rd1927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1637,%dummy}, %rd1999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1638}, %rd1999;
	}
	shf.r.wrap.b32 	%r1639, %r1638, %r1637, 28;
	shf.r.wrap.b32 	%r1640, %r1637, %r1638, 28;
	mov.b64 	%rd2221, {%r1640, %r1639};
	shf.l.wrap.b32 	%r1641, %r1637, %r1638, 30;
	shf.l.wrap.b32 	%r1642, %r1638, %r1637, 30;
	mov.b64 	%rd2222, {%r1642, %r1641};
	xor.b64  	%rd2223, %rd2222, %rd2221;
	shf.l.wrap.b32 	%r1643, %r1637, %r1638, 25;
	shf.l.wrap.b32 	%r1644, %r1638, %r1637, 25;
	mov.b64 	%rd2224, {%r1644, %r1643};
	xor.b64  	%rd2225, %rd2223, %rd2224;
	xor.b64  	%rd2226, %rd1999, %rd1951;
	xor.b64  	%rd2227, %rd1999, %rd1975;
	and.b64  	%rd2228, %rd2227, %rd2226;
	xor.b64  	%rd2229, %rd2228, %rd1999;
	add.s64 	%rd2230, %rd2219, %rd2229;
	add.s64 	%rd2231, %rd2230, %rd2225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1645,%dummy}, %rd2220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1646}, %rd2220;
	}
	shf.r.wrap.b32 	%r1647, %r1646, %r1645, 14;
	shf.r.wrap.b32 	%r1648, %r1645, %r1646, 14;
	mov.b64 	%rd2232, {%r1648, %r1647};
	shf.r.wrap.b32 	%r1649, %r1646, %r1645, 18;
	shf.r.wrap.b32 	%r1650, %r1645, %r1646, 18;
	mov.b64 	%rd2233, {%r1650, %r1649};
	xor.b64  	%rd2234, %rd2233, %rd2232;
	shf.l.wrap.b32 	%r1651, %r1645, %r1646, 23;
	shf.l.wrap.b32 	%r1652, %r1646, %r1645, 23;
	mov.b64 	%rd2235, {%r1652, %r1651};
	xor.b64  	%rd2236, %rd2234, %rd2235;
	xor.b64  	%rd2237, %rd1988, %rd1964;
	and.b64  	%rd2238, %rd2220, %rd2237;
	xor.b64  	%rd2239, %rd2238, %rd1964;
	add.s64 	%rd2240, %rd2025, %rd1940;
	ld.const.u64 	%rd8772, [k_sha512+392];
	add.s64 	%rd2241, %rd2240, %rd8772;
	add.s64 	%rd2242, %rd2241, %rd2239;
	add.s64 	%rd2243, %rd2242, %rd2236;
	add.s64 	%rd2244, %rd2243, %rd1951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1653,%dummy}, %rd2231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1654}, %rd2231;
	}
	shf.r.wrap.b32 	%r1655, %r1654, %r1653, 28;
	shf.r.wrap.b32 	%r1656, %r1653, %r1654, 28;
	mov.b64 	%rd2245, {%r1656, %r1655};
	shf.l.wrap.b32 	%r1657, %r1653, %r1654, 30;
	shf.l.wrap.b32 	%r1658, %r1654, %r1653, 30;
	mov.b64 	%rd2246, {%r1658, %r1657};
	xor.b64  	%rd2247, %rd2246, %rd2245;
	shf.l.wrap.b32 	%r1659, %r1653, %r1654, 25;
	shf.l.wrap.b32 	%r1660, %r1654, %r1653, 25;
	mov.b64 	%rd2248, {%r1660, %r1659};
	xor.b64  	%rd2249, %rd2247, %rd2248;
	xor.b64  	%rd2250, %rd2231, %rd1975;
	xor.b64  	%rd2251, %rd2231, %rd1999;
	and.b64  	%rd2252, %rd2251, %rd2250;
	xor.b64  	%rd2253, %rd2252, %rd2231;
	add.s64 	%rd2254, %rd2243, %rd2253;
	add.s64 	%rd2255, %rd2254, %rd2249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1661,%dummy}, %rd2244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1662}, %rd2244;
	}
	shf.r.wrap.b32 	%r1663, %r1662, %r1661, 14;
	shf.r.wrap.b32 	%r1664, %r1661, %r1662, 14;
	mov.b64 	%rd2256, {%r1664, %r1663};
	shf.r.wrap.b32 	%r1665, %r1662, %r1661, 18;
	shf.r.wrap.b32 	%r1666, %r1661, %r1662, 18;
	mov.b64 	%rd2257, {%r1666, %r1665};
	xor.b64  	%rd2258, %rd2257, %rd2256;
	shf.l.wrap.b32 	%r1667, %r1661, %r1662, 23;
	shf.l.wrap.b32 	%r1668, %r1662, %r1661, 23;
	mov.b64 	%rd2259, {%r1668, %r1667};
	xor.b64  	%rd2260, %rd2258, %rd2259;
	xor.b64  	%rd2261, %rd2220, %rd1988;
	and.b64  	%rd2262, %rd2244, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd1988;
	add.s64 	%rd2264, %rd2038, %rd1964;
	ld.const.u64 	%rd8771, [k_sha512+400];
	add.s64 	%rd2265, %rd2264, %rd8771;
	add.s64 	%rd2266, %rd2265, %rd2263;
	add.s64 	%rd2267, %rd2266, %rd2260;
	add.s64 	%rd2268, %rd2267, %rd1975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1669,%dummy}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1670}, %rd2255;
	}
	shf.r.wrap.b32 	%r1671, %r1670, %r1669, 28;
	shf.r.wrap.b32 	%r1672, %r1669, %r1670, 28;
	mov.b64 	%rd2269, {%r1672, %r1671};
	shf.l.wrap.b32 	%r1673, %r1669, %r1670, 30;
	shf.l.wrap.b32 	%r1674, %r1670, %r1669, 30;
	mov.b64 	%rd2270, {%r1674, %r1673};
	xor.b64  	%rd2271, %rd2270, %rd2269;
	shf.l.wrap.b32 	%r1675, %r1669, %r1670, 25;
	shf.l.wrap.b32 	%r1676, %r1670, %r1669, 25;
	mov.b64 	%rd2272, {%r1676, %r1675};
	xor.b64  	%rd2273, %rd2271, %rd2272;
	xor.b64  	%rd2274, %rd2255, %rd1999;
	xor.b64  	%rd2275, %rd2255, %rd2231;
	and.b64  	%rd2276, %rd2275, %rd2274;
	xor.b64  	%rd2277, %rd2276, %rd2255;
	add.s64 	%rd2278, %rd2267, %rd2277;
	add.s64 	%rd2279, %rd2278, %rd2273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1677,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1678}, %rd2268;
	}
	shf.r.wrap.b32 	%r1679, %r1678, %r1677, 14;
	shf.r.wrap.b32 	%r1680, %r1677, %r1678, 14;
	mov.b64 	%rd2280, {%r1680, %r1679};
	shf.r.wrap.b32 	%r1681, %r1678, %r1677, 18;
	shf.r.wrap.b32 	%r1682, %r1677, %r1678, 18;
	mov.b64 	%rd2281, {%r1682, %r1681};
	xor.b64  	%rd2282, %rd2281, %rd2280;
	shf.l.wrap.b32 	%r1683, %r1677, %r1678, 23;
	shf.l.wrap.b32 	%r1684, %r1678, %r1677, 23;
	mov.b64 	%rd2283, {%r1684, %r1683};
	xor.b64  	%rd2284, %rd2282, %rd2283;
	xor.b64  	%rd2285, %rd2244, %rd2220;
	and.b64  	%rd2286, %rd2268, %rd2285;
	xor.b64  	%rd2287, %rd2286, %rd2220;
	add.s64 	%rd2288, %rd2051, %rd1988;
	ld.const.u64 	%rd8770, [k_sha512+408];
	add.s64 	%rd2289, %rd2288, %rd8770;
	add.s64 	%rd2290, %rd2289, %rd2287;
	add.s64 	%rd2291, %rd2290, %rd2284;
	add.s64 	%rd2292, %rd2291, %rd1999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1685,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1686}, %rd2279;
	}
	shf.r.wrap.b32 	%r1687, %r1686, %r1685, 28;
	shf.r.wrap.b32 	%r1688, %r1685, %r1686, 28;
	mov.b64 	%rd2293, {%r1688, %r1687};
	shf.l.wrap.b32 	%r1689, %r1685, %r1686, 30;
	shf.l.wrap.b32 	%r1690, %r1686, %r1685, 30;
	mov.b64 	%rd2294, {%r1690, %r1689};
	xor.b64  	%rd2295, %rd2294, %rd2293;
	shf.l.wrap.b32 	%r1691, %r1685, %r1686, 25;
	shf.l.wrap.b32 	%r1692, %r1686, %r1685, 25;
	mov.b64 	%rd2296, {%r1692, %r1691};
	xor.b64  	%rd2297, %rd2295, %rd2296;
	xor.b64  	%rd2298, %rd2279, %rd2231;
	xor.b64  	%rd2299, %rd2279, %rd2255;
	and.b64  	%rd2300, %rd2299, %rd2298;
	xor.b64  	%rd2301, %rd2300, %rd2279;
	add.s64 	%rd2302, %rd2291, %rd2301;
	add.s64 	%rd2303, %rd2302, %rd2297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1693,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1694}, %rd2292;
	}
	shf.r.wrap.b32 	%r1695, %r1694, %r1693, 14;
	shf.r.wrap.b32 	%r1696, %r1693, %r1694, 14;
	mov.b64 	%rd2304, {%r1696, %r1695};
	shf.r.wrap.b32 	%r1697, %r1694, %r1693, 18;
	shf.r.wrap.b32 	%r1698, %r1693, %r1694, 18;
	mov.b64 	%rd2305, {%r1698, %r1697};
	xor.b64  	%rd2306, %rd2305, %rd2304;
	shf.l.wrap.b32 	%r1699, %r1693, %r1694, 23;
	shf.l.wrap.b32 	%r1700, %r1694, %r1693, 23;
	mov.b64 	%rd2307, {%r1700, %r1699};
	xor.b64  	%rd2308, %rd2306, %rd2307;
	xor.b64  	%rd2309, %rd2268, %rd2244;
	and.b64  	%rd2310, %rd2292, %rd2309;
	xor.b64  	%rd2311, %rd2310, %rd2244;
	add.s64 	%rd2312, %rd2220, %rd2064;
	ld.const.u64 	%rd8769, [k_sha512+416];
	add.s64 	%rd2313, %rd2312, %rd8769;
	add.s64 	%rd2314, %rd2313, %rd2311;
	add.s64 	%rd2315, %rd2314, %rd2308;
	add.s64 	%rd2316, %rd2315, %rd2231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1701,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1702}, %rd2303;
	}
	shf.r.wrap.b32 	%r1703, %r1702, %r1701, 28;
	shf.r.wrap.b32 	%r1704, %r1701, %r1702, 28;
	mov.b64 	%rd2317, {%r1704, %r1703};
	shf.l.wrap.b32 	%r1705, %r1701, %r1702, 30;
	shf.l.wrap.b32 	%r1706, %r1702, %r1701, 30;
	mov.b64 	%rd2318, {%r1706, %r1705};
	xor.b64  	%rd2319, %rd2318, %rd2317;
	shf.l.wrap.b32 	%r1707, %r1701, %r1702, 25;
	shf.l.wrap.b32 	%r1708, %r1702, %r1701, 25;
	mov.b64 	%rd2320, {%r1708, %r1707};
	xor.b64  	%rd2321, %rd2319, %rd2320;
	xor.b64  	%rd2322, %rd2303, %rd2255;
	xor.b64  	%rd2323, %rd2303, %rd2279;
	and.b64  	%rd2324, %rd2323, %rd2322;
	xor.b64  	%rd2325, %rd2324, %rd2303;
	add.s64 	%rd2326, %rd2315, %rd2325;
	add.s64 	%rd2327, %rd2326, %rd2321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1709,%dummy}, %rd2316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1710}, %rd2316;
	}
	shf.r.wrap.b32 	%r1711, %r1710, %r1709, 14;
	shf.r.wrap.b32 	%r1712, %r1709, %r1710, 14;
	mov.b64 	%rd2328, {%r1712, %r1711};
	shf.r.wrap.b32 	%r1713, %r1710, %r1709, 18;
	shf.r.wrap.b32 	%r1714, %r1709, %r1710, 18;
	mov.b64 	%rd2329, {%r1714, %r1713};
	xor.b64  	%rd2330, %rd2329, %rd2328;
	shf.l.wrap.b32 	%r1715, %r1709, %r1710, 23;
	shf.l.wrap.b32 	%r1716, %r1710, %r1709, 23;
	mov.b64 	%rd2331, {%r1716, %r1715};
	xor.b64  	%rd2332, %rd2330, %rd2331;
	xor.b64  	%rd2333, %rd2292, %rd2268;
	and.b64  	%rd2334, %rd2316, %rd2333;
	xor.b64  	%rd2335, %rd2334, %rd2268;
	add.s64 	%rd2336, %rd2244, %rd2077;
	ld.const.u64 	%rd8768, [k_sha512+424];
	add.s64 	%rd2337, %rd2336, %rd8768;
	add.s64 	%rd2338, %rd2337, %rd2335;
	add.s64 	%rd2339, %rd2338, %rd2332;
	add.s64 	%rd2340, %rd2339, %rd2255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1717,%dummy}, %rd2327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1718}, %rd2327;
	}
	shf.r.wrap.b32 	%r1719, %r1718, %r1717, 28;
	shf.r.wrap.b32 	%r1720, %r1717, %r1718, 28;
	mov.b64 	%rd2341, {%r1720, %r1719};
	shf.l.wrap.b32 	%r1721, %r1717, %r1718, 30;
	shf.l.wrap.b32 	%r1722, %r1718, %r1717, 30;
	mov.b64 	%rd2342, {%r1722, %r1721};
	xor.b64  	%rd2343, %rd2342, %rd2341;
	shf.l.wrap.b32 	%r1723, %r1717, %r1718, 25;
	shf.l.wrap.b32 	%r1724, %r1718, %r1717, 25;
	mov.b64 	%rd2344, {%r1724, %r1723};
	xor.b64  	%rd2345, %rd2343, %rd2344;
	xor.b64  	%rd2346, %rd2327, %rd2279;
	xor.b64  	%rd2347, %rd2327, %rd2303;
	and.b64  	%rd2348, %rd2347, %rd2346;
	xor.b64  	%rd2349, %rd2348, %rd2327;
	add.s64 	%rd2350, %rd2339, %rd2349;
	add.s64 	%rd2351, %rd2350, %rd2345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1725,%dummy}, %rd2340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1726}, %rd2340;
	}
	shf.r.wrap.b32 	%r1727, %r1726, %r1725, 14;
	shf.r.wrap.b32 	%r1728, %r1725, %r1726, 14;
	mov.b64 	%rd2352, {%r1728, %r1727};
	shf.r.wrap.b32 	%r1729, %r1726, %r1725, 18;
	shf.r.wrap.b32 	%r1730, %r1725, %r1726, 18;
	mov.b64 	%rd2353, {%r1730, %r1729};
	xor.b64  	%rd2354, %rd2353, %rd2352;
	shf.l.wrap.b32 	%r1731, %r1725, %r1726, 23;
	shf.l.wrap.b32 	%r1732, %r1726, %r1725, 23;
	mov.b64 	%rd2355, {%r1732, %r1731};
	xor.b64  	%rd2356, %rd2354, %rd2355;
	xor.b64  	%rd2357, %rd2316, %rd2292;
	and.b64  	%rd2358, %rd2340, %rd2357;
	xor.b64  	%rd2359, %rd2358, %rd2292;
	add.s64 	%rd2360, %rd2268, %rd2090;
	ld.const.u64 	%rd8767, [k_sha512+432];
	add.s64 	%rd2361, %rd2360, %rd8767;
	add.s64 	%rd2362, %rd2361, %rd2359;
	add.s64 	%rd2363, %rd2362, %rd2356;
	add.s64 	%rd2364, %rd2363, %rd2279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1733,%dummy}, %rd2351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1734}, %rd2351;
	}
	shf.r.wrap.b32 	%r1735, %r1734, %r1733, 28;
	shf.r.wrap.b32 	%r1736, %r1733, %r1734, 28;
	mov.b64 	%rd2365, {%r1736, %r1735};
	shf.l.wrap.b32 	%r1737, %r1733, %r1734, 30;
	shf.l.wrap.b32 	%r1738, %r1734, %r1733, 30;
	mov.b64 	%rd2366, {%r1738, %r1737};
	xor.b64  	%rd2367, %rd2366, %rd2365;
	shf.l.wrap.b32 	%r1739, %r1733, %r1734, 25;
	shf.l.wrap.b32 	%r1740, %r1734, %r1733, 25;
	mov.b64 	%rd2368, {%r1740, %r1739};
	xor.b64  	%rd2369, %rd2367, %rd2368;
	xor.b64  	%rd2370, %rd2351, %rd2303;
	xor.b64  	%rd2371, %rd2351, %rd2327;
	and.b64  	%rd2372, %rd2371, %rd2370;
	xor.b64  	%rd2373, %rd2372, %rd2351;
	add.s64 	%rd2374, %rd2363, %rd2373;
	add.s64 	%rd2375, %rd2374, %rd2369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1741,%dummy}, %rd2364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1742}, %rd2364;
	}
	shf.r.wrap.b32 	%r1743, %r1742, %r1741, 14;
	shf.r.wrap.b32 	%r1744, %r1741, %r1742, 14;
	mov.b64 	%rd2376, {%r1744, %r1743};
	shf.r.wrap.b32 	%r1745, %r1742, %r1741, 18;
	shf.r.wrap.b32 	%r1746, %r1741, %r1742, 18;
	mov.b64 	%rd2377, {%r1746, %r1745};
	xor.b64  	%rd2378, %rd2377, %rd2376;
	shf.l.wrap.b32 	%r1747, %r1741, %r1742, 23;
	shf.l.wrap.b32 	%r1748, %r1742, %r1741, 23;
	mov.b64 	%rd2379, {%r1748, %r1747};
	xor.b64  	%rd2380, %rd2378, %rd2379;
	xor.b64  	%rd2381, %rd2340, %rd2316;
	and.b64  	%rd2382, %rd2364, %rd2381;
	xor.b64  	%rd2383, %rd2382, %rd2316;
	add.s64 	%rd2384, %rd2292, %rd2103;
	ld.const.u64 	%rd8766, [k_sha512+440];
	add.s64 	%rd2385, %rd2384, %rd8766;
	add.s64 	%rd2386, %rd2385, %rd2383;
	add.s64 	%rd2387, %rd2386, %rd2380;
	add.s64 	%rd2388, %rd2387, %rd2303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1749,%dummy}, %rd2375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1750}, %rd2375;
	}
	shf.r.wrap.b32 	%r1751, %r1750, %r1749, 28;
	shf.r.wrap.b32 	%r1752, %r1749, %r1750, 28;
	mov.b64 	%rd2389, {%r1752, %r1751};
	shf.l.wrap.b32 	%r1753, %r1749, %r1750, 30;
	shf.l.wrap.b32 	%r1754, %r1750, %r1749, 30;
	mov.b64 	%rd2390, {%r1754, %r1753};
	xor.b64  	%rd2391, %rd2390, %rd2389;
	shf.l.wrap.b32 	%r1755, %r1749, %r1750, 25;
	shf.l.wrap.b32 	%r1756, %r1750, %r1749, 25;
	mov.b64 	%rd2392, {%r1756, %r1755};
	xor.b64  	%rd2393, %rd2391, %rd2392;
	xor.b64  	%rd2394, %rd2375, %rd2327;
	xor.b64  	%rd2395, %rd2375, %rd2351;
	and.b64  	%rd2396, %rd2395, %rd2394;
	xor.b64  	%rd2397, %rd2396, %rd2375;
	add.s64 	%rd2398, %rd2387, %rd2397;
	add.s64 	%rd2399, %rd2398, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1757,%dummy}, %rd2388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1758}, %rd2388;
	}
	shf.r.wrap.b32 	%r1759, %r1758, %r1757, 14;
	shf.r.wrap.b32 	%r1760, %r1757, %r1758, 14;
	mov.b64 	%rd2400, {%r1760, %r1759};
	shf.r.wrap.b32 	%r1761, %r1758, %r1757, 18;
	shf.r.wrap.b32 	%r1762, %r1757, %r1758, 18;
	mov.b64 	%rd2401, {%r1762, %r1761};
	xor.b64  	%rd2402, %rd2401, %rd2400;
	shf.l.wrap.b32 	%r1763, %r1757, %r1758, 23;
	shf.l.wrap.b32 	%r1764, %r1758, %r1757, 23;
	mov.b64 	%rd2403, {%r1764, %r1763};
	xor.b64  	%rd2404, %rd2402, %rd2403;
	xor.b64  	%rd2405, %rd2364, %rd2340;
	and.b64  	%rd2406, %rd2388, %rd2405;
	xor.b64  	%rd2407, %rd2406, %rd2340;
	add.s64 	%rd2408, %rd2316, %rd2116;
	ld.const.u64 	%rd8765, [k_sha512+448];
	add.s64 	%rd2409, %rd2408, %rd8765;
	add.s64 	%rd2410, %rd2409, %rd2407;
	add.s64 	%rd2411, %rd2410, %rd2404;
	add.s64 	%rd2412, %rd2411, %rd2327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1765,%dummy}, %rd2399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1766}, %rd2399;
	}
	shf.r.wrap.b32 	%r1767, %r1766, %r1765, 28;
	shf.r.wrap.b32 	%r1768, %r1765, %r1766, 28;
	mov.b64 	%rd2413, {%r1768, %r1767};
	shf.l.wrap.b32 	%r1769, %r1765, %r1766, 30;
	shf.l.wrap.b32 	%r1770, %r1766, %r1765, 30;
	mov.b64 	%rd2414, {%r1770, %r1769};
	xor.b64  	%rd2415, %rd2414, %rd2413;
	shf.l.wrap.b32 	%r1771, %r1765, %r1766, 25;
	shf.l.wrap.b32 	%r1772, %r1766, %r1765, 25;
	mov.b64 	%rd2416, {%r1772, %r1771};
	xor.b64  	%rd2417, %rd2415, %rd2416;
	xor.b64  	%rd2418, %rd2399, %rd2351;
	xor.b64  	%rd2419, %rd2399, %rd2375;
	and.b64  	%rd2420, %rd2419, %rd2418;
	xor.b64  	%rd2421, %rd2420, %rd2399;
	add.s64 	%rd2422, %rd2411, %rd2421;
	add.s64 	%rd2423, %rd2422, %rd2417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1773,%dummy}, %rd2412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1774}, %rd2412;
	}
	shf.r.wrap.b32 	%r1775, %r1774, %r1773, 14;
	shf.r.wrap.b32 	%r1776, %r1773, %r1774, 14;
	mov.b64 	%rd2424, {%r1776, %r1775};
	shf.r.wrap.b32 	%r1777, %r1774, %r1773, 18;
	shf.r.wrap.b32 	%r1778, %r1773, %r1774, 18;
	mov.b64 	%rd2425, {%r1778, %r1777};
	xor.b64  	%rd2426, %rd2425, %rd2424;
	shf.l.wrap.b32 	%r1779, %r1773, %r1774, 23;
	shf.l.wrap.b32 	%r1780, %r1774, %r1773, 23;
	mov.b64 	%rd2427, {%r1780, %r1779};
	xor.b64  	%rd2428, %rd2426, %rd2427;
	xor.b64  	%rd2429, %rd2388, %rd2364;
	and.b64  	%rd2430, %rd2412, %rd2429;
	xor.b64  	%rd2431, %rd2430, %rd2364;
	add.s64 	%rd2432, %rd2340, %rd2129;
	ld.const.u64 	%rd8764, [k_sha512+456];
	add.s64 	%rd2433, %rd2432, %rd8764;
	add.s64 	%rd2434, %rd2433, %rd2431;
	add.s64 	%rd2435, %rd2434, %rd2428;
	add.s64 	%rd2436, %rd2435, %rd2351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1781,%dummy}, %rd2423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1782}, %rd2423;
	}
	shf.r.wrap.b32 	%r1783, %r1782, %r1781, 28;
	shf.r.wrap.b32 	%r1784, %r1781, %r1782, 28;
	mov.b64 	%rd2437, {%r1784, %r1783};
	shf.l.wrap.b32 	%r1785, %r1781, %r1782, 30;
	shf.l.wrap.b32 	%r1786, %r1782, %r1781, 30;
	mov.b64 	%rd2438, {%r1786, %r1785};
	xor.b64  	%rd2439, %rd2438, %rd2437;
	shf.l.wrap.b32 	%r1787, %r1781, %r1782, 25;
	shf.l.wrap.b32 	%r1788, %r1782, %r1781, 25;
	mov.b64 	%rd2440, {%r1788, %r1787};
	xor.b64  	%rd2441, %rd2439, %rd2440;
	xor.b64  	%rd2442, %rd2423, %rd2375;
	xor.b64  	%rd2443, %rd2423, %rd2399;
	and.b64  	%rd2444, %rd2443, %rd2442;
	xor.b64  	%rd2445, %rd2444, %rd2423;
	add.s64 	%rd2446, %rd2435, %rd2445;
	add.s64 	%rd2447, %rd2446, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1789,%dummy}, %rd2436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1790}, %rd2436;
	}
	shf.r.wrap.b32 	%r1791, %r1790, %r1789, 14;
	shf.r.wrap.b32 	%r1792, %r1789, %r1790, 14;
	mov.b64 	%rd2448, {%r1792, %r1791};
	shf.r.wrap.b32 	%r1793, %r1790, %r1789, 18;
	shf.r.wrap.b32 	%r1794, %r1789, %r1790, 18;
	mov.b64 	%rd2449, {%r1794, %r1793};
	xor.b64  	%rd2450, %rd2449, %rd2448;
	shf.l.wrap.b32 	%r1795, %r1789, %r1790, 23;
	shf.l.wrap.b32 	%r1796, %r1790, %r1789, 23;
	mov.b64 	%rd2451, {%r1796, %r1795};
	xor.b64  	%rd2452, %rd2450, %rd2451;
	xor.b64  	%rd2453, %rd2412, %rd2388;
	and.b64  	%rd2454, %rd2436, %rd2453;
	xor.b64  	%rd2455, %rd2454, %rd2388;
	add.s64 	%rd2456, %rd2364, %rd2142;
	ld.const.u64 	%rd8763, [k_sha512+464];
	add.s64 	%rd2457, %rd2456, %rd8763;
	add.s64 	%rd2458, %rd2457, %rd2455;
	add.s64 	%rd2459, %rd2458, %rd2452;
	add.s64 	%rd2460, %rd2459, %rd2375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd2447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd2447;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 28;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 28;
	mov.b64 	%rd2461, {%r1800, %r1799};
	shf.l.wrap.b32 	%r1801, %r1797, %r1798, 30;
	shf.l.wrap.b32 	%r1802, %r1798, %r1797, 30;
	mov.b64 	%rd2462, {%r1802, %r1801};
	xor.b64  	%rd2463, %rd2462, %rd2461;
	shf.l.wrap.b32 	%r1803, %r1797, %r1798, 25;
	shf.l.wrap.b32 	%r1804, %r1798, %r1797, 25;
	mov.b64 	%rd2464, {%r1804, %r1803};
	xor.b64  	%rd2465, %rd2463, %rd2464;
	xor.b64  	%rd2466, %rd2447, %rd2399;
	xor.b64  	%rd2467, %rd2447, %rd2423;
	and.b64  	%rd2468, %rd2467, %rd2466;
	xor.b64  	%rd2469, %rd2468, %rd2447;
	add.s64 	%rd2470, %rd2459, %rd2469;
	add.s64 	%rd2471, %rd2470, %rd2465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd2460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd2460;
	}
	shf.r.wrap.b32 	%r1807, %r1806, %r1805, 14;
	shf.r.wrap.b32 	%r1808, %r1805, %r1806, 14;
	mov.b64 	%rd2472, {%r1808, %r1807};
	shf.r.wrap.b32 	%r1809, %r1806, %r1805, 18;
	shf.r.wrap.b32 	%r1810, %r1805, %r1806, 18;
	mov.b64 	%rd2473, {%r1810, %r1809};
	xor.b64  	%rd2474, %rd2473, %rd2472;
	shf.l.wrap.b32 	%r1811, %r1805, %r1806, 23;
	shf.l.wrap.b32 	%r1812, %r1806, %r1805, 23;
	mov.b64 	%rd2475, {%r1812, %r1811};
	xor.b64  	%rd2476, %rd2474, %rd2475;
	xor.b64  	%rd2477, %rd2436, %rd2412;
	and.b64  	%rd2478, %rd2460, %rd2477;
	xor.b64  	%rd2479, %rd2478, %rd2412;
	add.s64 	%rd2480, %rd2388, %rd2155;
	ld.const.u64 	%rd8762, [k_sha512+472];
	add.s64 	%rd2481, %rd2480, %rd8762;
	add.s64 	%rd2482, %rd2481, %rd2479;
	add.s64 	%rd2483, %rd2482, %rd2476;
	add.s64 	%rd2484, %rd2483, %rd2399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1813,%dummy}, %rd2471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1814}, %rd2471;
	}
	shf.r.wrap.b32 	%r1815, %r1814, %r1813, 28;
	shf.r.wrap.b32 	%r1816, %r1813, %r1814, 28;
	mov.b64 	%rd2485, {%r1816, %r1815};
	shf.l.wrap.b32 	%r1817, %r1813, %r1814, 30;
	shf.l.wrap.b32 	%r1818, %r1814, %r1813, 30;
	mov.b64 	%rd2486, {%r1818, %r1817};
	xor.b64  	%rd2487, %rd2486, %rd2485;
	shf.l.wrap.b32 	%r1819, %r1813, %r1814, 25;
	shf.l.wrap.b32 	%r1820, %r1814, %r1813, 25;
	mov.b64 	%rd2488, {%r1820, %r1819};
	xor.b64  	%rd2489, %rd2487, %rd2488;
	xor.b64  	%rd2490, %rd2471, %rd2423;
	xor.b64  	%rd2491, %rd2471, %rd2447;
	and.b64  	%rd2492, %rd2491, %rd2490;
	xor.b64  	%rd2493, %rd2492, %rd2471;
	add.s64 	%rd2494, %rd2483, %rd2493;
	add.s64 	%rd2495, %rd2494, %rd2489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1821,%dummy}, %rd2484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1822}, %rd2484;
	}
	shf.r.wrap.b32 	%r1823, %r1822, %r1821, 14;
	shf.r.wrap.b32 	%r1824, %r1821, %r1822, 14;
	mov.b64 	%rd2496, {%r1824, %r1823};
	shf.r.wrap.b32 	%r1825, %r1822, %r1821, 18;
	shf.r.wrap.b32 	%r1826, %r1821, %r1822, 18;
	mov.b64 	%rd2497, {%r1826, %r1825};
	xor.b64  	%rd2498, %rd2497, %rd2496;
	shf.l.wrap.b32 	%r1827, %r1821, %r1822, 23;
	shf.l.wrap.b32 	%r1828, %r1822, %r1821, 23;
	mov.b64 	%rd2499, {%r1828, %r1827};
	xor.b64  	%rd2500, %rd2498, %rd2499;
	xor.b64  	%rd2501, %rd2460, %rd2436;
	and.b64  	%rd2502, %rd2484, %rd2501;
	xor.b64  	%rd2503, %rd2502, %rd2436;
	add.s64 	%rd2504, %rd2412, %rd2168;
	ld.const.u64 	%rd8761, [k_sha512+480];
	add.s64 	%rd2505, %rd2504, %rd8761;
	add.s64 	%rd2506, %rd2505, %rd2503;
	add.s64 	%rd2507, %rd2506, %rd2500;
	add.s64 	%rd2508, %rd2507, %rd2423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1829,%dummy}, %rd2495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1830}, %rd2495;
	}
	shf.r.wrap.b32 	%r1831, %r1830, %r1829, 28;
	shf.r.wrap.b32 	%r1832, %r1829, %r1830, 28;
	mov.b64 	%rd2509, {%r1832, %r1831};
	shf.l.wrap.b32 	%r1833, %r1829, %r1830, 30;
	shf.l.wrap.b32 	%r1834, %r1830, %r1829, 30;
	mov.b64 	%rd2510, {%r1834, %r1833};
	xor.b64  	%rd2511, %rd2510, %rd2509;
	shf.l.wrap.b32 	%r1835, %r1829, %r1830, 25;
	shf.l.wrap.b32 	%r1836, %r1830, %r1829, 25;
	mov.b64 	%rd2512, {%r1836, %r1835};
	xor.b64  	%rd2513, %rd2511, %rd2512;
	xor.b64  	%rd2514, %rd2495, %rd2447;
	xor.b64  	%rd2515, %rd2495, %rd2471;
	and.b64  	%rd2516, %rd2515, %rd2514;
	xor.b64  	%rd2517, %rd2516, %rd2495;
	add.s64 	%rd2518, %rd2507, %rd2517;
	add.s64 	%rd2519, %rd2518, %rd2513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1837,%dummy}, %rd2508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1838}, %rd2508;
	}
	shf.r.wrap.b32 	%r1839, %r1838, %r1837, 14;
	shf.r.wrap.b32 	%r1840, %r1837, %r1838, 14;
	mov.b64 	%rd2520, {%r1840, %r1839};
	shf.r.wrap.b32 	%r1841, %r1838, %r1837, 18;
	shf.r.wrap.b32 	%r1842, %r1837, %r1838, 18;
	mov.b64 	%rd2521, {%r1842, %r1841};
	xor.b64  	%rd2522, %rd2521, %rd2520;
	shf.l.wrap.b32 	%r1843, %r1837, %r1838, 23;
	shf.l.wrap.b32 	%r1844, %r1838, %r1837, 23;
	mov.b64 	%rd2523, {%r1844, %r1843};
	xor.b64  	%rd2524, %rd2522, %rd2523;
	xor.b64  	%rd2525, %rd2484, %rd2460;
	and.b64  	%rd2526, %rd2508, %rd2525;
	xor.b64  	%rd2527, %rd2526, %rd2460;
	add.s64 	%rd2528, %rd2436, %rd2181;
	ld.const.u64 	%rd8760, [k_sha512+488];
	add.s64 	%rd2529, %rd2528, %rd8760;
	add.s64 	%rd2530, %rd2529, %rd2527;
	add.s64 	%rd2531, %rd2530, %rd2524;
	add.s64 	%rd2532, %rd2531, %rd2447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1845,%dummy}, %rd2519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1846}, %rd2519;
	}
	shf.r.wrap.b32 	%r1847, %r1846, %r1845, 28;
	shf.r.wrap.b32 	%r1848, %r1845, %r1846, 28;
	mov.b64 	%rd2533, {%r1848, %r1847};
	shf.l.wrap.b32 	%r1849, %r1845, %r1846, 30;
	shf.l.wrap.b32 	%r1850, %r1846, %r1845, 30;
	mov.b64 	%rd2534, {%r1850, %r1849};
	xor.b64  	%rd2535, %rd2534, %rd2533;
	shf.l.wrap.b32 	%r1851, %r1845, %r1846, 25;
	shf.l.wrap.b32 	%r1852, %r1846, %r1845, 25;
	mov.b64 	%rd2536, {%r1852, %r1851};
	xor.b64  	%rd2537, %rd2535, %rd2536;
	xor.b64  	%rd2538, %rd2519, %rd2471;
	xor.b64  	%rd2539, %rd2519, %rd2495;
	and.b64  	%rd2540, %rd2539, %rd2538;
	xor.b64  	%rd2541, %rd2540, %rd2519;
	add.s64 	%rd2542, %rd2531, %rd2541;
	add.s64 	%rd2543, %rd2542, %rd2537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1853,%dummy}, %rd2532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1854}, %rd2532;
	}
	shf.r.wrap.b32 	%r1855, %r1854, %r1853, 14;
	shf.r.wrap.b32 	%r1856, %r1853, %r1854, 14;
	mov.b64 	%rd2544, {%r1856, %r1855};
	shf.r.wrap.b32 	%r1857, %r1854, %r1853, 18;
	shf.r.wrap.b32 	%r1858, %r1853, %r1854, 18;
	mov.b64 	%rd2545, {%r1858, %r1857};
	xor.b64  	%rd2546, %rd2545, %rd2544;
	shf.l.wrap.b32 	%r1859, %r1853, %r1854, 23;
	shf.l.wrap.b32 	%r1860, %r1854, %r1853, 23;
	mov.b64 	%rd2547, {%r1860, %r1859};
	xor.b64  	%rd2548, %rd2546, %rd2547;
	xor.b64  	%rd2549, %rd2508, %rd2484;
	and.b64  	%rd2550, %rd2532, %rd2549;
	xor.b64  	%rd2551, %rd2550, %rd2484;
	add.s64 	%rd2552, %rd2460, %rd2194;
	ld.const.u64 	%rd8759, [k_sha512+496];
	add.s64 	%rd2553, %rd2552, %rd8759;
	add.s64 	%rd2554, %rd2553, %rd2551;
	add.s64 	%rd2555, %rd2554, %rd2548;
	add.s64 	%rd2556, %rd2555, %rd2471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1861,%dummy}, %rd2543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1862}, %rd2543;
	}
	shf.r.wrap.b32 	%r1863, %r1862, %r1861, 28;
	shf.r.wrap.b32 	%r1864, %r1861, %r1862, 28;
	mov.b64 	%rd2557, {%r1864, %r1863};
	shf.l.wrap.b32 	%r1865, %r1861, %r1862, 30;
	shf.l.wrap.b32 	%r1866, %r1862, %r1861, 30;
	mov.b64 	%rd2558, {%r1866, %r1865};
	xor.b64  	%rd2559, %rd2558, %rd2557;
	shf.l.wrap.b32 	%r1867, %r1861, %r1862, 25;
	shf.l.wrap.b32 	%r1868, %r1862, %r1861, 25;
	mov.b64 	%rd2560, {%r1868, %r1867};
	xor.b64  	%rd2561, %rd2559, %rd2560;
	xor.b64  	%rd2562, %rd2543, %rd2495;
	xor.b64  	%rd2563, %rd2543, %rd2519;
	and.b64  	%rd2564, %rd2563, %rd2562;
	xor.b64  	%rd2565, %rd2564, %rd2543;
	add.s64 	%rd2566, %rd2555, %rd2565;
	add.s64 	%rd2567, %rd2566, %rd2561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1869,%dummy}, %rd2556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1870}, %rd2556;
	}
	shf.r.wrap.b32 	%r1871, %r1870, %r1869, 14;
	shf.r.wrap.b32 	%r1872, %r1869, %r1870, 14;
	mov.b64 	%rd2568, {%r1872, %r1871};
	shf.r.wrap.b32 	%r1873, %r1870, %r1869, 18;
	shf.r.wrap.b32 	%r1874, %r1869, %r1870, 18;
	mov.b64 	%rd2569, {%r1874, %r1873};
	xor.b64  	%rd2570, %rd2569, %rd2568;
	shf.l.wrap.b32 	%r1875, %r1869, %r1870, 23;
	shf.l.wrap.b32 	%r1876, %r1870, %r1869, 23;
	mov.b64 	%rd2571, {%r1876, %r1875};
	xor.b64  	%rd2572, %rd2570, %rd2571;
	xor.b64  	%rd2573, %rd2532, %rd2508;
	and.b64  	%rd2574, %rd2556, %rd2573;
	xor.b64  	%rd2575, %rd2574, %rd2508;
	add.s64 	%rd2576, %rd2484, %rd2207;
	ld.const.u64 	%rd8758, [k_sha512+504];
	add.s64 	%rd2577, %rd2576, %rd8758;
	add.s64 	%rd2578, %rd2577, %rd2575;
	add.s64 	%rd2579, %rd2578, %rd2572;
	add.s64 	%rd2580, %rd2579, %rd2495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1877,%dummy}, %rd2567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1878}, %rd2567;
	}
	shf.r.wrap.b32 	%r1879, %r1878, %r1877, 28;
	shf.r.wrap.b32 	%r1880, %r1877, %r1878, 28;
	mov.b64 	%rd2581, {%r1880, %r1879};
	shf.l.wrap.b32 	%r1881, %r1877, %r1878, 30;
	shf.l.wrap.b32 	%r1882, %r1878, %r1877, 30;
	mov.b64 	%rd2582, {%r1882, %r1881};
	xor.b64  	%rd2583, %rd2582, %rd2581;
	shf.l.wrap.b32 	%r1883, %r1877, %r1878, 25;
	shf.l.wrap.b32 	%r1884, %r1878, %r1877, 25;
	mov.b64 	%rd2584, {%r1884, %r1883};
	xor.b64  	%rd2585, %rd2583, %rd2584;
	xor.b64  	%rd2586, %rd2567, %rd2519;
	xor.b64  	%rd2587, %rd2567, %rd2543;
	and.b64  	%rd2588, %rd2587, %rd2586;
	xor.b64  	%rd2589, %rd2588, %rd2567;
	add.s64 	%rd2590, %rd2579, %rd2589;
	add.s64 	%rd2591, %rd2590, %rd2585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1885,%dummy}, %rd2194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1886}, %rd2194;
	}
	shf.r.wrap.b32 	%r1887, %r1886, %r1885, 19;
	shf.r.wrap.b32 	%r1888, %r1885, %r1886, 19;
	mov.b64 	%rd2592, {%r1888, %r1887};
	shf.l.wrap.b32 	%r1889, %r1885, %r1886, 3;
	shf.l.wrap.b32 	%r1890, %r1886, %r1885, 3;
	mov.b64 	%rd2593, {%r1890, %r1889};
	shr.u64 	%rd2594, %rd2194, 6;
	xor.b64  	%rd2595, %rd2592, %rd2594;
	xor.b64  	%rd2596, %rd2595, %rd2593;
	shf.r.wrap.b32 	%r1891, %r1500, %r1499, 1;
	shf.r.wrap.b32 	%r1892, %r1499, %r1500, 1;
	mov.b64 	%rd2597, {%r1892, %r1891};
	shf.r.wrap.b32 	%r1893, %r1500, %r1499, 8;
	shf.r.wrap.b32 	%r1894, %r1499, %r1500, 8;
	mov.b64 	%rd2598, {%r1894, %r1893};
	shr.u64 	%rd2599, %rd2025, 7;
	xor.b64  	%rd2600, %rd2597, %rd2599;
	xor.b64  	%rd2601, %rd2600, %rd2598;
	add.s64 	%rd2602, %rd2129, %rd2012;
	add.s64 	%rd2603, %rd2602, %rd2596;
	add.s64 	%rd2604, %rd2603, %rd2601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1895,%dummy}, %rd2207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1896}, %rd2207;
	}
	shf.r.wrap.b32 	%r1897, %r1896, %r1895, 19;
	shf.r.wrap.b32 	%r1898, %r1895, %r1896, 19;
	mov.b64 	%rd2605, {%r1898, %r1897};
	shf.l.wrap.b32 	%r1899, %r1895, %r1896, 3;
	shf.l.wrap.b32 	%r1900, %r1896, %r1895, 3;
	mov.b64 	%rd2606, {%r1900, %r1899};
	shr.u64 	%rd2607, %rd2207, 6;
	xor.b64  	%rd2608, %rd2605, %rd2607;
	xor.b64  	%rd2609, %rd2608, %rd2606;
	shf.r.wrap.b32 	%r1901, %r1510, %r1509, 1;
	shf.r.wrap.b32 	%r1902, %r1509, %r1510, 1;
	mov.b64 	%rd2610, {%r1902, %r1901};
	shf.r.wrap.b32 	%r1903, %r1510, %r1509, 8;
	shf.r.wrap.b32 	%r1904, %r1509, %r1510, 8;
	mov.b64 	%rd2611, {%r1904, %r1903};
	shr.u64 	%rd2612, %rd2038, 7;
	xor.b64  	%rd2613, %rd2610, %rd2612;
	xor.b64  	%rd2614, %rd2613, %rd2611;
	add.s64 	%rd2615, %rd2142, %rd2025;
	add.s64 	%rd2616, %rd2615, %rd2609;
	add.s64 	%rd2617, %rd2616, %rd2614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1905,%dummy}, %rd2604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1906}, %rd2604;
	}
	shf.r.wrap.b32 	%r1907, %r1906, %r1905, 19;
	shf.r.wrap.b32 	%r1908, %r1905, %r1906, 19;
	mov.b64 	%rd2618, {%r1908, %r1907};
	shf.l.wrap.b32 	%r1909, %r1905, %r1906, 3;
	shf.l.wrap.b32 	%r1910, %r1906, %r1905, 3;
	mov.b64 	%rd2619, {%r1910, %r1909};
	shr.u64 	%rd2620, %rd2604, 6;
	xor.b64  	%rd2621, %rd2618, %rd2620;
	xor.b64  	%rd2622, %rd2621, %rd2619;
	shf.r.wrap.b32 	%r1911, %r1520, %r1519, 1;
	shf.r.wrap.b32 	%r1912, %r1519, %r1520, 1;
	mov.b64 	%rd2623, {%r1912, %r1911};
	shf.r.wrap.b32 	%r1913, %r1520, %r1519, 8;
	shf.r.wrap.b32 	%r1914, %r1519, %r1520, 8;
	mov.b64 	%rd2624, {%r1914, %r1913};
	shr.u64 	%rd2625, %rd2051, 7;
	xor.b64  	%rd2626, %rd2623, %rd2625;
	xor.b64  	%rd2627, %rd2626, %rd2624;
	add.s64 	%rd2628, %rd2155, %rd2038;
	add.s64 	%rd2629, %rd2628, %rd2622;
	add.s64 	%rd2630, %rd2629, %rd2627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1915,%dummy}, %rd2617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1916}, %rd2617;
	}
	shf.r.wrap.b32 	%r1917, %r1916, %r1915, 19;
	shf.r.wrap.b32 	%r1918, %r1915, %r1916, 19;
	mov.b64 	%rd2631, {%r1918, %r1917};
	shf.l.wrap.b32 	%r1919, %r1915, %r1916, 3;
	shf.l.wrap.b32 	%r1920, %r1916, %r1915, 3;
	mov.b64 	%rd2632, {%r1920, %r1919};
	shr.u64 	%rd2633, %rd2617, 6;
	xor.b64  	%rd2634, %rd2631, %rd2633;
	xor.b64  	%rd2635, %rd2634, %rd2632;
	shf.r.wrap.b32 	%r1921, %r1530, %r1529, 1;
	shf.r.wrap.b32 	%r1922, %r1529, %r1530, 1;
	mov.b64 	%rd2636, {%r1922, %r1921};
	shf.r.wrap.b32 	%r1923, %r1530, %r1529, 8;
	shf.r.wrap.b32 	%r1924, %r1529, %r1530, 8;
	mov.b64 	%rd2637, {%r1924, %r1923};
	shr.u64 	%rd2638, %rd2064, 7;
	xor.b64  	%rd2639, %rd2636, %rd2638;
	xor.b64  	%rd2640, %rd2639, %rd2637;
	add.s64 	%rd2641, %rd2168, %rd2051;
	add.s64 	%rd2642, %rd2641, %rd2635;
	add.s64 	%rd2643, %rd2642, %rd2640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1925,%dummy}, %rd2630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1926}, %rd2630;
	}
	shf.r.wrap.b32 	%r1927, %r1926, %r1925, 19;
	shf.r.wrap.b32 	%r1928, %r1925, %r1926, 19;
	mov.b64 	%rd2644, {%r1928, %r1927};
	shf.l.wrap.b32 	%r1929, %r1925, %r1926, 3;
	shf.l.wrap.b32 	%r1930, %r1926, %r1925, 3;
	mov.b64 	%rd2645, {%r1930, %r1929};
	shr.u64 	%rd2646, %rd2630, 6;
	xor.b64  	%rd2647, %rd2644, %rd2646;
	xor.b64  	%rd2648, %rd2647, %rd2645;
	shf.r.wrap.b32 	%r1931, %r1540, %r1539, 1;
	shf.r.wrap.b32 	%r1932, %r1539, %r1540, 1;
	mov.b64 	%rd2649, {%r1932, %r1931};
	shf.r.wrap.b32 	%r1933, %r1540, %r1539, 8;
	shf.r.wrap.b32 	%r1934, %r1539, %r1540, 8;
	mov.b64 	%rd2650, {%r1934, %r1933};
	shr.u64 	%rd2651, %rd2077, 7;
	xor.b64  	%rd2652, %rd2649, %rd2651;
	xor.b64  	%rd2653, %rd2652, %rd2650;
	add.s64 	%rd2654, %rd2181, %rd2064;
	add.s64 	%rd2655, %rd2654, %rd2648;
	add.s64 	%rd2656, %rd2655, %rd2653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1935,%dummy}, %rd2643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1936}, %rd2643;
	}
	shf.r.wrap.b32 	%r1937, %r1936, %r1935, 19;
	shf.r.wrap.b32 	%r1938, %r1935, %r1936, 19;
	mov.b64 	%rd2657, {%r1938, %r1937};
	shf.l.wrap.b32 	%r1939, %r1935, %r1936, 3;
	shf.l.wrap.b32 	%r1940, %r1936, %r1935, 3;
	mov.b64 	%rd2658, {%r1940, %r1939};
	shr.u64 	%rd2659, %rd2643, 6;
	xor.b64  	%rd2660, %rd2657, %rd2659;
	xor.b64  	%rd2661, %rd2660, %rd2658;
	shf.r.wrap.b32 	%r1941, %r1550, %r1549, 1;
	shf.r.wrap.b32 	%r1942, %r1549, %r1550, 1;
	mov.b64 	%rd2662, {%r1942, %r1941};
	shf.r.wrap.b32 	%r1943, %r1550, %r1549, 8;
	shf.r.wrap.b32 	%r1944, %r1549, %r1550, 8;
	mov.b64 	%rd2663, {%r1944, %r1943};
	shr.u64 	%rd2664, %rd2090, 7;
	xor.b64  	%rd2665, %rd2662, %rd2664;
	xor.b64  	%rd2666, %rd2665, %rd2663;
	add.s64 	%rd2667, %rd2194, %rd2077;
	add.s64 	%rd2668, %rd2667, %rd2661;
	add.s64 	%rd2669, %rd2668, %rd2666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1945,%dummy}, %rd2656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1946}, %rd2656;
	}
	shf.r.wrap.b32 	%r1947, %r1946, %r1945, 19;
	shf.r.wrap.b32 	%r1948, %r1945, %r1946, 19;
	mov.b64 	%rd2670, {%r1948, %r1947};
	shf.l.wrap.b32 	%r1949, %r1945, %r1946, 3;
	shf.l.wrap.b32 	%r1950, %r1946, %r1945, 3;
	mov.b64 	%rd2671, {%r1950, %r1949};
	shr.u64 	%rd2672, %rd2656, 6;
	xor.b64  	%rd2673, %rd2670, %rd2672;
	xor.b64  	%rd2674, %rd2673, %rd2671;
	shf.r.wrap.b32 	%r1951, %r1560, %r1559, 1;
	shf.r.wrap.b32 	%r1952, %r1559, %r1560, 1;
	mov.b64 	%rd2675, {%r1952, %r1951};
	shf.r.wrap.b32 	%r1953, %r1560, %r1559, 8;
	shf.r.wrap.b32 	%r1954, %r1559, %r1560, 8;
	mov.b64 	%rd2676, {%r1954, %r1953};
	shr.u64 	%rd2677, %rd2103, 7;
	xor.b64  	%rd2678, %rd2675, %rd2677;
	xor.b64  	%rd2679, %rd2678, %rd2676;
	add.s64 	%rd2680, %rd2207, %rd2090;
	add.s64 	%rd2681, %rd2680, %rd2674;
	add.s64 	%rd2682, %rd2681, %rd2679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1955,%dummy}, %rd2669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1956}, %rd2669;
	}
	shf.r.wrap.b32 	%r1957, %r1956, %r1955, 19;
	shf.r.wrap.b32 	%r1958, %r1955, %r1956, 19;
	mov.b64 	%rd2683, {%r1958, %r1957};
	shf.l.wrap.b32 	%r1959, %r1955, %r1956, 3;
	shf.l.wrap.b32 	%r1960, %r1956, %r1955, 3;
	mov.b64 	%rd2684, {%r1960, %r1959};
	shr.u64 	%rd2685, %rd2669, 6;
	xor.b64  	%rd2686, %rd2683, %rd2685;
	xor.b64  	%rd2687, %rd2686, %rd2684;
	shf.r.wrap.b32 	%r1961, %r1570, %r1569, 1;
	shf.r.wrap.b32 	%r1962, %r1569, %r1570, 1;
	mov.b64 	%rd2688, {%r1962, %r1961};
	shf.r.wrap.b32 	%r1963, %r1570, %r1569, 8;
	shf.r.wrap.b32 	%r1964, %r1569, %r1570, 8;
	mov.b64 	%rd2689, {%r1964, %r1963};
	shr.u64 	%rd2690, %rd2116, 7;
	xor.b64  	%rd2691, %rd2688, %rd2690;
	xor.b64  	%rd2692, %rd2691, %rd2689;
	add.s64 	%rd2693, %rd2604, %rd2103;
	add.s64 	%rd2694, %rd2693, %rd2687;
	add.s64 	%rd2695, %rd2694, %rd2692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1965,%dummy}, %rd2682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1966}, %rd2682;
	}
	shf.r.wrap.b32 	%r1967, %r1966, %r1965, 19;
	shf.r.wrap.b32 	%r1968, %r1965, %r1966, 19;
	mov.b64 	%rd2696, {%r1968, %r1967};
	shf.l.wrap.b32 	%r1969, %r1965, %r1966, 3;
	shf.l.wrap.b32 	%r1970, %r1966, %r1965, 3;
	mov.b64 	%rd2697, {%r1970, %r1969};
	shr.u64 	%rd2698, %rd2682, 6;
	xor.b64  	%rd2699, %rd2696, %rd2698;
	xor.b64  	%rd2700, %rd2699, %rd2697;
	shf.r.wrap.b32 	%r1971, %r1580, %r1579, 1;
	shf.r.wrap.b32 	%r1972, %r1579, %r1580, 1;
	mov.b64 	%rd2701, {%r1972, %r1971};
	shf.r.wrap.b32 	%r1973, %r1580, %r1579, 8;
	shf.r.wrap.b32 	%r1974, %r1579, %r1580, 8;
	mov.b64 	%rd2702, {%r1974, %r1973};
	shr.u64 	%rd2703, %rd2129, 7;
	xor.b64  	%rd2704, %rd2701, %rd2703;
	xor.b64  	%rd2705, %rd2704, %rd2702;
	add.s64 	%rd2706, %rd2617, %rd2116;
	add.s64 	%rd2707, %rd2706, %rd2700;
	add.s64 	%rd2708, %rd2707, %rd2705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1975,%dummy}, %rd2695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1976}, %rd2695;
	}
	shf.r.wrap.b32 	%r1977, %r1976, %r1975, 19;
	shf.r.wrap.b32 	%r1978, %r1975, %r1976, 19;
	mov.b64 	%rd2709, {%r1978, %r1977};
	shf.l.wrap.b32 	%r1979, %r1975, %r1976, 3;
	shf.l.wrap.b32 	%r1980, %r1976, %r1975, 3;
	mov.b64 	%rd2710, {%r1980, %r1979};
	shr.u64 	%rd2711, %rd2695, 6;
	xor.b64  	%rd2712, %rd2709, %rd2711;
	xor.b64  	%rd2713, %rd2712, %rd2710;
	shf.r.wrap.b32 	%r1981, %r1590, %r1589, 1;
	shf.r.wrap.b32 	%r1982, %r1589, %r1590, 1;
	mov.b64 	%rd2714, {%r1982, %r1981};
	shf.r.wrap.b32 	%r1983, %r1590, %r1589, 8;
	shf.r.wrap.b32 	%r1984, %r1589, %r1590, 8;
	mov.b64 	%rd2715, {%r1984, %r1983};
	shr.u64 	%rd2716, %rd2142, 7;
	xor.b64  	%rd2717, %rd2714, %rd2716;
	xor.b64  	%rd2718, %rd2717, %rd2715;
	add.s64 	%rd2719, %rd2630, %rd2129;
	add.s64 	%rd2720, %rd2719, %rd2713;
	add.s64 	%rd2721, %rd2720, %rd2718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1985,%dummy}, %rd2708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1986}, %rd2708;
	}
	shf.r.wrap.b32 	%r1987, %r1986, %r1985, 19;
	shf.r.wrap.b32 	%r1988, %r1985, %r1986, 19;
	mov.b64 	%rd2722, {%r1988, %r1987};
	shf.l.wrap.b32 	%r1989, %r1985, %r1986, 3;
	shf.l.wrap.b32 	%r1990, %r1986, %r1985, 3;
	mov.b64 	%rd2723, {%r1990, %r1989};
	shr.u64 	%rd2724, %rd2708, 6;
	xor.b64  	%rd2725, %rd2722, %rd2724;
	xor.b64  	%rd2726, %rd2725, %rd2723;
	shf.r.wrap.b32 	%r1991, %r1600, %r1599, 1;
	shf.r.wrap.b32 	%r1992, %r1599, %r1600, 1;
	mov.b64 	%rd2727, {%r1992, %r1991};
	shf.r.wrap.b32 	%r1993, %r1600, %r1599, 8;
	shf.r.wrap.b32 	%r1994, %r1599, %r1600, 8;
	mov.b64 	%rd2728, {%r1994, %r1993};
	shr.u64 	%rd2729, %rd2155, 7;
	xor.b64  	%rd2730, %rd2727, %rd2729;
	xor.b64  	%rd2731, %rd2730, %rd2728;
	add.s64 	%rd2732, %rd2643, %rd2142;
	add.s64 	%rd2733, %rd2732, %rd2726;
	add.s64 	%rd2734, %rd2733, %rd2731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1995,%dummy}, %rd2721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1996}, %rd2721;
	}
	shf.r.wrap.b32 	%r1997, %r1996, %r1995, 19;
	shf.r.wrap.b32 	%r1998, %r1995, %r1996, 19;
	mov.b64 	%rd2735, {%r1998, %r1997};
	shf.l.wrap.b32 	%r1999, %r1995, %r1996, 3;
	shf.l.wrap.b32 	%r2000, %r1996, %r1995, 3;
	mov.b64 	%rd2736, {%r2000, %r1999};
	shr.u64 	%rd2737, %rd2721, 6;
	xor.b64  	%rd2738, %rd2735, %rd2737;
	xor.b64  	%rd2739, %rd2738, %rd2736;
	shf.r.wrap.b32 	%r2001, %r1610, %r1609, 1;
	shf.r.wrap.b32 	%r2002, %r1609, %r1610, 1;
	mov.b64 	%rd2740, {%r2002, %r2001};
	shf.r.wrap.b32 	%r2003, %r1610, %r1609, 8;
	shf.r.wrap.b32 	%r2004, %r1609, %r1610, 8;
	mov.b64 	%rd2741, {%r2004, %r2003};
	shr.u64 	%rd2742, %rd2168, 7;
	xor.b64  	%rd2743, %rd2740, %rd2742;
	xor.b64  	%rd2744, %rd2743, %rd2741;
	add.s64 	%rd2745, %rd2656, %rd2155;
	add.s64 	%rd2746, %rd2745, %rd2739;
	add.s64 	%rd2747, %rd2746, %rd2744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2005,%dummy}, %rd2734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2006}, %rd2734;
	}
	shf.r.wrap.b32 	%r2007, %r2006, %r2005, 19;
	shf.r.wrap.b32 	%r2008, %r2005, %r2006, 19;
	mov.b64 	%rd2748, {%r2008, %r2007};
	shf.l.wrap.b32 	%r2009, %r2005, %r2006, 3;
	shf.l.wrap.b32 	%r2010, %r2006, %r2005, 3;
	mov.b64 	%rd2749, {%r2010, %r2009};
	shr.u64 	%rd2750, %rd2734, 6;
	xor.b64  	%rd2751, %rd2748, %rd2750;
	xor.b64  	%rd2752, %rd2751, %rd2749;
	shf.r.wrap.b32 	%r2011, %r1620, %r1619, 1;
	shf.r.wrap.b32 	%r2012, %r1619, %r1620, 1;
	mov.b64 	%rd2753, {%r2012, %r2011};
	shf.r.wrap.b32 	%r2013, %r1620, %r1619, 8;
	shf.r.wrap.b32 	%r2014, %r1619, %r1620, 8;
	mov.b64 	%rd2754, {%r2014, %r2013};
	shr.u64 	%rd2755, %rd2181, 7;
	xor.b64  	%rd2756, %rd2753, %rd2755;
	xor.b64  	%rd2757, %rd2756, %rd2754;
	add.s64 	%rd2758, %rd2669, %rd2168;
	add.s64 	%rd2759, %rd2758, %rd2752;
	add.s64 	%rd2760, %rd2759, %rd2757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2015,%dummy}, %rd2747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2016}, %rd2747;
	}
	shf.r.wrap.b32 	%r2017, %r2016, %r2015, 19;
	shf.r.wrap.b32 	%r2018, %r2015, %r2016, 19;
	mov.b64 	%rd2761, {%r2018, %r2017};
	shf.l.wrap.b32 	%r2019, %r2015, %r2016, 3;
	shf.l.wrap.b32 	%r2020, %r2016, %r2015, 3;
	mov.b64 	%rd2762, {%r2020, %r2019};
	shr.u64 	%rd2763, %rd2747, 6;
	xor.b64  	%rd2764, %rd2761, %rd2763;
	xor.b64  	%rd2765, %rd2764, %rd2762;
	shf.r.wrap.b32 	%r2021, %r1886, %r1885, 1;
	shf.r.wrap.b32 	%r2022, %r1885, %r1886, 1;
	mov.b64 	%rd2766, {%r2022, %r2021};
	shf.r.wrap.b32 	%r2023, %r1886, %r1885, 8;
	shf.r.wrap.b32 	%r2024, %r1885, %r1886, 8;
	mov.b64 	%rd2767, {%r2024, %r2023};
	shr.u64 	%rd2768, %rd2194, 7;
	xor.b64  	%rd2769, %rd2766, %rd2768;
	xor.b64  	%rd2770, %rd2769, %rd2767;
	add.s64 	%rd2771, %rd2682, %rd2181;
	add.s64 	%rd2772, %rd2771, %rd2765;
	add.s64 	%rd2773, %rd2772, %rd2770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2025,%dummy}, %rd2760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2026}, %rd2760;
	}
	shf.r.wrap.b32 	%r2027, %r2026, %r2025, 19;
	shf.r.wrap.b32 	%r2028, %r2025, %r2026, 19;
	mov.b64 	%rd2774, {%r2028, %r2027};
	shf.l.wrap.b32 	%r2029, %r2025, %r2026, 3;
	shf.l.wrap.b32 	%r2030, %r2026, %r2025, 3;
	mov.b64 	%rd2775, {%r2030, %r2029};
	shr.u64 	%rd2776, %rd2760, 6;
	xor.b64  	%rd2777, %rd2774, %rd2776;
	xor.b64  	%rd2778, %rd2777, %rd2775;
	shf.r.wrap.b32 	%r2031, %r1896, %r1895, 1;
	shf.r.wrap.b32 	%r2032, %r1895, %r1896, 1;
	mov.b64 	%rd2779, {%r2032, %r2031};
	shf.r.wrap.b32 	%r2033, %r1896, %r1895, 8;
	shf.r.wrap.b32 	%r2034, %r1895, %r1896, 8;
	mov.b64 	%rd2780, {%r2034, %r2033};
	shr.u64 	%rd2781, %rd2207, 7;
	xor.b64  	%rd2782, %rd2779, %rd2781;
	xor.b64  	%rd2783, %rd2782, %rd2780;
	add.s64 	%rd2784, %rd2695, %rd2194;
	add.s64 	%rd2785, %rd2784, %rd2778;
	add.s64 	%rd2786, %rd2785, %rd2783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2035,%dummy}, %rd2773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2036}, %rd2773;
	}
	shf.r.wrap.b32 	%r2037, %r2036, %r2035, 19;
	shf.r.wrap.b32 	%r2038, %r2035, %r2036, 19;
	mov.b64 	%rd2787, {%r2038, %r2037};
	shf.l.wrap.b32 	%r2039, %r2035, %r2036, 3;
	shf.l.wrap.b32 	%r2040, %r2036, %r2035, 3;
	mov.b64 	%rd2788, {%r2040, %r2039};
	shr.u64 	%rd2789, %rd2773, 6;
	xor.b64  	%rd2790, %rd2787, %rd2789;
	xor.b64  	%rd2791, %rd2790, %rd2788;
	shf.r.wrap.b32 	%r2041, %r1906, %r1905, 1;
	shf.r.wrap.b32 	%r2042, %r1905, %r1906, 1;
	mov.b64 	%rd2792, {%r2042, %r2041};
	shf.r.wrap.b32 	%r2043, %r1906, %r1905, 8;
	shf.r.wrap.b32 	%r2044, %r1905, %r1906, 8;
	mov.b64 	%rd2793, {%r2044, %r2043};
	shr.u64 	%rd2794, %rd2604, 7;
	xor.b64  	%rd2795, %rd2792, %rd2794;
	xor.b64  	%rd2796, %rd2795, %rd2793;
	add.s64 	%rd2797, %rd2708, %rd2207;
	add.s64 	%rd2798, %rd2797, %rd2791;
	add.s64 	%rd2799, %rd2798, %rd2796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2045,%dummy}, %rd2580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2046}, %rd2580;
	}
	shf.r.wrap.b32 	%r2047, %r2046, %r2045, 14;
	shf.r.wrap.b32 	%r2048, %r2045, %r2046, 14;
	mov.b64 	%rd2800, {%r2048, %r2047};
	shf.r.wrap.b32 	%r2049, %r2046, %r2045, 18;
	shf.r.wrap.b32 	%r2050, %r2045, %r2046, 18;
	mov.b64 	%rd2801, {%r2050, %r2049};
	xor.b64  	%rd2802, %rd2801, %rd2800;
	shf.l.wrap.b32 	%r2051, %r2045, %r2046, 23;
	shf.l.wrap.b32 	%r2052, %r2046, %r2045, 23;
	mov.b64 	%rd2803, {%r2052, %r2051};
	xor.b64  	%rd2804, %rd2802, %rd2803;
	xor.b64  	%rd2805, %rd2556, %rd2532;
	and.b64  	%rd2806, %rd2805, %rd2580;
	xor.b64  	%rd2807, %rd2806, %rd2532;
	add.s64 	%rd2808, %rd2807, %rd2508;
	add.s64 	%rd2809, %rd2808, %rd2604;
	ld.const.u64 	%rd8757, [k_sha512+512];
	add.s64 	%rd2810, %rd2809, %rd8757;
	add.s64 	%rd2811, %rd2810, %rd2804;
	add.s64 	%rd2812, %rd2811, %rd2519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2053,%dummy}, %rd2591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2054}, %rd2591;
	}
	shf.r.wrap.b32 	%r2055, %r2054, %r2053, 28;
	shf.r.wrap.b32 	%r2056, %r2053, %r2054, 28;
	mov.b64 	%rd2813, {%r2056, %r2055};
	shf.l.wrap.b32 	%r2057, %r2053, %r2054, 30;
	shf.l.wrap.b32 	%r2058, %r2054, %r2053, 30;
	mov.b64 	%rd2814, {%r2058, %r2057};
	xor.b64  	%rd2815, %rd2814, %rd2813;
	shf.l.wrap.b32 	%r2059, %r2053, %r2054, 25;
	shf.l.wrap.b32 	%r2060, %r2054, %r2053, 25;
	mov.b64 	%rd2816, {%r2060, %r2059};
	xor.b64  	%rd2817, %rd2815, %rd2816;
	xor.b64  	%rd2818, %rd2591, %rd2543;
	xor.b64  	%rd2819, %rd2591, %rd2567;
	and.b64  	%rd2820, %rd2819, %rd2818;
	xor.b64  	%rd2821, %rd2820, %rd2591;
	add.s64 	%rd2822, %rd2811, %rd2821;
	add.s64 	%rd2823, %rd2822, %rd2817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2061,%dummy}, %rd2812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2062}, %rd2812;
	}
	shf.r.wrap.b32 	%r2063, %r2062, %r2061, 14;
	shf.r.wrap.b32 	%r2064, %r2061, %r2062, 14;
	mov.b64 	%rd2824, {%r2064, %r2063};
	shf.r.wrap.b32 	%r2065, %r2062, %r2061, 18;
	shf.r.wrap.b32 	%r2066, %r2061, %r2062, 18;
	mov.b64 	%rd2825, {%r2066, %r2065};
	xor.b64  	%rd2826, %rd2825, %rd2824;
	shf.l.wrap.b32 	%r2067, %r2061, %r2062, 23;
	shf.l.wrap.b32 	%r2068, %r2062, %r2061, 23;
	mov.b64 	%rd2827, {%r2068, %r2067};
	xor.b64  	%rd2828, %rd2826, %rd2827;
	xor.b64  	%rd2829, %rd2580, %rd2556;
	and.b64  	%rd2830, %rd2812, %rd2829;
	xor.b64  	%rd2831, %rd2830, %rd2556;
	add.s64 	%rd2832, %rd2617, %rd2532;
	ld.const.u64 	%rd8756, [k_sha512+520];
	add.s64 	%rd2833, %rd2832, %rd8756;
	add.s64 	%rd2834, %rd2833, %rd2831;
	add.s64 	%rd2835, %rd2834, %rd2828;
	add.s64 	%rd2836, %rd2835, %rd2543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2069,%dummy}, %rd2823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2070}, %rd2823;
	}
	shf.r.wrap.b32 	%r2071, %r2070, %r2069, 28;
	shf.r.wrap.b32 	%r2072, %r2069, %r2070, 28;
	mov.b64 	%rd2837, {%r2072, %r2071};
	shf.l.wrap.b32 	%r2073, %r2069, %r2070, 30;
	shf.l.wrap.b32 	%r2074, %r2070, %r2069, 30;
	mov.b64 	%rd2838, {%r2074, %r2073};
	xor.b64  	%rd2839, %rd2838, %rd2837;
	shf.l.wrap.b32 	%r2075, %r2069, %r2070, 25;
	shf.l.wrap.b32 	%r2076, %r2070, %r2069, 25;
	mov.b64 	%rd2840, {%r2076, %r2075};
	xor.b64  	%rd2841, %rd2839, %rd2840;
	xor.b64  	%rd2842, %rd2823, %rd2567;
	xor.b64  	%rd2843, %rd2823, %rd2591;
	and.b64  	%rd2844, %rd2843, %rd2842;
	xor.b64  	%rd2845, %rd2844, %rd2823;
	add.s64 	%rd2846, %rd2835, %rd2845;
	add.s64 	%rd2847, %rd2846, %rd2841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2077,%dummy}, %rd2836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2078}, %rd2836;
	}
	shf.r.wrap.b32 	%r2079, %r2078, %r2077, 14;
	shf.r.wrap.b32 	%r2080, %r2077, %r2078, 14;
	mov.b64 	%rd2848, {%r2080, %r2079};
	shf.r.wrap.b32 	%r2081, %r2078, %r2077, 18;
	shf.r.wrap.b32 	%r2082, %r2077, %r2078, 18;
	mov.b64 	%rd2849, {%r2082, %r2081};
	xor.b64  	%rd2850, %rd2849, %rd2848;
	shf.l.wrap.b32 	%r2083, %r2077, %r2078, 23;
	shf.l.wrap.b32 	%r2084, %r2078, %r2077, 23;
	mov.b64 	%rd2851, {%r2084, %r2083};
	xor.b64  	%rd2852, %rd2850, %rd2851;
	xor.b64  	%rd2853, %rd2812, %rd2580;
	and.b64  	%rd2854, %rd2836, %rd2853;
	xor.b64  	%rd2855, %rd2854, %rd2580;
	add.s64 	%rd2856, %rd2630, %rd2556;
	ld.const.u64 	%rd8755, [k_sha512+528];
	add.s64 	%rd2857, %rd2856, %rd8755;
	add.s64 	%rd2858, %rd2857, %rd2855;
	add.s64 	%rd2859, %rd2858, %rd2852;
	add.s64 	%rd2860, %rd2859, %rd2567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2085,%dummy}, %rd2847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2086}, %rd2847;
	}
	shf.r.wrap.b32 	%r2087, %r2086, %r2085, 28;
	shf.r.wrap.b32 	%r2088, %r2085, %r2086, 28;
	mov.b64 	%rd2861, {%r2088, %r2087};
	shf.l.wrap.b32 	%r2089, %r2085, %r2086, 30;
	shf.l.wrap.b32 	%r2090, %r2086, %r2085, 30;
	mov.b64 	%rd2862, {%r2090, %r2089};
	xor.b64  	%rd2863, %rd2862, %rd2861;
	shf.l.wrap.b32 	%r2091, %r2085, %r2086, 25;
	shf.l.wrap.b32 	%r2092, %r2086, %r2085, 25;
	mov.b64 	%rd2864, {%r2092, %r2091};
	xor.b64  	%rd2865, %rd2863, %rd2864;
	xor.b64  	%rd2866, %rd2847, %rd2591;
	xor.b64  	%rd2867, %rd2847, %rd2823;
	and.b64  	%rd2868, %rd2867, %rd2866;
	xor.b64  	%rd2869, %rd2868, %rd2847;
	add.s64 	%rd2870, %rd2859, %rd2869;
	add.s64 	%rd2871, %rd2870, %rd2865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2093,%dummy}, %rd2860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2094}, %rd2860;
	}
	shf.r.wrap.b32 	%r2095, %r2094, %r2093, 14;
	shf.r.wrap.b32 	%r2096, %r2093, %r2094, 14;
	mov.b64 	%rd2872, {%r2096, %r2095};
	shf.r.wrap.b32 	%r2097, %r2094, %r2093, 18;
	shf.r.wrap.b32 	%r2098, %r2093, %r2094, 18;
	mov.b64 	%rd2873, {%r2098, %r2097};
	xor.b64  	%rd2874, %rd2873, %rd2872;
	shf.l.wrap.b32 	%r2099, %r2093, %r2094, 23;
	shf.l.wrap.b32 	%r2100, %r2094, %r2093, 23;
	mov.b64 	%rd2875, {%r2100, %r2099};
	xor.b64  	%rd2876, %rd2874, %rd2875;
	xor.b64  	%rd2877, %rd2836, %rd2812;
	and.b64  	%rd2878, %rd2860, %rd2877;
	xor.b64  	%rd2879, %rd2878, %rd2812;
	add.s64 	%rd2880, %rd2643, %rd2580;
	ld.const.u64 	%rd8754, [k_sha512+536];
	add.s64 	%rd2881, %rd2880, %rd8754;
	add.s64 	%rd2882, %rd2881, %rd2879;
	add.s64 	%rd2883, %rd2882, %rd2876;
	add.s64 	%rd2884, %rd2883, %rd2591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2101,%dummy}, %rd2871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2102}, %rd2871;
	}
	shf.r.wrap.b32 	%r2103, %r2102, %r2101, 28;
	shf.r.wrap.b32 	%r2104, %r2101, %r2102, 28;
	mov.b64 	%rd2885, {%r2104, %r2103};
	shf.l.wrap.b32 	%r2105, %r2101, %r2102, 30;
	shf.l.wrap.b32 	%r2106, %r2102, %r2101, 30;
	mov.b64 	%rd2886, {%r2106, %r2105};
	xor.b64  	%rd2887, %rd2886, %rd2885;
	shf.l.wrap.b32 	%r2107, %r2101, %r2102, 25;
	shf.l.wrap.b32 	%r2108, %r2102, %r2101, 25;
	mov.b64 	%rd2888, {%r2108, %r2107};
	xor.b64  	%rd2889, %rd2887, %rd2888;
	xor.b64  	%rd2890, %rd2871, %rd2823;
	xor.b64  	%rd2891, %rd2871, %rd2847;
	and.b64  	%rd2892, %rd2891, %rd2890;
	xor.b64  	%rd2893, %rd2892, %rd2871;
	add.s64 	%rd2894, %rd2883, %rd2893;
	add.s64 	%rd2895, %rd2894, %rd2889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2109,%dummy}, %rd2884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2110}, %rd2884;
	}
	shf.r.wrap.b32 	%r2111, %r2110, %r2109, 14;
	shf.r.wrap.b32 	%r2112, %r2109, %r2110, 14;
	mov.b64 	%rd2896, {%r2112, %r2111};
	shf.r.wrap.b32 	%r2113, %r2110, %r2109, 18;
	shf.r.wrap.b32 	%r2114, %r2109, %r2110, 18;
	mov.b64 	%rd2897, {%r2114, %r2113};
	xor.b64  	%rd2898, %rd2897, %rd2896;
	shf.l.wrap.b32 	%r2115, %r2109, %r2110, 23;
	shf.l.wrap.b32 	%r2116, %r2110, %r2109, 23;
	mov.b64 	%rd2899, {%r2116, %r2115};
	xor.b64  	%rd2900, %rd2898, %rd2899;
	xor.b64  	%rd2901, %rd2860, %rd2836;
	and.b64  	%rd2902, %rd2884, %rd2901;
	xor.b64  	%rd2903, %rd2902, %rd2836;
	add.s64 	%rd2904, %rd2812, %rd2656;
	ld.const.u64 	%rd8753, [k_sha512+544];
	add.s64 	%rd2905, %rd2904, %rd8753;
	add.s64 	%rd2906, %rd2905, %rd2903;
	add.s64 	%rd2907, %rd2906, %rd2900;
	add.s64 	%rd2908, %rd2907, %rd2823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2117,%dummy}, %rd2895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2118}, %rd2895;
	}
	shf.r.wrap.b32 	%r2119, %r2118, %r2117, 28;
	shf.r.wrap.b32 	%r2120, %r2117, %r2118, 28;
	mov.b64 	%rd2909, {%r2120, %r2119};
	shf.l.wrap.b32 	%r2121, %r2117, %r2118, 30;
	shf.l.wrap.b32 	%r2122, %r2118, %r2117, 30;
	mov.b64 	%rd2910, {%r2122, %r2121};
	xor.b64  	%rd2911, %rd2910, %rd2909;
	shf.l.wrap.b32 	%r2123, %r2117, %r2118, 25;
	shf.l.wrap.b32 	%r2124, %r2118, %r2117, 25;
	mov.b64 	%rd2912, {%r2124, %r2123};
	xor.b64  	%rd2913, %rd2911, %rd2912;
	xor.b64  	%rd2914, %rd2895, %rd2847;
	xor.b64  	%rd2915, %rd2895, %rd2871;
	and.b64  	%rd2916, %rd2915, %rd2914;
	xor.b64  	%rd2917, %rd2916, %rd2895;
	add.s64 	%rd2918, %rd2907, %rd2917;
	add.s64 	%rd2919, %rd2918, %rd2913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2125,%dummy}, %rd2908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2126}, %rd2908;
	}
	shf.r.wrap.b32 	%r2127, %r2126, %r2125, 14;
	shf.r.wrap.b32 	%r2128, %r2125, %r2126, 14;
	mov.b64 	%rd2920, {%r2128, %r2127};
	shf.r.wrap.b32 	%r2129, %r2126, %r2125, 18;
	shf.r.wrap.b32 	%r2130, %r2125, %r2126, 18;
	mov.b64 	%rd2921, {%r2130, %r2129};
	xor.b64  	%rd2922, %rd2921, %rd2920;
	shf.l.wrap.b32 	%r2131, %r2125, %r2126, 23;
	shf.l.wrap.b32 	%r2132, %r2126, %r2125, 23;
	mov.b64 	%rd2923, {%r2132, %r2131};
	xor.b64  	%rd2924, %rd2922, %rd2923;
	xor.b64  	%rd2925, %rd2884, %rd2860;
	and.b64  	%rd2926, %rd2908, %rd2925;
	xor.b64  	%rd2927, %rd2926, %rd2860;
	add.s64 	%rd2928, %rd2836, %rd2669;
	ld.const.u64 	%rd8752, [k_sha512+552];
	add.s64 	%rd2929, %rd2928, %rd8752;
	add.s64 	%rd2930, %rd2929, %rd2927;
	add.s64 	%rd2931, %rd2930, %rd2924;
	add.s64 	%rd2932, %rd2931, %rd2847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2133,%dummy}, %rd2919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2134}, %rd2919;
	}
	shf.r.wrap.b32 	%r2135, %r2134, %r2133, 28;
	shf.r.wrap.b32 	%r2136, %r2133, %r2134, 28;
	mov.b64 	%rd2933, {%r2136, %r2135};
	shf.l.wrap.b32 	%r2137, %r2133, %r2134, 30;
	shf.l.wrap.b32 	%r2138, %r2134, %r2133, 30;
	mov.b64 	%rd2934, {%r2138, %r2137};
	xor.b64  	%rd2935, %rd2934, %rd2933;
	shf.l.wrap.b32 	%r2139, %r2133, %r2134, 25;
	shf.l.wrap.b32 	%r2140, %r2134, %r2133, 25;
	mov.b64 	%rd2936, {%r2140, %r2139};
	xor.b64  	%rd2937, %rd2935, %rd2936;
	xor.b64  	%rd2938, %rd2919, %rd2871;
	xor.b64  	%rd2939, %rd2919, %rd2895;
	and.b64  	%rd2940, %rd2939, %rd2938;
	xor.b64  	%rd2941, %rd2940, %rd2919;
	add.s64 	%rd2942, %rd2931, %rd2941;
	add.s64 	%rd2943, %rd2942, %rd2937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2141,%dummy}, %rd2932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2142}, %rd2932;
	}
	shf.r.wrap.b32 	%r2143, %r2142, %r2141, 14;
	shf.r.wrap.b32 	%r2144, %r2141, %r2142, 14;
	mov.b64 	%rd2944, {%r2144, %r2143};
	shf.r.wrap.b32 	%r2145, %r2142, %r2141, 18;
	shf.r.wrap.b32 	%r2146, %r2141, %r2142, 18;
	mov.b64 	%rd2945, {%r2146, %r2145};
	xor.b64  	%rd2946, %rd2945, %rd2944;
	shf.l.wrap.b32 	%r2147, %r2141, %r2142, 23;
	shf.l.wrap.b32 	%r2148, %r2142, %r2141, 23;
	mov.b64 	%rd2947, {%r2148, %r2147};
	xor.b64  	%rd2948, %rd2946, %rd2947;
	xor.b64  	%rd2949, %rd2908, %rd2884;
	and.b64  	%rd2950, %rd2932, %rd2949;
	xor.b64  	%rd2951, %rd2950, %rd2884;
	add.s64 	%rd2952, %rd2860, %rd2682;
	ld.const.u64 	%rd8751, [k_sha512+560];
	add.s64 	%rd2953, %rd2952, %rd8751;
	add.s64 	%rd2954, %rd2953, %rd2951;
	add.s64 	%rd2955, %rd2954, %rd2948;
	add.s64 	%rd2956, %rd2955, %rd2871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2149,%dummy}, %rd2943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2150}, %rd2943;
	}
	shf.r.wrap.b32 	%r2151, %r2150, %r2149, 28;
	shf.r.wrap.b32 	%r2152, %r2149, %r2150, 28;
	mov.b64 	%rd2957, {%r2152, %r2151};
	shf.l.wrap.b32 	%r2153, %r2149, %r2150, 30;
	shf.l.wrap.b32 	%r2154, %r2150, %r2149, 30;
	mov.b64 	%rd2958, {%r2154, %r2153};
	xor.b64  	%rd2959, %rd2958, %rd2957;
	shf.l.wrap.b32 	%r2155, %r2149, %r2150, 25;
	shf.l.wrap.b32 	%r2156, %r2150, %r2149, 25;
	mov.b64 	%rd2960, {%r2156, %r2155};
	xor.b64  	%rd2961, %rd2959, %rd2960;
	xor.b64  	%rd2962, %rd2943, %rd2895;
	xor.b64  	%rd2963, %rd2943, %rd2919;
	and.b64  	%rd2964, %rd2963, %rd2962;
	xor.b64  	%rd2965, %rd2964, %rd2943;
	add.s64 	%rd2966, %rd2955, %rd2965;
	add.s64 	%rd2967, %rd2966, %rd2961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2157,%dummy}, %rd2956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2158}, %rd2956;
	}
	shf.r.wrap.b32 	%r2159, %r2158, %r2157, 14;
	shf.r.wrap.b32 	%r2160, %r2157, %r2158, 14;
	mov.b64 	%rd2968, {%r2160, %r2159};
	shf.r.wrap.b32 	%r2161, %r2158, %r2157, 18;
	shf.r.wrap.b32 	%r2162, %r2157, %r2158, 18;
	mov.b64 	%rd2969, {%r2162, %r2161};
	xor.b64  	%rd2970, %rd2969, %rd2968;
	shf.l.wrap.b32 	%r2163, %r2157, %r2158, 23;
	shf.l.wrap.b32 	%r2164, %r2158, %r2157, 23;
	mov.b64 	%rd2971, {%r2164, %r2163};
	xor.b64  	%rd2972, %rd2970, %rd2971;
	xor.b64  	%rd2973, %rd2932, %rd2908;
	and.b64  	%rd2974, %rd2956, %rd2973;
	xor.b64  	%rd2975, %rd2974, %rd2908;
	add.s64 	%rd2976, %rd2884, %rd2695;
	ld.const.u64 	%rd8750, [k_sha512+568];
	add.s64 	%rd2977, %rd2976, %rd8750;
	add.s64 	%rd2978, %rd2977, %rd2975;
	add.s64 	%rd2979, %rd2978, %rd2972;
	add.s64 	%rd2980, %rd2979, %rd2895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2165,%dummy}, %rd2967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2166}, %rd2967;
	}
	shf.r.wrap.b32 	%r2167, %r2166, %r2165, 28;
	shf.r.wrap.b32 	%r2168, %r2165, %r2166, 28;
	mov.b64 	%rd2981, {%r2168, %r2167};
	shf.l.wrap.b32 	%r2169, %r2165, %r2166, 30;
	shf.l.wrap.b32 	%r2170, %r2166, %r2165, 30;
	mov.b64 	%rd2982, {%r2170, %r2169};
	xor.b64  	%rd2983, %rd2982, %rd2981;
	shf.l.wrap.b32 	%r2171, %r2165, %r2166, 25;
	shf.l.wrap.b32 	%r2172, %r2166, %r2165, 25;
	mov.b64 	%rd2984, {%r2172, %r2171};
	xor.b64  	%rd2985, %rd2983, %rd2984;
	xor.b64  	%rd2986, %rd2967, %rd2919;
	xor.b64  	%rd2987, %rd2967, %rd2943;
	and.b64  	%rd2988, %rd2987, %rd2986;
	xor.b64  	%rd2989, %rd2988, %rd2967;
	add.s64 	%rd2990, %rd2979, %rd2989;
	add.s64 	%rd2991, %rd2990, %rd2985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2173,%dummy}, %rd2980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2174}, %rd2980;
	}
	shf.r.wrap.b32 	%r2175, %r2174, %r2173, 14;
	shf.r.wrap.b32 	%r2176, %r2173, %r2174, 14;
	mov.b64 	%rd2992, {%r2176, %r2175};
	shf.r.wrap.b32 	%r2177, %r2174, %r2173, 18;
	shf.r.wrap.b32 	%r2178, %r2173, %r2174, 18;
	mov.b64 	%rd2993, {%r2178, %r2177};
	xor.b64  	%rd2994, %rd2993, %rd2992;
	shf.l.wrap.b32 	%r2179, %r2173, %r2174, 23;
	shf.l.wrap.b32 	%r2180, %r2174, %r2173, 23;
	mov.b64 	%rd2995, {%r2180, %r2179};
	xor.b64  	%rd2996, %rd2994, %rd2995;
	xor.b64  	%rd2997, %rd2956, %rd2932;
	and.b64  	%rd2998, %rd2980, %rd2997;
	xor.b64  	%rd2999, %rd2998, %rd2932;
	add.s64 	%rd3000, %rd2908, %rd2708;
	ld.const.u64 	%rd8749, [k_sha512+576];
	add.s64 	%rd3001, %rd3000, %rd8749;
	add.s64 	%rd3002, %rd3001, %rd2999;
	add.s64 	%rd3003, %rd3002, %rd2996;
	add.s64 	%rd3004, %rd3003, %rd2919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2181,%dummy}, %rd2991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2182}, %rd2991;
	}
	shf.r.wrap.b32 	%r2183, %r2182, %r2181, 28;
	shf.r.wrap.b32 	%r2184, %r2181, %r2182, 28;
	mov.b64 	%rd3005, {%r2184, %r2183};
	shf.l.wrap.b32 	%r2185, %r2181, %r2182, 30;
	shf.l.wrap.b32 	%r2186, %r2182, %r2181, 30;
	mov.b64 	%rd3006, {%r2186, %r2185};
	xor.b64  	%rd3007, %rd3006, %rd3005;
	shf.l.wrap.b32 	%r2187, %r2181, %r2182, 25;
	shf.l.wrap.b32 	%r2188, %r2182, %r2181, 25;
	mov.b64 	%rd3008, {%r2188, %r2187};
	xor.b64  	%rd3009, %rd3007, %rd3008;
	xor.b64  	%rd3010, %rd2991, %rd2943;
	xor.b64  	%rd3011, %rd2991, %rd2967;
	and.b64  	%rd3012, %rd3011, %rd3010;
	xor.b64  	%rd3013, %rd3012, %rd2991;
	add.s64 	%rd3014, %rd3003, %rd3013;
	add.s64 	%rd3015, %rd3014, %rd3009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2189,%dummy}, %rd3004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2190}, %rd3004;
	}
	shf.r.wrap.b32 	%r2191, %r2190, %r2189, 14;
	shf.r.wrap.b32 	%r2192, %r2189, %r2190, 14;
	mov.b64 	%rd3016, {%r2192, %r2191};
	shf.r.wrap.b32 	%r2193, %r2190, %r2189, 18;
	shf.r.wrap.b32 	%r2194, %r2189, %r2190, 18;
	mov.b64 	%rd3017, {%r2194, %r2193};
	xor.b64  	%rd3018, %rd3017, %rd3016;
	shf.l.wrap.b32 	%r2195, %r2189, %r2190, 23;
	shf.l.wrap.b32 	%r2196, %r2190, %r2189, 23;
	mov.b64 	%rd3019, {%r2196, %r2195};
	xor.b64  	%rd3020, %rd3018, %rd3019;
	xor.b64  	%rd3021, %rd2980, %rd2956;
	and.b64  	%rd3022, %rd3004, %rd3021;
	xor.b64  	%rd3023, %rd3022, %rd2956;
	add.s64 	%rd3024, %rd2932, %rd2721;
	ld.const.u64 	%rd8748, [k_sha512+584];
	add.s64 	%rd3025, %rd3024, %rd8748;
	add.s64 	%rd3026, %rd3025, %rd3023;
	add.s64 	%rd3027, %rd3026, %rd3020;
	add.s64 	%rd3028, %rd3027, %rd2943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2197,%dummy}, %rd3015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2198}, %rd3015;
	}
	shf.r.wrap.b32 	%r2199, %r2198, %r2197, 28;
	shf.r.wrap.b32 	%r2200, %r2197, %r2198, 28;
	mov.b64 	%rd3029, {%r2200, %r2199};
	shf.l.wrap.b32 	%r2201, %r2197, %r2198, 30;
	shf.l.wrap.b32 	%r2202, %r2198, %r2197, 30;
	mov.b64 	%rd3030, {%r2202, %r2201};
	xor.b64  	%rd3031, %rd3030, %rd3029;
	shf.l.wrap.b32 	%r2203, %r2197, %r2198, 25;
	shf.l.wrap.b32 	%r2204, %r2198, %r2197, 25;
	mov.b64 	%rd3032, {%r2204, %r2203};
	xor.b64  	%rd3033, %rd3031, %rd3032;
	xor.b64  	%rd3034, %rd3015, %rd2967;
	xor.b64  	%rd3035, %rd3015, %rd2991;
	and.b64  	%rd3036, %rd3035, %rd3034;
	xor.b64  	%rd3037, %rd3036, %rd3015;
	add.s64 	%rd3038, %rd3027, %rd3037;
	add.s64 	%rd3039, %rd3038, %rd3033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2205,%dummy}, %rd3028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2206}, %rd3028;
	}
	shf.r.wrap.b32 	%r2207, %r2206, %r2205, 14;
	shf.r.wrap.b32 	%r2208, %r2205, %r2206, 14;
	mov.b64 	%rd3040, {%r2208, %r2207};
	shf.r.wrap.b32 	%r2209, %r2206, %r2205, 18;
	shf.r.wrap.b32 	%r2210, %r2205, %r2206, 18;
	mov.b64 	%rd3041, {%r2210, %r2209};
	xor.b64  	%rd3042, %rd3041, %rd3040;
	shf.l.wrap.b32 	%r2211, %r2205, %r2206, 23;
	shf.l.wrap.b32 	%r2212, %r2206, %r2205, 23;
	mov.b64 	%rd3043, {%r2212, %r2211};
	xor.b64  	%rd3044, %rd3042, %rd3043;
	xor.b64  	%rd3045, %rd3004, %rd2980;
	and.b64  	%rd3046, %rd3028, %rd3045;
	xor.b64  	%rd3047, %rd3046, %rd2980;
	add.s64 	%rd3048, %rd2956, %rd2734;
	ld.const.u64 	%rd8747, [k_sha512+592];
	add.s64 	%rd3049, %rd3048, %rd8747;
	add.s64 	%rd3050, %rd3049, %rd3047;
	add.s64 	%rd3051, %rd3050, %rd3044;
	add.s64 	%rd3052, %rd3051, %rd2967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2213,%dummy}, %rd3039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2214}, %rd3039;
	}
	shf.r.wrap.b32 	%r2215, %r2214, %r2213, 28;
	shf.r.wrap.b32 	%r2216, %r2213, %r2214, 28;
	mov.b64 	%rd3053, {%r2216, %r2215};
	shf.l.wrap.b32 	%r2217, %r2213, %r2214, 30;
	shf.l.wrap.b32 	%r2218, %r2214, %r2213, 30;
	mov.b64 	%rd3054, {%r2218, %r2217};
	xor.b64  	%rd3055, %rd3054, %rd3053;
	shf.l.wrap.b32 	%r2219, %r2213, %r2214, 25;
	shf.l.wrap.b32 	%r2220, %r2214, %r2213, 25;
	mov.b64 	%rd3056, {%r2220, %r2219};
	xor.b64  	%rd3057, %rd3055, %rd3056;
	xor.b64  	%rd3058, %rd3039, %rd2991;
	xor.b64  	%rd3059, %rd3039, %rd3015;
	and.b64  	%rd3060, %rd3059, %rd3058;
	xor.b64  	%rd3061, %rd3060, %rd3039;
	add.s64 	%rd3062, %rd3051, %rd3061;
	add.s64 	%rd3063, %rd3062, %rd3057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2221,%dummy}, %rd3052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2222}, %rd3052;
	}
	shf.r.wrap.b32 	%r2223, %r2222, %r2221, 14;
	shf.r.wrap.b32 	%r2224, %r2221, %r2222, 14;
	mov.b64 	%rd3064, {%r2224, %r2223};
	shf.r.wrap.b32 	%r2225, %r2222, %r2221, 18;
	shf.r.wrap.b32 	%r2226, %r2221, %r2222, 18;
	mov.b64 	%rd3065, {%r2226, %r2225};
	xor.b64  	%rd3066, %rd3065, %rd3064;
	shf.l.wrap.b32 	%r2227, %r2221, %r2222, 23;
	shf.l.wrap.b32 	%r2228, %r2222, %r2221, 23;
	mov.b64 	%rd3067, {%r2228, %r2227};
	xor.b64  	%rd3068, %rd3066, %rd3067;
	xor.b64  	%rd3069, %rd3028, %rd3004;
	and.b64  	%rd3070, %rd3052, %rd3069;
	xor.b64  	%rd3071, %rd3070, %rd3004;
	add.s64 	%rd3072, %rd2980, %rd2747;
	ld.const.u64 	%rd8746, [k_sha512+600];
	add.s64 	%rd3073, %rd3072, %rd8746;
	add.s64 	%rd3074, %rd3073, %rd3071;
	add.s64 	%rd3075, %rd3074, %rd3068;
	add.s64 	%rd3076, %rd3075, %rd2991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2229,%dummy}, %rd3063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2230}, %rd3063;
	}
	shf.r.wrap.b32 	%r2231, %r2230, %r2229, 28;
	shf.r.wrap.b32 	%r2232, %r2229, %r2230, 28;
	mov.b64 	%rd3077, {%r2232, %r2231};
	shf.l.wrap.b32 	%r2233, %r2229, %r2230, 30;
	shf.l.wrap.b32 	%r2234, %r2230, %r2229, 30;
	mov.b64 	%rd3078, {%r2234, %r2233};
	xor.b64  	%rd3079, %rd3078, %rd3077;
	shf.l.wrap.b32 	%r2235, %r2229, %r2230, 25;
	shf.l.wrap.b32 	%r2236, %r2230, %r2229, 25;
	mov.b64 	%rd3080, {%r2236, %r2235};
	xor.b64  	%rd3081, %rd3079, %rd3080;
	xor.b64  	%rd3082, %rd3063, %rd3015;
	xor.b64  	%rd3083, %rd3063, %rd3039;
	and.b64  	%rd3084, %rd3083, %rd3082;
	xor.b64  	%rd3085, %rd3084, %rd3063;
	add.s64 	%rd3086, %rd3075, %rd3085;
	add.s64 	%rd3087, %rd3086, %rd3081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2237,%dummy}, %rd3076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2238}, %rd3076;
	}
	shf.r.wrap.b32 	%r2239, %r2238, %r2237, 14;
	shf.r.wrap.b32 	%r2240, %r2237, %r2238, 14;
	mov.b64 	%rd3088, {%r2240, %r2239};
	shf.r.wrap.b32 	%r2241, %r2238, %r2237, 18;
	shf.r.wrap.b32 	%r2242, %r2237, %r2238, 18;
	mov.b64 	%rd3089, {%r2242, %r2241};
	xor.b64  	%rd3090, %rd3089, %rd3088;
	shf.l.wrap.b32 	%r2243, %r2237, %r2238, 23;
	shf.l.wrap.b32 	%r2244, %r2238, %r2237, 23;
	mov.b64 	%rd3091, {%r2244, %r2243};
	xor.b64  	%rd3092, %rd3090, %rd3091;
	xor.b64  	%rd3093, %rd3052, %rd3028;
	and.b64  	%rd3094, %rd3076, %rd3093;
	xor.b64  	%rd3095, %rd3094, %rd3028;
	add.s64 	%rd3096, %rd3004, %rd2760;
	ld.const.u64 	%rd8745, [k_sha512+608];
	add.s64 	%rd3097, %rd3096, %rd8745;
	add.s64 	%rd3098, %rd3097, %rd3095;
	add.s64 	%rd3099, %rd3098, %rd3092;
	add.s64 	%rd3100, %rd3099, %rd3015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd3087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd3087;
	}
	shf.r.wrap.b32 	%r2247, %r2246, %r2245, 28;
	shf.r.wrap.b32 	%r2248, %r2245, %r2246, 28;
	mov.b64 	%rd3101, {%r2248, %r2247};
	shf.l.wrap.b32 	%r2249, %r2245, %r2246, 30;
	shf.l.wrap.b32 	%r2250, %r2246, %r2245, 30;
	mov.b64 	%rd3102, {%r2250, %r2249};
	xor.b64  	%rd3103, %rd3102, %rd3101;
	shf.l.wrap.b32 	%r2251, %r2245, %r2246, 25;
	shf.l.wrap.b32 	%r2252, %r2246, %r2245, 25;
	mov.b64 	%rd3104, {%r2252, %r2251};
	xor.b64  	%rd3105, %rd3103, %rd3104;
	xor.b64  	%rd3106, %rd3087, %rd3039;
	xor.b64  	%rd3107, %rd3087, %rd3063;
	and.b64  	%rd3108, %rd3107, %rd3106;
	xor.b64  	%rd3109, %rd3108, %rd3087;
	add.s64 	%rd3110, %rd3099, %rd3109;
	add.s64 	%rd3111, %rd3110, %rd3105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2253,%dummy}, %rd3100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2254}, %rd3100;
	}
	shf.r.wrap.b32 	%r2255, %r2254, %r2253, 14;
	shf.r.wrap.b32 	%r2256, %r2253, %r2254, 14;
	mov.b64 	%rd3112, {%r2256, %r2255};
	shf.r.wrap.b32 	%r2257, %r2254, %r2253, 18;
	shf.r.wrap.b32 	%r2258, %r2253, %r2254, 18;
	mov.b64 	%rd3113, {%r2258, %r2257};
	xor.b64  	%rd3114, %rd3113, %rd3112;
	shf.l.wrap.b32 	%r2259, %r2253, %r2254, 23;
	shf.l.wrap.b32 	%r2260, %r2254, %r2253, 23;
	mov.b64 	%rd3115, {%r2260, %r2259};
	xor.b64  	%rd3116, %rd3114, %rd3115;
	xor.b64  	%rd3117, %rd3076, %rd3052;
	and.b64  	%rd3118, %rd3100, %rd3117;
	xor.b64  	%rd3119, %rd3118, %rd3052;
	add.s64 	%rd3120, %rd3028, %rd2773;
	ld.const.u64 	%rd8744, [k_sha512+616];
	add.s64 	%rd3121, %rd3120, %rd8744;
	add.s64 	%rd3122, %rd3121, %rd3119;
	add.s64 	%rd3123, %rd3122, %rd3116;
	add.s64 	%rd3124, %rd3123, %rd3039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2261,%dummy}, %rd3111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2262}, %rd3111;
	}
	shf.r.wrap.b32 	%r2263, %r2262, %r2261, 28;
	shf.r.wrap.b32 	%r2264, %r2261, %r2262, 28;
	mov.b64 	%rd3125, {%r2264, %r2263};
	shf.l.wrap.b32 	%r2265, %r2261, %r2262, 30;
	shf.l.wrap.b32 	%r2266, %r2262, %r2261, 30;
	mov.b64 	%rd3126, {%r2266, %r2265};
	xor.b64  	%rd3127, %rd3126, %rd3125;
	shf.l.wrap.b32 	%r2267, %r2261, %r2262, 25;
	shf.l.wrap.b32 	%r2268, %r2262, %r2261, 25;
	mov.b64 	%rd3128, {%r2268, %r2267};
	xor.b64  	%rd3129, %rd3127, %rd3128;
	xor.b64  	%rd3130, %rd3111, %rd3063;
	xor.b64  	%rd3131, %rd3111, %rd3087;
	and.b64  	%rd3132, %rd3131, %rd3130;
	xor.b64  	%rd3133, %rd3132, %rd3111;
	add.s64 	%rd3134, %rd3123, %rd3133;
	add.s64 	%rd3135, %rd3134, %rd3129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2269,%dummy}, %rd3124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2270}, %rd3124;
	}
	shf.r.wrap.b32 	%r2271, %r2270, %r2269, 14;
	shf.r.wrap.b32 	%r2272, %r2269, %r2270, 14;
	mov.b64 	%rd3136, {%r2272, %r2271};
	shf.r.wrap.b32 	%r2273, %r2270, %r2269, 18;
	shf.r.wrap.b32 	%r2274, %r2269, %r2270, 18;
	mov.b64 	%rd3137, {%r2274, %r2273};
	xor.b64  	%rd3138, %rd3137, %rd3136;
	shf.l.wrap.b32 	%r2275, %r2269, %r2270, 23;
	shf.l.wrap.b32 	%r2276, %r2270, %r2269, 23;
	mov.b64 	%rd3139, {%r2276, %r2275};
	xor.b64  	%rd3140, %rd3138, %rd3139;
	xor.b64  	%rd3141, %rd3100, %rd3076;
	and.b64  	%rd3142, %rd3124, %rd3141;
	xor.b64  	%rd3143, %rd3142, %rd3076;
	add.s64 	%rd3144, %rd3052, %rd2786;
	ld.const.u64 	%rd8743, [k_sha512+624];
	add.s64 	%rd3145, %rd3144, %rd8743;
	add.s64 	%rd3146, %rd3145, %rd3143;
	add.s64 	%rd3147, %rd3146, %rd3140;
	add.s64 	%rd3148, %rd3147, %rd3063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2277,%dummy}, %rd3135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2278}, %rd3135;
	}
	shf.r.wrap.b32 	%r2279, %r2278, %r2277, 28;
	shf.r.wrap.b32 	%r2280, %r2277, %r2278, 28;
	mov.b64 	%rd3149, {%r2280, %r2279};
	shf.l.wrap.b32 	%r2281, %r2277, %r2278, 30;
	shf.l.wrap.b32 	%r2282, %r2278, %r2277, 30;
	mov.b64 	%rd3150, {%r2282, %r2281};
	xor.b64  	%rd3151, %rd3150, %rd3149;
	shf.l.wrap.b32 	%r2283, %r2277, %r2278, 25;
	shf.l.wrap.b32 	%r2284, %r2278, %r2277, 25;
	mov.b64 	%rd3152, {%r2284, %r2283};
	xor.b64  	%rd3153, %rd3151, %rd3152;
	xor.b64  	%rd3154, %rd3135, %rd3087;
	xor.b64  	%rd3155, %rd3135, %rd3111;
	and.b64  	%rd3156, %rd3155, %rd3154;
	xor.b64  	%rd3157, %rd3156, %rd3135;
	add.s64 	%rd3158, %rd3147, %rd3157;
	add.s64 	%rd3159, %rd3158, %rd3153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2285,%dummy}, %rd3148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2286}, %rd3148;
	}
	shf.r.wrap.b32 	%r2287, %r2286, %r2285, 14;
	shf.r.wrap.b32 	%r2288, %r2285, %r2286, 14;
	mov.b64 	%rd3160, {%r2288, %r2287};
	shf.r.wrap.b32 	%r2289, %r2286, %r2285, 18;
	shf.r.wrap.b32 	%r2290, %r2285, %r2286, 18;
	mov.b64 	%rd3161, {%r2290, %r2289};
	xor.b64  	%rd3162, %rd3161, %rd3160;
	shf.l.wrap.b32 	%r2291, %r2285, %r2286, 23;
	shf.l.wrap.b32 	%r2292, %r2286, %r2285, 23;
	mov.b64 	%rd3163, {%r2292, %r2291};
	xor.b64  	%rd3164, %rd3162, %rd3163;
	xor.b64  	%rd3165, %rd3124, %rd3100;
	and.b64  	%rd3166, %rd3148, %rd3165;
	xor.b64  	%rd3167, %rd3166, %rd3100;
	add.s64 	%rd3168, %rd3076, %rd2799;
	ld.const.u64 	%rd8742, [k_sha512+632];
	add.s64 	%rd3169, %rd3168, %rd8742;
	add.s64 	%rd3170, %rd3169, %rd3167;
	add.s64 	%rd3171, %rd3170, %rd3164;
	add.s64 	%rd3172, %rd3171, %rd3087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2293,%dummy}, %rd3159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2294}, %rd3159;
	}
	shf.r.wrap.b32 	%r2295, %r2294, %r2293, 28;
	shf.r.wrap.b32 	%r2296, %r2293, %r2294, 28;
	mov.b64 	%rd3173, {%r2296, %r2295};
	shf.l.wrap.b32 	%r2297, %r2293, %r2294, 30;
	shf.l.wrap.b32 	%r2298, %r2294, %r2293, 30;
	mov.b64 	%rd3174, {%r2298, %r2297};
	xor.b64  	%rd3175, %rd3174, %rd3173;
	shf.l.wrap.b32 	%r2299, %r2293, %r2294, 25;
	shf.l.wrap.b32 	%r2300, %r2294, %r2293, 25;
	mov.b64 	%rd3176, {%r2300, %r2299};
	xor.b64  	%rd3177, %rd3175, %rd3176;
	xor.b64  	%rd3178, %rd3159, %rd3111;
	xor.b64  	%rd3179, %rd3159, %rd3135;
	and.b64  	%rd3180, %rd3179, %rd3178;
	xor.b64  	%rd3181, %rd3180, %rd3159;
	add.s64 	%rd3182, %rd3171, %rd3181;
	add.s64 	%rd3183, %rd3182, %rd3177;
	add.s64 	%rd8813, %rd8813, %rd3183;
	st.local.u64 	[%rd1], %rd8813;
	add.s64 	%rd8812, %rd8812, %rd3159;
	st.local.u64 	[%rd1+8], %rd8812;
	add.s64 	%rd8811, %rd8811, %rd3135;
	st.local.u64 	[%rd1+16], %rd8811;
	add.s64 	%rd8810, %rd8810, %rd3111;
	st.local.u64 	[%rd1+24], %rd8810;
	add.s64 	%rd8809, %rd8809, %rd3172;
	st.local.u64 	[%rd1+32], %rd8809;
	add.s64 	%rd8808, %rd8808, %rd3148;
	st.local.u64 	[%rd1+40], %rd8808;
	add.s64 	%rd8807, %rd8807, %rd3124;
	st.local.u64 	[%rd1+48], %rd8807;
	add.s64 	%rd8806, %rd8806, %rd3100;
	st.local.u64 	[%rd1+56], %rd8806;
	mov.u32 	%r6338, 0;
	st.local.v2.u32 	[%rd1+64], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+72], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+80], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+88], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+96], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+104], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+112], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+120], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+128], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+136], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+144], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+152], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+160], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+168], {%r6338, %r6338};
	st.local.v2.u32 	[%rd1+176], {%r6338, %r6338};
	st.local.u32 	[%rd1+184], %r6338;
	st.local.u32 	[%rd3+4], %r6338;
	mov.u32 	%r6339, %r6338;
	mov.u32 	%r6340, %r6338;
	mov.u32 	%r6341, %r6338;
	mov.u32 	%r6342, %r6338;
	mov.u32 	%r6343, %r6338;
	mov.u32 	%r6344, %r6338;
	mov.u32 	%r6345, %r6338;
	mov.u32 	%r6346, %r6338;
	mov.u32 	%r6347, %r6338;
	mov.u32 	%r6348, %r6338;
	mov.u32 	%r6349, %r6338;
	mov.u32 	%r6350, %r6338;
	mov.u32 	%r6351, %r6338;
	mov.u32 	%r6352, %r6338;
	mov.u32 	%r6353, %r6338;
	mov.u32 	%r6354, %r6338;
	mov.u32 	%r6355, %r6338;
	mov.u32 	%r6356, %r6338;
	mov.u32 	%r6357, %r6338;
	mov.u32 	%r6358, %r6338;
	mov.u32 	%r6359, %r6338;
	mov.u32 	%r6360, %r6338;
	mov.u32 	%r6361, %r6338;
	mov.u32 	%r6362, %r6338;
	mov.u32 	%r6363, %r6338;
	mov.u32 	%r6364, %r6338;
	mov.u32 	%r6365, %r6338;
	mov.u32 	%r6366, %r6338;
	mov.u32 	%r6367, %r6338;
	bra.uni 	BB5_6;

BB5_4:
	ld.const.u64 	%rd8805, [k_sha512+128];
	ld.const.u64 	%rd8804, [k_sha512+136];
	ld.const.u64 	%rd8803, [k_sha512+144];
	ld.const.u64 	%rd8802, [k_sha512+152];
	ld.const.u64 	%rd8801, [k_sha512+160];
	ld.const.u64 	%rd8800, [k_sha512+168];
	ld.const.u64 	%rd8799, [k_sha512+176];
	ld.const.u64 	%rd8798, [k_sha512+184];
	ld.const.u64 	%rd8797, [k_sha512+192];
	ld.const.u64 	%rd8796, [k_sha512+200];
	ld.const.u64 	%rd8795, [k_sha512+208];
	ld.const.u64 	%rd8794, [k_sha512+216];
	ld.const.u64 	%rd8793, [k_sha512+224];
	ld.const.u64 	%rd8792, [k_sha512+232];
	ld.const.u64 	%rd8791, [k_sha512+240];
	ld.const.u64 	%rd8790, [k_sha512+248];
	ld.const.u64 	%rd8789, [k_sha512+256];
	ld.const.u64 	%rd8788, [k_sha512+264];
	ld.const.u64 	%rd8787, [k_sha512+272];
	ld.const.u64 	%rd8786, [k_sha512+280];
	ld.const.u64 	%rd8785, [k_sha512+288];
	ld.const.u64 	%rd8784, [k_sha512+296];
	ld.const.u64 	%rd8783, [k_sha512+304];
	ld.const.u64 	%rd8782, [k_sha512+312];
	ld.const.u64 	%rd8781, [k_sha512+320];
	ld.const.u64 	%rd8780, [k_sha512+328];
	ld.const.u64 	%rd8779, [k_sha512+336];
	ld.const.u64 	%rd8778, [k_sha512+344];
	ld.const.u64 	%rd8777, [k_sha512+352];
	ld.const.u64 	%rd8776, [k_sha512+360];
	ld.const.u64 	%rd8775, [k_sha512+368];
	ld.const.u64 	%rd8774, [k_sha512+376];
	ld.const.u64 	%rd8773, [k_sha512+384];
	ld.const.u64 	%rd8772, [k_sha512+392];
	ld.const.u64 	%rd8771, [k_sha512+400];
	ld.const.u64 	%rd8770, [k_sha512+408];
	ld.const.u64 	%rd8769, [k_sha512+416];
	ld.const.u64 	%rd8768, [k_sha512+424];
	ld.const.u64 	%rd8767, [k_sha512+432];
	ld.const.u64 	%rd8766, [k_sha512+440];
	ld.const.u64 	%rd8765, [k_sha512+448];
	ld.const.u64 	%rd8764, [k_sha512+456];
	ld.const.u64 	%rd8763, [k_sha512+464];
	ld.const.u64 	%rd8762, [k_sha512+472];
	ld.const.u64 	%rd8761, [k_sha512+480];
	ld.const.u64 	%rd8760, [k_sha512+488];
	ld.const.u64 	%rd8759, [k_sha512+496];
	ld.const.u64 	%rd8758, [k_sha512+504];
	ld.const.u64 	%rd8757, [k_sha512+512];
	ld.const.u64 	%rd8756, [k_sha512+520];
	ld.const.u64 	%rd8755, [k_sha512+528];
	ld.const.u64 	%rd8754, [k_sha512+536];
	ld.const.u64 	%rd8753, [k_sha512+544];
	ld.const.u64 	%rd8752, [k_sha512+552];
	ld.const.u64 	%rd8751, [k_sha512+560];
	ld.const.u64 	%rd8750, [k_sha512+568];
	ld.const.u64 	%rd8749, [k_sha512+576];
	ld.const.u64 	%rd8748, [k_sha512+584];
	ld.const.u64 	%rd8747, [k_sha512+592];
	ld.const.u64 	%rd8746, [k_sha512+600];
	ld.const.u64 	%rd8745, [k_sha512+608];
	ld.const.u64 	%rd8744, [k_sha512+616];
	ld.const.u64 	%rd8743, [k_sha512+624];
	ld.const.u64 	%rd8742, [k_sha512+632];

BB5_6:
	mov.b32	%r6334, %envreg3;
	mov.u32 	%r6333, %ntid.x;
	mov.u32 	%r6332, %ctaid.x;
	mov.u32 	%r6331, %tid.x;
	mad.lo.s32 	%r6330, %r6332, %r6333, %r6334;
	add.s32 	%r6329, %r6330, %r6331;
	cvt.s64.s32	%rd8733, %r6329;
	ld.param.u64 	%rd8732, [m11300_init_param_4];
	mov.u32 	%r2301, 0;
	st.local.u32 	[%rd1+184], %r2301;
	shl.b32 	%r2302, %r37, 3;
	st.local.u32 	[%rd3+4], %r2302;
	mov.b64	%rd3184, {%r6366, %r6367};
	mov.b64	%rd3185, {%r6364, %r6365};
	mov.b64	%rd3186, {%r6362, %r6363};
	mov.b64	%rd3187, {%r6360, %r6361};
	mov.b64	%rd3188, {%r6358, %r6359};
	mov.b64	%rd3189, {%r6356, %r6357};
	mov.b64	%rd3190, {%r6354, %r6355};
	mov.b64	%rd3191, {%r6352, %r6353};
	mov.b64	%rd3192, {%r6350, %r6351};
	mov.b64	%rd3193, {%r6348, %r6349};
	mov.b64	%rd3194, {%r6346, %r6347};
	mov.b64	%rd3195, {%r6344, %r6345};
	mov.b64	%rd3196, {%r6342, %r6343};
	mov.b64	%rd3197, {%r6340, %r6341};
	mov.b64	%rd3198, {%r6338, %r6339};
	mov.b64	%rd3199, {%r2302, %r2301};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2303,%dummy}, %rd8809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2304}, %rd8809;
	}
	shf.r.wrap.b32 	%r2305, %r2304, %r2303, 18;
	shf.r.wrap.b32 	%r2306, %r2303, %r2304, 18;
	mov.b64 	%rd3200, {%r2306, %r2305};
	shf.r.wrap.b32 	%r2307, %r2304, %r2303, 14;
	shf.r.wrap.b32 	%r2308, %r2303, %r2304, 14;
	mov.b64 	%rd3201, {%r2308, %r2307};
	xor.b64  	%rd3202, %rd3200, %rd3201;
	shf.l.wrap.b32 	%r2309, %r2303, %r2304, 23;
	shf.l.wrap.b32 	%r2310, %r2304, %r2303, 23;
	mov.b64 	%rd3203, {%r2310, %r2309};
	xor.b64  	%rd3204, %rd3202, %rd3203;
	xor.b64  	%rd3205, %rd8807, %rd8808;
	and.b64  	%rd3206, %rd3205, %rd8809;
	xor.b64  	%rd3207, %rd3206, %rd8807;
	add.s64 	%rd3208, %rd3207, %rd8806;
	add.s64 	%rd3209, %rd3208, %rd3184;
	add.s64 	%rd3210, %rd3209, %rd4;
	add.s64 	%rd3211, %rd3210, %rd3204;
	add.s64 	%rd3212, %rd3211, %rd8810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2311}, %rd8813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2312,%dummy}, %rd8813;
	}
	shf.l.wrap.b32 	%r2313, %r2312, %r2311, 30;
	shf.l.wrap.b32 	%r2314, %r2311, %r2312, 30;
	mov.b64 	%rd3213, {%r2314, %r2313};
	shf.r.wrap.b32 	%r2315, %r2311, %r2312, 28;
	shf.r.wrap.b32 	%r2316, %r2312, %r2311, 28;
	mov.b64 	%rd3214, {%r2316, %r2315};
	xor.b64  	%rd3215, %rd3213, %rd3214;
	shf.l.wrap.b32 	%r2317, %r2312, %r2311, 25;
	shf.l.wrap.b32 	%r2318, %r2311, %r2312, 25;
	mov.b64 	%rd3216, {%r2318, %r2317};
	xor.b64  	%rd3217, %rd3215, %rd3216;
	xor.b64  	%rd3218, %rd8812, %rd8813;
	xor.b64  	%rd3219, %rd8811, %rd8813;
	and.b64  	%rd3220, %rd3219, %rd3218;
	xor.b64  	%rd3221, %rd3220, %rd8813;
	add.s64 	%rd3222, %rd3211, %rd3221;
	add.s64 	%rd3223, %rd3222, %rd3217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2319,%dummy}, %rd3212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2320}, %rd3212;
	}
	shf.r.wrap.b32 	%r2321, %r2320, %r2319, 14;
	shf.r.wrap.b32 	%r2322, %r2319, %r2320, 14;
	mov.b64 	%rd3224, {%r2322, %r2321};
	shf.r.wrap.b32 	%r2323, %r2320, %r2319, 18;
	shf.r.wrap.b32 	%r2324, %r2319, %r2320, 18;
	mov.b64 	%rd3225, {%r2324, %r2323};
	xor.b64  	%rd3226, %rd3225, %rd3224;
	shf.l.wrap.b32 	%r2325, %r2319, %r2320, 23;
	shf.l.wrap.b32 	%r2326, %r2320, %r2319, 23;
	mov.b64 	%rd3227, {%r2326, %r2325};
	xor.b64  	%rd3228, %rd3226, %rd3227;
	xor.b64  	%rd3229, %rd8808, %rd8809;
	and.b64  	%rd3230, %rd3212, %rd3229;
	xor.b64  	%rd3231, %rd3230, %rd8808;
	add.s64 	%rd3232, %rd3185, %rd8807;
	add.s64 	%rd3233, %rd3232, %rd5;
	add.s64 	%rd3234, %rd3233, %rd3231;
	add.s64 	%rd3235, %rd3234, %rd3228;
	add.s64 	%rd3236, %rd3235, %rd8811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2327,%dummy}, %rd3223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2328}, %rd3223;
	}
	shf.r.wrap.b32 	%r2329, %r2328, %r2327, 28;
	shf.r.wrap.b32 	%r2330, %r2327, %r2328, 28;
	mov.b64 	%rd3237, {%r2330, %r2329};
	shf.l.wrap.b32 	%r2331, %r2327, %r2328, 30;
	shf.l.wrap.b32 	%r2332, %r2328, %r2327, 30;
	mov.b64 	%rd3238, {%r2332, %r2331};
	xor.b64  	%rd3239, %rd3238, %rd3237;
	shf.l.wrap.b32 	%r2333, %r2327, %r2328, 25;
	shf.l.wrap.b32 	%r2334, %r2328, %r2327, 25;
	mov.b64 	%rd3240, {%r2334, %r2333};
	xor.b64  	%rd3241, %rd3239, %rd3240;
	xor.b64  	%rd3242, %rd3223, %rd8812;
	xor.b64  	%rd3243, %rd3223, %rd8813;
	and.b64  	%rd3244, %rd3243, %rd3242;
	xor.b64  	%rd3245, %rd3244, %rd3223;
	add.s64 	%rd3246, %rd3235, %rd3245;
	add.s64 	%rd3247, %rd3246, %rd3241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2335,%dummy}, %rd3236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2336}, %rd3236;
	}
	shf.r.wrap.b32 	%r2337, %r2336, %r2335, 14;
	shf.r.wrap.b32 	%r2338, %r2335, %r2336, 14;
	mov.b64 	%rd3248, {%r2338, %r2337};
	shf.r.wrap.b32 	%r2339, %r2336, %r2335, 18;
	shf.r.wrap.b32 	%r2340, %r2335, %r2336, 18;
	mov.b64 	%rd3249, {%r2340, %r2339};
	xor.b64  	%rd3250, %rd3249, %rd3248;
	shf.l.wrap.b32 	%r2341, %r2335, %r2336, 23;
	shf.l.wrap.b32 	%r2342, %r2336, %r2335, 23;
	mov.b64 	%rd3251, {%r2342, %r2341};
	xor.b64  	%rd3252, %rd3250, %rd3251;
	xor.b64  	%rd3253, %rd3212, %rd8809;
	and.b64  	%rd3254, %rd3236, %rd3253;
	xor.b64  	%rd3255, %rd3254, %rd8809;
	add.s64 	%rd3256, %rd3186, %rd8808;
	add.s64 	%rd3257, %rd3256, %rd6;
	add.s64 	%rd3258, %rd3257, %rd3255;
	add.s64 	%rd3259, %rd3258, %rd3252;
	add.s64 	%rd3260, %rd3259, %rd8812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2343,%dummy}, %rd3247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2344}, %rd3247;
	}
	shf.r.wrap.b32 	%r2345, %r2344, %r2343, 28;
	shf.r.wrap.b32 	%r2346, %r2343, %r2344, 28;
	mov.b64 	%rd3261, {%r2346, %r2345};
	shf.l.wrap.b32 	%r2347, %r2343, %r2344, 30;
	shf.l.wrap.b32 	%r2348, %r2344, %r2343, 30;
	mov.b64 	%rd3262, {%r2348, %r2347};
	xor.b64  	%rd3263, %rd3262, %rd3261;
	shf.l.wrap.b32 	%r2349, %r2343, %r2344, 25;
	shf.l.wrap.b32 	%r2350, %r2344, %r2343, 25;
	mov.b64 	%rd3264, {%r2350, %r2349};
	xor.b64  	%rd3265, %rd3263, %rd3264;
	xor.b64  	%rd3266, %rd3247, %rd8813;
	xor.b64  	%rd3267, %rd3247, %rd3223;
	and.b64  	%rd3268, %rd3267, %rd3266;
	xor.b64  	%rd3269, %rd3268, %rd3247;
	add.s64 	%rd3270, %rd3259, %rd3269;
	add.s64 	%rd3271, %rd3270, %rd3265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2351,%dummy}, %rd3260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2352}, %rd3260;
	}
	shf.r.wrap.b32 	%r2353, %r2352, %r2351, 14;
	shf.r.wrap.b32 	%r2354, %r2351, %r2352, 14;
	mov.b64 	%rd3272, {%r2354, %r2353};
	shf.r.wrap.b32 	%r2355, %r2352, %r2351, 18;
	shf.r.wrap.b32 	%r2356, %r2351, %r2352, 18;
	mov.b64 	%rd3273, {%r2356, %r2355};
	xor.b64  	%rd3274, %rd3273, %rd3272;
	shf.l.wrap.b32 	%r2357, %r2351, %r2352, 23;
	shf.l.wrap.b32 	%r2358, %r2352, %r2351, 23;
	mov.b64 	%rd3275, {%r2358, %r2357};
	xor.b64  	%rd3276, %rd3274, %rd3275;
	xor.b64  	%rd3277, %rd3236, %rd3212;
	and.b64  	%rd3278, %rd3260, %rd3277;
	xor.b64  	%rd3279, %rd3278, %rd3212;
	add.s64 	%rd3280, %rd3187, %rd8809;
	add.s64 	%rd3281, %rd3280, %rd7;
	add.s64 	%rd3282, %rd3281, %rd3279;
	add.s64 	%rd3283, %rd3282, %rd3276;
	add.s64 	%rd3284, %rd3283, %rd8813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2359,%dummy}, %rd3271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2360}, %rd3271;
	}
	shf.r.wrap.b32 	%r2361, %r2360, %r2359, 28;
	shf.r.wrap.b32 	%r2362, %r2359, %r2360, 28;
	mov.b64 	%rd3285, {%r2362, %r2361};
	shf.l.wrap.b32 	%r2363, %r2359, %r2360, 30;
	shf.l.wrap.b32 	%r2364, %r2360, %r2359, 30;
	mov.b64 	%rd3286, {%r2364, %r2363};
	xor.b64  	%rd3287, %rd3286, %rd3285;
	shf.l.wrap.b32 	%r2365, %r2359, %r2360, 25;
	shf.l.wrap.b32 	%r2366, %r2360, %r2359, 25;
	mov.b64 	%rd3288, {%r2366, %r2365};
	xor.b64  	%rd3289, %rd3287, %rd3288;
	xor.b64  	%rd3290, %rd3271, %rd3223;
	xor.b64  	%rd3291, %rd3271, %rd3247;
	and.b64  	%rd3292, %rd3291, %rd3290;
	xor.b64  	%rd3293, %rd3292, %rd3271;
	add.s64 	%rd3294, %rd3283, %rd3293;
	add.s64 	%rd3295, %rd3294, %rd3289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2367,%dummy}, %rd3284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2368}, %rd3284;
	}
	shf.r.wrap.b32 	%r2369, %r2368, %r2367, 14;
	shf.r.wrap.b32 	%r2370, %r2367, %r2368, 14;
	mov.b64 	%rd3296, {%r2370, %r2369};
	shf.r.wrap.b32 	%r2371, %r2368, %r2367, 18;
	shf.r.wrap.b32 	%r2372, %r2367, %r2368, 18;
	mov.b64 	%rd3297, {%r2372, %r2371};
	xor.b64  	%rd3298, %rd3297, %rd3296;
	shf.l.wrap.b32 	%r2373, %r2367, %r2368, 23;
	shf.l.wrap.b32 	%r2374, %r2368, %r2367, 23;
	mov.b64 	%rd3299, {%r2374, %r2373};
	xor.b64  	%rd3300, %rd3298, %rd3299;
	xor.b64  	%rd3301, %rd3260, %rd3236;
	and.b64  	%rd3302, %rd3284, %rd3301;
	xor.b64  	%rd3303, %rd3302, %rd3236;
	add.s64 	%rd3304, %rd3212, %rd3188;
	add.s64 	%rd3305, %rd3304, %rd8;
	add.s64 	%rd3306, %rd3305, %rd3303;
	add.s64 	%rd3307, %rd3306, %rd3300;
	add.s64 	%rd3308, %rd3307, %rd3223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2375,%dummy}, %rd3295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2376}, %rd3295;
	}
	shf.r.wrap.b32 	%r2377, %r2376, %r2375, 28;
	shf.r.wrap.b32 	%r2378, %r2375, %r2376, 28;
	mov.b64 	%rd3309, {%r2378, %r2377};
	shf.l.wrap.b32 	%r2379, %r2375, %r2376, 30;
	shf.l.wrap.b32 	%r2380, %r2376, %r2375, 30;
	mov.b64 	%rd3310, {%r2380, %r2379};
	xor.b64  	%rd3311, %rd3310, %rd3309;
	shf.l.wrap.b32 	%r2381, %r2375, %r2376, 25;
	shf.l.wrap.b32 	%r2382, %r2376, %r2375, 25;
	mov.b64 	%rd3312, {%r2382, %r2381};
	xor.b64  	%rd3313, %rd3311, %rd3312;
	xor.b64  	%rd3314, %rd3295, %rd3247;
	xor.b64  	%rd3315, %rd3295, %rd3271;
	and.b64  	%rd3316, %rd3315, %rd3314;
	xor.b64  	%rd3317, %rd3316, %rd3295;
	add.s64 	%rd3318, %rd3307, %rd3317;
	add.s64 	%rd3319, %rd3318, %rd3313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2383,%dummy}, %rd3308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2384}, %rd3308;
	}
	shf.r.wrap.b32 	%r2385, %r2384, %r2383, 14;
	shf.r.wrap.b32 	%r2386, %r2383, %r2384, 14;
	mov.b64 	%rd3320, {%r2386, %r2385};
	shf.r.wrap.b32 	%r2387, %r2384, %r2383, 18;
	shf.r.wrap.b32 	%r2388, %r2383, %r2384, 18;
	mov.b64 	%rd3321, {%r2388, %r2387};
	xor.b64  	%rd3322, %rd3321, %rd3320;
	shf.l.wrap.b32 	%r2389, %r2383, %r2384, 23;
	shf.l.wrap.b32 	%r2390, %r2384, %r2383, 23;
	mov.b64 	%rd3323, {%r2390, %r2389};
	xor.b64  	%rd3324, %rd3322, %rd3323;
	xor.b64  	%rd3325, %rd3284, %rd3260;
	and.b64  	%rd3326, %rd3308, %rd3325;
	xor.b64  	%rd3327, %rd3326, %rd3260;
	add.s64 	%rd3328, %rd3236, %rd3189;
	add.s64 	%rd3329, %rd3328, %rd9;
	add.s64 	%rd3330, %rd3329, %rd3327;
	add.s64 	%rd3331, %rd3330, %rd3324;
	add.s64 	%rd3332, %rd3331, %rd3247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2391,%dummy}, %rd3319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2392}, %rd3319;
	}
	shf.r.wrap.b32 	%r2393, %r2392, %r2391, 28;
	shf.r.wrap.b32 	%r2394, %r2391, %r2392, 28;
	mov.b64 	%rd3333, {%r2394, %r2393};
	shf.l.wrap.b32 	%r2395, %r2391, %r2392, 30;
	shf.l.wrap.b32 	%r2396, %r2392, %r2391, 30;
	mov.b64 	%rd3334, {%r2396, %r2395};
	xor.b64  	%rd3335, %rd3334, %rd3333;
	shf.l.wrap.b32 	%r2397, %r2391, %r2392, 25;
	shf.l.wrap.b32 	%r2398, %r2392, %r2391, 25;
	mov.b64 	%rd3336, {%r2398, %r2397};
	xor.b64  	%rd3337, %rd3335, %rd3336;
	xor.b64  	%rd3338, %rd3319, %rd3271;
	xor.b64  	%rd3339, %rd3319, %rd3295;
	and.b64  	%rd3340, %rd3339, %rd3338;
	xor.b64  	%rd3341, %rd3340, %rd3319;
	add.s64 	%rd3342, %rd3331, %rd3341;
	add.s64 	%rd3343, %rd3342, %rd3337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2399,%dummy}, %rd3332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2400}, %rd3332;
	}
	shf.r.wrap.b32 	%r2401, %r2400, %r2399, 14;
	shf.r.wrap.b32 	%r2402, %r2399, %r2400, 14;
	mov.b64 	%rd3344, {%r2402, %r2401};
	shf.r.wrap.b32 	%r2403, %r2400, %r2399, 18;
	shf.r.wrap.b32 	%r2404, %r2399, %r2400, 18;
	mov.b64 	%rd3345, {%r2404, %r2403};
	xor.b64  	%rd3346, %rd3345, %rd3344;
	shf.l.wrap.b32 	%r2405, %r2399, %r2400, 23;
	shf.l.wrap.b32 	%r2406, %r2400, %r2399, 23;
	mov.b64 	%rd3347, {%r2406, %r2405};
	xor.b64  	%rd3348, %rd3346, %rd3347;
	xor.b64  	%rd3349, %rd3308, %rd3284;
	and.b64  	%rd3350, %rd3332, %rd3349;
	xor.b64  	%rd3351, %rd3350, %rd3284;
	add.s64 	%rd3352, %rd3260, %rd3190;
	add.s64 	%rd3353, %rd3352, %rd10;
	add.s64 	%rd3354, %rd3353, %rd3351;
	add.s64 	%rd3355, %rd3354, %rd3348;
	add.s64 	%rd3356, %rd3355, %rd3271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2407,%dummy}, %rd3343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2408}, %rd3343;
	}
	shf.r.wrap.b32 	%r2409, %r2408, %r2407, 28;
	shf.r.wrap.b32 	%r2410, %r2407, %r2408, 28;
	mov.b64 	%rd3357, {%r2410, %r2409};
	shf.l.wrap.b32 	%r2411, %r2407, %r2408, 30;
	shf.l.wrap.b32 	%r2412, %r2408, %r2407, 30;
	mov.b64 	%rd3358, {%r2412, %r2411};
	xor.b64  	%rd3359, %rd3358, %rd3357;
	shf.l.wrap.b32 	%r2413, %r2407, %r2408, 25;
	shf.l.wrap.b32 	%r2414, %r2408, %r2407, 25;
	mov.b64 	%rd3360, {%r2414, %r2413};
	xor.b64  	%rd3361, %rd3359, %rd3360;
	xor.b64  	%rd3362, %rd3343, %rd3295;
	xor.b64  	%rd3363, %rd3343, %rd3319;
	and.b64  	%rd3364, %rd3363, %rd3362;
	xor.b64  	%rd3365, %rd3364, %rd3343;
	add.s64 	%rd3366, %rd3355, %rd3365;
	add.s64 	%rd3367, %rd3366, %rd3361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2415,%dummy}, %rd3356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2416}, %rd3356;
	}
	shf.r.wrap.b32 	%r2417, %r2416, %r2415, 14;
	shf.r.wrap.b32 	%r2418, %r2415, %r2416, 14;
	mov.b64 	%rd3368, {%r2418, %r2417};
	shf.r.wrap.b32 	%r2419, %r2416, %r2415, 18;
	shf.r.wrap.b32 	%r2420, %r2415, %r2416, 18;
	mov.b64 	%rd3369, {%r2420, %r2419};
	xor.b64  	%rd3370, %rd3369, %rd3368;
	shf.l.wrap.b32 	%r2421, %r2415, %r2416, 23;
	shf.l.wrap.b32 	%r2422, %r2416, %r2415, 23;
	mov.b64 	%rd3371, {%r2422, %r2421};
	xor.b64  	%rd3372, %rd3370, %rd3371;
	xor.b64  	%rd3373, %rd3332, %rd3308;
	and.b64  	%rd3374, %rd3356, %rd3373;
	xor.b64  	%rd3375, %rd3374, %rd3308;
	add.s64 	%rd3376, %rd3284, %rd3191;
	add.s64 	%rd3377, %rd3376, %rd11;
	add.s64 	%rd3378, %rd3377, %rd3375;
	add.s64 	%rd3379, %rd3378, %rd3372;
	add.s64 	%rd3380, %rd3379, %rd3295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2423,%dummy}, %rd3367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2424}, %rd3367;
	}
	shf.r.wrap.b32 	%r2425, %r2424, %r2423, 28;
	shf.r.wrap.b32 	%r2426, %r2423, %r2424, 28;
	mov.b64 	%rd3381, {%r2426, %r2425};
	shf.l.wrap.b32 	%r2427, %r2423, %r2424, 30;
	shf.l.wrap.b32 	%r2428, %r2424, %r2423, 30;
	mov.b64 	%rd3382, {%r2428, %r2427};
	xor.b64  	%rd3383, %rd3382, %rd3381;
	shf.l.wrap.b32 	%r2429, %r2423, %r2424, 25;
	shf.l.wrap.b32 	%r2430, %r2424, %r2423, 25;
	mov.b64 	%rd3384, {%r2430, %r2429};
	xor.b64  	%rd3385, %rd3383, %rd3384;
	xor.b64  	%rd3386, %rd3367, %rd3319;
	xor.b64  	%rd3387, %rd3367, %rd3343;
	and.b64  	%rd3388, %rd3387, %rd3386;
	xor.b64  	%rd3389, %rd3388, %rd3367;
	add.s64 	%rd3390, %rd3379, %rd3389;
	add.s64 	%rd3391, %rd3390, %rd3385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2431,%dummy}, %rd3380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2432}, %rd3380;
	}
	shf.r.wrap.b32 	%r2433, %r2432, %r2431, 14;
	shf.r.wrap.b32 	%r2434, %r2431, %r2432, 14;
	mov.b64 	%rd3392, {%r2434, %r2433};
	shf.r.wrap.b32 	%r2435, %r2432, %r2431, 18;
	shf.r.wrap.b32 	%r2436, %r2431, %r2432, 18;
	mov.b64 	%rd3393, {%r2436, %r2435};
	xor.b64  	%rd3394, %rd3393, %rd3392;
	shf.l.wrap.b32 	%r2437, %r2431, %r2432, 23;
	shf.l.wrap.b32 	%r2438, %r2432, %r2431, 23;
	mov.b64 	%rd3395, {%r2438, %r2437};
	xor.b64  	%rd3396, %rd3394, %rd3395;
	xor.b64  	%rd3397, %rd3356, %rd3332;
	and.b64  	%rd3398, %rd3380, %rd3397;
	xor.b64  	%rd3399, %rd3398, %rd3332;
	add.s64 	%rd3400, %rd3308, %rd3192;
	add.s64 	%rd3401, %rd3400, %rd12;
	add.s64 	%rd3402, %rd3401, %rd3399;
	add.s64 	%rd3403, %rd3402, %rd3396;
	add.s64 	%rd3404, %rd3403, %rd3319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2439,%dummy}, %rd3391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2440}, %rd3391;
	}
	shf.r.wrap.b32 	%r2441, %r2440, %r2439, 28;
	shf.r.wrap.b32 	%r2442, %r2439, %r2440, 28;
	mov.b64 	%rd3405, {%r2442, %r2441};
	shf.l.wrap.b32 	%r2443, %r2439, %r2440, 30;
	shf.l.wrap.b32 	%r2444, %r2440, %r2439, 30;
	mov.b64 	%rd3406, {%r2444, %r2443};
	xor.b64  	%rd3407, %rd3406, %rd3405;
	shf.l.wrap.b32 	%r2445, %r2439, %r2440, 25;
	shf.l.wrap.b32 	%r2446, %r2440, %r2439, 25;
	mov.b64 	%rd3408, {%r2446, %r2445};
	xor.b64  	%rd3409, %rd3407, %rd3408;
	xor.b64  	%rd3410, %rd3391, %rd3343;
	xor.b64  	%rd3411, %rd3391, %rd3367;
	and.b64  	%rd3412, %rd3411, %rd3410;
	xor.b64  	%rd3413, %rd3412, %rd3391;
	add.s64 	%rd3414, %rd3403, %rd3413;
	add.s64 	%rd3415, %rd3414, %rd3409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2447,%dummy}, %rd3404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2448}, %rd3404;
	}
	shf.r.wrap.b32 	%r2449, %r2448, %r2447, 14;
	shf.r.wrap.b32 	%r2450, %r2447, %r2448, 14;
	mov.b64 	%rd3416, {%r2450, %r2449};
	shf.r.wrap.b32 	%r2451, %r2448, %r2447, 18;
	shf.r.wrap.b32 	%r2452, %r2447, %r2448, 18;
	mov.b64 	%rd3417, {%r2452, %r2451};
	xor.b64  	%rd3418, %rd3417, %rd3416;
	shf.l.wrap.b32 	%r2453, %r2447, %r2448, 23;
	shf.l.wrap.b32 	%r2454, %r2448, %r2447, 23;
	mov.b64 	%rd3419, {%r2454, %r2453};
	xor.b64  	%rd3420, %rd3418, %rd3419;
	xor.b64  	%rd3421, %rd3380, %rd3356;
	and.b64  	%rd3422, %rd3404, %rd3421;
	xor.b64  	%rd3423, %rd3422, %rd3356;
	add.s64 	%rd3424, %rd3332, %rd3193;
	add.s64 	%rd3425, %rd3424, %rd13;
	add.s64 	%rd3426, %rd3425, %rd3423;
	add.s64 	%rd3427, %rd3426, %rd3420;
	add.s64 	%rd3428, %rd3427, %rd3343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2455,%dummy}, %rd3415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2456}, %rd3415;
	}
	shf.r.wrap.b32 	%r2457, %r2456, %r2455, 28;
	shf.r.wrap.b32 	%r2458, %r2455, %r2456, 28;
	mov.b64 	%rd3429, {%r2458, %r2457};
	shf.l.wrap.b32 	%r2459, %r2455, %r2456, 30;
	shf.l.wrap.b32 	%r2460, %r2456, %r2455, 30;
	mov.b64 	%rd3430, {%r2460, %r2459};
	xor.b64  	%rd3431, %rd3430, %rd3429;
	shf.l.wrap.b32 	%r2461, %r2455, %r2456, 25;
	shf.l.wrap.b32 	%r2462, %r2456, %r2455, 25;
	mov.b64 	%rd3432, {%r2462, %r2461};
	xor.b64  	%rd3433, %rd3431, %rd3432;
	xor.b64  	%rd3434, %rd3415, %rd3367;
	xor.b64  	%rd3435, %rd3415, %rd3391;
	and.b64  	%rd3436, %rd3435, %rd3434;
	xor.b64  	%rd3437, %rd3436, %rd3415;
	add.s64 	%rd3438, %rd3427, %rd3437;
	add.s64 	%rd3439, %rd3438, %rd3433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2463,%dummy}, %rd3428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2464}, %rd3428;
	}
	shf.r.wrap.b32 	%r2465, %r2464, %r2463, 14;
	shf.r.wrap.b32 	%r2466, %r2463, %r2464, 14;
	mov.b64 	%rd3440, {%r2466, %r2465};
	shf.r.wrap.b32 	%r2467, %r2464, %r2463, 18;
	shf.r.wrap.b32 	%r2468, %r2463, %r2464, 18;
	mov.b64 	%rd3441, {%r2468, %r2467};
	xor.b64  	%rd3442, %rd3441, %rd3440;
	shf.l.wrap.b32 	%r2469, %r2463, %r2464, 23;
	shf.l.wrap.b32 	%r2470, %r2464, %r2463, 23;
	mov.b64 	%rd3443, {%r2470, %r2469};
	xor.b64  	%rd3444, %rd3442, %rd3443;
	xor.b64  	%rd3445, %rd3404, %rd3380;
	and.b64  	%rd3446, %rd3428, %rd3445;
	xor.b64  	%rd3447, %rd3446, %rd3380;
	add.s64 	%rd3448, %rd3356, %rd3194;
	add.s64 	%rd3449, %rd3448, %rd14;
	add.s64 	%rd3450, %rd3449, %rd3447;
	add.s64 	%rd3451, %rd3450, %rd3444;
	add.s64 	%rd3452, %rd3451, %rd3367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2471,%dummy}, %rd3439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2472}, %rd3439;
	}
	shf.r.wrap.b32 	%r2473, %r2472, %r2471, 28;
	shf.r.wrap.b32 	%r2474, %r2471, %r2472, 28;
	mov.b64 	%rd3453, {%r2474, %r2473};
	shf.l.wrap.b32 	%r2475, %r2471, %r2472, 30;
	shf.l.wrap.b32 	%r2476, %r2472, %r2471, 30;
	mov.b64 	%rd3454, {%r2476, %r2475};
	xor.b64  	%rd3455, %rd3454, %rd3453;
	shf.l.wrap.b32 	%r2477, %r2471, %r2472, 25;
	shf.l.wrap.b32 	%r2478, %r2472, %r2471, 25;
	mov.b64 	%rd3456, {%r2478, %r2477};
	xor.b64  	%rd3457, %rd3455, %rd3456;
	xor.b64  	%rd3458, %rd3439, %rd3391;
	xor.b64  	%rd3459, %rd3439, %rd3415;
	and.b64  	%rd3460, %rd3459, %rd3458;
	xor.b64  	%rd3461, %rd3460, %rd3439;
	add.s64 	%rd3462, %rd3451, %rd3461;
	add.s64 	%rd3463, %rd3462, %rd3457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2479,%dummy}, %rd3452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2480}, %rd3452;
	}
	shf.r.wrap.b32 	%r2481, %r2480, %r2479, 14;
	shf.r.wrap.b32 	%r2482, %r2479, %r2480, 14;
	mov.b64 	%rd3464, {%r2482, %r2481};
	shf.r.wrap.b32 	%r2483, %r2480, %r2479, 18;
	shf.r.wrap.b32 	%r2484, %r2479, %r2480, 18;
	mov.b64 	%rd3465, {%r2484, %r2483};
	xor.b64  	%rd3466, %rd3465, %rd3464;
	shf.l.wrap.b32 	%r2485, %r2479, %r2480, 23;
	shf.l.wrap.b32 	%r2486, %r2480, %r2479, 23;
	mov.b64 	%rd3467, {%r2486, %r2485};
	xor.b64  	%rd3468, %rd3466, %rd3467;
	xor.b64  	%rd3469, %rd3428, %rd3404;
	and.b64  	%rd3470, %rd3452, %rd3469;
	xor.b64  	%rd3471, %rd3470, %rd3404;
	add.s64 	%rd3472, %rd3380, %rd3195;
	add.s64 	%rd3473, %rd3472, %rd15;
	add.s64 	%rd3474, %rd3473, %rd3471;
	add.s64 	%rd3475, %rd3474, %rd3468;
	add.s64 	%rd3476, %rd3475, %rd3391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2487,%dummy}, %rd3463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2488}, %rd3463;
	}
	shf.r.wrap.b32 	%r2489, %r2488, %r2487, 28;
	shf.r.wrap.b32 	%r2490, %r2487, %r2488, 28;
	mov.b64 	%rd3477, {%r2490, %r2489};
	shf.l.wrap.b32 	%r2491, %r2487, %r2488, 30;
	shf.l.wrap.b32 	%r2492, %r2488, %r2487, 30;
	mov.b64 	%rd3478, {%r2492, %r2491};
	xor.b64  	%rd3479, %rd3478, %rd3477;
	shf.l.wrap.b32 	%r2493, %r2487, %r2488, 25;
	shf.l.wrap.b32 	%r2494, %r2488, %r2487, 25;
	mov.b64 	%rd3480, {%r2494, %r2493};
	xor.b64  	%rd3481, %rd3479, %rd3480;
	xor.b64  	%rd3482, %rd3463, %rd3415;
	xor.b64  	%rd3483, %rd3463, %rd3439;
	and.b64  	%rd3484, %rd3483, %rd3482;
	xor.b64  	%rd3485, %rd3484, %rd3463;
	add.s64 	%rd3486, %rd3475, %rd3485;
	add.s64 	%rd3487, %rd3486, %rd3481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2495,%dummy}, %rd3476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2496}, %rd3476;
	}
	shf.r.wrap.b32 	%r2497, %r2496, %r2495, 14;
	shf.r.wrap.b32 	%r2498, %r2495, %r2496, 14;
	mov.b64 	%rd3488, {%r2498, %r2497};
	shf.r.wrap.b32 	%r2499, %r2496, %r2495, 18;
	shf.r.wrap.b32 	%r2500, %r2495, %r2496, 18;
	mov.b64 	%rd3489, {%r2500, %r2499};
	xor.b64  	%rd3490, %rd3489, %rd3488;
	shf.l.wrap.b32 	%r2501, %r2495, %r2496, 23;
	shf.l.wrap.b32 	%r2502, %r2496, %r2495, 23;
	mov.b64 	%rd3491, {%r2502, %r2501};
	xor.b64  	%rd3492, %rd3490, %rd3491;
	xor.b64  	%rd3493, %rd3452, %rd3428;
	and.b64  	%rd3494, %rd3476, %rd3493;
	xor.b64  	%rd3495, %rd3494, %rd3428;
	add.s64 	%rd3496, %rd3404, %rd3196;
	add.s64 	%rd3497, %rd3496, %rd16;
	add.s64 	%rd3498, %rd3497, %rd3495;
	add.s64 	%rd3499, %rd3498, %rd3492;
	add.s64 	%rd3500, %rd3499, %rd3415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2503,%dummy}, %rd3487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2504}, %rd3487;
	}
	shf.r.wrap.b32 	%r2505, %r2504, %r2503, 28;
	shf.r.wrap.b32 	%r2506, %r2503, %r2504, 28;
	mov.b64 	%rd3501, {%r2506, %r2505};
	shf.l.wrap.b32 	%r2507, %r2503, %r2504, 30;
	shf.l.wrap.b32 	%r2508, %r2504, %r2503, 30;
	mov.b64 	%rd3502, {%r2508, %r2507};
	xor.b64  	%rd3503, %rd3502, %rd3501;
	shf.l.wrap.b32 	%r2509, %r2503, %r2504, 25;
	shf.l.wrap.b32 	%r2510, %r2504, %r2503, 25;
	mov.b64 	%rd3504, {%r2510, %r2509};
	xor.b64  	%rd3505, %rd3503, %rd3504;
	xor.b64  	%rd3506, %rd3487, %rd3439;
	xor.b64  	%rd3507, %rd3487, %rd3463;
	and.b64  	%rd3508, %rd3507, %rd3506;
	xor.b64  	%rd3509, %rd3508, %rd3487;
	add.s64 	%rd3510, %rd3499, %rd3509;
	add.s64 	%rd3511, %rd3510, %rd3505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2511,%dummy}, %rd3500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2512}, %rd3500;
	}
	shf.r.wrap.b32 	%r2513, %r2512, %r2511, 14;
	shf.r.wrap.b32 	%r2514, %r2511, %r2512, 14;
	mov.b64 	%rd3512, {%r2514, %r2513};
	shf.r.wrap.b32 	%r2515, %r2512, %r2511, 18;
	shf.r.wrap.b32 	%r2516, %r2511, %r2512, 18;
	mov.b64 	%rd3513, {%r2516, %r2515};
	xor.b64  	%rd3514, %rd3513, %rd3512;
	shf.l.wrap.b32 	%r2517, %r2511, %r2512, 23;
	shf.l.wrap.b32 	%r2518, %r2512, %r2511, 23;
	mov.b64 	%rd3515, {%r2518, %r2517};
	xor.b64  	%rd3516, %rd3514, %rd3515;
	xor.b64  	%rd3517, %rd3476, %rd3452;
	and.b64  	%rd3518, %rd3500, %rd3517;
	xor.b64  	%rd3519, %rd3518, %rd3452;
	add.s64 	%rd3520, %rd3428, %rd3197;
	add.s64 	%rd3521, %rd3520, %rd17;
	add.s64 	%rd3522, %rd3521, %rd3519;
	add.s64 	%rd3523, %rd3522, %rd3516;
	add.s64 	%rd3524, %rd3523, %rd3439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2519,%dummy}, %rd3511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2520}, %rd3511;
	}
	shf.r.wrap.b32 	%r2521, %r2520, %r2519, 28;
	shf.r.wrap.b32 	%r2522, %r2519, %r2520, 28;
	mov.b64 	%rd3525, {%r2522, %r2521};
	shf.l.wrap.b32 	%r2523, %r2519, %r2520, 30;
	shf.l.wrap.b32 	%r2524, %r2520, %r2519, 30;
	mov.b64 	%rd3526, {%r2524, %r2523};
	xor.b64  	%rd3527, %rd3526, %rd3525;
	shf.l.wrap.b32 	%r2525, %r2519, %r2520, 25;
	shf.l.wrap.b32 	%r2526, %r2520, %r2519, 25;
	mov.b64 	%rd3528, {%r2526, %r2525};
	xor.b64  	%rd3529, %rd3527, %rd3528;
	xor.b64  	%rd3530, %rd3511, %rd3463;
	xor.b64  	%rd3531, %rd3511, %rd3487;
	and.b64  	%rd3532, %rd3531, %rd3530;
	xor.b64  	%rd3533, %rd3532, %rd3511;
	add.s64 	%rd3534, %rd3523, %rd3533;
	add.s64 	%rd3535, %rd3534, %rd3529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2527,%dummy}, %rd3524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2528}, %rd3524;
	}
	shf.r.wrap.b32 	%r2529, %r2528, %r2527, 14;
	shf.r.wrap.b32 	%r2530, %r2527, %r2528, 14;
	mov.b64 	%rd3536, {%r2530, %r2529};
	shf.r.wrap.b32 	%r2531, %r2528, %r2527, 18;
	shf.r.wrap.b32 	%r2532, %r2527, %r2528, 18;
	mov.b64 	%rd3537, {%r2532, %r2531};
	xor.b64  	%rd3538, %rd3537, %rd3536;
	shf.l.wrap.b32 	%r2533, %r2527, %r2528, 23;
	shf.l.wrap.b32 	%r2534, %r2528, %r2527, 23;
	mov.b64 	%rd3539, {%r2534, %r2533};
	xor.b64  	%rd3540, %rd3538, %rd3539;
	xor.b64  	%rd3541, %rd3500, %rd3476;
	and.b64  	%rd3542, %rd3524, %rd3541;
	xor.b64  	%rd3543, %rd3542, %rd3476;
	add.s64 	%rd3544, %rd3452, %rd3198;
	add.s64 	%rd3545, %rd3544, %rd18;
	add.s64 	%rd3546, %rd3545, %rd3543;
	add.s64 	%rd3547, %rd3546, %rd3540;
	add.s64 	%rd3548, %rd3547, %rd3463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2535,%dummy}, %rd3535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2536}, %rd3535;
	}
	shf.r.wrap.b32 	%r2537, %r2536, %r2535, 28;
	shf.r.wrap.b32 	%r2538, %r2535, %r2536, 28;
	mov.b64 	%rd3549, {%r2538, %r2537};
	shf.l.wrap.b32 	%r2539, %r2535, %r2536, 30;
	shf.l.wrap.b32 	%r2540, %r2536, %r2535, 30;
	mov.b64 	%rd3550, {%r2540, %r2539};
	xor.b64  	%rd3551, %rd3550, %rd3549;
	shf.l.wrap.b32 	%r2541, %r2535, %r2536, 25;
	shf.l.wrap.b32 	%r2542, %r2536, %r2535, 25;
	mov.b64 	%rd3552, {%r2542, %r2541};
	xor.b64  	%rd3553, %rd3551, %rd3552;
	xor.b64  	%rd3554, %rd3535, %rd3487;
	xor.b64  	%rd3555, %rd3535, %rd3511;
	and.b64  	%rd3556, %rd3555, %rd3554;
	xor.b64  	%rd3557, %rd3556, %rd3535;
	add.s64 	%rd3558, %rd3547, %rd3557;
	add.s64 	%rd3559, %rd3558, %rd3553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2543,%dummy}, %rd3548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2544}, %rd3548;
	}
	shf.r.wrap.b32 	%r2545, %r2544, %r2543, 14;
	shf.r.wrap.b32 	%r2546, %r2543, %r2544, 14;
	mov.b64 	%rd3560, {%r2546, %r2545};
	shf.r.wrap.b32 	%r2547, %r2544, %r2543, 18;
	shf.r.wrap.b32 	%r2548, %r2543, %r2544, 18;
	mov.b64 	%rd3561, {%r2548, %r2547};
	xor.b64  	%rd3562, %rd3561, %rd3560;
	shf.l.wrap.b32 	%r2549, %r2543, %r2544, 23;
	shf.l.wrap.b32 	%r2550, %r2544, %r2543, 23;
	mov.b64 	%rd3563, {%r2550, %r2549};
	xor.b64  	%rd3564, %rd3562, %rd3563;
	xor.b64  	%rd3565, %rd3524, %rd3500;
	and.b64  	%rd3566, %rd3548, %rd3565;
	xor.b64  	%rd3567, %rd3566, %rd3500;
	add.s64 	%rd3568, %rd3476, %rd3199;
	add.s64 	%rd3569, %rd3568, %rd19;
	add.s64 	%rd3570, %rd3569, %rd3567;
	add.s64 	%rd3571, %rd3570, %rd3564;
	add.s64 	%rd3572, %rd3571, %rd3487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2551,%dummy}, %rd3559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2552}, %rd3559;
	}
	shf.r.wrap.b32 	%r2553, %r2552, %r2551, 28;
	shf.r.wrap.b32 	%r2554, %r2551, %r2552, 28;
	mov.b64 	%rd3573, {%r2554, %r2553};
	shf.l.wrap.b32 	%r2555, %r2551, %r2552, 30;
	shf.l.wrap.b32 	%r2556, %r2552, %r2551, 30;
	mov.b64 	%rd3574, {%r2556, %r2555};
	xor.b64  	%rd3575, %rd3574, %rd3573;
	shf.l.wrap.b32 	%r2557, %r2551, %r2552, 25;
	shf.l.wrap.b32 	%r2558, %r2552, %r2551, 25;
	mov.b64 	%rd3576, {%r2558, %r2557};
	xor.b64  	%rd3577, %rd3575, %rd3576;
	xor.b64  	%rd3578, %rd3559, %rd3511;
	xor.b64  	%rd3579, %rd3559, %rd3535;
	and.b64  	%rd3580, %rd3579, %rd3578;
	xor.b64  	%rd3581, %rd3580, %rd3559;
	add.s64 	%rd3582, %rd3571, %rd3581;
	add.s64 	%rd3583, %rd3582, %rd3577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2559,%dummy}, %rd3198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2560}, %rd3198;
	}
	shf.r.wrap.b32 	%r2561, %r2560, %r2559, 19;
	shf.r.wrap.b32 	%r2562, %r2559, %r2560, 19;
	mov.b64 	%rd3584, {%r2562, %r2561};
	shf.l.wrap.b32 	%r2563, %r2559, %r2560, 3;
	shf.l.wrap.b32 	%r2564, %r2560, %r2559, 3;
	mov.b64 	%rd3585, {%r2564, %r2563};
	shr.u64 	%rd3586, %rd3198, 6;
	xor.b64  	%rd3587, %rd3584, %rd3586;
	xor.b64  	%rd3588, %rd3587, %rd3585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2565,%dummy}, %rd3185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2566}, %rd3185;
	}
	shf.r.wrap.b32 	%r2567, %r2566, %r2565, 1;
	shf.r.wrap.b32 	%r2568, %r2565, %r2566, 1;
	mov.b64 	%rd3589, {%r2568, %r2567};
	shf.r.wrap.b32 	%r2569, %r2566, %r2565, 8;
	shf.r.wrap.b32 	%r2570, %r2565, %r2566, 8;
	mov.b64 	%rd3590, {%r2570, %r2569};
	shr.u64 	%rd3591, %rd3185, 7;
	xor.b64  	%rd3592, %rd3589, %rd3591;
	xor.b64  	%rd3593, %rd3592, %rd3590;
	add.s64 	%rd3594, %rd3193, %rd3184;
	add.s64 	%rd3595, %rd3594, %rd3588;
	add.s64 	%rd3596, %rd3595, %rd3593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2571,%dummy}, %rd3199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2572}, %rd3199;
	}
	shf.r.wrap.b32 	%r2573, %r2572, %r2571, 19;
	shf.r.wrap.b32 	%r2574, %r2571, %r2572, 19;
	mov.b64 	%rd3597, {%r2574, %r2573};
	shf.l.wrap.b32 	%r2575, %r2571, %r2572, 3;
	shf.l.wrap.b32 	%r2576, %r2572, %r2571, 3;
	mov.b64 	%rd3598, {%r2576, %r2575};
	shr.u64 	%rd3599, %rd3199, 6;
	xor.b64  	%rd3600, %rd3597, %rd3599;
	xor.b64  	%rd3601, %rd3600, %rd3598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2577,%dummy}, %rd3186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2578}, %rd3186;
	}
	shf.r.wrap.b32 	%r2579, %r2578, %r2577, 1;
	shf.r.wrap.b32 	%r2580, %r2577, %r2578, 1;
	mov.b64 	%rd3602, {%r2580, %r2579};
	shf.r.wrap.b32 	%r2581, %r2578, %r2577, 8;
	shf.r.wrap.b32 	%r2582, %r2577, %r2578, 8;
	mov.b64 	%rd3603, {%r2582, %r2581};
	shr.u64 	%rd3604, %rd3186, 7;
	xor.b64  	%rd3605, %rd3602, %rd3604;
	xor.b64  	%rd3606, %rd3605, %rd3603;
	add.s64 	%rd3607, %rd3194, %rd3185;
	add.s64 	%rd3608, %rd3607, %rd3601;
	add.s64 	%rd3609, %rd3608, %rd3606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2583,%dummy}, %rd3596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2584}, %rd3596;
	}
	shf.r.wrap.b32 	%r2585, %r2584, %r2583, 19;
	shf.r.wrap.b32 	%r2586, %r2583, %r2584, 19;
	mov.b64 	%rd3610, {%r2586, %r2585};
	shf.l.wrap.b32 	%r2587, %r2583, %r2584, 3;
	shf.l.wrap.b32 	%r2588, %r2584, %r2583, 3;
	mov.b64 	%rd3611, {%r2588, %r2587};
	shr.u64 	%rd3612, %rd3596, 6;
	xor.b64  	%rd3613, %rd3610, %rd3612;
	xor.b64  	%rd3614, %rd3613, %rd3611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2589,%dummy}, %rd3187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2590}, %rd3187;
	}
	shf.r.wrap.b32 	%r2591, %r2590, %r2589, 1;
	shf.r.wrap.b32 	%r2592, %r2589, %r2590, 1;
	mov.b64 	%rd3615, {%r2592, %r2591};
	shf.r.wrap.b32 	%r2593, %r2590, %r2589, 8;
	shf.r.wrap.b32 	%r2594, %r2589, %r2590, 8;
	mov.b64 	%rd3616, {%r2594, %r2593};
	shr.u64 	%rd3617, %rd3187, 7;
	xor.b64  	%rd3618, %rd3615, %rd3617;
	xor.b64  	%rd3619, %rd3618, %rd3616;
	add.s64 	%rd3620, %rd3195, %rd3186;
	add.s64 	%rd3621, %rd3620, %rd3614;
	add.s64 	%rd3622, %rd3621, %rd3619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2595,%dummy}, %rd3609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2596}, %rd3609;
	}
	shf.r.wrap.b32 	%r2597, %r2596, %r2595, 19;
	shf.r.wrap.b32 	%r2598, %r2595, %r2596, 19;
	mov.b64 	%rd3623, {%r2598, %r2597};
	shf.l.wrap.b32 	%r2599, %r2595, %r2596, 3;
	shf.l.wrap.b32 	%r2600, %r2596, %r2595, 3;
	mov.b64 	%rd3624, {%r2600, %r2599};
	shr.u64 	%rd3625, %rd3609, 6;
	xor.b64  	%rd3626, %rd3623, %rd3625;
	xor.b64  	%rd3627, %rd3626, %rd3624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2601,%dummy}, %rd3188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2602}, %rd3188;
	}
	shf.r.wrap.b32 	%r2603, %r2602, %r2601, 1;
	shf.r.wrap.b32 	%r2604, %r2601, %r2602, 1;
	mov.b64 	%rd3628, {%r2604, %r2603};
	shf.r.wrap.b32 	%r2605, %r2602, %r2601, 8;
	shf.r.wrap.b32 	%r2606, %r2601, %r2602, 8;
	mov.b64 	%rd3629, {%r2606, %r2605};
	shr.u64 	%rd3630, %rd3188, 7;
	xor.b64  	%rd3631, %rd3628, %rd3630;
	xor.b64  	%rd3632, %rd3631, %rd3629;
	add.s64 	%rd3633, %rd3196, %rd3187;
	add.s64 	%rd3634, %rd3633, %rd3627;
	add.s64 	%rd3635, %rd3634, %rd3632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2607,%dummy}, %rd3622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2608}, %rd3622;
	}
	shf.r.wrap.b32 	%r2609, %r2608, %r2607, 19;
	shf.r.wrap.b32 	%r2610, %r2607, %r2608, 19;
	mov.b64 	%rd3636, {%r2610, %r2609};
	shf.l.wrap.b32 	%r2611, %r2607, %r2608, 3;
	shf.l.wrap.b32 	%r2612, %r2608, %r2607, 3;
	mov.b64 	%rd3637, {%r2612, %r2611};
	shr.u64 	%rd3638, %rd3622, 6;
	xor.b64  	%rd3639, %rd3636, %rd3638;
	xor.b64  	%rd3640, %rd3639, %rd3637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2613,%dummy}, %rd3189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2614}, %rd3189;
	}
	shf.r.wrap.b32 	%r2615, %r2614, %r2613, 1;
	shf.r.wrap.b32 	%r2616, %r2613, %r2614, 1;
	mov.b64 	%rd3641, {%r2616, %r2615};
	shf.r.wrap.b32 	%r2617, %r2614, %r2613, 8;
	shf.r.wrap.b32 	%r2618, %r2613, %r2614, 8;
	mov.b64 	%rd3642, {%r2618, %r2617};
	shr.u64 	%rd3643, %rd3189, 7;
	xor.b64  	%rd3644, %rd3641, %rd3643;
	xor.b64  	%rd3645, %rd3644, %rd3642;
	add.s64 	%rd3646, %rd3197, %rd3188;
	add.s64 	%rd3647, %rd3646, %rd3640;
	add.s64 	%rd3648, %rd3647, %rd3645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2619,%dummy}, %rd3635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2620}, %rd3635;
	}
	shf.r.wrap.b32 	%r2621, %r2620, %r2619, 19;
	shf.r.wrap.b32 	%r2622, %r2619, %r2620, 19;
	mov.b64 	%rd3649, {%r2622, %r2621};
	shf.l.wrap.b32 	%r2623, %r2619, %r2620, 3;
	shf.l.wrap.b32 	%r2624, %r2620, %r2619, 3;
	mov.b64 	%rd3650, {%r2624, %r2623};
	shr.u64 	%rd3651, %rd3635, 6;
	xor.b64  	%rd3652, %rd3649, %rd3651;
	xor.b64  	%rd3653, %rd3652, %rd3650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2625,%dummy}, %rd3190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2626}, %rd3190;
	}
	shf.r.wrap.b32 	%r2627, %r2626, %r2625, 1;
	shf.r.wrap.b32 	%r2628, %r2625, %r2626, 1;
	mov.b64 	%rd3654, {%r2628, %r2627};
	shf.r.wrap.b32 	%r2629, %r2626, %r2625, 8;
	shf.r.wrap.b32 	%r2630, %r2625, %r2626, 8;
	mov.b64 	%rd3655, {%r2630, %r2629};
	shr.u64 	%rd3656, %rd3190, 7;
	xor.b64  	%rd3657, %rd3654, %rd3656;
	xor.b64  	%rd3658, %rd3657, %rd3655;
	add.s64 	%rd3659, %rd3198, %rd3189;
	add.s64 	%rd3660, %rd3659, %rd3653;
	add.s64 	%rd3661, %rd3660, %rd3658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2631,%dummy}, %rd3648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2632}, %rd3648;
	}
	shf.r.wrap.b32 	%r2633, %r2632, %r2631, 19;
	shf.r.wrap.b32 	%r2634, %r2631, %r2632, 19;
	mov.b64 	%rd3662, {%r2634, %r2633};
	shf.l.wrap.b32 	%r2635, %r2631, %r2632, 3;
	shf.l.wrap.b32 	%r2636, %r2632, %r2631, 3;
	mov.b64 	%rd3663, {%r2636, %r2635};
	shr.u64 	%rd3664, %rd3648, 6;
	xor.b64  	%rd3665, %rd3662, %rd3664;
	xor.b64  	%rd3666, %rd3665, %rd3663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2637,%dummy}, %rd3191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2638}, %rd3191;
	}
	shf.r.wrap.b32 	%r2639, %r2638, %r2637, 1;
	shf.r.wrap.b32 	%r2640, %r2637, %r2638, 1;
	mov.b64 	%rd3667, {%r2640, %r2639};
	shf.r.wrap.b32 	%r2641, %r2638, %r2637, 8;
	shf.r.wrap.b32 	%r2642, %r2637, %r2638, 8;
	mov.b64 	%rd3668, {%r2642, %r2641};
	shr.u64 	%rd3669, %rd3191, 7;
	xor.b64  	%rd3670, %rd3667, %rd3669;
	xor.b64  	%rd3671, %rd3670, %rd3668;
	add.s64 	%rd3672, %rd3199, %rd3190;
	add.s64 	%rd3673, %rd3672, %rd3666;
	add.s64 	%rd3674, %rd3673, %rd3671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2643,%dummy}, %rd3661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2644}, %rd3661;
	}
	shf.r.wrap.b32 	%r2645, %r2644, %r2643, 19;
	shf.r.wrap.b32 	%r2646, %r2643, %r2644, 19;
	mov.b64 	%rd3675, {%r2646, %r2645};
	shf.l.wrap.b32 	%r2647, %r2643, %r2644, 3;
	shf.l.wrap.b32 	%r2648, %r2644, %r2643, 3;
	mov.b64 	%rd3676, {%r2648, %r2647};
	shr.u64 	%rd3677, %rd3661, 6;
	xor.b64  	%rd3678, %rd3675, %rd3677;
	xor.b64  	%rd3679, %rd3678, %rd3676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2649,%dummy}, %rd3192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2650}, %rd3192;
	}
	shf.r.wrap.b32 	%r2651, %r2650, %r2649, 1;
	shf.r.wrap.b32 	%r2652, %r2649, %r2650, 1;
	mov.b64 	%rd3680, {%r2652, %r2651};
	shf.r.wrap.b32 	%r2653, %r2650, %r2649, 8;
	shf.r.wrap.b32 	%r2654, %r2649, %r2650, 8;
	mov.b64 	%rd3681, {%r2654, %r2653};
	shr.u64 	%rd3682, %rd3192, 7;
	xor.b64  	%rd3683, %rd3680, %rd3682;
	xor.b64  	%rd3684, %rd3683, %rd3681;
	add.s64 	%rd3685, %rd3596, %rd3191;
	add.s64 	%rd3686, %rd3685, %rd3679;
	add.s64 	%rd3687, %rd3686, %rd3684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2655,%dummy}, %rd3674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2656}, %rd3674;
	}
	shf.r.wrap.b32 	%r2657, %r2656, %r2655, 19;
	shf.r.wrap.b32 	%r2658, %r2655, %r2656, 19;
	mov.b64 	%rd3688, {%r2658, %r2657};
	shf.l.wrap.b32 	%r2659, %r2655, %r2656, 3;
	shf.l.wrap.b32 	%r2660, %r2656, %r2655, 3;
	mov.b64 	%rd3689, {%r2660, %r2659};
	shr.u64 	%rd3690, %rd3674, 6;
	xor.b64  	%rd3691, %rd3688, %rd3690;
	xor.b64  	%rd3692, %rd3691, %rd3689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2661,%dummy}, %rd3193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2662}, %rd3193;
	}
	shf.r.wrap.b32 	%r2663, %r2662, %r2661, 1;
	shf.r.wrap.b32 	%r2664, %r2661, %r2662, 1;
	mov.b64 	%rd3693, {%r2664, %r2663};
	shf.r.wrap.b32 	%r2665, %r2662, %r2661, 8;
	shf.r.wrap.b32 	%r2666, %r2661, %r2662, 8;
	mov.b64 	%rd3694, {%r2666, %r2665};
	shr.u64 	%rd3695, %rd3193, 7;
	xor.b64  	%rd3696, %rd3693, %rd3695;
	xor.b64  	%rd3697, %rd3696, %rd3694;
	add.s64 	%rd3698, %rd3609, %rd3192;
	add.s64 	%rd3699, %rd3698, %rd3692;
	add.s64 	%rd3700, %rd3699, %rd3697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2667,%dummy}, %rd3687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2668}, %rd3687;
	}
	shf.r.wrap.b32 	%r2669, %r2668, %r2667, 19;
	shf.r.wrap.b32 	%r2670, %r2667, %r2668, 19;
	mov.b64 	%rd3701, {%r2670, %r2669};
	shf.l.wrap.b32 	%r2671, %r2667, %r2668, 3;
	shf.l.wrap.b32 	%r2672, %r2668, %r2667, 3;
	mov.b64 	%rd3702, {%r2672, %r2671};
	shr.u64 	%rd3703, %rd3687, 6;
	xor.b64  	%rd3704, %rd3701, %rd3703;
	xor.b64  	%rd3705, %rd3704, %rd3702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2673,%dummy}, %rd3194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2674}, %rd3194;
	}
	shf.r.wrap.b32 	%r2675, %r2674, %r2673, 1;
	shf.r.wrap.b32 	%r2676, %r2673, %r2674, 1;
	mov.b64 	%rd3706, {%r2676, %r2675};
	shf.r.wrap.b32 	%r2677, %r2674, %r2673, 8;
	shf.r.wrap.b32 	%r2678, %r2673, %r2674, 8;
	mov.b64 	%rd3707, {%r2678, %r2677};
	shr.u64 	%rd3708, %rd3194, 7;
	xor.b64  	%rd3709, %rd3706, %rd3708;
	xor.b64  	%rd3710, %rd3709, %rd3707;
	add.s64 	%rd3711, %rd3622, %rd3193;
	add.s64 	%rd3712, %rd3711, %rd3705;
	add.s64 	%rd3713, %rd3712, %rd3710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2679,%dummy}, %rd3700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2680}, %rd3700;
	}
	shf.r.wrap.b32 	%r2681, %r2680, %r2679, 19;
	shf.r.wrap.b32 	%r2682, %r2679, %r2680, 19;
	mov.b64 	%rd3714, {%r2682, %r2681};
	shf.l.wrap.b32 	%r2683, %r2679, %r2680, 3;
	shf.l.wrap.b32 	%r2684, %r2680, %r2679, 3;
	mov.b64 	%rd3715, {%r2684, %r2683};
	shr.u64 	%rd3716, %rd3700, 6;
	xor.b64  	%rd3717, %rd3714, %rd3716;
	xor.b64  	%rd3718, %rd3717, %rd3715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2685,%dummy}, %rd3195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2686}, %rd3195;
	}
	shf.r.wrap.b32 	%r2687, %r2686, %r2685, 1;
	shf.r.wrap.b32 	%r2688, %r2685, %r2686, 1;
	mov.b64 	%rd3719, {%r2688, %r2687};
	shf.r.wrap.b32 	%r2689, %r2686, %r2685, 8;
	shf.r.wrap.b32 	%r2690, %r2685, %r2686, 8;
	mov.b64 	%rd3720, {%r2690, %r2689};
	shr.u64 	%rd3721, %rd3195, 7;
	xor.b64  	%rd3722, %rd3719, %rd3721;
	xor.b64  	%rd3723, %rd3722, %rd3720;
	add.s64 	%rd3724, %rd3635, %rd3194;
	add.s64 	%rd3725, %rd3724, %rd3718;
	add.s64 	%rd3726, %rd3725, %rd3723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2691,%dummy}, %rd3713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2692}, %rd3713;
	}
	shf.r.wrap.b32 	%r2693, %r2692, %r2691, 19;
	shf.r.wrap.b32 	%r2694, %r2691, %r2692, 19;
	mov.b64 	%rd3727, {%r2694, %r2693};
	shf.l.wrap.b32 	%r2695, %r2691, %r2692, 3;
	shf.l.wrap.b32 	%r2696, %r2692, %r2691, 3;
	mov.b64 	%rd3728, {%r2696, %r2695};
	shr.u64 	%rd3729, %rd3713, 6;
	xor.b64  	%rd3730, %rd3727, %rd3729;
	xor.b64  	%rd3731, %rd3730, %rd3728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2697,%dummy}, %rd3196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2698}, %rd3196;
	}
	shf.r.wrap.b32 	%r2699, %r2698, %r2697, 1;
	shf.r.wrap.b32 	%r2700, %r2697, %r2698, 1;
	mov.b64 	%rd3732, {%r2700, %r2699};
	shf.r.wrap.b32 	%r2701, %r2698, %r2697, 8;
	shf.r.wrap.b32 	%r2702, %r2697, %r2698, 8;
	mov.b64 	%rd3733, {%r2702, %r2701};
	shr.u64 	%rd3734, %rd3196, 7;
	xor.b64  	%rd3735, %rd3732, %rd3734;
	xor.b64  	%rd3736, %rd3735, %rd3733;
	add.s64 	%rd3737, %rd3648, %rd3195;
	add.s64 	%rd3738, %rd3737, %rd3731;
	add.s64 	%rd3739, %rd3738, %rd3736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2703,%dummy}, %rd3726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2704}, %rd3726;
	}
	shf.r.wrap.b32 	%r2705, %r2704, %r2703, 19;
	shf.r.wrap.b32 	%r2706, %r2703, %r2704, 19;
	mov.b64 	%rd3740, {%r2706, %r2705};
	shf.l.wrap.b32 	%r2707, %r2703, %r2704, 3;
	shf.l.wrap.b32 	%r2708, %r2704, %r2703, 3;
	mov.b64 	%rd3741, {%r2708, %r2707};
	shr.u64 	%rd3742, %rd3726, 6;
	xor.b64  	%rd3743, %rd3740, %rd3742;
	xor.b64  	%rd3744, %rd3743, %rd3741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2709,%dummy}, %rd3197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2710}, %rd3197;
	}
	shf.r.wrap.b32 	%r2711, %r2710, %r2709, 1;
	shf.r.wrap.b32 	%r2712, %r2709, %r2710, 1;
	mov.b64 	%rd3745, {%r2712, %r2711};
	shf.r.wrap.b32 	%r2713, %r2710, %r2709, 8;
	shf.r.wrap.b32 	%r2714, %r2709, %r2710, 8;
	mov.b64 	%rd3746, {%r2714, %r2713};
	shr.u64 	%rd3747, %rd3197, 7;
	xor.b64  	%rd3748, %rd3745, %rd3747;
	xor.b64  	%rd3749, %rd3748, %rd3746;
	add.s64 	%rd3750, %rd3661, %rd3196;
	add.s64 	%rd3751, %rd3750, %rd3744;
	add.s64 	%rd3752, %rd3751, %rd3749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2715,%dummy}, %rd3739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2716}, %rd3739;
	}
	shf.r.wrap.b32 	%r2717, %r2716, %r2715, 19;
	shf.r.wrap.b32 	%r2718, %r2715, %r2716, 19;
	mov.b64 	%rd3753, {%r2718, %r2717};
	shf.l.wrap.b32 	%r2719, %r2715, %r2716, 3;
	shf.l.wrap.b32 	%r2720, %r2716, %r2715, 3;
	mov.b64 	%rd3754, {%r2720, %r2719};
	shr.u64 	%rd3755, %rd3739, 6;
	xor.b64  	%rd3756, %rd3753, %rd3755;
	xor.b64  	%rd3757, %rd3756, %rd3754;
	shf.r.wrap.b32 	%r2721, %r2560, %r2559, 1;
	shf.r.wrap.b32 	%r2722, %r2559, %r2560, 1;
	mov.b64 	%rd3758, {%r2722, %r2721};
	shf.r.wrap.b32 	%r2723, %r2560, %r2559, 8;
	shf.r.wrap.b32 	%r2724, %r2559, %r2560, 8;
	mov.b64 	%rd3759, {%r2724, %r2723};
	shr.u64 	%rd3760, %rd3198, 7;
	xor.b64  	%rd3761, %rd3758, %rd3760;
	xor.b64  	%rd3762, %rd3761, %rd3759;
	add.s64 	%rd3763, %rd3674, %rd3197;
	add.s64 	%rd3764, %rd3763, %rd3757;
	add.s64 	%rd3765, %rd3764, %rd3762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2725,%dummy}, %rd3752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2726}, %rd3752;
	}
	shf.r.wrap.b32 	%r2727, %r2726, %r2725, 19;
	shf.r.wrap.b32 	%r2728, %r2725, %r2726, 19;
	mov.b64 	%rd3766, {%r2728, %r2727};
	shf.l.wrap.b32 	%r2729, %r2725, %r2726, 3;
	shf.l.wrap.b32 	%r2730, %r2726, %r2725, 3;
	mov.b64 	%rd3767, {%r2730, %r2729};
	shr.u64 	%rd3768, %rd3752, 6;
	xor.b64  	%rd3769, %rd3766, %rd3768;
	xor.b64  	%rd3770, %rd3769, %rd3767;
	shf.r.wrap.b32 	%r2731, %r2572, %r2571, 1;
	shf.r.wrap.b32 	%r2732, %r2571, %r2572, 1;
	mov.b64 	%rd3771, {%r2732, %r2731};
	shf.r.wrap.b32 	%r2733, %r2572, %r2571, 8;
	shf.r.wrap.b32 	%r2734, %r2571, %r2572, 8;
	mov.b64 	%rd3772, {%r2734, %r2733};
	shr.u64 	%rd3773, %rd3199, 7;
	xor.b64  	%rd3774, %rd3771, %rd3773;
	xor.b64  	%rd3775, %rd3774, %rd3772;
	add.s64 	%rd3776, %rd3687, %rd3198;
	add.s64 	%rd3777, %rd3776, %rd3770;
	add.s64 	%rd3778, %rd3777, %rd3775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2735,%dummy}, %rd3765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2736}, %rd3765;
	}
	shf.r.wrap.b32 	%r2737, %r2736, %r2735, 19;
	shf.r.wrap.b32 	%r2738, %r2735, %r2736, 19;
	mov.b64 	%rd3779, {%r2738, %r2737};
	shf.l.wrap.b32 	%r2739, %r2735, %r2736, 3;
	shf.l.wrap.b32 	%r2740, %r2736, %r2735, 3;
	mov.b64 	%rd3780, {%r2740, %r2739};
	shr.u64 	%rd3781, %rd3765, 6;
	xor.b64  	%rd3782, %rd3779, %rd3781;
	xor.b64  	%rd3783, %rd3782, %rd3780;
	shf.r.wrap.b32 	%r2741, %r2584, %r2583, 1;
	shf.r.wrap.b32 	%r2742, %r2583, %r2584, 1;
	mov.b64 	%rd3784, {%r2742, %r2741};
	shf.r.wrap.b32 	%r2743, %r2584, %r2583, 8;
	shf.r.wrap.b32 	%r2744, %r2583, %r2584, 8;
	mov.b64 	%rd3785, {%r2744, %r2743};
	shr.u64 	%rd3786, %rd3596, 7;
	xor.b64  	%rd3787, %rd3784, %rd3786;
	xor.b64  	%rd3788, %rd3787, %rd3785;
	add.s64 	%rd3789, %rd3700, %rd3199;
	add.s64 	%rd3790, %rd3789, %rd3783;
	add.s64 	%rd3791, %rd3790, %rd3788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2745,%dummy}, %rd3572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2746}, %rd3572;
	}
	shf.r.wrap.b32 	%r2747, %r2746, %r2745, 14;
	shf.r.wrap.b32 	%r2748, %r2745, %r2746, 14;
	mov.b64 	%rd3792, {%r2748, %r2747};
	shf.r.wrap.b32 	%r2749, %r2746, %r2745, 18;
	shf.r.wrap.b32 	%r2750, %r2745, %r2746, 18;
	mov.b64 	%rd3793, {%r2750, %r2749};
	xor.b64  	%rd3794, %rd3793, %rd3792;
	shf.l.wrap.b32 	%r2751, %r2745, %r2746, 23;
	shf.l.wrap.b32 	%r2752, %r2746, %r2745, 23;
	mov.b64 	%rd3795, {%r2752, %r2751};
	xor.b64  	%rd3796, %rd3794, %rd3795;
	xor.b64  	%rd3797, %rd3548, %rd3524;
	and.b64  	%rd3798, %rd3797, %rd3572;
	xor.b64  	%rd3799, %rd3798, %rd3524;
	add.s64 	%rd3800, %rd3799, %rd3500;
	add.s64 	%rd3801, %rd3800, %rd3596;
	add.s64 	%rd3802, %rd3801, %rd8805;
	add.s64 	%rd3803, %rd3802, %rd3796;
	add.s64 	%rd3804, %rd3803, %rd3511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2753,%dummy}, %rd3583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2754}, %rd3583;
	}
	shf.r.wrap.b32 	%r2755, %r2754, %r2753, 28;
	shf.r.wrap.b32 	%r2756, %r2753, %r2754, 28;
	mov.b64 	%rd3805, {%r2756, %r2755};
	shf.l.wrap.b32 	%r2757, %r2753, %r2754, 30;
	shf.l.wrap.b32 	%r2758, %r2754, %r2753, 30;
	mov.b64 	%rd3806, {%r2758, %r2757};
	xor.b64  	%rd3807, %rd3806, %rd3805;
	shf.l.wrap.b32 	%r2759, %r2753, %r2754, 25;
	shf.l.wrap.b32 	%r2760, %r2754, %r2753, 25;
	mov.b64 	%rd3808, {%r2760, %r2759};
	xor.b64  	%rd3809, %rd3807, %rd3808;
	xor.b64  	%rd3810, %rd3583, %rd3535;
	xor.b64  	%rd3811, %rd3583, %rd3559;
	and.b64  	%rd3812, %rd3811, %rd3810;
	xor.b64  	%rd3813, %rd3812, %rd3583;
	add.s64 	%rd3814, %rd3803, %rd3813;
	add.s64 	%rd3815, %rd3814, %rd3809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2761,%dummy}, %rd3804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2762}, %rd3804;
	}
	shf.r.wrap.b32 	%r2763, %r2762, %r2761, 14;
	shf.r.wrap.b32 	%r2764, %r2761, %r2762, 14;
	mov.b64 	%rd3816, {%r2764, %r2763};
	shf.r.wrap.b32 	%r2765, %r2762, %r2761, 18;
	shf.r.wrap.b32 	%r2766, %r2761, %r2762, 18;
	mov.b64 	%rd3817, {%r2766, %r2765};
	xor.b64  	%rd3818, %rd3817, %rd3816;
	shf.l.wrap.b32 	%r2767, %r2761, %r2762, 23;
	shf.l.wrap.b32 	%r2768, %r2762, %r2761, 23;
	mov.b64 	%rd3819, {%r2768, %r2767};
	xor.b64  	%rd3820, %rd3818, %rd3819;
	xor.b64  	%rd3821, %rd3572, %rd3548;
	and.b64  	%rd3822, %rd3804, %rd3821;
	xor.b64  	%rd3823, %rd3822, %rd3548;
	add.s64 	%rd3824, %rd3609, %rd3524;
	add.s64 	%rd3825, %rd3824, %rd8804;
	add.s64 	%rd3826, %rd3825, %rd3823;
	add.s64 	%rd3827, %rd3826, %rd3820;
	add.s64 	%rd3828, %rd3827, %rd3535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2769,%dummy}, %rd3815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2770}, %rd3815;
	}
	shf.r.wrap.b32 	%r2771, %r2770, %r2769, 28;
	shf.r.wrap.b32 	%r2772, %r2769, %r2770, 28;
	mov.b64 	%rd3829, {%r2772, %r2771};
	shf.l.wrap.b32 	%r2773, %r2769, %r2770, 30;
	shf.l.wrap.b32 	%r2774, %r2770, %r2769, 30;
	mov.b64 	%rd3830, {%r2774, %r2773};
	xor.b64  	%rd3831, %rd3830, %rd3829;
	shf.l.wrap.b32 	%r2775, %r2769, %r2770, 25;
	shf.l.wrap.b32 	%r2776, %r2770, %r2769, 25;
	mov.b64 	%rd3832, {%r2776, %r2775};
	xor.b64  	%rd3833, %rd3831, %rd3832;
	xor.b64  	%rd3834, %rd3815, %rd3559;
	xor.b64  	%rd3835, %rd3815, %rd3583;
	and.b64  	%rd3836, %rd3835, %rd3834;
	xor.b64  	%rd3837, %rd3836, %rd3815;
	add.s64 	%rd3838, %rd3827, %rd3837;
	add.s64 	%rd3839, %rd3838, %rd3833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2777,%dummy}, %rd3828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2778}, %rd3828;
	}
	shf.r.wrap.b32 	%r2779, %r2778, %r2777, 14;
	shf.r.wrap.b32 	%r2780, %r2777, %r2778, 14;
	mov.b64 	%rd3840, {%r2780, %r2779};
	shf.r.wrap.b32 	%r2781, %r2778, %r2777, 18;
	shf.r.wrap.b32 	%r2782, %r2777, %r2778, 18;
	mov.b64 	%rd3841, {%r2782, %r2781};
	xor.b64  	%rd3842, %rd3841, %rd3840;
	shf.l.wrap.b32 	%r2783, %r2777, %r2778, 23;
	shf.l.wrap.b32 	%r2784, %r2778, %r2777, 23;
	mov.b64 	%rd3843, {%r2784, %r2783};
	xor.b64  	%rd3844, %rd3842, %rd3843;
	xor.b64  	%rd3845, %rd3804, %rd3572;
	and.b64  	%rd3846, %rd3828, %rd3845;
	xor.b64  	%rd3847, %rd3846, %rd3572;
	add.s64 	%rd3848, %rd3622, %rd3548;
	add.s64 	%rd3849, %rd3848, %rd8803;
	add.s64 	%rd3850, %rd3849, %rd3847;
	add.s64 	%rd3851, %rd3850, %rd3844;
	add.s64 	%rd3852, %rd3851, %rd3559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2785,%dummy}, %rd3839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2786}, %rd3839;
	}
	shf.r.wrap.b32 	%r2787, %r2786, %r2785, 28;
	shf.r.wrap.b32 	%r2788, %r2785, %r2786, 28;
	mov.b64 	%rd3853, {%r2788, %r2787};
	shf.l.wrap.b32 	%r2789, %r2785, %r2786, 30;
	shf.l.wrap.b32 	%r2790, %r2786, %r2785, 30;
	mov.b64 	%rd3854, {%r2790, %r2789};
	xor.b64  	%rd3855, %rd3854, %rd3853;
	shf.l.wrap.b32 	%r2791, %r2785, %r2786, 25;
	shf.l.wrap.b32 	%r2792, %r2786, %r2785, 25;
	mov.b64 	%rd3856, {%r2792, %r2791};
	xor.b64  	%rd3857, %rd3855, %rd3856;
	xor.b64  	%rd3858, %rd3839, %rd3583;
	xor.b64  	%rd3859, %rd3839, %rd3815;
	and.b64  	%rd3860, %rd3859, %rd3858;
	xor.b64  	%rd3861, %rd3860, %rd3839;
	add.s64 	%rd3862, %rd3851, %rd3861;
	add.s64 	%rd3863, %rd3862, %rd3857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2793,%dummy}, %rd3852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2794}, %rd3852;
	}
	shf.r.wrap.b32 	%r2795, %r2794, %r2793, 14;
	shf.r.wrap.b32 	%r2796, %r2793, %r2794, 14;
	mov.b64 	%rd3864, {%r2796, %r2795};
	shf.r.wrap.b32 	%r2797, %r2794, %r2793, 18;
	shf.r.wrap.b32 	%r2798, %r2793, %r2794, 18;
	mov.b64 	%rd3865, {%r2798, %r2797};
	xor.b64  	%rd3866, %rd3865, %rd3864;
	shf.l.wrap.b32 	%r2799, %r2793, %r2794, 23;
	shf.l.wrap.b32 	%r2800, %r2794, %r2793, 23;
	mov.b64 	%rd3867, {%r2800, %r2799};
	xor.b64  	%rd3868, %rd3866, %rd3867;
	xor.b64  	%rd3869, %rd3828, %rd3804;
	and.b64  	%rd3870, %rd3852, %rd3869;
	xor.b64  	%rd3871, %rd3870, %rd3804;
	add.s64 	%rd3872, %rd3635, %rd3572;
	add.s64 	%rd3873, %rd3872, %rd8802;
	add.s64 	%rd3874, %rd3873, %rd3871;
	add.s64 	%rd3875, %rd3874, %rd3868;
	add.s64 	%rd3876, %rd3875, %rd3583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2801,%dummy}, %rd3863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2802}, %rd3863;
	}
	shf.r.wrap.b32 	%r2803, %r2802, %r2801, 28;
	shf.r.wrap.b32 	%r2804, %r2801, %r2802, 28;
	mov.b64 	%rd3877, {%r2804, %r2803};
	shf.l.wrap.b32 	%r2805, %r2801, %r2802, 30;
	shf.l.wrap.b32 	%r2806, %r2802, %r2801, 30;
	mov.b64 	%rd3878, {%r2806, %r2805};
	xor.b64  	%rd3879, %rd3878, %rd3877;
	shf.l.wrap.b32 	%r2807, %r2801, %r2802, 25;
	shf.l.wrap.b32 	%r2808, %r2802, %r2801, 25;
	mov.b64 	%rd3880, {%r2808, %r2807};
	xor.b64  	%rd3881, %rd3879, %rd3880;
	xor.b64  	%rd3882, %rd3863, %rd3815;
	xor.b64  	%rd3883, %rd3863, %rd3839;
	and.b64  	%rd3884, %rd3883, %rd3882;
	xor.b64  	%rd3885, %rd3884, %rd3863;
	add.s64 	%rd3886, %rd3875, %rd3885;
	add.s64 	%rd3887, %rd3886, %rd3881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2809,%dummy}, %rd3876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2810}, %rd3876;
	}
	shf.r.wrap.b32 	%r2811, %r2810, %r2809, 14;
	shf.r.wrap.b32 	%r2812, %r2809, %r2810, 14;
	mov.b64 	%rd3888, {%r2812, %r2811};
	shf.r.wrap.b32 	%r2813, %r2810, %r2809, 18;
	shf.r.wrap.b32 	%r2814, %r2809, %r2810, 18;
	mov.b64 	%rd3889, {%r2814, %r2813};
	xor.b64  	%rd3890, %rd3889, %rd3888;
	shf.l.wrap.b32 	%r2815, %r2809, %r2810, 23;
	shf.l.wrap.b32 	%r2816, %r2810, %r2809, 23;
	mov.b64 	%rd3891, {%r2816, %r2815};
	xor.b64  	%rd3892, %rd3890, %rd3891;
	xor.b64  	%rd3893, %rd3852, %rd3828;
	and.b64  	%rd3894, %rd3876, %rd3893;
	xor.b64  	%rd3895, %rd3894, %rd3828;
	add.s64 	%rd3896, %rd3804, %rd3648;
	add.s64 	%rd3897, %rd3896, %rd8801;
	add.s64 	%rd3898, %rd3897, %rd3895;
	add.s64 	%rd3899, %rd3898, %rd3892;
	add.s64 	%rd3900, %rd3899, %rd3815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2817,%dummy}, %rd3887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2818}, %rd3887;
	}
	shf.r.wrap.b32 	%r2819, %r2818, %r2817, 28;
	shf.r.wrap.b32 	%r2820, %r2817, %r2818, 28;
	mov.b64 	%rd3901, {%r2820, %r2819};
	shf.l.wrap.b32 	%r2821, %r2817, %r2818, 30;
	shf.l.wrap.b32 	%r2822, %r2818, %r2817, 30;
	mov.b64 	%rd3902, {%r2822, %r2821};
	xor.b64  	%rd3903, %rd3902, %rd3901;
	shf.l.wrap.b32 	%r2823, %r2817, %r2818, 25;
	shf.l.wrap.b32 	%r2824, %r2818, %r2817, 25;
	mov.b64 	%rd3904, {%r2824, %r2823};
	xor.b64  	%rd3905, %rd3903, %rd3904;
	xor.b64  	%rd3906, %rd3887, %rd3839;
	xor.b64  	%rd3907, %rd3887, %rd3863;
	and.b64  	%rd3908, %rd3907, %rd3906;
	xor.b64  	%rd3909, %rd3908, %rd3887;
	add.s64 	%rd3910, %rd3899, %rd3909;
	add.s64 	%rd3911, %rd3910, %rd3905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2825,%dummy}, %rd3900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2826}, %rd3900;
	}
	shf.r.wrap.b32 	%r2827, %r2826, %r2825, 14;
	shf.r.wrap.b32 	%r2828, %r2825, %r2826, 14;
	mov.b64 	%rd3912, {%r2828, %r2827};
	shf.r.wrap.b32 	%r2829, %r2826, %r2825, 18;
	shf.r.wrap.b32 	%r2830, %r2825, %r2826, 18;
	mov.b64 	%rd3913, {%r2830, %r2829};
	xor.b64  	%rd3914, %rd3913, %rd3912;
	shf.l.wrap.b32 	%r2831, %r2825, %r2826, 23;
	shf.l.wrap.b32 	%r2832, %r2826, %r2825, 23;
	mov.b64 	%rd3915, {%r2832, %r2831};
	xor.b64  	%rd3916, %rd3914, %rd3915;
	xor.b64  	%rd3917, %rd3876, %rd3852;
	and.b64  	%rd3918, %rd3900, %rd3917;
	xor.b64  	%rd3919, %rd3918, %rd3852;
	add.s64 	%rd3920, %rd3828, %rd3661;
	add.s64 	%rd3921, %rd3920, %rd8800;
	add.s64 	%rd3922, %rd3921, %rd3919;
	add.s64 	%rd3923, %rd3922, %rd3916;
	add.s64 	%rd3924, %rd3923, %rd3839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2833,%dummy}, %rd3911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2834}, %rd3911;
	}
	shf.r.wrap.b32 	%r2835, %r2834, %r2833, 28;
	shf.r.wrap.b32 	%r2836, %r2833, %r2834, 28;
	mov.b64 	%rd3925, {%r2836, %r2835};
	shf.l.wrap.b32 	%r2837, %r2833, %r2834, 30;
	shf.l.wrap.b32 	%r2838, %r2834, %r2833, 30;
	mov.b64 	%rd3926, {%r2838, %r2837};
	xor.b64  	%rd3927, %rd3926, %rd3925;
	shf.l.wrap.b32 	%r2839, %r2833, %r2834, 25;
	shf.l.wrap.b32 	%r2840, %r2834, %r2833, 25;
	mov.b64 	%rd3928, {%r2840, %r2839};
	xor.b64  	%rd3929, %rd3927, %rd3928;
	xor.b64  	%rd3930, %rd3911, %rd3863;
	xor.b64  	%rd3931, %rd3911, %rd3887;
	and.b64  	%rd3932, %rd3931, %rd3930;
	xor.b64  	%rd3933, %rd3932, %rd3911;
	add.s64 	%rd3934, %rd3923, %rd3933;
	add.s64 	%rd3935, %rd3934, %rd3929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2841,%dummy}, %rd3924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2842}, %rd3924;
	}
	shf.r.wrap.b32 	%r2843, %r2842, %r2841, 14;
	shf.r.wrap.b32 	%r2844, %r2841, %r2842, 14;
	mov.b64 	%rd3936, {%r2844, %r2843};
	shf.r.wrap.b32 	%r2845, %r2842, %r2841, 18;
	shf.r.wrap.b32 	%r2846, %r2841, %r2842, 18;
	mov.b64 	%rd3937, {%r2846, %r2845};
	xor.b64  	%rd3938, %rd3937, %rd3936;
	shf.l.wrap.b32 	%r2847, %r2841, %r2842, 23;
	shf.l.wrap.b32 	%r2848, %r2842, %r2841, 23;
	mov.b64 	%rd3939, {%r2848, %r2847};
	xor.b64  	%rd3940, %rd3938, %rd3939;
	xor.b64  	%rd3941, %rd3900, %rd3876;
	and.b64  	%rd3942, %rd3924, %rd3941;
	xor.b64  	%rd3943, %rd3942, %rd3876;
	add.s64 	%rd3944, %rd3852, %rd3674;
	add.s64 	%rd3945, %rd3944, %rd8799;
	add.s64 	%rd3946, %rd3945, %rd3943;
	add.s64 	%rd3947, %rd3946, %rd3940;
	add.s64 	%rd3948, %rd3947, %rd3863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2849,%dummy}, %rd3935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2850}, %rd3935;
	}
	shf.r.wrap.b32 	%r2851, %r2850, %r2849, 28;
	shf.r.wrap.b32 	%r2852, %r2849, %r2850, 28;
	mov.b64 	%rd3949, {%r2852, %r2851};
	shf.l.wrap.b32 	%r2853, %r2849, %r2850, 30;
	shf.l.wrap.b32 	%r2854, %r2850, %r2849, 30;
	mov.b64 	%rd3950, {%r2854, %r2853};
	xor.b64  	%rd3951, %rd3950, %rd3949;
	shf.l.wrap.b32 	%r2855, %r2849, %r2850, 25;
	shf.l.wrap.b32 	%r2856, %r2850, %r2849, 25;
	mov.b64 	%rd3952, {%r2856, %r2855};
	xor.b64  	%rd3953, %rd3951, %rd3952;
	xor.b64  	%rd3954, %rd3935, %rd3887;
	xor.b64  	%rd3955, %rd3935, %rd3911;
	and.b64  	%rd3956, %rd3955, %rd3954;
	xor.b64  	%rd3957, %rd3956, %rd3935;
	add.s64 	%rd3958, %rd3947, %rd3957;
	add.s64 	%rd3959, %rd3958, %rd3953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2857,%dummy}, %rd3948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2858}, %rd3948;
	}
	shf.r.wrap.b32 	%r2859, %r2858, %r2857, 14;
	shf.r.wrap.b32 	%r2860, %r2857, %r2858, 14;
	mov.b64 	%rd3960, {%r2860, %r2859};
	shf.r.wrap.b32 	%r2861, %r2858, %r2857, 18;
	shf.r.wrap.b32 	%r2862, %r2857, %r2858, 18;
	mov.b64 	%rd3961, {%r2862, %r2861};
	xor.b64  	%rd3962, %rd3961, %rd3960;
	shf.l.wrap.b32 	%r2863, %r2857, %r2858, 23;
	shf.l.wrap.b32 	%r2864, %r2858, %r2857, 23;
	mov.b64 	%rd3963, {%r2864, %r2863};
	xor.b64  	%rd3964, %rd3962, %rd3963;
	xor.b64  	%rd3965, %rd3924, %rd3900;
	and.b64  	%rd3966, %rd3948, %rd3965;
	xor.b64  	%rd3967, %rd3966, %rd3900;
	add.s64 	%rd3968, %rd3876, %rd3687;
	add.s64 	%rd3969, %rd3968, %rd8798;
	add.s64 	%rd3970, %rd3969, %rd3967;
	add.s64 	%rd3971, %rd3970, %rd3964;
	add.s64 	%rd3972, %rd3971, %rd3887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2865,%dummy}, %rd3959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2866}, %rd3959;
	}
	shf.r.wrap.b32 	%r2867, %r2866, %r2865, 28;
	shf.r.wrap.b32 	%r2868, %r2865, %r2866, 28;
	mov.b64 	%rd3973, {%r2868, %r2867};
	shf.l.wrap.b32 	%r2869, %r2865, %r2866, 30;
	shf.l.wrap.b32 	%r2870, %r2866, %r2865, 30;
	mov.b64 	%rd3974, {%r2870, %r2869};
	xor.b64  	%rd3975, %rd3974, %rd3973;
	shf.l.wrap.b32 	%r2871, %r2865, %r2866, 25;
	shf.l.wrap.b32 	%r2872, %r2866, %r2865, 25;
	mov.b64 	%rd3976, {%r2872, %r2871};
	xor.b64  	%rd3977, %rd3975, %rd3976;
	xor.b64  	%rd3978, %rd3959, %rd3911;
	xor.b64  	%rd3979, %rd3959, %rd3935;
	and.b64  	%rd3980, %rd3979, %rd3978;
	xor.b64  	%rd3981, %rd3980, %rd3959;
	add.s64 	%rd3982, %rd3971, %rd3981;
	add.s64 	%rd3983, %rd3982, %rd3977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2873,%dummy}, %rd3972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2874}, %rd3972;
	}
	shf.r.wrap.b32 	%r2875, %r2874, %r2873, 14;
	shf.r.wrap.b32 	%r2876, %r2873, %r2874, 14;
	mov.b64 	%rd3984, {%r2876, %r2875};
	shf.r.wrap.b32 	%r2877, %r2874, %r2873, 18;
	shf.r.wrap.b32 	%r2878, %r2873, %r2874, 18;
	mov.b64 	%rd3985, {%r2878, %r2877};
	xor.b64  	%rd3986, %rd3985, %rd3984;
	shf.l.wrap.b32 	%r2879, %r2873, %r2874, 23;
	shf.l.wrap.b32 	%r2880, %r2874, %r2873, 23;
	mov.b64 	%rd3987, {%r2880, %r2879};
	xor.b64  	%rd3988, %rd3986, %rd3987;
	xor.b64  	%rd3989, %rd3948, %rd3924;
	and.b64  	%rd3990, %rd3972, %rd3989;
	xor.b64  	%rd3991, %rd3990, %rd3924;
	add.s64 	%rd3992, %rd3900, %rd3700;
	add.s64 	%rd3993, %rd3992, %rd8797;
	add.s64 	%rd3994, %rd3993, %rd3991;
	add.s64 	%rd3995, %rd3994, %rd3988;
	add.s64 	%rd3996, %rd3995, %rd3911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2881,%dummy}, %rd3983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2882}, %rd3983;
	}
	shf.r.wrap.b32 	%r2883, %r2882, %r2881, 28;
	shf.r.wrap.b32 	%r2884, %r2881, %r2882, 28;
	mov.b64 	%rd3997, {%r2884, %r2883};
	shf.l.wrap.b32 	%r2885, %r2881, %r2882, 30;
	shf.l.wrap.b32 	%r2886, %r2882, %r2881, 30;
	mov.b64 	%rd3998, {%r2886, %r2885};
	xor.b64  	%rd3999, %rd3998, %rd3997;
	shf.l.wrap.b32 	%r2887, %r2881, %r2882, 25;
	shf.l.wrap.b32 	%r2888, %r2882, %r2881, 25;
	mov.b64 	%rd4000, {%r2888, %r2887};
	xor.b64  	%rd4001, %rd3999, %rd4000;
	xor.b64  	%rd4002, %rd3983, %rd3935;
	xor.b64  	%rd4003, %rd3983, %rd3959;
	and.b64  	%rd4004, %rd4003, %rd4002;
	xor.b64  	%rd4005, %rd4004, %rd3983;
	add.s64 	%rd4006, %rd3995, %rd4005;
	add.s64 	%rd4007, %rd4006, %rd4001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2889,%dummy}, %rd3996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2890}, %rd3996;
	}
	shf.r.wrap.b32 	%r2891, %r2890, %r2889, 14;
	shf.r.wrap.b32 	%r2892, %r2889, %r2890, 14;
	mov.b64 	%rd4008, {%r2892, %r2891};
	shf.r.wrap.b32 	%r2893, %r2890, %r2889, 18;
	shf.r.wrap.b32 	%r2894, %r2889, %r2890, 18;
	mov.b64 	%rd4009, {%r2894, %r2893};
	xor.b64  	%rd4010, %rd4009, %rd4008;
	shf.l.wrap.b32 	%r2895, %r2889, %r2890, 23;
	shf.l.wrap.b32 	%r2896, %r2890, %r2889, 23;
	mov.b64 	%rd4011, {%r2896, %r2895};
	xor.b64  	%rd4012, %rd4010, %rd4011;
	xor.b64  	%rd4013, %rd3972, %rd3948;
	and.b64  	%rd4014, %rd3996, %rd4013;
	xor.b64  	%rd4015, %rd4014, %rd3948;
	add.s64 	%rd4016, %rd3924, %rd3713;
	add.s64 	%rd4017, %rd4016, %rd8796;
	add.s64 	%rd4018, %rd4017, %rd4015;
	add.s64 	%rd4019, %rd4018, %rd4012;
	add.s64 	%rd4020, %rd4019, %rd3935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2897,%dummy}, %rd4007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2898}, %rd4007;
	}
	shf.r.wrap.b32 	%r2899, %r2898, %r2897, 28;
	shf.r.wrap.b32 	%r2900, %r2897, %r2898, 28;
	mov.b64 	%rd4021, {%r2900, %r2899};
	shf.l.wrap.b32 	%r2901, %r2897, %r2898, 30;
	shf.l.wrap.b32 	%r2902, %r2898, %r2897, 30;
	mov.b64 	%rd4022, {%r2902, %r2901};
	xor.b64  	%rd4023, %rd4022, %rd4021;
	shf.l.wrap.b32 	%r2903, %r2897, %r2898, 25;
	shf.l.wrap.b32 	%r2904, %r2898, %r2897, 25;
	mov.b64 	%rd4024, {%r2904, %r2903};
	xor.b64  	%rd4025, %rd4023, %rd4024;
	xor.b64  	%rd4026, %rd4007, %rd3959;
	xor.b64  	%rd4027, %rd4007, %rd3983;
	and.b64  	%rd4028, %rd4027, %rd4026;
	xor.b64  	%rd4029, %rd4028, %rd4007;
	add.s64 	%rd4030, %rd4019, %rd4029;
	add.s64 	%rd4031, %rd4030, %rd4025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2905,%dummy}, %rd4020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2906}, %rd4020;
	}
	shf.r.wrap.b32 	%r2907, %r2906, %r2905, 14;
	shf.r.wrap.b32 	%r2908, %r2905, %r2906, 14;
	mov.b64 	%rd4032, {%r2908, %r2907};
	shf.r.wrap.b32 	%r2909, %r2906, %r2905, 18;
	shf.r.wrap.b32 	%r2910, %r2905, %r2906, 18;
	mov.b64 	%rd4033, {%r2910, %r2909};
	xor.b64  	%rd4034, %rd4033, %rd4032;
	shf.l.wrap.b32 	%r2911, %r2905, %r2906, 23;
	shf.l.wrap.b32 	%r2912, %r2906, %r2905, 23;
	mov.b64 	%rd4035, {%r2912, %r2911};
	xor.b64  	%rd4036, %rd4034, %rd4035;
	xor.b64  	%rd4037, %rd3996, %rd3972;
	and.b64  	%rd4038, %rd4020, %rd4037;
	xor.b64  	%rd4039, %rd4038, %rd3972;
	add.s64 	%rd4040, %rd3948, %rd3726;
	add.s64 	%rd4041, %rd4040, %rd8795;
	add.s64 	%rd4042, %rd4041, %rd4039;
	add.s64 	%rd4043, %rd4042, %rd4036;
	add.s64 	%rd4044, %rd4043, %rd3959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2913,%dummy}, %rd4031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2914}, %rd4031;
	}
	shf.r.wrap.b32 	%r2915, %r2914, %r2913, 28;
	shf.r.wrap.b32 	%r2916, %r2913, %r2914, 28;
	mov.b64 	%rd4045, {%r2916, %r2915};
	shf.l.wrap.b32 	%r2917, %r2913, %r2914, 30;
	shf.l.wrap.b32 	%r2918, %r2914, %r2913, 30;
	mov.b64 	%rd4046, {%r2918, %r2917};
	xor.b64  	%rd4047, %rd4046, %rd4045;
	shf.l.wrap.b32 	%r2919, %r2913, %r2914, 25;
	shf.l.wrap.b32 	%r2920, %r2914, %r2913, 25;
	mov.b64 	%rd4048, {%r2920, %r2919};
	xor.b64  	%rd4049, %rd4047, %rd4048;
	xor.b64  	%rd4050, %rd4031, %rd3983;
	xor.b64  	%rd4051, %rd4031, %rd4007;
	and.b64  	%rd4052, %rd4051, %rd4050;
	xor.b64  	%rd4053, %rd4052, %rd4031;
	add.s64 	%rd4054, %rd4043, %rd4053;
	add.s64 	%rd4055, %rd4054, %rd4049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2921,%dummy}, %rd4044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2922}, %rd4044;
	}
	shf.r.wrap.b32 	%r2923, %r2922, %r2921, 14;
	shf.r.wrap.b32 	%r2924, %r2921, %r2922, 14;
	mov.b64 	%rd4056, {%r2924, %r2923};
	shf.r.wrap.b32 	%r2925, %r2922, %r2921, 18;
	shf.r.wrap.b32 	%r2926, %r2921, %r2922, 18;
	mov.b64 	%rd4057, {%r2926, %r2925};
	xor.b64  	%rd4058, %rd4057, %rd4056;
	shf.l.wrap.b32 	%r2927, %r2921, %r2922, 23;
	shf.l.wrap.b32 	%r2928, %r2922, %r2921, 23;
	mov.b64 	%rd4059, {%r2928, %r2927};
	xor.b64  	%rd4060, %rd4058, %rd4059;
	xor.b64  	%rd4061, %rd4020, %rd3996;
	and.b64  	%rd4062, %rd4044, %rd4061;
	xor.b64  	%rd4063, %rd4062, %rd3996;
	add.s64 	%rd4064, %rd3972, %rd3739;
	add.s64 	%rd4065, %rd4064, %rd8794;
	add.s64 	%rd4066, %rd4065, %rd4063;
	add.s64 	%rd4067, %rd4066, %rd4060;
	add.s64 	%rd4068, %rd4067, %rd3983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2929,%dummy}, %rd4055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2930}, %rd4055;
	}
	shf.r.wrap.b32 	%r2931, %r2930, %r2929, 28;
	shf.r.wrap.b32 	%r2932, %r2929, %r2930, 28;
	mov.b64 	%rd4069, {%r2932, %r2931};
	shf.l.wrap.b32 	%r2933, %r2929, %r2930, 30;
	shf.l.wrap.b32 	%r2934, %r2930, %r2929, 30;
	mov.b64 	%rd4070, {%r2934, %r2933};
	xor.b64  	%rd4071, %rd4070, %rd4069;
	shf.l.wrap.b32 	%r2935, %r2929, %r2930, 25;
	shf.l.wrap.b32 	%r2936, %r2930, %r2929, 25;
	mov.b64 	%rd4072, {%r2936, %r2935};
	xor.b64  	%rd4073, %rd4071, %rd4072;
	xor.b64  	%rd4074, %rd4055, %rd4007;
	xor.b64  	%rd4075, %rd4055, %rd4031;
	and.b64  	%rd4076, %rd4075, %rd4074;
	xor.b64  	%rd4077, %rd4076, %rd4055;
	add.s64 	%rd4078, %rd4067, %rd4077;
	add.s64 	%rd4079, %rd4078, %rd4073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2937,%dummy}, %rd4068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2938}, %rd4068;
	}
	shf.r.wrap.b32 	%r2939, %r2938, %r2937, 14;
	shf.r.wrap.b32 	%r2940, %r2937, %r2938, 14;
	mov.b64 	%rd4080, {%r2940, %r2939};
	shf.r.wrap.b32 	%r2941, %r2938, %r2937, 18;
	shf.r.wrap.b32 	%r2942, %r2937, %r2938, 18;
	mov.b64 	%rd4081, {%r2942, %r2941};
	xor.b64  	%rd4082, %rd4081, %rd4080;
	shf.l.wrap.b32 	%r2943, %r2937, %r2938, 23;
	shf.l.wrap.b32 	%r2944, %r2938, %r2937, 23;
	mov.b64 	%rd4083, {%r2944, %r2943};
	xor.b64  	%rd4084, %rd4082, %rd4083;
	xor.b64  	%rd4085, %rd4044, %rd4020;
	and.b64  	%rd4086, %rd4068, %rd4085;
	xor.b64  	%rd4087, %rd4086, %rd4020;
	add.s64 	%rd4088, %rd3996, %rd3752;
	add.s64 	%rd4089, %rd4088, %rd8793;
	add.s64 	%rd4090, %rd4089, %rd4087;
	add.s64 	%rd4091, %rd4090, %rd4084;
	add.s64 	%rd4092, %rd4091, %rd4007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2945,%dummy}, %rd4079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2946}, %rd4079;
	}
	shf.r.wrap.b32 	%r2947, %r2946, %r2945, 28;
	shf.r.wrap.b32 	%r2948, %r2945, %r2946, 28;
	mov.b64 	%rd4093, {%r2948, %r2947};
	shf.l.wrap.b32 	%r2949, %r2945, %r2946, 30;
	shf.l.wrap.b32 	%r2950, %r2946, %r2945, 30;
	mov.b64 	%rd4094, {%r2950, %r2949};
	xor.b64  	%rd4095, %rd4094, %rd4093;
	shf.l.wrap.b32 	%r2951, %r2945, %r2946, 25;
	shf.l.wrap.b32 	%r2952, %r2946, %r2945, 25;
	mov.b64 	%rd4096, {%r2952, %r2951};
	xor.b64  	%rd4097, %rd4095, %rd4096;
	xor.b64  	%rd4098, %rd4079, %rd4031;
	xor.b64  	%rd4099, %rd4079, %rd4055;
	and.b64  	%rd4100, %rd4099, %rd4098;
	xor.b64  	%rd4101, %rd4100, %rd4079;
	add.s64 	%rd4102, %rd4091, %rd4101;
	add.s64 	%rd4103, %rd4102, %rd4097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2953,%dummy}, %rd4092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2954}, %rd4092;
	}
	shf.r.wrap.b32 	%r2955, %r2954, %r2953, 14;
	shf.r.wrap.b32 	%r2956, %r2953, %r2954, 14;
	mov.b64 	%rd4104, {%r2956, %r2955};
	shf.r.wrap.b32 	%r2957, %r2954, %r2953, 18;
	shf.r.wrap.b32 	%r2958, %r2953, %r2954, 18;
	mov.b64 	%rd4105, {%r2958, %r2957};
	xor.b64  	%rd4106, %rd4105, %rd4104;
	shf.l.wrap.b32 	%r2959, %r2953, %r2954, 23;
	shf.l.wrap.b32 	%r2960, %r2954, %r2953, 23;
	mov.b64 	%rd4107, {%r2960, %r2959};
	xor.b64  	%rd4108, %rd4106, %rd4107;
	xor.b64  	%rd4109, %rd4068, %rd4044;
	and.b64  	%rd4110, %rd4092, %rd4109;
	xor.b64  	%rd4111, %rd4110, %rd4044;
	add.s64 	%rd4112, %rd4020, %rd3765;
	add.s64 	%rd4113, %rd4112, %rd8792;
	add.s64 	%rd4114, %rd4113, %rd4111;
	add.s64 	%rd4115, %rd4114, %rd4108;
	add.s64 	%rd4116, %rd4115, %rd4031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2961,%dummy}, %rd4103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2962}, %rd4103;
	}
	shf.r.wrap.b32 	%r2963, %r2962, %r2961, 28;
	shf.r.wrap.b32 	%r2964, %r2961, %r2962, 28;
	mov.b64 	%rd4117, {%r2964, %r2963};
	shf.l.wrap.b32 	%r2965, %r2961, %r2962, 30;
	shf.l.wrap.b32 	%r2966, %r2962, %r2961, 30;
	mov.b64 	%rd4118, {%r2966, %r2965};
	xor.b64  	%rd4119, %rd4118, %rd4117;
	shf.l.wrap.b32 	%r2967, %r2961, %r2962, 25;
	shf.l.wrap.b32 	%r2968, %r2962, %r2961, 25;
	mov.b64 	%rd4120, {%r2968, %r2967};
	xor.b64  	%rd4121, %rd4119, %rd4120;
	xor.b64  	%rd4122, %rd4103, %rd4055;
	xor.b64  	%rd4123, %rd4103, %rd4079;
	and.b64  	%rd4124, %rd4123, %rd4122;
	xor.b64  	%rd4125, %rd4124, %rd4103;
	add.s64 	%rd4126, %rd4115, %rd4125;
	add.s64 	%rd4127, %rd4126, %rd4121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2969,%dummy}, %rd4116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2970}, %rd4116;
	}
	shf.r.wrap.b32 	%r2971, %r2970, %r2969, 14;
	shf.r.wrap.b32 	%r2972, %r2969, %r2970, 14;
	mov.b64 	%rd4128, {%r2972, %r2971};
	shf.r.wrap.b32 	%r2973, %r2970, %r2969, 18;
	shf.r.wrap.b32 	%r2974, %r2969, %r2970, 18;
	mov.b64 	%rd4129, {%r2974, %r2973};
	xor.b64  	%rd4130, %rd4129, %rd4128;
	shf.l.wrap.b32 	%r2975, %r2969, %r2970, 23;
	shf.l.wrap.b32 	%r2976, %r2970, %r2969, 23;
	mov.b64 	%rd4131, {%r2976, %r2975};
	xor.b64  	%rd4132, %rd4130, %rd4131;
	xor.b64  	%rd4133, %rd4092, %rd4068;
	and.b64  	%rd4134, %rd4116, %rd4133;
	xor.b64  	%rd4135, %rd4134, %rd4068;
	add.s64 	%rd4136, %rd4044, %rd3778;
	add.s64 	%rd4137, %rd4136, %rd8791;
	add.s64 	%rd4138, %rd4137, %rd4135;
	add.s64 	%rd4139, %rd4138, %rd4132;
	add.s64 	%rd4140, %rd4139, %rd4055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2977,%dummy}, %rd4127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2978}, %rd4127;
	}
	shf.r.wrap.b32 	%r2979, %r2978, %r2977, 28;
	shf.r.wrap.b32 	%r2980, %r2977, %r2978, 28;
	mov.b64 	%rd4141, {%r2980, %r2979};
	shf.l.wrap.b32 	%r2981, %r2977, %r2978, 30;
	shf.l.wrap.b32 	%r2982, %r2978, %r2977, 30;
	mov.b64 	%rd4142, {%r2982, %r2981};
	xor.b64  	%rd4143, %rd4142, %rd4141;
	shf.l.wrap.b32 	%r2983, %r2977, %r2978, 25;
	shf.l.wrap.b32 	%r2984, %r2978, %r2977, 25;
	mov.b64 	%rd4144, {%r2984, %r2983};
	xor.b64  	%rd4145, %rd4143, %rd4144;
	xor.b64  	%rd4146, %rd4127, %rd4079;
	xor.b64  	%rd4147, %rd4127, %rd4103;
	and.b64  	%rd4148, %rd4147, %rd4146;
	xor.b64  	%rd4149, %rd4148, %rd4127;
	add.s64 	%rd4150, %rd4139, %rd4149;
	add.s64 	%rd4151, %rd4150, %rd4145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2985,%dummy}, %rd4140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2986}, %rd4140;
	}
	shf.r.wrap.b32 	%r2987, %r2986, %r2985, 14;
	shf.r.wrap.b32 	%r2988, %r2985, %r2986, 14;
	mov.b64 	%rd4152, {%r2988, %r2987};
	shf.r.wrap.b32 	%r2989, %r2986, %r2985, 18;
	shf.r.wrap.b32 	%r2990, %r2985, %r2986, 18;
	mov.b64 	%rd4153, {%r2990, %r2989};
	xor.b64  	%rd4154, %rd4153, %rd4152;
	shf.l.wrap.b32 	%r2991, %r2985, %r2986, 23;
	shf.l.wrap.b32 	%r2992, %r2986, %r2985, 23;
	mov.b64 	%rd4155, {%r2992, %r2991};
	xor.b64  	%rd4156, %rd4154, %rd4155;
	xor.b64  	%rd4157, %rd4116, %rd4092;
	and.b64  	%rd4158, %rd4140, %rd4157;
	xor.b64  	%rd4159, %rd4158, %rd4092;
	add.s64 	%rd4160, %rd4068, %rd3791;
	add.s64 	%rd4161, %rd4160, %rd8790;
	add.s64 	%rd4162, %rd4161, %rd4159;
	add.s64 	%rd4163, %rd4162, %rd4156;
	add.s64 	%rd4164, %rd4163, %rd4079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2993,%dummy}, %rd4151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2994}, %rd4151;
	}
	shf.r.wrap.b32 	%r2995, %r2994, %r2993, 28;
	shf.r.wrap.b32 	%r2996, %r2993, %r2994, 28;
	mov.b64 	%rd4165, {%r2996, %r2995};
	shf.l.wrap.b32 	%r2997, %r2993, %r2994, 30;
	shf.l.wrap.b32 	%r2998, %r2994, %r2993, 30;
	mov.b64 	%rd4166, {%r2998, %r2997};
	xor.b64  	%rd4167, %rd4166, %rd4165;
	shf.l.wrap.b32 	%r2999, %r2993, %r2994, 25;
	shf.l.wrap.b32 	%r3000, %r2994, %r2993, 25;
	mov.b64 	%rd4168, {%r3000, %r2999};
	xor.b64  	%rd4169, %rd4167, %rd4168;
	xor.b64  	%rd4170, %rd4151, %rd4103;
	xor.b64  	%rd4171, %rd4151, %rd4127;
	and.b64  	%rd4172, %rd4171, %rd4170;
	xor.b64  	%rd4173, %rd4172, %rd4151;
	add.s64 	%rd4174, %rd4163, %rd4173;
	add.s64 	%rd4175, %rd4174, %rd4169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3001,%dummy}, %rd3778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3002}, %rd3778;
	}
	shf.r.wrap.b32 	%r3003, %r3002, %r3001, 19;
	shf.r.wrap.b32 	%r3004, %r3001, %r3002, 19;
	mov.b64 	%rd4176, {%r3004, %r3003};
	shf.l.wrap.b32 	%r3005, %r3001, %r3002, 3;
	shf.l.wrap.b32 	%r3006, %r3002, %r3001, 3;
	mov.b64 	%rd4177, {%r3006, %r3005};
	shr.u64 	%rd4178, %rd3778, 6;
	xor.b64  	%rd4179, %rd4176, %rd4178;
	xor.b64  	%rd4180, %rd4179, %rd4177;
	shf.r.wrap.b32 	%r3007, %r2596, %r2595, 1;
	shf.r.wrap.b32 	%r3008, %r2595, %r2596, 1;
	mov.b64 	%rd4181, {%r3008, %r3007};
	shf.r.wrap.b32 	%r3009, %r2596, %r2595, 8;
	shf.r.wrap.b32 	%r3010, %r2595, %r2596, 8;
	mov.b64 	%rd4182, {%r3010, %r3009};
	shr.u64 	%rd4183, %rd3609, 7;
	xor.b64  	%rd4184, %rd4181, %rd4183;
	xor.b64  	%rd4185, %rd4184, %rd4182;
	add.s64 	%rd4186, %rd3713, %rd3596;
	add.s64 	%rd4187, %rd4186, %rd4180;
	add.s64 	%rd4188, %rd4187, %rd4185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3011,%dummy}, %rd3791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3012}, %rd3791;
	}
	shf.r.wrap.b32 	%r3013, %r3012, %r3011, 19;
	shf.r.wrap.b32 	%r3014, %r3011, %r3012, 19;
	mov.b64 	%rd4189, {%r3014, %r3013};
	shf.l.wrap.b32 	%r3015, %r3011, %r3012, 3;
	shf.l.wrap.b32 	%r3016, %r3012, %r3011, 3;
	mov.b64 	%rd4190, {%r3016, %r3015};
	shr.u64 	%rd4191, %rd3791, 6;
	xor.b64  	%rd4192, %rd4189, %rd4191;
	xor.b64  	%rd4193, %rd4192, %rd4190;
	shf.r.wrap.b32 	%r3017, %r2608, %r2607, 1;
	shf.r.wrap.b32 	%r3018, %r2607, %r2608, 1;
	mov.b64 	%rd4194, {%r3018, %r3017};
	shf.r.wrap.b32 	%r3019, %r2608, %r2607, 8;
	shf.r.wrap.b32 	%r3020, %r2607, %r2608, 8;
	mov.b64 	%rd4195, {%r3020, %r3019};
	shr.u64 	%rd4196, %rd3622, 7;
	xor.b64  	%rd4197, %rd4194, %rd4196;
	xor.b64  	%rd4198, %rd4197, %rd4195;
	add.s64 	%rd4199, %rd3726, %rd3609;
	add.s64 	%rd4200, %rd4199, %rd4193;
	add.s64 	%rd4201, %rd4200, %rd4198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3021,%dummy}, %rd4188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3022}, %rd4188;
	}
	shf.r.wrap.b32 	%r3023, %r3022, %r3021, 19;
	shf.r.wrap.b32 	%r3024, %r3021, %r3022, 19;
	mov.b64 	%rd4202, {%r3024, %r3023};
	shf.l.wrap.b32 	%r3025, %r3021, %r3022, 3;
	shf.l.wrap.b32 	%r3026, %r3022, %r3021, 3;
	mov.b64 	%rd4203, {%r3026, %r3025};
	shr.u64 	%rd4204, %rd4188, 6;
	xor.b64  	%rd4205, %rd4202, %rd4204;
	xor.b64  	%rd4206, %rd4205, %rd4203;
	shf.r.wrap.b32 	%r3027, %r2620, %r2619, 1;
	shf.r.wrap.b32 	%r3028, %r2619, %r2620, 1;
	mov.b64 	%rd4207, {%r3028, %r3027};
	shf.r.wrap.b32 	%r3029, %r2620, %r2619, 8;
	shf.r.wrap.b32 	%r3030, %r2619, %r2620, 8;
	mov.b64 	%rd4208, {%r3030, %r3029};
	shr.u64 	%rd4209, %rd3635, 7;
	xor.b64  	%rd4210, %rd4207, %rd4209;
	xor.b64  	%rd4211, %rd4210, %rd4208;
	add.s64 	%rd4212, %rd3739, %rd3622;
	add.s64 	%rd4213, %rd4212, %rd4206;
	add.s64 	%rd4214, %rd4213, %rd4211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3031,%dummy}, %rd4201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3032}, %rd4201;
	}
	shf.r.wrap.b32 	%r3033, %r3032, %r3031, 19;
	shf.r.wrap.b32 	%r3034, %r3031, %r3032, 19;
	mov.b64 	%rd4215, {%r3034, %r3033};
	shf.l.wrap.b32 	%r3035, %r3031, %r3032, 3;
	shf.l.wrap.b32 	%r3036, %r3032, %r3031, 3;
	mov.b64 	%rd4216, {%r3036, %r3035};
	shr.u64 	%rd4217, %rd4201, 6;
	xor.b64  	%rd4218, %rd4215, %rd4217;
	xor.b64  	%rd4219, %rd4218, %rd4216;
	shf.r.wrap.b32 	%r3037, %r2632, %r2631, 1;
	shf.r.wrap.b32 	%r3038, %r2631, %r2632, 1;
	mov.b64 	%rd4220, {%r3038, %r3037};
	shf.r.wrap.b32 	%r3039, %r2632, %r2631, 8;
	shf.r.wrap.b32 	%r3040, %r2631, %r2632, 8;
	mov.b64 	%rd4221, {%r3040, %r3039};
	shr.u64 	%rd4222, %rd3648, 7;
	xor.b64  	%rd4223, %rd4220, %rd4222;
	xor.b64  	%rd4224, %rd4223, %rd4221;
	add.s64 	%rd4225, %rd3752, %rd3635;
	add.s64 	%rd4226, %rd4225, %rd4219;
	add.s64 	%rd4227, %rd4226, %rd4224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3041,%dummy}, %rd4214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3042}, %rd4214;
	}
	shf.r.wrap.b32 	%r3043, %r3042, %r3041, 19;
	shf.r.wrap.b32 	%r3044, %r3041, %r3042, 19;
	mov.b64 	%rd4228, {%r3044, %r3043};
	shf.l.wrap.b32 	%r3045, %r3041, %r3042, 3;
	shf.l.wrap.b32 	%r3046, %r3042, %r3041, 3;
	mov.b64 	%rd4229, {%r3046, %r3045};
	shr.u64 	%rd4230, %rd4214, 6;
	xor.b64  	%rd4231, %rd4228, %rd4230;
	xor.b64  	%rd4232, %rd4231, %rd4229;
	shf.r.wrap.b32 	%r3047, %r2644, %r2643, 1;
	shf.r.wrap.b32 	%r3048, %r2643, %r2644, 1;
	mov.b64 	%rd4233, {%r3048, %r3047};
	shf.r.wrap.b32 	%r3049, %r2644, %r2643, 8;
	shf.r.wrap.b32 	%r3050, %r2643, %r2644, 8;
	mov.b64 	%rd4234, {%r3050, %r3049};
	shr.u64 	%rd4235, %rd3661, 7;
	xor.b64  	%rd4236, %rd4233, %rd4235;
	xor.b64  	%rd4237, %rd4236, %rd4234;
	add.s64 	%rd4238, %rd3765, %rd3648;
	add.s64 	%rd4239, %rd4238, %rd4232;
	add.s64 	%rd4240, %rd4239, %rd4237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3051,%dummy}, %rd4227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3052}, %rd4227;
	}
	shf.r.wrap.b32 	%r3053, %r3052, %r3051, 19;
	shf.r.wrap.b32 	%r3054, %r3051, %r3052, 19;
	mov.b64 	%rd4241, {%r3054, %r3053};
	shf.l.wrap.b32 	%r3055, %r3051, %r3052, 3;
	shf.l.wrap.b32 	%r3056, %r3052, %r3051, 3;
	mov.b64 	%rd4242, {%r3056, %r3055};
	shr.u64 	%rd4243, %rd4227, 6;
	xor.b64  	%rd4244, %rd4241, %rd4243;
	xor.b64  	%rd4245, %rd4244, %rd4242;
	shf.r.wrap.b32 	%r3057, %r2656, %r2655, 1;
	shf.r.wrap.b32 	%r3058, %r2655, %r2656, 1;
	mov.b64 	%rd4246, {%r3058, %r3057};
	shf.r.wrap.b32 	%r3059, %r2656, %r2655, 8;
	shf.r.wrap.b32 	%r3060, %r2655, %r2656, 8;
	mov.b64 	%rd4247, {%r3060, %r3059};
	shr.u64 	%rd4248, %rd3674, 7;
	xor.b64  	%rd4249, %rd4246, %rd4248;
	xor.b64  	%rd4250, %rd4249, %rd4247;
	add.s64 	%rd4251, %rd3778, %rd3661;
	add.s64 	%rd4252, %rd4251, %rd4245;
	add.s64 	%rd4253, %rd4252, %rd4250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3061,%dummy}, %rd4240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3062}, %rd4240;
	}
	shf.r.wrap.b32 	%r3063, %r3062, %r3061, 19;
	shf.r.wrap.b32 	%r3064, %r3061, %r3062, 19;
	mov.b64 	%rd4254, {%r3064, %r3063};
	shf.l.wrap.b32 	%r3065, %r3061, %r3062, 3;
	shf.l.wrap.b32 	%r3066, %r3062, %r3061, 3;
	mov.b64 	%rd4255, {%r3066, %r3065};
	shr.u64 	%rd4256, %rd4240, 6;
	xor.b64  	%rd4257, %rd4254, %rd4256;
	xor.b64  	%rd4258, %rd4257, %rd4255;
	shf.r.wrap.b32 	%r3067, %r2668, %r2667, 1;
	shf.r.wrap.b32 	%r3068, %r2667, %r2668, 1;
	mov.b64 	%rd4259, {%r3068, %r3067};
	shf.r.wrap.b32 	%r3069, %r2668, %r2667, 8;
	shf.r.wrap.b32 	%r3070, %r2667, %r2668, 8;
	mov.b64 	%rd4260, {%r3070, %r3069};
	shr.u64 	%rd4261, %rd3687, 7;
	xor.b64  	%rd4262, %rd4259, %rd4261;
	xor.b64  	%rd4263, %rd4262, %rd4260;
	add.s64 	%rd4264, %rd3791, %rd3674;
	add.s64 	%rd4265, %rd4264, %rd4258;
	add.s64 	%rd4266, %rd4265, %rd4263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3071,%dummy}, %rd4253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3072}, %rd4253;
	}
	shf.r.wrap.b32 	%r3073, %r3072, %r3071, 19;
	shf.r.wrap.b32 	%r3074, %r3071, %r3072, 19;
	mov.b64 	%rd4267, {%r3074, %r3073};
	shf.l.wrap.b32 	%r3075, %r3071, %r3072, 3;
	shf.l.wrap.b32 	%r3076, %r3072, %r3071, 3;
	mov.b64 	%rd4268, {%r3076, %r3075};
	shr.u64 	%rd4269, %rd4253, 6;
	xor.b64  	%rd4270, %rd4267, %rd4269;
	xor.b64  	%rd4271, %rd4270, %rd4268;
	shf.r.wrap.b32 	%r3077, %r2680, %r2679, 1;
	shf.r.wrap.b32 	%r3078, %r2679, %r2680, 1;
	mov.b64 	%rd4272, {%r3078, %r3077};
	shf.r.wrap.b32 	%r3079, %r2680, %r2679, 8;
	shf.r.wrap.b32 	%r3080, %r2679, %r2680, 8;
	mov.b64 	%rd4273, {%r3080, %r3079};
	shr.u64 	%rd4274, %rd3700, 7;
	xor.b64  	%rd4275, %rd4272, %rd4274;
	xor.b64  	%rd4276, %rd4275, %rd4273;
	add.s64 	%rd4277, %rd4188, %rd3687;
	add.s64 	%rd4278, %rd4277, %rd4271;
	add.s64 	%rd4279, %rd4278, %rd4276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3081,%dummy}, %rd4266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3082}, %rd4266;
	}
	shf.r.wrap.b32 	%r3083, %r3082, %r3081, 19;
	shf.r.wrap.b32 	%r3084, %r3081, %r3082, 19;
	mov.b64 	%rd4280, {%r3084, %r3083};
	shf.l.wrap.b32 	%r3085, %r3081, %r3082, 3;
	shf.l.wrap.b32 	%r3086, %r3082, %r3081, 3;
	mov.b64 	%rd4281, {%r3086, %r3085};
	shr.u64 	%rd4282, %rd4266, 6;
	xor.b64  	%rd4283, %rd4280, %rd4282;
	xor.b64  	%rd4284, %rd4283, %rd4281;
	shf.r.wrap.b32 	%r3087, %r2692, %r2691, 1;
	shf.r.wrap.b32 	%r3088, %r2691, %r2692, 1;
	mov.b64 	%rd4285, {%r3088, %r3087};
	shf.r.wrap.b32 	%r3089, %r2692, %r2691, 8;
	shf.r.wrap.b32 	%r3090, %r2691, %r2692, 8;
	mov.b64 	%rd4286, {%r3090, %r3089};
	shr.u64 	%rd4287, %rd3713, 7;
	xor.b64  	%rd4288, %rd4285, %rd4287;
	xor.b64  	%rd4289, %rd4288, %rd4286;
	add.s64 	%rd4290, %rd4201, %rd3700;
	add.s64 	%rd4291, %rd4290, %rd4284;
	add.s64 	%rd4292, %rd4291, %rd4289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3091,%dummy}, %rd4279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3092}, %rd4279;
	}
	shf.r.wrap.b32 	%r3093, %r3092, %r3091, 19;
	shf.r.wrap.b32 	%r3094, %r3091, %r3092, 19;
	mov.b64 	%rd4293, {%r3094, %r3093};
	shf.l.wrap.b32 	%r3095, %r3091, %r3092, 3;
	shf.l.wrap.b32 	%r3096, %r3092, %r3091, 3;
	mov.b64 	%rd4294, {%r3096, %r3095};
	shr.u64 	%rd4295, %rd4279, 6;
	xor.b64  	%rd4296, %rd4293, %rd4295;
	xor.b64  	%rd4297, %rd4296, %rd4294;
	shf.r.wrap.b32 	%r3097, %r2704, %r2703, 1;
	shf.r.wrap.b32 	%r3098, %r2703, %r2704, 1;
	mov.b64 	%rd4298, {%r3098, %r3097};
	shf.r.wrap.b32 	%r3099, %r2704, %r2703, 8;
	shf.r.wrap.b32 	%r3100, %r2703, %r2704, 8;
	mov.b64 	%rd4299, {%r3100, %r3099};
	shr.u64 	%rd4300, %rd3726, 7;
	xor.b64  	%rd4301, %rd4298, %rd4300;
	xor.b64  	%rd4302, %rd4301, %rd4299;
	add.s64 	%rd4303, %rd4214, %rd3713;
	add.s64 	%rd4304, %rd4303, %rd4297;
	add.s64 	%rd4305, %rd4304, %rd4302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3101,%dummy}, %rd4292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3102}, %rd4292;
	}
	shf.r.wrap.b32 	%r3103, %r3102, %r3101, 19;
	shf.r.wrap.b32 	%r3104, %r3101, %r3102, 19;
	mov.b64 	%rd4306, {%r3104, %r3103};
	shf.l.wrap.b32 	%r3105, %r3101, %r3102, 3;
	shf.l.wrap.b32 	%r3106, %r3102, %r3101, 3;
	mov.b64 	%rd4307, {%r3106, %r3105};
	shr.u64 	%rd4308, %rd4292, 6;
	xor.b64  	%rd4309, %rd4306, %rd4308;
	xor.b64  	%rd4310, %rd4309, %rd4307;
	shf.r.wrap.b32 	%r3107, %r2716, %r2715, 1;
	shf.r.wrap.b32 	%r3108, %r2715, %r2716, 1;
	mov.b64 	%rd4311, {%r3108, %r3107};
	shf.r.wrap.b32 	%r3109, %r2716, %r2715, 8;
	shf.r.wrap.b32 	%r3110, %r2715, %r2716, 8;
	mov.b64 	%rd4312, {%r3110, %r3109};
	shr.u64 	%rd4313, %rd3739, 7;
	xor.b64  	%rd4314, %rd4311, %rd4313;
	xor.b64  	%rd4315, %rd4314, %rd4312;
	add.s64 	%rd4316, %rd4227, %rd3726;
	add.s64 	%rd4317, %rd4316, %rd4310;
	add.s64 	%rd4318, %rd4317, %rd4315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3111,%dummy}, %rd4305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3112}, %rd4305;
	}
	shf.r.wrap.b32 	%r3113, %r3112, %r3111, 19;
	shf.r.wrap.b32 	%r3114, %r3111, %r3112, 19;
	mov.b64 	%rd4319, {%r3114, %r3113};
	shf.l.wrap.b32 	%r3115, %r3111, %r3112, 3;
	shf.l.wrap.b32 	%r3116, %r3112, %r3111, 3;
	mov.b64 	%rd4320, {%r3116, %r3115};
	shr.u64 	%rd4321, %rd4305, 6;
	xor.b64  	%rd4322, %rd4319, %rd4321;
	xor.b64  	%rd4323, %rd4322, %rd4320;
	shf.r.wrap.b32 	%r3117, %r2726, %r2725, 1;
	shf.r.wrap.b32 	%r3118, %r2725, %r2726, 1;
	mov.b64 	%rd4324, {%r3118, %r3117};
	shf.r.wrap.b32 	%r3119, %r2726, %r2725, 8;
	shf.r.wrap.b32 	%r3120, %r2725, %r2726, 8;
	mov.b64 	%rd4325, {%r3120, %r3119};
	shr.u64 	%rd4326, %rd3752, 7;
	xor.b64  	%rd4327, %rd4324, %rd4326;
	xor.b64  	%rd4328, %rd4327, %rd4325;
	add.s64 	%rd4329, %rd4240, %rd3739;
	add.s64 	%rd4330, %rd4329, %rd4323;
	add.s64 	%rd4331, %rd4330, %rd4328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3121,%dummy}, %rd4318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3122}, %rd4318;
	}
	shf.r.wrap.b32 	%r3123, %r3122, %r3121, 19;
	shf.r.wrap.b32 	%r3124, %r3121, %r3122, 19;
	mov.b64 	%rd4332, {%r3124, %r3123};
	shf.l.wrap.b32 	%r3125, %r3121, %r3122, 3;
	shf.l.wrap.b32 	%r3126, %r3122, %r3121, 3;
	mov.b64 	%rd4333, {%r3126, %r3125};
	shr.u64 	%rd4334, %rd4318, 6;
	xor.b64  	%rd4335, %rd4332, %rd4334;
	xor.b64  	%rd4336, %rd4335, %rd4333;
	shf.r.wrap.b32 	%r3127, %r2736, %r2735, 1;
	shf.r.wrap.b32 	%r3128, %r2735, %r2736, 1;
	mov.b64 	%rd4337, {%r3128, %r3127};
	shf.r.wrap.b32 	%r3129, %r2736, %r2735, 8;
	shf.r.wrap.b32 	%r3130, %r2735, %r2736, 8;
	mov.b64 	%rd4338, {%r3130, %r3129};
	shr.u64 	%rd4339, %rd3765, 7;
	xor.b64  	%rd4340, %rd4337, %rd4339;
	xor.b64  	%rd4341, %rd4340, %rd4338;
	add.s64 	%rd4342, %rd4253, %rd3752;
	add.s64 	%rd4343, %rd4342, %rd4336;
	add.s64 	%rd4344, %rd4343, %rd4341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3131,%dummy}, %rd4331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3132}, %rd4331;
	}
	shf.r.wrap.b32 	%r3133, %r3132, %r3131, 19;
	shf.r.wrap.b32 	%r3134, %r3131, %r3132, 19;
	mov.b64 	%rd4345, {%r3134, %r3133};
	shf.l.wrap.b32 	%r3135, %r3131, %r3132, 3;
	shf.l.wrap.b32 	%r3136, %r3132, %r3131, 3;
	mov.b64 	%rd4346, {%r3136, %r3135};
	shr.u64 	%rd4347, %rd4331, 6;
	xor.b64  	%rd4348, %rd4345, %rd4347;
	xor.b64  	%rd4349, %rd4348, %rd4346;
	shf.r.wrap.b32 	%r3137, %r3002, %r3001, 1;
	shf.r.wrap.b32 	%r3138, %r3001, %r3002, 1;
	mov.b64 	%rd4350, {%r3138, %r3137};
	shf.r.wrap.b32 	%r3139, %r3002, %r3001, 8;
	shf.r.wrap.b32 	%r3140, %r3001, %r3002, 8;
	mov.b64 	%rd4351, {%r3140, %r3139};
	shr.u64 	%rd4352, %rd3778, 7;
	xor.b64  	%rd4353, %rd4350, %rd4352;
	xor.b64  	%rd4354, %rd4353, %rd4351;
	add.s64 	%rd4355, %rd4266, %rd3765;
	add.s64 	%rd4356, %rd4355, %rd4349;
	add.s64 	%rd4357, %rd4356, %rd4354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3141,%dummy}, %rd4344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3142}, %rd4344;
	}
	shf.r.wrap.b32 	%r3143, %r3142, %r3141, 19;
	shf.r.wrap.b32 	%r3144, %r3141, %r3142, 19;
	mov.b64 	%rd4358, {%r3144, %r3143};
	shf.l.wrap.b32 	%r3145, %r3141, %r3142, 3;
	shf.l.wrap.b32 	%r3146, %r3142, %r3141, 3;
	mov.b64 	%rd4359, {%r3146, %r3145};
	shr.u64 	%rd4360, %rd4344, 6;
	xor.b64  	%rd4361, %rd4358, %rd4360;
	xor.b64  	%rd4362, %rd4361, %rd4359;
	shf.r.wrap.b32 	%r3147, %r3012, %r3011, 1;
	shf.r.wrap.b32 	%r3148, %r3011, %r3012, 1;
	mov.b64 	%rd4363, {%r3148, %r3147};
	shf.r.wrap.b32 	%r3149, %r3012, %r3011, 8;
	shf.r.wrap.b32 	%r3150, %r3011, %r3012, 8;
	mov.b64 	%rd4364, {%r3150, %r3149};
	shr.u64 	%rd4365, %rd3791, 7;
	xor.b64  	%rd4366, %rd4363, %rd4365;
	xor.b64  	%rd4367, %rd4366, %rd4364;
	add.s64 	%rd4368, %rd4279, %rd3778;
	add.s64 	%rd4369, %rd4368, %rd4362;
	add.s64 	%rd4370, %rd4369, %rd4367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3151,%dummy}, %rd4357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3152}, %rd4357;
	}
	shf.r.wrap.b32 	%r3153, %r3152, %r3151, 19;
	shf.r.wrap.b32 	%r3154, %r3151, %r3152, 19;
	mov.b64 	%rd4371, {%r3154, %r3153};
	shf.l.wrap.b32 	%r3155, %r3151, %r3152, 3;
	shf.l.wrap.b32 	%r3156, %r3152, %r3151, 3;
	mov.b64 	%rd4372, {%r3156, %r3155};
	shr.u64 	%rd4373, %rd4357, 6;
	xor.b64  	%rd4374, %rd4371, %rd4373;
	xor.b64  	%rd4375, %rd4374, %rd4372;
	shf.r.wrap.b32 	%r3157, %r3022, %r3021, 1;
	shf.r.wrap.b32 	%r3158, %r3021, %r3022, 1;
	mov.b64 	%rd4376, {%r3158, %r3157};
	shf.r.wrap.b32 	%r3159, %r3022, %r3021, 8;
	shf.r.wrap.b32 	%r3160, %r3021, %r3022, 8;
	mov.b64 	%rd4377, {%r3160, %r3159};
	shr.u64 	%rd4378, %rd4188, 7;
	xor.b64  	%rd4379, %rd4376, %rd4378;
	xor.b64  	%rd4380, %rd4379, %rd4377;
	add.s64 	%rd4381, %rd4292, %rd3791;
	add.s64 	%rd4382, %rd4381, %rd4375;
	add.s64 	%rd4383, %rd4382, %rd4380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3161,%dummy}, %rd4164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3162}, %rd4164;
	}
	shf.r.wrap.b32 	%r3163, %r3162, %r3161, 14;
	shf.r.wrap.b32 	%r3164, %r3161, %r3162, 14;
	mov.b64 	%rd4384, {%r3164, %r3163};
	shf.r.wrap.b32 	%r3165, %r3162, %r3161, 18;
	shf.r.wrap.b32 	%r3166, %r3161, %r3162, 18;
	mov.b64 	%rd4385, {%r3166, %r3165};
	xor.b64  	%rd4386, %rd4385, %rd4384;
	shf.l.wrap.b32 	%r3167, %r3161, %r3162, 23;
	shf.l.wrap.b32 	%r3168, %r3162, %r3161, 23;
	mov.b64 	%rd4387, {%r3168, %r3167};
	xor.b64  	%rd4388, %rd4386, %rd4387;
	xor.b64  	%rd4389, %rd4140, %rd4116;
	and.b64  	%rd4390, %rd4389, %rd4164;
	xor.b64  	%rd4391, %rd4390, %rd4116;
	add.s64 	%rd4392, %rd4391, %rd4092;
	add.s64 	%rd4393, %rd4392, %rd4188;
	add.s64 	%rd4394, %rd4393, %rd8789;
	add.s64 	%rd4395, %rd4394, %rd4388;
	add.s64 	%rd4396, %rd4395, %rd4103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3169,%dummy}, %rd4175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3170}, %rd4175;
	}
	shf.r.wrap.b32 	%r3171, %r3170, %r3169, 28;
	shf.r.wrap.b32 	%r3172, %r3169, %r3170, 28;
	mov.b64 	%rd4397, {%r3172, %r3171};
	shf.l.wrap.b32 	%r3173, %r3169, %r3170, 30;
	shf.l.wrap.b32 	%r3174, %r3170, %r3169, 30;
	mov.b64 	%rd4398, {%r3174, %r3173};
	xor.b64  	%rd4399, %rd4398, %rd4397;
	shf.l.wrap.b32 	%r3175, %r3169, %r3170, 25;
	shf.l.wrap.b32 	%r3176, %r3170, %r3169, 25;
	mov.b64 	%rd4400, {%r3176, %r3175};
	xor.b64  	%rd4401, %rd4399, %rd4400;
	xor.b64  	%rd4402, %rd4175, %rd4127;
	xor.b64  	%rd4403, %rd4175, %rd4151;
	and.b64  	%rd4404, %rd4403, %rd4402;
	xor.b64  	%rd4405, %rd4404, %rd4175;
	add.s64 	%rd4406, %rd4395, %rd4405;
	add.s64 	%rd4407, %rd4406, %rd4401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3177,%dummy}, %rd4396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3178}, %rd4396;
	}
	shf.r.wrap.b32 	%r3179, %r3178, %r3177, 14;
	shf.r.wrap.b32 	%r3180, %r3177, %r3178, 14;
	mov.b64 	%rd4408, {%r3180, %r3179};
	shf.r.wrap.b32 	%r3181, %r3178, %r3177, 18;
	shf.r.wrap.b32 	%r3182, %r3177, %r3178, 18;
	mov.b64 	%rd4409, {%r3182, %r3181};
	xor.b64  	%rd4410, %rd4409, %rd4408;
	shf.l.wrap.b32 	%r3183, %r3177, %r3178, 23;
	shf.l.wrap.b32 	%r3184, %r3178, %r3177, 23;
	mov.b64 	%rd4411, {%r3184, %r3183};
	xor.b64  	%rd4412, %rd4410, %rd4411;
	xor.b64  	%rd4413, %rd4164, %rd4140;
	and.b64  	%rd4414, %rd4396, %rd4413;
	xor.b64  	%rd4415, %rd4414, %rd4140;
	add.s64 	%rd4416, %rd4201, %rd4116;
	add.s64 	%rd4417, %rd4416, %rd8788;
	add.s64 	%rd4418, %rd4417, %rd4415;
	add.s64 	%rd4419, %rd4418, %rd4412;
	add.s64 	%rd4420, %rd4419, %rd4127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3185,%dummy}, %rd4407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3186}, %rd4407;
	}
	shf.r.wrap.b32 	%r3187, %r3186, %r3185, 28;
	shf.r.wrap.b32 	%r3188, %r3185, %r3186, 28;
	mov.b64 	%rd4421, {%r3188, %r3187};
	shf.l.wrap.b32 	%r3189, %r3185, %r3186, 30;
	shf.l.wrap.b32 	%r3190, %r3186, %r3185, 30;
	mov.b64 	%rd4422, {%r3190, %r3189};
	xor.b64  	%rd4423, %rd4422, %rd4421;
	shf.l.wrap.b32 	%r3191, %r3185, %r3186, 25;
	shf.l.wrap.b32 	%r3192, %r3186, %r3185, 25;
	mov.b64 	%rd4424, {%r3192, %r3191};
	xor.b64  	%rd4425, %rd4423, %rd4424;
	xor.b64  	%rd4426, %rd4407, %rd4151;
	xor.b64  	%rd4427, %rd4407, %rd4175;
	and.b64  	%rd4428, %rd4427, %rd4426;
	xor.b64  	%rd4429, %rd4428, %rd4407;
	add.s64 	%rd4430, %rd4419, %rd4429;
	add.s64 	%rd4431, %rd4430, %rd4425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3193,%dummy}, %rd4420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3194}, %rd4420;
	}
	shf.r.wrap.b32 	%r3195, %r3194, %r3193, 14;
	shf.r.wrap.b32 	%r3196, %r3193, %r3194, 14;
	mov.b64 	%rd4432, {%r3196, %r3195};
	shf.r.wrap.b32 	%r3197, %r3194, %r3193, 18;
	shf.r.wrap.b32 	%r3198, %r3193, %r3194, 18;
	mov.b64 	%rd4433, {%r3198, %r3197};
	xor.b64  	%rd4434, %rd4433, %rd4432;
	shf.l.wrap.b32 	%r3199, %r3193, %r3194, 23;
	shf.l.wrap.b32 	%r3200, %r3194, %r3193, 23;
	mov.b64 	%rd4435, {%r3200, %r3199};
	xor.b64  	%rd4436, %rd4434, %rd4435;
	xor.b64  	%rd4437, %rd4396, %rd4164;
	and.b64  	%rd4438, %rd4420, %rd4437;
	xor.b64  	%rd4439, %rd4438, %rd4164;
	add.s64 	%rd4440, %rd4214, %rd4140;
	add.s64 	%rd4441, %rd4440, %rd8787;
	add.s64 	%rd4442, %rd4441, %rd4439;
	add.s64 	%rd4443, %rd4442, %rd4436;
	add.s64 	%rd4444, %rd4443, %rd4151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3201,%dummy}, %rd4431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3202}, %rd4431;
	}
	shf.r.wrap.b32 	%r3203, %r3202, %r3201, 28;
	shf.r.wrap.b32 	%r3204, %r3201, %r3202, 28;
	mov.b64 	%rd4445, {%r3204, %r3203};
	shf.l.wrap.b32 	%r3205, %r3201, %r3202, 30;
	shf.l.wrap.b32 	%r3206, %r3202, %r3201, 30;
	mov.b64 	%rd4446, {%r3206, %r3205};
	xor.b64  	%rd4447, %rd4446, %rd4445;
	shf.l.wrap.b32 	%r3207, %r3201, %r3202, 25;
	shf.l.wrap.b32 	%r3208, %r3202, %r3201, 25;
	mov.b64 	%rd4448, {%r3208, %r3207};
	xor.b64  	%rd4449, %rd4447, %rd4448;
	xor.b64  	%rd4450, %rd4431, %rd4175;
	xor.b64  	%rd4451, %rd4431, %rd4407;
	and.b64  	%rd4452, %rd4451, %rd4450;
	xor.b64  	%rd4453, %rd4452, %rd4431;
	add.s64 	%rd4454, %rd4443, %rd4453;
	add.s64 	%rd4455, %rd4454, %rd4449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3209,%dummy}, %rd4444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3210}, %rd4444;
	}
	shf.r.wrap.b32 	%r3211, %r3210, %r3209, 14;
	shf.r.wrap.b32 	%r3212, %r3209, %r3210, 14;
	mov.b64 	%rd4456, {%r3212, %r3211};
	shf.r.wrap.b32 	%r3213, %r3210, %r3209, 18;
	shf.r.wrap.b32 	%r3214, %r3209, %r3210, 18;
	mov.b64 	%rd4457, {%r3214, %r3213};
	xor.b64  	%rd4458, %rd4457, %rd4456;
	shf.l.wrap.b32 	%r3215, %r3209, %r3210, 23;
	shf.l.wrap.b32 	%r3216, %r3210, %r3209, 23;
	mov.b64 	%rd4459, {%r3216, %r3215};
	xor.b64  	%rd4460, %rd4458, %rd4459;
	xor.b64  	%rd4461, %rd4420, %rd4396;
	and.b64  	%rd4462, %rd4444, %rd4461;
	xor.b64  	%rd4463, %rd4462, %rd4396;
	add.s64 	%rd4464, %rd4227, %rd4164;
	add.s64 	%rd4465, %rd4464, %rd8786;
	add.s64 	%rd4466, %rd4465, %rd4463;
	add.s64 	%rd4467, %rd4466, %rd4460;
	add.s64 	%rd4468, %rd4467, %rd4175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3217,%dummy}, %rd4455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3218}, %rd4455;
	}
	shf.r.wrap.b32 	%r3219, %r3218, %r3217, 28;
	shf.r.wrap.b32 	%r3220, %r3217, %r3218, 28;
	mov.b64 	%rd4469, {%r3220, %r3219};
	shf.l.wrap.b32 	%r3221, %r3217, %r3218, 30;
	shf.l.wrap.b32 	%r3222, %r3218, %r3217, 30;
	mov.b64 	%rd4470, {%r3222, %r3221};
	xor.b64  	%rd4471, %rd4470, %rd4469;
	shf.l.wrap.b32 	%r3223, %r3217, %r3218, 25;
	shf.l.wrap.b32 	%r3224, %r3218, %r3217, 25;
	mov.b64 	%rd4472, {%r3224, %r3223};
	xor.b64  	%rd4473, %rd4471, %rd4472;
	xor.b64  	%rd4474, %rd4455, %rd4407;
	xor.b64  	%rd4475, %rd4455, %rd4431;
	and.b64  	%rd4476, %rd4475, %rd4474;
	xor.b64  	%rd4477, %rd4476, %rd4455;
	add.s64 	%rd4478, %rd4467, %rd4477;
	add.s64 	%rd4479, %rd4478, %rd4473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3225,%dummy}, %rd4468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3226}, %rd4468;
	}
	shf.r.wrap.b32 	%r3227, %r3226, %r3225, 14;
	shf.r.wrap.b32 	%r3228, %r3225, %r3226, 14;
	mov.b64 	%rd4480, {%r3228, %r3227};
	shf.r.wrap.b32 	%r3229, %r3226, %r3225, 18;
	shf.r.wrap.b32 	%r3230, %r3225, %r3226, 18;
	mov.b64 	%rd4481, {%r3230, %r3229};
	xor.b64  	%rd4482, %rd4481, %rd4480;
	shf.l.wrap.b32 	%r3231, %r3225, %r3226, 23;
	shf.l.wrap.b32 	%r3232, %r3226, %r3225, 23;
	mov.b64 	%rd4483, {%r3232, %r3231};
	xor.b64  	%rd4484, %rd4482, %rd4483;
	xor.b64  	%rd4485, %rd4444, %rd4420;
	and.b64  	%rd4486, %rd4468, %rd4485;
	xor.b64  	%rd4487, %rd4486, %rd4420;
	add.s64 	%rd4488, %rd4396, %rd4240;
	add.s64 	%rd4489, %rd4488, %rd8785;
	add.s64 	%rd4490, %rd4489, %rd4487;
	add.s64 	%rd4491, %rd4490, %rd4484;
	add.s64 	%rd4492, %rd4491, %rd4407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3233,%dummy}, %rd4479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3234}, %rd4479;
	}
	shf.r.wrap.b32 	%r3235, %r3234, %r3233, 28;
	shf.r.wrap.b32 	%r3236, %r3233, %r3234, 28;
	mov.b64 	%rd4493, {%r3236, %r3235};
	shf.l.wrap.b32 	%r3237, %r3233, %r3234, 30;
	shf.l.wrap.b32 	%r3238, %r3234, %r3233, 30;
	mov.b64 	%rd4494, {%r3238, %r3237};
	xor.b64  	%rd4495, %rd4494, %rd4493;
	shf.l.wrap.b32 	%r3239, %r3233, %r3234, 25;
	shf.l.wrap.b32 	%r3240, %r3234, %r3233, 25;
	mov.b64 	%rd4496, {%r3240, %r3239};
	xor.b64  	%rd4497, %rd4495, %rd4496;
	xor.b64  	%rd4498, %rd4479, %rd4431;
	xor.b64  	%rd4499, %rd4479, %rd4455;
	and.b64  	%rd4500, %rd4499, %rd4498;
	xor.b64  	%rd4501, %rd4500, %rd4479;
	add.s64 	%rd4502, %rd4491, %rd4501;
	add.s64 	%rd4503, %rd4502, %rd4497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3241,%dummy}, %rd4492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3242}, %rd4492;
	}
	shf.r.wrap.b32 	%r3243, %r3242, %r3241, 14;
	shf.r.wrap.b32 	%r3244, %r3241, %r3242, 14;
	mov.b64 	%rd4504, {%r3244, %r3243};
	shf.r.wrap.b32 	%r3245, %r3242, %r3241, 18;
	shf.r.wrap.b32 	%r3246, %r3241, %r3242, 18;
	mov.b64 	%rd4505, {%r3246, %r3245};
	xor.b64  	%rd4506, %rd4505, %rd4504;
	shf.l.wrap.b32 	%r3247, %r3241, %r3242, 23;
	shf.l.wrap.b32 	%r3248, %r3242, %r3241, 23;
	mov.b64 	%rd4507, {%r3248, %r3247};
	xor.b64  	%rd4508, %rd4506, %rd4507;
	xor.b64  	%rd4509, %rd4468, %rd4444;
	and.b64  	%rd4510, %rd4492, %rd4509;
	xor.b64  	%rd4511, %rd4510, %rd4444;
	add.s64 	%rd4512, %rd4420, %rd4253;
	add.s64 	%rd4513, %rd4512, %rd8784;
	add.s64 	%rd4514, %rd4513, %rd4511;
	add.s64 	%rd4515, %rd4514, %rd4508;
	add.s64 	%rd4516, %rd4515, %rd4431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3249,%dummy}, %rd4503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3250}, %rd4503;
	}
	shf.r.wrap.b32 	%r3251, %r3250, %r3249, 28;
	shf.r.wrap.b32 	%r3252, %r3249, %r3250, 28;
	mov.b64 	%rd4517, {%r3252, %r3251};
	shf.l.wrap.b32 	%r3253, %r3249, %r3250, 30;
	shf.l.wrap.b32 	%r3254, %r3250, %r3249, 30;
	mov.b64 	%rd4518, {%r3254, %r3253};
	xor.b64  	%rd4519, %rd4518, %rd4517;
	shf.l.wrap.b32 	%r3255, %r3249, %r3250, 25;
	shf.l.wrap.b32 	%r3256, %r3250, %r3249, 25;
	mov.b64 	%rd4520, {%r3256, %r3255};
	xor.b64  	%rd4521, %rd4519, %rd4520;
	xor.b64  	%rd4522, %rd4503, %rd4455;
	xor.b64  	%rd4523, %rd4503, %rd4479;
	and.b64  	%rd4524, %rd4523, %rd4522;
	xor.b64  	%rd4525, %rd4524, %rd4503;
	add.s64 	%rd4526, %rd4515, %rd4525;
	add.s64 	%rd4527, %rd4526, %rd4521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3257,%dummy}, %rd4516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3258}, %rd4516;
	}
	shf.r.wrap.b32 	%r3259, %r3258, %r3257, 14;
	shf.r.wrap.b32 	%r3260, %r3257, %r3258, 14;
	mov.b64 	%rd4528, {%r3260, %r3259};
	shf.r.wrap.b32 	%r3261, %r3258, %r3257, 18;
	shf.r.wrap.b32 	%r3262, %r3257, %r3258, 18;
	mov.b64 	%rd4529, {%r3262, %r3261};
	xor.b64  	%rd4530, %rd4529, %rd4528;
	shf.l.wrap.b32 	%r3263, %r3257, %r3258, 23;
	shf.l.wrap.b32 	%r3264, %r3258, %r3257, 23;
	mov.b64 	%rd4531, {%r3264, %r3263};
	xor.b64  	%rd4532, %rd4530, %rd4531;
	xor.b64  	%rd4533, %rd4492, %rd4468;
	and.b64  	%rd4534, %rd4516, %rd4533;
	xor.b64  	%rd4535, %rd4534, %rd4468;
	add.s64 	%rd4536, %rd4444, %rd4266;
	add.s64 	%rd4537, %rd4536, %rd8783;
	add.s64 	%rd4538, %rd4537, %rd4535;
	add.s64 	%rd4539, %rd4538, %rd4532;
	add.s64 	%rd4540, %rd4539, %rd4455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3265,%dummy}, %rd4527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3266}, %rd4527;
	}
	shf.r.wrap.b32 	%r3267, %r3266, %r3265, 28;
	shf.r.wrap.b32 	%r3268, %r3265, %r3266, 28;
	mov.b64 	%rd4541, {%r3268, %r3267};
	shf.l.wrap.b32 	%r3269, %r3265, %r3266, 30;
	shf.l.wrap.b32 	%r3270, %r3266, %r3265, 30;
	mov.b64 	%rd4542, {%r3270, %r3269};
	xor.b64  	%rd4543, %rd4542, %rd4541;
	shf.l.wrap.b32 	%r3271, %r3265, %r3266, 25;
	shf.l.wrap.b32 	%r3272, %r3266, %r3265, 25;
	mov.b64 	%rd4544, {%r3272, %r3271};
	xor.b64  	%rd4545, %rd4543, %rd4544;
	xor.b64  	%rd4546, %rd4527, %rd4479;
	xor.b64  	%rd4547, %rd4527, %rd4503;
	and.b64  	%rd4548, %rd4547, %rd4546;
	xor.b64  	%rd4549, %rd4548, %rd4527;
	add.s64 	%rd4550, %rd4539, %rd4549;
	add.s64 	%rd4551, %rd4550, %rd4545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3273,%dummy}, %rd4540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3274}, %rd4540;
	}
	shf.r.wrap.b32 	%r3275, %r3274, %r3273, 14;
	shf.r.wrap.b32 	%r3276, %r3273, %r3274, 14;
	mov.b64 	%rd4552, {%r3276, %r3275};
	shf.r.wrap.b32 	%r3277, %r3274, %r3273, 18;
	shf.r.wrap.b32 	%r3278, %r3273, %r3274, 18;
	mov.b64 	%rd4553, {%r3278, %r3277};
	xor.b64  	%rd4554, %rd4553, %rd4552;
	shf.l.wrap.b32 	%r3279, %r3273, %r3274, 23;
	shf.l.wrap.b32 	%r3280, %r3274, %r3273, 23;
	mov.b64 	%rd4555, {%r3280, %r3279};
	xor.b64  	%rd4556, %rd4554, %rd4555;
	xor.b64  	%rd4557, %rd4516, %rd4492;
	and.b64  	%rd4558, %rd4540, %rd4557;
	xor.b64  	%rd4559, %rd4558, %rd4492;
	add.s64 	%rd4560, %rd4468, %rd4279;
	add.s64 	%rd4561, %rd4560, %rd8782;
	add.s64 	%rd4562, %rd4561, %rd4559;
	add.s64 	%rd4563, %rd4562, %rd4556;
	add.s64 	%rd4564, %rd4563, %rd4479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3281,%dummy}, %rd4551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3282}, %rd4551;
	}
	shf.r.wrap.b32 	%r3283, %r3282, %r3281, 28;
	shf.r.wrap.b32 	%r3284, %r3281, %r3282, 28;
	mov.b64 	%rd4565, {%r3284, %r3283};
	shf.l.wrap.b32 	%r3285, %r3281, %r3282, 30;
	shf.l.wrap.b32 	%r3286, %r3282, %r3281, 30;
	mov.b64 	%rd4566, {%r3286, %r3285};
	xor.b64  	%rd4567, %rd4566, %rd4565;
	shf.l.wrap.b32 	%r3287, %r3281, %r3282, 25;
	shf.l.wrap.b32 	%r3288, %r3282, %r3281, 25;
	mov.b64 	%rd4568, {%r3288, %r3287};
	xor.b64  	%rd4569, %rd4567, %rd4568;
	xor.b64  	%rd4570, %rd4551, %rd4503;
	xor.b64  	%rd4571, %rd4551, %rd4527;
	and.b64  	%rd4572, %rd4571, %rd4570;
	xor.b64  	%rd4573, %rd4572, %rd4551;
	add.s64 	%rd4574, %rd4563, %rd4573;
	add.s64 	%rd4575, %rd4574, %rd4569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3289,%dummy}, %rd4564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3290}, %rd4564;
	}
	shf.r.wrap.b32 	%r3291, %r3290, %r3289, 14;
	shf.r.wrap.b32 	%r3292, %r3289, %r3290, 14;
	mov.b64 	%rd4576, {%r3292, %r3291};
	shf.r.wrap.b32 	%r3293, %r3290, %r3289, 18;
	shf.r.wrap.b32 	%r3294, %r3289, %r3290, 18;
	mov.b64 	%rd4577, {%r3294, %r3293};
	xor.b64  	%rd4578, %rd4577, %rd4576;
	shf.l.wrap.b32 	%r3295, %r3289, %r3290, 23;
	shf.l.wrap.b32 	%r3296, %r3290, %r3289, 23;
	mov.b64 	%rd4579, {%r3296, %r3295};
	xor.b64  	%rd4580, %rd4578, %rd4579;
	xor.b64  	%rd4581, %rd4540, %rd4516;
	and.b64  	%rd4582, %rd4564, %rd4581;
	xor.b64  	%rd4583, %rd4582, %rd4516;
	add.s64 	%rd4584, %rd4492, %rd4292;
	add.s64 	%rd4585, %rd4584, %rd8781;
	add.s64 	%rd4586, %rd4585, %rd4583;
	add.s64 	%rd4587, %rd4586, %rd4580;
	add.s64 	%rd4588, %rd4587, %rd4503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3297,%dummy}, %rd4575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3298}, %rd4575;
	}
	shf.r.wrap.b32 	%r3299, %r3298, %r3297, 28;
	shf.r.wrap.b32 	%r3300, %r3297, %r3298, 28;
	mov.b64 	%rd4589, {%r3300, %r3299};
	shf.l.wrap.b32 	%r3301, %r3297, %r3298, 30;
	shf.l.wrap.b32 	%r3302, %r3298, %r3297, 30;
	mov.b64 	%rd4590, {%r3302, %r3301};
	xor.b64  	%rd4591, %rd4590, %rd4589;
	shf.l.wrap.b32 	%r3303, %r3297, %r3298, 25;
	shf.l.wrap.b32 	%r3304, %r3298, %r3297, 25;
	mov.b64 	%rd4592, {%r3304, %r3303};
	xor.b64  	%rd4593, %rd4591, %rd4592;
	xor.b64  	%rd4594, %rd4575, %rd4527;
	xor.b64  	%rd4595, %rd4575, %rd4551;
	and.b64  	%rd4596, %rd4595, %rd4594;
	xor.b64  	%rd4597, %rd4596, %rd4575;
	add.s64 	%rd4598, %rd4587, %rd4597;
	add.s64 	%rd4599, %rd4598, %rd4593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3305,%dummy}, %rd4588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3306}, %rd4588;
	}
	shf.r.wrap.b32 	%r3307, %r3306, %r3305, 14;
	shf.r.wrap.b32 	%r3308, %r3305, %r3306, 14;
	mov.b64 	%rd4600, {%r3308, %r3307};
	shf.r.wrap.b32 	%r3309, %r3306, %r3305, 18;
	shf.r.wrap.b32 	%r3310, %r3305, %r3306, 18;
	mov.b64 	%rd4601, {%r3310, %r3309};
	xor.b64  	%rd4602, %rd4601, %rd4600;
	shf.l.wrap.b32 	%r3311, %r3305, %r3306, 23;
	shf.l.wrap.b32 	%r3312, %r3306, %r3305, 23;
	mov.b64 	%rd4603, {%r3312, %r3311};
	xor.b64  	%rd4604, %rd4602, %rd4603;
	xor.b64  	%rd4605, %rd4564, %rd4540;
	and.b64  	%rd4606, %rd4588, %rd4605;
	xor.b64  	%rd4607, %rd4606, %rd4540;
	add.s64 	%rd4608, %rd4516, %rd4305;
	add.s64 	%rd4609, %rd4608, %rd8780;
	add.s64 	%rd4610, %rd4609, %rd4607;
	add.s64 	%rd4611, %rd4610, %rd4604;
	add.s64 	%rd4612, %rd4611, %rd4527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3313,%dummy}, %rd4599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3314}, %rd4599;
	}
	shf.r.wrap.b32 	%r3315, %r3314, %r3313, 28;
	shf.r.wrap.b32 	%r3316, %r3313, %r3314, 28;
	mov.b64 	%rd4613, {%r3316, %r3315};
	shf.l.wrap.b32 	%r3317, %r3313, %r3314, 30;
	shf.l.wrap.b32 	%r3318, %r3314, %r3313, 30;
	mov.b64 	%rd4614, {%r3318, %r3317};
	xor.b64  	%rd4615, %rd4614, %rd4613;
	shf.l.wrap.b32 	%r3319, %r3313, %r3314, 25;
	shf.l.wrap.b32 	%r3320, %r3314, %r3313, 25;
	mov.b64 	%rd4616, {%r3320, %r3319};
	xor.b64  	%rd4617, %rd4615, %rd4616;
	xor.b64  	%rd4618, %rd4599, %rd4551;
	xor.b64  	%rd4619, %rd4599, %rd4575;
	and.b64  	%rd4620, %rd4619, %rd4618;
	xor.b64  	%rd4621, %rd4620, %rd4599;
	add.s64 	%rd4622, %rd4611, %rd4621;
	add.s64 	%rd4623, %rd4622, %rd4617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3321,%dummy}, %rd4612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3322}, %rd4612;
	}
	shf.r.wrap.b32 	%r3323, %r3322, %r3321, 14;
	shf.r.wrap.b32 	%r3324, %r3321, %r3322, 14;
	mov.b64 	%rd4624, {%r3324, %r3323};
	shf.r.wrap.b32 	%r3325, %r3322, %r3321, 18;
	shf.r.wrap.b32 	%r3326, %r3321, %r3322, 18;
	mov.b64 	%rd4625, {%r3326, %r3325};
	xor.b64  	%rd4626, %rd4625, %rd4624;
	shf.l.wrap.b32 	%r3327, %r3321, %r3322, 23;
	shf.l.wrap.b32 	%r3328, %r3322, %r3321, 23;
	mov.b64 	%rd4627, {%r3328, %r3327};
	xor.b64  	%rd4628, %rd4626, %rd4627;
	xor.b64  	%rd4629, %rd4588, %rd4564;
	and.b64  	%rd4630, %rd4612, %rd4629;
	xor.b64  	%rd4631, %rd4630, %rd4564;
	add.s64 	%rd4632, %rd4540, %rd4318;
	add.s64 	%rd4633, %rd4632, %rd8779;
	add.s64 	%rd4634, %rd4633, %rd4631;
	add.s64 	%rd4635, %rd4634, %rd4628;
	add.s64 	%rd4636, %rd4635, %rd4551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3329,%dummy}, %rd4623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3330}, %rd4623;
	}
	shf.r.wrap.b32 	%r3331, %r3330, %r3329, 28;
	shf.r.wrap.b32 	%r3332, %r3329, %r3330, 28;
	mov.b64 	%rd4637, {%r3332, %r3331};
	shf.l.wrap.b32 	%r3333, %r3329, %r3330, 30;
	shf.l.wrap.b32 	%r3334, %r3330, %r3329, 30;
	mov.b64 	%rd4638, {%r3334, %r3333};
	xor.b64  	%rd4639, %rd4638, %rd4637;
	shf.l.wrap.b32 	%r3335, %r3329, %r3330, 25;
	shf.l.wrap.b32 	%r3336, %r3330, %r3329, 25;
	mov.b64 	%rd4640, {%r3336, %r3335};
	xor.b64  	%rd4641, %rd4639, %rd4640;
	xor.b64  	%rd4642, %rd4623, %rd4575;
	xor.b64  	%rd4643, %rd4623, %rd4599;
	and.b64  	%rd4644, %rd4643, %rd4642;
	xor.b64  	%rd4645, %rd4644, %rd4623;
	add.s64 	%rd4646, %rd4635, %rd4645;
	add.s64 	%rd4647, %rd4646, %rd4641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3337,%dummy}, %rd4636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3338}, %rd4636;
	}
	shf.r.wrap.b32 	%r3339, %r3338, %r3337, 14;
	shf.r.wrap.b32 	%r3340, %r3337, %r3338, 14;
	mov.b64 	%rd4648, {%r3340, %r3339};
	shf.r.wrap.b32 	%r3341, %r3338, %r3337, 18;
	shf.r.wrap.b32 	%r3342, %r3337, %r3338, 18;
	mov.b64 	%rd4649, {%r3342, %r3341};
	xor.b64  	%rd4650, %rd4649, %rd4648;
	shf.l.wrap.b32 	%r3343, %r3337, %r3338, 23;
	shf.l.wrap.b32 	%r3344, %r3338, %r3337, 23;
	mov.b64 	%rd4651, {%r3344, %r3343};
	xor.b64  	%rd4652, %rd4650, %rd4651;
	xor.b64  	%rd4653, %rd4612, %rd4588;
	and.b64  	%rd4654, %rd4636, %rd4653;
	xor.b64  	%rd4655, %rd4654, %rd4588;
	add.s64 	%rd4656, %rd4564, %rd4331;
	add.s64 	%rd4657, %rd4656, %rd8778;
	add.s64 	%rd4658, %rd4657, %rd4655;
	add.s64 	%rd4659, %rd4658, %rd4652;
	add.s64 	%rd4660, %rd4659, %rd4575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3345,%dummy}, %rd4647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3346}, %rd4647;
	}
	shf.r.wrap.b32 	%r3347, %r3346, %r3345, 28;
	shf.r.wrap.b32 	%r3348, %r3345, %r3346, 28;
	mov.b64 	%rd4661, {%r3348, %r3347};
	shf.l.wrap.b32 	%r3349, %r3345, %r3346, 30;
	shf.l.wrap.b32 	%r3350, %r3346, %r3345, 30;
	mov.b64 	%rd4662, {%r3350, %r3349};
	xor.b64  	%rd4663, %rd4662, %rd4661;
	shf.l.wrap.b32 	%r3351, %r3345, %r3346, 25;
	shf.l.wrap.b32 	%r3352, %r3346, %r3345, 25;
	mov.b64 	%rd4664, {%r3352, %r3351};
	xor.b64  	%rd4665, %rd4663, %rd4664;
	xor.b64  	%rd4666, %rd4647, %rd4599;
	xor.b64  	%rd4667, %rd4647, %rd4623;
	and.b64  	%rd4668, %rd4667, %rd4666;
	xor.b64  	%rd4669, %rd4668, %rd4647;
	add.s64 	%rd4670, %rd4659, %rd4669;
	add.s64 	%rd4671, %rd4670, %rd4665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3353,%dummy}, %rd4660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3354}, %rd4660;
	}
	shf.r.wrap.b32 	%r3355, %r3354, %r3353, 14;
	shf.r.wrap.b32 	%r3356, %r3353, %r3354, 14;
	mov.b64 	%rd4672, {%r3356, %r3355};
	shf.r.wrap.b32 	%r3357, %r3354, %r3353, 18;
	shf.r.wrap.b32 	%r3358, %r3353, %r3354, 18;
	mov.b64 	%rd4673, {%r3358, %r3357};
	xor.b64  	%rd4674, %rd4673, %rd4672;
	shf.l.wrap.b32 	%r3359, %r3353, %r3354, 23;
	shf.l.wrap.b32 	%r3360, %r3354, %r3353, 23;
	mov.b64 	%rd4675, {%r3360, %r3359};
	xor.b64  	%rd4676, %rd4674, %rd4675;
	xor.b64  	%rd4677, %rd4636, %rd4612;
	and.b64  	%rd4678, %rd4660, %rd4677;
	xor.b64  	%rd4679, %rd4678, %rd4612;
	add.s64 	%rd4680, %rd4588, %rd4344;
	add.s64 	%rd4681, %rd4680, %rd8777;
	add.s64 	%rd4682, %rd4681, %rd4679;
	add.s64 	%rd4683, %rd4682, %rd4676;
	add.s64 	%rd4684, %rd4683, %rd4599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3361,%dummy}, %rd4671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3362}, %rd4671;
	}
	shf.r.wrap.b32 	%r3363, %r3362, %r3361, 28;
	shf.r.wrap.b32 	%r3364, %r3361, %r3362, 28;
	mov.b64 	%rd4685, {%r3364, %r3363};
	shf.l.wrap.b32 	%r3365, %r3361, %r3362, 30;
	shf.l.wrap.b32 	%r3366, %r3362, %r3361, 30;
	mov.b64 	%rd4686, {%r3366, %r3365};
	xor.b64  	%rd4687, %rd4686, %rd4685;
	shf.l.wrap.b32 	%r3367, %r3361, %r3362, 25;
	shf.l.wrap.b32 	%r3368, %r3362, %r3361, 25;
	mov.b64 	%rd4688, {%r3368, %r3367};
	xor.b64  	%rd4689, %rd4687, %rd4688;
	xor.b64  	%rd4690, %rd4671, %rd4623;
	xor.b64  	%rd4691, %rd4671, %rd4647;
	and.b64  	%rd4692, %rd4691, %rd4690;
	xor.b64  	%rd4693, %rd4692, %rd4671;
	add.s64 	%rd4694, %rd4683, %rd4693;
	add.s64 	%rd4695, %rd4694, %rd4689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3369,%dummy}, %rd4684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3370}, %rd4684;
	}
	shf.r.wrap.b32 	%r3371, %r3370, %r3369, 14;
	shf.r.wrap.b32 	%r3372, %r3369, %r3370, 14;
	mov.b64 	%rd4696, {%r3372, %r3371};
	shf.r.wrap.b32 	%r3373, %r3370, %r3369, 18;
	shf.r.wrap.b32 	%r3374, %r3369, %r3370, 18;
	mov.b64 	%rd4697, {%r3374, %r3373};
	xor.b64  	%rd4698, %rd4697, %rd4696;
	shf.l.wrap.b32 	%r3375, %r3369, %r3370, 23;
	shf.l.wrap.b32 	%r3376, %r3370, %r3369, 23;
	mov.b64 	%rd4699, {%r3376, %r3375};
	xor.b64  	%rd4700, %rd4698, %rd4699;
	xor.b64  	%rd4701, %rd4660, %rd4636;
	and.b64  	%rd4702, %rd4684, %rd4701;
	xor.b64  	%rd4703, %rd4702, %rd4636;
	add.s64 	%rd4704, %rd4612, %rd4357;
	add.s64 	%rd4705, %rd4704, %rd8776;
	add.s64 	%rd4706, %rd4705, %rd4703;
	add.s64 	%rd4707, %rd4706, %rd4700;
	add.s64 	%rd4708, %rd4707, %rd4623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3377,%dummy}, %rd4695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3378}, %rd4695;
	}
	shf.r.wrap.b32 	%r3379, %r3378, %r3377, 28;
	shf.r.wrap.b32 	%r3380, %r3377, %r3378, 28;
	mov.b64 	%rd4709, {%r3380, %r3379};
	shf.l.wrap.b32 	%r3381, %r3377, %r3378, 30;
	shf.l.wrap.b32 	%r3382, %r3378, %r3377, 30;
	mov.b64 	%rd4710, {%r3382, %r3381};
	xor.b64  	%rd4711, %rd4710, %rd4709;
	shf.l.wrap.b32 	%r3383, %r3377, %r3378, 25;
	shf.l.wrap.b32 	%r3384, %r3378, %r3377, 25;
	mov.b64 	%rd4712, {%r3384, %r3383};
	xor.b64  	%rd4713, %rd4711, %rd4712;
	xor.b64  	%rd4714, %rd4695, %rd4647;
	xor.b64  	%rd4715, %rd4695, %rd4671;
	and.b64  	%rd4716, %rd4715, %rd4714;
	xor.b64  	%rd4717, %rd4716, %rd4695;
	add.s64 	%rd4718, %rd4707, %rd4717;
	add.s64 	%rd4719, %rd4718, %rd4713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3385,%dummy}, %rd4708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3386}, %rd4708;
	}
	shf.r.wrap.b32 	%r3387, %r3386, %r3385, 14;
	shf.r.wrap.b32 	%r3388, %r3385, %r3386, 14;
	mov.b64 	%rd4720, {%r3388, %r3387};
	shf.r.wrap.b32 	%r3389, %r3386, %r3385, 18;
	shf.r.wrap.b32 	%r3390, %r3385, %r3386, 18;
	mov.b64 	%rd4721, {%r3390, %r3389};
	xor.b64  	%rd4722, %rd4721, %rd4720;
	shf.l.wrap.b32 	%r3391, %r3385, %r3386, 23;
	shf.l.wrap.b32 	%r3392, %r3386, %r3385, 23;
	mov.b64 	%rd4723, {%r3392, %r3391};
	xor.b64  	%rd4724, %rd4722, %rd4723;
	xor.b64  	%rd4725, %rd4684, %rd4660;
	and.b64  	%rd4726, %rd4708, %rd4725;
	xor.b64  	%rd4727, %rd4726, %rd4660;
	add.s64 	%rd4728, %rd4636, %rd4370;
	add.s64 	%rd4729, %rd4728, %rd8775;
	add.s64 	%rd4730, %rd4729, %rd4727;
	add.s64 	%rd4731, %rd4730, %rd4724;
	add.s64 	%rd4732, %rd4731, %rd4647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3393,%dummy}, %rd4719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3394}, %rd4719;
	}
	shf.r.wrap.b32 	%r3395, %r3394, %r3393, 28;
	shf.r.wrap.b32 	%r3396, %r3393, %r3394, 28;
	mov.b64 	%rd4733, {%r3396, %r3395};
	shf.l.wrap.b32 	%r3397, %r3393, %r3394, 30;
	shf.l.wrap.b32 	%r3398, %r3394, %r3393, 30;
	mov.b64 	%rd4734, {%r3398, %r3397};
	xor.b64  	%rd4735, %rd4734, %rd4733;
	shf.l.wrap.b32 	%r3399, %r3393, %r3394, 25;
	shf.l.wrap.b32 	%r3400, %r3394, %r3393, 25;
	mov.b64 	%rd4736, {%r3400, %r3399};
	xor.b64  	%rd4737, %rd4735, %rd4736;
	xor.b64  	%rd4738, %rd4719, %rd4671;
	xor.b64  	%rd4739, %rd4719, %rd4695;
	and.b64  	%rd4740, %rd4739, %rd4738;
	xor.b64  	%rd4741, %rd4740, %rd4719;
	add.s64 	%rd4742, %rd4731, %rd4741;
	add.s64 	%rd4743, %rd4742, %rd4737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3401,%dummy}, %rd4732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3402}, %rd4732;
	}
	shf.r.wrap.b32 	%r3403, %r3402, %r3401, 14;
	shf.r.wrap.b32 	%r3404, %r3401, %r3402, 14;
	mov.b64 	%rd4744, {%r3404, %r3403};
	shf.r.wrap.b32 	%r3405, %r3402, %r3401, 18;
	shf.r.wrap.b32 	%r3406, %r3401, %r3402, 18;
	mov.b64 	%rd4745, {%r3406, %r3405};
	xor.b64  	%rd4746, %rd4745, %rd4744;
	shf.l.wrap.b32 	%r3407, %r3401, %r3402, 23;
	shf.l.wrap.b32 	%r3408, %r3402, %r3401, 23;
	mov.b64 	%rd4747, {%r3408, %r3407};
	xor.b64  	%rd4748, %rd4746, %rd4747;
	xor.b64  	%rd4749, %rd4708, %rd4684;
	and.b64  	%rd4750, %rd4732, %rd4749;
	xor.b64  	%rd4751, %rd4750, %rd4684;
	add.s64 	%rd4752, %rd4660, %rd4383;
	add.s64 	%rd4753, %rd4752, %rd8774;
	add.s64 	%rd4754, %rd4753, %rd4751;
	add.s64 	%rd4755, %rd4754, %rd4748;
	add.s64 	%rd4756, %rd4755, %rd4671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3409,%dummy}, %rd4743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3410}, %rd4743;
	}
	shf.r.wrap.b32 	%r3411, %r3410, %r3409, 28;
	shf.r.wrap.b32 	%r3412, %r3409, %r3410, 28;
	mov.b64 	%rd4757, {%r3412, %r3411};
	shf.l.wrap.b32 	%r3413, %r3409, %r3410, 30;
	shf.l.wrap.b32 	%r3414, %r3410, %r3409, 30;
	mov.b64 	%rd4758, {%r3414, %r3413};
	xor.b64  	%rd4759, %rd4758, %rd4757;
	shf.l.wrap.b32 	%r3415, %r3409, %r3410, 25;
	shf.l.wrap.b32 	%r3416, %r3410, %r3409, 25;
	mov.b64 	%rd4760, {%r3416, %r3415};
	xor.b64  	%rd4761, %rd4759, %rd4760;
	xor.b64  	%rd4762, %rd4743, %rd4695;
	xor.b64  	%rd4763, %rd4743, %rd4719;
	and.b64  	%rd4764, %rd4763, %rd4762;
	xor.b64  	%rd4765, %rd4764, %rd4743;
	add.s64 	%rd4766, %rd4755, %rd4765;
	add.s64 	%rd4767, %rd4766, %rd4761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3417,%dummy}, %rd4370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3418}, %rd4370;
	}
	shf.r.wrap.b32 	%r3419, %r3418, %r3417, 19;
	shf.r.wrap.b32 	%r3420, %r3417, %r3418, 19;
	mov.b64 	%rd4768, {%r3420, %r3419};
	shf.l.wrap.b32 	%r3421, %r3417, %r3418, 3;
	shf.l.wrap.b32 	%r3422, %r3418, %r3417, 3;
	mov.b64 	%rd4769, {%r3422, %r3421};
	shr.u64 	%rd4770, %rd4370, 6;
	xor.b64  	%rd4771, %rd4768, %rd4770;
	xor.b64  	%rd4772, %rd4771, %rd4769;
	shf.r.wrap.b32 	%r3423, %r3032, %r3031, 1;
	shf.r.wrap.b32 	%r3424, %r3031, %r3032, 1;
	mov.b64 	%rd4773, {%r3424, %r3423};
	shf.r.wrap.b32 	%r3425, %r3032, %r3031, 8;
	shf.r.wrap.b32 	%r3426, %r3031, %r3032, 8;
	mov.b64 	%rd4774, {%r3426, %r3425};
	shr.u64 	%rd4775, %rd4201, 7;
	xor.b64  	%rd4776, %rd4773, %rd4775;
	xor.b64  	%rd4777, %rd4776, %rd4774;
	add.s64 	%rd4778, %rd4305, %rd4188;
	add.s64 	%rd4779, %rd4778, %rd4772;
	add.s64 	%rd4780, %rd4779, %rd4777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3427,%dummy}, %rd4383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3428}, %rd4383;
	}
	shf.r.wrap.b32 	%r3429, %r3428, %r3427, 19;
	shf.r.wrap.b32 	%r3430, %r3427, %r3428, 19;
	mov.b64 	%rd4781, {%r3430, %r3429};
	shf.l.wrap.b32 	%r3431, %r3427, %r3428, 3;
	shf.l.wrap.b32 	%r3432, %r3428, %r3427, 3;
	mov.b64 	%rd4782, {%r3432, %r3431};
	shr.u64 	%rd4783, %rd4383, 6;
	xor.b64  	%rd4784, %rd4781, %rd4783;
	xor.b64  	%rd4785, %rd4784, %rd4782;
	shf.r.wrap.b32 	%r3433, %r3042, %r3041, 1;
	shf.r.wrap.b32 	%r3434, %r3041, %r3042, 1;
	mov.b64 	%rd4786, {%r3434, %r3433};
	shf.r.wrap.b32 	%r3435, %r3042, %r3041, 8;
	shf.r.wrap.b32 	%r3436, %r3041, %r3042, 8;
	mov.b64 	%rd4787, {%r3436, %r3435};
	shr.u64 	%rd4788, %rd4214, 7;
	xor.b64  	%rd4789, %rd4786, %rd4788;
	xor.b64  	%rd4790, %rd4789, %rd4787;
	add.s64 	%rd4791, %rd4318, %rd4201;
	add.s64 	%rd4792, %rd4791, %rd4785;
	add.s64 	%rd4793, %rd4792, %rd4790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3437,%dummy}, %rd4780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3438}, %rd4780;
	}
	shf.r.wrap.b32 	%r3439, %r3438, %r3437, 19;
	shf.r.wrap.b32 	%r3440, %r3437, %r3438, 19;
	mov.b64 	%rd4794, {%r3440, %r3439};
	shf.l.wrap.b32 	%r3441, %r3437, %r3438, 3;
	shf.l.wrap.b32 	%r3442, %r3438, %r3437, 3;
	mov.b64 	%rd4795, {%r3442, %r3441};
	shr.u64 	%rd4796, %rd4780, 6;
	xor.b64  	%rd4797, %rd4794, %rd4796;
	xor.b64  	%rd4798, %rd4797, %rd4795;
	shf.r.wrap.b32 	%r3443, %r3052, %r3051, 1;
	shf.r.wrap.b32 	%r3444, %r3051, %r3052, 1;
	mov.b64 	%rd4799, {%r3444, %r3443};
	shf.r.wrap.b32 	%r3445, %r3052, %r3051, 8;
	shf.r.wrap.b32 	%r3446, %r3051, %r3052, 8;
	mov.b64 	%rd4800, {%r3446, %r3445};
	shr.u64 	%rd4801, %rd4227, 7;
	xor.b64  	%rd4802, %rd4799, %rd4801;
	xor.b64  	%rd4803, %rd4802, %rd4800;
	add.s64 	%rd4804, %rd4331, %rd4214;
	add.s64 	%rd4805, %rd4804, %rd4798;
	add.s64 	%rd4806, %rd4805, %rd4803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3447,%dummy}, %rd4793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3448}, %rd4793;
	}
	shf.r.wrap.b32 	%r3449, %r3448, %r3447, 19;
	shf.r.wrap.b32 	%r3450, %r3447, %r3448, 19;
	mov.b64 	%rd4807, {%r3450, %r3449};
	shf.l.wrap.b32 	%r3451, %r3447, %r3448, 3;
	shf.l.wrap.b32 	%r3452, %r3448, %r3447, 3;
	mov.b64 	%rd4808, {%r3452, %r3451};
	shr.u64 	%rd4809, %rd4793, 6;
	xor.b64  	%rd4810, %rd4807, %rd4809;
	xor.b64  	%rd4811, %rd4810, %rd4808;
	shf.r.wrap.b32 	%r3453, %r3062, %r3061, 1;
	shf.r.wrap.b32 	%r3454, %r3061, %r3062, 1;
	mov.b64 	%rd4812, {%r3454, %r3453};
	shf.r.wrap.b32 	%r3455, %r3062, %r3061, 8;
	shf.r.wrap.b32 	%r3456, %r3061, %r3062, 8;
	mov.b64 	%rd4813, {%r3456, %r3455};
	shr.u64 	%rd4814, %rd4240, 7;
	xor.b64  	%rd4815, %rd4812, %rd4814;
	xor.b64  	%rd4816, %rd4815, %rd4813;
	add.s64 	%rd4817, %rd4344, %rd4227;
	add.s64 	%rd4818, %rd4817, %rd4811;
	add.s64 	%rd4819, %rd4818, %rd4816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3457,%dummy}, %rd4806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3458}, %rd4806;
	}
	shf.r.wrap.b32 	%r3459, %r3458, %r3457, 19;
	shf.r.wrap.b32 	%r3460, %r3457, %r3458, 19;
	mov.b64 	%rd4820, {%r3460, %r3459};
	shf.l.wrap.b32 	%r3461, %r3457, %r3458, 3;
	shf.l.wrap.b32 	%r3462, %r3458, %r3457, 3;
	mov.b64 	%rd4821, {%r3462, %r3461};
	shr.u64 	%rd4822, %rd4806, 6;
	xor.b64  	%rd4823, %rd4820, %rd4822;
	xor.b64  	%rd4824, %rd4823, %rd4821;
	shf.r.wrap.b32 	%r3463, %r3072, %r3071, 1;
	shf.r.wrap.b32 	%r3464, %r3071, %r3072, 1;
	mov.b64 	%rd4825, {%r3464, %r3463};
	shf.r.wrap.b32 	%r3465, %r3072, %r3071, 8;
	shf.r.wrap.b32 	%r3466, %r3071, %r3072, 8;
	mov.b64 	%rd4826, {%r3466, %r3465};
	shr.u64 	%rd4827, %rd4253, 7;
	xor.b64  	%rd4828, %rd4825, %rd4827;
	xor.b64  	%rd4829, %rd4828, %rd4826;
	add.s64 	%rd4830, %rd4357, %rd4240;
	add.s64 	%rd4831, %rd4830, %rd4824;
	add.s64 	%rd4832, %rd4831, %rd4829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3467,%dummy}, %rd4819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3468}, %rd4819;
	}
	shf.r.wrap.b32 	%r3469, %r3468, %r3467, 19;
	shf.r.wrap.b32 	%r3470, %r3467, %r3468, 19;
	mov.b64 	%rd4833, {%r3470, %r3469};
	shf.l.wrap.b32 	%r3471, %r3467, %r3468, 3;
	shf.l.wrap.b32 	%r3472, %r3468, %r3467, 3;
	mov.b64 	%rd4834, {%r3472, %r3471};
	shr.u64 	%rd4835, %rd4819, 6;
	xor.b64  	%rd4836, %rd4833, %rd4835;
	xor.b64  	%rd4837, %rd4836, %rd4834;
	shf.r.wrap.b32 	%r3473, %r3082, %r3081, 1;
	shf.r.wrap.b32 	%r3474, %r3081, %r3082, 1;
	mov.b64 	%rd4838, {%r3474, %r3473};
	shf.r.wrap.b32 	%r3475, %r3082, %r3081, 8;
	shf.r.wrap.b32 	%r3476, %r3081, %r3082, 8;
	mov.b64 	%rd4839, {%r3476, %r3475};
	shr.u64 	%rd4840, %rd4266, 7;
	xor.b64  	%rd4841, %rd4838, %rd4840;
	xor.b64  	%rd4842, %rd4841, %rd4839;
	add.s64 	%rd4843, %rd4370, %rd4253;
	add.s64 	%rd4844, %rd4843, %rd4837;
	add.s64 	%rd4845, %rd4844, %rd4842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3477,%dummy}, %rd4832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3478}, %rd4832;
	}
	shf.r.wrap.b32 	%r3479, %r3478, %r3477, 19;
	shf.r.wrap.b32 	%r3480, %r3477, %r3478, 19;
	mov.b64 	%rd4846, {%r3480, %r3479};
	shf.l.wrap.b32 	%r3481, %r3477, %r3478, 3;
	shf.l.wrap.b32 	%r3482, %r3478, %r3477, 3;
	mov.b64 	%rd4847, {%r3482, %r3481};
	shr.u64 	%rd4848, %rd4832, 6;
	xor.b64  	%rd4849, %rd4846, %rd4848;
	xor.b64  	%rd4850, %rd4849, %rd4847;
	shf.r.wrap.b32 	%r3483, %r3092, %r3091, 1;
	shf.r.wrap.b32 	%r3484, %r3091, %r3092, 1;
	mov.b64 	%rd4851, {%r3484, %r3483};
	shf.r.wrap.b32 	%r3485, %r3092, %r3091, 8;
	shf.r.wrap.b32 	%r3486, %r3091, %r3092, 8;
	mov.b64 	%rd4852, {%r3486, %r3485};
	shr.u64 	%rd4853, %rd4279, 7;
	xor.b64  	%rd4854, %rd4851, %rd4853;
	xor.b64  	%rd4855, %rd4854, %rd4852;
	add.s64 	%rd4856, %rd4383, %rd4266;
	add.s64 	%rd4857, %rd4856, %rd4850;
	add.s64 	%rd4858, %rd4857, %rd4855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3487,%dummy}, %rd4845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3488}, %rd4845;
	}
	shf.r.wrap.b32 	%r3489, %r3488, %r3487, 19;
	shf.r.wrap.b32 	%r3490, %r3487, %r3488, 19;
	mov.b64 	%rd4859, {%r3490, %r3489};
	shf.l.wrap.b32 	%r3491, %r3487, %r3488, 3;
	shf.l.wrap.b32 	%r3492, %r3488, %r3487, 3;
	mov.b64 	%rd4860, {%r3492, %r3491};
	shr.u64 	%rd4861, %rd4845, 6;
	xor.b64  	%rd4862, %rd4859, %rd4861;
	xor.b64  	%rd4863, %rd4862, %rd4860;
	shf.r.wrap.b32 	%r3493, %r3102, %r3101, 1;
	shf.r.wrap.b32 	%r3494, %r3101, %r3102, 1;
	mov.b64 	%rd4864, {%r3494, %r3493};
	shf.r.wrap.b32 	%r3495, %r3102, %r3101, 8;
	shf.r.wrap.b32 	%r3496, %r3101, %r3102, 8;
	mov.b64 	%rd4865, {%r3496, %r3495};
	shr.u64 	%rd4866, %rd4292, 7;
	xor.b64  	%rd4867, %rd4864, %rd4866;
	xor.b64  	%rd4868, %rd4867, %rd4865;
	add.s64 	%rd4869, %rd4780, %rd4279;
	add.s64 	%rd4870, %rd4869, %rd4863;
	add.s64 	%rd4871, %rd4870, %rd4868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3497,%dummy}, %rd4858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3498}, %rd4858;
	}
	shf.r.wrap.b32 	%r3499, %r3498, %r3497, 19;
	shf.r.wrap.b32 	%r3500, %r3497, %r3498, 19;
	mov.b64 	%rd4872, {%r3500, %r3499};
	shf.l.wrap.b32 	%r3501, %r3497, %r3498, 3;
	shf.l.wrap.b32 	%r3502, %r3498, %r3497, 3;
	mov.b64 	%rd4873, {%r3502, %r3501};
	shr.u64 	%rd4874, %rd4858, 6;
	xor.b64  	%rd4875, %rd4872, %rd4874;
	xor.b64  	%rd4876, %rd4875, %rd4873;
	shf.r.wrap.b32 	%r3503, %r3112, %r3111, 1;
	shf.r.wrap.b32 	%r3504, %r3111, %r3112, 1;
	mov.b64 	%rd4877, {%r3504, %r3503};
	shf.r.wrap.b32 	%r3505, %r3112, %r3111, 8;
	shf.r.wrap.b32 	%r3506, %r3111, %r3112, 8;
	mov.b64 	%rd4878, {%r3506, %r3505};
	shr.u64 	%rd4879, %rd4305, 7;
	xor.b64  	%rd4880, %rd4877, %rd4879;
	xor.b64  	%rd4881, %rd4880, %rd4878;
	add.s64 	%rd4882, %rd4793, %rd4292;
	add.s64 	%rd4883, %rd4882, %rd4876;
	add.s64 	%rd4884, %rd4883, %rd4881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3507,%dummy}, %rd4871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3508}, %rd4871;
	}
	shf.r.wrap.b32 	%r3509, %r3508, %r3507, 19;
	shf.r.wrap.b32 	%r3510, %r3507, %r3508, 19;
	mov.b64 	%rd4885, {%r3510, %r3509};
	shf.l.wrap.b32 	%r3511, %r3507, %r3508, 3;
	shf.l.wrap.b32 	%r3512, %r3508, %r3507, 3;
	mov.b64 	%rd4886, {%r3512, %r3511};
	shr.u64 	%rd4887, %rd4871, 6;
	xor.b64  	%rd4888, %rd4885, %rd4887;
	xor.b64  	%rd4889, %rd4888, %rd4886;
	shf.r.wrap.b32 	%r3513, %r3122, %r3121, 1;
	shf.r.wrap.b32 	%r3514, %r3121, %r3122, 1;
	mov.b64 	%rd4890, {%r3514, %r3513};
	shf.r.wrap.b32 	%r3515, %r3122, %r3121, 8;
	shf.r.wrap.b32 	%r3516, %r3121, %r3122, 8;
	mov.b64 	%rd4891, {%r3516, %r3515};
	shr.u64 	%rd4892, %rd4318, 7;
	xor.b64  	%rd4893, %rd4890, %rd4892;
	xor.b64  	%rd4894, %rd4893, %rd4891;
	add.s64 	%rd4895, %rd4806, %rd4305;
	add.s64 	%rd4896, %rd4895, %rd4889;
	add.s64 	%rd4897, %rd4896, %rd4894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3517,%dummy}, %rd4884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3518}, %rd4884;
	}
	shf.r.wrap.b32 	%r3519, %r3518, %r3517, 19;
	shf.r.wrap.b32 	%r3520, %r3517, %r3518, 19;
	mov.b64 	%rd4898, {%r3520, %r3519};
	shf.l.wrap.b32 	%r3521, %r3517, %r3518, 3;
	shf.l.wrap.b32 	%r3522, %r3518, %r3517, 3;
	mov.b64 	%rd4899, {%r3522, %r3521};
	shr.u64 	%rd4900, %rd4884, 6;
	xor.b64  	%rd4901, %rd4898, %rd4900;
	xor.b64  	%rd4902, %rd4901, %rd4899;
	shf.r.wrap.b32 	%r3523, %r3132, %r3131, 1;
	shf.r.wrap.b32 	%r3524, %r3131, %r3132, 1;
	mov.b64 	%rd4903, {%r3524, %r3523};
	shf.r.wrap.b32 	%r3525, %r3132, %r3131, 8;
	shf.r.wrap.b32 	%r3526, %r3131, %r3132, 8;
	mov.b64 	%rd4904, {%r3526, %r3525};
	shr.u64 	%rd4905, %rd4331, 7;
	xor.b64  	%rd4906, %rd4903, %rd4905;
	xor.b64  	%rd4907, %rd4906, %rd4904;
	add.s64 	%rd4908, %rd4819, %rd4318;
	add.s64 	%rd4909, %rd4908, %rd4902;
	add.s64 	%rd4910, %rd4909, %rd4907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3527,%dummy}, %rd4897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3528}, %rd4897;
	}
	shf.r.wrap.b32 	%r3529, %r3528, %r3527, 19;
	shf.r.wrap.b32 	%r3530, %r3527, %r3528, 19;
	mov.b64 	%rd4911, {%r3530, %r3529};
	shf.l.wrap.b32 	%r3531, %r3527, %r3528, 3;
	shf.l.wrap.b32 	%r3532, %r3528, %r3527, 3;
	mov.b64 	%rd4912, {%r3532, %r3531};
	shr.u64 	%rd4913, %rd4897, 6;
	xor.b64  	%rd4914, %rd4911, %rd4913;
	xor.b64  	%rd4915, %rd4914, %rd4912;
	shf.r.wrap.b32 	%r3533, %r3142, %r3141, 1;
	shf.r.wrap.b32 	%r3534, %r3141, %r3142, 1;
	mov.b64 	%rd4916, {%r3534, %r3533};
	shf.r.wrap.b32 	%r3535, %r3142, %r3141, 8;
	shf.r.wrap.b32 	%r3536, %r3141, %r3142, 8;
	mov.b64 	%rd4917, {%r3536, %r3535};
	shr.u64 	%rd4918, %rd4344, 7;
	xor.b64  	%rd4919, %rd4916, %rd4918;
	xor.b64  	%rd4920, %rd4919, %rd4917;
	add.s64 	%rd4921, %rd4832, %rd4331;
	add.s64 	%rd4922, %rd4921, %rd4915;
	add.s64 	%rd4923, %rd4922, %rd4920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3537,%dummy}, %rd4910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3538}, %rd4910;
	}
	shf.r.wrap.b32 	%r3539, %r3538, %r3537, 19;
	shf.r.wrap.b32 	%r3540, %r3537, %r3538, 19;
	mov.b64 	%rd4924, {%r3540, %r3539};
	shf.l.wrap.b32 	%r3541, %r3537, %r3538, 3;
	shf.l.wrap.b32 	%r3542, %r3538, %r3537, 3;
	mov.b64 	%rd4925, {%r3542, %r3541};
	shr.u64 	%rd4926, %rd4910, 6;
	xor.b64  	%rd4927, %rd4924, %rd4926;
	xor.b64  	%rd4928, %rd4927, %rd4925;
	shf.r.wrap.b32 	%r3543, %r3152, %r3151, 1;
	shf.r.wrap.b32 	%r3544, %r3151, %r3152, 1;
	mov.b64 	%rd4929, {%r3544, %r3543};
	shf.r.wrap.b32 	%r3545, %r3152, %r3151, 8;
	shf.r.wrap.b32 	%r3546, %r3151, %r3152, 8;
	mov.b64 	%rd4930, {%r3546, %r3545};
	shr.u64 	%rd4931, %rd4357, 7;
	xor.b64  	%rd4932, %rd4929, %rd4931;
	xor.b64  	%rd4933, %rd4932, %rd4930;
	add.s64 	%rd4934, %rd4845, %rd4344;
	add.s64 	%rd4935, %rd4934, %rd4928;
	add.s64 	%rd4936, %rd4935, %rd4933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3547,%dummy}, %rd4923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3548}, %rd4923;
	}
	shf.r.wrap.b32 	%r3549, %r3548, %r3547, 19;
	shf.r.wrap.b32 	%r3550, %r3547, %r3548, 19;
	mov.b64 	%rd4937, {%r3550, %r3549};
	shf.l.wrap.b32 	%r3551, %r3547, %r3548, 3;
	shf.l.wrap.b32 	%r3552, %r3548, %r3547, 3;
	mov.b64 	%rd4938, {%r3552, %r3551};
	shr.u64 	%rd4939, %rd4923, 6;
	xor.b64  	%rd4940, %rd4937, %rd4939;
	xor.b64  	%rd4941, %rd4940, %rd4938;
	shf.r.wrap.b32 	%r3553, %r3418, %r3417, 1;
	shf.r.wrap.b32 	%r3554, %r3417, %r3418, 1;
	mov.b64 	%rd4942, {%r3554, %r3553};
	shf.r.wrap.b32 	%r3555, %r3418, %r3417, 8;
	shf.r.wrap.b32 	%r3556, %r3417, %r3418, 8;
	mov.b64 	%rd4943, {%r3556, %r3555};
	shr.u64 	%rd4944, %rd4370, 7;
	xor.b64  	%rd4945, %rd4942, %rd4944;
	xor.b64  	%rd4946, %rd4945, %rd4943;
	add.s64 	%rd4947, %rd4858, %rd4357;
	add.s64 	%rd4948, %rd4947, %rd4941;
	add.s64 	%rd4949, %rd4948, %rd4946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3557,%dummy}, %rd4936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3558}, %rd4936;
	}
	shf.r.wrap.b32 	%r3559, %r3558, %r3557, 19;
	shf.r.wrap.b32 	%r3560, %r3557, %r3558, 19;
	mov.b64 	%rd4950, {%r3560, %r3559};
	shf.l.wrap.b32 	%r3561, %r3557, %r3558, 3;
	shf.l.wrap.b32 	%r3562, %r3558, %r3557, 3;
	mov.b64 	%rd4951, {%r3562, %r3561};
	shr.u64 	%rd4952, %rd4936, 6;
	xor.b64  	%rd4953, %rd4950, %rd4952;
	xor.b64  	%rd4954, %rd4953, %rd4951;
	shf.r.wrap.b32 	%r3563, %r3428, %r3427, 1;
	shf.r.wrap.b32 	%r3564, %r3427, %r3428, 1;
	mov.b64 	%rd4955, {%r3564, %r3563};
	shf.r.wrap.b32 	%r3565, %r3428, %r3427, 8;
	shf.r.wrap.b32 	%r3566, %r3427, %r3428, 8;
	mov.b64 	%rd4956, {%r3566, %r3565};
	shr.u64 	%rd4957, %rd4383, 7;
	xor.b64  	%rd4958, %rd4955, %rd4957;
	xor.b64  	%rd4959, %rd4958, %rd4956;
	add.s64 	%rd4960, %rd4871, %rd4370;
	add.s64 	%rd4961, %rd4960, %rd4954;
	add.s64 	%rd4962, %rd4961, %rd4959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3567,%dummy}, %rd4949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3568}, %rd4949;
	}
	shf.r.wrap.b32 	%r3569, %r3568, %r3567, 19;
	shf.r.wrap.b32 	%r3570, %r3567, %r3568, 19;
	mov.b64 	%rd4963, {%r3570, %r3569};
	shf.l.wrap.b32 	%r3571, %r3567, %r3568, 3;
	shf.l.wrap.b32 	%r3572, %r3568, %r3567, 3;
	mov.b64 	%rd4964, {%r3572, %r3571};
	shr.u64 	%rd4965, %rd4949, 6;
	xor.b64  	%rd4966, %rd4963, %rd4965;
	xor.b64  	%rd4967, %rd4966, %rd4964;
	shf.r.wrap.b32 	%r3573, %r3438, %r3437, 1;
	shf.r.wrap.b32 	%r3574, %r3437, %r3438, 1;
	mov.b64 	%rd4968, {%r3574, %r3573};
	shf.r.wrap.b32 	%r3575, %r3438, %r3437, 8;
	shf.r.wrap.b32 	%r3576, %r3437, %r3438, 8;
	mov.b64 	%rd4969, {%r3576, %r3575};
	shr.u64 	%rd4970, %rd4780, 7;
	xor.b64  	%rd4971, %rd4968, %rd4970;
	xor.b64  	%rd4972, %rd4971, %rd4969;
	add.s64 	%rd4973, %rd4884, %rd4383;
	add.s64 	%rd4974, %rd4973, %rd4967;
	add.s64 	%rd4975, %rd4974, %rd4972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3577,%dummy}, %rd4756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3578}, %rd4756;
	}
	shf.r.wrap.b32 	%r3579, %r3578, %r3577, 14;
	shf.r.wrap.b32 	%r3580, %r3577, %r3578, 14;
	mov.b64 	%rd4976, {%r3580, %r3579};
	shf.r.wrap.b32 	%r3581, %r3578, %r3577, 18;
	shf.r.wrap.b32 	%r3582, %r3577, %r3578, 18;
	mov.b64 	%rd4977, {%r3582, %r3581};
	xor.b64  	%rd4978, %rd4977, %rd4976;
	shf.l.wrap.b32 	%r3583, %r3577, %r3578, 23;
	shf.l.wrap.b32 	%r3584, %r3578, %r3577, 23;
	mov.b64 	%rd4979, {%r3584, %r3583};
	xor.b64  	%rd4980, %rd4978, %rd4979;
	xor.b64  	%rd4981, %rd4732, %rd4708;
	and.b64  	%rd4982, %rd4981, %rd4756;
	xor.b64  	%rd4983, %rd4982, %rd4708;
	add.s64 	%rd4984, %rd4983, %rd4684;
	add.s64 	%rd4985, %rd4984, %rd4780;
	add.s64 	%rd4986, %rd4985, %rd8773;
	add.s64 	%rd4987, %rd4986, %rd4980;
	add.s64 	%rd4988, %rd4987, %rd4695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3585,%dummy}, %rd4767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3586}, %rd4767;
	}
	shf.r.wrap.b32 	%r3587, %r3586, %r3585, 28;
	shf.r.wrap.b32 	%r3588, %r3585, %r3586, 28;
	mov.b64 	%rd4989, {%r3588, %r3587};
	shf.l.wrap.b32 	%r3589, %r3585, %r3586, 30;
	shf.l.wrap.b32 	%r3590, %r3586, %r3585, 30;
	mov.b64 	%rd4990, {%r3590, %r3589};
	xor.b64  	%rd4991, %rd4990, %rd4989;
	shf.l.wrap.b32 	%r3591, %r3585, %r3586, 25;
	shf.l.wrap.b32 	%r3592, %r3586, %r3585, 25;
	mov.b64 	%rd4992, {%r3592, %r3591};
	xor.b64  	%rd4993, %rd4991, %rd4992;
	xor.b64  	%rd4994, %rd4767, %rd4719;
	xor.b64  	%rd4995, %rd4767, %rd4743;
	and.b64  	%rd4996, %rd4995, %rd4994;
	xor.b64  	%rd4997, %rd4996, %rd4767;
	add.s64 	%rd4998, %rd4987, %rd4997;
	add.s64 	%rd4999, %rd4998, %rd4993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3593,%dummy}, %rd4988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3594}, %rd4988;
	}
	shf.r.wrap.b32 	%r3595, %r3594, %r3593, 14;
	shf.r.wrap.b32 	%r3596, %r3593, %r3594, 14;
	mov.b64 	%rd5000, {%r3596, %r3595};
	shf.r.wrap.b32 	%r3597, %r3594, %r3593, 18;
	shf.r.wrap.b32 	%r3598, %r3593, %r3594, 18;
	mov.b64 	%rd5001, {%r3598, %r3597};
	xor.b64  	%rd5002, %rd5001, %rd5000;
	shf.l.wrap.b32 	%r3599, %r3593, %r3594, 23;
	shf.l.wrap.b32 	%r3600, %r3594, %r3593, 23;
	mov.b64 	%rd5003, {%r3600, %r3599};
	xor.b64  	%rd5004, %rd5002, %rd5003;
	xor.b64  	%rd5005, %rd4756, %rd4732;
	and.b64  	%rd5006, %rd4988, %rd5005;
	xor.b64  	%rd5007, %rd5006, %rd4732;
	add.s64 	%rd5008, %rd4793, %rd4708;
	add.s64 	%rd5009, %rd5008, %rd8772;
	add.s64 	%rd5010, %rd5009, %rd5007;
	add.s64 	%rd5011, %rd5010, %rd5004;
	add.s64 	%rd5012, %rd5011, %rd4719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3601,%dummy}, %rd4999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3602}, %rd4999;
	}
	shf.r.wrap.b32 	%r3603, %r3602, %r3601, 28;
	shf.r.wrap.b32 	%r3604, %r3601, %r3602, 28;
	mov.b64 	%rd5013, {%r3604, %r3603};
	shf.l.wrap.b32 	%r3605, %r3601, %r3602, 30;
	shf.l.wrap.b32 	%r3606, %r3602, %r3601, 30;
	mov.b64 	%rd5014, {%r3606, %r3605};
	xor.b64  	%rd5015, %rd5014, %rd5013;
	shf.l.wrap.b32 	%r3607, %r3601, %r3602, 25;
	shf.l.wrap.b32 	%r3608, %r3602, %r3601, 25;
	mov.b64 	%rd5016, {%r3608, %r3607};
	xor.b64  	%rd5017, %rd5015, %rd5016;
	xor.b64  	%rd5018, %rd4999, %rd4743;
	xor.b64  	%rd5019, %rd4999, %rd4767;
	and.b64  	%rd5020, %rd5019, %rd5018;
	xor.b64  	%rd5021, %rd5020, %rd4999;
	add.s64 	%rd5022, %rd5011, %rd5021;
	add.s64 	%rd5023, %rd5022, %rd5017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3609,%dummy}, %rd5012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3610}, %rd5012;
	}
	shf.r.wrap.b32 	%r3611, %r3610, %r3609, 14;
	shf.r.wrap.b32 	%r3612, %r3609, %r3610, 14;
	mov.b64 	%rd5024, {%r3612, %r3611};
	shf.r.wrap.b32 	%r3613, %r3610, %r3609, 18;
	shf.r.wrap.b32 	%r3614, %r3609, %r3610, 18;
	mov.b64 	%rd5025, {%r3614, %r3613};
	xor.b64  	%rd5026, %rd5025, %rd5024;
	shf.l.wrap.b32 	%r3615, %r3609, %r3610, 23;
	shf.l.wrap.b32 	%r3616, %r3610, %r3609, 23;
	mov.b64 	%rd5027, {%r3616, %r3615};
	xor.b64  	%rd5028, %rd5026, %rd5027;
	xor.b64  	%rd5029, %rd4988, %rd4756;
	and.b64  	%rd5030, %rd5012, %rd5029;
	xor.b64  	%rd5031, %rd5030, %rd4756;
	add.s64 	%rd5032, %rd4806, %rd4732;
	add.s64 	%rd5033, %rd5032, %rd8771;
	add.s64 	%rd5034, %rd5033, %rd5031;
	add.s64 	%rd5035, %rd5034, %rd5028;
	add.s64 	%rd5036, %rd5035, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3617,%dummy}, %rd5023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3618}, %rd5023;
	}
	shf.r.wrap.b32 	%r3619, %r3618, %r3617, 28;
	shf.r.wrap.b32 	%r3620, %r3617, %r3618, 28;
	mov.b64 	%rd5037, {%r3620, %r3619};
	shf.l.wrap.b32 	%r3621, %r3617, %r3618, 30;
	shf.l.wrap.b32 	%r3622, %r3618, %r3617, 30;
	mov.b64 	%rd5038, {%r3622, %r3621};
	xor.b64  	%rd5039, %rd5038, %rd5037;
	shf.l.wrap.b32 	%r3623, %r3617, %r3618, 25;
	shf.l.wrap.b32 	%r3624, %r3618, %r3617, 25;
	mov.b64 	%rd5040, {%r3624, %r3623};
	xor.b64  	%rd5041, %rd5039, %rd5040;
	xor.b64  	%rd5042, %rd5023, %rd4767;
	xor.b64  	%rd5043, %rd5023, %rd4999;
	and.b64  	%rd5044, %rd5043, %rd5042;
	xor.b64  	%rd5045, %rd5044, %rd5023;
	add.s64 	%rd5046, %rd5035, %rd5045;
	add.s64 	%rd5047, %rd5046, %rd5041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3625,%dummy}, %rd5036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3626}, %rd5036;
	}
	shf.r.wrap.b32 	%r3627, %r3626, %r3625, 14;
	shf.r.wrap.b32 	%r3628, %r3625, %r3626, 14;
	mov.b64 	%rd5048, {%r3628, %r3627};
	shf.r.wrap.b32 	%r3629, %r3626, %r3625, 18;
	shf.r.wrap.b32 	%r3630, %r3625, %r3626, 18;
	mov.b64 	%rd5049, {%r3630, %r3629};
	xor.b64  	%rd5050, %rd5049, %rd5048;
	shf.l.wrap.b32 	%r3631, %r3625, %r3626, 23;
	shf.l.wrap.b32 	%r3632, %r3626, %r3625, 23;
	mov.b64 	%rd5051, {%r3632, %r3631};
	xor.b64  	%rd5052, %rd5050, %rd5051;
	xor.b64  	%rd5053, %rd5012, %rd4988;
	and.b64  	%rd5054, %rd5036, %rd5053;
	xor.b64  	%rd5055, %rd5054, %rd4988;
	add.s64 	%rd5056, %rd4819, %rd4756;
	add.s64 	%rd5057, %rd5056, %rd8770;
	add.s64 	%rd5058, %rd5057, %rd5055;
	add.s64 	%rd5059, %rd5058, %rd5052;
	add.s64 	%rd5060, %rd5059, %rd4767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3633,%dummy}, %rd5047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3634}, %rd5047;
	}
	shf.r.wrap.b32 	%r3635, %r3634, %r3633, 28;
	shf.r.wrap.b32 	%r3636, %r3633, %r3634, 28;
	mov.b64 	%rd5061, {%r3636, %r3635};
	shf.l.wrap.b32 	%r3637, %r3633, %r3634, 30;
	shf.l.wrap.b32 	%r3638, %r3634, %r3633, 30;
	mov.b64 	%rd5062, {%r3638, %r3637};
	xor.b64  	%rd5063, %rd5062, %rd5061;
	shf.l.wrap.b32 	%r3639, %r3633, %r3634, 25;
	shf.l.wrap.b32 	%r3640, %r3634, %r3633, 25;
	mov.b64 	%rd5064, {%r3640, %r3639};
	xor.b64  	%rd5065, %rd5063, %rd5064;
	xor.b64  	%rd5066, %rd5047, %rd4999;
	xor.b64  	%rd5067, %rd5047, %rd5023;
	and.b64  	%rd5068, %rd5067, %rd5066;
	xor.b64  	%rd5069, %rd5068, %rd5047;
	add.s64 	%rd5070, %rd5059, %rd5069;
	add.s64 	%rd5071, %rd5070, %rd5065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3641,%dummy}, %rd5060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3642}, %rd5060;
	}
	shf.r.wrap.b32 	%r3643, %r3642, %r3641, 14;
	shf.r.wrap.b32 	%r3644, %r3641, %r3642, 14;
	mov.b64 	%rd5072, {%r3644, %r3643};
	shf.r.wrap.b32 	%r3645, %r3642, %r3641, 18;
	shf.r.wrap.b32 	%r3646, %r3641, %r3642, 18;
	mov.b64 	%rd5073, {%r3646, %r3645};
	xor.b64  	%rd5074, %rd5073, %rd5072;
	shf.l.wrap.b32 	%r3647, %r3641, %r3642, 23;
	shf.l.wrap.b32 	%r3648, %r3642, %r3641, 23;
	mov.b64 	%rd5075, {%r3648, %r3647};
	xor.b64  	%rd5076, %rd5074, %rd5075;
	xor.b64  	%rd5077, %rd5036, %rd5012;
	and.b64  	%rd5078, %rd5060, %rd5077;
	xor.b64  	%rd5079, %rd5078, %rd5012;
	add.s64 	%rd5080, %rd4988, %rd4832;
	add.s64 	%rd5081, %rd5080, %rd8769;
	add.s64 	%rd5082, %rd5081, %rd5079;
	add.s64 	%rd5083, %rd5082, %rd5076;
	add.s64 	%rd5084, %rd5083, %rd4999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3649,%dummy}, %rd5071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3650}, %rd5071;
	}
	shf.r.wrap.b32 	%r3651, %r3650, %r3649, 28;
	shf.r.wrap.b32 	%r3652, %r3649, %r3650, 28;
	mov.b64 	%rd5085, {%r3652, %r3651};
	shf.l.wrap.b32 	%r3653, %r3649, %r3650, 30;
	shf.l.wrap.b32 	%r3654, %r3650, %r3649, 30;
	mov.b64 	%rd5086, {%r3654, %r3653};
	xor.b64  	%rd5087, %rd5086, %rd5085;
	shf.l.wrap.b32 	%r3655, %r3649, %r3650, 25;
	shf.l.wrap.b32 	%r3656, %r3650, %r3649, 25;
	mov.b64 	%rd5088, {%r3656, %r3655};
	xor.b64  	%rd5089, %rd5087, %rd5088;
	xor.b64  	%rd5090, %rd5071, %rd5023;
	xor.b64  	%rd5091, %rd5071, %rd5047;
	and.b64  	%rd5092, %rd5091, %rd5090;
	xor.b64  	%rd5093, %rd5092, %rd5071;
	add.s64 	%rd5094, %rd5083, %rd5093;
	add.s64 	%rd5095, %rd5094, %rd5089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3657,%dummy}, %rd5084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3658}, %rd5084;
	}
	shf.r.wrap.b32 	%r3659, %r3658, %r3657, 14;
	shf.r.wrap.b32 	%r3660, %r3657, %r3658, 14;
	mov.b64 	%rd5096, {%r3660, %r3659};
	shf.r.wrap.b32 	%r3661, %r3658, %r3657, 18;
	shf.r.wrap.b32 	%r3662, %r3657, %r3658, 18;
	mov.b64 	%rd5097, {%r3662, %r3661};
	xor.b64  	%rd5098, %rd5097, %rd5096;
	shf.l.wrap.b32 	%r3663, %r3657, %r3658, 23;
	shf.l.wrap.b32 	%r3664, %r3658, %r3657, 23;
	mov.b64 	%rd5099, {%r3664, %r3663};
	xor.b64  	%rd5100, %rd5098, %rd5099;
	xor.b64  	%rd5101, %rd5060, %rd5036;
	and.b64  	%rd5102, %rd5084, %rd5101;
	xor.b64  	%rd5103, %rd5102, %rd5036;
	add.s64 	%rd5104, %rd5012, %rd4845;
	add.s64 	%rd5105, %rd5104, %rd8768;
	add.s64 	%rd5106, %rd5105, %rd5103;
	add.s64 	%rd5107, %rd5106, %rd5100;
	add.s64 	%rd5108, %rd5107, %rd5023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3665,%dummy}, %rd5095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3666}, %rd5095;
	}
	shf.r.wrap.b32 	%r3667, %r3666, %r3665, 28;
	shf.r.wrap.b32 	%r3668, %r3665, %r3666, 28;
	mov.b64 	%rd5109, {%r3668, %r3667};
	shf.l.wrap.b32 	%r3669, %r3665, %r3666, 30;
	shf.l.wrap.b32 	%r3670, %r3666, %r3665, 30;
	mov.b64 	%rd5110, {%r3670, %r3669};
	xor.b64  	%rd5111, %rd5110, %rd5109;
	shf.l.wrap.b32 	%r3671, %r3665, %r3666, 25;
	shf.l.wrap.b32 	%r3672, %r3666, %r3665, 25;
	mov.b64 	%rd5112, {%r3672, %r3671};
	xor.b64  	%rd5113, %rd5111, %rd5112;
	xor.b64  	%rd5114, %rd5095, %rd5047;
	xor.b64  	%rd5115, %rd5095, %rd5071;
	and.b64  	%rd5116, %rd5115, %rd5114;
	xor.b64  	%rd5117, %rd5116, %rd5095;
	add.s64 	%rd5118, %rd5107, %rd5117;
	add.s64 	%rd5119, %rd5118, %rd5113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3673,%dummy}, %rd5108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3674}, %rd5108;
	}
	shf.r.wrap.b32 	%r3675, %r3674, %r3673, 14;
	shf.r.wrap.b32 	%r3676, %r3673, %r3674, 14;
	mov.b64 	%rd5120, {%r3676, %r3675};
	shf.r.wrap.b32 	%r3677, %r3674, %r3673, 18;
	shf.r.wrap.b32 	%r3678, %r3673, %r3674, 18;
	mov.b64 	%rd5121, {%r3678, %r3677};
	xor.b64  	%rd5122, %rd5121, %rd5120;
	shf.l.wrap.b32 	%r3679, %r3673, %r3674, 23;
	shf.l.wrap.b32 	%r3680, %r3674, %r3673, 23;
	mov.b64 	%rd5123, {%r3680, %r3679};
	xor.b64  	%rd5124, %rd5122, %rd5123;
	xor.b64  	%rd5125, %rd5084, %rd5060;
	and.b64  	%rd5126, %rd5108, %rd5125;
	xor.b64  	%rd5127, %rd5126, %rd5060;
	add.s64 	%rd5128, %rd5036, %rd4858;
	add.s64 	%rd5129, %rd5128, %rd8767;
	add.s64 	%rd5130, %rd5129, %rd5127;
	add.s64 	%rd5131, %rd5130, %rd5124;
	add.s64 	%rd5132, %rd5131, %rd5047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3681,%dummy}, %rd5119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3682}, %rd5119;
	}
	shf.r.wrap.b32 	%r3683, %r3682, %r3681, 28;
	shf.r.wrap.b32 	%r3684, %r3681, %r3682, 28;
	mov.b64 	%rd5133, {%r3684, %r3683};
	shf.l.wrap.b32 	%r3685, %r3681, %r3682, 30;
	shf.l.wrap.b32 	%r3686, %r3682, %r3681, 30;
	mov.b64 	%rd5134, {%r3686, %r3685};
	xor.b64  	%rd5135, %rd5134, %rd5133;
	shf.l.wrap.b32 	%r3687, %r3681, %r3682, 25;
	shf.l.wrap.b32 	%r3688, %r3682, %r3681, 25;
	mov.b64 	%rd5136, {%r3688, %r3687};
	xor.b64  	%rd5137, %rd5135, %rd5136;
	xor.b64  	%rd5138, %rd5119, %rd5071;
	xor.b64  	%rd5139, %rd5119, %rd5095;
	and.b64  	%rd5140, %rd5139, %rd5138;
	xor.b64  	%rd5141, %rd5140, %rd5119;
	add.s64 	%rd5142, %rd5131, %rd5141;
	add.s64 	%rd5143, %rd5142, %rd5137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3689,%dummy}, %rd5132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3690}, %rd5132;
	}
	shf.r.wrap.b32 	%r3691, %r3690, %r3689, 14;
	shf.r.wrap.b32 	%r3692, %r3689, %r3690, 14;
	mov.b64 	%rd5144, {%r3692, %r3691};
	shf.r.wrap.b32 	%r3693, %r3690, %r3689, 18;
	shf.r.wrap.b32 	%r3694, %r3689, %r3690, 18;
	mov.b64 	%rd5145, {%r3694, %r3693};
	xor.b64  	%rd5146, %rd5145, %rd5144;
	shf.l.wrap.b32 	%r3695, %r3689, %r3690, 23;
	shf.l.wrap.b32 	%r3696, %r3690, %r3689, 23;
	mov.b64 	%rd5147, {%r3696, %r3695};
	xor.b64  	%rd5148, %rd5146, %rd5147;
	xor.b64  	%rd5149, %rd5108, %rd5084;
	and.b64  	%rd5150, %rd5132, %rd5149;
	xor.b64  	%rd5151, %rd5150, %rd5084;
	add.s64 	%rd5152, %rd5060, %rd4871;
	add.s64 	%rd5153, %rd5152, %rd8766;
	add.s64 	%rd5154, %rd5153, %rd5151;
	add.s64 	%rd5155, %rd5154, %rd5148;
	add.s64 	%rd5156, %rd5155, %rd5071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3697,%dummy}, %rd5143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3698}, %rd5143;
	}
	shf.r.wrap.b32 	%r3699, %r3698, %r3697, 28;
	shf.r.wrap.b32 	%r3700, %r3697, %r3698, 28;
	mov.b64 	%rd5157, {%r3700, %r3699};
	shf.l.wrap.b32 	%r3701, %r3697, %r3698, 30;
	shf.l.wrap.b32 	%r3702, %r3698, %r3697, 30;
	mov.b64 	%rd5158, {%r3702, %r3701};
	xor.b64  	%rd5159, %rd5158, %rd5157;
	shf.l.wrap.b32 	%r3703, %r3697, %r3698, 25;
	shf.l.wrap.b32 	%r3704, %r3698, %r3697, 25;
	mov.b64 	%rd5160, {%r3704, %r3703};
	xor.b64  	%rd5161, %rd5159, %rd5160;
	xor.b64  	%rd5162, %rd5143, %rd5095;
	xor.b64  	%rd5163, %rd5143, %rd5119;
	and.b64  	%rd5164, %rd5163, %rd5162;
	xor.b64  	%rd5165, %rd5164, %rd5143;
	add.s64 	%rd5166, %rd5155, %rd5165;
	add.s64 	%rd5167, %rd5166, %rd5161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3705,%dummy}, %rd5156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3706}, %rd5156;
	}
	shf.r.wrap.b32 	%r3707, %r3706, %r3705, 14;
	shf.r.wrap.b32 	%r3708, %r3705, %r3706, 14;
	mov.b64 	%rd5168, {%r3708, %r3707};
	shf.r.wrap.b32 	%r3709, %r3706, %r3705, 18;
	shf.r.wrap.b32 	%r3710, %r3705, %r3706, 18;
	mov.b64 	%rd5169, {%r3710, %r3709};
	xor.b64  	%rd5170, %rd5169, %rd5168;
	shf.l.wrap.b32 	%r3711, %r3705, %r3706, 23;
	shf.l.wrap.b32 	%r3712, %r3706, %r3705, 23;
	mov.b64 	%rd5171, {%r3712, %r3711};
	xor.b64  	%rd5172, %rd5170, %rd5171;
	xor.b64  	%rd5173, %rd5132, %rd5108;
	and.b64  	%rd5174, %rd5156, %rd5173;
	xor.b64  	%rd5175, %rd5174, %rd5108;
	add.s64 	%rd5176, %rd5084, %rd4884;
	add.s64 	%rd5177, %rd5176, %rd8765;
	add.s64 	%rd5178, %rd5177, %rd5175;
	add.s64 	%rd5179, %rd5178, %rd5172;
	add.s64 	%rd5180, %rd5179, %rd5095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3713,%dummy}, %rd5167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3714}, %rd5167;
	}
	shf.r.wrap.b32 	%r3715, %r3714, %r3713, 28;
	shf.r.wrap.b32 	%r3716, %r3713, %r3714, 28;
	mov.b64 	%rd5181, {%r3716, %r3715};
	shf.l.wrap.b32 	%r3717, %r3713, %r3714, 30;
	shf.l.wrap.b32 	%r3718, %r3714, %r3713, 30;
	mov.b64 	%rd5182, {%r3718, %r3717};
	xor.b64  	%rd5183, %rd5182, %rd5181;
	shf.l.wrap.b32 	%r3719, %r3713, %r3714, 25;
	shf.l.wrap.b32 	%r3720, %r3714, %r3713, 25;
	mov.b64 	%rd5184, {%r3720, %r3719};
	xor.b64  	%rd5185, %rd5183, %rd5184;
	xor.b64  	%rd5186, %rd5167, %rd5119;
	xor.b64  	%rd5187, %rd5167, %rd5143;
	and.b64  	%rd5188, %rd5187, %rd5186;
	xor.b64  	%rd5189, %rd5188, %rd5167;
	add.s64 	%rd5190, %rd5179, %rd5189;
	add.s64 	%rd5191, %rd5190, %rd5185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3721,%dummy}, %rd5180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3722}, %rd5180;
	}
	shf.r.wrap.b32 	%r3723, %r3722, %r3721, 14;
	shf.r.wrap.b32 	%r3724, %r3721, %r3722, 14;
	mov.b64 	%rd5192, {%r3724, %r3723};
	shf.r.wrap.b32 	%r3725, %r3722, %r3721, 18;
	shf.r.wrap.b32 	%r3726, %r3721, %r3722, 18;
	mov.b64 	%rd5193, {%r3726, %r3725};
	xor.b64  	%rd5194, %rd5193, %rd5192;
	shf.l.wrap.b32 	%r3727, %r3721, %r3722, 23;
	shf.l.wrap.b32 	%r3728, %r3722, %r3721, 23;
	mov.b64 	%rd5195, {%r3728, %r3727};
	xor.b64  	%rd5196, %rd5194, %rd5195;
	xor.b64  	%rd5197, %rd5156, %rd5132;
	and.b64  	%rd5198, %rd5180, %rd5197;
	xor.b64  	%rd5199, %rd5198, %rd5132;
	add.s64 	%rd5200, %rd5108, %rd4897;
	add.s64 	%rd5201, %rd5200, %rd8764;
	add.s64 	%rd5202, %rd5201, %rd5199;
	add.s64 	%rd5203, %rd5202, %rd5196;
	add.s64 	%rd5204, %rd5203, %rd5119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3729,%dummy}, %rd5191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3730}, %rd5191;
	}
	shf.r.wrap.b32 	%r3731, %r3730, %r3729, 28;
	shf.r.wrap.b32 	%r3732, %r3729, %r3730, 28;
	mov.b64 	%rd5205, {%r3732, %r3731};
	shf.l.wrap.b32 	%r3733, %r3729, %r3730, 30;
	shf.l.wrap.b32 	%r3734, %r3730, %r3729, 30;
	mov.b64 	%rd5206, {%r3734, %r3733};
	xor.b64  	%rd5207, %rd5206, %rd5205;
	shf.l.wrap.b32 	%r3735, %r3729, %r3730, 25;
	shf.l.wrap.b32 	%r3736, %r3730, %r3729, 25;
	mov.b64 	%rd5208, {%r3736, %r3735};
	xor.b64  	%rd5209, %rd5207, %rd5208;
	xor.b64  	%rd5210, %rd5191, %rd5143;
	xor.b64  	%rd5211, %rd5191, %rd5167;
	and.b64  	%rd5212, %rd5211, %rd5210;
	xor.b64  	%rd5213, %rd5212, %rd5191;
	add.s64 	%rd5214, %rd5203, %rd5213;
	add.s64 	%rd5215, %rd5214, %rd5209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3737,%dummy}, %rd5204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3738}, %rd5204;
	}
	shf.r.wrap.b32 	%r3739, %r3738, %r3737, 14;
	shf.r.wrap.b32 	%r3740, %r3737, %r3738, 14;
	mov.b64 	%rd5216, {%r3740, %r3739};
	shf.r.wrap.b32 	%r3741, %r3738, %r3737, 18;
	shf.r.wrap.b32 	%r3742, %r3737, %r3738, 18;
	mov.b64 	%rd5217, {%r3742, %r3741};
	xor.b64  	%rd5218, %rd5217, %rd5216;
	shf.l.wrap.b32 	%r3743, %r3737, %r3738, 23;
	shf.l.wrap.b32 	%r3744, %r3738, %r3737, 23;
	mov.b64 	%rd5219, {%r3744, %r3743};
	xor.b64  	%rd5220, %rd5218, %rd5219;
	xor.b64  	%rd5221, %rd5180, %rd5156;
	and.b64  	%rd5222, %rd5204, %rd5221;
	xor.b64  	%rd5223, %rd5222, %rd5156;
	add.s64 	%rd5224, %rd5132, %rd4910;
	add.s64 	%rd5225, %rd5224, %rd8763;
	add.s64 	%rd5226, %rd5225, %rd5223;
	add.s64 	%rd5227, %rd5226, %rd5220;
	add.s64 	%rd5228, %rd5227, %rd5143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3745,%dummy}, %rd5215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3746}, %rd5215;
	}
	shf.r.wrap.b32 	%r3747, %r3746, %r3745, 28;
	shf.r.wrap.b32 	%r3748, %r3745, %r3746, 28;
	mov.b64 	%rd5229, {%r3748, %r3747};
	shf.l.wrap.b32 	%r3749, %r3745, %r3746, 30;
	shf.l.wrap.b32 	%r3750, %r3746, %r3745, 30;
	mov.b64 	%rd5230, {%r3750, %r3749};
	xor.b64  	%rd5231, %rd5230, %rd5229;
	shf.l.wrap.b32 	%r3751, %r3745, %r3746, 25;
	shf.l.wrap.b32 	%r3752, %r3746, %r3745, 25;
	mov.b64 	%rd5232, {%r3752, %r3751};
	xor.b64  	%rd5233, %rd5231, %rd5232;
	xor.b64  	%rd5234, %rd5215, %rd5167;
	xor.b64  	%rd5235, %rd5215, %rd5191;
	and.b64  	%rd5236, %rd5235, %rd5234;
	xor.b64  	%rd5237, %rd5236, %rd5215;
	add.s64 	%rd5238, %rd5227, %rd5237;
	add.s64 	%rd5239, %rd5238, %rd5233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3753,%dummy}, %rd5228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3754}, %rd5228;
	}
	shf.r.wrap.b32 	%r3755, %r3754, %r3753, 14;
	shf.r.wrap.b32 	%r3756, %r3753, %r3754, 14;
	mov.b64 	%rd5240, {%r3756, %r3755};
	shf.r.wrap.b32 	%r3757, %r3754, %r3753, 18;
	shf.r.wrap.b32 	%r3758, %r3753, %r3754, 18;
	mov.b64 	%rd5241, {%r3758, %r3757};
	xor.b64  	%rd5242, %rd5241, %rd5240;
	shf.l.wrap.b32 	%r3759, %r3753, %r3754, 23;
	shf.l.wrap.b32 	%r3760, %r3754, %r3753, 23;
	mov.b64 	%rd5243, {%r3760, %r3759};
	xor.b64  	%rd5244, %rd5242, %rd5243;
	xor.b64  	%rd5245, %rd5204, %rd5180;
	and.b64  	%rd5246, %rd5228, %rd5245;
	xor.b64  	%rd5247, %rd5246, %rd5180;
	add.s64 	%rd5248, %rd5156, %rd4923;
	add.s64 	%rd5249, %rd5248, %rd8762;
	add.s64 	%rd5250, %rd5249, %rd5247;
	add.s64 	%rd5251, %rd5250, %rd5244;
	add.s64 	%rd5252, %rd5251, %rd5167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3761,%dummy}, %rd5239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3762}, %rd5239;
	}
	shf.r.wrap.b32 	%r3763, %r3762, %r3761, 28;
	shf.r.wrap.b32 	%r3764, %r3761, %r3762, 28;
	mov.b64 	%rd5253, {%r3764, %r3763};
	shf.l.wrap.b32 	%r3765, %r3761, %r3762, 30;
	shf.l.wrap.b32 	%r3766, %r3762, %r3761, 30;
	mov.b64 	%rd5254, {%r3766, %r3765};
	xor.b64  	%rd5255, %rd5254, %rd5253;
	shf.l.wrap.b32 	%r3767, %r3761, %r3762, 25;
	shf.l.wrap.b32 	%r3768, %r3762, %r3761, 25;
	mov.b64 	%rd5256, {%r3768, %r3767};
	xor.b64  	%rd5257, %rd5255, %rd5256;
	xor.b64  	%rd5258, %rd5239, %rd5191;
	xor.b64  	%rd5259, %rd5239, %rd5215;
	and.b64  	%rd5260, %rd5259, %rd5258;
	xor.b64  	%rd5261, %rd5260, %rd5239;
	add.s64 	%rd5262, %rd5251, %rd5261;
	add.s64 	%rd5263, %rd5262, %rd5257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3769,%dummy}, %rd5252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3770}, %rd5252;
	}
	shf.r.wrap.b32 	%r3771, %r3770, %r3769, 14;
	shf.r.wrap.b32 	%r3772, %r3769, %r3770, 14;
	mov.b64 	%rd5264, {%r3772, %r3771};
	shf.r.wrap.b32 	%r3773, %r3770, %r3769, 18;
	shf.r.wrap.b32 	%r3774, %r3769, %r3770, 18;
	mov.b64 	%rd5265, {%r3774, %r3773};
	xor.b64  	%rd5266, %rd5265, %rd5264;
	shf.l.wrap.b32 	%r3775, %r3769, %r3770, 23;
	shf.l.wrap.b32 	%r3776, %r3770, %r3769, 23;
	mov.b64 	%rd5267, {%r3776, %r3775};
	xor.b64  	%rd5268, %rd5266, %rd5267;
	xor.b64  	%rd5269, %rd5228, %rd5204;
	and.b64  	%rd5270, %rd5252, %rd5269;
	xor.b64  	%rd5271, %rd5270, %rd5204;
	add.s64 	%rd5272, %rd5180, %rd4936;
	add.s64 	%rd5273, %rd5272, %rd8761;
	add.s64 	%rd5274, %rd5273, %rd5271;
	add.s64 	%rd5275, %rd5274, %rd5268;
	add.s64 	%rd5276, %rd5275, %rd5191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3777,%dummy}, %rd5263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3778}, %rd5263;
	}
	shf.r.wrap.b32 	%r3779, %r3778, %r3777, 28;
	shf.r.wrap.b32 	%r3780, %r3777, %r3778, 28;
	mov.b64 	%rd5277, {%r3780, %r3779};
	shf.l.wrap.b32 	%r3781, %r3777, %r3778, 30;
	shf.l.wrap.b32 	%r3782, %r3778, %r3777, 30;
	mov.b64 	%rd5278, {%r3782, %r3781};
	xor.b64  	%rd5279, %rd5278, %rd5277;
	shf.l.wrap.b32 	%r3783, %r3777, %r3778, 25;
	shf.l.wrap.b32 	%r3784, %r3778, %r3777, 25;
	mov.b64 	%rd5280, {%r3784, %r3783};
	xor.b64  	%rd5281, %rd5279, %rd5280;
	xor.b64  	%rd5282, %rd5263, %rd5215;
	xor.b64  	%rd5283, %rd5263, %rd5239;
	and.b64  	%rd5284, %rd5283, %rd5282;
	xor.b64  	%rd5285, %rd5284, %rd5263;
	add.s64 	%rd5286, %rd5275, %rd5285;
	add.s64 	%rd5287, %rd5286, %rd5281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3785,%dummy}, %rd5276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3786}, %rd5276;
	}
	shf.r.wrap.b32 	%r3787, %r3786, %r3785, 14;
	shf.r.wrap.b32 	%r3788, %r3785, %r3786, 14;
	mov.b64 	%rd5288, {%r3788, %r3787};
	shf.r.wrap.b32 	%r3789, %r3786, %r3785, 18;
	shf.r.wrap.b32 	%r3790, %r3785, %r3786, 18;
	mov.b64 	%rd5289, {%r3790, %r3789};
	xor.b64  	%rd5290, %rd5289, %rd5288;
	shf.l.wrap.b32 	%r3791, %r3785, %r3786, 23;
	shf.l.wrap.b32 	%r3792, %r3786, %r3785, 23;
	mov.b64 	%rd5291, {%r3792, %r3791};
	xor.b64  	%rd5292, %rd5290, %rd5291;
	xor.b64  	%rd5293, %rd5252, %rd5228;
	and.b64  	%rd5294, %rd5276, %rd5293;
	xor.b64  	%rd5295, %rd5294, %rd5228;
	add.s64 	%rd5296, %rd5204, %rd4949;
	add.s64 	%rd5297, %rd5296, %rd8760;
	add.s64 	%rd5298, %rd5297, %rd5295;
	add.s64 	%rd5299, %rd5298, %rd5292;
	add.s64 	%rd5300, %rd5299, %rd5215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3793,%dummy}, %rd5287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3794}, %rd5287;
	}
	shf.r.wrap.b32 	%r3795, %r3794, %r3793, 28;
	shf.r.wrap.b32 	%r3796, %r3793, %r3794, 28;
	mov.b64 	%rd5301, {%r3796, %r3795};
	shf.l.wrap.b32 	%r3797, %r3793, %r3794, 30;
	shf.l.wrap.b32 	%r3798, %r3794, %r3793, 30;
	mov.b64 	%rd5302, {%r3798, %r3797};
	xor.b64  	%rd5303, %rd5302, %rd5301;
	shf.l.wrap.b32 	%r3799, %r3793, %r3794, 25;
	shf.l.wrap.b32 	%r3800, %r3794, %r3793, 25;
	mov.b64 	%rd5304, {%r3800, %r3799};
	xor.b64  	%rd5305, %rd5303, %rd5304;
	xor.b64  	%rd5306, %rd5287, %rd5239;
	xor.b64  	%rd5307, %rd5287, %rd5263;
	and.b64  	%rd5308, %rd5307, %rd5306;
	xor.b64  	%rd5309, %rd5308, %rd5287;
	add.s64 	%rd5310, %rd5299, %rd5309;
	add.s64 	%rd5311, %rd5310, %rd5305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3801,%dummy}, %rd5300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3802}, %rd5300;
	}
	shf.r.wrap.b32 	%r3803, %r3802, %r3801, 14;
	shf.r.wrap.b32 	%r3804, %r3801, %r3802, 14;
	mov.b64 	%rd5312, {%r3804, %r3803};
	shf.r.wrap.b32 	%r3805, %r3802, %r3801, 18;
	shf.r.wrap.b32 	%r3806, %r3801, %r3802, 18;
	mov.b64 	%rd5313, {%r3806, %r3805};
	xor.b64  	%rd5314, %rd5313, %rd5312;
	shf.l.wrap.b32 	%r3807, %r3801, %r3802, 23;
	shf.l.wrap.b32 	%r3808, %r3802, %r3801, 23;
	mov.b64 	%rd5315, {%r3808, %r3807};
	xor.b64  	%rd5316, %rd5314, %rd5315;
	xor.b64  	%rd5317, %rd5276, %rd5252;
	and.b64  	%rd5318, %rd5300, %rd5317;
	xor.b64  	%rd5319, %rd5318, %rd5252;
	add.s64 	%rd5320, %rd5228, %rd4962;
	add.s64 	%rd5321, %rd5320, %rd8759;
	add.s64 	%rd5322, %rd5321, %rd5319;
	add.s64 	%rd5323, %rd5322, %rd5316;
	add.s64 	%rd5324, %rd5323, %rd5239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3809,%dummy}, %rd5311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3810}, %rd5311;
	}
	shf.r.wrap.b32 	%r3811, %r3810, %r3809, 28;
	shf.r.wrap.b32 	%r3812, %r3809, %r3810, 28;
	mov.b64 	%rd5325, {%r3812, %r3811};
	shf.l.wrap.b32 	%r3813, %r3809, %r3810, 30;
	shf.l.wrap.b32 	%r3814, %r3810, %r3809, 30;
	mov.b64 	%rd5326, {%r3814, %r3813};
	xor.b64  	%rd5327, %rd5326, %rd5325;
	shf.l.wrap.b32 	%r3815, %r3809, %r3810, 25;
	shf.l.wrap.b32 	%r3816, %r3810, %r3809, 25;
	mov.b64 	%rd5328, {%r3816, %r3815};
	xor.b64  	%rd5329, %rd5327, %rd5328;
	xor.b64  	%rd5330, %rd5311, %rd5263;
	xor.b64  	%rd5331, %rd5311, %rd5287;
	and.b64  	%rd5332, %rd5331, %rd5330;
	xor.b64  	%rd5333, %rd5332, %rd5311;
	add.s64 	%rd5334, %rd5323, %rd5333;
	add.s64 	%rd5335, %rd5334, %rd5329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3817,%dummy}, %rd5324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3818}, %rd5324;
	}
	shf.r.wrap.b32 	%r3819, %r3818, %r3817, 14;
	shf.r.wrap.b32 	%r3820, %r3817, %r3818, 14;
	mov.b64 	%rd5336, {%r3820, %r3819};
	shf.r.wrap.b32 	%r3821, %r3818, %r3817, 18;
	shf.r.wrap.b32 	%r3822, %r3817, %r3818, 18;
	mov.b64 	%rd5337, {%r3822, %r3821};
	xor.b64  	%rd5338, %rd5337, %rd5336;
	shf.l.wrap.b32 	%r3823, %r3817, %r3818, 23;
	shf.l.wrap.b32 	%r3824, %r3818, %r3817, 23;
	mov.b64 	%rd5339, {%r3824, %r3823};
	xor.b64  	%rd5340, %rd5338, %rd5339;
	xor.b64  	%rd5341, %rd5300, %rd5276;
	and.b64  	%rd5342, %rd5324, %rd5341;
	xor.b64  	%rd5343, %rd5342, %rd5276;
	add.s64 	%rd5344, %rd5252, %rd4975;
	add.s64 	%rd5345, %rd5344, %rd8758;
	add.s64 	%rd5346, %rd5345, %rd5343;
	add.s64 	%rd5347, %rd5346, %rd5340;
	add.s64 	%rd5348, %rd5347, %rd5263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3825,%dummy}, %rd5335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3826}, %rd5335;
	}
	shf.r.wrap.b32 	%r3827, %r3826, %r3825, 28;
	shf.r.wrap.b32 	%r3828, %r3825, %r3826, 28;
	mov.b64 	%rd5349, {%r3828, %r3827};
	shf.l.wrap.b32 	%r3829, %r3825, %r3826, 30;
	shf.l.wrap.b32 	%r3830, %r3826, %r3825, 30;
	mov.b64 	%rd5350, {%r3830, %r3829};
	xor.b64  	%rd5351, %rd5350, %rd5349;
	shf.l.wrap.b32 	%r3831, %r3825, %r3826, 25;
	shf.l.wrap.b32 	%r3832, %r3826, %r3825, 25;
	mov.b64 	%rd5352, {%r3832, %r3831};
	xor.b64  	%rd5353, %rd5351, %rd5352;
	xor.b64  	%rd5354, %rd5335, %rd5287;
	xor.b64  	%rd5355, %rd5335, %rd5311;
	and.b64  	%rd5356, %rd5355, %rd5354;
	xor.b64  	%rd5357, %rd5356, %rd5335;
	add.s64 	%rd5358, %rd5347, %rd5357;
	add.s64 	%rd5359, %rd5358, %rd5353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3833,%dummy}, %rd4962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3834}, %rd4962;
	}
	shf.r.wrap.b32 	%r3835, %r3834, %r3833, 19;
	shf.r.wrap.b32 	%r3836, %r3833, %r3834, 19;
	mov.b64 	%rd5360, {%r3836, %r3835};
	shf.l.wrap.b32 	%r3837, %r3833, %r3834, 3;
	shf.l.wrap.b32 	%r3838, %r3834, %r3833, 3;
	mov.b64 	%rd5361, {%r3838, %r3837};
	shr.u64 	%rd5362, %rd4962, 6;
	xor.b64  	%rd5363, %rd5360, %rd5362;
	xor.b64  	%rd5364, %rd5363, %rd5361;
	shf.r.wrap.b32 	%r3839, %r3448, %r3447, 1;
	shf.r.wrap.b32 	%r3840, %r3447, %r3448, 1;
	mov.b64 	%rd5365, {%r3840, %r3839};
	shf.r.wrap.b32 	%r3841, %r3448, %r3447, 8;
	shf.r.wrap.b32 	%r3842, %r3447, %r3448, 8;
	mov.b64 	%rd5366, {%r3842, %r3841};
	shr.u64 	%rd5367, %rd4793, 7;
	xor.b64  	%rd5368, %rd5365, %rd5367;
	xor.b64  	%rd5369, %rd5368, %rd5366;
	add.s64 	%rd5370, %rd4897, %rd4780;
	add.s64 	%rd5371, %rd5370, %rd5364;
	add.s64 	%rd5372, %rd5371, %rd5369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3843,%dummy}, %rd4975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3844}, %rd4975;
	}
	shf.r.wrap.b32 	%r3845, %r3844, %r3843, 19;
	shf.r.wrap.b32 	%r3846, %r3843, %r3844, 19;
	mov.b64 	%rd5373, {%r3846, %r3845};
	shf.l.wrap.b32 	%r3847, %r3843, %r3844, 3;
	shf.l.wrap.b32 	%r3848, %r3844, %r3843, 3;
	mov.b64 	%rd5374, {%r3848, %r3847};
	shr.u64 	%rd5375, %rd4975, 6;
	xor.b64  	%rd5376, %rd5373, %rd5375;
	xor.b64  	%rd5377, %rd5376, %rd5374;
	shf.r.wrap.b32 	%r3849, %r3458, %r3457, 1;
	shf.r.wrap.b32 	%r3850, %r3457, %r3458, 1;
	mov.b64 	%rd5378, {%r3850, %r3849};
	shf.r.wrap.b32 	%r3851, %r3458, %r3457, 8;
	shf.r.wrap.b32 	%r3852, %r3457, %r3458, 8;
	mov.b64 	%rd5379, {%r3852, %r3851};
	shr.u64 	%rd5380, %rd4806, 7;
	xor.b64  	%rd5381, %rd5378, %rd5380;
	xor.b64  	%rd5382, %rd5381, %rd5379;
	add.s64 	%rd5383, %rd4910, %rd4793;
	add.s64 	%rd5384, %rd5383, %rd5377;
	add.s64 	%rd5385, %rd5384, %rd5382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3853,%dummy}, %rd5372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3854}, %rd5372;
	}
	shf.r.wrap.b32 	%r3855, %r3854, %r3853, 19;
	shf.r.wrap.b32 	%r3856, %r3853, %r3854, 19;
	mov.b64 	%rd5386, {%r3856, %r3855};
	shf.l.wrap.b32 	%r3857, %r3853, %r3854, 3;
	shf.l.wrap.b32 	%r3858, %r3854, %r3853, 3;
	mov.b64 	%rd5387, {%r3858, %r3857};
	shr.u64 	%rd5388, %rd5372, 6;
	xor.b64  	%rd5389, %rd5386, %rd5388;
	xor.b64  	%rd5390, %rd5389, %rd5387;
	shf.r.wrap.b32 	%r3859, %r3468, %r3467, 1;
	shf.r.wrap.b32 	%r3860, %r3467, %r3468, 1;
	mov.b64 	%rd5391, {%r3860, %r3859};
	shf.r.wrap.b32 	%r3861, %r3468, %r3467, 8;
	shf.r.wrap.b32 	%r3862, %r3467, %r3468, 8;
	mov.b64 	%rd5392, {%r3862, %r3861};
	shr.u64 	%rd5393, %rd4819, 7;
	xor.b64  	%rd5394, %rd5391, %rd5393;
	xor.b64  	%rd5395, %rd5394, %rd5392;
	add.s64 	%rd5396, %rd4923, %rd4806;
	add.s64 	%rd5397, %rd5396, %rd5390;
	add.s64 	%rd5398, %rd5397, %rd5395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3863,%dummy}, %rd5385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3864}, %rd5385;
	}
	shf.r.wrap.b32 	%r3865, %r3864, %r3863, 19;
	shf.r.wrap.b32 	%r3866, %r3863, %r3864, 19;
	mov.b64 	%rd5399, {%r3866, %r3865};
	shf.l.wrap.b32 	%r3867, %r3863, %r3864, 3;
	shf.l.wrap.b32 	%r3868, %r3864, %r3863, 3;
	mov.b64 	%rd5400, {%r3868, %r3867};
	shr.u64 	%rd5401, %rd5385, 6;
	xor.b64  	%rd5402, %rd5399, %rd5401;
	xor.b64  	%rd5403, %rd5402, %rd5400;
	shf.r.wrap.b32 	%r3869, %r3478, %r3477, 1;
	shf.r.wrap.b32 	%r3870, %r3477, %r3478, 1;
	mov.b64 	%rd5404, {%r3870, %r3869};
	shf.r.wrap.b32 	%r3871, %r3478, %r3477, 8;
	shf.r.wrap.b32 	%r3872, %r3477, %r3478, 8;
	mov.b64 	%rd5405, {%r3872, %r3871};
	shr.u64 	%rd5406, %rd4832, 7;
	xor.b64  	%rd5407, %rd5404, %rd5406;
	xor.b64  	%rd5408, %rd5407, %rd5405;
	add.s64 	%rd5409, %rd4936, %rd4819;
	add.s64 	%rd5410, %rd5409, %rd5403;
	add.s64 	%rd5411, %rd5410, %rd5408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3873,%dummy}, %rd5398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3874}, %rd5398;
	}
	shf.r.wrap.b32 	%r3875, %r3874, %r3873, 19;
	shf.r.wrap.b32 	%r3876, %r3873, %r3874, 19;
	mov.b64 	%rd5412, {%r3876, %r3875};
	shf.l.wrap.b32 	%r3877, %r3873, %r3874, 3;
	shf.l.wrap.b32 	%r3878, %r3874, %r3873, 3;
	mov.b64 	%rd5413, {%r3878, %r3877};
	shr.u64 	%rd5414, %rd5398, 6;
	xor.b64  	%rd5415, %rd5412, %rd5414;
	xor.b64  	%rd5416, %rd5415, %rd5413;
	shf.r.wrap.b32 	%r3879, %r3488, %r3487, 1;
	shf.r.wrap.b32 	%r3880, %r3487, %r3488, 1;
	mov.b64 	%rd5417, {%r3880, %r3879};
	shf.r.wrap.b32 	%r3881, %r3488, %r3487, 8;
	shf.r.wrap.b32 	%r3882, %r3487, %r3488, 8;
	mov.b64 	%rd5418, {%r3882, %r3881};
	shr.u64 	%rd5419, %rd4845, 7;
	xor.b64  	%rd5420, %rd5417, %rd5419;
	xor.b64  	%rd5421, %rd5420, %rd5418;
	add.s64 	%rd5422, %rd4949, %rd4832;
	add.s64 	%rd5423, %rd5422, %rd5416;
	add.s64 	%rd5424, %rd5423, %rd5421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3883,%dummy}, %rd5411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3884}, %rd5411;
	}
	shf.r.wrap.b32 	%r3885, %r3884, %r3883, 19;
	shf.r.wrap.b32 	%r3886, %r3883, %r3884, 19;
	mov.b64 	%rd5425, {%r3886, %r3885};
	shf.l.wrap.b32 	%r3887, %r3883, %r3884, 3;
	shf.l.wrap.b32 	%r3888, %r3884, %r3883, 3;
	mov.b64 	%rd5426, {%r3888, %r3887};
	shr.u64 	%rd5427, %rd5411, 6;
	xor.b64  	%rd5428, %rd5425, %rd5427;
	xor.b64  	%rd5429, %rd5428, %rd5426;
	shf.r.wrap.b32 	%r3889, %r3498, %r3497, 1;
	shf.r.wrap.b32 	%r3890, %r3497, %r3498, 1;
	mov.b64 	%rd5430, {%r3890, %r3889};
	shf.r.wrap.b32 	%r3891, %r3498, %r3497, 8;
	shf.r.wrap.b32 	%r3892, %r3497, %r3498, 8;
	mov.b64 	%rd5431, {%r3892, %r3891};
	shr.u64 	%rd5432, %rd4858, 7;
	xor.b64  	%rd5433, %rd5430, %rd5432;
	xor.b64  	%rd5434, %rd5433, %rd5431;
	add.s64 	%rd5435, %rd4962, %rd4845;
	add.s64 	%rd5436, %rd5435, %rd5429;
	add.s64 	%rd5437, %rd5436, %rd5434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3893,%dummy}, %rd5424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3894}, %rd5424;
	}
	shf.r.wrap.b32 	%r3895, %r3894, %r3893, 19;
	shf.r.wrap.b32 	%r3896, %r3893, %r3894, 19;
	mov.b64 	%rd5438, {%r3896, %r3895};
	shf.l.wrap.b32 	%r3897, %r3893, %r3894, 3;
	shf.l.wrap.b32 	%r3898, %r3894, %r3893, 3;
	mov.b64 	%rd5439, {%r3898, %r3897};
	shr.u64 	%rd5440, %rd5424, 6;
	xor.b64  	%rd5441, %rd5438, %rd5440;
	xor.b64  	%rd5442, %rd5441, %rd5439;
	shf.r.wrap.b32 	%r3899, %r3508, %r3507, 1;
	shf.r.wrap.b32 	%r3900, %r3507, %r3508, 1;
	mov.b64 	%rd5443, {%r3900, %r3899};
	shf.r.wrap.b32 	%r3901, %r3508, %r3507, 8;
	shf.r.wrap.b32 	%r3902, %r3507, %r3508, 8;
	mov.b64 	%rd5444, {%r3902, %r3901};
	shr.u64 	%rd5445, %rd4871, 7;
	xor.b64  	%rd5446, %rd5443, %rd5445;
	xor.b64  	%rd5447, %rd5446, %rd5444;
	add.s64 	%rd5448, %rd4975, %rd4858;
	add.s64 	%rd5449, %rd5448, %rd5442;
	add.s64 	%rd5450, %rd5449, %rd5447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3903,%dummy}, %rd5437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3904}, %rd5437;
	}
	shf.r.wrap.b32 	%r3905, %r3904, %r3903, 19;
	shf.r.wrap.b32 	%r3906, %r3903, %r3904, 19;
	mov.b64 	%rd5451, {%r3906, %r3905};
	shf.l.wrap.b32 	%r3907, %r3903, %r3904, 3;
	shf.l.wrap.b32 	%r3908, %r3904, %r3903, 3;
	mov.b64 	%rd5452, {%r3908, %r3907};
	shr.u64 	%rd5453, %rd5437, 6;
	xor.b64  	%rd5454, %rd5451, %rd5453;
	xor.b64  	%rd5455, %rd5454, %rd5452;
	shf.r.wrap.b32 	%r3909, %r3518, %r3517, 1;
	shf.r.wrap.b32 	%r3910, %r3517, %r3518, 1;
	mov.b64 	%rd5456, {%r3910, %r3909};
	shf.r.wrap.b32 	%r3911, %r3518, %r3517, 8;
	shf.r.wrap.b32 	%r3912, %r3517, %r3518, 8;
	mov.b64 	%rd5457, {%r3912, %r3911};
	shr.u64 	%rd5458, %rd4884, 7;
	xor.b64  	%rd5459, %rd5456, %rd5458;
	xor.b64  	%rd5460, %rd5459, %rd5457;
	add.s64 	%rd5461, %rd5372, %rd4871;
	add.s64 	%rd5462, %rd5461, %rd5455;
	add.s64 	%rd5463, %rd5462, %rd5460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3913,%dummy}, %rd5450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3914}, %rd5450;
	}
	shf.r.wrap.b32 	%r3915, %r3914, %r3913, 19;
	shf.r.wrap.b32 	%r3916, %r3913, %r3914, 19;
	mov.b64 	%rd5464, {%r3916, %r3915};
	shf.l.wrap.b32 	%r3917, %r3913, %r3914, 3;
	shf.l.wrap.b32 	%r3918, %r3914, %r3913, 3;
	mov.b64 	%rd5465, {%r3918, %r3917};
	shr.u64 	%rd5466, %rd5450, 6;
	xor.b64  	%rd5467, %rd5464, %rd5466;
	xor.b64  	%rd5468, %rd5467, %rd5465;
	shf.r.wrap.b32 	%r3919, %r3528, %r3527, 1;
	shf.r.wrap.b32 	%r3920, %r3527, %r3528, 1;
	mov.b64 	%rd5469, {%r3920, %r3919};
	shf.r.wrap.b32 	%r3921, %r3528, %r3527, 8;
	shf.r.wrap.b32 	%r3922, %r3527, %r3528, 8;
	mov.b64 	%rd5470, {%r3922, %r3921};
	shr.u64 	%rd5471, %rd4897, 7;
	xor.b64  	%rd5472, %rd5469, %rd5471;
	xor.b64  	%rd5473, %rd5472, %rd5470;
	add.s64 	%rd5474, %rd5385, %rd4884;
	add.s64 	%rd5475, %rd5474, %rd5468;
	add.s64 	%rd5476, %rd5475, %rd5473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3923,%dummy}, %rd5463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3924}, %rd5463;
	}
	shf.r.wrap.b32 	%r3925, %r3924, %r3923, 19;
	shf.r.wrap.b32 	%r3926, %r3923, %r3924, 19;
	mov.b64 	%rd5477, {%r3926, %r3925};
	shf.l.wrap.b32 	%r3927, %r3923, %r3924, 3;
	shf.l.wrap.b32 	%r3928, %r3924, %r3923, 3;
	mov.b64 	%rd5478, {%r3928, %r3927};
	shr.u64 	%rd5479, %rd5463, 6;
	xor.b64  	%rd5480, %rd5477, %rd5479;
	xor.b64  	%rd5481, %rd5480, %rd5478;
	shf.r.wrap.b32 	%r3929, %r3538, %r3537, 1;
	shf.r.wrap.b32 	%r3930, %r3537, %r3538, 1;
	mov.b64 	%rd5482, {%r3930, %r3929};
	shf.r.wrap.b32 	%r3931, %r3538, %r3537, 8;
	shf.r.wrap.b32 	%r3932, %r3537, %r3538, 8;
	mov.b64 	%rd5483, {%r3932, %r3931};
	shr.u64 	%rd5484, %rd4910, 7;
	xor.b64  	%rd5485, %rd5482, %rd5484;
	xor.b64  	%rd5486, %rd5485, %rd5483;
	add.s64 	%rd5487, %rd5398, %rd4897;
	add.s64 	%rd5488, %rd5487, %rd5481;
	add.s64 	%rd5489, %rd5488, %rd5486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3933,%dummy}, %rd5476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3934}, %rd5476;
	}
	shf.r.wrap.b32 	%r3935, %r3934, %r3933, 19;
	shf.r.wrap.b32 	%r3936, %r3933, %r3934, 19;
	mov.b64 	%rd5490, {%r3936, %r3935};
	shf.l.wrap.b32 	%r3937, %r3933, %r3934, 3;
	shf.l.wrap.b32 	%r3938, %r3934, %r3933, 3;
	mov.b64 	%rd5491, {%r3938, %r3937};
	shr.u64 	%rd5492, %rd5476, 6;
	xor.b64  	%rd5493, %rd5490, %rd5492;
	xor.b64  	%rd5494, %rd5493, %rd5491;
	shf.r.wrap.b32 	%r3939, %r3548, %r3547, 1;
	shf.r.wrap.b32 	%r3940, %r3547, %r3548, 1;
	mov.b64 	%rd5495, {%r3940, %r3939};
	shf.r.wrap.b32 	%r3941, %r3548, %r3547, 8;
	shf.r.wrap.b32 	%r3942, %r3547, %r3548, 8;
	mov.b64 	%rd5496, {%r3942, %r3941};
	shr.u64 	%rd5497, %rd4923, 7;
	xor.b64  	%rd5498, %rd5495, %rd5497;
	xor.b64  	%rd5499, %rd5498, %rd5496;
	add.s64 	%rd5500, %rd5411, %rd4910;
	add.s64 	%rd5501, %rd5500, %rd5494;
	add.s64 	%rd5502, %rd5501, %rd5499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3943,%dummy}, %rd5489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3944}, %rd5489;
	}
	shf.r.wrap.b32 	%r3945, %r3944, %r3943, 19;
	shf.r.wrap.b32 	%r3946, %r3943, %r3944, 19;
	mov.b64 	%rd5503, {%r3946, %r3945};
	shf.l.wrap.b32 	%r3947, %r3943, %r3944, 3;
	shf.l.wrap.b32 	%r3948, %r3944, %r3943, 3;
	mov.b64 	%rd5504, {%r3948, %r3947};
	shr.u64 	%rd5505, %rd5489, 6;
	xor.b64  	%rd5506, %rd5503, %rd5505;
	xor.b64  	%rd5507, %rd5506, %rd5504;
	shf.r.wrap.b32 	%r3949, %r3558, %r3557, 1;
	shf.r.wrap.b32 	%r3950, %r3557, %r3558, 1;
	mov.b64 	%rd5508, {%r3950, %r3949};
	shf.r.wrap.b32 	%r3951, %r3558, %r3557, 8;
	shf.r.wrap.b32 	%r3952, %r3557, %r3558, 8;
	mov.b64 	%rd5509, {%r3952, %r3951};
	shr.u64 	%rd5510, %rd4936, 7;
	xor.b64  	%rd5511, %rd5508, %rd5510;
	xor.b64  	%rd5512, %rd5511, %rd5509;
	add.s64 	%rd5513, %rd5424, %rd4923;
	add.s64 	%rd5514, %rd5513, %rd5507;
	add.s64 	%rd5515, %rd5514, %rd5512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3953,%dummy}, %rd5502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3954}, %rd5502;
	}
	shf.r.wrap.b32 	%r3955, %r3954, %r3953, 19;
	shf.r.wrap.b32 	%r3956, %r3953, %r3954, 19;
	mov.b64 	%rd5516, {%r3956, %r3955};
	shf.l.wrap.b32 	%r3957, %r3953, %r3954, 3;
	shf.l.wrap.b32 	%r3958, %r3954, %r3953, 3;
	mov.b64 	%rd5517, {%r3958, %r3957};
	shr.u64 	%rd5518, %rd5502, 6;
	xor.b64  	%rd5519, %rd5516, %rd5518;
	xor.b64  	%rd5520, %rd5519, %rd5517;
	shf.r.wrap.b32 	%r3959, %r3568, %r3567, 1;
	shf.r.wrap.b32 	%r3960, %r3567, %r3568, 1;
	mov.b64 	%rd5521, {%r3960, %r3959};
	shf.r.wrap.b32 	%r3961, %r3568, %r3567, 8;
	shf.r.wrap.b32 	%r3962, %r3567, %r3568, 8;
	mov.b64 	%rd5522, {%r3962, %r3961};
	shr.u64 	%rd5523, %rd4949, 7;
	xor.b64  	%rd5524, %rd5521, %rd5523;
	xor.b64  	%rd5525, %rd5524, %rd5522;
	add.s64 	%rd5526, %rd5437, %rd4936;
	add.s64 	%rd5527, %rd5526, %rd5520;
	add.s64 	%rd5528, %rd5527, %rd5525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3963,%dummy}, %rd5515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3964}, %rd5515;
	}
	shf.r.wrap.b32 	%r3965, %r3964, %r3963, 19;
	shf.r.wrap.b32 	%r3966, %r3963, %r3964, 19;
	mov.b64 	%rd5529, {%r3966, %r3965};
	shf.l.wrap.b32 	%r3967, %r3963, %r3964, 3;
	shf.l.wrap.b32 	%r3968, %r3964, %r3963, 3;
	mov.b64 	%rd5530, {%r3968, %r3967};
	shr.u64 	%rd5531, %rd5515, 6;
	xor.b64  	%rd5532, %rd5529, %rd5531;
	xor.b64  	%rd5533, %rd5532, %rd5530;
	shf.r.wrap.b32 	%r3969, %r3834, %r3833, 1;
	shf.r.wrap.b32 	%r3970, %r3833, %r3834, 1;
	mov.b64 	%rd5534, {%r3970, %r3969};
	shf.r.wrap.b32 	%r3971, %r3834, %r3833, 8;
	shf.r.wrap.b32 	%r3972, %r3833, %r3834, 8;
	mov.b64 	%rd5535, {%r3972, %r3971};
	shr.u64 	%rd5536, %rd4962, 7;
	xor.b64  	%rd5537, %rd5534, %rd5536;
	xor.b64  	%rd5538, %rd5537, %rd5535;
	add.s64 	%rd5539, %rd5450, %rd4949;
	add.s64 	%rd5540, %rd5539, %rd5533;
	add.s64 	%rd5541, %rd5540, %rd5538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3973,%dummy}, %rd5528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3974}, %rd5528;
	}
	shf.r.wrap.b32 	%r3975, %r3974, %r3973, 19;
	shf.r.wrap.b32 	%r3976, %r3973, %r3974, 19;
	mov.b64 	%rd5542, {%r3976, %r3975};
	shf.l.wrap.b32 	%r3977, %r3973, %r3974, 3;
	shf.l.wrap.b32 	%r3978, %r3974, %r3973, 3;
	mov.b64 	%rd5543, {%r3978, %r3977};
	shr.u64 	%rd5544, %rd5528, 6;
	xor.b64  	%rd5545, %rd5542, %rd5544;
	xor.b64  	%rd5546, %rd5545, %rd5543;
	shf.r.wrap.b32 	%r3979, %r3844, %r3843, 1;
	shf.r.wrap.b32 	%r3980, %r3843, %r3844, 1;
	mov.b64 	%rd5547, {%r3980, %r3979};
	shf.r.wrap.b32 	%r3981, %r3844, %r3843, 8;
	shf.r.wrap.b32 	%r3982, %r3843, %r3844, 8;
	mov.b64 	%rd5548, {%r3982, %r3981};
	shr.u64 	%rd5549, %rd4975, 7;
	xor.b64  	%rd5550, %rd5547, %rd5549;
	xor.b64  	%rd5551, %rd5550, %rd5548;
	add.s64 	%rd5552, %rd5463, %rd4962;
	add.s64 	%rd5553, %rd5552, %rd5546;
	add.s64 	%rd5554, %rd5553, %rd5551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3983,%dummy}, %rd5541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3984}, %rd5541;
	}
	shf.r.wrap.b32 	%r3985, %r3984, %r3983, 19;
	shf.r.wrap.b32 	%r3986, %r3983, %r3984, 19;
	mov.b64 	%rd5555, {%r3986, %r3985};
	shf.l.wrap.b32 	%r3987, %r3983, %r3984, 3;
	shf.l.wrap.b32 	%r3988, %r3984, %r3983, 3;
	mov.b64 	%rd5556, {%r3988, %r3987};
	shr.u64 	%rd5557, %rd5541, 6;
	xor.b64  	%rd5558, %rd5555, %rd5557;
	xor.b64  	%rd5559, %rd5558, %rd5556;
	shf.r.wrap.b32 	%r3989, %r3854, %r3853, 1;
	shf.r.wrap.b32 	%r3990, %r3853, %r3854, 1;
	mov.b64 	%rd5560, {%r3990, %r3989};
	shf.r.wrap.b32 	%r3991, %r3854, %r3853, 8;
	shf.r.wrap.b32 	%r3992, %r3853, %r3854, 8;
	mov.b64 	%rd5561, {%r3992, %r3991};
	shr.u64 	%rd5562, %rd5372, 7;
	xor.b64  	%rd5563, %rd5560, %rd5562;
	xor.b64  	%rd5564, %rd5563, %rd5561;
	add.s64 	%rd5565, %rd5476, %rd4975;
	add.s64 	%rd5566, %rd5565, %rd5559;
	add.s64 	%rd5567, %rd5566, %rd5564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3993,%dummy}, %rd5348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3994}, %rd5348;
	}
	shf.r.wrap.b32 	%r3995, %r3994, %r3993, 14;
	shf.r.wrap.b32 	%r3996, %r3993, %r3994, 14;
	mov.b64 	%rd5568, {%r3996, %r3995};
	shf.r.wrap.b32 	%r3997, %r3994, %r3993, 18;
	shf.r.wrap.b32 	%r3998, %r3993, %r3994, 18;
	mov.b64 	%rd5569, {%r3998, %r3997};
	xor.b64  	%rd5570, %rd5569, %rd5568;
	shf.l.wrap.b32 	%r3999, %r3993, %r3994, 23;
	shf.l.wrap.b32 	%r4000, %r3994, %r3993, 23;
	mov.b64 	%rd5571, {%r4000, %r3999};
	xor.b64  	%rd5572, %rd5570, %rd5571;
	xor.b64  	%rd5573, %rd5324, %rd5300;
	and.b64  	%rd5574, %rd5573, %rd5348;
	xor.b64  	%rd5575, %rd5574, %rd5300;
	add.s64 	%rd5576, %rd5575, %rd5276;
	add.s64 	%rd5577, %rd5576, %rd5372;
	add.s64 	%rd5578, %rd5577, %rd8757;
	add.s64 	%rd5579, %rd5578, %rd5572;
	add.s64 	%rd5580, %rd5579, %rd5287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4001,%dummy}, %rd5359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4002}, %rd5359;
	}
	shf.r.wrap.b32 	%r4003, %r4002, %r4001, 28;
	shf.r.wrap.b32 	%r4004, %r4001, %r4002, 28;
	mov.b64 	%rd5581, {%r4004, %r4003};
	shf.l.wrap.b32 	%r4005, %r4001, %r4002, 30;
	shf.l.wrap.b32 	%r4006, %r4002, %r4001, 30;
	mov.b64 	%rd5582, {%r4006, %r4005};
	xor.b64  	%rd5583, %rd5582, %rd5581;
	shf.l.wrap.b32 	%r4007, %r4001, %r4002, 25;
	shf.l.wrap.b32 	%r4008, %r4002, %r4001, 25;
	mov.b64 	%rd5584, {%r4008, %r4007};
	xor.b64  	%rd5585, %rd5583, %rd5584;
	xor.b64  	%rd5586, %rd5359, %rd5311;
	xor.b64  	%rd5587, %rd5359, %rd5335;
	and.b64  	%rd5588, %rd5587, %rd5586;
	xor.b64  	%rd5589, %rd5588, %rd5359;
	add.s64 	%rd5590, %rd5579, %rd5589;
	add.s64 	%rd5591, %rd5590, %rd5585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4009,%dummy}, %rd5580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4010}, %rd5580;
	}
	shf.r.wrap.b32 	%r4011, %r4010, %r4009, 14;
	shf.r.wrap.b32 	%r4012, %r4009, %r4010, 14;
	mov.b64 	%rd5592, {%r4012, %r4011};
	shf.r.wrap.b32 	%r4013, %r4010, %r4009, 18;
	shf.r.wrap.b32 	%r4014, %r4009, %r4010, 18;
	mov.b64 	%rd5593, {%r4014, %r4013};
	xor.b64  	%rd5594, %rd5593, %rd5592;
	shf.l.wrap.b32 	%r4015, %r4009, %r4010, 23;
	shf.l.wrap.b32 	%r4016, %r4010, %r4009, 23;
	mov.b64 	%rd5595, {%r4016, %r4015};
	xor.b64  	%rd5596, %rd5594, %rd5595;
	xor.b64  	%rd5597, %rd5348, %rd5324;
	and.b64  	%rd5598, %rd5580, %rd5597;
	xor.b64  	%rd5599, %rd5598, %rd5324;
	add.s64 	%rd5600, %rd5385, %rd5300;
	add.s64 	%rd5601, %rd5600, %rd8756;
	add.s64 	%rd5602, %rd5601, %rd5599;
	add.s64 	%rd5603, %rd5602, %rd5596;
	add.s64 	%rd5604, %rd5603, %rd5311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4017,%dummy}, %rd5591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4018}, %rd5591;
	}
	shf.r.wrap.b32 	%r4019, %r4018, %r4017, 28;
	shf.r.wrap.b32 	%r4020, %r4017, %r4018, 28;
	mov.b64 	%rd5605, {%r4020, %r4019};
	shf.l.wrap.b32 	%r4021, %r4017, %r4018, 30;
	shf.l.wrap.b32 	%r4022, %r4018, %r4017, 30;
	mov.b64 	%rd5606, {%r4022, %r4021};
	xor.b64  	%rd5607, %rd5606, %rd5605;
	shf.l.wrap.b32 	%r4023, %r4017, %r4018, 25;
	shf.l.wrap.b32 	%r4024, %r4018, %r4017, 25;
	mov.b64 	%rd5608, {%r4024, %r4023};
	xor.b64  	%rd5609, %rd5607, %rd5608;
	xor.b64  	%rd5610, %rd5591, %rd5335;
	xor.b64  	%rd5611, %rd5591, %rd5359;
	and.b64  	%rd5612, %rd5611, %rd5610;
	xor.b64  	%rd5613, %rd5612, %rd5591;
	add.s64 	%rd5614, %rd5603, %rd5613;
	add.s64 	%rd5615, %rd5614, %rd5609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4025,%dummy}, %rd5604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4026}, %rd5604;
	}
	shf.r.wrap.b32 	%r4027, %r4026, %r4025, 14;
	shf.r.wrap.b32 	%r4028, %r4025, %r4026, 14;
	mov.b64 	%rd5616, {%r4028, %r4027};
	shf.r.wrap.b32 	%r4029, %r4026, %r4025, 18;
	shf.r.wrap.b32 	%r4030, %r4025, %r4026, 18;
	mov.b64 	%rd5617, {%r4030, %r4029};
	xor.b64  	%rd5618, %rd5617, %rd5616;
	shf.l.wrap.b32 	%r4031, %r4025, %r4026, 23;
	shf.l.wrap.b32 	%r4032, %r4026, %r4025, 23;
	mov.b64 	%rd5619, {%r4032, %r4031};
	xor.b64  	%rd5620, %rd5618, %rd5619;
	xor.b64  	%rd5621, %rd5580, %rd5348;
	and.b64  	%rd5622, %rd5604, %rd5621;
	xor.b64  	%rd5623, %rd5622, %rd5348;
	add.s64 	%rd5624, %rd5398, %rd5324;
	add.s64 	%rd5625, %rd5624, %rd8755;
	add.s64 	%rd5626, %rd5625, %rd5623;
	add.s64 	%rd5627, %rd5626, %rd5620;
	add.s64 	%rd5628, %rd5627, %rd5335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4033,%dummy}, %rd5615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4034}, %rd5615;
	}
	shf.r.wrap.b32 	%r4035, %r4034, %r4033, 28;
	shf.r.wrap.b32 	%r4036, %r4033, %r4034, 28;
	mov.b64 	%rd5629, {%r4036, %r4035};
	shf.l.wrap.b32 	%r4037, %r4033, %r4034, 30;
	shf.l.wrap.b32 	%r4038, %r4034, %r4033, 30;
	mov.b64 	%rd5630, {%r4038, %r4037};
	xor.b64  	%rd5631, %rd5630, %rd5629;
	shf.l.wrap.b32 	%r4039, %r4033, %r4034, 25;
	shf.l.wrap.b32 	%r4040, %r4034, %r4033, 25;
	mov.b64 	%rd5632, {%r4040, %r4039};
	xor.b64  	%rd5633, %rd5631, %rd5632;
	xor.b64  	%rd5634, %rd5615, %rd5359;
	xor.b64  	%rd5635, %rd5615, %rd5591;
	and.b64  	%rd5636, %rd5635, %rd5634;
	xor.b64  	%rd5637, %rd5636, %rd5615;
	add.s64 	%rd5638, %rd5627, %rd5637;
	add.s64 	%rd5639, %rd5638, %rd5633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4041,%dummy}, %rd5628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4042}, %rd5628;
	}
	shf.r.wrap.b32 	%r4043, %r4042, %r4041, 14;
	shf.r.wrap.b32 	%r4044, %r4041, %r4042, 14;
	mov.b64 	%rd5640, {%r4044, %r4043};
	shf.r.wrap.b32 	%r4045, %r4042, %r4041, 18;
	shf.r.wrap.b32 	%r4046, %r4041, %r4042, 18;
	mov.b64 	%rd5641, {%r4046, %r4045};
	xor.b64  	%rd5642, %rd5641, %rd5640;
	shf.l.wrap.b32 	%r4047, %r4041, %r4042, 23;
	shf.l.wrap.b32 	%r4048, %r4042, %r4041, 23;
	mov.b64 	%rd5643, {%r4048, %r4047};
	xor.b64  	%rd5644, %rd5642, %rd5643;
	xor.b64  	%rd5645, %rd5604, %rd5580;
	and.b64  	%rd5646, %rd5628, %rd5645;
	xor.b64  	%rd5647, %rd5646, %rd5580;
	add.s64 	%rd5648, %rd5411, %rd5348;
	add.s64 	%rd5649, %rd5648, %rd8754;
	add.s64 	%rd5650, %rd5649, %rd5647;
	add.s64 	%rd5651, %rd5650, %rd5644;
	add.s64 	%rd5652, %rd5651, %rd5359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4049,%dummy}, %rd5639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4050}, %rd5639;
	}
	shf.r.wrap.b32 	%r4051, %r4050, %r4049, 28;
	shf.r.wrap.b32 	%r4052, %r4049, %r4050, 28;
	mov.b64 	%rd5653, {%r4052, %r4051};
	shf.l.wrap.b32 	%r4053, %r4049, %r4050, 30;
	shf.l.wrap.b32 	%r4054, %r4050, %r4049, 30;
	mov.b64 	%rd5654, {%r4054, %r4053};
	xor.b64  	%rd5655, %rd5654, %rd5653;
	shf.l.wrap.b32 	%r4055, %r4049, %r4050, 25;
	shf.l.wrap.b32 	%r4056, %r4050, %r4049, 25;
	mov.b64 	%rd5656, {%r4056, %r4055};
	xor.b64  	%rd5657, %rd5655, %rd5656;
	xor.b64  	%rd5658, %rd5639, %rd5591;
	xor.b64  	%rd5659, %rd5639, %rd5615;
	and.b64  	%rd5660, %rd5659, %rd5658;
	xor.b64  	%rd5661, %rd5660, %rd5639;
	add.s64 	%rd5662, %rd5651, %rd5661;
	add.s64 	%rd5663, %rd5662, %rd5657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4057,%dummy}, %rd5652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4058}, %rd5652;
	}
	shf.r.wrap.b32 	%r4059, %r4058, %r4057, 14;
	shf.r.wrap.b32 	%r4060, %r4057, %r4058, 14;
	mov.b64 	%rd5664, {%r4060, %r4059};
	shf.r.wrap.b32 	%r4061, %r4058, %r4057, 18;
	shf.r.wrap.b32 	%r4062, %r4057, %r4058, 18;
	mov.b64 	%rd5665, {%r4062, %r4061};
	xor.b64  	%rd5666, %rd5665, %rd5664;
	shf.l.wrap.b32 	%r4063, %r4057, %r4058, 23;
	shf.l.wrap.b32 	%r4064, %r4058, %r4057, 23;
	mov.b64 	%rd5667, {%r4064, %r4063};
	xor.b64  	%rd5668, %rd5666, %rd5667;
	xor.b64  	%rd5669, %rd5628, %rd5604;
	and.b64  	%rd5670, %rd5652, %rd5669;
	xor.b64  	%rd5671, %rd5670, %rd5604;
	add.s64 	%rd5672, %rd5580, %rd5424;
	add.s64 	%rd5673, %rd5672, %rd8753;
	add.s64 	%rd5674, %rd5673, %rd5671;
	add.s64 	%rd5675, %rd5674, %rd5668;
	add.s64 	%rd5676, %rd5675, %rd5591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4065,%dummy}, %rd5663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4066}, %rd5663;
	}
	shf.r.wrap.b32 	%r4067, %r4066, %r4065, 28;
	shf.r.wrap.b32 	%r4068, %r4065, %r4066, 28;
	mov.b64 	%rd5677, {%r4068, %r4067};
	shf.l.wrap.b32 	%r4069, %r4065, %r4066, 30;
	shf.l.wrap.b32 	%r4070, %r4066, %r4065, 30;
	mov.b64 	%rd5678, {%r4070, %r4069};
	xor.b64  	%rd5679, %rd5678, %rd5677;
	shf.l.wrap.b32 	%r4071, %r4065, %r4066, 25;
	shf.l.wrap.b32 	%r4072, %r4066, %r4065, 25;
	mov.b64 	%rd5680, {%r4072, %r4071};
	xor.b64  	%rd5681, %rd5679, %rd5680;
	xor.b64  	%rd5682, %rd5663, %rd5615;
	xor.b64  	%rd5683, %rd5663, %rd5639;
	and.b64  	%rd5684, %rd5683, %rd5682;
	xor.b64  	%rd5685, %rd5684, %rd5663;
	add.s64 	%rd5686, %rd5675, %rd5685;
	add.s64 	%rd5687, %rd5686, %rd5681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4073,%dummy}, %rd5676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4074}, %rd5676;
	}
	shf.r.wrap.b32 	%r4075, %r4074, %r4073, 14;
	shf.r.wrap.b32 	%r4076, %r4073, %r4074, 14;
	mov.b64 	%rd5688, {%r4076, %r4075};
	shf.r.wrap.b32 	%r4077, %r4074, %r4073, 18;
	shf.r.wrap.b32 	%r4078, %r4073, %r4074, 18;
	mov.b64 	%rd5689, {%r4078, %r4077};
	xor.b64  	%rd5690, %rd5689, %rd5688;
	shf.l.wrap.b32 	%r4079, %r4073, %r4074, 23;
	shf.l.wrap.b32 	%r4080, %r4074, %r4073, 23;
	mov.b64 	%rd5691, {%r4080, %r4079};
	xor.b64  	%rd5692, %rd5690, %rd5691;
	xor.b64  	%rd5693, %rd5652, %rd5628;
	and.b64  	%rd5694, %rd5676, %rd5693;
	xor.b64  	%rd5695, %rd5694, %rd5628;
	add.s64 	%rd5696, %rd5604, %rd5437;
	add.s64 	%rd5697, %rd5696, %rd8752;
	add.s64 	%rd5698, %rd5697, %rd5695;
	add.s64 	%rd5699, %rd5698, %rd5692;
	add.s64 	%rd5700, %rd5699, %rd5615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4081,%dummy}, %rd5687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4082}, %rd5687;
	}
	shf.r.wrap.b32 	%r4083, %r4082, %r4081, 28;
	shf.r.wrap.b32 	%r4084, %r4081, %r4082, 28;
	mov.b64 	%rd5701, {%r4084, %r4083};
	shf.l.wrap.b32 	%r4085, %r4081, %r4082, 30;
	shf.l.wrap.b32 	%r4086, %r4082, %r4081, 30;
	mov.b64 	%rd5702, {%r4086, %r4085};
	xor.b64  	%rd5703, %rd5702, %rd5701;
	shf.l.wrap.b32 	%r4087, %r4081, %r4082, 25;
	shf.l.wrap.b32 	%r4088, %r4082, %r4081, 25;
	mov.b64 	%rd5704, {%r4088, %r4087};
	xor.b64  	%rd5705, %rd5703, %rd5704;
	xor.b64  	%rd5706, %rd5687, %rd5639;
	xor.b64  	%rd5707, %rd5687, %rd5663;
	and.b64  	%rd5708, %rd5707, %rd5706;
	xor.b64  	%rd5709, %rd5708, %rd5687;
	add.s64 	%rd5710, %rd5699, %rd5709;
	add.s64 	%rd5711, %rd5710, %rd5705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4089,%dummy}, %rd5700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4090}, %rd5700;
	}
	shf.r.wrap.b32 	%r4091, %r4090, %r4089, 14;
	shf.r.wrap.b32 	%r4092, %r4089, %r4090, 14;
	mov.b64 	%rd5712, {%r4092, %r4091};
	shf.r.wrap.b32 	%r4093, %r4090, %r4089, 18;
	shf.r.wrap.b32 	%r4094, %r4089, %r4090, 18;
	mov.b64 	%rd5713, {%r4094, %r4093};
	xor.b64  	%rd5714, %rd5713, %rd5712;
	shf.l.wrap.b32 	%r4095, %r4089, %r4090, 23;
	shf.l.wrap.b32 	%r4096, %r4090, %r4089, 23;
	mov.b64 	%rd5715, {%r4096, %r4095};
	xor.b64  	%rd5716, %rd5714, %rd5715;
	xor.b64  	%rd5717, %rd5676, %rd5652;
	and.b64  	%rd5718, %rd5700, %rd5717;
	xor.b64  	%rd5719, %rd5718, %rd5652;
	add.s64 	%rd5720, %rd5628, %rd5450;
	add.s64 	%rd5721, %rd5720, %rd8751;
	add.s64 	%rd5722, %rd5721, %rd5719;
	add.s64 	%rd5723, %rd5722, %rd5716;
	add.s64 	%rd5724, %rd5723, %rd5639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4097,%dummy}, %rd5711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4098}, %rd5711;
	}
	shf.r.wrap.b32 	%r4099, %r4098, %r4097, 28;
	shf.r.wrap.b32 	%r4100, %r4097, %r4098, 28;
	mov.b64 	%rd5725, {%r4100, %r4099};
	shf.l.wrap.b32 	%r4101, %r4097, %r4098, 30;
	shf.l.wrap.b32 	%r4102, %r4098, %r4097, 30;
	mov.b64 	%rd5726, {%r4102, %r4101};
	xor.b64  	%rd5727, %rd5726, %rd5725;
	shf.l.wrap.b32 	%r4103, %r4097, %r4098, 25;
	shf.l.wrap.b32 	%r4104, %r4098, %r4097, 25;
	mov.b64 	%rd5728, {%r4104, %r4103};
	xor.b64  	%rd5729, %rd5727, %rd5728;
	xor.b64  	%rd5730, %rd5711, %rd5663;
	xor.b64  	%rd5731, %rd5711, %rd5687;
	and.b64  	%rd5732, %rd5731, %rd5730;
	xor.b64  	%rd5733, %rd5732, %rd5711;
	add.s64 	%rd5734, %rd5723, %rd5733;
	add.s64 	%rd5735, %rd5734, %rd5729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4105,%dummy}, %rd5724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4106}, %rd5724;
	}
	shf.r.wrap.b32 	%r4107, %r4106, %r4105, 14;
	shf.r.wrap.b32 	%r4108, %r4105, %r4106, 14;
	mov.b64 	%rd5736, {%r4108, %r4107};
	shf.r.wrap.b32 	%r4109, %r4106, %r4105, 18;
	shf.r.wrap.b32 	%r4110, %r4105, %r4106, 18;
	mov.b64 	%rd5737, {%r4110, %r4109};
	xor.b64  	%rd5738, %rd5737, %rd5736;
	shf.l.wrap.b32 	%r4111, %r4105, %r4106, 23;
	shf.l.wrap.b32 	%r4112, %r4106, %r4105, 23;
	mov.b64 	%rd5739, {%r4112, %r4111};
	xor.b64  	%rd5740, %rd5738, %rd5739;
	xor.b64  	%rd5741, %rd5700, %rd5676;
	and.b64  	%rd5742, %rd5724, %rd5741;
	xor.b64  	%rd5743, %rd5742, %rd5676;
	add.s64 	%rd5744, %rd5652, %rd5463;
	add.s64 	%rd5745, %rd5744, %rd8750;
	add.s64 	%rd5746, %rd5745, %rd5743;
	add.s64 	%rd5747, %rd5746, %rd5740;
	add.s64 	%rd5748, %rd5747, %rd5663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4113,%dummy}, %rd5735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4114}, %rd5735;
	}
	shf.r.wrap.b32 	%r4115, %r4114, %r4113, 28;
	shf.r.wrap.b32 	%r4116, %r4113, %r4114, 28;
	mov.b64 	%rd5749, {%r4116, %r4115};
	shf.l.wrap.b32 	%r4117, %r4113, %r4114, 30;
	shf.l.wrap.b32 	%r4118, %r4114, %r4113, 30;
	mov.b64 	%rd5750, {%r4118, %r4117};
	xor.b64  	%rd5751, %rd5750, %rd5749;
	shf.l.wrap.b32 	%r4119, %r4113, %r4114, 25;
	shf.l.wrap.b32 	%r4120, %r4114, %r4113, 25;
	mov.b64 	%rd5752, {%r4120, %r4119};
	xor.b64  	%rd5753, %rd5751, %rd5752;
	xor.b64  	%rd5754, %rd5735, %rd5687;
	xor.b64  	%rd5755, %rd5735, %rd5711;
	and.b64  	%rd5756, %rd5755, %rd5754;
	xor.b64  	%rd5757, %rd5756, %rd5735;
	add.s64 	%rd5758, %rd5747, %rd5757;
	add.s64 	%rd5759, %rd5758, %rd5753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4121,%dummy}, %rd5748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4122}, %rd5748;
	}
	shf.r.wrap.b32 	%r4123, %r4122, %r4121, 14;
	shf.r.wrap.b32 	%r4124, %r4121, %r4122, 14;
	mov.b64 	%rd5760, {%r4124, %r4123};
	shf.r.wrap.b32 	%r4125, %r4122, %r4121, 18;
	shf.r.wrap.b32 	%r4126, %r4121, %r4122, 18;
	mov.b64 	%rd5761, {%r4126, %r4125};
	xor.b64  	%rd5762, %rd5761, %rd5760;
	shf.l.wrap.b32 	%r4127, %r4121, %r4122, 23;
	shf.l.wrap.b32 	%r4128, %r4122, %r4121, 23;
	mov.b64 	%rd5763, {%r4128, %r4127};
	xor.b64  	%rd5764, %rd5762, %rd5763;
	xor.b64  	%rd5765, %rd5724, %rd5700;
	and.b64  	%rd5766, %rd5748, %rd5765;
	xor.b64  	%rd5767, %rd5766, %rd5700;
	add.s64 	%rd5768, %rd5676, %rd5476;
	add.s64 	%rd5769, %rd5768, %rd8749;
	add.s64 	%rd5770, %rd5769, %rd5767;
	add.s64 	%rd5771, %rd5770, %rd5764;
	add.s64 	%rd5772, %rd5771, %rd5687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4129,%dummy}, %rd5759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4130}, %rd5759;
	}
	shf.r.wrap.b32 	%r4131, %r4130, %r4129, 28;
	shf.r.wrap.b32 	%r4132, %r4129, %r4130, 28;
	mov.b64 	%rd5773, {%r4132, %r4131};
	shf.l.wrap.b32 	%r4133, %r4129, %r4130, 30;
	shf.l.wrap.b32 	%r4134, %r4130, %r4129, 30;
	mov.b64 	%rd5774, {%r4134, %r4133};
	xor.b64  	%rd5775, %rd5774, %rd5773;
	shf.l.wrap.b32 	%r4135, %r4129, %r4130, 25;
	shf.l.wrap.b32 	%r4136, %r4130, %r4129, 25;
	mov.b64 	%rd5776, {%r4136, %r4135};
	xor.b64  	%rd5777, %rd5775, %rd5776;
	xor.b64  	%rd5778, %rd5759, %rd5711;
	xor.b64  	%rd5779, %rd5759, %rd5735;
	and.b64  	%rd5780, %rd5779, %rd5778;
	xor.b64  	%rd5781, %rd5780, %rd5759;
	add.s64 	%rd5782, %rd5771, %rd5781;
	add.s64 	%rd5783, %rd5782, %rd5777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4137,%dummy}, %rd5772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4138}, %rd5772;
	}
	shf.r.wrap.b32 	%r4139, %r4138, %r4137, 14;
	shf.r.wrap.b32 	%r4140, %r4137, %r4138, 14;
	mov.b64 	%rd5784, {%r4140, %r4139};
	shf.r.wrap.b32 	%r4141, %r4138, %r4137, 18;
	shf.r.wrap.b32 	%r4142, %r4137, %r4138, 18;
	mov.b64 	%rd5785, {%r4142, %r4141};
	xor.b64  	%rd5786, %rd5785, %rd5784;
	shf.l.wrap.b32 	%r4143, %r4137, %r4138, 23;
	shf.l.wrap.b32 	%r4144, %r4138, %r4137, 23;
	mov.b64 	%rd5787, {%r4144, %r4143};
	xor.b64  	%rd5788, %rd5786, %rd5787;
	xor.b64  	%rd5789, %rd5748, %rd5724;
	and.b64  	%rd5790, %rd5772, %rd5789;
	xor.b64  	%rd5791, %rd5790, %rd5724;
	add.s64 	%rd5792, %rd5700, %rd5489;
	add.s64 	%rd5793, %rd5792, %rd8748;
	add.s64 	%rd5794, %rd5793, %rd5791;
	add.s64 	%rd5795, %rd5794, %rd5788;
	add.s64 	%rd5796, %rd5795, %rd5711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4145,%dummy}, %rd5783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4146}, %rd5783;
	}
	shf.r.wrap.b32 	%r4147, %r4146, %r4145, 28;
	shf.r.wrap.b32 	%r4148, %r4145, %r4146, 28;
	mov.b64 	%rd5797, {%r4148, %r4147};
	shf.l.wrap.b32 	%r4149, %r4145, %r4146, 30;
	shf.l.wrap.b32 	%r4150, %r4146, %r4145, 30;
	mov.b64 	%rd5798, {%r4150, %r4149};
	xor.b64  	%rd5799, %rd5798, %rd5797;
	shf.l.wrap.b32 	%r4151, %r4145, %r4146, 25;
	shf.l.wrap.b32 	%r4152, %r4146, %r4145, 25;
	mov.b64 	%rd5800, {%r4152, %r4151};
	xor.b64  	%rd5801, %rd5799, %rd5800;
	xor.b64  	%rd5802, %rd5783, %rd5735;
	xor.b64  	%rd5803, %rd5783, %rd5759;
	and.b64  	%rd5804, %rd5803, %rd5802;
	xor.b64  	%rd5805, %rd5804, %rd5783;
	add.s64 	%rd5806, %rd5795, %rd5805;
	add.s64 	%rd5807, %rd5806, %rd5801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4153,%dummy}, %rd5796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4154}, %rd5796;
	}
	shf.r.wrap.b32 	%r4155, %r4154, %r4153, 14;
	shf.r.wrap.b32 	%r4156, %r4153, %r4154, 14;
	mov.b64 	%rd5808, {%r4156, %r4155};
	shf.r.wrap.b32 	%r4157, %r4154, %r4153, 18;
	shf.r.wrap.b32 	%r4158, %r4153, %r4154, 18;
	mov.b64 	%rd5809, {%r4158, %r4157};
	xor.b64  	%rd5810, %rd5809, %rd5808;
	shf.l.wrap.b32 	%r4159, %r4153, %r4154, 23;
	shf.l.wrap.b32 	%r4160, %r4154, %r4153, 23;
	mov.b64 	%rd5811, {%r4160, %r4159};
	xor.b64  	%rd5812, %rd5810, %rd5811;
	xor.b64  	%rd5813, %rd5772, %rd5748;
	and.b64  	%rd5814, %rd5796, %rd5813;
	xor.b64  	%rd5815, %rd5814, %rd5748;
	add.s64 	%rd5816, %rd5724, %rd5502;
	add.s64 	%rd5817, %rd5816, %rd8747;
	add.s64 	%rd5818, %rd5817, %rd5815;
	add.s64 	%rd5819, %rd5818, %rd5812;
	add.s64 	%rd5820, %rd5819, %rd5735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4161,%dummy}, %rd5807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4162}, %rd5807;
	}
	shf.r.wrap.b32 	%r4163, %r4162, %r4161, 28;
	shf.r.wrap.b32 	%r4164, %r4161, %r4162, 28;
	mov.b64 	%rd5821, {%r4164, %r4163};
	shf.l.wrap.b32 	%r4165, %r4161, %r4162, 30;
	shf.l.wrap.b32 	%r4166, %r4162, %r4161, 30;
	mov.b64 	%rd5822, {%r4166, %r4165};
	xor.b64  	%rd5823, %rd5822, %rd5821;
	shf.l.wrap.b32 	%r4167, %r4161, %r4162, 25;
	shf.l.wrap.b32 	%r4168, %r4162, %r4161, 25;
	mov.b64 	%rd5824, {%r4168, %r4167};
	xor.b64  	%rd5825, %rd5823, %rd5824;
	xor.b64  	%rd5826, %rd5807, %rd5759;
	xor.b64  	%rd5827, %rd5807, %rd5783;
	and.b64  	%rd5828, %rd5827, %rd5826;
	xor.b64  	%rd5829, %rd5828, %rd5807;
	add.s64 	%rd5830, %rd5819, %rd5829;
	add.s64 	%rd5831, %rd5830, %rd5825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4169,%dummy}, %rd5820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4170}, %rd5820;
	}
	shf.r.wrap.b32 	%r4171, %r4170, %r4169, 14;
	shf.r.wrap.b32 	%r4172, %r4169, %r4170, 14;
	mov.b64 	%rd5832, {%r4172, %r4171};
	shf.r.wrap.b32 	%r4173, %r4170, %r4169, 18;
	shf.r.wrap.b32 	%r4174, %r4169, %r4170, 18;
	mov.b64 	%rd5833, {%r4174, %r4173};
	xor.b64  	%rd5834, %rd5833, %rd5832;
	shf.l.wrap.b32 	%r4175, %r4169, %r4170, 23;
	shf.l.wrap.b32 	%r4176, %r4170, %r4169, 23;
	mov.b64 	%rd5835, {%r4176, %r4175};
	xor.b64  	%rd5836, %rd5834, %rd5835;
	xor.b64  	%rd5837, %rd5796, %rd5772;
	and.b64  	%rd5838, %rd5820, %rd5837;
	xor.b64  	%rd5839, %rd5838, %rd5772;
	add.s64 	%rd5840, %rd5748, %rd5515;
	add.s64 	%rd5841, %rd5840, %rd8746;
	add.s64 	%rd5842, %rd5841, %rd5839;
	add.s64 	%rd5843, %rd5842, %rd5836;
	add.s64 	%rd5844, %rd5843, %rd5759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4177,%dummy}, %rd5831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4178}, %rd5831;
	}
	shf.r.wrap.b32 	%r4179, %r4178, %r4177, 28;
	shf.r.wrap.b32 	%r4180, %r4177, %r4178, 28;
	mov.b64 	%rd5845, {%r4180, %r4179};
	shf.l.wrap.b32 	%r4181, %r4177, %r4178, 30;
	shf.l.wrap.b32 	%r4182, %r4178, %r4177, 30;
	mov.b64 	%rd5846, {%r4182, %r4181};
	xor.b64  	%rd5847, %rd5846, %rd5845;
	shf.l.wrap.b32 	%r4183, %r4177, %r4178, 25;
	shf.l.wrap.b32 	%r4184, %r4178, %r4177, 25;
	mov.b64 	%rd5848, {%r4184, %r4183};
	xor.b64  	%rd5849, %rd5847, %rd5848;
	xor.b64  	%rd5850, %rd5831, %rd5783;
	xor.b64  	%rd5851, %rd5831, %rd5807;
	and.b64  	%rd5852, %rd5851, %rd5850;
	xor.b64  	%rd5853, %rd5852, %rd5831;
	add.s64 	%rd5854, %rd5843, %rd5853;
	add.s64 	%rd5855, %rd5854, %rd5849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4185,%dummy}, %rd5844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4186}, %rd5844;
	}
	shf.r.wrap.b32 	%r4187, %r4186, %r4185, 14;
	shf.r.wrap.b32 	%r4188, %r4185, %r4186, 14;
	mov.b64 	%rd5856, {%r4188, %r4187};
	shf.r.wrap.b32 	%r4189, %r4186, %r4185, 18;
	shf.r.wrap.b32 	%r4190, %r4185, %r4186, 18;
	mov.b64 	%rd5857, {%r4190, %r4189};
	xor.b64  	%rd5858, %rd5857, %rd5856;
	shf.l.wrap.b32 	%r4191, %r4185, %r4186, 23;
	shf.l.wrap.b32 	%r4192, %r4186, %r4185, 23;
	mov.b64 	%rd5859, {%r4192, %r4191};
	xor.b64  	%rd5860, %rd5858, %rd5859;
	xor.b64  	%rd5861, %rd5820, %rd5796;
	and.b64  	%rd5862, %rd5844, %rd5861;
	xor.b64  	%rd5863, %rd5862, %rd5796;
	add.s64 	%rd5864, %rd5772, %rd5528;
	add.s64 	%rd5865, %rd5864, %rd8745;
	add.s64 	%rd5866, %rd5865, %rd5863;
	add.s64 	%rd5867, %rd5866, %rd5860;
	add.s64 	%rd5868, %rd5867, %rd5783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4193,%dummy}, %rd5855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4194}, %rd5855;
	}
	shf.r.wrap.b32 	%r4195, %r4194, %r4193, 28;
	shf.r.wrap.b32 	%r4196, %r4193, %r4194, 28;
	mov.b64 	%rd5869, {%r4196, %r4195};
	shf.l.wrap.b32 	%r4197, %r4193, %r4194, 30;
	shf.l.wrap.b32 	%r4198, %r4194, %r4193, 30;
	mov.b64 	%rd5870, {%r4198, %r4197};
	xor.b64  	%rd5871, %rd5870, %rd5869;
	shf.l.wrap.b32 	%r4199, %r4193, %r4194, 25;
	shf.l.wrap.b32 	%r4200, %r4194, %r4193, 25;
	mov.b64 	%rd5872, {%r4200, %r4199};
	xor.b64  	%rd5873, %rd5871, %rd5872;
	xor.b64  	%rd5874, %rd5855, %rd5807;
	xor.b64  	%rd5875, %rd5855, %rd5831;
	and.b64  	%rd5876, %rd5875, %rd5874;
	xor.b64  	%rd5877, %rd5876, %rd5855;
	add.s64 	%rd5878, %rd5867, %rd5877;
	add.s64 	%rd5879, %rd5878, %rd5873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4201,%dummy}, %rd5868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4202}, %rd5868;
	}
	shf.r.wrap.b32 	%r4203, %r4202, %r4201, 14;
	shf.r.wrap.b32 	%r4204, %r4201, %r4202, 14;
	mov.b64 	%rd5880, {%r4204, %r4203};
	shf.r.wrap.b32 	%r4205, %r4202, %r4201, 18;
	shf.r.wrap.b32 	%r4206, %r4201, %r4202, 18;
	mov.b64 	%rd5881, {%r4206, %r4205};
	xor.b64  	%rd5882, %rd5881, %rd5880;
	shf.l.wrap.b32 	%r4207, %r4201, %r4202, 23;
	shf.l.wrap.b32 	%r4208, %r4202, %r4201, 23;
	mov.b64 	%rd5883, {%r4208, %r4207};
	xor.b64  	%rd5884, %rd5882, %rd5883;
	xor.b64  	%rd5885, %rd5844, %rd5820;
	and.b64  	%rd5886, %rd5868, %rd5885;
	xor.b64  	%rd5887, %rd5886, %rd5820;
	add.s64 	%rd5888, %rd5796, %rd5541;
	add.s64 	%rd5889, %rd5888, %rd8744;
	add.s64 	%rd5890, %rd5889, %rd5887;
	add.s64 	%rd5891, %rd5890, %rd5884;
	add.s64 	%rd5892, %rd5891, %rd5807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4209,%dummy}, %rd5879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4210}, %rd5879;
	}
	shf.r.wrap.b32 	%r4211, %r4210, %r4209, 28;
	shf.r.wrap.b32 	%r4212, %r4209, %r4210, 28;
	mov.b64 	%rd5893, {%r4212, %r4211};
	shf.l.wrap.b32 	%r4213, %r4209, %r4210, 30;
	shf.l.wrap.b32 	%r4214, %r4210, %r4209, 30;
	mov.b64 	%rd5894, {%r4214, %r4213};
	xor.b64  	%rd5895, %rd5894, %rd5893;
	shf.l.wrap.b32 	%r4215, %r4209, %r4210, 25;
	shf.l.wrap.b32 	%r4216, %r4210, %r4209, 25;
	mov.b64 	%rd5896, {%r4216, %r4215};
	xor.b64  	%rd5897, %rd5895, %rd5896;
	xor.b64  	%rd5898, %rd5879, %rd5831;
	xor.b64  	%rd5899, %rd5879, %rd5855;
	and.b64  	%rd5900, %rd5899, %rd5898;
	xor.b64  	%rd5901, %rd5900, %rd5879;
	add.s64 	%rd5902, %rd5891, %rd5901;
	add.s64 	%rd5903, %rd5902, %rd5897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4217,%dummy}, %rd5892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4218}, %rd5892;
	}
	shf.r.wrap.b32 	%r4219, %r4218, %r4217, 14;
	shf.r.wrap.b32 	%r4220, %r4217, %r4218, 14;
	mov.b64 	%rd5904, {%r4220, %r4219};
	shf.r.wrap.b32 	%r4221, %r4218, %r4217, 18;
	shf.r.wrap.b32 	%r4222, %r4217, %r4218, 18;
	mov.b64 	%rd5905, {%r4222, %r4221};
	xor.b64  	%rd5906, %rd5905, %rd5904;
	shf.l.wrap.b32 	%r4223, %r4217, %r4218, 23;
	shf.l.wrap.b32 	%r4224, %r4218, %r4217, 23;
	mov.b64 	%rd5907, {%r4224, %r4223};
	xor.b64  	%rd5908, %rd5906, %rd5907;
	xor.b64  	%rd5909, %rd5868, %rd5844;
	and.b64  	%rd5910, %rd5892, %rd5909;
	xor.b64  	%rd5911, %rd5910, %rd5844;
	add.s64 	%rd5912, %rd5820, %rd5554;
	add.s64 	%rd5913, %rd5912, %rd8743;
	add.s64 	%rd5914, %rd5913, %rd5911;
	add.s64 	%rd5915, %rd5914, %rd5908;
	add.s64 	%rd5916, %rd5915, %rd5831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4225,%dummy}, %rd5903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4226}, %rd5903;
	}
	shf.r.wrap.b32 	%r4227, %r4226, %r4225, 28;
	shf.r.wrap.b32 	%r4228, %r4225, %r4226, 28;
	mov.b64 	%rd5917, {%r4228, %r4227};
	shf.l.wrap.b32 	%r4229, %r4225, %r4226, 30;
	shf.l.wrap.b32 	%r4230, %r4226, %r4225, 30;
	mov.b64 	%rd5918, {%r4230, %r4229};
	xor.b64  	%rd5919, %rd5918, %rd5917;
	shf.l.wrap.b32 	%r4231, %r4225, %r4226, 25;
	shf.l.wrap.b32 	%r4232, %r4226, %r4225, 25;
	mov.b64 	%rd5920, {%r4232, %r4231};
	xor.b64  	%rd5921, %rd5919, %rd5920;
	xor.b64  	%rd5922, %rd5903, %rd5855;
	xor.b64  	%rd5923, %rd5903, %rd5879;
	and.b64  	%rd5924, %rd5923, %rd5922;
	xor.b64  	%rd5925, %rd5924, %rd5903;
	add.s64 	%rd5926, %rd5915, %rd5925;
	add.s64 	%rd5927, %rd5926, %rd5921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4233,%dummy}, %rd5916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4234}, %rd5916;
	}
	shf.r.wrap.b32 	%r4235, %r4234, %r4233, 14;
	shf.r.wrap.b32 	%r4236, %r4233, %r4234, 14;
	mov.b64 	%rd5928, {%r4236, %r4235};
	shf.r.wrap.b32 	%r4237, %r4234, %r4233, 18;
	shf.r.wrap.b32 	%r4238, %r4233, %r4234, 18;
	mov.b64 	%rd5929, {%r4238, %r4237};
	xor.b64  	%rd5930, %rd5929, %rd5928;
	shf.l.wrap.b32 	%r4239, %r4233, %r4234, 23;
	shf.l.wrap.b32 	%r4240, %r4234, %r4233, 23;
	mov.b64 	%rd5931, {%r4240, %r4239};
	xor.b64  	%rd5932, %rd5930, %rd5931;
	xor.b64  	%rd5933, %rd5892, %rd5868;
	and.b64  	%rd5934, %rd5916, %rd5933;
	xor.b64  	%rd5935, %rd5934, %rd5868;
	add.s64 	%rd5936, %rd5844, %rd5567;
	add.s64 	%rd5937, %rd5936, %rd8742;
	add.s64 	%rd5938, %rd5937, %rd5935;
	add.s64 	%rd5939, %rd5938, %rd5932;
	add.s64 	%rd5940, %rd5939, %rd5855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4241,%dummy}, %rd5927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4242}, %rd5927;
	}
	shf.r.wrap.b32 	%r4243, %r4242, %r4241, 28;
	shf.r.wrap.b32 	%r4244, %r4241, %r4242, 28;
	mov.b64 	%rd5941, {%r4244, %r4243};
	shf.l.wrap.b32 	%r4245, %r4241, %r4242, 30;
	shf.l.wrap.b32 	%r4246, %r4242, %r4241, 30;
	mov.b64 	%rd5942, {%r4246, %r4245};
	xor.b64  	%rd5943, %rd5942, %rd5941;
	shf.l.wrap.b32 	%r4247, %r4241, %r4242, 25;
	shf.l.wrap.b32 	%r4248, %r4242, %r4241, 25;
	mov.b64 	%rd5944, {%r4248, %r4247};
	xor.b64  	%rd5945, %rd5943, %rd5944;
	xor.b64  	%rd5946, %rd5927, %rd5879;
	xor.b64  	%rd5947, %rd5927, %rd5903;
	and.b64  	%rd5948, %rd5947, %rd5946;
	xor.b64  	%rd5949, %rd5948, %rd5927;
	add.s64 	%rd5950, %rd5939, %rd5949;
	add.s64 	%rd5951, %rd5950, %rd5945;
	add.s64 	%rd5952, %rd8813, %rd5951;
	st.local.u64 	[%rd1], %rd5952;
	add.s64 	%rd5953, %rd8812, %rd5927;
	st.local.u64 	[%rd1+8], %rd5953;
	add.s64 	%rd5954, %rd8811, %rd5903;
	st.local.u64 	[%rd1+16], %rd5954;
	add.s64 	%rd5955, %rd8810, %rd5879;
	st.local.u64 	[%rd1+24], %rd5955;
	add.s64 	%rd5956, %rd8809, %rd5940;
	st.local.u64 	[%rd1+32], %rd5956;
	add.s64 	%rd5957, %rd8808, %rd5916;
	st.local.u64 	[%rd1+40], %rd5957;
	add.s64 	%rd5958, %rd8807, %rd5892;
	st.local.u64 	[%rd1+48], %rd5958;
	add.s64 	%rd5959, %rd8806, %rd5868;
	st.local.u64 	[%rd1+56], %rd5959;
	shl.b64 	%rd5960, %rd8733, 6;
	add.s64 	%rd5961, %rd8732, %rd5960;
	st.global.u64 	[%rd5961], %rd5952;
	st.global.u64 	[%rd5961+8], %rd5953;
	st.global.u64 	[%rd5961+16], %rd5954;
	st.global.u64 	[%rd5961+24], %rd5955;
	st.global.u64 	[%rd5961+32], %rd5956;
	st.global.u64 	[%rd5961+40], %rd5957;
	st.global.u64 	[%rd5961+48], %rd5958;
	st.global.u64 	[%rd5961+56], %rd5959;

BB5_7:
	ret;
}

	// .globl	m11300_loop
.entry m11300_loop(
	.param .u64 .ptr .global .align 4 m11300_loop_param_0,
	.param .u64 .ptr .global .align 4 m11300_loop_param_1,
	.param .u64 .ptr .global .align 4 m11300_loop_param_2,
	.param .u64 .ptr .global .align 4 m11300_loop_param_3,
	.param .u64 .ptr .global .align 8 m11300_loop_param_4,
	.param .u64 .ptr .global .align 1 m11300_loop_param_5,
	.param .u64 .ptr .global .align 4 m11300_loop_param_6,
	.param .u64 .ptr .global .align 4 m11300_loop_param_7,
	.param .u64 .ptr .global .align 4 m11300_loop_param_8,
	.param .u64 .ptr .global .align 4 m11300_loop_param_9,
	.param .u64 .ptr .global .align 4 m11300_loop_param_10,
	.param .u64 .ptr .global .align 4 m11300_loop_param_11,
	.param .u64 .ptr .global .align 4 m11300_loop_param_12,
	.param .u64 .ptr .global .align 4 m11300_loop_param_13,
	.param .u64 .ptr .global .align 8 m11300_loop_param_14,
	.param .u64 .ptr .global .align 4 m11300_loop_param_15,
	.param .u64 .ptr .global .align 4 m11300_loop_param_16,
	.param .u64 .ptr .global .align 4 m11300_loop_param_17,
	.param .u64 .ptr .global .align 4 m11300_loop_param_18,
	.param .u64 .ptr .global .align 4 m11300_loop_param_19,
	.param .u64 .ptr .global .align 4 m11300_loop_param_20,
	.param .u64 .ptr .global .align 4 m11300_loop_param_21,
	.param .u64 .ptr .global .align 4 m11300_loop_param_22,
	.param .u64 .ptr .global .align 4 m11300_loop_param_23,
	.param .u32 m11300_loop_param_24,
	.param .u32 m11300_loop_param_25,
	.param .u32 m11300_loop_param_26,
	.param .u32 m11300_loop_param_27,
	.param .u32 m11300_loop_param_28,
	.param .u32 m11300_loop_param_29,
	.param .u32 m11300_loop_param_30,
	.param .u32 m11300_loop_param_31,
	.param .u32 m11300_loop_param_32,
	.param .u32 m11300_loop_param_33,
	.param .u64 m11300_loop_param_34
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<1928>;
	.reg .b64 	%rd<2861>;


	ld.param.u64 	%rd129, [m11300_loop_param_4];
	ld.param.u32 	%r3, [m11300_loop_param_29];
	ld.param.u64 	%rd130, [m11300_loop_param_34];
	mov.b32	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r9, %r7, %r8;
	cvt.s64.s32	%rd1, %r9;
	setp.ge.u64	%p1, %rd1, %rd130;
	@%p1 bra 	BB6_5;

	shl.b64 	%rd131, %rd1, 6;
	add.s64 	%rd2, %rd129, %rd131;
	ld.global.u64 	%rd2860, [%rd2];
	ld.global.u64 	%rd2859, [%rd2+8];
	ld.global.u64 	%rd2858, [%rd2+16];
	ld.global.u64 	%rd2857, [%rd2+24];
	ld.global.u64 	%rd2856, [%rd2+32];
	ld.global.u64 	%rd2855, [%rd2+40];
	ld.global.u64 	%rd2854, [%rd2+48];
	ld.global.u64 	%rd2853, [%rd2+56];
	setp.eq.s32	%p2, %r3, 0;
	@%p2 bra 	BB6_4;

	ld.const.u64 	%rd18, [k_sha512];
	mov.u64 	%rd132, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11,%dummy}, %rd132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12}, %rd132;
	}
	shf.r.wrap.b32 	%r13, %r12, %r11, 18;
	shf.r.wrap.b32 	%r14, %r11, %r12, 18;
	mov.b64 	%rd133, {%r14, %r13};
	shf.r.wrap.b32 	%r15, %r12, %r11, 14;
	shf.r.wrap.b32 	%r16, %r11, %r12, 14;
	mov.b64 	%rd134, {%r16, %r15};
	xor.b64  	%rd135, %rd133, %rd134;
	shf.l.wrap.b32 	%r17, %r11, %r12, 23;
	shf.l.wrap.b32 	%r18, %r12, %r11, 23;
	mov.b64 	%rd136, {%r18, %r17};
	xor.b64  	%rd19, %rd135, %rd136;
	mov.u64 	%rd137, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19}, %rd137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20,%dummy}, %rd137;
	}
	shf.l.wrap.b32 	%r21, %r20, %r19, 30;
	shf.l.wrap.b32 	%r22, %r19, %r20, 30;
	mov.b64 	%rd138, {%r22, %r21};
	shf.r.wrap.b32 	%r23, %r19, %r20, 28;
	shf.r.wrap.b32 	%r24, %r20, %r19, 28;
	mov.b64 	%rd139, {%r24, %r23};
	xor.b64  	%rd140, %rd138, %rd139;
	shf.l.wrap.b32 	%r25, %r20, %r19, 25;
	shf.l.wrap.b32 	%r26, %r19, %r20, 25;
	mov.b64 	%rd141, {%r26, %r25};
	xor.b64  	%rd20, %rd140, %rd141;
	ld.const.u64 	%rd21, [k_sha512+8];
	ld.const.u64 	%rd22, [k_sha512+16];
	ld.const.u64 	%rd23, [k_sha512+24];
	ld.const.u64 	%rd24, [k_sha512+32];
	ld.const.u64 	%rd25, [k_sha512+40];
	ld.const.u64 	%rd26, [k_sha512+48];
	ld.const.u64 	%rd27, [k_sha512+56];
	ld.const.u64 	%rd28, [k_sha512+64];
	ld.const.u64 	%rd29, [k_sha512+72];
	ld.const.u64 	%rd30, [k_sha512+80];
	ld.const.u64 	%rd31, [k_sha512+88];
	ld.const.u64 	%rd32, [k_sha512+96];
	ld.const.u64 	%rd33, [k_sha512+104];
	ld.const.u64 	%rd34, [k_sha512+112];
	ld.const.u64 	%rd35, [k_sha512+120];
	ld.const.u64 	%rd36, [k_sha512+128];
	ld.const.u64 	%rd37, [k_sha512+136];
	ld.const.u64 	%rd38, [k_sha512+144];
	ld.const.u64 	%rd39, [k_sha512+152];
	ld.const.u64 	%rd40, [k_sha512+160];
	ld.const.u64 	%rd41, [k_sha512+168];
	ld.const.u64 	%rd42, [k_sha512+176];
	ld.const.u64 	%rd43, [k_sha512+184];
	ld.const.u64 	%rd44, [k_sha512+192];
	ld.const.u64 	%rd45, [k_sha512+200];
	ld.const.u64 	%rd46, [k_sha512+208];
	ld.const.u64 	%rd47, [k_sha512+216];
	ld.const.u64 	%rd48, [k_sha512+224];
	ld.const.u64 	%rd49, [k_sha512+232];
	ld.const.u64 	%rd50, [k_sha512+240];
	ld.const.u64 	%rd51, [k_sha512+248];
	ld.const.u64 	%rd52, [k_sha512+256];
	ld.const.u64 	%rd53, [k_sha512+264];
	ld.const.u64 	%rd54, [k_sha512+272];
	ld.const.u64 	%rd55, [k_sha512+280];
	ld.const.u64 	%rd56, [k_sha512+288];
	ld.const.u64 	%rd57, [k_sha512+296];
	ld.const.u64 	%rd58, [k_sha512+304];
	ld.const.u64 	%rd59, [k_sha512+312];
	ld.const.u64 	%rd60, [k_sha512+320];
	ld.const.u64 	%rd61, [k_sha512+328];
	ld.const.u64 	%rd62, [k_sha512+336];
	ld.const.u64 	%rd63, [k_sha512+344];
	ld.const.u64 	%rd64, [k_sha512+352];
	ld.const.u64 	%rd65, [k_sha512+360];
	ld.const.u64 	%rd66, [k_sha512+368];
	ld.const.u64 	%rd67, [k_sha512+376];
	ld.const.u64 	%rd68, [k_sha512+384];
	ld.const.u64 	%rd69, [k_sha512+392];
	ld.const.u64 	%rd70, [k_sha512+400];
	ld.const.u64 	%rd71, [k_sha512+408];
	ld.const.u64 	%rd72, [k_sha512+416];
	ld.const.u64 	%rd73, [k_sha512+424];
	ld.const.u64 	%rd74, [k_sha512+432];
	ld.const.u64 	%rd75, [k_sha512+440];
	ld.const.u64 	%rd76, [k_sha512+448];
	ld.const.u64 	%rd77, [k_sha512+456];
	ld.const.u64 	%rd78, [k_sha512+464];
	ld.const.u64 	%rd79, [k_sha512+472];
	ld.const.u64 	%rd80, [k_sha512+480];
	ld.const.u64 	%rd81, [k_sha512+488];
	ld.const.u64 	%rd82, [k_sha512+496];
	ld.const.u64 	%rd83, [k_sha512+504];
	ld.const.u64 	%rd84, [k_sha512+512];
	ld.const.u64 	%rd85, [k_sha512+520];
	ld.const.u64 	%rd86, [k_sha512+528];
	ld.const.u64 	%rd87, [k_sha512+536];
	ld.const.u64 	%rd88, [k_sha512+544];
	ld.const.u64 	%rd89, [k_sha512+552];
	ld.const.u64 	%rd90, [k_sha512+560];
	ld.const.u64 	%rd91, [k_sha512+568];
	ld.const.u64 	%rd92, [k_sha512+576];
	ld.const.u64 	%rd93, [k_sha512+584];
	ld.const.u64 	%rd94, [k_sha512+592];
	ld.const.u64 	%rd95, [k_sha512+600];
	ld.const.u64 	%rd96, [k_sha512+608];
	ld.const.u64 	%rd97, [k_sha512+616];
	ld.const.u64 	%rd98, [k_sha512+624];
	ld.const.u64 	%rd99, [k_sha512+632];
	mov.u64 	%rd142, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28,%dummy}, %rd142;
	}
	shf.l.wrap.b32 	%r29, %r28, %r27, 3;
	shf.l.wrap.b32 	%r30, %r27, %r28, 3;
	mov.b64 	%rd143, {%r30, %r29};
	shf.r.wrap.b32 	%r31, %r27, %r28, 19;
	shf.r.wrap.b32 	%r32, %r28, %r27, 19;
	mov.b64 	%rd144, {%r32, %r31};
	xor.b64  	%rd100, %rd144, %rd143;
	mov.u64 	%rd145, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r33,%dummy}, %rd145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r34}, %rd145;
	}
	shf.r.wrap.b32 	%r35, %r34, %r33, 19;
	shf.r.wrap.b32 	%r36, %r33, %r34, 19;
	mov.b64 	%rd146, {%r36, %r35};
	shf.l.wrap.b32 	%r37, %r33, %r34, 3;
	shf.l.wrap.b32 	%r38, %r34, %r33, 3;
	mov.b64 	%rd147, {%r38, %r37};
	xor.b64  	%rd148, %rd146, %rd147;
	xor.b64  	%rd101, %rd148, 8;
	mov.u64 	%rd149, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39,%dummy}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r40}, %rd149;
	}
	shf.r.wrap.b32 	%r41, %r40, %r39, 1;
	shf.r.wrap.b32 	%r42, %r39, %r40, 1;
	mov.b64 	%rd150, {%r42, %r41};
	shf.r.wrap.b32 	%r43, %r40, %r39, 8;
	shf.r.wrap.b32 	%r44, %r39, %r40, 8;
	mov.b64 	%rd151, {%r44, %r43};
	xor.b64  	%rd152, %rd150, %rd151;
	xor.b64  	%rd102, %rd152, 72057594037927936;
	shf.r.wrap.b32 	%r45, %r27, %r28, 8;
	shf.r.wrap.b32 	%r46, %r28, %r27, 8;
	mov.b64 	%rd153, {%r46, %r45};
	shf.r.wrap.b32 	%r47, %r27, %r28, 1;
	shf.r.wrap.b32 	%r48, %r28, %r27, 1;
	mov.b64 	%rd154, {%r48, %r47};
	xor.b64  	%rd103, %rd154, %rd153;
	shf.r.wrap.b32 	%r49, %r34, %r33, 1;
	shf.r.wrap.b32 	%r50, %r33, %r34, 1;
	mov.b64 	%rd155, {%r50, %r49};
	shf.r.wrap.b32 	%r51, %r34, %r33, 8;
	shf.r.wrap.b32 	%r52, %r33, %r34, 8;
	mov.b64 	%rd156, {%r52, %r51};
	xor.b64  	%rd157, %rd155, %rd156;
	xor.b64  	%rd104, %rd157, 4;
	mov.u32 	%r1927, 0;

BB6_3:
	shr.u64 	%rd158, %rd2860, 32;
	shr.u64 	%rd159, %rd2859, 32;
	shr.u64 	%rd160, %rd2858, 32;
	shr.u64 	%rd161, %rd2857, 32;
	shr.u64 	%rd162, %rd2856, 32;
	shr.u64 	%rd163, %rd2855, 32;
	shr.u64 	%rd164, %rd2854, 32;
	shr.u64 	%rd165, %rd2853, 32;
	bfi.b64 	%rd166, %rd158, %rd2860, 32, 32;
	bfi.b64 	%rd167, %rd159, %rd2859, 32, 32;
	bfi.b64 	%rd168, %rd160, %rd2858, 32, 32;
	bfi.b64 	%rd169, %rd161, %rd2857, 32, 32;
	bfi.b64 	%rd170, %rd162, %rd2856, 32, 32;
	bfi.b64 	%rd171, %rd163, %rd2855, 32, 32;
	bfi.b64 	%rd172, %rd164, %rd2854, 32, 32;
	bfi.b64 	%rd173, %rd165, %rd2853, 32, 32;
	add.s64 	%rd174, %rd166, %rd18;
	add.s64 	%rd175, %rd174, %rd19;
	add.s64 	%rd176, %rd175, %rd20;
	add.s64 	%rd177, %rd175, 2357225248857953701;
	add.s64 	%rd178, %rd176, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r53,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r54}, %rd177;
	}
	shf.r.wrap.b32 	%r55, %r54, %r53, 14;
	shf.r.wrap.b32 	%r56, %r53, %r54, 14;
	mov.b64 	%rd179, {%r56, %r55};
	shf.r.wrap.b32 	%r57, %r54, %r53, 18;
	shf.r.wrap.b32 	%r58, %r53, %r54, 18;
	mov.b64 	%rd180, {%r58, %r57};
	xor.b64  	%rd181, %rd180, %rd179;
	shf.l.wrap.b32 	%r59, %r53, %r54, 23;
	shf.l.wrap.b32 	%r60, %r54, %r53, 23;
	mov.b64 	%rd182, {%r60, %r59};
	xor.b64  	%rd183, %rd181, %rd182;
	and.b64  	%rd184, %rd177, -3887949035690463538;
	xor.b64  	%rd185, %rd184, -7276294671716946913;
	add.s64 	%rd186, %rd167, %rd21;
	add.s64 	%rd187, %rd186, %rd185;
	add.s64 	%rd188, %rd187, %rd183;
	xor.b64  	%rd189, %rd178, -4942790177534073029;
	xor.b64  	%rd190, %rd178, 7640891576956012808;
	and.b64  	%rd191, %rd190, %rd189;
	xor.b64  	%rd192, %rd191, %rd178;
	add.s64 	%rd193, %rd188, %rd192;
	add.s64 	%rd194, %rd188, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r61,%dummy}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r62}, %rd178;
	}
	shf.r.wrap.b32 	%r63, %r62, %r61, 28;
	shf.r.wrap.b32 	%r64, %r61, %r62, 28;
	mov.b64 	%rd195, {%r64, %r63};
	shf.l.wrap.b32 	%r65, %r61, %r62, 30;
	shf.l.wrap.b32 	%r66, %r62, %r61, 30;
	mov.b64 	%rd196, {%r66, %r65};
	xor.b64  	%rd197, %rd196, %rd195;
	shf.l.wrap.b32 	%r67, %r61, %r62, 25;
	shf.l.wrap.b32 	%r68, %r62, %r61, 25;
	mov.b64 	%rd198, {%r68, %r67};
	xor.b64  	%rd199, %rd197, %rd198;
	add.s64 	%rd200, %rd193, %rd199;
	add.s64 	%rd201, %rd200, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r69,%dummy}, %rd194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r70}, %rd194;
	}
	shf.r.wrap.b32 	%r71, %r70, %r69, 14;
	shf.r.wrap.b32 	%r72, %r69, %r70, 14;
	mov.b64 	%rd202, {%r72, %r71};
	shf.r.wrap.b32 	%r73, %r70, %r69, 18;
	shf.r.wrap.b32 	%r74, %r69, %r70, 18;
	mov.b64 	%rd203, {%r74, %r73};
	xor.b64  	%rd204, %rd203, %rd202;
	shf.l.wrap.b32 	%r75, %r69, %r70, 23;
	shf.l.wrap.b32 	%r76, %r70, %r69, 23;
	mov.b64 	%rd205, {%r76, %r75};
	xor.b64  	%rd206, %rd204, %rd205;
	xor.b64  	%rd207, %rd177, 5840696475078001361;
	and.b64  	%rd208, %rd194, %rd207;
	xor.b64  	%rd209, %rd208, 5840696475078001361;
	add.s64 	%rd210, %rd168, %rd22;
	add.s64 	%rd211, %rd210, %rd209;
	add.s64 	%rd212, %rd211, %rd206;
	xor.b64  	%rd213, %rd201, 7640891576956012808;
	xor.b64  	%rd214, %rd201, %rd178;
	and.b64  	%rd215, %rd214, %rd213;
	xor.b64  	%rd216, %rd215, %rd201;
	add.s64 	%rd217, %rd212, %rd216;
	add.s64 	%rd218, %rd212, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r77,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r78}, %rd201;
	}
	shf.r.wrap.b32 	%r79, %r78, %r77, 28;
	shf.r.wrap.b32 	%r80, %r77, %r78, 28;
	mov.b64 	%rd219, {%r80, %r79};
	shf.l.wrap.b32 	%r81, %r77, %r78, 30;
	shf.l.wrap.b32 	%r82, %r78, %r77, 30;
	mov.b64 	%rd220, {%r82, %r81};
	xor.b64  	%rd221, %rd220, %rd219;
	shf.l.wrap.b32 	%r83, %r77, %r78, 25;
	shf.l.wrap.b32 	%r84, %r78, %r77, 25;
	mov.b64 	%rd222, {%r84, %r83};
	xor.b64  	%rd223, %rd221, %rd222;
	add.s64 	%rd224, %rd217, %rd223;
	add.s64 	%rd225, %rd224, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r85,%dummy}, %rd218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r86}, %rd218;
	}
	shf.r.wrap.b32 	%r87, %r86, %r85, 14;
	shf.r.wrap.b32 	%r88, %r85, %r86, 14;
	mov.b64 	%rd226, {%r88, %r87};
	shf.r.wrap.b32 	%r89, %r86, %r85, 18;
	shf.r.wrap.b32 	%r90, %r85, %r86, 18;
	mov.b64 	%rd227, {%r90, %r89};
	xor.b64  	%rd228, %rd227, %rd226;
	shf.l.wrap.b32 	%r91, %r85, %r86, 23;
	shf.l.wrap.b32 	%r92, %r86, %r85, 23;
	mov.b64 	%rd229, {%r92, %r91};
	xor.b64  	%rd230, %rd228, %rd229;
	xor.b64  	%rd231, %rd194, %rd177;
	and.b64  	%rd232, %rd218, %rd231;
	xor.b64  	%rd233, %rd232, %rd177;
	add.s64 	%rd234, %rd169, %rd23;
	add.s64 	%rd235, %rd234, %rd233;
	add.s64 	%rd236, %rd235, %rd230;
	xor.b64  	%rd237, %rd225, %rd178;
	xor.b64  	%rd238, %rd225, %rd201;
	and.b64  	%rd239, %rd238, %rd237;
	xor.b64  	%rd240, %rd239, %rd225;
	add.s64 	%rd241, %rd236, %rd240;
	add.s64 	%rd242, %rd236, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r93,%dummy}, %rd225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r94}, %rd225;
	}
	shf.r.wrap.b32 	%r95, %r94, %r93, 28;
	shf.r.wrap.b32 	%r96, %r93, %r94, 28;
	mov.b64 	%rd243, {%r96, %r95};
	shf.l.wrap.b32 	%r97, %r93, %r94, 30;
	shf.l.wrap.b32 	%r98, %r94, %r93, 30;
	mov.b64 	%rd244, {%r98, %r97};
	xor.b64  	%rd245, %rd244, %rd243;
	shf.l.wrap.b32 	%r99, %r93, %r94, 25;
	shf.l.wrap.b32 	%r100, %r94, %r93, 25;
	mov.b64 	%rd246, {%r100, %r99};
	xor.b64  	%rd247, %rd245, %rd246;
	add.s64 	%rd248, %rd241, %rd247;
	add.s64 	%rd249, %rd248, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r102}, %rd242;
	}
	shf.r.wrap.b32 	%r103, %r102, %r101, 14;
	shf.r.wrap.b32 	%r104, %r101, %r102, 14;
	mov.b64 	%rd250, {%r104, %r103};
	shf.r.wrap.b32 	%r105, %r102, %r101, 18;
	shf.r.wrap.b32 	%r106, %r101, %r102, 18;
	mov.b64 	%rd251, {%r106, %r105};
	xor.b64  	%rd252, %rd251, %rd250;
	shf.l.wrap.b32 	%r107, %r101, %r102, 23;
	shf.l.wrap.b32 	%r108, %r102, %r101, 23;
	mov.b64 	%rd253, {%r108, %r107};
	xor.b64  	%rd254, %rd252, %rd253;
	xor.b64  	%rd255, %rd218, %rd194;
	and.b64  	%rd256, %rd242, %rd255;
	xor.b64  	%rd257, %rd256, %rd194;
	add.s64 	%rd258, %rd177, %rd170;
	add.s64 	%rd259, %rd258, %rd24;
	add.s64 	%rd260, %rd259, %rd257;
	add.s64 	%rd261, %rd260, %rd254;
	add.s64 	%rd262, %rd261, %rd178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r109,%dummy}, %rd249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r110}, %rd249;
	}
	shf.r.wrap.b32 	%r111, %r110, %r109, 28;
	shf.r.wrap.b32 	%r112, %r109, %r110, 28;
	mov.b64 	%rd263, {%r112, %r111};
	shf.l.wrap.b32 	%r113, %r109, %r110, 30;
	shf.l.wrap.b32 	%r114, %r110, %r109, 30;
	mov.b64 	%rd264, {%r114, %r113};
	xor.b64  	%rd265, %rd264, %rd263;
	shf.l.wrap.b32 	%r115, %r109, %r110, 25;
	shf.l.wrap.b32 	%r116, %r110, %r109, 25;
	mov.b64 	%rd266, {%r116, %r115};
	xor.b64  	%rd267, %rd265, %rd266;
	xor.b64  	%rd268, %rd249, %rd201;
	xor.b64  	%rd269, %rd249, %rd225;
	and.b64  	%rd270, %rd269, %rd268;
	xor.b64  	%rd271, %rd270, %rd249;
	add.s64 	%rd272, %rd261, %rd271;
	add.s64 	%rd273, %rd272, %rd267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r117,%dummy}, %rd262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r118}, %rd262;
	}
	shf.r.wrap.b32 	%r119, %r118, %r117, 14;
	shf.r.wrap.b32 	%r120, %r117, %r118, 14;
	mov.b64 	%rd274, {%r120, %r119};
	shf.r.wrap.b32 	%r121, %r118, %r117, 18;
	shf.r.wrap.b32 	%r122, %r117, %r118, 18;
	mov.b64 	%rd275, {%r122, %r121};
	xor.b64  	%rd276, %rd275, %rd274;
	shf.l.wrap.b32 	%r123, %r117, %r118, 23;
	shf.l.wrap.b32 	%r124, %r118, %r117, 23;
	mov.b64 	%rd277, {%r124, %r123};
	xor.b64  	%rd278, %rd276, %rd277;
	xor.b64  	%rd279, %rd242, %rd218;
	and.b64  	%rd280, %rd262, %rd279;
	xor.b64  	%rd281, %rd280, %rd218;
	add.s64 	%rd282, %rd194, %rd171;
	add.s64 	%rd283, %rd282, %rd25;
	add.s64 	%rd284, %rd283, %rd281;
	add.s64 	%rd285, %rd284, %rd278;
	add.s64 	%rd286, %rd285, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r125,%dummy}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r126}, %rd273;
	}
	shf.r.wrap.b32 	%r127, %r126, %r125, 28;
	shf.r.wrap.b32 	%r128, %r125, %r126, 28;
	mov.b64 	%rd287, {%r128, %r127};
	shf.l.wrap.b32 	%r129, %r125, %r126, 30;
	shf.l.wrap.b32 	%r130, %r126, %r125, 30;
	mov.b64 	%rd288, {%r130, %r129};
	xor.b64  	%rd289, %rd288, %rd287;
	shf.l.wrap.b32 	%r131, %r125, %r126, 25;
	shf.l.wrap.b32 	%r132, %r126, %r125, 25;
	mov.b64 	%rd290, {%r132, %r131};
	xor.b64  	%rd291, %rd289, %rd290;
	xor.b64  	%rd292, %rd273, %rd225;
	xor.b64  	%rd293, %rd273, %rd249;
	and.b64  	%rd294, %rd293, %rd292;
	xor.b64  	%rd295, %rd294, %rd273;
	add.s64 	%rd296, %rd285, %rd295;
	add.s64 	%rd297, %rd296, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r133,%dummy}, %rd286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r134}, %rd286;
	}
	shf.r.wrap.b32 	%r135, %r134, %r133, 14;
	shf.r.wrap.b32 	%r136, %r133, %r134, 14;
	mov.b64 	%rd298, {%r136, %r135};
	shf.r.wrap.b32 	%r137, %r134, %r133, 18;
	shf.r.wrap.b32 	%r138, %r133, %r134, 18;
	mov.b64 	%rd299, {%r138, %r137};
	xor.b64  	%rd300, %rd299, %rd298;
	shf.l.wrap.b32 	%r139, %r133, %r134, 23;
	shf.l.wrap.b32 	%r140, %r134, %r133, 23;
	mov.b64 	%rd301, {%r140, %r139};
	xor.b64  	%rd302, %rd300, %rd301;
	xor.b64  	%rd303, %rd262, %rd242;
	and.b64  	%rd304, %rd286, %rd303;
	xor.b64  	%rd305, %rd304, %rd242;
	add.s64 	%rd306, %rd218, %rd172;
	add.s64 	%rd307, %rd306, %rd26;
	add.s64 	%rd308, %rd307, %rd305;
	add.s64 	%rd309, %rd308, %rd302;
	add.s64 	%rd310, %rd309, %rd225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r141,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r142}, %rd297;
	}
	shf.r.wrap.b32 	%r143, %r142, %r141, 28;
	shf.r.wrap.b32 	%r144, %r141, %r142, 28;
	mov.b64 	%rd311, {%r144, %r143};
	shf.l.wrap.b32 	%r145, %r141, %r142, 30;
	shf.l.wrap.b32 	%r146, %r142, %r141, 30;
	mov.b64 	%rd312, {%r146, %r145};
	xor.b64  	%rd313, %rd312, %rd311;
	shf.l.wrap.b32 	%r147, %r141, %r142, 25;
	shf.l.wrap.b32 	%r148, %r142, %r141, 25;
	mov.b64 	%rd314, {%r148, %r147};
	xor.b64  	%rd315, %rd313, %rd314;
	xor.b64  	%rd316, %rd297, %rd249;
	xor.b64  	%rd317, %rd297, %rd273;
	and.b64  	%rd318, %rd317, %rd316;
	xor.b64  	%rd319, %rd318, %rd297;
	add.s64 	%rd320, %rd309, %rd319;
	add.s64 	%rd321, %rd320, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r149,%dummy}, %rd310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r150}, %rd310;
	}
	shf.r.wrap.b32 	%r151, %r150, %r149, 14;
	shf.r.wrap.b32 	%r152, %r149, %r150, 14;
	mov.b64 	%rd322, {%r152, %r151};
	shf.r.wrap.b32 	%r153, %r150, %r149, 18;
	shf.r.wrap.b32 	%r154, %r149, %r150, 18;
	mov.b64 	%rd323, {%r154, %r153};
	xor.b64  	%rd324, %rd323, %rd322;
	shf.l.wrap.b32 	%r155, %r149, %r150, 23;
	shf.l.wrap.b32 	%r156, %r150, %r149, 23;
	mov.b64 	%rd325, {%r156, %r155};
	xor.b64  	%rd326, %rd324, %rd325;
	xor.b64  	%rd327, %rd286, %rd262;
	and.b64  	%rd328, %rd310, %rd327;
	xor.b64  	%rd329, %rd328, %rd262;
	add.s64 	%rd330, %rd242, %rd173;
	add.s64 	%rd331, %rd330, %rd27;
	add.s64 	%rd332, %rd331, %rd329;
	add.s64 	%rd333, %rd332, %rd326;
	add.s64 	%rd334, %rd333, %rd249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r157,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r158}, %rd321;
	}
	shf.r.wrap.b32 	%r159, %r158, %r157, 28;
	shf.r.wrap.b32 	%r160, %r157, %r158, 28;
	mov.b64 	%rd335, {%r160, %r159};
	shf.l.wrap.b32 	%r161, %r157, %r158, 30;
	shf.l.wrap.b32 	%r162, %r158, %r157, 30;
	mov.b64 	%rd336, {%r162, %r161};
	xor.b64  	%rd337, %rd336, %rd335;
	shf.l.wrap.b32 	%r163, %r157, %r158, 25;
	shf.l.wrap.b32 	%r164, %r158, %r157, 25;
	mov.b64 	%rd338, {%r164, %r163};
	xor.b64  	%rd339, %rd337, %rd338;
	xor.b64  	%rd340, %rd321, %rd273;
	xor.b64  	%rd341, %rd321, %rd297;
	and.b64  	%rd342, %rd341, %rd340;
	xor.b64  	%rd343, %rd342, %rd321;
	add.s64 	%rd344, %rd333, %rd343;
	add.s64 	%rd345, %rd344, %rd339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r165,%dummy}, %rd334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r166}, %rd334;
	}
	shf.r.wrap.b32 	%r167, %r166, %r165, 14;
	shf.r.wrap.b32 	%r168, %r165, %r166, 14;
	mov.b64 	%rd346, {%r168, %r167};
	shf.r.wrap.b32 	%r169, %r166, %r165, 18;
	shf.r.wrap.b32 	%r170, %r165, %r166, 18;
	mov.b64 	%rd347, {%r170, %r169};
	xor.b64  	%rd348, %rd347, %rd346;
	shf.l.wrap.b32 	%r171, %r165, %r166, 23;
	shf.l.wrap.b32 	%r172, %r166, %r165, 23;
	mov.b64 	%rd349, {%r172, %r171};
	xor.b64  	%rd350, %rd348, %rd349;
	xor.b64  	%rd351, %rd310, %rd286;
	and.b64  	%rd352, %rd334, %rd351;
	xor.b64  	%rd353, %rd352, %rd286;
	xor.b64  	%rd354, %rd262, -9223372036854775808;
	add.s64 	%rd355, %rd354, %rd28;
	add.s64 	%rd356, %rd355, %rd353;
	add.s64 	%rd357, %rd356, %rd350;
	add.s64 	%rd358, %rd357, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r173,%dummy}, %rd345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r174}, %rd345;
	}
	shf.r.wrap.b32 	%r175, %r174, %r173, 28;
	shf.r.wrap.b32 	%r176, %r173, %r174, 28;
	mov.b64 	%rd359, {%r176, %r175};
	shf.l.wrap.b32 	%r177, %r173, %r174, 30;
	shf.l.wrap.b32 	%r178, %r174, %r173, 30;
	mov.b64 	%rd360, {%r178, %r177};
	xor.b64  	%rd361, %rd360, %rd359;
	shf.l.wrap.b32 	%r179, %r173, %r174, 25;
	shf.l.wrap.b32 	%r180, %r174, %r173, 25;
	mov.b64 	%rd362, {%r180, %r179};
	xor.b64  	%rd363, %rd361, %rd362;
	xor.b64  	%rd364, %rd345, %rd297;
	xor.b64  	%rd365, %rd345, %rd321;
	and.b64  	%rd366, %rd365, %rd364;
	xor.b64  	%rd367, %rd366, %rd345;
	add.s64 	%rd368, %rd357, %rd367;
	add.s64 	%rd369, %rd368, %rd363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd358;
	}
	shf.r.wrap.b32 	%r183, %r182, %r181, 14;
	shf.r.wrap.b32 	%r184, %r181, %r182, 14;
	mov.b64 	%rd370, {%r184, %r183};
	shf.r.wrap.b32 	%r185, %r182, %r181, 18;
	shf.r.wrap.b32 	%r186, %r181, %r182, 18;
	mov.b64 	%rd371, {%r186, %r185};
	xor.b64  	%rd372, %rd371, %rd370;
	shf.l.wrap.b32 	%r187, %r181, %r182, 23;
	shf.l.wrap.b32 	%r188, %r182, %r181, 23;
	mov.b64 	%rd373, {%r188, %r187};
	xor.b64  	%rd374, %rd372, %rd373;
	xor.b64  	%rd375, %rd334, %rd310;
	and.b64  	%rd376, %rd358, %rd375;
	xor.b64  	%rd377, %rd376, %rd310;
	add.s64 	%rd378, %rd29, %rd286;
	add.s64 	%rd379, %rd378, %rd377;
	add.s64 	%rd380, %rd379, %rd374;
	add.s64 	%rd381, %rd380, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r189,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r190}, %rd369;
	}
	shf.r.wrap.b32 	%r191, %r190, %r189, 28;
	shf.r.wrap.b32 	%r192, %r189, %r190, 28;
	mov.b64 	%rd382, {%r192, %r191};
	shf.l.wrap.b32 	%r193, %r189, %r190, 30;
	shf.l.wrap.b32 	%r194, %r190, %r189, 30;
	mov.b64 	%rd383, {%r194, %r193};
	xor.b64  	%rd384, %rd383, %rd382;
	shf.l.wrap.b32 	%r195, %r189, %r190, 25;
	shf.l.wrap.b32 	%r196, %r190, %r189, 25;
	mov.b64 	%rd385, {%r196, %r195};
	xor.b64  	%rd386, %rd384, %rd385;
	xor.b64  	%rd387, %rd369, %rd321;
	xor.b64  	%rd388, %rd369, %rd345;
	and.b64  	%rd389, %rd388, %rd387;
	xor.b64  	%rd390, %rd389, %rd369;
	add.s64 	%rd391, %rd380, %rd390;
	add.s64 	%rd392, %rd391, %rd386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r197,%dummy}, %rd381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd381;
	}
	shf.r.wrap.b32 	%r199, %r198, %r197, 14;
	shf.r.wrap.b32 	%r200, %r197, %r198, 14;
	mov.b64 	%rd393, {%r200, %r199};
	shf.r.wrap.b32 	%r201, %r198, %r197, 18;
	shf.r.wrap.b32 	%r202, %r197, %r198, 18;
	mov.b64 	%rd394, {%r202, %r201};
	xor.b64  	%rd395, %rd394, %rd393;
	shf.l.wrap.b32 	%r203, %r197, %r198, 23;
	shf.l.wrap.b32 	%r204, %r198, %r197, 23;
	mov.b64 	%rd396, {%r204, %r203};
	xor.b64  	%rd397, %rd395, %rd396;
	xor.b64  	%rd398, %rd358, %rd334;
	and.b64  	%rd399, %rd381, %rd398;
	xor.b64  	%rd400, %rd399, %rd334;
	add.s64 	%rd401, %rd30, %rd310;
	add.s64 	%rd402, %rd401, %rd400;
	add.s64 	%rd403, %rd402, %rd397;
	add.s64 	%rd404, %rd403, %rd321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r205,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r206}, %rd392;
	}
	shf.r.wrap.b32 	%r207, %r206, %r205, 28;
	shf.r.wrap.b32 	%r208, %r205, %r206, 28;
	mov.b64 	%rd405, {%r208, %r207};
	shf.l.wrap.b32 	%r209, %r205, %r206, 30;
	shf.l.wrap.b32 	%r210, %r206, %r205, 30;
	mov.b64 	%rd406, {%r210, %r209};
	xor.b64  	%rd407, %rd406, %rd405;
	shf.l.wrap.b32 	%r211, %r205, %r206, 25;
	shf.l.wrap.b32 	%r212, %r206, %r205, 25;
	mov.b64 	%rd408, {%r212, %r211};
	xor.b64  	%rd409, %rd407, %rd408;
	xor.b64  	%rd410, %rd392, %rd345;
	xor.b64  	%rd411, %rd392, %rd369;
	and.b64  	%rd412, %rd411, %rd410;
	xor.b64  	%rd413, %rd412, %rd392;
	add.s64 	%rd414, %rd403, %rd413;
	add.s64 	%rd415, %rd414, %rd409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r213,%dummy}, %rd404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd404;
	}
	shf.r.wrap.b32 	%r215, %r214, %r213, 14;
	shf.r.wrap.b32 	%r216, %r213, %r214, 14;
	mov.b64 	%rd416, {%r216, %r215};
	shf.r.wrap.b32 	%r217, %r214, %r213, 18;
	shf.r.wrap.b32 	%r218, %r213, %r214, 18;
	mov.b64 	%rd417, {%r218, %r217};
	xor.b64  	%rd418, %rd417, %rd416;
	shf.l.wrap.b32 	%r219, %r213, %r214, 23;
	shf.l.wrap.b32 	%r220, %r214, %r213, 23;
	mov.b64 	%rd419, {%r220, %r219};
	xor.b64  	%rd420, %rd418, %rd419;
	xor.b64  	%rd421, %rd381, %rd358;
	and.b64  	%rd422, %rd404, %rd421;
	xor.b64  	%rd423, %rd422, %rd358;
	add.s64 	%rd424, %rd31, %rd334;
	add.s64 	%rd425, %rd424, %rd423;
	add.s64 	%rd426, %rd425, %rd420;
	add.s64 	%rd427, %rd426, %rd345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r221,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r222}, %rd415;
	}
	shf.r.wrap.b32 	%r223, %r222, %r221, 28;
	shf.r.wrap.b32 	%r224, %r221, %r222, 28;
	mov.b64 	%rd428, {%r224, %r223};
	shf.l.wrap.b32 	%r225, %r221, %r222, 30;
	shf.l.wrap.b32 	%r226, %r222, %r221, 30;
	mov.b64 	%rd429, {%r226, %r225};
	xor.b64  	%rd430, %rd429, %rd428;
	shf.l.wrap.b32 	%r227, %r221, %r222, 25;
	shf.l.wrap.b32 	%r228, %r222, %r221, 25;
	mov.b64 	%rd431, {%r228, %r227};
	xor.b64  	%rd432, %rd430, %rd431;
	xor.b64  	%rd433, %rd415, %rd369;
	xor.b64  	%rd434, %rd415, %rd392;
	and.b64  	%rd435, %rd434, %rd433;
	xor.b64  	%rd436, %rd435, %rd415;
	add.s64 	%rd437, %rd426, %rd436;
	add.s64 	%rd438, %rd437, %rd432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r229,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r230}, %rd427;
	}
	shf.r.wrap.b32 	%r231, %r230, %r229, 14;
	shf.r.wrap.b32 	%r232, %r229, %r230, 14;
	mov.b64 	%rd439, {%r232, %r231};
	shf.r.wrap.b32 	%r233, %r230, %r229, 18;
	shf.r.wrap.b32 	%r234, %r229, %r230, 18;
	mov.b64 	%rd440, {%r234, %r233};
	xor.b64  	%rd441, %rd440, %rd439;
	shf.l.wrap.b32 	%r235, %r229, %r230, 23;
	shf.l.wrap.b32 	%r236, %r230, %r229, 23;
	mov.b64 	%rd442, {%r236, %r235};
	xor.b64  	%rd443, %rd441, %rd442;
	xor.b64  	%rd444, %rd404, %rd381;
	and.b64  	%rd445, %rd427, %rd444;
	xor.b64  	%rd446, %rd445, %rd381;
	add.s64 	%rd447, %rd32, %rd358;
	add.s64 	%rd448, %rd447, %rd446;
	add.s64 	%rd449, %rd448, %rd443;
	add.s64 	%rd450, %rd449, %rd369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r237,%dummy}, %rd438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r238}, %rd438;
	}
	shf.r.wrap.b32 	%r239, %r238, %r237, 28;
	shf.r.wrap.b32 	%r240, %r237, %r238, 28;
	mov.b64 	%rd451, {%r240, %r239};
	shf.l.wrap.b32 	%r241, %r237, %r238, 30;
	shf.l.wrap.b32 	%r242, %r238, %r237, 30;
	mov.b64 	%rd452, {%r242, %r241};
	xor.b64  	%rd453, %rd452, %rd451;
	shf.l.wrap.b32 	%r243, %r237, %r238, 25;
	shf.l.wrap.b32 	%r244, %r238, %r237, 25;
	mov.b64 	%rd454, {%r244, %r243};
	xor.b64  	%rd455, %rd453, %rd454;
	xor.b64  	%rd456, %rd438, %rd392;
	xor.b64  	%rd457, %rd438, %rd415;
	and.b64  	%rd458, %rd457, %rd456;
	xor.b64  	%rd459, %rd458, %rd438;
	add.s64 	%rd460, %rd449, %rd459;
	add.s64 	%rd461, %rd460, %rd455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd450;
	}
	shf.r.wrap.b32 	%r247, %r246, %r245, 14;
	shf.r.wrap.b32 	%r248, %r245, %r246, 14;
	mov.b64 	%rd462, {%r248, %r247};
	shf.r.wrap.b32 	%r249, %r246, %r245, 18;
	shf.r.wrap.b32 	%r250, %r245, %r246, 18;
	mov.b64 	%rd463, {%r250, %r249};
	xor.b64  	%rd464, %rd463, %rd462;
	shf.l.wrap.b32 	%r251, %r245, %r246, 23;
	shf.l.wrap.b32 	%r252, %r246, %r245, 23;
	mov.b64 	%rd465, {%r252, %r251};
	xor.b64  	%rd466, %rd464, %rd465;
	xor.b64  	%rd467, %rd427, %rd404;
	and.b64  	%rd468, %rd450, %rd467;
	xor.b64  	%rd469, %rd468, %rd404;
	add.s64 	%rd470, %rd33, %rd381;
	add.s64 	%rd471, %rd470, %rd469;
	add.s64 	%rd472, %rd471, %rd466;
	add.s64 	%rd473, %rd472, %rd392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r253,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r254}, %rd461;
	}
	shf.r.wrap.b32 	%r255, %r254, %r253, 28;
	shf.r.wrap.b32 	%r256, %r253, %r254, 28;
	mov.b64 	%rd474, {%r256, %r255};
	shf.l.wrap.b32 	%r257, %r253, %r254, 30;
	shf.l.wrap.b32 	%r258, %r254, %r253, 30;
	mov.b64 	%rd475, {%r258, %r257};
	xor.b64  	%rd476, %rd475, %rd474;
	shf.l.wrap.b32 	%r259, %r253, %r254, 25;
	shf.l.wrap.b32 	%r260, %r254, %r253, 25;
	mov.b64 	%rd477, {%r260, %r259};
	xor.b64  	%rd478, %rd476, %rd477;
	xor.b64  	%rd479, %rd461, %rd415;
	xor.b64  	%rd480, %rd461, %rd438;
	and.b64  	%rd481, %rd480, %rd479;
	xor.b64  	%rd482, %rd481, %rd461;
	add.s64 	%rd483, %rd472, %rd482;
	add.s64 	%rd484, %rd483, %rd478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r261,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r262}, %rd473;
	}
	shf.r.wrap.b32 	%r263, %r262, %r261, 14;
	shf.r.wrap.b32 	%r264, %r261, %r262, 14;
	mov.b64 	%rd485, {%r264, %r263};
	shf.r.wrap.b32 	%r265, %r262, %r261, 18;
	shf.r.wrap.b32 	%r266, %r261, %r262, 18;
	mov.b64 	%rd486, {%r266, %r265};
	xor.b64  	%rd487, %rd486, %rd485;
	shf.l.wrap.b32 	%r267, %r261, %r262, 23;
	shf.l.wrap.b32 	%r268, %r262, %r261, 23;
	mov.b64 	%rd488, {%r268, %r267};
	xor.b64  	%rd489, %rd487, %rd488;
	xor.b64  	%rd490, %rd450, %rd427;
	and.b64  	%rd491, %rd473, %rd490;
	xor.b64  	%rd492, %rd491, %rd427;
	add.s64 	%rd493, %rd34, %rd404;
	add.s64 	%rd494, %rd493, %rd492;
	add.s64 	%rd495, %rd494, %rd489;
	add.s64 	%rd496, %rd495, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r269,%dummy}, %rd484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r270}, %rd484;
	}
	shf.r.wrap.b32 	%r271, %r270, %r269, 28;
	shf.r.wrap.b32 	%r272, %r269, %r270, 28;
	mov.b64 	%rd497, {%r272, %r271};
	shf.l.wrap.b32 	%r273, %r269, %r270, 30;
	shf.l.wrap.b32 	%r274, %r270, %r269, 30;
	mov.b64 	%rd498, {%r274, %r273};
	xor.b64  	%rd499, %rd498, %rd497;
	shf.l.wrap.b32 	%r275, %r269, %r270, 25;
	shf.l.wrap.b32 	%r276, %r270, %r269, 25;
	mov.b64 	%rd500, {%r276, %r275};
	xor.b64  	%rd501, %rd499, %rd500;
	xor.b64  	%rd502, %rd484, %rd438;
	xor.b64  	%rd503, %rd484, %rd461;
	and.b64  	%rd504, %rd503, %rd502;
	xor.b64  	%rd505, %rd504, %rd484;
	add.s64 	%rd506, %rd495, %rd505;
	add.s64 	%rd507, %rd506, %rd501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r278}, %rd496;
	}
	shf.r.wrap.b32 	%r279, %r278, %r277, 14;
	shf.r.wrap.b32 	%r280, %r277, %r278, 14;
	mov.b64 	%rd508, {%r280, %r279};
	shf.r.wrap.b32 	%r281, %r278, %r277, 18;
	shf.r.wrap.b32 	%r282, %r277, %r278, 18;
	mov.b64 	%rd509, {%r282, %r281};
	xor.b64  	%rd510, %rd509, %rd508;
	shf.l.wrap.b32 	%r283, %r277, %r278, 23;
	shf.l.wrap.b32 	%r284, %r278, %r277, 23;
	mov.b64 	%rd511, {%r284, %r283};
	xor.b64  	%rd512, %rd510, %rd511;
	xor.b64  	%rd513, %rd473, %rd450;
	and.b64  	%rd514, %rd496, %rd513;
	xor.b64  	%rd515, %rd514, %rd450;
	add.s64 	%rd516, %rd427, %rd35;
	add.s64 	%rd517, %rd516, %rd515;
	add.s64 	%rd518, %rd517, %rd512;
	add.s64 	%rd519, %rd518, 512;
	add.s64 	%rd520, %rd519, %rd438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r286}, %rd507;
	}
	shf.r.wrap.b32 	%r287, %r286, %r285, 28;
	shf.r.wrap.b32 	%r288, %r285, %r286, 28;
	mov.b64 	%rd521, {%r288, %r287};
	shf.l.wrap.b32 	%r289, %r285, %r286, 30;
	shf.l.wrap.b32 	%r290, %r286, %r285, 30;
	mov.b64 	%rd522, {%r290, %r289};
	xor.b64  	%rd523, %rd522, %rd521;
	shf.l.wrap.b32 	%r291, %r285, %r286, 25;
	shf.l.wrap.b32 	%r292, %r286, %r285, 25;
	mov.b64 	%rd524, {%r292, %r291};
	xor.b64  	%rd525, %rd523, %rd524;
	xor.b64  	%rd526, %rd507, %rd461;
	xor.b64  	%rd527, %rd507, %rd484;
	and.b64  	%rd528, %rd527, %rd526;
	xor.b64  	%rd529, %rd528, %rd507;
	add.s64 	%rd530, %rd519, %rd529;
	add.s64 	%rd531, %rd530, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd167;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 1;
	shf.r.wrap.b32 	%r296, %r293, %r294, 1;
	mov.b64 	%rd532, {%r296, %r295};
	shf.r.wrap.b32 	%r297, %r294, %r293, 8;
	shf.r.wrap.b32 	%r298, %r293, %r294, 8;
	mov.b64 	%rd533, {%r298, %r297};
	shr.u64 	%rd534, %rd167, 7;
	xor.b64  	%rd535, %rd532, %rd534;
	xor.b64  	%rd536, %rd535, %rd533;
	add.s64 	%rd537, %rd166, %rd100;
	add.s64 	%rd538, %rd537, %rd536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd168;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 1;
	shf.r.wrap.b32 	%r302, %r299, %r300, 1;
	mov.b64 	%rd539, {%r302, %r301};
	shf.r.wrap.b32 	%r303, %r300, %r299, 8;
	shf.r.wrap.b32 	%r304, %r299, %r300, 8;
	mov.b64 	%rd540, {%r304, %r303};
	shr.u64 	%rd541, %rd168, 7;
	xor.b64  	%rd542, %rd539, %rd541;
	xor.b64  	%rd543, %rd542, %rd540;
	add.s64 	%rd544, %rd167, %rd101;
	add.s64 	%rd545, %rd544, %rd543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r306}, %rd538;
	}
	shf.r.wrap.b32 	%r307, %r306, %r305, 19;
	shf.r.wrap.b32 	%r308, %r305, %r306, 19;
	mov.b64 	%rd546, {%r308, %r307};
	shf.l.wrap.b32 	%r309, %r305, %r306, 3;
	shf.l.wrap.b32 	%r310, %r306, %r305, 3;
	mov.b64 	%rd547, {%r310, %r309};
	shr.u64 	%rd548, %rd538, 6;
	xor.b64  	%rd549, %rd546, %rd548;
	xor.b64  	%rd550, %rd549, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r311,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r312}, %rd169;
	}
	shf.r.wrap.b32 	%r313, %r312, %r311, 1;
	shf.r.wrap.b32 	%r314, %r311, %r312, 1;
	mov.b64 	%rd551, {%r314, %r313};
	shf.r.wrap.b32 	%r315, %r312, %r311, 8;
	shf.r.wrap.b32 	%r316, %r311, %r312, 8;
	mov.b64 	%rd552, {%r316, %r315};
	shr.u64 	%rd553, %rd169, 7;
	xor.b64  	%rd554, %rd551, %rd553;
	xor.b64  	%rd555, %rd554, %rd552;
	add.s64 	%rd556, %rd168, %rd550;
	add.s64 	%rd557, %rd556, %rd555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r317,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r318}, %rd545;
	}
	shf.r.wrap.b32 	%r319, %r318, %r317, 19;
	shf.r.wrap.b32 	%r320, %r317, %r318, 19;
	mov.b64 	%rd558, {%r320, %r319};
	shf.l.wrap.b32 	%r321, %r317, %r318, 3;
	shf.l.wrap.b32 	%r322, %r318, %r317, 3;
	mov.b64 	%rd559, {%r322, %r321};
	shr.u64 	%rd560, %rd545, 6;
	xor.b64  	%rd561, %rd558, %rd560;
	xor.b64  	%rd562, %rd561, %rd559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd170;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 1;
	shf.r.wrap.b32 	%r326, %r323, %r324, 1;
	mov.b64 	%rd563, {%r326, %r325};
	shf.r.wrap.b32 	%r327, %r324, %r323, 8;
	shf.r.wrap.b32 	%r328, %r323, %r324, 8;
	mov.b64 	%rd564, {%r328, %r327};
	shr.u64 	%rd565, %rd170, 7;
	xor.b64  	%rd566, %rd563, %rd565;
	xor.b64  	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd169, %rd562;
	add.s64 	%rd569, %rd568, %rd567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd557;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 19;
	shf.r.wrap.b32 	%r332, %r329, %r330, 19;
	mov.b64 	%rd570, {%r332, %r331};
	shf.l.wrap.b32 	%r333, %r329, %r330, 3;
	shf.l.wrap.b32 	%r334, %r330, %r329, 3;
	mov.b64 	%rd571, {%r334, %r333};
	shr.u64 	%rd572, %rd557, 6;
	xor.b64  	%rd573, %rd570, %rd572;
	xor.b64  	%rd574, %rd573, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r335,%dummy}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd171;
	}
	shf.r.wrap.b32 	%r337, %r336, %r335, 1;
	shf.r.wrap.b32 	%r338, %r335, %r336, 1;
	mov.b64 	%rd575, {%r338, %r337};
	shf.r.wrap.b32 	%r339, %r336, %r335, 8;
	shf.r.wrap.b32 	%r340, %r335, %r336, 8;
	mov.b64 	%rd576, {%r340, %r339};
	shr.u64 	%rd577, %rd171, 7;
	xor.b64  	%rd578, %rd575, %rd577;
	xor.b64  	%rd579, %rd578, %rd576;
	add.s64 	%rd580, %rd170, %rd574;
	add.s64 	%rd581, %rd580, %rd579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd569;
	}
	shf.r.wrap.b32 	%r343, %r342, %r341, 19;
	shf.r.wrap.b32 	%r344, %r341, %r342, 19;
	mov.b64 	%rd582, {%r344, %r343};
	shf.l.wrap.b32 	%r345, %r341, %r342, 3;
	shf.l.wrap.b32 	%r346, %r342, %r341, 3;
	mov.b64 	%rd583, {%r346, %r345};
	shr.u64 	%rd584, %rd569, 6;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd172;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 1;
	shf.r.wrap.b32 	%r350, %r347, %r348, 1;
	mov.b64 	%rd587, {%r350, %r349};
	shf.r.wrap.b32 	%r351, %r348, %r347, 8;
	shf.r.wrap.b32 	%r352, %r347, %r348, 8;
	mov.b64 	%rd588, {%r352, %r351};
	shr.u64 	%rd589, %rd172, 7;
	xor.b64  	%rd590, %rd587, %rd589;
	xor.b64  	%rd591, %rd590, %rd588;
	add.s64 	%rd592, %rd171, %rd586;
	add.s64 	%rd593, %rd592, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd581;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 19;
	shf.r.wrap.b32 	%r356, %r353, %r354, 19;
	mov.b64 	%rd594, {%r356, %r355};
	shf.l.wrap.b32 	%r357, %r353, %r354, 3;
	shf.l.wrap.b32 	%r358, %r354, %r353, 3;
	mov.b64 	%rd595, {%r358, %r357};
	shr.u64 	%rd596, %rd581, 6;
	xor.b64  	%rd597, %rd594, %rd596;
	xor.b64  	%rd598, %rd597, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r359,%dummy}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd173;
	}
	shf.r.wrap.b32 	%r361, %r360, %r359, 1;
	shf.r.wrap.b32 	%r362, %r359, %r360, 1;
	mov.b64 	%rd599, {%r362, %r361};
	shf.r.wrap.b32 	%r363, %r360, %r359, 8;
	shf.r.wrap.b32 	%r364, %r359, %r360, 8;
	mov.b64 	%rd600, {%r364, %r363};
	shr.u64 	%rd601, %rd173, 7;
	xor.b64  	%rd602, %rd599, %rd601;
	xor.b64  	%rd603, %rd602, %rd600;
	add.s64 	%rd604, %rd172, %rd598;
	add.s64 	%rd605, %rd604, %rd603;
	add.s64 	%rd606, %rd605, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r365,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r366}, %rd593;
	}
	shf.r.wrap.b32 	%r367, %r366, %r365, 19;
	shf.r.wrap.b32 	%r368, %r365, %r366, 19;
	mov.b64 	%rd607, {%r368, %r367};
	shf.l.wrap.b32 	%r369, %r365, %r366, 3;
	shf.l.wrap.b32 	%r370, %r366, %r365, 3;
	mov.b64 	%rd608, {%r370, %r369};
	shr.u64 	%rd609, %rd593, 6;
	xor.b64  	%rd610, %rd607, %rd609;
	xor.b64  	%rd611, %rd610, %rd608;
	add.s64 	%rd612, %rd538, %rd173;
	add.s64 	%rd613, %rd612, %rd611;
	add.s64 	%rd614, %rd613, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd606;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 19;
	shf.r.wrap.b32 	%r374, %r371, %r372, 19;
	mov.b64 	%rd615, {%r374, %r373};
	shf.l.wrap.b32 	%r375, %r371, %r372, 3;
	shf.l.wrap.b32 	%r376, %r372, %r371, 3;
	mov.b64 	%rd616, {%r376, %r375};
	shr.u64 	%rd617, %rd606, 6;
	xor.b64  	%rd618, %rd615, %rd617;
	xor.b64  	%rd619, %rd618, %rd616;
	xor.b64  	%rd620, %rd545, -9223372036854775808;
	add.s64 	%rd621, %rd620, %rd619;
	add.s64 	%rd622, %rd621, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r377,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r378}, %rd614;
	}
	shf.r.wrap.b32 	%r379, %r378, %r377, 19;
	shf.r.wrap.b32 	%r380, %r377, %r378, 19;
	mov.b64 	%rd623, {%r380, %r379};
	shf.l.wrap.b32 	%r381, %r377, %r378, 3;
	shf.l.wrap.b32 	%r382, %r378, %r377, 3;
	mov.b64 	%rd624, {%r382, %r381};
	shr.u64 	%rd625, %rd614, 6;
	xor.b64  	%rd626, %rd623, %rd625;
	xor.b64  	%rd627, %rd626, %rd624;
	add.s64 	%rd628, %rd557, %rd627;
	add.s64 	%rd629, %rd628, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r383,%dummy}, %rd622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r384}, %rd622;
	}
	shf.r.wrap.b32 	%r385, %r384, %r383, 19;
	shf.r.wrap.b32 	%r386, %r383, %r384, 19;
	mov.b64 	%rd630, {%r386, %r385};
	shf.l.wrap.b32 	%r387, %r383, %r384, 3;
	shf.l.wrap.b32 	%r388, %r384, %r383, 3;
	mov.b64 	%rd631, {%r388, %r387};
	shr.u64 	%rd632, %rd622, 6;
	xor.b64  	%rd633, %rd630, %rd632;
	xor.b64  	%rd634, %rd633, %rd631;
	add.s64 	%rd635, %rd569, %rd634;
	add.s64 	%rd636, %rd635, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd629;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 19;
	shf.r.wrap.b32 	%r392, %r389, %r390, 19;
	mov.b64 	%rd637, {%r392, %r391};
	shf.l.wrap.b32 	%r393, %r389, %r390, 3;
	shf.l.wrap.b32 	%r394, %r390, %r389, 3;
	mov.b64 	%rd638, {%r394, %r393};
	shr.u64 	%rd639, %rd629, 6;
	xor.b64  	%rd640, %rd637, %rd639;
	xor.b64  	%rd641, %rd640, %rd638;
	add.s64 	%rd642, %rd581, %rd641;
	add.s64 	%rd643, %rd642, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd636;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 19;
	shf.r.wrap.b32 	%r398, %r395, %r396, 19;
	mov.b64 	%rd644, {%r398, %r397};
	shf.l.wrap.b32 	%r399, %r395, %r396, 3;
	shf.l.wrap.b32 	%r400, %r396, %r395, 3;
	mov.b64 	%rd645, {%r400, %r399};
	shr.u64 	%rd646, %rd636, 6;
	xor.b64  	%rd647, %rd644, %rd646;
	xor.b64  	%rd648, %rd647, %rd645;
	add.s64 	%rd649, %rd593, %rd648;
	add.s64 	%rd650, %rd649, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd643;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 19;
	shf.r.wrap.b32 	%r404, %r401, %r402, 19;
	mov.b64 	%rd651, {%r404, %r403};
	shf.l.wrap.b32 	%r405, %r401, %r402, 3;
	shf.l.wrap.b32 	%r406, %r402, %r401, 3;
	mov.b64 	%rd652, {%r406, %r405};
	shr.u64 	%rd653, %rd643, 6;
	xor.b64  	%rd654, %rd651, %rd653;
	xor.b64  	%rd655, %rd654, %rd652;
	add.s64 	%rd656, %rd606, %rd655;
	add.s64 	%rd657, %rd656, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd650;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 19;
	shf.r.wrap.b32 	%r410, %r407, %r408, 19;
	mov.b64 	%rd658, {%r410, %r409};
	shf.l.wrap.b32 	%r411, %r407, %r408, 3;
	shf.l.wrap.b32 	%r412, %r408, %r407, 3;
	mov.b64 	%rd659, {%r412, %r411};
	shr.u64 	%rd660, %rd650, 6;
	xor.b64  	%rd661, %rd658, %rd660;
	xor.b64  	%rd662, %rd661, %rd659;
	add.s64 	%rd663, %rd614, %rd662;
	add.s64 	%rd664, %rd663, %rd104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd657;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 19;
	shf.r.wrap.b32 	%r416, %r413, %r414, 19;
	mov.b64 	%rd665, {%r416, %r415};
	shf.l.wrap.b32 	%r417, %r413, %r414, 3;
	shf.l.wrap.b32 	%r418, %r414, %r413, 3;
	mov.b64 	%rd666, {%r418, %r417};
	shr.u64 	%rd667, %rd657, 6;
	xor.b64  	%rd668, %rd665, %rd667;
	xor.b64  	%rd669, %rd668, %rd666;
	shf.r.wrap.b32 	%r419, %r306, %r305, 1;
	shf.r.wrap.b32 	%r420, %r305, %r306, 1;
	mov.b64 	%rd670, {%r420, %r419};
	shf.r.wrap.b32 	%r421, %r306, %r305, 8;
	shf.r.wrap.b32 	%r422, %r305, %r306, 8;
	mov.b64 	%rd671, {%r422, %r421};
	shr.u64 	%rd672, %rd538, 7;
	xor.b64  	%rd673, %rd670, %rd672;
	xor.b64  	%rd674, %rd673, %rd671;
	add.s64 	%rd675, %rd622, %rd669;
	add.s64 	%rd676, %rd675, %rd674;
	add.s64 	%rd677, %rd676, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r423,%dummy}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r424}, %rd520;
	}
	shf.r.wrap.b32 	%r425, %r424, %r423, 14;
	shf.r.wrap.b32 	%r426, %r423, %r424, 14;
	mov.b64 	%rd678, {%r426, %r425};
	shf.r.wrap.b32 	%r427, %r424, %r423, 18;
	shf.r.wrap.b32 	%r428, %r423, %r424, 18;
	mov.b64 	%rd679, {%r428, %r427};
	xor.b64  	%rd680, %rd679, %rd678;
	shf.l.wrap.b32 	%r429, %r423, %r424, 23;
	shf.l.wrap.b32 	%r430, %r424, %r423, 23;
	mov.b64 	%rd681, {%r430, %r429};
	xor.b64  	%rd682, %rd680, %rd681;
	xor.b64  	%rd683, %rd496, %rd473;
	and.b64  	%rd684, %rd683, %rd520;
	xor.b64  	%rd685, %rd684, %rd473;
	add.s64 	%rd686, %rd685, %rd450;
	add.s64 	%rd687, %rd686, %rd538;
	add.s64 	%rd688, %rd687, %rd36;
	add.s64 	%rd689, %rd688, %rd682;
	add.s64 	%rd690, %rd689, %rd461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd531;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 28;
	shf.r.wrap.b32 	%r434, %r431, %r432, 28;
	mov.b64 	%rd691, {%r434, %r433};
	shf.l.wrap.b32 	%r435, %r431, %r432, 30;
	shf.l.wrap.b32 	%r436, %r432, %r431, 30;
	mov.b64 	%rd692, {%r436, %r435};
	xor.b64  	%rd693, %rd692, %rd691;
	shf.l.wrap.b32 	%r437, %r431, %r432, 25;
	shf.l.wrap.b32 	%r438, %r432, %r431, 25;
	mov.b64 	%rd694, {%r438, %r437};
	xor.b64  	%rd695, %rd693, %rd694;
	xor.b64  	%rd696, %rd531, %rd484;
	xor.b64  	%rd697, %rd531, %rd507;
	and.b64  	%rd698, %rd697, %rd696;
	xor.b64  	%rd699, %rd698, %rd531;
	add.s64 	%rd700, %rd689, %rd699;
	add.s64 	%rd701, %rd700, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r439,%dummy}, %rd690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd690;
	}
	shf.r.wrap.b32 	%r441, %r440, %r439, 14;
	shf.r.wrap.b32 	%r442, %r439, %r440, 14;
	mov.b64 	%rd702, {%r442, %r441};
	shf.r.wrap.b32 	%r443, %r440, %r439, 18;
	shf.r.wrap.b32 	%r444, %r439, %r440, 18;
	mov.b64 	%rd703, {%r444, %r443};
	xor.b64  	%rd704, %rd703, %rd702;
	shf.l.wrap.b32 	%r445, %r439, %r440, 23;
	shf.l.wrap.b32 	%r446, %r440, %r439, 23;
	mov.b64 	%rd705, {%r446, %r445};
	xor.b64  	%rd706, %rd704, %rd705;
	xor.b64  	%rd707, %rd520, %rd496;
	and.b64  	%rd708, %rd690, %rd707;
	xor.b64  	%rd709, %rd708, %rd496;
	add.s64 	%rd710, %rd545, %rd473;
	add.s64 	%rd711, %rd710, %rd37;
	add.s64 	%rd712, %rd711, %rd709;
	add.s64 	%rd713, %rd712, %rd706;
	add.s64 	%rd714, %rd713, %rd484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd701;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 28;
	shf.r.wrap.b32 	%r450, %r447, %r448, 28;
	mov.b64 	%rd715, {%r450, %r449};
	shf.l.wrap.b32 	%r451, %r447, %r448, 30;
	shf.l.wrap.b32 	%r452, %r448, %r447, 30;
	mov.b64 	%rd716, {%r452, %r451};
	xor.b64  	%rd717, %rd716, %rd715;
	shf.l.wrap.b32 	%r453, %r447, %r448, 25;
	shf.l.wrap.b32 	%r454, %r448, %r447, 25;
	mov.b64 	%rd718, {%r454, %r453};
	xor.b64  	%rd719, %rd717, %rd718;
	xor.b64  	%rd720, %rd701, %rd507;
	xor.b64  	%rd721, %rd701, %rd531;
	and.b64  	%rd722, %rd721, %rd720;
	xor.b64  	%rd723, %rd722, %rd701;
	add.s64 	%rd724, %rd713, %rd723;
	add.s64 	%rd725, %rd724, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd714;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 14;
	shf.r.wrap.b32 	%r458, %r455, %r456, 14;
	mov.b64 	%rd726, {%r458, %r457};
	shf.r.wrap.b32 	%r459, %r456, %r455, 18;
	shf.r.wrap.b32 	%r460, %r455, %r456, 18;
	mov.b64 	%rd727, {%r460, %r459};
	xor.b64  	%rd728, %rd727, %rd726;
	shf.l.wrap.b32 	%r461, %r455, %r456, 23;
	shf.l.wrap.b32 	%r462, %r456, %r455, 23;
	mov.b64 	%rd729, {%r462, %r461};
	xor.b64  	%rd730, %rd728, %rd729;
	xor.b64  	%rd731, %rd690, %rd520;
	and.b64  	%rd732, %rd714, %rd731;
	xor.b64  	%rd733, %rd732, %rd520;
	add.s64 	%rd734, %rd557, %rd496;
	add.s64 	%rd735, %rd734, %rd38;
	add.s64 	%rd736, %rd735, %rd733;
	add.s64 	%rd737, %rd736, %rd730;
	add.s64 	%rd738, %rd737, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd725;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 28;
	shf.r.wrap.b32 	%r466, %r463, %r464, 28;
	mov.b64 	%rd739, {%r466, %r465};
	shf.l.wrap.b32 	%r467, %r463, %r464, 30;
	shf.l.wrap.b32 	%r468, %r464, %r463, 30;
	mov.b64 	%rd740, {%r468, %r467};
	xor.b64  	%rd741, %rd740, %rd739;
	shf.l.wrap.b32 	%r469, %r463, %r464, 25;
	shf.l.wrap.b32 	%r470, %r464, %r463, 25;
	mov.b64 	%rd742, {%r470, %r469};
	xor.b64  	%rd743, %rd741, %rd742;
	xor.b64  	%rd744, %rd725, %rd531;
	xor.b64  	%rd745, %rd725, %rd701;
	and.b64  	%rd746, %rd745, %rd744;
	xor.b64  	%rd747, %rd746, %rd725;
	add.s64 	%rd748, %rd737, %rd747;
	add.s64 	%rd749, %rd748, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r471,%dummy}, %rd738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r472}, %rd738;
	}
	shf.r.wrap.b32 	%r473, %r472, %r471, 14;
	shf.r.wrap.b32 	%r474, %r471, %r472, 14;
	mov.b64 	%rd750, {%r474, %r473};
	shf.r.wrap.b32 	%r475, %r472, %r471, 18;
	shf.r.wrap.b32 	%r476, %r471, %r472, 18;
	mov.b64 	%rd751, {%r476, %r475};
	xor.b64  	%rd752, %rd751, %rd750;
	shf.l.wrap.b32 	%r477, %r471, %r472, 23;
	shf.l.wrap.b32 	%r478, %r472, %r471, 23;
	mov.b64 	%rd753, {%r478, %r477};
	xor.b64  	%rd754, %rd752, %rd753;
	xor.b64  	%rd755, %rd714, %rd690;
	and.b64  	%rd756, %rd738, %rd755;
	xor.b64  	%rd757, %rd756, %rd690;
	add.s64 	%rd758, %rd569, %rd520;
	add.s64 	%rd759, %rd758, %rd39;
	add.s64 	%rd760, %rd759, %rd757;
	add.s64 	%rd761, %rd760, %rd754;
	add.s64 	%rd762, %rd761, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd749;
	}
	shf.r.wrap.b32 	%r481, %r480, %r479, 28;
	shf.r.wrap.b32 	%r482, %r479, %r480, 28;
	mov.b64 	%rd763, {%r482, %r481};
	shf.l.wrap.b32 	%r483, %r479, %r480, 30;
	shf.l.wrap.b32 	%r484, %r480, %r479, 30;
	mov.b64 	%rd764, {%r484, %r483};
	xor.b64  	%rd765, %rd764, %rd763;
	shf.l.wrap.b32 	%r485, %r479, %r480, 25;
	shf.l.wrap.b32 	%r486, %r480, %r479, 25;
	mov.b64 	%rd766, {%r486, %r485};
	xor.b64  	%rd767, %rd765, %rd766;
	xor.b64  	%rd768, %rd749, %rd701;
	xor.b64  	%rd769, %rd749, %rd725;
	and.b64  	%rd770, %rd769, %rd768;
	xor.b64  	%rd771, %rd770, %rd749;
	add.s64 	%rd772, %rd761, %rd771;
	add.s64 	%rd773, %rd772, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r487,%dummy}, %rd762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd762;
	}
	shf.r.wrap.b32 	%r489, %r488, %r487, 14;
	shf.r.wrap.b32 	%r490, %r487, %r488, 14;
	mov.b64 	%rd774, {%r490, %r489};
	shf.r.wrap.b32 	%r491, %r488, %r487, 18;
	shf.r.wrap.b32 	%r492, %r487, %r488, 18;
	mov.b64 	%rd775, {%r492, %r491};
	xor.b64  	%rd776, %rd775, %rd774;
	shf.l.wrap.b32 	%r493, %r487, %r488, 23;
	shf.l.wrap.b32 	%r494, %r488, %r487, 23;
	mov.b64 	%rd777, {%r494, %r493};
	xor.b64  	%rd778, %rd776, %rd777;
	xor.b64  	%rd779, %rd738, %rd714;
	and.b64  	%rd780, %rd762, %rd779;
	xor.b64  	%rd781, %rd780, %rd714;
	add.s64 	%rd782, %rd690, %rd581;
	add.s64 	%rd783, %rd782, %rd40;
	add.s64 	%rd784, %rd783, %rd781;
	add.s64 	%rd785, %rd784, %rd778;
	add.s64 	%rd786, %rd785, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r495,%dummy}, %rd773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd773;
	}
	shf.r.wrap.b32 	%r497, %r496, %r495, 28;
	shf.r.wrap.b32 	%r498, %r495, %r496, 28;
	mov.b64 	%rd787, {%r498, %r497};
	shf.l.wrap.b32 	%r499, %r495, %r496, 30;
	shf.l.wrap.b32 	%r500, %r496, %r495, 30;
	mov.b64 	%rd788, {%r500, %r499};
	xor.b64  	%rd789, %rd788, %rd787;
	shf.l.wrap.b32 	%r501, %r495, %r496, 25;
	shf.l.wrap.b32 	%r502, %r496, %r495, 25;
	mov.b64 	%rd790, {%r502, %r501};
	xor.b64  	%rd791, %rd789, %rd790;
	xor.b64  	%rd792, %rd773, %rd725;
	xor.b64  	%rd793, %rd773, %rd749;
	and.b64  	%rd794, %rd793, %rd792;
	xor.b64  	%rd795, %rd794, %rd773;
	add.s64 	%rd796, %rd785, %rd795;
	add.s64 	%rd797, %rd796, %rd791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd786;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 14;
	shf.r.wrap.b32 	%r506, %r503, %r504, 14;
	mov.b64 	%rd798, {%r506, %r505};
	shf.r.wrap.b32 	%r507, %r504, %r503, 18;
	shf.r.wrap.b32 	%r508, %r503, %r504, 18;
	mov.b64 	%rd799, {%r508, %r507};
	xor.b64  	%rd800, %rd799, %rd798;
	shf.l.wrap.b32 	%r509, %r503, %r504, 23;
	shf.l.wrap.b32 	%r510, %r504, %r503, 23;
	mov.b64 	%rd801, {%r510, %r509};
	xor.b64  	%rd802, %rd800, %rd801;
	xor.b64  	%rd803, %rd762, %rd738;
	and.b64  	%rd804, %rd786, %rd803;
	xor.b64  	%rd805, %rd804, %rd738;
	add.s64 	%rd806, %rd714, %rd593;
	add.s64 	%rd807, %rd806, %rd41;
	add.s64 	%rd808, %rd807, %rd805;
	add.s64 	%rd809, %rd808, %rd802;
	add.s64 	%rd810, %rd809, %rd725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd797;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 28;
	shf.r.wrap.b32 	%r514, %r511, %r512, 28;
	mov.b64 	%rd811, {%r514, %r513};
	shf.l.wrap.b32 	%r515, %r511, %r512, 30;
	shf.l.wrap.b32 	%r516, %r512, %r511, 30;
	mov.b64 	%rd812, {%r516, %r515};
	xor.b64  	%rd813, %rd812, %rd811;
	shf.l.wrap.b32 	%r517, %r511, %r512, 25;
	shf.l.wrap.b32 	%r518, %r512, %r511, 25;
	mov.b64 	%rd814, {%r518, %r517};
	xor.b64  	%rd815, %rd813, %rd814;
	xor.b64  	%rd816, %rd797, %rd749;
	xor.b64  	%rd817, %rd797, %rd773;
	and.b64  	%rd818, %rd817, %rd816;
	xor.b64  	%rd819, %rd818, %rd797;
	add.s64 	%rd820, %rd809, %rd819;
	add.s64 	%rd821, %rd820, %rd815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd810;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 14;
	shf.r.wrap.b32 	%r522, %r519, %r520, 14;
	mov.b64 	%rd822, {%r522, %r521};
	shf.r.wrap.b32 	%r523, %r520, %r519, 18;
	shf.r.wrap.b32 	%r524, %r519, %r520, 18;
	mov.b64 	%rd823, {%r524, %r523};
	xor.b64  	%rd824, %rd823, %rd822;
	shf.l.wrap.b32 	%r525, %r519, %r520, 23;
	shf.l.wrap.b32 	%r526, %r520, %r519, 23;
	mov.b64 	%rd825, {%r526, %r525};
	xor.b64  	%rd826, %rd824, %rd825;
	xor.b64  	%rd827, %rd786, %rd762;
	and.b64  	%rd828, %rd810, %rd827;
	xor.b64  	%rd829, %rd828, %rd762;
	add.s64 	%rd830, %rd738, %rd606;
	add.s64 	%rd831, %rd830, %rd42;
	add.s64 	%rd832, %rd831, %rd829;
	add.s64 	%rd833, %rd832, %rd826;
	add.s64 	%rd834, %rd833, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd821;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 28;
	shf.r.wrap.b32 	%r530, %r527, %r528, 28;
	mov.b64 	%rd835, {%r530, %r529};
	shf.l.wrap.b32 	%r531, %r527, %r528, 30;
	shf.l.wrap.b32 	%r532, %r528, %r527, 30;
	mov.b64 	%rd836, {%r532, %r531};
	xor.b64  	%rd837, %rd836, %rd835;
	shf.l.wrap.b32 	%r533, %r527, %r528, 25;
	shf.l.wrap.b32 	%r534, %r528, %r527, 25;
	mov.b64 	%rd838, {%r534, %r533};
	xor.b64  	%rd839, %rd837, %rd838;
	xor.b64  	%rd840, %rd821, %rd773;
	xor.b64  	%rd841, %rd821, %rd797;
	and.b64  	%rd842, %rd841, %rd840;
	xor.b64  	%rd843, %rd842, %rd821;
	add.s64 	%rd844, %rd833, %rd843;
	add.s64 	%rd845, %rd844, %rd839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r535,%dummy}, %rd834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd834;
	}
	shf.r.wrap.b32 	%r537, %r536, %r535, 14;
	shf.r.wrap.b32 	%r538, %r535, %r536, 14;
	mov.b64 	%rd846, {%r538, %r537};
	shf.r.wrap.b32 	%r539, %r536, %r535, 18;
	shf.r.wrap.b32 	%r540, %r535, %r536, 18;
	mov.b64 	%rd847, {%r540, %r539};
	xor.b64  	%rd848, %rd847, %rd846;
	shf.l.wrap.b32 	%r541, %r535, %r536, 23;
	shf.l.wrap.b32 	%r542, %r536, %r535, 23;
	mov.b64 	%rd849, {%r542, %r541};
	xor.b64  	%rd850, %rd848, %rd849;
	xor.b64  	%rd851, %rd810, %rd786;
	and.b64  	%rd852, %rd834, %rd851;
	xor.b64  	%rd853, %rd852, %rd786;
	add.s64 	%rd854, %rd762, %rd614;
	add.s64 	%rd855, %rd854, %rd43;
	add.s64 	%rd856, %rd855, %rd853;
	add.s64 	%rd857, %rd856, %rd850;
	add.s64 	%rd858, %rd857, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r543,%dummy}, %rd845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd845;
	}
	shf.r.wrap.b32 	%r545, %r544, %r543, 28;
	shf.r.wrap.b32 	%r546, %r543, %r544, 28;
	mov.b64 	%rd859, {%r546, %r545};
	shf.l.wrap.b32 	%r547, %r543, %r544, 30;
	shf.l.wrap.b32 	%r548, %r544, %r543, 30;
	mov.b64 	%rd860, {%r548, %r547};
	xor.b64  	%rd861, %rd860, %rd859;
	shf.l.wrap.b32 	%r549, %r543, %r544, 25;
	shf.l.wrap.b32 	%r550, %r544, %r543, 25;
	mov.b64 	%rd862, {%r550, %r549};
	xor.b64  	%rd863, %rd861, %rd862;
	xor.b64  	%rd864, %rd845, %rd797;
	xor.b64  	%rd865, %rd845, %rd821;
	and.b64  	%rd866, %rd865, %rd864;
	xor.b64  	%rd867, %rd866, %rd845;
	add.s64 	%rd868, %rd857, %rd867;
	add.s64 	%rd869, %rd868, %rd863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd858;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 14;
	shf.r.wrap.b32 	%r554, %r551, %r552, 14;
	mov.b64 	%rd870, {%r554, %r553};
	shf.r.wrap.b32 	%r555, %r552, %r551, 18;
	shf.r.wrap.b32 	%r556, %r551, %r552, 18;
	mov.b64 	%rd871, {%r556, %r555};
	xor.b64  	%rd872, %rd871, %rd870;
	shf.l.wrap.b32 	%r557, %r551, %r552, 23;
	shf.l.wrap.b32 	%r558, %r552, %r551, 23;
	mov.b64 	%rd873, {%r558, %r557};
	xor.b64  	%rd874, %rd872, %rd873;
	xor.b64  	%rd875, %rd834, %rd810;
	and.b64  	%rd876, %rd858, %rd875;
	xor.b64  	%rd877, %rd876, %rd810;
	add.s64 	%rd878, %rd786, %rd622;
	add.s64 	%rd879, %rd878, %rd44;
	add.s64 	%rd880, %rd879, %rd877;
	add.s64 	%rd881, %rd880, %rd874;
	add.s64 	%rd882, %rd881, %rd797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd869;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 28;
	shf.r.wrap.b32 	%r562, %r559, %r560, 28;
	mov.b64 	%rd883, {%r562, %r561};
	shf.l.wrap.b32 	%r563, %r559, %r560, 30;
	shf.l.wrap.b32 	%r564, %r560, %r559, 30;
	mov.b64 	%rd884, {%r564, %r563};
	xor.b64  	%rd885, %rd884, %rd883;
	shf.l.wrap.b32 	%r565, %r559, %r560, 25;
	shf.l.wrap.b32 	%r566, %r560, %r559, 25;
	mov.b64 	%rd886, {%r566, %r565};
	xor.b64  	%rd887, %rd885, %rd886;
	xor.b64  	%rd888, %rd869, %rd821;
	xor.b64  	%rd889, %rd869, %rd845;
	and.b64  	%rd890, %rd889, %rd888;
	xor.b64  	%rd891, %rd890, %rd869;
	add.s64 	%rd892, %rd881, %rd891;
	add.s64 	%rd893, %rd892, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd882;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 14;
	shf.r.wrap.b32 	%r570, %r567, %r568, 14;
	mov.b64 	%rd894, {%r570, %r569};
	shf.r.wrap.b32 	%r571, %r568, %r567, 18;
	shf.r.wrap.b32 	%r572, %r567, %r568, 18;
	mov.b64 	%rd895, {%r572, %r571};
	xor.b64  	%rd896, %rd895, %rd894;
	shf.l.wrap.b32 	%r573, %r567, %r568, 23;
	shf.l.wrap.b32 	%r574, %r568, %r567, 23;
	mov.b64 	%rd897, {%r574, %r573};
	xor.b64  	%rd898, %rd896, %rd897;
	xor.b64  	%rd899, %rd858, %rd834;
	and.b64  	%rd900, %rd882, %rd899;
	xor.b64  	%rd901, %rd900, %rd834;
	add.s64 	%rd902, %rd810, %rd629;
	add.s64 	%rd903, %rd902, %rd45;
	add.s64 	%rd904, %rd903, %rd901;
	add.s64 	%rd905, %rd904, %rd898;
	add.s64 	%rd906, %rd905, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd893;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 28;
	shf.r.wrap.b32 	%r578, %r575, %r576, 28;
	mov.b64 	%rd907, {%r578, %r577};
	shf.l.wrap.b32 	%r579, %r575, %r576, 30;
	shf.l.wrap.b32 	%r580, %r576, %r575, 30;
	mov.b64 	%rd908, {%r580, %r579};
	xor.b64  	%rd909, %rd908, %rd907;
	shf.l.wrap.b32 	%r581, %r575, %r576, 25;
	shf.l.wrap.b32 	%r582, %r576, %r575, 25;
	mov.b64 	%rd910, {%r582, %r581};
	xor.b64  	%rd911, %rd909, %rd910;
	xor.b64  	%rd912, %rd893, %rd845;
	xor.b64  	%rd913, %rd893, %rd869;
	and.b64  	%rd914, %rd913, %rd912;
	xor.b64  	%rd915, %rd914, %rd893;
	add.s64 	%rd916, %rd905, %rd915;
	add.s64 	%rd917, %rd916, %rd911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd906;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 14;
	shf.r.wrap.b32 	%r586, %r583, %r584, 14;
	mov.b64 	%rd918, {%r586, %r585};
	shf.r.wrap.b32 	%r587, %r584, %r583, 18;
	shf.r.wrap.b32 	%r588, %r583, %r584, 18;
	mov.b64 	%rd919, {%r588, %r587};
	xor.b64  	%rd920, %rd919, %rd918;
	shf.l.wrap.b32 	%r589, %r583, %r584, 23;
	shf.l.wrap.b32 	%r590, %r584, %r583, 23;
	mov.b64 	%rd921, {%r590, %r589};
	xor.b64  	%rd922, %rd920, %rd921;
	xor.b64  	%rd923, %rd882, %rd858;
	and.b64  	%rd924, %rd906, %rd923;
	xor.b64  	%rd925, %rd924, %rd858;
	add.s64 	%rd926, %rd834, %rd636;
	add.s64 	%rd927, %rd926, %rd46;
	add.s64 	%rd928, %rd927, %rd925;
	add.s64 	%rd929, %rd928, %rd922;
	add.s64 	%rd930, %rd929, %rd845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r591,%dummy}, %rd917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd917;
	}
	shf.r.wrap.b32 	%r593, %r592, %r591, 28;
	shf.r.wrap.b32 	%r594, %r591, %r592, 28;
	mov.b64 	%rd931, {%r594, %r593};
	shf.l.wrap.b32 	%r595, %r591, %r592, 30;
	shf.l.wrap.b32 	%r596, %r592, %r591, 30;
	mov.b64 	%rd932, {%r596, %r595};
	xor.b64  	%rd933, %rd932, %rd931;
	shf.l.wrap.b32 	%r597, %r591, %r592, 25;
	shf.l.wrap.b32 	%r598, %r592, %r591, 25;
	mov.b64 	%rd934, {%r598, %r597};
	xor.b64  	%rd935, %rd933, %rd934;
	xor.b64  	%rd936, %rd917, %rd869;
	xor.b64  	%rd937, %rd917, %rd893;
	and.b64  	%rd938, %rd937, %rd936;
	xor.b64  	%rd939, %rd938, %rd917;
	add.s64 	%rd940, %rd929, %rd939;
	add.s64 	%rd941, %rd940, %rd935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd930;
	}
	shf.r.wrap.b32 	%r601, %r600, %r599, 14;
	shf.r.wrap.b32 	%r602, %r599, %r600, 14;
	mov.b64 	%rd942, {%r602, %r601};
	shf.r.wrap.b32 	%r603, %r600, %r599, 18;
	shf.r.wrap.b32 	%r604, %r599, %r600, 18;
	mov.b64 	%rd943, {%r604, %r603};
	xor.b64  	%rd944, %rd943, %rd942;
	shf.l.wrap.b32 	%r605, %r599, %r600, 23;
	shf.l.wrap.b32 	%r606, %r600, %r599, 23;
	mov.b64 	%rd945, {%r606, %r605};
	xor.b64  	%rd946, %rd944, %rd945;
	xor.b64  	%rd947, %rd906, %rd882;
	and.b64  	%rd948, %rd930, %rd947;
	xor.b64  	%rd949, %rd948, %rd882;
	add.s64 	%rd950, %rd858, %rd643;
	add.s64 	%rd951, %rd950, %rd47;
	add.s64 	%rd952, %rd951, %rd949;
	add.s64 	%rd953, %rd952, %rd946;
	add.s64 	%rd954, %rd953, %rd869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd941;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 28;
	shf.r.wrap.b32 	%r610, %r607, %r608, 28;
	mov.b64 	%rd955, {%r610, %r609};
	shf.l.wrap.b32 	%r611, %r607, %r608, 30;
	shf.l.wrap.b32 	%r612, %r608, %r607, 30;
	mov.b64 	%rd956, {%r612, %r611};
	xor.b64  	%rd957, %rd956, %rd955;
	shf.l.wrap.b32 	%r613, %r607, %r608, 25;
	shf.l.wrap.b32 	%r614, %r608, %r607, 25;
	mov.b64 	%rd958, {%r614, %r613};
	xor.b64  	%rd959, %rd957, %rd958;
	xor.b64  	%rd960, %rd941, %rd893;
	xor.b64  	%rd961, %rd941, %rd917;
	and.b64  	%rd962, %rd961, %rd960;
	xor.b64  	%rd963, %rd962, %rd941;
	add.s64 	%rd964, %rd953, %rd963;
	add.s64 	%rd965, %rd964, %rd959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd954;
	}
	shf.r.wrap.b32 	%r617, %r616, %r615, 14;
	shf.r.wrap.b32 	%r618, %r615, %r616, 14;
	mov.b64 	%rd966, {%r618, %r617};
	shf.r.wrap.b32 	%r619, %r616, %r615, 18;
	shf.r.wrap.b32 	%r620, %r615, %r616, 18;
	mov.b64 	%rd967, {%r620, %r619};
	xor.b64  	%rd968, %rd967, %rd966;
	shf.l.wrap.b32 	%r621, %r615, %r616, 23;
	shf.l.wrap.b32 	%r622, %r616, %r615, 23;
	mov.b64 	%rd969, {%r622, %r621};
	xor.b64  	%rd970, %rd968, %rd969;
	xor.b64  	%rd971, %rd930, %rd906;
	and.b64  	%rd972, %rd954, %rd971;
	xor.b64  	%rd973, %rd972, %rd906;
	add.s64 	%rd974, %rd882, %rd650;
	add.s64 	%rd975, %rd974, %rd48;
	add.s64 	%rd976, %rd975, %rd973;
	add.s64 	%rd977, %rd976, %rd970;
	add.s64 	%rd978, %rd977, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd965;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 28;
	shf.r.wrap.b32 	%r626, %r623, %r624, 28;
	mov.b64 	%rd979, {%r626, %r625};
	shf.l.wrap.b32 	%r627, %r623, %r624, 30;
	shf.l.wrap.b32 	%r628, %r624, %r623, 30;
	mov.b64 	%rd980, {%r628, %r627};
	xor.b64  	%rd981, %rd980, %rd979;
	shf.l.wrap.b32 	%r629, %r623, %r624, 25;
	shf.l.wrap.b32 	%r630, %r624, %r623, 25;
	mov.b64 	%rd982, {%r630, %r629};
	xor.b64  	%rd983, %rd981, %rd982;
	xor.b64  	%rd984, %rd965, %rd917;
	xor.b64  	%rd985, %rd965, %rd941;
	and.b64  	%rd986, %rd985, %rd984;
	xor.b64  	%rd987, %rd986, %rd965;
	add.s64 	%rd988, %rd977, %rd987;
	add.s64 	%rd989, %rd988, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd978;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 14;
	shf.r.wrap.b32 	%r634, %r631, %r632, 14;
	mov.b64 	%rd990, {%r634, %r633};
	shf.r.wrap.b32 	%r635, %r632, %r631, 18;
	shf.r.wrap.b32 	%r636, %r631, %r632, 18;
	mov.b64 	%rd991, {%r636, %r635};
	xor.b64  	%rd992, %rd991, %rd990;
	shf.l.wrap.b32 	%r637, %r631, %r632, 23;
	shf.l.wrap.b32 	%r638, %r632, %r631, 23;
	mov.b64 	%rd993, {%r638, %r637};
	xor.b64  	%rd994, %rd992, %rd993;
	xor.b64  	%rd995, %rd954, %rd930;
	and.b64  	%rd996, %rd978, %rd995;
	xor.b64  	%rd997, %rd996, %rd930;
	add.s64 	%rd998, %rd906, %rd657;
	add.s64 	%rd999, %rd998, %rd49;
	add.s64 	%rd1000, %rd999, %rd997;
	add.s64 	%rd1001, %rd1000, %rd994;
	add.s64 	%rd1002, %rd1001, %rd917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd989;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 28;
	shf.r.wrap.b32 	%r642, %r639, %r640, 28;
	mov.b64 	%rd1003, {%r642, %r641};
	shf.l.wrap.b32 	%r643, %r639, %r640, 30;
	shf.l.wrap.b32 	%r644, %r640, %r639, 30;
	mov.b64 	%rd1004, {%r644, %r643};
	xor.b64  	%rd1005, %rd1004, %rd1003;
	shf.l.wrap.b32 	%r645, %r639, %r640, 25;
	shf.l.wrap.b32 	%r646, %r640, %r639, 25;
	mov.b64 	%rd1006, {%r646, %r645};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	xor.b64  	%rd1008, %rd989, %rd941;
	xor.b64  	%rd1009, %rd989, %rd965;
	and.b64  	%rd1010, %rd1009, %rd1008;
	xor.b64  	%rd1011, %rd1010, %rd989;
	add.s64 	%rd1012, %rd1001, %rd1011;
	add.s64 	%rd1013, %rd1012, %rd1007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd1002;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 14;
	shf.r.wrap.b32 	%r650, %r647, %r648, 14;
	mov.b64 	%rd1014, {%r650, %r649};
	shf.r.wrap.b32 	%r651, %r648, %r647, 18;
	shf.r.wrap.b32 	%r652, %r647, %r648, 18;
	mov.b64 	%rd1015, {%r652, %r651};
	xor.b64  	%rd1016, %rd1015, %rd1014;
	shf.l.wrap.b32 	%r653, %r647, %r648, 23;
	shf.l.wrap.b32 	%r654, %r648, %r647, 23;
	mov.b64 	%rd1017, {%r654, %r653};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	xor.b64  	%rd1019, %rd978, %rd954;
	and.b64  	%rd1020, %rd1002, %rd1019;
	xor.b64  	%rd1021, %rd1020, %rd954;
	add.s64 	%rd1022, %rd930, %rd664;
	add.s64 	%rd1023, %rd1022, %rd50;
	add.s64 	%rd1024, %rd1023, %rd1021;
	add.s64 	%rd1025, %rd1024, %rd1018;
	add.s64 	%rd1026, %rd1025, %rd941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r655,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd1013;
	}
	shf.r.wrap.b32 	%r657, %r656, %r655, 28;
	shf.r.wrap.b32 	%r658, %r655, %r656, 28;
	mov.b64 	%rd1027, {%r658, %r657};
	shf.l.wrap.b32 	%r659, %r655, %r656, 30;
	shf.l.wrap.b32 	%r660, %r656, %r655, 30;
	mov.b64 	%rd1028, {%r660, %r659};
	xor.b64  	%rd1029, %rd1028, %rd1027;
	shf.l.wrap.b32 	%r661, %r655, %r656, 25;
	shf.l.wrap.b32 	%r662, %r656, %r655, 25;
	mov.b64 	%rd1030, {%r662, %r661};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	xor.b64  	%rd1032, %rd1013, %rd965;
	xor.b64  	%rd1033, %rd1013, %rd989;
	and.b64  	%rd1034, %rd1033, %rd1032;
	xor.b64  	%rd1035, %rd1034, %rd1013;
	add.s64 	%rd1036, %rd1025, %rd1035;
	add.s64 	%rd1037, %rd1036, %rd1031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r663,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd1026;
	}
	shf.r.wrap.b32 	%r665, %r664, %r663, 14;
	shf.r.wrap.b32 	%r666, %r663, %r664, 14;
	mov.b64 	%rd1038, {%r666, %r665};
	shf.r.wrap.b32 	%r667, %r664, %r663, 18;
	shf.r.wrap.b32 	%r668, %r663, %r664, 18;
	mov.b64 	%rd1039, {%r668, %r667};
	xor.b64  	%rd1040, %rd1039, %rd1038;
	shf.l.wrap.b32 	%r669, %r663, %r664, 23;
	shf.l.wrap.b32 	%r670, %r664, %r663, 23;
	mov.b64 	%rd1041, {%r670, %r669};
	xor.b64  	%rd1042, %rd1040, %rd1041;
	xor.b64  	%rd1043, %rd1002, %rd978;
	and.b64  	%rd1044, %rd1026, %rd1043;
	xor.b64  	%rd1045, %rd1044, %rd978;
	add.s64 	%rd1046, %rd954, %rd677;
	add.s64 	%rd1047, %rd1046, %rd51;
	add.s64 	%rd1048, %rd1047, %rd1045;
	add.s64 	%rd1049, %rd1048, %rd1042;
	add.s64 	%rd1050, %rd1049, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r671,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd1037;
	}
	shf.r.wrap.b32 	%r673, %r672, %r671, 28;
	shf.r.wrap.b32 	%r674, %r671, %r672, 28;
	mov.b64 	%rd1051, {%r674, %r673};
	shf.l.wrap.b32 	%r675, %r671, %r672, 30;
	shf.l.wrap.b32 	%r676, %r672, %r671, 30;
	mov.b64 	%rd1052, {%r676, %r675};
	xor.b64  	%rd1053, %rd1052, %rd1051;
	shf.l.wrap.b32 	%r677, %r671, %r672, 25;
	shf.l.wrap.b32 	%r678, %r672, %r671, 25;
	mov.b64 	%rd1054, {%r678, %r677};
	xor.b64  	%rd1055, %rd1053, %rd1054;
	xor.b64  	%rd1056, %rd1037, %rd989;
	xor.b64  	%rd1057, %rd1037, %rd1013;
	and.b64  	%rd1058, %rd1057, %rd1056;
	xor.b64  	%rd1059, %rd1058, %rd1037;
	add.s64 	%rd1060, %rd1049, %rd1059;
	add.s64 	%rd1061, %rd1060, %rd1055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r679,%dummy}, %rd664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r680}, %rd664;
	}
	shf.r.wrap.b32 	%r681, %r680, %r679, 19;
	shf.r.wrap.b32 	%r682, %r679, %r680, 19;
	mov.b64 	%rd1062, {%r682, %r681};
	shf.l.wrap.b32 	%r683, %r679, %r680, 3;
	shf.l.wrap.b32 	%r684, %r680, %r679, 3;
	mov.b64 	%rd1063, {%r684, %r683};
	shr.u64 	%rd1064, %rd664, 6;
	xor.b64  	%rd1065, %rd1062, %rd1064;
	xor.b64  	%rd1066, %rd1065, %rd1063;
	shf.r.wrap.b32 	%r685, %r318, %r317, 1;
	shf.r.wrap.b32 	%r686, %r317, %r318, 1;
	mov.b64 	%rd1067, {%r686, %r685};
	shf.r.wrap.b32 	%r687, %r318, %r317, 8;
	shf.r.wrap.b32 	%r688, %r317, %r318, 8;
	mov.b64 	%rd1068, {%r688, %r687};
	shr.u64 	%rd1069, %rd545, 7;
	xor.b64  	%rd1070, %rd1067, %rd1069;
	xor.b64  	%rd1071, %rd1070, %rd1068;
	add.s64 	%rd1072, %rd629, %rd538;
	add.s64 	%rd1073, %rd1072, %rd1066;
	add.s64 	%rd1074, %rd1073, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd677;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 19;
	shf.r.wrap.b32 	%r692, %r689, %r690, 19;
	mov.b64 	%rd1075, {%r692, %r691};
	shf.l.wrap.b32 	%r693, %r689, %r690, 3;
	shf.l.wrap.b32 	%r694, %r690, %r689, 3;
	mov.b64 	%rd1076, {%r694, %r693};
	shr.u64 	%rd1077, %rd677, 6;
	xor.b64  	%rd1078, %rd1075, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd1076;
	shf.r.wrap.b32 	%r695, %r330, %r329, 1;
	shf.r.wrap.b32 	%r696, %r329, %r330, 1;
	mov.b64 	%rd1080, {%r696, %r695};
	shf.r.wrap.b32 	%r697, %r330, %r329, 8;
	shf.r.wrap.b32 	%r698, %r329, %r330, 8;
	mov.b64 	%rd1081, {%r698, %r697};
	shr.u64 	%rd1082, %rd557, 7;
	xor.b64  	%rd1083, %rd1080, %rd1082;
	xor.b64  	%rd1084, %rd1083, %rd1081;
	add.s64 	%rd1085, %rd636, %rd545;
	add.s64 	%rd1086, %rd1085, %rd1079;
	add.s64 	%rd1087, %rd1086, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r699,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd1074;
	}
	shf.r.wrap.b32 	%r701, %r700, %r699, 19;
	shf.r.wrap.b32 	%r702, %r699, %r700, 19;
	mov.b64 	%rd1088, {%r702, %r701};
	shf.l.wrap.b32 	%r703, %r699, %r700, 3;
	shf.l.wrap.b32 	%r704, %r700, %r699, 3;
	mov.b64 	%rd1089, {%r704, %r703};
	shr.u64 	%rd1090, %rd1074, 6;
	xor.b64  	%rd1091, %rd1088, %rd1090;
	xor.b64  	%rd1092, %rd1091, %rd1089;
	shf.r.wrap.b32 	%r705, %r342, %r341, 1;
	shf.r.wrap.b32 	%r706, %r341, %r342, 1;
	mov.b64 	%rd1093, {%r706, %r705};
	shf.r.wrap.b32 	%r707, %r342, %r341, 8;
	shf.r.wrap.b32 	%r708, %r341, %r342, 8;
	mov.b64 	%rd1094, {%r708, %r707};
	shr.u64 	%rd1095, %rd569, 7;
	xor.b64  	%rd1096, %rd1093, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1094;
	add.s64 	%rd1098, %rd643, %rd557;
	add.s64 	%rd1099, %rd1098, %rd1092;
	add.s64 	%rd1100, %rd1099, %rd1097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd1087;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 19;
	shf.r.wrap.b32 	%r712, %r709, %r710, 19;
	mov.b64 	%rd1101, {%r712, %r711};
	shf.l.wrap.b32 	%r713, %r709, %r710, 3;
	shf.l.wrap.b32 	%r714, %r710, %r709, 3;
	mov.b64 	%rd1102, {%r714, %r713};
	shr.u64 	%rd1103, %rd1087, 6;
	xor.b64  	%rd1104, %rd1101, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1102;
	shf.r.wrap.b32 	%r715, %r354, %r353, 1;
	shf.r.wrap.b32 	%r716, %r353, %r354, 1;
	mov.b64 	%rd1106, {%r716, %r715};
	shf.r.wrap.b32 	%r717, %r354, %r353, 8;
	shf.r.wrap.b32 	%r718, %r353, %r354, 8;
	mov.b64 	%rd1107, {%r718, %r717};
	shr.u64 	%rd1108, %rd581, 7;
	xor.b64  	%rd1109, %rd1106, %rd1108;
	xor.b64  	%rd1110, %rd1109, %rd1107;
	add.s64 	%rd1111, %rd650, %rd569;
	add.s64 	%rd1112, %rd1111, %rd1105;
	add.s64 	%rd1113, %rd1112, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r719,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r720}, %rd1100;
	}
	shf.r.wrap.b32 	%r721, %r720, %r719, 19;
	shf.r.wrap.b32 	%r722, %r719, %r720, 19;
	mov.b64 	%rd1114, {%r722, %r721};
	shf.l.wrap.b32 	%r723, %r719, %r720, 3;
	shf.l.wrap.b32 	%r724, %r720, %r719, 3;
	mov.b64 	%rd1115, {%r724, %r723};
	shr.u64 	%rd1116, %rd1100, 6;
	xor.b64  	%rd1117, %rd1114, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1115;
	shf.r.wrap.b32 	%r725, %r366, %r365, 1;
	shf.r.wrap.b32 	%r726, %r365, %r366, 1;
	mov.b64 	%rd1119, {%r726, %r725};
	shf.r.wrap.b32 	%r727, %r366, %r365, 8;
	shf.r.wrap.b32 	%r728, %r365, %r366, 8;
	mov.b64 	%rd1120, {%r728, %r727};
	shr.u64 	%rd1121, %rd593, 7;
	xor.b64  	%rd1122, %rd1119, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1120;
	add.s64 	%rd1124, %rd657, %rd581;
	add.s64 	%rd1125, %rd1124, %rd1118;
	add.s64 	%rd1126, %rd1125, %rd1123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1113;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 19;
	shf.r.wrap.b32 	%r732, %r729, %r730, 19;
	mov.b64 	%rd1127, {%r732, %r731};
	shf.l.wrap.b32 	%r733, %r729, %r730, 3;
	shf.l.wrap.b32 	%r734, %r730, %r729, 3;
	mov.b64 	%rd1128, {%r734, %r733};
	shr.u64 	%rd1129, %rd1113, 6;
	xor.b64  	%rd1130, %rd1127, %rd1129;
	xor.b64  	%rd1131, %rd1130, %rd1128;
	shf.r.wrap.b32 	%r735, %r372, %r371, 1;
	shf.r.wrap.b32 	%r736, %r371, %r372, 1;
	mov.b64 	%rd1132, {%r736, %r735};
	shf.r.wrap.b32 	%r737, %r372, %r371, 8;
	shf.r.wrap.b32 	%r738, %r371, %r372, 8;
	mov.b64 	%rd1133, {%r738, %r737};
	shr.u64 	%rd1134, %rd606, 7;
	xor.b64  	%rd1135, %rd1132, %rd1134;
	xor.b64  	%rd1136, %rd1135, %rd1133;
	add.s64 	%rd1137, %rd664, %rd593;
	add.s64 	%rd1138, %rd1137, %rd1131;
	add.s64 	%rd1139, %rd1138, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd1126;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 19;
	shf.r.wrap.b32 	%r742, %r739, %r740, 19;
	mov.b64 	%rd1140, {%r742, %r741};
	shf.l.wrap.b32 	%r743, %r739, %r740, 3;
	shf.l.wrap.b32 	%r744, %r740, %r739, 3;
	mov.b64 	%rd1141, {%r744, %r743};
	shr.u64 	%rd1142, %rd1126, 6;
	xor.b64  	%rd1143, %rd1140, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1141;
	shf.r.wrap.b32 	%r745, %r378, %r377, 1;
	shf.r.wrap.b32 	%r746, %r377, %r378, 1;
	mov.b64 	%rd1145, {%r746, %r745};
	shf.r.wrap.b32 	%r747, %r378, %r377, 8;
	shf.r.wrap.b32 	%r748, %r377, %r378, 8;
	mov.b64 	%rd1146, {%r748, %r747};
	shr.u64 	%rd1147, %rd614, 7;
	xor.b64  	%rd1148, %rd1145, %rd1147;
	xor.b64  	%rd1149, %rd1148, %rd1146;
	add.s64 	%rd1150, %rd677, %rd606;
	add.s64 	%rd1151, %rd1150, %rd1144;
	add.s64 	%rd1152, %rd1151, %rd1149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd1139;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 19;
	shf.r.wrap.b32 	%r752, %r749, %r750, 19;
	mov.b64 	%rd1153, {%r752, %r751};
	shf.l.wrap.b32 	%r753, %r749, %r750, 3;
	shf.l.wrap.b32 	%r754, %r750, %r749, 3;
	mov.b64 	%rd1154, {%r754, %r753};
	shr.u64 	%rd1155, %rd1139, 6;
	xor.b64  	%rd1156, %rd1153, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd1154;
	shf.r.wrap.b32 	%r755, %r384, %r383, 1;
	shf.r.wrap.b32 	%r756, %r383, %r384, 1;
	mov.b64 	%rd1158, {%r756, %r755};
	shf.r.wrap.b32 	%r757, %r384, %r383, 8;
	shf.r.wrap.b32 	%r758, %r383, %r384, 8;
	mov.b64 	%rd1159, {%r758, %r757};
	shr.u64 	%rd1160, %rd622, 7;
	xor.b64  	%rd1161, %rd1158, %rd1160;
	xor.b64  	%rd1162, %rd1161, %rd1159;
	add.s64 	%rd1163, %rd1074, %rd614;
	add.s64 	%rd1164, %rd1163, %rd1157;
	add.s64 	%rd1165, %rd1164, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r759,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r760}, %rd1152;
	}
	shf.r.wrap.b32 	%r761, %r760, %r759, 19;
	shf.r.wrap.b32 	%r762, %r759, %r760, 19;
	mov.b64 	%rd1166, {%r762, %r761};
	shf.l.wrap.b32 	%r763, %r759, %r760, 3;
	shf.l.wrap.b32 	%r764, %r760, %r759, 3;
	mov.b64 	%rd1167, {%r764, %r763};
	shr.u64 	%rd1168, %rd1152, 6;
	xor.b64  	%rd1169, %rd1166, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1167;
	shf.r.wrap.b32 	%r765, %r390, %r389, 1;
	shf.r.wrap.b32 	%r766, %r389, %r390, 1;
	mov.b64 	%rd1171, {%r766, %r765};
	shf.r.wrap.b32 	%r767, %r390, %r389, 8;
	shf.r.wrap.b32 	%r768, %r389, %r390, 8;
	mov.b64 	%rd1172, {%r768, %r767};
	shr.u64 	%rd1173, %rd629, 7;
	xor.b64  	%rd1174, %rd1171, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1172;
	add.s64 	%rd1176, %rd1087, %rd622;
	add.s64 	%rd1177, %rd1176, %rd1170;
	add.s64 	%rd1178, %rd1177, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r769,%dummy}, %rd1165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r770}, %rd1165;
	}
	shf.r.wrap.b32 	%r771, %r770, %r769, 19;
	shf.r.wrap.b32 	%r772, %r769, %r770, 19;
	mov.b64 	%rd1179, {%r772, %r771};
	shf.l.wrap.b32 	%r773, %r769, %r770, 3;
	shf.l.wrap.b32 	%r774, %r770, %r769, 3;
	mov.b64 	%rd1180, {%r774, %r773};
	shr.u64 	%rd1181, %rd1165, 6;
	xor.b64  	%rd1182, %rd1179, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1180;
	shf.r.wrap.b32 	%r775, %r396, %r395, 1;
	shf.r.wrap.b32 	%r776, %r395, %r396, 1;
	mov.b64 	%rd1184, {%r776, %r775};
	shf.r.wrap.b32 	%r777, %r396, %r395, 8;
	shf.r.wrap.b32 	%r778, %r395, %r396, 8;
	mov.b64 	%rd1185, {%r778, %r777};
	shr.u64 	%rd1186, %rd636, 7;
	xor.b64  	%rd1187, %rd1184, %rd1186;
	xor.b64  	%rd1188, %rd1187, %rd1185;
	add.s64 	%rd1189, %rd1100, %rd629;
	add.s64 	%rd1190, %rd1189, %rd1183;
	add.s64 	%rd1191, %rd1190, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd1178;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 19;
	shf.r.wrap.b32 	%r782, %r779, %r780, 19;
	mov.b64 	%rd1192, {%r782, %r781};
	shf.l.wrap.b32 	%r783, %r779, %r780, 3;
	shf.l.wrap.b32 	%r784, %r780, %r779, 3;
	mov.b64 	%rd1193, {%r784, %r783};
	shr.u64 	%rd1194, %rd1178, 6;
	xor.b64  	%rd1195, %rd1192, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1193;
	shf.r.wrap.b32 	%r785, %r402, %r401, 1;
	shf.r.wrap.b32 	%r786, %r401, %r402, 1;
	mov.b64 	%rd1197, {%r786, %r785};
	shf.r.wrap.b32 	%r787, %r402, %r401, 8;
	shf.r.wrap.b32 	%r788, %r401, %r402, 8;
	mov.b64 	%rd1198, {%r788, %r787};
	shr.u64 	%rd1199, %rd643, 7;
	xor.b64  	%rd1200, %rd1197, %rd1199;
	xor.b64  	%rd1201, %rd1200, %rd1198;
	add.s64 	%rd1202, %rd1113, %rd636;
	add.s64 	%rd1203, %rd1202, %rd1196;
	add.s64 	%rd1204, %rd1203, %rd1201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r789,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r790}, %rd1191;
	}
	shf.r.wrap.b32 	%r791, %r790, %r789, 19;
	shf.r.wrap.b32 	%r792, %r789, %r790, 19;
	mov.b64 	%rd1205, {%r792, %r791};
	shf.l.wrap.b32 	%r793, %r789, %r790, 3;
	shf.l.wrap.b32 	%r794, %r790, %r789, 3;
	mov.b64 	%rd1206, {%r794, %r793};
	shr.u64 	%rd1207, %rd1191, 6;
	xor.b64  	%rd1208, %rd1205, %rd1207;
	xor.b64  	%rd1209, %rd1208, %rd1206;
	shf.r.wrap.b32 	%r795, %r408, %r407, 1;
	shf.r.wrap.b32 	%r796, %r407, %r408, 1;
	mov.b64 	%rd1210, {%r796, %r795};
	shf.r.wrap.b32 	%r797, %r408, %r407, 8;
	shf.r.wrap.b32 	%r798, %r407, %r408, 8;
	mov.b64 	%rd1211, {%r798, %r797};
	shr.u64 	%rd1212, %rd650, 7;
	xor.b64  	%rd1213, %rd1210, %rd1212;
	xor.b64  	%rd1214, %rd1213, %rd1211;
	add.s64 	%rd1215, %rd1126, %rd643;
	add.s64 	%rd1216, %rd1215, %rd1209;
	add.s64 	%rd1217, %rd1216, %rd1214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r799,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r800}, %rd1204;
	}
	shf.r.wrap.b32 	%r801, %r800, %r799, 19;
	shf.r.wrap.b32 	%r802, %r799, %r800, 19;
	mov.b64 	%rd1218, {%r802, %r801};
	shf.l.wrap.b32 	%r803, %r799, %r800, 3;
	shf.l.wrap.b32 	%r804, %r800, %r799, 3;
	mov.b64 	%rd1219, {%r804, %r803};
	shr.u64 	%rd1220, %rd1204, 6;
	xor.b64  	%rd1221, %rd1218, %rd1220;
	xor.b64  	%rd1222, %rd1221, %rd1219;
	shf.r.wrap.b32 	%r805, %r414, %r413, 1;
	shf.r.wrap.b32 	%r806, %r413, %r414, 1;
	mov.b64 	%rd1223, {%r806, %r805};
	shf.r.wrap.b32 	%r807, %r414, %r413, 8;
	shf.r.wrap.b32 	%r808, %r413, %r414, 8;
	mov.b64 	%rd1224, {%r808, %r807};
	shr.u64 	%rd1225, %rd657, 7;
	xor.b64  	%rd1226, %rd1223, %rd1225;
	xor.b64  	%rd1227, %rd1226, %rd1224;
	add.s64 	%rd1228, %rd1139, %rd650;
	add.s64 	%rd1229, %rd1228, %rd1222;
	add.s64 	%rd1230, %rd1229, %rd1227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r809,%dummy}, %rd1217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r810}, %rd1217;
	}
	shf.r.wrap.b32 	%r811, %r810, %r809, 19;
	shf.r.wrap.b32 	%r812, %r809, %r810, 19;
	mov.b64 	%rd1231, {%r812, %r811};
	shf.l.wrap.b32 	%r813, %r809, %r810, 3;
	shf.l.wrap.b32 	%r814, %r810, %r809, 3;
	mov.b64 	%rd1232, {%r814, %r813};
	shr.u64 	%rd1233, %rd1217, 6;
	xor.b64  	%rd1234, %rd1231, %rd1233;
	xor.b64  	%rd1235, %rd1234, %rd1232;
	shf.r.wrap.b32 	%r815, %r680, %r679, 1;
	shf.r.wrap.b32 	%r816, %r679, %r680, 1;
	mov.b64 	%rd1236, {%r816, %r815};
	shf.r.wrap.b32 	%r817, %r680, %r679, 8;
	shf.r.wrap.b32 	%r818, %r679, %r680, 8;
	mov.b64 	%rd1237, {%r818, %r817};
	shr.u64 	%rd1238, %rd664, 7;
	xor.b64  	%rd1239, %rd1236, %rd1238;
	xor.b64  	%rd1240, %rd1239, %rd1237;
	add.s64 	%rd1241, %rd1152, %rd657;
	add.s64 	%rd1242, %rd1241, %rd1235;
	add.s64 	%rd1243, %rd1242, %rd1240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r819,%dummy}, %rd1230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r820}, %rd1230;
	}
	shf.r.wrap.b32 	%r821, %r820, %r819, 19;
	shf.r.wrap.b32 	%r822, %r819, %r820, 19;
	mov.b64 	%rd1244, {%r822, %r821};
	shf.l.wrap.b32 	%r823, %r819, %r820, 3;
	shf.l.wrap.b32 	%r824, %r820, %r819, 3;
	mov.b64 	%rd1245, {%r824, %r823};
	shr.u64 	%rd1246, %rd1230, 6;
	xor.b64  	%rd1247, %rd1244, %rd1246;
	xor.b64  	%rd1248, %rd1247, %rd1245;
	shf.r.wrap.b32 	%r825, %r690, %r689, 1;
	shf.r.wrap.b32 	%r826, %r689, %r690, 1;
	mov.b64 	%rd1249, {%r826, %r825};
	shf.r.wrap.b32 	%r827, %r690, %r689, 8;
	shf.r.wrap.b32 	%r828, %r689, %r690, 8;
	mov.b64 	%rd1250, {%r828, %r827};
	shr.u64 	%rd1251, %rd677, 7;
	xor.b64  	%rd1252, %rd1249, %rd1251;
	xor.b64  	%rd1253, %rd1252, %rd1250;
	add.s64 	%rd1254, %rd1165, %rd664;
	add.s64 	%rd1255, %rd1254, %rd1248;
	add.s64 	%rd1256, %rd1255, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd1243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd1243;
	}
	shf.r.wrap.b32 	%r831, %r830, %r829, 19;
	shf.r.wrap.b32 	%r832, %r829, %r830, 19;
	mov.b64 	%rd1257, {%r832, %r831};
	shf.l.wrap.b32 	%r833, %r829, %r830, 3;
	shf.l.wrap.b32 	%r834, %r830, %r829, 3;
	mov.b64 	%rd1258, {%r834, %r833};
	shr.u64 	%rd1259, %rd1243, 6;
	xor.b64  	%rd1260, %rd1257, %rd1259;
	xor.b64  	%rd1261, %rd1260, %rd1258;
	shf.r.wrap.b32 	%r835, %r700, %r699, 1;
	shf.r.wrap.b32 	%r836, %r699, %r700, 1;
	mov.b64 	%rd1262, {%r836, %r835};
	shf.r.wrap.b32 	%r837, %r700, %r699, 8;
	shf.r.wrap.b32 	%r838, %r699, %r700, 8;
	mov.b64 	%rd1263, {%r838, %r837};
	shr.u64 	%rd1264, %rd1074, 7;
	xor.b64  	%rd1265, %rd1262, %rd1264;
	xor.b64  	%rd1266, %rd1265, %rd1263;
	add.s64 	%rd1267, %rd1178, %rd677;
	add.s64 	%rd1268, %rd1267, %rd1261;
	add.s64 	%rd1269, %rd1268, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r839,%dummy}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r840}, %rd1050;
	}
	shf.r.wrap.b32 	%r841, %r840, %r839, 14;
	shf.r.wrap.b32 	%r842, %r839, %r840, 14;
	mov.b64 	%rd1270, {%r842, %r841};
	shf.r.wrap.b32 	%r843, %r840, %r839, 18;
	shf.r.wrap.b32 	%r844, %r839, %r840, 18;
	mov.b64 	%rd1271, {%r844, %r843};
	xor.b64  	%rd1272, %rd1271, %rd1270;
	shf.l.wrap.b32 	%r845, %r839, %r840, 23;
	shf.l.wrap.b32 	%r846, %r840, %r839, 23;
	mov.b64 	%rd1273, {%r846, %r845};
	xor.b64  	%rd1274, %rd1272, %rd1273;
	xor.b64  	%rd1275, %rd1026, %rd1002;
	and.b64  	%rd1276, %rd1275, %rd1050;
	xor.b64  	%rd1277, %rd1276, %rd1002;
	add.s64 	%rd1278, %rd1277, %rd978;
	add.s64 	%rd1279, %rd1278, %rd1074;
	add.s64 	%rd1280, %rd1279, %rd52;
	add.s64 	%rd1281, %rd1280, %rd1274;
	add.s64 	%rd1282, %rd1281, %rd989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r847,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r848}, %rd1061;
	}
	shf.r.wrap.b32 	%r849, %r848, %r847, 28;
	shf.r.wrap.b32 	%r850, %r847, %r848, 28;
	mov.b64 	%rd1283, {%r850, %r849};
	shf.l.wrap.b32 	%r851, %r847, %r848, 30;
	shf.l.wrap.b32 	%r852, %r848, %r847, 30;
	mov.b64 	%rd1284, {%r852, %r851};
	xor.b64  	%rd1285, %rd1284, %rd1283;
	shf.l.wrap.b32 	%r853, %r847, %r848, 25;
	shf.l.wrap.b32 	%r854, %r848, %r847, 25;
	mov.b64 	%rd1286, {%r854, %r853};
	xor.b64  	%rd1287, %rd1285, %rd1286;
	xor.b64  	%rd1288, %rd1061, %rd1013;
	xor.b64  	%rd1289, %rd1061, %rd1037;
	and.b64  	%rd1290, %rd1289, %rd1288;
	xor.b64  	%rd1291, %rd1290, %rd1061;
	add.s64 	%rd1292, %rd1281, %rd1291;
	add.s64 	%rd1293, %rd1292, %rd1287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r855,%dummy}, %rd1282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r856}, %rd1282;
	}
	shf.r.wrap.b32 	%r857, %r856, %r855, 14;
	shf.r.wrap.b32 	%r858, %r855, %r856, 14;
	mov.b64 	%rd1294, {%r858, %r857};
	shf.r.wrap.b32 	%r859, %r856, %r855, 18;
	shf.r.wrap.b32 	%r860, %r855, %r856, 18;
	mov.b64 	%rd1295, {%r860, %r859};
	xor.b64  	%rd1296, %rd1295, %rd1294;
	shf.l.wrap.b32 	%r861, %r855, %r856, 23;
	shf.l.wrap.b32 	%r862, %r856, %r855, 23;
	mov.b64 	%rd1297, {%r862, %r861};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	xor.b64  	%rd1299, %rd1050, %rd1026;
	and.b64  	%rd1300, %rd1282, %rd1299;
	xor.b64  	%rd1301, %rd1300, %rd1026;
	add.s64 	%rd1302, %rd1087, %rd1002;
	add.s64 	%rd1303, %rd1302, %rd53;
	add.s64 	%rd1304, %rd1303, %rd1301;
	add.s64 	%rd1305, %rd1304, %rd1298;
	add.s64 	%rd1306, %rd1305, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r863,%dummy}, %rd1293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r864}, %rd1293;
	}
	shf.r.wrap.b32 	%r865, %r864, %r863, 28;
	shf.r.wrap.b32 	%r866, %r863, %r864, 28;
	mov.b64 	%rd1307, {%r866, %r865};
	shf.l.wrap.b32 	%r867, %r863, %r864, 30;
	shf.l.wrap.b32 	%r868, %r864, %r863, 30;
	mov.b64 	%rd1308, {%r868, %r867};
	xor.b64  	%rd1309, %rd1308, %rd1307;
	shf.l.wrap.b32 	%r869, %r863, %r864, 25;
	shf.l.wrap.b32 	%r870, %r864, %r863, 25;
	mov.b64 	%rd1310, {%r870, %r869};
	xor.b64  	%rd1311, %rd1309, %rd1310;
	xor.b64  	%rd1312, %rd1293, %rd1037;
	xor.b64  	%rd1313, %rd1293, %rd1061;
	and.b64  	%rd1314, %rd1313, %rd1312;
	xor.b64  	%rd1315, %rd1314, %rd1293;
	add.s64 	%rd1316, %rd1305, %rd1315;
	add.s64 	%rd1317, %rd1316, %rd1311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r871,%dummy}, %rd1306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r872}, %rd1306;
	}
	shf.r.wrap.b32 	%r873, %r872, %r871, 14;
	shf.r.wrap.b32 	%r874, %r871, %r872, 14;
	mov.b64 	%rd1318, {%r874, %r873};
	shf.r.wrap.b32 	%r875, %r872, %r871, 18;
	shf.r.wrap.b32 	%r876, %r871, %r872, 18;
	mov.b64 	%rd1319, {%r876, %r875};
	xor.b64  	%rd1320, %rd1319, %rd1318;
	shf.l.wrap.b32 	%r877, %r871, %r872, 23;
	shf.l.wrap.b32 	%r878, %r872, %r871, 23;
	mov.b64 	%rd1321, {%r878, %r877};
	xor.b64  	%rd1322, %rd1320, %rd1321;
	xor.b64  	%rd1323, %rd1282, %rd1050;
	and.b64  	%rd1324, %rd1306, %rd1323;
	xor.b64  	%rd1325, %rd1324, %rd1050;
	add.s64 	%rd1326, %rd1100, %rd1026;
	add.s64 	%rd1327, %rd1326, %rd54;
	add.s64 	%rd1328, %rd1327, %rd1325;
	add.s64 	%rd1329, %rd1328, %rd1322;
	add.s64 	%rd1330, %rd1329, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd1317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd1317;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 28;
	shf.r.wrap.b32 	%r882, %r879, %r880, 28;
	mov.b64 	%rd1331, {%r882, %r881};
	shf.l.wrap.b32 	%r883, %r879, %r880, 30;
	shf.l.wrap.b32 	%r884, %r880, %r879, 30;
	mov.b64 	%rd1332, {%r884, %r883};
	xor.b64  	%rd1333, %rd1332, %rd1331;
	shf.l.wrap.b32 	%r885, %r879, %r880, 25;
	shf.l.wrap.b32 	%r886, %r880, %r879, 25;
	mov.b64 	%rd1334, {%r886, %r885};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	xor.b64  	%rd1336, %rd1317, %rd1061;
	xor.b64  	%rd1337, %rd1317, %rd1293;
	and.b64  	%rd1338, %rd1337, %rd1336;
	xor.b64  	%rd1339, %rd1338, %rd1317;
	add.s64 	%rd1340, %rd1329, %rd1339;
	add.s64 	%rd1341, %rd1340, %rd1335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd1330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd1330;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 14;
	shf.r.wrap.b32 	%r890, %r887, %r888, 14;
	mov.b64 	%rd1342, {%r890, %r889};
	shf.r.wrap.b32 	%r891, %r888, %r887, 18;
	shf.r.wrap.b32 	%r892, %r887, %r888, 18;
	mov.b64 	%rd1343, {%r892, %r891};
	xor.b64  	%rd1344, %rd1343, %rd1342;
	shf.l.wrap.b32 	%r893, %r887, %r888, 23;
	shf.l.wrap.b32 	%r894, %r888, %r887, 23;
	mov.b64 	%rd1345, {%r894, %r893};
	xor.b64  	%rd1346, %rd1344, %rd1345;
	xor.b64  	%rd1347, %rd1306, %rd1282;
	and.b64  	%rd1348, %rd1330, %rd1347;
	xor.b64  	%rd1349, %rd1348, %rd1282;
	add.s64 	%rd1350, %rd1113, %rd1050;
	add.s64 	%rd1351, %rd1350, %rd55;
	add.s64 	%rd1352, %rd1351, %rd1349;
	add.s64 	%rd1353, %rd1352, %rd1346;
	add.s64 	%rd1354, %rd1353, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd1341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd1341;
	}
	shf.r.wrap.b32 	%r897, %r896, %r895, 28;
	shf.r.wrap.b32 	%r898, %r895, %r896, 28;
	mov.b64 	%rd1355, {%r898, %r897};
	shf.l.wrap.b32 	%r899, %r895, %r896, 30;
	shf.l.wrap.b32 	%r900, %r896, %r895, 30;
	mov.b64 	%rd1356, {%r900, %r899};
	xor.b64  	%rd1357, %rd1356, %rd1355;
	shf.l.wrap.b32 	%r901, %r895, %r896, 25;
	shf.l.wrap.b32 	%r902, %r896, %r895, 25;
	mov.b64 	%rd1358, {%r902, %r901};
	xor.b64  	%rd1359, %rd1357, %rd1358;
	xor.b64  	%rd1360, %rd1341, %rd1293;
	xor.b64  	%rd1361, %rd1341, %rd1317;
	and.b64  	%rd1362, %rd1361, %rd1360;
	xor.b64  	%rd1363, %rd1362, %rd1341;
	add.s64 	%rd1364, %rd1353, %rd1363;
	add.s64 	%rd1365, %rd1364, %rd1359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r903,%dummy}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r904}, %rd1354;
	}
	shf.r.wrap.b32 	%r905, %r904, %r903, 14;
	shf.r.wrap.b32 	%r906, %r903, %r904, 14;
	mov.b64 	%rd1366, {%r906, %r905};
	shf.r.wrap.b32 	%r907, %r904, %r903, 18;
	shf.r.wrap.b32 	%r908, %r903, %r904, 18;
	mov.b64 	%rd1367, {%r908, %r907};
	xor.b64  	%rd1368, %rd1367, %rd1366;
	shf.l.wrap.b32 	%r909, %r903, %r904, 23;
	shf.l.wrap.b32 	%r910, %r904, %r903, 23;
	mov.b64 	%rd1369, {%r910, %r909};
	xor.b64  	%rd1370, %rd1368, %rd1369;
	xor.b64  	%rd1371, %rd1330, %rd1306;
	and.b64  	%rd1372, %rd1354, %rd1371;
	xor.b64  	%rd1373, %rd1372, %rd1306;
	add.s64 	%rd1374, %rd1282, %rd1126;
	add.s64 	%rd1375, %rd1374, %rd56;
	add.s64 	%rd1376, %rd1375, %rd1373;
	add.s64 	%rd1377, %rd1376, %rd1370;
	add.s64 	%rd1378, %rd1377, %rd1293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r911,%dummy}, %rd1365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r912}, %rd1365;
	}
	shf.r.wrap.b32 	%r913, %r912, %r911, 28;
	shf.r.wrap.b32 	%r914, %r911, %r912, 28;
	mov.b64 	%rd1379, {%r914, %r913};
	shf.l.wrap.b32 	%r915, %r911, %r912, 30;
	shf.l.wrap.b32 	%r916, %r912, %r911, 30;
	mov.b64 	%rd1380, {%r916, %r915};
	xor.b64  	%rd1381, %rd1380, %rd1379;
	shf.l.wrap.b32 	%r917, %r911, %r912, 25;
	shf.l.wrap.b32 	%r918, %r912, %r911, 25;
	mov.b64 	%rd1382, {%r918, %r917};
	xor.b64  	%rd1383, %rd1381, %rd1382;
	xor.b64  	%rd1384, %rd1365, %rd1317;
	xor.b64  	%rd1385, %rd1365, %rd1341;
	and.b64  	%rd1386, %rd1385, %rd1384;
	xor.b64  	%rd1387, %rd1386, %rd1365;
	add.s64 	%rd1388, %rd1377, %rd1387;
	add.s64 	%rd1389, %rd1388, %rd1383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd1378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd1378;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 14;
	shf.r.wrap.b32 	%r922, %r919, %r920, 14;
	mov.b64 	%rd1390, {%r922, %r921};
	shf.r.wrap.b32 	%r923, %r920, %r919, 18;
	shf.r.wrap.b32 	%r924, %r919, %r920, 18;
	mov.b64 	%rd1391, {%r924, %r923};
	xor.b64  	%rd1392, %rd1391, %rd1390;
	shf.l.wrap.b32 	%r925, %r919, %r920, 23;
	shf.l.wrap.b32 	%r926, %r920, %r919, 23;
	mov.b64 	%rd1393, {%r926, %r925};
	xor.b64  	%rd1394, %rd1392, %rd1393;
	xor.b64  	%rd1395, %rd1354, %rd1330;
	and.b64  	%rd1396, %rd1378, %rd1395;
	xor.b64  	%rd1397, %rd1396, %rd1330;
	add.s64 	%rd1398, %rd1306, %rd1139;
	add.s64 	%rd1399, %rd1398, %rd57;
	add.s64 	%rd1400, %rd1399, %rd1397;
	add.s64 	%rd1401, %rd1400, %rd1394;
	add.s64 	%rd1402, %rd1401, %rd1317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r927,%dummy}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r928}, %rd1389;
	}
	shf.r.wrap.b32 	%r929, %r928, %r927, 28;
	shf.r.wrap.b32 	%r930, %r927, %r928, 28;
	mov.b64 	%rd1403, {%r930, %r929};
	shf.l.wrap.b32 	%r931, %r927, %r928, 30;
	shf.l.wrap.b32 	%r932, %r928, %r927, 30;
	mov.b64 	%rd1404, {%r932, %r931};
	xor.b64  	%rd1405, %rd1404, %rd1403;
	shf.l.wrap.b32 	%r933, %r927, %r928, 25;
	shf.l.wrap.b32 	%r934, %r928, %r927, 25;
	mov.b64 	%rd1406, {%r934, %r933};
	xor.b64  	%rd1407, %rd1405, %rd1406;
	xor.b64  	%rd1408, %rd1389, %rd1341;
	xor.b64  	%rd1409, %rd1389, %rd1365;
	and.b64  	%rd1410, %rd1409, %rd1408;
	xor.b64  	%rd1411, %rd1410, %rd1389;
	add.s64 	%rd1412, %rd1401, %rd1411;
	add.s64 	%rd1413, %rd1412, %rd1407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r935,%dummy}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r936}, %rd1402;
	}
	shf.r.wrap.b32 	%r937, %r936, %r935, 14;
	shf.r.wrap.b32 	%r938, %r935, %r936, 14;
	mov.b64 	%rd1414, {%r938, %r937};
	shf.r.wrap.b32 	%r939, %r936, %r935, 18;
	shf.r.wrap.b32 	%r940, %r935, %r936, 18;
	mov.b64 	%rd1415, {%r940, %r939};
	xor.b64  	%rd1416, %rd1415, %rd1414;
	shf.l.wrap.b32 	%r941, %r935, %r936, 23;
	shf.l.wrap.b32 	%r942, %r936, %r935, 23;
	mov.b64 	%rd1417, {%r942, %r941};
	xor.b64  	%rd1418, %rd1416, %rd1417;
	xor.b64  	%rd1419, %rd1378, %rd1354;
	and.b64  	%rd1420, %rd1402, %rd1419;
	xor.b64  	%rd1421, %rd1420, %rd1354;
	add.s64 	%rd1422, %rd1330, %rd1152;
	add.s64 	%rd1423, %rd1422, %rd58;
	add.s64 	%rd1424, %rd1423, %rd1421;
	add.s64 	%rd1425, %rd1424, %rd1418;
	add.s64 	%rd1426, %rd1425, %rd1341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r943,%dummy}, %rd1413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r944}, %rd1413;
	}
	shf.r.wrap.b32 	%r945, %r944, %r943, 28;
	shf.r.wrap.b32 	%r946, %r943, %r944, 28;
	mov.b64 	%rd1427, {%r946, %r945};
	shf.l.wrap.b32 	%r947, %r943, %r944, 30;
	shf.l.wrap.b32 	%r948, %r944, %r943, 30;
	mov.b64 	%rd1428, {%r948, %r947};
	xor.b64  	%rd1429, %rd1428, %rd1427;
	shf.l.wrap.b32 	%r949, %r943, %r944, 25;
	shf.l.wrap.b32 	%r950, %r944, %r943, 25;
	mov.b64 	%rd1430, {%r950, %r949};
	xor.b64  	%rd1431, %rd1429, %rd1430;
	xor.b64  	%rd1432, %rd1413, %rd1365;
	xor.b64  	%rd1433, %rd1413, %rd1389;
	and.b64  	%rd1434, %rd1433, %rd1432;
	xor.b64  	%rd1435, %rd1434, %rd1413;
	add.s64 	%rd1436, %rd1425, %rd1435;
	add.s64 	%rd1437, %rd1436, %rd1431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r951,%dummy}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r952}, %rd1426;
	}
	shf.r.wrap.b32 	%r953, %r952, %r951, 14;
	shf.r.wrap.b32 	%r954, %r951, %r952, 14;
	mov.b64 	%rd1438, {%r954, %r953};
	shf.r.wrap.b32 	%r955, %r952, %r951, 18;
	shf.r.wrap.b32 	%r956, %r951, %r952, 18;
	mov.b64 	%rd1439, {%r956, %r955};
	xor.b64  	%rd1440, %rd1439, %rd1438;
	shf.l.wrap.b32 	%r957, %r951, %r952, 23;
	shf.l.wrap.b32 	%r958, %r952, %r951, 23;
	mov.b64 	%rd1441, {%r958, %r957};
	xor.b64  	%rd1442, %rd1440, %rd1441;
	xor.b64  	%rd1443, %rd1402, %rd1378;
	and.b64  	%rd1444, %rd1426, %rd1443;
	xor.b64  	%rd1445, %rd1444, %rd1378;
	add.s64 	%rd1446, %rd1354, %rd1165;
	add.s64 	%rd1447, %rd1446, %rd59;
	add.s64 	%rd1448, %rd1447, %rd1445;
	add.s64 	%rd1449, %rd1448, %rd1442;
	add.s64 	%rd1450, %rd1449, %rd1365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r959,%dummy}, %rd1437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r960}, %rd1437;
	}
	shf.r.wrap.b32 	%r961, %r960, %r959, 28;
	shf.r.wrap.b32 	%r962, %r959, %r960, 28;
	mov.b64 	%rd1451, {%r962, %r961};
	shf.l.wrap.b32 	%r963, %r959, %r960, 30;
	shf.l.wrap.b32 	%r964, %r960, %r959, 30;
	mov.b64 	%rd1452, {%r964, %r963};
	xor.b64  	%rd1453, %rd1452, %rd1451;
	shf.l.wrap.b32 	%r965, %r959, %r960, 25;
	shf.l.wrap.b32 	%r966, %r960, %r959, 25;
	mov.b64 	%rd1454, {%r966, %r965};
	xor.b64  	%rd1455, %rd1453, %rd1454;
	xor.b64  	%rd1456, %rd1437, %rd1389;
	xor.b64  	%rd1457, %rd1437, %rd1413;
	and.b64  	%rd1458, %rd1457, %rd1456;
	xor.b64  	%rd1459, %rd1458, %rd1437;
	add.s64 	%rd1460, %rd1449, %rd1459;
	add.s64 	%rd1461, %rd1460, %rd1455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd1450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd1450;
	}
	shf.r.wrap.b32 	%r969, %r968, %r967, 14;
	shf.r.wrap.b32 	%r970, %r967, %r968, 14;
	mov.b64 	%rd1462, {%r970, %r969};
	shf.r.wrap.b32 	%r971, %r968, %r967, 18;
	shf.r.wrap.b32 	%r972, %r967, %r968, 18;
	mov.b64 	%rd1463, {%r972, %r971};
	xor.b64  	%rd1464, %rd1463, %rd1462;
	shf.l.wrap.b32 	%r973, %r967, %r968, 23;
	shf.l.wrap.b32 	%r974, %r968, %r967, 23;
	mov.b64 	%rd1465, {%r974, %r973};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	xor.b64  	%rd1467, %rd1426, %rd1402;
	and.b64  	%rd1468, %rd1450, %rd1467;
	xor.b64  	%rd1469, %rd1468, %rd1402;
	add.s64 	%rd1470, %rd1378, %rd1178;
	add.s64 	%rd1471, %rd1470, %rd60;
	add.s64 	%rd1472, %rd1471, %rd1469;
	add.s64 	%rd1473, %rd1472, %rd1466;
	add.s64 	%rd1474, %rd1473, %rd1389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd1461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd1461;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 28;
	shf.r.wrap.b32 	%r978, %r975, %r976, 28;
	mov.b64 	%rd1475, {%r978, %r977};
	shf.l.wrap.b32 	%r979, %r975, %r976, 30;
	shf.l.wrap.b32 	%r980, %r976, %r975, 30;
	mov.b64 	%rd1476, {%r980, %r979};
	xor.b64  	%rd1477, %rd1476, %rd1475;
	shf.l.wrap.b32 	%r981, %r975, %r976, 25;
	shf.l.wrap.b32 	%r982, %r976, %r975, 25;
	mov.b64 	%rd1478, {%r982, %r981};
	xor.b64  	%rd1479, %rd1477, %rd1478;
	xor.b64  	%rd1480, %rd1461, %rd1413;
	xor.b64  	%rd1481, %rd1461, %rd1437;
	and.b64  	%rd1482, %rd1481, %rd1480;
	xor.b64  	%rd1483, %rd1482, %rd1461;
	add.s64 	%rd1484, %rd1473, %rd1483;
	add.s64 	%rd1485, %rd1484, %rd1479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd1474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd1474;
	}
	shf.r.wrap.b32 	%r985, %r984, %r983, 14;
	shf.r.wrap.b32 	%r986, %r983, %r984, 14;
	mov.b64 	%rd1486, {%r986, %r985};
	shf.r.wrap.b32 	%r987, %r984, %r983, 18;
	shf.r.wrap.b32 	%r988, %r983, %r984, 18;
	mov.b64 	%rd1487, {%r988, %r987};
	xor.b64  	%rd1488, %rd1487, %rd1486;
	shf.l.wrap.b32 	%r989, %r983, %r984, 23;
	shf.l.wrap.b32 	%r990, %r984, %r983, 23;
	mov.b64 	%rd1489, {%r990, %r989};
	xor.b64  	%rd1490, %rd1488, %rd1489;
	xor.b64  	%rd1491, %rd1450, %rd1426;
	and.b64  	%rd1492, %rd1474, %rd1491;
	xor.b64  	%rd1493, %rd1492, %rd1426;
	add.s64 	%rd1494, %rd1402, %rd1191;
	add.s64 	%rd1495, %rd1494, %rd61;
	add.s64 	%rd1496, %rd1495, %rd1493;
	add.s64 	%rd1497, %rd1496, %rd1490;
	add.s64 	%rd1498, %rd1497, %rd1413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd1485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd1485;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 28;
	shf.r.wrap.b32 	%r994, %r991, %r992, 28;
	mov.b64 	%rd1499, {%r994, %r993};
	shf.l.wrap.b32 	%r995, %r991, %r992, 30;
	shf.l.wrap.b32 	%r996, %r992, %r991, 30;
	mov.b64 	%rd1500, {%r996, %r995};
	xor.b64  	%rd1501, %rd1500, %rd1499;
	shf.l.wrap.b32 	%r997, %r991, %r992, 25;
	shf.l.wrap.b32 	%r998, %r992, %r991, 25;
	mov.b64 	%rd1502, {%r998, %r997};
	xor.b64  	%rd1503, %rd1501, %rd1502;
	xor.b64  	%rd1504, %rd1485, %rd1437;
	xor.b64  	%rd1505, %rd1485, %rd1461;
	and.b64  	%rd1506, %rd1505, %rd1504;
	xor.b64  	%rd1507, %rd1506, %rd1485;
	add.s64 	%rd1508, %rd1497, %rd1507;
	add.s64 	%rd1509, %rd1508, %rd1503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd1498;
	}
	shf.r.wrap.b32 	%r1001, %r1000, %r999, 14;
	shf.r.wrap.b32 	%r1002, %r999, %r1000, 14;
	mov.b64 	%rd1510, {%r1002, %r1001};
	shf.r.wrap.b32 	%r1003, %r1000, %r999, 18;
	shf.r.wrap.b32 	%r1004, %r999, %r1000, 18;
	mov.b64 	%rd1511, {%r1004, %r1003};
	xor.b64  	%rd1512, %rd1511, %rd1510;
	shf.l.wrap.b32 	%r1005, %r999, %r1000, 23;
	shf.l.wrap.b32 	%r1006, %r1000, %r999, 23;
	mov.b64 	%rd1513, {%r1006, %r1005};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	xor.b64  	%rd1515, %rd1474, %rd1450;
	and.b64  	%rd1516, %rd1498, %rd1515;
	xor.b64  	%rd1517, %rd1516, %rd1450;
	add.s64 	%rd1518, %rd1426, %rd1204;
	add.s64 	%rd1519, %rd1518, %rd62;
	add.s64 	%rd1520, %rd1519, %rd1517;
	add.s64 	%rd1521, %rd1520, %rd1514;
	add.s64 	%rd1522, %rd1521, %rd1437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd1509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd1509;
	}
	shf.r.wrap.b32 	%r1009, %r1008, %r1007, 28;
	shf.r.wrap.b32 	%r1010, %r1007, %r1008, 28;
	mov.b64 	%rd1523, {%r1010, %r1009};
	shf.l.wrap.b32 	%r1011, %r1007, %r1008, 30;
	shf.l.wrap.b32 	%r1012, %r1008, %r1007, 30;
	mov.b64 	%rd1524, {%r1012, %r1011};
	xor.b64  	%rd1525, %rd1524, %rd1523;
	shf.l.wrap.b32 	%r1013, %r1007, %r1008, 25;
	shf.l.wrap.b32 	%r1014, %r1008, %r1007, 25;
	mov.b64 	%rd1526, {%r1014, %r1013};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	xor.b64  	%rd1528, %rd1509, %rd1461;
	xor.b64  	%rd1529, %rd1509, %rd1485;
	and.b64  	%rd1530, %rd1529, %rd1528;
	xor.b64  	%rd1531, %rd1530, %rd1509;
	add.s64 	%rd1532, %rd1521, %rd1531;
	add.s64 	%rd1533, %rd1532, %rd1527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1015,%dummy}, %rd1522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd1522;
	}
	shf.r.wrap.b32 	%r1017, %r1016, %r1015, 14;
	shf.r.wrap.b32 	%r1018, %r1015, %r1016, 14;
	mov.b64 	%rd1534, {%r1018, %r1017};
	shf.r.wrap.b32 	%r1019, %r1016, %r1015, 18;
	shf.r.wrap.b32 	%r1020, %r1015, %r1016, 18;
	mov.b64 	%rd1535, {%r1020, %r1019};
	xor.b64  	%rd1536, %rd1535, %rd1534;
	shf.l.wrap.b32 	%r1021, %r1015, %r1016, 23;
	shf.l.wrap.b32 	%r1022, %r1016, %r1015, 23;
	mov.b64 	%rd1537, {%r1022, %r1021};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	xor.b64  	%rd1539, %rd1498, %rd1474;
	and.b64  	%rd1540, %rd1522, %rd1539;
	xor.b64  	%rd1541, %rd1540, %rd1474;
	add.s64 	%rd1542, %rd1450, %rd1217;
	add.s64 	%rd1543, %rd1542, %rd63;
	add.s64 	%rd1544, %rd1543, %rd1541;
	add.s64 	%rd1545, %rd1544, %rd1538;
	add.s64 	%rd1546, %rd1545, %rd1461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1023,%dummy}, %rd1533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd1533;
	}
	shf.r.wrap.b32 	%r1025, %r1024, %r1023, 28;
	shf.r.wrap.b32 	%r1026, %r1023, %r1024, 28;
	mov.b64 	%rd1547, {%r1026, %r1025};
	shf.l.wrap.b32 	%r1027, %r1023, %r1024, 30;
	shf.l.wrap.b32 	%r1028, %r1024, %r1023, 30;
	mov.b64 	%rd1548, {%r1028, %r1027};
	xor.b64  	%rd1549, %rd1548, %rd1547;
	shf.l.wrap.b32 	%r1029, %r1023, %r1024, 25;
	shf.l.wrap.b32 	%r1030, %r1024, %r1023, 25;
	mov.b64 	%rd1550, {%r1030, %r1029};
	xor.b64  	%rd1551, %rd1549, %rd1550;
	xor.b64  	%rd1552, %rd1533, %rd1485;
	xor.b64  	%rd1553, %rd1533, %rd1509;
	and.b64  	%rd1554, %rd1553, %rd1552;
	xor.b64  	%rd1555, %rd1554, %rd1533;
	add.s64 	%rd1556, %rd1545, %rd1555;
	add.s64 	%rd1557, %rd1556, %rd1551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1031,%dummy}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd1546;
	}
	shf.r.wrap.b32 	%r1033, %r1032, %r1031, 14;
	shf.r.wrap.b32 	%r1034, %r1031, %r1032, 14;
	mov.b64 	%rd1558, {%r1034, %r1033};
	shf.r.wrap.b32 	%r1035, %r1032, %r1031, 18;
	shf.r.wrap.b32 	%r1036, %r1031, %r1032, 18;
	mov.b64 	%rd1559, {%r1036, %r1035};
	xor.b64  	%rd1560, %rd1559, %rd1558;
	shf.l.wrap.b32 	%r1037, %r1031, %r1032, 23;
	shf.l.wrap.b32 	%r1038, %r1032, %r1031, 23;
	mov.b64 	%rd1561, {%r1038, %r1037};
	xor.b64  	%rd1562, %rd1560, %rd1561;
	xor.b64  	%rd1563, %rd1522, %rd1498;
	and.b64  	%rd1564, %rd1546, %rd1563;
	xor.b64  	%rd1565, %rd1564, %rd1498;
	add.s64 	%rd1566, %rd1474, %rd1230;
	add.s64 	%rd1567, %rd1566, %rd64;
	add.s64 	%rd1568, %rd1567, %rd1565;
	add.s64 	%rd1569, %rd1568, %rd1562;
	add.s64 	%rd1570, %rd1569, %rd1485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1039,%dummy}, %rd1557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1040}, %rd1557;
	}
	shf.r.wrap.b32 	%r1041, %r1040, %r1039, 28;
	shf.r.wrap.b32 	%r1042, %r1039, %r1040, 28;
	mov.b64 	%rd1571, {%r1042, %r1041};
	shf.l.wrap.b32 	%r1043, %r1039, %r1040, 30;
	shf.l.wrap.b32 	%r1044, %r1040, %r1039, 30;
	mov.b64 	%rd1572, {%r1044, %r1043};
	xor.b64  	%rd1573, %rd1572, %rd1571;
	shf.l.wrap.b32 	%r1045, %r1039, %r1040, 25;
	shf.l.wrap.b32 	%r1046, %r1040, %r1039, 25;
	mov.b64 	%rd1574, {%r1046, %r1045};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	xor.b64  	%rd1576, %rd1557, %rd1509;
	xor.b64  	%rd1577, %rd1557, %rd1533;
	and.b64  	%rd1578, %rd1577, %rd1576;
	xor.b64  	%rd1579, %rd1578, %rd1557;
	add.s64 	%rd1580, %rd1569, %rd1579;
	add.s64 	%rd1581, %rd1580, %rd1575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1047,%dummy}, %rd1570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1048}, %rd1570;
	}
	shf.r.wrap.b32 	%r1049, %r1048, %r1047, 14;
	shf.r.wrap.b32 	%r1050, %r1047, %r1048, 14;
	mov.b64 	%rd1582, {%r1050, %r1049};
	shf.r.wrap.b32 	%r1051, %r1048, %r1047, 18;
	shf.r.wrap.b32 	%r1052, %r1047, %r1048, 18;
	mov.b64 	%rd1583, {%r1052, %r1051};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	shf.l.wrap.b32 	%r1053, %r1047, %r1048, 23;
	shf.l.wrap.b32 	%r1054, %r1048, %r1047, 23;
	mov.b64 	%rd1585, {%r1054, %r1053};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	xor.b64  	%rd1587, %rd1546, %rd1522;
	and.b64  	%rd1588, %rd1570, %rd1587;
	xor.b64  	%rd1589, %rd1588, %rd1522;
	add.s64 	%rd1590, %rd1498, %rd1243;
	add.s64 	%rd1591, %rd1590, %rd65;
	add.s64 	%rd1592, %rd1591, %rd1589;
	add.s64 	%rd1593, %rd1592, %rd1586;
	add.s64 	%rd1594, %rd1593, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1055,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd1581;
	}
	shf.r.wrap.b32 	%r1057, %r1056, %r1055, 28;
	shf.r.wrap.b32 	%r1058, %r1055, %r1056, 28;
	mov.b64 	%rd1595, {%r1058, %r1057};
	shf.l.wrap.b32 	%r1059, %r1055, %r1056, 30;
	shf.l.wrap.b32 	%r1060, %r1056, %r1055, 30;
	mov.b64 	%rd1596, {%r1060, %r1059};
	xor.b64  	%rd1597, %rd1596, %rd1595;
	shf.l.wrap.b32 	%r1061, %r1055, %r1056, 25;
	shf.l.wrap.b32 	%r1062, %r1056, %r1055, 25;
	mov.b64 	%rd1598, {%r1062, %r1061};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	xor.b64  	%rd1600, %rd1581, %rd1533;
	xor.b64  	%rd1601, %rd1581, %rd1557;
	and.b64  	%rd1602, %rd1601, %rd1600;
	xor.b64  	%rd1603, %rd1602, %rd1581;
	add.s64 	%rd1604, %rd1593, %rd1603;
	add.s64 	%rd1605, %rd1604, %rd1599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd1594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd1594;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 14;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 14;
	mov.b64 	%rd1606, {%r1066, %r1065};
	shf.r.wrap.b32 	%r1067, %r1064, %r1063, 18;
	shf.r.wrap.b32 	%r1068, %r1063, %r1064, 18;
	mov.b64 	%rd1607, {%r1068, %r1067};
	xor.b64  	%rd1608, %rd1607, %rd1606;
	shf.l.wrap.b32 	%r1069, %r1063, %r1064, 23;
	shf.l.wrap.b32 	%r1070, %r1064, %r1063, 23;
	mov.b64 	%rd1609, {%r1070, %r1069};
	xor.b64  	%rd1610, %rd1608, %rd1609;
	xor.b64  	%rd1611, %rd1570, %rd1546;
	and.b64  	%rd1612, %rd1594, %rd1611;
	xor.b64  	%rd1613, %rd1612, %rd1546;
	add.s64 	%rd1614, %rd1522, %rd1256;
	add.s64 	%rd1615, %rd1614, %rd66;
	add.s64 	%rd1616, %rd1615, %rd1613;
	add.s64 	%rd1617, %rd1616, %rd1610;
	add.s64 	%rd1618, %rd1617, %rd1533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1071,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1072}, %rd1605;
	}
	shf.r.wrap.b32 	%r1073, %r1072, %r1071, 28;
	shf.r.wrap.b32 	%r1074, %r1071, %r1072, 28;
	mov.b64 	%rd1619, {%r1074, %r1073};
	shf.l.wrap.b32 	%r1075, %r1071, %r1072, 30;
	shf.l.wrap.b32 	%r1076, %r1072, %r1071, 30;
	mov.b64 	%rd1620, {%r1076, %r1075};
	xor.b64  	%rd1621, %rd1620, %rd1619;
	shf.l.wrap.b32 	%r1077, %r1071, %r1072, 25;
	shf.l.wrap.b32 	%r1078, %r1072, %r1071, 25;
	mov.b64 	%rd1622, {%r1078, %r1077};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	xor.b64  	%rd1624, %rd1605, %rd1557;
	xor.b64  	%rd1625, %rd1605, %rd1581;
	and.b64  	%rd1626, %rd1625, %rd1624;
	xor.b64  	%rd1627, %rd1626, %rd1605;
	add.s64 	%rd1628, %rd1617, %rd1627;
	add.s64 	%rd1629, %rd1628, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1079,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd1618;
	}
	shf.r.wrap.b32 	%r1081, %r1080, %r1079, 14;
	shf.r.wrap.b32 	%r1082, %r1079, %r1080, 14;
	mov.b64 	%rd1630, {%r1082, %r1081};
	shf.r.wrap.b32 	%r1083, %r1080, %r1079, 18;
	shf.r.wrap.b32 	%r1084, %r1079, %r1080, 18;
	mov.b64 	%rd1631, {%r1084, %r1083};
	xor.b64  	%rd1632, %rd1631, %rd1630;
	shf.l.wrap.b32 	%r1085, %r1079, %r1080, 23;
	shf.l.wrap.b32 	%r1086, %r1080, %r1079, 23;
	mov.b64 	%rd1633, {%r1086, %r1085};
	xor.b64  	%rd1634, %rd1632, %rd1633;
	xor.b64  	%rd1635, %rd1594, %rd1570;
	and.b64  	%rd1636, %rd1618, %rd1635;
	xor.b64  	%rd1637, %rd1636, %rd1570;
	add.s64 	%rd1638, %rd1546, %rd1269;
	add.s64 	%rd1639, %rd1638, %rd67;
	add.s64 	%rd1640, %rd1639, %rd1637;
	add.s64 	%rd1641, %rd1640, %rd1634;
	add.s64 	%rd1642, %rd1641, %rd1557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd1629;
	}
	shf.r.wrap.b32 	%r1089, %r1088, %r1087, 28;
	shf.r.wrap.b32 	%r1090, %r1087, %r1088, 28;
	mov.b64 	%rd1643, {%r1090, %r1089};
	shf.l.wrap.b32 	%r1091, %r1087, %r1088, 30;
	shf.l.wrap.b32 	%r1092, %r1088, %r1087, 30;
	mov.b64 	%rd1644, {%r1092, %r1091};
	xor.b64  	%rd1645, %rd1644, %rd1643;
	shf.l.wrap.b32 	%r1093, %r1087, %r1088, 25;
	shf.l.wrap.b32 	%r1094, %r1088, %r1087, 25;
	mov.b64 	%rd1646, {%r1094, %r1093};
	xor.b64  	%rd1647, %rd1645, %rd1646;
	xor.b64  	%rd1648, %rd1629, %rd1581;
	xor.b64  	%rd1649, %rd1629, %rd1605;
	and.b64  	%rd1650, %rd1649, %rd1648;
	xor.b64  	%rd1651, %rd1650, %rd1629;
	add.s64 	%rd1652, %rd1641, %rd1651;
	add.s64 	%rd1653, %rd1652, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd1256;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 19;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 19;
	mov.b64 	%rd1654, {%r1098, %r1097};
	shf.l.wrap.b32 	%r1099, %r1095, %r1096, 3;
	shf.l.wrap.b32 	%r1100, %r1096, %r1095, 3;
	mov.b64 	%rd1655, {%r1100, %r1099};
	shr.u64 	%rd1656, %rd1256, 6;
	xor.b64  	%rd1657, %rd1654, %rd1656;
	xor.b64  	%rd1658, %rd1657, %rd1655;
	shf.r.wrap.b32 	%r1101, %r710, %r709, 1;
	shf.r.wrap.b32 	%r1102, %r709, %r710, 1;
	mov.b64 	%rd1659, {%r1102, %r1101};
	shf.r.wrap.b32 	%r1103, %r710, %r709, 8;
	shf.r.wrap.b32 	%r1104, %r709, %r710, 8;
	mov.b64 	%rd1660, {%r1104, %r1103};
	shr.u64 	%rd1661, %rd1087, 7;
	xor.b64  	%rd1662, %rd1659, %rd1661;
	xor.b64  	%rd1663, %rd1662, %rd1660;
	add.s64 	%rd1664, %rd1191, %rd1074;
	add.s64 	%rd1665, %rd1664, %rd1658;
	add.s64 	%rd1666, %rd1665, %rd1663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd1269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd1269;
	}
	shf.r.wrap.b32 	%r1107, %r1106, %r1105, 19;
	shf.r.wrap.b32 	%r1108, %r1105, %r1106, 19;
	mov.b64 	%rd1667, {%r1108, %r1107};
	shf.l.wrap.b32 	%r1109, %r1105, %r1106, 3;
	shf.l.wrap.b32 	%r1110, %r1106, %r1105, 3;
	mov.b64 	%rd1668, {%r1110, %r1109};
	shr.u64 	%rd1669, %rd1269, 6;
	xor.b64  	%rd1670, %rd1667, %rd1669;
	xor.b64  	%rd1671, %rd1670, %rd1668;
	shf.r.wrap.b32 	%r1111, %r720, %r719, 1;
	shf.r.wrap.b32 	%r1112, %r719, %r720, 1;
	mov.b64 	%rd1672, {%r1112, %r1111};
	shf.r.wrap.b32 	%r1113, %r720, %r719, 8;
	shf.r.wrap.b32 	%r1114, %r719, %r720, 8;
	mov.b64 	%rd1673, {%r1114, %r1113};
	shr.u64 	%rd1674, %rd1100, 7;
	xor.b64  	%rd1675, %rd1672, %rd1674;
	xor.b64  	%rd1676, %rd1675, %rd1673;
	add.s64 	%rd1677, %rd1204, %rd1087;
	add.s64 	%rd1678, %rd1677, %rd1671;
	add.s64 	%rd1679, %rd1678, %rd1676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1115,%dummy}, %rd1666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1116}, %rd1666;
	}
	shf.r.wrap.b32 	%r1117, %r1116, %r1115, 19;
	shf.r.wrap.b32 	%r1118, %r1115, %r1116, 19;
	mov.b64 	%rd1680, {%r1118, %r1117};
	shf.l.wrap.b32 	%r1119, %r1115, %r1116, 3;
	shf.l.wrap.b32 	%r1120, %r1116, %r1115, 3;
	mov.b64 	%rd1681, {%r1120, %r1119};
	shr.u64 	%rd1682, %rd1666, 6;
	xor.b64  	%rd1683, %rd1680, %rd1682;
	xor.b64  	%rd1684, %rd1683, %rd1681;
	shf.r.wrap.b32 	%r1121, %r730, %r729, 1;
	shf.r.wrap.b32 	%r1122, %r729, %r730, 1;
	mov.b64 	%rd1685, {%r1122, %r1121};
	shf.r.wrap.b32 	%r1123, %r730, %r729, 8;
	shf.r.wrap.b32 	%r1124, %r729, %r730, 8;
	mov.b64 	%rd1686, {%r1124, %r1123};
	shr.u64 	%rd1687, %rd1113, 7;
	xor.b64  	%rd1688, %rd1685, %rd1687;
	xor.b64  	%rd1689, %rd1688, %rd1686;
	add.s64 	%rd1690, %rd1217, %rd1100;
	add.s64 	%rd1691, %rd1690, %rd1684;
	add.s64 	%rd1692, %rd1691, %rd1689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd1679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd1679;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 19;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 19;
	mov.b64 	%rd1693, {%r1128, %r1127};
	shf.l.wrap.b32 	%r1129, %r1125, %r1126, 3;
	shf.l.wrap.b32 	%r1130, %r1126, %r1125, 3;
	mov.b64 	%rd1694, {%r1130, %r1129};
	shr.u64 	%rd1695, %rd1679, 6;
	xor.b64  	%rd1696, %rd1693, %rd1695;
	xor.b64  	%rd1697, %rd1696, %rd1694;
	shf.r.wrap.b32 	%r1131, %r740, %r739, 1;
	shf.r.wrap.b32 	%r1132, %r739, %r740, 1;
	mov.b64 	%rd1698, {%r1132, %r1131};
	shf.r.wrap.b32 	%r1133, %r740, %r739, 8;
	shf.r.wrap.b32 	%r1134, %r739, %r740, 8;
	mov.b64 	%rd1699, {%r1134, %r1133};
	shr.u64 	%rd1700, %rd1126, 7;
	xor.b64  	%rd1701, %rd1698, %rd1700;
	xor.b64  	%rd1702, %rd1701, %rd1699;
	add.s64 	%rd1703, %rd1230, %rd1113;
	add.s64 	%rd1704, %rd1703, %rd1697;
	add.s64 	%rd1705, %rd1704, %rd1702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1135,%dummy}, %rd1692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1136}, %rd1692;
	}
	shf.r.wrap.b32 	%r1137, %r1136, %r1135, 19;
	shf.r.wrap.b32 	%r1138, %r1135, %r1136, 19;
	mov.b64 	%rd1706, {%r1138, %r1137};
	shf.l.wrap.b32 	%r1139, %r1135, %r1136, 3;
	shf.l.wrap.b32 	%r1140, %r1136, %r1135, 3;
	mov.b64 	%rd1707, {%r1140, %r1139};
	shr.u64 	%rd1708, %rd1692, 6;
	xor.b64  	%rd1709, %rd1706, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1707;
	shf.r.wrap.b32 	%r1141, %r750, %r749, 1;
	shf.r.wrap.b32 	%r1142, %r749, %r750, 1;
	mov.b64 	%rd1711, {%r1142, %r1141};
	shf.r.wrap.b32 	%r1143, %r750, %r749, 8;
	shf.r.wrap.b32 	%r1144, %r749, %r750, 8;
	mov.b64 	%rd1712, {%r1144, %r1143};
	shr.u64 	%rd1713, %rd1139, 7;
	xor.b64  	%rd1714, %rd1711, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd1712;
	add.s64 	%rd1716, %rd1243, %rd1126;
	add.s64 	%rd1717, %rd1716, %rd1710;
	add.s64 	%rd1718, %rd1717, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1145,%dummy}, %rd1705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1146}, %rd1705;
	}
	shf.r.wrap.b32 	%r1147, %r1146, %r1145, 19;
	shf.r.wrap.b32 	%r1148, %r1145, %r1146, 19;
	mov.b64 	%rd1719, {%r1148, %r1147};
	shf.l.wrap.b32 	%r1149, %r1145, %r1146, 3;
	shf.l.wrap.b32 	%r1150, %r1146, %r1145, 3;
	mov.b64 	%rd1720, {%r1150, %r1149};
	shr.u64 	%rd1721, %rd1705, 6;
	xor.b64  	%rd1722, %rd1719, %rd1721;
	xor.b64  	%rd1723, %rd1722, %rd1720;
	shf.r.wrap.b32 	%r1151, %r760, %r759, 1;
	shf.r.wrap.b32 	%r1152, %r759, %r760, 1;
	mov.b64 	%rd1724, {%r1152, %r1151};
	shf.r.wrap.b32 	%r1153, %r760, %r759, 8;
	shf.r.wrap.b32 	%r1154, %r759, %r760, 8;
	mov.b64 	%rd1725, {%r1154, %r1153};
	shr.u64 	%rd1726, %rd1152, 7;
	xor.b64  	%rd1727, %rd1724, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1725;
	add.s64 	%rd1729, %rd1256, %rd1139;
	add.s64 	%rd1730, %rd1729, %rd1723;
	add.s64 	%rd1731, %rd1730, %rd1728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1155,%dummy}, %rd1718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd1718;
	}
	shf.r.wrap.b32 	%r1157, %r1156, %r1155, 19;
	shf.r.wrap.b32 	%r1158, %r1155, %r1156, 19;
	mov.b64 	%rd1732, {%r1158, %r1157};
	shf.l.wrap.b32 	%r1159, %r1155, %r1156, 3;
	shf.l.wrap.b32 	%r1160, %r1156, %r1155, 3;
	mov.b64 	%rd1733, {%r1160, %r1159};
	shr.u64 	%rd1734, %rd1718, 6;
	xor.b64  	%rd1735, %rd1732, %rd1734;
	xor.b64  	%rd1736, %rd1735, %rd1733;
	shf.r.wrap.b32 	%r1161, %r770, %r769, 1;
	shf.r.wrap.b32 	%r1162, %r769, %r770, 1;
	mov.b64 	%rd1737, {%r1162, %r1161};
	shf.r.wrap.b32 	%r1163, %r770, %r769, 8;
	shf.r.wrap.b32 	%r1164, %r769, %r770, 8;
	mov.b64 	%rd1738, {%r1164, %r1163};
	shr.u64 	%rd1739, %rd1165, 7;
	xor.b64  	%rd1740, %rd1737, %rd1739;
	xor.b64  	%rd1741, %rd1740, %rd1738;
	add.s64 	%rd1742, %rd1269, %rd1152;
	add.s64 	%rd1743, %rd1742, %rd1736;
	add.s64 	%rd1744, %rd1743, %rd1741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd1731;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 19;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 19;
	mov.b64 	%rd1745, {%r1168, %r1167};
	shf.l.wrap.b32 	%r1169, %r1165, %r1166, 3;
	shf.l.wrap.b32 	%r1170, %r1166, %r1165, 3;
	mov.b64 	%rd1746, {%r1170, %r1169};
	shr.u64 	%rd1747, %rd1731, 6;
	xor.b64  	%rd1748, %rd1745, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1746;
	shf.r.wrap.b32 	%r1171, %r780, %r779, 1;
	shf.r.wrap.b32 	%r1172, %r779, %r780, 1;
	mov.b64 	%rd1750, {%r1172, %r1171};
	shf.r.wrap.b32 	%r1173, %r780, %r779, 8;
	shf.r.wrap.b32 	%r1174, %r779, %r780, 8;
	mov.b64 	%rd1751, {%r1174, %r1173};
	shr.u64 	%rd1752, %rd1178, 7;
	xor.b64  	%rd1753, %rd1750, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1751;
	add.s64 	%rd1755, %rd1666, %rd1165;
	add.s64 	%rd1756, %rd1755, %rd1749;
	add.s64 	%rd1757, %rd1756, %rd1754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1175,%dummy}, %rd1744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1176}, %rd1744;
	}
	shf.r.wrap.b32 	%r1177, %r1176, %r1175, 19;
	shf.r.wrap.b32 	%r1178, %r1175, %r1176, 19;
	mov.b64 	%rd1758, {%r1178, %r1177};
	shf.l.wrap.b32 	%r1179, %r1175, %r1176, 3;
	shf.l.wrap.b32 	%r1180, %r1176, %r1175, 3;
	mov.b64 	%rd1759, {%r1180, %r1179};
	shr.u64 	%rd1760, %rd1744, 6;
	xor.b64  	%rd1761, %rd1758, %rd1760;
	xor.b64  	%rd1762, %rd1761, %rd1759;
	shf.r.wrap.b32 	%r1181, %r790, %r789, 1;
	shf.r.wrap.b32 	%r1182, %r789, %r790, 1;
	mov.b64 	%rd1763, {%r1182, %r1181};
	shf.r.wrap.b32 	%r1183, %r790, %r789, 8;
	shf.r.wrap.b32 	%r1184, %r789, %r790, 8;
	mov.b64 	%rd1764, {%r1184, %r1183};
	shr.u64 	%rd1765, %rd1191, 7;
	xor.b64  	%rd1766, %rd1763, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1764;
	add.s64 	%rd1768, %rd1679, %rd1178;
	add.s64 	%rd1769, %rd1768, %rd1762;
	add.s64 	%rd1770, %rd1769, %rd1767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd1757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1186}, %rd1757;
	}
	shf.r.wrap.b32 	%r1187, %r1186, %r1185, 19;
	shf.r.wrap.b32 	%r1188, %r1185, %r1186, 19;
	mov.b64 	%rd1771, {%r1188, %r1187};
	shf.l.wrap.b32 	%r1189, %r1185, %r1186, 3;
	shf.l.wrap.b32 	%r1190, %r1186, %r1185, 3;
	mov.b64 	%rd1772, {%r1190, %r1189};
	shr.u64 	%rd1773, %rd1757, 6;
	xor.b64  	%rd1774, %rd1771, %rd1773;
	xor.b64  	%rd1775, %rd1774, %rd1772;
	shf.r.wrap.b32 	%r1191, %r800, %r799, 1;
	shf.r.wrap.b32 	%r1192, %r799, %r800, 1;
	mov.b64 	%rd1776, {%r1192, %r1191};
	shf.r.wrap.b32 	%r1193, %r800, %r799, 8;
	shf.r.wrap.b32 	%r1194, %r799, %r800, 8;
	mov.b64 	%rd1777, {%r1194, %r1193};
	shr.u64 	%rd1778, %rd1204, 7;
	xor.b64  	%rd1779, %rd1776, %rd1778;
	xor.b64  	%rd1780, %rd1779, %rd1777;
	add.s64 	%rd1781, %rd1692, %rd1191;
	add.s64 	%rd1782, %rd1781, %rd1775;
	add.s64 	%rd1783, %rd1782, %rd1780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1195,%dummy}, %rd1770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1196}, %rd1770;
	}
	shf.r.wrap.b32 	%r1197, %r1196, %r1195, 19;
	shf.r.wrap.b32 	%r1198, %r1195, %r1196, 19;
	mov.b64 	%rd1784, {%r1198, %r1197};
	shf.l.wrap.b32 	%r1199, %r1195, %r1196, 3;
	shf.l.wrap.b32 	%r1200, %r1196, %r1195, 3;
	mov.b64 	%rd1785, {%r1200, %r1199};
	shr.u64 	%rd1786, %rd1770, 6;
	xor.b64  	%rd1787, %rd1784, %rd1786;
	xor.b64  	%rd1788, %rd1787, %rd1785;
	shf.r.wrap.b32 	%r1201, %r810, %r809, 1;
	shf.r.wrap.b32 	%r1202, %r809, %r810, 1;
	mov.b64 	%rd1789, {%r1202, %r1201};
	shf.r.wrap.b32 	%r1203, %r810, %r809, 8;
	shf.r.wrap.b32 	%r1204, %r809, %r810, 8;
	mov.b64 	%rd1790, {%r1204, %r1203};
	shr.u64 	%rd1791, %rd1217, 7;
	xor.b64  	%rd1792, %rd1789, %rd1791;
	xor.b64  	%rd1793, %rd1792, %rd1790;
	add.s64 	%rd1794, %rd1705, %rd1204;
	add.s64 	%rd1795, %rd1794, %rd1788;
	add.s64 	%rd1796, %rd1795, %rd1793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1205,%dummy}, %rd1783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1206}, %rd1783;
	}
	shf.r.wrap.b32 	%r1207, %r1206, %r1205, 19;
	shf.r.wrap.b32 	%r1208, %r1205, %r1206, 19;
	mov.b64 	%rd1797, {%r1208, %r1207};
	shf.l.wrap.b32 	%r1209, %r1205, %r1206, 3;
	shf.l.wrap.b32 	%r1210, %r1206, %r1205, 3;
	mov.b64 	%rd1798, {%r1210, %r1209};
	shr.u64 	%rd1799, %rd1783, 6;
	xor.b64  	%rd1800, %rd1797, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd1798;
	shf.r.wrap.b32 	%r1211, %r820, %r819, 1;
	shf.r.wrap.b32 	%r1212, %r819, %r820, 1;
	mov.b64 	%rd1802, {%r1212, %r1211};
	shf.r.wrap.b32 	%r1213, %r820, %r819, 8;
	shf.r.wrap.b32 	%r1214, %r819, %r820, 8;
	mov.b64 	%rd1803, {%r1214, %r1213};
	shr.u64 	%rd1804, %rd1230, 7;
	xor.b64  	%rd1805, %rd1802, %rd1804;
	xor.b64  	%rd1806, %rd1805, %rd1803;
	add.s64 	%rd1807, %rd1718, %rd1217;
	add.s64 	%rd1808, %rd1807, %rd1801;
	add.s64 	%rd1809, %rd1808, %rd1806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1215,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1216}, %rd1796;
	}
	shf.r.wrap.b32 	%r1217, %r1216, %r1215, 19;
	shf.r.wrap.b32 	%r1218, %r1215, %r1216, 19;
	mov.b64 	%rd1810, {%r1218, %r1217};
	shf.l.wrap.b32 	%r1219, %r1215, %r1216, 3;
	shf.l.wrap.b32 	%r1220, %r1216, %r1215, 3;
	mov.b64 	%rd1811, {%r1220, %r1219};
	shr.u64 	%rd1812, %rd1796, 6;
	xor.b64  	%rd1813, %rd1810, %rd1812;
	xor.b64  	%rd1814, %rd1813, %rd1811;
	shf.r.wrap.b32 	%r1221, %r830, %r829, 1;
	shf.r.wrap.b32 	%r1222, %r829, %r830, 1;
	mov.b64 	%rd1815, {%r1222, %r1221};
	shf.r.wrap.b32 	%r1223, %r830, %r829, 8;
	shf.r.wrap.b32 	%r1224, %r829, %r830, 8;
	mov.b64 	%rd1816, {%r1224, %r1223};
	shr.u64 	%rd1817, %rd1243, 7;
	xor.b64  	%rd1818, %rd1815, %rd1817;
	xor.b64  	%rd1819, %rd1818, %rd1816;
	add.s64 	%rd1820, %rd1731, %rd1230;
	add.s64 	%rd1821, %rd1820, %rd1814;
	add.s64 	%rd1822, %rd1821, %rd1819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd1809;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 19;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 19;
	mov.b64 	%rd1823, {%r1228, %r1227};
	shf.l.wrap.b32 	%r1229, %r1225, %r1226, 3;
	shf.l.wrap.b32 	%r1230, %r1226, %r1225, 3;
	mov.b64 	%rd1824, {%r1230, %r1229};
	shr.u64 	%rd1825, %rd1809, 6;
	xor.b64  	%rd1826, %rd1823, %rd1825;
	xor.b64  	%rd1827, %rd1826, %rd1824;
	shf.r.wrap.b32 	%r1231, %r1096, %r1095, 1;
	shf.r.wrap.b32 	%r1232, %r1095, %r1096, 1;
	mov.b64 	%rd1828, {%r1232, %r1231};
	shf.r.wrap.b32 	%r1233, %r1096, %r1095, 8;
	shf.r.wrap.b32 	%r1234, %r1095, %r1096, 8;
	mov.b64 	%rd1829, {%r1234, %r1233};
	shr.u64 	%rd1830, %rd1256, 7;
	xor.b64  	%rd1831, %rd1828, %rd1830;
	xor.b64  	%rd1832, %rd1831, %rd1829;
	add.s64 	%rd1833, %rd1744, %rd1243;
	add.s64 	%rd1834, %rd1833, %rd1827;
	add.s64 	%rd1835, %rd1834, %rd1832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1235,%dummy}, %rd1822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1236}, %rd1822;
	}
	shf.r.wrap.b32 	%r1237, %r1236, %r1235, 19;
	shf.r.wrap.b32 	%r1238, %r1235, %r1236, 19;
	mov.b64 	%rd1836, {%r1238, %r1237};
	shf.l.wrap.b32 	%r1239, %r1235, %r1236, 3;
	shf.l.wrap.b32 	%r1240, %r1236, %r1235, 3;
	mov.b64 	%rd1837, {%r1240, %r1239};
	shr.u64 	%rd1838, %rd1822, 6;
	xor.b64  	%rd1839, %rd1836, %rd1838;
	xor.b64  	%rd1840, %rd1839, %rd1837;
	shf.r.wrap.b32 	%r1241, %r1106, %r1105, 1;
	shf.r.wrap.b32 	%r1242, %r1105, %r1106, 1;
	mov.b64 	%rd1841, {%r1242, %r1241};
	shf.r.wrap.b32 	%r1243, %r1106, %r1105, 8;
	shf.r.wrap.b32 	%r1244, %r1105, %r1106, 8;
	mov.b64 	%rd1842, {%r1244, %r1243};
	shr.u64 	%rd1843, %rd1269, 7;
	xor.b64  	%rd1844, %rd1841, %rd1843;
	xor.b64  	%rd1845, %rd1844, %rd1842;
	add.s64 	%rd1846, %rd1757, %rd1256;
	add.s64 	%rd1847, %rd1846, %rd1840;
	add.s64 	%rd1848, %rd1847, %rd1845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd1835;
	}
	shf.r.wrap.b32 	%r1247, %r1246, %r1245, 19;
	shf.r.wrap.b32 	%r1248, %r1245, %r1246, 19;
	mov.b64 	%rd1849, {%r1248, %r1247};
	shf.l.wrap.b32 	%r1249, %r1245, %r1246, 3;
	shf.l.wrap.b32 	%r1250, %r1246, %r1245, 3;
	mov.b64 	%rd1850, {%r1250, %r1249};
	shr.u64 	%rd1851, %rd1835, 6;
	xor.b64  	%rd1852, %rd1849, %rd1851;
	xor.b64  	%rd1853, %rd1852, %rd1850;
	shf.r.wrap.b32 	%r1251, %r1116, %r1115, 1;
	shf.r.wrap.b32 	%r1252, %r1115, %r1116, 1;
	mov.b64 	%rd1854, {%r1252, %r1251};
	shf.r.wrap.b32 	%r1253, %r1116, %r1115, 8;
	shf.r.wrap.b32 	%r1254, %r1115, %r1116, 8;
	mov.b64 	%rd1855, {%r1254, %r1253};
	shr.u64 	%rd1856, %rd1666, 7;
	xor.b64  	%rd1857, %rd1854, %rd1856;
	xor.b64  	%rd1858, %rd1857, %rd1855;
	add.s64 	%rd1859, %rd1770, %rd1269;
	add.s64 	%rd1860, %rd1859, %rd1853;
	add.s64 	%rd1861, %rd1860, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1255,%dummy}, %rd1642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1256}, %rd1642;
	}
	shf.r.wrap.b32 	%r1257, %r1256, %r1255, 14;
	shf.r.wrap.b32 	%r1258, %r1255, %r1256, 14;
	mov.b64 	%rd1862, {%r1258, %r1257};
	shf.r.wrap.b32 	%r1259, %r1256, %r1255, 18;
	shf.r.wrap.b32 	%r1260, %r1255, %r1256, 18;
	mov.b64 	%rd1863, {%r1260, %r1259};
	xor.b64  	%rd1864, %rd1863, %rd1862;
	shf.l.wrap.b32 	%r1261, %r1255, %r1256, 23;
	shf.l.wrap.b32 	%r1262, %r1256, %r1255, 23;
	mov.b64 	%rd1865, {%r1262, %r1261};
	xor.b64  	%rd1866, %rd1864, %rd1865;
	xor.b64  	%rd1867, %rd1618, %rd1594;
	and.b64  	%rd1868, %rd1867, %rd1642;
	xor.b64  	%rd1869, %rd1868, %rd1594;
	add.s64 	%rd1870, %rd1869, %rd1570;
	add.s64 	%rd1871, %rd1870, %rd1666;
	add.s64 	%rd1872, %rd1871, %rd68;
	add.s64 	%rd1873, %rd1872, %rd1866;
	add.s64 	%rd1874, %rd1873, %rd1581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1263,%dummy}, %rd1653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1264}, %rd1653;
	}
	shf.r.wrap.b32 	%r1265, %r1264, %r1263, 28;
	shf.r.wrap.b32 	%r1266, %r1263, %r1264, 28;
	mov.b64 	%rd1875, {%r1266, %r1265};
	shf.l.wrap.b32 	%r1267, %r1263, %r1264, 30;
	shf.l.wrap.b32 	%r1268, %r1264, %r1263, 30;
	mov.b64 	%rd1876, {%r1268, %r1267};
	xor.b64  	%rd1877, %rd1876, %rd1875;
	shf.l.wrap.b32 	%r1269, %r1263, %r1264, 25;
	shf.l.wrap.b32 	%r1270, %r1264, %r1263, 25;
	mov.b64 	%rd1878, {%r1270, %r1269};
	xor.b64  	%rd1879, %rd1877, %rd1878;
	xor.b64  	%rd1880, %rd1653, %rd1605;
	xor.b64  	%rd1881, %rd1653, %rd1629;
	and.b64  	%rd1882, %rd1881, %rd1880;
	xor.b64  	%rd1883, %rd1882, %rd1653;
	add.s64 	%rd1884, %rd1873, %rd1883;
	add.s64 	%rd1885, %rd1884, %rd1879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1271,%dummy}, %rd1874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1272}, %rd1874;
	}
	shf.r.wrap.b32 	%r1273, %r1272, %r1271, 14;
	shf.r.wrap.b32 	%r1274, %r1271, %r1272, 14;
	mov.b64 	%rd1886, {%r1274, %r1273};
	shf.r.wrap.b32 	%r1275, %r1272, %r1271, 18;
	shf.r.wrap.b32 	%r1276, %r1271, %r1272, 18;
	mov.b64 	%rd1887, {%r1276, %r1275};
	xor.b64  	%rd1888, %rd1887, %rd1886;
	shf.l.wrap.b32 	%r1277, %r1271, %r1272, 23;
	shf.l.wrap.b32 	%r1278, %r1272, %r1271, 23;
	mov.b64 	%rd1889, {%r1278, %r1277};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	xor.b64  	%rd1891, %rd1642, %rd1618;
	and.b64  	%rd1892, %rd1874, %rd1891;
	xor.b64  	%rd1893, %rd1892, %rd1618;
	add.s64 	%rd1894, %rd1679, %rd1594;
	add.s64 	%rd1895, %rd1894, %rd69;
	add.s64 	%rd1896, %rd1895, %rd1893;
	add.s64 	%rd1897, %rd1896, %rd1890;
	add.s64 	%rd1898, %rd1897, %rd1605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1279,%dummy}, %rd1885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd1885;
	}
	shf.r.wrap.b32 	%r1281, %r1280, %r1279, 28;
	shf.r.wrap.b32 	%r1282, %r1279, %r1280, 28;
	mov.b64 	%rd1899, {%r1282, %r1281};
	shf.l.wrap.b32 	%r1283, %r1279, %r1280, 30;
	shf.l.wrap.b32 	%r1284, %r1280, %r1279, 30;
	mov.b64 	%rd1900, {%r1284, %r1283};
	xor.b64  	%rd1901, %rd1900, %rd1899;
	shf.l.wrap.b32 	%r1285, %r1279, %r1280, 25;
	shf.l.wrap.b32 	%r1286, %r1280, %r1279, 25;
	mov.b64 	%rd1902, {%r1286, %r1285};
	xor.b64  	%rd1903, %rd1901, %rd1902;
	xor.b64  	%rd1904, %rd1885, %rd1629;
	xor.b64  	%rd1905, %rd1885, %rd1653;
	and.b64  	%rd1906, %rd1905, %rd1904;
	xor.b64  	%rd1907, %rd1906, %rd1885;
	add.s64 	%rd1908, %rd1897, %rd1907;
	add.s64 	%rd1909, %rd1908, %rd1903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1287,%dummy}, %rd1898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd1898;
	}
	shf.r.wrap.b32 	%r1289, %r1288, %r1287, 14;
	shf.r.wrap.b32 	%r1290, %r1287, %r1288, 14;
	mov.b64 	%rd1910, {%r1290, %r1289};
	shf.r.wrap.b32 	%r1291, %r1288, %r1287, 18;
	shf.r.wrap.b32 	%r1292, %r1287, %r1288, 18;
	mov.b64 	%rd1911, {%r1292, %r1291};
	xor.b64  	%rd1912, %rd1911, %rd1910;
	shf.l.wrap.b32 	%r1293, %r1287, %r1288, 23;
	shf.l.wrap.b32 	%r1294, %r1288, %r1287, 23;
	mov.b64 	%rd1913, {%r1294, %r1293};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	xor.b64  	%rd1915, %rd1874, %rd1642;
	and.b64  	%rd1916, %rd1898, %rd1915;
	xor.b64  	%rd1917, %rd1916, %rd1642;
	add.s64 	%rd1918, %rd1692, %rd1618;
	add.s64 	%rd1919, %rd1918, %rd70;
	add.s64 	%rd1920, %rd1919, %rd1917;
	add.s64 	%rd1921, %rd1920, %rd1914;
	add.s64 	%rd1922, %rd1921, %rd1629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd1909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd1909;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 28;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 28;
	mov.b64 	%rd1923, {%r1298, %r1297};
	shf.l.wrap.b32 	%r1299, %r1295, %r1296, 30;
	shf.l.wrap.b32 	%r1300, %r1296, %r1295, 30;
	mov.b64 	%rd1924, {%r1300, %r1299};
	xor.b64  	%rd1925, %rd1924, %rd1923;
	shf.l.wrap.b32 	%r1301, %r1295, %r1296, 25;
	shf.l.wrap.b32 	%r1302, %r1296, %r1295, 25;
	mov.b64 	%rd1926, {%r1302, %r1301};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	xor.b64  	%rd1928, %rd1909, %rd1653;
	xor.b64  	%rd1929, %rd1909, %rd1885;
	and.b64  	%rd1930, %rd1929, %rd1928;
	xor.b64  	%rd1931, %rd1930, %rd1909;
	add.s64 	%rd1932, %rd1921, %rd1931;
	add.s64 	%rd1933, %rd1932, %rd1927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd1922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd1922;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 14;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 14;
	mov.b64 	%rd1934, {%r1306, %r1305};
	shf.r.wrap.b32 	%r1307, %r1304, %r1303, 18;
	shf.r.wrap.b32 	%r1308, %r1303, %r1304, 18;
	mov.b64 	%rd1935, {%r1308, %r1307};
	xor.b64  	%rd1936, %rd1935, %rd1934;
	shf.l.wrap.b32 	%r1309, %r1303, %r1304, 23;
	shf.l.wrap.b32 	%r1310, %r1304, %r1303, 23;
	mov.b64 	%rd1937, {%r1310, %r1309};
	xor.b64  	%rd1938, %rd1936, %rd1937;
	xor.b64  	%rd1939, %rd1898, %rd1874;
	and.b64  	%rd1940, %rd1922, %rd1939;
	xor.b64  	%rd1941, %rd1940, %rd1874;
	add.s64 	%rd1942, %rd1705, %rd1642;
	add.s64 	%rd1943, %rd1942, %rd71;
	add.s64 	%rd1944, %rd1943, %rd1941;
	add.s64 	%rd1945, %rd1944, %rd1938;
	add.s64 	%rd1946, %rd1945, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd1933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd1933;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 28;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 28;
	mov.b64 	%rd1947, {%r1314, %r1313};
	shf.l.wrap.b32 	%r1315, %r1311, %r1312, 30;
	shf.l.wrap.b32 	%r1316, %r1312, %r1311, 30;
	mov.b64 	%rd1948, {%r1316, %r1315};
	xor.b64  	%rd1949, %rd1948, %rd1947;
	shf.l.wrap.b32 	%r1317, %r1311, %r1312, 25;
	shf.l.wrap.b32 	%r1318, %r1312, %r1311, 25;
	mov.b64 	%rd1950, {%r1318, %r1317};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	xor.b64  	%rd1952, %rd1933, %rd1885;
	xor.b64  	%rd1953, %rd1933, %rd1909;
	and.b64  	%rd1954, %rd1953, %rd1952;
	xor.b64  	%rd1955, %rd1954, %rd1933;
	add.s64 	%rd1956, %rd1945, %rd1955;
	add.s64 	%rd1957, %rd1956, %rd1951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1319,%dummy}, %rd1946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1320}, %rd1946;
	}
	shf.r.wrap.b32 	%r1321, %r1320, %r1319, 14;
	shf.r.wrap.b32 	%r1322, %r1319, %r1320, 14;
	mov.b64 	%rd1958, {%r1322, %r1321};
	shf.r.wrap.b32 	%r1323, %r1320, %r1319, 18;
	shf.r.wrap.b32 	%r1324, %r1319, %r1320, 18;
	mov.b64 	%rd1959, {%r1324, %r1323};
	xor.b64  	%rd1960, %rd1959, %rd1958;
	shf.l.wrap.b32 	%r1325, %r1319, %r1320, 23;
	shf.l.wrap.b32 	%r1326, %r1320, %r1319, 23;
	mov.b64 	%rd1961, {%r1326, %r1325};
	xor.b64  	%rd1962, %rd1960, %rd1961;
	xor.b64  	%rd1963, %rd1922, %rd1898;
	and.b64  	%rd1964, %rd1946, %rd1963;
	xor.b64  	%rd1965, %rd1964, %rd1898;
	add.s64 	%rd1966, %rd1874, %rd1718;
	add.s64 	%rd1967, %rd1966, %rd72;
	add.s64 	%rd1968, %rd1967, %rd1965;
	add.s64 	%rd1969, %rd1968, %rd1962;
	add.s64 	%rd1970, %rd1969, %rd1885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1327,%dummy}, %rd1957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1328}, %rd1957;
	}
	shf.r.wrap.b32 	%r1329, %r1328, %r1327, 28;
	shf.r.wrap.b32 	%r1330, %r1327, %r1328, 28;
	mov.b64 	%rd1971, {%r1330, %r1329};
	shf.l.wrap.b32 	%r1331, %r1327, %r1328, 30;
	shf.l.wrap.b32 	%r1332, %r1328, %r1327, 30;
	mov.b64 	%rd1972, {%r1332, %r1331};
	xor.b64  	%rd1973, %rd1972, %rd1971;
	shf.l.wrap.b32 	%r1333, %r1327, %r1328, 25;
	shf.l.wrap.b32 	%r1334, %r1328, %r1327, 25;
	mov.b64 	%rd1974, {%r1334, %r1333};
	xor.b64  	%rd1975, %rd1973, %rd1974;
	xor.b64  	%rd1976, %rd1957, %rd1909;
	xor.b64  	%rd1977, %rd1957, %rd1933;
	and.b64  	%rd1978, %rd1977, %rd1976;
	xor.b64  	%rd1979, %rd1978, %rd1957;
	add.s64 	%rd1980, %rd1969, %rd1979;
	add.s64 	%rd1981, %rd1980, %rd1975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1335,%dummy}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1336}, %rd1970;
	}
	shf.r.wrap.b32 	%r1337, %r1336, %r1335, 14;
	shf.r.wrap.b32 	%r1338, %r1335, %r1336, 14;
	mov.b64 	%rd1982, {%r1338, %r1337};
	shf.r.wrap.b32 	%r1339, %r1336, %r1335, 18;
	shf.r.wrap.b32 	%r1340, %r1335, %r1336, 18;
	mov.b64 	%rd1983, {%r1340, %r1339};
	xor.b64  	%rd1984, %rd1983, %rd1982;
	shf.l.wrap.b32 	%r1341, %r1335, %r1336, 23;
	shf.l.wrap.b32 	%r1342, %r1336, %r1335, 23;
	mov.b64 	%rd1985, {%r1342, %r1341};
	xor.b64  	%rd1986, %rd1984, %rd1985;
	xor.b64  	%rd1987, %rd1946, %rd1922;
	and.b64  	%rd1988, %rd1970, %rd1987;
	xor.b64  	%rd1989, %rd1988, %rd1922;
	add.s64 	%rd1990, %rd1898, %rd1731;
	add.s64 	%rd1991, %rd1990, %rd73;
	add.s64 	%rd1992, %rd1991, %rd1989;
	add.s64 	%rd1993, %rd1992, %rd1986;
	add.s64 	%rd1994, %rd1993, %rd1909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd1981;
	}
	shf.r.wrap.b32 	%r1345, %r1344, %r1343, 28;
	shf.r.wrap.b32 	%r1346, %r1343, %r1344, 28;
	mov.b64 	%rd1995, {%r1346, %r1345};
	shf.l.wrap.b32 	%r1347, %r1343, %r1344, 30;
	shf.l.wrap.b32 	%r1348, %r1344, %r1343, 30;
	mov.b64 	%rd1996, {%r1348, %r1347};
	xor.b64  	%rd1997, %rd1996, %rd1995;
	shf.l.wrap.b32 	%r1349, %r1343, %r1344, 25;
	shf.l.wrap.b32 	%r1350, %r1344, %r1343, 25;
	mov.b64 	%rd1998, {%r1350, %r1349};
	xor.b64  	%rd1999, %rd1997, %rd1998;
	xor.b64  	%rd2000, %rd1981, %rd1933;
	xor.b64  	%rd2001, %rd1981, %rd1957;
	and.b64  	%rd2002, %rd2001, %rd2000;
	xor.b64  	%rd2003, %rd2002, %rd1981;
	add.s64 	%rd2004, %rd1993, %rd2003;
	add.s64 	%rd2005, %rd2004, %rd1999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd1994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd1994;
	}
	shf.r.wrap.b32 	%r1353, %r1352, %r1351, 14;
	shf.r.wrap.b32 	%r1354, %r1351, %r1352, 14;
	mov.b64 	%rd2006, {%r1354, %r1353};
	shf.r.wrap.b32 	%r1355, %r1352, %r1351, 18;
	shf.r.wrap.b32 	%r1356, %r1351, %r1352, 18;
	mov.b64 	%rd2007, {%r1356, %r1355};
	xor.b64  	%rd2008, %rd2007, %rd2006;
	shf.l.wrap.b32 	%r1357, %r1351, %r1352, 23;
	shf.l.wrap.b32 	%r1358, %r1352, %r1351, 23;
	mov.b64 	%rd2009, {%r1358, %r1357};
	xor.b64  	%rd2010, %rd2008, %rd2009;
	xor.b64  	%rd2011, %rd1970, %rd1946;
	and.b64  	%rd2012, %rd1994, %rd2011;
	xor.b64  	%rd2013, %rd2012, %rd1946;
	add.s64 	%rd2014, %rd1922, %rd1744;
	add.s64 	%rd2015, %rd2014, %rd74;
	add.s64 	%rd2016, %rd2015, %rd2013;
	add.s64 	%rd2017, %rd2016, %rd2010;
	add.s64 	%rd2018, %rd2017, %rd1933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1359,%dummy}, %rd2005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1360}, %rd2005;
	}
	shf.r.wrap.b32 	%r1361, %r1360, %r1359, 28;
	shf.r.wrap.b32 	%r1362, %r1359, %r1360, 28;
	mov.b64 	%rd2019, {%r1362, %r1361};
	shf.l.wrap.b32 	%r1363, %r1359, %r1360, 30;
	shf.l.wrap.b32 	%r1364, %r1360, %r1359, 30;
	mov.b64 	%rd2020, {%r1364, %r1363};
	xor.b64  	%rd2021, %rd2020, %rd2019;
	shf.l.wrap.b32 	%r1365, %r1359, %r1360, 25;
	shf.l.wrap.b32 	%r1366, %r1360, %r1359, 25;
	mov.b64 	%rd2022, {%r1366, %r1365};
	xor.b64  	%rd2023, %rd2021, %rd2022;
	xor.b64  	%rd2024, %rd2005, %rd1957;
	xor.b64  	%rd2025, %rd2005, %rd1981;
	and.b64  	%rd2026, %rd2025, %rd2024;
	xor.b64  	%rd2027, %rd2026, %rd2005;
	add.s64 	%rd2028, %rd2017, %rd2027;
	add.s64 	%rd2029, %rd2028, %rd2023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1368}, %rd2018;
	}
	shf.r.wrap.b32 	%r1369, %r1368, %r1367, 14;
	shf.r.wrap.b32 	%r1370, %r1367, %r1368, 14;
	mov.b64 	%rd2030, {%r1370, %r1369};
	shf.r.wrap.b32 	%r1371, %r1368, %r1367, 18;
	shf.r.wrap.b32 	%r1372, %r1367, %r1368, 18;
	mov.b64 	%rd2031, {%r1372, %r1371};
	xor.b64  	%rd2032, %rd2031, %rd2030;
	shf.l.wrap.b32 	%r1373, %r1367, %r1368, 23;
	shf.l.wrap.b32 	%r1374, %r1368, %r1367, 23;
	mov.b64 	%rd2033, {%r1374, %r1373};
	xor.b64  	%rd2034, %rd2032, %rd2033;
	xor.b64  	%rd2035, %rd1994, %rd1970;
	and.b64  	%rd2036, %rd2018, %rd2035;
	xor.b64  	%rd2037, %rd2036, %rd1970;
	add.s64 	%rd2038, %rd1946, %rd1757;
	add.s64 	%rd2039, %rd2038, %rd75;
	add.s64 	%rd2040, %rd2039, %rd2037;
	add.s64 	%rd2041, %rd2040, %rd2034;
	add.s64 	%rd2042, %rd2041, %rd1957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd2029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd2029;
	}
	shf.r.wrap.b32 	%r1377, %r1376, %r1375, 28;
	shf.r.wrap.b32 	%r1378, %r1375, %r1376, 28;
	mov.b64 	%rd2043, {%r1378, %r1377};
	shf.l.wrap.b32 	%r1379, %r1375, %r1376, 30;
	shf.l.wrap.b32 	%r1380, %r1376, %r1375, 30;
	mov.b64 	%rd2044, {%r1380, %r1379};
	xor.b64  	%rd2045, %rd2044, %rd2043;
	shf.l.wrap.b32 	%r1381, %r1375, %r1376, 25;
	shf.l.wrap.b32 	%r1382, %r1376, %r1375, 25;
	mov.b64 	%rd2046, {%r1382, %r1381};
	xor.b64  	%rd2047, %rd2045, %rd2046;
	xor.b64  	%rd2048, %rd2029, %rd1981;
	xor.b64  	%rd2049, %rd2029, %rd2005;
	and.b64  	%rd2050, %rd2049, %rd2048;
	xor.b64  	%rd2051, %rd2050, %rd2029;
	add.s64 	%rd2052, %rd2041, %rd2051;
	add.s64 	%rd2053, %rd2052, %rd2047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1383,%dummy}, %rd2042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1384}, %rd2042;
	}
	shf.r.wrap.b32 	%r1385, %r1384, %r1383, 14;
	shf.r.wrap.b32 	%r1386, %r1383, %r1384, 14;
	mov.b64 	%rd2054, {%r1386, %r1385};
	shf.r.wrap.b32 	%r1387, %r1384, %r1383, 18;
	shf.r.wrap.b32 	%r1388, %r1383, %r1384, 18;
	mov.b64 	%rd2055, {%r1388, %r1387};
	xor.b64  	%rd2056, %rd2055, %rd2054;
	shf.l.wrap.b32 	%r1389, %r1383, %r1384, 23;
	shf.l.wrap.b32 	%r1390, %r1384, %r1383, 23;
	mov.b64 	%rd2057, {%r1390, %r1389};
	xor.b64  	%rd2058, %rd2056, %rd2057;
	xor.b64  	%rd2059, %rd2018, %rd1994;
	and.b64  	%rd2060, %rd2042, %rd2059;
	xor.b64  	%rd2061, %rd2060, %rd1994;
	add.s64 	%rd2062, %rd1970, %rd1770;
	add.s64 	%rd2063, %rd2062, %rd76;
	add.s64 	%rd2064, %rd2063, %rd2061;
	add.s64 	%rd2065, %rd2064, %rd2058;
	add.s64 	%rd2066, %rd2065, %rd1981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1391,%dummy}, %rd2053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd2053;
	}
	shf.r.wrap.b32 	%r1393, %r1392, %r1391, 28;
	shf.r.wrap.b32 	%r1394, %r1391, %r1392, 28;
	mov.b64 	%rd2067, {%r1394, %r1393};
	shf.l.wrap.b32 	%r1395, %r1391, %r1392, 30;
	shf.l.wrap.b32 	%r1396, %r1392, %r1391, 30;
	mov.b64 	%rd2068, {%r1396, %r1395};
	xor.b64  	%rd2069, %rd2068, %rd2067;
	shf.l.wrap.b32 	%r1397, %r1391, %r1392, 25;
	shf.l.wrap.b32 	%r1398, %r1392, %r1391, 25;
	mov.b64 	%rd2070, {%r1398, %r1397};
	xor.b64  	%rd2071, %rd2069, %rd2070;
	xor.b64  	%rd2072, %rd2053, %rd2005;
	xor.b64  	%rd2073, %rd2053, %rd2029;
	and.b64  	%rd2074, %rd2073, %rd2072;
	xor.b64  	%rd2075, %rd2074, %rd2053;
	add.s64 	%rd2076, %rd2065, %rd2075;
	add.s64 	%rd2077, %rd2076, %rd2071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd2066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd2066;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 14;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 14;
	mov.b64 	%rd2078, {%r1402, %r1401};
	shf.r.wrap.b32 	%r1403, %r1400, %r1399, 18;
	shf.r.wrap.b32 	%r1404, %r1399, %r1400, 18;
	mov.b64 	%rd2079, {%r1404, %r1403};
	xor.b64  	%rd2080, %rd2079, %rd2078;
	shf.l.wrap.b32 	%r1405, %r1399, %r1400, 23;
	shf.l.wrap.b32 	%r1406, %r1400, %r1399, 23;
	mov.b64 	%rd2081, {%r1406, %r1405};
	xor.b64  	%rd2082, %rd2080, %rd2081;
	xor.b64  	%rd2083, %rd2042, %rd2018;
	and.b64  	%rd2084, %rd2066, %rd2083;
	xor.b64  	%rd2085, %rd2084, %rd2018;
	add.s64 	%rd2086, %rd1994, %rd1783;
	add.s64 	%rd2087, %rd2086, %rd77;
	add.s64 	%rd2088, %rd2087, %rd2085;
	add.s64 	%rd2089, %rd2088, %rd2082;
	add.s64 	%rd2090, %rd2089, %rd2005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd2077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd2077;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 28;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 28;
	mov.b64 	%rd2091, {%r1410, %r1409};
	shf.l.wrap.b32 	%r1411, %r1407, %r1408, 30;
	shf.l.wrap.b32 	%r1412, %r1408, %r1407, 30;
	mov.b64 	%rd2092, {%r1412, %r1411};
	xor.b64  	%rd2093, %rd2092, %rd2091;
	shf.l.wrap.b32 	%r1413, %r1407, %r1408, 25;
	shf.l.wrap.b32 	%r1414, %r1408, %r1407, 25;
	mov.b64 	%rd2094, {%r1414, %r1413};
	xor.b64  	%rd2095, %rd2093, %rd2094;
	xor.b64  	%rd2096, %rd2077, %rd2029;
	xor.b64  	%rd2097, %rd2077, %rd2053;
	and.b64  	%rd2098, %rd2097, %rd2096;
	xor.b64  	%rd2099, %rd2098, %rd2077;
	add.s64 	%rd2100, %rd2089, %rd2099;
	add.s64 	%rd2101, %rd2100, %rd2095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd2090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd2090;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 14;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 14;
	mov.b64 	%rd2102, {%r1418, %r1417};
	shf.r.wrap.b32 	%r1419, %r1416, %r1415, 18;
	shf.r.wrap.b32 	%r1420, %r1415, %r1416, 18;
	mov.b64 	%rd2103, {%r1420, %r1419};
	xor.b64  	%rd2104, %rd2103, %rd2102;
	shf.l.wrap.b32 	%r1421, %r1415, %r1416, 23;
	shf.l.wrap.b32 	%r1422, %r1416, %r1415, 23;
	mov.b64 	%rd2105, {%r1422, %r1421};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	xor.b64  	%rd2107, %rd2066, %rd2042;
	and.b64  	%rd2108, %rd2090, %rd2107;
	xor.b64  	%rd2109, %rd2108, %rd2042;
	add.s64 	%rd2110, %rd2018, %rd1796;
	add.s64 	%rd2111, %rd2110, %rd78;
	add.s64 	%rd2112, %rd2111, %rd2109;
	add.s64 	%rd2113, %rd2112, %rd2106;
	add.s64 	%rd2114, %rd2113, %rd2029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd2101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd2101;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 28;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 28;
	mov.b64 	%rd2115, {%r1426, %r1425};
	shf.l.wrap.b32 	%r1427, %r1423, %r1424, 30;
	shf.l.wrap.b32 	%r1428, %r1424, %r1423, 30;
	mov.b64 	%rd2116, {%r1428, %r1427};
	xor.b64  	%rd2117, %rd2116, %rd2115;
	shf.l.wrap.b32 	%r1429, %r1423, %r1424, 25;
	shf.l.wrap.b32 	%r1430, %r1424, %r1423, 25;
	mov.b64 	%rd2118, {%r1430, %r1429};
	xor.b64  	%rd2119, %rd2117, %rd2118;
	xor.b64  	%rd2120, %rd2101, %rd2053;
	xor.b64  	%rd2121, %rd2101, %rd2077;
	and.b64  	%rd2122, %rd2121, %rd2120;
	xor.b64  	%rd2123, %rd2122, %rd2101;
	add.s64 	%rd2124, %rd2113, %rd2123;
	add.s64 	%rd2125, %rd2124, %rd2119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1431,%dummy}, %rd2114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1432}, %rd2114;
	}
	shf.r.wrap.b32 	%r1433, %r1432, %r1431, 14;
	shf.r.wrap.b32 	%r1434, %r1431, %r1432, 14;
	mov.b64 	%rd2126, {%r1434, %r1433};
	shf.r.wrap.b32 	%r1435, %r1432, %r1431, 18;
	shf.r.wrap.b32 	%r1436, %r1431, %r1432, 18;
	mov.b64 	%rd2127, {%r1436, %r1435};
	xor.b64  	%rd2128, %rd2127, %rd2126;
	shf.l.wrap.b32 	%r1437, %r1431, %r1432, 23;
	shf.l.wrap.b32 	%r1438, %r1432, %r1431, 23;
	mov.b64 	%rd2129, {%r1438, %r1437};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	xor.b64  	%rd2131, %rd2090, %rd2066;
	and.b64  	%rd2132, %rd2114, %rd2131;
	xor.b64  	%rd2133, %rd2132, %rd2066;
	add.s64 	%rd2134, %rd2042, %rd1809;
	add.s64 	%rd2135, %rd2134, %rd79;
	add.s64 	%rd2136, %rd2135, %rd2133;
	add.s64 	%rd2137, %rd2136, %rd2130;
	add.s64 	%rd2138, %rd2137, %rd2053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1439,%dummy}, %rd2125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1440}, %rd2125;
	}
	shf.r.wrap.b32 	%r1441, %r1440, %r1439, 28;
	shf.r.wrap.b32 	%r1442, %r1439, %r1440, 28;
	mov.b64 	%rd2139, {%r1442, %r1441};
	shf.l.wrap.b32 	%r1443, %r1439, %r1440, 30;
	shf.l.wrap.b32 	%r1444, %r1440, %r1439, 30;
	mov.b64 	%rd2140, {%r1444, %r1443};
	xor.b64  	%rd2141, %rd2140, %rd2139;
	shf.l.wrap.b32 	%r1445, %r1439, %r1440, 25;
	shf.l.wrap.b32 	%r1446, %r1440, %r1439, 25;
	mov.b64 	%rd2142, {%r1446, %r1445};
	xor.b64  	%rd2143, %rd2141, %rd2142;
	xor.b64  	%rd2144, %rd2125, %rd2077;
	xor.b64  	%rd2145, %rd2125, %rd2101;
	and.b64  	%rd2146, %rd2145, %rd2144;
	xor.b64  	%rd2147, %rd2146, %rd2125;
	add.s64 	%rd2148, %rd2137, %rd2147;
	add.s64 	%rd2149, %rd2148, %rd2143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd2138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd2138;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 14;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 14;
	mov.b64 	%rd2150, {%r1450, %r1449};
	shf.r.wrap.b32 	%r1451, %r1448, %r1447, 18;
	shf.r.wrap.b32 	%r1452, %r1447, %r1448, 18;
	mov.b64 	%rd2151, {%r1452, %r1451};
	xor.b64  	%rd2152, %rd2151, %rd2150;
	shf.l.wrap.b32 	%r1453, %r1447, %r1448, 23;
	shf.l.wrap.b32 	%r1454, %r1448, %r1447, 23;
	mov.b64 	%rd2153, {%r1454, %r1453};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	xor.b64  	%rd2155, %rd2114, %rd2090;
	and.b64  	%rd2156, %rd2138, %rd2155;
	xor.b64  	%rd2157, %rd2156, %rd2090;
	add.s64 	%rd2158, %rd2066, %rd1822;
	add.s64 	%rd2159, %rd2158, %rd80;
	add.s64 	%rd2160, %rd2159, %rd2157;
	add.s64 	%rd2161, %rd2160, %rd2154;
	add.s64 	%rd2162, %rd2161, %rd2077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1455,%dummy}, %rd2149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1456}, %rd2149;
	}
	shf.r.wrap.b32 	%r1457, %r1456, %r1455, 28;
	shf.r.wrap.b32 	%r1458, %r1455, %r1456, 28;
	mov.b64 	%rd2163, {%r1458, %r1457};
	shf.l.wrap.b32 	%r1459, %r1455, %r1456, 30;
	shf.l.wrap.b32 	%r1460, %r1456, %r1455, 30;
	mov.b64 	%rd2164, {%r1460, %r1459};
	xor.b64  	%rd2165, %rd2164, %rd2163;
	shf.l.wrap.b32 	%r1461, %r1455, %r1456, 25;
	shf.l.wrap.b32 	%r1462, %r1456, %r1455, 25;
	mov.b64 	%rd2166, {%r1462, %r1461};
	xor.b64  	%rd2167, %rd2165, %rd2166;
	xor.b64  	%rd2168, %rd2149, %rd2101;
	xor.b64  	%rd2169, %rd2149, %rd2125;
	and.b64  	%rd2170, %rd2169, %rd2168;
	xor.b64  	%rd2171, %rd2170, %rd2149;
	add.s64 	%rd2172, %rd2161, %rd2171;
	add.s64 	%rd2173, %rd2172, %rd2167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1463,%dummy}, %rd2162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1464}, %rd2162;
	}
	shf.r.wrap.b32 	%r1465, %r1464, %r1463, 14;
	shf.r.wrap.b32 	%r1466, %r1463, %r1464, 14;
	mov.b64 	%rd2174, {%r1466, %r1465};
	shf.r.wrap.b32 	%r1467, %r1464, %r1463, 18;
	shf.r.wrap.b32 	%r1468, %r1463, %r1464, 18;
	mov.b64 	%rd2175, {%r1468, %r1467};
	xor.b64  	%rd2176, %rd2175, %rd2174;
	shf.l.wrap.b32 	%r1469, %r1463, %r1464, 23;
	shf.l.wrap.b32 	%r1470, %r1464, %r1463, 23;
	mov.b64 	%rd2177, {%r1470, %r1469};
	xor.b64  	%rd2178, %rd2176, %rd2177;
	xor.b64  	%rd2179, %rd2138, %rd2114;
	and.b64  	%rd2180, %rd2162, %rd2179;
	xor.b64  	%rd2181, %rd2180, %rd2114;
	add.s64 	%rd2182, %rd2090, %rd1835;
	add.s64 	%rd2183, %rd2182, %rd81;
	add.s64 	%rd2184, %rd2183, %rd2181;
	add.s64 	%rd2185, %rd2184, %rd2178;
	add.s64 	%rd2186, %rd2185, %rd2101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd2173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd2173;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 28;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 28;
	mov.b64 	%rd2187, {%r1474, %r1473};
	shf.l.wrap.b32 	%r1475, %r1471, %r1472, 30;
	shf.l.wrap.b32 	%r1476, %r1472, %r1471, 30;
	mov.b64 	%rd2188, {%r1476, %r1475};
	xor.b64  	%rd2189, %rd2188, %rd2187;
	shf.l.wrap.b32 	%r1477, %r1471, %r1472, 25;
	shf.l.wrap.b32 	%r1478, %r1472, %r1471, 25;
	mov.b64 	%rd2190, {%r1478, %r1477};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	xor.b64  	%rd2192, %rd2173, %rd2125;
	xor.b64  	%rd2193, %rd2173, %rd2149;
	and.b64  	%rd2194, %rd2193, %rd2192;
	xor.b64  	%rd2195, %rd2194, %rd2173;
	add.s64 	%rd2196, %rd2185, %rd2195;
	add.s64 	%rd2197, %rd2196, %rd2191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1479,%dummy}, %rd2186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1480}, %rd2186;
	}
	shf.r.wrap.b32 	%r1481, %r1480, %r1479, 14;
	shf.r.wrap.b32 	%r1482, %r1479, %r1480, 14;
	mov.b64 	%rd2198, {%r1482, %r1481};
	shf.r.wrap.b32 	%r1483, %r1480, %r1479, 18;
	shf.r.wrap.b32 	%r1484, %r1479, %r1480, 18;
	mov.b64 	%rd2199, {%r1484, %r1483};
	xor.b64  	%rd2200, %rd2199, %rd2198;
	shf.l.wrap.b32 	%r1485, %r1479, %r1480, 23;
	shf.l.wrap.b32 	%r1486, %r1480, %r1479, 23;
	mov.b64 	%rd2201, {%r1486, %r1485};
	xor.b64  	%rd2202, %rd2200, %rd2201;
	xor.b64  	%rd2203, %rd2162, %rd2138;
	and.b64  	%rd2204, %rd2186, %rd2203;
	xor.b64  	%rd2205, %rd2204, %rd2138;
	add.s64 	%rd2206, %rd2114, %rd1848;
	add.s64 	%rd2207, %rd2206, %rd82;
	add.s64 	%rd2208, %rd2207, %rd2205;
	add.s64 	%rd2209, %rd2208, %rd2202;
	add.s64 	%rd2210, %rd2209, %rd2125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1487,%dummy}, %rd2197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1488}, %rd2197;
	}
	shf.r.wrap.b32 	%r1489, %r1488, %r1487, 28;
	shf.r.wrap.b32 	%r1490, %r1487, %r1488, 28;
	mov.b64 	%rd2211, {%r1490, %r1489};
	shf.l.wrap.b32 	%r1491, %r1487, %r1488, 30;
	shf.l.wrap.b32 	%r1492, %r1488, %r1487, 30;
	mov.b64 	%rd2212, {%r1492, %r1491};
	xor.b64  	%rd2213, %rd2212, %rd2211;
	shf.l.wrap.b32 	%r1493, %r1487, %r1488, 25;
	shf.l.wrap.b32 	%r1494, %r1488, %r1487, 25;
	mov.b64 	%rd2214, {%r1494, %r1493};
	xor.b64  	%rd2215, %rd2213, %rd2214;
	xor.b64  	%rd2216, %rd2197, %rd2149;
	xor.b64  	%rd2217, %rd2197, %rd2173;
	and.b64  	%rd2218, %rd2217, %rd2216;
	xor.b64  	%rd2219, %rd2218, %rd2197;
	add.s64 	%rd2220, %rd2209, %rd2219;
	add.s64 	%rd2221, %rd2220, %rd2215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd2210;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 14;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 14;
	mov.b64 	%rd2222, {%r1498, %r1497};
	shf.r.wrap.b32 	%r1499, %r1496, %r1495, 18;
	shf.r.wrap.b32 	%r1500, %r1495, %r1496, 18;
	mov.b64 	%rd2223, {%r1500, %r1499};
	xor.b64  	%rd2224, %rd2223, %rd2222;
	shf.l.wrap.b32 	%r1501, %r1495, %r1496, 23;
	shf.l.wrap.b32 	%r1502, %r1496, %r1495, 23;
	mov.b64 	%rd2225, {%r1502, %r1501};
	xor.b64  	%rd2226, %rd2224, %rd2225;
	xor.b64  	%rd2227, %rd2186, %rd2162;
	and.b64  	%rd2228, %rd2210, %rd2227;
	xor.b64  	%rd2229, %rd2228, %rd2162;
	add.s64 	%rd2230, %rd2138, %rd1861;
	add.s64 	%rd2231, %rd2230, %rd83;
	add.s64 	%rd2232, %rd2231, %rd2229;
	add.s64 	%rd2233, %rd2232, %rd2226;
	add.s64 	%rd2234, %rd2233, %rd2149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd2221;
	}
	shf.r.wrap.b32 	%r1505, %r1504, %r1503, 28;
	shf.r.wrap.b32 	%r1506, %r1503, %r1504, 28;
	mov.b64 	%rd2235, {%r1506, %r1505};
	shf.l.wrap.b32 	%r1507, %r1503, %r1504, 30;
	shf.l.wrap.b32 	%r1508, %r1504, %r1503, 30;
	mov.b64 	%rd2236, {%r1508, %r1507};
	xor.b64  	%rd2237, %rd2236, %rd2235;
	shf.l.wrap.b32 	%r1509, %r1503, %r1504, 25;
	shf.l.wrap.b32 	%r1510, %r1504, %r1503, 25;
	mov.b64 	%rd2238, {%r1510, %r1509};
	xor.b64  	%rd2239, %rd2237, %rd2238;
	xor.b64  	%rd2240, %rd2221, %rd2173;
	xor.b64  	%rd2241, %rd2221, %rd2197;
	and.b64  	%rd2242, %rd2241, %rd2240;
	xor.b64  	%rd2243, %rd2242, %rd2221;
	add.s64 	%rd2244, %rd2233, %rd2243;
	add.s64 	%rd2245, %rd2244, %rd2239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd1848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd1848;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 19;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 19;
	mov.b64 	%rd2246, {%r1514, %r1513};
	shf.l.wrap.b32 	%r1515, %r1511, %r1512, 3;
	shf.l.wrap.b32 	%r1516, %r1512, %r1511, 3;
	mov.b64 	%rd2247, {%r1516, %r1515};
	shr.u64 	%rd2248, %rd1848, 6;
	xor.b64  	%rd2249, %rd2246, %rd2248;
	xor.b64  	%rd2250, %rd2249, %rd2247;
	shf.r.wrap.b32 	%r1517, %r1126, %r1125, 1;
	shf.r.wrap.b32 	%r1518, %r1125, %r1126, 1;
	mov.b64 	%rd2251, {%r1518, %r1517};
	shf.r.wrap.b32 	%r1519, %r1126, %r1125, 8;
	shf.r.wrap.b32 	%r1520, %r1125, %r1126, 8;
	mov.b64 	%rd2252, {%r1520, %r1519};
	shr.u64 	%rd2253, %rd1679, 7;
	xor.b64  	%rd2254, %rd2251, %rd2253;
	xor.b64  	%rd2255, %rd2254, %rd2252;
	add.s64 	%rd2256, %rd1783, %rd1666;
	add.s64 	%rd2257, %rd2256, %rd2250;
	add.s64 	%rd2258, %rd2257, %rd2255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd1861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1522}, %rd1861;
	}
	shf.r.wrap.b32 	%r1523, %r1522, %r1521, 19;
	shf.r.wrap.b32 	%r1524, %r1521, %r1522, 19;
	mov.b64 	%rd2259, {%r1524, %r1523};
	shf.l.wrap.b32 	%r1525, %r1521, %r1522, 3;
	shf.l.wrap.b32 	%r1526, %r1522, %r1521, 3;
	mov.b64 	%rd2260, {%r1526, %r1525};
	shr.u64 	%rd2261, %rd1861, 6;
	xor.b64  	%rd2262, %rd2259, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd2260;
	shf.r.wrap.b32 	%r1527, %r1136, %r1135, 1;
	shf.r.wrap.b32 	%r1528, %r1135, %r1136, 1;
	mov.b64 	%rd2264, {%r1528, %r1527};
	shf.r.wrap.b32 	%r1529, %r1136, %r1135, 8;
	shf.r.wrap.b32 	%r1530, %r1135, %r1136, 8;
	mov.b64 	%rd2265, {%r1530, %r1529};
	shr.u64 	%rd2266, %rd1692, 7;
	xor.b64  	%rd2267, %rd2264, %rd2266;
	xor.b64  	%rd2268, %rd2267, %rd2265;
	add.s64 	%rd2269, %rd1796, %rd1679;
	add.s64 	%rd2270, %rd2269, %rd2263;
	add.s64 	%rd2271, %rd2270, %rd2268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1531,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1532}, %rd2258;
	}
	shf.r.wrap.b32 	%r1533, %r1532, %r1531, 19;
	shf.r.wrap.b32 	%r1534, %r1531, %r1532, 19;
	mov.b64 	%rd2272, {%r1534, %r1533};
	shf.l.wrap.b32 	%r1535, %r1531, %r1532, 3;
	shf.l.wrap.b32 	%r1536, %r1532, %r1531, 3;
	mov.b64 	%rd2273, {%r1536, %r1535};
	shr.u64 	%rd2274, %rd2258, 6;
	xor.b64  	%rd2275, %rd2272, %rd2274;
	xor.b64  	%rd2276, %rd2275, %rd2273;
	shf.r.wrap.b32 	%r1537, %r1146, %r1145, 1;
	shf.r.wrap.b32 	%r1538, %r1145, %r1146, 1;
	mov.b64 	%rd2277, {%r1538, %r1537};
	shf.r.wrap.b32 	%r1539, %r1146, %r1145, 8;
	shf.r.wrap.b32 	%r1540, %r1145, %r1146, 8;
	mov.b64 	%rd2278, {%r1540, %r1539};
	shr.u64 	%rd2279, %rd1705, 7;
	xor.b64  	%rd2280, %rd2277, %rd2279;
	xor.b64  	%rd2281, %rd2280, %rd2278;
	add.s64 	%rd2282, %rd1809, %rd1692;
	add.s64 	%rd2283, %rd2282, %rd2276;
	add.s64 	%rd2284, %rd2283, %rd2281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1541,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1542}, %rd2271;
	}
	shf.r.wrap.b32 	%r1543, %r1542, %r1541, 19;
	shf.r.wrap.b32 	%r1544, %r1541, %r1542, 19;
	mov.b64 	%rd2285, {%r1544, %r1543};
	shf.l.wrap.b32 	%r1545, %r1541, %r1542, 3;
	shf.l.wrap.b32 	%r1546, %r1542, %r1541, 3;
	mov.b64 	%rd2286, {%r1546, %r1545};
	shr.u64 	%rd2287, %rd2271, 6;
	xor.b64  	%rd2288, %rd2285, %rd2287;
	xor.b64  	%rd2289, %rd2288, %rd2286;
	shf.r.wrap.b32 	%r1547, %r1156, %r1155, 1;
	shf.r.wrap.b32 	%r1548, %r1155, %r1156, 1;
	mov.b64 	%rd2290, {%r1548, %r1547};
	shf.r.wrap.b32 	%r1549, %r1156, %r1155, 8;
	shf.r.wrap.b32 	%r1550, %r1155, %r1156, 8;
	mov.b64 	%rd2291, {%r1550, %r1549};
	shr.u64 	%rd2292, %rd1718, 7;
	xor.b64  	%rd2293, %rd2290, %rd2292;
	xor.b64  	%rd2294, %rd2293, %rd2291;
	add.s64 	%rd2295, %rd1822, %rd1705;
	add.s64 	%rd2296, %rd2295, %rd2289;
	add.s64 	%rd2297, %rd2296, %rd2294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1551,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1552}, %rd2284;
	}
	shf.r.wrap.b32 	%r1553, %r1552, %r1551, 19;
	shf.r.wrap.b32 	%r1554, %r1551, %r1552, 19;
	mov.b64 	%rd2298, {%r1554, %r1553};
	shf.l.wrap.b32 	%r1555, %r1551, %r1552, 3;
	shf.l.wrap.b32 	%r1556, %r1552, %r1551, 3;
	mov.b64 	%rd2299, {%r1556, %r1555};
	shr.u64 	%rd2300, %rd2284, 6;
	xor.b64  	%rd2301, %rd2298, %rd2300;
	xor.b64  	%rd2302, %rd2301, %rd2299;
	shf.r.wrap.b32 	%r1557, %r1166, %r1165, 1;
	shf.r.wrap.b32 	%r1558, %r1165, %r1166, 1;
	mov.b64 	%rd2303, {%r1558, %r1557};
	shf.r.wrap.b32 	%r1559, %r1166, %r1165, 8;
	shf.r.wrap.b32 	%r1560, %r1165, %r1166, 8;
	mov.b64 	%rd2304, {%r1560, %r1559};
	shr.u64 	%rd2305, %rd1731, 7;
	xor.b64  	%rd2306, %rd2303, %rd2305;
	xor.b64  	%rd2307, %rd2306, %rd2304;
	add.s64 	%rd2308, %rd1835, %rd1718;
	add.s64 	%rd2309, %rd2308, %rd2302;
	add.s64 	%rd2310, %rd2309, %rd2307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1561,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1562}, %rd2297;
	}
	shf.r.wrap.b32 	%r1563, %r1562, %r1561, 19;
	shf.r.wrap.b32 	%r1564, %r1561, %r1562, 19;
	mov.b64 	%rd2311, {%r1564, %r1563};
	shf.l.wrap.b32 	%r1565, %r1561, %r1562, 3;
	shf.l.wrap.b32 	%r1566, %r1562, %r1561, 3;
	mov.b64 	%rd2312, {%r1566, %r1565};
	shr.u64 	%rd2313, %rd2297, 6;
	xor.b64  	%rd2314, %rd2311, %rd2313;
	xor.b64  	%rd2315, %rd2314, %rd2312;
	shf.r.wrap.b32 	%r1567, %r1176, %r1175, 1;
	shf.r.wrap.b32 	%r1568, %r1175, %r1176, 1;
	mov.b64 	%rd2316, {%r1568, %r1567};
	shf.r.wrap.b32 	%r1569, %r1176, %r1175, 8;
	shf.r.wrap.b32 	%r1570, %r1175, %r1176, 8;
	mov.b64 	%rd2317, {%r1570, %r1569};
	shr.u64 	%rd2318, %rd1744, 7;
	xor.b64  	%rd2319, %rd2316, %rd2318;
	xor.b64  	%rd2320, %rd2319, %rd2317;
	add.s64 	%rd2321, %rd1848, %rd1731;
	add.s64 	%rd2322, %rd2321, %rd2315;
	add.s64 	%rd2323, %rd2322, %rd2320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1571,%dummy}, %rd2310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1572}, %rd2310;
	}
	shf.r.wrap.b32 	%r1573, %r1572, %r1571, 19;
	shf.r.wrap.b32 	%r1574, %r1571, %r1572, 19;
	mov.b64 	%rd2324, {%r1574, %r1573};
	shf.l.wrap.b32 	%r1575, %r1571, %r1572, 3;
	shf.l.wrap.b32 	%r1576, %r1572, %r1571, 3;
	mov.b64 	%rd2325, {%r1576, %r1575};
	shr.u64 	%rd2326, %rd2310, 6;
	xor.b64  	%rd2327, %rd2324, %rd2326;
	xor.b64  	%rd2328, %rd2327, %rd2325;
	shf.r.wrap.b32 	%r1577, %r1186, %r1185, 1;
	shf.r.wrap.b32 	%r1578, %r1185, %r1186, 1;
	mov.b64 	%rd2329, {%r1578, %r1577};
	shf.r.wrap.b32 	%r1579, %r1186, %r1185, 8;
	shf.r.wrap.b32 	%r1580, %r1185, %r1186, 8;
	mov.b64 	%rd2330, {%r1580, %r1579};
	shr.u64 	%rd2331, %rd1757, 7;
	xor.b64  	%rd2332, %rd2329, %rd2331;
	xor.b64  	%rd2333, %rd2332, %rd2330;
	add.s64 	%rd2334, %rd1861, %rd1744;
	add.s64 	%rd2335, %rd2334, %rd2328;
	add.s64 	%rd2336, %rd2335, %rd2333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1582}, %rd2323;
	}
	shf.r.wrap.b32 	%r1583, %r1582, %r1581, 19;
	shf.r.wrap.b32 	%r1584, %r1581, %r1582, 19;
	mov.b64 	%rd2337, {%r1584, %r1583};
	shf.l.wrap.b32 	%r1585, %r1581, %r1582, 3;
	shf.l.wrap.b32 	%r1586, %r1582, %r1581, 3;
	mov.b64 	%rd2338, {%r1586, %r1585};
	shr.u64 	%rd2339, %rd2323, 6;
	xor.b64  	%rd2340, %rd2337, %rd2339;
	xor.b64  	%rd2341, %rd2340, %rd2338;
	shf.r.wrap.b32 	%r1587, %r1196, %r1195, 1;
	shf.r.wrap.b32 	%r1588, %r1195, %r1196, 1;
	mov.b64 	%rd2342, {%r1588, %r1587};
	shf.r.wrap.b32 	%r1589, %r1196, %r1195, 8;
	shf.r.wrap.b32 	%r1590, %r1195, %r1196, 8;
	mov.b64 	%rd2343, {%r1590, %r1589};
	shr.u64 	%rd2344, %rd1770, 7;
	xor.b64  	%rd2345, %rd2342, %rd2344;
	xor.b64  	%rd2346, %rd2345, %rd2343;
	add.s64 	%rd2347, %rd2258, %rd1757;
	add.s64 	%rd2348, %rd2347, %rd2341;
	add.s64 	%rd2349, %rd2348, %rd2346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1591,%dummy}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1592}, %rd2336;
	}
	shf.r.wrap.b32 	%r1593, %r1592, %r1591, 19;
	shf.r.wrap.b32 	%r1594, %r1591, %r1592, 19;
	mov.b64 	%rd2350, {%r1594, %r1593};
	shf.l.wrap.b32 	%r1595, %r1591, %r1592, 3;
	shf.l.wrap.b32 	%r1596, %r1592, %r1591, 3;
	mov.b64 	%rd2351, {%r1596, %r1595};
	shr.u64 	%rd2352, %rd2336, 6;
	xor.b64  	%rd2353, %rd2350, %rd2352;
	xor.b64  	%rd2354, %rd2353, %rd2351;
	shf.r.wrap.b32 	%r1597, %r1206, %r1205, 1;
	shf.r.wrap.b32 	%r1598, %r1205, %r1206, 1;
	mov.b64 	%rd2355, {%r1598, %r1597};
	shf.r.wrap.b32 	%r1599, %r1206, %r1205, 8;
	shf.r.wrap.b32 	%r1600, %r1205, %r1206, 8;
	mov.b64 	%rd2356, {%r1600, %r1599};
	shr.u64 	%rd2357, %rd1783, 7;
	xor.b64  	%rd2358, %rd2355, %rd2357;
	xor.b64  	%rd2359, %rd2358, %rd2356;
	add.s64 	%rd2360, %rd2271, %rd1770;
	add.s64 	%rd2361, %rd2360, %rd2354;
	add.s64 	%rd2362, %rd2361, %rd2359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1601,%dummy}, %rd2349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1602}, %rd2349;
	}
	shf.r.wrap.b32 	%r1603, %r1602, %r1601, 19;
	shf.r.wrap.b32 	%r1604, %r1601, %r1602, 19;
	mov.b64 	%rd2363, {%r1604, %r1603};
	shf.l.wrap.b32 	%r1605, %r1601, %r1602, 3;
	shf.l.wrap.b32 	%r1606, %r1602, %r1601, 3;
	mov.b64 	%rd2364, {%r1606, %r1605};
	shr.u64 	%rd2365, %rd2349, 6;
	xor.b64  	%rd2366, %rd2363, %rd2365;
	xor.b64  	%rd2367, %rd2366, %rd2364;
	shf.r.wrap.b32 	%r1607, %r1216, %r1215, 1;
	shf.r.wrap.b32 	%r1608, %r1215, %r1216, 1;
	mov.b64 	%rd2368, {%r1608, %r1607};
	shf.r.wrap.b32 	%r1609, %r1216, %r1215, 8;
	shf.r.wrap.b32 	%r1610, %r1215, %r1216, 8;
	mov.b64 	%rd2369, {%r1610, %r1609};
	shr.u64 	%rd2370, %rd1796, 7;
	xor.b64  	%rd2371, %rd2368, %rd2370;
	xor.b64  	%rd2372, %rd2371, %rd2369;
	add.s64 	%rd2373, %rd2284, %rd1783;
	add.s64 	%rd2374, %rd2373, %rd2367;
	add.s64 	%rd2375, %rd2374, %rd2372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1611,%dummy}, %rd2362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1612}, %rd2362;
	}
	shf.r.wrap.b32 	%r1613, %r1612, %r1611, 19;
	shf.r.wrap.b32 	%r1614, %r1611, %r1612, 19;
	mov.b64 	%rd2376, {%r1614, %r1613};
	shf.l.wrap.b32 	%r1615, %r1611, %r1612, 3;
	shf.l.wrap.b32 	%r1616, %r1612, %r1611, 3;
	mov.b64 	%rd2377, {%r1616, %r1615};
	shr.u64 	%rd2378, %rd2362, 6;
	xor.b64  	%rd2379, %rd2376, %rd2378;
	xor.b64  	%rd2380, %rd2379, %rd2377;
	shf.r.wrap.b32 	%r1617, %r1226, %r1225, 1;
	shf.r.wrap.b32 	%r1618, %r1225, %r1226, 1;
	mov.b64 	%rd2381, {%r1618, %r1617};
	shf.r.wrap.b32 	%r1619, %r1226, %r1225, 8;
	shf.r.wrap.b32 	%r1620, %r1225, %r1226, 8;
	mov.b64 	%rd2382, {%r1620, %r1619};
	shr.u64 	%rd2383, %rd1809, 7;
	xor.b64  	%rd2384, %rd2381, %rd2383;
	xor.b64  	%rd2385, %rd2384, %rd2382;
	add.s64 	%rd2386, %rd2297, %rd1796;
	add.s64 	%rd2387, %rd2386, %rd2380;
	add.s64 	%rd2388, %rd2387, %rd2385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1621,%dummy}, %rd2375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1622}, %rd2375;
	}
	shf.r.wrap.b32 	%r1623, %r1622, %r1621, 19;
	shf.r.wrap.b32 	%r1624, %r1621, %r1622, 19;
	mov.b64 	%rd2389, {%r1624, %r1623};
	shf.l.wrap.b32 	%r1625, %r1621, %r1622, 3;
	shf.l.wrap.b32 	%r1626, %r1622, %r1621, 3;
	mov.b64 	%rd2390, {%r1626, %r1625};
	shr.u64 	%rd2391, %rd2375, 6;
	xor.b64  	%rd2392, %rd2389, %rd2391;
	xor.b64  	%rd2393, %rd2392, %rd2390;
	shf.r.wrap.b32 	%r1627, %r1236, %r1235, 1;
	shf.r.wrap.b32 	%r1628, %r1235, %r1236, 1;
	mov.b64 	%rd2394, {%r1628, %r1627};
	shf.r.wrap.b32 	%r1629, %r1236, %r1235, 8;
	shf.r.wrap.b32 	%r1630, %r1235, %r1236, 8;
	mov.b64 	%rd2395, {%r1630, %r1629};
	shr.u64 	%rd2396, %rd1822, 7;
	xor.b64  	%rd2397, %rd2394, %rd2396;
	xor.b64  	%rd2398, %rd2397, %rd2395;
	add.s64 	%rd2399, %rd2310, %rd1809;
	add.s64 	%rd2400, %rd2399, %rd2393;
	add.s64 	%rd2401, %rd2400, %rd2398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1631,%dummy}, %rd2388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1632}, %rd2388;
	}
	shf.r.wrap.b32 	%r1633, %r1632, %r1631, 19;
	shf.r.wrap.b32 	%r1634, %r1631, %r1632, 19;
	mov.b64 	%rd2402, {%r1634, %r1633};
	shf.l.wrap.b32 	%r1635, %r1631, %r1632, 3;
	shf.l.wrap.b32 	%r1636, %r1632, %r1631, 3;
	mov.b64 	%rd2403, {%r1636, %r1635};
	shr.u64 	%rd2404, %rd2388, 6;
	xor.b64  	%rd2405, %rd2402, %rd2404;
	xor.b64  	%rd2406, %rd2405, %rd2403;
	shf.r.wrap.b32 	%r1637, %r1246, %r1245, 1;
	shf.r.wrap.b32 	%r1638, %r1245, %r1246, 1;
	mov.b64 	%rd2407, {%r1638, %r1637};
	shf.r.wrap.b32 	%r1639, %r1246, %r1245, 8;
	shf.r.wrap.b32 	%r1640, %r1245, %r1246, 8;
	mov.b64 	%rd2408, {%r1640, %r1639};
	shr.u64 	%rd2409, %rd1835, 7;
	xor.b64  	%rd2410, %rd2407, %rd2409;
	xor.b64  	%rd2411, %rd2410, %rd2408;
	add.s64 	%rd2412, %rd2323, %rd1822;
	add.s64 	%rd2413, %rd2412, %rd2406;
	add.s64 	%rd2414, %rd2413, %rd2411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1641,%dummy}, %rd2401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1642}, %rd2401;
	}
	shf.r.wrap.b32 	%r1643, %r1642, %r1641, 19;
	shf.r.wrap.b32 	%r1644, %r1641, %r1642, 19;
	mov.b64 	%rd2415, {%r1644, %r1643};
	shf.l.wrap.b32 	%r1645, %r1641, %r1642, 3;
	shf.l.wrap.b32 	%r1646, %r1642, %r1641, 3;
	mov.b64 	%rd2416, {%r1646, %r1645};
	shr.u64 	%rd2417, %rd2401, 6;
	xor.b64  	%rd2418, %rd2415, %rd2417;
	xor.b64  	%rd2419, %rd2418, %rd2416;
	shf.r.wrap.b32 	%r1647, %r1512, %r1511, 1;
	shf.r.wrap.b32 	%r1648, %r1511, %r1512, 1;
	mov.b64 	%rd2420, {%r1648, %r1647};
	shf.r.wrap.b32 	%r1649, %r1512, %r1511, 8;
	shf.r.wrap.b32 	%r1650, %r1511, %r1512, 8;
	mov.b64 	%rd2421, {%r1650, %r1649};
	shr.u64 	%rd2422, %rd1848, 7;
	xor.b64  	%rd2423, %rd2420, %rd2422;
	xor.b64  	%rd2424, %rd2423, %rd2421;
	add.s64 	%rd2425, %rd2336, %rd1835;
	add.s64 	%rd2426, %rd2425, %rd2419;
	add.s64 	%rd2427, %rd2426, %rd2424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1651,%dummy}, %rd2414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1652}, %rd2414;
	}
	shf.r.wrap.b32 	%r1653, %r1652, %r1651, 19;
	shf.r.wrap.b32 	%r1654, %r1651, %r1652, 19;
	mov.b64 	%rd2428, {%r1654, %r1653};
	shf.l.wrap.b32 	%r1655, %r1651, %r1652, 3;
	shf.l.wrap.b32 	%r1656, %r1652, %r1651, 3;
	mov.b64 	%rd2429, {%r1656, %r1655};
	shr.u64 	%rd2430, %rd2414, 6;
	xor.b64  	%rd2431, %rd2428, %rd2430;
	xor.b64  	%rd2432, %rd2431, %rd2429;
	shf.r.wrap.b32 	%r1657, %r1522, %r1521, 1;
	shf.r.wrap.b32 	%r1658, %r1521, %r1522, 1;
	mov.b64 	%rd2433, {%r1658, %r1657};
	shf.r.wrap.b32 	%r1659, %r1522, %r1521, 8;
	shf.r.wrap.b32 	%r1660, %r1521, %r1522, 8;
	mov.b64 	%rd2434, {%r1660, %r1659};
	shr.u64 	%rd2435, %rd1861, 7;
	xor.b64  	%rd2436, %rd2433, %rd2435;
	xor.b64  	%rd2437, %rd2436, %rd2434;
	add.s64 	%rd2438, %rd2349, %rd1848;
	add.s64 	%rd2439, %rd2438, %rd2432;
	add.s64 	%rd2440, %rd2439, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1661,%dummy}, %rd2427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1662}, %rd2427;
	}
	shf.r.wrap.b32 	%r1663, %r1662, %r1661, 19;
	shf.r.wrap.b32 	%r1664, %r1661, %r1662, 19;
	mov.b64 	%rd2441, {%r1664, %r1663};
	shf.l.wrap.b32 	%r1665, %r1661, %r1662, 3;
	shf.l.wrap.b32 	%r1666, %r1662, %r1661, 3;
	mov.b64 	%rd2442, {%r1666, %r1665};
	shr.u64 	%rd2443, %rd2427, 6;
	xor.b64  	%rd2444, %rd2441, %rd2443;
	xor.b64  	%rd2445, %rd2444, %rd2442;
	shf.r.wrap.b32 	%r1667, %r1532, %r1531, 1;
	shf.r.wrap.b32 	%r1668, %r1531, %r1532, 1;
	mov.b64 	%rd2446, {%r1668, %r1667};
	shf.r.wrap.b32 	%r1669, %r1532, %r1531, 8;
	shf.r.wrap.b32 	%r1670, %r1531, %r1532, 8;
	mov.b64 	%rd2447, {%r1670, %r1669};
	shr.u64 	%rd2448, %rd2258, 7;
	xor.b64  	%rd2449, %rd2446, %rd2448;
	xor.b64  	%rd2450, %rd2449, %rd2447;
	add.s64 	%rd2451, %rd2362, %rd1861;
	add.s64 	%rd2452, %rd2451, %rd2445;
	add.s64 	%rd2453, %rd2452, %rd2450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1671,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1672}, %rd2234;
	}
	shf.r.wrap.b32 	%r1673, %r1672, %r1671, 14;
	shf.r.wrap.b32 	%r1674, %r1671, %r1672, 14;
	mov.b64 	%rd2454, {%r1674, %r1673};
	shf.r.wrap.b32 	%r1675, %r1672, %r1671, 18;
	shf.r.wrap.b32 	%r1676, %r1671, %r1672, 18;
	mov.b64 	%rd2455, {%r1676, %r1675};
	xor.b64  	%rd2456, %rd2455, %rd2454;
	shf.l.wrap.b32 	%r1677, %r1671, %r1672, 23;
	shf.l.wrap.b32 	%r1678, %r1672, %r1671, 23;
	mov.b64 	%rd2457, {%r1678, %r1677};
	xor.b64  	%rd2458, %rd2456, %rd2457;
	xor.b64  	%rd2459, %rd2210, %rd2186;
	and.b64  	%rd2460, %rd2459, %rd2234;
	xor.b64  	%rd2461, %rd2460, %rd2186;
	add.s64 	%rd2462, %rd2461, %rd2162;
	add.s64 	%rd2463, %rd2462, %rd2258;
	add.s64 	%rd2464, %rd2463, %rd84;
	add.s64 	%rd2465, %rd2464, %rd2458;
	add.s64 	%rd2466, %rd2465, %rd2173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd2245;
	}
	shf.r.wrap.b32 	%r1681, %r1680, %r1679, 28;
	shf.r.wrap.b32 	%r1682, %r1679, %r1680, 28;
	mov.b64 	%rd2467, {%r1682, %r1681};
	shf.l.wrap.b32 	%r1683, %r1679, %r1680, 30;
	shf.l.wrap.b32 	%r1684, %r1680, %r1679, 30;
	mov.b64 	%rd2468, {%r1684, %r1683};
	xor.b64  	%rd2469, %rd2468, %rd2467;
	shf.l.wrap.b32 	%r1685, %r1679, %r1680, 25;
	shf.l.wrap.b32 	%r1686, %r1680, %r1679, 25;
	mov.b64 	%rd2470, {%r1686, %r1685};
	xor.b64  	%rd2471, %rd2469, %rd2470;
	xor.b64  	%rd2472, %rd2245, %rd2197;
	xor.b64  	%rd2473, %rd2245, %rd2221;
	and.b64  	%rd2474, %rd2473, %rd2472;
	xor.b64  	%rd2475, %rd2474, %rd2245;
	add.s64 	%rd2476, %rd2465, %rd2475;
	add.s64 	%rd2477, %rd2476, %rd2471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1687,%dummy}, %rd2466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1688}, %rd2466;
	}
	shf.r.wrap.b32 	%r1689, %r1688, %r1687, 14;
	shf.r.wrap.b32 	%r1690, %r1687, %r1688, 14;
	mov.b64 	%rd2478, {%r1690, %r1689};
	shf.r.wrap.b32 	%r1691, %r1688, %r1687, 18;
	shf.r.wrap.b32 	%r1692, %r1687, %r1688, 18;
	mov.b64 	%rd2479, {%r1692, %r1691};
	xor.b64  	%rd2480, %rd2479, %rd2478;
	shf.l.wrap.b32 	%r1693, %r1687, %r1688, 23;
	shf.l.wrap.b32 	%r1694, %r1688, %r1687, 23;
	mov.b64 	%rd2481, {%r1694, %r1693};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	xor.b64  	%rd2483, %rd2234, %rd2210;
	and.b64  	%rd2484, %rd2466, %rd2483;
	xor.b64  	%rd2485, %rd2484, %rd2210;
	add.s64 	%rd2486, %rd2271, %rd2186;
	add.s64 	%rd2487, %rd2486, %rd85;
	add.s64 	%rd2488, %rd2487, %rd2485;
	add.s64 	%rd2489, %rd2488, %rd2482;
	add.s64 	%rd2490, %rd2489, %rd2197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd2477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd2477;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 28;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 28;
	mov.b64 	%rd2491, {%r1698, %r1697};
	shf.l.wrap.b32 	%r1699, %r1695, %r1696, 30;
	shf.l.wrap.b32 	%r1700, %r1696, %r1695, 30;
	mov.b64 	%rd2492, {%r1700, %r1699};
	xor.b64  	%rd2493, %rd2492, %rd2491;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 25;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 25;
	mov.b64 	%rd2494, {%r1702, %r1701};
	xor.b64  	%rd2495, %rd2493, %rd2494;
	xor.b64  	%rd2496, %rd2477, %rd2221;
	xor.b64  	%rd2497, %rd2477, %rd2245;
	and.b64  	%rd2498, %rd2497, %rd2496;
	xor.b64  	%rd2499, %rd2498, %rd2477;
	add.s64 	%rd2500, %rd2489, %rd2499;
	add.s64 	%rd2501, %rd2500, %rd2495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd2490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd2490;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 14;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 14;
	mov.b64 	%rd2502, {%r1706, %r1705};
	shf.r.wrap.b32 	%r1707, %r1704, %r1703, 18;
	shf.r.wrap.b32 	%r1708, %r1703, %r1704, 18;
	mov.b64 	%rd2503, {%r1708, %r1707};
	xor.b64  	%rd2504, %rd2503, %rd2502;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 23;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 23;
	mov.b64 	%rd2505, {%r1710, %r1709};
	xor.b64  	%rd2506, %rd2504, %rd2505;
	xor.b64  	%rd2507, %rd2466, %rd2234;
	and.b64  	%rd2508, %rd2490, %rd2507;
	xor.b64  	%rd2509, %rd2508, %rd2234;
	add.s64 	%rd2510, %rd2284, %rd2210;
	add.s64 	%rd2511, %rd2510, %rd86;
	add.s64 	%rd2512, %rd2511, %rd2509;
	add.s64 	%rd2513, %rd2512, %rd2506;
	add.s64 	%rd2514, %rd2513, %rd2221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2501;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 28;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 28;
	mov.b64 	%rd2515, {%r1714, %r1713};
	shf.l.wrap.b32 	%r1715, %r1711, %r1712, 30;
	shf.l.wrap.b32 	%r1716, %r1712, %r1711, 30;
	mov.b64 	%rd2516, {%r1716, %r1715};
	xor.b64  	%rd2517, %rd2516, %rd2515;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 25;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 25;
	mov.b64 	%rd2518, {%r1718, %r1717};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	xor.b64  	%rd2520, %rd2501, %rd2245;
	xor.b64  	%rd2521, %rd2501, %rd2477;
	and.b64  	%rd2522, %rd2521, %rd2520;
	xor.b64  	%rd2523, %rd2522, %rd2501;
	add.s64 	%rd2524, %rd2513, %rd2523;
	add.s64 	%rd2525, %rd2524, %rd2519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2514;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 14;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 14;
	mov.b64 	%rd2526, {%r1722, %r1721};
	shf.r.wrap.b32 	%r1723, %r1720, %r1719, 18;
	shf.r.wrap.b32 	%r1724, %r1719, %r1720, 18;
	mov.b64 	%rd2527, {%r1724, %r1723};
	xor.b64  	%rd2528, %rd2527, %rd2526;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 23;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 23;
	mov.b64 	%rd2529, {%r1726, %r1725};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	xor.b64  	%rd2531, %rd2490, %rd2466;
	and.b64  	%rd2532, %rd2514, %rd2531;
	xor.b64  	%rd2533, %rd2532, %rd2466;
	add.s64 	%rd2534, %rd2297, %rd2234;
	add.s64 	%rd2535, %rd2534, %rd87;
	add.s64 	%rd2536, %rd2535, %rd2533;
	add.s64 	%rd2537, %rd2536, %rd2530;
	add.s64 	%rd2538, %rd2537, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2525;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 28;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 28;
	mov.b64 	%rd2539, {%r1730, %r1729};
	shf.l.wrap.b32 	%r1731, %r1727, %r1728, 30;
	shf.l.wrap.b32 	%r1732, %r1728, %r1727, 30;
	mov.b64 	%rd2540, {%r1732, %r1731};
	xor.b64  	%rd2541, %rd2540, %rd2539;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 25;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 25;
	mov.b64 	%rd2542, {%r1734, %r1733};
	xor.b64  	%rd2543, %rd2541, %rd2542;
	xor.b64  	%rd2544, %rd2525, %rd2477;
	xor.b64  	%rd2545, %rd2525, %rd2501;
	and.b64  	%rd2546, %rd2545, %rd2544;
	xor.b64  	%rd2547, %rd2546, %rd2525;
	add.s64 	%rd2548, %rd2537, %rd2547;
	add.s64 	%rd2549, %rd2548, %rd2543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd2538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd2538;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 14;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 14;
	mov.b64 	%rd2550, {%r1738, %r1737};
	shf.r.wrap.b32 	%r1739, %r1736, %r1735, 18;
	shf.r.wrap.b32 	%r1740, %r1735, %r1736, 18;
	mov.b64 	%rd2551, {%r1740, %r1739};
	xor.b64  	%rd2552, %rd2551, %rd2550;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 23;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 23;
	mov.b64 	%rd2553, {%r1742, %r1741};
	xor.b64  	%rd2554, %rd2552, %rd2553;
	xor.b64  	%rd2555, %rd2514, %rd2490;
	and.b64  	%rd2556, %rd2538, %rd2555;
	xor.b64  	%rd2557, %rd2556, %rd2490;
	add.s64 	%rd2558, %rd2466, %rd2310;
	add.s64 	%rd2559, %rd2558, %rd88;
	add.s64 	%rd2560, %rd2559, %rd2557;
	add.s64 	%rd2561, %rd2560, %rd2554;
	add.s64 	%rd2562, %rd2561, %rd2477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd2549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd2549;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 28;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 28;
	mov.b64 	%rd2563, {%r1746, %r1745};
	shf.l.wrap.b32 	%r1747, %r1743, %r1744, 30;
	shf.l.wrap.b32 	%r1748, %r1744, %r1743, 30;
	mov.b64 	%rd2564, {%r1748, %r1747};
	xor.b64  	%rd2565, %rd2564, %rd2563;
	shf.l.wrap.b32 	%r1749, %r1743, %r1744, 25;
	shf.l.wrap.b32 	%r1750, %r1744, %r1743, 25;
	mov.b64 	%rd2566, {%r1750, %r1749};
	xor.b64  	%rd2567, %rd2565, %rd2566;
	xor.b64  	%rd2568, %rd2549, %rd2501;
	xor.b64  	%rd2569, %rd2549, %rd2525;
	and.b64  	%rd2570, %rd2569, %rd2568;
	xor.b64  	%rd2571, %rd2570, %rd2549;
	add.s64 	%rd2572, %rd2561, %rd2571;
	add.s64 	%rd2573, %rd2572, %rd2567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd2562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd2562;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 14;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 14;
	mov.b64 	%rd2574, {%r1754, %r1753};
	shf.r.wrap.b32 	%r1755, %r1752, %r1751, 18;
	shf.r.wrap.b32 	%r1756, %r1751, %r1752, 18;
	mov.b64 	%rd2575, {%r1756, %r1755};
	xor.b64  	%rd2576, %rd2575, %rd2574;
	shf.l.wrap.b32 	%r1757, %r1751, %r1752, 23;
	shf.l.wrap.b32 	%r1758, %r1752, %r1751, 23;
	mov.b64 	%rd2577, {%r1758, %r1757};
	xor.b64  	%rd2578, %rd2576, %rd2577;
	xor.b64  	%rd2579, %rd2538, %rd2514;
	and.b64  	%rd2580, %rd2562, %rd2579;
	xor.b64  	%rd2581, %rd2580, %rd2514;
	add.s64 	%rd2582, %rd2490, %rd2323;
	add.s64 	%rd2583, %rd2582, %rd89;
	add.s64 	%rd2584, %rd2583, %rd2581;
	add.s64 	%rd2585, %rd2584, %rd2578;
	add.s64 	%rd2586, %rd2585, %rd2501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd2573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd2573;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 28;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 28;
	mov.b64 	%rd2587, {%r1762, %r1761};
	shf.l.wrap.b32 	%r1763, %r1759, %r1760, 30;
	shf.l.wrap.b32 	%r1764, %r1760, %r1759, 30;
	mov.b64 	%rd2588, {%r1764, %r1763};
	xor.b64  	%rd2589, %rd2588, %rd2587;
	shf.l.wrap.b32 	%r1765, %r1759, %r1760, 25;
	shf.l.wrap.b32 	%r1766, %r1760, %r1759, 25;
	mov.b64 	%rd2590, {%r1766, %r1765};
	xor.b64  	%rd2591, %rd2589, %rd2590;
	xor.b64  	%rd2592, %rd2573, %rd2525;
	xor.b64  	%rd2593, %rd2573, %rd2549;
	and.b64  	%rd2594, %rd2593, %rd2592;
	xor.b64  	%rd2595, %rd2594, %rd2573;
	add.s64 	%rd2596, %rd2585, %rd2595;
	add.s64 	%rd2597, %rd2596, %rd2591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1767,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1768}, %rd2586;
	}
	shf.r.wrap.b32 	%r1769, %r1768, %r1767, 14;
	shf.r.wrap.b32 	%r1770, %r1767, %r1768, 14;
	mov.b64 	%rd2598, {%r1770, %r1769};
	shf.r.wrap.b32 	%r1771, %r1768, %r1767, 18;
	shf.r.wrap.b32 	%r1772, %r1767, %r1768, 18;
	mov.b64 	%rd2599, {%r1772, %r1771};
	xor.b64  	%rd2600, %rd2599, %rd2598;
	shf.l.wrap.b32 	%r1773, %r1767, %r1768, 23;
	shf.l.wrap.b32 	%r1774, %r1768, %r1767, 23;
	mov.b64 	%rd2601, {%r1774, %r1773};
	xor.b64  	%rd2602, %rd2600, %rd2601;
	xor.b64  	%rd2603, %rd2562, %rd2538;
	and.b64  	%rd2604, %rd2586, %rd2603;
	xor.b64  	%rd2605, %rd2604, %rd2538;
	add.s64 	%rd2606, %rd2514, %rd2336;
	add.s64 	%rd2607, %rd2606, %rd90;
	add.s64 	%rd2608, %rd2607, %rd2605;
	add.s64 	%rd2609, %rd2608, %rd2602;
	add.s64 	%rd2610, %rd2609, %rd2525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1775,%dummy}, %rd2597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1776}, %rd2597;
	}
	shf.r.wrap.b32 	%r1777, %r1776, %r1775, 28;
	shf.r.wrap.b32 	%r1778, %r1775, %r1776, 28;
	mov.b64 	%rd2611, {%r1778, %r1777};
	shf.l.wrap.b32 	%r1779, %r1775, %r1776, 30;
	shf.l.wrap.b32 	%r1780, %r1776, %r1775, 30;
	mov.b64 	%rd2612, {%r1780, %r1779};
	xor.b64  	%rd2613, %rd2612, %rd2611;
	shf.l.wrap.b32 	%r1781, %r1775, %r1776, 25;
	shf.l.wrap.b32 	%r1782, %r1776, %r1775, 25;
	mov.b64 	%rd2614, {%r1782, %r1781};
	xor.b64  	%rd2615, %rd2613, %rd2614;
	xor.b64  	%rd2616, %rd2597, %rd2549;
	xor.b64  	%rd2617, %rd2597, %rd2573;
	and.b64  	%rd2618, %rd2617, %rd2616;
	xor.b64  	%rd2619, %rd2618, %rd2597;
	add.s64 	%rd2620, %rd2609, %rd2619;
	add.s64 	%rd2621, %rd2620, %rd2615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd2610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd2610;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 14;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 14;
	mov.b64 	%rd2622, {%r1786, %r1785};
	shf.r.wrap.b32 	%r1787, %r1784, %r1783, 18;
	shf.r.wrap.b32 	%r1788, %r1783, %r1784, 18;
	mov.b64 	%rd2623, {%r1788, %r1787};
	xor.b64  	%rd2624, %rd2623, %rd2622;
	shf.l.wrap.b32 	%r1789, %r1783, %r1784, 23;
	shf.l.wrap.b32 	%r1790, %r1784, %r1783, 23;
	mov.b64 	%rd2625, {%r1790, %r1789};
	xor.b64  	%rd2626, %rd2624, %rd2625;
	xor.b64  	%rd2627, %rd2586, %rd2562;
	and.b64  	%rd2628, %rd2610, %rd2627;
	xor.b64  	%rd2629, %rd2628, %rd2562;
	add.s64 	%rd2630, %rd2538, %rd2349;
	add.s64 	%rd2631, %rd2630, %rd91;
	add.s64 	%rd2632, %rd2631, %rd2629;
	add.s64 	%rd2633, %rd2632, %rd2626;
	add.s64 	%rd2634, %rd2633, %rd2549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd2621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd2621;
	}
	shf.r.wrap.b32 	%r1793, %r1792, %r1791, 28;
	shf.r.wrap.b32 	%r1794, %r1791, %r1792, 28;
	mov.b64 	%rd2635, {%r1794, %r1793};
	shf.l.wrap.b32 	%r1795, %r1791, %r1792, 30;
	shf.l.wrap.b32 	%r1796, %r1792, %r1791, 30;
	mov.b64 	%rd2636, {%r1796, %r1795};
	xor.b64  	%rd2637, %rd2636, %rd2635;
	shf.l.wrap.b32 	%r1797, %r1791, %r1792, 25;
	shf.l.wrap.b32 	%r1798, %r1792, %r1791, 25;
	mov.b64 	%rd2638, {%r1798, %r1797};
	xor.b64  	%rd2639, %rd2637, %rd2638;
	xor.b64  	%rd2640, %rd2621, %rd2573;
	xor.b64  	%rd2641, %rd2621, %rd2597;
	and.b64  	%rd2642, %rd2641, %rd2640;
	xor.b64  	%rd2643, %rd2642, %rd2621;
	add.s64 	%rd2644, %rd2633, %rd2643;
	add.s64 	%rd2645, %rd2644, %rd2639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1799,%dummy}, %rd2634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1800}, %rd2634;
	}
	shf.r.wrap.b32 	%r1801, %r1800, %r1799, 14;
	shf.r.wrap.b32 	%r1802, %r1799, %r1800, 14;
	mov.b64 	%rd2646, {%r1802, %r1801};
	shf.r.wrap.b32 	%r1803, %r1800, %r1799, 18;
	shf.r.wrap.b32 	%r1804, %r1799, %r1800, 18;
	mov.b64 	%rd2647, {%r1804, %r1803};
	xor.b64  	%rd2648, %rd2647, %rd2646;
	shf.l.wrap.b32 	%r1805, %r1799, %r1800, 23;
	shf.l.wrap.b32 	%r1806, %r1800, %r1799, 23;
	mov.b64 	%rd2649, {%r1806, %r1805};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	xor.b64  	%rd2651, %rd2610, %rd2586;
	and.b64  	%rd2652, %rd2634, %rd2651;
	xor.b64  	%rd2653, %rd2652, %rd2586;
	add.s64 	%rd2654, %rd2562, %rd2362;
	add.s64 	%rd2655, %rd2654, %rd92;
	add.s64 	%rd2656, %rd2655, %rd2653;
	add.s64 	%rd2657, %rd2656, %rd2650;
	add.s64 	%rd2658, %rd2657, %rd2573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd2645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd2645;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 28;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 28;
	mov.b64 	%rd2659, {%r1810, %r1809};
	shf.l.wrap.b32 	%r1811, %r1807, %r1808, 30;
	shf.l.wrap.b32 	%r1812, %r1808, %r1807, 30;
	mov.b64 	%rd2660, {%r1812, %r1811};
	xor.b64  	%rd2661, %rd2660, %rd2659;
	shf.l.wrap.b32 	%r1813, %r1807, %r1808, 25;
	shf.l.wrap.b32 	%r1814, %r1808, %r1807, 25;
	mov.b64 	%rd2662, {%r1814, %r1813};
	xor.b64  	%rd2663, %rd2661, %rd2662;
	xor.b64  	%rd2664, %rd2645, %rd2597;
	xor.b64  	%rd2665, %rd2645, %rd2621;
	and.b64  	%rd2666, %rd2665, %rd2664;
	xor.b64  	%rd2667, %rd2666, %rd2645;
	add.s64 	%rd2668, %rd2657, %rd2667;
	add.s64 	%rd2669, %rd2668, %rd2663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2658;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 14;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 14;
	mov.b64 	%rd2670, {%r1818, %r1817};
	shf.r.wrap.b32 	%r1819, %r1816, %r1815, 18;
	shf.r.wrap.b32 	%r1820, %r1815, %r1816, 18;
	mov.b64 	%rd2671, {%r1820, %r1819};
	xor.b64  	%rd2672, %rd2671, %rd2670;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 23;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 23;
	mov.b64 	%rd2673, {%r1822, %r1821};
	xor.b64  	%rd2674, %rd2672, %rd2673;
	xor.b64  	%rd2675, %rd2634, %rd2610;
	and.b64  	%rd2676, %rd2658, %rd2675;
	xor.b64  	%rd2677, %rd2676, %rd2610;
	add.s64 	%rd2678, %rd2586, %rd2375;
	add.s64 	%rd2679, %rd2678, %rd93;
	add.s64 	%rd2680, %rd2679, %rd2677;
	add.s64 	%rd2681, %rd2680, %rd2674;
	add.s64 	%rd2682, %rd2681, %rd2597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2669;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 28;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 28;
	mov.b64 	%rd2683, {%r1826, %r1825};
	shf.l.wrap.b32 	%r1827, %r1823, %r1824, 30;
	shf.l.wrap.b32 	%r1828, %r1824, %r1823, 30;
	mov.b64 	%rd2684, {%r1828, %r1827};
	xor.b64  	%rd2685, %rd2684, %rd2683;
	shf.l.wrap.b32 	%r1829, %r1823, %r1824, 25;
	shf.l.wrap.b32 	%r1830, %r1824, %r1823, 25;
	mov.b64 	%rd2686, {%r1830, %r1829};
	xor.b64  	%rd2687, %rd2685, %rd2686;
	xor.b64  	%rd2688, %rd2669, %rd2621;
	xor.b64  	%rd2689, %rd2669, %rd2645;
	and.b64  	%rd2690, %rd2689, %rd2688;
	xor.b64  	%rd2691, %rd2690, %rd2669;
	add.s64 	%rd2692, %rd2681, %rd2691;
	add.s64 	%rd2693, %rd2692, %rd2687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd2682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd2682;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 14;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 14;
	mov.b64 	%rd2694, {%r1834, %r1833};
	shf.r.wrap.b32 	%r1835, %r1832, %r1831, 18;
	shf.r.wrap.b32 	%r1836, %r1831, %r1832, 18;
	mov.b64 	%rd2695, {%r1836, %r1835};
	xor.b64  	%rd2696, %rd2695, %rd2694;
	shf.l.wrap.b32 	%r1837, %r1831, %r1832, 23;
	shf.l.wrap.b32 	%r1838, %r1832, %r1831, 23;
	mov.b64 	%rd2697, {%r1838, %r1837};
	xor.b64  	%rd2698, %rd2696, %rd2697;
	xor.b64  	%rd2699, %rd2658, %rd2634;
	and.b64  	%rd2700, %rd2682, %rd2699;
	xor.b64  	%rd2701, %rd2700, %rd2634;
	add.s64 	%rd2702, %rd2610, %rd2388;
	add.s64 	%rd2703, %rd2702, %rd94;
	add.s64 	%rd2704, %rd2703, %rd2701;
	add.s64 	%rd2705, %rd2704, %rd2698;
	add.s64 	%rd2706, %rd2705, %rd2621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd2693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd2693;
	}
	shf.r.wrap.b32 	%r1841, %r1840, %r1839, 28;
	shf.r.wrap.b32 	%r1842, %r1839, %r1840, 28;
	mov.b64 	%rd2707, {%r1842, %r1841};
	shf.l.wrap.b32 	%r1843, %r1839, %r1840, 30;
	shf.l.wrap.b32 	%r1844, %r1840, %r1839, 30;
	mov.b64 	%rd2708, {%r1844, %r1843};
	xor.b64  	%rd2709, %rd2708, %rd2707;
	shf.l.wrap.b32 	%r1845, %r1839, %r1840, 25;
	shf.l.wrap.b32 	%r1846, %r1840, %r1839, 25;
	mov.b64 	%rd2710, {%r1846, %r1845};
	xor.b64  	%rd2711, %rd2709, %rd2710;
	xor.b64  	%rd2712, %rd2693, %rd2645;
	xor.b64  	%rd2713, %rd2693, %rd2669;
	and.b64  	%rd2714, %rd2713, %rd2712;
	xor.b64  	%rd2715, %rd2714, %rd2693;
	add.s64 	%rd2716, %rd2705, %rd2715;
	add.s64 	%rd2717, %rd2716, %rd2711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1847,%dummy}, %rd2706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1848}, %rd2706;
	}
	shf.r.wrap.b32 	%r1849, %r1848, %r1847, 14;
	shf.r.wrap.b32 	%r1850, %r1847, %r1848, 14;
	mov.b64 	%rd2718, {%r1850, %r1849};
	shf.r.wrap.b32 	%r1851, %r1848, %r1847, 18;
	shf.r.wrap.b32 	%r1852, %r1847, %r1848, 18;
	mov.b64 	%rd2719, {%r1852, %r1851};
	xor.b64  	%rd2720, %rd2719, %rd2718;
	shf.l.wrap.b32 	%r1853, %r1847, %r1848, 23;
	shf.l.wrap.b32 	%r1854, %r1848, %r1847, 23;
	mov.b64 	%rd2721, {%r1854, %r1853};
	xor.b64  	%rd2722, %rd2720, %rd2721;
	xor.b64  	%rd2723, %rd2682, %rd2658;
	and.b64  	%rd2724, %rd2706, %rd2723;
	xor.b64  	%rd2725, %rd2724, %rd2658;
	add.s64 	%rd2726, %rd2634, %rd2401;
	add.s64 	%rd2727, %rd2726, %rd95;
	add.s64 	%rd2728, %rd2727, %rd2725;
	add.s64 	%rd2729, %rd2728, %rd2722;
	add.s64 	%rd2730, %rd2729, %rd2645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1855,%dummy}, %rd2717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1856}, %rd2717;
	}
	shf.r.wrap.b32 	%r1857, %r1856, %r1855, 28;
	shf.r.wrap.b32 	%r1858, %r1855, %r1856, 28;
	mov.b64 	%rd2731, {%r1858, %r1857};
	shf.l.wrap.b32 	%r1859, %r1855, %r1856, 30;
	shf.l.wrap.b32 	%r1860, %r1856, %r1855, 30;
	mov.b64 	%rd2732, {%r1860, %r1859};
	xor.b64  	%rd2733, %rd2732, %rd2731;
	shf.l.wrap.b32 	%r1861, %r1855, %r1856, 25;
	shf.l.wrap.b32 	%r1862, %r1856, %r1855, 25;
	mov.b64 	%rd2734, {%r1862, %r1861};
	xor.b64  	%rd2735, %rd2733, %rd2734;
	xor.b64  	%rd2736, %rd2717, %rd2669;
	xor.b64  	%rd2737, %rd2717, %rd2693;
	and.b64  	%rd2738, %rd2737, %rd2736;
	xor.b64  	%rd2739, %rd2738, %rd2717;
	add.s64 	%rd2740, %rd2729, %rd2739;
	add.s64 	%rd2741, %rd2740, %rd2735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1863,%dummy}, %rd2730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1864}, %rd2730;
	}
	shf.r.wrap.b32 	%r1865, %r1864, %r1863, 14;
	shf.r.wrap.b32 	%r1866, %r1863, %r1864, 14;
	mov.b64 	%rd2742, {%r1866, %r1865};
	shf.r.wrap.b32 	%r1867, %r1864, %r1863, 18;
	shf.r.wrap.b32 	%r1868, %r1863, %r1864, 18;
	mov.b64 	%rd2743, {%r1868, %r1867};
	xor.b64  	%rd2744, %rd2743, %rd2742;
	shf.l.wrap.b32 	%r1869, %r1863, %r1864, 23;
	shf.l.wrap.b32 	%r1870, %r1864, %r1863, 23;
	mov.b64 	%rd2745, {%r1870, %r1869};
	xor.b64  	%rd2746, %rd2744, %rd2745;
	xor.b64  	%rd2747, %rd2706, %rd2682;
	and.b64  	%rd2748, %rd2730, %rd2747;
	xor.b64  	%rd2749, %rd2748, %rd2682;
	add.s64 	%rd2750, %rd2658, %rd2414;
	add.s64 	%rd2751, %rd2750, %rd96;
	add.s64 	%rd2752, %rd2751, %rd2749;
	add.s64 	%rd2753, %rd2752, %rd2746;
	add.s64 	%rd2754, %rd2753, %rd2669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1871,%dummy}, %rd2741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1872}, %rd2741;
	}
	shf.r.wrap.b32 	%r1873, %r1872, %r1871, 28;
	shf.r.wrap.b32 	%r1874, %r1871, %r1872, 28;
	mov.b64 	%rd2755, {%r1874, %r1873};
	shf.l.wrap.b32 	%r1875, %r1871, %r1872, 30;
	shf.l.wrap.b32 	%r1876, %r1872, %r1871, 30;
	mov.b64 	%rd2756, {%r1876, %r1875};
	xor.b64  	%rd2757, %rd2756, %rd2755;
	shf.l.wrap.b32 	%r1877, %r1871, %r1872, 25;
	shf.l.wrap.b32 	%r1878, %r1872, %r1871, 25;
	mov.b64 	%rd2758, {%r1878, %r1877};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	xor.b64  	%rd2760, %rd2741, %rd2693;
	xor.b64  	%rd2761, %rd2741, %rd2717;
	and.b64  	%rd2762, %rd2761, %rd2760;
	xor.b64  	%rd2763, %rd2762, %rd2741;
	add.s64 	%rd2764, %rd2753, %rd2763;
	add.s64 	%rd2765, %rd2764, %rd2759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1879,%dummy}, %rd2754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1880}, %rd2754;
	}
	shf.r.wrap.b32 	%r1881, %r1880, %r1879, 14;
	shf.r.wrap.b32 	%r1882, %r1879, %r1880, 14;
	mov.b64 	%rd2766, {%r1882, %r1881};
	shf.r.wrap.b32 	%r1883, %r1880, %r1879, 18;
	shf.r.wrap.b32 	%r1884, %r1879, %r1880, 18;
	mov.b64 	%rd2767, {%r1884, %r1883};
	xor.b64  	%rd2768, %rd2767, %rd2766;
	shf.l.wrap.b32 	%r1885, %r1879, %r1880, 23;
	shf.l.wrap.b32 	%r1886, %r1880, %r1879, 23;
	mov.b64 	%rd2769, {%r1886, %r1885};
	xor.b64  	%rd2770, %rd2768, %rd2769;
	xor.b64  	%rd2771, %rd2730, %rd2706;
	and.b64  	%rd2772, %rd2754, %rd2771;
	xor.b64  	%rd2773, %rd2772, %rd2706;
	add.s64 	%rd2774, %rd2682, %rd2427;
	add.s64 	%rd2775, %rd2774, %rd97;
	add.s64 	%rd2776, %rd2775, %rd2773;
	add.s64 	%rd2777, %rd2776, %rd2770;
	add.s64 	%rd2778, %rd2777, %rd2693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1887,%dummy}, %rd2765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1888}, %rd2765;
	}
	shf.r.wrap.b32 	%r1889, %r1888, %r1887, 28;
	shf.r.wrap.b32 	%r1890, %r1887, %r1888, 28;
	mov.b64 	%rd2779, {%r1890, %r1889};
	shf.l.wrap.b32 	%r1891, %r1887, %r1888, 30;
	shf.l.wrap.b32 	%r1892, %r1888, %r1887, 30;
	mov.b64 	%rd2780, {%r1892, %r1891};
	xor.b64  	%rd2781, %rd2780, %rd2779;
	shf.l.wrap.b32 	%r1893, %r1887, %r1888, 25;
	shf.l.wrap.b32 	%r1894, %r1888, %r1887, 25;
	mov.b64 	%rd2782, {%r1894, %r1893};
	xor.b64  	%rd2783, %rd2781, %rd2782;
	xor.b64  	%rd2784, %rd2765, %rd2717;
	xor.b64  	%rd2785, %rd2765, %rd2741;
	and.b64  	%rd2786, %rd2785, %rd2784;
	xor.b64  	%rd2787, %rd2786, %rd2765;
	add.s64 	%rd2788, %rd2777, %rd2787;
	add.s64 	%rd2789, %rd2788, %rd2783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1895,%dummy}, %rd2778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1896}, %rd2778;
	}
	shf.r.wrap.b32 	%r1897, %r1896, %r1895, 14;
	shf.r.wrap.b32 	%r1898, %r1895, %r1896, 14;
	mov.b64 	%rd2790, {%r1898, %r1897};
	shf.r.wrap.b32 	%r1899, %r1896, %r1895, 18;
	shf.r.wrap.b32 	%r1900, %r1895, %r1896, 18;
	mov.b64 	%rd2791, {%r1900, %r1899};
	xor.b64  	%rd2792, %rd2791, %rd2790;
	shf.l.wrap.b32 	%r1901, %r1895, %r1896, 23;
	shf.l.wrap.b32 	%r1902, %r1896, %r1895, 23;
	mov.b64 	%rd2793, {%r1902, %r1901};
	xor.b64  	%rd2794, %rd2792, %rd2793;
	xor.b64  	%rd2795, %rd2754, %rd2730;
	and.b64  	%rd2796, %rd2778, %rd2795;
	xor.b64  	%rd2797, %rd2796, %rd2730;
	add.s64 	%rd2798, %rd2706, %rd2440;
	add.s64 	%rd2799, %rd2798, %rd98;
	add.s64 	%rd2800, %rd2799, %rd2797;
	add.s64 	%rd2801, %rd2800, %rd2794;
	add.s64 	%rd2802, %rd2801, %rd2717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1903,%dummy}, %rd2789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1904}, %rd2789;
	}
	shf.r.wrap.b32 	%r1905, %r1904, %r1903, 28;
	shf.r.wrap.b32 	%r1906, %r1903, %r1904, 28;
	mov.b64 	%rd2803, {%r1906, %r1905};
	shf.l.wrap.b32 	%r1907, %r1903, %r1904, 30;
	shf.l.wrap.b32 	%r1908, %r1904, %r1903, 30;
	mov.b64 	%rd2804, {%r1908, %r1907};
	xor.b64  	%rd2805, %rd2804, %rd2803;
	shf.l.wrap.b32 	%r1909, %r1903, %r1904, 25;
	shf.l.wrap.b32 	%r1910, %r1904, %r1903, 25;
	mov.b64 	%rd2806, {%r1910, %r1909};
	xor.b64  	%rd2807, %rd2805, %rd2806;
	xor.b64  	%rd2808, %rd2789, %rd2741;
	xor.b64  	%rd2809, %rd2789, %rd2765;
	and.b64  	%rd2810, %rd2809, %rd2808;
	xor.b64  	%rd2811, %rd2810, %rd2789;
	add.s64 	%rd2812, %rd2801, %rd2811;
	add.s64 	%rd2813, %rd2812, %rd2807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1911,%dummy}, %rd2802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1912}, %rd2802;
	}
	shf.r.wrap.b32 	%r1913, %r1912, %r1911, 14;
	shf.r.wrap.b32 	%r1914, %r1911, %r1912, 14;
	mov.b64 	%rd2814, {%r1914, %r1913};
	shf.r.wrap.b32 	%r1915, %r1912, %r1911, 18;
	shf.r.wrap.b32 	%r1916, %r1911, %r1912, 18;
	mov.b64 	%rd2815, {%r1916, %r1915};
	xor.b64  	%rd2816, %rd2815, %rd2814;
	shf.l.wrap.b32 	%r1917, %r1911, %r1912, 23;
	shf.l.wrap.b32 	%r1918, %r1912, %r1911, 23;
	mov.b64 	%rd2817, {%r1918, %r1917};
	xor.b64  	%rd2818, %rd2816, %rd2817;
	xor.b64  	%rd2819, %rd2778, %rd2754;
	and.b64  	%rd2820, %rd2802, %rd2819;
	xor.b64  	%rd2821, %rd2820, %rd2754;
	add.s64 	%rd2822, %rd2730, %rd2453;
	add.s64 	%rd2823, %rd2822, %rd99;
	add.s64 	%rd2824, %rd2823, %rd2821;
	add.s64 	%rd2825, %rd2824, %rd2818;
	add.s64 	%rd2826, %rd2825, %rd2741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1919,%dummy}, %rd2813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1920}, %rd2813;
	}
	shf.r.wrap.b32 	%r1921, %r1920, %r1919, 28;
	shf.r.wrap.b32 	%r1922, %r1919, %r1920, 28;
	mov.b64 	%rd2827, {%r1922, %r1921};
	shf.l.wrap.b32 	%r1923, %r1919, %r1920, 30;
	shf.l.wrap.b32 	%r1924, %r1920, %r1919, 30;
	mov.b64 	%rd2828, {%r1924, %r1923};
	xor.b64  	%rd2829, %rd2828, %rd2827;
	shf.l.wrap.b32 	%r1925, %r1919, %r1920, 25;
	shf.l.wrap.b32 	%r1926, %r1920, %r1919, 25;
	mov.b64 	%rd2830, {%r1926, %r1925};
	xor.b64  	%rd2831, %rd2829, %rd2830;
	xor.b64  	%rd2832, %rd2813, %rd2765;
	xor.b64  	%rd2833, %rd2813, %rd2789;
	and.b64  	%rd2834, %rd2833, %rd2832;
	xor.b64  	%rd2835, %rd2834, %rd2813;
	add.s64 	%rd2836, %rd2825, %rd2835;
	add.s64 	%rd2837, %rd2836, %rd2831;
	add.s64 	%rd2853, %rd2754, 6620516959819538809;
	add.s64 	%rd2854, %rd2778, 2270897969802886507;
	add.s64 	%rd2855, %rd2802, -7276294671716946913;
	add.s64 	%rd2856, %rd2826, 5840696475078001361;
	add.s64 	%rd2857, %rd2765, -6534734903238641935;
	add.s64 	%rd2858, %rd2789, 4354685564936845355;
	add.s64 	%rd2859, %rd2813, -4942790177534073029;
	add.s64 	%rd2860, %rd2837, 7640891576956012808;
	add.s32 	%r1927, %r1927, 1;
	setp.lt.u32	%p3, %r1927, %r3;
	@%p3 bra 	BB6_3;

BB6_4:
	add.s64 	%rd2844, %rd2, 56;
	add.s64 	%rd2843, %rd2, 48;
	add.s64 	%rd2842, %rd2, 40;
	add.s64 	%rd2841, %rd2, 32;
	add.s64 	%rd2840, %rd2, 24;
	add.s64 	%rd2839, %rd2, 16;
	add.s64 	%rd2838, %rd2, 8;
	st.global.u64 	[%rd2], %rd2860;
	st.global.u64 	[%rd2838], %rd2859;
	st.global.u64 	[%rd2839], %rd2858;
	st.global.u64 	[%rd2840], %rd2857;
	st.global.u64 	[%rd2841], %rd2856;
	st.global.u64 	[%rd2842], %rd2855;
	st.global.u64 	[%rd2843], %rd2854;
	st.global.u64 	[%rd2844], %rd2853;

BB6_5:
	ret;
}

	// .globl	m11300_comp
.entry m11300_comp(
	.param .u64 .ptr .global .align 4 m11300_comp_param_0,
	.param .u64 .ptr .global .align 4 m11300_comp_param_1,
	.param .u64 .ptr .global .align 4 m11300_comp_param_2,
	.param .u64 .ptr .global .align 4 m11300_comp_param_3,
	.param .u64 .ptr .global .align 8 m11300_comp_param_4,
	.param .u64 .ptr .global .align 1 m11300_comp_param_5,
	.param .u64 .ptr .global .align 4 m11300_comp_param_6,
	.param .u64 .ptr .global .align 4 m11300_comp_param_7,
	.param .u64 .ptr .global .align 4 m11300_comp_param_8,
	.param .u64 .ptr .global .align 4 m11300_comp_param_9,
	.param .u64 .ptr .global .align 4 m11300_comp_param_10,
	.param .u64 .ptr .global .align 4 m11300_comp_param_11,
	.param .u64 .ptr .global .align 4 m11300_comp_param_12,
	.param .u64 .ptr .global .align 4 m11300_comp_param_13,
	.param .u64 .ptr .global .align 8 m11300_comp_param_14,
	.param .u64 .ptr .global .align 4 m11300_comp_param_15,
	.param .u64 .ptr .global .align 4 m11300_comp_param_16,
	.param .u64 .ptr .global .align 4 m11300_comp_param_17,
	.param .u64 .ptr .global .align 4 m11300_comp_param_18,
	.param .u64 .ptr .global .align 4 m11300_comp_param_19,
	.param .u64 .ptr .global .align 4 m11300_comp_param_20,
	.param .u64 .ptr .global .align 4 m11300_comp_param_21,
	.param .u64 .ptr .global .align 4 m11300_comp_param_22,
	.param .u64 .ptr .global .align 4 m11300_comp_param_23,
	.param .u32 m11300_comp_param_24,
	.param .u32 m11300_comp_param_25,
	.param .u32 m11300_comp_param_26,
	.param .u32 m11300_comp_param_27,
	.param .u32 m11300_comp_param_28,
	.param .u32 m11300_comp_param_29,
	.param .u32 m11300_comp_param_30,
	.param .u32 m11300_comp_param_31,
	.param .u32 m11300_comp_param_32,
	.param .u32 m11300_comp_param_33,
	.param .u64 m11300_comp_param_34
)
{
	.local .align 16 .b8 	__local_depot7[240];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<26>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<1418>;
	.reg .b64 	%rd<1179>;
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td0[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td1[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td2[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td3[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td4[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te0[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te1[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te2[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te3[1024];

	mov.u64 	%rd1178, __local_depot7;
	cvta.local.u64 	%SP, %rd1178;
	ld.param.u64 	%rd20, [m11300_comp_param_4];
	ld.param.u64 	%rd25, [m11300_comp_param_34];
	add.u64 	%rd26, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd26;
	mov.u32 	%r58, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.b32	%r59, %envreg3;
	mad.lo.s32 	%r60, %r58, %r1, %r59;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r61, %r60, %r2;
	cvt.s64.s32	%rd2, %r61;
	setp.gt.u32	%p9, %r2, 255;
	@%p9 bra 	BB7_3;

	cvt.s64.s32	%rd1176, %r2;
	cvt.s64.s32	%rd4, %r1;

BB7_2:
	and.b64  	%rd27, %rd1176, 4294967295;
	shl.b64 	%rd28, %rd27, 2;
	mov.u64 	%rd29, td0;
	add.s64 	%rd30, %rd29, %rd28;
	ld.const.u32 	%r62, [%rd30];
	mov.u64 	%rd31, m11300_comp$s_td0;
	add.s64 	%rd32, %rd31, %rd28;
	st.shared.u32 	[%rd32], %r62;
	mov.u64 	%rd33, td1;
	add.s64 	%rd34, %rd33, %rd28;
	ld.const.u32 	%r63, [%rd34];
	mov.u64 	%rd35, m11300_comp$s_td1;
	add.s64 	%rd36, %rd35, %rd28;
	st.shared.u32 	[%rd36], %r63;
	mov.u64 	%rd37, td2;
	add.s64 	%rd38, %rd37, %rd28;
	ld.const.u32 	%r64, [%rd38];
	mov.u64 	%rd39, m11300_comp$s_td2;
	add.s64 	%rd40, %rd39, %rd28;
	st.shared.u32 	[%rd40], %r64;
	mov.u64 	%rd41, td3;
	add.s64 	%rd42, %rd41, %rd28;
	ld.const.u32 	%r65, [%rd42];
	mov.u64 	%rd43, m11300_comp$s_td3;
	add.s64 	%rd44, %rd43, %rd28;
	st.shared.u32 	[%rd44], %r65;
	mov.u64 	%rd45, td4;
	add.s64 	%rd46, %rd45, %rd28;
	ld.const.u32 	%r66, [%rd46];
	mov.u64 	%rd47, m11300_comp$s_td4;
	add.s64 	%rd48, %rd47, %rd28;
	st.shared.u32 	[%rd48], %r66;
	mov.u64 	%rd49, te0;
	add.s64 	%rd50, %rd49, %rd28;
	ld.const.u32 	%r67, [%rd50];
	mov.u64 	%rd51, m11300_comp$s_te0;
	add.s64 	%rd52, %rd51, %rd28;
	st.shared.u32 	[%rd52], %r67;
	mov.u64 	%rd53, te1;
	add.s64 	%rd54, %rd53, %rd28;
	ld.const.u32 	%r68, [%rd54];
	mov.u64 	%rd55, m11300_comp$s_te1;
	add.s64 	%rd56, %rd55, %rd28;
	st.shared.u32 	[%rd56], %r68;
	mov.u64 	%rd57, te2;
	add.s64 	%rd58, %rd57, %rd28;
	ld.const.u32 	%r69, [%rd58];
	mov.u64 	%rd59, m11300_comp$s_te2;
	add.s64 	%rd60, %rd59, %rd28;
	st.shared.u32 	[%rd60], %r69;
	mov.u64 	%rd61, te3;
	add.s64 	%rd62, %rd61, %rd28;
	ld.const.u32 	%r70, [%rd62];
	mov.u64 	%rd63, m11300_comp$s_te3;
	add.s64 	%rd64, %rd63, %rd28;
	st.shared.u32 	[%rd64], %r70;
	add.s64 	%rd1176, %rd27, %rd4;
	cvt.u32.u64	%r71, %rd1176;
	setp.lt.u32	%p10, %r71, 256;
	@%p10 bra 	BB7_2;

BB7_3:
	bar.sync 	0;
	setp.ge.u64	%p11, %rd2, %rd25;
	@%p11 bra 	BB7_17;

	shl.b64 	%rd65, %rd2, 6;
	add.s64 	%rd66, %rd20, %rd65;
	ld.global.u64 	%rd67, [%rd66];
	shr.u64 	%rd68, %rd67, 32;
	cvt.u32.u64	%r73, %rd68;
	cvt.u32.u64	%r75, %rd67;
	ld.global.u64 	%rd69, [%rd66+8];
	shr.u64 	%rd70, %rd69, 32;
	cvt.u32.u64	%r77, %rd70;
	cvt.u32.u64	%r79, %rd69;
	ld.global.u64 	%rd71, [%rd66+16];
	shr.u64 	%rd72, %rd71, 32;
	cvt.u32.u64	%r81, %rd72;
	cvt.u32.u64	%r83, %rd71;
	ld.global.u64 	%rd73, [%rd66+24];
	shr.u64 	%rd74, %rd73, 32;
	cvt.u32.u64	%r85, %rd74;
	cvt.u32.u64	%r87, %rd73;
	ld.global.u64 	%rd75, [%rd66+32];
	shr.u64 	%rd76, %rd75, 32;
	cvt.u32.u64	%r1412, %rd76;
	ld.global.u64 	%rd77, [%rd66+40];
	// inline asm
	prmt.b32 %r72, %r73, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r74, %r75, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r76, %r77, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r78, %r79, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r80, %r81, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r82, %r83, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r84, %r85, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r86, %r87, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1405, %r72, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r94, %r78, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r90, %r74, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r92, %r76, 0, 0x0123;
	// inline asm
	st.local.v4.u32 	[%rd1], {%r1405, %r90, %r92, %r94};
	// inline asm
	prmt.b32 %r102, %r86, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r98, %r82, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r100, %r84, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r96, %r80, 0, 0x0123;
	// inline asm
	st.local.v4.u32 	[%rd1+16], {%r96, %r98, %r100, %r102};
	bfe.u32 	%r106, %r102, 16, 8;
	mul.wide.u32 	%rd79, %r106, 4;
	mov.u64 	%rd80, m11300_comp$s_te2;
	add.s64 	%rd81, %rd80, %rd79;
	ld.shared.u32 	%r107, [%rd81];
	and.b32  	%r108, %r107, -16777216;
	xor.b32  	%r109, %r108, %r1405;
	shr.u32 	%r110, %r102, 8;
	mul.wide.u32 	%rd82, %r110, 4;
	and.b64  	%rd83, %rd82, 1020;
	mov.u64 	%rd84, m11300_comp$s_te3;
	add.s64 	%rd85, %rd84, %rd83;
	ld.shared.u32 	%r111, [%rd85];
	and.b32  	%r112, %r111, 16711680;
	xor.b32  	%r113, %r109, %r112;
	mul.wide.u32 	%rd86, %r102, 4;
	and.b64  	%rd87, %rd86, 1020;
	mov.u64 	%rd88, m11300_comp$s_te0;
	add.s64 	%rd89, %rd88, %rd87;
	ld.shared.u32 	%r114, [%rd89];
	and.b32  	%r115, %r114, 65280;
	xor.b32  	%r116, %r113, %r115;
	shr.u32 	%r117, %r102, 24;
	mul.wide.u32 	%rd90, %r117, 4;
	mov.u64 	%rd91, m11300_comp$s_te1;
	add.s64 	%rd92, %rd91, %rd90;
	ld.shared.u8 	%r118, [%rd92];
	xor.b32  	%r119, %r116, %r118;
	ld.const.v2.u32 	{%r120, %r121}, [rcon];
	xor.b32  	%r123, %r119, %r120;
	xor.b32  	%r124, %r123, %r90;
	xor.b32  	%r125, %r124, %r92;
	xor.b32  	%r126, %r125, %r94;
	st.local.v4.u32 	[%rd1+32], {%r123, %r124, %r125, %r126};
	shr.u32 	%r127, %r126, 24;
	mul.wide.u32 	%rd93, %r127, 4;
	add.s64 	%rd94, %rd80, %rd93;
	ld.shared.u32 	%r128, [%rd94];
	and.b32  	%r129, %r128, -16777216;
	xor.b32  	%r130, %r129, %r96;
	shr.u32 	%r131, %r126, 16;
	mul.wide.u32 	%rd95, %r131, 4;
	and.b64  	%rd96, %rd95, 1020;
	add.s64 	%rd97, %rd84, %rd96;
	ld.shared.u32 	%r132, [%rd97];
	and.b32  	%r133, %r132, 16711680;
	xor.b32  	%r134, %r130, %r133;
	shr.u32 	%r135, %r126, 8;
	mul.wide.u32 	%rd98, %r135, 4;
	and.b64  	%rd99, %rd98, 1020;
	add.s64 	%rd100, %rd88, %rd99;
	ld.shared.u32 	%r136, [%rd100];
	and.b32  	%r137, %r136, 65280;
	xor.b32  	%r138, %r134, %r137;
	mul.wide.u32 	%rd101, %r126, 4;
	and.b64  	%rd102, %rd101, 1020;
	add.s64 	%rd103, %rd91, %rd102;
	ld.shared.u8 	%r139, [%rd103];
	xor.b32  	%r140, %r138, %r139;
	xor.b32  	%r141, %r140, %r98;
	xor.b32  	%r142, %r141, %r100;
	xor.b32  	%r143, %r142, %r102;
	st.local.v4.u32 	[%rd1+48], {%r140, %r141, %r142, %r143};
	bfe.u32 	%r144, %r143, 16, 8;
	mul.wide.u32 	%rd104, %r144, 4;
	add.s64 	%rd105, %rd80, %rd104;
	ld.shared.u32 	%r145, [%rd105];
	and.b32  	%r146, %r145, -16777216;
	xor.b32  	%r147, %r146, %r123;
	shr.u32 	%r148, %r143, 8;
	mul.wide.u32 	%rd106, %r148, 4;
	and.b64  	%rd107, %rd106, 1020;
	add.s64 	%rd108, %rd84, %rd107;
	ld.shared.u32 	%r149, [%rd108];
	and.b32  	%r150, %r149, 16711680;
	xor.b32  	%r151, %r147, %r150;
	mul.wide.u32 	%rd109, %r143, 4;
	and.b64  	%rd110, %rd109, 1020;
	add.s64 	%rd111, %rd88, %rd110;
	ld.shared.u32 	%r152, [%rd111];
	and.b32  	%r153, %r152, 65280;
	xor.b32  	%r154, %r151, %r153;
	shr.u32 	%r155, %r143, 24;
	mul.wide.u32 	%rd112, %r155, 4;
	add.s64 	%rd113, %rd91, %rd112;
	ld.shared.u8 	%r156, [%rd113];
	xor.b32  	%r157, %r154, %r156;
	xor.b32  	%r159, %r157, %r121;
	xor.b32  	%r160, %r159, %r124;
	xor.b32  	%r161, %r159, %r92;
	xor.b32  	%r162, %r161, %r126;
	st.local.v4.u32 	[%rd1+64], {%r159, %r160, %r161, %r162};
	shr.u32 	%r163, %r162, 24;
	mul.wide.u32 	%rd114, %r163, 4;
	add.s64 	%rd115, %rd80, %rd114;
	ld.shared.u32 	%r164, [%rd115];
	and.b32  	%r165, %r164, -16777216;
	xor.b32  	%r166, %r165, %r140;
	shr.u32 	%r167, %r162, 16;
	mul.wide.u32 	%rd116, %r167, 4;
	and.b64  	%rd117, %rd116, 1020;
	add.s64 	%rd118, %rd84, %rd117;
	ld.shared.u32 	%r168, [%rd118];
	and.b32  	%r169, %r168, 16711680;
	xor.b32  	%r170, %r166, %r169;
	shr.u32 	%r171, %r162, 8;
	mul.wide.u32 	%rd119, %r171, 4;
	and.b64  	%rd120, %rd119, 1020;
	add.s64 	%rd121, %rd88, %rd120;
	ld.shared.u32 	%r172, [%rd121];
	and.b32  	%r173, %r172, 65280;
	xor.b32  	%r174, %r170, %r173;
	mul.wide.u32 	%rd122, %r162, 4;
	and.b64  	%rd123, %rd122, 1020;
	add.s64 	%rd124, %rd91, %rd123;
	ld.shared.u8 	%r175, [%rd124];
	xor.b32  	%r176, %r174, %r175;
	xor.b32  	%r177, %r176, %r141;
	xor.b32  	%r178, %r176, %r100;
	xor.b32  	%r179, %r178, %r143;
	st.local.v4.u32 	[%rd1+80], {%r176, %r177, %r178, %r179};
	bfe.u32 	%r180, %r179, 16, 8;
	mul.wide.u32 	%rd125, %r180, 4;
	add.s64 	%rd126, %rd80, %rd125;
	ld.shared.u32 	%r181, [%rd126];
	and.b32  	%r182, %r181, -16777216;
	xor.b32  	%r183, %r182, %r159;
	shr.u32 	%r184, %r179, 8;
	mul.wide.u32 	%rd127, %r184, 4;
	and.b64  	%rd128, %rd127, 1020;
	add.s64 	%rd129, %rd84, %rd128;
	ld.shared.u32 	%r185, [%rd129];
	and.b32  	%r186, %r185, 16711680;
	xor.b32  	%r187, %r183, %r186;
	mul.wide.u32 	%rd130, %r179, 4;
	and.b64  	%rd131, %rd130, 1020;
	add.s64 	%rd132, %rd88, %rd131;
	ld.shared.u32 	%r188, [%rd132];
	and.b32  	%r189, %r188, 65280;
	xor.b32  	%r190, %r187, %r189;
	shr.u32 	%r191, %r179, 24;
	mul.wide.u32 	%rd133, %r191, 4;
	add.s64 	%rd134, %rd91, %rd133;
	ld.shared.u8 	%r192, [%rd134];
	xor.b32  	%r193, %r190, %r192;
	ld.const.v2.u32 	{%r194, %r195}, [rcon+8];
	xor.b32  	%r197, %r193, %r194;
	xor.b32  	%r198, %r197, %r160;
	xor.b32  	%r199, %r198, %r126;
	xor.b32  	%r200, %r198, %r161;
	st.local.v4.u32 	[%rd1+96], {%r197, %r198, %r200, %r199};
	shr.u32 	%r201, %r199, 24;
	mul.wide.u32 	%rd135, %r201, 4;
	add.s64 	%rd136, %rd80, %rd135;
	ld.shared.u32 	%r202, [%rd136];
	and.b32  	%r203, %r202, -16777216;
	xor.b32  	%r204, %r203, %r176;
	shr.u32 	%r205, %r199, 16;
	mul.wide.u32 	%rd137, %r205, 4;
	and.b64  	%rd138, %rd137, 1020;
	add.s64 	%rd139, %rd84, %rd138;
	ld.shared.u32 	%r206, [%rd139];
	and.b32  	%r207, %r206, 16711680;
	xor.b32  	%r208, %r204, %r207;
	shr.u32 	%r209, %r199, 8;
	mul.wide.u32 	%rd140, %r209, 4;
	and.b64  	%rd141, %rd140, 1020;
	add.s64 	%rd142, %rd88, %rd141;
	ld.shared.u32 	%r210, [%rd142];
	and.b32  	%r211, %r210, 65280;
	xor.b32  	%r212, %r208, %r211;
	mul.wide.u32 	%rd143, %r199, 4;
	and.b64  	%rd144, %rd143, 1020;
	add.s64 	%rd145, %rd91, %rd144;
	ld.shared.u8 	%r213, [%rd145];
	xor.b32  	%r214, %r212, %r213;
	xor.b32  	%r215, %r214, %r177;
	xor.b32  	%r216, %r215, %r143;
	xor.b32  	%r217, %r215, %r178;
	st.local.v4.u32 	[%rd1+112], {%r214, %r215, %r217, %r216};
	bfe.u32 	%r218, %r216, 16, 8;
	mul.wide.u32 	%rd146, %r218, 4;
	add.s64 	%rd147, %rd80, %rd146;
	ld.shared.u32 	%r219, [%rd147];
	and.b32  	%r220, %r219, -16777216;
	xor.b32  	%r221, %r220, %r197;
	shr.u32 	%r222, %r216, 8;
	mul.wide.u32 	%rd148, %r222, 4;
	and.b64  	%rd149, %rd148, 1020;
	add.s64 	%rd150, %rd84, %rd149;
	ld.shared.u32 	%r223, [%rd150];
	and.b32  	%r224, %r223, 16711680;
	xor.b32  	%r225, %r221, %r224;
	mul.wide.u32 	%rd151, %r216, 4;
	and.b64  	%rd152, %rd151, 1020;
	add.s64 	%rd153, %rd88, %rd152;
	ld.shared.u32 	%r226, [%rd153];
	and.b32  	%r227, %r226, 65280;
	xor.b32  	%r228, %r225, %r227;
	shr.u32 	%r229, %r216, 24;
	mul.wide.u32 	%rd154, %r229, 4;
	add.s64 	%rd155, %rd91, %rd154;
	ld.shared.u8 	%r230, [%rd155];
	xor.b32  	%r231, %r228, %r230;
	xor.b32  	%r233, %r231, %r195;
	xor.b32  	%r234, %r233, %r198;
	xor.b32  	%r235, %r233, %r161;
	xor.b32  	%r236, %r235, %r199;
	st.local.v4.u32 	[%rd1+128], {%r233, %r234, %r235, %r236};
	shr.u32 	%r237, %r236, 24;
	mul.wide.u32 	%rd156, %r237, 4;
	add.s64 	%rd157, %rd80, %rd156;
	ld.shared.u32 	%r238, [%rd157];
	and.b32  	%r239, %r238, -16777216;
	xor.b32  	%r240, %r239, %r214;
	shr.u32 	%r241, %r236, 16;
	mul.wide.u32 	%rd158, %r241, 4;
	and.b64  	%rd159, %rd158, 1020;
	add.s64 	%rd160, %rd84, %rd159;
	ld.shared.u32 	%r242, [%rd160];
	and.b32  	%r243, %r242, 16711680;
	xor.b32  	%r244, %r240, %r243;
	shr.u32 	%r245, %r236, 8;
	mul.wide.u32 	%rd161, %r245, 4;
	and.b64  	%rd162, %rd161, 1020;
	add.s64 	%rd163, %rd88, %rd162;
	ld.shared.u32 	%r246, [%rd163];
	and.b32  	%r247, %r246, 65280;
	xor.b32  	%r248, %r244, %r247;
	mul.wide.u32 	%rd164, %r236, 4;
	and.b64  	%rd165, %rd164, 1020;
	add.s64 	%rd166, %rd91, %rd165;
	ld.shared.u8 	%r249, [%rd166];
	xor.b32  	%r250, %r248, %r249;
	xor.b32  	%r251, %r250, %r215;
	xor.b32  	%r252, %r250, %r178;
	xor.b32  	%r253, %r252, %r216;
	st.local.v4.u32 	[%rd1+144], {%r250, %r251, %r252, %r253};
	bfe.u32 	%r254, %r253, 16, 8;
	mul.wide.u32 	%rd167, %r254, 4;
	add.s64 	%rd168, %rd80, %rd167;
	ld.shared.u32 	%r255, [%rd168];
	and.b32  	%r256, %r255, -16777216;
	xor.b32  	%r257, %r256, %r233;
	shr.u32 	%r258, %r253, 8;
	mul.wide.u32 	%rd169, %r258, 4;
	and.b64  	%rd170, %rd169, 1020;
	add.s64 	%rd171, %rd84, %rd170;
	ld.shared.u32 	%r259, [%rd171];
	and.b32  	%r260, %r259, 16711680;
	xor.b32  	%r261, %r257, %r260;
	mul.wide.u32 	%rd172, %r253, 4;
	and.b64  	%rd173, %rd172, 1020;
	add.s64 	%rd174, %rd88, %rd173;
	ld.shared.u32 	%r262, [%rd174];
	and.b32  	%r263, %r262, 65280;
	xor.b32  	%r264, %r261, %r263;
	shr.u32 	%r265, %r253, 24;
	mul.wide.u32 	%rd175, %r265, 4;
	add.s64 	%rd176, %rd91, %rd175;
	ld.shared.u8 	%r266, [%rd176];
	xor.b32  	%r267, %r264, %r266;
	ld.const.v2.u32 	{%r268, %r269}, [rcon+16];
	xor.b32  	%r271, %r267, %r268;
	xor.b32  	%r272, %r271, %r234;
	xor.b32  	%r273, %r272, %r199;
	xor.b32  	%r274, %r272, %r235;
	st.local.v4.u32 	[%rd1+160], {%r271, %r272, %r274, %r273};
	shr.u32 	%r275, %r273, 24;
	mul.wide.u32 	%rd177, %r275, 4;
	add.s64 	%rd178, %rd80, %rd177;
	ld.shared.u32 	%r276, [%rd178];
	and.b32  	%r277, %r276, -16777216;
	xor.b32  	%r278, %r277, %r250;
	shr.u32 	%r279, %r273, 16;
	mul.wide.u32 	%rd179, %r279, 4;
	and.b64  	%rd180, %rd179, 1020;
	add.s64 	%rd181, %rd84, %rd180;
	ld.shared.u32 	%r280, [%rd181];
	and.b32  	%r281, %r280, 16711680;
	xor.b32  	%r282, %r278, %r281;
	shr.u32 	%r283, %r273, 8;
	mul.wide.u32 	%rd182, %r283, 4;
	and.b64  	%rd183, %rd182, 1020;
	add.s64 	%rd184, %rd88, %rd183;
	ld.shared.u32 	%r284, [%rd184];
	and.b32  	%r285, %r284, 65280;
	xor.b32  	%r286, %r282, %r285;
	mul.wide.u32 	%rd185, %r273, 4;
	and.b64  	%rd186, %rd185, 1020;
	add.s64 	%rd187, %rd91, %rd186;
	ld.shared.u8 	%r287, [%rd187];
	xor.b32  	%r288, %r286, %r287;
	xor.b32  	%r289, %r288, %r251;
	xor.b32  	%r290, %r289, %r216;
	xor.b32  	%r291, %r289, %r252;
	st.local.v4.u32 	[%rd1+176], {%r288, %r289, %r291, %r290};
	bfe.u32 	%r292, %r290, 16, 8;
	mul.wide.u32 	%rd188, %r292, 4;
	add.s64 	%rd189, %rd80, %rd188;
	ld.shared.u32 	%r293, [%rd189];
	and.b32  	%r294, %r293, -16777216;
	xor.b32  	%r295, %r294, %r271;
	shr.u32 	%r296, %r290, 8;
	mul.wide.u32 	%rd190, %r296, 4;
	and.b64  	%rd191, %rd190, 1020;
	add.s64 	%rd192, %rd84, %rd191;
	ld.shared.u32 	%r297, [%rd192];
	and.b32  	%r298, %r297, 16711680;
	xor.b32  	%r299, %r295, %r298;
	mul.wide.u32 	%rd193, %r290, 4;
	and.b64  	%rd194, %rd193, 1020;
	add.s64 	%rd195, %rd88, %rd194;
	ld.shared.u32 	%r300, [%rd195];
	and.b32  	%r301, %r300, 65280;
	xor.b32  	%r302, %r299, %r301;
	shr.u32 	%r303, %r290, 24;
	mul.wide.u32 	%rd196, %r303, 4;
	add.s64 	%rd197, %rd91, %rd196;
	ld.shared.u8 	%r304, [%rd197];
	xor.b32  	%r305, %r302, %r304;
	xor.b32  	%r307, %r305, %r269;
	xor.b32  	%r308, %r307, %r272;
	xor.b32  	%r309, %r307, %r235;
	xor.b32  	%r310, %r309, %r273;
	st.local.v4.u32 	[%rd1+192], {%r307, %r308, %r309, %r310};
	shr.u32 	%r311, %r310, 24;
	mul.wide.u32 	%rd198, %r311, 4;
	add.s64 	%rd199, %rd80, %rd198;
	ld.shared.u32 	%r312, [%rd199];
	and.b32  	%r313, %r312, -16777216;
	xor.b32  	%r314, %r313, %r288;
	shr.u32 	%r315, %r310, 16;
	mul.wide.u32 	%rd200, %r315, 4;
	and.b64  	%rd201, %rd200, 1020;
	add.s64 	%rd202, %rd84, %rd201;
	ld.shared.u32 	%r316, [%rd202];
	and.b32  	%r317, %r316, 16711680;
	xor.b32  	%r318, %r314, %r317;
	shr.u32 	%r319, %r310, 8;
	mul.wide.u32 	%rd203, %r319, 4;
	and.b64  	%rd204, %rd203, 1020;
	add.s64 	%rd205, %rd88, %rd204;
	ld.shared.u32 	%r320, [%rd205];
	and.b32  	%r321, %r320, 65280;
	xor.b32  	%r322, %r318, %r321;
	mul.wide.u32 	%rd206, %r310, 4;
	and.b64  	%rd207, %rd206, 1020;
	add.s64 	%rd208, %rd91, %rd207;
	ld.shared.u8 	%r323, [%rd208];
	xor.b32  	%r324, %r322, %r323;
	xor.b32  	%r325, %r324, %r289;
	xor.b32  	%r326, %r324, %r252;
	xor.b32  	%r327, %r326, %r290;
	st.local.v4.u32 	[%rd1+208], {%r324, %r325, %r326, %r327};
	bfe.u32 	%r328, %r327, 16, 8;
	mul.wide.u32 	%rd209, %r328, 4;
	add.s64 	%rd210, %rd80, %rd209;
	ld.shared.u32 	%r329, [%rd210];
	and.b32  	%r330, %r329, -16777216;
	xor.b32  	%r331, %r330, %r307;
	shr.u32 	%r332, %r327, 8;
	mul.wide.u32 	%rd211, %r332, 4;
	and.b64  	%rd212, %rd211, 1020;
	add.s64 	%rd213, %rd84, %rd212;
	ld.shared.u32 	%r333, [%rd213];
	and.b32  	%r334, %r333, 16711680;
	xor.b32  	%r335, %r331, %r334;
	mul.wide.u32 	%rd214, %r327, 4;
	and.b64  	%rd215, %rd214, 1020;
	add.s64 	%rd216, %rd88, %rd215;
	ld.shared.u32 	%r336, [%rd216];
	and.b32  	%r337, %r336, 65280;
	xor.b32  	%r338, %r335, %r337;
	shr.u32 	%r339, %r327, 24;
	mul.wide.u32 	%rd217, %r339, 4;
	add.s64 	%rd218, %rd91, %rd217;
	ld.shared.u8 	%r340, [%rd218];
	xor.b32  	%r341, %r338, %r340;
	ld.const.u32 	%r342, [rcon+24];
	xor.b32  	%r1404, %r341, %r342;
	xor.b32  	%r343, %r1404, %r308;
	xor.b32  	%r344, %r343, %r273;
	xor.b32  	%r345, %r343, %r309;
	st.local.v4.u32 	[%rd1+224], {%r1404, %r343, %r345, %r344};
	mov.u32 	%r1407, 0;
	mov.u32 	%r1406, 56;
	bra.uni 	BB7_5;

BB7_18:
	mul.wide.u32 	%rd1163, %r1407, 4;
	add.s64 	%rd1164, %rd1, %rd1163;
	ld.local.u32 	%r1405, [%rd1164];
	mul.wide.u32 	%rd1165, %r1406, 4;
	add.s64 	%rd1166, %rd1, %rd1165;
	ld.local.u32 	%r1404, [%rd1166];

BB7_5:
	mul.wide.u32 	%rd219, %r1407, 4;
	add.s64 	%rd220, %rd1, %rd219;
	mul.wide.u32 	%rd221, %r1406, 4;
	add.s64 	%rd222, %rd1, %rd221;
	st.local.u32 	[%rd220], %r1404;
	st.local.u32 	[%rd222], %r1405;
	add.s32 	%r346, %r1407, 1;
	mul.wide.u32 	%rd223, %r346, 4;
	add.s64 	%rd224, %rd1, %rd223;
	ld.local.u32 	%r347, [%rd224];
	add.s32 	%r348, %r1406, 1;
	mul.wide.u32 	%rd225, %r348, 4;
	add.s64 	%rd226, %rd1, %rd225;
	ld.local.u32 	%r349, [%rd226];
	st.local.u32 	[%rd224], %r349;
	st.local.u32 	[%rd226], %r347;
	add.s32 	%r350, %r1407, 2;
	mul.wide.u32 	%rd227, %r350, 4;
	add.s64 	%rd228, %rd1, %rd227;
	ld.local.u32 	%r351, [%rd228];
	add.s32 	%r352, %r1406, 2;
	mul.wide.u32 	%rd229, %r352, 4;
	add.s64 	%rd230, %rd1, %rd229;
	ld.local.u32 	%r353, [%rd230];
	st.local.u32 	[%rd228], %r353;
	st.local.u32 	[%rd230], %r351;
	add.s32 	%r354, %r1407, 3;
	mul.wide.u32 	%rd231, %r354, 4;
	add.s64 	%rd232, %rd1, %rd231;
	ld.local.u32 	%r355, [%rd232];
	add.s32 	%r356, %r1406, 3;
	mul.wide.u32 	%rd233, %r356, 4;
	add.s64 	%rd234, %rd1, %rd233;
	ld.local.u32 	%r357, [%rd234];
	st.local.u32 	[%rd232], %r357;
	st.local.u32 	[%rd234], %r355;
	add.s32 	%r1406, %r1406, -4;
	add.s32 	%r1407, %r1407, 4;
	setp.lt.u32	%p12, %r1407, %r1406;
	@%p12 bra 	BB7_18;

	ld.param.u32 	%r1401, [m11300_comp_param_32];
	add.s64 	%rd1172, %rd1, 4;
	ld.param.u64 	%rd1168, [m11300_comp_param_18];
	mov.u64 	%rd1167, m11300_comp$s_te1;
	ld.local.v4.u32 	{%r358, %r359, %r360, %r361}, [%rd1172+12];
	shr.u32 	%r363, %r358, 24;
	mul.wide.u32 	%rd235, %r363, 4;
	add.s64 	%rd237, %rd1167, %rd235;
	ld.shared.u8 	%r364, [%rd237];
	mul.wide.u32 	%rd238, %r364, 4;
	mov.u64 	%rd239, m11300_comp$s_td0;
	add.s64 	%rd240, %rd239, %rd238;
	bfe.u32 	%r365, %r358, 16, 8;
	mul.wide.u32 	%rd241, %r365, 4;
	add.s64 	%rd242, %rd1167, %rd241;
	ld.shared.u8 	%r366, [%rd242];
	mul.wide.u32 	%rd243, %r366, 4;
	mov.u64 	%rd244, m11300_comp$s_td1;
	add.s64 	%rd245, %rd244, %rd243;
	ld.shared.u32 	%r367, [%rd245];
	ld.shared.u32 	%r368, [%rd240];
	xor.b32  	%r369, %r367, %r368;
	bfe.u32 	%r370, %r358, 8, 8;
	mul.wide.u32 	%rd246, %r370, 4;
	add.s64 	%rd247, %rd1167, %rd246;
	ld.shared.u8 	%r371, [%rd247];
	mul.wide.u32 	%rd248, %r371, 4;
	mov.u64 	%rd249, m11300_comp$s_td2;
	add.s64 	%rd250, %rd249, %rd248;
	ld.shared.u32 	%r372, [%rd250];
	xor.b32  	%r373, %r369, %r372;
	and.b32  	%r374, %r358, 255;
	mul.wide.u32 	%rd251, %r374, 4;
	add.s64 	%rd252, %rd1167, %rd251;
	ld.shared.u8 	%r375, [%rd252];
	mul.wide.u32 	%rd253, %r375, 4;
	mov.u64 	%rd254, m11300_comp$s_td3;
	add.s64 	%rd255, %rd254, %rd253;
	ld.shared.u32 	%r376, [%rd255];
	xor.b32  	%r377, %r373, %r376;
	ld.local.v4.u32 	{%r378, %r379, %r380, %r381}, [%rd1172+28];
	ld.local.v4.u32 	{%r382, %r383, %r384, %r385}, [%rd1172+44];
	ld.local.v4.u32 	{%r386, %r387, %r388, %r389}, [%rd1172+60];
	ld.local.v4.u32 	{%r390, %r391, %r392, %r393}, [%rd1172+76];
	ld.local.v4.u32 	{%r394, %r395, %r396, %r397}, [%rd1172+92];
	st.local.u32 	[%rd1172+12], %r377;
	shr.u32 	%r399, %r359, 24;
	mul.wide.u32 	%rd256, %r399, 4;
	add.s64 	%rd257, %rd1167, %rd256;
	ld.shared.u8 	%r400, [%rd257];
	mul.wide.u32 	%rd258, %r400, 4;
	add.s64 	%rd259, %rd239, %rd258;
	bfe.u32 	%r401, %r359, 16, 8;
	mul.wide.u32 	%rd260, %r401, 4;
	add.s64 	%rd261, %rd1167, %rd260;
	ld.shared.u8 	%r402, [%rd261];
	mul.wide.u32 	%rd262, %r402, 4;
	add.s64 	%rd263, %rd244, %rd262;
	ld.shared.u32 	%r403, [%rd263];
	ld.shared.u32 	%r404, [%rd259];
	xor.b32  	%r405, %r403, %r404;
	bfe.u32 	%r406, %r359, 8, 8;
	mul.wide.u32 	%rd264, %r406, 4;
	add.s64 	%rd265, %rd1167, %rd264;
	ld.shared.u8 	%r407, [%rd265];
	mul.wide.u32 	%rd266, %r407, 4;
	add.s64 	%rd267, %rd249, %rd266;
	ld.shared.u32 	%r408, [%rd267];
	xor.b32  	%r409, %r405, %r408;
	and.b32  	%r410, %r359, 255;
	mul.wide.u32 	%rd268, %r410, 4;
	add.s64 	%rd269, %rd1167, %rd268;
	ld.shared.u8 	%r411, [%rd269];
	mul.wide.u32 	%rd270, %r411, 4;
	add.s64 	%rd271, %rd254, %rd270;
	ld.shared.u32 	%r412, [%rd271];
	xor.b32  	%r413, %r409, %r412;
	st.local.u32 	[%rd1172+16], %r413;
	shr.u32 	%r415, %r360, 24;
	mul.wide.u32 	%rd272, %r415, 4;
	add.s64 	%rd273, %rd1167, %rd272;
	ld.shared.u8 	%r416, [%rd273];
	mul.wide.u32 	%rd274, %r416, 4;
	add.s64 	%rd275, %rd239, %rd274;
	bfe.u32 	%r417, %r360, 16, 8;
	mul.wide.u32 	%rd276, %r417, 4;
	add.s64 	%rd277, %rd1167, %rd276;
	ld.shared.u8 	%r418, [%rd277];
	mul.wide.u32 	%rd278, %r418, 4;
	add.s64 	%rd279, %rd244, %rd278;
	ld.shared.u32 	%r419, [%rd279];
	ld.shared.u32 	%r420, [%rd275];
	xor.b32  	%r421, %r419, %r420;
	bfe.u32 	%r422, %r360, 8, 8;
	mul.wide.u32 	%rd280, %r422, 4;
	add.s64 	%rd281, %rd1167, %rd280;
	ld.shared.u8 	%r423, [%rd281];
	mul.wide.u32 	%rd282, %r423, 4;
	add.s64 	%rd283, %rd249, %rd282;
	ld.shared.u32 	%r424, [%rd283];
	xor.b32  	%r425, %r421, %r424;
	and.b32  	%r426, %r360, 255;
	mul.wide.u32 	%rd284, %r426, 4;
	add.s64 	%rd285, %rd1167, %rd284;
	ld.shared.u8 	%r427, [%rd285];
	mul.wide.u32 	%rd286, %r427, 4;
	add.s64 	%rd287, %rd254, %rd286;
	ld.shared.u32 	%r428, [%rd287];
	xor.b32  	%r429, %r425, %r428;
	st.local.u32 	[%rd1172+20], %r429;
	shr.u32 	%r431, %r361, 24;
	mul.wide.u32 	%rd288, %r431, 4;
	add.s64 	%rd289, %rd1167, %rd288;
	ld.shared.u8 	%r432, [%rd289];
	mul.wide.u32 	%rd290, %r432, 4;
	add.s64 	%rd291, %rd239, %rd290;
	bfe.u32 	%r433, %r361, 16, 8;
	mul.wide.u32 	%rd292, %r433, 4;
	add.s64 	%rd293, %rd1167, %rd292;
	ld.shared.u8 	%r434, [%rd293];
	mul.wide.u32 	%rd294, %r434, 4;
	add.s64 	%rd295, %rd244, %rd294;
	ld.shared.u32 	%r435, [%rd295];
	ld.shared.u32 	%r436, [%rd291];
	xor.b32  	%r437, %r435, %r436;
	bfe.u32 	%r438, %r361, 8, 8;
	mul.wide.u32 	%rd296, %r438, 4;
	add.s64 	%rd297, %rd1167, %rd296;
	ld.shared.u8 	%r439, [%rd297];
	mul.wide.u32 	%rd298, %r439, 4;
	add.s64 	%rd299, %rd249, %rd298;
	ld.shared.u32 	%r440, [%rd299];
	xor.b32  	%r441, %r437, %r440;
	and.b32  	%r442, %r361, 255;
	mul.wide.u32 	%rd300, %r442, 4;
	add.s64 	%rd301, %rd1167, %rd300;
	ld.shared.u8 	%r443, [%rd301];
	mul.wide.u32 	%rd302, %r443, 4;
	add.s64 	%rd303, %rd254, %rd302;
	ld.shared.u32 	%r444, [%rd303];
	xor.b32  	%r445, %r441, %r444;
	st.local.u32 	[%rd1172+24], %r445;
	shr.u32 	%r447, %r378, 24;
	mul.wide.u32 	%rd304, %r447, 4;
	add.s64 	%rd305, %rd1167, %rd304;
	ld.shared.u8 	%r448, [%rd305];
	mul.wide.u32 	%rd306, %r448, 4;
	add.s64 	%rd307, %rd239, %rd306;
	bfe.u32 	%r449, %r378, 16, 8;
	mul.wide.u32 	%rd308, %r449, 4;
	add.s64 	%rd309, %rd1167, %rd308;
	ld.shared.u8 	%r450, [%rd309];
	mul.wide.u32 	%rd310, %r450, 4;
	add.s64 	%rd311, %rd244, %rd310;
	ld.shared.u32 	%r451, [%rd311];
	ld.shared.u32 	%r452, [%rd307];
	xor.b32  	%r453, %r451, %r452;
	bfe.u32 	%r454, %r378, 8, 8;
	mul.wide.u32 	%rd312, %r454, 4;
	add.s64 	%rd313, %rd1167, %rd312;
	ld.shared.u8 	%r455, [%rd313];
	mul.wide.u32 	%rd314, %r455, 4;
	add.s64 	%rd315, %rd249, %rd314;
	ld.shared.u32 	%r456, [%rd315];
	xor.b32  	%r457, %r453, %r456;
	and.b32  	%r458, %r378, 255;
	mul.wide.u32 	%rd316, %r458, 4;
	add.s64 	%rd317, %rd1167, %rd316;
	ld.shared.u8 	%r459, [%rd317];
	mul.wide.u32 	%rd318, %r459, 4;
	add.s64 	%rd319, %rd254, %rd318;
	ld.shared.u32 	%r460, [%rd319];
	xor.b32  	%r461, %r457, %r460;
	st.local.u32 	[%rd1172+28], %r461;
	shr.u32 	%r463, %r379, 24;
	mul.wide.u32 	%rd320, %r463, 4;
	add.s64 	%rd321, %rd1167, %rd320;
	ld.shared.u8 	%r464, [%rd321];
	mul.wide.u32 	%rd322, %r464, 4;
	add.s64 	%rd323, %rd239, %rd322;
	bfe.u32 	%r465, %r379, 16, 8;
	mul.wide.u32 	%rd324, %r465, 4;
	add.s64 	%rd325, %rd1167, %rd324;
	ld.shared.u8 	%r466, [%rd325];
	mul.wide.u32 	%rd326, %r466, 4;
	add.s64 	%rd327, %rd244, %rd326;
	ld.shared.u32 	%r467, [%rd327];
	ld.shared.u32 	%r468, [%rd323];
	xor.b32  	%r469, %r467, %r468;
	bfe.u32 	%r470, %r379, 8, 8;
	mul.wide.u32 	%rd328, %r470, 4;
	add.s64 	%rd329, %rd1167, %rd328;
	ld.shared.u8 	%r471, [%rd329];
	mul.wide.u32 	%rd330, %r471, 4;
	add.s64 	%rd331, %rd249, %rd330;
	ld.shared.u32 	%r472, [%rd331];
	xor.b32  	%r473, %r469, %r472;
	and.b32  	%r474, %r379, 255;
	mul.wide.u32 	%rd332, %r474, 4;
	add.s64 	%rd333, %rd1167, %rd332;
	ld.shared.u8 	%r475, [%rd333];
	mul.wide.u32 	%rd334, %r475, 4;
	add.s64 	%rd335, %rd254, %rd334;
	ld.shared.u32 	%r476, [%rd335];
	xor.b32  	%r477, %r473, %r476;
	st.local.u32 	[%rd1172+32], %r477;
	shr.u32 	%r479, %r380, 24;
	mul.wide.u32 	%rd336, %r479, 4;
	add.s64 	%rd337, %rd1167, %rd336;
	ld.shared.u8 	%r480, [%rd337];
	mul.wide.u32 	%rd338, %r480, 4;
	add.s64 	%rd339, %rd239, %rd338;
	bfe.u32 	%r481, %r380, 16, 8;
	mul.wide.u32 	%rd340, %r481, 4;
	add.s64 	%rd341, %rd1167, %rd340;
	ld.shared.u8 	%r482, [%rd341];
	mul.wide.u32 	%rd342, %r482, 4;
	add.s64 	%rd343, %rd244, %rd342;
	ld.shared.u32 	%r483, [%rd343];
	ld.shared.u32 	%r484, [%rd339];
	xor.b32  	%r485, %r483, %r484;
	bfe.u32 	%r486, %r380, 8, 8;
	mul.wide.u32 	%rd344, %r486, 4;
	add.s64 	%rd345, %rd1167, %rd344;
	ld.shared.u8 	%r487, [%rd345];
	mul.wide.u32 	%rd346, %r487, 4;
	add.s64 	%rd347, %rd249, %rd346;
	ld.shared.u32 	%r488, [%rd347];
	xor.b32  	%r489, %r485, %r488;
	and.b32  	%r490, %r380, 255;
	mul.wide.u32 	%rd348, %r490, 4;
	add.s64 	%rd349, %rd1167, %rd348;
	ld.shared.u8 	%r491, [%rd349];
	mul.wide.u32 	%rd350, %r491, 4;
	add.s64 	%rd351, %rd254, %rd350;
	ld.shared.u32 	%r492, [%rd351];
	xor.b32  	%r493, %r489, %r492;
	st.local.u32 	[%rd1172+36], %r493;
	shr.u32 	%r495, %r381, 24;
	mul.wide.u32 	%rd352, %r495, 4;
	add.s64 	%rd353, %rd1167, %rd352;
	ld.shared.u8 	%r496, [%rd353];
	mul.wide.u32 	%rd354, %r496, 4;
	add.s64 	%rd355, %rd239, %rd354;
	bfe.u32 	%r497, %r381, 16, 8;
	mul.wide.u32 	%rd356, %r497, 4;
	add.s64 	%rd357, %rd1167, %rd356;
	ld.shared.u8 	%r498, [%rd357];
	mul.wide.u32 	%rd358, %r498, 4;
	add.s64 	%rd359, %rd244, %rd358;
	ld.shared.u32 	%r499, [%rd359];
	ld.shared.u32 	%r500, [%rd355];
	xor.b32  	%r501, %r499, %r500;
	bfe.u32 	%r502, %r381, 8, 8;
	mul.wide.u32 	%rd360, %r502, 4;
	add.s64 	%rd361, %rd1167, %rd360;
	ld.shared.u8 	%r503, [%rd361];
	mul.wide.u32 	%rd362, %r503, 4;
	add.s64 	%rd363, %rd249, %rd362;
	ld.shared.u32 	%r504, [%rd363];
	xor.b32  	%r505, %r501, %r504;
	and.b32  	%r506, %r381, 255;
	mul.wide.u32 	%rd364, %r506, 4;
	add.s64 	%rd365, %rd1167, %rd364;
	ld.shared.u8 	%r507, [%rd365];
	mul.wide.u32 	%rd366, %r507, 4;
	add.s64 	%rd367, %rd254, %rd366;
	ld.shared.u32 	%r508, [%rd367];
	xor.b32  	%r509, %r505, %r508;
	st.local.u32 	[%rd1172+40], %r509;
	shr.u32 	%r511, %r382, 24;
	mul.wide.u32 	%rd368, %r511, 4;
	add.s64 	%rd369, %rd1167, %rd368;
	ld.shared.u8 	%r512, [%rd369];
	mul.wide.u32 	%rd370, %r512, 4;
	add.s64 	%rd371, %rd239, %rd370;
	bfe.u32 	%r513, %r382, 16, 8;
	mul.wide.u32 	%rd372, %r513, 4;
	add.s64 	%rd373, %rd1167, %rd372;
	ld.shared.u8 	%r514, [%rd373];
	mul.wide.u32 	%rd374, %r514, 4;
	add.s64 	%rd375, %rd244, %rd374;
	ld.shared.u32 	%r515, [%rd375];
	ld.shared.u32 	%r516, [%rd371];
	xor.b32  	%r517, %r515, %r516;
	bfe.u32 	%r518, %r382, 8, 8;
	mul.wide.u32 	%rd376, %r518, 4;
	add.s64 	%rd377, %rd1167, %rd376;
	ld.shared.u8 	%r519, [%rd377];
	mul.wide.u32 	%rd378, %r519, 4;
	add.s64 	%rd379, %rd249, %rd378;
	ld.shared.u32 	%r520, [%rd379];
	xor.b32  	%r521, %r517, %r520;
	and.b32  	%r522, %r382, 255;
	mul.wide.u32 	%rd380, %r522, 4;
	add.s64 	%rd381, %rd1167, %rd380;
	ld.shared.u8 	%r523, [%rd381];
	mul.wide.u32 	%rd382, %r523, 4;
	add.s64 	%rd383, %rd254, %rd382;
	ld.shared.u32 	%r524, [%rd383];
	xor.b32  	%r525, %r521, %r524;
	st.local.u32 	[%rd1172+44], %r525;
	shr.u32 	%r527, %r383, 24;
	mul.wide.u32 	%rd384, %r527, 4;
	add.s64 	%rd385, %rd1167, %rd384;
	ld.shared.u8 	%r528, [%rd385];
	mul.wide.u32 	%rd386, %r528, 4;
	add.s64 	%rd387, %rd239, %rd386;
	bfe.u32 	%r529, %r383, 16, 8;
	mul.wide.u32 	%rd388, %r529, 4;
	add.s64 	%rd389, %rd1167, %rd388;
	ld.shared.u8 	%r530, [%rd389];
	mul.wide.u32 	%rd390, %r530, 4;
	add.s64 	%rd391, %rd244, %rd390;
	ld.shared.u32 	%r531, [%rd391];
	ld.shared.u32 	%r532, [%rd387];
	xor.b32  	%r533, %r531, %r532;
	bfe.u32 	%r534, %r383, 8, 8;
	mul.wide.u32 	%rd392, %r534, 4;
	add.s64 	%rd393, %rd1167, %rd392;
	ld.shared.u8 	%r535, [%rd393];
	mul.wide.u32 	%rd394, %r535, 4;
	add.s64 	%rd395, %rd249, %rd394;
	ld.shared.u32 	%r536, [%rd395];
	xor.b32  	%r537, %r533, %r536;
	and.b32  	%r538, %r383, 255;
	mul.wide.u32 	%rd396, %r538, 4;
	add.s64 	%rd397, %rd1167, %rd396;
	ld.shared.u8 	%r539, [%rd397];
	mul.wide.u32 	%rd398, %r539, 4;
	add.s64 	%rd399, %rd254, %rd398;
	ld.shared.u32 	%r540, [%rd399];
	xor.b32  	%r541, %r537, %r540;
	st.local.u32 	[%rd1172+48], %r541;
	shr.u32 	%r543, %r384, 24;
	mul.wide.u32 	%rd400, %r543, 4;
	add.s64 	%rd401, %rd1167, %rd400;
	ld.shared.u8 	%r544, [%rd401];
	mul.wide.u32 	%rd402, %r544, 4;
	add.s64 	%rd403, %rd239, %rd402;
	bfe.u32 	%r545, %r384, 16, 8;
	mul.wide.u32 	%rd404, %r545, 4;
	add.s64 	%rd405, %rd1167, %rd404;
	ld.shared.u8 	%r546, [%rd405];
	mul.wide.u32 	%rd406, %r546, 4;
	add.s64 	%rd407, %rd244, %rd406;
	ld.shared.u32 	%r547, [%rd407];
	ld.shared.u32 	%r548, [%rd403];
	xor.b32  	%r549, %r547, %r548;
	bfe.u32 	%r550, %r384, 8, 8;
	mul.wide.u32 	%rd408, %r550, 4;
	add.s64 	%rd409, %rd1167, %rd408;
	ld.shared.u8 	%r551, [%rd409];
	mul.wide.u32 	%rd410, %r551, 4;
	add.s64 	%rd411, %rd249, %rd410;
	ld.shared.u32 	%r552, [%rd411];
	xor.b32  	%r553, %r549, %r552;
	and.b32  	%r554, %r384, 255;
	mul.wide.u32 	%rd412, %r554, 4;
	add.s64 	%rd413, %rd1167, %rd412;
	ld.shared.u8 	%r555, [%rd413];
	mul.wide.u32 	%rd414, %r555, 4;
	add.s64 	%rd415, %rd254, %rd414;
	ld.shared.u32 	%r556, [%rd415];
	xor.b32  	%r557, %r553, %r556;
	st.local.u32 	[%rd1172+52], %r557;
	shr.u32 	%r559, %r385, 24;
	mul.wide.u32 	%rd416, %r559, 4;
	add.s64 	%rd417, %rd1167, %rd416;
	ld.shared.u8 	%r560, [%rd417];
	mul.wide.u32 	%rd418, %r560, 4;
	add.s64 	%rd419, %rd239, %rd418;
	bfe.u32 	%r561, %r385, 16, 8;
	mul.wide.u32 	%rd420, %r561, 4;
	add.s64 	%rd421, %rd1167, %rd420;
	ld.shared.u8 	%r562, [%rd421];
	mul.wide.u32 	%rd422, %r562, 4;
	add.s64 	%rd423, %rd244, %rd422;
	ld.shared.u32 	%r563, [%rd423];
	ld.shared.u32 	%r564, [%rd419];
	xor.b32  	%r565, %r563, %r564;
	bfe.u32 	%r566, %r385, 8, 8;
	mul.wide.u32 	%rd424, %r566, 4;
	add.s64 	%rd425, %rd1167, %rd424;
	ld.shared.u8 	%r567, [%rd425];
	mul.wide.u32 	%rd426, %r567, 4;
	add.s64 	%rd427, %rd249, %rd426;
	ld.shared.u32 	%r568, [%rd427];
	xor.b32  	%r569, %r565, %r568;
	and.b32  	%r570, %r385, 255;
	mul.wide.u32 	%rd428, %r570, 4;
	add.s64 	%rd429, %rd1167, %rd428;
	ld.shared.u8 	%r571, [%rd429];
	mul.wide.u32 	%rd430, %r571, 4;
	add.s64 	%rd431, %rd254, %rd430;
	ld.shared.u32 	%r572, [%rd431];
	xor.b32  	%r573, %r569, %r572;
	st.local.u32 	[%rd1172+56], %r573;
	shr.u32 	%r575, %r386, 24;
	mul.wide.u32 	%rd432, %r575, 4;
	add.s64 	%rd433, %rd1167, %rd432;
	ld.shared.u8 	%r576, [%rd433];
	mul.wide.u32 	%rd434, %r576, 4;
	add.s64 	%rd435, %rd239, %rd434;
	bfe.u32 	%r577, %r386, 16, 8;
	mul.wide.u32 	%rd436, %r577, 4;
	add.s64 	%rd437, %rd1167, %rd436;
	ld.shared.u8 	%r578, [%rd437];
	mul.wide.u32 	%rd438, %r578, 4;
	add.s64 	%rd439, %rd244, %rd438;
	ld.shared.u32 	%r579, [%rd439];
	ld.shared.u32 	%r580, [%rd435];
	xor.b32  	%r581, %r579, %r580;
	bfe.u32 	%r582, %r386, 8, 8;
	mul.wide.u32 	%rd440, %r582, 4;
	add.s64 	%rd441, %rd1167, %rd440;
	ld.shared.u8 	%r583, [%rd441];
	mul.wide.u32 	%rd442, %r583, 4;
	add.s64 	%rd443, %rd249, %rd442;
	ld.shared.u32 	%r584, [%rd443];
	xor.b32  	%r585, %r581, %r584;
	and.b32  	%r586, %r386, 255;
	mul.wide.u32 	%rd444, %r586, 4;
	add.s64 	%rd445, %rd1167, %rd444;
	ld.shared.u8 	%r587, [%rd445];
	mul.wide.u32 	%rd446, %r587, 4;
	add.s64 	%rd447, %rd254, %rd446;
	ld.shared.u32 	%r588, [%rd447];
	xor.b32  	%r589, %r585, %r588;
	st.local.u32 	[%rd1172+60], %r589;
	shr.u32 	%r591, %r387, 24;
	mul.wide.u32 	%rd448, %r591, 4;
	add.s64 	%rd449, %rd1167, %rd448;
	ld.shared.u8 	%r592, [%rd449];
	mul.wide.u32 	%rd450, %r592, 4;
	add.s64 	%rd451, %rd239, %rd450;
	bfe.u32 	%r593, %r387, 16, 8;
	mul.wide.u32 	%rd452, %r593, 4;
	add.s64 	%rd453, %rd1167, %rd452;
	ld.shared.u8 	%r594, [%rd453];
	mul.wide.u32 	%rd454, %r594, 4;
	add.s64 	%rd455, %rd244, %rd454;
	ld.shared.u32 	%r595, [%rd455];
	ld.shared.u32 	%r596, [%rd451];
	xor.b32  	%r597, %r595, %r596;
	bfe.u32 	%r598, %r387, 8, 8;
	mul.wide.u32 	%rd456, %r598, 4;
	add.s64 	%rd457, %rd1167, %rd456;
	ld.shared.u8 	%r599, [%rd457];
	mul.wide.u32 	%rd458, %r599, 4;
	add.s64 	%rd459, %rd249, %rd458;
	ld.shared.u32 	%r600, [%rd459];
	xor.b32  	%r601, %r597, %r600;
	and.b32  	%r602, %r387, 255;
	mul.wide.u32 	%rd460, %r602, 4;
	add.s64 	%rd461, %rd1167, %rd460;
	ld.shared.u8 	%r603, [%rd461];
	mul.wide.u32 	%rd462, %r603, 4;
	add.s64 	%rd463, %rd254, %rd462;
	ld.shared.u32 	%r604, [%rd463];
	xor.b32  	%r605, %r601, %r604;
	st.local.u32 	[%rd1172+64], %r605;
	shr.u32 	%r607, %r388, 24;
	mul.wide.u32 	%rd464, %r607, 4;
	add.s64 	%rd465, %rd1167, %rd464;
	ld.shared.u8 	%r608, [%rd465];
	mul.wide.u32 	%rd466, %r608, 4;
	add.s64 	%rd467, %rd239, %rd466;
	bfe.u32 	%r609, %r388, 16, 8;
	mul.wide.u32 	%rd468, %r609, 4;
	add.s64 	%rd469, %rd1167, %rd468;
	ld.shared.u8 	%r610, [%rd469];
	mul.wide.u32 	%rd470, %r610, 4;
	add.s64 	%rd471, %rd244, %rd470;
	ld.shared.u32 	%r611, [%rd471];
	ld.shared.u32 	%r612, [%rd467];
	xor.b32  	%r613, %r611, %r612;
	bfe.u32 	%r614, %r388, 8, 8;
	mul.wide.u32 	%rd472, %r614, 4;
	add.s64 	%rd473, %rd1167, %rd472;
	ld.shared.u8 	%r615, [%rd473];
	mul.wide.u32 	%rd474, %r615, 4;
	add.s64 	%rd475, %rd249, %rd474;
	ld.shared.u32 	%r616, [%rd475];
	xor.b32  	%r617, %r613, %r616;
	and.b32  	%r618, %r388, 255;
	mul.wide.u32 	%rd476, %r618, 4;
	add.s64 	%rd477, %rd1167, %rd476;
	ld.shared.u8 	%r619, [%rd477];
	mul.wide.u32 	%rd478, %r619, 4;
	add.s64 	%rd479, %rd254, %rd478;
	ld.shared.u32 	%r620, [%rd479];
	xor.b32  	%r621, %r617, %r620;
	st.local.u32 	[%rd1172+68], %r621;
	shr.u32 	%r623, %r389, 24;
	mul.wide.u32 	%rd480, %r623, 4;
	add.s64 	%rd481, %rd1167, %rd480;
	ld.shared.u8 	%r624, [%rd481];
	mul.wide.u32 	%rd482, %r624, 4;
	add.s64 	%rd483, %rd239, %rd482;
	bfe.u32 	%r625, %r389, 16, 8;
	mul.wide.u32 	%rd484, %r625, 4;
	add.s64 	%rd485, %rd1167, %rd484;
	ld.shared.u8 	%r626, [%rd485];
	mul.wide.u32 	%rd486, %r626, 4;
	add.s64 	%rd487, %rd244, %rd486;
	ld.shared.u32 	%r627, [%rd487];
	ld.shared.u32 	%r628, [%rd483];
	xor.b32  	%r629, %r627, %r628;
	bfe.u32 	%r630, %r389, 8, 8;
	mul.wide.u32 	%rd488, %r630, 4;
	add.s64 	%rd489, %rd1167, %rd488;
	ld.shared.u8 	%r631, [%rd489];
	mul.wide.u32 	%rd490, %r631, 4;
	add.s64 	%rd491, %rd249, %rd490;
	ld.shared.u32 	%r632, [%rd491];
	xor.b32  	%r633, %r629, %r632;
	and.b32  	%r634, %r389, 255;
	mul.wide.u32 	%rd492, %r634, 4;
	add.s64 	%rd493, %rd1167, %rd492;
	ld.shared.u8 	%r635, [%rd493];
	mul.wide.u32 	%rd494, %r635, 4;
	add.s64 	%rd495, %rd254, %rd494;
	ld.shared.u32 	%r636, [%rd495];
	xor.b32  	%r637, %r633, %r636;
	st.local.u32 	[%rd1172+72], %r637;
	shr.u32 	%r639, %r390, 24;
	mul.wide.u32 	%rd496, %r639, 4;
	add.s64 	%rd497, %rd1167, %rd496;
	ld.shared.u8 	%r640, [%rd497];
	mul.wide.u32 	%rd498, %r640, 4;
	add.s64 	%rd499, %rd239, %rd498;
	bfe.u32 	%r641, %r390, 16, 8;
	mul.wide.u32 	%rd500, %r641, 4;
	add.s64 	%rd501, %rd1167, %rd500;
	ld.shared.u8 	%r642, [%rd501];
	mul.wide.u32 	%rd502, %r642, 4;
	add.s64 	%rd503, %rd244, %rd502;
	ld.shared.u32 	%r643, [%rd503];
	ld.shared.u32 	%r644, [%rd499];
	xor.b32  	%r645, %r643, %r644;
	bfe.u32 	%r646, %r390, 8, 8;
	mul.wide.u32 	%rd504, %r646, 4;
	add.s64 	%rd505, %rd1167, %rd504;
	ld.shared.u8 	%r647, [%rd505];
	mul.wide.u32 	%rd506, %r647, 4;
	add.s64 	%rd507, %rd249, %rd506;
	ld.shared.u32 	%r648, [%rd507];
	xor.b32  	%r649, %r645, %r648;
	and.b32  	%r650, %r390, 255;
	mul.wide.u32 	%rd508, %r650, 4;
	add.s64 	%rd509, %rd1167, %rd508;
	ld.shared.u8 	%r651, [%rd509];
	mul.wide.u32 	%rd510, %r651, 4;
	add.s64 	%rd511, %rd254, %rd510;
	ld.shared.u32 	%r652, [%rd511];
	xor.b32  	%r653, %r649, %r652;
	st.local.u32 	[%rd1172+76], %r653;
	shr.u32 	%r655, %r391, 24;
	mul.wide.u32 	%rd512, %r655, 4;
	add.s64 	%rd513, %rd1167, %rd512;
	ld.shared.u8 	%r656, [%rd513];
	mul.wide.u32 	%rd514, %r656, 4;
	add.s64 	%rd515, %rd239, %rd514;
	bfe.u32 	%r657, %r391, 16, 8;
	mul.wide.u32 	%rd516, %r657, 4;
	add.s64 	%rd517, %rd1167, %rd516;
	ld.shared.u8 	%r658, [%rd517];
	mul.wide.u32 	%rd518, %r658, 4;
	add.s64 	%rd519, %rd244, %rd518;
	ld.shared.u32 	%r659, [%rd519];
	ld.shared.u32 	%r660, [%rd515];
	xor.b32  	%r661, %r659, %r660;
	bfe.u32 	%r662, %r391, 8, 8;
	mul.wide.u32 	%rd520, %r662, 4;
	add.s64 	%rd521, %rd1167, %rd520;
	ld.shared.u8 	%r663, [%rd521];
	mul.wide.u32 	%rd522, %r663, 4;
	add.s64 	%rd523, %rd249, %rd522;
	ld.shared.u32 	%r664, [%rd523];
	xor.b32  	%r665, %r661, %r664;
	and.b32  	%r666, %r391, 255;
	mul.wide.u32 	%rd524, %r666, 4;
	add.s64 	%rd525, %rd1167, %rd524;
	ld.shared.u8 	%r667, [%rd525];
	mul.wide.u32 	%rd526, %r667, 4;
	add.s64 	%rd527, %rd254, %rd526;
	ld.shared.u32 	%r668, [%rd527];
	xor.b32  	%r669, %r665, %r668;
	st.local.u32 	[%rd1172+80], %r669;
	shr.u32 	%r671, %r392, 24;
	mul.wide.u32 	%rd528, %r671, 4;
	add.s64 	%rd529, %rd1167, %rd528;
	ld.shared.u8 	%r672, [%rd529];
	mul.wide.u32 	%rd530, %r672, 4;
	add.s64 	%rd531, %rd239, %rd530;
	bfe.u32 	%r673, %r392, 16, 8;
	mul.wide.u32 	%rd532, %r673, 4;
	add.s64 	%rd533, %rd1167, %rd532;
	ld.shared.u8 	%r674, [%rd533];
	mul.wide.u32 	%rd534, %r674, 4;
	add.s64 	%rd535, %rd244, %rd534;
	ld.shared.u32 	%r675, [%rd535];
	ld.shared.u32 	%r676, [%rd531];
	xor.b32  	%r677, %r675, %r676;
	bfe.u32 	%r678, %r392, 8, 8;
	mul.wide.u32 	%rd536, %r678, 4;
	add.s64 	%rd537, %rd1167, %rd536;
	ld.shared.u8 	%r679, [%rd537];
	mul.wide.u32 	%rd538, %r679, 4;
	add.s64 	%rd539, %rd249, %rd538;
	ld.shared.u32 	%r680, [%rd539];
	xor.b32  	%r681, %r677, %r680;
	and.b32  	%r682, %r392, 255;
	mul.wide.u32 	%rd540, %r682, 4;
	add.s64 	%rd541, %rd1167, %rd540;
	ld.shared.u8 	%r683, [%rd541];
	mul.wide.u32 	%rd542, %r683, 4;
	add.s64 	%rd543, %rd254, %rd542;
	ld.shared.u32 	%r684, [%rd543];
	xor.b32  	%r685, %r681, %r684;
	st.local.u32 	[%rd1172+84], %r685;
	shr.u32 	%r687, %r393, 24;
	mul.wide.u32 	%rd544, %r687, 4;
	add.s64 	%rd545, %rd1167, %rd544;
	ld.shared.u8 	%r688, [%rd545];
	mul.wide.u32 	%rd546, %r688, 4;
	add.s64 	%rd547, %rd239, %rd546;
	bfe.u32 	%r689, %r393, 16, 8;
	mul.wide.u32 	%rd548, %r689, 4;
	add.s64 	%rd549, %rd1167, %rd548;
	ld.shared.u8 	%r690, [%rd549];
	mul.wide.u32 	%rd550, %r690, 4;
	add.s64 	%rd551, %rd244, %rd550;
	ld.shared.u32 	%r691, [%rd551];
	ld.shared.u32 	%r692, [%rd547];
	xor.b32  	%r693, %r691, %r692;
	bfe.u32 	%r694, %r393, 8, 8;
	mul.wide.u32 	%rd552, %r694, 4;
	add.s64 	%rd553, %rd1167, %rd552;
	ld.shared.u8 	%r695, [%rd553];
	mul.wide.u32 	%rd554, %r695, 4;
	add.s64 	%rd555, %rd249, %rd554;
	ld.shared.u32 	%r696, [%rd555];
	xor.b32  	%r697, %r693, %r696;
	and.b32  	%r698, %r393, 255;
	mul.wide.u32 	%rd556, %r698, 4;
	add.s64 	%rd557, %rd1167, %rd556;
	ld.shared.u8 	%r699, [%rd557];
	mul.wide.u32 	%rd558, %r699, 4;
	add.s64 	%rd559, %rd254, %rd558;
	ld.shared.u32 	%r700, [%rd559];
	xor.b32  	%r701, %r697, %r700;
	st.local.u32 	[%rd1172+88], %r701;
	shr.u32 	%r703, %r394, 24;
	mul.wide.u32 	%rd560, %r703, 4;
	add.s64 	%rd561, %rd1167, %rd560;
	ld.shared.u8 	%r704, [%rd561];
	mul.wide.u32 	%rd562, %r704, 4;
	add.s64 	%rd563, %rd239, %rd562;
	bfe.u32 	%r705, %r394, 16, 8;
	mul.wide.u32 	%rd564, %r705, 4;
	add.s64 	%rd565, %rd1167, %rd564;
	ld.shared.u8 	%r706, [%rd565];
	mul.wide.u32 	%rd566, %r706, 4;
	add.s64 	%rd567, %rd244, %rd566;
	ld.shared.u32 	%r707, [%rd567];
	ld.shared.u32 	%r708, [%rd563];
	xor.b32  	%r709, %r707, %r708;
	bfe.u32 	%r710, %r394, 8, 8;
	mul.wide.u32 	%rd568, %r710, 4;
	add.s64 	%rd569, %rd1167, %rd568;
	ld.shared.u8 	%r711, [%rd569];
	mul.wide.u32 	%rd570, %r711, 4;
	add.s64 	%rd571, %rd249, %rd570;
	ld.shared.u32 	%r712, [%rd571];
	xor.b32  	%r713, %r709, %r712;
	and.b32  	%r714, %r394, 255;
	mul.wide.u32 	%rd572, %r714, 4;
	add.s64 	%rd573, %rd1167, %rd572;
	ld.shared.u8 	%r715, [%rd573];
	mul.wide.u32 	%rd574, %r715, 4;
	add.s64 	%rd575, %rd254, %rd574;
	ld.shared.u32 	%r716, [%rd575];
	xor.b32  	%r717, %r713, %r716;
	st.local.u32 	[%rd1172+92], %r717;
	shr.u32 	%r719, %r395, 24;
	mul.wide.u32 	%rd576, %r719, 4;
	add.s64 	%rd577, %rd1167, %rd576;
	ld.shared.u8 	%r720, [%rd577];
	mul.wide.u32 	%rd578, %r720, 4;
	add.s64 	%rd579, %rd239, %rd578;
	bfe.u32 	%r721, %r395, 16, 8;
	mul.wide.u32 	%rd580, %r721, 4;
	add.s64 	%rd581, %rd1167, %rd580;
	ld.shared.u8 	%r722, [%rd581];
	mul.wide.u32 	%rd582, %r722, 4;
	add.s64 	%rd583, %rd244, %rd582;
	ld.shared.u32 	%r723, [%rd583];
	ld.shared.u32 	%r724, [%rd579];
	xor.b32  	%r725, %r723, %r724;
	bfe.u32 	%r726, %r395, 8, 8;
	mul.wide.u32 	%rd584, %r726, 4;
	add.s64 	%rd585, %rd1167, %rd584;
	ld.shared.u8 	%r727, [%rd585];
	mul.wide.u32 	%rd586, %r727, 4;
	add.s64 	%rd587, %rd249, %rd586;
	ld.shared.u32 	%r728, [%rd587];
	xor.b32  	%r729, %r725, %r728;
	and.b32  	%r730, %r395, 255;
	mul.wide.u32 	%rd588, %r730, 4;
	add.s64 	%rd589, %rd1167, %rd588;
	ld.shared.u8 	%r731, [%rd589];
	mul.wide.u32 	%rd590, %r731, 4;
	add.s64 	%rd591, %rd254, %rd590;
	ld.shared.u32 	%r732, [%rd591];
	xor.b32  	%r733, %r729, %r732;
	st.local.u32 	[%rd1172+96], %r733;
	shr.u32 	%r735, %r396, 24;
	mul.wide.u32 	%rd592, %r735, 4;
	add.s64 	%rd593, %rd1167, %rd592;
	ld.shared.u8 	%r736, [%rd593];
	mul.wide.u32 	%rd594, %r736, 4;
	add.s64 	%rd595, %rd239, %rd594;
	bfe.u32 	%r737, %r396, 16, 8;
	mul.wide.u32 	%rd596, %r737, 4;
	add.s64 	%rd597, %rd1167, %rd596;
	ld.shared.u8 	%r738, [%rd597];
	mul.wide.u32 	%rd598, %r738, 4;
	add.s64 	%rd599, %rd244, %rd598;
	ld.shared.u32 	%r739, [%rd599];
	ld.shared.u32 	%r740, [%rd595];
	xor.b32  	%r741, %r739, %r740;
	bfe.u32 	%r742, %r396, 8, 8;
	mul.wide.u32 	%rd600, %r742, 4;
	add.s64 	%rd601, %rd1167, %rd600;
	ld.shared.u8 	%r743, [%rd601];
	mul.wide.u32 	%rd602, %r743, 4;
	add.s64 	%rd603, %rd249, %rd602;
	ld.shared.u32 	%r744, [%rd603];
	xor.b32  	%r745, %r741, %r744;
	and.b32  	%r746, %r396, 255;
	mul.wide.u32 	%rd604, %r746, 4;
	add.s64 	%rd605, %rd1167, %rd604;
	ld.shared.u8 	%r747, [%rd605];
	mul.wide.u32 	%rd606, %r747, 4;
	add.s64 	%rd607, %rd254, %rd606;
	ld.shared.u32 	%r748, [%rd607];
	xor.b32  	%r749, %r745, %r748;
	st.local.u32 	[%rd1172+100], %r749;
	ld.local.u32 	%r750, [%rd1172+104];
	shr.u32 	%r751, %r750, 24;
	mul.wide.u32 	%rd608, %r751, 4;
	add.s64 	%rd609, %rd1167, %rd608;
	ld.shared.u8 	%r752, [%rd609];
	mul.wide.u32 	%rd610, %r752, 4;
	add.s64 	%rd611, %rd239, %rd610;
	bfe.u32 	%r753, %r750, 16, 8;
	mul.wide.u32 	%rd612, %r753, 4;
	add.s64 	%rd613, %rd1167, %rd612;
	ld.shared.u8 	%r754, [%rd613];
	mul.wide.u32 	%rd614, %r754, 4;
	add.s64 	%rd615, %rd244, %rd614;
	ld.shared.u32 	%r755, [%rd615];
	ld.shared.u32 	%r756, [%rd611];
	xor.b32  	%r757, %r755, %r756;
	bfe.u32 	%r758, %r750, 8, 8;
	mul.wide.u32 	%rd616, %r758, 4;
	add.s64 	%rd617, %rd1167, %rd616;
	ld.shared.u8 	%r759, [%rd617];
	mul.wide.u32 	%rd618, %r759, 4;
	add.s64 	%rd619, %rd249, %rd618;
	ld.shared.u32 	%r760, [%rd619];
	xor.b32  	%r761, %r757, %r760;
	and.b32  	%r762, %r750, 255;
	mul.wide.u32 	%rd620, %r762, 4;
	add.s64 	%rd621, %rd1167, %rd620;
	ld.shared.u8 	%r763, [%rd621];
	mul.wide.u32 	%rd622, %r763, 4;
	add.s64 	%rd623, %rd254, %rd622;
	ld.shared.u32 	%r764, [%rd623];
	xor.b32  	%r765, %r761, %r764;
	ld.local.v4.u32 	{%r766, %r767, %r768, %r769}, [%rd1172+108];
	ld.local.v4.u32 	{%r770, %r771, %r772, %r773}, [%rd1172+124];
	ld.local.v4.u32 	{%r774, %r775, %r776, %r777}, [%rd1172+140];
	ld.local.v4.u32 	{%r778, %r779, %r780, %r781}, [%rd1172+156];
	ld.local.v4.u32 	{%r782, %r783, %r784, %r785}, [%rd1172+172];
	ld.local.v2.u32 	{%r786, %r787}, [%rd1172+188];
	st.local.u32 	[%rd1172+104], %r765;
	shr.u32 	%r789, %r766, 24;
	mul.wide.u32 	%rd624, %r789, 4;
	add.s64 	%rd625, %rd1167, %rd624;
	ld.shared.u8 	%r790, [%rd625];
	mul.wide.u32 	%rd626, %r790, 4;
	add.s64 	%rd627, %rd239, %rd626;
	bfe.u32 	%r791, %r766, 16, 8;
	mul.wide.u32 	%rd628, %r791, 4;
	add.s64 	%rd629, %rd1167, %rd628;
	ld.shared.u8 	%r792, [%rd629];
	mul.wide.u32 	%rd630, %r792, 4;
	add.s64 	%rd631, %rd244, %rd630;
	ld.shared.u32 	%r793, [%rd631];
	ld.shared.u32 	%r794, [%rd627];
	xor.b32  	%r795, %r793, %r794;
	bfe.u32 	%r796, %r766, 8, 8;
	mul.wide.u32 	%rd632, %r796, 4;
	add.s64 	%rd633, %rd1167, %rd632;
	ld.shared.u8 	%r797, [%rd633];
	mul.wide.u32 	%rd634, %r797, 4;
	add.s64 	%rd635, %rd249, %rd634;
	ld.shared.u32 	%r798, [%rd635];
	xor.b32  	%r799, %r795, %r798;
	and.b32  	%r800, %r766, 255;
	mul.wide.u32 	%rd636, %r800, 4;
	add.s64 	%rd637, %rd1167, %rd636;
	ld.shared.u8 	%r801, [%rd637];
	mul.wide.u32 	%rd638, %r801, 4;
	add.s64 	%rd639, %rd254, %rd638;
	ld.shared.u32 	%r802, [%rd639];
	xor.b32  	%r803, %r799, %r802;
	st.local.u32 	[%rd1172+108], %r803;
	shr.u32 	%r805, %r767, 24;
	mul.wide.u32 	%rd640, %r805, 4;
	add.s64 	%rd641, %rd1167, %rd640;
	ld.shared.u8 	%r806, [%rd641];
	mul.wide.u32 	%rd642, %r806, 4;
	add.s64 	%rd643, %rd239, %rd642;
	bfe.u32 	%r807, %r767, 16, 8;
	mul.wide.u32 	%rd644, %r807, 4;
	add.s64 	%rd645, %rd1167, %rd644;
	ld.shared.u8 	%r808, [%rd645];
	mul.wide.u32 	%rd646, %r808, 4;
	add.s64 	%rd647, %rd244, %rd646;
	ld.shared.u32 	%r809, [%rd647];
	ld.shared.u32 	%r810, [%rd643];
	xor.b32  	%r811, %r809, %r810;
	bfe.u32 	%r812, %r767, 8, 8;
	mul.wide.u32 	%rd648, %r812, 4;
	add.s64 	%rd649, %rd1167, %rd648;
	ld.shared.u8 	%r813, [%rd649];
	mul.wide.u32 	%rd650, %r813, 4;
	add.s64 	%rd651, %rd249, %rd650;
	ld.shared.u32 	%r814, [%rd651];
	xor.b32  	%r815, %r811, %r814;
	and.b32  	%r816, %r767, 255;
	mul.wide.u32 	%rd652, %r816, 4;
	add.s64 	%rd653, %rd1167, %rd652;
	ld.shared.u8 	%r817, [%rd653];
	mul.wide.u32 	%rd654, %r817, 4;
	add.s64 	%rd655, %rd254, %rd654;
	ld.shared.u32 	%r818, [%rd655];
	xor.b32  	%r819, %r815, %r818;
	st.local.u32 	[%rd1172+112], %r819;
	shr.u32 	%r821, %r768, 24;
	mul.wide.u32 	%rd656, %r821, 4;
	add.s64 	%rd657, %rd1167, %rd656;
	ld.shared.u8 	%r822, [%rd657];
	mul.wide.u32 	%rd658, %r822, 4;
	add.s64 	%rd659, %rd239, %rd658;
	bfe.u32 	%r823, %r768, 16, 8;
	mul.wide.u32 	%rd660, %r823, 4;
	add.s64 	%rd661, %rd1167, %rd660;
	ld.shared.u8 	%r824, [%rd661];
	mul.wide.u32 	%rd662, %r824, 4;
	add.s64 	%rd663, %rd244, %rd662;
	ld.shared.u32 	%r825, [%rd663];
	ld.shared.u32 	%r826, [%rd659];
	xor.b32  	%r827, %r825, %r826;
	bfe.u32 	%r828, %r768, 8, 8;
	mul.wide.u32 	%rd664, %r828, 4;
	add.s64 	%rd665, %rd1167, %rd664;
	ld.shared.u8 	%r829, [%rd665];
	mul.wide.u32 	%rd666, %r829, 4;
	add.s64 	%rd667, %rd249, %rd666;
	ld.shared.u32 	%r830, [%rd667];
	xor.b32  	%r831, %r827, %r830;
	and.b32  	%r832, %r768, 255;
	mul.wide.u32 	%rd668, %r832, 4;
	add.s64 	%rd669, %rd1167, %rd668;
	ld.shared.u8 	%r833, [%rd669];
	mul.wide.u32 	%rd670, %r833, 4;
	add.s64 	%rd671, %rd254, %rd670;
	ld.shared.u32 	%r834, [%rd671];
	xor.b32  	%r835, %r831, %r834;
	st.local.u32 	[%rd1172+116], %r835;
	shr.u32 	%r837, %r769, 24;
	mul.wide.u32 	%rd672, %r837, 4;
	add.s64 	%rd673, %rd1167, %rd672;
	ld.shared.u8 	%r838, [%rd673];
	mul.wide.u32 	%rd674, %r838, 4;
	add.s64 	%rd675, %rd239, %rd674;
	bfe.u32 	%r839, %r769, 16, 8;
	mul.wide.u32 	%rd676, %r839, 4;
	add.s64 	%rd677, %rd1167, %rd676;
	ld.shared.u8 	%r840, [%rd677];
	mul.wide.u32 	%rd678, %r840, 4;
	add.s64 	%rd679, %rd244, %rd678;
	ld.shared.u32 	%r841, [%rd679];
	ld.shared.u32 	%r842, [%rd675];
	xor.b32  	%r843, %r841, %r842;
	bfe.u32 	%r844, %r769, 8, 8;
	mul.wide.u32 	%rd680, %r844, 4;
	add.s64 	%rd681, %rd1167, %rd680;
	ld.shared.u8 	%r845, [%rd681];
	mul.wide.u32 	%rd682, %r845, 4;
	add.s64 	%rd683, %rd249, %rd682;
	ld.shared.u32 	%r846, [%rd683];
	xor.b32  	%r847, %r843, %r846;
	and.b32  	%r848, %r769, 255;
	mul.wide.u32 	%rd684, %r848, 4;
	add.s64 	%rd685, %rd1167, %rd684;
	ld.shared.u8 	%r849, [%rd685];
	mul.wide.u32 	%rd686, %r849, 4;
	add.s64 	%rd687, %rd254, %rd686;
	ld.shared.u32 	%r850, [%rd687];
	xor.b32  	%r851, %r847, %r850;
	st.local.u32 	[%rd1172+120], %r851;
	shr.u32 	%r853, %r770, 24;
	mul.wide.u32 	%rd688, %r853, 4;
	add.s64 	%rd689, %rd1167, %rd688;
	ld.shared.u8 	%r854, [%rd689];
	mul.wide.u32 	%rd690, %r854, 4;
	add.s64 	%rd691, %rd239, %rd690;
	bfe.u32 	%r855, %r770, 16, 8;
	mul.wide.u32 	%rd692, %r855, 4;
	add.s64 	%rd693, %rd1167, %rd692;
	ld.shared.u8 	%r856, [%rd693];
	mul.wide.u32 	%rd694, %r856, 4;
	add.s64 	%rd695, %rd244, %rd694;
	ld.shared.u32 	%r857, [%rd695];
	ld.shared.u32 	%r858, [%rd691];
	xor.b32  	%r859, %r857, %r858;
	bfe.u32 	%r860, %r770, 8, 8;
	mul.wide.u32 	%rd696, %r860, 4;
	add.s64 	%rd697, %rd1167, %rd696;
	ld.shared.u8 	%r861, [%rd697];
	mul.wide.u32 	%rd698, %r861, 4;
	add.s64 	%rd699, %rd249, %rd698;
	ld.shared.u32 	%r862, [%rd699];
	xor.b32  	%r863, %r859, %r862;
	and.b32  	%r864, %r770, 255;
	mul.wide.u32 	%rd700, %r864, 4;
	add.s64 	%rd701, %rd1167, %rd700;
	ld.shared.u8 	%r865, [%rd701];
	mul.wide.u32 	%rd702, %r865, 4;
	add.s64 	%rd703, %rd254, %rd702;
	ld.shared.u32 	%r866, [%rd703];
	xor.b32  	%r867, %r863, %r866;
	st.local.u32 	[%rd1172+124], %r867;
	shr.u32 	%r869, %r771, 24;
	mul.wide.u32 	%rd704, %r869, 4;
	add.s64 	%rd705, %rd1167, %rd704;
	ld.shared.u8 	%r870, [%rd705];
	mul.wide.u32 	%rd706, %r870, 4;
	add.s64 	%rd707, %rd239, %rd706;
	bfe.u32 	%r871, %r771, 16, 8;
	mul.wide.u32 	%rd708, %r871, 4;
	add.s64 	%rd709, %rd1167, %rd708;
	ld.shared.u8 	%r872, [%rd709];
	mul.wide.u32 	%rd710, %r872, 4;
	add.s64 	%rd711, %rd244, %rd710;
	ld.shared.u32 	%r873, [%rd711];
	ld.shared.u32 	%r874, [%rd707];
	xor.b32  	%r875, %r873, %r874;
	bfe.u32 	%r876, %r771, 8, 8;
	mul.wide.u32 	%rd712, %r876, 4;
	add.s64 	%rd713, %rd1167, %rd712;
	ld.shared.u8 	%r877, [%rd713];
	mul.wide.u32 	%rd714, %r877, 4;
	add.s64 	%rd715, %rd249, %rd714;
	ld.shared.u32 	%r878, [%rd715];
	xor.b32  	%r879, %r875, %r878;
	and.b32  	%r880, %r771, 255;
	mul.wide.u32 	%rd716, %r880, 4;
	add.s64 	%rd717, %rd1167, %rd716;
	ld.shared.u8 	%r881, [%rd717];
	mul.wide.u32 	%rd718, %r881, 4;
	add.s64 	%rd719, %rd254, %rd718;
	ld.shared.u32 	%r882, [%rd719];
	xor.b32  	%r883, %r879, %r882;
	st.local.u32 	[%rd1172+128], %r883;
	shr.u32 	%r885, %r772, 24;
	mul.wide.u32 	%rd720, %r885, 4;
	add.s64 	%rd721, %rd1167, %rd720;
	ld.shared.u8 	%r886, [%rd721];
	mul.wide.u32 	%rd722, %r886, 4;
	add.s64 	%rd723, %rd239, %rd722;
	bfe.u32 	%r887, %r772, 16, 8;
	mul.wide.u32 	%rd724, %r887, 4;
	add.s64 	%rd725, %rd1167, %rd724;
	ld.shared.u8 	%r888, [%rd725];
	mul.wide.u32 	%rd726, %r888, 4;
	add.s64 	%rd727, %rd244, %rd726;
	ld.shared.u32 	%r889, [%rd727];
	ld.shared.u32 	%r890, [%rd723];
	xor.b32  	%r891, %r889, %r890;
	bfe.u32 	%r892, %r772, 8, 8;
	mul.wide.u32 	%rd728, %r892, 4;
	add.s64 	%rd729, %rd1167, %rd728;
	ld.shared.u8 	%r893, [%rd729];
	mul.wide.u32 	%rd730, %r893, 4;
	add.s64 	%rd731, %rd249, %rd730;
	ld.shared.u32 	%r894, [%rd731];
	xor.b32  	%r895, %r891, %r894;
	and.b32  	%r896, %r772, 255;
	mul.wide.u32 	%rd732, %r896, 4;
	add.s64 	%rd733, %rd1167, %rd732;
	ld.shared.u8 	%r897, [%rd733];
	mul.wide.u32 	%rd734, %r897, 4;
	add.s64 	%rd735, %rd254, %rd734;
	ld.shared.u32 	%r898, [%rd735];
	xor.b32  	%r899, %r895, %r898;
	st.local.u32 	[%rd1172+132], %r899;
	shr.u32 	%r901, %r773, 24;
	mul.wide.u32 	%rd736, %r901, 4;
	add.s64 	%rd737, %rd1167, %rd736;
	ld.shared.u8 	%r902, [%rd737];
	mul.wide.u32 	%rd738, %r902, 4;
	add.s64 	%rd739, %rd239, %rd738;
	bfe.u32 	%r903, %r773, 16, 8;
	mul.wide.u32 	%rd740, %r903, 4;
	add.s64 	%rd741, %rd1167, %rd740;
	ld.shared.u8 	%r904, [%rd741];
	mul.wide.u32 	%rd742, %r904, 4;
	add.s64 	%rd743, %rd244, %rd742;
	ld.shared.u32 	%r905, [%rd743];
	ld.shared.u32 	%r906, [%rd739];
	xor.b32  	%r907, %r905, %r906;
	bfe.u32 	%r908, %r773, 8, 8;
	mul.wide.u32 	%rd744, %r908, 4;
	add.s64 	%rd745, %rd1167, %rd744;
	ld.shared.u8 	%r909, [%rd745];
	mul.wide.u32 	%rd746, %r909, 4;
	add.s64 	%rd747, %rd249, %rd746;
	ld.shared.u32 	%r910, [%rd747];
	xor.b32  	%r911, %r907, %r910;
	and.b32  	%r912, %r773, 255;
	mul.wide.u32 	%rd748, %r912, 4;
	add.s64 	%rd749, %rd1167, %rd748;
	ld.shared.u8 	%r913, [%rd749];
	mul.wide.u32 	%rd750, %r913, 4;
	add.s64 	%rd751, %rd254, %rd750;
	ld.shared.u32 	%r914, [%rd751];
	xor.b32  	%r915, %r911, %r914;
	st.local.u32 	[%rd1172+136], %r915;
	shr.u32 	%r917, %r774, 24;
	mul.wide.u32 	%rd752, %r917, 4;
	add.s64 	%rd753, %rd1167, %rd752;
	ld.shared.u8 	%r918, [%rd753];
	mul.wide.u32 	%rd754, %r918, 4;
	add.s64 	%rd755, %rd239, %rd754;
	bfe.u32 	%r919, %r774, 16, 8;
	mul.wide.u32 	%rd756, %r919, 4;
	add.s64 	%rd757, %rd1167, %rd756;
	ld.shared.u8 	%r920, [%rd757];
	mul.wide.u32 	%rd758, %r920, 4;
	add.s64 	%rd759, %rd244, %rd758;
	ld.shared.u32 	%r921, [%rd759];
	ld.shared.u32 	%r922, [%rd755];
	xor.b32  	%r923, %r921, %r922;
	bfe.u32 	%r924, %r774, 8, 8;
	mul.wide.u32 	%rd760, %r924, 4;
	add.s64 	%rd761, %rd1167, %rd760;
	ld.shared.u8 	%r925, [%rd761];
	mul.wide.u32 	%rd762, %r925, 4;
	add.s64 	%rd763, %rd249, %rd762;
	ld.shared.u32 	%r926, [%rd763];
	xor.b32  	%r927, %r923, %r926;
	and.b32  	%r928, %r774, 255;
	mul.wide.u32 	%rd764, %r928, 4;
	add.s64 	%rd765, %rd1167, %rd764;
	ld.shared.u8 	%r929, [%rd765];
	mul.wide.u32 	%rd766, %r929, 4;
	add.s64 	%rd767, %rd254, %rd766;
	ld.shared.u32 	%r930, [%rd767];
	xor.b32  	%r931, %r927, %r930;
	st.local.u32 	[%rd1172+140], %r931;
	shr.u32 	%r933, %r775, 24;
	mul.wide.u32 	%rd768, %r933, 4;
	add.s64 	%rd769, %rd1167, %rd768;
	ld.shared.u8 	%r934, [%rd769];
	mul.wide.u32 	%rd770, %r934, 4;
	add.s64 	%rd771, %rd239, %rd770;
	bfe.u32 	%r935, %r775, 16, 8;
	mul.wide.u32 	%rd772, %r935, 4;
	add.s64 	%rd773, %rd1167, %rd772;
	ld.shared.u8 	%r936, [%rd773];
	mul.wide.u32 	%rd774, %r936, 4;
	add.s64 	%rd775, %rd244, %rd774;
	ld.shared.u32 	%r937, [%rd775];
	ld.shared.u32 	%r938, [%rd771];
	xor.b32  	%r939, %r937, %r938;
	bfe.u32 	%r940, %r775, 8, 8;
	mul.wide.u32 	%rd776, %r940, 4;
	add.s64 	%rd777, %rd1167, %rd776;
	ld.shared.u8 	%r941, [%rd777];
	mul.wide.u32 	%rd778, %r941, 4;
	add.s64 	%rd779, %rd249, %rd778;
	ld.shared.u32 	%r942, [%rd779];
	xor.b32  	%r943, %r939, %r942;
	and.b32  	%r944, %r775, 255;
	mul.wide.u32 	%rd780, %r944, 4;
	add.s64 	%rd781, %rd1167, %rd780;
	ld.shared.u8 	%r945, [%rd781];
	mul.wide.u32 	%rd782, %r945, 4;
	add.s64 	%rd783, %rd254, %rd782;
	ld.shared.u32 	%r946, [%rd783];
	xor.b32  	%r947, %r943, %r946;
	st.local.u32 	[%rd1172+144], %r947;
	shr.u32 	%r949, %r776, 24;
	mul.wide.u32 	%rd784, %r949, 4;
	add.s64 	%rd785, %rd1167, %rd784;
	ld.shared.u8 	%r950, [%rd785];
	mul.wide.u32 	%rd786, %r950, 4;
	add.s64 	%rd787, %rd239, %rd786;
	bfe.u32 	%r951, %r776, 16, 8;
	mul.wide.u32 	%rd788, %r951, 4;
	add.s64 	%rd789, %rd1167, %rd788;
	ld.shared.u8 	%r952, [%rd789];
	mul.wide.u32 	%rd790, %r952, 4;
	add.s64 	%rd791, %rd244, %rd790;
	ld.shared.u32 	%r953, [%rd791];
	ld.shared.u32 	%r954, [%rd787];
	xor.b32  	%r955, %r953, %r954;
	bfe.u32 	%r956, %r776, 8, 8;
	mul.wide.u32 	%rd792, %r956, 4;
	add.s64 	%rd793, %rd1167, %rd792;
	ld.shared.u8 	%r957, [%rd793];
	mul.wide.u32 	%rd794, %r957, 4;
	add.s64 	%rd795, %rd249, %rd794;
	ld.shared.u32 	%r958, [%rd795];
	xor.b32  	%r959, %r955, %r958;
	and.b32  	%r960, %r776, 255;
	mul.wide.u32 	%rd796, %r960, 4;
	add.s64 	%rd797, %rd1167, %rd796;
	ld.shared.u8 	%r961, [%rd797];
	mul.wide.u32 	%rd798, %r961, 4;
	add.s64 	%rd799, %rd254, %rd798;
	ld.shared.u32 	%r962, [%rd799];
	xor.b32  	%r963, %r959, %r962;
	st.local.u32 	[%rd1172+148], %r963;
	shr.u32 	%r965, %r777, 24;
	mul.wide.u32 	%rd800, %r965, 4;
	add.s64 	%rd801, %rd1167, %rd800;
	ld.shared.u8 	%r966, [%rd801];
	mul.wide.u32 	%rd802, %r966, 4;
	add.s64 	%rd803, %rd239, %rd802;
	bfe.u32 	%r967, %r777, 16, 8;
	mul.wide.u32 	%rd804, %r967, 4;
	add.s64 	%rd805, %rd1167, %rd804;
	ld.shared.u8 	%r968, [%rd805];
	mul.wide.u32 	%rd806, %r968, 4;
	add.s64 	%rd807, %rd244, %rd806;
	ld.shared.u32 	%r969, [%rd807];
	ld.shared.u32 	%r970, [%rd803];
	xor.b32  	%r971, %r969, %r970;
	bfe.u32 	%r972, %r777, 8, 8;
	mul.wide.u32 	%rd808, %r972, 4;
	add.s64 	%rd809, %rd1167, %rd808;
	ld.shared.u8 	%r973, [%rd809];
	mul.wide.u32 	%rd810, %r973, 4;
	add.s64 	%rd811, %rd249, %rd810;
	ld.shared.u32 	%r974, [%rd811];
	xor.b32  	%r975, %r971, %r974;
	and.b32  	%r976, %r777, 255;
	mul.wide.u32 	%rd812, %r976, 4;
	add.s64 	%rd813, %rd1167, %rd812;
	ld.shared.u8 	%r977, [%rd813];
	mul.wide.u32 	%rd814, %r977, 4;
	add.s64 	%rd815, %rd254, %rd814;
	ld.shared.u32 	%r978, [%rd815];
	xor.b32  	%r979, %r975, %r978;
	st.local.u32 	[%rd1172+152], %r979;
	shr.u32 	%r981, %r778, 24;
	mul.wide.u32 	%rd816, %r981, 4;
	add.s64 	%rd817, %rd1167, %rd816;
	ld.shared.u8 	%r982, [%rd817];
	mul.wide.u32 	%rd818, %r982, 4;
	add.s64 	%rd819, %rd239, %rd818;
	bfe.u32 	%r983, %r778, 16, 8;
	mul.wide.u32 	%rd820, %r983, 4;
	add.s64 	%rd821, %rd1167, %rd820;
	ld.shared.u8 	%r984, [%rd821];
	mul.wide.u32 	%rd822, %r984, 4;
	add.s64 	%rd823, %rd244, %rd822;
	ld.shared.u32 	%r985, [%rd823];
	ld.shared.u32 	%r986, [%rd819];
	xor.b32  	%r987, %r985, %r986;
	bfe.u32 	%r988, %r778, 8, 8;
	mul.wide.u32 	%rd824, %r988, 4;
	add.s64 	%rd825, %rd1167, %rd824;
	ld.shared.u8 	%r989, [%rd825];
	mul.wide.u32 	%rd826, %r989, 4;
	add.s64 	%rd827, %rd249, %rd826;
	ld.shared.u32 	%r990, [%rd827];
	xor.b32  	%r991, %r987, %r990;
	and.b32  	%r992, %r778, 255;
	mul.wide.u32 	%rd828, %r992, 4;
	add.s64 	%rd829, %rd1167, %rd828;
	ld.shared.u8 	%r993, [%rd829];
	mul.wide.u32 	%rd830, %r993, 4;
	add.s64 	%rd831, %rd254, %rd830;
	ld.shared.u32 	%r994, [%rd831];
	xor.b32  	%r995, %r991, %r994;
	st.local.u32 	[%rd1172+156], %r995;
	shr.u32 	%r997, %r779, 24;
	mul.wide.u32 	%rd832, %r997, 4;
	add.s64 	%rd833, %rd1167, %rd832;
	ld.shared.u8 	%r998, [%rd833];
	mul.wide.u32 	%rd834, %r998, 4;
	add.s64 	%rd835, %rd239, %rd834;
	bfe.u32 	%r999, %r779, 16, 8;
	mul.wide.u32 	%rd836, %r999, 4;
	add.s64 	%rd837, %rd1167, %rd836;
	ld.shared.u8 	%r1000, [%rd837];
	mul.wide.u32 	%rd838, %r1000, 4;
	add.s64 	%rd839, %rd244, %rd838;
	ld.shared.u32 	%r1001, [%rd839];
	ld.shared.u32 	%r1002, [%rd835];
	xor.b32  	%r1003, %r1001, %r1002;
	bfe.u32 	%r1004, %r779, 8, 8;
	mul.wide.u32 	%rd840, %r1004, 4;
	add.s64 	%rd841, %rd1167, %rd840;
	ld.shared.u8 	%r1005, [%rd841];
	mul.wide.u32 	%rd842, %r1005, 4;
	add.s64 	%rd843, %rd249, %rd842;
	ld.shared.u32 	%r1006, [%rd843];
	xor.b32  	%r1007, %r1003, %r1006;
	and.b32  	%r1008, %r779, 255;
	mul.wide.u32 	%rd844, %r1008, 4;
	add.s64 	%rd845, %rd1167, %rd844;
	ld.shared.u8 	%r1009, [%rd845];
	mul.wide.u32 	%rd846, %r1009, 4;
	add.s64 	%rd847, %rd254, %rd846;
	ld.shared.u32 	%r1010, [%rd847];
	xor.b32  	%r1011, %r1007, %r1010;
	st.local.u32 	[%rd1172+160], %r1011;
	shr.u32 	%r1013, %r780, 24;
	mul.wide.u32 	%rd848, %r1013, 4;
	add.s64 	%rd849, %rd1167, %rd848;
	ld.shared.u8 	%r1014, [%rd849];
	mul.wide.u32 	%rd850, %r1014, 4;
	add.s64 	%rd851, %rd239, %rd850;
	bfe.u32 	%r1015, %r780, 16, 8;
	mul.wide.u32 	%rd852, %r1015, 4;
	add.s64 	%rd853, %rd1167, %rd852;
	ld.shared.u8 	%r1016, [%rd853];
	mul.wide.u32 	%rd854, %r1016, 4;
	add.s64 	%rd855, %rd244, %rd854;
	ld.shared.u32 	%r1017, [%rd855];
	ld.shared.u32 	%r1018, [%rd851];
	xor.b32  	%r1019, %r1017, %r1018;
	bfe.u32 	%r1020, %r780, 8, 8;
	mul.wide.u32 	%rd856, %r1020, 4;
	add.s64 	%rd857, %rd1167, %rd856;
	ld.shared.u8 	%r1021, [%rd857];
	mul.wide.u32 	%rd858, %r1021, 4;
	add.s64 	%rd859, %rd249, %rd858;
	ld.shared.u32 	%r1022, [%rd859];
	xor.b32  	%r1023, %r1019, %r1022;
	and.b32  	%r1024, %r780, 255;
	mul.wide.u32 	%rd860, %r1024, 4;
	add.s64 	%rd861, %rd1167, %rd860;
	ld.shared.u8 	%r1025, [%rd861];
	mul.wide.u32 	%rd862, %r1025, 4;
	add.s64 	%rd863, %rd254, %rd862;
	ld.shared.u32 	%r1026, [%rd863];
	xor.b32  	%r1027, %r1023, %r1026;
	st.local.u32 	[%rd1172+164], %r1027;
	shr.u32 	%r1029, %r781, 24;
	mul.wide.u32 	%rd864, %r1029, 4;
	add.s64 	%rd865, %rd1167, %rd864;
	ld.shared.u8 	%r1030, [%rd865];
	mul.wide.u32 	%rd866, %r1030, 4;
	add.s64 	%rd867, %rd239, %rd866;
	bfe.u32 	%r1031, %r781, 16, 8;
	mul.wide.u32 	%rd868, %r1031, 4;
	add.s64 	%rd869, %rd1167, %rd868;
	ld.shared.u8 	%r1032, [%rd869];
	mul.wide.u32 	%rd870, %r1032, 4;
	add.s64 	%rd871, %rd244, %rd870;
	ld.shared.u32 	%r1033, [%rd871];
	ld.shared.u32 	%r1034, [%rd867];
	xor.b32  	%r1035, %r1033, %r1034;
	bfe.u32 	%r1036, %r781, 8, 8;
	mul.wide.u32 	%rd872, %r1036, 4;
	add.s64 	%rd873, %rd1167, %rd872;
	ld.shared.u8 	%r1037, [%rd873];
	mul.wide.u32 	%rd874, %r1037, 4;
	add.s64 	%rd875, %rd249, %rd874;
	ld.shared.u32 	%r1038, [%rd875];
	xor.b32  	%r1039, %r1035, %r1038;
	and.b32  	%r1040, %r781, 255;
	mul.wide.u32 	%rd876, %r1040, 4;
	add.s64 	%rd877, %rd1167, %rd876;
	ld.shared.u8 	%r1041, [%rd877];
	mul.wide.u32 	%rd878, %r1041, 4;
	add.s64 	%rd879, %rd254, %rd878;
	ld.shared.u32 	%r1042, [%rd879];
	xor.b32  	%r1043, %r1039, %r1042;
	st.local.u32 	[%rd1172+168], %r1043;
	shr.u32 	%r1045, %r782, 24;
	mul.wide.u32 	%rd880, %r1045, 4;
	add.s64 	%rd881, %rd1167, %rd880;
	ld.shared.u8 	%r1046, [%rd881];
	mul.wide.u32 	%rd882, %r1046, 4;
	add.s64 	%rd883, %rd239, %rd882;
	bfe.u32 	%r1047, %r782, 16, 8;
	mul.wide.u32 	%rd884, %r1047, 4;
	add.s64 	%rd885, %rd1167, %rd884;
	ld.shared.u8 	%r1048, [%rd885];
	mul.wide.u32 	%rd886, %r1048, 4;
	add.s64 	%rd887, %rd244, %rd886;
	ld.shared.u32 	%r1049, [%rd887];
	ld.shared.u32 	%r1050, [%rd883];
	xor.b32  	%r1051, %r1049, %r1050;
	bfe.u32 	%r1052, %r782, 8, 8;
	mul.wide.u32 	%rd888, %r1052, 4;
	add.s64 	%rd889, %rd1167, %rd888;
	ld.shared.u8 	%r1053, [%rd889];
	mul.wide.u32 	%rd890, %r1053, 4;
	add.s64 	%rd891, %rd249, %rd890;
	ld.shared.u32 	%r1054, [%rd891];
	xor.b32  	%r1055, %r1051, %r1054;
	and.b32  	%r1056, %r782, 255;
	mul.wide.u32 	%rd892, %r1056, 4;
	add.s64 	%rd893, %rd1167, %rd892;
	ld.shared.u8 	%r1057, [%rd893];
	mul.wide.u32 	%rd894, %r1057, 4;
	add.s64 	%rd895, %rd254, %rd894;
	ld.shared.u32 	%r1058, [%rd895];
	xor.b32  	%r1059, %r1055, %r1058;
	st.local.u32 	[%rd1172+172], %r1059;
	shr.u32 	%r1061, %r783, 24;
	mul.wide.u32 	%rd896, %r1061, 4;
	add.s64 	%rd897, %rd1167, %rd896;
	ld.shared.u8 	%r1062, [%rd897];
	mul.wide.u32 	%rd898, %r1062, 4;
	add.s64 	%rd899, %rd239, %rd898;
	bfe.u32 	%r1063, %r783, 16, 8;
	mul.wide.u32 	%rd900, %r1063, 4;
	add.s64 	%rd901, %rd1167, %rd900;
	ld.shared.u8 	%r1064, [%rd901];
	mul.wide.u32 	%rd902, %r1064, 4;
	add.s64 	%rd903, %rd244, %rd902;
	ld.shared.u32 	%r1065, [%rd903];
	ld.shared.u32 	%r1066, [%rd899];
	xor.b32  	%r1067, %r1065, %r1066;
	bfe.u32 	%r1068, %r783, 8, 8;
	mul.wide.u32 	%rd904, %r1068, 4;
	add.s64 	%rd905, %rd1167, %rd904;
	ld.shared.u8 	%r1069, [%rd905];
	mul.wide.u32 	%rd906, %r1069, 4;
	add.s64 	%rd907, %rd249, %rd906;
	ld.shared.u32 	%r1070, [%rd907];
	xor.b32  	%r1071, %r1067, %r1070;
	and.b32  	%r1072, %r783, 255;
	mul.wide.u32 	%rd908, %r1072, 4;
	add.s64 	%rd909, %rd1167, %rd908;
	ld.shared.u8 	%r1073, [%rd909];
	mul.wide.u32 	%rd910, %r1073, 4;
	add.s64 	%rd911, %rd254, %rd910;
	ld.shared.u32 	%r1074, [%rd911];
	xor.b32  	%r1075, %r1071, %r1074;
	st.local.u32 	[%rd1172+176], %r1075;
	shr.u32 	%r1077, %r784, 24;
	mul.wide.u32 	%rd912, %r1077, 4;
	add.s64 	%rd913, %rd1167, %rd912;
	ld.shared.u8 	%r1078, [%rd913];
	mul.wide.u32 	%rd914, %r1078, 4;
	add.s64 	%rd915, %rd239, %rd914;
	bfe.u32 	%r1079, %r784, 16, 8;
	mul.wide.u32 	%rd916, %r1079, 4;
	add.s64 	%rd917, %rd1167, %rd916;
	ld.shared.u8 	%r1080, [%rd917];
	mul.wide.u32 	%rd918, %r1080, 4;
	add.s64 	%rd919, %rd244, %rd918;
	ld.shared.u32 	%r1081, [%rd919];
	ld.shared.u32 	%r1082, [%rd915];
	xor.b32  	%r1083, %r1081, %r1082;
	bfe.u32 	%r1084, %r784, 8, 8;
	mul.wide.u32 	%rd920, %r1084, 4;
	add.s64 	%rd921, %rd1167, %rd920;
	ld.shared.u8 	%r1085, [%rd921];
	mul.wide.u32 	%rd922, %r1085, 4;
	add.s64 	%rd923, %rd249, %rd922;
	ld.shared.u32 	%r1086, [%rd923];
	xor.b32  	%r1087, %r1083, %r1086;
	and.b32  	%r1088, %r784, 255;
	mul.wide.u32 	%rd924, %r1088, 4;
	add.s64 	%rd925, %rd1167, %rd924;
	ld.shared.u8 	%r1089, [%rd925];
	mul.wide.u32 	%rd926, %r1089, 4;
	add.s64 	%rd927, %rd254, %rd926;
	ld.shared.u32 	%r1090, [%rd927];
	xor.b32  	%r1091, %r1087, %r1090;
	st.local.u32 	[%rd1172+180], %r1091;
	shr.u32 	%r1093, %r785, 24;
	mul.wide.u32 	%rd928, %r1093, 4;
	add.s64 	%rd929, %rd1167, %rd928;
	ld.shared.u8 	%r1094, [%rd929];
	mul.wide.u32 	%rd930, %r1094, 4;
	add.s64 	%rd931, %rd239, %rd930;
	bfe.u32 	%r1095, %r785, 16, 8;
	mul.wide.u32 	%rd932, %r1095, 4;
	add.s64 	%rd933, %rd1167, %rd932;
	ld.shared.u8 	%r1096, [%rd933];
	mul.wide.u32 	%rd934, %r1096, 4;
	add.s64 	%rd935, %rd244, %rd934;
	ld.shared.u32 	%r1097, [%rd935];
	ld.shared.u32 	%r1098, [%rd931];
	xor.b32  	%r1099, %r1097, %r1098;
	bfe.u32 	%r1100, %r785, 8, 8;
	mul.wide.u32 	%rd936, %r1100, 4;
	add.s64 	%rd937, %rd1167, %rd936;
	ld.shared.u8 	%r1101, [%rd937];
	mul.wide.u32 	%rd938, %r1101, 4;
	add.s64 	%rd939, %rd249, %rd938;
	ld.shared.u32 	%r1102, [%rd939];
	xor.b32  	%r1103, %r1099, %r1102;
	and.b32  	%r1104, %r785, 255;
	mul.wide.u32 	%rd940, %r1104, 4;
	add.s64 	%rd941, %rd1167, %rd940;
	ld.shared.u8 	%r1105, [%rd941];
	mul.wide.u32 	%rd942, %r1105, 4;
	add.s64 	%rd943, %rd254, %rd942;
	ld.shared.u32 	%r1106, [%rd943];
	xor.b32  	%r1107, %r1103, %r1106;
	st.local.u32 	[%rd1172+184], %r1107;
	shr.u32 	%r1109, %r786, 24;
	mul.wide.u32 	%rd944, %r1109, 4;
	add.s64 	%rd945, %rd1167, %rd944;
	ld.shared.u8 	%r1110, [%rd945];
	mul.wide.u32 	%rd946, %r1110, 4;
	add.s64 	%rd947, %rd239, %rd946;
	bfe.u32 	%r1111, %r786, 16, 8;
	mul.wide.u32 	%rd948, %r1111, 4;
	add.s64 	%rd949, %rd1167, %rd948;
	ld.shared.u8 	%r1112, [%rd949];
	mul.wide.u32 	%rd950, %r1112, 4;
	add.s64 	%rd951, %rd244, %rd950;
	ld.shared.u32 	%r1113, [%rd951];
	ld.shared.u32 	%r1114, [%rd947];
	xor.b32  	%r1115, %r1113, %r1114;
	bfe.u32 	%r1116, %r786, 8, 8;
	mul.wide.u32 	%rd952, %r1116, 4;
	add.s64 	%rd953, %rd1167, %rd952;
	ld.shared.u8 	%r1117, [%rd953];
	mul.wide.u32 	%rd954, %r1117, 4;
	add.s64 	%rd955, %rd249, %rd954;
	ld.shared.u32 	%r1118, [%rd955];
	xor.b32  	%r1119, %r1115, %r1118;
	and.b32  	%r1120, %r786, 255;
	mul.wide.u32 	%rd956, %r1120, 4;
	add.s64 	%rd957, %rd1167, %rd956;
	ld.shared.u8 	%r1121, [%rd957];
	mul.wide.u32 	%rd958, %r1121, 4;
	add.s64 	%rd959, %rd254, %rd958;
	ld.shared.u32 	%r1122, [%rd959];
	xor.b32  	%r1123, %r1119, %r1122;
	st.local.u32 	[%rd1172+188], %r1123;
	shr.u32 	%r1125, %r787, 24;
	mul.wide.u32 	%rd960, %r1125, 4;
	add.s64 	%rd961, %rd1167, %rd960;
	ld.shared.u8 	%r1126, [%rd961];
	mul.wide.u32 	%rd962, %r1126, 4;
	add.s64 	%rd963, %rd239, %rd962;
	bfe.u32 	%r1127, %r787, 16, 8;
	mul.wide.u32 	%rd964, %r1127, 4;
	add.s64 	%rd965, %rd1167, %rd964;
	ld.shared.u8 	%r1128, [%rd965];
	mul.wide.u32 	%rd966, %r1128, 4;
	add.s64 	%rd967, %rd244, %rd966;
	ld.shared.u32 	%r1129, [%rd967];
	ld.shared.u32 	%r1130, [%rd963];
	xor.b32  	%r1131, %r1129, %r1130;
	bfe.u32 	%r1132, %r787, 8, 8;
	mul.wide.u32 	%rd968, %r1132, 4;
	add.s64 	%rd969, %rd1167, %rd968;
	ld.shared.u8 	%r1133, [%rd969];
	mul.wide.u32 	%rd970, %r1133, 4;
	add.s64 	%rd971, %rd249, %rd970;
	ld.shared.u32 	%r1134, [%rd971];
	xor.b32  	%r1135, %r1131, %r1134;
	and.b32  	%r1136, %r787, 255;
	mul.wide.u32 	%rd972, %r1136, 4;
	add.s64 	%rd973, %rd1167, %rd972;
	ld.shared.u8 	%r1137, [%rd973];
	mul.wide.u32 	%rd974, %r1137, 4;
	add.s64 	%rd975, %rd254, %rd974;
	ld.shared.u32 	%r1138, [%rd975];
	xor.b32  	%r1139, %r1135, %r1138;
	st.local.u32 	[%rd1172+192], %r1139;
	ld.local.v2.u32 	{%r1140, %r1141}, [%rd1172+196];
	shr.u32 	%r1143, %r1140, 24;
	mul.wide.u32 	%rd976, %r1143, 4;
	add.s64 	%rd977, %rd1167, %rd976;
	ld.shared.u8 	%r1144, [%rd977];
	mul.wide.u32 	%rd978, %r1144, 4;
	add.s64 	%rd979, %rd239, %rd978;
	bfe.u32 	%r1145, %r1140, 16, 8;
	mul.wide.u32 	%rd980, %r1145, 4;
	add.s64 	%rd981, %rd1167, %rd980;
	ld.shared.u8 	%r1146, [%rd981];
	mul.wide.u32 	%rd982, %r1146, 4;
	add.s64 	%rd983, %rd244, %rd982;
	ld.shared.u32 	%r1147, [%rd983];
	ld.shared.u32 	%r1148, [%rd979];
	xor.b32  	%r1149, %r1147, %r1148;
	bfe.u32 	%r1150, %r1140, 8, 8;
	mul.wide.u32 	%rd984, %r1150, 4;
	add.s64 	%rd985, %rd1167, %rd984;
	ld.shared.u8 	%r1151, [%rd985];
	mul.wide.u32 	%rd986, %r1151, 4;
	add.s64 	%rd987, %rd249, %rd986;
	ld.shared.u32 	%r1152, [%rd987];
	xor.b32  	%r1153, %r1149, %r1152;
	and.b32  	%r1154, %r1140, 255;
	mul.wide.u32 	%rd988, %r1154, 4;
	add.s64 	%rd989, %rd1167, %rd988;
	ld.shared.u8 	%r1155, [%rd989];
	mul.wide.u32 	%rd990, %r1155, 4;
	add.s64 	%rd991, %rd254, %rd990;
	ld.shared.u32 	%r1156, [%rd991];
	xor.b32  	%r1157, %r1153, %r1156;
	ld.local.v4.u32 	{%r1158, %r1159, %r1160, %r1161}, [%rd1172+204];
	st.local.u32 	[%rd1172+196], %r1157;
	shr.u32 	%r1163, %r1141, 24;
	mul.wide.u32 	%rd992, %r1163, 4;
	add.s64 	%rd993, %rd1167, %rd992;
	ld.shared.u8 	%r1164, [%rd993];
	mul.wide.u32 	%rd994, %r1164, 4;
	add.s64 	%rd995, %rd239, %rd994;
	bfe.u32 	%r1165, %r1141, 16, 8;
	mul.wide.u32 	%rd996, %r1165, 4;
	add.s64 	%rd997, %rd1167, %rd996;
	ld.shared.u8 	%r1166, [%rd997];
	mul.wide.u32 	%rd998, %r1166, 4;
	add.s64 	%rd999, %rd244, %rd998;
	ld.shared.u32 	%r1167, [%rd999];
	ld.shared.u32 	%r1168, [%rd995];
	xor.b32  	%r1169, %r1167, %r1168;
	bfe.u32 	%r1170, %r1141, 8, 8;
	mul.wide.u32 	%rd1000, %r1170, 4;
	add.s64 	%rd1001, %rd1167, %rd1000;
	ld.shared.u8 	%r1171, [%rd1001];
	mul.wide.u32 	%rd1002, %r1171, 4;
	add.s64 	%rd1003, %rd249, %rd1002;
	ld.shared.u32 	%r1172, [%rd1003];
	xor.b32  	%r1173, %r1169, %r1172;
	and.b32  	%r1174, %r1141, 255;
	mul.wide.u32 	%rd1004, %r1174, 4;
	add.s64 	%rd1005, %rd1167, %rd1004;
	ld.shared.u8 	%r1175, [%rd1005];
	mul.wide.u32 	%rd1006, %r1175, 4;
	add.s64 	%rd1007, %rd254, %rd1006;
	ld.shared.u32 	%r1176, [%rd1007];
	xor.b32  	%r1177, %r1173, %r1176;
	st.local.u32 	[%rd1172+200], %r1177;
	shr.u32 	%r1179, %r1158, 24;
	mul.wide.u32 	%rd1008, %r1179, 4;
	add.s64 	%rd1009, %rd1167, %rd1008;
	ld.shared.u8 	%r1180, [%rd1009];
	mul.wide.u32 	%rd1010, %r1180, 4;
	add.s64 	%rd1011, %rd239, %rd1010;
	bfe.u32 	%r1181, %r1158, 16, 8;
	mul.wide.u32 	%rd1012, %r1181, 4;
	add.s64 	%rd1013, %rd1167, %rd1012;
	ld.shared.u8 	%r1182, [%rd1013];
	mul.wide.u32 	%rd1014, %r1182, 4;
	add.s64 	%rd1015, %rd244, %rd1014;
	ld.shared.u32 	%r1183, [%rd1015];
	ld.shared.u32 	%r1184, [%rd1011];
	xor.b32  	%r1185, %r1183, %r1184;
	bfe.u32 	%r1186, %r1158, 8, 8;
	mul.wide.u32 	%rd1016, %r1186, 4;
	add.s64 	%rd1017, %rd1167, %rd1016;
	ld.shared.u8 	%r1187, [%rd1017];
	mul.wide.u32 	%rd1018, %r1187, 4;
	add.s64 	%rd1019, %rd249, %rd1018;
	ld.shared.u32 	%r1188, [%rd1019];
	xor.b32  	%r1189, %r1185, %r1188;
	and.b32  	%r1190, %r1158, 255;
	mul.wide.u32 	%rd1020, %r1190, 4;
	add.s64 	%rd1021, %rd1167, %rd1020;
	ld.shared.u8 	%r1191, [%rd1021];
	mul.wide.u32 	%rd1022, %r1191, 4;
	add.s64 	%rd1023, %rd254, %rd1022;
	ld.shared.u32 	%r1192, [%rd1023];
	xor.b32  	%r1193, %r1189, %r1192;
	st.local.u32 	[%rd1172+204], %r1193;
	shr.u32 	%r1195, %r1159, 24;
	mul.wide.u32 	%rd1024, %r1195, 4;
	add.s64 	%rd1025, %rd1167, %rd1024;
	ld.shared.u8 	%r1196, [%rd1025];
	mul.wide.u32 	%rd1026, %r1196, 4;
	add.s64 	%rd1027, %rd239, %rd1026;
	bfe.u32 	%r1197, %r1159, 16, 8;
	mul.wide.u32 	%rd1028, %r1197, 4;
	add.s64 	%rd1029, %rd1167, %rd1028;
	ld.shared.u8 	%r1198, [%rd1029];
	mul.wide.u32 	%rd1030, %r1198, 4;
	add.s64 	%rd1031, %rd244, %rd1030;
	ld.shared.u32 	%r1199, [%rd1031];
	ld.shared.u32 	%r1200, [%rd1027];
	xor.b32  	%r1201, %r1199, %r1200;
	bfe.u32 	%r1202, %r1159, 8, 8;
	mul.wide.u32 	%rd1032, %r1202, 4;
	add.s64 	%rd1033, %rd1167, %rd1032;
	ld.shared.u8 	%r1203, [%rd1033];
	mul.wide.u32 	%rd1034, %r1203, 4;
	add.s64 	%rd1035, %rd249, %rd1034;
	ld.shared.u32 	%r1204, [%rd1035];
	xor.b32  	%r1205, %r1201, %r1204;
	and.b32  	%r1206, %r1159, 255;
	mul.wide.u32 	%rd1036, %r1206, 4;
	add.s64 	%rd1037, %rd1167, %rd1036;
	ld.shared.u8 	%r1207, [%rd1037];
	mul.wide.u32 	%rd1038, %r1207, 4;
	add.s64 	%rd1039, %rd254, %rd1038;
	ld.shared.u32 	%r1208, [%rd1039];
	xor.b32  	%r1209, %r1205, %r1208;
	st.local.u32 	[%rd1172+208], %r1209;
	shr.u32 	%r1211, %r1160, 24;
	mul.wide.u32 	%rd1040, %r1211, 4;
	add.s64 	%rd1041, %rd1167, %rd1040;
	ld.shared.u8 	%r1212, [%rd1041];
	mul.wide.u32 	%rd1042, %r1212, 4;
	add.s64 	%rd1043, %rd239, %rd1042;
	bfe.u32 	%r1213, %r1160, 16, 8;
	mul.wide.u32 	%rd1044, %r1213, 4;
	add.s64 	%rd1045, %rd1167, %rd1044;
	ld.shared.u8 	%r1214, [%rd1045];
	mul.wide.u32 	%rd1046, %r1214, 4;
	add.s64 	%rd1047, %rd244, %rd1046;
	ld.shared.u32 	%r1215, [%rd1047];
	ld.shared.u32 	%r1216, [%rd1043];
	xor.b32  	%r1217, %r1215, %r1216;
	bfe.u32 	%r1218, %r1160, 8, 8;
	mul.wide.u32 	%rd1048, %r1218, 4;
	add.s64 	%rd1049, %rd1167, %rd1048;
	ld.shared.u8 	%r1219, [%rd1049];
	mul.wide.u32 	%rd1050, %r1219, 4;
	add.s64 	%rd1051, %rd249, %rd1050;
	ld.shared.u32 	%r1220, [%rd1051];
	xor.b32  	%r1221, %r1217, %r1220;
	and.b32  	%r1222, %r1160, 255;
	mul.wide.u32 	%rd1052, %r1222, 4;
	add.s64 	%rd1053, %rd1167, %rd1052;
	ld.shared.u8 	%r1223, [%rd1053];
	mul.wide.u32 	%rd1054, %r1223, 4;
	add.s64 	%rd1055, %rd254, %rd1054;
	ld.shared.u32 	%r1224, [%rd1055];
	xor.b32  	%r1225, %r1221, %r1224;
	st.local.u32 	[%rd1172+212], %r1225;
	shr.u32 	%r1227, %r1161, 24;
	mul.wide.u32 	%rd1056, %r1227, 4;
	add.s64 	%rd1057, %rd1167, %rd1056;
	ld.shared.u8 	%r1228, [%rd1057];
	mul.wide.u32 	%rd1058, %r1228, 4;
	add.s64 	%rd1059, %rd239, %rd1058;
	bfe.u32 	%r1229, %r1161, 16, 8;
	mul.wide.u32 	%rd1060, %r1229, 4;
	add.s64 	%rd1061, %rd1167, %rd1060;
	ld.shared.u8 	%r1230, [%rd1061];
	mul.wide.u32 	%rd1062, %r1230, 4;
	add.s64 	%rd1063, %rd244, %rd1062;
	ld.shared.u32 	%r1231, [%rd1063];
	ld.shared.u32 	%r1232, [%rd1059];
	xor.b32  	%r1233, %r1231, %r1232;
	bfe.u32 	%r1234, %r1161, 8, 8;
	mul.wide.u32 	%rd1064, %r1234, 4;
	add.s64 	%rd1065, %rd1167, %rd1064;
	ld.shared.u8 	%r1235, [%rd1065];
	mul.wide.u32 	%rd1066, %r1235, 4;
	add.s64 	%rd1067, %rd249, %rd1066;
	ld.shared.u32 	%r1236, [%rd1067];
	xor.b32  	%r1237, %r1233, %r1236;
	and.b32  	%r1238, %r1161, 255;
	mul.wide.u32 	%rd1068, %r1238, 4;
	add.s64 	%rd1069, %rd1167, %rd1068;
	ld.shared.u8 	%r1239, [%rd1069];
	mul.wide.u32 	%rd1070, %r1239, 4;
	add.s64 	%rd1071, %rd254, %rd1070;
	ld.shared.u32 	%r1240, [%rd1071];
	xor.b32  	%r1241, %r1237, %r1240;
	st.local.u32 	[%rd1172+216], %r1241;
	mul.wide.u32 	%rd1072, %r1401, 780;
	add.s64 	%rd1073, %rd1168, %rd1072;
	ld.global.u32 	%r15, [%rd1073+768];
	setp.eq.s32	%p14, %r15, 0;
	@%p14 bra 	BB7_12;

	add.s64 	%rd1173, %rd1, 4;
	cvt.u32.u64	%r1411, %rd75;
	shr.u64 	%rd1169, %rd77, 32;
	cvt.u32.u64	%r1410, %rd1169;
	cvt.u32.u64	%r1409, %rd77;
	ld.local.u32 	%r16, [%rd1];
	ld.local.u32 	%r17, [%rd1173];
	ld.local.v2.u32 	{%r1243, %r1244}, [%rd1173+4];
	ld.local.v4.u32 	{%r1245, %r1246, %r1247, %r1248}, [%rd1173+220];
	mov.u32 	%r1408, 0;

BB7_8:
	mov.u32 	%r28, %r1412;
	mov.u32 	%r27, %r1411;
	mov.u32 	%r26, %r1410;
	mov.u32 	%r25, %r1409;
	shr.u32 	%r1274, %r1408, 2;
	shl.b32 	%r1275, %r1274, 2;
	cvt.u64.u32	%rd1076, %r1275;
	add.s64 	%rd1077, %rd1073, %rd1076;
	ld.global.u32 	%r1250, [%rd1077];
	// inline asm
	prmt.b32 %r1412, %r1250, 0, 0x0123;
	// inline asm
	add.s32 	%r1276, %r1274, 1;
	mul.wide.u32 	%rd1078, %r1276, 4;
	add.s64 	%rd1079, %rd1073, %rd1078;
	ld.global.u32 	%r1252, [%rd1079];
	// inline asm
	prmt.b32 %r1411, %r1252, 0, 0x0123;
	// inline asm
	add.s32 	%r1277, %r1274, 2;
	mul.wide.u32 	%rd1080, %r1277, 4;
	add.s64 	%rd1081, %rd1073, %rd1080;
	ld.global.u32 	%r1254, [%rd1081];
	// inline asm
	prmt.b32 %r1410, %r1254, 0, 0x0123;
	// inline asm
	add.s32 	%r1278, %r1274, 3;
	mul.wide.u32 	%rd1082, %r1278, 4;
	add.s64 	%rd1083, %rd1073, %rd1082;
	ld.global.u32 	%r1256, [%rd1083];
	// inline asm
	prmt.b32 %r1409, %r1256, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1257, %r1412, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1259, %r1411, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1261, %r1410, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1263, %r1409, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1265, %r1257, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1267, %r1259, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1269, %r1261, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1271, %r1263, 0, 0x0123;
	// inline asm
	xor.b32  	%r1413, %r16, %r1265;
	xor.b32  	%r1414, %r17, %r1267;
	xor.b32  	%r1415, %r1243, %r1269;
	xor.b32  	%r1416, %r1244, %r1271;
	mov.u32 	%r1417, 4;
	mov.u64 	%rd1177, %rd1;
	bra.uni 	BB7_9;

BB7_19:
	cvt.u32.u16	%r1348, %rs4;
	mul.wide.u32 	%rd1122, %r1348, 4;
	add.s64 	%rd1124, %rd239, %rd1122;
	cvt.u32.u16	%r1349, %rs7;
	and.b32  	%r1350, %r1349, 255;
	mul.wide.u32 	%rd1125, %r1350, 4;
	add.s64 	%rd1127, %rd244, %rd1125;
	ld.shared.u32 	%r1351, [%rd1127];
	ld.shared.u32 	%r1352, [%rd1124];
	xor.b32  	%r1353, %r1351, %r1352;
	cvt.u32.u16	%r1354, %rs10;
	mul.wide.u32 	%rd1128, %r1354, 4;
	add.s64 	%rd1130, %rd249, %rd1128;
	ld.shared.u32 	%r1355, [%rd1130];
	xor.b32  	%r1356, %r1353, %r1355;
	cvt.u32.u16	%r1357, %rs13;
	and.b32  	%r1358, %r1357, 255;
	mul.wide.u32 	%rd1131, %r1358, 4;
	add.s64 	%rd1133, %rd254, %rd1131;
	ld.shared.u32 	%r1359, [%rd1133];
	xor.b32  	%r1360, %r1356, %r1359;
	add.s64 	%rd19, %rd1177, 16;
	ld.local.v4.u32 	{%r1361, %r1362, %r1363, %r1364}, [%rd1177+16];
	xor.b32  	%r1413, %r1360, %r1361;
	cvt.u32.u16	%r1366, %rs3;
	and.b32  	%r1367, %r1366, 255;
	mul.wide.u32 	%rd1134, %r1367, 4;
	add.s64 	%rd1135, %rd244, %rd1134;
	ld.shared.u32 	%r1368, [%rd1135];
	shl.b64 	%rd1136, %rd9, 2;
	add.s64 	%rd1137, %rd239, %rd1136;
	ld.shared.u32 	%r1369, [%rd1137];
	xor.b32  	%r1370, %r1368, %r1369;
	cvt.u32.u16	%r1371, %rs6;
	mul.wide.u32 	%rd1138, %r1371, 4;
	add.s64 	%rd1139, %rd249, %rd1138;
	ld.shared.u32 	%r1372, [%rd1139];
	xor.b32  	%r1373, %r1370, %r1372;
	shl.b64 	%rd1140, %rd10, 2;
	add.s64 	%rd1141, %rd254, %rd1140;
	ld.shared.u32 	%r1374, [%rd1141];
	xor.b32  	%r1375, %r1373, %r1374;
	xor.b32  	%r1414, %r1375, %r1362;
	shl.b64 	%rd1142, %rd12, 2;
	add.s64 	%rd1143, %rd244, %rd1142;
	ld.shared.u32 	%r1377, [%rd1143];
	shl.b64 	%rd1144, %rd11, 2;
	add.s64 	%rd1145, %rd239, %rd1144;
	ld.shared.u32 	%r1378, [%rd1145];
	xor.b32  	%r1379, %r1377, %r1378;
	shl.b64 	%rd1146, %rd13, 2;
	add.s64 	%rd1147, %rd249, %rd1146;
	ld.shared.u32 	%r1380, [%rd1147];
	xor.b32  	%r1381, %r1379, %r1380;
	shl.b64 	%rd1148, %rd14, 2;
	add.s64 	%rd1149, %rd254, %rd1148;
	ld.shared.u32 	%r1382, [%rd1149];
	xor.b32  	%r1383, %r1381, %r1382;
	xor.b32  	%r1415, %r1383, %r1363;
	shl.b64 	%rd1150, %rd16, 2;
	add.s64 	%rd1151, %rd244, %rd1150;
	ld.shared.u32 	%r1385, [%rd1151];
	shl.b64 	%rd1152, %rd15, 2;
	add.s64 	%rd1153, %rd239, %rd1152;
	ld.shared.u32 	%r1386, [%rd1153];
	xor.b32  	%r1387, %r1385, %r1386;
	shl.b64 	%rd1154, %rd17, 2;
	add.s64 	%rd1155, %rd249, %rd1154;
	ld.shared.u32 	%r1388, [%rd1155];
	xor.b32  	%r1389, %r1387, %r1388;
	shl.b64 	%rd1156, %rd18, 2;
	add.s64 	%rd1157, %rd254, %rd1156;
	ld.shared.u32 	%r1390, [%rd1157];
	xor.b32  	%r1391, %r1389, %r1390;
	xor.b32  	%r1416, %r1391, %r1364;
	add.s32 	%r1417, %r1417, 4;
	mov.u64 	%rd1177, %rd19;

BB7_9:
	mov.b32	{%rs1, %rs3}, %r1413;
	shr.u16 	%rs4, %rs3, 8;
	shr.u16 	%rs2, %rs1, 8;
	mov.b32	{%rs5, %rs7}, %r1416;
	shr.u16 	%rs6, %rs5, 8;
	shr.u16 	%rs8, %rs7, 8;
	mov.b32	{%rs9, %rs11}, %r1415;
	shr.u16 	%rs10, %rs9, 8;
	shr.u16 	%rs12, %rs11, 8;
	mov.b32	{%rs13, %rs15}, %r1414;
	shr.u16 	%rs14, %rs13, 8;
	shr.u16 	%rs16, %rs15, 8;
	cvt.u64.u16	%rd9, %rs16;
	cvt.u64.u16	%rd1084, %rs9;
	and.b64  	%rd10, %rd1084, 255;
	cvt.u64.u16	%rd11, %rs12;
	cvt.u64.u16	%rd1085, %rs15;
	and.b64  	%rd12, %rd1085, 255;
	cvt.u64.u16	%rd13, %rs2;
	cvt.u64.u16	%rd1086, %rs5;
	and.b64  	%rd14, %rd1086, 255;
	cvt.u64.u16	%rd15, %rs8;
	cvt.u64.u16	%rd1087, %rs11;
	and.b64  	%rd16, %rd1087, 255;
	cvt.u64.u16	%rd17, %rs14;
	cvt.u64.u16	%rd1088, %rs1;
	and.b64  	%rd18, %rd1088, 255;
	setp.lt.s32	%p15, %r1417, 56;
	@%p15 bra 	BB7_19;

	cvt.u32.u16	%r1295, %rs4;
	mul.wide.u32 	%rd1089, %r1295, 4;
	mov.u64 	%rd1090, m11300_comp$s_td4;
	add.s64 	%rd1091, %rd1090, %rd1089;
	ld.shared.u32 	%r1296, [%rd1091];
	and.b32  	%r1297, %r1296, -16777216;
	cvt.u32.u16	%r1298, %rs7;
	and.b32  	%r1299, %r1298, 255;
	mul.wide.u32 	%rd1092, %r1299, 4;
	add.s64 	%rd1093, %rd1090, %rd1092;
	ld.shared.u32 	%r1300, [%rd1093];
	and.b32  	%r1301, %r1300, 16711680;
	or.b32  	%r1302, %r1301, %r1297;
	cvt.u32.u16	%r1303, %rs10;
	mul.wide.u32 	%rd1094, %r1303, 4;
	add.s64 	%rd1095, %rd1090, %rd1094;
	ld.shared.u32 	%r1304, [%rd1095];
	and.b32  	%r1305, %r1304, 65280;
	or.b32  	%r1306, %r1302, %r1305;
	cvt.u32.u16	%r1307, %rs13;
	and.b32  	%r1308, %r1307, 255;
	mul.wide.u32 	%rd1096, %r1308, 4;
	add.s64 	%rd1097, %rd1090, %rd1096;
	ld.shared.u8 	%r1309, [%rd1097];
	or.b32  	%r1310, %r1306, %r1309;
	xor.b32  	%r1280, %r1310, %r1245;
	shl.b64 	%rd1098, %rd9, 2;
	add.s64 	%rd1099, %rd1090, %rd1098;
	ld.shared.u32 	%r1311, [%rd1099];
	and.b32  	%r1312, %r1311, -16777216;
	cvt.u32.u16	%r1313, %rs3;
	and.b32  	%r1314, %r1313, 255;
	mul.wide.u32 	%rd1100, %r1314, 4;
	add.s64 	%rd1101, %rd1090, %rd1100;
	ld.shared.u32 	%r1315, [%rd1101];
	and.b32  	%r1316, %r1315, 16711680;
	or.b32  	%r1317, %r1316, %r1312;
	cvt.u32.u16	%r1318, %rs6;
	mul.wide.u32 	%rd1102, %r1318, 4;
	add.s64 	%rd1103, %rd1090, %rd1102;
	ld.shared.u32 	%r1319, [%rd1103];
	and.b32  	%r1320, %r1319, 65280;
	or.b32  	%r1321, %r1317, %r1320;
	shl.b64 	%rd1104, %rd10, 2;
	add.s64 	%rd1105, %rd1090, %rd1104;
	ld.shared.u8 	%r1322, [%rd1105];
	or.b32  	%r1323, %r1321, %r1322;
	xor.b32  	%r1282, %r1323, %r1246;
	shl.b64 	%rd1106, %rd11, 2;
	add.s64 	%rd1107, %rd1090, %rd1106;
	ld.shared.u32 	%r1324, [%rd1107];
	and.b32  	%r1325, %r1324, -16777216;
	shl.b64 	%rd1108, %rd12, 2;
	add.s64 	%rd1109, %rd1090, %rd1108;
	ld.shared.u32 	%r1326, [%rd1109];
	and.b32  	%r1327, %r1326, 16711680;
	or.b32  	%r1328, %r1327, %r1325;
	shl.b64 	%rd1110, %rd13, 2;
	add.s64 	%rd1111, %rd1090, %rd1110;
	ld.shared.u32 	%r1329, [%rd1111];
	and.b32  	%r1330, %r1329, 65280;
	or.b32  	%r1331, %r1328, %r1330;
	shl.b64 	%rd1112, %rd14, 2;
	add.s64 	%rd1113, %rd1090, %rd1112;
	ld.shared.u8 	%r1332, [%rd1113];
	or.b32  	%r1333, %r1331, %r1332;
	xor.b32  	%r1284, %r1333, %r1247;
	shl.b64 	%rd1114, %rd15, 2;
	add.s64 	%rd1115, %rd1090, %rd1114;
	ld.shared.u32 	%r1334, [%rd1115];
	and.b32  	%r1335, %r1334, -16777216;
	shl.b64 	%rd1116, %rd16, 2;
	add.s64 	%rd1117, %rd1090, %rd1116;
	ld.shared.u32 	%r1336, [%rd1117];
	and.b32  	%r1337, %r1336, 16711680;
	or.b32  	%r1338, %r1337, %r1335;
	shl.b64 	%rd1118, %rd17, 2;
	add.s64 	%rd1119, %rd1090, %rd1118;
	ld.shared.u32 	%r1339, [%rd1119];
	and.b32  	%r1340, %r1339, 65280;
	or.b32  	%r1341, %r1338, %r1340;
	shl.b64 	%rd1120, %rd18, 2;
	add.s64 	%rd1121, %rd1090, %rd1120;
	ld.shared.u8 	%r1342, [%rd1121];
	or.b32  	%r1343, %r1341, %r1342;
	xor.b32  	%r1286, %r1343, %r1248;
	// inline asm
	prmt.b32 %r1279, %r1280, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1281, %r1282, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1283, %r1284, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1285, %r1286, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1287, %r1279, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1289, %r1281, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1291, %r1283, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1293, %r1285, 0, 0x0123;
	// inline asm
	add.s32 	%r1408, %r1408, 16;
	setp.lt.u32	%p16, %r1408, %r15;
	@%p16 bra 	BB7_8;

	xor.b32  	%r1344, %r1287, %r28;
	setp.eq.s32	%p22, %r1344, 269488144;
	xor.b32  	%r1345, %r1289, %r27;
	setp.eq.s32	%p23, %r1345, 269488144;
	xor.b32  	%r1346, %r1291, %r26;
	setp.eq.s32	%p24, %r1346, 269488144;
	xor.b32  	%r1347, %r1293, %r25;
	setp.eq.s32	%p25, %r1347, 269488144;

BB7_12:
	and.pred  	%p17, %p22, %p23;
	and.pred  	%p18, %p17, %p24;
	and.pred  	%p19, %p18, %p25;
	@!%p19 bra 	BB7_17;
	bra.uni 	BB7_13;

BB7_13:
	ld.param.u32 	%r1402, [m11300_comp_param_32];
	ld.param.u64 	%rd1170, [m11300_comp_param_16];
	mul.wide.u32 	%rd1158, %r1402, 4;
	add.s64 	%rd1159, %rd1170, %rd1158;
	atom.global.add.u32 	%r1393, [%rd1159], 1;
	setp.ne.s32	%p20, %r1393, 0;
	@%p20 bra 	BB7_17;

	ld.param.u64 	%rd1174, [m11300_comp_param_19];
	ld.param.u32 	%r1399, [m11300_comp_param_31];
	atom.global.add.u32 	%r52, [%rd1174], 1;
	setp.lt.u32	%p21, %r52, %r1399;
	@%p21 bra 	BB7_16;
	bra.uni 	BB7_15;

BB7_16:
	ld.param.u32 	%r1403, [m11300_comp_param_32];
	ld.param.u32 	%r1400, [m11300_comp_param_27];
	ld.param.u64 	%rd1171, [m11300_comp_param_14];
	mul.wide.u32 	%rd1160, %r52, 32;
	add.s64 	%rd1161, %rd1171, %rd1160;
	mov.u32 	%r1395, 0;
	st.global.v2.u32 	[%rd1161], {%r1400, %r1395};
	st.global.u32 	[%rd1161+8], %r1403;
	and.b64  	%rd1162, %rd2, 4294967295;
	st.global.u32 	[%rd1161+24], %r1395;
	st.global.u64 	[%rd1161+16], %rd1162;
	bra.uni 	BB7_17;

BB7_15:
	ld.param.u64 	%rd1175, [m11300_comp_param_19];
	atom.global.add.u32 	%r1394, [%rd1175], -1;

BB7_17:
	ret;
}


  