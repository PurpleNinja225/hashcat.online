//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 4 .b8 c_append_helper[4096] = {255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255};
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u64 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd2, [gpu_memset_param_0];
	ld.param.u32 	%r1, [gpu_memset_param_1];
	ld.param.u64 	%rd3, [gpu_memset_param_2];
	mov.b32	%r2, %envreg3;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mad.lo.s32 	%r5, %r3, %r4, %r2;
	mov.u32 	%r6, %tid.x;
	add.s32 	%r7, %r5, %r6;
	cvt.s64.s32	%rd1, %r7;
	setp.ge.u64	%p1, %rd1, %rd3;
	@%p1 bra 	BB0_2;

	shl.b64 	%rd4, %rd1, 4;
	add.s64 	%rd5, %rd2, %rd4;
	st.global.v4.u32 	[%rd5], {%r1, %r1, %r1, %r1};

BB0_2:
	ret;
}

	// .globl	m01700_m04
.entry m01700_m04(
	.param .u64 .ptr .global .align 4 m01700_m04_param_0,
	.param .u64 .ptr .global .align 4 m01700_m04_param_1,
	.param .u64 .ptr .global .align 4 m01700_m04_param_2,
	.param .u64 .ptr .const .align 4 m01700_m04_param_3,
	.param .u64 .ptr .global .align 1 m01700_m04_param_4,
	.param .u64 .ptr .global .align 1 m01700_m04_param_5,
	.param .u64 .ptr .global .align 4 m01700_m04_param_6,
	.param .u64 .ptr .global .align 4 m01700_m04_param_7,
	.param .u64 .ptr .global .align 4 m01700_m04_param_8,
	.param .u64 .ptr .global .align 4 m01700_m04_param_9,
	.param .u64 .ptr .global .align 4 m01700_m04_param_10,
	.param .u64 .ptr .global .align 4 m01700_m04_param_11,
	.param .u64 .ptr .global .align 4 m01700_m04_param_12,
	.param .u64 .ptr .global .align 4 m01700_m04_param_13,
	.param .u64 .ptr .global .align 4 m01700_m04_param_14,
	.param .u64 .ptr .global .align 4 m01700_m04_param_15,
	.param .u64 .ptr .global .align 4 m01700_m04_param_16,
	.param .u64 .ptr .global .align 4 m01700_m04_param_17,
	.param .u64 .ptr .global .align 1 m01700_m04_param_18,
	.param .u64 .ptr .global .align 4 m01700_m04_param_19,
	.param .u64 .ptr .global .align 4 m01700_m04_param_20,
	.param .u64 .ptr .global .align 4 m01700_m04_param_21,
	.param .u64 .ptr .global .align 4 m01700_m04_param_22,
	.param .u64 .ptr .global .align 4 m01700_m04_param_23,
	.param .u32 m01700_m04_param_24,
	.param .u32 m01700_m04_param_25,
	.param .u32 m01700_m04_param_26,
	.param .u32 m01700_m04_param_27,
	.param .u32 m01700_m04_param_28,
	.param .u32 m01700_m04_param_29,
	.param .u32 m01700_m04_param_30,
	.param .u32 m01700_m04_param_31,
	.param .u32 m01700_m04_param_32,
	.param .u32 m01700_m04_param_33,
	.param .u64 m01700_m04_param_34
)
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<1921>;
	.reg .b64 	%rd<2759>;


	ld.param.u64 	%rd95, [m01700_m04_param_0];
	ld.param.u64 	%rd108, [m01700_m04_param_19];
	ld.param.u32 	%r32, [m01700_m04_param_24];
	ld.param.u32 	%r33, [m01700_m04_param_25];
	ld.param.u32 	%r34, [m01700_m04_param_26];
	ld.param.u32 	%r36, [m01700_m04_param_30];
	ld.param.u32 	%r37, [m01700_m04_param_31];
	ld.param.u32 	%r38, [m01700_m04_param_32];
	ld.param.u64 	%rd109, [m01700_m04_param_34];
	mov.b32	%r39, %envreg3;
	mov.u32 	%r40, %ctaid.x;
	mov.u32 	%r41, %ntid.x;
	mad.lo.s32 	%r42, %r40, %r41, %r39;
	mov.u32 	%r43, %tid.x;
	add.s32 	%r1, %r42, %r43;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd109;
	@%p1 bra 	BB1_31;

	setp.eq.s32	%p2, %r36, 0;
	@%p2 bra 	BB1_31;

	mul.lo.s64 	%rd110, %rd1, 260;
	add.s64 	%rd111, %rd95, %rd110;
	ld.global.u32 	%r2, [%rd111];
	ld.global.u32 	%r3, [%rd111+4];
	ld.global.u32 	%r45, [%rd111+8];
	ld.global.u32 	%r46, [%rd111+12];
	mov.b64	%rd112, {%r46, %r45};
	ld.global.u32 	%r47, [%rd111+60];
	mov.u32 	%r1916, 0;
	mov.b64	%rd2, {%r47, %r1916};
	mov.u64 	%rd113, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r48,%dummy}, %rd113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r49}, %rd113;
	}
	shf.r.wrap.b32 	%r50, %r49, %r48, 18;
	shf.r.wrap.b32 	%r51, %r48, %r49, 18;
	mov.b64 	%rd114, {%r51, %r50};
	shf.r.wrap.b32 	%r52, %r49, %r48, 14;
	shf.r.wrap.b32 	%r53, %r48, %r49, 14;
	mov.b64 	%rd115, {%r53, %r52};
	xor.b64  	%rd116, %rd114, %rd115;
	shf.l.wrap.b32 	%r54, %r48, %r49, 23;
	shf.l.wrap.b32 	%r55, %r49, %r48, 23;
	mov.b64 	%rd117, {%r55, %r54};
	xor.b64  	%rd3, %rd116, %rd117;
	ld.const.u64 	%rd118, [k_sha512];
	add.s64 	%rd4, %rd118, 8891960152096595636;
	mov.u64 	%rd119, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r56}, %rd119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r57,%dummy}, %rd119;
	}
	shf.l.wrap.b32 	%r58, %r57, %r56, 30;
	shf.l.wrap.b32 	%r59, %r56, %r57, 30;
	mov.b64 	%rd120, {%r59, %r58};
	shf.r.wrap.b32 	%r60, %r56, %r57, 28;
	shf.r.wrap.b32 	%r61, %r57, %r56, 28;
	mov.b64 	%rd121, {%r61, %r60};
	xor.b64  	%rd122, %rd120, %rd121;
	shf.l.wrap.b32 	%r62, %r57, %r56, 25;
	shf.l.wrap.b32 	%r63, %r56, %r57, 25;
	mov.b64 	%rd123, {%r63, %r62};
	xor.b64  	%rd5, %rd122, %rd123;
	ld.const.u64 	%rd124, [k_sha512+8];
	add.s64 	%rd125, %rd112, %rd124;
	add.s64 	%rd6, %rd125, 2270897969802886507;
	ld.const.u64 	%rd126, [k_sha512+16];
	add.s64 	%rd7, %rd126, -7276294671716946913;
	ld.const.u64 	%rd127, [k_sha512+24];
	add.s64 	%rd8, %rd127, 5840696475078001361;
	and.b32  	%r5, %r33, 31;
	and.b32  	%r6, %r34, 31;
	cvt.u64.u32	%rd21, %r38;
	mov.u64 	%rd128, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r64}, %rd128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r65,%dummy}, %rd128;
	}
	shf.l.wrap.b32 	%r66, %r65, %r64, 3;
	shf.l.wrap.b32 	%r67, %r64, %r65, 3;
	mov.b64 	%rd129, {%r67, %r66};
	shf.r.wrap.b32 	%r68, %r64, %r65, 19;
	shf.r.wrap.b32 	%r69, %r65, %r64, 19;
	mov.b64 	%rd130, {%r69, %r68};
	xor.b64  	%rd22, %rd130, %rd129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r70,%dummy}, %rd112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r71}, %rd112;
	}
	shf.r.wrap.b32 	%r72, %r71, %r70, 1;
	shf.r.wrap.b32 	%r73, %r70, %r71, 1;
	mov.b64 	%rd131, {%r73, %r72};
	shf.r.wrap.b32 	%r74, %r71, %r70, 8;
	shf.r.wrap.b32 	%r75, %r70, %r71, 8;
	mov.b64 	%rd132, {%r75, %r74};
	shr.u64 	%rd133, %rd112, 7;
	xor.b64  	%rd134, %rd131, %rd133;
	xor.b64  	%rd23, %rd134, %rd132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd2;
	}
	shf.r.wrap.b32 	%r78, %r77, %r76, 19;
	shf.r.wrap.b32 	%r79, %r76, %r77, 19;
	mov.b64 	%rd135, {%r79, %r78};
	shf.l.wrap.b32 	%r80, %r76, %r77, 3;
	shf.l.wrap.b32 	%r81, %r77, %r76, 3;
	mov.b64 	%rd136, {%r81, %r80};
	shr.u64 	%rd137, %rd2, 6;
	xor.b64  	%rd138, %rd135, %rd137;
	xor.b64  	%rd139, %rd138, %rd136;
	shf.r.wrap.b32 	%r82, %r64, %r65, 8;
	shf.r.wrap.b32 	%r83, %r65, %r64, 8;
	mov.b64 	%rd140, {%r83, %r82};
	shf.r.wrap.b32 	%r84, %r64, %r65, 1;
	shf.r.wrap.b32 	%r85, %r65, %r64, 1;
	mov.b64 	%rd141, {%r85, %r84};
	xor.b64  	%rd24, %rd141, %rd140;
	add.s64 	%rd142, %rd112, %rd139;
	add.s64 	%rd25, %rd142, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r86,%dummy}, %rd25;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r87}, %rd25;
	}
	shf.r.wrap.b32 	%r88, %r87, %r86, 19;
	shf.r.wrap.b32 	%r89, %r86, %r87, 19;
	mov.b64 	%rd143, {%r89, %r88};
	shf.l.wrap.b32 	%r90, %r86, %r87, 3;
	shf.l.wrap.b32 	%r91, %r87, %r86, 3;
	mov.b64 	%rd144, {%r91, %r90};
	shr.u64 	%rd145, %rd25, 6;
	xor.b64  	%rd146, %rd143, %rd145;
	xor.b64  	%rd147, %rd146, %rd144;
	add.s64 	%rd26, %rd147, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r92,%dummy}, %rd26;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r93}, %rd26;
	}
	shf.r.wrap.b32 	%r94, %r93, %r92, 19;
	shf.r.wrap.b32 	%r95, %r92, %r93, 19;
	mov.b64 	%rd148, {%r95, %r94};
	shf.l.wrap.b32 	%r96, %r92, %r93, 3;
	shf.l.wrap.b32 	%r97, %r93, %r92, 3;
	mov.b64 	%rd149, {%r97, %r96};
	shr.u64 	%rd150, %rd26, 6;
	xor.b64  	%rd151, %rd148, %rd150;
	xor.b64  	%rd152, %rd151, %rd149;
	add.s64 	%rd27, %rd152, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r98,%dummy}, %rd27;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r99}, %rd27;
	}
	shf.r.wrap.b32 	%r100, %r99, %r98, 19;
	shf.r.wrap.b32 	%r101, %r98, %r99, 19;
	mov.b64 	%rd153, {%r101, %r100};
	shf.l.wrap.b32 	%r102, %r98, %r99, 3;
	shf.l.wrap.b32 	%r103, %r99, %r98, 3;
	mov.b64 	%rd154, {%r103, %r102};
	shr.u64 	%rd155, %rd27, 6;
	xor.b64  	%rd156, %rd153, %rd155;
	xor.b64  	%rd28, %rd156, %rd154;
	shf.r.wrap.b32 	%r104, %r77, %r76, 1;
	shf.r.wrap.b32 	%r105, %r76, %r77, 1;
	mov.b64 	%rd157, {%r105, %r104};
	shf.r.wrap.b32 	%r106, %r77, %r76, 8;
	shf.r.wrap.b32 	%r107, %r76, %r77, 8;
	mov.b64 	%rd158, {%r107, %r106};
	shr.u64 	%rd159, %rd2, 7;
	xor.b64  	%rd160, %rd157, %rd159;
	xor.b64  	%rd29, %rd160, %rd158;
	shf.r.wrap.b32 	%r108, %r87, %r86, 1;
	shf.r.wrap.b32 	%r109, %r86, %r87, 1;
	mov.b64 	%rd161, {%r109, %r108};
	shf.r.wrap.b32 	%r110, %r87, %r86, 8;
	shf.r.wrap.b32 	%r111, %r86, %r87, 8;
	mov.b64 	%rd162, {%r111, %r110};
	shr.u64 	%rd163, %rd25, 7;
	xor.b64  	%rd164, %rd161, %rd163;
	xor.b64  	%rd46, %rd164, %rd162;
	shf.r.wrap.b32 	%r112, %r93, %r92, 1;
	shf.r.wrap.b32 	%r113, %r92, %r93, 1;
	mov.b64 	%rd165, {%r113, %r112};
	shf.r.wrap.b32 	%r114, %r93, %r92, 8;
	shf.r.wrap.b32 	%r115, %r92, %r93, 8;
	mov.b64 	%rd166, {%r115, %r114};
	shr.u64 	%rd167, %rd26, 7;
	xor.b64  	%rd168, %rd165, %rd167;
	xor.b64  	%rd47, %rd168, %rd166;
	shf.r.wrap.b32 	%r116, %r99, %r98, 1;
	shf.r.wrap.b32 	%r117, %r98, %r99, 1;
	mov.b64 	%rd169, {%r117, %r116};
	shf.r.wrap.b32 	%r118, %r99, %r98, 8;
	shf.r.wrap.b32 	%r119, %r98, %r99, 8;
	mov.b64 	%rd170, {%r119, %r118};
	shr.u64 	%rd171, %rd27, 7;
	xor.b64  	%rd172, %rd169, %rd171;
	xor.b64  	%rd48, %rd172, %rd170;

BB1_3:
	mov.u32 	%r1915, 0;
	mov.b64	%rd2758, {%r47, %r1915};
	ld.param.u64 	%rd2751, [m01700_m04_param_6];
	ld.const.u64 	%rd2750, [k_sha512+608];
	ld.const.u64 	%rd2749, [k_sha512+600];
	ld.const.u64 	%rd2748, [k_sha512+592];
	ld.const.u64 	%rd2747, [k_sha512+584];
	ld.const.u64 	%rd2746, [k_sha512+576];
	ld.const.u64 	%rd2745, [k_sha512+568];
	ld.const.u64 	%rd2744, [k_sha512+560];
	ld.const.u64 	%rd2743, [k_sha512+552];
	ld.const.u64 	%rd2742, [k_sha512+544];
	ld.const.u64 	%rd2741, [k_sha512+536];
	ld.const.u64 	%rd2740, [k_sha512+528];
	ld.const.u64 	%rd2739, [k_sha512+520];
	ld.const.u64 	%rd2738, [k_sha512+512];
	ld.const.u64 	%rd2737, [k_sha512+504];
	ld.const.u64 	%rd2736, [k_sha512+496];
	ld.const.u64 	%rd2735, [k_sha512+488];
	ld.const.u64 	%rd2734, [k_sha512+480];
	ld.const.u64 	%rd2733, [k_sha512+472];
	ld.const.u64 	%rd2732, [k_sha512+464];
	ld.const.u64 	%rd2731, [k_sha512+456];
	ld.const.u64 	%rd2730, [k_sha512+448];
	ld.const.u64 	%rd2725, [k_sha512+440];
	ld.const.u64 	%rd2724, [k_sha512+432];
	ld.const.u64 	%rd2723, [k_sha512+424];
	ld.const.u64 	%rd2722, [k_sha512+416];
	ld.const.u64 	%rd2721, [k_sha512+408];
	ld.const.u64 	%rd2720, [k_sha512+400];
	ld.const.u64 	%rd2719, [k_sha512+392];
	ld.const.u64 	%rd2718, [k_sha512+384];
	ld.const.u64 	%rd2717, [k_sha512+376];
	ld.const.u64 	%rd2716, [k_sha512+368];
	ld.const.u64 	%rd2715, [k_sha512+360];
	ld.const.u64 	%rd2714, [k_sha512+352];
	ld.const.u64 	%rd2713, [k_sha512+344];
	ld.const.u64 	%rd2712, [k_sha512+336];
	ld.const.u64 	%rd2711, [k_sha512+328];
	ld.const.u64 	%rd2710, [k_sha512+320];
	ld.const.u64 	%rd2709, [k_sha512+312];
	ld.const.u64 	%rd2708, [k_sha512+304];
	ld.const.u64 	%rd2707, [k_sha512+296];
	ld.const.u64 	%rd2706, [k_sha512+288];
	ld.const.u64 	%rd2705, [k_sha512+280];
	ld.const.u64 	%rd2704, [k_sha512+272];
	ld.const.u64 	%rd2703, [k_sha512+264];
	ld.const.u64 	%rd2702, [k_sha512+256];
	ld.const.u64 	%rd2701, [k_sha512+248];
	ld.const.u64 	%rd2700, [k_sha512+240];
	ld.const.u64 	%rd2699, [k_sha512+232];
	ld.const.u64 	%rd2698, [k_sha512+224];
	ld.const.u64 	%rd2697, [k_sha512+216];
	ld.const.u64 	%rd2696, [k_sha512+208];
	ld.const.u64 	%rd2695, [k_sha512+200];
	ld.const.u64 	%rd2694, [k_sha512+192];
	ld.const.u64 	%rd2693, [k_sha512+184];
	ld.const.u64 	%rd2692, [k_sha512+176];
	ld.const.u64 	%rd2691, [k_sha512+168];
	ld.const.u64 	%rd2690, [k_sha512+160];
	ld.const.u64 	%rd2689, [k_sha512+152];
	ld.const.u64 	%rd2688, [k_sha512+144];
	ld.const.u64 	%rd2687, [k_sha512+136];
	ld.const.u64 	%rd2686, [k_sha512+128];
	ld.const.u64 	%rd2685, [k_sha512+120];
	ld.const.u64 	%rd2684, [k_sha512+112];
	ld.const.u64 	%rd2683, [k_sha512+104];
	ld.const.u64 	%rd2682, [k_sha512+96];
	ld.const.u64 	%rd2681, [k_sha512+88];
	ld.const.u64 	%rd2680, [k_sha512+80];
	ld.const.u64 	%rd2679, [k_sha512+72];
	ld.const.u64 	%rd2678, [k_sha512+64];
	ld.const.u64 	%rd2677, [k_sha512+56];
	ld.const.u64 	%rd2676, [k_sha512+48];
	ld.const.u64 	%rd2675, [k_sha512+40];
	ld.const.u64 	%rd2674, [k_sha512+32];
	ld.param.u64 	%rd2673, [m01700_m04_param_3];
	mul.wide.u32 	%rd173, %r1916, 4;
	add.s64 	%rd174, %rd2673, %rd173;
	ld.const.u32 	%r120, [%rd174];
	or.b32  	%r121, %r120, %r2;
	mov.b64	%rd175, {%r3, %r121};
	add.s64 	%rd176, %rd4, %rd175;
	add.s64 	%rd177, %rd176, %rd3;
	add.s64 	%rd178, %rd177, -6534734903238641935;
	add.s64 	%rd179, %rd177, %rd5;
	add.s64 	%rd180, %rd179, 4210837510808201515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r122,%dummy}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r123}, %rd178;
	}
	shf.r.wrap.b32 	%r124, %r123, %r122, 14;
	shf.r.wrap.b32 	%r125, %r122, %r123, 14;
	mov.b64 	%rd181, {%r125, %r124};
	shf.r.wrap.b32 	%r126, %r123, %r122, 18;
	shf.r.wrap.b32 	%r127, %r122, %r123, 18;
	mov.b64 	%rd182, {%r127, %r126};
	xor.b64  	%rd183, %rd182, %rd181;
	shf.l.wrap.b32 	%r128, %r122, %r123, 23;
	shf.l.wrap.b32 	%r129, %r123, %r122, 23;
	mov.b64 	%rd184, {%r129, %r128};
	xor.b64  	%rd185, %rd183, %rd184;
	and.b64  	%rd186, %rd178, -3887949035690463538;
	xor.b64  	%rd187, %rd186, -7276294671716946913;
	add.s64 	%rd188, %rd6, %rd187;
	add.s64 	%rd189, %rd188, %rd185;
	add.s64 	%rd190, %rd189, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r130,%dummy}, %rd180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r131}, %rd180;
	}
	shf.r.wrap.b32 	%r132, %r131, %r130, 28;
	shf.r.wrap.b32 	%r133, %r130, %r131, 28;
	mov.b64 	%rd191, {%r133, %r132};
	shf.l.wrap.b32 	%r134, %r130, %r131, 30;
	shf.l.wrap.b32 	%r135, %r131, %r130, 30;
	mov.b64 	%rd192, {%r135, %r134};
	xor.b64  	%rd193, %rd192, %rd191;
	shf.l.wrap.b32 	%r136, %r130, %r131, 25;
	shf.l.wrap.b32 	%r137, %r131, %r130, 25;
	mov.b64 	%rd194, {%r137, %r136};
	xor.b64  	%rd195, %rd193, %rd194;
	xor.b64  	%rd196, %rd180, -4942790177534073029;
	xor.b64  	%rd197, %rd180, 7640891576956012808;
	and.b64  	%rd198, %rd197, %rd196;
	xor.b64  	%rd199, %rd198, %rd180;
	add.s64 	%rd200, %rd189, %rd199;
	add.s64 	%rd201, %rd200, %rd195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r138,%dummy}, %rd190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r139}, %rd190;
	}
	shf.r.wrap.b32 	%r140, %r139, %r138, 14;
	shf.r.wrap.b32 	%r141, %r138, %r139, 14;
	mov.b64 	%rd202, {%r141, %r140};
	shf.r.wrap.b32 	%r142, %r139, %r138, 18;
	shf.r.wrap.b32 	%r143, %r138, %r139, 18;
	mov.b64 	%rd203, {%r143, %r142};
	xor.b64  	%rd204, %rd203, %rd202;
	shf.l.wrap.b32 	%r144, %r138, %r139, 23;
	shf.l.wrap.b32 	%r145, %r139, %r138, 23;
	mov.b64 	%rd205, {%r145, %r144};
	xor.b64  	%rd206, %rd204, %rd205;
	xor.b64  	%rd207, %rd178, 5840696475078001361;
	and.b64  	%rd208, %rd190, %rd207;
	xor.b64  	%rd209, %rd208, 5840696475078001361;
	add.s64 	%rd210, %rd7, %rd209;
	add.s64 	%rd211, %rd210, %rd206;
	add.s64 	%rd212, %rd211, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r146,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r147}, %rd201;
	}
	shf.r.wrap.b32 	%r148, %r147, %r146, 28;
	shf.r.wrap.b32 	%r149, %r146, %r147, 28;
	mov.b64 	%rd213, {%r149, %r148};
	shf.l.wrap.b32 	%r150, %r146, %r147, 30;
	shf.l.wrap.b32 	%r151, %r147, %r146, 30;
	mov.b64 	%rd214, {%r151, %r150};
	xor.b64  	%rd215, %rd214, %rd213;
	shf.l.wrap.b32 	%r152, %r146, %r147, 25;
	shf.l.wrap.b32 	%r153, %r147, %r146, 25;
	mov.b64 	%rd216, {%r153, %r152};
	xor.b64  	%rd217, %rd215, %rd216;
	xor.b64  	%rd218, %rd201, 7640891576956012808;
	xor.b64  	%rd219, %rd201, %rd180;
	and.b64  	%rd220, %rd219, %rd218;
	xor.b64  	%rd221, %rd220, %rd201;
	add.s64 	%rd222, %rd211, %rd221;
	add.s64 	%rd223, %rd222, %rd217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r154,%dummy}, %rd212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r155}, %rd212;
	}
	shf.r.wrap.b32 	%r156, %r155, %r154, 14;
	shf.r.wrap.b32 	%r157, %r154, %r155, 14;
	mov.b64 	%rd224, {%r157, %r156};
	shf.r.wrap.b32 	%r158, %r155, %r154, 18;
	shf.r.wrap.b32 	%r159, %r154, %r155, 18;
	mov.b64 	%rd225, {%r159, %r158};
	xor.b64  	%rd226, %rd225, %rd224;
	shf.l.wrap.b32 	%r160, %r154, %r155, 23;
	shf.l.wrap.b32 	%r161, %r155, %r154, 23;
	mov.b64 	%rd227, {%r161, %r160};
	xor.b64  	%rd228, %rd226, %rd227;
	xor.b64  	%rd229, %rd190, %rd178;
	and.b64  	%rd230, %rd212, %rd229;
	xor.b64  	%rd231, %rd230, %rd178;
	add.s64 	%rd232, %rd8, %rd231;
	add.s64 	%rd233, %rd232, %rd228;
	add.s64 	%rd234, %rd233, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r162,%dummy}, %rd223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r163}, %rd223;
	}
	shf.r.wrap.b32 	%r164, %r163, %r162, 28;
	shf.r.wrap.b32 	%r165, %r162, %r163, 28;
	mov.b64 	%rd235, {%r165, %r164};
	shf.l.wrap.b32 	%r166, %r162, %r163, 30;
	shf.l.wrap.b32 	%r167, %r163, %r162, 30;
	mov.b64 	%rd236, {%r167, %r166};
	xor.b64  	%rd237, %rd236, %rd235;
	shf.l.wrap.b32 	%r168, %r162, %r163, 25;
	shf.l.wrap.b32 	%r169, %r163, %r162, 25;
	mov.b64 	%rd238, {%r169, %r168};
	xor.b64  	%rd239, %rd237, %rd238;
	xor.b64  	%rd240, %rd223, %rd180;
	xor.b64  	%rd241, %rd223, %rd201;
	and.b64  	%rd242, %rd241, %rd240;
	xor.b64  	%rd243, %rd242, %rd223;
	add.s64 	%rd244, %rd233, %rd243;
	add.s64 	%rd245, %rd244, %rd239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r170,%dummy}, %rd234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r171}, %rd234;
	}
	shf.r.wrap.b32 	%r172, %r171, %r170, 14;
	shf.r.wrap.b32 	%r173, %r170, %r171, 14;
	mov.b64 	%rd246, {%r173, %r172};
	shf.r.wrap.b32 	%r174, %r171, %r170, 18;
	shf.r.wrap.b32 	%r175, %r170, %r171, 18;
	mov.b64 	%rd247, {%r175, %r174};
	xor.b64  	%rd248, %rd247, %rd246;
	shf.l.wrap.b32 	%r176, %r170, %r171, 23;
	shf.l.wrap.b32 	%r177, %r171, %r170, 23;
	mov.b64 	%rd249, {%r177, %r176};
	xor.b64  	%rd250, %rd248, %rd249;
	xor.b64  	%rd251, %rd212, %rd190;
	and.b64  	%rd252, %rd234, %rd251;
	xor.b64  	%rd253, %rd252, %rd190;
	add.s64 	%rd254, %rd2674, %rd178;
	add.s64 	%rd255, %rd254, %rd253;
	add.s64 	%rd256, %rd255, %rd250;
	add.s64 	%rd257, %rd256, %rd180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r178,%dummy}, %rd245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r179}, %rd245;
	}
	shf.r.wrap.b32 	%r180, %r179, %r178, 28;
	shf.r.wrap.b32 	%r181, %r178, %r179, 28;
	mov.b64 	%rd258, {%r181, %r180};
	shf.l.wrap.b32 	%r182, %r178, %r179, 30;
	shf.l.wrap.b32 	%r183, %r179, %r178, 30;
	mov.b64 	%rd259, {%r183, %r182};
	xor.b64  	%rd260, %rd259, %rd258;
	shf.l.wrap.b32 	%r184, %r178, %r179, 25;
	shf.l.wrap.b32 	%r185, %r179, %r178, 25;
	mov.b64 	%rd261, {%r185, %r184};
	xor.b64  	%rd262, %rd260, %rd261;
	xor.b64  	%rd263, %rd245, %rd201;
	xor.b64  	%rd264, %rd245, %rd223;
	and.b64  	%rd265, %rd264, %rd263;
	xor.b64  	%rd266, %rd265, %rd245;
	add.s64 	%rd267, %rd256, %rd266;
	add.s64 	%rd268, %rd267, %rd262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r186,%dummy}, %rd257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r187}, %rd257;
	}
	shf.r.wrap.b32 	%r188, %r187, %r186, 14;
	shf.r.wrap.b32 	%r189, %r186, %r187, 14;
	mov.b64 	%rd269, {%r189, %r188};
	shf.r.wrap.b32 	%r190, %r187, %r186, 18;
	shf.r.wrap.b32 	%r191, %r186, %r187, 18;
	mov.b64 	%rd270, {%r191, %r190};
	xor.b64  	%rd271, %rd270, %rd269;
	shf.l.wrap.b32 	%r192, %r186, %r187, 23;
	shf.l.wrap.b32 	%r193, %r187, %r186, 23;
	mov.b64 	%rd272, {%r193, %r192};
	xor.b64  	%rd273, %rd271, %rd272;
	xor.b64  	%rd274, %rd234, %rd212;
	and.b64  	%rd275, %rd257, %rd274;
	xor.b64  	%rd276, %rd275, %rd212;
	add.s64 	%rd277, %rd2675, %rd190;
	add.s64 	%rd278, %rd277, %rd276;
	add.s64 	%rd279, %rd278, %rd273;
	add.s64 	%rd280, %rd279, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r194,%dummy}, %rd268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r195}, %rd268;
	}
	shf.r.wrap.b32 	%r196, %r195, %r194, 28;
	shf.r.wrap.b32 	%r197, %r194, %r195, 28;
	mov.b64 	%rd281, {%r197, %r196};
	shf.l.wrap.b32 	%r198, %r194, %r195, 30;
	shf.l.wrap.b32 	%r199, %r195, %r194, 30;
	mov.b64 	%rd282, {%r199, %r198};
	xor.b64  	%rd283, %rd282, %rd281;
	shf.l.wrap.b32 	%r200, %r194, %r195, 25;
	shf.l.wrap.b32 	%r201, %r195, %r194, 25;
	mov.b64 	%rd284, {%r201, %r200};
	xor.b64  	%rd285, %rd283, %rd284;
	xor.b64  	%rd286, %rd268, %rd223;
	xor.b64  	%rd287, %rd268, %rd245;
	and.b64  	%rd288, %rd287, %rd286;
	xor.b64  	%rd289, %rd288, %rd268;
	add.s64 	%rd290, %rd279, %rd289;
	add.s64 	%rd291, %rd290, %rd285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r202,%dummy}, %rd280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r203}, %rd280;
	}
	shf.r.wrap.b32 	%r204, %r203, %r202, 14;
	shf.r.wrap.b32 	%r205, %r202, %r203, 14;
	mov.b64 	%rd292, {%r205, %r204};
	shf.r.wrap.b32 	%r206, %r203, %r202, 18;
	shf.r.wrap.b32 	%r207, %r202, %r203, 18;
	mov.b64 	%rd293, {%r207, %r206};
	xor.b64  	%rd294, %rd293, %rd292;
	shf.l.wrap.b32 	%r208, %r202, %r203, 23;
	shf.l.wrap.b32 	%r209, %r203, %r202, 23;
	mov.b64 	%rd295, {%r209, %r208};
	xor.b64  	%rd296, %rd294, %rd295;
	xor.b64  	%rd297, %rd257, %rd234;
	and.b64  	%rd298, %rd280, %rd297;
	xor.b64  	%rd299, %rd298, %rd234;
	add.s64 	%rd300, %rd2676, %rd212;
	add.s64 	%rd301, %rd300, %rd299;
	add.s64 	%rd302, %rd301, %rd296;
	add.s64 	%rd303, %rd302, %rd223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r210,%dummy}, %rd291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r211}, %rd291;
	}
	shf.r.wrap.b32 	%r212, %r211, %r210, 28;
	shf.r.wrap.b32 	%r213, %r210, %r211, 28;
	mov.b64 	%rd304, {%r213, %r212};
	shf.l.wrap.b32 	%r214, %r210, %r211, 30;
	shf.l.wrap.b32 	%r215, %r211, %r210, 30;
	mov.b64 	%rd305, {%r215, %r214};
	xor.b64  	%rd306, %rd305, %rd304;
	shf.l.wrap.b32 	%r216, %r210, %r211, 25;
	shf.l.wrap.b32 	%r217, %r211, %r210, 25;
	mov.b64 	%rd307, {%r217, %r216};
	xor.b64  	%rd308, %rd306, %rd307;
	xor.b64  	%rd309, %rd291, %rd245;
	xor.b64  	%rd310, %rd291, %rd268;
	and.b64  	%rd311, %rd310, %rd309;
	xor.b64  	%rd312, %rd311, %rd291;
	add.s64 	%rd313, %rd302, %rd312;
	add.s64 	%rd314, %rd313, %rd308;
	add.s64 	%rd315, %rd2677, %rd234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r218,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r219}, %rd303;
	}
	shf.r.wrap.b32 	%r220, %r219, %r218, 14;
	shf.r.wrap.b32 	%r221, %r218, %r219, 14;
	mov.b64 	%rd316, {%r221, %r220};
	shf.r.wrap.b32 	%r222, %r219, %r218, 18;
	shf.r.wrap.b32 	%r223, %r218, %r219, 18;
	mov.b64 	%rd317, {%r223, %r222};
	xor.b64  	%rd318, %rd317, %rd316;
	shf.l.wrap.b32 	%r224, %r218, %r219, 23;
	shf.l.wrap.b32 	%r225, %r219, %r218, 23;
	mov.b64 	%rd319, {%r225, %r224};
	xor.b64  	%rd320, %rd318, %rd319;
	xor.b64  	%rd321, %rd280, %rd257;
	and.b64  	%rd322, %rd303, %rd321;
	xor.b64  	%rd323, %rd322, %rd257;
	add.s64 	%rd324, %rd315, %rd323;
	add.s64 	%rd325, %rd324, %rd320;
	add.s64 	%rd326, %rd325, %rd245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r226,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r227}, %rd314;
	}
	shf.r.wrap.b32 	%r228, %r227, %r226, 28;
	shf.r.wrap.b32 	%r229, %r226, %r227, 28;
	mov.b64 	%rd327, {%r229, %r228};
	shf.l.wrap.b32 	%r230, %r226, %r227, 30;
	shf.l.wrap.b32 	%r231, %r227, %r226, 30;
	mov.b64 	%rd328, {%r231, %r230};
	xor.b64  	%rd329, %rd328, %rd327;
	shf.l.wrap.b32 	%r232, %r226, %r227, 25;
	shf.l.wrap.b32 	%r233, %r227, %r226, 25;
	mov.b64 	%rd330, {%r233, %r232};
	xor.b64  	%rd331, %rd329, %rd330;
	xor.b64  	%rd332, %rd314, %rd268;
	xor.b64  	%rd333, %rd314, %rd291;
	and.b64  	%rd334, %rd333, %rd332;
	xor.b64  	%rd335, %rd334, %rd314;
	add.s64 	%rd336, %rd325, %rd335;
	add.s64 	%rd337, %rd336, %rd331;
	add.s64 	%rd338, %rd2678, %rd257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r234,%dummy}, %rd326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r235}, %rd326;
	}
	shf.r.wrap.b32 	%r236, %r235, %r234, 14;
	shf.r.wrap.b32 	%r237, %r234, %r235, 14;
	mov.b64 	%rd339, {%r237, %r236};
	shf.r.wrap.b32 	%r238, %r235, %r234, 18;
	shf.r.wrap.b32 	%r239, %r234, %r235, 18;
	mov.b64 	%rd340, {%r239, %r238};
	xor.b64  	%rd341, %rd340, %rd339;
	shf.l.wrap.b32 	%r240, %r234, %r235, 23;
	shf.l.wrap.b32 	%r241, %r235, %r234, 23;
	mov.b64 	%rd342, {%r241, %r240};
	xor.b64  	%rd343, %rd341, %rd342;
	xor.b64  	%rd344, %rd303, %rd280;
	and.b64  	%rd345, %rd326, %rd344;
	xor.b64  	%rd346, %rd345, %rd280;
	add.s64 	%rd347, %rd338, %rd346;
	add.s64 	%rd348, %rd347, %rd343;
	add.s64 	%rd349, %rd348, %rd268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r242,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r243}, %rd337;
	}
	shf.r.wrap.b32 	%r244, %r243, %r242, 28;
	shf.r.wrap.b32 	%r245, %r242, %r243, 28;
	mov.b64 	%rd350, {%r245, %r244};
	shf.l.wrap.b32 	%r246, %r242, %r243, 30;
	shf.l.wrap.b32 	%r247, %r243, %r242, 30;
	mov.b64 	%rd351, {%r247, %r246};
	xor.b64  	%rd352, %rd351, %rd350;
	shf.l.wrap.b32 	%r248, %r242, %r243, 25;
	shf.l.wrap.b32 	%r249, %r243, %r242, 25;
	mov.b64 	%rd353, {%r249, %r248};
	xor.b64  	%rd354, %rd352, %rd353;
	xor.b64  	%rd355, %rd337, %rd291;
	xor.b64  	%rd356, %rd337, %rd314;
	and.b64  	%rd357, %rd356, %rd355;
	xor.b64  	%rd358, %rd357, %rd337;
	add.s64 	%rd359, %rd348, %rd358;
	add.s64 	%rd360, %rd359, %rd354;
	add.s64 	%rd361, %rd2679, %rd280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r250,%dummy}, %rd349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r251}, %rd349;
	}
	shf.r.wrap.b32 	%r252, %r251, %r250, 14;
	shf.r.wrap.b32 	%r253, %r250, %r251, 14;
	mov.b64 	%rd362, {%r253, %r252};
	shf.r.wrap.b32 	%r254, %r251, %r250, 18;
	shf.r.wrap.b32 	%r255, %r250, %r251, 18;
	mov.b64 	%rd363, {%r255, %r254};
	xor.b64  	%rd364, %rd363, %rd362;
	shf.l.wrap.b32 	%r256, %r250, %r251, 23;
	shf.l.wrap.b32 	%r257, %r251, %r250, 23;
	mov.b64 	%rd365, {%r257, %r256};
	xor.b64  	%rd366, %rd364, %rd365;
	xor.b64  	%rd367, %rd326, %rd303;
	and.b64  	%rd368, %rd349, %rd367;
	xor.b64  	%rd369, %rd368, %rd303;
	add.s64 	%rd370, %rd361, %rd369;
	add.s64 	%rd371, %rd370, %rd366;
	add.s64 	%rd372, %rd371, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r258,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r259}, %rd360;
	}
	shf.r.wrap.b32 	%r260, %r259, %r258, 28;
	shf.r.wrap.b32 	%r261, %r258, %r259, 28;
	mov.b64 	%rd373, {%r261, %r260};
	shf.l.wrap.b32 	%r262, %r258, %r259, 30;
	shf.l.wrap.b32 	%r263, %r259, %r258, 30;
	mov.b64 	%rd374, {%r263, %r262};
	xor.b64  	%rd375, %rd374, %rd373;
	shf.l.wrap.b32 	%r264, %r258, %r259, 25;
	shf.l.wrap.b32 	%r265, %r259, %r258, 25;
	mov.b64 	%rd376, {%r265, %r264};
	xor.b64  	%rd377, %rd375, %rd376;
	xor.b64  	%rd378, %rd360, %rd314;
	xor.b64  	%rd379, %rd360, %rd337;
	and.b64  	%rd380, %rd379, %rd378;
	xor.b64  	%rd381, %rd380, %rd360;
	add.s64 	%rd382, %rd371, %rd381;
	add.s64 	%rd383, %rd382, %rd377;
	add.s64 	%rd384, %rd2680, %rd303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r266,%dummy}, %rd372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r267}, %rd372;
	}
	shf.r.wrap.b32 	%r268, %r267, %r266, 14;
	shf.r.wrap.b32 	%r269, %r266, %r267, 14;
	mov.b64 	%rd385, {%r269, %r268};
	shf.r.wrap.b32 	%r270, %r267, %r266, 18;
	shf.r.wrap.b32 	%r271, %r266, %r267, 18;
	mov.b64 	%rd386, {%r271, %r270};
	xor.b64  	%rd387, %rd386, %rd385;
	shf.l.wrap.b32 	%r272, %r266, %r267, 23;
	shf.l.wrap.b32 	%r273, %r267, %r266, 23;
	mov.b64 	%rd388, {%r273, %r272};
	xor.b64  	%rd389, %rd387, %rd388;
	xor.b64  	%rd390, %rd349, %rd326;
	and.b64  	%rd391, %rd372, %rd390;
	xor.b64  	%rd392, %rd391, %rd326;
	add.s64 	%rd393, %rd384, %rd392;
	add.s64 	%rd394, %rd393, %rd389;
	add.s64 	%rd395, %rd394, %rd314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r274,%dummy}, %rd383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r275}, %rd383;
	}
	shf.r.wrap.b32 	%r276, %r275, %r274, 28;
	shf.r.wrap.b32 	%r277, %r274, %r275, 28;
	mov.b64 	%rd396, {%r277, %r276};
	shf.l.wrap.b32 	%r278, %r274, %r275, 30;
	shf.l.wrap.b32 	%r279, %r275, %r274, 30;
	mov.b64 	%rd397, {%r279, %r278};
	xor.b64  	%rd398, %rd397, %rd396;
	shf.l.wrap.b32 	%r280, %r274, %r275, 25;
	shf.l.wrap.b32 	%r281, %r275, %r274, 25;
	mov.b64 	%rd399, {%r281, %r280};
	xor.b64  	%rd400, %rd398, %rd399;
	xor.b64  	%rd401, %rd383, %rd337;
	xor.b64  	%rd402, %rd383, %rd360;
	and.b64  	%rd403, %rd402, %rd401;
	xor.b64  	%rd404, %rd403, %rd383;
	add.s64 	%rd405, %rd394, %rd404;
	add.s64 	%rd406, %rd405, %rd400;
	add.s64 	%rd407, %rd2681, %rd326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r282,%dummy}, %rd395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r283}, %rd395;
	}
	shf.r.wrap.b32 	%r284, %r283, %r282, 14;
	shf.r.wrap.b32 	%r285, %r282, %r283, 14;
	mov.b64 	%rd408, {%r285, %r284};
	shf.r.wrap.b32 	%r286, %r283, %r282, 18;
	shf.r.wrap.b32 	%r287, %r282, %r283, 18;
	mov.b64 	%rd409, {%r287, %r286};
	xor.b64  	%rd410, %rd409, %rd408;
	shf.l.wrap.b32 	%r288, %r282, %r283, 23;
	shf.l.wrap.b32 	%r289, %r283, %r282, 23;
	mov.b64 	%rd411, {%r289, %r288};
	xor.b64  	%rd412, %rd410, %rd411;
	xor.b64  	%rd413, %rd372, %rd349;
	and.b64  	%rd414, %rd395, %rd413;
	xor.b64  	%rd415, %rd414, %rd349;
	add.s64 	%rd416, %rd407, %rd415;
	add.s64 	%rd417, %rd416, %rd412;
	add.s64 	%rd418, %rd417, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r290,%dummy}, %rd406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r291}, %rd406;
	}
	shf.r.wrap.b32 	%r292, %r291, %r290, 28;
	shf.r.wrap.b32 	%r293, %r290, %r291, 28;
	mov.b64 	%rd419, {%r293, %r292};
	shf.l.wrap.b32 	%r294, %r290, %r291, 30;
	shf.l.wrap.b32 	%r295, %r291, %r290, 30;
	mov.b64 	%rd420, {%r295, %r294};
	xor.b64  	%rd421, %rd420, %rd419;
	shf.l.wrap.b32 	%r296, %r290, %r291, 25;
	shf.l.wrap.b32 	%r297, %r291, %r290, 25;
	mov.b64 	%rd422, {%r297, %r296};
	xor.b64  	%rd423, %rd421, %rd422;
	xor.b64  	%rd424, %rd406, %rd360;
	xor.b64  	%rd425, %rd406, %rd383;
	and.b64  	%rd426, %rd425, %rd424;
	xor.b64  	%rd427, %rd426, %rd406;
	add.s64 	%rd428, %rd417, %rd427;
	add.s64 	%rd429, %rd428, %rd423;
	add.s64 	%rd430, %rd2682, %rd349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r298,%dummy}, %rd418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r299}, %rd418;
	}
	shf.r.wrap.b32 	%r300, %r299, %r298, 14;
	shf.r.wrap.b32 	%r301, %r298, %r299, 14;
	mov.b64 	%rd431, {%r301, %r300};
	shf.r.wrap.b32 	%r302, %r299, %r298, 18;
	shf.r.wrap.b32 	%r303, %r298, %r299, 18;
	mov.b64 	%rd432, {%r303, %r302};
	xor.b64  	%rd433, %rd432, %rd431;
	shf.l.wrap.b32 	%r304, %r298, %r299, 23;
	shf.l.wrap.b32 	%r305, %r299, %r298, 23;
	mov.b64 	%rd434, {%r305, %r304};
	xor.b64  	%rd435, %rd433, %rd434;
	xor.b64  	%rd436, %rd395, %rd372;
	and.b64  	%rd437, %rd418, %rd436;
	xor.b64  	%rd438, %rd437, %rd372;
	add.s64 	%rd439, %rd430, %rd438;
	add.s64 	%rd440, %rd439, %rd435;
	add.s64 	%rd441, %rd440, %rd360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd429;
	}
	shf.r.wrap.b32 	%r308, %r307, %r306, 28;
	shf.r.wrap.b32 	%r309, %r306, %r307, 28;
	mov.b64 	%rd442, {%r309, %r308};
	shf.l.wrap.b32 	%r310, %r306, %r307, 30;
	shf.l.wrap.b32 	%r311, %r307, %r306, 30;
	mov.b64 	%rd443, {%r311, %r310};
	xor.b64  	%rd444, %rd443, %rd442;
	shf.l.wrap.b32 	%r312, %r306, %r307, 25;
	shf.l.wrap.b32 	%r313, %r307, %r306, 25;
	mov.b64 	%rd445, {%r313, %r312};
	xor.b64  	%rd446, %rd444, %rd445;
	xor.b64  	%rd447, %rd429, %rd383;
	xor.b64  	%rd448, %rd429, %rd406;
	and.b64  	%rd449, %rd448, %rd447;
	xor.b64  	%rd450, %rd449, %rd429;
	add.s64 	%rd451, %rd440, %rd450;
	add.s64 	%rd452, %rd451, %rd446;
	add.s64 	%rd453, %rd2683, %rd372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r314,%dummy}, %rd441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r315}, %rd441;
	}
	shf.r.wrap.b32 	%r316, %r315, %r314, 14;
	shf.r.wrap.b32 	%r317, %r314, %r315, 14;
	mov.b64 	%rd454, {%r317, %r316};
	shf.r.wrap.b32 	%r318, %r315, %r314, 18;
	shf.r.wrap.b32 	%r319, %r314, %r315, 18;
	mov.b64 	%rd455, {%r319, %r318};
	xor.b64  	%rd456, %rd455, %rd454;
	shf.l.wrap.b32 	%r320, %r314, %r315, 23;
	shf.l.wrap.b32 	%r321, %r315, %r314, 23;
	mov.b64 	%rd457, {%r321, %r320};
	xor.b64  	%rd458, %rd456, %rd457;
	xor.b64  	%rd459, %rd418, %rd395;
	and.b64  	%rd460, %rd441, %rd459;
	xor.b64  	%rd461, %rd460, %rd395;
	add.s64 	%rd462, %rd453, %rd461;
	add.s64 	%rd463, %rd462, %rd458;
	add.s64 	%rd464, %rd463, %rd383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r322,%dummy}, %rd452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r323}, %rd452;
	}
	shf.r.wrap.b32 	%r324, %r323, %r322, 28;
	shf.r.wrap.b32 	%r325, %r322, %r323, 28;
	mov.b64 	%rd465, {%r325, %r324};
	shf.l.wrap.b32 	%r326, %r322, %r323, 30;
	shf.l.wrap.b32 	%r327, %r323, %r322, 30;
	mov.b64 	%rd466, {%r327, %r326};
	xor.b64  	%rd467, %rd466, %rd465;
	shf.l.wrap.b32 	%r328, %r322, %r323, 25;
	shf.l.wrap.b32 	%r329, %r323, %r322, 25;
	mov.b64 	%rd468, {%r329, %r328};
	xor.b64  	%rd469, %rd467, %rd468;
	xor.b64  	%rd470, %rd452, %rd406;
	xor.b64  	%rd471, %rd452, %rd429;
	and.b64  	%rd472, %rd471, %rd470;
	xor.b64  	%rd473, %rd472, %rd452;
	add.s64 	%rd474, %rd463, %rd473;
	add.s64 	%rd475, %rd474, %rd469;
	add.s64 	%rd476, %rd2684, %rd395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r330,%dummy}, %rd464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r331}, %rd464;
	}
	shf.r.wrap.b32 	%r332, %r331, %r330, 14;
	shf.r.wrap.b32 	%r333, %r330, %r331, 14;
	mov.b64 	%rd477, {%r333, %r332};
	shf.r.wrap.b32 	%r334, %r331, %r330, 18;
	shf.r.wrap.b32 	%r335, %r330, %r331, 18;
	mov.b64 	%rd478, {%r335, %r334};
	xor.b64  	%rd479, %rd478, %rd477;
	shf.l.wrap.b32 	%r336, %r330, %r331, 23;
	shf.l.wrap.b32 	%r337, %r331, %r330, 23;
	mov.b64 	%rd480, {%r337, %r336};
	xor.b64  	%rd481, %rd479, %rd480;
	xor.b64  	%rd482, %rd441, %rd418;
	and.b64  	%rd483, %rd464, %rd482;
	xor.b64  	%rd484, %rd483, %rd418;
	add.s64 	%rd485, %rd476, %rd484;
	add.s64 	%rd486, %rd485, %rd481;
	add.s64 	%rd487, %rd486, %rd406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r338,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r339}, %rd475;
	}
	shf.r.wrap.b32 	%r340, %r339, %r338, 28;
	shf.r.wrap.b32 	%r341, %r338, %r339, 28;
	mov.b64 	%rd488, {%r341, %r340};
	shf.l.wrap.b32 	%r342, %r338, %r339, 30;
	shf.l.wrap.b32 	%r343, %r339, %r338, 30;
	mov.b64 	%rd489, {%r343, %r342};
	xor.b64  	%rd490, %rd489, %rd488;
	shf.l.wrap.b32 	%r344, %r338, %r339, 25;
	shf.l.wrap.b32 	%r345, %r339, %r338, 25;
	mov.b64 	%rd491, {%r345, %r344};
	xor.b64  	%rd492, %rd490, %rd491;
	xor.b64  	%rd493, %rd475, %rd429;
	xor.b64  	%rd494, %rd475, %rd452;
	and.b64  	%rd495, %rd494, %rd493;
	xor.b64  	%rd496, %rd495, %rd475;
	add.s64 	%rd497, %rd486, %rd496;
	add.s64 	%rd498, %rd497, %rd492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r346,%dummy}, %rd487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r347}, %rd487;
	}
	shf.r.wrap.b32 	%r348, %r347, %r346, 14;
	shf.r.wrap.b32 	%r349, %r346, %r347, 14;
	mov.b64 	%rd499, {%r349, %r348};
	shf.r.wrap.b32 	%r350, %r347, %r346, 18;
	shf.r.wrap.b32 	%r351, %r346, %r347, 18;
	mov.b64 	%rd500, {%r351, %r350};
	xor.b64  	%rd501, %rd500, %rd499;
	shf.l.wrap.b32 	%r352, %r346, %r347, 23;
	shf.l.wrap.b32 	%r353, %r347, %r346, 23;
	mov.b64 	%rd502, {%r353, %r352};
	xor.b64  	%rd503, %rd501, %rd502;
	xor.b64  	%rd504, %rd464, %rd441;
	and.b64  	%rd505, %rd487, %rd504;
	xor.b64  	%rd506, %rd505, %rd441;
	add.s64 	%rd507, %rd418, %rd2758;
	add.s64 	%rd508, %rd507, %rd2685;
	add.s64 	%rd509, %rd508, %rd506;
	add.s64 	%rd510, %rd509, %rd503;
	add.s64 	%rd511, %rd510, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd498;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 28;
	shf.r.wrap.b32 	%r357, %r354, %r355, 28;
	mov.b64 	%rd512, {%r357, %r356};
	shf.l.wrap.b32 	%r358, %r354, %r355, 30;
	shf.l.wrap.b32 	%r359, %r355, %r354, 30;
	mov.b64 	%rd513, {%r359, %r358};
	xor.b64  	%rd514, %rd513, %rd512;
	shf.l.wrap.b32 	%r360, %r354, %r355, 25;
	shf.l.wrap.b32 	%r361, %r355, %r354, 25;
	mov.b64 	%rd515, {%r361, %r360};
	xor.b64  	%rd516, %rd514, %rd515;
	xor.b64  	%rd517, %rd498, %rd452;
	xor.b64  	%rd518, %rd498, %rd475;
	and.b64  	%rd519, %rd518, %rd517;
	xor.b64  	%rd520, %rd519, %rd498;
	add.s64 	%rd521, %rd510, %rd520;
	add.s64 	%rd522, %rd521, %rd516;
	add.s64 	%rd523, %rd175, %rd22;
	add.s64 	%rd524, %rd523, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r362,%dummy}, %rd524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r363}, %rd524;
	}
	shf.r.wrap.b32 	%r364, %r363, %r362, 19;
	shf.r.wrap.b32 	%r365, %r362, %r363, 19;
	mov.b64 	%rd525, {%r365, %r364};
	shf.l.wrap.b32 	%r366, %r362, %r363, 3;
	shf.l.wrap.b32 	%r367, %r363, %r362, 3;
	mov.b64 	%rd526, {%r367, %r366};
	shr.u64 	%rd527, %rd524, 6;
	xor.b64  	%rd528, %rd525, %rd527;
	xor.b64  	%rd529, %rd528, %rd526;
	add.s64 	%rd530, %rd529, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r368,%dummy}, %rd530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r369}, %rd530;
	}
	shf.r.wrap.b32 	%r370, %r369, %r368, 19;
	shf.r.wrap.b32 	%r371, %r368, %r369, 19;
	mov.b64 	%rd531, {%r371, %r370};
	shf.l.wrap.b32 	%r372, %r368, %r369, 3;
	shf.l.wrap.b32 	%r373, %r369, %r368, 3;
	mov.b64 	%rd532, {%r373, %r372};
	shr.u64 	%rd533, %rd530, 6;
	xor.b64  	%rd534, %rd531, %rd533;
	xor.b64  	%rd535, %rd534, %rd532;
	add.s64 	%rd536, %rd535, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r374,%dummy}, %rd536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r375}, %rd536;
	}
	shf.r.wrap.b32 	%r376, %r375, %r374, 19;
	shf.r.wrap.b32 	%r377, %r374, %r375, 19;
	mov.b64 	%rd537, {%r377, %r376};
	shf.l.wrap.b32 	%r378, %r374, %r375, 3;
	shf.l.wrap.b32 	%r379, %r375, %r374, 3;
	mov.b64 	%rd538, {%r379, %r378};
	shr.u64 	%rd539, %rd536, 6;
	xor.b64  	%rd540, %rd537, %rd539;
	xor.b64  	%rd541, %rd540, %rd538;
	add.s64 	%rd542, %rd2758, %rd541;
	add.s64 	%rd543, %rd542, %rd24;
	add.s64 	%rd544, %rd524, %rd28;
	add.s64 	%rd545, %rd544, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r380,%dummy}, %rd543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd543;
	}
	shf.r.wrap.b32 	%r382, %r381, %r380, 19;
	shf.r.wrap.b32 	%r383, %r380, %r381, 19;
	mov.b64 	%rd546, {%r383, %r382};
	shf.l.wrap.b32 	%r384, %r380, %r381, 3;
	shf.l.wrap.b32 	%r385, %r381, %r380, 3;
	mov.b64 	%rd547, {%r385, %r384};
	shr.u64 	%rd548, %rd543, 6;
	xor.b64  	%rd549, %rd546, %rd548;
	xor.b64  	%rd550, %rd549, %rd547;
	add.s64 	%rd551, %rd25, %rd550;
	add.s64 	%rd552, %rd551, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r386,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r387}, %rd545;
	}
	shf.r.wrap.b32 	%r388, %r387, %r386, 19;
	shf.r.wrap.b32 	%r389, %r386, %r387, 19;
	mov.b64 	%rd553, {%r389, %r388};
	shf.l.wrap.b32 	%r390, %r386, %r387, 3;
	shf.l.wrap.b32 	%r391, %r387, %r386, 3;
	mov.b64 	%rd554, {%r391, %r390};
	shr.u64 	%rd555, %rd545, 6;
	xor.b64  	%rd556, %rd553, %rd555;
	xor.b64  	%rd557, %rd556, %rd554;
	add.s64 	%rd558, %rd530, %rd557;
	add.s64 	%rd559, %rd558, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r392,%dummy}, %rd552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd552;
	}
	shf.r.wrap.b32 	%r394, %r393, %r392, 19;
	shf.r.wrap.b32 	%r395, %r392, %r393, 19;
	mov.b64 	%rd560, {%r395, %r394};
	shf.l.wrap.b32 	%r396, %r392, %r393, 3;
	shf.l.wrap.b32 	%r397, %r393, %r392, 3;
	mov.b64 	%rd561, {%r397, %r396};
	shr.u64 	%rd562, %rd552, 6;
	xor.b64  	%rd563, %rd560, %rd562;
	xor.b64  	%rd564, %rd563, %rd561;
	add.s64 	%rd565, %rd26, %rd564;
	add.s64 	%rd566, %rd565, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r398,%dummy}, %rd559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r399}, %rd559;
	}
	shf.r.wrap.b32 	%r400, %r399, %r398, 19;
	shf.r.wrap.b32 	%r401, %r398, %r399, 19;
	mov.b64 	%rd567, {%r401, %r400};
	shf.l.wrap.b32 	%r402, %r398, %r399, 3;
	shf.l.wrap.b32 	%r403, %r399, %r398, 3;
	mov.b64 	%rd568, {%r403, %r402};
	shr.u64 	%rd569, %rd559, 6;
	xor.b64  	%rd570, %rd567, %rd569;
	xor.b64  	%rd571, %rd570, %rd568;
	add.s64 	%rd572, %rd536, %rd571;
	add.s64 	%rd573, %rd572, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r404,%dummy}, %rd566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r405}, %rd566;
	}
	shf.r.wrap.b32 	%r406, %r405, %r404, 19;
	shf.r.wrap.b32 	%r407, %r404, %r405, 19;
	mov.b64 	%rd574, {%r407, %r406};
	shf.l.wrap.b32 	%r408, %r404, %r405, 3;
	shf.l.wrap.b32 	%r409, %r405, %r404, 3;
	mov.b64 	%rd575, {%r409, %r408};
	shr.u64 	%rd576, %rd566, 6;
	xor.b64  	%rd577, %rd574, %rd576;
	xor.b64  	%rd578, %rd577, %rd575;
	add.s64 	%rd579, %rd27, %rd578;
	add.s64 	%rd580, %rd579, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r410,%dummy}, %rd573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r411}, %rd573;
	}
	shf.r.wrap.b32 	%r412, %r411, %r410, 19;
	shf.r.wrap.b32 	%r413, %r410, %r411, 19;
	mov.b64 	%rd581, {%r413, %r412};
	shf.l.wrap.b32 	%r414, %r410, %r411, 3;
	shf.l.wrap.b32 	%r415, %r411, %r410, 3;
	mov.b64 	%rd582, {%r415, %r414};
	shr.u64 	%rd583, %rd573, 6;
	xor.b64  	%rd584, %rd581, %rd583;
	xor.b64  	%rd585, %rd584, %rd582;
	add.s64 	%rd586, %rd543, %rd585;
	add.s64 	%rd587, %rd586, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd580;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 19;
	shf.r.wrap.b32 	%r419, %r416, %r417, 19;
	mov.b64 	%rd588, {%r419, %r418};
	shf.l.wrap.b32 	%r420, %r416, %r417, 3;
	shf.l.wrap.b32 	%r421, %r417, %r416, 3;
	mov.b64 	%rd589, {%r421, %r420};
	shr.u64 	%rd590, %rd580, 6;
	xor.b64  	%rd591, %rd588, %rd590;
	xor.b64  	%rd592, %rd591, %rd589;
	add.s64 	%rd593, %rd545, %rd592;
	add.s64 	%rd594, %rd593, %rd29;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r422,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r423}, %rd587;
	}
	shf.r.wrap.b32 	%r424, %r423, %r422, 19;
	shf.r.wrap.b32 	%r425, %r422, %r423, 19;
	mov.b64 	%rd595, {%r425, %r424};
	shf.l.wrap.b32 	%r426, %r422, %r423, 3;
	shf.l.wrap.b32 	%r427, %r423, %r422, 3;
	mov.b64 	%rd596, {%r427, %r426};
	shr.u64 	%rd597, %rd587, 6;
	xor.b64  	%rd598, %rd595, %rd597;
	xor.b64  	%rd599, %rd598, %rd596;
	shf.r.wrap.b32 	%r428, %r363, %r362, 1;
	shf.r.wrap.b32 	%r429, %r362, %r363, 1;
	mov.b64 	%rd600, {%r429, %r428};
	shf.r.wrap.b32 	%r430, %r363, %r362, 8;
	shf.r.wrap.b32 	%r431, %r362, %r363, 8;
	mov.b64 	%rd601, {%r431, %r430};
	shr.u64 	%rd602, %rd524, 7;
	xor.b64  	%rd603, %rd600, %rd602;
	xor.b64  	%rd604, %rd603, %rd601;
	add.s64 	%rd605, %rd552, %rd2758;
	add.s64 	%rd606, %rd605, %rd599;
	add.s64 	%rd607, %rd606, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r432,%dummy}, %rd511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r433}, %rd511;
	}
	shf.r.wrap.b32 	%r434, %r433, %r432, 14;
	shf.r.wrap.b32 	%r435, %r432, %r433, 14;
	mov.b64 	%rd608, {%r435, %r434};
	shf.r.wrap.b32 	%r436, %r433, %r432, 18;
	shf.r.wrap.b32 	%r437, %r432, %r433, 18;
	mov.b64 	%rd609, {%r437, %r436};
	xor.b64  	%rd610, %rd609, %rd608;
	shf.l.wrap.b32 	%r438, %r432, %r433, 23;
	shf.l.wrap.b32 	%r439, %r433, %r432, 23;
	mov.b64 	%rd611, {%r439, %r438};
	xor.b64  	%rd612, %rd610, %rd611;
	xor.b64  	%rd613, %rd464, %rd487;
	and.b64  	%rd614, %rd613, %rd511;
	xor.b64  	%rd615, %rd614, %rd464;
	add.s64 	%rd616, %rd615, %rd441;
	add.s64 	%rd617, %rd616, %rd524;
	add.s64 	%rd618, %rd617, %rd2686;
	add.s64 	%rd619, %rd618, %rd612;
	add.s64 	%rd620, %rd619, %rd452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r440,%dummy}, %rd522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r441}, %rd522;
	}
	shf.r.wrap.b32 	%r442, %r441, %r440, 28;
	shf.r.wrap.b32 	%r443, %r440, %r441, 28;
	mov.b64 	%rd621, {%r443, %r442};
	shf.l.wrap.b32 	%r444, %r440, %r441, 30;
	shf.l.wrap.b32 	%r445, %r441, %r440, 30;
	mov.b64 	%rd622, {%r445, %r444};
	xor.b64  	%rd623, %rd622, %rd621;
	shf.l.wrap.b32 	%r446, %r440, %r441, 25;
	shf.l.wrap.b32 	%r447, %r441, %r440, 25;
	mov.b64 	%rd624, {%r447, %r446};
	xor.b64  	%rd625, %rd623, %rd624;
	xor.b64  	%rd626, %rd522, %rd475;
	xor.b64  	%rd627, %rd522, %rd498;
	and.b64  	%rd628, %rd627, %rd626;
	xor.b64  	%rd629, %rd628, %rd522;
	add.s64 	%rd630, %rd619, %rd629;
	add.s64 	%rd631, %rd630, %rd625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r448,%dummy}, %rd620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r449}, %rd620;
	}
	shf.r.wrap.b32 	%r450, %r449, %r448, 14;
	shf.r.wrap.b32 	%r451, %r448, %r449, 14;
	mov.b64 	%rd632, {%r451, %r450};
	shf.r.wrap.b32 	%r452, %r449, %r448, 18;
	shf.r.wrap.b32 	%r453, %r448, %r449, 18;
	mov.b64 	%rd633, {%r453, %r452};
	xor.b64  	%rd634, %rd633, %rd632;
	shf.l.wrap.b32 	%r454, %r448, %r449, 23;
	shf.l.wrap.b32 	%r455, %r449, %r448, 23;
	mov.b64 	%rd635, {%r455, %r454};
	xor.b64  	%rd636, %rd634, %rd635;
	xor.b64  	%rd637, %rd487, %rd511;
	and.b64  	%rd638, %rd620, %rd637;
	xor.b64  	%rd639, %rd638, %rd487;
	add.s64 	%rd640, %rd25, %rd464;
	add.s64 	%rd641, %rd640, %rd2687;
	add.s64 	%rd642, %rd641, %rd639;
	add.s64 	%rd643, %rd642, %rd636;
	add.s64 	%rd644, %rd643, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r456,%dummy}, %rd631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r457}, %rd631;
	}
	shf.r.wrap.b32 	%r458, %r457, %r456, 28;
	shf.r.wrap.b32 	%r459, %r456, %r457, 28;
	mov.b64 	%rd645, {%r459, %r458};
	shf.l.wrap.b32 	%r460, %r456, %r457, 30;
	shf.l.wrap.b32 	%r461, %r457, %r456, 30;
	mov.b64 	%rd646, {%r461, %r460};
	xor.b64  	%rd647, %rd646, %rd645;
	shf.l.wrap.b32 	%r462, %r456, %r457, 25;
	shf.l.wrap.b32 	%r463, %r457, %r456, 25;
	mov.b64 	%rd648, {%r463, %r462};
	xor.b64  	%rd649, %rd647, %rd648;
	xor.b64  	%rd650, %rd631, %rd498;
	xor.b64  	%rd651, %rd631, %rd522;
	and.b64  	%rd652, %rd651, %rd650;
	xor.b64  	%rd653, %rd652, %rd631;
	add.s64 	%rd654, %rd643, %rd653;
	add.s64 	%rd655, %rd654, %rd649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r464,%dummy}, %rd644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd644;
	}
	shf.r.wrap.b32 	%r466, %r465, %r464, 14;
	shf.r.wrap.b32 	%r467, %r464, %r465, 14;
	mov.b64 	%rd656, {%r467, %r466};
	shf.r.wrap.b32 	%r468, %r465, %r464, 18;
	shf.r.wrap.b32 	%r469, %r464, %r465, 18;
	mov.b64 	%rd657, {%r469, %r468};
	xor.b64  	%rd658, %rd657, %rd656;
	shf.l.wrap.b32 	%r470, %r464, %r465, 23;
	shf.l.wrap.b32 	%r471, %r465, %r464, 23;
	mov.b64 	%rd659, {%r471, %r470};
	xor.b64  	%rd660, %rd658, %rd659;
	xor.b64  	%rd661, %rd620, %rd511;
	and.b64  	%rd662, %rd644, %rd661;
	xor.b64  	%rd663, %rd662, %rd511;
	add.s64 	%rd664, %rd530, %rd487;
	add.s64 	%rd665, %rd664, %rd2688;
	add.s64 	%rd666, %rd665, %rd663;
	add.s64 	%rd667, %rd666, %rd660;
	add.s64 	%rd668, %rd667, %rd498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd655;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 28;
	shf.r.wrap.b32 	%r475, %r472, %r473, 28;
	mov.b64 	%rd669, {%r475, %r474};
	shf.l.wrap.b32 	%r476, %r472, %r473, 30;
	shf.l.wrap.b32 	%r477, %r473, %r472, 30;
	mov.b64 	%rd670, {%r477, %r476};
	xor.b64  	%rd671, %rd670, %rd669;
	shf.l.wrap.b32 	%r478, %r472, %r473, 25;
	shf.l.wrap.b32 	%r479, %r473, %r472, 25;
	mov.b64 	%rd672, {%r479, %r478};
	xor.b64  	%rd673, %rd671, %rd672;
	xor.b64  	%rd674, %rd655, %rd522;
	xor.b64  	%rd675, %rd655, %rd631;
	and.b64  	%rd676, %rd675, %rd674;
	xor.b64  	%rd677, %rd676, %rd655;
	add.s64 	%rd678, %rd667, %rd677;
	add.s64 	%rd679, %rd678, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r480,%dummy}, %rd668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r481}, %rd668;
	}
	shf.r.wrap.b32 	%r482, %r481, %r480, 14;
	shf.r.wrap.b32 	%r483, %r480, %r481, 14;
	mov.b64 	%rd680, {%r483, %r482};
	shf.r.wrap.b32 	%r484, %r481, %r480, 18;
	shf.r.wrap.b32 	%r485, %r480, %r481, 18;
	mov.b64 	%rd681, {%r485, %r484};
	xor.b64  	%rd682, %rd681, %rd680;
	shf.l.wrap.b32 	%r486, %r480, %r481, 23;
	shf.l.wrap.b32 	%r487, %r481, %r480, 23;
	mov.b64 	%rd683, {%r487, %r486};
	xor.b64  	%rd684, %rd682, %rd683;
	xor.b64  	%rd685, %rd644, %rd620;
	and.b64  	%rd686, %rd668, %rd685;
	xor.b64  	%rd687, %rd686, %rd620;
	add.s64 	%rd688, %rd26, %rd511;
	add.s64 	%rd689, %rd688, %rd2689;
	add.s64 	%rd690, %rd689, %rd687;
	add.s64 	%rd691, %rd690, %rd684;
	add.s64 	%rd692, %rd691, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r488,%dummy}, %rd679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r489}, %rd679;
	}
	shf.r.wrap.b32 	%r490, %r489, %r488, 28;
	shf.r.wrap.b32 	%r491, %r488, %r489, 28;
	mov.b64 	%rd693, {%r491, %r490};
	shf.l.wrap.b32 	%r492, %r488, %r489, 30;
	shf.l.wrap.b32 	%r493, %r489, %r488, 30;
	mov.b64 	%rd694, {%r493, %r492};
	xor.b64  	%rd695, %rd694, %rd693;
	shf.l.wrap.b32 	%r494, %r488, %r489, 25;
	shf.l.wrap.b32 	%r495, %r489, %r488, 25;
	mov.b64 	%rd696, {%r495, %r494};
	xor.b64  	%rd697, %rd695, %rd696;
	xor.b64  	%rd698, %rd679, %rd631;
	xor.b64  	%rd699, %rd679, %rd655;
	and.b64  	%rd700, %rd699, %rd698;
	xor.b64  	%rd701, %rd700, %rd679;
	add.s64 	%rd702, %rd691, %rd701;
	add.s64 	%rd703, %rd702, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r496,%dummy}, %rd692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r497}, %rd692;
	}
	shf.r.wrap.b32 	%r498, %r497, %r496, 14;
	shf.r.wrap.b32 	%r499, %r496, %r497, 14;
	mov.b64 	%rd704, {%r499, %r498};
	shf.r.wrap.b32 	%r500, %r497, %r496, 18;
	shf.r.wrap.b32 	%r501, %r496, %r497, 18;
	mov.b64 	%rd705, {%r501, %r500};
	xor.b64  	%rd706, %rd705, %rd704;
	shf.l.wrap.b32 	%r502, %r496, %r497, 23;
	shf.l.wrap.b32 	%r503, %r497, %r496, 23;
	mov.b64 	%rd707, {%r503, %r502};
	xor.b64  	%rd708, %rd706, %rd707;
	xor.b64  	%rd709, %rd668, %rd644;
	and.b64  	%rd710, %rd692, %rd709;
	xor.b64  	%rd711, %rd710, %rd644;
	add.s64 	%rd712, %rd620, %rd536;
	add.s64 	%rd713, %rd712, %rd2690;
	add.s64 	%rd714, %rd713, %rd711;
	add.s64 	%rd715, %rd714, %rd708;
	add.s64 	%rd716, %rd715, %rd631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r504,%dummy}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r505}, %rd703;
	}
	shf.r.wrap.b32 	%r506, %r505, %r504, 28;
	shf.r.wrap.b32 	%r507, %r504, %r505, 28;
	mov.b64 	%rd717, {%r507, %r506};
	shf.l.wrap.b32 	%r508, %r504, %r505, 30;
	shf.l.wrap.b32 	%r509, %r505, %r504, 30;
	mov.b64 	%rd718, {%r509, %r508};
	xor.b64  	%rd719, %rd718, %rd717;
	shf.l.wrap.b32 	%r510, %r504, %r505, 25;
	shf.l.wrap.b32 	%r511, %r505, %r504, 25;
	mov.b64 	%rd720, {%r511, %r510};
	xor.b64  	%rd721, %rd719, %rd720;
	xor.b64  	%rd722, %rd703, %rd655;
	xor.b64  	%rd723, %rd703, %rd679;
	and.b64  	%rd724, %rd723, %rd722;
	xor.b64  	%rd725, %rd724, %rd703;
	add.s64 	%rd726, %rd715, %rd725;
	add.s64 	%rd727, %rd726, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r512,%dummy}, %rd716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r513}, %rd716;
	}
	shf.r.wrap.b32 	%r514, %r513, %r512, 14;
	shf.r.wrap.b32 	%r515, %r512, %r513, 14;
	mov.b64 	%rd728, {%r515, %r514};
	shf.r.wrap.b32 	%r516, %r513, %r512, 18;
	shf.r.wrap.b32 	%r517, %r512, %r513, 18;
	mov.b64 	%rd729, {%r517, %r516};
	xor.b64  	%rd730, %rd729, %rd728;
	shf.l.wrap.b32 	%r518, %r512, %r513, 23;
	shf.l.wrap.b32 	%r519, %r513, %r512, 23;
	mov.b64 	%rd731, {%r519, %r518};
	xor.b64  	%rd732, %rd730, %rd731;
	xor.b64  	%rd733, %rd692, %rd668;
	and.b64  	%rd734, %rd716, %rd733;
	xor.b64  	%rd735, %rd734, %rd668;
	add.s64 	%rd736, %rd644, %rd27;
	add.s64 	%rd737, %rd736, %rd2691;
	add.s64 	%rd738, %rd737, %rd735;
	add.s64 	%rd739, %rd738, %rd732;
	add.s64 	%rd740, %rd739, %rd655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r521}, %rd727;
	}
	shf.r.wrap.b32 	%r522, %r521, %r520, 28;
	shf.r.wrap.b32 	%r523, %r520, %r521, 28;
	mov.b64 	%rd741, {%r523, %r522};
	shf.l.wrap.b32 	%r524, %r520, %r521, 30;
	shf.l.wrap.b32 	%r525, %r521, %r520, 30;
	mov.b64 	%rd742, {%r525, %r524};
	xor.b64  	%rd743, %rd742, %rd741;
	shf.l.wrap.b32 	%r526, %r520, %r521, 25;
	shf.l.wrap.b32 	%r527, %r521, %r520, 25;
	mov.b64 	%rd744, {%r527, %r526};
	xor.b64  	%rd745, %rd743, %rd744;
	xor.b64  	%rd746, %rd727, %rd679;
	xor.b64  	%rd747, %rd727, %rd703;
	and.b64  	%rd748, %rd747, %rd746;
	xor.b64  	%rd749, %rd748, %rd727;
	add.s64 	%rd750, %rd739, %rd749;
	add.s64 	%rd751, %rd750, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r528,%dummy}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r529}, %rd740;
	}
	shf.r.wrap.b32 	%r530, %r529, %r528, 14;
	shf.r.wrap.b32 	%r531, %r528, %r529, 14;
	mov.b64 	%rd752, {%r531, %r530};
	shf.r.wrap.b32 	%r532, %r529, %r528, 18;
	shf.r.wrap.b32 	%r533, %r528, %r529, 18;
	mov.b64 	%rd753, {%r533, %r532};
	xor.b64  	%rd754, %rd753, %rd752;
	shf.l.wrap.b32 	%r534, %r528, %r529, 23;
	shf.l.wrap.b32 	%r535, %r529, %r528, 23;
	mov.b64 	%rd755, {%r535, %r534};
	xor.b64  	%rd756, %rd754, %rd755;
	xor.b64  	%rd757, %rd716, %rd692;
	and.b64  	%rd758, %rd740, %rd757;
	xor.b64  	%rd759, %rd758, %rd692;
	add.s64 	%rd760, %rd668, %rd543;
	add.s64 	%rd761, %rd760, %rd2692;
	add.s64 	%rd762, %rd761, %rd759;
	add.s64 	%rd763, %rd762, %rd756;
	add.s64 	%rd764, %rd763, %rd679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r536,%dummy}, %rd751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r537}, %rd751;
	}
	shf.r.wrap.b32 	%r538, %r537, %r536, 28;
	shf.r.wrap.b32 	%r539, %r536, %r537, 28;
	mov.b64 	%rd765, {%r539, %r538};
	shf.l.wrap.b32 	%r540, %r536, %r537, 30;
	shf.l.wrap.b32 	%r541, %r537, %r536, 30;
	mov.b64 	%rd766, {%r541, %r540};
	xor.b64  	%rd767, %rd766, %rd765;
	shf.l.wrap.b32 	%r542, %r536, %r537, 25;
	shf.l.wrap.b32 	%r543, %r537, %r536, 25;
	mov.b64 	%rd768, {%r543, %r542};
	xor.b64  	%rd769, %rd767, %rd768;
	xor.b64  	%rd770, %rd751, %rd703;
	xor.b64  	%rd771, %rd751, %rd727;
	and.b64  	%rd772, %rd771, %rd770;
	xor.b64  	%rd773, %rd772, %rd751;
	add.s64 	%rd774, %rd763, %rd773;
	add.s64 	%rd775, %rd774, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r544,%dummy}, %rd764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r545}, %rd764;
	}
	shf.r.wrap.b32 	%r546, %r545, %r544, 14;
	shf.r.wrap.b32 	%r547, %r544, %r545, 14;
	mov.b64 	%rd776, {%r547, %r546};
	shf.r.wrap.b32 	%r548, %r545, %r544, 18;
	shf.r.wrap.b32 	%r549, %r544, %r545, 18;
	mov.b64 	%rd777, {%r549, %r548};
	xor.b64  	%rd778, %rd777, %rd776;
	shf.l.wrap.b32 	%r550, %r544, %r545, 23;
	shf.l.wrap.b32 	%r551, %r545, %r544, 23;
	mov.b64 	%rd779, {%r551, %r550};
	xor.b64  	%rd780, %rd778, %rd779;
	xor.b64  	%rd781, %rd740, %rd716;
	and.b64  	%rd782, %rd764, %rd781;
	xor.b64  	%rd783, %rd782, %rd716;
	add.s64 	%rd784, %rd692, %rd545;
	add.s64 	%rd785, %rd784, %rd2693;
	add.s64 	%rd786, %rd785, %rd783;
	add.s64 	%rd787, %rd786, %rd780;
	add.s64 	%rd788, %rd787, %rd703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r552,%dummy}, %rd775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r553}, %rd775;
	}
	shf.r.wrap.b32 	%r554, %r553, %r552, 28;
	shf.r.wrap.b32 	%r555, %r552, %r553, 28;
	mov.b64 	%rd789, {%r555, %r554};
	shf.l.wrap.b32 	%r556, %r552, %r553, 30;
	shf.l.wrap.b32 	%r557, %r553, %r552, 30;
	mov.b64 	%rd790, {%r557, %r556};
	xor.b64  	%rd791, %rd790, %rd789;
	shf.l.wrap.b32 	%r558, %r552, %r553, 25;
	shf.l.wrap.b32 	%r559, %r553, %r552, 25;
	mov.b64 	%rd792, {%r559, %r558};
	xor.b64  	%rd793, %rd791, %rd792;
	xor.b64  	%rd794, %rd775, %rd727;
	xor.b64  	%rd795, %rd775, %rd751;
	and.b64  	%rd796, %rd795, %rd794;
	xor.b64  	%rd797, %rd796, %rd775;
	add.s64 	%rd798, %rd787, %rd797;
	add.s64 	%rd799, %rd798, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r560,%dummy}, %rd788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r561}, %rd788;
	}
	shf.r.wrap.b32 	%r562, %r561, %r560, 14;
	shf.r.wrap.b32 	%r563, %r560, %r561, 14;
	mov.b64 	%rd800, {%r563, %r562};
	shf.r.wrap.b32 	%r564, %r561, %r560, 18;
	shf.r.wrap.b32 	%r565, %r560, %r561, 18;
	mov.b64 	%rd801, {%r565, %r564};
	xor.b64  	%rd802, %rd801, %rd800;
	shf.l.wrap.b32 	%r566, %r560, %r561, 23;
	shf.l.wrap.b32 	%r567, %r561, %r560, 23;
	mov.b64 	%rd803, {%r567, %r566};
	xor.b64  	%rd804, %rd802, %rd803;
	xor.b64  	%rd805, %rd764, %rd740;
	and.b64  	%rd806, %rd788, %rd805;
	xor.b64  	%rd807, %rd806, %rd740;
	add.s64 	%rd808, %rd716, %rd552;
	add.s64 	%rd809, %rd808, %rd2694;
	add.s64 	%rd810, %rd809, %rd807;
	add.s64 	%rd811, %rd810, %rd804;
	add.s64 	%rd812, %rd811, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r568,%dummy}, %rd799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd799;
	}
	shf.r.wrap.b32 	%r570, %r569, %r568, 28;
	shf.r.wrap.b32 	%r571, %r568, %r569, 28;
	mov.b64 	%rd813, {%r571, %r570};
	shf.l.wrap.b32 	%r572, %r568, %r569, 30;
	shf.l.wrap.b32 	%r573, %r569, %r568, 30;
	mov.b64 	%rd814, {%r573, %r572};
	xor.b64  	%rd815, %rd814, %rd813;
	shf.l.wrap.b32 	%r574, %r568, %r569, 25;
	shf.l.wrap.b32 	%r575, %r569, %r568, 25;
	mov.b64 	%rd816, {%r575, %r574};
	xor.b64  	%rd817, %rd815, %rd816;
	xor.b64  	%rd818, %rd799, %rd751;
	xor.b64  	%rd819, %rd799, %rd775;
	and.b64  	%rd820, %rd819, %rd818;
	xor.b64  	%rd821, %rd820, %rd799;
	add.s64 	%rd822, %rd811, %rd821;
	add.s64 	%rd823, %rd822, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r576,%dummy}, %rd812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r577}, %rd812;
	}
	shf.r.wrap.b32 	%r578, %r577, %r576, 14;
	shf.r.wrap.b32 	%r579, %r576, %r577, 14;
	mov.b64 	%rd824, {%r579, %r578};
	shf.r.wrap.b32 	%r580, %r577, %r576, 18;
	shf.r.wrap.b32 	%r581, %r576, %r577, 18;
	mov.b64 	%rd825, {%r581, %r580};
	xor.b64  	%rd826, %rd825, %rd824;
	shf.l.wrap.b32 	%r582, %r576, %r577, 23;
	shf.l.wrap.b32 	%r583, %r577, %r576, 23;
	mov.b64 	%rd827, {%r583, %r582};
	xor.b64  	%rd828, %rd826, %rd827;
	xor.b64  	%rd829, %rd788, %rd764;
	and.b64  	%rd830, %rd812, %rd829;
	xor.b64  	%rd831, %rd830, %rd764;
	add.s64 	%rd832, %rd740, %rd559;
	add.s64 	%rd833, %rd832, %rd2695;
	add.s64 	%rd834, %rd833, %rd831;
	add.s64 	%rd835, %rd834, %rd828;
	add.s64 	%rd836, %rd835, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r584,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd823;
	}
	shf.r.wrap.b32 	%r586, %r585, %r584, 28;
	shf.r.wrap.b32 	%r587, %r584, %r585, 28;
	mov.b64 	%rd837, {%r587, %r586};
	shf.l.wrap.b32 	%r588, %r584, %r585, 30;
	shf.l.wrap.b32 	%r589, %r585, %r584, 30;
	mov.b64 	%rd838, {%r589, %r588};
	xor.b64  	%rd839, %rd838, %rd837;
	shf.l.wrap.b32 	%r590, %r584, %r585, 25;
	shf.l.wrap.b32 	%r591, %r585, %r584, 25;
	mov.b64 	%rd840, {%r591, %r590};
	xor.b64  	%rd841, %rd839, %rd840;
	xor.b64  	%rd842, %rd823, %rd775;
	xor.b64  	%rd843, %rd823, %rd799;
	and.b64  	%rd844, %rd843, %rd842;
	xor.b64  	%rd845, %rd844, %rd823;
	add.s64 	%rd846, %rd835, %rd845;
	add.s64 	%rd847, %rd846, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r592,%dummy}, %rd836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r593}, %rd836;
	}
	shf.r.wrap.b32 	%r594, %r593, %r592, 14;
	shf.r.wrap.b32 	%r595, %r592, %r593, 14;
	mov.b64 	%rd848, {%r595, %r594};
	shf.r.wrap.b32 	%r596, %r593, %r592, 18;
	shf.r.wrap.b32 	%r597, %r592, %r593, 18;
	mov.b64 	%rd849, {%r597, %r596};
	xor.b64  	%rd850, %rd849, %rd848;
	shf.l.wrap.b32 	%r598, %r592, %r593, 23;
	shf.l.wrap.b32 	%r599, %r593, %r592, 23;
	mov.b64 	%rd851, {%r599, %r598};
	xor.b64  	%rd852, %rd850, %rd851;
	xor.b64  	%rd853, %rd812, %rd788;
	and.b64  	%rd854, %rd836, %rd853;
	xor.b64  	%rd855, %rd854, %rd788;
	add.s64 	%rd856, %rd764, %rd566;
	add.s64 	%rd857, %rd856, %rd2696;
	add.s64 	%rd858, %rd857, %rd855;
	add.s64 	%rd859, %rd858, %rd852;
	add.s64 	%rd860, %rd859, %rd775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r600,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r601}, %rd847;
	}
	shf.r.wrap.b32 	%r602, %r601, %r600, 28;
	shf.r.wrap.b32 	%r603, %r600, %r601, 28;
	mov.b64 	%rd861, {%r603, %r602};
	shf.l.wrap.b32 	%r604, %r600, %r601, 30;
	shf.l.wrap.b32 	%r605, %r601, %r600, 30;
	mov.b64 	%rd862, {%r605, %r604};
	xor.b64  	%rd863, %rd862, %rd861;
	shf.l.wrap.b32 	%r606, %r600, %r601, 25;
	shf.l.wrap.b32 	%r607, %r601, %r600, 25;
	mov.b64 	%rd864, {%r607, %r606};
	xor.b64  	%rd865, %rd863, %rd864;
	xor.b64  	%rd866, %rd847, %rd799;
	xor.b64  	%rd867, %rd847, %rd823;
	and.b64  	%rd868, %rd867, %rd866;
	xor.b64  	%rd869, %rd868, %rd847;
	add.s64 	%rd870, %rd859, %rd869;
	add.s64 	%rd871, %rd870, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r608,%dummy}, %rd860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r609}, %rd860;
	}
	shf.r.wrap.b32 	%r610, %r609, %r608, 14;
	shf.r.wrap.b32 	%r611, %r608, %r609, 14;
	mov.b64 	%rd872, {%r611, %r610};
	shf.r.wrap.b32 	%r612, %r609, %r608, 18;
	shf.r.wrap.b32 	%r613, %r608, %r609, 18;
	mov.b64 	%rd873, {%r613, %r612};
	xor.b64  	%rd874, %rd873, %rd872;
	shf.l.wrap.b32 	%r614, %r608, %r609, 23;
	shf.l.wrap.b32 	%r615, %r609, %r608, 23;
	mov.b64 	%rd875, {%r615, %r614};
	xor.b64  	%rd876, %rd874, %rd875;
	xor.b64  	%rd877, %rd836, %rd812;
	and.b64  	%rd878, %rd860, %rd877;
	xor.b64  	%rd879, %rd878, %rd812;
	add.s64 	%rd880, %rd788, %rd573;
	add.s64 	%rd881, %rd880, %rd2697;
	add.s64 	%rd882, %rd881, %rd879;
	add.s64 	%rd883, %rd882, %rd876;
	add.s64 	%rd884, %rd883, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r616,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r617}, %rd871;
	}
	shf.r.wrap.b32 	%r618, %r617, %r616, 28;
	shf.r.wrap.b32 	%r619, %r616, %r617, 28;
	mov.b64 	%rd885, {%r619, %r618};
	shf.l.wrap.b32 	%r620, %r616, %r617, 30;
	shf.l.wrap.b32 	%r621, %r617, %r616, 30;
	mov.b64 	%rd886, {%r621, %r620};
	xor.b64  	%rd887, %rd886, %rd885;
	shf.l.wrap.b32 	%r622, %r616, %r617, 25;
	shf.l.wrap.b32 	%r623, %r617, %r616, 25;
	mov.b64 	%rd888, {%r623, %r622};
	xor.b64  	%rd889, %rd887, %rd888;
	xor.b64  	%rd890, %rd871, %rd823;
	xor.b64  	%rd891, %rd871, %rd847;
	and.b64  	%rd892, %rd891, %rd890;
	xor.b64  	%rd893, %rd892, %rd871;
	add.s64 	%rd894, %rd883, %rd893;
	add.s64 	%rd895, %rd894, %rd889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r624,%dummy}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r625}, %rd884;
	}
	shf.r.wrap.b32 	%r626, %r625, %r624, 14;
	shf.r.wrap.b32 	%r627, %r624, %r625, 14;
	mov.b64 	%rd896, {%r627, %r626};
	shf.r.wrap.b32 	%r628, %r625, %r624, 18;
	shf.r.wrap.b32 	%r629, %r624, %r625, 18;
	mov.b64 	%rd897, {%r629, %r628};
	xor.b64  	%rd898, %rd897, %rd896;
	shf.l.wrap.b32 	%r630, %r624, %r625, 23;
	shf.l.wrap.b32 	%r631, %r625, %r624, 23;
	mov.b64 	%rd899, {%r631, %r630};
	xor.b64  	%rd900, %rd898, %rd899;
	xor.b64  	%rd901, %rd860, %rd836;
	and.b64  	%rd902, %rd884, %rd901;
	xor.b64  	%rd903, %rd902, %rd836;
	add.s64 	%rd904, %rd812, %rd580;
	add.s64 	%rd905, %rd904, %rd2698;
	add.s64 	%rd906, %rd905, %rd903;
	add.s64 	%rd907, %rd906, %rd900;
	add.s64 	%rd908, %rd907, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r632,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r633}, %rd895;
	}
	shf.r.wrap.b32 	%r634, %r633, %r632, 28;
	shf.r.wrap.b32 	%r635, %r632, %r633, 28;
	mov.b64 	%rd909, {%r635, %r634};
	shf.l.wrap.b32 	%r636, %r632, %r633, 30;
	shf.l.wrap.b32 	%r637, %r633, %r632, 30;
	mov.b64 	%rd910, {%r637, %r636};
	xor.b64  	%rd911, %rd910, %rd909;
	shf.l.wrap.b32 	%r638, %r632, %r633, 25;
	shf.l.wrap.b32 	%r639, %r633, %r632, 25;
	mov.b64 	%rd912, {%r639, %r638};
	xor.b64  	%rd913, %rd911, %rd912;
	xor.b64  	%rd914, %rd895, %rd847;
	xor.b64  	%rd915, %rd895, %rd871;
	and.b64  	%rd916, %rd915, %rd914;
	xor.b64  	%rd917, %rd916, %rd895;
	add.s64 	%rd918, %rd907, %rd917;
	add.s64 	%rd919, %rd918, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r640,%dummy}, %rd908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r641}, %rd908;
	}
	shf.r.wrap.b32 	%r642, %r641, %r640, 14;
	shf.r.wrap.b32 	%r643, %r640, %r641, 14;
	mov.b64 	%rd920, {%r643, %r642};
	shf.r.wrap.b32 	%r644, %r641, %r640, 18;
	shf.r.wrap.b32 	%r645, %r640, %r641, 18;
	mov.b64 	%rd921, {%r645, %r644};
	xor.b64  	%rd922, %rd921, %rd920;
	shf.l.wrap.b32 	%r646, %r640, %r641, 23;
	shf.l.wrap.b32 	%r647, %r641, %r640, 23;
	mov.b64 	%rd923, {%r647, %r646};
	xor.b64  	%rd924, %rd922, %rd923;
	xor.b64  	%rd925, %rd884, %rd860;
	and.b64  	%rd926, %rd908, %rd925;
	xor.b64  	%rd927, %rd926, %rd860;
	add.s64 	%rd928, %rd836, %rd587;
	add.s64 	%rd929, %rd928, %rd2699;
	add.s64 	%rd930, %rd929, %rd927;
	add.s64 	%rd931, %rd930, %rd924;
	add.s64 	%rd932, %rd931, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r648,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r649}, %rd919;
	}
	shf.r.wrap.b32 	%r650, %r649, %r648, 28;
	shf.r.wrap.b32 	%r651, %r648, %r649, 28;
	mov.b64 	%rd933, {%r651, %r650};
	shf.l.wrap.b32 	%r652, %r648, %r649, 30;
	shf.l.wrap.b32 	%r653, %r649, %r648, 30;
	mov.b64 	%rd934, {%r653, %r652};
	xor.b64  	%rd935, %rd934, %rd933;
	shf.l.wrap.b32 	%r654, %r648, %r649, 25;
	shf.l.wrap.b32 	%r655, %r649, %r648, 25;
	mov.b64 	%rd936, {%r655, %r654};
	xor.b64  	%rd937, %rd935, %rd936;
	xor.b64  	%rd938, %rd919, %rd871;
	xor.b64  	%rd939, %rd919, %rd895;
	and.b64  	%rd940, %rd939, %rd938;
	xor.b64  	%rd941, %rd940, %rd919;
	add.s64 	%rd942, %rd931, %rd941;
	add.s64 	%rd943, %rd942, %rd937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r656,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r657}, %rd932;
	}
	shf.r.wrap.b32 	%r658, %r657, %r656, 14;
	shf.r.wrap.b32 	%r659, %r656, %r657, 14;
	mov.b64 	%rd944, {%r659, %r658};
	shf.r.wrap.b32 	%r660, %r657, %r656, 18;
	shf.r.wrap.b32 	%r661, %r656, %r657, 18;
	mov.b64 	%rd945, {%r661, %r660};
	xor.b64  	%rd946, %rd945, %rd944;
	shf.l.wrap.b32 	%r662, %r656, %r657, 23;
	shf.l.wrap.b32 	%r663, %r657, %r656, 23;
	mov.b64 	%rd947, {%r663, %r662};
	xor.b64  	%rd948, %rd946, %rd947;
	xor.b64  	%rd949, %rd908, %rd884;
	and.b64  	%rd950, %rd932, %rd949;
	xor.b64  	%rd951, %rd950, %rd884;
	add.s64 	%rd952, %rd860, %rd594;
	add.s64 	%rd953, %rd952, %rd2700;
	add.s64 	%rd954, %rd953, %rd951;
	add.s64 	%rd955, %rd954, %rd948;
	add.s64 	%rd956, %rd955, %rd871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r664,%dummy}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r665}, %rd943;
	}
	shf.r.wrap.b32 	%r666, %r665, %r664, 28;
	shf.r.wrap.b32 	%r667, %r664, %r665, 28;
	mov.b64 	%rd957, {%r667, %r666};
	shf.l.wrap.b32 	%r668, %r664, %r665, 30;
	shf.l.wrap.b32 	%r669, %r665, %r664, 30;
	mov.b64 	%rd958, {%r669, %r668};
	xor.b64  	%rd959, %rd958, %rd957;
	shf.l.wrap.b32 	%r670, %r664, %r665, 25;
	shf.l.wrap.b32 	%r671, %r665, %r664, 25;
	mov.b64 	%rd960, {%r671, %r670};
	xor.b64  	%rd961, %rd959, %rd960;
	xor.b64  	%rd962, %rd943, %rd895;
	xor.b64  	%rd963, %rd943, %rd919;
	and.b64  	%rd964, %rd963, %rd962;
	xor.b64  	%rd965, %rd964, %rd943;
	add.s64 	%rd966, %rd955, %rd965;
	add.s64 	%rd967, %rd966, %rd961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r672,%dummy}, %rd956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r673}, %rd956;
	}
	shf.r.wrap.b32 	%r674, %r673, %r672, 14;
	shf.r.wrap.b32 	%r675, %r672, %r673, 14;
	mov.b64 	%rd968, {%r675, %r674};
	shf.r.wrap.b32 	%r676, %r673, %r672, 18;
	shf.r.wrap.b32 	%r677, %r672, %r673, 18;
	mov.b64 	%rd969, {%r677, %r676};
	xor.b64  	%rd970, %rd969, %rd968;
	shf.l.wrap.b32 	%r678, %r672, %r673, 23;
	shf.l.wrap.b32 	%r679, %r673, %r672, 23;
	mov.b64 	%rd971, {%r679, %r678};
	xor.b64  	%rd972, %rd970, %rd971;
	xor.b64  	%rd973, %rd932, %rd908;
	and.b64  	%rd974, %rd956, %rd973;
	xor.b64  	%rd975, %rd974, %rd908;
	add.s64 	%rd976, %rd884, %rd607;
	add.s64 	%rd977, %rd976, %rd2701;
	add.s64 	%rd978, %rd977, %rd975;
	add.s64 	%rd979, %rd978, %rd972;
	add.s64 	%rd980, %rd979, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r680,%dummy}, %rd967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r681}, %rd967;
	}
	shf.r.wrap.b32 	%r682, %r681, %r680, 28;
	shf.r.wrap.b32 	%r683, %r680, %r681, 28;
	mov.b64 	%rd981, {%r683, %r682};
	shf.l.wrap.b32 	%r684, %r680, %r681, 30;
	shf.l.wrap.b32 	%r685, %r681, %r680, 30;
	mov.b64 	%rd982, {%r685, %r684};
	xor.b64  	%rd983, %rd982, %rd981;
	shf.l.wrap.b32 	%r686, %r680, %r681, 25;
	shf.l.wrap.b32 	%r687, %r681, %r680, 25;
	mov.b64 	%rd984, {%r687, %r686};
	xor.b64  	%rd985, %rd983, %rd984;
	xor.b64  	%rd986, %rd967, %rd919;
	xor.b64  	%rd987, %rd967, %rd943;
	and.b64  	%rd988, %rd987, %rd986;
	xor.b64  	%rd989, %rd988, %rd967;
	add.s64 	%rd990, %rd979, %rd989;
	add.s64 	%rd991, %rd990, %rd985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r688,%dummy}, %rd594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd594;
	}
	shf.r.wrap.b32 	%r690, %r689, %r688, 19;
	shf.r.wrap.b32 	%r691, %r688, %r689, 19;
	mov.b64 	%rd992, {%r691, %r690};
	shf.l.wrap.b32 	%r692, %r688, %r689, 3;
	shf.l.wrap.b32 	%r693, %r689, %r688, 3;
	mov.b64 	%rd993, {%r693, %r692};
	shr.u64 	%rd994, %rd594, 6;
	xor.b64  	%rd995, %rd992, %rd994;
	xor.b64  	%rd996, %rd995, %rd993;
	add.s64 	%rd997, %rd524, %rd559;
	add.s64 	%rd998, %rd997, %rd996;
	add.s64 	%rd999, %rd998, %rd46;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r694,%dummy}, %rd607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r695}, %rd607;
	}
	shf.r.wrap.b32 	%r696, %r695, %r694, 19;
	shf.r.wrap.b32 	%r697, %r694, %r695, 19;
	mov.b64 	%rd1000, {%r697, %r696};
	shf.l.wrap.b32 	%r698, %r694, %r695, 3;
	shf.l.wrap.b32 	%r699, %r695, %r694, 3;
	mov.b64 	%rd1001, {%r699, %r698};
	shr.u64 	%rd1002, %rd607, 6;
	xor.b64  	%rd1003, %rd1000, %rd1002;
	xor.b64  	%rd1004, %rd1003, %rd1001;
	shf.r.wrap.b32 	%r700, %r369, %r368, 1;
	shf.r.wrap.b32 	%r701, %r368, %r369, 1;
	mov.b64 	%rd1005, {%r701, %r700};
	shf.r.wrap.b32 	%r702, %r369, %r368, 8;
	shf.r.wrap.b32 	%r703, %r368, %r369, 8;
	mov.b64 	%rd1006, {%r703, %r702};
	shr.u64 	%rd1007, %rd530, 7;
	xor.b64  	%rd1008, %rd1005, %rd1007;
	xor.b64  	%rd1009, %rd1008, %rd1006;
	add.s64 	%rd1010, %rd25, %rd566;
	add.s64 	%rd1011, %rd1010, %rd1004;
	add.s64 	%rd1012, %rd1011, %rd1009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r704,%dummy}, %rd999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r705}, %rd999;
	}
	shf.r.wrap.b32 	%r706, %r705, %r704, 19;
	shf.r.wrap.b32 	%r707, %r704, %r705, 19;
	mov.b64 	%rd1013, {%r707, %r706};
	shf.l.wrap.b32 	%r708, %r704, %r705, 3;
	shf.l.wrap.b32 	%r709, %r705, %r704, 3;
	mov.b64 	%rd1014, {%r709, %r708};
	shr.u64 	%rd1015, %rd999, 6;
	xor.b64  	%rd1016, %rd1013, %rd1015;
	xor.b64  	%rd1017, %rd1016, %rd1014;
	add.s64 	%rd1018, %rd530, %rd573;
	add.s64 	%rd1019, %rd1018, %rd1017;
	add.s64 	%rd1020, %rd1019, %rd47;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r710,%dummy}, %rd1012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r711}, %rd1012;
	}
	shf.r.wrap.b32 	%r712, %r711, %r710, 19;
	shf.r.wrap.b32 	%r713, %r710, %r711, 19;
	mov.b64 	%rd1021, {%r713, %r712};
	shf.l.wrap.b32 	%r714, %r710, %r711, 3;
	shf.l.wrap.b32 	%r715, %r711, %r710, 3;
	mov.b64 	%rd1022, {%r715, %r714};
	shr.u64 	%rd1023, %rd1012, 6;
	xor.b64  	%rd1024, %rd1021, %rd1023;
	xor.b64  	%rd1025, %rd1024, %rd1022;
	shf.r.wrap.b32 	%r716, %r375, %r374, 1;
	shf.r.wrap.b32 	%r717, %r374, %r375, 1;
	mov.b64 	%rd1026, {%r717, %r716};
	shf.r.wrap.b32 	%r718, %r375, %r374, 8;
	shf.r.wrap.b32 	%r719, %r374, %r375, 8;
	mov.b64 	%rd1027, {%r719, %r718};
	shr.u64 	%rd1028, %rd536, 7;
	xor.b64  	%rd1029, %rd1026, %rd1028;
	xor.b64  	%rd1030, %rd1029, %rd1027;
	add.s64 	%rd1031, %rd26, %rd580;
	add.s64 	%rd1032, %rd1031, %rd1025;
	add.s64 	%rd1033, %rd1032, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r720,%dummy}, %rd1020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd1020;
	}
	shf.r.wrap.b32 	%r722, %r721, %r720, 19;
	shf.r.wrap.b32 	%r723, %r720, %r721, 19;
	mov.b64 	%rd1034, {%r723, %r722};
	shf.l.wrap.b32 	%r724, %r720, %r721, 3;
	shf.l.wrap.b32 	%r725, %r721, %r720, 3;
	mov.b64 	%rd1035, {%r725, %r724};
	shr.u64 	%rd1036, %rd1020, 6;
	xor.b64  	%rd1037, %rd1034, %rd1036;
	xor.b64  	%rd1038, %rd1037, %rd1035;
	add.s64 	%rd1039, %rd536, %rd587;
	add.s64 	%rd1040, %rd1039, %rd1038;
	add.s64 	%rd1041, %rd1040, %rd48;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd1033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r727}, %rd1033;
	}
	shf.r.wrap.b32 	%r728, %r727, %r726, 19;
	shf.r.wrap.b32 	%r729, %r726, %r727, 19;
	mov.b64 	%rd1042, {%r729, %r728};
	shf.l.wrap.b32 	%r730, %r726, %r727, 3;
	shf.l.wrap.b32 	%r731, %r727, %r726, 3;
	mov.b64 	%rd1043, {%r731, %r730};
	shr.u64 	%rd1044, %rd1033, 6;
	xor.b64  	%rd1045, %rd1042, %rd1044;
	xor.b64  	%rd1046, %rd1045, %rd1043;
	shf.r.wrap.b32 	%r732, %r381, %r380, 1;
	shf.r.wrap.b32 	%r733, %r380, %r381, 1;
	mov.b64 	%rd1047, {%r733, %r732};
	shf.r.wrap.b32 	%r734, %r381, %r380, 8;
	shf.r.wrap.b32 	%r735, %r380, %r381, 8;
	mov.b64 	%rd1048, {%r735, %r734};
	shr.u64 	%rd1049, %rd543, 7;
	xor.b64  	%rd1050, %rd1047, %rd1049;
	xor.b64  	%rd1051, %rd1050, %rd1048;
	add.s64 	%rd1052, %rd27, %rd594;
	add.s64 	%rd1053, %rd1052, %rd1046;
	add.s64 	%rd1054, %rd1053, %rd1051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r736,%dummy}, %rd1041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r737}, %rd1041;
	}
	shf.r.wrap.b32 	%r738, %r737, %r736, 19;
	shf.r.wrap.b32 	%r739, %r736, %r737, 19;
	mov.b64 	%rd1055, {%r739, %r738};
	shf.l.wrap.b32 	%r740, %r736, %r737, 3;
	shf.l.wrap.b32 	%r741, %r737, %r736, 3;
	mov.b64 	%rd1056, {%r741, %r740};
	shr.u64 	%rd1057, %rd1041, 6;
	xor.b64  	%rd1058, %rd1055, %rd1057;
	xor.b64  	%rd1059, %rd1058, %rd1056;
	shf.r.wrap.b32 	%r742, %r387, %r386, 1;
	shf.r.wrap.b32 	%r743, %r386, %r387, 1;
	mov.b64 	%rd1060, {%r743, %r742};
	shf.r.wrap.b32 	%r744, %r387, %r386, 8;
	shf.r.wrap.b32 	%r745, %r386, %r387, 8;
	mov.b64 	%rd1061, {%r745, %r744};
	shr.u64 	%rd1062, %rd545, 7;
	xor.b64  	%rd1063, %rd1060, %rd1062;
	xor.b64  	%rd1064, %rd1063, %rd1061;
	add.s64 	%rd1065, %rd543, %rd607;
	add.s64 	%rd1066, %rd1065, %rd1059;
	add.s64 	%rd1067, %rd1066, %rd1064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r746,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r747}, %rd1054;
	}
	shf.r.wrap.b32 	%r748, %r747, %r746, 19;
	shf.r.wrap.b32 	%r749, %r746, %r747, 19;
	mov.b64 	%rd1068, {%r749, %r748};
	shf.l.wrap.b32 	%r750, %r746, %r747, 3;
	shf.l.wrap.b32 	%r751, %r747, %r746, 3;
	mov.b64 	%rd1069, {%r751, %r750};
	shr.u64 	%rd1070, %rd1054, 6;
	xor.b64  	%rd1071, %rd1068, %rd1070;
	xor.b64  	%rd1072, %rd1071, %rd1069;
	shf.r.wrap.b32 	%r752, %r393, %r392, 1;
	shf.r.wrap.b32 	%r753, %r392, %r393, 1;
	mov.b64 	%rd1073, {%r753, %r752};
	shf.r.wrap.b32 	%r754, %r393, %r392, 8;
	shf.r.wrap.b32 	%r755, %r392, %r393, 8;
	mov.b64 	%rd1074, {%r755, %r754};
	shr.u64 	%rd1075, %rd552, 7;
	xor.b64  	%rd1076, %rd1073, %rd1075;
	xor.b64  	%rd1077, %rd1076, %rd1074;
	add.s64 	%rd1078, %rd999, %rd545;
	add.s64 	%rd1079, %rd1078, %rd1072;
	add.s64 	%rd1080, %rd1079, %rd1077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r756,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r757}, %rd1067;
	}
	shf.r.wrap.b32 	%r758, %r757, %r756, 19;
	shf.r.wrap.b32 	%r759, %r756, %r757, 19;
	mov.b64 	%rd1081, {%r759, %r758};
	shf.l.wrap.b32 	%r760, %r756, %r757, 3;
	shf.l.wrap.b32 	%r761, %r757, %r756, 3;
	mov.b64 	%rd1082, {%r761, %r760};
	shr.u64 	%rd1083, %rd1067, 6;
	xor.b64  	%rd1084, %rd1081, %rd1083;
	xor.b64  	%rd1085, %rd1084, %rd1082;
	shf.r.wrap.b32 	%r762, %r399, %r398, 1;
	shf.r.wrap.b32 	%r763, %r398, %r399, 1;
	mov.b64 	%rd1086, {%r763, %r762};
	shf.r.wrap.b32 	%r764, %r399, %r398, 8;
	shf.r.wrap.b32 	%r765, %r398, %r399, 8;
	mov.b64 	%rd1087, {%r765, %r764};
	shr.u64 	%rd1088, %rd559, 7;
	xor.b64  	%rd1089, %rd1086, %rd1088;
	xor.b64  	%rd1090, %rd1089, %rd1087;
	add.s64 	%rd1091, %rd1012, %rd552;
	add.s64 	%rd1092, %rd1091, %rd1085;
	add.s64 	%rd1093, %rd1092, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r766,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r767}, %rd1080;
	}
	shf.r.wrap.b32 	%r768, %r767, %r766, 19;
	shf.r.wrap.b32 	%r769, %r766, %r767, 19;
	mov.b64 	%rd1094, {%r769, %r768};
	shf.l.wrap.b32 	%r770, %r766, %r767, 3;
	shf.l.wrap.b32 	%r771, %r767, %r766, 3;
	mov.b64 	%rd1095, {%r771, %r770};
	shr.u64 	%rd1096, %rd1080, 6;
	xor.b64  	%rd1097, %rd1094, %rd1096;
	xor.b64  	%rd1098, %rd1097, %rd1095;
	shf.r.wrap.b32 	%r772, %r405, %r404, 1;
	shf.r.wrap.b32 	%r773, %r404, %r405, 1;
	mov.b64 	%rd1099, {%r773, %r772};
	shf.r.wrap.b32 	%r774, %r405, %r404, 8;
	shf.r.wrap.b32 	%r775, %r404, %r405, 8;
	mov.b64 	%rd1100, {%r775, %r774};
	shr.u64 	%rd1101, %rd566, 7;
	xor.b64  	%rd1102, %rd1099, %rd1101;
	xor.b64  	%rd1103, %rd1102, %rd1100;
	add.s64 	%rd1104, %rd1020, %rd559;
	add.s64 	%rd1105, %rd1104, %rd1098;
	add.s64 	%rd1106, %rd1105, %rd1103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r776,%dummy}, %rd1093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r777}, %rd1093;
	}
	shf.r.wrap.b32 	%r778, %r777, %r776, 19;
	shf.r.wrap.b32 	%r779, %r776, %r777, 19;
	mov.b64 	%rd1107, {%r779, %r778};
	shf.l.wrap.b32 	%r780, %r776, %r777, 3;
	shf.l.wrap.b32 	%r781, %r777, %r776, 3;
	mov.b64 	%rd1108, {%r781, %r780};
	shr.u64 	%rd1109, %rd1093, 6;
	xor.b64  	%rd1110, %rd1107, %rd1109;
	xor.b64  	%rd1111, %rd1110, %rd1108;
	shf.r.wrap.b32 	%r782, %r411, %r410, 1;
	shf.r.wrap.b32 	%r783, %r410, %r411, 1;
	mov.b64 	%rd1112, {%r783, %r782};
	shf.r.wrap.b32 	%r784, %r411, %r410, 8;
	shf.r.wrap.b32 	%r785, %r410, %r411, 8;
	mov.b64 	%rd1113, {%r785, %r784};
	shr.u64 	%rd1114, %rd573, 7;
	xor.b64  	%rd1115, %rd1112, %rd1114;
	xor.b64  	%rd1116, %rd1115, %rd1113;
	add.s64 	%rd1117, %rd1033, %rd566;
	add.s64 	%rd1118, %rd1117, %rd1111;
	add.s64 	%rd1119, %rd1118, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r786,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r787}, %rd1106;
	}
	shf.r.wrap.b32 	%r788, %r787, %r786, 19;
	shf.r.wrap.b32 	%r789, %r786, %r787, 19;
	mov.b64 	%rd1120, {%r789, %r788};
	shf.l.wrap.b32 	%r790, %r786, %r787, 3;
	shf.l.wrap.b32 	%r791, %r787, %r786, 3;
	mov.b64 	%rd1121, {%r791, %r790};
	shr.u64 	%rd1122, %rd1106, 6;
	xor.b64  	%rd1123, %rd1120, %rd1122;
	xor.b64  	%rd1124, %rd1123, %rd1121;
	shf.r.wrap.b32 	%r792, %r417, %r416, 1;
	shf.r.wrap.b32 	%r793, %r416, %r417, 1;
	mov.b64 	%rd1125, {%r793, %r792};
	shf.r.wrap.b32 	%r794, %r417, %r416, 8;
	shf.r.wrap.b32 	%r795, %r416, %r417, 8;
	mov.b64 	%rd1126, {%r795, %r794};
	shr.u64 	%rd1127, %rd580, 7;
	xor.b64  	%rd1128, %rd1125, %rd1127;
	xor.b64  	%rd1129, %rd1128, %rd1126;
	add.s64 	%rd1130, %rd1041, %rd573;
	add.s64 	%rd1131, %rd1130, %rd1124;
	add.s64 	%rd1132, %rd1131, %rd1129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r796,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r797}, %rd1119;
	}
	shf.r.wrap.b32 	%r798, %r797, %r796, 19;
	shf.r.wrap.b32 	%r799, %r796, %r797, 19;
	mov.b64 	%rd1133, {%r799, %r798};
	shf.l.wrap.b32 	%r800, %r796, %r797, 3;
	shf.l.wrap.b32 	%r801, %r797, %r796, 3;
	mov.b64 	%rd1134, {%r801, %r800};
	shr.u64 	%rd1135, %rd1119, 6;
	xor.b64  	%rd1136, %rd1133, %rd1135;
	xor.b64  	%rd1137, %rd1136, %rd1134;
	shf.r.wrap.b32 	%r802, %r423, %r422, 1;
	shf.r.wrap.b32 	%r803, %r422, %r423, 1;
	mov.b64 	%rd1138, {%r803, %r802};
	shf.r.wrap.b32 	%r804, %r423, %r422, 8;
	shf.r.wrap.b32 	%r805, %r422, %r423, 8;
	mov.b64 	%rd1139, {%r805, %r804};
	shr.u64 	%rd1140, %rd587, 7;
	xor.b64  	%rd1141, %rd1138, %rd1140;
	xor.b64  	%rd1142, %rd1141, %rd1139;
	add.s64 	%rd1143, %rd1054, %rd580;
	add.s64 	%rd1144, %rd1143, %rd1137;
	add.s64 	%rd1145, %rd1144, %rd1142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd1132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r807}, %rd1132;
	}
	shf.r.wrap.b32 	%r808, %r807, %r806, 19;
	shf.r.wrap.b32 	%r809, %r806, %r807, 19;
	mov.b64 	%rd1146, {%r809, %r808};
	shf.l.wrap.b32 	%r810, %r806, %r807, 3;
	shf.l.wrap.b32 	%r811, %r807, %r806, 3;
	mov.b64 	%rd1147, {%r811, %r810};
	shr.u64 	%rd1148, %rd1132, 6;
	xor.b64  	%rd1149, %rd1146, %rd1148;
	xor.b64  	%rd1150, %rd1149, %rd1147;
	shf.r.wrap.b32 	%r812, %r689, %r688, 1;
	shf.r.wrap.b32 	%r813, %r688, %r689, 1;
	mov.b64 	%rd1151, {%r813, %r812};
	shf.r.wrap.b32 	%r814, %r689, %r688, 8;
	shf.r.wrap.b32 	%r815, %r688, %r689, 8;
	mov.b64 	%rd1152, {%r815, %r814};
	shr.u64 	%rd1153, %rd594, 7;
	xor.b64  	%rd1154, %rd1151, %rd1153;
	xor.b64  	%rd1155, %rd1154, %rd1152;
	add.s64 	%rd1156, %rd1067, %rd587;
	add.s64 	%rd1157, %rd1156, %rd1150;
	add.s64 	%rd1158, %rd1157, %rd1155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r816,%dummy}, %rd1145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r817}, %rd1145;
	}
	shf.r.wrap.b32 	%r818, %r817, %r816, 19;
	shf.r.wrap.b32 	%r819, %r816, %r817, 19;
	mov.b64 	%rd1159, {%r819, %r818};
	shf.l.wrap.b32 	%r820, %r816, %r817, 3;
	shf.l.wrap.b32 	%r821, %r817, %r816, 3;
	mov.b64 	%rd1160, {%r821, %r820};
	shr.u64 	%rd1161, %rd1145, 6;
	xor.b64  	%rd1162, %rd1159, %rd1161;
	xor.b64  	%rd1163, %rd1162, %rd1160;
	shf.r.wrap.b32 	%r822, %r695, %r694, 1;
	shf.r.wrap.b32 	%r823, %r694, %r695, 1;
	mov.b64 	%rd1164, {%r823, %r822};
	shf.r.wrap.b32 	%r824, %r695, %r694, 8;
	shf.r.wrap.b32 	%r825, %r694, %r695, 8;
	mov.b64 	%rd1165, {%r825, %r824};
	shr.u64 	%rd1166, %rd607, 7;
	xor.b64  	%rd1167, %rd1164, %rd1166;
	xor.b64  	%rd1168, %rd1167, %rd1165;
	add.s64 	%rd1169, %rd1080, %rd594;
	add.s64 	%rd1170, %rd1169, %rd1163;
	add.s64 	%rd1171, %rd1170, %rd1168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r826,%dummy}, %rd1158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r827}, %rd1158;
	}
	shf.r.wrap.b32 	%r828, %r827, %r826, 19;
	shf.r.wrap.b32 	%r829, %r826, %r827, 19;
	mov.b64 	%rd1172, {%r829, %r828};
	shf.l.wrap.b32 	%r830, %r826, %r827, 3;
	shf.l.wrap.b32 	%r831, %r827, %r826, 3;
	mov.b64 	%rd1173, {%r831, %r830};
	shr.u64 	%rd1174, %rd1158, 6;
	xor.b64  	%rd1175, %rd1172, %rd1174;
	xor.b64  	%rd1176, %rd1175, %rd1173;
	shf.r.wrap.b32 	%r832, %r705, %r704, 1;
	shf.r.wrap.b32 	%r833, %r704, %r705, 1;
	mov.b64 	%rd1177, {%r833, %r832};
	shf.r.wrap.b32 	%r834, %r705, %r704, 8;
	shf.r.wrap.b32 	%r835, %r704, %r705, 8;
	mov.b64 	%rd1178, {%r835, %r834};
	shr.u64 	%rd1179, %rd999, 7;
	xor.b64  	%rd1180, %rd1177, %rd1179;
	xor.b64  	%rd1181, %rd1180, %rd1178;
	add.s64 	%rd1182, %rd1093, %rd607;
	add.s64 	%rd1183, %rd1182, %rd1176;
	add.s64 	%rd1184, %rd1183, %rd1181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r836,%dummy}, %rd980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r837}, %rd980;
	}
	shf.r.wrap.b32 	%r838, %r837, %r836, 14;
	shf.r.wrap.b32 	%r839, %r836, %r837, 14;
	mov.b64 	%rd1185, {%r839, %r838};
	shf.r.wrap.b32 	%r840, %r837, %r836, 18;
	shf.r.wrap.b32 	%r841, %r836, %r837, 18;
	mov.b64 	%rd1186, {%r841, %r840};
	xor.b64  	%rd1187, %rd1186, %rd1185;
	shf.l.wrap.b32 	%r842, %r836, %r837, 23;
	shf.l.wrap.b32 	%r843, %r837, %r836, 23;
	mov.b64 	%rd1188, {%r843, %r842};
	xor.b64  	%rd1189, %rd1187, %rd1188;
	xor.b64  	%rd1190, %rd932, %rd956;
	and.b64  	%rd1191, %rd1190, %rd980;
	xor.b64  	%rd1192, %rd1191, %rd932;
	add.s64 	%rd1193, %rd1192, %rd908;
	add.s64 	%rd1194, %rd1193, %rd999;
	add.s64 	%rd1195, %rd1194, %rd2702;
	add.s64 	%rd1196, %rd1195, %rd1189;
	add.s64 	%rd1197, %rd1196, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r844,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r845}, %rd991;
	}
	shf.r.wrap.b32 	%r846, %r845, %r844, 28;
	shf.r.wrap.b32 	%r847, %r844, %r845, 28;
	mov.b64 	%rd1198, {%r847, %r846};
	shf.l.wrap.b32 	%r848, %r844, %r845, 30;
	shf.l.wrap.b32 	%r849, %r845, %r844, 30;
	mov.b64 	%rd1199, {%r849, %r848};
	xor.b64  	%rd1200, %rd1199, %rd1198;
	shf.l.wrap.b32 	%r850, %r844, %r845, 25;
	shf.l.wrap.b32 	%r851, %r845, %r844, 25;
	mov.b64 	%rd1201, {%r851, %r850};
	xor.b64  	%rd1202, %rd1200, %rd1201;
	xor.b64  	%rd1203, %rd991, %rd943;
	xor.b64  	%rd1204, %rd991, %rd967;
	and.b64  	%rd1205, %rd1204, %rd1203;
	xor.b64  	%rd1206, %rd1205, %rd991;
	add.s64 	%rd1207, %rd1196, %rd1206;
	add.s64 	%rd1208, %rd1207, %rd1202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r852,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r853}, %rd1197;
	}
	shf.r.wrap.b32 	%r854, %r853, %r852, 14;
	shf.r.wrap.b32 	%r855, %r852, %r853, 14;
	mov.b64 	%rd1209, {%r855, %r854};
	shf.r.wrap.b32 	%r856, %r853, %r852, 18;
	shf.r.wrap.b32 	%r857, %r852, %r853, 18;
	mov.b64 	%rd1210, {%r857, %r856};
	xor.b64  	%rd1211, %rd1210, %rd1209;
	shf.l.wrap.b32 	%r858, %r852, %r853, 23;
	shf.l.wrap.b32 	%r859, %r853, %r852, 23;
	mov.b64 	%rd1212, {%r859, %r858};
	xor.b64  	%rd1213, %rd1211, %rd1212;
	xor.b64  	%rd1214, %rd956, %rd980;
	and.b64  	%rd1215, %rd1197, %rd1214;
	xor.b64  	%rd1216, %rd1215, %rd956;
	add.s64 	%rd1217, %rd1012, %rd932;
	add.s64 	%rd1218, %rd1217, %rd2703;
	add.s64 	%rd1219, %rd1218, %rd1216;
	add.s64 	%rd1220, %rd1219, %rd1213;
	add.s64 	%rd1221, %rd1220, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r860,%dummy}, %rd1208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r861}, %rd1208;
	}
	shf.r.wrap.b32 	%r862, %r861, %r860, 28;
	shf.r.wrap.b32 	%r863, %r860, %r861, 28;
	mov.b64 	%rd1222, {%r863, %r862};
	shf.l.wrap.b32 	%r864, %r860, %r861, 30;
	shf.l.wrap.b32 	%r865, %r861, %r860, 30;
	mov.b64 	%rd1223, {%r865, %r864};
	xor.b64  	%rd1224, %rd1223, %rd1222;
	shf.l.wrap.b32 	%r866, %r860, %r861, 25;
	shf.l.wrap.b32 	%r867, %r861, %r860, 25;
	mov.b64 	%rd1225, {%r867, %r866};
	xor.b64  	%rd1226, %rd1224, %rd1225;
	xor.b64  	%rd1227, %rd1208, %rd967;
	xor.b64  	%rd1228, %rd1208, %rd991;
	and.b64  	%rd1229, %rd1228, %rd1227;
	xor.b64  	%rd1230, %rd1229, %rd1208;
	add.s64 	%rd1231, %rd1220, %rd1230;
	add.s64 	%rd1232, %rd1231, %rd1226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r868,%dummy}, %rd1221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r869}, %rd1221;
	}
	shf.r.wrap.b32 	%r870, %r869, %r868, 14;
	shf.r.wrap.b32 	%r871, %r868, %r869, 14;
	mov.b64 	%rd1233, {%r871, %r870};
	shf.r.wrap.b32 	%r872, %r869, %r868, 18;
	shf.r.wrap.b32 	%r873, %r868, %r869, 18;
	mov.b64 	%rd1234, {%r873, %r872};
	xor.b64  	%rd1235, %rd1234, %rd1233;
	shf.l.wrap.b32 	%r874, %r868, %r869, 23;
	shf.l.wrap.b32 	%r875, %r869, %r868, 23;
	mov.b64 	%rd1236, {%r875, %r874};
	xor.b64  	%rd1237, %rd1235, %rd1236;
	xor.b64  	%rd1238, %rd1197, %rd980;
	and.b64  	%rd1239, %rd1221, %rd1238;
	xor.b64  	%rd1240, %rd1239, %rd980;
	add.s64 	%rd1241, %rd1020, %rd956;
	add.s64 	%rd1242, %rd1241, %rd2704;
	add.s64 	%rd1243, %rd1242, %rd1240;
	add.s64 	%rd1244, %rd1243, %rd1237;
	add.s64 	%rd1245, %rd1244, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r876,%dummy}, %rd1232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r877}, %rd1232;
	}
	shf.r.wrap.b32 	%r878, %r877, %r876, 28;
	shf.r.wrap.b32 	%r879, %r876, %r877, 28;
	mov.b64 	%rd1246, {%r879, %r878};
	shf.l.wrap.b32 	%r880, %r876, %r877, 30;
	shf.l.wrap.b32 	%r881, %r877, %r876, 30;
	mov.b64 	%rd1247, {%r881, %r880};
	xor.b64  	%rd1248, %rd1247, %rd1246;
	shf.l.wrap.b32 	%r882, %r876, %r877, 25;
	shf.l.wrap.b32 	%r883, %r877, %r876, 25;
	mov.b64 	%rd1249, {%r883, %r882};
	xor.b64  	%rd1250, %rd1248, %rd1249;
	xor.b64  	%rd1251, %rd1232, %rd991;
	xor.b64  	%rd1252, %rd1232, %rd1208;
	and.b64  	%rd1253, %rd1252, %rd1251;
	xor.b64  	%rd1254, %rd1253, %rd1232;
	add.s64 	%rd1255, %rd1244, %rd1254;
	add.s64 	%rd1256, %rd1255, %rd1250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r884,%dummy}, %rd1245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r885}, %rd1245;
	}
	shf.r.wrap.b32 	%r886, %r885, %r884, 14;
	shf.r.wrap.b32 	%r887, %r884, %r885, 14;
	mov.b64 	%rd1257, {%r887, %r886};
	shf.r.wrap.b32 	%r888, %r885, %r884, 18;
	shf.r.wrap.b32 	%r889, %r884, %r885, 18;
	mov.b64 	%rd1258, {%r889, %r888};
	xor.b64  	%rd1259, %rd1258, %rd1257;
	shf.l.wrap.b32 	%r890, %r884, %r885, 23;
	shf.l.wrap.b32 	%r891, %r885, %r884, 23;
	mov.b64 	%rd1260, {%r891, %r890};
	xor.b64  	%rd1261, %rd1259, %rd1260;
	xor.b64  	%rd1262, %rd1221, %rd1197;
	and.b64  	%rd1263, %rd1245, %rd1262;
	xor.b64  	%rd1264, %rd1263, %rd1197;
	add.s64 	%rd1265, %rd1033, %rd980;
	add.s64 	%rd1266, %rd1265, %rd2705;
	add.s64 	%rd1267, %rd1266, %rd1264;
	add.s64 	%rd1268, %rd1267, %rd1261;
	add.s64 	%rd1269, %rd1268, %rd991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r892,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r893}, %rd1256;
	}
	shf.r.wrap.b32 	%r894, %r893, %r892, 28;
	shf.r.wrap.b32 	%r895, %r892, %r893, 28;
	mov.b64 	%rd1270, {%r895, %r894};
	shf.l.wrap.b32 	%r896, %r892, %r893, 30;
	shf.l.wrap.b32 	%r897, %r893, %r892, 30;
	mov.b64 	%rd1271, {%r897, %r896};
	xor.b64  	%rd1272, %rd1271, %rd1270;
	shf.l.wrap.b32 	%r898, %r892, %r893, 25;
	shf.l.wrap.b32 	%r899, %r893, %r892, 25;
	mov.b64 	%rd1273, {%r899, %r898};
	xor.b64  	%rd1274, %rd1272, %rd1273;
	xor.b64  	%rd1275, %rd1256, %rd1208;
	xor.b64  	%rd1276, %rd1256, %rd1232;
	and.b64  	%rd1277, %rd1276, %rd1275;
	xor.b64  	%rd1278, %rd1277, %rd1256;
	add.s64 	%rd1279, %rd1268, %rd1278;
	add.s64 	%rd1280, %rd1279, %rd1274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r900,%dummy}, %rd1269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r901}, %rd1269;
	}
	shf.r.wrap.b32 	%r902, %r901, %r900, 14;
	shf.r.wrap.b32 	%r903, %r900, %r901, 14;
	mov.b64 	%rd1281, {%r903, %r902};
	shf.r.wrap.b32 	%r904, %r901, %r900, 18;
	shf.r.wrap.b32 	%r905, %r900, %r901, 18;
	mov.b64 	%rd1282, {%r905, %r904};
	xor.b64  	%rd1283, %rd1282, %rd1281;
	shf.l.wrap.b32 	%r906, %r900, %r901, 23;
	shf.l.wrap.b32 	%r907, %r901, %r900, 23;
	mov.b64 	%rd1284, {%r907, %r906};
	xor.b64  	%rd1285, %rd1283, %rd1284;
	xor.b64  	%rd1286, %rd1245, %rd1221;
	and.b64  	%rd1287, %rd1269, %rd1286;
	xor.b64  	%rd1288, %rd1287, %rd1221;
	add.s64 	%rd1289, %rd1197, %rd1041;
	add.s64 	%rd1290, %rd1289, %rd2706;
	add.s64 	%rd1291, %rd1290, %rd1288;
	add.s64 	%rd1292, %rd1291, %rd1285;
	add.s64 	%rd1293, %rd1292, %rd1208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r908,%dummy}, %rd1280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r909}, %rd1280;
	}
	shf.r.wrap.b32 	%r910, %r909, %r908, 28;
	shf.r.wrap.b32 	%r911, %r908, %r909, 28;
	mov.b64 	%rd1294, {%r911, %r910};
	shf.l.wrap.b32 	%r912, %r908, %r909, 30;
	shf.l.wrap.b32 	%r913, %r909, %r908, 30;
	mov.b64 	%rd1295, {%r913, %r912};
	xor.b64  	%rd1296, %rd1295, %rd1294;
	shf.l.wrap.b32 	%r914, %r908, %r909, 25;
	shf.l.wrap.b32 	%r915, %r909, %r908, 25;
	mov.b64 	%rd1297, {%r915, %r914};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	xor.b64  	%rd1299, %rd1280, %rd1232;
	xor.b64  	%rd1300, %rd1280, %rd1256;
	and.b64  	%rd1301, %rd1300, %rd1299;
	xor.b64  	%rd1302, %rd1301, %rd1280;
	add.s64 	%rd1303, %rd1292, %rd1302;
	add.s64 	%rd1304, %rd1303, %rd1298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r916,%dummy}, %rd1293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd1293;
	}
	shf.r.wrap.b32 	%r918, %r917, %r916, 14;
	shf.r.wrap.b32 	%r919, %r916, %r917, 14;
	mov.b64 	%rd1305, {%r919, %r918};
	shf.r.wrap.b32 	%r920, %r917, %r916, 18;
	shf.r.wrap.b32 	%r921, %r916, %r917, 18;
	mov.b64 	%rd1306, {%r921, %r920};
	xor.b64  	%rd1307, %rd1306, %rd1305;
	shf.l.wrap.b32 	%r922, %r916, %r917, 23;
	shf.l.wrap.b32 	%r923, %r917, %r916, 23;
	mov.b64 	%rd1308, {%r923, %r922};
	xor.b64  	%rd1309, %rd1307, %rd1308;
	xor.b64  	%rd1310, %rd1269, %rd1245;
	and.b64  	%rd1311, %rd1293, %rd1310;
	xor.b64  	%rd1312, %rd1311, %rd1245;
	add.s64 	%rd1313, %rd1221, %rd1054;
	add.s64 	%rd1314, %rd1313, %rd2707;
	add.s64 	%rd1315, %rd1314, %rd1312;
	add.s64 	%rd1316, %rd1315, %rd1309;
	add.s64 	%rd1317, %rd1316, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r924,%dummy}, %rd1304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd1304;
	}
	shf.r.wrap.b32 	%r926, %r925, %r924, 28;
	shf.r.wrap.b32 	%r927, %r924, %r925, 28;
	mov.b64 	%rd1318, {%r927, %r926};
	shf.l.wrap.b32 	%r928, %r924, %r925, 30;
	shf.l.wrap.b32 	%r929, %r925, %r924, 30;
	mov.b64 	%rd1319, {%r929, %r928};
	xor.b64  	%rd1320, %rd1319, %rd1318;
	shf.l.wrap.b32 	%r930, %r924, %r925, 25;
	shf.l.wrap.b32 	%r931, %r925, %r924, 25;
	mov.b64 	%rd1321, {%r931, %r930};
	xor.b64  	%rd1322, %rd1320, %rd1321;
	xor.b64  	%rd1323, %rd1304, %rd1256;
	xor.b64  	%rd1324, %rd1304, %rd1280;
	and.b64  	%rd1325, %rd1324, %rd1323;
	xor.b64  	%rd1326, %rd1325, %rd1304;
	add.s64 	%rd1327, %rd1316, %rd1326;
	add.s64 	%rd1328, %rd1327, %rd1322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r932,%dummy}, %rd1317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r933}, %rd1317;
	}
	shf.r.wrap.b32 	%r934, %r933, %r932, 14;
	shf.r.wrap.b32 	%r935, %r932, %r933, 14;
	mov.b64 	%rd1329, {%r935, %r934};
	shf.r.wrap.b32 	%r936, %r933, %r932, 18;
	shf.r.wrap.b32 	%r937, %r932, %r933, 18;
	mov.b64 	%rd1330, {%r937, %r936};
	xor.b64  	%rd1331, %rd1330, %rd1329;
	shf.l.wrap.b32 	%r938, %r932, %r933, 23;
	shf.l.wrap.b32 	%r939, %r933, %r932, 23;
	mov.b64 	%rd1332, {%r939, %r938};
	xor.b64  	%rd1333, %rd1331, %rd1332;
	xor.b64  	%rd1334, %rd1293, %rd1269;
	and.b64  	%rd1335, %rd1317, %rd1334;
	xor.b64  	%rd1336, %rd1335, %rd1269;
	add.s64 	%rd1337, %rd1245, %rd1067;
	add.s64 	%rd1338, %rd1337, %rd2708;
	add.s64 	%rd1339, %rd1338, %rd1336;
	add.s64 	%rd1340, %rd1339, %rd1333;
	add.s64 	%rd1341, %rd1340, %rd1256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r940,%dummy}, %rd1328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r941}, %rd1328;
	}
	shf.r.wrap.b32 	%r942, %r941, %r940, 28;
	shf.r.wrap.b32 	%r943, %r940, %r941, 28;
	mov.b64 	%rd1342, {%r943, %r942};
	shf.l.wrap.b32 	%r944, %r940, %r941, 30;
	shf.l.wrap.b32 	%r945, %r941, %r940, 30;
	mov.b64 	%rd1343, {%r945, %r944};
	xor.b64  	%rd1344, %rd1343, %rd1342;
	shf.l.wrap.b32 	%r946, %r940, %r941, 25;
	shf.l.wrap.b32 	%r947, %r941, %r940, 25;
	mov.b64 	%rd1345, {%r947, %r946};
	xor.b64  	%rd1346, %rd1344, %rd1345;
	xor.b64  	%rd1347, %rd1328, %rd1280;
	xor.b64  	%rd1348, %rd1328, %rd1304;
	and.b64  	%rd1349, %rd1348, %rd1347;
	xor.b64  	%rd1350, %rd1349, %rd1328;
	add.s64 	%rd1351, %rd1340, %rd1350;
	add.s64 	%rd1352, %rd1351, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r948,%dummy}, %rd1341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r949}, %rd1341;
	}
	shf.r.wrap.b32 	%r950, %r949, %r948, 14;
	shf.r.wrap.b32 	%r951, %r948, %r949, 14;
	mov.b64 	%rd1353, {%r951, %r950};
	shf.r.wrap.b32 	%r952, %r949, %r948, 18;
	shf.r.wrap.b32 	%r953, %r948, %r949, 18;
	mov.b64 	%rd1354, {%r953, %r952};
	xor.b64  	%rd1355, %rd1354, %rd1353;
	shf.l.wrap.b32 	%r954, %r948, %r949, 23;
	shf.l.wrap.b32 	%r955, %r949, %r948, 23;
	mov.b64 	%rd1356, {%r955, %r954};
	xor.b64  	%rd1357, %rd1355, %rd1356;
	xor.b64  	%rd1358, %rd1317, %rd1293;
	and.b64  	%rd1359, %rd1341, %rd1358;
	xor.b64  	%rd1360, %rd1359, %rd1293;
	add.s64 	%rd1361, %rd1269, %rd1080;
	add.s64 	%rd1362, %rd1361, %rd2709;
	add.s64 	%rd1363, %rd1362, %rd1360;
	add.s64 	%rd1364, %rd1363, %rd1357;
	add.s64 	%rd1365, %rd1364, %rd1280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r956,%dummy}, %rd1352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r957}, %rd1352;
	}
	shf.r.wrap.b32 	%r958, %r957, %r956, 28;
	shf.r.wrap.b32 	%r959, %r956, %r957, 28;
	mov.b64 	%rd1366, {%r959, %r958};
	shf.l.wrap.b32 	%r960, %r956, %r957, 30;
	shf.l.wrap.b32 	%r961, %r957, %r956, 30;
	mov.b64 	%rd1367, {%r961, %r960};
	xor.b64  	%rd1368, %rd1367, %rd1366;
	shf.l.wrap.b32 	%r962, %r956, %r957, 25;
	shf.l.wrap.b32 	%r963, %r957, %r956, 25;
	mov.b64 	%rd1369, {%r963, %r962};
	xor.b64  	%rd1370, %rd1368, %rd1369;
	xor.b64  	%rd1371, %rd1352, %rd1304;
	xor.b64  	%rd1372, %rd1352, %rd1328;
	and.b64  	%rd1373, %rd1372, %rd1371;
	xor.b64  	%rd1374, %rd1373, %rd1352;
	add.s64 	%rd1375, %rd1364, %rd1374;
	add.s64 	%rd1376, %rd1375, %rd1370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r964,%dummy}, %rd1365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r965}, %rd1365;
	}
	shf.r.wrap.b32 	%r966, %r965, %r964, 14;
	shf.r.wrap.b32 	%r967, %r964, %r965, 14;
	mov.b64 	%rd1377, {%r967, %r966};
	shf.r.wrap.b32 	%r968, %r965, %r964, 18;
	shf.r.wrap.b32 	%r969, %r964, %r965, 18;
	mov.b64 	%rd1378, {%r969, %r968};
	xor.b64  	%rd1379, %rd1378, %rd1377;
	shf.l.wrap.b32 	%r970, %r964, %r965, 23;
	shf.l.wrap.b32 	%r971, %r965, %r964, 23;
	mov.b64 	%rd1380, {%r971, %r970};
	xor.b64  	%rd1381, %rd1379, %rd1380;
	xor.b64  	%rd1382, %rd1341, %rd1317;
	and.b64  	%rd1383, %rd1365, %rd1382;
	xor.b64  	%rd1384, %rd1383, %rd1317;
	add.s64 	%rd1385, %rd1293, %rd1093;
	add.s64 	%rd1386, %rd1385, %rd2710;
	add.s64 	%rd1387, %rd1386, %rd1384;
	add.s64 	%rd1388, %rd1387, %rd1381;
	add.s64 	%rd1389, %rd1388, %rd1304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd1376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd1376;
	}
	shf.r.wrap.b32 	%r974, %r973, %r972, 28;
	shf.r.wrap.b32 	%r975, %r972, %r973, 28;
	mov.b64 	%rd1390, {%r975, %r974};
	shf.l.wrap.b32 	%r976, %r972, %r973, 30;
	shf.l.wrap.b32 	%r977, %r973, %r972, 30;
	mov.b64 	%rd1391, {%r977, %r976};
	xor.b64  	%rd1392, %rd1391, %rd1390;
	shf.l.wrap.b32 	%r978, %r972, %r973, 25;
	shf.l.wrap.b32 	%r979, %r973, %r972, 25;
	mov.b64 	%rd1393, {%r979, %r978};
	xor.b64  	%rd1394, %rd1392, %rd1393;
	xor.b64  	%rd1395, %rd1376, %rd1328;
	xor.b64  	%rd1396, %rd1376, %rd1352;
	and.b64  	%rd1397, %rd1396, %rd1395;
	xor.b64  	%rd1398, %rd1397, %rd1376;
	add.s64 	%rd1399, %rd1388, %rd1398;
	add.s64 	%rd1400, %rd1399, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r980,%dummy}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r981}, %rd1389;
	}
	shf.r.wrap.b32 	%r982, %r981, %r980, 14;
	shf.r.wrap.b32 	%r983, %r980, %r981, 14;
	mov.b64 	%rd1401, {%r983, %r982};
	shf.r.wrap.b32 	%r984, %r981, %r980, 18;
	shf.r.wrap.b32 	%r985, %r980, %r981, 18;
	mov.b64 	%rd1402, {%r985, %r984};
	xor.b64  	%rd1403, %rd1402, %rd1401;
	shf.l.wrap.b32 	%r986, %r980, %r981, 23;
	shf.l.wrap.b32 	%r987, %r981, %r980, 23;
	mov.b64 	%rd1404, {%r987, %r986};
	xor.b64  	%rd1405, %rd1403, %rd1404;
	xor.b64  	%rd1406, %rd1365, %rd1341;
	and.b64  	%rd1407, %rd1389, %rd1406;
	xor.b64  	%rd1408, %rd1407, %rd1341;
	add.s64 	%rd1409, %rd1317, %rd1106;
	add.s64 	%rd1410, %rd1409, %rd2711;
	add.s64 	%rd1411, %rd1410, %rd1408;
	add.s64 	%rd1412, %rd1411, %rd1405;
	add.s64 	%rd1413, %rd1412, %rd1328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd1400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd1400;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 28;
	shf.r.wrap.b32 	%r991, %r988, %r989, 28;
	mov.b64 	%rd1414, {%r991, %r990};
	shf.l.wrap.b32 	%r992, %r988, %r989, 30;
	shf.l.wrap.b32 	%r993, %r989, %r988, 30;
	mov.b64 	%rd1415, {%r993, %r992};
	xor.b64  	%rd1416, %rd1415, %rd1414;
	shf.l.wrap.b32 	%r994, %r988, %r989, 25;
	shf.l.wrap.b32 	%r995, %r989, %r988, 25;
	mov.b64 	%rd1417, {%r995, %r994};
	xor.b64  	%rd1418, %rd1416, %rd1417;
	xor.b64  	%rd1419, %rd1400, %rd1352;
	xor.b64  	%rd1420, %rd1400, %rd1376;
	and.b64  	%rd1421, %rd1420, %rd1419;
	xor.b64  	%rd1422, %rd1421, %rd1400;
	add.s64 	%rd1423, %rd1412, %rd1422;
	add.s64 	%rd1424, %rd1423, %rd1418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r996,%dummy}, %rd1413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r997}, %rd1413;
	}
	shf.r.wrap.b32 	%r998, %r997, %r996, 14;
	shf.r.wrap.b32 	%r999, %r996, %r997, 14;
	mov.b64 	%rd1425, {%r999, %r998};
	shf.r.wrap.b32 	%r1000, %r997, %r996, 18;
	shf.r.wrap.b32 	%r1001, %r996, %r997, 18;
	mov.b64 	%rd1426, {%r1001, %r1000};
	xor.b64  	%rd1427, %rd1426, %rd1425;
	shf.l.wrap.b32 	%r1002, %r996, %r997, 23;
	shf.l.wrap.b32 	%r1003, %r997, %r996, 23;
	mov.b64 	%rd1428, {%r1003, %r1002};
	xor.b64  	%rd1429, %rd1427, %rd1428;
	xor.b64  	%rd1430, %rd1389, %rd1365;
	and.b64  	%rd1431, %rd1413, %rd1430;
	xor.b64  	%rd1432, %rd1431, %rd1365;
	add.s64 	%rd1433, %rd1341, %rd1119;
	add.s64 	%rd1434, %rd1433, %rd2712;
	add.s64 	%rd1435, %rd1434, %rd1432;
	add.s64 	%rd1436, %rd1435, %rd1429;
	add.s64 	%rd1437, %rd1436, %rd1352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1004,%dummy}, %rd1424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd1424;
	}
	shf.r.wrap.b32 	%r1006, %r1005, %r1004, 28;
	shf.r.wrap.b32 	%r1007, %r1004, %r1005, 28;
	mov.b64 	%rd1438, {%r1007, %r1006};
	shf.l.wrap.b32 	%r1008, %r1004, %r1005, 30;
	shf.l.wrap.b32 	%r1009, %r1005, %r1004, 30;
	mov.b64 	%rd1439, {%r1009, %r1008};
	xor.b64  	%rd1440, %rd1439, %rd1438;
	shf.l.wrap.b32 	%r1010, %r1004, %r1005, 25;
	shf.l.wrap.b32 	%r1011, %r1005, %r1004, 25;
	mov.b64 	%rd1441, {%r1011, %r1010};
	xor.b64  	%rd1442, %rd1440, %rd1441;
	xor.b64  	%rd1443, %rd1424, %rd1376;
	xor.b64  	%rd1444, %rd1424, %rd1400;
	and.b64  	%rd1445, %rd1444, %rd1443;
	xor.b64  	%rd1446, %rd1445, %rd1424;
	add.s64 	%rd1447, %rd1436, %rd1446;
	add.s64 	%rd1448, %rd1447, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1012,%dummy}, %rd1437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1013}, %rd1437;
	}
	shf.r.wrap.b32 	%r1014, %r1013, %r1012, 14;
	shf.r.wrap.b32 	%r1015, %r1012, %r1013, 14;
	mov.b64 	%rd1449, {%r1015, %r1014};
	shf.r.wrap.b32 	%r1016, %r1013, %r1012, 18;
	shf.r.wrap.b32 	%r1017, %r1012, %r1013, 18;
	mov.b64 	%rd1450, {%r1017, %r1016};
	xor.b64  	%rd1451, %rd1450, %rd1449;
	shf.l.wrap.b32 	%r1018, %r1012, %r1013, 23;
	shf.l.wrap.b32 	%r1019, %r1013, %r1012, 23;
	mov.b64 	%rd1452, {%r1019, %r1018};
	xor.b64  	%rd1453, %rd1451, %rd1452;
	xor.b64  	%rd1454, %rd1413, %rd1389;
	and.b64  	%rd1455, %rd1437, %rd1454;
	xor.b64  	%rd1456, %rd1455, %rd1389;
	add.s64 	%rd1457, %rd1365, %rd1132;
	add.s64 	%rd1458, %rd1457, %rd2713;
	add.s64 	%rd1459, %rd1458, %rd1456;
	add.s64 	%rd1460, %rd1459, %rd1453;
	add.s64 	%rd1461, %rd1460, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1020,%dummy}, %rd1448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1021}, %rd1448;
	}
	shf.r.wrap.b32 	%r1022, %r1021, %r1020, 28;
	shf.r.wrap.b32 	%r1023, %r1020, %r1021, 28;
	mov.b64 	%rd1462, {%r1023, %r1022};
	shf.l.wrap.b32 	%r1024, %r1020, %r1021, 30;
	shf.l.wrap.b32 	%r1025, %r1021, %r1020, 30;
	mov.b64 	%rd1463, {%r1025, %r1024};
	xor.b64  	%rd1464, %rd1463, %rd1462;
	shf.l.wrap.b32 	%r1026, %r1020, %r1021, 25;
	shf.l.wrap.b32 	%r1027, %r1021, %r1020, 25;
	mov.b64 	%rd1465, {%r1027, %r1026};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	xor.b64  	%rd1467, %rd1448, %rd1400;
	xor.b64  	%rd1468, %rd1448, %rd1424;
	and.b64  	%rd1469, %rd1468, %rd1467;
	xor.b64  	%rd1470, %rd1469, %rd1448;
	add.s64 	%rd1471, %rd1460, %rd1470;
	add.s64 	%rd1472, %rd1471, %rd1466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1028,%dummy}, %rd1461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1029}, %rd1461;
	}
	shf.r.wrap.b32 	%r1030, %r1029, %r1028, 14;
	shf.r.wrap.b32 	%r1031, %r1028, %r1029, 14;
	mov.b64 	%rd1473, {%r1031, %r1030};
	shf.r.wrap.b32 	%r1032, %r1029, %r1028, 18;
	shf.r.wrap.b32 	%r1033, %r1028, %r1029, 18;
	mov.b64 	%rd1474, {%r1033, %r1032};
	xor.b64  	%rd1475, %rd1474, %rd1473;
	shf.l.wrap.b32 	%r1034, %r1028, %r1029, 23;
	shf.l.wrap.b32 	%r1035, %r1029, %r1028, 23;
	mov.b64 	%rd1476, {%r1035, %r1034};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	xor.b64  	%rd1478, %rd1437, %rd1413;
	and.b64  	%rd1479, %rd1461, %rd1478;
	xor.b64  	%rd1480, %rd1479, %rd1413;
	add.s64 	%rd1481, %rd1389, %rd1145;
	add.s64 	%rd1482, %rd1481, %rd2714;
	add.s64 	%rd1483, %rd1482, %rd1480;
	add.s64 	%rd1484, %rd1483, %rd1477;
	add.s64 	%rd1485, %rd1484, %rd1400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1036,%dummy}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1037}, %rd1472;
	}
	shf.r.wrap.b32 	%r1038, %r1037, %r1036, 28;
	shf.r.wrap.b32 	%r1039, %r1036, %r1037, 28;
	mov.b64 	%rd1486, {%r1039, %r1038};
	shf.l.wrap.b32 	%r1040, %r1036, %r1037, 30;
	shf.l.wrap.b32 	%r1041, %r1037, %r1036, 30;
	mov.b64 	%rd1487, {%r1041, %r1040};
	xor.b64  	%rd1488, %rd1487, %rd1486;
	shf.l.wrap.b32 	%r1042, %r1036, %r1037, 25;
	shf.l.wrap.b32 	%r1043, %r1037, %r1036, 25;
	mov.b64 	%rd1489, {%r1043, %r1042};
	xor.b64  	%rd1490, %rd1488, %rd1489;
	xor.b64  	%rd1491, %rd1472, %rd1424;
	xor.b64  	%rd1492, %rd1472, %rd1448;
	and.b64  	%rd1493, %rd1492, %rd1491;
	xor.b64  	%rd1494, %rd1493, %rd1472;
	add.s64 	%rd1495, %rd1484, %rd1494;
	add.s64 	%rd1496, %rd1495, %rd1490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1044,%dummy}, %rd1485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1045}, %rd1485;
	}
	shf.r.wrap.b32 	%r1046, %r1045, %r1044, 14;
	shf.r.wrap.b32 	%r1047, %r1044, %r1045, 14;
	mov.b64 	%rd1497, {%r1047, %r1046};
	shf.r.wrap.b32 	%r1048, %r1045, %r1044, 18;
	shf.r.wrap.b32 	%r1049, %r1044, %r1045, 18;
	mov.b64 	%rd1498, {%r1049, %r1048};
	xor.b64  	%rd1499, %rd1498, %rd1497;
	shf.l.wrap.b32 	%r1050, %r1044, %r1045, 23;
	shf.l.wrap.b32 	%r1051, %r1045, %r1044, 23;
	mov.b64 	%rd1500, {%r1051, %r1050};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	xor.b64  	%rd1502, %rd1461, %rd1437;
	and.b64  	%rd1503, %rd1485, %rd1502;
	xor.b64  	%rd1504, %rd1503, %rd1437;
	add.s64 	%rd1505, %rd1413, %rd1158;
	add.s64 	%rd1506, %rd1505, %rd2715;
	add.s64 	%rd1507, %rd1506, %rd1504;
	add.s64 	%rd1508, %rd1507, %rd1501;
	add.s64 	%rd1509, %rd1508, %rd1424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1052,%dummy}, %rd1496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1053}, %rd1496;
	}
	shf.r.wrap.b32 	%r1054, %r1053, %r1052, 28;
	shf.r.wrap.b32 	%r1055, %r1052, %r1053, 28;
	mov.b64 	%rd1510, {%r1055, %r1054};
	shf.l.wrap.b32 	%r1056, %r1052, %r1053, 30;
	shf.l.wrap.b32 	%r1057, %r1053, %r1052, 30;
	mov.b64 	%rd1511, {%r1057, %r1056};
	xor.b64  	%rd1512, %rd1511, %rd1510;
	shf.l.wrap.b32 	%r1058, %r1052, %r1053, 25;
	shf.l.wrap.b32 	%r1059, %r1053, %r1052, 25;
	mov.b64 	%rd1513, {%r1059, %r1058};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	xor.b64  	%rd1515, %rd1496, %rd1448;
	xor.b64  	%rd1516, %rd1496, %rd1472;
	and.b64  	%rd1517, %rd1516, %rd1515;
	xor.b64  	%rd1518, %rd1517, %rd1496;
	add.s64 	%rd1519, %rd1508, %rd1518;
	add.s64 	%rd1520, %rd1519, %rd1514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1060,%dummy}, %rd1509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1061}, %rd1509;
	}
	shf.r.wrap.b32 	%r1062, %r1061, %r1060, 14;
	shf.r.wrap.b32 	%r1063, %r1060, %r1061, 14;
	mov.b64 	%rd1521, {%r1063, %r1062};
	shf.r.wrap.b32 	%r1064, %r1061, %r1060, 18;
	shf.r.wrap.b32 	%r1065, %r1060, %r1061, 18;
	mov.b64 	%rd1522, {%r1065, %r1064};
	xor.b64  	%rd1523, %rd1522, %rd1521;
	shf.l.wrap.b32 	%r1066, %r1060, %r1061, 23;
	shf.l.wrap.b32 	%r1067, %r1061, %r1060, 23;
	mov.b64 	%rd1524, {%r1067, %r1066};
	xor.b64  	%rd1525, %rd1523, %rd1524;
	xor.b64  	%rd1526, %rd1485, %rd1461;
	and.b64  	%rd1527, %rd1509, %rd1526;
	xor.b64  	%rd1528, %rd1527, %rd1461;
	add.s64 	%rd1529, %rd1437, %rd1171;
	add.s64 	%rd1530, %rd1529, %rd2716;
	add.s64 	%rd1531, %rd1530, %rd1528;
	add.s64 	%rd1532, %rd1531, %rd1525;
	add.s64 	%rd1533, %rd1532, %rd1448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1068,%dummy}, %rd1520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1069}, %rd1520;
	}
	shf.r.wrap.b32 	%r1070, %r1069, %r1068, 28;
	shf.r.wrap.b32 	%r1071, %r1068, %r1069, 28;
	mov.b64 	%rd1534, {%r1071, %r1070};
	shf.l.wrap.b32 	%r1072, %r1068, %r1069, 30;
	shf.l.wrap.b32 	%r1073, %r1069, %r1068, 30;
	mov.b64 	%rd1535, {%r1073, %r1072};
	xor.b64  	%rd1536, %rd1535, %rd1534;
	shf.l.wrap.b32 	%r1074, %r1068, %r1069, 25;
	shf.l.wrap.b32 	%r1075, %r1069, %r1068, 25;
	mov.b64 	%rd1537, {%r1075, %r1074};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	xor.b64  	%rd1539, %rd1520, %rd1472;
	xor.b64  	%rd1540, %rd1520, %rd1496;
	and.b64  	%rd1541, %rd1540, %rd1539;
	xor.b64  	%rd1542, %rd1541, %rd1520;
	add.s64 	%rd1543, %rd1532, %rd1542;
	add.s64 	%rd1544, %rd1543, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1076,%dummy}, %rd1533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd1533;
	}
	shf.r.wrap.b32 	%r1078, %r1077, %r1076, 14;
	shf.r.wrap.b32 	%r1079, %r1076, %r1077, 14;
	mov.b64 	%rd1545, {%r1079, %r1078};
	shf.r.wrap.b32 	%r1080, %r1077, %r1076, 18;
	shf.r.wrap.b32 	%r1081, %r1076, %r1077, 18;
	mov.b64 	%rd1546, {%r1081, %r1080};
	xor.b64  	%rd1547, %rd1546, %rd1545;
	shf.l.wrap.b32 	%r1082, %r1076, %r1077, 23;
	shf.l.wrap.b32 	%r1083, %r1077, %r1076, 23;
	mov.b64 	%rd1548, {%r1083, %r1082};
	xor.b64  	%rd1549, %rd1547, %rd1548;
	xor.b64  	%rd1550, %rd1509, %rd1485;
	and.b64  	%rd1551, %rd1533, %rd1550;
	xor.b64  	%rd1552, %rd1551, %rd1485;
	add.s64 	%rd1553, %rd1461, %rd1184;
	add.s64 	%rd1554, %rd1553, %rd2717;
	add.s64 	%rd1555, %rd1554, %rd1552;
	add.s64 	%rd1556, %rd1555, %rd1549;
	add.s64 	%rd1557, %rd1556, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1084,%dummy}, %rd1544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1085}, %rd1544;
	}
	shf.r.wrap.b32 	%r1086, %r1085, %r1084, 28;
	shf.r.wrap.b32 	%r1087, %r1084, %r1085, 28;
	mov.b64 	%rd1558, {%r1087, %r1086};
	shf.l.wrap.b32 	%r1088, %r1084, %r1085, 30;
	shf.l.wrap.b32 	%r1089, %r1085, %r1084, 30;
	mov.b64 	%rd1559, {%r1089, %r1088};
	xor.b64  	%rd1560, %rd1559, %rd1558;
	shf.l.wrap.b32 	%r1090, %r1084, %r1085, 25;
	shf.l.wrap.b32 	%r1091, %r1085, %r1084, 25;
	mov.b64 	%rd1561, {%r1091, %r1090};
	xor.b64  	%rd1562, %rd1560, %rd1561;
	xor.b64  	%rd1563, %rd1544, %rd1496;
	xor.b64  	%rd1564, %rd1544, %rd1520;
	and.b64  	%rd1565, %rd1564, %rd1563;
	xor.b64  	%rd1566, %rd1565, %rd1544;
	add.s64 	%rd1567, %rd1556, %rd1566;
	add.s64 	%rd1568, %rd1567, %rd1562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1092,%dummy}, %rd1171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd1171;
	}
	shf.r.wrap.b32 	%r1094, %r1093, %r1092, 19;
	shf.r.wrap.b32 	%r1095, %r1092, %r1093, 19;
	mov.b64 	%rd1569, {%r1095, %r1094};
	shf.l.wrap.b32 	%r1096, %r1092, %r1093, 3;
	shf.l.wrap.b32 	%r1097, %r1093, %r1092, 3;
	mov.b64 	%rd1570, {%r1097, %r1096};
	shr.u64 	%rd1571, %rd1171, 6;
	xor.b64  	%rd1572, %rd1569, %rd1571;
	xor.b64  	%rd1573, %rd1572, %rd1570;
	shf.r.wrap.b32 	%r1098, %r711, %r710, 1;
	shf.r.wrap.b32 	%r1099, %r710, %r711, 1;
	mov.b64 	%rd1574, {%r1099, %r1098};
	shf.r.wrap.b32 	%r1100, %r711, %r710, 8;
	shf.r.wrap.b32 	%r1101, %r710, %r711, 8;
	mov.b64 	%rd1575, {%r1101, %r1100};
	shr.u64 	%rd1576, %rd1012, 7;
	xor.b64  	%rd1577, %rd1574, %rd1576;
	xor.b64  	%rd1578, %rd1577, %rd1575;
	add.s64 	%rd1579, %rd999, %rd1106;
	add.s64 	%rd1580, %rd1579, %rd1573;
	add.s64 	%rd1581, %rd1580, %rd1578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1102,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1103}, %rd1184;
	}
	shf.r.wrap.b32 	%r1104, %r1103, %r1102, 19;
	shf.r.wrap.b32 	%r1105, %r1102, %r1103, 19;
	mov.b64 	%rd1582, {%r1105, %r1104};
	shf.l.wrap.b32 	%r1106, %r1102, %r1103, 3;
	shf.l.wrap.b32 	%r1107, %r1103, %r1102, 3;
	mov.b64 	%rd1583, {%r1107, %r1106};
	shr.u64 	%rd1584, %rd1184, 6;
	xor.b64  	%rd1585, %rd1582, %rd1584;
	xor.b64  	%rd1586, %rd1585, %rd1583;
	shf.r.wrap.b32 	%r1108, %r721, %r720, 1;
	shf.r.wrap.b32 	%r1109, %r720, %r721, 1;
	mov.b64 	%rd1587, {%r1109, %r1108};
	shf.r.wrap.b32 	%r1110, %r721, %r720, 8;
	shf.r.wrap.b32 	%r1111, %r720, %r721, 8;
	mov.b64 	%rd1588, {%r1111, %r1110};
	shr.u64 	%rd1589, %rd1020, 7;
	xor.b64  	%rd1590, %rd1587, %rd1589;
	xor.b64  	%rd1591, %rd1590, %rd1588;
	add.s64 	%rd1592, %rd1012, %rd1119;
	add.s64 	%rd1593, %rd1592, %rd1586;
	add.s64 	%rd1594, %rd1593, %rd1591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1112,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1113}, %rd1581;
	}
	shf.r.wrap.b32 	%r1114, %r1113, %r1112, 19;
	shf.r.wrap.b32 	%r1115, %r1112, %r1113, 19;
	mov.b64 	%rd1595, {%r1115, %r1114};
	shf.l.wrap.b32 	%r1116, %r1112, %r1113, 3;
	shf.l.wrap.b32 	%r1117, %r1113, %r1112, 3;
	mov.b64 	%rd1596, {%r1117, %r1116};
	shr.u64 	%rd1597, %rd1581, 6;
	xor.b64  	%rd1598, %rd1595, %rd1597;
	xor.b64  	%rd1599, %rd1598, %rd1596;
	shf.r.wrap.b32 	%r1118, %r727, %r726, 1;
	shf.r.wrap.b32 	%r1119, %r726, %r727, 1;
	mov.b64 	%rd1600, {%r1119, %r1118};
	shf.r.wrap.b32 	%r1120, %r727, %r726, 8;
	shf.r.wrap.b32 	%r1121, %r726, %r727, 8;
	mov.b64 	%rd1601, {%r1121, %r1120};
	shr.u64 	%rd1602, %rd1033, 7;
	xor.b64  	%rd1603, %rd1600, %rd1602;
	xor.b64  	%rd1604, %rd1603, %rd1601;
	add.s64 	%rd1605, %rd1020, %rd1132;
	add.s64 	%rd1606, %rd1605, %rd1599;
	add.s64 	%rd1607, %rd1606, %rd1604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1122,%dummy}, %rd1594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1123}, %rd1594;
	}
	shf.r.wrap.b32 	%r1124, %r1123, %r1122, 19;
	shf.r.wrap.b32 	%r1125, %r1122, %r1123, 19;
	mov.b64 	%rd1608, {%r1125, %r1124};
	shf.l.wrap.b32 	%r1126, %r1122, %r1123, 3;
	shf.l.wrap.b32 	%r1127, %r1123, %r1122, 3;
	mov.b64 	%rd1609, {%r1127, %r1126};
	shr.u64 	%rd1610, %rd1594, 6;
	xor.b64  	%rd1611, %rd1608, %rd1610;
	xor.b64  	%rd1612, %rd1611, %rd1609;
	shf.r.wrap.b32 	%r1128, %r737, %r736, 1;
	shf.r.wrap.b32 	%r1129, %r736, %r737, 1;
	mov.b64 	%rd1613, {%r1129, %r1128};
	shf.r.wrap.b32 	%r1130, %r737, %r736, 8;
	shf.r.wrap.b32 	%r1131, %r736, %r737, 8;
	mov.b64 	%rd1614, {%r1131, %r1130};
	shr.u64 	%rd1615, %rd1041, 7;
	xor.b64  	%rd1616, %rd1613, %rd1615;
	xor.b64  	%rd1617, %rd1616, %rd1614;
	add.s64 	%rd1618, %rd1033, %rd1145;
	add.s64 	%rd1619, %rd1618, %rd1612;
	add.s64 	%rd1620, %rd1619, %rd1617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1132,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1133}, %rd1607;
	}
	shf.r.wrap.b32 	%r1134, %r1133, %r1132, 19;
	shf.r.wrap.b32 	%r1135, %r1132, %r1133, 19;
	mov.b64 	%rd1621, {%r1135, %r1134};
	shf.l.wrap.b32 	%r1136, %r1132, %r1133, 3;
	shf.l.wrap.b32 	%r1137, %r1133, %r1132, 3;
	mov.b64 	%rd1622, {%r1137, %r1136};
	shr.u64 	%rd1623, %rd1607, 6;
	xor.b64  	%rd1624, %rd1621, %rd1623;
	xor.b64  	%rd1625, %rd1624, %rd1622;
	shf.r.wrap.b32 	%r1138, %r747, %r746, 1;
	shf.r.wrap.b32 	%r1139, %r746, %r747, 1;
	mov.b64 	%rd1626, {%r1139, %r1138};
	shf.r.wrap.b32 	%r1140, %r747, %r746, 8;
	shf.r.wrap.b32 	%r1141, %r746, %r747, 8;
	mov.b64 	%rd1627, {%r1141, %r1140};
	shr.u64 	%rd1628, %rd1054, 7;
	xor.b64  	%rd1629, %rd1626, %rd1628;
	xor.b64  	%rd1630, %rd1629, %rd1627;
	add.s64 	%rd1631, %rd1041, %rd1158;
	add.s64 	%rd1632, %rd1631, %rd1625;
	add.s64 	%rd1633, %rd1632, %rd1630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1142,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1143}, %rd1620;
	}
	shf.r.wrap.b32 	%r1144, %r1143, %r1142, 19;
	shf.r.wrap.b32 	%r1145, %r1142, %r1143, 19;
	mov.b64 	%rd1634, {%r1145, %r1144};
	shf.l.wrap.b32 	%r1146, %r1142, %r1143, 3;
	shf.l.wrap.b32 	%r1147, %r1143, %r1142, 3;
	mov.b64 	%rd1635, {%r1147, %r1146};
	shr.u64 	%rd1636, %rd1620, 6;
	xor.b64  	%rd1637, %rd1634, %rd1636;
	xor.b64  	%rd1638, %rd1637, %rd1635;
	shf.r.wrap.b32 	%r1148, %r757, %r756, 1;
	shf.r.wrap.b32 	%r1149, %r756, %r757, 1;
	mov.b64 	%rd1639, {%r1149, %r1148};
	shf.r.wrap.b32 	%r1150, %r757, %r756, 8;
	shf.r.wrap.b32 	%r1151, %r756, %r757, 8;
	mov.b64 	%rd1640, {%r1151, %r1150};
	shr.u64 	%rd1641, %rd1067, 7;
	xor.b64  	%rd1642, %rd1639, %rd1641;
	xor.b64  	%rd1643, %rd1642, %rd1640;
	add.s64 	%rd1644, %rd1054, %rd1171;
	add.s64 	%rd1645, %rd1644, %rd1638;
	add.s64 	%rd1646, %rd1645, %rd1643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1152,%dummy}, %rd1633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1153}, %rd1633;
	}
	shf.r.wrap.b32 	%r1154, %r1153, %r1152, 19;
	shf.r.wrap.b32 	%r1155, %r1152, %r1153, 19;
	mov.b64 	%rd1647, {%r1155, %r1154};
	shf.l.wrap.b32 	%r1156, %r1152, %r1153, 3;
	shf.l.wrap.b32 	%r1157, %r1153, %r1152, 3;
	mov.b64 	%rd1648, {%r1157, %r1156};
	shr.u64 	%rd1649, %rd1633, 6;
	xor.b64  	%rd1650, %rd1647, %rd1649;
	xor.b64  	%rd1651, %rd1650, %rd1648;
	shf.r.wrap.b32 	%r1158, %r767, %r766, 1;
	shf.r.wrap.b32 	%r1159, %r766, %r767, 1;
	mov.b64 	%rd1652, {%r1159, %r1158};
	shf.r.wrap.b32 	%r1160, %r767, %r766, 8;
	shf.r.wrap.b32 	%r1161, %r766, %r767, 8;
	mov.b64 	%rd1653, {%r1161, %r1160};
	shr.u64 	%rd1654, %rd1080, 7;
	xor.b64  	%rd1655, %rd1652, %rd1654;
	xor.b64  	%rd1656, %rd1655, %rd1653;
	add.s64 	%rd1657, %rd1067, %rd1184;
	add.s64 	%rd1658, %rd1657, %rd1651;
	add.s64 	%rd1659, %rd1658, %rd1656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd1646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1163}, %rd1646;
	}
	shf.r.wrap.b32 	%r1164, %r1163, %r1162, 19;
	shf.r.wrap.b32 	%r1165, %r1162, %r1163, 19;
	mov.b64 	%rd1660, {%r1165, %r1164};
	shf.l.wrap.b32 	%r1166, %r1162, %r1163, 3;
	shf.l.wrap.b32 	%r1167, %r1163, %r1162, 3;
	mov.b64 	%rd1661, {%r1167, %r1166};
	shr.u64 	%rd1662, %rd1646, 6;
	xor.b64  	%rd1663, %rd1660, %rd1662;
	xor.b64  	%rd1664, %rd1663, %rd1661;
	shf.r.wrap.b32 	%r1168, %r777, %r776, 1;
	shf.r.wrap.b32 	%r1169, %r776, %r777, 1;
	mov.b64 	%rd1665, {%r1169, %r1168};
	shf.r.wrap.b32 	%r1170, %r777, %r776, 8;
	shf.r.wrap.b32 	%r1171, %r776, %r777, 8;
	mov.b64 	%rd1666, {%r1171, %r1170};
	shr.u64 	%rd1667, %rd1093, 7;
	xor.b64  	%rd1668, %rd1665, %rd1667;
	xor.b64  	%rd1669, %rd1668, %rd1666;
	add.s64 	%rd1670, %rd1581, %rd1080;
	add.s64 	%rd1671, %rd1670, %rd1664;
	add.s64 	%rd1672, %rd1671, %rd1669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1172,%dummy}, %rd1659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1173}, %rd1659;
	}
	shf.r.wrap.b32 	%r1174, %r1173, %r1172, 19;
	shf.r.wrap.b32 	%r1175, %r1172, %r1173, 19;
	mov.b64 	%rd1673, {%r1175, %r1174};
	shf.l.wrap.b32 	%r1176, %r1172, %r1173, 3;
	shf.l.wrap.b32 	%r1177, %r1173, %r1172, 3;
	mov.b64 	%rd1674, {%r1177, %r1176};
	shr.u64 	%rd1675, %rd1659, 6;
	xor.b64  	%rd1676, %rd1673, %rd1675;
	xor.b64  	%rd1677, %rd1676, %rd1674;
	shf.r.wrap.b32 	%r1178, %r787, %r786, 1;
	shf.r.wrap.b32 	%r1179, %r786, %r787, 1;
	mov.b64 	%rd1678, {%r1179, %r1178};
	shf.r.wrap.b32 	%r1180, %r787, %r786, 8;
	shf.r.wrap.b32 	%r1181, %r786, %r787, 8;
	mov.b64 	%rd1679, {%r1181, %r1180};
	shr.u64 	%rd1680, %rd1106, 7;
	xor.b64  	%rd1681, %rd1678, %rd1680;
	xor.b64  	%rd1682, %rd1681, %rd1679;
	add.s64 	%rd1683, %rd1594, %rd1093;
	add.s64 	%rd1684, %rd1683, %rd1677;
	add.s64 	%rd1685, %rd1684, %rd1682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1182,%dummy}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1183}, %rd1672;
	}
	shf.r.wrap.b32 	%r1184, %r1183, %r1182, 19;
	shf.r.wrap.b32 	%r1185, %r1182, %r1183, 19;
	mov.b64 	%rd1686, {%r1185, %r1184};
	shf.l.wrap.b32 	%r1186, %r1182, %r1183, 3;
	shf.l.wrap.b32 	%r1187, %r1183, %r1182, 3;
	mov.b64 	%rd1687, {%r1187, %r1186};
	shr.u64 	%rd1688, %rd1672, 6;
	xor.b64  	%rd1689, %rd1686, %rd1688;
	xor.b64  	%rd1690, %rd1689, %rd1687;
	shf.r.wrap.b32 	%r1188, %r797, %r796, 1;
	shf.r.wrap.b32 	%r1189, %r796, %r797, 1;
	mov.b64 	%rd1691, {%r1189, %r1188};
	shf.r.wrap.b32 	%r1190, %r797, %r796, 8;
	shf.r.wrap.b32 	%r1191, %r796, %r797, 8;
	mov.b64 	%rd1692, {%r1191, %r1190};
	shr.u64 	%rd1693, %rd1119, 7;
	xor.b64  	%rd1694, %rd1691, %rd1693;
	xor.b64  	%rd1695, %rd1694, %rd1692;
	add.s64 	%rd1696, %rd1607, %rd1106;
	add.s64 	%rd1697, %rd1696, %rd1690;
	add.s64 	%rd1698, %rd1697, %rd1695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1192,%dummy}, %rd1685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1193}, %rd1685;
	}
	shf.r.wrap.b32 	%r1194, %r1193, %r1192, 19;
	shf.r.wrap.b32 	%r1195, %r1192, %r1193, 19;
	mov.b64 	%rd1699, {%r1195, %r1194};
	shf.l.wrap.b32 	%r1196, %r1192, %r1193, 3;
	shf.l.wrap.b32 	%r1197, %r1193, %r1192, 3;
	mov.b64 	%rd1700, {%r1197, %r1196};
	shr.u64 	%rd1701, %rd1685, 6;
	xor.b64  	%rd1702, %rd1699, %rd1701;
	xor.b64  	%rd1703, %rd1702, %rd1700;
	shf.r.wrap.b32 	%r1198, %r807, %r806, 1;
	shf.r.wrap.b32 	%r1199, %r806, %r807, 1;
	mov.b64 	%rd1704, {%r1199, %r1198};
	shf.r.wrap.b32 	%r1200, %r807, %r806, 8;
	shf.r.wrap.b32 	%r1201, %r806, %r807, 8;
	mov.b64 	%rd1705, {%r1201, %r1200};
	shr.u64 	%rd1706, %rd1132, 7;
	xor.b64  	%rd1707, %rd1704, %rd1706;
	xor.b64  	%rd1708, %rd1707, %rd1705;
	add.s64 	%rd1709, %rd1620, %rd1119;
	add.s64 	%rd1710, %rd1709, %rd1703;
	add.s64 	%rd1711, %rd1710, %rd1708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1202,%dummy}, %rd1698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1203}, %rd1698;
	}
	shf.r.wrap.b32 	%r1204, %r1203, %r1202, 19;
	shf.r.wrap.b32 	%r1205, %r1202, %r1203, 19;
	mov.b64 	%rd1712, {%r1205, %r1204};
	shf.l.wrap.b32 	%r1206, %r1202, %r1203, 3;
	shf.l.wrap.b32 	%r1207, %r1203, %r1202, 3;
	mov.b64 	%rd1713, {%r1207, %r1206};
	shr.u64 	%rd1714, %rd1698, 6;
	xor.b64  	%rd1715, %rd1712, %rd1714;
	xor.b64  	%rd1716, %rd1715, %rd1713;
	shf.r.wrap.b32 	%r1208, %r817, %r816, 1;
	shf.r.wrap.b32 	%r1209, %r816, %r817, 1;
	mov.b64 	%rd1717, {%r1209, %r1208};
	shf.r.wrap.b32 	%r1210, %r817, %r816, 8;
	shf.r.wrap.b32 	%r1211, %r816, %r817, 8;
	mov.b64 	%rd1718, {%r1211, %r1210};
	shr.u64 	%rd1719, %rd1145, 7;
	xor.b64  	%rd1720, %rd1717, %rd1719;
	xor.b64  	%rd1721, %rd1720, %rd1718;
	add.s64 	%rd1722, %rd1633, %rd1132;
	add.s64 	%rd1723, %rd1722, %rd1716;
	add.s64 	%rd1724, %rd1723, %rd1721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1212,%dummy}, %rd1711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1213}, %rd1711;
	}
	shf.r.wrap.b32 	%r1214, %r1213, %r1212, 19;
	shf.r.wrap.b32 	%r1215, %r1212, %r1213, 19;
	mov.b64 	%rd1725, {%r1215, %r1214};
	shf.l.wrap.b32 	%r1216, %r1212, %r1213, 3;
	shf.l.wrap.b32 	%r1217, %r1213, %r1212, 3;
	mov.b64 	%rd1726, {%r1217, %r1216};
	shr.u64 	%rd1727, %rd1711, 6;
	xor.b64  	%rd1728, %rd1725, %rd1727;
	xor.b64  	%rd1729, %rd1728, %rd1726;
	shf.r.wrap.b32 	%r1218, %r827, %r826, 1;
	shf.r.wrap.b32 	%r1219, %r826, %r827, 1;
	mov.b64 	%rd1730, {%r1219, %r1218};
	shf.r.wrap.b32 	%r1220, %r827, %r826, 8;
	shf.r.wrap.b32 	%r1221, %r826, %r827, 8;
	mov.b64 	%rd1731, {%r1221, %r1220};
	shr.u64 	%rd1732, %rd1158, 7;
	xor.b64  	%rd1733, %rd1730, %rd1732;
	xor.b64  	%rd1734, %rd1733, %rd1731;
	add.s64 	%rd1735, %rd1646, %rd1145;
	add.s64 	%rd1736, %rd1735, %rd1729;
	add.s64 	%rd1737, %rd1736, %rd1734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1222,%dummy}, %rd1724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1223}, %rd1724;
	}
	shf.r.wrap.b32 	%r1224, %r1223, %r1222, 19;
	shf.r.wrap.b32 	%r1225, %r1222, %r1223, 19;
	mov.b64 	%rd1738, {%r1225, %r1224};
	shf.l.wrap.b32 	%r1226, %r1222, %r1223, 3;
	shf.l.wrap.b32 	%r1227, %r1223, %r1222, 3;
	mov.b64 	%rd1739, {%r1227, %r1226};
	shr.u64 	%rd1740, %rd1724, 6;
	xor.b64  	%rd1741, %rd1738, %rd1740;
	xor.b64  	%rd1742, %rd1741, %rd1739;
	shf.r.wrap.b32 	%r1228, %r1093, %r1092, 1;
	shf.r.wrap.b32 	%r1229, %r1092, %r1093, 1;
	mov.b64 	%rd1743, {%r1229, %r1228};
	shf.r.wrap.b32 	%r1230, %r1093, %r1092, 8;
	shf.r.wrap.b32 	%r1231, %r1092, %r1093, 8;
	mov.b64 	%rd1744, {%r1231, %r1230};
	shr.u64 	%rd1745, %rd1171, 7;
	xor.b64  	%rd1746, %rd1743, %rd1745;
	xor.b64  	%rd1747, %rd1746, %rd1744;
	add.s64 	%rd1748, %rd1659, %rd1158;
	add.s64 	%rd1749, %rd1748, %rd1742;
	add.s64 	%rd1750, %rd1749, %rd1747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1232,%dummy}, %rd1737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1233}, %rd1737;
	}
	shf.r.wrap.b32 	%r1234, %r1233, %r1232, 19;
	shf.r.wrap.b32 	%r1235, %r1232, %r1233, 19;
	mov.b64 	%rd1751, {%r1235, %r1234};
	shf.l.wrap.b32 	%r1236, %r1232, %r1233, 3;
	shf.l.wrap.b32 	%r1237, %r1233, %r1232, 3;
	mov.b64 	%rd1752, {%r1237, %r1236};
	shr.u64 	%rd1753, %rd1737, 6;
	xor.b64  	%rd1754, %rd1751, %rd1753;
	xor.b64  	%rd1755, %rd1754, %rd1752;
	shf.r.wrap.b32 	%r1238, %r1103, %r1102, 1;
	shf.r.wrap.b32 	%r1239, %r1102, %r1103, 1;
	mov.b64 	%rd1756, {%r1239, %r1238};
	shf.r.wrap.b32 	%r1240, %r1103, %r1102, 8;
	shf.r.wrap.b32 	%r1241, %r1102, %r1103, 8;
	mov.b64 	%rd1757, {%r1241, %r1240};
	shr.u64 	%rd1758, %rd1184, 7;
	xor.b64  	%rd1759, %rd1756, %rd1758;
	xor.b64  	%rd1760, %rd1759, %rd1757;
	add.s64 	%rd1761, %rd1672, %rd1171;
	add.s64 	%rd1762, %rd1761, %rd1755;
	add.s64 	%rd1763, %rd1762, %rd1760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1242,%dummy}, %rd1750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1243}, %rd1750;
	}
	shf.r.wrap.b32 	%r1244, %r1243, %r1242, 19;
	shf.r.wrap.b32 	%r1245, %r1242, %r1243, 19;
	mov.b64 	%rd1764, {%r1245, %r1244};
	shf.l.wrap.b32 	%r1246, %r1242, %r1243, 3;
	shf.l.wrap.b32 	%r1247, %r1243, %r1242, 3;
	mov.b64 	%rd1765, {%r1247, %r1246};
	shr.u64 	%rd1766, %rd1750, 6;
	xor.b64  	%rd1767, %rd1764, %rd1766;
	xor.b64  	%rd1768, %rd1767, %rd1765;
	shf.r.wrap.b32 	%r1248, %r1113, %r1112, 1;
	shf.r.wrap.b32 	%r1249, %r1112, %r1113, 1;
	mov.b64 	%rd1769, {%r1249, %r1248};
	shf.r.wrap.b32 	%r1250, %r1113, %r1112, 8;
	shf.r.wrap.b32 	%r1251, %r1112, %r1113, 8;
	mov.b64 	%rd1770, {%r1251, %r1250};
	shr.u64 	%rd1771, %rd1581, 7;
	xor.b64  	%rd1772, %rd1769, %rd1771;
	xor.b64  	%rd1773, %rd1772, %rd1770;
	add.s64 	%rd1774, %rd1685, %rd1184;
	add.s64 	%rd1775, %rd1774, %rd1768;
	add.s64 	%rd1776, %rd1775, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1252,%dummy}, %rd1557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1253}, %rd1557;
	}
	shf.r.wrap.b32 	%r1254, %r1253, %r1252, 14;
	shf.r.wrap.b32 	%r1255, %r1252, %r1253, 14;
	mov.b64 	%rd1777, {%r1255, %r1254};
	shf.r.wrap.b32 	%r1256, %r1253, %r1252, 18;
	shf.r.wrap.b32 	%r1257, %r1252, %r1253, 18;
	mov.b64 	%rd1778, {%r1257, %r1256};
	xor.b64  	%rd1779, %rd1778, %rd1777;
	shf.l.wrap.b32 	%r1258, %r1252, %r1253, 23;
	shf.l.wrap.b32 	%r1259, %r1253, %r1252, 23;
	mov.b64 	%rd1780, {%r1259, %r1258};
	xor.b64  	%rd1781, %rd1779, %rd1780;
	xor.b64  	%rd1782, %rd1509, %rd1533;
	and.b64  	%rd1783, %rd1782, %rd1557;
	xor.b64  	%rd1784, %rd1783, %rd1509;
	add.s64 	%rd1785, %rd1784, %rd1485;
	add.s64 	%rd1786, %rd1785, %rd1581;
	add.s64 	%rd1787, %rd1786, %rd2718;
	add.s64 	%rd1788, %rd1787, %rd1781;
	add.s64 	%rd1789, %rd1788, %rd1496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1260,%dummy}, %rd1568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1261}, %rd1568;
	}
	shf.r.wrap.b32 	%r1262, %r1261, %r1260, 28;
	shf.r.wrap.b32 	%r1263, %r1260, %r1261, 28;
	mov.b64 	%rd1790, {%r1263, %r1262};
	shf.l.wrap.b32 	%r1264, %r1260, %r1261, 30;
	shf.l.wrap.b32 	%r1265, %r1261, %r1260, 30;
	mov.b64 	%rd1791, {%r1265, %r1264};
	xor.b64  	%rd1792, %rd1791, %rd1790;
	shf.l.wrap.b32 	%r1266, %r1260, %r1261, 25;
	shf.l.wrap.b32 	%r1267, %r1261, %r1260, 25;
	mov.b64 	%rd1793, {%r1267, %r1266};
	xor.b64  	%rd1794, %rd1792, %rd1793;
	xor.b64  	%rd1795, %rd1568, %rd1520;
	xor.b64  	%rd1796, %rd1568, %rd1544;
	and.b64  	%rd1797, %rd1796, %rd1795;
	xor.b64  	%rd1798, %rd1797, %rd1568;
	add.s64 	%rd1799, %rd1788, %rd1798;
	add.s64 	%rd1800, %rd1799, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1268,%dummy}, %rd1789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1269}, %rd1789;
	}
	shf.r.wrap.b32 	%r1270, %r1269, %r1268, 14;
	shf.r.wrap.b32 	%r1271, %r1268, %r1269, 14;
	mov.b64 	%rd1801, {%r1271, %r1270};
	shf.r.wrap.b32 	%r1272, %r1269, %r1268, 18;
	shf.r.wrap.b32 	%r1273, %r1268, %r1269, 18;
	mov.b64 	%rd1802, {%r1273, %r1272};
	xor.b64  	%rd1803, %rd1802, %rd1801;
	shf.l.wrap.b32 	%r1274, %r1268, %r1269, 23;
	shf.l.wrap.b32 	%r1275, %r1269, %r1268, 23;
	mov.b64 	%rd1804, {%r1275, %r1274};
	xor.b64  	%rd1805, %rd1803, %rd1804;
	xor.b64  	%rd1806, %rd1533, %rd1557;
	and.b64  	%rd1807, %rd1789, %rd1806;
	xor.b64  	%rd1808, %rd1807, %rd1533;
	add.s64 	%rd1809, %rd1594, %rd1509;
	add.s64 	%rd1810, %rd1809, %rd2719;
	add.s64 	%rd1811, %rd1810, %rd1808;
	add.s64 	%rd1812, %rd1811, %rd1805;
	add.s64 	%rd1813, %rd1812, %rd1520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1276,%dummy}, %rd1800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1277}, %rd1800;
	}
	shf.r.wrap.b32 	%r1278, %r1277, %r1276, 28;
	shf.r.wrap.b32 	%r1279, %r1276, %r1277, 28;
	mov.b64 	%rd1814, {%r1279, %r1278};
	shf.l.wrap.b32 	%r1280, %r1276, %r1277, 30;
	shf.l.wrap.b32 	%r1281, %r1277, %r1276, 30;
	mov.b64 	%rd1815, {%r1281, %r1280};
	xor.b64  	%rd1816, %rd1815, %rd1814;
	shf.l.wrap.b32 	%r1282, %r1276, %r1277, 25;
	shf.l.wrap.b32 	%r1283, %r1277, %r1276, 25;
	mov.b64 	%rd1817, {%r1283, %r1282};
	xor.b64  	%rd1818, %rd1816, %rd1817;
	xor.b64  	%rd1819, %rd1800, %rd1544;
	xor.b64  	%rd1820, %rd1800, %rd1568;
	and.b64  	%rd1821, %rd1820, %rd1819;
	xor.b64  	%rd1822, %rd1821, %rd1800;
	add.s64 	%rd1823, %rd1812, %rd1822;
	add.s64 	%rd1824, %rd1823, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1284,%dummy}, %rd1813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1285}, %rd1813;
	}
	shf.r.wrap.b32 	%r1286, %r1285, %r1284, 14;
	shf.r.wrap.b32 	%r1287, %r1284, %r1285, 14;
	mov.b64 	%rd1825, {%r1287, %r1286};
	shf.r.wrap.b32 	%r1288, %r1285, %r1284, 18;
	shf.r.wrap.b32 	%r1289, %r1284, %r1285, 18;
	mov.b64 	%rd1826, {%r1289, %r1288};
	xor.b64  	%rd1827, %rd1826, %rd1825;
	shf.l.wrap.b32 	%r1290, %r1284, %r1285, 23;
	shf.l.wrap.b32 	%r1291, %r1285, %r1284, 23;
	mov.b64 	%rd1828, {%r1291, %r1290};
	xor.b64  	%rd1829, %rd1827, %rd1828;
	xor.b64  	%rd1830, %rd1789, %rd1557;
	and.b64  	%rd1831, %rd1813, %rd1830;
	xor.b64  	%rd1832, %rd1831, %rd1557;
	add.s64 	%rd1833, %rd1607, %rd1533;
	add.s64 	%rd1834, %rd1833, %rd2720;
	add.s64 	%rd1835, %rd1834, %rd1832;
	add.s64 	%rd1836, %rd1835, %rd1829;
	add.s64 	%rd1837, %rd1836, %rd1544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd1824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1824;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 28;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 28;
	mov.b64 	%rd1838, {%r1295, %r1294};
	shf.l.wrap.b32 	%r1296, %r1292, %r1293, 30;
	shf.l.wrap.b32 	%r1297, %r1293, %r1292, 30;
	mov.b64 	%rd1839, {%r1297, %r1296};
	xor.b64  	%rd1840, %rd1839, %rd1838;
	shf.l.wrap.b32 	%r1298, %r1292, %r1293, 25;
	shf.l.wrap.b32 	%r1299, %r1293, %r1292, 25;
	mov.b64 	%rd1841, {%r1299, %r1298};
	xor.b64  	%rd1842, %rd1840, %rd1841;
	xor.b64  	%rd1843, %rd1824, %rd1568;
	xor.b64  	%rd1844, %rd1824, %rd1800;
	and.b64  	%rd1845, %rd1844, %rd1843;
	xor.b64  	%rd1846, %rd1845, %rd1824;
	add.s64 	%rd1847, %rd1836, %rd1846;
	add.s64 	%rd1848, %rd1847, %rd1842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd1837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd1837;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 14;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 14;
	mov.b64 	%rd1849, {%r1303, %r1302};
	shf.r.wrap.b32 	%r1304, %r1301, %r1300, 18;
	shf.r.wrap.b32 	%r1305, %r1300, %r1301, 18;
	mov.b64 	%rd1850, {%r1305, %r1304};
	xor.b64  	%rd1851, %rd1850, %rd1849;
	shf.l.wrap.b32 	%r1306, %r1300, %r1301, 23;
	shf.l.wrap.b32 	%r1307, %r1301, %r1300, 23;
	mov.b64 	%rd1852, {%r1307, %r1306};
	xor.b64  	%rd1853, %rd1851, %rd1852;
	xor.b64  	%rd1854, %rd1813, %rd1789;
	and.b64  	%rd1855, %rd1837, %rd1854;
	xor.b64  	%rd1856, %rd1855, %rd1789;
	add.s64 	%rd1857, %rd1620, %rd1557;
	add.s64 	%rd1858, %rd1857, %rd2721;
	add.s64 	%rd1859, %rd1858, %rd1856;
	add.s64 	%rd1860, %rd1859, %rd1853;
	add.s64 	%rd1861, %rd1860, %rd1568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1308,%dummy}, %rd1848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd1848;
	}
	shf.r.wrap.b32 	%r1310, %r1309, %r1308, 28;
	shf.r.wrap.b32 	%r1311, %r1308, %r1309, 28;
	mov.b64 	%rd1862, {%r1311, %r1310};
	shf.l.wrap.b32 	%r1312, %r1308, %r1309, 30;
	shf.l.wrap.b32 	%r1313, %r1309, %r1308, 30;
	mov.b64 	%rd1863, {%r1313, %r1312};
	xor.b64  	%rd1864, %rd1863, %rd1862;
	shf.l.wrap.b32 	%r1314, %r1308, %r1309, 25;
	shf.l.wrap.b32 	%r1315, %r1309, %r1308, 25;
	mov.b64 	%rd1865, {%r1315, %r1314};
	xor.b64  	%rd1866, %rd1864, %rd1865;
	xor.b64  	%rd1867, %rd1848, %rd1800;
	xor.b64  	%rd1868, %rd1848, %rd1824;
	and.b64  	%rd1869, %rd1868, %rd1867;
	xor.b64  	%rd1870, %rd1869, %rd1848;
	add.s64 	%rd1871, %rd1860, %rd1870;
	add.s64 	%rd1872, %rd1871, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1316,%dummy}, %rd1861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1317}, %rd1861;
	}
	shf.r.wrap.b32 	%r1318, %r1317, %r1316, 14;
	shf.r.wrap.b32 	%r1319, %r1316, %r1317, 14;
	mov.b64 	%rd1873, {%r1319, %r1318};
	shf.r.wrap.b32 	%r1320, %r1317, %r1316, 18;
	shf.r.wrap.b32 	%r1321, %r1316, %r1317, 18;
	mov.b64 	%rd1874, {%r1321, %r1320};
	xor.b64  	%rd1875, %rd1874, %rd1873;
	shf.l.wrap.b32 	%r1322, %r1316, %r1317, 23;
	shf.l.wrap.b32 	%r1323, %r1317, %r1316, 23;
	mov.b64 	%rd1876, {%r1323, %r1322};
	xor.b64  	%rd1877, %rd1875, %rd1876;
	xor.b64  	%rd1878, %rd1837, %rd1813;
	and.b64  	%rd1879, %rd1861, %rd1878;
	xor.b64  	%rd1880, %rd1879, %rd1813;
	add.s64 	%rd1881, %rd1789, %rd1633;
	add.s64 	%rd1882, %rd1881, %rd2722;
	add.s64 	%rd1883, %rd1882, %rd1880;
	add.s64 	%rd1884, %rd1883, %rd1877;
	add.s64 	%rd1885, %rd1884, %rd1800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1324,%dummy}, %rd1872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1325}, %rd1872;
	}
	shf.r.wrap.b32 	%r1326, %r1325, %r1324, 28;
	shf.r.wrap.b32 	%r1327, %r1324, %r1325, 28;
	mov.b64 	%rd1886, {%r1327, %r1326};
	shf.l.wrap.b32 	%r1328, %r1324, %r1325, 30;
	shf.l.wrap.b32 	%r1329, %r1325, %r1324, 30;
	mov.b64 	%rd1887, {%r1329, %r1328};
	xor.b64  	%rd1888, %rd1887, %rd1886;
	shf.l.wrap.b32 	%r1330, %r1324, %r1325, 25;
	shf.l.wrap.b32 	%r1331, %r1325, %r1324, 25;
	mov.b64 	%rd1889, {%r1331, %r1330};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	xor.b64  	%rd1891, %rd1872, %rd1824;
	xor.b64  	%rd1892, %rd1872, %rd1848;
	and.b64  	%rd1893, %rd1892, %rd1891;
	xor.b64  	%rd1894, %rd1893, %rd1872;
	add.s64 	%rd1895, %rd1884, %rd1894;
	add.s64 	%rd1896, %rd1895, %rd1890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1332,%dummy}, %rd1885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1333}, %rd1885;
	}
	shf.r.wrap.b32 	%r1334, %r1333, %r1332, 14;
	shf.r.wrap.b32 	%r1335, %r1332, %r1333, 14;
	mov.b64 	%rd1897, {%r1335, %r1334};
	shf.r.wrap.b32 	%r1336, %r1333, %r1332, 18;
	shf.r.wrap.b32 	%r1337, %r1332, %r1333, 18;
	mov.b64 	%rd1898, {%r1337, %r1336};
	xor.b64  	%rd1899, %rd1898, %rd1897;
	shf.l.wrap.b32 	%r1338, %r1332, %r1333, 23;
	shf.l.wrap.b32 	%r1339, %r1333, %r1332, 23;
	mov.b64 	%rd1900, {%r1339, %r1338};
	xor.b64  	%rd1901, %rd1899, %rd1900;
	xor.b64  	%rd1902, %rd1861, %rd1837;
	and.b64  	%rd1903, %rd1885, %rd1902;
	xor.b64  	%rd1904, %rd1903, %rd1837;
	add.s64 	%rd1905, %rd1813, %rd1646;
	add.s64 	%rd1906, %rd1905, %rd2723;
	add.s64 	%rd1907, %rd1906, %rd1904;
	add.s64 	%rd1908, %rd1907, %rd1901;
	add.s64 	%rd1909, %rd1908, %rd1824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1340,%dummy}, %rd1896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1341}, %rd1896;
	}
	shf.r.wrap.b32 	%r1342, %r1341, %r1340, 28;
	shf.r.wrap.b32 	%r1343, %r1340, %r1341, 28;
	mov.b64 	%rd1910, {%r1343, %r1342};
	shf.l.wrap.b32 	%r1344, %r1340, %r1341, 30;
	shf.l.wrap.b32 	%r1345, %r1341, %r1340, 30;
	mov.b64 	%rd1911, {%r1345, %r1344};
	xor.b64  	%rd1912, %rd1911, %rd1910;
	shf.l.wrap.b32 	%r1346, %r1340, %r1341, 25;
	shf.l.wrap.b32 	%r1347, %r1341, %r1340, 25;
	mov.b64 	%rd1913, {%r1347, %r1346};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	xor.b64  	%rd1915, %rd1896, %rd1848;
	xor.b64  	%rd1916, %rd1896, %rd1872;
	and.b64  	%rd1917, %rd1916, %rd1915;
	xor.b64  	%rd1918, %rd1917, %rd1896;
	add.s64 	%rd1919, %rd1908, %rd1918;
	add.s64 	%rd1920, %rd1919, %rd1914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1348,%dummy}, %rd1909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1349}, %rd1909;
	}
	shf.r.wrap.b32 	%r1350, %r1349, %r1348, 14;
	shf.r.wrap.b32 	%r1351, %r1348, %r1349, 14;
	mov.b64 	%rd1921, {%r1351, %r1350};
	shf.r.wrap.b32 	%r1352, %r1349, %r1348, 18;
	shf.r.wrap.b32 	%r1353, %r1348, %r1349, 18;
	mov.b64 	%rd1922, {%r1353, %r1352};
	xor.b64  	%rd1923, %rd1922, %rd1921;
	shf.l.wrap.b32 	%r1354, %r1348, %r1349, 23;
	shf.l.wrap.b32 	%r1355, %r1349, %r1348, 23;
	mov.b64 	%rd1924, {%r1355, %r1354};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	xor.b64  	%rd1926, %rd1885, %rd1861;
	and.b64  	%rd1927, %rd1909, %rd1926;
	xor.b64  	%rd1928, %rd1927, %rd1861;
	add.s64 	%rd1929, %rd1837, %rd1659;
	add.s64 	%rd1930, %rd1929, %rd2724;
	add.s64 	%rd1931, %rd1930, %rd1928;
	add.s64 	%rd1932, %rd1931, %rd1925;
	add.s64 	%rd1933, %rd1932, %rd1848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1356,%dummy}, %rd1920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1357}, %rd1920;
	}
	shf.r.wrap.b32 	%r1358, %r1357, %r1356, 28;
	shf.r.wrap.b32 	%r1359, %r1356, %r1357, 28;
	mov.b64 	%rd1934, {%r1359, %r1358};
	shf.l.wrap.b32 	%r1360, %r1356, %r1357, 30;
	shf.l.wrap.b32 	%r1361, %r1357, %r1356, 30;
	mov.b64 	%rd1935, {%r1361, %r1360};
	xor.b64  	%rd1936, %rd1935, %rd1934;
	shf.l.wrap.b32 	%r1362, %r1356, %r1357, 25;
	shf.l.wrap.b32 	%r1363, %r1357, %r1356, 25;
	mov.b64 	%rd1937, {%r1363, %r1362};
	xor.b64  	%rd1938, %rd1936, %rd1937;
	xor.b64  	%rd1939, %rd1920, %rd1872;
	xor.b64  	%rd1940, %rd1920, %rd1896;
	and.b64  	%rd1941, %rd1940, %rd1939;
	xor.b64  	%rd1942, %rd1941, %rd1920;
	add.s64 	%rd1943, %rd1932, %rd1942;
	add.s64 	%rd1944, %rd1943, %rd1938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1364,%dummy}, %rd1933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1365}, %rd1933;
	}
	shf.r.wrap.b32 	%r1366, %r1365, %r1364, 14;
	shf.r.wrap.b32 	%r1367, %r1364, %r1365, 14;
	mov.b64 	%rd1945, {%r1367, %r1366};
	shf.r.wrap.b32 	%r1368, %r1365, %r1364, 18;
	shf.r.wrap.b32 	%r1369, %r1364, %r1365, 18;
	mov.b64 	%rd1946, {%r1369, %r1368};
	xor.b64  	%rd1947, %rd1946, %rd1945;
	shf.l.wrap.b32 	%r1370, %r1364, %r1365, 23;
	shf.l.wrap.b32 	%r1371, %r1365, %r1364, 23;
	mov.b64 	%rd1948, {%r1371, %r1370};
	xor.b64  	%rd1949, %rd1947, %rd1948;
	xor.b64  	%rd1950, %rd1909, %rd1885;
	and.b64  	%rd1951, %rd1933, %rd1950;
	xor.b64  	%rd1952, %rd1951, %rd1885;
	add.s64 	%rd1953, %rd1861, %rd1672;
	add.s64 	%rd1954, %rd1953, %rd2725;
	add.s64 	%rd1955, %rd1954, %rd1952;
	add.s64 	%rd1956, %rd1955, %rd1949;
	add.s64 	%rd1957, %rd1956, %rd1872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1372,%dummy}, %rd1944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1373}, %rd1944;
	}
	shf.r.wrap.b32 	%r1374, %r1373, %r1372, 28;
	shf.r.wrap.b32 	%r1375, %r1372, %r1373, 28;
	mov.b64 	%rd1958, {%r1375, %r1374};
	shf.l.wrap.b32 	%r1376, %r1372, %r1373, 30;
	shf.l.wrap.b32 	%r1377, %r1373, %r1372, 30;
	mov.b64 	%rd1959, {%r1377, %r1376};
	xor.b64  	%rd1960, %rd1959, %rd1958;
	shf.l.wrap.b32 	%r1378, %r1372, %r1373, 25;
	shf.l.wrap.b32 	%r1379, %r1373, %r1372, 25;
	mov.b64 	%rd1961, {%r1379, %r1378};
	xor.b64  	%rd1962, %rd1960, %rd1961;
	xor.b64  	%rd1963, %rd1944, %rd1896;
	xor.b64  	%rd1964, %rd1944, %rd1920;
	and.b64  	%rd1965, %rd1964, %rd1963;
	xor.b64  	%rd1966, %rd1965, %rd1944;
	add.s64 	%rd1967, %rd1956, %rd1966;
	add.s64 	%rd1968, %rd1967, %rd1962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1380,%dummy}, %rd1957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1381}, %rd1957;
	}
	shf.r.wrap.b32 	%r1382, %r1381, %r1380, 14;
	shf.r.wrap.b32 	%r1383, %r1380, %r1381, 14;
	mov.b64 	%rd1969, {%r1383, %r1382};
	shf.r.wrap.b32 	%r1384, %r1381, %r1380, 18;
	shf.r.wrap.b32 	%r1385, %r1380, %r1381, 18;
	mov.b64 	%rd1970, {%r1385, %r1384};
	xor.b64  	%rd1971, %rd1970, %rd1969;
	shf.l.wrap.b32 	%r1386, %r1380, %r1381, 23;
	shf.l.wrap.b32 	%r1387, %r1381, %r1380, 23;
	mov.b64 	%rd1972, {%r1387, %r1386};
	xor.b64  	%rd1973, %rd1971, %rd1972;
	xor.b64  	%rd1974, %rd1933, %rd1909;
	and.b64  	%rd1975, %rd1957, %rd1974;
	xor.b64  	%rd1976, %rd1975, %rd1909;
	add.s64 	%rd1977, %rd1885, %rd1685;
	add.s64 	%rd1978, %rd1977, %rd2730;
	add.s64 	%rd1979, %rd1978, %rd1976;
	add.s64 	%rd1980, %rd1979, %rd1973;
	add.s64 	%rd1981, %rd1980, %rd1896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1388,%dummy}, %rd1968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd1968;
	}
	shf.r.wrap.b32 	%r1390, %r1389, %r1388, 28;
	shf.r.wrap.b32 	%r1391, %r1388, %r1389, 28;
	mov.b64 	%rd1982, {%r1391, %r1390};
	shf.l.wrap.b32 	%r1392, %r1388, %r1389, 30;
	shf.l.wrap.b32 	%r1393, %r1389, %r1388, 30;
	mov.b64 	%rd1983, {%r1393, %r1392};
	xor.b64  	%rd1984, %rd1983, %rd1982;
	shf.l.wrap.b32 	%r1394, %r1388, %r1389, 25;
	shf.l.wrap.b32 	%r1395, %r1389, %r1388, 25;
	mov.b64 	%rd1985, {%r1395, %r1394};
	xor.b64  	%rd1986, %rd1984, %rd1985;
	xor.b64  	%rd1987, %rd1968, %rd1920;
	xor.b64  	%rd1988, %rd1968, %rd1944;
	and.b64  	%rd1989, %rd1988, %rd1987;
	xor.b64  	%rd1990, %rd1989, %rd1968;
	add.s64 	%rd1991, %rd1980, %rd1990;
	add.s64 	%rd1992, %rd1991, %rd1986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1396,%dummy}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd1981;
	}
	shf.r.wrap.b32 	%r1398, %r1397, %r1396, 14;
	shf.r.wrap.b32 	%r1399, %r1396, %r1397, 14;
	mov.b64 	%rd1993, {%r1399, %r1398};
	shf.r.wrap.b32 	%r1400, %r1397, %r1396, 18;
	shf.r.wrap.b32 	%r1401, %r1396, %r1397, 18;
	mov.b64 	%rd1994, {%r1401, %r1400};
	xor.b64  	%rd1995, %rd1994, %rd1993;
	shf.l.wrap.b32 	%r1402, %r1396, %r1397, 23;
	shf.l.wrap.b32 	%r1403, %r1397, %r1396, 23;
	mov.b64 	%rd1996, {%r1403, %r1402};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	xor.b64  	%rd1998, %rd1957, %rd1933;
	and.b64  	%rd1999, %rd1981, %rd1998;
	xor.b64  	%rd2000, %rd1999, %rd1933;
	add.s64 	%rd2001, %rd1909, %rd1698;
	add.s64 	%rd2002, %rd2001, %rd2731;
	add.s64 	%rd2003, %rd2002, %rd2000;
	add.s64 	%rd2004, %rd2003, %rd1997;
	add.s64 	%rd2005, %rd2004, %rd1920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1404,%dummy}, %rd1992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1405}, %rd1992;
	}
	shf.r.wrap.b32 	%r1406, %r1405, %r1404, 28;
	shf.r.wrap.b32 	%r1407, %r1404, %r1405, 28;
	mov.b64 	%rd2006, {%r1407, %r1406};
	shf.l.wrap.b32 	%r1408, %r1404, %r1405, 30;
	shf.l.wrap.b32 	%r1409, %r1405, %r1404, 30;
	mov.b64 	%rd2007, {%r1409, %r1408};
	xor.b64  	%rd2008, %rd2007, %rd2006;
	shf.l.wrap.b32 	%r1410, %r1404, %r1405, 25;
	shf.l.wrap.b32 	%r1411, %r1405, %r1404, 25;
	mov.b64 	%rd2009, {%r1411, %r1410};
	xor.b64  	%rd2010, %rd2008, %rd2009;
	xor.b64  	%rd2011, %rd1992, %rd1944;
	xor.b64  	%rd2012, %rd1992, %rd1968;
	and.b64  	%rd2013, %rd2012, %rd2011;
	xor.b64  	%rd2014, %rd2013, %rd1992;
	add.s64 	%rd2015, %rd2004, %rd2014;
	add.s64 	%rd2016, %rd2015, %rd2010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1412,%dummy}, %rd2005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd2005;
	}
	shf.r.wrap.b32 	%r1414, %r1413, %r1412, 14;
	shf.r.wrap.b32 	%r1415, %r1412, %r1413, 14;
	mov.b64 	%rd2017, {%r1415, %r1414};
	shf.r.wrap.b32 	%r1416, %r1413, %r1412, 18;
	shf.r.wrap.b32 	%r1417, %r1412, %r1413, 18;
	mov.b64 	%rd2018, {%r1417, %r1416};
	xor.b64  	%rd2019, %rd2018, %rd2017;
	shf.l.wrap.b32 	%r1418, %r1412, %r1413, 23;
	shf.l.wrap.b32 	%r1419, %r1413, %r1412, 23;
	mov.b64 	%rd2020, {%r1419, %r1418};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	xor.b64  	%rd2022, %rd1981, %rd1957;
	and.b64  	%rd2023, %rd2005, %rd2022;
	xor.b64  	%rd2024, %rd2023, %rd1957;
	add.s64 	%rd2025, %rd1933, %rd1711;
	add.s64 	%rd2026, %rd2025, %rd2732;
	add.s64 	%rd2027, %rd2026, %rd2024;
	add.s64 	%rd2028, %rd2027, %rd2021;
	add.s64 	%rd2029, %rd2028, %rd1944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1420,%dummy}, %rd2016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1421}, %rd2016;
	}
	shf.r.wrap.b32 	%r1422, %r1421, %r1420, 28;
	shf.r.wrap.b32 	%r1423, %r1420, %r1421, 28;
	mov.b64 	%rd2030, {%r1423, %r1422};
	shf.l.wrap.b32 	%r1424, %r1420, %r1421, 30;
	shf.l.wrap.b32 	%r1425, %r1421, %r1420, 30;
	mov.b64 	%rd2031, {%r1425, %r1424};
	xor.b64  	%rd2032, %rd2031, %rd2030;
	shf.l.wrap.b32 	%r1426, %r1420, %r1421, 25;
	shf.l.wrap.b32 	%r1427, %r1421, %r1420, 25;
	mov.b64 	%rd2033, {%r1427, %r1426};
	xor.b64  	%rd2034, %rd2032, %rd2033;
	xor.b64  	%rd2035, %rd2016, %rd1968;
	xor.b64  	%rd2036, %rd2016, %rd1992;
	and.b64  	%rd2037, %rd2036, %rd2035;
	xor.b64  	%rd2038, %rd2037, %rd2016;
	add.s64 	%rd2039, %rd2028, %rd2038;
	add.s64 	%rd2040, %rd2039, %rd2034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1428,%dummy}, %rd2029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1429}, %rd2029;
	}
	shf.r.wrap.b32 	%r1430, %r1429, %r1428, 14;
	shf.r.wrap.b32 	%r1431, %r1428, %r1429, 14;
	mov.b64 	%rd2041, {%r1431, %r1430};
	shf.r.wrap.b32 	%r1432, %r1429, %r1428, 18;
	shf.r.wrap.b32 	%r1433, %r1428, %r1429, 18;
	mov.b64 	%rd2042, {%r1433, %r1432};
	xor.b64  	%rd2043, %rd2042, %rd2041;
	shf.l.wrap.b32 	%r1434, %r1428, %r1429, 23;
	shf.l.wrap.b32 	%r1435, %r1429, %r1428, 23;
	mov.b64 	%rd2044, {%r1435, %r1434};
	xor.b64  	%rd2045, %rd2043, %rd2044;
	xor.b64  	%rd2046, %rd2005, %rd1981;
	and.b64  	%rd2047, %rd2029, %rd2046;
	xor.b64  	%rd2048, %rd2047, %rd1981;
	add.s64 	%rd2049, %rd1957, %rd1724;
	add.s64 	%rd2050, %rd2049, %rd2733;
	add.s64 	%rd2051, %rd2050, %rd2048;
	add.s64 	%rd2052, %rd2051, %rd2045;
	add.s64 	%rd2053, %rd2052, %rd1968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1436,%dummy}, %rd2040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd2040;
	}
	shf.r.wrap.b32 	%r1438, %r1437, %r1436, 28;
	shf.r.wrap.b32 	%r1439, %r1436, %r1437, 28;
	mov.b64 	%rd2054, {%r1439, %r1438};
	shf.l.wrap.b32 	%r1440, %r1436, %r1437, 30;
	shf.l.wrap.b32 	%r1441, %r1437, %r1436, 30;
	mov.b64 	%rd2055, {%r1441, %r1440};
	xor.b64  	%rd2056, %rd2055, %rd2054;
	shf.l.wrap.b32 	%r1442, %r1436, %r1437, 25;
	shf.l.wrap.b32 	%r1443, %r1437, %r1436, 25;
	mov.b64 	%rd2057, {%r1443, %r1442};
	xor.b64  	%rd2058, %rd2056, %rd2057;
	xor.b64  	%rd2059, %rd2040, %rd1992;
	xor.b64  	%rd2060, %rd2040, %rd2016;
	and.b64  	%rd2061, %rd2060, %rd2059;
	xor.b64  	%rd2062, %rd2061, %rd2040;
	add.s64 	%rd2063, %rd2052, %rd2062;
	add.s64 	%rd2064, %rd2063, %rd2058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1444,%dummy}, %rd2053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1445}, %rd2053;
	}
	shf.r.wrap.b32 	%r1446, %r1445, %r1444, 14;
	shf.r.wrap.b32 	%r1447, %r1444, %r1445, 14;
	mov.b64 	%rd2065, {%r1447, %r1446};
	shf.r.wrap.b32 	%r1448, %r1445, %r1444, 18;
	shf.r.wrap.b32 	%r1449, %r1444, %r1445, 18;
	mov.b64 	%rd2066, {%r1449, %r1448};
	xor.b64  	%rd2067, %rd2066, %rd2065;
	shf.l.wrap.b32 	%r1450, %r1444, %r1445, 23;
	shf.l.wrap.b32 	%r1451, %r1445, %r1444, 23;
	mov.b64 	%rd2068, {%r1451, %r1450};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	xor.b64  	%rd2070, %rd2029, %rd2005;
	and.b64  	%rd2071, %rd2053, %rd2070;
	xor.b64  	%rd2072, %rd2071, %rd2005;
	add.s64 	%rd2073, %rd1981, %rd1737;
	add.s64 	%rd2074, %rd2073, %rd2734;
	add.s64 	%rd2075, %rd2074, %rd2072;
	add.s64 	%rd2076, %rd2075, %rd2069;
	add.s64 	%rd2077, %rd2076, %rd1992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1452,%dummy}, %rd2064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1453}, %rd2064;
	}
	shf.r.wrap.b32 	%r1454, %r1453, %r1452, 28;
	shf.r.wrap.b32 	%r1455, %r1452, %r1453, 28;
	mov.b64 	%rd2078, {%r1455, %r1454};
	shf.l.wrap.b32 	%r1456, %r1452, %r1453, 30;
	shf.l.wrap.b32 	%r1457, %r1453, %r1452, 30;
	mov.b64 	%rd2079, {%r1457, %r1456};
	xor.b64  	%rd2080, %rd2079, %rd2078;
	shf.l.wrap.b32 	%r1458, %r1452, %r1453, 25;
	shf.l.wrap.b32 	%r1459, %r1453, %r1452, 25;
	mov.b64 	%rd2081, {%r1459, %r1458};
	xor.b64  	%rd2082, %rd2080, %rd2081;
	xor.b64  	%rd2083, %rd2064, %rd2016;
	xor.b64  	%rd2084, %rd2064, %rd2040;
	and.b64  	%rd2085, %rd2084, %rd2083;
	xor.b64  	%rd2086, %rd2085, %rd2064;
	add.s64 	%rd2087, %rd2076, %rd2086;
	add.s64 	%rd2088, %rd2087, %rd2082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1460,%dummy}, %rd2077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1461}, %rd2077;
	}
	shf.r.wrap.b32 	%r1462, %r1461, %r1460, 14;
	shf.r.wrap.b32 	%r1463, %r1460, %r1461, 14;
	mov.b64 	%rd2089, {%r1463, %r1462};
	shf.r.wrap.b32 	%r1464, %r1461, %r1460, 18;
	shf.r.wrap.b32 	%r1465, %r1460, %r1461, 18;
	mov.b64 	%rd2090, {%r1465, %r1464};
	xor.b64  	%rd2091, %rd2090, %rd2089;
	shf.l.wrap.b32 	%r1466, %r1460, %r1461, 23;
	shf.l.wrap.b32 	%r1467, %r1461, %r1460, 23;
	mov.b64 	%rd2092, {%r1467, %r1466};
	xor.b64  	%rd2093, %rd2091, %rd2092;
	xor.b64  	%rd2094, %rd2053, %rd2029;
	and.b64  	%rd2095, %rd2077, %rd2094;
	xor.b64  	%rd2096, %rd2095, %rd2029;
	add.s64 	%rd2097, %rd2005, %rd1750;
	add.s64 	%rd2098, %rd2097, %rd2735;
	add.s64 	%rd2099, %rd2098, %rd2096;
	add.s64 	%rd2100, %rd2099, %rd2093;
	add.s64 	%rd2101, %rd2100, %rd2016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1468,%dummy}, %rd2088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1469}, %rd2088;
	}
	shf.r.wrap.b32 	%r1470, %r1469, %r1468, 28;
	shf.r.wrap.b32 	%r1471, %r1468, %r1469, 28;
	mov.b64 	%rd2102, {%r1471, %r1470};
	shf.l.wrap.b32 	%r1472, %r1468, %r1469, 30;
	shf.l.wrap.b32 	%r1473, %r1469, %r1468, 30;
	mov.b64 	%rd2103, {%r1473, %r1472};
	xor.b64  	%rd2104, %rd2103, %rd2102;
	shf.l.wrap.b32 	%r1474, %r1468, %r1469, 25;
	shf.l.wrap.b32 	%r1475, %r1469, %r1468, 25;
	mov.b64 	%rd2105, {%r1475, %r1474};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	xor.b64  	%rd2107, %rd2088, %rd2040;
	xor.b64  	%rd2108, %rd2088, %rd2064;
	and.b64  	%rd2109, %rd2108, %rd2107;
	xor.b64  	%rd2110, %rd2109, %rd2088;
	add.s64 	%rd2111, %rd2100, %rd2110;
	add.s64 	%rd2112, %rd2111, %rd2106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1476,%dummy}, %rd2101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1477}, %rd2101;
	}
	shf.r.wrap.b32 	%r1478, %r1477, %r1476, 14;
	shf.r.wrap.b32 	%r1479, %r1476, %r1477, 14;
	mov.b64 	%rd2113, {%r1479, %r1478};
	shf.r.wrap.b32 	%r1480, %r1477, %r1476, 18;
	shf.r.wrap.b32 	%r1481, %r1476, %r1477, 18;
	mov.b64 	%rd2114, {%r1481, %r1480};
	xor.b64  	%rd2115, %rd2114, %rd2113;
	shf.l.wrap.b32 	%r1482, %r1476, %r1477, 23;
	shf.l.wrap.b32 	%r1483, %r1477, %r1476, 23;
	mov.b64 	%rd2116, {%r1483, %r1482};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	xor.b64  	%rd2118, %rd2077, %rd2053;
	and.b64  	%rd2119, %rd2101, %rd2118;
	xor.b64  	%rd2120, %rd2119, %rd2053;
	add.s64 	%rd2121, %rd2029, %rd1763;
	add.s64 	%rd2122, %rd2121, %rd2736;
	add.s64 	%rd2123, %rd2122, %rd2120;
	add.s64 	%rd2124, %rd2123, %rd2117;
	add.s64 	%rd2125, %rd2124, %rd2040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1484,%dummy}, %rd2112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1485}, %rd2112;
	}
	shf.r.wrap.b32 	%r1486, %r1485, %r1484, 28;
	shf.r.wrap.b32 	%r1487, %r1484, %r1485, 28;
	mov.b64 	%rd2126, {%r1487, %r1486};
	shf.l.wrap.b32 	%r1488, %r1484, %r1485, 30;
	shf.l.wrap.b32 	%r1489, %r1485, %r1484, 30;
	mov.b64 	%rd2127, {%r1489, %r1488};
	xor.b64  	%rd2128, %rd2127, %rd2126;
	shf.l.wrap.b32 	%r1490, %r1484, %r1485, 25;
	shf.l.wrap.b32 	%r1491, %r1485, %r1484, 25;
	mov.b64 	%rd2129, {%r1491, %r1490};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	xor.b64  	%rd2131, %rd2112, %rd2064;
	xor.b64  	%rd2132, %rd2112, %rd2088;
	and.b64  	%rd2133, %rd2132, %rd2131;
	xor.b64  	%rd2134, %rd2133, %rd2112;
	add.s64 	%rd2135, %rd2124, %rd2134;
	add.s64 	%rd2136, %rd2135, %rd2130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1492,%dummy}, %rd2125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1493}, %rd2125;
	}
	shf.r.wrap.b32 	%r1494, %r1493, %r1492, 14;
	shf.r.wrap.b32 	%r1495, %r1492, %r1493, 14;
	mov.b64 	%rd2137, {%r1495, %r1494};
	shf.r.wrap.b32 	%r1496, %r1493, %r1492, 18;
	shf.r.wrap.b32 	%r1497, %r1492, %r1493, 18;
	mov.b64 	%rd2138, {%r1497, %r1496};
	xor.b64  	%rd2139, %rd2138, %rd2137;
	shf.l.wrap.b32 	%r1498, %r1492, %r1493, 23;
	shf.l.wrap.b32 	%r1499, %r1493, %r1492, 23;
	mov.b64 	%rd2140, {%r1499, %r1498};
	xor.b64  	%rd2141, %rd2139, %rd2140;
	xor.b64  	%rd2142, %rd2101, %rd2077;
	and.b64  	%rd2143, %rd2125, %rd2142;
	xor.b64  	%rd2144, %rd2143, %rd2077;
	add.s64 	%rd2145, %rd2053, %rd1776;
	add.s64 	%rd2146, %rd2145, %rd2737;
	add.s64 	%rd2147, %rd2146, %rd2144;
	add.s64 	%rd2148, %rd2147, %rd2141;
	add.s64 	%rd2149, %rd2148, %rd2064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1500,%dummy}, %rd2136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd2136;
	}
	shf.r.wrap.b32 	%r1502, %r1501, %r1500, 28;
	shf.r.wrap.b32 	%r1503, %r1500, %r1501, 28;
	mov.b64 	%rd2150, {%r1503, %r1502};
	shf.l.wrap.b32 	%r1504, %r1500, %r1501, 30;
	shf.l.wrap.b32 	%r1505, %r1501, %r1500, 30;
	mov.b64 	%rd2151, {%r1505, %r1504};
	xor.b64  	%rd2152, %rd2151, %rd2150;
	shf.l.wrap.b32 	%r1506, %r1500, %r1501, 25;
	shf.l.wrap.b32 	%r1507, %r1501, %r1500, 25;
	mov.b64 	%rd2153, {%r1507, %r1506};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	xor.b64  	%rd2155, %rd2136, %rd2088;
	xor.b64  	%rd2156, %rd2136, %rd2112;
	and.b64  	%rd2157, %rd2156, %rd2155;
	xor.b64  	%rd2158, %rd2157, %rd2136;
	add.s64 	%rd2159, %rd2148, %rd2158;
	add.s64 	%rd2160, %rd2159, %rd2154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1508,%dummy}, %rd1763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd1763;
	}
	shf.r.wrap.b32 	%r1510, %r1509, %r1508, 19;
	shf.r.wrap.b32 	%r1511, %r1508, %r1509, 19;
	mov.b64 	%rd2161, {%r1511, %r1510};
	shf.l.wrap.b32 	%r1512, %r1508, %r1509, 3;
	shf.l.wrap.b32 	%r1513, %r1509, %r1508, 3;
	mov.b64 	%rd2162, {%r1513, %r1512};
	shr.u64 	%rd2163, %rd1763, 6;
	xor.b64  	%rd2164, %rd2161, %rd2163;
	xor.b64  	%rd2165, %rd2164, %rd2162;
	shf.r.wrap.b32 	%r1514, %r1123, %r1122, 1;
	shf.r.wrap.b32 	%r1515, %r1122, %r1123, 1;
	mov.b64 	%rd2166, {%r1515, %r1514};
	shf.r.wrap.b32 	%r1516, %r1123, %r1122, 8;
	shf.r.wrap.b32 	%r1517, %r1122, %r1123, 8;
	mov.b64 	%rd2167, {%r1517, %r1516};
	shr.u64 	%rd2168, %rd1594, 7;
	xor.b64  	%rd2169, %rd2166, %rd2168;
	xor.b64  	%rd2170, %rd2169, %rd2167;
	add.s64 	%rd2171, %rd1581, %rd1698;
	add.s64 	%rd2172, %rd2171, %rd2165;
	add.s64 	%rd2173, %rd2172, %rd2170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd1776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1519}, %rd1776;
	}
	shf.r.wrap.b32 	%r1520, %r1519, %r1518, 19;
	shf.r.wrap.b32 	%r1521, %r1518, %r1519, 19;
	mov.b64 	%rd2174, {%r1521, %r1520};
	shf.l.wrap.b32 	%r1522, %r1518, %r1519, 3;
	shf.l.wrap.b32 	%r1523, %r1519, %r1518, 3;
	mov.b64 	%rd2175, {%r1523, %r1522};
	shr.u64 	%rd2176, %rd1776, 6;
	xor.b64  	%rd2177, %rd2174, %rd2176;
	xor.b64  	%rd2178, %rd2177, %rd2175;
	shf.r.wrap.b32 	%r1524, %r1133, %r1132, 1;
	shf.r.wrap.b32 	%r1525, %r1132, %r1133, 1;
	mov.b64 	%rd2179, {%r1525, %r1524};
	shf.r.wrap.b32 	%r1526, %r1133, %r1132, 8;
	shf.r.wrap.b32 	%r1527, %r1132, %r1133, 8;
	mov.b64 	%rd2180, {%r1527, %r1526};
	shr.u64 	%rd2181, %rd1607, 7;
	xor.b64  	%rd2182, %rd2179, %rd2181;
	xor.b64  	%rd2183, %rd2182, %rd2180;
	add.s64 	%rd2184, %rd1594, %rd1711;
	add.s64 	%rd2185, %rd2184, %rd2178;
	add.s64 	%rd2186, %rd2185, %rd2183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1528,%dummy}, %rd2173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1529}, %rd2173;
	}
	shf.r.wrap.b32 	%r1530, %r1529, %r1528, 19;
	shf.r.wrap.b32 	%r1531, %r1528, %r1529, 19;
	mov.b64 	%rd2187, {%r1531, %r1530};
	shf.l.wrap.b32 	%r1532, %r1528, %r1529, 3;
	shf.l.wrap.b32 	%r1533, %r1529, %r1528, 3;
	mov.b64 	%rd2188, {%r1533, %r1532};
	shr.u64 	%rd2189, %rd2173, 6;
	xor.b64  	%rd2190, %rd2187, %rd2189;
	xor.b64  	%rd2191, %rd2190, %rd2188;
	shf.r.wrap.b32 	%r1534, %r1143, %r1142, 1;
	shf.r.wrap.b32 	%r1535, %r1142, %r1143, 1;
	mov.b64 	%rd2192, {%r1535, %r1534};
	shf.r.wrap.b32 	%r1536, %r1143, %r1142, 8;
	shf.r.wrap.b32 	%r1537, %r1142, %r1143, 8;
	mov.b64 	%rd2193, {%r1537, %r1536};
	shr.u64 	%rd2194, %rd1620, 7;
	xor.b64  	%rd2195, %rd2192, %rd2194;
	xor.b64  	%rd2196, %rd2195, %rd2193;
	add.s64 	%rd2197, %rd1607, %rd1724;
	add.s64 	%rd2198, %rd2197, %rd2191;
	add.s64 	%rd2199, %rd2198, %rd2196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1538,%dummy}, %rd2186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1539}, %rd2186;
	}
	shf.r.wrap.b32 	%r1540, %r1539, %r1538, 19;
	shf.r.wrap.b32 	%r1541, %r1538, %r1539, 19;
	mov.b64 	%rd2200, {%r1541, %r1540};
	shf.l.wrap.b32 	%r1542, %r1538, %r1539, 3;
	shf.l.wrap.b32 	%r1543, %r1539, %r1538, 3;
	mov.b64 	%rd2201, {%r1543, %r1542};
	shr.u64 	%rd2202, %rd2186, 6;
	xor.b64  	%rd2203, %rd2200, %rd2202;
	xor.b64  	%rd2204, %rd2203, %rd2201;
	shf.r.wrap.b32 	%r1544, %r1153, %r1152, 1;
	shf.r.wrap.b32 	%r1545, %r1152, %r1153, 1;
	mov.b64 	%rd2205, {%r1545, %r1544};
	shf.r.wrap.b32 	%r1546, %r1153, %r1152, 8;
	shf.r.wrap.b32 	%r1547, %r1152, %r1153, 8;
	mov.b64 	%rd2206, {%r1547, %r1546};
	shr.u64 	%rd2207, %rd1633, 7;
	xor.b64  	%rd2208, %rd2205, %rd2207;
	xor.b64  	%rd2209, %rd2208, %rd2206;
	add.s64 	%rd2210, %rd1620, %rd1737;
	add.s64 	%rd2211, %rd2210, %rd2204;
	add.s64 	%rd2212, %rd2211, %rd2209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1548,%dummy}, %rd2199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1549}, %rd2199;
	}
	shf.r.wrap.b32 	%r1550, %r1549, %r1548, 19;
	shf.r.wrap.b32 	%r1551, %r1548, %r1549, 19;
	mov.b64 	%rd2213, {%r1551, %r1550};
	shf.l.wrap.b32 	%r1552, %r1548, %r1549, 3;
	shf.l.wrap.b32 	%r1553, %r1549, %r1548, 3;
	mov.b64 	%rd2214, {%r1553, %r1552};
	shr.u64 	%rd2215, %rd2199, 6;
	xor.b64  	%rd2216, %rd2213, %rd2215;
	xor.b64  	%rd2217, %rd2216, %rd2214;
	shf.r.wrap.b32 	%r1554, %r1163, %r1162, 1;
	shf.r.wrap.b32 	%r1555, %r1162, %r1163, 1;
	mov.b64 	%rd2218, {%r1555, %r1554};
	shf.r.wrap.b32 	%r1556, %r1163, %r1162, 8;
	shf.r.wrap.b32 	%r1557, %r1162, %r1163, 8;
	mov.b64 	%rd2219, {%r1557, %r1556};
	shr.u64 	%rd2220, %rd1646, 7;
	xor.b64  	%rd2221, %rd2218, %rd2220;
	xor.b64  	%rd2222, %rd2221, %rd2219;
	add.s64 	%rd2223, %rd1633, %rd1750;
	add.s64 	%rd2224, %rd2223, %rd2217;
	add.s64 	%rd2225, %rd2224, %rd2222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1558,%dummy}, %rd2212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1559}, %rd2212;
	}
	shf.r.wrap.b32 	%r1560, %r1559, %r1558, 19;
	shf.r.wrap.b32 	%r1561, %r1558, %r1559, 19;
	mov.b64 	%rd2226, {%r1561, %r1560};
	shf.l.wrap.b32 	%r1562, %r1558, %r1559, 3;
	shf.l.wrap.b32 	%r1563, %r1559, %r1558, 3;
	mov.b64 	%rd2227, {%r1563, %r1562};
	shr.u64 	%rd2228, %rd2212, 6;
	xor.b64  	%rd2229, %rd2226, %rd2228;
	xor.b64  	%rd2230, %rd2229, %rd2227;
	shf.r.wrap.b32 	%r1564, %r1173, %r1172, 1;
	shf.r.wrap.b32 	%r1565, %r1172, %r1173, 1;
	mov.b64 	%rd2231, {%r1565, %r1564};
	shf.r.wrap.b32 	%r1566, %r1173, %r1172, 8;
	shf.r.wrap.b32 	%r1567, %r1172, %r1173, 8;
	mov.b64 	%rd2232, {%r1567, %r1566};
	shr.u64 	%rd2233, %rd1659, 7;
	xor.b64  	%rd2234, %rd2231, %rd2233;
	xor.b64  	%rd2235, %rd2234, %rd2232;
	add.s64 	%rd2236, %rd1646, %rd1763;
	add.s64 	%rd2237, %rd2236, %rd2230;
	add.s64 	%rd2238, %rd2237, %rd2235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1568,%dummy}, %rd2225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1569}, %rd2225;
	}
	shf.r.wrap.b32 	%r1570, %r1569, %r1568, 19;
	shf.r.wrap.b32 	%r1571, %r1568, %r1569, 19;
	mov.b64 	%rd2239, {%r1571, %r1570};
	shf.l.wrap.b32 	%r1572, %r1568, %r1569, 3;
	shf.l.wrap.b32 	%r1573, %r1569, %r1568, 3;
	mov.b64 	%rd2240, {%r1573, %r1572};
	shr.u64 	%rd2241, %rd2225, 6;
	xor.b64  	%rd2242, %rd2239, %rd2241;
	xor.b64  	%rd2243, %rd2242, %rd2240;
	shf.r.wrap.b32 	%r1574, %r1183, %r1182, 1;
	shf.r.wrap.b32 	%r1575, %r1182, %r1183, 1;
	mov.b64 	%rd2244, {%r1575, %r1574};
	shf.r.wrap.b32 	%r1576, %r1183, %r1182, 8;
	shf.r.wrap.b32 	%r1577, %r1182, %r1183, 8;
	mov.b64 	%rd2245, {%r1577, %r1576};
	shr.u64 	%rd2246, %rd1672, 7;
	xor.b64  	%rd2247, %rd2244, %rd2246;
	xor.b64  	%rd2248, %rd2247, %rd2245;
	add.s64 	%rd2249, %rd1659, %rd1776;
	add.s64 	%rd2250, %rd2249, %rd2243;
	add.s64 	%rd2251, %rd2250, %rd2248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd2238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd2238;
	}
	shf.r.wrap.b32 	%r1580, %r1579, %r1578, 19;
	shf.r.wrap.b32 	%r1581, %r1578, %r1579, 19;
	mov.b64 	%rd2252, {%r1581, %r1580};
	shf.l.wrap.b32 	%r1582, %r1578, %r1579, 3;
	shf.l.wrap.b32 	%r1583, %r1579, %r1578, 3;
	mov.b64 	%rd2253, {%r1583, %r1582};
	shr.u64 	%rd2254, %rd2238, 6;
	xor.b64  	%rd2255, %rd2252, %rd2254;
	xor.b64  	%rd2256, %rd2255, %rd2253;
	shf.r.wrap.b32 	%r1584, %r1193, %r1192, 1;
	shf.r.wrap.b32 	%r1585, %r1192, %r1193, 1;
	mov.b64 	%rd2257, {%r1585, %r1584};
	shf.r.wrap.b32 	%r1586, %r1193, %r1192, 8;
	shf.r.wrap.b32 	%r1587, %r1192, %r1193, 8;
	mov.b64 	%rd2258, {%r1587, %r1586};
	shr.u64 	%rd2259, %rd1685, 7;
	xor.b64  	%rd2260, %rd2257, %rd2259;
	xor.b64  	%rd2261, %rd2260, %rd2258;
	add.s64 	%rd2262, %rd2173, %rd1672;
	add.s64 	%rd2263, %rd2262, %rd2256;
	add.s64 	%rd2264, %rd2263, %rd2261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1588,%dummy}, %rd2251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1589}, %rd2251;
	}
	shf.r.wrap.b32 	%r1590, %r1589, %r1588, 19;
	shf.r.wrap.b32 	%r1591, %r1588, %r1589, 19;
	mov.b64 	%rd2265, {%r1591, %r1590};
	shf.l.wrap.b32 	%r1592, %r1588, %r1589, 3;
	shf.l.wrap.b32 	%r1593, %r1589, %r1588, 3;
	mov.b64 	%rd2266, {%r1593, %r1592};
	shr.u64 	%rd2267, %rd2251, 6;
	xor.b64  	%rd2268, %rd2265, %rd2267;
	xor.b64  	%rd2269, %rd2268, %rd2266;
	shf.r.wrap.b32 	%r1594, %r1203, %r1202, 1;
	shf.r.wrap.b32 	%r1595, %r1202, %r1203, 1;
	mov.b64 	%rd2270, {%r1595, %r1594};
	shf.r.wrap.b32 	%r1596, %r1203, %r1202, 8;
	shf.r.wrap.b32 	%r1597, %r1202, %r1203, 8;
	mov.b64 	%rd2271, {%r1597, %r1596};
	shr.u64 	%rd2272, %rd1698, 7;
	xor.b64  	%rd2273, %rd2270, %rd2272;
	xor.b64  	%rd2274, %rd2273, %rd2271;
	add.s64 	%rd2275, %rd2186, %rd1685;
	add.s64 	%rd2276, %rd2275, %rd2269;
	add.s64 	%rd2277, %rd2276, %rd2274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1598,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1599}, %rd2264;
	}
	shf.r.wrap.b32 	%r1600, %r1599, %r1598, 19;
	shf.r.wrap.b32 	%r1601, %r1598, %r1599, 19;
	mov.b64 	%rd2278, {%r1601, %r1600};
	shf.l.wrap.b32 	%r1602, %r1598, %r1599, 3;
	shf.l.wrap.b32 	%r1603, %r1599, %r1598, 3;
	mov.b64 	%rd2279, {%r1603, %r1602};
	shr.u64 	%rd2280, %rd2264, 6;
	xor.b64  	%rd2281, %rd2278, %rd2280;
	xor.b64  	%rd2282, %rd2281, %rd2279;
	shf.r.wrap.b32 	%r1604, %r1213, %r1212, 1;
	shf.r.wrap.b32 	%r1605, %r1212, %r1213, 1;
	mov.b64 	%rd2283, {%r1605, %r1604};
	shf.r.wrap.b32 	%r1606, %r1213, %r1212, 8;
	shf.r.wrap.b32 	%r1607, %r1212, %r1213, 8;
	mov.b64 	%rd2284, {%r1607, %r1606};
	shr.u64 	%rd2285, %rd1711, 7;
	xor.b64  	%rd2286, %rd2283, %rd2285;
	xor.b64  	%rd2287, %rd2286, %rd2284;
	add.s64 	%rd2288, %rd2199, %rd1698;
	add.s64 	%rd2289, %rd2288, %rd2282;
	add.s64 	%rd2290, %rd2289, %rd2287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1608,%dummy}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1609}, %rd2277;
	}
	shf.r.wrap.b32 	%r1610, %r1609, %r1608, 19;
	shf.r.wrap.b32 	%r1611, %r1608, %r1609, 19;
	mov.b64 	%rd2291, {%r1611, %r1610};
	shf.l.wrap.b32 	%r1612, %r1608, %r1609, 3;
	shf.l.wrap.b32 	%r1613, %r1609, %r1608, 3;
	mov.b64 	%rd2292, {%r1613, %r1612};
	shr.u64 	%rd2293, %rd2277, 6;
	xor.b64  	%rd2294, %rd2291, %rd2293;
	xor.b64  	%rd2295, %rd2294, %rd2292;
	shf.r.wrap.b32 	%r1614, %r1223, %r1222, 1;
	shf.r.wrap.b32 	%r1615, %r1222, %r1223, 1;
	mov.b64 	%rd2296, {%r1615, %r1614};
	shf.r.wrap.b32 	%r1616, %r1223, %r1222, 8;
	shf.r.wrap.b32 	%r1617, %r1222, %r1223, 8;
	mov.b64 	%rd2297, {%r1617, %r1616};
	shr.u64 	%rd2298, %rd1724, 7;
	xor.b64  	%rd2299, %rd2296, %rd2298;
	xor.b64  	%rd2300, %rd2299, %rd2297;
	add.s64 	%rd2301, %rd2212, %rd1711;
	add.s64 	%rd2302, %rd2301, %rd2295;
	add.s64 	%rd2303, %rd2302, %rd2300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1618,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1619}, %rd2290;
	}
	shf.r.wrap.b32 	%r1620, %r1619, %r1618, 19;
	shf.r.wrap.b32 	%r1621, %r1618, %r1619, 19;
	mov.b64 	%rd2304, {%r1621, %r1620};
	shf.l.wrap.b32 	%r1622, %r1618, %r1619, 3;
	shf.l.wrap.b32 	%r1623, %r1619, %r1618, 3;
	mov.b64 	%rd2305, {%r1623, %r1622};
	shr.u64 	%rd2306, %rd2290, 6;
	xor.b64  	%rd2307, %rd2304, %rd2306;
	xor.b64  	%rd2308, %rd2307, %rd2305;
	shf.r.wrap.b32 	%r1624, %r1233, %r1232, 1;
	shf.r.wrap.b32 	%r1625, %r1232, %r1233, 1;
	mov.b64 	%rd2309, {%r1625, %r1624};
	shf.r.wrap.b32 	%r1626, %r1233, %r1232, 8;
	shf.r.wrap.b32 	%r1627, %r1232, %r1233, 8;
	mov.b64 	%rd2310, {%r1627, %r1626};
	shr.u64 	%rd2311, %rd1737, 7;
	xor.b64  	%rd2312, %rd2309, %rd2311;
	xor.b64  	%rd2313, %rd2312, %rd2310;
	add.s64 	%rd2314, %rd2225, %rd1724;
	add.s64 	%rd2315, %rd2314, %rd2308;
	add.s64 	%rd2316, %rd2315, %rd2313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1628,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1629}, %rd2303;
	}
	shf.r.wrap.b32 	%r1630, %r1629, %r1628, 19;
	shf.r.wrap.b32 	%r1631, %r1628, %r1629, 19;
	mov.b64 	%rd2317, {%r1631, %r1630};
	shf.l.wrap.b32 	%r1632, %r1628, %r1629, 3;
	shf.l.wrap.b32 	%r1633, %r1629, %r1628, 3;
	mov.b64 	%rd2318, {%r1633, %r1632};
	shr.u64 	%rd2319, %rd2303, 6;
	xor.b64  	%rd2320, %rd2317, %rd2319;
	xor.b64  	%rd2321, %rd2320, %rd2318;
	shf.r.wrap.b32 	%r1634, %r1243, %r1242, 1;
	shf.r.wrap.b32 	%r1635, %r1242, %r1243, 1;
	mov.b64 	%rd2322, {%r1635, %r1634};
	shf.r.wrap.b32 	%r1636, %r1243, %r1242, 8;
	shf.r.wrap.b32 	%r1637, %r1242, %r1243, 8;
	mov.b64 	%rd2323, {%r1637, %r1636};
	shr.u64 	%rd2324, %rd1750, 7;
	xor.b64  	%rd2325, %rd2322, %rd2324;
	xor.b64  	%rd2326, %rd2325, %rd2323;
	add.s64 	%rd2327, %rd2238, %rd1737;
	add.s64 	%rd2328, %rd2327, %rd2321;
	add.s64 	%rd2329, %rd2328, %rd2326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1638,%dummy}, %rd2149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1639}, %rd2149;
	}
	shf.r.wrap.b32 	%r1640, %r1639, %r1638, 14;
	shf.r.wrap.b32 	%r1641, %r1638, %r1639, 14;
	mov.b64 	%rd2330, {%r1641, %r1640};
	shf.r.wrap.b32 	%r1642, %r1639, %r1638, 18;
	shf.r.wrap.b32 	%r1643, %r1638, %r1639, 18;
	mov.b64 	%rd2331, {%r1643, %r1642};
	xor.b64  	%rd2332, %rd2331, %rd2330;
	shf.l.wrap.b32 	%r1644, %r1638, %r1639, 23;
	shf.l.wrap.b32 	%r1645, %r1639, %r1638, 23;
	mov.b64 	%rd2333, {%r1645, %r1644};
	xor.b64  	%rd2334, %rd2332, %rd2333;
	xor.b64  	%rd2335, %rd2101, %rd2125;
	and.b64  	%rd2336, %rd2335, %rd2149;
	xor.b64  	%rd2337, %rd2336, %rd2101;
	add.s64 	%rd2338, %rd2337, %rd2077;
	add.s64 	%rd2339, %rd2338, %rd2173;
	add.s64 	%rd2340, %rd2339, %rd2738;
	add.s64 	%rd2341, %rd2340, %rd2334;
	add.s64 	%rd2342, %rd2341, %rd2088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1646,%dummy}, %rd2160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1647}, %rd2160;
	}
	shf.r.wrap.b32 	%r1648, %r1647, %r1646, 28;
	shf.r.wrap.b32 	%r1649, %r1646, %r1647, 28;
	mov.b64 	%rd2343, {%r1649, %r1648};
	shf.l.wrap.b32 	%r1650, %r1646, %r1647, 30;
	shf.l.wrap.b32 	%r1651, %r1647, %r1646, 30;
	mov.b64 	%rd2344, {%r1651, %r1650};
	xor.b64  	%rd2345, %rd2344, %rd2343;
	shf.l.wrap.b32 	%r1652, %r1646, %r1647, 25;
	shf.l.wrap.b32 	%r1653, %r1647, %r1646, 25;
	mov.b64 	%rd2346, {%r1653, %r1652};
	xor.b64  	%rd2347, %rd2345, %rd2346;
	xor.b64  	%rd2348, %rd2160, %rd2112;
	xor.b64  	%rd2349, %rd2160, %rd2136;
	and.b64  	%rd2350, %rd2349, %rd2348;
	xor.b64  	%rd2351, %rd2350, %rd2160;
	add.s64 	%rd2352, %rd2341, %rd2351;
	add.s64 	%rd2353, %rd2352, %rd2347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1654,%dummy}, %rd2342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1655}, %rd2342;
	}
	shf.r.wrap.b32 	%r1656, %r1655, %r1654, 14;
	shf.r.wrap.b32 	%r1657, %r1654, %r1655, 14;
	mov.b64 	%rd2354, {%r1657, %r1656};
	shf.r.wrap.b32 	%r1658, %r1655, %r1654, 18;
	shf.r.wrap.b32 	%r1659, %r1654, %r1655, 18;
	mov.b64 	%rd2355, {%r1659, %r1658};
	xor.b64  	%rd2356, %rd2355, %rd2354;
	shf.l.wrap.b32 	%r1660, %r1654, %r1655, 23;
	shf.l.wrap.b32 	%r1661, %r1655, %r1654, 23;
	mov.b64 	%rd2357, {%r1661, %r1660};
	xor.b64  	%rd2358, %rd2356, %rd2357;
	xor.b64  	%rd2359, %rd2125, %rd2149;
	and.b64  	%rd2360, %rd2342, %rd2359;
	xor.b64  	%rd2361, %rd2360, %rd2125;
	add.s64 	%rd2362, %rd2186, %rd2101;
	add.s64 	%rd2363, %rd2362, %rd2739;
	add.s64 	%rd2364, %rd2363, %rd2361;
	add.s64 	%rd2365, %rd2364, %rd2358;
	add.s64 	%rd2366, %rd2365, %rd2112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd2353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1663}, %rd2353;
	}
	shf.r.wrap.b32 	%r1664, %r1663, %r1662, 28;
	shf.r.wrap.b32 	%r1665, %r1662, %r1663, 28;
	mov.b64 	%rd2367, {%r1665, %r1664};
	shf.l.wrap.b32 	%r1666, %r1662, %r1663, 30;
	shf.l.wrap.b32 	%r1667, %r1663, %r1662, 30;
	mov.b64 	%rd2368, {%r1667, %r1666};
	xor.b64  	%rd2369, %rd2368, %rd2367;
	shf.l.wrap.b32 	%r1668, %r1662, %r1663, 25;
	shf.l.wrap.b32 	%r1669, %r1663, %r1662, 25;
	mov.b64 	%rd2370, {%r1669, %r1668};
	xor.b64  	%rd2371, %rd2369, %rd2370;
	xor.b64  	%rd2372, %rd2353, %rd2136;
	xor.b64  	%rd2373, %rd2353, %rd2160;
	and.b64  	%rd2374, %rd2373, %rd2372;
	xor.b64  	%rd2375, %rd2374, %rd2353;
	add.s64 	%rd2376, %rd2365, %rd2375;
	add.s64 	%rd2377, %rd2376, %rd2371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1670,%dummy}, %rd2366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1671}, %rd2366;
	}
	shf.r.wrap.b32 	%r1672, %r1671, %r1670, 14;
	shf.r.wrap.b32 	%r1673, %r1670, %r1671, 14;
	mov.b64 	%rd2378, {%r1673, %r1672};
	shf.r.wrap.b32 	%r1674, %r1671, %r1670, 18;
	shf.r.wrap.b32 	%r1675, %r1670, %r1671, 18;
	mov.b64 	%rd2379, {%r1675, %r1674};
	xor.b64  	%rd2380, %rd2379, %rd2378;
	shf.l.wrap.b32 	%r1676, %r1670, %r1671, 23;
	shf.l.wrap.b32 	%r1677, %r1671, %r1670, 23;
	mov.b64 	%rd2381, {%r1677, %r1676};
	xor.b64  	%rd2382, %rd2380, %rd2381;
	xor.b64  	%rd2383, %rd2342, %rd2149;
	and.b64  	%rd2384, %rd2366, %rd2383;
	xor.b64  	%rd2385, %rd2384, %rd2149;
	add.s64 	%rd2386, %rd2199, %rd2125;
	add.s64 	%rd2387, %rd2386, %rd2740;
	add.s64 	%rd2388, %rd2387, %rd2385;
	add.s64 	%rd2389, %rd2388, %rd2382;
	add.s64 	%rd2390, %rd2389, %rd2136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1678,%dummy}, %rd2377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1679}, %rd2377;
	}
	shf.r.wrap.b32 	%r1680, %r1679, %r1678, 28;
	shf.r.wrap.b32 	%r1681, %r1678, %r1679, 28;
	mov.b64 	%rd2391, {%r1681, %r1680};
	shf.l.wrap.b32 	%r1682, %r1678, %r1679, 30;
	shf.l.wrap.b32 	%r1683, %r1679, %r1678, 30;
	mov.b64 	%rd2392, {%r1683, %r1682};
	xor.b64  	%rd2393, %rd2392, %rd2391;
	shf.l.wrap.b32 	%r1684, %r1678, %r1679, 25;
	shf.l.wrap.b32 	%r1685, %r1679, %r1678, 25;
	mov.b64 	%rd2394, {%r1685, %r1684};
	xor.b64  	%rd2395, %rd2393, %rd2394;
	xor.b64  	%rd2396, %rd2377, %rd2160;
	xor.b64  	%rd2397, %rd2377, %rd2353;
	and.b64  	%rd2398, %rd2397, %rd2396;
	xor.b64  	%rd2399, %rd2398, %rd2377;
	add.s64 	%rd2400, %rd2389, %rd2399;
	add.s64 	%rd2401, %rd2400, %rd2395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1686,%dummy}, %rd2390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1687}, %rd2390;
	}
	shf.r.wrap.b32 	%r1688, %r1687, %r1686, 14;
	shf.r.wrap.b32 	%r1689, %r1686, %r1687, 14;
	mov.b64 	%rd2402, {%r1689, %r1688};
	shf.r.wrap.b32 	%r1690, %r1687, %r1686, 18;
	shf.r.wrap.b32 	%r1691, %r1686, %r1687, 18;
	mov.b64 	%rd2403, {%r1691, %r1690};
	xor.b64  	%rd2404, %rd2403, %rd2402;
	shf.l.wrap.b32 	%r1692, %r1686, %r1687, 23;
	shf.l.wrap.b32 	%r1693, %r1687, %r1686, 23;
	mov.b64 	%rd2405, {%r1693, %r1692};
	xor.b64  	%rd2406, %rd2404, %rd2405;
	xor.b64  	%rd2407, %rd2366, %rd2342;
	and.b64  	%rd2408, %rd2390, %rd2407;
	xor.b64  	%rd2409, %rd2408, %rd2342;
	add.s64 	%rd2410, %rd2212, %rd2149;
	add.s64 	%rd2411, %rd2410, %rd2741;
	add.s64 	%rd2412, %rd2411, %rd2409;
	add.s64 	%rd2413, %rd2412, %rd2406;
	add.s64 	%rd2414, %rd2413, %rd2160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1694,%dummy}, %rd2401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1695}, %rd2401;
	}
	shf.r.wrap.b32 	%r1696, %r1695, %r1694, 28;
	shf.r.wrap.b32 	%r1697, %r1694, %r1695, 28;
	mov.b64 	%rd2415, {%r1697, %r1696};
	shf.l.wrap.b32 	%r1698, %r1694, %r1695, 30;
	shf.l.wrap.b32 	%r1699, %r1695, %r1694, 30;
	mov.b64 	%rd2416, {%r1699, %r1698};
	xor.b64  	%rd2417, %rd2416, %rd2415;
	shf.l.wrap.b32 	%r1700, %r1694, %r1695, 25;
	shf.l.wrap.b32 	%r1701, %r1695, %r1694, 25;
	mov.b64 	%rd2418, {%r1701, %r1700};
	xor.b64  	%rd2419, %rd2417, %rd2418;
	xor.b64  	%rd2420, %rd2401, %rd2353;
	xor.b64  	%rd2421, %rd2401, %rd2377;
	and.b64  	%rd2422, %rd2421, %rd2420;
	xor.b64  	%rd2423, %rd2422, %rd2401;
	add.s64 	%rd2424, %rd2413, %rd2423;
	add.s64 	%rd2425, %rd2424, %rd2419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1702,%dummy}, %rd2414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1703}, %rd2414;
	}
	shf.r.wrap.b32 	%r1704, %r1703, %r1702, 14;
	shf.r.wrap.b32 	%r1705, %r1702, %r1703, 14;
	mov.b64 	%rd2426, {%r1705, %r1704};
	shf.r.wrap.b32 	%r1706, %r1703, %r1702, 18;
	shf.r.wrap.b32 	%r1707, %r1702, %r1703, 18;
	mov.b64 	%rd2427, {%r1707, %r1706};
	xor.b64  	%rd2428, %rd2427, %rd2426;
	shf.l.wrap.b32 	%r1708, %r1702, %r1703, 23;
	shf.l.wrap.b32 	%r1709, %r1703, %r1702, 23;
	mov.b64 	%rd2429, {%r1709, %r1708};
	xor.b64  	%rd2430, %rd2428, %rd2429;
	xor.b64  	%rd2431, %rd2390, %rd2366;
	and.b64  	%rd2432, %rd2414, %rd2431;
	xor.b64  	%rd2433, %rd2432, %rd2366;
	add.s64 	%rd2434, %rd2342, %rd2225;
	add.s64 	%rd2435, %rd2434, %rd2742;
	add.s64 	%rd2436, %rd2435, %rd2433;
	add.s64 	%rd2437, %rd2436, %rd2430;
	add.s64 	%rd2438, %rd2437, %rd2353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd2425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1711}, %rd2425;
	}
	shf.r.wrap.b32 	%r1712, %r1711, %r1710, 28;
	shf.r.wrap.b32 	%r1713, %r1710, %r1711, 28;
	mov.b64 	%rd2439, {%r1713, %r1712};
	shf.l.wrap.b32 	%r1714, %r1710, %r1711, 30;
	shf.l.wrap.b32 	%r1715, %r1711, %r1710, 30;
	mov.b64 	%rd2440, {%r1715, %r1714};
	xor.b64  	%rd2441, %rd2440, %rd2439;
	shf.l.wrap.b32 	%r1716, %r1710, %r1711, 25;
	shf.l.wrap.b32 	%r1717, %r1711, %r1710, 25;
	mov.b64 	%rd2442, {%r1717, %r1716};
	xor.b64  	%rd2443, %rd2441, %rd2442;
	xor.b64  	%rd2444, %rd2425, %rd2377;
	xor.b64  	%rd2445, %rd2425, %rd2401;
	and.b64  	%rd2446, %rd2445, %rd2444;
	xor.b64  	%rd2447, %rd2446, %rd2425;
	add.s64 	%rd2448, %rd2437, %rd2447;
	add.s64 	%rd2449, %rd2448, %rd2443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1718,%dummy}, %rd2438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1719}, %rd2438;
	}
	shf.r.wrap.b32 	%r1720, %r1719, %r1718, 14;
	shf.r.wrap.b32 	%r1721, %r1718, %r1719, 14;
	mov.b64 	%rd2450, {%r1721, %r1720};
	shf.r.wrap.b32 	%r1722, %r1719, %r1718, 18;
	shf.r.wrap.b32 	%r1723, %r1718, %r1719, 18;
	mov.b64 	%rd2451, {%r1723, %r1722};
	xor.b64  	%rd2452, %rd2451, %rd2450;
	shf.l.wrap.b32 	%r1724, %r1718, %r1719, 23;
	shf.l.wrap.b32 	%r1725, %r1719, %r1718, 23;
	mov.b64 	%rd2453, {%r1725, %r1724};
	xor.b64  	%rd2454, %rd2452, %rd2453;
	xor.b64  	%rd2455, %rd2414, %rd2390;
	and.b64  	%rd2456, %rd2438, %rd2455;
	xor.b64  	%rd2457, %rd2456, %rd2390;
	add.s64 	%rd2458, %rd2366, %rd2238;
	add.s64 	%rd2459, %rd2458, %rd2743;
	add.s64 	%rd2460, %rd2459, %rd2457;
	add.s64 	%rd2461, %rd2460, %rd2454;
	add.s64 	%rd2462, %rd2461, %rd2377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1726,%dummy}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1727}, %rd2449;
	}
	shf.r.wrap.b32 	%r1728, %r1727, %r1726, 28;
	shf.r.wrap.b32 	%r1729, %r1726, %r1727, 28;
	mov.b64 	%rd2463, {%r1729, %r1728};
	shf.l.wrap.b32 	%r1730, %r1726, %r1727, 30;
	shf.l.wrap.b32 	%r1731, %r1727, %r1726, 30;
	mov.b64 	%rd2464, {%r1731, %r1730};
	xor.b64  	%rd2465, %rd2464, %rd2463;
	shf.l.wrap.b32 	%r1732, %r1726, %r1727, 25;
	shf.l.wrap.b32 	%r1733, %r1727, %r1726, 25;
	mov.b64 	%rd2466, {%r1733, %r1732};
	xor.b64  	%rd2467, %rd2465, %rd2466;
	xor.b64  	%rd2468, %rd2449, %rd2401;
	xor.b64  	%rd2469, %rd2449, %rd2425;
	and.b64  	%rd2470, %rd2469, %rd2468;
	xor.b64  	%rd2471, %rd2470, %rd2449;
	add.s64 	%rd2472, %rd2461, %rd2471;
	add.s64 	%rd2473, %rd2472, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd2462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd2462;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 14;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 14;
	mov.b64 	%rd2474, {%r1737, %r1736};
	shf.r.wrap.b32 	%r1738, %r1735, %r1734, 18;
	shf.r.wrap.b32 	%r1739, %r1734, %r1735, 18;
	mov.b64 	%rd2475, {%r1739, %r1738};
	xor.b64  	%rd2476, %rd2475, %rd2474;
	shf.l.wrap.b32 	%r1740, %r1734, %r1735, 23;
	shf.l.wrap.b32 	%r1741, %r1735, %r1734, 23;
	mov.b64 	%rd2477, {%r1741, %r1740};
	xor.b64  	%rd2478, %rd2476, %rd2477;
	xor.b64  	%rd2479, %rd2438, %rd2414;
	and.b64  	%rd2480, %rd2462, %rd2479;
	xor.b64  	%rd2481, %rd2480, %rd2414;
	add.s64 	%rd2482, %rd2390, %rd2251;
	add.s64 	%rd2483, %rd2482, %rd2744;
	add.s64 	%rd2484, %rd2483, %rd2481;
	add.s64 	%rd2485, %rd2484, %rd2478;
	add.s64 	%rd2486, %rd2485, %rd2401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd2473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1743}, %rd2473;
	}
	shf.r.wrap.b32 	%r1744, %r1743, %r1742, 28;
	shf.r.wrap.b32 	%r1745, %r1742, %r1743, 28;
	mov.b64 	%rd2487, {%r1745, %r1744};
	shf.l.wrap.b32 	%r1746, %r1742, %r1743, 30;
	shf.l.wrap.b32 	%r1747, %r1743, %r1742, 30;
	mov.b64 	%rd2488, {%r1747, %r1746};
	xor.b64  	%rd2489, %rd2488, %rd2487;
	shf.l.wrap.b32 	%r1748, %r1742, %r1743, 25;
	shf.l.wrap.b32 	%r1749, %r1743, %r1742, 25;
	mov.b64 	%rd2490, {%r1749, %r1748};
	xor.b64  	%rd2491, %rd2489, %rd2490;
	xor.b64  	%rd2492, %rd2473, %rd2425;
	xor.b64  	%rd2493, %rd2473, %rd2449;
	and.b64  	%rd2494, %rd2493, %rd2492;
	xor.b64  	%rd2495, %rd2494, %rd2473;
	add.s64 	%rd2496, %rd2485, %rd2495;
	add.s64 	%rd2497, %rd2496, %rd2491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1750,%dummy}, %rd2486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1751}, %rd2486;
	}
	shf.r.wrap.b32 	%r1752, %r1751, %r1750, 14;
	shf.r.wrap.b32 	%r1753, %r1750, %r1751, 14;
	mov.b64 	%rd2498, {%r1753, %r1752};
	shf.r.wrap.b32 	%r1754, %r1751, %r1750, 18;
	shf.r.wrap.b32 	%r1755, %r1750, %r1751, 18;
	mov.b64 	%rd2499, {%r1755, %r1754};
	xor.b64  	%rd2500, %rd2499, %rd2498;
	shf.l.wrap.b32 	%r1756, %r1750, %r1751, 23;
	shf.l.wrap.b32 	%r1757, %r1751, %r1750, 23;
	mov.b64 	%rd2501, {%r1757, %r1756};
	xor.b64  	%rd2502, %rd2500, %rd2501;
	xor.b64  	%rd2503, %rd2462, %rd2438;
	and.b64  	%rd2504, %rd2486, %rd2503;
	xor.b64  	%rd2505, %rd2504, %rd2438;
	add.s64 	%rd2506, %rd2414, %rd2264;
	add.s64 	%rd2507, %rd2506, %rd2745;
	add.s64 	%rd2508, %rd2507, %rd2505;
	add.s64 	%rd2509, %rd2508, %rd2502;
	add.s64 	%rd2510, %rd2509, %rd2425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd2497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1759}, %rd2497;
	}
	shf.r.wrap.b32 	%r1760, %r1759, %r1758, 28;
	shf.r.wrap.b32 	%r1761, %r1758, %r1759, 28;
	mov.b64 	%rd2511, {%r1761, %r1760};
	shf.l.wrap.b32 	%r1762, %r1758, %r1759, 30;
	shf.l.wrap.b32 	%r1763, %r1759, %r1758, 30;
	mov.b64 	%rd2512, {%r1763, %r1762};
	xor.b64  	%rd2513, %rd2512, %rd2511;
	shf.l.wrap.b32 	%r1764, %r1758, %r1759, 25;
	shf.l.wrap.b32 	%r1765, %r1759, %r1758, 25;
	mov.b64 	%rd2514, {%r1765, %r1764};
	xor.b64  	%rd2515, %rd2513, %rd2514;
	xor.b64  	%rd2516, %rd2497, %rd2449;
	xor.b64  	%rd2517, %rd2497, %rd2473;
	and.b64  	%rd2518, %rd2517, %rd2516;
	xor.b64  	%rd2519, %rd2518, %rd2497;
	add.s64 	%rd2520, %rd2509, %rd2519;
	add.s64 	%rd2521, %rd2520, %rd2515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1766,%dummy}, %rd2510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1767}, %rd2510;
	}
	shf.r.wrap.b32 	%r1768, %r1767, %r1766, 14;
	shf.r.wrap.b32 	%r1769, %r1766, %r1767, 14;
	mov.b64 	%rd2522, {%r1769, %r1768};
	shf.r.wrap.b32 	%r1770, %r1767, %r1766, 18;
	shf.r.wrap.b32 	%r1771, %r1766, %r1767, 18;
	mov.b64 	%rd2523, {%r1771, %r1770};
	xor.b64  	%rd2524, %rd2523, %rd2522;
	shf.l.wrap.b32 	%r1772, %r1766, %r1767, 23;
	shf.l.wrap.b32 	%r1773, %r1767, %r1766, 23;
	mov.b64 	%rd2525, {%r1773, %r1772};
	xor.b64  	%rd2526, %rd2524, %rd2525;
	xor.b64  	%rd2527, %rd2486, %rd2462;
	and.b64  	%rd2528, %rd2510, %rd2527;
	xor.b64  	%rd2529, %rd2528, %rd2462;
	add.s64 	%rd2530, %rd2438, %rd2277;
	add.s64 	%rd2531, %rd2530, %rd2746;
	add.s64 	%rd2532, %rd2531, %rd2529;
	add.s64 	%rd2533, %rd2532, %rd2526;
	add.s64 	%rd2534, %rd2533, %rd2449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd2521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1775}, %rd2521;
	}
	shf.r.wrap.b32 	%r1776, %r1775, %r1774, 28;
	shf.r.wrap.b32 	%r1777, %r1774, %r1775, 28;
	mov.b64 	%rd2535, {%r1777, %r1776};
	shf.l.wrap.b32 	%r1778, %r1774, %r1775, 30;
	shf.l.wrap.b32 	%r1779, %r1775, %r1774, 30;
	mov.b64 	%rd2536, {%r1779, %r1778};
	xor.b64  	%rd2537, %rd2536, %rd2535;
	shf.l.wrap.b32 	%r1780, %r1774, %r1775, 25;
	shf.l.wrap.b32 	%r1781, %r1775, %r1774, 25;
	mov.b64 	%rd2538, {%r1781, %r1780};
	xor.b64  	%rd2539, %rd2537, %rd2538;
	xor.b64  	%rd2540, %rd2521, %rd2473;
	xor.b64  	%rd2541, %rd2521, %rd2497;
	and.b64  	%rd2542, %rd2541, %rd2540;
	xor.b64  	%rd2543, %rd2542, %rd2521;
	add.s64 	%rd2544, %rd2533, %rd2543;
	add.s64 	%rd2545, %rd2544, %rd2539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1782,%dummy}, %rd2534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1783}, %rd2534;
	}
	shf.r.wrap.b32 	%r1784, %r1783, %r1782, 14;
	shf.r.wrap.b32 	%r1785, %r1782, %r1783, 14;
	mov.b64 	%rd2546, {%r1785, %r1784};
	shf.r.wrap.b32 	%r1786, %r1783, %r1782, 18;
	shf.r.wrap.b32 	%r1787, %r1782, %r1783, 18;
	mov.b64 	%rd2547, {%r1787, %r1786};
	xor.b64  	%rd2548, %rd2547, %rd2546;
	shf.l.wrap.b32 	%r1788, %r1782, %r1783, 23;
	shf.l.wrap.b32 	%r1789, %r1783, %r1782, 23;
	mov.b64 	%rd2549, {%r1789, %r1788};
	xor.b64  	%rd2550, %rd2548, %rd2549;
	xor.b64  	%rd2551, %rd2510, %rd2486;
	and.b64  	%rd2552, %rd2534, %rd2551;
	xor.b64  	%rd2553, %rd2552, %rd2486;
	add.s64 	%rd2554, %rd2462, %rd2290;
	add.s64 	%rd2555, %rd2554, %rd2747;
	add.s64 	%rd2556, %rd2555, %rd2553;
	add.s64 	%rd2557, %rd2556, %rd2550;
	add.s64 	%rd2558, %rd2557, %rd2473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1790,%dummy}, %rd2545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1791}, %rd2545;
	}
	shf.r.wrap.b32 	%r1792, %r1791, %r1790, 28;
	shf.r.wrap.b32 	%r1793, %r1790, %r1791, 28;
	mov.b64 	%rd2559, {%r1793, %r1792};
	shf.l.wrap.b32 	%r1794, %r1790, %r1791, 30;
	shf.l.wrap.b32 	%r1795, %r1791, %r1790, 30;
	mov.b64 	%rd2560, {%r1795, %r1794};
	xor.b64  	%rd2561, %rd2560, %rd2559;
	shf.l.wrap.b32 	%r1796, %r1790, %r1791, 25;
	shf.l.wrap.b32 	%r1797, %r1791, %r1790, 25;
	mov.b64 	%rd2562, {%r1797, %r1796};
	xor.b64  	%rd2563, %rd2561, %rd2562;
	xor.b64  	%rd2564, %rd2545, %rd2497;
	xor.b64  	%rd2565, %rd2545, %rd2521;
	and.b64  	%rd2566, %rd2565, %rd2564;
	xor.b64  	%rd2567, %rd2566, %rd2545;
	add.s64 	%rd2568, %rd2557, %rd2567;
	add.s64 	%rd2569, %rd2568, %rd2563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1798,%dummy}, %rd2558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1799}, %rd2558;
	}
	shf.r.wrap.b32 	%r1800, %r1799, %r1798, 14;
	shf.r.wrap.b32 	%r1801, %r1798, %r1799, 14;
	mov.b64 	%rd2570, {%r1801, %r1800};
	shf.r.wrap.b32 	%r1802, %r1799, %r1798, 18;
	shf.r.wrap.b32 	%r1803, %r1798, %r1799, 18;
	mov.b64 	%rd2571, {%r1803, %r1802};
	xor.b64  	%rd2572, %rd2571, %rd2570;
	shf.l.wrap.b32 	%r1804, %r1798, %r1799, 23;
	shf.l.wrap.b32 	%r1805, %r1799, %r1798, 23;
	mov.b64 	%rd2573, {%r1805, %r1804};
	xor.b64  	%rd2574, %rd2572, %rd2573;
	xor.b64  	%rd2575, %rd2534, %rd2510;
	and.b64  	%rd2576, %rd2558, %rd2575;
	xor.b64  	%rd2577, %rd2576, %rd2510;
	add.s64 	%rd2578, %rd2486, %rd2303;
	add.s64 	%rd2579, %rd2578, %rd2748;
	add.s64 	%rd2580, %rd2579, %rd2577;
	add.s64 	%rd2581, %rd2580, %rd2574;
	add.s64 	%rd2582, %rd2581, %rd2497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1806,%dummy}, %rd2569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1807}, %rd2569;
	}
	shf.r.wrap.b32 	%r1808, %r1807, %r1806, 28;
	shf.r.wrap.b32 	%r1809, %r1806, %r1807, 28;
	mov.b64 	%rd2583, {%r1809, %r1808};
	shf.l.wrap.b32 	%r1810, %r1806, %r1807, 30;
	shf.l.wrap.b32 	%r1811, %r1807, %r1806, 30;
	mov.b64 	%rd2584, {%r1811, %r1810};
	xor.b64  	%rd2585, %rd2584, %rd2583;
	shf.l.wrap.b32 	%r1812, %r1806, %r1807, 25;
	shf.l.wrap.b32 	%r1813, %r1807, %r1806, 25;
	mov.b64 	%rd2586, {%r1813, %r1812};
	xor.b64  	%rd2587, %rd2585, %rd2586;
	xor.b64  	%rd2588, %rd2569, %rd2521;
	xor.b64  	%rd2589, %rd2569, %rd2545;
	and.b64  	%rd2590, %rd2589, %rd2588;
	xor.b64  	%rd2591, %rd2590, %rd2569;
	add.s64 	%rd2592, %rd2581, %rd2591;
	add.s64 	%rd2593, %rd2592, %rd2587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd2582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1815}, %rd2582;
	}
	shf.r.wrap.b32 	%r1816, %r1815, %r1814, 14;
	shf.r.wrap.b32 	%r1817, %r1814, %r1815, 14;
	mov.b64 	%rd2594, {%r1817, %r1816};
	shf.r.wrap.b32 	%r1818, %r1815, %r1814, 18;
	shf.r.wrap.b32 	%r1819, %r1814, %r1815, 18;
	mov.b64 	%rd2595, {%r1819, %r1818};
	xor.b64  	%rd2596, %rd2595, %rd2594;
	shf.l.wrap.b32 	%r1820, %r1814, %r1815, 23;
	shf.l.wrap.b32 	%r1821, %r1815, %r1814, 23;
	mov.b64 	%rd2597, {%r1821, %r1820};
	xor.b64  	%rd2598, %rd2596, %rd2597;
	xor.b64  	%rd2599, %rd2558, %rd2534;
	and.b64  	%rd2600, %rd2582, %rd2599;
	xor.b64  	%rd2601, %rd2600, %rd2534;
	add.s64 	%rd2602, %rd2510, %rd2316;
	add.s64 	%rd2603, %rd2602, %rd2749;
	add.s64 	%rd2604, %rd2603, %rd2601;
	add.s64 	%rd2605, %rd2604, %rd2598;
	add.s64 	%rd2606, %rd2605, %rd2521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd2593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1823}, %rd2593;
	}
	shf.r.wrap.b32 	%r1824, %r1823, %r1822, 28;
	shf.r.wrap.b32 	%r1825, %r1822, %r1823, 28;
	mov.b64 	%rd2607, {%r1825, %r1824};
	shf.l.wrap.b32 	%r1826, %r1822, %r1823, 30;
	shf.l.wrap.b32 	%r1827, %r1823, %r1822, 30;
	mov.b64 	%rd2608, {%r1827, %r1826};
	xor.b64  	%rd2609, %rd2608, %rd2607;
	shf.l.wrap.b32 	%r1828, %r1822, %r1823, 25;
	shf.l.wrap.b32 	%r1829, %r1823, %r1822, 25;
	mov.b64 	%rd2610, {%r1829, %r1828};
	xor.b64  	%rd2611, %rd2609, %rd2610;
	xor.b64  	%rd2612, %rd2593, %rd2545;
	xor.b64  	%rd2613, %rd2593, %rd2569;
	and.b64  	%rd2614, %rd2613, %rd2612;
	xor.b64  	%rd2615, %rd2614, %rd2593;
	add.s64 	%rd2616, %rd2605, %rd2615;
	add.s64 	%rd2617, %rd2616, %rd2611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1830,%dummy}, %rd2606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1831}, %rd2606;
	}
	shf.r.wrap.b32 	%r1832, %r1831, %r1830, 14;
	shf.r.wrap.b32 	%r1833, %r1830, %r1831, 14;
	mov.b64 	%rd2618, {%r1833, %r1832};
	shf.r.wrap.b32 	%r1834, %r1831, %r1830, 18;
	shf.r.wrap.b32 	%r1835, %r1830, %r1831, 18;
	mov.b64 	%rd2619, {%r1835, %r1834};
	xor.b64  	%rd2620, %rd2619, %rd2618;
	shf.l.wrap.b32 	%r1836, %r1830, %r1831, 23;
	shf.l.wrap.b32 	%r1837, %r1831, %r1830, 23;
	mov.b64 	%rd2621, {%r1837, %r1836};
	xor.b64  	%rd2622, %rd2620, %rd2621;
	xor.b64  	%rd2623, %rd2582, %rd2558;
	and.b64  	%rd2624, %rd2606, %rd2623;
	xor.b64  	%rd2625, %rd2624, %rd2558;
	add.s64 	%rd2626, %rd2534, %rd2329;
	add.s64 	%rd2627, %rd2626, %rd2750;
	add.s64 	%rd2628, %rd2627, %rd2625;
	add.s64 	%rd2629, %rd2628, %rd2622;
	add.s64 	%rd2630, %rd2629, %rd2545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1838,%dummy}, %rd2617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1839}, %rd2617;
	}
	shf.r.wrap.b32 	%r1840, %r1839, %r1838, 28;
	shf.r.wrap.b32 	%r1841, %r1838, %r1839, 28;
	mov.b64 	%rd2631, {%r1841, %r1840};
	shf.l.wrap.b32 	%r1842, %r1838, %r1839, 30;
	shf.l.wrap.b32 	%r1843, %r1839, %r1838, 30;
	mov.b64 	%rd2632, {%r1843, %r1842};
	xor.b64  	%rd2633, %rd2632, %rd2631;
	shf.l.wrap.b32 	%r1844, %r1838, %r1839, 25;
	shf.l.wrap.b32 	%r1845, %r1839, %r1838, 25;
	mov.b64 	%rd2634, {%r1845, %r1844};
	xor.b64  	%rd2635, %rd2633, %rd2634;
	xor.b64  	%rd2636, %rd2617, %rd2569;
	xor.b64  	%rd2637, %rd2617, %rd2593;
	and.b64  	%rd2638, %rd2637, %rd2636;
	xor.b64  	%rd2639, %rd2638, %rd2617;
	add.s64 	%rd2640, %rd2629, %rd2639;
	add.s64 	%rd2641, %rd2640, %rd2635;
	cvt.u32.u64	%r8, %rd2630;
	shr.u64 	%rd2642, %rd2630, 32;
	cvt.u32.u64	%r9, %rd2642;
	cvt.u32.u64	%r10, %rd2641;
	shr.u64 	%rd2643, %rd2641, 32;
	cvt.u32.u64	%r11, %rd2643;
	shr.u32 	%r1846, %r8, %r5;
	and.b32  	%r1847, %r1846, %r32;
	mul.wide.u32 	%rd2644, %r1847, 4;
	add.s64 	%rd2645, %rd2751, %rd2644;
	and.b32  	%r1848, %r8, 31;
	mov.u32 	%r1849, 1;
	shl.b32 	%r12, %r1849, %r1848;
	ld.global.u32 	%r1850, [%rd2645];
	and.b32  	%r1851, %r1850, %r12;
	setp.eq.s32	%p3, %r1851, 0;
	@%p3 bra 	BB1_30;

	mov.u32 	%r1904, 1;
	ld.param.u64 	%rd2726, [m01700_m04_param_7];
	shr.u32 	%r1852, %r9, %r5;
	and.b32  	%r1853, %r1852, %r32;
	mul.wide.u32 	%rd2646, %r1853, 4;
	add.s64 	%rd2647, %rd2726, %rd2646;
	and.b32  	%r1854, %r9, 31;
	shl.b32 	%r13, %r1904, %r1854;
	ld.global.u32 	%r1856, [%rd2647];
	and.b32  	%r1857, %r1856, %r13;
	setp.eq.s32	%p4, %r1857, 0;
	@%p4 bra 	BB1_30;

	mov.u32 	%r1905, 1;
	ld.param.u64 	%rd2727, [m01700_m04_param_8];
	shr.u32 	%r1858, %r10, %r5;
	and.b32  	%r1859, %r1858, %r32;
	mul.wide.u32 	%rd2648, %r1859, 4;
	add.s64 	%rd2649, %rd2727, %rd2648;
	and.b32  	%r1860, %r10, 31;
	shl.b32 	%r14, %r1905, %r1860;
	ld.global.u32 	%r1862, [%rd2649];
	and.b32  	%r1863, %r1862, %r14;
	setp.eq.s32	%p5, %r1863, 0;
	@%p5 bra 	BB1_30;

	mov.u32 	%r1906, 1;
	ld.param.u64 	%rd2728, [m01700_m04_param_9];
	shr.u32 	%r1864, %r11, %r5;
	and.b32  	%r1865, %r1864, %r32;
	mul.wide.u32 	%rd2650, %r1865, 4;
	add.s64 	%rd2651, %rd2728, %rd2650;
	and.b32  	%r1866, %r11, 31;
	shl.b32 	%r15, %r1906, %r1866;
	ld.global.u32 	%r1868, [%rd2651];
	and.b32  	%r1869, %r1868, %r15;
	setp.eq.s32	%p6, %r1869, 0;
	@%p6 bra 	BB1_30;

	and.b32  	%r1909, %r8, 31;
	mov.u32 	%r1908, 1;
	shl.b32 	%r1907, %r1908, %r1909;
	ld.param.u64 	%rd2729, [m01700_m04_param_10];
	shr.u32 	%r1870, %r8, %r6;
	and.b32  	%r1871, %r1870, %r32;
	mul.wide.u32 	%rd2652, %r1871, 4;
	add.s64 	%rd2653, %rd2729, %rd2652;
	ld.global.u32 	%r1872, [%rd2653];
	and.b32  	%r1873, %r1872, %r1907;
	setp.eq.s32	%p7, %r1873, 0;
	@%p7 bra 	BB1_30;

	ld.param.u64 	%rd2752, [m01700_m04_param_11];
	shr.u32 	%r1874, %r9, %r6;
	and.b32  	%r1875, %r1874, %r32;
	mul.wide.u32 	%rd2654, %r1875, 4;
	add.s64 	%rd2655, %rd2752, %rd2654;
	ld.global.u32 	%r1876, [%rd2655];
	and.b32  	%r1877, %r1876, %r13;
	setp.eq.s32	%p8, %r1877, 0;
	@%p8 bra 	BB1_30;

	ld.param.u64 	%rd2753, [m01700_m04_param_12];
	shr.u32 	%r1878, %r10, %r6;
	and.b32  	%r1879, %r1878, %r32;
	mul.wide.u32 	%rd2656, %r1879, 4;
	add.s64 	%rd2657, %rd2753, %rd2656;
	ld.global.u32 	%r1880, [%rd2657];
	and.b32  	%r1881, %r1880, %r14;
	setp.eq.s32	%p9, %r1881, 0;
	@%p9 bra 	BB1_30;

	ld.param.u64 	%rd2754, [m01700_m04_param_13];
	shr.u32 	%r1882, %r11, %r6;
	and.b32  	%r1883, %r1882, %r32;
	mul.wide.u32 	%rd2658, %r1883, 4;
	add.s64 	%rd2659, %rd2754, %rd2658;
	ld.global.u32 	%r1884, [%rd2659];
	and.b32  	%r1885, %r1884, %r15;
	setp.eq.s32	%p10, %r1885, 0;
	@%p10 bra 	BB1_30;

	setp.eq.s32	%p11, %r37, 0;
	mov.u32 	%r1918, 0;
	mov.u32 	%r1886, -1;
	mov.u32 	%r1917, %r37;
	@%p11 bra 	BB1_24;

BB1_12:
	ld.param.u64 	%rd2755, [m01700_m04_param_15];
	mov.u32 	%r1919, 1;
	shr.u32 	%r18, %r1917, 1;
	add.s32 	%r1920, %r18, %r1918;
	cvt.u64.u32	%rd2660, %r1920;
	add.s64 	%rd94, %rd2660, %rd21;
	shl.b64 	%rd2661, %rd94, 6;
	add.s64 	%rd2662, %rd2755, %rd2661;
	ld.global.u32 	%r20, [%rd2662+28];
	setp.gt.u32	%p12, %r11, %r20;
	@%p12 bra 	BB1_22;

	setp.lt.u32	%p13, %r11, %r20;
	mov.u32 	%r1889, -1;
	@%p13 bra 	BB1_14;
	bra.uni 	BB1_15;

BB1_14:
	mov.u32 	%r1919, %r1889;
	bra.uni 	BB1_22;

BB1_15:
	mov.u32 	%r1919, 1;
	ld.global.u32 	%r21, [%rd2662+24];
	setp.gt.u32	%p14, %r10, %r21;
	@%p14 bra 	BB1_22;

	setp.lt.u32	%p15, %r10, %r21;
	@%p15 bra 	BB1_17;
	bra.uni 	BB1_18;

BB1_17:
	mov.u32 	%r1919, %r1889;
	bra.uni 	BB1_22;

BB1_18:
	mov.u32 	%r1919, 1;
	ld.global.u32 	%r22, [%rd2662+60];
	setp.gt.u32	%p16, %r9, %r22;
	@%p16 bra 	BB1_22;

	setp.lt.u32	%p17, %r9, %r22;
	mov.u32 	%r1919, %r1889;
	@%p17 bra 	BB1_22;

	mov.u32 	%r1919, 1;
	ld.global.u32 	%r23, [%rd2662+56];
	setp.gt.u32	%p18, %r8, %r23;
	@%p18 bra 	BB1_22;

	setp.lt.u32	%p19, %r8, %r23;
	selp.b32	%r1919, -1, 0, %p19;

BB1_22:
	add.s32 	%r1895, %r18, 1;
	setp.gt.s32	%p20, %r1919, 0;
	selp.b32	%r1896, %r1895, 0, %p20;
	add.s32 	%r1918, %r1896, %r1918;
	selp.b32	%r1897, -1, 0, %p20;
	add.s32 	%r1898, %r1897, %r1917;
	shr.u32 	%r1917, %r1898, 1;
	setp.eq.s32	%p21, %r1919, 0;
	@%p21 bra 	BB1_25;

	setp.ne.s32	%p22, %r1917, 0;
	@%p22 bra 	BB1_12;

BB1_24:
	mov.u32 	%r1920, %r1886;

BB1_25:
	setp.eq.s32	%p23, %r1920, -1;
	@%p23 bra 	BB1_30;

	ld.param.u64 	%rd2756, [m01700_m04_param_16];
	ld.param.u32 	%r1902, [m01700_m04_param_32];
	add.s32 	%r29, %r1920, %r1902;
	mul.wide.u32 	%rd2669, %r29, 4;
	add.s64 	%rd2670, %rd2756, %rd2669;
	atom.global.add.u32 	%r1900, [%rd2670], 1;
	setp.ne.s32	%p24, %r1900, 0;
	@%p24 bra 	BB1_30;

	atom.global.add.u32 	%r30, [%rd108], 1;
	setp.lt.u32	%p25, %r30, %r37;
	@%p25 bra 	BB1_29;
	bra.uni 	BB1_28;

BB1_29:
	ld.param.u32 	%r1914, [m01700_m04_param_27];
	ld.param.u64 	%rd2757, [m01700_m04_param_14];
	mul.wide.u32 	%rd2671, %r30, 20;
	add.s64 	%rd2672, %rd2757, %rd2671;
	st.global.u32 	[%rd2672], %r1914;
	st.global.u32 	[%rd2672+4], %r1920;
	st.global.u32 	[%rd2672+8], %r29;
	st.global.u32 	[%rd2672+12], %r1;
	st.global.u32 	[%rd2672+16], %r1916;
	bra.uni 	BB1_30;

BB1_28:
	atom.global.add.u32 	%r1901, [%rd108], -1;

BB1_30:
	ld.param.u32 	%r1903, [m01700_m04_param_30];
	add.s32 	%r1916, %r1916, 1;
	setp.lt.u32	%p26, %r1916, %r1903;
	@%p26 bra 	BB1_3;

BB1_31:
	ret;
}

	// .globl	m01700_m08
.entry m01700_m08(
	.param .u64 .ptr .global .align 4 m01700_m08_param_0,
	.param .u64 .ptr .global .align 4 m01700_m08_param_1,
	.param .u64 .ptr .global .align 4 m01700_m08_param_2,
	.param .u64 .ptr .const .align 4 m01700_m08_param_3,
	.param .u64 .ptr .global .align 1 m01700_m08_param_4,
	.param .u64 .ptr .global .align 1 m01700_m08_param_5,
	.param .u64 .ptr .global .align 4 m01700_m08_param_6,
	.param .u64 .ptr .global .align 4 m01700_m08_param_7,
	.param .u64 .ptr .global .align 4 m01700_m08_param_8,
	.param .u64 .ptr .global .align 4 m01700_m08_param_9,
	.param .u64 .ptr .global .align 4 m01700_m08_param_10,
	.param .u64 .ptr .global .align 4 m01700_m08_param_11,
	.param .u64 .ptr .global .align 4 m01700_m08_param_12,
	.param .u64 .ptr .global .align 4 m01700_m08_param_13,
	.param .u64 .ptr .global .align 4 m01700_m08_param_14,
	.param .u64 .ptr .global .align 4 m01700_m08_param_15,
	.param .u64 .ptr .global .align 4 m01700_m08_param_16,
	.param .u64 .ptr .global .align 4 m01700_m08_param_17,
	.param .u64 .ptr .global .align 1 m01700_m08_param_18,
	.param .u64 .ptr .global .align 4 m01700_m08_param_19,
	.param .u64 .ptr .global .align 4 m01700_m08_param_20,
	.param .u64 .ptr .global .align 4 m01700_m08_param_21,
	.param .u64 .ptr .global .align 4 m01700_m08_param_22,
	.param .u64 .ptr .global .align 4 m01700_m08_param_23,
	.param .u32 m01700_m08_param_24,
	.param .u32 m01700_m08_param_25,
	.param .u32 m01700_m08_param_26,
	.param .u32 m01700_m08_param_27,
	.param .u32 m01700_m08_param_28,
	.param .u32 m01700_m08_param_29,
	.param .u32 m01700_m08_param_30,
	.param .u32 m01700_m08_param_31,
	.param .u32 m01700_m08_param_32,
	.param .u32 m01700_m08_param_33,
	.param .u64 m01700_m08_param_34
)
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<1937>;
	.reg .b64 	%rd<2775>;


	ld.param.u64 	%rd97, [m01700_m08_param_0];
	ld.param.u64 	%rd110, [m01700_m08_param_19];
	ld.param.u32 	%r32, [m01700_m08_param_24];
	ld.param.u32 	%r33, [m01700_m08_param_25];
	ld.param.u32 	%r34, [m01700_m08_param_26];
	ld.param.u32 	%r36, [m01700_m08_param_30];
	ld.param.u32 	%r37, [m01700_m08_param_31];
	ld.param.u32 	%r38, [m01700_m08_param_32];
	ld.param.u64 	%rd111, [m01700_m08_param_34];
	mov.b32	%r39, %envreg3;
	mov.u32 	%r40, %ctaid.x;
	mov.u32 	%r41, %ntid.x;
	mad.lo.s32 	%r42, %r40, %r41, %r39;
	mov.u32 	%r43, %tid.x;
	add.s32 	%r1, %r42, %r43;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd111;
	@%p1 bra 	BB2_31;

	setp.eq.s32	%p2, %r36, 0;
	@%p2 bra 	BB2_31;

	mul.lo.s64 	%rd112, %rd1, 260;
	add.s64 	%rd113, %rd97, %rd112;
	ld.global.u32 	%r2, [%rd113];
	ld.global.u32 	%r3, [%rd113+4];
	ld.global.u32 	%r45, [%rd113+8];
	ld.global.u32 	%r46, [%rd113+12];
	mov.b64	%rd114, {%r46, %r45};
	ld.global.u32 	%r47, [%rd113+16];
	ld.global.u32 	%r48, [%rd113+20];
	mov.b64	%rd2, {%r48, %r47};
	ld.global.u32 	%r49, [%rd113+24];
	ld.global.u32 	%r50, [%rd113+28];
	mov.b64	%rd115, {%r50, %r49};
	ld.global.u32 	%r51, [%rd113+60];
	mov.u32 	%r1932, 0;
	mov.b64	%rd3, {%r51, %r1932};
	mov.u64 	%rd116, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r52,%dummy}, %rd116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r53}, %rd116;
	}
	shf.r.wrap.b32 	%r54, %r53, %r52, 18;
	shf.r.wrap.b32 	%r55, %r52, %r53, 18;
	mov.b64 	%rd117, {%r55, %r54};
	shf.r.wrap.b32 	%r56, %r53, %r52, 14;
	shf.r.wrap.b32 	%r57, %r52, %r53, 14;
	mov.b64 	%rd118, {%r57, %r56};
	xor.b64  	%rd119, %rd117, %rd118;
	shf.l.wrap.b32 	%r58, %r52, %r53, 23;
	shf.l.wrap.b32 	%r59, %r53, %r52, 23;
	mov.b64 	%rd120, {%r59, %r58};
	xor.b64  	%rd4, %rd119, %rd120;
	ld.const.u64 	%rd121, [k_sha512];
	add.s64 	%rd5, %rd121, 8891960152096595636;
	mov.u64 	%rd122, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r60}, %rd122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r61,%dummy}, %rd122;
	}
	shf.l.wrap.b32 	%r62, %r61, %r60, 30;
	shf.l.wrap.b32 	%r63, %r60, %r61, 30;
	mov.b64 	%rd123, {%r63, %r62};
	shf.r.wrap.b32 	%r64, %r60, %r61, 28;
	shf.r.wrap.b32 	%r65, %r61, %r60, 28;
	mov.b64 	%rd124, {%r65, %r64};
	xor.b64  	%rd125, %rd123, %rd124;
	shf.l.wrap.b32 	%r66, %r61, %r60, 25;
	shf.l.wrap.b32 	%r67, %r60, %r61, 25;
	mov.b64 	%rd126, {%r67, %r66};
	xor.b64  	%rd6, %rd125, %rd126;
	ld.const.u64 	%rd127, [k_sha512+8];
	add.s64 	%rd128, %rd114, %rd127;
	add.s64 	%rd7, %rd128, 2270897969802886507;
	ld.const.u64 	%rd129, [k_sha512+16];
	add.s64 	%rd130, %rd2, %rd129;
	add.s64 	%rd8, %rd130, -7276294671716946913;
	ld.const.u64 	%rd131, [k_sha512+24];
	add.s64 	%rd132, %rd115, %rd131;
	add.s64 	%rd9, %rd132, 5840696475078001361;
	and.b32  	%r5, %r33, 31;
	and.b32  	%r6, %r34, 31;
	cvt.u64.u32	%rd22, %r38;
	mov.u64 	%rd133, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r68}, %rd133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r69,%dummy}, %rd133;
	}
	shf.l.wrap.b32 	%r70, %r69, %r68, 3;
	shf.l.wrap.b32 	%r71, %r68, %r69, 3;
	mov.b64 	%rd134, {%r71, %r70};
	shf.r.wrap.b32 	%r72, %r68, %r69, 19;
	shf.r.wrap.b32 	%r73, %r69, %r68, 19;
	mov.b64 	%rd135, {%r73, %r72};
	xor.b64  	%rd23, %rd135, %rd134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r74,%dummy}, %rd114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r75}, %rd114;
	}
	shf.r.wrap.b32 	%r76, %r75, %r74, 1;
	shf.r.wrap.b32 	%r77, %r74, %r75, 1;
	mov.b64 	%rd136, {%r77, %r76};
	shf.r.wrap.b32 	%r78, %r75, %r74, 8;
	shf.r.wrap.b32 	%r79, %r74, %r75, 8;
	mov.b64 	%rd137, {%r79, %r78};
	shr.u64 	%rd138, %rd114, 7;
	xor.b64  	%rd139, %rd136, %rd138;
	xor.b64  	%rd24, %rd139, %rd137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r80,%dummy}, %rd3;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r81}, %rd3;
	}
	shf.r.wrap.b32 	%r82, %r81, %r80, 19;
	shf.r.wrap.b32 	%r83, %r80, %r81, 19;
	mov.b64 	%rd140, {%r83, %r82};
	shf.l.wrap.b32 	%r84, %r80, %r81, 3;
	shf.l.wrap.b32 	%r85, %r81, %r80, 3;
	mov.b64 	%rd141, {%r85, %r84};
	shr.u64 	%rd142, %rd3, 6;
	xor.b64  	%rd143, %rd140, %rd142;
	xor.b64  	%rd144, %rd143, %rd141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r86,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r87}, %rd2;
	}
	shf.r.wrap.b32 	%r88, %r87, %r86, 1;
	shf.r.wrap.b32 	%r89, %r86, %r87, 1;
	mov.b64 	%rd145, {%r89, %r88};
	shf.r.wrap.b32 	%r90, %r87, %r86, 8;
	shf.r.wrap.b32 	%r91, %r86, %r87, 8;
	mov.b64 	%rd146, {%r91, %r90};
	shr.u64 	%rd147, %rd2, 7;
	xor.b64  	%rd148, %rd145, %rd147;
	xor.b64  	%rd149, %rd148, %rd146;
	add.s64 	%rd150, %rd114, %rd144;
	add.s64 	%rd25, %rd150, %rd149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r92,%dummy}, %rd115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r93}, %rd115;
	}
	shf.r.wrap.b32 	%r94, %r93, %r92, 1;
	shf.r.wrap.b32 	%r95, %r92, %r93, 1;
	mov.b64 	%rd151, {%r95, %r94};
	shf.r.wrap.b32 	%r96, %r93, %r92, 8;
	shf.r.wrap.b32 	%r97, %r92, %r93, 8;
	mov.b64 	%rd152, {%r97, %r96};
	shr.u64 	%rd153, %rd115, 7;
	xor.b64  	%rd154, %rd151, %rd153;
	xor.b64  	%rd26, %rd154, %rd152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r98,%dummy}, %rd25;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r99}, %rd25;
	}
	shf.r.wrap.b32 	%r100, %r99, %r98, 19;
	shf.r.wrap.b32 	%r101, %r98, %r99, 19;
	mov.b64 	%rd155, {%r101, %r100};
	shf.l.wrap.b32 	%r102, %r98, %r99, 3;
	shf.l.wrap.b32 	%r103, %r99, %r98, 3;
	mov.b64 	%rd156, {%r103, %r102};
	shr.u64 	%rd157, %rd25, 6;
	xor.b64  	%rd158, %rd155, %rd157;
	xor.b64  	%rd159, %rd158, %rd156;
	shf.r.wrap.b32 	%r104, %r68, %r69, 8;
	shf.r.wrap.b32 	%r105, %r69, %r68, 8;
	mov.b64 	%rd160, {%r105, %r104};
	shf.r.wrap.b32 	%r106, %r68, %r69, 1;
	shf.r.wrap.b32 	%r107, %r69, %r68, 1;
	mov.b64 	%rd161, {%r107, %r106};
	xor.b64  	%rd27, %rd161, %rd160;
	add.s64 	%rd162, %rd115, %rd159;
	add.s64 	%rd28, %rd162, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r108,%dummy}, %rd28;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r109}, %rd28;
	}
	shf.r.wrap.b32 	%r110, %r109, %r108, 19;
	shf.r.wrap.b32 	%r111, %r108, %r109, 19;
	mov.b64 	%rd163, {%r111, %r110};
	shf.l.wrap.b32 	%r112, %r108, %r109, 3;
	shf.l.wrap.b32 	%r113, %r109, %r108, 3;
	mov.b64 	%rd164, {%r113, %r112};
	shr.u64 	%rd165, %rd28, 6;
	xor.b64  	%rd166, %rd163, %rd165;
	xor.b64  	%rd167, %rd166, %rd164;
	add.s64 	%rd29, %rd167, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r114,%dummy}, %rd29;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r115}, %rd29;
	}
	shf.r.wrap.b32 	%r116, %r115, %r114, 19;
	shf.r.wrap.b32 	%r117, %r114, %r115, 19;
	mov.b64 	%rd168, {%r117, %r116};
	shf.l.wrap.b32 	%r118, %r114, %r115, 3;
	shf.l.wrap.b32 	%r119, %r115, %r114, 3;
	mov.b64 	%rd169, {%r119, %r118};
	shr.u64 	%rd170, %rd29, 6;
	xor.b64  	%rd171, %rd168, %rd170;
	xor.b64  	%rd30, %rd171, %rd169;
	shf.r.wrap.b32 	%r120, %r81, %r80, 1;
	shf.r.wrap.b32 	%r121, %r80, %r81, 1;
	mov.b64 	%rd172, {%r121, %r120};
	shf.r.wrap.b32 	%r122, %r81, %r80, 8;
	shf.r.wrap.b32 	%r123, %r80, %r81, 8;
	mov.b64 	%rd173, {%r123, %r122};
	shr.u64 	%rd174, %rd3, 7;
	xor.b64  	%rd175, %rd172, %rd174;
	xor.b64  	%rd31, %rd175, %rd173;
	shf.r.wrap.b32 	%r124, %r99, %r98, 1;
	shf.r.wrap.b32 	%r125, %r98, %r99, 1;
	mov.b64 	%rd176, {%r125, %r124};
	shf.r.wrap.b32 	%r126, %r99, %r98, 8;
	shf.r.wrap.b32 	%r127, %r98, %r99, 8;
	mov.b64 	%rd177, {%r127, %r126};
	shr.u64 	%rd178, %rd25, 7;
	xor.b64  	%rd179, %rd176, %rd178;
	xor.b64  	%rd48, %rd179, %rd177;
	shf.r.wrap.b32 	%r128, %r109, %r108, 1;
	shf.r.wrap.b32 	%r129, %r108, %r109, 1;
	mov.b64 	%rd180, {%r129, %r128};
	shf.r.wrap.b32 	%r130, %r109, %r108, 8;
	shf.r.wrap.b32 	%r131, %r108, %r109, 8;
	mov.b64 	%rd181, {%r131, %r130};
	shr.u64 	%rd182, %rd28, 7;
	xor.b64  	%rd183, %rd180, %rd182;
	xor.b64  	%rd49, %rd183, %rd181;
	shf.r.wrap.b32 	%r132, %r115, %r114, 1;
	shf.r.wrap.b32 	%r133, %r114, %r115, 1;
	mov.b64 	%rd184, {%r133, %r132};
	shf.r.wrap.b32 	%r134, %r115, %r114, 8;
	shf.r.wrap.b32 	%r135, %r114, %r115, 8;
	mov.b64 	%rd185, {%r135, %r134};
	shr.u64 	%rd186, %rd29, 7;
	xor.b64  	%rd187, %rd184, %rd186;
	xor.b64  	%rd50, %rd187, %rd185;

BB2_3:
	mov.u32 	%r1931, 0;
	mov.b64	%rd2774, {%r51, %r1931};
	ld.param.u64 	%rd2766, [m01700_m08_param_6];
	ld.const.u64 	%rd2765, [k_sha512+608];
	ld.const.u64 	%rd2764, [k_sha512+600];
	ld.const.u64 	%rd2763, [k_sha512+592];
	ld.const.u64 	%rd2762, [k_sha512+584];
	ld.const.u64 	%rd2761, [k_sha512+576];
	ld.const.u64 	%rd2760, [k_sha512+568];
	ld.const.u64 	%rd2759, [k_sha512+560];
	ld.const.u64 	%rd2758, [k_sha512+552];
	ld.const.u64 	%rd2757, [k_sha512+544];
	ld.const.u64 	%rd2756, [k_sha512+536];
	ld.const.u64 	%rd2755, [k_sha512+528];
	ld.const.u64 	%rd2754, [k_sha512+520];
	ld.const.u64 	%rd2753, [k_sha512+512];
	ld.const.u64 	%rd2752, [k_sha512+504];
	ld.const.u64 	%rd2751, [k_sha512+496];
	ld.const.u64 	%rd2750, [k_sha512+488];
	ld.const.u64 	%rd2749, [k_sha512+480];
	ld.const.u64 	%rd2748, [k_sha512+472];
	ld.const.u64 	%rd2747, [k_sha512+464];
	ld.const.u64 	%rd2746, [k_sha512+456];
	ld.const.u64 	%rd2745, [k_sha512+448];
	ld.const.u64 	%rd2744, [k_sha512+440];
	ld.const.u64 	%rd2740, [k_sha512+432];
	ld.const.u64 	%rd2739, [k_sha512+424];
	ld.const.u64 	%rd2738, [k_sha512+416];
	ld.const.u64 	%rd2737, [k_sha512+408];
	ld.const.u64 	%rd2736, [k_sha512+400];
	ld.const.u64 	%rd2735, [k_sha512+392];
	ld.const.u64 	%rd2734, [k_sha512+384];
	ld.const.u64 	%rd2733, [k_sha512+376];
	ld.const.u64 	%rd2732, [k_sha512+368];
	ld.const.u64 	%rd2731, [k_sha512+360];
	ld.const.u64 	%rd2730, [k_sha512+352];
	ld.const.u64 	%rd2729, [k_sha512+344];
	ld.const.u64 	%rd2728, [k_sha512+336];
	ld.const.u64 	%rd2727, [k_sha512+328];
	ld.const.u64 	%rd2726, [k_sha512+320];
	ld.const.u64 	%rd2725, [k_sha512+312];
	ld.const.u64 	%rd2724, [k_sha512+304];
	ld.const.u64 	%rd2723, [k_sha512+296];
	ld.const.u64 	%rd2722, [k_sha512+288];
	ld.const.u64 	%rd2721, [k_sha512+280];
	ld.const.u64 	%rd2720, [k_sha512+272];
	ld.const.u64 	%rd2719, [k_sha512+264];
	ld.const.u64 	%rd2718, [k_sha512+256];
	ld.const.u64 	%rd2717, [k_sha512+248];
	ld.const.u64 	%rd2716, [k_sha512+240];
	ld.const.u64 	%rd2715, [k_sha512+232];
	ld.const.u64 	%rd2714, [k_sha512+224];
	ld.const.u64 	%rd2713, [k_sha512+216];
	ld.const.u64 	%rd2712, [k_sha512+208];
	ld.const.u64 	%rd2711, [k_sha512+200];
	ld.const.u64 	%rd2710, [k_sha512+192];
	ld.const.u64 	%rd2709, [k_sha512+184];
	ld.const.u64 	%rd2708, [k_sha512+176];
	ld.const.u64 	%rd2707, [k_sha512+168];
	ld.const.u64 	%rd2706, [k_sha512+160];
	ld.const.u64 	%rd2705, [k_sha512+152];
	ld.const.u64 	%rd2704, [k_sha512+144];
	ld.const.u64 	%rd2703, [k_sha512+136];
	ld.const.u64 	%rd2702, [k_sha512+128];
	ld.const.u64 	%rd2701, [k_sha512+120];
	ld.const.u64 	%rd2700, [k_sha512+112];
	ld.const.u64 	%rd2699, [k_sha512+104];
	ld.const.u64 	%rd2698, [k_sha512+96];
	ld.const.u64 	%rd2697, [k_sha512+88];
	ld.const.u64 	%rd2696, [k_sha512+80];
	ld.const.u64 	%rd2695, [k_sha512+72];
	ld.const.u64 	%rd2694, [k_sha512+64];
	ld.const.u64 	%rd2693, [k_sha512+56];
	ld.const.u64 	%rd2692, [k_sha512+48];
	ld.const.u64 	%rd2691, [k_sha512+40];
	ld.const.u64 	%rd2690, [k_sha512+32];
	ld.param.u64 	%rd2689, [m01700_m08_param_3];
	mul.wide.u32 	%rd188, %r1932, 4;
	add.s64 	%rd189, %rd2689, %rd188;
	ld.const.u32 	%r136, [%rd189];
	or.b32  	%r137, %r136, %r2;
	mov.b64	%rd190, {%r3, %r137};
	add.s64 	%rd191, %rd5, %rd190;
	add.s64 	%rd192, %rd191, %rd4;
	add.s64 	%rd193, %rd192, -6534734903238641935;
	add.s64 	%rd194, %rd192, %rd6;
	add.s64 	%rd195, %rd194, 4210837510808201515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r138,%dummy}, %rd193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r139}, %rd193;
	}
	shf.r.wrap.b32 	%r140, %r139, %r138, 14;
	shf.r.wrap.b32 	%r141, %r138, %r139, 14;
	mov.b64 	%rd196, {%r141, %r140};
	shf.r.wrap.b32 	%r142, %r139, %r138, 18;
	shf.r.wrap.b32 	%r143, %r138, %r139, 18;
	mov.b64 	%rd197, {%r143, %r142};
	xor.b64  	%rd198, %rd197, %rd196;
	shf.l.wrap.b32 	%r144, %r138, %r139, 23;
	shf.l.wrap.b32 	%r145, %r139, %r138, 23;
	mov.b64 	%rd199, {%r145, %r144};
	xor.b64  	%rd200, %rd198, %rd199;
	and.b64  	%rd201, %rd193, -3887949035690463538;
	xor.b64  	%rd202, %rd201, -7276294671716946913;
	add.s64 	%rd203, %rd7, %rd202;
	add.s64 	%rd204, %rd203, %rd200;
	add.s64 	%rd205, %rd204, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r146,%dummy}, %rd195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r147}, %rd195;
	}
	shf.r.wrap.b32 	%r148, %r147, %r146, 28;
	shf.r.wrap.b32 	%r149, %r146, %r147, 28;
	mov.b64 	%rd206, {%r149, %r148};
	shf.l.wrap.b32 	%r150, %r146, %r147, 30;
	shf.l.wrap.b32 	%r151, %r147, %r146, 30;
	mov.b64 	%rd207, {%r151, %r150};
	xor.b64  	%rd208, %rd207, %rd206;
	shf.l.wrap.b32 	%r152, %r146, %r147, 25;
	shf.l.wrap.b32 	%r153, %r147, %r146, 25;
	mov.b64 	%rd209, {%r153, %r152};
	xor.b64  	%rd210, %rd208, %rd209;
	xor.b64  	%rd211, %rd195, -4942790177534073029;
	xor.b64  	%rd212, %rd195, 7640891576956012808;
	and.b64  	%rd213, %rd212, %rd211;
	xor.b64  	%rd214, %rd213, %rd195;
	add.s64 	%rd215, %rd204, %rd214;
	add.s64 	%rd216, %rd215, %rd210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r154,%dummy}, %rd205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r155}, %rd205;
	}
	shf.r.wrap.b32 	%r156, %r155, %r154, 14;
	shf.r.wrap.b32 	%r157, %r154, %r155, 14;
	mov.b64 	%rd217, {%r157, %r156};
	shf.r.wrap.b32 	%r158, %r155, %r154, 18;
	shf.r.wrap.b32 	%r159, %r154, %r155, 18;
	mov.b64 	%rd218, {%r159, %r158};
	xor.b64  	%rd219, %rd218, %rd217;
	shf.l.wrap.b32 	%r160, %r154, %r155, 23;
	shf.l.wrap.b32 	%r161, %r155, %r154, 23;
	mov.b64 	%rd220, {%r161, %r160};
	xor.b64  	%rd221, %rd219, %rd220;
	xor.b64  	%rd222, %rd193, 5840696475078001361;
	and.b64  	%rd223, %rd205, %rd222;
	xor.b64  	%rd224, %rd223, 5840696475078001361;
	add.s64 	%rd225, %rd8, %rd224;
	add.s64 	%rd226, %rd225, %rd221;
	add.s64 	%rd227, %rd226, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r162,%dummy}, %rd216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r163}, %rd216;
	}
	shf.r.wrap.b32 	%r164, %r163, %r162, 28;
	shf.r.wrap.b32 	%r165, %r162, %r163, 28;
	mov.b64 	%rd228, {%r165, %r164};
	shf.l.wrap.b32 	%r166, %r162, %r163, 30;
	shf.l.wrap.b32 	%r167, %r163, %r162, 30;
	mov.b64 	%rd229, {%r167, %r166};
	xor.b64  	%rd230, %rd229, %rd228;
	shf.l.wrap.b32 	%r168, %r162, %r163, 25;
	shf.l.wrap.b32 	%r169, %r163, %r162, 25;
	mov.b64 	%rd231, {%r169, %r168};
	xor.b64  	%rd232, %rd230, %rd231;
	xor.b64  	%rd233, %rd216, 7640891576956012808;
	xor.b64  	%rd234, %rd216, %rd195;
	and.b64  	%rd235, %rd234, %rd233;
	xor.b64  	%rd236, %rd235, %rd216;
	add.s64 	%rd237, %rd226, %rd236;
	add.s64 	%rd238, %rd237, %rd232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r170,%dummy}, %rd227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r171}, %rd227;
	}
	shf.r.wrap.b32 	%r172, %r171, %r170, 14;
	shf.r.wrap.b32 	%r173, %r170, %r171, 14;
	mov.b64 	%rd239, {%r173, %r172};
	shf.r.wrap.b32 	%r174, %r171, %r170, 18;
	shf.r.wrap.b32 	%r175, %r170, %r171, 18;
	mov.b64 	%rd240, {%r175, %r174};
	xor.b64  	%rd241, %rd240, %rd239;
	shf.l.wrap.b32 	%r176, %r170, %r171, 23;
	shf.l.wrap.b32 	%r177, %r171, %r170, 23;
	mov.b64 	%rd242, {%r177, %r176};
	xor.b64  	%rd243, %rd241, %rd242;
	xor.b64  	%rd244, %rd205, %rd193;
	and.b64  	%rd245, %rd227, %rd244;
	xor.b64  	%rd246, %rd245, %rd193;
	add.s64 	%rd247, %rd9, %rd246;
	add.s64 	%rd248, %rd247, %rd243;
	add.s64 	%rd249, %rd248, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r178,%dummy}, %rd238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r179}, %rd238;
	}
	shf.r.wrap.b32 	%r180, %r179, %r178, 28;
	shf.r.wrap.b32 	%r181, %r178, %r179, 28;
	mov.b64 	%rd250, {%r181, %r180};
	shf.l.wrap.b32 	%r182, %r178, %r179, 30;
	shf.l.wrap.b32 	%r183, %r179, %r178, 30;
	mov.b64 	%rd251, {%r183, %r182};
	xor.b64  	%rd252, %rd251, %rd250;
	shf.l.wrap.b32 	%r184, %r178, %r179, 25;
	shf.l.wrap.b32 	%r185, %r179, %r178, 25;
	mov.b64 	%rd253, {%r185, %r184};
	xor.b64  	%rd254, %rd252, %rd253;
	xor.b64  	%rd255, %rd238, %rd195;
	xor.b64  	%rd256, %rd238, %rd216;
	and.b64  	%rd257, %rd256, %rd255;
	xor.b64  	%rd258, %rd257, %rd238;
	add.s64 	%rd259, %rd248, %rd258;
	add.s64 	%rd260, %rd259, %rd254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r186,%dummy}, %rd249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r187}, %rd249;
	}
	shf.r.wrap.b32 	%r188, %r187, %r186, 14;
	shf.r.wrap.b32 	%r189, %r186, %r187, 14;
	mov.b64 	%rd261, {%r189, %r188};
	shf.r.wrap.b32 	%r190, %r187, %r186, 18;
	shf.r.wrap.b32 	%r191, %r186, %r187, 18;
	mov.b64 	%rd262, {%r191, %r190};
	xor.b64  	%rd263, %rd262, %rd261;
	shf.l.wrap.b32 	%r192, %r186, %r187, 23;
	shf.l.wrap.b32 	%r193, %r187, %r186, 23;
	mov.b64 	%rd264, {%r193, %r192};
	xor.b64  	%rd265, %rd263, %rd264;
	xor.b64  	%rd266, %rd227, %rd205;
	and.b64  	%rd267, %rd249, %rd266;
	xor.b64  	%rd268, %rd267, %rd205;
	add.s64 	%rd269, %rd2690, %rd193;
	add.s64 	%rd270, %rd269, %rd268;
	add.s64 	%rd271, %rd270, %rd265;
	add.s64 	%rd272, %rd271, %rd195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r194,%dummy}, %rd260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r195}, %rd260;
	}
	shf.r.wrap.b32 	%r196, %r195, %r194, 28;
	shf.r.wrap.b32 	%r197, %r194, %r195, 28;
	mov.b64 	%rd273, {%r197, %r196};
	shf.l.wrap.b32 	%r198, %r194, %r195, 30;
	shf.l.wrap.b32 	%r199, %r195, %r194, 30;
	mov.b64 	%rd274, {%r199, %r198};
	xor.b64  	%rd275, %rd274, %rd273;
	shf.l.wrap.b32 	%r200, %r194, %r195, 25;
	shf.l.wrap.b32 	%r201, %r195, %r194, 25;
	mov.b64 	%rd276, {%r201, %r200};
	xor.b64  	%rd277, %rd275, %rd276;
	xor.b64  	%rd278, %rd260, %rd216;
	xor.b64  	%rd279, %rd260, %rd238;
	and.b64  	%rd280, %rd279, %rd278;
	xor.b64  	%rd281, %rd280, %rd260;
	add.s64 	%rd282, %rd271, %rd281;
	add.s64 	%rd283, %rd282, %rd277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r202,%dummy}, %rd272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r203}, %rd272;
	}
	shf.r.wrap.b32 	%r204, %r203, %r202, 14;
	shf.r.wrap.b32 	%r205, %r202, %r203, 14;
	mov.b64 	%rd284, {%r205, %r204};
	shf.r.wrap.b32 	%r206, %r203, %r202, 18;
	shf.r.wrap.b32 	%r207, %r202, %r203, 18;
	mov.b64 	%rd285, {%r207, %r206};
	xor.b64  	%rd286, %rd285, %rd284;
	shf.l.wrap.b32 	%r208, %r202, %r203, 23;
	shf.l.wrap.b32 	%r209, %r203, %r202, 23;
	mov.b64 	%rd287, {%r209, %r208};
	xor.b64  	%rd288, %rd286, %rd287;
	xor.b64  	%rd289, %rd249, %rd227;
	and.b64  	%rd290, %rd272, %rd289;
	xor.b64  	%rd291, %rd290, %rd227;
	add.s64 	%rd292, %rd2691, %rd205;
	add.s64 	%rd293, %rd292, %rd291;
	add.s64 	%rd294, %rd293, %rd288;
	add.s64 	%rd295, %rd294, %rd216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r210,%dummy}, %rd283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r211}, %rd283;
	}
	shf.r.wrap.b32 	%r212, %r211, %r210, 28;
	shf.r.wrap.b32 	%r213, %r210, %r211, 28;
	mov.b64 	%rd296, {%r213, %r212};
	shf.l.wrap.b32 	%r214, %r210, %r211, 30;
	shf.l.wrap.b32 	%r215, %r211, %r210, 30;
	mov.b64 	%rd297, {%r215, %r214};
	xor.b64  	%rd298, %rd297, %rd296;
	shf.l.wrap.b32 	%r216, %r210, %r211, 25;
	shf.l.wrap.b32 	%r217, %r211, %r210, 25;
	mov.b64 	%rd299, {%r217, %r216};
	xor.b64  	%rd300, %rd298, %rd299;
	xor.b64  	%rd301, %rd283, %rd238;
	xor.b64  	%rd302, %rd283, %rd260;
	and.b64  	%rd303, %rd302, %rd301;
	xor.b64  	%rd304, %rd303, %rd283;
	add.s64 	%rd305, %rd294, %rd304;
	add.s64 	%rd306, %rd305, %rd300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r218,%dummy}, %rd295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r219}, %rd295;
	}
	shf.r.wrap.b32 	%r220, %r219, %r218, 14;
	shf.r.wrap.b32 	%r221, %r218, %r219, 14;
	mov.b64 	%rd307, {%r221, %r220};
	shf.r.wrap.b32 	%r222, %r219, %r218, 18;
	shf.r.wrap.b32 	%r223, %r218, %r219, 18;
	mov.b64 	%rd308, {%r223, %r222};
	xor.b64  	%rd309, %rd308, %rd307;
	shf.l.wrap.b32 	%r224, %r218, %r219, 23;
	shf.l.wrap.b32 	%r225, %r219, %r218, 23;
	mov.b64 	%rd310, {%r225, %r224};
	xor.b64  	%rd311, %rd309, %rd310;
	xor.b64  	%rd312, %rd272, %rd249;
	and.b64  	%rd313, %rd295, %rd312;
	xor.b64  	%rd314, %rd313, %rd249;
	add.s64 	%rd315, %rd2692, %rd227;
	add.s64 	%rd316, %rd315, %rd314;
	add.s64 	%rd317, %rd316, %rd311;
	add.s64 	%rd318, %rd317, %rd238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r226,%dummy}, %rd306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r227}, %rd306;
	}
	shf.r.wrap.b32 	%r228, %r227, %r226, 28;
	shf.r.wrap.b32 	%r229, %r226, %r227, 28;
	mov.b64 	%rd319, {%r229, %r228};
	shf.l.wrap.b32 	%r230, %r226, %r227, 30;
	shf.l.wrap.b32 	%r231, %r227, %r226, 30;
	mov.b64 	%rd320, {%r231, %r230};
	xor.b64  	%rd321, %rd320, %rd319;
	shf.l.wrap.b32 	%r232, %r226, %r227, 25;
	shf.l.wrap.b32 	%r233, %r227, %r226, 25;
	mov.b64 	%rd322, {%r233, %r232};
	xor.b64  	%rd323, %rd321, %rd322;
	xor.b64  	%rd324, %rd306, %rd260;
	xor.b64  	%rd325, %rd306, %rd283;
	and.b64  	%rd326, %rd325, %rd324;
	xor.b64  	%rd327, %rd326, %rd306;
	add.s64 	%rd328, %rd317, %rd327;
	add.s64 	%rd329, %rd328, %rd323;
	add.s64 	%rd330, %rd2693, %rd249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r234,%dummy}, %rd318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r235}, %rd318;
	}
	shf.r.wrap.b32 	%r236, %r235, %r234, 14;
	shf.r.wrap.b32 	%r237, %r234, %r235, 14;
	mov.b64 	%rd331, {%r237, %r236};
	shf.r.wrap.b32 	%r238, %r235, %r234, 18;
	shf.r.wrap.b32 	%r239, %r234, %r235, 18;
	mov.b64 	%rd332, {%r239, %r238};
	xor.b64  	%rd333, %rd332, %rd331;
	shf.l.wrap.b32 	%r240, %r234, %r235, 23;
	shf.l.wrap.b32 	%r241, %r235, %r234, 23;
	mov.b64 	%rd334, {%r241, %r240};
	xor.b64  	%rd335, %rd333, %rd334;
	xor.b64  	%rd336, %rd295, %rd272;
	and.b64  	%rd337, %rd318, %rd336;
	xor.b64  	%rd338, %rd337, %rd272;
	add.s64 	%rd339, %rd330, %rd338;
	add.s64 	%rd340, %rd339, %rd335;
	add.s64 	%rd341, %rd340, %rd260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r242,%dummy}, %rd329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r243}, %rd329;
	}
	shf.r.wrap.b32 	%r244, %r243, %r242, 28;
	shf.r.wrap.b32 	%r245, %r242, %r243, 28;
	mov.b64 	%rd342, {%r245, %r244};
	shf.l.wrap.b32 	%r246, %r242, %r243, 30;
	shf.l.wrap.b32 	%r247, %r243, %r242, 30;
	mov.b64 	%rd343, {%r247, %r246};
	xor.b64  	%rd344, %rd343, %rd342;
	shf.l.wrap.b32 	%r248, %r242, %r243, 25;
	shf.l.wrap.b32 	%r249, %r243, %r242, 25;
	mov.b64 	%rd345, {%r249, %r248};
	xor.b64  	%rd346, %rd344, %rd345;
	xor.b64  	%rd347, %rd329, %rd283;
	xor.b64  	%rd348, %rd329, %rd306;
	and.b64  	%rd349, %rd348, %rd347;
	xor.b64  	%rd350, %rd349, %rd329;
	add.s64 	%rd351, %rd340, %rd350;
	add.s64 	%rd352, %rd351, %rd346;
	add.s64 	%rd353, %rd2694, %rd272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r250,%dummy}, %rd341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r251}, %rd341;
	}
	shf.r.wrap.b32 	%r252, %r251, %r250, 14;
	shf.r.wrap.b32 	%r253, %r250, %r251, 14;
	mov.b64 	%rd354, {%r253, %r252};
	shf.r.wrap.b32 	%r254, %r251, %r250, 18;
	shf.r.wrap.b32 	%r255, %r250, %r251, 18;
	mov.b64 	%rd355, {%r255, %r254};
	xor.b64  	%rd356, %rd355, %rd354;
	shf.l.wrap.b32 	%r256, %r250, %r251, 23;
	shf.l.wrap.b32 	%r257, %r251, %r250, 23;
	mov.b64 	%rd357, {%r257, %r256};
	xor.b64  	%rd358, %rd356, %rd357;
	xor.b64  	%rd359, %rd318, %rd295;
	and.b64  	%rd360, %rd341, %rd359;
	xor.b64  	%rd361, %rd360, %rd295;
	add.s64 	%rd362, %rd353, %rd361;
	add.s64 	%rd363, %rd362, %rd358;
	add.s64 	%rd364, %rd363, %rd283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r258,%dummy}, %rd352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r259}, %rd352;
	}
	shf.r.wrap.b32 	%r260, %r259, %r258, 28;
	shf.r.wrap.b32 	%r261, %r258, %r259, 28;
	mov.b64 	%rd365, {%r261, %r260};
	shf.l.wrap.b32 	%r262, %r258, %r259, 30;
	shf.l.wrap.b32 	%r263, %r259, %r258, 30;
	mov.b64 	%rd366, {%r263, %r262};
	xor.b64  	%rd367, %rd366, %rd365;
	shf.l.wrap.b32 	%r264, %r258, %r259, 25;
	shf.l.wrap.b32 	%r265, %r259, %r258, 25;
	mov.b64 	%rd368, {%r265, %r264};
	xor.b64  	%rd369, %rd367, %rd368;
	xor.b64  	%rd370, %rd352, %rd306;
	xor.b64  	%rd371, %rd352, %rd329;
	and.b64  	%rd372, %rd371, %rd370;
	xor.b64  	%rd373, %rd372, %rd352;
	add.s64 	%rd374, %rd363, %rd373;
	add.s64 	%rd375, %rd374, %rd369;
	add.s64 	%rd376, %rd2695, %rd295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r266,%dummy}, %rd364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r267}, %rd364;
	}
	shf.r.wrap.b32 	%r268, %r267, %r266, 14;
	shf.r.wrap.b32 	%r269, %r266, %r267, 14;
	mov.b64 	%rd377, {%r269, %r268};
	shf.r.wrap.b32 	%r270, %r267, %r266, 18;
	shf.r.wrap.b32 	%r271, %r266, %r267, 18;
	mov.b64 	%rd378, {%r271, %r270};
	xor.b64  	%rd379, %rd378, %rd377;
	shf.l.wrap.b32 	%r272, %r266, %r267, 23;
	shf.l.wrap.b32 	%r273, %r267, %r266, 23;
	mov.b64 	%rd380, {%r273, %r272};
	xor.b64  	%rd381, %rd379, %rd380;
	xor.b64  	%rd382, %rd341, %rd318;
	and.b64  	%rd383, %rd364, %rd382;
	xor.b64  	%rd384, %rd383, %rd318;
	add.s64 	%rd385, %rd376, %rd384;
	add.s64 	%rd386, %rd385, %rd381;
	add.s64 	%rd387, %rd386, %rd306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r274,%dummy}, %rd375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r275}, %rd375;
	}
	shf.r.wrap.b32 	%r276, %r275, %r274, 28;
	shf.r.wrap.b32 	%r277, %r274, %r275, 28;
	mov.b64 	%rd388, {%r277, %r276};
	shf.l.wrap.b32 	%r278, %r274, %r275, 30;
	shf.l.wrap.b32 	%r279, %r275, %r274, 30;
	mov.b64 	%rd389, {%r279, %r278};
	xor.b64  	%rd390, %rd389, %rd388;
	shf.l.wrap.b32 	%r280, %r274, %r275, 25;
	shf.l.wrap.b32 	%r281, %r275, %r274, 25;
	mov.b64 	%rd391, {%r281, %r280};
	xor.b64  	%rd392, %rd390, %rd391;
	xor.b64  	%rd393, %rd375, %rd329;
	xor.b64  	%rd394, %rd375, %rd352;
	and.b64  	%rd395, %rd394, %rd393;
	xor.b64  	%rd396, %rd395, %rd375;
	add.s64 	%rd397, %rd386, %rd396;
	add.s64 	%rd398, %rd397, %rd392;
	add.s64 	%rd399, %rd2696, %rd318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r282,%dummy}, %rd387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r283}, %rd387;
	}
	shf.r.wrap.b32 	%r284, %r283, %r282, 14;
	shf.r.wrap.b32 	%r285, %r282, %r283, 14;
	mov.b64 	%rd400, {%r285, %r284};
	shf.r.wrap.b32 	%r286, %r283, %r282, 18;
	shf.r.wrap.b32 	%r287, %r282, %r283, 18;
	mov.b64 	%rd401, {%r287, %r286};
	xor.b64  	%rd402, %rd401, %rd400;
	shf.l.wrap.b32 	%r288, %r282, %r283, 23;
	shf.l.wrap.b32 	%r289, %r283, %r282, 23;
	mov.b64 	%rd403, {%r289, %r288};
	xor.b64  	%rd404, %rd402, %rd403;
	xor.b64  	%rd405, %rd364, %rd341;
	and.b64  	%rd406, %rd387, %rd405;
	xor.b64  	%rd407, %rd406, %rd341;
	add.s64 	%rd408, %rd399, %rd407;
	add.s64 	%rd409, %rd408, %rd404;
	add.s64 	%rd410, %rd409, %rd329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r290,%dummy}, %rd398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r291}, %rd398;
	}
	shf.r.wrap.b32 	%r292, %r291, %r290, 28;
	shf.r.wrap.b32 	%r293, %r290, %r291, 28;
	mov.b64 	%rd411, {%r293, %r292};
	shf.l.wrap.b32 	%r294, %r290, %r291, 30;
	shf.l.wrap.b32 	%r295, %r291, %r290, 30;
	mov.b64 	%rd412, {%r295, %r294};
	xor.b64  	%rd413, %rd412, %rd411;
	shf.l.wrap.b32 	%r296, %r290, %r291, 25;
	shf.l.wrap.b32 	%r297, %r291, %r290, 25;
	mov.b64 	%rd414, {%r297, %r296};
	xor.b64  	%rd415, %rd413, %rd414;
	xor.b64  	%rd416, %rd398, %rd352;
	xor.b64  	%rd417, %rd398, %rd375;
	and.b64  	%rd418, %rd417, %rd416;
	xor.b64  	%rd419, %rd418, %rd398;
	add.s64 	%rd420, %rd409, %rd419;
	add.s64 	%rd421, %rd420, %rd415;
	add.s64 	%rd422, %rd2697, %rd341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r298,%dummy}, %rd410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r299}, %rd410;
	}
	shf.r.wrap.b32 	%r300, %r299, %r298, 14;
	shf.r.wrap.b32 	%r301, %r298, %r299, 14;
	mov.b64 	%rd423, {%r301, %r300};
	shf.r.wrap.b32 	%r302, %r299, %r298, 18;
	shf.r.wrap.b32 	%r303, %r298, %r299, 18;
	mov.b64 	%rd424, {%r303, %r302};
	xor.b64  	%rd425, %rd424, %rd423;
	shf.l.wrap.b32 	%r304, %r298, %r299, 23;
	shf.l.wrap.b32 	%r305, %r299, %r298, 23;
	mov.b64 	%rd426, {%r305, %r304};
	xor.b64  	%rd427, %rd425, %rd426;
	xor.b64  	%rd428, %rd387, %rd364;
	and.b64  	%rd429, %rd410, %rd428;
	xor.b64  	%rd430, %rd429, %rd364;
	add.s64 	%rd431, %rd422, %rd430;
	add.s64 	%rd432, %rd431, %rd427;
	add.s64 	%rd433, %rd432, %rd352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd421;
	}
	shf.r.wrap.b32 	%r308, %r307, %r306, 28;
	shf.r.wrap.b32 	%r309, %r306, %r307, 28;
	mov.b64 	%rd434, {%r309, %r308};
	shf.l.wrap.b32 	%r310, %r306, %r307, 30;
	shf.l.wrap.b32 	%r311, %r307, %r306, 30;
	mov.b64 	%rd435, {%r311, %r310};
	xor.b64  	%rd436, %rd435, %rd434;
	shf.l.wrap.b32 	%r312, %r306, %r307, 25;
	shf.l.wrap.b32 	%r313, %r307, %r306, 25;
	mov.b64 	%rd437, {%r313, %r312};
	xor.b64  	%rd438, %rd436, %rd437;
	xor.b64  	%rd439, %rd421, %rd375;
	xor.b64  	%rd440, %rd421, %rd398;
	and.b64  	%rd441, %rd440, %rd439;
	xor.b64  	%rd442, %rd441, %rd421;
	add.s64 	%rd443, %rd432, %rd442;
	add.s64 	%rd444, %rd443, %rd438;
	add.s64 	%rd445, %rd2698, %rd364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r314,%dummy}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r315}, %rd433;
	}
	shf.r.wrap.b32 	%r316, %r315, %r314, 14;
	shf.r.wrap.b32 	%r317, %r314, %r315, 14;
	mov.b64 	%rd446, {%r317, %r316};
	shf.r.wrap.b32 	%r318, %r315, %r314, 18;
	shf.r.wrap.b32 	%r319, %r314, %r315, 18;
	mov.b64 	%rd447, {%r319, %r318};
	xor.b64  	%rd448, %rd447, %rd446;
	shf.l.wrap.b32 	%r320, %r314, %r315, 23;
	shf.l.wrap.b32 	%r321, %r315, %r314, 23;
	mov.b64 	%rd449, {%r321, %r320};
	xor.b64  	%rd450, %rd448, %rd449;
	xor.b64  	%rd451, %rd410, %rd387;
	and.b64  	%rd452, %rd433, %rd451;
	xor.b64  	%rd453, %rd452, %rd387;
	add.s64 	%rd454, %rd445, %rd453;
	add.s64 	%rd455, %rd454, %rd450;
	add.s64 	%rd456, %rd455, %rd375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r322,%dummy}, %rd444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r323}, %rd444;
	}
	shf.r.wrap.b32 	%r324, %r323, %r322, 28;
	shf.r.wrap.b32 	%r325, %r322, %r323, 28;
	mov.b64 	%rd457, {%r325, %r324};
	shf.l.wrap.b32 	%r326, %r322, %r323, 30;
	shf.l.wrap.b32 	%r327, %r323, %r322, 30;
	mov.b64 	%rd458, {%r327, %r326};
	xor.b64  	%rd459, %rd458, %rd457;
	shf.l.wrap.b32 	%r328, %r322, %r323, 25;
	shf.l.wrap.b32 	%r329, %r323, %r322, 25;
	mov.b64 	%rd460, {%r329, %r328};
	xor.b64  	%rd461, %rd459, %rd460;
	xor.b64  	%rd462, %rd444, %rd398;
	xor.b64  	%rd463, %rd444, %rd421;
	and.b64  	%rd464, %rd463, %rd462;
	xor.b64  	%rd465, %rd464, %rd444;
	add.s64 	%rd466, %rd455, %rd465;
	add.s64 	%rd467, %rd466, %rd461;
	add.s64 	%rd468, %rd2699, %rd387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r330,%dummy}, %rd456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r331}, %rd456;
	}
	shf.r.wrap.b32 	%r332, %r331, %r330, 14;
	shf.r.wrap.b32 	%r333, %r330, %r331, 14;
	mov.b64 	%rd469, {%r333, %r332};
	shf.r.wrap.b32 	%r334, %r331, %r330, 18;
	shf.r.wrap.b32 	%r335, %r330, %r331, 18;
	mov.b64 	%rd470, {%r335, %r334};
	xor.b64  	%rd471, %rd470, %rd469;
	shf.l.wrap.b32 	%r336, %r330, %r331, 23;
	shf.l.wrap.b32 	%r337, %r331, %r330, 23;
	mov.b64 	%rd472, {%r337, %r336};
	xor.b64  	%rd473, %rd471, %rd472;
	xor.b64  	%rd474, %rd433, %rd410;
	and.b64  	%rd475, %rd456, %rd474;
	xor.b64  	%rd476, %rd475, %rd410;
	add.s64 	%rd477, %rd468, %rd476;
	add.s64 	%rd478, %rd477, %rd473;
	add.s64 	%rd479, %rd478, %rd398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r338,%dummy}, %rd467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r339}, %rd467;
	}
	shf.r.wrap.b32 	%r340, %r339, %r338, 28;
	shf.r.wrap.b32 	%r341, %r338, %r339, 28;
	mov.b64 	%rd480, {%r341, %r340};
	shf.l.wrap.b32 	%r342, %r338, %r339, 30;
	shf.l.wrap.b32 	%r343, %r339, %r338, 30;
	mov.b64 	%rd481, {%r343, %r342};
	xor.b64  	%rd482, %rd481, %rd480;
	shf.l.wrap.b32 	%r344, %r338, %r339, 25;
	shf.l.wrap.b32 	%r345, %r339, %r338, 25;
	mov.b64 	%rd483, {%r345, %r344};
	xor.b64  	%rd484, %rd482, %rd483;
	xor.b64  	%rd485, %rd467, %rd421;
	xor.b64  	%rd486, %rd467, %rd444;
	and.b64  	%rd487, %rd486, %rd485;
	xor.b64  	%rd488, %rd487, %rd467;
	add.s64 	%rd489, %rd478, %rd488;
	add.s64 	%rd490, %rd489, %rd484;
	add.s64 	%rd491, %rd2700, %rd410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r346,%dummy}, %rd479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r347}, %rd479;
	}
	shf.r.wrap.b32 	%r348, %r347, %r346, 14;
	shf.r.wrap.b32 	%r349, %r346, %r347, 14;
	mov.b64 	%rd492, {%r349, %r348};
	shf.r.wrap.b32 	%r350, %r347, %r346, 18;
	shf.r.wrap.b32 	%r351, %r346, %r347, 18;
	mov.b64 	%rd493, {%r351, %r350};
	xor.b64  	%rd494, %rd493, %rd492;
	shf.l.wrap.b32 	%r352, %r346, %r347, 23;
	shf.l.wrap.b32 	%r353, %r347, %r346, 23;
	mov.b64 	%rd495, {%r353, %r352};
	xor.b64  	%rd496, %rd494, %rd495;
	xor.b64  	%rd497, %rd456, %rd433;
	and.b64  	%rd498, %rd479, %rd497;
	xor.b64  	%rd499, %rd498, %rd433;
	add.s64 	%rd500, %rd491, %rd499;
	add.s64 	%rd501, %rd500, %rd496;
	add.s64 	%rd502, %rd501, %rd421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd490;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 28;
	shf.r.wrap.b32 	%r357, %r354, %r355, 28;
	mov.b64 	%rd503, {%r357, %r356};
	shf.l.wrap.b32 	%r358, %r354, %r355, 30;
	shf.l.wrap.b32 	%r359, %r355, %r354, 30;
	mov.b64 	%rd504, {%r359, %r358};
	xor.b64  	%rd505, %rd504, %rd503;
	shf.l.wrap.b32 	%r360, %r354, %r355, 25;
	shf.l.wrap.b32 	%r361, %r355, %r354, 25;
	mov.b64 	%rd506, {%r361, %r360};
	xor.b64  	%rd507, %rd505, %rd506;
	xor.b64  	%rd508, %rd490, %rd444;
	xor.b64  	%rd509, %rd490, %rd467;
	and.b64  	%rd510, %rd509, %rd508;
	xor.b64  	%rd511, %rd510, %rd490;
	add.s64 	%rd512, %rd501, %rd511;
	add.s64 	%rd513, %rd512, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r362,%dummy}, %rd502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r363}, %rd502;
	}
	shf.r.wrap.b32 	%r364, %r363, %r362, 14;
	shf.r.wrap.b32 	%r365, %r362, %r363, 14;
	mov.b64 	%rd514, {%r365, %r364};
	shf.r.wrap.b32 	%r366, %r363, %r362, 18;
	shf.r.wrap.b32 	%r367, %r362, %r363, 18;
	mov.b64 	%rd515, {%r367, %r366};
	xor.b64  	%rd516, %rd515, %rd514;
	shf.l.wrap.b32 	%r368, %r362, %r363, 23;
	shf.l.wrap.b32 	%r369, %r363, %r362, 23;
	mov.b64 	%rd517, {%r369, %r368};
	xor.b64  	%rd518, %rd516, %rd517;
	xor.b64  	%rd519, %rd479, %rd456;
	and.b64  	%rd520, %rd502, %rd519;
	xor.b64  	%rd521, %rd520, %rd456;
	add.s64 	%rd522, %rd433, %rd2774;
	add.s64 	%rd523, %rd522, %rd2701;
	add.s64 	%rd524, %rd523, %rd521;
	add.s64 	%rd525, %rd524, %rd518;
	add.s64 	%rd526, %rd525, %rd444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r370,%dummy}, %rd513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r371}, %rd513;
	}
	shf.r.wrap.b32 	%r372, %r371, %r370, 28;
	shf.r.wrap.b32 	%r373, %r370, %r371, 28;
	mov.b64 	%rd527, {%r373, %r372};
	shf.l.wrap.b32 	%r374, %r370, %r371, 30;
	shf.l.wrap.b32 	%r375, %r371, %r370, 30;
	mov.b64 	%rd528, {%r375, %r374};
	xor.b64  	%rd529, %rd528, %rd527;
	shf.l.wrap.b32 	%r376, %r370, %r371, 25;
	shf.l.wrap.b32 	%r377, %r371, %r370, 25;
	mov.b64 	%rd530, {%r377, %r376};
	xor.b64  	%rd531, %rd529, %rd530;
	xor.b64  	%rd532, %rd513, %rd467;
	xor.b64  	%rd533, %rd513, %rd490;
	and.b64  	%rd534, %rd533, %rd532;
	xor.b64  	%rd535, %rd534, %rd513;
	add.s64 	%rd536, %rd525, %rd535;
	add.s64 	%rd537, %rd536, %rd531;
	add.s64 	%rd538, %rd190, %rd23;
	add.s64 	%rd539, %rd538, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r379}, %rd539;
	}
	shf.r.wrap.b32 	%r380, %r379, %r378, 19;
	shf.r.wrap.b32 	%r381, %r378, %r379, 19;
	mov.b64 	%rd540, {%r381, %r380};
	shf.l.wrap.b32 	%r382, %r378, %r379, 3;
	shf.l.wrap.b32 	%r383, %r379, %r378, 3;
	mov.b64 	%rd541, {%r383, %r382};
	shr.u64 	%rd542, %rd539, 6;
	xor.b64  	%rd543, %rd540, %rd542;
	xor.b64  	%rd544, %rd543, %rd541;
	add.s64 	%rd545, %rd2, %rd544;
	add.s64 	%rd546, %rd545, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd546;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 19;
	shf.r.wrap.b32 	%r387, %r384, %r385, 19;
	mov.b64 	%rd547, {%r387, %r386};
	shf.l.wrap.b32 	%r388, %r384, %r385, 3;
	shf.l.wrap.b32 	%r389, %r385, %r384, 3;
	mov.b64 	%rd548, {%r389, %r388};
	shr.u64 	%rd549, %rd546, 6;
	xor.b64  	%rd550, %rd547, %rd549;
	xor.b64  	%rd551, %rd550, %rd548;
	add.s64 	%rd552, %rd551, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r390,%dummy}, %rd552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r391}, %rd552;
	}
	shf.r.wrap.b32 	%r392, %r391, %r390, 19;
	shf.r.wrap.b32 	%r393, %r390, %r391, 19;
	mov.b64 	%rd553, {%r393, %r392};
	shf.l.wrap.b32 	%r394, %r390, %r391, 3;
	shf.l.wrap.b32 	%r395, %r391, %r390, 3;
	mov.b64 	%rd554, {%r395, %r394};
	shr.u64 	%rd555, %rd552, 6;
	xor.b64  	%rd556, %rd553, %rd555;
	xor.b64  	%rd557, %rd556, %rd554;
	add.s64 	%rd558, %rd2774, %rd557;
	add.s64 	%rd559, %rd558, %rd27;
	add.s64 	%rd560, %rd539, %rd30;
	add.s64 	%rd561, %rd560, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r396,%dummy}, %rd559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd559;
	}
	shf.r.wrap.b32 	%r398, %r397, %r396, 19;
	shf.r.wrap.b32 	%r399, %r396, %r397, 19;
	mov.b64 	%rd562, {%r399, %r398};
	shf.l.wrap.b32 	%r400, %r396, %r397, 3;
	shf.l.wrap.b32 	%r401, %r397, %r396, 3;
	mov.b64 	%rd563, {%r401, %r400};
	shr.u64 	%rd564, %rd559, 6;
	xor.b64  	%rd565, %rd562, %rd564;
	xor.b64  	%rd566, %rd565, %rd563;
	add.s64 	%rd567, %rd25, %rd566;
	add.s64 	%rd568, %rd567, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r403}, %rd561;
	}
	shf.r.wrap.b32 	%r404, %r403, %r402, 19;
	shf.r.wrap.b32 	%r405, %r402, %r403, 19;
	mov.b64 	%rd569, {%r405, %r404};
	shf.l.wrap.b32 	%r406, %r402, %r403, 3;
	shf.l.wrap.b32 	%r407, %r403, %r402, 3;
	mov.b64 	%rd570, {%r407, %r406};
	shr.u64 	%rd571, %rd561, 6;
	xor.b64  	%rd572, %rd569, %rd571;
	xor.b64  	%rd573, %rd572, %rd570;
	add.s64 	%rd574, %rd546, %rd573;
	add.s64 	%rd575, %rd574, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd568;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 19;
	shf.r.wrap.b32 	%r411, %r408, %r409, 19;
	mov.b64 	%rd576, {%r411, %r410};
	shf.l.wrap.b32 	%r412, %r408, %r409, 3;
	shf.l.wrap.b32 	%r413, %r409, %r408, 3;
	mov.b64 	%rd577, {%r413, %r412};
	shr.u64 	%rd578, %rd568, 6;
	xor.b64  	%rd579, %rd576, %rd578;
	xor.b64  	%rd580, %rd579, %rd577;
	add.s64 	%rd581, %rd28, %rd580;
	add.s64 	%rd582, %rd581, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r414,%dummy}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r415}, %rd575;
	}
	shf.r.wrap.b32 	%r416, %r415, %r414, 19;
	shf.r.wrap.b32 	%r417, %r414, %r415, 19;
	mov.b64 	%rd583, {%r417, %r416};
	shf.l.wrap.b32 	%r418, %r414, %r415, 3;
	shf.l.wrap.b32 	%r419, %r415, %r414, 3;
	mov.b64 	%rd584, {%r419, %r418};
	shr.u64 	%rd585, %rd575, 6;
	xor.b64  	%rd586, %rd583, %rd585;
	xor.b64  	%rd587, %rd586, %rd584;
	add.s64 	%rd588, %rd552, %rd587;
	add.s64 	%rd589, %rd588, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r420,%dummy}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r421}, %rd582;
	}
	shf.r.wrap.b32 	%r422, %r421, %r420, 19;
	shf.r.wrap.b32 	%r423, %r420, %r421, 19;
	mov.b64 	%rd590, {%r423, %r422};
	shf.l.wrap.b32 	%r424, %r420, %r421, 3;
	shf.l.wrap.b32 	%r425, %r421, %r420, 3;
	mov.b64 	%rd591, {%r425, %r424};
	shr.u64 	%rd592, %rd582, 6;
	xor.b64  	%rd593, %rd590, %rd592;
	xor.b64  	%rd594, %rd593, %rd591;
	add.s64 	%rd595, %rd29, %rd594;
	add.s64 	%rd596, %rd595, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd589;
	}
	shf.r.wrap.b32 	%r428, %r427, %r426, 19;
	shf.r.wrap.b32 	%r429, %r426, %r427, 19;
	mov.b64 	%rd597, {%r429, %r428};
	shf.l.wrap.b32 	%r430, %r426, %r427, 3;
	shf.l.wrap.b32 	%r431, %r427, %r426, 3;
	mov.b64 	%rd598, {%r431, %r430};
	shr.u64 	%rd599, %rd589, 6;
	xor.b64  	%rd600, %rd597, %rd599;
	xor.b64  	%rd601, %rd600, %rd598;
	add.s64 	%rd602, %rd559, %rd601;
	add.s64 	%rd603, %rd602, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r432,%dummy}, %rd596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r433}, %rd596;
	}
	shf.r.wrap.b32 	%r434, %r433, %r432, 19;
	shf.r.wrap.b32 	%r435, %r432, %r433, 19;
	mov.b64 	%rd604, {%r435, %r434};
	shf.l.wrap.b32 	%r436, %r432, %r433, 3;
	shf.l.wrap.b32 	%r437, %r433, %r432, 3;
	mov.b64 	%rd605, {%r437, %r436};
	shr.u64 	%rd606, %rd596, 6;
	xor.b64  	%rd607, %rd604, %rd606;
	xor.b64  	%rd608, %rd607, %rd605;
	add.s64 	%rd609, %rd561, %rd608;
	add.s64 	%rd610, %rd609, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r438,%dummy}, %rd603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r439}, %rd603;
	}
	shf.r.wrap.b32 	%r440, %r439, %r438, 19;
	shf.r.wrap.b32 	%r441, %r438, %r439, 19;
	mov.b64 	%rd611, {%r441, %r440};
	shf.l.wrap.b32 	%r442, %r438, %r439, 3;
	shf.l.wrap.b32 	%r443, %r439, %r438, 3;
	mov.b64 	%rd612, {%r443, %r442};
	shr.u64 	%rd613, %rd603, 6;
	xor.b64  	%rd614, %rd611, %rd613;
	xor.b64  	%rd615, %rd614, %rd612;
	shf.r.wrap.b32 	%r444, %r379, %r378, 1;
	shf.r.wrap.b32 	%r445, %r378, %r379, 1;
	mov.b64 	%rd616, {%r445, %r444};
	shf.r.wrap.b32 	%r446, %r379, %r378, 8;
	shf.r.wrap.b32 	%r447, %r378, %r379, 8;
	mov.b64 	%rd617, {%r447, %r446};
	shr.u64 	%rd618, %rd539, 7;
	xor.b64  	%rd619, %rd616, %rd618;
	xor.b64  	%rd620, %rd619, %rd617;
	add.s64 	%rd621, %rd568, %rd2774;
	add.s64 	%rd622, %rd621, %rd615;
	add.s64 	%rd623, %rd622, %rd620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r448,%dummy}, %rd526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r449}, %rd526;
	}
	shf.r.wrap.b32 	%r450, %r449, %r448, 14;
	shf.r.wrap.b32 	%r451, %r448, %r449, 14;
	mov.b64 	%rd624, {%r451, %r450};
	shf.r.wrap.b32 	%r452, %r449, %r448, 18;
	shf.r.wrap.b32 	%r453, %r448, %r449, 18;
	mov.b64 	%rd625, {%r453, %r452};
	xor.b64  	%rd626, %rd625, %rd624;
	shf.l.wrap.b32 	%r454, %r448, %r449, 23;
	shf.l.wrap.b32 	%r455, %r449, %r448, 23;
	mov.b64 	%rd627, {%r455, %r454};
	xor.b64  	%rd628, %rd626, %rd627;
	xor.b64  	%rd629, %rd479, %rd502;
	and.b64  	%rd630, %rd629, %rd526;
	xor.b64  	%rd631, %rd630, %rd479;
	add.s64 	%rd632, %rd631, %rd456;
	add.s64 	%rd633, %rd632, %rd539;
	add.s64 	%rd634, %rd633, %rd2702;
	add.s64 	%rd635, %rd634, %rd628;
	add.s64 	%rd636, %rd635, %rd467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r456,%dummy}, %rd537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r457}, %rd537;
	}
	shf.r.wrap.b32 	%r458, %r457, %r456, 28;
	shf.r.wrap.b32 	%r459, %r456, %r457, 28;
	mov.b64 	%rd637, {%r459, %r458};
	shf.l.wrap.b32 	%r460, %r456, %r457, 30;
	shf.l.wrap.b32 	%r461, %r457, %r456, 30;
	mov.b64 	%rd638, {%r461, %r460};
	xor.b64  	%rd639, %rd638, %rd637;
	shf.l.wrap.b32 	%r462, %r456, %r457, 25;
	shf.l.wrap.b32 	%r463, %r457, %r456, 25;
	mov.b64 	%rd640, {%r463, %r462};
	xor.b64  	%rd641, %rd639, %rd640;
	xor.b64  	%rd642, %rd537, %rd490;
	xor.b64  	%rd643, %rd537, %rd513;
	and.b64  	%rd644, %rd643, %rd642;
	xor.b64  	%rd645, %rd644, %rd537;
	add.s64 	%rd646, %rd635, %rd645;
	add.s64 	%rd647, %rd646, %rd641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r464,%dummy}, %rd636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd636;
	}
	shf.r.wrap.b32 	%r466, %r465, %r464, 14;
	shf.r.wrap.b32 	%r467, %r464, %r465, 14;
	mov.b64 	%rd648, {%r467, %r466};
	shf.r.wrap.b32 	%r468, %r465, %r464, 18;
	shf.r.wrap.b32 	%r469, %r464, %r465, 18;
	mov.b64 	%rd649, {%r469, %r468};
	xor.b64  	%rd650, %rd649, %rd648;
	shf.l.wrap.b32 	%r470, %r464, %r465, 23;
	shf.l.wrap.b32 	%r471, %r465, %r464, 23;
	mov.b64 	%rd651, {%r471, %r470};
	xor.b64  	%rd652, %rd650, %rd651;
	xor.b64  	%rd653, %rd502, %rd526;
	and.b64  	%rd654, %rd636, %rd653;
	xor.b64  	%rd655, %rd654, %rd502;
	add.s64 	%rd656, %rd25, %rd479;
	add.s64 	%rd657, %rd656, %rd2703;
	add.s64 	%rd658, %rd657, %rd655;
	add.s64 	%rd659, %rd658, %rd652;
	add.s64 	%rd660, %rd659, %rd490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd647;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 28;
	shf.r.wrap.b32 	%r475, %r472, %r473, 28;
	mov.b64 	%rd661, {%r475, %r474};
	shf.l.wrap.b32 	%r476, %r472, %r473, 30;
	shf.l.wrap.b32 	%r477, %r473, %r472, 30;
	mov.b64 	%rd662, {%r477, %r476};
	xor.b64  	%rd663, %rd662, %rd661;
	shf.l.wrap.b32 	%r478, %r472, %r473, 25;
	shf.l.wrap.b32 	%r479, %r473, %r472, 25;
	mov.b64 	%rd664, {%r479, %r478};
	xor.b64  	%rd665, %rd663, %rd664;
	xor.b64  	%rd666, %rd647, %rd513;
	xor.b64  	%rd667, %rd647, %rd537;
	and.b64  	%rd668, %rd667, %rd666;
	xor.b64  	%rd669, %rd668, %rd647;
	add.s64 	%rd670, %rd659, %rd669;
	add.s64 	%rd671, %rd670, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r480,%dummy}, %rd660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r481}, %rd660;
	}
	shf.r.wrap.b32 	%r482, %r481, %r480, 14;
	shf.r.wrap.b32 	%r483, %r480, %r481, 14;
	mov.b64 	%rd672, {%r483, %r482};
	shf.r.wrap.b32 	%r484, %r481, %r480, 18;
	shf.r.wrap.b32 	%r485, %r480, %r481, 18;
	mov.b64 	%rd673, {%r485, %r484};
	xor.b64  	%rd674, %rd673, %rd672;
	shf.l.wrap.b32 	%r486, %r480, %r481, 23;
	shf.l.wrap.b32 	%r487, %r481, %r480, 23;
	mov.b64 	%rd675, {%r487, %r486};
	xor.b64  	%rd676, %rd674, %rd675;
	xor.b64  	%rd677, %rd636, %rd526;
	and.b64  	%rd678, %rd660, %rd677;
	xor.b64  	%rd679, %rd678, %rd526;
	add.s64 	%rd680, %rd546, %rd502;
	add.s64 	%rd681, %rd680, %rd2704;
	add.s64 	%rd682, %rd681, %rd679;
	add.s64 	%rd683, %rd682, %rd676;
	add.s64 	%rd684, %rd683, %rd513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r488,%dummy}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r489}, %rd671;
	}
	shf.r.wrap.b32 	%r490, %r489, %r488, 28;
	shf.r.wrap.b32 	%r491, %r488, %r489, 28;
	mov.b64 	%rd685, {%r491, %r490};
	shf.l.wrap.b32 	%r492, %r488, %r489, 30;
	shf.l.wrap.b32 	%r493, %r489, %r488, 30;
	mov.b64 	%rd686, {%r493, %r492};
	xor.b64  	%rd687, %rd686, %rd685;
	shf.l.wrap.b32 	%r494, %r488, %r489, 25;
	shf.l.wrap.b32 	%r495, %r489, %r488, 25;
	mov.b64 	%rd688, {%r495, %r494};
	xor.b64  	%rd689, %rd687, %rd688;
	xor.b64  	%rd690, %rd671, %rd537;
	xor.b64  	%rd691, %rd671, %rd647;
	and.b64  	%rd692, %rd691, %rd690;
	xor.b64  	%rd693, %rd692, %rd671;
	add.s64 	%rd694, %rd683, %rd693;
	add.s64 	%rd695, %rd694, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r496,%dummy}, %rd684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r497}, %rd684;
	}
	shf.r.wrap.b32 	%r498, %r497, %r496, 14;
	shf.r.wrap.b32 	%r499, %r496, %r497, 14;
	mov.b64 	%rd696, {%r499, %r498};
	shf.r.wrap.b32 	%r500, %r497, %r496, 18;
	shf.r.wrap.b32 	%r501, %r496, %r497, 18;
	mov.b64 	%rd697, {%r501, %r500};
	xor.b64  	%rd698, %rd697, %rd696;
	shf.l.wrap.b32 	%r502, %r496, %r497, 23;
	shf.l.wrap.b32 	%r503, %r497, %r496, 23;
	mov.b64 	%rd699, {%r503, %r502};
	xor.b64  	%rd700, %rd698, %rd699;
	xor.b64  	%rd701, %rd660, %rd636;
	and.b64  	%rd702, %rd684, %rd701;
	xor.b64  	%rd703, %rd702, %rd636;
	add.s64 	%rd704, %rd28, %rd526;
	add.s64 	%rd705, %rd704, %rd2705;
	add.s64 	%rd706, %rd705, %rd703;
	add.s64 	%rd707, %rd706, %rd700;
	add.s64 	%rd708, %rd707, %rd537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r504,%dummy}, %rd695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r505}, %rd695;
	}
	shf.r.wrap.b32 	%r506, %r505, %r504, 28;
	shf.r.wrap.b32 	%r507, %r504, %r505, 28;
	mov.b64 	%rd709, {%r507, %r506};
	shf.l.wrap.b32 	%r508, %r504, %r505, 30;
	shf.l.wrap.b32 	%r509, %r505, %r504, 30;
	mov.b64 	%rd710, {%r509, %r508};
	xor.b64  	%rd711, %rd710, %rd709;
	shf.l.wrap.b32 	%r510, %r504, %r505, 25;
	shf.l.wrap.b32 	%r511, %r505, %r504, 25;
	mov.b64 	%rd712, {%r511, %r510};
	xor.b64  	%rd713, %rd711, %rd712;
	xor.b64  	%rd714, %rd695, %rd647;
	xor.b64  	%rd715, %rd695, %rd671;
	and.b64  	%rd716, %rd715, %rd714;
	xor.b64  	%rd717, %rd716, %rd695;
	add.s64 	%rd718, %rd707, %rd717;
	add.s64 	%rd719, %rd718, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r512,%dummy}, %rd708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r513}, %rd708;
	}
	shf.r.wrap.b32 	%r514, %r513, %r512, 14;
	shf.r.wrap.b32 	%r515, %r512, %r513, 14;
	mov.b64 	%rd720, {%r515, %r514};
	shf.r.wrap.b32 	%r516, %r513, %r512, 18;
	shf.r.wrap.b32 	%r517, %r512, %r513, 18;
	mov.b64 	%rd721, {%r517, %r516};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.l.wrap.b32 	%r518, %r512, %r513, 23;
	shf.l.wrap.b32 	%r519, %r513, %r512, 23;
	mov.b64 	%rd723, {%r519, %r518};
	xor.b64  	%rd724, %rd722, %rd723;
	xor.b64  	%rd725, %rd684, %rd660;
	and.b64  	%rd726, %rd708, %rd725;
	xor.b64  	%rd727, %rd726, %rd660;
	add.s64 	%rd728, %rd636, %rd552;
	add.s64 	%rd729, %rd728, %rd2706;
	add.s64 	%rd730, %rd729, %rd727;
	add.s64 	%rd731, %rd730, %rd724;
	add.s64 	%rd732, %rd731, %rd647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r521}, %rd719;
	}
	shf.r.wrap.b32 	%r522, %r521, %r520, 28;
	shf.r.wrap.b32 	%r523, %r520, %r521, 28;
	mov.b64 	%rd733, {%r523, %r522};
	shf.l.wrap.b32 	%r524, %r520, %r521, 30;
	shf.l.wrap.b32 	%r525, %r521, %r520, 30;
	mov.b64 	%rd734, {%r525, %r524};
	xor.b64  	%rd735, %rd734, %rd733;
	shf.l.wrap.b32 	%r526, %r520, %r521, 25;
	shf.l.wrap.b32 	%r527, %r521, %r520, 25;
	mov.b64 	%rd736, {%r527, %r526};
	xor.b64  	%rd737, %rd735, %rd736;
	xor.b64  	%rd738, %rd719, %rd671;
	xor.b64  	%rd739, %rd719, %rd695;
	and.b64  	%rd740, %rd739, %rd738;
	xor.b64  	%rd741, %rd740, %rd719;
	add.s64 	%rd742, %rd731, %rd741;
	add.s64 	%rd743, %rd742, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r528,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r529}, %rd732;
	}
	shf.r.wrap.b32 	%r530, %r529, %r528, 14;
	shf.r.wrap.b32 	%r531, %r528, %r529, 14;
	mov.b64 	%rd744, {%r531, %r530};
	shf.r.wrap.b32 	%r532, %r529, %r528, 18;
	shf.r.wrap.b32 	%r533, %r528, %r529, 18;
	mov.b64 	%rd745, {%r533, %r532};
	xor.b64  	%rd746, %rd745, %rd744;
	shf.l.wrap.b32 	%r534, %r528, %r529, 23;
	shf.l.wrap.b32 	%r535, %r529, %r528, 23;
	mov.b64 	%rd747, {%r535, %r534};
	xor.b64  	%rd748, %rd746, %rd747;
	xor.b64  	%rd749, %rd708, %rd684;
	and.b64  	%rd750, %rd732, %rd749;
	xor.b64  	%rd751, %rd750, %rd684;
	add.s64 	%rd752, %rd660, %rd29;
	add.s64 	%rd753, %rd752, %rd2707;
	add.s64 	%rd754, %rd753, %rd751;
	add.s64 	%rd755, %rd754, %rd748;
	add.s64 	%rd756, %rd755, %rd671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r536,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r537}, %rd743;
	}
	shf.r.wrap.b32 	%r538, %r537, %r536, 28;
	shf.r.wrap.b32 	%r539, %r536, %r537, 28;
	mov.b64 	%rd757, {%r539, %r538};
	shf.l.wrap.b32 	%r540, %r536, %r537, 30;
	shf.l.wrap.b32 	%r541, %r537, %r536, 30;
	mov.b64 	%rd758, {%r541, %r540};
	xor.b64  	%rd759, %rd758, %rd757;
	shf.l.wrap.b32 	%r542, %r536, %r537, 25;
	shf.l.wrap.b32 	%r543, %r537, %r536, 25;
	mov.b64 	%rd760, {%r543, %r542};
	xor.b64  	%rd761, %rd759, %rd760;
	xor.b64  	%rd762, %rd743, %rd695;
	xor.b64  	%rd763, %rd743, %rd719;
	and.b64  	%rd764, %rd763, %rd762;
	xor.b64  	%rd765, %rd764, %rd743;
	add.s64 	%rd766, %rd755, %rd765;
	add.s64 	%rd767, %rd766, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r544,%dummy}, %rd756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r545}, %rd756;
	}
	shf.r.wrap.b32 	%r546, %r545, %r544, 14;
	shf.r.wrap.b32 	%r547, %r544, %r545, 14;
	mov.b64 	%rd768, {%r547, %r546};
	shf.r.wrap.b32 	%r548, %r545, %r544, 18;
	shf.r.wrap.b32 	%r549, %r544, %r545, 18;
	mov.b64 	%rd769, {%r549, %r548};
	xor.b64  	%rd770, %rd769, %rd768;
	shf.l.wrap.b32 	%r550, %r544, %r545, 23;
	shf.l.wrap.b32 	%r551, %r545, %r544, 23;
	mov.b64 	%rd771, {%r551, %r550};
	xor.b64  	%rd772, %rd770, %rd771;
	xor.b64  	%rd773, %rd732, %rd708;
	and.b64  	%rd774, %rd756, %rd773;
	xor.b64  	%rd775, %rd774, %rd708;
	add.s64 	%rd776, %rd684, %rd559;
	add.s64 	%rd777, %rd776, %rd2708;
	add.s64 	%rd778, %rd777, %rd775;
	add.s64 	%rd779, %rd778, %rd772;
	add.s64 	%rd780, %rd779, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r552,%dummy}, %rd767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r553}, %rd767;
	}
	shf.r.wrap.b32 	%r554, %r553, %r552, 28;
	shf.r.wrap.b32 	%r555, %r552, %r553, 28;
	mov.b64 	%rd781, {%r555, %r554};
	shf.l.wrap.b32 	%r556, %r552, %r553, 30;
	shf.l.wrap.b32 	%r557, %r553, %r552, 30;
	mov.b64 	%rd782, {%r557, %r556};
	xor.b64  	%rd783, %rd782, %rd781;
	shf.l.wrap.b32 	%r558, %r552, %r553, 25;
	shf.l.wrap.b32 	%r559, %r553, %r552, 25;
	mov.b64 	%rd784, {%r559, %r558};
	xor.b64  	%rd785, %rd783, %rd784;
	xor.b64  	%rd786, %rd767, %rd719;
	xor.b64  	%rd787, %rd767, %rd743;
	and.b64  	%rd788, %rd787, %rd786;
	xor.b64  	%rd789, %rd788, %rd767;
	add.s64 	%rd790, %rd779, %rd789;
	add.s64 	%rd791, %rd790, %rd785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r560,%dummy}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r561}, %rd780;
	}
	shf.r.wrap.b32 	%r562, %r561, %r560, 14;
	shf.r.wrap.b32 	%r563, %r560, %r561, 14;
	mov.b64 	%rd792, {%r563, %r562};
	shf.r.wrap.b32 	%r564, %r561, %r560, 18;
	shf.r.wrap.b32 	%r565, %r560, %r561, 18;
	mov.b64 	%rd793, {%r565, %r564};
	xor.b64  	%rd794, %rd793, %rd792;
	shf.l.wrap.b32 	%r566, %r560, %r561, 23;
	shf.l.wrap.b32 	%r567, %r561, %r560, 23;
	mov.b64 	%rd795, {%r567, %r566};
	xor.b64  	%rd796, %rd794, %rd795;
	xor.b64  	%rd797, %rd756, %rd732;
	and.b64  	%rd798, %rd780, %rd797;
	xor.b64  	%rd799, %rd798, %rd732;
	add.s64 	%rd800, %rd708, %rd561;
	add.s64 	%rd801, %rd800, %rd2709;
	add.s64 	%rd802, %rd801, %rd799;
	add.s64 	%rd803, %rd802, %rd796;
	add.s64 	%rd804, %rd803, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r568,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd791;
	}
	shf.r.wrap.b32 	%r570, %r569, %r568, 28;
	shf.r.wrap.b32 	%r571, %r568, %r569, 28;
	mov.b64 	%rd805, {%r571, %r570};
	shf.l.wrap.b32 	%r572, %r568, %r569, 30;
	shf.l.wrap.b32 	%r573, %r569, %r568, 30;
	mov.b64 	%rd806, {%r573, %r572};
	xor.b64  	%rd807, %rd806, %rd805;
	shf.l.wrap.b32 	%r574, %r568, %r569, 25;
	shf.l.wrap.b32 	%r575, %r569, %r568, 25;
	mov.b64 	%rd808, {%r575, %r574};
	xor.b64  	%rd809, %rd807, %rd808;
	xor.b64  	%rd810, %rd791, %rd743;
	xor.b64  	%rd811, %rd791, %rd767;
	and.b64  	%rd812, %rd811, %rd810;
	xor.b64  	%rd813, %rd812, %rd791;
	add.s64 	%rd814, %rd803, %rd813;
	add.s64 	%rd815, %rd814, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r576,%dummy}, %rd804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r577}, %rd804;
	}
	shf.r.wrap.b32 	%r578, %r577, %r576, 14;
	shf.r.wrap.b32 	%r579, %r576, %r577, 14;
	mov.b64 	%rd816, {%r579, %r578};
	shf.r.wrap.b32 	%r580, %r577, %r576, 18;
	shf.r.wrap.b32 	%r581, %r576, %r577, 18;
	mov.b64 	%rd817, {%r581, %r580};
	xor.b64  	%rd818, %rd817, %rd816;
	shf.l.wrap.b32 	%r582, %r576, %r577, 23;
	shf.l.wrap.b32 	%r583, %r577, %r576, 23;
	mov.b64 	%rd819, {%r583, %r582};
	xor.b64  	%rd820, %rd818, %rd819;
	xor.b64  	%rd821, %rd780, %rd756;
	and.b64  	%rd822, %rd804, %rd821;
	xor.b64  	%rd823, %rd822, %rd756;
	add.s64 	%rd824, %rd732, %rd568;
	add.s64 	%rd825, %rd824, %rd2710;
	add.s64 	%rd826, %rd825, %rd823;
	add.s64 	%rd827, %rd826, %rd820;
	add.s64 	%rd828, %rd827, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r584,%dummy}, %rd815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd815;
	}
	shf.r.wrap.b32 	%r586, %r585, %r584, 28;
	shf.r.wrap.b32 	%r587, %r584, %r585, 28;
	mov.b64 	%rd829, {%r587, %r586};
	shf.l.wrap.b32 	%r588, %r584, %r585, 30;
	shf.l.wrap.b32 	%r589, %r585, %r584, 30;
	mov.b64 	%rd830, {%r589, %r588};
	xor.b64  	%rd831, %rd830, %rd829;
	shf.l.wrap.b32 	%r590, %r584, %r585, 25;
	shf.l.wrap.b32 	%r591, %r585, %r584, 25;
	mov.b64 	%rd832, {%r591, %r590};
	xor.b64  	%rd833, %rd831, %rd832;
	xor.b64  	%rd834, %rd815, %rd767;
	xor.b64  	%rd835, %rd815, %rd791;
	and.b64  	%rd836, %rd835, %rd834;
	xor.b64  	%rd837, %rd836, %rd815;
	add.s64 	%rd838, %rd827, %rd837;
	add.s64 	%rd839, %rd838, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r592,%dummy}, %rd828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r593}, %rd828;
	}
	shf.r.wrap.b32 	%r594, %r593, %r592, 14;
	shf.r.wrap.b32 	%r595, %r592, %r593, 14;
	mov.b64 	%rd840, {%r595, %r594};
	shf.r.wrap.b32 	%r596, %r593, %r592, 18;
	shf.r.wrap.b32 	%r597, %r592, %r593, 18;
	mov.b64 	%rd841, {%r597, %r596};
	xor.b64  	%rd842, %rd841, %rd840;
	shf.l.wrap.b32 	%r598, %r592, %r593, 23;
	shf.l.wrap.b32 	%r599, %r593, %r592, 23;
	mov.b64 	%rd843, {%r599, %r598};
	xor.b64  	%rd844, %rd842, %rd843;
	xor.b64  	%rd845, %rd804, %rd780;
	and.b64  	%rd846, %rd828, %rd845;
	xor.b64  	%rd847, %rd846, %rd780;
	add.s64 	%rd848, %rd756, %rd575;
	add.s64 	%rd849, %rd848, %rd2711;
	add.s64 	%rd850, %rd849, %rd847;
	add.s64 	%rd851, %rd850, %rd844;
	add.s64 	%rd852, %rd851, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r600,%dummy}, %rd839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r601}, %rd839;
	}
	shf.r.wrap.b32 	%r602, %r601, %r600, 28;
	shf.r.wrap.b32 	%r603, %r600, %r601, 28;
	mov.b64 	%rd853, {%r603, %r602};
	shf.l.wrap.b32 	%r604, %r600, %r601, 30;
	shf.l.wrap.b32 	%r605, %r601, %r600, 30;
	mov.b64 	%rd854, {%r605, %r604};
	xor.b64  	%rd855, %rd854, %rd853;
	shf.l.wrap.b32 	%r606, %r600, %r601, 25;
	shf.l.wrap.b32 	%r607, %r601, %r600, 25;
	mov.b64 	%rd856, {%r607, %r606};
	xor.b64  	%rd857, %rd855, %rd856;
	xor.b64  	%rd858, %rd839, %rd791;
	xor.b64  	%rd859, %rd839, %rd815;
	and.b64  	%rd860, %rd859, %rd858;
	xor.b64  	%rd861, %rd860, %rd839;
	add.s64 	%rd862, %rd851, %rd861;
	add.s64 	%rd863, %rd862, %rd857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r608,%dummy}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r609}, %rd852;
	}
	shf.r.wrap.b32 	%r610, %r609, %r608, 14;
	shf.r.wrap.b32 	%r611, %r608, %r609, 14;
	mov.b64 	%rd864, {%r611, %r610};
	shf.r.wrap.b32 	%r612, %r609, %r608, 18;
	shf.r.wrap.b32 	%r613, %r608, %r609, 18;
	mov.b64 	%rd865, {%r613, %r612};
	xor.b64  	%rd866, %rd865, %rd864;
	shf.l.wrap.b32 	%r614, %r608, %r609, 23;
	shf.l.wrap.b32 	%r615, %r609, %r608, 23;
	mov.b64 	%rd867, {%r615, %r614};
	xor.b64  	%rd868, %rd866, %rd867;
	xor.b64  	%rd869, %rd828, %rd804;
	and.b64  	%rd870, %rd852, %rd869;
	xor.b64  	%rd871, %rd870, %rd804;
	add.s64 	%rd872, %rd780, %rd582;
	add.s64 	%rd873, %rd872, %rd2712;
	add.s64 	%rd874, %rd873, %rd871;
	add.s64 	%rd875, %rd874, %rd868;
	add.s64 	%rd876, %rd875, %rd791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r616,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r617}, %rd863;
	}
	shf.r.wrap.b32 	%r618, %r617, %r616, 28;
	shf.r.wrap.b32 	%r619, %r616, %r617, 28;
	mov.b64 	%rd877, {%r619, %r618};
	shf.l.wrap.b32 	%r620, %r616, %r617, 30;
	shf.l.wrap.b32 	%r621, %r617, %r616, 30;
	mov.b64 	%rd878, {%r621, %r620};
	xor.b64  	%rd879, %rd878, %rd877;
	shf.l.wrap.b32 	%r622, %r616, %r617, 25;
	shf.l.wrap.b32 	%r623, %r617, %r616, 25;
	mov.b64 	%rd880, {%r623, %r622};
	xor.b64  	%rd881, %rd879, %rd880;
	xor.b64  	%rd882, %rd863, %rd815;
	xor.b64  	%rd883, %rd863, %rd839;
	and.b64  	%rd884, %rd883, %rd882;
	xor.b64  	%rd885, %rd884, %rd863;
	add.s64 	%rd886, %rd875, %rd885;
	add.s64 	%rd887, %rd886, %rd881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r624,%dummy}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r625}, %rd876;
	}
	shf.r.wrap.b32 	%r626, %r625, %r624, 14;
	shf.r.wrap.b32 	%r627, %r624, %r625, 14;
	mov.b64 	%rd888, {%r627, %r626};
	shf.r.wrap.b32 	%r628, %r625, %r624, 18;
	shf.r.wrap.b32 	%r629, %r624, %r625, 18;
	mov.b64 	%rd889, {%r629, %r628};
	xor.b64  	%rd890, %rd889, %rd888;
	shf.l.wrap.b32 	%r630, %r624, %r625, 23;
	shf.l.wrap.b32 	%r631, %r625, %r624, 23;
	mov.b64 	%rd891, {%r631, %r630};
	xor.b64  	%rd892, %rd890, %rd891;
	xor.b64  	%rd893, %rd852, %rd828;
	and.b64  	%rd894, %rd876, %rd893;
	xor.b64  	%rd895, %rd894, %rd828;
	add.s64 	%rd896, %rd804, %rd589;
	add.s64 	%rd897, %rd896, %rd2713;
	add.s64 	%rd898, %rd897, %rd895;
	add.s64 	%rd899, %rd898, %rd892;
	add.s64 	%rd900, %rd899, %rd815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r632,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r633}, %rd887;
	}
	shf.r.wrap.b32 	%r634, %r633, %r632, 28;
	shf.r.wrap.b32 	%r635, %r632, %r633, 28;
	mov.b64 	%rd901, {%r635, %r634};
	shf.l.wrap.b32 	%r636, %r632, %r633, 30;
	shf.l.wrap.b32 	%r637, %r633, %r632, 30;
	mov.b64 	%rd902, {%r637, %r636};
	xor.b64  	%rd903, %rd902, %rd901;
	shf.l.wrap.b32 	%r638, %r632, %r633, 25;
	shf.l.wrap.b32 	%r639, %r633, %r632, 25;
	mov.b64 	%rd904, {%r639, %r638};
	xor.b64  	%rd905, %rd903, %rd904;
	xor.b64  	%rd906, %rd887, %rd839;
	xor.b64  	%rd907, %rd887, %rd863;
	and.b64  	%rd908, %rd907, %rd906;
	xor.b64  	%rd909, %rd908, %rd887;
	add.s64 	%rd910, %rd899, %rd909;
	add.s64 	%rd911, %rd910, %rd905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r640,%dummy}, %rd900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r641}, %rd900;
	}
	shf.r.wrap.b32 	%r642, %r641, %r640, 14;
	shf.r.wrap.b32 	%r643, %r640, %r641, 14;
	mov.b64 	%rd912, {%r643, %r642};
	shf.r.wrap.b32 	%r644, %r641, %r640, 18;
	shf.r.wrap.b32 	%r645, %r640, %r641, 18;
	mov.b64 	%rd913, {%r645, %r644};
	xor.b64  	%rd914, %rd913, %rd912;
	shf.l.wrap.b32 	%r646, %r640, %r641, 23;
	shf.l.wrap.b32 	%r647, %r641, %r640, 23;
	mov.b64 	%rd915, {%r647, %r646};
	xor.b64  	%rd916, %rd914, %rd915;
	xor.b64  	%rd917, %rd876, %rd852;
	and.b64  	%rd918, %rd900, %rd917;
	xor.b64  	%rd919, %rd918, %rd852;
	add.s64 	%rd920, %rd828, %rd596;
	add.s64 	%rd921, %rd920, %rd2714;
	add.s64 	%rd922, %rd921, %rd919;
	add.s64 	%rd923, %rd922, %rd916;
	add.s64 	%rd924, %rd923, %rd839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r648,%dummy}, %rd911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r649}, %rd911;
	}
	shf.r.wrap.b32 	%r650, %r649, %r648, 28;
	shf.r.wrap.b32 	%r651, %r648, %r649, 28;
	mov.b64 	%rd925, {%r651, %r650};
	shf.l.wrap.b32 	%r652, %r648, %r649, 30;
	shf.l.wrap.b32 	%r653, %r649, %r648, 30;
	mov.b64 	%rd926, {%r653, %r652};
	xor.b64  	%rd927, %rd926, %rd925;
	shf.l.wrap.b32 	%r654, %r648, %r649, 25;
	shf.l.wrap.b32 	%r655, %r649, %r648, 25;
	mov.b64 	%rd928, {%r655, %r654};
	xor.b64  	%rd929, %rd927, %rd928;
	xor.b64  	%rd930, %rd911, %rd863;
	xor.b64  	%rd931, %rd911, %rd887;
	and.b64  	%rd932, %rd931, %rd930;
	xor.b64  	%rd933, %rd932, %rd911;
	add.s64 	%rd934, %rd923, %rd933;
	add.s64 	%rd935, %rd934, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r656,%dummy}, %rd924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r657}, %rd924;
	}
	shf.r.wrap.b32 	%r658, %r657, %r656, 14;
	shf.r.wrap.b32 	%r659, %r656, %r657, 14;
	mov.b64 	%rd936, {%r659, %r658};
	shf.r.wrap.b32 	%r660, %r657, %r656, 18;
	shf.r.wrap.b32 	%r661, %r656, %r657, 18;
	mov.b64 	%rd937, {%r661, %r660};
	xor.b64  	%rd938, %rd937, %rd936;
	shf.l.wrap.b32 	%r662, %r656, %r657, 23;
	shf.l.wrap.b32 	%r663, %r657, %r656, 23;
	mov.b64 	%rd939, {%r663, %r662};
	xor.b64  	%rd940, %rd938, %rd939;
	xor.b64  	%rd941, %rd900, %rd876;
	and.b64  	%rd942, %rd924, %rd941;
	xor.b64  	%rd943, %rd942, %rd876;
	add.s64 	%rd944, %rd852, %rd603;
	add.s64 	%rd945, %rd944, %rd2715;
	add.s64 	%rd946, %rd945, %rd943;
	add.s64 	%rd947, %rd946, %rd940;
	add.s64 	%rd948, %rd947, %rd863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r664,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r665}, %rd935;
	}
	shf.r.wrap.b32 	%r666, %r665, %r664, 28;
	shf.r.wrap.b32 	%r667, %r664, %r665, 28;
	mov.b64 	%rd949, {%r667, %r666};
	shf.l.wrap.b32 	%r668, %r664, %r665, 30;
	shf.l.wrap.b32 	%r669, %r665, %r664, 30;
	mov.b64 	%rd950, {%r669, %r668};
	xor.b64  	%rd951, %rd950, %rd949;
	shf.l.wrap.b32 	%r670, %r664, %r665, 25;
	shf.l.wrap.b32 	%r671, %r665, %r664, 25;
	mov.b64 	%rd952, {%r671, %r670};
	xor.b64  	%rd953, %rd951, %rd952;
	xor.b64  	%rd954, %rd935, %rd887;
	xor.b64  	%rd955, %rd935, %rd911;
	and.b64  	%rd956, %rd955, %rd954;
	xor.b64  	%rd957, %rd956, %rd935;
	add.s64 	%rd958, %rd947, %rd957;
	add.s64 	%rd959, %rd958, %rd953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r672,%dummy}, %rd948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r673}, %rd948;
	}
	shf.r.wrap.b32 	%r674, %r673, %r672, 14;
	shf.r.wrap.b32 	%r675, %r672, %r673, 14;
	mov.b64 	%rd960, {%r675, %r674};
	shf.r.wrap.b32 	%r676, %r673, %r672, 18;
	shf.r.wrap.b32 	%r677, %r672, %r673, 18;
	mov.b64 	%rd961, {%r677, %r676};
	xor.b64  	%rd962, %rd961, %rd960;
	shf.l.wrap.b32 	%r678, %r672, %r673, 23;
	shf.l.wrap.b32 	%r679, %r673, %r672, 23;
	mov.b64 	%rd963, {%r679, %r678};
	xor.b64  	%rd964, %rd962, %rd963;
	xor.b64  	%rd965, %rd924, %rd900;
	and.b64  	%rd966, %rd948, %rd965;
	xor.b64  	%rd967, %rd966, %rd900;
	add.s64 	%rd968, %rd876, %rd610;
	add.s64 	%rd969, %rd968, %rd2716;
	add.s64 	%rd970, %rd969, %rd967;
	add.s64 	%rd971, %rd970, %rd964;
	add.s64 	%rd972, %rd971, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r680,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r681}, %rd959;
	}
	shf.r.wrap.b32 	%r682, %r681, %r680, 28;
	shf.r.wrap.b32 	%r683, %r680, %r681, 28;
	mov.b64 	%rd973, {%r683, %r682};
	shf.l.wrap.b32 	%r684, %r680, %r681, 30;
	shf.l.wrap.b32 	%r685, %r681, %r680, 30;
	mov.b64 	%rd974, {%r685, %r684};
	xor.b64  	%rd975, %rd974, %rd973;
	shf.l.wrap.b32 	%r686, %r680, %r681, 25;
	shf.l.wrap.b32 	%r687, %r681, %r680, 25;
	mov.b64 	%rd976, {%r687, %r686};
	xor.b64  	%rd977, %rd975, %rd976;
	xor.b64  	%rd978, %rd959, %rd911;
	xor.b64  	%rd979, %rd959, %rd935;
	and.b64  	%rd980, %rd979, %rd978;
	xor.b64  	%rd981, %rd980, %rd959;
	add.s64 	%rd982, %rd971, %rd981;
	add.s64 	%rd983, %rd982, %rd977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r688,%dummy}, %rd972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd972;
	}
	shf.r.wrap.b32 	%r690, %r689, %r688, 14;
	shf.r.wrap.b32 	%r691, %r688, %r689, 14;
	mov.b64 	%rd984, {%r691, %r690};
	shf.r.wrap.b32 	%r692, %r689, %r688, 18;
	shf.r.wrap.b32 	%r693, %r688, %r689, 18;
	mov.b64 	%rd985, {%r693, %r692};
	xor.b64  	%rd986, %rd985, %rd984;
	shf.l.wrap.b32 	%r694, %r688, %r689, 23;
	shf.l.wrap.b32 	%r695, %r689, %r688, 23;
	mov.b64 	%rd987, {%r695, %r694};
	xor.b64  	%rd988, %rd986, %rd987;
	xor.b64  	%rd989, %rd948, %rd924;
	and.b64  	%rd990, %rd972, %rd989;
	xor.b64  	%rd991, %rd990, %rd924;
	add.s64 	%rd992, %rd900, %rd623;
	add.s64 	%rd993, %rd992, %rd2717;
	add.s64 	%rd994, %rd993, %rd991;
	add.s64 	%rd995, %rd994, %rd988;
	add.s64 	%rd996, %rd995, %rd911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r696,%dummy}, %rd983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r697}, %rd983;
	}
	shf.r.wrap.b32 	%r698, %r697, %r696, 28;
	shf.r.wrap.b32 	%r699, %r696, %r697, 28;
	mov.b64 	%rd997, {%r699, %r698};
	shf.l.wrap.b32 	%r700, %r696, %r697, 30;
	shf.l.wrap.b32 	%r701, %r697, %r696, 30;
	mov.b64 	%rd998, {%r701, %r700};
	xor.b64  	%rd999, %rd998, %rd997;
	shf.l.wrap.b32 	%r702, %r696, %r697, 25;
	shf.l.wrap.b32 	%r703, %r697, %r696, 25;
	mov.b64 	%rd1000, {%r703, %r702};
	xor.b64  	%rd1001, %rd999, %rd1000;
	xor.b64  	%rd1002, %rd983, %rd935;
	xor.b64  	%rd1003, %rd983, %rd959;
	and.b64  	%rd1004, %rd1003, %rd1002;
	xor.b64  	%rd1005, %rd1004, %rd983;
	add.s64 	%rd1006, %rd995, %rd1005;
	add.s64 	%rd1007, %rd1006, %rd1001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r704,%dummy}, %rd610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r705}, %rd610;
	}
	shf.r.wrap.b32 	%r706, %r705, %r704, 19;
	shf.r.wrap.b32 	%r707, %r704, %r705, 19;
	mov.b64 	%rd1008, {%r707, %r706};
	shf.l.wrap.b32 	%r708, %r704, %r705, 3;
	shf.l.wrap.b32 	%r709, %r705, %r704, 3;
	mov.b64 	%rd1009, {%r709, %r708};
	shr.u64 	%rd1010, %rd610, 6;
	xor.b64  	%rd1011, %rd1008, %rd1010;
	xor.b64  	%rd1012, %rd1011, %rd1009;
	add.s64 	%rd1013, %rd539, %rd575;
	add.s64 	%rd1014, %rd1013, %rd1012;
	add.s64 	%rd1015, %rd1014, %rd48;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r710,%dummy}, %rd623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r711}, %rd623;
	}
	shf.r.wrap.b32 	%r712, %r711, %r710, 19;
	shf.r.wrap.b32 	%r713, %r710, %r711, 19;
	mov.b64 	%rd1016, {%r713, %r712};
	shf.l.wrap.b32 	%r714, %r710, %r711, 3;
	shf.l.wrap.b32 	%r715, %r711, %r710, 3;
	mov.b64 	%rd1017, {%r715, %r714};
	shr.u64 	%rd1018, %rd623, 6;
	xor.b64  	%rd1019, %rd1016, %rd1018;
	xor.b64  	%rd1020, %rd1019, %rd1017;
	shf.r.wrap.b32 	%r716, %r385, %r384, 1;
	shf.r.wrap.b32 	%r717, %r384, %r385, 1;
	mov.b64 	%rd1021, {%r717, %r716};
	shf.r.wrap.b32 	%r718, %r385, %r384, 8;
	shf.r.wrap.b32 	%r719, %r384, %r385, 8;
	mov.b64 	%rd1022, {%r719, %r718};
	shr.u64 	%rd1023, %rd546, 7;
	xor.b64  	%rd1024, %rd1021, %rd1023;
	xor.b64  	%rd1025, %rd1024, %rd1022;
	add.s64 	%rd1026, %rd25, %rd582;
	add.s64 	%rd1027, %rd1026, %rd1020;
	add.s64 	%rd1028, %rd1027, %rd1025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r720,%dummy}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd1015;
	}
	shf.r.wrap.b32 	%r722, %r721, %r720, 19;
	shf.r.wrap.b32 	%r723, %r720, %r721, 19;
	mov.b64 	%rd1029, {%r723, %r722};
	shf.l.wrap.b32 	%r724, %r720, %r721, 3;
	shf.l.wrap.b32 	%r725, %r721, %r720, 3;
	mov.b64 	%rd1030, {%r725, %r724};
	shr.u64 	%rd1031, %rd1015, 6;
	xor.b64  	%rd1032, %rd1029, %rd1031;
	xor.b64  	%rd1033, %rd1032, %rd1030;
	add.s64 	%rd1034, %rd546, %rd589;
	add.s64 	%rd1035, %rd1034, %rd1033;
	add.s64 	%rd1036, %rd1035, %rd49;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd1028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r727}, %rd1028;
	}
	shf.r.wrap.b32 	%r728, %r727, %r726, 19;
	shf.r.wrap.b32 	%r729, %r726, %r727, 19;
	mov.b64 	%rd1037, {%r729, %r728};
	shf.l.wrap.b32 	%r730, %r726, %r727, 3;
	shf.l.wrap.b32 	%r731, %r727, %r726, 3;
	mov.b64 	%rd1038, {%r731, %r730};
	shr.u64 	%rd1039, %rd1028, 6;
	xor.b64  	%rd1040, %rd1037, %rd1039;
	xor.b64  	%rd1041, %rd1040, %rd1038;
	shf.r.wrap.b32 	%r732, %r391, %r390, 1;
	shf.r.wrap.b32 	%r733, %r390, %r391, 1;
	mov.b64 	%rd1042, {%r733, %r732};
	shf.r.wrap.b32 	%r734, %r391, %r390, 8;
	shf.r.wrap.b32 	%r735, %r390, %r391, 8;
	mov.b64 	%rd1043, {%r735, %r734};
	shr.u64 	%rd1044, %rd552, 7;
	xor.b64  	%rd1045, %rd1042, %rd1044;
	xor.b64  	%rd1046, %rd1045, %rd1043;
	add.s64 	%rd1047, %rd28, %rd596;
	add.s64 	%rd1048, %rd1047, %rd1041;
	add.s64 	%rd1049, %rd1048, %rd1046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r736,%dummy}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r737}, %rd1036;
	}
	shf.r.wrap.b32 	%r738, %r737, %r736, 19;
	shf.r.wrap.b32 	%r739, %r736, %r737, 19;
	mov.b64 	%rd1050, {%r739, %r738};
	shf.l.wrap.b32 	%r740, %r736, %r737, 3;
	shf.l.wrap.b32 	%r741, %r737, %r736, 3;
	mov.b64 	%rd1051, {%r741, %r740};
	shr.u64 	%rd1052, %rd1036, 6;
	xor.b64  	%rd1053, %rd1050, %rd1052;
	xor.b64  	%rd1054, %rd1053, %rd1051;
	add.s64 	%rd1055, %rd552, %rd603;
	add.s64 	%rd1056, %rd1055, %rd1054;
	add.s64 	%rd1057, %rd1056, %rd50;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r742,%dummy}, %rd1049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r743}, %rd1049;
	}
	shf.r.wrap.b32 	%r744, %r743, %r742, 19;
	shf.r.wrap.b32 	%r745, %r742, %r743, 19;
	mov.b64 	%rd1058, {%r745, %r744};
	shf.l.wrap.b32 	%r746, %r742, %r743, 3;
	shf.l.wrap.b32 	%r747, %r743, %r742, 3;
	mov.b64 	%rd1059, {%r747, %r746};
	shr.u64 	%rd1060, %rd1049, 6;
	xor.b64  	%rd1061, %rd1058, %rd1060;
	xor.b64  	%rd1062, %rd1061, %rd1059;
	shf.r.wrap.b32 	%r748, %r397, %r396, 1;
	shf.r.wrap.b32 	%r749, %r396, %r397, 1;
	mov.b64 	%rd1063, {%r749, %r748};
	shf.r.wrap.b32 	%r750, %r397, %r396, 8;
	shf.r.wrap.b32 	%r751, %r396, %r397, 8;
	mov.b64 	%rd1064, {%r751, %r750};
	shr.u64 	%rd1065, %rd559, 7;
	xor.b64  	%rd1066, %rd1063, %rd1065;
	xor.b64  	%rd1067, %rd1066, %rd1064;
	add.s64 	%rd1068, %rd29, %rd610;
	add.s64 	%rd1069, %rd1068, %rd1062;
	add.s64 	%rd1070, %rd1069, %rd1067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r752,%dummy}, %rd1057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r753}, %rd1057;
	}
	shf.r.wrap.b32 	%r754, %r753, %r752, 19;
	shf.r.wrap.b32 	%r755, %r752, %r753, 19;
	mov.b64 	%rd1071, {%r755, %r754};
	shf.l.wrap.b32 	%r756, %r752, %r753, 3;
	shf.l.wrap.b32 	%r757, %r753, %r752, 3;
	mov.b64 	%rd1072, {%r757, %r756};
	shr.u64 	%rd1073, %rd1057, 6;
	xor.b64  	%rd1074, %rd1071, %rd1073;
	xor.b64  	%rd1075, %rd1074, %rd1072;
	shf.r.wrap.b32 	%r758, %r403, %r402, 1;
	shf.r.wrap.b32 	%r759, %r402, %r403, 1;
	mov.b64 	%rd1076, {%r759, %r758};
	shf.r.wrap.b32 	%r760, %r403, %r402, 8;
	shf.r.wrap.b32 	%r761, %r402, %r403, 8;
	mov.b64 	%rd1077, {%r761, %r760};
	shr.u64 	%rd1078, %rd561, 7;
	xor.b64  	%rd1079, %rd1076, %rd1078;
	xor.b64  	%rd1080, %rd1079, %rd1077;
	add.s64 	%rd1081, %rd559, %rd623;
	add.s64 	%rd1082, %rd1081, %rd1075;
	add.s64 	%rd1083, %rd1082, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r762,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r763}, %rd1070;
	}
	shf.r.wrap.b32 	%r764, %r763, %r762, 19;
	shf.r.wrap.b32 	%r765, %r762, %r763, 19;
	mov.b64 	%rd1084, {%r765, %r764};
	shf.l.wrap.b32 	%r766, %r762, %r763, 3;
	shf.l.wrap.b32 	%r767, %r763, %r762, 3;
	mov.b64 	%rd1085, {%r767, %r766};
	shr.u64 	%rd1086, %rd1070, 6;
	xor.b64  	%rd1087, %rd1084, %rd1086;
	xor.b64  	%rd1088, %rd1087, %rd1085;
	shf.r.wrap.b32 	%r768, %r409, %r408, 1;
	shf.r.wrap.b32 	%r769, %r408, %r409, 1;
	mov.b64 	%rd1089, {%r769, %r768};
	shf.r.wrap.b32 	%r770, %r409, %r408, 8;
	shf.r.wrap.b32 	%r771, %r408, %r409, 8;
	mov.b64 	%rd1090, {%r771, %r770};
	shr.u64 	%rd1091, %rd568, 7;
	xor.b64  	%rd1092, %rd1089, %rd1091;
	xor.b64  	%rd1093, %rd1092, %rd1090;
	add.s64 	%rd1094, %rd1015, %rd561;
	add.s64 	%rd1095, %rd1094, %rd1088;
	add.s64 	%rd1096, %rd1095, %rd1093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r772,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1083;
	}
	shf.r.wrap.b32 	%r774, %r773, %r772, 19;
	shf.r.wrap.b32 	%r775, %r772, %r773, 19;
	mov.b64 	%rd1097, {%r775, %r774};
	shf.l.wrap.b32 	%r776, %r772, %r773, 3;
	shf.l.wrap.b32 	%r777, %r773, %r772, 3;
	mov.b64 	%rd1098, {%r777, %r776};
	shr.u64 	%rd1099, %rd1083, 6;
	xor.b64  	%rd1100, %rd1097, %rd1099;
	xor.b64  	%rd1101, %rd1100, %rd1098;
	shf.r.wrap.b32 	%r778, %r415, %r414, 1;
	shf.r.wrap.b32 	%r779, %r414, %r415, 1;
	mov.b64 	%rd1102, {%r779, %r778};
	shf.r.wrap.b32 	%r780, %r415, %r414, 8;
	shf.r.wrap.b32 	%r781, %r414, %r415, 8;
	mov.b64 	%rd1103, {%r781, %r780};
	shr.u64 	%rd1104, %rd575, 7;
	xor.b64  	%rd1105, %rd1102, %rd1104;
	xor.b64  	%rd1106, %rd1105, %rd1103;
	add.s64 	%rd1107, %rd1028, %rd568;
	add.s64 	%rd1108, %rd1107, %rd1101;
	add.s64 	%rd1109, %rd1108, %rd1106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r782,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r783}, %rd1096;
	}
	shf.r.wrap.b32 	%r784, %r783, %r782, 19;
	shf.r.wrap.b32 	%r785, %r782, %r783, 19;
	mov.b64 	%rd1110, {%r785, %r784};
	shf.l.wrap.b32 	%r786, %r782, %r783, 3;
	shf.l.wrap.b32 	%r787, %r783, %r782, 3;
	mov.b64 	%rd1111, {%r787, %r786};
	shr.u64 	%rd1112, %rd1096, 6;
	xor.b64  	%rd1113, %rd1110, %rd1112;
	xor.b64  	%rd1114, %rd1113, %rd1111;
	shf.r.wrap.b32 	%r788, %r421, %r420, 1;
	shf.r.wrap.b32 	%r789, %r420, %r421, 1;
	mov.b64 	%rd1115, {%r789, %r788};
	shf.r.wrap.b32 	%r790, %r421, %r420, 8;
	shf.r.wrap.b32 	%r791, %r420, %r421, 8;
	mov.b64 	%rd1116, {%r791, %r790};
	shr.u64 	%rd1117, %rd582, 7;
	xor.b64  	%rd1118, %rd1115, %rd1117;
	xor.b64  	%rd1119, %rd1118, %rd1116;
	add.s64 	%rd1120, %rd1036, %rd575;
	add.s64 	%rd1121, %rd1120, %rd1114;
	add.s64 	%rd1122, %rd1121, %rd1119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r792,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r793}, %rd1109;
	}
	shf.r.wrap.b32 	%r794, %r793, %r792, 19;
	shf.r.wrap.b32 	%r795, %r792, %r793, 19;
	mov.b64 	%rd1123, {%r795, %r794};
	shf.l.wrap.b32 	%r796, %r792, %r793, 3;
	shf.l.wrap.b32 	%r797, %r793, %r792, 3;
	mov.b64 	%rd1124, {%r797, %r796};
	shr.u64 	%rd1125, %rd1109, 6;
	xor.b64  	%rd1126, %rd1123, %rd1125;
	xor.b64  	%rd1127, %rd1126, %rd1124;
	shf.r.wrap.b32 	%r798, %r427, %r426, 1;
	shf.r.wrap.b32 	%r799, %r426, %r427, 1;
	mov.b64 	%rd1128, {%r799, %r798};
	shf.r.wrap.b32 	%r800, %r427, %r426, 8;
	shf.r.wrap.b32 	%r801, %r426, %r427, 8;
	mov.b64 	%rd1129, {%r801, %r800};
	shr.u64 	%rd1130, %rd589, 7;
	xor.b64  	%rd1131, %rd1128, %rd1130;
	xor.b64  	%rd1132, %rd1131, %rd1129;
	add.s64 	%rd1133, %rd1049, %rd582;
	add.s64 	%rd1134, %rd1133, %rd1127;
	add.s64 	%rd1135, %rd1134, %rd1132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r802,%dummy}, %rd1122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r803}, %rd1122;
	}
	shf.r.wrap.b32 	%r804, %r803, %r802, 19;
	shf.r.wrap.b32 	%r805, %r802, %r803, 19;
	mov.b64 	%rd1136, {%r805, %r804};
	shf.l.wrap.b32 	%r806, %r802, %r803, 3;
	shf.l.wrap.b32 	%r807, %r803, %r802, 3;
	mov.b64 	%rd1137, {%r807, %r806};
	shr.u64 	%rd1138, %rd1122, 6;
	xor.b64  	%rd1139, %rd1136, %rd1138;
	xor.b64  	%rd1140, %rd1139, %rd1137;
	shf.r.wrap.b32 	%r808, %r433, %r432, 1;
	shf.r.wrap.b32 	%r809, %r432, %r433, 1;
	mov.b64 	%rd1141, {%r809, %r808};
	shf.r.wrap.b32 	%r810, %r433, %r432, 8;
	shf.r.wrap.b32 	%r811, %r432, %r433, 8;
	mov.b64 	%rd1142, {%r811, %r810};
	shr.u64 	%rd1143, %rd596, 7;
	xor.b64  	%rd1144, %rd1141, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1142;
	add.s64 	%rd1146, %rd1057, %rd589;
	add.s64 	%rd1147, %rd1146, %rd1140;
	add.s64 	%rd1148, %rd1147, %rd1145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r812,%dummy}, %rd1135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd1135;
	}
	shf.r.wrap.b32 	%r814, %r813, %r812, 19;
	shf.r.wrap.b32 	%r815, %r812, %r813, 19;
	mov.b64 	%rd1149, {%r815, %r814};
	shf.l.wrap.b32 	%r816, %r812, %r813, 3;
	shf.l.wrap.b32 	%r817, %r813, %r812, 3;
	mov.b64 	%rd1150, {%r817, %r816};
	shr.u64 	%rd1151, %rd1135, 6;
	xor.b64  	%rd1152, %rd1149, %rd1151;
	xor.b64  	%rd1153, %rd1152, %rd1150;
	shf.r.wrap.b32 	%r818, %r439, %r438, 1;
	shf.r.wrap.b32 	%r819, %r438, %r439, 1;
	mov.b64 	%rd1154, {%r819, %r818};
	shf.r.wrap.b32 	%r820, %r439, %r438, 8;
	shf.r.wrap.b32 	%r821, %r438, %r439, 8;
	mov.b64 	%rd1155, {%r821, %r820};
	shr.u64 	%rd1156, %rd603, 7;
	xor.b64  	%rd1157, %rd1154, %rd1156;
	xor.b64  	%rd1158, %rd1157, %rd1155;
	add.s64 	%rd1159, %rd1070, %rd596;
	add.s64 	%rd1160, %rd1159, %rd1153;
	add.s64 	%rd1161, %rd1160, %rd1158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r822,%dummy}, %rd1148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd1148;
	}
	shf.r.wrap.b32 	%r824, %r823, %r822, 19;
	shf.r.wrap.b32 	%r825, %r822, %r823, 19;
	mov.b64 	%rd1162, {%r825, %r824};
	shf.l.wrap.b32 	%r826, %r822, %r823, 3;
	shf.l.wrap.b32 	%r827, %r823, %r822, 3;
	mov.b64 	%rd1163, {%r827, %r826};
	shr.u64 	%rd1164, %rd1148, 6;
	xor.b64  	%rd1165, %rd1162, %rd1164;
	xor.b64  	%rd1166, %rd1165, %rd1163;
	shf.r.wrap.b32 	%r828, %r705, %r704, 1;
	shf.r.wrap.b32 	%r829, %r704, %r705, 1;
	mov.b64 	%rd1167, {%r829, %r828};
	shf.r.wrap.b32 	%r830, %r705, %r704, 8;
	shf.r.wrap.b32 	%r831, %r704, %r705, 8;
	mov.b64 	%rd1168, {%r831, %r830};
	shr.u64 	%rd1169, %rd610, 7;
	xor.b64  	%rd1170, %rd1167, %rd1169;
	xor.b64  	%rd1171, %rd1170, %rd1168;
	add.s64 	%rd1172, %rd1083, %rd603;
	add.s64 	%rd1173, %rd1172, %rd1166;
	add.s64 	%rd1174, %rd1173, %rd1171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r832,%dummy}, %rd1161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r833}, %rd1161;
	}
	shf.r.wrap.b32 	%r834, %r833, %r832, 19;
	shf.r.wrap.b32 	%r835, %r832, %r833, 19;
	mov.b64 	%rd1175, {%r835, %r834};
	shf.l.wrap.b32 	%r836, %r832, %r833, 3;
	shf.l.wrap.b32 	%r837, %r833, %r832, 3;
	mov.b64 	%rd1176, {%r837, %r836};
	shr.u64 	%rd1177, %rd1161, 6;
	xor.b64  	%rd1178, %rd1175, %rd1177;
	xor.b64  	%rd1179, %rd1178, %rd1176;
	shf.r.wrap.b32 	%r838, %r711, %r710, 1;
	shf.r.wrap.b32 	%r839, %r710, %r711, 1;
	mov.b64 	%rd1180, {%r839, %r838};
	shf.r.wrap.b32 	%r840, %r711, %r710, 8;
	shf.r.wrap.b32 	%r841, %r710, %r711, 8;
	mov.b64 	%rd1181, {%r841, %r840};
	shr.u64 	%rd1182, %rd623, 7;
	xor.b64  	%rd1183, %rd1180, %rd1182;
	xor.b64  	%rd1184, %rd1183, %rd1181;
	add.s64 	%rd1185, %rd1096, %rd610;
	add.s64 	%rd1186, %rd1185, %rd1179;
	add.s64 	%rd1187, %rd1186, %rd1184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r842,%dummy}, %rd1174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r843}, %rd1174;
	}
	shf.r.wrap.b32 	%r844, %r843, %r842, 19;
	shf.r.wrap.b32 	%r845, %r842, %r843, 19;
	mov.b64 	%rd1188, {%r845, %r844};
	shf.l.wrap.b32 	%r846, %r842, %r843, 3;
	shf.l.wrap.b32 	%r847, %r843, %r842, 3;
	mov.b64 	%rd1189, {%r847, %r846};
	shr.u64 	%rd1190, %rd1174, 6;
	xor.b64  	%rd1191, %rd1188, %rd1190;
	xor.b64  	%rd1192, %rd1191, %rd1189;
	shf.r.wrap.b32 	%r848, %r721, %r720, 1;
	shf.r.wrap.b32 	%r849, %r720, %r721, 1;
	mov.b64 	%rd1193, {%r849, %r848};
	shf.r.wrap.b32 	%r850, %r721, %r720, 8;
	shf.r.wrap.b32 	%r851, %r720, %r721, 8;
	mov.b64 	%rd1194, {%r851, %r850};
	shr.u64 	%rd1195, %rd1015, 7;
	xor.b64  	%rd1196, %rd1193, %rd1195;
	xor.b64  	%rd1197, %rd1196, %rd1194;
	add.s64 	%rd1198, %rd1109, %rd623;
	add.s64 	%rd1199, %rd1198, %rd1192;
	add.s64 	%rd1200, %rd1199, %rd1197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r852,%dummy}, %rd996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r853}, %rd996;
	}
	shf.r.wrap.b32 	%r854, %r853, %r852, 14;
	shf.r.wrap.b32 	%r855, %r852, %r853, 14;
	mov.b64 	%rd1201, {%r855, %r854};
	shf.r.wrap.b32 	%r856, %r853, %r852, 18;
	shf.r.wrap.b32 	%r857, %r852, %r853, 18;
	mov.b64 	%rd1202, {%r857, %r856};
	xor.b64  	%rd1203, %rd1202, %rd1201;
	shf.l.wrap.b32 	%r858, %r852, %r853, 23;
	shf.l.wrap.b32 	%r859, %r853, %r852, 23;
	mov.b64 	%rd1204, {%r859, %r858};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	xor.b64  	%rd1206, %rd948, %rd972;
	and.b64  	%rd1207, %rd1206, %rd996;
	xor.b64  	%rd1208, %rd1207, %rd948;
	add.s64 	%rd1209, %rd1208, %rd924;
	add.s64 	%rd1210, %rd1209, %rd1015;
	add.s64 	%rd1211, %rd1210, %rd2718;
	add.s64 	%rd1212, %rd1211, %rd1205;
	add.s64 	%rd1213, %rd1212, %rd935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r860,%dummy}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r861}, %rd1007;
	}
	shf.r.wrap.b32 	%r862, %r861, %r860, 28;
	shf.r.wrap.b32 	%r863, %r860, %r861, 28;
	mov.b64 	%rd1214, {%r863, %r862};
	shf.l.wrap.b32 	%r864, %r860, %r861, 30;
	shf.l.wrap.b32 	%r865, %r861, %r860, 30;
	mov.b64 	%rd1215, {%r865, %r864};
	xor.b64  	%rd1216, %rd1215, %rd1214;
	shf.l.wrap.b32 	%r866, %r860, %r861, 25;
	shf.l.wrap.b32 	%r867, %r861, %r860, 25;
	mov.b64 	%rd1217, {%r867, %r866};
	xor.b64  	%rd1218, %rd1216, %rd1217;
	xor.b64  	%rd1219, %rd1007, %rd959;
	xor.b64  	%rd1220, %rd1007, %rd983;
	and.b64  	%rd1221, %rd1220, %rd1219;
	xor.b64  	%rd1222, %rd1221, %rd1007;
	add.s64 	%rd1223, %rd1212, %rd1222;
	add.s64 	%rd1224, %rd1223, %rd1218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r868,%dummy}, %rd1213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r869}, %rd1213;
	}
	shf.r.wrap.b32 	%r870, %r869, %r868, 14;
	shf.r.wrap.b32 	%r871, %r868, %r869, 14;
	mov.b64 	%rd1225, {%r871, %r870};
	shf.r.wrap.b32 	%r872, %r869, %r868, 18;
	shf.r.wrap.b32 	%r873, %r868, %r869, 18;
	mov.b64 	%rd1226, {%r873, %r872};
	xor.b64  	%rd1227, %rd1226, %rd1225;
	shf.l.wrap.b32 	%r874, %r868, %r869, 23;
	shf.l.wrap.b32 	%r875, %r869, %r868, 23;
	mov.b64 	%rd1228, {%r875, %r874};
	xor.b64  	%rd1229, %rd1227, %rd1228;
	xor.b64  	%rd1230, %rd972, %rd996;
	and.b64  	%rd1231, %rd1213, %rd1230;
	xor.b64  	%rd1232, %rd1231, %rd972;
	add.s64 	%rd1233, %rd1028, %rd948;
	add.s64 	%rd1234, %rd1233, %rd2719;
	add.s64 	%rd1235, %rd1234, %rd1232;
	add.s64 	%rd1236, %rd1235, %rd1229;
	add.s64 	%rd1237, %rd1236, %rd959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r876,%dummy}, %rd1224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r877}, %rd1224;
	}
	shf.r.wrap.b32 	%r878, %r877, %r876, 28;
	shf.r.wrap.b32 	%r879, %r876, %r877, 28;
	mov.b64 	%rd1238, {%r879, %r878};
	shf.l.wrap.b32 	%r880, %r876, %r877, 30;
	shf.l.wrap.b32 	%r881, %r877, %r876, 30;
	mov.b64 	%rd1239, {%r881, %r880};
	xor.b64  	%rd1240, %rd1239, %rd1238;
	shf.l.wrap.b32 	%r882, %r876, %r877, 25;
	shf.l.wrap.b32 	%r883, %r877, %r876, 25;
	mov.b64 	%rd1241, {%r883, %r882};
	xor.b64  	%rd1242, %rd1240, %rd1241;
	xor.b64  	%rd1243, %rd1224, %rd983;
	xor.b64  	%rd1244, %rd1224, %rd1007;
	and.b64  	%rd1245, %rd1244, %rd1243;
	xor.b64  	%rd1246, %rd1245, %rd1224;
	add.s64 	%rd1247, %rd1236, %rd1246;
	add.s64 	%rd1248, %rd1247, %rd1242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r884,%dummy}, %rd1237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r885}, %rd1237;
	}
	shf.r.wrap.b32 	%r886, %r885, %r884, 14;
	shf.r.wrap.b32 	%r887, %r884, %r885, 14;
	mov.b64 	%rd1249, {%r887, %r886};
	shf.r.wrap.b32 	%r888, %r885, %r884, 18;
	shf.r.wrap.b32 	%r889, %r884, %r885, 18;
	mov.b64 	%rd1250, {%r889, %r888};
	xor.b64  	%rd1251, %rd1250, %rd1249;
	shf.l.wrap.b32 	%r890, %r884, %r885, 23;
	shf.l.wrap.b32 	%r891, %r885, %r884, 23;
	mov.b64 	%rd1252, {%r891, %r890};
	xor.b64  	%rd1253, %rd1251, %rd1252;
	xor.b64  	%rd1254, %rd1213, %rd996;
	and.b64  	%rd1255, %rd1237, %rd1254;
	xor.b64  	%rd1256, %rd1255, %rd996;
	add.s64 	%rd1257, %rd1036, %rd972;
	add.s64 	%rd1258, %rd1257, %rd2720;
	add.s64 	%rd1259, %rd1258, %rd1256;
	add.s64 	%rd1260, %rd1259, %rd1253;
	add.s64 	%rd1261, %rd1260, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r892,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r893}, %rd1248;
	}
	shf.r.wrap.b32 	%r894, %r893, %r892, 28;
	shf.r.wrap.b32 	%r895, %r892, %r893, 28;
	mov.b64 	%rd1262, {%r895, %r894};
	shf.l.wrap.b32 	%r896, %r892, %r893, 30;
	shf.l.wrap.b32 	%r897, %r893, %r892, 30;
	mov.b64 	%rd1263, {%r897, %r896};
	xor.b64  	%rd1264, %rd1263, %rd1262;
	shf.l.wrap.b32 	%r898, %r892, %r893, 25;
	shf.l.wrap.b32 	%r899, %r893, %r892, 25;
	mov.b64 	%rd1265, {%r899, %r898};
	xor.b64  	%rd1266, %rd1264, %rd1265;
	xor.b64  	%rd1267, %rd1248, %rd1007;
	xor.b64  	%rd1268, %rd1248, %rd1224;
	and.b64  	%rd1269, %rd1268, %rd1267;
	xor.b64  	%rd1270, %rd1269, %rd1248;
	add.s64 	%rd1271, %rd1260, %rd1270;
	add.s64 	%rd1272, %rd1271, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r900,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r901}, %rd1261;
	}
	shf.r.wrap.b32 	%r902, %r901, %r900, 14;
	shf.r.wrap.b32 	%r903, %r900, %r901, 14;
	mov.b64 	%rd1273, {%r903, %r902};
	shf.r.wrap.b32 	%r904, %r901, %r900, 18;
	shf.r.wrap.b32 	%r905, %r900, %r901, 18;
	mov.b64 	%rd1274, {%r905, %r904};
	xor.b64  	%rd1275, %rd1274, %rd1273;
	shf.l.wrap.b32 	%r906, %r900, %r901, 23;
	shf.l.wrap.b32 	%r907, %r901, %r900, 23;
	mov.b64 	%rd1276, {%r907, %r906};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	xor.b64  	%rd1278, %rd1237, %rd1213;
	and.b64  	%rd1279, %rd1261, %rd1278;
	xor.b64  	%rd1280, %rd1279, %rd1213;
	add.s64 	%rd1281, %rd1049, %rd996;
	add.s64 	%rd1282, %rd1281, %rd2721;
	add.s64 	%rd1283, %rd1282, %rd1280;
	add.s64 	%rd1284, %rd1283, %rd1277;
	add.s64 	%rd1285, %rd1284, %rd1007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r908,%dummy}, %rd1272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r909}, %rd1272;
	}
	shf.r.wrap.b32 	%r910, %r909, %r908, 28;
	shf.r.wrap.b32 	%r911, %r908, %r909, 28;
	mov.b64 	%rd1286, {%r911, %r910};
	shf.l.wrap.b32 	%r912, %r908, %r909, 30;
	shf.l.wrap.b32 	%r913, %r909, %r908, 30;
	mov.b64 	%rd1287, {%r913, %r912};
	xor.b64  	%rd1288, %rd1287, %rd1286;
	shf.l.wrap.b32 	%r914, %r908, %r909, 25;
	shf.l.wrap.b32 	%r915, %r909, %r908, 25;
	mov.b64 	%rd1289, {%r915, %r914};
	xor.b64  	%rd1290, %rd1288, %rd1289;
	xor.b64  	%rd1291, %rd1272, %rd1224;
	xor.b64  	%rd1292, %rd1272, %rd1248;
	and.b64  	%rd1293, %rd1292, %rd1291;
	xor.b64  	%rd1294, %rd1293, %rd1272;
	add.s64 	%rd1295, %rd1284, %rd1294;
	add.s64 	%rd1296, %rd1295, %rd1290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r916,%dummy}, %rd1285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd1285;
	}
	shf.r.wrap.b32 	%r918, %r917, %r916, 14;
	shf.r.wrap.b32 	%r919, %r916, %r917, 14;
	mov.b64 	%rd1297, {%r919, %r918};
	shf.r.wrap.b32 	%r920, %r917, %r916, 18;
	shf.r.wrap.b32 	%r921, %r916, %r917, 18;
	mov.b64 	%rd1298, {%r921, %r920};
	xor.b64  	%rd1299, %rd1298, %rd1297;
	shf.l.wrap.b32 	%r922, %r916, %r917, 23;
	shf.l.wrap.b32 	%r923, %r917, %r916, 23;
	mov.b64 	%rd1300, {%r923, %r922};
	xor.b64  	%rd1301, %rd1299, %rd1300;
	xor.b64  	%rd1302, %rd1261, %rd1237;
	and.b64  	%rd1303, %rd1285, %rd1302;
	xor.b64  	%rd1304, %rd1303, %rd1237;
	add.s64 	%rd1305, %rd1213, %rd1057;
	add.s64 	%rd1306, %rd1305, %rd2722;
	add.s64 	%rd1307, %rd1306, %rd1304;
	add.s64 	%rd1308, %rd1307, %rd1301;
	add.s64 	%rd1309, %rd1308, %rd1224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r924,%dummy}, %rd1296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd1296;
	}
	shf.r.wrap.b32 	%r926, %r925, %r924, 28;
	shf.r.wrap.b32 	%r927, %r924, %r925, 28;
	mov.b64 	%rd1310, {%r927, %r926};
	shf.l.wrap.b32 	%r928, %r924, %r925, 30;
	shf.l.wrap.b32 	%r929, %r925, %r924, 30;
	mov.b64 	%rd1311, {%r929, %r928};
	xor.b64  	%rd1312, %rd1311, %rd1310;
	shf.l.wrap.b32 	%r930, %r924, %r925, 25;
	shf.l.wrap.b32 	%r931, %r925, %r924, 25;
	mov.b64 	%rd1313, {%r931, %r930};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	xor.b64  	%rd1315, %rd1296, %rd1248;
	xor.b64  	%rd1316, %rd1296, %rd1272;
	and.b64  	%rd1317, %rd1316, %rd1315;
	xor.b64  	%rd1318, %rd1317, %rd1296;
	add.s64 	%rd1319, %rd1308, %rd1318;
	add.s64 	%rd1320, %rd1319, %rd1314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r932,%dummy}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r933}, %rd1309;
	}
	shf.r.wrap.b32 	%r934, %r933, %r932, 14;
	shf.r.wrap.b32 	%r935, %r932, %r933, 14;
	mov.b64 	%rd1321, {%r935, %r934};
	shf.r.wrap.b32 	%r936, %r933, %r932, 18;
	shf.r.wrap.b32 	%r937, %r932, %r933, 18;
	mov.b64 	%rd1322, {%r937, %r936};
	xor.b64  	%rd1323, %rd1322, %rd1321;
	shf.l.wrap.b32 	%r938, %r932, %r933, 23;
	shf.l.wrap.b32 	%r939, %r933, %r932, 23;
	mov.b64 	%rd1324, {%r939, %r938};
	xor.b64  	%rd1325, %rd1323, %rd1324;
	xor.b64  	%rd1326, %rd1285, %rd1261;
	and.b64  	%rd1327, %rd1309, %rd1326;
	xor.b64  	%rd1328, %rd1327, %rd1261;
	add.s64 	%rd1329, %rd1237, %rd1070;
	add.s64 	%rd1330, %rd1329, %rd2723;
	add.s64 	%rd1331, %rd1330, %rd1328;
	add.s64 	%rd1332, %rd1331, %rd1325;
	add.s64 	%rd1333, %rd1332, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r940,%dummy}, %rd1320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r941}, %rd1320;
	}
	shf.r.wrap.b32 	%r942, %r941, %r940, 28;
	shf.r.wrap.b32 	%r943, %r940, %r941, 28;
	mov.b64 	%rd1334, {%r943, %r942};
	shf.l.wrap.b32 	%r944, %r940, %r941, 30;
	shf.l.wrap.b32 	%r945, %r941, %r940, 30;
	mov.b64 	%rd1335, {%r945, %r944};
	xor.b64  	%rd1336, %rd1335, %rd1334;
	shf.l.wrap.b32 	%r946, %r940, %r941, 25;
	shf.l.wrap.b32 	%r947, %r941, %r940, 25;
	mov.b64 	%rd1337, {%r947, %r946};
	xor.b64  	%rd1338, %rd1336, %rd1337;
	xor.b64  	%rd1339, %rd1320, %rd1272;
	xor.b64  	%rd1340, %rd1320, %rd1296;
	and.b64  	%rd1341, %rd1340, %rd1339;
	xor.b64  	%rd1342, %rd1341, %rd1320;
	add.s64 	%rd1343, %rd1332, %rd1342;
	add.s64 	%rd1344, %rd1343, %rd1338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r948,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r949}, %rd1333;
	}
	shf.r.wrap.b32 	%r950, %r949, %r948, 14;
	shf.r.wrap.b32 	%r951, %r948, %r949, 14;
	mov.b64 	%rd1345, {%r951, %r950};
	shf.r.wrap.b32 	%r952, %r949, %r948, 18;
	shf.r.wrap.b32 	%r953, %r948, %r949, 18;
	mov.b64 	%rd1346, {%r953, %r952};
	xor.b64  	%rd1347, %rd1346, %rd1345;
	shf.l.wrap.b32 	%r954, %r948, %r949, 23;
	shf.l.wrap.b32 	%r955, %r949, %r948, 23;
	mov.b64 	%rd1348, {%r955, %r954};
	xor.b64  	%rd1349, %rd1347, %rd1348;
	xor.b64  	%rd1350, %rd1309, %rd1285;
	and.b64  	%rd1351, %rd1333, %rd1350;
	xor.b64  	%rd1352, %rd1351, %rd1285;
	add.s64 	%rd1353, %rd1261, %rd1083;
	add.s64 	%rd1354, %rd1353, %rd2724;
	add.s64 	%rd1355, %rd1354, %rd1352;
	add.s64 	%rd1356, %rd1355, %rd1349;
	add.s64 	%rd1357, %rd1356, %rd1272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r956,%dummy}, %rd1344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r957}, %rd1344;
	}
	shf.r.wrap.b32 	%r958, %r957, %r956, 28;
	shf.r.wrap.b32 	%r959, %r956, %r957, 28;
	mov.b64 	%rd1358, {%r959, %r958};
	shf.l.wrap.b32 	%r960, %r956, %r957, 30;
	shf.l.wrap.b32 	%r961, %r957, %r956, 30;
	mov.b64 	%rd1359, {%r961, %r960};
	xor.b64  	%rd1360, %rd1359, %rd1358;
	shf.l.wrap.b32 	%r962, %r956, %r957, 25;
	shf.l.wrap.b32 	%r963, %r957, %r956, 25;
	mov.b64 	%rd1361, {%r963, %r962};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	xor.b64  	%rd1363, %rd1344, %rd1296;
	xor.b64  	%rd1364, %rd1344, %rd1320;
	and.b64  	%rd1365, %rd1364, %rd1363;
	xor.b64  	%rd1366, %rd1365, %rd1344;
	add.s64 	%rd1367, %rd1356, %rd1366;
	add.s64 	%rd1368, %rd1367, %rd1362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r964,%dummy}, %rd1357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r965}, %rd1357;
	}
	shf.r.wrap.b32 	%r966, %r965, %r964, 14;
	shf.r.wrap.b32 	%r967, %r964, %r965, 14;
	mov.b64 	%rd1369, {%r967, %r966};
	shf.r.wrap.b32 	%r968, %r965, %r964, 18;
	shf.r.wrap.b32 	%r969, %r964, %r965, 18;
	mov.b64 	%rd1370, {%r969, %r968};
	xor.b64  	%rd1371, %rd1370, %rd1369;
	shf.l.wrap.b32 	%r970, %r964, %r965, 23;
	shf.l.wrap.b32 	%r971, %r965, %r964, 23;
	mov.b64 	%rd1372, {%r971, %r970};
	xor.b64  	%rd1373, %rd1371, %rd1372;
	xor.b64  	%rd1374, %rd1333, %rd1309;
	and.b64  	%rd1375, %rd1357, %rd1374;
	xor.b64  	%rd1376, %rd1375, %rd1309;
	add.s64 	%rd1377, %rd1285, %rd1096;
	add.s64 	%rd1378, %rd1377, %rd2725;
	add.s64 	%rd1379, %rd1378, %rd1376;
	add.s64 	%rd1380, %rd1379, %rd1373;
	add.s64 	%rd1381, %rd1380, %rd1296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd1368;
	}
	shf.r.wrap.b32 	%r974, %r973, %r972, 28;
	shf.r.wrap.b32 	%r975, %r972, %r973, 28;
	mov.b64 	%rd1382, {%r975, %r974};
	shf.l.wrap.b32 	%r976, %r972, %r973, 30;
	shf.l.wrap.b32 	%r977, %r973, %r972, 30;
	mov.b64 	%rd1383, {%r977, %r976};
	xor.b64  	%rd1384, %rd1383, %rd1382;
	shf.l.wrap.b32 	%r978, %r972, %r973, 25;
	shf.l.wrap.b32 	%r979, %r973, %r972, 25;
	mov.b64 	%rd1385, {%r979, %r978};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	xor.b64  	%rd1387, %rd1368, %rd1320;
	xor.b64  	%rd1388, %rd1368, %rd1344;
	and.b64  	%rd1389, %rd1388, %rd1387;
	xor.b64  	%rd1390, %rd1389, %rd1368;
	add.s64 	%rd1391, %rd1380, %rd1390;
	add.s64 	%rd1392, %rd1391, %rd1386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r980,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r981}, %rd1381;
	}
	shf.r.wrap.b32 	%r982, %r981, %r980, 14;
	shf.r.wrap.b32 	%r983, %r980, %r981, 14;
	mov.b64 	%rd1393, {%r983, %r982};
	shf.r.wrap.b32 	%r984, %r981, %r980, 18;
	shf.r.wrap.b32 	%r985, %r980, %r981, 18;
	mov.b64 	%rd1394, {%r985, %r984};
	xor.b64  	%rd1395, %rd1394, %rd1393;
	shf.l.wrap.b32 	%r986, %r980, %r981, 23;
	shf.l.wrap.b32 	%r987, %r981, %r980, 23;
	mov.b64 	%rd1396, {%r987, %r986};
	xor.b64  	%rd1397, %rd1395, %rd1396;
	xor.b64  	%rd1398, %rd1357, %rd1333;
	and.b64  	%rd1399, %rd1381, %rd1398;
	xor.b64  	%rd1400, %rd1399, %rd1333;
	add.s64 	%rd1401, %rd1309, %rd1109;
	add.s64 	%rd1402, %rd1401, %rd2726;
	add.s64 	%rd1403, %rd1402, %rd1400;
	add.s64 	%rd1404, %rd1403, %rd1397;
	add.s64 	%rd1405, %rd1404, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd1392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd1392;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 28;
	shf.r.wrap.b32 	%r991, %r988, %r989, 28;
	mov.b64 	%rd1406, {%r991, %r990};
	shf.l.wrap.b32 	%r992, %r988, %r989, 30;
	shf.l.wrap.b32 	%r993, %r989, %r988, 30;
	mov.b64 	%rd1407, {%r993, %r992};
	xor.b64  	%rd1408, %rd1407, %rd1406;
	shf.l.wrap.b32 	%r994, %r988, %r989, 25;
	shf.l.wrap.b32 	%r995, %r989, %r988, 25;
	mov.b64 	%rd1409, {%r995, %r994};
	xor.b64  	%rd1410, %rd1408, %rd1409;
	xor.b64  	%rd1411, %rd1392, %rd1344;
	xor.b64  	%rd1412, %rd1392, %rd1368;
	and.b64  	%rd1413, %rd1412, %rd1411;
	xor.b64  	%rd1414, %rd1413, %rd1392;
	add.s64 	%rd1415, %rd1404, %rd1414;
	add.s64 	%rd1416, %rd1415, %rd1410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r996,%dummy}, %rd1405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r997}, %rd1405;
	}
	shf.r.wrap.b32 	%r998, %r997, %r996, 14;
	shf.r.wrap.b32 	%r999, %r996, %r997, 14;
	mov.b64 	%rd1417, {%r999, %r998};
	shf.r.wrap.b32 	%r1000, %r997, %r996, 18;
	shf.r.wrap.b32 	%r1001, %r996, %r997, 18;
	mov.b64 	%rd1418, {%r1001, %r1000};
	xor.b64  	%rd1419, %rd1418, %rd1417;
	shf.l.wrap.b32 	%r1002, %r996, %r997, 23;
	shf.l.wrap.b32 	%r1003, %r997, %r996, 23;
	mov.b64 	%rd1420, {%r1003, %r1002};
	xor.b64  	%rd1421, %rd1419, %rd1420;
	xor.b64  	%rd1422, %rd1381, %rd1357;
	and.b64  	%rd1423, %rd1405, %rd1422;
	xor.b64  	%rd1424, %rd1423, %rd1357;
	add.s64 	%rd1425, %rd1333, %rd1122;
	add.s64 	%rd1426, %rd1425, %rd2727;
	add.s64 	%rd1427, %rd1426, %rd1424;
	add.s64 	%rd1428, %rd1427, %rd1421;
	add.s64 	%rd1429, %rd1428, %rd1344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1004,%dummy}, %rd1416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd1416;
	}
	shf.r.wrap.b32 	%r1006, %r1005, %r1004, 28;
	shf.r.wrap.b32 	%r1007, %r1004, %r1005, 28;
	mov.b64 	%rd1430, {%r1007, %r1006};
	shf.l.wrap.b32 	%r1008, %r1004, %r1005, 30;
	shf.l.wrap.b32 	%r1009, %r1005, %r1004, 30;
	mov.b64 	%rd1431, {%r1009, %r1008};
	xor.b64  	%rd1432, %rd1431, %rd1430;
	shf.l.wrap.b32 	%r1010, %r1004, %r1005, 25;
	shf.l.wrap.b32 	%r1011, %r1005, %r1004, 25;
	mov.b64 	%rd1433, {%r1011, %r1010};
	xor.b64  	%rd1434, %rd1432, %rd1433;
	xor.b64  	%rd1435, %rd1416, %rd1368;
	xor.b64  	%rd1436, %rd1416, %rd1392;
	and.b64  	%rd1437, %rd1436, %rd1435;
	xor.b64  	%rd1438, %rd1437, %rd1416;
	add.s64 	%rd1439, %rd1428, %rd1438;
	add.s64 	%rd1440, %rd1439, %rd1434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1012,%dummy}, %rd1429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1013}, %rd1429;
	}
	shf.r.wrap.b32 	%r1014, %r1013, %r1012, 14;
	shf.r.wrap.b32 	%r1015, %r1012, %r1013, 14;
	mov.b64 	%rd1441, {%r1015, %r1014};
	shf.r.wrap.b32 	%r1016, %r1013, %r1012, 18;
	shf.r.wrap.b32 	%r1017, %r1012, %r1013, 18;
	mov.b64 	%rd1442, {%r1017, %r1016};
	xor.b64  	%rd1443, %rd1442, %rd1441;
	shf.l.wrap.b32 	%r1018, %r1012, %r1013, 23;
	shf.l.wrap.b32 	%r1019, %r1013, %r1012, 23;
	mov.b64 	%rd1444, {%r1019, %r1018};
	xor.b64  	%rd1445, %rd1443, %rd1444;
	xor.b64  	%rd1446, %rd1405, %rd1381;
	and.b64  	%rd1447, %rd1429, %rd1446;
	xor.b64  	%rd1448, %rd1447, %rd1381;
	add.s64 	%rd1449, %rd1357, %rd1135;
	add.s64 	%rd1450, %rd1449, %rd2728;
	add.s64 	%rd1451, %rd1450, %rd1448;
	add.s64 	%rd1452, %rd1451, %rd1445;
	add.s64 	%rd1453, %rd1452, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1020,%dummy}, %rd1440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1021}, %rd1440;
	}
	shf.r.wrap.b32 	%r1022, %r1021, %r1020, 28;
	shf.r.wrap.b32 	%r1023, %r1020, %r1021, 28;
	mov.b64 	%rd1454, {%r1023, %r1022};
	shf.l.wrap.b32 	%r1024, %r1020, %r1021, 30;
	shf.l.wrap.b32 	%r1025, %r1021, %r1020, 30;
	mov.b64 	%rd1455, {%r1025, %r1024};
	xor.b64  	%rd1456, %rd1455, %rd1454;
	shf.l.wrap.b32 	%r1026, %r1020, %r1021, 25;
	shf.l.wrap.b32 	%r1027, %r1021, %r1020, 25;
	mov.b64 	%rd1457, {%r1027, %r1026};
	xor.b64  	%rd1458, %rd1456, %rd1457;
	xor.b64  	%rd1459, %rd1440, %rd1392;
	xor.b64  	%rd1460, %rd1440, %rd1416;
	and.b64  	%rd1461, %rd1460, %rd1459;
	xor.b64  	%rd1462, %rd1461, %rd1440;
	add.s64 	%rd1463, %rd1452, %rd1462;
	add.s64 	%rd1464, %rd1463, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1028,%dummy}, %rd1453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1029}, %rd1453;
	}
	shf.r.wrap.b32 	%r1030, %r1029, %r1028, 14;
	shf.r.wrap.b32 	%r1031, %r1028, %r1029, 14;
	mov.b64 	%rd1465, {%r1031, %r1030};
	shf.r.wrap.b32 	%r1032, %r1029, %r1028, 18;
	shf.r.wrap.b32 	%r1033, %r1028, %r1029, 18;
	mov.b64 	%rd1466, {%r1033, %r1032};
	xor.b64  	%rd1467, %rd1466, %rd1465;
	shf.l.wrap.b32 	%r1034, %r1028, %r1029, 23;
	shf.l.wrap.b32 	%r1035, %r1029, %r1028, 23;
	mov.b64 	%rd1468, {%r1035, %r1034};
	xor.b64  	%rd1469, %rd1467, %rd1468;
	xor.b64  	%rd1470, %rd1429, %rd1405;
	and.b64  	%rd1471, %rd1453, %rd1470;
	xor.b64  	%rd1472, %rd1471, %rd1405;
	add.s64 	%rd1473, %rd1381, %rd1148;
	add.s64 	%rd1474, %rd1473, %rd2729;
	add.s64 	%rd1475, %rd1474, %rd1472;
	add.s64 	%rd1476, %rd1475, %rd1469;
	add.s64 	%rd1477, %rd1476, %rd1392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1036,%dummy}, %rd1464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1037}, %rd1464;
	}
	shf.r.wrap.b32 	%r1038, %r1037, %r1036, 28;
	shf.r.wrap.b32 	%r1039, %r1036, %r1037, 28;
	mov.b64 	%rd1478, {%r1039, %r1038};
	shf.l.wrap.b32 	%r1040, %r1036, %r1037, 30;
	shf.l.wrap.b32 	%r1041, %r1037, %r1036, 30;
	mov.b64 	%rd1479, {%r1041, %r1040};
	xor.b64  	%rd1480, %rd1479, %rd1478;
	shf.l.wrap.b32 	%r1042, %r1036, %r1037, 25;
	shf.l.wrap.b32 	%r1043, %r1037, %r1036, 25;
	mov.b64 	%rd1481, {%r1043, %r1042};
	xor.b64  	%rd1482, %rd1480, %rd1481;
	xor.b64  	%rd1483, %rd1464, %rd1416;
	xor.b64  	%rd1484, %rd1464, %rd1440;
	and.b64  	%rd1485, %rd1484, %rd1483;
	xor.b64  	%rd1486, %rd1485, %rd1464;
	add.s64 	%rd1487, %rd1476, %rd1486;
	add.s64 	%rd1488, %rd1487, %rd1482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1044,%dummy}, %rd1477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1045}, %rd1477;
	}
	shf.r.wrap.b32 	%r1046, %r1045, %r1044, 14;
	shf.r.wrap.b32 	%r1047, %r1044, %r1045, 14;
	mov.b64 	%rd1489, {%r1047, %r1046};
	shf.r.wrap.b32 	%r1048, %r1045, %r1044, 18;
	shf.r.wrap.b32 	%r1049, %r1044, %r1045, 18;
	mov.b64 	%rd1490, {%r1049, %r1048};
	xor.b64  	%rd1491, %rd1490, %rd1489;
	shf.l.wrap.b32 	%r1050, %r1044, %r1045, 23;
	shf.l.wrap.b32 	%r1051, %r1045, %r1044, 23;
	mov.b64 	%rd1492, {%r1051, %r1050};
	xor.b64  	%rd1493, %rd1491, %rd1492;
	xor.b64  	%rd1494, %rd1453, %rd1429;
	and.b64  	%rd1495, %rd1477, %rd1494;
	xor.b64  	%rd1496, %rd1495, %rd1429;
	add.s64 	%rd1497, %rd1405, %rd1161;
	add.s64 	%rd1498, %rd1497, %rd2730;
	add.s64 	%rd1499, %rd1498, %rd1496;
	add.s64 	%rd1500, %rd1499, %rd1493;
	add.s64 	%rd1501, %rd1500, %rd1416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1052,%dummy}, %rd1488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1053}, %rd1488;
	}
	shf.r.wrap.b32 	%r1054, %r1053, %r1052, 28;
	shf.r.wrap.b32 	%r1055, %r1052, %r1053, 28;
	mov.b64 	%rd1502, {%r1055, %r1054};
	shf.l.wrap.b32 	%r1056, %r1052, %r1053, 30;
	shf.l.wrap.b32 	%r1057, %r1053, %r1052, 30;
	mov.b64 	%rd1503, {%r1057, %r1056};
	xor.b64  	%rd1504, %rd1503, %rd1502;
	shf.l.wrap.b32 	%r1058, %r1052, %r1053, 25;
	shf.l.wrap.b32 	%r1059, %r1053, %r1052, 25;
	mov.b64 	%rd1505, {%r1059, %r1058};
	xor.b64  	%rd1506, %rd1504, %rd1505;
	xor.b64  	%rd1507, %rd1488, %rd1440;
	xor.b64  	%rd1508, %rd1488, %rd1464;
	and.b64  	%rd1509, %rd1508, %rd1507;
	xor.b64  	%rd1510, %rd1509, %rd1488;
	add.s64 	%rd1511, %rd1500, %rd1510;
	add.s64 	%rd1512, %rd1511, %rd1506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1060,%dummy}, %rd1501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1061}, %rd1501;
	}
	shf.r.wrap.b32 	%r1062, %r1061, %r1060, 14;
	shf.r.wrap.b32 	%r1063, %r1060, %r1061, 14;
	mov.b64 	%rd1513, {%r1063, %r1062};
	shf.r.wrap.b32 	%r1064, %r1061, %r1060, 18;
	shf.r.wrap.b32 	%r1065, %r1060, %r1061, 18;
	mov.b64 	%rd1514, {%r1065, %r1064};
	xor.b64  	%rd1515, %rd1514, %rd1513;
	shf.l.wrap.b32 	%r1066, %r1060, %r1061, 23;
	shf.l.wrap.b32 	%r1067, %r1061, %r1060, 23;
	mov.b64 	%rd1516, {%r1067, %r1066};
	xor.b64  	%rd1517, %rd1515, %rd1516;
	xor.b64  	%rd1518, %rd1477, %rd1453;
	and.b64  	%rd1519, %rd1501, %rd1518;
	xor.b64  	%rd1520, %rd1519, %rd1453;
	add.s64 	%rd1521, %rd1429, %rd1174;
	add.s64 	%rd1522, %rd1521, %rd2731;
	add.s64 	%rd1523, %rd1522, %rd1520;
	add.s64 	%rd1524, %rd1523, %rd1517;
	add.s64 	%rd1525, %rd1524, %rd1440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1068,%dummy}, %rd1512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1069}, %rd1512;
	}
	shf.r.wrap.b32 	%r1070, %r1069, %r1068, 28;
	shf.r.wrap.b32 	%r1071, %r1068, %r1069, 28;
	mov.b64 	%rd1526, {%r1071, %r1070};
	shf.l.wrap.b32 	%r1072, %r1068, %r1069, 30;
	shf.l.wrap.b32 	%r1073, %r1069, %r1068, 30;
	mov.b64 	%rd1527, {%r1073, %r1072};
	xor.b64  	%rd1528, %rd1527, %rd1526;
	shf.l.wrap.b32 	%r1074, %r1068, %r1069, 25;
	shf.l.wrap.b32 	%r1075, %r1069, %r1068, 25;
	mov.b64 	%rd1529, {%r1075, %r1074};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	xor.b64  	%rd1531, %rd1512, %rd1464;
	xor.b64  	%rd1532, %rd1512, %rd1488;
	and.b64  	%rd1533, %rd1532, %rd1531;
	xor.b64  	%rd1534, %rd1533, %rd1512;
	add.s64 	%rd1535, %rd1524, %rd1534;
	add.s64 	%rd1536, %rd1535, %rd1530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1076,%dummy}, %rd1525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd1525;
	}
	shf.r.wrap.b32 	%r1078, %r1077, %r1076, 14;
	shf.r.wrap.b32 	%r1079, %r1076, %r1077, 14;
	mov.b64 	%rd1537, {%r1079, %r1078};
	shf.r.wrap.b32 	%r1080, %r1077, %r1076, 18;
	shf.r.wrap.b32 	%r1081, %r1076, %r1077, 18;
	mov.b64 	%rd1538, {%r1081, %r1080};
	xor.b64  	%rd1539, %rd1538, %rd1537;
	shf.l.wrap.b32 	%r1082, %r1076, %r1077, 23;
	shf.l.wrap.b32 	%r1083, %r1077, %r1076, 23;
	mov.b64 	%rd1540, {%r1083, %r1082};
	xor.b64  	%rd1541, %rd1539, %rd1540;
	xor.b64  	%rd1542, %rd1501, %rd1477;
	and.b64  	%rd1543, %rd1525, %rd1542;
	xor.b64  	%rd1544, %rd1543, %rd1477;
	add.s64 	%rd1545, %rd1453, %rd1187;
	add.s64 	%rd1546, %rd1545, %rd2732;
	add.s64 	%rd1547, %rd1546, %rd1544;
	add.s64 	%rd1548, %rd1547, %rd1541;
	add.s64 	%rd1549, %rd1548, %rd1464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1084,%dummy}, %rd1536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1085}, %rd1536;
	}
	shf.r.wrap.b32 	%r1086, %r1085, %r1084, 28;
	shf.r.wrap.b32 	%r1087, %r1084, %r1085, 28;
	mov.b64 	%rd1550, {%r1087, %r1086};
	shf.l.wrap.b32 	%r1088, %r1084, %r1085, 30;
	shf.l.wrap.b32 	%r1089, %r1085, %r1084, 30;
	mov.b64 	%rd1551, {%r1089, %r1088};
	xor.b64  	%rd1552, %rd1551, %rd1550;
	shf.l.wrap.b32 	%r1090, %r1084, %r1085, 25;
	shf.l.wrap.b32 	%r1091, %r1085, %r1084, 25;
	mov.b64 	%rd1553, {%r1091, %r1090};
	xor.b64  	%rd1554, %rd1552, %rd1553;
	xor.b64  	%rd1555, %rd1536, %rd1488;
	xor.b64  	%rd1556, %rd1536, %rd1512;
	and.b64  	%rd1557, %rd1556, %rd1555;
	xor.b64  	%rd1558, %rd1557, %rd1536;
	add.s64 	%rd1559, %rd1548, %rd1558;
	add.s64 	%rd1560, %rd1559, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1092,%dummy}, %rd1549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd1549;
	}
	shf.r.wrap.b32 	%r1094, %r1093, %r1092, 14;
	shf.r.wrap.b32 	%r1095, %r1092, %r1093, 14;
	mov.b64 	%rd1561, {%r1095, %r1094};
	shf.r.wrap.b32 	%r1096, %r1093, %r1092, 18;
	shf.r.wrap.b32 	%r1097, %r1092, %r1093, 18;
	mov.b64 	%rd1562, {%r1097, %r1096};
	xor.b64  	%rd1563, %rd1562, %rd1561;
	shf.l.wrap.b32 	%r1098, %r1092, %r1093, 23;
	shf.l.wrap.b32 	%r1099, %r1093, %r1092, 23;
	mov.b64 	%rd1564, {%r1099, %r1098};
	xor.b64  	%rd1565, %rd1563, %rd1564;
	xor.b64  	%rd1566, %rd1525, %rd1501;
	and.b64  	%rd1567, %rd1549, %rd1566;
	xor.b64  	%rd1568, %rd1567, %rd1501;
	add.s64 	%rd1569, %rd1477, %rd1200;
	add.s64 	%rd1570, %rd1569, %rd2733;
	add.s64 	%rd1571, %rd1570, %rd1568;
	add.s64 	%rd1572, %rd1571, %rd1565;
	add.s64 	%rd1573, %rd1572, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1100,%dummy}, %rd1560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1101}, %rd1560;
	}
	shf.r.wrap.b32 	%r1102, %r1101, %r1100, 28;
	shf.r.wrap.b32 	%r1103, %r1100, %r1101, 28;
	mov.b64 	%rd1574, {%r1103, %r1102};
	shf.l.wrap.b32 	%r1104, %r1100, %r1101, 30;
	shf.l.wrap.b32 	%r1105, %r1101, %r1100, 30;
	mov.b64 	%rd1575, {%r1105, %r1104};
	xor.b64  	%rd1576, %rd1575, %rd1574;
	shf.l.wrap.b32 	%r1106, %r1100, %r1101, 25;
	shf.l.wrap.b32 	%r1107, %r1101, %r1100, 25;
	mov.b64 	%rd1577, {%r1107, %r1106};
	xor.b64  	%rd1578, %rd1576, %rd1577;
	xor.b64  	%rd1579, %rd1560, %rd1512;
	xor.b64  	%rd1580, %rd1560, %rd1536;
	and.b64  	%rd1581, %rd1580, %rd1579;
	xor.b64  	%rd1582, %rd1581, %rd1560;
	add.s64 	%rd1583, %rd1572, %rd1582;
	add.s64 	%rd1584, %rd1583, %rd1578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1108,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1109}, %rd1187;
	}
	shf.r.wrap.b32 	%r1110, %r1109, %r1108, 19;
	shf.r.wrap.b32 	%r1111, %r1108, %r1109, 19;
	mov.b64 	%rd1585, {%r1111, %r1110};
	shf.l.wrap.b32 	%r1112, %r1108, %r1109, 3;
	shf.l.wrap.b32 	%r1113, %r1109, %r1108, 3;
	mov.b64 	%rd1586, {%r1113, %r1112};
	shr.u64 	%rd1587, %rd1187, 6;
	xor.b64  	%rd1588, %rd1585, %rd1587;
	xor.b64  	%rd1589, %rd1588, %rd1586;
	shf.r.wrap.b32 	%r1114, %r727, %r726, 1;
	shf.r.wrap.b32 	%r1115, %r726, %r727, 1;
	mov.b64 	%rd1590, {%r1115, %r1114};
	shf.r.wrap.b32 	%r1116, %r727, %r726, 8;
	shf.r.wrap.b32 	%r1117, %r726, %r727, 8;
	mov.b64 	%rd1591, {%r1117, %r1116};
	shr.u64 	%rd1592, %rd1028, 7;
	xor.b64  	%rd1593, %rd1590, %rd1592;
	xor.b64  	%rd1594, %rd1593, %rd1591;
	add.s64 	%rd1595, %rd1015, %rd1122;
	add.s64 	%rd1596, %rd1595, %rd1589;
	add.s64 	%rd1597, %rd1596, %rd1594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1119}, %rd1200;
	}
	shf.r.wrap.b32 	%r1120, %r1119, %r1118, 19;
	shf.r.wrap.b32 	%r1121, %r1118, %r1119, 19;
	mov.b64 	%rd1598, {%r1121, %r1120};
	shf.l.wrap.b32 	%r1122, %r1118, %r1119, 3;
	shf.l.wrap.b32 	%r1123, %r1119, %r1118, 3;
	mov.b64 	%rd1599, {%r1123, %r1122};
	shr.u64 	%rd1600, %rd1200, 6;
	xor.b64  	%rd1601, %rd1598, %rd1600;
	xor.b64  	%rd1602, %rd1601, %rd1599;
	shf.r.wrap.b32 	%r1124, %r737, %r736, 1;
	shf.r.wrap.b32 	%r1125, %r736, %r737, 1;
	mov.b64 	%rd1603, {%r1125, %r1124};
	shf.r.wrap.b32 	%r1126, %r737, %r736, 8;
	shf.r.wrap.b32 	%r1127, %r736, %r737, 8;
	mov.b64 	%rd1604, {%r1127, %r1126};
	shr.u64 	%rd1605, %rd1036, 7;
	xor.b64  	%rd1606, %rd1603, %rd1605;
	xor.b64  	%rd1607, %rd1606, %rd1604;
	add.s64 	%rd1608, %rd1028, %rd1135;
	add.s64 	%rd1609, %rd1608, %rd1602;
	add.s64 	%rd1610, %rd1609, %rd1607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd1597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd1597;
	}
	shf.r.wrap.b32 	%r1130, %r1129, %r1128, 19;
	shf.r.wrap.b32 	%r1131, %r1128, %r1129, 19;
	mov.b64 	%rd1611, {%r1131, %r1130};
	shf.l.wrap.b32 	%r1132, %r1128, %r1129, 3;
	shf.l.wrap.b32 	%r1133, %r1129, %r1128, 3;
	mov.b64 	%rd1612, {%r1133, %r1132};
	shr.u64 	%rd1613, %rd1597, 6;
	xor.b64  	%rd1614, %rd1611, %rd1613;
	xor.b64  	%rd1615, %rd1614, %rd1612;
	shf.r.wrap.b32 	%r1134, %r743, %r742, 1;
	shf.r.wrap.b32 	%r1135, %r742, %r743, 1;
	mov.b64 	%rd1616, {%r1135, %r1134};
	shf.r.wrap.b32 	%r1136, %r743, %r742, 8;
	shf.r.wrap.b32 	%r1137, %r742, %r743, 8;
	mov.b64 	%rd1617, {%r1137, %r1136};
	shr.u64 	%rd1618, %rd1049, 7;
	xor.b64  	%rd1619, %rd1616, %rd1618;
	xor.b64  	%rd1620, %rd1619, %rd1617;
	add.s64 	%rd1621, %rd1036, %rd1148;
	add.s64 	%rd1622, %rd1621, %rd1615;
	add.s64 	%rd1623, %rd1622, %rd1620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1139}, %rd1610;
	}
	shf.r.wrap.b32 	%r1140, %r1139, %r1138, 19;
	shf.r.wrap.b32 	%r1141, %r1138, %r1139, 19;
	mov.b64 	%rd1624, {%r1141, %r1140};
	shf.l.wrap.b32 	%r1142, %r1138, %r1139, 3;
	shf.l.wrap.b32 	%r1143, %r1139, %r1138, 3;
	mov.b64 	%rd1625, {%r1143, %r1142};
	shr.u64 	%rd1626, %rd1610, 6;
	xor.b64  	%rd1627, %rd1624, %rd1626;
	xor.b64  	%rd1628, %rd1627, %rd1625;
	shf.r.wrap.b32 	%r1144, %r753, %r752, 1;
	shf.r.wrap.b32 	%r1145, %r752, %r753, 1;
	mov.b64 	%rd1629, {%r1145, %r1144};
	shf.r.wrap.b32 	%r1146, %r753, %r752, 8;
	shf.r.wrap.b32 	%r1147, %r752, %r753, 8;
	mov.b64 	%rd1630, {%r1147, %r1146};
	shr.u64 	%rd1631, %rd1057, 7;
	xor.b64  	%rd1632, %rd1629, %rd1631;
	xor.b64  	%rd1633, %rd1632, %rd1630;
	add.s64 	%rd1634, %rd1049, %rd1161;
	add.s64 	%rd1635, %rd1634, %rd1628;
	add.s64 	%rd1636, %rd1635, %rd1633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1148,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd1623;
	}
	shf.r.wrap.b32 	%r1150, %r1149, %r1148, 19;
	shf.r.wrap.b32 	%r1151, %r1148, %r1149, 19;
	mov.b64 	%rd1637, {%r1151, %r1150};
	shf.l.wrap.b32 	%r1152, %r1148, %r1149, 3;
	shf.l.wrap.b32 	%r1153, %r1149, %r1148, 3;
	mov.b64 	%rd1638, {%r1153, %r1152};
	shr.u64 	%rd1639, %rd1623, 6;
	xor.b64  	%rd1640, %rd1637, %rd1639;
	xor.b64  	%rd1641, %rd1640, %rd1638;
	shf.r.wrap.b32 	%r1154, %r763, %r762, 1;
	shf.r.wrap.b32 	%r1155, %r762, %r763, 1;
	mov.b64 	%rd1642, {%r1155, %r1154};
	shf.r.wrap.b32 	%r1156, %r763, %r762, 8;
	shf.r.wrap.b32 	%r1157, %r762, %r763, 8;
	mov.b64 	%rd1643, {%r1157, %r1156};
	shr.u64 	%rd1644, %rd1070, 7;
	xor.b64  	%rd1645, %rd1642, %rd1644;
	xor.b64  	%rd1646, %rd1645, %rd1643;
	add.s64 	%rd1647, %rd1057, %rd1174;
	add.s64 	%rd1648, %rd1647, %rd1641;
	add.s64 	%rd1649, %rd1648, %rd1646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1158,%dummy}, %rd1636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1159}, %rd1636;
	}
	shf.r.wrap.b32 	%r1160, %r1159, %r1158, 19;
	shf.r.wrap.b32 	%r1161, %r1158, %r1159, 19;
	mov.b64 	%rd1650, {%r1161, %r1160};
	shf.l.wrap.b32 	%r1162, %r1158, %r1159, 3;
	shf.l.wrap.b32 	%r1163, %r1159, %r1158, 3;
	mov.b64 	%rd1651, {%r1163, %r1162};
	shr.u64 	%rd1652, %rd1636, 6;
	xor.b64  	%rd1653, %rd1650, %rd1652;
	xor.b64  	%rd1654, %rd1653, %rd1651;
	shf.r.wrap.b32 	%r1164, %r773, %r772, 1;
	shf.r.wrap.b32 	%r1165, %r772, %r773, 1;
	mov.b64 	%rd1655, {%r1165, %r1164};
	shf.r.wrap.b32 	%r1166, %r773, %r772, 8;
	shf.r.wrap.b32 	%r1167, %r772, %r773, 8;
	mov.b64 	%rd1656, {%r1167, %r1166};
	shr.u64 	%rd1657, %rd1083, 7;
	xor.b64  	%rd1658, %rd1655, %rd1657;
	xor.b64  	%rd1659, %rd1658, %rd1656;
	add.s64 	%rd1660, %rd1070, %rd1187;
	add.s64 	%rd1661, %rd1660, %rd1654;
	add.s64 	%rd1662, %rd1661, %rd1659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1168,%dummy}, %rd1649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1169}, %rd1649;
	}
	shf.r.wrap.b32 	%r1170, %r1169, %r1168, 19;
	shf.r.wrap.b32 	%r1171, %r1168, %r1169, 19;
	mov.b64 	%rd1663, {%r1171, %r1170};
	shf.l.wrap.b32 	%r1172, %r1168, %r1169, 3;
	shf.l.wrap.b32 	%r1173, %r1169, %r1168, 3;
	mov.b64 	%rd1664, {%r1173, %r1172};
	shr.u64 	%rd1665, %rd1649, 6;
	xor.b64  	%rd1666, %rd1663, %rd1665;
	xor.b64  	%rd1667, %rd1666, %rd1664;
	shf.r.wrap.b32 	%r1174, %r783, %r782, 1;
	shf.r.wrap.b32 	%r1175, %r782, %r783, 1;
	mov.b64 	%rd1668, {%r1175, %r1174};
	shf.r.wrap.b32 	%r1176, %r783, %r782, 8;
	shf.r.wrap.b32 	%r1177, %r782, %r783, 8;
	mov.b64 	%rd1669, {%r1177, %r1176};
	shr.u64 	%rd1670, %rd1096, 7;
	xor.b64  	%rd1671, %rd1668, %rd1670;
	xor.b64  	%rd1672, %rd1671, %rd1669;
	add.s64 	%rd1673, %rd1083, %rd1200;
	add.s64 	%rd1674, %rd1673, %rd1667;
	add.s64 	%rd1675, %rd1674, %rd1672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd1662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1179}, %rd1662;
	}
	shf.r.wrap.b32 	%r1180, %r1179, %r1178, 19;
	shf.r.wrap.b32 	%r1181, %r1178, %r1179, 19;
	mov.b64 	%rd1676, {%r1181, %r1180};
	shf.l.wrap.b32 	%r1182, %r1178, %r1179, 3;
	shf.l.wrap.b32 	%r1183, %r1179, %r1178, 3;
	mov.b64 	%rd1677, {%r1183, %r1182};
	shr.u64 	%rd1678, %rd1662, 6;
	xor.b64  	%rd1679, %rd1676, %rd1678;
	xor.b64  	%rd1680, %rd1679, %rd1677;
	shf.r.wrap.b32 	%r1184, %r793, %r792, 1;
	shf.r.wrap.b32 	%r1185, %r792, %r793, 1;
	mov.b64 	%rd1681, {%r1185, %r1184};
	shf.r.wrap.b32 	%r1186, %r793, %r792, 8;
	shf.r.wrap.b32 	%r1187, %r792, %r793, 8;
	mov.b64 	%rd1682, {%r1187, %r1186};
	shr.u64 	%rd1683, %rd1109, 7;
	xor.b64  	%rd1684, %rd1681, %rd1683;
	xor.b64  	%rd1685, %rd1684, %rd1682;
	add.s64 	%rd1686, %rd1597, %rd1096;
	add.s64 	%rd1687, %rd1686, %rd1680;
	add.s64 	%rd1688, %rd1687, %rd1685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1188,%dummy}, %rd1675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1189}, %rd1675;
	}
	shf.r.wrap.b32 	%r1190, %r1189, %r1188, 19;
	shf.r.wrap.b32 	%r1191, %r1188, %r1189, 19;
	mov.b64 	%rd1689, {%r1191, %r1190};
	shf.l.wrap.b32 	%r1192, %r1188, %r1189, 3;
	shf.l.wrap.b32 	%r1193, %r1189, %r1188, 3;
	mov.b64 	%rd1690, {%r1193, %r1192};
	shr.u64 	%rd1691, %rd1675, 6;
	xor.b64  	%rd1692, %rd1689, %rd1691;
	xor.b64  	%rd1693, %rd1692, %rd1690;
	shf.r.wrap.b32 	%r1194, %r803, %r802, 1;
	shf.r.wrap.b32 	%r1195, %r802, %r803, 1;
	mov.b64 	%rd1694, {%r1195, %r1194};
	shf.r.wrap.b32 	%r1196, %r803, %r802, 8;
	shf.r.wrap.b32 	%r1197, %r802, %r803, 8;
	mov.b64 	%rd1695, {%r1197, %r1196};
	shr.u64 	%rd1696, %rd1122, 7;
	xor.b64  	%rd1697, %rd1694, %rd1696;
	xor.b64  	%rd1698, %rd1697, %rd1695;
	add.s64 	%rd1699, %rd1610, %rd1109;
	add.s64 	%rd1700, %rd1699, %rd1693;
	add.s64 	%rd1701, %rd1700, %rd1698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1198,%dummy}, %rd1688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1199}, %rd1688;
	}
	shf.r.wrap.b32 	%r1200, %r1199, %r1198, 19;
	shf.r.wrap.b32 	%r1201, %r1198, %r1199, 19;
	mov.b64 	%rd1702, {%r1201, %r1200};
	shf.l.wrap.b32 	%r1202, %r1198, %r1199, 3;
	shf.l.wrap.b32 	%r1203, %r1199, %r1198, 3;
	mov.b64 	%rd1703, {%r1203, %r1202};
	shr.u64 	%rd1704, %rd1688, 6;
	xor.b64  	%rd1705, %rd1702, %rd1704;
	xor.b64  	%rd1706, %rd1705, %rd1703;
	shf.r.wrap.b32 	%r1204, %r813, %r812, 1;
	shf.r.wrap.b32 	%r1205, %r812, %r813, 1;
	mov.b64 	%rd1707, {%r1205, %r1204};
	shf.r.wrap.b32 	%r1206, %r813, %r812, 8;
	shf.r.wrap.b32 	%r1207, %r812, %r813, 8;
	mov.b64 	%rd1708, {%r1207, %r1206};
	shr.u64 	%rd1709, %rd1135, 7;
	xor.b64  	%rd1710, %rd1707, %rd1709;
	xor.b64  	%rd1711, %rd1710, %rd1708;
	add.s64 	%rd1712, %rd1623, %rd1122;
	add.s64 	%rd1713, %rd1712, %rd1706;
	add.s64 	%rd1714, %rd1713, %rd1711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1208,%dummy}, %rd1701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1209}, %rd1701;
	}
	shf.r.wrap.b32 	%r1210, %r1209, %r1208, 19;
	shf.r.wrap.b32 	%r1211, %r1208, %r1209, 19;
	mov.b64 	%rd1715, {%r1211, %r1210};
	shf.l.wrap.b32 	%r1212, %r1208, %r1209, 3;
	shf.l.wrap.b32 	%r1213, %r1209, %r1208, 3;
	mov.b64 	%rd1716, {%r1213, %r1212};
	shr.u64 	%rd1717, %rd1701, 6;
	xor.b64  	%rd1718, %rd1715, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1716;
	shf.r.wrap.b32 	%r1214, %r823, %r822, 1;
	shf.r.wrap.b32 	%r1215, %r822, %r823, 1;
	mov.b64 	%rd1720, {%r1215, %r1214};
	shf.r.wrap.b32 	%r1216, %r823, %r822, 8;
	shf.r.wrap.b32 	%r1217, %r822, %r823, 8;
	mov.b64 	%rd1721, {%r1217, %r1216};
	shr.u64 	%rd1722, %rd1148, 7;
	xor.b64  	%rd1723, %rd1720, %rd1722;
	xor.b64  	%rd1724, %rd1723, %rd1721;
	add.s64 	%rd1725, %rd1636, %rd1135;
	add.s64 	%rd1726, %rd1725, %rd1719;
	add.s64 	%rd1727, %rd1726, %rd1724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1218,%dummy}, %rd1714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1219}, %rd1714;
	}
	shf.r.wrap.b32 	%r1220, %r1219, %r1218, 19;
	shf.r.wrap.b32 	%r1221, %r1218, %r1219, 19;
	mov.b64 	%rd1728, {%r1221, %r1220};
	shf.l.wrap.b32 	%r1222, %r1218, %r1219, 3;
	shf.l.wrap.b32 	%r1223, %r1219, %r1218, 3;
	mov.b64 	%rd1729, {%r1223, %r1222};
	shr.u64 	%rd1730, %rd1714, 6;
	xor.b64  	%rd1731, %rd1728, %rd1730;
	xor.b64  	%rd1732, %rd1731, %rd1729;
	shf.r.wrap.b32 	%r1224, %r833, %r832, 1;
	shf.r.wrap.b32 	%r1225, %r832, %r833, 1;
	mov.b64 	%rd1733, {%r1225, %r1224};
	shf.r.wrap.b32 	%r1226, %r833, %r832, 8;
	shf.r.wrap.b32 	%r1227, %r832, %r833, 8;
	mov.b64 	%rd1734, {%r1227, %r1226};
	shr.u64 	%rd1735, %rd1161, 7;
	xor.b64  	%rd1736, %rd1733, %rd1735;
	xor.b64  	%rd1737, %rd1736, %rd1734;
	add.s64 	%rd1738, %rd1649, %rd1148;
	add.s64 	%rd1739, %rd1738, %rd1732;
	add.s64 	%rd1740, %rd1739, %rd1737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1228,%dummy}, %rd1727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1229}, %rd1727;
	}
	shf.r.wrap.b32 	%r1230, %r1229, %r1228, 19;
	shf.r.wrap.b32 	%r1231, %r1228, %r1229, 19;
	mov.b64 	%rd1741, {%r1231, %r1230};
	shf.l.wrap.b32 	%r1232, %r1228, %r1229, 3;
	shf.l.wrap.b32 	%r1233, %r1229, %r1228, 3;
	mov.b64 	%rd1742, {%r1233, %r1232};
	shr.u64 	%rd1743, %rd1727, 6;
	xor.b64  	%rd1744, %rd1741, %rd1743;
	xor.b64  	%rd1745, %rd1744, %rd1742;
	shf.r.wrap.b32 	%r1234, %r843, %r842, 1;
	shf.r.wrap.b32 	%r1235, %r842, %r843, 1;
	mov.b64 	%rd1746, {%r1235, %r1234};
	shf.r.wrap.b32 	%r1236, %r843, %r842, 8;
	shf.r.wrap.b32 	%r1237, %r842, %r843, 8;
	mov.b64 	%rd1747, {%r1237, %r1236};
	shr.u64 	%rd1748, %rd1174, 7;
	xor.b64  	%rd1749, %rd1746, %rd1748;
	xor.b64  	%rd1750, %rd1749, %rd1747;
	add.s64 	%rd1751, %rd1662, %rd1161;
	add.s64 	%rd1752, %rd1751, %rd1745;
	add.s64 	%rd1753, %rd1752, %rd1750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1238,%dummy}, %rd1740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1239}, %rd1740;
	}
	shf.r.wrap.b32 	%r1240, %r1239, %r1238, 19;
	shf.r.wrap.b32 	%r1241, %r1238, %r1239, 19;
	mov.b64 	%rd1754, {%r1241, %r1240};
	shf.l.wrap.b32 	%r1242, %r1238, %r1239, 3;
	shf.l.wrap.b32 	%r1243, %r1239, %r1238, 3;
	mov.b64 	%rd1755, {%r1243, %r1242};
	shr.u64 	%rd1756, %rd1740, 6;
	xor.b64  	%rd1757, %rd1754, %rd1756;
	xor.b64  	%rd1758, %rd1757, %rd1755;
	shf.r.wrap.b32 	%r1244, %r1109, %r1108, 1;
	shf.r.wrap.b32 	%r1245, %r1108, %r1109, 1;
	mov.b64 	%rd1759, {%r1245, %r1244};
	shf.r.wrap.b32 	%r1246, %r1109, %r1108, 8;
	shf.r.wrap.b32 	%r1247, %r1108, %r1109, 8;
	mov.b64 	%rd1760, {%r1247, %r1246};
	shr.u64 	%rd1761, %rd1187, 7;
	xor.b64  	%rd1762, %rd1759, %rd1761;
	xor.b64  	%rd1763, %rd1762, %rd1760;
	add.s64 	%rd1764, %rd1675, %rd1174;
	add.s64 	%rd1765, %rd1764, %rd1758;
	add.s64 	%rd1766, %rd1765, %rd1763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd1753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd1753;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 19;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 19;
	mov.b64 	%rd1767, {%r1251, %r1250};
	shf.l.wrap.b32 	%r1252, %r1248, %r1249, 3;
	shf.l.wrap.b32 	%r1253, %r1249, %r1248, 3;
	mov.b64 	%rd1768, {%r1253, %r1252};
	shr.u64 	%rd1769, %rd1753, 6;
	xor.b64  	%rd1770, %rd1767, %rd1769;
	xor.b64  	%rd1771, %rd1770, %rd1768;
	shf.r.wrap.b32 	%r1254, %r1119, %r1118, 1;
	shf.r.wrap.b32 	%r1255, %r1118, %r1119, 1;
	mov.b64 	%rd1772, {%r1255, %r1254};
	shf.r.wrap.b32 	%r1256, %r1119, %r1118, 8;
	shf.r.wrap.b32 	%r1257, %r1118, %r1119, 8;
	mov.b64 	%rd1773, {%r1257, %r1256};
	shr.u64 	%rd1774, %rd1200, 7;
	xor.b64  	%rd1775, %rd1772, %rd1774;
	xor.b64  	%rd1776, %rd1775, %rd1773;
	add.s64 	%rd1777, %rd1688, %rd1187;
	add.s64 	%rd1778, %rd1777, %rd1771;
	add.s64 	%rd1779, %rd1778, %rd1776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1258,%dummy}, %rd1766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1259}, %rd1766;
	}
	shf.r.wrap.b32 	%r1260, %r1259, %r1258, 19;
	shf.r.wrap.b32 	%r1261, %r1258, %r1259, 19;
	mov.b64 	%rd1780, {%r1261, %r1260};
	shf.l.wrap.b32 	%r1262, %r1258, %r1259, 3;
	shf.l.wrap.b32 	%r1263, %r1259, %r1258, 3;
	mov.b64 	%rd1781, {%r1263, %r1262};
	shr.u64 	%rd1782, %rd1766, 6;
	xor.b64  	%rd1783, %rd1780, %rd1782;
	xor.b64  	%rd1784, %rd1783, %rd1781;
	shf.r.wrap.b32 	%r1264, %r1129, %r1128, 1;
	shf.r.wrap.b32 	%r1265, %r1128, %r1129, 1;
	mov.b64 	%rd1785, {%r1265, %r1264};
	shf.r.wrap.b32 	%r1266, %r1129, %r1128, 8;
	shf.r.wrap.b32 	%r1267, %r1128, %r1129, 8;
	mov.b64 	%rd1786, {%r1267, %r1266};
	shr.u64 	%rd1787, %rd1597, 7;
	xor.b64  	%rd1788, %rd1785, %rd1787;
	xor.b64  	%rd1789, %rd1788, %rd1786;
	add.s64 	%rd1790, %rd1701, %rd1200;
	add.s64 	%rd1791, %rd1790, %rd1784;
	add.s64 	%rd1792, %rd1791, %rd1789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1268,%dummy}, %rd1573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1269}, %rd1573;
	}
	shf.r.wrap.b32 	%r1270, %r1269, %r1268, 14;
	shf.r.wrap.b32 	%r1271, %r1268, %r1269, 14;
	mov.b64 	%rd1793, {%r1271, %r1270};
	shf.r.wrap.b32 	%r1272, %r1269, %r1268, 18;
	shf.r.wrap.b32 	%r1273, %r1268, %r1269, 18;
	mov.b64 	%rd1794, {%r1273, %r1272};
	xor.b64  	%rd1795, %rd1794, %rd1793;
	shf.l.wrap.b32 	%r1274, %r1268, %r1269, 23;
	shf.l.wrap.b32 	%r1275, %r1269, %r1268, 23;
	mov.b64 	%rd1796, {%r1275, %r1274};
	xor.b64  	%rd1797, %rd1795, %rd1796;
	xor.b64  	%rd1798, %rd1525, %rd1549;
	and.b64  	%rd1799, %rd1798, %rd1573;
	xor.b64  	%rd1800, %rd1799, %rd1525;
	add.s64 	%rd1801, %rd1800, %rd1501;
	add.s64 	%rd1802, %rd1801, %rd1597;
	add.s64 	%rd1803, %rd1802, %rd2734;
	add.s64 	%rd1804, %rd1803, %rd1797;
	add.s64 	%rd1805, %rd1804, %rd1512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1276,%dummy}, %rd1584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1277}, %rd1584;
	}
	shf.r.wrap.b32 	%r1278, %r1277, %r1276, 28;
	shf.r.wrap.b32 	%r1279, %r1276, %r1277, 28;
	mov.b64 	%rd1806, {%r1279, %r1278};
	shf.l.wrap.b32 	%r1280, %r1276, %r1277, 30;
	shf.l.wrap.b32 	%r1281, %r1277, %r1276, 30;
	mov.b64 	%rd1807, {%r1281, %r1280};
	xor.b64  	%rd1808, %rd1807, %rd1806;
	shf.l.wrap.b32 	%r1282, %r1276, %r1277, 25;
	shf.l.wrap.b32 	%r1283, %r1277, %r1276, 25;
	mov.b64 	%rd1809, {%r1283, %r1282};
	xor.b64  	%rd1810, %rd1808, %rd1809;
	xor.b64  	%rd1811, %rd1584, %rd1536;
	xor.b64  	%rd1812, %rd1584, %rd1560;
	and.b64  	%rd1813, %rd1812, %rd1811;
	xor.b64  	%rd1814, %rd1813, %rd1584;
	add.s64 	%rd1815, %rd1804, %rd1814;
	add.s64 	%rd1816, %rd1815, %rd1810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1284,%dummy}, %rd1805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1285}, %rd1805;
	}
	shf.r.wrap.b32 	%r1286, %r1285, %r1284, 14;
	shf.r.wrap.b32 	%r1287, %r1284, %r1285, 14;
	mov.b64 	%rd1817, {%r1287, %r1286};
	shf.r.wrap.b32 	%r1288, %r1285, %r1284, 18;
	shf.r.wrap.b32 	%r1289, %r1284, %r1285, 18;
	mov.b64 	%rd1818, {%r1289, %r1288};
	xor.b64  	%rd1819, %rd1818, %rd1817;
	shf.l.wrap.b32 	%r1290, %r1284, %r1285, 23;
	shf.l.wrap.b32 	%r1291, %r1285, %r1284, 23;
	mov.b64 	%rd1820, {%r1291, %r1290};
	xor.b64  	%rd1821, %rd1819, %rd1820;
	xor.b64  	%rd1822, %rd1549, %rd1573;
	and.b64  	%rd1823, %rd1805, %rd1822;
	xor.b64  	%rd1824, %rd1823, %rd1549;
	add.s64 	%rd1825, %rd1610, %rd1525;
	add.s64 	%rd1826, %rd1825, %rd2735;
	add.s64 	%rd1827, %rd1826, %rd1824;
	add.s64 	%rd1828, %rd1827, %rd1821;
	add.s64 	%rd1829, %rd1828, %rd1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd1816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1816;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 28;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 28;
	mov.b64 	%rd1830, {%r1295, %r1294};
	shf.l.wrap.b32 	%r1296, %r1292, %r1293, 30;
	shf.l.wrap.b32 	%r1297, %r1293, %r1292, 30;
	mov.b64 	%rd1831, {%r1297, %r1296};
	xor.b64  	%rd1832, %rd1831, %rd1830;
	shf.l.wrap.b32 	%r1298, %r1292, %r1293, 25;
	shf.l.wrap.b32 	%r1299, %r1293, %r1292, 25;
	mov.b64 	%rd1833, {%r1299, %r1298};
	xor.b64  	%rd1834, %rd1832, %rd1833;
	xor.b64  	%rd1835, %rd1816, %rd1560;
	xor.b64  	%rd1836, %rd1816, %rd1584;
	and.b64  	%rd1837, %rd1836, %rd1835;
	xor.b64  	%rd1838, %rd1837, %rd1816;
	add.s64 	%rd1839, %rd1828, %rd1838;
	add.s64 	%rd1840, %rd1839, %rd1834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd1829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd1829;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 14;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 14;
	mov.b64 	%rd1841, {%r1303, %r1302};
	shf.r.wrap.b32 	%r1304, %r1301, %r1300, 18;
	shf.r.wrap.b32 	%r1305, %r1300, %r1301, 18;
	mov.b64 	%rd1842, {%r1305, %r1304};
	xor.b64  	%rd1843, %rd1842, %rd1841;
	shf.l.wrap.b32 	%r1306, %r1300, %r1301, 23;
	shf.l.wrap.b32 	%r1307, %r1301, %r1300, 23;
	mov.b64 	%rd1844, {%r1307, %r1306};
	xor.b64  	%rd1845, %rd1843, %rd1844;
	xor.b64  	%rd1846, %rd1805, %rd1573;
	and.b64  	%rd1847, %rd1829, %rd1846;
	xor.b64  	%rd1848, %rd1847, %rd1573;
	add.s64 	%rd1849, %rd1623, %rd1549;
	add.s64 	%rd1850, %rd1849, %rd2736;
	add.s64 	%rd1851, %rd1850, %rd1848;
	add.s64 	%rd1852, %rd1851, %rd1845;
	add.s64 	%rd1853, %rd1852, %rd1560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1308,%dummy}, %rd1840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd1840;
	}
	shf.r.wrap.b32 	%r1310, %r1309, %r1308, 28;
	shf.r.wrap.b32 	%r1311, %r1308, %r1309, 28;
	mov.b64 	%rd1854, {%r1311, %r1310};
	shf.l.wrap.b32 	%r1312, %r1308, %r1309, 30;
	shf.l.wrap.b32 	%r1313, %r1309, %r1308, 30;
	mov.b64 	%rd1855, {%r1313, %r1312};
	xor.b64  	%rd1856, %rd1855, %rd1854;
	shf.l.wrap.b32 	%r1314, %r1308, %r1309, 25;
	shf.l.wrap.b32 	%r1315, %r1309, %r1308, 25;
	mov.b64 	%rd1857, {%r1315, %r1314};
	xor.b64  	%rd1858, %rd1856, %rd1857;
	xor.b64  	%rd1859, %rd1840, %rd1584;
	xor.b64  	%rd1860, %rd1840, %rd1816;
	and.b64  	%rd1861, %rd1860, %rd1859;
	xor.b64  	%rd1862, %rd1861, %rd1840;
	add.s64 	%rd1863, %rd1852, %rd1862;
	add.s64 	%rd1864, %rd1863, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1316,%dummy}, %rd1853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1317}, %rd1853;
	}
	shf.r.wrap.b32 	%r1318, %r1317, %r1316, 14;
	shf.r.wrap.b32 	%r1319, %r1316, %r1317, 14;
	mov.b64 	%rd1865, {%r1319, %r1318};
	shf.r.wrap.b32 	%r1320, %r1317, %r1316, 18;
	shf.r.wrap.b32 	%r1321, %r1316, %r1317, 18;
	mov.b64 	%rd1866, {%r1321, %r1320};
	xor.b64  	%rd1867, %rd1866, %rd1865;
	shf.l.wrap.b32 	%r1322, %r1316, %r1317, 23;
	shf.l.wrap.b32 	%r1323, %r1317, %r1316, 23;
	mov.b64 	%rd1868, {%r1323, %r1322};
	xor.b64  	%rd1869, %rd1867, %rd1868;
	xor.b64  	%rd1870, %rd1829, %rd1805;
	and.b64  	%rd1871, %rd1853, %rd1870;
	xor.b64  	%rd1872, %rd1871, %rd1805;
	add.s64 	%rd1873, %rd1636, %rd1573;
	add.s64 	%rd1874, %rd1873, %rd2737;
	add.s64 	%rd1875, %rd1874, %rd1872;
	add.s64 	%rd1876, %rd1875, %rd1869;
	add.s64 	%rd1877, %rd1876, %rd1584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1324,%dummy}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1325}, %rd1864;
	}
	shf.r.wrap.b32 	%r1326, %r1325, %r1324, 28;
	shf.r.wrap.b32 	%r1327, %r1324, %r1325, 28;
	mov.b64 	%rd1878, {%r1327, %r1326};
	shf.l.wrap.b32 	%r1328, %r1324, %r1325, 30;
	shf.l.wrap.b32 	%r1329, %r1325, %r1324, 30;
	mov.b64 	%rd1879, {%r1329, %r1328};
	xor.b64  	%rd1880, %rd1879, %rd1878;
	shf.l.wrap.b32 	%r1330, %r1324, %r1325, 25;
	shf.l.wrap.b32 	%r1331, %r1325, %r1324, 25;
	mov.b64 	%rd1881, {%r1331, %r1330};
	xor.b64  	%rd1882, %rd1880, %rd1881;
	xor.b64  	%rd1883, %rd1864, %rd1816;
	xor.b64  	%rd1884, %rd1864, %rd1840;
	and.b64  	%rd1885, %rd1884, %rd1883;
	xor.b64  	%rd1886, %rd1885, %rd1864;
	add.s64 	%rd1887, %rd1876, %rd1886;
	add.s64 	%rd1888, %rd1887, %rd1882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1332,%dummy}, %rd1877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1333}, %rd1877;
	}
	shf.r.wrap.b32 	%r1334, %r1333, %r1332, 14;
	shf.r.wrap.b32 	%r1335, %r1332, %r1333, 14;
	mov.b64 	%rd1889, {%r1335, %r1334};
	shf.r.wrap.b32 	%r1336, %r1333, %r1332, 18;
	shf.r.wrap.b32 	%r1337, %r1332, %r1333, 18;
	mov.b64 	%rd1890, {%r1337, %r1336};
	xor.b64  	%rd1891, %rd1890, %rd1889;
	shf.l.wrap.b32 	%r1338, %r1332, %r1333, 23;
	shf.l.wrap.b32 	%r1339, %r1333, %r1332, 23;
	mov.b64 	%rd1892, {%r1339, %r1338};
	xor.b64  	%rd1893, %rd1891, %rd1892;
	xor.b64  	%rd1894, %rd1853, %rd1829;
	and.b64  	%rd1895, %rd1877, %rd1894;
	xor.b64  	%rd1896, %rd1895, %rd1829;
	add.s64 	%rd1897, %rd1805, %rd1649;
	add.s64 	%rd1898, %rd1897, %rd2738;
	add.s64 	%rd1899, %rd1898, %rd1896;
	add.s64 	%rd1900, %rd1899, %rd1893;
	add.s64 	%rd1901, %rd1900, %rd1816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1340,%dummy}, %rd1888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1341}, %rd1888;
	}
	shf.r.wrap.b32 	%r1342, %r1341, %r1340, 28;
	shf.r.wrap.b32 	%r1343, %r1340, %r1341, 28;
	mov.b64 	%rd1902, {%r1343, %r1342};
	shf.l.wrap.b32 	%r1344, %r1340, %r1341, 30;
	shf.l.wrap.b32 	%r1345, %r1341, %r1340, 30;
	mov.b64 	%rd1903, {%r1345, %r1344};
	xor.b64  	%rd1904, %rd1903, %rd1902;
	shf.l.wrap.b32 	%r1346, %r1340, %r1341, 25;
	shf.l.wrap.b32 	%r1347, %r1341, %r1340, 25;
	mov.b64 	%rd1905, {%r1347, %r1346};
	xor.b64  	%rd1906, %rd1904, %rd1905;
	xor.b64  	%rd1907, %rd1888, %rd1840;
	xor.b64  	%rd1908, %rd1888, %rd1864;
	and.b64  	%rd1909, %rd1908, %rd1907;
	xor.b64  	%rd1910, %rd1909, %rd1888;
	add.s64 	%rd1911, %rd1900, %rd1910;
	add.s64 	%rd1912, %rd1911, %rd1906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1348,%dummy}, %rd1901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1349}, %rd1901;
	}
	shf.r.wrap.b32 	%r1350, %r1349, %r1348, 14;
	shf.r.wrap.b32 	%r1351, %r1348, %r1349, 14;
	mov.b64 	%rd1913, {%r1351, %r1350};
	shf.r.wrap.b32 	%r1352, %r1349, %r1348, 18;
	shf.r.wrap.b32 	%r1353, %r1348, %r1349, 18;
	mov.b64 	%rd1914, {%r1353, %r1352};
	xor.b64  	%rd1915, %rd1914, %rd1913;
	shf.l.wrap.b32 	%r1354, %r1348, %r1349, 23;
	shf.l.wrap.b32 	%r1355, %r1349, %r1348, 23;
	mov.b64 	%rd1916, {%r1355, %r1354};
	xor.b64  	%rd1917, %rd1915, %rd1916;
	xor.b64  	%rd1918, %rd1877, %rd1853;
	and.b64  	%rd1919, %rd1901, %rd1918;
	xor.b64  	%rd1920, %rd1919, %rd1853;
	add.s64 	%rd1921, %rd1829, %rd1662;
	add.s64 	%rd1922, %rd1921, %rd2739;
	add.s64 	%rd1923, %rd1922, %rd1920;
	add.s64 	%rd1924, %rd1923, %rd1917;
	add.s64 	%rd1925, %rd1924, %rd1840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1356,%dummy}, %rd1912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1357}, %rd1912;
	}
	shf.r.wrap.b32 	%r1358, %r1357, %r1356, 28;
	shf.r.wrap.b32 	%r1359, %r1356, %r1357, 28;
	mov.b64 	%rd1926, {%r1359, %r1358};
	shf.l.wrap.b32 	%r1360, %r1356, %r1357, 30;
	shf.l.wrap.b32 	%r1361, %r1357, %r1356, 30;
	mov.b64 	%rd1927, {%r1361, %r1360};
	xor.b64  	%rd1928, %rd1927, %rd1926;
	shf.l.wrap.b32 	%r1362, %r1356, %r1357, 25;
	shf.l.wrap.b32 	%r1363, %r1357, %r1356, 25;
	mov.b64 	%rd1929, {%r1363, %r1362};
	xor.b64  	%rd1930, %rd1928, %rd1929;
	xor.b64  	%rd1931, %rd1912, %rd1864;
	xor.b64  	%rd1932, %rd1912, %rd1888;
	and.b64  	%rd1933, %rd1932, %rd1931;
	xor.b64  	%rd1934, %rd1933, %rd1912;
	add.s64 	%rd1935, %rd1924, %rd1934;
	add.s64 	%rd1936, %rd1935, %rd1930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1364,%dummy}, %rd1925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1365}, %rd1925;
	}
	shf.r.wrap.b32 	%r1366, %r1365, %r1364, 14;
	shf.r.wrap.b32 	%r1367, %r1364, %r1365, 14;
	mov.b64 	%rd1937, {%r1367, %r1366};
	shf.r.wrap.b32 	%r1368, %r1365, %r1364, 18;
	shf.r.wrap.b32 	%r1369, %r1364, %r1365, 18;
	mov.b64 	%rd1938, {%r1369, %r1368};
	xor.b64  	%rd1939, %rd1938, %rd1937;
	shf.l.wrap.b32 	%r1370, %r1364, %r1365, 23;
	shf.l.wrap.b32 	%r1371, %r1365, %r1364, 23;
	mov.b64 	%rd1940, {%r1371, %r1370};
	xor.b64  	%rd1941, %rd1939, %rd1940;
	xor.b64  	%rd1942, %rd1901, %rd1877;
	and.b64  	%rd1943, %rd1925, %rd1942;
	xor.b64  	%rd1944, %rd1943, %rd1877;
	add.s64 	%rd1945, %rd1853, %rd1675;
	add.s64 	%rd1946, %rd1945, %rd2740;
	add.s64 	%rd1947, %rd1946, %rd1944;
	add.s64 	%rd1948, %rd1947, %rd1941;
	add.s64 	%rd1949, %rd1948, %rd1864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1372,%dummy}, %rd1936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1373}, %rd1936;
	}
	shf.r.wrap.b32 	%r1374, %r1373, %r1372, 28;
	shf.r.wrap.b32 	%r1375, %r1372, %r1373, 28;
	mov.b64 	%rd1950, {%r1375, %r1374};
	shf.l.wrap.b32 	%r1376, %r1372, %r1373, 30;
	shf.l.wrap.b32 	%r1377, %r1373, %r1372, 30;
	mov.b64 	%rd1951, {%r1377, %r1376};
	xor.b64  	%rd1952, %rd1951, %rd1950;
	shf.l.wrap.b32 	%r1378, %r1372, %r1373, 25;
	shf.l.wrap.b32 	%r1379, %r1373, %r1372, 25;
	mov.b64 	%rd1953, {%r1379, %r1378};
	xor.b64  	%rd1954, %rd1952, %rd1953;
	xor.b64  	%rd1955, %rd1936, %rd1888;
	xor.b64  	%rd1956, %rd1936, %rd1912;
	and.b64  	%rd1957, %rd1956, %rd1955;
	xor.b64  	%rd1958, %rd1957, %rd1936;
	add.s64 	%rd1959, %rd1948, %rd1958;
	add.s64 	%rd1960, %rd1959, %rd1954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1380,%dummy}, %rd1949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1381}, %rd1949;
	}
	shf.r.wrap.b32 	%r1382, %r1381, %r1380, 14;
	shf.r.wrap.b32 	%r1383, %r1380, %r1381, 14;
	mov.b64 	%rd1961, {%r1383, %r1382};
	shf.r.wrap.b32 	%r1384, %r1381, %r1380, 18;
	shf.r.wrap.b32 	%r1385, %r1380, %r1381, 18;
	mov.b64 	%rd1962, {%r1385, %r1384};
	xor.b64  	%rd1963, %rd1962, %rd1961;
	shf.l.wrap.b32 	%r1386, %r1380, %r1381, 23;
	shf.l.wrap.b32 	%r1387, %r1381, %r1380, 23;
	mov.b64 	%rd1964, {%r1387, %r1386};
	xor.b64  	%rd1965, %rd1963, %rd1964;
	xor.b64  	%rd1966, %rd1925, %rd1901;
	and.b64  	%rd1967, %rd1949, %rd1966;
	xor.b64  	%rd1968, %rd1967, %rd1901;
	add.s64 	%rd1969, %rd1877, %rd1688;
	add.s64 	%rd1970, %rd1969, %rd2744;
	add.s64 	%rd1971, %rd1970, %rd1968;
	add.s64 	%rd1972, %rd1971, %rd1965;
	add.s64 	%rd1973, %rd1972, %rd1888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1388,%dummy}, %rd1960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd1960;
	}
	shf.r.wrap.b32 	%r1390, %r1389, %r1388, 28;
	shf.r.wrap.b32 	%r1391, %r1388, %r1389, 28;
	mov.b64 	%rd1974, {%r1391, %r1390};
	shf.l.wrap.b32 	%r1392, %r1388, %r1389, 30;
	shf.l.wrap.b32 	%r1393, %r1389, %r1388, 30;
	mov.b64 	%rd1975, {%r1393, %r1392};
	xor.b64  	%rd1976, %rd1975, %rd1974;
	shf.l.wrap.b32 	%r1394, %r1388, %r1389, 25;
	shf.l.wrap.b32 	%r1395, %r1389, %r1388, 25;
	mov.b64 	%rd1977, {%r1395, %r1394};
	xor.b64  	%rd1978, %rd1976, %rd1977;
	xor.b64  	%rd1979, %rd1960, %rd1912;
	xor.b64  	%rd1980, %rd1960, %rd1936;
	and.b64  	%rd1981, %rd1980, %rd1979;
	xor.b64  	%rd1982, %rd1981, %rd1960;
	add.s64 	%rd1983, %rd1972, %rd1982;
	add.s64 	%rd1984, %rd1983, %rd1978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1396,%dummy}, %rd1973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd1973;
	}
	shf.r.wrap.b32 	%r1398, %r1397, %r1396, 14;
	shf.r.wrap.b32 	%r1399, %r1396, %r1397, 14;
	mov.b64 	%rd1985, {%r1399, %r1398};
	shf.r.wrap.b32 	%r1400, %r1397, %r1396, 18;
	shf.r.wrap.b32 	%r1401, %r1396, %r1397, 18;
	mov.b64 	%rd1986, {%r1401, %r1400};
	xor.b64  	%rd1987, %rd1986, %rd1985;
	shf.l.wrap.b32 	%r1402, %r1396, %r1397, 23;
	shf.l.wrap.b32 	%r1403, %r1397, %r1396, 23;
	mov.b64 	%rd1988, {%r1403, %r1402};
	xor.b64  	%rd1989, %rd1987, %rd1988;
	xor.b64  	%rd1990, %rd1949, %rd1925;
	and.b64  	%rd1991, %rd1973, %rd1990;
	xor.b64  	%rd1992, %rd1991, %rd1925;
	add.s64 	%rd1993, %rd1901, %rd1701;
	add.s64 	%rd1994, %rd1993, %rd2745;
	add.s64 	%rd1995, %rd1994, %rd1992;
	add.s64 	%rd1996, %rd1995, %rd1989;
	add.s64 	%rd1997, %rd1996, %rd1912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1404,%dummy}, %rd1984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1405}, %rd1984;
	}
	shf.r.wrap.b32 	%r1406, %r1405, %r1404, 28;
	shf.r.wrap.b32 	%r1407, %r1404, %r1405, 28;
	mov.b64 	%rd1998, {%r1407, %r1406};
	shf.l.wrap.b32 	%r1408, %r1404, %r1405, 30;
	shf.l.wrap.b32 	%r1409, %r1405, %r1404, 30;
	mov.b64 	%rd1999, {%r1409, %r1408};
	xor.b64  	%rd2000, %rd1999, %rd1998;
	shf.l.wrap.b32 	%r1410, %r1404, %r1405, 25;
	shf.l.wrap.b32 	%r1411, %r1405, %r1404, 25;
	mov.b64 	%rd2001, {%r1411, %r1410};
	xor.b64  	%rd2002, %rd2000, %rd2001;
	xor.b64  	%rd2003, %rd1984, %rd1936;
	xor.b64  	%rd2004, %rd1984, %rd1960;
	and.b64  	%rd2005, %rd2004, %rd2003;
	xor.b64  	%rd2006, %rd2005, %rd1984;
	add.s64 	%rd2007, %rd1996, %rd2006;
	add.s64 	%rd2008, %rd2007, %rd2002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1412,%dummy}, %rd1997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd1997;
	}
	shf.r.wrap.b32 	%r1414, %r1413, %r1412, 14;
	shf.r.wrap.b32 	%r1415, %r1412, %r1413, 14;
	mov.b64 	%rd2009, {%r1415, %r1414};
	shf.r.wrap.b32 	%r1416, %r1413, %r1412, 18;
	shf.r.wrap.b32 	%r1417, %r1412, %r1413, 18;
	mov.b64 	%rd2010, {%r1417, %r1416};
	xor.b64  	%rd2011, %rd2010, %rd2009;
	shf.l.wrap.b32 	%r1418, %r1412, %r1413, 23;
	shf.l.wrap.b32 	%r1419, %r1413, %r1412, 23;
	mov.b64 	%rd2012, {%r1419, %r1418};
	xor.b64  	%rd2013, %rd2011, %rd2012;
	xor.b64  	%rd2014, %rd1973, %rd1949;
	and.b64  	%rd2015, %rd1997, %rd2014;
	xor.b64  	%rd2016, %rd2015, %rd1949;
	add.s64 	%rd2017, %rd1925, %rd1714;
	add.s64 	%rd2018, %rd2017, %rd2746;
	add.s64 	%rd2019, %rd2018, %rd2016;
	add.s64 	%rd2020, %rd2019, %rd2013;
	add.s64 	%rd2021, %rd2020, %rd1936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1420,%dummy}, %rd2008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1421}, %rd2008;
	}
	shf.r.wrap.b32 	%r1422, %r1421, %r1420, 28;
	shf.r.wrap.b32 	%r1423, %r1420, %r1421, 28;
	mov.b64 	%rd2022, {%r1423, %r1422};
	shf.l.wrap.b32 	%r1424, %r1420, %r1421, 30;
	shf.l.wrap.b32 	%r1425, %r1421, %r1420, 30;
	mov.b64 	%rd2023, {%r1425, %r1424};
	xor.b64  	%rd2024, %rd2023, %rd2022;
	shf.l.wrap.b32 	%r1426, %r1420, %r1421, 25;
	shf.l.wrap.b32 	%r1427, %r1421, %r1420, 25;
	mov.b64 	%rd2025, {%r1427, %r1426};
	xor.b64  	%rd2026, %rd2024, %rd2025;
	xor.b64  	%rd2027, %rd2008, %rd1960;
	xor.b64  	%rd2028, %rd2008, %rd1984;
	and.b64  	%rd2029, %rd2028, %rd2027;
	xor.b64  	%rd2030, %rd2029, %rd2008;
	add.s64 	%rd2031, %rd2020, %rd2030;
	add.s64 	%rd2032, %rd2031, %rd2026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1428,%dummy}, %rd2021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1429}, %rd2021;
	}
	shf.r.wrap.b32 	%r1430, %r1429, %r1428, 14;
	shf.r.wrap.b32 	%r1431, %r1428, %r1429, 14;
	mov.b64 	%rd2033, {%r1431, %r1430};
	shf.r.wrap.b32 	%r1432, %r1429, %r1428, 18;
	shf.r.wrap.b32 	%r1433, %r1428, %r1429, 18;
	mov.b64 	%rd2034, {%r1433, %r1432};
	xor.b64  	%rd2035, %rd2034, %rd2033;
	shf.l.wrap.b32 	%r1434, %r1428, %r1429, 23;
	shf.l.wrap.b32 	%r1435, %r1429, %r1428, 23;
	mov.b64 	%rd2036, {%r1435, %r1434};
	xor.b64  	%rd2037, %rd2035, %rd2036;
	xor.b64  	%rd2038, %rd1997, %rd1973;
	and.b64  	%rd2039, %rd2021, %rd2038;
	xor.b64  	%rd2040, %rd2039, %rd1973;
	add.s64 	%rd2041, %rd1949, %rd1727;
	add.s64 	%rd2042, %rd2041, %rd2747;
	add.s64 	%rd2043, %rd2042, %rd2040;
	add.s64 	%rd2044, %rd2043, %rd2037;
	add.s64 	%rd2045, %rd2044, %rd1960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1436,%dummy}, %rd2032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd2032;
	}
	shf.r.wrap.b32 	%r1438, %r1437, %r1436, 28;
	shf.r.wrap.b32 	%r1439, %r1436, %r1437, 28;
	mov.b64 	%rd2046, {%r1439, %r1438};
	shf.l.wrap.b32 	%r1440, %r1436, %r1437, 30;
	shf.l.wrap.b32 	%r1441, %r1437, %r1436, 30;
	mov.b64 	%rd2047, {%r1441, %r1440};
	xor.b64  	%rd2048, %rd2047, %rd2046;
	shf.l.wrap.b32 	%r1442, %r1436, %r1437, 25;
	shf.l.wrap.b32 	%r1443, %r1437, %r1436, 25;
	mov.b64 	%rd2049, {%r1443, %r1442};
	xor.b64  	%rd2050, %rd2048, %rd2049;
	xor.b64  	%rd2051, %rd2032, %rd1984;
	xor.b64  	%rd2052, %rd2032, %rd2008;
	and.b64  	%rd2053, %rd2052, %rd2051;
	xor.b64  	%rd2054, %rd2053, %rd2032;
	add.s64 	%rd2055, %rd2044, %rd2054;
	add.s64 	%rd2056, %rd2055, %rd2050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1444,%dummy}, %rd2045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1445}, %rd2045;
	}
	shf.r.wrap.b32 	%r1446, %r1445, %r1444, 14;
	shf.r.wrap.b32 	%r1447, %r1444, %r1445, 14;
	mov.b64 	%rd2057, {%r1447, %r1446};
	shf.r.wrap.b32 	%r1448, %r1445, %r1444, 18;
	shf.r.wrap.b32 	%r1449, %r1444, %r1445, 18;
	mov.b64 	%rd2058, {%r1449, %r1448};
	xor.b64  	%rd2059, %rd2058, %rd2057;
	shf.l.wrap.b32 	%r1450, %r1444, %r1445, 23;
	shf.l.wrap.b32 	%r1451, %r1445, %r1444, 23;
	mov.b64 	%rd2060, {%r1451, %r1450};
	xor.b64  	%rd2061, %rd2059, %rd2060;
	xor.b64  	%rd2062, %rd2021, %rd1997;
	and.b64  	%rd2063, %rd2045, %rd2062;
	xor.b64  	%rd2064, %rd2063, %rd1997;
	add.s64 	%rd2065, %rd1973, %rd1740;
	add.s64 	%rd2066, %rd2065, %rd2748;
	add.s64 	%rd2067, %rd2066, %rd2064;
	add.s64 	%rd2068, %rd2067, %rd2061;
	add.s64 	%rd2069, %rd2068, %rd1984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1452,%dummy}, %rd2056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1453}, %rd2056;
	}
	shf.r.wrap.b32 	%r1454, %r1453, %r1452, 28;
	shf.r.wrap.b32 	%r1455, %r1452, %r1453, 28;
	mov.b64 	%rd2070, {%r1455, %r1454};
	shf.l.wrap.b32 	%r1456, %r1452, %r1453, 30;
	shf.l.wrap.b32 	%r1457, %r1453, %r1452, 30;
	mov.b64 	%rd2071, {%r1457, %r1456};
	xor.b64  	%rd2072, %rd2071, %rd2070;
	shf.l.wrap.b32 	%r1458, %r1452, %r1453, 25;
	shf.l.wrap.b32 	%r1459, %r1453, %r1452, 25;
	mov.b64 	%rd2073, {%r1459, %r1458};
	xor.b64  	%rd2074, %rd2072, %rd2073;
	xor.b64  	%rd2075, %rd2056, %rd2008;
	xor.b64  	%rd2076, %rd2056, %rd2032;
	and.b64  	%rd2077, %rd2076, %rd2075;
	xor.b64  	%rd2078, %rd2077, %rd2056;
	add.s64 	%rd2079, %rd2068, %rd2078;
	add.s64 	%rd2080, %rd2079, %rd2074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1460,%dummy}, %rd2069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1461}, %rd2069;
	}
	shf.r.wrap.b32 	%r1462, %r1461, %r1460, 14;
	shf.r.wrap.b32 	%r1463, %r1460, %r1461, 14;
	mov.b64 	%rd2081, {%r1463, %r1462};
	shf.r.wrap.b32 	%r1464, %r1461, %r1460, 18;
	shf.r.wrap.b32 	%r1465, %r1460, %r1461, 18;
	mov.b64 	%rd2082, {%r1465, %r1464};
	xor.b64  	%rd2083, %rd2082, %rd2081;
	shf.l.wrap.b32 	%r1466, %r1460, %r1461, 23;
	shf.l.wrap.b32 	%r1467, %r1461, %r1460, 23;
	mov.b64 	%rd2084, {%r1467, %r1466};
	xor.b64  	%rd2085, %rd2083, %rd2084;
	xor.b64  	%rd2086, %rd2045, %rd2021;
	and.b64  	%rd2087, %rd2069, %rd2086;
	xor.b64  	%rd2088, %rd2087, %rd2021;
	add.s64 	%rd2089, %rd1997, %rd1753;
	add.s64 	%rd2090, %rd2089, %rd2749;
	add.s64 	%rd2091, %rd2090, %rd2088;
	add.s64 	%rd2092, %rd2091, %rd2085;
	add.s64 	%rd2093, %rd2092, %rd2008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1468,%dummy}, %rd2080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1469}, %rd2080;
	}
	shf.r.wrap.b32 	%r1470, %r1469, %r1468, 28;
	shf.r.wrap.b32 	%r1471, %r1468, %r1469, 28;
	mov.b64 	%rd2094, {%r1471, %r1470};
	shf.l.wrap.b32 	%r1472, %r1468, %r1469, 30;
	shf.l.wrap.b32 	%r1473, %r1469, %r1468, 30;
	mov.b64 	%rd2095, {%r1473, %r1472};
	xor.b64  	%rd2096, %rd2095, %rd2094;
	shf.l.wrap.b32 	%r1474, %r1468, %r1469, 25;
	shf.l.wrap.b32 	%r1475, %r1469, %r1468, 25;
	mov.b64 	%rd2097, {%r1475, %r1474};
	xor.b64  	%rd2098, %rd2096, %rd2097;
	xor.b64  	%rd2099, %rd2080, %rd2032;
	xor.b64  	%rd2100, %rd2080, %rd2056;
	and.b64  	%rd2101, %rd2100, %rd2099;
	xor.b64  	%rd2102, %rd2101, %rd2080;
	add.s64 	%rd2103, %rd2092, %rd2102;
	add.s64 	%rd2104, %rd2103, %rd2098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1476,%dummy}, %rd2093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1477}, %rd2093;
	}
	shf.r.wrap.b32 	%r1478, %r1477, %r1476, 14;
	shf.r.wrap.b32 	%r1479, %r1476, %r1477, 14;
	mov.b64 	%rd2105, {%r1479, %r1478};
	shf.r.wrap.b32 	%r1480, %r1477, %r1476, 18;
	shf.r.wrap.b32 	%r1481, %r1476, %r1477, 18;
	mov.b64 	%rd2106, {%r1481, %r1480};
	xor.b64  	%rd2107, %rd2106, %rd2105;
	shf.l.wrap.b32 	%r1482, %r1476, %r1477, 23;
	shf.l.wrap.b32 	%r1483, %r1477, %r1476, 23;
	mov.b64 	%rd2108, {%r1483, %r1482};
	xor.b64  	%rd2109, %rd2107, %rd2108;
	xor.b64  	%rd2110, %rd2069, %rd2045;
	and.b64  	%rd2111, %rd2093, %rd2110;
	xor.b64  	%rd2112, %rd2111, %rd2045;
	add.s64 	%rd2113, %rd2021, %rd1766;
	add.s64 	%rd2114, %rd2113, %rd2750;
	add.s64 	%rd2115, %rd2114, %rd2112;
	add.s64 	%rd2116, %rd2115, %rd2109;
	add.s64 	%rd2117, %rd2116, %rd2032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1484,%dummy}, %rd2104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1485}, %rd2104;
	}
	shf.r.wrap.b32 	%r1486, %r1485, %r1484, 28;
	shf.r.wrap.b32 	%r1487, %r1484, %r1485, 28;
	mov.b64 	%rd2118, {%r1487, %r1486};
	shf.l.wrap.b32 	%r1488, %r1484, %r1485, 30;
	shf.l.wrap.b32 	%r1489, %r1485, %r1484, 30;
	mov.b64 	%rd2119, {%r1489, %r1488};
	xor.b64  	%rd2120, %rd2119, %rd2118;
	shf.l.wrap.b32 	%r1490, %r1484, %r1485, 25;
	shf.l.wrap.b32 	%r1491, %r1485, %r1484, 25;
	mov.b64 	%rd2121, {%r1491, %r1490};
	xor.b64  	%rd2122, %rd2120, %rd2121;
	xor.b64  	%rd2123, %rd2104, %rd2056;
	xor.b64  	%rd2124, %rd2104, %rd2080;
	and.b64  	%rd2125, %rd2124, %rd2123;
	xor.b64  	%rd2126, %rd2125, %rd2104;
	add.s64 	%rd2127, %rd2116, %rd2126;
	add.s64 	%rd2128, %rd2127, %rd2122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1492,%dummy}, %rd2117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1493}, %rd2117;
	}
	shf.r.wrap.b32 	%r1494, %r1493, %r1492, 14;
	shf.r.wrap.b32 	%r1495, %r1492, %r1493, 14;
	mov.b64 	%rd2129, {%r1495, %r1494};
	shf.r.wrap.b32 	%r1496, %r1493, %r1492, 18;
	shf.r.wrap.b32 	%r1497, %r1492, %r1493, 18;
	mov.b64 	%rd2130, {%r1497, %r1496};
	xor.b64  	%rd2131, %rd2130, %rd2129;
	shf.l.wrap.b32 	%r1498, %r1492, %r1493, 23;
	shf.l.wrap.b32 	%r1499, %r1493, %r1492, 23;
	mov.b64 	%rd2132, {%r1499, %r1498};
	xor.b64  	%rd2133, %rd2131, %rd2132;
	xor.b64  	%rd2134, %rd2093, %rd2069;
	and.b64  	%rd2135, %rd2117, %rd2134;
	xor.b64  	%rd2136, %rd2135, %rd2069;
	add.s64 	%rd2137, %rd2045, %rd1779;
	add.s64 	%rd2138, %rd2137, %rd2751;
	add.s64 	%rd2139, %rd2138, %rd2136;
	add.s64 	%rd2140, %rd2139, %rd2133;
	add.s64 	%rd2141, %rd2140, %rd2056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1500,%dummy}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd2128;
	}
	shf.r.wrap.b32 	%r1502, %r1501, %r1500, 28;
	shf.r.wrap.b32 	%r1503, %r1500, %r1501, 28;
	mov.b64 	%rd2142, {%r1503, %r1502};
	shf.l.wrap.b32 	%r1504, %r1500, %r1501, 30;
	shf.l.wrap.b32 	%r1505, %r1501, %r1500, 30;
	mov.b64 	%rd2143, {%r1505, %r1504};
	xor.b64  	%rd2144, %rd2143, %rd2142;
	shf.l.wrap.b32 	%r1506, %r1500, %r1501, 25;
	shf.l.wrap.b32 	%r1507, %r1501, %r1500, 25;
	mov.b64 	%rd2145, {%r1507, %r1506};
	xor.b64  	%rd2146, %rd2144, %rd2145;
	xor.b64  	%rd2147, %rd2128, %rd2080;
	xor.b64  	%rd2148, %rd2128, %rd2104;
	and.b64  	%rd2149, %rd2148, %rd2147;
	xor.b64  	%rd2150, %rd2149, %rd2128;
	add.s64 	%rd2151, %rd2140, %rd2150;
	add.s64 	%rd2152, %rd2151, %rd2146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1508,%dummy}, %rd2141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd2141;
	}
	shf.r.wrap.b32 	%r1510, %r1509, %r1508, 14;
	shf.r.wrap.b32 	%r1511, %r1508, %r1509, 14;
	mov.b64 	%rd2153, {%r1511, %r1510};
	shf.r.wrap.b32 	%r1512, %r1509, %r1508, 18;
	shf.r.wrap.b32 	%r1513, %r1508, %r1509, 18;
	mov.b64 	%rd2154, {%r1513, %r1512};
	xor.b64  	%rd2155, %rd2154, %rd2153;
	shf.l.wrap.b32 	%r1514, %r1508, %r1509, 23;
	shf.l.wrap.b32 	%r1515, %r1509, %r1508, 23;
	mov.b64 	%rd2156, {%r1515, %r1514};
	xor.b64  	%rd2157, %rd2155, %rd2156;
	xor.b64  	%rd2158, %rd2117, %rd2093;
	and.b64  	%rd2159, %rd2141, %rd2158;
	xor.b64  	%rd2160, %rd2159, %rd2093;
	add.s64 	%rd2161, %rd2069, %rd1792;
	add.s64 	%rd2162, %rd2161, %rd2752;
	add.s64 	%rd2163, %rd2162, %rd2160;
	add.s64 	%rd2164, %rd2163, %rd2157;
	add.s64 	%rd2165, %rd2164, %rd2080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1516,%dummy}, %rd2152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1517}, %rd2152;
	}
	shf.r.wrap.b32 	%r1518, %r1517, %r1516, 28;
	shf.r.wrap.b32 	%r1519, %r1516, %r1517, 28;
	mov.b64 	%rd2166, {%r1519, %r1518};
	shf.l.wrap.b32 	%r1520, %r1516, %r1517, 30;
	shf.l.wrap.b32 	%r1521, %r1517, %r1516, 30;
	mov.b64 	%rd2167, {%r1521, %r1520};
	xor.b64  	%rd2168, %rd2167, %rd2166;
	shf.l.wrap.b32 	%r1522, %r1516, %r1517, 25;
	shf.l.wrap.b32 	%r1523, %r1517, %r1516, 25;
	mov.b64 	%rd2169, {%r1523, %r1522};
	xor.b64  	%rd2170, %rd2168, %rd2169;
	xor.b64  	%rd2171, %rd2152, %rd2104;
	xor.b64  	%rd2172, %rd2152, %rd2128;
	and.b64  	%rd2173, %rd2172, %rd2171;
	xor.b64  	%rd2174, %rd2173, %rd2152;
	add.s64 	%rd2175, %rd2164, %rd2174;
	add.s64 	%rd2176, %rd2175, %rd2170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1524,%dummy}, %rd1779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1525}, %rd1779;
	}
	shf.r.wrap.b32 	%r1526, %r1525, %r1524, 19;
	shf.r.wrap.b32 	%r1527, %r1524, %r1525, 19;
	mov.b64 	%rd2177, {%r1527, %r1526};
	shf.l.wrap.b32 	%r1528, %r1524, %r1525, 3;
	shf.l.wrap.b32 	%r1529, %r1525, %r1524, 3;
	mov.b64 	%rd2178, {%r1529, %r1528};
	shr.u64 	%rd2179, %rd1779, 6;
	xor.b64  	%rd2180, %rd2177, %rd2179;
	xor.b64  	%rd2181, %rd2180, %rd2178;
	shf.r.wrap.b32 	%r1530, %r1139, %r1138, 1;
	shf.r.wrap.b32 	%r1531, %r1138, %r1139, 1;
	mov.b64 	%rd2182, {%r1531, %r1530};
	shf.r.wrap.b32 	%r1532, %r1139, %r1138, 8;
	shf.r.wrap.b32 	%r1533, %r1138, %r1139, 8;
	mov.b64 	%rd2183, {%r1533, %r1532};
	shr.u64 	%rd2184, %rd1610, 7;
	xor.b64  	%rd2185, %rd2182, %rd2184;
	xor.b64  	%rd2186, %rd2185, %rd2183;
	add.s64 	%rd2187, %rd1597, %rd1714;
	add.s64 	%rd2188, %rd2187, %rd2181;
	add.s64 	%rd2189, %rd2188, %rd2186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd1792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1535}, %rd1792;
	}
	shf.r.wrap.b32 	%r1536, %r1535, %r1534, 19;
	shf.r.wrap.b32 	%r1537, %r1534, %r1535, 19;
	mov.b64 	%rd2190, {%r1537, %r1536};
	shf.l.wrap.b32 	%r1538, %r1534, %r1535, 3;
	shf.l.wrap.b32 	%r1539, %r1535, %r1534, 3;
	mov.b64 	%rd2191, {%r1539, %r1538};
	shr.u64 	%rd2192, %rd1792, 6;
	xor.b64  	%rd2193, %rd2190, %rd2192;
	xor.b64  	%rd2194, %rd2193, %rd2191;
	shf.r.wrap.b32 	%r1540, %r1149, %r1148, 1;
	shf.r.wrap.b32 	%r1541, %r1148, %r1149, 1;
	mov.b64 	%rd2195, {%r1541, %r1540};
	shf.r.wrap.b32 	%r1542, %r1149, %r1148, 8;
	shf.r.wrap.b32 	%r1543, %r1148, %r1149, 8;
	mov.b64 	%rd2196, {%r1543, %r1542};
	shr.u64 	%rd2197, %rd1623, 7;
	xor.b64  	%rd2198, %rd2195, %rd2197;
	xor.b64  	%rd2199, %rd2198, %rd2196;
	add.s64 	%rd2200, %rd1610, %rd1727;
	add.s64 	%rd2201, %rd2200, %rd2194;
	add.s64 	%rd2202, %rd2201, %rd2199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1544,%dummy}, %rd2189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1545}, %rd2189;
	}
	shf.r.wrap.b32 	%r1546, %r1545, %r1544, 19;
	shf.r.wrap.b32 	%r1547, %r1544, %r1545, 19;
	mov.b64 	%rd2203, {%r1547, %r1546};
	shf.l.wrap.b32 	%r1548, %r1544, %r1545, 3;
	shf.l.wrap.b32 	%r1549, %r1545, %r1544, 3;
	mov.b64 	%rd2204, {%r1549, %r1548};
	shr.u64 	%rd2205, %rd2189, 6;
	xor.b64  	%rd2206, %rd2203, %rd2205;
	xor.b64  	%rd2207, %rd2206, %rd2204;
	shf.r.wrap.b32 	%r1550, %r1159, %r1158, 1;
	shf.r.wrap.b32 	%r1551, %r1158, %r1159, 1;
	mov.b64 	%rd2208, {%r1551, %r1550};
	shf.r.wrap.b32 	%r1552, %r1159, %r1158, 8;
	shf.r.wrap.b32 	%r1553, %r1158, %r1159, 8;
	mov.b64 	%rd2209, {%r1553, %r1552};
	shr.u64 	%rd2210, %rd1636, 7;
	xor.b64  	%rd2211, %rd2208, %rd2210;
	xor.b64  	%rd2212, %rd2211, %rd2209;
	add.s64 	%rd2213, %rd1623, %rd1740;
	add.s64 	%rd2214, %rd2213, %rd2207;
	add.s64 	%rd2215, %rd2214, %rd2212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1554,%dummy}, %rd2202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1555}, %rd2202;
	}
	shf.r.wrap.b32 	%r1556, %r1555, %r1554, 19;
	shf.r.wrap.b32 	%r1557, %r1554, %r1555, 19;
	mov.b64 	%rd2216, {%r1557, %r1556};
	shf.l.wrap.b32 	%r1558, %r1554, %r1555, 3;
	shf.l.wrap.b32 	%r1559, %r1555, %r1554, 3;
	mov.b64 	%rd2217, {%r1559, %r1558};
	shr.u64 	%rd2218, %rd2202, 6;
	xor.b64  	%rd2219, %rd2216, %rd2218;
	xor.b64  	%rd2220, %rd2219, %rd2217;
	shf.r.wrap.b32 	%r1560, %r1169, %r1168, 1;
	shf.r.wrap.b32 	%r1561, %r1168, %r1169, 1;
	mov.b64 	%rd2221, {%r1561, %r1560};
	shf.r.wrap.b32 	%r1562, %r1169, %r1168, 8;
	shf.r.wrap.b32 	%r1563, %r1168, %r1169, 8;
	mov.b64 	%rd2222, {%r1563, %r1562};
	shr.u64 	%rd2223, %rd1649, 7;
	xor.b64  	%rd2224, %rd2221, %rd2223;
	xor.b64  	%rd2225, %rd2224, %rd2222;
	add.s64 	%rd2226, %rd1636, %rd1753;
	add.s64 	%rd2227, %rd2226, %rd2220;
	add.s64 	%rd2228, %rd2227, %rd2225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1564,%dummy}, %rd2215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1565}, %rd2215;
	}
	shf.r.wrap.b32 	%r1566, %r1565, %r1564, 19;
	shf.r.wrap.b32 	%r1567, %r1564, %r1565, 19;
	mov.b64 	%rd2229, {%r1567, %r1566};
	shf.l.wrap.b32 	%r1568, %r1564, %r1565, 3;
	shf.l.wrap.b32 	%r1569, %r1565, %r1564, 3;
	mov.b64 	%rd2230, {%r1569, %r1568};
	shr.u64 	%rd2231, %rd2215, 6;
	xor.b64  	%rd2232, %rd2229, %rd2231;
	xor.b64  	%rd2233, %rd2232, %rd2230;
	shf.r.wrap.b32 	%r1570, %r1179, %r1178, 1;
	shf.r.wrap.b32 	%r1571, %r1178, %r1179, 1;
	mov.b64 	%rd2234, {%r1571, %r1570};
	shf.r.wrap.b32 	%r1572, %r1179, %r1178, 8;
	shf.r.wrap.b32 	%r1573, %r1178, %r1179, 8;
	mov.b64 	%rd2235, {%r1573, %r1572};
	shr.u64 	%rd2236, %rd1662, 7;
	xor.b64  	%rd2237, %rd2234, %rd2236;
	xor.b64  	%rd2238, %rd2237, %rd2235;
	add.s64 	%rd2239, %rd1649, %rd1766;
	add.s64 	%rd2240, %rd2239, %rd2233;
	add.s64 	%rd2241, %rd2240, %rd2238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1574,%dummy}, %rd2228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1575}, %rd2228;
	}
	shf.r.wrap.b32 	%r1576, %r1575, %r1574, 19;
	shf.r.wrap.b32 	%r1577, %r1574, %r1575, 19;
	mov.b64 	%rd2242, {%r1577, %r1576};
	shf.l.wrap.b32 	%r1578, %r1574, %r1575, 3;
	shf.l.wrap.b32 	%r1579, %r1575, %r1574, 3;
	mov.b64 	%rd2243, {%r1579, %r1578};
	shr.u64 	%rd2244, %rd2228, 6;
	xor.b64  	%rd2245, %rd2242, %rd2244;
	xor.b64  	%rd2246, %rd2245, %rd2243;
	shf.r.wrap.b32 	%r1580, %r1189, %r1188, 1;
	shf.r.wrap.b32 	%r1581, %r1188, %r1189, 1;
	mov.b64 	%rd2247, {%r1581, %r1580};
	shf.r.wrap.b32 	%r1582, %r1189, %r1188, 8;
	shf.r.wrap.b32 	%r1583, %r1188, %r1189, 8;
	mov.b64 	%rd2248, {%r1583, %r1582};
	shr.u64 	%rd2249, %rd1675, 7;
	xor.b64  	%rd2250, %rd2247, %rd2249;
	xor.b64  	%rd2251, %rd2250, %rd2248;
	add.s64 	%rd2252, %rd1662, %rd1779;
	add.s64 	%rd2253, %rd2252, %rd2246;
	add.s64 	%rd2254, %rd2253, %rd2251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd2241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd2241;
	}
	shf.r.wrap.b32 	%r1586, %r1585, %r1584, 19;
	shf.r.wrap.b32 	%r1587, %r1584, %r1585, 19;
	mov.b64 	%rd2255, {%r1587, %r1586};
	shf.l.wrap.b32 	%r1588, %r1584, %r1585, 3;
	shf.l.wrap.b32 	%r1589, %r1585, %r1584, 3;
	mov.b64 	%rd2256, {%r1589, %r1588};
	shr.u64 	%rd2257, %rd2241, 6;
	xor.b64  	%rd2258, %rd2255, %rd2257;
	xor.b64  	%rd2259, %rd2258, %rd2256;
	shf.r.wrap.b32 	%r1590, %r1199, %r1198, 1;
	shf.r.wrap.b32 	%r1591, %r1198, %r1199, 1;
	mov.b64 	%rd2260, {%r1591, %r1590};
	shf.r.wrap.b32 	%r1592, %r1199, %r1198, 8;
	shf.r.wrap.b32 	%r1593, %r1198, %r1199, 8;
	mov.b64 	%rd2261, {%r1593, %r1592};
	shr.u64 	%rd2262, %rd1688, 7;
	xor.b64  	%rd2263, %rd2260, %rd2262;
	xor.b64  	%rd2264, %rd2263, %rd2261;
	add.s64 	%rd2265, %rd1675, %rd1792;
	add.s64 	%rd2266, %rd2265, %rd2259;
	add.s64 	%rd2267, %rd2266, %rd2264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd2254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd2254;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 19;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 19;
	mov.b64 	%rd2268, {%r1597, %r1596};
	shf.l.wrap.b32 	%r1598, %r1594, %r1595, 3;
	shf.l.wrap.b32 	%r1599, %r1595, %r1594, 3;
	mov.b64 	%rd2269, {%r1599, %r1598};
	shr.u64 	%rd2270, %rd2254, 6;
	xor.b64  	%rd2271, %rd2268, %rd2270;
	xor.b64  	%rd2272, %rd2271, %rd2269;
	shf.r.wrap.b32 	%r1600, %r1209, %r1208, 1;
	shf.r.wrap.b32 	%r1601, %r1208, %r1209, 1;
	mov.b64 	%rd2273, {%r1601, %r1600};
	shf.r.wrap.b32 	%r1602, %r1209, %r1208, 8;
	shf.r.wrap.b32 	%r1603, %r1208, %r1209, 8;
	mov.b64 	%rd2274, {%r1603, %r1602};
	shr.u64 	%rd2275, %rd1701, 7;
	xor.b64  	%rd2276, %rd2273, %rd2275;
	xor.b64  	%rd2277, %rd2276, %rd2274;
	add.s64 	%rd2278, %rd2189, %rd1688;
	add.s64 	%rd2279, %rd2278, %rd2272;
	add.s64 	%rd2280, %rd2279, %rd2277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1605}, %rd2267;
	}
	shf.r.wrap.b32 	%r1606, %r1605, %r1604, 19;
	shf.r.wrap.b32 	%r1607, %r1604, %r1605, 19;
	mov.b64 	%rd2281, {%r1607, %r1606};
	shf.l.wrap.b32 	%r1608, %r1604, %r1605, 3;
	shf.l.wrap.b32 	%r1609, %r1605, %r1604, 3;
	mov.b64 	%rd2282, {%r1609, %r1608};
	shr.u64 	%rd2283, %rd2267, 6;
	xor.b64  	%rd2284, %rd2281, %rd2283;
	xor.b64  	%rd2285, %rd2284, %rd2282;
	shf.r.wrap.b32 	%r1610, %r1219, %r1218, 1;
	shf.r.wrap.b32 	%r1611, %r1218, %r1219, 1;
	mov.b64 	%rd2286, {%r1611, %r1610};
	shf.r.wrap.b32 	%r1612, %r1219, %r1218, 8;
	shf.r.wrap.b32 	%r1613, %r1218, %r1219, 8;
	mov.b64 	%rd2287, {%r1613, %r1612};
	shr.u64 	%rd2288, %rd1714, 7;
	xor.b64  	%rd2289, %rd2286, %rd2288;
	xor.b64  	%rd2290, %rd2289, %rd2287;
	add.s64 	%rd2291, %rd2202, %rd1701;
	add.s64 	%rd2292, %rd2291, %rd2285;
	add.s64 	%rd2293, %rd2292, %rd2290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd2280;
	}
	shf.r.wrap.b32 	%r1616, %r1615, %r1614, 19;
	shf.r.wrap.b32 	%r1617, %r1614, %r1615, 19;
	mov.b64 	%rd2294, {%r1617, %r1616};
	shf.l.wrap.b32 	%r1618, %r1614, %r1615, 3;
	shf.l.wrap.b32 	%r1619, %r1615, %r1614, 3;
	mov.b64 	%rd2295, {%r1619, %r1618};
	shr.u64 	%rd2296, %rd2280, 6;
	xor.b64  	%rd2297, %rd2294, %rd2296;
	xor.b64  	%rd2298, %rd2297, %rd2295;
	shf.r.wrap.b32 	%r1620, %r1229, %r1228, 1;
	shf.r.wrap.b32 	%r1621, %r1228, %r1229, 1;
	mov.b64 	%rd2299, {%r1621, %r1620};
	shf.r.wrap.b32 	%r1622, %r1229, %r1228, 8;
	shf.r.wrap.b32 	%r1623, %r1228, %r1229, 8;
	mov.b64 	%rd2300, {%r1623, %r1622};
	shr.u64 	%rd2301, %rd1727, 7;
	xor.b64  	%rd2302, %rd2299, %rd2301;
	xor.b64  	%rd2303, %rd2302, %rd2300;
	add.s64 	%rd2304, %rd2215, %rd1714;
	add.s64 	%rd2305, %rd2304, %rd2298;
	add.s64 	%rd2306, %rd2305, %rd2303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1624,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1625}, %rd2293;
	}
	shf.r.wrap.b32 	%r1626, %r1625, %r1624, 19;
	shf.r.wrap.b32 	%r1627, %r1624, %r1625, 19;
	mov.b64 	%rd2307, {%r1627, %r1626};
	shf.l.wrap.b32 	%r1628, %r1624, %r1625, 3;
	shf.l.wrap.b32 	%r1629, %r1625, %r1624, 3;
	mov.b64 	%rd2308, {%r1629, %r1628};
	shr.u64 	%rd2309, %rd2293, 6;
	xor.b64  	%rd2310, %rd2307, %rd2309;
	xor.b64  	%rd2311, %rd2310, %rd2308;
	shf.r.wrap.b32 	%r1630, %r1239, %r1238, 1;
	shf.r.wrap.b32 	%r1631, %r1238, %r1239, 1;
	mov.b64 	%rd2312, {%r1631, %r1630};
	shf.r.wrap.b32 	%r1632, %r1239, %r1238, 8;
	shf.r.wrap.b32 	%r1633, %r1238, %r1239, 8;
	mov.b64 	%rd2313, {%r1633, %r1632};
	shr.u64 	%rd2314, %rd1740, 7;
	xor.b64  	%rd2315, %rd2312, %rd2314;
	xor.b64  	%rd2316, %rd2315, %rd2313;
	add.s64 	%rd2317, %rd2228, %rd1727;
	add.s64 	%rd2318, %rd2317, %rd2311;
	add.s64 	%rd2319, %rd2318, %rd2316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1634,%dummy}, %rd2306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1635}, %rd2306;
	}
	shf.r.wrap.b32 	%r1636, %r1635, %r1634, 19;
	shf.r.wrap.b32 	%r1637, %r1634, %r1635, 19;
	mov.b64 	%rd2320, {%r1637, %r1636};
	shf.l.wrap.b32 	%r1638, %r1634, %r1635, 3;
	shf.l.wrap.b32 	%r1639, %r1635, %r1634, 3;
	mov.b64 	%rd2321, {%r1639, %r1638};
	shr.u64 	%rd2322, %rd2306, 6;
	xor.b64  	%rd2323, %rd2320, %rd2322;
	xor.b64  	%rd2324, %rd2323, %rd2321;
	shf.r.wrap.b32 	%r1640, %r1249, %r1248, 1;
	shf.r.wrap.b32 	%r1641, %r1248, %r1249, 1;
	mov.b64 	%rd2325, {%r1641, %r1640};
	shf.r.wrap.b32 	%r1642, %r1249, %r1248, 8;
	shf.r.wrap.b32 	%r1643, %r1248, %r1249, 8;
	mov.b64 	%rd2326, {%r1643, %r1642};
	shr.u64 	%rd2327, %rd1753, 7;
	xor.b64  	%rd2328, %rd2325, %rd2327;
	xor.b64  	%rd2329, %rd2328, %rd2326;
	add.s64 	%rd2330, %rd2241, %rd1740;
	add.s64 	%rd2331, %rd2330, %rd2324;
	add.s64 	%rd2332, %rd2331, %rd2329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd2319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd2319;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 19;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 19;
	mov.b64 	%rd2333, {%r1647, %r1646};
	shf.l.wrap.b32 	%r1648, %r1644, %r1645, 3;
	shf.l.wrap.b32 	%r1649, %r1645, %r1644, 3;
	mov.b64 	%rd2334, {%r1649, %r1648};
	shr.u64 	%rd2335, %rd2319, 6;
	xor.b64  	%rd2336, %rd2333, %rd2335;
	xor.b64  	%rd2337, %rd2336, %rd2334;
	shf.r.wrap.b32 	%r1650, %r1259, %r1258, 1;
	shf.r.wrap.b32 	%r1651, %r1258, %r1259, 1;
	mov.b64 	%rd2338, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1259, %r1258, 8;
	shf.r.wrap.b32 	%r1653, %r1258, %r1259, 8;
	mov.b64 	%rd2339, {%r1653, %r1652};
	shr.u64 	%rd2340, %rd1766, 7;
	xor.b64  	%rd2341, %rd2338, %rd2340;
	xor.b64  	%rd2342, %rd2341, %rd2339;
	add.s64 	%rd2343, %rd2254, %rd1753;
	add.s64 	%rd2344, %rd2343, %rd2337;
	add.s64 	%rd2345, %rd2344, %rd2342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1654,%dummy}, %rd2165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1655}, %rd2165;
	}
	shf.r.wrap.b32 	%r1656, %r1655, %r1654, 14;
	shf.r.wrap.b32 	%r1657, %r1654, %r1655, 14;
	mov.b64 	%rd2346, {%r1657, %r1656};
	shf.r.wrap.b32 	%r1658, %r1655, %r1654, 18;
	shf.r.wrap.b32 	%r1659, %r1654, %r1655, 18;
	mov.b64 	%rd2347, {%r1659, %r1658};
	xor.b64  	%rd2348, %rd2347, %rd2346;
	shf.l.wrap.b32 	%r1660, %r1654, %r1655, 23;
	shf.l.wrap.b32 	%r1661, %r1655, %r1654, 23;
	mov.b64 	%rd2349, {%r1661, %r1660};
	xor.b64  	%rd2350, %rd2348, %rd2349;
	xor.b64  	%rd2351, %rd2117, %rd2141;
	and.b64  	%rd2352, %rd2351, %rd2165;
	xor.b64  	%rd2353, %rd2352, %rd2117;
	add.s64 	%rd2354, %rd2353, %rd2093;
	add.s64 	%rd2355, %rd2354, %rd2189;
	add.s64 	%rd2356, %rd2355, %rd2753;
	add.s64 	%rd2357, %rd2356, %rd2350;
	add.s64 	%rd2358, %rd2357, %rd2104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd2176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1663}, %rd2176;
	}
	shf.r.wrap.b32 	%r1664, %r1663, %r1662, 28;
	shf.r.wrap.b32 	%r1665, %r1662, %r1663, 28;
	mov.b64 	%rd2359, {%r1665, %r1664};
	shf.l.wrap.b32 	%r1666, %r1662, %r1663, 30;
	shf.l.wrap.b32 	%r1667, %r1663, %r1662, 30;
	mov.b64 	%rd2360, {%r1667, %r1666};
	xor.b64  	%rd2361, %rd2360, %rd2359;
	shf.l.wrap.b32 	%r1668, %r1662, %r1663, 25;
	shf.l.wrap.b32 	%r1669, %r1663, %r1662, 25;
	mov.b64 	%rd2362, {%r1669, %r1668};
	xor.b64  	%rd2363, %rd2361, %rd2362;
	xor.b64  	%rd2364, %rd2176, %rd2128;
	xor.b64  	%rd2365, %rd2176, %rd2152;
	and.b64  	%rd2366, %rd2365, %rd2364;
	xor.b64  	%rd2367, %rd2366, %rd2176;
	add.s64 	%rd2368, %rd2357, %rd2367;
	add.s64 	%rd2369, %rd2368, %rd2363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1670,%dummy}, %rd2358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1671}, %rd2358;
	}
	shf.r.wrap.b32 	%r1672, %r1671, %r1670, 14;
	shf.r.wrap.b32 	%r1673, %r1670, %r1671, 14;
	mov.b64 	%rd2370, {%r1673, %r1672};
	shf.r.wrap.b32 	%r1674, %r1671, %r1670, 18;
	shf.r.wrap.b32 	%r1675, %r1670, %r1671, 18;
	mov.b64 	%rd2371, {%r1675, %r1674};
	xor.b64  	%rd2372, %rd2371, %rd2370;
	shf.l.wrap.b32 	%r1676, %r1670, %r1671, 23;
	shf.l.wrap.b32 	%r1677, %r1671, %r1670, 23;
	mov.b64 	%rd2373, {%r1677, %r1676};
	xor.b64  	%rd2374, %rd2372, %rd2373;
	xor.b64  	%rd2375, %rd2141, %rd2165;
	and.b64  	%rd2376, %rd2358, %rd2375;
	xor.b64  	%rd2377, %rd2376, %rd2141;
	add.s64 	%rd2378, %rd2202, %rd2117;
	add.s64 	%rd2379, %rd2378, %rd2754;
	add.s64 	%rd2380, %rd2379, %rd2377;
	add.s64 	%rd2381, %rd2380, %rd2374;
	add.s64 	%rd2382, %rd2381, %rd2128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1678,%dummy}, %rd2369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1679}, %rd2369;
	}
	shf.r.wrap.b32 	%r1680, %r1679, %r1678, 28;
	shf.r.wrap.b32 	%r1681, %r1678, %r1679, 28;
	mov.b64 	%rd2383, {%r1681, %r1680};
	shf.l.wrap.b32 	%r1682, %r1678, %r1679, 30;
	shf.l.wrap.b32 	%r1683, %r1679, %r1678, 30;
	mov.b64 	%rd2384, {%r1683, %r1682};
	xor.b64  	%rd2385, %rd2384, %rd2383;
	shf.l.wrap.b32 	%r1684, %r1678, %r1679, 25;
	shf.l.wrap.b32 	%r1685, %r1679, %r1678, 25;
	mov.b64 	%rd2386, {%r1685, %r1684};
	xor.b64  	%rd2387, %rd2385, %rd2386;
	xor.b64  	%rd2388, %rd2369, %rd2152;
	xor.b64  	%rd2389, %rd2369, %rd2176;
	and.b64  	%rd2390, %rd2389, %rd2388;
	xor.b64  	%rd2391, %rd2390, %rd2369;
	add.s64 	%rd2392, %rd2381, %rd2391;
	add.s64 	%rd2393, %rd2392, %rd2387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1686,%dummy}, %rd2382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1687}, %rd2382;
	}
	shf.r.wrap.b32 	%r1688, %r1687, %r1686, 14;
	shf.r.wrap.b32 	%r1689, %r1686, %r1687, 14;
	mov.b64 	%rd2394, {%r1689, %r1688};
	shf.r.wrap.b32 	%r1690, %r1687, %r1686, 18;
	shf.r.wrap.b32 	%r1691, %r1686, %r1687, 18;
	mov.b64 	%rd2395, {%r1691, %r1690};
	xor.b64  	%rd2396, %rd2395, %rd2394;
	shf.l.wrap.b32 	%r1692, %r1686, %r1687, 23;
	shf.l.wrap.b32 	%r1693, %r1687, %r1686, 23;
	mov.b64 	%rd2397, {%r1693, %r1692};
	xor.b64  	%rd2398, %rd2396, %rd2397;
	xor.b64  	%rd2399, %rd2358, %rd2165;
	and.b64  	%rd2400, %rd2382, %rd2399;
	xor.b64  	%rd2401, %rd2400, %rd2165;
	add.s64 	%rd2402, %rd2215, %rd2141;
	add.s64 	%rd2403, %rd2402, %rd2755;
	add.s64 	%rd2404, %rd2403, %rd2401;
	add.s64 	%rd2405, %rd2404, %rd2398;
	add.s64 	%rd2406, %rd2405, %rd2152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1694,%dummy}, %rd2393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1695}, %rd2393;
	}
	shf.r.wrap.b32 	%r1696, %r1695, %r1694, 28;
	shf.r.wrap.b32 	%r1697, %r1694, %r1695, 28;
	mov.b64 	%rd2407, {%r1697, %r1696};
	shf.l.wrap.b32 	%r1698, %r1694, %r1695, 30;
	shf.l.wrap.b32 	%r1699, %r1695, %r1694, 30;
	mov.b64 	%rd2408, {%r1699, %r1698};
	xor.b64  	%rd2409, %rd2408, %rd2407;
	shf.l.wrap.b32 	%r1700, %r1694, %r1695, 25;
	shf.l.wrap.b32 	%r1701, %r1695, %r1694, 25;
	mov.b64 	%rd2410, {%r1701, %r1700};
	xor.b64  	%rd2411, %rd2409, %rd2410;
	xor.b64  	%rd2412, %rd2393, %rd2176;
	xor.b64  	%rd2413, %rd2393, %rd2369;
	and.b64  	%rd2414, %rd2413, %rd2412;
	xor.b64  	%rd2415, %rd2414, %rd2393;
	add.s64 	%rd2416, %rd2405, %rd2415;
	add.s64 	%rd2417, %rd2416, %rd2411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1702,%dummy}, %rd2406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1703}, %rd2406;
	}
	shf.r.wrap.b32 	%r1704, %r1703, %r1702, 14;
	shf.r.wrap.b32 	%r1705, %r1702, %r1703, 14;
	mov.b64 	%rd2418, {%r1705, %r1704};
	shf.r.wrap.b32 	%r1706, %r1703, %r1702, 18;
	shf.r.wrap.b32 	%r1707, %r1702, %r1703, 18;
	mov.b64 	%rd2419, {%r1707, %r1706};
	xor.b64  	%rd2420, %rd2419, %rd2418;
	shf.l.wrap.b32 	%r1708, %r1702, %r1703, 23;
	shf.l.wrap.b32 	%r1709, %r1703, %r1702, 23;
	mov.b64 	%rd2421, {%r1709, %r1708};
	xor.b64  	%rd2422, %rd2420, %rd2421;
	xor.b64  	%rd2423, %rd2382, %rd2358;
	and.b64  	%rd2424, %rd2406, %rd2423;
	xor.b64  	%rd2425, %rd2424, %rd2358;
	add.s64 	%rd2426, %rd2228, %rd2165;
	add.s64 	%rd2427, %rd2426, %rd2756;
	add.s64 	%rd2428, %rd2427, %rd2425;
	add.s64 	%rd2429, %rd2428, %rd2422;
	add.s64 	%rd2430, %rd2429, %rd2176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd2417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1711}, %rd2417;
	}
	shf.r.wrap.b32 	%r1712, %r1711, %r1710, 28;
	shf.r.wrap.b32 	%r1713, %r1710, %r1711, 28;
	mov.b64 	%rd2431, {%r1713, %r1712};
	shf.l.wrap.b32 	%r1714, %r1710, %r1711, 30;
	shf.l.wrap.b32 	%r1715, %r1711, %r1710, 30;
	mov.b64 	%rd2432, {%r1715, %r1714};
	xor.b64  	%rd2433, %rd2432, %rd2431;
	shf.l.wrap.b32 	%r1716, %r1710, %r1711, 25;
	shf.l.wrap.b32 	%r1717, %r1711, %r1710, 25;
	mov.b64 	%rd2434, {%r1717, %r1716};
	xor.b64  	%rd2435, %rd2433, %rd2434;
	xor.b64  	%rd2436, %rd2417, %rd2369;
	xor.b64  	%rd2437, %rd2417, %rd2393;
	and.b64  	%rd2438, %rd2437, %rd2436;
	xor.b64  	%rd2439, %rd2438, %rd2417;
	add.s64 	%rd2440, %rd2429, %rd2439;
	add.s64 	%rd2441, %rd2440, %rd2435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1718,%dummy}, %rd2430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1719}, %rd2430;
	}
	shf.r.wrap.b32 	%r1720, %r1719, %r1718, 14;
	shf.r.wrap.b32 	%r1721, %r1718, %r1719, 14;
	mov.b64 	%rd2442, {%r1721, %r1720};
	shf.r.wrap.b32 	%r1722, %r1719, %r1718, 18;
	shf.r.wrap.b32 	%r1723, %r1718, %r1719, 18;
	mov.b64 	%rd2443, {%r1723, %r1722};
	xor.b64  	%rd2444, %rd2443, %rd2442;
	shf.l.wrap.b32 	%r1724, %r1718, %r1719, 23;
	shf.l.wrap.b32 	%r1725, %r1719, %r1718, 23;
	mov.b64 	%rd2445, {%r1725, %r1724};
	xor.b64  	%rd2446, %rd2444, %rd2445;
	xor.b64  	%rd2447, %rd2406, %rd2382;
	and.b64  	%rd2448, %rd2430, %rd2447;
	xor.b64  	%rd2449, %rd2448, %rd2382;
	add.s64 	%rd2450, %rd2358, %rd2241;
	add.s64 	%rd2451, %rd2450, %rd2757;
	add.s64 	%rd2452, %rd2451, %rd2449;
	add.s64 	%rd2453, %rd2452, %rd2446;
	add.s64 	%rd2454, %rd2453, %rd2369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1726,%dummy}, %rd2441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1727}, %rd2441;
	}
	shf.r.wrap.b32 	%r1728, %r1727, %r1726, 28;
	shf.r.wrap.b32 	%r1729, %r1726, %r1727, 28;
	mov.b64 	%rd2455, {%r1729, %r1728};
	shf.l.wrap.b32 	%r1730, %r1726, %r1727, 30;
	shf.l.wrap.b32 	%r1731, %r1727, %r1726, 30;
	mov.b64 	%rd2456, {%r1731, %r1730};
	xor.b64  	%rd2457, %rd2456, %rd2455;
	shf.l.wrap.b32 	%r1732, %r1726, %r1727, 25;
	shf.l.wrap.b32 	%r1733, %r1727, %r1726, 25;
	mov.b64 	%rd2458, {%r1733, %r1732};
	xor.b64  	%rd2459, %rd2457, %rd2458;
	xor.b64  	%rd2460, %rd2441, %rd2393;
	xor.b64  	%rd2461, %rd2441, %rd2417;
	and.b64  	%rd2462, %rd2461, %rd2460;
	xor.b64  	%rd2463, %rd2462, %rd2441;
	add.s64 	%rd2464, %rd2453, %rd2463;
	add.s64 	%rd2465, %rd2464, %rd2459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd2454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd2454;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 14;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 14;
	mov.b64 	%rd2466, {%r1737, %r1736};
	shf.r.wrap.b32 	%r1738, %r1735, %r1734, 18;
	shf.r.wrap.b32 	%r1739, %r1734, %r1735, 18;
	mov.b64 	%rd2467, {%r1739, %r1738};
	xor.b64  	%rd2468, %rd2467, %rd2466;
	shf.l.wrap.b32 	%r1740, %r1734, %r1735, 23;
	shf.l.wrap.b32 	%r1741, %r1735, %r1734, 23;
	mov.b64 	%rd2469, {%r1741, %r1740};
	xor.b64  	%rd2470, %rd2468, %rd2469;
	xor.b64  	%rd2471, %rd2430, %rd2406;
	and.b64  	%rd2472, %rd2454, %rd2471;
	xor.b64  	%rd2473, %rd2472, %rd2406;
	add.s64 	%rd2474, %rd2382, %rd2254;
	add.s64 	%rd2475, %rd2474, %rd2758;
	add.s64 	%rd2476, %rd2475, %rd2473;
	add.s64 	%rd2477, %rd2476, %rd2470;
	add.s64 	%rd2478, %rd2477, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd2465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1743}, %rd2465;
	}
	shf.r.wrap.b32 	%r1744, %r1743, %r1742, 28;
	shf.r.wrap.b32 	%r1745, %r1742, %r1743, 28;
	mov.b64 	%rd2479, {%r1745, %r1744};
	shf.l.wrap.b32 	%r1746, %r1742, %r1743, 30;
	shf.l.wrap.b32 	%r1747, %r1743, %r1742, 30;
	mov.b64 	%rd2480, {%r1747, %r1746};
	xor.b64  	%rd2481, %rd2480, %rd2479;
	shf.l.wrap.b32 	%r1748, %r1742, %r1743, 25;
	shf.l.wrap.b32 	%r1749, %r1743, %r1742, 25;
	mov.b64 	%rd2482, {%r1749, %r1748};
	xor.b64  	%rd2483, %rd2481, %rd2482;
	xor.b64  	%rd2484, %rd2465, %rd2417;
	xor.b64  	%rd2485, %rd2465, %rd2441;
	and.b64  	%rd2486, %rd2485, %rd2484;
	xor.b64  	%rd2487, %rd2486, %rd2465;
	add.s64 	%rd2488, %rd2477, %rd2487;
	add.s64 	%rd2489, %rd2488, %rd2483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1750,%dummy}, %rd2478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1751}, %rd2478;
	}
	shf.r.wrap.b32 	%r1752, %r1751, %r1750, 14;
	shf.r.wrap.b32 	%r1753, %r1750, %r1751, 14;
	mov.b64 	%rd2490, {%r1753, %r1752};
	shf.r.wrap.b32 	%r1754, %r1751, %r1750, 18;
	shf.r.wrap.b32 	%r1755, %r1750, %r1751, 18;
	mov.b64 	%rd2491, {%r1755, %r1754};
	xor.b64  	%rd2492, %rd2491, %rd2490;
	shf.l.wrap.b32 	%r1756, %r1750, %r1751, 23;
	shf.l.wrap.b32 	%r1757, %r1751, %r1750, 23;
	mov.b64 	%rd2493, {%r1757, %r1756};
	xor.b64  	%rd2494, %rd2492, %rd2493;
	xor.b64  	%rd2495, %rd2454, %rd2430;
	and.b64  	%rd2496, %rd2478, %rd2495;
	xor.b64  	%rd2497, %rd2496, %rd2430;
	add.s64 	%rd2498, %rd2406, %rd2267;
	add.s64 	%rd2499, %rd2498, %rd2759;
	add.s64 	%rd2500, %rd2499, %rd2497;
	add.s64 	%rd2501, %rd2500, %rd2494;
	add.s64 	%rd2502, %rd2501, %rd2417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd2489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1759}, %rd2489;
	}
	shf.r.wrap.b32 	%r1760, %r1759, %r1758, 28;
	shf.r.wrap.b32 	%r1761, %r1758, %r1759, 28;
	mov.b64 	%rd2503, {%r1761, %r1760};
	shf.l.wrap.b32 	%r1762, %r1758, %r1759, 30;
	shf.l.wrap.b32 	%r1763, %r1759, %r1758, 30;
	mov.b64 	%rd2504, {%r1763, %r1762};
	xor.b64  	%rd2505, %rd2504, %rd2503;
	shf.l.wrap.b32 	%r1764, %r1758, %r1759, 25;
	shf.l.wrap.b32 	%r1765, %r1759, %r1758, 25;
	mov.b64 	%rd2506, {%r1765, %r1764};
	xor.b64  	%rd2507, %rd2505, %rd2506;
	xor.b64  	%rd2508, %rd2489, %rd2441;
	xor.b64  	%rd2509, %rd2489, %rd2465;
	and.b64  	%rd2510, %rd2509, %rd2508;
	xor.b64  	%rd2511, %rd2510, %rd2489;
	add.s64 	%rd2512, %rd2501, %rd2511;
	add.s64 	%rd2513, %rd2512, %rd2507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1766,%dummy}, %rd2502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1767}, %rd2502;
	}
	shf.r.wrap.b32 	%r1768, %r1767, %r1766, 14;
	shf.r.wrap.b32 	%r1769, %r1766, %r1767, 14;
	mov.b64 	%rd2514, {%r1769, %r1768};
	shf.r.wrap.b32 	%r1770, %r1767, %r1766, 18;
	shf.r.wrap.b32 	%r1771, %r1766, %r1767, 18;
	mov.b64 	%rd2515, {%r1771, %r1770};
	xor.b64  	%rd2516, %rd2515, %rd2514;
	shf.l.wrap.b32 	%r1772, %r1766, %r1767, 23;
	shf.l.wrap.b32 	%r1773, %r1767, %r1766, 23;
	mov.b64 	%rd2517, {%r1773, %r1772};
	xor.b64  	%rd2518, %rd2516, %rd2517;
	xor.b64  	%rd2519, %rd2478, %rd2454;
	and.b64  	%rd2520, %rd2502, %rd2519;
	xor.b64  	%rd2521, %rd2520, %rd2454;
	add.s64 	%rd2522, %rd2430, %rd2280;
	add.s64 	%rd2523, %rd2522, %rd2760;
	add.s64 	%rd2524, %rd2523, %rd2521;
	add.s64 	%rd2525, %rd2524, %rd2518;
	add.s64 	%rd2526, %rd2525, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd2513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1775}, %rd2513;
	}
	shf.r.wrap.b32 	%r1776, %r1775, %r1774, 28;
	shf.r.wrap.b32 	%r1777, %r1774, %r1775, 28;
	mov.b64 	%rd2527, {%r1777, %r1776};
	shf.l.wrap.b32 	%r1778, %r1774, %r1775, 30;
	shf.l.wrap.b32 	%r1779, %r1775, %r1774, 30;
	mov.b64 	%rd2528, {%r1779, %r1778};
	xor.b64  	%rd2529, %rd2528, %rd2527;
	shf.l.wrap.b32 	%r1780, %r1774, %r1775, 25;
	shf.l.wrap.b32 	%r1781, %r1775, %r1774, 25;
	mov.b64 	%rd2530, {%r1781, %r1780};
	xor.b64  	%rd2531, %rd2529, %rd2530;
	xor.b64  	%rd2532, %rd2513, %rd2465;
	xor.b64  	%rd2533, %rd2513, %rd2489;
	and.b64  	%rd2534, %rd2533, %rd2532;
	xor.b64  	%rd2535, %rd2534, %rd2513;
	add.s64 	%rd2536, %rd2525, %rd2535;
	add.s64 	%rd2537, %rd2536, %rd2531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1782,%dummy}, %rd2526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1783}, %rd2526;
	}
	shf.r.wrap.b32 	%r1784, %r1783, %r1782, 14;
	shf.r.wrap.b32 	%r1785, %r1782, %r1783, 14;
	mov.b64 	%rd2538, {%r1785, %r1784};
	shf.r.wrap.b32 	%r1786, %r1783, %r1782, 18;
	shf.r.wrap.b32 	%r1787, %r1782, %r1783, 18;
	mov.b64 	%rd2539, {%r1787, %r1786};
	xor.b64  	%rd2540, %rd2539, %rd2538;
	shf.l.wrap.b32 	%r1788, %r1782, %r1783, 23;
	shf.l.wrap.b32 	%r1789, %r1783, %r1782, 23;
	mov.b64 	%rd2541, {%r1789, %r1788};
	xor.b64  	%rd2542, %rd2540, %rd2541;
	xor.b64  	%rd2543, %rd2502, %rd2478;
	and.b64  	%rd2544, %rd2526, %rd2543;
	xor.b64  	%rd2545, %rd2544, %rd2478;
	add.s64 	%rd2546, %rd2454, %rd2293;
	add.s64 	%rd2547, %rd2546, %rd2761;
	add.s64 	%rd2548, %rd2547, %rd2545;
	add.s64 	%rd2549, %rd2548, %rd2542;
	add.s64 	%rd2550, %rd2549, %rd2465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1790,%dummy}, %rd2537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1791}, %rd2537;
	}
	shf.r.wrap.b32 	%r1792, %r1791, %r1790, 28;
	shf.r.wrap.b32 	%r1793, %r1790, %r1791, 28;
	mov.b64 	%rd2551, {%r1793, %r1792};
	shf.l.wrap.b32 	%r1794, %r1790, %r1791, 30;
	shf.l.wrap.b32 	%r1795, %r1791, %r1790, 30;
	mov.b64 	%rd2552, {%r1795, %r1794};
	xor.b64  	%rd2553, %rd2552, %rd2551;
	shf.l.wrap.b32 	%r1796, %r1790, %r1791, 25;
	shf.l.wrap.b32 	%r1797, %r1791, %r1790, 25;
	mov.b64 	%rd2554, {%r1797, %r1796};
	xor.b64  	%rd2555, %rd2553, %rd2554;
	xor.b64  	%rd2556, %rd2537, %rd2489;
	xor.b64  	%rd2557, %rd2537, %rd2513;
	and.b64  	%rd2558, %rd2557, %rd2556;
	xor.b64  	%rd2559, %rd2558, %rd2537;
	add.s64 	%rd2560, %rd2549, %rd2559;
	add.s64 	%rd2561, %rd2560, %rd2555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1798,%dummy}, %rd2550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1799}, %rd2550;
	}
	shf.r.wrap.b32 	%r1800, %r1799, %r1798, 14;
	shf.r.wrap.b32 	%r1801, %r1798, %r1799, 14;
	mov.b64 	%rd2562, {%r1801, %r1800};
	shf.r.wrap.b32 	%r1802, %r1799, %r1798, 18;
	shf.r.wrap.b32 	%r1803, %r1798, %r1799, 18;
	mov.b64 	%rd2563, {%r1803, %r1802};
	xor.b64  	%rd2564, %rd2563, %rd2562;
	shf.l.wrap.b32 	%r1804, %r1798, %r1799, 23;
	shf.l.wrap.b32 	%r1805, %r1799, %r1798, 23;
	mov.b64 	%rd2565, {%r1805, %r1804};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	xor.b64  	%rd2567, %rd2526, %rd2502;
	and.b64  	%rd2568, %rd2550, %rd2567;
	xor.b64  	%rd2569, %rd2568, %rd2502;
	add.s64 	%rd2570, %rd2478, %rd2306;
	add.s64 	%rd2571, %rd2570, %rd2762;
	add.s64 	%rd2572, %rd2571, %rd2569;
	add.s64 	%rd2573, %rd2572, %rd2566;
	add.s64 	%rd2574, %rd2573, %rd2489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1806,%dummy}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1807}, %rd2561;
	}
	shf.r.wrap.b32 	%r1808, %r1807, %r1806, 28;
	shf.r.wrap.b32 	%r1809, %r1806, %r1807, 28;
	mov.b64 	%rd2575, {%r1809, %r1808};
	shf.l.wrap.b32 	%r1810, %r1806, %r1807, 30;
	shf.l.wrap.b32 	%r1811, %r1807, %r1806, 30;
	mov.b64 	%rd2576, {%r1811, %r1810};
	xor.b64  	%rd2577, %rd2576, %rd2575;
	shf.l.wrap.b32 	%r1812, %r1806, %r1807, 25;
	shf.l.wrap.b32 	%r1813, %r1807, %r1806, 25;
	mov.b64 	%rd2578, {%r1813, %r1812};
	xor.b64  	%rd2579, %rd2577, %rd2578;
	xor.b64  	%rd2580, %rd2561, %rd2513;
	xor.b64  	%rd2581, %rd2561, %rd2537;
	and.b64  	%rd2582, %rd2581, %rd2580;
	xor.b64  	%rd2583, %rd2582, %rd2561;
	add.s64 	%rd2584, %rd2573, %rd2583;
	add.s64 	%rd2585, %rd2584, %rd2579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd2574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1815}, %rd2574;
	}
	shf.r.wrap.b32 	%r1816, %r1815, %r1814, 14;
	shf.r.wrap.b32 	%r1817, %r1814, %r1815, 14;
	mov.b64 	%rd2586, {%r1817, %r1816};
	shf.r.wrap.b32 	%r1818, %r1815, %r1814, 18;
	shf.r.wrap.b32 	%r1819, %r1814, %r1815, 18;
	mov.b64 	%rd2587, {%r1819, %r1818};
	xor.b64  	%rd2588, %rd2587, %rd2586;
	shf.l.wrap.b32 	%r1820, %r1814, %r1815, 23;
	shf.l.wrap.b32 	%r1821, %r1815, %r1814, 23;
	mov.b64 	%rd2589, {%r1821, %r1820};
	xor.b64  	%rd2590, %rd2588, %rd2589;
	xor.b64  	%rd2591, %rd2550, %rd2526;
	and.b64  	%rd2592, %rd2574, %rd2591;
	xor.b64  	%rd2593, %rd2592, %rd2526;
	add.s64 	%rd2594, %rd2502, %rd2319;
	add.s64 	%rd2595, %rd2594, %rd2763;
	add.s64 	%rd2596, %rd2595, %rd2593;
	add.s64 	%rd2597, %rd2596, %rd2590;
	add.s64 	%rd2598, %rd2597, %rd2513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd2585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1823}, %rd2585;
	}
	shf.r.wrap.b32 	%r1824, %r1823, %r1822, 28;
	shf.r.wrap.b32 	%r1825, %r1822, %r1823, 28;
	mov.b64 	%rd2599, {%r1825, %r1824};
	shf.l.wrap.b32 	%r1826, %r1822, %r1823, 30;
	shf.l.wrap.b32 	%r1827, %r1823, %r1822, 30;
	mov.b64 	%rd2600, {%r1827, %r1826};
	xor.b64  	%rd2601, %rd2600, %rd2599;
	shf.l.wrap.b32 	%r1828, %r1822, %r1823, 25;
	shf.l.wrap.b32 	%r1829, %r1823, %r1822, 25;
	mov.b64 	%rd2602, {%r1829, %r1828};
	xor.b64  	%rd2603, %rd2601, %rd2602;
	xor.b64  	%rd2604, %rd2585, %rd2537;
	xor.b64  	%rd2605, %rd2585, %rd2561;
	and.b64  	%rd2606, %rd2605, %rd2604;
	xor.b64  	%rd2607, %rd2606, %rd2585;
	add.s64 	%rd2608, %rd2597, %rd2607;
	add.s64 	%rd2609, %rd2608, %rd2603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1830,%dummy}, %rd2598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1831}, %rd2598;
	}
	shf.r.wrap.b32 	%r1832, %r1831, %r1830, 14;
	shf.r.wrap.b32 	%r1833, %r1830, %r1831, 14;
	mov.b64 	%rd2610, {%r1833, %r1832};
	shf.r.wrap.b32 	%r1834, %r1831, %r1830, 18;
	shf.r.wrap.b32 	%r1835, %r1830, %r1831, 18;
	mov.b64 	%rd2611, {%r1835, %r1834};
	xor.b64  	%rd2612, %rd2611, %rd2610;
	shf.l.wrap.b32 	%r1836, %r1830, %r1831, 23;
	shf.l.wrap.b32 	%r1837, %r1831, %r1830, 23;
	mov.b64 	%rd2613, {%r1837, %r1836};
	xor.b64  	%rd2614, %rd2612, %rd2613;
	xor.b64  	%rd2615, %rd2574, %rd2550;
	and.b64  	%rd2616, %rd2598, %rd2615;
	xor.b64  	%rd2617, %rd2616, %rd2550;
	add.s64 	%rd2618, %rd2526, %rd2332;
	add.s64 	%rd2619, %rd2618, %rd2764;
	add.s64 	%rd2620, %rd2619, %rd2617;
	add.s64 	%rd2621, %rd2620, %rd2614;
	add.s64 	%rd2622, %rd2621, %rd2537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1838,%dummy}, %rd2609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1839}, %rd2609;
	}
	shf.r.wrap.b32 	%r1840, %r1839, %r1838, 28;
	shf.r.wrap.b32 	%r1841, %r1838, %r1839, 28;
	mov.b64 	%rd2623, {%r1841, %r1840};
	shf.l.wrap.b32 	%r1842, %r1838, %r1839, 30;
	shf.l.wrap.b32 	%r1843, %r1839, %r1838, 30;
	mov.b64 	%rd2624, {%r1843, %r1842};
	xor.b64  	%rd2625, %rd2624, %rd2623;
	shf.l.wrap.b32 	%r1844, %r1838, %r1839, 25;
	shf.l.wrap.b32 	%r1845, %r1839, %r1838, 25;
	mov.b64 	%rd2626, {%r1845, %r1844};
	xor.b64  	%rd2627, %rd2625, %rd2626;
	xor.b64  	%rd2628, %rd2609, %rd2561;
	xor.b64  	%rd2629, %rd2609, %rd2585;
	and.b64  	%rd2630, %rd2629, %rd2628;
	xor.b64  	%rd2631, %rd2630, %rd2609;
	add.s64 	%rd2632, %rd2621, %rd2631;
	add.s64 	%rd2633, %rd2632, %rd2627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd2622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd2622;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 14;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 14;
	mov.b64 	%rd2634, {%r1849, %r1848};
	shf.r.wrap.b32 	%r1850, %r1847, %r1846, 18;
	shf.r.wrap.b32 	%r1851, %r1846, %r1847, 18;
	mov.b64 	%rd2635, {%r1851, %r1850};
	xor.b64  	%rd2636, %rd2635, %rd2634;
	shf.l.wrap.b32 	%r1852, %r1846, %r1847, 23;
	shf.l.wrap.b32 	%r1853, %r1847, %r1846, 23;
	mov.b64 	%rd2637, {%r1853, %r1852};
	xor.b64  	%rd2638, %rd2636, %rd2637;
	xor.b64  	%rd2639, %rd2598, %rd2574;
	and.b64  	%rd2640, %rd2622, %rd2639;
	xor.b64  	%rd2641, %rd2640, %rd2574;
	add.s64 	%rd2642, %rd2550, %rd2345;
	add.s64 	%rd2643, %rd2642, %rd2765;
	add.s64 	%rd2644, %rd2643, %rd2641;
	add.s64 	%rd2645, %rd2644, %rd2638;
	add.s64 	%rd2646, %rd2645, %rd2561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd2633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1855}, %rd2633;
	}
	shf.r.wrap.b32 	%r1856, %r1855, %r1854, 28;
	shf.r.wrap.b32 	%r1857, %r1854, %r1855, 28;
	mov.b64 	%rd2647, {%r1857, %r1856};
	shf.l.wrap.b32 	%r1858, %r1854, %r1855, 30;
	shf.l.wrap.b32 	%r1859, %r1855, %r1854, 30;
	mov.b64 	%rd2648, {%r1859, %r1858};
	xor.b64  	%rd2649, %rd2648, %rd2647;
	shf.l.wrap.b32 	%r1860, %r1854, %r1855, 25;
	shf.l.wrap.b32 	%r1861, %r1855, %r1854, 25;
	mov.b64 	%rd2650, {%r1861, %r1860};
	xor.b64  	%rd2651, %rd2649, %rd2650;
	xor.b64  	%rd2652, %rd2633, %rd2585;
	xor.b64  	%rd2653, %rd2633, %rd2609;
	and.b64  	%rd2654, %rd2653, %rd2652;
	xor.b64  	%rd2655, %rd2654, %rd2633;
	add.s64 	%rd2656, %rd2645, %rd2655;
	add.s64 	%rd2657, %rd2656, %rd2651;
	cvt.u32.u64	%r8, %rd2646;
	shr.u64 	%rd2658, %rd2646, 32;
	cvt.u32.u64	%r9, %rd2658;
	cvt.u32.u64	%r10, %rd2657;
	shr.u64 	%rd2659, %rd2657, 32;
	cvt.u32.u64	%r11, %rd2659;
	shr.u32 	%r1862, %r8, %r5;
	and.b32  	%r1863, %r1862, %r32;
	mul.wide.u32 	%rd2660, %r1863, 4;
	add.s64 	%rd2661, %rd2766, %rd2660;
	and.b32  	%r1864, %r8, 31;
	mov.u32 	%r1865, 1;
	shl.b32 	%r12, %r1865, %r1864;
	ld.global.u32 	%r1866, [%rd2661];
	and.b32  	%r1867, %r1866, %r12;
	setp.eq.s32	%p3, %r1867, 0;
	@%p3 bra 	BB2_30;

	mov.u32 	%r1920, 1;
	ld.param.u64 	%rd2741, [m01700_m08_param_7];
	shr.u32 	%r1868, %r9, %r5;
	and.b32  	%r1869, %r1868, %r32;
	mul.wide.u32 	%rd2662, %r1869, 4;
	add.s64 	%rd2663, %rd2741, %rd2662;
	and.b32  	%r1870, %r9, 31;
	shl.b32 	%r13, %r1920, %r1870;
	ld.global.u32 	%r1872, [%rd2663];
	and.b32  	%r1873, %r1872, %r13;
	setp.eq.s32	%p4, %r1873, 0;
	@%p4 bra 	BB2_30;

	mov.u32 	%r1921, 1;
	ld.param.u64 	%rd2742, [m01700_m08_param_8];
	shr.u32 	%r1874, %r10, %r5;
	and.b32  	%r1875, %r1874, %r32;
	mul.wide.u32 	%rd2664, %r1875, 4;
	add.s64 	%rd2665, %rd2742, %rd2664;
	and.b32  	%r1876, %r10, 31;
	shl.b32 	%r14, %r1921, %r1876;
	ld.global.u32 	%r1878, [%rd2665];
	and.b32  	%r1879, %r1878, %r14;
	setp.eq.s32	%p5, %r1879, 0;
	@%p5 bra 	BB2_30;

	mov.u32 	%r1922, 1;
	ld.param.u64 	%rd2743, [m01700_m08_param_9];
	shr.u32 	%r1880, %r11, %r5;
	and.b32  	%r1881, %r1880, %r32;
	mul.wide.u32 	%rd2666, %r1881, 4;
	add.s64 	%rd2667, %rd2743, %rd2666;
	and.b32  	%r1882, %r11, 31;
	shl.b32 	%r15, %r1922, %r1882;
	ld.global.u32 	%r1884, [%rd2667];
	and.b32  	%r1885, %r1884, %r15;
	setp.eq.s32	%p6, %r1885, 0;
	@%p6 bra 	BB2_30;

	and.b32  	%r1925, %r8, 31;
	mov.u32 	%r1924, 1;
	shl.b32 	%r1923, %r1924, %r1925;
	ld.param.u64 	%rd2767, [m01700_m08_param_10];
	shr.u32 	%r1886, %r8, %r6;
	and.b32  	%r1887, %r1886, %r32;
	mul.wide.u32 	%rd2668, %r1887, 4;
	add.s64 	%rd2669, %rd2767, %rd2668;
	ld.global.u32 	%r1888, [%rd2669];
	and.b32  	%r1889, %r1888, %r1923;
	setp.eq.s32	%p7, %r1889, 0;
	@%p7 bra 	BB2_30;

	ld.param.u64 	%rd2768, [m01700_m08_param_11];
	shr.u32 	%r1890, %r9, %r6;
	and.b32  	%r1891, %r1890, %r32;
	mul.wide.u32 	%rd2670, %r1891, 4;
	add.s64 	%rd2671, %rd2768, %rd2670;
	ld.global.u32 	%r1892, [%rd2671];
	and.b32  	%r1893, %r1892, %r13;
	setp.eq.s32	%p8, %r1893, 0;
	@%p8 bra 	BB2_30;

	ld.param.u64 	%rd2769, [m01700_m08_param_12];
	shr.u32 	%r1894, %r10, %r6;
	and.b32  	%r1895, %r1894, %r32;
	mul.wide.u32 	%rd2672, %r1895, 4;
	add.s64 	%rd2673, %rd2769, %rd2672;
	ld.global.u32 	%r1896, [%rd2673];
	and.b32  	%r1897, %r1896, %r14;
	setp.eq.s32	%p9, %r1897, 0;
	@%p9 bra 	BB2_30;

	ld.param.u64 	%rd2770, [m01700_m08_param_13];
	shr.u32 	%r1898, %r11, %r6;
	and.b32  	%r1899, %r1898, %r32;
	mul.wide.u32 	%rd2674, %r1899, 4;
	add.s64 	%rd2675, %rd2770, %rd2674;
	ld.global.u32 	%r1900, [%rd2675];
	and.b32  	%r1901, %r1900, %r15;
	setp.eq.s32	%p10, %r1901, 0;
	@%p10 bra 	BB2_30;

	setp.eq.s32	%p11, %r37, 0;
	mov.u32 	%r1934, 0;
	mov.u32 	%r1902, -1;
	mov.u32 	%r1933, %r37;
	@%p11 bra 	BB2_24;

BB2_12:
	ld.param.u64 	%rd2771, [m01700_m08_param_15];
	mov.u32 	%r1935, 1;
	shr.u32 	%r18, %r1933, 1;
	add.s32 	%r1936, %r18, %r1934;
	cvt.u64.u32	%rd2676, %r1936;
	add.s64 	%rd96, %rd2676, %rd22;
	shl.b64 	%rd2677, %rd96, 6;
	add.s64 	%rd2678, %rd2771, %rd2677;
	ld.global.u32 	%r20, [%rd2678+28];
	setp.gt.u32	%p12, %r11, %r20;
	@%p12 bra 	BB2_22;

	setp.lt.u32	%p13, %r11, %r20;
	mov.u32 	%r1905, -1;
	@%p13 bra 	BB2_14;
	bra.uni 	BB2_15;

BB2_14:
	mov.u32 	%r1935, %r1905;
	bra.uni 	BB2_22;

BB2_15:
	mov.u32 	%r1935, 1;
	ld.global.u32 	%r21, [%rd2678+24];
	setp.gt.u32	%p14, %r10, %r21;
	@%p14 bra 	BB2_22;

	setp.lt.u32	%p15, %r10, %r21;
	@%p15 bra 	BB2_17;
	bra.uni 	BB2_18;

BB2_17:
	mov.u32 	%r1935, %r1905;
	bra.uni 	BB2_22;

BB2_18:
	mov.u32 	%r1935, 1;
	ld.global.u32 	%r22, [%rd2678+60];
	setp.gt.u32	%p16, %r9, %r22;
	@%p16 bra 	BB2_22;

	setp.lt.u32	%p17, %r9, %r22;
	mov.u32 	%r1935, %r1905;
	@%p17 bra 	BB2_22;

	mov.u32 	%r1935, 1;
	ld.global.u32 	%r23, [%rd2678+56];
	setp.gt.u32	%p18, %r8, %r23;
	@%p18 bra 	BB2_22;

	setp.lt.u32	%p19, %r8, %r23;
	selp.b32	%r1935, -1, 0, %p19;

BB2_22:
	add.s32 	%r1911, %r18, 1;
	setp.gt.s32	%p20, %r1935, 0;
	selp.b32	%r1912, %r1911, 0, %p20;
	add.s32 	%r1934, %r1912, %r1934;
	selp.b32	%r1913, -1, 0, %p20;
	add.s32 	%r1914, %r1913, %r1933;
	shr.u32 	%r1933, %r1914, 1;
	setp.eq.s32	%p21, %r1935, 0;
	@%p21 bra 	BB2_25;

	setp.ne.s32	%p22, %r1933, 0;
	@%p22 bra 	BB2_12;

BB2_24:
	mov.u32 	%r1936, %r1902;

BB2_25:
	setp.eq.s32	%p23, %r1936, -1;
	@%p23 bra 	BB2_30;

	ld.param.u64 	%rd2772, [m01700_m08_param_16];
	ld.param.u32 	%r1918, [m01700_m08_param_32];
	add.s32 	%r29, %r1936, %r1918;
	mul.wide.u32 	%rd2685, %r29, 4;
	add.s64 	%rd2686, %rd2772, %rd2685;
	atom.global.add.u32 	%r1916, [%rd2686], 1;
	setp.ne.s32	%p24, %r1916, 0;
	@%p24 bra 	BB2_30;

	atom.global.add.u32 	%r30, [%rd110], 1;
	setp.lt.u32	%p25, %r30, %r37;
	@%p25 bra 	BB2_29;
	bra.uni 	BB2_28;

BB2_29:
	ld.param.u32 	%r1930, [m01700_m08_param_27];
	ld.param.u64 	%rd2773, [m01700_m08_param_14];
	mul.wide.u32 	%rd2687, %r30, 20;
	add.s64 	%rd2688, %rd2773, %rd2687;
	st.global.u32 	[%rd2688], %r1930;
	st.global.u32 	[%rd2688+4], %r1936;
	st.global.u32 	[%rd2688+8], %r29;
	st.global.u32 	[%rd2688+12], %r1;
	st.global.u32 	[%rd2688+16], %r1932;
	bra.uni 	BB2_30;

BB2_28:
	atom.global.add.u32 	%r1917, [%rd110], -1;

BB2_30:
	ld.param.u32 	%r1919, [m01700_m08_param_30];
	add.s32 	%r1932, %r1932, 1;
	setp.lt.u32	%p26, %r1932, %r1919;
	@%p26 bra 	BB2_3;

BB2_31:
	ret;
}

	// .globl	m01700_m16
.entry m01700_m16(
	.param .u64 .ptr .global .align 4 m01700_m16_param_0,
	.param .u64 .ptr .global .align 4 m01700_m16_param_1,
	.param .u64 .ptr .global .align 4 m01700_m16_param_2,
	.param .u64 .ptr .const .align 4 m01700_m16_param_3,
	.param .u64 .ptr .global .align 1 m01700_m16_param_4,
	.param .u64 .ptr .global .align 1 m01700_m16_param_5,
	.param .u64 .ptr .global .align 4 m01700_m16_param_6,
	.param .u64 .ptr .global .align 4 m01700_m16_param_7,
	.param .u64 .ptr .global .align 4 m01700_m16_param_8,
	.param .u64 .ptr .global .align 4 m01700_m16_param_9,
	.param .u64 .ptr .global .align 4 m01700_m16_param_10,
	.param .u64 .ptr .global .align 4 m01700_m16_param_11,
	.param .u64 .ptr .global .align 4 m01700_m16_param_12,
	.param .u64 .ptr .global .align 4 m01700_m16_param_13,
	.param .u64 .ptr .global .align 4 m01700_m16_param_14,
	.param .u64 .ptr .global .align 4 m01700_m16_param_15,
	.param .u64 .ptr .global .align 4 m01700_m16_param_16,
	.param .u64 .ptr .global .align 4 m01700_m16_param_17,
	.param .u64 .ptr .global .align 1 m01700_m16_param_18,
	.param .u64 .ptr .global .align 4 m01700_m16_param_19,
	.param .u64 .ptr .global .align 4 m01700_m16_param_20,
	.param .u64 .ptr .global .align 4 m01700_m16_param_21,
	.param .u64 .ptr .global .align 4 m01700_m16_param_22,
	.param .u64 .ptr .global .align 4 m01700_m16_param_23,
	.param .u32 m01700_m16_param_24,
	.param .u32 m01700_m16_param_25,
	.param .u32 m01700_m16_param_26,
	.param .u32 m01700_m16_param_27,
	.param .u32 m01700_m16_param_28,
	.param .u32 m01700_m16_param_29,
	.param .u32 m01700_m16_param_30,
	.param .u32 m01700_m16_param_31,
	.param .u32 m01700_m16_param_32,
	.param .u32 m01700_m16_param_33,
	.param .u64 m01700_m16_param_34
)
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<1961>;
	.reg .b64 	%rd<2799>;


	ld.param.u64 	%rd102, [m01700_m16_param_0];
	ld.param.u64 	%rd115, [m01700_m16_param_19];
	ld.param.u32 	%r32, [m01700_m16_param_24];
	ld.param.u32 	%r33, [m01700_m16_param_25];
	ld.param.u32 	%r34, [m01700_m16_param_26];
	ld.param.u32 	%r36, [m01700_m16_param_30];
	ld.param.u32 	%r37, [m01700_m16_param_31];
	ld.param.u32 	%r38, [m01700_m16_param_32];
	ld.param.u64 	%rd116, [m01700_m16_param_34];
	mov.b32	%r39, %envreg3;
	mov.u32 	%r40, %ctaid.x;
	mov.u32 	%r41, %ntid.x;
	mad.lo.s32 	%r42, %r40, %r41, %r39;
	mov.u32 	%r43, %tid.x;
	add.s32 	%r1, %r42, %r43;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd116;
	@%p1 bra 	BB3_31;

	setp.eq.s32	%p2, %r36, 0;
	@%p2 bra 	BB3_31;

	mul.lo.s64 	%rd117, %rd1, 260;
	add.s64 	%rd118, %rd102, %rd117;
	ld.global.u32 	%r2, [%rd118];
	ld.global.u32 	%r3, [%rd118+4];
	ld.global.u32 	%r45, [%rd118+8];
	ld.global.u32 	%r46, [%rd118+12];
	mov.b64	%rd119, {%r46, %r45};
	ld.global.u32 	%r47, [%rd118+16];
	ld.global.u32 	%r48, [%rd118+20];
	mov.b64	%rd2, {%r48, %r47};
	ld.global.u32 	%r49, [%rd118+24];
	ld.global.u32 	%r50, [%rd118+28];
	mov.b64	%rd120, {%r50, %r49};
	ld.global.u32 	%r51, [%rd118+32];
	ld.global.u32 	%r52, [%rd118+36];
	mov.b64	%rd3, {%r52, %r51};
	ld.global.u32 	%r53, [%rd118+40];
	ld.global.u32 	%r54, [%rd118+44];
	mov.b64	%rd4, {%r54, %r53};
	ld.global.u32 	%r55, [%rd118+48];
	ld.global.u32 	%r56, [%rd118+52];
	mov.b64	%rd5, {%r56, %r55};
	ld.global.u32 	%r57, [%rd118+56];
	ld.global.u32 	%r58, [%rd118+60];
	mov.b64	%rd6, {%r58, %r57};
	mov.u64 	%rd121, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r59,%dummy}, %rd121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r60}, %rd121;
	}
	shf.r.wrap.b32 	%r61, %r60, %r59, 18;
	shf.r.wrap.b32 	%r62, %r59, %r60, 18;
	mov.b64 	%rd122, {%r62, %r61};
	shf.r.wrap.b32 	%r63, %r60, %r59, 14;
	shf.r.wrap.b32 	%r64, %r59, %r60, 14;
	mov.b64 	%rd123, {%r64, %r63};
	xor.b64  	%rd124, %rd122, %rd123;
	shf.l.wrap.b32 	%r65, %r59, %r60, 23;
	shf.l.wrap.b32 	%r66, %r60, %r59, 23;
	mov.b64 	%rd125, {%r66, %r65};
	xor.b64  	%rd7, %rd124, %rd125;
	ld.const.u64 	%rd126, [k_sha512];
	add.s64 	%rd8, %rd126, 8891960152096595636;
	mov.u64 	%rd127, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r67}, %rd127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r68,%dummy}, %rd127;
	}
	shf.l.wrap.b32 	%r69, %r68, %r67, 30;
	shf.l.wrap.b32 	%r70, %r67, %r68, 30;
	mov.b64 	%rd128, {%r70, %r69};
	shf.r.wrap.b32 	%r71, %r67, %r68, 28;
	shf.r.wrap.b32 	%r72, %r68, %r67, 28;
	mov.b64 	%rd129, {%r72, %r71};
	xor.b64  	%rd130, %rd128, %rd129;
	shf.l.wrap.b32 	%r73, %r68, %r67, 25;
	shf.l.wrap.b32 	%r74, %r67, %r68, 25;
	mov.b64 	%rd131, {%r74, %r73};
	xor.b64  	%rd9, %rd130, %rd131;
	ld.const.u64 	%rd132, [k_sha512+8];
	add.s64 	%rd133, %rd119, %rd132;
	add.s64 	%rd10, %rd133, 2270897969802886507;
	ld.const.u64 	%rd134, [k_sha512+16];
	add.s64 	%rd135, %rd2, %rd134;
	add.s64 	%rd11, %rd135, -7276294671716946913;
	ld.const.u64 	%rd136, [k_sha512+24];
	add.s64 	%rd137, %rd120, %rd136;
	add.s64 	%rd12, %rd137, 5840696475078001361;
	and.b32  	%r5, %r33, 31;
	and.b32  	%r6, %r34, 31;
	cvt.u64.u32	%rd25, %r38;
	mov.u64 	%rd138, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r75}, %rd138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd138;
	}
	shf.l.wrap.b32 	%r77, %r76, %r75, 3;
	shf.l.wrap.b32 	%r78, %r75, %r76, 3;
	mov.b64 	%rd139, {%r78, %r77};
	shf.r.wrap.b32 	%r79, %r75, %r76, 19;
	shf.r.wrap.b32 	%r80, %r76, %r75, 19;
	mov.b64 	%rd140, {%r80, %r79};
	xor.b64  	%rd26, %rd140, %rd139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r81,%dummy}, %rd119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r82}, %rd119;
	}
	shf.r.wrap.b32 	%r83, %r82, %r81, 1;
	shf.r.wrap.b32 	%r84, %r81, %r82, 1;
	mov.b64 	%rd141, {%r84, %r83};
	shf.r.wrap.b32 	%r85, %r82, %r81, 8;
	shf.r.wrap.b32 	%r86, %r81, %r82, 8;
	mov.b64 	%rd142, {%r86, %r85};
	shr.u64 	%rd143, %rd119, 7;
	xor.b64  	%rd144, %rd141, %rd143;
	xor.b64  	%rd27, %rd144, %rd142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r87,%dummy}, %rd6;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r88}, %rd6;
	}
	shf.r.wrap.b32 	%r89, %r88, %r87, 19;
	shf.r.wrap.b32 	%r90, %r87, %r88, 19;
	mov.b64 	%rd145, {%r90, %r89};
	shf.l.wrap.b32 	%r91, %r87, %r88, 3;
	shf.l.wrap.b32 	%r92, %r88, %r87, 3;
	mov.b64 	%rd146, {%r92, %r91};
	shr.u64 	%rd147, %rd6, 6;
	xor.b64  	%rd148, %rd145, %rd147;
	xor.b64  	%rd149, %rd148, %rd146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r93,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r94}, %rd2;
	}
	shf.r.wrap.b32 	%r95, %r94, %r93, 1;
	shf.r.wrap.b32 	%r96, %r93, %r94, 1;
	mov.b64 	%rd150, {%r96, %r95};
	shf.r.wrap.b32 	%r97, %r94, %r93, 8;
	shf.r.wrap.b32 	%r98, %r93, %r94, 8;
	mov.b64 	%rd151, {%r98, %r97};
	shr.u64 	%rd152, %rd2, 7;
	xor.b64  	%rd153, %rd150, %rd152;
	xor.b64  	%rd154, %rd153, %rd151;
	add.s64 	%rd155, %rd119, %rd149;
	add.s64 	%rd28, %rd155, %rd154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r99,%dummy}, %rd120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r100}, %rd120;
	}
	shf.r.wrap.b32 	%r101, %r100, %r99, 1;
	shf.r.wrap.b32 	%r102, %r99, %r100, 1;
	mov.b64 	%rd156, {%r102, %r101};
	shf.r.wrap.b32 	%r103, %r100, %r99, 8;
	shf.r.wrap.b32 	%r104, %r99, %r100, 8;
	mov.b64 	%rd157, {%r104, %r103};
	shr.u64 	%rd158, %rd120, 7;
	xor.b64  	%rd159, %rd156, %rd158;
	xor.b64  	%rd29, %rd159, %rd157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r105,%dummy}, %rd28;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r106}, %rd28;
	}
	shf.r.wrap.b32 	%r107, %r106, %r105, 19;
	shf.r.wrap.b32 	%r108, %r105, %r106, 19;
	mov.b64 	%rd160, {%r108, %r107};
	shf.l.wrap.b32 	%r109, %r105, %r106, 3;
	shf.l.wrap.b32 	%r110, %r106, %r105, 3;
	mov.b64 	%rd161, {%r110, %r109};
	shr.u64 	%rd162, %rd28, 6;
	xor.b64  	%rd163, %rd160, %rd162;
	xor.b64  	%rd164, %rd163, %rd161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r111,%dummy}, %rd3;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r112}, %rd3;
	}
	shf.r.wrap.b32 	%r113, %r112, %r111, 1;
	shf.r.wrap.b32 	%r114, %r111, %r112, 1;
	mov.b64 	%rd165, {%r114, %r113};
	shf.r.wrap.b32 	%r115, %r112, %r111, 8;
	shf.r.wrap.b32 	%r116, %r111, %r112, 8;
	mov.b64 	%rd166, {%r116, %r115};
	shr.u64 	%rd167, %rd3, 7;
	xor.b64  	%rd168, %rd165, %rd167;
	xor.b64  	%rd169, %rd168, %rd166;
	add.s64 	%rd170, %rd120, %rd164;
	add.s64 	%rd30, %rd170, %rd169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r117,%dummy}, %rd4;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r118}, %rd4;
	}
	shf.r.wrap.b32 	%r119, %r118, %r117, 1;
	shf.r.wrap.b32 	%r120, %r117, %r118, 1;
	mov.b64 	%rd171, {%r120, %r119};
	shf.r.wrap.b32 	%r121, %r118, %r117, 8;
	shf.r.wrap.b32 	%r122, %r117, %r118, 8;
	mov.b64 	%rd172, {%r122, %r121};
	shr.u64 	%rd173, %rd4, 7;
	xor.b64  	%rd174, %rd171, %rd173;
	xor.b64  	%rd31, %rd174, %rd172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r123,%dummy}, %rd30;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r124}, %rd30;
	}
	shf.r.wrap.b32 	%r125, %r124, %r123, 19;
	shf.r.wrap.b32 	%r126, %r123, %r124, 19;
	mov.b64 	%rd175, {%r126, %r125};
	shf.l.wrap.b32 	%r127, %r123, %r124, 3;
	shf.l.wrap.b32 	%r128, %r124, %r123, 3;
	mov.b64 	%rd176, {%r128, %r127};
	shr.u64 	%rd177, %rd30, 6;
	xor.b64  	%rd178, %rd175, %rd177;
	xor.b64  	%rd179, %rd178, %rd176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r129,%dummy}, %rd5;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd5;
	}
	shf.r.wrap.b32 	%r131, %r130, %r129, 1;
	shf.r.wrap.b32 	%r132, %r129, %r130, 1;
	mov.b64 	%rd180, {%r132, %r131};
	shf.r.wrap.b32 	%r133, %r130, %r129, 8;
	shf.r.wrap.b32 	%r134, %r129, %r130, 8;
	mov.b64 	%rd181, {%r134, %r133};
	shr.u64 	%rd182, %rd5, 7;
	xor.b64  	%rd183, %rd180, %rd182;
	xor.b64  	%rd184, %rd183, %rd181;
	add.s64 	%rd185, %rd4, %rd179;
	add.s64 	%rd32, %rd185, %rd184;
	shf.r.wrap.b32 	%r135, %r75, %r76, 8;
	shf.r.wrap.b32 	%r136, %r76, %r75, 8;
	mov.b64 	%rd186, {%r136, %r135};
	shf.r.wrap.b32 	%r137, %r75, %r76, 1;
	shf.r.wrap.b32 	%r138, %r76, %r75, 1;
	mov.b64 	%rd187, {%r138, %r137};
	xor.b64  	%rd33, %rd187, %rd186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r139,%dummy}, %rd32;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd32;
	}
	shf.r.wrap.b32 	%r141, %r140, %r139, 19;
	shf.r.wrap.b32 	%r142, %r139, %r140, 19;
	mov.b64 	%rd188, {%r142, %r141};
	shf.l.wrap.b32 	%r143, %r139, %r140, 3;
	shf.l.wrap.b32 	%r144, %r140, %r139, 3;
	mov.b64 	%rd189, {%r144, %r143};
	shr.u64 	%rd190, %rd32, 6;
	xor.b64  	%rd191, %rd188, %rd190;
	xor.b64  	%rd35, %rd191, %rd189;
	shf.r.wrap.b32 	%r145, %r88, %r87, 1;
	shf.r.wrap.b32 	%r146, %r87, %r88, 1;
	mov.b64 	%rd192, {%r146, %r145};
	shf.r.wrap.b32 	%r147, %r88, %r87, 8;
	shf.r.wrap.b32 	%r148, %r87, %r88, 8;
	mov.b64 	%rd193, {%r148, %r147};
	shr.u64 	%rd194, %rd6, 7;
	xor.b64  	%rd195, %rd192, %rd194;
	xor.b64  	%rd36, %rd195, %rd193;
	shf.r.wrap.b32 	%r149, %r106, %r105, 1;
	shf.r.wrap.b32 	%r150, %r105, %r106, 1;
	mov.b64 	%rd196, {%r150, %r149};
	shf.r.wrap.b32 	%r151, %r106, %r105, 8;
	shf.r.wrap.b32 	%r152, %r105, %r106, 8;
	mov.b64 	%rd197, {%r152, %r151};
	shr.u64 	%rd198, %rd28, 7;
	xor.b64  	%rd199, %rd196, %rd198;
	xor.b64  	%rd53, %rd199, %rd197;
	shf.r.wrap.b32 	%r153, %r124, %r123, 1;
	shf.r.wrap.b32 	%r154, %r123, %r124, 1;
	mov.b64 	%rd200, {%r154, %r153};
	shf.r.wrap.b32 	%r155, %r124, %r123, 8;
	shf.r.wrap.b32 	%r156, %r123, %r124, 8;
	mov.b64 	%rd201, {%r156, %r155};
	shr.u64 	%rd202, %rd30, 7;
	xor.b64  	%rd203, %rd200, %rd202;
	xor.b64  	%rd54, %rd203, %rd201;
	shf.r.wrap.b32 	%r157, %r140, %r139, 1;
	shf.r.wrap.b32 	%r158, %r139, %r140, 1;
	mov.b64 	%rd204, {%r158, %r157};
	shf.r.wrap.b32 	%r159, %r140, %r139, 8;
	shf.r.wrap.b32 	%r160, %r139, %r140, 8;
	mov.b64 	%rd205, {%r160, %r159};
	shr.u64 	%rd206, %rd32, 7;
	xor.b64  	%rd207, %rd204, %rd206;
	xor.b64  	%rd55, %rd207, %rd205;
	mov.u32 	%r1956, 0;

BB3_3:
	ld.param.u64 	%rd2790, [m01700_m16_param_6];
	ld.const.u64 	%rd2789, [k_sha512+608];
	ld.const.u64 	%rd2788, [k_sha512+600];
	ld.const.u64 	%rd2787, [k_sha512+592];
	ld.const.u64 	%rd2786, [k_sha512+584];
	ld.const.u64 	%rd2785, [k_sha512+576];
	ld.const.u64 	%rd2784, [k_sha512+568];
	ld.const.u64 	%rd2783, [k_sha512+560];
	ld.const.u64 	%rd2782, [k_sha512+552];
	ld.const.u64 	%rd2781, [k_sha512+544];
	ld.const.u64 	%rd2780, [k_sha512+536];
	ld.const.u64 	%rd2779, [k_sha512+528];
	ld.const.u64 	%rd2778, [k_sha512+520];
	ld.const.u64 	%rd2777, [k_sha512+512];
	ld.const.u64 	%rd2776, [k_sha512+504];
	ld.const.u64 	%rd2775, [k_sha512+496];
	ld.const.u64 	%rd2774, [k_sha512+488];
	ld.const.u64 	%rd2773, [k_sha512+480];
	ld.const.u64 	%rd2772, [k_sha512+472];
	ld.const.u64 	%rd2771, [k_sha512+464];
	ld.const.u64 	%rd2770, [k_sha512+456];
	ld.const.u64 	%rd2769, [k_sha512+448];
	ld.const.u64 	%rd2768, [k_sha512+440];
	ld.const.u64 	%rd2767, [k_sha512+432];
	ld.const.u64 	%rd2764, [k_sha512+424];
	ld.const.u64 	%rd2763, [k_sha512+416];
	ld.const.u64 	%rd2762, [k_sha512+408];
	ld.const.u64 	%rd2761, [k_sha512+400];
	ld.const.u64 	%rd2760, [k_sha512+392];
	ld.const.u64 	%rd2759, [k_sha512+384];
	ld.const.u64 	%rd2758, [k_sha512+376];
	ld.const.u64 	%rd2757, [k_sha512+368];
	ld.const.u64 	%rd2756, [k_sha512+360];
	ld.const.u64 	%rd2755, [k_sha512+352];
	ld.const.u64 	%rd2754, [k_sha512+344];
	ld.const.u64 	%rd2753, [k_sha512+336];
	ld.const.u64 	%rd2752, [k_sha512+328];
	ld.const.u64 	%rd2751, [k_sha512+320];
	ld.const.u64 	%rd2750, [k_sha512+312];
	ld.const.u64 	%rd2749, [k_sha512+304];
	ld.const.u64 	%rd2748, [k_sha512+296];
	ld.const.u64 	%rd2747, [k_sha512+288];
	ld.const.u64 	%rd2746, [k_sha512+280];
	ld.const.u64 	%rd2745, [k_sha512+272];
	ld.const.u64 	%rd2744, [k_sha512+264];
	ld.const.u64 	%rd2743, [k_sha512+256];
	ld.const.u64 	%rd2742, [k_sha512+248];
	ld.const.u64 	%rd2741, [k_sha512+240];
	ld.const.u64 	%rd2740, [k_sha512+232];
	ld.const.u64 	%rd2739, [k_sha512+224];
	ld.const.u64 	%rd2738, [k_sha512+216];
	ld.const.u64 	%rd2737, [k_sha512+208];
	ld.const.u64 	%rd2736, [k_sha512+200];
	ld.const.u64 	%rd2735, [k_sha512+192];
	ld.const.u64 	%rd2734, [k_sha512+184];
	ld.const.u64 	%rd2733, [k_sha512+176];
	ld.const.u64 	%rd2732, [k_sha512+168];
	ld.const.u64 	%rd2731, [k_sha512+160];
	ld.const.u64 	%rd2730, [k_sha512+152];
	ld.const.u64 	%rd2729, [k_sha512+144];
	ld.const.u64 	%rd2728, [k_sha512+136];
	ld.const.u64 	%rd2727, [k_sha512+128];
	add.s64 	%rd2726, %rd5, %rd6;
	ld.const.u64 	%rd2725, [k_sha512+120];
	ld.const.u64 	%rd2724, [k_sha512+112];
	ld.const.u64 	%rd2723, [k_sha512+104];
	ld.const.u64 	%rd2722, [k_sha512+96];
	ld.const.u64 	%rd2721, [k_sha512+88];
	ld.const.u64 	%rd2720, [k_sha512+80];
	ld.const.u64 	%rd2719, [k_sha512+72];
	ld.const.u64 	%rd2718, [k_sha512+64];
	ld.const.u64 	%rd2717, [k_sha512+56];
	ld.const.u64 	%rd2716, [k_sha512+48];
	ld.const.u64 	%rd2715, [k_sha512+40];
	ld.const.u64 	%rd2714, [k_sha512+32];
	ld.param.u64 	%rd2713, [m01700_m16_param_3];
	mul.wide.u32 	%rd208, %r1956, 4;
	add.s64 	%rd209, %rd2713, %rd208;
	ld.const.u32 	%r161, [%rd209];
	or.b32  	%r162, %r161, %r2;
	mov.b64	%rd210, {%r3, %r162};
	add.s64 	%rd211, %rd8, %rd210;
	add.s64 	%rd212, %rd211, %rd7;
	add.s64 	%rd213, %rd212, -6534734903238641935;
	add.s64 	%rd214, %rd212, %rd9;
	add.s64 	%rd215, %rd214, 4210837510808201515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r163,%dummy}, %rd213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r164}, %rd213;
	}
	shf.r.wrap.b32 	%r165, %r164, %r163, 14;
	shf.r.wrap.b32 	%r166, %r163, %r164, 14;
	mov.b64 	%rd216, {%r166, %r165};
	shf.r.wrap.b32 	%r167, %r164, %r163, 18;
	shf.r.wrap.b32 	%r168, %r163, %r164, 18;
	mov.b64 	%rd217, {%r168, %r167};
	xor.b64  	%rd218, %rd217, %rd216;
	shf.l.wrap.b32 	%r169, %r163, %r164, 23;
	shf.l.wrap.b32 	%r170, %r164, %r163, 23;
	mov.b64 	%rd219, {%r170, %r169};
	xor.b64  	%rd220, %rd218, %rd219;
	and.b64  	%rd221, %rd213, -3887949035690463538;
	xor.b64  	%rd222, %rd221, -7276294671716946913;
	add.s64 	%rd223, %rd10, %rd222;
	add.s64 	%rd224, %rd223, %rd220;
	add.s64 	%rd225, %rd224, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r171,%dummy}, %rd215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r172}, %rd215;
	}
	shf.r.wrap.b32 	%r173, %r172, %r171, 28;
	shf.r.wrap.b32 	%r174, %r171, %r172, 28;
	mov.b64 	%rd226, {%r174, %r173};
	shf.l.wrap.b32 	%r175, %r171, %r172, 30;
	shf.l.wrap.b32 	%r176, %r172, %r171, 30;
	mov.b64 	%rd227, {%r176, %r175};
	xor.b64  	%rd228, %rd227, %rd226;
	shf.l.wrap.b32 	%r177, %r171, %r172, 25;
	shf.l.wrap.b32 	%r178, %r172, %r171, 25;
	mov.b64 	%rd229, {%r178, %r177};
	xor.b64  	%rd230, %rd228, %rd229;
	xor.b64  	%rd231, %rd215, -4942790177534073029;
	xor.b64  	%rd232, %rd215, 7640891576956012808;
	and.b64  	%rd233, %rd232, %rd231;
	xor.b64  	%rd234, %rd233, %rd215;
	add.s64 	%rd235, %rd224, %rd234;
	add.s64 	%rd236, %rd235, %rd230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r179,%dummy}, %rd225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r180}, %rd225;
	}
	shf.r.wrap.b32 	%r181, %r180, %r179, 14;
	shf.r.wrap.b32 	%r182, %r179, %r180, 14;
	mov.b64 	%rd237, {%r182, %r181};
	shf.r.wrap.b32 	%r183, %r180, %r179, 18;
	shf.r.wrap.b32 	%r184, %r179, %r180, 18;
	mov.b64 	%rd238, {%r184, %r183};
	xor.b64  	%rd239, %rd238, %rd237;
	shf.l.wrap.b32 	%r185, %r179, %r180, 23;
	shf.l.wrap.b32 	%r186, %r180, %r179, 23;
	mov.b64 	%rd240, {%r186, %r185};
	xor.b64  	%rd241, %rd239, %rd240;
	xor.b64  	%rd242, %rd213, 5840696475078001361;
	and.b64  	%rd243, %rd225, %rd242;
	xor.b64  	%rd244, %rd243, 5840696475078001361;
	add.s64 	%rd245, %rd11, %rd244;
	add.s64 	%rd246, %rd245, %rd241;
	add.s64 	%rd247, %rd246, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r187,%dummy}, %rd236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r188}, %rd236;
	}
	shf.r.wrap.b32 	%r189, %r188, %r187, 28;
	shf.r.wrap.b32 	%r190, %r187, %r188, 28;
	mov.b64 	%rd248, {%r190, %r189};
	shf.l.wrap.b32 	%r191, %r187, %r188, 30;
	shf.l.wrap.b32 	%r192, %r188, %r187, 30;
	mov.b64 	%rd249, {%r192, %r191};
	xor.b64  	%rd250, %rd249, %rd248;
	shf.l.wrap.b32 	%r193, %r187, %r188, 25;
	shf.l.wrap.b32 	%r194, %r188, %r187, 25;
	mov.b64 	%rd251, {%r194, %r193};
	xor.b64  	%rd252, %rd250, %rd251;
	xor.b64  	%rd253, %rd236, 7640891576956012808;
	xor.b64  	%rd254, %rd236, %rd215;
	and.b64  	%rd255, %rd254, %rd253;
	xor.b64  	%rd256, %rd255, %rd236;
	add.s64 	%rd257, %rd246, %rd256;
	add.s64 	%rd258, %rd257, %rd252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r195,%dummy}, %rd247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r196}, %rd247;
	}
	shf.r.wrap.b32 	%r197, %r196, %r195, 14;
	shf.r.wrap.b32 	%r198, %r195, %r196, 14;
	mov.b64 	%rd259, {%r198, %r197};
	shf.r.wrap.b32 	%r199, %r196, %r195, 18;
	shf.r.wrap.b32 	%r200, %r195, %r196, 18;
	mov.b64 	%rd260, {%r200, %r199};
	xor.b64  	%rd261, %rd260, %rd259;
	shf.l.wrap.b32 	%r201, %r195, %r196, 23;
	shf.l.wrap.b32 	%r202, %r196, %r195, 23;
	mov.b64 	%rd262, {%r202, %r201};
	xor.b64  	%rd263, %rd261, %rd262;
	xor.b64  	%rd264, %rd225, %rd213;
	and.b64  	%rd265, %rd247, %rd264;
	xor.b64  	%rd266, %rd265, %rd213;
	add.s64 	%rd267, %rd12, %rd266;
	add.s64 	%rd268, %rd267, %rd263;
	add.s64 	%rd269, %rd268, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r203,%dummy}, %rd258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r204}, %rd258;
	}
	shf.r.wrap.b32 	%r205, %r204, %r203, 28;
	shf.r.wrap.b32 	%r206, %r203, %r204, 28;
	mov.b64 	%rd270, {%r206, %r205};
	shf.l.wrap.b32 	%r207, %r203, %r204, 30;
	shf.l.wrap.b32 	%r208, %r204, %r203, 30;
	mov.b64 	%rd271, {%r208, %r207};
	xor.b64  	%rd272, %rd271, %rd270;
	shf.l.wrap.b32 	%r209, %r203, %r204, 25;
	shf.l.wrap.b32 	%r210, %r204, %r203, 25;
	mov.b64 	%rd273, {%r210, %r209};
	xor.b64  	%rd274, %rd272, %rd273;
	xor.b64  	%rd275, %rd258, %rd215;
	xor.b64  	%rd276, %rd258, %rd236;
	and.b64  	%rd277, %rd276, %rd275;
	xor.b64  	%rd278, %rd277, %rd258;
	add.s64 	%rd279, %rd268, %rd278;
	add.s64 	%rd280, %rd279, %rd274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r212}, %rd269;
	}
	shf.r.wrap.b32 	%r213, %r212, %r211, 14;
	shf.r.wrap.b32 	%r214, %r211, %r212, 14;
	mov.b64 	%rd281, {%r214, %r213};
	shf.r.wrap.b32 	%r215, %r212, %r211, 18;
	shf.r.wrap.b32 	%r216, %r211, %r212, 18;
	mov.b64 	%rd282, {%r216, %r215};
	xor.b64  	%rd283, %rd282, %rd281;
	shf.l.wrap.b32 	%r217, %r211, %r212, 23;
	shf.l.wrap.b32 	%r218, %r212, %r211, 23;
	mov.b64 	%rd284, {%r218, %r217};
	xor.b64  	%rd285, %rd283, %rd284;
	xor.b64  	%rd286, %rd247, %rd225;
	and.b64  	%rd287, %rd269, %rd286;
	xor.b64  	%rd288, %rd287, %rd225;
	add.s64 	%rd289, %rd213, %rd3;
	add.s64 	%rd290, %rd289, %rd2714;
	add.s64 	%rd291, %rd290, %rd288;
	add.s64 	%rd292, %rd291, %rd285;
	add.s64 	%rd293, %rd292, %rd215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r219,%dummy}, %rd280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r220}, %rd280;
	}
	shf.r.wrap.b32 	%r221, %r220, %r219, 28;
	shf.r.wrap.b32 	%r222, %r219, %r220, 28;
	mov.b64 	%rd294, {%r222, %r221};
	shf.l.wrap.b32 	%r223, %r219, %r220, 30;
	shf.l.wrap.b32 	%r224, %r220, %r219, 30;
	mov.b64 	%rd295, {%r224, %r223};
	xor.b64  	%rd296, %rd295, %rd294;
	shf.l.wrap.b32 	%r225, %r219, %r220, 25;
	shf.l.wrap.b32 	%r226, %r220, %r219, 25;
	mov.b64 	%rd297, {%r226, %r225};
	xor.b64  	%rd298, %rd296, %rd297;
	xor.b64  	%rd299, %rd280, %rd236;
	xor.b64  	%rd300, %rd280, %rd258;
	and.b64  	%rd301, %rd300, %rd299;
	xor.b64  	%rd302, %rd301, %rd280;
	add.s64 	%rd303, %rd292, %rd302;
	add.s64 	%rd304, %rd303, %rd298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r227,%dummy}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r228}, %rd293;
	}
	shf.r.wrap.b32 	%r229, %r228, %r227, 14;
	shf.r.wrap.b32 	%r230, %r227, %r228, 14;
	mov.b64 	%rd305, {%r230, %r229};
	shf.r.wrap.b32 	%r231, %r228, %r227, 18;
	shf.r.wrap.b32 	%r232, %r227, %r228, 18;
	mov.b64 	%rd306, {%r232, %r231};
	xor.b64  	%rd307, %rd306, %rd305;
	shf.l.wrap.b32 	%r233, %r227, %r228, 23;
	shf.l.wrap.b32 	%r234, %r228, %r227, 23;
	mov.b64 	%rd308, {%r234, %r233};
	xor.b64  	%rd309, %rd307, %rd308;
	xor.b64  	%rd310, %rd269, %rd247;
	and.b64  	%rd311, %rd293, %rd310;
	xor.b64  	%rd312, %rd311, %rd247;
	add.s64 	%rd313, %rd225, %rd4;
	add.s64 	%rd314, %rd313, %rd2715;
	add.s64 	%rd315, %rd314, %rd312;
	add.s64 	%rd316, %rd315, %rd309;
	add.s64 	%rd317, %rd316, %rd236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r235,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r236}, %rd304;
	}
	shf.r.wrap.b32 	%r237, %r236, %r235, 28;
	shf.r.wrap.b32 	%r238, %r235, %r236, 28;
	mov.b64 	%rd318, {%r238, %r237};
	shf.l.wrap.b32 	%r239, %r235, %r236, 30;
	shf.l.wrap.b32 	%r240, %r236, %r235, 30;
	mov.b64 	%rd319, {%r240, %r239};
	xor.b64  	%rd320, %rd319, %rd318;
	shf.l.wrap.b32 	%r241, %r235, %r236, 25;
	shf.l.wrap.b32 	%r242, %r236, %r235, 25;
	mov.b64 	%rd321, {%r242, %r241};
	xor.b64  	%rd322, %rd320, %rd321;
	xor.b64  	%rd323, %rd304, %rd258;
	xor.b64  	%rd324, %rd304, %rd280;
	and.b64  	%rd325, %rd324, %rd323;
	xor.b64  	%rd326, %rd325, %rd304;
	add.s64 	%rd327, %rd316, %rd326;
	add.s64 	%rd328, %rd327, %rd322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r243,%dummy}, %rd317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r244}, %rd317;
	}
	shf.r.wrap.b32 	%r245, %r244, %r243, 14;
	shf.r.wrap.b32 	%r246, %r243, %r244, 14;
	mov.b64 	%rd329, {%r246, %r245};
	shf.r.wrap.b32 	%r247, %r244, %r243, 18;
	shf.r.wrap.b32 	%r248, %r243, %r244, 18;
	mov.b64 	%rd330, {%r248, %r247};
	xor.b64  	%rd331, %rd330, %rd329;
	shf.l.wrap.b32 	%r249, %r243, %r244, 23;
	shf.l.wrap.b32 	%r250, %r244, %r243, 23;
	mov.b64 	%rd332, {%r250, %r249};
	xor.b64  	%rd333, %rd331, %rd332;
	xor.b64  	%rd334, %rd293, %rd269;
	and.b64  	%rd335, %rd317, %rd334;
	xor.b64  	%rd336, %rd335, %rd269;
	add.s64 	%rd337, %rd247, %rd5;
	add.s64 	%rd338, %rd337, %rd2716;
	add.s64 	%rd339, %rd338, %rd336;
	add.s64 	%rd340, %rd339, %rd333;
	add.s64 	%rd341, %rd340, %rd258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r251,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r252}, %rd328;
	}
	shf.r.wrap.b32 	%r253, %r252, %r251, 28;
	shf.r.wrap.b32 	%r254, %r251, %r252, 28;
	mov.b64 	%rd342, {%r254, %r253};
	shf.l.wrap.b32 	%r255, %r251, %r252, 30;
	shf.l.wrap.b32 	%r256, %r252, %r251, 30;
	mov.b64 	%rd343, {%r256, %r255};
	xor.b64  	%rd344, %rd343, %rd342;
	shf.l.wrap.b32 	%r257, %r251, %r252, 25;
	shf.l.wrap.b32 	%r258, %r252, %r251, 25;
	mov.b64 	%rd345, {%r258, %r257};
	xor.b64  	%rd346, %rd344, %rd345;
	xor.b64  	%rd347, %rd328, %rd280;
	xor.b64  	%rd348, %rd328, %rd304;
	and.b64  	%rd349, %rd348, %rd347;
	xor.b64  	%rd350, %rd349, %rd328;
	add.s64 	%rd351, %rd340, %rd350;
	add.s64 	%rd352, %rd351, %rd346;
	add.s64 	%rd353, %rd2717, %rd269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r259,%dummy}, %rd341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r260}, %rd341;
	}
	shf.r.wrap.b32 	%r261, %r260, %r259, 14;
	shf.r.wrap.b32 	%r262, %r259, %r260, 14;
	mov.b64 	%rd354, {%r262, %r261};
	shf.r.wrap.b32 	%r263, %r260, %r259, 18;
	shf.r.wrap.b32 	%r264, %r259, %r260, 18;
	mov.b64 	%rd355, {%r264, %r263};
	xor.b64  	%rd356, %rd355, %rd354;
	shf.l.wrap.b32 	%r265, %r259, %r260, 23;
	shf.l.wrap.b32 	%r266, %r260, %r259, 23;
	mov.b64 	%rd357, {%r266, %r265};
	xor.b64  	%rd358, %rd356, %rd357;
	xor.b64  	%rd359, %rd317, %rd293;
	and.b64  	%rd360, %rd341, %rd359;
	xor.b64  	%rd361, %rd360, %rd293;
	add.s64 	%rd362, %rd353, %rd361;
	add.s64 	%rd363, %rd362, %rd358;
	add.s64 	%rd364, %rd363, %rd280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r267,%dummy}, %rd352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r268}, %rd352;
	}
	shf.r.wrap.b32 	%r269, %r268, %r267, 28;
	shf.r.wrap.b32 	%r270, %r267, %r268, 28;
	mov.b64 	%rd365, {%r270, %r269};
	shf.l.wrap.b32 	%r271, %r267, %r268, 30;
	shf.l.wrap.b32 	%r272, %r268, %r267, 30;
	mov.b64 	%rd366, {%r272, %r271};
	xor.b64  	%rd367, %rd366, %rd365;
	shf.l.wrap.b32 	%r273, %r267, %r268, 25;
	shf.l.wrap.b32 	%r274, %r268, %r267, 25;
	mov.b64 	%rd368, {%r274, %r273};
	xor.b64  	%rd369, %rd367, %rd368;
	xor.b64  	%rd370, %rd352, %rd304;
	xor.b64  	%rd371, %rd352, %rd328;
	and.b64  	%rd372, %rd371, %rd370;
	xor.b64  	%rd373, %rd372, %rd352;
	add.s64 	%rd374, %rd363, %rd373;
	add.s64 	%rd375, %rd374, %rd369;
	add.s64 	%rd376, %rd2718, %rd293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r275,%dummy}, %rd364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd364;
	}
	shf.r.wrap.b32 	%r277, %r276, %r275, 14;
	shf.r.wrap.b32 	%r278, %r275, %r276, 14;
	mov.b64 	%rd377, {%r278, %r277};
	shf.r.wrap.b32 	%r279, %r276, %r275, 18;
	shf.r.wrap.b32 	%r280, %r275, %r276, 18;
	mov.b64 	%rd378, {%r280, %r279};
	xor.b64  	%rd379, %rd378, %rd377;
	shf.l.wrap.b32 	%r281, %r275, %r276, 23;
	shf.l.wrap.b32 	%r282, %r276, %r275, 23;
	mov.b64 	%rd380, {%r282, %r281};
	xor.b64  	%rd381, %rd379, %rd380;
	xor.b64  	%rd382, %rd341, %rd317;
	and.b64  	%rd383, %rd364, %rd382;
	xor.b64  	%rd384, %rd383, %rd317;
	add.s64 	%rd385, %rd376, %rd384;
	add.s64 	%rd386, %rd385, %rd381;
	add.s64 	%rd387, %rd386, %rd304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r284}, %rd375;
	}
	shf.r.wrap.b32 	%r285, %r284, %r283, 28;
	shf.r.wrap.b32 	%r286, %r283, %r284, 28;
	mov.b64 	%rd388, {%r286, %r285};
	shf.l.wrap.b32 	%r287, %r283, %r284, 30;
	shf.l.wrap.b32 	%r288, %r284, %r283, 30;
	mov.b64 	%rd389, {%r288, %r287};
	xor.b64  	%rd390, %rd389, %rd388;
	shf.l.wrap.b32 	%r289, %r283, %r284, 25;
	shf.l.wrap.b32 	%r290, %r284, %r283, 25;
	mov.b64 	%rd391, {%r290, %r289};
	xor.b64  	%rd392, %rd390, %rd391;
	xor.b64  	%rd393, %rd375, %rd328;
	xor.b64  	%rd394, %rd375, %rd352;
	and.b64  	%rd395, %rd394, %rd393;
	xor.b64  	%rd396, %rd395, %rd375;
	add.s64 	%rd397, %rd386, %rd396;
	add.s64 	%rd398, %rd397, %rd392;
	add.s64 	%rd399, %rd2719, %rd317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r291,%dummy}, %rd387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r292}, %rd387;
	}
	shf.r.wrap.b32 	%r293, %r292, %r291, 14;
	shf.r.wrap.b32 	%r294, %r291, %r292, 14;
	mov.b64 	%rd400, {%r294, %r293};
	shf.r.wrap.b32 	%r295, %r292, %r291, 18;
	shf.r.wrap.b32 	%r296, %r291, %r292, 18;
	mov.b64 	%rd401, {%r296, %r295};
	xor.b64  	%rd402, %rd401, %rd400;
	shf.l.wrap.b32 	%r297, %r291, %r292, 23;
	shf.l.wrap.b32 	%r298, %r292, %r291, 23;
	mov.b64 	%rd403, {%r298, %r297};
	xor.b64  	%rd404, %rd402, %rd403;
	xor.b64  	%rd405, %rd364, %rd341;
	and.b64  	%rd406, %rd387, %rd405;
	xor.b64  	%rd407, %rd406, %rd341;
	add.s64 	%rd408, %rd399, %rd407;
	add.s64 	%rd409, %rd408, %rd404;
	add.s64 	%rd410, %rd409, %rd328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd398;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 28;
	shf.r.wrap.b32 	%r302, %r299, %r300, 28;
	mov.b64 	%rd411, {%r302, %r301};
	shf.l.wrap.b32 	%r303, %r299, %r300, 30;
	shf.l.wrap.b32 	%r304, %r300, %r299, 30;
	mov.b64 	%rd412, {%r304, %r303};
	xor.b64  	%rd413, %rd412, %rd411;
	shf.l.wrap.b32 	%r305, %r299, %r300, 25;
	shf.l.wrap.b32 	%r306, %r300, %r299, 25;
	mov.b64 	%rd414, {%r306, %r305};
	xor.b64  	%rd415, %rd413, %rd414;
	xor.b64  	%rd416, %rd398, %rd352;
	xor.b64  	%rd417, %rd398, %rd375;
	and.b64  	%rd418, %rd417, %rd416;
	xor.b64  	%rd419, %rd418, %rd398;
	add.s64 	%rd420, %rd409, %rd419;
	add.s64 	%rd421, %rd420, %rd415;
	add.s64 	%rd422, %rd2720, %rd341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd410;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 14;
	shf.r.wrap.b32 	%r310, %r307, %r308, 14;
	mov.b64 	%rd423, {%r310, %r309};
	shf.r.wrap.b32 	%r311, %r308, %r307, 18;
	shf.r.wrap.b32 	%r312, %r307, %r308, 18;
	mov.b64 	%rd424, {%r312, %r311};
	xor.b64  	%rd425, %rd424, %rd423;
	shf.l.wrap.b32 	%r313, %r307, %r308, 23;
	shf.l.wrap.b32 	%r314, %r308, %r307, 23;
	mov.b64 	%rd426, {%r314, %r313};
	xor.b64  	%rd427, %rd425, %rd426;
	xor.b64  	%rd428, %rd387, %rd364;
	and.b64  	%rd429, %rd410, %rd428;
	xor.b64  	%rd430, %rd429, %rd364;
	add.s64 	%rd431, %rd422, %rd430;
	add.s64 	%rd432, %rd431, %rd427;
	add.s64 	%rd433, %rd432, %rd352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r315,%dummy}, %rd421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd421;
	}
	shf.r.wrap.b32 	%r317, %r316, %r315, 28;
	shf.r.wrap.b32 	%r318, %r315, %r316, 28;
	mov.b64 	%rd434, {%r318, %r317};
	shf.l.wrap.b32 	%r319, %r315, %r316, 30;
	shf.l.wrap.b32 	%r320, %r316, %r315, 30;
	mov.b64 	%rd435, {%r320, %r319};
	xor.b64  	%rd436, %rd435, %rd434;
	shf.l.wrap.b32 	%r321, %r315, %r316, 25;
	shf.l.wrap.b32 	%r322, %r316, %r315, 25;
	mov.b64 	%rd437, {%r322, %r321};
	xor.b64  	%rd438, %rd436, %rd437;
	xor.b64  	%rd439, %rd421, %rd375;
	xor.b64  	%rd440, %rd421, %rd398;
	and.b64  	%rd441, %rd440, %rd439;
	xor.b64  	%rd442, %rd441, %rd421;
	add.s64 	%rd443, %rd432, %rd442;
	add.s64 	%rd444, %rd443, %rd438;
	add.s64 	%rd445, %rd2721, %rd364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd433;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 14;
	shf.r.wrap.b32 	%r326, %r323, %r324, 14;
	mov.b64 	%rd446, {%r326, %r325};
	shf.r.wrap.b32 	%r327, %r324, %r323, 18;
	shf.r.wrap.b32 	%r328, %r323, %r324, 18;
	mov.b64 	%rd447, {%r328, %r327};
	xor.b64  	%rd448, %rd447, %rd446;
	shf.l.wrap.b32 	%r329, %r323, %r324, 23;
	shf.l.wrap.b32 	%r330, %r324, %r323, 23;
	mov.b64 	%rd449, {%r330, %r329};
	xor.b64  	%rd450, %rd448, %rd449;
	xor.b64  	%rd451, %rd410, %rd387;
	and.b64  	%rd452, %rd433, %rd451;
	xor.b64  	%rd453, %rd452, %rd387;
	add.s64 	%rd454, %rd445, %rd453;
	add.s64 	%rd455, %rd454, %rd450;
	add.s64 	%rd456, %rd455, %rd375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd444;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 28;
	shf.r.wrap.b32 	%r334, %r331, %r332, 28;
	mov.b64 	%rd457, {%r334, %r333};
	shf.l.wrap.b32 	%r335, %r331, %r332, 30;
	shf.l.wrap.b32 	%r336, %r332, %r331, 30;
	mov.b64 	%rd458, {%r336, %r335};
	xor.b64  	%rd459, %rd458, %rd457;
	shf.l.wrap.b32 	%r337, %r331, %r332, 25;
	shf.l.wrap.b32 	%r338, %r332, %r331, 25;
	mov.b64 	%rd460, {%r338, %r337};
	xor.b64  	%rd461, %rd459, %rd460;
	xor.b64  	%rd462, %rd444, %rd398;
	xor.b64  	%rd463, %rd444, %rd421;
	and.b64  	%rd464, %rd463, %rd462;
	xor.b64  	%rd465, %rd464, %rd444;
	add.s64 	%rd466, %rd455, %rd465;
	add.s64 	%rd467, %rd466, %rd461;
	add.s64 	%rd468, %rd2722, %rd387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r339,%dummy}, %rd456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r340}, %rd456;
	}
	shf.r.wrap.b32 	%r341, %r340, %r339, 14;
	shf.r.wrap.b32 	%r342, %r339, %r340, 14;
	mov.b64 	%rd469, {%r342, %r341};
	shf.r.wrap.b32 	%r343, %r340, %r339, 18;
	shf.r.wrap.b32 	%r344, %r339, %r340, 18;
	mov.b64 	%rd470, {%r344, %r343};
	xor.b64  	%rd471, %rd470, %rd469;
	shf.l.wrap.b32 	%r345, %r339, %r340, 23;
	shf.l.wrap.b32 	%r346, %r340, %r339, 23;
	mov.b64 	%rd472, {%r346, %r345};
	xor.b64  	%rd473, %rd471, %rd472;
	xor.b64  	%rd474, %rd433, %rd410;
	and.b64  	%rd475, %rd456, %rd474;
	xor.b64  	%rd476, %rd475, %rd410;
	add.s64 	%rd477, %rd468, %rd476;
	add.s64 	%rd478, %rd477, %rd473;
	add.s64 	%rd479, %rd478, %rd398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd467;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 28;
	shf.r.wrap.b32 	%r350, %r347, %r348, 28;
	mov.b64 	%rd480, {%r350, %r349};
	shf.l.wrap.b32 	%r351, %r347, %r348, 30;
	shf.l.wrap.b32 	%r352, %r348, %r347, 30;
	mov.b64 	%rd481, {%r352, %r351};
	xor.b64  	%rd482, %rd481, %rd480;
	shf.l.wrap.b32 	%r353, %r347, %r348, 25;
	shf.l.wrap.b32 	%r354, %r348, %r347, 25;
	mov.b64 	%rd483, {%r354, %r353};
	xor.b64  	%rd484, %rd482, %rd483;
	xor.b64  	%rd485, %rd467, %rd421;
	xor.b64  	%rd486, %rd467, %rd444;
	and.b64  	%rd487, %rd486, %rd485;
	xor.b64  	%rd488, %rd487, %rd467;
	add.s64 	%rd489, %rd478, %rd488;
	add.s64 	%rd490, %rd489, %rd484;
	add.s64 	%rd491, %rd2723, %rd410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd479;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 14;
	shf.r.wrap.b32 	%r358, %r355, %r356, 14;
	mov.b64 	%rd492, {%r358, %r357};
	shf.r.wrap.b32 	%r359, %r356, %r355, 18;
	shf.r.wrap.b32 	%r360, %r355, %r356, 18;
	mov.b64 	%rd493, {%r360, %r359};
	xor.b64  	%rd494, %rd493, %rd492;
	shf.l.wrap.b32 	%r361, %r355, %r356, 23;
	shf.l.wrap.b32 	%r362, %r356, %r355, 23;
	mov.b64 	%rd495, {%r362, %r361};
	xor.b64  	%rd496, %rd494, %rd495;
	xor.b64  	%rd497, %rd456, %rd433;
	and.b64  	%rd498, %rd479, %rd497;
	xor.b64  	%rd499, %rd498, %rd433;
	add.s64 	%rd500, %rd491, %rd499;
	add.s64 	%rd501, %rd500, %rd496;
	add.s64 	%rd502, %rd501, %rd421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r363,%dummy}, %rd490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r364}, %rd490;
	}
	shf.r.wrap.b32 	%r365, %r364, %r363, 28;
	shf.r.wrap.b32 	%r366, %r363, %r364, 28;
	mov.b64 	%rd503, {%r366, %r365};
	shf.l.wrap.b32 	%r367, %r363, %r364, 30;
	shf.l.wrap.b32 	%r368, %r364, %r363, 30;
	mov.b64 	%rd504, {%r368, %r367};
	xor.b64  	%rd505, %rd504, %rd503;
	shf.l.wrap.b32 	%r369, %r363, %r364, 25;
	shf.l.wrap.b32 	%r370, %r364, %r363, 25;
	mov.b64 	%rd506, {%r370, %r369};
	xor.b64  	%rd507, %rd505, %rd506;
	xor.b64  	%rd508, %rd490, %rd444;
	xor.b64  	%rd509, %rd490, %rd467;
	and.b64  	%rd510, %rd509, %rd508;
	xor.b64  	%rd511, %rd510, %rd490;
	add.s64 	%rd512, %rd501, %rd511;
	add.s64 	%rd513, %rd512, %rd507;
	add.s64 	%rd514, %rd2724, %rd433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd502;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 14;
	shf.r.wrap.b32 	%r374, %r371, %r372, 14;
	mov.b64 	%rd515, {%r374, %r373};
	shf.r.wrap.b32 	%r375, %r372, %r371, 18;
	shf.r.wrap.b32 	%r376, %r371, %r372, 18;
	mov.b64 	%rd516, {%r376, %r375};
	xor.b64  	%rd517, %rd516, %rd515;
	shf.l.wrap.b32 	%r377, %r371, %r372, 23;
	shf.l.wrap.b32 	%r378, %r372, %r371, 23;
	mov.b64 	%rd518, {%r378, %r377};
	xor.b64  	%rd519, %rd517, %rd518;
	xor.b64  	%rd520, %rd479, %rd456;
	and.b64  	%rd521, %rd502, %rd520;
	xor.b64  	%rd522, %rd521, %rd456;
	add.s64 	%rd523, %rd514, %rd522;
	add.s64 	%rd524, %rd523, %rd519;
	add.s64 	%rd525, %rd524, %rd444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd513;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 28;
	shf.r.wrap.b32 	%r382, %r379, %r380, 28;
	mov.b64 	%rd526, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 30;
	shf.l.wrap.b32 	%r384, %r380, %r379, 30;
	mov.b64 	%rd527, {%r384, %r383};
	xor.b64  	%rd528, %rd527, %rd526;
	shf.l.wrap.b32 	%r385, %r379, %r380, 25;
	shf.l.wrap.b32 	%r386, %r380, %r379, 25;
	mov.b64 	%rd529, {%r386, %r385};
	xor.b64  	%rd530, %rd528, %rd529;
	xor.b64  	%rd531, %rd513, %rd467;
	xor.b64  	%rd532, %rd513, %rd490;
	and.b64  	%rd533, %rd532, %rd531;
	xor.b64  	%rd534, %rd533, %rd513;
	add.s64 	%rd535, %rd524, %rd534;
	add.s64 	%rd536, %rd535, %rd530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd525;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 14;
	shf.r.wrap.b32 	%r390, %r387, %r388, 14;
	mov.b64 	%rd537, {%r390, %r389};
	shf.r.wrap.b32 	%r391, %r388, %r387, 18;
	shf.r.wrap.b32 	%r392, %r387, %r388, 18;
	mov.b64 	%rd538, {%r392, %r391};
	xor.b64  	%rd539, %rd538, %rd537;
	shf.l.wrap.b32 	%r393, %r387, %r388, 23;
	shf.l.wrap.b32 	%r394, %r388, %r387, 23;
	mov.b64 	%rd540, {%r394, %r393};
	xor.b64  	%rd541, %rd539, %rd540;
	xor.b64  	%rd542, %rd502, %rd479;
	and.b64  	%rd543, %rd525, %rd542;
	xor.b64  	%rd544, %rd543, %rd479;
	add.s64 	%rd545, %rd456, %rd6;
	add.s64 	%rd546, %rd545, %rd2725;
	add.s64 	%rd547, %rd546, %rd544;
	add.s64 	%rd548, %rd547, %rd541;
	add.s64 	%rd549, %rd548, %rd467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd536;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 28;
	shf.r.wrap.b32 	%r398, %r395, %r396, 28;
	mov.b64 	%rd550, {%r398, %r397};
	shf.l.wrap.b32 	%r399, %r395, %r396, 30;
	shf.l.wrap.b32 	%r400, %r396, %r395, 30;
	mov.b64 	%rd551, {%r400, %r399};
	xor.b64  	%rd552, %rd551, %rd550;
	shf.l.wrap.b32 	%r401, %r395, %r396, 25;
	shf.l.wrap.b32 	%r402, %r396, %r395, 25;
	mov.b64 	%rd553, {%r402, %r401};
	xor.b64  	%rd554, %rd552, %rd553;
	xor.b64  	%rd555, %rd536, %rd490;
	xor.b64  	%rd556, %rd536, %rd513;
	and.b64  	%rd557, %rd556, %rd555;
	xor.b64  	%rd558, %rd557, %rd536;
	add.s64 	%rd559, %rd548, %rd558;
	add.s64 	%rd560, %rd559, %rd554;
	add.s64 	%rd561, %rd210, %rd26;
	add.s64 	%rd562, %rd561, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd562;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 19;
	shf.r.wrap.b32 	%r406, %r403, %r404, 19;
	mov.b64 	%rd563, {%r406, %r405};
	shf.l.wrap.b32 	%r407, %r403, %r404, 3;
	shf.l.wrap.b32 	%r408, %r404, %r403, 3;
	mov.b64 	%rd564, {%r408, %r407};
	shr.u64 	%rd565, %rd562, 6;
	xor.b64  	%rd566, %rd563, %rd565;
	xor.b64  	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd2, %rd567;
	add.s64 	%rd569, %rd568, %rd29;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd569;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 19;
	shf.r.wrap.b32 	%r412, %r409, %r410, 19;
	mov.b64 	%rd570, {%r412, %r411};
	shf.l.wrap.b32 	%r413, %r409, %r410, 3;
	shf.l.wrap.b32 	%r414, %r410, %r409, 3;
	mov.b64 	%rd571, {%r414, %r413};
	shr.u64 	%rd572, %rd569, 6;
	xor.b64  	%rd573, %rd570, %rd572;
	xor.b64  	%rd574, %rd573, %rd571;
	add.s64 	%rd575, %rd3, %rd574;
	add.s64 	%rd576, %rd575, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd576;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 19;
	shf.r.wrap.b32 	%r418, %r415, %r416, 19;
	mov.b64 	%rd577, {%r418, %r417};
	shf.l.wrap.b32 	%r419, %r415, %r416, 3;
	shf.l.wrap.b32 	%r420, %r416, %r415, 3;
	mov.b64 	%rd578, {%r420, %r419};
	shr.u64 	%rd579, %rd576, 6;
	xor.b64  	%rd580, %rd577, %rd579;
	xor.b64  	%rd581, %rd580, %rd578;
	add.s64 	%rd582, %rd2726, %rd581;
	add.s64 	%rd583, %rd582, %rd33;
	add.s64 	%rd584, %rd562, %rd35;
	add.s64 	%rd585, %rd584, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd583;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 19;
	shf.r.wrap.b32 	%r424, %r421, %r422, 19;
	mov.b64 	%rd586, {%r424, %r423};
	shf.l.wrap.b32 	%r425, %r421, %r422, 3;
	shf.l.wrap.b32 	%r426, %r422, %r421, 3;
	mov.b64 	%rd587, {%r426, %r425};
	shr.u64 	%rd588, %rd583, 6;
	xor.b64  	%rd589, %rd586, %rd588;
	xor.b64  	%rd590, %rd589, %rd587;
	add.s64 	%rd591, %rd28, %rd590;
	add.s64 	%rd592, %rd591, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd585;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 19;
	shf.r.wrap.b32 	%r430, %r427, %r428, 19;
	mov.b64 	%rd593, {%r430, %r429};
	shf.l.wrap.b32 	%r431, %r427, %r428, 3;
	shf.l.wrap.b32 	%r432, %r428, %r427, 3;
	mov.b64 	%rd594, {%r432, %r431};
	shr.u64 	%rd595, %rd585, 6;
	xor.b64  	%rd596, %rd593, %rd595;
	xor.b64  	%rd597, %rd596, %rd594;
	add.s64 	%rd598, %rd569, %rd597;
	add.s64 	%rd599, %rd598, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r433,%dummy}, %rd592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r434}, %rd592;
	}
	shf.r.wrap.b32 	%r435, %r434, %r433, 19;
	shf.r.wrap.b32 	%r436, %r433, %r434, 19;
	mov.b64 	%rd600, {%r436, %r435};
	shf.l.wrap.b32 	%r437, %r433, %r434, 3;
	shf.l.wrap.b32 	%r438, %r434, %r433, 3;
	mov.b64 	%rd601, {%r438, %r437};
	shr.u64 	%rd602, %rd592, 6;
	xor.b64  	%rd603, %rd600, %rd602;
	xor.b64  	%rd604, %rd603, %rd601;
	add.s64 	%rd605, %rd30, %rd604;
	add.s64 	%rd606, %rd605, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r439,%dummy}, %rd599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd599;
	}
	shf.r.wrap.b32 	%r441, %r440, %r439, 19;
	shf.r.wrap.b32 	%r442, %r439, %r440, 19;
	mov.b64 	%rd607, {%r442, %r441};
	shf.l.wrap.b32 	%r443, %r439, %r440, 3;
	shf.l.wrap.b32 	%r444, %r440, %r439, 3;
	mov.b64 	%rd608, {%r444, %r443};
	shr.u64 	%rd609, %rd599, 6;
	xor.b64  	%rd610, %rd607, %rd609;
	xor.b64  	%rd611, %rd610, %rd608;
	add.s64 	%rd612, %rd576, %rd611;
	add.s64 	%rd613, %rd612, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r446}, %rd606;
	}
	shf.r.wrap.b32 	%r447, %r446, %r445, 19;
	shf.r.wrap.b32 	%r448, %r445, %r446, 19;
	mov.b64 	%rd614, {%r448, %r447};
	shf.l.wrap.b32 	%r449, %r445, %r446, 3;
	shf.l.wrap.b32 	%r450, %r446, %r445, 3;
	mov.b64 	%rd615, {%r450, %r449};
	shr.u64 	%rd616, %rd606, 6;
	xor.b64  	%rd617, %rd614, %rd616;
	xor.b64  	%rd618, %rd617, %rd615;
	add.s64 	%rd619, %rd32, %rd618;
	add.s64 	%rd620, %rd619, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd613;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 19;
	shf.r.wrap.b32 	%r454, %r451, %r452, 19;
	mov.b64 	%rd621, {%r454, %r453};
	shf.l.wrap.b32 	%r455, %r451, %r452, 3;
	shf.l.wrap.b32 	%r456, %r452, %r451, 3;
	mov.b64 	%rd622, {%r456, %r455};
	shr.u64 	%rd623, %rd613, 6;
	xor.b64  	%rd624, %rd621, %rd623;
	xor.b64  	%rd625, %rd624, %rd622;
	add.s64 	%rd626, %rd583, %rd625;
	add.s64 	%rd627, %rd626, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd620;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 19;
	shf.r.wrap.b32 	%r460, %r457, %r458, 19;
	mov.b64 	%rd628, {%r460, %r459};
	shf.l.wrap.b32 	%r461, %r457, %r458, 3;
	shf.l.wrap.b32 	%r462, %r458, %r457, 3;
	mov.b64 	%rd629, {%r462, %r461};
	shr.u64 	%rd630, %rd620, 6;
	xor.b64  	%rd631, %rd628, %rd630;
	xor.b64  	%rd632, %rd631, %rd629;
	add.s64 	%rd633, %rd585, %rd632;
	add.s64 	%rd634, %rd633, %rd36;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd627;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 19;
	shf.r.wrap.b32 	%r466, %r463, %r464, 19;
	mov.b64 	%rd635, {%r466, %r465};
	shf.l.wrap.b32 	%r467, %r463, %r464, 3;
	shf.l.wrap.b32 	%r468, %r464, %r463, 3;
	mov.b64 	%rd636, {%r468, %r467};
	shr.u64 	%rd637, %rd627, 6;
	xor.b64  	%rd638, %rd635, %rd637;
	xor.b64  	%rd639, %rd638, %rd636;
	shf.r.wrap.b32 	%r469, %r404, %r403, 1;
	shf.r.wrap.b32 	%r470, %r403, %r404, 1;
	mov.b64 	%rd640, {%r470, %r469};
	shf.r.wrap.b32 	%r471, %r404, %r403, 8;
	shf.r.wrap.b32 	%r472, %r403, %r404, 8;
	mov.b64 	%rd641, {%r472, %r471};
	shr.u64 	%rd642, %rd562, 7;
	xor.b64  	%rd643, %rd640, %rd642;
	xor.b64  	%rd644, %rd643, %rd641;
	add.s64 	%rd645, %rd592, %rd6;
	add.s64 	%rd646, %rd645, %rd639;
	add.s64 	%rd647, %rd646, %rd644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd549;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 14;
	shf.r.wrap.b32 	%r476, %r473, %r474, 14;
	mov.b64 	%rd648, {%r476, %r475};
	shf.r.wrap.b32 	%r477, %r474, %r473, 18;
	shf.r.wrap.b32 	%r478, %r473, %r474, 18;
	mov.b64 	%rd649, {%r478, %r477};
	xor.b64  	%rd650, %rd649, %rd648;
	shf.l.wrap.b32 	%r479, %r473, %r474, 23;
	shf.l.wrap.b32 	%r480, %r474, %r473, 23;
	mov.b64 	%rd651, {%r480, %r479};
	xor.b64  	%rd652, %rd650, %rd651;
	xor.b64  	%rd653, %rd502, %rd525;
	and.b64  	%rd654, %rd653, %rd549;
	xor.b64  	%rd655, %rd654, %rd502;
	add.s64 	%rd656, %rd655, %rd479;
	add.s64 	%rd657, %rd656, %rd562;
	add.s64 	%rd658, %rd657, %rd2727;
	add.s64 	%rd659, %rd658, %rd652;
	add.s64 	%rd660, %rd659, %rd490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd560;
	}
	shf.r.wrap.b32 	%r483, %r482, %r481, 28;
	shf.r.wrap.b32 	%r484, %r481, %r482, 28;
	mov.b64 	%rd661, {%r484, %r483};
	shf.l.wrap.b32 	%r485, %r481, %r482, 30;
	shf.l.wrap.b32 	%r486, %r482, %r481, 30;
	mov.b64 	%rd662, {%r486, %r485};
	xor.b64  	%rd663, %rd662, %rd661;
	shf.l.wrap.b32 	%r487, %r481, %r482, 25;
	shf.l.wrap.b32 	%r488, %r482, %r481, 25;
	mov.b64 	%rd664, {%r488, %r487};
	xor.b64  	%rd665, %rd663, %rd664;
	xor.b64  	%rd666, %rd560, %rd513;
	xor.b64  	%rd667, %rd560, %rd536;
	and.b64  	%rd668, %rd667, %rd666;
	xor.b64  	%rd669, %rd668, %rd560;
	add.s64 	%rd670, %rd659, %rd669;
	add.s64 	%rd671, %rd670, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r489,%dummy}, %rd660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r490}, %rd660;
	}
	shf.r.wrap.b32 	%r491, %r490, %r489, 14;
	shf.r.wrap.b32 	%r492, %r489, %r490, 14;
	mov.b64 	%rd672, {%r492, %r491};
	shf.r.wrap.b32 	%r493, %r490, %r489, 18;
	shf.r.wrap.b32 	%r494, %r489, %r490, 18;
	mov.b64 	%rd673, {%r494, %r493};
	xor.b64  	%rd674, %rd673, %rd672;
	shf.l.wrap.b32 	%r495, %r489, %r490, 23;
	shf.l.wrap.b32 	%r496, %r490, %r489, 23;
	mov.b64 	%rd675, {%r496, %r495};
	xor.b64  	%rd676, %rd674, %rd675;
	xor.b64  	%rd677, %rd525, %rd549;
	and.b64  	%rd678, %rd660, %rd677;
	xor.b64  	%rd679, %rd678, %rd525;
	add.s64 	%rd680, %rd28, %rd502;
	add.s64 	%rd681, %rd680, %rd2728;
	add.s64 	%rd682, %rd681, %rd679;
	add.s64 	%rd683, %rd682, %rd676;
	add.s64 	%rd684, %rd683, %rd513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r498}, %rd671;
	}
	shf.r.wrap.b32 	%r499, %r498, %r497, 28;
	shf.r.wrap.b32 	%r500, %r497, %r498, 28;
	mov.b64 	%rd685, {%r500, %r499};
	shf.l.wrap.b32 	%r501, %r497, %r498, 30;
	shf.l.wrap.b32 	%r502, %r498, %r497, 30;
	mov.b64 	%rd686, {%r502, %r501};
	xor.b64  	%rd687, %rd686, %rd685;
	shf.l.wrap.b32 	%r503, %r497, %r498, 25;
	shf.l.wrap.b32 	%r504, %r498, %r497, 25;
	mov.b64 	%rd688, {%r504, %r503};
	xor.b64  	%rd689, %rd687, %rd688;
	xor.b64  	%rd690, %rd671, %rd536;
	xor.b64  	%rd691, %rd671, %rd560;
	and.b64  	%rd692, %rd691, %rd690;
	xor.b64  	%rd693, %rd692, %rd671;
	add.s64 	%rd694, %rd683, %rd693;
	add.s64 	%rd695, %rd694, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd684;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 14;
	shf.r.wrap.b32 	%r508, %r505, %r506, 14;
	mov.b64 	%rd696, {%r508, %r507};
	shf.r.wrap.b32 	%r509, %r506, %r505, 18;
	shf.r.wrap.b32 	%r510, %r505, %r506, 18;
	mov.b64 	%rd697, {%r510, %r509};
	xor.b64  	%rd698, %rd697, %rd696;
	shf.l.wrap.b32 	%r511, %r505, %r506, 23;
	shf.l.wrap.b32 	%r512, %r506, %r505, 23;
	mov.b64 	%rd699, {%r512, %r511};
	xor.b64  	%rd700, %rd698, %rd699;
	xor.b64  	%rd701, %rd660, %rd549;
	and.b64  	%rd702, %rd684, %rd701;
	xor.b64  	%rd703, %rd702, %rd549;
	add.s64 	%rd704, %rd569, %rd525;
	add.s64 	%rd705, %rd704, %rd2729;
	add.s64 	%rd706, %rd705, %rd703;
	add.s64 	%rd707, %rd706, %rd700;
	add.s64 	%rd708, %rd707, %rd536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd695;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 28;
	shf.r.wrap.b32 	%r516, %r513, %r514, 28;
	mov.b64 	%rd709, {%r516, %r515};
	shf.l.wrap.b32 	%r517, %r513, %r514, 30;
	shf.l.wrap.b32 	%r518, %r514, %r513, 30;
	mov.b64 	%rd710, {%r518, %r517};
	xor.b64  	%rd711, %rd710, %rd709;
	shf.l.wrap.b32 	%r519, %r513, %r514, 25;
	shf.l.wrap.b32 	%r520, %r514, %r513, 25;
	mov.b64 	%rd712, {%r520, %r519};
	xor.b64  	%rd713, %rd711, %rd712;
	xor.b64  	%rd714, %rd695, %rd560;
	xor.b64  	%rd715, %rd695, %rd671;
	and.b64  	%rd716, %rd715, %rd714;
	xor.b64  	%rd717, %rd716, %rd695;
	add.s64 	%rd718, %rd707, %rd717;
	add.s64 	%rd719, %rd718, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r522}, %rd708;
	}
	shf.r.wrap.b32 	%r523, %r522, %r521, 14;
	shf.r.wrap.b32 	%r524, %r521, %r522, 14;
	mov.b64 	%rd720, {%r524, %r523};
	shf.r.wrap.b32 	%r525, %r522, %r521, 18;
	shf.r.wrap.b32 	%r526, %r521, %r522, 18;
	mov.b64 	%rd721, {%r526, %r525};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.l.wrap.b32 	%r527, %r521, %r522, 23;
	shf.l.wrap.b32 	%r528, %r522, %r521, 23;
	mov.b64 	%rd723, {%r528, %r527};
	xor.b64  	%rd724, %rd722, %rd723;
	xor.b64  	%rd725, %rd684, %rd660;
	and.b64  	%rd726, %rd708, %rd725;
	xor.b64  	%rd727, %rd726, %rd660;
	add.s64 	%rd728, %rd30, %rd549;
	add.s64 	%rd729, %rd728, %rd2730;
	add.s64 	%rd730, %rd729, %rd727;
	add.s64 	%rd731, %rd730, %rd724;
	add.s64 	%rd732, %rd731, %rd560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd719;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 28;
	shf.r.wrap.b32 	%r532, %r529, %r530, 28;
	mov.b64 	%rd733, {%r532, %r531};
	shf.l.wrap.b32 	%r533, %r529, %r530, 30;
	shf.l.wrap.b32 	%r534, %r530, %r529, 30;
	mov.b64 	%rd734, {%r534, %r533};
	xor.b64  	%rd735, %rd734, %rd733;
	shf.l.wrap.b32 	%r535, %r529, %r530, 25;
	shf.l.wrap.b32 	%r536, %r530, %r529, 25;
	mov.b64 	%rd736, {%r536, %r535};
	xor.b64  	%rd737, %rd735, %rd736;
	xor.b64  	%rd738, %rd719, %rd671;
	xor.b64  	%rd739, %rd719, %rd695;
	and.b64  	%rd740, %rd739, %rd738;
	xor.b64  	%rd741, %rd740, %rd719;
	add.s64 	%rd742, %rd731, %rd741;
	add.s64 	%rd743, %rd742, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r537,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r538}, %rd732;
	}
	shf.r.wrap.b32 	%r539, %r538, %r537, 14;
	shf.r.wrap.b32 	%r540, %r537, %r538, 14;
	mov.b64 	%rd744, {%r540, %r539};
	shf.r.wrap.b32 	%r541, %r538, %r537, 18;
	shf.r.wrap.b32 	%r542, %r537, %r538, 18;
	mov.b64 	%rd745, {%r542, %r541};
	xor.b64  	%rd746, %rd745, %rd744;
	shf.l.wrap.b32 	%r543, %r537, %r538, 23;
	shf.l.wrap.b32 	%r544, %r538, %r537, 23;
	mov.b64 	%rd747, {%r544, %r543};
	xor.b64  	%rd748, %rd746, %rd747;
	xor.b64  	%rd749, %rd708, %rd684;
	and.b64  	%rd750, %rd732, %rd749;
	xor.b64  	%rd751, %rd750, %rd684;
	add.s64 	%rd752, %rd660, %rd576;
	add.s64 	%rd753, %rd752, %rd2731;
	add.s64 	%rd754, %rd753, %rd751;
	add.s64 	%rd755, %rd754, %rd748;
	add.s64 	%rd756, %rd755, %rd671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r545,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r546}, %rd743;
	}
	shf.r.wrap.b32 	%r547, %r546, %r545, 28;
	shf.r.wrap.b32 	%r548, %r545, %r546, 28;
	mov.b64 	%rd757, {%r548, %r547};
	shf.l.wrap.b32 	%r549, %r545, %r546, 30;
	shf.l.wrap.b32 	%r550, %r546, %r545, 30;
	mov.b64 	%rd758, {%r550, %r549};
	xor.b64  	%rd759, %rd758, %rd757;
	shf.l.wrap.b32 	%r551, %r545, %r546, 25;
	shf.l.wrap.b32 	%r552, %r546, %r545, 25;
	mov.b64 	%rd760, {%r552, %r551};
	xor.b64  	%rd761, %rd759, %rd760;
	xor.b64  	%rd762, %rd743, %rd695;
	xor.b64  	%rd763, %rd743, %rd719;
	and.b64  	%rd764, %rd763, %rd762;
	xor.b64  	%rd765, %rd764, %rd743;
	add.s64 	%rd766, %rd755, %rd765;
	add.s64 	%rd767, %rd766, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd756;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 14;
	shf.r.wrap.b32 	%r556, %r553, %r554, 14;
	mov.b64 	%rd768, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 18;
	shf.r.wrap.b32 	%r558, %r553, %r554, 18;
	mov.b64 	%rd769, {%r558, %r557};
	xor.b64  	%rd770, %rd769, %rd768;
	shf.l.wrap.b32 	%r559, %r553, %r554, 23;
	shf.l.wrap.b32 	%r560, %r554, %r553, 23;
	mov.b64 	%rd771, {%r560, %r559};
	xor.b64  	%rd772, %rd770, %rd771;
	xor.b64  	%rd773, %rd732, %rd708;
	and.b64  	%rd774, %rd756, %rd773;
	xor.b64  	%rd775, %rd774, %rd708;
	add.s64 	%rd776, %rd684, %rd32;
	add.s64 	%rd777, %rd776, %rd2732;
	add.s64 	%rd778, %rd777, %rd775;
	add.s64 	%rd779, %rd778, %rd772;
	add.s64 	%rd780, %rd779, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd767;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 28;
	shf.r.wrap.b32 	%r564, %r561, %r562, 28;
	mov.b64 	%rd781, {%r564, %r563};
	shf.l.wrap.b32 	%r565, %r561, %r562, 30;
	shf.l.wrap.b32 	%r566, %r562, %r561, 30;
	mov.b64 	%rd782, {%r566, %r565};
	xor.b64  	%rd783, %rd782, %rd781;
	shf.l.wrap.b32 	%r567, %r561, %r562, 25;
	shf.l.wrap.b32 	%r568, %r562, %r561, 25;
	mov.b64 	%rd784, {%r568, %r567};
	xor.b64  	%rd785, %rd783, %rd784;
	xor.b64  	%rd786, %rd767, %rd719;
	xor.b64  	%rd787, %rd767, %rd743;
	and.b64  	%rd788, %rd787, %rd786;
	xor.b64  	%rd789, %rd788, %rd767;
	add.s64 	%rd790, %rd779, %rd789;
	add.s64 	%rd791, %rd790, %rd785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd780;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 14;
	shf.r.wrap.b32 	%r572, %r569, %r570, 14;
	mov.b64 	%rd792, {%r572, %r571};
	shf.r.wrap.b32 	%r573, %r570, %r569, 18;
	shf.r.wrap.b32 	%r574, %r569, %r570, 18;
	mov.b64 	%rd793, {%r574, %r573};
	xor.b64  	%rd794, %rd793, %rd792;
	shf.l.wrap.b32 	%r575, %r569, %r570, 23;
	shf.l.wrap.b32 	%r576, %r570, %r569, 23;
	mov.b64 	%rd795, {%r576, %r575};
	xor.b64  	%rd796, %rd794, %rd795;
	xor.b64  	%rd797, %rd756, %rd732;
	and.b64  	%rd798, %rd780, %rd797;
	xor.b64  	%rd799, %rd798, %rd732;
	add.s64 	%rd800, %rd708, %rd583;
	add.s64 	%rd801, %rd800, %rd2733;
	add.s64 	%rd802, %rd801, %rd799;
	add.s64 	%rd803, %rd802, %rd796;
	add.s64 	%rd804, %rd803, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd791;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 28;
	shf.r.wrap.b32 	%r580, %r577, %r578, 28;
	mov.b64 	%rd805, {%r580, %r579};
	shf.l.wrap.b32 	%r581, %r577, %r578, 30;
	shf.l.wrap.b32 	%r582, %r578, %r577, 30;
	mov.b64 	%rd806, {%r582, %r581};
	xor.b64  	%rd807, %rd806, %rd805;
	shf.l.wrap.b32 	%r583, %r577, %r578, 25;
	shf.l.wrap.b32 	%r584, %r578, %r577, 25;
	mov.b64 	%rd808, {%r584, %r583};
	xor.b64  	%rd809, %rd807, %rd808;
	xor.b64  	%rd810, %rd791, %rd743;
	xor.b64  	%rd811, %rd791, %rd767;
	and.b64  	%rd812, %rd811, %rd810;
	xor.b64  	%rd813, %rd812, %rd791;
	add.s64 	%rd814, %rd803, %rd813;
	add.s64 	%rd815, %rd814, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r585,%dummy}, %rd804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r586}, %rd804;
	}
	shf.r.wrap.b32 	%r587, %r586, %r585, 14;
	shf.r.wrap.b32 	%r588, %r585, %r586, 14;
	mov.b64 	%rd816, {%r588, %r587};
	shf.r.wrap.b32 	%r589, %r586, %r585, 18;
	shf.r.wrap.b32 	%r590, %r585, %r586, 18;
	mov.b64 	%rd817, {%r590, %r589};
	xor.b64  	%rd818, %rd817, %rd816;
	shf.l.wrap.b32 	%r591, %r585, %r586, 23;
	shf.l.wrap.b32 	%r592, %r586, %r585, 23;
	mov.b64 	%rd819, {%r592, %r591};
	xor.b64  	%rd820, %rd818, %rd819;
	xor.b64  	%rd821, %rd780, %rd756;
	and.b64  	%rd822, %rd804, %rd821;
	xor.b64  	%rd823, %rd822, %rd756;
	add.s64 	%rd824, %rd732, %rd585;
	add.s64 	%rd825, %rd824, %rd2734;
	add.s64 	%rd826, %rd825, %rd823;
	add.s64 	%rd827, %rd826, %rd820;
	add.s64 	%rd828, %rd827, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd815;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 28;
	shf.r.wrap.b32 	%r596, %r593, %r594, 28;
	mov.b64 	%rd829, {%r596, %r595};
	shf.l.wrap.b32 	%r597, %r593, %r594, 30;
	shf.l.wrap.b32 	%r598, %r594, %r593, 30;
	mov.b64 	%rd830, {%r598, %r597};
	xor.b64  	%rd831, %rd830, %rd829;
	shf.l.wrap.b32 	%r599, %r593, %r594, 25;
	shf.l.wrap.b32 	%r600, %r594, %r593, 25;
	mov.b64 	%rd832, {%r600, %r599};
	xor.b64  	%rd833, %rd831, %rd832;
	xor.b64  	%rd834, %rd815, %rd767;
	xor.b64  	%rd835, %rd815, %rd791;
	and.b64  	%rd836, %rd835, %rd834;
	xor.b64  	%rd837, %rd836, %rd815;
	add.s64 	%rd838, %rd827, %rd837;
	add.s64 	%rd839, %rd838, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd828;
	}
	shf.r.wrap.b32 	%r603, %r602, %r601, 14;
	shf.r.wrap.b32 	%r604, %r601, %r602, 14;
	mov.b64 	%rd840, {%r604, %r603};
	shf.r.wrap.b32 	%r605, %r602, %r601, 18;
	shf.r.wrap.b32 	%r606, %r601, %r602, 18;
	mov.b64 	%rd841, {%r606, %r605};
	xor.b64  	%rd842, %rd841, %rd840;
	shf.l.wrap.b32 	%r607, %r601, %r602, 23;
	shf.l.wrap.b32 	%r608, %r602, %r601, 23;
	mov.b64 	%rd843, {%r608, %r607};
	xor.b64  	%rd844, %rd842, %rd843;
	xor.b64  	%rd845, %rd804, %rd780;
	and.b64  	%rd846, %rd828, %rd845;
	xor.b64  	%rd847, %rd846, %rd780;
	add.s64 	%rd848, %rd756, %rd592;
	add.s64 	%rd849, %rd848, %rd2735;
	add.s64 	%rd850, %rd849, %rd847;
	add.s64 	%rd851, %rd850, %rd844;
	add.s64 	%rd852, %rd851, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd839;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 28;
	shf.r.wrap.b32 	%r612, %r609, %r610, 28;
	mov.b64 	%rd853, {%r612, %r611};
	shf.l.wrap.b32 	%r613, %r609, %r610, 30;
	shf.l.wrap.b32 	%r614, %r610, %r609, 30;
	mov.b64 	%rd854, {%r614, %r613};
	xor.b64  	%rd855, %rd854, %rd853;
	shf.l.wrap.b32 	%r615, %r609, %r610, 25;
	shf.l.wrap.b32 	%r616, %r610, %r609, 25;
	mov.b64 	%rd856, {%r616, %r615};
	xor.b64  	%rd857, %rd855, %rd856;
	xor.b64  	%rd858, %rd839, %rd791;
	xor.b64  	%rd859, %rd839, %rd815;
	and.b64  	%rd860, %rd859, %rd858;
	xor.b64  	%rd861, %rd860, %rd839;
	add.s64 	%rd862, %rd851, %rd861;
	add.s64 	%rd863, %rd862, %rd857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd852;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 14;
	shf.r.wrap.b32 	%r620, %r617, %r618, 14;
	mov.b64 	%rd864, {%r620, %r619};
	shf.r.wrap.b32 	%r621, %r618, %r617, 18;
	shf.r.wrap.b32 	%r622, %r617, %r618, 18;
	mov.b64 	%rd865, {%r622, %r621};
	xor.b64  	%rd866, %rd865, %rd864;
	shf.l.wrap.b32 	%r623, %r617, %r618, 23;
	shf.l.wrap.b32 	%r624, %r618, %r617, 23;
	mov.b64 	%rd867, {%r624, %r623};
	xor.b64  	%rd868, %rd866, %rd867;
	xor.b64  	%rd869, %rd828, %rd804;
	and.b64  	%rd870, %rd852, %rd869;
	xor.b64  	%rd871, %rd870, %rd804;
	add.s64 	%rd872, %rd780, %rd599;
	add.s64 	%rd873, %rd872, %rd2736;
	add.s64 	%rd874, %rd873, %rd871;
	add.s64 	%rd875, %rd874, %rd868;
	add.s64 	%rd876, %rd875, %rd791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd863;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 28;
	shf.r.wrap.b32 	%r628, %r625, %r626, 28;
	mov.b64 	%rd877, {%r628, %r627};
	shf.l.wrap.b32 	%r629, %r625, %r626, 30;
	shf.l.wrap.b32 	%r630, %r626, %r625, 30;
	mov.b64 	%rd878, {%r630, %r629};
	xor.b64  	%rd879, %rd878, %rd877;
	shf.l.wrap.b32 	%r631, %r625, %r626, 25;
	shf.l.wrap.b32 	%r632, %r626, %r625, 25;
	mov.b64 	%rd880, {%r632, %r631};
	xor.b64  	%rd881, %rd879, %rd880;
	xor.b64  	%rd882, %rd863, %rd815;
	xor.b64  	%rd883, %rd863, %rd839;
	and.b64  	%rd884, %rd883, %rd882;
	xor.b64  	%rd885, %rd884, %rd863;
	add.s64 	%rd886, %rd875, %rd885;
	add.s64 	%rd887, %rd886, %rd881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd876;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 14;
	shf.r.wrap.b32 	%r636, %r633, %r634, 14;
	mov.b64 	%rd888, {%r636, %r635};
	shf.r.wrap.b32 	%r637, %r634, %r633, 18;
	shf.r.wrap.b32 	%r638, %r633, %r634, 18;
	mov.b64 	%rd889, {%r638, %r637};
	xor.b64  	%rd890, %rd889, %rd888;
	shf.l.wrap.b32 	%r639, %r633, %r634, 23;
	shf.l.wrap.b32 	%r640, %r634, %r633, 23;
	mov.b64 	%rd891, {%r640, %r639};
	xor.b64  	%rd892, %rd890, %rd891;
	xor.b64  	%rd893, %rd852, %rd828;
	and.b64  	%rd894, %rd876, %rd893;
	xor.b64  	%rd895, %rd894, %rd828;
	add.s64 	%rd896, %rd804, %rd606;
	add.s64 	%rd897, %rd896, %rd2737;
	add.s64 	%rd898, %rd897, %rd895;
	add.s64 	%rd899, %rd898, %rd892;
	add.s64 	%rd900, %rd899, %rd815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd887;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 28;
	shf.r.wrap.b32 	%r644, %r641, %r642, 28;
	mov.b64 	%rd901, {%r644, %r643};
	shf.l.wrap.b32 	%r645, %r641, %r642, 30;
	shf.l.wrap.b32 	%r646, %r642, %r641, 30;
	mov.b64 	%rd902, {%r646, %r645};
	xor.b64  	%rd903, %rd902, %rd901;
	shf.l.wrap.b32 	%r647, %r641, %r642, 25;
	shf.l.wrap.b32 	%r648, %r642, %r641, 25;
	mov.b64 	%rd904, {%r648, %r647};
	xor.b64  	%rd905, %rd903, %rd904;
	xor.b64  	%rd906, %rd887, %rd839;
	xor.b64  	%rd907, %rd887, %rd863;
	and.b64  	%rd908, %rd907, %rd906;
	xor.b64  	%rd909, %rd908, %rd887;
	add.s64 	%rd910, %rd899, %rd909;
	add.s64 	%rd911, %rd910, %rd905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r650}, %rd900;
	}
	shf.r.wrap.b32 	%r651, %r650, %r649, 14;
	shf.r.wrap.b32 	%r652, %r649, %r650, 14;
	mov.b64 	%rd912, {%r652, %r651};
	shf.r.wrap.b32 	%r653, %r650, %r649, 18;
	shf.r.wrap.b32 	%r654, %r649, %r650, 18;
	mov.b64 	%rd913, {%r654, %r653};
	xor.b64  	%rd914, %rd913, %rd912;
	shf.l.wrap.b32 	%r655, %r649, %r650, 23;
	shf.l.wrap.b32 	%r656, %r650, %r649, 23;
	mov.b64 	%rd915, {%r656, %r655};
	xor.b64  	%rd916, %rd914, %rd915;
	xor.b64  	%rd917, %rd876, %rd852;
	and.b64  	%rd918, %rd900, %rd917;
	xor.b64  	%rd919, %rd918, %rd852;
	add.s64 	%rd920, %rd828, %rd613;
	add.s64 	%rd921, %rd920, %rd2738;
	add.s64 	%rd922, %rd921, %rd919;
	add.s64 	%rd923, %rd922, %rd916;
	add.s64 	%rd924, %rd923, %rd839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd911;
	}
	shf.r.wrap.b32 	%r659, %r658, %r657, 28;
	shf.r.wrap.b32 	%r660, %r657, %r658, 28;
	mov.b64 	%rd925, {%r660, %r659};
	shf.l.wrap.b32 	%r661, %r657, %r658, 30;
	shf.l.wrap.b32 	%r662, %r658, %r657, 30;
	mov.b64 	%rd926, {%r662, %r661};
	xor.b64  	%rd927, %rd926, %rd925;
	shf.l.wrap.b32 	%r663, %r657, %r658, 25;
	shf.l.wrap.b32 	%r664, %r658, %r657, 25;
	mov.b64 	%rd928, {%r664, %r663};
	xor.b64  	%rd929, %rd927, %rd928;
	xor.b64  	%rd930, %rd911, %rd863;
	xor.b64  	%rd931, %rd911, %rd887;
	and.b64  	%rd932, %rd931, %rd930;
	xor.b64  	%rd933, %rd932, %rd911;
	add.s64 	%rd934, %rd923, %rd933;
	add.s64 	%rd935, %rd934, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd924;
	}
	shf.r.wrap.b32 	%r667, %r666, %r665, 14;
	shf.r.wrap.b32 	%r668, %r665, %r666, 14;
	mov.b64 	%rd936, {%r668, %r667};
	shf.r.wrap.b32 	%r669, %r666, %r665, 18;
	shf.r.wrap.b32 	%r670, %r665, %r666, 18;
	mov.b64 	%rd937, {%r670, %r669};
	xor.b64  	%rd938, %rd937, %rd936;
	shf.l.wrap.b32 	%r671, %r665, %r666, 23;
	shf.l.wrap.b32 	%r672, %r666, %r665, 23;
	mov.b64 	%rd939, {%r672, %r671};
	xor.b64  	%rd940, %rd938, %rd939;
	xor.b64  	%rd941, %rd900, %rd876;
	and.b64  	%rd942, %rd924, %rd941;
	xor.b64  	%rd943, %rd942, %rd876;
	add.s64 	%rd944, %rd852, %rd620;
	add.s64 	%rd945, %rd944, %rd2739;
	add.s64 	%rd946, %rd945, %rd943;
	add.s64 	%rd947, %rd946, %rd940;
	add.s64 	%rd948, %rd947, %rd863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd935;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 28;
	shf.r.wrap.b32 	%r676, %r673, %r674, 28;
	mov.b64 	%rd949, {%r676, %r675};
	shf.l.wrap.b32 	%r677, %r673, %r674, 30;
	shf.l.wrap.b32 	%r678, %r674, %r673, 30;
	mov.b64 	%rd950, {%r678, %r677};
	xor.b64  	%rd951, %rd950, %rd949;
	shf.l.wrap.b32 	%r679, %r673, %r674, 25;
	shf.l.wrap.b32 	%r680, %r674, %r673, 25;
	mov.b64 	%rd952, {%r680, %r679};
	xor.b64  	%rd953, %rd951, %rd952;
	xor.b64  	%rd954, %rd935, %rd887;
	xor.b64  	%rd955, %rd935, %rd911;
	and.b64  	%rd956, %rd955, %rd954;
	xor.b64  	%rd957, %rd956, %rd935;
	add.s64 	%rd958, %rd947, %rd957;
	add.s64 	%rd959, %rd958, %rd953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd948;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 14;
	shf.r.wrap.b32 	%r684, %r681, %r682, 14;
	mov.b64 	%rd960, {%r684, %r683};
	shf.r.wrap.b32 	%r685, %r682, %r681, 18;
	shf.r.wrap.b32 	%r686, %r681, %r682, 18;
	mov.b64 	%rd961, {%r686, %r685};
	xor.b64  	%rd962, %rd961, %rd960;
	shf.l.wrap.b32 	%r687, %r681, %r682, 23;
	shf.l.wrap.b32 	%r688, %r682, %r681, 23;
	mov.b64 	%rd963, {%r688, %r687};
	xor.b64  	%rd964, %rd962, %rd963;
	xor.b64  	%rd965, %rd924, %rd900;
	and.b64  	%rd966, %rd948, %rd965;
	xor.b64  	%rd967, %rd966, %rd900;
	add.s64 	%rd968, %rd876, %rd627;
	add.s64 	%rd969, %rd968, %rd2740;
	add.s64 	%rd970, %rd969, %rd967;
	add.s64 	%rd971, %rd970, %rd964;
	add.s64 	%rd972, %rd971, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd959;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 28;
	shf.r.wrap.b32 	%r692, %r689, %r690, 28;
	mov.b64 	%rd973, {%r692, %r691};
	shf.l.wrap.b32 	%r693, %r689, %r690, 30;
	shf.l.wrap.b32 	%r694, %r690, %r689, 30;
	mov.b64 	%rd974, {%r694, %r693};
	xor.b64  	%rd975, %rd974, %rd973;
	shf.l.wrap.b32 	%r695, %r689, %r690, 25;
	shf.l.wrap.b32 	%r696, %r690, %r689, 25;
	mov.b64 	%rd976, {%r696, %r695};
	xor.b64  	%rd977, %rd975, %rd976;
	xor.b64  	%rd978, %rd959, %rd911;
	xor.b64  	%rd979, %rd959, %rd935;
	and.b64  	%rd980, %rd979, %rd978;
	xor.b64  	%rd981, %rd980, %rd959;
	add.s64 	%rd982, %rd971, %rd981;
	add.s64 	%rd983, %rd982, %rd977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r697,%dummy}, %rd972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r698}, %rd972;
	}
	shf.r.wrap.b32 	%r699, %r698, %r697, 14;
	shf.r.wrap.b32 	%r700, %r697, %r698, 14;
	mov.b64 	%rd984, {%r700, %r699};
	shf.r.wrap.b32 	%r701, %r698, %r697, 18;
	shf.r.wrap.b32 	%r702, %r697, %r698, 18;
	mov.b64 	%rd985, {%r702, %r701};
	xor.b64  	%rd986, %rd985, %rd984;
	shf.l.wrap.b32 	%r703, %r697, %r698, 23;
	shf.l.wrap.b32 	%r704, %r698, %r697, 23;
	mov.b64 	%rd987, {%r704, %r703};
	xor.b64  	%rd988, %rd986, %rd987;
	xor.b64  	%rd989, %rd948, %rd924;
	and.b64  	%rd990, %rd972, %rd989;
	xor.b64  	%rd991, %rd990, %rd924;
	add.s64 	%rd992, %rd900, %rd634;
	add.s64 	%rd993, %rd992, %rd2741;
	add.s64 	%rd994, %rd993, %rd991;
	add.s64 	%rd995, %rd994, %rd988;
	add.s64 	%rd996, %rd995, %rd911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd983;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 28;
	shf.r.wrap.b32 	%r708, %r705, %r706, 28;
	mov.b64 	%rd997, {%r708, %r707};
	shf.l.wrap.b32 	%r709, %r705, %r706, 30;
	shf.l.wrap.b32 	%r710, %r706, %r705, 30;
	mov.b64 	%rd998, {%r710, %r709};
	xor.b64  	%rd999, %rd998, %rd997;
	shf.l.wrap.b32 	%r711, %r705, %r706, 25;
	shf.l.wrap.b32 	%r712, %r706, %r705, 25;
	mov.b64 	%rd1000, {%r712, %r711};
	xor.b64  	%rd1001, %rd999, %rd1000;
	xor.b64  	%rd1002, %rd983, %rd935;
	xor.b64  	%rd1003, %rd983, %rd959;
	and.b64  	%rd1004, %rd1003, %rd1002;
	xor.b64  	%rd1005, %rd1004, %rd983;
	add.s64 	%rd1006, %rd995, %rd1005;
	add.s64 	%rd1007, %rd1006, %rd1001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd996;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 14;
	shf.r.wrap.b32 	%r716, %r713, %r714, 14;
	mov.b64 	%rd1008, {%r716, %r715};
	shf.r.wrap.b32 	%r717, %r714, %r713, 18;
	shf.r.wrap.b32 	%r718, %r713, %r714, 18;
	mov.b64 	%rd1009, {%r718, %r717};
	xor.b64  	%rd1010, %rd1009, %rd1008;
	shf.l.wrap.b32 	%r719, %r713, %r714, 23;
	shf.l.wrap.b32 	%r720, %r714, %r713, 23;
	mov.b64 	%rd1011, {%r720, %r719};
	xor.b64  	%rd1012, %rd1010, %rd1011;
	xor.b64  	%rd1013, %rd972, %rd948;
	and.b64  	%rd1014, %rd996, %rd1013;
	xor.b64  	%rd1015, %rd1014, %rd948;
	add.s64 	%rd1016, %rd924, %rd647;
	add.s64 	%rd1017, %rd1016, %rd2742;
	add.s64 	%rd1018, %rd1017, %rd1015;
	add.s64 	%rd1019, %rd1018, %rd1012;
	add.s64 	%rd1020, %rd1019, %rd935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r721,%dummy}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r722}, %rd1007;
	}
	shf.r.wrap.b32 	%r723, %r722, %r721, 28;
	shf.r.wrap.b32 	%r724, %r721, %r722, 28;
	mov.b64 	%rd1021, {%r724, %r723};
	shf.l.wrap.b32 	%r725, %r721, %r722, 30;
	shf.l.wrap.b32 	%r726, %r722, %r721, 30;
	mov.b64 	%rd1022, {%r726, %r725};
	xor.b64  	%rd1023, %rd1022, %rd1021;
	shf.l.wrap.b32 	%r727, %r721, %r722, 25;
	shf.l.wrap.b32 	%r728, %r722, %r721, 25;
	mov.b64 	%rd1024, {%r728, %r727};
	xor.b64  	%rd1025, %rd1023, %rd1024;
	xor.b64  	%rd1026, %rd1007, %rd959;
	xor.b64  	%rd1027, %rd1007, %rd983;
	and.b64  	%rd1028, %rd1027, %rd1026;
	xor.b64  	%rd1029, %rd1028, %rd1007;
	add.s64 	%rd1030, %rd1019, %rd1029;
	add.s64 	%rd1031, %rd1030, %rd1025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd634;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 19;
	shf.r.wrap.b32 	%r732, %r729, %r730, 19;
	mov.b64 	%rd1032, {%r732, %r731};
	shf.l.wrap.b32 	%r733, %r729, %r730, 3;
	shf.l.wrap.b32 	%r734, %r730, %r729, 3;
	mov.b64 	%rd1033, {%r734, %r733};
	shr.u64 	%rd1034, %rd634, 6;
	xor.b64  	%rd1035, %rd1032, %rd1034;
	xor.b64  	%rd1036, %rd1035, %rd1033;
	add.s64 	%rd1037, %rd562, %rd599;
	add.s64 	%rd1038, %rd1037, %rd1036;
	add.s64 	%rd1039, %rd1038, %rd53;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r735,%dummy}, %rd647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r736}, %rd647;
	}
	shf.r.wrap.b32 	%r737, %r736, %r735, 19;
	shf.r.wrap.b32 	%r738, %r735, %r736, 19;
	mov.b64 	%rd1040, {%r738, %r737};
	shf.l.wrap.b32 	%r739, %r735, %r736, 3;
	shf.l.wrap.b32 	%r740, %r736, %r735, 3;
	mov.b64 	%rd1041, {%r740, %r739};
	shr.u64 	%rd1042, %rd647, 6;
	xor.b64  	%rd1043, %rd1040, %rd1042;
	xor.b64  	%rd1044, %rd1043, %rd1041;
	shf.r.wrap.b32 	%r741, %r410, %r409, 1;
	shf.r.wrap.b32 	%r742, %r409, %r410, 1;
	mov.b64 	%rd1045, {%r742, %r741};
	shf.r.wrap.b32 	%r743, %r410, %r409, 8;
	shf.r.wrap.b32 	%r744, %r409, %r410, 8;
	mov.b64 	%rd1046, {%r744, %r743};
	shr.u64 	%rd1047, %rd569, 7;
	xor.b64  	%rd1048, %rd1045, %rd1047;
	xor.b64  	%rd1049, %rd1048, %rd1046;
	add.s64 	%rd1050, %rd28, %rd606;
	add.s64 	%rd1051, %rd1050, %rd1044;
	add.s64 	%rd1052, %rd1051, %rd1049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r745,%dummy}, %rd1039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r746}, %rd1039;
	}
	shf.r.wrap.b32 	%r747, %r746, %r745, 19;
	shf.r.wrap.b32 	%r748, %r745, %r746, 19;
	mov.b64 	%rd1053, {%r748, %r747};
	shf.l.wrap.b32 	%r749, %r745, %r746, 3;
	shf.l.wrap.b32 	%r750, %r746, %r745, 3;
	mov.b64 	%rd1054, {%r750, %r749};
	shr.u64 	%rd1055, %rd1039, 6;
	xor.b64  	%rd1056, %rd1053, %rd1055;
	xor.b64  	%rd1057, %rd1056, %rd1054;
	add.s64 	%rd1058, %rd569, %rd613;
	add.s64 	%rd1059, %rd1058, %rd1057;
	add.s64 	%rd1060, %rd1059, %rd54;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r751,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r752}, %rd1052;
	}
	shf.r.wrap.b32 	%r753, %r752, %r751, 19;
	shf.r.wrap.b32 	%r754, %r751, %r752, 19;
	mov.b64 	%rd1061, {%r754, %r753};
	shf.l.wrap.b32 	%r755, %r751, %r752, 3;
	shf.l.wrap.b32 	%r756, %r752, %r751, 3;
	mov.b64 	%rd1062, {%r756, %r755};
	shr.u64 	%rd1063, %rd1052, 6;
	xor.b64  	%rd1064, %rd1061, %rd1063;
	xor.b64  	%rd1065, %rd1064, %rd1062;
	shf.r.wrap.b32 	%r757, %r416, %r415, 1;
	shf.r.wrap.b32 	%r758, %r415, %r416, 1;
	mov.b64 	%rd1066, {%r758, %r757};
	shf.r.wrap.b32 	%r759, %r416, %r415, 8;
	shf.r.wrap.b32 	%r760, %r415, %r416, 8;
	mov.b64 	%rd1067, {%r760, %r759};
	shr.u64 	%rd1068, %rd576, 7;
	xor.b64  	%rd1069, %rd1066, %rd1068;
	xor.b64  	%rd1070, %rd1069, %rd1067;
	add.s64 	%rd1071, %rd30, %rd620;
	add.s64 	%rd1072, %rd1071, %rd1065;
	add.s64 	%rd1073, %rd1072, %rd1070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r761,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r762}, %rd1060;
	}
	shf.r.wrap.b32 	%r763, %r762, %r761, 19;
	shf.r.wrap.b32 	%r764, %r761, %r762, 19;
	mov.b64 	%rd1074, {%r764, %r763};
	shf.l.wrap.b32 	%r765, %r761, %r762, 3;
	shf.l.wrap.b32 	%r766, %r762, %r761, 3;
	mov.b64 	%rd1075, {%r766, %r765};
	shr.u64 	%rd1076, %rd1060, 6;
	xor.b64  	%rd1077, %rd1074, %rd1076;
	xor.b64  	%rd1078, %rd1077, %rd1075;
	add.s64 	%rd1079, %rd576, %rd627;
	add.s64 	%rd1080, %rd1079, %rd1078;
	add.s64 	%rd1081, %rd1080, %rd55;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r767,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r768}, %rd1073;
	}
	shf.r.wrap.b32 	%r769, %r768, %r767, 19;
	shf.r.wrap.b32 	%r770, %r767, %r768, 19;
	mov.b64 	%rd1082, {%r770, %r769};
	shf.l.wrap.b32 	%r771, %r767, %r768, 3;
	shf.l.wrap.b32 	%r772, %r768, %r767, 3;
	mov.b64 	%rd1083, {%r772, %r771};
	shr.u64 	%rd1084, %rd1073, 6;
	xor.b64  	%rd1085, %rd1082, %rd1084;
	xor.b64  	%rd1086, %rd1085, %rd1083;
	shf.r.wrap.b32 	%r773, %r422, %r421, 1;
	shf.r.wrap.b32 	%r774, %r421, %r422, 1;
	mov.b64 	%rd1087, {%r774, %r773};
	shf.r.wrap.b32 	%r775, %r422, %r421, 8;
	shf.r.wrap.b32 	%r776, %r421, %r422, 8;
	mov.b64 	%rd1088, {%r776, %r775};
	shr.u64 	%rd1089, %rd583, 7;
	xor.b64  	%rd1090, %rd1087, %rd1089;
	xor.b64  	%rd1091, %rd1090, %rd1088;
	add.s64 	%rd1092, %rd32, %rd634;
	add.s64 	%rd1093, %rd1092, %rd1086;
	add.s64 	%rd1094, %rd1093, %rd1091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r777,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r778}, %rd1081;
	}
	shf.r.wrap.b32 	%r779, %r778, %r777, 19;
	shf.r.wrap.b32 	%r780, %r777, %r778, 19;
	mov.b64 	%rd1095, {%r780, %r779};
	shf.l.wrap.b32 	%r781, %r777, %r778, 3;
	shf.l.wrap.b32 	%r782, %r778, %r777, 3;
	mov.b64 	%rd1096, {%r782, %r781};
	shr.u64 	%rd1097, %rd1081, 6;
	xor.b64  	%rd1098, %rd1095, %rd1097;
	xor.b64  	%rd1099, %rd1098, %rd1096;
	shf.r.wrap.b32 	%r783, %r428, %r427, 1;
	shf.r.wrap.b32 	%r784, %r427, %r428, 1;
	mov.b64 	%rd1100, {%r784, %r783};
	shf.r.wrap.b32 	%r785, %r428, %r427, 8;
	shf.r.wrap.b32 	%r786, %r427, %r428, 8;
	mov.b64 	%rd1101, {%r786, %r785};
	shr.u64 	%rd1102, %rd585, 7;
	xor.b64  	%rd1103, %rd1100, %rd1102;
	xor.b64  	%rd1104, %rd1103, %rd1101;
	add.s64 	%rd1105, %rd583, %rd647;
	add.s64 	%rd1106, %rd1105, %rd1099;
	add.s64 	%rd1107, %rd1106, %rd1104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd1094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd1094;
	}
	shf.r.wrap.b32 	%r789, %r788, %r787, 19;
	shf.r.wrap.b32 	%r790, %r787, %r788, 19;
	mov.b64 	%rd1108, {%r790, %r789};
	shf.l.wrap.b32 	%r791, %r787, %r788, 3;
	shf.l.wrap.b32 	%r792, %r788, %r787, 3;
	mov.b64 	%rd1109, {%r792, %r791};
	shr.u64 	%rd1110, %rd1094, 6;
	xor.b64  	%rd1111, %rd1108, %rd1110;
	xor.b64  	%rd1112, %rd1111, %rd1109;
	shf.r.wrap.b32 	%r793, %r434, %r433, 1;
	shf.r.wrap.b32 	%r794, %r433, %r434, 1;
	mov.b64 	%rd1113, {%r794, %r793};
	shf.r.wrap.b32 	%r795, %r434, %r433, 8;
	shf.r.wrap.b32 	%r796, %r433, %r434, 8;
	mov.b64 	%rd1114, {%r796, %r795};
	shr.u64 	%rd1115, %rd592, 7;
	xor.b64  	%rd1116, %rd1113, %rd1115;
	xor.b64  	%rd1117, %rd1116, %rd1114;
	add.s64 	%rd1118, %rd1039, %rd585;
	add.s64 	%rd1119, %rd1118, %rd1112;
	add.s64 	%rd1120, %rd1119, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r798}, %rd1107;
	}
	shf.r.wrap.b32 	%r799, %r798, %r797, 19;
	shf.r.wrap.b32 	%r800, %r797, %r798, 19;
	mov.b64 	%rd1121, {%r800, %r799};
	shf.l.wrap.b32 	%r801, %r797, %r798, 3;
	shf.l.wrap.b32 	%r802, %r798, %r797, 3;
	mov.b64 	%rd1122, {%r802, %r801};
	shr.u64 	%rd1123, %rd1107, 6;
	xor.b64  	%rd1124, %rd1121, %rd1123;
	xor.b64  	%rd1125, %rd1124, %rd1122;
	shf.r.wrap.b32 	%r803, %r440, %r439, 1;
	shf.r.wrap.b32 	%r804, %r439, %r440, 1;
	mov.b64 	%rd1126, {%r804, %r803};
	shf.r.wrap.b32 	%r805, %r440, %r439, 8;
	shf.r.wrap.b32 	%r806, %r439, %r440, 8;
	mov.b64 	%rd1127, {%r806, %r805};
	shr.u64 	%rd1128, %rd599, 7;
	xor.b64  	%rd1129, %rd1126, %rd1128;
	xor.b64  	%rd1130, %rd1129, %rd1127;
	add.s64 	%rd1131, %rd1052, %rd592;
	add.s64 	%rd1132, %rd1131, %rd1125;
	add.s64 	%rd1133, %rd1132, %rd1130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r807,%dummy}, %rd1120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r808}, %rd1120;
	}
	shf.r.wrap.b32 	%r809, %r808, %r807, 19;
	shf.r.wrap.b32 	%r810, %r807, %r808, 19;
	mov.b64 	%rd1134, {%r810, %r809};
	shf.l.wrap.b32 	%r811, %r807, %r808, 3;
	shf.l.wrap.b32 	%r812, %r808, %r807, 3;
	mov.b64 	%rd1135, {%r812, %r811};
	shr.u64 	%rd1136, %rd1120, 6;
	xor.b64  	%rd1137, %rd1134, %rd1136;
	xor.b64  	%rd1138, %rd1137, %rd1135;
	shf.r.wrap.b32 	%r813, %r446, %r445, 1;
	shf.r.wrap.b32 	%r814, %r445, %r446, 1;
	mov.b64 	%rd1139, {%r814, %r813};
	shf.r.wrap.b32 	%r815, %r446, %r445, 8;
	shf.r.wrap.b32 	%r816, %r445, %r446, 8;
	mov.b64 	%rd1140, {%r816, %r815};
	shr.u64 	%rd1141, %rd606, 7;
	xor.b64  	%rd1142, %rd1139, %rd1141;
	xor.b64  	%rd1143, %rd1142, %rd1140;
	add.s64 	%rd1144, %rd1060, %rd599;
	add.s64 	%rd1145, %rd1144, %rd1138;
	add.s64 	%rd1146, %rd1145, %rd1143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r817,%dummy}, %rd1133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r818}, %rd1133;
	}
	shf.r.wrap.b32 	%r819, %r818, %r817, 19;
	shf.r.wrap.b32 	%r820, %r817, %r818, 19;
	mov.b64 	%rd1147, {%r820, %r819};
	shf.l.wrap.b32 	%r821, %r817, %r818, 3;
	shf.l.wrap.b32 	%r822, %r818, %r817, 3;
	mov.b64 	%rd1148, {%r822, %r821};
	shr.u64 	%rd1149, %rd1133, 6;
	xor.b64  	%rd1150, %rd1147, %rd1149;
	xor.b64  	%rd1151, %rd1150, %rd1148;
	shf.r.wrap.b32 	%r823, %r452, %r451, 1;
	shf.r.wrap.b32 	%r824, %r451, %r452, 1;
	mov.b64 	%rd1152, {%r824, %r823};
	shf.r.wrap.b32 	%r825, %r452, %r451, 8;
	shf.r.wrap.b32 	%r826, %r451, %r452, 8;
	mov.b64 	%rd1153, {%r826, %r825};
	shr.u64 	%rd1154, %rd613, 7;
	xor.b64  	%rd1155, %rd1152, %rd1154;
	xor.b64  	%rd1156, %rd1155, %rd1153;
	add.s64 	%rd1157, %rd1073, %rd606;
	add.s64 	%rd1158, %rd1157, %rd1151;
	add.s64 	%rd1159, %rd1158, %rd1156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r827,%dummy}, %rd1146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r828}, %rd1146;
	}
	shf.r.wrap.b32 	%r829, %r828, %r827, 19;
	shf.r.wrap.b32 	%r830, %r827, %r828, 19;
	mov.b64 	%rd1160, {%r830, %r829};
	shf.l.wrap.b32 	%r831, %r827, %r828, 3;
	shf.l.wrap.b32 	%r832, %r828, %r827, 3;
	mov.b64 	%rd1161, {%r832, %r831};
	shr.u64 	%rd1162, %rd1146, 6;
	xor.b64  	%rd1163, %rd1160, %rd1162;
	xor.b64  	%rd1164, %rd1163, %rd1161;
	shf.r.wrap.b32 	%r833, %r458, %r457, 1;
	shf.r.wrap.b32 	%r834, %r457, %r458, 1;
	mov.b64 	%rd1165, {%r834, %r833};
	shf.r.wrap.b32 	%r835, %r458, %r457, 8;
	shf.r.wrap.b32 	%r836, %r457, %r458, 8;
	mov.b64 	%rd1166, {%r836, %r835};
	shr.u64 	%rd1167, %rd620, 7;
	xor.b64  	%rd1168, %rd1165, %rd1167;
	xor.b64  	%rd1169, %rd1168, %rd1166;
	add.s64 	%rd1170, %rd1081, %rd613;
	add.s64 	%rd1171, %rd1170, %rd1164;
	add.s64 	%rd1172, %rd1171, %rd1169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd1159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd1159;
	}
	shf.r.wrap.b32 	%r839, %r838, %r837, 19;
	shf.r.wrap.b32 	%r840, %r837, %r838, 19;
	mov.b64 	%rd1173, {%r840, %r839};
	shf.l.wrap.b32 	%r841, %r837, %r838, 3;
	shf.l.wrap.b32 	%r842, %r838, %r837, 3;
	mov.b64 	%rd1174, {%r842, %r841};
	shr.u64 	%rd1175, %rd1159, 6;
	xor.b64  	%rd1176, %rd1173, %rd1175;
	xor.b64  	%rd1177, %rd1176, %rd1174;
	shf.r.wrap.b32 	%r843, %r464, %r463, 1;
	shf.r.wrap.b32 	%r844, %r463, %r464, 1;
	mov.b64 	%rd1178, {%r844, %r843};
	shf.r.wrap.b32 	%r845, %r464, %r463, 8;
	shf.r.wrap.b32 	%r846, %r463, %r464, 8;
	mov.b64 	%rd1179, {%r846, %r845};
	shr.u64 	%rd1180, %rd627, 7;
	xor.b64  	%rd1181, %rd1178, %rd1180;
	xor.b64  	%rd1182, %rd1181, %rd1179;
	add.s64 	%rd1183, %rd1094, %rd620;
	add.s64 	%rd1184, %rd1183, %rd1177;
	add.s64 	%rd1185, %rd1184, %rd1182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r847,%dummy}, %rd1172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r848}, %rd1172;
	}
	shf.r.wrap.b32 	%r849, %r848, %r847, 19;
	shf.r.wrap.b32 	%r850, %r847, %r848, 19;
	mov.b64 	%rd1186, {%r850, %r849};
	shf.l.wrap.b32 	%r851, %r847, %r848, 3;
	shf.l.wrap.b32 	%r852, %r848, %r847, 3;
	mov.b64 	%rd1187, {%r852, %r851};
	shr.u64 	%rd1188, %rd1172, 6;
	xor.b64  	%rd1189, %rd1186, %rd1188;
	xor.b64  	%rd1190, %rd1189, %rd1187;
	shf.r.wrap.b32 	%r853, %r730, %r729, 1;
	shf.r.wrap.b32 	%r854, %r729, %r730, 1;
	mov.b64 	%rd1191, {%r854, %r853};
	shf.r.wrap.b32 	%r855, %r730, %r729, 8;
	shf.r.wrap.b32 	%r856, %r729, %r730, 8;
	mov.b64 	%rd1192, {%r856, %r855};
	shr.u64 	%rd1193, %rd634, 7;
	xor.b64  	%rd1194, %rd1191, %rd1193;
	xor.b64  	%rd1195, %rd1194, %rd1192;
	add.s64 	%rd1196, %rd1107, %rd627;
	add.s64 	%rd1197, %rd1196, %rd1190;
	add.s64 	%rd1198, %rd1197, %rd1195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r857,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r858}, %rd1185;
	}
	shf.r.wrap.b32 	%r859, %r858, %r857, 19;
	shf.r.wrap.b32 	%r860, %r857, %r858, 19;
	mov.b64 	%rd1199, {%r860, %r859};
	shf.l.wrap.b32 	%r861, %r857, %r858, 3;
	shf.l.wrap.b32 	%r862, %r858, %r857, 3;
	mov.b64 	%rd1200, {%r862, %r861};
	shr.u64 	%rd1201, %rd1185, 6;
	xor.b64  	%rd1202, %rd1199, %rd1201;
	xor.b64  	%rd1203, %rd1202, %rd1200;
	shf.r.wrap.b32 	%r863, %r736, %r735, 1;
	shf.r.wrap.b32 	%r864, %r735, %r736, 1;
	mov.b64 	%rd1204, {%r864, %r863};
	shf.r.wrap.b32 	%r865, %r736, %r735, 8;
	shf.r.wrap.b32 	%r866, %r735, %r736, 8;
	mov.b64 	%rd1205, {%r866, %r865};
	shr.u64 	%rd1206, %rd647, 7;
	xor.b64  	%rd1207, %rd1204, %rd1206;
	xor.b64  	%rd1208, %rd1207, %rd1205;
	add.s64 	%rd1209, %rd1120, %rd634;
	add.s64 	%rd1210, %rd1209, %rd1203;
	add.s64 	%rd1211, %rd1210, %rd1208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r867,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd1198;
	}
	shf.r.wrap.b32 	%r869, %r868, %r867, 19;
	shf.r.wrap.b32 	%r870, %r867, %r868, 19;
	mov.b64 	%rd1212, {%r870, %r869};
	shf.l.wrap.b32 	%r871, %r867, %r868, 3;
	shf.l.wrap.b32 	%r872, %r868, %r867, 3;
	mov.b64 	%rd1213, {%r872, %r871};
	shr.u64 	%rd1214, %rd1198, 6;
	xor.b64  	%rd1215, %rd1212, %rd1214;
	xor.b64  	%rd1216, %rd1215, %rd1213;
	shf.r.wrap.b32 	%r873, %r746, %r745, 1;
	shf.r.wrap.b32 	%r874, %r745, %r746, 1;
	mov.b64 	%rd1217, {%r874, %r873};
	shf.r.wrap.b32 	%r875, %r746, %r745, 8;
	shf.r.wrap.b32 	%r876, %r745, %r746, 8;
	mov.b64 	%rd1218, {%r876, %r875};
	shr.u64 	%rd1219, %rd1039, 7;
	xor.b64  	%rd1220, %rd1217, %rd1219;
	xor.b64  	%rd1221, %rd1220, %rd1218;
	add.s64 	%rd1222, %rd1133, %rd647;
	add.s64 	%rd1223, %rd1222, %rd1216;
	add.s64 	%rd1224, %rd1223, %rd1221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd1020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd1020;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 14;
	shf.r.wrap.b32 	%r880, %r877, %r878, 14;
	mov.b64 	%rd1225, {%r880, %r879};
	shf.r.wrap.b32 	%r881, %r878, %r877, 18;
	shf.r.wrap.b32 	%r882, %r877, %r878, 18;
	mov.b64 	%rd1226, {%r882, %r881};
	xor.b64  	%rd1227, %rd1226, %rd1225;
	shf.l.wrap.b32 	%r883, %r877, %r878, 23;
	shf.l.wrap.b32 	%r884, %r878, %r877, 23;
	mov.b64 	%rd1228, {%r884, %r883};
	xor.b64  	%rd1229, %rd1227, %rd1228;
	xor.b64  	%rd1230, %rd972, %rd996;
	and.b64  	%rd1231, %rd1230, %rd1020;
	xor.b64  	%rd1232, %rd1231, %rd972;
	add.s64 	%rd1233, %rd1232, %rd948;
	add.s64 	%rd1234, %rd1233, %rd1039;
	add.s64 	%rd1235, %rd1234, %rd2743;
	add.s64 	%rd1236, %rd1235, %rd1229;
	add.s64 	%rd1237, %rd1236, %rd959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd1031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd1031;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 28;
	shf.r.wrap.b32 	%r888, %r885, %r886, 28;
	mov.b64 	%rd1238, {%r888, %r887};
	shf.l.wrap.b32 	%r889, %r885, %r886, 30;
	shf.l.wrap.b32 	%r890, %r886, %r885, 30;
	mov.b64 	%rd1239, {%r890, %r889};
	xor.b64  	%rd1240, %rd1239, %rd1238;
	shf.l.wrap.b32 	%r891, %r885, %r886, 25;
	shf.l.wrap.b32 	%r892, %r886, %r885, 25;
	mov.b64 	%rd1241, {%r892, %r891};
	xor.b64  	%rd1242, %rd1240, %rd1241;
	xor.b64  	%rd1243, %rd1031, %rd983;
	xor.b64  	%rd1244, %rd1031, %rd1007;
	and.b64  	%rd1245, %rd1244, %rd1243;
	xor.b64  	%rd1246, %rd1245, %rd1031;
	add.s64 	%rd1247, %rd1236, %rd1246;
	add.s64 	%rd1248, %rd1247, %rd1242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r893,%dummy}, %rd1237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r894}, %rd1237;
	}
	shf.r.wrap.b32 	%r895, %r894, %r893, 14;
	shf.r.wrap.b32 	%r896, %r893, %r894, 14;
	mov.b64 	%rd1249, {%r896, %r895};
	shf.r.wrap.b32 	%r897, %r894, %r893, 18;
	shf.r.wrap.b32 	%r898, %r893, %r894, 18;
	mov.b64 	%rd1250, {%r898, %r897};
	xor.b64  	%rd1251, %rd1250, %rd1249;
	shf.l.wrap.b32 	%r899, %r893, %r894, 23;
	shf.l.wrap.b32 	%r900, %r894, %r893, 23;
	mov.b64 	%rd1252, {%r900, %r899};
	xor.b64  	%rd1253, %rd1251, %rd1252;
	xor.b64  	%rd1254, %rd996, %rd1020;
	and.b64  	%rd1255, %rd1237, %rd1254;
	xor.b64  	%rd1256, %rd1255, %rd996;
	add.s64 	%rd1257, %rd1052, %rd972;
	add.s64 	%rd1258, %rd1257, %rd2744;
	add.s64 	%rd1259, %rd1258, %rd1256;
	add.s64 	%rd1260, %rd1259, %rd1253;
	add.s64 	%rd1261, %rd1260, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r902}, %rd1248;
	}
	shf.r.wrap.b32 	%r903, %r902, %r901, 28;
	shf.r.wrap.b32 	%r904, %r901, %r902, 28;
	mov.b64 	%rd1262, {%r904, %r903};
	shf.l.wrap.b32 	%r905, %r901, %r902, 30;
	shf.l.wrap.b32 	%r906, %r902, %r901, 30;
	mov.b64 	%rd1263, {%r906, %r905};
	xor.b64  	%rd1264, %rd1263, %rd1262;
	shf.l.wrap.b32 	%r907, %r901, %r902, 25;
	shf.l.wrap.b32 	%r908, %r902, %r901, 25;
	mov.b64 	%rd1265, {%r908, %r907};
	xor.b64  	%rd1266, %rd1264, %rd1265;
	xor.b64  	%rd1267, %rd1248, %rd1007;
	xor.b64  	%rd1268, %rd1248, %rd1031;
	and.b64  	%rd1269, %rd1268, %rd1267;
	xor.b64  	%rd1270, %rd1269, %rd1248;
	add.s64 	%rd1271, %rd1260, %rd1270;
	add.s64 	%rd1272, %rd1271, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd1261;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 14;
	shf.r.wrap.b32 	%r912, %r909, %r910, 14;
	mov.b64 	%rd1273, {%r912, %r911};
	shf.r.wrap.b32 	%r913, %r910, %r909, 18;
	shf.r.wrap.b32 	%r914, %r909, %r910, 18;
	mov.b64 	%rd1274, {%r914, %r913};
	xor.b64  	%rd1275, %rd1274, %rd1273;
	shf.l.wrap.b32 	%r915, %r909, %r910, 23;
	shf.l.wrap.b32 	%r916, %r910, %r909, 23;
	mov.b64 	%rd1276, {%r916, %r915};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	xor.b64  	%rd1278, %rd1237, %rd1020;
	and.b64  	%rd1279, %rd1261, %rd1278;
	xor.b64  	%rd1280, %rd1279, %rd1020;
	add.s64 	%rd1281, %rd1060, %rd996;
	add.s64 	%rd1282, %rd1281, %rd2745;
	add.s64 	%rd1283, %rd1282, %rd1280;
	add.s64 	%rd1284, %rd1283, %rd1277;
	add.s64 	%rd1285, %rd1284, %rd1007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd1272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r918}, %rd1272;
	}
	shf.r.wrap.b32 	%r919, %r918, %r917, 28;
	shf.r.wrap.b32 	%r920, %r917, %r918, 28;
	mov.b64 	%rd1286, {%r920, %r919};
	shf.l.wrap.b32 	%r921, %r917, %r918, 30;
	shf.l.wrap.b32 	%r922, %r918, %r917, 30;
	mov.b64 	%rd1287, {%r922, %r921};
	xor.b64  	%rd1288, %rd1287, %rd1286;
	shf.l.wrap.b32 	%r923, %r917, %r918, 25;
	shf.l.wrap.b32 	%r924, %r918, %r917, 25;
	mov.b64 	%rd1289, {%r924, %r923};
	xor.b64  	%rd1290, %rd1288, %rd1289;
	xor.b64  	%rd1291, %rd1272, %rd1031;
	xor.b64  	%rd1292, %rd1272, %rd1248;
	and.b64  	%rd1293, %rd1292, %rd1291;
	xor.b64  	%rd1294, %rd1293, %rd1272;
	add.s64 	%rd1295, %rd1284, %rd1294;
	add.s64 	%rd1296, %rd1295, %rd1290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd1285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd1285;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 14;
	shf.r.wrap.b32 	%r928, %r925, %r926, 14;
	mov.b64 	%rd1297, {%r928, %r927};
	shf.r.wrap.b32 	%r929, %r926, %r925, 18;
	shf.r.wrap.b32 	%r930, %r925, %r926, 18;
	mov.b64 	%rd1298, {%r930, %r929};
	xor.b64  	%rd1299, %rd1298, %rd1297;
	shf.l.wrap.b32 	%r931, %r925, %r926, 23;
	shf.l.wrap.b32 	%r932, %r926, %r925, 23;
	mov.b64 	%rd1300, {%r932, %r931};
	xor.b64  	%rd1301, %rd1299, %rd1300;
	xor.b64  	%rd1302, %rd1261, %rd1237;
	and.b64  	%rd1303, %rd1285, %rd1302;
	xor.b64  	%rd1304, %rd1303, %rd1237;
	add.s64 	%rd1305, %rd1073, %rd1020;
	add.s64 	%rd1306, %rd1305, %rd2746;
	add.s64 	%rd1307, %rd1306, %rd1304;
	add.s64 	%rd1308, %rd1307, %rd1301;
	add.s64 	%rd1309, %rd1308, %rd1031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd1296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd1296;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 28;
	shf.r.wrap.b32 	%r936, %r933, %r934, 28;
	mov.b64 	%rd1310, {%r936, %r935};
	shf.l.wrap.b32 	%r937, %r933, %r934, 30;
	shf.l.wrap.b32 	%r938, %r934, %r933, 30;
	mov.b64 	%rd1311, {%r938, %r937};
	xor.b64  	%rd1312, %rd1311, %rd1310;
	shf.l.wrap.b32 	%r939, %r933, %r934, 25;
	shf.l.wrap.b32 	%r940, %r934, %r933, 25;
	mov.b64 	%rd1313, {%r940, %r939};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	xor.b64  	%rd1315, %rd1296, %rd1248;
	xor.b64  	%rd1316, %rd1296, %rd1272;
	and.b64  	%rd1317, %rd1316, %rd1315;
	xor.b64  	%rd1318, %rd1317, %rd1296;
	add.s64 	%rd1319, %rd1308, %rd1318;
	add.s64 	%rd1320, %rd1319, %rd1314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd1309;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 14;
	shf.r.wrap.b32 	%r944, %r941, %r942, 14;
	mov.b64 	%rd1321, {%r944, %r943};
	shf.r.wrap.b32 	%r945, %r942, %r941, 18;
	shf.r.wrap.b32 	%r946, %r941, %r942, 18;
	mov.b64 	%rd1322, {%r946, %r945};
	xor.b64  	%rd1323, %rd1322, %rd1321;
	shf.l.wrap.b32 	%r947, %r941, %r942, 23;
	shf.l.wrap.b32 	%r948, %r942, %r941, 23;
	mov.b64 	%rd1324, {%r948, %r947};
	xor.b64  	%rd1325, %rd1323, %rd1324;
	xor.b64  	%rd1326, %rd1285, %rd1261;
	and.b64  	%rd1327, %rd1309, %rd1326;
	xor.b64  	%rd1328, %rd1327, %rd1261;
	add.s64 	%rd1329, %rd1237, %rd1081;
	add.s64 	%rd1330, %rd1329, %rd2747;
	add.s64 	%rd1331, %rd1330, %rd1328;
	add.s64 	%rd1332, %rd1331, %rd1325;
	add.s64 	%rd1333, %rd1332, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r949,%dummy}, %rd1320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r950}, %rd1320;
	}
	shf.r.wrap.b32 	%r951, %r950, %r949, 28;
	shf.r.wrap.b32 	%r952, %r949, %r950, 28;
	mov.b64 	%rd1334, {%r952, %r951};
	shf.l.wrap.b32 	%r953, %r949, %r950, 30;
	shf.l.wrap.b32 	%r954, %r950, %r949, 30;
	mov.b64 	%rd1335, {%r954, %r953};
	xor.b64  	%rd1336, %rd1335, %rd1334;
	shf.l.wrap.b32 	%r955, %r949, %r950, 25;
	shf.l.wrap.b32 	%r956, %r950, %r949, 25;
	mov.b64 	%rd1337, {%r956, %r955};
	xor.b64  	%rd1338, %rd1336, %rd1337;
	xor.b64  	%rd1339, %rd1320, %rd1272;
	xor.b64  	%rd1340, %rd1320, %rd1296;
	and.b64  	%rd1341, %rd1340, %rd1339;
	xor.b64  	%rd1342, %rd1341, %rd1320;
	add.s64 	%rd1343, %rd1332, %rd1342;
	add.s64 	%rd1344, %rd1343, %rd1338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd1333;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 14;
	shf.r.wrap.b32 	%r960, %r957, %r958, 14;
	mov.b64 	%rd1345, {%r960, %r959};
	shf.r.wrap.b32 	%r961, %r958, %r957, 18;
	shf.r.wrap.b32 	%r962, %r957, %r958, 18;
	mov.b64 	%rd1346, {%r962, %r961};
	xor.b64  	%rd1347, %rd1346, %rd1345;
	shf.l.wrap.b32 	%r963, %r957, %r958, 23;
	shf.l.wrap.b32 	%r964, %r958, %r957, 23;
	mov.b64 	%rd1348, {%r964, %r963};
	xor.b64  	%rd1349, %rd1347, %rd1348;
	xor.b64  	%rd1350, %rd1309, %rd1285;
	and.b64  	%rd1351, %rd1333, %rd1350;
	xor.b64  	%rd1352, %rd1351, %rd1285;
	add.s64 	%rd1353, %rd1261, %rd1094;
	add.s64 	%rd1354, %rd1353, %rd2748;
	add.s64 	%rd1355, %rd1354, %rd1352;
	add.s64 	%rd1356, %rd1355, %rd1349;
	add.s64 	%rd1357, %rd1356, %rd1272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd1344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd1344;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 28;
	shf.r.wrap.b32 	%r968, %r965, %r966, 28;
	mov.b64 	%rd1358, {%r968, %r967};
	shf.l.wrap.b32 	%r969, %r965, %r966, 30;
	shf.l.wrap.b32 	%r970, %r966, %r965, 30;
	mov.b64 	%rd1359, {%r970, %r969};
	xor.b64  	%rd1360, %rd1359, %rd1358;
	shf.l.wrap.b32 	%r971, %r965, %r966, 25;
	shf.l.wrap.b32 	%r972, %r966, %r965, 25;
	mov.b64 	%rd1361, {%r972, %r971};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	xor.b64  	%rd1363, %rd1344, %rd1296;
	xor.b64  	%rd1364, %rd1344, %rd1320;
	and.b64  	%rd1365, %rd1364, %rd1363;
	xor.b64  	%rd1366, %rd1365, %rd1344;
	add.s64 	%rd1367, %rd1356, %rd1366;
	add.s64 	%rd1368, %rd1367, %rd1362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd1357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r974}, %rd1357;
	}
	shf.r.wrap.b32 	%r975, %r974, %r973, 14;
	shf.r.wrap.b32 	%r976, %r973, %r974, 14;
	mov.b64 	%rd1369, {%r976, %r975};
	shf.r.wrap.b32 	%r977, %r974, %r973, 18;
	shf.r.wrap.b32 	%r978, %r973, %r974, 18;
	mov.b64 	%rd1370, {%r978, %r977};
	xor.b64  	%rd1371, %rd1370, %rd1369;
	shf.l.wrap.b32 	%r979, %r973, %r974, 23;
	shf.l.wrap.b32 	%r980, %r974, %r973, 23;
	mov.b64 	%rd1372, {%r980, %r979};
	xor.b64  	%rd1373, %rd1371, %rd1372;
	xor.b64  	%rd1374, %rd1333, %rd1309;
	and.b64  	%rd1375, %rd1357, %rd1374;
	xor.b64  	%rd1376, %rd1375, %rd1309;
	add.s64 	%rd1377, %rd1285, %rd1107;
	add.s64 	%rd1378, %rd1377, %rd2749;
	add.s64 	%rd1379, %rd1378, %rd1376;
	add.s64 	%rd1380, %rd1379, %rd1373;
	add.s64 	%rd1381, %rd1380, %rd1296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd1368;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 28;
	shf.r.wrap.b32 	%r984, %r981, %r982, 28;
	mov.b64 	%rd1382, {%r984, %r983};
	shf.l.wrap.b32 	%r985, %r981, %r982, 30;
	shf.l.wrap.b32 	%r986, %r982, %r981, 30;
	mov.b64 	%rd1383, {%r986, %r985};
	xor.b64  	%rd1384, %rd1383, %rd1382;
	shf.l.wrap.b32 	%r987, %r981, %r982, 25;
	shf.l.wrap.b32 	%r988, %r982, %r981, 25;
	mov.b64 	%rd1385, {%r988, %r987};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	xor.b64  	%rd1387, %rd1368, %rd1320;
	xor.b64  	%rd1388, %rd1368, %rd1344;
	and.b64  	%rd1389, %rd1388, %rd1387;
	xor.b64  	%rd1390, %rd1389, %rd1368;
	add.s64 	%rd1391, %rd1380, %rd1390;
	add.s64 	%rd1392, %rd1391, %rd1386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd1381;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 14;
	shf.r.wrap.b32 	%r992, %r989, %r990, 14;
	mov.b64 	%rd1393, {%r992, %r991};
	shf.r.wrap.b32 	%r993, %r990, %r989, 18;
	shf.r.wrap.b32 	%r994, %r989, %r990, 18;
	mov.b64 	%rd1394, {%r994, %r993};
	xor.b64  	%rd1395, %rd1394, %rd1393;
	shf.l.wrap.b32 	%r995, %r989, %r990, 23;
	shf.l.wrap.b32 	%r996, %r990, %r989, 23;
	mov.b64 	%rd1396, {%r996, %r995};
	xor.b64  	%rd1397, %rd1395, %rd1396;
	xor.b64  	%rd1398, %rd1357, %rd1333;
	and.b64  	%rd1399, %rd1381, %rd1398;
	xor.b64  	%rd1400, %rd1399, %rd1333;
	add.s64 	%rd1401, %rd1309, %rd1120;
	add.s64 	%rd1402, %rd1401, %rd2750;
	add.s64 	%rd1403, %rd1402, %rd1400;
	add.s64 	%rd1404, %rd1403, %rd1397;
	add.s64 	%rd1405, %rd1404, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1392;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 28;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 28;
	mov.b64 	%rd1406, {%r1000, %r999};
	shf.l.wrap.b32 	%r1001, %r997, %r998, 30;
	shf.l.wrap.b32 	%r1002, %r998, %r997, 30;
	mov.b64 	%rd1407, {%r1002, %r1001};
	xor.b64  	%rd1408, %rd1407, %rd1406;
	shf.l.wrap.b32 	%r1003, %r997, %r998, 25;
	shf.l.wrap.b32 	%r1004, %r998, %r997, 25;
	mov.b64 	%rd1409, {%r1004, %r1003};
	xor.b64  	%rd1410, %rd1408, %rd1409;
	xor.b64  	%rd1411, %rd1392, %rd1344;
	xor.b64  	%rd1412, %rd1392, %rd1368;
	and.b64  	%rd1413, %rd1412, %rd1411;
	xor.b64  	%rd1414, %rd1413, %rd1392;
	add.s64 	%rd1415, %rd1404, %rd1414;
	add.s64 	%rd1416, %rd1415, %rd1410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1005,%dummy}, %rd1405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1006}, %rd1405;
	}
	shf.r.wrap.b32 	%r1007, %r1006, %r1005, 14;
	shf.r.wrap.b32 	%r1008, %r1005, %r1006, 14;
	mov.b64 	%rd1417, {%r1008, %r1007};
	shf.r.wrap.b32 	%r1009, %r1006, %r1005, 18;
	shf.r.wrap.b32 	%r1010, %r1005, %r1006, 18;
	mov.b64 	%rd1418, {%r1010, %r1009};
	xor.b64  	%rd1419, %rd1418, %rd1417;
	shf.l.wrap.b32 	%r1011, %r1005, %r1006, 23;
	shf.l.wrap.b32 	%r1012, %r1006, %r1005, 23;
	mov.b64 	%rd1420, {%r1012, %r1011};
	xor.b64  	%rd1421, %rd1419, %rd1420;
	xor.b64  	%rd1422, %rd1381, %rd1357;
	and.b64  	%rd1423, %rd1405, %rd1422;
	xor.b64  	%rd1424, %rd1423, %rd1357;
	add.s64 	%rd1425, %rd1333, %rd1133;
	add.s64 	%rd1426, %rd1425, %rd2751;
	add.s64 	%rd1427, %rd1426, %rd1424;
	add.s64 	%rd1428, %rd1427, %rd1421;
	add.s64 	%rd1429, %rd1428, %rd1344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1013,%dummy}, %rd1416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1014}, %rd1416;
	}
	shf.r.wrap.b32 	%r1015, %r1014, %r1013, 28;
	shf.r.wrap.b32 	%r1016, %r1013, %r1014, 28;
	mov.b64 	%rd1430, {%r1016, %r1015};
	shf.l.wrap.b32 	%r1017, %r1013, %r1014, 30;
	shf.l.wrap.b32 	%r1018, %r1014, %r1013, 30;
	mov.b64 	%rd1431, {%r1018, %r1017};
	xor.b64  	%rd1432, %rd1431, %rd1430;
	shf.l.wrap.b32 	%r1019, %r1013, %r1014, 25;
	shf.l.wrap.b32 	%r1020, %r1014, %r1013, 25;
	mov.b64 	%rd1433, {%r1020, %r1019};
	xor.b64  	%rd1434, %rd1432, %rd1433;
	xor.b64  	%rd1435, %rd1416, %rd1368;
	xor.b64  	%rd1436, %rd1416, %rd1392;
	and.b64  	%rd1437, %rd1436, %rd1435;
	xor.b64  	%rd1438, %rd1437, %rd1416;
	add.s64 	%rd1439, %rd1428, %rd1438;
	add.s64 	%rd1440, %rd1439, %rd1434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd1429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1022}, %rd1429;
	}
	shf.r.wrap.b32 	%r1023, %r1022, %r1021, 14;
	shf.r.wrap.b32 	%r1024, %r1021, %r1022, 14;
	mov.b64 	%rd1441, {%r1024, %r1023};
	shf.r.wrap.b32 	%r1025, %r1022, %r1021, 18;
	shf.r.wrap.b32 	%r1026, %r1021, %r1022, 18;
	mov.b64 	%rd1442, {%r1026, %r1025};
	xor.b64  	%rd1443, %rd1442, %rd1441;
	shf.l.wrap.b32 	%r1027, %r1021, %r1022, 23;
	shf.l.wrap.b32 	%r1028, %r1022, %r1021, 23;
	mov.b64 	%rd1444, {%r1028, %r1027};
	xor.b64  	%rd1445, %rd1443, %rd1444;
	xor.b64  	%rd1446, %rd1405, %rd1381;
	and.b64  	%rd1447, %rd1429, %rd1446;
	xor.b64  	%rd1448, %rd1447, %rd1381;
	add.s64 	%rd1449, %rd1357, %rd1146;
	add.s64 	%rd1450, %rd1449, %rd2752;
	add.s64 	%rd1451, %rd1450, %rd1448;
	add.s64 	%rd1452, %rd1451, %rd1445;
	add.s64 	%rd1453, %rd1452, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd1440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd1440;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 28;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 28;
	mov.b64 	%rd1454, {%r1032, %r1031};
	shf.l.wrap.b32 	%r1033, %r1029, %r1030, 30;
	shf.l.wrap.b32 	%r1034, %r1030, %r1029, 30;
	mov.b64 	%rd1455, {%r1034, %r1033};
	xor.b64  	%rd1456, %rd1455, %rd1454;
	shf.l.wrap.b32 	%r1035, %r1029, %r1030, 25;
	shf.l.wrap.b32 	%r1036, %r1030, %r1029, 25;
	mov.b64 	%rd1457, {%r1036, %r1035};
	xor.b64  	%rd1458, %rd1456, %rd1457;
	xor.b64  	%rd1459, %rd1440, %rd1392;
	xor.b64  	%rd1460, %rd1440, %rd1416;
	and.b64  	%rd1461, %rd1460, %rd1459;
	xor.b64  	%rd1462, %rd1461, %rd1440;
	add.s64 	%rd1463, %rd1452, %rd1462;
	add.s64 	%rd1464, %rd1463, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd1453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd1453;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 14;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 14;
	mov.b64 	%rd1465, {%r1040, %r1039};
	shf.r.wrap.b32 	%r1041, %r1038, %r1037, 18;
	shf.r.wrap.b32 	%r1042, %r1037, %r1038, 18;
	mov.b64 	%rd1466, {%r1042, %r1041};
	xor.b64  	%rd1467, %rd1466, %rd1465;
	shf.l.wrap.b32 	%r1043, %r1037, %r1038, 23;
	shf.l.wrap.b32 	%r1044, %r1038, %r1037, 23;
	mov.b64 	%rd1468, {%r1044, %r1043};
	xor.b64  	%rd1469, %rd1467, %rd1468;
	xor.b64  	%rd1470, %rd1429, %rd1405;
	and.b64  	%rd1471, %rd1453, %rd1470;
	xor.b64  	%rd1472, %rd1471, %rd1405;
	add.s64 	%rd1473, %rd1381, %rd1159;
	add.s64 	%rd1474, %rd1473, %rd2753;
	add.s64 	%rd1475, %rd1474, %rd1472;
	add.s64 	%rd1476, %rd1475, %rd1469;
	add.s64 	%rd1477, %rd1476, %rd1392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd1464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd1464;
	}
	shf.r.wrap.b32 	%r1047, %r1046, %r1045, 28;
	shf.r.wrap.b32 	%r1048, %r1045, %r1046, 28;
	mov.b64 	%rd1478, {%r1048, %r1047};
	shf.l.wrap.b32 	%r1049, %r1045, %r1046, 30;
	shf.l.wrap.b32 	%r1050, %r1046, %r1045, 30;
	mov.b64 	%rd1479, {%r1050, %r1049};
	xor.b64  	%rd1480, %rd1479, %rd1478;
	shf.l.wrap.b32 	%r1051, %r1045, %r1046, 25;
	shf.l.wrap.b32 	%r1052, %r1046, %r1045, 25;
	mov.b64 	%rd1481, {%r1052, %r1051};
	xor.b64  	%rd1482, %rd1480, %rd1481;
	xor.b64  	%rd1483, %rd1464, %rd1416;
	xor.b64  	%rd1484, %rd1464, %rd1440;
	and.b64  	%rd1485, %rd1484, %rd1483;
	xor.b64  	%rd1486, %rd1485, %rd1464;
	add.s64 	%rd1487, %rd1476, %rd1486;
	add.s64 	%rd1488, %rd1487, %rd1482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd1477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd1477;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 14;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 14;
	mov.b64 	%rd1489, {%r1056, %r1055};
	shf.r.wrap.b32 	%r1057, %r1054, %r1053, 18;
	shf.r.wrap.b32 	%r1058, %r1053, %r1054, 18;
	mov.b64 	%rd1490, {%r1058, %r1057};
	xor.b64  	%rd1491, %rd1490, %rd1489;
	shf.l.wrap.b32 	%r1059, %r1053, %r1054, 23;
	shf.l.wrap.b32 	%r1060, %r1054, %r1053, 23;
	mov.b64 	%rd1492, {%r1060, %r1059};
	xor.b64  	%rd1493, %rd1491, %rd1492;
	xor.b64  	%rd1494, %rd1453, %rd1429;
	and.b64  	%rd1495, %rd1477, %rd1494;
	xor.b64  	%rd1496, %rd1495, %rd1429;
	add.s64 	%rd1497, %rd1405, %rd1172;
	add.s64 	%rd1498, %rd1497, %rd2754;
	add.s64 	%rd1499, %rd1498, %rd1496;
	add.s64 	%rd1500, %rd1499, %rd1493;
	add.s64 	%rd1501, %rd1500, %rd1416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd1488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1062}, %rd1488;
	}
	shf.r.wrap.b32 	%r1063, %r1062, %r1061, 28;
	shf.r.wrap.b32 	%r1064, %r1061, %r1062, 28;
	mov.b64 	%rd1502, {%r1064, %r1063};
	shf.l.wrap.b32 	%r1065, %r1061, %r1062, 30;
	shf.l.wrap.b32 	%r1066, %r1062, %r1061, 30;
	mov.b64 	%rd1503, {%r1066, %r1065};
	xor.b64  	%rd1504, %rd1503, %rd1502;
	shf.l.wrap.b32 	%r1067, %r1061, %r1062, 25;
	shf.l.wrap.b32 	%r1068, %r1062, %r1061, 25;
	mov.b64 	%rd1505, {%r1068, %r1067};
	xor.b64  	%rd1506, %rd1504, %rd1505;
	xor.b64  	%rd1507, %rd1488, %rd1440;
	xor.b64  	%rd1508, %rd1488, %rd1464;
	and.b64  	%rd1509, %rd1508, %rd1507;
	xor.b64  	%rd1510, %rd1509, %rd1488;
	add.s64 	%rd1511, %rd1500, %rd1510;
	add.s64 	%rd1512, %rd1511, %rd1506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd1501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd1501;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 14;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 14;
	mov.b64 	%rd1513, {%r1072, %r1071};
	shf.r.wrap.b32 	%r1073, %r1070, %r1069, 18;
	shf.r.wrap.b32 	%r1074, %r1069, %r1070, 18;
	mov.b64 	%rd1514, {%r1074, %r1073};
	xor.b64  	%rd1515, %rd1514, %rd1513;
	shf.l.wrap.b32 	%r1075, %r1069, %r1070, 23;
	shf.l.wrap.b32 	%r1076, %r1070, %r1069, 23;
	mov.b64 	%rd1516, {%r1076, %r1075};
	xor.b64  	%rd1517, %rd1515, %rd1516;
	xor.b64  	%rd1518, %rd1477, %rd1453;
	and.b64  	%rd1519, %rd1501, %rd1518;
	xor.b64  	%rd1520, %rd1519, %rd1453;
	add.s64 	%rd1521, %rd1429, %rd1185;
	add.s64 	%rd1522, %rd1521, %rd2755;
	add.s64 	%rd1523, %rd1522, %rd1520;
	add.s64 	%rd1524, %rd1523, %rd1517;
	add.s64 	%rd1525, %rd1524, %rd1440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd1512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd1512;
	}
	shf.r.wrap.b32 	%r1079, %r1078, %r1077, 28;
	shf.r.wrap.b32 	%r1080, %r1077, %r1078, 28;
	mov.b64 	%rd1526, {%r1080, %r1079};
	shf.l.wrap.b32 	%r1081, %r1077, %r1078, 30;
	shf.l.wrap.b32 	%r1082, %r1078, %r1077, 30;
	mov.b64 	%rd1527, {%r1082, %r1081};
	xor.b64  	%rd1528, %rd1527, %rd1526;
	shf.l.wrap.b32 	%r1083, %r1077, %r1078, 25;
	shf.l.wrap.b32 	%r1084, %r1078, %r1077, 25;
	mov.b64 	%rd1529, {%r1084, %r1083};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	xor.b64  	%rd1531, %rd1512, %rd1464;
	xor.b64  	%rd1532, %rd1512, %rd1488;
	and.b64  	%rd1533, %rd1532, %rd1531;
	xor.b64  	%rd1534, %rd1533, %rd1512;
	add.s64 	%rd1535, %rd1524, %rd1534;
	add.s64 	%rd1536, %rd1535, %rd1530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1085,%dummy}, %rd1525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1086}, %rd1525;
	}
	shf.r.wrap.b32 	%r1087, %r1086, %r1085, 14;
	shf.r.wrap.b32 	%r1088, %r1085, %r1086, 14;
	mov.b64 	%rd1537, {%r1088, %r1087};
	shf.r.wrap.b32 	%r1089, %r1086, %r1085, 18;
	shf.r.wrap.b32 	%r1090, %r1085, %r1086, 18;
	mov.b64 	%rd1538, {%r1090, %r1089};
	xor.b64  	%rd1539, %rd1538, %rd1537;
	shf.l.wrap.b32 	%r1091, %r1085, %r1086, 23;
	shf.l.wrap.b32 	%r1092, %r1086, %r1085, 23;
	mov.b64 	%rd1540, {%r1092, %r1091};
	xor.b64  	%rd1541, %rd1539, %rd1540;
	xor.b64  	%rd1542, %rd1501, %rd1477;
	and.b64  	%rd1543, %rd1525, %rd1542;
	xor.b64  	%rd1544, %rd1543, %rd1477;
	add.s64 	%rd1545, %rd1453, %rd1198;
	add.s64 	%rd1546, %rd1545, %rd2756;
	add.s64 	%rd1547, %rd1546, %rd1544;
	add.s64 	%rd1548, %rd1547, %rd1541;
	add.s64 	%rd1549, %rd1548, %rd1464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1093,%dummy}, %rd1536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1094}, %rd1536;
	}
	shf.r.wrap.b32 	%r1095, %r1094, %r1093, 28;
	shf.r.wrap.b32 	%r1096, %r1093, %r1094, 28;
	mov.b64 	%rd1550, {%r1096, %r1095};
	shf.l.wrap.b32 	%r1097, %r1093, %r1094, 30;
	shf.l.wrap.b32 	%r1098, %r1094, %r1093, 30;
	mov.b64 	%rd1551, {%r1098, %r1097};
	xor.b64  	%rd1552, %rd1551, %rd1550;
	shf.l.wrap.b32 	%r1099, %r1093, %r1094, 25;
	shf.l.wrap.b32 	%r1100, %r1094, %r1093, 25;
	mov.b64 	%rd1553, {%r1100, %r1099};
	xor.b64  	%rd1554, %rd1552, %rd1553;
	xor.b64  	%rd1555, %rd1536, %rd1488;
	xor.b64  	%rd1556, %rd1536, %rd1512;
	and.b64  	%rd1557, %rd1556, %rd1555;
	xor.b64  	%rd1558, %rd1557, %rd1536;
	add.s64 	%rd1559, %rd1548, %rd1558;
	add.s64 	%rd1560, %rd1559, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd1549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd1549;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 14;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 14;
	mov.b64 	%rd1561, {%r1104, %r1103};
	shf.r.wrap.b32 	%r1105, %r1102, %r1101, 18;
	shf.r.wrap.b32 	%r1106, %r1101, %r1102, 18;
	mov.b64 	%rd1562, {%r1106, %r1105};
	xor.b64  	%rd1563, %rd1562, %rd1561;
	shf.l.wrap.b32 	%r1107, %r1101, %r1102, 23;
	shf.l.wrap.b32 	%r1108, %r1102, %r1101, 23;
	mov.b64 	%rd1564, {%r1108, %r1107};
	xor.b64  	%rd1565, %rd1563, %rd1564;
	xor.b64  	%rd1566, %rd1525, %rd1501;
	and.b64  	%rd1567, %rd1549, %rd1566;
	xor.b64  	%rd1568, %rd1567, %rd1501;
	add.s64 	%rd1569, %rd1477, %rd1211;
	add.s64 	%rd1570, %rd1569, %rd2757;
	add.s64 	%rd1571, %rd1570, %rd1568;
	add.s64 	%rd1572, %rd1571, %rd1565;
	add.s64 	%rd1573, %rd1572, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd1560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd1560;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 28;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 28;
	mov.b64 	%rd1574, {%r1112, %r1111};
	shf.l.wrap.b32 	%r1113, %r1109, %r1110, 30;
	shf.l.wrap.b32 	%r1114, %r1110, %r1109, 30;
	mov.b64 	%rd1575, {%r1114, %r1113};
	xor.b64  	%rd1576, %rd1575, %rd1574;
	shf.l.wrap.b32 	%r1115, %r1109, %r1110, 25;
	shf.l.wrap.b32 	%r1116, %r1110, %r1109, 25;
	mov.b64 	%rd1577, {%r1116, %r1115};
	xor.b64  	%rd1578, %rd1576, %rd1577;
	xor.b64  	%rd1579, %rd1560, %rd1512;
	xor.b64  	%rd1580, %rd1560, %rd1536;
	and.b64  	%rd1581, %rd1580, %rd1579;
	xor.b64  	%rd1582, %rd1581, %rd1560;
	add.s64 	%rd1583, %rd1572, %rd1582;
	add.s64 	%rd1584, %rd1583, %rd1578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1117,%dummy}, %rd1573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1118}, %rd1573;
	}
	shf.r.wrap.b32 	%r1119, %r1118, %r1117, 14;
	shf.r.wrap.b32 	%r1120, %r1117, %r1118, 14;
	mov.b64 	%rd1585, {%r1120, %r1119};
	shf.r.wrap.b32 	%r1121, %r1118, %r1117, 18;
	shf.r.wrap.b32 	%r1122, %r1117, %r1118, 18;
	mov.b64 	%rd1586, {%r1122, %r1121};
	xor.b64  	%rd1587, %rd1586, %rd1585;
	shf.l.wrap.b32 	%r1123, %r1117, %r1118, 23;
	shf.l.wrap.b32 	%r1124, %r1118, %r1117, 23;
	mov.b64 	%rd1588, {%r1124, %r1123};
	xor.b64  	%rd1589, %rd1587, %rd1588;
	xor.b64  	%rd1590, %rd1549, %rd1525;
	and.b64  	%rd1591, %rd1573, %rd1590;
	xor.b64  	%rd1592, %rd1591, %rd1525;
	add.s64 	%rd1593, %rd1501, %rd1224;
	add.s64 	%rd1594, %rd1593, %rd2758;
	add.s64 	%rd1595, %rd1594, %rd1592;
	add.s64 	%rd1596, %rd1595, %rd1589;
	add.s64 	%rd1597, %rd1596, %rd1512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd1584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd1584;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 28;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 28;
	mov.b64 	%rd1598, {%r1128, %r1127};
	shf.l.wrap.b32 	%r1129, %r1125, %r1126, 30;
	shf.l.wrap.b32 	%r1130, %r1126, %r1125, 30;
	mov.b64 	%rd1599, {%r1130, %r1129};
	xor.b64  	%rd1600, %rd1599, %rd1598;
	shf.l.wrap.b32 	%r1131, %r1125, %r1126, 25;
	shf.l.wrap.b32 	%r1132, %r1126, %r1125, 25;
	mov.b64 	%rd1601, {%r1132, %r1131};
	xor.b64  	%rd1602, %rd1600, %rd1601;
	xor.b64  	%rd1603, %rd1584, %rd1536;
	xor.b64  	%rd1604, %rd1584, %rd1560;
	and.b64  	%rd1605, %rd1604, %rd1603;
	xor.b64  	%rd1606, %rd1605, %rd1584;
	add.s64 	%rd1607, %rd1596, %rd1606;
	add.s64 	%rd1608, %rd1607, %rd1602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1133,%dummy}, %rd1211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1134}, %rd1211;
	}
	shf.r.wrap.b32 	%r1135, %r1134, %r1133, 19;
	shf.r.wrap.b32 	%r1136, %r1133, %r1134, 19;
	mov.b64 	%rd1609, {%r1136, %r1135};
	shf.l.wrap.b32 	%r1137, %r1133, %r1134, 3;
	shf.l.wrap.b32 	%r1138, %r1134, %r1133, 3;
	mov.b64 	%rd1610, {%r1138, %r1137};
	shr.u64 	%rd1611, %rd1211, 6;
	xor.b64  	%rd1612, %rd1609, %rd1611;
	xor.b64  	%rd1613, %rd1612, %rd1610;
	shf.r.wrap.b32 	%r1139, %r752, %r751, 1;
	shf.r.wrap.b32 	%r1140, %r751, %r752, 1;
	mov.b64 	%rd1614, {%r1140, %r1139};
	shf.r.wrap.b32 	%r1141, %r752, %r751, 8;
	shf.r.wrap.b32 	%r1142, %r751, %r752, 8;
	mov.b64 	%rd1615, {%r1142, %r1141};
	shr.u64 	%rd1616, %rd1052, 7;
	xor.b64  	%rd1617, %rd1614, %rd1616;
	xor.b64  	%rd1618, %rd1617, %rd1615;
	add.s64 	%rd1619, %rd1039, %rd1146;
	add.s64 	%rd1620, %rd1619, %rd1613;
	add.s64 	%rd1621, %rd1620, %rd1618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1143,%dummy}, %rd1224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1144}, %rd1224;
	}
	shf.r.wrap.b32 	%r1145, %r1144, %r1143, 19;
	shf.r.wrap.b32 	%r1146, %r1143, %r1144, 19;
	mov.b64 	%rd1622, {%r1146, %r1145};
	shf.l.wrap.b32 	%r1147, %r1143, %r1144, 3;
	shf.l.wrap.b32 	%r1148, %r1144, %r1143, 3;
	mov.b64 	%rd1623, {%r1148, %r1147};
	shr.u64 	%rd1624, %rd1224, 6;
	xor.b64  	%rd1625, %rd1622, %rd1624;
	xor.b64  	%rd1626, %rd1625, %rd1623;
	shf.r.wrap.b32 	%r1149, %r762, %r761, 1;
	shf.r.wrap.b32 	%r1150, %r761, %r762, 1;
	mov.b64 	%rd1627, {%r1150, %r1149};
	shf.r.wrap.b32 	%r1151, %r762, %r761, 8;
	shf.r.wrap.b32 	%r1152, %r761, %r762, 8;
	mov.b64 	%rd1628, {%r1152, %r1151};
	shr.u64 	%rd1629, %rd1060, 7;
	xor.b64  	%rd1630, %rd1627, %rd1629;
	xor.b64  	%rd1631, %rd1630, %rd1628;
	add.s64 	%rd1632, %rd1052, %rd1159;
	add.s64 	%rd1633, %rd1632, %rd1626;
	add.s64 	%rd1634, %rd1633, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1153,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1154}, %rd1621;
	}
	shf.r.wrap.b32 	%r1155, %r1154, %r1153, 19;
	shf.r.wrap.b32 	%r1156, %r1153, %r1154, 19;
	mov.b64 	%rd1635, {%r1156, %r1155};
	shf.l.wrap.b32 	%r1157, %r1153, %r1154, 3;
	shf.l.wrap.b32 	%r1158, %r1154, %r1153, 3;
	mov.b64 	%rd1636, {%r1158, %r1157};
	shr.u64 	%rd1637, %rd1621, 6;
	xor.b64  	%rd1638, %rd1635, %rd1637;
	xor.b64  	%rd1639, %rd1638, %rd1636;
	shf.r.wrap.b32 	%r1159, %r768, %r767, 1;
	shf.r.wrap.b32 	%r1160, %r767, %r768, 1;
	mov.b64 	%rd1640, {%r1160, %r1159};
	shf.r.wrap.b32 	%r1161, %r768, %r767, 8;
	shf.r.wrap.b32 	%r1162, %r767, %r768, 8;
	mov.b64 	%rd1641, {%r1162, %r1161};
	shr.u64 	%rd1642, %rd1073, 7;
	xor.b64  	%rd1643, %rd1640, %rd1642;
	xor.b64  	%rd1644, %rd1643, %rd1641;
	add.s64 	%rd1645, %rd1060, %rd1172;
	add.s64 	%rd1646, %rd1645, %rd1639;
	add.s64 	%rd1647, %rd1646, %rd1644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1163,%dummy}, %rd1634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1164}, %rd1634;
	}
	shf.r.wrap.b32 	%r1165, %r1164, %r1163, 19;
	shf.r.wrap.b32 	%r1166, %r1163, %r1164, 19;
	mov.b64 	%rd1648, {%r1166, %r1165};
	shf.l.wrap.b32 	%r1167, %r1163, %r1164, 3;
	shf.l.wrap.b32 	%r1168, %r1164, %r1163, 3;
	mov.b64 	%rd1649, {%r1168, %r1167};
	shr.u64 	%rd1650, %rd1634, 6;
	xor.b64  	%rd1651, %rd1648, %rd1650;
	xor.b64  	%rd1652, %rd1651, %rd1649;
	shf.r.wrap.b32 	%r1169, %r778, %r777, 1;
	shf.r.wrap.b32 	%r1170, %r777, %r778, 1;
	mov.b64 	%rd1653, {%r1170, %r1169};
	shf.r.wrap.b32 	%r1171, %r778, %r777, 8;
	shf.r.wrap.b32 	%r1172, %r777, %r778, 8;
	mov.b64 	%rd1654, {%r1172, %r1171};
	shr.u64 	%rd1655, %rd1081, 7;
	xor.b64  	%rd1656, %rd1653, %rd1655;
	xor.b64  	%rd1657, %rd1656, %rd1654;
	add.s64 	%rd1658, %rd1073, %rd1185;
	add.s64 	%rd1659, %rd1658, %rd1652;
	add.s64 	%rd1660, %rd1659, %rd1657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1647;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 19;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 19;
	mov.b64 	%rd1661, {%r1176, %r1175};
	shf.l.wrap.b32 	%r1177, %r1173, %r1174, 3;
	shf.l.wrap.b32 	%r1178, %r1174, %r1173, 3;
	mov.b64 	%rd1662, {%r1178, %r1177};
	shr.u64 	%rd1663, %rd1647, 6;
	xor.b64  	%rd1664, %rd1661, %rd1663;
	xor.b64  	%rd1665, %rd1664, %rd1662;
	shf.r.wrap.b32 	%r1179, %r788, %r787, 1;
	shf.r.wrap.b32 	%r1180, %r787, %r788, 1;
	mov.b64 	%rd1666, {%r1180, %r1179};
	shf.r.wrap.b32 	%r1181, %r788, %r787, 8;
	shf.r.wrap.b32 	%r1182, %r787, %r788, 8;
	mov.b64 	%rd1667, {%r1182, %r1181};
	shr.u64 	%rd1668, %rd1094, 7;
	xor.b64  	%rd1669, %rd1666, %rd1668;
	xor.b64  	%rd1670, %rd1669, %rd1667;
	add.s64 	%rd1671, %rd1081, %rd1198;
	add.s64 	%rd1672, %rd1671, %rd1665;
	add.s64 	%rd1673, %rd1672, %rd1670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1183,%dummy}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1184}, %rd1660;
	}
	shf.r.wrap.b32 	%r1185, %r1184, %r1183, 19;
	shf.r.wrap.b32 	%r1186, %r1183, %r1184, 19;
	mov.b64 	%rd1674, {%r1186, %r1185};
	shf.l.wrap.b32 	%r1187, %r1183, %r1184, 3;
	shf.l.wrap.b32 	%r1188, %r1184, %r1183, 3;
	mov.b64 	%rd1675, {%r1188, %r1187};
	shr.u64 	%rd1676, %rd1660, 6;
	xor.b64  	%rd1677, %rd1674, %rd1676;
	xor.b64  	%rd1678, %rd1677, %rd1675;
	shf.r.wrap.b32 	%r1189, %r798, %r797, 1;
	shf.r.wrap.b32 	%r1190, %r797, %r798, 1;
	mov.b64 	%rd1679, {%r1190, %r1189};
	shf.r.wrap.b32 	%r1191, %r798, %r797, 8;
	shf.r.wrap.b32 	%r1192, %r797, %r798, 8;
	mov.b64 	%rd1680, {%r1192, %r1191};
	shr.u64 	%rd1681, %rd1107, 7;
	xor.b64  	%rd1682, %rd1679, %rd1681;
	xor.b64  	%rd1683, %rd1682, %rd1680;
	add.s64 	%rd1684, %rd1094, %rd1211;
	add.s64 	%rd1685, %rd1684, %rd1678;
	add.s64 	%rd1686, %rd1685, %rd1683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1193,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1194}, %rd1673;
	}
	shf.r.wrap.b32 	%r1195, %r1194, %r1193, 19;
	shf.r.wrap.b32 	%r1196, %r1193, %r1194, 19;
	mov.b64 	%rd1687, {%r1196, %r1195};
	shf.l.wrap.b32 	%r1197, %r1193, %r1194, 3;
	shf.l.wrap.b32 	%r1198, %r1194, %r1193, 3;
	mov.b64 	%rd1688, {%r1198, %r1197};
	shr.u64 	%rd1689, %rd1673, 6;
	xor.b64  	%rd1690, %rd1687, %rd1689;
	xor.b64  	%rd1691, %rd1690, %rd1688;
	shf.r.wrap.b32 	%r1199, %r808, %r807, 1;
	shf.r.wrap.b32 	%r1200, %r807, %r808, 1;
	mov.b64 	%rd1692, {%r1200, %r1199};
	shf.r.wrap.b32 	%r1201, %r808, %r807, 8;
	shf.r.wrap.b32 	%r1202, %r807, %r808, 8;
	mov.b64 	%rd1693, {%r1202, %r1201};
	shr.u64 	%rd1694, %rd1120, 7;
	xor.b64  	%rd1695, %rd1692, %rd1694;
	xor.b64  	%rd1696, %rd1695, %rd1693;
	add.s64 	%rd1697, %rd1107, %rd1224;
	add.s64 	%rd1698, %rd1697, %rd1691;
	add.s64 	%rd1699, %rd1698, %rd1696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1203,%dummy}, %rd1686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1204}, %rd1686;
	}
	shf.r.wrap.b32 	%r1205, %r1204, %r1203, 19;
	shf.r.wrap.b32 	%r1206, %r1203, %r1204, 19;
	mov.b64 	%rd1700, {%r1206, %r1205};
	shf.l.wrap.b32 	%r1207, %r1203, %r1204, 3;
	shf.l.wrap.b32 	%r1208, %r1204, %r1203, 3;
	mov.b64 	%rd1701, {%r1208, %r1207};
	shr.u64 	%rd1702, %rd1686, 6;
	xor.b64  	%rd1703, %rd1700, %rd1702;
	xor.b64  	%rd1704, %rd1703, %rd1701;
	shf.r.wrap.b32 	%r1209, %r818, %r817, 1;
	shf.r.wrap.b32 	%r1210, %r817, %r818, 1;
	mov.b64 	%rd1705, {%r1210, %r1209};
	shf.r.wrap.b32 	%r1211, %r818, %r817, 8;
	shf.r.wrap.b32 	%r1212, %r817, %r818, 8;
	mov.b64 	%rd1706, {%r1212, %r1211};
	shr.u64 	%rd1707, %rd1133, 7;
	xor.b64  	%rd1708, %rd1705, %rd1707;
	xor.b64  	%rd1709, %rd1708, %rd1706;
	add.s64 	%rd1710, %rd1621, %rd1120;
	add.s64 	%rd1711, %rd1710, %rd1704;
	add.s64 	%rd1712, %rd1711, %rd1709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd1699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd1699;
	}
	shf.r.wrap.b32 	%r1215, %r1214, %r1213, 19;
	shf.r.wrap.b32 	%r1216, %r1213, %r1214, 19;
	mov.b64 	%rd1713, {%r1216, %r1215};
	shf.l.wrap.b32 	%r1217, %r1213, %r1214, 3;
	shf.l.wrap.b32 	%r1218, %r1214, %r1213, 3;
	mov.b64 	%rd1714, {%r1218, %r1217};
	shr.u64 	%rd1715, %rd1699, 6;
	xor.b64  	%rd1716, %rd1713, %rd1715;
	xor.b64  	%rd1717, %rd1716, %rd1714;
	shf.r.wrap.b32 	%r1219, %r828, %r827, 1;
	shf.r.wrap.b32 	%r1220, %r827, %r828, 1;
	mov.b64 	%rd1718, {%r1220, %r1219};
	shf.r.wrap.b32 	%r1221, %r828, %r827, 8;
	shf.r.wrap.b32 	%r1222, %r827, %r828, 8;
	mov.b64 	%rd1719, {%r1222, %r1221};
	shr.u64 	%rd1720, %rd1146, 7;
	xor.b64  	%rd1721, %rd1718, %rd1720;
	xor.b64  	%rd1722, %rd1721, %rd1719;
	add.s64 	%rd1723, %rd1634, %rd1133;
	add.s64 	%rd1724, %rd1723, %rd1717;
	add.s64 	%rd1725, %rd1724, %rd1722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1223,%dummy}, %rd1712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1224}, %rd1712;
	}
	shf.r.wrap.b32 	%r1225, %r1224, %r1223, 19;
	shf.r.wrap.b32 	%r1226, %r1223, %r1224, 19;
	mov.b64 	%rd1726, {%r1226, %r1225};
	shf.l.wrap.b32 	%r1227, %r1223, %r1224, 3;
	shf.l.wrap.b32 	%r1228, %r1224, %r1223, 3;
	mov.b64 	%rd1727, {%r1228, %r1227};
	shr.u64 	%rd1728, %rd1712, 6;
	xor.b64  	%rd1729, %rd1726, %rd1728;
	xor.b64  	%rd1730, %rd1729, %rd1727;
	shf.r.wrap.b32 	%r1229, %r838, %r837, 1;
	shf.r.wrap.b32 	%r1230, %r837, %r838, 1;
	mov.b64 	%rd1731, {%r1230, %r1229};
	shf.r.wrap.b32 	%r1231, %r838, %r837, 8;
	shf.r.wrap.b32 	%r1232, %r837, %r838, 8;
	mov.b64 	%rd1732, {%r1232, %r1231};
	shr.u64 	%rd1733, %rd1159, 7;
	xor.b64  	%rd1734, %rd1731, %rd1733;
	xor.b64  	%rd1735, %rd1734, %rd1732;
	add.s64 	%rd1736, %rd1647, %rd1146;
	add.s64 	%rd1737, %rd1736, %rd1730;
	add.s64 	%rd1738, %rd1737, %rd1735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd1725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd1725;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 19;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 19;
	mov.b64 	%rd1739, {%r1236, %r1235};
	shf.l.wrap.b32 	%r1237, %r1233, %r1234, 3;
	shf.l.wrap.b32 	%r1238, %r1234, %r1233, 3;
	mov.b64 	%rd1740, {%r1238, %r1237};
	shr.u64 	%rd1741, %rd1725, 6;
	xor.b64  	%rd1742, %rd1739, %rd1741;
	xor.b64  	%rd1743, %rd1742, %rd1740;
	shf.r.wrap.b32 	%r1239, %r848, %r847, 1;
	shf.r.wrap.b32 	%r1240, %r847, %r848, 1;
	mov.b64 	%rd1744, {%r1240, %r1239};
	shf.r.wrap.b32 	%r1241, %r848, %r847, 8;
	shf.r.wrap.b32 	%r1242, %r847, %r848, 8;
	mov.b64 	%rd1745, {%r1242, %r1241};
	shr.u64 	%rd1746, %rd1172, 7;
	xor.b64  	%rd1747, %rd1744, %rd1746;
	xor.b64  	%rd1748, %rd1747, %rd1745;
	add.s64 	%rd1749, %rd1660, %rd1159;
	add.s64 	%rd1750, %rd1749, %rd1743;
	add.s64 	%rd1751, %rd1750, %rd1748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1243,%dummy}, %rd1738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1244}, %rd1738;
	}
	shf.r.wrap.b32 	%r1245, %r1244, %r1243, 19;
	shf.r.wrap.b32 	%r1246, %r1243, %r1244, 19;
	mov.b64 	%rd1752, {%r1246, %r1245};
	shf.l.wrap.b32 	%r1247, %r1243, %r1244, 3;
	shf.l.wrap.b32 	%r1248, %r1244, %r1243, 3;
	mov.b64 	%rd1753, {%r1248, %r1247};
	shr.u64 	%rd1754, %rd1738, 6;
	xor.b64  	%rd1755, %rd1752, %rd1754;
	xor.b64  	%rd1756, %rd1755, %rd1753;
	shf.r.wrap.b32 	%r1249, %r858, %r857, 1;
	shf.r.wrap.b32 	%r1250, %r857, %r858, 1;
	mov.b64 	%rd1757, {%r1250, %r1249};
	shf.r.wrap.b32 	%r1251, %r858, %r857, 8;
	shf.r.wrap.b32 	%r1252, %r857, %r858, 8;
	mov.b64 	%rd1758, {%r1252, %r1251};
	shr.u64 	%rd1759, %rd1185, 7;
	xor.b64  	%rd1760, %rd1757, %rd1759;
	xor.b64  	%rd1761, %rd1760, %rd1758;
	add.s64 	%rd1762, %rd1673, %rd1172;
	add.s64 	%rd1763, %rd1762, %rd1756;
	add.s64 	%rd1764, %rd1763, %rd1761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd1751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd1751;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 19;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 19;
	mov.b64 	%rd1765, {%r1256, %r1255};
	shf.l.wrap.b32 	%r1257, %r1253, %r1254, 3;
	shf.l.wrap.b32 	%r1258, %r1254, %r1253, 3;
	mov.b64 	%rd1766, {%r1258, %r1257};
	shr.u64 	%rd1767, %rd1751, 6;
	xor.b64  	%rd1768, %rd1765, %rd1767;
	xor.b64  	%rd1769, %rd1768, %rd1766;
	shf.r.wrap.b32 	%r1259, %r868, %r867, 1;
	shf.r.wrap.b32 	%r1260, %r867, %r868, 1;
	mov.b64 	%rd1770, {%r1260, %r1259};
	shf.r.wrap.b32 	%r1261, %r868, %r867, 8;
	shf.r.wrap.b32 	%r1262, %r867, %r868, 8;
	mov.b64 	%rd1771, {%r1262, %r1261};
	shr.u64 	%rd1772, %rd1198, 7;
	xor.b64  	%rd1773, %rd1770, %rd1772;
	xor.b64  	%rd1774, %rd1773, %rd1771;
	add.s64 	%rd1775, %rd1686, %rd1185;
	add.s64 	%rd1776, %rd1775, %rd1769;
	add.s64 	%rd1777, %rd1776, %rd1774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1263,%dummy}, %rd1764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1264}, %rd1764;
	}
	shf.r.wrap.b32 	%r1265, %r1264, %r1263, 19;
	shf.r.wrap.b32 	%r1266, %r1263, %r1264, 19;
	mov.b64 	%rd1778, {%r1266, %r1265};
	shf.l.wrap.b32 	%r1267, %r1263, %r1264, 3;
	shf.l.wrap.b32 	%r1268, %r1264, %r1263, 3;
	mov.b64 	%rd1779, {%r1268, %r1267};
	shr.u64 	%rd1780, %rd1764, 6;
	xor.b64  	%rd1781, %rd1778, %rd1780;
	xor.b64  	%rd1782, %rd1781, %rd1779;
	shf.r.wrap.b32 	%r1269, %r1134, %r1133, 1;
	shf.r.wrap.b32 	%r1270, %r1133, %r1134, 1;
	mov.b64 	%rd1783, {%r1270, %r1269};
	shf.r.wrap.b32 	%r1271, %r1134, %r1133, 8;
	shf.r.wrap.b32 	%r1272, %r1133, %r1134, 8;
	mov.b64 	%rd1784, {%r1272, %r1271};
	shr.u64 	%rd1785, %rd1211, 7;
	xor.b64  	%rd1786, %rd1783, %rd1785;
	xor.b64  	%rd1787, %rd1786, %rd1784;
	add.s64 	%rd1788, %rd1699, %rd1198;
	add.s64 	%rd1789, %rd1788, %rd1782;
	add.s64 	%rd1790, %rd1789, %rd1787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1273,%dummy}, %rd1777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1274}, %rd1777;
	}
	shf.r.wrap.b32 	%r1275, %r1274, %r1273, 19;
	shf.r.wrap.b32 	%r1276, %r1273, %r1274, 19;
	mov.b64 	%rd1791, {%r1276, %r1275};
	shf.l.wrap.b32 	%r1277, %r1273, %r1274, 3;
	shf.l.wrap.b32 	%r1278, %r1274, %r1273, 3;
	mov.b64 	%rd1792, {%r1278, %r1277};
	shr.u64 	%rd1793, %rd1777, 6;
	xor.b64  	%rd1794, %rd1791, %rd1793;
	xor.b64  	%rd1795, %rd1794, %rd1792;
	shf.r.wrap.b32 	%r1279, %r1144, %r1143, 1;
	shf.r.wrap.b32 	%r1280, %r1143, %r1144, 1;
	mov.b64 	%rd1796, {%r1280, %r1279};
	shf.r.wrap.b32 	%r1281, %r1144, %r1143, 8;
	shf.r.wrap.b32 	%r1282, %r1143, %r1144, 8;
	mov.b64 	%rd1797, {%r1282, %r1281};
	shr.u64 	%rd1798, %rd1224, 7;
	xor.b64  	%rd1799, %rd1796, %rd1798;
	xor.b64  	%rd1800, %rd1799, %rd1797;
	add.s64 	%rd1801, %rd1712, %rd1211;
	add.s64 	%rd1802, %rd1801, %rd1795;
	add.s64 	%rd1803, %rd1802, %rd1800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1283,%dummy}, %rd1790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1284}, %rd1790;
	}
	shf.r.wrap.b32 	%r1285, %r1284, %r1283, 19;
	shf.r.wrap.b32 	%r1286, %r1283, %r1284, 19;
	mov.b64 	%rd1804, {%r1286, %r1285};
	shf.l.wrap.b32 	%r1287, %r1283, %r1284, 3;
	shf.l.wrap.b32 	%r1288, %r1284, %r1283, 3;
	mov.b64 	%rd1805, {%r1288, %r1287};
	shr.u64 	%rd1806, %rd1790, 6;
	xor.b64  	%rd1807, %rd1804, %rd1806;
	xor.b64  	%rd1808, %rd1807, %rd1805;
	shf.r.wrap.b32 	%r1289, %r1154, %r1153, 1;
	shf.r.wrap.b32 	%r1290, %r1153, %r1154, 1;
	mov.b64 	%rd1809, {%r1290, %r1289};
	shf.r.wrap.b32 	%r1291, %r1154, %r1153, 8;
	shf.r.wrap.b32 	%r1292, %r1153, %r1154, 8;
	mov.b64 	%rd1810, {%r1292, %r1291};
	shr.u64 	%rd1811, %rd1621, 7;
	xor.b64  	%rd1812, %rd1809, %rd1811;
	xor.b64  	%rd1813, %rd1812, %rd1810;
	add.s64 	%rd1814, %rd1725, %rd1224;
	add.s64 	%rd1815, %rd1814, %rd1808;
	add.s64 	%rd1816, %rd1815, %rd1813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd1597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1597;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 14;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 14;
	mov.b64 	%rd1817, {%r1296, %r1295};
	shf.r.wrap.b32 	%r1297, %r1294, %r1293, 18;
	shf.r.wrap.b32 	%r1298, %r1293, %r1294, 18;
	mov.b64 	%rd1818, {%r1298, %r1297};
	xor.b64  	%rd1819, %rd1818, %rd1817;
	shf.l.wrap.b32 	%r1299, %r1293, %r1294, 23;
	shf.l.wrap.b32 	%r1300, %r1294, %r1293, 23;
	mov.b64 	%rd1820, {%r1300, %r1299};
	xor.b64  	%rd1821, %rd1819, %rd1820;
	xor.b64  	%rd1822, %rd1549, %rd1573;
	and.b64  	%rd1823, %rd1822, %rd1597;
	xor.b64  	%rd1824, %rd1823, %rd1549;
	add.s64 	%rd1825, %rd1824, %rd1525;
	add.s64 	%rd1826, %rd1825, %rd1621;
	add.s64 	%rd1827, %rd1826, %rd2759;
	add.s64 	%rd1828, %rd1827, %rd1821;
	add.s64 	%rd1829, %rd1828, %rd1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd1608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd1608;
	}
	shf.r.wrap.b32 	%r1303, %r1302, %r1301, 28;
	shf.r.wrap.b32 	%r1304, %r1301, %r1302, 28;
	mov.b64 	%rd1830, {%r1304, %r1303};
	shf.l.wrap.b32 	%r1305, %r1301, %r1302, 30;
	shf.l.wrap.b32 	%r1306, %r1302, %r1301, 30;
	mov.b64 	%rd1831, {%r1306, %r1305};
	xor.b64  	%rd1832, %rd1831, %rd1830;
	shf.l.wrap.b32 	%r1307, %r1301, %r1302, 25;
	shf.l.wrap.b32 	%r1308, %r1302, %r1301, 25;
	mov.b64 	%rd1833, {%r1308, %r1307};
	xor.b64  	%rd1834, %rd1832, %rd1833;
	xor.b64  	%rd1835, %rd1608, %rd1560;
	xor.b64  	%rd1836, %rd1608, %rd1584;
	and.b64  	%rd1837, %rd1836, %rd1835;
	xor.b64  	%rd1838, %rd1837, %rd1608;
	add.s64 	%rd1839, %rd1828, %rd1838;
	add.s64 	%rd1840, %rd1839, %rd1834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd1829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1310}, %rd1829;
	}
	shf.r.wrap.b32 	%r1311, %r1310, %r1309, 14;
	shf.r.wrap.b32 	%r1312, %r1309, %r1310, 14;
	mov.b64 	%rd1841, {%r1312, %r1311};
	shf.r.wrap.b32 	%r1313, %r1310, %r1309, 18;
	shf.r.wrap.b32 	%r1314, %r1309, %r1310, 18;
	mov.b64 	%rd1842, {%r1314, %r1313};
	xor.b64  	%rd1843, %rd1842, %rd1841;
	shf.l.wrap.b32 	%r1315, %r1309, %r1310, 23;
	shf.l.wrap.b32 	%r1316, %r1310, %r1309, 23;
	mov.b64 	%rd1844, {%r1316, %r1315};
	xor.b64  	%rd1845, %rd1843, %rd1844;
	xor.b64  	%rd1846, %rd1573, %rd1597;
	and.b64  	%rd1847, %rd1829, %rd1846;
	xor.b64  	%rd1848, %rd1847, %rd1573;
	add.s64 	%rd1849, %rd1634, %rd1549;
	add.s64 	%rd1850, %rd1849, %rd2760;
	add.s64 	%rd1851, %rd1850, %rd1848;
	add.s64 	%rd1852, %rd1851, %rd1845;
	add.s64 	%rd1853, %rd1852, %rd1560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd1840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd1840;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 28;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 28;
	mov.b64 	%rd1854, {%r1320, %r1319};
	shf.l.wrap.b32 	%r1321, %r1317, %r1318, 30;
	shf.l.wrap.b32 	%r1322, %r1318, %r1317, 30;
	mov.b64 	%rd1855, {%r1322, %r1321};
	xor.b64  	%rd1856, %rd1855, %rd1854;
	shf.l.wrap.b32 	%r1323, %r1317, %r1318, 25;
	shf.l.wrap.b32 	%r1324, %r1318, %r1317, 25;
	mov.b64 	%rd1857, {%r1324, %r1323};
	xor.b64  	%rd1858, %rd1856, %rd1857;
	xor.b64  	%rd1859, %rd1840, %rd1584;
	xor.b64  	%rd1860, %rd1840, %rd1608;
	and.b64  	%rd1861, %rd1860, %rd1859;
	xor.b64  	%rd1862, %rd1861, %rd1840;
	add.s64 	%rd1863, %rd1852, %rd1862;
	add.s64 	%rd1864, %rd1863, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1325,%dummy}, %rd1853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1326}, %rd1853;
	}
	shf.r.wrap.b32 	%r1327, %r1326, %r1325, 14;
	shf.r.wrap.b32 	%r1328, %r1325, %r1326, 14;
	mov.b64 	%rd1865, {%r1328, %r1327};
	shf.r.wrap.b32 	%r1329, %r1326, %r1325, 18;
	shf.r.wrap.b32 	%r1330, %r1325, %r1326, 18;
	mov.b64 	%rd1866, {%r1330, %r1329};
	xor.b64  	%rd1867, %rd1866, %rd1865;
	shf.l.wrap.b32 	%r1331, %r1325, %r1326, 23;
	shf.l.wrap.b32 	%r1332, %r1326, %r1325, 23;
	mov.b64 	%rd1868, {%r1332, %r1331};
	xor.b64  	%rd1869, %rd1867, %rd1868;
	xor.b64  	%rd1870, %rd1829, %rd1597;
	and.b64  	%rd1871, %rd1853, %rd1870;
	xor.b64  	%rd1872, %rd1871, %rd1597;
	add.s64 	%rd1873, %rd1647, %rd1573;
	add.s64 	%rd1874, %rd1873, %rd2761;
	add.s64 	%rd1875, %rd1874, %rd1872;
	add.s64 	%rd1876, %rd1875, %rd1869;
	add.s64 	%rd1877, %rd1876, %rd1584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd1864;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 28;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 28;
	mov.b64 	%rd1878, {%r1336, %r1335};
	shf.l.wrap.b32 	%r1337, %r1333, %r1334, 30;
	shf.l.wrap.b32 	%r1338, %r1334, %r1333, 30;
	mov.b64 	%rd1879, {%r1338, %r1337};
	xor.b64  	%rd1880, %rd1879, %rd1878;
	shf.l.wrap.b32 	%r1339, %r1333, %r1334, 25;
	shf.l.wrap.b32 	%r1340, %r1334, %r1333, 25;
	mov.b64 	%rd1881, {%r1340, %r1339};
	xor.b64  	%rd1882, %rd1880, %rd1881;
	xor.b64  	%rd1883, %rd1864, %rd1608;
	xor.b64  	%rd1884, %rd1864, %rd1840;
	and.b64  	%rd1885, %rd1884, %rd1883;
	xor.b64  	%rd1886, %rd1885, %rd1864;
	add.s64 	%rd1887, %rd1876, %rd1886;
	add.s64 	%rd1888, %rd1887, %rd1882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1341,%dummy}, %rd1877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1342}, %rd1877;
	}
	shf.r.wrap.b32 	%r1343, %r1342, %r1341, 14;
	shf.r.wrap.b32 	%r1344, %r1341, %r1342, 14;
	mov.b64 	%rd1889, {%r1344, %r1343};
	shf.r.wrap.b32 	%r1345, %r1342, %r1341, 18;
	shf.r.wrap.b32 	%r1346, %r1341, %r1342, 18;
	mov.b64 	%rd1890, {%r1346, %r1345};
	xor.b64  	%rd1891, %rd1890, %rd1889;
	shf.l.wrap.b32 	%r1347, %r1341, %r1342, 23;
	shf.l.wrap.b32 	%r1348, %r1342, %r1341, 23;
	mov.b64 	%rd1892, {%r1348, %r1347};
	xor.b64  	%rd1893, %rd1891, %rd1892;
	xor.b64  	%rd1894, %rd1853, %rd1829;
	and.b64  	%rd1895, %rd1877, %rd1894;
	xor.b64  	%rd1896, %rd1895, %rd1829;
	add.s64 	%rd1897, %rd1660, %rd1597;
	add.s64 	%rd1898, %rd1897, %rd2762;
	add.s64 	%rd1899, %rd1898, %rd1896;
	add.s64 	%rd1900, %rd1899, %rd1893;
	add.s64 	%rd1901, %rd1900, %rd1608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1349,%dummy}, %rd1888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1350}, %rd1888;
	}
	shf.r.wrap.b32 	%r1351, %r1350, %r1349, 28;
	shf.r.wrap.b32 	%r1352, %r1349, %r1350, 28;
	mov.b64 	%rd1902, {%r1352, %r1351};
	shf.l.wrap.b32 	%r1353, %r1349, %r1350, 30;
	shf.l.wrap.b32 	%r1354, %r1350, %r1349, 30;
	mov.b64 	%rd1903, {%r1354, %r1353};
	xor.b64  	%rd1904, %rd1903, %rd1902;
	shf.l.wrap.b32 	%r1355, %r1349, %r1350, 25;
	shf.l.wrap.b32 	%r1356, %r1350, %r1349, 25;
	mov.b64 	%rd1905, {%r1356, %r1355};
	xor.b64  	%rd1906, %rd1904, %rd1905;
	xor.b64  	%rd1907, %rd1888, %rd1840;
	xor.b64  	%rd1908, %rd1888, %rd1864;
	and.b64  	%rd1909, %rd1908, %rd1907;
	xor.b64  	%rd1910, %rd1909, %rd1888;
	add.s64 	%rd1911, %rd1900, %rd1910;
	add.s64 	%rd1912, %rd1911, %rd1906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1357,%dummy}, %rd1901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1358}, %rd1901;
	}
	shf.r.wrap.b32 	%r1359, %r1358, %r1357, 14;
	shf.r.wrap.b32 	%r1360, %r1357, %r1358, 14;
	mov.b64 	%rd1913, {%r1360, %r1359};
	shf.r.wrap.b32 	%r1361, %r1358, %r1357, 18;
	shf.r.wrap.b32 	%r1362, %r1357, %r1358, 18;
	mov.b64 	%rd1914, {%r1362, %r1361};
	xor.b64  	%rd1915, %rd1914, %rd1913;
	shf.l.wrap.b32 	%r1363, %r1357, %r1358, 23;
	shf.l.wrap.b32 	%r1364, %r1358, %r1357, 23;
	mov.b64 	%rd1916, {%r1364, %r1363};
	xor.b64  	%rd1917, %rd1915, %rd1916;
	xor.b64  	%rd1918, %rd1877, %rd1853;
	and.b64  	%rd1919, %rd1901, %rd1918;
	xor.b64  	%rd1920, %rd1919, %rd1853;
	add.s64 	%rd1921, %rd1829, %rd1673;
	add.s64 	%rd1922, %rd1921, %rd2763;
	add.s64 	%rd1923, %rd1922, %rd1920;
	add.s64 	%rd1924, %rd1923, %rd1917;
	add.s64 	%rd1925, %rd1924, %rd1840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1365,%dummy}, %rd1912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1366}, %rd1912;
	}
	shf.r.wrap.b32 	%r1367, %r1366, %r1365, 28;
	shf.r.wrap.b32 	%r1368, %r1365, %r1366, 28;
	mov.b64 	%rd1926, {%r1368, %r1367};
	shf.l.wrap.b32 	%r1369, %r1365, %r1366, 30;
	shf.l.wrap.b32 	%r1370, %r1366, %r1365, 30;
	mov.b64 	%rd1927, {%r1370, %r1369};
	xor.b64  	%rd1928, %rd1927, %rd1926;
	shf.l.wrap.b32 	%r1371, %r1365, %r1366, 25;
	shf.l.wrap.b32 	%r1372, %r1366, %r1365, 25;
	mov.b64 	%rd1929, {%r1372, %r1371};
	xor.b64  	%rd1930, %rd1928, %rd1929;
	xor.b64  	%rd1931, %rd1912, %rd1864;
	xor.b64  	%rd1932, %rd1912, %rd1888;
	and.b64  	%rd1933, %rd1932, %rd1931;
	xor.b64  	%rd1934, %rd1933, %rd1912;
	add.s64 	%rd1935, %rd1924, %rd1934;
	add.s64 	%rd1936, %rd1935, %rd1930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd1925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd1925;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 14;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 14;
	mov.b64 	%rd1937, {%r1376, %r1375};
	shf.r.wrap.b32 	%r1377, %r1374, %r1373, 18;
	shf.r.wrap.b32 	%r1378, %r1373, %r1374, 18;
	mov.b64 	%rd1938, {%r1378, %r1377};
	xor.b64  	%rd1939, %rd1938, %rd1937;
	shf.l.wrap.b32 	%r1379, %r1373, %r1374, 23;
	shf.l.wrap.b32 	%r1380, %r1374, %r1373, 23;
	mov.b64 	%rd1940, {%r1380, %r1379};
	xor.b64  	%rd1941, %rd1939, %rd1940;
	xor.b64  	%rd1942, %rd1901, %rd1877;
	and.b64  	%rd1943, %rd1925, %rd1942;
	xor.b64  	%rd1944, %rd1943, %rd1877;
	add.s64 	%rd1945, %rd1853, %rd1686;
	add.s64 	%rd1946, %rd1945, %rd2764;
	add.s64 	%rd1947, %rd1946, %rd1944;
	add.s64 	%rd1948, %rd1947, %rd1941;
	add.s64 	%rd1949, %rd1948, %rd1864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd1936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd1936;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 28;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 28;
	mov.b64 	%rd1950, {%r1384, %r1383};
	shf.l.wrap.b32 	%r1385, %r1381, %r1382, 30;
	shf.l.wrap.b32 	%r1386, %r1382, %r1381, 30;
	mov.b64 	%rd1951, {%r1386, %r1385};
	xor.b64  	%rd1952, %rd1951, %rd1950;
	shf.l.wrap.b32 	%r1387, %r1381, %r1382, 25;
	shf.l.wrap.b32 	%r1388, %r1382, %r1381, 25;
	mov.b64 	%rd1953, {%r1388, %r1387};
	xor.b64  	%rd1954, %rd1952, %rd1953;
	xor.b64  	%rd1955, %rd1936, %rd1888;
	xor.b64  	%rd1956, %rd1936, %rd1912;
	and.b64  	%rd1957, %rd1956, %rd1955;
	xor.b64  	%rd1958, %rd1957, %rd1936;
	add.s64 	%rd1959, %rd1948, %rd1958;
	add.s64 	%rd1960, %rd1959, %rd1954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1389,%dummy}, %rd1949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1390}, %rd1949;
	}
	shf.r.wrap.b32 	%r1391, %r1390, %r1389, 14;
	shf.r.wrap.b32 	%r1392, %r1389, %r1390, 14;
	mov.b64 	%rd1961, {%r1392, %r1391};
	shf.r.wrap.b32 	%r1393, %r1390, %r1389, 18;
	shf.r.wrap.b32 	%r1394, %r1389, %r1390, 18;
	mov.b64 	%rd1962, {%r1394, %r1393};
	xor.b64  	%rd1963, %rd1962, %rd1961;
	shf.l.wrap.b32 	%r1395, %r1389, %r1390, 23;
	shf.l.wrap.b32 	%r1396, %r1390, %r1389, 23;
	mov.b64 	%rd1964, {%r1396, %r1395};
	xor.b64  	%rd1965, %rd1963, %rd1964;
	xor.b64  	%rd1966, %rd1925, %rd1901;
	and.b64  	%rd1967, %rd1949, %rd1966;
	xor.b64  	%rd1968, %rd1967, %rd1901;
	add.s64 	%rd1969, %rd1877, %rd1699;
	add.s64 	%rd1970, %rd1969, %rd2767;
	add.s64 	%rd1971, %rd1970, %rd1968;
	add.s64 	%rd1972, %rd1971, %rd1965;
	add.s64 	%rd1973, %rd1972, %rd1888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1397,%dummy}, %rd1960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1398}, %rd1960;
	}
	shf.r.wrap.b32 	%r1399, %r1398, %r1397, 28;
	shf.r.wrap.b32 	%r1400, %r1397, %r1398, 28;
	mov.b64 	%rd1974, {%r1400, %r1399};
	shf.l.wrap.b32 	%r1401, %r1397, %r1398, 30;
	shf.l.wrap.b32 	%r1402, %r1398, %r1397, 30;
	mov.b64 	%rd1975, {%r1402, %r1401};
	xor.b64  	%rd1976, %rd1975, %rd1974;
	shf.l.wrap.b32 	%r1403, %r1397, %r1398, 25;
	shf.l.wrap.b32 	%r1404, %r1398, %r1397, 25;
	mov.b64 	%rd1977, {%r1404, %r1403};
	xor.b64  	%rd1978, %rd1976, %rd1977;
	xor.b64  	%rd1979, %rd1960, %rd1912;
	xor.b64  	%rd1980, %rd1960, %rd1936;
	and.b64  	%rd1981, %rd1980, %rd1979;
	xor.b64  	%rd1982, %rd1981, %rd1960;
	add.s64 	%rd1983, %rd1972, %rd1982;
	add.s64 	%rd1984, %rd1983, %rd1978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd1973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd1973;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 14;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 14;
	mov.b64 	%rd1985, {%r1408, %r1407};
	shf.r.wrap.b32 	%r1409, %r1406, %r1405, 18;
	shf.r.wrap.b32 	%r1410, %r1405, %r1406, 18;
	mov.b64 	%rd1986, {%r1410, %r1409};
	xor.b64  	%rd1987, %rd1986, %rd1985;
	shf.l.wrap.b32 	%r1411, %r1405, %r1406, 23;
	shf.l.wrap.b32 	%r1412, %r1406, %r1405, 23;
	mov.b64 	%rd1988, {%r1412, %r1411};
	xor.b64  	%rd1989, %rd1987, %rd1988;
	xor.b64  	%rd1990, %rd1949, %rd1925;
	and.b64  	%rd1991, %rd1973, %rd1990;
	xor.b64  	%rd1992, %rd1991, %rd1925;
	add.s64 	%rd1993, %rd1901, %rd1712;
	add.s64 	%rd1994, %rd1993, %rd2768;
	add.s64 	%rd1995, %rd1994, %rd1992;
	add.s64 	%rd1996, %rd1995, %rd1989;
	add.s64 	%rd1997, %rd1996, %rd1912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1413,%dummy}, %rd1984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1414}, %rd1984;
	}
	shf.r.wrap.b32 	%r1415, %r1414, %r1413, 28;
	shf.r.wrap.b32 	%r1416, %r1413, %r1414, 28;
	mov.b64 	%rd1998, {%r1416, %r1415};
	shf.l.wrap.b32 	%r1417, %r1413, %r1414, 30;
	shf.l.wrap.b32 	%r1418, %r1414, %r1413, 30;
	mov.b64 	%rd1999, {%r1418, %r1417};
	xor.b64  	%rd2000, %rd1999, %rd1998;
	shf.l.wrap.b32 	%r1419, %r1413, %r1414, 25;
	shf.l.wrap.b32 	%r1420, %r1414, %r1413, 25;
	mov.b64 	%rd2001, {%r1420, %r1419};
	xor.b64  	%rd2002, %rd2000, %rd2001;
	xor.b64  	%rd2003, %rd1984, %rd1936;
	xor.b64  	%rd2004, %rd1984, %rd1960;
	and.b64  	%rd2005, %rd2004, %rd2003;
	xor.b64  	%rd2006, %rd2005, %rd1984;
	add.s64 	%rd2007, %rd1996, %rd2006;
	add.s64 	%rd2008, %rd2007, %rd2002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1421,%dummy}, %rd1997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1422}, %rd1997;
	}
	shf.r.wrap.b32 	%r1423, %r1422, %r1421, 14;
	shf.r.wrap.b32 	%r1424, %r1421, %r1422, 14;
	mov.b64 	%rd2009, {%r1424, %r1423};
	shf.r.wrap.b32 	%r1425, %r1422, %r1421, 18;
	shf.r.wrap.b32 	%r1426, %r1421, %r1422, 18;
	mov.b64 	%rd2010, {%r1426, %r1425};
	xor.b64  	%rd2011, %rd2010, %rd2009;
	shf.l.wrap.b32 	%r1427, %r1421, %r1422, 23;
	shf.l.wrap.b32 	%r1428, %r1422, %r1421, 23;
	mov.b64 	%rd2012, {%r1428, %r1427};
	xor.b64  	%rd2013, %rd2011, %rd2012;
	xor.b64  	%rd2014, %rd1973, %rd1949;
	and.b64  	%rd2015, %rd1997, %rd2014;
	xor.b64  	%rd2016, %rd2015, %rd1949;
	add.s64 	%rd2017, %rd1925, %rd1725;
	add.s64 	%rd2018, %rd2017, %rd2769;
	add.s64 	%rd2019, %rd2018, %rd2016;
	add.s64 	%rd2020, %rd2019, %rd2013;
	add.s64 	%rd2021, %rd2020, %rd1936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1429,%dummy}, %rd2008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1430}, %rd2008;
	}
	shf.r.wrap.b32 	%r1431, %r1430, %r1429, 28;
	shf.r.wrap.b32 	%r1432, %r1429, %r1430, 28;
	mov.b64 	%rd2022, {%r1432, %r1431};
	shf.l.wrap.b32 	%r1433, %r1429, %r1430, 30;
	shf.l.wrap.b32 	%r1434, %r1430, %r1429, 30;
	mov.b64 	%rd2023, {%r1434, %r1433};
	xor.b64  	%rd2024, %rd2023, %rd2022;
	shf.l.wrap.b32 	%r1435, %r1429, %r1430, 25;
	shf.l.wrap.b32 	%r1436, %r1430, %r1429, 25;
	mov.b64 	%rd2025, {%r1436, %r1435};
	xor.b64  	%rd2026, %rd2024, %rd2025;
	xor.b64  	%rd2027, %rd2008, %rd1960;
	xor.b64  	%rd2028, %rd2008, %rd1984;
	and.b64  	%rd2029, %rd2028, %rd2027;
	xor.b64  	%rd2030, %rd2029, %rd2008;
	add.s64 	%rd2031, %rd2020, %rd2030;
	add.s64 	%rd2032, %rd2031, %rd2026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1437,%dummy}, %rd2021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1438}, %rd2021;
	}
	shf.r.wrap.b32 	%r1439, %r1438, %r1437, 14;
	shf.r.wrap.b32 	%r1440, %r1437, %r1438, 14;
	mov.b64 	%rd2033, {%r1440, %r1439};
	shf.r.wrap.b32 	%r1441, %r1438, %r1437, 18;
	shf.r.wrap.b32 	%r1442, %r1437, %r1438, 18;
	mov.b64 	%rd2034, {%r1442, %r1441};
	xor.b64  	%rd2035, %rd2034, %rd2033;
	shf.l.wrap.b32 	%r1443, %r1437, %r1438, 23;
	shf.l.wrap.b32 	%r1444, %r1438, %r1437, 23;
	mov.b64 	%rd2036, {%r1444, %r1443};
	xor.b64  	%rd2037, %rd2035, %rd2036;
	xor.b64  	%rd2038, %rd1997, %rd1973;
	and.b64  	%rd2039, %rd2021, %rd2038;
	xor.b64  	%rd2040, %rd2039, %rd1973;
	add.s64 	%rd2041, %rd1949, %rd1738;
	add.s64 	%rd2042, %rd2041, %rd2770;
	add.s64 	%rd2043, %rd2042, %rd2040;
	add.s64 	%rd2044, %rd2043, %rd2037;
	add.s64 	%rd2045, %rd2044, %rd1960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1445,%dummy}, %rd2032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1446}, %rd2032;
	}
	shf.r.wrap.b32 	%r1447, %r1446, %r1445, 28;
	shf.r.wrap.b32 	%r1448, %r1445, %r1446, 28;
	mov.b64 	%rd2046, {%r1448, %r1447};
	shf.l.wrap.b32 	%r1449, %r1445, %r1446, 30;
	shf.l.wrap.b32 	%r1450, %r1446, %r1445, 30;
	mov.b64 	%rd2047, {%r1450, %r1449};
	xor.b64  	%rd2048, %rd2047, %rd2046;
	shf.l.wrap.b32 	%r1451, %r1445, %r1446, 25;
	shf.l.wrap.b32 	%r1452, %r1446, %r1445, 25;
	mov.b64 	%rd2049, {%r1452, %r1451};
	xor.b64  	%rd2050, %rd2048, %rd2049;
	xor.b64  	%rd2051, %rd2032, %rd1984;
	xor.b64  	%rd2052, %rd2032, %rd2008;
	and.b64  	%rd2053, %rd2052, %rd2051;
	xor.b64  	%rd2054, %rd2053, %rd2032;
	add.s64 	%rd2055, %rd2044, %rd2054;
	add.s64 	%rd2056, %rd2055, %rd2050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd2045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd2045;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 14;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 14;
	mov.b64 	%rd2057, {%r1456, %r1455};
	shf.r.wrap.b32 	%r1457, %r1454, %r1453, 18;
	shf.r.wrap.b32 	%r1458, %r1453, %r1454, 18;
	mov.b64 	%rd2058, {%r1458, %r1457};
	xor.b64  	%rd2059, %rd2058, %rd2057;
	shf.l.wrap.b32 	%r1459, %r1453, %r1454, 23;
	shf.l.wrap.b32 	%r1460, %r1454, %r1453, 23;
	mov.b64 	%rd2060, {%r1460, %r1459};
	xor.b64  	%rd2061, %rd2059, %rd2060;
	xor.b64  	%rd2062, %rd2021, %rd1997;
	and.b64  	%rd2063, %rd2045, %rd2062;
	xor.b64  	%rd2064, %rd2063, %rd1997;
	add.s64 	%rd2065, %rd1973, %rd1751;
	add.s64 	%rd2066, %rd2065, %rd2771;
	add.s64 	%rd2067, %rd2066, %rd2064;
	add.s64 	%rd2068, %rd2067, %rd2061;
	add.s64 	%rd2069, %rd2068, %rd1984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1461,%dummy}, %rd2056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1462}, %rd2056;
	}
	shf.r.wrap.b32 	%r1463, %r1462, %r1461, 28;
	shf.r.wrap.b32 	%r1464, %r1461, %r1462, 28;
	mov.b64 	%rd2070, {%r1464, %r1463};
	shf.l.wrap.b32 	%r1465, %r1461, %r1462, 30;
	shf.l.wrap.b32 	%r1466, %r1462, %r1461, 30;
	mov.b64 	%rd2071, {%r1466, %r1465};
	xor.b64  	%rd2072, %rd2071, %rd2070;
	shf.l.wrap.b32 	%r1467, %r1461, %r1462, 25;
	shf.l.wrap.b32 	%r1468, %r1462, %r1461, 25;
	mov.b64 	%rd2073, {%r1468, %r1467};
	xor.b64  	%rd2074, %rd2072, %rd2073;
	xor.b64  	%rd2075, %rd2056, %rd2008;
	xor.b64  	%rd2076, %rd2056, %rd2032;
	and.b64  	%rd2077, %rd2076, %rd2075;
	xor.b64  	%rd2078, %rd2077, %rd2056;
	add.s64 	%rd2079, %rd2068, %rd2078;
	add.s64 	%rd2080, %rd2079, %rd2074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1469,%dummy}, %rd2069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1470}, %rd2069;
	}
	shf.r.wrap.b32 	%r1471, %r1470, %r1469, 14;
	shf.r.wrap.b32 	%r1472, %r1469, %r1470, 14;
	mov.b64 	%rd2081, {%r1472, %r1471};
	shf.r.wrap.b32 	%r1473, %r1470, %r1469, 18;
	shf.r.wrap.b32 	%r1474, %r1469, %r1470, 18;
	mov.b64 	%rd2082, {%r1474, %r1473};
	xor.b64  	%rd2083, %rd2082, %rd2081;
	shf.l.wrap.b32 	%r1475, %r1469, %r1470, 23;
	shf.l.wrap.b32 	%r1476, %r1470, %r1469, 23;
	mov.b64 	%rd2084, {%r1476, %r1475};
	xor.b64  	%rd2085, %rd2083, %rd2084;
	xor.b64  	%rd2086, %rd2045, %rd2021;
	and.b64  	%rd2087, %rd2069, %rd2086;
	xor.b64  	%rd2088, %rd2087, %rd2021;
	add.s64 	%rd2089, %rd1997, %rd1764;
	add.s64 	%rd2090, %rd2089, %rd2772;
	add.s64 	%rd2091, %rd2090, %rd2088;
	add.s64 	%rd2092, %rd2091, %rd2085;
	add.s64 	%rd2093, %rd2092, %rd2008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd2080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd2080;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 28;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 28;
	mov.b64 	%rd2094, {%r1480, %r1479};
	shf.l.wrap.b32 	%r1481, %r1477, %r1478, 30;
	shf.l.wrap.b32 	%r1482, %r1478, %r1477, 30;
	mov.b64 	%rd2095, {%r1482, %r1481};
	xor.b64  	%rd2096, %rd2095, %rd2094;
	shf.l.wrap.b32 	%r1483, %r1477, %r1478, 25;
	shf.l.wrap.b32 	%r1484, %r1478, %r1477, 25;
	mov.b64 	%rd2097, {%r1484, %r1483};
	xor.b64  	%rd2098, %rd2096, %rd2097;
	xor.b64  	%rd2099, %rd2080, %rd2032;
	xor.b64  	%rd2100, %rd2080, %rd2056;
	and.b64  	%rd2101, %rd2100, %rd2099;
	xor.b64  	%rd2102, %rd2101, %rd2080;
	add.s64 	%rd2103, %rd2092, %rd2102;
	add.s64 	%rd2104, %rd2103, %rd2098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1485,%dummy}, %rd2093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1486}, %rd2093;
	}
	shf.r.wrap.b32 	%r1487, %r1486, %r1485, 14;
	shf.r.wrap.b32 	%r1488, %r1485, %r1486, 14;
	mov.b64 	%rd2105, {%r1488, %r1487};
	shf.r.wrap.b32 	%r1489, %r1486, %r1485, 18;
	shf.r.wrap.b32 	%r1490, %r1485, %r1486, 18;
	mov.b64 	%rd2106, {%r1490, %r1489};
	xor.b64  	%rd2107, %rd2106, %rd2105;
	shf.l.wrap.b32 	%r1491, %r1485, %r1486, 23;
	shf.l.wrap.b32 	%r1492, %r1486, %r1485, 23;
	mov.b64 	%rd2108, {%r1492, %r1491};
	xor.b64  	%rd2109, %rd2107, %rd2108;
	xor.b64  	%rd2110, %rd2069, %rd2045;
	and.b64  	%rd2111, %rd2093, %rd2110;
	xor.b64  	%rd2112, %rd2111, %rd2045;
	add.s64 	%rd2113, %rd2021, %rd1777;
	add.s64 	%rd2114, %rd2113, %rd2773;
	add.s64 	%rd2115, %rd2114, %rd2112;
	add.s64 	%rd2116, %rd2115, %rd2109;
	add.s64 	%rd2117, %rd2116, %rd2032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd2104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd2104;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 28;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 28;
	mov.b64 	%rd2118, {%r1496, %r1495};
	shf.l.wrap.b32 	%r1497, %r1493, %r1494, 30;
	shf.l.wrap.b32 	%r1498, %r1494, %r1493, 30;
	mov.b64 	%rd2119, {%r1498, %r1497};
	xor.b64  	%rd2120, %rd2119, %rd2118;
	shf.l.wrap.b32 	%r1499, %r1493, %r1494, 25;
	shf.l.wrap.b32 	%r1500, %r1494, %r1493, 25;
	mov.b64 	%rd2121, {%r1500, %r1499};
	xor.b64  	%rd2122, %rd2120, %rd2121;
	xor.b64  	%rd2123, %rd2104, %rd2056;
	xor.b64  	%rd2124, %rd2104, %rd2080;
	and.b64  	%rd2125, %rd2124, %rd2123;
	xor.b64  	%rd2126, %rd2125, %rd2104;
	add.s64 	%rd2127, %rd2116, %rd2126;
	add.s64 	%rd2128, %rd2127, %rd2122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1501,%dummy}, %rd2117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1502}, %rd2117;
	}
	shf.r.wrap.b32 	%r1503, %r1502, %r1501, 14;
	shf.r.wrap.b32 	%r1504, %r1501, %r1502, 14;
	mov.b64 	%rd2129, {%r1504, %r1503};
	shf.r.wrap.b32 	%r1505, %r1502, %r1501, 18;
	shf.r.wrap.b32 	%r1506, %r1501, %r1502, 18;
	mov.b64 	%rd2130, {%r1506, %r1505};
	xor.b64  	%rd2131, %rd2130, %rd2129;
	shf.l.wrap.b32 	%r1507, %r1501, %r1502, 23;
	shf.l.wrap.b32 	%r1508, %r1502, %r1501, 23;
	mov.b64 	%rd2132, {%r1508, %r1507};
	xor.b64  	%rd2133, %rd2131, %rd2132;
	xor.b64  	%rd2134, %rd2093, %rd2069;
	and.b64  	%rd2135, %rd2117, %rd2134;
	xor.b64  	%rd2136, %rd2135, %rd2069;
	add.s64 	%rd2137, %rd2045, %rd1790;
	add.s64 	%rd2138, %rd2137, %rd2774;
	add.s64 	%rd2139, %rd2138, %rd2136;
	add.s64 	%rd2140, %rd2139, %rd2133;
	add.s64 	%rd2141, %rd2140, %rd2056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1509,%dummy}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1510}, %rd2128;
	}
	shf.r.wrap.b32 	%r1511, %r1510, %r1509, 28;
	shf.r.wrap.b32 	%r1512, %r1509, %r1510, 28;
	mov.b64 	%rd2142, {%r1512, %r1511};
	shf.l.wrap.b32 	%r1513, %r1509, %r1510, 30;
	shf.l.wrap.b32 	%r1514, %r1510, %r1509, 30;
	mov.b64 	%rd2143, {%r1514, %r1513};
	xor.b64  	%rd2144, %rd2143, %rd2142;
	shf.l.wrap.b32 	%r1515, %r1509, %r1510, 25;
	shf.l.wrap.b32 	%r1516, %r1510, %r1509, 25;
	mov.b64 	%rd2145, {%r1516, %r1515};
	xor.b64  	%rd2146, %rd2144, %rd2145;
	xor.b64  	%rd2147, %rd2128, %rd2080;
	xor.b64  	%rd2148, %rd2128, %rd2104;
	and.b64  	%rd2149, %rd2148, %rd2147;
	xor.b64  	%rd2150, %rd2149, %rd2128;
	add.s64 	%rd2151, %rd2140, %rd2150;
	add.s64 	%rd2152, %rd2151, %rd2146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1517,%dummy}, %rd2141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1518}, %rd2141;
	}
	shf.r.wrap.b32 	%r1519, %r1518, %r1517, 14;
	shf.r.wrap.b32 	%r1520, %r1517, %r1518, 14;
	mov.b64 	%rd2153, {%r1520, %r1519};
	shf.r.wrap.b32 	%r1521, %r1518, %r1517, 18;
	shf.r.wrap.b32 	%r1522, %r1517, %r1518, 18;
	mov.b64 	%rd2154, {%r1522, %r1521};
	xor.b64  	%rd2155, %rd2154, %rd2153;
	shf.l.wrap.b32 	%r1523, %r1517, %r1518, 23;
	shf.l.wrap.b32 	%r1524, %r1518, %r1517, 23;
	mov.b64 	%rd2156, {%r1524, %r1523};
	xor.b64  	%rd2157, %rd2155, %rd2156;
	xor.b64  	%rd2158, %rd2117, %rd2093;
	and.b64  	%rd2159, %rd2141, %rd2158;
	xor.b64  	%rd2160, %rd2159, %rd2093;
	add.s64 	%rd2161, %rd2069, %rd1803;
	add.s64 	%rd2162, %rd2161, %rd2775;
	add.s64 	%rd2163, %rd2162, %rd2160;
	add.s64 	%rd2164, %rd2163, %rd2157;
	add.s64 	%rd2165, %rd2164, %rd2080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1525,%dummy}, %rd2152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd2152;
	}
	shf.r.wrap.b32 	%r1527, %r1526, %r1525, 28;
	shf.r.wrap.b32 	%r1528, %r1525, %r1526, 28;
	mov.b64 	%rd2166, {%r1528, %r1527};
	shf.l.wrap.b32 	%r1529, %r1525, %r1526, 30;
	shf.l.wrap.b32 	%r1530, %r1526, %r1525, 30;
	mov.b64 	%rd2167, {%r1530, %r1529};
	xor.b64  	%rd2168, %rd2167, %rd2166;
	shf.l.wrap.b32 	%r1531, %r1525, %r1526, 25;
	shf.l.wrap.b32 	%r1532, %r1526, %r1525, 25;
	mov.b64 	%rd2169, {%r1532, %r1531};
	xor.b64  	%rd2170, %rd2168, %rd2169;
	xor.b64  	%rd2171, %rd2152, %rd2104;
	xor.b64  	%rd2172, %rd2152, %rd2128;
	and.b64  	%rd2173, %rd2172, %rd2171;
	xor.b64  	%rd2174, %rd2173, %rd2152;
	add.s64 	%rd2175, %rd2164, %rd2174;
	add.s64 	%rd2176, %rd2175, %rd2170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1533,%dummy}, %rd2165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1534}, %rd2165;
	}
	shf.r.wrap.b32 	%r1535, %r1534, %r1533, 14;
	shf.r.wrap.b32 	%r1536, %r1533, %r1534, 14;
	mov.b64 	%rd2177, {%r1536, %r1535};
	shf.r.wrap.b32 	%r1537, %r1534, %r1533, 18;
	shf.r.wrap.b32 	%r1538, %r1533, %r1534, 18;
	mov.b64 	%rd2178, {%r1538, %r1537};
	xor.b64  	%rd2179, %rd2178, %rd2177;
	shf.l.wrap.b32 	%r1539, %r1533, %r1534, 23;
	shf.l.wrap.b32 	%r1540, %r1534, %r1533, 23;
	mov.b64 	%rd2180, {%r1540, %r1539};
	xor.b64  	%rd2181, %rd2179, %rd2180;
	xor.b64  	%rd2182, %rd2141, %rd2117;
	and.b64  	%rd2183, %rd2165, %rd2182;
	xor.b64  	%rd2184, %rd2183, %rd2117;
	add.s64 	%rd2185, %rd2093, %rd1816;
	add.s64 	%rd2186, %rd2185, %rd2776;
	add.s64 	%rd2187, %rd2186, %rd2184;
	add.s64 	%rd2188, %rd2187, %rd2181;
	add.s64 	%rd2189, %rd2188, %rd2104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1541,%dummy}, %rd2176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1542}, %rd2176;
	}
	shf.r.wrap.b32 	%r1543, %r1542, %r1541, 28;
	shf.r.wrap.b32 	%r1544, %r1541, %r1542, 28;
	mov.b64 	%rd2190, {%r1544, %r1543};
	shf.l.wrap.b32 	%r1545, %r1541, %r1542, 30;
	shf.l.wrap.b32 	%r1546, %r1542, %r1541, 30;
	mov.b64 	%rd2191, {%r1546, %r1545};
	xor.b64  	%rd2192, %rd2191, %rd2190;
	shf.l.wrap.b32 	%r1547, %r1541, %r1542, 25;
	shf.l.wrap.b32 	%r1548, %r1542, %r1541, 25;
	mov.b64 	%rd2193, {%r1548, %r1547};
	xor.b64  	%rd2194, %rd2192, %rd2193;
	xor.b64  	%rd2195, %rd2176, %rd2128;
	xor.b64  	%rd2196, %rd2176, %rd2152;
	and.b64  	%rd2197, %rd2196, %rd2195;
	xor.b64  	%rd2198, %rd2197, %rd2176;
	add.s64 	%rd2199, %rd2188, %rd2198;
	add.s64 	%rd2200, %rd2199, %rd2194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1549,%dummy}, %rd1803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1550}, %rd1803;
	}
	shf.r.wrap.b32 	%r1551, %r1550, %r1549, 19;
	shf.r.wrap.b32 	%r1552, %r1549, %r1550, 19;
	mov.b64 	%rd2201, {%r1552, %r1551};
	shf.l.wrap.b32 	%r1553, %r1549, %r1550, 3;
	shf.l.wrap.b32 	%r1554, %r1550, %r1549, 3;
	mov.b64 	%rd2202, {%r1554, %r1553};
	shr.u64 	%rd2203, %rd1803, 6;
	xor.b64  	%rd2204, %rd2201, %rd2203;
	xor.b64  	%rd2205, %rd2204, %rd2202;
	shf.r.wrap.b32 	%r1555, %r1164, %r1163, 1;
	shf.r.wrap.b32 	%r1556, %r1163, %r1164, 1;
	mov.b64 	%rd2206, {%r1556, %r1555};
	shf.r.wrap.b32 	%r1557, %r1164, %r1163, 8;
	shf.r.wrap.b32 	%r1558, %r1163, %r1164, 8;
	mov.b64 	%rd2207, {%r1558, %r1557};
	shr.u64 	%rd2208, %rd1634, 7;
	xor.b64  	%rd2209, %rd2206, %rd2208;
	xor.b64  	%rd2210, %rd2209, %rd2207;
	add.s64 	%rd2211, %rd1621, %rd1738;
	add.s64 	%rd2212, %rd2211, %rd2205;
	add.s64 	%rd2213, %rd2212, %rd2210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1559,%dummy}, %rd1816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1560}, %rd1816;
	}
	shf.r.wrap.b32 	%r1561, %r1560, %r1559, 19;
	shf.r.wrap.b32 	%r1562, %r1559, %r1560, 19;
	mov.b64 	%rd2214, {%r1562, %r1561};
	shf.l.wrap.b32 	%r1563, %r1559, %r1560, 3;
	shf.l.wrap.b32 	%r1564, %r1560, %r1559, 3;
	mov.b64 	%rd2215, {%r1564, %r1563};
	shr.u64 	%rd2216, %rd1816, 6;
	xor.b64  	%rd2217, %rd2214, %rd2216;
	xor.b64  	%rd2218, %rd2217, %rd2215;
	shf.r.wrap.b32 	%r1565, %r1174, %r1173, 1;
	shf.r.wrap.b32 	%r1566, %r1173, %r1174, 1;
	mov.b64 	%rd2219, {%r1566, %r1565};
	shf.r.wrap.b32 	%r1567, %r1174, %r1173, 8;
	shf.r.wrap.b32 	%r1568, %r1173, %r1174, 8;
	mov.b64 	%rd2220, {%r1568, %r1567};
	shr.u64 	%rd2221, %rd1647, 7;
	xor.b64  	%rd2222, %rd2219, %rd2221;
	xor.b64  	%rd2223, %rd2222, %rd2220;
	add.s64 	%rd2224, %rd1634, %rd1751;
	add.s64 	%rd2225, %rd2224, %rd2218;
	add.s64 	%rd2226, %rd2225, %rd2223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1569,%dummy}, %rd2213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1570}, %rd2213;
	}
	shf.r.wrap.b32 	%r1571, %r1570, %r1569, 19;
	shf.r.wrap.b32 	%r1572, %r1569, %r1570, 19;
	mov.b64 	%rd2227, {%r1572, %r1571};
	shf.l.wrap.b32 	%r1573, %r1569, %r1570, 3;
	shf.l.wrap.b32 	%r1574, %r1570, %r1569, 3;
	mov.b64 	%rd2228, {%r1574, %r1573};
	shr.u64 	%rd2229, %rd2213, 6;
	xor.b64  	%rd2230, %rd2227, %rd2229;
	xor.b64  	%rd2231, %rd2230, %rd2228;
	shf.r.wrap.b32 	%r1575, %r1184, %r1183, 1;
	shf.r.wrap.b32 	%r1576, %r1183, %r1184, 1;
	mov.b64 	%rd2232, {%r1576, %r1575};
	shf.r.wrap.b32 	%r1577, %r1184, %r1183, 8;
	shf.r.wrap.b32 	%r1578, %r1183, %r1184, 8;
	mov.b64 	%rd2233, {%r1578, %r1577};
	shr.u64 	%rd2234, %rd1660, 7;
	xor.b64  	%rd2235, %rd2232, %rd2234;
	xor.b64  	%rd2236, %rd2235, %rd2233;
	add.s64 	%rd2237, %rd1647, %rd1764;
	add.s64 	%rd2238, %rd2237, %rd2231;
	add.s64 	%rd2239, %rd2238, %rd2236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1579,%dummy}, %rd2226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1580}, %rd2226;
	}
	shf.r.wrap.b32 	%r1581, %r1580, %r1579, 19;
	shf.r.wrap.b32 	%r1582, %r1579, %r1580, 19;
	mov.b64 	%rd2240, {%r1582, %r1581};
	shf.l.wrap.b32 	%r1583, %r1579, %r1580, 3;
	shf.l.wrap.b32 	%r1584, %r1580, %r1579, 3;
	mov.b64 	%rd2241, {%r1584, %r1583};
	shr.u64 	%rd2242, %rd2226, 6;
	xor.b64  	%rd2243, %rd2240, %rd2242;
	xor.b64  	%rd2244, %rd2243, %rd2241;
	shf.r.wrap.b32 	%r1585, %r1194, %r1193, 1;
	shf.r.wrap.b32 	%r1586, %r1193, %r1194, 1;
	mov.b64 	%rd2245, {%r1586, %r1585};
	shf.r.wrap.b32 	%r1587, %r1194, %r1193, 8;
	shf.r.wrap.b32 	%r1588, %r1193, %r1194, 8;
	mov.b64 	%rd2246, {%r1588, %r1587};
	shr.u64 	%rd2247, %rd1673, 7;
	xor.b64  	%rd2248, %rd2245, %rd2247;
	xor.b64  	%rd2249, %rd2248, %rd2246;
	add.s64 	%rd2250, %rd1660, %rd1777;
	add.s64 	%rd2251, %rd2250, %rd2244;
	add.s64 	%rd2252, %rd2251, %rd2249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1589,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1590}, %rd2239;
	}
	shf.r.wrap.b32 	%r1591, %r1590, %r1589, 19;
	shf.r.wrap.b32 	%r1592, %r1589, %r1590, 19;
	mov.b64 	%rd2253, {%r1592, %r1591};
	shf.l.wrap.b32 	%r1593, %r1589, %r1590, 3;
	shf.l.wrap.b32 	%r1594, %r1590, %r1589, 3;
	mov.b64 	%rd2254, {%r1594, %r1593};
	shr.u64 	%rd2255, %rd2239, 6;
	xor.b64  	%rd2256, %rd2253, %rd2255;
	xor.b64  	%rd2257, %rd2256, %rd2254;
	shf.r.wrap.b32 	%r1595, %r1204, %r1203, 1;
	shf.r.wrap.b32 	%r1596, %r1203, %r1204, 1;
	mov.b64 	%rd2258, {%r1596, %r1595};
	shf.r.wrap.b32 	%r1597, %r1204, %r1203, 8;
	shf.r.wrap.b32 	%r1598, %r1203, %r1204, 8;
	mov.b64 	%rd2259, {%r1598, %r1597};
	shr.u64 	%rd2260, %rd1686, 7;
	xor.b64  	%rd2261, %rd2258, %rd2260;
	xor.b64  	%rd2262, %rd2261, %rd2259;
	add.s64 	%rd2263, %rd1673, %rd1790;
	add.s64 	%rd2264, %rd2263, %rd2257;
	add.s64 	%rd2265, %rd2264, %rd2262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1599,%dummy}, %rd2252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1600}, %rd2252;
	}
	shf.r.wrap.b32 	%r1601, %r1600, %r1599, 19;
	shf.r.wrap.b32 	%r1602, %r1599, %r1600, 19;
	mov.b64 	%rd2266, {%r1602, %r1601};
	shf.l.wrap.b32 	%r1603, %r1599, %r1600, 3;
	shf.l.wrap.b32 	%r1604, %r1600, %r1599, 3;
	mov.b64 	%rd2267, {%r1604, %r1603};
	shr.u64 	%rd2268, %rd2252, 6;
	xor.b64  	%rd2269, %rd2266, %rd2268;
	xor.b64  	%rd2270, %rd2269, %rd2267;
	shf.r.wrap.b32 	%r1605, %r1214, %r1213, 1;
	shf.r.wrap.b32 	%r1606, %r1213, %r1214, 1;
	mov.b64 	%rd2271, {%r1606, %r1605};
	shf.r.wrap.b32 	%r1607, %r1214, %r1213, 8;
	shf.r.wrap.b32 	%r1608, %r1213, %r1214, 8;
	mov.b64 	%rd2272, {%r1608, %r1607};
	shr.u64 	%rd2273, %rd1699, 7;
	xor.b64  	%rd2274, %rd2271, %rd2273;
	xor.b64  	%rd2275, %rd2274, %rd2272;
	add.s64 	%rd2276, %rd1686, %rd1803;
	add.s64 	%rd2277, %rd2276, %rd2270;
	add.s64 	%rd2278, %rd2277, %rd2275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1609,%dummy}, %rd2265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1610}, %rd2265;
	}
	shf.r.wrap.b32 	%r1611, %r1610, %r1609, 19;
	shf.r.wrap.b32 	%r1612, %r1609, %r1610, 19;
	mov.b64 	%rd2279, {%r1612, %r1611};
	shf.l.wrap.b32 	%r1613, %r1609, %r1610, 3;
	shf.l.wrap.b32 	%r1614, %r1610, %r1609, 3;
	mov.b64 	%rd2280, {%r1614, %r1613};
	shr.u64 	%rd2281, %rd2265, 6;
	xor.b64  	%rd2282, %rd2279, %rd2281;
	xor.b64  	%rd2283, %rd2282, %rd2280;
	shf.r.wrap.b32 	%r1615, %r1224, %r1223, 1;
	shf.r.wrap.b32 	%r1616, %r1223, %r1224, 1;
	mov.b64 	%rd2284, {%r1616, %r1615};
	shf.r.wrap.b32 	%r1617, %r1224, %r1223, 8;
	shf.r.wrap.b32 	%r1618, %r1223, %r1224, 8;
	mov.b64 	%rd2285, {%r1618, %r1617};
	shr.u64 	%rd2286, %rd1712, 7;
	xor.b64  	%rd2287, %rd2284, %rd2286;
	xor.b64  	%rd2288, %rd2287, %rd2285;
	add.s64 	%rd2289, %rd1699, %rd1816;
	add.s64 	%rd2290, %rd2289, %rd2283;
	add.s64 	%rd2291, %rd2290, %rd2288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1619,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1620}, %rd2278;
	}
	shf.r.wrap.b32 	%r1621, %r1620, %r1619, 19;
	shf.r.wrap.b32 	%r1622, %r1619, %r1620, 19;
	mov.b64 	%rd2292, {%r1622, %r1621};
	shf.l.wrap.b32 	%r1623, %r1619, %r1620, 3;
	shf.l.wrap.b32 	%r1624, %r1620, %r1619, 3;
	mov.b64 	%rd2293, {%r1624, %r1623};
	shr.u64 	%rd2294, %rd2278, 6;
	xor.b64  	%rd2295, %rd2292, %rd2294;
	xor.b64  	%rd2296, %rd2295, %rd2293;
	shf.r.wrap.b32 	%r1625, %r1234, %r1233, 1;
	shf.r.wrap.b32 	%r1626, %r1233, %r1234, 1;
	mov.b64 	%rd2297, {%r1626, %r1625};
	shf.r.wrap.b32 	%r1627, %r1234, %r1233, 8;
	shf.r.wrap.b32 	%r1628, %r1233, %r1234, 8;
	mov.b64 	%rd2298, {%r1628, %r1627};
	shr.u64 	%rd2299, %rd1725, 7;
	xor.b64  	%rd2300, %rd2297, %rd2299;
	xor.b64  	%rd2301, %rd2300, %rd2298;
	add.s64 	%rd2302, %rd2213, %rd1712;
	add.s64 	%rd2303, %rd2302, %rd2296;
	add.s64 	%rd2304, %rd2303, %rd2301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1629,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1630}, %rd2291;
	}
	shf.r.wrap.b32 	%r1631, %r1630, %r1629, 19;
	shf.r.wrap.b32 	%r1632, %r1629, %r1630, 19;
	mov.b64 	%rd2305, {%r1632, %r1631};
	shf.l.wrap.b32 	%r1633, %r1629, %r1630, 3;
	shf.l.wrap.b32 	%r1634, %r1630, %r1629, 3;
	mov.b64 	%rd2306, {%r1634, %r1633};
	shr.u64 	%rd2307, %rd2291, 6;
	xor.b64  	%rd2308, %rd2305, %rd2307;
	xor.b64  	%rd2309, %rd2308, %rd2306;
	shf.r.wrap.b32 	%r1635, %r1244, %r1243, 1;
	shf.r.wrap.b32 	%r1636, %r1243, %r1244, 1;
	mov.b64 	%rd2310, {%r1636, %r1635};
	shf.r.wrap.b32 	%r1637, %r1244, %r1243, 8;
	shf.r.wrap.b32 	%r1638, %r1243, %r1244, 8;
	mov.b64 	%rd2311, {%r1638, %r1637};
	shr.u64 	%rd2312, %rd1738, 7;
	xor.b64  	%rd2313, %rd2310, %rd2312;
	xor.b64  	%rd2314, %rd2313, %rd2311;
	add.s64 	%rd2315, %rd2226, %rd1725;
	add.s64 	%rd2316, %rd2315, %rd2309;
	add.s64 	%rd2317, %rd2316, %rd2314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1639,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1640}, %rd2304;
	}
	shf.r.wrap.b32 	%r1641, %r1640, %r1639, 19;
	shf.r.wrap.b32 	%r1642, %r1639, %r1640, 19;
	mov.b64 	%rd2318, {%r1642, %r1641};
	shf.l.wrap.b32 	%r1643, %r1639, %r1640, 3;
	shf.l.wrap.b32 	%r1644, %r1640, %r1639, 3;
	mov.b64 	%rd2319, {%r1644, %r1643};
	shr.u64 	%rd2320, %rd2304, 6;
	xor.b64  	%rd2321, %rd2318, %rd2320;
	xor.b64  	%rd2322, %rd2321, %rd2319;
	shf.r.wrap.b32 	%r1645, %r1254, %r1253, 1;
	shf.r.wrap.b32 	%r1646, %r1253, %r1254, 1;
	mov.b64 	%rd2323, {%r1646, %r1645};
	shf.r.wrap.b32 	%r1647, %r1254, %r1253, 8;
	shf.r.wrap.b32 	%r1648, %r1253, %r1254, 8;
	mov.b64 	%rd2324, {%r1648, %r1647};
	shr.u64 	%rd2325, %rd1751, 7;
	xor.b64  	%rd2326, %rd2323, %rd2325;
	xor.b64  	%rd2327, %rd2326, %rd2324;
	add.s64 	%rd2328, %rd2239, %rd1738;
	add.s64 	%rd2329, %rd2328, %rd2322;
	add.s64 	%rd2330, %rd2329, %rd2327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1649,%dummy}, %rd2317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1650}, %rd2317;
	}
	shf.r.wrap.b32 	%r1651, %r1650, %r1649, 19;
	shf.r.wrap.b32 	%r1652, %r1649, %r1650, 19;
	mov.b64 	%rd2331, {%r1652, %r1651};
	shf.l.wrap.b32 	%r1653, %r1649, %r1650, 3;
	shf.l.wrap.b32 	%r1654, %r1650, %r1649, 3;
	mov.b64 	%rd2332, {%r1654, %r1653};
	shr.u64 	%rd2333, %rd2317, 6;
	xor.b64  	%rd2334, %rd2331, %rd2333;
	xor.b64  	%rd2335, %rd2334, %rd2332;
	shf.r.wrap.b32 	%r1655, %r1264, %r1263, 1;
	shf.r.wrap.b32 	%r1656, %r1263, %r1264, 1;
	mov.b64 	%rd2336, {%r1656, %r1655};
	shf.r.wrap.b32 	%r1657, %r1264, %r1263, 8;
	shf.r.wrap.b32 	%r1658, %r1263, %r1264, 8;
	mov.b64 	%rd2337, {%r1658, %r1657};
	shr.u64 	%rd2338, %rd1764, 7;
	xor.b64  	%rd2339, %rd2336, %rd2338;
	xor.b64  	%rd2340, %rd2339, %rd2337;
	add.s64 	%rd2341, %rd2252, %rd1751;
	add.s64 	%rd2342, %rd2341, %rd2335;
	add.s64 	%rd2343, %rd2342, %rd2340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1659,%dummy}, %rd2330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1660}, %rd2330;
	}
	shf.r.wrap.b32 	%r1661, %r1660, %r1659, 19;
	shf.r.wrap.b32 	%r1662, %r1659, %r1660, 19;
	mov.b64 	%rd2344, {%r1662, %r1661};
	shf.l.wrap.b32 	%r1663, %r1659, %r1660, 3;
	shf.l.wrap.b32 	%r1664, %r1660, %r1659, 3;
	mov.b64 	%rd2345, {%r1664, %r1663};
	shr.u64 	%rd2346, %rd2330, 6;
	xor.b64  	%rd2347, %rd2344, %rd2346;
	xor.b64  	%rd2348, %rd2347, %rd2345;
	shf.r.wrap.b32 	%r1665, %r1274, %r1273, 1;
	shf.r.wrap.b32 	%r1666, %r1273, %r1274, 1;
	mov.b64 	%rd2349, {%r1666, %r1665};
	shf.r.wrap.b32 	%r1667, %r1274, %r1273, 8;
	shf.r.wrap.b32 	%r1668, %r1273, %r1274, 8;
	mov.b64 	%rd2350, {%r1668, %r1667};
	shr.u64 	%rd2351, %rd1777, 7;
	xor.b64  	%rd2352, %rd2349, %rd2351;
	xor.b64  	%rd2353, %rd2352, %rd2350;
	add.s64 	%rd2354, %rd2265, %rd1764;
	add.s64 	%rd2355, %rd2354, %rd2348;
	add.s64 	%rd2356, %rd2355, %rd2353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1669,%dummy}, %rd2343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1670}, %rd2343;
	}
	shf.r.wrap.b32 	%r1671, %r1670, %r1669, 19;
	shf.r.wrap.b32 	%r1672, %r1669, %r1670, 19;
	mov.b64 	%rd2357, {%r1672, %r1671};
	shf.l.wrap.b32 	%r1673, %r1669, %r1670, 3;
	shf.l.wrap.b32 	%r1674, %r1670, %r1669, 3;
	mov.b64 	%rd2358, {%r1674, %r1673};
	shr.u64 	%rd2359, %rd2343, 6;
	xor.b64  	%rd2360, %rd2357, %rd2359;
	xor.b64  	%rd2361, %rd2360, %rd2358;
	shf.r.wrap.b32 	%r1675, %r1284, %r1283, 1;
	shf.r.wrap.b32 	%r1676, %r1283, %r1284, 1;
	mov.b64 	%rd2362, {%r1676, %r1675};
	shf.r.wrap.b32 	%r1677, %r1284, %r1283, 8;
	shf.r.wrap.b32 	%r1678, %r1283, %r1284, 8;
	mov.b64 	%rd2363, {%r1678, %r1677};
	shr.u64 	%rd2364, %rd1790, 7;
	xor.b64  	%rd2365, %rd2362, %rd2364;
	xor.b64  	%rd2366, %rd2365, %rd2363;
	add.s64 	%rd2367, %rd2278, %rd1777;
	add.s64 	%rd2368, %rd2367, %rd2361;
	add.s64 	%rd2369, %rd2368, %rd2366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd2189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd2189;
	}
	shf.r.wrap.b32 	%r1681, %r1680, %r1679, 14;
	shf.r.wrap.b32 	%r1682, %r1679, %r1680, 14;
	mov.b64 	%rd2370, {%r1682, %r1681};
	shf.r.wrap.b32 	%r1683, %r1680, %r1679, 18;
	shf.r.wrap.b32 	%r1684, %r1679, %r1680, 18;
	mov.b64 	%rd2371, {%r1684, %r1683};
	xor.b64  	%rd2372, %rd2371, %rd2370;
	shf.l.wrap.b32 	%r1685, %r1679, %r1680, 23;
	shf.l.wrap.b32 	%r1686, %r1680, %r1679, 23;
	mov.b64 	%rd2373, {%r1686, %r1685};
	xor.b64  	%rd2374, %rd2372, %rd2373;
	xor.b64  	%rd2375, %rd2141, %rd2165;
	and.b64  	%rd2376, %rd2375, %rd2189;
	xor.b64  	%rd2377, %rd2376, %rd2141;
	add.s64 	%rd2378, %rd2377, %rd2117;
	add.s64 	%rd2379, %rd2378, %rd2213;
	add.s64 	%rd2380, %rd2379, %rd2777;
	add.s64 	%rd2381, %rd2380, %rd2374;
	add.s64 	%rd2382, %rd2381, %rd2128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1687,%dummy}, %rd2200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1688}, %rd2200;
	}
	shf.r.wrap.b32 	%r1689, %r1688, %r1687, 28;
	shf.r.wrap.b32 	%r1690, %r1687, %r1688, 28;
	mov.b64 	%rd2383, {%r1690, %r1689};
	shf.l.wrap.b32 	%r1691, %r1687, %r1688, 30;
	shf.l.wrap.b32 	%r1692, %r1688, %r1687, 30;
	mov.b64 	%rd2384, {%r1692, %r1691};
	xor.b64  	%rd2385, %rd2384, %rd2383;
	shf.l.wrap.b32 	%r1693, %r1687, %r1688, 25;
	shf.l.wrap.b32 	%r1694, %r1688, %r1687, 25;
	mov.b64 	%rd2386, {%r1694, %r1693};
	xor.b64  	%rd2387, %rd2385, %rd2386;
	xor.b64  	%rd2388, %rd2200, %rd2152;
	xor.b64  	%rd2389, %rd2200, %rd2176;
	and.b64  	%rd2390, %rd2389, %rd2388;
	xor.b64  	%rd2391, %rd2390, %rd2200;
	add.s64 	%rd2392, %rd2381, %rd2391;
	add.s64 	%rd2393, %rd2392, %rd2387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd2382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd2382;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 14;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 14;
	mov.b64 	%rd2394, {%r1698, %r1697};
	shf.r.wrap.b32 	%r1699, %r1696, %r1695, 18;
	shf.r.wrap.b32 	%r1700, %r1695, %r1696, 18;
	mov.b64 	%rd2395, {%r1700, %r1699};
	xor.b64  	%rd2396, %rd2395, %rd2394;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 23;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 23;
	mov.b64 	%rd2397, {%r1702, %r1701};
	xor.b64  	%rd2398, %rd2396, %rd2397;
	xor.b64  	%rd2399, %rd2165, %rd2189;
	and.b64  	%rd2400, %rd2382, %rd2399;
	xor.b64  	%rd2401, %rd2400, %rd2165;
	add.s64 	%rd2402, %rd2226, %rd2141;
	add.s64 	%rd2403, %rd2402, %rd2778;
	add.s64 	%rd2404, %rd2403, %rd2401;
	add.s64 	%rd2405, %rd2404, %rd2398;
	add.s64 	%rd2406, %rd2405, %rd2152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd2393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd2393;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 28;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 28;
	mov.b64 	%rd2407, {%r1706, %r1705};
	shf.l.wrap.b32 	%r1707, %r1703, %r1704, 30;
	shf.l.wrap.b32 	%r1708, %r1704, %r1703, 30;
	mov.b64 	%rd2408, {%r1708, %r1707};
	xor.b64  	%rd2409, %rd2408, %rd2407;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 25;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 25;
	mov.b64 	%rd2410, {%r1710, %r1709};
	xor.b64  	%rd2411, %rd2409, %rd2410;
	xor.b64  	%rd2412, %rd2393, %rd2176;
	xor.b64  	%rd2413, %rd2393, %rd2200;
	and.b64  	%rd2414, %rd2413, %rd2412;
	xor.b64  	%rd2415, %rd2414, %rd2393;
	add.s64 	%rd2416, %rd2405, %rd2415;
	add.s64 	%rd2417, %rd2416, %rd2411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2406;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 14;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 14;
	mov.b64 	%rd2418, {%r1714, %r1713};
	shf.r.wrap.b32 	%r1715, %r1712, %r1711, 18;
	shf.r.wrap.b32 	%r1716, %r1711, %r1712, 18;
	mov.b64 	%rd2419, {%r1716, %r1715};
	xor.b64  	%rd2420, %rd2419, %rd2418;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 23;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 23;
	mov.b64 	%rd2421, {%r1718, %r1717};
	xor.b64  	%rd2422, %rd2420, %rd2421;
	xor.b64  	%rd2423, %rd2382, %rd2189;
	and.b64  	%rd2424, %rd2406, %rd2423;
	xor.b64  	%rd2425, %rd2424, %rd2189;
	add.s64 	%rd2426, %rd2239, %rd2165;
	add.s64 	%rd2427, %rd2426, %rd2779;
	add.s64 	%rd2428, %rd2427, %rd2425;
	add.s64 	%rd2429, %rd2428, %rd2422;
	add.s64 	%rd2430, %rd2429, %rd2176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2417;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 28;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 28;
	mov.b64 	%rd2431, {%r1722, %r1721};
	shf.l.wrap.b32 	%r1723, %r1719, %r1720, 30;
	shf.l.wrap.b32 	%r1724, %r1720, %r1719, 30;
	mov.b64 	%rd2432, {%r1724, %r1723};
	xor.b64  	%rd2433, %rd2432, %rd2431;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 25;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 25;
	mov.b64 	%rd2434, {%r1726, %r1725};
	xor.b64  	%rd2435, %rd2433, %rd2434;
	xor.b64  	%rd2436, %rd2417, %rd2200;
	xor.b64  	%rd2437, %rd2417, %rd2393;
	and.b64  	%rd2438, %rd2437, %rd2436;
	xor.b64  	%rd2439, %rd2438, %rd2417;
	add.s64 	%rd2440, %rd2429, %rd2439;
	add.s64 	%rd2441, %rd2440, %rd2435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2430;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 14;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 14;
	mov.b64 	%rd2442, {%r1730, %r1729};
	shf.r.wrap.b32 	%r1731, %r1728, %r1727, 18;
	shf.r.wrap.b32 	%r1732, %r1727, %r1728, 18;
	mov.b64 	%rd2443, {%r1732, %r1731};
	xor.b64  	%rd2444, %rd2443, %rd2442;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 23;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 23;
	mov.b64 	%rd2445, {%r1734, %r1733};
	xor.b64  	%rd2446, %rd2444, %rd2445;
	xor.b64  	%rd2447, %rd2406, %rd2382;
	and.b64  	%rd2448, %rd2430, %rd2447;
	xor.b64  	%rd2449, %rd2448, %rd2382;
	add.s64 	%rd2450, %rd2252, %rd2189;
	add.s64 	%rd2451, %rd2450, %rd2780;
	add.s64 	%rd2452, %rd2451, %rd2449;
	add.s64 	%rd2453, %rd2452, %rd2446;
	add.s64 	%rd2454, %rd2453, %rd2200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd2441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd2441;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 28;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 28;
	mov.b64 	%rd2455, {%r1738, %r1737};
	shf.l.wrap.b32 	%r1739, %r1735, %r1736, 30;
	shf.l.wrap.b32 	%r1740, %r1736, %r1735, 30;
	mov.b64 	%rd2456, {%r1740, %r1739};
	xor.b64  	%rd2457, %rd2456, %rd2455;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 25;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 25;
	mov.b64 	%rd2458, {%r1742, %r1741};
	xor.b64  	%rd2459, %rd2457, %rd2458;
	xor.b64  	%rd2460, %rd2441, %rd2393;
	xor.b64  	%rd2461, %rd2441, %rd2417;
	and.b64  	%rd2462, %rd2461, %rd2460;
	xor.b64  	%rd2463, %rd2462, %rd2441;
	add.s64 	%rd2464, %rd2453, %rd2463;
	add.s64 	%rd2465, %rd2464, %rd2459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd2454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd2454;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 14;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 14;
	mov.b64 	%rd2466, {%r1746, %r1745};
	shf.r.wrap.b32 	%r1747, %r1744, %r1743, 18;
	shf.r.wrap.b32 	%r1748, %r1743, %r1744, 18;
	mov.b64 	%rd2467, {%r1748, %r1747};
	xor.b64  	%rd2468, %rd2467, %rd2466;
	shf.l.wrap.b32 	%r1749, %r1743, %r1744, 23;
	shf.l.wrap.b32 	%r1750, %r1744, %r1743, 23;
	mov.b64 	%rd2469, {%r1750, %r1749};
	xor.b64  	%rd2470, %rd2468, %rd2469;
	xor.b64  	%rd2471, %rd2430, %rd2406;
	and.b64  	%rd2472, %rd2454, %rd2471;
	xor.b64  	%rd2473, %rd2472, %rd2406;
	add.s64 	%rd2474, %rd2382, %rd2265;
	add.s64 	%rd2475, %rd2474, %rd2781;
	add.s64 	%rd2476, %rd2475, %rd2473;
	add.s64 	%rd2477, %rd2476, %rd2470;
	add.s64 	%rd2478, %rd2477, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd2465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd2465;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 28;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 28;
	mov.b64 	%rd2479, {%r1754, %r1753};
	shf.l.wrap.b32 	%r1755, %r1751, %r1752, 30;
	shf.l.wrap.b32 	%r1756, %r1752, %r1751, 30;
	mov.b64 	%rd2480, {%r1756, %r1755};
	xor.b64  	%rd2481, %rd2480, %rd2479;
	shf.l.wrap.b32 	%r1757, %r1751, %r1752, 25;
	shf.l.wrap.b32 	%r1758, %r1752, %r1751, 25;
	mov.b64 	%rd2482, {%r1758, %r1757};
	xor.b64  	%rd2483, %rd2481, %rd2482;
	xor.b64  	%rd2484, %rd2465, %rd2417;
	xor.b64  	%rd2485, %rd2465, %rd2441;
	and.b64  	%rd2486, %rd2485, %rd2484;
	xor.b64  	%rd2487, %rd2486, %rd2465;
	add.s64 	%rd2488, %rd2477, %rd2487;
	add.s64 	%rd2489, %rd2488, %rd2483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd2478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd2478;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 14;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 14;
	mov.b64 	%rd2490, {%r1762, %r1761};
	shf.r.wrap.b32 	%r1763, %r1760, %r1759, 18;
	shf.r.wrap.b32 	%r1764, %r1759, %r1760, 18;
	mov.b64 	%rd2491, {%r1764, %r1763};
	xor.b64  	%rd2492, %rd2491, %rd2490;
	shf.l.wrap.b32 	%r1765, %r1759, %r1760, 23;
	shf.l.wrap.b32 	%r1766, %r1760, %r1759, 23;
	mov.b64 	%rd2493, {%r1766, %r1765};
	xor.b64  	%rd2494, %rd2492, %rd2493;
	xor.b64  	%rd2495, %rd2454, %rd2430;
	and.b64  	%rd2496, %rd2478, %rd2495;
	xor.b64  	%rd2497, %rd2496, %rd2430;
	add.s64 	%rd2498, %rd2406, %rd2278;
	add.s64 	%rd2499, %rd2498, %rd2782;
	add.s64 	%rd2500, %rd2499, %rd2497;
	add.s64 	%rd2501, %rd2500, %rd2494;
	add.s64 	%rd2502, %rd2501, %rd2417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1767,%dummy}, %rd2489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1768}, %rd2489;
	}
	shf.r.wrap.b32 	%r1769, %r1768, %r1767, 28;
	shf.r.wrap.b32 	%r1770, %r1767, %r1768, 28;
	mov.b64 	%rd2503, {%r1770, %r1769};
	shf.l.wrap.b32 	%r1771, %r1767, %r1768, 30;
	shf.l.wrap.b32 	%r1772, %r1768, %r1767, 30;
	mov.b64 	%rd2504, {%r1772, %r1771};
	xor.b64  	%rd2505, %rd2504, %rd2503;
	shf.l.wrap.b32 	%r1773, %r1767, %r1768, 25;
	shf.l.wrap.b32 	%r1774, %r1768, %r1767, 25;
	mov.b64 	%rd2506, {%r1774, %r1773};
	xor.b64  	%rd2507, %rd2505, %rd2506;
	xor.b64  	%rd2508, %rd2489, %rd2441;
	xor.b64  	%rd2509, %rd2489, %rd2465;
	and.b64  	%rd2510, %rd2509, %rd2508;
	xor.b64  	%rd2511, %rd2510, %rd2489;
	add.s64 	%rd2512, %rd2501, %rd2511;
	add.s64 	%rd2513, %rd2512, %rd2507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1775,%dummy}, %rd2502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1776}, %rd2502;
	}
	shf.r.wrap.b32 	%r1777, %r1776, %r1775, 14;
	shf.r.wrap.b32 	%r1778, %r1775, %r1776, 14;
	mov.b64 	%rd2514, {%r1778, %r1777};
	shf.r.wrap.b32 	%r1779, %r1776, %r1775, 18;
	shf.r.wrap.b32 	%r1780, %r1775, %r1776, 18;
	mov.b64 	%rd2515, {%r1780, %r1779};
	xor.b64  	%rd2516, %rd2515, %rd2514;
	shf.l.wrap.b32 	%r1781, %r1775, %r1776, 23;
	shf.l.wrap.b32 	%r1782, %r1776, %r1775, 23;
	mov.b64 	%rd2517, {%r1782, %r1781};
	xor.b64  	%rd2518, %rd2516, %rd2517;
	xor.b64  	%rd2519, %rd2478, %rd2454;
	and.b64  	%rd2520, %rd2502, %rd2519;
	xor.b64  	%rd2521, %rd2520, %rd2454;
	add.s64 	%rd2522, %rd2430, %rd2291;
	add.s64 	%rd2523, %rd2522, %rd2783;
	add.s64 	%rd2524, %rd2523, %rd2521;
	add.s64 	%rd2525, %rd2524, %rd2518;
	add.s64 	%rd2526, %rd2525, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd2513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd2513;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 28;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 28;
	mov.b64 	%rd2527, {%r1786, %r1785};
	shf.l.wrap.b32 	%r1787, %r1783, %r1784, 30;
	shf.l.wrap.b32 	%r1788, %r1784, %r1783, 30;
	mov.b64 	%rd2528, {%r1788, %r1787};
	xor.b64  	%rd2529, %rd2528, %rd2527;
	shf.l.wrap.b32 	%r1789, %r1783, %r1784, 25;
	shf.l.wrap.b32 	%r1790, %r1784, %r1783, 25;
	mov.b64 	%rd2530, {%r1790, %r1789};
	xor.b64  	%rd2531, %rd2529, %rd2530;
	xor.b64  	%rd2532, %rd2513, %rd2465;
	xor.b64  	%rd2533, %rd2513, %rd2489;
	and.b64  	%rd2534, %rd2533, %rd2532;
	xor.b64  	%rd2535, %rd2534, %rd2513;
	add.s64 	%rd2536, %rd2525, %rd2535;
	add.s64 	%rd2537, %rd2536, %rd2531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd2526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd2526;
	}
	shf.r.wrap.b32 	%r1793, %r1792, %r1791, 14;
	shf.r.wrap.b32 	%r1794, %r1791, %r1792, 14;
	mov.b64 	%rd2538, {%r1794, %r1793};
	shf.r.wrap.b32 	%r1795, %r1792, %r1791, 18;
	shf.r.wrap.b32 	%r1796, %r1791, %r1792, 18;
	mov.b64 	%rd2539, {%r1796, %r1795};
	xor.b64  	%rd2540, %rd2539, %rd2538;
	shf.l.wrap.b32 	%r1797, %r1791, %r1792, 23;
	shf.l.wrap.b32 	%r1798, %r1792, %r1791, 23;
	mov.b64 	%rd2541, {%r1798, %r1797};
	xor.b64  	%rd2542, %rd2540, %rd2541;
	xor.b64  	%rd2543, %rd2502, %rd2478;
	and.b64  	%rd2544, %rd2526, %rd2543;
	xor.b64  	%rd2545, %rd2544, %rd2478;
	add.s64 	%rd2546, %rd2454, %rd2304;
	add.s64 	%rd2547, %rd2546, %rd2784;
	add.s64 	%rd2548, %rd2547, %rd2545;
	add.s64 	%rd2549, %rd2548, %rd2542;
	add.s64 	%rd2550, %rd2549, %rd2465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1799,%dummy}, %rd2537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1800}, %rd2537;
	}
	shf.r.wrap.b32 	%r1801, %r1800, %r1799, 28;
	shf.r.wrap.b32 	%r1802, %r1799, %r1800, 28;
	mov.b64 	%rd2551, {%r1802, %r1801};
	shf.l.wrap.b32 	%r1803, %r1799, %r1800, 30;
	shf.l.wrap.b32 	%r1804, %r1800, %r1799, 30;
	mov.b64 	%rd2552, {%r1804, %r1803};
	xor.b64  	%rd2553, %rd2552, %rd2551;
	shf.l.wrap.b32 	%r1805, %r1799, %r1800, 25;
	shf.l.wrap.b32 	%r1806, %r1800, %r1799, 25;
	mov.b64 	%rd2554, {%r1806, %r1805};
	xor.b64  	%rd2555, %rd2553, %rd2554;
	xor.b64  	%rd2556, %rd2537, %rd2489;
	xor.b64  	%rd2557, %rd2537, %rd2513;
	and.b64  	%rd2558, %rd2557, %rd2556;
	xor.b64  	%rd2559, %rd2558, %rd2537;
	add.s64 	%rd2560, %rd2549, %rd2559;
	add.s64 	%rd2561, %rd2560, %rd2555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd2550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd2550;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 14;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 14;
	mov.b64 	%rd2562, {%r1810, %r1809};
	shf.r.wrap.b32 	%r1811, %r1808, %r1807, 18;
	shf.r.wrap.b32 	%r1812, %r1807, %r1808, 18;
	mov.b64 	%rd2563, {%r1812, %r1811};
	xor.b64  	%rd2564, %rd2563, %rd2562;
	shf.l.wrap.b32 	%r1813, %r1807, %r1808, 23;
	shf.l.wrap.b32 	%r1814, %r1808, %r1807, 23;
	mov.b64 	%rd2565, {%r1814, %r1813};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	xor.b64  	%rd2567, %rd2526, %rd2502;
	and.b64  	%rd2568, %rd2550, %rd2567;
	xor.b64  	%rd2569, %rd2568, %rd2502;
	add.s64 	%rd2570, %rd2478, %rd2317;
	add.s64 	%rd2571, %rd2570, %rd2785;
	add.s64 	%rd2572, %rd2571, %rd2569;
	add.s64 	%rd2573, %rd2572, %rd2566;
	add.s64 	%rd2574, %rd2573, %rd2489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2561;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 28;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 28;
	mov.b64 	%rd2575, {%r1818, %r1817};
	shf.l.wrap.b32 	%r1819, %r1815, %r1816, 30;
	shf.l.wrap.b32 	%r1820, %r1816, %r1815, 30;
	mov.b64 	%rd2576, {%r1820, %r1819};
	xor.b64  	%rd2577, %rd2576, %rd2575;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 25;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 25;
	mov.b64 	%rd2578, {%r1822, %r1821};
	xor.b64  	%rd2579, %rd2577, %rd2578;
	xor.b64  	%rd2580, %rd2561, %rd2513;
	xor.b64  	%rd2581, %rd2561, %rd2537;
	and.b64  	%rd2582, %rd2581, %rd2580;
	xor.b64  	%rd2583, %rd2582, %rd2561;
	add.s64 	%rd2584, %rd2573, %rd2583;
	add.s64 	%rd2585, %rd2584, %rd2579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2574;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 14;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 14;
	mov.b64 	%rd2586, {%r1826, %r1825};
	shf.r.wrap.b32 	%r1827, %r1824, %r1823, 18;
	shf.r.wrap.b32 	%r1828, %r1823, %r1824, 18;
	mov.b64 	%rd2587, {%r1828, %r1827};
	xor.b64  	%rd2588, %rd2587, %rd2586;
	shf.l.wrap.b32 	%r1829, %r1823, %r1824, 23;
	shf.l.wrap.b32 	%r1830, %r1824, %r1823, 23;
	mov.b64 	%rd2589, {%r1830, %r1829};
	xor.b64  	%rd2590, %rd2588, %rd2589;
	xor.b64  	%rd2591, %rd2550, %rd2526;
	and.b64  	%rd2592, %rd2574, %rd2591;
	xor.b64  	%rd2593, %rd2592, %rd2526;
	add.s64 	%rd2594, %rd2502, %rd2330;
	add.s64 	%rd2595, %rd2594, %rd2786;
	add.s64 	%rd2596, %rd2595, %rd2593;
	add.s64 	%rd2597, %rd2596, %rd2590;
	add.s64 	%rd2598, %rd2597, %rd2513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd2585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd2585;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 28;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 28;
	mov.b64 	%rd2599, {%r1834, %r1833};
	shf.l.wrap.b32 	%r1835, %r1831, %r1832, 30;
	shf.l.wrap.b32 	%r1836, %r1832, %r1831, 30;
	mov.b64 	%rd2600, {%r1836, %r1835};
	xor.b64  	%rd2601, %rd2600, %rd2599;
	shf.l.wrap.b32 	%r1837, %r1831, %r1832, 25;
	shf.l.wrap.b32 	%r1838, %r1832, %r1831, 25;
	mov.b64 	%rd2602, {%r1838, %r1837};
	xor.b64  	%rd2603, %rd2601, %rd2602;
	xor.b64  	%rd2604, %rd2585, %rd2537;
	xor.b64  	%rd2605, %rd2585, %rd2561;
	and.b64  	%rd2606, %rd2605, %rd2604;
	xor.b64  	%rd2607, %rd2606, %rd2585;
	add.s64 	%rd2608, %rd2597, %rd2607;
	add.s64 	%rd2609, %rd2608, %rd2603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd2598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd2598;
	}
	shf.r.wrap.b32 	%r1841, %r1840, %r1839, 14;
	shf.r.wrap.b32 	%r1842, %r1839, %r1840, 14;
	mov.b64 	%rd2610, {%r1842, %r1841};
	shf.r.wrap.b32 	%r1843, %r1840, %r1839, 18;
	shf.r.wrap.b32 	%r1844, %r1839, %r1840, 18;
	mov.b64 	%rd2611, {%r1844, %r1843};
	xor.b64  	%rd2612, %rd2611, %rd2610;
	shf.l.wrap.b32 	%r1845, %r1839, %r1840, 23;
	shf.l.wrap.b32 	%r1846, %r1840, %r1839, 23;
	mov.b64 	%rd2613, {%r1846, %r1845};
	xor.b64  	%rd2614, %rd2612, %rd2613;
	xor.b64  	%rd2615, %rd2574, %rd2550;
	and.b64  	%rd2616, %rd2598, %rd2615;
	xor.b64  	%rd2617, %rd2616, %rd2550;
	add.s64 	%rd2618, %rd2526, %rd2343;
	add.s64 	%rd2619, %rd2618, %rd2787;
	add.s64 	%rd2620, %rd2619, %rd2617;
	add.s64 	%rd2621, %rd2620, %rd2614;
	add.s64 	%rd2622, %rd2621, %rd2537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1847,%dummy}, %rd2609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1848}, %rd2609;
	}
	shf.r.wrap.b32 	%r1849, %r1848, %r1847, 28;
	shf.r.wrap.b32 	%r1850, %r1847, %r1848, 28;
	mov.b64 	%rd2623, {%r1850, %r1849};
	shf.l.wrap.b32 	%r1851, %r1847, %r1848, 30;
	shf.l.wrap.b32 	%r1852, %r1848, %r1847, 30;
	mov.b64 	%rd2624, {%r1852, %r1851};
	xor.b64  	%rd2625, %rd2624, %rd2623;
	shf.l.wrap.b32 	%r1853, %r1847, %r1848, 25;
	shf.l.wrap.b32 	%r1854, %r1848, %r1847, 25;
	mov.b64 	%rd2626, {%r1854, %r1853};
	xor.b64  	%rd2627, %rd2625, %rd2626;
	xor.b64  	%rd2628, %rd2609, %rd2561;
	xor.b64  	%rd2629, %rd2609, %rd2585;
	and.b64  	%rd2630, %rd2629, %rd2628;
	xor.b64  	%rd2631, %rd2630, %rd2609;
	add.s64 	%rd2632, %rd2621, %rd2631;
	add.s64 	%rd2633, %rd2632, %rd2627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1855,%dummy}, %rd2622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1856}, %rd2622;
	}
	shf.r.wrap.b32 	%r1857, %r1856, %r1855, 14;
	shf.r.wrap.b32 	%r1858, %r1855, %r1856, 14;
	mov.b64 	%rd2634, {%r1858, %r1857};
	shf.r.wrap.b32 	%r1859, %r1856, %r1855, 18;
	shf.r.wrap.b32 	%r1860, %r1855, %r1856, 18;
	mov.b64 	%rd2635, {%r1860, %r1859};
	xor.b64  	%rd2636, %rd2635, %rd2634;
	shf.l.wrap.b32 	%r1861, %r1855, %r1856, 23;
	shf.l.wrap.b32 	%r1862, %r1856, %r1855, 23;
	mov.b64 	%rd2637, {%r1862, %r1861};
	xor.b64  	%rd2638, %rd2636, %rd2637;
	xor.b64  	%rd2639, %rd2598, %rd2574;
	and.b64  	%rd2640, %rd2622, %rd2639;
	xor.b64  	%rd2641, %rd2640, %rd2574;
	add.s64 	%rd2642, %rd2550, %rd2356;
	add.s64 	%rd2643, %rd2642, %rd2788;
	add.s64 	%rd2644, %rd2643, %rd2641;
	add.s64 	%rd2645, %rd2644, %rd2638;
	add.s64 	%rd2646, %rd2645, %rd2561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1863,%dummy}, %rd2633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1864}, %rd2633;
	}
	shf.r.wrap.b32 	%r1865, %r1864, %r1863, 28;
	shf.r.wrap.b32 	%r1866, %r1863, %r1864, 28;
	mov.b64 	%rd2647, {%r1866, %r1865};
	shf.l.wrap.b32 	%r1867, %r1863, %r1864, 30;
	shf.l.wrap.b32 	%r1868, %r1864, %r1863, 30;
	mov.b64 	%rd2648, {%r1868, %r1867};
	xor.b64  	%rd2649, %rd2648, %rd2647;
	shf.l.wrap.b32 	%r1869, %r1863, %r1864, 25;
	shf.l.wrap.b32 	%r1870, %r1864, %r1863, 25;
	mov.b64 	%rd2650, {%r1870, %r1869};
	xor.b64  	%rd2651, %rd2649, %rd2650;
	xor.b64  	%rd2652, %rd2633, %rd2585;
	xor.b64  	%rd2653, %rd2633, %rd2609;
	and.b64  	%rd2654, %rd2653, %rd2652;
	xor.b64  	%rd2655, %rd2654, %rd2633;
	add.s64 	%rd2656, %rd2645, %rd2655;
	add.s64 	%rd2657, %rd2656, %rd2651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1871,%dummy}, %rd2646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1872}, %rd2646;
	}
	shf.r.wrap.b32 	%r1873, %r1872, %r1871, 14;
	shf.r.wrap.b32 	%r1874, %r1871, %r1872, 14;
	mov.b64 	%rd2658, {%r1874, %r1873};
	shf.r.wrap.b32 	%r1875, %r1872, %r1871, 18;
	shf.r.wrap.b32 	%r1876, %r1871, %r1872, 18;
	mov.b64 	%rd2659, {%r1876, %r1875};
	xor.b64  	%rd2660, %rd2659, %rd2658;
	shf.l.wrap.b32 	%r1877, %r1871, %r1872, 23;
	shf.l.wrap.b32 	%r1878, %r1872, %r1871, 23;
	mov.b64 	%rd2661, {%r1878, %r1877};
	xor.b64  	%rd2662, %rd2660, %rd2661;
	xor.b64  	%rd2663, %rd2622, %rd2598;
	and.b64  	%rd2664, %rd2646, %rd2663;
	xor.b64  	%rd2665, %rd2664, %rd2598;
	add.s64 	%rd2666, %rd2574, %rd2369;
	add.s64 	%rd2667, %rd2666, %rd2789;
	add.s64 	%rd2668, %rd2667, %rd2665;
	add.s64 	%rd2669, %rd2668, %rd2662;
	add.s64 	%rd2670, %rd2669, %rd2585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1879,%dummy}, %rd2657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1880}, %rd2657;
	}
	shf.r.wrap.b32 	%r1881, %r1880, %r1879, 28;
	shf.r.wrap.b32 	%r1882, %r1879, %r1880, 28;
	mov.b64 	%rd2671, {%r1882, %r1881};
	shf.l.wrap.b32 	%r1883, %r1879, %r1880, 30;
	shf.l.wrap.b32 	%r1884, %r1880, %r1879, 30;
	mov.b64 	%rd2672, {%r1884, %r1883};
	xor.b64  	%rd2673, %rd2672, %rd2671;
	shf.l.wrap.b32 	%r1885, %r1879, %r1880, 25;
	shf.l.wrap.b32 	%r1886, %r1880, %r1879, 25;
	mov.b64 	%rd2674, {%r1886, %r1885};
	xor.b64  	%rd2675, %rd2673, %rd2674;
	xor.b64  	%rd2676, %rd2657, %rd2609;
	xor.b64  	%rd2677, %rd2657, %rd2633;
	and.b64  	%rd2678, %rd2677, %rd2676;
	xor.b64  	%rd2679, %rd2678, %rd2657;
	add.s64 	%rd2680, %rd2669, %rd2679;
	add.s64 	%rd2681, %rd2680, %rd2675;
	cvt.u32.u64	%r8, %rd2670;
	shr.u64 	%rd2682, %rd2670, 32;
	cvt.u32.u64	%r9, %rd2682;
	cvt.u32.u64	%r10, %rd2681;
	shr.u64 	%rd2683, %rd2681, 32;
	cvt.u32.u64	%r11, %rd2683;
	shr.u32 	%r1887, %r8, %r5;
	and.b32  	%r1888, %r1887, %r32;
	mul.wide.u32 	%rd2684, %r1888, 4;
	add.s64 	%rd2685, %rd2790, %rd2684;
	and.b32  	%r1889, %r8, 31;
	mov.u32 	%r1890, 1;
	shl.b32 	%r12, %r1890, %r1889;
	ld.global.u32 	%r1891, [%rd2685];
	and.b32  	%r1892, %r1891, %r12;
	setp.eq.s32	%p3, %r1892, 0;
	@%p3 bra 	BB3_30;

	mov.u32 	%r1945, 1;
	ld.param.u64 	%rd2765, [m01700_m16_param_7];
	shr.u32 	%r1893, %r9, %r5;
	and.b32  	%r1894, %r1893, %r32;
	mul.wide.u32 	%rd2686, %r1894, 4;
	add.s64 	%rd2687, %rd2765, %rd2686;
	and.b32  	%r1895, %r9, 31;
	shl.b32 	%r13, %r1945, %r1895;
	ld.global.u32 	%r1897, [%rd2687];
	and.b32  	%r1898, %r1897, %r13;
	setp.eq.s32	%p4, %r1898, 0;
	@%p4 bra 	BB3_30;

	mov.u32 	%r1946, 1;
	ld.param.u64 	%rd2766, [m01700_m16_param_8];
	shr.u32 	%r1899, %r10, %r5;
	and.b32  	%r1900, %r1899, %r32;
	mul.wide.u32 	%rd2688, %r1900, 4;
	add.s64 	%rd2689, %rd2766, %rd2688;
	and.b32  	%r1901, %r10, 31;
	shl.b32 	%r14, %r1946, %r1901;
	ld.global.u32 	%r1903, [%rd2689];
	and.b32  	%r1904, %r1903, %r14;
	setp.eq.s32	%p5, %r1904, 0;
	@%p5 bra 	BB3_30;

	ld.param.u64 	%rd2791, [m01700_m16_param_9];
	mov.u32 	%r1947, 1;
	shr.u32 	%r1905, %r11, %r5;
	and.b32  	%r1906, %r1905, %r32;
	mul.wide.u32 	%rd2690, %r1906, 4;
	add.s64 	%rd2691, %rd2791, %rd2690;
	and.b32  	%r1907, %r11, 31;
	shl.b32 	%r15, %r1947, %r1907;
	ld.global.u32 	%r1909, [%rd2691];
	and.b32  	%r1910, %r1909, %r15;
	setp.eq.s32	%p6, %r1910, 0;
	@%p6 bra 	BB3_30;

	and.b32  	%r1950, %r8, 31;
	mov.u32 	%r1949, 1;
	shl.b32 	%r1948, %r1949, %r1950;
	ld.param.u64 	%rd2792, [m01700_m16_param_10];
	shr.u32 	%r1911, %r8, %r6;
	and.b32  	%r1912, %r1911, %r32;
	mul.wide.u32 	%rd2692, %r1912, 4;
	add.s64 	%rd2693, %rd2792, %rd2692;
	ld.global.u32 	%r1913, [%rd2693];
	and.b32  	%r1914, %r1913, %r1948;
	setp.eq.s32	%p7, %r1914, 0;
	@%p7 bra 	BB3_30;

	ld.param.u64 	%rd2793, [m01700_m16_param_11];
	shr.u32 	%r1915, %r9, %r6;
	and.b32  	%r1916, %r1915, %r32;
	mul.wide.u32 	%rd2694, %r1916, 4;
	add.s64 	%rd2695, %rd2793, %rd2694;
	ld.global.u32 	%r1917, [%rd2695];
	and.b32  	%r1918, %r1917, %r13;
	setp.eq.s32	%p8, %r1918, 0;
	@%p8 bra 	BB3_30;

	ld.param.u64 	%rd2794, [m01700_m16_param_12];
	shr.u32 	%r1919, %r10, %r6;
	and.b32  	%r1920, %r1919, %r32;
	mul.wide.u32 	%rd2696, %r1920, 4;
	add.s64 	%rd2697, %rd2794, %rd2696;
	ld.global.u32 	%r1921, [%rd2697];
	and.b32  	%r1922, %r1921, %r14;
	setp.eq.s32	%p9, %r1922, 0;
	@%p9 bra 	BB3_30;

	ld.param.u64 	%rd2795, [m01700_m16_param_13];
	shr.u32 	%r1923, %r11, %r6;
	and.b32  	%r1924, %r1923, %r32;
	mul.wide.u32 	%rd2698, %r1924, 4;
	add.s64 	%rd2699, %rd2795, %rd2698;
	ld.global.u32 	%r1925, [%rd2699];
	and.b32  	%r1926, %r1925, %r15;
	setp.eq.s32	%p10, %r1926, 0;
	@%p10 bra 	BB3_30;

	setp.eq.s32	%p11, %r37, 0;
	mov.u32 	%r1958, 0;
	mov.u32 	%r1927, -1;
	mov.u32 	%r1957, %r37;
	@%p11 bra 	BB3_24;

BB3_12:
	ld.param.u64 	%rd2796, [m01700_m16_param_15];
	mov.u32 	%r1959, 1;
	shr.u32 	%r18, %r1957, 1;
	add.s32 	%r1960, %r18, %r1958;
	cvt.u64.u32	%rd2700, %r1960;
	add.s64 	%rd101, %rd2700, %rd25;
	shl.b64 	%rd2701, %rd101, 6;
	add.s64 	%rd2702, %rd2796, %rd2701;
	ld.global.u32 	%r20, [%rd2702+28];
	setp.gt.u32	%p12, %r11, %r20;
	@%p12 bra 	BB3_22;

	setp.lt.u32	%p13, %r11, %r20;
	mov.u32 	%r1930, -1;
	@%p13 bra 	BB3_14;
	bra.uni 	BB3_15;

BB3_14:
	mov.u32 	%r1959, %r1930;
	bra.uni 	BB3_22;

BB3_15:
	mov.u32 	%r1959, 1;
	ld.global.u32 	%r21, [%rd2702+24];
	setp.gt.u32	%p14, %r10, %r21;
	@%p14 bra 	BB3_22;

	setp.lt.u32	%p15, %r10, %r21;
	@%p15 bra 	BB3_17;
	bra.uni 	BB3_18;

BB3_17:
	mov.u32 	%r1959, %r1930;
	bra.uni 	BB3_22;

BB3_18:
	mov.u32 	%r1959, 1;
	ld.global.u32 	%r22, [%rd2702+60];
	setp.gt.u32	%p16, %r9, %r22;
	@%p16 bra 	BB3_22;

	setp.lt.u32	%p17, %r9, %r22;
	mov.u32 	%r1959, %r1930;
	@%p17 bra 	BB3_22;

	mov.u32 	%r1959, 1;
	ld.global.u32 	%r23, [%rd2702+56];
	setp.gt.u32	%p18, %r8, %r23;
	@%p18 bra 	BB3_22;

	setp.lt.u32	%p19, %r8, %r23;
	selp.b32	%r1959, -1, 0, %p19;

BB3_22:
	add.s32 	%r1936, %r18, 1;
	setp.gt.s32	%p20, %r1959, 0;
	selp.b32	%r1937, %r1936, 0, %p20;
	add.s32 	%r1958, %r1937, %r1958;
	selp.b32	%r1938, -1, 0, %p20;
	add.s32 	%r1939, %r1938, %r1957;
	shr.u32 	%r1957, %r1939, 1;
	setp.eq.s32	%p21, %r1959, 0;
	@%p21 bra 	BB3_25;

	setp.ne.s32	%p22, %r1957, 0;
	@%p22 bra 	BB3_12;

BB3_24:
	mov.u32 	%r1960, %r1927;

BB3_25:
	setp.eq.s32	%p23, %r1960, -1;
	@%p23 bra 	BB3_30;

	ld.param.u64 	%rd2797, [m01700_m16_param_16];
	ld.param.u32 	%r1943, [m01700_m16_param_32];
	add.s32 	%r29, %r1960, %r1943;
	mul.wide.u32 	%rd2709, %r29, 4;
	add.s64 	%rd2710, %rd2797, %rd2709;
	atom.global.add.u32 	%r1941, [%rd2710], 1;
	setp.ne.s32	%p24, %r1941, 0;
	@%p24 bra 	BB3_30;

	atom.global.add.u32 	%r30, [%rd115], 1;
	setp.lt.u32	%p25, %r30, %r37;
	@%p25 bra 	BB3_29;
	bra.uni 	BB3_28;

BB3_29:
	ld.param.u32 	%r1955, [m01700_m16_param_27];
	ld.param.u64 	%rd2798, [m01700_m16_param_14];
	mul.wide.u32 	%rd2711, %r30, 20;
	add.s64 	%rd2712, %rd2798, %rd2711;
	st.global.u32 	[%rd2712], %r1955;
	st.global.u32 	[%rd2712+4], %r1960;
	st.global.u32 	[%rd2712+8], %r29;
	st.global.u32 	[%rd2712+12], %r1;
	st.global.u32 	[%rd2712+16], %r1956;
	bra.uni 	BB3_30;

BB3_28:
	atom.global.add.u32 	%r1942, [%rd115], -1;

BB3_30:
	ld.param.u32 	%r1944, [m01700_m16_param_30];
	add.s32 	%r1956, %r1956, 1;
	setp.lt.u32	%p26, %r1956, %r1944;
	@%p26 bra 	BB3_3;

BB3_31:
	ret;
}

	// .globl	m01700_s04
.entry m01700_s04(
	.param .u64 .ptr .global .align 4 m01700_s04_param_0,
	.param .u64 .ptr .global .align 4 m01700_s04_param_1,
	.param .u64 .ptr .global .align 4 m01700_s04_param_2,
	.param .u64 .ptr .const .align 4 m01700_s04_param_3,
	.param .u64 .ptr .global .align 1 m01700_s04_param_4,
	.param .u64 .ptr .global .align 1 m01700_s04_param_5,
	.param .u64 .ptr .global .align 4 m01700_s04_param_6,
	.param .u64 .ptr .global .align 4 m01700_s04_param_7,
	.param .u64 .ptr .global .align 4 m01700_s04_param_8,
	.param .u64 .ptr .global .align 4 m01700_s04_param_9,
	.param .u64 .ptr .global .align 4 m01700_s04_param_10,
	.param .u64 .ptr .global .align 4 m01700_s04_param_11,
	.param .u64 .ptr .global .align 4 m01700_s04_param_12,
	.param .u64 .ptr .global .align 4 m01700_s04_param_13,
	.param .u64 .ptr .global .align 4 m01700_s04_param_14,
	.param .u64 .ptr .global .align 4 m01700_s04_param_15,
	.param .u64 .ptr .global .align 4 m01700_s04_param_16,
	.param .u64 .ptr .global .align 4 m01700_s04_param_17,
	.param .u64 .ptr .global .align 1 m01700_s04_param_18,
	.param .u64 .ptr .global .align 4 m01700_s04_param_19,
	.param .u64 .ptr .global .align 4 m01700_s04_param_20,
	.param .u64 .ptr .global .align 4 m01700_s04_param_21,
	.param .u64 .ptr .global .align 4 m01700_s04_param_22,
	.param .u64 .ptr .global .align 4 m01700_s04_param_23,
	.param .u32 m01700_s04_param_24,
	.param .u32 m01700_s04_param_25,
	.param .u32 m01700_s04_param_26,
	.param .u32 m01700_s04_param_27,
	.param .u32 m01700_s04_param_28,
	.param .u32 m01700_s04_param_29,
	.param .u32 m01700_s04_param_30,
	.param .u32 m01700_s04_param_31,
	.param .u32 m01700_s04_param_32,
	.param .u32 m01700_s04_param_33,
	.param .u64 m01700_s04_param_34
)
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<1836>;
	.reg .b64 	%rd<2716>;


	ld.param.u64 	%rd96, [m01700_s04_param_0];
	ld.param.u64 	%rd99, [m01700_s04_param_15];
	ld.param.u64 	%rd100, [m01700_s04_param_16];
	ld.param.u64 	%rd101, [m01700_s04_param_19];
	ld.param.u32 	%r13, [m01700_s04_param_30];
	ld.param.u32 	%r15, [m01700_s04_param_32];
	ld.param.u64 	%rd102, [m01700_s04_param_34];
	mov.b32	%r16, %envreg3;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %ntid.x;
	mad.lo.s32 	%r19, %r17, %r18, %r16;
	mov.u32 	%r20, %tid.x;
	add.s32 	%r1, %r19, %r20;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd102;
	@%p1 bra 	BB4_10;

	setp.eq.s32	%p2, %r13, 0;
	@%p2 bra 	BB4_10;

	mul.lo.s64 	%rd103, %rd1, 260;
	add.s64 	%rd104, %rd96, %rd103;
	ld.global.u32 	%r2, [%rd104];
	mul.wide.u32 	%rd105, %r15, 64;
	add.s64 	%rd106, %rd99, %rd105;
	ld.global.u32 	%r3, [%rd106+56];
	ld.global.u32 	%r4, [%rd106+60];
	ld.global.u32 	%r5, [%rd106+24];
	ld.global.u32 	%r6, [%rd106+28];
	ld.global.u32 	%r7, [%rd104+4];
	ld.global.u32 	%r22, [%rd104+8];
	ld.global.u32 	%r23, [%rd104+12];
	mov.b64	%rd107, {%r23, %r22};
	ld.global.u32 	%r24, [%rd104+60];
	mov.u32 	%r1835, 0;
	mov.b64	%rd2, {%r24, %r1835};
	mov.u64 	%rd108, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25,%dummy}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26}, %rd108;
	}
	shf.r.wrap.b32 	%r27, %r26, %r25, 18;
	shf.r.wrap.b32 	%r28, %r25, %r26, 18;
	mov.b64 	%rd109, {%r28, %r27};
	shf.r.wrap.b32 	%r29, %r26, %r25, 14;
	shf.r.wrap.b32 	%r30, %r25, %r26, 14;
	mov.b64 	%rd110, {%r30, %r29};
	xor.b64  	%rd111, %rd109, %rd110;
	shf.l.wrap.b32 	%r31, %r25, %r26, 23;
	shf.l.wrap.b32 	%r32, %r26, %r25, 23;
	mov.b64 	%rd112, {%r32, %r31};
	xor.b64  	%rd3, %rd111, %rd112;
	ld.const.u64 	%rd113, [k_sha512];
	add.s64 	%rd4, %rd113, 8891960152096595636;
	mov.u64 	%rd114, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r33}, %rd114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r34,%dummy}, %rd114;
	}
	shf.l.wrap.b32 	%r35, %r34, %r33, 30;
	shf.l.wrap.b32 	%r36, %r33, %r34, 30;
	mov.b64 	%rd115, {%r36, %r35};
	shf.r.wrap.b32 	%r37, %r33, %r34, 28;
	shf.r.wrap.b32 	%r38, %r34, %r33, 28;
	mov.b64 	%rd116, {%r38, %r37};
	xor.b64  	%rd117, %rd115, %rd116;
	shf.l.wrap.b32 	%r39, %r34, %r33, 25;
	shf.l.wrap.b32 	%r40, %r33, %r34, 25;
	mov.b64 	%rd118, {%r40, %r39};
	xor.b64  	%rd5, %rd117, %rd118;
	ld.const.u64 	%rd119, [k_sha512+8];
	add.s64 	%rd120, %rd107, %rd119;
	add.s64 	%rd6, %rd120, 2270897969802886507;
	ld.const.u64 	%rd121, [k_sha512+16];
	add.s64 	%rd7, %rd121, -7276294671716946913;
	ld.const.u64 	%rd122, [k_sha512+24];
	add.s64 	%rd8, %rd122, 5840696475078001361;
	mul.wide.u32 	%rd123, %r15, 4;
	add.s64 	%rd21, %rd100, %rd123;
	mov.u64 	%rd124, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r41}, %rd124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r42,%dummy}, %rd124;
	}
	shf.l.wrap.b32 	%r43, %r42, %r41, 3;
	shf.l.wrap.b32 	%r44, %r41, %r42, 3;
	mov.b64 	%rd125, {%r44, %r43};
	shf.r.wrap.b32 	%r45, %r41, %r42, 19;
	shf.r.wrap.b32 	%r46, %r42, %r41, 19;
	mov.b64 	%rd126, {%r46, %r45};
	xor.b64  	%rd22, %rd126, %rd125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r47,%dummy}, %rd107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r48}, %rd107;
	}
	shf.r.wrap.b32 	%r49, %r48, %r47, 1;
	shf.r.wrap.b32 	%r50, %r47, %r48, 1;
	mov.b64 	%rd127, {%r50, %r49};
	shf.r.wrap.b32 	%r51, %r48, %r47, 8;
	shf.r.wrap.b32 	%r52, %r47, %r48, 8;
	mov.b64 	%rd128, {%r52, %r51};
	shr.u64 	%rd129, %rd107, 7;
	xor.b64  	%rd130, %rd127, %rd129;
	xor.b64  	%rd23, %rd130, %rd128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r53,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r54}, %rd2;
	}
	shf.r.wrap.b32 	%r55, %r54, %r53, 19;
	shf.r.wrap.b32 	%r56, %r53, %r54, 19;
	mov.b64 	%rd131, {%r56, %r55};
	shf.l.wrap.b32 	%r57, %r53, %r54, 3;
	shf.l.wrap.b32 	%r58, %r54, %r53, 3;
	mov.b64 	%rd132, {%r58, %r57};
	shr.u64 	%rd133, %rd2, 6;
	xor.b64  	%rd134, %rd131, %rd133;
	xor.b64  	%rd135, %rd134, %rd132;
	shf.r.wrap.b32 	%r59, %r41, %r42, 8;
	shf.r.wrap.b32 	%r60, %r42, %r41, 8;
	mov.b64 	%rd136, {%r60, %r59};
	shf.r.wrap.b32 	%r61, %r41, %r42, 1;
	shf.r.wrap.b32 	%r62, %r42, %r41, 1;
	mov.b64 	%rd137, {%r62, %r61};
	xor.b64  	%rd24, %rd137, %rd136;
	add.s64 	%rd138, %rd107, %rd135;
	add.s64 	%rd25, %rd138, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r63,%dummy}, %rd25;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r64}, %rd25;
	}
	shf.r.wrap.b32 	%r65, %r64, %r63, 19;
	shf.r.wrap.b32 	%r66, %r63, %r64, 19;
	mov.b64 	%rd139, {%r66, %r65};
	shf.l.wrap.b32 	%r67, %r63, %r64, 3;
	shf.l.wrap.b32 	%r68, %r64, %r63, 3;
	mov.b64 	%rd140, {%r68, %r67};
	shr.u64 	%rd141, %rd25, 6;
	xor.b64  	%rd142, %rd139, %rd141;
	xor.b64  	%rd143, %rd142, %rd140;
	add.s64 	%rd26, %rd143, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r69,%dummy}, %rd26;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r70}, %rd26;
	}
	shf.r.wrap.b32 	%r71, %r70, %r69, 19;
	shf.r.wrap.b32 	%r72, %r69, %r70, 19;
	mov.b64 	%rd144, {%r72, %r71};
	shf.l.wrap.b32 	%r73, %r69, %r70, 3;
	shf.l.wrap.b32 	%r74, %r70, %r69, 3;
	mov.b64 	%rd145, {%r74, %r73};
	shr.u64 	%rd146, %rd26, 6;
	xor.b64  	%rd147, %rd144, %rd146;
	xor.b64  	%rd148, %rd147, %rd145;
	add.s64 	%rd27, %rd148, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r75,%dummy}, %rd27;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r76}, %rd27;
	}
	shf.r.wrap.b32 	%r77, %r76, %r75, 19;
	shf.r.wrap.b32 	%r78, %r75, %r76, 19;
	mov.b64 	%rd149, {%r78, %r77};
	shf.l.wrap.b32 	%r79, %r75, %r76, 3;
	shf.l.wrap.b32 	%r80, %r76, %r75, 3;
	mov.b64 	%rd150, {%r80, %r79};
	shr.u64 	%rd151, %rd27, 6;
	xor.b64  	%rd152, %rd149, %rd151;
	xor.b64  	%rd28, %rd152, %rd150;
	shf.r.wrap.b32 	%r81, %r54, %r53, 1;
	shf.r.wrap.b32 	%r82, %r53, %r54, 1;
	mov.b64 	%rd153, {%r82, %r81};
	shf.r.wrap.b32 	%r83, %r54, %r53, 8;
	shf.r.wrap.b32 	%r84, %r53, %r54, 8;
	mov.b64 	%rd154, {%r84, %r83};
	shr.u64 	%rd155, %rd2, 7;
	xor.b64  	%rd156, %rd153, %rd155;
	xor.b64  	%rd29, %rd156, %rd154;
	shf.r.wrap.b32 	%r85, %r64, %r63, 1;
	shf.r.wrap.b32 	%r86, %r63, %r64, 1;
	mov.b64 	%rd157, {%r86, %r85};
	shf.r.wrap.b32 	%r87, %r64, %r63, 8;
	shf.r.wrap.b32 	%r88, %r63, %r64, 8;
	mov.b64 	%rd158, {%r88, %r87};
	shr.u64 	%rd159, %rd25, 7;
	xor.b64  	%rd160, %rd157, %rd159;
	xor.b64  	%rd46, %rd160, %rd158;
	shf.r.wrap.b32 	%r89, %r70, %r69, 1;
	shf.r.wrap.b32 	%r90, %r69, %r70, 1;
	mov.b64 	%rd161, {%r90, %r89};
	shf.r.wrap.b32 	%r91, %r70, %r69, 8;
	shf.r.wrap.b32 	%r92, %r69, %r70, 8;
	mov.b64 	%rd162, {%r92, %r91};
	shr.u64 	%rd163, %rd26, 7;
	xor.b64  	%rd164, %rd161, %rd163;
	xor.b64  	%rd47, %rd164, %rd162;
	shf.r.wrap.b32 	%r93, %r76, %r75, 1;
	shf.r.wrap.b32 	%r94, %r75, %r76, 1;
	mov.b64 	%rd165, {%r94, %r93};
	shf.r.wrap.b32 	%r95, %r76, %r75, 8;
	shf.r.wrap.b32 	%r96, %r75, %r76, 8;
	mov.b64 	%rd166, {%r96, %r95};
	shr.u64 	%rd167, %rd27, 7;
	xor.b64  	%rd168, %rd165, %rd167;
	xor.b64  	%rd48, %rd168, %rd166;

BB4_3:
	mov.u32 	%r1832, 0;
	mov.b64	%rd2714, {%r24, %r1832};
	ld.const.u64 	%rd2713, [k_sha512+608];
	ld.const.u64 	%rd2712, [k_sha512+600];
	ld.const.u64 	%rd2711, [k_sha512+592];
	ld.const.u64 	%rd2710, [k_sha512+584];
	ld.const.u64 	%rd2709, [k_sha512+576];
	ld.const.u64 	%rd2708, [k_sha512+568];
	ld.const.u64 	%rd2707, [k_sha512+560];
	ld.const.u64 	%rd2706, [k_sha512+552];
	ld.const.u64 	%rd2705, [k_sha512+544];
	ld.const.u64 	%rd2704, [k_sha512+536];
	ld.const.u64 	%rd2703, [k_sha512+528];
	ld.const.u64 	%rd2702, [k_sha512+520];
	ld.const.u64 	%rd2701, [k_sha512+512];
	ld.const.u64 	%rd2700, [k_sha512+504];
	ld.const.u64 	%rd2699, [k_sha512+496];
	ld.const.u64 	%rd2698, [k_sha512+488];
	ld.const.u64 	%rd2697, [k_sha512+480];
	ld.const.u64 	%rd2696, [k_sha512+472];
	ld.const.u64 	%rd2695, [k_sha512+464];
	ld.const.u64 	%rd2694, [k_sha512+456];
	ld.const.u64 	%rd2693, [k_sha512+448];
	ld.const.u64 	%rd2692, [k_sha512+440];
	ld.const.u64 	%rd2691, [k_sha512+432];
	ld.const.u64 	%rd2690, [k_sha512+424];
	ld.const.u64 	%rd2689, [k_sha512+416];
	ld.const.u64 	%rd2688, [k_sha512+408];
	ld.const.u64 	%rd2687, [k_sha512+400];
	ld.const.u64 	%rd2686, [k_sha512+392];
	ld.const.u64 	%rd2685, [k_sha512+384];
	ld.const.u64 	%rd2684, [k_sha512+376];
	ld.const.u64 	%rd2683, [k_sha512+368];
	ld.const.u64 	%rd2682, [k_sha512+360];
	ld.const.u64 	%rd2681, [k_sha512+352];
	ld.const.u64 	%rd2680, [k_sha512+344];
	ld.const.u64 	%rd2679, [k_sha512+336];
	ld.const.u64 	%rd2678, [k_sha512+328];
	ld.const.u64 	%rd2677, [k_sha512+320];
	ld.const.u64 	%rd2676, [k_sha512+312];
	ld.const.u64 	%rd2675, [k_sha512+304];
	ld.const.u64 	%rd2674, [k_sha512+296];
	ld.const.u64 	%rd2673, [k_sha512+288];
	ld.const.u64 	%rd2672, [k_sha512+280];
	ld.const.u64 	%rd2671, [k_sha512+272];
	ld.const.u64 	%rd2670, [k_sha512+264];
	ld.const.u64 	%rd2669, [k_sha512+256];
	ld.const.u64 	%rd2668, [k_sha512+248];
	ld.const.u64 	%rd2667, [k_sha512+240];
	ld.const.u64 	%rd2666, [k_sha512+232];
	ld.const.u64 	%rd2665, [k_sha512+224];
	ld.const.u64 	%rd2664, [k_sha512+216];
	ld.const.u64 	%rd2663, [k_sha512+208];
	ld.const.u64 	%rd2662, [k_sha512+200];
	ld.const.u64 	%rd2661, [k_sha512+192];
	ld.const.u64 	%rd2660, [k_sha512+184];
	ld.const.u64 	%rd2659, [k_sha512+176];
	ld.const.u64 	%rd2658, [k_sha512+168];
	ld.const.u64 	%rd2657, [k_sha512+160];
	ld.const.u64 	%rd2656, [k_sha512+152];
	ld.const.u64 	%rd2655, [k_sha512+144];
	ld.const.u64 	%rd2654, [k_sha512+136];
	ld.const.u64 	%rd2653, [k_sha512+128];
	ld.const.u64 	%rd2652, [k_sha512+120];
	ld.const.u64 	%rd2651, [k_sha512+112];
	ld.const.u64 	%rd2650, [k_sha512+104];
	ld.const.u64 	%rd2649, [k_sha512+96];
	ld.const.u64 	%rd2648, [k_sha512+88];
	ld.const.u64 	%rd2647, [k_sha512+80];
	ld.const.u64 	%rd2646, [k_sha512+72];
	ld.const.u64 	%rd2645, [k_sha512+64];
	ld.const.u64 	%rd2644, [k_sha512+56];
	ld.const.u64 	%rd2643, [k_sha512+48];
	ld.const.u64 	%rd2642, [k_sha512+40];
	ld.const.u64 	%rd2641, [k_sha512+32];
	ld.param.u64 	%rd2640, [m01700_s04_param_3];
	mul.wide.u32 	%rd169, %r1835, 4;
	add.s64 	%rd170, %rd2640, %rd169;
	ld.const.u32 	%r97, [%rd170];
	or.b32  	%r98, %r97, %r2;
	mov.b64	%rd171, {%r7, %r98};
	add.s64 	%rd172, %rd4, %rd171;
	add.s64 	%rd173, %rd172, %rd3;
	add.s64 	%rd174, %rd173, -6534734903238641935;
	add.s64 	%rd175, %rd173, %rd5;
	add.s64 	%rd176, %rd175, 4210837510808201515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r99,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r100}, %rd174;
	}
	shf.r.wrap.b32 	%r101, %r100, %r99, 14;
	shf.r.wrap.b32 	%r102, %r99, %r100, 14;
	mov.b64 	%rd177, {%r102, %r101};
	shf.r.wrap.b32 	%r103, %r100, %r99, 18;
	shf.r.wrap.b32 	%r104, %r99, %r100, 18;
	mov.b64 	%rd178, {%r104, %r103};
	xor.b64  	%rd179, %rd178, %rd177;
	shf.l.wrap.b32 	%r105, %r99, %r100, 23;
	shf.l.wrap.b32 	%r106, %r100, %r99, 23;
	mov.b64 	%rd180, {%r106, %r105};
	xor.b64  	%rd181, %rd179, %rd180;
	and.b64  	%rd182, %rd174, -3887949035690463538;
	xor.b64  	%rd183, %rd182, -7276294671716946913;
	add.s64 	%rd184, %rd6, %rd183;
	add.s64 	%rd185, %rd184, %rd181;
	add.s64 	%rd186, %rd185, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r107,%dummy}, %rd176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r108}, %rd176;
	}
	shf.r.wrap.b32 	%r109, %r108, %r107, 28;
	shf.r.wrap.b32 	%r110, %r107, %r108, 28;
	mov.b64 	%rd187, {%r110, %r109};
	shf.l.wrap.b32 	%r111, %r107, %r108, 30;
	shf.l.wrap.b32 	%r112, %r108, %r107, 30;
	mov.b64 	%rd188, {%r112, %r111};
	xor.b64  	%rd189, %rd188, %rd187;
	shf.l.wrap.b32 	%r113, %r107, %r108, 25;
	shf.l.wrap.b32 	%r114, %r108, %r107, 25;
	mov.b64 	%rd190, {%r114, %r113};
	xor.b64  	%rd191, %rd189, %rd190;
	xor.b64  	%rd192, %rd176, -4942790177534073029;
	xor.b64  	%rd193, %rd176, 7640891576956012808;
	and.b64  	%rd194, %rd193, %rd192;
	xor.b64  	%rd195, %rd194, %rd176;
	add.s64 	%rd196, %rd185, %rd195;
	add.s64 	%rd197, %rd196, %rd191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r115,%dummy}, %rd186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r116}, %rd186;
	}
	shf.r.wrap.b32 	%r117, %r116, %r115, 14;
	shf.r.wrap.b32 	%r118, %r115, %r116, 14;
	mov.b64 	%rd198, {%r118, %r117};
	shf.r.wrap.b32 	%r119, %r116, %r115, 18;
	shf.r.wrap.b32 	%r120, %r115, %r116, 18;
	mov.b64 	%rd199, {%r120, %r119};
	xor.b64  	%rd200, %rd199, %rd198;
	shf.l.wrap.b32 	%r121, %r115, %r116, 23;
	shf.l.wrap.b32 	%r122, %r116, %r115, 23;
	mov.b64 	%rd201, {%r122, %r121};
	xor.b64  	%rd202, %rd200, %rd201;
	xor.b64  	%rd203, %rd174, 5840696475078001361;
	and.b64  	%rd204, %rd186, %rd203;
	xor.b64  	%rd205, %rd204, 5840696475078001361;
	add.s64 	%rd206, %rd7, %rd205;
	add.s64 	%rd207, %rd206, %rd202;
	add.s64 	%rd208, %rd207, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r123,%dummy}, %rd197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r124}, %rd197;
	}
	shf.r.wrap.b32 	%r125, %r124, %r123, 28;
	shf.r.wrap.b32 	%r126, %r123, %r124, 28;
	mov.b64 	%rd209, {%r126, %r125};
	shf.l.wrap.b32 	%r127, %r123, %r124, 30;
	shf.l.wrap.b32 	%r128, %r124, %r123, 30;
	mov.b64 	%rd210, {%r128, %r127};
	xor.b64  	%rd211, %rd210, %rd209;
	shf.l.wrap.b32 	%r129, %r123, %r124, 25;
	shf.l.wrap.b32 	%r130, %r124, %r123, 25;
	mov.b64 	%rd212, {%r130, %r129};
	xor.b64  	%rd213, %rd211, %rd212;
	xor.b64  	%rd214, %rd197, 7640891576956012808;
	xor.b64  	%rd215, %rd197, %rd176;
	and.b64  	%rd216, %rd215, %rd214;
	xor.b64  	%rd217, %rd216, %rd197;
	add.s64 	%rd218, %rd207, %rd217;
	add.s64 	%rd219, %rd218, %rd213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r131,%dummy}, %rd208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r132}, %rd208;
	}
	shf.r.wrap.b32 	%r133, %r132, %r131, 14;
	shf.r.wrap.b32 	%r134, %r131, %r132, 14;
	mov.b64 	%rd220, {%r134, %r133};
	shf.r.wrap.b32 	%r135, %r132, %r131, 18;
	shf.r.wrap.b32 	%r136, %r131, %r132, 18;
	mov.b64 	%rd221, {%r136, %r135};
	xor.b64  	%rd222, %rd221, %rd220;
	shf.l.wrap.b32 	%r137, %r131, %r132, 23;
	shf.l.wrap.b32 	%r138, %r132, %r131, 23;
	mov.b64 	%rd223, {%r138, %r137};
	xor.b64  	%rd224, %rd222, %rd223;
	xor.b64  	%rd225, %rd186, %rd174;
	and.b64  	%rd226, %rd208, %rd225;
	xor.b64  	%rd227, %rd226, %rd174;
	add.s64 	%rd228, %rd8, %rd227;
	add.s64 	%rd229, %rd228, %rd224;
	add.s64 	%rd230, %rd229, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r139,%dummy}, %rd219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd219;
	}
	shf.r.wrap.b32 	%r141, %r140, %r139, 28;
	shf.r.wrap.b32 	%r142, %r139, %r140, 28;
	mov.b64 	%rd231, {%r142, %r141};
	shf.l.wrap.b32 	%r143, %r139, %r140, 30;
	shf.l.wrap.b32 	%r144, %r140, %r139, 30;
	mov.b64 	%rd232, {%r144, %r143};
	xor.b64  	%rd233, %rd232, %rd231;
	shf.l.wrap.b32 	%r145, %r139, %r140, 25;
	shf.l.wrap.b32 	%r146, %r140, %r139, 25;
	mov.b64 	%rd234, {%r146, %r145};
	xor.b64  	%rd235, %rd233, %rd234;
	xor.b64  	%rd236, %rd219, %rd176;
	xor.b64  	%rd237, %rd219, %rd197;
	and.b64  	%rd238, %rd237, %rd236;
	xor.b64  	%rd239, %rd238, %rd219;
	add.s64 	%rd240, %rd229, %rd239;
	add.s64 	%rd241, %rd240, %rd235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r147,%dummy}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r148}, %rd230;
	}
	shf.r.wrap.b32 	%r149, %r148, %r147, 14;
	shf.r.wrap.b32 	%r150, %r147, %r148, 14;
	mov.b64 	%rd242, {%r150, %r149};
	shf.r.wrap.b32 	%r151, %r148, %r147, 18;
	shf.r.wrap.b32 	%r152, %r147, %r148, 18;
	mov.b64 	%rd243, {%r152, %r151};
	xor.b64  	%rd244, %rd243, %rd242;
	shf.l.wrap.b32 	%r153, %r147, %r148, 23;
	shf.l.wrap.b32 	%r154, %r148, %r147, 23;
	mov.b64 	%rd245, {%r154, %r153};
	xor.b64  	%rd246, %rd244, %rd245;
	xor.b64  	%rd247, %rd208, %rd186;
	and.b64  	%rd248, %rd230, %rd247;
	xor.b64  	%rd249, %rd248, %rd186;
	add.s64 	%rd250, %rd2641, %rd174;
	add.s64 	%rd251, %rd250, %rd249;
	add.s64 	%rd252, %rd251, %rd246;
	add.s64 	%rd253, %rd252, %rd176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r155,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r156}, %rd241;
	}
	shf.r.wrap.b32 	%r157, %r156, %r155, 28;
	shf.r.wrap.b32 	%r158, %r155, %r156, 28;
	mov.b64 	%rd254, {%r158, %r157};
	shf.l.wrap.b32 	%r159, %r155, %r156, 30;
	shf.l.wrap.b32 	%r160, %r156, %r155, 30;
	mov.b64 	%rd255, {%r160, %r159};
	xor.b64  	%rd256, %rd255, %rd254;
	shf.l.wrap.b32 	%r161, %r155, %r156, 25;
	shf.l.wrap.b32 	%r162, %r156, %r155, 25;
	mov.b64 	%rd257, {%r162, %r161};
	xor.b64  	%rd258, %rd256, %rd257;
	xor.b64  	%rd259, %rd241, %rd197;
	xor.b64  	%rd260, %rd241, %rd219;
	and.b64  	%rd261, %rd260, %rd259;
	xor.b64  	%rd262, %rd261, %rd241;
	add.s64 	%rd263, %rd252, %rd262;
	add.s64 	%rd264, %rd263, %rd258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r163,%dummy}, %rd253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r164}, %rd253;
	}
	shf.r.wrap.b32 	%r165, %r164, %r163, 14;
	shf.r.wrap.b32 	%r166, %r163, %r164, 14;
	mov.b64 	%rd265, {%r166, %r165};
	shf.r.wrap.b32 	%r167, %r164, %r163, 18;
	shf.r.wrap.b32 	%r168, %r163, %r164, 18;
	mov.b64 	%rd266, {%r168, %r167};
	xor.b64  	%rd267, %rd266, %rd265;
	shf.l.wrap.b32 	%r169, %r163, %r164, 23;
	shf.l.wrap.b32 	%r170, %r164, %r163, 23;
	mov.b64 	%rd268, {%r170, %r169};
	xor.b64  	%rd269, %rd267, %rd268;
	xor.b64  	%rd270, %rd230, %rd208;
	and.b64  	%rd271, %rd253, %rd270;
	xor.b64  	%rd272, %rd271, %rd208;
	add.s64 	%rd273, %rd2642, %rd186;
	add.s64 	%rd274, %rd273, %rd272;
	add.s64 	%rd275, %rd274, %rd269;
	add.s64 	%rd276, %rd275, %rd197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r171,%dummy}, %rd264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r172}, %rd264;
	}
	shf.r.wrap.b32 	%r173, %r172, %r171, 28;
	shf.r.wrap.b32 	%r174, %r171, %r172, 28;
	mov.b64 	%rd277, {%r174, %r173};
	shf.l.wrap.b32 	%r175, %r171, %r172, 30;
	shf.l.wrap.b32 	%r176, %r172, %r171, 30;
	mov.b64 	%rd278, {%r176, %r175};
	xor.b64  	%rd279, %rd278, %rd277;
	shf.l.wrap.b32 	%r177, %r171, %r172, 25;
	shf.l.wrap.b32 	%r178, %r172, %r171, 25;
	mov.b64 	%rd280, {%r178, %r177};
	xor.b64  	%rd281, %rd279, %rd280;
	xor.b64  	%rd282, %rd264, %rd219;
	xor.b64  	%rd283, %rd264, %rd241;
	and.b64  	%rd284, %rd283, %rd282;
	xor.b64  	%rd285, %rd284, %rd264;
	add.s64 	%rd286, %rd275, %rd285;
	add.s64 	%rd287, %rd286, %rd281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r179,%dummy}, %rd276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r180}, %rd276;
	}
	shf.r.wrap.b32 	%r181, %r180, %r179, 14;
	shf.r.wrap.b32 	%r182, %r179, %r180, 14;
	mov.b64 	%rd288, {%r182, %r181};
	shf.r.wrap.b32 	%r183, %r180, %r179, 18;
	shf.r.wrap.b32 	%r184, %r179, %r180, 18;
	mov.b64 	%rd289, {%r184, %r183};
	xor.b64  	%rd290, %rd289, %rd288;
	shf.l.wrap.b32 	%r185, %r179, %r180, 23;
	shf.l.wrap.b32 	%r186, %r180, %r179, 23;
	mov.b64 	%rd291, {%r186, %r185};
	xor.b64  	%rd292, %rd290, %rd291;
	xor.b64  	%rd293, %rd253, %rd230;
	and.b64  	%rd294, %rd276, %rd293;
	xor.b64  	%rd295, %rd294, %rd230;
	add.s64 	%rd296, %rd2643, %rd208;
	add.s64 	%rd297, %rd296, %rd295;
	add.s64 	%rd298, %rd297, %rd292;
	add.s64 	%rd299, %rd298, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r187,%dummy}, %rd287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r188}, %rd287;
	}
	shf.r.wrap.b32 	%r189, %r188, %r187, 28;
	shf.r.wrap.b32 	%r190, %r187, %r188, 28;
	mov.b64 	%rd300, {%r190, %r189};
	shf.l.wrap.b32 	%r191, %r187, %r188, 30;
	shf.l.wrap.b32 	%r192, %r188, %r187, 30;
	mov.b64 	%rd301, {%r192, %r191};
	xor.b64  	%rd302, %rd301, %rd300;
	shf.l.wrap.b32 	%r193, %r187, %r188, 25;
	shf.l.wrap.b32 	%r194, %r188, %r187, 25;
	mov.b64 	%rd303, {%r194, %r193};
	xor.b64  	%rd304, %rd302, %rd303;
	xor.b64  	%rd305, %rd287, %rd241;
	xor.b64  	%rd306, %rd287, %rd264;
	and.b64  	%rd307, %rd306, %rd305;
	xor.b64  	%rd308, %rd307, %rd287;
	add.s64 	%rd309, %rd298, %rd308;
	add.s64 	%rd310, %rd309, %rd304;
	add.s64 	%rd311, %rd2644, %rd230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r195,%dummy}, %rd299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r196}, %rd299;
	}
	shf.r.wrap.b32 	%r197, %r196, %r195, 14;
	shf.r.wrap.b32 	%r198, %r195, %r196, 14;
	mov.b64 	%rd312, {%r198, %r197};
	shf.r.wrap.b32 	%r199, %r196, %r195, 18;
	shf.r.wrap.b32 	%r200, %r195, %r196, 18;
	mov.b64 	%rd313, {%r200, %r199};
	xor.b64  	%rd314, %rd313, %rd312;
	shf.l.wrap.b32 	%r201, %r195, %r196, 23;
	shf.l.wrap.b32 	%r202, %r196, %r195, 23;
	mov.b64 	%rd315, {%r202, %r201};
	xor.b64  	%rd316, %rd314, %rd315;
	xor.b64  	%rd317, %rd276, %rd253;
	and.b64  	%rd318, %rd299, %rd317;
	xor.b64  	%rd319, %rd318, %rd253;
	add.s64 	%rd320, %rd311, %rd319;
	add.s64 	%rd321, %rd320, %rd316;
	add.s64 	%rd322, %rd321, %rd241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r203,%dummy}, %rd310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r204}, %rd310;
	}
	shf.r.wrap.b32 	%r205, %r204, %r203, 28;
	shf.r.wrap.b32 	%r206, %r203, %r204, 28;
	mov.b64 	%rd323, {%r206, %r205};
	shf.l.wrap.b32 	%r207, %r203, %r204, 30;
	shf.l.wrap.b32 	%r208, %r204, %r203, 30;
	mov.b64 	%rd324, {%r208, %r207};
	xor.b64  	%rd325, %rd324, %rd323;
	shf.l.wrap.b32 	%r209, %r203, %r204, 25;
	shf.l.wrap.b32 	%r210, %r204, %r203, 25;
	mov.b64 	%rd326, {%r210, %r209};
	xor.b64  	%rd327, %rd325, %rd326;
	xor.b64  	%rd328, %rd310, %rd264;
	xor.b64  	%rd329, %rd310, %rd287;
	and.b64  	%rd330, %rd329, %rd328;
	xor.b64  	%rd331, %rd330, %rd310;
	add.s64 	%rd332, %rd321, %rd331;
	add.s64 	%rd333, %rd332, %rd327;
	add.s64 	%rd334, %rd2645, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r212}, %rd322;
	}
	shf.r.wrap.b32 	%r213, %r212, %r211, 14;
	shf.r.wrap.b32 	%r214, %r211, %r212, 14;
	mov.b64 	%rd335, {%r214, %r213};
	shf.r.wrap.b32 	%r215, %r212, %r211, 18;
	shf.r.wrap.b32 	%r216, %r211, %r212, 18;
	mov.b64 	%rd336, {%r216, %r215};
	xor.b64  	%rd337, %rd336, %rd335;
	shf.l.wrap.b32 	%r217, %r211, %r212, 23;
	shf.l.wrap.b32 	%r218, %r212, %r211, 23;
	mov.b64 	%rd338, {%r218, %r217};
	xor.b64  	%rd339, %rd337, %rd338;
	xor.b64  	%rd340, %rd299, %rd276;
	and.b64  	%rd341, %rd322, %rd340;
	xor.b64  	%rd342, %rd341, %rd276;
	add.s64 	%rd343, %rd334, %rd342;
	add.s64 	%rd344, %rd343, %rd339;
	add.s64 	%rd345, %rd344, %rd264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r219,%dummy}, %rd333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r220}, %rd333;
	}
	shf.r.wrap.b32 	%r221, %r220, %r219, 28;
	shf.r.wrap.b32 	%r222, %r219, %r220, 28;
	mov.b64 	%rd346, {%r222, %r221};
	shf.l.wrap.b32 	%r223, %r219, %r220, 30;
	shf.l.wrap.b32 	%r224, %r220, %r219, 30;
	mov.b64 	%rd347, {%r224, %r223};
	xor.b64  	%rd348, %rd347, %rd346;
	shf.l.wrap.b32 	%r225, %r219, %r220, 25;
	shf.l.wrap.b32 	%r226, %r220, %r219, 25;
	mov.b64 	%rd349, {%r226, %r225};
	xor.b64  	%rd350, %rd348, %rd349;
	xor.b64  	%rd351, %rd333, %rd287;
	xor.b64  	%rd352, %rd333, %rd310;
	and.b64  	%rd353, %rd352, %rd351;
	xor.b64  	%rd354, %rd353, %rd333;
	add.s64 	%rd355, %rd344, %rd354;
	add.s64 	%rd356, %rd355, %rd350;
	add.s64 	%rd357, %rd2646, %rd276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r227,%dummy}, %rd345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r228}, %rd345;
	}
	shf.r.wrap.b32 	%r229, %r228, %r227, 14;
	shf.r.wrap.b32 	%r230, %r227, %r228, 14;
	mov.b64 	%rd358, {%r230, %r229};
	shf.r.wrap.b32 	%r231, %r228, %r227, 18;
	shf.r.wrap.b32 	%r232, %r227, %r228, 18;
	mov.b64 	%rd359, {%r232, %r231};
	xor.b64  	%rd360, %rd359, %rd358;
	shf.l.wrap.b32 	%r233, %r227, %r228, 23;
	shf.l.wrap.b32 	%r234, %r228, %r227, 23;
	mov.b64 	%rd361, {%r234, %r233};
	xor.b64  	%rd362, %rd360, %rd361;
	xor.b64  	%rd363, %rd322, %rd299;
	and.b64  	%rd364, %rd345, %rd363;
	xor.b64  	%rd365, %rd364, %rd299;
	add.s64 	%rd366, %rd357, %rd365;
	add.s64 	%rd367, %rd366, %rd362;
	add.s64 	%rd368, %rd367, %rd287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r235,%dummy}, %rd356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r236}, %rd356;
	}
	shf.r.wrap.b32 	%r237, %r236, %r235, 28;
	shf.r.wrap.b32 	%r238, %r235, %r236, 28;
	mov.b64 	%rd369, {%r238, %r237};
	shf.l.wrap.b32 	%r239, %r235, %r236, 30;
	shf.l.wrap.b32 	%r240, %r236, %r235, 30;
	mov.b64 	%rd370, {%r240, %r239};
	xor.b64  	%rd371, %rd370, %rd369;
	shf.l.wrap.b32 	%r241, %r235, %r236, 25;
	shf.l.wrap.b32 	%r242, %r236, %r235, 25;
	mov.b64 	%rd372, {%r242, %r241};
	xor.b64  	%rd373, %rd371, %rd372;
	xor.b64  	%rd374, %rd356, %rd310;
	xor.b64  	%rd375, %rd356, %rd333;
	and.b64  	%rd376, %rd375, %rd374;
	xor.b64  	%rd377, %rd376, %rd356;
	add.s64 	%rd378, %rd367, %rd377;
	add.s64 	%rd379, %rd378, %rd373;
	add.s64 	%rd380, %rd2647, %rd299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r243,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r244}, %rd368;
	}
	shf.r.wrap.b32 	%r245, %r244, %r243, 14;
	shf.r.wrap.b32 	%r246, %r243, %r244, 14;
	mov.b64 	%rd381, {%r246, %r245};
	shf.r.wrap.b32 	%r247, %r244, %r243, 18;
	shf.r.wrap.b32 	%r248, %r243, %r244, 18;
	mov.b64 	%rd382, {%r248, %r247};
	xor.b64  	%rd383, %rd382, %rd381;
	shf.l.wrap.b32 	%r249, %r243, %r244, 23;
	shf.l.wrap.b32 	%r250, %r244, %r243, 23;
	mov.b64 	%rd384, {%r250, %r249};
	xor.b64  	%rd385, %rd383, %rd384;
	xor.b64  	%rd386, %rd345, %rd322;
	and.b64  	%rd387, %rd368, %rd386;
	xor.b64  	%rd388, %rd387, %rd322;
	add.s64 	%rd389, %rd380, %rd388;
	add.s64 	%rd390, %rd389, %rd385;
	add.s64 	%rd391, %rd390, %rd310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r251,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r252}, %rd379;
	}
	shf.r.wrap.b32 	%r253, %r252, %r251, 28;
	shf.r.wrap.b32 	%r254, %r251, %r252, 28;
	mov.b64 	%rd392, {%r254, %r253};
	shf.l.wrap.b32 	%r255, %r251, %r252, 30;
	shf.l.wrap.b32 	%r256, %r252, %r251, 30;
	mov.b64 	%rd393, {%r256, %r255};
	xor.b64  	%rd394, %rd393, %rd392;
	shf.l.wrap.b32 	%r257, %r251, %r252, 25;
	shf.l.wrap.b32 	%r258, %r252, %r251, 25;
	mov.b64 	%rd395, {%r258, %r257};
	xor.b64  	%rd396, %rd394, %rd395;
	xor.b64  	%rd397, %rd379, %rd333;
	xor.b64  	%rd398, %rd379, %rd356;
	and.b64  	%rd399, %rd398, %rd397;
	xor.b64  	%rd400, %rd399, %rd379;
	add.s64 	%rd401, %rd390, %rd400;
	add.s64 	%rd402, %rd401, %rd396;
	add.s64 	%rd403, %rd2648, %rd322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r259,%dummy}, %rd391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r260}, %rd391;
	}
	shf.r.wrap.b32 	%r261, %r260, %r259, 14;
	shf.r.wrap.b32 	%r262, %r259, %r260, 14;
	mov.b64 	%rd404, {%r262, %r261};
	shf.r.wrap.b32 	%r263, %r260, %r259, 18;
	shf.r.wrap.b32 	%r264, %r259, %r260, 18;
	mov.b64 	%rd405, {%r264, %r263};
	xor.b64  	%rd406, %rd405, %rd404;
	shf.l.wrap.b32 	%r265, %r259, %r260, 23;
	shf.l.wrap.b32 	%r266, %r260, %r259, 23;
	mov.b64 	%rd407, {%r266, %r265};
	xor.b64  	%rd408, %rd406, %rd407;
	xor.b64  	%rd409, %rd368, %rd345;
	and.b64  	%rd410, %rd391, %rd409;
	xor.b64  	%rd411, %rd410, %rd345;
	add.s64 	%rd412, %rd403, %rd411;
	add.s64 	%rd413, %rd412, %rd408;
	add.s64 	%rd414, %rd413, %rd333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r267,%dummy}, %rd402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r268}, %rd402;
	}
	shf.r.wrap.b32 	%r269, %r268, %r267, 28;
	shf.r.wrap.b32 	%r270, %r267, %r268, 28;
	mov.b64 	%rd415, {%r270, %r269};
	shf.l.wrap.b32 	%r271, %r267, %r268, 30;
	shf.l.wrap.b32 	%r272, %r268, %r267, 30;
	mov.b64 	%rd416, {%r272, %r271};
	xor.b64  	%rd417, %rd416, %rd415;
	shf.l.wrap.b32 	%r273, %r267, %r268, 25;
	shf.l.wrap.b32 	%r274, %r268, %r267, 25;
	mov.b64 	%rd418, {%r274, %r273};
	xor.b64  	%rd419, %rd417, %rd418;
	xor.b64  	%rd420, %rd402, %rd356;
	xor.b64  	%rd421, %rd402, %rd379;
	and.b64  	%rd422, %rd421, %rd420;
	xor.b64  	%rd423, %rd422, %rd402;
	add.s64 	%rd424, %rd413, %rd423;
	add.s64 	%rd425, %rd424, %rd419;
	add.s64 	%rd426, %rd2649, %rd345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r275,%dummy}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd414;
	}
	shf.r.wrap.b32 	%r277, %r276, %r275, 14;
	shf.r.wrap.b32 	%r278, %r275, %r276, 14;
	mov.b64 	%rd427, {%r278, %r277};
	shf.r.wrap.b32 	%r279, %r276, %r275, 18;
	shf.r.wrap.b32 	%r280, %r275, %r276, 18;
	mov.b64 	%rd428, {%r280, %r279};
	xor.b64  	%rd429, %rd428, %rd427;
	shf.l.wrap.b32 	%r281, %r275, %r276, 23;
	shf.l.wrap.b32 	%r282, %r276, %r275, 23;
	mov.b64 	%rd430, {%r282, %r281};
	xor.b64  	%rd431, %rd429, %rd430;
	xor.b64  	%rd432, %rd391, %rd368;
	and.b64  	%rd433, %rd414, %rd432;
	xor.b64  	%rd434, %rd433, %rd368;
	add.s64 	%rd435, %rd426, %rd434;
	add.s64 	%rd436, %rd435, %rd431;
	add.s64 	%rd437, %rd436, %rd356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r284}, %rd425;
	}
	shf.r.wrap.b32 	%r285, %r284, %r283, 28;
	shf.r.wrap.b32 	%r286, %r283, %r284, 28;
	mov.b64 	%rd438, {%r286, %r285};
	shf.l.wrap.b32 	%r287, %r283, %r284, 30;
	shf.l.wrap.b32 	%r288, %r284, %r283, 30;
	mov.b64 	%rd439, {%r288, %r287};
	xor.b64  	%rd440, %rd439, %rd438;
	shf.l.wrap.b32 	%r289, %r283, %r284, 25;
	shf.l.wrap.b32 	%r290, %r284, %r283, 25;
	mov.b64 	%rd441, {%r290, %r289};
	xor.b64  	%rd442, %rd440, %rd441;
	xor.b64  	%rd443, %rd425, %rd379;
	xor.b64  	%rd444, %rd425, %rd402;
	and.b64  	%rd445, %rd444, %rd443;
	xor.b64  	%rd446, %rd445, %rd425;
	add.s64 	%rd447, %rd436, %rd446;
	add.s64 	%rd448, %rd447, %rd442;
	add.s64 	%rd449, %rd2650, %rd368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r291,%dummy}, %rd437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r292}, %rd437;
	}
	shf.r.wrap.b32 	%r293, %r292, %r291, 14;
	shf.r.wrap.b32 	%r294, %r291, %r292, 14;
	mov.b64 	%rd450, {%r294, %r293};
	shf.r.wrap.b32 	%r295, %r292, %r291, 18;
	shf.r.wrap.b32 	%r296, %r291, %r292, 18;
	mov.b64 	%rd451, {%r296, %r295};
	xor.b64  	%rd452, %rd451, %rd450;
	shf.l.wrap.b32 	%r297, %r291, %r292, 23;
	shf.l.wrap.b32 	%r298, %r292, %r291, 23;
	mov.b64 	%rd453, {%r298, %r297};
	xor.b64  	%rd454, %rd452, %rd453;
	xor.b64  	%rd455, %rd414, %rd391;
	and.b64  	%rd456, %rd437, %rd455;
	xor.b64  	%rd457, %rd456, %rd391;
	add.s64 	%rd458, %rd449, %rd457;
	add.s64 	%rd459, %rd458, %rd454;
	add.s64 	%rd460, %rd459, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd448;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 28;
	shf.r.wrap.b32 	%r302, %r299, %r300, 28;
	mov.b64 	%rd461, {%r302, %r301};
	shf.l.wrap.b32 	%r303, %r299, %r300, 30;
	shf.l.wrap.b32 	%r304, %r300, %r299, 30;
	mov.b64 	%rd462, {%r304, %r303};
	xor.b64  	%rd463, %rd462, %rd461;
	shf.l.wrap.b32 	%r305, %r299, %r300, 25;
	shf.l.wrap.b32 	%r306, %r300, %r299, 25;
	mov.b64 	%rd464, {%r306, %r305};
	xor.b64  	%rd465, %rd463, %rd464;
	xor.b64  	%rd466, %rd448, %rd402;
	xor.b64  	%rd467, %rd448, %rd425;
	and.b64  	%rd468, %rd467, %rd466;
	xor.b64  	%rd469, %rd468, %rd448;
	add.s64 	%rd470, %rd459, %rd469;
	add.s64 	%rd471, %rd470, %rd465;
	add.s64 	%rd472, %rd2651, %rd391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd460;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 14;
	shf.r.wrap.b32 	%r310, %r307, %r308, 14;
	mov.b64 	%rd473, {%r310, %r309};
	shf.r.wrap.b32 	%r311, %r308, %r307, 18;
	shf.r.wrap.b32 	%r312, %r307, %r308, 18;
	mov.b64 	%rd474, {%r312, %r311};
	xor.b64  	%rd475, %rd474, %rd473;
	shf.l.wrap.b32 	%r313, %r307, %r308, 23;
	shf.l.wrap.b32 	%r314, %r308, %r307, 23;
	mov.b64 	%rd476, {%r314, %r313};
	xor.b64  	%rd477, %rd475, %rd476;
	xor.b64  	%rd478, %rd437, %rd414;
	and.b64  	%rd479, %rd460, %rd478;
	xor.b64  	%rd480, %rd479, %rd414;
	add.s64 	%rd481, %rd472, %rd480;
	add.s64 	%rd482, %rd481, %rd477;
	add.s64 	%rd483, %rd482, %rd402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r315,%dummy}, %rd471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd471;
	}
	shf.r.wrap.b32 	%r317, %r316, %r315, 28;
	shf.r.wrap.b32 	%r318, %r315, %r316, 28;
	mov.b64 	%rd484, {%r318, %r317};
	shf.l.wrap.b32 	%r319, %r315, %r316, 30;
	shf.l.wrap.b32 	%r320, %r316, %r315, 30;
	mov.b64 	%rd485, {%r320, %r319};
	xor.b64  	%rd486, %rd485, %rd484;
	shf.l.wrap.b32 	%r321, %r315, %r316, 25;
	shf.l.wrap.b32 	%r322, %r316, %r315, 25;
	mov.b64 	%rd487, {%r322, %r321};
	xor.b64  	%rd488, %rd486, %rd487;
	xor.b64  	%rd489, %rd471, %rd425;
	xor.b64  	%rd490, %rd471, %rd448;
	and.b64  	%rd491, %rd490, %rd489;
	xor.b64  	%rd492, %rd491, %rd471;
	add.s64 	%rd493, %rd482, %rd492;
	add.s64 	%rd494, %rd493, %rd488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd483;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 14;
	shf.r.wrap.b32 	%r326, %r323, %r324, 14;
	mov.b64 	%rd495, {%r326, %r325};
	shf.r.wrap.b32 	%r327, %r324, %r323, 18;
	shf.r.wrap.b32 	%r328, %r323, %r324, 18;
	mov.b64 	%rd496, {%r328, %r327};
	xor.b64  	%rd497, %rd496, %rd495;
	shf.l.wrap.b32 	%r329, %r323, %r324, 23;
	shf.l.wrap.b32 	%r330, %r324, %r323, 23;
	mov.b64 	%rd498, {%r330, %r329};
	xor.b64  	%rd499, %rd497, %rd498;
	xor.b64  	%rd500, %rd460, %rd437;
	and.b64  	%rd501, %rd483, %rd500;
	xor.b64  	%rd502, %rd501, %rd437;
	add.s64 	%rd503, %rd414, %rd2714;
	add.s64 	%rd504, %rd503, %rd2652;
	add.s64 	%rd505, %rd504, %rd502;
	add.s64 	%rd506, %rd505, %rd499;
	add.s64 	%rd507, %rd506, %rd425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd494;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 28;
	shf.r.wrap.b32 	%r334, %r331, %r332, 28;
	mov.b64 	%rd508, {%r334, %r333};
	shf.l.wrap.b32 	%r335, %r331, %r332, 30;
	shf.l.wrap.b32 	%r336, %r332, %r331, 30;
	mov.b64 	%rd509, {%r336, %r335};
	xor.b64  	%rd510, %rd509, %rd508;
	shf.l.wrap.b32 	%r337, %r331, %r332, 25;
	shf.l.wrap.b32 	%r338, %r332, %r331, 25;
	mov.b64 	%rd511, {%r338, %r337};
	xor.b64  	%rd512, %rd510, %rd511;
	xor.b64  	%rd513, %rd494, %rd448;
	xor.b64  	%rd514, %rd494, %rd471;
	and.b64  	%rd515, %rd514, %rd513;
	xor.b64  	%rd516, %rd515, %rd494;
	add.s64 	%rd517, %rd506, %rd516;
	add.s64 	%rd518, %rd517, %rd512;
	add.s64 	%rd519, %rd171, %rd22;
	add.s64 	%rd520, %rd519, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r339,%dummy}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r340}, %rd520;
	}
	shf.r.wrap.b32 	%r341, %r340, %r339, 19;
	shf.r.wrap.b32 	%r342, %r339, %r340, 19;
	mov.b64 	%rd521, {%r342, %r341};
	shf.l.wrap.b32 	%r343, %r339, %r340, 3;
	shf.l.wrap.b32 	%r344, %r340, %r339, 3;
	mov.b64 	%rd522, {%r344, %r343};
	shr.u64 	%rd523, %rd520, 6;
	xor.b64  	%rd524, %rd521, %rd523;
	xor.b64  	%rd525, %rd524, %rd522;
	add.s64 	%rd526, %rd525, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r345,%dummy}, %rd526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r346}, %rd526;
	}
	shf.r.wrap.b32 	%r347, %r346, %r345, 19;
	shf.r.wrap.b32 	%r348, %r345, %r346, 19;
	mov.b64 	%rd527, {%r348, %r347};
	shf.l.wrap.b32 	%r349, %r345, %r346, 3;
	shf.l.wrap.b32 	%r350, %r346, %r345, 3;
	mov.b64 	%rd528, {%r350, %r349};
	shr.u64 	%rd529, %rd526, 6;
	xor.b64  	%rd530, %rd527, %rd529;
	xor.b64  	%rd531, %rd530, %rd528;
	add.s64 	%rd532, %rd531, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r351,%dummy}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd532;
	}
	shf.r.wrap.b32 	%r353, %r352, %r351, 19;
	shf.r.wrap.b32 	%r354, %r351, %r352, 19;
	mov.b64 	%rd533, {%r354, %r353};
	shf.l.wrap.b32 	%r355, %r351, %r352, 3;
	shf.l.wrap.b32 	%r356, %r352, %r351, 3;
	mov.b64 	%rd534, {%r356, %r355};
	shr.u64 	%rd535, %rd532, 6;
	xor.b64  	%rd536, %rd533, %rd535;
	xor.b64  	%rd537, %rd536, %rd534;
	add.s64 	%rd538, %rd2714, %rd537;
	add.s64 	%rd539, %rd538, %rd24;
	add.s64 	%rd540, %rd520, %rd28;
	add.s64 	%rd541, %rd540, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r357,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r358}, %rd539;
	}
	shf.r.wrap.b32 	%r359, %r358, %r357, 19;
	shf.r.wrap.b32 	%r360, %r357, %r358, 19;
	mov.b64 	%rd542, {%r360, %r359};
	shf.l.wrap.b32 	%r361, %r357, %r358, 3;
	shf.l.wrap.b32 	%r362, %r358, %r357, 3;
	mov.b64 	%rd543, {%r362, %r361};
	shr.u64 	%rd544, %rd539, 6;
	xor.b64  	%rd545, %rd542, %rd544;
	xor.b64  	%rd546, %rd545, %rd543;
	add.s64 	%rd547, %rd25, %rd546;
	add.s64 	%rd548, %rd547, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r363,%dummy}, %rd541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r364}, %rd541;
	}
	shf.r.wrap.b32 	%r365, %r364, %r363, 19;
	shf.r.wrap.b32 	%r366, %r363, %r364, 19;
	mov.b64 	%rd549, {%r366, %r365};
	shf.l.wrap.b32 	%r367, %r363, %r364, 3;
	shf.l.wrap.b32 	%r368, %r364, %r363, 3;
	mov.b64 	%rd550, {%r368, %r367};
	shr.u64 	%rd551, %rd541, 6;
	xor.b64  	%rd552, %rd549, %rd551;
	xor.b64  	%rd553, %rd552, %rd550;
	add.s64 	%rd554, %rd526, %rd553;
	add.s64 	%rd555, %rd554, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r370}, %rd548;
	}
	shf.r.wrap.b32 	%r371, %r370, %r369, 19;
	shf.r.wrap.b32 	%r372, %r369, %r370, 19;
	mov.b64 	%rd556, {%r372, %r371};
	shf.l.wrap.b32 	%r373, %r369, %r370, 3;
	shf.l.wrap.b32 	%r374, %r370, %r369, 3;
	mov.b64 	%rd557, {%r374, %r373};
	shr.u64 	%rd558, %rd548, 6;
	xor.b64  	%rd559, %rd556, %rd558;
	xor.b64  	%rd560, %rd559, %rd557;
	add.s64 	%rd561, %rd26, %rd560;
	add.s64 	%rd562, %rd561, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r375,%dummy}, %rd555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r376}, %rd555;
	}
	shf.r.wrap.b32 	%r377, %r376, %r375, 19;
	shf.r.wrap.b32 	%r378, %r375, %r376, 19;
	mov.b64 	%rd563, {%r378, %r377};
	shf.l.wrap.b32 	%r379, %r375, %r376, 3;
	shf.l.wrap.b32 	%r380, %r376, %r375, 3;
	mov.b64 	%rd564, {%r380, %r379};
	shr.u64 	%rd565, %rd555, 6;
	xor.b64  	%rd566, %rd563, %rd565;
	xor.b64  	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd532, %rd567;
	add.s64 	%rd569, %rd568, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r381,%dummy}, %rd562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r382}, %rd562;
	}
	shf.r.wrap.b32 	%r383, %r382, %r381, 19;
	shf.r.wrap.b32 	%r384, %r381, %r382, 19;
	mov.b64 	%rd570, {%r384, %r383};
	shf.l.wrap.b32 	%r385, %r381, %r382, 3;
	shf.l.wrap.b32 	%r386, %r382, %r381, 3;
	mov.b64 	%rd571, {%r386, %r385};
	shr.u64 	%rd572, %rd562, 6;
	xor.b64  	%rd573, %rd570, %rd572;
	xor.b64  	%rd574, %rd573, %rd571;
	add.s64 	%rd575, %rd27, %rd574;
	add.s64 	%rd576, %rd575, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd569;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 19;
	shf.r.wrap.b32 	%r390, %r387, %r388, 19;
	mov.b64 	%rd577, {%r390, %r389};
	shf.l.wrap.b32 	%r391, %r387, %r388, 3;
	shf.l.wrap.b32 	%r392, %r388, %r387, 3;
	mov.b64 	%rd578, {%r392, %r391};
	shr.u64 	%rd579, %rd569, 6;
	xor.b64  	%rd580, %rd577, %rd579;
	xor.b64  	%rd581, %rd580, %rd578;
	add.s64 	%rd582, %rd539, %rd581;
	add.s64 	%rd583, %rd582, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r393,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r394}, %rd576;
	}
	shf.r.wrap.b32 	%r395, %r394, %r393, 19;
	shf.r.wrap.b32 	%r396, %r393, %r394, 19;
	mov.b64 	%rd584, {%r396, %r395};
	shf.l.wrap.b32 	%r397, %r393, %r394, 3;
	shf.l.wrap.b32 	%r398, %r394, %r393, 3;
	mov.b64 	%rd585, {%r398, %r397};
	shr.u64 	%rd586, %rd576, 6;
	xor.b64  	%rd587, %rd584, %rd586;
	xor.b64  	%rd588, %rd587, %rd585;
	add.s64 	%rd589, %rd541, %rd588;
	add.s64 	%rd590, %rd589, %rd29;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r399,%dummy}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r400}, %rd583;
	}
	shf.r.wrap.b32 	%r401, %r400, %r399, 19;
	shf.r.wrap.b32 	%r402, %r399, %r400, 19;
	mov.b64 	%rd591, {%r402, %r401};
	shf.l.wrap.b32 	%r403, %r399, %r400, 3;
	shf.l.wrap.b32 	%r404, %r400, %r399, 3;
	mov.b64 	%rd592, {%r404, %r403};
	shr.u64 	%rd593, %rd583, 6;
	xor.b64  	%rd594, %rd591, %rd593;
	xor.b64  	%rd595, %rd594, %rd592;
	shf.r.wrap.b32 	%r405, %r340, %r339, 1;
	shf.r.wrap.b32 	%r406, %r339, %r340, 1;
	mov.b64 	%rd596, {%r406, %r405};
	shf.r.wrap.b32 	%r407, %r340, %r339, 8;
	shf.r.wrap.b32 	%r408, %r339, %r340, 8;
	mov.b64 	%rd597, {%r408, %r407};
	shr.u64 	%rd598, %rd520, 7;
	xor.b64  	%rd599, %rd596, %rd598;
	xor.b64  	%rd600, %rd599, %rd597;
	add.s64 	%rd601, %rd548, %rd2714;
	add.s64 	%rd602, %rd601, %rd595;
	add.s64 	%rd603, %rd602, %rd600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd507;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 14;
	shf.r.wrap.b32 	%r412, %r409, %r410, 14;
	mov.b64 	%rd604, {%r412, %r411};
	shf.r.wrap.b32 	%r413, %r410, %r409, 18;
	shf.r.wrap.b32 	%r414, %r409, %r410, 18;
	mov.b64 	%rd605, {%r414, %r413};
	xor.b64  	%rd606, %rd605, %rd604;
	shf.l.wrap.b32 	%r415, %r409, %r410, 23;
	shf.l.wrap.b32 	%r416, %r410, %r409, 23;
	mov.b64 	%rd607, {%r416, %r415};
	xor.b64  	%rd608, %rd606, %rd607;
	xor.b64  	%rd609, %rd460, %rd483;
	and.b64  	%rd610, %rd609, %rd507;
	xor.b64  	%rd611, %rd610, %rd460;
	add.s64 	%rd612, %rd611, %rd437;
	add.s64 	%rd613, %rd612, %rd520;
	add.s64 	%rd614, %rd613, %rd2653;
	add.s64 	%rd615, %rd614, %rd608;
	add.s64 	%rd616, %rd615, %rd448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r417,%dummy}, %rd518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r418}, %rd518;
	}
	shf.r.wrap.b32 	%r419, %r418, %r417, 28;
	shf.r.wrap.b32 	%r420, %r417, %r418, 28;
	mov.b64 	%rd617, {%r420, %r419};
	shf.l.wrap.b32 	%r421, %r417, %r418, 30;
	shf.l.wrap.b32 	%r422, %r418, %r417, 30;
	mov.b64 	%rd618, {%r422, %r421};
	xor.b64  	%rd619, %rd618, %rd617;
	shf.l.wrap.b32 	%r423, %r417, %r418, 25;
	shf.l.wrap.b32 	%r424, %r418, %r417, 25;
	mov.b64 	%rd620, {%r424, %r423};
	xor.b64  	%rd621, %rd619, %rd620;
	xor.b64  	%rd622, %rd518, %rd471;
	xor.b64  	%rd623, %rd518, %rd494;
	and.b64  	%rd624, %rd623, %rd622;
	xor.b64  	%rd625, %rd624, %rd518;
	add.s64 	%rd626, %rd615, %rd625;
	add.s64 	%rd627, %rd626, %rd621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r425,%dummy}, %rd616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r426}, %rd616;
	}
	shf.r.wrap.b32 	%r427, %r426, %r425, 14;
	shf.r.wrap.b32 	%r428, %r425, %r426, 14;
	mov.b64 	%rd628, {%r428, %r427};
	shf.r.wrap.b32 	%r429, %r426, %r425, 18;
	shf.r.wrap.b32 	%r430, %r425, %r426, 18;
	mov.b64 	%rd629, {%r430, %r429};
	xor.b64  	%rd630, %rd629, %rd628;
	shf.l.wrap.b32 	%r431, %r425, %r426, 23;
	shf.l.wrap.b32 	%r432, %r426, %r425, 23;
	mov.b64 	%rd631, {%r432, %r431};
	xor.b64  	%rd632, %rd630, %rd631;
	xor.b64  	%rd633, %rd483, %rd507;
	and.b64  	%rd634, %rd616, %rd633;
	xor.b64  	%rd635, %rd634, %rd483;
	add.s64 	%rd636, %rd25, %rd460;
	add.s64 	%rd637, %rd636, %rd2654;
	add.s64 	%rd638, %rd637, %rd635;
	add.s64 	%rd639, %rd638, %rd632;
	add.s64 	%rd640, %rd639, %rd471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r433,%dummy}, %rd627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r434}, %rd627;
	}
	shf.r.wrap.b32 	%r435, %r434, %r433, 28;
	shf.r.wrap.b32 	%r436, %r433, %r434, 28;
	mov.b64 	%rd641, {%r436, %r435};
	shf.l.wrap.b32 	%r437, %r433, %r434, 30;
	shf.l.wrap.b32 	%r438, %r434, %r433, 30;
	mov.b64 	%rd642, {%r438, %r437};
	xor.b64  	%rd643, %rd642, %rd641;
	shf.l.wrap.b32 	%r439, %r433, %r434, 25;
	shf.l.wrap.b32 	%r440, %r434, %r433, 25;
	mov.b64 	%rd644, {%r440, %r439};
	xor.b64  	%rd645, %rd643, %rd644;
	xor.b64  	%rd646, %rd627, %rd494;
	xor.b64  	%rd647, %rd627, %rd518;
	and.b64  	%rd648, %rd647, %rd646;
	xor.b64  	%rd649, %rd648, %rd627;
	add.s64 	%rd650, %rd639, %rd649;
	add.s64 	%rd651, %rd650, %rd645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd640;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 14;
	shf.r.wrap.b32 	%r444, %r441, %r442, 14;
	mov.b64 	%rd652, {%r444, %r443};
	shf.r.wrap.b32 	%r445, %r442, %r441, 18;
	shf.r.wrap.b32 	%r446, %r441, %r442, 18;
	mov.b64 	%rd653, {%r446, %r445};
	xor.b64  	%rd654, %rd653, %rd652;
	shf.l.wrap.b32 	%r447, %r441, %r442, 23;
	shf.l.wrap.b32 	%r448, %r442, %r441, 23;
	mov.b64 	%rd655, {%r448, %r447};
	xor.b64  	%rd656, %rd654, %rd655;
	xor.b64  	%rd657, %rd616, %rd507;
	and.b64  	%rd658, %rd640, %rd657;
	xor.b64  	%rd659, %rd658, %rd507;
	add.s64 	%rd660, %rd526, %rd483;
	add.s64 	%rd661, %rd660, %rd2655;
	add.s64 	%rd662, %rd661, %rd659;
	add.s64 	%rd663, %rd662, %rd656;
	add.s64 	%rd664, %rd663, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd651;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 28;
	shf.r.wrap.b32 	%r452, %r449, %r450, 28;
	mov.b64 	%rd665, {%r452, %r451};
	shf.l.wrap.b32 	%r453, %r449, %r450, 30;
	shf.l.wrap.b32 	%r454, %r450, %r449, 30;
	mov.b64 	%rd666, {%r454, %r453};
	xor.b64  	%rd667, %rd666, %rd665;
	shf.l.wrap.b32 	%r455, %r449, %r450, 25;
	shf.l.wrap.b32 	%r456, %r450, %r449, 25;
	mov.b64 	%rd668, {%r456, %r455};
	xor.b64  	%rd669, %rd667, %rd668;
	xor.b64  	%rd670, %rd651, %rd518;
	xor.b64  	%rd671, %rd651, %rd627;
	and.b64  	%rd672, %rd671, %rd670;
	xor.b64  	%rd673, %rd672, %rd651;
	add.s64 	%rd674, %rd663, %rd673;
	add.s64 	%rd675, %rd674, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd664;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 14;
	shf.r.wrap.b32 	%r460, %r457, %r458, 14;
	mov.b64 	%rd676, {%r460, %r459};
	shf.r.wrap.b32 	%r461, %r458, %r457, 18;
	shf.r.wrap.b32 	%r462, %r457, %r458, 18;
	mov.b64 	%rd677, {%r462, %r461};
	xor.b64  	%rd678, %rd677, %rd676;
	shf.l.wrap.b32 	%r463, %r457, %r458, 23;
	shf.l.wrap.b32 	%r464, %r458, %r457, 23;
	mov.b64 	%rd679, {%r464, %r463};
	xor.b64  	%rd680, %rd678, %rd679;
	xor.b64  	%rd681, %rd640, %rd616;
	and.b64  	%rd682, %rd664, %rd681;
	xor.b64  	%rd683, %rd682, %rd616;
	add.s64 	%rd684, %rd26, %rd507;
	add.s64 	%rd685, %rd684, %rd2656;
	add.s64 	%rd686, %rd685, %rd683;
	add.s64 	%rd687, %rd686, %rd680;
	add.s64 	%rd688, %rd687, %rd518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r465,%dummy}, %rd675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r466}, %rd675;
	}
	shf.r.wrap.b32 	%r467, %r466, %r465, 28;
	shf.r.wrap.b32 	%r468, %r465, %r466, 28;
	mov.b64 	%rd689, {%r468, %r467};
	shf.l.wrap.b32 	%r469, %r465, %r466, 30;
	shf.l.wrap.b32 	%r470, %r466, %r465, 30;
	mov.b64 	%rd690, {%r470, %r469};
	xor.b64  	%rd691, %rd690, %rd689;
	shf.l.wrap.b32 	%r471, %r465, %r466, 25;
	shf.l.wrap.b32 	%r472, %r466, %r465, 25;
	mov.b64 	%rd692, {%r472, %r471};
	xor.b64  	%rd693, %rd691, %rd692;
	xor.b64  	%rd694, %rd675, %rd627;
	xor.b64  	%rd695, %rd675, %rd651;
	and.b64  	%rd696, %rd695, %rd694;
	xor.b64  	%rd697, %rd696, %rd675;
	add.s64 	%rd698, %rd687, %rd697;
	add.s64 	%rd699, %rd698, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd688;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 14;
	shf.r.wrap.b32 	%r476, %r473, %r474, 14;
	mov.b64 	%rd700, {%r476, %r475};
	shf.r.wrap.b32 	%r477, %r474, %r473, 18;
	shf.r.wrap.b32 	%r478, %r473, %r474, 18;
	mov.b64 	%rd701, {%r478, %r477};
	xor.b64  	%rd702, %rd701, %rd700;
	shf.l.wrap.b32 	%r479, %r473, %r474, 23;
	shf.l.wrap.b32 	%r480, %r474, %r473, 23;
	mov.b64 	%rd703, {%r480, %r479};
	xor.b64  	%rd704, %rd702, %rd703;
	xor.b64  	%rd705, %rd664, %rd640;
	and.b64  	%rd706, %rd688, %rd705;
	xor.b64  	%rd707, %rd706, %rd640;
	add.s64 	%rd708, %rd616, %rd532;
	add.s64 	%rd709, %rd708, %rd2657;
	add.s64 	%rd710, %rd709, %rd707;
	add.s64 	%rd711, %rd710, %rd704;
	add.s64 	%rd712, %rd711, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd699;
	}
	shf.r.wrap.b32 	%r483, %r482, %r481, 28;
	shf.r.wrap.b32 	%r484, %r481, %r482, 28;
	mov.b64 	%rd713, {%r484, %r483};
	shf.l.wrap.b32 	%r485, %r481, %r482, 30;
	shf.l.wrap.b32 	%r486, %r482, %r481, 30;
	mov.b64 	%rd714, {%r486, %r485};
	xor.b64  	%rd715, %rd714, %rd713;
	shf.l.wrap.b32 	%r487, %r481, %r482, 25;
	shf.l.wrap.b32 	%r488, %r482, %r481, 25;
	mov.b64 	%rd716, {%r488, %r487};
	xor.b64  	%rd717, %rd715, %rd716;
	xor.b64  	%rd718, %rd699, %rd651;
	xor.b64  	%rd719, %rd699, %rd675;
	and.b64  	%rd720, %rd719, %rd718;
	xor.b64  	%rd721, %rd720, %rd699;
	add.s64 	%rd722, %rd711, %rd721;
	add.s64 	%rd723, %rd722, %rd717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r489,%dummy}, %rd712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r490}, %rd712;
	}
	shf.r.wrap.b32 	%r491, %r490, %r489, 14;
	shf.r.wrap.b32 	%r492, %r489, %r490, 14;
	mov.b64 	%rd724, {%r492, %r491};
	shf.r.wrap.b32 	%r493, %r490, %r489, 18;
	shf.r.wrap.b32 	%r494, %r489, %r490, 18;
	mov.b64 	%rd725, {%r494, %r493};
	xor.b64  	%rd726, %rd725, %rd724;
	shf.l.wrap.b32 	%r495, %r489, %r490, 23;
	shf.l.wrap.b32 	%r496, %r490, %r489, 23;
	mov.b64 	%rd727, {%r496, %r495};
	xor.b64  	%rd728, %rd726, %rd727;
	xor.b64  	%rd729, %rd688, %rd664;
	and.b64  	%rd730, %rd712, %rd729;
	xor.b64  	%rd731, %rd730, %rd664;
	add.s64 	%rd732, %rd640, %rd27;
	add.s64 	%rd733, %rd732, %rd2658;
	add.s64 	%rd734, %rd733, %rd731;
	add.s64 	%rd735, %rd734, %rd728;
	add.s64 	%rd736, %rd735, %rd651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r498}, %rd723;
	}
	shf.r.wrap.b32 	%r499, %r498, %r497, 28;
	shf.r.wrap.b32 	%r500, %r497, %r498, 28;
	mov.b64 	%rd737, {%r500, %r499};
	shf.l.wrap.b32 	%r501, %r497, %r498, 30;
	shf.l.wrap.b32 	%r502, %r498, %r497, 30;
	mov.b64 	%rd738, {%r502, %r501};
	xor.b64  	%rd739, %rd738, %rd737;
	shf.l.wrap.b32 	%r503, %r497, %r498, 25;
	shf.l.wrap.b32 	%r504, %r498, %r497, 25;
	mov.b64 	%rd740, {%r504, %r503};
	xor.b64  	%rd741, %rd739, %rd740;
	xor.b64  	%rd742, %rd723, %rd675;
	xor.b64  	%rd743, %rd723, %rd699;
	and.b64  	%rd744, %rd743, %rd742;
	xor.b64  	%rd745, %rd744, %rd723;
	add.s64 	%rd746, %rd735, %rd745;
	add.s64 	%rd747, %rd746, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd736;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 14;
	shf.r.wrap.b32 	%r508, %r505, %r506, 14;
	mov.b64 	%rd748, {%r508, %r507};
	shf.r.wrap.b32 	%r509, %r506, %r505, 18;
	shf.r.wrap.b32 	%r510, %r505, %r506, 18;
	mov.b64 	%rd749, {%r510, %r509};
	xor.b64  	%rd750, %rd749, %rd748;
	shf.l.wrap.b32 	%r511, %r505, %r506, 23;
	shf.l.wrap.b32 	%r512, %r506, %r505, 23;
	mov.b64 	%rd751, {%r512, %r511};
	xor.b64  	%rd752, %rd750, %rd751;
	xor.b64  	%rd753, %rd712, %rd688;
	and.b64  	%rd754, %rd736, %rd753;
	xor.b64  	%rd755, %rd754, %rd688;
	add.s64 	%rd756, %rd664, %rd539;
	add.s64 	%rd757, %rd756, %rd2659;
	add.s64 	%rd758, %rd757, %rd755;
	add.s64 	%rd759, %rd758, %rd752;
	add.s64 	%rd760, %rd759, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd747;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 28;
	shf.r.wrap.b32 	%r516, %r513, %r514, 28;
	mov.b64 	%rd761, {%r516, %r515};
	shf.l.wrap.b32 	%r517, %r513, %r514, 30;
	shf.l.wrap.b32 	%r518, %r514, %r513, 30;
	mov.b64 	%rd762, {%r518, %r517};
	xor.b64  	%rd763, %rd762, %rd761;
	shf.l.wrap.b32 	%r519, %r513, %r514, 25;
	shf.l.wrap.b32 	%r520, %r514, %r513, 25;
	mov.b64 	%rd764, {%r520, %r519};
	xor.b64  	%rd765, %rd763, %rd764;
	xor.b64  	%rd766, %rd747, %rd699;
	xor.b64  	%rd767, %rd747, %rd723;
	and.b64  	%rd768, %rd767, %rd766;
	xor.b64  	%rd769, %rd768, %rd747;
	add.s64 	%rd770, %rd759, %rd769;
	add.s64 	%rd771, %rd770, %rd765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r522}, %rd760;
	}
	shf.r.wrap.b32 	%r523, %r522, %r521, 14;
	shf.r.wrap.b32 	%r524, %r521, %r522, 14;
	mov.b64 	%rd772, {%r524, %r523};
	shf.r.wrap.b32 	%r525, %r522, %r521, 18;
	shf.r.wrap.b32 	%r526, %r521, %r522, 18;
	mov.b64 	%rd773, {%r526, %r525};
	xor.b64  	%rd774, %rd773, %rd772;
	shf.l.wrap.b32 	%r527, %r521, %r522, 23;
	shf.l.wrap.b32 	%r528, %r522, %r521, 23;
	mov.b64 	%rd775, {%r528, %r527};
	xor.b64  	%rd776, %rd774, %rd775;
	xor.b64  	%rd777, %rd736, %rd712;
	and.b64  	%rd778, %rd760, %rd777;
	xor.b64  	%rd779, %rd778, %rd712;
	add.s64 	%rd780, %rd688, %rd541;
	add.s64 	%rd781, %rd780, %rd2660;
	add.s64 	%rd782, %rd781, %rd779;
	add.s64 	%rd783, %rd782, %rd776;
	add.s64 	%rd784, %rd783, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd771;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 28;
	shf.r.wrap.b32 	%r532, %r529, %r530, 28;
	mov.b64 	%rd785, {%r532, %r531};
	shf.l.wrap.b32 	%r533, %r529, %r530, 30;
	shf.l.wrap.b32 	%r534, %r530, %r529, 30;
	mov.b64 	%rd786, {%r534, %r533};
	xor.b64  	%rd787, %rd786, %rd785;
	shf.l.wrap.b32 	%r535, %r529, %r530, 25;
	shf.l.wrap.b32 	%r536, %r530, %r529, 25;
	mov.b64 	%rd788, {%r536, %r535};
	xor.b64  	%rd789, %rd787, %rd788;
	xor.b64  	%rd790, %rd771, %rd723;
	xor.b64  	%rd791, %rd771, %rd747;
	and.b64  	%rd792, %rd791, %rd790;
	xor.b64  	%rd793, %rd792, %rd771;
	add.s64 	%rd794, %rd783, %rd793;
	add.s64 	%rd795, %rd794, %rd789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r537,%dummy}, %rd784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r538}, %rd784;
	}
	shf.r.wrap.b32 	%r539, %r538, %r537, 14;
	shf.r.wrap.b32 	%r540, %r537, %r538, 14;
	mov.b64 	%rd796, {%r540, %r539};
	shf.r.wrap.b32 	%r541, %r538, %r537, 18;
	shf.r.wrap.b32 	%r542, %r537, %r538, 18;
	mov.b64 	%rd797, {%r542, %r541};
	xor.b64  	%rd798, %rd797, %rd796;
	shf.l.wrap.b32 	%r543, %r537, %r538, 23;
	shf.l.wrap.b32 	%r544, %r538, %r537, 23;
	mov.b64 	%rd799, {%r544, %r543};
	xor.b64  	%rd800, %rd798, %rd799;
	xor.b64  	%rd801, %rd760, %rd736;
	and.b64  	%rd802, %rd784, %rd801;
	xor.b64  	%rd803, %rd802, %rd736;
	add.s64 	%rd804, %rd712, %rd548;
	add.s64 	%rd805, %rd804, %rd2661;
	add.s64 	%rd806, %rd805, %rd803;
	add.s64 	%rd807, %rd806, %rd800;
	add.s64 	%rd808, %rd807, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r545,%dummy}, %rd795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r546}, %rd795;
	}
	shf.r.wrap.b32 	%r547, %r546, %r545, 28;
	shf.r.wrap.b32 	%r548, %r545, %r546, 28;
	mov.b64 	%rd809, {%r548, %r547};
	shf.l.wrap.b32 	%r549, %r545, %r546, 30;
	shf.l.wrap.b32 	%r550, %r546, %r545, 30;
	mov.b64 	%rd810, {%r550, %r549};
	xor.b64  	%rd811, %rd810, %rd809;
	shf.l.wrap.b32 	%r551, %r545, %r546, 25;
	shf.l.wrap.b32 	%r552, %r546, %r545, 25;
	mov.b64 	%rd812, {%r552, %r551};
	xor.b64  	%rd813, %rd811, %rd812;
	xor.b64  	%rd814, %rd795, %rd747;
	xor.b64  	%rd815, %rd795, %rd771;
	and.b64  	%rd816, %rd815, %rd814;
	xor.b64  	%rd817, %rd816, %rd795;
	add.s64 	%rd818, %rd807, %rd817;
	add.s64 	%rd819, %rd818, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd808;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 14;
	shf.r.wrap.b32 	%r556, %r553, %r554, 14;
	mov.b64 	%rd820, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 18;
	shf.r.wrap.b32 	%r558, %r553, %r554, 18;
	mov.b64 	%rd821, {%r558, %r557};
	xor.b64  	%rd822, %rd821, %rd820;
	shf.l.wrap.b32 	%r559, %r553, %r554, 23;
	shf.l.wrap.b32 	%r560, %r554, %r553, 23;
	mov.b64 	%rd823, {%r560, %r559};
	xor.b64  	%rd824, %rd822, %rd823;
	xor.b64  	%rd825, %rd784, %rd760;
	and.b64  	%rd826, %rd808, %rd825;
	xor.b64  	%rd827, %rd826, %rd760;
	add.s64 	%rd828, %rd736, %rd555;
	add.s64 	%rd829, %rd828, %rd2662;
	add.s64 	%rd830, %rd829, %rd827;
	add.s64 	%rd831, %rd830, %rd824;
	add.s64 	%rd832, %rd831, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd819;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 28;
	shf.r.wrap.b32 	%r564, %r561, %r562, 28;
	mov.b64 	%rd833, {%r564, %r563};
	shf.l.wrap.b32 	%r565, %r561, %r562, 30;
	shf.l.wrap.b32 	%r566, %r562, %r561, 30;
	mov.b64 	%rd834, {%r566, %r565};
	xor.b64  	%rd835, %rd834, %rd833;
	shf.l.wrap.b32 	%r567, %r561, %r562, 25;
	shf.l.wrap.b32 	%r568, %r562, %r561, 25;
	mov.b64 	%rd836, {%r568, %r567};
	xor.b64  	%rd837, %rd835, %rd836;
	xor.b64  	%rd838, %rd819, %rd771;
	xor.b64  	%rd839, %rd819, %rd795;
	and.b64  	%rd840, %rd839, %rd838;
	xor.b64  	%rd841, %rd840, %rd819;
	add.s64 	%rd842, %rd831, %rd841;
	add.s64 	%rd843, %rd842, %rd837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd832;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 14;
	shf.r.wrap.b32 	%r572, %r569, %r570, 14;
	mov.b64 	%rd844, {%r572, %r571};
	shf.r.wrap.b32 	%r573, %r570, %r569, 18;
	shf.r.wrap.b32 	%r574, %r569, %r570, 18;
	mov.b64 	%rd845, {%r574, %r573};
	xor.b64  	%rd846, %rd845, %rd844;
	shf.l.wrap.b32 	%r575, %r569, %r570, 23;
	shf.l.wrap.b32 	%r576, %r570, %r569, 23;
	mov.b64 	%rd847, {%r576, %r575};
	xor.b64  	%rd848, %rd846, %rd847;
	xor.b64  	%rd849, %rd808, %rd784;
	and.b64  	%rd850, %rd832, %rd849;
	xor.b64  	%rd851, %rd850, %rd784;
	add.s64 	%rd852, %rd760, %rd562;
	add.s64 	%rd853, %rd852, %rd2663;
	add.s64 	%rd854, %rd853, %rd851;
	add.s64 	%rd855, %rd854, %rd848;
	add.s64 	%rd856, %rd855, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd843;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 28;
	shf.r.wrap.b32 	%r580, %r577, %r578, 28;
	mov.b64 	%rd857, {%r580, %r579};
	shf.l.wrap.b32 	%r581, %r577, %r578, 30;
	shf.l.wrap.b32 	%r582, %r578, %r577, 30;
	mov.b64 	%rd858, {%r582, %r581};
	xor.b64  	%rd859, %rd858, %rd857;
	shf.l.wrap.b32 	%r583, %r577, %r578, 25;
	shf.l.wrap.b32 	%r584, %r578, %r577, 25;
	mov.b64 	%rd860, {%r584, %r583};
	xor.b64  	%rd861, %rd859, %rd860;
	xor.b64  	%rd862, %rd843, %rd795;
	xor.b64  	%rd863, %rd843, %rd819;
	and.b64  	%rd864, %rd863, %rd862;
	xor.b64  	%rd865, %rd864, %rd843;
	add.s64 	%rd866, %rd855, %rd865;
	add.s64 	%rd867, %rd866, %rd861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r585,%dummy}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r586}, %rd856;
	}
	shf.r.wrap.b32 	%r587, %r586, %r585, 14;
	shf.r.wrap.b32 	%r588, %r585, %r586, 14;
	mov.b64 	%rd868, {%r588, %r587};
	shf.r.wrap.b32 	%r589, %r586, %r585, 18;
	shf.r.wrap.b32 	%r590, %r585, %r586, 18;
	mov.b64 	%rd869, {%r590, %r589};
	xor.b64  	%rd870, %rd869, %rd868;
	shf.l.wrap.b32 	%r591, %r585, %r586, 23;
	shf.l.wrap.b32 	%r592, %r586, %r585, 23;
	mov.b64 	%rd871, {%r592, %r591};
	xor.b64  	%rd872, %rd870, %rd871;
	xor.b64  	%rd873, %rd832, %rd808;
	and.b64  	%rd874, %rd856, %rd873;
	xor.b64  	%rd875, %rd874, %rd808;
	add.s64 	%rd876, %rd784, %rd569;
	add.s64 	%rd877, %rd876, %rd2664;
	add.s64 	%rd878, %rd877, %rd875;
	add.s64 	%rd879, %rd878, %rd872;
	add.s64 	%rd880, %rd879, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd867;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 28;
	shf.r.wrap.b32 	%r596, %r593, %r594, 28;
	mov.b64 	%rd881, {%r596, %r595};
	shf.l.wrap.b32 	%r597, %r593, %r594, 30;
	shf.l.wrap.b32 	%r598, %r594, %r593, 30;
	mov.b64 	%rd882, {%r598, %r597};
	xor.b64  	%rd883, %rd882, %rd881;
	shf.l.wrap.b32 	%r599, %r593, %r594, 25;
	shf.l.wrap.b32 	%r600, %r594, %r593, 25;
	mov.b64 	%rd884, {%r600, %r599};
	xor.b64  	%rd885, %rd883, %rd884;
	xor.b64  	%rd886, %rd867, %rd819;
	xor.b64  	%rd887, %rd867, %rd843;
	and.b64  	%rd888, %rd887, %rd886;
	xor.b64  	%rd889, %rd888, %rd867;
	add.s64 	%rd890, %rd879, %rd889;
	add.s64 	%rd891, %rd890, %rd885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd880;
	}
	shf.r.wrap.b32 	%r603, %r602, %r601, 14;
	shf.r.wrap.b32 	%r604, %r601, %r602, 14;
	mov.b64 	%rd892, {%r604, %r603};
	shf.r.wrap.b32 	%r605, %r602, %r601, 18;
	shf.r.wrap.b32 	%r606, %r601, %r602, 18;
	mov.b64 	%rd893, {%r606, %r605};
	xor.b64  	%rd894, %rd893, %rd892;
	shf.l.wrap.b32 	%r607, %r601, %r602, 23;
	shf.l.wrap.b32 	%r608, %r602, %r601, 23;
	mov.b64 	%rd895, {%r608, %r607};
	xor.b64  	%rd896, %rd894, %rd895;
	xor.b64  	%rd897, %rd856, %rd832;
	and.b64  	%rd898, %rd880, %rd897;
	xor.b64  	%rd899, %rd898, %rd832;
	add.s64 	%rd900, %rd808, %rd576;
	add.s64 	%rd901, %rd900, %rd2665;
	add.s64 	%rd902, %rd901, %rd899;
	add.s64 	%rd903, %rd902, %rd896;
	add.s64 	%rd904, %rd903, %rd819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd891;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 28;
	shf.r.wrap.b32 	%r612, %r609, %r610, 28;
	mov.b64 	%rd905, {%r612, %r611};
	shf.l.wrap.b32 	%r613, %r609, %r610, 30;
	shf.l.wrap.b32 	%r614, %r610, %r609, 30;
	mov.b64 	%rd906, {%r614, %r613};
	xor.b64  	%rd907, %rd906, %rd905;
	shf.l.wrap.b32 	%r615, %r609, %r610, 25;
	shf.l.wrap.b32 	%r616, %r610, %r609, 25;
	mov.b64 	%rd908, {%r616, %r615};
	xor.b64  	%rd909, %rd907, %rd908;
	xor.b64  	%rd910, %rd891, %rd843;
	xor.b64  	%rd911, %rd891, %rd867;
	and.b64  	%rd912, %rd911, %rd910;
	xor.b64  	%rd913, %rd912, %rd891;
	add.s64 	%rd914, %rd903, %rd913;
	add.s64 	%rd915, %rd914, %rd909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd904;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 14;
	shf.r.wrap.b32 	%r620, %r617, %r618, 14;
	mov.b64 	%rd916, {%r620, %r619};
	shf.r.wrap.b32 	%r621, %r618, %r617, 18;
	shf.r.wrap.b32 	%r622, %r617, %r618, 18;
	mov.b64 	%rd917, {%r622, %r621};
	xor.b64  	%rd918, %rd917, %rd916;
	shf.l.wrap.b32 	%r623, %r617, %r618, 23;
	shf.l.wrap.b32 	%r624, %r618, %r617, 23;
	mov.b64 	%rd919, {%r624, %r623};
	xor.b64  	%rd920, %rd918, %rd919;
	xor.b64  	%rd921, %rd880, %rd856;
	and.b64  	%rd922, %rd904, %rd921;
	xor.b64  	%rd923, %rd922, %rd856;
	add.s64 	%rd924, %rd832, %rd583;
	add.s64 	%rd925, %rd924, %rd2666;
	add.s64 	%rd926, %rd925, %rd923;
	add.s64 	%rd927, %rd926, %rd920;
	add.s64 	%rd928, %rd927, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd915;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 28;
	shf.r.wrap.b32 	%r628, %r625, %r626, 28;
	mov.b64 	%rd929, {%r628, %r627};
	shf.l.wrap.b32 	%r629, %r625, %r626, 30;
	shf.l.wrap.b32 	%r630, %r626, %r625, 30;
	mov.b64 	%rd930, {%r630, %r629};
	xor.b64  	%rd931, %rd930, %rd929;
	shf.l.wrap.b32 	%r631, %r625, %r626, 25;
	shf.l.wrap.b32 	%r632, %r626, %r625, 25;
	mov.b64 	%rd932, {%r632, %r631};
	xor.b64  	%rd933, %rd931, %rd932;
	xor.b64  	%rd934, %rd915, %rd867;
	xor.b64  	%rd935, %rd915, %rd891;
	and.b64  	%rd936, %rd935, %rd934;
	xor.b64  	%rd937, %rd936, %rd915;
	add.s64 	%rd938, %rd927, %rd937;
	add.s64 	%rd939, %rd938, %rd933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd928;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 14;
	shf.r.wrap.b32 	%r636, %r633, %r634, 14;
	mov.b64 	%rd940, {%r636, %r635};
	shf.r.wrap.b32 	%r637, %r634, %r633, 18;
	shf.r.wrap.b32 	%r638, %r633, %r634, 18;
	mov.b64 	%rd941, {%r638, %r637};
	xor.b64  	%rd942, %rd941, %rd940;
	shf.l.wrap.b32 	%r639, %r633, %r634, 23;
	shf.l.wrap.b32 	%r640, %r634, %r633, 23;
	mov.b64 	%rd943, {%r640, %r639};
	xor.b64  	%rd944, %rd942, %rd943;
	xor.b64  	%rd945, %rd904, %rd880;
	and.b64  	%rd946, %rd928, %rd945;
	xor.b64  	%rd947, %rd946, %rd880;
	add.s64 	%rd948, %rd856, %rd590;
	add.s64 	%rd949, %rd948, %rd2667;
	add.s64 	%rd950, %rd949, %rd947;
	add.s64 	%rd951, %rd950, %rd944;
	add.s64 	%rd952, %rd951, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd939;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 28;
	shf.r.wrap.b32 	%r644, %r641, %r642, 28;
	mov.b64 	%rd953, {%r644, %r643};
	shf.l.wrap.b32 	%r645, %r641, %r642, 30;
	shf.l.wrap.b32 	%r646, %r642, %r641, 30;
	mov.b64 	%rd954, {%r646, %r645};
	xor.b64  	%rd955, %rd954, %rd953;
	shf.l.wrap.b32 	%r647, %r641, %r642, 25;
	shf.l.wrap.b32 	%r648, %r642, %r641, 25;
	mov.b64 	%rd956, {%r648, %r647};
	xor.b64  	%rd957, %rd955, %rd956;
	xor.b64  	%rd958, %rd939, %rd891;
	xor.b64  	%rd959, %rd939, %rd915;
	and.b64  	%rd960, %rd959, %rd958;
	xor.b64  	%rd961, %rd960, %rd939;
	add.s64 	%rd962, %rd951, %rd961;
	add.s64 	%rd963, %rd962, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r650}, %rd952;
	}
	shf.r.wrap.b32 	%r651, %r650, %r649, 14;
	shf.r.wrap.b32 	%r652, %r649, %r650, 14;
	mov.b64 	%rd964, {%r652, %r651};
	shf.r.wrap.b32 	%r653, %r650, %r649, 18;
	shf.r.wrap.b32 	%r654, %r649, %r650, 18;
	mov.b64 	%rd965, {%r654, %r653};
	xor.b64  	%rd966, %rd965, %rd964;
	shf.l.wrap.b32 	%r655, %r649, %r650, 23;
	shf.l.wrap.b32 	%r656, %r650, %r649, 23;
	mov.b64 	%rd967, {%r656, %r655};
	xor.b64  	%rd968, %rd966, %rd967;
	xor.b64  	%rd969, %rd928, %rd904;
	and.b64  	%rd970, %rd952, %rd969;
	xor.b64  	%rd971, %rd970, %rd904;
	add.s64 	%rd972, %rd880, %rd603;
	add.s64 	%rd973, %rd972, %rd2668;
	add.s64 	%rd974, %rd973, %rd971;
	add.s64 	%rd975, %rd974, %rd968;
	add.s64 	%rd976, %rd975, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd963;
	}
	shf.r.wrap.b32 	%r659, %r658, %r657, 28;
	shf.r.wrap.b32 	%r660, %r657, %r658, 28;
	mov.b64 	%rd977, {%r660, %r659};
	shf.l.wrap.b32 	%r661, %r657, %r658, 30;
	shf.l.wrap.b32 	%r662, %r658, %r657, 30;
	mov.b64 	%rd978, {%r662, %r661};
	xor.b64  	%rd979, %rd978, %rd977;
	shf.l.wrap.b32 	%r663, %r657, %r658, 25;
	shf.l.wrap.b32 	%r664, %r658, %r657, 25;
	mov.b64 	%rd980, {%r664, %r663};
	xor.b64  	%rd981, %rd979, %rd980;
	xor.b64  	%rd982, %rd963, %rd915;
	xor.b64  	%rd983, %rd963, %rd939;
	and.b64  	%rd984, %rd983, %rd982;
	xor.b64  	%rd985, %rd984, %rd963;
	add.s64 	%rd986, %rd975, %rd985;
	add.s64 	%rd987, %rd986, %rd981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd590;
	}
	shf.r.wrap.b32 	%r667, %r666, %r665, 19;
	shf.r.wrap.b32 	%r668, %r665, %r666, 19;
	mov.b64 	%rd988, {%r668, %r667};
	shf.l.wrap.b32 	%r669, %r665, %r666, 3;
	shf.l.wrap.b32 	%r670, %r666, %r665, 3;
	mov.b64 	%rd989, {%r670, %r669};
	shr.u64 	%rd990, %rd590, 6;
	xor.b64  	%rd991, %rd988, %rd990;
	xor.b64  	%rd992, %rd991, %rd989;
	add.s64 	%rd993, %rd520, %rd555;
	add.s64 	%rd994, %rd993, %rd992;
	add.s64 	%rd995, %rd994, %rd46;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r671,%dummy}, %rd603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd603;
	}
	shf.r.wrap.b32 	%r673, %r672, %r671, 19;
	shf.r.wrap.b32 	%r674, %r671, %r672, 19;
	mov.b64 	%rd996, {%r674, %r673};
	shf.l.wrap.b32 	%r675, %r671, %r672, 3;
	shf.l.wrap.b32 	%r676, %r672, %r671, 3;
	mov.b64 	%rd997, {%r676, %r675};
	shr.u64 	%rd998, %rd603, 6;
	xor.b64  	%rd999, %rd996, %rd998;
	xor.b64  	%rd1000, %rd999, %rd997;
	shf.r.wrap.b32 	%r677, %r346, %r345, 1;
	shf.r.wrap.b32 	%r678, %r345, %r346, 1;
	mov.b64 	%rd1001, {%r678, %r677};
	shf.r.wrap.b32 	%r679, %r346, %r345, 8;
	shf.r.wrap.b32 	%r680, %r345, %r346, 8;
	mov.b64 	%rd1002, {%r680, %r679};
	shr.u64 	%rd1003, %rd526, 7;
	xor.b64  	%rd1004, %rd1001, %rd1003;
	xor.b64  	%rd1005, %rd1004, %rd1002;
	add.s64 	%rd1006, %rd25, %rd562;
	add.s64 	%rd1007, %rd1006, %rd1000;
	add.s64 	%rd1008, %rd1007, %rd1005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd995;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 19;
	shf.r.wrap.b32 	%r684, %r681, %r682, 19;
	mov.b64 	%rd1009, {%r684, %r683};
	shf.l.wrap.b32 	%r685, %r681, %r682, 3;
	shf.l.wrap.b32 	%r686, %r682, %r681, 3;
	mov.b64 	%rd1010, {%r686, %r685};
	shr.u64 	%rd1011, %rd995, 6;
	xor.b64  	%rd1012, %rd1009, %rd1011;
	xor.b64  	%rd1013, %rd1012, %rd1010;
	add.s64 	%rd1014, %rd526, %rd569;
	add.s64 	%rd1015, %rd1014, %rd1013;
	add.s64 	%rd1016, %rd1015, %rd47;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd1008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd1008;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 19;
	shf.r.wrap.b32 	%r690, %r687, %r688, 19;
	mov.b64 	%rd1017, {%r690, %r689};
	shf.l.wrap.b32 	%r691, %r687, %r688, 3;
	shf.l.wrap.b32 	%r692, %r688, %r687, 3;
	mov.b64 	%rd1018, {%r692, %r691};
	shr.u64 	%rd1019, %rd1008, 6;
	xor.b64  	%rd1020, %rd1017, %rd1019;
	xor.b64  	%rd1021, %rd1020, %rd1018;
	shf.r.wrap.b32 	%r693, %r352, %r351, 1;
	shf.r.wrap.b32 	%r694, %r351, %r352, 1;
	mov.b64 	%rd1022, {%r694, %r693};
	shf.r.wrap.b32 	%r695, %r352, %r351, 8;
	shf.r.wrap.b32 	%r696, %r351, %r352, 8;
	mov.b64 	%rd1023, {%r696, %r695};
	shr.u64 	%rd1024, %rd532, 7;
	xor.b64  	%rd1025, %rd1022, %rd1024;
	xor.b64  	%rd1026, %rd1025, %rd1023;
	add.s64 	%rd1027, %rd26, %rd576;
	add.s64 	%rd1028, %rd1027, %rd1021;
	add.s64 	%rd1029, %rd1028, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r697,%dummy}, %rd1016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r698}, %rd1016;
	}
	shf.r.wrap.b32 	%r699, %r698, %r697, 19;
	shf.r.wrap.b32 	%r700, %r697, %r698, 19;
	mov.b64 	%rd1030, {%r700, %r699};
	shf.l.wrap.b32 	%r701, %r697, %r698, 3;
	shf.l.wrap.b32 	%r702, %r698, %r697, 3;
	mov.b64 	%rd1031, {%r702, %r701};
	shr.u64 	%rd1032, %rd1016, 6;
	xor.b64  	%rd1033, %rd1030, %rd1032;
	xor.b64  	%rd1034, %rd1033, %rd1031;
	add.s64 	%rd1035, %rd532, %rd583;
	add.s64 	%rd1036, %rd1035, %rd1034;
	add.s64 	%rd1037, %rd1036, %rd48;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd1029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd1029;
	}
	shf.r.wrap.b32 	%r705, %r704, %r703, 19;
	shf.r.wrap.b32 	%r706, %r703, %r704, 19;
	mov.b64 	%rd1038, {%r706, %r705};
	shf.l.wrap.b32 	%r707, %r703, %r704, 3;
	shf.l.wrap.b32 	%r708, %r704, %r703, 3;
	mov.b64 	%rd1039, {%r708, %r707};
	shr.u64 	%rd1040, %rd1029, 6;
	xor.b64  	%rd1041, %rd1038, %rd1040;
	xor.b64  	%rd1042, %rd1041, %rd1039;
	shf.r.wrap.b32 	%r709, %r358, %r357, 1;
	shf.r.wrap.b32 	%r710, %r357, %r358, 1;
	mov.b64 	%rd1043, {%r710, %r709};
	shf.r.wrap.b32 	%r711, %r358, %r357, 8;
	shf.r.wrap.b32 	%r712, %r357, %r358, 8;
	mov.b64 	%rd1044, {%r712, %r711};
	shr.u64 	%rd1045, %rd539, 7;
	xor.b64  	%rd1046, %rd1043, %rd1045;
	xor.b64  	%rd1047, %rd1046, %rd1044;
	add.s64 	%rd1048, %rd27, %rd590;
	add.s64 	%rd1049, %rd1048, %rd1042;
	add.s64 	%rd1050, %rd1049, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd1037;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 19;
	shf.r.wrap.b32 	%r716, %r713, %r714, 19;
	mov.b64 	%rd1051, {%r716, %r715};
	shf.l.wrap.b32 	%r717, %r713, %r714, 3;
	shf.l.wrap.b32 	%r718, %r714, %r713, 3;
	mov.b64 	%rd1052, {%r718, %r717};
	shr.u64 	%rd1053, %rd1037, 6;
	xor.b64  	%rd1054, %rd1051, %rd1053;
	xor.b64  	%rd1055, %rd1054, %rd1052;
	shf.r.wrap.b32 	%r719, %r364, %r363, 1;
	shf.r.wrap.b32 	%r720, %r363, %r364, 1;
	mov.b64 	%rd1056, {%r720, %r719};
	shf.r.wrap.b32 	%r721, %r364, %r363, 8;
	shf.r.wrap.b32 	%r722, %r363, %r364, 8;
	mov.b64 	%rd1057, {%r722, %r721};
	shr.u64 	%rd1058, %rd541, 7;
	xor.b64  	%rd1059, %rd1056, %rd1058;
	xor.b64  	%rd1060, %rd1059, %rd1057;
	add.s64 	%rd1061, %rd539, %rd603;
	add.s64 	%rd1062, %rd1061, %rd1055;
	add.s64 	%rd1063, %rd1062, %rd1060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd1050;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 19;
	shf.r.wrap.b32 	%r726, %r723, %r724, 19;
	mov.b64 	%rd1064, {%r726, %r725};
	shf.l.wrap.b32 	%r727, %r723, %r724, 3;
	shf.l.wrap.b32 	%r728, %r724, %r723, 3;
	mov.b64 	%rd1065, {%r728, %r727};
	shr.u64 	%rd1066, %rd1050, 6;
	xor.b64  	%rd1067, %rd1064, %rd1066;
	xor.b64  	%rd1068, %rd1067, %rd1065;
	shf.r.wrap.b32 	%r729, %r370, %r369, 1;
	shf.r.wrap.b32 	%r730, %r369, %r370, 1;
	mov.b64 	%rd1069, {%r730, %r729};
	shf.r.wrap.b32 	%r731, %r370, %r369, 8;
	shf.r.wrap.b32 	%r732, %r369, %r370, 8;
	mov.b64 	%rd1070, {%r732, %r731};
	shr.u64 	%rd1071, %rd548, 7;
	xor.b64  	%rd1072, %rd1069, %rd1071;
	xor.b64  	%rd1073, %rd1072, %rd1070;
	add.s64 	%rd1074, %rd995, %rd541;
	add.s64 	%rd1075, %rd1074, %rd1068;
	add.s64 	%rd1076, %rd1075, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r733,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r734}, %rd1063;
	}
	shf.r.wrap.b32 	%r735, %r734, %r733, 19;
	shf.r.wrap.b32 	%r736, %r733, %r734, 19;
	mov.b64 	%rd1077, {%r736, %r735};
	shf.l.wrap.b32 	%r737, %r733, %r734, 3;
	shf.l.wrap.b32 	%r738, %r734, %r733, 3;
	mov.b64 	%rd1078, {%r738, %r737};
	shr.u64 	%rd1079, %rd1063, 6;
	xor.b64  	%rd1080, %rd1077, %rd1079;
	xor.b64  	%rd1081, %rd1080, %rd1078;
	shf.r.wrap.b32 	%r739, %r376, %r375, 1;
	shf.r.wrap.b32 	%r740, %r375, %r376, 1;
	mov.b64 	%rd1082, {%r740, %r739};
	shf.r.wrap.b32 	%r741, %r376, %r375, 8;
	shf.r.wrap.b32 	%r742, %r375, %r376, 8;
	mov.b64 	%rd1083, {%r742, %r741};
	shr.u64 	%rd1084, %rd555, 7;
	xor.b64  	%rd1085, %rd1082, %rd1084;
	xor.b64  	%rd1086, %rd1085, %rd1083;
	add.s64 	%rd1087, %rd1008, %rd548;
	add.s64 	%rd1088, %rd1087, %rd1081;
	add.s64 	%rd1089, %rd1088, %rd1086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r743,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r744}, %rd1076;
	}
	shf.r.wrap.b32 	%r745, %r744, %r743, 19;
	shf.r.wrap.b32 	%r746, %r743, %r744, 19;
	mov.b64 	%rd1090, {%r746, %r745};
	shf.l.wrap.b32 	%r747, %r743, %r744, 3;
	shf.l.wrap.b32 	%r748, %r744, %r743, 3;
	mov.b64 	%rd1091, {%r748, %r747};
	shr.u64 	%rd1092, %rd1076, 6;
	xor.b64  	%rd1093, %rd1090, %rd1092;
	xor.b64  	%rd1094, %rd1093, %rd1091;
	shf.r.wrap.b32 	%r749, %r382, %r381, 1;
	shf.r.wrap.b32 	%r750, %r381, %r382, 1;
	mov.b64 	%rd1095, {%r750, %r749};
	shf.r.wrap.b32 	%r751, %r382, %r381, 8;
	shf.r.wrap.b32 	%r752, %r381, %r382, 8;
	mov.b64 	%rd1096, {%r752, %r751};
	shr.u64 	%rd1097, %rd562, 7;
	xor.b64  	%rd1098, %rd1095, %rd1097;
	xor.b64  	%rd1099, %rd1098, %rd1096;
	add.s64 	%rd1100, %rd1016, %rd555;
	add.s64 	%rd1101, %rd1100, %rd1094;
	add.s64 	%rd1102, %rd1101, %rd1099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r753,%dummy}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r754}, %rd1089;
	}
	shf.r.wrap.b32 	%r755, %r754, %r753, 19;
	shf.r.wrap.b32 	%r756, %r753, %r754, 19;
	mov.b64 	%rd1103, {%r756, %r755};
	shf.l.wrap.b32 	%r757, %r753, %r754, 3;
	shf.l.wrap.b32 	%r758, %r754, %r753, 3;
	mov.b64 	%rd1104, {%r758, %r757};
	shr.u64 	%rd1105, %rd1089, 6;
	xor.b64  	%rd1106, %rd1103, %rd1105;
	xor.b64  	%rd1107, %rd1106, %rd1104;
	shf.r.wrap.b32 	%r759, %r388, %r387, 1;
	shf.r.wrap.b32 	%r760, %r387, %r388, 1;
	mov.b64 	%rd1108, {%r760, %r759};
	shf.r.wrap.b32 	%r761, %r388, %r387, 8;
	shf.r.wrap.b32 	%r762, %r387, %r388, 8;
	mov.b64 	%rd1109, {%r762, %r761};
	shr.u64 	%rd1110, %rd569, 7;
	xor.b64  	%rd1111, %rd1108, %rd1110;
	xor.b64  	%rd1112, %rd1111, %rd1109;
	add.s64 	%rd1113, %rd1029, %rd562;
	add.s64 	%rd1114, %rd1113, %rd1107;
	add.s64 	%rd1115, %rd1114, %rd1112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r763,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r764}, %rd1102;
	}
	shf.r.wrap.b32 	%r765, %r764, %r763, 19;
	shf.r.wrap.b32 	%r766, %r763, %r764, 19;
	mov.b64 	%rd1116, {%r766, %r765};
	shf.l.wrap.b32 	%r767, %r763, %r764, 3;
	shf.l.wrap.b32 	%r768, %r764, %r763, 3;
	mov.b64 	%rd1117, {%r768, %r767};
	shr.u64 	%rd1118, %rd1102, 6;
	xor.b64  	%rd1119, %rd1116, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd1117;
	shf.r.wrap.b32 	%r769, %r394, %r393, 1;
	shf.r.wrap.b32 	%r770, %r393, %r394, 1;
	mov.b64 	%rd1121, {%r770, %r769};
	shf.r.wrap.b32 	%r771, %r394, %r393, 8;
	shf.r.wrap.b32 	%r772, %r393, %r394, 8;
	mov.b64 	%rd1122, {%r772, %r771};
	shr.u64 	%rd1123, %rd576, 7;
	xor.b64  	%rd1124, %rd1121, %rd1123;
	xor.b64  	%rd1125, %rd1124, %rd1122;
	add.s64 	%rd1126, %rd1037, %rd569;
	add.s64 	%rd1127, %rd1126, %rd1120;
	add.s64 	%rd1128, %rd1127, %rd1125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r774}, %rd1115;
	}
	shf.r.wrap.b32 	%r775, %r774, %r773, 19;
	shf.r.wrap.b32 	%r776, %r773, %r774, 19;
	mov.b64 	%rd1129, {%r776, %r775};
	shf.l.wrap.b32 	%r777, %r773, %r774, 3;
	shf.l.wrap.b32 	%r778, %r774, %r773, 3;
	mov.b64 	%rd1130, {%r778, %r777};
	shr.u64 	%rd1131, %rd1115, 6;
	xor.b64  	%rd1132, %rd1129, %rd1131;
	xor.b64  	%rd1133, %rd1132, %rd1130;
	shf.r.wrap.b32 	%r779, %r400, %r399, 1;
	shf.r.wrap.b32 	%r780, %r399, %r400, 1;
	mov.b64 	%rd1134, {%r780, %r779};
	shf.r.wrap.b32 	%r781, %r400, %r399, 8;
	shf.r.wrap.b32 	%r782, %r399, %r400, 8;
	mov.b64 	%rd1135, {%r782, %r781};
	shr.u64 	%rd1136, %rd583, 7;
	xor.b64  	%rd1137, %rd1134, %rd1136;
	xor.b64  	%rd1138, %rd1137, %rd1135;
	add.s64 	%rd1139, %rd1050, %rd576;
	add.s64 	%rd1140, %rd1139, %rd1133;
	add.s64 	%rd1141, %rd1140, %rd1138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r783,%dummy}, %rd1128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r784}, %rd1128;
	}
	shf.r.wrap.b32 	%r785, %r784, %r783, 19;
	shf.r.wrap.b32 	%r786, %r783, %r784, 19;
	mov.b64 	%rd1142, {%r786, %r785};
	shf.l.wrap.b32 	%r787, %r783, %r784, 3;
	shf.l.wrap.b32 	%r788, %r784, %r783, 3;
	mov.b64 	%rd1143, {%r788, %r787};
	shr.u64 	%rd1144, %rd1128, 6;
	xor.b64  	%rd1145, %rd1142, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1143;
	shf.r.wrap.b32 	%r789, %r666, %r665, 1;
	shf.r.wrap.b32 	%r790, %r665, %r666, 1;
	mov.b64 	%rd1147, {%r790, %r789};
	shf.r.wrap.b32 	%r791, %r666, %r665, 8;
	shf.r.wrap.b32 	%r792, %r665, %r666, 8;
	mov.b64 	%rd1148, {%r792, %r791};
	shr.u64 	%rd1149, %rd590, 7;
	xor.b64  	%rd1150, %rd1147, %rd1149;
	xor.b64  	%rd1151, %rd1150, %rd1148;
	add.s64 	%rd1152, %rd1063, %rd583;
	add.s64 	%rd1153, %rd1152, %rd1146;
	add.s64 	%rd1154, %rd1153, %rd1151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r793,%dummy}, %rd1141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r794}, %rd1141;
	}
	shf.r.wrap.b32 	%r795, %r794, %r793, 19;
	shf.r.wrap.b32 	%r796, %r793, %r794, 19;
	mov.b64 	%rd1155, {%r796, %r795};
	shf.l.wrap.b32 	%r797, %r793, %r794, 3;
	shf.l.wrap.b32 	%r798, %r794, %r793, 3;
	mov.b64 	%rd1156, {%r798, %r797};
	shr.u64 	%rd1157, %rd1141, 6;
	xor.b64  	%rd1158, %rd1155, %rd1157;
	xor.b64  	%rd1159, %rd1158, %rd1156;
	shf.r.wrap.b32 	%r799, %r672, %r671, 1;
	shf.r.wrap.b32 	%r800, %r671, %r672, 1;
	mov.b64 	%rd1160, {%r800, %r799};
	shf.r.wrap.b32 	%r801, %r672, %r671, 8;
	shf.r.wrap.b32 	%r802, %r671, %r672, 8;
	mov.b64 	%rd1161, {%r802, %r801};
	shr.u64 	%rd1162, %rd603, 7;
	xor.b64  	%rd1163, %rd1160, %rd1162;
	xor.b64  	%rd1164, %rd1163, %rd1161;
	add.s64 	%rd1165, %rd1076, %rd590;
	add.s64 	%rd1166, %rd1165, %rd1159;
	add.s64 	%rd1167, %rd1166, %rd1164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r803,%dummy}, %rd1154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r804}, %rd1154;
	}
	shf.r.wrap.b32 	%r805, %r804, %r803, 19;
	shf.r.wrap.b32 	%r806, %r803, %r804, 19;
	mov.b64 	%rd1168, {%r806, %r805};
	shf.l.wrap.b32 	%r807, %r803, %r804, 3;
	shf.l.wrap.b32 	%r808, %r804, %r803, 3;
	mov.b64 	%rd1169, {%r808, %r807};
	shr.u64 	%rd1170, %rd1154, 6;
	xor.b64  	%rd1171, %rd1168, %rd1170;
	xor.b64  	%rd1172, %rd1171, %rd1169;
	shf.r.wrap.b32 	%r809, %r682, %r681, 1;
	shf.r.wrap.b32 	%r810, %r681, %r682, 1;
	mov.b64 	%rd1173, {%r810, %r809};
	shf.r.wrap.b32 	%r811, %r682, %r681, 8;
	shf.r.wrap.b32 	%r812, %r681, %r682, 8;
	mov.b64 	%rd1174, {%r812, %r811};
	shr.u64 	%rd1175, %rd995, 7;
	xor.b64  	%rd1176, %rd1173, %rd1175;
	xor.b64  	%rd1177, %rd1176, %rd1174;
	add.s64 	%rd1178, %rd1089, %rd603;
	add.s64 	%rd1179, %rd1178, %rd1172;
	add.s64 	%rd1180, %rd1179, %rd1177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r813,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r814}, %rd976;
	}
	shf.r.wrap.b32 	%r815, %r814, %r813, 14;
	shf.r.wrap.b32 	%r816, %r813, %r814, 14;
	mov.b64 	%rd1181, {%r816, %r815};
	shf.r.wrap.b32 	%r817, %r814, %r813, 18;
	shf.r.wrap.b32 	%r818, %r813, %r814, 18;
	mov.b64 	%rd1182, {%r818, %r817};
	xor.b64  	%rd1183, %rd1182, %rd1181;
	shf.l.wrap.b32 	%r819, %r813, %r814, 23;
	shf.l.wrap.b32 	%r820, %r814, %r813, 23;
	mov.b64 	%rd1184, {%r820, %r819};
	xor.b64  	%rd1185, %rd1183, %rd1184;
	xor.b64  	%rd1186, %rd928, %rd952;
	and.b64  	%rd1187, %rd1186, %rd976;
	xor.b64  	%rd1188, %rd1187, %rd928;
	add.s64 	%rd1189, %rd1188, %rd904;
	add.s64 	%rd1190, %rd1189, %rd995;
	add.s64 	%rd1191, %rd1190, %rd2669;
	add.s64 	%rd1192, %rd1191, %rd1185;
	add.s64 	%rd1193, %rd1192, %rd915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r821,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r822}, %rd987;
	}
	shf.r.wrap.b32 	%r823, %r822, %r821, 28;
	shf.r.wrap.b32 	%r824, %r821, %r822, 28;
	mov.b64 	%rd1194, {%r824, %r823};
	shf.l.wrap.b32 	%r825, %r821, %r822, 30;
	shf.l.wrap.b32 	%r826, %r822, %r821, 30;
	mov.b64 	%rd1195, {%r826, %r825};
	xor.b64  	%rd1196, %rd1195, %rd1194;
	shf.l.wrap.b32 	%r827, %r821, %r822, 25;
	shf.l.wrap.b32 	%r828, %r822, %r821, 25;
	mov.b64 	%rd1197, {%r828, %r827};
	xor.b64  	%rd1198, %rd1196, %rd1197;
	xor.b64  	%rd1199, %rd987, %rd939;
	xor.b64  	%rd1200, %rd987, %rd963;
	and.b64  	%rd1201, %rd1200, %rd1199;
	xor.b64  	%rd1202, %rd1201, %rd987;
	add.s64 	%rd1203, %rd1192, %rd1202;
	add.s64 	%rd1204, %rd1203, %rd1198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd1193;
	}
	shf.r.wrap.b32 	%r831, %r830, %r829, 14;
	shf.r.wrap.b32 	%r832, %r829, %r830, 14;
	mov.b64 	%rd1205, {%r832, %r831};
	shf.r.wrap.b32 	%r833, %r830, %r829, 18;
	shf.r.wrap.b32 	%r834, %r829, %r830, 18;
	mov.b64 	%rd1206, {%r834, %r833};
	xor.b64  	%rd1207, %rd1206, %rd1205;
	shf.l.wrap.b32 	%r835, %r829, %r830, 23;
	shf.l.wrap.b32 	%r836, %r830, %r829, 23;
	mov.b64 	%rd1208, {%r836, %r835};
	xor.b64  	%rd1209, %rd1207, %rd1208;
	xor.b64  	%rd1210, %rd952, %rd976;
	and.b64  	%rd1211, %rd1193, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd952;
	add.s64 	%rd1213, %rd1008, %rd928;
	add.s64 	%rd1214, %rd1213, %rd2670;
	add.s64 	%rd1215, %rd1214, %rd1212;
	add.s64 	%rd1216, %rd1215, %rd1209;
	add.s64 	%rd1217, %rd1216, %rd939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd1204;
	}
	shf.r.wrap.b32 	%r839, %r838, %r837, 28;
	shf.r.wrap.b32 	%r840, %r837, %r838, 28;
	mov.b64 	%rd1218, {%r840, %r839};
	shf.l.wrap.b32 	%r841, %r837, %r838, 30;
	shf.l.wrap.b32 	%r842, %r838, %r837, 30;
	mov.b64 	%rd1219, {%r842, %r841};
	xor.b64  	%rd1220, %rd1219, %rd1218;
	shf.l.wrap.b32 	%r843, %r837, %r838, 25;
	shf.l.wrap.b32 	%r844, %r838, %r837, 25;
	mov.b64 	%rd1221, {%r844, %r843};
	xor.b64  	%rd1222, %rd1220, %rd1221;
	xor.b64  	%rd1223, %rd1204, %rd963;
	xor.b64  	%rd1224, %rd1204, %rd987;
	and.b64  	%rd1225, %rd1224, %rd1223;
	xor.b64  	%rd1226, %rd1225, %rd1204;
	add.s64 	%rd1227, %rd1216, %rd1226;
	add.s64 	%rd1228, %rd1227, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd1217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r846}, %rd1217;
	}
	shf.r.wrap.b32 	%r847, %r846, %r845, 14;
	shf.r.wrap.b32 	%r848, %r845, %r846, 14;
	mov.b64 	%rd1229, {%r848, %r847};
	shf.r.wrap.b32 	%r849, %r846, %r845, 18;
	shf.r.wrap.b32 	%r850, %r845, %r846, 18;
	mov.b64 	%rd1230, {%r850, %r849};
	xor.b64  	%rd1231, %rd1230, %rd1229;
	shf.l.wrap.b32 	%r851, %r845, %r846, 23;
	shf.l.wrap.b32 	%r852, %r846, %r845, 23;
	mov.b64 	%rd1232, {%r852, %r851};
	xor.b64  	%rd1233, %rd1231, %rd1232;
	xor.b64  	%rd1234, %rd1193, %rd976;
	and.b64  	%rd1235, %rd1217, %rd1234;
	xor.b64  	%rd1236, %rd1235, %rd976;
	add.s64 	%rd1237, %rd1016, %rd952;
	add.s64 	%rd1238, %rd1237, %rd2671;
	add.s64 	%rd1239, %rd1238, %rd1236;
	add.s64 	%rd1240, %rd1239, %rd1233;
	add.s64 	%rd1241, %rd1240, %rd963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd1228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd1228;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 28;
	shf.r.wrap.b32 	%r856, %r853, %r854, 28;
	mov.b64 	%rd1242, {%r856, %r855};
	shf.l.wrap.b32 	%r857, %r853, %r854, 30;
	shf.l.wrap.b32 	%r858, %r854, %r853, 30;
	mov.b64 	%rd1243, {%r858, %r857};
	xor.b64  	%rd1244, %rd1243, %rd1242;
	shf.l.wrap.b32 	%r859, %r853, %r854, 25;
	shf.l.wrap.b32 	%r860, %r854, %r853, 25;
	mov.b64 	%rd1245, {%r860, %r859};
	xor.b64  	%rd1246, %rd1244, %rd1245;
	xor.b64  	%rd1247, %rd1228, %rd987;
	xor.b64  	%rd1248, %rd1228, %rd1204;
	and.b64  	%rd1249, %rd1248, %rd1247;
	xor.b64  	%rd1250, %rd1249, %rd1228;
	add.s64 	%rd1251, %rd1240, %rd1250;
	add.s64 	%rd1252, %rd1251, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd1241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd1241;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 14;
	shf.r.wrap.b32 	%r864, %r861, %r862, 14;
	mov.b64 	%rd1253, {%r864, %r863};
	shf.r.wrap.b32 	%r865, %r862, %r861, 18;
	shf.r.wrap.b32 	%r866, %r861, %r862, 18;
	mov.b64 	%rd1254, {%r866, %r865};
	xor.b64  	%rd1255, %rd1254, %rd1253;
	shf.l.wrap.b32 	%r867, %r861, %r862, 23;
	shf.l.wrap.b32 	%r868, %r862, %r861, 23;
	mov.b64 	%rd1256, {%r868, %r867};
	xor.b64  	%rd1257, %rd1255, %rd1256;
	xor.b64  	%rd1258, %rd1217, %rd1193;
	and.b64  	%rd1259, %rd1241, %rd1258;
	xor.b64  	%rd1260, %rd1259, %rd1193;
	add.s64 	%rd1261, %rd1029, %rd976;
	add.s64 	%rd1262, %rd1261, %rd2672;
	add.s64 	%rd1263, %rd1262, %rd1260;
	add.s64 	%rd1264, %rd1263, %rd1257;
	add.s64 	%rd1265, %rd1264, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd1252;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 28;
	shf.r.wrap.b32 	%r872, %r869, %r870, 28;
	mov.b64 	%rd1266, {%r872, %r871};
	shf.l.wrap.b32 	%r873, %r869, %r870, 30;
	shf.l.wrap.b32 	%r874, %r870, %r869, 30;
	mov.b64 	%rd1267, {%r874, %r873};
	xor.b64  	%rd1268, %rd1267, %rd1266;
	shf.l.wrap.b32 	%r875, %r869, %r870, 25;
	shf.l.wrap.b32 	%r876, %r870, %r869, 25;
	mov.b64 	%rd1269, {%r876, %r875};
	xor.b64  	%rd1270, %rd1268, %rd1269;
	xor.b64  	%rd1271, %rd1252, %rd1204;
	xor.b64  	%rd1272, %rd1252, %rd1228;
	and.b64  	%rd1273, %rd1272, %rd1271;
	xor.b64  	%rd1274, %rd1273, %rd1252;
	add.s64 	%rd1275, %rd1264, %rd1274;
	add.s64 	%rd1276, %rd1275, %rd1270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd1265;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 14;
	shf.r.wrap.b32 	%r880, %r877, %r878, 14;
	mov.b64 	%rd1277, {%r880, %r879};
	shf.r.wrap.b32 	%r881, %r878, %r877, 18;
	shf.r.wrap.b32 	%r882, %r877, %r878, 18;
	mov.b64 	%rd1278, {%r882, %r881};
	xor.b64  	%rd1279, %rd1278, %rd1277;
	shf.l.wrap.b32 	%r883, %r877, %r878, 23;
	shf.l.wrap.b32 	%r884, %r878, %r877, 23;
	mov.b64 	%rd1280, {%r884, %r883};
	xor.b64  	%rd1281, %rd1279, %rd1280;
	xor.b64  	%rd1282, %rd1241, %rd1217;
	and.b64  	%rd1283, %rd1265, %rd1282;
	xor.b64  	%rd1284, %rd1283, %rd1217;
	add.s64 	%rd1285, %rd1193, %rd1037;
	add.s64 	%rd1286, %rd1285, %rd2673;
	add.s64 	%rd1287, %rd1286, %rd1284;
	add.s64 	%rd1288, %rd1287, %rd1281;
	add.s64 	%rd1289, %rd1288, %rd1204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd1276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd1276;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 28;
	shf.r.wrap.b32 	%r888, %r885, %r886, 28;
	mov.b64 	%rd1290, {%r888, %r887};
	shf.l.wrap.b32 	%r889, %r885, %r886, 30;
	shf.l.wrap.b32 	%r890, %r886, %r885, 30;
	mov.b64 	%rd1291, {%r890, %r889};
	xor.b64  	%rd1292, %rd1291, %rd1290;
	shf.l.wrap.b32 	%r891, %r885, %r886, 25;
	shf.l.wrap.b32 	%r892, %r886, %r885, 25;
	mov.b64 	%rd1293, {%r892, %r891};
	xor.b64  	%rd1294, %rd1292, %rd1293;
	xor.b64  	%rd1295, %rd1276, %rd1228;
	xor.b64  	%rd1296, %rd1276, %rd1252;
	and.b64  	%rd1297, %rd1296, %rd1295;
	xor.b64  	%rd1298, %rd1297, %rd1276;
	add.s64 	%rd1299, %rd1288, %rd1298;
	add.s64 	%rd1300, %rd1299, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r893,%dummy}, %rd1289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r894}, %rd1289;
	}
	shf.r.wrap.b32 	%r895, %r894, %r893, 14;
	shf.r.wrap.b32 	%r896, %r893, %r894, 14;
	mov.b64 	%rd1301, {%r896, %r895};
	shf.r.wrap.b32 	%r897, %r894, %r893, 18;
	shf.r.wrap.b32 	%r898, %r893, %r894, 18;
	mov.b64 	%rd1302, {%r898, %r897};
	xor.b64  	%rd1303, %rd1302, %rd1301;
	shf.l.wrap.b32 	%r899, %r893, %r894, 23;
	shf.l.wrap.b32 	%r900, %r894, %r893, 23;
	mov.b64 	%rd1304, {%r900, %r899};
	xor.b64  	%rd1305, %rd1303, %rd1304;
	xor.b64  	%rd1306, %rd1265, %rd1241;
	and.b64  	%rd1307, %rd1289, %rd1306;
	xor.b64  	%rd1308, %rd1307, %rd1241;
	add.s64 	%rd1309, %rd1217, %rd1050;
	add.s64 	%rd1310, %rd1309, %rd2674;
	add.s64 	%rd1311, %rd1310, %rd1308;
	add.s64 	%rd1312, %rd1311, %rd1305;
	add.s64 	%rd1313, %rd1312, %rd1228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd1300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r902}, %rd1300;
	}
	shf.r.wrap.b32 	%r903, %r902, %r901, 28;
	shf.r.wrap.b32 	%r904, %r901, %r902, 28;
	mov.b64 	%rd1314, {%r904, %r903};
	shf.l.wrap.b32 	%r905, %r901, %r902, 30;
	shf.l.wrap.b32 	%r906, %r902, %r901, 30;
	mov.b64 	%rd1315, {%r906, %r905};
	xor.b64  	%rd1316, %rd1315, %rd1314;
	shf.l.wrap.b32 	%r907, %r901, %r902, 25;
	shf.l.wrap.b32 	%r908, %r902, %r901, 25;
	mov.b64 	%rd1317, {%r908, %r907};
	xor.b64  	%rd1318, %rd1316, %rd1317;
	xor.b64  	%rd1319, %rd1300, %rd1252;
	xor.b64  	%rd1320, %rd1300, %rd1276;
	and.b64  	%rd1321, %rd1320, %rd1319;
	xor.b64  	%rd1322, %rd1321, %rd1300;
	add.s64 	%rd1323, %rd1312, %rd1322;
	add.s64 	%rd1324, %rd1323, %rd1318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd1313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd1313;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 14;
	shf.r.wrap.b32 	%r912, %r909, %r910, 14;
	mov.b64 	%rd1325, {%r912, %r911};
	shf.r.wrap.b32 	%r913, %r910, %r909, 18;
	shf.r.wrap.b32 	%r914, %r909, %r910, 18;
	mov.b64 	%rd1326, {%r914, %r913};
	xor.b64  	%rd1327, %rd1326, %rd1325;
	shf.l.wrap.b32 	%r915, %r909, %r910, 23;
	shf.l.wrap.b32 	%r916, %r910, %r909, 23;
	mov.b64 	%rd1328, {%r916, %r915};
	xor.b64  	%rd1329, %rd1327, %rd1328;
	xor.b64  	%rd1330, %rd1289, %rd1265;
	and.b64  	%rd1331, %rd1313, %rd1330;
	xor.b64  	%rd1332, %rd1331, %rd1265;
	add.s64 	%rd1333, %rd1241, %rd1063;
	add.s64 	%rd1334, %rd1333, %rd2675;
	add.s64 	%rd1335, %rd1334, %rd1332;
	add.s64 	%rd1336, %rd1335, %rd1329;
	add.s64 	%rd1337, %rd1336, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd1324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r918}, %rd1324;
	}
	shf.r.wrap.b32 	%r919, %r918, %r917, 28;
	shf.r.wrap.b32 	%r920, %r917, %r918, 28;
	mov.b64 	%rd1338, {%r920, %r919};
	shf.l.wrap.b32 	%r921, %r917, %r918, 30;
	shf.l.wrap.b32 	%r922, %r918, %r917, 30;
	mov.b64 	%rd1339, {%r922, %r921};
	xor.b64  	%rd1340, %rd1339, %rd1338;
	shf.l.wrap.b32 	%r923, %r917, %r918, 25;
	shf.l.wrap.b32 	%r924, %r918, %r917, 25;
	mov.b64 	%rd1341, {%r924, %r923};
	xor.b64  	%rd1342, %rd1340, %rd1341;
	xor.b64  	%rd1343, %rd1324, %rd1276;
	xor.b64  	%rd1344, %rd1324, %rd1300;
	and.b64  	%rd1345, %rd1344, %rd1343;
	xor.b64  	%rd1346, %rd1345, %rd1324;
	add.s64 	%rd1347, %rd1336, %rd1346;
	add.s64 	%rd1348, %rd1347, %rd1342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd1337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd1337;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 14;
	shf.r.wrap.b32 	%r928, %r925, %r926, 14;
	mov.b64 	%rd1349, {%r928, %r927};
	shf.r.wrap.b32 	%r929, %r926, %r925, 18;
	shf.r.wrap.b32 	%r930, %r925, %r926, 18;
	mov.b64 	%rd1350, {%r930, %r929};
	xor.b64  	%rd1351, %rd1350, %rd1349;
	shf.l.wrap.b32 	%r931, %r925, %r926, 23;
	shf.l.wrap.b32 	%r932, %r926, %r925, 23;
	mov.b64 	%rd1352, {%r932, %r931};
	xor.b64  	%rd1353, %rd1351, %rd1352;
	xor.b64  	%rd1354, %rd1313, %rd1289;
	and.b64  	%rd1355, %rd1337, %rd1354;
	xor.b64  	%rd1356, %rd1355, %rd1289;
	add.s64 	%rd1357, %rd1265, %rd1076;
	add.s64 	%rd1358, %rd1357, %rd2676;
	add.s64 	%rd1359, %rd1358, %rd1356;
	add.s64 	%rd1360, %rd1359, %rd1353;
	add.s64 	%rd1361, %rd1360, %rd1276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd1348;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 28;
	shf.r.wrap.b32 	%r936, %r933, %r934, 28;
	mov.b64 	%rd1362, {%r936, %r935};
	shf.l.wrap.b32 	%r937, %r933, %r934, 30;
	shf.l.wrap.b32 	%r938, %r934, %r933, 30;
	mov.b64 	%rd1363, {%r938, %r937};
	xor.b64  	%rd1364, %rd1363, %rd1362;
	shf.l.wrap.b32 	%r939, %r933, %r934, 25;
	shf.l.wrap.b32 	%r940, %r934, %r933, 25;
	mov.b64 	%rd1365, {%r940, %r939};
	xor.b64  	%rd1366, %rd1364, %rd1365;
	xor.b64  	%rd1367, %rd1348, %rd1300;
	xor.b64  	%rd1368, %rd1348, %rd1324;
	and.b64  	%rd1369, %rd1368, %rd1367;
	xor.b64  	%rd1370, %rd1369, %rd1348;
	add.s64 	%rd1371, %rd1360, %rd1370;
	add.s64 	%rd1372, %rd1371, %rd1366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd1361;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 14;
	shf.r.wrap.b32 	%r944, %r941, %r942, 14;
	mov.b64 	%rd1373, {%r944, %r943};
	shf.r.wrap.b32 	%r945, %r942, %r941, 18;
	shf.r.wrap.b32 	%r946, %r941, %r942, 18;
	mov.b64 	%rd1374, {%r946, %r945};
	xor.b64  	%rd1375, %rd1374, %rd1373;
	shf.l.wrap.b32 	%r947, %r941, %r942, 23;
	shf.l.wrap.b32 	%r948, %r942, %r941, 23;
	mov.b64 	%rd1376, {%r948, %r947};
	xor.b64  	%rd1377, %rd1375, %rd1376;
	xor.b64  	%rd1378, %rd1337, %rd1313;
	and.b64  	%rd1379, %rd1361, %rd1378;
	xor.b64  	%rd1380, %rd1379, %rd1313;
	add.s64 	%rd1381, %rd1289, %rd1089;
	add.s64 	%rd1382, %rd1381, %rd2677;
	add.s64 	%rd1383, %rd1382, %rd1380;
	add.s64 	%rd1384, %rd1383, %rd1377;
	add.s64 	%rd1385, %rd1384, %rd1300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r949,%dummy}, %rd1372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r950}, %rd1372;
	}
	shf.r.wrap.b32 	%r951, %r950, %r949, 28;
	shf.r.wrap.b32 	%r952, %r949, %r950, 28;
	mov.b64 	%rd1386, {%r952, %r951};
	shf.l.wrap.b32 	%r953, %r949, %r950, 30;
	shf.l.wrap.b32 	%r954, %r950, %r949, 30;
	mov.b64 	%rd1387, {%r954, %r953};
	xor.b64  	%rd1388, %rd1387, %rd1386;
	shf.l.wrap.b32 	%r955, %r949, %r950, 25;
	shf.l.wrap.b32 	%r956, %r950, %r949, 25;
	mov.b64 	%rd1389, {%r956, %r955};
	xor.b64  	%rd1390, %rd1388, %rd1389;
	xor.b64  	%rd1391, %rd1372, %rd1324;
	xor.b64  	%rd1392, %rd1372, %rd1348;
	and.b64  	%rd1393, %rd1392, %rd1391;
	xor.b64  	%rd1394, %rd1393, %rd1372;
	add.s64 	%rd1395, %rd1384, %rd1394;
	add.s64 	%rd1396, %rd1395, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd1385;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 14;
	shf.r.wrap.b32 	%r960, %r957, %r958, 14;
	mov.b64 	%rd1397, {%r960, %r959};
	shf.r.wrap.b32 	%r961, %r958, %r957, 18;
	shf.r.wrap.b32 	%r962, %r957, %r958, 18;
	mov.b64 	%rd1398, {%r962, %r961};
	xor.b64  	%rd1399, %rd1398, %rd1397;
	shf.l.wrap.b32 	%r963, %r957, %r958, 23;
	shf.l.wrap.b32 	%r964, %r958, %r957, 23;
	mov.b64 	%rd1400, {%r964, %r963};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	xor.b64  	%rd1402, %rd1361, %rd1337;
	and.b64  	%rd1403, %rd1385, %rd1402;
	xor.b64  	%rd1404, %rd1403, %rd1337;
	add.s64 	%rd1405, %rd1313, %rd1102;
	add.s64 	%rd1406, %rd1405, %rd2678;
	add.s64 	%rd1407, %rd1406, %rd1404;
	add.s64 	%rd1408, %rd1407, %rd1401;
	add.s64 	%rd1409, %rd1408, %rd1324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd1396;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 28;
	shf.r.wrap.b32 	%r968, %r965, %r966, 28;
	mov.b64 	%rd1410, {%r968, %r967};
	shf.l.wrap.b32 	%r969, %r965, %r966, 30;
	shf.l.wrap.b32 	%r970, %r966, %r965, 30;
	mov.b64 	%rd1411, {%r970, %r969};
	xor.b64  	%rd1412, %rd1411, %rd1410;
	shf.l.wrap.b32 	%r971, %r965, %r966, 25;
	shf.l.wrap.b32 	%r972, %r966, %r965, 25;
	mov.b64 	%rd1413, {%r972, %r971};
	xor.b64  	%rd1414, %rd1412, %rd1413;
	xor.b64  	%rd1415, %rd1396, %rd1348;
	xor.b64  	%rd1416, %rd1396, %rd1372;
	and.b64  	%rd1417, %rd1416, %rd1415;
	xor.b64  	%rd1418, %rd1417, %rd1396;
	add.s64 	%rd1419, %rd1408, %rd1418;
	add.s64 	%rd1420, %rd1419, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd1409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r974}, %rd1409;
	}
	shf.r.wrap.b32 	%r975, %r974, %r973, 14;
	shf.r.wrap.b32 	%r976, %r973, %r974, 14;
	mov.b64 	%rd1421, {%r976, %r975};
	shf.r.wrap.b32 	%r977, %r974, %r973, 18;
	shf.r.wrap.b32 	%r978, %r973, %r974, 18;
	mov.b64 	%rd1422, {%r978, %r977};
	xor.b64  	%rd1423, %rd1422, %rd1421;
	shf.l.wrap.b32 	%r979, %r973, %r974, 23;
	shf.l.wrap.b32 	%r980, %r974, %r973, 23;
	mov.b64 	%rd1424, {%r980, %r979};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	xor.b64  	%rd1426, %rd1385, %rd1361;
	and.b64  	%rd1427, %rd1409, %rd1426;
	xor.b64  	%rd1428, %rd1427, %rd1361;
	add.s64 	%rd1429, %rd1337, %rd1115;
	add.s64 	%rd1430, %rd1429, %rd2679;
	add.s64 	%rd1431, %rd1430, %rd1428;
	add.s64 	%rd1432, %rd1431, %rd1425;
	add.s64 	%rd1433, %rd1432, %rd1348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd1420;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 28;
	shf.r.wrap.b32 	%r984, %r981, %r982, 28;
	mov.b64 	%rd1434, {%r984, %r983};
	shf.l.wrap.b32 	%r985, %r981, %r982, 30;
	shf.l.wrap.b32 	%r986, %r982, %r981, 30;
	mov.b64 	%rd1435, {%r986, %r985};
	xor.b64  	%rd1436, %rd1435, %rd1434;
	shf.l.wrap.b32 	%r987, %r981, %r982, 25;
	shf.l.wrap.b32 	%r988, %r982, %r981, 25;
	mov.b64 	%rd1437, {%r988, %r987};
	xor.b64  	%rd1438, %rd1436, %rd1437;
	xor.b64  	%rd1439, %rd1420, %rd1372;
	xor.b64  	%rd1440, %rd1420, %rd1396;
	and.b64  	%rd1441, %rd1440, %rd1439;
	xor.b64  	%rd1442, %rd1441, %rd1420;
	add.s64 	%rd1443, %rd1432, %rd1442;
	add.s64 	%rd1444, %rd1443, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd1433;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 14;
	shf.r.wrap.b32 	%r992, %r989, %r990, 14;
	mov.b64 	%rd1445, {%r992, %r991};
	shf.r.wrap.b32 	%r993, %r990, %r989, 18;
	shf.r.wrap.b32 	%r994, %r989, %r990, 18;
	mov.b64 	%rd1446, {%r994, %r993};
	xor.b64  	%rd1447, %rd1446, %rd1445;
	shf.l.wrap.b32 	%r995, %r989, %r990, 23;
	shf.l.wrap.b32 	%r996, %r990, %r989, 23;
	mov.b64 	%rd1448, {%r996, %r995};
	xor.b64  	%rd1449, %rd1447, %rd1448;
	xor.b64  	%rd1450, %rd1409, %rd1385;
	and.b64  	%rd1451, %rd1433, %rd1450;
	xor.b64  	%rd1452, %rd1451, %rd1385;
	add.s64 	%rd1453, %rd1361, %rd1128;
	add.s64 	%rd1454, %rd1453, %rd2680;
	add.s64 	%rd1455, %rd1454, %rd1452;
	add.s64 	%rd1456, %rd1455, %rd1449;
	add.s64 	%rd1457, %rd1456, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1444;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 28;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 28;
	mov.b64 	%rd1458, {%r1000, %r999};
	shf.l.wrap.b32 	%r1001, %r997, %r998, 30;
	shf.l.wrap.b32 	%r1002, %r998, %r997, 30;
	mov.b64 	%rd1459, {%r1002, %r1001};
	xor.b64  	%rd1460, %rd1459, %rd1458;
	shf.l.wrap.b32 	%r1003, %r997, %r998, 25;
	shf.l.wrap.b32 	%r1004, %r998, %r997, 25;
	mov.b64 	%rd1461, {%r1004, %r1003};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	xor.b64  	%rd1463, %rd1444, %rd1396;
	xor.b64  	%rd1464, %rd1444, %rd1420;
	and.b64  	%rd1465, %rd1464, %rd1463;
	xor.b64  	%rd1466, %rd1465, %rd1444;
	add.s64 	%rd1467, %rd1456, %rd1466;
	add.s64 	%rd1468, %rd1467, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1005,%dummy}, %rd1457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1006}, %rd1457;
	}
	shf.r.wrap.b32 	%r1007, %r1006, %r1005, 14;
	shf.r.wrap.b32 	%r1008, %r1005, %r1006, 14;
	mov.b64 	%rd1469, {%r1008, %r1007};
	shf.r.wrap.b32 	%r1009, %r1006, %r1005, 18;
	shf.r.wrap.b32 	%r1010, %r1005, %r1006, 18;
	mov.b64 	%rd1470, {%r1010, %r1009};
	xor.b64  	%rd1471, %rd1470, %rd1469;
	shf.l.wrap.b32 	%r1011, %r1005, %r1006, 23;
	shf.l.wrap.b32 	%r1012, %r1006, %r1005, 23;
	mov.b64 	%rd1472, {%r1012, %r1011};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	xor.b64  	%rd1474, %rd1433, %rd1409;
	and.b64  	%rd1475, %rd1457, %rd1474;
	xor.b64  	%rd1476, %rd1475, %rd1409;
	add.s64 	%rd1477, %rd1385, %rd1141;
	add.s64 	%rd1478, %rd1477, %rd2681;
	add.s64 	%rd1479, %rd1478, %rd1476;
	add.s64 	%rd1480, %rd1479, %rd1473;
	add.s64 	%rd1481, %rd1480, %rd1396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1013,%dummy}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1014}, %rd1468;
	}
	shf.r.wrap.b32 	%r1015, %r1014, %r1013, 28;
	shf.r.wrap.b32 	%r1016, %r1013, %r1014, 28;
	mov.b64 	%rd1482, {%r1016, %r1015};
	shf.l.wrap.b32 	%r1017, %r1013, %r1014, 30;
	shf.l.wrap.b32 	%r1018, %r1014, %r1013, 30;
	mov.b64 	%rd1483, {%r1018, %r1017};
	xor.b64  	%rd1484, %rd1483, %rd1482;
	shf.l.wrap.b32 	%r1019, %r1013, %r1014, 25;
	shf.l.wrap.b32 	%r1020, %r1014, %r1013, 25;
	mov.b64 	%rd1485, {%r1020, %r1019};
	xor.b64  	%rd1486, %rd1484, %rd1485;
	xor.b64  	%rd1487, %rd1468, %rd1420;
	xor.b64  	%rd1488, %rd1468, %rd1444;
	and.b64  	%rd1489, %rd1488, %rd1487;
	xor.b64  	%rd1490, %rd1489, %rd1468;
	add.s64 	%rd1491, %rd1480, %rd1490;
	add.s64 	%rd1492, %rd1491, %rd1486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd1481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1022}, %rd1481;
	}
	shf.r.wrap.b32 	%r1023, %r1022, %r1021, 14;
	shf.r.wrap.b32 	%r1024, %r1021, %r1022, 14;
	mov.b64 	%rd1493, {%r1024, %r1023};
	shf.r.wrap.b32 	%r1025, %r1022, %r1021, 18;
	shf.r.wrap.b32 	%r1026, %r1021, %r1022, 18;
	mov.b64 	%rd1494, {%r1026, %r1025};
	xor.b64  	%rd1495, %rd1494, %rd1493;
	shf.l.wrap.b32 	%r1027, %r1021, %r1022, 23;
	shf.l.wrap.b32 	%r1028, %r1022, %r1021, 23;
	mov.b64 	%rd1496, {%r1028, %r1027};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	xor.b64  	%rd1498, %rd1457, %rd1433;
	and.b64  	%rd1499, %rd1481, %rd1498;
	xor.b64  	%rd1500, %rd1499, %rd1433;
	add.s64 	%rd1501, %rd1409, %rd1154;
	add.s64 	%rd1502, %rd1501, %rd2682;
	add.s64 	%rd1503, %rd1502, %rd1500;
	add.s64 	%rd1504, %rd1503, %rd1497;
	add.s64 	%rd1505, %rd1504, %rd1420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd1492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd1492;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 28;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 28;
	mov.b64 	%rd1506, {%r1032, %r1031};
	shf.l.wrap.b32 	%r1033, %r1029, %r1030, 30;
	shf.l.wrap.b32 	%r1034, %r1030, %r1029, 30;
	mov.b64 	%rd1507, {%r1034, %r1033};
	xor.b64  	%rd1508, %rd1507, %rd1506;
	shf.l.wrap.b32 	%r1035, %r1029, %r1030, 25;
	shf.l.wrap.b32 	%r1036, %r1030, %r1029, 25;
	mov.b64 	%rd1509, {%r1036, %r1035};
	xor.b64  	%rd1510, %rd1508, %rd1509;
	xor.b64  	%rd1511, %rd1492, %rd1444;
	xor.b64  	%rd1512, %rd1492, %rd1468;
	and.b64  	%rd1513, %rd1512, %rd1511;
	xor.b64  	%rd1514, %rd1513, %rd1492;
	add.s64 	%rd1515, %rd1504, %rd1514;
	add.s64 	%rd1516, %rd1515, %rd1510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd1505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd1505;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 14;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 14;
	mov.b64 	%rd1517, {%r1040, %r1039};
	shf.r.wrap.b32 	%r1041, %r1038, %r1037, 18;
	shf.r.wrap.b32 	%r1042, %r1037, %r1038, 18;
	mov.b64 	%rd1518, {%r1042, %r1041};
	xor.b64  	%rd1519, %rd1518, %rd1517;
	shf.l.wrap.b32 	%r1043, %r1037, %r1038, 23;
	shf.l.wrap.b32 	%r1044, %r1038, %r1037, 23;
	mov.b64 	%rd1520, {%r1044, %r1043};
	xor.b64  	%rd1521, %rd1519, %rd1520;
	xor.b64  	%rd1522, %rd1481, %rd1457;
	and.b64  	%rd1523, %rd1505, %rd1522;
	xor.b64  	%rd1524, %rd1523, %rd1457;
	add.s64 	%rd1525, %rd1433, %rd1167;
	add.s64 	%rd1526, %rd1525, %rd2683;
	add.s64 	%rd1527, %rd1526, %rd1524;
	add.s64 	%rd1528, %rd1527, %rd1521;
	add.s64 	%rd1529, %rd1528, %rd1444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd1516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd1516;
	}
	shf.r.wrap.b32 	%r1047, %r1046, %r1045, 28;
	shf.r.wrap.b32 	%r1048, %r1045, %r1046, 28;
	mov.b64 	%rd1530, {%r1048, %r1047};
	shf.l.wrap.b32 	%r1049, %r1045, %r1046, 30;
	shf.l.wrap.b32 	%r1050, %r1046, %r1045, 30;
	mov.b64 	%rd1531, {%r1050, %r1049};
	xor.b64  	%rd1532, %rd1531, %rd1530;
	shf.l.wrap.b32 	%r1051, %r1045, %r1046, 25;
	shf.l.wrap.b32 	%r1052, %r1046, %r1045, 25;
	mov.b64 	%rd1533, {%r1052, %r1051};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	xor.b64  	%rd1535, %rd1516, %rd1468;
	xor.b64  	%rd1536, %rd1516, %rd1492;
	and.b64  	%rd1537, %rd1536, %rd1535;
	xor.b64  	%rd1538, %rd1537, %rd1516;
	add.s64 	%rd1539, %rd1528, %rd1538;
	add.s64 	%rd1540, %rd1539, %rd1534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd1529;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 14;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 14;
	mov.b64 	%rd1541, {%r1056, %r1055};
	shf.r.wrap.b32 	%r1057, %r1054, %r1053, 18;
	shf.r.wrap.b32 	%r1058, %r1053, %r1054, 18;
	mov.b64 	%rd1542, {%r1058, %r1057};
	xor.b64  	%rd1543, %rd1542, %rd1541;
	shf.l.wrap.b32 	%r1059, %r1053, %r1054, 23;
	shf.l.wrap.b32 	%r1060, %r1054, %r1053, 23;
	mov.b64 	%rd1544, {%r1060, %r1059};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	xor.b64  	%rd1546, %rd1505, %rd1481;
	and.b64  	%rd1547, %rd1529, %rd1546;
	xor.b64  	%rd1548, %rd1547, %rd1481;
	add.s64 	%rd1549, %rd1457, %rd1180;
	add.s64 	%rd1550, %rd1549, %rd2684;
	add.s64 	%rd1551, %rd1550, %rd1548;
	add.s64 	%rd1552, %rd1551, %rd1545;
	add.s64 	%rd1553, %rd1552, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd1540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1062}, %rd1540;
	}
	shf.r.wrap.b32 	%r1063, %r1062, %r1061, 28;
	shf.r.wrap.b32 	%r1064, %r1061, %r1062, 28;
	mov.b64 	%rd1554, {%r1064, %r1063};
	shf.l.wrap.b32 	%r1065, %r1061, %r1062, 30;
	shf.l.wrap.b32 	%r1066, %r1062, %r1061, 30;
	mov.b64 	%rd1555, {%r1066, %r1065};
	xor.b64  	%rd1556, %rd1555, %rd1554;
	shf.l.wrap.b32 	%r1067, %r1061, %r1062, 25;
	shf.l.wrap.b32 	%r1068, %r1062, %r1061, 25;
	mov.b64 	%rd1557, {%r1068, %r1067};
	xor.b64  	%rd1558, %rd1556, %rd1557;
	xor.b64  	%rd1559, %rd1540, %rd1492;
	xor.b64  	%rd1560, %rd1540, %rd1516;
	and.b64  	%rd1561, %rd1560, %rd1559;
	xor.b64  	%rd1562, %rd1561, %rd1540;
	add.s64 	%rd1563, %rd1552, %rd1562;
	add.s64 	%rd1564, %rd1563, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd1167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd1167;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 19;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 19;
	mov.b64 	%rd1565, {%r1072, %r1071};
	shf.l.wrap.b32 	%r1073, %r1069, %r1070, 3;
	shf.l.wrap.b32 	%r1074, %r1070, %r1069, 3;
	mov.b64 	%rd1566, {%r1074, %r1073};
	shr.u64 	%rd1567, %rd1167, 6;
	xor.b64  	%rd1568, %rd1565, %rd1567;
	xor.b64  	%rd1569, %rd1568, %rd1566;
	shf.r.wrap.b32 	%r1075, %r688, %r687, 1;
	shf.r.wrap.b32 	%r1076, %r687, %r688, 1;
	mov.b64 	%rd1570, {%r1076, %r1075};
	shf.r.wrap.b32 	%r1077, %r688, %r687, 8;
	shf.r.wrap.b32 	%r1078, %r687, %r688, 8;
	mov.b64 	%rd1571, {%r1078, %r1077};
	shr.u64 	%rd1572, %rd1008, 7;
	xor.b64  	%rd1573, %rd1570, %rd1572;
	xor.b64  	%rd1574, %rd1573, %rd1571;
	add.s64 	%rd1575, %rd995, %rd1102;
	add.s64 	%rd1576, %rd1575, %rd1569;
	add.s64 	%rd1577, %rd1576, %rd1574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1079,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd1180;
	}
	shf.r.wrap.b32 	%r1081, %r1080, %r1079, 19;
	shf.r.wrap.b32 	%r1082, %r1079, %r1080, 19;
	mov.b64 	%rd1578, {%r1082, %r1081};
	shf.l.wrap.b32 	%r1083, %r1079, %r1080, 3;
	shf.l.wrap.b32 	%r1084, %r1080, %r1079, 3;
	mov.b64 	%rd1579, {%r1084, %r1083};
	shr.u64 	%rd1580, %rd1180, 6;
	xor.b64  	%rd1581, %rd1578, %rd1580;
	xor.b64  	%rd1582, %rd1581, %rd1579;
	shf.r.wrap.b32 	%r1085, %r698, %r697, 1;
	shf.r.wrap.b32 	%r1086, %r697, %r698, 1;
	mov.b64 	%rd1583, {%r1086, %r1085};
	shf.r.wrap.b32 	%r1087, %r698, %r697, 8;
	shf.r.wrap.b32 	%r1088, %r697, %r698, 8;
	mov.b64 	%rd1584, {%r1088, %r1087};
	shr.u64 	%rd1585, %rd1016, 7;
	xor.b64  	%rd1586, %rd1583, %rd1585;
	xor.b64  	%rd1587, %rd1586, %rd1584;
	add.s64 	%rd1588, %rd1008, %rd1115;
	add.s64 	%rd1589, %rd1588, %rd1582;
	add.s64 	%rd1590, %rd1589, %rd1587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1089,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1090}, %rd1577;
	}
	shf.r.wrap.b32 	%r1091, %r1090, %r1089, 19;
	shf.r.wrap.b32 	%r1092, %r1089, %r1090, 19;
	mov.b64 	%rd1591, {%r1092, %r1091};
	shf.l.wrap.b32 	%r1093, %r1089, %r1090, 3;
	shf.l.wrap.b32 	%r1094, %r1090, %r1089, 3;
	mov.b64 	%rd1592, {%r1094, %r1093};
	shr.u64 	%rd1593, %rd1577, 6;
	xor.b64  	%rd1594, %rd1591, %rd1593;
	xor.b64  	%rd1595, %rd1594, %rd1592;
	shf.r.wrap.b32 	%r1095, %r704, %r703, 1;
	shf.r.wrap.b32 	%r1096, %r703, %r704, 1;
	mov.b64 	%rd1596, {%r1096, %r1095};
	shf.r.wrap.b32 	%r1097, %r704, %r703, 8;
	shf.r.wrap.b32 	%r1098, %r703, %r704, 8;
	mov.b64 	%rd1597, {%r1098, %r1097};
	shr.u64 	%rd1598, %rd1029, 7;
	xor.b64  	%rd1599, %rd1596, %rd1598;
	xor.b64  	%rd1600, %rd1599, %rd1597;
	add.s64 	%rd1601, %rd1016, %rd1128;
	add.s64 	%rd1602, %rd1601, %rd1595;
	add.s64 	%rd1603, %rd1602, %rd1600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1099,%dummy}, %rd1590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1100}, %rd1590;
	}
	shf.r.wrap.b32 	%r1101, %r1100, %r1099, 19;
	shf.r.wrap.b32 	%r1102, %r1099, %r1100, 19;
	mov.b64 	%rd1604, {%r1102, %r1101};
	shf.l.wrap.b32 	%r1103, %r1099, %r1100, 3;
	shf.l.wrap.b32 	%r1104, %r1100, %r1099, 3;
	mov.b64 	%rd1605, {%r1104, %r1103};
	shr.u64 	%rd1606, %rd1590, 6;
	xor.b64  	%rd1607, %rd1604, %rd1606;
	xor.b64  	%rd1608, %rd1607, %rd1605;
	shf.r.wrap.b32 	%r1105, %r714, %r713, 1;
	shf.r.wrap.b32 	%r1106, %r713, %r714, 1;
	mov.b64 	%rd1609, {%r1106, %r1105};
	shf.r.wrap.b32 	%r1107, %r714, %r713, 8;
	shf.r.wrap.b32 	%r1108, %r713, %r714, 8;
	mov.b64 	%rd1610, {%r1108, %r1107};
	shr.u64 	%rd1611, %rd1037, 7;
	xor.b64  	%rd1612, %rd1609, %rd1611;
	xor.b64  	%rd1613, %rd1612, %rd1610;
	add.s64 	%rd1614, %rd1029, %rd1141;
	add.s64 	%rd1615, %rd1614, %rd1608;
	add.s64 	%rd1616, %rd1615, %rd1613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd1603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd1603;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 19;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 19;
	mov.b64 	%rd1617, {%r1112, %r1111};
	shf.l.wrap.b32 	%r1113, %r1109, %r1110, 3;
	shf.l.wrap.b32 	%r1114, %r1110, %r1109, 3;
	mov.b64 	%rd1618, {%r1114, %r1113};
	shr.u64 	%rd1619, %rd1603, 6;
	xor.b64  	%rd1620, %rd1617, %rd1619;
	xor.b64  	%rd1621, %rd1620, %rd1618;
	shf.r.wrap.b32 	%r1115, %r724, %r723, 1;
	shf.r.wrap.b32 	%r1116, %r723, %r724, 1;
	mov.b64 	%rd1622, {%r1116, %r1115};
	shf.r.wrap.b32 	%r1117, %r724, %r723, 8;
	shf.r.wrap.b32 	%r1118, %r723, %r724, 8;
	mov.b64 	%rd1623, {%r1118, %r1117};
	shr.u64 	%rd1624, %rd1050, 7;
	xor.b64  	%rd1625, %rd1622, %rd1624;
	xor.b64  	%rd1626, %rd1625, %rd1623;
	add.s64 	%rd1627, %rd1037, %rd1154;
	add.s64 	%rd1628, %rd1627, %rd1621;
	add.s64 	%rd1629, %rd1628, %rd1626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1119,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1120}, %rd1616;
	}
	shf.r.wrap.b32 	%r1121, %r1120, %r1119, 19;
	shf.r.wrap.b32 	%r1122, %r1119, %r1120, 19;
	mov.b64 	%rd1630, {%r1122, %r1121};
	shf.l.wrap.b32 	%r1123, %r1119, %r1120, 3;
	shf.l.wrap.b32 	%r1124, %r1120, %r1119, 3;
	mov.b64 	%rd1631, {%r1124, %r1123};
	shr.u64 	%rd1632, %rd1616, 6;
	xor.b64  	%rd1633, %rd1630, %rd1632;
	xor.b64  	%rd1634, %rd1633, %rd1631;
	shf.r.wrap.b32 	%r1125, %r734, %r733, 1;
	shf.r.wrap.b32 	%r1126, %r733, %r734, 1;
	mov.b64 	%rd1635, {%r1126, %r1125};
	shf.r.wrap.b32 	%r1127, %r734, %r733, 8;
	shf.r.wrap.b32 	%r1128, %r733, %r734, 8;
	mov.b64 	%rd1636, {%r1128, %r1127};
	shr.u64 	%rd1637, %rd1063, 7;
	xor.b64  	%rd1638, %rd1635, %rd1637;
	xor.b64  	%rd1639, %rd1638, %rd1636;
	add.s64 	%rd1640, %rd1050, %rd1167;
	add.s64 	%rd1641, %rd1640, %rd1634;
	add.s64 	%rd1642, %rd1641, %rd1639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1129,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1130}, %rd1629;
	}
	shf.r.wrap.b32 	%r1131, %r1130, %r1129, 19;
	shf.r.wrap.b32 	%r1132, %r1129, %r1130, 19;
	mov.b64 	%rd1643, {%r1132, %r1131};
	shf.l.wrap.b32 	%r1133, %r1129, %r1130, 3;
	shf.l.wrap.b32 	%r1134, %r1130, %r1129, 3;
	mov.b64 	%rd1644, {%r1134, %r1133};
	shr.u64 	%rd1645, %rd1629, 6;
	xor.b64  	%rd1646, %rd1643, %rd1645;
	xor.b64  	%rd1647, %rd1646, %rd1644;
	shf.r.wrap.b32 	%r1135, %r744, %r743, 1;
	shf.r.wrap.b32 	%r1136, %r743, %r744, 1;
	mov.b64 	%rd1648, {%r1136, %r1135};
	shf.r.wrap.b32 	%r1137, %r744, %r743, 8;
	shf.r.wrap.b32 	%r1138, %r743, %r744, 8;
	mov.b64 	%rd1649, {%r1138, %r1137};
	shr.u64 	%rd1650, %rd1076, 7;
	xor.b64  	%rd1651, %rd1648, %rd1650;
	xor.b64  	%rd1652, %rd1651, %rd1649;
	add.s64 	%rd1653, %rd1063, %rd1180;
	add.s64 	%rd1654, %rd1653, %rd1647;
	add.s64 	%rd1655, %rd1654, %rd1652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1139,%dummy}, %rd1642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1140}, %rd1642;
	}
	shf.r.wrap.b32 	%r1141, %r1140, %r1139, 19;
	shf.r.wrap.b32 	%r1142, %r1139, %r1140, 19;
	mov.b64 	%rd1656, {%r1142, %r1141};
	shf.l.wrap.b32 	%r1143, %r1139, %r1140, 3;
	shf.l.wrap.b32 	%r1144, %r1140, %r1139, 3;
	mov.b64 	%rd1657, {%r1144, %r1143};
	shr.u64 	%rd1658, %rd1642, 6;
	xor.b64  	%rd1659, %rd1656, %rd1658;
	xor.b64  	%rd1660, %rd1659, %rd1657;
	shf.r.wrap.b32 	%r1145, %r754, %r753, 1;
	shf.r.wrap.b32 	%r1146, %r753, %r754, 1;
	mov.b64 	%rd1661, {%r1146, %r1145};
	shf.r.wrap.b32 	%r1147, %r754, %r753, 8;
	shf.r.wrap.b32 	%r1148, %r753, %r754, 8;
	mov.b64 	%rd1662, {%r1148, %r1147};
	shr.u64 	%rd1663, %rd1089, 7;
	xor.b64  	%rd1664, %rd1661, %rd1663;
	xor.b64  	%rd1665, %rd1664, %rd1662;
	add.s64 	%rd1666, %rd1577, %rd1076;
	add.s64 	%rd1667, %rd1666, %rd1660;
	add.s64 	%rd1668, %rd1667, %rd1665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1149,%dummy}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1150}, %rd1655;
	}
	shf.r.wrap.b32 	%r1151, %r1150, %r1149, 19;
	shf.r.wrap.b32 	%r1152, %r1149, %r1150, 19;
	mov.b64 	%rd1669, {%r1152, %r1151};
	shf.l.wrap.b32 	%r1153, %r1149, %r1150, 3;
	shf.l.wrap.b32 	%r1154, %r1150, %r1149, 3;
	mov.b64 	%rd1670, {%r1154, %r1153};
	shr.u64 	%rd1671, %rd1655, 6;
	xor.b64  	%rd1672, %rd1669, %rd1671;
	xor.b64  	%rd1673, %rd1672, %rd1670;
	shf.r.wrap.b32 	%r1155, %r764, %r763, 1;
	shf.r.wrap.b32 	%r1156, %r763, %r764, 1;
	mov.b64 	%rd1674, {%r1156, %r1155};
	shf.r.wrap.b32 	%r1157, %r764, %r763, 8;
	shf.r.wrap.b32 	%r1158, %r763, %r764, 8;
	mov.b64 	%rd1675, {%r1158, %r1157};
	shr.u64 	%rd1676, %rd1102, 7;
	xor.b64  	%rd1677, %rd1674, %rd1676;
	xor.b64  	%rd1678, %rd1677, %rd1675;
	add.s64 	%rd1679, %rd1590, %rd1089;
	add.s64 	%rd1680, %rd1679, %rd1673;
	add.s64 	%rd1681, %rd1680, %rd1678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1159,%dummy}, %rd1668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1160}, %rd1668;
	}
	shf.r.wrap.b32 	%r1161, %r1160, %r1159, 19;
	shf.r.wrap.b32 	%r1162, %r1159, %r1160, 19;
	mov.b64 	%rd1682, {%r1162, %r1161};
	shf.l.wrap.b32 	%r1163, %r1159, %r1160, 3;
	shf.l.wrap.b32 	%r1164, %r1160, %r1159, 3;
	mov.b64 	%rd1683, {%r1164, %r1163};
	shr.u64 	%rd1684, %rd1668, 6;
	xor.b64  	%rd1685, %rd1682, %rd1684;
	xor.b64  	%rd1686, %rd1685, %rd1683;
	shf.r.wrap.b32 	%r1165, %r774, %r773, 1;
	shf.r.wrap.b32 	%r1166, %r773, %r774, 1;
	mov.b64 	%rd1687, {%r1166, %r1165};
	shf.r.wrap.b32 	%r1167, %r774, %r773, 8;
	shf.r.wrap.b32 	%r1168, %r773, %r774, 8;
	mov.b64 	%rd1688, {%r1168, %r1167};
	shr.u64 	%rd1689, %rd1115, 7;
	xor.b64  	%rd1690, %rd1687, %rd1689;
	xor.b64  	%rd1691, %rd1690, %rd1688;
	add.s64 	%rd1692, %rd1603, %rd1102;
	add.s64 	%rd1693, %rd1692, %rd1686;
	add.s64 	%rd1694, %rd1693, %rd1691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1169,%dummy}, %rd1681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1170}, %rd1681;
	}
	shf.r.wrap.b32 	%r1171, %r1170, %r1169, 19;
	shf.r.wrap.b32 	%r1172, %r1169, %r1170, 19;
	mov.b64 	%rd1695, {%r1172, %r1171};
	shf.l.wrap.b32 	%r1173, %r1169, %r1170, 3;
	shf.l.wrap.b32 	%r1174, %r1170, %r1169, 3;
	mov.b64 	%rd1696, {%r1174, %r1173};
	shr.u64 	%rd1697, %rd1681, 6;
	xor.b64  	%rd1698, %rd1695, %rd1697;
	xor.b64  	%rd1699, %rd1698, %rd1696;
	shf.r.wrap.b32 	%r1175, %r784, %r783, 1;
	shf.r.wrap.b32 	%r1176, %r783, %r784, 1;
	mov.b64 	%rd1700, {%r1176, %r1175};
	shf.r.wrap.b32 	%r1177, %r784, %r783, 8;
	shf.r.wrap.b32 	%r1178, %r783, %r784, 8;
	mov.b64 	%rd1701, {%r1178, %r1177};
	shr.u64 	%rd1702, %rd1128, 7;
	xor.b64  	%rd1703, %rd1700, %rd1702;
	xor.b64  	%rd1704, %rd1703, %rd1701;
	add.s64 	%rd1705, %rd1616, %rd1115;
	add.s64 	%rd1706, %rd1705, %rd1699;
	add.s64 	%rd1707, %rd1706, %rd1704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1179,%dummy}, %rd1694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1180}, %rd1694;
	}
	shf.r.wrap.b32 	%r1181, %r1180, %r1179, 19;
	shf.r.wrap.b32 	%r1182, %r1179, %r1180, 19;
	mov.b64 	%rd1708, {%r1182, %r1181};
	shf.l.wrap.b32 	%r1183, %r1179, %r1180, 3;
	shf.l.wrap.b32 	%r1184, %r1180, %r1179, 3;
	mov.b64 	%rd1709, {%r1184, %r1183};
	shr.u64 	%rd1710, %rd1694, 6;
	xor.b64  	%rd1711, %rd1708, %rd1710;
	xor.b64  	%rd1712, %rd1711, %rd1709;
	shf.r.wrap.b32 	%r1185, %r794, %r793, 1;
	shf.r.wrap.b32 	%r1186, %r793, %r794, 1;
	mov.b64 	%rd1713, {%r1186, %r1185};
	shf.r.wrap.b32 	%r1187, %r794, %r793, 8;
	shf.r.wrap.b32 	%r1188, %r793, %r794, 8;
	mov.b64 	%rd1714, {%r1188, %r1187};
	shr.u64 	%rd1715, %rd1141, 7;
	xor.b64  	%rd1716, %rd1713, %rd1715;
	xor.b64  	%rd1717, %rd1716, %rd1714;
	add.s64 	%rd1718, %rd1629, %rd1128;
	add.s64 	%rd1719, %rd1718, %rd1712;
	add.s64 	%rd1720, %rd1719, %rd1717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd1707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd1707;
	}
	shf.r.wrap.b32 	%r1191, %r1190, %r1189, 19;
	shf.r.wrap.b32 	%r1192, %r1189, %r1190, 19;
	mov.b64 	%rd1721, {%r1192, %r1191};
	shf.l.wrap.b32 	%r1193, %r1189, %r1190, 3;
	shf.l.wrap.b32 	%r1194, %r1190, %r1189, 3;
	mov.b64 	%rd1722, {%r1194, %r1193};
	shr.u64 	%rd1723, %rd1707, 6;
	xor.b64  	%rd1724, %rd1721, %rd1723;
	xor.b64  	%rd1725, %rd1724, %rd1722;
	shf.r.wrap.b32 	%r1195, %r804, %r803, 1;
	shf.r.wrap.b32 	%r1196, %r803, %r804, 1;
	mov.b64 	%rd1726, {%r1196, %r1195};
	shf.r.wrap.b32 	%r1197, %r804, %r803, 8;
	shf.r.wrap.b32 	%r1198, %r803, %r804, 8;
	mov.b64 	%rd1727, {%r1198, %r1197};
	shr.u64 	%rd1728, %rd1154, 7;
	xor.b64  	%rd1729, %rd1726, %rd1728;
	xor.b64  	%rd1730, %rd1729, %rd1727;
	add.s64 	%rd1731, %rd1642, %rd1141;
	add.s64 	%rd1732, %rd1731, %rd1725;
	add.s64 	%rd1733, %rd1732, %rd1730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1199,%dummy}, %rd1720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd1720;
	}
	shf.r.wrap.b32 	%r1201, %r1200, %r1199, 19;
	shf.r.wrap.b32 	%r1202, %r1199, %r1200, 19;
	mov.b64 	%rd1734, {%r1202, %r1201};
	shf.l.wrap.b32 	%r1203, %r1199, %r1200, 3;
	shf.l.wrap.b32 	%r1204, %r1200, %r1199, 3;
	mov.b64 	%rd1735, {%r1204, %r1203};
	shr.u64 	%rd1736, %rd1720, 6;
	xor.b64  	%rd1737, %rd1734, %rd1736;
	xor.b64  	%rd1738, %rd1737, %rd1735;
	shf.r.wrap.b32 	%r1205, %r1070, %r1069, 1;
	shf.r.wrap.b32 	%r1206, %r1069, %r1070, 1;
	mov.b64 	%rd1739, {%r1206, %r1205};
	shf.r.wrap.b32 	%r1207, %r1070, %r1069, 8;
	shf.r.wrap.b32 	%r1208, %r1069, %r1070, 8;
	mov.b64 	%rd1740, {%r1208, %r1207};
	shr.u64 	%rd1741, %rd1167, 7;
	xor.b64  	%rd1742, %rd1739, %rd1741;
	xor.b64  	%rd1743, %rd1742, %rd1740;
	add.s64 	%rd1744, %rd1655, %rd1154;
	add.s64 	%rd1745, %rd1744, %rd1738;
	add.s64 	%rd1746, %rd1745, %rd1743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1209,%dummy}, %rd1733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1210}, %rd1733;
	}
	shf.r.wrap.b32 	%r1211, %r1210, %r1209, 19;
	shf.r.wrap.b32 	%r1212, %r1209, %r1210, 19;
	mov.b64 	%rd1747, {%r1212, %r1211};
	shf.l.wrap.b32 	%r1213, %r1209, %r1210, 3;
	shf.l.wrap.b32 	%r1214, %r1210, %r1209, 3;
	mov.b64 	%rd1748, {%r1214, %r1213};
	shr.u64 	%rd1749, %rd1733, 6;
	xor.b64  	%rd1750, %rd1747, %rd1749;
	xor.b64  	%rd1751, %rd1750, %rd1748;
	shf.r.wrap.b32 	%r1215, %r1080, %r1079, 1;
	shf.r.wrap.b32 	%r1216, %r1079, %r1080, 1;
	mov.b64 	%rd1752, {%r1216, %r1215};
	shf.r.wrap.b32 	%r1217, %r1080, %r1079, 8;
	shf.r.wrap.b32 	%r1218, %r1079, %r1080, 8;
	mov.b64 	%rd1753, {%r1218, %r1217};
	shr.u64 	%rd1754, %rd1180, 7;
	xor.b64  	%rd1755, %rd1752, %rd1754;
	xor.b64  	%rd1756, %rd1755, %rd1753;
	add.s64 	%rd1757, %rd1668, %rd1167;
	add.s64 	%rd1758, %rd1757, %rd1751;
	add.s64 	%rd1759, %rd1758, %rd1756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1219,%dummy}, %rd1746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1220}, %rd1746;
	}
	shf.r.wrap.b32 	%r1221, %r1220, %r1219, 19;
	shf.r.wrap.b32 	%r1222, %r1219, %r1220, 19;
	mov.b64 	%rd1760, {%r1222, %r1221};
	shf.l.wrap.b32 	%r1223, %r1219, %r1220, 3;
	shf.l.wrap.b32 	%r1224, %r1220, %r1219, 3;
	mov.b64 	%rd1761, {%r1224, %r1223};
	shr.u64 	%rd1762, %rd1746, 6;
	xor.b64  	%rd1763, %rd1760, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1761;
	shf.r.wrap.b32 	%r1225, %r1090, %r1089, 1;
	shf.r.wrap.b32 	%r1226, %r1089, %r1090, 1;
	mov.b64 	%rd1765, {%r1226, %r1225};
	shf.r.wrap.b32 	%r1227, %r1090, %r1089, 8;
	shf.r.wrap.b32 	%r1228, %r1089, %r1090, 8;
	mov.b64 	%rd1766, {%r1228, %r1227};
	shr.u64 	%rd1767, %rd1577, 7;
	xor.b64  	%rd1768, %rd1765, %rd1767;
	xor.b64  	%rd1769, %rd1768, %rd1766;
	add.s64 	%rd1770, %rd1681, %rd1180;
	add.s64 	%rd1771, %rd1770, %rd1764;
	add.s64 	%rd1772, %rd1771, %rd1769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd1553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1230}, %rd1553;
	}
	shf.r.wrap.b32 	%r1231, %r1230, %r1229, 14;
	shf.r.wrap.b32 	%r1232, %r1229, %r1230, 14;
	mov.b64 	%rd1773, {%r1232, %r1231};
	shf.r.wrap.b32 	%r1233, %r1230, %r1229, 18;
	shf.r.wrap.b32 	%r1234, %r1229, %r1230, 18;
	mov.b64 	%rd1774, {%r1234, %r1233};
	xor.b64  	%rd1775, %rd1774, %rd1773;
	shf.l.wrap.b32 	%r1235, %r1229, %r1230, 23;
	shf.l.wrap.b32 	%r1236, %r1230, %r1229, 23;
	mov.b64 	%rd1776, {%r1236, %r1235};
	xor.b64  	%rd1777, %rd1775, %rd1776;
	xor.b64  	%rd1778, %rd1505, %rd1529;
	and.b64  	%rd1779, %rd1778, %rd1553;
	xor.b64  	%rd1780, %rd1779, %rd1505;
	add.s64 	%rd1781, %rd1780, %rd1481;
	add.s64 	%rd1782, %rd1781, %rd1577;
	add.s64 	%rd1783, %rd1782, %rd2685;
	add.s64 	%rd1784, %rd1783, %rd1777;
	add.s64 	%rd1785, %rd1784, %rd1492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1237,%dummy}, %rd1564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1238}, %rd1564;
	}
	shf.r.wrap.b32 	%r1239, %r1238, %r1237, 28;
	shf.r.wrap.b32 	%r1240, %r1237, %r1238, 28;
	mov.b64 	%rd1786, {%r1240, %r1239};
	shf.l.wrap.b32 	%r1241, %r1237, %r1238, 30;
	shf.l.wrap.b32 	%r1242, %r1238, %r1237, 30;
	mov.b64 	%rd1787, {%r1242, %r1241};
	xor.b64  	%rd1788, %rd1787, %rd1786;
	shf.l.wrap.b32 	%r1243, %r1237, %r1238, 25;
	shf.l.wrap.b32 	%r1244, %r1238, %r1237, 25;
	mov.b64 	%rd1789, {%r1244, %r1243};
	xor.b64  	%rd1790, %rd1788, %rd1789;
	xor.b64  	%rd1791, %rd1564, %rd1516;
	xor.b64  	%rd1792, %rd1564, %rd1540;
	and.b64  	%rd1793, %rd1792, %rd1791;
	xor.b64  	%rd1794, %rd1793, %rd1564;
	add.s64 	%rd1795, %rd1784, %rd1794;
	add.s64 	%rd1796, %rd1795, %rd1790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd1785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd1785;
	}
	shf.r.wrap.b32 	%r1247, %r1246, %r1245, 14;
	shf.r.wrap.b32 	%r1248, %r1245, %r1246, 14;
	mov.b64 	%rd1797, {%r1248, %r1247};
	shf.r.wrap.b32 	%r1249, %r1246, %r1245, 18;
	shf.r.wrap.b32 	%r1250, %r1245, %r1246, 18;
	mov.b64 	%rd1798, {%r1250, %r1249};
	xor.b64  	%rd1799, %rd1798, %rd1797;
	shf.l.wrap.b32 	%r1251, %r1245, %r1246, 23;
	shf.l.wrap.b32 	%r1252, %r1246, %r1245, 23;
	mov.b64 	%rd1800, {%r1252, %r1251};
	xor.b64  	%rd1801, %rd1799, %rd1800;
	xor.b64  	%rd1802, %rd1529, %rd1553;
	and.b64  	%rd1803, %rd1785, %rd1802;
	xor.b64  	%rd1804, %rd1803, %rd1529;
	add.s64 	%rd1805, %rd1590, %rd1505;
	add.s64 	%rd1806, %rd1805, %rd2686;
	add.s64 	%rd1807, %rd1806, %rd1804;
	add.s64 	%rd1808, %rd1807, %rd1801;
	add.s64 	%rd1809, %rd1808, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd1796;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 28;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 28;
	mov.b64 	%rd1810, {%r1256, %r1255};
	shf.l.wrap.b32 	%r1257, %r1253, %r1254, 30;
	shf.l.wrap.b32 	%r1258, %r1254, %r1253, 30;
	mov.b64 	%rd1811, {%r1258, %r1257};
	xor.b64  	%rd1812, %rd1811, %rd1810;
	shf.l.wrap.b32 	%r1259, %r1253, %r1254, 25;
	shf.l.wrap.b32 	%r1260, %r1254, %r1253, 25;
	mov.b64 	%rd1813, {%r1260, %r1259};
	xor.b64  	%rd1814, %rd1812, %rd1813;
	xor.b64  	%rd1815, %rd1796, %rd1540;
	xor.b64  	%rd1816, %rd1796, %rd1564;
	and.b64  	%rd1817, %rd1816, %rd1815;
	xor.b64  	%rd1818, %rd1817, %rd1796;
	add.s64 	%rd1819, %rd1808, %rd1818;
	add.s64 	%rd1820, %rd1819, %rd1814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1809;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 14;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 14;
	mov.b64 	%rd1821, {%r1264, %r1263};
	shf.r.wrap.b32 	%r1265, %r1262, %r1261, 18;
	shf.r.wrap.b32 	%r1266, %r1261, %r1262, 18;
	mov.b64 	%rd1822, {%r1266, %r1265};
	xor.b64  	%rd1823, %rd1822, %rd1821;
	shf.l.wrap.b32 	%r1267, %r1261, %r1262, 23;
	shf.l.wrap.b32 	%r1268, %r1262, %r1261, 23;
	mov.b64 	%rd1824, {%r1268, %r1267};
	xor.b64  	%rd1825, %rd1823, %rd1824;
	xor.b64  	%rd1826, %rd1785, %rd1553;
	and.b64  	%rd1827, %rd1809, %rd1826;
	xor.b64  	%rd1828, %rd1827, %rd1553;
	add.s64 	%rd1829, %rd1603, %rd1529;
	add.s64 	%rd1830, %rd1829, %rd2687;
	add.s64 	%rd1831, %rd1830, %rd1828;
	add.s64 	%rd1832, %rd1831, %rd1825;
	add.s64 	%rd1833, %rd1832, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd1820;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 28;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 28;
	mov.b64 	%rd1834, {%r1272, %r1271};
	shf.l.wrap.b32 	%r1273, %r1269, %r1270, 30;
	shf.l.wrap.b32 	%r1274, %r1270, %r1269, 30;
	mov.b64 	%rd1835, {%r1274, %r1273};
	xor.b64  	%rd1836, %rd1835, %rd1834;
	shf.l.wrap.b32 	%r1275, %r1269, %r1270, 25;
	shf.l.wrap.b32 	%r1276, %r1270, %r1269, 25;
	mov.b64 	%rd1837, {%r1276, %r1275};
	xor.b64  	%rd1838, %rd1836, %rd1837;
	xor.b64  	%rd1839, %rd1820, %rd1564;
	xor.b64  	%rd1840, %rd1820, %rd1796;
	and.b64  	%rd1841, %rd1840, %rd1839;
	xor.b64  	%rd1842, %rd1841, %rd1820;
	add.s64 	%rd1843, %rd1832, %rd1842;
	add.s64 	%rd1844, %rd1843, %rd1838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd1833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1278}, %rd1833;
	}
	shf.r.wrap.b32 	%r1279, %r1278, %r1277, 14;
	shf.r.wrap.b32 	%r1280, %r1277, %r1278, 14;
	mov.b64 	%rd1845, {%r1280, %r1279};
	shf.r.wrap.b32 	%r1281, %r1278, %r1277, 18;
	shf.r.wrap.b32 	%r1282, %r1277, %r1278, 18;
	mov.b64 	%rd1846, {%r1282, %r1281};
	xor.b64  	%rd1847, %rd1846, %rd1845;
	shf.l.wrap.b32 	%r1283, %r1277, %r1278, 23;
	shf.l.wrap.b32 	%r1284, %r1278, %r1277, 23;
	mov.b64 	%rd1848, {%r1284, %r1283};
	xor.b64  	%rd1849, %rd1847, %rd1848;
	xor.b64  	%rd1850, %rd1809, %rd1785;
	and.b64  	%rd1851, %rd1833, %rd1850;
	xor.b64  	%rd1852, %rd1851, %rd1785;
	add.s64 	%rd1853, %rd1616, %rd1553;
	add.s64 	%rd1854, %rd1853, %rd2688;
	add.s64 	%rd1855, %rd1854, %rd1852;
	add.s64 	%rd1856, %rd1855, %rd1849;
	add.s64 	%rd1857, %rd1856, %rd1564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1844;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 28;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 28;
	mov.b64 	%rd1858, {%r1288, %r1287};
	shf.l.wrap.b32 	%r1289, %r1285, %r1286, 30;
	shf.l.wrap.b32 	%r1290, %r1286, %r1285, 30;
	mov.b64 	%rd1859, {%r1290, %r1289};
	xor.b64  	%rd1860, %rd1859, %rd1858;
	shf.l.wrap.b32 	%r1291, %r1285, %r1286, 25;
	shf.l.wrap.b32 	%r1292, %r1286, %r1285, 25;
	mov.b64 	%rd1861, {%r1292, %r1291};
	xor.b64  	%rd1862, %rd1860, %rd1861;
	xor.b64  	%rd1863, %rd1844, %rd1796;
	xor.b64  	%rd1864, %rd1844, %rd1820;
	and.b64  	%rd1865, %rd1864, %rd1863;
	xor.b64  	%rd1866, %rd1865, %rd1844;
	add.s64 	%rd1867, %rd1856, %rd1866;
	add.s64 	%rd1868, %rd1867, %rd1862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd1857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1857;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 14;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 14;
	mov.b64 	%rd1869, {%r1296, %r1295};
	shf.r.wrap.b32 	%r1297, %r1294, %r1293, 18;
	shf.r.wrap.b32 	%r1298, %r1293, %r1294, 18;
	mov.b64 	%rd1870, {%r1298, %r1297};
	xor.b64  	%rd1871, %rd1870, %rd1869;
	shf.l.wrap.b32 	%r1299, %r1293, %r1294, 23;
	shf.l.wrap.b32 	%r1300, %r1294, %r1293, 23;
	mov.b64 	%rd1872, {%r1300, %r1299};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	xor.b64  	%rd1874, %rd1833, %rd1809;
	and.b64  	%rd1875, %rd1857, %rd1874;
	xor.b64  	%rd1876, %rd1875, %rd1809;
	add.s64 	%rd1877, %rd1785, %rd1629;
	add.s64 	%rd1878, %rd1877, %rd2689;
	add.s64 	%rd1879, %rd1878, %rd1876;
	add.s64 	%rd1880, %rd1879, %rd1873;
	add.s64 	%rd1881, %rd1880, %rd1796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd1868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd1868;
	}
	shf.r.wrap.b32 	%r1303, %r1302, %r1301, 28;
	shf.r.wrap.b32 	%r1304, %r1301, %r1302, 28;
	mov.b64 	%rd1882, {%r1304, %r1303};
	shf.l.wrap.b32 	%r1305, %r1301, %r1302, 30;
	shf.l.wrap.b32 	%r1306, %r1302, %r1301, 30;
	mov.b64 	%rd1883, {%r1306, %r1305};
	xor.b64  	%rd1884, %rd1883, %rd1882;
	shf.l.wrap.b32 	%r1307, %r1301, %r1302, 25;
	shf.l.wrap.b32 	%r1308, %r1302, %r1301, 25;
	mov.b64 	%rd1885, {%r1308, %r1307};
	xor.b64  	%rd1886, %rd1884, %rd1885;
	xor.b64  	%rd1887, %rd1868, %rd1820;
	xor.b64  	%rd1888, %rd1868, %rd1844;
	and.b64  	%rd1889, %rd1888, %rd1887;
	xor.b64  	%rd1890, %rd1889, %rd1868;
	add.s64 	%rd1891, %rd1880, %rd1890;
	add.s64 	%rd1892, %rd1891, %rd1886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd1881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1310}, %rd1881;
	}
	shf.r.wrap.b32 	%r1311, %r1310, %r1309, 14;
	shf.r.wrap.b32 	%r1312, %r1309, %r1310, 14;
	mov.b64 	%rd1893, {%r1312, %r1311};
	shf.r.wrap.b32 	%r1313, %r1310, %r1309, 18;
	shf.r.wrap.b32 	%r1314, %r1309, %r1310, 18;
	mov.b64 	%rd1894, {%r1314, %r1313};
	xor.b64  	%rd1895, %rd1894, %rd1893;
	shf.l.wrap.b32 	%r1315, %r1309, %r1310, 23;
	shf.l.wrap.b32 	%r1316, %r1310, %r1309, 23;
	mov.b64 	%rd1896, {%r1316, %r1315};
	xor.b64  	%rd1897, %rd1895, %rd1896;
	xor.b64  	%rd1898, %rd1857, %rd1833;
	and.b64  	%rd1899, %rd1881, %rd1898;
	xor.b64  	%rd1900, %rd1899, %rd1833;
	add.s64 	%rd1901, %rd1809, %rd1642;
	add.s64 	%rd1902, %rd1901, %rd2690;
	add.s64 	%rd1903, %rd1902, %rd1900;
	add.s64 	%rd1904, %rd1903, %rd1897;
	add.s64 	%rd1905, %rd1904, %rd1820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd1892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd1892;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 28;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 28;
	mov.b64 	%rd1906, {%r1320, %r1319};
	shf.l.wrap.b32 	%r1321, %r1317, %r1318, 30;
	shf.l.wrap.b32 	%r1322, %r1318, %r1317, 30;
	mov.b64 	%rd1907, {%r1322, %r1321};
	xor.b64  	%rd1908, %rd1907, %rd1906;
	shf.l.wrap.b32 	%r1323, %r1317, %r1318, 25;
	shf.l.wrap.b32 	%r1324, %r1318, %r1317, 25;
	mov.b64 	%rd1909, {%r1324, %r1323};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	xor.b64  	%rd1911, %rd1892, %rd1844;
	xor.b64  	%rd1912, %rd1892, %rd1868;
	and.b64  	%rd1913, %rd1912, %rd1911;
	xor.b64  	%rd1914, %rd1913, %rd1892;
	add.s64 	%rd1915, %rd1904, %rd1914;
	add.s64 	%rd1916, %rd1915, %rd1910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1325,%dummy}, %rd1905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1326}, %rd1905;
	}
	shf.r.wrap.b32 	%r1327, %r1326, %r1325, 14;
	shf.r.wrap.b32 	%r1328, %r1325, %r1326, 14;
	mov.b64 	%rd1917, {%r1328, %r1327};
	shf.r.wrap.b32 	%r1329, %r1326, %r1325, 18;
	shf.r.wrap.b32 	%r1330, %r1325, %r1326, 18;
	mov.b64 	%rd1918, {%r1330, %r1329};
	xor.b64  	%rd1919, %rd1918, %rd1917;
	shf.l.wrap.b32 	%r1331, %r1325, %r1326, 23;
	shf.l.wrap.b32 	%r1332, %r1326, %r1325, 23;
	mov.b64 	%rd1920, {%r1332, %r1331};
	xor.b64  	%rd1921, %rd1919, %rd1920;
	xor.b64  	%rd1922, %rd1881, %rd1857;
	and.b64  	%rd1923, %rd1905, %rd1922;
	xor.b64  	%rd1924, %rd1923, %rd1857;
	add.s64 	%rd1925, %rd1833, %rd1655;
	add.s64 	%rd1926, %rd1925, %rd2691;
	add.s64 	%rd1927, %rd1926, %rd1924;
	add.s64 	%rd1928, %rd1927, %rd1921;
	add.s64 	%rd1929, %rd1928, %rd1844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd1916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd1916;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 28;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 28;
	mov.b64 	%rd1930, {%r1336, %r1335};
	shf.l.wrap.b32 	%r1337, %r1333, %r1334, 30;
	shf.l.wrap.b32 	%r1338, %r1334, %r1333, 30;
	mov.b64 	%rd1931, {%r1338, %r1337};
	xor.b64  	%rd1932, %rd1931, %rd1930;
	shf.l.wrap.b32 	%r1339, %r1333, %r1334, 25;
	shf.l.wrap.b32 	%r1340, %r1334, %r1333, 25;
	mov.b64 	%rd1933, {%r1340, %r1339};
	xor.b64  	%rd1934, %rd1932, %rd1933;
	xor.b64  	%rd1935, %rd1916, %rd1868;
	xor.b64  	%rd1936, %rd1916, %rd1892;
	and.b64  	%rd1937, %rd1936, %rd1935;
	xor.b64  	%rd1938, %rd1937, %rd1916;
	add.s64 	%rd1939, %rd1928, %rd1938;
	add.s64 	%rd1940, %rd1939, %rd1934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1341,%dummy}, %rd1929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1342}, %rd1929;
	}
	shf.r.wrap.b32 	%r1343, %r1342, %r1341, 14;
	shf.r.wrap.b32 	%r1344, %r1341, %r1342, 14;
	mov.b64 	%rd1941, {%r1344, %r1343};
	shf.r.wrap.b32 	%r1345, %r1342, %r1341, 18;
	shf.r.wrap.b32 	%r1346, %r1341, %r1342, 18;
	mov.b64 	%rd1942, {%r1346, %r1345};
	xor.b64  	%rd1943, %rd1942, %rd1941;
	shf.l.wrap.b32 	%r1347, %r1341, %r1342, 23;
	shf.l.wrap.b32 	%r1348, %r1342, %r1341, 23;
	mov.b64 	%rd1944, {%r1348, %r1347};
	xor.b64  	%rd1945, %rd1943, %rd1944;
	xor.b64  	%rd1946, %rd1905, %rd1881;
	and.b64  	%rd1947, %rd1929, %rd1946;
	xor.b64  	%rd1948, %rd1947, %rd1881;
	add.s64 	%rd1949, %rd1857, %rd1668;
	add.s64 	%rd1950, %rd1949, %rd2692;
	add.s64 	%rd1951, %rd1950, %rd1948;
	add.s64 	%rd1952, %rd1951, %rd1945;
	add.s64 	%rd1953, %rd1952, %rd1868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1349,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1350}, %rd1940;
	}
	shf.r.wrap.b32 	%r1351, %r1350, %r1349, 28;
	shf.r.wrap.b32 	%r1352, %r1349, %r1350, 28;
	mov.b64 	%rd1954, {%r1352, %r1351};
	shf.l.wrap.b32 	%r1353, %r1349, %r1350, 30;
	shf.l.wrap.b32 	%r1354, %r1350, %r1349, 30;
	mov.b64 	%rd1955, {%r1354, %r1353};
	xor.b64  	%rd1956, %rd1955, %rd1954;
	shf.l.wrap.b32 	%r1355, %r1349, %r1350, 25;
	shf.l.wrap.b32 	%r1356, %r1350, %r1349, 25;
	mov.b64 	%rd1957, {%r1356, %r1355};
	xor.b64  	%rd1958, %rd1956, %rd1957;
	xor.b64  	%rd1959, %rd1940, %rd1892;
	xor.b64  	%rd1960, %rd1940, %rd1916;
	and.b64  	%rd1961, %rd1960, %rd1959;
	xor.b64  	%rd1962, %rd1961, %rd1940;
	add.s64 	%rd1963, %rd1952, %rd1962;
	add.s64 	%rd1964, %rd1963, %rd1958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1357,%dummy}, %rd1953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1358}, %rd1953;
	}
	shf.r.wrap.b32 	%r1359, %r1358, %r1357, 14;
	shf.r.wrap.b32 	%r1360, %r1357, %r1358, 14;
	mov.b64 	%rd1965, {%r1360, %r1359};
	shf.r.wrap.b32 	%r1361, %r1358, %r1357, 18;
	shf.r.wrap.b32 	%r1362, %r1357, %r1358, 18;
	mov.b64 	%rd1966, {%r1362, %r1361};
	xor.b64  	%rd1967, %rd1966, %rd1965;
	shf.l.wrap.b32 	%r1363, %r1357, %r1358, 23;
	shf.l.wrap.b32 	%r1364, %r1358, %r1357, 23;
	mov.b64 	%rd1968, {%r1364, %r1363};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	xor.b64  	%rd1970, %rd1929, %rd1905;
	and.b64  	%rd1971, %rd1953, %rd1970;
	xor.b64  	%rd1972, %rd1971, %rd1905;
	add.s64 	%rd1973, %rd1881, %rd1681;
	add.s64 	%rd1974, %rd1973, %rd2693;
	add.s64 	%rd1975, %rd1974, %rd1972;
	add.s64 	%rd1976, %rd1975, %rd1969;
	add.s64 	%rd1977, %rd1976, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1365,%dummy}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1366}, %rd1964;
	}
	shf.r.wrap.b32 	%r1367, %r1366, %r1365, 28;
	shf.r.wrap.b32 	%r1368, %r1365, %r1366, 28;
	mov.b64 	%rd1978, {%r1368, %r1367};
	shf.l.wrap.b32 	%r1369, %r1365, %r1366, 30;
	shf.l.wrap.b32 	%r1370, %r1366, %r1365, 30;
	mov.b64 	%rd1979, {%r1370, %r1369};
	xor.b64  	%rd1980, %rd1979, %rd1978;
	shf.l.wrap.b32 	%r1371, %r1365, %r1366, 25;
	shf.l.wrap.b32 	%r1372, %r1366, %r1365, 25;
	mov.b64 	%rd1981, {%r1372, %r1371};
	xor.b64  	%rd1982, %rd1980, %rd1981;
	xor.b64  	%rd1983, %rd1964, %rd1916;
	xor.b64  	%rd1984, %rd1964, %rd1940;
	and.b64  	%rd1985, %rd1984, %rd1983;
	xor.b64  	%rd1986, %rd1985, %rd1964;
	add.s64 	%rd1987, %rd1976, %rd1986;
	add.s64 	%rd1988, %rd1987, %rd1982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd1977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd1977;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 14;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 14;
	mov.b64 	%rd1989, {%r1376, %r1375};
	shf.r.wrap.b32 	%r1377, %r1374, %r1373, 18;
	shf.r.wrap.b32 	%r1378, %r1373, %r1374, 18;
	mov.b64 	%rd1990, {%r1378, %r1377};
	xor.b64  	%rd1991, %rd1990, %rd1989;
	shf.l.wrap.b32 	%r1379, %r1373, %r1374, 23;
	shf.l.wrap.b32 	%r1380, %r1374, %r1373, 23;
	mov.b64 	%rd1992, {%r1380, %r1379};
	xor.b64  	%rd1993, %rd1991, %rd1992;
	xor.b64  	%rd1994, %rd1953, %rd1929;
	and.b64  	%rd1995, %rd1977, %rd1994;
	xor.b64  	%rd1996, %rd1995, %rd1929;
	add.s64 	%rd1997, %rd1905, %rd1694;
	add.s64 	%rd1998, %rd1997, %rd2694;
	add.s64 	%rd1999, %rd1998, %rd1996;
	add.s64 	%rd2000, %rd1999, %rd1993;
	add.s64 	%rd2001, %rd2000, %rd1916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd1988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd1988;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 28;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 28;
	mov.b64 	%rd2002, {%r1384, %r1383};
	shf.l.wrap.b32 	%r1385, %r1381, %r1382, 30;
	shf.l.wrap.b32 	%r1386, %r1382, %r1381, 30;
	mov.b64 	%rd2003, {%r1386, %r1385};
	xor.b64  	%rd2004, %rd2003, %rd2002;
	shf.l.wrap.b32 	%r1387, %r1381, %r1382, 25;
	shf.l.wrap.b32 	%r1388, %r1382, %r1381, 25;
	mov.b64 	%rd2005, {%r1388, %r1387};
	xor.b64  	%rd2006, %rd2004, %rd2005;
	xor.b64  	%rd2007, %rd1988, %rd1940;
	xor.b64  	%rd2008, %rd1988, %rd1964;
	and.b64  	%rd2009, %rd2008, %rd2007;
	xor.b64  	%rd2010, %rd2009, %rd1988;
	add.s64 	%rd2011, %rd2000, %rd2010;
	add.s64 	%rd2012, %rd2011, %rd2006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1389,%dummy}, %rd2001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1390}, %rd2001;
	}
	shf.r.wrap.b32 	%r1391, %r1390, %r1389, 14;
	shf.r.wrap.b32 	%r1392, %r1389, %r1390, 14;
	mov.b64 	%rd2013, {%r1392, %r1391};
	shf.r.wrap.b32 	%r1393, %r1390, %r1389, 18;
	shf.r.wrap.b32 	%r1394, %r1389, %r1390, 18;
	mov.b64 	%rd2014, {%r1394, %r1393};
	xor.b64  	%rd2015, %rd2014, %rd2013;
	shf.l.wrap.b32 	%r1395, %r1389, %r1390, 23;
	shf.l.wrap.b32 	%r1396, %r1390, %r1389, 23;
	mov.b64 	%rd2016, {%r1396, %r1395};
	xor.b64  	%rd2017, %rd2015, %rd2016;
	xor.b64  	%rd2018, %rd1977, %rd1953;
	and.b64  	%rd2019, %rd2001, %rd2018;
	xor.b64  	%rd2020, %rd2019, %rd1953;
	add.s64 	%rd2021, %rd1929, %rd1707;
	add.s64 	%rd2022, %rd2021, %rd2695;
	add.s64 	%rd2023, %rd2022, %rd2020;
	add.s64 	%rd2024, %rd2023, %rd2017;
	add.s64 	%rd2025, %rd2024, %rd1940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1397,%dummy}, %rd2012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1398}, %rd2012;
	}
	shf.r.wrap.b32 	%r1399, %r1398, %r1397, 28;
	shf.r.wrap.b32 	%r1400, %r1397, %r1398, 28;
	mov.b64 	%rd2026, {%r1400, %r1399};
	shf.l.wrap.b32 	%r1401, %r1397, %r1398, 30;
	shf.l.wrap.b32 	%r1402, %r1398, %r1397, 30;
	mov.b64 	%rd2027, {%r1402, %r1401};
	xor.b64  	%rd2028, %rd2027, %rd2026;
	shf.l.wrap.b32 	%r1403, %r1397, %r1398, 25;
	shf.l.wrap.b32 	%r1404, %r1398, %r1397, 25;
	mov.b64 	%rd2029, {%r1404, %r1403};
	xor.b64  	%rd2030, %rd2028, %rd2029;
	xor.b64  	%rd2031, %rd2012, %rd1964;
	xor.b64  	%rd2032, %rd2012, %rd1988;
	and.b64  	%rd2033, %rd2032, %rd2031;
	xor.b64  	%rd2034, %rd2033, %rd2012;
	add.s64 	%rd2035, %rd2024, %rd2034;
	add.s64 	%rd2036, %rd2035, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd2025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd2025;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 14;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 14;
	mov.b64 	%rd2037, {%r1408, %r1407};
	shf.r.wrap.b32 	%r1409, %r1406, %r1405, 18;
	shf.r.wrap.b32 	%r1410, %r1405, %r1406, 18;
	mov.b64 	%rd2038, {%r1410, %r1409};
	xor.b64  	%rd2039, %rd2038, %rd2037;
	shf.l.wrap.b32 	%r1411, %r1405, %r1406, 23;
	shf.l.wrap.b32 	%r1412, %r1406, %r1405, 23;
	mov.b64 	%rd2040, {%r1412, %r1411};
	xor.b64  	%rd2041, %rd2039, %rd2040;
	xor.b64  	%rd2042, %rd2001, %rd1977;
	and.b64  	%rd2043, %rd2025, %rd2042;
	xor.b64  	%rd2044, %rd2043, %rd1977;
	add.s64 	%rd2045, %rd1953, %rd1720;
	add.s64 	%rd2046, %rd2045, %rd2696;
	add.s64 	%rd2047, %rd2046, %rd2044;
	add.s64 	%rd2048, %rd2047, %rd2041;
	add.s64 	%rd2049, %rd2048, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1413,%dummy}, %rd2036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1414}, %rd2036;
	}
	shf.r.wrap.b32 	%r1415, %r1414, %r1413, 28;
	shf.r.wrap.b32 	%r1416, %r1413, %r1414, 28;
	mov.b64 	%rd2050, {%r1416, %r1415};
	shf.l.wrap.b32 	%r1417, %r1413, %r1414, 30;
	shf.l.wrap.b32 	%r1418, %r1414, %r1413, 30;
	mov.b64 	%rd2051, {%r1418, %r1417};
	xor.b64  	%rd2052, %rd2051, %rd2050;
	shf.l.wrap.b32 	%r1419, %r1413, %r1414, 25;
	shf.l.wrap.b32 	%r1420, %r1414, %r1413, 25;
	mov.b64 	%rd2053, {%r1420, %r1419};
	xor.b64  	%rd2054, %rd2052, %rd2053;
	xor.b64  	%rd2055, %rd2036, %rd1988;
	xor.b64  	%rd2056, %rd2036, %rd2012;
	and.b64  	%rd2057, %rd2056, %rd2055;
	xor.b64  	%rd2058, %rd2057, %rd2036;
	add.s64 	%rd2059, %rd2048, %rd2058;
	add.s64 	%rd2060, %rd2059, %rd2054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1421,%dummy}, %rd2049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1422}, %rd2049;
	}
	shf.r.wrap.b32 	%r1423, %r1422, %r1421, 14;
	shf.r.wrap.b32 	%r1424, %r1421, %r1422, 14;
	mov.b64 	%rd2061, {%r1424, %r1423};
	shf.r.wrap.b32 	%r1425, %r1422, %r1421, 18;
	shf.r.wrap.b32 	%r1426, %r1421, %r1422, 18;
	mov.b64 	%rd2062, {%r1426, %r1425};
	xor.b64  	%rd2063, %rd2062, %rd2061;
	shf.l.wrap.b32 	%r1427, %r1421, %r1422, 23;
	shf.l.wrap.b32 	%r1428, %r1422, %r1421, 23;
	mov.b64 	%rd2064, {%r1428, %r1427};
	xor.b64  	%rd2065, %rd2063, %rd2064;
	xor.b64  	%rd2066, %rd2025, %rd2001;
	and.b64  	%rd2067, %rd2049, %rd2066;
	xor.b64  	%rd2068, %rd2067, %rd2001;
	add.s64 	%rd2069, %rd1977, %rd1733;
	add.s64 	%rd2070, %rd2069, %rd2697;
	add.s64 	%rd2071, %rd2070, %rd2068;
	add.s64 	%rd2072, %rd2071, %rd2065;
	add.s64 	%rd2073, %rd2072, %rd1988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1429,%dummy}, %rd2060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1430}, %rd2060;
	}
	shf.r.wrap.b32 	%r1431, %r1430, %r1429, 28;
	shf.r.wrap.b32 	%r1432, %r1429, %r1430, 28;
	mov.b64 	%rd2074, {%r1432, %r1431};
	shf.l.wrap.b32 	%r1433, %r1429, %r1430, 30;
	shf.l.wrap.b32 	%r1434, %r1430, %r1429, 30;
	mov.b64 	%rd2075, {%r1434, %r1433};
	xor.b64  	%rd2076, %rd2075, %rd2074;
	shf.l.wrap.b32 	%r1435, %r1429, %r1430, 25;
	shf.l.wrap.b32 	%r1436, %r1430, %r1429, 25;
	mov.b64 	%rd2077, {%r1436, %r1435};
	xor.b64  	%rd2078, %rd2076, %rd2077;
	xor.b64  	%rd2079, %rd2060, %rd2012;
	xor.b64  	%rd2080, %rd2060, %rd2036;
	and.b64  	%rd2081, %rd2080, %rd2079;
	xor.b64  	%rd2082, %rd2081, %rd2060;
	add.s64 	%rd2083, %rd2072, %rd2082;
	add.s64 	%rd2084, %rd2083, %rd2078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1437,%dummy}, %rd2073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1438}, %rd2073;
	}
	shf.r.wrap.b32 	%r1439, %r1438, %r1437, 14;
	shf.r.wrap.b32 	%r1440, %r1437, %r1438, 14;
	mov.b64 	%rd2085, {%r1440, %r1439};
	shf.r.wrap.b32 	%r1441, %r1438, %r1437, 18;
	shf.r.wrap.b32 	%r1442, %r1437, %r1438, 18;
	mov.b64 	%rd2086, {%r1442, %r1441};
	xor.b64  	%rd2087, %rd2086, %rd2085;
	shf.l.wrap.b32 	%r1443, %r1437, %r1438, 23;
	shf.l.wrap.b32 	%r1444, %r1438, %r1437, 23;
	mov.b64 	%rd2088, {%r1444, %r1443};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	xor.b64  	%rd2090, %rd2049, %rd2025;
	and.b64  	%rd2091, %rd2073, %rd2090;
	xor.b64  	%rd2092, %rd2091, %rd2025;
	add.s64 	%rd2093, %rd2001, %rd1746;
	add.s64 	%rd2094, %rd2093, %rd2698;
	add.s64 	%rd2095, %rd2094, %rd2092;
	add.s64 	%rd2096, %rd2095, %rd2089;
	add.s64 	%rd2097, %rd2096, %rd2012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1445,%dummy}, %rd2084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1446}, %rd2084;
	}
	shf.r.wrap.b32 	%r1447, %r1446, %r1445, 28;
	shf.r.wrap.b32 	%r1448, %r1445, %r1446, 28;
	mov.b64 	%rd2098, {%r1448, %r1447};
	shf.l.wrap.b32 	%r1449, %r1445, %r1446, 30;
	shf.l.wrap.b32 	%r1450, %r1446, %r1445, 30;
	mov.b64 	%rd2099, {%r1450, %r1449};
	xor.b64  	%rd2100, %rd2099, %rd2098;
	shf.l.wrap.b32 	%r1451, %r1445, %r1446, 25;
	shf.l.wrap.b32 	%r1452, %r1446, %r1445, 25;
	mov.b64 	%rd2101, {%r1452, %r1451};
	xor.b64  	%rd2102, %rd2100, %rd2101;
	xor.b64  	%rd2103, %rd2084, %rd2036;
	xor.b64  	%rd2104, %rd2084, %rd2060;
	and.b64  	%rd2105, %rd2104, %rd2103;
	xor.b64  	%rd2106, %rd2105, %rd2084;
	add.s64 	%rd2107, %rd2096, %rd2106;
	add.s64 	%rd2108, %rd2107, %rd2102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd2097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd2097;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 14;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 14;
	mov.b64 	%rd2109, {%r1456, %r1455};
	shf.r.wrap.b32 	%r1457, %r1454, %r1453, 18;
	shf.r.wrap.b32 	%r1458, %r1453, %r1454, 18;
	mov.b64 	%rd2110, {%r1458, %r1457};
	xor.b64  	%rd2111, %rd2110, %rd2109;
	shf.l.wrap.b32 	%r1459, %r1453, %r1454, 23;
	shf.l.wrap.b32 	%r1460, %r1454, %r1453, 23;
	mov.b64 	%rd2112, {%r1460, %r1459};
	xor.b64  	%rd2113, %rd2111, %rd2112;
	xor.b64  	%rd2114, %rd2073, %rd2049;
	and.b64  	%rd2115, %rd2097, %rd2114;
	xor.b64  	%rd2116, %rd2115, %rd2049;
	add.s64 	%rd2117, %rd2025, %rd1759;
	add.s64 	%rd2118, %rd2117, %rd2699;
	add.s64 	%rd2119, %rd2118, %rd2116;
	add.s64 	%rd2120, %rd2119, %rd2113;
	add.s64 	%rd2121, %rd2120, %rd2036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1461,%dummy}, %rd2108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1462}, %rd2108;
	}
	shf.r.wrap.b32 	%r1463, %r1462, %r1461, 28;
	shf.r.wrap.b32 	%r1464, %r1461, %r1462, 28;
	mov.b64 	%rd2122, {%r1464, %r1463};
	shf.l.wrap.b32 	%r1465, %r1461, %r1462, 30;
	shf.l.wrap.b32 	%r1466, %r1462, %r1461, 30;
	mov.b64 	%rd2123, {%r1466, %r1465};
	xor.b64  	%rd2124, %rd2123, %rd2122;
	shf.l.wrap.b32 	%r1467, %r1461, %r1462, 25;
	shf.l.wrap.b32 	%r1468, %r1462, %r1461, 25;
	mov.b64 	%rd2125, {%r1468, %r1467};
	xor.b64  	%rd2126, %rd2124, %rd2125;
	xor.b64  	%rd2127, %rd2108, %rd2060;
	xor.b64  	%rd2128, %rd2108, %rd2084;
	and.b64  	%rd2129, %rd2128, %rd2127;
	xor.b64  	%rd2130, %rd2129, %rd2108;
	add.s64 	%rd2131, %rd2120, %rd2130;
	add.s64 	%rd2132, %rd2131, %rd2126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1469,%dummy}, %rd2121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1470}, %rd2121;
	}
	shf.r.wrap.b32 	%r1471, %r1470, %r1469, 14;
	shf.r.wrap.b32 	%r1472, %r1469, %r1470, 14;
	mov.b64 	%rd2133, {%r1472, %r1471};
	shf.r.wrap.b32 	%r1473, %r1470, %r1469, 18;
	shf.r.wrap.b32 	%r1474, %r1469, %r1470, 18;
	mov.b64 	%rd2134, {%r1474, %r1473};
	xor.b64  	%rd2135, %rd2134, %rd2133;
	shf.l.wrap.b32 	%r1475, %r1469, %r1470, 23;
	shf.l.wrap.b32 	%r1476, %r1470, %r1469, 23;
	mov.b64 	%rd2136, {%r1476, %r1475};
	xor.b64  	%rd2137, %rd2135, %rd2136;
	xor.b64  	%rd2138, %rd2097, %rd2073;
	and.b64  	%rd2139, %rd2121, %rd2138;
	xor.b64  	%rd2140, %rd2139, %rd2073;
	add.s64 	%rd2141, %rd2049, %rd1772;
	add.s64 	%rd2142, %rd2141, %rd2700;
	add.s64 	%rd2143, %rd2142, %rd2140;
	add.s64 	%rd2144, %rd2143, %rd2137;
	add.s64 	%rd2145, %rd2144, %rd2060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd2132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd2132;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 28;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 28;
	mov.b64 	%rd2146, {%r1480, %r1479};
	shf.l.wrap.b32 	%r1481, %r1477, %r1478, 30;
	shf.l.wrap.b32 	%r1482, %r1478, %r1477, 30;
	mov.b64 	%rd2147, {%r1482, %r1481};
	xor.b64  	%rd2148, %rd2147, %rd2146;
	shf.l.wrap.b32 	%r1483, %r1477, %r1478, 25;
	shf.l.wrap.b32 	%r1484, %r1478, %r1477, 25;
	mov.b64 	%rd2149, {%r1484, %r1483};
	xor.b64  	%rd2150, %rd2148, %rd2149;
	xor.b64  	%rd2151, %rd2132, %rd2084;
	xor.b64  	%rd2152, %rd2132, %rd2108;
	and.b64  	%rd2153, %rd2152, %rd2151;
	xor.b64  	%rd2154, %rd2153, %rd2132;
	add.s64 	%rd2155, %rd2144, %rd2154;
	add.s64 	%rd2156, %rd2155, %rd2150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1485,%dummy}, %rd1759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1486}, %rd1759;
	}
	shf.r.wrap.b32 	%r1487, %r1486, %r1485, 19;
	shf.r.wrap.b32 	%r1488, %r1485, %r1486, 19;
	mov.b64 	%rd2157, {%r1488, %r1487};
	shf.l.wrap.b32 	%r1489, %r1485, %r1486, 3;
	shf.l.wrap.b32 	%r1490, %r1486, %r1485, 3;
	mov.b64 	%rd2158, {%r1490, %r1489};
	shr.u64 	%rd2159, %rd1759, 6;
	xor.b64  	%rd2160, %rd2157, %rd2159;
	xor.b64  	%rd2161, %rd2160, %rd2158;
	shf.r.wrap.b32 	%r1491, %r1100, %r1099, 1;
	shf.r.wrap.b32 	%r1492, %r1099, %r1100, 1;
	mov.b64 	%rd2162, {%r1492, %r1491};
	shf.r.wrap.b32 	%r1493, %r1100, %r1099, 8;
	shf.r.wrap.b32 	%r1494, %r1099, %r1100, 8;
	mov.b64 	%rd2163, {%r1494, %r1493};
	shr.u64 	%rd2164, %rd1590, 7;
	xor.b64  	%rd2165, %rd2162, %rd2164;
	xor.b64  	%rd2166, %rd2165, %rd2163;
	add.s64 	%rd2167, %rd1577, %rd1694;
	add.s64 	%rd2168, %rd2167, %rd2161;
	add.s64 	%rd2169, %rd2168, %rd2166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd1772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd1772;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 19;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 19;
	mov.b64 	%rd2170, {%r1498, %r1497};
	shf.l.wrap.b32 	%r1499, %r1495, %r1496, 3;
	shf.l.wrap.b32 	%r1500, %r1496, %r1495, 3;
	mov.b64 	%rd2171, {%r1500, %r1499};
	shr.u64 	%rd2172, %rd1772, 6;
	xor.b64  	%rd2173, %rd2170, %rd2172;
	xor.b64  	%rd2174, %rd2173, %rd2171;
	shf.r.wrap.b32 	%r1501, %r1110, %r1109, 1;
	shf.r.wrap.b32 	%r1502, %r1109, %r1110, 1;
	mov.b64 	%rd2175, {%r1502, %r1501};
	shf.r.wrap.b32 	%r1503, %r1110, %r1109, 8;
	shf.r.wrap.b32 	%r1504, %r1109, %r1110, 8;
	mov.b64 	%rd2176, {%r1504, %r1503};
	shr.u64 	%rd2177, %rd1603, 7;
	xor.b64  	%rd2178, %rd2175, %rd2177;
	xor.b64  	%rd2179, %rd2178, %rd2176;
	add.s64 	%rd2180, %rd1590, %rd1707;
	add.s64 	%rd2181, %rd2180, %rd2174;
	add.s64 	%rd2182, %rd2181, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1505,%dummy}, %rd2169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1506}, %rd2169;
	}
	shf.r.wrap.b32 	%r1507, %r1506, %r1505, 19;
	shf.r.wrap.b32 	%r1508, %r1505, %r1506, 19;
	mov.b64 	%rd2183, {%r1508, %r1507};
	shf.l.wrap.b32 	%r1509, %r1505, %r1506, 3;
	shf.l.wrap.b32 	%r1510, %r1506, %r1505, 3;
	mov.b64 	%rd2184, {%r1510, %r1509};
	shr.u64 	%rd2185, %rd2169, 6;
	xor.b64  	%rd2186, %rd2183, %rd2185;
	xor.b64  	%rd2187, %rd2186, %rd2184;
	shf.r.wrap.b32 	%r1511, %r1120, %r1119, 1;
	shf.r.wrap.b32 	%r1512, %r1119, %r1120, 1;
	mov.b64 	%rd2188, {%r1512, %r1511};
	shf.r.wrap.b32 	%r1513, %r1120, %r1119, 8;
	shf.r.wrap.b32 	%r1514, %r1119, %r1120, 8;
	mov.b64 	%rd2189, {%r1514, %r1513};
	shr.u64 	%rd2190, %rd1616, 7;
	xor.b64  	%rd2191, %rd2188, %rd2190;
	xor.b64  	%rd2192, %rd2191, %rd2189;
	add.s64 	%rd2193, %rd1603, %rd1720;
	add.s64 	%rd2194, %rd2193, %rd2187;
	add.s64 	%rd2195, %rd2194, %rd2192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1515,%dummy}, %rd2182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1516}, %rd2182;
	}
	shf.r.wrap.b32 	%r1517, %r1516, %r1515, 19;
	shf.r.wrap.b32 	%r1518, %r1515, %r1516, 19;
	mov.b64 	%rd2196, {%r1518, %r1517};
	shf.l.wrap.b32 	%r1519, %r1515, %r1516, 3;
	shf.l.wrap.b32 	%r1520, %r1516, %r1515, 3;
	mov.b64 	%rd2197, {%r1520, %r1519};
	shr.u64 	%rd2198, %rd2182, 6;
	xor.b64  	%rd2199, %rd2196, %rd2198;
	xor.b64  	%rd2200, %rd2199, %rd2197;
	shf.r.wrap.b32 	%r1521, %r1130, %r1129, 1;
	shf.r.wrap.b32 	%r1522, %r1129, %r1130, 1;
	mov.b64 	%rd2201, {%r1522, %r1521};
	shf.r.wrap.b32 	%r1523, %r1130, %r1129, 8;
	shf.r.wrap.b32 	%r1524, %r1129, %r1130, 8;
	mov.b64 	%rd2202, {%r1524, %r1523};
	shr.u64 	%rd2203, %rd1629, 7;
	xor.b64  	%rd2204, %rd2201, %rd2203;
	xor.b64  	%rd2205, %rd2204, %rd2202;
	add.s64 	%rd2206, %rd1616, %rd1733;
	add.s64 	%rd2207, %rd2206, %rd2200;
	add.s64 	%rd2208, %rd2207, %rd2205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1525,%dummy}, %rd2195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd2195;
	}
	shf.r.wrap.b32 	%r1527, %r1526, %r1525, 19;
	shf.r.wrap.b32 	%r1528, %r1525, %r1526, 19;
	mov.b64 	%rd2209, {%r1528, %r1527};
	shf.l.wrap.b32 	%r1529, %r1525, %r1526, 3;
	shf.l.wrap.b32 	%r1530, %r1526, %r1525, 3;
	mov.b64 	%rd2210, {%r1530, %r1529};
	shr.u64 	%rd2211, %rd2195, 6;
	xor.b64  	%rd2212, %rd2209, %rd2211;
	xor.b64  	%rd2213, %rd2212, %rd2210;
	shf.r.wrap.b32 	%r1531, %r1140, %r1139, 1;
	shf.r.wrap.b32 	%r1532, %r1139, %r1140, 1;
	mov.b64 	%rd2214, {%r1532, %r1531};
	shf.r.wrap.b32 	%r1533, %r1140, %r1139, 8;
	shf.r.wrap.b32 	%r1534, %r1139, %r1140, 8;
	mov.b64 	%rd2215, {%r1534, %r1533};
	shr.u64 	%rd2216, %rd1642, 7;
	xor.b64  	%rd2217, %rd2214, %rd2216;
	xor.b64  	%rd2218, %rd2217, %rd2215;
	add.s64 	%rd2219, %rd1629, %rd1746;
	add.s64 	%rd2220, %rd2219, %rd2213;
	add.s64 	%rd2221, %rd2220, %rd2218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1535,%dummy}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1536}, %rd2208;
	}
	shf.r.wrap.b32 	%r1537, %r1536, %r1535, 19;
	shf.r.wrap.b32 	%r1538, %r1535, %r1536, 19;
	mov.b64 	%rd2222, {%r1538, %r1537};
	shf.l.wrap.b32 	%r1539, %r1535, %r1536, 3;
	shf.l.wrap.b32 	%r1540, %r1536, %r1535, 3;
	mov.b64 	%rd2223, {%r1540, %r1539};
	shr.u64 	%rd2224, %rd2208, 6;
	xor.b64  	%rd2225, %rd2222, %rd2224;
	xor.b64  	%rd2226, %rd2225, %rd2223;
	shf.r.wrap.b32 	%r1541, %r1150, %r1149, 1;
	shf.r.wrap.b32 	%r1542, %r1149, %r1150, 1;
	mov.b64 	%rd2227, {%r1542, %r1541};
	shf.r.wrap.b32 	%r1543, %r1150, %r1149, 8;
	shf.r.wrap.b32 	%r1544, %r1149, %r1150, 8;
	mov.b64 	%rd2228, {%r1544, %r1543};
	shr.u64 	%rd2229, %rd1655, 7;
	xor.b64  	%rd2230, %rd2227, %rd2229;
	xor.b64  	%rd2231, %rd2230, %rd2228;
	add.s64 	%rd2232, %rd1642, %rd1759;
	add.s64 	%rd2233, %rd2232, %rd2226;
	add.s64 	%rd2234, %rd2233, %rd2231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1545,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1546}, %rd2221;
	}
	shf.r.wrap.b32 	%r1547, %r1546, %r1545, 19;
	shf.r.wrap.b32 	%r1548, %r1545, %r1546, 19;
	mov.b64 	%rd2235, {%r1548, %r1547};
	shf.l.wrap.b32 	%r1549, %r1545, %r1546, 3;
	shf.l.wrap.b32 	%r1550, %r1546, %r1545, 3;
	mov.b64 	%rd2236, {%r1550, %r1549};
	shr.u64 	%rd2237, %rd2221, 6;
	xor.b64  	%rd2238, %rd2235, %rd2237;
	xor.b64  	%rd2239, %rd2238, %rd2236;
	shf.r.wrap.b32 	%r1551, %r1160, %r1159, 1;
	shf.r.wrap.b32 	%r1552, %r1159, %r1160, 1;
	mov.b64 	%rd2240, {%r1552, %r1551};
	shf.r.wrap.b32 	%r1553, %r1160, %r1159, 8;
	shf.r.wrap.b32 	%r1554, %r1159, %r1160, 8;
	mov.b64 	%rd2241, {%r1554, %r1553};
	shr.u64 	%rd2242, %rd1668, 7;
	xor.b64  	%rd2243, %rd2240, %rd2242;
	xor.b64  	%rd2244, %rd2243, %rd2241;
	add.s64 	%rd2245, %rd1655, %rd1772;
	add.s64 	%rd2246, %rd2245, %rd2239;
	add.s64 	%rd2247, %rd2246, %rd2244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd2234;
	}
	shf.r.wrap.b32 	%r1557, %r1556, %r1555, 19;
	shf.r.wrap.b32 	%r1558, %r1555, %r1556, 19;
	mov.b64 	%rd2248, {%r1558, %r1557};
	shf.l.wrap.b32 	%r1559, %r1555, %r1556, 3;
	shf.l.wrap.b32 	%r1560, %r1556, %r1555, 3;
	mov.b64 	%rd2249, {%r1560, %r1559};
	shr.u64 	%rd2250, %rd2234, 6;
	xor.b64  	%rd2251, %rd2248, %rd2250;
	xor.b64  	%rd2252, %rd2251, %rd2249;
	shf.r.wrap.b32 	%r1561, %r1170, %r1169, 1;
	shf.r.wrap.b32 	%r1562, %r1169, %r1170, 1;
	mov.b64 	%rd2253, {%r1562, %r1561};
	shf.r.wrap.b32 	%r1563, %r1170, %r1169, 8;
	shf.r.wrap.b32 	%r1564, %r1169, %r1170, 8;
	mov.b64 	%rd2254, {%r1564, %r1563};
	shr.u64 	%rd2255, %rd1681, 7;
	xor.b64  	%rd2256, %rd2253, %rd2255;
	xor.b64  	%rd2257, %rd2256, %rd2254;
	add.s64 	%rd2258, %rd2169, %rd1668;
	add.s64 	%rd2259, %rd2258, %rd2252;
	add.s64 	%rd2260, %rd2259, %rd2257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1565,%dummy}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1566}, %rd2247;
	}
	shf.r.wrap.b32 	%r1567, %r1566, %r1565, 19;
	shf.r.wrap.b32 	%r1568, %r1565, %r1566, 19;
	mov.b64 	%rd2261, {%r1568, %r1567};
	shf.l.wrap.b32 	%r1569, %r1565, %r1566, 3;
	shf.l.wrap.b32 	%r1570, %r1566, %r1565, 3;
	mov.b64 	%rd2262, {%r1570, %r1569};
	shr.u64 	%rd2263, %rd2247, 6;
	xor.b64  	%rd2264, %rd2261, %rd2263;
	xor.b64  	%rd2265, %rd2264, %rd2262;
	shf.r.wrap.b32 	%r1571, %r1180, %r1179, 1;
	shf.r.wrap.b32 	%r1572, %r1179, %r1180, 1;
	mov.b64 	%rd2266, {%r1572, %r1571};
	shf.r.wrap.b32 	%r1573, %r1180, %r1179, 8;
	shf.r.wrap.b32 	%r1574, %r1179, %r1180, 8;
	mov.b64 	%rd2267, {%r1574, %r1573};
	shr.u64 	%rd2268, %rd1694, 7;
	xor.b64  	%rd2269, %rd2266, %rd2268;
	xor.b64  	%rd2270, %rd2269, %rd2267;
	add.s64 	%rd2271, %rd2182, %rd1681;
	add.s64 	%rd2272, %rd2271, %rd2265;
	add.s64 	%rd2273, %rd2272, %rd2270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1575,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1576}, %rd2260;
	}
	shf.r.wrap.b32 	%r1577, %r1576, %r1575, 19;
	shf.r.wrap.b32 	%r1578, %r1575, %r1576, 19;
	mov.b64 	%rd2274, {%r1578, %r1577};
	shf.l.wrap.b32 	%r1579, %r1575, %r1576, 3;
	shf.l.wrap.b32 	%r1580, %r1576, %r1575, 3;
	mov.b64 	%rd2275, {%r1580, %r1579};
	shr.u64 	%rd2276, %rd2260, 6;
	xor.b64  	%rd2277, %rd2274, %rd2276;
	xor.b64  	%rd2278, %rd2277, %rd2275;
	shf.r.wrap.b32 	%r1581, %r1190, %r1189, 1;
	shf.r.wrap.b32 	%r1582, %r1189, %r1190, 1;
	mov.b64 	%rd2279, {%r1582, %r1581};
	shf.r.wrap.b32 	%r1583, %r1190, %r1189, 8;
	shf.r.wrap.b32 	%r1584, %r1189, %r1190, 8;
	mov.b64 	%rd2280, {%r1584, %r1583};
	shr.u64 	%rd2281, %rd1707, 7;
	xor.b64  	%rd2282, %rd2279, %rd2281;
	xor.b64  	%rd2283, %rd2282, %rd2280;
	add.s64 	%rd2284, %rd2195, %rd1694;
	add.s64 	%rd2285, %rd2284, %rd2278;
	add.s64 	%rd2286, %rd2285, %rd2283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1585,%dummy}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1586}, %rd2273;
	}
	shf.r.wrap.b32 	%r1587, %r1586, %r1585, 19;
	shf.r.wrap.b32 	%r1588, %r1585, %r1586, 19;
	mov.b64 	%rd2287, {%r1588, %r1587};
	shf.l.wrap.b32 	%r1589, %r1585, %r1586, 3;
	shf.l.wrap.b32 	%r1590, %r1586, %r1585, 3;
	mov.b64 	%rd2288, {%r1590, %r1589};
	shr.u64 	%rd2289, %rd2273, 6;
	xor.b64  	%rd2290, %rd2287, %rd2289;
	xor.b64  	%rd2291, %rd2290, %rd2288;
	shf.r.wrap.b32 	%r1591, %r1200, %r1199, 1;
	shf.r.wrap.b32 	%r1592, %r1199, %r1200, 1;
	mov.b64 	%rd2292, {%r1592, %r1591};
	shf.r.wrap.b32 	%r1593, %r1200, %r1199, 8;
	shf.r.wrap.b32 	%r1594, %r1199, %r1200, 8;
	mov.b64 	%rd2293, {%r1594, %r1593};
	shr.u64 	%rd2294, %rd1720, 7;
	xor.b64  	%rd2295, %rd2292, %rd2294;
	xor.b64  	%rd2296, %rd2295, %rd2293;
	add.s64 	%rd2297, %rd2208, %rd1707;
	add.s64 	%rd2298, %rd2297, %rd2291;
	add.s64 	%rd2299, %rd2298, %rd2296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1595,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1596}, %rd2286;
	}
	shf.r.wrap.b32 	%r1597, %r1596, %r1595, 19;
	shf.r.wrap.b32 	%r1598, %r1595, %r1596, 19;
	mov.b64 	%rd2300, {%r1598, %r1597};
	shf.l.wrap.b32 	%r1599, %r1595, %r1596, 3;
	shf.l.wrap.b32 	%r1600, %r1596, %r1595, 3;
	mov.b64 	%rd2301, {%r1600, %r1599};
	shr.u64 	%rd2302, %rd2286, 6;
	xor.b64  	%rd2303, %rd2300, %rd2302;
	xor.b64  	%rd2304, %rd2303, %rd2301;
	shf.r.wrap.b32 	%r1601, %r1210, %r1209, 1;
	shf.r.wrap.b32 	%r1602, %r1209, %r1210, 1;
	mov.b64 	%rd2305, {%r1602, %r1601};
	shf.r.wrap.b32 	%r1603, %r1210, %r1209, 8;
	shf.r.wrap.b32 	%r1604, %r1209, %r1210, 8;
	mov.b64 	%rd2306, {%r1604, %r1603};
	shr.u64 	%rd2307, %rd1733, 7;
	xor.b64  	%rd2308, %rd2305, %rd2307;
	xor.b64  	%rd2309, %rd2308, %rd2306;
	add.s64 	%rd2310, %rd2221, %rd1720;
	add.s64 	%rd2311, %rd2310, %rd2304;
	add.s64 	%rd2312, %rd2311, %rd2309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd2299;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 19;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 19;
	mov.b64 	%rd2313, {%r1608, %r1607};
	shf.l.wrap.b32 	%r1609, %r1605, %r1606, 3;
	shf.l.wrap.b32 	%r1610, %r1606, %r1605, 3;
	mov.b64 	%rd2314, {%r1610, %r1609};
	shr.u64 	%rd2315, %rd2299, 6;
	xor.b64  	%rd2316, %rd2313, %rd2315;
	xor.b64  	%rd2317, %rd2316, %rd2314;
	shf.r.wrap.b32 	%r1611, %r1220, %r1219, 1;
	shf.r.wrap.b32 	%r1612, %r1219, %r1220, 1;
	mov.b64 	%rd2318, {%r1612, %r1611};
	shf.r.wrap.b32 	%r1613, %r1220, %r1219, 8;
	shf.r.wrap.b32 	%r1614, %r1219, %r1220, 8;
	mov.b64 	%rd2319, {%r1614, %r1613};
	shr.u64 	%rd2320, %rd1746, 7;
	xor.b64  	%rd2321, %rd2318, %rd2320;
	xor.b64  	%rd2322, %rd2321, %rd2319;
	add.s64 	%rd2323, %rd2234, %rd1733;
	add.s64 	%rd2324, %rd2323, %rd2317;
	add.s64 	%rd2325, %rd2324, %rd2322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1615,%dummy}, %rd2145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd2145;
	}
	shf.r.wrap.b32 	%r1617, %r1616, %r1615, 14;
	shf.r.wrap.b32 	%r1618, %r1615, %r1616, 14;
	mov.b64 	%rd2326, {%r1618, %r1617};
	shf.r.wrap.b32 	%r1619, %r1616, %r1615, 18;
	shf.r.wrap.b32 	%r1620, %r1615, %r1616, 18;
	mov.b64 	%rd2327, {%r1620, %r1619};
	xor.b64  	%rd2328, %rd2327, %rd2326;
	shf.l.wrap.b32 	%r1621, %r1615, %r1616, 23;
	shf.l.wrap.b32 	%r1622, %r1616, %r1615, 23;
	mov.b64 	%rd2329, {%r1622, %r1621};
	xor.b64  	%rd2330, %rd2328, %rd2329;
	xor.b64  	%rd2331, %rd2097, %rd2121;
	and.b64  	%rd2332, %rd2331, %rd2145;
	xor.b64  	%rd2333, %rd2332, %rd2097;
	add.s64 	%rd2334, %rd2333, %rd2073;
	add.s64 	%rd2335, %rd2334, %rd2169;
	add.s64 	%rd2336, %rd2335, %rd2701;
	add.s64 	%rd2337, %rd2336, %rd2330;
	add.s64 	%rd2338, %rd2337, %rd2084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1623,%dummy}, %rd2156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1624}, %rd2156;
	}
	shf.r.wrap.b32 	%r1625, %r1624, %r1623, 28;
	shf.r.wrap.b32 	%r1626, %r1623, %r1624, 28;
	mov.b64 	%rd2339, {%r1626, %r1625};
	shf.l.wrap.b32 	%r1627, %r1623, %r1624, 30;
	shf.l.wrap.b32 	%r1628, %r1624, %r1623, 30;
	mov.b64 	%rd2340, {%r1628, %r1627};
	xor.b64  	%rd2341, %rd2340, %rd2339;
	shf.l.wrap.b32 	%r1629, %r1623, %r1624, 25;
	shf.l.wrap.b32 	%r1630, %r1624, %r1623, 25;
	mov.b64 	%rd2342, {%r1630, %r1629};
	xor.b64  	%rd2343, %rd2341, %rd2342;
	xor.b64  	%rd2344, %rd2156, %rd2108;
	xor.b64  	%rd2345, %rd2156, %rd2132;
	and.b64  	%rd2346, %rd2345, %rd2344;
	xor.b64  	%rd2347, %rd2346, %rd2156;
	add.s64 	%rd2348, %rd2337, %rd2347;
	add.s64 	%rd2349, %rd2348, %rd2343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1631,%dummy}, %rd2338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1632}, %rd2338;
	}
	shf.r.wrap.b32 	%r1633, %r1632, %r1631, 14;
	shf.r.wrap.b32 	%r1634, %r1631, %r1632, 14;
	mov.b64 	%rd2350, {%r1634, %r1633};
	shf.r.wrap.b32 	%r1635, %r1632, %r1631, 18;
	shf.r.wrap.b32 	%r1636, %r1631, %r1632, 18;
	mov.b64 	%rd2351, {%r1636, %r1635};
	xor.b64  	%rd2352, %rd2351, %rd2350;
	shf.l.wrap.b32 	%r1637, %r1631, %r1632, 23;
	shf.l.wrap.b32 	%r1638, %r1632, %r1631, 23;
	mov.b64 	%rd2353, {%r1638, %r1637};
	xor.b64  	%rd2354, %rd2352, %rd2353;
	xor.b64  	%rd2355, %rd2121, %rd2145;
	and.b64  	%rd2356, %rd2338, %rd2355;
	xor.b64  	%rd2357, %rd2356, %rd2121;
	add.s64 	%rd2358, %rd2182, %rd2097;
	add.s64 	%rd2359, %rd2358, %rd2702;
	add.s64 	%rd2360, %rd2359, %rd2357;
	add.s64 	%rd2361, %rd2360, %rd2354;
	add.s64 	%rd2362, %rd2361, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1639,%dummy}, %rd2349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1640}, %rd2349;
	}
	shf.r.wrap.b32 	%r1641, %r1640, %r1639, 28;
	shf.r.wrap.b32 	%r1642, %r1639, %r1640, 28;
	mov.b64 	%rd2363, {%r1642, %r1641};
	shf.l.wrap.b32 	%r1643, %r1639, %r1640, 30;
	shf.l.wrap.b32 	%r1644, %r1640, %r1639, 30;
	mov.b64 	%rd2364, {%r1644, %r1643};
	xor.b64  	%rd2365, %rd2364, %rd2363;
	shf.l.wrap.b32 	%r1645, %r1639, %r1640, 25;
	shf.l.wrap.b32 	%r1646, %r1640, %r1639, 25;
	mov.b64 	%rd2366, {%r1646, %r1645};
	xor.b64  	%rd2367, %rd2365, %rd2366;
	xor.b64  	%rd2368, %rd2349, %rd2132;
	xor.b64  	%rd2369, %rd2349, %rd2156;
	and.b64  	%rd2370, %rd2369, %rd2368;
	xor.b64  	%rd2371, %rd2370, %rd2349;
	add.s64 	%rd2372, %rd2361, %rd2371;
	add.s64 	%rd2373, %rd2372, %rd2367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1647,%dummy}, %rd2362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1648}, %rd2362;
	}
	shf.r.wrap.b32 	%r1649, %r1648, %r1647, 14;
	shf.r.wrap.b32 	%r1650, %r1647, %r1648, 14;
	mov.b64 	%rd2374, {%r1650, %r1649};
	shf.r.wrap.b32 	%r1651, %r1648, %r1647, 18;
	shf.r.wrap.b32 	%r1652, %r1647, %r1648, 18;
	mov.b64 	%rd2375, {%r1652, %r1651};
	xor.b64  	%rd2376, %rd2375, %rd2374;
	shf.l.wrap.b32 	%r1653, %r1647, %r1648, 23;
	shf.l.wrap.b32 	%r1654, %r1648, %r1647, 23;
	mov.b64 	%rd2377, {%r1654, %r1653};
	xor.b64  	%rd2378, %rd2376, %rd2377;
	xor.b64  	%rd2379, %rd2338, %rd2145;
	and.b64  	%rd2380, %rd2362, %rd2379;
	xor.b64  	%rd2381, %rd2380, %rd2145;
	add.s64 	%rd2382, %rd2195, %rd2121;
	add.s64 	%rd2383, %rd2382, %rd2703;
	add.s64 	%rd2384, %rd2383, %rd2381;
	add.s64 	%rd2385, %rd2384, %rd2378;
	add.s64 	%rd2386, %rd2385, %rd2132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1655,%dummy}, %rd2373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1656}, %rd2373;
	}
	shf.r.wrap.b32 	%r1657, %r1656, %r1655, 28;
	shf.r.wrap.b32 	%r1658, %r1655, %r1656, 28;
	mov.b64 	%rd2387, {%r1658, %r1657};
	shf.l.wrap.b32 	%r1659, %r1655, %r1656, 30;
	shf.l.wrap.b32 	%r1660, %r1656, %r1655, 30;
	mov.b64 	%rd2388, {%r1660, %r1659};
	xor.b64  	%rd2389, %rd2388, %rd2387;
	shf.l.wrap.b32 	%r1661, %r1655, %r1656, 25;
	shf.l.wrap.b32 	%r1662, %r1656, %r1655, 25;
	mov.b64 	%rd2390, {%r1662, %r1661};
	xor.b64  	%rd2391, %rd2389, %rd2390;
	xor.b64  	%rd2392, %rd2373, %rd2156;
	xor.b64  	%rd2393, %rd2373, %rd2349;
	and.b64  	%rd2394, %rd2393, %rd2392;
	xor.b64  	%rd2395, %rd2394, %rd2373;
	add.s64 	%rd2396, %rd2385, %rd2395;
	add.s64 	%rd2397, %rd2396, %rd2391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1663,%dummy}, %rd2386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1664}, %rd2386;
	}
	shf.r.wrap.b32 	%r1665, %r1664, %r1663, 14;
	shf.r.wrap.b32 	%r1666, %r1663, %r1664, 14;
	mov.b64 	%rd2398, {%r1666, %r1665};
	shf.r.wrap.b32 	%r1667, %r1664, %r1663, 18;
	shf.r.wrap.b32 	%r1668, %r1663, %r1664, 18;
	mov.b64 	%rd2399, {%r1668, %r1667};
	xor.b64  	%rd2400, %rd2399, %rd2398;
	shf.l.wrap.b32 	%r1669, %r1663, %r1664, 23;
	shf.l.wrap.b32 	%r1670, %r1664, %r1663, 23;
	mov.b64 	%rd2401, {%r1670, %r1669};
	xor.b64  	%rd2402, %rd2400, %rd2401;
	xor.b64  	%rd2403, %rd2362, %rd2338;
	and.b64  	%rd2404, %rd2386, %rd2403;
	xor.b64  	%rd2405, %rd2404, %rd2338;
	add.s64 	%rd2406, %rd2208, %rd2145;
	add.s64 	%rd2407, %rd2406, %rd2704;
	add.s64 	%rd2408, %rd2407, %rd2405;
	add.s64 	%rd2409, %rd2408, %rd2402;
	add.s64 	%rd2410, %rd2409, %rd2156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1671,%dummy}, %rd2397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1672}, %rd2397;
	}
	shf.r.wrap.b32 	%r1673, %r1672, %r1671, 28;
	shf.r.wrap.b32 	%r1674, %r1671, %r1672, 28;
	mov.b64 	%rd2411, {%r1674, %r1673};
	shf.l.wrap.b32 	%r1675, %r1671, %r1672, 30;
	shf.l.wrap.b32 	%r1676, %r1672, %r1671, 30;
	mov.b64 	%rd2412, {%r1676, %r1675};
	xor.b64  	%rd2413, %rd2412, %rd2411;
	shf.l.wrap.b32 	%r1677, %r1671, %r1672, 25;
	shf.l.wrap.b32 	%r1678, %r1672, %r1671, 25;
	mov.b64 	%rd2414, {%r1678, %r1677};
	xor.b64  	%rd2415, %rd2413, %rd2414;
	xor.b64  	%rd2416, %rd2397, %rd2349;
	xor.b64  	%rd2417, %rd2397, %rd2373;
	and.b64  	%rd2418, %rd2417, %rd2416;
	xor.b64  	%rd2419, %rd2418, %rd2397;
	add.s64 	%rd2420, %rd2409, %rd2419;
	add.s64 	%rd2421, %rd2420, %rd2415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd2410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd2410;
	}
	shf.r.wrap.b32 	%r1681, %r1680, %r1679, 14;
	shf.r.wrap.b32 	%r1682, %r1679, %r1680, 14;
	mov.b64 	%rd2422, {%r1682, %r1681};
	shf.r.wrap.b32 	%r1683, %r1680, %r1679, 18;
	shf.r.wrap.b32 	%r1684, %r1679, %r1680, 18;
	mov.b64 	%rd2423, {%r1684, %r1683};
	xor.b64  	%rd2424, %rd2423, %rd2422;
	shf.l.wrap.b32 	%r1685, %r1679, %r1680, 23;
	shf.l.wrap.b32 	%r1686, %r1680, %r1679, 23;
	mov.b64 	%rd2425, {%r1686, %r1685};
	xor.b64  	%rd2426, %rd2424, %rd2425;
	xor.b64  	%rd2427, %rd2386, %rd2362;
	and.b64  	%rd2428, %rd2410, %rd2427;
	xor.b64  	%rd2429, %rd2428, %rd2362;
	add.s64 	%rd2430, %rd2338, %rd2221;
	add.s64 	%rd2431, %rd2430, %rd2705;
	add.s64 	%rd2432, %rd2431, %rd2429;
	add.s64 	%rd2433, %rd2432, %rd2426;
	add.s64 	%rd2434, %rd2433, %rd2349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1687,%dummy}, %rd2421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1688}, %rd2421;
	}
	shf.r.wrap.b32 	%r1689, %r1688, %r1687, 28;
	shf.r.wrap.b32 	%r1690, %r1687, %r1688, 28;
	mov.b64 	%rd2435, {%r1690, %r1689};
	shf.l.wrap.b32 	%r1691, %r1687, %r1688, 30;
	shf.l.wrap.b32 	%r1692, %r1688, %r1687, 30;
	mov.b64 	%rd2436, {%r1692, %r1691};
	xor.b64  	%rd2437, %rd2436, %rd2435;
	shf.l.wrap.b32 	%r1693, %r1687, %r1688, 25;
	shf.l.wrap.b32 	%r1694, %r1688, %r1687, 25;
	mov.b64 	%rd2438, {%r1694, %r1693};
	xor.b64  	%rd2439, %rd2437, %rd2438;
	xor.b64  	%rd2440, %rd2421, %rd2373;
	xor.b64  	%rd2441, %rd2421, %rd2397;
	and.b64  	%rd2442, %rd2441, %rd2440;
	xor.b64  	%rd2443, %rd2442, %rd2421;
	add.s64 	%rd2444, %rd2433, %rd2443;
	add.s64 	%rd2445, %rd2444, %rd2439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd2434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd2434;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 14;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 14;
	mov.b64 	%rd2446, {%r1698, %r1697};
	shf.r.wrap.b32 	%r1699, %r1696, %r1695, 18;
	shf.r.wrap.b32 	%r1700, %r1695, %r1696, 18;
	mov.b64 	%rd2447, {%r1700, %r1699};
	xor.b64  	%rd2448, %rd2447, %rd2446;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 23;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 23;
	mov.b64 	%rd2449, {%r1702, %r1701};
	xor.b64  	%rd2450, %rd2448, %rd2449;
	xor.b64  	%rd2451, %rd2410, %rd2386;
	and.b64  	%rd2452, %rd2434, %rd2451;
	xor.b64  	%rd2453, %rd2452, %rd2386;
	add.s64 	%rd2454, %rd2362, %rd2234;
	add.s64 	%rd2455, %rd2454, %rd2706;
	add.s64 	%rd2456, %rd2455, %rd2453;
	add.s64 	%rd2457, %rd2456, %rd2450;
	add.s64 	%rd2458, %rd2457, %rd2373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd2445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd2445;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 28;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 28;
	mov.b64 	%rd2459, {%r1706, %r1705};
	shf.l.wrap.b32 	%r1707, %r1703, %r1704, 30;
	shf.l.wrap.b32 	%r1708, %r1704, %r1703, 30;
	mov.b64 	%rd2460, {%r1708, %r1707};
	xor.b64  	%rd2461, %rd2460, %rd2459;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 25;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 25;
	mov.b64 	%rd2462, {%r1710, %r1709};
	xor.b64  	%rd2463, %rd2461, %rd2462;
	xor.b64  	%rd2464, %rd2445, %rd2397;
	xor.b64  	%rd2465, %rd2445, %rd2421;
	and.b64  	%rd2466, %rd2465, %rd2464;
	xor.b64  	%rd2467, %rd2466, %rd2445;
	add.s64 	%rd2468, %rd2457, %rd2467;
	add.s64 	%rd2469, %rd2468, %rd2463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2458;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 14;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 14;
	mov.b64 	%rd2470, {%r1714, %r1713};
	shf.r.wrap.b32 	%r1715, %r1712, %r1711, 18;
	shf.r.wrap.b32 	%r1716, %r1711, %r1712, 18;
	mov.b64 	%rd2471, {%r1716, %r1715};
	xor.b64  	%rd2472, %rd2471, %rd2470;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 23;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 23;
	mov.b64 	%rd2473, {%r1718, %r1717};
	xor.b64  	%rd2474, %rd2472, %rd2473;
	xor.b64  	%rd2475, %rd2434, %rd2410;
	and.b64  	%rd2476, %rd2458, %rd2475;
	xor.b64  	%rd2477, %rd2476, %rd2410;
	add.s64 	%rd2478, %rd2386, %rd2247;
	add.s64 	%rd2479, %rd2478, %rd2707;
	add.s64 	%rd2480, %rd2479, %rd2477;
	add.s64 	%rd2481, %rd2480, %rd2474;
	add.s64 	%rd2482, %rd2481, %rd2397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2469;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 28;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 28;
	mov.b64 	%rd2483, {%r1722, %r1721};
	shf.l.wrap.b32 	%r1723, %r1719, %r1720, 30;
	shf.l.wrap.b32 	%r1724, %r1720, %r1719, 30;
	mov.b64 	%rd2484, {%r1724, %r1723};
	xor.b64  	%rd2485, %rd2484, %rd2483;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 25;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 25;
	mov.b64 	%rd2486, {%r1726, %r1725};
	xor.b64  	%rd2487, %rd2485, %rd2486;
	xor.b64  	%rd2488, %rd2469, %rd2421;
	xor.b64  	%rd2489, %rd2469, %rd2445;
	and.b64  	%rd2490, %rd2489, %rd2488;
	xor.b64  	%rd2491, %rd2490, %rd2469;
	add.s64 	%rd2492, %rd2481, %rd2491;
	add.s64 	%rd2493, %rd2492, %rd2487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2482;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 14;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 14;
	mov.b64 	%rd2494, {%r1730, %r1729};
	shf.r.wrap.b32 	%r1731, %r1728, %r1727, 18;
	shf.r.wrap.b32 	%r1732, %r1727, %r1728, 18;
	mov.b64 	%rd2495, {%r1732, %r1731};
	xor.b64  	%rd2496, %rd2495, %rd2494;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 23;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 23;
	mov.b64 	%rd2497, {%r1734, %r1733};
	xor.b64  	%rd2498, %rd2496, %rd2497;
	xor.b64  	%rd2499, %rd2458, %rd2434;
	and.b64  	%rd2500, %rd2482, %rd2499;
	xor.b64  	%rd2501, %rd2500, %rd2434;
	add.s64 	%rd2502, %rd2410, %rd2260;
	add.s64 	%rd2503, %rd2502, %rd2708;
	add.s64 	%rd2504, %rd2503, %rd2501;
	add.s64 	%rd2505, %rd2504, %rd2498;
	add.s64 	%rd2506, %rd2505, %rd2421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd2493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd2493;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 28;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 28;
	mov.b64 	%rd2507, {%r1738, %r1737};
	shf.l.wrap.b32 	%r1739, %r1735, %r1736, 30;
	shf.l.wrap.b32 	%r1740, %r1736, %r1735, 30;
	mov.b64 	%rd2508, {%r1740, %r1739};
	xor.b64  	%rd2509, %rd2508, %rd2507;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 25;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 25;
	mov.b64 	%rd2510, {%r1742, %r1741};
	xor.b64  	%rd2511, %rd2509, %rd2510;
	xor.b64  	%rd2512, %rd2493, %rd2445;
	xor.b64  	%rd2513, %rd2493, %rd2469;
	and.b64  	%rd2514, %rd2513, %rd2512;
	xor.b64  	%rd2515, %rd2514, %rd2493;
	add.s64 	%rd2516, %rd2505, %rd2515;
	add.s64 	%rd2517, %rd2516, %rd2511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd2506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd2506;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 14;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 14;
	mov.b64 	%rd2518, {%r1746, %r1745};
	shf.r.wrap.b32 	%r1747, %r1744, %r1743, 18;
	shf.r.wrap.b32 	%r1748, %r1743, %r1744, 18;
	mov.b64 	%rd2519, {%r1748, %r1747};
	xor.b64  	%rd2520, %rd2519, %rd2518;
	shf.l.wrap.b32 	%r1749, %r1743, %r1744, 23;
	shf.l.wrap.b32 	%r1750, %r1744, %r1743, 23;
	mov.b64 	%rd2521, {%r1750, %r1749};
	xor.b64  	%rd2522, %rd2520, %rd2521;
	xor.b64  	%rd2523, %rd2482, %rd2458;
	and.b64  	%rd2524, %rd2506, %rd2523;
	xor.b64  	%rd2525, %rd2524, %rd2458;
	add.s64 	%rd2526, %rd2434, %rd2273;
	add.s64 	%rd2527, %rd2526, %rd2709;
	add.s64 	%rd2528, %rd2527, %rd2525;
	add.s64 	%rd2529, %rd2528, %rd2522;
	add.s64 	%rd2530, %rd2529, %rd2445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd2517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd2517;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 28;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 28;
	mov.b64 	%rd2531, {%r1754, %r1753};
	shf.l.wrap.b32 	%r1755, %r1751, %r1752, 30;
	shf.l.wrap.b32 	%r1756, %r1752, %r1751, 30;
	mov.b64 	%rd2532, {%r1756, %r1755};
	xor.b64  	%rd2533, %rd2532, %rd2531;
	shf.l.wrap.b32 	%r1757, %r1751, %r1752, 25;
	shf.l.wrap.b32 	%r1758, %r1752, %r1751, 25;
	mov.b64 	%rd2534, {%r1758, %r1757};
	xor.b64  	%rd2535, %rd2533, %rd2534;
	xor.b64  	%rd2536, %rd2517, %rd2469;
	xor.b64  	%rd2537, %rd2517, %rd2493;
	and.b64  	%rd2538, %rd2537, %rd2536;
	xor.b64  	%rd2539, %rd2538, %rd2517;
	add.s64 	%rd2540, %rd2529, %rd2539;
	add.s64 	%rd2541, %rd2540, %rd2535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd2530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd2530;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 14;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 14;
	mov.b64 	%rd2542, {%r1762, %r1761};
	shf.r.wrap.b32 	%r1763, %r1760, %r1759, 18;
	shf.r.wrap.b32 	%r1764, %r1759, %r1760, 18;
	mov.b64 	%rd2543, {%r1764, %r1763};
	xor.b64  	%rd2544, %rd2543, %rd2542;
	shf.l.wrap.b32 	%r1765, %r1759, %r1760, 23;
	shf.l.wrap.b32 	%r1766, %r1760, %r1759, 23;
	mov.b64 	%rd2545, {%r1766, %r1765};
	xor.b64  	%rd2546, %rd2544, %rd2545;
	xor.b64  	%rd2547, %rd2506, %rd2482;
	and.b64  	%rd2548, %rd2530, %rd2547;
	xor.b64  	%rd2549, %rd2548, %rd2482;
	add.s64 	%rd2550, %rd2458, %rd2286;
	add.s64 	%rd2551, %rd2550, %rd2710;
	add.s64 	%rd2552, %rd2551, %rd2549;
	add.s64 	%rd2553, %rd2552, %rd2546;
	add.s64 	%rd2554, %rd2553, %rd2469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1767,%dummy}, %rd2541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1768}, %rd2541;
	}
	shf.r.wrap.b32 	%r1769, %r1768, %r1767, 28;
	shf.r.wrap.b32 	%r1770, %r1767, %r1768, 28;
	mov.b64 	%rd2555, {%r1770, %r1769};
	shf.l.wrap.b32 	%r1771, %r1767, %r1768, 30;
	shf.l.wrap.b32 	%r1772, %r1768, %r1767, 30;
	mov.b64 	%rd2556, {%r1772, %r1771};
	xor.b64  	%rd2557, %rd2556, %rd2555;
	shf.l.wrap.b32 	%r1773, %r1767, %r1768, 25;
	shf.l.wrap.b32 	%r1774, %r1768, %r1767, 25;
	mov.b64 	%rd2558, {%r1774, %r1773};
	xor.b64  	%rd2559, %rd2557, %rd2558;
	xor.b64  	%rd2560, %rd2541, %rd2493;
	xor.b64  	%rd2561, %rd2541, %rd2517;
	and.b64  	%rd2562, %rd2561, %rd2560;
	xor.b64  	%rd2563, %rd2562, %rd2541;
	add.s64 	%rd2564, %rd2553, %rd2563;
	add.s64 	%rd2565, %rd2564, %rd2559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1775,%dummy}, %rd2554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1776}, %rd2554;
	}
	shf.r.wrap.b32 	%r1777, %r1776, %r1775, 14;
	shf.r.wrap.b32 	%r1778, %r1775, %r1776, 14;
	mov.b64 	%rd2566, {%r1778, %r1777};
	shf.r.wrap.b32 	%r1779, %r1776, %r1775, 18;
	shf.r.wrap.b32 	%r1780, %r1775, %r1776, 18;
	mov.b64 	%rd2567, {%r1780, %r1779};
	xor.b64  	%rd2568, %rd2567, %rd2566;
	shf.l.wrap.b32 	%r1781, %r1775, %r1776, 23;
	shf.l.wrap.b32 	%r1782, %r1776, %r1775, 23;
	mov.b64 	%rd2569, {%r1782, %r1781};
	xor.b64  	%rd2570, %rd2568, %rd2569;
	xor.b64  	%rd2571, %rd2530, %rd2506;
	and.b64  	%rd2572, %rd2554, %rd2571;
	xor.b64  	%rd2573, %rd2572, %rd2506;
	add.s64 	%rd2574, %rd2482, %rd2299;
	add.s64 	%rd2575, %rd2574, %rd2711;
	add.s64 	%rd2576, %rd2575, %rd2573;
	add.s64 	%rd2577, %rd2576, %rd2570;
	add.s64 	%rd2578, %rd2577, %rd2493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd2565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd2565;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 28;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 28;
	mov.b64 	%rd2579, {%r1786, %r1785};
	shf.l.wrap.b32 	%r1787, %r1783, %r1784, 30;
	shf.l.wrap.b32 	%r1788, %r1784, %r1783, 30;
	mov.b64 	%rd2580, {%r1788, %r1787};
	xor.b64  	%rd2581, %rd2580, %rd2579;
	shf.l.wrap.b32 	%r1789, %r1783, %r1784, 25;
	shf.l.wrap.b32 	%r1790, %r1784, %r1783, 25;
	mov.b64 	%rd2582, {%r1790, %r1789};
	xor.b64  	%rd2583, %rd2581, %rd2582;
	xor.b64  	%rd2584, %rd2565, %rd2517;
	xor.b64  	%rd2585, %rd2565, %rd2541;
	and.b64  	%rd2586, %rd2585, %rd2584;
	xor.b64  	%rd2587, %rd2586, %rd2565;
	add.s64 	%rd2588, %rd2577, %rd2587;
	add.s64 	%rd2589, %rd2588, %rd2583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd2578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd2578;
	}
	shf.r.wrap.b32 	%r1793, %r1792, %r1791, 14;
	shf.r.wrap.b32 	%r1794, %r1791, %r1792, 14;
	mov.b64 	%rd2590, {%r1794, %r1793};
	shf.r.wrap.b32 	%r1795, %r1792, %r1791, 18;
	shf.r.wrap.b32 	%r1796, %r1791, %r1792, 18;
	mov.b64 	%rd2591, {%r1796, %r1795};
	xor.b64  	%rd2592, %rd2591, %rd2590;
	shf.l.wrap.b32 	%r1797, %r1791, %r1792, 23;
	shf.l.wrap.b32 	%r1798, %r1792, %r1791, 23;
	mov.b64 	%rd2593, {%r1798, %r1797};
	xor.b64  	%rd2594, %rd2592, %rd2593;
	xor.b64  	%rd2595, %rd2554, %rd2530;
	and.b64  	%rd2596, %rd2578, %rd2595;
	xor.b64  	%rd2597, %rd2596, %rd2530;
	add.s64 	%rd2598, %rd2506, %rd2312;
	add.s64 	%rd2599, %rd2598, %rd2712;
	add.s64 	%rd2600, %rd2599, %rd2597;
	add.s64 	%rd2601, %rd2600, %rd2594;
	add.s64 	%rd2602, %rd2601, %rd2517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1799,%dummy}, %rd2589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1800}, %rd2589;
	}
	shf.r.wrap.b32 	%r1801, %r1800, %r1799, 28;
	shf.r.wrap.b32 	%r1802, %r1799, %r1800, 28;
	mov.b64 	%rd2603, {%r1802, %r1801};
	shf.l.wrap.b32 	%r1803, %r1799, %r1800, 30;
	shf.l.wrap.b32 	%r1804, %r1800, %r1799, 30;
	mov.b64 	%rd2604, {%r1804, %r1803};
	xor.b64  	%rd2605, %rd2604, %rd2603;
	shf.l.wrap.b32 	%r1805, %r1799, %r1800, 25;
	shf.l.wrap.b32 	%r1806, %r1800, %r1799, 25;
	mov.b64 	%rd2606, {%r1806, %r1805};
	xor.b64  	%rd2607, %rd2605, %rd2606;
	xor.b64  	%rd2608, %rd2589, %rd2541;
	xor.b64  	%rd2609, %rd2589, %rd2565;
	and.b64  	%rd2610, %rd2609, %rd2608;
	xor.b64  	%rd2611, %rd2610, %rd2589;
	add.s64 	%rd2612, %rd2601, %rd2611;
	add.s64 	%rd2613, %rd2612, %rd2607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd2602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd2602;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 14;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 14;
	mov.b64 	%rd2614, {%r1810, %r1809};
	shf.r.wrap.b32 	%r1811, %r1808, %r1807, 18;
	shf.r.wrap.b32 	%r1812, %r1807, %r1808, 18;
	mov.b64 	%rd2615, {%r1812, %r1811};
	xor.b64  	%rd2616, %rd2615, %rd2614;
	shf.l.wrap.b32 	%r1813, %r1807, %r1808, 23;
	shf.l.wrap.b32 	%r1814, %r1808, %r1807, 23;
	mov.b64 	%rd2617, {%r1814, %r1813};
	xor.b64  	%rd2618, %rd2616, %rd2617;
	xor.b64  	%rd2619, %rd2578, %rd2554;
	and.b64  	%rd2620, %rd2602, %rd2619;
	xor.b64  	%rd2621, %rd2620, %rd2554;
	add.s64 	%rd2622, %rd2530, %rd2325;
	add.s64 	%rd2623, %rd2622, %rd2713;
	add.s64 	%rd2624, %rd2623, %rd2621;
	add.s64 	%rd2625, %rd2624, %rd2618;
	add.s64 	%rd94, %rd2625, %rd2541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2613;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 28;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 28;
	mov.b64 	%rd2626, {%r1818, %r1817};
	shf.l.wrap.b32 	%r1819, %r1815, %r1816, 30;
	shf.l.wrap.b32 	%r1820, %r1816, %r1815, 30;
	mov.b64 	%rd2627, {%r1820, %r1819};
	xor.b64  	%rd2628, %rd2627, %rd2626;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 25;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 25;
	mov.b64 	%rd2629, {%r1822, %r1821};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	xor.b64  	%rd2631, %rd2613, %rd2565;
	xor.b64  	%rd2632, %rd2613, %rd2589;
	and.b64  	%rd2633, %rd2632, %rd2631;
	xor.b64  	%rd2634, %rd2633, %rd2613;
	add.s64 	%rd2635, %rd2625, %rd2634;
	add.s64 	%rd95, %rd2635, %rd2630;
	cvt.u32.u64	%r1823, %rd94;
	setp.ne.s32	%p3, %r1823, %r3;
	@%p3 bra 	BB4_9;

	shr.u64 	%rd2636, %rd95, 32;
	cvt.u32.u64	%r1824, %rd2636;
	shr.u64 	%rd2637, %rd94, 32;
	cvt.u32.u64	%r1825, %rd2637;
	setp.eq.s32	%p4, %r1825, %r4;
	cvt.u32.u64	%r1826, %rd95;
	setp.eq.s32	%p5, %r1826, %r5;
	and.pred  	%p6, %p4, %p5;
	setp.eq.s32	%p7, %r1824, %r6;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB4_9;
	bra.uni 	BB4_5;

BB4_5:
	atom.global.add.u32 	%r1827, [%rd21], 1;
	setp.ne.s32	%p9, %r1827, 0;
	@%p9 bra 	BB4_9;

	ld.param.u32 	%r1833, [m01700_s04_param_31];
	atom.global.add.u32 	%r10, [%rd101], 1;
	setp.lt.u32	%p10, %r10, %r1833;
	@%p10 bra 	BB4_8;
	bra.uni 	BB4_7;

BB4_8:
	ld.param.u32 	%r1834, [m01700_s04_param_27];
	ld.param.u64 	%rd2715, [m01700_s04_param_14];
	ld.param.u32 	%r1831, [m01700_s04_param_32];
	mul.wide.u32 	%rd2638, %r10, 20;
	add.s64 	%rd2639, %rd2715, %rd2638;
	st.global.u32 	[%rd2639], %r1834;
	mov.u32 	%r1829, 0;
	st.global.u32 	[%rd2639+4], %r1829;
	st.global.u32 	[%rd2639+8], %r1831;
	st.global.u32 	[%rd2639+12], %r1;
	st.global.u32 	[%rd2639+16], %r1835;
	bra.uni 	BB4_9;

BB4_7:
	atom.global.add.u32 	%r1828, [%rd101], -1;

BB4_9:
	ld.param.u32 	%r1830, [m01700_s04_param_30];
	add.s32 	%r1835, %r1835, 1;
	setp.lt.u32	%p11, %r1835, %r1830;
	@%p11 bra 	BB4_3;

BB4_10:
	ret;
}

	// .globl	m01700_s08
.entry m01700_s08(
	.param .u64 .ptr .global .align 4 m01700_s08_param_0,
	.param .u64 .ptr .global .align 4 m01700_s08_param_1,
	.param .u64 .ptr .global .align 4 m01700_s08_param_2,
	.param .u64 .ptr .const .align 4 m01700_s08_param_3,
	.param .u64 .ptr .global .align 1 m01700_s08_param_4,
	.param .u64 .ptr .global .align 1 m01700_s08_param_5,
	.param .u64 .ptr .global .align 4 m01700_s08_param_6,
	.param .u64 .ptr .global .align 4 m01700_s08_param_7,
	.param .u64 .ptr .global .align 4 m01700_s08_param_8,
	.param .u64 .ptr .global .align 4 m01700_s08_param_9,
	.param .u64 .ptr .global .align 4 m01700_s08_param_10,
	.param .u64 .ptr .global .align 4 m01700_s08_param_11,
	.param .u64 .ptr .global .align 4 m01700_s08_param_12,
	.param .u64 .ptr .global .align 4 m01700_s08_param_13,
	.param .u64 .ptr .global .align 4 m01700_s08_param_14,
	.param .u64 .ptr .global .align 4 m01700_s08_param_15,
	.param .u64 .ptr .global .align 4 m01700_s08_param_16,
	.param .u64 .ptr .global .align 4 m01700_s08_param_17,
	.param .u64 .ptr .global .align 1 m01700_s08_param_18,
	.param .u64 .ptr .global .align 4 m01700_s08_param_19,
	.param .u64 .ptr .global .align 4 m01700_s08_param_20,
	.param .u64 .ptr .global .align 4 m01700_s08_param_21,
	.param .u64 .ptr .global .align 4 m01700_s08_param_22,
	.param .u64 .ptr .global .align 4 m01700_s08_param_23,
	.param .u32 m01700_s08_param_24,
	.param .u32 m01700_s08_param_25,
	.param .u32 m01700_s08_param_26,
	.param .u32 m01700_s08_param_27,
	.param .u32 m01700_s08_param_28,
	.param .u32 m01700_s08_param_29,
	.param .u32 m01700_s08_param_30,
	.param .u32 m01700_s08_param_31,
	.param .u32 m01700_s08_param_32,
	.param .u32 m01700_s08_param_33,
	.param .u64 m01700_s08_param_34
)
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<1852>;
	.reg .b64 	%rd<2732>;


	ld.param.u64 	%rd98, [m01700_s08_param_0];
	ld.param.u64 	%rd101, [m01700_s08_param_15];
	ld.param.u64 	%rd102, [m01700_s08_param_16];
	ld.param.u64 	%rd103, [m01700_s08_param_19];
	ld.param.u32 	%r13, [m01700_s08_param_30];
	ld.param.u32 	%r15, [m01700_s08_param_32];
	ld.param.u64 	%rd104, [m01700_s08_param_34];
	mov.b32	%r16, %envreg3;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %ntid.x;
	mad.lo.s32 	%r19, %r17, %r18, %r16;
	mov.u32 	%r20, %tid.x;
	add.s32 	%r1, %r19, %r20;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd104;
	@%p1 bra 	BB5_10;

	setp.eq.s32	%p2, %r13, 0;
	@%p2 bra 	BB5_10;

	mul.lo.s64 	%rd105, %rd1, 260;
	add.s64 	%rd106, %rd98, %rd105;
	ld.global.u32 	%r2, [%rd106];
	mul.wide.u32 	%rd107, %r15, 64;
	add.s64 	%rd108, %rd101, %rd107;
	ld.global.u32 	%r3, [%rd108+56];
	ld.global.u32 	%r4, [%rd108+60];
	ld.global.u32 	%r5, [%rd108+24];
	ld.global.u32 	%r6, [%rd108+28];
	ld.global.u32 	%r7, [%rd106+4];
	ld.global.u32 	%r22, [%rd106+8];
	ld.global.u32 	%r23, [%rd106+12];
	mov.b64	%rd109, {%r23, %r22};
	ld.global.u32 	%r24, [%rd106+16];
	ld.global.u32 	%r25, [%rd106+20];
	mov.b64	%rd2, {%r25, %r24};
	ld.global.u32 	%r26, [%rd106+24];
	ld.global.u32 	%r27, [%rd106+28];
	mov.b64	%rd110, {%r27, %r26};
	ld.global.u32 	%r28, [%rd106+60];
	mov.u32 	%r1851, 0;
	mov.b64	%rd3, {%r28, %r1851};
	mov.u64 	%rd111, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29,%dummy}, %rd111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r30}, %rd111;
	}
	shf.r.wrap.b32 	%r31, %r30, %r29, 18;
	shf.r.wrap.b32 	%r32, %r29, %r30, 18;
	mov.b64 	%rd112, {%r32, %r31};
	shf.r.wrap.b32 	%r33, %r30, %r29, 14;
	shf.r.wrap.b32 	%r34, %r29, %r30, 14;
	mov.b64 	%rd113, {%r34, %r33};
	xor.b64  	%rd114, %rd112, %rd113;
	shf.l.wrap.b32 	%r35, %r29, %r30, 23;
	shf.l.wrap.b32 	%r36, %r30, %r29, 23;
	mov.b64 	%rd115, {%r36, %r35};
	xor.b64  	%rd4, %rd114, %rd115;
	ld.const.u64 	%rd116, [k_sha512];
	add.s64 	%rd5, %rd116, 8891960152096595636;
	mov.u64 	%rd117, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37}, %rd117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38,%dummy}, %rd117;
	}
	shf.l.wrap.b32 	%r39, %r38, %r37, 30;
	shf.l.wrap.b32 	%r40, %r37, %r38, 30;
	mov.b64 	%rd118, {%r40, %r39};
	shf.r.wrap.b32 	%r41, %r37, %r38, 28;
	shf.r.wrap.b32 	%r42, %r38, %r37, 28;
	mov.b64 	%rd119, {%r42, %r41};
	xor.b64  	%rd120, %rd118, %rd119;
	shf.l.wrap.b32 	%r43, %r38, %r37, 25;
	shf.l.wrap.b32 	%r44, %r37, %r38, 25;
	mov.b64 	%rd121, {%r44, %r43};
	xor.b64  	%rd6, %rd120, %rd121;
	ld.const.u64 	%rd122, [k_sha512+8];
	add.s64 	%rd123, %rd109, %rd122;
	add.s64 	%rd7, %rd123, 2270897969802886507;
	ld.const.u64 	%rd124, [k_sha512+16];
	add.s64 	%rd125, %rd2, %rd124;
	add.s64 	%rd8, %rd125, -7276294671716946913;
	ld.const.u64 	%rd126, [k_sha512+24];
	add.s64 	%rd127, %rd110, %rd126;
	add.s64 	%rd9, %rd127, 5840696475078001361;
	mul.wide.u32 	%rd128, %r15, 4;
	add.s64 	%rd22, %rd102, %rd128;
	mov.u64 	%rd129, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r45}, %rd129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r46,%dummy}, %rd129;
	}
	shf.l.wrap.b32 	%r47, %r46, %r45, 3;
	shf.l.wrap.b32 	%r48, %r45, %r46, 3;
	mov.b64 	%rd130, {%r48, %r47};
	shf.r.wrap.b32 	%r49, %r45, %r46, 19;
	shf.r.wrap.b32 	%r50, %r46, %r45, 19;
	mov.b64 	%rd131, {%r50, %r49};
	xor.b64  	%rd23, %rd131, %rd130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r51,%dummy}, %rd109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r52}, %rd109;
	}
	shf.r.wrap.b32 	%r53, %r52, %r51, 1;
	shf.r.wrap.b32 	%r54, %r51, %r52, 1;
	mov.b64 	%rd132, {%r54, %r53};
	shf.r.wrap.b32 	%r55, %r52, %r51, 8;
	shf.r.wrap.b32 	%r56, %r51, %r52, 8;
	mov.b64 	%rd133, {%r56, %r55};
	shr.u64 	%rd134, %rd109, 7;
	xor.b64  	%rd135, %rd132, %rd134;
	xor.b64  	%rd24, %rd135, %rd133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r57,%dummy}, %rd3;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r58}, %rd3;
	}
	shf.r.wrap.b32 	%r59, %r58, %r57, 19;
	shf.r.wrap.b32 	%r60, %r57, %r58, 19;
	mov.b64 	%rd136, {%r60, %r59};
	shf.l.wrap.b32 	%r61, %r57, %r58, 3;
	shf.l.wrap.b32 	%r62, %r58, %r57, 3;
	mov.b64 	%rd137, {%r62, %r61};
	shr.u64 	%rd138, %rd3, 6;
	xor.b64  	%rd139, %rd136, %rd138;
	xor.b64  	%rd140, %rd139, %rd137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r63,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r64}, %rd2;
	}
	shf.r.wrap.b32 	%r65, %r64, %r63, 1;
	shf.r.wrap.b32 	%r66, %r63, %r64, 1;
	mov.b64 	%rd141, {%r66, %r65};
	shf.r.wrap.b32 	%r67, %r64, %r63, 8;
	shf.r.wrap.b32 	%r68, %r63, %r64, 8;
	mov.b64 	%rd142, {%r68, %r67};
	shr.u64 	%rd143, %rd2, 7;
	xor.b64  	%rd144, %rd141, %rd143;
	xor.b64  	%rd145, %rd144, %rd142;
	add.s64 	%rd146, %rd109, %rd140;
	add.s64 	%rd25, %rd146, %rd145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r69,%dummy}, %rd110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r70}, %rd110;
	}
	shf.r.wrap.b32 	%r71, %r70, %r69, 1;
	shf.r.wrap.b32 	%r72, %r69, %r70, 1;
	mov.b64 	%rd147, {%r72, %r71};
	shf.r.wrap.b32 	%r73, %r70, %r69, 8;
	shf.r.wrap.b32 	%r74, %r69, %r70, 8;
	mov.b64 	%rd148, {%r74, %r73};
	shr.u64 	%rd149, %rd110, 7;
	xor.b64  	%rd150, %rd147, %rd149;
	xor.b64  	%rd26, %rd150, %rd148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r75,%dummy}, %rd25;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r76}, %rd25;
	}
	shf.r.wrap.b32 	%r77, %r76, %r75, 19;
	shf.r.wrap.b32 	%r78, %r75, %r76, 19;
	mov.b64 	%rd151, {%r78, %r77};
	shf.l.wrap.b32 	%r79, %r75, %r76, 3;
	shf.l.wrap.b32 	%r80, %r76, %r75, 3;
	mov.b64 	%rd152, {%r80, %r79};
	shr.u64 	%rd153, %rd25, 6;
	xor.b64  	%rd154, %rd151, %rd153;
	xor.b64  	%rd155, %rd154, %rd152;
	shf.r.wrap.b32 	%r81, %r45, %r46, 8;
	shf.r.wrap.b32 	%r82, %r46, %r45, 8;
	mov.b64 	%rd156, {%r82, %r81};
	shf.r.wrap.b32 	%r83, %r45, %r46, 1;
	shf.r.wrap.b32 	%r84, %r46, %r45, 1;
	mov.b64 	%rd157, {%r84, %r83};
	xor.b64  	%rd27, %rd157, %rd156;
	add.s64 	%rd158, %rd110, %rd155;
	add.s64 	%rd28, %rd158, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r85,%dummy}, %rd28;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r86}, %rd28;
	}
	shf.r.wrap.b32 	%r87, %r86, %r85, 19;
	shf.r.wrap.b32 	%r88, %r85, %r86, 19;
	mov.b64 	%rd159, {%r88, %r87};
	shf.l.wrap.b32 	%r89, %r85, %r86, 3;
	shf.l.wrap.b32 	%r90, %r86, %r85, 3;
	mov.b64 	%rd160, {%r90, %r89};
	shr.u64 	%rd161, %rd28, 6;
	xor.b64  	%rd162, %rd159, %rd161;
	xor.b64  	%rd163, %rd162, %rd160;
	add.s64 	%rd29, %rd163, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r91,%dummy}, %rd29;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r92}, %rd29;
	}
	shf.r.wrap.b32 	%r93, %r92, %r91, 19;
	shf.r.wrap.b32 	%r94, %r91, %r92, 19;
	mov.b64 	%rd164, {%r94, %r93};
	shf.l.wrap.b32 	%r95, %r91, %r92, 3;
	shf.l.wrap.b32 	%r96, %r92, %r91, 3;
	mov.b64 	%rd165, {%r96, %r95};
	shr.u64 	%rd166, %rd29, 6;
	xor.b64  	%rd167, %rd164, %rd166;
	xor.b64  	%rd30, %rd167, %rd165;
	shf.r.wrap.b32 	%r97, %r58, %r57, 1;
	shf.r.wrap.b32 	%r98, %r57, %r58, 1;
	mov.b64 	%rd168, {%r98, %r97};
	shf.r.wrap.b32 	%r99, %r58, %r57, 8;
	shf.r.wrap.b32 	%r100, %r57, %r58, 8;
	mov.b64 	%rd169, {%r100, %r99};
	shr.u64 	%rd170, %rd3, 7;
	xor.b64  	%rd171, %rd168, %rd170;
	xor.b64  	%rd31, %rd171, %rd169;
	shf.r.wrap.b32 	%r101, %r76, %r75, 1;
	shf.r.wrap.b32 	%r102, %r75, %r76, 1;
	mov.b64 	%rd172, {%r102, %r101};
	shf.r.wrap.b32 	%r103, %r76, %r75, 8;
	shf.r.wrap.b32 	%r104, %r75, %r76, 8;
	mov.b64 	%rd173, {%r104, %r103};
	shr.u64 	%rd174, %rd25, 7;
	xor.b64  	%rd175, %rd172, %rd174;
	xor.b64  	%rd48, %rd175, %rd173;
	shf.r.wrap.b32 	%r105, %r86, %r85, 1;
	shf.r.wrap.b32 	%r106, %r85, %r86, 1;
	mov.b64 	%rd176, {%r106, %r105};
	shf.r.wrap.b32 	%r107, %r86, %r85, 8;
	shf.r.wrap.b32 	%r108, %r85, %r86, 8;
	mov.b64 	%rd177, {%r108, %r107};
	shr.u64 	%rd178, %rd28, 7;
	xor.b64  	%rd179, %rd176, %rd178;
	xor.b64  	%rd49, %rd179, %rd177;
	shf.r.wrap.b32 	%r109, %r92, %r91, 1;
	shf.r.wrap.b32 	%r110, %r91, %r92, 1;
	mov.b64 	%rd180, {%r110, %r109};
	shf.r.wrap.b32 	%r111, %r92, %r91, 8;
	shf.r.wrap.b32 	%r112, %r91, %r92, 8;
	mov.b64 	%rd181, {%r112, %r111};
	shr.u64 	%rd182, %rd29, 7;
	xor.b64  	%rd183, %rd180, %rd182;
	xor.b64  	%rd50, %rd183, %rd181;

BB5_3:
	mov.u32 	%r1848, 0;
	mov.b64	%rd2730, {%r28, %r1848};
	ld.const.u64 	%rd2729, [k_sha512+608];
	ld.const.u64 	%rd2728, [k_sha512+600];
	ld.const.u64 	%rd2727, [k_sha512+592];
	ld.const.u64 	%rd2726, [k_sha512+584];
	ld.const.u64 	%rd2725, [k_sha512+576];
	ld.const.u64 	%rd2724, [k_sha512+568];
	ld.const.u64 	%rd2723, [k_sha512+560];
	ld.const.u64 	%rd2722, [k_sha512+552];
	ld.const.u64 	%rd2721, [k_sha512+544];
	ld.const.u64 	%rd2720, [k_sha512+536];
	ld.const.u64 	%rd2719, [k_sha512+528];
	ld.const.u64 	%rd2718, [k_sha512+520];
	ld.const.u64 	%rd2717, [k_sha512+512];
	ld.const.u64 	%rd2716, [k_sha512+504];
	ld.const.u64 	%rd2715, [k_sha512+496];
	ld.const.u64 	%rd2714, [k_sha512+488];
	ld.const.u64 	%rd2713, [k_sha512+480];
	ld.const.u64 	%rd2712, [k_sha512+472];
	ld.const.u64 	%rd2711, [k_sha512+464];
	ld.const.u64 	%rd2710, [k_sha512+456];
	ld.const.u64 	%rd2709, [k_sha512+448];
	ld.const.u64 	%rd2708, [k_sha512+440];
	ld.const.u64 	%rd2707, [k_sha512+432];
	ld.const.u64 	%rd2706, [k_sha512+424];
	ld.const.u64 	%rd2705, [k_sha512+416];
	ld.const.u64 	%rd2704, [k_sha512+408];
	ld.const.u64 	%rd2703, [k_sha512+400];
	ld.const.u64 	%rd2702, [k_sha512+392];
	ld.const.u64 	%rd2701, [k_sha512+384];
	ld.const.u64 	%rd2700, [k_sha512+376];
	ld.const.u64 	%rd2699, [k_sha512+368];
	ld.const.u64 	%rd2698, [k_sha512+360];
	ld.const.u64 	%rd2697, [k_sha512+352];
	ld.const.u64 	%rd2696, [k_sha512+344];
	ld.const.u64 	%rd2695, [k_sha512+336];
	ld.const.u64 	%rd2694, [k_sha512+328];
	ld.const.u64 	%rd2693, [k_sha512+320];
	ld.const.u64 	%rd2692, [k_sha512+312];
	ld.const.u64 	%rd2691, [k_sha512+304];
	ld.const.u64 	%rd2690, [k_sha512+296];
	ld.const.u64 	%rd2689, [k_sha512+288];
	ld.const.u64 	%rd2688, [k_sha512+280];
	ld.const.u64 	%rd2687, [k_sha512+272];
	ld.const.u64 	%rd2686, [k_sha512+264];
	ld.const.u64 	%rd2685, [k_sha512+256];
	ld.const.u64 	%rd2684, [k_sha512+248];
	ld.const.u64 	%rd2683, [k_sha512+240];
	ld.const.u64 	%rd2682, [k_sha512+232];
	ld.const.u64 	%rd2681, [k_sha512+224];
	ld.const.u64 	%rd2680, [k_sha512+216];
	ld.const.u64 	%rd2679, [k_sha512+208];
	ld.const.u64 	%rd2678, [k_sha512+200];
	ld.const.u64 	%rd2677, [k_sha512+192];
	ld.const.u64 	%rd2676, [k_sha512+184];
	ld.const.u64 	%rd2675, [k_sha512+176];
	ld.const.u64 	%rd2674, [k_sha512+168];
	ld.const.u64 	%rd2673, [k_sha512+160];
	ld.const.u64 	%rd2672, [k_sha512+152];
	ld.const.u64 	%rd2671, [k_sha512+144];
	ld.const.u64 	%rd2670, [k_sha512+136];
	ld.const.u64 	%rd2669, [k_sha512+128];
	ld.const.u64 	%rd2668, [k_sha512+120];
	ld.const.u64 	%rd2667, [k_sha512+112];
	ld.const.u64 	%rd2666, [k_sha512+104];
	ld.const.u64 	%rd2665, [k_sha512+96];
	ld.const.u64 	%rd2664, [k_sha512+88];
	ld.const.u64 	%rd2663, [k_sha512+80];
	ld.const.u64 	%rd2662, [k_sha512+72];
	ld.const.u64 	%rd2661, [k_sha512+64];
	ld.const.u64 	%rd2660, [k_sha512+56];
	ld.const.u64 	%rd2659, [k_sha512+48];
	ld.const.u64 	%rd2658, [k_sha512+40];
	ld.const.u64 	%rd2657, [k_sha512+32];
	ld.param.u64 	%rd2656, [m01700_s08_param_3];
	mul.wide.u32 	%rd184, %r1851, 4;
	add.s64 	%rd185, %rd2656, %rd184;
	ld.const.u32 	%r113, [%rd185];
	or.b32  	%r114, %r113, %r2;
	mov.b64	%rd186, {%r7, %r114};
	add.s64 	%rd187, %rd5, %rd186;
	add.s64 	%rd188, %rd187, %rd4;
	add.s64 	%rd189, %rd188, -6534734903238641935;
	add.s64 	%rd190, %rd188, %rd6;
	add.s64 	%rd191, %rd190, 4210837510808201515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r115,%dummy}, %rd189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r116}, %rd189;
	}
	shf.r.wrap.b32 	%r117, %r116, %r115, 14;
	shf.r.wrap.b32 	%r118, %r115, %r116, 14;
	mov.b64 	%rd192, {%r118, %r117};
	shf.r.wrap.b32 	%r119, %r116, %r115, 18;
	shf.r.wrap.b32 	%r120, %r115, %r116, 18;
	mov.b64 	%rd193, {%r120, %r119};
	xor.b64  	%rd194, %rd193, %rd192;
	shf.l.wrap.b32 	%r121, %r115, %r116, 23;
	shf.l.wrap.b32 	%r122, %r116, %r115, 23;
	mov.b64 	%rd195, {%r122, %r121};
	xor.b64  	%rd196, %rd194, %rd195;
	and.b64  	%rd197, %rd189, -3887949035690463538;
	xor.b64  	%rd198, %rd197, -7276294671716946913;
	add.s64 	%rd199, %rd7, %rd198;
	add.s64 	%rd200, %rd199, %rd196;
	add.s64 	%rd201, %rd200, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r123,%dummy}, %rd191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r124}, %rd191;
	}
	shf.r.wrap.b32 	%r125, %r124, %r123, 28;
	shf.r.wrap.b32 	%r126, %r123, %r124, 28;
	mov.b64 	%rd202, {%r126, %r125};
	shf.l.wrap.b32 	%r127, %r123, %r124, 30;
	shf.l.wrap.b32 	%r128, %r124, %r123, 30;
	mov.b64 	%rd203, {%r128, %r127};
	xor.b64  	%rd204, %rd203, %rd202;
	shf.l.wrap.b32 	%r129, %r123, %r124, 25;
	shf.l.wrap.b32 	%r130, %r124, %r123, 25;
	mov.b64 	%rd205, {%r130, %r129};
	xor.b64  	%rd206, %rd204, %rd205;
	xor.b64  	%rd207, %rd191, -4942790177534073029;
	xor.b64  	%rd208, %rd191, 7640891576956012808;
	and.b64  	%rd209, %rd208, %rd207;
	xor.b64  	%rd210, %rd209, %rd191;
	add.s64 	%rd211, %rd200, %rd210;
	add.s64 	%rd212, %rd211, %rd206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r131,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r132}, %rd201;
	}
	shf.r.wrap.b32 	%r133, %r132, %r131, 14;
	shf.r.wrap.b32 	%r134, %r131, %r132, 14;
	mov.b64 	%rd213, {%r134, %r133};
	shf.r.wrap.b32 	%r135, %r132, %r131, 18;
	shf.r.wrap.b32 	%r136, %r131, %r132, 18;
	mov.b64 	%rd214, {%r136, %r135};
	xor.b64  	%rd215, %rd214, %rd213;
	shf.l.wrap.b32 	%r137, %r131, %r132, 23;
	shf.l.wrap.b32 	%r138, %r132, %r131, 23;
	mov.b64 	%rd216, {%r138, %r137};
	xor.b64  	%rd217, %rd215, %rd216;
	xor.b64  	%rd218, %rd189, 5840696475078001361;
	and.b64  	%rd219, %rd201, %rd218;
	xor.b64  	%rd220, %rd219, 5840696475078001361;
	add.s64 	%rd221, %rd8, %rd220;
	add.s64 	%rd222, %rd221, %rd217;
	add.s64 	%rd223, %rd222, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r139,%dummy}, %rd212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd212;
	}
	shf.r.wrap.b32 	%r141, %r140, %r139, 28;
	shf.r.wrap.b32 	%r142, %r139, %r140, 28;
	mov.b64 	%rd224, {%r142, %r141};
	shf.l.wrap.b32 	%r143, %r139, %r140, 30;
	shf.l.wrap.b32 	%r144, %r140, %r139, 30;
	mov.b64 	%rd225, {%r144, %r143};
	xor.b64  	%rd226, %rd225, %rd224;
	shf.l.wrap.b32 	%r145, %r139, %r140, 25;
	shf.l.wrap.b32 	%r146, %r140, %r139, 25;
	mov.b64 	%rd227, {%r146, %r145};
	xor.b64  	%rd228, %rd226, %rd227;
	xor.b64  	%rd229, %rd212, 7640891576956012808;
	xor.b64  	%rd230, %rd212, %rd191;
	and.b64  	%rd231, %rd230, %rd229;
	xor.b64  	%rd232, %rd231, %rd212;
	add.s64 	%rd233, %rd222, %rd232;
	add.s64 	%rd234, %rd233, %rd228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r147,%dummy}, %rd223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r148}, %rd223;
	}
	shf.r.wrap.b32 	%r149, %r148, %r147, 14;
	shf.r.wrap.b32 	%r150, %r147, %r148, 14;
	mov.b64 	%rd235, {%r150, %r149};
	shf.r.wrap.b32 	%r151, %r148, %r147, 18;
	shf.r.wrap.b32 	%r152, %r147, %r148, 18;
	mov.b64 	%rd236, {%r152, %r151};
	xor.b64  	%rd237, %rd236, %rd235;
	shf.l.wrap.b32 	%r153, %r147, %r148, 23;
	shf.l.wrap.b32 	%r154, %r148, %r147, 23;
	mov.b64 	%rd238, {%r154, %r153};
	xor.b64  	%rd239, %rd237, %rd238;
	xor.b64  	%rd240, %rd201, %rd189;
	and.b64  	%rd241, %rd223, %rd240;
	xor.b64  	%rd242, %rd241, %rd189;
	add.s64 	%rd243, %rd9, %rd242;
	add.s64 	%rd244, %rd243, %rd239;
	add.s64 	%rd245, %rd244, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r155,%dummy}, %rd234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r156}, %rd234;
	}
	shf.r.wrap.b32 	%r157, %r156, %r155, 28;
	shf.r.wrap.b32 	%r158, %r155, %r156, 28;
	mov.b64 	%rd246, {%r158, %r157};
	shf.l.wrap.b32 	%r159, %r155, %r156, 30;
	shf.l.wrap.b32 	%r160, %r156, %r155, 30;
	mov.b64 	%rd247, {%r160, %r159};
	xor.b64  	%rd248, %rd247, %rd246;
	shf.l.wrap.b32 	%r161, %r155, %r156, 25;
	shf.l.wrap.b32 	%r162, %r156, %r155, 25;
	mov.b64 	%rd249, {%r162, %r161};
	xor.b64  	%rd250, %rd248, %rd249;
	xor.b64  	%rd251, %rd234, %rd191;
	xor.b64  	%rd252, %rd234, %rd212;
	and.b64  	%rd253, %rd252, %rd251;
	xor.b64  	%rd254, %rd253, %rd234;
	add.s64 	%rd255, %rd244, %rd254;
	add.s64 	%rd256, %rd255, %rd250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r163,%dummy}, %rd245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r164}, %rd245;
	}
	shf.r.wrap.b32 	%r165, %r164, %r163, 14;
	shf.r.wrap.b32 	%r166, %r163, %r164, 14;
	mov.b64 	%rd257, {%r166, %r165};
	shf.r.wrap.b32 	%r167, %r164, %r163, 18;
	shf.r.wrap.b32 	%r168, %r163, %r164, 18;
	mov.b64 	%rd258, {%r168, %r167};
	xor.b64  	%rd259, %rd258, %rd257;
	shf.l.wrap.b32 	%r169, %r163, %r164, 23;
	shf.l.wrap.b32 	%r170, %r164, %r163, 23;
	mov.b64 	%rd260, {%r170, %r169};
	xor.b64  	%rd261, %rd259, %rd260;
	xor.b64  	%rd262, %rd223, %rd201;
	and.b64  	%rd263, %rd245, %rd262;
	xor.b64  	%rd264, %rd263, %rd201;
	add.s64 	%rd265, %rd2657, %rd189;
	add.s64 	%rd266, %rd265, %rd264;
	add.s64 	%rd267, %rd266, %rd261;
	add.s64 	%rd268, %rd267, %rd191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r171,%dummy}, %rd256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r172}, %rd256;
	}
	shf.r.wrap.b32 	%r173, %r172, %r171, 28;
	shf.r.wrap.b32 	%r174, %r171, %r172, 28;
	mov.b64 	%rd269, {%r174, %r173};
	shf.l.wrap.b32 	%r175, %r171, %r172, 30;
	shf.l.wrap.b32 	%r176, %r172, %r171, 30;
	mov.b64 	%rd270, {%r176, %r175};
	xor.b64  	%rd271, %rd270, %rd269;
	shf.l.wrap.b32 	%r177, %r171, %r172, 25;
	shf.l.wrap.b32 	%r178, %r172, %r171, 25;
	mov.b64 	%rd272, {%r178, %r177};
	xor.b64  	%rd273, %rd271, %rd272;
	xor.b64  	%rd274, %rd256, %rd212;
	xor.b64  	%rd275, %rd256, %rd234;
	and.b64  	%rd276, %rd275, %rd274;
	xor.b64  	%rd277, %rd276, %rd256;
	add.s64 	%rd278, %rd267, %rd277;
	add.s64 	%rd279, %rd278, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r179,%dummy}, %rd268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r180}, %rd268;
	}
	shf.r.wrap.b32 	%r181, %r180, %r179, 14;
	shf.r.wrap.b32 	%r182, %r179, %r180, 14;
	mov.b64 	%rd280, {%r182, %r181};
	shf.r.wrap.b32 	%r183, %r180, %r179, 18;
	shf.r.wrap.b32 	%r184, %r179, %r180, 18;
	mov.b64 	%rd281, {%r184, %r183};
	xor.b64  	%rd282, %rd281, %rd280;
	shf.l.wrap.b32 	%r185, %r179, %r180, 23;
	shf.l.wrap.b32 	%r186, %r180, %r179, 23;
	mov.b64 	%rd283, {%r186, %r185};
	xor.b64  	%rd284, %rd282, %rd283;
	xor.b64  	%rd285, %rd245, %rd223;
	and.b64  	%rd286, %rd268, %rd285;
	xor.b64  	%rd287, %rd286, %rd223;
	add.s64 	%rd288, %rd2658, %rd201;
	add.s64 	%rd289, %rd288, %rd287;
	add.s64 	%rd290, %rd289, %rd284;
	add.s64 	%rd291, %rd290, %rd212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r187,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r188}, %rd279;
	}
	shf.r.wrap.b32 	%r189, %r188, %r187, 28;
	shf.r.wrap.b32 	%r190, %r187, %r188, 28;
	mov.b64 	%rd292, {%r190, %r189};
	shf.l.wrap.b32 	%r191, %r187, %r188, 30;
	shf.l.wrap.b32 	%r192, %r188, %r187, 30;
	mov.b64 	%rd293, {%r192, %r191};
	xor.b64  	%rd294, %rd293, %rd292;
	shf.l.wrap.b32 	%r193, %r187, %r188, 25;
	shf.l.wrap.b32 	%r194, %r188, %r187, 25;
	mov.b64 	%rd295, {%r194, %r193};
	xor.b64  	%rd296, %rd294, %rd295;
	xor.b64  	%rd297, %rd279, %rd234;
	xor.b64  	%rd298, %rd279, %rd256;
	and.b64  	%rd299, %rd298, %rd297;
	xor.b64  	%rd300, %rd299, %rd279;
	add.s64 	%rd301, %rd290, %rd300;
	add.s64 	%rd302, %rd301, %rd296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r195,%dummy}, %rd291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r196}, %rd291;
	}
	shf.r.wrap.b32 	%r197, %r196, %r195, 14;
	shf.r.wrap.b32 	%r198, %r195, %r196, 14;
	mov.b64 	%rd303, {%r198, %r197};
	shf.r.wrap.b32 	%r199, %r196, %r195, 18;
	shf.r.wrap.b32 	%r200, %r195, %r196, 18;
	mov.b64 	%rd304, {%r200, %r199};
	xor.b64  	%rd305, %rd304, %rd303;
	shf.l.wrap.b32 	%r201, %r195, %r196, 23;
	shf.l.wrap.b32 	%r202, %r196, %r195, 23;
	mov.b64 	%rd306, {%r202, %r201};
	xor.b64  	%rd307, %rd305, %rd306;
	xor.b64  	%rd308, %rd268, %rd245;
	and.b64  	%rd309, %rd291, %rd308;
	xor.b64  	%rd310, %rd309, %rd245;
	add.s64 	%rd311, %rd2659, %rd223;
	add.s64 	%rd312, %rd311, %rd310;
	add.s64 	%rd313, %rd312, %rd307;
	add.s64 	%rd314, %rd313, %rd234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r203,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r204}, %rd302;
	}
	shf.r.wrap.b32 	%r205, %r204, %r203, 28;
	shf.r.wrap.b32 	%r206, %r203, %r204, 28;
	mov.b64 	%rd315, {%r206, %r205};
	shf.l.wrap.b32 	%r207, %r203, %r204, 30;
	shf.l.wrap.b32 	%r208, %r204, %r203, 30;
	mov.b64 	%rd316, {%r208, %r207};
	xor.b64  	%rd317, %rd316, %rd315;
	shf.l.wrap.b32 	%r209, %r203, %r204, 25;
	shf.l.wrap.b32 	%r210, %r204, %r203, 25;
	mov.b64 	%rd318, {%r210, %r209};
	xor.b64  	%rd319, %rd317, %rd318;
	xor.b64  	%rd320, %rd302, %rd256;
	xor.b64  	%rd321, %rd302, %rd279;
	and.b64  	%rd322, %rd321, %rd320;
	xor.b64  	%rd323, %rd322, %rd302;
	add.s64 	%rd324, %rd313, %rd323;
	add.s64 	%rd325, %rd324, %rd319;
	add.s64 	%rd326, %rd2660, %rd245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r212}, %rd314;
	}
	shf.r.wrap.b32 	%r213, %r212, %r211, 14;
	shf.r.wrap.b32 	%r214, %r211, %r212, 14;
	mov.b64 	%rd327, {%r214, %r213};
	shf.r.wrap.b32 	%r215, %r212, %r211, 18;
	shf.r.wrap.b32 	%r216, %r211, %r212, 18;
	mov.b64 	%rd328, {%r216, %r215};
	xor.b64  	%rd329, %rd328, %rd327;
	shf.l.wrap.b32 	%r217, %r211, %r212, 23;
	shf.l.wrap.b32 	%r218, %r212, %r211, 23;
	mov.b64 	%rd330, {%r218, %r217};
	xor.b64  	%rd331, %rd329, %rd330;
	xor.b64  	%rd332, %rd291, %rd268;
	and.b64  	%rd333, %rd314, %rd332;
	xor.b64  	%rd334, %rd333, %rd268;
	add.s64 	%rd335, %rd326, %rd334;
	add.s64 	%rd336, %rd335, %rd331;
	add.s64 	%rd337, %rd336, %rd256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r219,%dummy}, %rd325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r220}, %rd325;
	}
	shf.r.wrap.b32 	%r221, %r220, %r219, 28;
	shf.r.wrap.b32 	%r222, %r219, %r220, 28;
	mov.b64 	%rd338, {%r222, %r221};
	shf.l.wrap.b32 	%r223, %r219, %r220, 30;
	shf.l.wrap.b32 	%r224, %r220, %r219, 30;
	mov.b64 	%rd339, {%r224, %r223};
	xor.b64  	%rd340, %rd339, %rd338;
	shf.l.wrap.b32 	%r225, %r219, %r220, 25;
	shf.l.wrap.b32 	%r226, %r220, %r219, 25;
	mov.b64 	%rd341, {%r226, %r225};
	xor.b64  	%rd342, %rd340, %rd341;
	xor.b64  	%rd343, %rd325, %rd279;
	xor.b64  	%rd344, %rd325, %rd302;
	and.b64  	%rd345, %rd344, %rd343;
	xor.b64  	%rd346, %rd345, %rd325;
	add.s64 	%rd347, %rd336, %rd346;
	add.s64 	%rd348, %rd347, %rd342;
	add.s64 	%rd349, %rd2661, %rd268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r227,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r228}, %rd337;
	}
	shf.r.wrap.b32 	%r229, %r228, %r227, 14;
	shf.r.wrap.b32 	%r230, %r227, %r228, 14;
	mov.b64 	%rd350, {%r230, %r229};
	shf.r.wrap.b32 	%r231, %r228, %r227, 18;
	shf.r.wrap.b32 	%r232, %r227, %r228, 18;
	mov.b64 	%rd351, {%r232, %r231};
	xor.b64  	%rd352, %rd351, %rd350;
	shf.l.wrap.b32 	%r233, %r227, %r228, 23;
	shf.l.wrap.b32 	%r234, %r228, %r227, 23;
	mov.b64 	%rd353, {%r234, %r233};
	xor.b64  	%rd354, %rd352, %rd353;
	xor.b64  	%rd355, %rd314, %rd291;
	and.b64  	%rd356, %rd337, %rd355;
	xor.b64  	%rd357, %rd356, %rd291;
	add.s64 	%rd358, %rd349, %rd357;
	add.s64 	%rd359, %rd358, %rd354;
	add.s64 	%rd360, %rd359, %rd279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r235,%dummy}, %rd348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r236}, %rd348;
	}
	shf.r.wrap.b32 	%r237, %r236, %r235, 28;
	shf.r.wrap.b32 	%r238, %r235, %r236, 28;
	mov.b64 	%rd361, {%r238, %r237};
	shf.l.wrap.b32 	%r239, %r235, %r236, 30;
	shf.l.wrap.b32 	%r240, %r236, %r235, 30;
	mov.b64 	%rd362, {%r240, %r239};
	xor.b64  	%rd363, %rd362, %rd361;
	shf.l.wrap.b32 	%r241, %r235, %r236, 25;
	shf.l.wrap.b32 	%r242, %r236, %r235, 25;
	mov.b64 	%rd364, {%r242, %r241};
	xor.b64  	%rd365, %rd363, %rd364;
	xor.b64  	%rd366, %rd348, %rd302;
	xor.b64  	%rd367, %rd348, %rd325;
	and.b64  	%rd368, %rd367, %rd366;
	xor.b64  	%rd369, %rd368, %rd348;
	add.s64 	%rd370, %rd359, %rd369;
	add.s64 	%rd371, %rd370, %rd365;
	add.s64 	%rd372, %rd2662, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r243,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r244}, %rd360;
	}
	shf.r.wrap.b32 	%r245, %r244, %r243, 14;
	shf.r.wrap.b32 	%r246, %r243, %r244, 14;
	mov.b64 	%rd373, {%r246, %r245};
	shf.r.wrap.b32 	%r247, %r244, %r243, 18;
	shf.r.wrap.b32 	%r248, %r243, %r244, 18;
	mov.b64 	%rd374, {%r248, %r247};
	xor.b64  	%rd375, %rd374, %rd373;
	shf.l.wrap.b32 	%r249, %r243, %r244, 23;
	shf.l.wrap.b32 	%r250, %r244, %r243, 23;
	mov.b64 	%rd376, {%r250, %r249};
	xor.b64  	%rd377, %rd375, %rd376;
	xor.b64  	%rd378, %rd337, %rd314;
	and.b64  	%rd379, %rd360, %rd378;
	xor.b64  	%rd380, %rd379, %rd314;
	add.s64 	%rd381, %rd372, %rd380;
	add.s64 	%rd382, %rd381, %rd377;
	add.s64 	%rd383, %rd382, %rd302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r251,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r252}, %rd371;
	}
	shf.r.wrap.b32 	%r253, %r252, %r251, 28;
	shf.r.wrap.b32 	%r254, %r251, %r252, 28;
	mov.b64 	%rd384, {%r254, %r253};
	shf.l.wrap.b32 	%r255, %r251, %r252, 30;
	shf.l.wrap.b32 	%r256, %r252, %r251, 30;
	mov.b64 	%rd385, {%r256, %r255};
	xor.b64  	%rd386, %rd385, %rd384;
	shf.l.wrap.b32 	%r257, %r251, %r252, 25;
	shf.l.wrap.b32 	%r258, %r252, %r251, 25;
	mov.b64 	%rd387, {%r258, %r257};
	xor.b64  	%rd388, %rd386, %rd387;
	xor.b64  	%rd389, %rd371, %rd325;
	xor.b64  	%rd390, %rd371, %rd348;
	and.b64  	%rd391, %rd390, %rd389;
	xor.b64  	%rd392, %rd391, %rd371;
	add.s64 	%rd393, %rd382, %rd392;
	add.s64 	%rd394, %rd393, %rd388;
	add.s64 	%rd395, %rd2663, %rd314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r259,%dummy}, %rd383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r260}, %rd383;
	}
	shf.r.wrap.b32 	%r261, %r260, %r259, 14;
	shf.r.wrap.b32 	%r262, %r259, %r260, 14;
	mov.b64 	%rd396, {%r262, %r261};
	shf.r.wrap.b32 	%r263, %r260, %r259, 18;
	shf.r.wrap.b32 	%r264, %r259, %r260, 18;
	mov.b64 	%rd397, {%r264, %r263};
	xor.b64  	%rd398, %rd397, %rd396;
	shf.l.wrap.b32 	%r265, %r259, %r260, 23;
	shf.l.wrap.b32 	%r266, %r260, %r259, 23;
	mov.b64 	%rd399, {%r266, %r265};
	xor.b64  	%rd400, %rd398, %rd399;
	xor.b64  	%rd401, %rd360, %rd337;
	and.b64  	%rd402, %rd383, %rd401;
	xor.b64  	%rd403, %rd402, %rd337;
	add.s64 	%rd404, %rd395, %rd403;
	add.s64 	%rd405, %rd404, %rd400;
	add.s64 	%rd406, %rd405, %rd325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r267,%dummy}, %rd394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r268}, %rd394;
	}
	shf.r.wrap.b32 	%r269, %r268, %r267, 28;
	shf.r.wrap.b32 	%r270, %r267, %r268, 28;
	mov.b64 	%rd407, {%r270, %r269};
	shf.l.wrap.b32 	%r271, %r267, %r268, 30;
	shf.l.wrap.b32 	%r272, %r268, %r267, 30;
	mov.b64 	%rd408, {%r272, %r271};
	xor.b64  	%rd409, %rd408, %rd407;
	shf.l.wrap.b32 	%r273, %r267, %r268, 25;
	shf.l.wrap.b32 	%r274, %r268, %r267, 25;
	mov.b64 	%rd410, {%r274, %r273};
	xor.b64  	%rd411, %rd409, %rd410;
	xor.b64  	%rd412, %rd394, %rd348;
	xor.b64  	%rd413, %rd394, %rd371;
	and.b64  	%rd414, %rd413, %rd412;
	xor.b64  	%rd415, %rd414, %rd394;
	add.s64 	%rd416, %rd405, %rd415;
	add.s64 	%rd417, %rd416, %rd411;
	add.s64 	%rd418, %rd2664, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r275,%dummy}, %rd406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd406;
	}
	shf.r.wrap.b32 	%r277, %r276, %r275, 14;
	shf.r.wrap.b32 	%r278, %r275, %r276, 14;
	mov.b64 	%rd419, {%r278, %r277};
	shf.r.wrap.b32 	%r279, %r276, %r275, 18;
	shf.r.wrap.b32 	%r280, %r275, %r276, 18;
	mov.b64 	%rd420, {%r280, %r279};
	xor.b64  	%rd421, %rd420, %rd419;
	shf.l.wrap.b32 	%r281, %r275, %r276, 23;
	shf.l.wrap.b32 	%r282, %r276, %r275, 23;
	mov.b64 	%rd422, {%r282, %r281};
	xor.b64  	%rd423, %rd421, %rd422;
	xor.b64  	%rd424, %rd383, %rd360;
	and.b64  	%rd425, %rd406, %rd424;
	xor.b64  	%rd426, %rd425, %rd360;
	add.s64 	%rd427, %rd418, %rd426;
	add.s64 	%rd428, %rd427, %rd423;
	add.s64 	%rd429, %rd428, %rd348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r284}, %rd417;
	}
	shf.r.wrap.b32 	%r285, %r284, %r283, 28;
	shf.r.wrap.b32 	%r286, %r283, %r284, 28;
	mov.b64 	%rd430, {%r286, %r285};
	shf.l.wrap.b32 	%r287, %r283, %r284, 30;
	shf.l.wrap.b32 	%r288, %r284, %r283, 30;
	mov.b64 	%rd431, {%r288, %r287};
	xor.b64  	%rd432, %rd431, %rd430;
	shf.l.wrap.b32 	%r289, %r283, %r284, 25;
	shf.l.wrap.b32 	%r290, %r284, %r283, 25;
	mov.b64 	%rd433, {%r290, %r289};
	xor.b64  	%rd434, %rd432, %rd433;
	xor.b64  	%rd435, %rd417, %rd371;
	xor.b64  	%rd436, %rd417, %rd394;
	and.b64  	%rd437, %rd436, %rd435;
	xor.b64  	%rd438, %rd437, %rd417;
	add.s64 	%rd439, %rd428, %rd438;
	add.s64 	%rd440, %rd439, %rd434;
	add.s64 	%rd441, %rd2665, %rd360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r291,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r292}, %rd429;
	}
	shf.r.wrap.b32 	%r293, %r292, %r291, 14;
	shf.r.wrap.b32 	%r294, %r291, %r292, 14;
	mov.b64 	%rd442, {%r294, %r293};
	shf.r.wrap.b32 	%r295, %r292, %r291, 18;
	shf.r.wrap.b32 	%r296, %r291, %r292, 18;
	mov.b64 	%rd443, {%r296, %r295};
	xor.b64  	%rd444, %rd443, %rd442;
	shf.l.wrap.b32 	%r297, %r291, %r292, 23;
	shf.l.wrap.b32 	%r298, %r292, %r291, 23;
	mov.b64 	%rd445, {%r298, %r297};
	xor.b64  	%rd446, %rd444, %rd445;
	xor.b64  	%rd447, %rd406, %rd383;
	and.b64  	%rd448, %rd429, %rd447;
	xor.b64  	%rd449, %rd448, %rd383;
	add.s64 	%rd450, %rd441, %rd449;
	add.s64 	%rd451, %rd450, %rd446;
	add.s64 	%rd452, %rd451, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd440;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 28;
	shf.r.wrap.b32 	%r302, %r299, %r300, 28;
	mov.b64 	%rd453, {%r302, %r301};
	shf.l.wrap.b32 	%r303, %r299, %r300, 30;
	shf.l.wrap.b32 	%r304, %r300, %r299, 30;
	mov.b64 	%rd454, {%r304, %r303};
	xor.b64  	%rd455, %rd454, %rd453;
	shf.l.wrap.b32 	%r305, %r299, %r300, 25;
	shf.l.wrap.b32 	%r306, %r300, %r299, 25;
	mov.b64 	%rd456, {%r306, %r305};
	xor.b64  	%rd457, %rd455, %rd456;
	xor.b64  	%rd458, %rd440, %rd394;
	xor.b64  	%rd459, %rd440, %rd417;
	and.b64  	%rd460, %rd459, %rd458;
	xor.b64  	%rd461, %rd460, %rd440;
	add.s64 	%rd462, %rd451, %rd461;
	add.s64 	%rd463, %rd462, %rd457;
	add.s64 	%rd464, %rd2666, %rd383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd452;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 14;
	shf.r.wrap.b32 	%r310, %r307, %r308, 14;
	mov.b64 	%rd465, {%r310, %r309};
	shf.r.wrap.b32 	%r311, %r308, %r307, 18;
	shf.r.wrap.b32 	%r312, %r307, %r308, 18;
	mov.b64 	%rd466, {%r312, %r311};
	xor.b64  	%rd467, %rd466, %rd465;
	shf.l.wrap.b32 	%r313, %r307, %r308, 23;
	shf.l.wrap.b32 	%r314, %r308, %r307, 23;
	mov.b64 	%rd468, {%r314, %r313};
	xor.b64  	%rd469, %rd467, %rd468;
	xor.b64  	%rd470, %rd429, %rd406;
	and.b64  	%rd471, %rd452, %rd470;
	xor.b64  	%rd472, %rd471, %rd406;
	add.s64 	%rd473, %rd464, %rd472;
	add.s64 	%rd474, %rd473, %rd469;
	add.s64 	%rd475, %rd474, %rd394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r315,%dummy}, %rd463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd463;
	}
	shf.r.wrap.b32 	%r317, %r316, %r315, 28;
	shf.r.wrap.b32 	%r318, %r315, %r316, 28;
	mov.b64 	%rd476, {%r318, %r317};
	shf.l.wrap.b32 	%r319, %r315, %r316, 30;
	shf.l.wrap.b32 	%r320, %r316, %r315, 30;
	mov.b64 	%rd477, {%r320, %r319};
	xor.b64  	%rd478, %rd477, %rd476;
	shf.l.wrap.b32 	%r321, %r315, %r316, 25;
	shf.l.wrap.b32 	%r322, %r316, %r315, 25;
	mov.b64 	%rd479, {%r322, %r321};
	xor.b64  	%rd480, %rd478, %rd479;
	xor.b64  	%rd481, %rd463, %rd417;
	xor.b64  	%rd482, %rd463, %rd440;
	and.b64  	%rd483, %rd482, %rd481;
	xor.b64  	%rd484, %rd483, %rd463;
	add.s64 	%rd485, %rd474, %rd484;
	add.s64 	%rd486, %rd485, %rd480;
	add.s64 	%rd487, %rd2667, %rd406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd475;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 14;
	shf.r.wrap.b32 	%r326, %r323, %r324, 14;
	mov.b64 	%rd488, {%r326, %r325};
	shf.r.wrap.b32 	%r327, %r324, %r323, 18;
	shf.r.wrap.b32 	%r328, %r323, %r324, 18;
	mov.b64 	%rd489, {%r328, %r327};
	xor.b64  	%rd490, %rd489, %rd488;
	shf.l.wrap.b32 	%r329, %r323, %r324, 23;
	shf.l.wrap.b32 	%r330, %r324, %r323, 23;
	mov.b64 	%rd491, {%r330, %r329};
	xor.b64  	%rd492, %rd490, %rd491;
	xor.b64  	%rd493, %rd452, %rd429;
	and.b64  	%rd494, %rd475, %rd493;
	xor.b64  	%rd495, %rd494, %rd429;
	add.s64 	%rd496, %rd487, %rd495;
	add.s64 	%rd497, %rd496, %rd492;
	add.s64 	%rd498, %rd497, %rd417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd486;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 28;
	shf.r.wrap.b32 	%r334, %r331, %r332, 28;
	mov.b64 	%rd499, {%r334, %r333};
	shf.l.wrap.b32 	%r335, %r331, %r332, 30;
	shf.l.wrap.b32 	%r336, %r332, %r331, 30;
	mov.b64 	%rd500, {%r336, %r335};
	xor.b64  	%rd501, %rd500, %rd499;
	shf.l.wrap.b32 	%r337, %r331, %r332, 25;
	shf.l.wrap.b32 	%r338, %r332, %r331, 25;
	mov.b64 	%rd502, {%r338, %r337};
	xor.b64  	%rd503, %rd501, %rd502;
	xor.b64  	%rd504, %rd486, %rd440;
	xor.b64  	%rd505, %rd486, %rd463;
	and.b64  	%rd506, %rd505, %rd504;
	xor.b64  	%rd507, %rd506, %rd486;
	add.s64 	%rd508, %rd497, %rd507;
	add.s64 	%rd509, %rd508, %rd503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r339,%dummy}, %rd498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r340}, %rd498;
	}
	shf.r.wrap.b32 	%r341, %r340, %r339, 14;
	shf.r.wrap.b32 	%r342, %r339, %r340, 14;
	mov.b64 	%rd510, {%r342, %r341};
	shf.r.wrap.b32 	%r343, %r340, %r339, 18;
	shf.r.wrap.b32 	%r344, %r339, %r340, 18;
	mov.b64 	%rd511, {%r344, %r343};
	xor.b64  	%rd512, %rd511, %rd510;
	shf.l.wrap.b32 	%r345, %r339, %r340, 23;
	shf.l.wrap.b32 	%r346, %r340, %r339, 23;
	mov.b64 	%rd513, {%r346, %r345};
	xor.b64  	%rd514, %rd512, %rd513;
	xor.b64  	%rd515, %rd475, %rd452;
	and.b64  	%rd516, %rd498, %rd515;
	xor.b64  	%rd517, %rd516, %rd452;
	add.s64 	%rd518, %rd429, %rd2730;
	add.s64 	%rd519, %rd518, %rd2668;
	add.s64 	%rd520, %rd519, %rd517;
	add.s64 	%rd521, %rd520, %rd514;
	add.s64 	%rd522, %rd521, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd509;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 28;
	shf.r.wrap.b32 	%r350, %r347, %r348, 28;
	mov.b64 	%rd523, {%r350, %r349};
	shf.l.wrap.b32 	%r351, %r347, %r348, 30;
	shf.l.wrap.b32 	%r352, %r348, %r347, 30;
	mov.b64 	%rd524, {%r352, %r351};
	xor.b64  	%rd525, %rd524, %rd523;
	shf.l.wrap.b32 	%r353, %r347, %r348, 25;
	shf.l.wrap.b32 	%r354, %r348, %r347, 25;
	mov.b64 	%rd526, {%r354, %r353};
	xor.b64  	%rd527, %rd525, %rd526;
	xor.b64  	%rd528, %rd509, %rd463;
	xor.b64  	%rd529, %rd509, %rd486;
	and.b64  	%rd530, %rd529, %rd528;
	xor.b64  	%rd531, %rd530, %rd509;
	add.s64 	%rd532, %rd521, %rd531;
	add.s64 	%rd533, %rd532, %rd527;
	add.s64 	%rd534, %rd186, %rd23;
	add.s64 	%rd535, %rd534, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd535;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 19;
	shf.r.wrap.b32 	%r358, %r355, %r356, 19;
	mov.b64 	%rd536, {%r358, %r357};
	shf.l.wrap.b32 	%r359, %r355, %r356, 3;
	shf.l.wrap.b32 	%r360, %r356, %r355, 3;
	mov.b64 	%rd537, {%r360, %r359};
	shr.u64 	%rd538, %rd535, 6;
	xor.b64  	%rd539, %rd536, %rd538;
	xor.b64  	%rd540, %rd539, %rd537;
	add.s64 	%rd541, %rd2, %rd540;
	add.s64 	%rd542, %rd541, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd542;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 19;
	shf.r.wrap.b32 	%r364, %r361, %r362, 19;
	mov.b64 	%rd543, {%r364, %r363};
	shf.l.wrap.b32 	%r365, %r361, %r362, 3;
	shf.l.wrap.b32 	%r366, %r362, %r361, 3;
	mov.b64 	%rd544, {%r366, %r365};
	shr.u64 	%rd545, %rd542, 6;
	xor.b64  	%rd546, %rd543, %rd545;
	xor.b64  	%rd547, %rd546, %rd544;
	add.s64 	%rd548, %rd547, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd548;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 19;
	shf.r.wrap.b32 	%r370, %r367, %r368, 19;
	mov.b64 	%rd549, {%r370, %r369};
	shf.l.wrap.b32 	%r371, %r367, %r368, 3;
	shf.l.wrap.b32 	%r372, %r368, %r367, 3;
	mov.b64 	%rd550, {%r372, %r371};
	shr.u64 	%rd551, %rd548, 6;
	xor.b64  	%rd552, %rd549, %rd551;
	xor.b64  	%rd553, %rd552, %rd550;
	add.s64 	%rd554, %rd2730, %rd553;
	add.s64 	%rd555, %rd554, %rd27;
	add.s64 	%rd556, %rd535, %rd30;
	add.s64 	%rd557, %rd556, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd555;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 19;
	shf.r.wrap.b32 	%r376, %r373, %r374, 19;
	mov.b64 	%rd558, {%r376, %r375};
	shf.l.wrap.b32 	%r377, %r373, %r374, 3;
	shf.l.wrap.b32 	%r378, %r374, %r373, 3;
	mov.b64 	%rd559, {%r378, %r377};
	shr.u64 	%rd560, %rd555, 6;
	xor.b64  	%rd561, %rd558, %rd560;
	xor.b64  	%rd562, %rd561, %rd559;
	add.s64 	%rd563, %rd25, %rd562;
	add.s64 	%rd564, %rd563, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd557;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 19;
	shf.r.wrap.b32 	%r382, %r379, %r380, 19;
	mov.b64 	%rd565, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 3;
	shf.l.wrap.b32 	%r384, %r380, %r379, 3;
	mov.b64 	%rd566, {%r384, %r383};
	shr.u64 	%rd567, %rd557, 6;
	xor.b64  	%rd568, %rd565, %rd567;
	xor.b64  	%rd569, %rd568, %rd566;
	add.s64 	%rd570, %rd542, %rd569;
	add.s64 	%rd571, %rd570, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd564;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 19;
	shf.r.wrap.b32 	%r388, %r385, %r386, 19;
	mov.b64 	%rd572, {%r388, %r387};
	shf.l.wrap.b32 	%r389, %r385, %r386, 3;
	shf.l.wrap.b32 	%r390, %r386, %r385, 3;
	mov.b64 	%rd573, {%r390, %r389};
	shr.u64 	%rd574, %rd564, 6;
	xor.b64  	%rd575, %rd572, %rd574;
	xor.b64  	%rd576, %rd575, %rd573;
	add.s64 	%rd577, %rd28, %rd576;
	add.s64 	%rd578, %rd577, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd571;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 19;
	shf.r.wrap.b32 	%r394, %r391, %r392, 19;
	mov.b64 	%rd579, {%r394, %r393};
	shf.l.wrap.b32 	%r395, %r391, %r392, 3;
	shf.l.wrap.b32 	%r396, %r392, %r391, 3;
	mov.b64 	%rd580, {%r396, %r395};
	shr.u64 	%rd581, %rd571, 6;
	xor.b64  	%rd582, %rd579, %rd581;
	xor.b64  	%rd583, %rd582, %rd580;
	add.s64 	%rd584, %rd548, %rd583;
	add.s64 	%rd585, %rd584, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd578;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 19;
	shf.r.wrap.b32 	%r400, %r397, %r398, 19;
	mov.b64 	%rd586, {%r400, %r399};
	shf.l.wrap.b32 	%r401, %r397, %r398, 3;
	shf.l.wrap.b32 	%r402, %r398, %r397, 3;
	mov.b64 	%rd587, {%r402, %r401};
	shr.u64 	%rd588, %rd578, 6;
	xor.b64  	%rd589, %rd586, %rd588;
	xor.b64  	%rd590, %rd589, %rd587;
	add.s64 	%rd591, %rd29, %rd590;
	add.s64 	%rd592, %rd591, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd585;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 19;
	shf.r.wrap.b32 	%r406, %r403, %r404, 19;
	mov.b64 	%rd593, {%r406, %r405};
	shf.l.wrap.b32 	%r407, %r403, %r404, 3;
	shf.l.wrap.b32 	%r408, %r404, %r403, 3;
	mov.b64 	%rd594, {%r408, %r407};
	shr.u64 	%rd595, %rd585, 6;
	xor.b64  	%rd596, %rd593, %rd595;
	xor.b64  	%rd597, %rd596, %rd594;
	add.s64 	%rd598, %rd555, %rd597;
	add.s64 	%rd599, %rd598, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd592;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 19;
	shf.r.wrap.b32 	%r412, %r409, %r410, 19;
	mov.b64 	%rd600, {%r412, %r411};
	shf.l.wrap.b32 	%r413, %r409, %r410, 3;
	shf.l.wrap.b32 	%r414, %r410, %r409, 3;
	mov.b64 	%rd601, {%r414, %r413};
	shr.u64 	%rd602, %rd592, 6;
	xor.b64  	%rd603, %rd600, %rd602;
	xor.b64  	%rd604, %rd603, %rd601;
	add.s64 	%rd605, %rd557, %rd604;
	add.s64 	%rd606, %rd605, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd599;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 19;
	shf.r.wrap.b32 	%r418, %r415, %r416, 19;
	mov.b64 	%rd607, {%r418, %r417};
	shf.l.wrap.b32 	%r419, %r415, %r416, 3;
	shf.l.wrap.b32 	%r420, %r416, %r415, 3;
	mov.b64 	%rd608, {%r420, %r419};
	shr.u64 	%rd609, %rd599, 6;
	xor.b64  	%rd610, %rd607, %rd609;
	xor.b64  	%rd611, %rd610, %rd608;
	shf.r.wrap.b32 	%r421, %r356, %r355, 1;
	shf.r.wrap.b32 	%r422, %r355, %r356, 1;
	mov.b64 	%rd612, {%r422, %r421};
	shf.r.wrap.b32 	%r423, %r356, %r355, 8;
	shf.r.wrap.b32 	%r424, %r355, %r356, 8;
	mov.b64 	%rd613, {%r424, %r423};
	shr.u64 	%rd614, %rd535, 7;
	xor.b64  	%rd615, %rd612, %rd614;
	xor.b64  	%rd616, %rd615, %rd613;
	add.s64 	%rd617, %rd564, %rd2730;
	add.s64 	%rd618, %rd617, %rd611;
	add.s64 	%rd619, %rd618, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r425,%dummy}, %rd522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r426}, %rd522;
	}
	shf.r.wrap.b32 	%r427, %r426, %r425, 14;
	shf.r.wrap.b32 	%r428, %r425, %r426, 14;
	mov.b64 	%rd620, {%r428, %r427};
	shf.r.wrap.b32 	%r429, %r426, %r425, 18;
	shf.r.wrap.b32 	%r430, %r425, %r426, 18;
	mov.b64 	%rd621, {%r430, %r429};
	xor.b64  	%rd622, %rd621, %rd620;
	shf.l.wrap.b32 	%r431, %r425, %r426, 23;
	shf.l.wrap.b32 	%r432, %r426, %r425, 23;
	mov.b64 	%rd623, {%r432, %r431};
	xor.b64  	%rd624, %rd622, %rd623;
	xor.b64  	%rd625, %rd475, %rd498;
	and.b64  	%rd626, %rd625, %rd522;
	xor.b64  	%rd627, %rd626, %rd475;
	add.s64 	%rd628, %rd627, %rd452;
	add.s64 	%rd629, %rd628, %rd535;
	add.s64 	%rd630, %rd629, %rd2669;
	add.s64 	%rd631, %rd630, %rd624;
	add.s64 	%rd632, %rd631, %rd463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r433,%dummy}, %rd533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r434}, %rd533;
	}
	shf.r.wrap.b32 	%r435, %r434, %r433, 28;
	shf.r.wrap.b32 	%r436, %r433, %r434, 28;
	mov.b64 	%rd633, {%r436, %r435};
	shf.l.wrap.b32 	%r437, %r433, %r434, 30;
	shf.l.wrap.b32 	%r438, %r434, %r433, 30;
	mov.b64 	%rd634, {%r438, %r437};
	xor.b64  	%rd635, %rd634, %rd633;
	shf.l.wrap.b32 	%r439, %r433, %r434, 25;
	shf.l.wrap.b32 	%r440, %r434, %r433, 25;
	mov.b64 	%rd636, {%r440, %r439};
	xor.b64  	%rd637, %rd635, %rd636;
	xor.b64  	%rd638, %rd533, %rd486;
	xor.b64  	%rd639, %rd533, %rd509;
	and.b64  	%rd640, %rd639, %rd638;
	xor.b64  	%rd641, %rd640, %rd533;
	add.s64 	%rd642, %rd631, %rd641;
	add.s64 	%rd643, %rd642, %rd637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd632;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 14;
	shf.r.wrap.b32 	%r444, %r441, %r442, 14;
	mov.b64 	%rd644, {%r444, %r443};
	shf.r.wrap.b32 	%r445, %r442, %r441, 18;
	shf.r.wrap.b32 	%r446, %r441, %r442, 18;
	mov.b64 	%rd645, {%r446, %r445};
	xor.b64  	%rd646, %rd645, %rd644;
	shf.l.wrap.b32 	%r447, %r441, %r442, 23;
	shf.l.wrap.b32 	%r448, %r442, %r441, 23;
	mov.b64 	%rd647, {%r448, %r447};
	xor.b64  	%rd648, %rd646, %rd647;
	xor.b64  	%rd649, %rd498, %rd522;
	and.b64  	%rd650, %rd632, %rd649;
	xor.b64  	%rd651, %rd650, %rd498;
	add.s64 	%rd652, %rd25, %rd475;
	add.s64 	%rd653, %rd652, %rd2670;
	add.s64 	%rd654, %rd653, %rd651;
	add.s64 	%rd655, %rd654, %rd648;
	add.s64 	%rd656, %rd655, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd643;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 28;
	shf.r.wrap.b32 	%r452, %r449, %r450, 28;
	mov.b64 	%rd657, {%r452, %r451};
	shf.l.wrap.b32 	%r453, %r449, %r450, 30;
	shf.l.wrap.b32 	%r454, %r450, %r449, 30;
	mov.b64 	%rd658, {%r454, %r453};
	xor.b64  	%rd659, %rd658, %rd657;
	shf.l.wrap.b32 	%r455, %r449, %r450, 25;
	shf.l.wrap.b32 	%r456, %r450, %r449, 25;
	mov.b64 	%rd660, {%r456, %r455};
	xor.b64  	%rd661, %rd659, %rd660;
	xor.b64  	%rd662, %rd643, %rd509;
	xor.b64  	%rd663, %rd643, %rd533;
	and.b64  	%rd664, %rd663, %rd662;
	xor.b64  	%rd665, %rd664, %rd643;
	add.s64 	%rd666, %rd655, %rd665;
	add.s64 	%rd667, %rd666, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd656;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 14;
	shf.r.wrap.b32 	%r460, %r457, %r458, 14;
	mov.b64 	%rd668, {%r460, %r459};
	shf.r.wrap.b32 	%r461, %r458, %r457, 18;
	shf.r.wrap.b32 	%r462, %r457, %r458, 18;
	mov.b64 	%rd669, {%r462, %r461};
	xor.b64  	%rd670, %rd669, %rd668;
	shf.l.wrap.b32 	%r463, %r457, %r458, 23;
	shf.l.wrap.b32 	%r464, %r458, %r457, 23;
	mov.b64 	%rd671, {%r464, %r463};
	xor.b64  	%rd672, %rd670, %rd671;
	xor.b64  	%rd673, %rd632, %rd522;
	and.b64  	%rd674, %rd656, %rd673;
	xor.b64  	%rd675, %rd674, %rd522;
	add.s64 	%rd676, %rd542, %rd498;
	add.s64 	%rd677, %rd676, %rd2671;
	add.s64 	%rd678, %rd677, %rd675;
	add.s64 	%rd679, %rd678, %rd672;
	add.s64 	%rd680, %rd679, %rd509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r465,%dummy}, %rd667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r466}, %rd667;
	}
	shf.r.wrap.b32 	%r467, %r466, %r465, 28;
	shf.r.wrap.b32 	%r468, %r465, %r466, 28;
	mov.b64 	%rd681, {%r468, %r467};
	shf.l.wrap.b32 	%r469, %r465, %r466, 30;
	shf.l.wrap.b32 	%r470, %r466, %r465, 30;
	mov.b64 	%rd682, {%r470, %r469};
	xor.b64  	%rd683, %rd682, %rd681;
	shf.l.wrap.b32 	%r471, %r465, %r466, 25;
	shf.l.wrap.b32 	%r472, %r466, %r465, 25;
	mov.b64 	%rd684, {%r472, %r471};
	xor.b64  	%rd685, %rd683, %rd684;
	xor.b64  	%rd686, %rd667, %rd533;
	xor.b64  	%rd687, %rd667, %rd643;
	and.b64  	%rd688, %rd687, %rd686;
	xor.b64  	%rd689, %rd688, %rd667;
	add.s64 	%rd690, %rd679, %rd689;
	add.s64 	%rd691, %rd690, %rd685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd680;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 14;
	shf.r.wrap.b32 	%r476, %r473, %r474, 14;
	mov.b64 	%rd692, {%r476, %r475};
	shf.r.wrap.b32 	%r477, %r474, %r473, 18;
	shf.r.wrap.b32 	%r478, %r473, %r474, 18;
	mov.b64 	%rd693, {%r478, %r477};
	xor.b64  	%rd694, %rd693, %rd692;
	shf.l.wrap.b32 	%r479, %r473, %r474, 23;
	shf.l.wrap.b32 	%r480, %r474, %r473, 23;
	mov.b64 	%rd695, {%r480, %r479};
	xor.b64  	%rd696, %rd694, %rd695;
	xor.b64  	%rd697, %rd656, %rd632;
	and.b64  	%rd698, %rd680, %rd697;
	xor.b64  	%rd699, %rd698, %rd632;
	add.s64 	%rd700, %rd28, %rd522;
	add.s64 	%rd701, %rd700, %rd2672;
	add.s64 	%rd702, %rd701, %rd699;
	add.s64 	%rd703, %rd702, %rd696;
	add.s64 	%rd704, %rd703, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd691;
	}
	shf.r.wrap.b32 	%r483, %r482, %r481, 28;
	shf.r.wrap.b32 	%r484, %r481, %r482, 28;
	mov.b64 	%rd705, {%r484, %r483};
	shf.l.wrap.b32 	%r485, %r481, %r482, 30;
	shf.l.wrap.b32 	%r486, %r482, %r481, 30;
	mov.b64 	%rd706, {%r486, %r485};
	xor.b64  	%rd707, %rd706, %rd705;
	shf.l.wrap.b32 	%r487, %r481, %r482, 25;
	shf.l.wrap.b32 	%r488, %r482, %r481, 25;
	mov.b64 	%rd708, {%r488, %r487};
	xor.b64  	%rd709, %rd707, %rd708;
	xor.b64  	%rd710, %rd691, %rd643;
	xor.b64  	%rd711, %rd691, %rd667;
	and.b64  	%rd712, %rd711, %rd710;
	xor.b64  	%rd713, %rd712, %rd691;
	add.s64 	%rd714, %rd703, %rd713;
	add.s64 	%rd715, %rd714, %rd709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r489,%dummy}, %rd704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r490}, %rd704;
	}
	shf.r.wrap.b32 	%r491, %r490, %r489, 14;
	shf.r.wrap.b32 	%r492, %r489, %r490, 14;
	mov.b64 	%rd716, {%r492, %r491};
	shf.r.wrap.b32 	%r493, %r490, %r489, 18;
	shf.r.wrap.b32 	%r494, %r489, %r490, 18;
	mov.b64 	%rd717, {%r494, %r493};
	xor.b64  	%rd718, %rd717, %rd716;
	shf.l.wrap.b32 	%r495, %r489, %r490, 23;
	shf.l.wrap.b32 	%r496, %r490, %r489, 23;
	mov.b64 	%rd719, {%r496, %r495};
	xor.b64  	%rd720, %rd718, %rd719;
	xor.b64  	%rd721, %rd680, %rd656;
	and.b64  	%rd722, %rd704, %rd721;
	xor.b64  	%rd723, %rd722, %rd656;
	add.s64 	%rd724, %rd632, %rd548;
	add.s64 	%rd725, %rd724, %rd2673;
	add.s64 	%rd726, %rd725, %rd723;
	add.s64 	%rd727, %rd726, %rd720;
	add.s64 	%rd728, %rd727, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r498}, %rd715;
	}
	shf.r.wrap.b32 	%r499, %r498, %r497, 28;
	shf.r.wrap.b32 	%r500, %r497, %r498, 28;
	mov.b64 	%rd729, {%r500, %r499};
	shf.l.wrap.b32 	%r501, %r497, %r498, 30;
	shf.l.wrap.b32 	%r502, %r498, %r497, 30;
	mov.b64 	%rd730, {%r502, %r501};
	xor.b64  	%rd731, %rd730, %rd729;
	shf.l.wrap.b32 	%r503, %r497, %r498, 25;
	shf.l.wrap.b32 	%r504, %r498, %r497, 25;
	mov.b64 	%rd732, {%r504, %r503};
	xor.b64  	%rd733, %rd731, %rd732;
	xor.b64  	%rd734, %rd715, %rd667;
	xor.b64  	%rd735, %rd715, %rd691;
	and.b64  	%rd736, %rd735, %rd734;
	xor.b64  	%rd737, %rd736, %rd715;
	add.s64 	%rd738, %rd727, %rd737;
	add.s64 	%rd739, %rd738, %rd733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd728;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 14;
	shf.r.wrap.b32 	%r508, %r505, %r506, 14;
	mov.b64 	%rd740, {%r508, %r507};
	shf.r.wrap.b32 	%r509, %r506, %r505, 18;
	shf.r.wrap.b32 	%r510, %r505, %r506, 18;
	mov.b64 	%rd741, {%r510, %r509};
	xor.b64  	%rd742, %rd741, %rd740;
	shf.l.wrap.b32 	%r511, %r505, %r506, 23;
	shf.l.wrap.b32 	%r512, %r506, %r505, 23;
	mov.b64 	%rd743, {%r512, %r511};
	xor.b64  	%rd744, %rd742, %rd743;
	xor.b64  	%rd745, %rd704, %rd680;
	and.b64  	%rd746, %rd728, %rd745;
	xor.b64  	%rd747, %rd746, %rd680;
	add.s64 	%rd748, %rd656, %rd29;
	add.s64 	%rd749, %rd748, %rd2674;
	add.s64 	%rd750, %rd749, %rd747;
	add.s64 	%rd751, %rd750, %rd744;
	add.s64 	%rd752, %rd751, %rd667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd739;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 28;
	shf.r.wrap.b32 	%r516, %r513, %r514, 28;
	mov.b64 	%rd753, {%r516, %r515};
	shf.l.wrap.b32 	%r517, %r513, %r514, 30;
	shf.l.wrap.b32 	%r518, %r514, %r513, 30;
	mov.b64 	%rd754, {%r518, %r517};
	xor.b64  	%rd755, %rd754, %rd753;
	shf.l.wrap.b32 	%r519, %r513, %r514, 25;
	shf.l.wrap.b32 	%r520, %r514, %r513, 25;
	mov.b64 	%rd756, {%r520, %r519};
	xor.b64  	%rd757, %rd755, %rd756;
	xor.b64  	%rd758, %rd739, %rd691;
	xor.b64  	%rd759, %rd739, %rd715;
	and.b64  	%rd760, %rd759, %rd758;
	xor.b64  	%rd761, %rd760, %rd739;
	add.s64 	%rd762, %rd751, %rd761;
	add.s64 	%rd763, %rd762, %rd757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r522}, %rd752;
	}
	shf.r.wrap.b32 	%r523, %r522, %r521, 14;
	shf.r.wrap.b32 	%r524, %r521, %r522, 14;
	mov.b64 	%rd764, {%r524, %r523};
	shf.r.wrap.b32 	%r525, %r522, %r521, 18;
	shf.r.wrap.b32 	%r526, %r521, %r522, 18;
	mov.b64 	%rd765, {%r526, %r525};
	xor.b64  	%rd766, %rd765, %rd764;
	shf.l.wrap.b32 	%r527, %r521, %r522, 23;
	shf.l.wrap.b32 	%r528, %r522, %r521, 23;
	mov.b64 	%rd767, {%r528, %r527};
	xor.b64  	%rd768, %rd766, %rd767;
	xor.b64  	%rd769, %rd728, %rd704;
	and.b64  	%rd770, %rd752, %rd769;
	xor.b64  	%rd771, %rd770, %rd704;
	add.s64 	%rd772, %rd680, %rd555;
	add.s64 	%rd773, %rd772, %rd2675;
	add.s64 	%rd774, %rd773, %rd771;
	add.s64 	%rd775, %rd774, %rd768;
	add.s64 	%rd776, %rd775, %rd691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd763;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 28;
	shf.r.wrap.b32 	%r532, %r529, %r530, 28;
	mov.b64 	%rd777, {%r532, %r531};
	shf.l.wrap.b32 	%r533, %r529, %r530, 30;
	shf.l.wrap.b32 	%r534, %r530, %r529, 30;
	mov.b64 	%rd778, {%r534, %r533};
	xor.b64  	%rd779, %rd778, %rd777;
	shf.l.wrap.b32 	%r535, %r529, %r530, 25;
	shf.l.wrap.b32 	%r536, %r530, %r529, 25;
	mov.b64 	%rd780, {%r536, %r535};
	xor.b64  	%rd781, %rd779, %rd780;
	xor.b64  	%rd782, %rd763, %rd715;
	xor.b64  	%rd783, %rd763, %rd739;
	and.b64  	%rd784, %rd783, %rd782;
	xor.b64  	%rd785, %rd784, %rd763;
	add.s64 	%rd786, %rd775, %rd785;
	add.s64 	%rd787, %rd786, %rd781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r537,%dummy}, %rd776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r538}, %rd776;
	}
	shf.r.wrap.b32 	%r539, %r538, %r537, 14;
	shf.r.wrap.b32 	%r540, %r537, %r538, 14;
	mov.b64 	%rd788, {%r540, %r539};
	shf.r.wrap.b32 	%r541, %r538, %r537, 18;
	shf.r.wrap.b32 	%r542, %r537, %r538, 18;
	mov.b64 	%rd789, {%r542, %r541};
	xor.b64  	%rd790, %rd789, %rd788;
	shf.l.wrap.b32 	%r543, %r537, %r538, 23;
	shf.l.wrap.b32 	%r544, %r538, %r537, 23;
	mov.b64 	%rd791, {%r544, %r543};
	xor.b64  	%rd792, %rd790, %rd791;
	xor.b64  	%rd793, %rd752, %rd728;
	and.b64  	%rd794, %rd776, %rd793;
	xor.b64  	%rd795, %rd794, %rd728;
	add.s64 	%rd796, %rd704, %rd557;
	add.s64 	%rd797, %rd796, %rd2676;
	add.s64 	%rd798, %rd797, %rd795;
	add.s64 	%rd799, %rd798, %rd792;
	add.s64 	%rd800, %rd799, %rd715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r545,%dummy}, %rd787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r546}, %rd787;
	}
	shf.r.wrap.b32 	%r547, %r546, %r545, 28;
	shf.r.wrap.b32 	%r548, %r545, %r546, 28;
	mov.b64 	%rd801, {%r548, %r547};
	shf.l.wrap.b32 	%r549, %r545, %r546, 30;
	shf.l.wrap.b32 	%r550, %r546, %r545, 30;
	mov.b64 	%rd802, {%r550, %r549};
	xor.b64  	%rd803, %rd802, %rd801;
	shf.l.wrap.b32 	%r551, %r545, %r546, 25;
	shf.l.wrap.b32 	%r552, %r546, %r545, 25;
	mov.b64 	%rd804, {%r552, %r551};
	xor.b64  	%rd805, %rd803, %rd804;
	xor.b64  	%rd806, %rd787, %rd739;
	xor.b64  	%rd807, %rd787, %rd763;
	and.b64  	%rd808, %rd807, %rd806;
	xor.b64  	%rd809, %rd808, %rd787;
	add.s64 	%rd810, %rd799, %rd809;
	add.s64 	%rd811, %rd810, %rd805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd800;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 14;
	shf.r.wrap.b32 	%r556, %r553, %r554, 14;
	mov.b64 	%rd812, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 18;
	shf.r.wrap.b32 	%r558, %r553, %r554, 18;
	mov.b64 	%rd813, {%r558, %r557};
	xor.b64  	%rd814, %rd813, %rd812;
	shf.l.wrap.b32 	%r559, %r553, %r554, 23;
	shf.l.wrap.b32 	%r560, %r554, %r553, 23;
	mov.b64 	%rd815, {%r560, %r559};
	xor.b64  	%rd816, %rd814, %rd815;
	xor.b64  	%rd817, %rd776, %rd752;
	and.b64  	%rd818, %rd800, %rd817;
	xor.b64  	%rd819, %rd818, %rd752;
	add.s64 	%rd820, %rd728, %rd564;
	add.s64 	%rd821, %rd820, %rd2677;
	add.s64 	%rd822, %rd821, %rd819;
	add.s64 	%rd823, %rd822, %rd816;
	add.s64 	%rd824, %rd823, %rd739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd811;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 28;
	shf.r.wrap.b32 	%r564, %r561, %r562, 28;
	mov.b64 	%rd825, {%r564, %r563};
	shf.l.wrap.b32 	%r565, %r561, %r562, 30;
	shf.l.wrap.b32 	%r566, %r562, %r561, 30;
	mov.b64 	%rd826, {%r566, %r565};
	xor.b64  	%rd827, %rd826, %rd825;
	shf.l.wrap.b32 	%r567, %r561, %r562, 25;
	shf.l.wrap.b32 	%r568, %r562, %r561, 25;
	mov.b64 	%rd828, {%r568, %r567};
	xor.b64  	%rd829, %rd827, %rd828;
	xor.b64  	%rd830, %rd811, %rd763;
	xor.b64  	%rd831, %rd811, %rd787;
	and.b64  	%rd832, %rd831, %rd830;
	xor.b64  	%rd833, %rd832, %rd811;
	add.s64 	%rd834, %rd823, %rd833;
	add.s64 	%rd835, %rd834, %rd829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd824;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 14;
	shf.r.wrap.b32 	%r572, %r569, %r570, 14;
	mov.b64 	%rd836, {%r572, %r571};
	shf.r.wrap.b32 	%r573, %r570, %r569, 18;
	shf.r.wrap.b32 	%r574, %r569, %r570, 18;
	mov.b64 	%rd837, {%r574, %r573};
	xor.b64  	%rd838, %rd837, %rd836;
	shf.l.wrap.b32 	%r575, %r569, %r570, 23;
	shf.l.wrap.b32 	%r576, %r570, %r569, 23;
	mov.b64 	%rd839, {%r576, %r575};
	xor.b64  	%rd840, %rd838, %rd839;
	xor.b64  	%rd841, %rd800, %rd776;
	and.b64  	%rd842, %rd824, %rd841;
	xor.b64  	%rd843, %rd842, %rd776;
	add.s64 	%rd844, %rd752, %rd571;
	add.s64 	%rd845, %rd844, %rd2678;
	add.s64 	%rd846, %rd845, %rd843;
	add.s64 	%rd847, %rd846, %rd840;
	add.s64 	%rd848, %rd847, %rd763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd835;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 28;
	shf.r.wrap.b32 	%r580, %r577, %r578, 28;
	mov.b64 	%rd849, {%r580, %r579};
	shf.l.wrap.b32 	%r581, %r577, %r578, 30;
	shf.l.wrap.b32 	%r582, %r578, %r577, 30;
	mov.b64 	%rd850, {%r582, %r581};
	xor.b64  	%rd851, %rd850, %rd849;
	shf.l.wrap.b32 	%r583, %r577, %r578, 25;
	shf.l.wrap.b32 	%r584, %r578, %r577, 25;
	mov.b64 	%rd852, {%r584, %r583};
	xor.b64  	%rd853, %rd851, %rd852;
	xor.b64  	%rd854, %rd835, %rd787;
	xor.b64  	%rd855, %rd835, %rd811;
	and.b64  	%rd856, %rd855, %rd854;
	xor.b64  	%rd857, %rd856, %rd835;
	add.s64 	%rd858, %rd847, %rd857;
	add.s64 	%rd859, %rd858, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r585,%dummy}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r586}, %rd848;
	}
	shf.r.wrap.b32 	%r587, %r586, %r585, 14;
	shf.r.wrap.b32 	%r588, %r585, %r586, 14;
	mov.b64 	%rd860, {%r588, %r587};
	shf.r.wrap.b32 	%r589, %r586, %r585, 18;
	shf.r.wrap.b32 	%r590, %r585, %r586, 18;
	mov.b64 	%rd861, {%r590, %r589};
	xor.b64  	%rd862, %rd861, %rd860;
	shf.l.wrap.b32 	%r591, %r585, %r586, 23;
	shf.l.wrap.b32 	%r592, %r586, %r585, 23;
	mov.b64 	%rd863, {%r592, %r591};
	xor.b64  	%rd864, %rd862, %rd863;
	xor.b64  	%rd865, %rd824, %rd800;
	and.b64  	%rd866, %rd848, %rd865;
	xor.b64  	%rd867, %rd866, %rd800;
	add.s64 	%rd868, %rd776, %rd578;
	add.s64 	%rd869, %rd868, %rd2679;
	add.s64 	%rd870, %rd869, %rd867;
	add.s64 	%rd871, %rd870, %rd864;
	add.s64 	%rd872, %rd871, %rd787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd859;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 28;
	shf.r.wrap.b32 	%r596, %r593, %r594, 28;
	mov.b64 	%rd873, {%r596, %r595};
	shf.l.wrap.b32 	%r597, %r593, %r594, 30;
	shf.l.wrap.b32 	%r598, %r594, %r593, 30;
	mov.b64 	%rd874, {%r598, %r597};
	xor.b64  	%rd875, %rd874, %rd873;
	shf.l.wrap.b32 	%r599, %r593, %r594, 25;
	shf.l.wrap.b32 	%r600, %r594, %r593, 25;
	mov.b64 	%rd876, {%r600, %r599};
	xor.b64  	%rd877, %rd875, %rd876;
	xor.b64  	%rd878, %rd859, %rd811;
	xor.b64  	%rd879, %rd859, %rd835;
	and.b64  	%rd880, %rd879, %rd878;
	xor.b64  	%rd881, %rd880, %rd859;
	add.s64 	%rd882, %rd871, %rd881;
	add.s64 	%rd883, %rd882, %rd877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd872;
	}
	shf.r.wrap.b32 	%r603, %r602, %r601, 14;
	shf.r.wrap.b32 	%r604, %r601, %r602, 14;
	mov.b64 	%rd884, {%r604, %r603};
	shf.r.wrap.b32 	%r605, %r602, %r601, 18;
	shf.r.wrap.b32 	%r606, %r601, %r602, 18;
	mov.b64 	%rd885, {%r606, %r605};
	xor.b64  	%rd886, %rd885, %rd884;
	shf.l.wrap.b32 	%r607, %r601, %r602, 23;
	shf.l.wrap.b32 	%r608, %r602, %r601, 23;
	mov.b64 	%rd887, {%r608, %r607};
	xor.b64  	%rd888, %rd886, %rd887;
	xor.b64  	%rd889, %rd848, %rd824;
	and.b64  	%rd890, %rd872, %rd889;
	xor.b64  	%rd891, %rd890, %rd824;
	add.s64 	%rd892, %rd800, %rd585;
	add.s64 	%rd893, %rd892, %rd2680;
	add.s64 	%rd894, %rd893, %rd891;
	add.s64 	%rd895, %rd894, %rd888;
	add.s64 	%rd896, %rd895, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd883;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 28;
	shf.r.wrap.b32 	%r612, %r609, %r610, 28;
	mov.b64 	%rd897, {%r612, %r611};
	shf.l.wrap.b32 	%r613, %r609, %r610, 30;
	shf.l.wrap.b32 	%r614, %r610, %r609, 30;
	mov.b64 	%rd898, {%r614, %r613};
	xor.b64  	%rd899, %rd898, %rd897;
	shf.l.wrap.b32 	%r615, %r609, %r610, 25;
	shf.l.wrap.b32 	%r616, %r610, %r609, 25;
	mov.b64 	%rd900, {%r616, %r615};
	xor.b64  	%rd901, %rd899, %rd900;
	xor.b64  	%rd902, %rd883, %rd835;
	xor.b64  	%rd903, %rd883, %rd859;
	and.b64  	%rd904, %rd903, %rd902;
	xor.b64  	%rd905, %rd904, %rd883;
	add.s64 	%rd906, %rd895, %rd905;
	add.s64 	%rd907, %rd906, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd896;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 14;
	shf.r.wrap.b32 	%r620, %r617, %r618, 14;
	mov.b64 	%rd908, {%r620, %r619};
	shf.r.wrap.b32 	%r621, %r618, %r617, 18;
	shf.r.wrap.b32 	%r622, %r617, %r618, 18;
	mov.b64 	%rd909, {%r622, %r621};
	xor.b64  	%rd910, %rd909, %rd908;
	shf.l.wrap.b32 	%r623, %r617, %r618, 23;
	shf.l.wrap.b32 	%r624, %r618, %r617, 23;
	mov.b64 	%rd911, {%r624, %r623};
	xor.b64  	%rd912, %rd910, %rd911;
	xor.b64  	%rd913, %rd872, %rd848;
	and.b64  	%rd914, %rd896, %rd913;
	xor.b64  	%rd915, %rd914, %rd848;
	add.s64 	%rd916, %rd824, %rd592;
	add.s64 	%rd917, %rd916, %rd2681;
	add.s64 	%rd918, %rd917, %rd915;
	add.s64 	%rd919, %rd918, %rd912;
	add.s64 	%rd920, %rd919, %rd835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd907;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 28;
	shf.r.wrap.b32 	%r628, %r625, %r626, 28;
	mov.b64 	%rd921, {%r628, %r627};
	shf.l.wrap.b32 	%r629, %r625, %r626, 30;
	shf.l.wrap.b32 	%r630, %r626, %r625, 30;
	mov.b64 	%rd922, {%r630, %r629};
	xor.b64  	%rd923, %rd922, %rd921;
	shf.l.wrap.b32 	%r631, %r625, %r626, 25;
	shf.l.wrap.b32 	%r632, %r626, %r625, 25;
	mov.b64 	%rd924, {%r632, %r631};
	xor.b64  	%rd925, %rd923, %rd924;
	xor.b64  	%rd926, %rd907, %rd859;
	xor.b64  	%rd927, %rd907, %rd883;
	and.b64  	%rd928, %rd927, %rd926;
	xor.b64  	%rd929, %rd928, %rd907;
	add.s64 	%rd930, %rd919, %rd929;
	add.s64 	%rd931, %rd930, %rd925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd920;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 14;
	shf.r.wrap.b32 	%r636, %r633, %r634, 14;
	mov.b64 	%rd932, {%r636, %r635};
	shf.r.wrap.b32 	%r637, %r634, %r633, 18;
	shf.r.wrap.b32 	%r638, %r633, %r634, 18;
	mov.b64 	%rd933, {%r638, %r637};
	xor.b64  	%rd934, %rd933, %rd932;
	shf.l.wrap.b32 	%r639, %r633, %r634, 23;
	shf.l.wrap.b32 	%r640, %r634, %r633, 23;
	mov.b64 	%rd935, {%r640, %r639};
	xor.b64  	%rd936, %rd934, %rd935;
	xor.b64  	%rd937, %rd896, %rd872;
	and.b64  	%rd938, %rd920, %rd937;
	xor.b64  	%rd939, %rd938, %rd872;
	add.s64 	%rd940, %rd848, %rd599;
	add.s64 	%rd941, %rd940, %rd2682;
	add.s64 	%rd942, %rd941, %rd939;
	add.s64 	%rd943, %rd942, %rd936;
	add.s64 	%rd944, %rd943, %rd859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd931;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 28;
	shf.r.wrap.b32 	%r644, %r641, %r642, 28;
	mov.b64 	%rd945, {%r644, %r643};
	shf.l.wrap.b32 	%r645, %r641, %r642, 30;
	shf.l.wrap.b32 	%r646, %r642, %r641, 30;
	mov.b64 	%rd946, {%r646, %r645};
	xor.b64  	%rd947, %rd946, %rd945;
	shf.l.wrap.b32 	%r647, %r641, %r642, 25;
	shf.l.wrap.b32 	%r648, %r642, %r641, 25;
	mov.b64 	%rd948, {%r648, %r647};
	xor.b64  	%rd949, %rd947, %rd948;
	xor.b64  	%rd950, %rd931, %rd883;
	xor.b64  	%rd951, %rd931, %rd907;
	and.b64  	%rd952, %rd951, %rd950;
	xor.b64  	%rd953, %rd952, %rd931;
	add.s64 	%rd954, %rd943, %rd953;
	add.s64 	%rd955, %rd954, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r650}, %rd944;
	}
	shf.r.wrap.b32 	%r651, %r650, %r649, 14;
	shf.r.wrap.b32 	%r652, %r649, %r650, 14;
	mov.b64 	%rd956, {%r652, %r651};
	shf.r.wrap.b32 	%r653, %r650, %r649, 18;
	shf.r.wrap.b32 	%r654, %r649, %r650, 18;
	mov.b64 	%rd957, {%r654, %r653};
	xor.b64  	%rd958, %rd957, %rd956;
	shf.l.wrap.b32 	%r655, %r649, %r650, 23;
	shf.l.wrap.b32 	%r656, %r650, %r649, 23;
	mov.b64 	%rd959, {%r656, %r655};
	xor.b64  	%rd960, %rd958, %rd959;
	xor.b64  	%rd961, %rd920, %rd896;
	and.b64  	%rd962, %rd944, %rd961;
	xor.b64  	%rd963, %rd962, %rd896;
	add.s64 	%rd964, %rd872, %rd606;
	add.s64 	%rd965, %rd964, %rd2683;
	add.s64 	%rd966, %rd965, %rd963;
	add.s64 	%rd967, %rd966, %rd960;
	add.s64 	%rd968, %rd967, %rd883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd955;
	}
	shf.r.wrap.b32 	%r659, %r658, %r657, 28;
	shf.r.wrap.b32 	%r660, %r657, %r658, 28;
	mov.b64 	%rd969, {%r660, %r659};
	shf.l.wrap.b32 	%r661, %r657, %r658, 30;
	shf.l.wrap.b32 	%r662, %r658, %r657, 30;
	mov.b64 	%rd970, {%r662, %r661};
	xor.b64  	%rd971, %rd970, %rd969;
	shf.l.wrap.b32 	%r663, %r657, %r658, 25;
	shf.l.wrap.b32 	%r664, %r658, %r657, 25;
	mov.b64 	%rd972, {%r664, %r663};
	xor.b64  	%rd973, %rd971, %rd972;
	xor.b64  	%rd974, %rd955, %rd907;
	xor.b64  	%rd975, %rd955, %rd931;
	and.b64  	%rd976, %rd975, %rd974;
	xor.b64  	%rd977, %rd976, %rd955;
	add.s64 	%rd978, %rd967, %rd977;
	add.s64 	%rd979, %rd978, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd968;
	}
	shf.r.wrap.b32 	%r667, %r666, %r665, 14;
	shf.r.wrap.b32 	%r668, %r665, %r666, 14;
	mov.b64 	%rd980, {%r668, %r667};
	shf.r.wrap.b32 	%r669, %r666, %r665, 18;
	shf.r.wrap.b32 	%r670, %r665, %r666, 18;
	mov.b64 	%rd981, {%r670, %r669};
	xor.b64  	%rd982, %rd981, %rd980;
	shf.l.wrap.b32 	%r671, %r665, %r666, 23;
	shf.l.wrap.b32 	%r672, %r666, %r665, 23;
	mov.b64 	%rd983, {%r672, %r671};
	xor.b64  	%rd984, %rd982, %rd983;
	xor.b64  	%rd985, %rd944, %rd920;
	and.b64  	%rd986, %rd968, %rd985;
	xor.b64  	%rd987, %rd986, %rd920;
	add.s64 	%rd988, %rd896, %rd619;
	add.s64 	%rd989, %rd988, %rd2684;
	add.s64 	%rd990, %rd989, %rd987;
	add.s64 	%rd991, %rd990, %rd984;
	add.s64 	%rd992, %rd991, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd979;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 28;
	shf.r.wrap.b32 	%r676, %r673, %r674, 28;
	mov.b64 	%rd993, {%r676, %r675};
	shf.l.wrap.b32 	%r677, %r673, %r674, 30;
	shf.l.wrap.b32 	%r678, %r674, %r673, 30;
	mov.b64 	%rd994, {%r678, %r677};
	xor.b64  	%rd995, %rd994, %rd993;
	shf.l.wrap.b32 	%r679, %r673, %r674, 25;
	shf.l.wrap.b32 	%r680, %r674, %r673, 25;
	mov.b64 	%rd996, {%r680, %r679};
	xor.b64  	%rd997, %rd995, %rd996;
	xor.b64  	%rd998, %rd979, %rd931;
	xor.b64  	%rd999, %rd979, %rd955;
	and.b64  	%rd1000, %rd999, %rd998;
	xor.b64  	%rd1001, %rd1000, %rd979;
	add.s64 	%rd1002, %rd991, %rd1001;
	add.s64 	%rd1003, %rd1002, %rd997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd606;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 19;
	shf.r.wrap.b32 	%r684, %r681, %r682, 19;
	mov.b64 	%rd1004, {%r684, %r683};
	shf.l.wrap.b32 	%r685, %r681, %r682, 3;
	shf.l.wrap.b32 	%r686, %r682, %r681, 3;
	mov.b64 	%rd1005, {%r686, %r685};
	shr.u64 	%rd1006, %rd606, 6;
	xor.b64  	%rd1007, %rd1004, %rd1006;
	xor.b64  	%rd1008, %rd1007, %rd1005;
	add.s64 	%rd1009, %rd535, %rd571;
	add.s64 	%rd1010, %rd1009, %rd1008;
	add.s64 	%rd1011, %rd1010, %rd48;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd619;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 19;
	shf.r.wrap.b32 	%r690, %r687, %r688, 19;
	mov.b64 	%rd1012, {%r690, %r689};
	shf.l.wrap.b32 	%r691, %r687, %r688, 3;
	shf.l.wrap.b32 	%r692, %r688, %r687, 3;
	mov.b64 	%rd1013, {%r692, %r691};
	shr.u64 	%rd1014, %rd619, 6;
	xor.b64  	%rd1015, %rd1012, %rd1014;
	xor.b64  	%rd1016, %rd1015, %rd1013;
	shf.r.wrap.b32 	%r693, %r362, %r361, 1;
	shf.r.wrap.b32 	%r694, %r361, %r362, 1;
	mov.b64 	%rd1017, {%r694, %r693};
	shf.r.wrap.b32 	%r695, %r362, %r361, 8;
	shf.r.wrap.b32 	%r696, %r361, %r362, 8;
	mov.b64 	%rd1018, {%r696, %r695};
	shr.u64 	%rd1019, %rd542, 7;
	xor.b64  	%rd1020, %rd1017, %rd1019;
	xor.b64  	%rd1021, %rd1020, %rd1018;
	add.s64 	%rd1022, %rd25, %rd578;
	add.s64 	%rd1023, %rd1022, %rd1016;
	add.s64 	%rd1024, %rd1023, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r697,%dummy}, %rd1011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r698}, %rd1011;
	}
	shf.r.wrap.b32 	%r699, %r698, %r697, 19;
	shf.r.wrap.b32 	%r700, %r697, %r698, 19;
	mov.b64 	%rd1025, {%r700, %r699};
	shf.l.wrap.b32 	%r701, %r697, %r698, 3;
	shf.l.wrap.b32 	%r702, %r698, %r697, 3;
	mov.b64 	%rd1026, {%r702, %r701};
	shr.u64 	%rd1027, %rd1011, 6;
	xor.b64  	%rd1028, %rd1025, %rd1027;
	xor.b64  	%rd1029, %rd1028, %rd1026;
	add.s64 	%rd1030, %rd542, %rd585;
	add.s64 	%rd1031, %rd1030, %rd1029;
	add.s64 	%rd1032, %rd1031, %rd49;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd1024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd1024;
	}
	shf.r.wrap.b32 	%r705, %r704, %r703, 19;
	shf.r.wrap.b32 	%r706, %r703, %r704, 19;
	mov.b64 	%rd1033, {%r706, %r705};
	shf.l.wrap.b32 	%r707, %r703, %r704, 3;
	shf.l.wrap.b32 	%r708, %r704, %r703, 3;
	mov.b64 	%rd1034, {%r708, %r707};
	shr.u64 	%rd1035, %rd1024, 6;
	xor.b64  	%rd1036, %rd1033, %rd1035;
	xor.b64  	%rd1037, %rd1036, %rd1034;
	shf.r.wrap.b32 	%r709, %r368, %r367, 1;
	shf.r.wrap.b32 	%r710, %r367, %r368, 1;
	mov.b64 	%rd1038, {%r710, %r709};
	shf.r.wrap.b32 	%r711, %r368, %r367, 8;
	shf.r.wrap.b32 	%r712, %r367, %r368, 8;
	mov.b64 	%rd1039, {%r712, %r711};
	shr.u64 	%rd1040, %rd548, 7;
	xor.b64  	%rd1041, %rd1038, %rd1040;
	xor.b64  	%rd1042, %rd1041, %rd1039;
	add.s64 	%rd1043, %rd28, %rd592;
	add.s64 	%rd1044, %rd1043, %rd1037;
	add.s64 	%rd1045, %rd1044, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd1032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd1032;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 19;
	shf.r.wrap.b32 	%r716, %r713, %r714, 19;
	mov.b64 	%rd1046, {%r716, %r715};
	shf.l.wrap.b32 	%r717, %r713, %r714, 3;
	shf.l.wrap.b32 	%r718, %r714, %r713, 3;
	mov.b64 	%rd1047, {%r718, %r717};
	shr.u64 	%rd1048, %rd1032, 6;
	xor.b64  	%rd1049, %rd1046, %rd1048;
	xor.b64  	%rd1050, %rd1049, %rd1047;
	add.s64 	%rd1051, %rd548, %rd599;
	add.s64 	%rd1052, %rd1051, %rd1050;
	add.s64 	%rd1053, %rd1052, %rd50;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r719,%dummy}, %rd1045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r720}, %rd1045;
	}
	shf.r.wrap.b32 	%r721, %r720, %r719, 19;
	shf.r.wrap.b32 	%r722, %r719, %r720, 19;
	mov.b64 	%rd1054, {%r722, %r721};
	shf.l.wrap.b32 	%r723, %r719, %r720, 3;
	shf.l.wrap.b32 	%r724, %r720, %r719, 3;
	mov.b64 	%rd1055, {%r724, %r723};
	shr.u64 	%rd1056, %rd1045, 6;
	xor.b64  	%rd1057, %rd1054, %rd1056;
	xor.b64  	%rd1058, %rd1057, %rd1055;
	shf.r.wrap.b32 	%r725, %r374, %r373, 1;
	shf.r.wrap.b32 	%r726, %r373, %r374, 1;
	mov.b64 	%rd1059, {%r726, %r725};
	shf.r.wrap.b32 	%r727, %r374, %r373, 8;
	shf.r.wrap.b32 	%r728, %r373, %r374, 8;
	mov.b64 	%rd1060, {%r728, %r727};
	shr.u64 	%rd1061, %rd555, 7;
	xor.b64  	%rd1062, %rd1059, %rd1061;
	xor.b64  	%rd1063, %rd1062, %rd1060;
	add.s64 	%rd1064, %rd29, %rd606;
	add.s64 	%rd1065, %rd1064, %rd1058;
	add.s64 	%rd1066, %rd1065, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1053;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 19;
	shf.r.wrap.b32 	%r732, %r729, %r730, 19;
	mov.b64 	%rd1067, {%r732, %r731};
	shf.l.wrap.b32 	%r733, %r729, %r730, 3;
	shf.l.wrap.b32 	%r734, %r730, %r729, 3;
	mov.b64 	%rd1068, {%r734, %r733};
	shr.u64 	%rd1069, %rd1053, 6;
	xor.b64  	%rd1070, %rd1067, %rd1069;
	xor.b64  	%rd1071, %rd1070, %rd1068;
	shf.r.wrap.b32 	%r735, %r380, %r379, 1;
	shf.r.wrap.b32 	%r736, %r379, %r380, 1;
	mov.b64 	%rd1072, {%r736, %r735};
	shf.r.wrap.b32 	%r737, %r380, %r379, 8;
	shf.r.wrap.b32 	%r738, %r379, %r380, 8;
	mov.b64 	%rd1073, {%r738, %r737};
	shr.u64 	%rd1074, %rd557, 7;
	xor.b64  	%rd1075, %rd1072, %rd1074;
	xor.b64  	%rd1076, %rd1075, %rd1073;
	add.s64 	%rd1077, %rd555, %rd619;
	add.s64 	%rd1078, %rd1077, %rd1071;
	add.s64 	%rd1079, %rd1078, %rd1076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd1066;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 19;
	shf.r.wrap.b32 	%r742, %r739, %r740, 19;
	mov.b64 	%rd1080, {%r742, %r741};
	shf.l.wrap.b32 	%r743, %r739, %r740, 3;
	shf.l.wrap.b32 	%r744, %r740, %r739, 3;
	mov.b64 	%rd1081, {%r744, %r743};
	shr.u64 	%rd1082, %rd1066, 6;
	xor.b64  	%rd1083, %rd1080, %rd1082;
	xor.b64  	%rd1084, %rd1083, %rd1081;
	shf.r.wrap.b32 	%r745, %r386, %r385, 1;
	shf.r.wrap.b32 	%r746, %r385, %r386, 1;
	mov.b64 	%rd1085, {%r746, %r745};
	shf.r.wrap.b32 	%r747, %r386, %r385, 8;
	shf.r.wrap.b32 	%r748, %r385, %r386, 8;
	mov.b64 	%rd1086, {%r748, %r747};
	shr.u64 	%rd1087, %rd564, 7;
	xor.b64  	%rd1088, %rd1085, %rd1087;
	xor.b64  	%rd1089, %rd1088, %rd1086;
	add.s64 	%rd1090, %rd1011, %rd557;
	add.s64 	%rd1091, %rd1090, %rd1084;
	add.s64 	%rd1092, %rd1091, %rd1089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd1079;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 19;
	shf.r.wrap.b32 	%r752, %r749, %r750, 19;
	mov.b64 	%rd1093, {%r752, %r751};
	shf.l.wrap.b32 	%r753, %r749, %r750, 3;
	shf.l.wrap.b32 	%r754, %r750, %r749, 3;
	mov.b64 	%rd1094, {%r754, %r753};
	shr.u64 	%rd1095, %rd1079, 6;
	xor.b64  	%rd1096, %rd1093, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1094;
	shf.r.wrap.b32 	%r755, %r392, %r391, 1;
	shf.r.wrap.b32 	%r756, %r391, %r392, 1;
	mov.b64 	%rd1098, {%r756, %r755};
	shf.r.wrap.b32 	%r757, %r392, %r391, 8;
	shf.r.wrap.b32 	%r758, %r391, %r392, 8;
	mov.b64 	%rd1099, {%r758, %r757};
	shr.u64 	%rd1100, %rd571, 7;
	xor.b64  	%rd1101, %rd1098, %rd1100;
	xor.b64  	%rd1102, %rd1101, %rd1099;
	add.s64 	%rd1103, %rd1024, %rd564;
	add.s64 	%rd1104, %rd1103, %rd1097;
	add.s64 	%rd1105, %rd1104, %rd1102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r759,%dummy}, %rd1092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r760}, %rd1092;
	}
	shf.r.wrap.b32 	%r761, %r760, %r759, 19;
	shf.r.wrap.b32 	%r762, %r759, %r760, 19;
	mov.b64 	%rd1106, {%r762, %r761};
	shf.l.wrap.b32 	%r763, %r759, %r760, 3;
	shf.l.wrap.b32 	%r764, %r760, %r759, 3;
	mov.b64 	%rd1107, {%r764, %r763};
	shr.u64 	%rd1108, %rd1092, 6;
	xor.b64  	%rd1109, %rd1106, %rd1108;
	xor.b64  	%rd1110, %rd1109, %rd1107;
	shf.r.wrap.b32 	%r765, %r398, %r397, 1;
	shf.r.wrap.b32 	%r766, %r397, %r398, 1;
	mov.b64 	%rd1111, {%r766, %r765};
	shf.r.wrap.b32 	%r767, %r398, %r397, 8;
	shf.r.wrap.b32 	%r768, %r397, %r398, 8;
	mov.b64 	%rd1112, {%r768, %r767};
	shr.u64 	%rd1113, %rd578, 7;
	xor.b64  	%rd1114, %rd1111, %rd1113;
	xor.b64  	%rd1115, %rd1114, %rd1112;
	add.s64 	%rd1116, %rd1032, %rd571;
	add.s64 	%rd1117, %rd1116, %rd1110;
	add.s64 	%rd1118, %rd1117, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r769,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r770}, %rd1105;
	}
	shf.r.wrap.b32 	%r771, %r770, %r769, 19;
	shf.r.wrap.b32 	%r772, %r769, %r770, 19;
	mov.b64 	%rd1119, {%r772, %r771};
	shf.l.wrap.b32 	%r773, %r769, %r770, 3;
	shf.l.wrap.b32 	%r774, %r770, %r769, 3;
	mov.b64 	%rd1120, {%r774, %r773};
	shr.u64 	%rd1121, %rd1105, 6;
	xor.b64  	%rd1122, %rd1119, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1120;
	shf.r.wrap.b32 	%r775, %r404, %r403, 1;
	shf.r.wrap.b32 	%r776, %r403, %r404, 1;
	mov.b64 	%rd1124, {%r776, %r775};
	shf.r.wrap.b32 	%r777, %r404, %r403, 8;
	shf.r.wrap.b32 	%r778, %r403, %r404, 8;
	mov.b64 	%rd1125, {%r778, %r777};
	shr.u64 	%rd1126, %rd585, 7;
	xor.b64  	%rd1127, %rd1124, %rd1126;
	xor.b64  	%rd1128, %rd1127, %rd1125;
	add.s64 	%rd1129, %rd1045, %rd578;
	add.s64 	%rd1130, %rd1129, %rd1123;
	add.s64 	%rd1131, %rd1130, %rd1128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd1118;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 19;
	shf.r.wrap.b32 	%r782, %r779, %r780, 19;
	mov.b64 	%rd1132, {%r782, %r781};
	shf.l.wrap.b32 	%r783, %r779, %r780, 3;
	shf.l.wrap.b32 	%r784, %r780, %r779, 3;
	mov.b64 	%rd1133, {%r784, %r783};
	shr.u64 	%rd1134, %rd1118, 6;
	xor.b64  	%rd1135, %rd1132, %rd1134;
	xor.b64  	%rd1136, %rd1135, %rd1133;
	shf.r.wrap.b32 	%r785, %r410, %r409, 1;
	shf.r.wrap.b32 	%r786, %r409, %r410, 1;
	mov.b64 	%rd1137, {%r786, %r785};
	shf.r.wrap.b32 	%r787, %r410, %r409, 8;
	shf.r.wrap.b32 	%r788, %r409, %r410, 8;
	mov.b64 	%rd1138, {%r788, %r787};
	shr.u64 	%rd1139, %rd592, 7;
	xor.b64  	%rd1140, %rd1137, %rd1139;
	xor.b64  	%rd1141, %rd1140, %rd1138;
	add.s64 	%rd1142, %rd1053, %rd585;
	add.s64 	%rd1143, %rd1142, %rd1136;
	add.s64 	%rd1144, %rd1143, %rd1141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r789,%dummy}, %rd1131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r790}, %rd1131;
	}
	shf.r.wrap.b32 	%r791, %r790, %r789, 19;
	shf.r.wrap.b32 	%r792, %r789, %r790, 19;
	mov.b64 	%rd1145, {%r792, %r791};
	shf.l.wrap.b32 	%r793, %r789, %r790, 3;
	shf.l.wrap.b32 	%r794, %r790, %r789, 3;
	mov.b64 	%rd1146, {%r794, %r793};
	shr.u64 	%rd1147, %rd1131, 6;
	xor.b64  	%rd1148, %rd1145, %rd1147;
	xor.b64  	%rd1149, %rd1148, %rd1146;
	shf.r.wrap.b32 	%r795, %r416, %r415, 1;
	shf.r.wrap.b32 	%r796, %r415, %r416, 1;
	mov.b64 	%rd1150, {%r796, %r795};
	shf.r.wrap.b32 	%r797, %r416, %r415, 8;
	shf.r.wrap.b32 	%r798, %r415, %r416, 8;
	mov.b64 	%rd1151, {%r798, %r797};
	shr.u64 	%rd1152, %rd599, 7;
	xor.b64  	%rd1153, %rd1150, %rd1152;
	xor.b64  	%rd1154, %rd1153, %rd1151;
	add.s64 	%rd1155, %rd1066, %rd592;
	add.s64 	%rd1156, %rd1155, %rd1149;
	add.s64 	%rd1157, %rd1156, %rd1154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r799,%dummy}, %rd1144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r800}, %rd1144;
	}
	shf.r.wrap.b32 	%r801, %r800, %r799, 19;
	shf.r.wrap.b32 	%r802, %r799, %r800, 19;
	mov.b64 	%rd1158, {%r802, %r801};
	shf.l.wrap.b32 	%r803, %r799, %r800, 3;
	shf.l.wrap.b32 	%r804, %r800, %r799, 3;
	mov.b64 	%rd1159, {%r804, %r803};
	shr.u64 	%rd1160, %rd1144, 6;
	xor.b64  	%rd1161, %rd1158, %rd1160;
	xor.b64  	%rd1162, %rd1161, %rd1159;
	shf.r.wrap.b32 	%r805, %r682, %r681, 1;
	shf.r.wrap.b32 	%r806, %r681, %r682, 1;
	mov.b64 	%rd1163, {%r806, %r805};
	shf.r.wrap.b32 	%r807, %r682, %r681, 8;
	shf.r.wrap.b32 	%r808, %r681, %r682, 8;
	mov.b64 	%rd1164, {%r808, %r807};
	shr.u64 	%rd1165, %rd606, 7;
	xor.b64  	%rd1166, %rd1163, %rd1165;
	xor.b64  	%rd1167, %rd1166, %rd1164;
	add.s64 	%rd1168, %rd1079, %rd599;
	add.s64 	%rd1169, %rd1168, %rd1162;
	add.s64 	%rd1170, %rd1169, %rd1167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r809,%dummy}, %rd1157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r810}, %rd1157;
	}
	shf.r.wrap.b32 	%r811, %r810, %r809, 19;
	shf.r.wrap.b32 	%r812, %r809, %r810, 19;
	mov.b64 	%rd1171, {%r812, %r811};
	shf.l.wrap.b32 	%r813, %r809, %r810, 3;
	shf.l.wrap.b32 	%r814, %r810, %r809, 3;
	mov.b64 	%rd1172, {%r814, %r813};
	shr.u64 	%rd1173, %rd1157, 6;
	xor.b64  	%rd1174, %rd1171, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1172;
	shf.r.wrap.b32 	%r815, %r688, %r687, 1;
	shf.r.wrap.b32 	%r816, %r687, %r688, 1;
	mov.b64 	%rd1176, {%r816, %r815};
	shf.r.wrap.b32 	%r817, %r688, %r687, 8;
	shf.r.wrap.b32 	%r818, %r687, %r688, 8;
	mov.b64 	%rd1177, {%r818, %r817};
	shr.u64 	%rd1178, %rd619, 7;
	xor.b64  	%rd1179, %rd1176, %rd1178;
	xor.b64  	%rd1180, %rd1179, %rd1177;
	add.s64 	%rd1181, %rd1092, %rd606;
	add.s64 	%rd1182, %rd1181, %rd1175;
	add.s64 	%rd1183, %rd1182, %rd1180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r819,%dummy}, %rd1170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r820}, %rd1170;
	}
	shf.r.wrap.b32 	%r821, %r820, %r819, 19;
	shf.r.wrap.b32 	%r822, %r819, %r820, 19;
	mov.b64 	%rd1184, {%r822, %r821};
	shf.l.wrap.b32 	%r823, %r819, %r820, 3;
	shf.l.wrap.b32 	%r824, %r820, %r819, 3;
	mov.b64 	%rd1185, {%r824, %r823};
	shr.u64 	%rd1186, %rd1170, 6;
	xor.b64  	%rd1187, %rd1184, %rd1186;
	xor.b64  	%rd1188, %rd1187, %rd1185;
	shf.r.wrap.b32 	%r825, %r698, %r697, 1;
	shf.r.wrap.b32 	%r826, %r697, %r698, 1;
	mov.b64 	%rd1189, {%r826, %r825};
	shf.r.wrap.b32 	%r827, %r698, %r697, 8;
	shf.r.wrap.b32 	%r828, %r697, %r698, 8;
	mov.b64 	%rd1190, {%r828, %r827};
	shr.u64 	%rd1191, %rd1011, 7;
	xor.b64  	%rd1192, %rd1189, %rd1191;
	xor.b64  	%rd1193, %rd1192, %rd1190;
	add.s64 	%rd1194, %rd1105, %rd619;
	add.s64 	%rd1195, %rd1194, %rd1188;
	add.s64 	%rd1196, %rd1195, %rd1193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd992;
	}
	shf.r.wrap.b32 	%r831, %r830, %r829, 14;
	shf.r.wrap.b32 	%r832, %r829, %r830, 14;
	mov.b64 	%rd1197, {%r832, %r831};
	shf.r.wrap.b32 	%r833, %r830, %r829, 18;
	shf.r.wrap.b32 	%r834, %r829, %r830, 18;
	mov.b64 	%rd1198, {%r834, %r833};
	xor.b64  	%rd1199, %rd1198, %rd1197;
	shf.l.wrap.b32 	%r835, %r829, %r830, 23;
	shf.l.wrap.b32 	%r836, %r830, %r829, 23;
	mov.b64 	%rd1200, {%r836, %r835};
	xor.b64  	%rd1201, %rd1199, %rd1200;
	xor.b64  	%rd1202, %rd944, %rd968;
	and.b64  	%rd1203, %rd1202, %rd992;
	xor.b64  	%rd1204, %rd1203, %rd944;
	add.s64 	%rd1205, %rd1204, %rd920;
	add.s64 	%rd1206, %rd1205, %rd1011;
	add.s64 	%rd1207, %rd1206, %rd2685;
	add.s64 	%rd1208, %rd1207, %rd1201;
	add.s64 	%rd1209, %rd1208, %rd931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd1003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd1003;
	}
	shf.r.wrap.b32 	%r839, %r838, %r837, 28;
	shf.r.wrap.b32 	%r840, %r837, %r838, 28;
	mov.b64 	%rd1210, {%r840, %r839};
	shf.l.wrap.b32 	%r841, %r837, %r838, 30;
	shf.l.wrap.b32 	%r842, %r838, %r837, 30;
	mov.b64 	%rd1211, {%r842, %r841};
	xor.b64  	%rd1212, %rd1211, %rd1210;
	shf.l.wrap.b32 	%r843, %r837, %r838, 25;
	shf.l.wrap.b32 	%r844, %r838, %r837, 25;
	mov.b64 	%rd1213, {%r844, %r843};
	xor.b64  	%rd1214, %rd1212, %rd1213;
	xor.b64  	%rd1215, %rd1003, %rd955;
	xor.b64  	%rd1216, %rd1003, %rd979;
	and.b64  	%rd1217, %rd1216, %rd1215;
	xor.b64  	%rd1218, %rd1217, %rd1003;
	add.s64 	%rd1219, %rd1208, %rd1218;
	add.s64 	%rd1220, %rd1219, %rd1214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r846}, %rd1209;
	}
	shf.r.wrap.b32 	%r847, %r846, %r845, 14;
	shf.r.wrap.b32 	%r848, %r845, %r846, 14;
	mov.b64 	%rd1221, {%r848, %r847};
	shf.r.wrap.b32 	%r849, %r846, %r845, 18;
	shf.r.wrap.b32 	%r850, %r845, %r846, 18;
	mov.b64 	%rd1222, {%r850, %r849};
	xor.b64  	%rd1223, %rd1222, %rd1221;
	shf.l.wrap.b32 	%r851, %r845, %r846, 23;
	shf.l.wrap.b32 	%r852, %r846, %r845, 23;
	mov.b64 	%rd1224, {%r852, %r851};
	xor.b64  	%rd1225, %rd1223, %rd1224;
	xor.b64  	%rd1226, %rd968, %rd992;
	and.b64  	%rd1227, %rd1209, %rd1226;
	xor.b64  	%rd1228, %rd1227, %rd968;
	add.s64 	%rd1229, %rd1024, %rd944;
	add.s64 	%rd1230, %rd1229, %rd2686;
	add.s64 	%rd1231, %rd1230, %rd1228;
	add.s64 	%rd1232, %rd1231, %rd1225;
	add.s64 	%rd1233, %rd1232, %rd955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd1220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd1220;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 28;
	shf.r.wrap.b32 	%r856, %r853, %r854, 28;
	mov.b64 	%rd1234, {%r856, %r855};
	shf.l.wrap.b32 	%r857, %r853, %r854, 30;
	shf.l.wrap.b32 	%r858, %r854, %r853, 30;
	mov.b64 	%rd1235, {%r858, %r857};
	xor.b64  	%rd1236, %rd1235, %rd1234;
	shf.l.wrap.b32 	%r859, %r853, %r854, 25;
	shf.l.wrap.b32 	%r860, %r854, %r853, 25;
	mov.b64 	%rd1237, {%r860, %r859};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	xor.b64  	%rd1239, %rd1220, %rd979;
	xor.b64  	%rd1240, %rd1220, %rd1003;
	and.b64  	%rd1241, %rd1240, %rd1239;
	xor.b64  	%rd1242, %rd1241, %rd1220;
	add.s64 	%rd1243, %rd1232, %rd1242;
	add.s64 	%rd1244, %rd1243, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd1233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd1233;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 14;
	shf.r.wrap.b32 	%r864, %r861, %r862, 14;
	mov.b64 	%rd1245, {%r864, %r863};
	shf.r.wrap.b32 	%r865, %r862, %r861, 18;
	shf.r.wrap.b32 	%r866, %r861, %r862, 18;
	mov.b64 	%rd1246, {%r866, %r865};
	xor.b64  	%rd1247, %rd1246, %rd1245;
	shf.l.wrap.b32 	%r867, %r861, %r862, 23;
	shf.l.wrap.b32 	%r868, %r862, %r861, 23;
	mov.b64 	%rd1248, {%r868, %r867};
	xor.b64  	%rd1249, %rd1247, %rd1248;
	xor.b64  	%rd1250, %rd1209, %rd992;
	and.b64  	%rd1251, %rd1233, %rd1250;
	xor.b64  	%rd1252, %rd1251, %rd992;
	add.s64 	%rd1253, %rd1032, %rd968;
	add.s64 	%rd1254, %rd1253, %rd2687;
	add.s64 	%rd1255, %rd1254, %rd1252;
	add.s64 	%rd1256, %rd1255, %rd1249;
	add.s64 	%rd1257, %rd1256, %rd979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd1244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd1244;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 28;
	shf.r.wrap.b32 	%r872, %r869, %r870, 28;
	mov.b64 	%rd1258, {%r872, %r871};
	shf.l.wrap.b32 	%r873, %r869, %r870, 30;
	shf.l.wrap.b32 	%r874, %r870, %r869, 30;
	mov.b64 	%rd1259, {%r874, %r873};
	xor.b64  	%rd1260, %rd1259, %rd1258;
	shf.l.wrap.b32 	%r875, %r869, %r870, 25;
	shf.l.wrap.b32 	%r876, %r870, %r869, 25;
	mov.b64 	%rd1261, {%r876, %r875};
	xor.b64  	%rd1262, %rd1260, %rd1261;
	xor.b64  	%rd1263, %rd1244, %rd1003;
	xor.b64  	%rd1264, %rd1244, %rd1220;
	and.b64  	%rd1265, %rd1264, %rd1263;
	xor.b64  	%rd1266, %rd1265, %rd1244;
	add.s64 	%rd1267, %rd1256, %rd1266;
	add.s64 	%rd1268, %rd1267, %rd1262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd1257;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 14;
	shf.r.wrap.b32 	%r880, %r877, %r878, 14;
	mov.b64 	%rd1269, {%r880, %r879};
	shf.r.wrap.b32 	%r881, %r878, %r877, 18;
	shf.r.wrap.b32 	%r882, %r877, %r878, 18;
	mov.b64 	%rd1270, {%r882, %r881};
	xor.b64  	%rd1271, %rd1270, %rd1269;
	shf.l.wrap.b32 	%r883, %r877, %r878, 23;
	shf.l.wrap.b32 	%r884, %r878, %r877, 23;
	mov.b64 	%rd1272, {%r884, %r883};
	xor.b64  	%rd1273, %rd1271, %rd1272;
	xor.b64  	%rd1274, %rd1233, %rd1209;
	and.b64  	%rd1275, %rd1257, %rd1274;
	xor.b64  	%rd1276, %rd1275, %rd1209;
	add.s64 	%rd1277, %rd1045, %rd992;
	add.s64 	%rd1278, %rd1277, %rd2688;
	add.s64 	%rd1279, %rd1278, %rd1276;
	add.s64 	%rd1280, %rd1279, %rd1273;
	add.s64 	%rd1281, %rd1280, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd1268;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 28;
	shf.r.wrap.b32 	%r888, %r885, %r886, 28;
	mov.b64 	%rd1282, {%r888, %r887};
	shf.l.wrap.b32 	%r889, %r885, %r886, 30;
	shf.l.wrap.b32 	%r890, %r886, %r885, 30;
	mov.b64 	%rd1283, {%r890, %r889};
	xor.b64  	%rd1284, %rd1283, %rd1282;
	shf.l.wrap.b32 	%r891, %r885, %r886, 25;
	shf.l.wrap.b32 	%r892, %r886, %r885, 25;
	mov.b64 	%rd1285, {%r892, %r891};
	xor.b64  	%rd1286, %rd1284, %rd1285;
	xor.b64  	%rd1287, %rd1268, %rd1220;
	xor.b64  	%rd1288, %rd1268, %rd1244;
	and.b64  	%rd1289, %rd1288, %rd1287;
	xor.b64  	%rd1290, %rd1289, %rd1268;
	add.s64 	%rd1291, %rd1280, %rd1290;
	add.s64 	%rd1292, %rd1291, %rd1286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r893,%dummy}, %rd1281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r894}, %rd1281;
	}
	shf.r.wrap.b32 	%r895, %r894, %r893, 14;
	shf.r.wrap.b32 	%r896, %r893, %r894, 14;
	mov.b64 	%rd1293, {%r896, %r895};
	shf.r.wrap.b32 	%r897, %r894, %r893, 18;
	shf.r.wrap.b32 	%r898, %r893, %r894, 18;
	mov.b64 	%rd1294, {%r898, %r897};
	xor.b64  	%rd1295, %rd1294, %rd1293;
	shf.l.wrap.b32 	%r899, %r893, %r894, 23;
	shf.l.wrap.b32 	%r900, %r894, %r893, 23;
	mov.b64 	%rd1296, {%r900, %r899};
	xor.b64  	%rd1297, %rd1295, %rd1296;
	xor.b64  	%rd1298, %rd1257, %rd1233;
	and.b64  	%rd1299, %rd1281, %rd1298;
	xor.b64  	%rd1300, %rd1299, %rd1233;
	add.s64 	%rd1301, %rd1209, %rd1053;
	add.s64 	%rd1302, %rd1301, %rd2689;
	add.s64 	%rd1303, %rd1302, %rd1300;
	add.s64 	%rd1304, %rd1303, %rd1297;
	add.s64 	%rd1305, %rd1304, %rd1220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd1292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r902}, %rd1292;
	}
	shf.r.wrap.b32 	%r903, %r902, %r901, 28;
	shf.r.wrap.b32 	%r904, %r901, %r902, 28;
	mov.b64 	%rd1306, {%r904, %r903};
	shf.l.wrap.b32 	%r905, %r901, %r902, 30;
	shf.l.wrap.b32 	%r906, %r902, %r901, 30;
	mov.b64 	%rd1307, {%r906, %r905};
	xor.b64  	%rd1308, %rd1307, %rd1306;
	shf.l.wrap.b32 	%r907, %r901, %r902, 25;
	shf.l.wrap.b32 	%r908, %r902, %r901, 25;
	mov.b64 	%rd1309, {%r908, %r907};
	xor.b64  	%rd1310, %rd1308, %rd1309;
	xor.b64  	%rd1311, %rd1292, %rd1244;
	xor.b64  	%rd1312, %rd1292, %rd1268;
	and.b64  	%rd1313, %rd1312, %rd1311;
	xor.b64  	%rd1314, %rd1313, %rd1292;
	add.s64 	%rd1315, %rd1304, %rd1314;
	add.s64 	%rd1316, %rd1315, %rd1310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd1305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd1305;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 14;
	shf.r.wrap.b32 	%r912, %r909, %r910, 14;
	mov.b64 	%rd1317, {%r912, %r911};
	shf.r.wrap.b32 	%r913, %r910, %r909, 18;
	shf.r.wrap.b32 	%r914, %r909, %r910, 18;
	mov.b64 	%rd1318, {%r914, %r913};
	xor.b64  	%rd1319, %rd1318, %rd1317;
	shf.l.wrap.b32 	%r915, %r909, %r910, 23;
	shf.l.wrap.b32 	%r916, %r910, %r909, 23;
	mov.b64 	%rd1320, {%r916, %r915};
	xor.b64  	%rd1321, %rd1319, %rd1320;
	xor.b64  	%rd1322, %rd1281, %rd1257;
	and.b64  	%rd1323, %rd1305, %rd1322;
	xor.b64  	%rd1324, %rd1323, %rd1257;
	add.s64 	%rd1325, %rd1233, %rd1066;
	add.s64 	%rd1326, %rd1325, %rd2690;
	add.s64 	%rd1327, %rd1326, %rd1324;
	add.s64 	%rd1328, %rd1327, %rd1321;
	add.s64 	%rd1329, %rd1328, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd1316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r918}, %rd1316;
	}
	shf.r.wrap.b32 	%r919, %r918, %r917, 28;
	shf.r.wrap.b32 	%r920, %r917, %r918, 28;
	mov.b64 	%rd1330, {%r920, %r919};
	shf.l.wrap.b32 	%r921, %r917, %r918, 30;
	shf.l.wrap.b32 	%r922, %r918, %r917, 30;
	mov.b64 	%rd1331, {%r922, %r921};
	xor.b64  	%rd1332, %rd1331, %rd1330;
	shf.l.wrap.b32 	%r923, %r917, %r918, 25;
	shf.l.wrap.b32 	%r924, %r918, %r917, 25;
	mov.b64 	%rd1333, {%r924, %r923};
	xor.b64  	%rd1334, %rd1332, %rd1333;
	xor.b64  	%rd1335, %rd1316, %rd1268;
	xor.b64  	%rd1336, %rd1316, %rd1292;
	and.b64  	%rd1337, %rd1336, %rd1335;
	xor.b64  	%rd1338, %rd1337, %rd1316;
	add.s64 	%rd1339, %rd1328, %rd1338;
	add.s64 	%rd1340, %rd1339, %rd1334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd1329;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 14;
	shf.r.wrap.b32 	%r928, %r925, %r926, 14;
	mov.b64 	%rd1341, {%r928, %r927};
	shf.r.wrap.b32 	%r929, %r926, %r925, 18;
	shf.r.wrap.b32 	%r930, %r925, %r926, 18;
	mov.b64 	%rd1342, {%r930, %r929};
	xor.b64  	%rd1343, %rd1342, %rd1341;
	shf.l.wrap.b32 	%r931, %r925, %r926, 23;
	shf.l.wrap.b32 	%r932, %r926, %r925, 23;
	mov.b64 	%rd1344, {%r932, %r931};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	xor.b64  	%rd1346, %rd1305, %rd1281;
	and.b64  	%rd1347, %rd1329, %rd1346;
	xor.b64  	%rd1348, %rd1347, %rd1281;
	add.s64 	%rd1349, %rd1257, %rd1079;
	add.s64 	%rd1350, %rd1349, %rd2691;
	add.s64 	%rd1351, %rd1350, %rd1348;
	add.s64 	%rd1352, %rd1351, %rd1345;
	add.s64 	%rd1353, %rd1352, %rd1268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd1340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd1340;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 28;
	shf.r.wrap.b32 	%r936, %r933, %r934, 28;
	mov.b64 	%rd1354, {%r936, %r935};
	shf.l.wrap.b32 	%r937, %r933, %r934, 30;
	shf.l.wrap.b32 	%r938, %r934, %r933, 30;
	mov.b64 	%rd1355, {%r938, %r937};
	xor.b64  	%rd1356, %rd1355, %rd1354;
	shf.l.wrap.b32 	%r939, %r933, %r934, 25;
	shf.l.wrap.b32 	%r940, %r934, %r933, 25;
	mov.b64 	%rd1357, {%r940, %r939};
	xor.b64  	%rd1358, %rd1356, %rd1357;
	xor.b64  	%rd1359, %rd1340, %rd1292;
	xor.b64  	%rd1360, %rd1340, %rd1316;
	and.b64  	%rd1361, %rd1360, %rd1359;
	xor.b64  	%rd1362, %rd1361, %rd1340;
	add.s64 	%rd1363, %rd1352, %rd1362;
	add.s64 	%rd1364, %rd1363, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd1353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd1353;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 14;
	shf.r.wrap.b32 	%r944, %r941, %r942, 14;
	mov.b64 	%rd1365, {%r944, %r943};
	shf.r.wrap.b32 	%r945, %r942, %r941, 18;
	shf.r.wrap.b32 	%r946, %r941, %r942, 18;
	mov.b64 	%rd1366, {%r946, %r945};
	xor.b64  	%rd1367, %rd1366, %rd1365;
	shf.l.wrap.b32 	%r947, %r941, %r942, 23;
	shf.l.wrap.b32 	%r948, %r942, %r941, 23;
	mov.b64 	%rd1368, {%r948, %r947};
	xor.b64  	%rd1369, %rd1367, %rd1368;
	xor.b64  	%rd1370, %rd1329, %rd1305;
	and.b64  	%rd1371, %rd1353, %rd1370;
	xor.b64  	%rd1372, %rd1371, %rd1305;
	add.s64 	%rd1373, %rd1281, %rd1092;
	add.s64 	%rd1374, %rd1373, %rd2692;
	add.s64 	%rd1375, %rd1374, %rd1372;
	add.s64 	%rd1376, %rd1375, %rd1369;
	add.s64 	%rd1377, %rd1376, %rd1292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r949,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r950}, %rd1364;
	}
	shf.r.wrap.b32 	%r951, %r950, %r949, 28;
	shf.r.wrap.b32 	%r952, %r949, %r950, 28;
	mov.b64 	%rd1378, {%r952, %r951};
	shf.l.wrap.b32 	%r953, %r949, %r950, 30;
	shf.l.wrap.b32 	%r954, %r950, %r949, 30;
	mov.b64 	%rd1379, {%r954, %r953};
	xor.b64  	%rd1380, %rd1379, %rd1378;
	shf.l.wrap.b32 	%r955, %r949, %r950, 25;
	shf.l.wrap.b32 	%r956, %r950, %r949, 25;
	mov.b64 	%rd1381, {%r956, %r955};
	xor.b64  	%rd1382, %rd1380, %rd1381;
	xor.b64  	%rd1383, %rd1364, %rd1316;
	xor.b64  	%rd1384, %rd1364, %rd1340;
	and.b64  	%rd1385, %rd1384, %rd1383;
	xor.b64  	%rd1386, %rd1385, %rd1364;
	add.s64 	%rd1387, %rd1376, %rd1386;
	add.s64 	%rd1388, %rd1387, %rd1382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd1377;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 14;
	shf.r.wrap.b32 	%r960, %r957, %r958, 14;
	mov.b64 	%rd1389, {%r960, %r959};
	shf.r.wrap.b32 	%r961, %r958, %r957, 18;
	shf.r.wrap.b32 	%r962, %r957, %r958, 18;
	mov.b64 	%rd1390, {%r962, %r961};
	xor.b64  	%rd1391, %rd1390, %rd1389;
	shf.l.wrap.b32 	%r963, %r957, %r958, 23;
	shf.l.wrap.b32 	%r964, %r958, %r957, 23;
	mov.b64 	%rd1392, {%r964, %r963};
	xor.b64  	%rd1393, %rd1391, %rd1392;
	xor.b64  	%rd1394, %rd1353, %rd1329;
	and.b64  	%rd1395, %rd1377, %rd1394;
	xor.b64  	%rd1396, %rd1395, %rd1329;
	add.s64 	%rd1397, %rd1305, %rd1105;
	add.s64 	%rd1398, %rd1397, %rd2693;
	add.s64 	%rd1399, %rd1398, %rd1396;
	add.s64 	%rd1400, %rd1399, %rd1393;
	add.s64 	%rd1401, %rd1400, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd1388;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 28;
	shf.r.wrap.b32 	%r968, %r965, %r966, 28;
	mov.b64 	%rd1402, {%r968, %r967};
	shf.l.wrap.b32 	%r969, %r965, %r966, 30;
	shf.l.wrap.b32 	%r970, %r966, %r965, 30;
	mov.b64 	%rd1403, {%r970, %r969};
	xor.b64  	%rd1404, %rd1403, %rd1402;
	shf.l.wrap.b32 	%r971, %r965, %r966, 25;
	shf.l.wrap.b32 	%r972, %r966, %r965, 25;
	mov.b64 	%rd1405, {%r972, %r971};
	xor.b64  	%rd1406, %rd1404, %rd1405;
	xor.b64  	%rd1407, %rd1388, %rd1340;
	xor.b64  	%rd1408, %rd1388, %rd1364;
	and.b64  	%rd1409, %rd1408, %rd1407;
	xor.b64  	%rd1410, %rd1409, %rd1388;
	add.s64 	%rd1411, %rd1400, %rd1410;
	add.s64 	%rd1412, %rd1411, %rd1406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd1401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r974}, %rd1401;
	}
	shf.r.wrap.b32 	%r975, %r974, %r973, 14;
	shf.r.wrap.b32 	%r976, %r973, %r974, 14;
	mov.b64 	%rd1413, {%r976, %r975};
	shf.r.wrap.b32 	%r977, %r974, %r973, 18;
	shf.r.wrap.b32 	%r978, %r973, %r974, 18;
	mov.b64 	%rd1414, {%r978, %r977};
	xor.b64  	%rd1415, %rd1414, %rd1413;
	shf.l.wrap.b32 	%r979, %r973, %r974, 23;
	shf.l.wrap.b32 	%r980, %r974, %r973, 23;
	mov.b64 	%rd1416, {%r980, %r979};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	xor.b64  	%rd1418, %rd1377, %rd1353;
	and.b64  	%rd1419, %rd1401, %rd1418;
	xor.b64  	%rd1420, %rd1419, %rd1353;
	add.s64 	%rd1421, %rd1329, %rd1118;
	add.s64 	%rd1422, %rd1421, %rd2694;
	add.s64 	%rd1423, %rd1422, %rd1420;
	add.s64 	%rd1424, %rd1423, %rd1417;
	add.s64 	%rd1425, %rd1424, %rd1340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd1412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd1412;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 28;
	shf.r.wrap.b32 	%r984, %r981, %r982, 28;
	mov.b64 	%rd1426, {%r984, %r983};
	shf.l.wrap.b32 	%r985, %r981, %r982, 30;
	shf.l.wrap.b32 	%r986, %r982, %r981, 30;
	mov.b64 	%rd1427, {%r986, %r985};
	xor.b64  	%rd1428, %rd1427, %rd1426;
	shf.l.wrap.b32 	%r987, %r981, %r982, 25;
	shf.l.wrap.b32 	%r988, %r982, %r981, 25;
	mov.b64 	%rd1429, {%r988, %r987};
	xor.b64  	%rd1430, %rd1428, %rd1429;
	xor.b64  	%rd1431, %rd1412, %rd1364;
	xor.b64  	%rd1432, %rd1412, %rd1388;
	and.b64  	%rd1433, %rd1432, %rd1431;
	xor.b64  	%rd1434, %rd1433, %rd1412;
	add.s64 	%rd1435, %rd1424, %rd1434;
	add.s64 	%rd1436, %rd1435, %rd1430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd1425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd1425;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 14;
	shf.r.wrap.b32 	%r992, %r989, %r990, 14;
	mov.b64 	%rd1437, {%r992, %r991};
	shf.r.wrap.b32 	%r993, %r990, %r989, 18;
	shf.r.wrap.b32 	%r994, %r989, %r990, 18;
	mov.b64 	%rd1438, {%r994, %r993};
	xor.b64  	%rd1439, %rd1438, %rd1437;
	shf.l.wrap.b32 	%r995, %r989, %r990, 23;
	shf.l.wrap.b32 	%r996, %r990, %r989, 23;
	mov.b64 	%rd1440, {%r996, %r995};
	xor.b64  	%rd1441, %rd1439, %rd1440;
	xor.b64  	%rd1442, %rd1401, %rd1377;
	and.b64  	%rd1443, %rd1425, %rd1442;
	xor.b64  	%rd1444, %rd1443, %rd1377;
	add.s64 	%rd1445, %rd1353, %rd1131;
	add.s64 	%rd1446, %rd1445, %rd2695;
	add.s64 	%rd1447, %rd1446, %rd1444;
	add.s64 	%rd1448, %rd1447, %rd1441;
	add.s64 	%rd1449, %rd1448, %rd1364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1436;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 28;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 28;
	mov.b64 	%rd1450, {%r1000, %r999};
	shf.l.wrap.b32 	%r1001, %r997, %r998, 30;
	shf.l.wrap.b32 	%r1002, %r998, %r997, 30;
	mov.b64 	%rd1451, {%r1002, %r1001};
	xor.b64  	%rd1452, %rd1451, %rd1450;
	shf.l.wrap.b32 	%r1003, %r997, %r998, 25;
	shf.l.wrap.b32 	%r1004, %r998, %r997, 25;
	mov.b64 	%rd1453, {%r1004, %r1003};
	xor.b64  	%rd1454, %rd1452, %rd1453;
	xor.b64  	%rd1455, %rd1436, %rd1388;
	xor.b64  	%rd1456, %rd1436, %rd1412;
	and.b64  	%rd1457, %rd1456, %rd1455;
	xor.b64  	%rd1458, %rd1457, %rd1436;
	add.s64 	%rd1459, %rd1448, %rd1458;
	add.s64 	%rd1460, %rd1459, %rd1454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1005,%dummy}, %rd1449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1006}, %rd1449;
	}
	shf.r.wrap.b32 	%r1007, %r1006, %r1005, 14;
	shf.r.wrap.b32 	%r1008, %r1005, %r1006, 14;
	mov.b64 	%rd1461, {%r1008, %r1007};
	shf.r.wrap.b32 	%r1009, %r1006, %r1005, 18;
	shf.r.wrap.b32 	%r1010, %r1005, %r1006, 18;
	mov.b64 	%rd1462, {%r1010, %r1009};
	xor.b64  	%rd1463, %rd1462, %rd1461;
	shf.l.wrap.b32 	%r1011, %r1005, %r1006, 23;
	shf.l.wrap.b32 	%r1012, %r1006, %r1005, 23;
	mov.b64 	%rd1464, {%r1012, %r1011};
	xor.b64  	%rd1465, %rd1463, %rd1464;
	xor.b64  	%rd1466, %rd1425, %rd1401;
	and.b64  	%rd1467, %rd1449, %rd1466;
	xor.b64  	%rd1468, %rd1467, %rd1401;
	add.s64 	%rd1469, %rd1377, %rd1144;
	add.s64 	%rd1470, %rd1469, %rd2696;
	add.s64 	%rd1471, %rd1470, %rd1468;
	add.s64 	%rd1472, %rd1471, %rd1465;
	add.s64 	%rd1473, %rd1472, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1013,%dummy}, %rd1460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1014}, %rd1460;
	}
	shf.r.wrap.b32 	%r1015, %r1014, %r1013, 28;
	shf.r.wrap.b32 	%r1016, %r1013, %r1014, 28;
	mov.b64 	%rd1474, {%r1016, %r1015};
	shf.l.wrap.b32 	%r1017, %r1013, %r1014, 30;
	shf.l.wrap.b32 	%r1018, %r1014, %r1013, 30;
	mov.b64 	%rd1475, {%r1018, %r1017};
	xor.b64  	%rd1476, %rd1475, %rd1474;
	shf.l.wrap.b32 	%r1019, %r1013, %r1014, 25;
	shf.l.wrap.b32 	%r1020, %r1014, %r1013, 25;
	mov.b64 	%rd1477, {%r1020, %r1019};
	xor.b64  	%rd1478, %rd1476, %rd1477;
	xor.b64  	%rd1479, %rd1460, %rd1412;
	xor.b64  	%rd1480, %rd1460, %rd1436;
	and.b64  	%rd1481, %rd1480, %rd1479;
	xor.b64  	%rd1482, %rd1481, %rd1460;
	add.s64 	%rd1483, %rd1472, %rd1482;
	add.s64 	%rd1484, %rd1483, %rd1478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd1473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1022}, %rd1473;
	}
	shf.r.wrap.b32 	%r1023, %r1022, %r1021, 14;
	shf.r.wrap.b32 	%r1024, %r1021, %r1022, 14;
	mov.b64 	%rd1485, {%r1024, %r1023};
	shf.r.wrap.b32 	%r1025, %r1022, %r1021, 18;
	shf.r.wrap.b32 	%r1026, %r1021, %r1022, 18;
	mov.b64 	%rd1486, {%r1026, %r1025};
	xor.b64  	%rd1487, %rd1486, %rd1485;
	shf.l.wrap.b32 	%r1027, %r1021, %r1022, 23;
	shf.l.wrap.b32 	%r1028, %r1022, %r1021, 23;
	mov.b64 	%rd1488, {%r1028, %r1027};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	xor.b64  	%rd1490, %rd1449, %rd1425;
	and.b64  	%rd1491, %rd1473, %rd1490;
	xor.b64  	%rd1492, %rd1491, %rd1425;
	add.s64 	%rd1493, %rd1401, %rd1157;
	add.s64 	%rd1494, %rd1493, %rd2697;
	add.s64 	%rd1495, %rd1494, %rd1492;
	add.s64 	%rd1496, %rd1495, %rd1489;
	add.s64 	%rd1497, %rd1496, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd1484;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 28;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 28;
	mov.b64 	%rd1498, {%r1032, %r1031};
	shf.l.wrap.b32 	%r1033, %r1029, %r1030, 30;
	shf.l.wrap.b32 	%r1034, %r1030, %r1029, 30;
	mov.b64 	%rd1499, {%r1034, %r1033};
	xor.b64  	%rd1500, %rd1499, %rd1498;
	shf.l.wrap.b32 	%r1035, %r1029, %r1030, 25;
	shf.l.wrap.b32 	%r1036, %r1030, %r1029, 25;
	mov.b64 	%rd1501, {%r1036, %r1035};
	xor.b64  	%rd1502, %rd1500, %rd1501;
	xor.b64  	%rd1503, %rd1484, %rd1436;
	xor.b64  	%rd1504, %rd1484, %rd1460;
	and.b64  	%rd1505, %rd1504, %rd1503;
	xor.b64  	%rd1506, %rd1505, %rd1484;
	add.s64 	%rd1507, %rd1496, %rd1506;
	add.s64 	%rd1508, %rd1507, %rd1502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd1497;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 14;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 14;
	mov.b64 	%rd1509, {%r1040, %r1039};
	shf.r.wrap.b32 	%r1041, %r1038, %r1037, 18;
	shf.r.wrap.b32 	%r1042, %r1037, %r1038, 18;
	mov.b64 	%rd1510, {%r1042, %r1041};
	xor.b64  	%rd1511, %rd1510, %rd1509;
	shf.l.wrap.b32 	%r1043, %r1037, %r1038, 23;
	shf.l.wrap.b32 	%r1044, %r1038, %r1037, 23;
	mov.b64 	%rd1512, {%r1044, %r1043};
	xor.b64  	%rd1513, %rd1511, %rd1512;
	xor.b64  	%rd1514, %rd1473, %rd1449;
	and.b64  	%rd1515, %rd1497, %rd1514;
	xor.b64  	%rd1516, %rd1515, %rd1449;
	add.s64 	%rd1517, %rd1425, %rd1170;
	add.s64 	%rd1518, %rd1517, %rd2698;
	add.s64 	%rd1519, %rd1518, %rd1516;
	add.s64 	%rd1520, %rd1519, %rd1513;
	add.s64 	%rd1521, %rd1520, %rd1436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd1508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd1508;
	}
	shf.r.wrap.b32 	%r1047, %r1046, %r1045, 28;
	shf.r.wrap.b32 	%r1048, %r1045, %r1046, 28;
	mov.b64 	%rd1522, {%r1048, %r1047};
	shf.l.wrap.b32 	%r1049, %r1045, %r1046, 30;
	shf.l.wrap.b32 	%r1050, %r1046, %r1045, 30;
	mov.b64 	%rd1523, {%r1050, %r1049};
	xor.b64  	%rd1524, %rd1523, %rd1522;
	shf.l.wrap.b32 	%r1051, %r1045, %r1046, 25;
	shf.l.wrap.b32 	%r1052, %r1046, %r1045, 25;
	mov.b64 	%rd1525, {%r1052, %r1051};
	xor.b64  	%rd1526, %rd1524, %rd1525;
	xor.b64  	%rd1527, %rd1508, %rd1460;
	xor.b64  	%rd1528, %rd1508, %rd1484;
	and.b64  	%rd1529, %rd1528, %rd1527;
	xor.b64  	%rd1530, %rd1529, %rd1508;
	add.s64 	%rd1531, %rd1520, %rd1530;
	add.s64 	%rd1532, %rd1531, %rd1526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd1521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd1521;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 14;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 14;
	mov.b64 	%rd1533, {%r1056, %r1055};
	shf.r.wrap.b32 	%r1057, %r1054, %r1053, 18;
	shf.r.wrap.b32 	%r1058, %r1053, %r1054, 18;
	mov.b64 	%rd1534, {%r1058, %r1057};
	xor.b64  	%rd1535, %rd1534, %rd1533;
	shf.l.wrap.b32 	%r1059, %r1053, %r1054, 23;
	shf.l.wrap.b32 	%r1060, %r1054, %r1053, 23;
	mov.b64 	%rd1536, {%r1060, %r1059};
	xor.b64  	%rd1537, %rd1535, %rd1536;
	xor.b64  	%rd1538, %rd1497, %rd1473;
	and.b64  	%rd1539, %rd1521, %rd1538;
	xor.b64  	%rd1540, %rd1539, %rd1473;
	add.s64 	%rd1541, %rd1449, %rd1183;
	add.s64 	%rd1542, %rd1541, %rd2699;
	add.s64 	%rd1543, %rd1542, %rd1540;
	add.s64 	%rd1544, %rd1543, %rd1537;
	add.s64 	%rd1545, %rd1544, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd1532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1062}, %rd1532;
	}
	shf.r.wrap.b32 	%r1063, %r1062, %r1061, 28;
	shf.r.wrap.b32 	%r1064, %r1061, %r1062, 28;
	mov.b64 	%rd1546, {%r1064, %r1063};
	shf.l.wrap.b32 	%r1065, %r1061, %r1062, 30;
	shf.l.wrap.b32 	%r1066, %r1062, %r1061, 30;
	mov.b64 	%rd1547, {%r1066, %r1065};
	xor.b64  	%rd1548, %rd1547, %rd1546;
	shf.l.wrap.b32 	%r1067, %r1061, %r1062, 25;
	shf.l.wrap.b32 	%r1068, %r1062, %r1061, 25;
	mov.b64 	%rd1549, {%r1068, %r1067};
	xor.b64  	%rd1550, %rd1548, %rd1549;
	xor.b64  	%rd1551, %rd1532, %rd1484;
	xor.b64  	%rd1552, %rd1532, %rd1508;
	and.b64  	%rd1553, %rd1552, %rd1551;
	xor.b64  	%rd1554, %rd1553, %rd1532;
	add.s64 	%rd1555, %rd1544, %rd1554;
	add.s64 	%rd1556, %rd1555, %rd1550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd1545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd1545;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 14;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 14;
	mov.b64 	%rd1557, {%r1072, %r1071};
	shf.r.wrap.b32 	%r1073, %r1070, %r1069, 18;
	shf.r.wrap.b32 	%r1074, %r1069, %r1070, 18;
	mov.b64 	%rd1558, {%r1074, %r1073};
	xor.b64  	%rd1559, %rd1558, %rd1557;
	shf.l.wrap.b32 	%r1075, %r1069, %r1070, 23;
	shf.l.wrap.b32 	%r1076, %r1070, %r1069, 23;
	mov.b64 	%rd1560, {%r1076, %r1075};
	xor.b64  	%rd1561, %rd1559, %rd1560;
	xor.b64  	%rd1562, %rd1521, %rd1497;
	and.b64  	%rd1563, %rd1545, %rd1562;
	xor.b64  	%rd1564, %rd1563, %rd1497;
	add.s64 	%rd1565, %rd1473, %rd1196;
	add.s64 	%rd1566, %rd1565, %rd2700;
	add.s64 	%rd1567, %rd1566, %rd1564;
	add.s64 	%rd1568, %rd1567, %rd1561;
	add.s64 	%rd1569, %rd1568, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd1556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd1556;
	}
	shf.r.wrap.b32 	%r1079, %r1078, %r1077, 28;
	shf.r.wrap.b32 	%r1080, %r1077, %r1078, 28;
	mov.b64 	%rd1570, {%r1080, %r1079};
	shf.l.wrap.b32 	%r1081, %r1077, %r1078, 30;
	shf.l.wrap.b32 	%r1082, %r1078, %r1077, 30;
	mov.b64 	%rd1571, {%r1082, %r1081};
	xor.b64  	%rd1572, %rd1571, %rd1570;
	shf.l.wrap.b32 	%r1083, %r1077, %r1078, 25;
	shf.l.wrap.b32 	%r1084, %r1078, %r1077, 25;
	mov.b64 	%rd1573, {%r1084, %r1083};
	xor.b64  	%rd1574, %rd1572, %rd1573;
	xor.b64  	%rd1575, %rd1556, %rd1508;
	xor.b64  	%rd1576, %rd1556, %rd1532;
	and.b64  	%rd1577, %rd1576, %rd1575;
	xor.b64  	%rd1578, %rd1577, %rd1556;
	add.s64 	%rd1579, %rd1568, %rd1578;
	add.s64 	%rd1580, %rd1579, %rd1574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1085,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1086}, %rd1183;
	}
	shf.r.wrap.b32 	%r1087, %r1086, %r1085, 19;
	shf.r.wrap.b32 	%r1088, %r1085, %r1086, 19;
	mov.b64 	%rd1581, {%r1088, %r1087};
	shf.l.wrap.b32 	%r1089, %r1085, %r1086, 3;
	shf.l.wrap.b32 	%r1090, %r1086, %r1085, 3;
	mov.b64 	%rd1582, {%r1090, %r1089};
	shr.u64 	%rd1583, %rd1183, 6;
	xor.b64  	%rd1584, %rd1581, %rd1583;
	xor.b64  	%rd1585, %rd1584, %rd1582;
	shf.r.wrap.b32 	%r1091, %r704, %r703, 1;
	shf.r.wrap.b32 	%r1092, %r703, %r704, 1;
	mov.b64 	%rd1586, {%r1092, %r1091};
	shf.r.wrap.b32 	%r1093, %r704, %r703, 8;
	shf.r.wrap.b32 	%r1094, %r703, %r704, 8;
	mov.b64 	%rd1587, {%r1094, %r1093};
	shr.u64 	%rd1588, %rd1024, 7;
	xor.b64  	%rd1589, %rd1586, %rd1588;
	xor.b64  	%rd1590, %rd1589, %rd1587;
	add.s64 	%rd1591, %rd1011, %rd1118;
	add.s64 	%rd1592, %rd1591, %rd1585;
	add.s64 	%rd1593, %rd1592, %rd1590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd1196;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 19;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 19;
	mov.b64 	%rd1594, {%r1098, %r1097};
	shf.l.wrap.b32 	%r1099, %r1095, %r1096, 3;
	shf.l.wrap.b32 	%r1100, %r1096, %r1095, 3;
	mov.b64 	%rd1595, {%r1100, %r1099};
	shr.u64 	%rd1596, %rd1196, 6;
	xor.b64  	%rd1597, %rd1594, %rd1596;
	xor.b64  	%rd1598, %rd1597, %rd1595;
	shf.r.wrap.b32 	%r1101, %r714, %r713, 1;
	shf.r.wrap.b32 	%r1102, %r713, %r714, 1;
	mov.b64 	%rd1599, {%r1102, %r1101};
	shf.r.wrap.b32 	%r1103, %r714, %r713, 8;
	shf.r.wrap.b32 	%r1104, %r713, %r714, 8;
	mov.b64 	%rd1600, {%r1104, %r1103};
	shr.u64 	%rd1601, %rd1032, 7;
	xor.b64  	%rd1602, %rd1599, %rd1601;
	xor.b64  	%rd1603, %rd1602, %rd1600;
	add.s64 	%rd1604, %rd1024, %rd1131;
	add.s64 	%rd1605, %rd1604, %rd1598;
	add.s64 	%rd1606, %rd1605, %rd1603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd1593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd1593;
	}
	shf.r.wrap.b32 	%r1107, %r1106, %r1105, 19;
	shf.r.wrap.b32 	%r1108, %r1105, %r1106, 19;
	mov.b64 	%rd1607, {%r1108, %r1107};
	shf.l.wrap.b32 	%r1109, %r1105, %r1106, 3;
	shf.l.wrap.b32 	%r1110, %r1106, %r1105, 3;
	mov.b64 	%rd1608, {%r1110, %r1109};
	shr.u64 	%rd1609, %rd1593, 6;
	xor.b64  	%rd1610, %rd1607, %rd1609;
	xor.b64  	%rd1611, %rd1610, %rd1608;
	shf.r.wrap.b32 	%r1111, %r720, %r719, 1;
	shf.r.wrap.b32 	%r1112, %r719, %r720, 1;
	mov.b64 	%rd1612, {%r1112, %r1111};
	shf.r.wrap.b32 	%r1113, %r720, %r719, 8;
	shf.r.wrap.b32 	%r1114, %r719, %r720, 8;
	mov.b64 	%rd1613, {%r1114, %r1113};
	shr.u64 	%rd1614, %rd1045, 7;
	xor.b64  	%rd1615, %rd1612, %rd1614;
	xor.b64  	%rd1616, %rd1615, %rd1613;
	add.s64 	%rd1617, %rd1032, %rd1144;
	add.s64 	%rd1618, %rd1617, %rd1611;
	add.s64 	%rd1619, %rd1618, %rd1616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1115,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1116}, %rd1606;
	}
	shf.r.wrap.b32 	%r1117, %r1116, %r1115, 19;
	shf.r.wrap.b32 	%r1118, %r1115, %r1116, 19;
	mov.b64 	%rd1620, {%r1118, %r1117};
	shf.l.wrap.b32 	%r1119, %r1115, %r1116, 3;
	shf.l.wrap.b32 	%r1120, %r1116, %r1115, 3;
	mov.b64 	%rd1621, {%r1120, %r1119};
	shr.u64 	%rd1622, %rd1606, 6;
	xor.b64  	%rd1623, %rd1620, %rd1622;
	xor.b64  	%rd1624, %rd1623, %rd1621;
	shf.r.wrap.b32 	%r1121, %r730, %r729, 1;
	shf.r.wrap.b32 	%r1122, %r729, %r730, 1;
	mov.b64 	%rd1625, {%r1122, %r1121};
	shf.r.wrap.b32 	%r1123, %r730, %r729, 8;
	shf.r.wrap.b32 	%r1124, %r729, %r730, 8;
	mov.b64 	%rd1626, {%r1124, %r1123};
	shr.u64 	%rd1627, %rd1053, 7;
	xor.b64  	%rd1628, %rd1625, %rd1627;
	xor.b64  	%rd1629, %rd1628, %rd1626;
	add.s64 	%rd1630, %rd1045, %rd1157;
	add.s64 	%rd1631, %rd1630, %rd1624;
	add.s64 	%rd1632, %rd1631, %rd1629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd1619;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 19;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 19;
	mov.b64 	%rd1633, {%r1128, %r1127};
	shf.l.wrap.b32 	%r1129, %r1125, %r1126, 3;
	shf.l.wrap.b32 	%r1130, %r1126, %r1125, 3;
	mov.b64 	%rd1634, {%r1130, %r1129};
	shr.u64 	%rd1635, %rd1619, 6;
	xor.b64  	%rd1636, %rd1633, %rd1635;
	xor.b64  	%rd1637, %rd1636, %rd1634;
	shf.r.wrap.b32 	%r1131, %r740, %r739, 1;
	shf.r.wrap.b32 	%r1132, %r739, %r740, 1;
	mov.b64 	%rd1638, {%r1132, %r1131};
	shf.r.wrap.b32 	%r1133, %r740, %r739, 8;
	shf.r.wrap.b32 	%r1134, %r739, %r740, 8;
	mov.b64 	%rd1639, {%r1134, %r1133};
	shr.u64 	%rd1640, %rd1066, 7;
	xor.b64  	%rd1641, %rd1638, %rd1640;
	xor.b64  	%rd1642, %rd1641, %rd1639;
	add.s64 	%rd1643, %rd1053, %rd1170;
	add.s64 	%rd1644, %rd1643, %rd1637;
	add.s64 	%rd1645, %rd1644, %rd1642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1135,%dummy}, %rd1632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1136}, %rd1632;
	}
	shf.r.wrap.b32 	%r1137, %r1136, %r1135, 19;
	shf.r.wrap.b32 	%r1138, %r1135, %r1136, 19;
	mov.b64 	%rd1646, {%r1138, %r1137};
	shf.l.wrap.b32 	%r1139, %r1135, %r1136, 3;
	shf.l.wrap.b32 	%r1140, %r1136, %r1135, 3;
	mov.b64 	%rd1647, {%r1140, %r1139};
	shr.u64 	%rd1648, %rd1632, 6;
	xor.b64  	%rd1649, %rd1646, %rd1648;
	xor.b64  	%rd1650, %rd1649, %rd1647;
	shf.r.wrap.b32 	%r1141, %r750, %r749, 1;
	shf.r.wrap.b32 	%r1142, %r749, %r750, 1;
	mov.b64 	%rd1651, {%r1142, %r1141};
	shf.r.wrap.b32 	%r1143, %r750, %r749, 8;
	shf.r.wrap.b32 	%r1144, %r749, %r750, 8;
	mov.b64 	%rd1652, {%r1144, %r1143};
	shr.u64 	%rd1653, %rd1079, 7;
	xor.b64  	%rd1654, %rd1651, %rd1653;
	xor.b64  	%rd1655, %rd1654, %rd1652;
	add.s64 	%rd1656, %rd1066, %rd1183;
	add.s64 	%rd1657, %rd1656, %rd1650;
	add.s64 	%rd1658, %rd1657, %rd1655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1145,%dummy}, %rd1645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1146}, %rd1645;
	}
	shf.r.wrap.b32 	%r1147, %r1146, %r1145, 19;
	shf.r.wrap.b32 	%r1148, %r1145, %r1146, 19;
	mov.b64 	%rd1659, {%r1148, %r1147};
	shf.l.wrap.b32 	%r1149, %r1145, %r1146, 3;
	shf.l.wrap.b32 	%r1150, %r1146, %r1145, 3;
	mov.b64 	%rd1660, {%r1150, %r1149};
	shr.u64 	%rd1661, %rd1645, 6;
	xor.b64  	%rd1662, %rd1659, %rd1661;
	xor.b64  	%rd1663, %rd1662, %rd1660;
	shf.r.wrap.b32 	%r1151, %r760, %r759, 1;
	shf.r.wrap.b32 	%r1152, %r759, %r760, 1;
	mov.b64 	%rd1664, {%r1152, %r1151};
	shf.r.wrap.b32 	%r1153, %r760, %r759, 8;
	shf.r.wrap.b32 	%r1154, %r759, %r760, 8;
	mov.b64 	%rd1665, {%r1154, %r1153};
	shr.u64 	%rd1666, %rd1092, 7;
	xor.b64  	%rd1667, %rd1664, %rd1666;
	xor.b64  	%rd1668, %rd1667, %rd1665;
	add.s64 	%rd1669, %rd1079, %rd1196;
	add.s64 	%rd1670, %rd1669, %rd1663;
	add.s64 	%rd1671, %rd1670, %rd1668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1155,%dummy}, %rd1658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd1658;
	}
	shf.r.wrap.b32 	%r1157, %r1156, %r1155, 19;
	shf.r.wrap.b32 	%r1158, %r1155, %r1156, 19;
	mov.b64 	%rd1672, {%r1158, %r1157};
	shf.l.wrap.b32 	%r1159, %r1155, %r1156, 3;
	shf.l.wrap.b32 	%r1160, %r1156, %r1155, 3;
	mov.b64 	%rd1673, {%r1160, %r1159};
	shr.u64 	%rd1674, %rd1658, 6;
	xor.b64  	%rd1675, %rd1672, %rd1674;
	xor.b64  	%rd1676, %rd1675, %rd1673;
	shf.r.wrap.b32 	%r1161, %r770, %r769, 1;
	shf.r.wrap.b32 	%r1162, %r769, %r770, 1;
	mov.b64 	%rd1677, {%r1162, %r1161};
	shf.r.wrap.b32 	%r1163, %r770, %r769, 8;
	shf.r.wrap.b32 	%r1164, %r769, %r770, 8;
	mov.b64 	%rd1678, {%r1164, %r1163};
	shr.u64 	%rd1679, %rd1105, 7;
	xor.b64  	%rd1680, %rd1677, %rd1679;
	xor.b64  	%rd1681, %rd1680, %rd1678;
	add.s64 	%rd1682, %rd1593, %rd1092;
	add.s64 	%rd1683, %rd1682, %rd1676;
	add.s64 	%rd1684, %rd1683, %rd1681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd1671;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 19;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 19;
	mov.b64 	%rd1685, {%r1168, %r1167};
	shf.l.wrap.b32 	%r1169, %r1165, %r1166, 3;
	shf.l.wrap.b32 	%r1170, %r1166, %r1165, 3;
	mov.b64 	%rd1686, {%r1170, %r1169};
	shr.u64 	%rd1687, %rd1671, 6;
	xor.b64  	%rd1688, %rd1685, %rd1687;
	xor.b64  	%rd1689, %rd1688, %rd1686;
	shf.r.wrap.b32 	%r1171, %r780, %r779, 1;
	shf.r.wrap.b32 	%r1172, %r779, %r780, 1;
	mov.b64 	%rd1690, {%r1172, %r1171};
	shf.r.wrap.b32 	%r1173, %r780, %r779, 8;
	shf.r.wrap.b32 	%r1174, %r779, %r780, 8;
	mov.b64 	%rd1691, {%r1174, %r1173};
	shr.u64 	%rd1692, %rd1118, 7;
	xor.b64  	%rd1693, %rd1690, %rd1692;
	xor.b64  	%rd1694, %rd1693, %rd1691;
	add.s64 	%rd1695, %rd1606, %rd1105;
	add.s64 	%rd1696, %rd1695, %rd1689;
	add.s64 	%rd1697, %rd1696, %rd1694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1175,%dummy}, %rd1684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1176}, %rd1684;
	}
	shf.r.wrap.b32 	%r1177, %r1176, %r1175, 19;
	shf.r.wrap.b32 	%r1178, %r1175, %r1176, 19;
	mov.b64 	%rd1698, {%r1178, %r1177};
	shf.l.wrap.b32 	%r1179, %r1175, %r1176, 3;
	shf.l.wrap.b32 	%r1180, %r1176, %r1175, 3;
	mov.b64 	%rd1699, {%r1180, %r1179};
	shr.u64 	%rd1700, %rd1684, 6;
	xor.b64  	%rd1701, %rd1698, %rd1700;
	xor.b64  	%rd1702, %rd1701, %rd1699;
	shf.r.wrap.b32 	%r1181, %r790, %r789, 1;
	shf.r.wrap.b32 	%r1182, %r789, %r790, 1;
	mov.b64 	%rd1703, {%r1182, %r1181};
	shf.r.wrap.b32 	%r1183, %r790, %r789, 8;
	shf.r.wrap.b32 	%r1184, %r789, %r790, 8;
	mov.b64 	%rd1704, {%r1184, %r1183};
	shr.u64 	%rd1705, %rd1131, 7;
	xor.b64  	%rd1706, %rd1703, %rd1705;
	xor.b64  	%rd1707, %rd1706, %rd1704;
	add.s64 	%rd1708, %rd1619, %rd1118;
	add.s64 	%rd1709, %rd1708, %rd1702;
	add.s64 	%rd1710, %rd1709, %rd1707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd1697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1186}, %rd1697;
	}
	shf.r.wrap.b32 	%r1187, %r1186, %r1185, 19;
	shf.r.wrap.b32 	%r1188, %r1185, %r1186, 19;
	mov.b64 	%rd1711, {%r1188, %r1187};
	shf.l.wrap.b32 	%r1189, %r1185, %r1186, 3;
	shf.l.wrap.b32 	%r1190, %r1186, %r1185, 3;
	mov.b64 	%rd1712, {%r1190, %r1189};
	shr.u64 	%rd1713, %rd1697, 6;
	xor.b64  	%rd1714, %rd1711, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd1712;
	shf.r.wrap.b32 	%r1191, %r800, %r799, 1;
	shf.r.wrap.b32 	%r1192, %r799, %r800, 1;
	mov.b64 	%rd1716, {%r1192, %r1191};
	shf.r.wrap.b32 	%r1193, %r800, %r799, 8;
	shf.r.wrap.b32 	%r1194, %r799, %r800, 8;
	mov.b64 	%rd1717, {%r1194, %r1193};
	shr.u64 	%rd1718, %rd1144, 7;
	xor.b64  	%rd1719, %rd1716, %rd1718;
	xor.b64  	%rd1720, %rd1719, %rd1717;
	add.s64 	%rd1721, %rd1632, %rd1131;
	add.s64 	%rd1722, %rd1721, %rd1715;
	add.s64 	%rd1723, %rd1722, %rd1720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1195,%dummy}, %rd1710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1196}, %rd1710;
	}
	shf.r.wrap.b32 	%r1197, %r1196, %r1195, 19;
	shf.r.wrap.b32 	%r1198, %r1195, %r1196, 19;
	mov.b64 	%rd1724, {%r1198, %r1197};
	shf.l.wrap.b32 	%r1199, %r1195, %r1196, 3;
	shf.l.wrap.b32 	%r1200, %r1196, %r1195, 3;
	mov.b64 	%rd1725, {%r1200, %r1199};
	shr.u64 	%rd1726, %rd1710, 6;
	xor.b64  	%rd1727, %rd1724, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1725;
	shf.r.wrap.b32 	%r1201, %r810, %r809, 1;
	shf.r.wrap.b32 	%r1202, %r809, %r810, 1;
	mov.b64 	%rd1729, {%r1202, %r1201};
	shf.r.wrap.b32 	%r1203, %r810, %r809, 8;
	shf.r.wrap.b32 	%r1204, %r809, %r810, 8;
	mov.b64 	%rd1730, {%r1204, %r1203};
	shr.u64 	%rd1731, %rd1157, 7;
	xor.b64  	%rd1732, %rd1729, %rd1731;
	xor.b64  	%rd1733, %rd1732, %rd1730;
	add.s64 	%rd1734, %rd1645, %rd1144;
	add.s64 	%rd1735, %rd1734, %rd1728;
	add.s64 	%rd1736, %rd1735, %rd1733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1205,%dummy}, %rd1723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1206}, %rd1723;
	}
	shf.r.wrap.b32 	%r1207, %r1206, %r1205, 19;
	shf.r.wrap.b32 	%r1208, %r1205, %r1206, 19;
	mov.b64 	%rd1737, {%r1208, %r1207};
	shf.l.wrap.b32 	%r1209, %r1205, %r1206, 3;
	shf.l.wrap.b32 	%r1210, %r1206, %r1205, 3;
	mov.b64 	%rd1738, {%r1210, %r1209};
	shr.u64 	%rd1739, %rd1723, 6;
	xor.b64  	%rd1740, %rd1737, %rd1739;
	xor.b64  	%rd1741, %rd1740, %rd1738;
	shf.r.wrap.b32 	%r1211, %r820, %r819, 1;
	shf.r.wrap.b32 	%r1212, %r819, %r820, 1;
	mov.b64 	%rd1742, {%r1212, %r1211};
	shf.r.wrap.b32 	%r1213, %r820, %r819, 8;
	shf.r.wrap.b32 	%r1214, %r819, %r820, 8;
	mov.b64 	%rd1743, {%r1214, %r1213};
	shr.u64 	%rd1744, %rd1170, 7;
	xor.b64  	%rd1745, %rd1742, %rd1744;
	xor.b64  	%rd1746, %rd1745, %rd1743;
	add.s64 	%rd1747, %rd1658, %rd1157;
	add.s64 	%rd1748, %rd1747, %rd1741;
	add.s64 	%rd1749, %rd1748, %rd1746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1215,%dummy}, %rd1736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1216}, %rd1736;
	}
	shf.r.wrap.b32 	%r1217, %r1216, %r1215, 19;
	shf.r.wrap.b32 	%r1218, %r1215, %r1216, 19;
	mov.b64 	%rd1750, {%r1218, %r1217};
	shf.l.wrap.b32 	%r1219, %r1215, %r1216, 3;
	shf.l.wrap.b32 	%r1220, %r1216, %r1215, 3;
	mov.b64 	%rd1751, {%r1220, %r1219};
	shr.u64 	%rd1752, %rd1736, 6;
	xor.b64  	%rd1753, %rd1750, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1751;
	shf.r.wrap.b32 	%r1221, %r1086, %r1085, 1;
	shf.r.wrap.b32 	%r1222, %r1085, %r1086, 1;
	mov.b64 	%rd1755, {%r1222, %r1221};
	shf.r.wrap.b32 	%r1223, %r1086, %r1085, 8;
	shf.r.wrap.b32 	%r1224, %r1085, %r1086, 8;
	mov.b64 	%rd1756, {%r1224, %r1223};
	shr.u64 	%rd1757, %rd1183, 7;
	xor.b64  	%rd1758, %rd1755, %rd1757;
	xor.b64  	%rd1759, %rd1758, %rd1756;
	add.s64 	%rd1760, %rd1671, %rd1170;
	add.s64 	%rd1761, %rd1760, %rd1754;
	add.s64 	%rd1762, %rd1761, %rd1759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd1749;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 19;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 19;
	mov.b64 	%rd1763, {%r1228, %r1227};
	shf.l.wrap.b32 	%r1229, %r1225, %r1226, 3;
	shf.l.wrap.b32 	%r1230, %r1226, %r1225, 3;
	mov.b64 	%rd1764, {%r1230, %r1229};
	shr.u64 	%rd1765, %rd1749, 6;
	xor.b64  	%rd1766, %rd1763, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1764;
	shf.r.wrap.b32 	%r1231, %r1096, %r1095, 1;
	shf.r.wrap.b32 	%r1232, %r1095, %r1096, 1;
	mov.b64 	%rd1768, {%r1232, %r1231};
	shf.r.wrap.b32 	%r1233, %r1096, %r1095, 8;
	shf.r.wrap.b32 	%r1234, %r1095, %r1096, 8;
	mov.b64 	%rd1769, {%r1234, %r1233};
	shr.u64 	%rd1770, %rd1196, 7;
	xor.b64  	%rd1771, %rd1768, %rd1770;
	xor.b64  	%rd1772, %rd1771, %rd1769;
	add.s64 	%rd1773, %rd1684, %rd1183;
	add.s64 	%rd1774, %rd1773, %rd1767;
	add.s64 	%rd1775, %rd1774, %rd1772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1235,%dummy}, %rd1762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1236}, %rd1762;
	}
	shf.r.wrap.b32 	%r1237, %r1236, %r1235, 19;
	shf.r.wrap.b32 	%r1238, %r1235, %r1236, 19;
	mov.b64 	%rd1776, {%r1238, %r1237};
	shf.l.wrap.b32 	%r1239, %r1235, %r1236, 3;
	shf.l.wrap.b32 	%r1240, %r1236, %r1235, 3;
	mov.b64 	%rd1777, {%r1240, %r1239};
	shr.u64 	%rd1778, %rd1762, 6;
	xor.b64  	%rd1779, %rd1776, %rd1778;
	xor.b64  	%rd1780, %rd1779, %rd1777;
	shf.r.wrap.b32 	%r1241, %r1106, %r1105, 1;
	shf.r.wrap.b32 	%r1242, %r1105, %r1106, 1;
	mov.b64 	%rd1781, {%r1242, %r1241};
	shf.r.wrap.b32 	%r1243, %r1106, %r1105, 8;
	shf.r.wrap.b32 	%r1244, %r1105, %r1106, 8;
	mov.b64 	%rd1782, {%r1244, %r1243};
	shr.u64 	%rd1783, %rd1593, 7;
	xor.b64  	%rd1784, %rd1781, %rd1783;
	xor.b64  	%rd1785, %rd1784, %rd1782;
	add.s64 	%rd1786, %rd1697, %rd1196;
	add.s64 	%rd1787, %rd1786, %rd1780;
	add.s64 	%rd1788, %rd1787, %rd1785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd1569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd1569;
	}
	shf.r.wrap.b32 	%r1247, %r1246, %r1245, 14;
	shf.r.wrap.b32 	%r1248, %r1245, %r1246, 14;
	mov.b64 	%rd1789, {%r1248, %r1247};
	shf.r.wrap.b32 	%r1249, %r1246, %r1245, 18;
	shf.r.wrap.b32 	%r1250, %r1245, %r1246, 18;
	mov.b64 	%rd1790, {%r1250, %r1249};
	xor.b64  	%rd1791, %rd1790, %rd1789;
	shf.l.wrap.b32 	%r1251, %r1245, %r1246, 23;
	shf.l.wrap.b32 	%r1252, %r1246, %r1245, 23;
	mov.b64 	%rd1792, {%r1252, %r1251};
	xor.b64  	%rd1793, %rd1791, %rd1792;
	xor.b64  	%rd1794, %rd1521, %rd1545;
	and.b64  	%rd1795, %rd1794, %rd1569;
	xor.b64  	%rd1796, %rd1795, %rd1521;
	add.s64 	%rd1797, %rd1796, %rd1497;
	add.s64 	%rd1798, %rd1797, %rd1593;
	add.s64 	%rd1799, %rd1798, %rd2701;
	add.s64 	%rd1800, %rd1799, %rd1793;
	add.s64 	%rd1801, %rd1800, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd1580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd1580;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 28;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 28;
	mov.b64 	%rd1802, {%r1256, %r1255};
	shf.l.wrap.b32 	%r1257, %r1253, %r1254, 30;
	shf.l.wrap.b32 	%r1258, %r1254, %r1253, 30;
	mov.b64 	%rd1803, {%r1258, %r1257};
	xor.b64  	%rd1804, %rd1803, %rd1802;
	shf.l.wrap.b32 	%r1259, %r1253, %r1254, 25;
	shf.l.wrap.b32 	%r1260, %r1254, %r1253, 25;
	mov.b64 	%rd1805, {%r1260, %r1259};
	xor.b64  	%rd1806, %rd1804, %rd1805;
	xor.b64  	%rd1807, %rd1580, %rd1532;
	xor.b64  	%rd1808, %rd1580, %rd1556;
	and.b64  	%rd1809, %rd1808, %rd1807;
	xor.b64  	%rd1810, %rd1809, %rd1580;
	add.s64 	%rd1811, %rd1800, %rd1810;
	add.s64 	%rd1812, %rd1811, %rd1806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1801;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 14;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 14;
	mov.b64 	%rd1813, {%r1264, %r1263};
	shf.r.wrap.b32 	%r1265, %r1262, %r1261, 18;
	shf.r.wrap.b32 	%r1266, %r1261, %r1262, 18;
	mov.b64 	%rd1814, {%r1266, %r1265};
	xor.b64  	%rd1815, %rd1814, %rd1813;
	shf.l.wrap.b32 	%r1267, %r1261, %r1262, 23;
	shf.l.wrap.b32 	%r1268, %r1262, %r1261, 23;
	mov.b64 	%rd1816, {%r1268, %r1267};
	xor.b64  	%rd1817, %rd1815, %rd1816;
	xor.b64  	%rd1818, %rd1545, %rd1569;
	and.b64  	%rd1819, %rd1801, %rd1818;
	xor.b64  	%rd1820, %rd1819, %rd1545;
	add.s64 	%rd1821, %rd1606, %rd1521;
	add.s64 	%rd1822, %rd1821, %rd2702;
	add.s64 	%rd1823, %rd1822, %rd1820;
	add.s64 	%rd1824, %rd1823, %rd1817;
	add.s64 	%rd1825, %rd1824, %rd1532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd1812;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 28;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 28;
	mov.b64 	%rd1826, {%r1272, %r1271};
	shf.l.wrap.b32 	%r1273, %r1269, %r1270, 30;
	shf.l.wrap.b32 	%r1274, %r1270, %r1269, 30;
	mov.b64 	%rd1827, {%r1274, %r1273};
	xor.b64  	%rd1828, %rd1827, %rd1826;
	shf.l.wrap.b32 	%r1275, %r1269, %r1270, 25;
	shf.l.wrap.b32 	%r1276, %r1270, %r1269, 25;
	mov.b64 	%rd1829, {%r1276, %r1275};
	xor.b64  	%rd1830, %rd1828, %rd1829;
	xor.b64  	%rd1831, %rd1812, %rd1556;
	xor.b64  	%rd1832, %rd1812, %rd1580;
	and.b64  	%rd1833, %rd1832, %rd1831;
	xor.b64  	%rd1834, %rd1833, %rd1812;
	add.s64 	%rd1835, %rd1824, %rd1834;
	add.s64 	%rd1836, %rd1835, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd1825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1278}, %rd1825;
	}
	shf.r.wrap.b32 	%r1279, %r1278, %r1277, 14;
	shf.r.wrap.b32 	%r1280, %r1277, %r1278, 14;
	mov.b64 	%rd1837, {%r1280, %r1279};
	shf.r.wrap.b32 	%r1281, %r1278, %r1277, 18;
	shf.r.wrap.b32 	%r1282, %r1277, %r1278, 18;
	mov.b64 	%rd1838, {%r1282, %r1281};
	xor.b64  	%rd1839, %rd1838, %rd1837;
	shf.l.wrap.b32 	%r1283, %r1277, %r1278, 23;
	shf.l.wrap.b32 	%r1284, %r1278, %r1277, 23;
	mov.b64 	%rd1840, {%r1284, %r1283};
	xor.b64  	%rd1841, %rd1839, %rd1840;
	xor.b64  	%rd1842, %rd1801, %rd1569;
	and.b64  	%rd1843, %rd1825, %rd1842;
	xor.b64  	%rd1844, %rd1843, %rd1569;
	add.s64 	%rd1845, %rd1619, %rd1545;
	add.s64 	%rd1846, %rd1845, %rd2703;
	add.s64 	%rd1847, %rd1846, %rd1844;
	add.s64 	%rd1848, %rd1847, %rd1841;
	add.s64 	%rd1849, %rd1848, %rd1556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1836;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 28;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 28;
	mov.b64 	%rd1850, {%r1288, %r1287};
	shf.l.wrap.b32 	%r1289, %r1285, %r1286, 30;
	shf.l.wrap.b32 	%r1290, %r1286, %r1285, 30;
	mov.b64 	%rd1851, {%r1290, %r1289};
	xor.b64  	%rd1852, %rd1851, %rd1850;
	shf.l.wrap.b32 	%r1291, %r1285, %r1286, 25;
	shf.l.wrap.b32 	%r1292, %r1286, %r1285, 25;
	mov.b64 	%rd1853, {%r1292, %r1291};
	xor.b64  	%rd1854, %rd1852, %rd1853;
	xor.b64  	%rd1855, %rd1836, %rd1580;
	xor.b64  	%rd1856, %rd1836, %rd1812;
	and.b64  	%rd1857, %rd1856, %rd1855;
	xor.b64  	%rd1858, %rd1857, %rd1836;
	add.s64 	%rd1859, %rd1848, %rd1858;
	add.s64 	%rd1860, %rd1859, %rd1854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd1849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1849;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 14;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 14;
	mov.b64 	%rd1861, {%r1296, %r1295};
	shf.r.wrap.b32 	%r1297, %r1294, %r1293, 18;
	shf.r.wrap.b32 	%r1298, %r1293, %r1294, 18;
	mov.b64 	%rd1862, {%r1298, %r1297};
	xor.b64  	%rd1863, %rd1862, %rd1861;
	shf.l.wrap.b32 	%r1299, %r1293, %r1294, 23;
	shf.l.wrap.b32 	%r1300, %r1294, %r1293, 23;
	mov.b64 	%rd1864, {%r1300, %r1299};
	xor.b64  	%rd1865, %rd1863, %rd1864;
	xor.b64  	%rd1866, %rd1825, %rd1801;
	and.b64  	%rd1867, %rd1849, %rd1866;
	xor.b64  	%rd1868, %rd1867, %rd1801;
	add.s64 	%rd1869, %rd1632, %rd1569;
	add.s64 	%rd1870, %rd1869, %rd2704;
	add.s64 	%rd1871, %rd1870, %rd1868;
	add.s64 	%rd1872, %rd1871, %rd1865;
	add.s64 	%rd1873, %rd1872, %rd1580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd1860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd1860;
	}
	shf.r.wrap.b32 	%r1303, %r1302, %r1301, 28;
	shf.r.wrap.b32 	%r1304, %r1301, %r1302, 28;
	mov.b64 	%rd1874, {%r1304, %r1303};
	shf.l.wrap.b32 	%r1305, %r1301, %r1302, 30;
	shf.l.wrap.b32 	%r1306, %r1302, %r1301, 30;
	mov.b64 	%rd1875, {%r1306, %r1305};
	xor.b64  	%rd1876, %rd1875, %rd1874;
	shf.l.wrap.b32 	%r1307, %r1301, %r1302, 25;
	shf.l.wrap.b32 	%r1308, %r1302, %r1301, 25;
	mov.b64 	%rd1877, {%r1308, %r1307};
	xor.b64  	%rd1878, %rd1876, %rd1877;
	xor.b64  	%rd1879, %rd1860, %rd1812;
	xor.b64  	%rd1880, %rd1860, %rd1836;
	and.b64  	%rd1881, %rd1880, %rd1879;
	xor.b64  	%rd1882, %rd1881, %rd1860;
	add.s64 	%rd1883, %rd1872, %rd1882;
	add.s64 	%rd1884, %rd1883, %rd1878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd1873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1310}, %rd1873;
	}
	shf.r.wrap.b32 	%r1311, %r1310, %r1309, 14;
	shf.r.wrap.b32 	%r1312, %r1309, %r1310, 14;
	mov.b64 	%rd1885, {%r1312, %r1311};
	shf.r.wrap.b32 	%r1313, %r1310, %r1309, 18;
	shf.r.wrap.b32 	%r1314, %r1309, %r1310, 18;
	mov.b64 	%rd1886, {%r1314, %r1313};
	xor.b64  	%rd1887, %rd1886, %rd1885;
	shf.l.wrap.b32 	%r1315, %r1309, %r1310, 23;
	shf.l.wrap.b32 	%r1316, %r1310, %r1309, 23;
	mov.b64 	%rd1888, {%r1316, %r1315};
	xor.b64  	%rd1889, %rd1887, %rd1888;
	xor.b64  	%rd1890, %rd1849, %rd1825;
	and.b64  	%rd1891, %rd1873, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1825;
	add.s64 	%rd1893, %rd1801, %rd1645;
	add.s64 	%rd1894, %rd1893, %rd2705;
	add.s64 	%rd1895, %rd1894, %rd1892;
	add.s64 	%rd1896, %rd1895, %rd1889;
	add.s64 	%rd1897, %rd1896, %rd1812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd1884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd1884;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 28;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 28;
	mov.b64 	%rd1898, {%r1320, %r1319};
	shf.l.wrap.b32 	%r1321, %r1317, %r1318, 30;
	shf.l.wrap.b32 	%r1322, %r1318, %r1317, 30;
	mov.b64 	%rd1899, {%r1322, %r1321};
	xor.b64  	%rd1900, %rd1899, %rd1898;
	shf.l.wrap.b32 	%r1323, %r1317, %r1318, 25;
	shf.l.wrap.b32 	%r1324, %r1318, %r1317, 25;
	mov.b64 	%rd1901, {%r1324, %r1323};
	xor.b64  	%rd1902, %rd1900, %rd1901;
	xor.b64  	%rd1903, %rd1884, %rd1836;
	xor.b64  	%rd1904, %rd1884, %rd1860;
	and.b64  	%rd1905, %rd1904, %rd1903;
	xor.b64  	%rd1906, %rd1905, %rd1884;
	add.s64 	%rd1907, %rd1896, %rd1906;
	add.s64 	%rd1908, %rd1907, %rd1902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1325,%dummy}, %rd1897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1326}, %rd1897;
	}
	shf.r.wrap.b32 	%r1327, %r1326, %r1325, 14;
	shf.r.wrap.b32 	%r1328, %r1325, %r1326, 14;
	mov.b64 	%rd1909, {%r1328, %r1327};
	shf.r.wrap.b32 	%r1329, %r1326, %r1325, 18;
	shf.r.wrap.b32 	%r1330, %r1325, %r1326, 18;
	mov.b64 	%rd1910, {%r1330, %r1329};
	xor.b64  	%rd1911, %rd1910, %rd1909;
	shf.l.wrap.b32 	%r1331, %r1325, %r1326, 23;
	shf.l.wrap.b32 	%r1332, %r1326, %r1325, 23;
	mov.b64 	%rd1912, {%r1332, %r1331};
	xor.b64  	%rd1913, %rd1911, %rd1912;
	xor.b64  	%rd1914, %rd1873, %rd1849;
	and.b64  	%rd1915, %rd1897, %rd1914;
	xor.b64  	%rd1916, %rd1915, %rd1849;
	add.s64 	%rd1917, %rd1825, %rd1658;
	add.s64 	%rd1918, %rd1917, %rd2706;
	add.s64 	%rd1919, %rd1918, %rd1916;
	add.s64 	%rd1920, %rd1919, %rd1913;
	add.s64 	%rd1921, %rd1920, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd1908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd1908;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 28;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 28;
	mov.b64 	%rd1922, {%r1336, %r1335};
	shf.l.wrap.b32 	%r1337, %r1333, %r1334, 30;
	shf.l.wrap.b32 	%r1338, %r1334, %r1333, 30;
	mov.b64 	%rd1923, {%r1338, %r1337};
	xor.b64  	%rd1924, %rd1923, %rd1922;
	shf.l.wrap.b32 	%r1339, %r1333, %r1334, 25;
	shf.l.wrap.b32 	%r1340, %r1334, %r1333, 25;
	mov.b64 	%rd1925, {%r1340, %r1339};
	xor.b64  	%rd1926, %rd1924, %rd1925;
	xor.b64  	%rd1927, %rd1908, %rd1860;
	xor.b64  	%rd1928, %rd1908, %rd1884;
	and.b64  	%rd1929, %rd1928, %rd1927;
	xor.b64  	%rd1930, %rd1929, %rd1908;
	add.s64 	%rd1931, %rd1920, %rd1930;
	add.s64 	%rd1932, %rd1931, %rd1926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1341,%dummy}, %rd1921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1342}, %rd1921;
	}
	shf.r.wrap.b32 	%r1343, %r1342, %r1341, 14;
	shf.r.wrap.b32 	%r1344, %r1341, %r1342, 14;
	mov.b64 	%rd1933, {%r1344, %r1343};
	shf.r.wrap.b32 	%r1345, %r1342, %r1341, 18;
	shf.r.wrap.b32 	%r1346, %r1341, %r1342, 18;
	mov.b64 	%rd1934, {%r1346, %r1345};
	xor.b64  	%rd1935, %rd1934, %rd1933;
	shf.l.wrap.b32 	%r1347, %r1341, %r1342, 23;
	shf.l.wrap.b32 	%r1348, %r1342, %r1341, 23;
	mov.b64 	%rd1936, {%r1348, %r1347};
	xor.b64  	%rd1937, %rd1935, %rd1936;
	xor.b64  	%rd1938, %rd1897, %rd1873;
	and.b64  	%rd1939, %rd1921, %rd1938;
	xor.b64  	%rd1940, %rd1939, %rd1873;
	add.s64 	%rd1941, %rd1849, %rd1671;
	add.s64 	%rd1942, %rd1941, %rd2707;
	add.s64 	%rd1943, %rd1942, %rd1940;
	add.s64 	%rd1944, %rd1943, %rd1937;
	add.s64 	%rd1945, %rd1944, %rd1860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1349,%dummy}, %rd1932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1350}, %rd1932;
	}
	shf.r.wrap.b32 	%r1351, %r1350, %r1349, 28;
	shf.r.wrap.b32 	%r1352, %r1349, %r1350, 28;
	mov.b64 	%rd1946, {%r1352, %r1351};
	shf.l.wrap.b32 	%r1353, %r1349, %r1350, 30;
	shf.l.wrap.b32 	%r1354, %r1350, %r1349, 30;
	mov.b64 	%rd1947, {%r1354, %r1353};
	xor.b64  	%rd1948, %rd1947, %rd1946;
	shf.l.wrap.b32 	%r1355, %r1349, %r1350, 25;
	shf.l.wrap.b32 	%r1356, %r1350, %r1349, 25;
	mov.b64 	%rd1949, {%r1356, %r1355};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	xor.b64  	%rd1951, %rd1932, %rd1884;
	xor.b64  	%rd1952, %rd1932, %rd1908;
	and.b64  	%rd1953, %rd1952, %rd1951;
	xor.b64  	%rd1954, %rd1953, %rd1932;
	add.s64 	%rd1955, %rd1944, %rd1954;
	add.s64 	%rd1956, %rd1955, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1357,%dummy}, %rd1945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1358}, %rd1945;
	}
	shf.r.wrap.b32 	%r1359, %r1358, %r1357, 14;
	shf.r.wrap.b32 	%r1360, %r1357, %r1358, 14;
	mov.b64 	%rd1957, {%r1360, %r1359};
	shf.r.wrap.b32 	%r1361, %r1358, %r1357, 18;
	shf.r.wrap.b32 	%r1362, %r1357, %r1358, 18;
	mov.b64 	%rd1958, {%r1362, %r1361};
	xor.b64  	%rd1959, %rd1958, %rd1957;
	shf.l.wrap.b32 	%r1363, %r1357, %r1358, 23;
	shf.l.wrap.b32 	%r1364, %r1358, %r1357, 23;
	mov.b64 	%rd1960, {%r1364, %r1363};
	xor.b64  	%rd1961, %rd1959, %rd1960;
	xor.b64  	%rd1962, %rd1921, %rd1897;
	and.b64  	%rd1963, %rd1945, %rd1962;
	xor.b64  	%rd1964, %rd1963, %rd1897;
	add.s64 	%rd1965, %rd1873, %rd1684;
	add.s64 	%rd1966, %rd1965, %rd2708;
	add.s64 	%rd1967, %rd1966, %rd1964;
	add.s64 	%rd1968, %rd1967, %rd1961;
	add.s64 	%rd1969, %rd1968, %rd1884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1365,%dummy}, %rd1956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1366}, %rd1956;
	}
	shf.r.wrap.b32 	%r1367, %r1366, %r1365, 28;
	shf.r.wrap.b32 	%r1368, %r1365, %r1366, 28;
	mov.b64 	%rd1970, {%r1368, %r1367};
	shf.l.wrap.b32 	%r1369, %r1365, %r1366, 30;
	shf.l.wrap.b32 	%r1370, %r1366, %r1365, 30;
	mov.b64 	%rd1971, {%r1370, %r1369};
	xor.b64  	%rd1972, %rd1971, %rd1970;
	shf.l.wrap.b32 	%r1371, %r1365, %r1366, 25;
	shf.l.wrap.b32 	%r1372, %r1366, %r1365, 25;
	mov.b64 	%rd1973, {%r1372, %r1371};
	xor.b64  	%rd1974, %rd1972, %rd1973;
	xor.b64  	%rd1975, %rd1956, %rd1908;
	xor.b64  	%rd1976, %rd1956, %rd1932;
	and.b64  	%rd1977, %rd1976, %rd1975;
	xor.b64  	%rd1978, %rd1977, %rd1956;
	add.s64 	%rd1979, %rd1968, %rd1978;
	add.s64 	%rd1980, %rd1979, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd1969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd1969;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 14;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 14;
	mov.b64 	%rd1981, {%r1376, %r1375};
	shf.r.wrap.b32 	%r1377, %r1374, %r1373, 18;
	shf.r.wrap.b32 	%r1378, %r1373, %r1374, 18;
	mov.b64 	%rd1982, {%r1378, %r1377};
	xor.b64  	%rd1983, %rd1982, %rd1981;
	shf.l.wrap.b32 	%r1379, %r1373, %r1374, 23;
	shf.l.wrap.b32 	%r1380, %r1374, %r1373, 23;
	mov.b64 	%rd1984, {%r1380, %r1379};
	xor.b64  	%rd1985, %rd1983, %rd1984;
	xor.b64  	%rd1986, %rd1945, %rd1921;
	and.b64  	%rd1987, %rd1969, %rd1986;
	xor.b64  	%rd1988, %rd1987, %rd1921;
	add.s64 	%rd1989, %rd1897, %rd1697;
	add.s64 	%rd1990, %rd1989, %rd2709;
	add.s64 	%rd1991, %rd1990, %rd1988;
	add.s64 	%rd1992, %rd1991, %rd1985;
	add.s64 	%rd1993, %rd1992, %rd1908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd1980;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 28;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 28;
	mov.b64 	%rd1994, {%r1384, %r1383};
	shf.l.wrap.b32 	%r1385, %r1381, %r1382, 30;
	shf.l.wrap.b32 	%r1386, %r1382, %r1381, 30;
	mov.b64 	%rd1995, {%r1386, %r1385};
	xor.b64  	%rd1996, %rd1995, %rd1994;
	shf.l.wrap.b32 	%r1387, %r1381, %r1382, 25;
	shf.l.wrap.b32 	%r1388, %r1382, %r1381, 25;
	mov.b64 	%rd1997, {%r1388, %r1387};
	xor.b64  	%rd1998, %rd1996, %rd1997;
	xor.b64  	%rd1999, %rd1980, %rd1932;
	xor.b64  	%rd2000, %rd1980, %rd1956;
	and.b64  	%rd2001, %rd2000, %rd1999;
	xor.b64  	%rd2002, %rd2001, %rd1980;
	add.s64 	%rd2003, %rd1992, %rd2002;
	add.s64 	%rd2004, %rd2003, %rd1998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1389,%dummy}, %rd1993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1390}, %rd1993;
	}
	shf.r.wrap.b32 	%r1391, %r1390, %r1389, 14;
	shf.r.wrap.b32 	%r1392, %r1389, %r1390, 14;
	mov.b64 	%rd2005, {%r1392, %r1391};
	shf.r.wrap.b32 	%r1393, %r1390, %r1389, 18;
	shf.r.wrap.b32 	%r1394, %r1389, %r1390, 18;
	mov.b64 	%rd2006, {%r1394, %r1393};
	xor.b64  	%rd2007, %rd2006, %rd2005;
	shf.l.wrap.b32 	%r1395, %r1389, %r1390, 23;
	shf.l.wrap.b32 	%r1396, %r1390, %r1389, 23;
	mov.b64 	%rd2008, {%r1396, %r1395};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	xor.b64  	%rd2010, %rd1969, %rd1945;
	and.b64  	%rd2011, %rd1993, %rd2010;
	xor.b64  	%rd2012, %rd2011, %rd1945;
	add.s64 	%rd2013, %rd1921, %rd1710;
	add.s64 	%rd2014, %rd2013, %rd2710;
	add.s64 	%rd2015, %rd2014, %rd2012;
	add.s64 	%rd2016, %rd2015, %rd2009;
	add.s64 	%rd2017, %rd2016, %rd1932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1397,%dummy}, %rd2004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1398}, %rd2004;
	}
	shf.r.wrap.b32 	%r1399, %r1398, %r1397, 28;
	shf.r.wrap.b32 	%r1400, %r1397, %r1398, 28;
	mov.b64 	%rd2018, {%r1400, %r1399};
	shf.l.wrap.b32 	%r1401, %r1397, %r1398, 30;
	shf.l.wrap.b32 	%r1402, %r1398, %r1397, 30;
	mov.b64 	%rd2019, {%r1402, %r1401};
	xor.b64  	%rd2020, %rd2019, %rd2018;
	shf.l.wrap.b32 	%r1403, %r1397, %r1398, 25;
	shf.l.wrap.b32 	%r1404, %r1398, %r1397, 25;
	mov.b64 	%rd2021, {%r1404, %r1403};
	xor.b64  	%rd2022, %rd2020, %rd2021;
	xor.b64  	%rd2023, %rd2004, %rd1956;
	xor.b64  	%rd2024, %rd2004, %rd1980;
	and.b64  	%rd2025, %rd2024, %rd2023;
	xor.b64  	%rd2026, %rd2025, %rd2004;
	add.s64 	%rd2027, %rd2016, %rd2026;
	add.s64 	%rd2028, %rd2027, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd2017;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 14;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 14;
	mov.b64 	%rd2029, {%r1408, %r1407};
	shf.r.wrap.b32 	%r1409, %r1406, %r1405, 18;
	shf.r.wrap.b32 	%r1410, %r1405, %r1406, 18;
	mov.b64 	%rd2030, {%r1410, %r1409};
	xor.b64  	%rd2031, %rd2030, %rd2029;
	shf.l.wrap.b32 	%r1411, %r1405, %r1406, 23;
	shf.l.wrap.b32 	%r1412, %r1406, %r1405, 23;
	mov.b64 	%rd2032, {%r1412, %r1411};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	xor.b64  	%rd2034, %rd1993, %rd1969;
	and.b64  	%rd2035, %rd2017, %rd2034;
	xor.b64  	%rd2036, %rd2035, %rd1969;
	add.s64 	%rd2037, %rd1945, %rd1723;
	add.s64 	%rd2038, %rd2037, %rd2711;
	add.s64 	%rd2039, %rd2038, %rd2036;
	add.s64 	%rd2040, %rd2039, %rd2033;
	add.s64 	%rd2041, %rd2040, %rd1956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1413,%dummy}, %rd2028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1414}, %rd2028;
	}
	shf.r.wrap.b32 	%r1415, %r1414, %r1413, 28;
	shf.r.wrap.b32 	%r1416, %r1413, %r1414, 28;
	mov.b64 	%rd2042, {%r1416, %r1415};
	shf.l.wrap.b32 	%r1417, %r1413, %r1414, 30;
	shf.l.wrap.b32 	%r1418, %r1414, %r1413, 30;
	mov.b64 	%rd2043, {%r1418, %r1417};
	xor.b64  	%rd2044, %rd2043, %rd2042;
	shf.l.wrap.b32 	%r1419, %r1413, %r1414, 25;
	shf.l.wrap.b32 	%r1420, %r1414, %r1413, 25;
	mov.b64 	%rd2045, {%r1420, %r1419};
	xor.b64  	%rd2046, %rd2044, %rd2045;
	xor.b64  	%rd2047, %rd2028, %rd1980;
	xor.b64  	%rd2048, %rd2028, %rd2004;
	and.b64  	%rd2049, %rd2048, %rd2047;
	xor.b64  	%rd2050, %rd2049, %rd2028;
	add.s64 	%rd2051, %rd2040, %rd2050;
	add.s64 	%rd2052, %rd2051, %rd2046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1421,%dummy}, %rd2041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1422}, %rd2041;
	}
	shf.r.wrap.b32 	%r1423, %r1422, %r1421, 14;
	shf.r.wrap.b32 	%r1424, %r1421, %r1422, 14;
	mov.b64 	%rd2053, {%r1424, %r1423};
	shf.r.wrap.b32 	%r1425, %r1422, %r1421, 18;
	shf.r.wrap.b32 	%r1426, %r1421, %r1422, 18;
	mov.b64 	%rd2054, {%r1426, %r1425};
	xor.b64  	%rd2055, %rd2054, %rd2053;
	shf.l.wrap.b32 	%r1427, %r1421, %r1422, 23;
	shf.l.wrap.b32 	%r1428, %r1422, %r1421, 23;
	mov.b64 	%rd2056, {%r1428, %r1427};
	xor.b64  	%rd2057, %rd2055, %rd2056;
	xor.b64  	%rd2058, %rd2017, %rd1993;
	and.b64  	%rd2059, %rd2041, %rd2058;
	xor.b64  	%rd2060, %rd2059, %rd1993;
	add.s64 	%rd2061, %rd1969, %rd1736;
	add.s64 	%rd2062, %rd2061, %rd2712;
	add.s64 	%rd2063, %rd2062, %rd2060;
	add.s64 	%rd2064, %rd2063, %rd2057;
	add.s64 	%rd2065, %rd2064, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1429,%dummy}, %rd2052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1430}, %rd2052;
	}
	shf.r.wrap.b32 	%r1431, %r1430, %r1429, 28;
	shf.r.wrap.b32 	%r1432, %r1429, %r1430, 28;
	mov.b64 	%rd2066, {%r1432, %r1431};
	shf.l.wrap.b32 	%r1433, %r1429, %r1430, 30;
	shf.l.wrap.b32 	%r1434, %r1430, %r1429, 30;
	mov.b64 	%rd2067, {%r1434, %r1433};
	xor.b64  	%rd2068, %rd2067, %rd2066;
	shf.l.wrap.b32 	%r1435, %r1429, %r1430, 25;
	shf.l.wrap.b32 	%r1436, %r1430, %r1429, 25;
	mov.b64 	%rd2069, {%r1436, %r1435};
	xor.b64  	%rd2070, %rd2068, %rd2069;
	xor.b64  	%rd2071, %rd2052, %rd2004;
	xor.b64  	%rd2072, %rd2052, %rd2028;
	and.b64  	%rd2073, %rd2072, %rd2071;
	xor.b64  	%rd2074, %rd2073, %rd2052;
	add.s64 	%rd2075, %rd2064, %rd2074;
	add.s64 	%rd2076, %rd2075, %rd2070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1437,%dummy}, %rd2065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1438}, %rd2065;
	}
	shf.r.wrap.b32 	%r1439, %r1438, %r1437, 14;
	shf.r.wrap.b32 	%r1440, %r1437, %r1438, 14;
	mov.b64 	%rd2077, {%r1440, %r1439};
	shf.r.wrap.b32 	%r1441, %r1438, %r1437, 18;
	shf.r.wrap.b32 	%r1442, %r1437, %r1438, 18;
	mov.b64 	%rd2078, {%r1442, %r1441};
	xor.b64  	%rd2079, %rd2078, %rd2077;
	shf.l.wrap.b32 	%r1443, %r1437, %r1438, 23;
	shf.l.wrap.b32 	%r1444, %r1438, %r1437, 23;
	mov.b64 	%rd2080, {%r1444, %r1443};
	xor.b64  	%rd2081, %rd2079, %rd2080;
	xor.b64  	%rd2082, %rd2041, %rd2017;
	and.b64  	%rd2083, %rd2065, %rd2082;
	xor.b64  	%rd2084, %rd2083, %rd2017;
	add.s64 	%rd2085, %rd1993, %rd1749;
	add.s64 	%rd2086, %rd2085, %rd2713;
	add.s64 	%rd2087, %rd2086, %rd2084;
	add.s64 	%rd2088, %rd2087, %rd2081;
	add.s64 	%rd2089, %rd2088, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1445,%dummy}, %rd2076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1446}, %rd2076;
	}
	shf.r.wrap.b32 	%r1447, %r1446, %r1445, 28;
	shf.r.wrap.b32 	%r1448, %r1445, %r1446, 28;
	mov.b64 	%rd2090, {%r1448, %r1447};
	shf.l.wrap.b32 	%r1449, %r1445, %r1446, 30;
	shf.l.wrap.b32 	%r1450, %r1446, %r1445, 30;
	mov.b64 	%rd2091, {%r1450, %r1449};
	xor.b64  	%rd2092, %rd2091, %rd2090;
	shf.l.wrap.b32 	%r1451, %r1445, %r1446, 25;
	shf.l.wrap.b32 	%r1452, %r1446, %r1445, 25;
	mov.b64 	%rd2093, {%r1452, %r1451};
	xor.b64  	%rd2094, %rd2092, %rd2093;
	xor.b64  	%rd2095, %rd2076, %rd2028;
	xor.b64  	%rd2096, %rd2076, %rd2052;
	and.b64  	%rd2097, %rd2096, %rd2095;
	xor.b64  	%rd2098, %rd2097, %rd2076;
	add.s64 	%rd2099, %rd2088, %rd2098;
	add.s64 	%rd2100, %rd2099, %rd2094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd2089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd2089;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 14;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 14;
	mov.b64 	%rd2101, {%r1456, %r1455};
	shf.r.wrap.b32 	%r1457, %r1454, %r1453, 18;
	shf.r.wrap.b32 	%r1458, %r1453, %r1454, 18;
	mov.b64 	%rd2102, {%r1458, %r1457};
	xor.b64  	%rd2103, %rd2102, %rd2101;
	shf.l.wrap.b32 	%r1459, %r1453, %r1454, 23;
	shf.l.wrap.b32 	%r1460, %r1454, %r1453, 23;
	mov.b64 	%rd2104, {%r1460, %r1459};
	xor.b64  	%rd2105, %rd2103, %rd2104;
	xor.b64  	%rd2106, %rd2065, %rd2041;
	and.b64  	%rd2107, %rd2089, %rd2106;
	xor.b64  	%rd2108, %rd2107, %rd2041;
	add.s64 	%rd2109, %rd2017, %rd1762;
	add.s64 	%rd2110, %rd2109, %rd2714;
	add.s64 	%rd2111, %rd2110, %rd2108;
	add.s64 	%rd2112, %rd2111, %rd2105;
	add.s64 	%rd2113, %rd2112, %rd2028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1461,%dummy}, %rd2100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1462}, %rd2100;
	}
	shf.r.wrap.b32 	%r1463, %r1462, %r1461, 28;
	shf.r.wrap.b32 	%r1464, %r1461, %r1462, 28;
	mov.b64 	%rd2114, {%r1464, %r1463};
	shf.l.wrap.b32 	%r1465, %r1461, %r1462, 30;
	shf.l.wrap.b32 	%r1466, %r1462, %r1461, 30;
	mov.b64 	%rd2115, {%r1466, %r1465};
	xor.b64  	%rd2116, %rd2115, %rd2114;
	shf.l.wrap.b32 	%r1467, %r1461, %r1462, 25;
	shf.l.wrap.b32 	%r1468, %r1462, %r1461, 25;
	mov.b64 	%rd2117, {%r1468, %r1467};
	xor.b64  	%rd2118, %rd2116, %rd2117;
	xor.b64  	%rd2119, %rd2100, %rd2052;
	xor.b64  	%rd2120, %rd2100, %rd2076;
	and.b64  	%rd2121, %rd2120, %rd2119;
	xor.b64  	%rd2122, %rd2121, %rd2100;
	add.s64 	%rd2123, %rd2112, %rd2122;
	add.s64 	%rd2124, %rd2123, %rd2118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1469,%dummy}, %rd2113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1470}, %rd2113;
	}
	shf.r.wrap.b32 	%r1471, %r1470, %r1469, 14;
	shf.r.wrap.b32 	%r1472, %r1469, %r1470, 14;
	mov.b64 	%rd2125, {%r1472, %r1471};
	shf.r.wrap.b32 	%r1473, %r1470, %r1469, 18;
	shf.r.wrap.b32 	%r1474, %r1469, %r1470, 18;
	mov.b64 	%rd2126, {%r1474, %r1473};
	xor.b64  	%rd2127, %rd2126, %rd2125;
	shf.l.wrap.b32 	%r1475, %r1469, %r1470, 23;
	shf.l.wrap.b32 	%r1476, %r1470, %r1469, 23;
	mov.b64 	%rd2128, {%r1476, %r1475};
	xor.b64  	%rd2129, %rd2127, %rd2128;
	xor.b64  	%rd2130, %rd2089, %rd2065;
	and.b64  	%rd2131, %rd2113, %rd2130;
	xor.b64  	%rd2132, %rd2131, %rd2065;
	add.s64 	%rd2133, %rd2041, %rd1775;
	add.s64 	%rd2134, %rd2133, %rd2715;
	add.s64 	%rd2135, %rd2134, %rd2132;
	add.s64 	%rd2136, %rd2135, %rd2129;
	add.s64 	%rd2137, %rd2136, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd2124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd2124;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 28;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 28;
	mov.b64 	%rd2138, {%r1480, %r1479};
	shf.l.wrap.b32 	%r1481, %r1477, %r1478, 30;
	shf.l.wrap.b32 	%r1482, %r1478, %r1477, 30;
	mov.b64 	%rd2139, {%r1482, %r1481};
	xor.b64  	%rd2140, %rd2139, %rd2138;
	shf.l.wrap.b32 	%r1483, %r1477, %r1478, 25;
	shf.l.wrap.b32 	%r1484, %r1478, %r1477, 25;
	mov.b64 	%rd2141, {%r1484, %r1483};
	xor.b64  	%rd2142, %rd2140, %rd2141;
	xor.b64  	%rd2143, %rd2124, %rd2076;
	xor.b64  	%rd2144, %rd2124, %rd2100;
	and.b64  	%rd2145, %rd2144, %rd2143;
	xor.b64  	%rd2146, %rd2145, %rd2124;
	add.s64 	%rd2147, %rd2136, %rd2146;
	add.s64 	%rd2148, %rd2147, %rd2142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1485,%dummy}, %rd2137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1486}, %rd2137;
	}
	shf.r.wrap.b32 	%r1487, %r1486, %r1485, 14;
	shf.r.wrap.b32 	%r1488, %r1485, %r1486, 14;
	mov.b64 	%rd2149, {%r1488, %r1487};
	shf.r.wrap.b32 	%r1489, %r1486, %r1485, 18;
	shf.r.wrap.b32 	%r1490, %r1485, %r1486, 18;
	mov.b64 	%rd2150, {%r1490, %r1489};
	xor.b64  	%rd2151, %rd2150, %rd2149;
	shf.l.wrap.b32 	%r1491, %r1485, %r1486, 23;
	shf.l.wrap.b32 	%r1492, %r1486, %r1485, 23;
	mov.b64 	%rd2152, {%r1492, %r1491};
	xor.b64  	%rd2153, %rd2151, %rd2152;
	xor.b64  	%rd2154, %rd2113, %rd2089;
	and.b64  	%rd2155, %rd2137, %rd2154;
	xor.b64  	%rd2156, %rd2155, %rd2089;
	add.s64 	%rd2157, %rd2065, %rd1788;
	add.s64 	%rd2158, %rd2157, %rd2716;
	add.s64 	%rd2159, %rd2158, %rd2156;
	add.s64 	%rd2160, %rd2159, %rd2153;
	add.s64 	%rd2161, %rd2160, %rd2076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd2148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd2148;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 28;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 28;
	mov.b64 	%rd2162, {%r1496, %r1495};
	shf.l.wrap.b32 	%r1497, %r1493, %r1494, 30;
	shf.l.wrap.b32 	%r1498, %r1494, %r1493, 30;
	mov.b64 	%rd2163, {%r1498, %r1497};
	xor.b64  	%rd2164, %rd2163, %rd2162;
	shf.l.wrap.b32 	%r1499, %r1493, %r1494, 25;
	shf.l.wrap.b32 	%r1500, %r1494, %r1493, 25;
	mov.b64 	%rd2165, {%r1500, %r1499};
	xor.b64  	%rd2166, %rd2164, %rd2165;
	xor.b64  	%rd2167, %rd2148, %rd2100;
	xor.b64  	%rd2168, %rd2148, %rd2124;
	and.b64  	%rd2169, %rd2168, %rd2167;
	xor.b64  	%rd2170, %rd2169, %rd2148;
	add.s64 	%rd2171, %rd2160, %rd2170;
	add.s64 	%rd2172, %rd2171, %rd2166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1501,%dummy}, %rd1775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1502}, %rd1775;
	}
	shf.r.wrap.b32 	%r1503, %r1502, %r1501, 19;
	shf.r.wrap.b32 	%r1504, %r1501, %r1502, 19;
	mov.b64 	%rd2173, {%r1504, %r1503};
	shf.l.wrap.b32 	%r1505, %r1501, %r1502, 3;
	shf.l.wrap.b32 	%r1506, %r1502, %r1501, 3;
	mov.b64 	%rd2174, {%r1506, %r1505};
	shr.u64 	%rd2175, %rd1775, 6;
	xor.b64  	%rd2176, %rd2173, %rd2175;
	xor.b64  	%rd2177, %rd2176, %rd2174;
	shf.r.wrap.b32 	%r1507, %r1116, %r1115, 1;
	shf.r.wrap.b32 	%r1508, %r1115, %r1116, 1;
	mov.b64 	%rd2178, {%r1508, %r1507};
	shf.r.wrap.b32 	%r1509, %r1116, %r1115, 8;
	shf.r.wrap.b32 	%r1510, %r1115, %r1116, 8;
	mov.b64 	%rd2179, {%r1510, %r1509};
	shr.u64 	%rd2180, %rd1606, 7;
	xor.b64  	%rd2181, %rd2178, %rd2180;
	xor.b64  	%rd2182, %rd2181, %rd2179;
	add.s64 	%rd2183, %rd1593, %rd1710;
	add.s64 	%rd2184, %rd2183, %rd2177;
	add.s64 	%rd2185, %rd2184, %rd2182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd1788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd1788;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 19;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 19;
	mov.b64 	%rd2186, {%r1514, %r1513};
	shf.l.wrap.b32 	%r1515, %r1511, %r1512, 3;
	shf.l.wrap.b32 	%r1516, %r1512, %r1511, 3;
	mov.b64 	%rd2187, {%r1516, %r1515};
	shr.u64 	%rd2188, %rd1788, 6;
	xor.b64  	%rd2189, %rd2186, %rd2188;
	xor.b64  	%rd2190, %rd2189, %rd2187;
	shf.r.wrap.b32 	%r1517, %r1126, %r1125, 1;
	shf.r.wrap.b32 	%r1518, %r1125, %r1126, 1;
	mov.b64 	%rd2191, {%r1518, %r1517};
	shf.r.wrap.b32 	%r1519, %r1126, %r1125, 8;
	shf.r.wrap.b32 	%r1520, %r1125, %r1126, 8;
	mov.b64 	%rd2192, {%r1520, %r1519};
	shr.u64 	%rd2193, %rd1619, 7;
	xor.b64  	%rd2194, %rd2191, %rd2193;
	xor.b64  	%rd2195, %rd2194, %rd2192;
	add.s64 	%rd2196, %rd1606, %rd1723;
	add.s64 	%rd2197, %rd2196, %rd2190;
	add.s64 	%rd2198, %rd2197, %rd2195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd2185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1522}, %rd2185;
	}
	shf.r.wrap.b32 	%r1523, %r1522, %r1521, 19;
	shf.r.wrap.b32 	%r1524, %r1521, %r1522, 19;
	mov.b64 	%rd2199, {%r1524, %r1523};
	shf.l.wrap.b32 	%r1525, %r1521, %r1522, 3;
	shf.l.wrap.b32 	%r1526, %r1522, %r1521, 3;
	mov.b64 	%rd2200, {%r1526, %r1525};
	shr.u64 	%rd2201, %rd2185, 6;
	xor.b64  	%rd2202, %rd2199, %rd2201;
	xor.b64  	%rd2203, %rd2202, %rd2200;
	shf.r.wrap.b32 	%r1527, %r1136, %r1135, 1;
	shf.r.wrap.b32 	%r1528, %r1135, %r1136, 1;
	mov.b64 	%rd2204, {%r1528, %r1527};
	shf.r.wrap.b32 	%r1529, %r1136, %r1135, 8;
	shf.r.wrap.b32 	%r1530, %r1135, %r1136, 8;
	mov.b64 	%rd2205, {%r1530, %r1529};
	shr.u64 	%rd2206, %rd1632, 7;
	xor.b64  	%rd2207, %rd2204, %rd2206;
	xor.b64  	%rd2208, %rd2207, %rd2205;
	add.s64 	%rd2209, %rd1619, %rd1736;
	add.s64 	%rd2210, %rd2209, %rd2203;
	add.s64 	%rd2211, %rd2210, %rd2208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1531,%dummy}, %rd2198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1532}, %rd2198;
	}
	shf.r.wrap.b32 	%r1533, %r1532, %r1531, 19;
	shf.r.wrap.b32 	%r1534, %r1531, %r1532, 19;
	mov.b64 	%rd2212, {%r1534, %r1533};
	shf.l.wrap.b32 	%r1535, %r1531, %r1532, 3;
	shf.l.wrap.b32 	%r1536, %r1532, %r1531, 3;
	mov.b64 	%rd2213, {%r1536, %r1535};
	shr.u64 	%rd2214, %rd2198, 6;
	xor.b64  	%rd2215, %rd2212, %rd2214;
	xor.b64  	%rd2216, %rd2215, %rd2213;
	shf.r.wrap.b32 	%r1537, %r1146, %r1145, 1;
	shf.r.wrap.b32 	%r1538, %r1145, %r1146, 1;
	mov.b64 	%rd2217, {%r1538, %r1537};
	shf.r.wrap.b32 	%r1539, %r1146, %r1145, 8;
	shf.r.wrap.b32 	%r1540, %r1145, %r1146, 8;
	mov.b64 	%rd2218, {%r1540, %r1539};
	shr.u64 	%rd2219, %rd1645, 7;
	xor.b64  	%rd2220, %rd2217, %rd2219;
	xor.b64  	%rd2221, %rd2220, %rd2218;
	add.s64 	%rd2222, %rd1632, %rd1749;
	add.s64 	%rd2223, %rd2222, %rd2216;
	add.s64 	%rd2224, %rd2223, %rd2221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1541,%dummy}, %rd2211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1542}, %rd2211;
	}
	shf.r.wrap.b32 	%r1543, %r1542, %r1541, 19;
	shf.r.wrap.b32 	%r1544, %r1541, %r1542, 19;
	mov.b64 	%rd2225, {%r1544, %r1543};
	shf.l.wrap.b32 	%r1545, %r1541, %r1542, 3;
	shf.l.wrap.b32 	%r1546, %r1542, %r1541, 3;
	mov.b64 	%rd2226, {%r1546, %r1545};
	shr.u64 	%rd2227, %rd2211, 6;
	xor.b64  	%rd2228, %rd2225, %rd2227;
	xor.b64  	%rd2229, %rd2228, %rd2226;
	shf.r.wrap.b32 	%r1547, %r1156, %r1155, 1;
	shf.r.wrap.b32 	%r1548, %r1155, %r1156, 1;
	mov.b64 	%rd2230, {%r1548, %r1547};
	shf.r.wrap.b32 	%r1549, %r1156, %r1155, 8;
	shf.r.wrap.b32 	%r1550, %r1155, %r1156, 8;
	mov.b64 	%rd2231, {%r1550, %r1549};
	shr.u64 	%rd2232, %rd1658, 7;
	xor.b64  	%rd2233, %rd2230, %rd2232;
	xor.b64  	%rd2234, %rd2233, %rd2231;
	add.s64 	%rd2235, %rd1645, %rd1762;
	add.s64 	%rd2236, %rd2235, %rd2229;
	add.s64 	%rd2237, %rd2236, %rd2234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1551,%dummy}, %rd2224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1552}, %rd2224;
	}
	shf.r.wrap.b32 	%r1553, %r1552, %r1551, 19;
	shf.r.wrap.b32 	%r1554, %r1551, %r1552, 19;
	mov.b64 	%rd2238, {%r1554, %r1553};
	shf.l.wrap.b32 	%r1555, %r1551, %r1552, 3;
	shf.l.wrap.b32 	%r1556, %r1552, %r1551, 3;
	mov.b64 	%rd2239, {%r1556, %r1555};
	shr.u64 	%rd2240, %rd2224, 6;
	xor.b64  	%rd2241, %rd2238, %rd2240;
	xor.b64  	%rd2242, %rd2241, %rd2239;
	shf.r.wrap.b32 	%r1557, %r1166, %r1165, 1;
	shf.r.wrap.b32 	%r1558, %r1165, %r1166, 1;
	mov.b64 	%rd2243, {%r1558, %r1557};
	shf.r.wrap.b32 	%r1559, %r1166, %r1165, 8;
	shf.r.wrap.b32 	%r1560, %r1165, %r1166, 8;
	mov.b64 	%rd2244, {%r1560, %r1559};
	shr.u64 	%rd2245, %rd1671, 7;
	xor.b64  	%rd2246, %rd2243, %rd2245;
	xor.b64  	%rd2247, %rd2246, %rd2244;
	add.s64 	%rd2248, %rd1658, %rd1775;
	add.s64 	%rd2249, %rd2248, %rd2242;
	add.s64 	%rd2250, %rd2249, %rd2247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1561,%dummy}, %rd2237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1562}, %rd2237;
	}
	shf.r.wrap.b32 	%r1563, %r1562, %r1561, 19;
	shf.r.wrap.b32 	%r1564, %r1561, %r1562, 19;
	mov.b64 	%rd2251, {%r1564, %r1563};
	shf.l.wrap.b32 	%r1565, %r1561, %r1562, 3;
	shf.l.wrap.b32 	%r1566, %r1562, %r1561, 3;
	mov.b64 	%rd2252, {%r1566, %r1565};
	shr.u64 	%rd2253, %rd2237, 6;
	xor.b64  	%rd2254, %rd2251, %rd2253;
	xor.b64  	%rd2255, %rd2254, %rd2252;
	shf.r.wrap.b32 	%r1567, %r1176, %r1175, 1;
	shf.r.wrap.b32 	%r1568, %r1175, %r1176, 1;
	mov.b64 	%rd2256, {%r1568, %r1567};
	shf.r.wrap.b32 	%r1569, %r1176, %r1175, 8;
	shf.r.wrap.b32 	%r1570, %r1175, %r1176, 8;
	mov.b64 	%rd2257, {%r1570, %r1569};
	shr.u64 	%rd2258, %rd1684, 7;
	xor.b64  	%rd2259, %rd2256, %rd2258;
	xor.b64  	%rd2260, %rd2259, %rd2257;
	add.s64 	%rd2261, %rd1671, %rd1788;
	add.s64 	%rd2262, %rd2261, %rd2255;
	add.s64 	%rd2263, %rd2262, %rd2260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1571,%dummy}, %rd2250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1572}, %rd2250;
	}
	shf.r.wrap.b32 	%r1573, %r1572, %r1571, 19;
	shf.r.wrap.b32 	%r1574, %r1571, %r1572, 19;
	mov.b64 	%rd2264, {%r1574, %r1573};
	shf.l.wrap.b32 	%r1575, %r1571, %r1572, 3;
	shf.l.wrap.b32 	%r1576, %r1572, %r1571, 3;
	mov.b64 	%rd2265, {%r1576, %r1575};
	shr.u64 	%rd2266, %rd2250, 6;
	xor.b64  	%rd2267, %rd2264, %rd2266;
	xor.b64  	%rd2268, %rd2267, %rd2265;
	shf.r.wrap.b32 	%r1577, %r1186, %r1185, 1;
	shf.r.wrap.b32 	%r1578, %r1185, %r1186, 1;
	mov.b64 	%rd2269, {%r1578, %r1577};
	shf.r.wrap.b32 	%r1579, %r1186, %r1185, 8;
	shf.r.wrap.b32 	%r1580, %r1185, %r1186, 8;
	mov.b64 	%rd2270, {%r1580, %r1579};
	shr.u64 	%rd2271, %rd1697, 7;
	xor.b64  	%rd2272, %rd2269, %rd2271;
	xor.b64  	%rd2273, %rd2272, %rd2270;
	add.s64 	%rd2274, %rd2185, %rd1684;
	add.s64 	%rd2275, %rd2274, %rd2268;
	add.s64 	%rd2276, %rd2275, %rd2273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd2263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1582}, %rd2263;
	}
	shf.r.wrap.b32 	%r1583, %r1582, %r1581, 19;
	shf.r.wrap.b32 	%r1584, %r1581, %r1582, 19;
	mov.b64 	%rd2277, {%r1584, %r1583};
	shf.l.wrap.b32 	%r1585, %r1581, %r1582, 3;
	shf.l.wrap.b32 	%r1586, %r1582, %r1581, 3;
	mov.b64 	%rd2278, {%r1586, %r1585};
	shr.u64 	%rd2279, %rd2263, 6;
	xor.b64  	%rd2280, %rd2277, %rd2279;
	xor.b64  	%rd2281, %rd2280, %rd2278;
	shf.r.wrap.b32 	%r1587, %r1196, %r1195, 1;
	shf.r.wrap.b32 	%r1588, %r1195, %r1196, 1;
	mov.b64 	%rd2282, {%r1588, %r1587};
	shf.r.wrap.b32 	%r1589, %r1196, %r1195, 8;
	shf.r.wrap.b32 	%r1590, %r1195, %r1196, 8;
	mov.b64 	%rd2283, {%r1590, %r1589};
	shr.u64 	%rd2284, %rd1710, 7;
	xor.b64  	%rd2285, %rd2282, %rd2284;
	xor.b64  	%rd2286, %rd2285, %rd2283;
	add.s64 	%rd2287, %rd2198, %rd1697;
	add.s64 	%rd2288, %rd2287, %rd2281;
	add.s64 	%rd2289, %rd2288, %rd2286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1591,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1592}, %rd2276;
	}
	shf.r.wrap.b32 	%r1593, %r1592, %r1591, 19;
	shf.r.wrap.b32 	%r1594, %r1591, %r1592, 19;
	mov.b64 	%rd2290, {%r1594, %r1593};
	shf.l.wrap.b32 	%r1595, %r1591, %r1592, 3;
	shf.l.wrap.b32 	%r1596, %r1592, %r1591, 3;
	mov.b64 	%rd2291, {%r1596, %r1595};
	shr.u64 	%rd2292, %rd2276, 6;
	xor.b64  	%rd2293, %rd2290, %rd2292;
	xor.b64  	%rd2294, %rd2293, %rd2291;
	shf.r.wrap.b32 	%r1597, %r1206, %r1205, 1;
	shf.r.wrap.b32 	%r1598, %r1205, %r1206, 1;
	mov.b64 	%rd2295, {%r1598, %r1597};
	shf.r.wrap.b32 	%r1599, %r1206, %r1205, 8;
	shf.r.wrap.b32 	%r1600, %r1205, %r1206, 8;
	mov.b64 	%rd2296, {%r1600, %r1599};
	shr.u64 	%rd2297, %rd1723, 7;
	xor.b64  	%rd2298, %rd2295, %rd2297;
	xor.b64  	%rd2299, %rd2298, %rd2296;
	add.s64 	%rd2300, %rd2211, %rd1710;
	add.s64 	%rd2301, %rd2300, %rd2294;
	add.s64 	%rd2302, %rd2301, %rd2299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1601,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1602}, %rd2289;
	}
	shf.r.wrap.b32 	%r1603, %r1602, %r1601, 19;
	shf.r.wrap.b32 	%r1604, %r1601, %r1602, 19;
	mov.b64 	%rd2303, {%r1604, %r1603};
	shf.l.wrap.b32 	%r1605, %r1601, %r1602, 3;
	shf.l.wrap.b32 	%r1606, %r1602, %r1601, 3;
	mov.b64 	%rd2304, {%r1606, %r1605};
	shr.u64 	%rd2305, %rd2289, 6;
	xor.b64  	%rd2306, %rd2303, %rd2305;
	xor.b64  	%rd2307, %rd2306, %rd2304;
	shf.r.wrap.b32 	%r1607, %r1216, %r1215, 1;
	shf.r.wrap.b32 	%r1608, %r1215, %r1216, 1;
	mov.b64 	%rd2308, {%r1608, %r1607};
	shf.r.wrap.b32 	%r1609, %r1216, %r1215, 8;
	shf.r.wrap.b32 	%r1610, %r1215, %r1216, 8;
	mov.b64 	%rd2309, {%r1610, %r1609};
	shr.u64 	%rd2310, %rd1736, 7;
	xor.b64  	%rd2311, %rd2308, %rd2310;
	xor.b64  	%rd2312, %rd2311, %rd2309;
	add.s64 	%rd2313, %rd2224, %rd1723;
	add.s64 	%rd2314, %rd2313, %rd2307;
	add.s64 	%rd2315, %rd2314, %rd2312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1611,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1612}, %rd2302;
	}
	shf.r.wrap.b32 	%r1613, %r1612, %r1611, 19;
	shf.r.wrap.b32 	%r1614, %r1611, %r1612, 19;
	mov.b64 	%rd2316, {%r1614, %r1613};
	shf.l.wrap.b32 	%r1615, %r1611, %r1612, 3;
	shf.l.wrap.b32 	%r1616, %r1612, %r1611, 3;
	mov.b64 	%rd2317, {%r1616, %r1615};
	shr.u64 	%rd2318, %rd2302, 6;
	xor.b64  	%rd2319, %rd2316, %rd2318;
	xor.b64  	%rd2320, %rd2319, %rd2317;
	shf.r.wrap.b32 	%r1617, %r1226, %r1225, 1;
	shf.r.wrap.b32 	%r1618, %r1225, %r1226, 1;
	mov.b64 	%rd2321, {%r1618, %r1617};
	shf.r.wrap.b32 	%r1619, %r1226, %r1225, 8;
	shf.r.wrap.b32 	%r1620, %r1225, %r1226, 8;
	mov.b64 	%rd2322, {%r1620, %r1619};
	shr.u64 	%rd2323, %rd1749, 7;
	xor.b64  	%rd2324, %rd2321, %rd2323;
	xor.b64  	%rd2325, %rd2324, %rd2322;
	add.s64 	%rd2326, %rd2237, %rd1736;
	add.s64 	%rd2327, %rd2326, %rd2320;
	add.s64 	%rd2328, %rd2327, %rd2325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1621,%dummy}, %rd2315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1622}, %rd2315;
	}
	shf.r.wrap.b32 	%r1623, %r1622, %r1621, 19;
	shf.r.wrap.b32 	%r1624, %r1621, %r1622, 19;
	mov.b64 	%rd2329, {%r1624, %r1623};
	shf.l.wrap.b32 	%r1625, %r1621, %r1622, 3;
	shf.l.wrap.b32 	%r1626, %r1622, %r1621, 3;
	mov.b64 	%rd2330, {%r1626, %r1625};
	shr.u64 	%rd2331, %rd2315, 6;
	xor.b64  	%rd2332, %rd2329, %rd2331;
	xor.b64  	%rd2333, %rd2332, %rd2330;
	shf.r.wrap.b32 	%r1627, %r1236, %r1235, 1;
	shf.r.wrap.b32 	%r1628, %r1235, %r1236, 1;
	mov.b64 	%rd2334, {%r1628, %r1627};
	shf.r.wrap.b32 	%r1629, %r1236, %r1235, 8;
	shf.r.wrap.b32 	%r1630, %r1235, %r1236, 8;
	mov.b64 	%rd2335, {%r1630, %r1629};
	shr.u64 	%rd2336, %rd1762, 7;
	xor.b64  	%rd2337, %rd2334, %rd2336;
	xor.b64  	%rd2338, %rd2337, %rd2335;
	add.s64 	%rd2339, %rd2250, %rd1749;
	add.s64 	%rd2340, %rd2339, %rd2333;
	add.s64 	%rd2341, %rd2340, %rd2338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1631,%dummy}, %rd2161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1632}, %rd2161;
	}
	shf.r.wrap.b32 	%r1633, %r1632, %r1631, 14;
	shf.r.wrap.b32 	%r1634, %r1631, %r1632, 14;
	mov.b64 	%rd2342, {%r1634, %r1633};
	shf.r.wrap.b32 	%r1635, %r1632, %r1631, 18;
	shf.r.wrap.b32 	%r1636, %r1631, %r1632, 18;
	mov.b64 	%rd2343, {%r1636, %r1635};
	xor.b64  	%rd2344, %rd2343, %rd2342;
	shf.l.wrap.b32 	%r1637, %r1631, %r1632, 23;
	shf.l.wrap.b32 	%r1638, %r1632, %r1631, 23;
	mov.b64 	%rd2345, {%r1638, %r1637};
	xor.b64  	%rd2346, %rd2344, %rd2345;
	xor.b64  	%rd2347, %rd2113, %rd2137;
	and.b64  	%rd2348, %rd2347, %rd2161;
	xor.b64  	%rd2349, %rd2348, %rd2113;
	add.s64 	%rd2350, %rd2349, %rd2089;
	add.s64 	%rd2351, %rd2350, %rd2185;
	add.s64 	%rd2352, %rd2351, %rd2717;
	add.s64 	%rd2353, %rd2352, %rd2346;
	add.s64 	%rd2354, %rd2353, %rd2100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1639,%dummy}, %rd2172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1640}, %rd2172;
	}
	shf.r.wrap.b32 	%r1641, %r1640, %r1639, 28;
	shf.r.wrap.b32 	%r1642, %r1639, %r1640, 28;
	mov.b64 	%rd2355, {%r1642, %r1641};
	shf.l.wrap.b32 	%r1643, %r1639, %r1640, 30;
	shf.l.wrap.b32 	%r1644, %r1640, %r1639, 30;
	mov.b64 	%rd2356, {%r1644, %r1643};
	xor.b64  	%rd2357, %rd2356, %rd2355;
	shf.l.wrap.b32 	%r1645, %r1639, %r1640, 25;
	shf.l.wrap.b32 	%r1646, %r1640, %r1639, 25;
	mov.b64 	%rd2358, {%r1646, %r1645};
	xor.b64  	%rd2359, %rd2357, %rd2358;
	xor.b64  	%rd2360, %rd2172, %rd2124;
	xor.b64  	%rd2361, %rd2172, %rd2148;
	and.b64  	%rd2362, %rd2361, %rd2360;
	xor.b64  	%rd2363, %rd2362, %rd2172;
	add.s64 	%rd2364, %rd2353, %rd2363;
	add.s64 	%rd2365, %rd2364, %rd2359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1647,%dummy}, %rd2354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1648}, %rd2354;
	}
	shf.r.wrap.b32 	%r1649, %r1648, %r1647, 14;
	shf.r.wrap.b32 	%r1650, %r1647, %r1648, 14;
	mov.b64 	%rd2366, {%r1650, %r1649};
	shf.r.wrap.b32 	%r1651, %r1648, %r1647, 18;
	shf.r.wrap.b32 	%r1652, %r1647, %r1648, 18;
	mov.b64 	%rd2367, {%r1652, %r1651};
	xor.b64  	%rd2368, %rd2367, %rd2366;
	shf.l.wrap.b32 	%r1653, %r1647, %r1648, 23;
	shf.l.wrap.b32 	%r1654, %r1648, %r1647, 23;
	mov.b64 	%rd2369, {%r1654, %r1653};
	xor.b64  	%rd2370, %rd2368, %rd2369;
	xor.b64  	%rd2371, %rd2137, %rd2161;
	and.b64  	%rd2372, %rd2354, %rd2371;
	xor.b64  	%rd2373, %rd2372, %rd2137;
	add.s64 	%rd2374, %rd2198, %rd2113;
	add.s64 	%rd2375, %rd2374, %rd2718;
	add.s64 	%rd2376, %rd2375, %rd2373;
	add.s64 	%rd2377, %rd2376, %rd2370;
	add.s64 	%rd2378, %rd2377, %rd2124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1655,%dummy}, %rd2365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1656}, %rd2365;
	}
	shf.r.wrap.b32 	%r1657, %r1656, %r1655, 28;
	shf.r.wrap.b32 	%r1658, %r1655, %r1656, 28;
	mov.b64 	%rd2379, {%r1658, %r1657};
	shf.l.wrap.b32 	%r1659, %r1655, %r1656, 30;
	shf.l.wrap.b32 	%r1660, %r1656, %r1655, 30;
	mov.b64 	%rd2380, {%r1660, %r1659};
	xor.b64  	%rd2381, %rd2380, %rd2379;
	shf.l.wrap.b32 	%r1661, %r1655, %r1656, 25;
	shf.l.wrap.b32 	%r1662, %r1656, %r1655, 25;
	mov.b64 	%rd2382, {%r1662, %r1661};
	xor.b64  	%rd2383, %rd2381, %rd2382;
	xor.b64  	%rd2384, %rd2365, %rd2148;
	xor.b64  	%rd2385, %rd2365, %rd2172;
	and.b64  	%rd2386, %rd2385, %rd2384;
	xor.b64  	%rd2387, %rd2386, %rd2365;
	add.s64 	%rd2388, %rd2377, %rd2387;
	add.s64 	%rd2389, %rd2388, %rd2383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1663,%dummy}, %rd2378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1664}, %rd2378;
	}
	shf.r.wrap.b32 	%r1665, %r1664, %r1663, 14;
	shf.r.wrap.b32 	%r1666, %r1663, %r1664, 14;
	mov.b64 	%rd2390, {%r1666, %r1665};
	shf.r.wrap.b32 	%r1667, %r1664, %r1663, 18;
	shf.r.wrap.b32 	%r1668, %r1663, %r1664, 18;
	mov.b64 	%rd2391, {%r1668, %r1667};
	xor.b64  	%rd2392, %rd2391, %rd2390;
	shf.l.wrap.b32 	%r1669, %r1663, %r1664, 23;
	shf.l.wrap.b32 	%r1670, %r1664, %r1663, 23;
	mov.b64 	%rd2393, {%r1670, %r1669};
	xor.b64  	%rd2394, %rd2392, %rd2393;
	xor.b64  	%rd2395, %rd2354, %rd2161;
	and.b64  	%rd2396, %rd2378, %rd2395;
	xor.b64  	%rd2397, %rd2396, %rd2161;
	add.s64 	%rd2398, %rd2211, %rd2137;
	add.s64 	%rd2399, %rd2398, %rd2719;
	add.s64 	%rd2400, %rd2399, %rd2397;
	add.s64 	%rd2401, %rd2400, %rd2394;
	add.s64 	%rd2402, %rd2401, %rd2148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1671,%dummy}, %rd2389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1672}, %rd2389;
	}
	shf.r.wrap.b32 	%r1673, %r1672, %r1671, 28;
	shf.r.wrap.b32 	%r1674, %r1671, %r1672, 28;
	mov.b64 	%rd2403, {%r1674, %r1673};
	shf.l.wrap.b32 	%r1675, %r1671, %r1672, 30;
	shf.l.wrap.b32 	%r1676, %r1672, %r1671, 30;
	mov.b64 	%rd2404, {%r1676, %r1675};
	xor.b64  	%rd2405, %rd2404, %rd2403;
	shf.l.wrap.b32 	%r1677, %r1671, %r1672, 25;
	shf.l.wrap.b32 	%r1678, %r1672, %r1671, 25;
	mov.b64 	%rd2406, {%r1678, %r1677};
	xor.b64  	%rd2407, %rd2405, %rd2406;
	xor.b64  	%rd2408, %rd2389, %rd2172;
	xor.b64  	%rd2409, %rd2389, %rd2365;
	and.b64  	%rd2410, %rd2409, %rd2408;
	xor.b64  	%rd2411, %rd2410, %rd2389;
	add.s64 	%rd2412, %rd2401, %rd2411;
	add.s64 	%rd2413, %rd2412, %rd2407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd2402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd2402;
	}
	shf.r.wrap.b32 	%r1681, %r1680, %r1679, 14;
	shf.r.wrap.b32 	%r1682, %r1679, %r1680, 14;
	mov.b64 	%rd2414, {%r1682, %r1681};
	shf.r.wrap.b32 	%r1683, %r1680, %r1679, 18;
	shf.r.wrap.b32 	%r1684, %r1679, %r1680, 18;
	mov.b64 	%rd2415, {%r1684, %r1683};
	xor.b64  	%rd2416, %rd2415, %rd2414;
	shf.l.wrap.b32 	%r1685, %r1679, %r1680, 23;
	shf.l.wrap.b32 	%r1686, %r1680, %r1679, 23;
	mov.b64 	%rd2417, {%r1686, %r1685};
	xor.b64  	%rd2418, %rd2416, %rd2417;
	xor.b64  	%rd2419, %rd2378, %rd2354;
	and.b64  	%rd2420, %rd2402, %rd2419;
	xor.b64  	%rd2421, %rd2420, %rd2354;
	add.s64 	%rd2422, %rd2224, %rd2161;
	add.s64 	%rd2423, %rd2422, %rd2720;
	add.s64 	%rd2424, %rd2423, %rd2421;
	add.s64 	%rd2425, %rd2424, %rd2418;
	add.s64 	%rd2426, %rd2425, %rd2172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1687,%dummy}, %rd2413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1688}, %rd2413;
	}
	shf.r.wrap.b32 	%r1689, %r1688, %r1687, 28;
	shf.r.wrap.b32 	%r1690, %r1687, %r1688, 28;
	mov.b64 	%rd2427, {%r1690, %r1689};
	shf.l.wrap.b32 	%r1691, %r1687, %r1688, 30;
	shf.l.wrap.b32 	%r1692, %r1688, %r1687, 30;
	mov.b64 	%rd2428, {%r1692, %r1691};
	xor.b64  	%rd2429, %rd2428, %rd2427;
	shf.l.wrap.b32 	%r1693, %r1687, %r1688, 25;
	shf.l.wrap.b32 	%r1694, %r1688, %r1687, 25;
	mov.b64 	%rd2430, {%r1694, %r1693};
	xor.b64  	%rd2431, %rd2429, %rd2430;
	xor.b64  	%rd2432, %rd2413, %rd2365;
	xor.b64  	%rd2433, %rd2413, %rd2389;
	and.b64  	%rd2434, %rd2433, %rd2432;
	xor.b64  	%rd2435, %rd2434, %rd2413;
	add.s64 	%rd2436, %rd2425, %rd2435;
	add.s64 	%rd2437, %rd2436, %rd2431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd2426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd2426;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 14;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 14;
	mov.b64 	%rd2438, {%r1698, %r1697};
	shf.r.wrap.b32 	%r1699, %r1696, %r1695, 18;
	shf.r.wrap.b32 	%r1700, %r1695, %r1696, 18;
	mov.b64 	%rd2439, {%r1700, %r1699};
	xor.b64  	%rd2440, %rd2439, %rd2438;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 23;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 23;
	mov.b64 	%rd2441, {%r1702, %r1701};
	xor.b64  	%rd2442, %rd2440, %rd2441;
	xor.b64  	%rd2443, %rd2402, %rd2378;
	and.b64  	%rd2444, %rd2426, %rd2443;
	xor.b64  	%rd2445, %rd2444, %rd2378;
	add.s64 	%rd2446, %rd2354, %rd2237;
	add.s64 	%rd2447, %rd2446, %rd2721;
	add.s64 	%rd2448, %rd2447, %rd2445;
	add.s64 	%rd2449, %rd2448, %rd2442;
	add.s64 	%rd2450, %rd2449, %rd2365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd2437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd2437;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 28;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 28;
	mov.b64 	%rd2451, {%r1706, %r1705};
	shf.l.wrap.b32 	%r1707, %r1703, %r1704, 30;
	shf.l.wrap.b32 	%r1708, %r1704, %r1703, 30;
	mov.b64 	%rd2452, {%r1708, %r1707};
	xor.b64  	%rd2453, %rd2452, %rd2451;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 25;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 25;
	mov.b64 	%rd2454, {%r1710, %r1709};
	xor.b64  	%rd2455, %rd2453, %rd2454;
	xor.b64  	%rd2456, %rd2437, %rd2389;
	xor.b64  	%rd2457, %rd2437, %rd2413;
	and.b64  	%rd2458, %rd2457, %rd2456;
	xor.b64  	%rd2459, %rd2458, %rd2437;
	add.s64 	%rd2460, %rd2449, %rd2459;
	add.s64 	%rd2461, %rd2460, %rd2455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2450;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 14;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 14;
	mov.b64 	%rd2462, {%r1714, %r1713};
	shf.r.wrap.b32 	%r1715, %r1712, %r1711, 18;
	shf.r.wrap.b32 	%r1716, %r1711, %r1712, 18;
	mov.b64 	%rd2463, {%r1716, %r1715};
	xor.b64  	%rd2464, %rd2463, %rd2462;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 23;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 23;
	mov.b64 	%rd2465, {%r1718, %r1717};
	xor.b64  	%rd2466, %rd2464, %rd2465;
	xor.b64  	%rd2467, %rd2426, %rd2402;
	and.b64  	%rd2468, %rd2450, %rd2467;
	xor.b64  	%rd2469, %rd2468, %rd2402;
	add.s64 	%rd2470, %rd2378, %rd2250;
	add.s64 	%rd2471, %rd2470, %rd2722;
	add.s64 	%rd2472, %rd2471, %rd2469;
	add.s64 	%rd2473, %rd2472, %rd2466;
	add.s64 	%rd2474, %rd2473, %rd2389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2461;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 28;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 28;
	mov.b64 	%rd2475, {%r1722, %r1721};
	shf.l.wrap.b32 	%r1723, %r1719, %r1720, 30;
	shf.l.wrap.b32 	%r1724, %r1720, %r1719, 30;
	mov.b64 	%rd2476, {%r1724, %r1723};
	xor.b64  	%rd2477, %rd2476, %rd2475;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 25;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 25;
	mov.b64 	%rd2478, {%r1726, %r1725};
	xor.b64  	%rd2479, %rd2477, %rd2478;
	xor.b64  	%rd2480, %rd2461, %rd2413;
	xor.b64  	%rd2481, %rd2461, %rd2437;
	and.b64  	%rd2482, %rd2481, %rd2480;
	xor.b64  	%rd2483, %rd2482, %rd2461;
	add.s64 	%rd2484, %rd2473, %rd2483;
	add.s64 	%rd2485, %rd2484, %rd2479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2474;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 14;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 14;
	mov.b64 	%rd2486, {%r1730, %r1729};
	shf.r.wrap.b32 	%r1731, %r1728, %r1727, 18;
	shf.r.wrap.b32 	%r1732, %r1727, %r1728, 18;
	mov.b64 	%rd2487, {%r1732, %r1731};
	xor.b64  	%rd2488, %rd2487, %rd2486;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 23;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 23;
	mov.b64 	%rd2489, {%r1734, %r1733};
	xor.b64  	%rd2490, %rd2488, %rd2489;
	xor.b64  	%rd2491, %rd2450, %rd2426;
	and.b64  	%rd2492, %rd2474, %rd2491;
	xor.b64  	%rd2493, %rd2492, %rd2426;
	add.s64 	%rd2494, %rd2402, %rd2263;
	add.s64 	%rd2495, %rd2494, %rd2723;
	add.s64 	%rd2496, %rd2495, %rd2493;
	add.s64 	%rd2497, %rd2496, %rd2490;
	add.s64 	%rd2498, %rd2497, %rd2413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd2485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd2485;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 28;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 28;
	mov.b64 	%rd2499, {%r1738, %r1737};
	shf.l.wrap.b32 	%r1739, %r1735, %r1736, 30;
	shf.l.wrap.b32 	%r1740, %r1736, %r1735, 30;
	mov.b64 	%rd2500, {%r1740, %r1739};
	xor.b64  	%rd2501, %rd2500, %rd2499;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 25;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 25;
	mov.b64 	%rd2502, {%r1742, %r1741};
	xor.b64  	%rd2503, %rd2501, %rd2502;
	xor.b64  	%rd2504, %rd2485, %rd2437;
	xor.b64  	%rd2505, %rd2485, %rd2461;
	and.b64  	%rd2506, %rd2505, %rd2504;
	xor.b64  	%rd2507, %rd2506, %rd2485;
	add.s64 	%rd2508, %rd2497, %rd2507;
	add.s64 	%rd2509, %rd2508, %rd2503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd2498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd2498;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 14;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 14;
	mov.b64 	%rd2510, {%r1746, %r1745};
	shf.r.wrap.b32 	%r1747, %r1744, %r1743, 18;
	shf.r.wrap.b32 	%r1748, %r1743, %r1744, 18;
	mov.b64 	%rd2511, {%r1748, %r1747};
	xor.b64  	%rd2512, %rd2511, %rd2510;
	shf.l.wrap.b32 	%r1749, %r1743, %r1744, 23;
	shf.l.wrap.b32 	%r1750, %r1744, %r1743, 23;
	mov.b64 	%rd2513, {%r1750, %r1749};
	xor.b64  	%rd2514, %rd2512, %rd2513;
	xor.b64  	%rd2515, %rd2474, %rd2450;
	and.b64  	%rd2516, %rd2498, %rd2515;
	xor.b64  	%rd2517, %rd2516, %rd2450;
	add.s64 	%rd2518, %rd2426, %rd2276;
	add.s64 	%rd2519, %rd2518, %rd2724;
	add.s64 	%rd2520, %rd2519, %rd2517;
	add.s64 	%rd2521, %rd2520, %rd2514;
	add.s64 	%rd2522, %rd2521, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd2509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd2509;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 28;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 28;
	mov.b64 	%rd2523, {%r1754, %r1753};
	shf.l.wrap.b32 	%r1755, %r1751, %r1752, 30;
	shf.l.wrap.b32 	%r1756, %r1752, %r1751, 30;
	mov.b64 	%rd2524, {%r1756, %r1755};
	xor.b64  	%rd2525, %rd2524, %rd2523;
	shf.l.wrap.b32 	%r1757, %r1751, %r1752, 25;
	shf.l.wrap.b32 	%r1758, %r1752, %r1751, 25;
	mov.b64 	%rd2526, {%r1758, %r1757};
	xor.b64  	%rd2527, %rd2525, %rd2526;
	xor.b64  	%rd2528, %rd2509, %rd2461;
	xor.b64  	%rd2529, %rd2509, %rd2485;
	and.b64  	%rd2530, %rd2529, %rd2528;
	xor.b64  	%rd2531, %rd2530, %rd2509;
	add.s64 	%rd2532, %rd2521, %rd2531;
	add.s64 	%rd2533, %rd2532, %rd2527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd2522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd2522;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 14;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 14;
	mov.b64 	%rd2534, {%r1762, %r1761};
	shf.r.wrap.b32 	%r1763, %r1760, %r1759, 18;
	shf.r.wrap.b32 	%r1764, %r1759, %r1760, 18;
	mov.b64 	%rd2535, {%r1764, %r1763};
	xor.b64  	%rd2536, %rd2535, %rd2534;
	shf.l.wrap.b32 	%r1765, %r1759, %r1760, 23;
	shf.l.wrap.b32 	%r1766, %r1760, %r1759, 23;
	mov.b64 	%rd2537, {%r1766, %r1765};
	xor.b64  	%rd2538, %rd2536, %rd2537;
	xor.b64  	%rd2539, %rd2498, %rd2474;
	and.b64  	%rd2540, %rd2522, %rd2539;
	xor.b64  	%rd2541, %rd2540, %rd2474;
	add.s64 	%rd2542, %rd2450, %rd2289;
	add.s64 	%rd2543, %rd2542, %rd2725;
	add.s64 	%rd2544, %rd2543, %rd2541;
	add.s64 	%rd2545, %rd2544, %rd2538;
	add.s64 	%rd2546, %rd2545, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1767,%dummy}, %rd2533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1768}, %rd2533;
	}
	shf.r.wrap.b32 	%r1769, %r1768, %r1767, 28;
	shf.r.wrap.b32 	%r1770, %r1767, %r1768, 28;
	mov.b64 	%rd2547, {%r1770, %r1769};
	shf.l.wrap.b32 	%r1771, %r1767, %r1768, 30;
	shf.l.wrap.b32 	%r1772, %r1768, %r1767, 30;
	mov.b64 	%rd2548, {%r1772, %r1771};
	xor.b64  	%rd2549, %rd2548, %rd2547;
	shf.l.wrap.b32 	%r1773, %r1767, %r1768, 25;
	shf.l.wrap.b32 	%r1774, %r1768, %r1767, 25;
	mov.b64 	%rd2550, {%r1774, %r1773};
	xor.b64  	%rd2551, %rd2549, %rd2550;
	xor.b64  	%rd2552, %rd2533, %rd2485;
	xor.b64  	%rd2553, %rd2533, %rd2509;
	and.b64  	%rd2554, %rd2553, %rd2552;
	xor.b64  	%rd2555, %rd2554, %rd2533;
	add.s64 	%rd2556, %rd2545, %rd2555;
	add.s64 	%rd2557, %rd2556, %rd2551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1775,%dummy}, %rd2546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1776}, %rd2546;
	}
	shf.r.wrap.b32 	%r1777, %r1776, %r1775, 14;
	shf.r.wrap.b32 	%r1778, %r1775, %r1776, 14;
	mov.b64 	%rd2558, {%r1778, %r1777};
	shf.r.wrap.b32 	%r1779, %r1776, %r1775, 18;
	shf.r.wrap.b32 	%r1780, %r1775, %r1776, 18;
	mov.b64 	%rd2559, {%r1780, %r1779};
	xor.b64  	%rd2560, %rd2559, %rd2558;
	shf.l.wrap.b32 	%r1781, %r1775, %r1776, 23;
	shf.l.wrap.b32 	%r1782, %r1776, %r1775, 23;
	mov.b64 	%rd2561, {%r1782, %r1781};
	xor.b64  	%rd2562, %rd2560, %rd2561;
	xor.b64  	%rd2563, %rd2522, %rd2498;
	and.b64  	%rd2564, %rd2546, %rd2563;
	xor.b64  	%rd2565, %rd2564, %rd2498;
	add.s64 	%rd2566, %rd2474, %rd2302;
	add.s64 	%rd2567, %rd2566, %rd2726;
	add.s64 	%rd2568, %rd2567, %rd2565;
	add.s64 	%rd2569, %rd2568, %rd2562;
	add.s64 	%rd2570, %rd2569, %rd2485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd2557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd2557;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 28;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 28;
	mov.b64 	%rd2571, {%r1786, %r1785};
	shf.l.wrap.b32 	%r1787, %r1783, %r1784, 30;
	shf.l.wrap.b32 	%r1788, %r1784, %r1783, 30;
	mov.b64 	%rd2572, {%r1788, %r1787};
	xor.b64  	%rd2573, %rd2572, %rd2571;
	shf.l.wrap.b32 	%r1789, %r1783, %r1784, 25;
	shf.l.wrap.b32 	%r1790, %r1784, %r1783, 25;
	mov.b64 	%rd2574, {%r1790, %r1789};
	xor.b64  	%rd2575, %rd2573, %rd2574;
	xor.b64  	%rd2576, %rd2557, %rd2509;
	xor.b64  	%rd2577, %rd2557, %rd2533;
	and.b64  	%rd2578, %rd2577, %rd2576;
	xor.b64  	%rd2579, %rd2578, %rd2557;
	add.s64 	%rd2580, %rd2569, %rd2579;
	add.s64 	%rd2581, %rd2580, %rd2575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd2570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd2570;
	}
	shf.r.wrap.b32 	%r1793, %r1792, %r1791, 14;
	shf.r.wrap.b32 	%r1794, %r1791, %r1792, 14;
	mov.b64 	%rd2582, {%r1794, %r1793};
	shf.r.wrap.b32 	%r1795, %r1792, %r1791, 18;
	shf.r.wrap.b32 	%r1796, %r1791, %r1792, 18;
	mov.b64 	%rd2583, {%r1796, %r1795};
	xor.b64  	%rd2584, %rd2583, %rd2582;
	shf.l.wrap.b32 	%r1797, %r1791, %r1792, 23;
	shf.l.wrap.b32 	%r1798, %r1792, %r1791, 23;
	mov.b64 	%rd2585, {%r1798, %r1797};
	xor.b64  	%rd2586, %rd2584, %rd2585;
	xor.b64  	%rd2587, %rd2546, %rd2522;
	and.b64  	%rd2588, %rd2570, %rd2587;
	xor.b64  	%rd2589, %rd2588, %rd2522;
	add.s64 	%rd2590, %rd2498, %rd2315;
	add.s64 	%rd2591, %rd2590, %rd2727;
	add.s64 	%rd2592, %rd2591, %rd2589;
	add.s64 	%rd2593, %rd2592, %rd2586;
	add.s64 	%rd2594, %rd2593, %rd2509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1799,%dummy}, %rd2581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1800}, %rd2581;
	}
	shf.r.wrap.b32 	%r1801, %r1800, %r1799, 28;
	shf.r.wrap.b32 	%r1802, %r1799, %r1800, 28;
	mov.b64 	%rd2595, {%r1802, %r1801};
	shf.l.wrap.b32 	%r1803, %r1799, %r1800, 30;
	shf.l.wrap.b32 	%r1804, %r1800, %r1799, 30;
	mov.b64 	%rd2596, {%r1804, %r1803};
	xor.b64  	%rd2597, %rd2596, %rd2595;
	shf.l.wrap.b32 	%r1805, %r1799, %r1800, 25;
	shf.l.wrap.b32 	%r1806, %r1800, %r1799, 25;
	mov.b64 	%rd2598, {%r1806, %r1805};
	xor.b64  	%rd2599, %rd2597, %rd2598;
	xor.b64  	%rd2600, %rd2581, %rd2533;
	xor.b64  	%rd2601, %rd2581, %rd2557;
	and.b64  	%rd2602, %rd2601, %rd2600;
	xor.b64  	%rd2603, %rd2602, %rd2581;
	add.s64 	%rd2604, %rd2593, %rd2603;
	add.s64 	%rd2605, %rd2604, %rd2599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd2594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd2594;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 14;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 14;
	mov.b64 	%rd2606, {%r1810, %r1809};
	shf.r.wrap.b32 	%r1811, %r1808, %r1807, 18;
	shf.r.wrap.b32 	%r1812, %r1807, %r1808, 18;
	mov.b64 	%rd2607, {%r1812, %r1811};
	xor.b64  	%rd2608, %rd2607, %rd2606;
	shf.l.wrap.b32 	%r1813, %r1807, %r1808, 23;
	shf.l.wrap.b32 	%r1814, %r1808, %r1807, 23;
	mov.b64 	%rd2609, {%r1814, %r1813};
	xor.b64  	%rd2610, %rd2608, %rd2609;
	xor.b64  	%rd2611, %rd2570, %rd2546;
	and.b64  	%rd2612, %rd2594, %rd2611;
	xor.b64  	%rd2613, %rd2612, %rd2546;
	add.s64 	%rd2614, %rd2522, %rd2328;
	add.s64 	%rd2615, %rd2614, %rd2728;
	add.s64 	%rd2616, %rd2615, %rd2613;
	add.s64 	%rd2617, %rd2616, %rd2610;
	add.s64 	%rd2618, %rd2617, %rd2533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2605;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 28;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 28;
	mov.b64 	%rd2619, {%r1818, %r1817};
	shf.l.wrap.b32 	%r1819, %r1815, %r1816, 30;
	shf.l.wrap.b32 	%r1820, %r1816, %r1815, 30;
	mov.b64 	%rd2620, {%r1820, %r1819};
	xor.b64  	%rd2621, %rd2620, %rd2619;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 25;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 25;
	mov.b64 	%rd2622, {%r1822, %r1821};
	xor.b64  	%rd2623, %rd2621, %rd2622;
	xor.b64  	%rd2624, %rd2605, %rd2557;
	xor.b64  	%rd2625, %rd2605, %rd2581;
	and.b64  	%rd2626, %rd2625, %rd2624;
	xor.b64  	%rd2627, %rd2626, %rd2605;
	add.s64 	%rd2628, %rd2617, %rd2627;
	add.s64 	%rd2629, %rd2628, %rd2623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2618;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 14;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 14;
	mov.b64 	%rd2630, {%r1826, %r1825};
	shf.r.wrap.b32 	%r1827, %r1824, %r1823, 18;
	shf.r.wrap.b32 	%r1828, %r1823, %r1824, 18;
	mov.b64 	%rd2631, {%r1828, %r1827};
	xor.b64  	%rd2632, %rd2631, %rd2630;
	shf.l.wrap.b32 	%r1829, %r1823, %r1824, 23;
	shf.l.wrap.b32 	%r1830, %r1824, %r1823, 23;
	mov.b64 	%rd2633, {%r1830, %r1829};
	xor.b64  	%rd2634, %rd2632, %rd2633;
	xor.b64  	%rd2635, %rd2594, %rd2570;
	and.b64  	%rd2636, %rd2618, %rd2635;
	xor.b64  	%rd2637, %rd2636, %rd2570;
	add.s64 	%rd2638, %rd2546, %rd2341;
	add.s64 	%rd2639, %rd2638, %rd2729;
	add.s64 	%rd2640, %rd2639, %rd2637;
	add.s64 	%rd2641, %rd2640, %rd2634;
	add.s64 	%rd96, %rd2641, %rd2557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd2629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd2629;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 28;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 28;
	mov.b64 	%rd2642, {%r1834, %r1833};
	shf.l.wrap.b32 	%r1835, %r1831, %r1832, 30;
	shf.l.wrap.b32 	%r1836, %r1832, %r1831, 30;
	mov.b64 	%rd2643, {%r1836, %r1835};
	xor.b64  	%rd2644, %rd2643, %rd2642;
	shf.l.wrap.b32 	%r1837, %r1831, %r1832, 25;
	shf.l.wrap.b32 	%r1838, %r1832, %r1831, 25;
	mov.b64 	%rd2645, {%r1838, %r1837};
	xor.b64  	%rd2646, %rd2644, %rd2645;
	xor.b64  	%rd2647, %rd2629, %rd2581;
	xor.b64  	%rd2648, %rd2629, %rd2605;
	and.b64  	%rd2649, %rd2648, %rd2647;
	xor.b64  	%rd2650, %rd2649, %rd2629;
	add.s64 	%rd2651, %rd2641, %rd2650;
	add.s64 	%rd97, %rd2651, %rd2646;
	cvt.u32.u64	%r1839, %rd96;
	setp.ne.s32	%p3, %r1839, %r3;
	@%p3 bra 	BB5_9;

	shr.u64 	%rd2652, %rd97, 32;
	cvt.u32.u64	%r1840, %rd2652;
	shr.u64 	%rd2653, %rd96, 32;
	cvt.u32.u64	%r1841, %rd2653;
	setp.eq.s32	%p4, %r1841, %r4;
	cvt.u32.u64	%r1842, %rd97;
	setp.eq.s32	%p5, %r1842, %r5;
	and.pred  	%p6, %p4, %p5;
	setp.eq.s32	%p7, %r1840, %r6;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB5_9;
	bra.uni 	BB5_5;

BB5_5:
	atom.global.add.u32 	%r1843, [%rd22], 1;
	setp.ne.s32	%p9, %r1843, 0;
	@%p9 bra 	BB5_9;

	ld.param.u32 	%r1849, [m01700_s08_param_31];
	atom.global.add.u32 	%r10, [%rd103], 1;
	setp.lt.u32	%p10, %r10, %r1849;
	@%p10 bra 	BB5_8;
	bra.uni 	BB5_7;

BB5_8:
	ld.param.u32 	%r1850, [m01700_s08_param_27];
	ld.param.u64 	%rd2731, [m01700_s08_param_14];
	ld.param.u32 	%r1847, [m01700_s08_param_32];
	mul.wide.u32 	%rd2654, %r10, 20;
	add.s64 	%rd2655, %rd2731, %rd2654;
	st.global.u32 	[%rd2655], %r1850;
	mov.u32 	%r1845, 0;
	st.global.u32 	[%rd2655+4], %r1845;
	st.global.u32 	[%rd2655+8], %r1847;
	st.global.u32 	[%rd2655+12], %r1;
	st.global.u32 	[%rd2655+16], %r1851;
	bra.uni 	BB5_9;

BB5_7:
	atom.global.add.u32 	%r1844, [%rd103], -1;

BB5_9:
	ld.param.u32 	%r1846, [m01700_s08_param_30];
	add.s32 	%r1851, %r1851, 1;
	setp.lt.u32	%p11, %r1851, %r1846;
	@%p11 bra 	BB5_3;

BB5_10:
	ret;
}

	// .globl	m01700_s16
.entry m01700_s16(
	.param .u64 .ptr .global .align 4 m01700_s16_param_0,
	.param .u64 .ptr .global .align 4 m01700_s16_param_1,
	.param .u64 .ptr .global .align 4 m01700_s16_param_2,
	.param .u64 .ptr .const .align 4 m01700_s16_param_3,
	.param .u64 .ptr .global .align 1 m01700_s16_param_4,
	.param .u64 .ptr .global .align 1 m01700_s16_param_5,
	.param .u64 .ptr .global .align 4 m01700_s16_param_6,
	.param .u64 .ptr .global .align 4 m01700_s16_param_7,
	.param .u64 .ptr .global .align 4 m01700_s16_param_8,
	.param .u64 .ptr .global .align 4 m01700_s16_param_9,
	.param .u64 .ptr .global .align 4 m01700_s16_param_10,
	.param .u64 .ptr .global .align 4 m01700_s16_param_11,
	.param .u64 .ptr .global .align 4 m01700_s16_param_12,
	.param .u64 .ptr .global .align 4 m01700_s16_param_13,
	.param .u64 .ptr .global .align 4 m01700_s16_param_14,
	.param .u64 .ptr .global .align 4 m01700_s16_param_15,
	.param .u64 .ptr .global .align 4 m01700_s16_param_16,
	.param .u64 .ptr .global .align 4 m01700_s16_param_17,
	.param .u64 .ptr .global .align 1 m01700_s16_param_18,
	.param .u64 .ptr .global .align 4 m01700_s16_param_19,
	.param .u64 .ptr .global .align 4 m01700_s16_param_20,
	.param .u64 .ptr .global .align 4 m01700_s16_param_21,
	.param .u64 .ptr .global .align 4 m01700_s16_param_22,
	.param .u64 .ptr .global .align 4 m01700_s16_param_23,
	.param .u32 m01700_s16_param_24,
	.param .u32 m01700_s16_param_25,
	.param .u32 m01700_s16_param_26,
	.param .u32 m01700_s16_param_27,
	.param .u32 m01700_s16_param_28,
	.param .u32 m01700_s16_param_29,
	.param .u32 m01700_s16_param_30,
	.param .u32 m01700_s16_param_31,
	.param .u32 m01700_s16_param_32,
	.param .u32 m01700_s16_param_33,
	.param .u64 m01700_s16_param_34
)
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<1876>;
	.reg .b64 	%rd<2756>;


	ld.param.u64 	%rd103, [m01700_s16_param_0];
	ld.param.u64 	%rd106, [m01700_s16_param_15];
	ld.param.u64 	%rd107, [m01700_s16_param_16];
	ld.param.u64 	%rd108, [m01700_s16_param_19];
	ld.param.u32 	%r13, [m01700_s16_param_30];
	ld.param.u32 	%r15, [m01700_s16_param_32];
	ld.param.u64 	%rd109, [m01700_s16_param_34];
	mov.b32	%r16, %envreg3;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %ntid.x;
	mad.lo.s32 	%r19, %r17, %r18, %r16;
	mov.u32 	%r20, %tid.x;
	add.s32 	%r1, %r19, %r20;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd109;
	@%p1 bra 	BB6_10;

	setp.eq.s32	%p2, %r13, 0;
	@%p2 bra 	BB6_10;

	mul.lo.s64 	%rd110, %rd1, 260;
	add.s64 	%rd111, %rd103, %rd110;
	ld.global.u32 	%r2, [%rd111];
	mul.wide.u32 	%rd112, %r15, 64;
	add.s64 	%rd113, %rd106, %rd112;
	ld.global.u32 	%r3, [%rd113+56];
	ld.global.u32 	%r4, [%rd113+60];
	ld.global.u32 	%r5, [%rd113+24];
	ld.global.u32 	%r6, [%rd113+28];
	ld.global.u32 	%r7, [%rd111+4];
	ld.global.u32 	%r22, [%rd111+8];
	ld.global.u32 	%r23, [%rd111+12];
	mov.b64	%rd114, {%r23, %r22};
	ld.global.u32 	%r24, [%rd111+16];
	ld.global.u32 	%r25, [%rd111+20];
	mov.b64	%rd2, {%r25, %r24};
	ld.global.u32 	%r26, [%rd111+24];
	ld.global.u32 	%r27, [%rd111+28];
	mov.b64	%rd115, {%r27, %r26};
	ld.global.u32 	%r28, [%rd111+32];
	ld.global.u32 	%r29, [%rd111+36];
	mov.b64	%rd3, {%r29, %r28};
	ld.global.u32 	%r30, [%rd111+40];
	ld.global.u32 	%r31, [%rd111+44];
	mov.b64	%rd4, {%r31, %r30};
	ld.global.u32 	%r32, [%rd111+48];
	ld.global.u32 	%r33, [%rd111+52];
	mov.b64	%rd5, {%r33, %r32};
	ld.global.u32 	%r34, [%rd111+56];
	ld.global.u32 	%r35, [%rd111+60];
	mov.b64	%rd6, {%r35, %r34};
	mov.u64 	%rd116, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36,%dummy}, %rd116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37}, %rd116;
	}
	shf.r.wrap.b32 	%r38, %r37, %r36, 18;
	shf.r.wrap.b32 	%r39, %r36, %r37, 18;
	mov.b64 	%rd117, {%r39, %r38};
	shf.r.wrap.b32 	%r40, %r37, %r36, 14;
	shf.r.wrap.b32 	%r41, %r36, %r37, 14;
	mov.b64 	%rd118, {%r41, %r40};
	xor.b64  	%rd119, %rd117, %rd118;
	shf.l.wrap.b32 	%r42, %r36, %r37, 23;
	shf.l.wrap.b32 	%r43, %r37, %r36, 23;
	mov.b64 	%rd120, {%r43, %r42};
	xor.b64  	%rd7, %rd119, %rd120;
	ld.const.u64 	%rd121, [k_sha512];
	add.s64 	%rd8, %rd121, 8891960152096595636;
	mov.u64 	%rd122, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r44}, %rd122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r45,%dummy}, %rd122;
	}
	shf.l.wrap.b32 	%r46, %r45, %r44, 30;
	shf.l.wrap.b32 	%r47, %r44, %r45, 30;
	mov.b64 	%rd123, {%r47, %r46};
	shf.r.wrap.b32 	%r48, %r44, %r45, 28;
	shf.r.wrap.b32 	%r49, %r45, %r44, 28;
	mov.b64 	%rd124, {%r49, %r48};
	xor.b64  	%rd125, %rd123, %rd124;
	shf.l.wrap.b32 	%r50, %r45, %r44, 25;
	shf.l.wrap.b32 	%r51, %r44, %r45, 25;
	mov.b64 	%rd126, {%r51, %r50};
	xor.b64  	%rd9, %rd125, %rd126;
	ld.const.u64 	%rd127, [k_sha512+8];
	add.s64 	%rd128, %rd114, %rd127;
	add.s64 	%rd10, %rd128, 2270897969802886507;
	ld.const.u64 	%rd129, [k_sha512+16];
	add.s64 	%rd130, %rd2, %rd129;
	add.s64 	%rd11, %rd130, -7276294671716946913;
	ld.const.u64 	%rd131, [k_sha512+24];
	add.s64 	%rd132, %rd115, %rd131;
	add.s64 	%rd12, %rd132, 5840696475078001361;
	mul.wide.u32 	%rd133, %r15, 4;
	add.s64 	%rd25, %rd107, %rd133;
	mov.u64 	%rd134, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r52}, %rd134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r53,%dummy}, %rd134;
	}
	shf.l.wrap.b32 	%r54, %r53, %r52, 3;
	shf.l.wrap.b32 	%r55, %r52, %r53, 3;
	mov.b64 	%rd135, {%r55, %r54};
	shf.r.wrap.b32 	%r56, %r52, %r53, 19;
	shf.r.wrap.b32 	%r57, %r53, %r52, 19;
	mov.b64 	%rd136, {%r57, %r56};
	xor.b64  	%rd26, %rd136, %rd135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r58,%dummy}, %rd114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r59}, %rd114;
	}
	shf.r.wrap.b32 	%r60, %r59, %r58, 1;
	shf.r.wrap.b32 	%r61, %r58, %r59, 1;
	mov.b64 	%rd137, {%r61, %r60};
	shf.r.wrap.b32 	%r62, %r59, %r58, 8;
	shf.r.wrap.b32 	%r63, %r58, %r59, 8;
	mov.b64 	%rd138, {%r63, %r62};
	shr.u64 	%rd139, %rd114, 7;
	xor.b64  	%rd140, %rd137, %rd139;
	xor.b64  	%rd27, %rd140, %rd138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd6;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd6;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 19;
	shf.r.wrap.b32 	%r67, %r64, %r65, 19;
	mov.b64 	%rd141, {%r67, %r66};
	shf.l.wrap.b32 	%r68, %r64, %r65, 3;
	shf.l.wrap.b32 	%r69, %r65, %r64, 3;
	mov.b64 	%rd142, {%r69, %r68};
	shr.u64 	%rd143, %rd6, 6;
	xor.b64  	%rd144, %rd141, %rd143;
	xor.b64  	%rd145, %rd144, %rd142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r70,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r71}, %rd2;
	}
	shf.r.wrap.b32 	%r72, %r71, %r70, 1;
	shf.r.wrap.b32 	%r73, %r70, %r71, 1;
	mov.b64 	%rd146, {%r73, %r72};
	shf.r.wrap.b32 	%r74, %r71, %r70, 8;
	shf.r.wrap.b32 	%r75, %r70, %r71, 8;
	mov.b64 	%rd147, {%r75, %r74};
	shr.u64 	%rd148, %rd2, 7;
	xor.b64  	%rd149, %rd146, %rd148;
	xor.b64  	%rd150, %rd149, %rd147;
	add.s64 	%rd151, %rd114, %rd145;
	add.s64 	%rd28, %rd151, %rd150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd115;
	}
	shf.r.wrap.b32 	%r78, %r77, %r76, 1;
	shf.r.wrap.b32 	%r79, %r76, %r77, 1;
	mov.b64 	%rd152, {%r79, %r78};
	shf.r.wrap.b32 	%r80, %r77, %r76, 8;
	shf.r.wrap.b32 	%r81, %r76, %r77, 8;
	mov.b64 	%rd153, {%r81, %r80};
	shr.u64 	%rd154, %rd115, 7;
	xor.b64  	%rd155, %rd152, %rd154;
	xor.b64  	%rd29, %rd155, %rd153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r82,%dummy}, %rd28;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r83}, %rd28;
	}
	shf.r.wrap.b32 	%r84, %r83, %r82, 19;
	shf.r.wrap.b32 	%r85, %r82, %r83, 19;
	mov.b64 	%rd156, {%r85, %r84};
	shf.l.wrap.b32 	%r86, %r82, %r83, 3;
	shf.l.wrap.b32 	%r87, %r83, %r82, 3;
	mov.b64 	%rd157, {%r87, %r86};
	shr.u64 	%rd158, %rd28, 6;
	xor.b64  	%rd159, %rd156, %rd158;
	xor.b64  	%rd160, %rd159, %rd157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r88,%dummy}, %rd3;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd3;
	}
	shf.r.wrap.b32 	%r90, %r89, %r88, 1;
	shf.r.wrap.b32 	%r91, %r88, %r89, 1;
	mov.b64 	%rd161, {%r91, %r90};
	shf.r.wrap.b32 	%r92, %r89, %r88, 8;
	shf.r.wrap.b32 	%r93, %r88, %r89, 8;
	mov.b64 	%rd162, {%r93, %r92};
	shr.u64 	%rd163, %rd3, 7;
	xor.b64  	%rd164, %rd161, %rd163;
	xor.b64  	%rd165, %rd164, %rd162;
	add.s64 	%rd166, %rd115, %rd160;
	add.s64 	%rd30, %rd166, %rd165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r94,%dummy}, %rd4;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r95}, %rd4;
	}
	shf.r.wrap.b32 	%r96, %r95, %r94, 1;
	shf.r.wrap.b32 	%r97, %r94, %r95, 1;
	mov.b64 	%rd167, {%r97, %r96};
	shf.r.wrap.b32 	%r98, %r95, %r94, 8;
	shf.r.wrap.b32 	%r99, %r94, %r95, 8;
	mov.b64 	%rd168, {%r99, %r98};
	shr.u64 	%rd169, %rd4, 7;
	xor.b64  	%rd170, %rd167, %rd169;
	xor.b64  	%rd31, %rd170, %rd168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r100,%dummy}, %rd30;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r101}, %rd30;
	}
	shf.r.wrap.b32 	%r102, %r101, %r100, 19;
	shf.r.wrap.b32 	%r103, %r100, %r101, 19;
	mov.b64 	%rd171, {%r103, %r102};
	shf.l.wrap.b32 	%r104, %r100, %r101, 3;
	shf.l.wrap.b32 	%r105, %r101, %r100, 3;
	mov.b64 	%rd172, {%r105, %r104};
	shr.u64 	%rd173, %rd30, 6;
	xor.b64  	%rd174, %rd171, %rd173;
	xor.b64  	%rd175, %rd174, %rd172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r106,%dummy}, %rd5;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r107}, %rd5;
	}
	shf.r.wrap.b32 	%r108, %r107, %r106, 1;
	shf.r.wrap.b32 	%r109, %r106, %r107, 1;
	mov.b64 	%rd176, {%r109, %r108};
	shf.r.wrap.b32 	%r110, %r107, %r106, 8;
	shf.r.wrap.b32 	%r111, %r106, %r107, 8;
	mov.b64 	%rd177, {%r111, %r110};
	shr.u64 	%rd178, %rd5, 7;
	xor.b64  	%rd179, %rd176, %rd178;
	xor.b64  	%rd180, %rd179, %rd177;
	add.s64 	%rd181, %rd4, %rd175;
	add.s64 	%rd32, %rd181, %rd180;
	shf.r.wrap.b32 	%r112, %r52, %r53, 8;
	shf.r.wrap.b32 	%r113, %r53, %r52, 8;
	mov.b64 	%rd182, {%r113, %r112};
	shf.r.wrap.b32 	%r114, %r52, %r53, 1;
	shf.r.wrap.b32 	%r115, %r53, %r52, 1;
	mov.b64 	%rd183, {%r115, %r114};
	xor.b64  	%rd33, %rd183, %rd182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r116,%dummy}, %rd32;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r117}, %rd32;
	}
	shf.r.wrap.b32 	%r118, %r117, %r116, 19;
	shf.r.wrap.b32 	%r119, %r116, %r117, 19;
	mov.b64 	%rd184, {%r119, %r118};
	shf.l.wrap.b32 	%r120, %r116, %r117, 3;
	shf.l.wrap.b32 	%r121, %r117, %r116, 3;
	mov.b64 	%rd185, {%r121, %r120};
	shr.u64 	%rd186, %rd32, 6;
	xor.b64  	%rd187, %rd184, %rd186;
	xor.b64  	%rd35, %rd187, %rd185;
	shf.r.wrap.b32 	%r122, %r65, %r64, 1;
	shf.r.wrap.b32 	%r123, %r64, %r65, 1;
	mov.b64 	%rd188, {%r123, %r122};
	shf.r.wrap.b32 	%r124, %r65, %r64, 8;
	shf.r.wrap.b32 	%r125, %r64, %r65, 8;
	mov.b64 	%rd189, {%r125, %r124};
	shr.u64 	%rd190, %rd6, 7;
	xor.b64  	%rd191, %rd188, %rd190;
	xor.b64  	%rd36, %rd191, %rd189;
	shf.r.wrap.b32 	%r126, %r83, %r82, 1;
	shf.r.wrap.b32 	%r127, %r82, %r83, 1;
	mov.b64 	%rd192, {%r127, %r126};
	shf.r.wrap.b32 	%r128, %r83, %r82, 8;
	shf.r.wrap.b32 	%r129, %r82, %r83, 8;
	mov.b64 	%rd193, {%r129, %r128};
	shr.u64 	%rd194, %rd28, 7;
	xor.b64  	%rd195, %rd192, %rd194;
	xor.b64  	%rd53, %rd195, %rd193;
	shf.r.wrap.b32 	%r130, %r101, %r100, 1;
	shf.r.wrap.b32 	%r131, %r100, %r101, 1;
	mov.b64 	%rd196, {%r131, %r130};
	shf.r.wrap.b32 	%r132, %r101, %r100, 8;
	shf.r.wrap.b32 	%r133, %r100, %r101, 8;
	mov.b64 	%rd197, {%r133, %r132};
	shr.u64 	%rd198, %rd30, 7;
	xor.b64  	%rd199, %rd196, %rd198;
	xor.b64  	%rd54, %rd199, %rd197;
	shf.r.wrap.b32 	%r134, %r117, %r116, 1;
	shf.r.wrap.b32 	%r135, %r116, %r117, 1;
	mov.b64 	%rd200, {%r135, %r134};
	shf.r.wrap.b32 	%r136, %r117, %r116, 8;
	shf.r.wrap.b32 	%r137, %r116, %r117, 8;
	mov.b64 	%rd201, {%r137, %r136};
	shr.u64 	%rd202, %rd32, 7;
	xor.b64  	%rd203, %rd200, %rd202;
	xor.b64  	%rd55, %rd203, %rd201;
	mov.u32 	%r1875, 0;

BB6_3:
	ld.const.u64 	%rd2754, [k_sha512+608];
	ld.const.u64 	%rd2753, [k_sha512+600];
	ld.const.u64 	%rd2752, [k_sha512+592];
	ld.const.u64 	%rd2751, [k_sha512+584];
	ld.const.u64 	%rd2750, [k_sha512+576];
	ld.const.u64 	%rd2749, [k_sha512+568];
	ld.const.u64 	%rd2748, [k_sha512+560];
	ld.const.u64 	%rd2747, [k_sha512+552];
	ld.const.u64 	%rd2746, [k_sha512+544];
	ld.const.u64 	%rd2745, [k_sha512+536];
	ld.const.u64 	%rd2744, [k_sha512+528];
	ld.const.u64 	%rd2743, [k_sha512+520];
	ld.const.u64 	%rd2742, [k_sha512+512];
	ld.const.u64 	%rd2741, [k_sha512+504];
	ld.const.u64 	%rd2740, [k_sha512+496];
	ld.const.u64 	%rd2739, [k_sha512+488];
	ld.const.u64 	%rd2738, [k_sha512+480];
	ld.const.u64 	%rd2737, [k_sha512+472];
	ld.const.u64 	%rd2736, [k_sha512+464];
	ld.const.u64 	%rd2735, [k_sha512+456];
	ld.const.u64 	%rd2734, [k_sha512+448];
	ld.const.u64 	%rd2733, [k_sha512+440];
	ld.const.u64 	%rd2732, [k_sha512+432];
	ld.const.u64 	%rd2731, [k_sha512+424];
	ld.const.u64 	%rd2730, [k_sha512+416];
	ld.const.u64 	%rd2729, [k_sha512+408];
	ld.const.u64 	%rd2728, [k_sha512+400];
	ld.const.u64 	%rd2727, [k_sha512+392];
	ld.const.u64 	%rd2726, [k_sha512+384];
	ld.const.u64 	%rd2725, [k_sha512+376];
	ld.const.u64 	%rd2724, [k_sha512+368];
	ld.const.u64 	%rd2723, [k_sha512+360];
	ld.const.u64 	%rd2722, [k_sha512+352];
	ld.const.u64 	%rd2721, [k_sha512+344];
	ld.const.u64 	%rd2720, [k_sha512+336];
	ld.const.u64 	%rd2719, [k_sha512+328];
	ld.const.u64 	%rd2718, [k_sha512+320];
	ld.const.u64 	%rd2717, [k_sha512+312];
	ld.const.u64 	%rd2716, [k_sha512+304];
	ld.const.u64 	%rd2715, [k_sha512+296];
	ld.const.u64 	%rd2714, [k_sha512+288];
	ld.const.u64 	%rd2713, [k_sha512+280];
	ld.const.u64 	%rd2712, [k_sha512+272];
	ld.const.u64 	%rd2711, [k_sha512+264];
	ld.const.u64 	%rd2710, [k_sha512+256];
	ld.const.u64 	%rd2709, [k_sha512+248];
	ld.const.u64 	%rd2708, [k_sha512+240];
	ld.const.u64 	%rd2707, [k_sha512+232];
	ld.const.u64 	%rd2706, [k_sha512+224];
	ld.const.u64 	%rd2705, [k_sha512+216];
	ld.const.u64 	%rd2704, [k_sha512+208];
	ld.const.u64 	%rd2703, [k_sha512+200];
	ld.const.u64 	%rd2702, [k_sha512+192];
	ld.const.u64 	%rd2701, [k_sha512+184];
	ld.const.u64 	%rd2700, [k_sha512+176];
	ld.const.u64 	%rd2699, [k_sha512+168];
	ld.const.u64 	%rd2698, [k_sha512+160];
	ld.const.u64 	%rd2697, [k_sha512+152];
	ld.const.u64 	%rd2696, [k_sha512+144];
	ld.const.u64 	%rd2695, [k_sha512+136];
	ld.const.u64 	%rd2694, [k_sha512+128];
	add.s64 	%rd2693, %rd5, %rd6;
	ld.const.u64 	%rd2692, [k_sha512+120];
	ld.const.u64 	%rd2691, [k_sha512+112];
	ld.const.u64 	%rd2690, [k_sha512+104];
	ld.const.u64 	%rd2689, [k_sha512+96];
	ld.const.u64 	%rd2688, [k_sha512+88];
	ld.const.u64 	%rd2687, [k_sha512+80];
	ld.const.u64 	%rd2686, [k_sha512+72];
	ld.const.u64 	%rd2685, [k_sha512+64];
	ld.const.u64 	%rd2684, [k_sha512+56];
	ld.const.u64 	%rd2683, [k_sha512+48];
	ld.const.u64 	%rd2682, [k_sha512+40];
	ld.const.u64 	%rd2681, [k_sha512+32];
	ld.param.u64 	%rd2680, [m01700_s16_param_3];
	mul.wide.u32 	%rd204, %r1875, 4;
	add.s64 	%rd205, %rd2680, %rd204;
	ld.const.u32 	%r138, [%rd205];
	or.b32  	%r139, %r138, %r2;
	mov.b64	%rd206, {%r7, %r139};
	add.s64 	%rd207, %rd8, %rd206;
	add.s64 	%rd208, %rd207, %rd7;
	add.s64 	%rd209, %rd208, -6534734903238641935;
	add.s64 	%rd210, %rd208, %rd9;
	add.s64 	%rd211, %rd210, 4210837510808201515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r140,%dummy}, %rd209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r141}, %rd209;
	}
	shf.r.wrap.b32 	%r142, %r141, %r140, 14;
	shf.r.wrap.b32 	%r143, %r140, %r141, 14;
	mov.b64 	%rd212, {%r143, %r142};
	shf.r.wrap.b32 	%r144, %r141, %r140, 18;
	shf.r.wrap.b32 	%r145, %r140, %r141, 18;
	mov.b64 	%rd213, {%r145, %r144};
	xor.b64  	%rd214, %rd213, %rd212;
	shf.l.wrap.b32 	%r146, %r140, %r141, 23;
	shf.l.wrap.b32 	%r147, %r141, %r140, 23;
	mov.b64 	%rd215, {%r147, %r146};
	xor.b64  	%rd216, %rd214, %rd215;
	and.b64  	%rd217, %rd209, -3887949035690463538;
	xor.b64  	%rd218, %rd217, -7276294671716946913;
	add.s64 	%rd219, %rd10, %rd218;
	add.s64 	%rd220, %rd219, %rd216;
	add.s64 	%rd221, %rd220, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r148,%dummy}, %rd211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r149}, %rd211;
	}
	shf.r.wrap.b32 	%r150, %r149, %r148, 28;
	shf.r.wrap.b32 	%r151, %r148, %r149, 28;
	mov.b64 	%rd222, {%r151, %r150};
	shf.l.wrap.b32 	%r152, %r148, %r149, 30;
	shf.l.wrap.b32 	%r153, %r149, %r148, 30;
	mov.b64 	%rd223, {%r153, %r152};
	xor.b64  	%rd224, %rd223, %rd222;
	shf.l.wrap.b32 	%r154, %r148, %r149, 25;
	shf.l.wrap.b32 	%r155, %r149, %r148, 25;
	mov.b64 	%rd225, {%r155, %r154};
	xor.b64  	%rd226, %rd224, %rd225;
	xor.b64  	%rd227, %rd211, -4942790177534073029;
	xor.b64  	%rd228, %rd211, 7640891576956012808;
	and.b64  	%rd229, %rd228, %rd227;
	xor.b64  	%rd230, %rd229, %rd211;
	add.s64 	%rd231, %rd220, %rd230;
	add.s64 	%rd232, %rd231, %rd226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r156,%dummy}, %rd221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r157}, %rd221;
	}
	shf.r.wrap.b32 	%r158, %r157, %r156, 14;
	shf.r.wrap.b32 	%r159, %r156, %r157, 14;
	mov.b64 	%rd233, {%r159, %r158};
	shf.r.wrap.b32 	%r160, %r157, %r156, 18;
	shf.r.wrap.b32 	%r161, %r156, %r157, 18;
	mov.b64 	%rd234, {%r161, %r160};
	xor.b64  	%rd235, %rd234, %rd233;
	shf.l.wrap.b32 	%r162, %r156, %r157, 23;
	shf.l.wrap.b32 	%r163, %r157, %r156, 23;
	mov.b64 	%rd236, {%r163, %r162};
	xor.b64  	%rd237, %rd235, %rd236;
	xor.b64  	%rd238, %rd209, 5840696475078001361;
	and.b64  	%rd239, %rd221, %rd238;
	xor.b64  	%rd240, %rd239, 5840696475078001361;
	add.s64 	%rd241, %rd11, %rd240;
	add.s64 	%rd242, %rd241, %rd237;
	add.s64 	%rd243, %rd242, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r164,%dummy}, %rd232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r165}, %rd232;
	}
	shf.r.wrap.b32 	%r166, %r165, %r164, 28;
	shf.r.wrap.b32 	%r167, %r164, %r165, 28;
	mov.b64 	%rd244, {%r167, %r166};
	shf.l.wrap.b32 	%r168, %r164, %r165, 30;
	shf.l.wrap.b32 	%r169, %r165, %r164, 30;
	mov.b64 	%rd245, {%r169, %r168};
	xor.b64  	%rd246, %rd245, %rd244;
	shf.l.wrap.b32 	%r170, %r164, %r165, 25;
	shf.l.wrap.b32 	%r171, %r165, %r164, 25;
	mov.b64 	%rd247, {%r171, %r170};
	xor.b64  	%rd248, %rd246, %rd247;
	xor.b64  	%rd249, %rd232, 7640891576956012808;
	xor.b64  	%rd250, %rd232, %rd211;
	and.b64  	%rd251, %rd250, %rd249;
	xor.b64  	%rd252, %rd251, %rd232;
	add.s64 	%rd253, %rd242, %rd252;
	add.s64 	%rd254, %rd253, %rd248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r172,%dummy}, %rd243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r173}, %rd243;
	}
	shf.r.wrap.b32 	%r174, %r173, %r172, 14;
	shf.r.wrap.b32 	%r175, %r172, %r173, 14;
	mov.b64 	%rd255, {%r175, %r174};
	shf.r.wrap.b32 	%r176, %r173, %r172, 18;
	shf.r.wrap.b32 	%r177, %r172, %r173, 18;
	mov.b64 	%rd256, {%r177, %r176};
	xor.b64  	%rd257, %rd256, %rd255;
	shf.l.wrap.b32 	%r178, %r172, %r173, 23;
	shf.l.wrap.b32 	%r179, %r173, %r172, 23;
	mov.b64 	%rd258, {%r179, %r178};
	xor.b64  	%rd259, %rd257, %rd258;
	xor.b64  	%rd260, %rd221, %rd209;
	and.b64  	%rd261, %rd243, %rd260;
	xor.b64  	%rd262, %rd261, %rd209;
	add.s64 	%rd263, %rd12, %rd262;
	add.s64 	%rd264, %rd263, %rd259;
	add.s64 	%rd265, %rd264, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r180,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r181}, %rd254;
	}
	shf.r.wrap.b32 	%r182, %r181, %r180, 28;
	shf.r.wrap.b32 	%r183, %r180, %r181, 28;
	mov.b64 	%rd266, {%r183, %r182};
	shf.l.wrap.b32 	%r184, %r180, %r181, 30;
	shf.l.wrap.b32 	%r185, %r181, %r180, 30;
	mov.b64 	%rd267, {%r185, %r184};
	xor.b64  	%rd268, %rd267, %rd266;
	shf.l.wrap.b32 	%r186, %r180, %r181, 25;
	shf.l.wrap.b32 	%r187, %r181, %r180, 25;
	mov.b64 	%rd269, {%r187, %r186};
	xor.b64  	%rd270, %rd268, %rd269;
	xor.b64  	%rd271, %rd254, %rd211;
	xor.b64  	%rd272, %rd254, %rd232;
	and.b64  	%rd273, %rd272, %rd271;
	xor.b64  	%rd274, %rd273, %rd254;
	add.s64 	%rd275, %rd264, %rd274;
	add.s64 	%rd276, %rd275, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r188,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r189}, %rd265;
	}
	shf.r.wrap.b32 	%r190, %r189, %r188, 14;
	shf.r.wrap.b32 	%r191, %r188, %r189, 14;
	mov.b64 	%rd277, {%r191, %r190};
	shf.r.wrap.b32 	%r192, %r189, %r188, 18;
	shf.r.wrap.b32 	%r193, %r188, %r189, 18;
	mov.b64 	%rd278, {%r193, %r192};
	xor.b64  	%rd279, %rd278, %rd277;
	shf.l.wrap.b32 	%r194, %r188, %r189, 23;
	shf.l.wrap.b32 	%r195, %r189, %r188, 23;
	mov.b64 	%rd280, {%r195, %r194};
	xor.b64  	%rd281, %rd279, %rd280;
	xor.b64  	%rd282, %rd243, %rd221;
	and.b64  	%rd283, %rd265, %rd282;
	xor.b64  	%rd284, %rd283, %rd221;
	add.s64 	%rd285, %rd209, %rd3;
	add.s64 	%rd286, %rd285, %rd2681;
	add.s64 	%rd287, %rd286, %rd284;
	add.s64 	%rd288, %rd287, %rd281;
	add.s64 	%rd289, %rd288, %rd211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r196,%dummy}, %rd276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r197}, %rd276;
	}
	shf.r.wrap.b32 	%r198, %r197, %r196, 28;
	shf.r.wrap.b32 	%r199, %r196, %r197, 28;
	mov.b64 	%rd290, {%r199, %r198};
	shf.l.wrap.b32 	%r200, %r196, %r197, 30;
	shf.l.wrap.b32 	%r201, %r197, %r196, 30;
	mov.b64 	%rd291, {%r201, %r200};
	xor.b64  	%rd292, %rd291, %rd290;
	shf.l.wrap.b32 	%r202, %r196, %r197, 25;
	shf.l.wrap.b32 	%r203, %r197, %r196, 25;
	mov.b64 	%rd293, {%r203, %r202};
	xor.b64  	%rd294, %rd292, %rd293;
	xor.b64  	%rd295, %rd276, %rd232;
	xor.b64  	%rd296, %rd276, %rd254;
	and.b64  	%rd297, %rd296, %rd295;
	xor.b64  	%rd298, %rd297, %rd276;
	add.s64 	%rd299, %rd288, %rd298;
	add.s64 	%rd300, %rd299, %rd294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r204,%dummy}, %rd289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r205}, %rd289;
	}
	shf.r.wrap.b32 	%r206, %r205, %r204, 14;
	shf.r.wrap.b32 	%r207, %r204, %r205, 14;
	mov.b64 	%rd301, {%r207, %r206};
	shf.r.wrap.b32 	%r208, %r205, %r204, 18;
	shf.r.wrap.b32 	%r209, %r204, %r205, 18;
	mov.b64 	%rd302, {%r209, %r208};
	xor.b64  	%rd303, %rd302, %rd301;
	shf.l.wrap.b32 	%r210, %r204, %r205, 23;
	shf.l.wrap.b32 	%r211, %r205, %r204, 23;
	mov.b64 	%rd304, {%r211, %r210};
	xor.b64  	%rd305, %rd303, %rd304;
	xor.b64  	%rd306, %rd265, %rd243;
	and.b64  	%rd307, %rd289, %rd306;
	xor.b64  	%rd308, %rd307, %rd243;
	add.s64 	%rd309, %rd221, %rd4;
	add.s64 	%rd310, %rd309, %rd2682;
	add.s64 	%rd311, %rd310, %rd308;
	add.s64 	%rd312, %rd311, %rd305;
	add.s64 	%rd313, %rd312, %rd232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r212,%dummy}, %rd300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r213}, %rd300;
	}
	shf.r.wrap.b32 	%r214, %r213, %r212, 28;
	shf.r.wrap.b32 	%r215, %r212, %r213, 28;
	mov.b64 	%rd314, {%r215, %r214};
	shf.l.wrap.b32 	%r216, %r212, %r213, 30;
	shf.l.wrap.b32 	%r217, %r213, %r212, 30;
	mov.b64 	%rd315, {%r217, %r216};
	xor.b64  	%rd316, %rd315, %rd314;
	shf.l.wrap.b32 	%r218, %r212, %r213, 25;
	shf.l.wrap.b32 	%r219, %r213, %r212, 25;
	mov.b64 	%rd317, {%r219, %r218};
	xor.b64  	%rd318, %rd316, %rd317;
	xor.b64  	%rd319, %rd300, %rd254;
	xor.b64  	%rd320, %rd300, %rd276;
	and.b64  	%rd321, %rd320, %rd319;
	xor.b64  	%rd322, %rd321, %rd300;
	add.s64 	%rd323, %rd312, %rd322;
	add.s64 	%rd324, %rd323, %rd318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r220,%dummy}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r221}, %rd313;
	}
	shf.r.wrap.b32 	%r222, %r221, %r220, 14;
	shf.r.wrap.b32 	%r223, %r220, %r221, 14;
	mov.b64 	%rd325, {%r223, %r222};
	shf.r.wrap.b32 	%r224, %r221, %r220, 18;
	shf.r.wrap.b32 	%r225, %r220, %r221, 18;
	mov.b64 	%rd326, {%r225, %r224};
	xor.b64  	%rd327, %rd326, %rd325;
	shf.l.wrap.b32 	%r226, %r220, %r221, 23;
	shf.l.wrap.b32 	%r227, %r221, %r220, 23;
	mov.b64 	%rd328, {%r227, %r226};
	xor.b64  	%rd329, %rd327, %rd328;
	xor.b64  	%rd330, %rd289, %rd265;
	and.b64  	%rd331, %rd313, %rd330;
	xor.b64  	%rd332, %rd331, %rd265;
	add.s64 	%rd333, %rd243, %rd5;
	add.s64 	%rd334, %rd333, %rd2683;
	add.s64 	%rd335, %rd334, %rd332;
	add.s64 	%rd336, %rd335, %rd329;
	add.s64 	%rd337, %rd336, %rd254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r228,%dummy}, %rd324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r229}, %rd324;
	}
	shf.r.wrap.b32 	%r230, %r229, %r228, 28;
	shf.r.wrap.b32 	%r231, %r228, %r229, 28;
	mov.b64 	%rd338, {%r231, %r230};
	shf.l.wrap.b32 	%r232, %r228, %r229, 30;
	shf.l.wrap.b32 	%r233, %r229, %r228, 30;
	mov.b64 	%rd339, {%r233, %r232};
	xor.b64  	%rd340, %rd339, %rd338;
	shf.l.wrap.b32 	%r234, %r228, %r229, 25;
	shf.l.wrap.b32 	%r235, %r229, %r228, 25;
	mov.b64 	%rd341, {%r235, %r234};
	xor.b64  	%rd342, %rd340, %rd341;
	xor.b64  	%rd343, %rd324, %rd276;
	xor.b64  	%rd344, %rd324, %rd300;
	and.b64  	%rd345, %rd344, %rd343;
	xor.b64  	%rd346, %rd345, %rd324;
	add.s64 	%rd347, %rd336, %rd346;
	add.s64 	%rd348, %rd347, %rd342;
	add.s64 	%rd349, %rd2684, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r236,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r237}, %rd337;
	}
	shf.r.wrap.b32 	%r238, %r237, %r236, 14;
	shf.r.wrap.b32 	%r239, %r236, %r237, 14;
	mov.b64 	%rd350, {%r239, %r238};
	shf.r.wrap.b32 	%r240, %r237, %r236, 18;
	shf.r.wrap.b32 	%r241, %r236, %r237, 18;
	mov.b64 	%rd351, {%r241, %r240};
	xor.b64  	%rd352, %rd351, %rd350;
	shf.l.wrap.b32 	%r242, %r236, %r237, 23;
	shf.l.wrap.b32 	%r243, %r237, %r236, 23;
	mov.b64 	%rd353, {%r243, %r242};
	xor.b64  	%rd354, %rd352, %rd353;
	xor.b64  	%rd355, %rd313, %rd289;
	and.b64  	%rd356, %rd337, %rd355;
	xor.b64  	%rd357, %rd356, %rd289;
	add.s64 	%rd358, %rd349, %rd357;
	add.s64 	%rd359, %rd358, %rd354;
	add.s64 	%rd360, %rd359, %rd276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r244,%dummy}, %rd348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r245}, %rd348;
	}
	shf.r.wrap.b32 	%r246, %r245, %r244, 28;
	shf.r.wrap.b32 	%r247, %r244, %r245, 28;
	mov.b64 	%rd361, {%r247, %r246};
	shf.l.wrap.b32 	%r248, %r244, %r245, 30;
	shf.l.wrap.b32 	%r249, %r245, %r244, 30;
	mov.b64 	%rd362, {%r249, %r248};
	xor.b64  	%rd363, %rd362, %rd361;
	shf.l.wrap.b32 	%r250, %r244, %r245, 25;
	shf.l.wrap.b32 	%r251, %r245, %r244, 25;
	mov.b64 	%rd364, {%r251, %r250};
	xor.b64  	%rd365, %rd363, %rd364;
	xor.b64  	%rd366, %rd348, %rd300;
	xor.b64  	%rd367, %rd348, %rd324;
	and.b64  	%rd368, %rd367, %rd366;
	xor.b64  	%rd369, %rd368, %rd348;
	add.s64 	%rd370, %rd359, %rd369;
	add.s64 	%rd371, %rd370, %rd365;
	add.s64 	%rd372, %rd2685, %rd289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r252,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r253}, %rd360;
	}
	shf.r.wrap.b32 	%r254, %r253, %r252, 14;
	shf.r.wrap.b32 	%r255, %r252, %r253, 14;
	mov.b64 	%rd373, {%r255, %r254};
	shf.r.wrap.b32 	%r256, %r253, %r252, 18;
	shf.r.wrap.b32 	%r257, %r252, %r253, 18;
	mov.b64 	%rd374, {%r257, %r256};
	xor.b64  	%rd375, %rd374, %rd373;
	shf.l.wrap.b32 	%r258, %r252, %r253, 23;
	shf.l.wrap.b32 	%r259, %r253, %r252, 23;
	mov.b64 	%rd376, {%r259, %r258};
	xor.b64  	%rd377, %rd375, %rd376;
	xor.b64  	%rd378, %rd337, %rd313;
	and.b64  	%rd379, %rd360, %rd378;
	xor.b64  	%rd380, %rd379, %rd313;
	add.s64 	%rd381, %rd372, %rd380;
	add.s64 	%rd382, %rd381, %rd377;
	add.s64 	%rd383, %rd382, %rd300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r260,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r261}, %rd371;
	}
	shf.r.wrap.b32 	%r262, %r261, %r260, 28;
	shf.r.wrap.b32 	%r263, %r260, %r261, 28;
	mov.b64 	%rd384, {%r263, %r262};
	shf.l.wrap.b32 	%r264, %r260, %r261, 30;
	shf.l.wrap.b32 	%r265, %r261, %r260, 30;
	mov.b64 	%rd385, {%r265, %r264};
	xor.b64  	%rd386, %rd385, %rd384;
	shf.l.wrap.b32 	%r266, %r260, %r261, 25;
	shf.l.wrap.b32 	%r267, %r261, %r260, 25;
	mov.b64 	%rd387, {%r267, %r266};
	xor.b64  	%rd388, %rd386, %rd387;
	xor.b64  	%rd389, %rd371, %rd324;
	xor.b64  	%rd390, %rd371, %rd348;
	and.b64  	%rd391, %rd390, %rd389;
	xor.b64  	%rd392, %rd391, %rd371;
	add.s64 	%rd393, %rd382, %rd392;
	add.s64 	%rd394, %rd393, %rd388;
	add.s64 	%rd395, %rd2686, %rd313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r268,%dummy}, %rd383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd383;
	}
	shf.r.wrap.b32 	%r270, %r269, %r268, 14;
	shf.r.wrap.b32 	%r271, %r268, %r269, 14;
	mov.b64 	%rd396, {%r271, %r270};
	shf.r.wrap.b32 	%r272, %r269, %r268, 18;
	shf.r.wrap.b32 	%r273, %r268, %r269, 18;
	mov.b64 	%rd397, {%r273, %r272};
	xor.b64  	%rd398, %rd397, %rd396;
	shf.l.wrap.b32 	%r274, %r268, %r269, 23;
	shf.l.wrap.b32 	%r275, %r269, %r268, 23;
	mov.b64 	%rd399, {%r275, %r274};
	xor.b64  	%rd400, %rd398, %rd399;
	xor.b64  	%rd401, %rd360, %rd337;
	and.b64  	%rd402, %rd383, %rd401;
	xor.b64  	%rd403, %rd402, %rd337;
	add.s64 	%rd404, %rd395, %rd403;
	add.s64 	%rd405, %rd404, %rd400;
	add.s64 	%rd406, %rd405, %rd324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r276,%dummy}, %rd394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r277}, %rd394;
	}
	shf.r.wrap.b32 	%r278, %r277, %r276, 28;
	shf.r.wrap.b32 	%r279, %r276, %r277, 28;
	mov.b64 	%rd407, {%r279, %r278};
	shf.l.wrap.b32 	%r280, %r276, %r277, 30;
	shf.l.wrap.b32 	%r281, %r277, %r276, 30;
	mov.b64 	%rd408, {%r281, %r280};
	xor.b64  	%rd409, %rd408, %rd407;
	shf.l.wrap.b32 	%r282, %r276, %r277, 25;
	shf.l.wrap.b32 	%r283, %r277, %r276, 25;
	mov.b64 	%rd410, {%r283, %r282};
	xor.b64  	%rd411, %rd409, %rd410;
	xor.b64  	%rd412, %rd394, %rd348;
	xor.b64  	%rd413, %rd394, %rd371;
	and.b64  	%rd414, %rd413, %rd412;
	xor.b64  	%rd415, %rd414, %rd394;
	add.s64 	%rd416, %rd405, %rd415;
	add.s64 	%rd417, %rd416, %rd411;
	add.s64 	%rd418, %rd2687, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r284,%dummy}, %rd406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r285}, %rd406;
	}
	shf.r.wrap.b32 	%r286, %r285, %r284, 14;
	shf.r.wrap.b32 	%r287, %r284, %r285, 14;
	mov.b64 	%rd419, {%r287, %r286};
	shf.r.wrap.b32 	%r288, %r285, %r284, 18;
	shf.r.wrap.b32 	%r289, %r284, %r285, 18;
	mov.b64 	%rd420, {%r289, %r288};
	xor.b64  	%rd421, %rd420, %rd419;
	shf.l.wrap.b32 	%r290, %r284, %r285, 23;
	shf.l.wrap.b32 	%r291, %r285, %r284, 23;
	mov.b64 	%rd422, {%r291, %r290};
	xor.b64  	%rd423, %rd421, %rd422;
	xor.b64  	%rd424, %rd383, %rd360;
	and.b64  	%rd425, %rd406, %rd424;
	xor.b64  	%rd426, %rd425, %rd360;
	add.s64 	%rd427, %rd418, %rd426;
	add.s64 	%rd428, %rd427, %rd423;
	add.s64 	%rd429, %rd428, %rd348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r292,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r293}, %rd417;
	}
	shf.r.wrap.b32 	%r294, %r293, %r292, 28;
	shf.r.wrap.b32 	%r295, %r292, %r293, 28;
	mov.b64 	%rd430, {%r295, %r294};
	shf.l.wrap.b32 	%r296, %r292, %r293, 30;
	shf.l.wrap.b32 	%r297, %r293, %r292, 30;
	mov.b64 	%rd431, {%r297, %r296};
	xor.b64  	%rd432, %rd431, %rd430;
	shf.l.wrap.b32 	%r298, %r292, %r293, 25;
	shf.l.wrap.b32 	%r299, %r293, %r292, 25;
	mov.b64 	%rd433, {%r299, %r298};
	xor.b64  	%rd434, %rd432, %rd433;
	xor.b64  	%rd435, %rd417, %rd371;
	xor.b64  	%rd436, %rd417, %rd394;
	and.b64  	%rd437, %rd436, %rd435;
	xor.b64  	%rd438, %rd437, %rd417;
	add.s64 	%rd439, %rd428, %rd438;
	add.s64 	%rd440, %rd439, %rd434;
	add.s64 	%rd441, %rd2688, %rd360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd429;
	}
	shf.r.wrap.b32 	%r302, %r301, %r300, 14;
	shf.r.wrap.b32 	%r303, %r300, %r301, 14;
	mov.b64 	%rd442, {%r303, %r302};
	shf.r.wrap.b32 	%r304, %r301, %r300, 18;
	shf.r.wrap.b32 	%r305, %r300, %r301, 18;
	mov.b64 	%rd443, {%r305, %r304};
	xor.b64  	%rd444, %rd443, %rd442;
	shf.l.wrap.b32 	%r306, %r300, %r301, 23;
	shf.l.wrap.b32 	%r307, %r301, %r300, 23;
	mov.b64 	%rd445, {%r307, %r306};
	xor.b64  	%rd446, %rd444, %rd445;
	xor.b64  	%rd447, %rd406, %rd383;
	and.b64  	%rd448, %rd429, %rd447;
	xor.b64  	%rd449, %rd448, %rd383;
	add.s64 	%rd450, %rd441, %rd449;
	add.s64 	%rd451, %rd450, %rd446;
	add.s64 	%rd452, %rd451, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r308,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r309}, %rd440;
	}
	shf.r.wrap.b32 	%r310, %r309, %r308, 28;
	shf.r.wrap.b32 	%r311, %r308, %r309, 28;
	mov.b64 	%rd453, {%r311, %r310};
	shf.l.wrap.b32 	%r312, %r308, %r309, 30;
	shf.l.wrap.b32 	%r313, %r309, %r308, 30;
	mov.b64 	%rd454, {%r313, %r312};
	xor.b64  	%rd455, %rd454, %rd453;
	shf.l.wrap.b32 	%r314, %r308, %r309, 25;
	shf.l.wrap.b32 	%r315, %r309, %r308, 25;
	mov.b64 	%rd456, {%r315, %r314};
	xor.b64  	%rd457, %rd455, %rd456;
	xor.b64  	%rd458, %rd440, %rd394;
	xor.b64  	%rd459, %rd440, %rd417;
	and.b64  	%rd460, %rd459, %rd458;
	xor.b64  	%rd461, %rd460, %rd440;
	add.s64 	%rd462, %rd451, %rd461;
	add.s64 	%rd463, %rd462, %rd457;
	add.s64 	%rd464, %rd2689, %rd383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r316,%dummy}, %rd452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r317}, %rd452;
	}
	shf.r.wrap.b32 	%r318, %r317, %r316, 14;
	shf.r.wrap.b32 	%r319, %r316, %r317, 14;
	mov.b64 	%rd465, {%r319, %r318};
	shf.r.wrap.b32 	%r320, %r317, %r316, 18;
	shf.r.wrap.b32 	%r321, %r316, %r317, 18;
	mov.b64 	%rd466, {%r321, %r320};
	xor.b64  	%rd467, %rd466, %rd465;
	shf.l.wrap.b32 	%r322, %r316, %r317, 23;
	shf.l.wrap.b32 	%r323, %r317, %r316, 23;
	mov.b64 	%rd468, {%r323, %r322};
	xor.b64  	%rd469, %rd467, %rd468;
	xor.b64  	%rd470, %rd429, %rd406;
	and.b64  	%rd471, %rd452, %rd470;
	xor.b64  	%rd472, %rd471, %rd406;
	add.s64 	%rd473, %rd464, %rd472;
	add.s64 	%rd474, %rd473, %rd469;
	add.s64 	%rd475, %rd474, %rd394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd463;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 28;
	shf.r.wrap.b32 	%r327, %r324, %r325, 28;
	mov.b64 	%rd476, {%r327, %r326};
	shf.l.wrap.b32 	%r328, %r324, %r325, 30;
	shf.l.wrap.b32 	%r329, %r325, %r324, 30;
	mov.b64 	%rd477, {%r329, %r328};
	xor.b64  	%rd478, %rd477, %rd476;
	shf.l.wrap.b32 	%r330, %r324, %r325, 25;
	shf.l.wrap.b32 	%r331, %r325, %r324, 25;
	mov.b64 	%rd479, {%r331, %r330};
	xor.b64  	%rd480, %rd478, %rd479;
	xor.b64  	%rd481, %rd463, %rd417;
	xor.b64  	%rd482, %rd463, %rd440;
	and.b64  	%rd483, %rd482, %rd481;
	xor.b64  	%rd484, %rd483, %rd463;
	add.s64 	%rd485, %rd474, %rd484;
	add.s64 	%rd486, %rd485, %rd480;
	add.s64 	%rd487, %rd2690, %rd406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r332,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r333}, %rd475;
	}
	shf.r.wrap.b32 	%r334, %r333, %r332, 14;
	shf.r.wrap.b32 	%r335, %r332, %r333, 14;
	mov.b64 	%rd488, {%r335, %r334};
	shf.r.wrap.b32 	%r336, %r333, %r332, 18;
	shf.r.wrap.b32 	%r337, %r332, %r333, 18;
	mov.b64 	%rd489, {%r337, %r336};
	xor.b64  	%rd490, %rd489, %rd488;
	shf.l.wrap.b32 	%r338, %r332, %r333, 23;
	shf.l.wrap.b32 	%r339, %r333, %r332, 23;
	mov.b64 	%rd491, {%r339, %r338};
	xor.b64  	%rd492, %rd490, %rd491;
	xor.b64  	%rd493, %rd452, %rd429;
	and.b64  	%rd494, %rd475, %rd493;
	xor.b64  	%rd495, %rd494, %rd429;
	add.s64 	%rd496, %rd487, %rd495;
	add.s64 	%rd497, %rd496, %rd492;
	add.s64 	%rd498, %rd497, %rd417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r340,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r341}, %rd486;
	}
	shf.r.wrap.b32 	%r342, %r341, %r340, 28;
	shf.r.wrap.b32 	%r343, %r340, %r341, 28;
	mov.b64 	%rd499, {%r343, %r342};
	shf.l.wrap.b32 	%r344, %r340, %r341, 30;
	shf.l.wrap.b32 	%r345, %r341, %r340, 30;
	mov.b64 	%rd500, {%r345, %r344};
	xor.b64  	%rd501, %rd500, %rd499;
	shf.l.wrap.b32 	%r346, %r340, %r341, 25;
	shf.l.wrap.b32 	%r347, %r341, %r340, 25;
	mov.b64 	%rd502, {%r347, %r346};
	xor.b64  	%rd503, %rd501, %rd502;
	xor.b64  	%rd504, %rd486, %rd440;
	xor.b64  	%rd505, %rd486, %rd463;
	and.b64  	%rd506, %rd505, %rd504;
	xor.b64  	%rd507, %rd506, %rd486;
	add.s64 	%rd508, %rd497, %rd507;
	add.s64 	%rd509, %rd508, %rd503;
	add.s64 	%rd510, %rd2691, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r348,%dummy}, %rd498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd498;
	}
	shf.r.wrap.b32 	%r350, %r349, %r348, 14;
	shf.r.wrap.b32 	%r351, %r348, %r349, 14;
	mov.b64 	%rd511, {%r351, %r350};
	shf.r.wrap.b32 	%r352, %r349, %r348, 18;
	shf.r.wrap.b32 	%r353, %r348, %r349, 18;
	mov.b64 	%rd512, {%r353, %r352};
	xor.b64  	%rd513, %rd512, %rd511;
	shf.l.wrap.b32 	%r354, %r348, %r349, 23;
	shf.l.wrap.b32 	%r355, %r349, %r348, 23;
	mov.b64 	%rd514, {%r355, %r354};
	xor.b64  	%rd515, %rd513, %rd514;
	xor.b64  	%rd516, %rd475, %rd452;
	and.b64  	%rd517, %rd498, %rd516;
	xor.b64  	%rd518, %rd517, %rd452;
	add.s64 	%rd519, %rd510, %rd518;
	add.s64 	%rd520, %rd519, %rd515;
	add.s64 	%rd521, %rd520, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r356,%dummy}, %rd509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r357}, %rd509;
	}
	shf.r.wrap.b32 	%r358, %r357, %r356, 28;
	shf.r.wrap.b32 	%r359, %r356, %r357, 28;
	mov.b64 	%rd522, {%r359, %r358};
	shf.l.wrap.b32 	%r360, %r356, %r357, 30;
	shf.l.wrap.b32 	%r361, %r357, %r356, 30;
	mov.b64 	%rd523, {%r361, %r360};
	xor.b64  	%rd524, %rd523, %rd522;
	shf.l.wrap.b32 	%r362, %r356, %r357, 25;
	shf.l.wrap.b32 	%r363, %r357, %r356, 25;
	mov.b64 	%rd525, {%r363, %r362};
	xor.b64  	%rd526, %rd524, %rd525;
	xor.b64  	%rd527, %rd509, %rd463;
	xor.b64  	%rd528, %rd509, %rd486;
	and.b64  	%rd529, %rd528, %rd527;
	xor.b64  	%rd530, %rd529, %rd509;
	add.s64 	%rd531, %rd520, %rd530;
	add.s64 	%rd532, %rd531, %rd526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r364,%dummy}, %rd521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r365}, %rd521;
	}
	shf.r.wrap.b32 	%r366, %r365, %r364, 14;
	shf.r.wrap.b32 	%r367, %r364, %r365, 14;
	mov.b64 	%rd533, {%r367, %r366};
	shf.r.wrap.b32 	%r368, %r365, %r364, 18;
	shf.r.wrap.b32 	%r369, %r364, %r365, 18;
	mov.b64 	%rd534, {%r369, %r368};
	xor.b64  	%rd535, %rd534, %rd533;
	shf.l.wrap.b32 	%r370, %r364, %r365, 23;
	shf.l.wrap.b32 	%r371, %r365, %r364, 23;
	mov.b64 	%rd536, {%r371, %r370};
	xor.b64  	%rd537, %rd535, %rd536;
	xor.b64  	%rd538, %rd498, %rd475;
	and.b64  	%rd539, %rd521, %rd538;
	xor.b64  	%rd540, %rd539, %rd475;
	add.s64 	%rd541, %rd452, %rd6;
	add.s64 	%rd542, %rd541, %rd2692;
	add.s64 	%rd543, %rd542, %rd540;
	add.s64 	%rd544, %rd543, %rd537;
	add.s64 	%rd545, %rd544, %rd463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r372,%dummy}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd532;
	}
	shf.r.wrap.b32 	%r374, %r373, %r372, 28;
	shf.r.wrap.b32 	%r375, %r372, %r373, 28;
	mov.b64 	%rd546, {%r375, %r374};
	shf.l.wrap.b32 	%r376, %r372, %r373, 30;
	shf.l.wrap.b32 	%r377, %r373, %r372, 30;
	mov.b64 	%rd547, {%r377, %r376};
	xor.b64  	%rd548, %rd547, %rd546;
	shf.l.wrap.b32 	%r378, %r372, %r373, 25;
	shf.l.wrap.b32 	%r379, %r373, %r372, 25;
	mov.b64 	%rd549, {%r379, %r378};
	xor.b64  	%rd550, %rd548, %rd549;
	xor.b64  	%rd551, %rd532, %rd486;
	xor.b64  	%rd552, %rd532, %rd509;
	and.b64  	%rd553, %rd552, %rd551;
	xor.b64  	%rd554, %rd553, %rd532;
	add.s64 	%rd555, %rd544, %rd554;
	add.s64 	%rd556, %rd555, %rd550;
	add.s64 	%rd557, %rd206, %rd26;
	add.s64 	%rd558, %rd557, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r380,%dummy}, %rd558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd558;
	}
	shf.r.wrap.b32 	%r382, %r381, %r380, 19;
	shf.r.wrap.b32 	%r383, %r380, %r381, 19;
	mov.b64 	%rd559, {%r383, %r382};
	shf.l.wrap.b32 	%r384, %r380, %r381, 3;
	shf.l.wrap.b32 	%r385, %r381, %r380, 3;
	mov.b64 	%rd560, {%r385, %r384};
	shr.u64 	%rd561, %rd558, 6;
	xor.b64  	%rd562, %rd559, %rd561;
	xor.b64  	%rd563, %rd562, %rd560;
	add.s64 	%rd564, %rd2, %rd563;
	add.s64 	%rd565, %rd564, %rd29;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r386,%dummy}, %rd565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r387}, %rd565;
	}
	shf.r.wrap.b32 	%r388, %r387, %r386, 19;
	shf.r.wrap.b32 	%r389, %r386, %r387, 19;
	mov.b64 	%rd566, {%r389, %r388};
	shf.l.wrap.b32 	%r390, %r386, %r387, 3;
	shf.l.wrap.b32 	%r391, %r387, %r386, 3;
	mov.b64 	%rd567, {%r391, %r390};
	shr.u64 	%rd568, %rd565, 6;
	xor.b64  	%rd569, %rd566, %rd568;
	xor.b64  	%rd570, %rd569, %rd567;
	add.s64 	%rd571, %rd3, %rd570;
	add.s64 	%rd572, %rd571, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r392,%dummy}, %rd572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd572;
	}
	shf.r.wrap.b32 	%r394, %r393, %r392, 19;
	shf.r.wrap.b32 	%r395, %r392, %r393, 19;
	mov.b64 	%rd573, {%r395, %r394};
	shf.l.wrap.b32 	%r396, %r392, %r393, 3;
	shf.l.wrap.b32 	%r397, %r393, %r392, 3;
	mov.b64 	%rd574, {%r397, %r396};
	shr.u64 	%rd575, %rd572, 6;
	xor.b64  	%rd576, %rd573, %rd575;
	xor.b64  	%rd577, %rd576, %rd574;
	add.s64 	%rd578, %rd2693, %rd577;
	add.s64 	%rd579, %rd578, %rd33;
	add.s64 	%rd580, %rd558, %rd35;
	add.s64 	%rd581, %rd580, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r398,%dummy}, %rd579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r399}, %rd579;
	}
	shf.r.wrap.b32 	%r400, %r399, %r398, 19;
	shf.r.wrap.b32 	%r401, %r398, %r399, 19;
	mov.b64 	%rd582, {%r401, %r400};
	shf.l.wrap.b32 	%r402, %r398, %r399, 3;
	shf.l.wrap.b32 	%r403, %r399, %r398, 3;
	mov.b64 	%rd583, {%r403, %r402};
	shr.u64 	%rd584, %rd579, 6;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	add.s64 	%rd587, %rd28, %rd586;
	add.s64 	%rd588, %rd587, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r404,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r405}, %rd581;
	}
	shf.r.wrap.b32 	%r406, %r405, %r404, 19;
	shf.r.wrap.b32 	%r407, %r404, %r405, 19;
	mov.b64 	%rd589, {%r407, %r406};
	shf.l.wrap.b32 	%r408, %r404, %r405, 3;
	shf.l.wrap.b32 	%r409, %r405, %r404, 3;
	mov.b64 	%rd590, {%r409, %r408};
	shr.u64 	%rd591, %rd581, 6;
	xor.b64  	%rd592, %rd589, %rd591;
	xor.b64  	%rd593, %rd592, %rd590;
	add.s64 	%rd594, %rd565, %rd593;
	add.s64 	%rd595, %rd594, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r410,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r411}, %rd588;
	}
	shf.r.wrap.b32 	%r412, %r411, %r410, 19;
	shf.r.wrap.b32 	%r413, %r410, %r411, 19;
	mov.b64 	%rd596, {%r413, %r412};
	shf.l.wrap.b32 	%r414, %r410, %r411, 3;
	shf.l.wrap.b32 	%r415, %r411, %r410, 3;
	mov.b64 	%rd597, {%r415, %r414};
	shr.u64 	%rd598, %rd588, 6;
	xor.b64  	%rd599, %rd596, %rd598;
	xor.b64  	%rd600, %rd599, %rd597;
	add.s64 	%rd601, %rd30, %rd600;
	add.s64 	%rd602, %rd601, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd595;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 19;
	shf.r.wrap.b32 	%r419, %r416, %r417, 19;
	mov.b64 	%rd603, {%r419, %r418};
	shf.l.wrap.b32 	%r420, %r416, %r417, 3;
	shf.l.wrap.b32 	%r421, %r417, %r416, 3;
	mov.b64 	%rd604, {%r421, %r420};
	shr.u64 	%rd605, %rd595, 6;
	xor.b64  	%rd606, %rd603, %rd605;
	xor.b64  	%rd607, %rd606, %rd604;
	add.s64 	%rd608, %rd572, %rd607;
	add.s64 	%rd609, %rd608, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r422,%dummy}, %rd602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r423}, %rd602;
	}
	shf.r.wrap.b32 	%r424, %r423, %r422, 19;
	shf.r.wrap.b32 	%r425, %r422, %r423, 19;
	mov.b64 	%rd610, {%r425, %r424};
	shf.l.wrap.b32 	%r426, %r422, %r423, 3;
	shf.l.wrap.b32 	%r427, %r423, %r422, 3;
	mov.b64 	%rd611, {%r427, %r426};
	shr.u64 	%rd612, %rd602, 6;
	xor.b64  	%rd613, %rd610, %rd612;
	xor.b64  	%rd614, %rd613, %rd611;
	add.s64 	%rd615, %rd32, %rd614;
	add.s64 	%rd616, %rd615, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r428,%dummy}, %rd609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd609;
	}
	shf.r.wrap.b32 	%r430, %r429, %r428, 19;
	shf.r.wrap.b32 	%r431, %r428, %r429, 19;
	mov.b64 	%rd617, {%r431, %r430};
	shf.l.wrap.b32 	%r432, %r428, %r429, 3;
	shf.l.wrap.b32 	%r433, %r429, %r428, 3;
	mov.b64 	%rd618, {%r433, %r432};
	shr.u64 	%rd619, %rd609, 6;
	xor.b64  	%rd620, %rd617, %rd619;
	xor.b64  	%rd621, %rd620, %rd618;
	add.s64 	%rd622, %rd579, %rd621;
	add.s64 	%rd623, %rd622, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r434,%dummy}, %rd616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r435}, %rd616;
	}
	shf.r.wrap.b32 	%r436, %r435, %r434, 19;
	shf.r.wrap.b32 	%r437, %r434, %r435, 19;
	mov.b64 	%rd624, {%r437, %r436};
	shf.l.wrap.b32 	%r438, %r434, %r435, 3;
	shf.l.wrap.b32 	%r439, %r435, %r434, 3;
	mov.b64 	%rd625, {%r439, %r438};
	shr.u64 	%rd626, %rd616, 6;
	xor.b64  	%rd627, %rd624, %rd626;
	xor.b64  	%rd628, %rd627, %rd625;
	add.s64 	%rd629, %rd581, %rd628;
	add.s64 	%rd630, %rd629, %rd36;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r440,%dummy}, %rd623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r441}, %rd623;
	}
	shf.r.wrap.b32 	%r442, %r441, %r440, 19;
	shf.r.wrap.b32 	%r443, %r440, %r441, 19;
	mov.b64 	%rd631, {%r443, %r442};
	shf.l.wrap.b32 	%r444, %r440, %r441, 3;
	shf.l.wrap.b32 	%r445, %r441, %r440, 3;
	mov.b64 	%rd632, {%r445, %r444};
	shr.u64 	%rd633, %rd623, 6;
	xor.b64  	%rd634, %rd631, %rd633;
	xor.b64  	%rd635, %rd634, %rd632;
	shf.r.wrap.b32 	%r446, %r381, %r380, 1;
	shf.r.wrap.b32 	%r447, %r380, %r381, 1;
	mov.b64 	%rd636, {%r447, %r446};
	shf.r.wrap.b32 	%r448, %r381, %r380, 8;
	shf.r.wrap.b32 	%r449, %r380, %r381, 8;
	mov.b64 	%rd637, {%r449, %r448};
	shr.u64 	%rd638, %rd558, 7;
	xor.b64  	%rd639, %rd636, %rd638;
	xor.b64  	%rd640, %rd639, %rd637;
	add.s64 	%rd641, %rd588, %rd6;
	add.s64 	%rd642, %rd641, %rd635;
	add.s64 	%rd643, %rd642, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r450,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r451}, %rd545;
	}
	shf.r.wrap.b32 	%r452, %r451, %r450, 14;
	shf.r.wrap.b32 	%r453, %r450, %r451, 14;
	mov.b64 	%rd644, {%r453, %r452};
	shf.r.wrap.b32 	%r454, %r451, %r450, 18;
	shf.r.wrap.b32 	%r455, %r450, %r451, 18;
	mov.b64 	%rd645, {%r455, %r454};
	xor.b64  	%rd646, %rd645, %rd644;
	shf.l.wrap.b32 	%r456, %r450, %r451, 23;
	shf.l.wrap.b32 	%r457, %r451, %r450, 23;
	mov.b64 	%rd647, {%r457, %r456};
	xor.b64  	%rd648, %rd646, %rd647;
	xor.b64  	%rd649, %rd498, %rd521;
	and.b64  	%rd650, %rd649, %rd545;
	xor.b64  	%rd651, %rd650, %rd498;
	add.s64 	%rd652, %rd651, %rd475;
	add.s64 	%rd653, %rd652, %rd558;
	add.s64 	%rd654, %rd653, %rd2694;
	add.s64 	%rd655, %rd654, %rd648;
	add.s64 	%rd656, %rd655, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r459}, %rd556;
	}
	shf.r.wrap.b32 	%r460, %r459, %r458, 28;
	shf.r.wrap.b32 	%r461, %r458, %r459, 28;
	mov.b64 	%rd657, {%r461, %r460};
	shf.l.wrap.b32 	%r462, %r458, %r459, 30;
	shf.l.wrap.b32 	%r463, %r459, %r458, 30;
	mov.b64 	%rd658, {%r463, %r462};
	xor.b64  	%rd659, %rd658, %rd657;
	shf.l.wrap.b32 	%r464, %r458, %r459, 25;
	shf.l.wrap.b32 	%r465, %r459, %r458, 25;
	mov.b64 	%rd660, {%r465, %r464};
	xor.b64  	%rd661, %rd659, %rd660;
	xor.b64  	%rd662, %rd556, %rd509;
	xor.b64  	%rd663, %rd556, %rd532;
	and.b64  	%rd664, %rd663, %rd662;
	xor.b64  	%rd665, %rd664, %rd556;
	add.s64 	%rd666, %rd655, %rd665;
	add.s64 	%rd667, %rd666, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r466,%dummy}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r467}, %rd656;
	}
	shf.r.wrap.b32 	%r468, %r467, %r466, 14;
	shf.r.wrap.b32 	%r469, %r466, %r467, 14;
	mov.b64 	%rd668, {%r469, %r468};
	shf.r.wrap.b32 	%r470, %r467, %r466, 18;
	shf.r.wrap.b32 	%r471, %r466, %r467, 18;
	mov.b64 	%rd669, {%r471, %r470};
	xor.b64  	%rd670, %rd669, %rd668;
	shf.l.wrap.b32 	%r472, %r466, %r467, 23;
	shf.l.wrap.b32 	%r473, %r467, %r466, 23;
	mov.b64 	%rd671, {%r473, %r472};
	xor.b64  	%rd672, %rd670, %rd671;
	xor.b64  	%rd673, %rd521, %rd545;
	and.b64  	%rd674, %rd656, %rd673;
	xor.b64  	%rd675, %rd674, %rd521;
	add.s64 	%rd676, %rd28, %rd498;
	add.s64 	%rd677, %rd676, %rd2695;
	add.s64 	%rd678, %rd677, %rd675;
	add.s64 	%rd679, %rd678, %rd672;
	add.s64 	%rd680, %rd679, %rd509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r474,%dummy}, %rd667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r475}, %rd667;
	}
	shf.r.wrap.b32 	%r476, %r475, %r474, 28;
	shf.r.wrap.b32 	%r477, %r474, %r475, 28;
	mov.b64 	%rd681, {%r477, %r476};
	shf.l.wrap.b32 	%r478, %r474, %r475, 30;
	shf.l.wrap.b32 	%r479, %r475, %r474, 30;
	mov.b64 	%rd682, {%r479, %r478};
	xor.b64  	%rd683, %rd682, %rd681;
	shf.l.wrap.b32 	%r480, %r474, %r475, 25;
	shf.l.wrap.b32 	%r481, %r475, %r474, 25;
	mov.b64 	%rd684, {%r481, %r480};
	xor.b64  	%rd685, %rd683, %rd684;
	xor.b64  	%rd686, %rd667, %rd532;
	xor.b64  	%rd687, %rd667, %rd556;
	and.b64  	%rd688, %rd687, %rd686;
	xor.b64  	%rd689, %rd688, %rd667;
	add.s64 	%rd690, %rd679, %rd689;
	add.s64 	%rd691, %rd690, %rd685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r482,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r483}, %rd680;
	}
	shf.r.wrap.b32 	%r484, %r483, %r482, 14;
	shf.r.wrap.b32 	%r485, %r482, %r483, 14;
	mov.b64 	%rd692, {%r485, %r484};
	shf.r.wrap.b32 	%r486, %r483, %r482, 18;
	shf.r.wrap.b32 	%r487, %r482, %r483, 18;
	mov.b64 	%rd693, {%r487, %r486};
	xor.b64  	%rd694, %rd693, %rd692;
	shf.l.wrap.b32 	%r488, %r482, %r483, 23;
	shf.l.wrap.b32 	%r489, %r483, %r482, 23;
	mov.b64 	%rd695, {%r489, %r488};
	xor.b64  	%rd696, %rd694, %rd695;
	xor.b64  	%rd697, %rd656, %rd545;
	and.b64  	%rd698, %rd680, %rd697;
	xor.b64  	%rd699, %rd698, %rd545;
	add.s64 	%rd700, %rd565, %rd521;
	add.s64 	%rd701, %rd700, %rd2696;
	add.s64 	%rd702, %rd701, %rd699;
	add.s64 	%rd703, %rd702, %rd696;
	add.s64 	%rd704, %rd703, %rd532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r490,%dummy}, %rd691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r491}, %rd691;
	}
	shf.r.wrap.b32 	%r492, %r491, %r490, 28;
	shf.r.wrap.b32 	%r493, %r490, %r491, 28;
	mov.b64 	%rd705, {%r493, %r492};
	shf.l.wrap.b32 	%r494, %r490, %r491, 30;
	shf.l.wrap.b32 	%r495, %r491, %r490, 30;
	mov.b64 	%rd706, {%r495, %r494};
	xor.b64  	%rd707, %rd706, %rd705;
	shf.l.wrap.b32 	%r496, %r490, %r491, 25;
	shf.l.wrap.b32 	%r497, %r491, %r490, 25;
	mov.b64 	%rd708, {%r497, %r496};
	xor.b64  	%rd709, %rd707, %rd708;
	xor.b64  	%rd710, %rd691, %rd556;
	xor.b64  	%rd711, %rd691, %rd667;
	and.b64  	%rd712, %rd711, %rd710;
	xor.b64  	%rd713, %rd712, %rd691;
	add.s64 	%rd714, %rd703, %rd713;
	add.s64 	%rd715, %rd714, %rd709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r498,%dummy}, %rd704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r499}, %rd704;
	}
	shf.r.wrap.b32 	%r500, %r499, %r498, 14;
	shf.r.wrap.b32 	%r501, %r498, %r499, 14;
	mov.b64 	%rd716, {%r501, %r500};
	shf.r.wrap.b32 	%r502, %r499, %r498, 18;
	shf.r.wrap.b32 	%r503, %r498, %r499, 18;
	mov.b64 	%rd717, {%r503, %r502};
	xor.b64  	%rd718, %rd717, %rd716;
	shf.l.wrap.b32 	%r504, %r498, %r499, 23;
	shf.l.wrap.b32 	%r505, %r499, %r498, 23;
	mov.b64 	%rd719, {%r505, %r504};
	xor.b64  	%rd720, %rd718, %rd719;
	xor.b64  	%rd721, %rd680, %rd656;
	and.b64  	%rd722, %rd704, %rd721;
	xor.b64  	%rd723, %rd722, %rd656;
	add.s64 	%rd724, %rd30, %rd545;
	add.s64 	%rd725, %rd724, %rd2697;
	add.s64 	%rd726, %rd725, %rd723;
	add.s64 	%rd727, %rd726, %rd720;
	add.s64 	%rd728, %rd727, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd715;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 28;
	shf.r.wrap.b32 	%r509, %r506, %r507, 28;
	mov.b64 	%rd729, {%r509, %r508};
	shf.l.wrap.b32 	%r510, %r506, %r507, 30;
	shf.l.wrap.b32 	%r511, %r507, %r506, 30;
	mov.b64 	%rd730, {%r511, %r510};
	xor.b64  	%rd731, %rd730, %rd729;
	shf.l.wrap.b32 	%r512, %r506, %r507, 25;
	shf.l.wrap.b32 	%r513, %r507, %r506, 25;
	mov.b64 	%rd732, {%r513, %r512};
	xor.b64  	%rd733, %rd731, %rd732;
	xor.b64  	%rd734, %rd715, %rd667;
	xor.b64  	%rd735, %rd715, %rd691;
	and.b64  	%rd736, %rd735, %rd734;
	xor.b64  	%rd737, %rd736, %rd715;
	add.s64 	%rd738, %rd727, %rd737;
	add.s64 	%rd739, %rd738, %rd733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r514,%dummy}, %rd728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r515}, %rd728;
	}
	shf.r.wrap.b32 	%r516, %r515, %r514, 14;
	shf.r.wrap.b32 	%r517, %r514, %r515, 14;
	mov.b64 	%rd740, {%r517, %r516};
	shf.r.wrap.b32 	%r518, %r515, %r514, 18;
	shf.r.wrap.b32 	%r519, %r514, %r515, 18;
	mov.b64 	%rd741, {%r519, %r518};
	xor.b64  	%rd742, %rd741, %rd740;
	shf.l.wrap.b32 	%r520, %r514, %r515, 23;
	shf.l.wrap.b32 	%r521, %r515, %r514, 23;
	mov.b64 	%rd743, {%r521, %r520};
	xor.b64  	%rd744, %rd742, %rd743;
	xor.b64  	%rd745, %rd704, %rd680;
	and.b64  	%rd746, %rd728, %rd745;
	xor.b64  	%rd747, %rd746, %rd680;
	add.s64 	%rd748, %rd656, %rd572;
	add.s64 	%rd749, %rd748, %rd2698;
	add.s64 	%rd750, %rd749, %rd747;
	add.s64 	%rd751, %rd750, %rd744;
	add.s64 	%rd752, %rd751, %rd667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r522,%dummy}, %rd739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r523}, %rd739;
	}
	shf.r.wrap.b32 	%r524, %r523, %r522, 28;
	shf.r.wrap.b32 	%r525, %r522, %r523, 28;
	mov.b64 	%rd753, {%r525, %r524};
	shf.l.wrap.b32 	%r526, %r522, %r523, 30;
	shf.l.wrap.b32 	%r527, %r523, %r522, 30;
	mov.b64 	%rd754, {%r527, %r526};
	xor.b64  	%rd755, %rd754, %rd753;
	shf.l.wrap.b32 	%r528, %r522, %r523, 25;
	shf.l.wrap.b32 	%r529, %r523, %r522, 25;
	mov.b64 	%rd756, {%r529, %r528};
	xor.b64  	%rd757, %rd755, %rd756;
	xor.b64  	%rd758, %rd739, %rd691;
	xor.b64  	%rd759, %rd739, %rd715;
	and.b64  	%rd760, %rd759, %rd758;
	xor.b64  	%rd761, %rd760, %rd739;
	add.s64 	%rd762, %rd751, %rd761;
	add.s64 	%rd763, %rd762, %rd757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r530,%dummy}, %rd752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r531}, %rd752;
	}
	shf.r.wrap.b32 	%r532, %r531, %r530, 14;
	shf.r.wrap.b32 	%r533, %r530, %r531, 14;
	mov.b64 	%rd764, {%r533, %r532};
	shf.r.wrap.b32 	%r534, %r531, %r530, 18;
	shf.r.wrap.b32 	%r535, %r530, %r531, 18;
	mov.b64 	%rd765, {%r535, %r534};
	xor.b64  	%rd766, %rd765, %rd764;
	shf.l.wrap.b32 	%r536, %r530, %r531, 23;
	shf.l.wrap.b32 	%r537, %r531, %r530, 23;
	mov.b64 	%rd767, {%r537, %r536};
	xor.b64  	%rd768, %rd766, %rd767;
	xor.b64  	%rd769, %rd728, %rd704;
	and.b64  	%rd770, %rd752, %rd769;
	xor.b64  	%rd771, %rd770, %rd704;
	add.s64 	%rd772, %rd680, %rd32;
	add.s64 	%rd773, %rd772, %rd2699;
	add.s64 	%rd774, %rd773, %rd771;
	add.s64 	%rd775, %rd774, %rd768;
	add.s64 	%rd776, %rd775, %rd691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r539}, %rd763;
	}
	shf.r.wrap.b32 	%r540, %r539, %r538, 28;
	shf.r.wrap.b32 	%r541, %r538, %r539, 28;
	mov.b64 	%rd777, {%r541, %r540};
	shf.l.wrap.b32 	%r542, %r538, %r539, 30;
	shf.l.wrap.b32 	%r543, %r539, %r538, 30;
	mov.b64 	%rd778, {%r543, %r542};
	xor.b64  	%rd779, %rd778, %rd777;
	shf.l.wrap.b32 	%r544, %r538, %r539, 25;
	shf.l.wrap.b32 	%r545, %r539, %r538, 25;
	mov.b64 	%rd780, {%r545, %r544};
	xor.b64  	%rd781, %rd779, %rd780;
	xor.b64  	%rd782, %rd763, %rd715;
	xor.b64  	%rd783, %rd763, %rd739;
	and.b64  	%rd784, %rd783, %rd782;
	xor.b64  	%rd785, %rd784, %rd763;
	add.s64 	%rd786, %rd775, %rd785;
	add.s64 	%rd787, %rd786, %rd781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd776;
	}
	shf.r.wrap.b32 	%r548, %r547, %r546, 14;
	shf.r.wrap.b32 	%r549, %r546, %r547, 14;
	mov.b64 	%rd788, {%r549, %r548};
	shf.r.wrap.b32 	%r550, %r547, %r546, 18;
	shf.r.wrap.b32 	%r551, %r546, %r547, 18;
	mov.b64 	%rd789, {%r551, %r550};
	xor.b64  	%rd790, %rd789, %rd788;
	shf.l.wrap.b32 	%r552, %r546, %r547, 23;
	shf.l.wrap.b32 	%r553, %r547, %r546, 23;
	mov.b64 	%rd791, {%r553, %r552};
	xor.b64  	%rd792, %rd790, %rd791;
	xor.b64  	%rd793, %rd752, %rd728;
	and.b64  	%rd794, %rd776, %rd793;
	xor.b64  	%rd795, %rd794, %rd728;
	add.s64 	%rd796, %rd704, %rd579;
	add.s64 	%rd797, %rd796, %rd2700;
	add.s64 	%rd798, %rd797, %rd795;
	add.s64 	%rd799, %rd798, %rd792;
	add.s64 	%rd800, %rd799, %rd715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r555}, %rd787;
	}
	shf.r.wrap.b32 	%r556, %r555, %r554, 28;
	shf.r.wrap.b32 	%r557, %r554, %r555, 28;
	mov.b64 	%rd801, {%r557, %r556};
	shf.l.wrap.b32 	%r558, %r554, %r555, 30;
	shf.l.wrap.b32 	%r559, %r555, %r554, 30;
	mov.b64 	%rd802, {%r559, %r558};
	xor.b64  	%rd803, %rd802, %rd801;
	shf.l.wrap.b32 	%r560, %r554, %r555, 25;
	shf.l.wrap.b32 	%r561, %r555, %r554, 25;
	mov.b64 	%rd804, {%r561, %r560};
	xor.b64  	%rd805, %rd803, %rd804;
	xor.b64  	%rd806, %rd787, %rd739;
	xor.b64  	%rd807, %rd787, %rd763;
	and.b64  	%rd808, %rd807, %rd806;
	xor.b64  	%rd809, %rd808, %rd787;
	add.s64 	%rd810, %rd799, %rd809;
	add.s64 	%rd811, %rd810, %rd805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd800;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 14;
	shf.r.wrap.b32 	%r565, %r562, %r563, 14;
	mov.b64 	%rd812, {%r565, %r564};
	shf.r.wrap.b32 	%r566, %r563, %r562, 18;
	shf.r.wrap.b32 	%r567, %r562, %r563, 18;
	mov.b64 	%rd813, {%r567, %r566};
	xor.b64  	%rd814, %rd813, %rd812;
	shf.l.wrap.b32 	%r568, %r562, %r563, 23;
	shf.l.wrap.b32 	%r569, %r563, %r562, 23;
	mov.b64 	%rd815, {%r569, %r568};
	xor.b64  	%rd816, %rd814, %rd815;
	xor.b64  	%rd817, %rd776, %rd752;
	and.b64  	%rd818, %rd800, %rd817;
	xor.b64  	%rd819, %rd818, %rd752;
	add.s64 	%rd820, %rd728, %rd581;
	add.s64 	%rd821, %rd820, %rd2701;
	add.s64 	%rd822, %rd821, %rd819;
	add.s64 	%rd823, %rd822, %rd816;
	add.s64 	%rd824, %rd823, %rd739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd811;
	}
	shf.r.wrap.b32 	%r572, %r571, %r570, 28;
	shf.r.wrap.b32 	%r573, %r570, %r571, 28;
	mov.b64 	%rd825, {%r573, %r572};
	shf.l.wrap.b32 	%r574, %r570, %r571, 30;
	shf.l.wrap.b32 	%r575, %r571, %r570, 30;
	mov.b64 	%rd826, {%r575, %r574};
	xor.b64  	%rd827, %rd826, %rd825;
	shf.l.wrap.b32 	%r576, %r570, %r571, 25;
	shf.l.wrap.b32 	%r577, %r571, %r570, 25;
	mov.b64 	%rd828, {%r577, %r576};
	xor.b64  	%rd829, %rd827, %rd828;
	xor.b64  	%rd830, %rd811, %rd763;
	xor.b64  	%rd831, %rd811, %rd787;
	and.b64  	%rd832, %rd831, %rd830;
	xor.b64  	%rd833, %rd832, %rd811;
	add.s64 	%rd834, %rd823, %rd833;
	add.s64 	%rd835, %rd834, %rd829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r579}, %rd824;
	}
	shf.r.wrap.b32 	%r580, %r579, %r578, 14;
	shf.r.wrap.b32 	%r581, %r578, %r579, 14;
	mov.b64 	%rd836, {%r581, %r580};
	shf.r.wrap.b32 	%r582, %r579, %r578, 18;
	shf.r.wrap.b32 	%r583, %r578, %r579, 18;
	mov.b64 	%rd837, {%r583, %r582};
	xor.b64  	%rd838, %rd837, %rd836;
	shf.l.wrap.b32 	%r584, %r578, %r579, 23;
	shf.l.wrap.b32 	%r585, %r579, %r578, 23;
	mov.b64 	%rd839, {%r585, %r584};
	xor.b64  	%rd840, %rd838, %rd839;
	xor.b64  	%rd841, %rd800, %rd776;
	and.b64  	%rd842, %rd824, %rd841;
	xor.b64  	%rd843, %rd842, %rd776;
	add.s64 	%rd844, %rd752, %rd588;
	add.s64 	%rd845, %rd844, %rd2702;
	add.s64 	%rd846, %rd845, %rd843;
	add.s64 	%rd847, %rd846, %rd840;
	add.s64 	%rd848, %rd847, %rd763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r587}, %rd835;
	}
	shf.r.wrap.b32 	%r588, %r587, %r586, 28;
	shf.r.wrap.b32 	%r589, %r586, %r587, 28;
	mov.b64 	%rd849, {%r589, %r588};
	shf.l.wrap.b32 	%r590, %r586, %r587, 30;
	shf.l.wrap.b32 	%r591, %r587, %r586, 30;
	mov.b64 	%rd850, {%r591, %r590};
	xor.b64  	%rd851, %rd850, %rd849;
	shf.l.wrap.b32 	%r592, %r586, %r587, 25;
	shf.l.wrap.b32 	%r593, %r587, %r586, 25;
	mov.b64 	%rd852, {%r593, %r592};
	xor.b64  	%rd853, %rd851, %rd852;
	xor.b64  	%rd854, %rd835, %rd787;
	xor.b64  	%rd855, %rd835, %rd811;
	and.b64  	%rd856, %rd855, %rd854;
	xor.b64  	%rd857, %rd856, %rd835;
	add.s64 	%rd858, %rd847, %rd857;
	add.s64 	%rd859, %rd858, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r594,%dummy}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r595}, %rd848;
	}
	shf.r.wrap.b32 	%r596, %r595, %r594, 14;
	shf.r.wrap.b32 	%r597, %r594, %r595, 14;
	mov.b64 	%rd860, {%r597, %r596};
	shf.r.wrap.b32 	%r598, %r595, %r594, 18;
	shf.r.wrap.b32 	%r599, %r594, %r595, 18;
	mov.b64 	%rd861, {%r599, %r598};
	xor.b64  	%rd862, %rd861, %rd860;
	shf.l.wrap.b32 	%r600, %r594, %r595, 23;
	shf.l.wrap.b32 	%r601, %r595, %r594, 23;
	mov.b64 	%rd863, {%r601, %r600};
	xor.b64  	%rd864, %rd862, %rd863;
	xor.b64  	%rd865, %rd824, %rd800;
	and.b64  	%rd866, %rd848, %rd865;
	xor.b64  	%rd867, %rd866, %rd800;
	add.s64 	%rd868, %rd776, %rd595;
	add.s64 	%rd869, %rd868, %rd2703;
	add.s64 	%rd870, %rd869, %rd867;
	add.s64 	%rd871, %rd870, %rd864;
	add.s64 	%rd872, %rd871, %rd787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r603}, %rd859;
	}
	shf.r.wrap.b32 	%r604, %r603, %r602, 28;
	shf.r.wrap.b32 	%r605, %r602, %r603, 28;
	mov.b64 	%rd873, {%r605, %r604};
	shf.l.wrap.b32 	%r606, %r602, %r603, 30;
	shf.l.wrap.b32 	%r607, %r603, %r602, 30;
	mov.b64 	%rd874, {%r607, %r606};
	xor.b64  	%rd875, %rd874, %rd873;
	shf.l.wrap.b32 	%r608, %r602, %r603, 25;
	shf.l.wrap.b32 	%r609, %r603, %r602, 25;
	mov.b64 	%rd876, {%r609, %r608};
	xor.b64  	%rd877, %rd875, %rd876;
	xor.b64  	%rd878, %rd859, %rd811;
	xor.b64  	%rd879, %rd859, %rd835;
	and.b64  	%rd880, %rd879, %rd878;
	xor.b64  	%rd881, %rd880, %rd859;
	add.s64 	%rd882, %rd871, %rd881;
	add.s64 	%rd883, %rd882, %rd877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r611}, %rd872;
	}
	shf.r.wrap.b32 	%r612, %r611, %r610, 14;
	shf.r.wrap.b32 	%r613, %r610, %r611, 14;
	mov.b64 	%rd884, {%r613, %r612};
	shf.r.wrap.b32 	%r614, %r611, %r610, 18;
	shf.r.wrap.b32 	%r615, %r610, %r611, 18;
	mov.b64 	%rd885, {%r615, %r614};
	xor.b64  	%rd886, %rd885, %rd884;
	shf.l.wrap.b32 	%r616, %r610, %r611, 23;
	shf.l.wrap.b32 	%r617, %r611, %r610, 23;
	mov.b64 	%rd887, {%r617, %r616};
	xor.b64  	%rd888, %rd886, %rd887;
	xor.b64  	%rd889, %rd848, %rd824;
	and.b64  	%rd890, %rd872, %rd889;
	xor.b64  	%rd891, %rd890, %rd824;
	add.s64 	%rd892, %rd800, %rd602;
	add.s64 	%rd893, %rd892, %rd2704;
	add.s64 	%rd894, %rd893, %rd891;
	add.s64 	%rd895, %rd894, %rd888;
	add.s64 	%rd896, %rd895, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd883;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 28;
	shf.r.wrap.b32 	%r621, %r618, %r619, 28;
	mov.b64 	%rd897, {%r621, %r620};
	shf.l.wrap.b32 	%r622, %r618, %r619, 30;
	shf.l.wrap.b32 	%r623, %r619, %r618, 30;
	mov.b64 	%rd898, {%r623, %r622};
	xor.b64  	%rd899, %rd898, %rd897;
	shf.l.wrap.b32 	%r624, %r618, %r619, 25;
	shf.l.wrap.b32 	%r625, %r619, %r618, 25;
	mov.b64 	%rd900, {%r625, %r624};
	xor.b64  	%rd901, %rd899, %rd900;
	xor.b64  	%rd902, %rd883, %rd835;
	xor.b64  	%rd903, %rd883, %rd859;
	and.b64  	%rd904, %rd903, %rd902;
	xor.b64  	%rd905, %rd904, %rd883;
	add.s64 	%rd906, %rd895, %rd905;
	add.s64 	%rd907, %rd906, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd896;
	}
	shf.r.wrap.b32 	%r628, %r627, %r626, 14;
	shf.r.wrap.b32 	%r629, %r626, %r627, 14;
	mov.b64 	%rd908, {%r629, %r628};
	shf.r.wrap.b32 	%r630, %r627, %r626, 18;
	shf.r.wrap.b32 	%r631, %r626, %r627, 18;
	mov.b64 	%rd909, {%r631, %r630};
	xor.b64  	%rd910, %rd909, %rd908;
	shf.l.wrap.b32 	%r632, %r626, %r627, 23;
	shf.l.wrap.b32 	%r633, %r627, %r626, 23;
	mov.b64 	%rd911, {%r633, %r632};
	xor.b64  	%rd912, %rd910, %rd911;
	xor.b64  	%rd913, %rd872, %rd848;
	and.b64  	%rd914, %rd896, %rd913;
	xor.b64  	%rd915, %rd914, %rd848;
	add.s64 	%rd916, %rd824, %rd609;
	add.s64 	%rd917, %rd916, %rd2705;
	add.s64 	%rd918, %rd917, %rd915;
	add.s64 	%rd919, %rd918, %rd912;
	add.s64 	%rd920, %rd919, %rd835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r635}, %rd907;
	}
	shf.r.wrap.b32 	%r636, %r635, %r634, 28;
	shf.r.wrap.b32 	%r637, %r634, %r635, 28;
	mov.b64 	%rd921, {%r637, %r636};
	shf.l.wrap.b32 	%r638, %r634, %r635, 30;
	shf.l.wrap.b32 	%r639, %r635, %r634, 30;
	mov.b64 	%rd922, {%r639, %r638};
	xor.b64  	%rd923, %rd922, %rd921;
	shf.l.wrap.b32 	%r640, %r634, %r635, 25;
	shf.l.wrap.b32 	%r641, %r635, %r634, 25;
	mov.b64 	%rd924, {%r641, %r640};
	xor.b64  	%rd925, %rd923, %rd924;
	xor.b64  	%rd926, %rd907, %rd859;
	xor.b64  	%rd927, %rd907, %rd883;
	and.b64  	%rd928, %rd927, %rd926;
	xor.b64  	%rd929, %rd928, %rd907;
	add.s64 	%rd930, %rd919, %rd929;
	add.s64 	%rd931, %rd930, %rd925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r642,%dummy}, %rd920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r643}, %rd920;
	}
	shf.r.wrap.b32 	%r644, %r643, %r642, 14;
	shf.r.wrap.b32 	%r645, %r642, %r643, 14;
	mov.b64 	%rd932, {%r645, %r644};
	shf.r.wrap.b32 	%r646, %r643, %r642, 18;
	shf.r.wrap.b32 	%r647, %r642, %r643, 18;
	mov.b64 	%rd933, {%r647, %r646};
	xor.b64  	%rd934, %rd933, %rd932;
	shf.l.wrap.b32 	%r648, %r642, %r643, 23;
	shf.l.wrap.b32 	%r649, %r643, %r642, 23;
	mov.b64 	%rd935, {%r649, %r648};
	xor.b64  	%rd936, %rd934, %rd935;
	xor.b64  	%rd937, %rd896, %rd872;
	and.b64  	%rd938, %rd920, %rd937;
	xor.b64  	%rd939, %rd938, %rd872;
	add.s64 	%rd940, %rd848, %rd616;
	add.s64 	%rd941, %rd940, %rd2706;
	add.s64 	%rd942, %rd941, %rd939;
	add.s64 	%rd943, %rd942, %rd936;
	add.s64 	%rd944, %rd943, %rd859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r650,%dummy}, %rd931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r651}, %rd931;
	}
	shf.r.wrap.b32 	%r652, %r651, %r650, 28;
	shf.r.wrap.b32 	%r653, %r650, %r651, 28;
	mov.b64 	%rd945, {%r653, %r652};
	shf.l.wrap.b32 	%r654, %r650, %r651, 30;
	shf.l.wrap.b32 	%r655, %r651, %r650, 30;
	mov.b64 	%rd946, {%r655, %r654};
	xor.b64  	%rd947, %rd946, %rd945;
	shf.l.wrap.b32 	%r656, %r650, %r651, 25;
	shf.l.wrap.b32 	%r657, %r651, %r650, 25;
	mov.b64 	%rd948, {%r657, %r656};
	xor.b64  	%rd949, %rd947, %rd948;
	xor.b64  	%rd950, %rd931, %rd883;
	xor.b64  	%rd951, %rd931, %rd907;
	and.b64  	%rd952, %rd951, %rd950;
	xor.b64  	%rd953, %rd952, %rd931;
	add.s64 	%rd954, %rd943, %rd953;
	add.s64 	%rd955, %rd954, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r658,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r659}, %rd944;
	}
	shf.r.wrap.b32 	%r660, %r659, %r658, 14;
	shf.r.wrap.b32 	%r661, %r658, %r659, 14;
	mov.b64 	%rd956, {%r661, %r660};
	shf.r.wrap.b32 	%r662, %r659, %r658, 18;
	shf.r.wrap.b32 	%r663, %r658, %r659, 18;
	mov.b64 	%rd957, {%r663, %r662};
	xor.b64  	%rd958, %rd957, %rd956;
	shf.l.wrap.b32 	%r664, %r658, %r659, 23;
	shf.l.wrap.b32 	%r665, %r659, %r658, 23;
	mov.b64 	%rd959, {%r665, %r664};
	xor.b64  	%rd960, %rd958, %rd959;
	xor.b64  	%rd961, %rd920, %rd896;
	and.b64  	%rd962, %rd944, %rd961;
	xor.b64  	%rd963, %rd962, %rd896;
	add.s64 	%rd964, %rd872, %rd623;
	add.s64 	%rd965, %rd964, %rd2707;
	add.s64 	%rd966, %rd965, %rd963;
	add.s64 	%rd967, %rd966, %rd960;
	add.s64 	%rd968, %rd967, %rd883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r667}, %rd955;
	}
	shf.r.wrap.b32 	%r668, %r667, %r666, 28;
	shf.r.wrap.b32 	%r669, %r666, %r667, 28;
	mov.b64 	%rd969, {%r669, %r668};
	shf.l.wrap.b32 	%r670, %r666, %r667, 30;
	shf.l.wrap.b32 	%r671, %r667, %r666, 30;
	mov.b64 	%rd970, {%r671, %r670};
	xor.b64  	%rd971, %rd970, %rd969;
	shf.l.wrap.b32 	%r672, %r666, %r667, 25;
	shf.l.wrap.b32 	%r673, %r667, %r666, 25;
	mov.b64 	%rd972, {%r673, %r672};
	xor.b64  	%rd973, %rd971, %rd972;
	xor.b64  	%rd974, %rd955, %rd907;
	xor.b64  	%rd975, %rd955, %rd931;
	and.b64  	%rd976, %rd975, %rd974;
	xor.b64  	%rd977, %rd976, %rd955;
	add.s64 	%rd978, %rd967, %rd977;
	add.s64 	%rd979, %rd978, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd968;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 14;
	shf.r.wrap.b32 	%r677, %r674, %r675, 14;
	mov.b64 	%rd980, {%r677, %r676};
	shf.r.wrap.b32 	%r678, %r675, %r674, 18;
	shf.r.wrap.b32 	%r679, %r674, %r675, 18;
	mov.b64 	%rd981, {%r679, %r678};
	xor.b64  	%rd982, %rd981, %rd980;
	shf.l.wrap.b32 	%r680, %r674, %r675, 23;
	shf.l.wrap.b32 	%r681, %r675, %r674, 23;
	mov.b64 	%rd983, {%r681, %r680};
	xor.b64  	%rd984, %rd982, %rd983;
	xor.b64  	%rd985, %rd944, %rd920;
	and.b64  	%rd986, %rd968, %rd985;
	xor.b64  	%rd987, %rd986, %rd920;
	add.s64 	%rd988, %rd896, %rd630;
	add.s64 	%rd989, %rd988, %rd2708;
	add.s64 	%rd990, %rd989, %rd987;
	add.s64 	%rd991, %rd990, %rd984;
	add.s64 	%rd992, %rd991, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd979;
	}
	shf.r.wrap.b32 	%r684, %r683, %r682, 28;
	shf.r.wrap.b32 	%r685, %r682, %r683, 28;
	mov.b64 	%rd993, {%r685, %r684};
	shf.l.wrap.b32 	%r686, %r682, %r683, 30;
	shf.l.wrap.b32 	%r687, %r683, %r682, 30;
	mov.b64 	%rd994, {%r687, %r686};
	xor.b64  	%rd995, %rd994, %rd993;
	shf.l.wrap.b32 	%r688, %r682, %r683, 25;
	shf.l.wrap.b32 	%r689, %r683, %r682, 25;
	mov.b64 	%rd996, {%r689, %r688};
	xor.b64  	%rd997, %rd995, %rd996;
	xor.b64  	%rd998, %rd979, %rd931;
	xor.b64  	%rd999, %rd979, %rd955;
	and.b64  	%rd1000, %rd999, %rd998;
	xor.b64  	%rd1001, %rd1000, %rd979;
	add.s64 	%rd1002, %rd991, %rd1001;
	add.s64 	%rd1003, %rd1002, %rd997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd992;
	}
	shf.r.wrap.b32 	%r692, %r691, %r690, 14;
	shf.r.wrap.b32 	%r693, %r690, %r691, 14;
	mov.b64 	%rd1004, {%r693, %r692};
	shf.r.wrap.b32 	%r694, %r691, %r690, 18;
	shf.r.wrap.b32 	%r695, %r690, %r691, 18;
	mov.b64 	%rd1005, {%r695, %r694};
	xor.b64  	%rd1006, %rd1005, %rd1004;
	shf.l.wrap.b32 	%r696, %r690, %r691, 23;
	shf.l.wrap.b32 	%r697, %r691, %r690, 23;
	mov.b64 	%rd1007, {%r697, %r696};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	xor.b64  	%rd1009, %rd968, %rd944;
	and.b64  	%rd1010, %rd992, %rd1009;
	xor.b64  	%rd1011, %rd1010, %rd944;
	add.s64 	%rd1012, %rd920, %rd643;
	add.s64 	%rd1013, %rd1012, %rd2709;
	add.s64 	%rd1014, %rd1013, %rd1011;
	add.s64 	%rd1015, %rd1014, %rd1008;
	add.s64 	%rd1016, %rd1015, %rd931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd1003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r699}, %rd1003;
	}
	shf.r.wrap.b32 	%r700, %r699, %r698, 28;
	shf.r.wrap.b32 	%r701, %r698, %r699, 28;
	mov.b64 	%rd1017, {%r701, %r700};
	shf.l.wrap.b32 	%r702, %r698, %r699, 30;
	shf.l.wrap.b32 	%r703, %r699, %r698, 30;
	mov.b64 	%rd1018, {%r703, %r702};
	xor.b64  	%rd1019, %rd1018, %rd1017;
	shf.l.wrap.b32 	%r704, %r698, %r699, 25;
	shf.l.wrap.b32 	%r705, %r699, %r698, 25;
	mov.b64 	%rd1020, {%r705, %r704};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	xor.b64  	%rd1022, %rd1003, %rd955;
	xor.b64  	%rd1023, %rd1003, %rd979;
	and.b64  	%rd1024, %rd1023, %rd1022;
	xor.b64  	%rd1025, %rd1024, %rd1003;
	add.s64 	%rd1026, %rd1015, %rd1025;
	add.s64 	%rd1027, %rd1026, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r706,%dummy}, %rd630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r707}, %rd630;
	}
	shf.r.wrap.b32 	%r708, %r707, %r706, 19;
	shf.r.wrap.b32 	%r709, %r706, %r707, 19;
	mov.b64 	%rd1028, {%r709, %r708};
	shf.l.wrap.b32 	%r710, %r706, %r707, 3;
	shf.l.wrap.b32 	%r711, %r707, %r706, 3;
	mov.b64 	%rd1029, {%r711, %r710};
	shr.u64 	%rd1030, %rd630, 6;
	xor.b64  	%rd1031, %rd1028, %rd1030;
	xor.b64  	%rd1032, %rd1031, %rd1029;
	add.s64 	%rd1033, %rd558, %rd595;
	add.s64 	%rd1034, %rd1033, %rd1032;
	add.s64 	%rd1035, %rd1034, %rd53;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r712,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r713}, %rd643;
	}
	shf.r.wrap.b32 	%r714, %r713, %r712, 19;
	shf.r.wrap.b32 	%r715, %r712, %r713, 19;
	mov.b64 	%rd1036, {%r715, %r714};
	shf.l.wrap.b32 	%r716, %r712, %r713, 3;
	shf.l.wrap.b32 	%r717, %r713, %r712, 3;
	mov.b64 	%rd1037, {%r717, %r716};
	shr.u64 	%rd1038, %rd643, 6;
	xor.b64  	%rd1039, %rd1036, %rd1038;
	xor.b64  	%rd1040, %rd1039, %rd1037;
	shf.r.wrap.b32 	%r718, %r387, %r386, 1;
	shf.r.wrap.b32 	%r719, %r386, %r387, 1;
	mov.b64 	%rd1041, {%r719, %r718};
	shf.r.wrap.b32 	%r720, %r387, %r386, 8;
	shf.r.wrap.b32 	%r721, %r386, %r387, 8;
	mov.b64 	%rd1042, {%r721, %r720};
	shr.u64 	%rd1043, %rd565, 7;
	xor.b64  	%rd1044, %rd1041, %rd1043;
	xor.b64  	%rd1045, %rd1044, %rd1042;
	add.s64 	%rd1046, %rd28, %rd602;
	add.s64 	%rd1047, %rd1046, %rd1040;
	add.s64 	%rd1048, %rd1047, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r722,%dummy}, %rd1035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r723}, %rd1035;
	}
	shf.r.wrap.b32 	%r724, %r723, %r722, 19;
	shf.r.wrap.b32 	%r725, %r722, %r723, 19;
	mov.b64 	%rd1049, {%r725, %r724};
	shf.l.wrap.b32 	%r726, %r722, %r723, 3;
	shf.l.wrap.b32 	%r727, %r723, %r722, 3;
	mov.b64 	%rd1050, {%r727, %r726};
	shr.u64 	%rd1051, %rd1035, 6;
	xor.b64  	%rd1052, %rd1049, %rd1051;
	xor.b64  	%rd1053, %rd1052, %rd1050;
	add.s64 	%rd1054, %rd565, %rd609;
	add.s64 	%rd1055, %rd1054, %rd1053;
	add.s64 	%rd1056, %rd1055, %rd54;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r728,%dummy}, %rd1048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r729}, %rd1048;
	}
	shf.r.wrap.b32 	%r730, %r729, %r728, 19;
	shf.r.wrap.b32 	%r731, %r728, %r729, 19;
	mov.b64 	%rd1057, {%r731, %r730};
	shf.l.wrap.b32 	%r732, %r728, %r729, 3;
	shf.l.wrap.b32 	%r733, %r729, %r728, 3;
	mov.b64 	%rd1058, {%r733, %r732};
	shr.u64 	%rd1059, %rd1048, 6;
	xor.b64  	%rd1060, %rd1057, %rd1059;
	xor.b64  	%rd1061, %rd1060, %rd1058;
	shf.r.wrap.b32 	%r734, %r393, %r392, 1;
	shf.r.wrap.b32 	%r735, %r392, %r393, 1;
	mov.b64 	%rd1062, {%r735, %r734};
	shf.r.wrap.b32 	%r736, %r393, %r392, 8;
	shf.r.wrap.b32 	%r737, %r392, %r393, 8;
	mov.b64 	%rd1063, {%r737, %r736};
	shr.u64 	%rd1064, %rd572, 7;
	xor.b64  	%rd1065, %rd1062, %rd1064;
	xor.b64  	%rd1066, %rd1065, %rd1063;
	add.s64 	%rd1067, %rd30, %rd616;
	add.s64 	%rd1068, %rd1067, %rd1061;
	add.s64 	%rd1069, %rd1068, %rd1066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r738,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r739}, %rd1056;
	}
	shf.r.wrap.b32 	%r740, %r739, %r738, 19;
	shf.r.wrap.b32 	%r741, %r738, %r739, 19;
	mov.b64 	%rd1070, {%r741, %r740};
	shf.l.wrap.b32 	%r742, %r738, %r739, 3;
	shf.l.wrap.b32 	%r743, %r739, %r738, 3;
	mov.b64 	%rd1071, {%r743, %r742};
	shr.u64 	%rd1072, %rd1056, 6;
	xor.b64  	%rd1073, %rd1070, %rd1072;
	xor.b64  	%rd1074, %rd1073, %rd1071;
	add.s64 	%rd1075, %rd572, %rd623;
	add.s64 	%rd1076, %rd1075, %rd1074;
	add.s64 	%rd1077, %rd1076, %rd55;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r744,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r745}, %rd1069;
	}
	shf.r.wrap.b32 	%r746, %r745, %r744, 19;
	shf.r.wrap.b32 	%r747, %r744, %r745, 19;
	mov.b64 	%rd1078, {%r747, %r746};
	shf.l.wrap.b32 	%r748, %r744, %r745, 3;
	shf.l.wrap.b32 	%r749, %r745, %r744, 3;
	mov.b64 	%rd1079, {%r749, %r748};
	shr.u64 	%rd1080, %rd1069, 6;
	xor.b64  	%rd1081, %rd1078, %rd1080;
	xor.b64  	%rd1082, %rd1081, %rd1079;
	shf.r.wrap.b32 	%r750, %r399, %r398, 1;
	shf.r.wrap.b32 	%r751, %r398, %r399, 1;
	mov.b64 	%rd1083, {%r751, %r750};
	shf.r.wrap.b32 	%r752, %r399, %r398, 8;
	shf.r.wrap.b32 	%r753, %r398, %r399, 8;
	mov.b64 	%rd1084, {%r753, %r752};
	shr.u64 	%rd1085, %rd579, 7;
	xor.b64  	%rd1086, %rd1083, %rd1085;
	xor.b64  	%rd1087, %rd1086, %rd1084;
	add.s64 	%rd1088, %rd32, %rd630;
	add.s64 	%rd1089, %rd1088, %rd1082;
	add.s64 	%rd1090, %rd1089, %rd1087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r754,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r755}, %rd1077;
	}
	shf.r.wrap.b32 	%r756, %r755, %r754, 19;
	shf.r.wrap.b32 	%r757, %r754, %r755, 19;
	mov.b64 	%rd1091, {%r757, %r756};
	shf.l.wrap.b32 	%r758, %r754, %r755, 3;
	shf.l.wrap.b32 	%r759, %r755, %r754, 3;
	mov.b64 	%rd1092, {%r759, %r758};
	shr.u64 	%rd1093, %rd1077, 6;
	xor.b64  	%rd1094, %rd1091, %rd1093;
	xor.b64  	%rd1095, %rd1094, %rd1092;
	shf.r.wrap.b32 	%r760, %r405, %r404, 1;
	shf.r.wrap.b32 	%r761, %r404, %r405, 1;
	mov.b64 	%rd1096, {%r761, %r760};
	shf.r.wrap.b32 	%r762, %r405, %r404, 8;
	shf.r.wrap.b32 	%r763, %r404, %r405, 8;
	mov.b64 	%rd1097, {%r763, %r762};
	shr.u64 	%rd1098, %rd581, 7;
	xor.b64  	%rd1099, %rd1096, %rd1098;
	xor.b64  	%rd1100, %rd1099, %rd1097;
	add.s64 	%rd1101, %rd579, %rd643;
	add.s64 	%rd1102, %rd1101, %rd1095;
	add.s64 	%rd1103, %rd1102, %rd1100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r764,%dummy}, %rd1090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r765}, %rd1090;
	}
	shf.r.wrap.b32 	%r766, %r765, %r764, 19;
	shf.r.wrap.b32 	%r767, %r764, %r765, 19;
	mov.b64 	%rd1104, {%r767, %r766};
	shf.l.wrap.b32 	%r768, %r764, %r765, 3;
	shf.l.wrap.b32 	%r769, %r765, %r764, 3;
	mov.b64 	%rd1105, {%r769, %r768};
	shr.u64 	%rd1106, %rd1090, 6;
	xor.b64  	%rd1107, %rd1104, %rd1106;
	xor.b64  	%rd1108, %rd1107, %rd1105;
	shf.r.wrap.b32 	%r770, %r411, %r410, 1;
	shf.r.wrap.b32 	%r771, %r410, %r411, 1;
	mov.b64 	%rd1109, {%r771, %r770};
	shf.r.wrap.b32 	%r772, %r411, %r410, 8;
	shf.r.wrap.b32 	%r773, %r410, %r411, 8;
	mov.b64 	%rd1110, {%r773, %r772};
	shr.u64 	%rd1111, %rd588, 7;
	xor.b64  	%rd1112, %rd1109, %rd1111;
	xor.b64  	%rd1113, %rd1112, %rd1110;
	add.s64 	%rd1114, %rd1035, %rd581;
	add.s64 	%rd1115, %rd1114, %rd1108;
	add.s64 	%rd1116, %rd1115, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r774,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r775}, %rd1103;
	}
	shf.r.wrap.b32 	%r776, %r775, %r774, 19;
	shf.r.wrap.b32 	%r777, %r774, %r775, 19;
	mov.b64 	%rd1117, {%r777, %r776};
	shf.l.wrap.b32 	%r778, %r774, %r775, 3;
	shf.l.wrap.b32 	%r779, %r775, %r774, 3;
	mov.b64 	%rd1118, {%r779, %r778};
	shr.u64 	%rd1119, %rd1103, 6;
	xor.b64  	%rd1120, %rd1117, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1118;
	shf.r.wrap.b32 	%r780, %r417, %r416, 1;
	shf.r.wrap.b32 	%r781, %r416, %r417, 1;
	mov.b64 	%rd1122, {%r781, %r780};
	shf.r.wrap.b32 	%r782, %r417, %r416, 8;
	shf.r.wrap.b32 	%r783, %r416, %r417, 8;
	mov.b64 	%rd1123, {%r783, %r782};
	shr.u64 	%rd1124, %rd595, 7;
	xor.b64  	%rd1125, %rd1122, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1123;
	add.s64 	%rd1127, %rd1048, %rd588;
	add.s64 	%rd1128, %rd1127, %rd1121;
	add.s64 	%rd1129, %rd1128, %rd1126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r784,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r785}, %rd1116;
	}
	shf.r.wrap.b32 	%r786, %r785, %r784, 19;
	shf.r.wrap.b32 	%r787, %r784, %r785, 19;
	mov.b64 	%rd1130, {%r787, %r786};
	shf.l.wrap.b32 	%r788, %r784, %r785, 3;
	shf.l.wrap.b32 	%r789, %r785, %r784, 3;
	mov.b64 	%rd1131, {%r789, %r788};
	shr.u64 	%rd1132, %rd1116, 6;
	xor.b64  	%rd1133, %rd1130, %rd1132;
	xor.b64  	%rd1134, %rd1133, %rd1131;
	shf.r.wrap.b32 	%r790, %r423, %r422, 1;
	shf.r.wrap.b32 	%r791, %r422, %r423, 1;
	mov.b64 	%rd1135, {%r791, %r790};
	shf.r.wrap.b32 	%r792, %r423, %r422, 8;
	shf.r.wrap.b32 	%r793, %r422, %r423, 8;
	mov.b64 	%rd1136, {%r793, %r792};
	shr.u64 	%rd1137, %rd602, 7;
	xor.b64  	%rd1138, %rd1135, %rd1137;
	xor.b64  	%rd1139, %rd1138, %rd1136;
	add.s64 	%rd1140, %rd1056, %rd595;
	add.s64 	%rd1141, %rd1140, %rd1134;
	add.s64 	%rd1142, %rd1141, %rd1139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r794,%dummy}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r795}, %rd1129;
	}
	shf.r.wrap.b32 	%r796, %r795, %r794, 19;
	shf.r.wrap.b32 	%r797, %r794, %r795, 19;
	mov.b64 	%rd1143, {%r797, %r796};
	shf.l.wrap.b32 	%r798, %r794, %r795, 3;
	shf.l.wrap.b32 	%r799, %r795, %r794, 3;
	mov.b64 	%rd1144, {%r799, %r798};
	shr.u64 	%rd1145, %rd1129, 6;
	xor.b64  	%rd1146, %rd1143, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1144;
	shf.r.wrap.b32 	%r800, %r429, %r428, 1;
	shf.r.wrap.b32 	%r801, %r428, %r429, 1;
	mov.b64 	%rd1148, {%r801, %r800};
	shf.r.wrap.b32 	%r802, %r429, %r428, 8;
	shf.r.wrap.b32 	%r803, %r428, %r429, 8;
	mov.b64 	%rd1149, {%r803, %r802};
	shr.u64 	%rd1150, %rd609, 7;
	xor.b64  	%rd1151, %rd1148, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1149;
	add.s64 	%rd1153, %rd1069, %rd602;
	add.s64 	%rd1154, %rd1153, %rd1147;
	add.s64 	%rd1155, %rd1154, %rd1152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r804,%dummy}, %rd1142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r805}, %rd1142;
	}
	shf.r.wrap.b32 	%r806, %r805, %r804, 19;
	shf.r.wrap.b32 	%r807, %r804, %r805, 19;
	mov.b64 	%rd1156, {%r807, %r806};
	shf.l.wrap.b32 	%r808, %r804, %r805, 3;
	shf.l.wrap.b32 	%r809, %r805, %r804, 3;
	mov.b64 	%rd1157, {%r809, %r808};
	shr.u64 	%rd1158, %rd1142, 6;
	xor.b64  	%rd1159, %rd1156, %rd1158;
	xor.b64  	%rd1160, %rd1159, %rd1157;
	shf.r.wrap.b32 	%r810, %r435, %r434, 1;
	shf.r.wrap.b32 	%r811, %r434, %r435, 1;
	mov.b64 	%rd1161, {%r811, %r810};
	shf.r.wrap.b32 	%r812, %r435, %r434, 8;
	shf.r.wrap.b32 	%r813, %r434, %r435, 8;
	mov.b64 	%rd1162, {%r813, %r812};
	shr.u64 	%rd1163, %rd616, 7;
	xor.b64  	%rd1164, %rd1161, %rd1163;
	xor.b64  	%rd1165, %rd1164, %rd1162;
	add.s64 	%rd1166, %rd1077, %rd609;
	add.s64 	%rd1167, %rd1166, %rd1160;
	add.s64 	%rd1168, %rd1167, %rd1165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd1155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r815}, %rd1155;
	}
	shf.r.wrap.b32 	%r816, %r815, %r814, 19;
	shf.r.wrap.b32 	%r817, %r814, %r815, 19;
	mov.b64 	%rd1169, {%r817, %r816};
	shf.l.wrap.b32 	%r818, %r814, %r815, 3;
	shf.l.wrap.b32 	%r819, %r815, %r814, 3;
	mov.b64 	%rd1170, {%r819, %r818};
	shr.u64 	%rd1171, %rd1155, 6;
	xor.b64  	%rd1172, %rd1169, %rd1171;
	xor.b64  	%rd1173, %rd1172, %rd1170;
	shf.r.wrap.b32 	%r820, %r441, %r440, 1;
	shf.r.wrap.b32 	%r821, %r440, %r441, 1;
	mov.b64 	%rd1174, {%r821, %r820};
	shf.r.wrap.b32 	%r822, %r441, %r440, 8;
	shf.r.wrap.b32 	%r823, %r440, %r441, 8;
	mov.b64 	%rd1175, {%r823, %r822};
	shr.u64 	%rd1176, %rd623, 7;
	xor.b64  	%rd1177, %rd1174, %rd1176;
	xor.b64  	%rd1178, %rd1177, %rd1175;
	add.s64 	%rd1179, %rd1090, %rd616;
	add.s64 	%rd1180, %rd1179, %rd1173;
	add.s64 	%rd1181, %rd1180, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r824,%dummy}, %rd1168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r825}, %rd1168;
	}
	shf.r.wrap.b32 	%r826, %r825, %r824, 19;
	shf.r.wrap.b32 	%r827, %r824, %r825, 19;
	mov.b64 	%rd1182, {%r827, %r826};
	shf.l.wrap.b32 	%r828, %r824, %r825, 3;
	shf.l.wrap.b32 	%r829, %r825, %r824, 3;
	mov.b64 	%rd1183, {%r829, %r828};
	shr.u64 	%rd1184, %rd1168, 6;
	xor.b64  	%rd1185, %rd1182, %rd1184;
	xor.b64  	%rd1186, %rd1185, %rd1183;
	shf.r.wrap.b32 	%r830, %r707, %r706, 1;
	shf.r.wrap.b32 	%r831, %r706, %r707, 1;
	mov.b64 	%rd1187, {%r831, %r830};
	shf.r.wrap.b32 	%r832, %r707, %r706, 8;
	shf.r.wrap.b32 	%r833, %r706, %r707, 8;
	mov.b64 	%rd1188, {%r833, %r832};
	shr.u64 	%rd1189, %rd630, 7;
	xor.b64  	%rd1190, %rd1187, %rd1189;
	xor.b64  	%rd1191, %rd1190, %rd1188;
	add.s64 	%rd1192, %rd1103, %rd623;
	add.s64 	%rd1193, %rd1192, %rd1186;
	add.s64 	%rd1194, %rd1193, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r834,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r835}, %rd1181;
	}
	shf.r.wrap.b32 	%r836, %r835, %r834, 19;
	shf.r.wrap.b32 	%r837, %r834, %r835, 19;
	mov.b64 	%rd1195, {%r837, %r836};
	shf.l.wrap.b32 	%r838, %r834, %r835, 3;
	shf.l.wrap.b32 	%r839, %r835, %r834, 3;
	mov.b64 	%rd1196, {%r839, %r838};
	shr.u64 	%rd1197, %rd1181, 6;
	xor.b64  	%rd1198, %rd1195, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1196;
	shf.r.wrap.b32 	%r840, %r713, %r712, 1;
	shf.r.wrap.b32 	%r841, %r712, %r713, 1;
	mov.b64 	%rd1200, {%r841, %r840};
	shf.r.wrap.b32 	%r842, %r713, %r712, 8;
	shf.r.wrap.b32 	%r843, %r712, %r713, 8;
	mov.b64 	%rd1201, {%r843, %r842};
	shr.u64 	%rd1202, %rd643, 7;
	xor.b64  	%rd1203, %rd1200, %rd1202;
	xor.b64  	%rd1204, %rd1203, %rd1201;
	add.s64 	%rd1205, %rd1116, %rd630;
	add.s64 	%rd1206, %rd1205, %rd1199;
	add.s64 	%rd1207, %rd1206, %rd1204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r844,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r845}, %rd1194;
	}
	shf.r.wrap.b32 	%r846, %r845, %r844, 19;
	shf.r.wrap.b32 	%r847, %r844, %r845, 19;
	mov.b64 	%rd1208, {%r847, %r846};
	shf.l.wrap.b32 	%r848, %r844, %r845, 3;
	shf.l.wrap.b32 	%r849, %r845, %r844, 3;
	mov.b64 	%rd1209, {%r849, %r848};
	shr.u64 	%rd1210, %rd1194, 6;
	xor.b64  	%rd1211, %rd1208, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd1209;
	shf.r.wrap.b32 	%r850, %r723, %r722, 1;
	shf.r.wrap.b32 	%r851, %r722, %r723, 1;
	mov.b64 	%rd1213, {%r851, %r850};
	shf.r.wrap.b32 	%r852, %r723, %r722, 8;
	shf.r.wrap.b32 	%r853, %r722, %r723, 8;
	mov.b64 	%rd1214, {%r853, %r852};
	shr.u64 	%rd1215, %rd1035, 7;
	xor.b64  	%rd1216, %rd1213, %rd1215;
	xor.b64  	%rd1217, %rd1216, %rd1214;
	add.s64 	%rd1218, %rd1129, %rd643;
	add.s64 	%rd1219, %rd1218, %rd1212;
	add.s64 	%rd1220, %rd1219, %rd1217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r854,%dummy}, %rd1016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r855}, %rd1016;
	}
	shf.r.wrap.b32 	%r856, %r855, %r854, 14;
	shf.r.wrap.b32 	%r857, %r854, %r855, 14;
	mov.b64 	%rd1221, {%r857, %r856};
	shf.r.wrap.b32 	%r858, %r855, %r854, 18;
	shf.r.wrap.b32 	%r859, %r854, %r855, 18;
	mov.b64 	%rd1222, {%r859, %r858};
	xor.b64  	%rd1223, %rd1222, %rd1221;
	shf.l.wrap.b32 	%r860, %r854, %r855, 23;
	shf.l.wrap.b32 	%r861, %r855, %r854, 23;
	mov.b64 	%rd1224, {%r861, %r860};
	xor.b64  	%rd1225, %rd1223, %rd1224;
	xor.b64  	%rd1226, %rd968, %rd992;
	and.b64  	%rd1227, %rd1226, %rd1016;
	xor.b64  	%rd1228, %rd1227, %rd968;
	add.s64 	%rd1229, %rd1228, %rd944;
	add.s64 	%rd1230, %rd1229, %rd1035;
	add.s64 	%rd1231, %rd1230, %rd2710;
	add.s64 	%rd1232, %rd1231, %rd1225;
	add.s64 	%rd1233, %rd1232, %rd955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd1027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r863}, %rd1027;
	}
	shf.r.wrap.b32 	%r864, %r863, %r862, 28;
	shf.r.wrap.b32 	%r865, %r862, %r863, 28;
	mov.b64 	%rd1234, {%r865, %r864};
	shf.l.wrap.b32 	%r866, %r862, %r863, 30;
	shf.l.wrap.b32 	%r867, %r863, %r862, 30;
	mov.b64 	%rd1235, {%r867, %r866};
	xor.b64  	%rd1236, %rd1235, %rd1234;
	shf.l.wrap.b32 	%r868, %r862, %r863, 25;
	shf.l.wrap.b32 	%r869, %r863, %r862, 25;
	mov.b64 	%rd1237, {%r869, %r868};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	xor.b64  	%rd1239, %rd1027, %rd979;
	xor.b64  	%rd1240, %rd1027, %rd1003;
	and.b64  	%rd1241, %rd1240, %rd1239;
	xor.b64  	%rd1242, %rd1241, %rd1027;
	add.s64 	%rd1243, %rd1232, %rd1242;
	add.s64 	%rd1244, %rd1243, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r870,%dummy}, %rd1233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r871}, %rd1233;
	}
	shf.r.wrap.b32 	%r872, %r871, %r870, 14;
	shf.r.wrap.b32 	%r873, %r870, %r871, 14;
	mov.b64 	%rd1245, {%r873, %r872};
	shf.r.wrap.b32 	%r874, %r871, %r870, 18;
	shf.r.wrap.b32 	%r875, %r870, %r871, 18;
	mov.b64 	%rd1246, {%r875, %r874};
	xor.b64  	%rd1247, %rd1246, %rd1245;
	shf.l.wrap.b32 	%r876, %r870, %r871, 23;
	shf.l.wrap.b32 	%r877, %r871, %r870, 23;
	mov.b64 	%rd1248, {%r877, %r876};
	xor.b64  	%rd1249, %rd1247, %rd1248;
	xor.b64  	%rd1250, %rd992, %rd1016;
	and.b64  	%rd1251, %rd1233, %rd1250;
	xor.b64  	%rd1252, %rd1251, %rd992;
	add.s64 	%rd1253, %rd1048, %rd968;
	add.s64 	%rd1254, %rd1253, %rd2711;
	add.s64 	%rd1255, %rd1254, %rd1252;
	add.s64 	%rd1256, %rd1255, %rd1249;
	add.s64 	%rd1257, %rd1256, %rd979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r878,%dummy}, %rd1244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r879}, %rd1244;
	}
	shf.r.wrap.b32 	%r880, %r879, %r878, 28;
	shf.r.wrap.b32 	%r881, %r878, %r879, 28;
	mov.b64 	%rd1258, {%r881, %r880};
	shf.l.wrap.b32 	%r882, %r878, %r879, 30;
	shf.l.wrap.b32 	%r883, %r879, %r878, 30;
	mov.b64 	%rd1259, {%r883, %r882};
	xor.b64  	%rd1260, %rd1259, %rd1258;
	shf.l.wrap.b32 	%r884, %r878, %r879, 25;
	shf.l.wrap.b32 	%r885, %r879, %r878, 25;
	mov.b64 	%rd1261, {%r885, %r884};
	xor.b64  	%rd1262, %rd1260, %rd1261;
	xor.b64  	%rd1263, %rd1244, %rd1003;
	xor.b64  	%rd1264, %rd1244, %rd1027;
	and.b64  	%rd1265, %rd1264, %rd1263;
	xor.b64  	%rd1266, %rd1265, %rd1244;
	add.s64 	%rd1267, %rd1256, %rd1266;
	add.s64 	%rd1268, %rd1267, %rd1262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r886,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r887}, %rd1257;
	}
	shf.r.wrap.b32 	%r888, %r887, %r886, 14;
	shf.r.wrap.b32 	%r889, %r886, %r887, 14;
	mov.b64 	%rd1269, {%r889, %r888};
	shf.r.wrap.b32 	%r890, %r887, %r886, 18;
	shf.r.wrap.b32 	%r891, %r886, %r887, 18;
	mov.b64 	%rd1270, {%r891, %r890};
	xor.b64  	%rd1271, %rd1270, %rd1269;
	shf.l.wrap.b32 	%r892, %r886, %r887, 23;
	shf.l.wrap.b32 	%r893, %r887, %r886, 23;
	mov.b64 	%rd1272, {%r893, %r892};
	xor.b64  	%rd1273, %rd1271, %rd1272;
	xor.b64  	%rd1274, %rd1233, %rd1016;
	and.b64  	%rd1275, %rd1257, %rd1274;
	xor.b64  	%rd1276, %rd1275, %rd1016;
	add.s64 	%rd1277, %rd1056, %rd992;
	add.s64 	%rd1278, %rd1277, %rd2712;
	add.s64 	%rd1279, %rd1278, %rd1276;
	add.s64 	%rd1280, %rd1279, %rd1273;
	add.s64 	%rd1281, %rd1280, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd1268;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 28;
	shf.r.wrap.b32 	%r897, %r894, %r895, 28;
	mov.b64 	%rd1282, {%r897, %r896};
	shf.l.wrap.b32 	%r898, %r894, %r895, 30;
	shf.l.wrap.b32 	%r899, %r895, %r894, 30;
	mov.b64 	%rd1283, {%r899, %r898};
	xor.b64  	%rd1284, %rd1283, %rd1282;
	shf.l.wrap.b32 	%r900, %r894, %r895, 25;
	shf.l.wrap.b32 	%r901, %r895, %r894, 25;
	mov.b64 	%rd1285, {%r901, %r900};
	xor.b64  	%rd1286, %rd1284, %rd1285;
	xor.b64  	%rd1287, %rd1268, %rd1027;
	xor.b64  	%rd1288, %rd1268, %rd1244;
	and.b64  	%rd1289, %rd1288, %rd1287;
	xor.b64  	%rd1290, %rd1289, %rd1268;
	add.s64 	%rd1291, %rd1280, %rd1290;
	add.s64 	%rd1292, %rd1291, %rd1286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd1281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd1281;
	}
	shf.r.wrap.b32 	%r904, %r903, %r902, 14;
	shf.r.wrap.b32 	%r905, %r902, %r903, 14;
	mov.b64 	%rd1293, {%r905, %r904};
	shf.r.wrap.b32 	%r906, %r903, %r902, 18;
	shf.r.wrap.b32 	%r907, %r902, %r903, 18;
	mov.b64 	%rd1294, {%r907, %r906};
	xor.b64  	%rd1295, %rd1294, %rd1293;
	shf.l.wrap.b32 	%r908, %r902, %r903, 23;
	shf.l.wrap.b32 	%r909, %r903, %r902, 23;
	mov.b64 	%rd1296, {%r909, %r908};
	xor.b64  	%rd1297, %rd1295, %rd1296;
	xor.b64  	%rd1298, %rd1257, %rd1233;
	and.b64  	%rd1299, %rd1281, %rd1298;
	xor.b64  	%rd1300, %rd1299, %rd1233;
	add.s64 	%rd1301, %rd1069, %rd1016;
	add.s64 	%rd1302, %rd1301, %rd2713;
	add.s64 	%rd1303, %rd1302, %rd1300;
	add.s64 	%rd1304, %rd1303, %rd1297;
	add.s64 	%rd1305, %rd1304, %rd1027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r910,%dummy}, %rd1292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r911}, %rd1292;
	}
	shf.r.wrap.b32 	%r912, %r911, %r910, 28;
	shf.r.wrap.b32 	%r913, %r910, %r911, 28;
	mov.b64 	%rd1306, {%r913, %r912};
	shf.l.wrap.b32 	%r914, %r910, %r911, 30;
	shf.l.wrap.b32 	%r915, %r911, %r910, 30;
	mov.b64 	%rd1307, {%r915, %r914};
	xor.b64  	%rd1308, %rd1307, %rd1306;
	shf.l.wrap.b32 	%r916, %r910, %r911, 25;
	shf.l.wrap.b32 	%r917, %r911, %r910, 25;
	mov.b64 	%rd1309, {%r917, %r916};
	xor.b64  	%rd1310, %rd1308, %rd1309;
	xor.b64  	%rd1311, %rd1292, %rd1244;
	xor.b64  	%rd1312, %rd1292, %rd1268;
	and.b64  	%rd1313, %rd1312, %rd1311;
	xor.b64  	%rd1314, %rd1313, %rd1292;
	add.s64 	%rd1315, %rd1304, %rd1314;
	add.s64 	%rd1316, %rd1315, %rd1310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd1305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r919}, %rd1305;
	}
	shf.r.wrap.b32 	%r920, %r919, %r918, 14;
	shf.r.wrap.b32 	%r921, %r918, %r919, 14;
	mov.b64 	%rd1317, {%r921, %r920};
	shf.r.wrap.b32 	%r922, %r919, %r918, 18;
	shf.r.wrap.b32 	%r923, %r918, %r919, 18;
	mov.b64 	%rd1318, {%r923, %r922};
	xor.b64  	%rd1319, %rd1318, %rd1317;
	shf.l.wrap.b32 	%r924, %r918, %r919, 23;
	shf.l.wrap.b32 	%r925, %r919, %r918, 23;
	mov.b64 	%rd1320, {%r925, %r924};
	xor.b64  	%rd1321, %rd1319, %rd1320;
	xor.b64  	%rd1322, %rd1281, %rd1257;
	and.b64  	%rd1323, %rd1305, %rd1322;
	xor.b64  	%rd1324, %rd1323, %rd1257;
	add.s64 	%rd1325, %rd1233, %rd1077;
	add.s64 	%rd1326, %rd1325, %rd2714;
	add.s64 	%rd1327, %rd1326, %rd1324;
	add.s64 	%rd1328, %rd1327, %rd1321;
	add.s64 	%rd1329, %rd1328, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd1316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd1316;
	}
	shf.r.wrap.b32 	%r928, %r927, %r926, 28;
	shf.r.wrap.b32 	%r929, %r926, %r927, 28;
	mov.b64 	%rd1330, {%r929, %r928};
	shf.l.wrap.b32 	%r930, %r926, %r927, 30;
	shf.l.wrap.b32 	%r931, %r927, %r926, 30;
	mov.b64 	%rd1331, {%r931, %r930};
	xor.b64  	%rd1332, %rd1331, %rd1330;
	shf.l.wrap.b32 	%r932, %r926, %r927, 25;
	shf.l.wrap.b32 	%r933, %r927, %r926, 25;
	mov.b64 	%rd1333, {%r933, %r932};
	xor.b64  	%rd1334, %rd1332, %rd1333;
	xor.b64  	%rd1335, %rd1316, %rd1268;
	xor.b64  	%rd1336, %rd1316, %rd1292;
	and.b64  	%rd1337, %rd1336, %rd1335;
	xor.b64  	%rd1338, %rd1337, %rd1316;
	add.s64 	%rd1339, %rd1328, %rd1338;
	add.s64 	%rd1340, %rd1339, %rd1334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r935}, %rd1329;
	}
	shf.r.wrap.b32 	%r936, %r935, %r934, 14;
	shf.r.wrap.b32 	%r937, %r934, %r935, 14;
	mov.b64 	%rd1341, {%r937, %r936};
	shf.r.wrap.b32 	%r938, %r935, %r934, 18;
	shf.r.wrap.b32 	%r939, %r934, %r935, 18;
	mov.b64 	%rd1342, {%r939, %r938};
	xor.b64  	%rd1343, %rd1342, %rd1341;
	shf.l.wrap.b32 	%r940, %r934, %r935, 23;
	shf.l.wrap.b32 	%r941, %r935, %r934, 23;
	mov.b64 	%rd1344, {%r941, %r940};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	xor.b64  	%rd1346, %rd1305, %rd1281;
	and.b64  	%rd1347, %rd1329, %rd1346;
	xor.b64  	%rd1348, %rd1347, %rd1281;
	add.s64 	%rd1349, %rd1257, %rd1090;
	add.s64 	%rd1350, %rd1349, %rd2715;
	add.s64 	%rd1351, %rd1350, %rd1348;
	add.s64 	%rd1352, %rd1351, %rd1345;
	add.s64 	%rd1353, %rd1352, %rd1268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r942,%dummy}, %rd1340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r943}, %rd1340;
	}
	shf.r.wrap.b32 	%r944, %r943, %r942, 28;
	shf.r.wrap.b32 	%r945, %r942, %r943, 28;
	mov.b64 	%rd1354, {%r945, %r944};
	shf.l.wrap.b32 	%r946, %r942, %r943, 30;
	shf.l.wrap.b32 	%r947, %r943, %r942, 30;
	mov.b64 	%rd1355, {%r947, %r946};
	xor.b64  	%rd1356, %rd1355, %rd1354;
	shf.l.wrap.b32 	%r948, %r942, %r943, 25;
	shf.l.wrap.b32 	%r949, %r943, %r942, 25;
	mov.b64 	%rd1357, {%r949, %r948};
	xor.b64  	%rd1358, %rd1356, %rd1357;
	xor.b64  	%rd1359, %rd1340, %rd1292;
	xor.b64  	%rd1360, %rd1340, %rd1316;
	and.b64  	%rd1361, %rd1360, %rd1359;
	xor.b64  	%rd1362, %rd1361, %rd1340;
	add.s64 	%rd1363, %rd1352, %rd1362;
	add.s64 	%rd1364, %rd1363, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd1353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd1353;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 14;
	shf.r.wrap.b32 	%r953, %r950, %r951, 14;
	mov.b64 	%rd1365, {%r953, %r952};
	shf.r.wrap.b32 	%r954, %r951, %r950, 18;
	shf.r.wrap.b32 	%r955, %r950, %r951, 18;
	mov.b64 	%rd1366, {%r955, %r954};
	xor.b64  	%rd1367, %rd1366, %rd1365;
	shf.l.wrap.b32 	%r956, %r950, %r951, 23;
	shf.l.wrap.b32 	%r957, %r951, %r950, 23;
	mov.b64 	%rd1368, {%r957, %r956};
	xor.b64  	%rd1369, %rd1367, %rd1368;
	xor.b64  	%rd1370, %rd1329, %rd1305;
	and.b64  	%rd1371, %rd1353, %rd1370;
	xor.b64  	%rd1372, %rd1371, %rd1305;
	add.s64 	%rd1373, %rd1281, %rd1103;
	add.s64 	%rd1374, %rd1373, %rd2716;
	add.s64 	%rd1375, %rd1374, %rd1372;
	add.s64 	%rd1376, %rd1375, %rd1369;
	add.s64 	%rd1377, %rd1376, %rd1292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r959}, %rd1364;
	}
	shf.r.wrap.b32 	%r960, %r959, %r958, 28;
	shf.r.wrap.b32 	%r961, %r958, %r959, 28;
	mov.b64 	%rd1378, {%r961, %r960};
	shf.l.wrap.b32 	%r962, %r958, %r959, 30;
	shf.l.wrap.b32 	%r963, %r959, %r958, 30;
	mov.b64 	%rd1379, {%r963, %r962};
	xor.b64  	%rd1380, %rd1379, %rd1378;
	shf.l.wrap.b32 	%r964, %r958, %r959, 25;
	shf.l.wrap.b32 	%r965, %r959, %r958, 25;
	mov.b64 	%rd1381, {%r965, %r964};
	xor.b64  	%rd1382, %rd1380, %rd1381;
	xor.b64  	%rd1383, %rd1364, %rd1316;
	xor.b64  	%rd1384, %rd1364, %rd1340;
	and.b64  	%rd1385, %rd1384, %rd1383;
	xor.b64  	%rd1386, %rd1385, %rd1364;
	add.s64 	%rd1387, %rd1376, %rd1386;
	add.s64 	%rd1388, %rd1387, %rd1382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r966,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r967}, %rd1377;
	}
	shf.r.wrap.b32 	%r968, %r967, %r966, 14;
	shf.r.wrap.b32 	%r969, %r966, %r967, 14;
	mov.b64 	%rd1389, {%r969, %r968};
	shf.r.wrap.b32 	%r970, %r967, %r966, 18;
	shf.r.wrap.b32 	%r971, %r966, %r967, 18;
	mov.b64 	%rd1390, {%r971, %r970};
	xor.b64  	%rd1391, %rd1390, %rd1389;
	shf.l.wrap.b32 	%r972, %r966, %r967, 23;
	shf.l.wrap.b32 	%r973, %r967, %r966, 23;
	mov.b64 	%rd1392, {%r973, %r972};
	xor.b64  	%rd1393, %rd1391, %rd1392;
	xor.b64  	%rd1394, %rd1353, %rd1329;
	and.b64  	%rd1395, %rd1377, %rd1394;
	xor.b64  	%rd1396, %rd1395, %rd1329;
	add.s64 	%rd1397, %rd1305, %rd1116;
	add.s64 	%rd1398, %rd1397, %rd2717;
	add.s64 	%rd1399, %rd1398, %rd1396;
	add.s64 	%rd1400, %rd1399, %rd1393;
	add.s64 	%rd1401, %rd1400, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r974,%dummy}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r975}, %rd1388;
	}
	shf.r.wrap.b32 	%r976, %r975, %r974, 28;
	shf.r.wrap.b32 	%r977, %r974, %r975, 28;
	mov.b64 	%rd1402, {%r977, %r976};
	shf.l.wrap.b32 	%r978, %r974, %r975, 30;
	shf.l.wrap.b32 	%r979, %r975, %r974, 30;
	mov.b64 	%rd1403, {%r979, %r978};
	xor.b64  	%rd1404, %rd1403, %rd1402;
	shf.l.wrap.b32 	%r980, %r974, %r975, 25;
	shf.l.wrap.b32 	%r981, %r975, %r974, 25;
	mov.b64 	%rd1405, {%r981, %r980};
	xor.b64  	%rd1406, %rd1404, %rd1405;
	xor.b64  	%rd1407, %rd1388, %rd1340;
	xor.b64  	%rd1408, %rd1388, %rd1364;
	and.b64  	%rd1409, %rd1408, %rd1407;
	xor.b64  	%rd1410, %rd1409, %rd1388;
	add.s64 	%rd1411, %rd1400, %rd1410;
	add.s64 	%rd1412, %rd1411, %rd1406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r982,%dummy}, %rd1401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r983}, %rd1401;
	}
	shf.r.wrap.b32 	%r984, %r983, %r982, 14;
	shf.r.wrap.b32 	%r985, %r982, %r983, 14;
	mov.b64 	%rd1413, {%r985, %r984};
	shf.r.wrap.b32 	%r986, %r983, %r982, 18;
	shf.r.wrap.b32 	%r987, %r982, %r983, 18;
	mov.b64 	%rd1414, {%r987, %r986};
	xor.b64  	%rd1415, %rd1414, %rd1413;
	shf.l.wrap.b32 	%r988, %r982, %r983, 23;
	shf.l.wrap.b32 	%r989, %r983, %r982, 23;
	mov.b64 	%rd1416, {%r989, %r988};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	xor.b64  	%rd1418, %rd1377, %rd1353;
	and.b64  	%rd1419, %rd1401, %rd1418;
	xor.b64  	%rd1420, %rd1419, %rd1353;
	add.s64 	%rd1421, %rd1329, %rd1129;
	add.s64 	%rd1422, %rd1421, %rd2718;
	add.s64 	%rd1423, %rd1422, %rd1420;
	add.s64 	%rd1424, %rd1423, %rd1417;
	add.s64 	%rd1425, %rd1424, %rd1340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r990,%dummy}, %rd1412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r991}, %rd1412;
	}
	shf.r.wrap.b32 	%r992, %r991, %r990, 28;
	shf.r.wrap.b32 	%r993, %r990, %r991, 28;
	mov.b64 	%rd1426, {%r993, %r992};
	shf.l.wrap.b32 	%r994, %r990, %r991, 30;
	shf.l.wrap.b32 	%r995, %r991, %r990, 30;
	mov.b64 	%rd1427, {%r995, %r994};
	xor.b64  	%rd1428, %rd1427, %rd1426;
	shf.l.wrap.b32 	%r996, %r990, %r991, 25;
	shf.l.wrap.b32 	%r997, %r991, %r990, 25;
	mov.b64 	%rd1429, {%r997, %r996};
	xor.b64  	%rd1430, %rd1428, %rd1429;
	xor.b64  	%rd1431, %rd1412, %rd1364;
	xor.b64  	%rd1432, %rd1412, %rd1388;
	and.b64  	%rd1433, %rd1432, %rd1431;
	xor.b64  	%rd1434, %rd1433, %rd1412;
	add.s64 	%rd1435, %rd1424, %rd1434;
	add.s64 	%rd1436, %rd1435, %rd1430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r998,%dummy}, %rd1425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r999}, %rd1425;
	}
	shf.r.wrap.b32 	%r1000, %r999, %r998, 14;
	shf.r.wrap.b32 	%r1001, %r998, %r999, 14;
	mov.b64 	%rd1437, {%r1001, %r1000};
	shf.r.wrap.b32 	%r1002, %r999, %r998, 18;
	shf.r.wrap.b32 	%r1003, %r998, %r999, 18;
	mov.b64 	%rd1438, {%r1003, %r1002};
	xor.b64  	%rd1439, %rd1438, %rd1437;
	shf.l.wrap.b32 	%r1004, %r998, %r999, 23;
	shf.l.wrap.b32 	%r1005, %r999, %r998, 23;
	mov.b64 	%rd1440, {%r1005, %r1004};
	xor.b64  	%rd1441, %rd1439, %rd1440;
	xor.b64  	%rd1442, %rd1401, %rd1377;
	and.b64  	%rd1443, %rd1425, %rd1442;
	xor.b64  	%rd1444, %rd1443, %rd1377;
	add.s64 	%rd1445, %rd1353, %rd1142;
	add.s64 	%rd1446, %rd1445, %rd2719;
	add.s64 	%rd1447, %rd1446, %rd1444;
	add.s64 	%rd1448, %rd1447, %rd1441;
	add.s64 	%rd1449, %rd1448, %rd1364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd1436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1007}, %rd1436;
	}
	shf.r.wrap.b32 	%r1008, %r1007, %r1006, 28;
	shf.r.wrap.b32 	%r1009, %r1006, %r1007, 28;
	mov.b64 	%rd1450, {%r1009, %r1008};
	shf.l.wrap.b32 	%r1010, %r1006, %r1007, 30;
	shf.l.wrap.b32 	%r1011, %r1007, %r1006, 30;
	mov.b64 	%rd1451, {%r1011, %r1010};
	xor.b64  	%rd1452, %rd1451, %rd1450;
	shf.l.wrap.b32 	%r1012, %r1006, %r1007, 25;
	shf.l.wrap.b32 	%r1013, %r1007, %r1006, 25;
	mov.b64 	%rd1453, {%r1013, %r1012};
	xor.b64  	%rd1454, %rd1452, %rd1453;
	xor.b64  	%rd1455, %rd1436, %rd1388;
	xor.b64  	%rd1456, %rd1436, %rd1412;
	and.b64  	%rd1457, %rd1456, %rd1455;
	xor.b64  	%rd1458, %rd1457, %rd1436;
	add.s64 	%rd1459, %rd1448, %rd1458;
	add.s64 	%rd1460, %rd1459, %rd1454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd1449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1015}, %rd1449;
	}
	shf.r.wrap.b32 	%r1016, %r1015, %r1014, 14;
	shf.r.wrap.b32 	%r1017, %r1014, %r1015, 14;
	mov.b64 	%rd1461, {%r1017, %r1016};
	shf.r.wrap.b32 	%r1018, %r1015, %r1014, 18;
	shf.r.wrap.b32 	%r1019, %r1014, %r1015, 18;
	mov.b64 	%rd1462, {%r1019, %r1018};
	xor.b64  	%rd1463, %rd1462, %rd1461;
	shf.l.wrap.b32 	%r1020, %r1014, %r1015, 23;
	shf.l.wrap.b32 	%r1021, %r1015, %r1014, 23;
	mov.b64 	%rd1464, {%r1021, %r1020};
	xor.b64  	%rd1465, %rd1463, %rd1464;
	xor.b64  	%rd1466, %rd1425, %rd1401;
	and.b64  	%rd1467, %rd1449, %rd1466;
	xor.b64  	%rd1468, %rd1467, %rd1401;
	add.s64 	%rd1469, %rd1377, %rd1155;
	add.s64 	%rd1470, %rd1469, %rd2720;
	add.s64 	%rd1471, %rd1470, %rd1468;
	add.s64 	%rd1472, %rd1471, %rd1465;
	add.s64 	%rd1473, %rd1472, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1022,%dummy}, %rd1460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1023}, %rd1460;
	}
	shf.r.wrap.b32 	%r1024, %r1023, %r1022, 28;
	shf.r.wrap.b32 	%r1025, %r1022, %r1023, 28;
	mov.b64 	%rd1474, {%r1025, %r1024};
	shf.l.wrap.b32 	%r1026, %r1022, %r1023, 30;
	shf.l.wrap.b32 	%r1027, %r1023, %r1022, 30;
	mov.b64 	%rd1475, {%r1027, %r1026};
	xor.b64  	%rd1476, %rd1475, %rd1474;
	shf.l.wrap.b32 	%r1028, %r1022, %r1023, 25;
	shf.l.wrap.b32 	%r1029, %r1023, %r1022, 25;
	mov.b64 	%rd1477, {%r1029, %r1028};
	xor.b64  	%rd1478, %rd1476, %rd1477;
	xor.b64  	%rd1479, %rd1460, %rd1412;
	xor.b64  	%rd1480, %rd1460, %rd1436;
	and.b64  	%rd1481, %rd1480, %rd1479;
	xor.b64  	%rd1482, %rd1481, %rd1460;
	add.s64 	%rd1483, %rd1472, %rd1482;
	add.s64 	%rd1484, %rd1483, %rd1478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1030,%dummy}, %rd1473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1031}, %rd1473;
	}
	shf.r.wrap.b32 	%r1032, %r1031, %r1030, 14;
	shf.r.wrap.b32 	%r1033, %r1030, %r1031, 14;
	mov.b64 	%rd1485, {%r1033, %r1032};
	shf.r.wrap.b32 	%r1034, %r1031, %r1030, 18;
	shf.r.wrap.b32 	%r1035, %r1030, %r1031, 18;
	mov.b64 	%rd1486, {%r1035, %r1034};
	xor.b64  	%rd1487, %rd1486, %rd1485;
	shf.l.wrap.b32 	%r1036, %r1030, %r1031, 23;
	shf.l.wrap.b32 	%r1037, %r1031, %r1030, 23;
	mov.b64 	%rd1488, {%r1037, %r1036};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	xor.b64  	%rd1490, %rd1449, %rd1425;
	and.b64  	%rd1491, %rd1473, %rd1490;
	xor.b64  	%rd1492, %rd1491, %rd1425;
	add.s64 	%rd1493, %rd1401, %rd1168;
	add.s64 	%rd1494, %rd1493, %rd2721;
	add.s64 	%rd1495, %rd1494, %rd1492;
	add.s64 	%rd1496, %rd1495, %rd1489;
	add.s64 	%rd1497, %rd1496, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1039}, %rd1484;
	}
	shf.r.wrap.b32 	%r1040, %r1039, %r1038, 28;
	shf.r.wrap.b32 	%r1041, %r1038, %r1039, 28;
	mov.b64 	%rd1498, {%r1041, %r1040};
	shf.l.wrap.b32 	%r1042, %r1038, %r1039, 30;
	shf.l.wrap.b32 	%r1043, %r1039, %r1038, 30;
	mov.b64 	%rd1499, {%r1043, %r1042};
	xor.b64  	%rd1500, %rd1499, %rd1498;
	shf.l.wrap.b32 	%r1044, %r1038, %r1039, 25;
	shf.l.wrap.b32 	%r1045, %r1039, %r1038, 25;
	mov.b64 	%rd1501, {%r1045, %r1044};
	xor.b64  	%rd1502, %rd1500, %rd1501;
	xor.b64  	%rd1503, %rd1484, %rd1436;
	xor.b64  	%rd1504, %rd1484, %rd1460;
	and.b64  	%rd1505, %rd1504, %rd1503;
	xor.b64  	%rd1506, %rd1505, %rd1484;
	add.s64 	%rd1507, %rd1496, %rd1506;
	add.s64 	%rd1508, %rd1507, %rd1502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd1497;
	}
	shf.r.wrap.b32 	%r1048, %r1047, %r1046, 14;
	shf.r.wrap.b32 	%r1049, %r1046, %r1047, 14;
	mov.b64 	%rd1509, {%r1049, %r1048};
	shf.r.wrap.b32 	%r1050, %r1047, %r1046, 18;
	shf.r.wrap.b32 	%r1051, %r1046, %r1047, 18;
	mov.b64 	%rd1510, {%r1051, %r1050};
	xor.b64  	%rd1511, %rd1510, %rd1509;
	shf.l.wrap.b32 	%r1052, %r1046, %r1047, 23;
	shf.l.wrap.b32 	%r1053, %r1047, %r1046, 23;
	mov.b64 	%rd1512, {%r1053, %r1052};
	xor.b64  	%rd1513, %rd1511, %rd1512;
	xor.b64  	%rd1514, %rd1473, %rd1449;
	and.b64  	%rd1515, %rd1497, %rd1514;
	xor.b64  	%rd1516, %rd1515, %rd1449;
	add.s64 	%rd1517, %rd1425, %rd1181;
	add.s64 	%rd1518, %rd1517, %rd2722;
	add.s64 	%rd1519, %rd1518, %rd1516;
	add.s64 	%rd1520, %rd1519, %rd1513;
	add.s64 	%rd1521, %rd1520, %rd1436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1054,%dummy}, %rd1508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1055}, %rd1508;
	}
	shf.r.wrap.b32 	%r1056, %r1055, %r1054, 28;
	shf.r.wrap.b32 	%r1057, %r1054, %r1055, 28;
	mov.b64 	%rd1522, {%r1057, %r1056};
	shf.l.wrap.b32 	%r1058, %r1054, %r1055, 30;
	shf.l.wrap.b32 	%r1059, %r1055, %r1054, 30;
	mov.b64 	%rd1523, {%r1059, %r1058};
	xor.b64  	%rd1524, %rd1523, %rd1522;
	shf.l.wrap.b32 	%r1060, %r1054, %r1055, 25;
	shf.l.wrap.b32 	%r1061, %r1055, %r1054, 25;
	mov.b64 	%rd1525, {%r1061, %r1060};
	xor.b64  	%rd1526, %rd1524, %rd1525;
	xor.b64  	%rd1527, %rd1508, %rd1460;
	xor.b64  	%rd1528, %rd1508, %rd1484;
	and.b64  	%rd1529, %rd1528, %rd1527;
	xor.b64  	%rd1530, %rd1529, %rd1508;
	add.s64 	%rd1531, %rd1520, %rd1530;
	add.s64 	%rd1532, %rd1531, %rd1526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1062,%dummy}, %rd1521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1063}, %rd1521;
	}
	shf.r.wrap.b32 	%r1064, %r1063, %r1062, 14;
	shf.r.wrap.b32 	%r1065, %r1062, %r1063, 14;
	mov.b64 	%rd1533, {%r1065, %r1064};
	shf.r.wrap.b32 	%r1066, %r1063, %r1062, 18;
	shf.r.wrap.b32 	%r1067, %r1062, %r1063, 18;
	mov.b64 	%rd1534, {%r1067, %r1066};
	xor.b64  	%rd1535, %rd1534, %rd1533;
	shf.l.wrap.b32 	%r1068, %r1062, %r1063, 23;
	shf.l.wrap.b32 	%r1069, %r1063, %r1062, 23;
	mov.b64 	%rd1536, {%r1069, %r1068};
	xor.b64  	%rd1537, %rd1535, %rd1536;
	xor.b64  	%rd1538, %rd1497, %rd1473;
	and.b64  	%rd1539, %rd1521, %rd1538;
	xor.b64  	%rd1540, %rd1539, %rd1473;
	add.s64 	%rd1541, %rd1449, %rd1194;
	add.s64 	%rd1542, %rd1541, %rd2723;
	add.s64 	%rd1543, %rd1542, %rd1540;
	add.s64 	%rd1544, %rd1543, %rd1537;
	add.s64 	%rd1545, %rd1544, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1070,%dummy}, %rd1532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1071}, %rd1532;
	}
	shf.r.wrap.b32 	%r1072, %r1071, %r1070, 28;
	shf.r.wrap.b32 	%r1073, %r1070, %r1071, 28;
	mov.b64 	%rd1546, {%r1073, %r1072};
	shf.l.wrap.b32 	%r1074, %r1070, %r1071, 30;
	shf.l.wrap.b32 	%r1075, %r1071, %r1070, 30;
	mov.b64 	%rd1547, {%r1075, %r1074};
	xor.b64  	%rd1548, %rd1547, %rd1546;
	shf.l.wrap.b32 	%r1076, %r1070, %r1071, 25;
	shf.l.wrap.b32 	%r1077, %r1071, %r1070, 25;
	mov.b64 	%rd1549, {%r1077, %r1076};
	xor.b64  	%rd1550, %rd1548, %rd1549;
	xor.b64  	%rd1551, %rd1532, %rd1484;
	xor.b64  	%rd1552, %rd1532, %rd1508;
	and.b64  	%rd1553, %rd1552, %rd1551;
	xor.b64  	%rd1554, %rd1553, %rd1532;
	add.s64 	%rd1555, %rd1544, %rd1554;
	add.s64 	%rd1556, %rd1555, %rd1550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1078,%dummy}, %rd1545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1079}, %rd1545;
	}
	shf.r.wrap.b32 	%r1080, %r1079, %r1078, 14;
	shf.r.wrap.b32 	%r1081, %r1078, %r1079, 14;
	mov.b64 	%rd1557, {%r1081, %r1080};
	shf.r.wrap.b32 	%r1082, %r1079, %r1078, 18;
	shf.r.wrap.b32 	%r1083, %r1078, %r1079, 18;
	mov.b64 	%rd1558, {%r1083, %r1082};
	xor.b64  	%rd1559, %rd1558, %rd1557;
	shf.l.wrap.b32 	%r1084, %r1078, %r1079, 23;
	shf.l.wrap.b32 	%r1085, %r1079, %r1078, 23;
	mov.b64 	%rd1560, {%r1085, %r1084};
	xor.b64  	%rd1561, %rd1559, %rd1560;
	xor.b64  	%rd1562, %rd1521, %rd1497;
	and.b64  	%rd1563, %rd1545, %rd1562;
	xor.b64  	%rd1564, %rd1563, %rd1497;
	add.s64 	%rd1565, %rd1473, %rd1207;
	add.s64 	%rd1566, %rd1565, %rd2724;
	add.s64 	%rd1567, %rd1566, %rd1564;
	add.s64 	%rd1568, %rd1567, %rd1561;
	add.s64 	%rd1569, %rd1568, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1086,%dummy}, %rd1556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1087}, %rd1556;
	}
	shf.r.wrap.b32 	%r1088, %r1087, %r1086, 28;
	shf.r.wrap.b32 	%r1089, %r1086, %r1087, 28;
	mov.b64 	%rd1570, {%r1089, %r1088};
	shf.l.wrap.b32 	%r1090, %r1086, %r1087, 30;
	shf.l.wrap.b32 	%r1091, %r1087, %r1086, 30;
	mov.b64 	%rd1571, {%r1091, %r1090};
	xor.b64  	%rd1572, %rd1571, %rd1570;
	shf.l.wrap.b32 	%r1092, %r1086, %r1087, 25;
	shf.l.wrap.b32 	%r1093, %r1087, %r1086, 25;
	mov.b64 	%rd1573, {%r1093, %r1092};
	xor.b64  	%rd1574, %rd1572, %rd1573;
	xor.b64  	%rd1575, %rd1556, %rd1508;
	xor.b64  	%rd1576, %rd1556, %rd1532;
	and.b64  	%rd1577, %rd1576, %rd1575;
	xor.b64  	%rd1578, %rd1577, %rd1556;
	add.s64 	%rd1579, %rd1568, %rd1578;
	add.s64 	%rd1580, %rd1579, %rd1574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1094,%dummy}, %rd1569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1095}, %rd1569;
	}
	shf.r.wrap.b32 	%r1096, %r1095, %r1094, 14;
	shf.r.wrap.b32 	%r1097, %r1094, %r1095, 14;
	mov.b64 	%rd1581, {%r1097, %r1096};
	shf.r.wrap.b32 	%r1098, %r1095, %r1094, 18;
	shf.r.wrap.b32 	%r1099, %r1094, %r1095, 18;
	mov.b64 	%rd1582, {%r1099, %r1098};
	xor.b64  	%rd1583, %rd1582, %rd1581;
	shf.l.wrap.b32 	%r1100, %r1094, %r1095, 23;
	shf.l.wrap.b32 	%r1101, %r1095, %r1094, 23;
	mov.b64 	%rd1584, {%r1101, %r1100};
	xor.b64  	%rd1585, %rd1583, %rd1584;
	xor.b64  	%rd1586, %rd1545, %rd1521;
	and.b64  	%rd1587, %rd1569, %rd1586;
	xor.b64  	%rd1588, %rd1587, %rd1521;
	add.s64 	%rd1589, %rd1497, %rd1220;
	add.s64 	%rd1590, %rd1589, %rd2725;
	add.s64 	%rd1591, %rd1590, %rd1588;
	add.s64 	%rd1592, %rd1591, %rd1585;
	add.s64 	%rd1593, %rd1592, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1102,%dummy}, %rd1580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1103}, %rd1580;
	}
	shf.r.wrap.b32 	%r1104, %r1103, %r1102, 28;
	shf.r.wrap.b32 	%r1105, %r1102, %r1103, 28;
	mov.b64 	%rd1594, {%r1105, %r1104};
	shf.l.wrap.b32 	%r1106, %r1102, %r1103, 30;
	shf.l.wrap.b32 	%r1107, %r1103, %r1102, 30;
	mov.b64 	%rd1595, {%r1107, %r1106};
	xor.b64  	%rd1596, %rd1595, %rd1594;
	shf.l.wrap.b32 	%r1108, %r1102, %r1103, 25;
	shf.l.wrap.b32 	%r1109, %r1103, %r1102, 25;
	mov.b64 	%rd1597, {%r1109, %r1108};
	xor.b64  	%rd1598, %rd1596, %rd1597;
	xor.b64  	%rd1599, %rd1580, %rd1532;
	xor.b64  	%rd1600, %rd1580, %rd1556;
	and.b64  	%rd1601, %rd1600, %rd1599;
	xor.b64  	%rd1602, %rd1601, %rd1580;
	add.s64 	%rd1603, %rd1592, %rd1602;
	add.s64 	%rd1604, %rd1603, %rd1598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1110,%dummy}, %rd1207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1111}, %rd1207;
	}
	shf.r.wrap.b32 	%r1112, %r1111, %r1110, 19;
	shf.r.wrap.b32 	%r1113, %r1110, %r1111, 19;
	mov.b64 	%rd1605, {%r1113, %r1112};
	shf.l.wrap.b32 	%r1114, %r1110, %r1111, 3;
	shf.l.wrap.b32 	%r1115, %r1111, %r1110, 3;
	mov.b64 	%rd1606, {%r1115, %r1114};
	shr.u64 	%rd1607, %rd1207, 6;
	xor.b64  	%rd1608, %rd1605, %rd1607;
	xor.b64  	%rd1609, %rd1608, %rd1606;
	shf.r.wrap.b32 	%r1116, %r729, %r728, 1;
	shf.r.wrap.b32 	%r1117, %r728, %r729, 1;
	mov.b64 	%rd1610, {%r1117, %r1116};
	shf.r.wrap.b32 	%r1118, %r729, %r728, 8;
	shf.r.wrap.b32 	%r1119, %r728, %r729, 8;
	mov.b64 	%rd1611, {%r1119, %r1118};
	shr.u64 	%rd1612, %rd1048, 7;
	xor.b64  	%rd1613, %rd1610, %rd1612;
	xor.b64  	%rd1614, %rd1613, %rd1611;
	add.s64 	%rd1615, %rd1035, %rd1142;
	add.s64 	%rd1616, %rd1615, %rd1609;
	add.s64 	%rd1617, %rd1616, %rd1614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1120,%dummy}, %rd1220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1121}, %rd1220;
	}
	shf.r.wrap.b32 	%r1122, %r1121, %r1120, 19;
	shf.r.wrap.b32 	%r1123, %r1120, %r1121, 19;
	mov.b64 	%rd1618, {%r1123, %r1122};
	shf.l.wrap.b32 	%r1124, %r1120, %r1121, 3;
	shf.l.wrap.b32 	%r1125, %r1121, %r1120, 3;
	mov.b64 	%rd1619, {%r1125, %r1124};
	shr.u64 	%rd1620, %rd1220, 6;
	xor.b64  	%rd1621, %rd1618, %rd1620;
	xor.b64  	%rd1622, %rd1621, %rd1619;
	shf.r.wrap.b32 	%r1126, %r739, %r738, 1;
	shf.r.wrap.b32 	%r1127, %r738, %r739, 1;
	mov.b64 	%rd1623, {%r1127, %r1126};
	shf.r.wrap.b32 	%r1128, %r739, %r738, 8;
	shf.r.wrap.b32 	%r1129, %r738, %r739, 8;
	mov.b64 	%rd1624, {%r1129, %r1128};
	shr.u64 	%rd1625, %rd1056, 7;
	xor.b64  	%rd1626, %rd1623, %rd1625;
	xor.b64  	%rd1627, %rd1626, %rd1624;
	add.s64 	%rd1628, %rd1048, %rd1155;
	add.s64 	%rd1629, %rd1628, %rd1622;
	add.s64 	%rd1630, %rd1629, %rd1627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1131}, %rd1617;
	}
	shf.r.wrap.b32 	%r1132, %r1131, %r1130, 19;
	shf.r.wrap.b32 	%r1133, %r1130, %r1131, 19;
	mov.b64 	%rd1631, {%r1133, %r1132};
	shf.l.wrap.b32 	%r1134, %r1130, %r1131, 3;
	shf.l.wrap.b32 	%r1135, %r1131, %r1130, 3;
	mov.b64 	%rd1632, {%r1135, %r1134};
	shr.u64 	%rd1633, %rd1617, 6;
	xor.b64  	%rd1634, %rd1631, %rd1633;
	xor.b64  	%rd1635, %rd1634, %rd1632;
	shf.r.wrap.b32 	%r1136, %r745, %r744, 1;
	shf.r.wrap.b32 	%r1137, %r744, %r745, 1;
	mov.b64 	%rd1636, {%r1137, %r1136};
	shf.r.wrap.b32 	%r1138, %r745, %r744, 8;
	shf.r.wrap.b32 	%r1139, %r744, %r745, 8;
	mov.b64 	%rd1637, {%r1139, %r1138};
	shr.u64 	%rd1638, %rd1069, 7;
	xor.b64  	%rd1639, %rd1636, %rd1638;
	xor.b64  	%rd1640, %rd1639, %rd1637;
	add.s64 	%rd1641, %rd1056, %rd1168;
	add.s64 	%rd1642, %rd1641, %rd1635;
	add.s64 	%rd1643, %rd1642, %rd1640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1140,%dummy}, %rd1630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1141}, %rd1630;
	}
	shf.r.wrap.b32 	%r1142, %r1141, %r1140, 19;
	shf.r.wrap.b32 	%r1143, %r1140, %r1141, 19;
	mov.b64 	%rd1644, {%r1143, %r1142};
	shf.l.wrap.b32 	%r1144, %r1140, %r1141, 3;
	shf.l.wrap.b32 	%r1145, %r1141, %r1140, 3;
	mov.b64 	%rd1645, {%r1145, %r1144};
	shr.u64 	%rd1646, %rd1630, 6;
	xor.b64  	%rd1647, %rd1644, %rd1646;
	xor.b64  	%rd1648, %rd1647, %rd1645;
	shf.r.wrap.b32 	%r1146, %r755, %r754, 1;
	shf.r.wrap.b32 	%r1147, %r754, %r755, 1;
	mov.b64 	%rd1649, {%r1147, %r1146};
	shf.r.wrap.b32 	%r1148, %r755, %r754, 8;
	shf.r.wrap.b32 	%r1149, %r754, %r755, 8;
	mov.b64 	%rd1650, {%r1149, %r1148};
	shr.u64 	%rd1651, %rd1077, 7;
	xor.b64  	%rd1652, %rd1649, %rd1651;
	xor.b64  	%rd1653, %rd1652, %rd1650;
	add.s64 	%rd1654, %rd1069, %rd1181;
	add.s64 	%rd1655, %rd1654, %rd1648;
	add.s64 	%rd1656, %rd1655, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1150,%dummy}, %rd1643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1151}, %rd1643;
	}
	shf.r.wrap.b32 	%r1152, %r1151, %r1150, 19;
	shf.r.wrap.b32 	%r1153, %r1150, %r1151, 19;
	mov.b64 	%rd1657, {%r1153, %r1152};
	shf.l.wrap.b32 	%r1154, %r1150, %r1151, 3;
	shf.l.wrap.b32 	%r1155, %r1151, %r1150, 3;
	mov.b64 	%rd1658, {%r1155, %r1154};
	shr.u64 	%rd1659, %rd1643, 6;
	xor.b64  	%rd1660, %rd1657, %rd1659;
	xor.b64  	%rd1661, %rd1660, %rd1658;
	shf.r.wrap.b32 	%r1156, %r765, %r764, 1;
	shf.r.wrap.b32 	%r1157, %r764, %r765, 1;
	mov.b64 	%rd1662, {%r1157, %r1156};
	shf.r.wrap.b32 	%r1158, %r765, %r764, 8;
	shf.r.wrap.b32 	%r1159, %r764, %r765, 8;
	mov.b64 	%rd1663, {%r1159, %r1158};
	shr.u64 	%rd1664, %rd1090, 7;
	xor.b64  	%rd1665, %rd1662, %rd1664;
	xor.b64  	%rd1666, %rd1665, %rd1663;
	add.s64 	%rd1667, %rd1077, %rd1194;
	add.s64 	%rd1668, %rd1667, %rd1661;
	add.s64 	%rd1669, %rd1668, %rd1666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1160,%dummy}, %rd1656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1161}, %rd1656;
	}
	shf.r.wrap.b32 	%r1162, %r1161, %r1160, 19;
	shf.r.wrap.b32 	%r1163, %r1160, %r1161, 19;
	mov.b64 	%rd1670, {%r1163, %r1162};
	shf.l.wrap.b32 	%r1164, %r1160, %r1161, 3;
	shf.l.wrap.b32 	%r1165, %r1161, %r1160, 3;
	mov.b64 	%rd1671, {%r1165, %r1164};
	shr.u64 	%rd1672, %rd1656, 6;
	xor.b64  	%rd1673, %rd1670, %rd1672;
	xor.b64  	%rd1674, %rd1673, %rd1671;
	shf.r.wrap.b32 	%r1166, %r775, %r774, 1;
	shf.r.wrap.b32 	%r1167, %r774, %r775, 1;
	mov.b64 	%rd1675, {%r1167, %r1166};
	shf.r.wrap.b32 	%r1168, %r775, %r774, 8;
	shf.r.wrap.b32 	%r1169, %r774, %r775, 8;
	mov.b64 	%rd1676, {%r1169, %r1168};
	shr.u64 	%rd1677, %rd1103, 7;
	xor.b64  	%rd1678, %rd1675, %rd1677;
	xor.b64  	%rd1679, %rd1678, %rd1676;
	add.s64 	%rd1680, %rd1090, %rd1207;
	add.s64 	%rd1681, %rd1680, %rd1674;
	add.s64 	%rd1682, %rd1681, %rd1679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1170,%dummy}, %rd1669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1171}, %rd1669;
	}
	shf.r.wrap.b32 	%r1172, %r1171, %r1170, 19;
	shf.r.wrap.b32 	%r1173, %r1170, %r1171, 19;
	mov.b64 	%rd1683, {%r1173, %r1172};
	shf.l.wrap.b32 	%r1174, %r1170, %r1171, 3;
	shf.l.wrap.b32 	%r1175, %r1171, %r1170, 3;
	mov.b64 	%rd1684, {%r1175, %r1174};
	shr.u64 	%rd1685, %rd1669, 6;
	xor.b64  	%rd1686, %rd1683, %rd1685;
	xor.b64  	%rd1687, %rd1686, %rd1684;
	shf.r.wrap.b32 	%r1176, %r785, %r784, 1;
	shf.r.wrap.b32 	%r1177, %r784, %r785, 1;
	mov.b64 	%rd1688, {%r1177, %r1176};
	shf.r.wrap.b32 	%r1178, %r785, %r784, 8;
	shf.r.wrap.b32 	%r1179, %r784, %r785, 8;
	mov.b64 	%rd1689, {%r1179, %r1178};
	shr.u64 	%rd1690, %rd1116, 7;
	xor.b64  	%rd1691, %rd1688, %rd1690;
	xor.b64  	%rd1692, %rd1691, %rd1689;
	add.s64 	%rd1693, %rd1103, %rd1220;
	add.s64 	%rd1694, %rd1693, %rd1687;
	add.s64 	%rd1695, %rd1694, %rd1692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1180,%dummy}, %rd1682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1181}, %rd1682;
	}
	shf.r.wrap.b32 	%r1182, %r1181, %r1180, 19;
	shf.r.wrap.b32 	%r1183, %r1180, %r1181, 19;
	mov.b64 	%rd1696, {%r1183, %r1182};
	shf.l.wrap.b32 	%r1184, %r1180, %r1181, 3;
	shf.l.wrap.b32 	%r1185, %r1181, %r1180, 3;
	mov.b64 	%rd1697, {%r1185, %r1184};
	shr.u64 	%rd1698, %rd1682, 6;
	xor.b64  	%rd1699, %rd1696, %rd1698;
	xor.b64  	%rd1700, %rd1699, %rd1697;
	shf.r.wrap.b32 	%r1186, %r795, %r794, 1;
	shf.r.wrap.b32 	%r1187, %r794, %r795, 1;
	mov.b64 	%rd1701, {%r1187, %r1186};
	shf.r.wrap.b32 	%r1188, %r795, %r794, 8;
	shf.r.wrap.b32 	%r1189, %r794, %r795, 8;
	mov.b64 	%rd1702, {%r1189, %r1188};
	shr.u64 	%rd1703, %rd1129, 7;
	xor.b64  	%rd1704, %rd1701, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd1702;
	add.s64 	%rd1706, %rd1617, %rd1116;
	add.s64 	%rd1707, %rd1706, %rd1700;
	add.s64 	%rd1708, %rd1707, %rd1705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1190,%dummy}, %rd1695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1191}, %rd1695;
	}
	shf.r.wrap.b32 	%r1192, %r1191, %r1190, 19;
	shf.r.wrap.b32 	%r1193, %r1190, %r1191, 19;
	mov.b64 	%rd1709, {%r1193, %r1192};
	shf.l.wrap.b32 	%r1194, %r1190, %r1191, 3;
	shf.l.wrap.b32 	%r1195, %r1191, %r1190, 3;
	mov.b64 	%rd1710, {%r1195, %r1194};
	shr.u64 	%rd1711, %rd1695, 6;
	xor.b64  	%rd1712, %rd1709, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1710;
	shf.r.wrap.b32 	%r1196, %r805, %r804, 1;
	shf.r.wrap.b32 	%r1197, %r804, %r805, 1;
	mov.b64 	%rd1714, {%r1197, %r1196};
	shf.r.wrap.b32 	%r1198, %r805, %r804, 8;
	shf.r.wrap.b32 	%r1199, %r804, %r805, 8;
	mov.b64 	%rd1715, {%r1199, %r1198};
	shr.u64 	%rd1716, %rd1142, 7;
	xor.b64  	%rd1717, %rd1714, %rd1716;
	xor.b64  	%rd1718, %rd1717, %rd1715;
	add.s64 	%rd1719, %rd1630, %rd1129;
	add.s64 	%rd1720, %rd1719, %rd1713;
	add.s64 	%rd1721, %rd1720, %rd1718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1200,%dummy}, %rd1708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1201}, %rd1708;
	}
	shf.r.wrap.b32 	%r1202, %r1201, %r1200, 19;
	shf.r.wrap.b32 	%r1203, %r1200, %r1201, 19;
	mov.b64 	%rd1722, {%r1203, %r1202};
	shf.l.wrap.b32 	%r1204, %r1200, %r1201, 3;
	shf.l.wrap.b32 	%r1205, %r1201, %r1200, 3;
	mov.b64 	%rd1723, {%r1205, %r1204};
	shr.u64 	%rd1724, %rd1708, 6;
	xor.b64  	%rd1725, %rd1722, %rd1724;
	xor.b64  	%rd1726, %rd1725, %rd1723;
	shf.r.wrap.b32 	%r1206, %r815, %r814, 1;
	shf.r.wrap.b32 	%r1207, %r814, %r815, 1;
	mov.b64 	%rd1727, {%r1207, %r1206};
	shf.r.wrap.b32 	%r1208, %r815, %r814, 8;
	shf.r.wrap.b32 	%r1209, %r814, %r815, 8;
	mov.b64 	%rd1728, {%r1209, %r1208};
	shr.u64 	%rd1729, %rd1155, 7;
	xor.b64  	%rd1730, %rd1727, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1728;
	add.s64 	%rd1732, %rd1643, %rd1142;
	add.s64 	%rd1733, %rd1732, %rd1726;
	add.s64 	%rd1734, %rd1733, %rd1731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1211}, %rd1721;
	}
	shf.r.wrap.b32 	%r1212, %r1211, %r1210, 19;
	shf.r.wrap.b32 	%r1213, %r1210, %r1211, 19;
	mov.b64 	%rd1735, {%r1213, %r1212};
	shf.l.wrap.b32 	%r1214, %r1210, %r1211, 3;
	shf.l.wrap.b32 	%r1215, %r1211, %r1210, 3;
	mov.b64 	%rd1736, {%r1215, %r1214};
	shr.u64 	%rd1737, %rd1721, 6;
	xor.b64  	%rd1738, %rd1735, %rd1737;
	xor.b64  	%rd1739, %rd1738, %rd1736;
	shf.r.wrap.b32 	%r1216, %r825, %r824, 1;
	shf.r.wrap.b32 	%r1217, %r824, %r825, 1;
	mov.b64 	%rd1740, {%r1217, %r1216};
	shf.r.wrap.b32 	%r1218, %r825, %r824, 8;
	shf.r.wrap.b32 	%r1219, %r824, %r825, 8;
	mov.b64 	%rd1741, {%r1219, %r1218};
	shr.u64 	%rd1742, %rd1168, 7;
	xor.b64  	%rd1743, %rd1740, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1741;
	add.s64 	%rd1745, %rd1656, %rd1155;
	add.s64 	%rd1746, %rd1745, %rd1739;
	add.s64 	%rd1747, %rd1746, %rd1744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1220,%dummy}, %rd1734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1221}, %rd1734;
	}
	shf.r.wrap.b32 	%r1222, %r1221, %r1220, 19;
	shf.r.wrap.b32 	%r1223, %r1220, %r1221, 19;
	mov.b64 	%rd1748, {%r1223, %r1222};
	shf.l.wrap.b32 	%r1224, %r1220, %r1221, 3;
	shf.l.wrap.b32 	%r1225, %r1221, %r1220, 3;
	mov.b64 	%rd1749, {%r1225, %r1224};
	shr.u64 	%rd1750, %rd1734, 6;
	xor.b64  	%rd1751, %rd1748, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1749;
	shf.r.wrap.b32 	%r1226, %r835, %r834, 1;
	shf.r.wrap.b32 	%r1227, %r834, %r835, 1;
	mov.b64 	%rd1753, {%r1227, %r1226};
	shf.r.wrap.b32 	%r1228, %r835, %r834, 8;
	shf.r.wrap.b32 	%r1229, %r834, %r835, 8;
	mov.b64 	%rd1754, {%r1229, %r1228};
	shr.u64 	%rd1755, %rd1181, 7;
	xor.b64  	%rd1756, %rd1753, %rd1755;
	xor.b64  	%rd1757, %rd1756, %rd1754;
	add.s64 	%rd1758, %rd1669, %rd1168;
	add.s64 	%rd1759, %rd1758, %rd1752;
	add.s64 	%rd1760, %rd1759, %rd1757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1230,%dummy}, %rd1747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1231}, %rd1747;
	}
	shf.r.wrap.b32 	%r1232, %r1231, %r1230, 19;
	shf.r.wrap.b32 	%r1233, %r1230, %r1231, 19;
	mov.b64 	%rd1761, {%r1233, %r1232};
	shf.l.wrap.b32 	%r1234, %r1230, %r1231, 3;
	shf.l.wrap.b32 	%r1235, %r1231, %r1230, 3;
	mov.b64 	%rd1762, {%r1235, %r1234};
	shr.u64 	%rd1763, %rd1747, 6;
	xor.b64  	%rd1764, %rd1761, %rd1763;
	xor.b64  	%rd1765, %rd1764, %rd1762;
	shf.r.wrap.b32 	%r1236, %r845, %r844, 1;
	shf.r.wrap.b32 	%r1237, %r844, %r845, 1;
	mov.b64 	%rd1766, {%r1237, %r1236};
	shf.r.wrap.b32 	%r1238, %r845, %r844, 8;
	shf.r.wrap.b32 	%r1239, %r844, %r845, 8;
	mov.b64 	%rd1767, {%r1239, %r1238};
	shr.u64 	%rd1768, %rd1194, 7;
	xor.b64  	%rd1769, %rd1766, %rd1768;
	xor.b64  	%rd1770, %rd1769, %rd1767;
	add.s64 	%rd1771, %rd1682, %rd1181;
	add.s64 	%rd1772, %rd1771, %rd1765;
	add.s64 	%rd1773, %rd1772, %rd1770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1240,%dummy}, %rd1760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd1760;
	}
	shf.r.wrap.b32 	%r1242, %r1241, %r1240, 19;
	shf.r.wrap.b32 	%r1243, %r1240, %r1241, 19;
	mov.b64 	%rd1774, {%r1243, %r1242};
	shf.l.wrap.b32 	%r1244, %r1240, %r1241, 3;
	shf.l.wrap.b32 	%r1245, %r1241, %r1240, 3;
	mov.b64 	%rd1775, {%r1245, %r1244};
	shr.u64 	%rd1776, %rd1760, 6;
	xor.b64  	%rd1777, %rd1774, %rd1776;
	xor.b64  	%rd1778, %rd1777, %rd1775;
	shf.r.wrap.b32 	%r1246, %r1111, %r1110, 1;
	shf.r.wrap.b32 	%r1247, %r1110, %r1111, 1;
	mov.b64 	%rd1779, {%r1247, %r1246};
	shf.r.wrap.b32 	%r1248, %r1111, %r1110, 8;
	shf.r.wrap.b32 	%r1249, %r1110, %r1111, 8;
	mov.b64 	%rd1780, {%r1249, %r1248};
	shr.u64 	%rd1781, %rd1207, 7;
	xor.b64  	%rd1782, %rd1779, %rd1781;
	xor.b64  	%rd1783, %rd1782, %rd1780;
	add.s64 	%rd1784, %rd1695, %rd1194;
	add.s64 	%rd1785, %rd1784, %rd1778;
	add.s64 	%rd1786, %rd1785, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1250,%dummy}, %rd1773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1251}, %rd1773;
	}
	shf.r.wrap.b32 	%r1252, %r1251, %r1250, 19;
	shf.r.wrap.b32 	%r1253, %r1250, %r1251, 19;
	mov.b64 	%rd1787, {%r1253, %r1252};
	shf.l.wrap.b32 	%r1254, %r1250, %r1251, 3;
	shf.l.wrap.b32 	%r1255, %r1251, %r1250, 3;
	mov.b64 	%rd1788, {%r1255, %r1254};
	shr.u64 	%rd1789, %rd1773, 6;
	xor.b64  	%rd1790, %rd1787, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1788;
	shf.r.wrap.b32 	%r1256, %r1121, %r1120, 1;
	shf.r.wrap.b32 	%r1257, %r1120, %r1121, 1;
	mov.b64 	%rd1792, {%r1257, %r1256};
	shf.r.wrap.b32 	%r1258, %r1121, %r1120, 8;
	shf.r.wrap.b32 	%r1259, %r1120, %r1121, 8;
	mov.b64 	%rd1793, {%r1259, %r1258};
	shr.u64 	%rd1794, %rd1220, 7;
	xor.b64  	%rd1795, %rd1792, %rd1794;
	xor.b64  	%rd1796, %rd1795, %rd1793;
	add.s64 	%rd1797, %rd1708, %rd1207;
	add.s64 	%rd1798, %rd1797, %rd1791;
	add.s64 	%rd1799, %rd1798, %rd1796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1260,%dummy}, %rd1786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1261}, %rd1786;
	}
	shf.r.wrap.b32 	%r1262, %r1261, %r1260, 19;
	shf.r.wrap.b32 	%r1263, %r1260, %r1261, 19;
	mov.b64 	%rd1800, {%r1263, %r1262};
	shf.l.wrap.b32 	%r1264, %r1260, %r1261, 3;
	shf.l.wrap.b32 	%r1265, %r1261, %r1260, 3;
	mov.b64 	%rd1801, {%r1265, %r1264};
	shr.u64 	%rd1802, %rd1786, 6;
	xor.b64  	%rd1803, %rd1800, %rd1802;
	xor.b64  	%rd1804, %rd1803, %rd1801;
	shf.r.wrap.b32 	%r1266, %r1131, %r1130, 1;
	shf.r.wrap.b32 	%r1267, %r1130, %r1131, 1;
	mov.b64 	%rd1805, {%r1267, %r1266};
	shf.r.wrap.b32 	%r1268, %r1131, %r1130, 8;
	shf.r.wrap.b32 	%r1269, %r1130, %r1131, 8;
	mov.b64 	%rd1806, {%r1269, %r1268};
	shr.u64 	%rd1807, %rd1617, 7;
	xor.b64  	%rd1808, %rd1805, %rd1807;
	xor.b64  	%rd1809, %rd1808, %rd1806;
	add.s64 	%rd1810, %rd1721, %rd1220;
	add.s64 	%rd1811, %rd1810, %rd1804;
	add.s64 	%rd1812, %rd1811, %rd1809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1270,%dummy}, %rd1593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1271}, %rd1593;
	}
	shf.r.wrap.b32 	%r1272, %r1271, %r1270, 14;
	shf.r.wrap.b32 	%r1273, %r1270, %r1271, 14;
	mov.b64 	%rd1813, {%r1273, %r1272};
	shf.r.wrap.b32 	%r1274, %r1271, %r1270, 18;
	shf.r.wrap.b32 	%r1275, %r1270, %r1271, 18;
	mov.b64 	%rd1814, {%r1275, %r1274};
	xor.b64  	%rd1815, %rd1814, %rd1813;
	shf.l.wrap.b32 	%r1276, %r1270, %r1271, 23;
	shf.l.wrap.b32 	%r1277, %r1271, %r1270, 23;
	mov.b64 	%rd1816, {%r1277, %r1276};
	xor.b64  	%rd1817, %rd1815, %rd1816;
	xor.b64  	%rd1818, %rd1545, %rd1569;
	and.b64  	%rd1819, %rd1818, %rd1593;
	xor.b64  	%rd1820, %rd1819, %rd1545;
	add.s64 	%rd1821, %rd1820, %rd1521;
	add.s64 	%rd1822, %rd1821, %rd1617;
	add.s64 	%rd1823, %rd1822, %rd2726;
	add.s64 	%rd1824, %rd1823, %rd1817;
	add.s64 	%rd1825, %rd1824, %rd1532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1279}, %rd1604;
	}
	shf.r.wrap.b32 	%r1280, %r1279, %r1278, 28;
	shf.r.wrap.b32 	%r1281, %r1278, %r1279, 28;
	mov.b64 	%rd1826, {%r1281, %r1280};
	shf.l.wrap.b32 	%r1282, %r1278, %r1279, 30;
	shf.l.wrap.b32 	%r1283, %r1279, %r1278, 30;
	mov.b64 	%rd1827, {%r1283, %r1282};
	xor.b64  	%rd1828, %rd1827, %rd1826;
	shf.l.wrap.b32 	%r1284, %r1278, %r1279, 25;
	shf.l.wrap.b32 	%r1285, %r1279, %r1278, 25;
	mov.b64 	%rd1829, {%r1285, %r1284};
	xor.b64  	%rd1830, %rd1828, %rd1829;
	xor.b64  	%rd1831, %rd1604, %rd1556;
	xor.b64  	%rd1832, %rd1604, %rd1580;
	and.b64  	%rd1833, %rd1832, %rd1831;
	xor.b64  	%rd1834, %rd1833, %rd1604;
	add.s64 	%rd1835, %rd1824, %rd1834;
	add.s64 	%rd1836, %rd1835, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1286,%dummy}, %rd1825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1287}, %rd1825;
	}
	shf.r.wrap.b32 	%r1288, %r1287, %r1286, 14;
	shf.r.wrap.b32 	%r1289, %r1286, %r1287, 14;
	mov.b64 	%rd1837, {%r1289, %r1288};
	shf.r.wrap.b32 	%r1290, %r1287, %r1286, 18;
	shf.r.wrap.b32 	%r1291, %r1286, %r1287, 18;
	mov.b64 	%rd1838, {%r1291, %r1290};
	xor.b64  	%rd1839, %rd1838, %rd1837;
	shf.l.wrap.b32 	%r1292, %r1286, %r1287, 23;
	shf.l.wrap.b32 	%r1293, %r1287, %r1286, 23;
	mov.b64 	%rd1840, {%r1293, %r1292};
	xor.b64  	%rd1841, %rd1839, %rd1840;
	xor.b64  	%rd1842, %rd1569, %rd1593;
	and.b64  	%rd1843, %rd1825, %rd1842;
	xor.b64  	%rd1844, %rd1843, %rd1569;
	add.s64 	%rd1845, %rd1630, %rd1545;
	add.s64 	%rd1846, %rd1845, %rd2727;
	add.s64 	%rd1847, %rd1846, %rd1844;
	add.s64 	%rd1848, %rd1847, %rd1841;
	add.s64 	%rd1849, %rd1848, %rd1556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1294,%dummy}, %rd1836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1295}, %rd1836;
	}
	shf.r.wrap.b32 	%r1296, %r1295, %r1294, 28;
	shf.r.wrap.b32 	%r1297, %r1294, %r1295, 28;
	mov.b64 	%rd1850, {%r1297, %r1296};
	shf.l.wrap.b32 	%r1298, %r1294, %r1295, 30;
	shf.l.wrap.b32 	%r1299, %r1295, %r1294, 30;
	mov.b64 	%rd1851, {%r1299, %r1298};
	xor.b64  	%rd1852, %rd1851, %rd1850;
	shf.l.wrap.b32 	%r1300, %r1294, %r1295, 25;
	shf.l.wrap.b32 	%r1301, %r1295, %r1294, 25;
	mov.b64 	%rd1853, {%r1301, %r1300};
	xor.b64  	%rd1854, %rd1852, %rd1853;
	xor.b64  	%rd1855, %rd1836, %rd1580;
	xor.b64  	%rd1856, %rd1836, %rd1604;
	and.b64  	%rd1857, %rd1856, %rd1855;
	xor.b64  	%rd1858, %rd1857, %rd1836;
	add.s64 	%rd1859, %rd1848, %rd1858;
	add.s64 	%rd1860, %rd1859, %rd1854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1302,%dummy}, %rd1849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1303}, %rd1849;
	}
	shf.r.wrap.b32 	%r1304, %r1303, %r1302, 14;
	shf.r.wrap.b32 	%r1305, %r1302, %r1303, 14;
	mov.b64 	%rd1861, {%r1305, %r1304};
	shf.r.wrap.b32 	%r1306, %r1303, %r1302, 18;
	shf.r.wrap.b32 	%r1307, %r1302, %r1303, 18;
	mov.b64 	%rd1862, {%r1307, %r1306};
	xor.b64  	%rd1863, %rd1862, %rd1861;
	shf.l.wrap.b32 	%r1308, %r1302, %r1303, 23;
	shf.l.wrap.b32 	%r1309, %r1303, %r1302, 23;
	mov.b64 	%rd1864, {%r1309, %r1308};
	xor.b64  	%rd1865, %rd1863, %rd1864;
	xor.b64  	%rd1866, %rd1825, %rd1593;
	and.b64  	%rd1867, %rd1849, %rd1866;
	xor.b64  	%rd1868, %rd1867, %rd1593;
	add.s64 	%rd1869, %rd1643, %rd1569;
	add.s64 	%rd1870, %rd1869, %rd2728;
	add.s64 	%rd1871, %rd1870, %rd1868;
	add.s64 	%rd1872, %rd1871, %rd1865;
	add.s64 	%rd1873, %rd1872, %rd1580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd1860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1311}, %rd1860;
	}
	shf.r.wrap.b32 	%r1312, %r1311, %r1310, 28;
	shf.r.wrap.b32 	%r1313, %r1310, %r1311, 28;
	mov.b64 	%rd1874, {%r1313, %r1312};
	shf.l.wrap.b32 	%r1314, %r1310, %r1311, 30;
	shf.l.wrap.b32 	%r1315, %r1311, %r1310, 30;
	mov.b64 	%rd1875, {%r1315, %r1314};
	xor.b64  	%rd1876, %rd1875, %rd1874;
	shf.l.wrap.b32 	%r1316, %r1310, %r1311, 25;
	shf.l.wrap.b32 	%r1317, %r1311, %r1310, 25;
	mov.b64 	%rd1877, {%r1317, %r1316};
	xor.b64  	%rd1878, %rd1876, %rd1877;
	xor.b64  	%rd1879, %rd1860, %rd1604;
	xor.b64  	%rd1880, %rd1860, %rd1836;
	and.b64  	%rd1881, %rd1880, %rd1879;
	xor.b64  	%rd1882, %rd1881, %rd1860;
	add.s64 	%rd1883, %rd1872, %rd1882;
	add.s64 	%rd1884, %rd1883, %rd1878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd1873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd1873;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 14;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 14;
	mov.b64 	%rd1885, {%r1321, %r1320};
	shf.r.wrap.b32 	%r1322, %r1319, %r1318, 18;
	shf.r.wrap.b32 	%r1323, %r1318, %r1319, 18;
	mov.b64 	%rd1886, {%r1323, %r1322};
	xor.b64  	%rd1887, %rd1886, %rd1885;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 23;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 23;
	mov.b64 	%rd1888, {%r1325, %r1324};
	xor.b64  	%rd1889, %rd1887, %rd1888;
	xor.b64  	%rd1890, %rd1849, %rd1825;
	and.b64  	%rd1891, %rd1873, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1825;
	add.s64 	%rd1893, %rd1656, %rd1593;
	add.s64 	%rd1894, %rd1893, %rd2729;
	add.s64 	%rd1895, %rd1894, %rd1892;
	add.s64 	%rd1896, %rd1895, %rd1889;
	add.s64 	%rd1897, %rd1896, %rd1604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd1884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd1884;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 28;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 28;
	mov.b64 	%rd1898, {%r1329, %r1328};
	shf.l.wrap.b32 	%r1330, %r1326, %r1327, 30;
	shf.l.wrap.b32 	%r1331, %r1327, %r1326, 30;
	mov.b64 	%rd1899, {%r1331, %r1330};
	xor.b64  	%rd1900, %rd1899, %rd1898;
	shf.l.wrap.b32 	%r1332, %r1326, %r1327, 25;
	shf.l.wrap.b32 	%r1333, %r1327, %r1326, 25;
	mov.b64 	%rd1901, {%r1333, %r1332};
	xor.b64  	%rd1902, %rd1900, %rd1901;
	xor.b64  	%rd1903, %rd1884, %rd1836;
	xor.b64  	%rd1904, %rd1884, %rd1860;
	and.b64  	%rd1905, %rd1904, %rd1903;
	xor.b64  	%rd1906, %rd1905, %rd1884;
	add.s64 	%rd1907, %rd1896, %rd1906;
	add.s64 	%rd1908, %rd1907, %rd1902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd1897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd1897;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 14;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 14;
	mov.b64 	%rd1909, {%r1337, %r1336};
	shf.r.wrap.b32 	%r1338, %r1335, %r1334, 18;
	shf.r.wrap.b32 	%r1339, %r1334, %r1335, 18;
	mov.b64 	%rd1910, {%r1339, %r1338};
	xor.b64  	%rd1911, %rd1910, %rd1909;
	shf.l.wrap.b32 	%r1340, %r1334, %r1335, 23;
	shf.l.wrap.b32 	%r1341, %r1335, %r1334, 23;
	mov.b64 	%rd1912, {%r1341, %r1340};
	xor.b64  	%rd1913, %rd1911, %rd1912;
	xor.b64  	%rd1914, %rd1873, %rd1849;
	and.b64  	%rd1915, %rd1897, %rd1914;
	xor.b64  	%rd1916, %rd1915, %rd1849;
	add.s64 	%rd1917, %rd1825, %rd1669;
	add.s64 	%rd1918, %rd1917, %rd2730;
	add.s64 	%rd1919, %rd1918, %rd1916;
	add.s64 	%rd1920, %rd1919, %rd1913;
	add.s64 	%rd1921, %rd1920, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd1908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd1908;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 28;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 28;
	mov.b64 	%rd1922, {%r1345, %r1344};
	shf.l.wrap.b32 	%r1346, %r1342, %r1343, 30;
	shf.l.wrap.b32 	%r1347, %r1343, %r1342, 30;
	mov.b64 	%rd1923, {%r1347, %r1346};
	xor.b64  	%rd1924, %rd1923, %rd1922;
	shf.l.wrap.b32 	%r1348, %r1342, %r1343, 25;
	shf.l.wrap.b32 	%r1349, %r1343, %r1342, 25;
	mov.b64 	%rd1925, {%r1349, %r1348};
	xor.b64  	%rd1926, %rd1924, %rd1925;
	xor.b64  	%rd1927, %rd1908, %rd1860;
	xor.b64  	%rd1928, %rd1908, %rd1884;
	and.b64  	%rd1929, %rd1928, %rd1927;
	xor.b64  	%rd1930, %rd1929, %rd1908;
	add.s64 	%rd1931, %rd1920, %rd1930;
	add.s64 	%rd1932, %rd1931, %rd1926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd1921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1351}, %rd1921;
	}
	shf.r.wrap.b32 	%r1352, %r1351, %r1350, 14;
	shf.r.wrap.b32 	%r1353, %r1350, %r1351, 14;
	mov.b64 	%rd1933, {%r1353, %r1352};
	shf.r.wrap.b32 	%r1354, %r1351, %r1350, 18;
	shf.r.wrap.b32 	%r1355, %r1350, %r1351, 18;
	mov.b64 	%rd1934, {%r1355, %r1354};
	xor.b64  	%rd1935, %rd1934, %rd1933;
	shf.l.wrap.b32 	%r1356, %r1350, %r1351, 23;
	shf.l.wrap.b32 	%r1357, %r1351, %r1350, 23;
	mov.b64 	%rd1936, {%r1357, %r1356};
	xor.b64  	%rd1937, %rd1935, %rd1936;
	xor.b64  	%rd1938, %rd1897, %rd1873;
	and.b64  	%rd1939, %rd1921, %rd1938;
	xor.b64  	%rd1940, %rd1939, %rd1873;
	add.s64 	%rd1941, %rd1849, %rd1682;
	add.s64 	%rd1942, %rd1941, %rd2731;
	add.s64 	%rd1943, %rd1942, %rd1940;
	add.s64 	%rd1944, %rd1943, %rd1937;
	add.s64 	%rd1945, %rd1944, %rd1860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd1932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd1932;
	}
	shf.r.wrap.b32 	%r1360, %r1359, %r1358, 28;
	shf.r.wrap.b32 	%r1361, %r1358, %r1359, 28;
	mov.b64 	%rd1946, {%r1361, %r1360};
	shf.l.wrap.b32 	%r1362, %r1358, %r1359, 30;
	shf.l.wrap.b32 	%r1363, %r1359, %r1358, 30;
	mov.b64 	%rd1947, {%r1363, %r1362};
	xor.b64  	%rd1948, %rd1947, %rd1946;
	shf.l.wrap.b32 	%r1364, %r1358, %r1359, 25;
	shf.l.wrap.b32 	%r1365, %r1359, %r1358, 25;
	mov.b64 	%rd1949, {%r1365, %r1364};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	xor.b64  	%rd1951, %rd1932, %rd1884;
	xor.b64  	%rd1952, %rd1932, %rd1908;
	and.b64  	%rd1953, %rd1952, %rd1951;
	xor.b64  	%rd1954, %rd1953, %rd1932;
	add.s64 	%rd1955, %rd1944, %rd1954;
	add.s64 	%rd1956, %rd1955, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd1945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1367}, %rd1945;
	}
	shf.r.wrap.b32 	%r1368, %r1367, %r1366, 14;
	shf.r.wrap.b32 	%r1369, %r1366, %r1367, 14;
	mov.b64 	%rd1957, {%r1369, %r1368};
	shf.r.wrap.b32 	%r1370, %r1367, %r1366, 18;
	shf.r.wrap.b32 	%r1371, %r1366, %r1367, 18;
	mov.b64 	%rd1958, {%r1371, %r1370};
	xor.b64  	%rd1959, %rd1958, %rd1957;
	shf.l.wrap.b32 	%r1372, %r1366, %r1367, 23;
	shf.l.wrap.b32 	%r1373, %r1367, %r1366, 23;
	mov.b64 	%rd1960, {%r1373, %r1372};
	xor.b64  	%rd1961, %rd1959, %rd1960;
	xor.b64  	%rd1962, %rd1921, %rd1897;
	and.b64  	%rd1963, %rd1945, %rd1962;
	xor.b64  	%rd1964, %rd1963, %rd1897;
	add.s64 	%rd1965, %rd1873, %rd1695;
	add.s64 	%rd1966, %rd1965, %rd2732;
	add.s64 	%rd1967, %rd1966, %rd1964;
	add.s64 	%rd1968, %rd1967, %rd1961;
	add.s64 	%rd1969, %rd1968, %rd1884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1374,%dummy}, %rd1956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1375}, %rd1956;
	}
	shf.r.wrap.b32 	%r1376, %r1375, %r1374, 28;
	shf.r.wrap.b32 	%r1377, %r1374, %r1375, 28;
	mov.b64 	%rd1970, {%r1377, %r1376};
	shf.l.wrap.b32 	%r1378, %r1374, %r1375, 30;
	shf.l.wrap.b32 	%r1379, %r1375, %r1374, 30;
	mov.b64 	%rd1971, {%r1379, %r1378};
	xor.b64  	%rd1972, %rd1971, %rd1970;
	shf.l.wrap.b32 	%r1380, %r1374, %r1375, 25;
	shf.l.wrap.b32 	%r1381, %r1375, %r1374, 25;
	mov.b64 	%rd1973, {%r1381, %r1380};
	xor.b64  	%rd1974, %rd1972, %rd1973;
	xor.b64  	%rd1975, %rd1956, %rd1908;
	xor.b64  	%rd1976, %rd1956, %rd1932;
	and.b64  	%rd1977, %rd1976, %rd1975;
	xor.b64  	%rd1978, %rd1977, %rd1956;
	add.s64 	%rd1979, %rd1968, %rd1978;
	add.s64 	%rd1980, %rd1979, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd1969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1383}, %rd1969;
	}
	shf.r.wrap.b32 	%r1384, %r1383, %r1382, 14;
	shf.r.wrap.b32 	%r1385, %r1382, %r1383, 14;
	mov.b64 	%rd1981, {%r1385, %r1384};
	shf.r.wrap.b32 	%r1386, %r1383, %r1382, 18;
	shf.r.wrap.b32 	%r1387, %r1382, %r1383, 18;
	mov.b64 	%rd1982, {%r1387, %r1386};
	xor.b64  	%rd1983, %rd1982, %rd1981;
	shf.l.wrap.b32 	%r1388, %r1382, %r1383, 23;
	shf.l.wrap.b32 	%r1389, %r1383, %r1382, 23;
	mov.b64 	%rd1984, {%r1389, %r1388};
	xor.b64  	%rd1985, %rd1983, %rd1984;
	xor.b64  	%rd1986, %rd1945, %rd1921;
	and.b64  	%rd1987, %rd1969, %rd1986;
	xor.b64  	%rd1988, %rd1987, %rd1921;
	add.s64 	%rd1989, %rd1897, %rd1708;
	add.s64 	%rd1990, %rd1989, %rd2733;
	add.s64 	%rd1991, %rd1990, %rd1988;
	add.s64 	%rd1992, %rd1991, %rd1985;
	add.s64 	%rd1993, %rd1992, %rd1908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd1980;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 28;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 28;
	mov.b64 	%rd1994, {%r1393, %r1392};
	shf.l.wrap.b32 	%r1394, %r1390, %r1391, 30;
	shf.l.wrap.b32 	%r1395, %r1391, %r1390, 30;
	mov.b64 	%rd1995, {%r1395, %r1394};
	xor.b64  	%rd1996, %rd1995, %rd1994;
	shf.l.wrap.b32 	%r1396, %r1390, %r1391, 25;
	shf.l.wrap.b32 	%r1397, %r1391, %r1390, 25;
	mov.b64 	%rd1997, {%r1397, %r1396};
	xor.b64  	%rd1998, %rd1996, %rd1997;
	xor.b64  	%rd1999, %rd1980, %rd1932;
	xor.b64  	%rd2000, %rd1980, %rd1956;
	and.b64  	%rd2001, %rd2000, %rd1999;
	xor.b64  	%rd2002, %rd2001, %rd1980;
	add.s64 	%rd2003, %rd1992, %rd2002;
	add.s64 	%rd2004, %rd2003, %rd1998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd1993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1399}, %rd1993;
	}
	shf.r.wrap.b32 	%r1400, %r1399, %r1398, 14;
	shf.r.wrap.b32 	%r1401, %r1398, %r1399, 14;
	mov.b64 	%rd2005, {%r1401, %r1400};
	shf.r.wrap.b32 	%r1402, %r1399, %r1398, 18;
	shf.r.wrap.b32 	%r1403, %r1398, %r1399, 18;
	mov.b64 	%rd2006, {%r1403, %r1402};
	xor.b64  	%rd2007, %rd2006, %rd2005;
	shf.l.wrap.b32 	%r1404, %r1398, %r1399, 23;
	shf.l.wrap.b32 	%r1405, %r1399, %r1398, 23;
	mov.b64 	%rd2008, {%r1405, %r1404};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	xor.b64  	%rd2010, %rd1969, %rd1945;
	and.b64  	%rd2011, %rd1993, %rd2010;
	xor.b64  	%rd2012, %rd2011, %rd1945;
	add.s64 	%rd2013, %rd1921, %rd1721;
	add.s64 	%rd2014, %rd2013, %rd2734;
	add.s64 	%rd2015, %rd2014, %rd2012;
	add.s64 	%rd2016, %rd2015, %rd2009;
	add.s64 	%rd2017, %rd2016, %rd1932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd2004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd2004;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 28;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 28;
	mov.b64 	%rd2018, {%r1409, %r1408};
	shf.l.wrap.b32 	%r1410, %r1406, %r1407, 30;
	shf.l.wrap.b32 	%r1411, %r1407, %r1406, 30;
	mov.b64 	%rd2019, {%r1411, %r1410};
	xor.b64  	%rd2020, %rd2019, %rd2018;
	shf.l.wrap.b32 	%r1412, %r1406, %r1407, 25;
	shf.l.wrap.b32 	%r1413, %r1407, %r1406, 25;
	mov.b64 	%rd2021, {%r1413, %r1412};
	xor.b64  	%rd2022, %rd2020, %rd2021;
	xor.b64  	%rd2023, %rd2004, %rd1956;
	xor.b64  	%rd2024, %rd2004, %rd1980;
	and.b64  	%rd2025, %rd2024, %rd2023;
	xor.b64  	%rd2026, %rd2025, %rd2004;
	add.s64 	%rd2027, %rd2016, %rd2026;
	add.s64 	%rd2028, %rd2027, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd2017;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 14;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 14;
	mov.b64 	%rd2029, {%r1417, %r1416};
	shf.r.wrap.b32 	%r1418, %r1415, %r1414, 18;
	shf.r.wrap.b32 	%r1419, %r1414, %r1415, 18;
	mov.b64 	%rd2030, {%r1419, %r1418};
	xor.b64  	%rd2031, %rd2030, %rd2029;
	shf.l.wrap.b32 	%r1420, %r1414, %r1415, 23;
	shf.l.wrap.b32 	%r1421, %r1415, %r1414, 23;
	mov.b64 	%rd2032, {%r1421, %r1420};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	xor.b64  	%rd2034, %rd1993, %rd1969;
	and.b64  	%rd2035, %rd2017, %rd2034;
	xor.b64  	%rd2036, %rd2035, %rd1969;
	add.s64 	%rd2037, %rd1945, %rd1734;
	add.s64 	%rd2038, %rd2037, %rd2735;
	add.s64 	%rd2039, %rd2038, %rd2036;
	add.s64 	%rd2040, %rd2039, %rd2033;
	add.s64 	%rd2041, %rd2040, %rd1956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd2028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd2028;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 28;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 28;
	mov.b64 	%rd2042, {%r1425, %r1424};
	shf.l.wrap.b32 	%r1426, %r1422, %r1423, 30;
	shf.l.wrap.b32 	%r1427, %r1423, %r1422, 30;
	mov.b64 	%rd2043, {%r1427, %r1426};
	xor.b64  	%rd2044, %rd2043, %rd2042;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 25;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 25;
	mov.b64 	%rd2045, {%r1429, %r1428};
	xor.b64  	%rd2046, %rd2044, %rd2045;
	xor.b64  	%rd2047, %rd2028, %rd1980;
	xor.b64  	%rd2048, %rd2028, %rd2004;
	and.b64  	%rd2049, %rd2048, %rd2047;
	xor.b64  	%rd2050, %rd2049, %rd2028;
	add.s64 	%rd2051, %rd2040, %rd2050;
	add.s64 	%rd2052, %rd2051, %rd2046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd2041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd2041;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 14;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 14;
	mov.b64 	%rd2053, {%r1433, %r1432};
	shf.r.wrap.b32 	%r1434, %r1431, %r1430, 18;
	shf.r.wrap.b32 	%r1435, %r1430, %r1431, 18;
	mov.b64 	%rd2054, {%r1435, %r1434};
	xor.b64  	%rd2055, %rd2054, %rd2053;
	shf.l.wrap.b32 	%r1436, %r1430, %r1431, 23;
	shf.l.wrap.b32 	%r1437, %r1431, %r1430, 23;
	mov.b64 	%rd2056, {%r1437, %r1436};
	xor.b64  	%rd2057, %rd2055, %rd2056;
	xor.b64  	%rd2058, %rd2017, %rd1993;
	and.b64  	%rd2059, %rd2041, %rd2058;
	xor.b64  	%rd2060, %rd2059, %rd1993;
	add.s64 	%rd2061, %rd1969, %rd1747;
	add.s64 	%rd2062, %rd2061, %rd2736;
	add.s64 	%rd2063, %rd2062, %rd2060;
	add.s64 	%rd2064, %rd2063, %rd2057;
	add.s64 	%rd2065, %rd2064, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd2052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd2052;
	}
	shf.r.wrap.b32 	%r1440, %r1439, %r1438, 28;
	shf.r.wrap.b32 	%r1441, %r1438, %r1439, 28;
	mov.b64 	%rd2066, {%r1441, %r1440};
	shf.l.wrap.b32 	%r1442, %r1438, %r1439, 30;
	shf.l.wrap.b32 	%r1443, %r1439, %r1438, 30;
	mov.b64 	%rd2067, {%r1443, %r1442};
	xor.b64  	%rd2068, %rd2067, %rd2066;
	shf.l.wrap.b32 	%r1444, %r1438, %r1439, 25;
	shf.l.wrap.b32 	%r1445, %r1439, %r1438, 25;
	mov.b64 	%rd2069, {%r1445, %r1444};
	xor.b64  	%rd2070, %rd2068, %rd2069;
	xor.b64  	%rd2071, %rd2052, %rd2004;
	xor.b64  	%rd2072, %rd2052, %rd2028;
	and.b64  	%rd2073, %rd2072, %rd2071;
	xor.b64  	%rd2074, %rd2073, %rd2052;
	add.s64 	%rd2075, %rd2064, %rd2074;
	add.s64 	%rd2076, %rd2075, %rd2070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1446,%dummy}, %rd2065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1447}, %rd2065;
	}
	shf.r.wrap.b32 	%r1448, %r1447, %r1446, 14;
	shf.r.wrap.b32 	%r1449, %r1446, %r1447, 14;
	mov.b64 	%rd2077, {%r1449, %r1448};
	shf.r.wrap.b32 	%r1450, %r1447, %r1446, 18;
	shf.r.wrap.b32 	%r1451, %r1446, %r1447, 18;
	mov.b64 	%rd2078, {%r1451, %r1450};
	xor.b64  	%rd2079, %rd2078, %rd2077;
	shf.l.wrap.b32 	%r1452, %r1446, %r1447, 23;
	shf.l.wrap.b32 	%r1453, %r1447, %r1446, 23;
	mov.b64 	%rd2080, {%r1453, %r1452};
	xor.b64  	%rd2081, %rd2079, %rd2080;
	xor.b64  	%rd2082, %rd2041, %rd2017;
	and.b64  	%rd2083, %rd2065, %rd2082;
	xor.b64  	%rd2084, %rd2083, %rd2017;
	add.s64 	%rd2085, %rd1993, %rd1760;
	add.s64 	%rd2086, %rd2085, %rd2737;
	add.s64 	%rd2087, %rd2086, %rd2084;
	add.s64 	%rd2088, %rd2087, %rd2081;
	add.s64 	%rd2089, %rd2088, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd2076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd2076;
	}
	shf.r.wrap.b32 	%r1456, %r1455, %r1454, 28;
	shf.r.wrap.b32 	%r1457, %r1454, %r1455, 28;
	mov.b64 	%rd2090, {%r1457, %r1456};
	shf.l.wrap.b32 	%r1458, %r1454, %r1455, 30;
	shf.l.wrap.b32 	%r1459, %r1455, %r1454, 30;
	mov.b64 	%rd2091, {%r1459, %r1458};
	xor.b64  	%rd2092, %rd2091, %rd2090;
	shf.l.wrap.b32 	%r1460, %r1454, %r1455, 25;
	shf.l.wrap.b32 	%r1461, %r1455, %r1454, 25;
	mov.b64 	%rd2093, {%r1461, %r1460};
	xor.b64  	%rd2094, %rd2092, %rd2093;
	xor.b64  	%rd2095, %rd2076, %rd2028;
	xor.b64  	%rd2096, %rd2076, %rd2052;
	and.b64  	%rd2097, %rd2096, %rd2095;
	xor.b64  	%rd2098, %rd2097, %rd2076;
	add.s64 	%rd2099, %rd2088, %rd2098;
	add.s64 	%rd2100, %rd2099, %rd2094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd2089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd2089;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 14;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 14;
	mov.b64 	%rd2101, {%r1465, %r1464};
	shf.r.wrap.b32 	%r1466, %r1463, %r1462, 18;
	shf.r.wrap.b32 	%r1467, %r1462, %r1463, 18;
	mov.b64 	%rd2102, {%r1467, %r1466};
	xor.b64  	%rd2103, %rd2102, %rd2101;
	shf.l.wrap.b32 	%r1468, %r1462, %r1463, 23;
	shf.l.wrap.b32 	%r1469, %r1463, %r1462, 23;
	mov.b64 	%rd2104, {%r1469, %r1468};
	xor.b64  	%rd2105, %rd2103, %rd2104;
	xor.b64  	%rd2106, %rd2065, %rd2041;
	and.b64  	%rd2107, %rd2089, %rd2106;
	xor.b64  	%rd2108, %rd2107, %rd2041;
	add.s64 	%rd2109, %rd2017, %rd1773;
	add.s64 	%rd2110, %rd2109, %rd2738;
	add.s64 	%rd2111, %rd2110, %rd2108;
	add.s64 	%rd2112, %rd2111, %rd2105;
	add.s64 	%rd2113, %rd2112, %rd2028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd2100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1471}, %rd2100;
	}
	shf.r.wrap.b32 	%r1472, %r1471, %r1470, 28;
	shf.r.wrap.b32 	%r1473, %r1470, %r1471, 28;
	mov.b64 	%rd2114, {%r1473, %r1472};
	shf.l.wrap.b32 	%r1474, %r1470, %r1471, 30;
	shf.l.wrap.b32 	%r1475, %r1471, %r1470, 30;
	mov.b64 	%rd2115, {%r1475, %r1474};
	xor.b64  	%rd2116, %rd2115, %rd2114;
	shf.l.wrap.b32 	%r1476, %r1470, %r1471, 25;
	shf.l.wrap.b32 	%r1477, %r1471, %r1470, 25;
	mov.b64 	%rd2117, {%r1477, %r1476};
	xor.b64  	%rd2118, %rd2116, %rd2117;
	xor.b64  	%rd2119, %rd2100, %rd2052;
	xor.b64  	%rd2120, %rd2100, %rd2076;
	and.b64  	%rd2121, %rd2120, %rd2119;
	xor.b64  	%rd2122, %rd2121, %rd2100;
	add.s64 	%rd2123, %rd2112, %rd2122;
	add.s64 	%rd2124, %rd2123, %rd2118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1478,%dummy}, %rd2113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1479}, %rd2113;
	}
	shf.r.wrap.b32 	%r1480, %r1479, %r1478, 14;
	shf.r.wrap.b32 	%r1481, %r1478, %r1479, 14;
	mov.b64 	%rd2125, {%r1481, %r1480};
	shf.r.wrap.b32 	%r1482, %r1479, %r1478, 18;
	shf.r.wrap.b32 	%r1483, %r1478, %r1479, 18;
	mov.b64 	%rd2126, {%r1483, %r1482};
	xor.b64  	%rd2127, %rd2126, %rd2125;
	shf.l.wrap.b32 	%r1484, %r1478, %r1479, 23;
	shf.l.wrap.b32 	%r1485, %r1479, %r1478, 23;
	mov.b64 	%rd2128, {%r1485, %r1484};
	xor.b64  	%rd2129, %rd2127, %rd2128;
	xor.b64  	%rd2130, %rd2089, %rd2065;
	and.b64  	%rd2131, %rd2113, %rd2130;
	xor.b64  	%rd2132, %rd2131, %rd2065;
	add.s64 	%rd2133, %rd2041, %rd1786;
	add.s64 	%rd2134, %rd2133, %rd2739;
	add.s64 	%rd2135, %rd2134, %rd2132;
	add.s64 	%rd2136, %rd2135, %rd2129;
	add.s64 	%rd2137, %rd2136, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd2124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1487}, %rd2124;
	}
	shf.r.wrap.b32 	%r1488, %r1487, %r1486, 28;
	shf.r.wrap.b32 	%r1489, %r1486, %r1487, 28;
	mov.b64 	%rd2138, {%r1489, %r1488};
	shf.l.wrap.b32 	%r1490, %r1486, %r1487, 30;
	shf.l.wrap.b32 	%r1491, %r1487, %r1486, 30;
	mov.b64 	%rd2139, {%r1491, %r1490};
	xor.b64  	%rd2140, %rd2139, %rd2138;
	shf.l.wrap.b32 	%r1492, %r1486, %r1487, 25;
	shf.l.wrap.b32 	%r1493, %r1487, %r1486, 25;
	mov.b64 	%rd2141, {%r1493, %r1492};
	xor.b64  	%rd2142, %rd2140, %rd2141;
	xor.b64  	%rd2143, %rd2124, %rd2076;
	xor.b64  	%rd2144, %rd2124, %rd2100;
	and.b64  	%rd2145, %rd2144, %rd2143;
	xor.b64  	%rd2146, %rd2145, %rd2124;
	add.s64 	%rd2147, %rd2136, %rd2146;
	add.s64 	%rd2148, %rd2147, %rd2142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1494,%dummy}, %rd2137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1495}, %rd2137;
	}
	shf.r.wrap.b32 	%r1496, %r1495, %r1494, 14;
	shf.r.wrap.b32 	%r1497, %r1494, %r1495, 14;
	mov.b64 	%rd2149, {%r1497, %r1496};
	shf.r.wrap.b32 	%r1498, %r1495, %r1494, 18;
	shf.r.wrap.b32 	%r1499, %r1494, %r1495, 18;
	mov.b64 	%rd2150, {%r1499, %r1498};
	xor.b64  	%rd2151, %rd2150, %rd2149;
	shf.l.wrap.b32 	%r1500, %r1494, %r1495, 23;
	shf.l.wrap.b32 	%r1501, %r1495, %r1494, 23;
	mov.b64 	%rd2152, {%r1501, %r1500};
	xor.b64  	%rd2153, %rd2151, %rd2152;
	xor.b64  	%rd2154, %rd2113, %rd2089;
	and.b64  	%rd2155, %rd2137, %rd2154;
	xor.b64  	%rd2156, %rd2155, %rd2089;
	add.s64 	%rd2157, %rd2065, %rd1799;
	add.s64 	%rd2158, %rd2157, %rd2740;
	add.s64 	%rd2159, %rd2158, %rd2156;
	add.s64 	%rd2160, %rd2159, %rd2153;
	add.s64 	%rd2161, %rd2160, %rd2076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1502,%dummy}, %rd2148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1503}, %rd2148;
	}
	shf.r.wrap.b32 	%r1504, %r1503, %r1502, 28;
	shf.r.wrap.b32 	%r1505, %r1502, %r1503, 28;
	mov.b64 	%rd2162, {%r1505, %r1504};
	shf.l.wrap.b32 	%r1506, %r1502, %r1503, 30;
	shf.l.wrap.b32 	%r1507, %r1503, %r1502, 30;
	mov.b64 	%rd2163, {%r1507, %r1506};
	xor.b64  	%rd2164, %rd2163, %rd2162;
	shf.l.wrap.b32 	%r1508, %r1502, %r1503, 25;
	shf.l.wrap.b32 	%r1509, %r1503, %r1502, 25;
	mov.b64 	%rd2165, {%r1509, %r1508};
	xor.b64  	%rd2166, %rd2164, %rd2165;
	xor.b64  	%rd2167, %rd2148, %rd2100;
	xor.b64  	%rd2168, %rd2148, %rd2124;
	and.b64  	%rd2169, %rd2168, %rd2167;
	xor.b64  	%rd2170, %rd2169, %rd2148;
	add.s64 	%rd2171, %rd2160, %rd2170;
	add.s64 	%rd2172, %rd2171, %rd2166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1510,%dummy}, %rd2161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1511}, %rd2161;
	}
	shf.r.wrap.b32 	%r1512, %r1511, %r1510, 14;
	shf.r.wrap.b32 	%r1513, %r1510, %r1511, 14;
	mov.b64 	%rd2173, {%r1513, %r1512};
	shf.r.wrap.b32 	%r1514, %r1511, %r1510, 18;
	shf.r.wrap.b32 	%r1515, %r1510, %r1511, 18;
	mov.b64 	%rd2174, {%r1515, %r1514};
	xor.b64  	%rd2175, %rd2174, %rd2173;
	shf.l.wrap.b32 	%r1516, %r1510, %r1511, 23;
	shf.l.wrap.b32 	%r1517, %r1511, %r1510, 23;
	mov.b64 	%rd2176, {%r1517, %r1516};
	xor.b64  	%rd2177, %rd2175, %rd2176;
	xor.b64  	%rd2178, %rd2137, %rd2113;
	and.b64  	%rd2179, %rd2161, %rd2178;
	xor.b64  	%rd2180, %rd2179, %rd2113;
	add.s64 	%rd2181, %rd2089, %rd1812;
	add.s64 	%rd2182, %rd2181, %rd2741;
	add.s64 	%rd2183, %rd2182, %rd2180;
	add.s64 	%rd2184, %rd2183, %rd2177;
	add.s64 	%rd2185, %rd2184, %rd2100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd2172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1519}, %rd2172;
	}
	shf.r.wrap.b32 	%r1520, %r1519, %r1518, 28;
	shf.r.wrap.b32 	%r1521, %r1518, %r1519, 28;
	mov.b64 	%rd2186, {%r1521, %r1520};
	shf.l.wrap.b32 	%r1522, %r1518, %r1519, 30;
	shf.l.wrap.b32 	%r1523, %r1519, %r1518, 30;
	mov.b64 	%rd2187, {%r1523, %r1522};
	xor.b64  	%rd2188, %rd2187, %rd2186;
	shf.l.wrap.b32 	%r1524, %r1518, %r1519, 25;
	shf.l.wrap.b32 	%r1525, %r1519, %r1518, 25;
	mov.b64 	%rd2189, {%r1525, %r1524};
	xor.b64  	%rd2190, %rd2188, %rd2189;
	xor.b64  	%rd2191, %rd2172, %rd2124;
	xor.b64  	%rd2192, %rd2172, %rd2148;
	and.b64  	%rd2193, %rd2192, %rd2191;
	xor.b64  	%rd2194, %rd2193, %rd2172;
	add.s64 	%rd2195, %rd2184, %rd2194;
	add.s64 	%rd2196, %rd2195, %rd2190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1526,%dummy}, %rd1799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1527}, %rd1799;
	}
	shf.r.wrap.b32 	%r1528, %r1527, %r1526, 19;
	shf.r.wrap.b32 	%r1529, %r1526, %r1527, 19;
	mov.b64 	%rd2197, {%r1529, %r1528};
	shf.l.wrap.b32 	%r1530, %r1526, %r1527, 3;
	shf.l.wrap.b32 	%r1531, %r1527, %r1526, 3;
	mov.b64 	%rd2198, {%r1531, %r1530};
	shr.u64 	%rd2199, %rd1799, 6;
	xor.b64  	%rd2200, %rd2197, %rd2199;
	xor.b64  	%rd2201, %rd2200, %rd2198;
	shf.r.wrap.b32 	%r1532, %r1141, %r1140, 1;
	shf.r.wrap.b32 	%r1533, %r1140, %r1141, 1;
	mov.b64 	%rd2202, {%r1533, %r1532};
	shf.r.wrap.b32 	%r1534, %r1141, %r1140, 8;
	shf.r.wrap.b32 	%r1535, %r1140, %r1141, 8;
	mov.b64 	%rd2203, {%r1535, %r1534};
	shr.u64 	%rd2204, %rd1630, 7;
	xor.b64  	%rd2205, %rd2202, %rd2204;
	xor.b64  	%rd2206, %rd2205, %rd2203;
	add.s64 	%rd2207, %rd1617, %rd1734;
	add.s64 	%rd2208, %rd2207, %rd2201;
	add.s64 	%rd2209, %rd2208, %rd2206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1536,%dummy}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1537}, %rd1812;
	}
	shf.r.wrap.b32 	%r1538, %r1537, %r1536, 19;
	shf.r.wrap.b32 	%r1539, %r1536, %r1537, 19;
	mov.b64 	%rd2210, {%r1539, %r1538};
	shf.l.wrap.b32 	%r1540, %r1536, %r1537, 3;
	shf.l.wrap.b32 	%r1541, %r1537, %r1536, 3;
	mov.b64 	%rd2211, {%r1541, %r1540};
	shr.u64 	%rd2212, %rd1812, 6;
	xor.b64  	%rd2213, %rd2210, %rd2212;
	xor.b64  	%rd2214, %rd2213, %rd2211;
	shf.r.wrap.b32 	%r1542, %r1151, %r1150, 1;
	shf.r.wrap.b32 	%r1543, %r1150, %r1151, 1;
	mov.b64 	%rd2215, {%r1543, %r1542};
	shf.r.wrap.b32 	%r1544, %r1151, %r1150, 8;
	shf.r.wrap.b32 	%r1545, %r1150, %r1151, 8;
	mov.b64 	%rd2216, {%r1545, %r1544};
	shr.u64 	%rd2217, %rd1643, 7;
	xor.b64  	%rd2218, %rd2215, %rd2217;
	xor.b64  	%rd2219, %rd2218, %rd2216;
	add.s64 	%rd2220, %rd1630, %rd1747;
	add.s64 	%rd2221, %rd2220, %rd2214;
	add.s64 	%rd2222, %rd2221, %rd2219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd2209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1547}, %rd2209;
	}
	shf.r.wrap.b32 	%r1548, %r1547, %r1546, 19;
	shf.r.wrap.b32 	%r1549, %r1546, %r1547, 19;
	mov.b64 	%rd2223, {%r1549, %r1548};
	shf.l.wrap.b32 	%r1550, %r1546, %r1547, 3;
	shf.l.wrap.b32 	%r1551, %r1547, %r1546, 3;
	mov.b64 	%rd2224, {%r1551, %r1550};
	shr.u64 	%rd2225, %rd2209, 6;
	xor.b64  	%rd2226, %rd2223, %rd2225;
	xor.b64  	%rd2227, %rd2226, %rd2224;
	shf.r.wrap.b32 	%r1552, %r1161, %r1160, 1;
	shf.r.wrap.b32 	%r1553, %r1160, %r1161, 1;
	mov.b64 	%rd2228, {%r1553, %r1552};
	shf.r.wrap.b32 	%r1554, %r1161, %r1160, 8;
	shf.r.wrap.b32 	%r1555, %r1160, %r1161, 8;
	mov.b64 	%rd2229, {%r1555, %r1554};
	shr.u64 	%rd2230, %rd1656, 7;
	xor.b64  	%rd2231, %rd2228, %rd2230;
	xor.b64  	%rd2232, %rd2231, %rd2229;
	add.s64 	%rd2233, %rd1643, %rd1760;
	add.s64 	%rd2234, %rd2233, %rd2227;
	add.s64 	%rd2235, %rd2234, %rd2232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1556,%dummy}, %rd2222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1557}, %rd2222;
	}
	shf.r.wrap.b32 	%r1558, %r1557, %r1556, 19;
	shf.r.wrap.b32 	%r1559, %r1556, %r1557, 19;
	mov.b64 	%rd2236, {%r1559, %r1558};
	shf.l.wrap.b32 	%r1560, %r1556, %r1557, 3;
	shf.l.wrap.b32 	%r1561, %r1557, %r1556, 3;
	mov.b64 	%rd2237, {%r1561, %r1560};
	shr.u64 	%rd2238, %rd2222, 6;
	xor.b64  	%rd2239, %rd2236, %rd2238;
	xor.b64  	%rd2240, %rd2239, %rd2237;
	shf.r.wrap.b32 	%r1562, %r1171, %r1170, 1;
	shf.r.wrap.b32 	%r1563, %r1170, %r1171, 1;
	mov.b64 	%rd2241, {%r1563, %r1562};
	shf.r.wrap.b32 	%r1564, %r1171, %r1170, 8;
	shf.r.wrap.b32 	%r1565, %r1170, %r1171, 8;
	mov.b64 	%rd2242, {%r1565, %r1564};
	shr.u64 	%rd2243, %rd1669, 7;
	xor.b64  	%rd2244, %rd2241, %rd2243;
	xor.b64  	%rd2245, %rd2244, %rd2242;
	add.s64 	%rd2246, %rd1656, %rd1773;
	add.s64 	%rd2247, %rd2246, %rd2240;
	add.s64 	%rd2248, %rd2247, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1566,%dummy}, %rd2235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1567}, %rd2235;
	}
	shf.r.wrap.b32 	%r1568, %r1567, %r1566, 19;
	shf.r.wrap.b32 	%r1569, %r1566, %r1567, 19;
	mov.b64 	%rd2249, {%r1569, %r1568};
	shf.l.wrap.b32 	%r1570, %r1566, %r1567, 3;
	shf.l.wrap.b32 	%r1571, %r1567, %r1566, 3;
	mov.b64 	%rd2250, {%r1571, %r1570};
	shr.u64 	%rd2251, %rd2235, 6;
	xor.b64  	%rd2252, %rd2249, %rd2251;
	xor.b64  	%rd2253, %rd2252, %rd2250;
	shf.r.wrap.b32 	%r1572, %r1181, %r1180, 1;
	shf.r.wrap.b32 	%r1573, %r1180, %r1181, 1;
	mov.b64 	%rd2254, {%r1573, %r1572};
	shf.r.wrap.b32 	%r1574, %r1181, %r1180, 8;
	shf.r.wrap.b32 	%r1575, %r1180, %r1181, 8;
	mov.b64 	%rd2255, {%r1575, %r1574};
	shr.u64 	%rd2256, %rd1682, 7;
	xor.b64  	%rd2257, %rd2254, %rd2256;
	xor.b64  	%rd2258, %rd2257, %rd2255;
	add.s64 	%rd2259, %rd1669, %rd1786;
	add.s64 	%rd2260, %rd2259, %rd2253;
	add.s64 	%rd2261, %rd2260, %rd2258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1576,%dummy}, %rd2248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1577}, %rd2248;
	}
	shf.r.wrap.b32 	%r1578, %r1577, %r1576, 19;
	shf.r.wrap.b32 	%r1579, %r1576, %r1577, 19;
	mov.b64 	%rd2262, {%r1579, %r1578};
	shf.l.wrap.b32 	%r1580, %r1576, %r1577, 3;
	shf.l.wrap.b32 	%r1581, %r1577, %r1576, 3;
	mov.b64 	%rd2263, {%r1581, %r1580};
	shr.u64 	%rd2264, %rd2248, 6;
	xor.b64  	%rd2265, %rd2262, %rd2264;
	xor.b64  	%rd2266, %rd2265, %rd2263;
	shf.r.wrap.b32 	%r1582, %r1191, %r1190, 1;
	shf.r.wrap.b32 	%r1583, %r1190, %r1191, 1;
	mov.b64 	%rd2267, {%r1583, %r1582};
	shf.r.wrap.b32 	%r1584, %r1191, %r1190, 8;
	shf.r.wrap.b32 	%r1585, %r1190, %r1191, 8;
	mov.b64 	%rd2268, {%r1585, %r1584};
	shr.u64 	%rd2269, %rd1695, 7;
	xor.b64  	%rd2270, %rd2267, %rd2269;
	xor.b64  	%rd2271, %rd2270, %rd2268;
	add.s64 	%rd2272, %rd1682, %rd1799;
	add.s64 	%rd2273, %rd2272, %rd2266;
	add.s64 	%rd2274, %rd2273, %rd2271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd2261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd2261;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 19;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 19;
	mov.b64 	%rd2275, {%r1589, %r1588};
	shf.l.wrap.b32 	%r1590, %r1586, %r1587, 3;
	shf.l.wrap.b32 	%r1591, %r1587, %r1586, 3;
	mov.b64 	%rd2276, {%r1591, %r1590};
	shr.u64 	%rd2277, %rd2261, 6;
	xor.b64  	%rd2278, %rd2275, %rd2277;
	xor.b64  	%rd2279, %rd2278, %rd2276;
	shf.r.wrap.b32 	%r1592, %r1201, %r1200, 1;
	shf.r.wrap.b32 	%r1593, %r1200, %r1201, 1;
	mov.b64 	%rd2280, {%r1593, %r1592};
	shf.r.wrap.b32 	%r1594, %r1201, %r1200, 8;
	shf.r.wrap.b32 	%r1595, %r1200, %r1201, 8;
	mov.b64 	%rd2281, {%r1595, %r1594};
	shr.u64 	%rd2282, %rd1708, 7;
	xor.b64  	%rd2283, %rd2280, %rd2282;
	xor.b64  	%rd2284, %rd2283, %rd2281;
	add.s64 	%rd2285, %rd1695, %rd1812;
	add.s64 	%rd2286, %rd2285, %rd2279;
	add.s64 	%rd2287, %rd2286, %rd2284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1596,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd2274;
	}
	shf.r.wrap.b32 	%r1598, %r1597, %r1596, 19;
	shf.r.wrap.b32 	%r1599, %r1596, %r1597, 19;
	mov.b64 	%rd2288, {%r1599, %r1598};
	shf.l.wrap.b32 	%r1600, %r1596, %r1597, 3;
	shf.l.wrap.b32 	%r1601, %r1597, %r1596, 3;
	mov.b64 	%rd2289, {%r1601, %r1600};
	shr.u64 	%rd2290, %rd2274, 6;
	xor.b64  	%rd2291, %rd2288, %rd2290;
	xor.b64  	%rd2292, %rd2291, %rd2289;
	shf.r.wrap.b32 	%r1602, %r1211, %r1210, 1;
	shf.r.wrap.b32 	%r1603, %r1210, %r1211, 1;
	mov.b64 	%rd2293, {%r1603, %r1602};
	shf.r.wrap.b32 	%r1604, %r1211, %r1210, 8;
	shf.r.wrap.b32 	%r1605, %r1210, %r1211, 8;
	mov.b64 	%rd2294, {%r1605, %r1604};
	shr.u64 	%rd2295, %rd1721, 7;
	xor.b64  	%rd2296, %rd2293, %rd2295;
	xor.b64  	%rd2297, %rd2296, %rd2294;
	add.s64 	%rd2298, %rd2209, %rd1708;
	add.s64 	%rd2299, %rd2298, %rd2292;
	add.s64 	%rd2300, %rd2299, %rd2297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1606,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1607}, %rd2287;
	}
	shf.r.wrap.b32 	%r1608, %r1607, %r1606, 19;
	shf.r.wrap.b32 	%r1609, %r1606, %r1607, 19;
	mov.b64 	%rd2301, {%r1609, %r1608};
	shf.l.wrap.b32 	%r1610, %r1606, %r1607, 3;
	shf.l.wrap.b32 	%r1611, %r1607, %r1606, 3;
	mov.b64 	%rd2302, {%r1611, %r1610};
	shr.u64 	%rd2303, %rd2287, 6;
	xor.b64  	%rd2304, %rd2301, %rd2303;
	xor.b64  	%rd2305, %rd2304, %rd2302;
	shf.r.wrap.b32 	%r1612, %r1221, %r1220, 1;
	shf.r.wrap.b32 	%r1613, %r1220, %r1221, 1;
	mov.b64 	%rd2306, {%r1613, %r1612};
	shf.r.wrap.b32 	%r1614, %r1221, %r1220, 8;
	shf.r.wrap.b32 	%r1615, %r1220, %r1221, 8;
	mov.b64 	%rd2307, {%r1615, %r1614};
	shr.u64 	%rd2308, %rd1734, 7;
	xor.b64  	%rd2309, %rd2306, %rd2308;
	xor.b64  	%rd2310, %rd2309, %rd2307;
	add.s64 	%rd2311, %rd2222, %rd1721;
	add.s64 	%rd2312, %rd2311, %rd2305;
	add.s64 	%rd2313, %rd2312, %rd2310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1616,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1617}, %rd2300;
	}
	shf.r.wrap.b32 	%r1618, %r1617, %r1616, 19;
	shf.r.wrap.b32 	%r1619, %r1616, %r1617, 19;
	mov.b64 	%rd2314, {%r1619, %r1618};
	shf.l.wrap.b32 	%r1620, %r1616, %r1617, 3;
	shf.l.wrap.b32 	%r1621, %r1617, %r1616, 3;
	mov.b64 	%rd2315, {%r1621, %r1620};
	shr.u64 	%rd2316, %rd2300, 6;
	xor.b64  	%rd2317, %rd2314, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2315;
	shf.r.wrap.b32 	%r1622, %r1231, %r1230, 1;
	shf.r.wrap.b32 	%r1623, %r1230, %r1231, 1;
	mov.b64 	%rd2319, {%r1623, %r1622};
	shf.r.wrap.b32 	%r1624, %r1231, %r1230, 8;
	shf.r.wrap.b32 	%r1625, %r1230, %r1231, 8;
	mov.b64 	%rd2320, {%r1625, %r1624};
	shr.u64 	%rd2321, %rd1747, 7;
	xor.b64  	%rd2322, %rd2319, %rd2321;
	xor.b64  	%rd2323, %rd2322, %rd2320;
	add.s64 	%rd2324, %rd2235, %rd1734;
	add.s64 	%rd2325, %rd2324, %rd2318;
	add.s64 	%rd2326, %rd2325, %rd2323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1626,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1627}, %rd2313;
	}
	shf.r.wrap.b32 	%r1628, %r1627, %r1626, 19;
	shf.r.wrap.b32 	%r1629, %r1626, %r1627, 19;
	mov.b64 	%rd2327, {%r1629, %r1628};
	shf.l.wrap.b32 	%r1630, %r1626, %r1627, 3;
	shf.l.wrap.b32 	%r1631, %r1627, %r1626, 3;
	mov.b64 	%rd2328, {%r1631, %r1630};
	shr.u64 	%rd2329, %rd2313, 6;
	xor.b64  	%rd2330, %rd2327, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd2328;
	shf.r.wrap.b32 	%r1632, %r1241, %r1240, 1;
	shf.r.wrap.b32 	%r1633, %r1240, %r1241, 1;
	mov.b64 	%rd2332, {%r1633, %r1632};
	shf.r.wrap.b32 	%r1634, %r1241, %r1240, 8;
	shf.r.wrap.b32 	%r1635, %r1240, %r1241, 8;
	mov.b64 	%rd2333, {%r1635, %r1634};
	shr.u64 	%rd2334, %rd1760, 7;
	xor.b64  	%rd2335, %rd2332, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2333;
	add.s64 	%rd2337, %rd2248, %rd1747;
	add.s64 	%rd2338, %rd2337, %rd2331;
	add.s64 	%rd2339, %rd2338, %rd2336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1636,%dummy}, %rd2326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1637}, %rd2326;
	}
	shf.r.wrap.b32 	%r1638, %r1637, %r1636, 19;
	shf.r.wrap.b32 	%r1639, %r1636, %r1637, 19;
	mov.b64 	%rd2340, {%r1639, %r1638};
	shf.l.wrap.b32 	%r1640, %r1636, %r1637, 3;
	shf.l.wrap.b32 	%r1641, %r1637, %r1636, 3;
	mov.b64 	%rd2341, {%r1641, %r1640};
	shr.u64 	%rd2342, %rd2326, 6;
	xor.b64  	%rd2343, %rd2340, %rd2342;
	xor.b64  	%rd2344, %rd2343, %rd2341;
	shf.r.wrap.b32 	%r1642, %r1251, %r1250, 1;
	shf.r.wrap.b32 	%r1643, %r1250, %r1251, 1;
	mov.b64 	%rd2345, {%r1643, %r1642};
	shf.r.wrap.b32 	%r1644, %r1251, %r1250, 8;
	shf.r.wrap.b32 	%r1645, %r1250, %r1251, 8;
	mov.b64 	%rd2346, {%r1645, %r1644};
	shr.u64 	%rd2347, %rd1773, 7;
	xor.b64  	%rd2348, %rd2345, %rd2347;
	xor.b64  	%rd2349, %rd2348, %rd2346;
	add.s64 	%rd2350, %rd2261, %rd1760;
	add.s64 	%rd2351, %rd2350, %rd2344;
	add.s64 	%rd2352, %rd2351, %rd2349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1646,%dummy}, %rd2339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1647}, %rd2339;
	}
	shf.r.wrap.b32 	%r1648, %r1647, %r1646, 19;
	shf.r.wrap.b32 	%r1649, %r1646, %r1647, 19;
	mov.b64 	%rd2353, {%r1649, %r1648};
	shf.l.wrap.b32 	%r1650, %r1646, %r1647, 3;
	shf.l.wrap.b32 	%r1651, %r1647, %r1646, 3;
	mov.b64 	%rd2354, {%r1651, %r1650};
	shr.u64 	%rd2355, %rd2339, 6;
	xor.b64  	%rd2356, %rd2353, %rd2355;
	xor.b64  	%rd2357, %rd2356, %rd2354;
	shf.r.wrap.b32 	%r1652, %r1261, %r1260, 1;
	shf.r.wrap.b32 	%r1653, %r1260, %r1261, 1;
	mov.b64 	%rd2358, {%r1653, %r1652};
	shf.r.wrap.b32 	%r1654, %r1261, %r1260, 8;
	shf.r.wrap.b32 	%r1655, %r1260, %r1261, 8;
	mov.b64 	%rd2359, {%r1655, %r1654};
	shr.u64 	%rd2360, %rd1786, 7;
	xor.b64  	%rd2361, %rd2358, %rd2360;
	xor.b64  	%rd2362, %rd2361, %rd2359;
	add.s64 	%rd2363, %rd2274, %rd1773;
	add.s64 	%rd2364, %rd2363, %rd2357;
	add.s64 	%rd2365, %rd2364, %rd2362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd2185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd2185;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 14;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 14;
	mov.b64 	%rd2366, {%r1659, %r1658};
	shf.r.wrap.b32 	%r1660, %r1657, %r1656, 18;
	shf.r.wrap.b32 	%r1661, %r1656, %r1657, 18;
	mov.b64 	%rd2367, {%r1661, %r1660};
	xor.b64  	%rd2368, %rd2367, %rd2366;
	shf.l.wrap.b32 	%r1662, %r1656, %r1657, 23;
	shf.l.wrap.b32 	%r1663, %r1657, %r1656, 23;
	mov.b64 	%rd2369, {%r1663, %r1662};
	xor.b64  	%rd2370, %rd2368, %rd2369;
	xor.b64  	%rd2371, %rd2137, %rd2161;
	and.b64  	%rd2372, %rd2371, %rd2185;
	xor.b64  	%rd2373, %rd2372, %rd2137;
	add.s64 	%rd2374, %rd2373, %rd2113;
	add.s64 	%rd2375, %rd2374, %rd2209;
	add.s64 	%rd2376, %rd2375, %rd2742;
	add.s64 	%rd2377, %rd2376, %rd2370;
	add.s64 	%rd2378, %rd2377, %rd2124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd2196;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 28;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 28;
	mov.b64 	%rd2379, {%r1667, %r1666};
	shf.l.wrap.b32 	%r1668, %r1664, %r1665, 30;
	shf.l.wrap.b32 	%r1669, %r1665, %r1664, 30;
	mov.b64 	%rd2380, {%r1669, %r1668};
	xor.b64  	%rd2381, %rd2380, %rd2379;
	shf.l.wrap.b32 	%r1670, %r1664, %r1665, 25;
	shf.l.wrap.b32 	%r1671, %r1665, %r1664, 25;
	mov.b64 	%rd2382, {%r1671, %r1670};
	xor.b64  	%rd2383, %rd2381, %rd2382;
	xor.b64  	%rd2384, %rd2196, %rd2148;
	xor.b64  	%rd2385, %rd2196, %rd2172;
	and.b64  	%rd2386, %rd2385, %rd2384;
	xor.b64  	%rd2387, %rd2386, %rd2196;
	add.s64 	%rd2388, %rd2377, %rd2387;
	add.s64 	%rd2389, %rd2388, %rd2383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1672,%dummy}, %rd2378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1673}, %rd2378;
	}
	shf.r.wrap.b32 	%r1674, %r1673, %r1672, 14;
	shf.r.wrap.b32 	%r1675, %r1672, %r1673, 14;
	mov.b64 	%rd2390, {%r1675, %r1674};
	shf.r.wrap.b32 	%r1676, %r1673, %r1672, 18;
	shf.r.wrap.b32 	%r1677, %r1672, %r1673, 18;
	mov.b64 	%rd2391, {%r1677, %r1676};
	xor.b64  	%rd2392, %rd2391, %rd2390;
	shf.l.wrap.b32 	%r1678, %r1672, %r1673, 23;
	shf.l.wrap.b32 	%r1679, %r1673, %r1672, 23;
	mov.b64 	%rd2393, {%r1679, %r1678};
	xor.b64  	%rd2394, %rd2392, %rd2393;
	xor.b64  	%rd2395, %rd2161, %rd2185;
	and.b64  	%rd2396, %rd2378, %rd2395;
	xor.b64  	%rd2397, %rd2396, %rd2161;
	add.s64 	%rd2398, %rd2222, %rd2137;
	add.s64 	%rd2399, %rd2398, %rd2743;
	add.s64 	%rd2400, %rd2399, %rd2397;
	add.s64 	%rd2401, %rd2400, %rd2394;
	add.s64 	%rd2402, %rd2401, %rd2148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1680,%dummy}, %rd2389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1681}, %rd2389;
	}
	shf.r.wrap.b32 	%r1682, %r1681, %r1680, 28;
	shf.r.wrap.b32 	%r1683, %r1680, %r1681, 28;
	mov.b64 	%rd2403, {%r1683, %r1682};
	shf.l.wrap.b32 	%r1684, %r1680, %r1681, 30;
	shf.l.wrap.b32 	%r1685, %r1681, %r1680, 30;
	mov.b64 	%rd2404, {%r1685, %r1684};
	xor.b64  	%rd2405, %rd2404, %rd2403;
	shf.l.wrap.b32 	%r1686, %r1680, %r1681, 25;
	shf.l.wrap.b32 	%r1687, %r1681, %r1680, 25;
	mov.b64 	%rd2406, {%r1687, %r1686};
	xor.b64  	%rd2407, %rd2405, %rd2406;
	xor.b64  	%rd2408, %rd2389, %rd2172;
	xor.b64  	%rd2409, %rd2389, %rd2196;
	and.b64  	%rd2410, %rd2409, %rd2408;
	xor.b64  	%rd2411, %rd2410, %rd2389;
	add.s64 	%rd2412, %rd2401, %rd2411;
	add.s64 	%rd2413, %rd2412, %rd2407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1688,%dummy}, %rd2402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1689}, %rd2402;
	}
	shf.r.wrap.b32 	%r1690, %r1689, %r1688, 14;
	shf.r.wrap.b32 	%r1691, %r1688, %r1689, 14;
	mov.b64 	%rd2414, {%r1691, %r1690};
	shf.r.wrap.b32 	%r1692, %r1689, %r1688, 18;
	shf.r.wrap.b32 	%r1693, %r1688, %r1689, 18;
	mov.b64 	%rd2415, {%r1693, %r1692};
	xor.b64  	%rd2416, %rd2415, %rd2414;
	shf.l.wrap.b32 	%r1694, %r1688, %r1689, 23;
	shf.l.wrap.b32 	%r1695, %r1689, %r1688, 23;
	mov.b64 	%rd2417, {%r1695, %r1694};
	xor.b64  	%rd2418, %rd2416, %rd2417;
	xor.b64  	%rd2419, %rd2378, %rd2185;
	and.b64  	%rd2420, %rd2402, %rd2419;
	xor.b64  	%rd2421, %rd2420, %rd2185;
	add.s64 	%rd2422, %rd2235, %rd2161;
	add.s64 	%rd2423, %rd2422, %rd2744;
	add.s64 	%rd2424, %rd2423, %rd2421;
	add.s64 	%rd2425, %rd2424, %rd2418;
	add.s64 	%rd2426, %rd2425, %rd2172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1696,%dummy}, %rd2413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1697}, %rd2413;
	}
	shf.r.wrap.b32 	%r1698, %r1697, %r1696, 28;
	shf.r.wrap.b32 	%r1699, %r1696, %r1697, 28;
	mov.b64 	%rd2427, {%r1699, %r1698};
	shf.l.wrap.b32 	%r1700, %r1696, %r1697, 30;
	shf.l.wrap.b32 	%r1701, %r1697, %r1696, 30;
	mov.b64 	%rd2428, {%r1701, %r1700};
	xor.b64  	%rd2429, %rd2428, %rd2427;
	shf.l.wrap.b32 	%r1702, %r1696, %r1697, 25;
	shf.l.wrap.b32 	%r1703, %r1697, %r1696, 25;
	mov.b64 	%rd2430, {%r1703, %r1702};
	xor.b64  	%rd2431, %rd2429, %rd2430;
	xor.b64  	%rd2432, %rd2413, %rd2196;
	xor.b64  	%rd2433, %rd2413, %rd2389;
	and.b64  	%rd2434, %rd2433, %rd2432;
	xor.b64  	%rd2435, %rd2434, %rd2413;
	add.s64 	%rd2436, %rd2425, %rd2435;
	add.s64 	%rd2437, %rd2436, %rd2431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd2426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd2426;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 14;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 14;
	mov.b64 	%rd2438, {%r1707, %r1706};
	shf.r.wrap.b32 	%r1708, %r1705, %r1704, 18;
	shf.r.wrap.b32 	%r1709, %r1704, %r1705, 18;
	mov.b64 	%rd2439, {%r1709, %r1708};
	xor.b64  	%rd2440, %rd2439, %rd2438;
	shf.l.wrap.b32 	%r1710, %r1704, %r1705, 23;
	shf.l.wrap.b32 	%r1711, %r1705, %r1704, 23;
	mov.b64 	%rd2441, {%r1711, %r1710};
	xor.b64  	%rd2442, %rd2440, %rd2441;
	xor.b64  	%rd2443, %rd2402, %rd2378;
	and.b64  	%rd2444, %rd2426, %rd2443;
	xor.b64  	%rd2445, %rd2444, %rd2378;
	add.s64 	%rd2446, %rd2248, %rd2185;
	add.s64 	%rd2447, %rd2446, %rd2745;
	add.s64 	%rd2448, %rd2447, %rd2445;
	add.s64 	%rd2449, %rd2448, %rd2442;
	add.s64 	%rd2450, %rd2449, %rd2196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1712,%dummy}, %rd2437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1713}, %rd2437;
	}
	shf.r.wrap.b32 	%r1714, %r1713, %r1712, 28;
	shf.r.wrap.b32 	%r1715, %r1712, %r1713, 28;
	mov.b64 	%rd2451, {%r1715, %r1714};
	shf.l.wrap.b32 	%r1716, %r1712, %r1713, 30;
	shf.l.wrap.b32 	%r1717, %r1713, %r1712, 30;
	mov.b64 	%rd2452, {%r1717, %r1716};
	xor.b64  	%rd2453, %rd2452, %rd2451;
	shf.l.wrap.b32 	%r1718, %r1712, %r1713, 25;
	shf.l.wrap.b32 	%r1719, %r1713, %r1712, 25;
	mov.b64 	%rd2454, {%r1719, %r1718};
	xor.b64  	%rd2455, %rd2453, %rd2454;
	xor.b64  	%rd2456, %rd2437, %rd2389;
	xor.b64  	%rd2457, %rd2437, %rd2413;
	and.b64  	%rd2458, %rd2457, %rd2456;
	xor.b64  	%rd2459, %rd2458, %rd2437;
	add.s64 	%rd2460, %rd2449, %rd2459;
	add.s64 	%rd2461, %rd2460, %rd2455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1720,%dummy}, %rd2450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1721}, %rd2450;
	}
	shf.r.wrap.b32 	%r1722, %r1721, %r1720, 14;
	shf.r.wrap.b32 	%r1723, %r1720, %r1721, 14;
	mov.b64 	%rd2462, {%r1723, %r1722};
	shf.r.wrap.b32 	%r1724, %r1721, %r1720, 18;
	shf.r.wrap.b32 	%r1725, %r1720, %r1721, 18;
	mov.b64 	%rd2463, {%r1725, %r1724};
	xor.b64  	%rd2464, %rd2463, %rd2462;
	shf.l.wrap.b32 	%r1726, %r1720, %r1721, 23;
	shf.l.wrap.b32 	%r1727, %r1721, %r1720, 23;
	mov.b64 	%rd2465, {%r1727, %r1726};
	xor.b64  	%rd2466, %rd2464, %rd2465;
	xor.b64  	%rd2467, %rd2426, %rd2402;
	and.b64  	%rd2468, %rd2450, %rd2467;
	xor.b64  	%rd2469, %rd2468, %rd2402;
	add.s64 	%rd2470, %rd2378, %rd2261;
	add.s64 	%rd2471, %rd2470, %rd2746;
	add.s64 	%rd2472, %rd2471, %rd2469;
	add.s64 	%rd2473, %rd2472, %rd2466;
	add.s64 	%rd2474, %rd2473, %rd2389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1728,%dummy}, %rd2461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd2461;
	}
	shf.r.wrap.b32 	%r1730, %r1729, %r1728, 28;
	shf.r.wrap.b32 	%r1731, %r1728, %r1729, 28;
	mov.b64 	%rd2475, {%r1731, %r1730};
	shf.l.wrap.b32 	%r1732, %r1728, %r1729, 30;
	shf.l.wrap.b32 	%r1733, %r1729, %r1728, 30;
	mov.b64 	%rd2476, {%r1733, %r1732};
	xor.b64  	%rd2477, %rd2476, %rd2475;
	shf.l.wrap.b32 	%r1734, %r1728, %r1729, 25;
	shf.l.wrap.b32 	%r1735, %r1729, %r1728, 25;
	mov.b64 	%rd2478, {%r1735, %r1734};
	xor.b64  	%rd2479, %rd2477, %rd2478;
	xor.b64  	%rd2480, %rd2461, %rd2413;
	xor.b64  	%rd2481, %rd2461, %rd2437;
	and.b64  	%rd2482, %rd2481, %rd2480;
	xor.b64  	%rd2483, %rd2482, %rd2461;
	add.s64 	%rd2484, %rd2473, %rd2483;
	add.s64 	%rd2485, %rd2484, %rd2479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1736,%dummy}, %rd2474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1737}, %rd2474;
	}
	shf.r.wrap.b32 	%r1738, %r1737, %r1736, 14;
	shf.r.wrap.b32 	%r1739, %r1736, %r1737, 14;
	mov.b64 	%rd2486, {%r1739, %r1738};
	shf.r.wrap.b32 	%r1740, %r1737, %r1736, 18;
	shf.r.wrap.b32 	%r1741, %r1736, %r1737, 18;
	mov.b64 	%rd2487, {%r1741, %r1740};
	xor.b64  	%rd2488, %rd2487, %rd2486;
	shf.l.wrap.b32 	%r1742, %r1736, %r1737, 23;
	shf.l.wrap.b32 	%r1743, %r1737, %r1736, 23;
	mov.b64 	%rd2489, {%r1743, %r1742};
	xor.b64  	%rd2490, %rd2488, %rd2489;
	xor.b64  	%rd2491, %rd2450, %rd2426;
	and.b64  	%rd2492, %rd2474, %rd2491;
	xor.b64  	%rd2493, %rd2492, %rd2426;
	add.s64 	%rd2494, %rd2402, %rd2274;
	add.s64 	%rd2495, %rd2494, %rd2747;
	add.s64 	%rd2496, %rd2495, %rd2493;
	add.s64 	%rd2497, %rd2496, %rd2490;
	add.s64 	%rd2498, %rd2497, %rd2413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1744,%dummy}, %rd2485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1745}, %rd2485;
	}
	shf.r.wrap.b32 	%r1746, %r1745, %r1744, 28;
	shf.r.wrap.b32 	%r1747, %r1744, %r1745, 28;
	mov.b64 	%rd2499, {%r1747, %r1746};
	shf.l.wrap.b32 	%r1748, %r1744, %r1745, 30;
	shf.l.wrap.b32 	%r1749, %r1745, %r1744, 30;
	mov.b64 	%rd2500, {%r1749, %r1748};
	xor.b64  	%rd2501, %rd2500, %rd2499;
	shf.l.wrap.b32 	%r1750, %r1744, %r1745, 25;
	shf.l.wrap.b32 	%r1751, %r1745, %r1744, 25;
	mov.b64 	%rd2502, {%r1751, %r1750};
	xor.b64  	%rd2503, %rd2501, %rd2502;
	xor.b64  	%rd2504, %rd2485, %rd2437;
	xor.b64  	%rd2505, %rd2485, %rd2461;
	and.b64  	%rd2506, %rd2505, %rd2504;
	xor.b64  	%rd2507, %rd2506, %rd2485;
	add.s64 	%rd2508, %rd2497, %rd2507;
	add.s64 	%rd2509, %rd2508, %rd2503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1752,%dummy}, %rd2498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd2498;
	}
	shf.r.wrap.b32 	%r1754, %r1753, %r1752, 14;
	shf.r.wrap.b32 	%r1755, %r1752, %r1753, 14;
	mov.b64 	%rd2510, {%r1755, %r1754};
	shf.r.wrap.b32 	%r1756, %r1753, %r1752, 18;
	shf.r.wrap.b32 	%r1757, %r1752, %r1753, 18;
	mov.b64 	%rd2511, {%r1757, %r1756};
	xor.b64  	%rd2512, %rd2511, %rd2510;
	shf.l.wrap.b32 	%r1758, %r1752, %r1753, 23;
	shf.l.wrap.b32 	%r1759, %r1753, %r1752, 23;
	mov.b64 	%rd2513, {%r1759, %r1758};
	xor.b64  	%rd2514, %rd2512, %rd2513;
	xor.b64  	%rd2515, %rd2474, %rd2450;
	and.b64  	%rd2516, %rd2498, %rd2515;
	xor.b64  	%rd2517, %rd2516, %rd2450;
	add.s64 	%rd2518, %rd2426, %rd2287;
	add.s64 	%rd2519, %rd2518, %rd2748;
	add.s64 	%rd2520, %rd2519, %rd2517;
	add.s64 	%rd2521, %rd2520, %rd2514;
	add.s64 	%rd2522, %rd2521, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1760,%dummy}, %rd2509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd2509;
	}
	shf.r.wrap.b32 	%r1762, %r1761, %r1760, 28;
	shf.r.wrap.b32 	%r1763, %r1760, %r1761, 28;
	mov.b64 	%rd2523, {%r1763, %r1762};
	shf.l.wrap.b32 	%r1764, %r1760, %r1761, 30;
	shf.l.wrap.b32 	%r1765, %r1761, %r1760, 30;
	mov.b64 	%rd2524, {%r1765, %r1764};
	xor.b64  	%rd2525, %rd2524, %rd2523;
	shf.l.wrap.b32 	%r1766, %r1760, %r1761, 25;
	shf.l.wrap.b32 	%r1767, %r1761, %r1760, 25;
	mov.b64 	%rd2526, {%r1767, %r1766};
	xor.b64  	%rd2527, %rd2525, %rd2526;
	xor.b64  	%rd2528, %rd2509, %rd2461;
	xor.b64  	%rd2529, %rd2509, %rd2485;
	and.b64  	%rd2530, %rd2529, %rd2528;
	xor.b64  	%rd2531, %rd2530, %rd2509;
	add.s64 	%rd2532, %rd2521, %rd2531;
	add.s64 	%rd2533, %rd2532, %rd2527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd2522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2522;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 14;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 14;
	mov.b64 	%rd2534, {%r1771, %r1770};
	shf.r.wrap.b32 	%r1772, %r1769, %r1768, 18;
	shf.r.wrap.b32 	%r1773, %r1768, %r1769, 18;
	mov.b64 	%rd2535, {%r1773, %r1772};
	xor.b64  	%rd2536, %rd2535, %rd2534;
	shf.l.wrap.b32 	%r1774, %r1768, %r1769, 23;
	shf.l.wrap.b32 	%r1775, %r1769, %r1768, 23;
	mov.b64 	%rd2537, {%r1775, %r1774};
	xor.b64  	%rd2538, %rd2536, %rd2537;
	xor.b64  	%rd2539, %rd2498, %rd2474;
	and.b64  	%rd2540, %rd2522, %rd2539;
	xor.b64  	%rd2541, %rd2540, %rd2474;
	add.s64 	%rd2542, %rd2450, %rd2300;
	add.s64 	%rd2543, %rd2542, %rd2749;
	add.s64 	%rd2544, %rd2543, %rd2541;
	add.s64 	%rd2545, %rd2544, %rd2538;
	add.s64 	%rd2546, %rd2545, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1776,%dummy}, %rd2533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd2533;
	}
	shf.r.wrap.b32 	%r1778, %r1777, %r1776, 28;
	shf.r.wrap.b32 	%r1779, %r1776, %r1777, 28;
	mov.b64 	%rd2547, {%r1779, %r1778};
	shf.l.wrap.b32 	%r1780, %r1776, %r1777, 30;
	shf.l.wrap.b32 	%r1781, %r1777, %r1776, 30;
	mov.b64 	%rd2548, {%r1781, %r1780};
	xor.b64  	%rd2549, %rd2548, %rd2547;
	shf.l.wrap.b32 	%r1782, %r1776, %r1777, 25;
	shf.l.wrap.b32 	%r1783, %r1777, %r1776, 25;
	mov.b64 	%rd2550, {%r1783, %r1782};
	xor.b64  	%rd2551, %rd2549, %rd2550;
	xor.b64  	%rd2552, %rd2533, %rd2485;
	xor.b64  	%rd2553, %rd2533, %rd2509;
	and.b64  	%rd2554, %rd2553, %rd2552;
	xor.b64  	%rd2555, %rd2554, %rd2533;
	add.s64 	%rd2556, %rd2545, %rd2555;
	add.s64 	%rd2557, %rd2556, %rd2551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1784,%dummy}, %rd2546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1785}, %rd2546;
	}
	shf.r.wrap.b32 	%r1786, %r1785, %r1784, 14;
	shf.r.wrap.b32 	%r1787, %r1784, %r1785, 14;
	mov.b64 	%rd2558, {%r1787, %r1786};
	shf.r.wrap.b32 	%r1788, %r1785, %r1784, 18;
	shf.r.wrap.b32 	%r1789, %r1784, %r1785, 18;
	mov.b64 	%rd2559, {%r1789, %r1788};
	xor.b64  	%rd2560, %rd2559, %rd2558;
	shf.l.wrap.b32 	%r1790, %r1784, %r1785, 23;
	shf.l.wrap.b32 	%r1791, %r1785, %r1784, 23;
	mov.b64 	%rd2561, {%r1791, %r1790};
	xor.b64  	%rd2562, %rd2560, %rd2561;
	xor.b64  	%rd2563, %rd2522, %rd2498;
	and.b64  	%rd2564, %rd2546, %rd2563;
	xor.b64  	%rd2565, %rd2564, %rd2498;
	add.s64 	%rd2566, %rd2474, %rd2313;
	add.s64 	%rd2567, %rd2566, %rd2750;
	add.s64 	%rd2568, %rd2567, %rd2565;
	add.s64 	%rd2569, %rd2568, %rd2562;
	add.s64 	%rd2570, %rd2569, %rd2485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1792,%dummy}, %rd2557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1793}, %rd2557;
	}
	shf.r.wrap.b32 	%r1794, %r1793, %r1792, 28;
	shf.r.wrap.b32 	%r1795, %r1792, %r1793, 28;
	mov.b64 	%rd2571, {%r1795, %r1794};
	shf.l.wrap.b32 	%r1796, %r1792, %r1793, 30;
	shf.l.wrap.b32 	%r1797, %r1793, %r1792, 30;
	mov.b64 	%rd2572, {%r1797, %r1796};
	xor.b64  	%rd2573, %rd2572, %rd2571;
	shf.l.wrap.b32 	%r1798, %r1792, %r1793, 25;
	shf.l.wrap.b32 	%r1799, %r1793, %r1792, 25;
	mov.b64 	%rd2574, {%r1799, %r1798};
	xor.b64  	%rd2575, %rd2573, %rd2574;
	xor.b64  	%rd2576, %rd2557, %rd2509;
	xor.b64  	%rd2577, %rd2557, %rd2533;
	and.b64  	%rd2578, %rd2577, %rd2576;
	xor.b64  	%rd2579, %rd2578, %rd2557;
	add.s64 	%rd2580, %rd2569, %rd2579;
	add.s64 	%rd2581, %rd2580, %rd2575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1800,%dummy}, %rd2570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1801}, %rd2570;
	}
	shf.r.wrap.b32 	%r1802, %r1801, %r1800, 14;
	shf.r.wrap.b32 	%r1803, %r1800, %r1801, 14;
	mov.b64 	%rd2582, {%r1803, %r1802};
	shf.r.wrap.b32 	%r1804, %r1801, %r1800, 18;
	shf.r.wrap.b32 	%r1805, %r1800, %r1801, 18;
	mov.b64 	%rd2583, {%r1805, %r1804};
	xor.b64  	%rd2584, %rd2583, %rd2582;
	shf.l.wrap.b32 	%r1806, %r1800, %r1801, 23;
	shf.l.wrap.b32 	%r1807, %r1801, %r1800, 23;
	mov.b64 	%rd2585, {%r1807, %r1806};
	xor.b64  	%rd2586, %rd2584, %rd2585;
	xor.b64  	%rd2587, %rd2546, %rd2522;
	and.b64  	%rd2588, %rd2570, %rd2587;
	xor.b64  	%rd2589, %rd2588, %rd2522;
	add.s64 	%rd2590, %rd2498, %rd2326;
	add.s64 	%rd2591, %rd2590, %rd2751;
	add.s64 	%rd2592, %rd2591, %rd2589;
	add.s64 	%rd2593, %rd2592, %rd2586;
	add.s64 	%rd2594, %rd2593, %rd2509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1808,%dummy}, %rd2581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1809}, %rd2581;
	}
	shf.r.wrap.b32 	%r1810, %r1809, %r1808, 28;
	shf.r.wrap.b32 	%r1811, %r1808, %r1809, 28;
	mov.b64 	%rd2595, {%r1811, %r1810};
	shf.l.wrap.b32 	%r1812, %r1808, %r1809, 30;
	shf.l.wrap.b32 	%r1813, %r1809, %r1808, 30;
	mov.b64 	%rd2596, {%r1813, %r1812};
	xor.b64  	%rd2597, %rd2596, %rd2595;
	shf.l.wrap.b32 	%r1814, %r1808, %r1809, 25;
	shf.l.wrap.b32 	%r1815, %r1809, %r1808, 25;
	mov.b64 	%rd2598, {%r1815, %r1814};
	xor.b64  	%rd2599, %rd2597, %rd2598;
	xor.b64  	%rd2600, %rd2581, %rd2533;
	xor.b64  	%rd2601, %rd2581, %rd2557;
	and.b64  	%rd2602, %rd2601, %rd2600;
	xor.b64  	%rd2603, %rd2602, %rd2581;
	add.s64 	%rd2604, %rd2593, %rd2603;
	add.s64 	%rd2605, %rd2604, %rd2599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1816,%dummy}, %rd2594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1817}, %rd2594;
	}
	shf.r.wrap.b32 	%r1818, %r1817, %r1816, 14;
	shf.r.wrap.b32 	%r1819, %r1816, %r1817, 14;
	mov.b64 	%rd2606, {%r1819, %r1818};
	shf.r.wrap.b32 	%r1820, %r1817, %r1816, 18;
	shf.r.wrap.b32 	%r1821, %r1816, %r1817, 18;
	mov.b64 	%rd2607, {%r1821, %r1820};
	xor.b64  	%rd2608, %rd2607, %rd2606;
	shf.l.wrap.b32 	%r1822, %r1816, %r1817, 23;
	shf.l.wrap.b32 	%r1823, %r1817, %r1816, 23;
	mov.b64 	%rd2609, {%r1823, %r1822};
	xor.b64  	%rd2610, %rd2608, %rd2609;
	xor.b64  	%rd2611, %rd2570, %rd2546;
	and.b64  	%rd2612, %rd2594, %rd2611;
	xor.b64  	%rd2613, %rd2612, %rd2546;
	add.s64 	%rd2614, %rd2522, %rd2339;
	add.s64 	%rd2615, %rd2614, %rd2752;
	add.s64 	%rd2616, %rd2615, %rd2613;
	add.s64 	%rd2617, %rd2616, %rd2610;
	add.s64 	%rd2618, %rd2617, %rd2533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1824,%dummy}, %rd2605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1825}, %rd2605;
	}
	shf.r.wrap.b32 	%r1826, %r1825, %r1824, 28;
	shf.r.wrap.b32 	%r1827, %r1824, %r1825, 28;
	mov.b64 	%rd2619, {%r1827, %r1826};
	shf.l.wrap.b32 	%r1828, %r1824, %r1825, 30;
	shf.l.wrap.b32 	%r1829, %r1825, %r1824, 30;
	mov.b64 	%rd2620, {%r1829, %r1828};
	xor.b64  	%rd2621, %rd2620, %rd2619;
	shf.l.wrap.b32 	%r1830, %r1824, %r1825, 25;
	shf.l.wrap.b32 	%r1831, %r1825, %r1824, 25;
	mov.b64 	%rd2622, {%r1831, %r1830};
	xor.b64  	%rd2623, %rd2621, %rd2622;
	xor.b64  	%rd2624, %rd2605, %rd2557;
	xor.b64  	%rd2625, %rd2605, %rd2581;
	and.b64  	%rd2626, %rd2625, %rd2624;
	xor.b64  	%rd2627, %rd2626, %rd2605;
	add.s64 	%rd2628, %rd2617, %rd2627;
	add.s64 	%rd2629, %rd2628, %rd2623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1832,%dummy}, %rd2618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1833}, %rd2618;
	}
	shf.r.wrap.b32 	%r1834, %r1833, %r1832, 14;
	shf.r.wrap.b32 	%r1835, %r1832, %r1833, 14;
	mov.b64 	%rd2630, {%r1835, %r1834};
	shf.r.wrap.b32 	%r1836, %r1833, %r1832, 18;
	shf.r.wrap.b32 	%r1837, %r1832, %r1833, 18;
	mov.b64 	%rd2631, {%r1837, %r1836};
	xor.b64  	%rd2632, %rd2631, %rd2630;
	shf.l.wrap.b32 	%r1838, %r1832, %r1833, 23;
	shf.l.wrap.b32 	%r1839, %r1833, %r1832, 23;
	mov.b64 	%rd2633, {%r1839, %r1838};
	xor.b64  	%rd2634, %rd2632, %rd2633;
	xor.b64  	%rd2635, %rd2594, %rd2570;
	and.b64  	%rd2636, %rd2618, %rd2635;
	xor.b64  	%rd2637, %rd2636, %rd2570;
	add.s64 	%rd2638, %rd2546, %rd2352;
	add.s64 	%rd2639, %rd2638, %rd2753;
	add.s64 	%rd2640, %rd2639, %rd2637;
	add.s64 	%rd2641, %rd2640, %rd2634;
	add.s64 	%rd2642, %rd2641, %rd2557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1840,%dummy}, %rd2629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1841}, %rd2629;
	}
	shf.r.wrap.b32 	%r1842, %r1841, %r1840, 28;
	shf.r.wrap.b32 	%r1843, %r1840, %r1841, 28;
	mov.b64 	%rd2643, {%r1843, %r1842};
	shf.l.wrap.b32 	%r1844, %r1840, %r1841, 30;
	shf.l.wrap.b32 	%r1845, %r1841, %r1840, 30;
	mov.b64 	%rd2644, {%r1845, %r1844};
	xor.b64  	%rd2645, %rd2644, %rd2643;
	shf.l.wrap.b32 	%r1846, %r1840, %r1841, 25;
	shf.l.wrap.b32 	%r1847, %r1841, %r1840, 25;
	mov.b64 	%rd2646, {%r1847, %r1846};
	xor.b64  	%rd2647, %rd2645, %rd2646;
	xor.b64  	%rd2648, %rd2629, %rd2581;
	xor.b64  	%rd2649, %rd2629, %rd2605;
	and.b64  	%rd2650, %rd2649, %rd2648;
	xor.b64  	%rd2651, %rd2650, %rd2629;
	add.s64 	%rd2652, %rd2641, %rd2651;
	add.s64 	%rd2653, %rd2652, %rd2647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1848,%dummy}, %rd2642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1849}, %rd2642;
	}
	shf.r.wrap.b32 	%r1850, %r1849, %r1848, 14;
	shf.r.wrap.b32 	%r1851, %r1848, %r1849, 14;
	mov.b64 	%rd2654, {%r1851, %r1850};
	shf.r.wrap.b32 	%r1852, %r1849, %r1848, 18;
	shf.r.wrap.b32 	%r1853, %r1848, %r1849, 18;
	mov.b64 	%rd2655, {%r1853, %r1852};
	xor.b64  	%rd2656, %rd2655, %rd2654;
	shf.l.wrap.b32 	%r1854, %r1848, %r1849, 23;
	shf.l.wrap.b32 	%r1855, %r1849, %r1848, 23;
	mov.b64 	%rd2657, {%r1855, %r1854};
	xor.b64  	%rd2658, %rd2656, %rd2657;
	xor.b64  	%rd2659, %rd2618, %rd2594;
	and.b64  	%rd2660, %rd2642, %rd2659;
	xor.b64  	%rd2661, %rd2660, %rd2594;
	add.s64 	%rd2662, %rd2570, %rd2365;
	add.s64 	%rd2663, %rd2662, %rd2754;
	add.s64 	%rd2664, %rd2663, %rd2661;
	add.s64 	%rd2665, %rd2664, %rd2658;
	add.s64 	%rd101, %rd2665, %rd2581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1856,%dummy}, %rd2653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1857}, %rd2653;
	}
	shf.r.wrap.b32 	%r1858, %r1857, %r1856, 28;
	shf.r.wrap.b32 	%r1859, %r1856, %r1857, 28;
	mov.b64 	%rd2666, {%r1859, %r1858};
	shf.l.wrap.b32 	%r1860, %r1856, %r1857, 30;
	shf.l.wrap.b32 	%r1861, %r1857, %r1856, 30;
	mov.b64 	%rd2667, {%r1861, %r1860};
	xor.b64  	%rd2668, %rd2667, %rd2666;
	shf.l.wrap.b32 	%r1862, %r1856, %r1857, 25;
	shf.l.wrap.b32 	%r1863, %r1857, %r1856, 25;
	mov.b64 	%rd2669, {%r1863, %r1862};
	xor.b64  	%rd2670, %rd2668, %rd2669;
	xor.b64  	%rd2671, %rd2653, %rd2605;
	xor.b64  	%rd2672, %rd2653, %rd2629;
	and.b64  	%rd2673, %rd2672, %rd2671;
	xor.b64  	%rd2674, %rd2673, %rd2653;
	add.s64 	%rd2675, %rd2665, %rd2674;
	add.s64 	%rd102, %rd2675, %rd2670;
	cvt.u32.u64	%r1864, %rd101;
	setp.ne.s32	%p3, %r1864, %r3;
	@%p3 bra 	BB6_9;

	shr.u64 	%rd2676, %rd102, 32;
	cvt.u32.u64	%r1865, %rd2676;
	shr.u64 	%rd2677, %rd101, 32;
	cvt.u32.u64	%r1866, %rd2677;
	setp.eq.s32	%p4, %r1866, %r4;
	cvt.u32.u64	%r1867, %rd102;
	setp.eq.s32	%p5, %r1867, %r5;
	and.pred  	%p6, %p4, %p5;
	setp.eq.s32	%p7, %r1865, %r6;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB6_9;
	bra.uni 	BB6_5;

BB6_5:
	atom.global.add.u32 	%r1868, [%rd25], 1;
	setp.ne.s32	%p9, %r1868, 0;
	@%p9 bra 	BB6_9;

	ld.param.u32 	%r1873, [m01700_s16_param_31];
	atom.global.add.u32 	%r10, [%rd108], 1;
	setp.lt.u32	%p10, %r10, %r1873;
	@%p10 bra 	BB6_8;
	bra.uni 	BB6_7;

BB6_8:
	ld.param.u32 	%r1874, [m01700_s16_param_27];
	ld.param.u64 	%rd2755, [m01700_s16_param_14];
	ld.param.u32 	%r1872, [m01700_s16_param_32];
	mul.wide.u32 	%rd2678, %r10, 20;
	add.s64 	%rd2679, %rd2755, %rd2678;
	st.global.u32 	[%rd2679], %r1874;
	mov.u32 	%r1870, 0;
	st.global.u32 	[%rd2679+4], %r1870;
	st.global.u32 	[%rd2679+8], %r1872;
	st.global.u32 	[%rd2679+12], %r1;
	st.global.u32 	[%rd2679+16], %r1875;
	bra.uni 	BB6_9;

BB6_7:
	atom.global.add.u32 	%r1869, [%rd108], -1;

BB6_9:
	ld.param.u32 	%r1871, [m01700_s16_param_30];
	add.s32 	%r1875, %r1875, 1;
	setp.lt.u32	%p11, %r1875, %r1871;
	@%p11 bra 	BB6_3;

BB6_10:
	ret;
}


  