//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u32 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [gpu_memset_param_0];
	ld.param.u32 	%r2, [gpu_memset_param_1];
	ld.param.u32 	%r3, [gpu_memset_param_2];
	mov.b32	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
	setp.ge.u32	%p1, %r1, %r3;
	@%p1 bra 	BB0_2;

	mul.wide.u32 	%rd2, %r1, 16;
	add.s64 	%rd3, %rd1, %rd2;
	st.global.v4.u32 	[%rd3], {%r2, %r2, %r2, %r2};

BB0_2:
	ret;
}

	// .globl	m01710_m04
.entry m01710_m04(
	.param .u64 .ptr .global .align 4 m01710_m04_param_0,
	.param .u64 .ptr .global .align 4 m01710_m04_param_1,
	.param .u64 .ptr .global .align 4 m01710_m04_param_2,
	.param .u64 .ptr .global .align 4 m01710_m04_param_3,
	.param .u64 .ptr .global .align 1 m01710_m04_param_4,
	.param .u64 .ptr .global .align 1 m01710_m04_param_5,
	.param .u64 .ptr .global .align 4 m01710_m04_param_6,
	.param .u64 .ptr .global .align 4 m01710_m04_param_7,
	.param .u64 .ptr .global .align 4 m01710_m04_param_8,
	.param .u64 .ptr .global .align 4 m01710_m04_param_9,
	.param .u64 .ptr .global .align 4 m01710_m04_param_10,
	.param .u64 .ptr .global .align 4 m01710_m04_param_11,
	.param .u64 .ptr .global .align 4 m01710_m04_param_12,
	.param .u64 .ptr .global .align 4 m01710_m04_param_13,
	.param .u64 .ptr .global .align 4 m01710_m04_param_14,
	.param .u64 .ptr .global .align 4 m01710_m04_param_15,
	.param .u64 .ptr .global .align 4 m01710_m04_param_16,
	.param .u64 .ptr .global .align 4 m01710_m04_param_17,
	.param .u64 .ptr .global .align 1 m01710_m04_param_18,
	.param .u64 .ptr .global .align 4 m01710_m04_param_19,
	.param .u64 .ptr .global .align 4 m01710_m04_param_20,
	.param .u64 .ptr .global .align 4 m01710_m04_param_21,
	.param .u64 .ptr .global .align 4 m01710_m04_param_22,
	.param .u64 .ptr .global .align 4 m01710_m04_param_23,
	.param .u32 m01710_m04_param_24,
	.param .u32 m01710_m04_param_25,
	.param .u32 m01710_m04_param_26,
	.param .u32 m01710_m04_param_27,
	.param .u32 m01710_m04_param_28,
	.param .u32 m01710_m04_param_29,
	.param .u32 m01710_m04_param_30,
	.param .u32 m01710_m04_param_31,
	.param .u32 m01710_m04_param_32,
	.param .u32 m01710_m04_param_33,
	.param .u32 m01710_m04_param_34
)
{
	.reg .pred 	%p<50>;
	.reg .b32 	%r<2773>;
	.reg .b64 	%rd<2726>;


	ld.param.u64 	%rd102, [m01710_m04_param_0];
	ld.param.u64 	%rd115, [m01710_m04_param_17];
	ld.param.u64 	%rd116, [m01710_m04_param_19];
	ld.param.u32 	%r203, [m01710_m04_param_24];
	ld.param.u32 	%r204, [m01710_m04_param_25];
	ld.param.u32 	%r205, [m01710_m04_param_26];
	ld.param.u32 	%r206, [m01710_m04_param_27];
	ld.param.u32 	%r207, [m01710_m04_param_30];
	ld.param.u32 	%r208, [m01710_m04_param_31];
	ld.param.u32 	%r209, [m01710_m04_param_32];
	ld.param.u32 	%r210, [m01710_m04_param_34];
	mov.b32	%r211, %envreg3;
	mov.u32 	%r212, %ctaid.x;
	mov.u32 	%r213, %ntid.x;
	mad.lo.s32 	%r214, %r212, %r213, %r211;
	mov.u32 	%r215, %tid.x;
	add.s32 	%r1, %r214, %r215;
	setp.ge.u32	%p1, %r1, %r210;
	@%p1 bra 	BB1_73;

	mul.wide.u32 	%rd117, %r1, 80;
	add.s64 	%rd118, %rd102, %rd117;
	ld.global.u32 	%r2, [%rd118];
	ld.global.u32 	%r3, [%rd118+4];
	ld.global.u32 	%r4, [%rd118+8];
	ld.global.u32 	%r5, [%rd118+12];
	mul.wide.u32 	%rd119, %r206, 180;
	add.s64 	%rd1, %rd115, %rd119;
	ld.global.u32 	%r2764, [%rd1];
	ld.global.u32 	%r2765, [%rd1+4];
	ld.global.u32 	%r2766, [%rd1+8];
	ld.global.u32 	%r2767, [%rd1+12];
	ld.global.u32 	%r2760, [%rd1+16];
	ld.global.u32 	%r2761, [%rd1+20];
	ld.global.u32 	%r2762, [%rd1+24];
	ld.global.u32 	%r2763, [%rd1+28];
	ld.global.u32 	%r2756, [%rd1+32];
	ld.global.u32 	%r2757, [%rd1+36];
	ld.global.u32 	%r2758, [%rd1+40];
	ld.global.u32 	%r2759, [%rd1+44];
	ld.global.u32 	%r2753, [%rd1+48];
	ld.global.u32 	%r2754, [%rd1+52];
	ld.global.u32 	%r2755, [%rd1+56];
	ld.global.u32 	%r21, [%rd118+64];
	and.b32  	%r217, %r21, 3;
	mov.u32 	%r218, 4;
	sub.s32 	%r219, %r218, %r217;
	shl.b32 	%r220, %r219, 2;
	mov.u32 	%r221, 1985229328;
	shr.u32 	%r222, %r221, %r220;
	and.b32  	%r22, %r222, 65535;
	shr.u32 	%r216, %r21, 2;
	setp.gt.s32	%p2, %r216, 7;
	@%p2 bra 	BB1_17;

	setp.gt.s32	%p14, %r216, 3;
	@%p14 bra 	BB1_10;

	setp.gt.s32	%p20, %r216, 1;
	@%p20 bra 	BB1_7;

	setp.eq.s32	%p23, %r216, 0;
	@%p23 bra 	BB1_42;
	bra.uni 	BB1_5;

BB1_42:
	// inline asm
	prmt.b32 %r2755, %r2754, %r2755, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2753, %r2754, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2759, %r2753, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2758, %r2759, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2757, %r2758, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2756, %r2757, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2756, %r2763, %r2756, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2762, %r2763, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2761, %r2762, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2760, %r2761, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2766, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r820, 0;
	// inline asm
	prmt.b32 %r2764, %r820, %r2764, %r22;
	// inline asm
	bra.uni 	BB1_43;

BB1_17:
	setp.gt.s32	%p3, %r216, 11;
	@%p3 bra 	BB1_25;

	setp.gt.s32	%p9, %r216, 9;
	@%p9 bra 	BB1_22;

	setp.eq.s32	%p12, %r216, 8;
	@%p12 bra 	BB1_37;
	bra.uni 	BB1_20;

BB1_37:
	// inline asm
	prmt.b32 %r2755, %r2761, %r2762, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2760, %r2761, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2760, 0;
	// inline asm
	prmt.b32 %r2756, %r2760, %r2764, %r22;
	// inline asm
	mov.u32 	%r2761, %r2760;
	mov.u32 	%r2762, %r2760;
	mov.u32 	%r2763, %r2760;
	bra.uni 	BB1_38;

BB1_10:
	setp.gt.s32	%p15, %r216, 5;
	@%p15 bra 	BB1_14;

	setp.eq.s32	%p18, %r216, 4;
	@%p18 bra 	BB1_40;
	bra.uni 	BB1_12;

BB1_40:
	// inline asm
	prmt.b32 %r2755, %r2757, %r2758, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2756, %r2757, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2763, %r2756, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2762, %r2763, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2761, %r2762, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2760, %r2761, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2756, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2765, 0;
	// inline asm
	prmt.b32 %r2760, %r2765, %r2764, %r22;
	// inline asm
	mov.u32 	%r2764, %r2765;
	mov.u32 	%r2766, %r2765;
	mov.u32 	%r2767, %r2765;
	bra.uni 	BB1_43;

BB1_25:
	setp.gt.s32	%p4, %r216, 13;
	@%p4 bra 	BB1_29;

	setp.eq.s32	%p7, %r216, 12;
	@%p7 bra 	BB1_34;
	bra.uni 	BB1_27;

BB1_34:
	// inline asm
	prmt.b32 %r2755, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2756, 0;
	// inline asm
	prmt.b32 %r2753, %r2756, %r2764, %r22;
	// inline asm
	mov.u32 	%r2757, %r2756;
	mov.u32 	%r2758, %r2756;
	mov.u32 	%r2759, %r2756;
	bra.uni 	BB1_35;

BB1_7:
	setp.eq.s32	%p21, %r216, 2;
	@%p21 bra 	BB1_41;
	bra.uni 	BB1_8;

BB1_41:
	// inline asm
	prmt.b32 %r2755, %r2759, %r2753, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2758, %r2759, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2757, %r2758, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2756, %r2757, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2763, %r2756, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2762, %r2763, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2756, %r2761, %r2762, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2760, %r2761, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2765, 0;
	// inline asm
	prmt.b32 %r2766, %r2765, %r2764, %r22;
	// inline asm
	mov.u32 	%r2764, %r2765;
	bra.uni 	BB1_43;

BB1_22:
	setp.eq.s32	%p10, %r216, 10;
	@%p10 bra 	BB1_36;
	bra.uni 	BB1_23;

BB1_36:
	// inline asm
	prmt.b32 %r2755, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2756, 0;
	// inline asm
	prmt.b32 %r2758, %r2756, %r2764, %r22;
	// inline asm
	mov.u32 	%r2757, %r2756;
	bra.uni 	BB1_35;

BB1_14:
	setp.eq.s32	%p16, %r216, 6;
	@%p16 bra 	BB1_39;
	bra.uni 	BB1_15;

BB1_39:
	// inline asm
	prmt.b32 %r2755, %r2763, %r2756, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2762, %r2763, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2761, %r2762, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2760, %r2761, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2756, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2760, 0;
	// inline asm
	prmt.b32 %r2762, %r2760, %r2764, %r22;
	// inline asm
	mov.u32 	%r2761, %r2760;
	bra.uni 	BB1_38;

BB1_29:
	setp.eq.s32	%p5, %r216, 14;
	@%p5 bra 	BB1_33;
	bra.uni 	BB1_30;

BB1_33:
	mov.u32 	%r2753, 0;
	// inline asm
	prmt.b32 %r2755, %r2753, %r2764, %r22;
	// inline asm
	mov.u32 	%r2754, %r2753;
	bra.uni 	BB1_32;

BB1_5:
	setp.eq.s32	%p24, %r216, 1;
	@%p24 bra 	BB1_6;
	bra.uni 	BB1_43;

BB1_6:
	// inline asm
	prmt.b32 %r2755, %r2753, %r2754, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2759, %r2753, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2758, %r2759, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2757, %r2758, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2756, %r2757, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2763, %r2756, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2756, %r2762, %r2763, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2761, %r2762, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2760, %r2761, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2766, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r762, 0;
	// inline asm
	prmt.b32 %r2765, %r762, %r2764, %r22;
	// inline asm
	mov.u32 	%r2764, %r762;
	bra.uni 	BB1_43;

BB1_20:
	setp.eq.s32	%p13, %r216, 9;
	@%p13 bra 	BB1_21;
	bra.uni 	BB1_43;

BB1_21:
	// inline asm
	prmt.b32 %r2755, %r2760, %r2761, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2756, 0;
	// inline asm
	prmt.b32 %r2757, %r2756, %r2764, %r22;
	// inline asm
	bra.uni 	BB1_35;

BB1_12:
	setp.eq.s32	%p19, %r216, 5;
	@%p19 bra 	BB1_13;
	bra.uni 	BB1_43;

BB1_13:
	// inline asm
	prmt.b32 %r2755, %r2756, %r2757, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2763, %r2756, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2762, %r2763, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2761, %r2762, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2760, %r2761, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2756, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2760, 0;
	// inline asm
	prmt.b32 %r2761, %r2760, %r2764, %r22;
	// inline asm
	bra.uni 	BB1_38;

BB1_27:
	setp.eq.s32	%p8, %r216, 13;
	@%p8 bra 	BB1_28;
	bra.uni 	BB1_43;

BB1_28:
	// inline asm
	prmt.b32 %r2755, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2753, 0;
	// inline asm
	prmt.b32 %r2754, %r2753, %r2764, %r22;
	// inline asm
	bra.uni 	BB1_32;

BB1_8:
	setp.eq.s32	%p22, %r216, 3;
	@%p22 bra 	BB1_9;
	bra.uni 	BB1_43;

BB1_9:
	// inline asm
	prmt.b32 %r2755, %r2758, %r2759, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2757, %r2758, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2756, %r2757, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2763, %r2756, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2762, %r2763, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2761, %r2762, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2756, %r2760, %r2761, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2765, 0;
	// inline asm
	prmt.b32 %r2767, %r2765, %r2764, %r22;
	// inline asm
	mov.u32 	%r2764, %r2765;
	mov.u32 	%r2766, %r2765;
	bra.uni 	BB1_43;

BB1_23:
	setp.eq.s32	%p11, %r216, 11;
	@%p11 bra 	BB1_24;
	bra.uni 	BB1_43;

BB1_24:
	// inline asm
	prmt.b32 %r2755, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2756, 0;
	// inline asm
	prmt.b32 %r2759, %r2756, %r2764, %r22;
	// inline asm
	mov.u32 	%r2757, %r2756;
	mov.u32 	%r2758, %r2756;

BB1_35:
	mov.u32 	%r2760, %r2756;
	mov.u32 	%r2761, %r2756;
	mov.u32 	%r2762, %r2756;
	mov.u32 	%r2763, %r2756;
	mov.u32 	%r2764, %r2756;
	mov.u32 	%r2765, %r2756;
	mov.u32 	%r2766, %r2756;
	mov.u32 	%r2767, %r2756;
	bra.uni 	BB1_43;

BB1_15:
	setp.eq.s32	%p17, %r216, 7;
	@%p17 bra 	BB1_16;
	bra.uni 	BB1_43;

BB1_16:
	// inline asm
	prmt.b32 %r2755, %r2762, %r2763, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2754, %r2761, %r2762, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2753, %r2760, %r2761, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2759, %r2767, %r2760, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2766, %r2767, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2765, %r2766, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2756, %r2764, %r2765, %r22;
	// inline asm
	mov.u32 	%r2760, 0;
	// inline asm
	prmt.b32 %r2763, %r2760, %r2764, %r22;
	// inline asm
	mov.u32 	%r2761, %r2760;
	mov.u32 	%r2762, %r2760;

BB1_38:
	mov.u32 	%r2764, %r2760;
	mov.u32 	%r2765, %r2760;
	mov.u32 	%r2766, %r2760;
	mov.u32 	%r2767, %r2760;
	bra.uni 	BB1_43;

BB1_30:
	setp.ne.s32	%p6, %r216, 15;
	@%p6 bra 	BB1_43;

	mov.u32 	%r2753, 0;
	mov.u32 	%r2754, %r2753;
	mov.u32 	%r2755, %r2753;

BB1_32:
	mov.u32 	%r2756, %r2753;
	mov.u32 	%r2757, %r2753;
	mov.u32 	%r2758, %r2753;
	mov.u32 	%r2759, %r2753;
	mov.u32 	%r2760, %r2753;
	mov.u32 	%r2761, %r2753;
	mov.u32 	%r2762, %r2753;
	mov.u32 	%r2763, %r2753;
	mov.u32 	%r2764, %r2753;
	mov.u32 	%r2765, %r2753;
	mov.u32 	%r2766, %r2753;
	mov.u32 	%r2767, %r2753;

BB1_43:
	// inline asm
	prmt.b32 %r823, %r2764, 0, 0x0123;
	// inline asm
	or.b32  	%r158, %r823, %r2;
	// inline asm
	prmt.b32 %r825, %r2765, 0, 0x0123;
	// inline asm
	or.b32  	%r159, %r825, %r3;
	// inline asm
	prmt.b32 %r827, %r2766, 0, 0x0123;
	// inline asm
	or.b32  	%r160, %r827, %r4;
	// inline asm
	prmt.b32 %r829, %r2767, 0, 0x0123;
	// inline asm
	or.b32  	%r161, %r829, %r5;
	// inline asm
	prmt.b32 %r831, %r2760, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r833, %r2761, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r835, %r2762, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r837, %r2763, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r839, %r2756, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r841, %r2757, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r843, %r2758, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r845, %r2759, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r847, %r2753, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r849, %r2754, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r851, %r2755, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r853, [%rd1+128];
	add.s32 	%r173, %r853, %r21;
	setp.eq.s32	%p25, %r207, 0;
	@%p25 bra 	BB1_73;

	mov.b64	%rd120, {%r161, %r160};
	mov.b64	%rd2, {%r833, %r831};
	mov.b64	%rd121, {%r837, %r835};
	mov.b64	%rd3, {%r841, %r839};
	mov.b64	%rd4, {%r845, %r843};
	mov.b64	%rd5, {%r849, %r847};
	shl.b32 	%r855, %r173, 3;
	mov.b64	%rd6, {%r855, %r851};
	ld.const.u64 	%rd122, [k_sha512];
	add.s64 	%rd7, %rd122, 6620516959819538809;
	mov.u64 	%rd123, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r856,%dummy}, %rd123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd123;
	}
	shf.r.wrap.b32 	%r858, %r857, %r856, 18;
	shf.r.wrap.b32 	%r859, %r856, %r857, 18;
	mov.b64 	%rd124, {%r859, %r858};
	shf.r.wrap.b32 	%r860, %r857, %r856, 14;
	shf.r.wrap.b32 	%r861, %r856, %r857, 14;
	mov.b64 	%rd125, {%r861, %r860};
	xor.b64  	%rd126, %rd124, %rd125;
	shf.l.wrap.b32 	%r862, %r856, %r857, 23;
	shf.l.wrap.b32 	%r863, %r857, %r856, 23;
	mov.b64 	%rd127, {%r863, %r862};
	xor.b64  	%rd8, %rd126, %rd127;
	mov.u64 	%rd128, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r864}, %rd128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r865,%dummy}, %rd128;
	}
	shf.l.wrap.b32 	%r866, %r865, %r864, 30;
	shf.l.wrap.b32 	%r867, %r864, %r865, 30;
	mov.b64 	%rd129, {%r867, %r866};
	shf.r.wrap.b32 	%r868, %r864, %r865, 28;
	shf.r.wrap.b32 	%r869, %r865, %r864, 28;
	mov.b64 	%rd130, {%r869, %r868};
	xor.b64  	%rd131, %rd129, %rd130;
	shf.l.wrap.b32 	%r870, %r865, %r864, 25;
	shf.l.wrap.b32 	%r871, %r864, %r865, 25;
	mov.b64 	%rd132, {%r871, %r870};
	xor.b64  	%rd9, %rd131, %rd132;
	ld.const.u64 	%rd133, [k_sha512+8];
	add.s64 	%rd134, %rd120, %rd133;
	add.s64 	%rd10, %rd134, 2270897969802886507;
	ld.const.u64 	%rd135, [k_sha512+16];
	add.s64 	%rd136, %rd2, %rd135;
	add.s64 	%rd11, %rd136, -7276294671716946913;
	ld.const.u64 	%rd137, [k_sha512+24];
	add.s64 	%rd138, %rd121, %rd137;
	add.s64 	%rd12, %rd138, 5840696475078001361;
	ld.const.u64 	%rd13, [k_sha512+32];
	ld.const.u64 	%rd14, [k_sha512+40];
	ld.const.u64 	%rd15, [k_sha512+48];
	ld.const.u64 	%rd16, [k_sha512+56];
	ld.const.u64 	%rd17, [k_sha512+64];
	ld.const.u64 	%rd18, [k_sha512+72];
	ld.const.u64 	%rd19, [k_sha512+80];
	ld.const.u64 	%rd20, [k_sha512+88];
	ld.const.u64 	%rd21, [k_sha512+96];
	ld.const.u64 	%rd22, [k_sha512+104];
	ld.const.u64 	%rd23, [k_sha512+112];
	ld.const.u64 	%rd24, [k_sha512+120];
	and.b32  	%r176, %r204, 31;
	and.b32  	%r177, %r205, 31;
	cvt.u64.u32	%rd25, %r209;
	mov.u64 	%rd139, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r872}, %rd139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r873,%dummy}, %rd139;
	}
	shf.l.wrap.b32 	%r874, %r873, %r872, 3;
	shf.l.wrap.b32 	%r875, %r872, %r873, 3;
	mov.b64 	%rd140, {%r875, %r874};
	shf.r.wrap.b32 	%r876, %r872, %r873, 19;
	shf.r.wrap.b32 	%r877, %r873, %r872, 19;
	mov.b64 	%rd141, {%r877, %r876};
	xor.b64  	%rd26, %rd141, %rd140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r878,%dummy}, %rd120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r879}, %rd120;
	}
	shf.r.wrap.b32 	%r880, %r879, %r878, 1;
	shf.r.wrap.b32 	%r881, %r878, %r879, 1;
	mov.b64 	%rd142, {%r881, %r880};
	shf.r.wrap.b32 	%r882, %r879, %r878, 8;
	shf.r.wrap.b32 	%r883, %r878, %r879, 8;
	mov.b64 	%rd143, {%r883, %r882};
	shr.u64 	%rd144, %rd120, 7;
	xor.b64  	%rd145, %rd142, %rd144;
	xor.b64  	%rd27, %rd145, %rd143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r884,%dummy}, %rd6;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r885}, %rd6;
	}
	shf.r.wrap.b32 	%r886, %r885, %r884, 19;
	shf.r.wrap.b32 	%r887, %r884, %r885, 19;
	mov.b64 	%rd146, {%r887, %r886};
	shf.l.wrap.b32 	%r888, %r884, %r885, 3;
	shf.l.wrap.b32 	%r889, %r885, %r884, 3;
	mov.b64 	%rd147, {%r889, %r888};
	shr.u64 	%rd148, %rd6, 6;
	xor.b64  	%rd149, %rd146, %rd148;
	xor.b64  	%rd150, %rd149, %rd147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r890,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r891}, %rd2;
	}
	shf.r.wrap.b32 	%r892, %r891, %r890, 1;
	shf.r.wrap.b32 	%r893, %r890, %r891, 1;
	mov.b64 	%rd151, {%r893, %r892};
	shf.r.wrap.b32 	%r894, %r891, %r890, 8;
	shf.r.wrap.b32 	%r895, %r890, %r891, 8;
	mov.b64 	%rd152, {%r895, %r894};
	shr.u64 	%rd153, %rd2, 7;
	xor.b64  	%rd154, %rd151, %rd153;
	xor.b64  	%rd155, %rd154, %rd152;
	add.s64 	%rd156, %rd120, %rd150;
	add.s64 	%rd28, %rd156, %rd155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r896,%dummy}, %rd121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r897}, %rd121;
	}
	shf.r.wrap.b32 	%r898, %r897, %r896, 1;
	shf.r.wrap.b32 	%r899, %r896, %r897, 1;
	mov.b64 	%rd157, {%r899, %r898};
	shf.r.wrap.b32 	%r900, %r897, %r896, 8;
	shf.r.wrap.b32 	%r901, %r896, %r897, 8;
	mov.b64 	%rd158, {%r901, %r900};
	shr.u64 	%rd159, %rd121, 7;
	xor.b64  	%rd160, %rd157, %rd159;
	xor.b64  	%rd29, %rd160, %rd158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd28;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd28;
	}
	shf.r.wrap.b32 	%r904, %r903, %r902, 19;
	shf.r.wrap.b32 	%r905, %r902, %r903, 19;
	mov.b64 	%rd161, {%r905, %r904};
	shf.l.wrap.b32 	%r906, %r902, %r903, 3;
	shf.l.wrap.b32 	%r907, %r903, %r902, 3;
	mov.b64 	%rd162, {%r907, %r906};
	shr.u64 	%rd163, %rd28, 6;
	xor.b64  	%rd164, %rd161, %rd163;
	xor.b64  	%rd165, %rd164, %rd162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r908,%dummy}, %rd3;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r909}, %rd3;
	}
	shf.r.wrap.b32 	%r910, %r909, %r908, 1;
	shf.r.wrap.b32 	%r911, %r908, %r909, 1;
	mov.b64 	%rd166, {%r911, %r910};
	shf.r.wrap.b32 	%r912, %r909, %r908, 8;
	shf.r.wrap.b32 	%r913, %r908, %r909, 8;
	mov.b64 	%rd167, {%r913, %r912};
	shr.u64 	%rd168, %rd3, 7;
	xor.b64  	%rd169, %rd166, %rd168;
	xor.b64  	%rd170, %rd169, %rd167;
	add.s64 	%rd171, %rd121, %rd165;
	add.s64 	%rd30, %rd171, %rd170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r914,%dummy}, %rd4;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r915}, %rd4;
	}
	shf.r.wrap.b32 	%r916, %r915, %r914, 1;
	shf.r.wrap.b32 	%r917, %r914, %r915, 1;
	mov.b64 	%rd172, {%r917, %r916};
	shf.r.wrap.b32 	%r918, %r915, %r914, 8;
	shf.r.wrap.b32 	%r919, %r914, %r915, 8;
	mov.b64 	%rd173, {%r919, %r918};
	shr.u64 	%rd174, %rd4, 7;
	xor.b64  	%rd175, %rd172, %rd174;
	xor.b64  	%rd31, %rd175, %rd173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r920,%dummy}, %rd30;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r921}, %rd30;
	}
	shf.r.wrap.b32 	%r922, %r921, %r920, 19;
	shf.r.wrap.b32 	%r923, %r920, %r921, 19;
	mov.b64 	%rd176, {%r923, %r922};
	shf.l.wrap.b32 	%r924, %r920, %r921, 3;
	shf.l.wrap.b32 	%r925, %r921, %r920, 3;
	mov.b64 	%rd177, {%r925, %r924};
	shr.u64 	%rd178, %rd30, 6;
	xor.b64  	%rd179, %rd176, %rd178;
	xor.b64  	%rd180, %rd179, %rd177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd5;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd5;
	}
	shf.r.wrap.b32 	%r928, %r927, %r926, 1;
	shf.r.wrap.b32 	%r929, %r926, %r927, 1;
	mov.b64 	%rd181, {%r929, %r928};
	shf.r.wrap.b32 	%r930, %r927, %r926, 8;
	shf.r.wrap.b32 	%r931, %r926, %r927, 8;
	mov.b64 	%rd182, {%r931, %r930};
	shr.u64 	%rd183, %rd5, 7;
	xor.b64  	%rd184, %rd181, %rd183;
	xor.b64  	%rd185, %rd184, %rd182;
	add.s64 	%rd186, %rd4, %rd180;
	add.s64 	%rd32, %rd186, %rd185;
	shf.r.wrap.b32 	%r932, %r872, %r873, 8;
	shf.r.wrap.b32 	%r933, %r873, %r872, 8;
	mov.b64 	%rd187, {%r933, %r932};
	shf.r.wrap.b32 	%r934, %r872, %r873, 1;
	shf.r.wrap.b32 	%r935, %r873, %r872, 1;
	mov.b64 	%rd188, {%r935, %r934};
	xor.b64  	%rd33, %rd188, %rd187;
	add.s64 	%rd34, %rd5, %rd6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r936,%dummy}, %rd32;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd32;
	}
	shf.r.wrap.b32 	%r938, %r937, %r936, 19;
	shf.r.wrap.b32 	%r939, %r936, %r937, 19;
	mov.b64 	%rd189, {%r939, %r938};
	shf.l.wrap.b32 	%r940, %r936, %r937, 3;
	shf.l.wrap.b32 	%r941, %r937, %r936, 3;
	mov.b64 	%rd190, {%r941, %r940};
	shr.u64 	%rd191, %rd32, 6;
	xor.b64  	%rd192, %rd189, %rd191;
	xor.b64  	%rd35, %rd192, %rd190;
	shf.r.wrap.b32 	%r942, %r885, %r884, 1;
	shf.r.wrap.b32 	%r943, %r884, %r885, 1;
	mov.b64 	%rd193, {%r943, %r942};
	shf.r.wrap.b32 	%r944, %r885, %r884, 8;
	shf.r.wrap.b32 	%r945, %r884, %r885, 8;
	mov.b64 	%rd194, {%r945, %r944};
	shr.u64 	%rd195, %rd6, 7;
	xor.b64  	%rd196, %rd193, %rd195;
	xor.b64  	%rd36, %rd196, %rd194;
	ld.const.u64 	%rd37, [k_sha512+128];
	ld.const.u64 	%rd38, [k_sha512+136];
	ld.const.u64 	%rd39, [k_sha512+144];
	ld.const.u64 	%rd40, [k_sha512+152];
	ld.const.u64 	%rd41, [k_sha512+160];
	ld.const.u64 	%rd42, [k_sha512+168];
	ld.const.u64 	%rd43, [k_sha512+176];
	ld.const.u64 	%rd44, [k_sha512+184];
	ld.const.u64 	%rd45, [k_sha512+192];
	ld.const.u64 	%rd46, [k_sha512+200];
	ld.const.u64 	%rd47, [k_sha512+208];
	ld.const.u64 	%rd48, [k_sha512+216];
	ld.const.u64 	%rd49, [k_sha512+224];
	ld.const.u64 	%rd50, [k_sha512+232];
	ld.const.u64 	%rd51, [k_sha512+240];
	ld.const.u64 	%rd52, [k_sha512+248];
	shf.r.wrap.b32 	%r946, %r903, %r902, 1;
	shf.r.wrap.b32 	%r947, %r902, %r903, 1;
	mov.b64 	%rd197, {%r947, %r946};
	shf.r.wrap.b32 	%r948, %r903, %r902, 8;
	shf.r.wrap.b32 	%r949, %r902, %r903, 8;
	mov.b64 	%rd198, {%r949, %r948};
	shr.u64 	%rd199, %rd28, 7;
	xor.b64  	%rd200, %rd197, %rd199;
	xor.b64  	%rd53, %rd200, %rd198;
	shf.r.wrap.b32 	%r950, %r921, %r920, 1;
	shf.r.wrap.b32 	%r951, %r920, %r921, 1;
	mov.b64 	%rd201, {%r951, %r950};
	shf.r.wrap.b32 	%r952, %r921, %r920, 8;
	shf.r.wrap.b32 	%r953, %r920, %r921, 8;
	mov.b64 	%rd202, {%r953, %r952};
	shr.u64 	%rd203, %rd30, 7;
	xor.b64  	%rd204, %rd201, %rd203;
	xor.b64  	%rd54, %rd204, %rd202;
	shf.r.wrap.b32 	%r954, %r937, %r936, 1;
	shf.r.wrap.b32 	%r955, %r936, %r937, 1;
	mov.b64 	%rd205, {%r955, %r954};
	shf.r.wrap.b32 	%r956, %r937, %r936, 8;
	shf.r.wrap.b32 	%r957, %r936, %r937, 8;
	mov.b64 	%rd206, {%r957, %r956};
	shr.u64 	%rd207, %rd32, 7;
	xor.b64  	%rd208, %rd205, %rd207;
	xor.b64  	%rd55, %rd208, %rd206;
	ld.const.u64 	%rd56, [k_sha512+256];
	ld.const.u64 	%rd57, [k_sha512+264];
	ld.const.u64 	%rd58, [k_sha512+272];
	ld.const.u64 	%rd59, [k_sha512+280];
	ld.const.u64 	%rd60, [k_sha512+288];
	ld.const.u64 	%rd61, [k_sha512+296];
	ld.const.u64 	%rd62, [k_sha512+304];
	ld.const.u64 	%rd63, [k_sha512+312];
	ld.const.u64 	%rd64, [k_sha512+320];
	ld.const.u64 	%rd65, [k_sha512+328];
	ld.const.u64 	%rd66, [k_sha512+336];
	ld.const.u64 	%rd67, [k_sha512+344];
	ld.const.u64 	%rd68, [k_sha512+352];
	ld.const.u64 	%rd69, [k_sha512+360];
	ld.const.u64 	%rd70, [k_sha512+368];
	ld.const.u64 	%rd71, [k_sha512+376];
	ld.const.u64 	%rd72, [k_sha512+384];
	ld.const.u64 	%rd73, [k_sha512+392];
	ld.const.u64 	%rd74, [k_sha512+400];
	ld.const.u64 	%rd75, [k_sha512+408];
	ld.const.u64 	%rd76, [k_sha512+416];
	ld.const.u64 	%rd77, [k_sha512+424];
	ld.const.u64 	%rd78, [k_sha512+432];
	ld.const.u64 	%rd79, [k_sha512+440];
	ld.const.u64 	%rd80, [k_sha512+448];
	ld.const.u64 	%rd81, [k_sha512+456];
	ld.const.u64 	%rd82, [k_sha512+464];
	ld.const.u64 	%rd83, [k_sha512+472];
	ld.const.u64 	%rd84, [k_sha512+480];
	ld.const.u64 	%rd85, [k_sha512+488];
	ld.const.u64 	%rd86, [k_sha512+496];
	ld.const.u64 	%rd87, [k_sha512+504];
	ld.const.u64 	%rd88, [k_sha512+512];
	ld.const.u64 	%rd89, [k_sha512+520];
	ld.const.u64 	%rd90, [k_sha512+528];
	ld.const.u64 	%rd91, [k_sha512+536];
	ld.const.u64 	%rd92, [k_sha512+544];
	ld.const.u64 	%rd93, [k_sha512+552];
	ld.const.u64 	%rd94, [k_sha512+560];
	ld.const.u64 	%rd95, [k_sha512+568];
	ld.const.u64 	%rd96, [k_sha512+576];
	ld.const.u64 	%rd97, [k_sha512+584];
	ld.const.u64 	%rd98, [k_sha512+592];
	ld.const.u64 	%rd99, [k_sha512+600];
	mov.u32 	%r2768, 0;
	ld.const.u64 	%rd100, [k_sha512+608];

BB1_45:
	ld.param.u64 	%rd2720, [m01710_m04_param_6];
	ld.param.u64 	%rd2719, [m01710_m04_param_3];
	mul.wide.u32 	%rd209, %r2768, 4;
	add.s64 	%rd210, %rd2719, %rd209;
	ld.global.u32 	%r958, [%rd210];
	or.b32  	%r959, %r158, %r958;
	mov.b64	%rd211, {%r159, %r959};
	add.s64 	%rd212, %rd7, %rd211;
	add.s64 	%rd213, %rd212, %rd8;
	add.s64 	%rd214, %rd213, -4263291710961585108;
	add.s64 	%rd215, %rd213, %rd9;
	add.s64 	%rd216, %rd215, 6482280703085258342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r960,%dummy}, %rd214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r961}, %rd214;
	}
	shf.r.wrap.b32 	%r962, %r961, %r960, 14;
	shf.r.wrap.b32 	%r963, %r960, %r961, 14;
	mov.b64 	%rd217, {%r963, %r962};
	shf.r.wrap.b32 	%r964, %r961, %r960, 18;
	shf.r.wrap.b32 	%r965, %r960, %r961, 18;
	mov.b64 	%rd218, {%r965, %r964};
	xor.b64  	%rd219, %rd218, %rd217;
	shf.l.wrap.b32 	%r966, %r960, %r961, 23;
	shf.l.wrap.b32 	%r967, %r961, %r960, 23;
	mov.b64 	%rd220, {%r967, %r966};
	xor.b64  	%rd221, %rd219, %rd220;
	and.b64  	%rd222, %rd214, -3887949035690463538;
	xor.b64  	%rd223, %rd222, -7276294671716946913;
	add.s64 	%rd224, %rd10, %rd223;
	add.s64 	%rd225, %rd224, %rd221;
	add.s64 	%rd226, %rd225, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r968,%dummy}, %rd216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r969}, %rd216;
	}
	shf.r.wrap.b32 	%r970, %r969, %r968, 28;
	shf.r.wrap.b32 	%r971, %r968, %r969, 28;
	mov.b64 	%rd227, {%r971, %r970};
	shf.l.wrap.b32 	%r972, %r968, %r969, 30;
	shf.l.wrap.b32 	%r973, %r969, %r968, 30;
	mov.b64 	%rd228, {%r973, %r972};
	xor.b64  	%rd229, %rd228, %rd227;
	shf.l.wrap.b32 	%r974, %r968, %r969, 25;
	shf.l.wrap.b32 	%r975, %r969, %r968, 25;
	mov.b64 	%rd230, {%r975, %r974};
	xor.b64  	%rd231, %rd229, %rd230;
	xor.b64  	%rd232, %rd216, -4942790177534073029;
	xor.b64  	%rd233, %rd216, 7640891576956012808;
	and.b64  	%rd234, %rd233, %rd232;
	xor.b64  	%rd235, %rd234, %rd216;
	add.s64 	%rd236, %rd225, %rd235;
	add.s64 	%rd237, %rd236, %rd231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r976,%dummy}, %rd226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r977}, %rd226;
	}
	shf.r.wrap.b32 	%r978, %r977, %r976, 14;
	shf.r.wrap.b32 	%r979, %r976, %r977, 14;
	mov.b64 	%rd238, {%r979, %r978};
	shf.r.wrap.b32 	%r980, %r977, %r976, 18;
	shf.r.wrap.b32 	%r981, %r976, %r977, 18;
	mov.b64 	%rd239, {%r981, %r980};
	xor.b64  	%rd240, %rd239, %rd238;
	shf.l.wrap.b32 	%r982, %r976, %r977, 23;
	shf.l.wrap.b32 	%r983, %r977, %r976, 23;
	mov.b64 	%rd241, {%r983, %r982};
	xor.b64  	%rd242, %rd240, %rd241;
	xor.b64  	%rd243, %rd214, 5840696475078001361;
	and.b64  	%rd244, %rd226, %rd243;
	xor.b64  	%rd245, %rd244, 5840696475078001361;
	add.s64 	%rd246, %rd11, %rd245;
	add.s64 	%rd247, %rd246, %rd242;
	add.s64 	%rd248, %rd247, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r984,%dummy}, %rd237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r985}, %rd237;
	}
	shf.r.wrap.b32 	%r986, %r985, %r984, 28;
	shf.r.wrap.b32 	%r987, %r984, %r985, 28;
	mov.b64 	%rd249, {%r987, %r986};
	shf.l.wrap.b32 	%r988, %r984, %r985, 30;
	shf.l.wrap.b32 	%r989, %r985, %r984, 30;
	mov.b64 	%rd250, {%r989, %r988};
	xor.b64  	%rd251, %rd250, %rd249;
	shf.l.wrap.b32 	%r990, %r984, %r985, 25;
	shf.l.wrap.b32 	%r991, %r985, %r984, 25;
	mov.b64 	%rd252, {%r991, %r990};
	xor.b64  	%rd253, %rd251, %rd252;
	xor.b64  	%rd254, %rd237, 7640891576956012808;
	xor.b64  	%rd255, %rd237, %rd216;
	and.b64  	%rd256, %rd255, %rd254;
	xor.b64  	%rd257, %rd256, %rd237;
	add.s64 	%rd258, %rd247, %rd257;
	add.s64 	%rd259, %rd258, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r992,%dummy}, %rd248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r993}, %rd248;
	}
	shf.r.wrap.b32 	%r994, %r993, %r992, 14;
	shf.r.wrap.b32 	%r995, %r992, %r993, 14;
	mov.b64 	%rd260, {%r995, %r994};
	shf.r.wrap.b32 	%r996, %r993, %r992, 18;
	shf.r.wrap.b32 	%r997, %r992, %r993, 18;
	mov.b64 	%rd261, {%r997, %r996};
	xor.b64  	%rd262, %rd261, %rd260;
	shf.l.wrap.b32 	%r998, %r992, %r993, 23;
	shf.l.wrap.b32 	%r999, %r993, %r992, 23;
	mov.b64 	%rd263, {%r999, %r998};
	xor.b64  	%rd264, %rd262, %rd263;
	xor.b64  	%rd265, %rd226, %rd214;
	and.b64  	%rd266, %rd248, %rd265;
	xor.b64  	%rd267, %rd266, %rd214;
	add.s64 	%rd268, %rd12, %rd267;
	add.s64 	%rd269, %rd268, %rd264;
	add.s64 	%rd270, %rd269, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1000,%dummy}, %rd259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1001}, %rd259;
	}
	shf.r.wrap.b32 	%r1002, %r1001, %r1000, 28;
	shf.r.wrap.b32 	%r1003, %r1000, %r1001, 28;
	mov.b64 	%rd271, {%r1003, %r1002};
	shf.l.wrap.b32 	%r1004, %r1000, %r1001, 30;
	shf.l.wrap.b32 	%r1005, %r1001, %r1000, 30;
	mov.b64 	%rd272, {%r1005, %r1004};
	xor.b64  	%rd273, %rd272, %rd271;
	shf.l.wrap.b32 	%r1006, %r1000, %r1001, 25;
	shf.l.wrap.b32 	%r1007, %r1001, %r1000, 25;
	mov.b64 	%rd274, {%r1007, %r1006};
	xor.b64  	%rd275, %rd273, %rd274;
	xor.b64  	%rd276, %rd259, %rd216;
	xor.b64  	%rd277, %rd259, %rd237;
	and.b64  	%rd278, %rd277, %rd276;
	xor.b64  	%rd279, %rd278, %rd259;
	add.s64 	%rd280, %rd269, %rd279;
	add.s64 	%rd281, %rd280, %rd275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1008,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1009}, %rd270;
	}
	shf.r.wrap.b32 	%r1010, %r1009, %r1008, 14;
	shf.r.wrap.b32 	%r1011, %r1008, %r1009, 14;
	mov.b64 	%rd282, {%r1011, %r1010};
	shf.r.wrap.b32 	%r1012, %r1009, %r1008, 18;
	shf.r.wrap.b32 	%r1013, %r1008, %r1009, 18;
	mov.b64 	%rd283, {%r1013, %r1012};
	xor.b64  	%rd284, %rd283, %rd282;
	shf.l.wrap.b32 	%r1014, %r1008, %r1009, 23;
	shf.l.wrap.b32 	%r1015, %r1009, %r1008, 23;
	mov.b64 	%rd285, {%r1015, %r1014};
	xor.b64  	%rd286, %rd284, %rd285;
	xor.b64  	%rd287, %rd248, %rd226;
	and.b64  	%rd288, %rd270, %rd287;
	xor.b64  	%rd289, %rd288, %rd226;
	add.s64 	%rd290, %rd214, %rd3;
	add.s64 	%rd291, %rd290, %rd13;
	add.s64 	%rd292, %rd291, %rd289;
	add.s64 	%rd293, %rd292, %rd286;
	add.s64 	%rd294, %rd293, %rd216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1016,%dummy}, %rd281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1017}, %rd281;
	}
	shf.r.wrap.b32 	%r1018, %r1017, %r1016, 28;
	shf.r.wrap.b32 	%r1019, %r1016, %r1017, 28;
	mov.b64 	%rd295, {%r1019, %r1018};
	shf.l.wrap.b32 	%r1020, %r1016, %r1017, 30;
	shf.l.wrap.b32 	%r1021, %r1017, %r1016, 30;
	mov.b64 	%rd296, {%r1021, %r1020};
	xor.b64  	%rd297, %rd296, %rd295;
	shf.l.wrap.b32 	%r1022, %r1016, %r1017, 25;
	shf.l.wrap.b32 	%r1023, %r1017, %r1016, 25;
	mov.b64 	%rd298, {%r1023, %r1022};
	xor.b64  	%rd299, %rd297, %rd298;
	xor.b64  	%rd300, %rd281, %rd237;
	xor.b64  	%rd301, %rd281, %rd259;
	and.b64  	%rd302, %rd301, %rd300;
	xor.b64  	%rd303, %rd302, %rd281;
	add.s64 	%rd304, %rd293, %rd303;
	add.s64 	%rd305, %rd304, %rd299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1024,%dummy}, %rd294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1025}, %rd294;
	}
	shf.r.wrap.b32 	%r1026, %r1025, %r1024, 14;
	shf.r.wrap.b32 	%r1027, %r1024, %r1025, 14;
	mov.b64 	%rd306, {%r1027, %r1026};
	shf.r.wrap.b32 	%r1028, %r1025, %r1024, 18;
	shf.r.wrap.b32 	%r1029, %r1024, %r1025, 18;
	mov.b64 	%rd307, {%r1029, %r1028};
	xor.b64  	%rd308, %rd307, %rd306;
	shf.l.wrap.b32 	%r1030, %r1024, %r1025, 23;
	shf.l.wrap.b32 	%r1031, %r1025, %r1024, 23;
	mov.b64 	%rd309, {%r1031, %r1030};
	xor.b64  	%rd310, %rd308, %rd309;
	xor.b64  	%rd311, %rd270, %rd248;
	and.b64  	%rd312, %rd294, %rd311;
	xor.b64  	%rd313, %rd312, %rd248;
	add.s64 	%rd314, %rd226, %rd4;
	add.s64 	%rd315, %rd314, %rd14;
	add.s64 	%rd316, %rd315, %rd313;
	add.s64 	%rd317, %rd316, %rd310;
	add.s64 	%rd318, %rd317, %rd237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1032,%dummy}, %rd305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1033}, %rd305;
	}
	shf.r.wrap.b32 	%r1034, %r1033, %r1032, 28;
	shf.r.wrap.b32 	%r1035, %r1032, %r1033, 28;
	mov.b64 	%rd319, {%r1035, %r1034};
	shf.l.wrap.b32 	%r1036, %r1032, %r1033, 30;
	shf.l.wrap.b32 	%r1037, %r1033, %r1032, 30;
	mov.b64 	%rd320, {%r1037, %r1036};
	xor.b64  	%rd321, %rd320, %rd319;
	shf.l.wrap.b32 	%r1038, %r1032, %r1033, 25;
	shf.l.wrap.b32 	%r1039, %r1033, %r1032, 25;
	mov.b64 	%rd322, {%r1039, %r1038};
	xor.b64  	%rd323, %rd321, %rd322;
	xor.b64  	%rd324, %rd305, %rd259;
	xor.b64  	%rd325, %rd305, %rd281;
	and.b64  	%rd326, %rd325, %rd324;
	xor.b64  	%rd327, %rd326, %rd305;
	add.s64 	%rd328, %rd317, %rd327;
	add.s64 	%rd329, %rd328, %rd323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1040,%dummy}, %rd318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1041}, %rd318;
	}
	shf.r.wrap.b32 	%r1042, %r1041, %r1040, 14;
	shf.r.wrap.b32 	%r1043, %r1040, %r1041, 14;
	mov.b64 	%rd330, {%r1043, %r1042};
	shf.r.wrap.b32 	%r1044, %r1041, %r1040, 18;
	shf.r.wrap.b32 	%r1045, %r1040, %r1041, 18;
	mov.b64 	%rd331, {%r1045, %r1044};
	xor.b64  	%rd332, %rd331, %rd330;
	shf.l.wrap.b32 	%r1046, %r1040, %r1041, 23;
	shf.l.wrap.b32 	%r1047, %r1041, %r1040, 23;
	mov.b64 	%rd333, {%r1047, %r1046};
	xor.b64  	%rd334, %rd332, %rd333;
	xor.b64  	%rd335, %rd294, %rd270;
	and.b64  	%rd336, %rd318, %rd335;
	xor.b64  	%rd337, %rd336, %rd270;
	add.s64 	%rd338, %rd248, %rd5;
	add.s64 	%rd339, %rd338, %rd15;
	add.s64 	%rd340, %rd339, %rd337;
	add.s64 	%rd341, %rd340, %rd334;
	add.s64 	%rd342, %rd341, %rd259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1048,%dummy}, %rd329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1049}, %rd329;
	}
	shf.r.wrap.b32 	%r1050, %r1049, %r1048, 28;
	shf.r.wrap.b32 	%r1051, %r1048, %r1049, 28;
	mov.b64 	%rd343, {%r1051, %r1050};
	shf.l.wrap.b32 	%r1052, %r1048, %r1049, 30;
	shf.l.wrap.b32 	%r1053, %r1049, %r1048, 30;
	mov.b64 	%rd344, {%r1053, %r1052};
	xor.b64  	%rd345, %rd344, %rd343;
	shf.l.wrap.b32 	%r1054, %r1048, %r1049, 25;
	shf.l.wrap.b32 	%r1055, %r1049, %r1048, 25;
	mov.b64 	%rd346, {%r1055, %r1054};
	xor.b64  	%rd347, %rd345, %rd346;
	xor.b64  	%rd348, %rd329, %rd281;
	xor.b64  	%rd349, %rd329, %rd305;
	and.b64  	%rd350, %rd349, %rd348;
	xor.b64  	%rd351, %rd350, %rd329;
	add.s64 	%rd352, %rd341, %rd351;
	add.s64 	%rd353, %rd352, %rd347;
	add.s64 	%rd354, %rd16, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1056,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1057}, %rd342;
	}
	shf.r.wrap.b32 	%r1058, %r1057, %r1056, 14;
	shf.r.wrap.b32 	%r1059, %r1056, %r1057, 14;
	mov.b64 	%rd355, {%r1059, %r1058};
	shf.r.wrap.b32 	%r1060, %r1057, %r1056, 18;
	shf.r.wrap.b32 	%r1061, %r1056, %r1057, 18;
	mov.b64 	%rd356, {%r1061, %r1060};
	xor.b64  	%rd357, %rd356, %rd355;
	shf.l.wrap.b32 	%r1062, %r1056, %r1057, 23;
	shf.l.wrap.b32 	%r1063, %r1057, %r1056, 23;
	mov.b64 	%rd358, {%r1063, %r1062};
	xor.b64  	%rd359, %rd357, %rd358;
	xor.b64  	%rd360, %rd318, %rd294;
	and.b64  	%rd361, %rd342, %rd360;
	xor.b64  	%rd362, %rd361, %rd294;
	add.s64 	%rd363, %rd354, %rd362;
	add.s64 	%rd364, %rd363, %rd359;
	add.s64 	%rd365, %rd364, %rd281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1064,%dummy}, %rd353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd353;
	}
	shf.r.wrap.b32 	%r1066, %r1065, %r1064, 28;
	shf.r.wrap.b32 	%r1067, %r1064, %r1065, 28;
	mov.b64 	%rd366, {%r1067, %r1066};
	shf.l.wrap.b32 	%r1068, %r1064, %r1065, 30;
	shf.l.wrap.b32 	%r1069, %r1065, %r1064, 30;
	mov.b64 	%rd367, {%r1069, %r1068};
	xor.b64  	%rd368, %rd367, %rd366;
	shf.l.wrap.b32 	%r1070, %r1064, %r1065, 25;
	shf.l.wrap.b32 	%r1071, %r1065, %r1064, 25;
	mov.b64 	%rd369, {%r1071, %r1070};
	xor.b64  	%rd370, %rd368, %rd369;
	xor.b64  	%rd371, %rd353, %rd305;
	xor.b64  	%rd372, %rd353, %rd329;
	and.b64  	%rd373, %rd372, %rd371;
	xor.b64  	%rd374, %rd373, %rd353;
	add.s64 	%rd375, %rd364, %rd374;
	add.s64 	%rd376, %rd375, %rd370;
	add.s64 	%rd377, %rd17, %rd294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd365;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 14;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 14;
	mov.b64 	%rd378, {%r1075, %r1074};
	shf.r.wrap.b32 	%r1076, %r1073, %r1072, 18;
	shf.r.wrap.b32 	%r1077, %r1072, %r1073, 18;
	mov.b64 	%rd379, {%r1077, %r1076};
	xor.b64  	%rd380, %rd379, %rd378;
	shf.l.wrap.b32 	%r1078, %r1072, %r1073, 23;
	shf.l.wrap.b32 	%r1079, %r1073, %r1072, 23;
	mov.b64 	%rd381, {%r1079, %r1078};
	xor.b64  	%rd382, %rd380, %rd381;
	xor.b64  	%rd383, %rd342, %rd318;
	and.b64  	%rd384, %rd365, %rd383;
	xor.b64  	%rd385, %rd384, %rd318;
	add.s64 	%rd386, %rd377, %rd385;
	add.s64 	%rd387, %rd386, %rd382;
	add.s64 	%rd388, %rd387, %rd305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1080,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd376;
	}
	shf.r.wrap.b32 	%r1082, %r1081, %r1080, 28;
	shf.r.wrap.b32 	%r1083, %r1080, %r1081, 28;
	mov.b64 	%rd389, {%r1083, %r1082};
	shf.l.wrap.b32 	%r1084, %r1080, %r1081, 30;
	shf.l.wrap.b32 	%r1085, %r1081, %r1080, 30;
	mov.b64 	%rd390, {%r1085, %r1084};
	xor.b64  	%rd391, %rd390, %rd389;
	shf.l.wrap.b32 	%r1086, %r1080, %r1081, 25;
	shf.l.wrap.b32 	%r1087, %r1081, %r1080, 25;
	mov.b64 	%rd392, {%r1087, %r1086};
	xor.b64  	%rd393, %rd391, %rd392;
	xor.b64  	%rd394, %rd376, %rd329;
	xor.b64  	%rd395, %rd376, %rd353;
	and.b64  	%rd396, %rd395, %rd394;
	xor.b64  	%rd397, %rd396, %rd376;
	add.s64 	%rd398, %rd387, %rd397;
	add.s64 	%rd399, %rd398, %rd393;
	add.s64 	%rd400, %rd18, %rd318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1088,%dummy}, %rd388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1089}, %rd388;
	}
	shf.r.wrap.b32 	%r1090, %r1089, %r1088, 14;
	shf.r.wrap.b32 	%r1091, %r1088, %r1089, 14;
	mov.b64 	%rd401, {%r1091, %r1090};
	shf.r.wrap.b32 	%r1092, %r1089, %r1088, 18;
	shf.r.wrap.b32 	%r1093, %r1088, %r1089, 18;
	mov.b64 	%rd402, {%r1093, %r1092};
	xor.b64  	%rd403, %rd402, %rd401;
	shf.l.wrap.b32 	%r1094, %r1088, %r1089, 23;
	shf.l.wrap.b32 	%r1095, %r1089, %r1088, 23;
	mov.b64 	%rd404, {%r1095, %r1094};
	xor.b64  	%rd405, %rd403, %rd404;
	xor.b64  	%rd406, %rd365, %rd342;
	and.b64  	%rd407, %rd388, %rd406;
	xor.b64  	%rd408, %rd407, %rd342;
	add.s64 	%rd409, %rd400, %rd408;
	add.s64 	%rd410, %rd409, %rd405;
	add.s64 	%rd411, %rd410, %rd329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1096,%dummy}, %rd399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1097}, %rd399;
	}
	shf.r.wrap.b32 	%r1098, %r1097, %r1096, 28;
	shf.r.wrap.b32 	%r1099, %r1096, %r1097, 28;
	mov.b64 	%rd412, {%r1099, %r1098};
	shf.l.wrap.b32 	%r1100, %r1096, %r1097, 30;
	shf.l.wrap.b32 	%r1101, %r1097, %r1096, 30;
	mov.b64 	%rd413, {%r1101, %r1100};
	xor.b64  	%rd414, %rd413, %rd412;
	shf.l.wrap.b32 	%r1102, %r1096, %r1097, 25;
	shf.l.wrap.b32 	%r1103, %r1097, %r1096, 25;
	mov.b64 	%rd415, {%r1103, %r1102};
	xor.b64  	%rd416, %rd414, %rd415;
	xor.b64  	%rd417, %rd399, %rd353;
	xor.b64  	%rd418, %rd399, %rd376;
	and.b64  	%rd419, %rd418, %rd417;
	xor.b64  	%rd420, %rd419, %rd399;
	add.s64 	%rd421, %rd410, %rd420;
	add.s64 	%rd422, %rd421, %rd416;
	add.s64 	%rd423, %rd19, %rd342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1104,%dummy}, %rd411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1105}, %rd411;
	}
	shf.r.wrap.b32 	%r1106, %r1105, %r1104, 14;
	shf.r.wrap.b32 	%r1107, %r1104, %r1105, 14;
	mov.b64 	%rd424, {%r1107, %r1106};
	shf.r.wrap.b32 	%r1108, %r1105, %r1104, 18;
	shf.r.wrap.b32 	%r1109, %r1104, %r1105, 18;
	mov.b64 	%rd425, {%r1109, %r1108};
	xor.b64  	%rd426, %rd425, %rd424;
	shf.l.wrap.b32 	%r1110, %r1104, %r1105, 23;
	shf.l.wrap.b32 	%r1111, %r1105, %r1104, 23;
	mov.b64 	%rd427, {%r1111, %r1110};
	xor.b64  	%rd428, %rd426, %rd427;
	xor.b64  	%rd429, %rd388, %rd365;
	and.b64  	%rd430, %rd411, %rd429;
	xor.b64  	%rd431, %rd430, %rd365;
	add.s64 	%rd432, %rd423, %rd431;
	add.s64 	%rd433, %rd432, %rd428;
	add.s64 	%rd434, %rd433, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1112,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1113}, %rd422;
	}
	shf.r.wrap.b32 	%r1114, %r1113, %r1112, 28;
	shf.r.wrap.b32 	%r1115, %r1112, %r1113, 28;
	mov.b64 	%rd435, {%r1115, %r1114};
	shf.l.wrap.b32 	%r1116, %r1112, %r1113, 30;
	shf.l.wrap.b32 	%r1117, %r1113, %r1112, 30;
	mov.b64 	%rd436, {%r1117, %r1116};
	xor.b64  	%rd437, %rd436, %rd435;
	shf.l.wrap.b32 	%r1118, %r1112, %r1113, 25;
	shf.l.wrap.b32 	%r1119, %r1113, %r1112, 25;
	mov.b64 	%rd438, {%r1119, %r1118};
	xor.b64  	%rd439, %rd437, %rd438;
	xor.b64  	%rd440, %rd422, %rd376;
	xor.b64  	%rd441, %rd422, %rd399;
	and.b64  	%rd442, %rd441, %rd440;
	xor.b64  	%rd443, %rd442, %rd422;
	add.s64 	%rd444, %rd433, %rd443;
	add.s64 	%rd445, %rd444, %rd439;
	add.s64 	%rd446, %rd20, %rd365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1120,%dummy}, %rd434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1121}, %rd434;
	}
	shf.r.wrap.b32 	%r1122, %r1121, %r1120, 14;
	shf.r.wrap.b32 	%r1123, %r1120, %r1121, 14;
	mov.b64 	%rd447, {%r1123, %r1122};
	shf.r.wrap.b32 	%r1124, %r1121, %r1120, 18;
	shf.r.wrap.b32 	%r1125, %r1120, %r1121, 18;
	mov.b64 	%rd448, {%r1125, %r1124};
	xor.b64  	%rd449, %rd448, %rd447;
	shf.l.wrap.b32 	%r1126, %r1120, %r1121, 23;
	shf.l.wrap.b32 	%r1127, %r1121, %r1120, 23;
	mov.b64 	%rd450, {%r1127, %r1126};
	xor.b64  	%rd451, %rd449, %rd450;
	xor.b64  	%rd452, %rd411, %rd388;
	and.b64  	%rd453, %rd434, %rd452;
	xor.b64  	%rd454, %rd453, %rd388;
	add.s64 	%rd455, %rd446, %rd454;
	add.s64 	%rd456, %rd455, %rd451;
	add.s64 	%rd457, %rd456, %rd376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd445;
	}
	shf.r.wrap.b32 	%r1130, %r1129, %r1128, 28;
	shf.r.wrap.b32 	%r1131, %r1128, %r1129, 28;
	mov.b64 	%rd458, {%r1131, %r1130};
	shf.l.wrap.b32 	%r1132, %r1128, %r1129, 30;
	shf.l.wrap.b32 	%r1133, %r1129, %r1128, 30;
	mov.b64 	%rd459, {%r1133, %r1132};
	xor.b64  	%rd460, %rd459, %rd458;
	shf.l.wrap.b32 	%r1134, %r1128, %r1129, 25;
	shf.l.wrap.b32 	%r1135, %r1129, %r1128, 25;
	mov.b64 	%rd461, {%r1135, %r1134};
	xor.b64  	%rd462, %rd460, %rd461;
	xor.b64  	%rd463, %rd445, %rd399;
	xor.b64  	%rd464, %rd445, %rd422;
	and.b64  	%rd465, %rd464, %rd463;
	xor.b64  	%rd466, %rd465, %rd445;
	add.s64 	%rd467, %rd456, %rd466;
	add.s64 	%rd468, %rd467, %rd462;
	add.s64 	%rd469, %rd21, %rd388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1136,%dummy}, %rd457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd457;
	}
	shf.r.wrap.b32 	%r1138, %r1137, %r1136, 14;
	shf.r.wrap.b32 	%r1139, %r1136, %r1137, 14;
	mov.b64 	%rd470, {%r1139, %r1138};
	shf.r.wrap.b32 	%r1140, %r1137, %r1136, 18;
	shf.r.wrap.b32 	%r1141, %r1136, %r1137, 18;
	mov.b64 	%rd471, {%r1141, %r1140};
	xor.b64  	%rd472, %rd471, %rd470;
	shf.l.wrap.b32 	%r1142, %r1136, %r1137, 23;
	shf.l.wrap.b32 	%r1143, %r1137, %r1136, 23;
	mov.b64 	%rd473, {%r1143, %r1142};
	xor.b64  	%rd474, %rd472, %rd473;
	xor.b64  	%rd475, %rd434, %rd411;
	and.b64  	%rd476, %rd457, %rd475;
	xor.b64  	%rd477, %rd476, %rd411;
	add.s64 	%rd478, %rd469, %rd477;
	add.s64 	%rd479, %rd478, %rd474;
	add.s64 	%rd480, %rd479, %rd399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1144,%dummy}, %rd468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1145}, %rd468;
	}
	shf.r.wrap.b32 	%r1146, %r1145, %r1144, 28;
	shf.r.wrap.b32 	%r1147, %r1144, %r1145, 28;
	mov.b64 	%rd481, {%r1147, %r1146};
	shf.l.wrap.b32 	%r1148, %r1144, %r1145, 30;
	shf.l.wrap.b32 	%r1149, %r1145, %r1144, 30;
	mov.b64 	%rd482, {%r1149, %r1148};
	xor.b64  	%rd483, %rd482, %rd481;
	shf.l.wrap.b32 	%r1150, %r1144, %r1145, 25;
	shf.l.wrap.b32 	%r1151, %r1145, %r1144, 25;
	mov.b64 	%rd484, {%r1151, %r1150};
	xor.b64  	%rd485, %rd483, %rd484;
	xor.b64  	%rd486, %rd468, %rd422;
	xor.b64  	%rd487, %rd468, %rd445;
	and.b64  	%rd488, %rd487, %rd486;
	xor.b64  	%rd489, %rd488, %rd468;
	add.s64 	%rd490, %rd479, %rd489;
	add.s64 	%rd491, %rd490, %rd485;
	add.s64 	%rd492, %rd22, %rd411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1152,%dummy}, %rd480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1153}, %rd480;
	}
	shf.r.wrap.b32 	%r1154, %r1153, %r1152, 14;
	shf.r.wrap.b32 	%r1155, %r1152, %r1153, 14;
	mov.b64 	%rd493, {%r1155, %r1154};
	shf.r.wrap.b32 	%r1156, %r1153, %r1152, 18;
	shf.r.wrap.b32 	%r1157, %r1152, %r1153, 18;
	mov.b64 	%rd494, {%r1157, %r1156};
	xor.b64  	%rd495, %rd494, %rd493;
	shf.l.wrap.b32 	%r1158, %r1152, %r1153, 23;
	shf.l.wrap.b32 	%r1159, %r1153, %r1152, 23;
	mov.b64 	%rd496, {%r1159, %r1158};
	xor.b64  	%rd497, %rd495, %rd496;
	xor.b64  	%rd498, %rd457, %rd434;
	and.b64  	%rd499, %rd480, %rd498;
	xor.b64  	%rd500, %rd499, %rd434;
	add.s64 	%rd501, %rd492, %rd500;
	add.s64 	%rd502, %rd501, %rd497;
	add.s64 	%rd503, %rd502, %rd422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1160,%dummy}, %rd491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1161}, %rd491;
	}
	shf.r.wrap.b32 	%r1162, %r1161, %r1160, 28;
	shf.r.wrap.b32 	%r1163, %r1160, %r1161, 28;
	mov.b64 	%rd504, {%r1163, %r1162};
	shf.l.wrap.b32 	%r1164, %r1160, %r1161, 30;
	shf.l.wrap.b32 	%r1165, %r1161, %r1160, 30;
	mov.b64 	%rd505, {%r1165, %r1164};
	xor.b64  	%rd506, %rd505, %rd504;
	shf.l.wrap.b32 	%r1166, %r1160, %r1161, 25;
	shf.l.wrap.b32 	%r1167, %r1161, %r1160, 25;
	mov.b64 	%rd507, {%r1167, %r1166};
	xor.b64  	%rd508, %rd506, %rd507;
	xor.b64  	%rd509, %rd491, %rd445;
	xor.b64  	%rd510, %rd491, %rd468;
	and.b64  	%rd511, %rd510, %rd509;
	xor.b64  	%rd512, %rd511, %rd491;
	add.s64 	%rd513, %rd502, %rd512;
	add.s64 	%rd514, %rd513, %rd508;
	add.s64 	%rd515, %rd23, %rd434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1168,%dummy}, %rd503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1169}, %rd503;
	}
	shf.r.wrap.b32 	%r1170, %r1169, %r1168, 14;
	shf.r.wrap.b32 	%r1171, %r1168, %r1169, 14;
	mov.b64 	%rd516, {%r1171, %r1170};
	shf.r.wrap.b32 	%r1172, %r1169, %r1168, 18;
	shf.r.wrap.b32 	%r1173, %r1168, %r1169, 18;
	mov.b64 	%rd517, {%r1173, %r1172};
	xor.b64  	%rd518, %rd517, %rd516;
	shf.l.wrap.b32 	%r1174, %r1168, %r1169, 23;
	shf.l.wrap.b32 	%r1175, %r1169, %r1168, 23;
	mov.b64 	%rd519, {%r1175, %r1174};
	xor.b64  	%rd520, %rd518, %rd519;
	xor.b64  	%rd521, %rd480, %rd457;
	and.b64  	%rd522, %rd503, %rd521;
	xor.b64  	%rd523, %rd522, %rd457;
	add.s64 	%rd524, %rd515, %rd523;
	add.s64 	%rd525, %rd524, %rd520;
	add.s64 	%rd526, %rd525, %rd445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1176,%dummy}, %rd514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd514;
	}
	shf.r.wrap.b32 	%r1178, %r1177, %r1176, 28;
	shf.r.wrap.b32 	%r1179, %r1176, %r1177, 28;
	mov.b64 	%rd527, {%r1179, %r1178};
	shf.l.wrap.b32 	%r1180, %r1176, %r1177, 30;
	shf.l.wrap.b32 	%r1181, %r1177, %r1176, 30;
	mov.b64 	%rd528, {%r1181, %r1180};
	xor.b64  	%rd529, %rd528, %rd527;
	shf.l.wrap.b32 	%r1182, %r1176, %r1177, 25;
	shf.l.wrap.b32 	%r1183, %r1177, %r1176, 25;
	mov.b64 	%rd530, {%r1183, %r1182};
	xor.b64  	%rd531, %rd529, %rd530;
	xor.b64  	%rd532, %rd514, %rd468;
	xor.b64  	%rd533, %rd514, %rd491;
	and.b64  	%rd534, %rd533, %rd532;
	xor.b64  	%rd535, %rd534, %rd514;
	add.s64 	%rd536, %rd525, %rd535;
	add.s64 	%rd537, %rd536, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1184,%dummy}, %rd526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1185}, %rd526;
	}
	shf.r.wrap.b32 	%r1186, %r1185, %r1184, 14;
	shf.r.wrap.b32 	%r1187, %r1184, %r1185, 14;
	mov.b64 	%rd538, {%r1187, %r1186};
	shf.r.wrap.b32 	%r1188, %r1185, %r1184, 18;
	shf.r.wrap.b32 	%r1189, %r1184, %r1185, 18;
	mov.b64 	%rd539, {%r1189, %r1188};
	xor.b64  	%rd540, %rd539, %rd538;
	shf.l.wrap.b32 	%r1190, %r1184, %r1185, 23;
	shf.l.wrap.b32 	%r1191, %r1185, %r1184, 23;
	mov.b64 	%rd541, {%r1191, %r1190};
	xor.b64  	%rd542, %rd540, %rd541;
	xor.b64  	%rd543, %rd503, %rd480;
	and.b64  	%rd544, %rd526, %rd543;
	xor.b64  	%rd545, %rd544, %rd480;
	add.s64 	%rd546, %rd457, %rd6;
	add.s64 	%rd547, %rd546, %rd24;
	add.s64 	%rd548, %rd547, %rd545;
	add.s64 	%rd549, %rd548, %rd542;
	add.s64 	%rd550, %rd549, %rd468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1192,%dummy}, %rd537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1193}, %rd537;
	}
	shf.r.wrap.b32 	%r1194, %r1193, %r1192, 28;
	shf.r.wrap.b32 	%r1195, %r1192, %r1193, 28;
	mov.b64 	%rd551, {%r1195, %r1194};
	shf.l.wrap.b32 	%r1196, %r1192, %r1193, 30;
	shf.l.wrap.b32 	%r1197, %r1193, %r1192, 30;
	mov.b64 	%rd552, {%r1197, %r1196};
	xor.b64  	%rd553, %rd552, %rd551;
	shf.l.wrap.b32 	%r1198, %r1192, %r1193, 25;
	shf.l.wrap.b32 	%r1199, %r1193, %r1192, 25;
	mov.b64 	%rd554, {%r1199, %r1198};
	xor.b64  	%rd555, %rd553, %rd554;
	xor.b64  	%rd556, %rd537, %rd491;
	xor.b64  	%rd557, %rd537, %rd514;
	and.b64  	%rd558, %rd557, %rd556;
	xor.b64  	%rd559, %rd558, %rd537;
	add.s64 	%rd560, %rd549, %rd559;
	add.s64 	%rd561, %rd560, %rd555;
	add.s64 	%rd562, %rd211, %rd26;
	add.s64 	%rd563, %rd562, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1200,%dummy}, %rd563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1201}, %rd563;
	}
	shf.r.wrap.b32 	%r1202, %r1201, %r1200, 19;
	shf.r.wrap.b32 	%r1203, %r1200, %r1201, 19;
	mov.b64 	%rd564, {%r1203, %r1202};
	shf.l.wrap.b32 	%r1204, %r1200, %r1201, 3;
	shf.l.wrap.b32 	%r1205, %r1201, %r1200, 3;
	mov.b64 	%rd565, {%r1205, %r1204};
	shr.u64 	%rd566, %rd563, 6;
	xor.b64  	%rd567, %rd564, %rd566;
	xor.b64  	%rd568, %rd567, %rd565;
	add.s64 	%rd569, %rd2, %rd568;
	add.s64 	%rd570, %rd569, %rd29;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1207}, %rd570;
	}
	shf.r.wrap.b32 	%r1208, %r1207, %r1206, 19;
	shf.r.wrap.b32 	%r1209, %r1206, %r1207, 19;
	mov.b64 	%rd571, {%r1209, %r1208};
	shf.l.wrap.b32 	%r1210, %r1206, %r1207, 3;
	shf.l.wrap.b32 	%r1211, %r1207, %r1206, 3;
	mov.b64 	%rd572, {%r1211, %r1210};
	shr.u64 	%rd573, %rd570, 6;
	xor.b64  	%rd574, %rd571, %rd573;
	xor.b64  	%rd575, %rd574, %rd572;
	add.s64 	%rd576, %rd3, %rd575;
	add.s64 	%rd577, %rd576, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1212,%dummy}, %rd577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1213}, %rd577;
	}
	shf.r.wrap.b32 	%r1214, %r1213, %r1212, 19;
	shf.r.wrap.b32 	%r1215, %r1212, %r1213, 19;
	mov.b64 	%rd578, {%r1215, %r1214};
	shf.l.wrap.b32 	%r1216, %r1212, %r1213, 3;
	shf.l.wrap.b32 	%r1217, %r1213, %r1212, 3;
	mov.b64 	%rd579, {%r1217, %r1216};
	shr.u64 	%rd580, %rd577, 6;
	xor.b64  	%rd581, %rd578, %rd580;
	xor.b64  	%rd582, %rd581, %rd579;
	add.s64 	%rd583, %rd34, %rd582;
	add.s64 	%rd584, %rd583, %rd33;
	add.s64 	%rd585, %rd563, %rd35;
	add.s64 	%rd586, %rd585, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1218,%dummy}, %rd584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1219}, %rd584;
	}
	shf.r.wrap.b32 	%r1220, %r1219, %r1218, 19;
	shf.r.wrap.b32 	%r1221, %r1218, %r1219, 19;
	mov.b64 	%rd587, {%r1221, %r1220};
	shf.l.wrap.b32 	%r1222, %r1218, %r1219, 3;
	shf.l.wrap.b32 	%r1223, %r1219, %r1218, 3;
	mov.b64 	%rd588, {%r1223, %r1222};
	shr.u64 	%rd589, %rd584, 6;
	xor.b64  	%rd590, %rd587, %rd589;
	xor.b64  	%rd591, %rd590, %rd588;
	add.s64 	%rd592, %rd28, %rd591;
	add.s64 	%rd593, %rd592, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1224,%dummy}, %rd586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1225}, %rd586;
	}
	shf.r.wrap.b32 	%r1226, %r1225, %r1224, 19;
	shf.r.wrap.b32 	%r1227, %r1224, %r1225, 19;
	mov.b64 	%rd594, {%r1227, %r1226};
	shf.l.wrap.b32 	%r1228, %r1224, %r1225, 3;
	shf.l.wrap.b32 	%r1229, %r1225, %r1224, 3;
	mov.b64 	%rd595, {%r1229, %r1228};
	shr.u64 	%rd596, %rd586, 6;
	xor.b64  	%rd597, %rd594, %rd596;
	xor.b64  	%rd598, %rd597, %rd595;
	add.s64 	%rd599, %rd570, %rd598;
	add.s64 	%rd600, %rd599, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1230,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1231}, %rd593;
	}
	shf.r.wrap.b32 	%r1232, %r1231, %r1230, 19;
	shf.r.wrap.b32 	%r1233, %r1230, %r1231, 19;
	mov.b64 	%rd601, {%r1233, %r1232};
	shf.l.wrap.b32 	%r1234, %r1230, %r1231, 3;
	shf.l.wrap.b32 	%r1235, %r1231, %r1230, 3;
	mov.b64 	%rd602, {%r1235, %r1234};
	shr.u64 	%rd603, %rd593, 6;
	xor.b64  	%rd604, %rd601, %rd603;
	xor.b64  	%rd605, %rd604, %rd602;
	add.s64 	%rd606, %rd30, %rd605;
	add.s64 	%rd607, %rd606, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1236,%dummy}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1237}, %rd600;
	}
	shf.r.wrap.b32 	%r1238, %r1237, %r1236, 19;
	shf.r.wrap.b32 	%r1239, %r1236, %r1237, 19;
	mov.b64 	%rd608, {%r1239, %r1238};
	shf.l.wrap.b32 	%r1240, %r1236, %r1237, 3;
	shf.l.wrap.b32 	%r1241, %r1237, %r1236, 3;
	mov.b64 	%rd609, {%r1241, %r1240};
	shr.u64 	%rd610, %rd600, 6;
	xor.b64  	%rd611, %rd608, %rd610;
	xor.b64  	%rd612, %rd611, %rd609;
	add.s64 	%rd613, %rd577, %rd612;
	add.s64 	%rd614, %rd613, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1242,%dummy}, %rd607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1243}, %rd607;
	}
	shf.r.wrap.b32 	%r1244, %r1243, %r1242, 19;
	shf.r.wrap.b32 	%r1245, %r1242, %r1243, 19;
	mov.b64 	%rd615, {%r1245, %r1244};
	shf.l.wrap.b32 	%r1246, %r1242, %r1243, 3;
	shf.l.wrap.b32 	%r1247, %r1243, %r1242, 3;
	mov.b64 	%rd616, {%r1247, %r1246};
	shr.u64 	%rd617, %rd607, 6;
	xor.b64  	%rd618, %rd615, %rd617;
	xor.b64  	%rd619, %rd618, %rd616;
	add.s64 	%rd620, %rd32, %rd619;
	add.s64 	%rd621, %rd620, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd614;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 19;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 19;
	mov.b64 	%rd622, {%r1251, %r1250};
	shf.l.wrap.b32 	%r1252, %r1248, %r1249, 3;
	shf.l.wrap.b32 	%r1253, %r1249, %r1248, 3;
	mov.b64 	%rd623, {%r1253, %r1252};
	shr.u64 	%rd624, %rd614, 6;
	xor.b64  	%rd625, %rd622, %rd624;
	xor.b64  	%rd626, %rd625, %rd623;
	add.s64 	%rd627, %rd584, %rd626;
	add.s64 	%rd628, %rd627, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1254,%dummy}, %rd621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1255}, %rd621;
	}
	shf.r.wrap.b32 	%r1256, %r1255, %r1254, 19;
	shf.r.wrap.b32 	%r1257, %r1254, %r1255, 19;
	mov.b64 	%rd629, {%r1257, %r1256};
	shf.l.wrap.b32 	%r1258, %r1254, %r1255, 3;
	shf.l.wrap.b32 	%r1259, %r1255, %r1254, 3;
	mov.b64 	%rd630, {%r1259, %r1258};
	shr.u64 	%rd631, %rd621, 6;
	xor.b64  	%rd632, %rd629, %rd631;
	xor.b64  	%rd633, %rd632, %rd630;
	add.s64 	%rd634, %rd586, %rd633;
	add.s64 	%rd635, %rd634, %rd36;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1260,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1261}, %rd628;
	}
	shf.r.wrap.b32 	%r1262, %r1261, %r1260, 19;
	shf.r.wrap.b32 	%r1263, %r1260, %r1261, 19;
	mov.b64 	%rd636, {%r1263, %r1262};
	shf.l.wrap.b32 	%r1264, %r1260, %r1261, 3;
	shf.l.wrap.b32 	%r1265, %r1261, %r1260, 3;
	mov.b64 	%rd637, {%r1265, %r1264};
	shr.u64 	%rd638, %rd628, 6;
	xor.b64  	%rd639, %rd636, %rd638;
	xor.b64  	%rd640, %rd639, %rd637;
	shf.r.wrap.b32 	%r1266, %r1201, %r1200, 1;
	shf.r.wrap.b32 	%r1267, %r1200, %r1201, 1;
	mov.b64 	%rd641, {%r1267, %r1266};
	shf.r.wrap.b32 	%r1268, %r1201, %r1200, 8;
	shf.r.wrap.b32 	%r1269, %r1200, %r1201, 8;
	mov.b64 	%rd642, {%r1269, %r1268};
	shr.u64 	%rd643, %rd563, 7;
	xor.b64  	%rd644, %rd641, %rd643;
	xor.b64  	%rd645, %rd644, %rd642;
	add.s64 	%rd646, %rd593, %rd6;
	add.s64 	%rd647, %rd646, %rd640;
	add.s64 	%rd648, %rd647, %rd645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1270,%dummy}, %rd550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1271}, %rd550;
	}
	shf.r.wrap.b32 	%r1272, %r1271, %r1270, 14;
	shf.r.wrap.b32 	%r1273, %r1270, %r1271, 14;
	mov.b64 	%rd649, {%r1273, %r1272};
	shf.r.wrap.b32 	%r1274, %r1271, %r1270, 18;
	shf.r.wrap.b32 	%r1275, %r1270, %r1271, 18;
	mov.b64 	%rd650, {%r1275, %r1274};
	xor.b64  	%rd651, %rd650, %rd649;
	shf.l.wrap.b32 	%r1276, %r1270, %r1271, 23;
	shf.l.wrap.b32 	%r1277, %r1271, %r1270, 23;
	mov.b64 	%rd652, {%r1277, %r1276};
	xor.b64  	%rd653, %rd651, %rd652;
	xor.b64  	%rd654, %rd503, %rd526;
	and.b64  	%rd655, %rd654, %rd550;
	xor.b64  	%rd656, %rd655, %rd503;
	add.s64 	%rd657, %rd656, %rd480;
	add.s64 	%rd658, %rd657, %rd563;
	add.s64 	%rd659, %rd658, %rd37;
	add.s64 	%rd660, %rd659, %rd653;
	add.s64 	%rd661, %rd660, %rd491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1279}, %rd561;
	}
	shf.r.wrap.b32 	%r1280, %r1279, %r1278, 28;
	shf.r.wrap.b32 	%r1281, %r1278, %r1279, 28;
	mov.b64 	%rd662, {%r1281, %r1280};
	shf.l.wrap.b32 	%r1282, %r1278, %r1279, 30;
	shf.l.wrap.b32 	%r1283, %r1279, %r1278, 30;
	mov.b64 	%rd663, {%r1283, %r1282};
	xor.b64  	%rd664, %rd663, %rd662;
	shf.l.wrap.b32 	%r1284, %r1278, %r1279, 25;
	shf.l.wrap.b32 	%r1285, %r1279, %r1278, 25;
	mov.b64 	%rd665, {%r1285, %r1284};
	xor.b64  	%rd666, %rd664, %rd665;
	xor.b64  	%rd667, %rd561, %rd514;
	xor.b64  	%rd668, %rd561, %rd537;
	and.b64  	%rd669, %rd668, %rd667;
	xor.b64  	%rd670, %rd669, %rd561;
	add.s64 	%rd671, %rd660, %rd670;
	add.s64 	%rd672, %rd671, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1286,%dummy}, %rd661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1287}, %rd661;
	}
	shf.r.wrap.b32 	%r1288, %r1287, %r1286, 14;
	shf.r.wrap.b32 	%r1289, %r1286, %r1287, 14;
	mov.b64 	%rd673, {%r1289, %r1288};
	shf.r.wrap.b32 	%r1290, %r1287, %r1286, 18;
	shf.r.wrap.b32 	%r1291, %r1286, %r1287, 18;
	mov.b64 	%rd674, {%r1291, %r1290};
	xor.b64  	%rd675, %rd674, %rd673;
	shf.l.wrap.b32 	%r1292, %r1286, %r1287, 23;
	shf.l.wrap.b32 	%r1293, %r1287, %r1286, 23;
	mov.b64 	%rd676, {%r1293, %r1292};
	xor.b64  	%rd677, %rd675, %rd676;
	xor.b64  	%rd678, %rd526, %rd550;
	and.b64  	%rd679, %rd661, %rd678;
	xor.b64  	%rd680, %rd679, %rd526;
	add.s64 	%rd681, %rd28, %rd503;
	add.s64 	%rd682, %rd681, %rd38;
	add.s64 	%rd683, %rd682, %rd680;
	add.s64 	%rd684, %rd683, %rd677;
	add.s64 	%rd685, %rd684, %rd514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1294,%dummy}, %rd672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1295}, %rd672;
	}
	shf.r.wrap.b32 	%r1296, %r1295, %r1294, 28;
	shf.r.wrap.b32 	%r1297, %r1294, %r1295, 28;
	mov.b64 	%rd686, {%r1297, %r1296};
	shf.l.wrap.b32 	%r1298, %r1294, %r1295, 30;
	shf.l.wrap.b32 	%r1299, %r1295, %r1294, 30;
	mov.b64 	%rd687, {%r1299, %r1298};
	xor.b64  	%rd688, %rd687, %rd686;
	shf.l.wrap.b32 	%r1300, %r1294, %r1295, 25;
	shf.l.wrap.b32 	%r1301, %r1295, %r1294, 25;
	mov.b64 	%rd689, {%r1301, %r1300};
	xor.b64  	%rd690, %rd688, %rd689;
	xor.b64  	%rd691, %rd672, %rd537;
	xor.b64  	%rd692, %rd672, %rd561;
	and.b64  	%rd693, %rd692, %rd691;
	xor.b64  	%rd694, %rd693, %rd672;
	add.s64 	%rd695, %rd684, %rd694;
	add.s64 	%rd696, %rd695, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1302,%dummy}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1303}, %rd685;
	}
	shf.r.wrap.b32 	%r1304, %r1303, %r1302, 14;
	shf.r.wrap.b32 	%r1305, %r1302, %r1303, 14;
	mov.b64 	%rd697, {%r1305, %r1304};
	shf.r.wrap.b32 	%r1306, %r1303, %r1302, 18;
	shf.r.wrap.b32 	%r1307, %r1302, %r1303, 18;
	mov.b64 	%rd698, {%r1307, %r1306};
	xor.b64  	%rd699, %rd698, %rd697;
	shf.l.wrap.b32 	%r1308, %r1302, %r1303, 23;
	shf.l.wrap.b32 	%r1309, %r1303, %r1302, 23;
	mov.b64 	%rd700, {%r1309, %r1308};
	xor.b64  	%rd701, %rd699, %rd700;
	xor.b64  	%rd702, %rd661, %rd550;
	and.b64  	%rd703, %rd685, %rd702;
	xor.b64  	%rd704, %rd703, %rd550;
	add.s64 	%rd705, %rd570, %rd526;
	add.s64 	%rd706, %rd705, %rd39;
	add.s64 	%rd707, %rd706, %rd704;
	add.s64 	%rd708, %rd707, %rd701;
	add.s64 	%rd709, %rd708, %rd537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1311}, %rd696;
	}
	shf.r.wrap.b32 	%r1312, %r1311, %r1310, 28;
	shf.r.wrap.b32 	%r1313, %r1310, %r1311, 28;
	mov.b64 	%rd710, {%r1313, %r1312};
	shf.l.wrap.b32 	%r1314, %r1310, %r1311, 30;
	shf.l.wrap.b32 	%r1315, %r1311, %r1310, 30;
	mov.b64 	%rd711, {%r1315, %r1314};
	xor.b64  	%rd712, %rd711, %rd710;
	shf.l.wrap.b32 	%r1316, %r1310, %r1311, 25;
	shf.l.wrap.b32 	%r1317, %r1311, %r1310, 25;
	mov.b64 	%rd713, {%r1317, %r1316};
	xor.b64  	%rd714, %rd712, %rd713;
	xor.b64  	%rd715, %rd696, %rd561;
	xor.b64  	%rd716, %rd696, %rd672;
	and.b64  	%rd717, %rd716, %rd715;
	xor.b64  	%rd718, %rd717, %rd696;
	add.s64 	%rd719, %rd708, %rd718;
	add.s64 	%rd720, %rd719, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd709;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 14;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 14;
	mov.b64 	%rd721, {%r1321, %r1320};
	shf.r.wrap.b32 	%r1322, %r1319, %r1318, 18;
	shf.r.wrap.b32 	%r1323, %r1318, %r1319, 18;
	mov.b64 	%rd722, {%r1323, %r1322};
	xor.b64  	%rd723, %rd722, %rd721;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 23;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 23;
	mov.b64 	%rd724, {%r1325, %r1324};
	xor.b64  	%rd725, %rd723, %rd724;
	xor.b64  	%rd726, %rd685, %rd661;
	and.b64  	%rd727, %rd709, %rd726;
	xor.b64  	%rd728, %rd727, %rd661;
	add.s64 	%rd729, %rd30, %rd550;
	add.s64 	%rd730, %rd729, %rd40;
	add.s64 	%rd731, %rd730, %rd728;
	add.s64 	%rd732, %rd731, %rd725;
	add.s64 	%rd733, %rd732, %rd561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd720;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 28;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 28;
	mov.b64 	%rd734, {%r1329, %r1328};
	shf.l.wrap.b32 	%r1330, %r1326, %r1327, 30;
	shf.l.wrap.b32 	%r1331, %r1327, %r1326, 30;
	mov.b64 	%rd735, {%r1331, %r1330};
	xor.b64  	%rd736, %rd735, %rd734;
	shf.l.wrap.b32 	%r1332, %r1326, %r1327, 25;
	shf.l.wrap.b32 	%r1333, %r1327, %r1326, 25;
	mov.b64 	%rd737, {%r1333, %r1332};
	xor.b64  	%rd738, %rd736, %rd737;
	xor.b64  	%rd739, %rd720, %rd672;
	xor.b64  	%rd740, %rd720, %rd696;
	and.b64  	%rd741, %rd740, %rd739;
	xor.b64  	%rd742, %rd741, %rd720;
	add.s64 	%rd743, %rd732, %rd742;
	add.s64 	%rd744, %rd743, %rd738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd733;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 14;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 14;
	mov.b64 	%rd745, {%r1337, %r1336};
	shf.r.wrap.b32 	%r1338, %r1335, %r1334, 18;
	shf.r.wrap.b32 	%r1339, %r1334, %r1335, 18;
	mov.b64 	%rd746, {%r1339, %r1338};
	xor.b64  	%rd747, %rd746, %rd745;
	shf.l.wrap.b32 	%r1340, %r1334, %r1335, 23;
	shf.l.wrap.b32 	%r1341, %r1335, %r1334, 23;
	mov.b64 	%rd748, {%r1341, %r1340};
	xor.b64  	%rd749, %rd747, %rd748;
	xor.b64  	%rd750, %rd709, %rd685;
	and.b64  	%rd751, %rd733, %rd750;
	xor.b64  	%rd752, %rd751, %rd685;
	add.s64 	%rd753, %rd661, %rd577;
	add.s64 	%rd754, %rd753, %rd41;
	add.s64 	%rd755, %rd754, %rd752;
	add.s64 	%rd756, %rd755, %rd749;
	add.s64 	%rd757, %rd756, %rd672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd744;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 28;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 28;
	mov.b64 	%rd758, {%r1345, %r1344};
	shf.l.wrap.b32 	%r1346, %r1342, %r1343, 30;
	shf.l.wrap.b32 	%r1347, %r1343, %r1342, 30;
	mov.b64 	%rd759, {%r1347, %r1346};
	xor.b64  	%rd760, %rd759, %rd758;
	shf.l.wrap.b32 	%r1348, %r1342, %r1343, 25;
	shf.l.wrap.b32 	%r1349, %r1343, %r1342, 25;
	mov.b64 	%rd761, {%r1349, %r1348};
	xor.b64  	%rd762, %rd760, %rd761;
	xor.b64  	%rd763, %rd744, %rd696;
	xor.b64  	%rd764, %rd744, %rd720;
	and.b64  	%rd765, %rd764, %rd763;
	xor.b64  	%rd766, %rd765, %rd744;
	add.s64 	%rd767, %rd756, %rd766;
	add.s64 	%rd768, %rd767, %rd762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1351}, %rd757;
	}
	shf.r.wrap.b32 	%r1352, %r1351, %r1350, 14;
	shf.r.wrap.b32 	%r1353, %r1350, %r1351, 14;
	mov.b64 	%rd769, {%r1353, %r1352};
	shf.r.wrap.b32 	%r1354, %r1351, %r1350, 18;
	shf.r.wrap.b32 	%r1355, %r1350, %r1351, 18;
	mov.b64 	%rd770, {%r1355, %r1354};
	xor.b64  	%rd771, %rd770, %rd769;
	shf.l.wrap.b32 	%r1356, %r1350, %r1351, 23;
	shf.l.wrap.b32 	%r1357, %r1351, %r1350, 23;
	mov.b64 	%rd772, {%r1357, %r1356};
	xor.b64  	%rd773, %rd771, %rd772;
	xor.b64  	%rd774, %rd733, %rd709;
	and.b64  	%rd775, %rd757, %rd774;
	xor.b64  	%rd776, %rd775, %rd709;
	add.s64 	%rd777, %rd685, %rd32;
	add.s64 	%rd778, %rd777, %rd42;
	add.s64 	%rd779, %rd778, %rd776;
	add.s64 	%rd780, %rd779, %rd773;
	add.s64 	%rd781, %rd780, %rd696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd768;
	}
	shf.r.wrap.b32 	%r1360, %r1359, %r1358, 28;
	shf.r.wrap.b32 	%r1361, %r1358, %r1359, 28;
	mov.b64 	%rd782, {%r1361, %r1360};
	shf.l.wrap.b32 	%r1362, %r1358, %r1359, 30;
	shf.l.wrap.b32 	%r1363, %r1359, %r1358, 30;
	mov.b64 	%rd783, {%r1363, %r1362};
	xor.b64  	%rd784, %rd783, %rd782;
	shf.l.wrap.b32 	%r1364, %r1358, %r1359, 25;
	shf.l.wrap.b32 	%r1365, %r1359, %r1358, 25;
	mov.b64 	%rd785, {%r1365, %r1364};
	xor.b64  	%rd786, %rd784, %rd785;
	xor.b64  	%rd787, %rd768, %rd720;
	xor.b64  	%rd788, %rd768, %rd744;
	and.b64  	%rd789, %rd788, %rd787;
	xor.b64  	%rd790, %rd789, %rd768;
	add.s64 	%rd791, %rd780, %rd790;
	add.s64 	%rd792, %rd791, %rd786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1367}, %rd781;
	}
	shf.r.wrap.b32 	%r1368, %r1367, %r1366, 14;
	shf.r.wrap.b32 	%r1369, %r1366, %r1367, 14;
	mov.b64 	%rd793, {%r1369, %r1368};
	shf.r.wrap.b32 	%r1370, %r1367, %r1366, 18;
	shf.r.wrap.b32 	%r1371, %r1366, %r1367, 18;
	mov.b64 	%rd794, {%r1371, %r1370};
	xor.b64  	%rd795, %rd794, %rd793;
	shf.l.wrap.b32 	%r1372, %r1366, %r1367, 23;
	shf.l.wrap.b32 	%r1373, %r1367, %r1366, 23;
	mov.b64 	%rd796, {%r1373, %r1372};
	xor.b64  	%rd797, %rd795, %rd796;
	xor.b64  	%rd798, %rd757, %rd733;
	and.b64  	%rd799, %rd781, %rd798;
	xor.b64  	%rd800, %rd799, %rd733;
	add.s64 	%rd801, %rd709, %rd584;
	add.s64 	%rd802, %rd801, %rd43;
	add.s64 	%rd803, %rd802, %rd800;
	add.s64 	%rd804, %rd803, %rd797;
	add.s64 	%rd805, %rd804, %rd720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1374,%dummy}, %rd792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1375}, %rd792;
	}
	shf.r.wrap.b32 	%r1376, %r1375, %r1374, 28;
	shf.r.wrap.b32 	%r1377, %r1374, %r1375, 28;
	mov.b64 	%rd806, {%r1377, %r1376};
	shf.l.wrap.b32 	%r1378, %r1374, %r1375, 30;
	shf.l.wrap.b32 	%r1379, %r1375, %r1374, 30;
	mov.b64 	%rd807, {%r1379, %r1378};
	xor.b64  	%rd808, %rd807, %rd806;
	shf.l.wrap.b32 	%r1380, %r1374, %r1375, 25;
	shf.l.wrap.b32 	%r1381, %r1375, %r1374, 25;
	mov.b64 	%rd809, {%r1381, %r1380};
	xor.b64  	%rd810, %rd808, %rd809;
	xor.b64  	%rd811, %rd792, %rd744;
	xor.b64  	%rd812, %rd792, %rd768;
	and.b64  	%rd813, %rd812, %rd811;
	xor.b64  	%rd814, %rd813, %rd792;
	add.s64 	%rd815, %rd804, %rd814;
	add.s64 	%rd816, %rd815, %rd810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1383}, %rd805;
	}
	shf.r.wrap.b32 	%r1384, %r1383, %r1382, 14;
	shf.r.wrap.b32 	%r1385, %r1382, %r1383, 14;
	mov.b64 	%rd817, {%r1385, %r1384};
	shf.r.wrap.b32 	%r1386, %r1383, %r1382, 18;
	shf.r.wrap.b32 	%r1387, %r1382, %r1383, 18;
	mov.b64 	%rd818, {%r1387, %r1386};
	xor.b64  	%rd819, %rd818, %rd817;
	shf.l.wrap.b32 	%r1388, %r1382, %r1383, 23;
	shf.l.wrap.b32 	%r1389, %r1383, %r1382, 23;
	mov.b64 	%rd820, {%r1389, %r1388};
	xor.b64  	%rd821, %rd819, %rd820;
	xor.b64  	%rd822, %rd781, %rd757;
	and.b64  	%rd823, %rd805, %rd822;
	xor.b64  	%rd824, %rd823, %rd757;
	add.s64 	%rd825, %rd733, %rd586;
	add.s64 	%rd826, %rd825, %rd44;
	add.s64 	%rd827, %rd826, %rd824;
	add.s64 	%rd828, %rd827, %rd821;
	add.s64 	%rd829, %rd828, %rd744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd816;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 28;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 28;
	mov.b64 	%rd830, {%r1393, %r1392};
	shf.l.wrap.b32 	%r1394, %r1390, %r1391, 30;
	shf.l.wrap.b32 	%r1395, %r1391, %r1390, 30;
	mov.b64 	%rd831, {%r1395, %r1394};
	xor.b64  	%rd832, %rd831, %rd830;
	shf.l.wrap.b32 	%r1396, %r1390, %r1391, 25;
	shf.l.wrap.b32 	%r1397, %r1391, %r1390, 25;
	mov.b64 	%rd833, {%r1397, %r1396};
	xor.b64  	%rd834, %rd832, %rd833;
	xor.b64  	%rd835, %rd816, %rd768;
	xor.b64  	%rd836, %rd816, %rd792;
	and.b64  	%rd837, %rd836, %rd835;
	xor.b64  	%rd838, %rd837, %rd816;
	add.s64 	%rd839, %rd828, %rd838;
	add.s64 	%rd840, %rd839, %rd834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1399}, %rd829;
	}
	shf.r.wrap.b32 	%r1400, %r1399, %r1398, 14;
	shf.r.wrap.b32 	%r1401, %r1398, %r1399, 14;
	mov.b64 	%rd841, {%r1401, %r1400};
	shf.r.wrap.b32 	%r1402, %r1399, %r1398, 18;
	shf.r.wrap.b32 	%r1403, %r1398, %r1399, 18;
	mov.b64 	%rd842, {%r1403, %r1402};
	xor.b64  	%rd843, %rd842, %rd841;
	shf.l.wrap.b32 	%r1404, %r1398, %r1399, 23;
	shf.l.wrap.b32 	%r1405, %r1399, %r1398, 23;
	mov.b64 	%rd844, {%r1405, %r1404};
	xor.b64  	%rd845, %rd843, %rd844;
	xor.b64  	%rd846, %rd805, %rd781;
	and.b64  	%rd847, %rd829, %rd846;
	xor.b64  	%rd848, %rd847, %rd781;
	add.s64 	%rd849, %rd757, %rd593;
	add.s64 	%rd850, %rd849, %rd45;
	add.s64 	%rd851, %rd850, %rd848;
	add.s64 	%rd852, %rd851, %rd845;
	add.s64 	%rd853, %rd852, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd840;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 28;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 28;
	mov.b64 	%rd854, {%r1409, %r1408};
	shf.l.wrap.b32 	%r1410, %r1406, %r1407, 30;
	shf.l.wrap.b32 	%r1411, %r1407, %r1406, 30;
	mov.b64 	%rd855, {%r1411, %r1410};
	xor.b64  	%rd856, %rd855, %rd854;
	shf.l.wrap.b32 	%r1412, %r1406, %r1407, 25;
	shf.l.wrap.b32 	%r1413, %r1407, %r1406, 25;
	mov.b64 	%rd857, {%r1413, %r1412};
	xor.b64  	%rd858, %rd856, %rd857;
	xor.b64  	%rd859, %rd840, %rd792;
	xor.b64  	%rd860, %rd840, %rd816;
	and.b64  	%rd861, %rd860, %rd859;
	xor.b64  	%rd862, %rd861, %rd840;
	add.s64 	%rd863, %rd852, %rd862;
	add.s64 	%rd864, %rd863, %rd858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd853;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 14;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 14;
	mov.b64 	%rd865, {%r1417, %r1416};
	shf.r.wrap.b32 	%r1418, %r1415, %r1414, 18;
	shf.r.wrap.b32 	%r1419, %r1414, %r1415, 18;
	mov.b64 	%rd866, {%r1419, %r1418};
	xor.b64  	%rd867, %rd866, %rd865;
	shf.l.wrap.b32 	%r1420, %r1414, %r1415, 23;
	shf.l.wrap.b32 	%r1421, %r1415, %r1414, 23;
	mov.b64 	%rd868, {%r1421, %r1420};
	xor.b64  	%rd869, %rd867, %rd868;
	xor.b64  	%rd870, %rd829, %rd805;
	and.b64  	%rd871, %rd853, %rd870;
	xor.b64  	%rd872, %rd871, %rd805;
	add.s64 	%rd873, %rd781, %rd600;
	add.s64 	%rd874, %rd873, %rd46;
	add.s64 	%rd875, %rd874, %rd872;
	add.s64 	%rd876, %rd875, %rd869;
	add.s64 	%rd877, %rd876, %rd792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd864;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 28;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 28;
	mov.b64 	%rd878, {%r1425, %r1424};
	shf.l.wrap.b32 	%r1426, %r1422, %r1423, 30;
	shf.l.wrap.b32 	%r1427, %r1423, %r1422, 30;
	mov.b64 	%rd879, {%r1427, %r1426};
	xor.b64  	%rd880, %rd879, %rd878;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 25;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 25;
	mov.b64 	%rd881, {%r1429, %r1428};
	xor.b64  	%rd882, %rd880, %rd881;
	xor.b64  	%rd883, %rd864, %rd816;
	xor.b64  	%rd884, %rd864, %rd840;
	and.b64  	%rd885, %rd884, %rd883;
	xor.b64  	%rd886, %rd885, %rd864;
	add.s64 	%rd887, %rd876, %rd886;
	add.s64 	%rd888, %rd887, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd877;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 14;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 14;
	mov.b64 	%rd889, {%r1433, %r1432};
	shf.r.wrap.b32 	%r1434, %r1431, %r1430, 18;
	shf.r.wrap.b32 	%r1435, %r1430, %r1431, 18;
	mov.b64 	%rd890, {%r1435, %r1434};
	xor.b64  	%rd891, %rd890, %rd889;
	shf.l.wrap.b32 	%r1436, %r1430, %r1431, 23;
	shf.l.wrap.b32 	%r1437, %r1431, %r1430, 23;
	mov.b64 	%rd892, {%r1437, %r1436};
	xor.b64  	%rd893, %rd891, %rd892;
	xor.b64  	%rd894, %rd853, %rd829;
	and.b64  	%rd895, %rd877, %rd894;
	xor.b64  	%rd896, %rd895, %rd829;
	add.s64 	%rd897, %rd805, %rd607;
	add.s64 	%rd898, %rd897, %rd47;
	add.s64 	%rd899, %rd898, %rd896;
	add.s64 	%rd900, %rd899, %rd893;
	add.s64 	%rd901, %rd900, %rd816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd888;
	}
	shf.r.wrap.b32 	%r1440, %r1439, %r1438, 28;
	shf.r.wrap.b32 	%r1441, %r1438, %r1439, 28;
	mov.b64 	%rd902, {%r1441, %r1440};
	shf.l.wrap.b32 	%r1442, %r1438, %r1439, 30;
	shf.l.wrap.b32 	%r1443, %r1439, %r1438, 30;
	mov.b64 	%rd903, {%r1443, %r1442};
	xor.b64  	%rd904, %rd903, %rd902;
	shf.l.wrap.b32 	%r1444, %r1438, %r1439, 25;
	shf.l.wrap.b32 	%r1445, %r1439, %r1438, 25;
	mov.b64 	%rd905, {%r1445, %r1444};
	xor.b64  	%rd906, %rd904, %rd905;
	xor.b64  	%rd907, %rd888, %rd840;
	xor.b64  	%rd908, %rd888, %rd864;
	and.b64  	%rd909, %rd908, %rd907;
	xor.b64  	%rd910, %rd909, %rd888;
	add.s64 	%rd911, %rd900, %rd910;
	add.s64 	%rd912, %rd911, %rd906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1446,%dummy}, %rd901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1447}, %rd901;
	}
	shf.r.wrap.b32 	%r1448, %r1447, %r1446, 14;
	shf.r.wrap.b32 	%r1449, %r1446, %r1447, 14;
	mov.b64 	%rd913, {%r1449, %r1448};
	shf.r.wrap.b32 	%r1450, %r1447, %r1446, 18;
	shf.r.wrap.b32 	%r1451, %r1446, %r1447, 18;
	mov.b64 	%rd914, {%r1451, %r1450};
	xor.b64  	%rd915, %rd914, %rd913;
	shf.l.wrap.b32 	%r1452, %r1446, %r1447, 23;
	shf.l.wrap.b32 	%r1453, %r1447, %r1446, 23;
	mov.b64 	%rd916, {%r1453, %r1452};
	xor.b64  	%rd917, %rd915, %rd916;
	xor.b64  	%rd918, %rd877, %rd853;
	and.b64  	%rd919, %rd901, %rd918;
	xor.b64  	%rd920, %rd919, %rd853;
	add.s64 	%rd921, %rd829, %rd614;
	add.s64 	%rd922, %rd921, %rd48;
	add.s64 	%rd923, %rd922, %rd920;
	add.s64 	%rd924, %rd923, %rd917;
	add.s64 	%rd925, %rd924, %rd840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd912;
	}
	shf.r.wrap.b32 	%r1456, %r1455, %r1454, 28;
	shf.r.wrap.b32 	%r1457, %r1454, %r1455, 28;
	mov.b64 	%rd926, {%r1457, %r1456};
	shf.l.wrap.b32 	%r1458, %r1454, %r1455, 30;
	shf.l.wrap.b32 	%r1459, %r1455, %r1454, 30;
	mov.b64 	%rd927, {%r1459, %r1458};
	xor.b64  	%rd928, %rd927, %rd926;
	shf.l.wrap.b32 	%r1460, %r1454, %r1455, 25;
	shf.l.wrap.b32 	%r1461, %r1455, %r1454, 25;
	mov.b64 	%rd929, {%r1461, %r1460};
	xor.b64  	%rd930, %rd928, %rd929;
	xor.b64  	%rd931, %rd912, %rd864;
	xor.b64  	%rd932, %rd912, %rd888;
	and.b64  	%rd933, %rd932, %rd931;
	xor.b64  	%rd934, %rd933, %rd912;
	add.s64 	%rd935, %rd924, %rd934;
	add.s64 	%rd936, %rd935, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd925;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 14;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 14;
	mov.b64 	%rd937, {%r1465, %r1464};
	shf.r.wrap.b32 	%r1466, %r1463, %r1462, 18;
	shf.r.wrap.b32 	%r1467, %r1462, %r1463, 18;
	mov.b64 	%rd938, {%r1467, %r1466};
	xor.b64  	%rd939, %rd938, %rd937;
	shf.l.wrap.b32 	%r1468, %r1462, %r1463, 23;
	shf.l.wrap.b32 	%r1469, %r1463, %r1462, 23;
	mov.b64 	%rd940, {%r1469, %r1468};
	xor.b64  	%rd941, %rd939, %rd940;
	xor.b64  	%rd942, %rd901, %rd877;
	and.b64  	%rd943, %rd925, %rd942;
	xor.b64  	%rd944, %rd943, %rd877;
	add.s64 	%rd945, %rd853, %rd621;
	add.s64 	%rd946, %rd945, %rd49;
	add.s64 	%rd947, %rd946, %rd944;
	add.s64 	%rd948, %rd947, %rd941;
	add.s64 	%rd949, %rd948, %rd864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1471}, %rd936;
	}
	shf.r.wrap.b32 	%r1472, %r1471, %r1470, 28;
	shf.r.wrap.b32 	%r1473, %r1470, %r1471, 28;
	mov.b64 	%rd950, {%r1473, %r1472};
	shf.l.wrap.b32 	%r1474, %r1470, %r1471, 30;
	shf.l.wrap.b32 	%r1475, %r1471, %r1470, 30;
	mov.b64 	%rd951, {%r1475, %r1474};
	xor.b64  	%rd952, %rd951, %rd950;
	shf.l.wrap.b32 	%r1476, %r1470, %r1471, 25;
	shf.l.wrap.b32 	%r1477, %r1471, %r1470, 25;
	mov.b64 	%rd953, {%r1477, %r1476};
	xor.b64  	%rd954, %rd952, %rd953;
	xor.b64  	%rd955, %rd936, %rd888;
	xor.b64  	%rd956, %rd936, %rd912;
	and.b64  	%rd957, %rd956, %rd955;
	xor.b64  	%rd958, %rd957, %rd936;
	add.s64 	%rd959, %rd948, %rd958;
	add.s64 	%rd960, %rd959, %rd954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1478,%dummy}, %rd949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1479}, %rd949;
	}
	shf.r.wrap.b32 	%r1480, %r1479, %r1478, 14;
	shf.r.wrap.b32 	%r1481, %r1478, %r1479, 14;
	mov.b64 	%rd961, {%r1481, %r1480};
	shf.r.wrap.b32 	%r1482, %r1479, %r1478, 18;
	shf.r.wrap.b32 	%r1483, %r1478, %r1479, 18;
	mov.b64 	%rd962, {%r1483, %r1482};
	xor.b64  	%rd963, %rd962, %rd961;
	shf.l.wrap.b32 	%r1484, %r1478, %r1479, 23;
	shf.l.wrap.b32 	%r1485, %r1479, %r1478, 23;
	mov.b64 	%rd964, {%r1485, %r1484};
	xor.b64  	%rd965, %rd963, %rd964;
	xor.b64  	%rd966, %rd925, %rd901;
	and.b64  	%rd967, %rd949, %rd966;
	xor.b64  	%rd968, %rd967, %rd901;
	add.s64 	%rd969, %rd877, %rd628;
	add.s64 	%rd970, %rd969, %rd50;
	add.s64 	%rd971, %rd970, %rd968;
	add.s64 	%rd972, %rd971, %rd965;
	add.s64 	%rd973, %rd972, %rd888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1487}, %rd960;
	}
	shf.r.wrap.b32 	%r1488, %r1487, %r1486, 28;
	shf.r.wrap.b32 	%r1489, %r1486, %r1487, 28;
	mov.b64 	%rd974, {%r1489, %r1488};
	shf.l.wrap.b32 	%r1490, %r1486, %r1487, 30;
	shf.l.wrap.b32 	%r1491, %r1487, %r1486, 30;
	mov.b64 	%rd975, {%r1491, %r1490};
	xor.b64  	%rd976, %rd975, %rd974;
	shf.l.wrap.b32 	%r1492, %r1486, %r1487, 25;
	shf.l.wrap.b32 	%r1493, %r1487, %r1486, 25;
	mov.b64 	%rd977, {%r1493, %r1492};
	xor.b64  	%rd978, %rd976, %rd977;
	xor.b64  	%rd979, %rd960, %rd912;
	xor.b64  	%rd980, %rd960, %rd936;
	and.b64  	%rd981, %rd980, %rd979;
	xor.b64  	%rd982, %rd981, %rd960;
	add.s64 	%rd983, %rd972, %rd982;
	add.s64 	%rd984, %rd983, %rd978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1494,%dummy}, %rd973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1495}, %rd973;
	}
	shf.r.wrap.b32 	%r1496, %r1495, %r1494, 14;
	shf.r.wrap.b32 	%r1497, %r1494, %r1495, 14;
	mov.b64 	%rd985, {%r1497, %r1496};
	shf.r.wrap.b32 	%r1498, %r1495, %r1494, 18;
	shf.r.wrap.b32 	%r1499, %r1494, %r1495, 18;
	mov.b64 	%rd986, {%r1499, %r1498};
	xor.b64  	%rd987, %rd986, %rd985;
	shf.l.wrap.b32 	%r1500, %r1494, %r1495, 23;
	shf.l.wrap.b32 	%r1501, %r1495, %r1494, 23;
	mov.b64 	%rd988, {%r1501, %r1500};
	xor.b64  	%rd989, %rd987, %rd988;
	xor.b64  	%rd990, %rd949, %rd925;
	and.b64  	%rd991, %rd973, %rd990;
	xor.b64  	%rd992, %rd991, %rd925;
	add.s64 	%rd993, %rd901, %rd635;
	add.s64 	%rd994, %rd993, %rd51;
	add.s64 	%rd995, %rd994, %rd992;
	add.s64 	%rd996, %rd995, %rd989;
	add.s64 	%rd997, %rd996, %rd912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1502,%dummy}, %rd984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1503}, %rd984;
	}
	shf.r.wrap.b32 	%r1504, %r1503, %r1502, 28;
	shf.r.wrap.b32 	%r1505, %r1502, %r1503, 28;
	mov.b64 	%rd998, {%r1505, %r1504};
	shf.l.wrap.b32 	%r1506, %r1502, %r1503, 30;
	shf.l.wrap.b32 	%r1507, %r1503, %r1502, 30;
	mov.b64 	%rd999, {%r1507, %r1506};
	xor.b64  	%rd1000, %rd999, %rd998;
	shf.l.wrap.b32 	%r1508, %r1502, %r1503, 25;
	shf.l.wrap.b32 	%r1509, %r1503, %r1502, 25;
	mov.b64 	%rd1001, {%r1509, %r1508};
	xor.b64  	%rd1002, %rd1000, %rd1001;
	xor.b64  	%rd1003, %rd984, %rd936;
	xor.b64  	%rd1004, %rd984, %rd960;
	and.b64  	%rd1005, %rd1004, %rd1003;
	xor.b64  	%rd1006, %rd1005, %rd984;
	add.s64 	%rd1007, %rd996, %rd1006;
	add.s64 	%rd1008, %rd1007, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1510,%dummy}, %rd997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1511}, %rd997;
	}
	shf.r.wrap.b32 	%r1512, %r1511, %r1510, 14;
	shf.r.wrap.b32 	%r1513, %r1510, %r1511, 14;
	mov.b64 	%rd1009, {%r1513, %r1512};
	shf.r.wrap.b32 	%r1514, %r1511, %r1510, 18;
	shf.r.wrap.b32 	%r1515, %r1510, %r1511, 18;
	mov.b64 	%rd1010, {%r1515, %r1514};
	xor.b64  	%rd1011, %rd1010, %rd1009;
	shf.l.wrap.b32 	%r1516, %r1510, %r1511, 23;
	shf.l.wrap.b32 	%r1517, %r1511, %r1510, 23;
	mov.b64 	%rd1012, {%r1517, %r1516};
	xor.b64  	%rd1013, %rd1011, %rd1012;
	xor.b64  	%rd1014, %rd973, %rd949;
	and.b64  	%rd1015, %rd997, %rd1014;
	xor.b64  	%rd1016, %rd1015, %rd949;
	add.s64 	%rd1017, %rd925, %rd648;
	add.s64 	%rd1018, %rd1017, %rd52;
	add.s64 	%rd1019, %rd1018, %rd1016;
	add.s64 	%rd1020, %rd1019, %rd1013;
	add.s64 	%rd1021, %rd1020, %rd936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd1008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1519}, %rd1008;
	}
	shf.r.wrap.b32 	%r1520, %r1519, %r1518, 28;
	shf.r.wrap.b32 	%r1521, %r1518, %r1519, 28;
	mov.b64 	%rd1022, {%r1521, %r1520};
	shf.l.wrap.b32 	%r1522, %r1518, %r1519, 30;
	shf.l.wrap.b32 	%r1523, %r1519, %r1518, 30;
	mov.b64 	%rd1023, {%r1523, %r1522};
	xor.b64  	%rd1024, %rd1023, %rd1022;
	shf.l.wrap.b32 	%r1524, %r1518, %r1519, 25;
	shf.l.wrap.b32 	%r1525, %r1519, %r1518, 25;
	mov.b64 	%rd1025, {%r1525, %r1524};
	xor.b64  	%rd1026, %rd1024, %rd1025;
	xor.b64  	%rd1027, %rd1008, %rd960;
	xor.b64  	%rd1028, %rd1008, %rd984;
	and.b64  	%rd1029, %rd1028, %rd1027;
	xor.b64  	%rd1030, %rd1029, %rd1008;
	add.s64 	%rd1031, %rd1020, %rd1030;
	add.s64 	%rd1032, %rd1031, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1526,%dummy}, %rd635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1527}, %rd635;
	}
	shf.r.wrap.b32 	%r1528, %r1527, %r1526, 19;
	shf.r.wrap.b32 	%r1529, %r1526, %r1527, 19;
	mov.b64 	%rd1033, {%r1529, %r1528};
	shf.l.wrap.b32 	%r1530, %r1526, %r1527, 3;
	shf.l.wrap.b32 	%r1531, %r1527, %r1526, 3;
	mov.b64 	%rd1034, {%r1531, %r1530};
	shr.u64 	%rd1035, %rd635, 6;
	xor.b64  	%rd1036, %rd1033, %rd1035;
	xor.b64  	%rd1037, %rd1036, %rd1034;
	add.s64 	%rd1038, %rd563, %rd600;
	add.s64 	%rd1039, %rd1038, %rd1037;
	add.s64 	%rd1040, %rd1039, %rd53;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1532,%dummy}, %rd648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1533}, %rd648;
	}
	shf.r.wrap.b32 	%r1534, %r1533, %r1532, 19;
	shf.r.wrap.b32 	%r1535, %r1532, %r1533, 19;
	mov.b64 	%rd1041, {%r1535, %r1534};
	shf.l.wrap.b32 	%r1536, %r1532, %r1533, 3;
	shf.l.wrap.b32 	%r1537, %r1533, %r1532, 3;
	mov.b64 	%rd1042, {%r1537, %r1536};
	shr.u64 	%rd1043, %rd648, 6;
	xor.b64  	%rd1044, %rd1041, %rd1043;
	xor.b64  	%rd1045, %rd1044, %rd1042;
	shf.r.wrap.b32 	%r1538, %r1207, %r1206, 1;
	shf.r.wrap.b32 	%r1539, %r1206, %r1207, 1;
	mov.b64 	%rd1046, {%r1539, %r1538};
	shf.r.wrap.b32 	%r1540, %r1207, %r1206, 8;
	shf.r.wrap.b32 	%r1541, %r1206, %r1207, 8;
	mov.b64 	%rd1047, {%r1541, %r1540};
	shr.u64 	%rd1048, %rd570, 7;
	xor.b64  	%rd1049, %rd1046, %rd1048;
	xor.b64  	%rd1050, %rd1049, %rd1047;
	add.s64 	%rd1051, %rd28, %rd607;
	add.s64 	%rd1052, %rd1051, %rd1045;
	add.s64 	%rd1053, %rd1052, %rd1050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd1040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1543}, %rd1040;
	}
	shf.r.wrap.b32 	%r1544, %r1543, %r1542, 19;
	shf.r.wrap.b32 	%r1545, %r1542, %r1543, 19;
	mov.b64 	%rd1054, {%r1545, %r1544};
	shf.l.wrap.b32 	%r1546, %r1542, %r1543, 3;
	shf.l.wrap.b32 	%r1547, %r1543, %r1542, 3;
	mov.b64 	%rd1055, {%r1547, %r1546};
	shr.u64 	%rd1056, %rd1040, 6;
	xor.b64  	%rd1057, %rd1054, %rd1056;
	xor.b64  	%rd1058, %rd1057, %rd1055;
	add.s64 	%rd1059, %rd570, %rd614;
	add.s64 	%rd1060, %rd1059, %rd1058;
	add.s64 	%rd1061, %rd1060, %rd54;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1548,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1549}, %rd1053;
	}
	shf.r.wrap.b32 	%r1550, %r1549, %r1548, 19;
	shf.r.wrap.b32 	%r1551, %r1548, %r1549, 19;
	mov.b64 	%rd1062, {%r1551, %r1550};
	shf.l.wrap.b32 	%r1552, %r1548, %r1549, 3;
	shf.l.wrap.b32 	%r1553, %r1549, %r1548, 3;
	mov.b64 	%rd1063, {%r1553, %r1552};
	shr.u64 	%rd1064, %rd1053, 6;
	xor.b64  	%rd1065, %rd1062, %rd1064;
	xor.b64  	%rd1066, %rd1065, %rd1063;
	shf.r.wrap.b32 	%r1554, %r1213, %r1212, 1;
	shf.r.wrap.b32 	%r1555, %r1212, %r1213, 1;
	mov.b64 	%rd1067, {%r1555, %r1554};
	shf.r.wrap.b32 	%r1556, %r1213, %r1212, 8;
	shf.r.wrap.b32 	%r1557, %r1212, %r1213, 8;
	mov.b64 	%rd1068, {%r1557, %r1556};
	shr.u64 	%rd1069, %rd577, 7;
	xor.b64  	%rd1070, %rd1067, %rd1069;
	xor.b64  	%rd1071, %rd1070, %rd1068;
	add.s64 	%rd1072, %rd30, %rd621;
	add.s64 	%rd1073, %rd1072, %rd1066;
	add.s64 	%rd1074, %rd1073, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1558,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1559}, %rd1061;
	}
	shf.r.wrap.b32 	%r1560, %r1559, %r1558, 19;
	shf.r.wrap.b32 	%r1561, %r1558, %r1559, 19;
	mov.b64 	%rd1075, {%r1561, %r1560};
	shf.l.wrap.b32 	%r1562, %r1558, %r1559, 3;
	shf.l.wrap.b32 	%r1563, %r1559, %r1558, 3;
	mov.b64 	%rd1076, {%r1563, %r1562};
	shr.u64 	%rd1077, %rd1061, 6;
	xor.b64  	%rd1078, %rd1075, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd1076;
	add.s64 	%rd1080, %rd577, %rd628;
	add.s64 	%rd1081, %rd1080, %rd1079;
	add.s64 	%rd1082, %rd1081, %rd55;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1564,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1565}, %rd1074;
	}
	shf.r.wrap.b32 	%r1566, %r1565, %r1564, 19;
	shf.r.wrap.b32 	%r1567, %r1564, %r1565, 19;
	mov.b64 	%rd1083, {%r1567, %r1566};
	shf.l.wrap.b32 	%r1568, %r1564, %r1565, 3;
	shf.l.wrap.b32 	%r1569, %r1565, %r1564, 3;
	mov.b64 	%rd1084, {%r1569, %r1568};
	shr.u64 	%rd1085, %rd1074, 6;
	xor.b64  	%rd1086, %rd1083, %rd1085;
	xor.b64  	%rd1087, %rd1086, %rd1084;
	shf.r.wrap.b32 	%r1570, %r1219, %r1218, 1;
	shf.r.wrap.b32 	%r1571, %r1218, %r1219, 1;
	mov.b64 	%rd1088, {%r1571, %r1570};
	shf.r.wrap.b32 	%r1572, %r1219, %r1218, 8;
	shf.r.wrap.b32 	%r1573, %r1218, %r1219, 8;
	mov.b64 	%rd1089, {%r1573, %r1572};
	shr.u64 	%rd1090, %rd584, 7;
	xor.b64  	%rd1091, %rd1088, %rd1090;
	xor.b64  	%rd1092, %rd1091, %rd1089;
	add.s64 	%rd1093, %rd32, %rd635;
	add.s64 	%rd1094, %rd1093, %rd1087;
	add.s64 	%rd1095, %rd1094, %rd1092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1574,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1575}, %rd1082;
	}
	shf.r.wrap.b32 	%r1576, %r1575, %r1574, 19;
	shf.r.wrap.b32 	%r1577, %r1574, %r1575, 19;
	mov.b64 	%rd1096, {%r1577, %r1576};
	shf.l.wrap.b32 	%r1578, %r1574, %r1575, 3;
	shf.l.wrap.b32 	%r1579, %r1575, %r1574, 3;
	mov.b64 	%rd1097, {%r1579, %r1578};
	shr.u64 	%rd1098, %rd1082, 6;
	xor.b64  	%rd1099, %rd1096, %rd1098;
	xor.b64  	%rd1100, %rd1099, %rd1097;
	shf.r.wrap.b32 	%r1580, %r1225, %r1224, 1;
	shf.r.wrap.b32 	%r1581, %r1224, %r1225, 1;
	mov.b64 	%rd1101, {%r1581, %r1580};
	shf.r.wrap.b32 	%r1582, %r1225, %r1224, 8;
	shf.r.wrap.b32 	%r1583, %r1224, %r1225, 8;
	mov.b64 	%rd1102, {%r1583, %r1582};
	shr.u64 	%rd1103, %rd586, 7;
	xor.b64  	%rd1104, %rd1101, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1102;
	add.s64 	%rd1106, %rd584, %rd648;
	add.s64 	%rd1107, %rd1106, %rd1100;
	add.s64 	%rd1108, %rd1107, %rd1105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd1095;
	}
	shf.r.wrap.b32 	%r1586, %r1585, %r1584, 19;
	shf.r.wrap.b32 	%r1587, %r1584, %r1585, 19;
	mov.b64 	%rd1109, {%r1587, %r1586};
	shf.l.wrap.b32 	%r1588, %r1584, %r1585, 3;
	shf.l.wrap.b32 	%r1589, %r1585, %r1584, 3;
	mov.b64 	%rd1110, {%r1589, %r1588};
	shr.u64 	%rd1111, %rd1095, 6;
	xor.b64  	%rd1112, %rd1109, %rd1111;
	xor.b64  	%rd1113, %rd1112, %rd1110;
	shf.r.wrap.b32 	%r1590, %r1231, %r1230, 1;
	shf.r.wrap.b32 	%r1591, %r1230, %r1231, 1;
	mov.b64 	%rd1114, {%r1591, %r1590};
	shf.r.wrap.b32 	%r1592, %r1231, %r1230, 8;
	shf.r.wrap.b32 	%r1593, %r1230, %r1231, 8;
	mov.b64 	%rd1115, {%r1593, %r1592};
	shr.u64 	%rd1116, %rd593, 7;
	xor.b64  	%rd1117, %rd1114, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1115;
	add.s64 	%rd1119, %rd1040, %rd586;
	add.s64 	%rd1120, %rd1119, %rd1113;
	add.s64 	%rd1121, %rd1120, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd1108;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 19;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 19;
	mov.b64 	%rd1122, {%r1597, %r1596};
	shf.l.wrap.b32 	%r1598, %r1594, %r1595, 3;
	shf.l.wrap.b32 	%r1599, %r1595, %r1594, 3;
	mov.b64 	%rd1123, {%r1599, %r1598};
	shr.u64 	%rd1124, %rd1108, 6;
	xor.b64  	%rd1125, %rd1122, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1123;
	shf.r.wrap.b32 	%r1600, %r1237, %r1236, 1;
	shf.r.wrap.b32 	%r1601, %r1236, %r1237, 1;
	mov.b64 	%rd1127, {%r1601, %r1600};
	shf.r.wrap.b32 	%r1602, %r1237, %r1236, 8;
	shf.r.wrap.b32 	%r1603, %r1236, %r1237, 8;
	mov.b64 	%rd1128, {%r1603, %r1602};
	shr.u64 	%rd1129, %rd600, 7;
	xor.b64  	%rd1130, %rd1127, %rd1129;
	xor.b64  	%rd1131, %rd1130, %rd1128;
	add.s64 	%rd1132, %rd1053, %rd593;
	add.s64 	%rd1133, %rd1132, %rd1126;
	add.s64 	%rd1134, %rd1133, %rd1131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1605}, %rd1121;
	}
	shf.r.wrap.b32 	%r1606, %r1605, %r1604, 19;
	shf.r.wrap.b32 	%r1607, %r1604, %r1605, 19;
	mov.b64 	%rd1135, {%r1607, %r1606};
	shf.l.wrap.b32 	%r1608, %r1604, %r1605, 3;
	shf.l.wrap.b32 	%r1609, %r1605, %r1604, 3;
	mov.b64 	%rd1136, {%r1609, %r1608};
	shr.u64 	%rd1137, %rd1121, 6;
	xor.b64  	%rd1138, %rd1135, %rd1137;
	xor.b64  	%rd1139, %rd1138, %rd1136;
	shf.r.wrap.b32 	%r1610, %r1243, %r1242, 1;
	shf.r.wrap.b32 	%r1611, %r1242, %r1243, 1;
	mov.b64 	%rd1140, {%r1611, %r1610};
	shf.r.wrap.b32 	%r1612, %r1243, %r1242, 8;
	shf.r.wrap.b32 	%r1613, %r1242, %r1243, 8;
	mov.b64 	%rd1141, {%r1613, %r1612};
	shr.u64 	%rd1142, %rd607, 7;
	xor.b64  	%rd1143, %rd1140, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1141;
	add.s64 	%rd1145, %rd1061, %rd600;
	add.s64 	%rd1146, %rd1145, %rd1139;
	add.s64 	%rd1147, %rd1146, %rd1144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd1134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd1134;
	}
	shf.r.wrap.b32 	%r1616, %r1615, %r1614, 19;
	shf.r.wrap.b32 	%r1617, %r1614, %r1615, 19;
	mov.b64 	%rd1148, {%r1617, %r1616};
	shf.l.wrap.b32 	%r1618, %r1614, %r1615, 3;
	shf.l.wrap.b32 	%r1619, %r1615, %r1614, 3;
	mov.b64 	%rd1149, {%r1619, %r1618};
	shr.u64 	%rd1150, %rd1134, 6;
	xor.b64  	%rd1151, %rd1148, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1149;
	shf.r.wrap.b32 	%r1620, %r1249, %r1248, 1;
	shf.r.wrap.b32 	%r1621, %r1248, %r1249, 1;
	mov.b64 	%rd1153, {%r1621, %r1620};
	shf.r.wrap.b32 	%r1622, %r1249, %r1248, 8;
	shf.r.wrap.b32 	%r1623, %r1248, %r1249, 8;
	mov.b64 	%rd1154, {%r1623, %r1622};
	shr.u64 	%rd1155, %rd614, 7;
	xor.b64  	%rd1156, %rd1153, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd1154;
	add.s64 	%rd1158, %rd1074, %rd607;
	add.s64 	%rd1159, %rd1158, %rd1152;
	add.s64 	%rd1160, %rd1159, %rd1157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1624,%dummy}, %rd1147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1625}, %rd1147;
	}
	shf.r.wrap.b32 	%r1626, %r1625, %r1624, 19;
	shf.r.wrap.b32 	%r1627, %r1624, %r1625, 19;
	mov.b64 	%rd1161, {%r1627, %r1626};
	shf.l.wrap.b32 	%r1628, %r1624, %r1625, 3;
	shf.l.wrap.b32 	%r1629, %r1625, %r1624, 3;
	mov.b64 	%rd1162, {%r1629, %r1628};
	shr.u64 	%rd1163, %rd1147, 6;
	xor.b64  	%rd1164, %rd1161, %rd1163;
	xor.b64  	%rd1165, %rd1164, %rd1162;
	shf.r.wrap.b32 	%r1630, %r1255, %r1254, 1;
	shf.r.wrap.b32 	%r1631, %r1254, %r1255, 1;
	mov.b64 	%rd1166, {%r1631, %r1630};
	shf.r.wrap.b32 	%r1632, %r1255, %r1254, 8;
	shf.r.wrap.b32 	%r1633, %r1254, %r1255, 8;
	mov.b64 	%rd1167, {%r1633, %r1632};
	shr.u64 	%rd1168, %rd621, 7;
	xor.b64  	%rd1169, %rd1166, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1167;
	add.s64 	%rd1171, %rd1082, %rd614;
	add.s64 	%rd1172, %rd1171, %rd1165;
	add.s64 	%rd1173, %rd1172, %rd1170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1634,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1635}, %rd1160;
	}
	shf.r.wrap.b32 	%r1636, %r1635, %r1634, 19;
	shf.r.wrap.b32 	%r1637, %r1634, %r1635, 19;
	mov.b64 	%rd1174, {%r1637, %r1636};
	shf.l.wrap.b32 	%r1638, %r1634, %r1635, 3;
	shf.l.wrap.b32 	%r1639, %r1635, %r1634, 3;
	mov.b64 	%rd1175, {%r1639, %r1638};
	shr.u64 	%rd1176, %rd1160, 6;
	xor.b64  	%rd1177, %rd1174, %rd1176;
	xor.b64  	%rd1178, %rd1177, %rd1175;
	shf.r.wrap.b32 	%r1640, %r1261, %r1260, 1;
	shf.r.wrap.b32 	%r1641, %r1260, %r1261, 1;
	mov.b64 	%rd1179, {%r1641, %r1640};
	shf.r.wrap.b32 	%r1642, %r1261, %r1260, 8;
	shf.r.wrap.b32 	%r1643, %r1260, %r1261, 8;
	mov.b64 	%rd1180, {%r1643, %r1642};
	shr.u64 	%rd1181, %rd628, 7;
	xor.b64  	%rd1182, %rd1179, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1180;
	add.s64 	%rd1184, %rd1095, %rd621;
	add.s64 	%rd1185, %rd1184, %rd1178;
	add.s64 	%rd1186, %rd1185, %rd1183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd1173;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 19;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 19;
	mov.b64 	%rd1187, {%r1647, %r1646};
	shf.l.wrap.b32 	%r1648, %r1644, %r1645, 3;
	shf.l.wrap.b32 	%r1649, %r1645, %r1644, 3;
	mov.b64 	%rd1188, {%r1649, %r1648};
	shr.u64 	%rd1189, %rd1173, 6;
	xor.b64  	%rd1190, %rd1187, %rd1189;
	xor.b64  	%rd1191, %rd1190, %rd1188;
	shf.r.wrap.b32 	%r1650, %r1527, %r1526, 1;
	shf.r.wrap.b32 	%r1651, %r1526, %r1527, 1;
	mov.b64 	%rd1192, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1527, %r1526, 8;
	shf.r.wrap.b32 	%r1653, %r1526, %r1527, 8;
	mov.b64 	%rd1193, {%r1653, %r1652};
	shr.u64 	%rd1194, %rd635, 7;
	xor.b64  	%rd1195, %rd1192, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1193;
	add.s64 	%rd1197, %rd1108, %rd628;
	add.s64 	%rd1198, %rd1197, %rd1191;
	add.s64 	%rd1199, %rd1198, %rd1196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1654,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1655}, %rd1186;
	}
	shf.r.wrap.b32 	%r1656, %r1655, %r1654, 19;
	shf.r.wrap.b32 	%r1657, %r1654, %r1655, 19;
	mov.b64 	%rd1200, {%r1657, %r1656};
	shf.l.wrap.b32 	%r1658, %r1654, %r1655, 3;
	shf.l.wrap.b32 	%r1659, %r1655, %r1654, 3;
	mov.b64 	%rd1201, {%r1659, %r1658};
	shr.u64 	%rd1202, %rd1186, 6;
	xor.b64  	%rd1203, %rd1200, %rd1202;
	xor.b64  	%rd1204, %rd1203, %rd1201;
	shf.r.wrap.b32 	%r1660, %r1533, %r1532, 1;
	shf.r.wrap.b32 	%r1661, %r1532, %r1533, 1;
	mov.b64 	%rd1205, {%r1661, %r1660};
	shf.r.wrap.b32 	%r1662, %r1533, %r1532, 8;
	shf.r.wrap.b32 	%r1663, %r1532, %r1533, 8;
	mov.b64 	%rd1206, {%r1663, %r1662};
	shr.u64 	%rd1207, %rd648, 7;
	xor.b64  	%rd1208, %rd1205, %rd1207;
	xor.b64  	%rd1209, %rd1208, %rd1206;
	add.s64 	%rd1210, %rd1121, %rd635;
	add.s64 	%rd1211, %rd1210, %rd1204;
	add.s64 	%rd1212, %rd1211, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd1199;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 19;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 19;
	mov.b64 	%rd1213, {%r1667, %r1666};
	shf.l.wrap.b32 	%r1668, %r1664, %r1665, 3;
	shf.l.wrap.b32 	%r1669, %r1665, %r1664, 3;
	mov.b64 	%rd1214, {%r1669, %r1668};
	shr.u64 	%rd1215, %rd1199, 6;
	xor.b64  	%rd1216, %rd1213, %rd1215;
	xor.b64  	%rd1217, %rd1216, %rd1214;
	shf.r.wrap.b32 	%r1670, %r1543, %r1542, 1;
	shf.r.wrap.b32 	%r1671, %r1542, %r1543, 1;
	mov.b64 	%rd1218, {%r1671, %r1670};
	shf.r.wrap.b32 	%r1672, %r1543, %r1542, 8;
	shf.r.wrap.b32 	%r1673, %r1542, %r1543, 8;
	mov.b64 	%rd1219, {%r1673, %r1672};
	shr.u64 	%rd1220, %rd1040, 7;
	xor.b64  	%rd1221, %rd1218, %rd1220;
	xor.b64  	%rd1222, %rd1221, %rd1219;
	add.s64 	%rd1223, %rd1134, %rd648;
	add.s64 	%rd1224, %rd1223, %rd1217;
	add.s64 	%rd1225, %rd1224, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd1021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1675}, %rd1021;
	}
	shf.r.wrap.b32 	%r1676, %r1675, %r1674, 14;
	shf.r.wrap.b32 	%r1677, %r1674, %r1675, 14;
	mov.b64 	%rd1226, {%r1677, %r1676};
	shf.r.wrap.b32 	%r1678, %r1675, %r1674, 18;
	shf.r.wrap.b32 	%r1679, %r1674, %r1675, 18;
	mov.b64 	%rd1227, {%r1679, %r1678};
	xor.b64  	%rd1228, %rd1227, %rd1226;
	shf.l.wrap.b32 	%r1680, %r1674, %r1675, 23;
	shf.l.wrap.b32 	%r1681, %r1675, %r1674, 23;
	mov.b64 	%rd1229, {%r1681, %r1680};
	xor.b64  	%rd1230, %rd1228, %rd1229;
	xor.b64  	%rd1231, %rd973, %rd997;
	and.b64  	%rd1232, %rd1231, %rd1021;
	xor.b64  	%rd1233, %rd1232, %rd973;
	add.s64 	%rd1234, %rd1233, %rd949;
	add.s64 	%rd1235, %rd1234, %rd1040;
	add.s64 	%rd1236, %rd1235, %rd56;
	add.s64 	%rd1237, %rd1236, %rd1230;
	add.s64 	%rd1238, %rd1237, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1682,%dummy}, %rd1032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1683}, %rd1032;
	}
	shf.r.wrap.b32 	%r1684, %r1683, %r1682, 28;
	shf.r.wrap.b32 	%r1685, %r1682, %r1683, 28;
	mov.b64 	%rd1239, {%r1685, %r1684};
	shf.l.wrap.b32 	%r1686, %r1682, %r1683, 30;
	shf.l.wrap.b32 	%r1687, %r1683, %r1682, 30;
	mov.b64 	%rd1240, {%r1687, %r1686};
	xor.b64  	%rd1241, %rd1240, %rd1239;
	shf.l.wrap.b32 	%r1688, %r1682, %r1683, 25;
	shf.l.wrap.b32 	%r1689, %r1683, %r1682, 25;
	mov.b64 	%rd1242, {%r1689, %r1688};
	xor.b64  	%rd1243, %rd1241, %rd1242;
	xor.b64  	%rd1244, %rd1032, %rd984;
	xor.b64  	%rd1245, %rd1032, %rd1008;
	and.b64  	%rd1246, %rd1245, %rd1244;
	xor.b64  	%rd1247, %rd1246, %rd1032;
	add.s64 	%rd1248, %rd1237, %rd1247;
	add.s64 	%rd1249, %rd1248, %rd1243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1690,%dummy}, %rd1238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1691}, %rd1238;
	}
	shf.r.wrap.b32 	%r1692, %r1691, %r1690, 14;
	shf.r.wrap.b32 	%r1693, %r1690, %r1691, 14;
	mov.b64 	%rd1250, {%r1693, %r1692};
	shf.r.wrap.b32 	%r1694, %r1691, %r1690, 18;
	shf.r.wrap.b32 	%r1695, %r1690, %r1691, 18;
	mov.b64 	%rd1251, {%r1695, %r1694};
	xor.b64  	%rd1252, %rd1251, %rd1250;
	shf.l.wrap.b32 	%r1696, %r1690, %r1691, 23;
	shf.l.wrap.b32 	%r1697, %r1691, %r1690, 23;
	mov.b64 	%rd1253, {%r1697, %r1696};
	xor.b64  	%rd1254, %rd1252, %rd1253;
	xor.b64  	%rd1255, %rd997, %rd1021;
	and.b64  	%rd1256, %rd1238, %rd1255;
	xor.b64  	%rd1257, %rd1256, %rd997;
	add.s64 	%rd1258, %rd1053, %rd973;
	add.s64 	%rd1259, %rd1258, %rd57;
	add.s64 	%rd1260, %rd1259, %rd1257;
	add.s64 	%rd1261, %rd1260, %rd1254;
	add.s64 	%rd1262, %rd1261, %rd984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1698,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1699}, %rd1249;
	}
	shf.r.wrap.b32 	%r1700, %r1699, %r1698, 28;
	shf.r.wrap.b32 	%r1701, %r1698, %r1699, 28;
	mov.b64 	%rd1263, {%r1701, %r1700};
	shf.l.wrap.b32 	%r1702, %r1698, %r1699, 30;
	shf.l.wrap.b32 	%r1703, %r1699, %r1698, 30;
	mov.b64 	%rd1264, {%r1703, %r1702};
	xor.b64  	%rd1265, %rd1264, %rd1263;
	shf.l.wrap.b32 	%r1704, %r1698, %r1699, 25;
	shf.l.wrap.b32 	%r1705, %r1699, %r1698, 25;
	mov.b64 	%rd1266, {%r1705, %r1704};
	xor.b64  	%rd1267, %rd1265, %rd1266;
	xor.b64  	%rd1268, %rd1249, %rd1008;
	xor.b64  	%rd1269, %rd1249, %rd1032;
	and.b64  	%rd1270, %rd1269, %rd1268;
	xor.b64  	%rd1271, %rd1270, %rd1249;
	add.s64 	%rd1272, %rd1261, %rd1271;
	add.s64 	%rd1273, %rd1272, %rd1267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1706,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1707}, %rd1262;
	}
	shf.r.wrap.b32 	%r1708, %r1707, %r1706, 14;
	shf.r.wrap.b32 	%r1709, %r1706, %r1707, 14;
	mov.b64 	%rd1274, {%r1709, %r1708};
	shf.r.wrap.b32 	%r1710, %r1707, %r1706, 18;
	shf.r.wrap.b32 	%r1711, %r1706, %r1707, 18;
	mov.b64 	%rd1275, {%r1711, %r1710};
	xor.b64  	%rd1276, %rd1275, %rd1274;
	shf.l.wrap.b32 	%r1712, %r1706, %r1707, 23;
	shf.l.wrap.b32 	%r1713, %r1707, %r1706, 23;
	mov.b64 	%rd1277, {%r1713, %r1712};
	xor.b64  	%rd1278, %rd1276, %rd1277;
	xor.b64  	%rd1279, %rd1238, %rd1021;
	and.b64  	%rd1280, %rd1262, %rd1279;
	xor.b64  	%rd1281, %rd1280, %rd1021;
	add.s64 	%rd1282, %rd1061, %rd997;
	add.s64 	%rd1283, %rd1282, %rd58;
	add.s64 	%rd1284, %rd1283, %rd1281;
	add.s64 	%rd1285, %rd1284, %rd1278;
	add.s64 	%rd1286, %rd1285, %rd1008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1714,%dummy}, %rd1273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1715}, %rd1273;
	}
	shf.r.wrap.b32 	%r1716, %r1715, %r1714, 28;
	shf.r.wrap.b32 	%r1717, %r1714, %r1715, 28;
	mov.b64 	%rd1287, {%r1717, %r1716};
	shf.l.wrap.b32 	%r1718, %r1714, %r1715, 30;
	shf.l.wrap.b32 	%r1719, %r1715, %r1714, 30;
	mov.b64 	%rd1288, {%r1719, %r1718};
	xor.b64  	%rd1289, %rd1288, %rd1287;
	shf.l.wrap.b32 	%r1720, %r1714, %r1715, 25;
	shf.l.wrap.b32 	%r1721, %r1715, %r1714, 25;
	mov.b64 	%rd1290, {%r1721, %r1720};
	xor.b64  	%rd1291, %rd1289, %rd1290;
	xor.b64  	%rd1292, %rd1273, %rd1032;
	xor.b64  	%rd1293, %rd1273, %rd1249;
	and.b64  	%rd1294, %rd1293, %rd1292;
	xor.b64  	%rd1295, %rd1294, %rd1273;
	add.s64 	%rd1296, %rd1285, %rd1295;
	add.s64 	%rd1297, %rd1296, %rd1291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1722,%dummy}, %rd1286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1723}, %rd1286;
	}
	shf.r.wrap.b32 	%r1724, %r1723, %r1722, 14;
	shf.r.wrap.b32 	%r1725, %r1722, %r1723, 14;
	mov.b64 	%rd1298, {%r1725, %r1724};
	shf.r.wrap.b32 	%r1726, %r1723, %r1722, 18;
	shf.r.wrap.b32 	%r1727, %r1722, %r1723, 18;
	mov.b64 	%rd1299, {%r1727, %r1726};
	xor.b64  	%rd1300, %rd1299, %rd1298;
	shf.l.wrap.b32 	%r1728, %r1722, %r1723, 23;
	shf.l.wrap.b32 	%r1729, %r1723, %r1722, 23;
	mov.b64 	%rd1301, {%r1729, %r1728};
	xor.b64  	%rd1302, %rd1300, %rd1301;
	xor.b64  	%rd1303, %rd1262, %rd1238;
	and.b64  	%rd1304, %rd1286, %rd1303;
	xor.b64  	%rd1305, %rd1304, %rd1238;
	add.s64 	%rd1306, %rd1074, %rd1021;
	add.s64 	%rd1307, %rd1306, %rd59;
	add.s64 	%rd1308, %rd1307, %rd1305;
	add.s64 	%rd1309, %rd1308, %rd1302;
	add.s64 	%rd1310, %rd1309, %rd1032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1730,%dummy}, %rd1297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1731}, %rd1297;
	}
	shf.r.wrap.b32 	%r1732, %r1731, %r1730, 28;
	shf.r.wrap.b32 	%r1733, %r1730, %r1731, 28;
	mov.b64 	%rd1311, {%r1733, %r1732};
	shf.l.wrap.b32 	%r1734, %r1730, %r1731, 30;
	shf.l.wrap.b32 	%r1735, %r1731, %r1730, 30;
	mov.b64 	%rd1312, {%r1735, %r1734};
	xor.b64  	%rd1313, %rd1312, %rd1311;
	shf.l.wrap.b32 	%r1736, %r1730, %r1731, 25;
	shf.l.wrap.b32 	%r1737, %r1731, %r1730, 25;
	mov.b64 	%rd1314, {%r1737, %r1736};
	xor.b64  	%rd1315, %rd1313, %rd1314;
	xor.b64  	%rd1316, %rd1297, %rd1249;
	xor.b64  	%rd1317, %rd1297, %rd1273;
	and.b64  	%rd1318, %rd1317, %rd1316;
	xor.b64  	%rd1319, %rd1318, %rd1297;
	add.s64 	%rd1320, %rd1309, %rd1319;
	add.s64 	%rd1321, %rd1320, %rd1315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1738,%dummy}, %rd1310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1739}, %rd1310;
	}
	shf.r.wrap.b32 	%r1740, %r1739, %r1738, 14;
	shf.r.wrap.b32 	%r1741, %r1738, %r1739, 14;
	mov.b64 	%rd1322, {%r1741, %r1740};
	shf.r.wrap.b32 	%r1742, %r1739, %r1738, 18;
	shf.r.wrap.b32 	%r1743, %r1738, %r1739, 18;
	mov.b64 	%rd1323, {%r1743, %r1742};
	xor.b64  	%rd1324, %rd1323, %rd1322;
	shf.l.wrap.b32 	%r1744, %r1738, %r1739, 23;
	shf.l.wrap.b32 	%r1745, %r1739, %r1738, 23;
	mov.b64 	%rd1325, {%r1745, %r1744};
	xor.b64  	%rd1326, %rd1324, %rd1325;
	xor.b64  	%rd1327, %rd1286, %rd1262;
	and.b64  	%rd1328, %rd1310, %rd1327;
	xor.b64  	%rd1329, %rd1328, %rd1262;
	add.s64 	%rd1330, %rd1238, %rd1082;
	add.s64 	%rd1331, %rd1330, %rd60;
	add.s64 	%rd1332, %rd1331, %rd1329;
	add.s64 	%rd1333, %rd1332, %rd1326;
	add.s64 	%rd1334, %rd1333, %rd1249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1746,%dummy}, %rd1321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1747}, %rd1321;
	}
	shf.r.wrap.b32 	%r1748, %r1747, %r1746, 28;
	shf.r.wrap.b32 	%r1749, %r1746, %r1747, 28;
	mov.b64 	%rd1335, {%r1749, %r1748};
	shf.l.wrap.b32 	%r1750, %r1746, %r1747, 30;
	shf.l.wrap.b32 	%r1751, %r1747, %r1746, 30;
	mov.b64 	%rd1336, {%r1751, %r1750};
	xor.b64  	%rd1337, %rd1336, %rd1335;
	shf.l.wrap.b32 	%r1752, %r1746, %r1747, 25;
	shf.l.wrap.b32 	%r1753, %r1747, %r1746, 25;
	mov.b64 	%rd1338, {%r1753, %r1752};
	xor.b64  	%rd1339, %rd1337, %rd1338;
	xor.b64  	%rd1340, %rd1321, %rd1273;
	xor.b64  	%rd1341, %rd1321, %rd1297;
	and.b64  	%rd1342, %rd1341, %rd1340;
	xor.b64  	%rd1343, %rd1342, %rd1321;
	add.s64 	%rd1344, %rd1333, %rd1343;
	add.s64 	%rd1345, %rd1344, %rd1339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1754,%dummy}, %rd1334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1755}, %rd1334;
	}
	shf.r.wrap.b32 	%r1756, %r1755, %r1754, 14;
	shf.r.wrap.b32 	%r1757, %r1754, %r1755, 14;
	mov.b64 	%rd1346, {%r1757, %r1756};
	shf.r.wrap.b32 	%r1758, %r1755, %r1754, 18;
	shf.r.wrap.b32 	%r1759, %r1754, %r1755, 18;
	mov.b64 	%rd1347, {%r1759, %r1758};
	xor.b64  	%rd1348, %rd1347, %rd1346;
	shf.l.wrap.b32 	%r1760, %r1754, %r1755, 23;
	shf.l.wrap.b32 	%r1761, %r1755, %r1754, 23;
	mov.b64 	%rd1349, {%r1761, %r1760};
	xor.b64  	%rd1350, %rd1348, %rd1349;
	xor.b64  	%rd1351, %rd1310, %rd1286;
	and.b64  	%rd1352, %rd1334, %rd1351;
	xor.b64  	%rd1353, %rd1352, %rd1286;
	add.s64 	%rd1354, %rd1262, %rd1095;
	add.s64 	%rd1355, %rd1354, %rd61;
	add.s64 	%rd1356, %rd1355, %rd1353;
	add.s64 	%rd1357, %rd1356, %rd1350;
	add.s64 	%rd1358, %rd1357, %rd1273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1762,%dummy}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1763}, %rd1345;
	}
	shf.r.wrap.b32 	%r1764, %r1763, %r1762, 28;
	shf.r.wrap.b32 	%r1765, %r1762, %r1763, 28;
	mov.b64 	%rd1359, {%r1765, %r1764};
	shf.l.wrap.b32 	%r1766, %r1762, %r1763, 30;
	shf.l.wrap.b32 	%r1767, %r1763, %r1762, 30;
	mov.b64 	%rd1360, {%r1767, %r1766};
	xor.b64  	%rd1361, %rd1360, %rd1359;
	shf.l.wrap.b32 	%r1768, %r1762, %r1763, 25;
	shf.l.wrap.b32 	%r1769, %r1763, %r1762, 25;
	mov.b64 	%rd1362, {%r1769, %r1768};
	xor.b64  	%rd1363, %rd1361, %rd1362;
	xor.b64  	%rd1364, %rd1345, %rd1297;
	xor.b64  	%rd1365, %rd1345, %rd1321;
	and.b64  	%rd1366, %rd1365, %rd1364;
	xor.b64  	%rd1367, %rd1366, %rd1345;
	add.s64 	%rd1368, %rd1357, %rd1367;
	add.s64 	%rd1369, %rd1368, %rd1363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1770,%dummy}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1771}, %rd1358;
	}
	shf.r.wrap.b32 	%r1772, %r1771, %r1770, 14;
	shf.r.wrap.b32 	%r1773, %r1770, %r1771, 14;
	mov.b64 	%rd1370, {%r1773, %r1772};
	shf.r.wrap.b32 	%r1774, %r1771, %r1770, 18;
	shf.r.wrap.b32 	%r1775, %r1770, %r1771, 18;
	mov.b64 	%rd1371, {%r1775, %r1774};
	xor.b64  	%rd1372, %rd1371, %rd1370;
	shf.l.wrap.b32 	%r1776, %r1770, %r1771, 23;
	shf.l.wrap.b32 	%r1777, %r1771, %r1770, 23;
	mov.b64 	%rd1373, {%r1777, %r1776};
	xor.b64  	%rd1374, %rd1372, %rd1373;
	xor.b64  	%rd1375, %rd1334, %rd1310;
	and.b64  	%rd1376, %rd1358, %rd1375;
	xor.b64  	%rd1377, %rd1376, %rd1310;
	add.s64 	%rd1378, %rd1286, %rd1108;
	add.s64 	%rd1379, %rd1378, %rd62;
	add.s64 	%rd1380, %rd1379, %rd1377;
	add.s64 	%rd1381, %rd1380, %rd1374;
	add.s64 	%rd1382, %rd1381, %rd1297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1778,%dummy}, %rd1369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1779}, %rd1369;
	}
	shf.r.wrap.b32 	%r1780, %r1779, %r1778, 28;
	shf.r.wrap.b32 	%r1781, %r1778, %r1779, 28;
	mov.b64 	%rd1383, {%r1781, %r1780};
	shf.l.wrap.b32 	%r1782, %r1778, %r1779, 30;
	shf.l.wrap.b32 	%r1783, %r1779, %r1778, 30;
	mov.b64 	%rd1384, {%r1783, %r1782};
	xor.b64  	%rd1385, %rd1384, %rd1383;
	shf.l.wrap.b32 	%r1784, %r1778, %r1779, 25;
	shf.l.wrap.b32 	%r1785, %r1779, %r1778, 25;
	mov.b64 	%rd1386, {%r1785, %r1784};
	xor.b64  	%rd1387, %rd1385, %rd1386;
	xor.b64  	%rd1388, %rd1369, %rd1321;
	xor.b64  	%rd1389, %rd1369, %rd1345;
	and.b64  	%rd1390, %rd1389, %rd1388;
	xor.b64  	%rd1391, %rd1390, %rd1369;
	add.s64 	%rd1392, %rd1381, %rd1391;
	add.s64 	%rd1393, %rd1392, %rd1387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1786,%dummy}, %rd1382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1787}, %rd1382;
	}
	shf.r.wrap.b32 	%r1788, %r1787, %r1786, 14;
	shf.r.wrap.b32 	%r1789, %r1786, %r1787, 14;
	mov.b64 	%rd1394, {%r1789, %r1788};
	shf.r.wrap.b32 	%r1790, %r1787, %r1786, 18;
	shf.r.wrap.b32 	%r1791, %r1786, %r1787, 18;
	mov.b64 	%rd1395, {%r1791, %r1790};
	xor.b64  	%rd1396, %rd1395, %rd1394;
	shf.l.wrap.b32 	%r1792, %r1786, %r1787, 23;
	shf.l.wrap.b32 	%r1793, %r1787, %r1786, 23;
	mov.b64 	%rd1397, {%r1793, %r1792};
	xor.b64  	%rd1398, %rd1396, %rd1397;
	xor.b64  	%rd1399, %rd1358, %rd1334;
	and.b64  	%rd1400, %rd1382, %rd1399;
	xor.b64  	%rd1401, %rd1400, %rd1334;
	add.s64 	%rd1402, %rd1310, %rd1121;
	add.s64 	%rd1403, %rd1402, %rd63;
	add.s64 	%rd1404, %rd1403, %rd1401;
	add.s64 	%rd1405, %rd1404, %rd1398;
	add.s64 	%rd1406, %rd1405, %rd1321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1794,%dummy}, %rd1393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1795}, %rd1393;
	}
	shf.r.wrap.b32 	%r1796, %r1795, %r1794, 28;
	shf.r.wrap.b32 	%r1797, %r1794, %r1795, 28;
	mov.b64 	%rd1407, {%r1797, %r1796};
	shf.l.wrap.b32 	%r1798, %r1794, %r1795, 30;
	shf.l.wrap.b32 	%r1799, %r1795, %r1794, 30;
	mov.b64 	%rd1408, {%r1799, %r1798};
	xor.b64  	%rd1409, %rd1408, %rd1407;
	shf.l.wrap.b32 	%r1800, %r1794, %r1795, 25;
	shf.l.wrap.b32 	%r1801, %r1795, %r1794, 25;
	mov.b64 	%rd1410, {%r1801, %r1800};
	xor.b64  	%rd1411, %rd1409, %rd1410;
	xor.b64  	%rd1412, %rd1393, %rd1345;
	xor.b64  	%rd1413, %rd1393, %rd1369;
	and.b64  	%rd1414, %rd1413, %rd1412;
	xor.b64  	%rd1415, %rd1414, %rd1393;
	add.s64 	%rd1416, %rd1405, %rd1415;
	add.s64 	%rd1417, %rd1416, %rd1411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1802,%dummy}, %rd1406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1803}, %rd1406;
	}
	shf.r.wrap.b32 	%r1804, %r1803, %r1802, 14;
	shf.r.wrap.b32 	%r1805, %r1802, %r1803, 14;
	mov.b64 	%rd1418, {%r1805, %r1804};
	shf.r.wrap.b32 	%r1806, %r1803, %r1802, 18;
	shf.r.wrap.b32 	%r1807, %r1802, %r1803, 18;
	mov.b64 	%rd1419, {%r1807, %r1806};
	xor.b64  	%rd1420, %rd1419, %rd1418;
	shf.l.wrap.b32 	%r1808, %r1802, %r1803, 23;
	shf.l.wrap.b32 	%r1809, %r1803, %r1802, 23;
	mov.b64 	%rd1421, {%r1809, %r1808};
	xor.b64  	%rd1422, %rd1420, %rd1421;
	xor.b64  	%rd1423, %rd1382, %rd1358;
	and.b64  	%rd1424, %rd1406, %rd1423;
	xor.b64  	%rd1425, %rd1424, %rd1358;
	add.s64 	%rd1426, %rd1334, %rd1134;
	add.s64 	%rd1427, %rd1426, %rd64;
	add.s64 	%rd1428, %rd1427, %rd1425;
	add.s64 	%rd1429, %rd1428, %rd1422;
	add.s64 	%rd1430, %rd1429, %rd1345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1810,%dummy}, %rd1417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1811}, %rd1417;
	}
	shf.r.wrap.b32 	%r1812, %r1811, %r1810, 28;
	shf.r.wrap.b32 	%r1813, %r1810, %r1811, 28;
	mov.b64 	%rd1431, {%r1813, %r1812};
	shf.l.wrap.b32 	%r1814, %r1810, %r1811, 30;
	shf.l.wrap.b32 	%r1815, %r1811, %r1810, 30;
	mov.b64 	%rd1432, {%r1815, %r1814};
	xor.b64  	%rd1433, %rd1432, %rd1431;
	shf.l.wrap.b32 	%r1816, %r1810, %r1811, 25;
	shf.l.wrap.b32 	%r1817, %r1811, %r1810, 25;
	mov.b64 	%rd1434, {%r1817, %r1816};
	xor.b64  	%rd1435, %rd1433, %rd1434;
	xor.b64  	%rd1436, %rd1417, %rd1369;
	xor.b64  	%rd1437, %rd1417, %rd1393;
	and.b64  	%rd1438, %rd1437, %rd1436;
	xor.b64  	%rd1439, %rd1438, %rd1417;
	add.s64 	%rd1440, %rd1429, %rd1439;
	add.s64 	%rd1441, %rd1440, %rd1435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1818,%dummy}, %rd1430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1819}, %rd1430;
	}
	shf.r.wrap.b32 	%r1820, %r1819, %r1818, 14;
	shf.r.wrap.b32 	%r1821, %r1818, %r1819, 14;
	mov.b64 	%rd1442, {%r1821, %r1820};
	shf.r.wrap.b32 	%r1822, %r1819, %r1818, 18;
	shf.r.wrap.b32 	%r1823, %r1818, %r1819, 18;
	mov.b64 	%rd1443, {%r1823, %r1822};
	xor.b64  	%rd1444, %rd1443, %rd1442;
	shf.l.wrap.b32 	%r1824, %r1818, %r1819, 23;
	shf.l.wrap.b32 	%r1825, %r1819, %r1818, 23;
	mov.b64 	%rd1445, {%r1825, %r1824};
	xor.b64  	%rd1446, %rd1444, %rd1445;
	xor.b64  	%rd1447, %rd1406, %rd1382;
	and.b64  	%rd1448, %rd1430, %rd1447;
	xor.b64  	%rd1449, %rd1448, %rd1382;
	add.s64 	%rd1450, %rd1358, %rd1147;
	add.s64 	%rd1451, %rd1450, %rd65;
	add.s64 	%rd1452, %rd1451, %rd1449;
	add.s64 	%rd1453, %rd1452, %rd1446;
	add.s64 	%rd1454, %rd1453, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1826,%dummy}, %rd1441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1827}, %rd1441;
	}
	shf.r.wrap.b32 	%r1828, %r1827, %r1826, 28;
	shf.r.wrap.b32 	%r1829, %r1826, %r1827, 28;
	mov.b64 	%rd1455, {%r1829, %r1828};
	shf.l.wrap.b32 	%r1830, %r1826, %r1827, 30;
	shf.l.wrap.b32 	%r1831, %r1827, %r1826, 30;
	mov.b64 	%rd1456, {%r1831, %r1830};
	xor.b64  	%rd1457, %rd1456, %rd1455;
	shf.l.wrap.b32 	%r1832, %r1826, %r1827, 25;
	shf.l.wrap.b32 	%r1833, %r1827, %r1826, 25;
	mov.b64 	%rd1458, {%r1833, %r1832};
	xor.b64  	%rd1459, %rd1457, %rd1458;
	xor.b64  	%rd1460, %rd1441, %rd1393;
	xor.b64  	%rd1461, %rd1441, %rd1417;
	and.b64  	%rd1462, %rd1461, %rd1460;
	xor.b64  	%rd1463, %rd1462, %rd1441;
	add.s64 	%rd1464, %rd1453, %rd1463;
	add.s64 	%rd1465, %rd1464, %rd1459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1834,%dummy}, %rd1454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1835}, %rd1454;
	}
	shf.r.wrap.b32 	%r1836, %r1835, %r1834, 14;
	shf.r.wrap.b32 	%r1837, %r1834, %r1835, 14;
	mov.b64 	%rd1466, {%r1837, %r1836};
	shf.r.wrap.b32 	%r1838, %r1835, %r1834, 18;
	shf.r.wrap.b32 	%r1839, %r1834, %r1835, 18;
	mov.b64 	%rd1467, {%r1839, %r1838};
	xor.b64  	%rd1468, %rd1467, %rd1466;
	shf.l.wrap.b32 	%r1840, %r1834, %r1835, 23;
	shf.l.wrap.b32 	%r1841, %r1835, %r1834, 23;
	mov.b64 	%rd1469, {%r1841, %r1840};
	xor.b64  	%rd1470, %rd1468, %rd1469;
	xor.b64  	%rd1471, %rd1430, %rd1406;
	and.b64  	%rd1472, %rd1454, %rd1471;
	xor.b64  	%rd1473, %rd1472, %rd1406;
	add.s64 	%rd1474, %rd1382, %rd1160;
	add.s64 	%rd1475, %rd1474, %rd66;
	add.s64 	%rd1476, %rd1475, %rd1473;
	add.s64 	%rd1477, %rd1476, %rd1470;
	add.s64 	%rd1478, %rd1477, %rd1393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1842,%dummy}, %rd1465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1843}, %rd1465;
	}
	shf.r.wrap.b32 	%r1844, %r1843, %r1842, 28;
	shf.r.wrap.b32 	%r1845, %r1842, %r1843, 28;
	mov.b64 	%rd1479, {%r1845, %r1844};
	shf.l.wrap.b32 	%r1846, %r1842, %r1843, 30;
	shf.l.wrap.b32 	%r1847, %r1843, %r1842, 30;
	mov.b64 	%rd1480, {%r1847, %r1846};
	xor.b64  	%rd1481, %rd1480, %rd1479;
	shf.l.wrap.b32 	%r1848, %r1842, %r1843, 25;
	shf.l.wrap.b32 	%r1849, %r1843, %r1842, 25;
	mov.b64 	%rd1482, {%r1849, %r1848};
	xor.b64  	%rd1483, %rd1481, %rd1482;
	xor.b64  	%rd1484, %rd1465, %rd1417;
	xor.b64  	%rd1485, %rd1465, %rd1441;
	and.b64  	%rd1486, %rd1485, %rd1484;
	xor.b64  	%rd1487, %rd1486, %rd1465;
	add.s64 	%rd1488, %rd1477, %rd1487;
	add.s64 	%rd1489, %rd1488, %rd1483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1850,%dummy}, %rd1478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1851}, %rd1478;
	}
	shf.r.wrap.b32 	%r1852, %r1851, %r1850, 14;
	shf.r.wrap.b32 	%r1853, %r1850, %r1851, 14;
	mov.b64 	%rd1490, {%r1853, %r1852};
	shf.r.wrap.b32 	%r1854, %r1851, %r1850, 18;
	shf.r.wrap.b32 	%r1855, %r1850, %r1851, 18;
	mov.b64 	%rd1491, {%r1855, %r1854};
	xor.b64  	%rd1492, %rd1491, %rd1490;
	shf.l.wrap.b32 	%r1856, %r1850, %r1851, 23;
	shf.l.wrap.b32 	%r1857, %r1851, %r1850, 23;
	mov.b64 	%rd1493, {%r1857, %r1856};
	xor.b64  	%rd1494, %rd1492, %rd1493;
	xor.b64  	%rd1495, %rd1454, %rd1430;
	and.b64  	%rd1496, %rd1478, %rd1495;
	xor.b64  	%rd1497, %rd1496, %rd1430;
	add.s64 	%rd1498, %rd1406, %rd1173;
	add.s64 	%rd1499, %rd1498, %rd67;
	add.s64 	%rd1500, %rd1499, %rd1497;
	add.s64 	%rd1501, %rd1500, %rd1494;
	add.s64 	%rd1502, %rd1501, %rd1417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1858,%dummy}, %rd1489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1859}, %rd1489;
	}
	shf.r.wrap.b32 	%r1860, %r1859, %r1858, 28;
	shf.r.wrap.b32 	%r1861, %r1858, %r1859, 28;
	mov.b64 	%rd1503, {%r1861, %r1860};
	shf.l.wrap.b32 	%r1862, %r1858, %r1859, 30;
	shf.l.wrap.b32 	%r1863, %r1859, %r1858, 30;
	mov.b64 	%rd1504, {%r1863, %r1862};
	xor.b64  	%rd1505, %rd1504, %rd1503;
	shf.l.wrap.b32 	%r1864, %r1858, %r1859, 25;
	shf.l.wrap.b32 	%r1865, %r1859, %r1858, 25;
	mov.b64 	%rd1506, {%r1865, %r1864};
	xor.b64  	%rd1507, %rd1505, %rd1506;
	xor.b64  	%rd1508, %rd1489, %rd1441;
	xor.b64  	%rd1509, %rd1489, %rd1465;
	and.b64  	%rd1510, %rd1509, %rd1508;
	xor.b64  	%rd1511, %rd1510, %rd1489;
	add.s64 	%rd1512, %rd1501, %rd1511;
	add.s64 	%rd1513, %rd1512, %rd1507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1866,%dummy}, %rd1502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1867}, %rd1502;
	}
	shf.r.wrap.b32 	%r1868, %r1867, %r1866, 14;
	shf.r.wrap.b32 	%r1869, %r1866, %r1867, 14;
	mov.b64 	%rd1514, {%r1869, %r1868};
	shf.r.wrap.b32 	%r1870, %r1867, %r1866, 18;
	shf.r.wrap.b32 	%r1871, %r1866, %r1867, 18;
	mov.b64 	%rd1515, {%r1871, %r1870};
	xor.b64  	%rd1516, %rd1515, %rd1514;
	shf.l.wrap.b32 	%r1872, %r1866, %r1867, 23;
	shf.l.wrap.b32 	%r1873, %r1867, %r1866, 23;
	mov.b64 	%rd1517, {%r1873, %r1872};
	xor.b64  	%rd1518, %rd1516, %rd1517;
	xor.b64  	%rd1519, %rd1478, %rd1454;
	and.b64  	%rd1520, %rd1502, %rd1519;
	xor.b64  	%rd1521, %rd1520, %rd1454;
	add.s64 	%rd1522, %rd1430, %rd1186;
	add.s64 	%rd1523, %rd1522, %rd68;
	add.s64 	%rd1524, %rd1523, %rd1521;
	add.s64 	%rd1525, %rd1524, %rd1518;
	add.s64 	%rd1526, %rd1525, %rd1441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1874,%dummy}, %rd1513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1875}, %rd1513;
	}
	shf.r.wrap.b32 	%r1876, %r1875, %r1874, 28;
	shf.r.wrap.b32 	%r1877, %r1874, %r1875, 28;
	mov.b64 	%rd1527, {%r1877, %r1876};
	shf.l.wrap.b32 	%r1878, %r1874, %r1875, 30;
	shf.l.wrap.b32 	%r1879, %r1875, %r1874, 30;
	mov.b64 	%rd1528, {%r1879, %r1878};
	xor.b64  	%rd1529, %rd1528, %rd1527;
	shf.l.wrap.b32 	%r1880, %r1874, %r1875, 25;
	shf.l.wrap.b32 	%r1881, %r1875, %r1874, 25;
	mov.b64 	%rd1530, {%r1881, %r1880};
	xor.b64  	%rd1531, %rd1529, %rd1530;
	xor.b64  	%rd1532, %rd1513, %rd1465;
	xor.b64  	%rd1533, %rd1513, %rd1489;
	and.b64  	%rd1534, %rd1533, %rd1532;
	xor.b64  	%rd1535, %rd1534, %rd1513;
	add.s64 	%rd1536, %rd1525, %rd1535;
	add.s64 	%rd1537, %rd1536, %rd1531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1882,%dummy}, %rd1526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1883}, %rd1526;
	}
	shf.r.wrap.b32 	%r1884, %r1883, %r1882, 14;
	shf.r.wrap.b32 	%r1885, %r1882, %r1883, 14;
	mov.b64 	%rd1538, {%r1885, %r1884};
	shf.r.wrap.b32 	%r1886, %r1883, %r1882, 18;
	shf.r.wrap.b32 	%r1887, %r1882, %r1883, 18;
	mov.b64 	%rd1539, {%r1887, %r1886};
	xor.b64  	%rd1540, %rd1539, %rd1538;
	shf.l.wrap.b32 	%r1888, %r1882, %r1883, 23;
	shf.l.wrap.b32 	%r1889, %r1883, %r1882, 23;
	mov.b64 	%rd1541, {%r1889, %r1888};
	xor.b64  	%rd1542, %rd1540, %rd1541;
	xor.b64  	%rd1543, %rd1502, %rd1478;
	and.b64  	%rd1544, %rd1526, %rd1543;
	xor.b64  	%rd1545, %rd1544, %rd1478;
	add.s64 	%rd1546, %rd1454, %rd1199;
	add.s64 	%rd1547, %rd1546, %rd69;
	add.s64 	%rd1548, %rd1547, %rd1545;
	add.s64 	%rd1549, %rd1548, %rd1542;
	add.s64 	%rd1550, %rd1549, %rd1465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1890,%dummy}, %rd1537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1891}, %rd1537;
	}
	shf.r.wrap.b32 	%r1892, %r1891, %r1890, 28;
	shf.r.wrap.b32 	%r1893, %r1890, %r1891, 28;
	mov.b64 	%rd1551, {%r1893, %r1892};
	shf.l.wrap.b32 	%r1894, %r1890, %r1891, 30;
	shf.l.wrap.b32 	%r1895, %r1891, %r1890, 30;
	mov.b64 	%rd1552, {%r1895, %r1894};
	xor.b64  	%rd1553, %rd1552, %rd1551;
	shf.l.wrap.b32 	%r1896, %r1890, %r1891, 25;
	shf.l.wrap.b32 	%r1897, %r1891, %r1890, 25;
	mov.b64 	%rd1554, {%r1897, %r1896};
	xor.b64  	%rd1555, %rd1553, %rd1554;
	xor.b64  	%rd1556, %rd1537, %rd1489;
	xor.b64  	%rd1557, %rd1537, %rd1513;
	and.b64  	%rd1558, %rd1557, %rd1556;
	xor.b64  	%rd1559, %rd1558, %rd1537;
	add.s64 	%rd1560, %rd1549, %rd1559;
	add.s64 	%rd1561, %rd1560, %rd1555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1898,%dummy}, %rd1550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1899}, %rd1550;
	}
	shf.r.wrap.b32 	%r1900, %r1899, %r1898, 14;
	shf.r.wrap.b32 	%r1901, %r1898, %r1899, 14;
	mov.b64 	%rd1562, {%r1901, %r1900};
	shf.r.wrap.b32 	%r1902, %r1899, %r1898, 18;
	shf.r.wrap.b32 	%r1903, %r1898, %r1899, 18;
	mov.b64 	%rd1563, {%r1903, %r1902};
	xor.b64  	%rd1564, %rd1563, %rd1562;
	shf.l.wrap.b32 	%r1904, %r1898, %r1899, 23;
	shf.l.wrap.b32 	%r1905, %r1899, %r1898, 23;
	mov.b64 	%rd1565, {%r1905, %r1904};
	xor.b64  	%rd1566, %rd1564, %rd1565;
	xor.b64  	%rd1567, %rd1526, %rd1502;
	and.b64  	%rd1568, %rd1550, %rd1567;
	xor.b64  	%rd1569, %rd1568, %rd1502;
	add.s64 	%rd1570, %rd1478, %rd1212;
	add.s64 	%rd1571, %rd1570, %rd70;
	add.s64 	%rd1572, %rd1571, %rd1569;
	add.s64 	%rd1573, %rd1572, %rd1566;
	add.s64 	%rd1574, %rd1573, %rd1489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1906,%dummy}, %rd1561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1907}, %rd1561;
	}
	shf.r.wrap.b32 	%r1908, %r1907, %r1906, 28;
	shf.r.wrap.b32 	%r1909, %r1906, %r1907, 28;
	mov.b64 	%rd1575, {%r1909, %r1908};
	shf.l.wrap.b32 	%r1910, %r1906, %r1907, 30;
	shf.l.wrap.b32 	%r1911, %r1907, %r1906, 30;
	mov.b64 	%rd1576, {%r1911, %r1910};
	xor.b64  	%rd1577, %rd1576, %rd1575;
	shf.l.wrap.b32 	%r1912, %r1906, %r1907, 25;
	shf.l.wrap.b32 	%r1913, %r1907, %r1906, 25;
	mov.b64 	%rd1578, {%r1913, %r1912};
	xor.b64  	%rd1579, %rd1577, %rd1578;
	xor.b64  	%rd1580, %rd1561, %rd1513;
	xor.b64  	%rd1581, %rd1561, %rd1537;
	and.b64  	%rd1582, %rd1581, %rd1580;
	xor.b64  	%rd1583, %rd1582, %rd1561;
	add.s64 	%rd1584, %rd1573, %rd1583;
	add.s64 	%rd1585, %rd1584, %rd1579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1914,%dummy}, %rd1574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1915}, %rd1574;
	}
	shf.r.wrap.b32 	%r1916, %r1915, %r1914, 14;
	shf.r.wrap.b32 	%r1917, %r1914, %r1915, 14;
	mov.b64 	%rd1586, {%r1917, %r1916};
	shf.r.wrap.b32 	%r1918, %r1915, %r1914, 18;
	shf.r.wrap.b32 	%r1919, %r1914, %r1915, 18;
	mov.b64 	%rd1587, {%r1919, %r1918};
	xor.b64  	%rd1588, %rd1587, %rd1586;
	shf.l.wrap.b32 	%r1920, %r1914, %r1915, 23;
	shf.l.wrap.b32 	%r1921, %r1915, %r1914, 23;
	mov.b64 	%rd1589, {%r1921, %r1920};
	xor.b64  	%rd1590, %rd1588, %rd1589;
	xor.b64  	%rd1591, %rd1550, %rd1526;
	and.b64  	%rd1592, %rd1574, %rd1591;
	xor.b64  	%rd1593, %rd1592, %rd1526;
	add.s64 	%rd1594, %rd1502, %rd1225;
	add.s64 	%rd1595, %rd1594, %rd71;
	add.s64 	%rd1596, %rd1595, %rd1593;
	add.s64 	%rd1597, %rd1596, %rd1590;
	add.s64 	%rd1598, %rd1597, %rd1513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1922,%dummy}, %rd1585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1923}, %rd1585;
	}
	shf.r.wrap.b32 	%r1924, %r1923, %r1922, 28;
	shf.r.wrap.b32 	%r1925, %r1922, %r1923, 28;
	mov.b64 	%rd1599, {%r1925, %r1924};
	shf.l.wrap.b32 	%r1926, %r1922, %r1923, 30;
	shf.l.wrap.b32 	%r1927, %r1923, %r1922, 30;
	mov.b64 	%rd1600, {%r1927, %r1926};
	xor.b64  	%rd1601, %rd1600, %rd1599;
	shf.l.wrap.b32 	%r1928, %r1922, %r1923, 25;
	shf.l.wrap.b32 	%r1929, %r1923, %r1922, 25;
	mov.b64 	%rd1602, {%r1929, %r1928};
	xor.b64  	%rd1603, %rd1601, %rd1602;
	xor.b64  	%rd1604, %rd1585, %rd1537;
	xor.b64  	%rd1605, %rd1585, %rd1561;
	and.b64  	%rd1606, %rd1605, %rd1604;
	xor.b64  	%rd1607, %rd1606, %rd1585;
	add.s64 	%rd1608, %rd1597, %rd1607;
	add.s64 	%rd1609, %rd1608, %rd1603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd1212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1931}, %rd1212;
	}
	shf.r.wrap.b32 	%r1932, %r1931, %r1930, 19;
	shf.r.wrap.b32 	%r1933, %r1930, %r1931, 19;
	mov.b64 	%rd1610, {%r1933, %r1932};
	shf.l.wrap.b32 	%r1934, %r1930, %r1931, 3;
	shf.l.wrap.b32 	%r1935, %r1931, %r1930, 3;
	mov.b64 	%rd1611, {%r1935, %r1934};
	shr.u64 	%rd1612, %rd1212, 6;
	xor.b64  	%rd1613, %rd1610, %rd1612;
	xor.b64  	%rd1614, %rd1613, %rd1611;
	shf.r.wrap.b32 	%r1936, %r1549, %r1548, 1;
	shf.r.wrap.b32 	%r1937, %r1548, %r1549, 1;
	mov.b64 	%rd1615, {%r1937, %r1936};
	shf.r.wrap.b32 	%r1938, %r1549, %r1548, 8;
	shf.r.wrap.b32 	%r1939, %r1548, %r1549, 8;
	mov.b64 	%rd1616, {%r1939, %r1938};
	shr.u64 	%rd1617, %rd1053, 7;
	xor.b64  	%rd1618, %rd1615, %rd1617;
	xor.b64  	%rd1619, %rd1618, %rd1616;
	add.s64 	%rd1620, %rd1040, %rd1147;
	add.s64 	%rd1621, %rd1620, %rd1614;
	add.s64 	%rd1622, %rd1621, %rd1619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1940,%dummy}, %rd1225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1941}, %rd1225;
	}
	shf.r.wrap.b32 	%r1942, %r1941, %r1940, 19;
	shf.r.wrap.b32 	%r1943, %r1940, %r1941, 19;
	mov.b64 	%rd1623, {%r1943, %r1942};
	shf.l.wrap.b32 	%r1944, %r1940, %r1941, 3;
	shf.l.wrap.b32 	%r1945, %r1941, %r1940, 3;
	mov.b64 	%rd1624, {%r1945, %r1944};
	shr.u64 	%rd1625, %rd1225, 6;
	xor.b64  	%rd1626, %rd1623, %rd1625;
	xor.b64  	%rd1627, %rd1626, %rd1624;
	shf.r.wrap.b32 	%r1946, %r1559, %r1558, 1;
	shf.r.wrap.b32 	%r1947, %r1558, %r1559, 1;
	mov.b64 	%rd1628, {%r1947, %r1946};
	shf.r.wrap.b32 	%r1948, %r1559, %r1558, 8;
	shf.r.wrap.b32 	%r1949, %r1558, %r1559, 8;
	mov.b64 	%rd1629, {%r1949, %r1948};
	shr.u64 	%rd1630, %rd1061, 7;
	xor.b64  	%rd1631, %rd1628, %rd1630;
	xor.b64  	%rd1632, %rd1631, %rd1629;
	add.s64 	%rd1633, %rd1053, %rd1160;
	add.s64 	%rd1634, %rd1633, %rd1627;
	add.s64 	%rd1635, %rd1634, %rd1632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd1622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1951}, %rd1622;
	}
	shf.r.wrap.b32 	%r1952, %r1951, %r1950, 19;
	shf.r.wrap.b32 	%r1953, %r1950, %r1951, 19;
	mov.b64 	%rd1636, {%r1953, %r1952};
	shf.l.wrap.b32 	%r1954, %r1950, %r1951, 3;
	shf.l.wrap.b32 	%r1955, %r1951, %r1950, 3;
	mov.b64 	%rd1637, {%r1955, %r1954};
	shr.u64 	%rd1638, %rd1622, 6;
	xor.b64  	%rd1639, %rd1636, %rd1638;
	xor.b64  	%rd1640, %rd1639, %rd1637;
	shf.r.wrap.b32 	%r1956, %r1565, %r1564, 1;
	shf.r.wrap.b32 	%r1957, %r1564, %r1565, 1;
	mov.b64 	%rd1641, {%r1957, %r1956};
	shf.r.wrap.b32 	%r1958, %r1565, %r1564, 8;
	shf.r.wrap.b32 	%r1959, %r1564, %r1565, 8;
	mov.b64 	%rd1642, {%r1959, %r1958};
	shr.u64 	%rd1643, %rd1074, 7;
	xor.b64  	%rd1644, %rd1641, %rd1643;
	xor.b64  	%rd1645, %rd1644, %rd1642;
	add.s64 	%rd1646, %rd1061, %rd1173;
	add.s64 	%rd1647, %rd1646, %rd1640;
	add.s64 	%rd1648, %rd1647, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1960,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1961}, %rd1635;
	}
	shf.r.wrap.b32 	%r1962, %r1961, %r1960, 19;
	shf.r.wrap.b32 	%r1963, %r1960, %r1961, 19;
	mov.b64 	%rd1649, {%r1963, %r1962};
	shf.l.wrap.b32 	%r1964, %r1960, %r1961, 3;
	shf.l.wrap.b32 	%r1965, %r1961, %r1960, 3;
	mov.b64 	%rd1650, {%r1965, %r1964};
	shr.u64 	%rd1651, %rd1635, 6;
	xor.b64  	%rd1652, %rd1649, %rd1651;
	xor.b64  	%rd1653, %rd1652, %rd1650;
	shf.r.wrap.b32 	%r1966, %r1575, %r1574, 1;
	shf.r.wrap.b32 	%r1967, %r1574, %r1575, 1;
	mov.b64 	%rd1654, {%r1967, %r1966};
	shf.r.wrap.b32 	%r1968, %r1575, %r1574, 8;
	shf.r.wrap.b32 	%r1969, %r1574, %r1575, 8;
	mov.b64 	%rd1655, {%r1969, %r1968};
	shr.u64 	%rd1656, %rd1082, 7;
	xor.b64  	%rd1657, %rd1654, %rd1656;
	xor.b64  	%rd1658, %rd1657, %rd1655;
	add.s64 	%rd1659, %rd1074, %rd1186;
	add.s64 	%rd1660, %rd1659, %rd1653;
	add.s64 	%rd1661, %rd1660, %rd1658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1970,%dummy}, %rd1648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1971}, %rd1648;
	}
	shf.r.wrap.b32 	%r1972, %r1971, %r1970, 19;
	shf.r.wrap.b32 	%r1973, %r1970, %r1971, 19;
	mov.b64 	%rd1662, {%r1973, %r1972};
	shf.l.wrap.b32 	%r1974, %r1970, %r1971, 3;
	shf.l.wrap.b32 	%r1975, %r1971, %r1970, 3;
	mov.b64 	%rd1663, {%r1975, %r1974};
	shr.u64 	%rd1664, %rd1648, 6;
	xor.b64  	%rd1665, %rd1662, %rd1664;
	xor.b64  	%rd1666, %rd1665, %rd1663;
	shf.r.wrap.b32 	%r1976, %r1585, %r1584, 1;
	shf.r.wrap.b32 	%r1977, %r1584, %r1585, 1;
	mov.b64 	%rd1667, {%r1977, %r1976};
	shf.r.wrap.b32 	%r1978, %r1585, %r1584, 8;
	shf.r.wrap.b32 	%r1979, %r1584, %r1585, 8;
	mov.b64 	%rd1668, {%r1979, %r1978};
	shr.u64 	%rd1669, %rd1095, 7;
	xor.b64  	%rd1670, %rd1667, %rd1669;
	xor.b64  	%rd1671, %rd1670, %rd1668;
	add.s64 	%rd1672, %rd1082, %rd1199;
	add.s64 	%rd1673, %rd1672, %rd1666;
	add.s64 	%rd1674, %rd1673, %rd1671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1980,%dummy}, %rd1661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1981}, %rd1661;
	}
	shf.r.wrap.b32 	%r1982, %r1981, %r1980, 19;
	shf.r.wrap.b32 	%r1983, %r1980, %r1981, 19;
	mov.b64 	%rd1675, {%r1983, %r1982};
	shf.l.wrap.b32 	%r1984, %r1980, %r1981, 3;
	shf.l.wrap.b32 	%r1985, %r1981, %r1980, 3;
	mov.b64 	%rd1676, {%r1985, %r1984};
	shr.u64 	%rd1677, %rd1661, 6;
	xor.b64  	%rd1678, %rd1675, %rd1677;
	xor.b64  	%rd1679, %rd1678, %rd1676;
	shf.r.wrap.b32 	%r1986, %r1595, %r1594, 1;
	shf.r.wrap.b32 	%r1987, %r1594, %r1595, 1;
	mov.b64 	%rd1680, {%r1987, %r1986};
	shf.r.wrap.b32 	%r1988, %r1595, %r1594, 8;
	shf.r.wrap.b32 	%r1989, %r1594, %r1595, 8;
	mov.b64 	%rd1681, {%r1989, %r1988};
	shr.u64 	%rd1682, %rd1108, 7;
	xor.b64  	%rd1683, %rd1680, %rd1682;
	xor.b64  	%rd1684, %rd1683, %rd1681;
	add.s64 	%rd1685, %rd1095, %rd1212;
	add.s64 	%rd1686, %rd1685, %rd1679;
	add.s64 	%rd1687, %rd1686, %rd1684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1990,%dummy}, %rd1674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1991}, %rd1674;
	}
	shf.r.wrap.b32 	%r1992, %r1991, %r1990, 19;
	shf.r.wrap.b32 	%r1993, %r1990, %r1991, 19;
	mov.b64 	%rd1688, {%r1993, %r1992};
	shf.l.wrap.b32 	%r1994, %r1990, %r1991, 3;
	shf.l.wrap.b32 	%r1995, %r1991, %r1990, 3;
	mov.b64 	%rd1689, {%r1995, %r1994};
	shr.u64 	%rd1690, %rd1674, 6;
	xor.b64  	%rd1691, %rd1688, %rd1690;
	xor.b64  	%rd1692, %rd1691, %rd1689;
	shf.r.wrap.b32 	%r1996, %r1605, %r1604, 1;
	shf.r.wrap.b32 	%r1997, %r1604, %r1605, 1;
	mov.b64 	%rd1693, {%r1997, %r1996};
	shf.r.wrap.b32 	%r1998, %r1605, %r1604, 8;
	shf.r.wrap.b32 	%r1999, %r1604, %r1605, 8;
	mov.b64 	%rd1694, {%r1999, %r1998};
	shr.u64 	%rd1695, %rd1121, 7;
	xor.b64  	%rd1696, %rd1693, %rd1695;
	xor.b64  	%rd1697, %rd1696, %rd1694;
	add.s64 	%rd1698, %rd1108, %rd1225;
	add.s64 	%rd1699, %rd1698, %rd1692;
	add.s64 	%rd1700, %rd1699, %rd1697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2000,%dummy}, %rd1687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2001}, %rd1687;
	}
	shf.r.wrap.b32 	%r2002, %r2001, %r2000, 19;
	shf.r.wrap.b32 	%r2003, %r2000, %r2001, 19;
	mov.b64 	%rd1701, {%r2003, %r2002};
	shf.l.wrap.b32 	%r2004, %r2000, %r2001, 3;
	shf.l.wrap.b32 	%r2005, %r2001, %r2000, 3;
	mov.b64 	%rd1702, {%r2005, %r2004};
	shr.u64 	%rd1703, %rd1687, 6;
	xor.b64  	%rd1704, %rd1701, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd1702;
	shf.r.wrap.b32 	%r2006, %r1615, %r1614, 1;
	shf.r.wrap.b32 	%r2007, %r1614, %r1615, 1;
	mov.b64 	%rd1706, {%r2007, %r2006};
	shf.r.wrap.b32 	%r2008, %r1615, %r1614, 8;
	shf.r.wrap.b32 	%r2009, %r1614, %r1615, 8;
	mov.b64 	%rd1707, {%r2009, %r2008};
	shr.u64 	%rd1708, %rd1134, 7;
	xor.b64  	%rd1709, %rd1706, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1707;
	add.s64 	%rd1711, %rd1622, %rd1121;
	add.s64 	%rd1712, %rd1711, %rd1705;
	add.s64 	%rd1713, %rd1712, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2011}, %rd1700;
	}
	shf.r.wrap.b32 	%r2012, %r2011, %r2010, 19;
	shf.r.wrap.b32 	%r2013, %r2010, %r2011, 19;
	mov.b64 	%rd1714, {%r2013, %r2012};
	shf.l.wrap.b32 	%r2014, %r2010, %r2011, 3;
	shf.l.wrap.b32 	%r2015, %r2011, %r2010, 3;
	mov.b64 	%rd1715, {%r2015, %r2014};
	shr.u64 	%rd1716, %rd1700, 6;
	xor.b64  	%rd1717, %rd1714, %rd1716;
	xor.b64  	%rd1718, %rd1717, %rd1715;
	shf.r.wrap.b32 	%r2016, %r1625, %r1624, 1;
	shf.r.wrap.b32 	%r2017, %r1624, %r1625, 1;
	mov.b64 	%rd1719, {%r2017, %r2016};
	shf.r.wrap.b32 	%r2018, %r1625, %r1624, 8;
	shf.r.wrap.b32 	%r2019, %r1624, %r1625, 8;
	mov.b64 	%rd1720, {%r2019, %r2018};
	shr.u64 	%rd1721, %rd1147, 7;
	xor.b64  	%rd1722, %rd1719, %rd1721;
	xor.b64  	%rd1723, %rd1722, %rd1720;
	add.s64 	%rd1724, %rd1635, %rd1134;
	add.s64 	%rd1725, %rd1724, %rd1718;
	add.s64 	%rd1726, %rd1725, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2020,%dummy}, %rd1713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd1713;
	}
	shf.r.wrap.b32 	%r2022, %r2021, %r2020, 19;
	shf.r.wrap.b32 	%r2023, %r2020, %r2021, 19;
	mov.b64 	%rd1727, {%r2023, %r2022};
	shf.l.wrap.b32 	%r2024, %r2020, %r2021, 3;
	shf.l.wrap.b32 	%r2025, %r2021, %r2020, 3;
	mov.b64 	%rd1728, {%r2025, %r2024};
	shr.u64 	%rd1729, %rd1713, 6;
	xor.b64  	%rd1730, %rd1727, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1728;
	shf.r.wrap.b32 	%r2026, %r1635, %r1634, 1;
	shf.r.wrap.b32 	%r2027, %r1634, %r1635, 1;
	mov.b64 	%rd1732, {%r2027, %r2026};
	shf.r.wrap.b32 	%r2028, %r1635, %r1634, 8;
	shf.r.wrap.b32 	%r2029, %r1634, %r1635, 8;
	mov.b64 	%rd1733, {%r2029, %r2028};
	shr.u64 	%rd1734, %rd1160, 7;
	xor.b64  	%rd1735, %rd1732, %rd1734;
	xor.b64  	%rd1736, %rd1735, %rd1733;
	add.s64 	%rd1737, %rd1648, %rd1147;
	add.s64 	%rd1738, %rd1737, %rd1731;
	add.s64 	%rd1739, %rd1738, %rd1736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2030,%dummy}, %rd1726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2031}, %rd1726;
	}
	shf.r.wrap.b32 	%r2032, %r2031, %r2030, 19;
	shf.r.wrap.b32 	%r2033, %r2030, %r2031, 19;
	mov.b64 	%rd1740, {%r2033, %r2032};
	shf.l.wrap.b32 	%r2034, %r2030, %r2031, 3;
	shf.l.wrap.b32 	%r2035, %r2031, %r2030, 3;
	mov.b64 	%rd1741, {%r2035, %r2034};
	shr.u64 	%rd1742, %rd1726, 6;
	xor.b64  	%rd1743, %rd1740, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1741;
	shf.r.wrap.b32 	%r2036, %r1645, %r1644, 1;
	shf.r.wrap.b32 	%r2037, %r1644, %r1645, 1;
	mov.b64 	%rd1745, {%r2037, %r2036};
	shf.r.wrap.b32 	%r2038, %r1645, %r1644, 8;
	shf.r.wrap.b32 	%r2039, %r1644, %r1645, 8;
	mov.b64 	%rd1746, {%r2039, %r2038};
	shr.u64 	%rd1747, %rd1173, 7;
	xor.b64  	%rd1748, %rd1745, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1746;
	add.s64 	%rd1750, %rd1661, %rd1160;
	add.s64 	%rd1751, %rd1750, %rd1744;
	add.s64 	%rd1752, %rd1751, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2040,%dummy}, %rd1739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2041}, %rd1739;
	}
	shf.r.wrap.b32 	%r2042, %r2041, %r2040, 19;
	shf.r.wrap.b32 	%r2043, %r2040, %r2041, 19;
	mov.b64 	%rd1753, {%r2043, %r2042};
	shf.l.wrap.b32 	%r2044, %r2040, %r2041, 3;
	shf.l.wrap.b32 	%r2045, %r2041, %r2040, 3;
	mov.b64 	%rd1754, {%r2045, %r2044};
	shr.u64 	%rd1755, %rd1739, 6;
	xor.b64  	%rd1756, %rd1753, %rd1755;
	xor.b64  	%rd1757, %rd1756, %rd1754;
	shf.r.wrap.b32 	%r2046, %r1655, %r1654, 1;
	shf.r.wrap.b32 	%r2047, %r1654, %r1655, 1;
	mov.b64 	%rd1758, {%r2047, %r2046};
	shf.r.wrap.b32 	%r2048, %r1655, %r1654, 8;
	shf.r.wrap.b32 	%r2049, %r1654, %r1655, 8;
	mov.b64 	%rd1759, {%r2049, %r2048};
	shr.u64 	%rd1760, %rd1186, 7;
	xor.b64  	%rd1761, %rd1758, %rd1760;
	xor.b64  	%rd1762, %rd1761, %rd1759;
	add.s64 	%rd1763, %rd1674, %rd1173;
	add.s64 	%rd1764, %rd1763, %rd1757;
	add.s64 	%rd1765, %rd1764, %rd1762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2050,%dummy}, %rd1752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2051}, %rd1752;
	}
	shf.r.wrap.b32 	%r2052, %r2051, %r2050, 19;
	shf.r.wrap.b32 	%r2053, %r2050, %r2051, 19;
	mov.b64 	%rd1766, {%r2053, %r2052};
	shf.l.wrap.b32 	%r2054, %r2050, %r2051, 3;
	shf.l.wrap.b32 	%r2055, %r2051, %r2050, 3;
	mov.b64 	%rd1767, {%r2055, %r2054};
	shr.u64 	%rd1768, %rd1752, 6;
	xor.b64  	%rd1769, %rd1766, %rd1768;
	xor.b64  	%rd1770, %rd1769, %rd1767;
	shf.r.wrap.b32 	%r2056, %r1665, %r1664, 1;
	shf.r.wrap.b32 	%r2057, %r1664, %r1665, 1;
	mov.b64 	%rd1771, {%r2057, %r2056};
	shf.r.wrap.b32 	%r2058, %r1665, %r1664, 8;
	shf.r.wrap.b32 	%r2059, %r1664, %r1665, 8;
	mov.b64 	%rd1772, {%r2059, %r2058};
	shr.u64 	%rd1773, %rd1199, 7;
	xor.b64  	%rd1774, %rd1771, %rd1773;
	xor.b64  	%rd1775, %rd1774, %rd1772;
	add.s64 	%rd1776, %rd1687, %rd1186;
	add.s64 	%rd1777, %rd1776, %rd1770;
	add.s64 	%rd1778, %rd1777, %rd1775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2060,%dummy}, %rd1765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2061}, %rd1765;
	}
	shf.r.wrap.b32 	%r2062, %r2061, %r2060, 19;
	shf.r.wrap.b32 	%r2063, %r2060, %r2061, 19;
	mov.b64 	%rd1779, {%r2063, %r2062};
	shf.l.wrap.b32 	%r2064, %r2060, %r2061, 3;
	shf.l.wrap.b32 	%r2065, %r2061, %r2060, 3;
	mov.b64 	%rd1780, {%r2065, %r2064};
	shr.u64 	%rd1781, %rd1765, 6;
	xor.b64  	%rd1782, %rd1779, %rd1781;
	xor.b64  	%rd1783, %rd1782, %rd1780;
	shf.r.wrap.b32 	%r2066, %r1931, %r1930, 1;
	shf.r.wrap.b32 	%r2067, %r1930, %r1931, 1;
	mov.b64 	%rd1784, {%r2067, %r2066};
	shf.r.wrap.b32 	%r2068, %r1931, %r1930, 8;
	shf.r.wrap.b32 	%r2069, %r1930, %r1931, 8;
	mov.b64 	%rd1785, {%r2069, %r2068};
	shr.u64 	%rd1786, %rd1212, 7;
	xor.b64  	%rd1787, %rd1784, %rd1786;
	xor.b64  	%rd1788, %rd1787, %rd1785;
	add.s64 	%rd1789, %rd1700, %rd1199;
	add.s64 	%rd1790, %rd1789, %rd1783;
	add.s64 	%rd1791, %rd1790, %rd1788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2070,%dummy}, %rd1778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2071}, %rd1778;
	}
	shf.r.wrap.b32 	%r2072, %r2071, %r2070, 19;
	shf.r.wrap.b32 	%r2073, %r2070, %r2071, 19;
	mov.b64 	%rd1792, {%r2073, %r2072};
	shf.l.wrap.b32 	%r2074, %r2070, %r2071, 3;
	shf.l.wrap.b32 	%r2075, %r2071, %r2070, 3;
	mov.b64 	%rd1793, {%r2075, %r2074};
	shr.u64 	%rd1794, %rd1778, 6;
	xor.b64  	%rd1795, %rd1792, %rd1794;
	xor.b64  	%rd1796, %rd1795, %rd1793;
	shf.r.wrap.b32 	%r2076, %r1941, %r1940, 1;
	shf.r.wrap.b32 	%r2077, %r1940, %r1941, 1;
	mov.b64 	%rd1797, {%r2077, %r2076};
	shf.r.wrap.b32 	%r2078, %r1941, %r1940, 8;
	shf.r.wrap.b32 	%r2079, %r1940, %r1941, 8;
	mov.b64 	%rd1798, {%r2079, %r2078};
	shr.u64 	%rd1799, %rd1225, 7;
	xor.b64  	%rd1800, %rd1797, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd1798;
	add.s64 	%rd1802, %rd1713, %rd1212;
	add.s64 	%rd1803, %rd1802, %rd1796;
	add.s64 	%rd1804, %rd1803, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2080,%dummy}, %rd1791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2081}, %rd1791;
	}
	shf.r.wrap.b32 	%r2082, %r2081, %r2080, 19;
	shf.r.wrap.b32 	%r2083, %r2080, %r2081, 19;
	mov.b64 	%rd1805, {%r2083, %r2082};
	shf.l.wrap.b32 	%r2084, %r2080, %r2081, 3;
	shf.l.wrap.b32 	%r2085, %r2081, %r2080, 3;
	mov.b64 	%rd1806, {%r2085, %r2084};
	shr.u64 	%rd1807, %rd1791, 6;
	xor.b64  	%rd1808, %rd1805, %rd1807;
	xor.b64  	%rd1809, %rd1808, %rd1806;
	shf.r.wrap.b32 	%r2086, %r1951, %r1950, 1;
	shf.r.wrap.b32 	%r2087, %r1950, %r1951, 1;
	mov.b64 	%rd1810, {%r2087, %r2086};
	shf.r.wrap.b32 	%r2088, %r1951, %r1950, 8;
	shf.r.wrap.b32 	%r2089, %r1950, %r1951, 8;
	mov.b64 	%rd1811, {%r2089, %r2088};
	shr.u64 	%rd1812, %rd1622, 7;
	xor.b64  	%rd1813, %rd1810, %rd1812;
	xor.b64  	%rd1814, %rd1813, %rd1811;
	add.s64 	%rd1815, %rd1726, %rd1225;
	add.s64 	%rd1816, %rd1815, %rd1809;
	add.s64 	%rd1817, %rd1816, %rd1814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd1598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2091}, %rd1598;
	}
	shf.r.wrap.b32 	%r2092, %r2091, %r2090, 14;
	shf.r.wrap.b32 	%r2093, %r2090, %r2091, 14;
	mov.b64 	%rd1818, {%r2093, %r2092};
	shf.r.wrap.b32 	%r2094, %r2091, %r2090, 18;
	shf.r.wrap.b32 	%r2095, %r2090, %r2091, 18;
	mov.b64 	%rd1819, {%r2095, %r2094};
	xor.b64  	%rd1820, %rd1819, %rd1818;
	shf.l.wrap.b32 	%r2096, %r2090, %r2091, 23;
	shf.l.wrap.b32 	%r2097, %r2091, %r2090, 23;
	mov.b64 	%rd1821, {%r2097, %r2096};
	xor.b64  	%rd1822, %rd1820, %rd1821;
	xor.b64  	%rd1823, %rd1550, %rd1574;
	and.b64  	%rd1824, %rd1823, %rd1598;
	xor.b64  	%rd1825, %rd1824, %rd1550;
	add.s64 	%rd1826, %rd1825, %rd1526;
	add.s64 	%rd1827, %rd1826, %rd1622;
	add.s64 	%rd1828, %rd1827, %rd72;
	add.s64 	%rd1829, %rd1828, %rd1822;
	add.s64 	%rd1830, %rd1829, %rd1537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2098,%dummy}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd1609;
	}
	shf.r.wrap.b32 	%r2100, %r2099, %r2098, 28;
	shf.r.wrap.b32 	%r2101, %r2098, %r2099, 28;
	mov.b64 	%rd1831, {%r2101, %r2100};
	shf.l.wrap.b32 	%r2102, %r2098, %r2099, 30;
	shf.l.wrap.b32 	%r2103, %r2099, %r2098, 30;
	mov.b64 	%rd1832, {%r2103, %r2102};
	xor.b64  	%rd1833, %rd1832, %rd1831;
	shf.l.wrap.b32 	%r2104, %r2098, %r2099, 25;
	shf.l.wrap.b32 	%r2105, %r2099, %r2098, 25;
	mov.b64 	%rd1834, {%r2105, %r2104};
	xor.b64  	%rd1835, %rd1833, %rd1834;
	xor.b64  	%rd1836, %rd1609, %rd1561;
	xor.b64  	%rd1837, %rd1609, %rd1585;
	and.b64  	%rd1838, %rd1837, %rd1836;
	xor.b64  	%rd1839, %rd1838, %rd1609;
	add.s64 	%rd1840, %rd1829, %rd1839;
	add.s64 	%rd1841, %rd1840, %rd1835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2106,%dummy}, %rd1830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2107}, %rd1830;
	}
	shf.r.wrap.b32 	%r2108, %r2107, %r2106, 14;
	shf.r.wrap.b32 	%r2109, %r2106, %r2107, 14;
	mov.b64 	%rd1842, {%r2109, %r2108};
	shf.r.wrap.b32 	%r2110, %r2107, %r2106, 18;
	shf.r.wrap.b32 	%r2111, %r2106, %r2107, 18;
	mov.b64 	%rd1843, {%r2111, %r2110};
	xor.b64  	%rd1844, %rd1843, %rd1842;
	shf.l.wrap.b32 	%r2112, %r2106, %r2107, 23;
	shf.l.wrap.b32 	%r2113, %r2107, %r2106, 23;
	mov.b64 	%rd1845, {%r2113, %r2112};
	xor.b64  	%rd1846, %rd1844, %rd1845;
	xor.b64  	%rd1847, %rd1574, %rd1598;
	and.b64  	%rd1848, %rd1830, %rd1847;
	xor.b64  	%rd1849, %rd1848, %rd1574;
	add.s64 	%rd1850, %rd1635, %rd1550;
	add.s64 	%rd1851, %rd1850, %rd73;
	add.s64 	%rd1852, %rd1851, %rd1849;
	add.s64 	%rd1853, %rd1852, %rd1846;
	add.s64 	%rd1854, %rd1853, %rd1561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2114,%dummy}, %rd1841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2115}, %rd1841;
	}
	shf.r.wrap.b32 	%r2116, %r2115, %r2114, 28;
	shf.r.wrap.b32 	%r2117, %r2114, %r2115, 28;
	mov.b64 	%rd1855, {%r2117, %r2116};
	shf.l.wrap.b32 	%r2118, %r2114, %r2115, 30;
	shf.l.wrap.b32 	%r2119, %r2115, %r2114, 30;
	mov.b64 	%rd1856, {%r2119, %r2118};
	xor.b64  	%rd1857, %rd1856, %rd1855;
	shf.l.wrap.b32 	%r2120, %r2114, %r2115, 25;
	shf.l.wrap.b32 	%r2121, %r2115, %r2114, 25;
	mov.b64 	%rd1858, {%r2121, %r2120};
	xor.b64  	%rd1859, %rd1857, %rd1858;
	xor.b64  	%rd1860, %rd1841, %rd1585;
	xor.b64  	%rd1861, %rd1841, %rd1609;
	and.b64  	%rd1862, %rd1861, %rd1860;
	xor.b64  	%rd1863, %rd1862, %rd1841;
	add.s64 	%rd1864, %rd1853, %rd1863;
	add.s64 	%rd1865, %rd1864, %rd1859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2122,%dummy}, %rd1854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2123}, %rd1854;
	}
	shf.r.wrap.b32 	%r2124, %r2123, %r2122, 14;
	shf.r.wrap.b32 	%r2125, %r2122, %r2123, 14;
	mov.b64 	%rd1866, {%r2125, %r2124};
	shf.r.wrap.b32 	%r2126, %r2123, %r2122, 18;
	shf.r.wrap.b32 	%r2127, %r2122, %r2123, 18;
	mov.b64 	%rd1867, {%r2127, %r2126};
	xor.b64  	%rd1868, %rd1867, %rd1866;
	shf.l.wrap.b32 	%r2128, %r2122, %r2123, 23;
	shf.l.wrap.b32 	%r2129, %r2123, %r2122, 23;
	mov.b64 	%rd1869, {%r2129, %r2128};
	xor.b64  	%rd1870, %rd1868, %rd1869;
	xor.b64  	%rd1871, %rd1830, %rd1598;
	and.b64  	%rd1872, %rd1854, %rd1871;
	xor.b64  	%rd1873, %rd1872, %rd1598;
	add.s64 	%rd1874, %rd1648, %rd1574;
	add.s64 	%rd1875, %rd1874, %rd74;
	add.s64 	%rd1876, %rd1875, %rd1873;
	add.s64 	%rd1877, %rd1876, %rd1870;
	add.s64 	%rd1878, %rd1877, %rd1585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2130,%dummy}, %rd1865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2131}, %rd1865;
	}
	shf.r.wrap.b32 	%r2132, %r2131, %r2130, 28;
	shf.r.wrap.b32 	%r2133, %r2130, %r2131, 28;
	mov.b64 	%rd1879, {%r2133, %r2132};
	shf.l.wrap.b32 	%r2134, %r2130, %r2131, 30;
	shf.l.wrap.b32 	%r2135, %r2131, %r2130, 30;
	mov.b64 	%rd1880, {%r2135, %r2134};
	xor.b64  	%rd1881, %rd1880, %rd1879;
	shf.l.wrap.b32 	%r2136, %r2130, %r2131, 25;
	shf.l.wrap.b32 	%r2137, %r2131, %r2130, 25;
	mov.b64 	%rd1882, {%r2137, %r2136};
	xor.b64  	%rd1883, %rd1881, %rd1882;
	xor.b64  	%rd1884, %rd1865, %rd1609;
	xor.b64  	%rd1885, %rd1865, %rd1841;
	and.b64  	%rd1886, %rd1885, %rd1884;
	xor.b64  	%rd1887, %rd1886, %rd1865;
	add.s64 	%rd1888, %rd1877, %rd1887;
	add.s64 	%rd1889, %rd1888, %rd1883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2138,%dummy}, %rd1878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2139}, %rd1878;
	}
	shf.r.wrap.b32 	%r2140, %r2139, %r2138, 14;
	shf.r.wrap.b32 	%r2141, %r2138, %r2139, 14;
	mov.b64 	%rd1890, {%r2141, %r2140};
	shf.r.wrap.b32 	%r2142, %r2139, %r2138, 18;
	shf.r.wrap.b32 	%r2143, %r2138, %r2139, 18;
	mov.b64 	%rd1891, {%r2143, %r2142};
	xor.b64  	%rd1892, %rd1891, %rd1890;
	shf.l.wrap.b32 	%r2144, %r2138, %r2139, 23;
	shf.l.wrap.b32 	%r2145, %r2139, %r2138, 23;
	mov.b64 	%rd1893, {%r2145, %r2144};
	xor.b64  	%rd1894, %rd1892, %rd1893;
	xor.b64  	%rd1895, %rd1854, %rd1830;
	and.b64  	%rd1896, %rd1878, %rd1895;
	xor.b64  	%rd1897, %rd1896, %rd1830;
	add.s64 	%rd1898, %rd1661, %rd1598;
	add.s64 	%rd1899, %rd1898, %rd75;
	add.s64 	%rd1900, %rd1899, %rd1897;
	add.s64 	%rd1901, %rd1900, %rd1894;
	add.s64 	%rd1902, %rd1901, %rd1609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2146,%dummy}, %rd1889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2147}, %rd1889;
	}
	shf.r.wrap.b32 	%r2148, %r2147, %r2146, 28;
	shf.r.wrap.b32 	%r2149, %r2146, %r2147, 28;
	mov.b64 	%rd1903, {%r2149, %r2148};
	shf.l.wrap.b32 	%r2150, %r2146, %r2147, 30;
	shf.l.wrap.b32 	%r2151, %r2147, %r2146, 30;
	mov.b64 	%rd1904, {%r2151, %r2150};
	xor.b64  	%rd1905, %rd1904, %rd1903;
	shf.l.wrap.b32 	%r2152, %r2146, %r2147, 25;
	shf.l.wrap.b32 	%r2153, %r2147, %r2146, 25;
	mov.b64 	%rd1906, {%r2153, %r2152};
	xor.b64  	%rd1907, %rd1905, %rd1906;
	xor.b64  	%rd1908, %rd1889, %rd1841;
	xor.b64  	%rd1909, %rd1889, %rd1865;
	and.b64  	%rd1910, %rd1909, %rd1908;
	xor.b64  	%rd1911, %rd1910, %rd1889;
	add.s64 	%rd1912, %rd1901, %rd1911;
	add.s64 	%rd1913, %rd1912, %rd1907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2154,%dummy}, %rd1902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2155}, %rd1902;
	}
	shf.r.wrap.b32 	%r2156, %r2155, %r2154, 14;
	shf.r.wrap.b32 	%r2157, %r2154, %r2155, 14;
	mov.b64 	%rd1914, {%r2157, %r2156};
	shf.r.wrap.b32 	%r2158, %r2155, %r2154, 18;
	shf.r.wrap.b32 	%r2159, %r2154, %r2155, 18;
	mov.b64 	%rd1915, {%r2159, %r2158};
	xor.b64  	%rd1916, %rd1915, %rd1914;
	shf.l.wrap.b32 	%r2160, %r2154, %r2155, 23;
	shf.l.wrap.b32 	%r2161, %r2155, %r2154, 23;
	mov.b64 	%rd1917, {%r2161, %r2160};
	xor.b64  	%rd1918, %rd1916, %rd1917;
	xor.b64  	%rd1919, %rd1878, %rd1854;
	and.b64  	%rd1920, %rd1902, %rd1919;
	xor.b64  	%rd1921, %rd1920, %rd1854;
	add.s64 	%rd1922, %rd1830, %rd1674;
	add.s64 	%rd1923, %rd1922, %rd76;
	add.s64 	%rd1924, %rd1923, %rd1921;
	add.s64 	%rd1925, %rd1924, %rd1918;
	add.s64 	%rd1926, %rd1925, %rd1841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2162,%dummy}, %rd1913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2163}, %rd1913;
	}
	shf.r.wrap.b32 	%r2164, %r2163, %r2162, 28;
	shf.r.wrap.b32 	%r2165, %r2162, %r2163, 28;
	mov.b64 	%rd1927, {%r2165, %r2164};
	shf.l.wrap.b32 	%r2166, %r2162, %r2163, 30;
	shf.l.wrap.b32 	%r2167, %r2163, %r2162, 30;
	mov.b64 	%rd1928, {%r2167, %r2166};
	xor.b64  	%rd1929, %rd1928, %rd1927;
	shf.l.wrap.b32 	%r2168, %r2162, %r2163, 25;
	shf.l.wrap.b32 	%r2169, %r2163, %r2162, 25;
	mov.b64 	%rd1930, {%r2169, %r2168};
	xor.b64  	%rd1931, %rd1929, %rd1930;
	xor.b64  	%rd1932, %rd1913, %rd1865;
	xor.b64  	%rd1933, %rd1913, %rd1889;
	and.b64  	%rd1934, %rd1933, %rd1932;
	xor.b64  	%rd1935, %rd1934, %rd1913;
	add.s64 	%rd1936, %rd1925, %rd1935;
	add.s64 	%rd1937, %rd1936, %rd1931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2170,%dummy}, %rd1926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2171}, %rd1926;
	}
	shf.r.wrap.b32 	%r2172, %r2171, %r2170, 14;
	shf.r.wrap.b32 	%r2173, %r2170, %r2171, 14;
	mov.b64 	%rd1938, {%r2173, %r2172};
	shf.r.wrap.b32 	%r2174, %r2171, %r2170, 18;
	shf.r.wrap.b32 	%r2175, %r2170, %r2171, 18;
	mov.b64 	%rd1939, {%r2175, %r2174};
	xor.b64  	%rd1940, %rd1939, %rd1938;
	shf.l.wrap.b32 	%r2176, %r2170, %r2171, 23;
	shf.l.wrap.b32 	%r2177, %r2171, %r2170, 23;
	mov.b64 	%rd1941, {%r2177, %r2176};
	xor.b64  	%rd1942, %rd1940, %rd1941;
	xor.b64  	%rd1943, %rd1902, %rd1878;
	and.b64  	%rd1944, %rd1926, %rd1943;
	xor.b64  	%rd1945, %rd1944, %rd1878;
	add.s64 	%rd1946, %rd1854, %rd1687;
	add.s64 	%rd1947, %rd1946, %rd77;
	add.s64 	%rd1948, %rd1947, %rd1945;
	add.s64 	%rd1949, %rd1948, %rd1942;
	add.s64 	%rd1950, %rd1949, %rd1865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2178,%dummy}, %rd1937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2179}, %rd1937;
	}
	shf.r.wrap.b32 	%r2180, %r2179, %r2178, 28;
	shf.r.wrap.b32 	%r2181, %r2178, %r2179, 28;
	mov.b64 	%rd1951, {%r2181, %r2180};
	shf.l.wrap.b32 	%r2182, %r2178, %r2179, 30;
	shf.l.wrap.b32 	%r2183, %r2179, %r2178, 30;
	mov.b64 	%rd1952, {%r2183, %r2182};
	xor.b64  	%rd1953, %rd1952, %rd1951;
	shf.l.wrap.b32 	%r2184, %r2178, %r2179, 25;
	shf.l.wrap.b32 	%r2185, %r2179, %r2178, 25;
	mov.b64 	%rd1954, {%r2185, %r2184};
	xor.b64  	%rd1955, %rd1953, %rd1954;
	xor.b64  	%rd1956, %rd1937, %rd1889;
	xor.b64  	%rd1957, %rd1937, %rd1913;
	and.b64  	%rd1958, %rd1957, %rd1956;
	xor.b64  	%rd1959, %rd1958, %rd1937;
	add.s64 	%rd1960, %rd1949, %rd1959;
	add.s64 	%rd1961, %rd1960, %rd1955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2186,%dummy}, %rd1950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2187}, %rd1950;
	}
	shf.r.wrap.b32 	%r2188, %r2187, %r2186, 14;
	shf.r.wrap.b32 	%r2189, %r2186, %r2187, 14;
	mov.b64 	%rd1962, {%r2189, %r2188};
	shf.r.wrap.b32 	%r2190, %r2187, %r2186, 18;
	shf.r.wrap.b32 	%r2191, %r2186, %r2187, 18;
	mov.b64 	%rd1963, {%r2191, %r2190};
	xor.b64  	%rd1964, %rd1963, %rd1962;
	shf.l.wrap.b32 	%r2192, %r2186, %r2187, 23;
	shf.l.wrap.b32 	%r2193, %r2187, %r2186, 23;
	mov.b64 	%rd1965, {%r2193, %r2192};
	xor.b64  	%rd1966, %rd1964, %rd1965;
	xor.b64  	%rd1967, %rd1926, %rd1902;
	and.b64  	%rd1968, %rd1950, %rd1967;
	xor.b64  	%rd1969, %rd1968, %rd1902;
	add.s64 	%rd1970, %rd1878, %rd1700;
	add.s64 	%rd1971, %rd1970, %rd78;
	add.s64 	%rd1972, %rd1971, %rd1969;
	add.s64 	%rd1973, %rd1972, %rd1966;
	add.s64 	%rd1974, %rd1973, %rd1889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2194,%dummy}, %rd1961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2195}, %rd1961;
	}
	shf.r.wrap.b32 	%r2196, %r2195, %r2194, 28;
	shf.r.wrap.b32 	%r2197, %r2194, %r2195, 28;
	mov.b64 	%rd1975, {%r2197, %r2196};
	shf.l.wrap.b32 	%r2198, %r2194, %r2195, 30;
	shf.l.wrap.b32 	%r2199, %r2195, %r2194, 30;
	mov.b64 	%rd1976, {%r2199, %r2198};
	xor.b64  	%rd1977, %rd1976, %rd1975;
	shf.l.wrap.b32 	%r2200, %r2194, %r2195, 25;
	shf.l.wrap.b32 	%r2201, %r2195, %r2194, 25;
	mov.b64 	%rd1978, {%r2201, %r2200};
	xor.b64  	%rd1979, %rd1977, %rd1978;
	xor.b64  	%rd1980, %rd1961, %rd1913;
	xor.b64  	%rd1981, %rd1961, %rd1937;
	and.b64  	%rd1982, %rd1981, %rd1980;
	xor.b64  	%rd1983, %rd1982, %rd1961;
	add.s64 	%rd1984, %rd1973, %rd1983;
	add.s64 	%rd1985, %rd1984, %rd1979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2202,%dummy}, %rd1974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2203}, %rd1974;
	}
	shf.r.wrap.b32 	%r2204, %r2203, %r2202, 14;
	shf.r.wrap.b32 	%r2205, %r2202, %r2203, 14;
	mov.b64 	%rd1986, {%r2205, %r2204};
	shf.r.wrap.b32 	%r2206, %r2203, %r2202, 18;
	shf.r.wrap.b32 	%r2207, %r2202, %r2203, 18;
	mov.b64 	%rd1987, {%r2207, %r2206};
	xor.b64  	%rd1988, %rd1987, %rd1986;
	shf.l.wrap.b32 	%r2208, %r2202, %r2203, 23;
	shf.l.wrap.b32 	%r2209, %r2203, %r2202, 23;
	mov.b64 	%rd1989, {%r2209, %r2208};
	xor.b64  	%rd1990, %rd1988, %rd1989;
	xor.b64  	%rd1991, %rd1950, %rd1926;
	and.b64  	%rd1992, %rd1974, %rd1991;
	xor.b64  	%rd1993, %rd1992, %rd1926;
	add.s64 	%rd1994, %rd1902, %rd1713;
	add.s64 	%rd1995, %rd1994, %rd79;
	add.s64 	%rd1996, %rd1995, %rd1993;
	add.s64 	%rd1997, %rd1996, %rd1990;
	add.s64 	%rd1998, %rd1997, %rd1913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2210,%dummy}, %rd1985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2211}, %rd1985;
	}
	shf.r.wrap.b32 	%r2212, %r2211, %r2210, 28;
	shf.r.wrap.b32 	%r2213, %r2210, %r2211, 28;
	mov.b64 	%rd1999, {%r2213, %r2212};
	shf.l.wrap.b32 	%r2214, %r2210, %r2211, 30;
	shf.l.wrap.b32 	%r2215, %r2211, %r2210, 30;
	mov.b64 	%rd2000, {%r2215, %r2214};
	xor.b64  	%rd2001, %rd2000, %rd1999;
	shf.l.wrap.b32 	%r2216, %r2210, %r2211, 25;
	shf.l.wrap.b32 	%r2217, %r2211, %r2210, 25;
	mov.b64 	%rd2002, {%r2217, %r2216};
	xor.b64  	%rd2003, %rd2001, %rd2002;
	xor.b64  	%rd2004, %rd1985, %rd1937;
	xor.b64  	%rd2005, %rd1985, %rd1961;
	and.b64  	%rd2006, %rd2005, %rd2004;
	xor.b64  	%rd2007, %rd2006, %rd1985;
	add.s64 	%rd2008, %rd1997, %rd2007;
	add.s64 	%rd2009, %rd2008, %rd2003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2218,%dummy}, %rd1998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2219}, %rd1998;
	}
	shf.r.wrap.b32 	%r2220, %r2219, %r2218, 14;
	shf.r.wrap.b32 	%r2221, %r2218, %r2219, 14;
	mov.b64 	%rd2010, {%r2221, %r2220};
	shf.r.wrap.b32 	%r2222, %r2219, %r2218, 18;
	shf.r.wrap.b32 	%r2223, %r2218, %r2219, 18;
	mov.b64 	%rd2011, {%r2223, %r2222};
	xor.b64  	%rd2012, %rd2011, %rd2010;
	shf.l.wrap.b32 	%r2224, %r2218, %r2219, 23;
	shf.l.wrap.b32 	%r2225, %r2219, %r2218, 23;
	mov.b64 	%rd2013, {%r2225, %r2224};
	xor.b64  	%rd2014, %rd2012, %rd2013;
	xor.b64  	%rd2015, %rd1974, %rd1950;
	and.b64  	%rd2016, %rd1998, %rd2015;
	xor.b64  	%rd2017, %rd2016, %rd1950;
	add.s64 	%rd2018, %rd1926, %rd1726;
	add.s64 	%rd2019, %rd2018, %rd80;
	add.s64 	%rd2020, %rd2019, %rd2017;
	add.s64 	%rd2021, %rd2020, %rd2014;
	add.s64 	%rd2022, %rd2021, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2226,%dummy}, %rd2009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2227}, %rd2009;
	}
	shf.r.wrap.b32 	%r2228, %r2227, %r2226, 28;
	shf.r.wrap.b32 	%r2229, %r2226, %r2227, 28;
	mov.b64 	%rd2023, {%r2229, %r2228};
	shf.l.wrap.b32 	%r2230, %r2226, %r2227, 30;
	shf.l.wrap.b32 	%r2231, %r2227, %r2226, 30;
	mov.b64 	%rd2024, {%r2231, %r2230};
	xor.b64  	%rd2025, %rd2024, %rd2023;
	shf.l.wrap.b32 	%r2232, %r2226, %r2227, 25;
	shf.l.wrap.b32 	%r2233, %r2227, %r2226, 25;
	mov.b64 	%rd2026, {%r2233, %r2232};
	xor.b64  	%rd2027, %rd2025, %rd2026;
	xor.b64  	%rd2028, %rd2009, %rd1961;
	xor.b64  	%rd2029, %rd2009, %rd1985;
	and.b64  	%rd2030, %rd2029, %rd2028;
	xor.b64  	%rd2031, %rd2030, %rd2009;
	add.s64 	%rd2032, %rd2021, %rd2031;
	add.s64 	%rd2033, %rd2032, %rd2027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2234,%dummy}, %rd2022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2235}, %rd2022;
	}
	shf.r.wrap.b32 	%r2236, %r2235, %r2234, 14;
	shf.r.wrap.b32 	%r2237, %r2234, %r2235, 14;
	mov.b64 	%rd2034, {%r2237, %r2236};
	shf.r.wrap.b32 	%r2238, %r2235, %r2234, 18;
	shf.r.wrap.b32 	%r2239, %r2234, %r2235, 18;
	mov.b64 	%rd2035, {%r2239, %r2238};
	xor.b64  	%rd2036, %rd2035, %rd2034;
	shf.l.wrap.b32 	%r2240, %r2234, %r2235, 23;
	shf.l.wrap.b32 	%r2241, %r2235, %r2234, 23;
	mov.b64 	%rd2037, {%r2241, %r2240};
	xor.b64  	%rd2038, %rd2036, %rd2037;
	xor.b64  	%rd2039, %rd1998, %rd1974;
	and.b64  	%rd2040, %rd2022, %rd2039;
	xor.b64  	%rd2041, %rd2040, %rd1974;
	add.s64 	%rd2042, %rd1950, %rd1739;
	add.s64 	%rd2043, %rd2042, %rd81;
	add.s64 	%rd2044, %rd2043, %rd2041;
	add.s64 	%rd2045, %rd2044, %rd2038;
	add.s64 	%rd2046, %rd2045, %rd1961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2242,%dummy}, %rd2033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2243}, %rd2033;
	}
	shf.r.wrap.b32 	%r2244, %r2243, %r2242, 28;
	shf.r.wrap.b32 	%r2245, %r2242, %r2243, 28;
	mov.b64 	%rd2047, {%r2245, %r2244};
	shf.l.wrap.b32 	%r2246, %r2242, %r2243, 30;
	shf.l.wrap.b32 	%r2247, %r2243, %r2242, 30;
	mov.b64 	%rd2048, {%r2247, %r2246};
	xor.b64  	%rd2049, %rd2048, %rd2047;
	shf.l.wrap.b32 	%r2248, %r2242, %r2243, 25;
	shf.l.wrap.b32 	%r2249, %r2243, %r2242, 25;
	mov.b64 	%rd2050, {%r2249, %r2248};
	xor.b64  	%rd2051, %rd2049, %rd2050;
	xor.b64  	%rd2052, %rd2033, %rd1985;
	xor.b64  	%rd2053, %rd2033, %rd2009;
	and.b64  	%rd2054, %rd2053, %rd2052;
	xor.b64  	%rd2055, %rd2054, %rd2033;
	add.s64 	%rd2056, %rd2045, %rd2055;
	add.s64 	%rd2057, %rd2056, %rd2051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2250,%dummy}, %rd2046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2251}, %rd2046;
	}
	shf.r.wrap.b32 	%r2252, %r2251, %r2250, 14;
	shf.r.wrap.b32 	%r2253, %r2250, %r2251, 14;
	mov.b64 	%rd2058, {%r2253, %r2252};
	shf.r.wrap.b32 	%r2254, %r2251, %r2250, 18;
	shf.r.wrap.b32 	%r2255, %r2250, %r2251, 18;
	mov.b64 	%rd2059, {%r2255, %r2254};
	xor.b64  	%rd2060, %rd2059, %rd2058;
	shf.l.wrap.b32 	%r2256, %r2250, %r2251, 23;
	shf.l.wrap.b32 	%r2257, %r2251, %r2250, 23;
	mov.b64 	%rd2061, {%r2257, %r2256};
	xor.b64  	%rd2062, %rd2060, %rd2061;
	xor.b64  	%rd2063, %rd2022, %rd1998;
	and.b64  	%rd2064, %rd2046, %rd2063;
	xor.b64  	%rd2065, %rd2064, %rd1998;
	add.s64 	%rd2066, %rd1974, %rd1752;
	add.s64 	%rd2067, %rd2066, %rd82;
	add.s64 	%rd2068, %rd2067, %rd2065;
	add.s64 	%rd2069, %rd2068, %rd2062;
	add.s64 	%rd2070, %rd2069, %rd1985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2258,%dummy}, %rd2057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2259}, %rd2057;
	}
	shf.r.wrap.b32 	%r2260, %r2259, %r2258, 28;
	shf.r.wrap.b32 	%r2261, %r2258, %r2259, 28;
	mov.b64 	%rd2071, {%r2261, %r2260};
	shf.l.wrap.b32 	%r2262, %r2258, %r2259, 30;
	shf.l.wrap.b32 	%r2263, %r2259, %r2258, 30;
	mov.b64 	%rd2072, {%r2263, %r2262};
	xor.b64  	%rd2073, %rd2072, %rd2071;
	shf.l.wrap.b32 	%r2264, %r2258, %r2259, 25;
	shf.l.wrap.b32 	%r2265, %r2259, %r2258, 25;
	mov.b64 	%rd2074, {%r2265, %r2264};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	xor.b64  	%rd2076, %rd2057, %rd2009;
	xor.b64  	%rd2077, %rd2057, %rd2033;
	and.b64  	%rd2078, %rd2077, %rd2076;
	xor.b64  	%rd2079, %rd2078, %rd2057;
	add.s64 	%rd2080, %rd2069, %rd2079;
	add.s64 	%rd2081, %rd2080, %rd2075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2266,%dummy}, %rd2070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2267}, %rd2070;
	}
	shf.r.wrap.b32 	%r2268, %r2267, %r2266, 14;
	shf.r.wrap.b32 	%r2269, %r2266, %r2267, 14;
	mov.b64 	%rd2082, {%r2269, %r2268};
	shf.r.wrap.b32 	%r2270, %r2267, %r2266, 18;
	shf.r.wrap.b32 	%r2271, %r2266, %r2267, 18;
	mov.b64 	%rd2083, {%r2271, %r2270};
	xor.b64  	%rd2084, %rd2083, %rd2082;
	shf.l.wrap.b32 	%r2272, %r2266, %r2267, 23;
	shf.l.wrap.b32 	%r2273, %r2267, %r2266, 23;
	mov.b64 	%rd2085, {%r2273, %r2272};
	xor.b64  	%rd2086, %rd2084, %rd2085;
	xor.b64  	%rd2087, %rd2046, %rd2022;
	and.b64  	%rd2088, %rd2070, %rd2087;
	xor.b64  	%rd2089, %rd2088, %rd2022;
	add.s64 	%rd2090, %rd1998, %rd1765;
	add.s64 	%rd2091, %rd2090, %rd83;
	add.s64 	%rd2092, %rd2091, %rd2089;
	add.s64 	%rd2093, %rd2092, %rd2086;
	add.s64 	%rd2094, %rd2093, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2274,%dummy}, %rd2081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2275}, %rd2081;
	}
	shf.r.wrap.b32 	%r2276, %r2275, %r2274, 28;
	shf.r.wrap.b32 	%r2277, %r2274, %r2275, 28;
	mov.b64 	%rd2095, {%r2277, %r2276};
	shf.l.wrap.b32 	%r2278, %r2274, %r2275, 30;
	shf.l.wrap.b32 	%r2279, %r2275, %r2274, 30;
	mov.b64 	%rd2096, {%r2279, %r2278};
	xor.b64  	%rd2097, %rd2096, %rd2095;
	shf.l.wrap.b32 	%r2280, %r2274, %r2275, 25;
	shf.l.wrap.b32 	%r2281, %r2275, %r2274, 25;
	mov.b64 	%rd2098, {%r2281, %r2280};
	xor.b64  	%rd2099, %rd2097, %rd2098;
	xor.b64  	%rd2100, %rd2081, %rd2033;
	xor.b64  	%rd2101, %rd2081, %rd2057;
	and.b64  	%rd2102, %rd2101, %rd2100;
	xor.b64  	%rd2103, %rd2102, %rd2081;
	add.s64 	%rd2104, %rd2093, %rd2103;
	add.s64 	%rd2105, %rd2104, %rd2099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2282,%dummy}, %rd2094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2283}, %rd2094;
	}
	shf.r.wrap.b32 	%r2284, %r2283, %r2282, 14;
	shf.r.wrap.b32 	%r2285, %r2282, %r2283, 14;
	mov.b64 	%rd2106, {%r2285, %r2284};
	shf.r.wrap.b32 	%r2286, %r2283, %r2282, 18;
	shf.r.wrap.b32 	%r2287, %r2282, %r2283, 18;
	mov.b64 	%rd2107, {%r2287, %r2286};
	xor.b64  	%rd2108, %rd2107, %rd2106;
	shf.l.wrap.b32 	%r2288, %r2282, %r2283, 23;
	shf.l.wrap.b32 	%r2289, %r2283, %r2282, 23;
	mov.b64 	%rd2109, {%r2289, %r2288};
	xor.b64  	%rd2110, %rd2108, %rd2109;
	xor.b64  	%rd2111, %rd2070, %rd2046;
	and.b64  	%rd2112, %rd2094, %rd2111;
	xor.b64  	%rd2113, %rd2112, %rd2046;
	add.s64 	%rd2114, %rd2022, %rd1778;
	add.s64 	%rd2115, %rd2114, %rd84;
	add.s64 	%rd2116, %rd2115, %rd2113;
	add.s64 	%rd2117, %rd2116, %rd2110;
	add.s64 	%rd2118, %rd2117, %rd2033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2290,%dummy}, %rd2105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2291}, %rd2105;
	}
	shf.r.wrap.b32 	%r2292, %r2291, %r2290, 28;
	shf.r.wrap.b32 	%r2293, %r2290, %r2291, 28;
	mov.b64 	%rd2119, {%r2293, %r2292};
	shf.l.wrap.b32 	%r2294, %r2290, %r2291, 30;
	shf.l.wrap.b32 	%r2295, %r2291, %r2290, 30;
	mov.b64 	%rd2120, {%r2295, %r2294};
	xor.b64  	%rd2121, %rd2120, %rd2119;
	shf.l.wrap.b32 	%r2296, %r2290, %r2291, 25;
	shf.l.wrap.b32 	%r2297, %r2291, %r2290, 25;
	mov.b64 	%rd2122, {%r2297, %r2296};
	xor.b64  	%rd2123, %rd2121, %rd2122;
	xor.b64  	%rd2124, %rd2105, %rd2057;
	xor.b64  	%rd2125, %rd2105, %rd2081;
	and.b64  	%rd2126, %rd2125, %rd2124;
	xor.b64  	%rd2127, %rd2126, %rd2105;
	add.s64 	%rd2128, %rd2117, %rd2127;
	add.s64 	%rd2129, %rd2128, %rd2123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2298,%dummy}, %rd2118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2299}, %rd2118;
	}
	shf.r.wrap.b32 	%r2300, %r2299, %r2298, 14;
	shf.r.wrap.b32 	%r2301, %r2298, %r2299, 14;
	mov.b64 	%rd2130, {%r2301, %r2300};
	shf.r.wrap.b32 	%r2302, %r2299, %r2298, 18;
	shf.r.wrap.b32 	%r2303, %r2298, %r2299, 18;
	mov.b64 	%rd2131, {%r2303, %r2302};
	xor.b64  	%rd2132, %rd2131, %rd2130;
	shf.l.wrap.b32 	%r2304, %r2298, %r2299, 23;
	shf.l.wrap.b32 	%r2305, %r2299, %r2298, 23;
	mov.b64 	%rd2133, {%r2305, %r2304};
	xor.b64  	%rd2134, %rd2132, %rd2133;
	xor.b64  	%rd2135, %rd2094, %rd2070;
	and.b64  	%rd2136, %rd2118, %rd2135;
	xor.b64  	%rd2137, %rd2136, %rd2070;
	add.s64 	%rd2138, %rd2046, %rd1791;
	add.s64 	%rd2139, %rd2138, %rd85;
	add.s64 	%rd2140, %rd2139, %rd2137;
	add.s64 	%rd2141, %rd2140, %rd2134;
	add.s64 	%rd2142, %rd2141, %rd2057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2306,%dummy}, %rd2129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2307}, %rd2129;
	}
	shf.r.wrap.b32 	%r2308, %r2307, %r2306, 28;
	shf.r.wrap.b32 	%r2309, %r2306, %r2307, 28;
	mov.b64 	%rd2143, {%r2309, %r2308};
	shf.l.wrap.b32 	%r2310, %r2306, %r2307, 30;
	shf.l.wrap.b32 	%r2311, %r2307, %r2306, 30;
	mov.b64 	%rd2144, {%r2311, %r2310};
	xor.b64  	%rd2145, %rd2144, %rd2143;
	shf.l.wrap.b32 	%r2312, %r2306, %r2307, 25;
	shf.l.wrap.b32 	%r2313, %r2307, %r2306, 25;
	mov.b64 	%rd2146, {%r2313, %r2312};
	xor.b64  	%rd2147, %rd2145, %rd2146;
	xor.b64  	%rd2148, %rd2129, %rd2081;
	xor.b64  	%rd2149, %rd2129, %rd2105;
	and.b64  	%rd2150, %rd2149, %rd2148;
	xor.b64  	%rd2151, %rd2150, %rd2129;
	add.s64 	%rd2152, %rd2141, %rd2151;
	add.s64 	%rd2153, %rd2152, %rd2147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2314,%dummy}, %rd2142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2315}, %rd2142;
	}
	shf.r.wrap.b32 	%r2316, %r2315, %r2314, 14;
	shf.r.wrap.b32 	%r2317, %r2314, %r2315, 14;
	mov.b64 	%rd2154, {%r2317, %r2316};
	shf.r.wrap.b32 	%r2318, %r2315, %r2314, 18;
	shf.r.wrap.b32 	%r2319, %r2314, %r2315, 18;
	mov.b64 	%rd2155, {%r2319, %r2318};
	xor.b64  	%rd2156, %rd2155, %rd2154;
	shf.l.wrap.b32 	%r2320, %r2314, %r2315, 23;
	shf.l.wrap.b32 	%r2321, %r2315, %r2314, 23;
	mov.b64 	%rd2157, {%r2321, %r2320};
	xor.b64  	%rd2158, %rd2156, %rd2157;
	xor.b64  	%rd2159, %rd2118, %rd2094;
	and.b64  	%rd2160, %rd2142, %rd2159;
	xor.b64  	%rd2161, %rd2160, %rd2094;
	add.s64 	%rd2162, %rd2070, %rd1804;
	add.s64 	%rd2163, %rd2162, %rd86;
	add.s64 	%rd2164, %rd2163, %rd2161;
	add.s64 	%rd2165, %rd2164, %rd2158;
	add.s64 	%rd2166, %rd2165, %rd2081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2322,%dummy}, %rd2153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2323}, %rd2153;
	}
	shf.r.wrap.b32 	%r2324, %r2323, %r2322, 28;
	shf.r.wrap.b32 	%r2325, %r2322, %r2323, 28;
	mov.b64 	%rd2167, {%r2325, %r2324};
	shf.l.wrap.b32 	%r2326, %r2322, %r2323, 30;
	shf.l.wrap.b32 	%r2327, %r2323, %r2322, 30;
	mov.b64 	%rd2168, {%r2327, %r2326};
	xor.b64  	%rd2169, %rd2168, %rd2167;
	shf.l.wrap.b32 	%r2328, %r2322, %r2323, 25;
	shf.l.wrap.b32 	%r2329, %r2323, %r2322, 25;
	mov.b64 	%rd2170, {%r2329, %r2328};
	xor.b64  	%rd2171, %rd2169, %rd2170;
	xor.b64  	%rd2172, %rd2153, %rd2105;
	xor.b64  	%rd2173, %rd2153, %rd2129;
	and.b64  	%rd2174, %rd2173, %rd2172;
	xor.b64  	%rd2175, %rd2174, %rd2153;
	add.s64 	%rd2176, %rd2165, %rd2175;
	add.s64 	%rd2177, %rd2176, %rd2171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2330,%dummy}, %rd2166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2331}, %rd2166;
	}
	shf.r.wrap.b32 	%r2332, %r2331, %r2330, 14;
	shf.r.wrap.b32 	%r2333, %r2330, %r2331, 14;
	mov.b64 	%rd2178, {%r2333, %r2332};
	shf.r.wrap.b32 	%r2334, %r2331, %r2330, 18;
	shf.r.wrap.b32 	%r2335, %r2330, %r2331, 18;
	mov.b64 	%rd2179, {%r2335, %r2334};
	xor.b64  	%rd2180, %rd2179, %rd2178;
	shf.l.wrap.b32 	%r2336, %r2330, %r2331, 23;
	shf.l.wrap.b32 	%r2337, %r2331, %r2330, 23;
	mov.b64 	%rd2181, {%r2337, %r2336};
	xor.b64  	%rd2182, %rd2180, %rd2181;
	xor.b64  	%rd2183, %rd2142, %rd2118;
	and.b64  	%rd2184, %rd2166, %rd2183;
	xor.b64  	%rd2185, %rd2184, %rd2118;
	add.s64 	%rd2186, %rd2094, %rd1817;
	add.s64 	%rd2187, %rd2186, %rd87;
	add.s64 	%rd2188, %rd2187, %rd2185;
	add.s64 	%rd2189, %rd2188, %rd2182;
	add.s64 	%rd2190, %rd2189, %rd2105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2338,%dummy}, %rd2177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2339}, %rd2177;
	}
	shf.r.wrap.b32 	%r2340, %r2339, %r2338, 28;
	shf.r.wrap.b32 	%r2341, %r2338, %r2339, 28;
	mov.b64 	%rd2191, {%r2341, %r2340};
	shf.l.wrap.b32 	%r2342, %r2338, %r2339, 30;
	shf.l.wrap.b32 	%r2343, %r2339, %r2338, 30;
	mov.b64 	%rd2192, {%r2343, %r2342};
	xor.b64  	%rd2193, %rd2192, %rd2191;
	shf.l.wrap.b32 	%r2344, %r2338, %r2339, 25;
	shf.l.wrap.b32 	%r2345, %r2339, %r2338, 25;
	mov.b64 	%rd2194, {%r2345, %r2344};
	xor.b64  	%rd2195, %rd2193, %rd2194;
	xor.b64  	%rd2196, %rd2177, %rd2129;
	xor.b64  	%rd2197, %rd2177, %rd2153;
	and.b64  	%rd2198, %rd2197, %rd2196;
	xor.b64  	%rd2199, %rd2198, %rd2177;
	add.s64 	%rd2200, %rd2189, %rd2199;
	add.s64 	%rd2201, %rd2200, %rd2195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2346,%dummy}, %rd1804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2347}, %rd1804;
	}
	shf.r.wrap.b32 	%r2348, %r2347, %r2346, 19;
	shf.r.wrap.b32 	%r2349, %r2346, %r2347, 19;
	mov.b64 	%rd2202, {%r2349, %r2348};
	shf.l.wrap.b32 	%r2350, %r2346, %r2347, 3;
	shf.l.wrap.b32 	%r2351, %r2347, %r2346, 3;
	mov.b64 	%rd2203, {%r2351, %r2350};
	shr.u64 	%rd2204, %rd1804, 6;
	xor.b64  	%rd2205, %rd2202, %rd2204;
	xor.b64  	%rd2206, %rd2205, %rd2203;
	shf.r.wrap.b32 	%r2352, %r1961, %r1960, 1;
	shf.r.wrap.b32 	%r2353, %r1960, %r1961, 1;
	mov.b64 	%rd2207, {%r2353, %r2352};
	shf.r.wrap.b32 	%r2354, %r1961, %r1960, 8;
	shf.r.wrap.b32 	%r2355, %r1960, %r1961, 8;
	mov.b64 	%rd2208, {%r2355, %r2354};
	shr.u64 	%rd2209, %rd1635, 7;
	xor.b64  	%rd2210, %rd2207, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2208;
	add.s64 	%rd2212, %rd1622, %rd1739;
	add.s64 	%rd2213, %rd2212, %rd2206;
	add.s64 	%rd2214, %rd2213, %rd2211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2356,%dummy}, %rd1817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2357}, %rd1817;
	}
	shf.r.wrap.b32 	%r2358, %r2357, %r2356, 19;
	shf.r.wrap.b32 	%r2359, %r2356, %r2357, 19;
	mov.b64 	%rd2215, {%r2359, %r2358};
	shf.l.wrap.b32 	%r2360, %r2356, %r2357, 3;
	shf.l.wrap.b32 	%r2361, %r2357, %r2356, 3;
	mov.b64 	%rd2216, {%r2361, %r2360};
	shr.u64 	%rd2217, %rd1817, 6;
	xor.b64  	%rd2218, %rd2215, %rd2217;
	xor.b64  	%rd2219, %rd2218, %rd2216;
	shf.r.wrap.b32 	%r2362, %r1971, %r1970, 1;
	shf.r.wrap.b32 	%r2363, %r1970, %r1971, 1;
	mov.b64 	%rd2220, {%r2363, %r2362};
	shf.r.wrap.b32 	%r2364, %r1971, %r1970, 8;
	shf.r.wrap.b32 	%r2365, %r1970, %r1971, 8;
	mov.b64 	%rd2221, {%r2365, %r2364};
	shr.u64 	%rd2222, %rd1648, 7;
	xor.b64  	%rd2223, %rd2220, %rd2222;
	xor.b64  	%rd2224, %rd2223, %rd2221;
	add.s64 	%rd2225, %rd1635, %rd1752;
	add.s64 	%rd2226, %rd2225, %rd2219;
	add.s64 	%rd2227, %rd2226, %rd2224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2366,%dummy}, %rd2214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2367}, %rd2214;
	}
	shf.r.wrap.b32 	%r2368, %r2367, %r2366, 19;
	shf.r.wrap.b32 	%r2369, %r2366, %r2367, 19;
	mov.b64 	%rd2228, {%r2369, %r2368};
	shf.l.wrap.b32 	%r2370, %r2366, %r2367, 3;
	shf.l.wrap.b32 	%r2371, %r2367, %r2366, 3;
	mov.b64 	%rd2229, {%r2371, %r2370};
	shr.u64 	%rd2230, %rd2214, 6;
	xor.b64  	%rd2231, %rd2228, %rd2230;
	xor.b64  	%rd2232, %rd2231, %rd2229;
	shf.r.wrap.b32 	%r2372, %r1981, %r1980, 1;
	shf.r.wrap.b32 	%r2373, %r1980, %r1981, 1;
	mov.b64 	%rd2233, {%r2373, %r2372};
	shf.r.wrap.b32 	%r2374, %r1981, %r1980, 8;
	shf.r.wrap.b32 	%r2375, %r1980, %r1981, 8;
	mov.b64 	%rd2234, {%r2375, %r2374};
	shr.u64 	%rd2235, %rd1661, 7;
	xor.b64  	%rd2236, %rd2233, %rd2235;
	xor.b64  	%rd2237, %rd2236, %rd2234;
	add.s64 	%rd2238, %rd1648, %rd1765;
	add.s64 	%rd2239, %rd2238, %rd2232;
	add.s64 	%rd2240, %rd2239, %rd2237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2376,%dummy}, %rd2227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2377}, %rd2227;
	}
	shf.r.wrap.b32 	%r2378, %r2377, %r2376, 19;
	shf.r.wrap.b32 	%r2379, %r2376, %r2377, 19;
	mov.b64 	%rd2241, {%r2379, %r2378};
	shf.l.wrap.b32 	%r2380, %r2376, %r2377, 3;
	shf.l.wrap.b32 	%r2381, %r2377, %r2376, 3;
	mov.b64 	%rd2242, {%r2381, %r2380};
	shr.u64 	%rd2243, %rd2227, 6;
	xor.b64  	%rd2244, %rd2241, %rd2243;
	xor.b64  	%rd2245, %rd2244, %rd2242;
	shf.r.wrap.b32 	%r2382, %r1991, %r1990, 1;
	shf.r.wrap.b32 	%r2383, %r1990, %r1991, 1;
	mov.b64 	%rd2246, {%r2383, %r2382};
	shf.r.wrap.b32 	%r2384, %r1991, %r1990, 8;
	shf.r.wrap.b32 	%r2385, %r1990, %r1991, 8;
	mov.b64 	%rd2247, {%r2385, %r2384};
	shr.u64 	%rd2248, %rd1674, 7;
	xor.b64  	%rd2249, %rd2246, %rd2248;
	xor.b64  	%rd2250, %rd2249, %rd2247;
	add.s64 	%rd2251, %rd1661, %rd1778;
	add.s64 	%rd2252, %rd2251, %rd2245;
	add.s64 	%rd2253, %rd2252, %rd2250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2386,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2387}, %rd2240;
	}
	shf.r.wrap.b32 	%r2388, %r2387, %r2386, 19;
	shf.r.wrap.b32 	%r2389, %r2386, %r2387, 19;
	mov.b64 	%rd2254, {%r2389, %r2388};
	shf.l.wrap.b32 	%r2390, %r2386, %r2387, 3;
	shf.l.wrap.b32 	%r2391, %r2387, %r2386, 3;
	mov.b64 	%rd2255, {%r2391, %r2390};
	shr.u64 	%rd2256, %rd2240, 6;
	xor.b64  	%rd2257, %rd2254, %rd2256;
	xor.b64  	%rd2258, %rd2257, %rd2255;
	shf.r.wrap.b32 	%r2392, %r2001, %r2000, 1;
	shf.r.wrap.b32 	%r2393, %r2000, %r2001, 1;
	mov.b64 	%rd2259, {%r2393, %r2392};
	shf.r.wrap.b32 	%r2394, %r2001, %r2000, 8;
	shf.r.wrap.b32 	%r2395, %r2000, %r2001, 8;
	mov.b64 	%rd2260, {%r2395, %r2394};
	shr.u64 	%rd2261, %rd1687, 7;
	xor.b64  	%rd2262, %rd2259, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd2260;
	add.s64 	%rd2264, %rd1674, %rd1791;
	add.s64 	%rd2265, %rd2264, %rd2258;
	add.s64 	%rd2266, %rd2265, %rd2263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2396,%dummy}, %rd2253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2397}, %rd2253;
	}
	shf.r.wrap.b32 	%r2398, %r2397, %r2396, 19;
	shf.r.wrap.b32 	%r2399, %r2396, %r2397, 19;
	mov.b64 	%rd2267, {%r2399, %r2398};
	shf.l.wrap.b32 	%r2400, %r2396, %r2397, 3;
	shf.l.wrap.b32 	%r2401, %r2397, %r2396, 3;
	mov.b64 	%rd2268, {%r2401, %r2400};
	shr.u64 	%rd2269, %rd2253, 6;
	xor.b64  	%rd2270, %rd2267, %rd2269;
	xor.b64  	%rd2271, %rd2270, %rd2268;
	shf.r.wrap.b32 	%r2402, %r2011, %r2010, 1;
	shf.r.wrap.b32 	%r2403, %r2010, %r2011, 1;
	mov.b64 	%rd2272, {%r2403, %r2402};
	shf.r.wrap.b32 	%r2404, %r2011, %r2010, 8;
	shf.r.wrap.b32 	%r2405, %r2010, %r2011, 8;
	mov.b64 	%rd2273, {%r2405, %r2404};
	shr.u64 	%rd2274, %rd1700, 7;
	xor.b64  	%rd2275, %rd2272, %rd2274;
	xor.b64  	%rd2276, %rd2275, %rd2273;
	add.s64 	%rd2277, %rd1687, %rd1804;
	add.s64 	%rd2278, %rd2277, %rd2271;
	add.s64 	%rd2279, %rd2278, %rd2276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2406,%dummy}, %rd2266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2407}, %rd2266;
	}
	shf.r.wrap.b32 	%r2408, %r2407, %r2406, 19;
	shf.r.wrap.b32 	%r2409, %r2406, %r2407, 19;
	mov.b64 	%rd2280, {%r2409, %r2408};
	shf.l.wrap.b32 	%r2410, %r2406, %r2407, 3;
	shf.l.wrap.b32 	%r2411, %r2407, %r2406, 3;
	mov.b64 	%rd2281, {%r2411, %r2410};
	shr.u64 	%rd2282, %rd2266, 6;
	xor.b64  	%rd2283, %rd2280, %rd2282;
	xor.b64  	%rd2284, %rd2283, %rd2281;
	shf.r.wrap.b32 	%r2412, %r2021, %r2020, 1;
	shf.r.wrap.b32 	%r2413, %r2020, %r2021, 1;
	mov.b64 	%rd2285, {%r2413, %r2412};
	shf.r.wrap.b32 	%r2414, %r2021, %r2020, 8;
	shf.r.wrap.b32 	%r2415, %r2020, %r2021, 8;
	mov.b64 	%rd2286, {%r2415, %r2414};
	shr.u64 	%rd2287, %rd1713, 7;
	xor.b64  	%rd2288, %rd2285, %rd2287;
	xor.b64  	%rd2289, %rd2288, %rd2286;
	add.s64 	%rd2290, %rd1700, %rd1817;
	add.s64 	%rd2291, %rd2290, %rd2284;
	add.s64 	%rd2292, %rd2291, %rd2289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2416,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2417}, %rd2279;
	}
	shf.r.wrap.b32 	%r2418, %r2417, %r2416, 19;
	shf.r.wrap.b32 	%r2419, %r2416, %r2417, 19;
	mov.b64 	%rd2293, {%r2419, %r2418};
	shf.l.wrap.b32 	%r2420, %r2416, %r2417, 3;
	shf.l.wrap.b32 	%r2421, %r2417, %r2416, 3;
	mov.b64 	%rd2294, {%r2421, %r2420};
	shr.u64 	%rd2295, %rd2279, 6;
	xor.b64  	%rd2296, %rd2293, %rd2295;
	xor.b64  	%rd2297, %rd2296, %rd2294;
	shf.r.wrap.b32 	%r2422, %r2031, %r2030, 1;
	shf.r.wrap.b32 	%r2423, %r2030, %r2031, 1;
	mov.b64 	%rd2298, {%r2423, %r2422};
	shf.r.wrap.b32 	%r2424, %r2031, %r2030, 8;
	shf.r.wrap.b32 	%r2425, %r2030, %r2031, 8;
	mov.b64 	%rd2299, {%r2425, %r2424};
	shr.u64 	%rd2300, %rd1726, 7;
	xor.b64  	%rd2301, %rd2298, %rd2300;
	xor.b64  	%rd2302, %rd2301, %rd2299;
	add.s64 	%rd2303, %rd2214, %rd1713;
	add.s64 	%rd2304, %rd2303, %rd2297;
	add.s64 	%rd2305, %rd2304, %rd2302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2426,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2427}, %rd2292;
	}
	shf.r.wrap.b32 	%r2428, %r2427, %r2426, 19;
	shf.r.wrap.b32 	%r2429, %r2426, %r2427, 19;
	mov.b64 	%rd2306, {%r2429, %r2428};
	shf.l.wrap.b32 	%r2430, %r2426, %r2427, 3;
	shf.l.wrap.b32 	%r2431, %r2427, %r2426, 3;
	mov.b64 	%rd2307, {%r2431, %r2430};
	shr.u64 	%rd2308, %rd2292, 6;
	xor.b64  	%rd2309, %rd2306, %rd2308;
	xor.b64  	%rd2310, %rd2309, %rd2307;
	shf.r.wrap.b32 	%r2432, %r2041, %r2040, 1;
	shf.r.wrap.b32 	%r2433, %r2040, %r2041, 1;
	mov.b64 	%rd2311, {%r2433, %r2432};
	shf.r.wrap.b32 	%r2434, %r2041, %r2040, 8;
	shf.r.wrap.b32 	%r2435, %r2040, %r2041, 8;
	mov.b64 	%rd2312, {%r2435, %r2434};
	shr.u64 	%rd2313, %rd1739, 7;
	xor.b64  	%rd2314, %rd2311, %rd2313;
	xor.b64  	%rd2315, %rd2314, %rd2312;
	add.s64 	%rd2316, %rd2227, %rd1726;
	add.s64 	%rd2317, %rd2316, %rd2310;
	add.s64 	%rd2318, %rd2317, %rd2315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2436,%dummy}, %rd2305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2437}, %rd2305;
	}
	shf.r.wrap.b32 	%r2438, %r2437, %r2436, 19;
	shf.r.wrap.b32 	%r2439, %r2436, %r2437, 19;
	mov.b64 	%rd2319, {%r2439, %r2438};
	shf.l.wrap.b32 	%r2440, %r2436, %r2437, 3;
	shf.l.wrap.b32 	%r2441, %r2437, %r2436, 3;
	mov.b64 	%rd2320, {%r2441, %r2440};
	shr.u64 	%rd2321, %rd2305, 6;
	xor.b64  	%rd2322, %rd2319, %rd2321;
	xor.b64  	%rd2323, %rd2322, %rd2320;
	shf.r.wrap.b32 	%r2442, %r2051, %r2050, 1;
	shf.r.wrap.b32 	%r2443, %r2050, %r2051, 1;
	mov.b64 	%rd2324, {%r2443, %r2442};
	shf.r.wrap.b32 	%r2444, %r2051, %r2050, 8;
	shf.r.wrap.b32 	%r2445, %r2050, %r2051, 8;
	mov.b64 	%rd2325, {%r2445, %r2444};
	shr.u64 	%rd2326, %rd1752, 7;
	xor.b64  	%rd2327, %rd2324, %rd2326;
	xor.b64  	%rd2328, %rd2327, %rd2325;
	add.s64 	%rd2329, %rd2240, %rd1739;
	add.s64 	%rd2330, %rd2329, %rd2323;
	add.s64 	%rd2331, %rd2330, %rd2328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2446,%dummy}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2447}, %rd2318;
	}
	shf.r.wrap.b32 	%r2448, %r2447, %r2446, 19;
	shf.r.wrap.b32 	%r2449, %r2446, %r2447, 19;
	mov.b64 	%rd2332, {%r2449, %r2448};
	shf.l.wrap.b32 	%r2450, %r2446, %r2447, 3;
	shf.l.wrap.b32 	%r2451, %r2447, %r2446, 3;
	mov.b64 	%rd2333, {%r2451, %r2450};
	shr.u64 	%rd2334, %rd2318, 6;
	xor.b64  	%rd2335, %rd2332, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2333;
	shf.r.wrap.b32 	%r2452, %r2061, %r2060, 1;
	shf.r.wrap.b32 	%r2453, %r2060, %r2061, 1;
	mov.b64 	%rd2337, {%r2453, %r2452};
	shf.r.wrap.b32 	%r2454, %r2061, %r2060, 8;
	shf.r.wrap.b32 	%r2455, %r2060, %r2061, 8;
	mov.b64 	%rd2338, {%r2455, %r2454};
	shr.u64 	%rd2339, %rd1765, 7;
	xor.b64  	%rd2340, %rd2337, %rd2339;
	xor.b64  	%rd2341, %rd2340, %rd2338;
	add.s64 	%rd2342, %rd2253, %rd1752;
	add.s64 	%rd2343, %rd2342, %rd2336;
	add.s64 	%rd2344, %rd2343, %rd2341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2456,%dummy}, %rd2331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2457}, %rd2331;
	}
	shf.r.wrap.b32 	%r2458, %r2457, %r2456, 19;
	shf.r.wrap.b32 	%r2459, %r2456, %r2457, 19;
	mov.b64 	%rd2345, {%r2459, %r2458};
	shf.l.wrap.b32 	%r2460, %r2456, %r2457, 3;
	shf.l.wrap.b32 	%r2461, %r2457, %r2456, 3;
	mov.b64 	%rd2346, {%r2461, %r2460};
	shr.u64 	%rd2347, %rd2331, 6;
	xor.b64  	%rd2348, %rd2345, %rd2347;
	xor.b64  	%rd2349, %rd2348, %rd2346;
	shf.r.wrap.b32 	%r2462, %r2071, %r2070, 1;
	shf.r.wrap.b32 	%r2463, %r2070, %r2071, 1;
	mov.b64 	%rd2350, {%r2463, %r2462};
	shf.r.wrap.b32 	%r2464, %r2071, %r2070, 8;
	shf.r.wrap.b32 	%r2465, %r2070, %r2071, 8;
	mov.b64 	%rd2351, {%r2465, %r2464};
	shr.u64 	%rd2352, %rd1778, 7;
	xor.b64  	%rd2353, %rd2350, %rd2352;
	xor.b64  	%rd2354, %rd2353, %rd2351;
	add.s64 	%rd2355, %rd2266, %rd1765;
	add.s64 	%rd2356, %rd2355, %rd2349;
	add.s64 	%rd2357, %rd2356, %rd2354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2466,%dummy}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2467}, %rd2344;
	}
	shf.r.wrap.b32 	%r2468, %r2467, %r2466, 19;
	shf.r.wrap.b32 	%r2469, %r2466, %r2467, 19;
	mov.b64 	%rd2358, {%r2469, %r2468};
	shf.l.wrap.b32 	%r2470, %r2466, %r2467, 3;
	shf.l.wrap.b32 	%r2471, %r2467, %r2466, 3;
	mov.b64 	%rd2359, {%r2471, %r2470};
	shr.u64 	%rd2360, %rd2344, 6;
	xor.b64  	%rd2361, %rd2358, %rd2360;
	xor.b64  	%rd2362, %rd2361, %rd2359;
	shf.r.wrap.b32 	%r2472, %r2081, %r2080, 1;
	shf.r.wrap.b32 	%r2473, %r2080, %r2081, 1;
	mov.b64 	%rd2363, {%r2473, %r2472};
	shf.r.wrap.b32 	%r2474, %r2081, %r2080, 8;
	shf.r.wrap.b32 	%r2475, %r2080, %r2081, 8;
	mov.b64 	%rd2364, {%r2475, %r2474};
	shr.u64 	%rd2365, %rd1791, 7;
	xor.b64  	%rd2366, %rd2363, %rd2365;
	xor.b64  	%rd2367, %rd2366, %rd2364;
	add.s64 	%rd2368, %rd2279, %rd1778;
	add.s64 	%rd2369, %rd2368, %rd2362;
	add.s64 	%rd2370, %rd2369, %rd2367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2476,%dummy}, %rd2190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2477}, %rd2190;
	}
	shf.r.wrap.b32 	%r2478, %r2477, %r2476, 14;
	shf.r.wrap.b32 	%r2479, %r2476, %r2477, 14;
	mov.b64 	%rd2371, {%r2479, %r2478};
	shf.r.wrap.b32 	%r2480, %r2477, %r2476, 18;
	shf.r.wrap.b32 	%r2481, %r2476, %r2477, 18;
	mov.b64 	%rd2372, {%r2481, %r2480};
	xor.b64  	%rd2373, %rd2372, %rd2371;
	shf.l.wrap.b32 	%r2482, %r2476, %r2477, 23;
	shf.l.wrap.b32 	%r2483, %r2477, %r2476, 23;
	mov.b64 	%rd2374, {%r2483, %r2482};
	xor.b64  	%rd2375, %rd2373, %rd2374;
	xor.b64  	%rd2376, %rd2142, %rd2166;
	and.b64  	%rd2377, %rd2376, %rd2190;
	xor.b64  	%rd2378, %rd2377, %rd2142;
	add.s64 	%rd2379, %rd2378, %rd2118;
	add.s64 	%rd2380, %rd2379, %rd2214;
	add.s64 	%rd2381, %rd2380, %rd88;
	add.s64 	%rd2382, %rd2381, %rd2375;
	add.s64 	%rd2383, %rd2382, %rd2129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2484,%dummy}, %rd2201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2485}, %rd2201;
	}
	shf.r.wrap.b32 	%r2486, %r2485, %r2484, 28;
	shf.r.wrap.b32 	%r2487, %r2484, %r2485, 28;
	mov.b64 	%rd2384, {%r2487, %r2486};
	shf.l.wrap.b32 	%r2488, %r2484, %r2485, 30;
	shf.l.wrap.b32 	%r2489, %r2485, %r2484, 30;
	mov.b64 	%rd2385, {%r2489, %r2488};
	xor.b64  	%rd2386, %rd2385, %rd2384;
	shf.l.wrap.b32 	%r2490, %r2484, %r2485, 25;
	shf.l.wrap.b32 	%r2491, %r2485, %r2484, 25;
	mov.b64 	%rd2387, {%r2491, %r2490};
	xor.b64  	%rd2388, %rd2386, %rd2387;
	xor.b64  	%rd2389, %rd2201, %rd2153;
	xor.b64  	%rd2390, %rd2201, %rd2177;
	and.b64  	%rd2391, %rd2390, %rd2389;
	xor.b64  	%rd2392, %rd2391, %rd2201;
	add.s64 	%rd2393, %rd2382, %rd2392;
	add.s64 	%rd2394, %rd2393, %rd2388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2492,%dummy}, %rd2383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2493}, %rd2383;
	}
	shf.r.wrap.b32 	%r2494, %r2493, %r2492, 14;
	shf.r.wrap.b32 	%r2495, %r2492, %r2493, 14;
	mov.b64 	%rd2395, {%r2495, %r2494};
	shf.r.wrap.b32 	%r2496, %r2493, %r2492, 18;
	shf.r.wrap.b32 	%r2497, %r2492, %r2493, 18;
	mov.b64 	%rd2396, {%r2497, %r2496};
	xor.b64  	%rd2397, %rd2396, %rd2395;
	shf.l.wrap.b32 	%r2498, %r2492, %r2493, 23;
	shf.l.wrap.b32 	%r2499, %r2493, %r2492, 23;
	mov.b64 	%rd2398, {%r2499, %r2498};
	xor.b64  	%rd2399, %rd2397, %rd2398;
	xor.b64  	%rd2400, %rd2166, %rd2190;
	and.b64  	%rd2401, %rd2383, %rd2400;
	xor.b64  	%rd2402, %rd2401, %rd2166;
	add.s64 	%rd2403, %rd2227, %rd2142;
	add.s64 	%rd2404, %rd2403, %rd89;
	add.s64 	%rd2405, %rd2404, %rd2402;
	add.s64 	%rd2406, %rd2405, %rd2399;
	add.s64 	%rd2407, %rd2406, %rd2153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2500,%dummy}, %rd2394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2501}, %rd2394;
	}
	shf.r.wrap.b32 	%r2502, %r2501, %r2500, 28;
	shf.r.wrap.b32 	%r2503, %r2500, %r2501, 28;
	mov.b64 	%rd2408, {%r2503, %r2502};
	shf.l.wrap.b32 	%r2504, %r2500, %r2501, 30;
	shf.l.wrap.b32 	%r2505, %r2501, %r2500, 30;
	mov.b64 	%rd2409, {%r2505, %r2504};
	xor.b64  	%rd2410, %rd2409, %rd2408;
	shf.l.wrap.b32 	%r2506, %r2500, %r2501, 25;
	shf.l.wrap.b32 	%r2507, %r2501, %r2500, 25;
	mov.b64 	%rd2411, {%r2507, %r2506};
	xor.b64  	%rd2412, %rd2410, %rd2411;
	xor.b64  	%rd2413, %rd2394, %rd2177;
	xor.b64  	%rd2414, %rd2394, %rd2201;
	and.b64  	%rd2415, %rd2414, %rd2413;
	xor.b64  	%rd2416, %rd2415, %rd2394;
	add.s64 	%rd2417, %rd2406, %rd2416;
	add.s64 	%rd2418, %rd2417, %rd2412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2508,%dummy}, %rd2407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2509}, %rd2407;
	}
	shf.r.wrap.b32 	%r2510, %r2509, %r2508, 14;
	shf.r.wrap.b32 	%r2511, %r2508, %r2509, 14;
	mov.b64 	%rd2419, {%r2511, %r2510};
	shf.r.wrap.b32 	%r2512, %r2509, %r2508, 18;
	shf.r.wrap.b32 	%r2513, %r2508, %r2509, 18;
	mov.b64 	%rd2420, {%r2513, %r2512};
	xor.b64  	%rd2421, %rd2420, %rd2419;
	shf.l.wrap.b32 	%r2514, %r2508, %r2509, 23;
	shf.l.wrap.b32 	%r2515, %r2509, %r2508, 23;
	mov.b64 	%rd2422, {%r2515, %r2514};
	xor.b64  	%rd2423, %rd2421, %rd2422;
	xor.b64  	%rd2424, %rd2383, %rd2190;
	and.b64  	%rd2425, %rd2407, %rd2424;
	xor.b64  	%rd2426, %rd2425, %rd2190;
	add.s64 	%rd2427, %rd2240, %rd2166;
	add.s64 	%rd2428, %rd2427, %rd90;
	add.s64 	%rd2429, %rd2428, %rd2426;
	add.s64 	%rd2430, %rd2429, %rd2423;
	add.s64 	%rd2431, %rd2430, %rd2177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2516,%dummy}, %rd2418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2517}, %rd2418;
	}
	shf.r.wrap.b32 	%r2518, %r2517, %r2516, 28;
	shf.r.wrap.b32 	%r2519, %r2516, %r2517, 28;
	mov.b64 	%rd2432, {%r2519, %r2518};
	shf.l.wrap.b32 	%r2520, %r2516, %r2517, 30;
	shf.l.wrap.b32 	%r2521, %r2517, %r2516, 30;
	mov.b64 	%rd2433, {%r2521, %r2520};
	xor.b64  	%rd2434, %rd2433, %rd2432;
	shf.l.wrap.b32 	%r2522, %r2516, %r2517, 25;
	shf.l.wrap.b32 	%r2523, %r2517, %r2516, 25;
	mov.b64 	%rd2435, {%r2523, %r2522};
	xor.b64  	%rd2436, %rd2434, %rd2435;
	xor.b64  	%rd2437, %rd2418, %rd2201;
	xor.b64  	%rd2438, %rd2418, %rd2394;
	and.b64  	%rd2439, %rd2438, %rd2437;
	xor.b64  	%rd2440, %rd2439, %rd2418;
	add.s64 	%rd2441, %rd2430, %rd2440;
	add.s64 	%rd2442, %rd2441, %rd2436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2524,%dummy}, %rd2431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2525}, %rd2431;
	}
	shf.r.wrap.b32 	%r2526, %r2525, %r2524, 14;
	shf.r.wrap.b32 	%r2527, %r2524, %r2525, 14;
	mov.b64 	%rd2443, {%r2527, %r2526};
	shf.r.wrap.b32 	%r2528, %r2525, %r2524, 18;
	shf.r.wrap.b32 	%r2529, %r2524, %r2525, 18;
	mov.b64 	%rd2444, {%r2529, %r2528};
	xor.b64  	%rd2445, %rd2444, %rd2443;
	shf.l.wrap.b32 	%r2530, %r2524, %r2525, 23;
	shf.l.wrap.b32 	%r2531, %r2525, %r2524, 23;
	mov.b64 	%rd2446, {%r2531, %r2530};
	xor.b64  	%rd2447, %rd2445, %rd2446;
	xor.b64  	%rd2448, %rd2407, %rd2383;
	and.b64  	%rd2449, %rd2431, %rd2448;
	xor.b64  	%rd2450, %rd2449, %rd2383;
	add.s64 	%rd2451, %rd2253, %rd2190;
	add.s64 	%rd2452, %rd2451, %rd91;
	add.s64 	%rd2453, %rd2452, %rd2450;
	add.s64 	%rd2454, %rd2453, %rd2447;
	add.s64 	%rd2455, %rd2454, %rd2201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2532,%dummy}, %rd2442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2533}, %rd2442;
	}
	shf.r.wrap.b32 	%r2534, %r2533, %r2532, 28;
	shf.r.wrap.b32 	%r2535, %r2532, %r2533, 28;
	mov.b64 	%rd2456, {%r2535, %r2534};
	shf.l.wrap.b32 	%r2536, %r2532, %r2533, 30;
	shf.l.wrap.b32 	%r2537, %r2533, %r2532, 30;
	mov.b64 	%rd2457, {%r2537, %r2536};
	xor.b64  	%rd2458, %rd2457, %rd2456;
	shf.l.wrap.b32 	%r2538, %r2532, %r2533, 25;
	shf.l.wrap.b32 	%r2539, %r2533, %r2532, 25;
	mov.b64 	%rd2459, {%r2539, %r2538};
	xor.b64  	%rd2460, %rd2458, %rd2459;
	xor.b64  	%rd2461, %rd2442, %rd2394;
	xor.b64  	%rd2462, %rd2442, %rd2418;
	and.b64  	%rd2463, %rd2462, %rd2461;
	xor.b64  	%rd2464, %rd2463, %rd2442;
	add.s64 	%rd2465, %rd2454, %rd2464;
	add.s64 	%rd2466, %rd2465, %rd2460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2540,%dummy}, %rd2455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2541}, %rd2455;
	}
	shf.r.wrap.b32 	%r2542, %r2541, %r2540, 14;
	shf.r.wrap.b32 	%r2543, %r2540, %r2541, 14;
	mov.b64 	%rd2467, {%r2543, %r2542};
	shf.r.wrap.b32 	%r2544, %r2541, %r2540, 18;
	shf.r.wrap.b32 	%r2545, %r2540, %r2541, 18;
	mov.b64 	%rd2468, {%r2545, %r2544};
	xor.b64  	%rd2469, %rd2468, %rd2467;
	shf.l.wrap.b32 	%r2546, %r2540, %r2541, 23;
	shf.l.wrap.b32 	%r2547, %r2541, %r2540, 23;
	mov.b64 	%rd2470, {%r2547, %r2546};
	xor.b64  	%rd2471, %rd2469, %rd2470;
	xor.b64  	%rd2472, %rd2431, %rd2407;
	and.b64  	%rd2473, %rd2455, %rd2472;
	xor.b64  	%rd2474, %rd2473, %rd2407;
	add.s64 	%rd2475, %rd2383, %rd2266;
	add.s64 	%rd2476, %rd2475, %rd92;
	add.s64 	%rd2477, %rd2476, %rd2474;
	add.s64 	%rd2478, %rd2477, %rd2471;
	add.s64 	%rd2479, %rd2478, %rd2394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2548,%dummy}, %rd2466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2549}, %rd2466;
	}
	shf.r.wrap.b32 	%r2550, %r2549, %r2548, 28;
	shf.r.wrap.b32 	%r2551, %r2548, %r2549, 28;
	mov.b64 	%rd2480, {%r2551, %r2550};
	shf.l.wrap.b32 	%r2552, %r2548, %r2549, 30;
	shf.l.wrap.b32 	%r2553, %r2549, %r2548, 30;
	mov.b64 	%rd2481, {%r2553, %r2552};
	xor.b64  	%rd2482, %rd2481, %rd2480;
	shf.l.wrap.b32 	%r2554, %r2548, %r2549, 25;
	shf.l.wrap.b32 	%r2555, %r2549, %r2548, 25;
	mov.b64 	%rd2483, {%r2555, %r2554};
	xor.b64  	%rd2484, %rd2482, %rd2483;
	xor.b64  	%rd2485, %rd2466, %rd2418;
	xor.b64  	%rd2486, %rd2466, %rd2442;
	and.b64  	%rd2487, %rd2486, %rd2485;
	xor.b64  	%rd2488, %rd2487, %rd2466;
	add.s64 	%rd2489, %rd2478, %rd2488;
	add.s64 	%rd2490, %rd2489, %rd2484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2556,%dummy}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2557}, %rd2479;
	}
	shf.r.wrap.b32 	%r2558, %r2557, %r2556, 14;
	shf.r.wrap.b32 	%r2559, %r2556, %r2557, 14;
	mov.b64 	%rd2491, {%r2559, %r2558};
	shf.r.wrap.b32 	%r2560, %r2557, %r2556, 18;
	shf.r.wrap.b32 	%r2561, %r2556, %r2557, 18;
	mov.b64 	%rd2492, {%r2561, %r2560};
	xor.b64  	%rd2493, %rd2492, %rd2491;
	shf.l.wrap.b32 	%r2562, %r2556, %r2557, 23;
	shf.l.wrap.b32 	%r2563, %r2557, %r2556, 23;
	mov.b64 	%rd2494, {%r2563, %r2562};
	xor.b64  	%rd2495, %rd2493, %rd2494;
	xor.b64  	%rd2496, %rd2455, %rd2431;
	and.b64  	%rd2497, %rd2479, %rd2496;
	xor.b64  	%rd2498, %rd2497, %rd2431;
	add.s64 	%rd2499, %rd2407, %rd2279;
	add.s64 	%rd2500, %rd2499, %rd93;
	add.s64 	%rd2501, %rd2500, %rd2498;
	add.s64 	%rd2502, %rd2501, %rd2495;
	add.s64 	%rd2503, %rd2502, %rd2418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2564,%dummy}, %rd2490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2565}, %rd2490;
	}
	shf.r.wrap.b32 	%r2566, %r2565, %r2564, 28;
	shf.r.wrap.b32 	%r2567, %r2564, %r2565, 28;
	mov.b64 	%rd2504, {%r2567, %r2566};
	shf.l.wrap.b32 	%r2568, %r2564, %r2565, 30;
	shf.l.wrap.b32 	%r2569, %r2565, %r2564, 30;
	mov.b64 	%rd2505, {%r2569, %r2568};
	xor.b64  	%rd2506, %rd2505, %rd2504;
	shf.l.wrap.b32 	%r2570, %r2564, %r2565, 25;
	shf.l.wrap.b32 	%r2571, %r2565, %r2564, 25;
	mov.b64 	%rd2507, {%r2571, %r2570};
	xor.b64  	%rd2508, %rd2506, %rd2507;
	xor.b64  	%rd2509, %rd2490, %rd2442;
	xor.b64  	%rd2510, %rd2490, %rd2466;
	and.b64  	%rd2511, %rd2510, %rd2509;
	xor.b64  	%rd2512, %rd2511, %rd2490;
	add.s64 	%rd2513, %rd2502, %rd2512;
	add.s64 	%rd2514, %rd2513, %rd2508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2572,%dummy}, %rd2503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2573}, %rd2503;
	}
	shf.r.wrap.b32 	%r2574, %r2573, %r2572, 14;
	shf.r.wrap.b32 	%r2575, %r2572, %r2573, 14;
	mov.b64 	%rd2515, {%r2575, %r2574};
	shf.r.wrap.b32 	%r2576, %r2573, %r2572, 18;
	shf.r.wrap.b32 	%r2577, %r2572, %r2573, 18;
	mov.b64 	%rd2516, {%r2577, %r2576};
	xor.b64  	%rd2517, %rd2516, %rd2515;
	shf.l.wrap.b32 	%r2578, %r2572, %r2573, 23;
	shf.l.wrap.b32 	%r2579, %r2573, %r2572, 23;
	mov.b64 	%rd2518, {%r2579, %r2578};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	xor.b64  	%rd2520, %rd2479, %rd2455;
	and.b64  	%rd2521, %rd2503, %rd2520;
	xor.b64  	%rd2522, %rd2521, %rd2455;
	add.s64 	%rd2523, %rd2431, %rd2292;
	add.s64 	%rd2524, %rd2523, %rd94;
	add.s64 	%rd2525, %rd2524, %rd2522;
	add.s64 	%rd2526, %rd2525, %rd2519;
	add.s64 	%rd2527, %rd2526, %rd2442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2580,%dummy}, %rd2514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2581}, %rd2514;
	}
	shf.r.wrap.b32 	%r2582, %r2581, %r2580, 28;
	shf.r.wrap.b32 	%r2583, %r2580, %r2581, 28;
	mov.b64 	%rd2528, {%r2583, %r2582};
	shf.l.wrap.b32 	%r2584, %r2580, %r2581, 30;
	shf.l.wrap.b32 	%r2585, %r2581, %r2580, 30;
	mov.b64 	%rd2529, {%r2585, %r2584};
	xor.b64  	%rd2530, %rd2529, %rd2528;
	shf.l.wrap.b32 	%r2586, %r2580, %r2581, 25;
	shf.l.wrap.b32 	%r2587, %r2581, %r2580, 25;
	mov.b64 	%rd2531, {%r2587, %r2586};
	xor.b64  	%rd2532, %rd2530, %rd2531;
	xor.b64  	%rd2533, %rd2514, %rd2466;
	xor.b64  	%rd2534, %rd2514, %rd2490;
	and.b64  	%rd2535, %rd2534, %rd2533;
	xor.b64  	%rd2536, %rd2535, %rd2514;
	add.s64 	%rd2537, %rd2526, %rd2536;
	add.s64 	%rd2538, %rd2537, %rd2532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2588,%dummy}, %rd2527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2589}, %rd2527;
	}
	shf.r.wrap.b32 	%r2590, %r2589, %r2588, 14;
	shf.r.wrap.b32 	%r2591, %r2588, %r2589, 14;
	mov.b64 	%rd2539, {%r2591, %r2590};
	shf.r.wrap.b32 	%r2592, %r2589, %r2588, 18;
	shf.r.wrap.b32 	%r2593, %r2588, %r2589, 18;
	mov.b64 	%rd2540, {%r2593, %r2592};
	xor.b64  	%rd2541, %rd2540, %rd2539;
	shf.l.wrap.b32 	%r2594, %r2588, %r2589, 23;
	shf.l.wrap.b32 	%r2595, %r2589, %r2588, 23;
	mov.b64 	%rd2542, {%r2595, %r2594};
	xor.b64  	%rd2543, %rd2541, %rd2542;
	xor.b64  	%rd2544, %rd2503, %rd2479;
	and.b64  	%rd2545, %rd2527, %rd2544;
	xor.b64  	%rd2546, %rd2545, %rd2479;
	add.s64 	%rd2547, %rd2455, %rd2305;
	add.s64 	%rd2548, %rd2547, %rd95;
	add.s64 	%rd2549, %rd2548, %rd2546;
	add.s64 	%rd2550, %rd2549, %rd2543;
	add.s64 	%rd2551, %rd2550, %rd2466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2596,%dummy}, %rd2538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2597}, %rd2538;
	}
	shf.r.wrap.b32 	%r2598, %r2597, %r2596, 28;
	shf.r.wrap.b32 	%r2599, %r2596, %r2597, 28;
	mov.b64 	%rd2552, {%r2599, %r2598};
	shf.l.wrap.b32 	%r2600, %r2596, %r2597, 30;
	shf.l.wrap.b32 	%r2601, %r2597, %r2596, 30;
	mov.b64 	%rd2553, {%r2601, %r2600};
	xor.b64  	%rd2554, %rd2553, %rd2552;
	shf.l.wrap.b32 	%r2602, %r2596, %r2597, 25;
	shf.l.wrap.b32 	%r2603, %r2597, %r2596, 25;
	mov.b64 	%rd2555, {%r2603, %r2602};
	xor.b64  	%rd2556, %rd2554, %rd2555;
	xor.b64  	%rd2557, %rd2538, %rd2490;
	xor.b64  	%rd2558, %rd2538, %rd2514;
	and.b64  	%rd2559, %rd2558, %rd2557;
	xor.b64  	%rd2560, %rd2559, %rd2538;
	add.s64 	%rd2561, %rd2550, %rd2560;
	add.s64 	%rd2562, %rd2561, %rd2556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2604,%dummy}, %rd2551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2605}, %rd2551;
	}
	shf.r.wrap.b32 	%r2606, %r2605, %r2604, 14;
	shf.r.wrap.b32 	%r2607, %r2604, %r2605, 14;
	mov.b64 	%rd2563, {%r2607, %r2606};
	shf.r.wrap.b32 	%r2608, %r2605, %r2604, 18;
	shf.r.wrap.b32 	%r2609, %r2604, %r2605, 18;
	mov.b64 	%rd2564, {%r2609, %r2608};
	xor.b64  	%rd2565, %rd2564, %rd2563;
	shf.l.wrap.b32 	%r2610, %r2604, %r2605, 23;
	shf.l.wrap.b32 	%r2611, %r2605, %r2604, 23;
	mov.b64 	%rd2566, {%r2611, %r2610};
	xor.b64  	%rd2567, %rd2565, %rd2566;
	xor.b64  	%rd2568, %rd2527, %rd2503;
	and.b64  	%rd2569, %rd2551, %rd2568;
	xor.b64  	%rd2570, %rd2569, %rd2503;
	add.s64 	%rd2571, %rd2479, %rd2318;
	add.s64 	%rd2572, %rd2571, %rd96;
	add.s64 	%rd2573, %rd2572, %rd2570;
	add.s64 	%rd2574, %rd2573, %rd2567;
	add.s64 	%rd2575, %rd2574, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2612,%dummy}, %rd2562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2613}, %rd2562;
	}
	shf.r.wrap.b32 	%r2614, %r2613, %r2612, 28;
	shf.r.wrap.b32 	%r2615, %r2612, %r2613, 28;
	mov.b64 	%rd2576, {%r2615, %r2614};
	shf.l.wrap.b32 	%r2616, %r2612, %r2613, 30;
	shf.l.wrap.b32 	%r2617, %r2613, %r2612, 30;
	mov.b64 	%rd2577, {%r2617, %r2616};
	xor.b64  	%rd2578, %rd2577, %rd2576;
	shf.l.wrap.b32 	%r2618, %r2612, %r2613, 25;
	shf.l.wrap.b32 	%r2619, %r2613, %r2612, 25;
	mov.b64 	%rd2579, {%r2619, %r2618};
	xor.b64  	%rd2580, %rd2578, %rd2579;
	xor.b64  	%rd2581, %rd2562, %rd2514;
	xor.b64  	%rd2582, %rd2562, %rd2538;
	and.b64  	%rd2583, %rd2582, %rd2581;
	xor.b64  	%rd2584, %rd2583, %rd2562;
	add.s64 	%rd2585, %rd2574, %rd2584;
	add.s64 	%rd2586, %rd2585, %rd2580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2620,%dummy}, %rd2575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2621}, %rd2575;
	}
	shf.r.wrap.b32 	%r2622, %r2621, %r2620, 14;
	shf.r.wrap.b32 	%r2623, %r2620, %r2621, 14;
	mov.b64 	%rd2587, {%r2623, %r2622};
	shf.r.wrap.b32 	%r2624, %r2621, %r2620, 18;
	shf.r.wrap.b32 	%r2625, %r2620, %r2621, 18;
	mov.b64 	%rd2588, {%r2625, %r2624};
	xor.b64  	%rd2589, %rd2588, %rd2587;
	shf.l.wrap.b32 	%r2626, %r2620, %r2621, 23;
	shf.l.wrap.b32 	%r2627, %r2621, %r2620, 23;
	mov.b64 	%rd2590, {%r2627, %r2626};
	xor.b64  	%rd2591, %rd2589, %rd2590;
	xor.b64  	%rd2592, %rd2551, %rd2527;
	and.b64  	%rd2593, %rd2575, %rd2592;
	xor.b64  	%rd2594, %rd2593, %rd2527;
	add.s64 	%rd2595, %rd2503, %rd2331;
	add.s64 	%rd2596, %rd2595, %rd97;
	add.s64 	%rd2597, %rd2596, %rd2594;
	add.s64 	%rd2598, %rd2597, %rd2591;
	add.s64 	%rd2599, %rd2598, %rd2514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2628,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2629}, %rd2586;
	}
	shf.r.wrap.b32 	%r2630, %r2629, %r2628, 28;
	shf.r.wrap.b32 	%r2631, %r2628, %r2629, 28;
	mov.b64 	%rd2600, {%r2631, %r2630};
	shf.l.wrap.b32 	%r2632, %r2628, %r2629, 30;
	shf.l.wrap.b32 	%r2633, %r2629, %r2628, 30;
	mov.b64 	%rd2601, {%r2633, %r2632};
	xor.b64  	%rd2602, %rd2601, %rd2600;
	shf.l.wrap.b32 	%r2634, %r2628, %r2629, 25;
	shf.l.wrap.b32 	%r2635, %r2629, %r2628, 25;
	mov.b64 	%rd2603, {%r2635, %r2634};
	xor.b64  	%rd2604, %rd2602, %rd2603;
	xor.b64  	%rd2605, %rd2586, %rd2538;
	xor.b64  	%rd2606, %rd2586, %rd2562;
	and.b64  	%rd2607, %rd2606, %rd2605;
	xor.b64  	%rd2608, %rd2607, %rd2586;
	add.s64 	%rd2609, %rd2598, %rd2608;
	add.s64 	%rd2610, %rd2609, %rd2604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2636,%dummy}, %rd2599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2637}, %rd2599;
	}
	shf.r.wrap.b32 	%r2638, %r2637, %r2636, 14;
	shf.r.wrap.b32 	%r2639, %r2636, %r2637, 14;
	mov.b64 	%rd2611, {%r2639, %r2638};
	shf.r.wrap.b32 	%r2640, %r2637, %r2636, 18;
	shf.r.wrap.b32 	%r2641, %r2636, %r2637, 18;
	mov.b64 	%rd2612, {%r2641, %r2640};
	xor.b64  	%rd2613, %rd2612, %rd2611;
	shf.l.wrap.b32 	%r2642, %r2636, %r2637, 23;
	shf.l.wrap.b32 	%r2643, %r2637, %r2636, 23;
	mov.b64 	%rd2614, {%r2643, %r2642};
	xor.b64  	%rd2615, %rd2613, %rd2614;
	xor.b64  	%rd2616, %rd2575, %rd2551;
	and.b64  	%rd2617, %rd2599, %rd2616;
	xor.b64  	%rd2618, %rd2617, %rd2551;
	add.s64 	%rd2619, %rd2527, %rd2344;
	add.s64 	%rd2620, %rd2619, %rd98;
	add.s64 	%rd2621, %rd2620, %rd2618;
	add.s64 	%rd2622, %rd2621, %rd2615;
	add.s64 	%rd2623, %rd2622, %rd2538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2644,%dummy}, %rd2610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2645}, %rd2610;
	}
	shf.r.wrap.b32 	%r2646, %r2645, %r2644, 28;
	shf.r.wrap.b32 	%r2647, %r2644, %r2645, 28;
	mov.b64 	%rd2624, {%r2647, %r2646};
	shf.l.wrap.b32 	%r2648, %r2644, %r2645, 30;
	shf.l.wrap.b32 	%r2649, %r2645, %r2644, 30;
	mov.b64 	%rd2625, {%r2649, %r2648};
	xor.b64  	%rd2626, %rd2625, %rd2624;
	shf.l.wrap.b32 	%r2650, %r2644, %r2645, 25;
	shf.l.wrap.b32 	%r2651, %r2645, %r2644, 25;
	mov.b64 	%rd2627, {%r2651, %r2650};
	xor.b64  	%rd2628, %rd2626, %rd2627;
	xor.b64  	%rd2629, %rd2610, %rd2562;
	xor.b64  	%rd2630, %rd2610, %rd2586;
	and.b64  	%rd2631, %rd2630, %rd2629;
	xor.b64  	%rd2632, %rd2631, %rd2610;
	add.s64 	%rd2633, %rd2622, %rd2632;
	add.s64 	%rd2634, %rd2633, %rd2628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2652,%dummy}, %rd2623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2653}, %rd2623;
	}
	shf.r.wrap.b32 	%r2654, %r2653, %r2652, 14;
	shf.r.wrap.b32 	%r2655, %r2652, %r2653, 14;
	mov.b64 	%rd2635, {%r2655, %r2654};
	shf.r.wrap.b32 	%r2656, %r2653, %r2652, 18;
	shf.r.wrap.b32 	%r2657, %r2652, %r2653, 18;
	mov.b64 	%rd2636, {%r2657, %r2656};
	xor.b64  	%rd2637, %rd2636, %rd2635;
	shf.l.wrap.b32 	%r2658, %r2652, %r2653, 23;
	shf.l.wrap.b32 	%r2659, %r2653, %r2652, 23;
	mov.b64 	%rd2638, {%r2659, %r2658};
	xor.b64  	%rd2639, %rd2637, %rd2638;
	xor.b64  	%rd2640, %rd2599, %rd2575;
	and.b64  	%rd2641, %rd2623, %rd2640;
	xor.b64  	%rd2642, %rd2641, %rd2575;
	add.s64 	%rd2643, %rd2551, %rd2357;
	add.s64 	%rd2644, %rd2643, %rd99;
	add.s64 	%rd2645, %rd2644, %rd2642;
	add.s64 	%rd2646, %rd2645, %rd2639;
	add.s64 	%rd2647, %rd2646, %rd2562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2660,%dummy}, %rd2634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2661}, %rd2634;
	}
	shf.r.wrap.b32 	%r2662, %r2661, %r2660, 28;
	shf.r.wrap.b32 	%r2663, %r2660, %r2661, 28;
	mov.b64 	%rd2648, {%r2663, %r2662};
	shf.l.wrap.b32 	%r2664, %r2660, %r2661, 30;
	shf.l.wrap.b32 	%r2665, %r2661, %r2660, 30;
	mov.b64 	%rd2649, {%r2665, %r2664};
	xor.b64  	%rd2650, %rd2649, %rd2648;
	shf.l.wrap.b32 	%r2666, %r2660, %r2661, 25;
	shf.l.wrap.b32 	%r2667, %r2661, %r2660, 25;
	mov.b64 	%rd2651, {%r2667, %r2666};
	xor.b64  	%rd2652, %rd2650, %rd2651;
	xor.b64  	%rd2653, %rd2634, %rd2586;
	xor.b64  	%rd2654, %rd2634, %rd2610;
	and.b64  	%rd2655, %rd2654, %rd2653;
	xor.b64  	%rd2656, %rd2655, %rd2634;
	add.s64 	%rd2657, %rd2646, %rd2656;
	add.s64 	%rd2658, %rd2657, %rd2652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2668,%dummy}, %rd2647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2669}, %rd2647;
	}
	shf.r.wrap.b32 	%r2670, %r2669, %r2668, 14;
	shf.r.wrap.b32 	%r2671, %r2668, %r2669, 14;
	mov.b64 	%rd2659, {%r2671, %r2670};
	shf.r.wrap.b32 	%r2672, %r2669, %r2668, 18;
	shf.r.wrap.b32 	%r2673, %r2668, %r2669, 18;
	mov.b64 	%rd2660, {%r2673, %r2672};
	xor.b64  	%rd2661, %rd2660, %rd2659;
	shf.l.wrap.b32 	%r2674, %r2668, %r2669, 23;
	shf.l.wrap.b32 	%r2675, %r2669, %r2668, 23;
	mov.b64 	%rd2662, {%r2675, %r2674};
	xor.b64  	%rd2663, %rd2661, %rd2662;
	xor.b64  	%rd2664, %rd2623, %rd2599;
	and.b64  	%rd2665, %rd2647, %rd2664;
	xor.b64  	%rd2666, %rd2665, %rd2599;
	add.s64 	%rd2667, %rd2575, %rd2370;
	add.s64 	%rd2668, %rd2667, %rd100;
	add.s64 	%rd2669, %rd2668, %rd2666;
	add.s64 	%rd2670, %rd2669, %rd2663;
	add.s64 	%rd2671, %rd2670, %rd2586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2676,%dummy}, %rd2658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2677}, %rd2658;
	}
	shf.r.wrap.b32 	%r2678, %r2677, %r2676, 28;
	shf.r.wrap.b32 	%r2679, %r2676, %r2677, 28;
	mov.b64 	%rd2672, {%r2679, %r2678};
	shf.l.wrap.b32 	%r2680, %r2676, %r2677, 30;
	shf.l.wrap.b32 	%r2681, %r2677, %r2676, 30;
	mov.b64 	%rd2673, {%r2681, %r2680};
	xor.b64  	%rd2674, %rd2673, %rd2672;
	shf.l.wrap.b32 	%r2682, %r2676, %r2677, 25;
	shf.l.wrap.b32 	%r2683, %r2677, %r2676, 25;
	mov.b64 	%rd2675, {%r2683, %r2682};
	xor.b64  	%rd2676, %rd2674, %rd2675;
	xor.b64  	%rd2677, %rd2658, %rd2610;
	xor.b64  	%rd2678, %rd2658, %rd2634;
	and.b64  	%rd2679, %rd2678, %rd2677;
	xor.b64  	%rd2680, %rd2679, %rd2658;
	add.s64 	%rd2681, %rd2670, %rd2680;
	add.s64 	%rd2682, %rd2681, %rd2676;
	cvt.u32.u64	%r179, %rd2671;
	shr.u64 	%rd2683, %rd2671, 32;
	cvt.u32.u64	%r180, %rd2683;
	cvt.u32.u64	%r181, %rd2682;
	shr.u64 	%rd2684, %rd2682, 32;
	cvt.u32.u64	%r182, %rd2684;
	shr.u32 	%r2684, %r179, %r176;
	and.b32  	%r2685, %r2684, %r203;
	mul.wide.u32 	%rd2685, %r2685, 4;
	add.s64 	%rd2686, %rd2720, %rd2685;
	and.b32  	%r2686, %r179, 31;
	mov.u32 	%r2687, 1;
	shl.b32 	%r183, %r2687, %r2686;
	ld.global.u32 	%r2688, [%rd2686];
	and.b32  	%r2689, %r2688, %r183;
	setp.eq.s32	%p26, %r2689, 0;
	@%p26 bra 	BB1_72;

	mov.u32 	%r2746, 1;
	ld.param.u64 	%rd2714, [m01710_m04_param_7];
	shr.u32 	%r2690, %r180, %r176;
	and.b32  	%r2691, %r2690, %r203;
	mul.wide.u32 	%rd2687, %r2691, 4;
	add.s64 	%rd2688, %rd2714, %rd2687;
	and.b32  	%r2692, %r180, 31;
	shl.b32 	%r184, %r2746, %r2692;
	ld.global.u32 	%r2694, [%rd2688];
	and.b32  	%r2695, %r2694, %r184;
	setp.eq.s32	%p27, %r2695, 0;
	@%p27 bra 	BB1_72;

	mov.u32 	%r2747, 1;
	ld.param.u64 	%rd2715, [m01710_m04_param_8];
	shr.u32 	%r2696, %r181, %r176;
	and.b32  	%r2697, %r2696, %r203;
	mul.wide.u32 	%rd2689, %r2697, 4;
	add.s64 	%rd2690, %rd2715, %rd2689;
	and.b32  	%r2698, %r181, 31;
	shl.b32 	%r185, %r2747, %r2698;
	ld.global.u32 	%r2700, [%rd2690];
	and.b32  	%r2701, %r2700, %r185;
	setp.eq.s32	%p28, %r2701, 0;
	@%p28 bra 	BB1_72;

	mov.u32 	%r2748, 1;
	ld.param.u64 	%rd2716, [m01710_m04_param_9];
	shr.u32 	%r2702, %r182, %r176;
	and.b32  	%r2703, %r2702, %r203;
	mul.wide.u32 	%rd2691, %r2703, 4;
	add.s64 	%rd2692, %rd2716, %rd2691;
	and.b32  	%r2704, %r182, 31;
	shl.b32 	%r186, %r2748, %r2704;
	ld.global.u32 	%r2706, [%rd2692];
	and.b32  	%r2707, %r2706, %r186;
	setp.eq.s32	%p29, %r2707, 0;
	@%p29 bra 	BB1_72;

	and.b32  	%r2745, %r179, 31;
	mov.u32 	%r2744, 1;
	shl.b32 	%r2743, %r2744, %r2745;
	ld.param.u64 	%rd2717, [m01710_m04_param_10];
	shr.u32 	%r2708, %r179, %r177;
	and.b32  	%r2709, %r2708, %r203;
	mul.wide.u32 	%rd2693, %r2709, 4;
	add.s64 	%rd2694, %rd2717, %rd2693;
	ld.global.u32 	%r2710, [%rd2694];
	and.b32  	%r2711, %r2710, %r2743;
	setp.eq.s32	%p30, %r2711, 0;
	@%p30 bra 	BB1_72;

	ld.param.u64 	%rd2718, [m01710_m04_param_11];
	shr.u32 	%r2712, %r180, %r177;
	and.b32  	%r2713, %r2712, %r203;
	mul.wide.u32 	%rd2695, %r2713, 4;
	add.s64 	%rd2696, %rd2718, %rd2695;
	ld.global.u32 	%r2714, [%rd2696];
	and.b32  	%r2715, %r2714, %r184;
	setp.eq.s32	%p31, %r2715, 0;
	@%p31 bra 	BB1_72;

	ld.param.u64 	%rd2721, [m01710_m04_param_12];
	shr.u32 	%r2716, %r181, %r177;
	and.b32  	%r2717, %r2716, %r203;
	mul.wide.u32 	%rd2697, %r2717, 4;
	add.s64 	%rd2698, %rd2721, %rd2697;
	ld.global.u32 	%r2718, [%rd2698];
	and.b32  	%r2719, %r2718, %r185;
	setp.eq.s32	%p32, %r2719, 0;
	@%p32 bra 	BB1_72;

	ld.param.u64 	%rd2722, [m01710_m04_param_13];
	shr.u32 	%r2720, %r182, %r177;
	and.b32  	%r2721, %r2720, %r203;
	mul.wide.u32 	%rd2699, %r2721, 4;
	add.s64 	%rd2700, %rd2722, %rd2699;
	ld.global.u32 	%r2722, [%rd2700];
	and.b32  	%r2723, %r2722, %r186;
	setp.eq.s32	%p33, %r2723, 0;
	@%p33 bra 	BB1_72;

	setp.eq.s32	%p34, %r208, 0;
	mov.u32 	%r2770, 0;
	mov.u32 	%r2724, -1;
	mov.u32 	%r2769, %r208;
	@%p34 bra 	BB1_66;

BB1_54:
	mov.u32 	%r2771, 1;
	ld.param.u64 	%rd2723, [m01710_m04_param_15];
	shr.u32 	%r189, %r2769, 1;
	add.s32 	%r2772, %r189, %r2770;
	cvt.u64.u32	%rd2701, %r2772;
	add.s64 	%rd101, %rd2701, %rd25;
	shl.b64 	%rd2702, %rd101, 6;
	add.s64 	%rd2703, %rd2723, %rd2702;
	ld.global.u32 	%r191, [%rd2703+28];
	setp.gt.u32	%p35, %r182, %r191;
	@%p35 bra 	BB1_64;

	setp.lt.u32	%p36, %r182, %r191;
	mov.u32 	%r2727, -1;
	@%p36 bra 	BB1_56;
	bra.uni 	BB1_57;

BB1_56:
	mov.u32 	%r2771, %r2727;
	bra.uni 	BB1_64;

BB1_57:
	mov.u32 	%r2771, 1;
	ld.global.u32 	%r192, [%rd2703+24];
	setp.gt.u32	%p37, %r181, %r192;
	@%p37 bra 	BB1_64;

	setp.lt.u32	%p38, %r181, %r192;
	@%p38 bra 	BB1_59;
	bra.uni 	BB1_60;

BB1_59:
	mov.u32 	%r2771, %r2727;
	bra.uni 	BB1_64;

BB1_60:
	mov.u32 	%r2771, 1;
	ld.global.u32 	%r193, [%rd2703+60];
	setp.gt.u32	%p39, %r180, %r193;
	@%p39 bra 	BB1_64;

	setp.lt.u32	%p40, %r180, %r193;
	mov.u32 	%r2771, %r2727;
	@%p40 bra 	BB1_64;

	mov.u32 	%r2771, 1;
	ld.global.u32 	%r194, [%rd2703+56];
	setp.gt.u32	%p41, %r179, %r194;
	@%p41 bra 	BB1_64;

	setp.lt.u32	%p42, %r179, %r194;
	selp.b32	%r2771, -1, 0, %p42;

BB1_64:
	add.s32 	%r2733, %r189, 1;
	setp.gt.s32	%p43, %r2771, 0;
	selp.b32	%r2734, %r2733, 0, %p43;
	add.s32 	%r2770, %r2734, %r2770;
	selp.b32	%r2735, -1, 0, %p43;
	add.s32 	%r2736, %r2735, %r2769;
	shr.u32 	%r2769, %r2736, 1;
	setp.eq.s32	%p44, %r2771, 0;
	@%p44 bra 	BB1_67;

	setp.ne.s32	%p45, %r2769, 0;
	@%p45 bra 	BB1_54;

BB1_66:
	mov.u32 	%r2772, %r2724;

BB1_67:
	setp.eq.s32	%p46, %r2772, -1;
	@%p46 bra 	BB1_72;

	ld.param.u64 	%rd2724, [m01710_m04_param_16];
	ld.param.u32 	%r2740, [m01710_m04_param_32];
	add.s32 	%r200, %r2772, %r2740;
	mul.wide.u32 	%rd2710, %r200, 4;
	add.s64 	%rd2711, %rd2724, %rd2710;
	atom.global.add.u32 	%r2738, [%rd2711], 1;
	setp.ne.s32	%p47, %r2738, 0;
	@%p47 bra 	BB1_72;

	atom.global.add.u32 	%r201, [%rd116], 1;
	setp.lt.u32	%p48, %r201, %r208;
	@%p48 bra 	BB1_71;
	bra.uni 	BB1_70;

BB1_71:
	ld.param.u64 	%rd2725, [m01710_m04_param_14];
	ld.param.u32 	%r2741, [m01710_m04_param_27];
	mul.wide.u32 	%rd2712, %r201, 20;
	add.s64 	%rd2713, %rd2725, %rd2712;
	st.global.u32 	[%rd2713], %r2741;
	st.global.u32 	[%rd2713+4], %r2772;
	st.global.u32 	[%rd2713+8], %r200;
	st.global.u32 	[%rd2713+12], %r1;
	st.global.u32 	[%rd2713+16], %r2768;
	bra.uni 	BB1_72;

BB1_70:
	atom.global.add.u32 	%r2739, [%rd116], -1;

BB1_72:
	ld.param.u32 	%r2742, [m01710_m04_param_30];
	add.s32 	%r2768, %r2768, 1;
	setp.lt.u32	%p49, %r2768, %r2742;
	@%p49 bra 	BB1_45;

BB1_73:
	ret;
}

	// .globl	m01710_m08
.entry m01710_m08(
	.param .u64 .ptr .global .align 4 m01710_m08_param_0,
	.param .u64 .ptr .global .align 4 m01710_m08_param_1,
	.param .u64 .ptr .global .align 4 m01710_m08_param_2,
	.param .u64 .ptr .global .align 4 m01710_m08_param_3,
	.param .u64 .ptr .global .align 1 m01710_m08_param_4,
	.param .u64 .ptr .global .align 1 m01710_m08_param_5,
	.param .u64 .ptr .global .align 4 m01710_m08_param_6,
	.param .u64 .ptr .global .align 4 m01710_m08_param_7,
	.param .u64 .ptr .global .align 4 m01710_m08_param_8,
	.param .u64 .ptr .global .align 4 m01710_m08_param_9,
	.param .u64 .ptr .global .align 4 m01710_m08_param_10,
	.param .u64 .ptr .global .align 4 m01710_m08_param_11,
	.param .u64 .ptr .global .align 4 m01710_m08_param_12,
	.param .u64 .ptr .global .align 4 m01710_m08_param_13,
	.param .u64 .ptr .global .align 4 m01710_m08_param_14,
	.param .u64 .ptr .global .align 4 m01710_m08_param_15,
	.param .u64 .ptr .global .align 4 m01710_m08_param_16,
	.param .u64 .ptr .global .align 4 m01710_m08_param_17,
	.param .u64 .ptr .global .align 1 m01710_m08_param_18,
	.param .u64 .ptr .global .align 4 m01710_m08_param_19,
	.param .u64 .ptr .global .align 4 m01710_m08_param_20,
	.param .u64 .ptr .global .align 4 m01710_m08_param_21,
	.param .u64 .ptr .global .align 4 m01710_m08_param_22,
	.param .u64 .ptr .global .align 4 m01710_m08_param_23,
	.param .u32 m01710_m08_param_24,
	.param .u32 m01710_m08_param_25,
	.param .u32 m01710_m08_param_26,
	.param .u32 m01710_m08_param_27,
	.param .u32 m01710_m08_param_28,
	.param .u32 m01710_m08_param_29,
	.param .u32 m01710_m08_param_30,
	.param .u32 m01710_m08_param_31,
	.param .u32 m01710_m08_param_32,
	.param .u32 m01710_m08_param_33,
	.param .u32 m01710_m08_param_34
)
{
	.reg .pred 	%p<50>;
	.reg .b32 	%r<2777>;
	.reg .b64 	%rd<2729>;


	ld.param.u64 	%rd102, [m01710_m08_param_0];
	ld.param.u64 	%rd115, [m01710_m08_param_17];
	ld.param.u64 	%rd116, [m01710_m08_param_19];
	ld.param.u32 	%r207, [m01710_m08_param_24];
	ld.param.u32 	%r208, [m01710_m08_param_25];
	ld.param.u32 	%r209, [m01710_m08_param_26];
	ld.param.u32 	%r210, [m01710_m08_param_27];
	ld.param.u32 	%r211, [m01710_m08_param_30];
	ld.param.u32 	%r212, [m01710_m08_param_31];
	ld.param.u32 	%r213, [m01710_m08_param_32];
	ld.param.u32 	%r214, [m01710_m08_param_34];
	mov.b32	%r215, %envreg3;
	mov.u32 	%r216, %ctaid.x;
	mov.u32 	%r217, %ntid.x;
	mad.lo.s32 	%r218, %r216, %r217, %r215;
	mov.u32 	%r219, %tid.x;
	add.s32 	%r1, %r218, %r219;
	setp.ge.u32	%p1, %r1, %r214;
	@%p1 bra 	BB2_73;

	mul.wide.u32 	%rd117, %r1, 80;
	add.s64 	%rd118, %rd102, %rd117;
	ld.global.u32 	%r2, [%rd118];
	ld.global.u32 	%r3, [%rd118+4];
	ld.global.u32 	%r4, [%rd118+8];
	ld.global.u32 	%r5, [%rd118+12];
	ld.global.u32 	%r6, [%rd118+16];
	ld.global.u32 	%r7, [%rd118+20];
	ld.global.u32 	%r8, [%rd118+24];
	ld.global.u32 	%r9, [%rd118+28];
	cvt.u64.u32	%rd1, %r210;
	mul.wide.u32 	%rd119, %r210, 180;
	add.s64 	%rd120, %rd115, %rd119;
	ld.global.u32 	%r2768, [%rd120];
	ld.global.u32 	%r2769, [%rd120+4];
	ld.global.u32 	%r2770, [%rd120+8];
	ld.global.u32 	%r2771, [%rd120+12];
	ld.global.u32 	%r2764, [%rd120+16];
	ld.global.u32 	%r2765, [%rd120+20];
	ld.global.u32 	%r2766, [%rd120+24];
	ld.global.u32 	%r2767, [%rd120+28];
	ld.global.u32 	%r2760, [%rd120+32];
	ld.global.u32 	%r2761, [%rd120+36];
	ld.global.u32 	%r2762, [%rd120+40];
	ld.global.u32 	%r2763, [%rd120+44];
	ld.global.u32 	%r2757, [%rd120+48];
	ld.global.u32 	%r2758, [%rd120+52];
	ld.global.u32 	%r2759, [%rd120+56];
	ld.global.u32 	%r25, [%rd118+64];
	and.b32  	%r221, %r25, 3;
	mov.u32 	%r222, 4;
	sub.s32 	%r223, %r222, %r221;
	shl.b32 	%r224, %r223, 2;
	mov.u32 	%r225, 1985229328;
	shr.u32 	%r226, %r225, %r224;
	and.b32  	%r26, %r226, 65535;
	shr.u32 	%r220, %r25, 2;
	setp.gt.s32	%p2, %r220, 7;
	@%p2 bra 	BB2_17;

	setp.gt.s32	%p14, %r220, 3;
	@%p14 bra 	BB2_10;

	setp.gt.s32	%p20, %r220, 1;
	@%p20 bra 	BB2_7;

	setp.eq.s32	%p23, %r220, 0;
	@%p23 bra 	BB2_42;
	bra.uni 	BB2_5;

BB2_42:
	// inline asm
	prmt.b32 %r2759, %r2758, %r2759, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2757, %r2758, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2763, %r2757, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2762, %r2763, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2761, %r2762, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2760, %r2761, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2767, %r2760, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2766, %r2767, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2766, %r2765, %r2766, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2764, %r2765, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2771, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r824, 0;
	// inline asm
	prmt.b32 %r2768, %r824, %r2768, %r26;
	// inline asm
	bra.uni 	BB2_43;

BB2_17:
	setp.gt.s32	%p3, %r220, 11;
	@%p3 bra 	BB2_25;

	setp.gt.s32	%p9, %r220, 9;
	@%p9 bra 	BB2_22;

	setp.eq.s32	%p12, %r220, 8;
	@%p12 bra 	BB2_37;
	bra.uni 	BB2_20;

BB2_37:
	// inline asm
	prmt.b32 %r2759, %r2765, %r2766, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2764, %r2765, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2764, 0;
	// inline asm
	prmt.b32 %r2760, %r2764, %r2768, %r26;
	// inline asm
	mov.u32 	%r2765, %r2764;
	mov.u32 	%r2766, %r2764;
	mov.u32 	%r2767, %r2764;
	bra.uni 	BB2_38;

BB2_10:
	setp.gt.s32	%p15, %r220, 5;
	@%p15 bra 	BB2_14;

	setp.eq.s32	%p18, %r220, 4;
	@%p18 bra 	BB2_40;
	bra.uni 	BB2_12;

BB2_40:
	// inline asm
	prmt.b32 %r2759, %r2761, %r2762, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2760, %r2761, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2767, %r2760, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2766, %r2767, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2765, %r2766, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2764, %r2765, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2766, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2769, 0;
	// inline asm
	prmt.b32 %r2764, %r2769, %r2768, %r26;
	// inline asm
	mov.u32 	%r2768, %r2769;
	mov.u32 	%r2770, %r2769;
	mov.u32 	%r2771, %r2769;
	bra.uni 	BB2_43;

BB2_25:
	setp.gt.s32	%p4, %r220, 13;
	@%p4 bra 	BB2_29;

	setp.eq.s32	%p7, %r220, 12;
	@%p7 bra 	BB2_34;
	bra.uni 	BB2_27;

BB2_34:
	// inline asm
	prmt.b32 %r2759, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2760, 0;
	// inline asm
	prmt.b32 %r2757, %r2760, %r2768, %r26;
	// inline asm
	mov.u32 	%r2761, %r2760;
	mov.u32 	%r2762, %r2760;
	mov.u32 	%r2763, %r2760;
	bra.uni 	BB2_35;

BB2_7:
	setp.eq.s32	%p21, %r220, 2;
	@%p21 bra 	BB2_41;
	bra.uni 	BB2_8;

BB2_41:
	// inline asm
	prmt.b32 %r2759, %r2763, %r2757, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2762, %r2763, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2761, %r2762, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2760, %r2761, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2767, %r2760, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2766, %r2767, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2765, %r2766, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2764, %r2765, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2766, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2771, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2769, 0;
	// inline asm
	prmt.b32 %r2770, %r2769, %r2768, %r26;
	// inline asm
	mov.u32 	%r2768, %r2769;
	bra.uni 	BB2_43;

BB2_22:
	setp.eq.s32	%p10, %r220, 10;
	@%p10 bra 	BB2_36;
	bra.uni 	BB2_23;

BB2_36:
	// inline asm
	prmt.b32 %r2759, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2760, 0;
	// inline asm
	prmt.b32 %r2762, %r2760, %r2768, %r26;
	// inline asm
	mov.u32 	%r2761, %r2760;
	bra.uni 	BB2_35;

BB2_14:
	setp.eq.s32	%p16, %r220, 6;
	@%p16 bra 	BB2_39;
	bra.uni 	BB2_15;

BB2_39:
	// inline asm
	prmt.b32 %r2759, %r2767, %r2760, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2766, %r2767, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2765, %r2766, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2764, %r2765, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2764, 0;
	// inline asm
	prmt.b32 %r2766, %r2764, %r2768, %r26;
	// inline asm
	mov.u32 	%r2765, %r2764;
	bra.uni 	BB2_38;

BB2_29:
	setp.eq.s32	%p5, %r220, 14;
	@%p5 bra 	BB2_33;
	bra.uni 	BB2_30;

BB2_33:
	mov.u32 	%r2757, 0;
	// inline asm
	prmt.b32 %r2759, %r2757, %r2768, %r26;
	// inline asm
	mov.u32 	%r2758, %r2757;
	bra.uni 	BB2_32;

BB2_5:
	setp.eq.s32	%p24, %r220, 1;
	@%p24 bra 	BB2_6;
	bra.uni 	BB2_43;

BB2_6:
	// inline asm
	prmt.b32 %r2759, %r2757, %r2758, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2763, %r2757, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2762, %r2763, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2761, %r2762, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2760, %r2761, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2767, %r2760, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2766, %r2767, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2765, %r2766, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2766, %r2764, %r2765, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2771, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r766, 0;
	// inline asm
	prmt.b32 %r2769, %r766, %r2768, %r26;
	// inline asm
	mov.u32 	%r2768, %r766;
	bra.uni 	BB2_43;

BB2_20:
	setp.eq.s32	%p13, %r220, 9;
	@%p13 bra 	BB2_21;
	bra.uni 	BB2_43;

BB2_21:
	// inline asm
	prmt.b32 %r2759, %r2764, %r2765, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2760, 0;
	// inline asm
	prmt.b32 %r2761, %r2760, %r2768, %r26;
	// inline asm
	bra.uni 	BB2_35;

BB2_12:
	setp.eq.s32	%p19, %r220, 5;
	@%p19 bra 	BB2_13;
	bra.uni 	BB2_43;

BB2_13:
	// inline asm
	prmt.b32 %r2759, %r2760, %r2761, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2767, %r2760, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2766, %r2767, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2765, %r2766, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2764, %r2765, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2766, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2764, 0;
	// inline asm
	prmt.b32 %r2765, %r2764, %r2768, %r26;
	// inline asm
	bra.uni 	BB2_38;

BB2_27:
	setp.eq.s32	%p8, %r220, 13;
	@%p8 bra 	BB2_28;
	bra.uni 	BB2_43;

BB2_28:
	// inline asm
	prmt.b32 %r2759, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2757, 0;
	// inline asm
	prmt.b32 %r2758, %r2757, %r2768, %r26;
	// inline asm
	bra.uni 	BB2_32;

BB2_8:
	setp.eq.s32	%p22, %r220, 3;
	@%p22 bra 	BB2_9;
	bra.uni 	BB2_43;

BB2_9:
	// inline asm
	prmt.b32 %r2759, %r2762, %r2763, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2761, %r2762, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2760, %r2761, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2767, %r2760, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2766, %r2767, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2765, %r2766, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2764, %r2765, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2766, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2769, 0;
	// inline asm
	prmt.b32 %r2771, %r2769, %r2768, %r26;
	// inline asm
	mov.u32 	%r2768, %r2769;
	mov.u32 	%r2770, %r2769;
	bra.uni 	BB2_43;

BB2_23:
	setp.eq.s32	%p11, %r220, 11;
	@%p11 bra 	BB2_24;
	bra.uni 	BB2_43;

BB2_24:
	// inline asm
	prmt.b32 %r2759, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2760, 0;
	// inline asm
	prmt.b32 %r2763, %r2760, %r2768, %r26;
	// inline asm
	mov.u32 	%r2761, %r2760;
	mov.u32 	%r2762, %r2760;

BB2_35:
	mov.u32 	%r2764, %r2760;
	mov.u32 	%r2765, %r2760;
	mov.u32 	%r2766, %r2760;
	mov.u32 	%r2767, %r2760;
	mov.u32 	%r2768, %r2760;
	mov.u32 	%r2769, %r2760;
	mov.u32 	%r2770, %r2760;
	mov.u32 	%r2771, %r2760;
	bra.uni 	BB2_43;

BB2_15:
	setp.eq.s32	%p17, %r220, 7;
	@%p17 bra 	BB2_16;
	bra.uni 	BB2_43;

BB2_16:
	// inline asm
	prmt.b32 %r2759, %r2766, %r2767, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2758, %r2765, %r2766, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2757, %r2764, %r2765, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2763, %r2771, %r2764, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2762, %r2770, %r2771, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2761, %r2769, %r2770, %r26;
	// inline asm
	// inline asm
	prmt.b32 %r2760, %r2768, %r2769, %r26;
	// inline asm
	mov.u32 	%r2764, 0;
	// inline asm
	prmt.b32 %r2767, %r2764, %r2768, %r26;
	// inline asm
	mov.u32 	%r2765, %r2764;
	mov.u32 	%r2766, %r2764;

BB2_38:
	mov.u32 	%r2768, %r2764;
	mov.u32 	%r2769, %r2764;
	mov.u32 	%r2770, %r2764;
	mov.u32 	%r2771, %r2764;
	bra.uni 	BB2_43;

BB2_30:
	setp.ne.s32	%p6, %r220, 15;
	@%p6 bra 	BB2_43;

	mov.u32 	%r2757, 0;
	mov.u32 	%r2758, %r2757;
	mov.u32 	%r2759, %r2757;

BB2_32:
	mov.u32 	%r2760, %r2757;
	mov.u32 	%r2761, %r2757;
	mov.u32 	%r2762, %r2757;
	mov.u32 	%r2763, %r2757;
	mov.u32 	%r2764, %r2757;
	mov.u32 	%r2765, %r2757;
	mov.u32 	%r2766, %r2757;
	mov.u32 	%r2767, %r2757;
	mov.u32 	%r2768, %r2757;
	mov.u32 	%r2769, %r2757;
	mov.u32 	%r2770, %r2757;
	mov.u32 	%r2771, %r2757;

BB2_43:
	// inline asm
	prmt.b32 %r827, %r2768, 0, 0x0123;
	// inline asm
	or.b32  	%r162, %r827, %r2;
	// inline asm
	prmt.b32 %r829, %r2769, 0, 0x0123;
	// inline asm
	or.b32  	%r163, %r829, %r3;
	// inline asm
	prmt.b32 %r831, %r2770, 0, 0x0123;
	// inline asm
	or.b32  	%r164, %r831, %r4;
	// inline asm
	prmt.b32 %r833, %r2771, 0, 0x0123;
	// inline asm
	or.b32  	%r165, %r833, %r5;
	// inline asm
	prmt.b32 %r835, %r2764, 0, 0x0123;
	// inline asm
	or.b32  	%r166, %r835, %r6;
	// inline asm
	prmt.b32 %r837, %r2765, 0, 0x0123;
	// inline asm
	or.b32  	%r167, %r837, %r7;
	// inline asm
	prmt.b32 %r839, %r2766, 0, 0x0123;
	// inline asm
	or.b32  	%r168, %r839, %r8;
	// inline asm
	prmt.b32 %r841, %r2767, 0, 0x0123;
	// inline asm
	or.b32  	%r169, %r841, %r9;
	// inline asm
	prmt.b32 %r843, %r2760, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r845, %r2761, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r847, %r2762, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r849, %r2763, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r851, %r2757, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r853, %r2758, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r855, %r2759, 0, 0x0123;
	// inline asm
	mul.lo.s64 	%rd121, %rd1, 180;
	add.s64 	%rd122, %rd115, %rd121;
	ld.global.u32 	%r857, [%rd122+128];
	add.s32 	%r177, %r857, %r25;
	setp.eq.s32	%p25, %r211, 0;
	@%p25 bra 	BB2_73;

	mov.b64	%rd123, {%r165, %r164};
	mov.b64	%rd2, {%r167, %r166};
	mov.b64	%rd124, {%r169, %r168};
	mov.b64	%rd3, {%r845, %r843};
	mov.b64	%rd4, {%r849, %r847};
	mov.b64	%rd5, {%r853, %r851};
	shl.b32 	%r859, %r177, 3;
	mov.b64	%rd6, {%r859, %r855};
	ld.const.u64 	%rd125, [k_sha512];
	add.s64 	%rd7, %rd125, 6620516959819538809;
	mov.u64 	%rd126, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r860,%dummy}, %rd126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r861}, %rd126;
	}
	shf.r.wrap.b32 	%r862, %r861, %r860, 18;
	shf.r.wrap.b32 	%r863, %r860, %r861, 18;
	mov.b64 	%rd127, {%r863, %r862};
	shf.r.wrap.b32 	%r864, %r861, %r860, 14;
	shf.r.wrap.b32 	%r865, %r860, %r861, 14;
	mov.b64 	%rd128, {%r865, %r864};
	xor.b64  	%rd129, %rd127, %rd128;
	shf.l.wrap.b32 	%r866, %r860, %r861, 23;
	shf.l.wrap.b32 	%r867, %r861, %r860, 23;
	mov.b64 	%rd130, {%r867, %r866};
	xor.b64  	%rd8, %rd129, %rd130;
	mov.u64 	%rd131, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd131;
	}
	shf.l.wrap.b32 	%r870, %r869, %r868, 30;
	shf.l.wrap.b32 	%r871, %r868, %r869, 30;
	mov.b64 	%rd132, {%r871, %r870};
	shf.r.wrap.b32 	%r872, %r868, %r869, 28;
	shf.r.wrap.b32 	%r873, %r869, %r868, 28;
	mov.b64 	%rd133, {%r873, %r872};
	xor.b64  	%rd134, %rd132, %rd133;
	shf.l.wrap.b32 	%r874, %r869, %r868, 25;
	shf.l.wrap.b32 	%r875, %r868, %r869, 25;
	mov.b64 	%rd135, {%r875, %r874};
	xor.b64  	%rd9, %rd134, %rd135;
	ld.const.u64 	%rd136, [k_sha512+8];
	add.s64 	%rd137, %rd123, %rd136;
	add.s64 	%rd10, %rd137, 2270897969802886507;
	ld.const.u64 	%rd138, [k_sha512+16];
	add.s64 	%rd139, %rd2, %rd138;
	add.s64 	%rd11, %rd139, -7276294671716946913;
	ld.const.u64 	%rd140, [k_sha512+24];
	add.s64 	%rd141, %rd124, %rd140;
	add.s64 	%rd12, %rd141, 5840696475078001361;
	ld.const.u64 	%rd13, [k_sha512+32];
	ld.const.u64 	%rd14, [k_sha512+40];
	ld.const.u64 	%rd15, [k_sha512+48];
	ld.const.u64 	%rd16, [k_sha512+56];
	ld.const.u64 	%rd17, [k_sha512+64];
	ld.const.u64 	%rd18, [k_sha512+72];
	ld.const.u64 	%rd19, [k_sha512+80];
	ld.const.u64 	%rd20, [k_sha512+88];
	ld.const.u64 	%rd21, [k_sha512+96];
	ld.const.u64 	%rd22, [k_sha512+104];
	ld.const.u64 	%rd23, [k_sha512+112];
	ld.const.u64 	%rd24, [k_sha512+120];
	and.b32  	%r180, %r208, 31;
	and.b32  	%r181, %r209, 31;
	cvt.u64.u32	%rd25, %r213;
	mov.u64 	%rd142, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r876}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd142;
	}
	shf.l.wrap.b32 	%r878, %r877, %r876, 3;
	shf.l.wrap.b32 	%r879, %r876, %r877, 3;
	mov.b64 	%rd143, {%r879, %r878};
	shf.r.wrap.b32 	%r880, %r876, %r877, 19;
	shf.r.wrap.b32 	%r881, %r877, %r876, 19;
	mov.b64 	%rd144, {%r881, %r880};
	xor.b64  	%rd26, %rd144, %rd143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r882,%dummy}, %rd123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r883}, %rd123;
	}
	shf.r.wrap.b32 	%r884, %r883, %r882, 1;
	shf.r.wrap.b32 	%r885, %r882, %r883, 1;
	mov.b64 	%rd145, {%r885, %r884};
	shf.r.wrap.b32 	%r886, %r883, %r882, 8;
	shf.r.wrap.b32 	%r887, %r882, %r883, 8;
	mov.b64 	%rd146, {%r887, %r886};
	shr.u64 	%rd147, %rd123, 7;
	xor.b64  	%rd148, %rd145, %rd147;
	xor.b64  	%rd27, %rd148, %rd146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r888,%dummy}, %rd6;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r889}, %rd6;
	}
	shf.r.wrap.b32 	%r890, %r889, %r888, 19;
	shf.r.wrap.b32 	%r891, %r888, %r889, 19;
	mov.b64 	%rd149, {%r891, %r890};
	shf.l.wrap.b32 	%r892, %r888, %r889, 3;
	shf.l.wrap.b32 	%r893, %r889, %r888, 3;
	mov.b64 	%rd150, {%r893, %r892};
	shr.u64 	%rd151, %rd6, 6;
	xor.b64  	%rd152, %rd149, %rd151;
	xor.b64  	%rd153, %rd152, %rd150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd2;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 1;
	shf.r.wrap.b32 	%r897, %r894, %r895, 1;
	mov.b64 	%rd154, {%r897, %r896};
	shf.r.wrap.b32 	%r898, %r895, %r894, 8;
	shf.r.wrap.b32 	%r899, %r894, %r895, 8;
	mov.b64 	%rd155, {%r899, %r898};
	shr.u64 	%rd156, %rd2, 7;
	xor.b64  	%rd157, %rd154, %rd156;
	xor.b64  	%rd158, %rd157, %rd155;
	add.s64 	%rd159, %rd123, %rd153;
	add.s64 	%rd28, %rd159, %rd158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r900,%dummy}, %rd124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r901}, %rd124;
	}
	shf.r.wrap.b32 	%r902, %r901, %r900, 1;
	shf.r.wrap.b32 	%r903, %r900, %r901, 1;
	mov.b64 	%rd160, {%r903, %r902};
	shf.r.wrap.b32 	%r904, %r901, %r900, 8;
	shf.r.wrap.b32 	%r905, %r900, %r901, 8;
	mov.b64 	%rd161, {%r905, %r904};
	shr.u64 	%rd162, %rd124, 7;
	xor.b64  	%rd163, %rd160, %rd162;
	xor.b64  	%rd29, %rd163, %rd161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r906,%dummy}, %rd28;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r907}, %rd28;
	}
	shf.r.wrap.b32 	%r908, %r907, %r906, 19;
	shf.r.wrap.b32 	%r909, %r906, %r907, 19;
	mov.b64 	%rd164, {%r909, %r908};
	shf.l.wrap.b32 	%r910, %r906, %r907, 3;
	shf.l.wrap.b32 	%r911, %r907, %r906, 3;
	mov.b64 	%rd165, {%r911, %r910};
	shr.u64 	%rd166, %rd28, 6;
	xor.b64  	%rd167, %rd164, %rd166;
	xor.b64  	%rd168, %rd167, %rd165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r912,%dummy}, %rd3;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r913}, %rd3;
	}
	shf.r.wrap.b32 	%r914, %r913, %r912, 1;
	shf.r.wrap.b32 	%r915, %r912, %r913, 1;
	mov.b64 	%rd169, {%r915, %r914};
	shf.r.wrap.b32 	%r916, %r913, %r912, 8;
	shf.r.wrap.b32 	%r917, %r912, %r913, 8;
	mov.b64 	%rd170, {%r917, %r916};
	shr.u64 	%rd171, %rd3, 7;
	xor.b64  	%rd172, %rd169, %rd171;
	xor.b64  	%rd173, %rd172, %rd170;
	add.s64 	%rd174, %rd124, %rd168;
	add.s64 	%rd30, %rd174, %rd173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd4;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r919}, %rd4;
	}
	shf.r.wrap.b32 	%r920, %r919, %r918, 1;
	shf.r.wrap.b32 	%r921, %r918, %r919, 1;
	mov.b64 	%rd175, {%r921, %r920};
	shf.r.wrap.b32 	%r922, %r919, %r918, 8;
	shf.r.wrap.b32 	%r923, %r918, %r919, 8;
	mov.b64 	%rd176, {%r923, %r922};
	shr.u64 	%rd177, %rd4, 7;
	xor.b64  	%rd178, %rd175, %rd177;
	xor.b64  	%rd31, %rd178, %rd176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r924,%dummy}, %rd30;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd30;
	}
	shf.r.wrap.b32 	%r926, %r925, %r924, 19;
	shf.r.wrap.b32 	%r927, %r924, %r925, 19;
	mov.b64 	%rd179, {%r927, %r926};
	shf.l.wrap.b32 	%r928, %r924, %r925, 3;
	shf.l.wrap.b32 	%r929, %r925, %r924, 3;
	mov.b64 	%rd180, {%r929, %r928};
	shr.u64 	%rd181, %rd30, 6;
	xor.b64  	%rd182, %rd179, %rd181;
	xor.b64  	%rd183, %rd182, %rd180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r930,%dummy}, %rd5;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r931}, %rd5;
	}
	shf.r.wrap.b32 	%r932, %r931, %r930, 1;
	shf.r.wrap.b32 	%r933, %r930, %r931, 1;
	mov.b64 	%rd184, {%r933, %r932};
	shf.r.wrap.b32 	%r934, %r931, %r930, 8;
	shf.r.wrap.b32 	%r935, %r930, %r931, 8;
	mov.b64 	%rd185, {%r935, %r934};
	shr.u64 	%rd186, %rd5, 7;
	xor.b64  	%rd187, %rd184, %rd186;
	xor.b64  	%rd188, %rd187, %rd185;
	add.s64 	%rd189, %rd4, %rd183;
	add.s64 	%rd32, %rd189, %rd188;
	shf.r.wrap.b32 	%r936, %r876, %r877, 8;
	shf.r.wrap.b32 	%r937, %r877, %r876, 8;
	mov.b64 	%rd190, {%r937, %r936};
	shf.r.wrap.b32 	%r938, %r876, %r877, 1;
	shf.r.wrap.b32 	%r939, %r877, %r876, 1;
	mov.b64 	%rd191, {%r939, %r938};
	xor.b64  	%rd33, %rd191, %rd190;
	add.s64 	%rd34, %rd5, %rd6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r940,%dummy}, %rd32;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r941}, %rd32;
	}
	shf.r.wrap.b32 	%r942, %r941, %r940, 19;
	shf.r.wrap.b32 	%r943, %r940, %r941, 19;
	mov.b64 	%rd192, {%r943, %r942};
	shf.l.wrap.b32 	%r944, %r940, %r941, 3;
	shf.l.wrap.b32 	%r945, %r941, %r940, 3;
	mov.b64 	%rd193, {%r945, %r944};
	shr.u64 	%rd194, %rd32, 6;
	xor.b64  	%rd195, %rd192, %rd194;
	xor.b64  	%rd35, %rd195, %rd193;
	shf.r.wrap.b32 	%r946, %r889, %r888, 1;
	shf.r.wrap.b32 	%r947, %r888, %r889, 1;
	mov.b64 	%rd196, {%r947, %r946};
	shf.r.wrap.b32 	%r948, %r889, %r888, 8;
	shf.r.wrap.b32 	%r949, %r888, %r889, 8;
	mov.b64 	%rd197, {%r949, %r948};
	shr.u64 	%rd198, %rd6, 7;
	xor.b64  	%rd199, %rd196, %rd198;
	xor.b64  	%rd36, %rd199, %rd197;
	ld.const.u64 	%rd37, [k_sha512+128];
	ld.const.u64 	%rd38, [k_sha512+136];
	ld.const.u64 	%rd39, [k_sha512+144];
	ld.const.u64 	%rd40, [k_sha512+152];
	ld.const.u64 	%rd41, [k_sha512+160];
	ld.const.u64 	%rd42, [k_sha512+168];
	ld.const.u64 	%rd43, [k_sha512+176];
	ld.const.u64 	%rd44, [k_sha512+184];
	ld.const.u64 	%rd45, [k_sha512+192];
	ld.const.u64 	%rd46, [k_sha512+200];
	ld.const.u64 	%rd47, [k_sha512+208];
	ld.const.u64 	%rd48, [k_sha512+216];
	ld.const.u64 	%rd49, [k_sha512+224];
	ld.const.u64 	%rd50, [k_sha512+232];
	ld.const.u64 	%rd51, [k_sha512+240];
	ld.const.u64 	%rd52, [k_sha512+248];
	shf.r.wrap.b32 	%r950, %r907, %r906, 1;
	shf.r.wrap.b32 	%r951, %r906, %r907, 1;
	mov.b64 	%rd200, {%r951, %r950};
	shf.r.wrap.b32 	%r952, %r907, %r906, 8;
	shf.r.wrap.b32 	%r953, %r906, %r907, 8;
	mov.b64 	%rd201, {%r953, %r952};
	shr.u64 	%rd202, %rd28, 7;
	xor.b64  	%rd203, %rd200, %rd202;
	xor.b64  	%rd53, %rd203, %rd201;
	shf.r.wrap.b32 	%r954, %r925, %r924, 1;
	shf.r.wrap.b32 	%r955, %r924, %r925, 1;
	mov.b64 	%rd204, {%r955, %r954};
	shf.r.wrap.b32 	%r956, %r925, %r924, 8;
	shf.r.wrap.b32 	%r957, %r924, %r925, 8;
	mov.b64 	%rd205, {%r957, %r956};
	shr.u64 	%rd206, %rd30, 7;
	xor.b64  	%rd207, %rd204, %rd206;
	xor.b64  	%rd54, %rd207, %rd205;
	shf.r.wrap.b32 	%r958, %r941, %r940, 1;
	shf.r.wrap.b32 	%r959, %r940, %r941, 1;
	mov.b64 	%rd208, {%r959, %r958};
	shf.r.wrap.b32 	%r960, %r941, %r940, 8;
	shf.r.wrap.b32 	%r961, %r940, %r941, 8;
	mov.b64 	%rd209, {%r961, %r960};
	shr.u64 	%rd210, %rd32, 7;
	xor.b64  	%rd211, %rd208, %rd210;
	xor.b64  	%rd55, %rd211, %rd209;
	ld.const.u64 	%rd56, [k_sha512+256];
	ld.const.u64 	%rd57, [k_sha512+264];
	ld.const.u64 	%rd58, [k_sha512+272];
	ld.const.u64 	%rd59, [k_sha512+280];
	ld.const.u64 	%rd60, [k_sha512+288];
	ld.const.u64 	%rd61, [k_sha512+296];
	ld.const.u64 	%rd62, [k_sha512+304];
	ld.const.u64 	%rd63, [k_sha512+312];
	ld.const.u64 	%rd64, [k_sha512+320];
	ld.const.u64 	%rd65, [k_sha512+328];
	ld.const.u64 	%rd66, [k_sha512+336];
	ld.const.u64 	%rd67, [k_sha512+344];
	ld.const.u64 	%rd68, [k_sha512+352];
	ld.const.u64 	%rd69, [k_sha512+360];
	ld.const.u64 	%rd70, [k_sha512+368];
	ld.const.u64 	%rd71, [k_sha512+376];
	ld.const.u64 	%rd72, [k_sha512+384];
	ld.const.u64 	%rd73, [k_sha512+392];
	ld.const.u64 	%rd74, [k_sha512+400];
	ld.const.u64 	%rd75, [k_sha512+408];
	ld.const.u64 	%rd76, [k_sha512+416];
	ld.const.u64 	%rd77, [k_sha512+424];
	ld.const.u64 	%rd78, [k_sha512+432];
	ld.const.u64 	%rd79, [k_sha512+440];
	ld.const.u64 	%rd80, [k_sha512+448];
	ld.const.u64 	%rd81, [k_sha512+456];
	ld.const.u64 	%rd82, [k_sha512+464];
	ld.const.u64 	%rd83, [k_sha512+472];
	ld.const.u64 	%rd84, [k_sha512+480];
	ld.const.u64 	%rd85, [k_sha512+488];
	ld.const.u64 	%rd86, [k_sha512+496];
	ld.const.u64 	%rd87, [k_sha512+504];
	ld.const.u64 	%rd88, [k_sha512+512];
	ld.const.u64 	%rd89, [k_sha512+520];
	ld.const.u64 	%rd90, [k_sha512+528];
	ld.const.u64 	%rd91, [k_sha512+536];
	ld.const.u64 	%rd92, [k_sha512+544];
	ld.const.u64 	%rd93, [k_sha512+552];
	ld.const.u64 	%rd94, [k_sha512+560];
	ld.const.u64 	%rd95, [k_sha512+568];
	ld.const.u64 	%rd96, [k_sha512+576];
	ld.const.u64 	%rd97, [k_sha512+584];
	ld.const.u64 	%rd98, [k_sha512+592];
	ld.const.u64 	%rd99, [k_sha512+600];
	mov.u32 	%r2772, 0;
	ld.const.u64 	%rd100, [k_sha512+608];

BB2_45:
	ld.param.u64 	%rd2723, [m01710_m08_param_6];
	ld.param.u64 	%rd2722, [m01710_m08_param_3];
	mul.wide.u32 	%rd212, %r2772, 4;
	add.s64 	%rd213, %rd2722, %rd212;
	ld.global.u32 	%r962, [%rd213];
	or.b32  	%r963, %r162, %r962;
	mov.b64	%rd214, {%r163, %r963};
	add.s64 	%rd215, %rd7, %rd214;
	add.s64 	%rd216, %rd215, %rd8;
	add.s64 	%rd217, %rd216, -4263291710961585108;
	add.s64 	%rd218, %rd216, %rd9;
	add.s64 	%rd219, %rd218, 6482280703085258342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r964,%dummy}, %rd217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r965}, %rd217;
	}
	shf.r.wrap.b32 	%r966, %r965, %r964, 14;
	shf.r.wrap.b32 	%r967, %r964, %r965, 14;
	mov.b64 	%rd220, {%r967, %r966};
	shf.r.wrap.b32 	%r968, %r965, %r964, 18;
	shf.r.wrap.b32 	%r969, %r964, %r965, 18;
	mov.b64 	%rd221, {%r969, %r968};
	xor.b64  	%rd222, %rd221, %rd220;
	shf.l.wrap.b32 	%r970, %r964, %r965, 23;
	shf.l.wrap.b32 	%r971, %r965, %r964, 23;
	mov.b64 	%rd223, {%r971, %r970};
	xor.b64  	%rd224, %rd222, %rd223;
	and.b64  	%rd225, %rd217, -3887949035690463538;
	xor.b64  	%rd226, %rd225, -7276294671716946913;
	add.s64 	%rd227, %rd10, %rd226;
	add.s64 	%rd228, %rd227, %rd224;
	add.s64 	%rd229, %rd228, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd219;
	}
	shf.r.wrap.b32 	%r974, %r973, %r972, 28;
	shf.r.wrap.b32 	%r975, %r972, %r973, 28;
	mov.b64 	%rd230, {%r975, %r974};
	shf.l.wrap.b32 	%r976, %r972, %r973, 30;
	shf.l.wrap.b32 	%r977, %r973, %r972, 30;
	mov.b64 	%rd231, {%r977, %r976};
	xor.b64  	%rd232, %rd231, %rd230;
	shf.l.wrap.b32 	%r978, %r972, %r973, 25;
	shf.l.wrap.b32 	%r979, %r973, %r972, 25;
	mov.b64 	%rd233, {%r979, %r978};
	xor.b64  	%rd234, %rd232, %rd233;
	xor.b64  	%rd235, %rd219, -4942790177534073029;
	xor.b64  	%rd236, %rd219, 7640891576956012808;
	and.b64  	%rd237, %rd236, %rd235;
	xor.b64  	%rd238, %rd237, %rd219;
	add.s64 	%rd239, %rd228, %rd238;
	add.s64 	%rd240, %rd239, %rd234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r980,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r981}, %rd229;
	}
	shf.r.wrap.b32 	%r982, %r981, %r980, 14;
	shf.r.wrap.b32 	%r983, %r980, %r981, 14;
	mov.b64 	%rd241, {%r983, %r982};
	shf.r.wrap.b32 	%r984, %r981, %r980, 18;
	shf.r.wrap.b32 	%r985, %r980, %r981, 18;
	mov.b64 	%rd242, {%r985, %r984};
	xor.b64  	%rd243, %rd242, %rd241;
	shf.l.wrap.b32 	%r986, %r980, %r981, 23;
	shf.l.wrap.b32 	%r987, %r981, %r980, 23;
	mov.b64 	%rd244, {%r987, %r986};
	xor.b64  	%rd245, %rd243, %rd244;
	xor.b64  	%rd246, %rd217, 5840696475078001361;
	and.b64  	%rd247, %rd229, %rd246;
	xor.b64  	%rd248, %rd247, 5840696475078001361;
	add.s64 	%rd249, %rd11, %rd248;
	add.s64 	%rd250, %rd249, %rd245;
	add.s64 	%rd251, %rd250, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd240;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 28;
	shf.r.wrap.b32 	%r991, %r988, %r989, 28;
	mov.b64 	%rd252, {%r991, %r990};
	shf.l.wrap.b32 	%r992, %r988, %r989, 30;
	shf.l.wrap.b32 	%r993, %r989, %r988, 30;
	mov.b64 	%rd253, {%r993, %r992};
	xor.b64  	%rd254, %rd253, %rd252;
	shf.l.wrap.b32 	%r994, %r988, %r989, 25;
	shf.l.wrap.b32 	%r995, %r989, %r988, 25;
	mov.b64 	%rd255, {%r995, %r994};
	xor.b64  	%rd256, %rd254, %rd255;
	xor.b64  	%rd257, %rd240, 7640891576956012808;
	xor.b64  	%rd258, %rd240, %rd219;
	and.b64  	%rd259, %rd258, %rd257;
	xor.b64  	%rd260, %rd259, %rd240;
	add.s64 	%rd261, %rd250, %rd260;
	add.s64 	%rd262, %rd261, %rd256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r996,%dummy}, %rd251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r997}, %rd251;
	}
	shf.r.wrap.b32 	%r998, %r997, %r996, 14;
	shf.r.wrap.b32 	%r999, %r996, %r997, 14;
	mov.b64 	%rd263, {%r999, %r998};
	shf.r.wrap.b32 	%r1000, %r997, %r996, 18;
	shf.r.wrap.b32 	%r1001, %r996, %r997, 18;
	mov.b64 	%rd264, {%r1001, %r1000};
	xor.b64  	%rd265, %rd264, %rd263;
	shf.l.wrap.b32 	%r1002, %r996, %r997, 23;
	shf.l.wrap.b32 	%r1003, %r997, %r996, 23;
	mov.b64 	%rd266, {%r1003, %r1002};
	xor.b64  	%rd267, %rd265, %rd266;
	xor.b64  	%rd268, %rd229, %rd217;
	and.b64  	%rd269, %rd251, %rd268;
	xor.b64  	%rd270, %rd269, %rd217;
	add.s64 	%rd271, %rd12, %rd270;
	add.s64 	%rd272, %rd271, %rd267;
	add.s64 	%rd273, %rd272, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1004,%dummy}, %rd262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd262;
	}
	shf.r.wrap.b32 	%r1006, %r1005, %r1004, 28;
	shf.r.wrap.b32 	%r1007, %r1004, %r1005, 28;
	mov.b64 	%rd274, {%r1007, %r1006};
	shf.l.wrap.b32 	%r1008, %r1004, %r1005, 30;
	shf.l.wrap.b32 	%r1009, %r1005, %r1004, 30;
	mov.b64 	%rd275, {%r1009, %r1008};
	xor.b64  	%rd276, %rd275, %rd274;
	shf.l.wrap.b32 	%r1010, %r1004, %r1005, 25;
	shf.l.wrap.b32 	%r1011, %r1005, %r1004, 25;
	mov.b64 	%rd277, {%r1011, %r1010};
	xor.b64  	%rd278, %rd276, %rd277;
	xor.b64  	%rd279, %rd262, %rd219;
	xor.b64  	%rd280, %rd262, %rd240;
	and.b64  	%rd281, %rd280, %rd279;
	xor.b64  	%rd282, %rd281, %rd262;
	add.s64 	%rd283, %rd272, %rd282;
	add.s64 	%rd284, %rd283, %rd278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1012,%dummy}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1013}, %rd273;
	}
	shf.r.wrap.b32 	%r1014, %r1013, %r1012, 14;
	shf.r.wrap.b32 	%r1015, %r1012, %r1013, 14;
	mov.b64 	%rd285, {%r1015, %r1014};
	shf.r.wrap.b32 	%r1016, %r1013, %r1012, 18;
	shf.r.wrap.b32 	%r1017, %r1012, %r1013, 18;
	mov.b64 	%rd286, {%r1017, %r1016};
	xor.b64  	%rd287, %rd286, %rd285;
	shf.l.wrap.b32 	%r1018, %r1012, %r1013, 23;
	shf.l.wrap.b32 	%r1019, %r1013, %r1012, 23;
	mov.b64 	%rd288, {%r1019, %r1018};
	xor.b64  	%rd289, %rd287, %rd288;
	xor.b64  	%rd290, %rd251, %rd229;
	and.b64  	%rd291, %rd273, %rd290;
	xor.b64  	%rd292, %rd291, %rd229;
	add.s64 	%rd293, %rd217, %rd3;
	add.s64 	%rd294, %rd293, %rd13;
	add.s64 	%rd295, %rd294, %rd292;
	add.s64 	%rd296, %rd295, %rd289;
	add.s64 	%rd297, %rd296, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1020,%dummy}, %rd284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1021}, %rd284;
	}
	shf.r.wrap.b32 	%r1022, %r1021, %r1020, 28;
	shf.r.wrap.b32 	%r1023, %r1020, %r1021, 28;
	mov.b64 	%rd298, {%r1023, %r1022};
	shf.l.wrap.b32 	%r1024, %r1020, %r1021, 30;
	shf.l.wrap.b32 	%r1025, %r1021, %r1020, 30;
	mov.b64 	%rd299, {%r1025, %r1024};
	xor.b64  	%rd300, %rd299, %rd298;
	shf.l.wrap.b32 	%r1026, %r1020, %r1021, 25;
	shf.l.wrap.b32 	%r1027, %r1021, %r1020, 25;
	mov.b64 	%rd301, {%r1027, %r1026};
	xor.b64  	%rd302, %rd300, %rd301;
	xor.b64  	%rd303, %rd284, %rd240;
	xor.b64  	%rd304, %rd284, %rd262;
	and.b64  	%rd305, %rd304, %rd303;
	xor.b64  	%rd306, %rd305, %rd284;
	add.s64 	%rd307, %rd296, %rd306;
	add.s64 	%rd308, %rd307, %rd302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1028,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1029}, %rd297;
	}
	shf.r.wrap.b32 	%r1030, %r1029, %r1028, 14;
	shf.r.wrap.b32 	%r1031, %r1028, %r1029, 14;
	mov.b64 	%rd309, {%r1031, %r1030};
	shf.r.wrap.b32 	%r1032, %r1029, %r1028, 18;
	shf.r.wrap.b32 	%r1033, %r1028, %r1029, 18;
	mov.b64 	%rd310, {%r1033, %r1032};
	xor.b64  	%rd311, %rd310, %rd309;
	shf.l.wrap.b32 	%r1034, %r1028, %r1029, 23;
	shf.l.wrap.b32 	%r1035, %r1029, %r1028, 23;
	mov.b64 	%rd312, {%r1035, %r1034};
	xor.b64  	%rd313, %rd311, %rd312;
	xor.b64  	%rd314, %rd273, %rd251;
	and.b64  	%rd315, %rd297, %rd314;
	xor.b64  	%rd316, %rd315, %rd251;
	add.s64 	%rd317, %rd229, %rd4;
	add.s64 	%rd318, %rd317, %rd14;
	add.s64 	%rd319, %rd318, %rd316;
	add.s64 	%rd320, %rd319, %rd313;
	add.s64 	%rd321, %rd320, %rd240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1036,%dummy}, %rd308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1037}, %rd308;
	}
	shf.r.wrap.b32 	%r1038, %r1037, %r1036, 28;
	shf.r.wrap.b32 	%r1039, %r1036, %r1037, 28;
	mov.b64 	%rd322, {%r1039, %r1038};
	shf.l.wrap.b32 	%r1040, %r1036, %r1037, 30;
	shf.l.wrap.b32 	%r1041, %r1037, %r1036, 30;
	mov.b64 	%rd323, {%r1041, %r1040};
	xor.b64  	%rd324, %rd323, %rd322;
	shf.l.wrap.b32 	%r1042, %r1036, %r1037, 25;
	shf.l.wrap.b32 	%r1043, %r1037, %r1036, 25;
	mov.b64 	%rd325, {%r1043, %r1042};
	xor.b64  	%rd326, %rd324, %rd325;
	xor.b64  	%rd327, %rd308, %rd262;
	xor.b64  	%rd328, %rd308, %rd284;
	and.b64  	%rd329, %rd328, %rd327;
	xor.b64  	%rd330, %rd329, %rd308;
	add.s64 	%rd331, %rd320, %rd330;
	add.s64 	%rd332, %rd331, %rd326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1044,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1045}, %rd321;
	}
	shf.r.wrap.b32 	%r1046, %r1045, %r1044, 14;
	shf.r.wrap.b32 	%r1047, %r1044, %r1045, 14;
	mov.b64 	%rd333, {%r1047, %r1046};
	shf.r.wrap.b32 	%r1048, %r1045, %r1044, 18;
	shf.r.wrap.b32 	%r1049, %r1044, %r1045, 18;
	mov.b64 	%rd334, {%r1049, %r1048};
	xor.b64  	%rd335, %rd334, %rd333;
	shf.l.wrap.b32 	%r1050, %r1044, %r1045, 23;
	shf.l.wrap.b32 	%r1051, %r1045, %r1044, 23;
	mov.b64 	%rd336, {%r1051, %r1050};
	xor.b64  	%rd337, %rd335, %rd336;
	xor.b64  	%rd338, %rd297, %rd273;
	and.b64  	%rd339, %rd321, %rd338;
	xor.b64  	%rd340, %rd339, %rd273;
	add.s64 	%rd341, %rd251, %rd5;
	add.s64 	%rd342, %rd341, %rd15;
	add.s64 	%rd343, %rd342, %rd340;
	add.s64 	%rd344, %rd343, %rd337;
	add.s64 	%rd345, %rd344, %rd262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1052,%dummy}, %rd332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1053}, %rd332;
	}
	shf.r.wrap.b32 	%r1054, %r1053, %r1052, 28;
	shf.r.wrap.b32 	%r1055, %r1052, %r1053, 28;
	mov.b64 	%rd346, {%r1055, %r1054};
	shf.l.wrap.b32 	%r1056, %r1052, %r1053, 30;
	shf.l.wrap.b32 	%r1057, %r1053, %r1052, 30;
	mov.b64 	%rd347, {%r1057, %r1056};
	xor.b64  	%rd348, %rd347, %rd346;
	shf.l.wrap.b32 	%r1058, %r1052, %r1053, 25;
	shf.l.wrap.b32 	%r1059, %r1053, %r1052, 25;
	mov.b64 	%rd349, {%r1059, %r1058};
	xor.b64  	%rd350, %rd348, %rd349;
	xor.b64  	%rd351, %rd332, %rd284;
	xor.b64  	%rd352, %rd332, %rd308;
	and.b64  	%rd353, %rd352, %rd351;
	xor.b64  	%rd354, %rd353, %rd332;
	add.s64 	%rd355, %rd344, %rd354;
	add.s64 	%rd356, %rd355, %rd350;
	add.s64 	%rd357, %rd16, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1060,%dummy}, %rd345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1061}, %rd345;
	}
	shf.r.wrap.b32 	%r1062, %r1061, %r1060, 14;
	shf.r.wrap.b32 	%r1063, %r1060, %r1061, 14;
	mov.b64 	%rd358, {%r1063, %r1062};
	shf.r.wrap.b32 	%r1064, %r1061, %r1060, 18;
	shf.r.wrap.b32 	%r1065, %r1060, %r1061, 18;
	mov.b64 	%rd359, {%r1065, %r1064};
	xor.b64  	%rd360, %rd359, %rd358;
	shf.l.wrap.b32 	%r1066, %r1060, %r1061, 23;
	shf.l.wrap.b32 	%r1067, %r1061, %r1060, 23;
	mov.b64 	%rd361, {%r1067, %r1066};
	xor.b64  	%rd362, %rd360, %rd361;
	xor.b64  	%rd363, %rd321, %rd297;
	and.b64  	%rd364, %rd345, %rd363;
	xor.b64  	%rd365, %rd364, %rd297;
	add.s64 	%rd366, %rd357, %rd365;
	add.s64 	%rd367, %rd366, %rd362;
	add.s64 	%rd368, %rd367, %rd284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1068,%dummy}, %rd356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1069}, %rd356;
	}
	shf.r.wrap.b32 	%r1070, %r1069, %r1068, 28;
	shf.r.wrap.b32 	%r1071, %r1068, %r1069, 28;
	mov.b64 	%rd369, {%r1071, %r1070};
	shf.l.wrap.b32 	%r1072, %r1068, %r1069, 30;
	shf.l.wrap.b32 	%r1073, %r1069, %r1068, 30;
	mov.b64 	%rd370, {%r1073, %r1072};
	xor.b64  	%rd371, %rd370, %rd369;
	shf.l.wrap.b32 	%r1074, %r1068, %r1069, 25;
	shf.l.wrap.b32 	%r1075, %r1069, %r1068, 25;
	mov.b64 	%rd372, {%r1075, %r1074};
	xor.b64  	%rd373, %rd371, %rd372;
	xor.b64  	%rd374, %rd356, %rd308;
	xor.b64  	%rd375, %rd356, %rd332;
	and.b64  	%rd376, %rd375, %rd374;
	xor.b64  	%rd377, %rd376, %rd356;
	add.s64 	%rd378, %rd367, %rd377;
	add.s64 	%rd379, %rd378, %rd373;
	add.s64 	%rd380, %rd17, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1076,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd368;
	}
	shf.r.wrap.b32 	%r1078, %r1077, %r1076, 14;
	shf.r.wrap.b32 	%r1079, %r1076, %r1077, 14;
	mov.b64 	%rd381, {%r1079, %r1078};
	shf.r.wrap.b32 	%r1080, %r1077, %r1076, 18;
	shf.r.wrap.b32 	%r1081, %r1076, %r1077, 18;
	mov.b64 	%rd382, {%r1081, %r1080};
	xor.b64  	%rd383, %rd382, %rd381;
	shf.l.wrap.b32 	%r1082, %r1076, %r1077, 23;
	shf.l.wrap.b32 	%r1083, %r1077, %r1076, 23;
	mov.b64 	%rd384, {%r1083, %r1082};
	xor.b64  	%rd385, %rd383, %rd384;
	xor.b64  	%rd386, %rd345, %rd321;
	and.b64  	%rd387, %rd368, %rd386;
	xor.b64  	%rd388, %rd387, %rd321;
	add.s64 	%rd389, %rd380, %rd388;
	add.s64 	%rd390, %rd389, %rd385;
	add.s64 	%rd391, %rd390, %rd308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1084,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1085}, %rd379;
	}
	shf.r.wrap.b32 	%r1086, %r1085, %r1084, 28;
	shf.r.wrap.b32 	%r1087, %r1084, %r1085, 28;
	mov.b64 	%rd392, {%r1087, %r1086};
	shf.l.wrap.b32 	%r1088, %r1084, %r1085, 30;
	shf.l.wrap.b32 	%r1089, %r1085, %r1084, 30;
	mov.b64 	%rd393, {%r1089, %r1088};
	xor.b64  	%rd394, %rd393, %rd392;
	shf.l.wrap.b32 	%r1090, %r1084, %r1085, 25;
	shf.l.wrap.b32 	%r1091, %r1085, %r1084, 25;
	mov.b64 	%rd395, {%r1091, %r1090};
	xor.b64  	%rd396, %rd394, %rd395;
	xor.b64  	%rd397, %rd379, %rd332;
	xor.b64  	%rd398, %rd379, %rd356;
	and.b64  	%rd399, %rd398, %rd397;
	xor.b64  	%rd400, %rd399, %rd379;
	add.s64 	%rd401, %rd390, %rd400;
	add.s64 	%rd402, %rd401, %rd396;
	add.s64 	%rd403, %rd18, %rd321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1092,%dummy}, %rd391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd391;
	}
	shf.r.wrap.b32 	%r1094, %r1093, %r1092, 14;
	shf.r.wrap.b32 	%r1095, %r1092, %r1093, 14;
	mov.b64 	%rd404, {%r1095, %r1094};
	shf.r.wrap.b32 	%r1096, %r1093, %r1092, 18;
	shf.r.wrap.b32 	%r1097, %r1092, %r1093, 18;
	mov.b64 	%rd405, {%r1097, %r1096};
	xor.b64  	%rd406, %rd405, %rd404;
	shf.l.wrap.b32 	%r1098, %r1092, %r1093, 23;
	shf.l.wrap.b32 	%r1099, %r1093, %r1092, 23;
	mov.b64 	%rd407, {%r1099, %r1098};
	xor.b64  	%rd408, %rd406, %rd407;
	xor.b64  	%rd409, %rd368, %rd345;
	and.b64  	%rd410, %rd391, %rd409;
	xor.b64  	%rd411, %rd410, %rd345;
	add.s64 	%rd412, %rd403, %rd411;
	add.s64 	%rd413, %rd412, %rd408;
	add.s64 	%rd414, %rd413, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1100,%dummy}, %rd402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1101}, %rd402;
	}
	shf.r.wrap.b32 	%r1102, %r1101, %r1100, 28;
	shf.r.wrap.b32 	%r1103, %r1100, %r1101, 28;
	mov.b64 	%rd415, {%r1103, %r1102};
	shf.l.wrap.b32 	%r1104, %r1100, %r1101, 30;
	shf.l.wrap.b32 	%r1105, %r1101, %r1100, 30;
	mov.b64 	%rd416, {%r1105, %r1104};
	xor.b64  	%rd417, %rd416, %rd415;
	shf.l.wrap.b32 	%r1106, %r1100, %r1101, 25;
	shf.l.wrap.b32 	%r1107, %r1101, %r1100, 25;
	mov.b64 	%rd418, {%r1107, %r1106};
	xor.b64  	%rd419, %rd417, %rd418;
	xor.b64  	%rd420, %rd402, %rd356;
	xor.b64  	%rd421, %rd402, %rd379;
	and.b64  	%rd422, %rd421, %rd420;
	xor.b64  	%rd423, %rd422, %rd402;
	add.s64 	%rd424, %rd413, %rd423;
	add.s64 	%rd425, %rd424, %rd419;
	add.s64 	%rd426, %rd19, %rd345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1108,%dummy}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1109}, %rd414;
	}
	shf.r.wrap.b32 	%r1110, %r1109, %r1108, 14;
	shf.r.wrap.b32 	%r1111, %r1108, %r1109, 14;
	mov.b64 	%rd427, {%r1111, %r1110};
	shf.r.wrap.b32 	%r1112, %r1109, %r1108, 18;
	shf.r.wrap.b32 	%r1113, %r1108, %r1109, 18;
	mov.b64 	%rd428, {%r1113, %r1112};
	xor.b64  	%rd429, %rd428, %rd427;
	shf.l.wrap.b32 	%r1114, %r1108, %r1109, 23;
	shf.l.wrap.b32 	%r1115, %r1109, %r1108, 23;
	mov.b64 	%rd430, {%r1115, %r1114};
	xor.b64  	%rd431, %rd429, %rd430;
	xor.b64  	%rd432, %rd391, %rd368;
	and.b64  	%rd433, %rd414, %rd432;
	xor.b64  	%rd434, %rd433, %rd368;
	add.s64 	%rd435, %rd426, %rd434;
	add.s64 	%rd436, %rd435, %rd431;
	add.s64 	%rd437, %rd436, %rd356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1116,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1117}, %rd425;
	}
	shf.r.wrap.b32 	%r1118, %r1117, %r1116, 28;
	shf.r.wrap.b32 	%r1119, %r1116, %r1117, 28;
	mov.b64 	%rd438, {%r1119, %r1118};
	shf.l.wrap.b32 	%r1120, %r1116, %r1117, 30;
	shf.l.wrap.b32 	%r1121, %r1117, %r1116, 30;
	mov.b64 	%rd439, {%r1121, %r1120};
	xor.b64  	%rd440, %rd439, %rd438;
	shf.l.wrap.b32 	%r1122, %r1116, %r1117, 25;
	shf.l.wrap.b32 	%r1123, %r1117, %r1116, 25;
	mov.b64 	%rd441, {%r1123, %r1122};
	xor.b64  	%rd442, %rd440, %rd441;
	xor.b64  	%rd443, %rd425, %rd379;
	xor.b64  	%rd444, %rd425, %rd402;
	and.b64  	%rd445, %rd444, %rd443;
	xor.b64  	%rd446, %rd445, %rd425;
	add.s64 	%rd447, %rd436, %rd446;
	add.s64 	%rd448, %rd447, %rd442;
	add.s64 	%rd449, %rd20, %rd368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1124,%dummy}, %rd437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1125}, %rd437;
	}
	shf.r.wrap.b32 	%r1126, %r1125, %r1124, 14;
	shf.r.wrap.b32 	%r1127, %r1124, %r1125, 14;
	mov.b64 	%rd450, {%r1127, %r1126};
	shf.r.wrap.b32 	%r1128, %r1125, %r1124, 18;
	shf.r.wrap.b32 	%r1129, %r1124, %r1125, 18;
	mov.b64 	%rd451, {%r1129, %r1128};
	xor.b64  	%rd452, %rd451, %rd450;
	shf.l.wrap.b32 	%r1130, %r1124, %r1125, 23;
	shf.l.wrap.b32 	%r1131, %r1125, %r1124, 23;
	mov.b64 	%rd453, {%r1131, %r1130};
	xor.b64  	%rd454, %rd452, %rd453;
	xor.b64  	%rd455, %rd414, %rd391;
	and.b64  	%rd456, %rd437, %rd455;
	xor.b64  	%rd457, %rd456, %rd391;
	add.s64 	%rd458, %rd449, %rd457;
	add.s64 	%rd459, %rd458, %rd454;
	add.s64 	%rd460, %rd459, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1132,%dummy}, %rd448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1133}, %rd448;
	}
	shf.r.wrap.b32 	%r1134, %r1133, %r1132, 28;
	shf.r.wrap.b32 	%r1135, %r1132, %r1133, 28;
	mov.b64 	%rd461, {%r1135, %r1134};
	shf.l.wrap.b32 	%r1136, %r1132, %r1133, 30;
	shf.l.wrap.b32 	%r1137, %r1133, %r1132, 30;
	mov.b64 	%rd462, {%r1137, %r1136};
	xor.b64  	%rd463, %rd462, %rd461;
	shf.l.wrap.b32 	%r1138, %r1132, %r1133, 25;
	shf.l.wrap.b32 	%r1139, %r1133, %r1132, 25;
	mov.b64 	%rd464, {%r1139, %r1138};
	xor.b64  	%rd465, %rd463, %rd464;
	xor.b64  	%rd466, %rd448, %rd402;
	xor.b64  	%rd467, %rd448, %rd425;
	and.b64  	%rd468, %rd467, %rd466;
	xor.b64  	%rd469, %rd468, %rd448;
	add.s64 	%rd470, %rd459, %rd469;
	add.s64 	%rd471, %rd470, %rd465;
	add.s64 	%rd472, %rd21, %rd391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1140,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1141}, %rd460;
	}
	shf.r.wrap.b32 	%r1142, %r1141, %r1140, 14;
	shf.r.wrap.b32 	%r1143, %r1140, %r1141, 14;
	mov.b64 	%rd473, {%r1143, %r1142};
	shf.r.wrap.b32 	%r1144, %r1141, %r1140, 18;
	shf.r.wrap.b32 	%r1145, %r1140, %r1141, 18;
	mov.b64 	%rd474, {%r1145, %r1144};
	xor.b64  	%rd475, %rd474, %rd473;
	shf.l.wrap.b32 	%r1146, %r1140, %r1141, 23;
	shf.l.wrap.b32 	%r1147, %r1141, %r1140, 23;
	mov.b64 	%rd476, {%r1147, %r1146};
	xor.b64  	%rd477, %rd475, %rd476;
	xor.b64  	%rd478, %rd437, %rd414;
	and.b64  	%rd479, %rd460, %rd478;
	xor.b64  	%rd480, %rd479, %rd414;
	add.s64 	%rd481, %rd472, %rd480;
	add.s64 	%rd482, %rd481, %rd477;
	add.s64 	%rd483, %rd482, %rd402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1148,%dummy}, %rd471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd471;
	}
	shf.r.wrap.b32 	%r1150, %r1149, %r1148, 28;
	shf.r.wrap.b32 	%r1151, %r1148, %r1149, 28;
	mov.b64 	%rd484, {%r1151, %r1150};
	shf.l.wrap.b32 	%r1152, %r1148, %r1149, 30;
	shf.l.wrap.b32 	%r1153, %r1149, %r1148, 30;
	mov.b64 	%rd485, {%r1153, %r1152};
	xor.b64  	%rd486, %rd485, %rd484;
	shf.l.wrap.b32 	%r1154, %r1148, %r1149, 25;
	shf.l.wrap.b32 	%r1155, %r1149, %r1148, 25;
	mov.b64 	%rd487, {%r1155, %r1154};
	xor.b64  	%rd488, %rd486, %rd487;
	xor.b64  	%rd489, %rd471, %rd425;
	xor.b64  	%rd490, %rd471, %rd448;
	and.b64  	%rd491, %rd490, %rd489;
	xor.b64  	%rd492, %rd491, %rd471;
	add.s64 	%rd493, %rd482, %rd492;
	add.s64 	%rd494, %rd493, %rd488;
	add.s64 	%rd495, %rd22, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1156,%dummy}, %rd483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1157}, %rd483;
	}
	shf.r.wrap.b32 	%r1158, %r1157, %r1156, 14;
	shf.r.wrap.b32 	%r1159, %r1156, %r1157, 14;
	mov.b64 	%rd496, {%r1159, %r1158};
	shf.r.wrap.b32 	%r1160, %r1157, %r1156, 18;
	shf.r.wrap.b32 	%r1161, %r1156, %r1157, 18;
	mov.b64 	%rd497, {%r1161, %r1160};
	xor.b64  	%rd498, %rd497, %rd496;
	shf.l.wrap.b32 	%r1162, %r1156, %r1157, 23;
	shf.l.wrap.b32 	%r1163, %r1157, %r1156, 23;
	mov.b64 	%rd499, {%r1163, %r1162};
	xor.b64  	%rd500, %rd498, %rd499;
	xor.b64  	%rd501, %rd460, %rd437;
	and.b64  	%rd502, %rd483, %rd501;
	xor.b64  	%rd503, %rd502, %rd437;
	add.s64 	%rd504, %rd495, %rd503;
	add.s64 	%rd505, %rd504, %rd500;
	add.s64 	%rd506, %rd505, %rd425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1164,%dummy}, %rd494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1165}, %rd494;
	}
	shf.r.wrap.b32 	%r1166, %r1165, %r1164, 28;
	shf.r.wrap.b32 	%r1167, %r1164, %r1165, 28;
	mov.b64 	%rd507, {%r1167, %r1166};
	shf.l.wrap.b32 	%r1168, %r1164, %r1165, 30;
	shf.l.wrap.b32 	%r1169, %r1165, %r1164, 30;
	mov.b64 	%rd508, {%r1169, %r1168};
	xor.b64  	%rd509, %rd508, %rd507;
	shf.l.wrap.b32 	%r1170, %r1164, %r1165, 25;
	shf.l.wrap.b32 	%r1171, %r1165, %r1164, 25;
	mov.b64 	%rd510, {%r1171, %r1170};
	xor.b64  	%rd511, %rd509, %rd510;
	xor.b64  	%rd512, %rd494, %rd448;
	xor.b64  	%rd513, %rd494, %rd471;
	and.b64  	%rd514, %rd513, %rd512;
	xor.b64  	%rd515, %rd514, %rd494;
	add.s64 	%rd516, %rd505, %rd515;
	add.s64 	%rd517, %rd516, %rd511;
	add.s64 	%rd518, %rd23, %rd437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1172,%dummy}, %rd506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1173}, %rd506;
	}
	shf.r.wrap.b32 	%r1174, %r1173, %r1172, 14;
	shf.r.wrap.b32 	%r1175, %r1172, %r1173, 14;
	mov.b64 	%rd519, {%r1175, %r1174};
	shf.r.wrap.b32 	%r1176, %r1173, %r1172, 18;
	shf.r.wrap.b32 	%r1177, %r1172, %r1173, 18;
	mov.b64 	%rd520, {%r1177, %r1176};
	xor.b64  	%rd521, %rd520, %rd519;
	shf.l.wrap.b32 	%r1178, %r1172, %r1173, 23;
	shf.l.wrap.b32 	%r1179, %r1173, %r1172, 23;
	mov.b64 	%rd522, {%r1179, %r1178};
	xor.b64  	%rd523, %rd521, %rd522;
	xor.b64  	%rd524, %rd483, %rd460;
	and.b64  	%rd525, %rd506, %rd524;
	xor.b64  	%rd526, %rd525, %rd460;
	add.s64 	%rd527, %rd518, %rd526;
	add.s64 	%rd528, %rd527, %rd523;
	add.s64 	%rd529, %rd528, %rd448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1180,%dummy}, %rd517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1181}, %rd517;
	}
	shf.r.wrap.b32 	%r1182, %r1181, %r1180, 28;
	shf.r.wrap.b32 	%r1183, %r1180, %r1181, 28;
	mov.b64 	%rd530, {%r1183, %r1182};
	shf.l.wrap.b32 	%r1184, %r1180, %r1181, 30;
	shf.l.wrap.b32 	%r1185, %r1181, %r1180, 30;
	mov.b64 	%rd531, {%r1185, %r1184};
	xor.b64  	%rd532, %rd531, %rd530;
	shf.l.wrap.b32 	%r1186, %r1180, %r1181, 25;
	shf.l.wrap.b32 	%r1187, %r1181, %r1180, 25;
	mov.b64 	%rd533, {%r1187, %r1186};
	xor.b64  	%rd534, %rd532, %rd533;
	xor.b64  	%rd535, %rd517, %rd471;
	xor.b64  	%rd536, %rd517, %rd494;
	and.b64  	%rd537, %rd536, %rd535;
	xor.b64  	%rd538, %rd537, %rd517;
	add.s64 	%rd539, %rd528, %rd538;
	add.s64 	%rd540, %rd539, %rd534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1188,%dummy}, %rd529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1189}, %rd529;
	}
	shf.r.wrap.b32 	%r1190, %r1189, %r1188, 14;
	shf.r.wrap.b32 	%r1191, %r1188, %r1189, 14;
	mov.b64 	%rd541, {%r1191, %r1190};
	shf.r.wrap.b32 	%r1192, %r1189, %r1188, 18;
	shf.r.wrap.b32 	%r1193, %r1188, %r1189, 18;
	mov.b64 	%rd542, {%r1193, %r1192};
	xor.b64  	%rd543, %rd542, %rd541;
	shf.l.wrap.b32 	%r1194, %r1188, %r1189, 23;
	shf.l.wrap.b32 	%r1195, %r1189, %r1188, 23;
	mov.b64 	%rd544, {%r1195, %r1194};
	xor.b64  	%rd545, %rd543, %rd544;
	xor.b64  	%rd546, %rd506, %rd483;
	and.b64  	%rd547, %rd529, %rd546;
	xor.b64  	%rd548, %rd547, %rd483;
	add.s64 	%rd549, %rd460, %rd6;
	add.s64 	%rd550, %rd549, %rd24;
	add.s64 	%rd551, %rd550, %rd548;
	add.s64 	%rd552, %rd551, %rd545;
	add.s64 	%rd553, %rd552, %rd471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1196,%dummy}, %rd540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd540;
	}
	shf.r.wrap.b32 	%r1198, %r1197, %r1196, 28;
	shf.r.wrap.b32 	%r1199, %r1196, %r1197, 28;
	mov.b64 	%rd554, {%r1199, %r1198};
	shf.l.wrap.b32 	%r1200, %r1196, %r1197, 30;
	shf.l.wrap.b32 	%r1201, %r1197, %r1196, 30;
	mov.b64 	%rd555, {%r1201, %r1200};
	xor.b64  	%rd556, %rd555, %rd554;
	shf.l.wrap.b32 	%r1202, %r1196, %r1197, 25;
	shf.l.wrap.b32 	%r1203, %r1197, %r1196, 25;
	mov.b64 	%rd557, {%r1203, %r1202};
	xor.b64  	%rd558, %rd556, %rd557;
	xor.b64  	%rd559, %rd540, %rd494;
	xor.b64  	%rd560, %rd540, %rd517;
	and.b64  	%rd561, %rd560, %rd559;
	xor.b64  	%rd562, %rd561, %rd540;
	add.s64 	%rd563, %rd552, %rd562;
	add.s64 	%rd564, %rd563, %rd558;
	add.s64 	%rd565, %rd214, %rd26;
	add.s64 	%rd566, %rd565, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1204,%dummy}, %rd566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1205}, %rd566;
	}
	shf.r.wrap.b32 	%r1206, %r1205, %r1204, 19;
	shf.r.wrap.b32 	%r1207, %r1204, %r1205, 19;
	mov.b64 	%rd567, {%r1207, %r1206};
	shf.l.wrap.b32 	%r1208, %r1204, %r1205, 3;
	shf.l.wrap.b32 	%r1209, %r1205, %r1204, 3;
	mov.b64 	%rd568, {%r1209, %r1208};
	shr.u64 	%rd569, %rd566, 6;
	xor.b64  	%rd570, %rd567, %rd569;
	xor.b64  	%rd571, %rd570, %rd568;
	add.s64 	%rd572, %rd2, %rd571;
	add.s64 	%rd573, %rd572, %rd29;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1211}, %rd573;
	}
	shf.r.wrap.b32 	%r1212, %r1211, %r1210, 19;
	shf.r.wrap.b32 	%r1213, %r1210, %r1211, 19;
	mov.b64 	%rd574, {%r1213, %r1212};
	shf.l.wrap.b32 	%r1214, %r1210, %r1211, 3;
	shf.l.wrap.b32 	%r1215, %r1211, %r1210, 3;
	mov.b64 	%rd575, {%r1215, %r1214};
	shr.u64 	%rd576, %rd573, 6;
	xor.b64  	%rd577, %rd574, %rd576;
	xor.b64  	%rd578, %rd577, %rd575;
	add.s64 	%rd579, %rd3, %rd578;
	add.s64 	%rd580, %rd579, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1216,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1217}, %rd580;
	}
	shf.r.wrap.b32 	%r1218, %r1217, %r1216, 19;
	shf.r.wrap.b32 	%r1219, %r1216, %r1217, 19;
	mov.b64 	%rd581, {%r1219, %r1218};
	shf.l.wrap.b32 	%r1220, %r1216, %r1217, 3;
	shf.l.wrap.b32 	%r1221, %r1217, %r1216, 3;
	mov.b64 	%rd582, {%r1221, %r1220};
	shr.u64 	%rd583, %rd580, 6;
	xor.b64  	%rd584, %rd581, %rd583;
	xor.b64  	%rd585, %rd584, %rd582;
	add.s64 	%rd586, %rd34, %rd585;
	add.s64 	%rd587, %rd586, %rd33;
	add.s64 	%rd588, %rd566, %rd35;
	add.s64 	%rd589, %rd588, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1222,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1223}, %rd587;
	}
	shf.r.wrap.b32 	%r1224, %r1223, %r1222, 19;
	shf.r.wrap.b32 	%r1225, %r1222, %r1223, 19;
	mov.b64 	%rd590, {%r1225, %r1224};
	shf.l.wrap.b32 	%r1226, %r1222, %r1223, 3;
	shf.l.wrap.b32 	%r1227, %r1223, %r1222, 3;
	mov.b64 	%rd591, {%r1227, %r1226};
	shr.u64 	%rd592, %rd587, 6;
	xor.b64  	%rd593, %rd590, %rd592;
	xor.b64  	%rd594, %rd593, %rd591;
	add.s64 	%rd595, %rd28, %rd594;
	add.s64 	%rd596, %rd595, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1228,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1229}, %rd589;
	}
	shf.r.wrap.b32 	%r1230, %r1229, %r1228, 19;
	shf.r.wrap.b32 	%r1231, %r1228, %r1229, 19;
	mov.b64 	%rd597, {%r1231, %r1230};
	shf.l.wrap.b32 	%r1232, %r1228, %r1229, 3;
	shf.l.wrap.b32 	%r1233, %r1229, %r1228, 3;
	mov.b64 	%rd598, {%r1233, %r1232};
	shr.u64 	%rd599, %rd589, 6;
	xor.b64  	%rd600, %rd597, %rd599;
	xor.b64  	%rd601, %rd600, %rd598;
	add.s64 	%rd602, %rd573, %rd601;
	add.s64 	%rd603, %rd602, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1234,%dummy}, %rd596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1235}, %rd596;
	}
	shf.r.wrap.b32 	%r1236, %r1235, %r1234, 19;
	shf.r.wrap.b32 	%r1237, %r1234, %r1235, 19;
	mov.b64 	%rd604, {%r1237, %r1236};
	shf.l.wrap.b32 	%r1238, %r1234, %r1235, 3;
	shf.l.wrap.b32 	%r1239, %r1235, %r1234, 3;
	mov.b64 	%rd605, {%r1239, %r1238};
	shr.u64 	%rd606, %rd596, 6;
	xor.b64  	%rd607, %rd604, %rd606;
	xor.b64  	%rd608, %rd607, %rd605;
	add.s64 	%rd609, %rd30, %rd608;
	add.s64 	%rd610, %rd609, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1240,%dummy}, %rd603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd603;
	}
	shf.r.wrap.b32 	%r1242, %r1241, %r1240, 19;
	shf.r.wrap.b32 	%r1243, %r1240, %r1241, 19;
	mov.b64 	%rd611, {%r1243, %r1242};
	shf.l.wrap.b32 	%r1244, %r1240, %r1241, 3;
	shf.l.wrap.b32 	%r1245, %r1241, %r1240, 3;
	mov.b64 	%rd612, {%r1245, %r1244};
	shr.u64 	%rd613, %rd603, 6;
	xor.b64  	%rd614, %rd611, %rd613;
	xor.b64  	%rd615, %rd614, %rd612;
	add.s64 	%rd616, %rd580, %rd615;
	add.s64 	%rd617, %rd616, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1247}, %rd610;
	}
	shf.r.wrap.b32 	%r1248, %r1247, %r1246, 19;
	shf.r.wrap.b32 	%r1249, %r1246, %r1247, 19;
	mov.b64 	%rd618, {%r1249, %r1248};
	shf.l.wrap.b32 	%r1250, %r1246, %r1247, 3;
	shf.l.wrap.b32 	%r1251, %r1247, %r1246, 3;
	mov.b64 	%rd619, {%r1251, %r1250};
	shr.u64 	%rd620, %rd610, 6;
	xor.b64  	%rd621, %rd618, %rd620;
	xor.b64  	%rd622, %rd621, %rd619;
	add.s64 	%rd623, %rd32, %rd622;
	add.s64 	%rd624, %rd623, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1252,%dummy}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1253}, %rd617;
	}
	shf.r.wrap.b32 	%r1254, %r1253, %r1252, 19;
	shf.r.wrap.b32 	%r1255, %r1252, %r1253, 19;
	mov.b64 	%rd625, {%r1255, %r1254};
	shf.l.wrap.b32 	%r1256, %r1252, %r1253, 3;
	shf.l.wrap.b32 	%r1257, %r1253, %r1252, 3;
	mov.b64 	%rd626, {%r1257, %r1256};
	shr.u64 	%rd627, %rd617, 6;
	xor.b64  	%rd628, %rd625, %rd627;
	xor.b64  	%rd629, %rd628, %rd626;
	add.s64 	%rd630, %rd587, %rd629;
	add.s64 	%rd631, %rd630, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1258,%dummy}, %rd624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1259}, %rd624;
	}
	shf.r.wrap.b32 	%r1260, %r1259, %r1258, 19;
	shf.r.wrap.b32 	%r1261, %r1258, %r1259, 19;
	mov.b64 	%rd632, {%r1261, %r1260};
	shf.l.wrap.b32 	%r1262, %r1258, %r1259, 3;
	shf.l.wrap.b32 	%r1263, %r1259, %r1258, 3;
	mov.b64 	%rd633, {%r1263, %r1262};
	shr.u64 	%rd634, %rd624, 6;
	xor.b64  	%rd635, %rd632, %rd634;
	xor.b64  	%rd636, %rd635, %rd633;
	add.s64 	%rd637, %rd589, %rd636;
	add.s64 	%rd638, %rd637, %rd36;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1264,%dummy}, %rd631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1265}, %rd631;
	}
	shf.r.wrap.b32 	%r1266, %r1265, %r1264, 19;
	shf.r.wrap.b32 	%r1267, %r1264, %r1265, 19;
	mov.b64 	%rd639, {%r1267, %r1266};
	shf.l.wrap.b32 	%r1268, %r1264, %r1265, 3;
	shf.l.wrap.b32 	%r1269, %r1265, %r1264, 3;
	mov.b64 	%rd640, {%r1269, %r1268};
	shr.u64 	%rd641, %rd631, 6;
	xor.b64  	%rd642, %rd639, %rd641;
	xor.b64  	%rd643, %rd642, %rd640;
	shf.r.wrap.b32 	%r1270, %r1205, %r1204, 1;
	shf.r.wrap.b32 	%r1271, %r1204, %r1205, 1;
	mov.b64 	%rd644, {%r1271, %r1270};
	shf.r.wrap.b32 	%r1272, %r1205, %r1204, 8;
	shf.r.wrap.b32 	%r1273, %r1204, %r1205, 8;
	mov.b64 	%rd645, {%r1273, %r1272};
	shr.u64 	%rd646, %rd566, 7;
	xor.b64  	%rd647, %rd644, %rd646;
	xor.b64  	%rd648, %rd647, %rd645;
	add.s64 	%rd649, %rd596, %rd6;
	add.s64 	%rd650, %rd649, %rd643;
	add.s64 	%rd651, %rd650, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1275}, %rd553;
	}
	shf.r.wrap.b32 	%r1276, %r1275, %r1274, 14;
	shf.r.wrap.b32 	%r1277, %r1274, %r1275, 14;
	mov.b64 	%rd652, {%r1277, %r1276};
	shf.r.wrap.b32 	%r1278, %r1275, %r1274, 18;
	shf.r.wrap.b32 	%r1279, %r1274, %r1275, 18;
	mov.b64 	%rd653, {%r1279, %r1278};
	xor.b64  	%rd654, %rd653, %rd652;
	shf.l.wrap.b32 	%r1280, %r1274, %r1275, 23;
	shf.l.wrap.b32 	%r1281, %r1275, %r1274, 23;
	mov.b64 	%rd655, {%r1281, %r1280};
	xor.b64  	%rd656, %rd654, %rd655;
	xor.b64  	%rd657, %rd506, %rd529;
	and.b64  	%rd658, %rd657, %rd553;
	xor.b64  	%rd659, %rd658, %rd506;
	add.s64 	%rd660, %rd659, %rd483;
	add.s64 	%rd661, %rd660, %rd566;
	add.s64 	%rd662, %rd661, %rd37;
	add.s64 	%rd663, %rd662, %rd656;
	add.s64 	%rd664, %rd663, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1282,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1283}, %rd564;
	}
	shf.r.wrap.b32 	%r1284, %r1283, %r1282, 28;
	shf.r.wrap.b32 	%r1285, %r1282, %r1283, 28;
	mov.b64 	%rd665, {%r1285, %r1284};
	shf.l.wrap.b32 	%r1286, %r1282, %r1283, 30;
	shf.l.wrap.b32 	%r1287, %r1283, %r1282, 30;
	mov.b64 	%rd666, {%r1287, %r1286};
	xor.b64  	%rd667, %rd666, %rd665;
	shf.l.wrap.b32 	%r1288, %r1282, %r1283, 25;
	shf.l.wrap.b32 	%r1289, %r1283, %r1282, 25;
	mov.b64 	%rd668, {%r1289, %r1288};
	xor.b64  	%rd669, %rd667, %rd668;
	xor.b64  	%rd670, %rd564, %rd517;
	xor.b64  	%rd671, %rd564, %rd540;
	and.b64  	%rd672, %rd671, %rd670;
	xor.b64  	%rd673, %rd672, %rd564;
	add.s64 	%rd674, %rd663, %rd673;
	add.s64 	%rd675, %rd674, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1290,%dummy}, %rd664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1291}, %rd664;
	}
	shf.r.wrap.b32 	%r1292, %r1291, %r1290, 14;
	shf.r.wrap.b32 	%r1293, %r1290, %r1291, 14;
	mov.b64 	%rd676, {%r1293, %r1292};
	shf.r.wrap.b32 	%r1294, %r1291, %r1290, 18;
	shf.r.wrap.b32 	%r1295, %r1290, %r1291, 18;
	mov.b64 	%rd677, {%r1295, %r1294};
	xor.b64  	%rd678, %rd677, %rd676;
	shf.l.wrap.b32 	%r1296, %r1290, %r1291, 23;
	shf.l.wrap.b32 	%r1297, %r1291, %r1290, 23;
	mov.b64 	%rd679, {%r1297, %r1296};
	xor.b64  	%rd680, %rd678, %rd679;
	xor.b64  	%rd681, %rd529, %rd553;
	and.b64  	%rd682, %rd664, %rd681;
	xor.b64  	%rd683, %rd682, %rd529;
	add.s64 	%rd684, %rd28, %rd506;
	add.s64 	%rd685, %rd684, %rd38;
	add.s64 	%rd686, %rd685, %rd683;
	add.s64 	%rd687, %rd686, %rd680;
	add.s64 	%rd688, %rd687, %rd517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1298,%dummy}, %rd675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1299}, %rd675;
	}
	shf.r.wrap.b32 	%r1300, %r1299, %r1298, 28;
	shf.r.wrap.b32 	%r1301, %r1298, %r1299, 28;
	mov.b64 	%rd689, {%r1301, %r1300};
	shf.l.wrap.b32 	%r1302, %r1298, %r1299, 30;
	shf.l.wrap.b32 	%r1303, %r1299, %r1298, 30;
	mov.b64 	%rd690, {%r1303, %r1302};
	xor.b64  	%rd691, %rd690, %rd689;
	shf.l.wrap.b32 	%r1304, %r1298, %r1299, 25;
	shf.l.wrap.b32 	%r1305, %r1299, %r1298, 25;
	mov.b64 	%rd692, {%r1305, %r1304};
	xor.b64  	%rd693, %rd691, %rd692;
	xor.b64  	%rd694, %rd675, %rd540;
	xor.b64  	%rd695, %rd675, %rd564;
	and.b64  	%rd696, %rd695, %rd694;
	xor.b64  	%rd697, %rd696, %rd675;
	add.s64 	%rd698, %rd687, %rd697;
	add.s64 	%rd699, %rd698, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1306,%dummy}, %rd688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1307}, %rd688;
	}
	shf.r.wrap.b32 	%r1308, %r1307, %r1306, 14;
	shf.r.wrap.b32 	%r1309, %r1306, %r1307, 14;
	mov.b64 	%rd700, {%r1309, %r1308};
	shf.r.wrap.b32 	%r1310, %r1307, %r1306, 18;
	shf.r.wrap.b32 	%r1311, %r1306, %r1307, 18;
	mov.b64 	%rd701, {%r1311, %r1310};
	xor.b64  	%rd702, %rd701, %rd700;
	shf.l.wrap.b32 	%r1312, %r1306, %r1307, 23;
	shf.l.wrap.b32 	%r1313, %r1307, %r1306, 23;
	mov.b64 	%rd703, {%r1313, %r1312};
	xor.b64  	%rd704, %rd702, %rd703;
	xor.b64  	%rd705, %rd664, %rd553;
	and.b64  	%rd706, %rd688, %rd705;
	xor.b64  	%rd707, %rd706, %rd553;
	add.s64 	%rd708, %rd573, %rd529;
	add.s64 	%rd709, %rd708, %rd39;
	add.s64 	%rd710, %rd709, %rd707;
	add.s64 	%rd711, %rd710, %rd704;
	add.s64 	%rd712, %rd711, %rd540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1314,%dummy}, %rd699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1315}, %rd699;
	}
	shf.r.wrap.b32 	%r1316, %r1315, %r1314, 28;
	shf.r.wrap.b32 	%r1317, %r1314, %r1315, 28;
	mov.b64 	%rd713, {%r1317, %r1316};
	shf.l.wrap.b32 	%r1318, %r1314, %r1315, 30;
	shf.l.wrap.b32 	%r1319, %r1315, %r1314, 30;
	mov.b64 	%rd714, {%r1319, %r1318};
	xor.b64  	%rd715, %rd714, %rd713;
	shf.l.wrap.b32 	%r1320, %r1314, %r1315, 25;
	shf.l.wrap.b32 	%r1321, %r1315, %r1314, 25;
	mov.b64 	%rd716, {%r1321, %r1320};
	xor.b64  	%rd717, %rd715, %rd716;
	xor.b64  	%rd718, %rd699, %rd564;
	xor.b64  	%rd719, %rd699, %rd675;
	and.b64  	%rd720, %rd719, %rd718;
	xor.b64  	%rd721, %rd720, %rd699;
	add.s64 	%rd722, %rd711, %rd721;
	add.s64 	%rd723, %rd722, %rd717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1322,%dummy}, %rd712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1323}, %rd712;
	}
	shf.r.wrap.b32 	%r1324, %r1323, %r1322, 14;
	shf.r.wrap.b32 	%r1325, %r1322, %r1323, 14;
	mov.b64 	%rd724, {%r1325, %r1324};
	shf.r.wrap.b32 	%r1326, %r1323, %r1322, 18;
	shf.r.wrap.b32 	%r1327, %r1322, %r1323, 18;
	mov.b64 	%rd725, {%r1327, %r1326};
	xor.b64  	%rd726, %rd725, %rd724;
	shf.l.wrap.b32 	%r1328, %r1322, %r1323, 23;
	shf.l.wrap.b32 	%r1329, %r1323, %r1322, 23;
	mov.b64 	%rd727, {%r1329, %r1328};
	xor.b64  	%rd728, %rd726, %rd727;
	xor.b64  	%rd729, %rd688, %rd664;
	and.b64  	%rd730, %rd712, %rd729;
	xor.b64  	%rd731, %rd730, %rd664;
	add.s64 	%rd732, %rd30, %rd553;
	add.s64 	%rd733, %rd732, %rd40;
	add.s64 	%rd734, %rd733, %rd731;
	add.s64 	%rd735, %rd734, %rd728;
	add.s64 	%rd736, %rd735, %rd564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1330,%dummy}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1331}, %rd723;
	}
	shf.r.wrap.b32 	%r1332, %r1331, %r1330, 28;
	shf.r.wrap.b32 	%r1333, %r1330, %r1331, 28;
	mov.b64 	%rd737, {%r1333, %r1332};
	shf.l.wrap.b32 	%r1334, %r1330, %r1331, 30;
	shf.l.wrap.b32 	%r1335, %r1331, %r1330, 30;
	mov.b64 	%rd738, {%r1335, %r1334};
	xor.b64  	%rd739, %rd738, %rd737;
	shf.l.wrap.b32 	%r1336, %r1330, %r1331, 25;
	shf.l.wrap.b32 	%r1337, %r1331, %r1330, 25;
	mov.b64 	%rd740, {%r1337, %r1336};
	xor.b64  	%rd741, %rd739, %rd740;
	xor.b64  	%rd742, %rd723, %rd675;
	xor.b64  	%rd743, %rd723, %rd699;
	and.b64  	%rd744, %rd743, %rd742;
	xor.b64  	%rd745, %rd744, %rd723;
	add.s64 	%rd746, %rd735, %rd745;
	add.s64 	%rd747, %rd746, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1338,%dummy}, %rd736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1339}, %rd736;
	}
	shf.r.wrap.b32 	%r1340, %r1339, %r1338, 14;
	shf.r.wrap.b32 	%r1341, %r1338, %r1339, 14;
	mov.b64 	%rd748, {%r1341, %r1340};
	shf.r.wrap.b32 	%r1342, %r1339, %r1338, 18;
	shf.r.wrap.b32 	%r1343, %r1338, %r1339, 18;
	mov.b64 	%rd749, {%r1343, %r1342};
	xor.b64  	%rd750, %rd749, %rd748;
	shf.l.wrap.b32 	%r1344, %r1338, %r1339, 23;
	shf.l.wrap.b32 	%r1345, %r1339, %r1338, 23;
	mov.b64 	%rd751, {%r1345, %r1344};
	xor.b64  	%rd752, %rd750, %rd751;
	xor.b64  	%rd753, %rd712, %rd688;
	and.b64  	%rd754, %rd736, %rd753;
	xor.b64  	%rd755, %rd754, %rd688;
	add.s64 	%rd756, %rd664, %rd580;
	add.s64 	%rd757, %rd756, %rd41;
	add.s64 	%rd758, %rd757, %rd755;
	add.s64 	%rd759, %rd758, %rd752;
	add.s64 	%rd760, %rd759, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1346,%dummy}, %rd747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1347}, %rd747;
	}
	shf.r.wrap.b32 	%r1348, %r1347, %r1346, 28;
	shf.r.wrap.b32 	%r1349, %r1346, %r1347, 28;
	mov.b64 	%rd761, {%r1349, %r1348};
	shf.l.wrap.b32 	%r1350, %r1346, %r1347, 30;
	shf.l.wrap.b32 	%r1351, %r1347, %r1346, 30;
	mov.b64 	%rd762, {%r1351, %r1350};
	xor.b64  	%rd763, %rd762, %rd761;
	shf.l.wrap.b32 	%r1352, %r1346, %r1347, 25;
	shf.l.wrap.b32 	%r1353, %r1347, %r1346, 25;
	mov.b64 	%rd764, {%r1353, %r1352};
	xor.b64  	%rd765, %rd763, %rd764;
	xor.b64  	%rd766, %rd747, %rd699;
	xor.b64  	%rd767, %rd747, %rd723;
	and.b64  	%rd768, %rd767, %rd766;
	xor.b64  	%rd769, %rd768, %rd747;
	add.s64 	%rd770, %rd759, %rd769;
	add.s64 	%rd771, %rd770, %rd765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1354,%dummy}, %rd760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1355}, %rd760;
	}
	shf.r.wrap.b32 	%r1356, %r1355, %r1354, 14;
	shf.r.wrap.b32 	%r1357, %r1354, %r1355, 14;
	mov.b64 	%rd772, {%r1357, %r1356};
	shf.r.wrap.b32 	%r1358, %r1355, %r1354, 18;
	shf.r.wrap.b32 	%r1359, %r1354, %r1355, 18;
	mov.b64 	%rd773, {%r1359, %r1358};
	xor.b64  	%rd774, %rd773, %rd772;
	shf.l.wrap.b32 	%r1360, %r1354, %r1355, 23;
	shf.l.wrap.b32 	%r1361, %r1355, %r1354, 23;
	mov.b64 	%rd775, {%r1361, %r1360};
	xor.b64  	%rd776, %rd774, %rd775;
	xor.b64  	%rd777, %rd736, %rd712;
	and.b64  	%rd778, %rd760, %rd777;
	xor.b64  	%rd779, %rd778, %rd712;
	add.s64 	%rd780, %rd688, %rd32;
	add.s64 	%rd781, %rd780, %rd42;
	add.s64 	%rd782, %rd781, %rd779;
	add.s64 	%rd783, %rd782, %rd776;
	add.s64 	%rd784, %rd783, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1362,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1363}, %rd771;
	}
	shf.r.wrap.b32 	%r1364, %r1363, %r1362, 28;
	shf.r.wrap.b32 	%r1365, %r1362, %r1363, 28;
	mov.b64 	%rd785, {%r1365, %r1364};
	shf.l.wrap.b32 	%r1366, %r1362, %r1363, 30;
	shf.l.wrap.b32 	%r1367, %r1363, %r1362, 30;
	mov.b64 	%rd786, {%r1367, %r1366};
	xor.b64  	%rd787, %rd786, %rd785;
	shf.l.wrap.b32 	%r1368, %r1362, %r1363, 25;
	shf.l.wrap.b32 	%r1369, %r1363, %r1362, 25;
	mov.b64 	%rd788, {%r1369, %r1368};
	xor.b64  	%rd789, %rd787, %rd788;
	xor.b64  	%rd790, %rd771, %rd723;
	xor.b64  	%rd791, %rd771, %rd747;
	and.b64  	%rd792, %rd791, %rd790;
	xor.b64  	%rd793, %rd792, %rd771;
	add.s64 	%rd794, %rd783, %rd793;
	add.s64 	%rd795, %rd794, %rd789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1371}, %rd784;
	}
	shf.r.wrap.b32 	%r1372, %r1371, %r1370, 14;
	shf.r.wrap.b32 	%r1373, %r1370, %r1371, 14;
	mov.b64 	%rd796, {%r1373, %r1372};
	shf.r.wrap.b32 	%r1374, %r1371, %r1370, 18;
	shf.r.wrap.b32 	%r1375, %r1370, %r1371, 18;
	mov.b64 	%rd797, {%r1375, %r1374};
	xor.b64  	%rd798, %rd797, %rd796;
	shf.l.wrap.b32 	%r1376, %r1370, %r1371, 23;
	shf.l.wrap.b32 	%r1377, %r1371, %r1370, 23;
	mov.b64 	%rd799, {%r1377, %r1376};
	xor.b64  	%rd800, %rd798, %rd799;
	xor.b64  	%rd801, %rd760, %rd736;
	and.b64  	%rd802, %rd784, %rd801;
	xor.b64  	%rd803, %rd802, %rd736;
	add.s64 	%rd804, %rd712, %rd587;
	add.s64 	%rd805, %rd804, %rd43;
	add.s64 	%rd806, %rd805, %rd803;
	add.s64 	%rd807, %rd806, %rd800;
	add.s64 	%rd808, %rd807, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1378,%dummy}, %rd795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1379}, %rd795;
	}
	shf.r.wrap.b32 	%r1380, %r1379, %r1378, 28;
	shf.r.wrap.b32 	%r1381, %r1378, %r1379, 28;
	mov.b64 	%rd809, {%r1381, %r1380};
	shf.l.wrap.b32 	%r1382, %r1378, %r1379, 30;
	shf.l.wrap.b32 	%r1383, %r1379, %r1378, 30;
	mov.b64 	%rd810, {%r1383, %r1382};
	xor.b64  	%rd811, %rd810, %rd809;
	shf.l.wrap.b32 	%r1384, %r1378, %r1379, 25;
	shf.l.wrap.b32 	%r1385, %r1379, %r1378, 25;
	mov.b64 	%rd812, {%r1385, %r1384};
	xor.b64  	%rd813, %rd811, %rd812;
	xor.b64  	%rd814, %rd795, %rd747;
	xor.b64  	%rd815, %rd795, %rd771;
	and.b64  	%rd816, %rd815, %rd814;
	xor.b64  	%rd817, %rd816, %rd795;
	add.s64 	%rd818, %rd807, %rd817;
	add.s64 	%rd819, %rd818, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1386,%dummy}, %rd808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1387}, %rd808;
	}
	shf.r.wrap.b32 	%r1388, %r1387, %r1386, 14;
	shf.r.wrap.b32 	%r1389, %r1386, %r1387, 14;
	mov.b64 	%rd820, {%r1389, %r1388};
	shf.r.wrap.b32 	%r1390, %r1387, %r1386, 18;
	shf.r.wrap.b32 	%r1391, %r1386, %r1387, 18;
	mov.b64 	%rd821, {%r1391, %r1390};
	xor.b64  	%rd822, %rd821, %rd820;
	shf.l.wrap.b32 	%r1392, %r1386, %r1387, 23;
	shf.l.wrap.b32 	%r1393, %r1387, %r1386, 23;
	mov.b64 	%rd823, {%r1393, %r1392};
	xor.b64  	%rd824, %rd822, %rd823;
	xor.b64  	%rd825, %rd784, %rd760;
	and.b64  	%rd826, %rd808, %rd825;
	xor.b64  	%rd827, %rd826, %rd760;
	add.s64 	%rd828, %rd736, %rd589;
	add.s64 	%rd829, %rd828, %rd44;
	add.s64 	%rd830, %rd829, %rd827;
	add.s64 	%rd831, %rd830, %rd824;
	add.s64 	%rd832, %rd831, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1394,%dummy}, %rd819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1395}, %rd819;
	}
	shf.r.wrap.b32 	%r1396, %r1395, %r1394, 28;
	shf.r.wrap.b32 	%r1397, %r1394, %r1395, 28;
	mov.b64 	%rd833, {%r1397, %r1396};
	shf.l.wrap.b32 	%r1398, %r1394, %r1395, 30;
	shf.l.wrap.b32 	%r1399, %r1395, %r1394, 30;
	mov.b64 	%rd834, {%r1399, %r1398};
	xor.b64  	%rd835, %rd834, %rd833;
	shf.l.wrap.b32 	%r1400, %r1394, %r1395, 25;
	shf.l.wrap.b32 	%r1401, %r1395, %r1394, 25;
	mov.b64 	%rd836, {%r1401, %r1400};
	xor.b64  	%rd837, %rd835, %rd836;
	xor.b64  	%rd838, %rd819, %rd771;
	xor.b64  	%rd839, %rd819, %rd795;
	and.b64  	%rd840, %rd839, %rd838;
	xor.b64  	%rd841, %rd840, %rd819;
	add.s64 	%rd842, %rd831, %rd841;
	add.s64 	%rd843, %rd842, %rd837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1402,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1403}, %rd832;
	}
	shf.r.wrap.b32 	%r1404, %r1403, %r1402, 14;
	shf.r.wrap.b32 	%r1405, %r1402, %r1403, 14;
	mov.b64 	%rd844, {%r1405, %r1404};
	shf.r.wrap.b32 	%r1406, %r1403, %r1402, 18;
	shf.r.wrap.b32 	%r1407, %r1402, %r1403, 18;
	mov.b64 	%rd845, {%r1407, %r1406};
	xor.b64  	%rd846, %rd845, %rd844;
	shf.l.wrap.b32 	%r1408, %r1402, %r1403, 23;
	shf.l.wrap.b32 	%r1409, %r1403, %r1402, 23;
	mov.b64 	%rd847, {%r1409, %r1408};
	xor.b64  	%rd848, %rd846, %rd847;
	xor.b64  	%rd849, %rd808, %rd784;
	and.b64  	%rd850, %rd832, %rd849;
	xor.b64  	%rd851, %rd850, %rd784;
	add.s64 	%rd852, %rd760, %rd596;
	add.s64 	%rd853, %rd852, %rd45;
	add.s64 	%rd854, %rd853, %rd851;
	add.s64 	%rd855, %rd854, %rd848;
	add.s64 	%rd856, %rd855, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1410,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1411}, %rd843;
	}
	shf.r.wrap.b32 	%r1412, %r1411, %r1410, 28;
	shf.r.wrap.b32 	%r1413, %r1410, %r1411, 28;
	mov.b64 	%rd857, {%r1413, %r1412};
	shf.l.wrap.b32 	%r1414, %r1410, %r1411, 30;
	shf.l.wrap.b32 	%r1415, %r1411, %r1410, 30;
	mov.b64 	%rd858, {%r1415, %r1414};
	xor.b64  	%rd859, %rd858, %rd857;
	shf.l.wrap.b32 	%r1416, %r1410, %r1411, 25;
	shf.l.wrap.b32 	%r1417, %r1411, %r1410, 25;
	mov.b64 	%rd860, {%r1417, %r1416};
	xor.b64  	%rd861, %rd859, %rd860;
	xor.b64  	%rd862, %rd843, %rd795;
	xor.b64  	%rd863, %rd843, %rd819;
	and.b64  	%rd864, %rd863, %rd862;
	xor.b64  	%rd865, %rd864, %rd843;
	add.s64 	%rd866, %rd855, %rd865;
	add.s64 	%rd867, %rd866, %rd861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1419}, %rd856;
	}
	shf.r.wrap.b32 	%r1420, %r1419, %r1418, 14;
	shf.r.wrap.b32 	%r1421, %r1418, %r1419, 14;
	mov.b64 	%rd868, {%r1421, %r1420};
	shf.r.wrap.b32 	%r1422, %r1419, %r1418, 18;
	shf.r.wrap.b32 	%r1423, %r1418, %r1419, 18;
	mov.b64 	%rd869, {%r1423, %r1422};
	xor.b64  	%rd870, %rd869, %rd868;
	shf.l.wrap.b32 	%r1424, %r1418, %r1419, 23;
	shf.l.wrap.b32 	%r1425, %r1419, %r1418, 23;
	mov.b64 	%rd871, {%r1425, %r1424};
	xor.b64  	%rd872, %rd870, %rd871;
	xor.b64  	%rd873, %rd832, %rd808;
	and.b64  	%rd874, %rd856, %rd873;
	xor.b64  	%rd875, %rd874, %rd808;
	add.s64 	%rd876, %rd784, %rd603;
	add.s64 	%rd877, %rd876, %rd46;
	add.s64 	%rd878, %rd877, %rd875;
	add.s64 	%rd879, %rd878, %rd872;
	add.s64 	%rd880, %rd879, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1426,%dummy}, %rd867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1427}, %rd867;
	}
	shf.r.wrap.b32 	%r1428, %r1427, %r1426, 28;
	shf.r.wrap.b32 	%r1429, %r1426, %r1427, 28;
	mov.b64 	%rd881, {%r1429, %r1428};
	shf.l.wrap.b32 	%r1430, %r1426, %r1427, 30;
	shf.l.wrap.b32 	%r1431, %r1427, %r1426, 30;
	mov.b64 	%rd882, {%r1431, %r1430};
	xor.b64  	%rd883, %rd882, %rd881;
	shf.l.wrap.b32 	%r1432, %r1426, %r1427, 25;
	shf.l.wrap.b32 	%r1433, %r1427, %r1426, 25;
	mov.b64 	%rd884, {%r1433, %r1432};
	xor.b64  	%rd885, %rd883, %rd884;
	xor.b64  	%rd886, %rd867, %rd819;
	xor.b64  	%rd887, %rd867, %rd843;
	and.b64  	%rd888, %rd887, %rd886;
	xor.b64  	%rd889, %rd888, %rd867;
	add.s64 	%rd890, %rd879, %rd889;
	add.s64 	%rd891, %rd890, %rd885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1434,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1435}, %rd880;
	}
	shf.r.wrap.b32 	%r1436, %r1435, %r1434, 14;
	shf.r.wrap.b32 	%r1437, %r1434, %r1435, 14;
	mov.b64 	%rd892, {%r1437, %r1436};
	shf.r.wrap.b32 	%r1438, %r1435, %r1434, 18;
	shf.r.wrap.b32 	%r1439, %r1434, %r1435, 18;
	mov.b64 	%rd893, {%r1439, %r1438};
	xor.b64  	%rd894, %rd893, %rd892;
	shf.l.wrap.b32 	%r1440, %r1434, %r1435, 23;
	shf.l.wrap.b32 	%r1441, %r1435, %r1434, 23;
	mov.b64 	%rd895, {%r1441, %r1440};
	xor.b64  	%rd896, %rd894, %rd895;
	xor.b64  	%rd897, %rd856, %rd832;
	and.b64  	%rd898, %rd880, %rd897;
	xor.b64  	%rd899, %rd898, %rd832;
	add.s64 	%rd900, %rd808, %rd610;
	add.s64 	%rd901, %rd900, %rd47;
	add.s64 	%rd902, %rd901, %rd899;
	add.s64 	%rd903, %rd902, %rd896;
	add.s64 	%rd904, %rd903, %rd819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1442,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1443}, %rd891;
	}
	shf.r.wrap.b32 	%r1444, %r1443, %r1442, 28;
	shf.r.wrap.b32 	%r1445, %r1442, %r1443, 28;
	mov.b64 	%rd905, {%r1445, %r1444};
	shf.l.wrap.b32 	%r1446, %r1442, %r1443, 30;
	shf.l.wrap.b32 	%r1447, %r1443, %r1442, 30;
	mov.b64 	%rd906, {%r1447, %r1446};
	xor.b64  	%rd907, %rd906, %rd905;
	shf.l.wrap.b32 	%r1448, %r1442, %r1443, 25;
	shf.l.wrap.b32 	%r1449, %r1443, %r1442, 25;
	mov.b64 	%rd908, {%r1449, %r1448};
	xor.b64  	%rd909, %rd907, %rd908;
	xor.b64  	%rd910, %rd891, %rd843;
	xor.b64  	%rd911, %rd891, %rd867;
	and.b64  	%rd912, %rd911, %rd910;
	xor.b64  	%rd913, %rd912, %rd891;
	add.s64 	%rd914, %rd903, %rd913;
	add.s64 	%rd915, %rd914, %rd909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1450,%dummy}, %rd904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1451}, %rd904;
	}
	shf.r.wrap.b32 	%r1452, %r1451, %r1450, 14;
	shf.r.wrap.b32 	%r1453, %r1450, %r1451, 14;
	mov.b64 	%rd916, {%r1453, %r1452};
	shf.r.wrap.b32 	%r1454, %r1451, %r1450, 18;
	shf.r.wrap.b32 	%r1455, %r1450, %r1451, 18;
	mov.b64 	%rd917, {%r1455, %r1454};
	xor.b64  	%rd918, %rd917, %rd916;
	shf.l.wrap.b32 	%r1456, %r1450, %r1451, 23;
	shf.l.wrap.b32 	%r1457, %r1451, %r1450, 23;
	mov.b64 	%rd919, {%r1457, %r1456};
	xor.b64  	%rd920, %rd918, %rd919;
	xor.b64  	%rd921, %rd880, %rd856;
	and.b64  	%rd922, %rd904, %rd921;
	xor.b64  	%rd923, %rd922, %rd856;
	add.s64 	%rd924, %rd832, %rd617;
	add.s64 	%rd925, %rd924, %rd48;
	add.s64 	%rd926, %rd925, %rd923;
	add.s64 	%rd927, %rd926, %rd920;
	add.s64 	%rd928, %rd927, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1458,%dummy}, %rd915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1459}, %rd915;
	}
	shf.r.wrap.b32 	%r1460, %r1459, %r1458, 28;
	shf.r.wrap.b32 	%r1461, %r1458, %r1459, 28;
	mov.b64 	%rd929, {%r1461, %r1460};
	shf.l.wrap.b32 	%r1462, %r1458, %r1459, 30;
	shf.l.wrap.b32 	%r1463, %r1459, %r1458, 30;
	mov.b64 	%rd930, {%r1463, %r1462};
	xor.b64  	%rd931, %rd930, %rd929;
	shf.l.wrap.b32 	%r1464, %r1458, %r1459, 25;
	shf.l.wrap.b32 	%r1465, %r1459, %r1458, 25;
	mov.b64 	%rd932, {%r1465, %r1464};
	xor.b64  	%rd933, %rd931, %rd932;
	xor.b64  	%rd934, %rd915, %rd867;
	xor.b64  	%rd935, %rd915, %rd891;
	and.b64  	%rd936, %rd935, %rd934;
	xor.b64  	%rd937, %rd936, %rd915;
	add.s64 	%rd938, %rd927, %rd937;
	add.s64 	%rd939, %rd938, %rd933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1467}, %rd928;
	}
	shf.r.wrap.b32 	%r1468, %r1467, %r1466, 14;
	shf.r.wrap.b32 	%r1469, %r1466, %r1467, 14;
	mov.b64 	%rd940, {%r1469, %r1468};
	shf.r.wrap.b32 	%r1470, %r1467, %r1466, 18;
	shf.r.wrap.b32 	%r1471, %r1466, %r1467, 18;
	mov.b64 	%rd941, {%r1471, %r1470};
	xor.b64  	%rd942, %rd941, %rd940;
	shf.l.wrap.b32 	%r1472, %r1466, %r1467, 23;
	shf.l.wrap.b32 	%r1473, %r1467, %r1466, 23;
	mov.b64 	%rd943, {%r1473, %r1472};
	xor.b64  	%rd944, %rd942, %rd943;
	xor.b64  	%rd945, %rd904, %rd880;
	and.b64  	%rd946, %rd928, %rd945;
	xor.b64  	%rd947, %rd946, %rd880;
	add.s64 	%rd948, %rd856, %rd624;
	add.s64 	%rd949, %rd948, %rd49;
	add.s64 	%rd950, %rd949, %rd947;
	add.s64 	%rd951, %rd950, %rd944;
	add.s64 	%rd952, %rd951, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1475}, %rd939;
	}
	shf.r.wrap.b32 	%r1476, %r1475, %r1474, 28;
	shf.r.wrap.b32 	%r1477, %r1474, %r1475, 28;
	mov.b64 	%rd953, {%r1477, %r1476};
	shf.l.wrap.b32 	%r1478, %r1474, %r1475, 30;
	shf.l.wrap.b32 	%r1479, %r1475, %r1474, 30;
	mov.b64 	%rd954, {%r1479, %r1478};
	xor.b64  	%rd955, %rd954, %rd953;
	shf.l.wrap.b32 	%r1480, %r1474, %r1475, 25;
	shf.l.wrap.b32 	%r1481, %r1475, %r1474, 25;
	mov.b64 	%rd956, {%r1481, %r1480};
	xor.b64  	%rd957, %rd955, %rd956;
	xor.b64  	%rd958, %rd939, %rd891;
	xor.b64  	%rd959, %rd939, %rd915;
	and.b64  	%rd960, %rd959, %rd958;
	xor.b64  	%rd961, %rd960, %rd939;
	add.s64 	%rd962, %rd951, %rd961;
	add.s64 	%rd963, %rd962, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1483}, %rd952;
	}
	shf.r.wrap.b32 	%r1484, %r1483, %r1482, 14;
	shf.r.wrap.b32 	%r1485, %r1482, %r1483, 14;
	mov.b64 	%rd964, {%r1485, %r1484};
	shf.r.wrap.b32 	%r1486, %r1483, %r1482, 18;
	shf.r.wrap.b32 	%r1487, %r1482, %r1483, 18;
	mov.b64 	%rd965, {%r1487, %r1486};
	xor.b64  	%rd966, %rd965, %rd964;
	shf.l.wrap.b32 	%r1488, %r1482, %r1483, 23;
	shf.l.wrap.b32 	%r1489, %r1483, %r1482, 23;
	mov.b64 	%rd967, {%r1489, %r1488};
	xor.b64  	%rd968, %rd966, %rd967;
	xor.b64  	%rd969, %rd928, %rd904;
	and.b64  	%rd970, %rd952, %rd969;
	xor.b64  	%rd971, %rd970, %rd904;
	add.s64 	%rd972, %rd880, %rd631;
	add.s64 	%rd973, %rd972, %rd50;
	add.s64 	%rd974, %rd973, %rd971;
	add.s64 	%rd975, %rd974, %rd968;
	add.s64 	%rd976, %rd975, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1490,%dummy}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1491}, %rd963;
	}
	shf.r.wrap.b32 	%r1492, %r1491, %r1490, 28;
	shf.r.wrap.b32 	%r1493, %r1490, %r1491, 28;
	mov.b64 	%rd977, {%r1493, %r1492};
	shf.l.wrap.b32 	%r1494, %r1490, %r1491, 30;
	shf.l.wrap.b32 	%r1495, %r1491, %r1490, 30;
	mov.b64 	%rd978, {%r1495, %r1494};
	xor.b64  	%rd979, %rd978, %rd977;
	shf.l.wrap.b32 	%r1496, %r1490, %r1491, 25;
	shf.l.wrap.b32 	%r1497, %r1491, %r1490, 25;
	mov.b64 	%rd980, {%r1497, %r1496};
	xor.b64  	%rd981, %rd979, %rd980;
	xor.b64  	%rd982, %rd963, %rd915;
	xor.b64  	%rd983, %rd963, %rd939;
	and.b64  	%rd984, %rd983, %rd982;
	xor.b64  	%rd985, %rd984, %rd963;
	add.s64 	%rd986, %rd975, %rd985;
	add.s64 	%rd987, %rd986, %rd981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1498,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1499}, %rd976;
	}
	shf.r.wrap.b32 	%r1500, %r1499, %r1498, 14;
	shf.r.wrap.b32 	%r1501, %r1498, %r1499, 14;
	mov.b64 	%rd988, {%r1501, %r1500};
	shf.r.wrap.b32 	%r1502, %r1499, %r1498, 18;
	shf.r.wrap.b32 	%r1503, %r1498, %r1499, 18;
	mov.b64 	%rd989, {%r1503, %r1502};
	xor.b64  	%rd990, %rd989, %rd988;
	shf.l.wrap.b32 	%r1504, %r1498, %r1499, 23;
	shf.l.wrap.b32 	%r1505, %r1499, %r1498, 23;
	mov.b64 	%rd991, {%r1505, %r1504};
	xor.b64  	%rd992, %rd990, %rd991;
	xor.b64  	%rd993, %rd952, %rd928;
	and.b64  	%rd994, %rd976, %rd993;
	xor.b64  	%rd995, %rd994, %rd928;
	add.s64 	%rd996, %rd904, %rd638;
	add.s64 	%rd997, %rd996, %rd51;
	add.s64 	%rd998, %rd997, %rd995;
	add.s64 	%rd999, %rd998, %rd992;
	add.s64 	%rd1000, %rd999, %rd915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1506,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1507}, %rd987;
	}
	shf.r.wrap.b32 	%r1508, %r1507, %r1506, 28;
	shf.r.wrap.b32 	%r1509, %r1506, %r1507, 28;
	mov.b64 	%rd1001, {%r1509, %r1508};
	shf.l.wrap.b32 	%r1510, %r1506, %r1507, 30;
	shf.l.wrap.b32 	%r1511, %r1507, %r1506, 30;
	mov.b64 	%rd1002, {%r1511, %r1510};
	xor.b64  	%rd1003, %rd1002, %rd1001;
	shf.l.wrap.b32 	%r1512, %r1506, %r1507, 25;
	shf.l.wrap.b32 	%r1513, %r1507, %r1506, 25;
	mov.b64 	%rd1004, {%r1513, %r1512};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	xor.b64  	%rd1006, %rd987, %rd939;
	xor.b64  	%rd1007, %rd987, %rd963;
	and.b64  	%rd1008, %rd1007, %rd1006;
	xor.b64  	%rd1009, %rd1008, %rd987;
	add.s64 	%rd1010, %rd999, %rd1009;
	add.s64 	%rd1011, %rd1010, %rd1005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1514,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1515}, %rd1000;
	}
	shf.r.wrap.b32 	%r1516, %r1515, %r1514, 14;
	shf.r.wrap.b32 	%r1517, %r1514, %r1515, 14;
	mov.b64 	%rd1012, {%r1517, %r1516};
	shf.r.wrap.b32 	%r1518, %r1515, %r1514, 18;
	shf.r.wrap.b32 	%r1519, %r1514, %r1515, 18;
	mov.b64 	%rd1013, {%r1519, %r1518};
	xor.b64  	%rd1014, %rd1013, %rd1012;
	shf.l.wrap.b32 	%r1520, %r1514, %r1515, 23;
	shf.l.wrap.b32 	%r1521, %r1515, %r1514, 23;
	mov.b64 	%rd1015, {%r1521, %r1520};
	xor.b64  	%rd1016, %rd1014, %rd1015;
	xor.b64  	%rd1017, %rd976, %rd952;
	and.b64  	%rd1018, %rd1000, %rd1017;
	xor.b64  	%rd1019, %rd1018, %rd952;
	add.s64 	%rd1020, %rd928, %rd651;
	add.s64 	%rd1021, %rd1020, %rd52;
	add.s64 	%rd1022, %rd1021, %rd1019;
	add.s64 	%rd1023, %rd1022, %rd1016;
	add.s64 	%rd1024, %rd1023, %rd939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1522,%dummy}, %rd1011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1523}, %rd1011;
	}
	shf.r.wrap.b32 	%r1524, %r1523, %r1522, 28;
	shf.r.wrap.b32 	%r1525, %r1522, %r1523, 28;
	mov.b64 	%rd1025, {%r1525, %r1524};
	shf.l.wrap.b32 	%r1526, %r1522, %r1523, 30;
	shf.l.wrap.b32 	%r1527, %r1523, %r1522, 30;
	mov.b64 	%rd1026, {%r1527, %r1526};
	xor.b64  	%rd1027, %rd1026, %rd1025;
	shf.l.wrap.b32 	%r1528, %r1522, %r1523, 25;
	shf.l.wrap.b32 	%r1529, %r1523, %r1522, 25;
	mov.b64 	%rd1028, {%r1529, %r1528};
	xor.b64  	%rd1029, %rd1027, %rd1028;
	xor.b64  	%rd1030, %rd1011, %rd963;
	xor.b64  	%rd1031, %rd1011, %rd987;
	and.b64  	%rd1032, %rd1031, %rd1030;
	xor.b64  	%rd1033, %rd1032, %rd1011;
	add.s64 	%rd1034, %rd1023, %rd1033;
	add.s64 	%rd1035, %rd1034, %rd1029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1530,%dummy}, %rd638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1531}, %rd638;
	}
	shf.r.wrap.b32 	%r1532, %r1531, %r1530, 19;
	shf.r.wrap.b32 	%r1533, %r1530, %r1531, 19;
	mov.b64 	%rd1036, {%r1533, %r1532};
	shf.l.wrap.b32 	%r1534, %r1530, %r1531, 3;
	shf.l.wrap.b32 	%r1535, %r1531, %r1530, 3;
	mov.b64 	%rd1037, {%r1535, %r1534};
	shr.u64 	%rd1038, %rd638, 6;
	xor.b64  	%rd1039, %rd1036, %rd1038;
	xor.b64  	%rd1040, %rd1039, %rd1037;
	add.s64 	%rd1041, %rd566, %rd603;
	add.s64 	%rd1042, %rd1041, %rd1040;
	add.s64 	%rd1043, %rd1042, %rd53;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1536,%dummy}, %rd651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1537}, %rd651;
	}
	shf.r.wrap.b32 	%r1538, %r1537, %r1536, 19;
	shf.r.wrap.b32 	%r1539, %r1536, %r1537, 19;
	mov.b64 	%rd1044, {%r1539, %r1538};
	shf.l.wrap.b32 	%r1540, %r1536, %r1537, 3;
	shf.l.wrap.b32 	%r1541, %r1537, %r1536, 3;
	mov.b64 	%rd1045, {%r1541, %r1540};
	shr.u64 	%rd1046, %rd651, 6;
	xor.b64  	%rd1047, %rd1044, %rd1046;
	xor.b64  	%rd1048, %rd1047, %rd1045;
	shf.r.wrap.b32 	%r1542, %r1211, %r1210, 1;
	shf.r.wrap.b32 	%r1543, %r1210, %r1211, 1;
	mov.b64 	%rd1049, {%r1543, %r1542};
	shf.r.wrap.b32 	%r1544, %r1211, %r1210, 8;
	shf.r.wrap.b32 	%r1545, %r1210, %r1211, 8;
	mov.b64 	%rd1050, {%r1545, %r1544};
	shr.u64 	%rd1051, %rd573, 7;
	xor.b64  	%rd1052, %rd1049, %rd1051;
	xor.b64  	%rd1053, %rd1052, %rd1050;
	add.s64 	%rd1054, %rd28, %rd610;
	add.s64 	%rd1055, %rd1054, %rd1048;
	add.s64 	%rd1056, %rd1055, %rd1053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1547}, %rd1043;
	}
	shf.r.wrap.b32 	%r1548, %r1547, %r1546, 19;
	shf.r.wrap.b32 	%r1549, %r1546, %r1547, 19;
	mov.b64 	%rd1057, {%r1549, %r1548};
	shf.l.wrap.b32 	%r1550, %r1546, %r1547, 3;
	shf.l.wrap.b32 	%r1551, %r1547, %r1546, 3;
	mov.b64 	%rd1058, {%r1551, %r1550};
	shr.u64 	%rd1059, %rd1043, 6;
	xor.b64  	%rd1060, %rd1057, %rd1059;
	xor.b64  	%rd1061, %rd1060, %rd1058;
	add.s64 	%rd1062, %rd573, %rd617;
	add.s64 	%rd1063, %rd1062, %rd1061;
	add.s64 	%rd1064, %rd1063, %rd54;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd1056;
	}
	shf.r.wrap.b32 	%r1554, %r1553, %r1552, 19;
	shf.r.wrap.b32 	%r1555, %r1552, %r1553, 19;
	mov.b64 	%rd1065, {%r1555, %r1554};
	shf.l.wrap.b32 	%r1556, %r1552, %r1553, 3;
	shf.l.wrap.b32 	%r1557, %r1553, %r1552, 3;
	mov.b64 	%rd1066, {%r1557, %r1556};
	shr.u64 	%rd1067, %rd1056, 6;
	xor.b64  	%rd1068, %rd1065, %rd1067;
	xor.b64  	%rd1069, %rd1068, %rd1066;
	shf.r.wrap.b32 	%r1558, %r1217, %r1216, 1;
	shf.r.wrap.b32 	%r1559, %r1216, %r1217, 1;
	mov.b64 	%rd1070, {%r1559, %r1558};
	shf.r.wrap.b32 	%r1560, %r1217, %r1216, 8;
	shf.r.wrap.b32 	%r1561, %r1216, %r1217, 8;
	mov.b64 	%rd1071, {%r1561, %r1560};
	shr.u64 	%rd1072, %rd580, 7;
	xor.b64  	%rd1073, %rd1070, %rd1072;
	xor.b64  	%rd1074, %rd1073, %rd1071;
	add.s64 	%rd1075, %rd30, %rd624;
	add.s64 	%rd1076, %rd1075, %rd1069;
	add.s64 	%rd1077, %rd1076, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1562,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1563}, %rd1064;
	}
	shf.r.wrap.b32 	%r1564, %r1563, %r1562, 19;
	shf.r.wrap.b32 	%r1565, %r1562, %r1563, 19;
	mov.b64 	%rd1078, {%r1565, %r1564};
	shf.l.wrap.b32 	%r1566, %r1562, %r1563, 3;
	shf.l.wrap.b32 	%r1567, %r1563, %r1562, 3;
	mov.b64 	%rd1079, {%r1567, %r1566};
	shr.u64 	%rd1080, %rd1064, 6;
	xor.b64  	%rd1081, %rd1078, %rd1080;
	xor.b64  	%rd1082, %rd1081, %rd1079;
	add.s64 	%rd1083, %rd580, %rd631;
	add.s64 	%rd1084, %rd1083, %rd1082;
	add.s64 	%rd1085, %rd1084, %rd55;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1568,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1569}, %rd1077;
	}
	shf.r.wrap.b32 	%r1570, %r1569, %r1568, 19;
	shf.r.wrap.b32 	%r1571, %r1568, %r1569, 19;
	mov.b64 	%rd1086, {%r1571, %r1570};
	shf.l.wrap.b32 	%r1572, %r1568, %r1569, 3;
	shf.l.wrap.b32 	%r1573, %r1569, %r1568, 3;
	mov.b64 	%rd1087, {%r1573, %r1572};
	shr.u64 	%rd1088, %rd1077, 6;
	xor.b64  	%rd1089, %rd1086, %rd1088;
	xor.b64  	%rd1090, %rd1089, %rd1087;
	shf.r.wrap.b32 	%r1574, %r1223, %r1222, 1;
	shf.r.wrap.b32 	%r1575, %r1222, %r1223, 1;
	mov.b64 	%rd1091, {%r1575, %r1574};
	shf.r.wrap.b32 	%r1576, %r1223, %r1222, 8;
	shf.r.wrap.b32 	%r1577, %r1222, %r1223, 8;
	mov.b64 	%rd1092, {%r1577, %r1576};
	shr.u64 	%rd1093, %rd587, 7;
	xor.b64  	%rd1094, %rd1091, %rd1093;
	xor.b64  	%rd1095, %rd1094, %rd1092;
	add.s64 	%rd1096, %rd32, %rd638;
	add.s64 	%rd1097, %rd1096, %rd1090;
	add.s64 	%rd1098, %rd1097, %rd1095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd1085;
	}
	shf.r.wrap.b32 	%r1580, %r1579, %r1578, 19;
	shf.r.wrap.b32 	%r1581, %r1578, %r1579, 19;
	mov.b64 	%rd1099, {%r1581, %r1580};
	shf.l.wrap.b32 	%r1582, %r1578, %r1579, 3;
	shf.l.wrap.b32 	%r1583, %r1579, %r1578, 3;
	mov.b64 	%rd1100, {%r1583, %r1582};
	shr.u64 	%rd1101, %rd1085, 6;
	xor.b64  	%rd1102, %rd1099, %rd1101;
	xor.b64  	%rd1103, %rd1102, %rd1100;
	shf.r.wrap.b32 	%r1584, %r1229, %r1228, 1;
	shf.r.wrap.b32 	%r1585, %r1228, %r1229, 1;
	mov.b64 	%rd1104, {%r1585, %r1584};
	shf.r.wrap.b32 	%r1586, %r1229, %r1228, 8;
	shf.r.wrap.b32 	%r1587, %r1228, %r1229, 8;
	mov.b64 	%rd1105, {%r1587, %r1586};
	shr.u64 	%rd1106, %rd589, 7;
	xor.b64  	%rd1107, %rd1104, %rd1106;
	xor.b64  	%rd1108, %rd1107, %rd1105;
	add.s64 	%rd1109, %rd587, %rd651;
	add.s64 	%rd1110, %rd1109, %rd1103;
	add.s64 	%rd1111, %rd1110, %rd1108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1588,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1589}, %rd1098;
	}
	shf.r.wrap.b32 	%r1590, %r1589, %r1588, 19;
	shf.r.wrap.b32 	%r1591, %r1588, %r1589, 19;
	mov.b64 	%rd1112, {%r1591, %r1590};
	shf.l.wrap.b32 	%r1592, %r1588, %r1589, 3;
	shf.l.wrap.b32 	%r1593, %r1589, %r1588, 3;
	mov.b64 	%rd1113, {%r1593, %r1592};
	shr.u64 	%rd1114, %rd1098, 6;
	xor.b64  	%rd1115, %rd1112, %rd1114;
	xor.b64  	%rd1116, %rd1115, %rd1113;
	shf.r.wrap.b32 	%r1594, %r1235, %r1234, 1;
	shf.r.wrap.b32 	%r1595, %r1234, %r1235, 1;
	mov.b64 	%rd1117, {%r1595, %r1594};
	shf.r.wrap.b32 	%r1596, %r1235, %r1234, 8;
	shf.r.wrap.b32 	%r1597, %r1234, %r1235, 8;
	mov.b64 	%rd1118, {%r1597, %r1596};
	shr.u64 	%rd1119, %rd596, 7;
	xor.b64  	%rd1120, %rd1117, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1118;
	add.s64 	%rd1122, %rd1043, %rd589;
	add.s64 	%rd1123, %rd1122, %rd1116;
	add.s64 	%rd1124, %rd1123, %rd1121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1598,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1599}, %rd1111;
	}
	shf.r.wrap.b32 	%r1600, %r1599, %r1598, 19;
	shf.r.wrap.b32 	%r1601, %r1598, %r1599, 19;
	mov.b64 	%rd1125, {%r1601, %r1600};
	shf.l.wrap.b32 	%r1602, %r1598, %r1599, 3;
	shf.l.wrap.b32 	%r1603, %r1599, %r1598, 3;
	mov.b64 	%rd1126, {%r1603, %r1602};
	shr.u64 	%rd1127, %rd1111, 6;
	xor.b64  	%rd1128, %rd1125, %rd1127;
	xor.b64  	%rd1129, %rd1128, %rd1126;
	shf.r.wrap.b32 	%r1604, %r1241, %r1240, 1;
	shf.r.wrap.b32 	%r1605, %r1240, %r1241, 1;
	mov.b64 	%rd1130, {%r1605, %r1604};
	shf.r.wrap.b32 	%r1606, %r1241, %r1240, 8;
	shf.r.wrap.b32 	%r1607, %r1240, %r1241, 8;
	mov.b64 	%rd1131, {%r1607, %r1606};
	shr.u64 	%rd1132, %rd603, 7;
	xor.b64  	%rd1133, %rd1130, %rd1132;
	xor.b64  	%rd1134, %rd1133, %rd1131;
	add.s64 	%rd1135, %rd1056, %rd596;
	add.s64 	%rd1136, %rd1135, %rd1129;
	add.s64 	%rd1137, %rd1136, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1608,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1609}, %rd1124;
	}
	shf.r.wrap.b32 	%r1610, %r1609, %r1608, 19;
	shf.r.wrap.b32 	%r1611, %r1608, %r1609, 19;
	mov.b64 	%rd1138, {%r1611, %r1610};
	shf.l.wrap.b32 	%r1612, %r1608, %r1609, 3;
	shf.l.wrap.b32 	%r1613, %r1609, %r1608, 3;
	mov.b64 	%rd1139, {%r1613, %r1612};
	shr.u64 	%rd1140, %rd1124, 6;
	xor.b64  	%rd1141, %rd1138, %rd1140;
	xor.b64  	%rd1142, %rd1141, %rd1139;
	shf.r.wrap.b32 	%r1614, %r1247, %r1246, 1;
	shf.r.wrap.b32 	%r1615, %r1246, %r1247, 1;
	mov.b64 	%rd1143, {%r1615, %r1614};
	shf.r.wrap.b32 	%r1616, %r1247, %r1246, 8;
	shf.r.wrap.b32 	%r1617, %r1246, %r1247, 8;
	mov.b64 	%rd1144, {%r1617, %r1616};
	shr.u64 	%rd1145, %rd610, 7;
	xor.b64  	%rd1146, %rd1143, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1144;
	add.s64 	%rd1148, %rd1064, %rd603;
	add.s64 	%rd1149, %rd1148, %rd1142;
	add.s64 	%rd1150, %rd1149, %rd1147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1618,%dummy}, %rd1137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1619}, %rd1137;
	}
	shf.r.wrap.b32 	%r1620, %r1619, %r1618, 19;
	shf.r.wrap.b32 	%r1621, %r1618, %r1619, 19;
	mov.b64 	%rd1151, {%r1621, %r1620};
	shf.l.wrap.b32 	%r1622, %r1618, %r1619, 3;
	shf.l.wrap.b32 	%r1623, %r1619, %r1618, 3;
	mov.b64 	%rd1152, {%r1623, %r1622};
	shr.u64 	%rd1153, %rd1137, 6;
	xor.b64  	%rd1154, %rd1151, %rd1153;
	xor.b64  	%rd1155, %rd1154, %rd1152;
	shf.r.wrap.b32 	%r1624, %r1253, %r1252, 1;
	shf.r.wrap.b32 	%r1625, %r1252, %r1253, 1;
	mov.b64 	%rd1156, {%r1625, %r1624};
	shf.r.wrap.b32 	%r1626, %r1253, %r1252, 8;
	shf.r.wrap.b32 	%r1627, %r1252, %r1253, 8;
	mov.b64 	%rd1157, {%r1627, %r1626};
	shr.u64 	%rd1158, %rd617, 7;
	xor.b64  	%rd1159, %rd1156, %rd1158;
	xor.b64  	%rd1160, %rd1159, %rd1157;
	add.s64 	%rd1161, %rd1077, %rd610;
	add.s64 	%rd1162, %rd1161, %rd1155;
	add.s64 	%rd1163, %rd1162, %rd1160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1628,%dummy}, %rd1150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1629}, %rd1150;
	}
	shf.r.wrap.b32 	%r1630, %r1629, %r1628, 19;
	shf.r.wrap.b32 	%r1631, %r1628, %r1629, 19;
	mov.b64 	%rd1164, {%r1631, %r1630};
	shf.l.wrap.b32 	%r1632, %r1628, %r1629, 3;
	shf.l.wrap.b32 	%r1633, %r1629, %r1628, 3;
	mov.b64 	%rd1165, {%r1633, %r1632};
	shr.u64 	%rd1166, %rd1150, 6;
	xor.b64  	%rd1167, %rd1164, %rd1166;
	xor.b64  	%rd1168, %rd1167, %rd1165;
	shf.r.wrap.b32 	%r1634, %r1259, %r1258, 1;
	shf.r.wrap.b32 	%r1635, %r1258, %r1259, 1;
	mov.b64 	%rd1169, {%r1635, %r1634};
	shf.r.wrap.b32 	%r1636, %r1259, %r1258, 8;
	shf.r.wrap.b32 	%r1637, %r1258, %r1259, 8;
	mov.b64 	%rd1170, {%r1637, %r1636};
	shr.u64 	%rd1171, %rd624, 7;
	xor.b64  	%rd1172, %rd1169, %rd1171;
	xor.b64  	%rd1173, %rd1172, %rd1170;
	add.s64 	%rd1174, %rd1085, %rd617;
	add.s64 	%rd1175, %rd1174, %rd1168;
	add.s64 	%rd1176, %rd1175, %rd1173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1638,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1639}, %rd1163;
	}
	shf.r.wrap.b32 	%r1640, %r1639, %r1638, 19;
	shf.r.wrap.b32 	%r1641, %r1638, %r1639, 19;
	mov.b64 	%rd1177, {%r1641, %r1640};
	shf.l.wrap.b32 	%r1642, %r1638, %r1639, 3;
	shf.l.wrap.b32 	%r1643, %r1639, %r1638, 3;
	mov.b64 	%rd1178, {%r1643, %r1642};
	shr.u64 	%rd1179, %rd1163, 6;
	xor.b64  	%rd1180, %rd1177, %rd1179;
	xor.b64  	%rd1181, %rd1180, %rd1178;
	shf.r.wrap.b32 	%r1644, %r1265, %r1264, 1;
	shf.r.wrap.b32 	%r1645, %r1264, %r1265, 1;
	mov.b64 	%rd1182, {%r1645, %r1644};
	shf.r.wrap.b32 	%r1646, %r1265, %r1264, 8;
	shf.r.wrap.b32 	%r1647, %r1264, %r1265, 8;
	mov.b64 	%rd1183, {%r1647, %r1646};
	shr.u64 	%rd1184, %rd631, 7;
	xor.b64  	%rd1185, %rd1182, %rd1184;
	xor.b64  	%rd1186, %rd1185, %rd1183;
	add.s64 	%rd1187, %rd1098, %rd624;
	add.s64 	%rd1188, %rd1187, %rd1181;
	add.s64 	%rd1189, %rd1188, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1648,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd1176;
	}
	shf.r.wrap.b32 	%r1650, %r1649, %r1648, 19;
	shf.r.wrap.b32 	%r1651, %r1648, %r1649, 19;
	mov.b64 	%rd1190, {%r1651, %r1650};
	shf.l.wrap.b32 	%r1652, %r1648, %r1649, 3;
	shf.l.wrap.b32 	%r1653, %r1649, %r1648, 3;
	mov.b64 	%rd1191, {%r1653, %r1652};
	shr.u64 	%rd1192, %rd1176, 6;
	xor.b64  	%rd1193, %rd1190, %rd1192;
	xor.b64  	%rd1194, %rd1193, %rd1191;
	shf.r.wrap.b32 	%r1654, %r1531, %r1530, 1;
	shf.r.wrap.b32 	%r1655, %r1530, %r1531, 1;
	mov.b64 	%rd1195, {%r1655, %r1654};
	shf.r.wrap.b32 	%r1656, %r1531, %r1530, 8;
	shf.r.wrap.b32 	%r1657, %r1530, %r1531, 8;
	mov.b64 	%rd1196, {%r1657, %r1656};
	shr.u64 	%rd1197, %rd638, 7;
	xor.b64  	%rd1198, %rd1195, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1196;
	add.s64 	%rd1200, %rd1111, %rd631;
	add.s64 	%rd1201, %rd1200, %rd1194;
	add.s64 	%rd1202, %rd1201, %rd1199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1658,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1659}, %rd1189;
	}
	shf.r.wrap.b32 	%r1660, %r1659, %r1658, 19;
	shf.r.wrap.b32 	%r1661, %r1658, %r1659, 19;
	mov.b64 	%rd1203, {%r1661, %r1660};
	shf.l.wrap.b32 	%r1662, %r1658, %r1659, 3;
	shf.l.wrap.b32 	%r1663, %r1659, %r1658, 3;
	mov.b64 	%rd1204, {%r1663, %r1662};
	shr.u64 	%rd1205, %rd1189, 6;
	xor.b64  	%rd1206, %rd1203, %rd1205;
	xor.b64  	%rd1207, %rd1206, %rd1204;
	shf.r.wrap.b32 	%r1664, %r1537, %r1536, 1;
	shf.r.wrap.b32 	%r1665, %r1536, %r1537, 1;
	mov.b64 	%rd1208, {%r1665, %r1664};
	shf.r.wrap.b32 	%r1666, %r1537, %r1536, 8;
	shf.r.wrap.b32 	%r1667, %r1536, %r1537, 8;
	mov.b64 	%rd1209, {%r1667, %r1666};
	shr.u64 	%rd1210, %rd651, 7;
	xor.b64  	%rd1211, %rd1208, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd1209;
	add.s64 	%rd1213, %rd1124, %rd638;
	add.s64 	%rd1214, %rd1213, %rd1207;
	add.s64 	%rd1215, %rd1214, %rd1212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1668,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1669}, %rd1202;
	}
	shf.r.wrap.b32 	%r1670, %r1669, %r1668, 19;
	shf.r.wrap.b32 	%r1671, %r1668, %r1669, 19;
	mov.b64 	%rd1216, {%r1671, %r1670};
	shf.l.wrap.b32 	%r1672, %r1668, %r1669, 3;
	shf.l.wrap.b32 	%r1673, %r1669, %r1668, 3;
	mov.b64 	%rd1217, {%r1673, %r1672};
	shr.u64 	%rd1218, %rd1202, 6;
	xor.b64  	%rd1219, %rd1216, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd1217;
	shf.r.wrap.b32 	%r1674, %r1547, %r1546, 1;
	shf.r.wrap.b32 	%r1675, %r1546, %r1547, 1;
	mov.b64 	%rd1221, {%r1675, %r1674};
	shf.r.wrap.b32 	%r1676, %r1547, %r1546, 8;
	shf.r.wrap.b32 	%r1677, %r1546, %r1547, 8;
	mov.b64 	%rd1222, {%r1677, %r1676};
	shr.u64 	%rd1223, %rd1043, 7;
	xor.b64  	%rd1224, %rd1221, %rd1223;
	xor.b64  	%rd1225, %rd1224, %rd1222;
	add.s64 	%rd1226, %rd1137, %rd651;
	add.s64 	%rd1227, %rd1226, %rd1220;
	add.s64 	%rd1228, %rd1227, %rd1225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1678,%dummy}, %rd1024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1679}, %rd1024;
	}
	shf.r.wrap.b32 	%r1680, %r1679, %r1678, 14;
	shf.r.wrap.b32 	%r1681, %r1678, %r1679, 14;
	mov.b64 	%rd1229, {%r1681, %r1680};
	shf.r.wrap.b32 	%r1682, %r1679, %r1678, 18;
	shf.r.wrap.b32 	%r1683, %r1678, %r1679, 18;
	mov.b64 	%rd1230, {%r1683, %r1682};
	xor.b64  	%rd1231, %rd1230, %rd1229;
	shf.l.wrap.b32 	%r1684, %r1678, %r1679, 23;
	shf.l.wrap.b32 	%r1685, %r1679, %r1678, 23;
	mov.b64 	%rd1232, {%r1685, %r1684};
	xor.b64  	%rd1233, %rd1231, %rd1232;
	xor.b64  	%rd1234, %rd976, %rd1000;
	and.b64  	%rd1235, %rd1234, %rd1024;
	xor.b64  	%rd1236, %rd1235, %rd976;
	add.s64 	%rd1237, %rd1236, %rd952;
	add.s64 	%rd1238, %rd1237, %rd1043;
	add.s64 	%rd1239, %rd1238, %rd56;
	add.s64 	%rd1240, %rd1239, %rd1233;
	add.s64 	%rd1241, %rd1240, %rd963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1686,%dummy}, %rd1035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1687}, %rd1035;
	}
	shf.r.wrap.b32 	%r1688, %r1687, %r1686, 28;
	shf.r.wrap.b32 	%r1689, %r1686, %r1687, 28;
	mov.b64 	%rd1242, {%r1689, %r1688};
	shf.l.wrap.b32 	%r1690, %r1686, %r1687, 30;
	shf.l.wrap.b32 	%r1691, %r1687, %r1686, 30;
	mov.b64 	%rd1243, {%r1691, %r1690};
	xor.b64  	%rd1244, %rd1243, %rd1242;
	shf.l.wrap.b32 	%r1692, %r1686, %r1687, 25;
	shf.l.wrap.b32 	%r1693, %r1687, %r1686, 25;
	mov.b64 	%rd1245, {%r1693, %r1692};
	xor.b64  	%rd1246, %rd1244, %rd1245;
	xor.b64  	%rd1247, %rd1035, %rd987;
	xor.b64  	%rd1248, %rd1035, %rd1011;
	and.b64  	%rd1249, %rd1248, %rd1247;
	xor.b64  	%rd1250, %rd1249, %rd1035;
	add.s64 	%rd1251, %rd1240, %rd1250;
	add.s64 	%rd1252, %rd1251, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1694,%dummy}, %rd1241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1695}, %rd1241;
	}
	shf.r.wrap.b32 	%r1696, %r1695, %r1694, 14;
	shf.r.wrap.b32 	%r1697, %r1694, %r1695, 14;
	mov.b64 	%rd1253, {%r1697, %r1696};
	shf.r.wrap.b32 	%r1698, %r1695, %r1694, 18;
	shf.r.wrap.b32 	%r1699, %r1694, %r1695, 18;
	mov.b64 	%rd1254, {%r1699, %r1698};
	xor.b64  	%rd1255, %rd1254, %rd1253;
	shf.l.wrap.b32 	%r1700, %r1694, %r1695, 23;
	shf.l.wrap.b32 	%r1701, %r1695, %r1694, 23;
	mov.b64 	%rd1256, {%r1701, %r1700};
	xor.b64  	%rd1257, %rd1255, %rd1256;
	xor.b64  	%rd1258, %rd1000, %rd1024;
	and.b64  	%rd1259, %rd1241, %rd1258;
	xor.b64  	%rd1260, %rd1259, %rd1000;
	add.s64 	%rd1261, %rd1056, %rd976;
	add.s64 	%rd1262, %rd1261, %rd57;
	add.s64 	%rd1263, %rd1262, %rd1260;
	add.s64 	%rd1264, %rd1263, %rd1257;
	add.s64 	%rd1265, %rd1264, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1702,%dummy}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1703}, %rd1252;
	}
	shf.r.wrap.b32 	%r1704, %r1703, %r1702, 28;
	shf.r.wrap.b32 	%r1705, %r1702, %r1703, 28;
	mov.b64 	%rd1266, {%r1705, %r1704};
	shf.l.wrap.b32 	%r1706, %r1702, %r1703, 30;
	shf.l.wrap.b32 	%r1707, %r1703, %r1702, 30;
	mov.b64 	%rd1267, {%r1707, %r1706};
	xor.b64  	%rd1268, %rd1267, %rd1266;
	shf.l.wrap.b32 	%r1708, %r1702, %r1703, 25;
	shf.l.wrap.b32 	%r1709, %r1703, %r1702, 25;
	mov.b64 	%rd1269, {%r1709, %r1708};
	xor.b64  	%rd1270, %rd1268, %rd1269;
	xor.b64  	%rd1271, %rd1252, %rd1011;
	xor.b64  	%rd1272, %rd1252, %rd1035;
	and.b64  	%rd1273, %rd1272, %rd1271;
	xor.b64  	%rd1274, %rd1273, %rd1252;
	add.s64 	%rd1275, %rd1264, %rd1274;
	add.s64 	%rd1276, %rd1275, %rd1270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1711}, %rd1265;
	}
	shf.r.wrap.b32 	%r1712, %r1711, %r1710, 14;
	shf.r.wrap.b32 	%r1713, %r1710, %r1711, 14;
	mov.b64 	%rd1277, {%r1713, %r1712};
	shf.r.wrap.b32 	%r1714, %r1711, %r1710, 18;
	shf.r.wrap.b32 	%r1715, %r1710, %r1711, 18;
	mov.b64 	%rd1278, {%r1715, %r1714};
	xor.b64  	%rd1279, %rd1278, %rd1277;
	shf.l.wrap.b32 	%r1716, %r1710, %r1711, 23;
	shf.l.wrap.b32 	%r1717, %r1711, %r1710, 23;
	mov.b64 	%rd1280, {%r1717, %r1716};
	xor.b64  	%rd1281, %rd1279, %rd1280;
	xor.b64  	%rd1282, %rd1241, %rd1024;
	and.b64  	%rd1283, %rd1265, %rd1282;
	xor.b64  	%rd1284, %rd1283, %rd1024;
	add.s64 	%rd1285, %rd1064, %rd1000;
	add.s64 	%rd1286, %rd1285, %rd58;
	add.s64 	%rd1287, %rd1286, %rd1284;
	add.s64 	%rd1288, %rd1287, %rd1281;
	add.s64 	%rd1289, %rd1288, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1718,%dummy}, %rd1276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1719}, %rd1276;
	}
	shf.r.wrap.b32 	%r1720, %r1719, %r1718, 28;
	shf.r.wrap.b32 	%r1721, %r1718, %r1719, 28;
	mov.b64 	%rd1290, {%r1721, %r1720};
	shf.l.wrap.b32 	%r1722, %r1718, %r1719, 30;
	shf.l.wrap.b32 	%r1723, %r1719, %r1718, 30;
	mov.b64 	%rd1291, {%r1723, %r1722};
	xor.b64  	%rd1292, %rd1291, %rd1290;
	shf.l.wrap.b32 	%r1724, %r1718, %r1719, 25;
	shf.l.wrap.b32 	%r1725, %r1719, %r1718, 25;
	mov.b64 	%rd1293, {%r1725, %r1724};
	xor.b64  	%rd1294, %rd1292, %rd1293;
	xor.b64  	%rd1295, %rd1276, %rd1035;
	xor.b64  	%rd1296, %rd1276, %rd1252;
	and.b64  	%rd1297, %rd1296, %rd1295;
	xor.b64  	%rd1298, %rd1297, %rd1276;
	add.s64 	%rd1299, %rd1288, %rd1298;
	add.s64 	%rd1300, %rd1299, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1726,%dummy}, %rd1289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1727}, %rd1289;
	}
	shf.r.wrap.b32 	%r1728, %r1727, %r1726, 14;
	shf.r.wrap.b32 	%r1729, %r1726, %r1727, 14;
	mov.b64 	%rd1301, {%r1729, %r1728};
	shf.r.wrap.b32 	%r1730, %r1727, %r1726, 18;
	shf.r.wrap.b32 	%r1731, %r1726, %r1727, 18;
	mov.b64 	%rd1302, {%r1731, %r1730};
	xor.b64  	%rd1303, %rd1302, %rd1301;
	shf.l.wrap.b32 	%r1732, %r1726, %r1727, 23;
	shf.l.wrap.b32 	%r1733, %r1727, %r1726, 23;
	mov.b64 	%rd1304, {%r1733, %r1732};
	xor.b64  	%rd1305, %rd1303, %rd1304;
	xor.b64  	%rd1306, %rd1265, %rd1241;
	and.b64  	%rd1307, %rd1289, %rd1306;
	xor.b64  	%rd1308, %rd1307, %rd1241;
	add.s64 	%rd1309, %rd1077, %rd1024;
	add.s64 	%rd1310, %rd1309, %rd59;
	add.s64 	%rd1311, %rd1310, %rd1308;
	add.s64 	%rd1312, %rd1311, %rd1305;
	add.s64 	%rd1313, %rd1312, %rd1035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd1300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd1300;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 28;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 28;
	mov.b64 	%rd1314, {%r1737, %r1736};
	shf.l.wrap.b32 	%r1738, %r1734, %r1735, 30;
	shf.l.wrap.b32 	%r1739, %r1735, %r1734, 30;
	mov.b64 	%rd1315, {%r1739, %r1738};
	xor.b64  	%rd1316, %rd1315, %rd1314;
	shf.l.wrap.b32 	%r1740, %r1734, %r1735, 25;
	shf.l.wrap.b32 	%r1741, %r1735, %r1734, 25;
	mov.b64 	%rd1317, {%r1741, %r1740};
	xor.b64  	%rd1318, %rd1316, %rd1317;
	xor.b64  	%rd1319, %rd1300, %rd1252;
	xor.b64  	%rd1320, %rd1300, %rd1276;
	and.b64  	%rd1321, %rd1320, %rd1319;
	xor.b64  	%rd1322, %rd1321, %rd1300;
	add.s64 	%rd1323, %rd1312, %rd1322;
	add.s64 	%rd1324, %rd1323, %rd1318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd1313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1743}, %rd1313;
	}
	shf.r.wrap.b32 	%r1744, %r1743, %r1742, 14;
	shf.r.wrap.b32 	%r1745, %r1742, %r1743, 14;
	mov.b64 	%rd1325, {%r1745, %r1744};
	shf.r.wrap.b32 	%r1746, %r1743, %r1742, 18;
	shf.r.wrap.b32 	%r1747, %r1742, %r1743, 18;
	mov.b64 	%rd1326, {%r1747, %r1746};
	xor.b64  	%rd1327, %rd1326, %rd1325;
	shf.l.wrap.b32 	%r1748, %r1742, %r1743, 23;
	shf.l.wrap.b32 	%r1749, %r1743, %r1742, 23;
	mov.b64 	%rd1328, {%r1749, %r1748};
	xor.b64  	%rd1329, %rd1327, %rd1328;
	xor.b64  	%rd1330, %rd1289, %rd1265;
	and.b64  	%rd1331, %rd1313, %rd1330;
	xor.b64  	%rd1332, %rd1331, %rd1265;
	add.s64 	%rd1333, %rd1241, %rd1085;
	add.s64 	%rd1334, %rd1333, %rd60;
	add.s64 	%rd1335, %rd1334, %rd1332;
	add.s64 	%rd1336, %rd1335, %rd1329;
	add.s64 	%rd1337, %rd1336, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1750,%dummy}, %rd1324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1751}, %rd1324;
	}
	shf.r.wrap.b32 	%r1752, %r1751, %r1750, 28;
	shf.r.wrap.b32 	%r1753, %r1750, %r1751, 28;
	mov.b64 	%rd1338, {%r1753, %r1752};
	shf.l.wrap.b32 	%r1754, %r1750, %r1751, 30;
	shf.l.wrap.b32 	%r1755, %r1751, %r1750, 30;
	mov.b64 	%rd1339, {%r1755, %r1754};
	xor.b64  	%rd1340, %rd1339, %rd1338;
	shf.l.wrap.b32 	%r1756, %r1750, %r1751, 25;
	shf.l.wrap.b32 	%r1757, %r1751, %r1750, 25;
	mov.b64 	%rd1341, {%r1757, %r1756};
	xor.b64  	%rd1342, %rd1340, %rd1341;
	xor.b64  	%rd1343, %rd1324, %rd1276;
	xor.b64  	%rd1344, %rd1324, %rd1300;
	and.b64  	%rd1345, %rd1344, %rd1343;
	xor.b64  	%rd1346, %rd1345, %rd1324;
	add.s64 	%rd1347, %rd1336, %rd1346;
	add.s64 	%rd1348, %rd1347, %rd1342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd1337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1759}, %rd1337;
	}
	shf.r.wrap.b32 	%r1760, %r1759, %r1758, 14;
	shf.r.wrap.b32 	%r1761, %r1758, %r1759, 14;
	mov.b64 	%rd1349, {%r1761, %r1760};
	shf.r.wrap.b32 	%r1762, %r1759, %r1758, 18;
	shf.r.wrap.b32 	%r1763, %r1758, %r1759, 18;
	mov.b64 	%rd1350, {%r1763, %r1762};
	xor.b64  	%rd1351, %rd1350, %rd1349;
	shf.l.wrap.b32 	%r1764, %r1758, %r1759, 23;
	shf.l.wrap.b32 	%r1765, %r1759, %r1758, 23;
	mov.b64 	%rd1352, {%r1765, %r1764};
	xor.b64  	%rd1353, %rd1351, %rd1352;
	xor.b64  	%rd1354, %rd1313, %rd1289;
	and.b64  	%rd1355, %rd1337, %rd1354;
	xor.b64  	%rd1356, %rd1355, %rd1289;
	add.s64 	%rd1357, %rd1265, %rd1098;
	add.s64 	%rd1358, %rd1357, %rd61;
	add.s64 	%rd1359, %rd1358, %rd1356;
	add.s64 	%rd1360, %rd1359, %rd1353;
	add.s64 	%rd1361, %rd1360, %rd1276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1766,%dummy}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1767}, %rd1348;
	}
	shf.r.wrap.b32 	%r1768, %r1767, %r1766, 28;
	shf.r.wrap.b32 	%r1769, %r1766, %r1767, 28;
	mov.b64 	%rd1362, {%r1769, %r1768};
	shf.l.wrap.b32 	%r1770, %r1766, %r1767, 30;
	shf.l.wrap.b32 	%r1771, %r1767, %r1766, 30;
	mov.b64 	%rd1363, {%r1771, %r1770};
	xor.b64  	%rd1364, %rd1363, %rd1362;
	shf.l.wrap.b32 	%r1772, %r1766, %r1767, 25;
	shf.l.wrap.b32 	%r1773, %r1767, %r1766, 25;
	mov.b64 	%rd1365, {%r1773, %r1772};
	xor.b64  	%rd1366, %rd1364, %rd1365;
	xor.b64  	%rd1367, %rd1348, %rd1300;
	xor.b64  	%rd1368, %rd1348, %rd1324;
	and.b64  	%rd1369, %rd1368, %rd1367;
	xor.b64  	%rd1370, %rd1369, %rd1348;
	add.s64 	%rd1371, %rd1360, %rd1370;
	add.s64 	%rd1372, %rd1371, %rd1366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1775}, %rd1361;
	}
	shf.r.wrap.b32 	%r1776, %r1775, %r1774, 14;
	shf.r.wrap.b32 	%r1777, %r1774, %r1775, 14;
	mov.b64 	%rd1373, {%r1777, %r1776};
	shf.r.wrap.b32 	%r1778, %r1775, %r1774, 18;
	shf.r.wrap.b32 	%r1779, %r1774, %r1775, 18;
	mov.b64 	%rd1374, {%r1779, %r1778};
	xor.b64  	%rd1375, %rd1374, %rd1373;
	shf.l.wrap.b32 	%r1780, %r1774, %r1775, 23;
	shf.l.wrap.b32 	%r1781, %r1775, %r1774, 23;
	mov.b64 	%rd1376, {%r1781, %r1780};
	xor.b64  	%rd1377, %rd1375, %rd1376;
	xor.b64  	%rd1378, %rd1337, %rd1313;
	and.b64  	%rd1379, %rd1361, %rd1378;
	xor.b64  	%rd1380, %rd1379, %rd1313;
	add.s64 	%rd1381, %rd1289, %rd1111;
	add.s64 	%rd1382, %rd1381, %rd62;
	add.s64 	%rd1383, %rd1382, %rd1380;
	add.s64 	%rd1384, %rd1383, %rd1377;
	add.s64 	%rd1385, %rd1384, %rd1300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1782,%dummy}, %rd1372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1783}, %rd1372;
	}
	shf.r.wrap.b32 	%r1784, %r1783, %r1782, 28;
	shf.r.wrap.b32 	%r1785, %r1782, %r1783, 28;
	mov.b64 	%rd1386, {%r1785, %r1784};
	shf.l.wrap.b32 	%r1786, %r1782, %r1783, 30;
	shf.l.wrap.b32 	%r1787, %r1783, %r1782, 30;
	mov.b64 	%rd1387, {%r1787, %r1786};
	xor.b64  	%rd1388, %rd1387, %rd1386;
	shf.l.wrap.b32 	%r1788, %r1782, %r1783, 25;
	shf.l.wrap.b32 	%r1789, %r1783, %r1782, 25;
	mov.b64 	%rd1389, {%r1789, %r1788};
	xor.b64  	%rd1390, %rd1388, %rd1389;
	xor.b64  	%rd1391, %rd1372, %rd1324;
	xor.b64  	%rd1392, %rd1372, %rd1348;
	and.b64  	%rd1393, %rd1392, %rd1391;
	xor.b64  	%rd1394, %rd1393, %rd1372;
	add.s64 	%rd1395, %rd1384, %rd1394;
	add.s64 	%rd1396, %rd1395, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1790,%dummy}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1791}, %rd1385;
	}
	shf.r.wrap.b32 	%r1792, %r1791, %r1790, 14;
	shf.r.wrap.b32 	%r1793, %r1790, %r1791, 14;
	mov.b64 	%rd1397, {%r1793, %r1792};
	shf.r.wrap.b32 	%r1794, %r1791, %r1790, 18;
	shf.r.wrap.b32 	%r1795, %r1790, %r1791, 18;
	mov.b64 	%rd1398, {%r1795, %r1794};
	xor.b64  	%rd1399, %rd1398, %rd1397;
	shf.l.wrap.b32 	%r1796, %r1790, %r1791, 23;
	shf.l.wrap.b32 	%r1797, %r1791, %r1790, 23;
	mov.b64 	%rd1400, {%r1797, %r1796};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	xor.b64  	%rd1402, %rd1361, %rd1337;
	and.b64  	%rd1403, %rd1385, %rd1402;
	xor.b64  	%rd1404, %rd1403, %rd1337;
	add.s64 	%rd1405, %rd1313, %rd1124;
	add.s64 	%rd1406, %rd1405, %rd63;
	add.s64 	%rd1407, %rd1406, %rd1404;
	add.s64 	%rd1408, %rd1407, %rd1401;
	add.s64 	%rd1409, %rd1408, %rd1324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1798,%dummy}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1799}, %rd1396;
	}
	shf.r.wrap.b32 	%r1800, %r1799, %r1798, 28;
	shf.r.wrap.b32 	%r1801, %r1798, %r1799, 28;
	mov.b64 	%rd1410, {%r1801, %r1800};
	shf.l.wrap.b32 	%r1802, %r1798, %r1799, 30;
	shf.l.wrap.b32 	%r1803, %r1799, %r1798, 30;
	mov.b64 	%rd1411, {%r1803, %r1802};
	xor.b64  	%rd1412, %rd1411, %rd1410;
	shf.l.wrap.b32 	%r1804, %r1798, %r1799, 25;
	shf.l.wrap.b32 	%r1805, %r1799, %r1798, 25;
	mov.b64 	%rd1413, {%r1805, %r1804};
	xor.b64  	%rd1414, %rd1412, %rd1413;
	xor.b64  	%rd1415, %rd1396, %rd1348;
	xor.b64  	%rd1416, %rd1396, %rd1372;
	and.b64  	%rd1417, %rd1416, %rd1415;
	xor.b64  	%rd1418, %rd1417, %rd1396;
	add.s64 	%rd1419, %rd1408, %rd1418;
	add.s64 	%rd1420, %rd1419, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1806,%dummy}, %rd1409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1807}, %rd1409;
	}
	shf.r.wrap.b32 	%r1808, %r1807, %r1806, 14;
	shf.r.wrap.b32 	%r1809, %r1806, %r1807, 14;
	mov.b64 	%rd1421, {%r1809, %r1808};
	shf.r.wrap.b32 	%r1810, %r1807, %r1806, 18;
	shf.r.wrap.b32 	%r1811, %r1806, %r1807, 18;
	mov.b64 	%rd1422, {%r1811, %r1810};
	xor.b64  	%rd1423, %rd1422, %rd1421;
	shf.l.wrap.b32 	%r1812, %r1806, %r1807, 23;
	shf.l.wrap.b32 	%r1813, %r1807, %r1806, 23;
	mov.b64 	%rd1424, {%r1813, %r1812};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	xor.b64  	%rd1426, %rd1385, %rd1361;
	and.b64  	%rd1427, %rd1409, %rd1426;
	xor.b64  	%rd1428, %rd1427, %rd1361;
	add.s64 	%rd1429, %rd1337, %rd1137;
	add.s64 	%rd1430, %rd1429, %rd64;
	add.s64 	%rd1431, %rd1430, %rd1428;
	add.s64 	%rd1432, %rd1431, %rd1425;
	add.s64 	%rd1433, %rd1432, %rd1348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1815}, %rd1420;
	}
	shf.r.wrap.b32 	%r1816, %r1815, %r1814, 28;
	shf.r.wrap.b32 	%r1817, %r1814, %r1815, 28;
	mov.b64 	%rd1434, {%r1817, %r1816};
	shf.l.wrap.b32 	%r1818, %r1814, %r1815, 30;
	shf.l.wrap.b32 	%r1819, %r1815, %r1814, 30;
	mov.b64 	%rd1435, {%r1819, %r1818};
	xor.b64  	%rd1436, %rd1435, %rd1434;
	shf.l.wrap.b32 	%r1820, %r1814, %r1815, 25;
	shf.l.wrap.b32 	%r1821, %r1815, %r1814, 25;
	mov.b64 	%rd1437, {%r1821, %r1820};
	xor.b64  	%rd1438, %rd1436, %rd1437;
	xor.b64  	%rd1439, %rd1420, %rd1372;
	xor.b64  	%rd1440, %rd1420, %rd1396;
	and.b64  	%rd1441, %rd1440, %rd1439;
	xor.b64  	%rd1442, %rd1441, %rd1420;
	add.s64 	%rd1443, %rd1432, %rd1442;
	add.s64 	%rd1444, %rd1443, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1823}, %rd1433;
	}
	shf.r.wrap.b32 	%r1824, %r1823, %r1822, 14;
	shf.r.wrap.b32 	%r1825, %r1822, %r1823, 14;
	mov.b64 	%rd1445, {%r1825, %r1824};
	shf.r.wrap.b32 	%r1826, %r1823, %r1822, 18;
	shf.r.wrap.b32 	%r1827, %r1822, %r1823, 18;
	mov.b64 	%rd1446, {%r1827, %r1826};
	xor.b64  	%rd1447, %rd1446, %rd1445;
	shf.l.wrap.b32 	%r1828, %r1822, %r1823, 23;
	shf.l.wrap.b32 	%r1829, %r1823, %r1822, 23;
	mov.b64 	%rd1448, {%r1829, %r1828};
	xor.b64  	%rd1449, %rd1447, %rd1448;
	xor.b64  	%rd1450, %rd1409, %rd1385;
	and.b64  	%rd1451, %rd1433, %rd1450;
	xor.b64  	%rd1452, %rd1451, %rd1385;
	add.s64 	%rd1453, %rd1361, %rd1150;
	add.s64 	%rd1454, %rd1453, %rd65;
	add.s64 	%rd1455, %rd1454, %rd1452;
	add.s64 	%rd1456, %rd1455, %rd1449;
	add.s64 	%rd1457, %rd1456, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1830,%dummy}, %rd1444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1831}, %rd1444;
	}
	shf.r.wrap.b32 	%r1832, %r1831, %r1830, 28;
	shf.r.wrap.b32 	%r1833, %r1830, %r1831, 28;
	mov.b64 	%rd1458, {%r1833, %r1832};
	shf.l.wrap.b32 	%r1834, %r1830, %r1831, 30;
	shf.l.wrap.b32 	%r1835, %r1831, %r1830, 30;
	mov.b64 	%rd1459, {%r1835, %r1834};
	xor.b64  	%rd1460, %rd1459, %rd1458;
	shf.l.wrap.b32 	%r1836, %r1830, %r1831, 25;
	shf.l.wrap.b32 	%r1837, %r1831, %r1830, 25;
	mov.b64 	%rd1461, {%r1837, %r1836};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	xor.b64  	%rd1463, %rd1444, %rd1396;
	xor.b64  	%rd1464, %rd1444, %rd1420;
	and.b64  	%rd1465, %rd1464, %rd1463;
	xor.b64  	%rd1466, %rd1465, %rd1444;
	add.s64 	%rd1467, %rd1456, %rd1466;
	add.s64 	%rd1468, %rd1467, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1838,%dummy}, %rd1457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1839}, %rd1457;
	}
	shf.r.wrap.b32 	%r1840, %r1839, %r1838, 14;
	shf.r.wrap.b32 	%r1841, %r1838, %r1839, 14;
	mov.b64 	%rd1469, {%r1841, %r1840};
	shf.r.wrap.b32 	%r1842, %r1839, %r1838, 18;
	shf.r.wrap.b32 	%r1843, %r1838, %r1839, 18;
	mov.b64 	%rd1470, {%r1843, %r1842};
	xor.b64  	%rd1471, %rd1470, %rd1469;
	shf.l.wrap.b32 	%r1844, %r1838, %r1839, 23;
	shf.l.wrap.b32 	%r1845, %r1839, %r1838, 23;
	mov.b64 	%rd1472, {%r1845, %r1844};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	xor.b64  	%rd1474, %rd1433, %rd1409;
	and.b64  	%rd1475, %rd1457, %rd1474;
	xor.b64  	%rd1476, %rd1475, %rd1409;
	add.s64 	%rd1477, %rd1385, %rd1163;
	add.s64 	%rd1478, %rd1477, %rd66;
	add.s64 	%rd1479, %rd1478, %rd1476;
	add.s64 	%rd1480, %rd1479, %rd1473;
	add.s64 	%rd1481, %rd1480, %rd1396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd1468;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 28;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 28;
	mov.b64 	%rd1482, {%r1849, %r1848};
	shf.l.wrap.b32 	%r1850, %r1846, %r1847, 30;
	shf.l.wrap.b32 	%r1851, %r1847, %r1846, 30;
	mov.b64 	%rd1483, {%r1851, %r1850};
	xor.b64  	%rd1484, %rd1483, %rd1482;
	shf.l.wrap.b32 	%r1852, %r1846, %r1847, 25;
	shf.l.wrap.b32 	%r1853, %r1847, %r1846, 25;
	mov.b64 	%rd1485, {%r1853, %r1852};
	xor.b64  	%rd1486, %rd1484, %rd1485;
	xor.b64  	%rd1487, %rd1468, %rd1420;
	xor.b64  	%rd1488, %rd1468, %rd1444;
	and.b64  	%rd1489, %rd1488, %rd1487;
	xor.b64  	%rd1490, %rd1489, %rd1468;
	add.s64 	%rd1491, %rd1480, %rd1490;
	add.s64 	%rd1492, %rd1491, %rd1486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd1481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1855}, %rd1481;
	}
	shf.r.wrap.b32 	%r1856, %r1855, %r1854, 14;
	shf.r.wrap.b32 	%r1857, %r1854, %r1855, 14;
	mov.b64 	%rd1493, {%r1857, %r1856};
	shf.r.wrap.b32 	%r1858, %r1855, %r1854, 18;
	shf.r.wrap.b32 	%r1859, %r1854, %r1855, 18;
	mov.b64 	%rd1494, {%r1859, %r1858};
	xor.b64  	%rd1495, %rd1494, %rd1493;
	shf.l.wrap.b32 	%r1860, %r1854, %r1855, 23;
	shf.l.wrap.b32 	%r1861, %r1855, %r1854, 23;
	mov.b64 	%rd1496, {%r1861, %r1860};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	xor.b64  	%rd1498, %rd1457, %rd1433;
	and.b64  	%rd1499, %rd1481, %rd1498;
	xor.b64  	%rd1500, %rd1499, %rd1433;
	add.s64 	%rd1501, %rd1409, %rd1176;
	add.s64 	%rd1502, %rd1501, %rd67;
	add.s64 	%rd1503, %rd1502, %rd1500;
	add.s64 	%rd1504, %rd1503, %rd1497;
	add.s64 	%rd1505, %rd1504, %rd1420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1862,%dummy}, %rd1492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1863}, %rd1492;
	}
	shf.r.wrap.b32 	%r1864, %r1863, %r1862, 28;
	shf.r.wrap.b32 	%r1865, %r1862, %r1863, 28;
	mov.b64 	%rd1506, {%r1865, %r1864};
	shf.l.wrap.b32 	%r1866, %r1862, %r1863, 30;
	shf.l.wrap.b32 	%r1867, %r1863, %r1862, 30;
	mov.b64 	%rd1507, {%r1867, %r1866};
	xor.b64  	%rd1508, %rd1507, %rd1506;
	shf.l.wrap.b32 	%r1868, %r1862, %r1863, 25;
	shf.l.wrap.b32 	%r1869, %r1863, %r1862, 25;
	mov.b64 	%rd1509, {%r1869, %r1868};
	xor.b64  	%rd1510, %rd1508, %rd1509;
	xor.b64  	%rd1511, %rd1492, %rd1444;
	xor.b64  	%rd1512, %rd1492, %rd1468;
	and.b64  	%rd1513, %rd1512, %rd1511;
	xor.b64  	%rd1514, %rd1513, %rd1492;
	add.s64 	%rd1515, %rd1504, %rd1514;
	add.s64 	%rd1516, %rd1515, %rd1510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1870,%dummy}, %rd1505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1871}, %rd1505;
	}
	shf.r.wrap.b32 	%r1872, %r1871, %r1870, 14;
	shf.r.wrap.b32 	%r1873, %r1870, %r1871, 14;
	mov.b64 	%rd1517, {%r1873, %r1872};
	shf.r.wrap.b32 	%r1874, %r1871, %r1870, 18;
	shf.r.wrap.b32 	%r1875, %r1870, %r1871, 18;
	mov.b64 	%rd1518, {%r1875, %r1874};
	xor.b64  	%rd1519, %rd1518, %rd1517;
	shf.l.wrap.b32 	%r1876, %r1870, %r1871, 23;
	shf.l.wrap.b32 	%r1877, %r1871, %r1870, 23;
	mov.b64 	%rd1520, {%r1877, %r1876};
	xor.b64  	%rd1521, %rd1519, %rd1520;
	xor.b64  	%rd1522, %rd1481, %rd1457;
	and.b64  	%rd1523, %rd1505, %rd1522;
	xor.b64  	%rd1524, %rd1523, %rd1457;
	add.s64 	%rd1525, %rd1433, %rd1189;
	add.s64 	%rd1526, %rd1525, %rd68;
	add.s64 	%rd1527, %rd1526, %rd1524;
	add.s64 	%rd1528, %rd1527, %rd1521;
	add.s64 	%rd1529, %rd1528, %rd1444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1878,%dummy}, %rd1516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1879}, %rd1516;
	}
	shf.r.wrap.b32 	%r1880, %r1879, %r1878, 28;
	shf.r.wrap.b32 	%r1881, %r1878, %r1879, 28;
	mov.b64 	%rd1530, {%r1881, %r1880};
	shf.l.wrap.b32 	%r1882, %r1878, %r1879, 30;
	shf.l.wrap.b32 	%r1883, %r1879, %r1878, 30;
	mov.b64 	%rd1531, {%r1883, %r1882};
	xor.b64  	%rd1532, %rd1531, %rd1530;
	shf.l.wrap.b32 	%r1884, %r1878, %r1879, 25;
	shf.l.wrap.b32 	%r1885, %r1879, %r1878, 25;
	mov.b64 	%rd1533, {%r1885, %r1884};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	xor.b64  	%rd1535, %rd1516, %rd1468;
	xor.b64  	%rd1536, %rd1516, %rd1492;
	and.b64  	%rd1537, %rd1536, %rd1535;
	xor.b64  	%rd1538, %rd1537, %rd1516;
	add.s64 	%rd1539, %rd1528, %rd1538;
	add.s64 	%rd1540, %rd1539, %rd1534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1886,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1887}, %rd1529;
	}
	shf.r.wrap.b32 	%r1888, %r1887, %r1886, 14;
	shf.r.wrap.b32 	%r1889, %r1886, %r1887, 14;
	mov.b64 	%rd1541, {%r1889, %r1888};
	shf.r.wrap.b32 	%r1890, %r1887, %r1886, 18;
	shf.r.wrap.b32 	%r1891, %r1886, %r1887, 18;
	mov.b64 	%rd1542, {%r1891, %r1890};
	xor.b64  	%rd1543, %rd1542, %rd1541;
	shf.l.wrap.b32 	%r1892, %r1886, %r1887, 23;
	shf.l.wrap.b32 	%r1893, %r1887, %r1886, 23;
	mov.b64 	%rd1544, {%r1893, %r1892};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	xor.b64  	%rd1546, %rd1505, %rd1481;
	and.b64  	%rd1547, %rd1529, %rd1546;
	xor.b64  	%rd1548, %rd1547, %rd1481;
	add.s64 	%rd1549, %rd1457, %rd1202;
	add.s64 	%rd1550, %rd1549, %rd69;
	add.s64 	%rd1551, %rd1550, %rd1548;
	add.s64 	%rd1552, %rd1551, %rd1545;
	add.s64 	%rd1553, %rd1552, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1894,%dummy}, %rd1540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1895}, %rd1540;
	}
	shf.r.wrap.b32 	%r1896, %r1895, %r1894, 28;
	shf.r.wrap.b32 	%r1897, %r1894, %r1895, 28;
	mov.b64 	%rd1554, {%r1897, %r1896};
	shf.l.wrap.b32 	%r1898, %r1894, %r1895, 30;
	shf.l.wrap.b32 	%r1899, %r1895, %r1894, 30;
	mov.b64 	%rd1555, {%r1899, %r1898};
	xor.b64  	%rd1556, %rd1555, %rd1554;
	shf.l.wrap.b32 	%r1900, %r1894, %r1895, 25;
	shf.l.wrap.b32 	%r1901, %r1895, %r1894, 25;
	mov.b64 	%rd1557, {%r1901, %r1900};
	xor.b64  	%rd1558, %rd1556, %rd1557;
	xor.b64  	%rd1559, %rd1540, %rd1492;
	xor.b64  	%rd1560, %rd1540, %rd1516;
	and.b64  	%rd1561, %rd1560, %rd1559;
	xor.b64  	%rd1562, %rd1561, %rd1540;
	add.s64 	%rd1563, %rd1552, %rd1562;
	add.s64 	%rd1564, %rd1563, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1902,%dummy}, %rd1553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1903}, %rd1553;
	}
	shf.r.wrap.b32 	%r1904, %r1903, %r1902, 14;
	shf.r.wrap.b32 	%r1905, %r1902, %r1903, 14;
	mov.b64 	%rd1565, {%r1905, %r1904};
	shf.r.wrap.b32 	%r1906, %r1903, %r1902, 18;
	shf.r.wrap.b32 	%r1907, %r1902, %r1903, 18;
	mov.b64 	%rd1566, {%r1907, %r1906};
	xor.b64  	%rd1567, %rd1566, %rd1565;
	shf.l.wrap.b32 	%r1908, %r1902, %r1903, 23;
	shf.l.wrap.b32 	%r1909, %r1903, %r1902, 23;
	mov.b64 	%rd1568, {%r1909, %r1908};
	xor.b64  	%rd1569, %rd1567, %rd1568;
	xor.b64  	%rd1570, %rd1529, %rd1505;
	and.b64  	%rd1571, %rd1553, %rd1570;
	xor.b64  	%rd1572, %rd1571, %rd1505;
	add.s64 	%rd1573, %rd1481, %rd1215;
	add.s64 	%rd1574, %rd1573, %rd70;
	add.s64 	%rd1575, %rd1574, %rd1572;
	add.s64 	%rd1576, %rd1575, %rd1569;
	add.s64 	%rd1577, %rd1576, %rd1492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1910,%dummy}, %rd1564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1911}, %rd1564;
	}
	shf.r.wrap.b32 	%r1912, %r1911, %r1910, 28;
	shf.r.wrap.b32 	%r1913, %r1910, %r1911, 28;
	mov.b64 	%rd1578, {%r1913, %r1912};
	shf.l.wrap.b32 	%r1914, %r1910, %r1911, 30;
	shf.l.wrap.b32 	%r1915, %r1911, %r1910, 30;
	mov.b64 	%rd1579, {%r1915, %r1914};
	xor.b64  	%rd1580, %rd1579, %rd1578;
	shf.l.wrap.b32 	%r1916, %r1910, %r1911, 25;
	shf.l.wrap.b32 	%r1917, %r1911, %r1910, 25;
	mov.b64 	%rd1581, {%r1917, %r1916};
	xor.b64  	%rd1582, %rd1580, %rd1581;
	xor.b64  	%rd1583, %rd1564, %rd1516;
	xor.b64  	%rd1584, %rd1564, %rd1540;
	and.b64  	%rd1585, %rd1584, %rd1583;
	xor.b64  	%rd1586, %rd1585, %rd1564;
	add.s64 	%rd1587, %rd1576, %rd1586;
	add.s64 	%rd1588, %rd1587, %rd1582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1918,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1919}, %rd1577;
	}
	shf.r.wrap.b32 	%r1920, %r1919, %r1918, 14;
	shf.r.wrap.b32 	%r1921, %r1918, %r1919, 14;
	mov.b64 	%rd1589, {%r1921, %r1920};
	shf.r.wrap.b32 	%r1922, %r1919, %r1918, 18;
	shf.r.wrap.b32 	%r1923, %r1918, %r1919, 18;
	mov.b64 	%rd1590, {%r1923, %r1922};
	xor.b64  	%rd1591, %rd1590, %rd1589;
	shf.l.wrap.b32 	%r1924, %r1918, %r1919, 23;
	shf.l.wrap.b32 	%r1925, %r1919, %r1918, 23;
	mov.b64 	%rd1592, {%r1925, %r1924};
	xor.b64  	%rd1593, %rd1591, %rd1592;
	xor.b64  	%rd1594, %rd1553, %rd1529;
	and.b64  	%rd1595, %rd1577, %rd1594;
	xor.b64  	%rd1596, %rd1595, %rd1529;
	add.s64 	%rd1597, %rd1505, %rd1228;
	add.s64 	%rd1598, %rd1597, %rd71;
	add.s64 	%rd1599, %rd1598, %rd1596;
	add.s64 	%rd1600, %rd1599, %rd1593;
	add.s64 	%rd1601, %rd1600, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1926,%dummy}, %rd1588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1927}, %rd1588;
	}
	shf.r.wrap.b32 	%r1928, %r1927, %r1926, 28;
	shf.r.wrap.b32 	%r1929, %r1926, %r1927, 28;
	mov.b64 	%rd1602, {%r1929, %r1928};
	shf.l.wrap.b32 	%r1930, %r1926, %r1927, 30;
	shf.l.wrap.b32 	%r1931, %r1927, %r1926, 30;
	mov.b64 	%rd1603, {%r1931, %r1930};
	xor.b64  	%rd1604, %rd1603, %rd1602;
	shf.l.wrap.b32 	%r1932, %r1926, %r1927, 25;
	shf.l.wrap.b32 	%r1933, %r1927, %r1926, 25;
	mov.b64 	%rd1605, {%r1933, %r1932};
	xor.b64  	%rd1606, %rd1604, %rd1605;
	xor.b64  	%rd1607, %rd1588, %rd1540;
	xor.b64  	%rd1608, %rd1588, %rd1564;
	and.b64  	%rd1609, %rd1608, %rd1607;
	xor.b64  	%rd1610, %rd1609, %rd1588;
	add.s64 	%rd1611, %rd1600, %rd1610;
	add.s64 	%rd1612, %rd1611, %rd1606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1934,%dummy}, %rd1215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1935}, %rd1215;
	}
	shf.r.wrap.b32 	%r1936, %r1935, %r1934, 19;
	shf.r.wrap.b32 	%r1937, %r1934, %r1935, 19;
	mov.b64 	%rd1613, {%r1937, %r1936};
	shf.l.wrap.b32 	%r1938, %r1934, %r1935, 3;
	shf.l.wrap.b32 	%r1939, %r1935, %r1934, 3;
	mov.b64 	%rd1614, {%r1939, %r1938};
	shr.u64 	%rd1615, %rd1215, 6;
	xor.b64  	%rd1616, %rd1613, %rd1615;
	xor.b64  	%rd1617, %rd1616, %rd1614;
	shf.r.wrap.b32 	%r1940, %r1553, %r1552, 1;
	shf.r.wrap.b32 	%r1941, %r1552, %r1553, 1;
	mov.b64 	%rd1618, {%r1941, %r1940};
	shf.r.wrap.b32 	%r1942, %r1553, %r1552, 8;
	shf.r.wrap.b32 	%r1943, %r1552, %r1553, 8;
	mov.b64 	%rd1619, {%r1943, %r1942};
	shr.u64 	%rd1620, %rd1056, 7;
	xor.b64  	%rd1621, %rd1618, %rd1620;
	xor.b64  	%rd1622, %rd1621, %rd1619;
	add.s64 	%rd1623, %rd1043, %rd1150;
	add.s64 	%rd1624, %rd1623, %rd1617;
	add.s64 	%rd1625, %rd1624, %rd1622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1944,%dummy}, %rd1228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1945}, %rd1228;
	}
	shf.r.wrap.b32 	%r1946, %r1945, %r1944, 19;
	shf.r.wrap.b32 	%r1947, %r1944, %r1945, 19;
	mov.b64 	%rd1626, {%r1947, %r1946};
	shf.l.wrap.b32 	%r1948, %r1944, %r1945, 3;
	shf.l.wrap.b32 	%r1949, %r1945, %r1944, 3;
	mov.b64 	%rd1627, {%r1949, %r1948};
	shr.u64 	%rd1628, %rd1228, 6;
	xor.b64  	%rd1629, %rd1626, %rd1628;
	xor.b64  	%rd1630, %rd1629, %rd1627;
	shf.r.wrap.b32 	%r1950, %r1563, %r1562, 1;
	shf.r.wrap.b32 	%r1951, %r1562, %r1563, 1;
	mov.b64 	%rd1631, {%r1951, %r1950};
	shf.r.wrap.b32 	%r1952, %r1563, %r1562, 8;
	shf.r.wrap.b32 	%r1953, %r1562, %r1563, 8;
	mov.b64 	%rd1632, {%r1953, %r1952};
	shr.u64 	%rd1633, %rd1064, 7;
	xor.b64  	%rd1634, %rd1631, %rd1633;
	xor.b64  	%rd1635, %rd1634, %rd1632;
	add.s64 	%rd1636, %rd1056, %rd1163;
	add.s64 	%rd1637, %rd1636, %rd1630;
	add.s64 	%rd1638, %rd1637, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1954,%dummy}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1955}, %rd1625;
	}
	shf.r.wrap.b32 	%r1956, %r1955, %r1954, 19;
	shf.r.wrap.b32 	%r1957, %r1954, %r1955, 19;
	mov.b64 	%rd1639, {%r1957, %r1956};
	shf.l.wrap.b32 	%r1958, %r1954, %r1955, 3;
	shf.l.wrap.b32 	%r1959, %r1955, %r1954, 3;
	mov.b64 	%rd1640, {%r1959, %r1958};
	shr.u64 	%rd1641, %rd1625, 6;
	xor.b64  	%rd1642, %rd1639, %rd1641;
	xor.b64  	%rd1643, %rd1642, %rd1640;
	shf.r.wrap.b32 	%r1960, %r1569, %r1568, 1;
	shf.r.wrap.b32 	%r1961, %r1568, %r1569, 1;
	mov.b64 	%rd1644, {%r1961, %r1960};
	shf.r.wrap.b32 	%r1962, %r1569, %r1568, 8;
	shf.r.wrap.b32 	%r1963, %r1568, %r1569, 8;
	mov.b64 	%rd1645, {%r1963, %r1962};
	shr.u64 	%rd1646, %rd1077, 7;
	xor.b64  	%rd1647, %rd1644, %rd1646;
	xor.b64  	%rd1648, %rd1647, %rd1645;
	add.s64 	%rd1649, %rd1064, %rd1176;
	add.s64 	%rd1650, %rd1649, %rd1643;
	add.s64 	%rd1651, %rd1650, %rd1648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1964,%dummy}, %rd1638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1965}, %rd1638;
	}
	shf.r.wrap.b32 	%r1966, %r1965, %r1964, 19;
	shf.r.wrap.b32 	%r1967, %r1964, %r1965, 19;
	mov.b64 	%rd1652, {%r1967, %r1966};
	shf.l.wrap.b32 	%r1968, %r1964, %r1965, 3;
	shf.l.wrap.b32 	%r1969, %r1965, %r1964, 3;
	mov.b64 	%rd1653, {%r1969, %r1968};
	shr.u64 	%rd1654, %rd1638, 6;
	xor.b64  	%rd1655, %rd1652, %rd1654;
	xor.b64  	%rd1656, %rd1655, %rd1653;
	shf.r.wrap.b32 	%r1970, %r1579, %r1578, 1;
	shf.r.wrap.b32 	%r1971, %r1578, %r1579, 1;
	mov.b64 	%rd1657, {%r1971, %r1970};
	shf.r.wrap.b32 	%r1972, %r1579, %r1578, 8;
	shf.r.wrap.b32 	%r1973, %r1578, %r1579, 8;
	mov.b64 	%rd1658, {%r1973, %r1972};
	shr.u64 	%rd1659, %rd1085, 7;
	xor.b64  	%rd1660, %rd1657, %rd1659;
	xor.b64  	%rd1661, %rd1660, %rd1658;
	add.s64 	%rd1662, %rd1077, %rd1189;
	add.s64 	%rd1663, %rd1662, %rd1656;
	add.s64 	%rd1664, %rd1663, %rd1661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1974,%dummy}, %rd1651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1975}, %rd1651;
	}
	shf.r.wrap.b32 	%r1976, %r1975, %r1974, 19;
	shf.r.wrap.b32 	%r1977, %r1974, %r1975, 19;
	mov.b64 	%rd1665, {%r1977, %r1976};
	shf.l.wrap.b32 	%r1978, %r1974, %r1975, 3;
	shf.l.wrap.b32 	%r1979, %r1975, %r1974, 3;
	mov.b64 	%rd1666, {%r1979, %r1978};
	shr.u64 	%rd1667, %rd1651, 6;
	xor.b64  	%rd1668, %rd1665, %rd1667;
	xor.b64  	%rd1669, %rd1668, %rd1666;
	shf.r.wrap.b32 	%r1980, %r1589, %r1588, 1;
	shf.r.wrap.b32 	%r1981, %r1588, %r1589, 1;
	mov.b64 	%rd1670, {%r1981, %r1980};
	shf.r.wrap.b32 	%r1982, %r1589, %r1588, 8;
	shf.r.wrap.b32 	%r1983, %r1588, %r1589, 8;
	mov.b64 	%rd1671, {%r1983, %r1982};
	shr.u64 	%rd1672, %rd1098, 7;
	xor.b64  	%rd1673, %rd1670, %rd1672;
	xor.b64  	%rd1674, %rd1673, %rd1671;
	add.s64 	%rd1675, %rd1085, %rd1202;
	add.s64 	%rd1676, %rd1675, %rd1669;
	add.s64 	%rd1677, %rd1676, %rd1674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1984,%dummy}, %rd1664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1985}, %rd1664;
	}
	shf.r.wrap.b32 	%r1986, %r1985, %r1984, 19;
	shf.r.wrap.b32 	%r1987, %r1984, %r1985, 19;
	mov.b64 	%rd1678, {%r1987, %r1986};
	shf.l.wrap.b32 	%r1988, %r1984, %r1985, 3;
	shf.l.wrap.b32 	%r1989, %r1985, %r1984, 3;
	mov.b64 	%rd1679, {%r1989, %r1988};
	shr.u64 	%rd1680, %rd1664, 6;
	xor.b64  	%rd1681, %rd1678, %rd1680;
	xor.b64  	%rd1682, %rd1681, %rd1679;
	shf.r.wrap.b32 	%r1990, %r1599, %r1598, 1;
	shf.r.wrap.b32 	%r1991, %r1598, %r1599, 1;
	mov.b64 	%rd1683, {%r1991, %r1990};
	shf.r.wrap.b32 	%r1992, %r1599, %r1598, 8;
	shf.r.wrap.b32 	%r1993, %r1598, %r1599, 8;
	mov.b64 	%rd1684, {%r1993, %r1992};
	shr.u64 	%rd1685, %rd1111, 7;
	xor.b64  	%rd1686, %rd1683, %rd1685;
	xor.b64  	%rd1687, %rd1686, %rd1684;
	add.s64 	%rd1688, %rd1098, %rd1215;
	add.s64 	%rd1689, %rd1688, %rd1682;
	add.s64 	%rd1690, %rd1689, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd1677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1995}, %rd1677;
	}
	shf.r.wrap.b32 	%r1996, %r1995, %r1994, 19;
	shf.r.wrap.b32 	%r1997, %r1994, %r1995, 19;
	mov.b64 	%rd1691, {%r1997, %r1996};
	shf.l.wrap.b32 	%r1998, %r1994, %r1995, 3;
	shf.l.wrap.b32 	%r1999, %r1995, %r1994, 3;
	mov.b64 	%rd1692, {%r1999, %r1998};
	shr.u64 	%rd1693, %rd1677, 6;
	xor.b64  	%rd1694, %rd1691, %rd1693;
	xor.b64  	%rd1695, %rd1694, %rd1692;
	shf.r.wrap.b32 	%r2000, %r1609, %r1608, 1;
	shf.r.wrap.b32 	%r2001, %r1608, %r1609, 1;
	mov.b64 	%rd1696, {%r2001, %r2000};
	shf.r.wrap.b32 	%r2002, %r1609, %r1608, 8;
	shf.r.wrap.b32 	%r2003, %r1608, %r1609, 8;
	mov.b64 	%rd1697, {%r2003, %r2002};
	shr.u64 	%rd1698, %rd1124, 7;
	xor.b64  	%rd1699, %rd1696, %rd1698;
	xor.b64  	%rd1700, %rd1699, %rd1697;
	add.s64 	%rd1701, %rd1111, %rd1228;
	add.s64 	%rd1702, %rd1701, %rd1695;
	add.s64 	%rd1703, %rd1702, %rd1700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2004,%dummy}, %rd1690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2005}, %rd1690;
	}
	shf.r.wrap.b32 	%r2006, %r2005, %r2004, 19;
	shf.r.wrap.b32 	%r2007, %r2004, %r2005, 19;
	mov.b64 	%rd1704, {%r2007, %r2006};
	shf.l.wrap.b32 	%r2008, %r2004, %r2005, 3;
	shf.l.wrap.b32 	%r2009, %r2005, %r2004, 3;
	mov.b64 	%rd1705, {%r2009, %r2008};
	shr.u64 	%rd1706, %rd1690, 6;
	xor.b64  	%rd1707, %rd1704, %rd1706;
	xor.b64  	%rd1708, %rd1707, %rd1705;
	shf.r.wrap.b32 	%r2010, %r1619, %r1618, 1;
	shf.r.wrap.b32 	%r2011, %r1618, %r1619, 1;
	mov.b64 	%rd1709, {%r2011, %r2010};
	shf.r.wrap.b32 	%r2012, %r1619, %r1618, 8;
	shf.r.wrap.b32 	%r2013, %r1618, %r1619, 8;
	mov.b64 	%rd1710, {%r2013, %r2012};
	shr.u64 	%rd1711, %rd1137, 7;
	xor.b64  	%rd1712, %rd1709, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1710;
	add.s64 	%rd1714, %rd1625, %rd1124;
	add.s64 	%rd1715, %rd1714, %rd1708;
	add.s64 	%rd1716, %rd1715, %rd1713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2014,%dummy}, %rd1703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2015}, %rd1703;
	}
	shf.r.wrap.b32 	%r2016, %r2015, %r2014, 19;
	shf.r.wrap.b32 	%r2017, %r2014, %r2015, 19;
	mov.b64 	%rd1717, {%r2017, %r2016};
	shf.l.wrap.b32 	%r2018, %r2014, %r2015, 3;
	shf.l.wrap.b32 	%r2019, %r2015, %r2014, 3;
	mov.b64 	%rd1718, {%r2019, %r2018};
	shr.u64 	%rd1719, %rd1703, 6;
	xor.b64  	%rd1720, %rd1717, %rd1719;
	xor.b64  	%rd1721, %rd1720, %rd1718;
	shf.r.wrap.b32 	%r2020, %r1629, %r1628, 1;
	shf.r.wrap.b32 	%r2021, %r1628, %r1629, 1;
	mov.b64 	%rd1722, {%r2021, %r2020};
	shf.r.wrap.b32 	%r2022, %r1629, %r1628, 8;
	shf.r.wrap.b32 	%r2023, %r1628, %r1629, 8;
	mov.b64 	%rd1723, {%r2023, %r2022};
	shr.u64 	%rd1724, %rd1150, 7;
	xor.b64  	%rd1725, %rd1722, %rd1724;
	xor.b64  	%rd1726, %rd1725, %rd1723;
	add.s64 	%rd1727, %rd1638, %rd1137;
	add.s64 	%rd1728, %rd1727, %rd1721;
	add.s64 	%rd1729, %rd1728, %rd1726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2024,%dummy}, %rd1716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2025}, %rd1716;
	}
	shf.r.wrap.b32 	%r2026, %r2025, %r2024, 19;
	shf.r.wrap.b32 	%r2027, %r2024, %r2025, 19;
	mov.b64 	%rd1730, {%r2027, %r2026};
	shf.l.wrap.b32 	%r2028, %r2024, %r2025, 3;
	shf.l.wrap.b32 	%r2029, %r2025, %r2024, 3;
	mov.b64 	%rd1731, {%r2029, %r2028};
	shr.u64 	%rd1732, %rd1716, 6;
	xor.b64  	%rd1733, %rd1730, %rd1732;
	xor.b64  	%rd1734, %rd1733, %rd1731;
	shf.r.wrap.b32 	%r2030, %r1639, %r1638, 1;
	shf.r.wrap.b32 	%r2031, %r1638, %r1639, 1;
	mov.b64 	%rd1735, {%r2031, %r2030};
	shf.r.wrap.b32 	%r2032, %r1639, %r1638, 8;
	shf.r.wrap.b32 	%r2033, %r1638, %r1639, 8;
	mov.b64 	%rd1736, {%r2033, %r2032};
	shr.u64 	%rd1737, %rd1163, 7;
	xor.b64  	%rd1738, %rd1735, %rd1737;
	xor.b64  	%rd1739, %rd1738, %rd1736;
	add.s64 	%rd1740, %rd1651, %rd1150;
	add.s64 	%rd1741, %rd1740, %rd1734;
	add.s64 	%rd1742, %rd1741, %rd1739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2034,%dummy}, %rd1729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2035}, %rd1729;
	}
	shf.r.wrap.b32 	%r2036, %r2035, %r2034, 19;
	shf.r.wrap.b32 	%r2037, %r2034, %r2035, 19;
	mov.b64 	%rd1743, {%r2037, %r2036};
	shf.l.wrap.b32 	%r2038, %r2034, %r2035, 3;
	shf.l.wrap.b32 	%r2039, %r2035, %r2034, 3;
	mov.b64 	%rd1744, {%r2039, %r2038};
	shr.u64 	%rd1745, %rd1729, 6;
	xor.b64  	%rd1746, %rd1743, %rd1745;
	xor.b64  	%rd1747, %rd1746, %rd1744;
	shf.r.wrap.b32 	%r2040, %r1649, %r1648, 1;
	shf.r.wrap.b32 	%r2041, %r1648, %r1649, 1;
	mov.b64 	%rd1748, {%r2041, %r2040};
	shf.r.wrap.b32 	%r2042, %r1649, %r1648, 8;
	shf.r.wrap.b32 	%r2043, %r1648, %r1649, 8;
	mov.b64 	%rd1749, {%r2043, %r2042};
	shr.u64 	%rd1750, %rd1176, 7;
	xor.b64  	%rd1751, %rd1748, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1749;
	add.s64 	%rd1753, %rd1664, %rd1163;
	add.s64 	%rd1754, %rd1753, %rd1747;
	add.s64 	%rd1755, %rd1754, %rd1752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2044,%dummy}, %rd1742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2045}, %rd1742;
	}
	shf.r.wrap.b32 	%r2046, %r2045, %r2044, 19;
	shf.r.wrap.b32 	%r2047, %r2044, %r2045, 19;
	mov.b64 	%rd1756, {%r2047, %r2046};
	shf.l.wrap.b32 	%r2048, %r2044, %r2045, 3;
	shf.l.wrap.b32 	%r2049, %r2045, %r2044, 3;
	mov.b64 	%rd1757, {%r2049, %r2048};
	shr.u64 	%rd1758, %rd1742, 6;
	xor.b64  	%rd1759, %rd1756, %rd1758;
	xor.b64  	%rd1760, %rd1759, %rd1757;
	shf.r.wrap.b32 	%r2050, %r1659, %r1658, 1;
	shf.r.wrap.b32 	%r2051, %r1658, %r1659, 1;
	mov.b64 	%rd1761, {%r2051, %r2050};
	shf.r.wrap.b32 	%r2052, %r1659, %r1658, 8;
	shf.r.wrap.b32 	%r2053, %r1658, %r1659, 8;
	mov.b64 	%rd1762, {%r2053, %r2052};
	shr.u64 	%rd1763, %rd1189, 7;
	xor.b64  	%rd1764, %rd1761, %rd1763;
	xor.b64  	%rd1765, %rd1764, %rd1762;
	add.s64 	%rd1766, %rd1677, %rd1176;
	add.s64 	%rd1767, %rd1766, %rd1760;
	add.s64 	%rd1768, %rd1767, %rd1765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2054,%dummy}, %rd1755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2055}, %rd1755;
	}
	shf.r.wrap.b32 	%r2056, %r2055, %r2054, 19;
	shf.r.wrap.b32 	%r2057, %r2054, %r2055, 19;
	mov.b64 	%rd1769, {%r2057, %r2056};
	shf.l.wrap.b32 	%r2058, %r2054, %r2055, 3;
	shf.l.wrap.b32 	%r2059, %r2055, %r2054, 3;
	mov.b64 	%rd1770, {%r2059, %r2058};
	shr.u64 	%rd1771, %rd1755, 6;
	xor.b64  	%rd1772, %rd1769, %rd1771;
	xor.b64  	%rd1773, %rd1772, %rd1770;
	shf.r.wrap.b32 	%r2060, %r1669, %r1668, 1;
	shf.r.wrap.b32 	%r2061, %r1668, %r1669, 1;
	mov.b64 	%rd1774, {%r2061, %r2060};
	shf.r.wrap.b32 	%r2062, %r1669, %r1668, 8;
	shf.r.wrap.b32 	%r2063, %r1668, %r1669, 8;
	mov.b64 	%rd1775, {%r2063, %r2062};
	shr.u64 	%rd1776, %rd1202, 7;
	xor.b64  	%rd1777, %rd1774, %rd1776;
	xor.b64  	%rd1778, %rd1777, %rd1775;
	add.s64 	%rd1779, %rd1690, %rd1189;
	add.s64 	%rd1780, %rd1779, %rd1773;
	add.s64 	%rd1781, %rd1780, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2064,%dummy}, %rd1768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2065}, %rd1768;
	}
	shf.r.wrap.b32 	%r2066, %r2065, %r2064, 19;
	shf.r.wrap.b32 	%r2067, %r2064, %r2065, 19;
	mov.b64 	%rd1782, {%r2067, %r2066};
	shf.l.wrap.b32 	%r2068, %r2064, %r2065, 3;
	shf.l.wrap.b32 	%r2069, %r2065, %r2064, 3;
	mov.b64 	%rd1783, {%r2069, %r2068};
	shr.u64 	%rd1784, %rd1768, 6;
	xor.b64  	%rd1785, %rd1782, %rd1784;
	xor.b64  	%rd1786, %rd1785, %rd1783;
	shf.r.wrap.b32 	%r2070, %r1935, %r1934, 1;
	shf.r.wrap.b32 	%r2071, %r1934, %r1935, 1;
	mov.b64 	%rd1787, {%r2071, %r2070};
	shf.r.wrap.b32 	%r2072, %r1935, %r1934, 8;
	shf.r.wrap.b32 	%r2073, %r1934, %r1935, 8;
	mov.b64 	%rd1788, {%r2073, %r2072};
	shr.u64 	%rd1789, %rd1215, 7;
	xor.b64  	%rd1790, %rd1787, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1788;
	add.s64 	%rd1792, %rd1703, %rd1202;
	add.s64 	%rd1793, %rd1792, %rd1786;
	add.s64 	%rd1794, %rd1793, %rd1791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2074,%dummy}, %rd1781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2075}, %rd1781;
	}
	shf.r.wrap.b32 	%r2076, %r2075, %r2074, 19;
	shf.r.wrap.b32 	%r2077, %r2074, %r2075, 19;
	mov.b64 	%rd1795, {%r2077, %r2076};
	shf.l.wrap.b32 	%r2078, %r2074, %r2075, 3;
	shf.l.wrap.b32 	%r2079, %r2075, %r2074, 3;
	mov.b64 	%rd1796, {%r2079, %r2078};
	shr.u64 	%rd1797, %rd1781, 6;
	xor.b64  	%rd1798, %rd1795, %rd1797;
	xor.b64  	%rd1799, %rd1798, %rd1796;
	shf.r.wrap.b32 	%r2080, %r1945, %r1944, 1;
	shf.r.wrap.b32 	%r2081, %r1944, %r1945, 1;
	mov.b64 	%rd1800, {%r2081, %r2080};
	shf.r.wrap.b32 	%r2082, %r1945, %r1944, 8;
	shf.r.wrap.b32 	%r2083, %r1944, %r1945, 8;
	mov.b64 	%rd1801, {%r2083, %r2082};
	shr.u64 	%rd1802, %rd1228, 7;
	xor.b64  	%rd1803, %rd1800, %rd1802;
	xor.b64  	%rd1804, %rd1803, %rd1801;
	add.s64 	%rd1805, %rd1716, %rd1215;
	add.s64 	%rd1806, %rd1805, %rd1799;
	add.s64 	%rd1807, %rd1806, %rd1804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2084,%dummy}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2085}, %rd1794;
	}
	shf.r.wrap.b32 	%r2086, %r2085, %r2084, 19;
	shf.r.wrap.b32 	%r2087, %r2084, %r2085, 19;
	mov.b64 	%rd1808, {%r2087, %r2086};
	shf.l.wrap.b32 	%r2088, %r2084, %r2085, 3;
	shf.l.wrap.b32 	%r2089, %r2085, %r2084, 3;
	mov.b64 	%rd1809, {%r2089, %r2088};
	shr.u64 	%rd1810, %rd1794, 6;
	xor.b64  	%rd1811, %rd1808, %rd1810;
	xor.b64  	%rd1812, %rd1811, %rd1809;
	shf.r.wrap.b32 	%r2090, %r1955, %r1954, 1;
	shf.r.wrap.b32 	%r2091, %r1954, %r1955, 1;
	mov.b64 	%rd1813, {%r2091, %r2090};
	shf.r.wrap.b32 	%r2092, %r1955, %r1954, 8;
	shf.r.wrap.b32 	%r2093, %r1954, %r1955, 8;
	mov.b64 	%rd1814, {%r2093, %r2092};
	shr.u64 	%rd1815, %rd1625, 7;
	xor.b64  	%rd1816, %rd1813, %rd1815;
	xor.b64  	%rd1817, %rd1816, %rd1814;
	add.s64 	%rd1818, %rd1729, %rd1228;
	add.s64 	%rd1819, %rd1818, %rd1812;
	add.s64 	%rd1820, %rd1819, %rd1817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2094,%dummy}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2095}, %rd1601;
	}
	shf.r.wrap.b32 	%r2096, %r2095, %r2094, 14;
	shf.r.wrap.b32 	%r2097, %r2094, %r2095, 14;
	mov.b64 	%rd1821, {%r2097, %r2096};
	shf.r.wrap.b32 	%r2098, %r2095, %r2094, 18;
	shf.r.wrap.b32 	%r2099, %r2094, %r2095, 18;
	mov.b64 	%rd1822, {%r2099, %r2098};
	xor.b64  	%rd1823, %rd1822, %rd1821;
	shf.l.wrap.b32 	%r2100, %r2094, %r2095, 23;
	shf.l.wrap.b32 	%r2101, %r2095, %r2094, 23;
	mov.b64 	%rd1824, {%r2101, %r2100};
	xor.b64  	%rd1825, %rd1823, %rd1824;
	xor.b64  	%rd1826, %rd1553, %rd1577;
	and.b64  	%rd1827, %rd1826, %rd1601;
	xor.b64  	%rd1828, %rd1827, %rd1553;
	add.s64 	%rd1829, %rd1828, %rd1529;
	add.s64 	%rd1830, %rd1829, %rd1625;
	add.s64 	%rd1831, %rd1830, %rd72;
	add.s64 	%rd1832, %rd1831, %rd1825;
	add.s64 	%rd1833, %rd1832, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2102,%dummy}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2103}, %rd1612;
	}
	shf.r.wrap.b32 	%r2104, %r2103, %r2102, 28;
	shf.r.wrap.b32 	%r2105, %r2102, %r2103, 28;
	mov.b64 	%rd1834, {%r2105, %r2104};
	shf.l.wrap.b32 	%r2106, %r2102, %r2103, 30;
	shf.l.wrap.b32 	%r2107, %r2103, %r2102, 30;
	mov.b64 	%rd1835, {%r2107, %r2106};
	xor.b64  	%rd1836, %rd1835, %rd1834;
	shf.l.wrap.b32 	%r2108, %r2102, %r2103, 25;
	shf.l.wrap.b32 	%r2109, %r2103, %r2102, 25;
	mov.b64 	%rd1837, {%r2109, %r2108};
	xor.b64  	%rd1838, %rd1836, %rd1837;
	xor.b64  	%rd1839, %rd1612, %rd1564;
	xor.b64  	%rd1840, %rd1612, %rd1588;
	and.b64  	%rd1841, %rd1840, %rd1839;
	xor.b64  	%rd1842, %rd1841, %rd1612;
	add.s64 	%rd1843, %rd1832, %rd1842;
	add.s64 	%rd1844, %rd1843, %rd1838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2110,%dummy}, %rd1833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2111}, %rd1833;
	}
	shf.r.wrap.b32 	%r2112, %r2111, %r2110, 14;
	shf.r.wrap.b32 	%r2113, %r2110, %r2111, 14;
	mov.b64 	%rd1845, {%r2113, %r2112};
	shf.r.wrap.b32 	%r2114, %r2111, %r2110, 18;
	shf.r.wrap.b32 	%r2115, %r2110, %r2111, 18;
	mov.b64 	%rd1846, {%r2115, %r2114};
	xor.b64  	%rd1847, %rd1846, %rd1845;
	shf.l.wrap.b32 	%r2116, %r2110, %r2111, 23;
	shf.l.wrap.b32 	%r2117, %r2111, %r2110, 23;
	mov.b64 	%rd1848, {%r2117, %r2116};
	xor.b64  	%rd1849, %rd1847, %rd1848;
	xor.b64  	%rd1850, %rd1577, %rd1601;
	and.b64  	%rd1851, %rd1833, %rd1850;
	xor.b64  	%rd1852, %rd1851, %rd1577;
	add.s64 	%rd1853, %rd1638, %rd1553;
	add.s64 	%rd1854, %rd1853, %rd73;
	add.s64 	%rd1855, %rd1854, %rd1852;
	add.s64 	%rd1856, %rd1855, %rd1849;
	add.s64 	%rd1857, %rd1856, %rd1564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2118,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2119}, %rd1844;
	}
	shf.r.wrap.b32 	%r2120, %r2119, %r2118, 28;
	shf.r.wrap.b32 	%r2121, %r2118, %r2119, 28;
	mov.b64 	%rd1858, {%r2121, %r2120};
	shf.l.wrap.b32 	%r2122, %r2118, %r2119, 30;
	shf.l.wrap.b32 	%r2123, %r2119, %r2118, 30;
	mov.b64 	%rd1859, {%r2123, %r2122};
	xor.b64  	%rd1860, %rd1859, %rd1858;
	shf.l.wrap.b32 	%r2124, %r2118, %r2119, 25;
	shf.l.wrap.b32 	%r2125, %r2119, %r2118, 25;
	mov.b64 	%rd1861, {%r2125, %r2124};
	xor.b64  	%rd1862, %rd1860, %rd1861;
	xor.b64  	%rd1863, %rd1844, %rd1588;
	xor.b64  	%rd1864, %rd1844, %rd1612;
	and.b64  	%rd1865, %rd1864, %rd1863;
	xor.b64  	%rd1866, %rd1865, %rd1844;
	add.s64 	%rd1867, %rd1856, %rd1866;
	add.s64 	%rd1868, %rd1867, %rd1862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2126,%dummy}, %rd1857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2127}, %rd1857;
	}
	shf.r.wrap.b32 	%r2128, %r2127, %r2126, 14;
	shf.r.wrap.b32 	%r2129, %r2126, %r2127, 14;
	mov.b64 	%rd1869, {%r2129, %r2128};
	shf.r.wrap.b32 	%r2130, %r2127, %r2126, 18;
	shf.r.wrap.b32 	%r2131, %r2126, %r2127, 18;
	mov.b64 	%rd1870, {%r2131, %r2130};
	xor.b64  	%rd1871, %rd1870, %rd1869;
	shf.l.wrap.b32 	%r2132, %r2126, %r2127, 23;
	shf.l.wrap.b32 	%r2133, %r2127, %r2126, 23;
	mov.b64 	%rd1872, {%r2133, %r2132};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	xor.b64  	%rd1874, %rd1833, %rd1601;
	and.b64  	%rd1875, %rd1857, %rd1874;
	xor.b64  	%rd1876, %rd1875, %rd1601;
	add.s64 	%rd1877, %rd1651, %rd1577;
	add.s64 	%rd1878, %rd1877, %rd74;
	add.s64 	%rd1879, %rd1878, %rd1876;
	add.s64 	%rd1880, %rd1879, %rd1873;
	add.s64 	%rd1881, %rd1880, %rd1588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2134,%dummy}, %rd1868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2135}, %rd1868;
	}
	shf.r.wrap.b32 	%r2136, %r2135, %r2134, 28;
	shf.r.wrap.b32 	%r2137, %r2134, %r2135, 28;
	mov.b64 	%rd1882, {%r2137, %r2136};
	shf.l.wrap.b32 	%r2138, %r2134, %r2135, 30;
	shf.l.wrap.b32 	%r2139, %r2135, %r2134, 30;
	mov.b64 	%rd1883, {%r2139, %r2138};
	xor.b64  	%rd1884, %rd1883, %rd1882;
	shf.l.wrap.b32 	%r2140, %r2134, %r2135, 25;
	shf.l.wrap.b32 	%r2141, %r2135, %r2134, 25;
	mov.b64 	%rd1885, {%r2141, %r2140};
	xor.b64  	%rd1886, %rd1884, %rd1885;
	xor.b64  	%rd1887, %rd1868, %rd1612;
	xor.b64  	%rd1888, %rd1868, %rd1844;
	and.b64  	%rd1889, %rd1888, %rd1887;
	xor.b64  	%rd1890, %rd1889, %rd1868;
	add.s64 	%rd1891, %rd1880, %rd1890;
	add.s64 	%rd1892, %rd1891, %rd1886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2142,%dummy}, %rd1881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2143}, %rd1881;
	}
	shf.r.wrap.b32 	%r2144, %r2143, %r2142, 14;
	shf.r.wrap.b32 	%r2145, %r2142, %r2143, 14;
	mov.b64 	%rd1893, {%r2145, %r2144};
	shf.r.wrap.b32 	%r2146, %r2143, %r2142, 18;
	shf.r.wrap.b32 	%r2147, %r2142, %r2143, 18;
	mov.b64 	%rd1894, {%r2147, %r2146};
	xor.b64  	%rd1895, %rd1894, %rd1893;
	shf.l.wrap.b32 	%r2148, %r2142, %r2143, 23;
	shf.l.wrap.b32 	%r2149, %r2143, %r2142, 23;
	mov.b64 	%rd1896, {%r2149, %r2148};
	xor.b64  	%rd1897, %rd1895, %rd1896;
	xor.b64  	%rd1898, %rd1857, %rd1833;
	and.b64  	%rd1899, %rd1881, %rd1898;
	xor.b64  	%rd1900, %rd1899, %rd1833;
	add.s64 	%rd1901, %rd1664, %rd1601;
	add.s64 	%rd1902, %rd1901, %rd75;
	add.s64 	%rd1903, %rd1902, %rd1900;
	add.s64 	%rd1904, %rd1903, %rd1897;
	add.s64 	%rd1905, %rd1904, %rd1612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2150,%dummy}, %rd1892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2151}, %rd1892;
	}
	shf.r.wrap.b32 	%r2152, %r2151, %r2150, 28;
	shf.r.wrap.b32 	%r2153, %r2150, %r2151, 28;
	mov.b64 	%rd1906, {%r2153, %r2152};
	shf.l.wrap.b32 	%r2154, %r2150, %r2151, 30;
	shf.l.wrap.b32 	%r2155, %r2151, %r2150, 30;
	mov.b64 	%rd1907, {%r2155, %r2154};
	xor.b64  	%rd1908, %rd1907, %rd1906;
	shf.l.wrap.b32 	%r2156, %r2150, %r2151, 25;
	shf.l.wrap.b32 	%r2157, %r2151, %r2150, 25;
	mov.b64 	%rd1909, {%r2157, %r2156};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	xor.b64  	%rd1911, %rd1892, %rd1844;
	xor.b64  	%rd1912, %rd1892, %rd1868;
	and.b64  	%rd1913, %rd1912, %rd1911;
	xor.b64  	%rd1914, %rd1913, %rd1892;
	add.s64 	%rd1915, %rd1904, %rd1914;
	add.s64 	%rd1916, %rd1915, %rd1910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2158,%dummy}, %rd1905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2159}, %rd1905;
	}
	shf.r.wrap.b32 	%r2160, %r2159, %r2158, 14;
	shf.r.wrap.b32 	%r2161, %r2158, %r2159, 14;
	mov.b64 	%rd1917, {%r2161, %r2160};
	shf.r.wrap.b32 	%r2162, %r2159, %r2158, 18;
	shf.r.wrap.b32 	%r2163, %r2158, %r2159, 18;
	mov.b64 	%rd1918, {%r2163, %r2162};
	xor.b64  	%rd1919, %rd1918, %rd1917;
	shf.l.wrap.b32 	%r2164, %r2158, %r2159, 23;
	shf.l.wrap.b32 	%r2165, %r2159, %r2158, 23;
	mov.b64 	%rd1920, {%r2165, %r2164};
	xor.b64  	%rd1921, %rd1919, %rd1920;
	xor.b64  	%rd1922, %rd1881, %rd1857;
	and.b64  	%rd1923, %rd1905, %rd1922;
	xor.b64  	%rd1924, %rd1923, %rd1857;
	add.s64 	%rd1925, %rd1833, %rd1677;
	add.s64 	%rd1926, %rd1925, %rd76;
	add.s64 	%rd1927, %rd1926, %rd1924;
	add.s64 	%rd1928, %rd1927, %rd1921;
	add.s64 	%rd1929, %rd1928, %rd1844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2166,%dummy}, %rd1916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2167}, %rd1916;
	}
	shf.r.wrap.b32 	%r2168, %r2167, %r2166, 28;
	shf.r.wrap.b32 	%r2169, %r2166, %r2167, 28;
	mov.b64 	%rd1930, {%r2169, %r2168};
	shf.l.wrap.b32 	%r2170, %r2166, %r2167, 30;
	shf.l.wrap.b32 	%r2171, %r2167, %r2166, 30;
	mov.b64 	%rd1931, {%r2171, %r2170};
	xor.b64  	%rd1932, %rd1931, %rd1930;
	shf.l.wrap.b32 	%r2172, %r2166, %r2167, 25;
	shf.l.wrap.b32 	%r2173, %r2167, %r2166, 25;
	mov.b64 	%rd1933, {%r2173, %r2172};
	xor.b64  	%rd1934, %rd1932, %rd1933;
	xor.b64  	%rd1935, %rd1916, %rd1868;
	xor.b64  	%rd1936, %rd1916, %rd1892;
	and.b64  	%rd1937, %rd1936, %rd1935;
	xor.b64  	%rd1938, %rd1937, %rd1916;
	add.s64 	%rd1939, %rd1928, %rd1938;
	add.s64 	%rd1940, %rd1939, %rd1934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2174,%dummy}, %rd1929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2175}, %rd1929;
	}
	shf.r.wrap.b32 	%r2176, %r2175, %r2174, 14;
	shf.r.wrap.b32 	%r2177, %r2174, %r2175, 14;
	mov.b64 	%rd1941, {%r2177, %r2176};
	shf.r.wrap.b32 	%r2178, %r2175, %r2174, 18;
	shf.r.wrap.b32 	%r2179, %r2174, %r2175, 18;
	mov.b64 	%rd1942, {%r2179, %r2178};
	xor.b64  	%rd1943, %rd1942, %rd1941;
	shf.l.wrap.b32 	%r2180, %r2174, %r2175, 23;
	shf.l.wrap.b32 	%r2181, %r2175, %r2174, 23;
	mov.b64 	%rd1944, {%r2181, %r2180};
	xor.b64  	%rd1945, %rd1943, %rd1944;
	xor.b64  	%rd1946, %rd1905, %rd1881;
	and.b64  	%rd1947, %rd1929, %rd1946;
	xor.b64  	%rd1948, %rd1947, %rd1881;
	add.s64 	%rd1949, %rd1857, %rd1690;
	add.s64 	%rd1950, %rd1949, %rd77;
	add.s64 	%rd1951, %rd1950, %rd1948;
	add.s64 	%rd1952, %rd1951, %rd1945;
	add.s64 	%rd1953, %rd1952, %rd1868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2182,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2183}, %rd1940;
	}
	shf.r.wrap.b32 	%r2184, %r2183, %r2182, 28;
	shf.r.wrap.b32 	%r2185, %r2182, %r2183, 28;
	mov.b64 	%rd1954, {%r2185, %r2184};
	shf.l.wrap.b32 	%r2186, %r2182, %r2183, 30;
	shf.l.wrap.b32 	%r2187, %r2183, %r2182, 30;
	mov.b64 	%rd1955, {%r2187, %r2186};
	xor.b64  	%rd1956, %rd1955, %rd1954;
	shf.l.wrap.b32 	%r2188, %r2182, %r2183, 25;
	shf.l.wrap.b32 	%r2189, %r2183, %r2182, 25;
	mov.b64 	%rd1957, {%r2189, %r2188};
	xor.b64  	%rd1958, %rd1956, %rd1957;
	xor.b64  	%rd1959, %rd1940, %rd1892;
	xor.b64  	%rd1960, %rd1940, %rd1916;
	and.b64  	%rd1961, %rd1960, %rd1959;
	xor.b64  	%rd1962, %rd1961, %rd1940;
	add.s64 	%rd1963, %rd1952, %rd1962;
	add.s64 	%rd1964, %rd1963, %rd1958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2190,%dummy}, %rd1953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2191}, %rd1953;
	}
	shf.r.wrap.b32 	%r2192, %r2191, %r2190, 14;
	shf.r.wrap.b32 	%r2193, %r2190, %r2191, 14;
	mov.b64 	%rd1965, {%r2193, %r2192};
	shf.r.wrap.b32 	%r2194, %r2191, %r2190, 18;
	shf.r.wrap.b32 	%r2195, %r2190, %r2191, 18;
	mov.b64 	%rd1966, {%r2195, %r2194};
	xor.b64  	%rd1967, %rd1966, %rd1965;
	shf.l.wrap.b32 	%r2196, %r2190, %r2191, 23;
	shf.l.wrap.b32 	%r2197, %r2191, %r2190, 23;
	mov.b64 	%rd1968, {%r2197, %r2196};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	xor.b64  	%rd1970, %rd1929, %rd1905;
	and.b64  	%rd1971, %rd1953, %rd1970;
	xor.b64  	%rd1972, %rd1971, %rd1905;
	add.s64 	%rd1973, %rd1881, %rd1703;
	add.s64 	%rd1974, %rd1973, %rd78;
	add.s64 	%rd1975, %rd1974, %rd1972;
	add.s64 	%rd1976, %rd1975, %rd1969;
	add.s64 	%rd1977, %rd1976, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2198,%dummy}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2199}, %rd1964;
	}
	shf.r.wrap.b32 	%r2200, %r2199, %r2198, 28;
	shf.r.wrap.b32 	%r2201, %r2198, %r2199, 28;
	mov.b64 	%rd1978, {%r2201, %r2200};
	shf.l.wrap.b32 	%r2202, %r2198, %r2199, 30;
	shf.l.wrap.b32 	%r2203, %r2199, %r2198, 30;
	mov.b64 	%rd1979, {%r2203, %r2202};
	xor.b64  	%rd1980, %rd1979, %rd1978;
	shf.l.wrap.b32 	%r2204, %r2198, %r2199, 25;
	shf.l.wrap.b32 	%r2205, %r2199, %r2198, 25;
	mov.b64 	%rd1981, {%r2205, %r2204};
	xor.b64  	%rd1982, %rd1980, %rd1981;
	xor.b64  	%rd1983, %rd1964, %rd1916;
	xor.b64  	%rd1984, %rd1964, %rd1940;
	and.b64  	%rd1985, %rd1984, %rd1983;
	xor.b64  	%rd1986, %rd1985, %rd1964;
	add.s64 	%rd1987, %rd1976, %rd1986;
	add.s64 	%rd1988, %rd1987, %rd1982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2206,%dummy}, %rd1977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2207}, %rd1977;
	}
	shf.r.wrap.b32 	%r2208, %r2207, %r2206, 14;
	shf.r.wrap.b32 	%r2209, %r2206, %r2207, 14;
	mov.b64 	%rd1989, {%r2209, %r2208};
	shf.r.wrap.b32 	%r2210, %r2207, %r2206, 18;
	shf.r.wrap.b32 	%r2211, %r2206, %r2207, 18;
	mov.b64 	%rd1990, {%r2211, %r2210};
	xor.b64  	%rd1991, %rd1990, %rd1989;
	shf.l.wrap.b32 	%r2212, %r2206, %r2207, 23;
	shf.l.wrap.b32 	%r2213, %r2207, %r2206, 23;
	mov.b64 	%rd1992, {%r2213, %r2212};
	xor.b64  	%rd1993, %rd1991, %rd1992;
	xor.b64  	%rd1994, %rd1953, %rd1929;
	and.b64  	%rd1995, %rd1977, %rd1994;
	xor.b64  	%rd1996, %rd1995, %rd1929;
	add.s64 	%rd1997, %rd1905, %rd1716;
	add.s64 	%rd1998, %rd1997, %rd79;
	add.s64 	%rd1999, %rd1998, %rd1996;
	add.s64 	%rd2000, %rd1999, %rd1993;
	add.s64 	%rd2001, %rd2000, %rd1916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2214,%dummy}, %rd1988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2215}, %rd1988;
	}
	shf.r.wrap.b32 	%r2216, %r2215, %r2214, 28;
	shf.r.wrap.b32 	%r2217, %r2214, %r2215, 28;
	mov.b64 	%rd2002, {%r2217, %r2216};
	shf.l.wrap.b32 	%r2218, %r2214, %r2215, 30;
	shf.l.wrap.b32 	%r2219, %r2215, %r2214, 30;
	mov.b64 	%rd2003, {%r2219, %r2218};
	xor.b64  	%rd2004, %rd2003, %rd2002;
	shf.l.wrap.b32 	%r2220, %r2214, %r2215, 25;
	shf.l.wrap.b32 	%r2221, %r2215, %r2214, 25;
	mov.b64 	%rd2005, {%r2221, %r2220};
	xor.b64  	%rd2006, %rd2004, %rd2005;
	xor.b64  	%rd2007, %rd1988, %rd1940;
	xor.b64  	%rd2008, %rd1988, %rd1964;
	and.b64  	%rd2009, %rd2008, %rd2007;
	xor.b64  	%rd2010, %rd2009, %rd1988;
	add.s64 	%rd2011, %rd2000, %rd2010;
	add.s64 	%rd2012, %rd2011, %rd2006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2222,%dummy}, %rd2001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2223}, %rd2001;
	}
	shf.r.wrap.b32 	%r2224, %r2223, %r2222, 14;
	shf.r.wrap.b32 	%r2225, %r2222, %r2223, 14;
	mov.b64 	%rd2013, {%r2225, %r2224};
	shf.r.wrap.b32 	%r2226, %r2223, %r2222, 18;
	shf.r.wrap.b32 	%r2227, %r2222, %r2223, 18;
	mov.b64 	%rd2014, {%r2227, %r2226};
	xor.b64  	%rd2015, %rd2014, %rd2013;
	shf.l.wrap.b32 	%r2228, %r2222, %r2223, 23;
	shf.l.wrap.b32 	%r2229, %r2223, %r2222, 23;
	mov.b64 	%rd2016, {%r2229, %r2228};
	xor.b64  	%rd2017, %rd2015, %rd2016;
	xor.b64  	%rd2018, %rd1977, %rd1953;
	and.b64  	%rd2019, %rd2001, %rd2018;
	xor.b64  	%rd2020, %rd2019, %rd1953;
	add.s64 	%rd2021, %rd1929, %rd1729;
	add.s64 	%rd2022, %rd2021, %rd80;
	add.s64 	%rd2023, %rd2022, %rd2020;
	add.s64 	%rd2024, %rd2023, %rd2017;
	add.s64 	%rd2025, %rd2024, %rd1940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2230,%dummy}, %rd2012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2231}, %rd2012;
	}
	shf.r.wrap.b32 	%r2232, %r2231, %r2230, 28;
	shf.r.wrap.b32 	%r2233, %r2230, %r2231, 28;
	mov.b64 	%rd2026, {%r2233, %r2232};
	shf.l.wrap.b32 	%r2234, %r2230, %r2231, 30;
	shf.l.wrap.b32 	%r2235, %r2231, %r2230, 30;
	mov.b64 	%rd2027, {%r2235, %r2234};
	xor.b64  	%rd2028, %rd2027, %rd2026;
	shf.l.wrap.b32 	%r2236, %r2230, %r2231, 25;
	shf.l.wrap.b32 	%r2237, %r2231, %r2230, 25;
	mov.b64 	%rd2029, {%r2237, %r2236};
	xor.b64  	%rd2030, %rd2028, %rd2029;
	xor.b64  	%rd2031, %rd2012, %rd1964;
	xor.b64  	%rd2032, %rd2012, %rd1988;
	and.b64  	%rd2033, %rd2032, %rd2031;
	xor.b64  	%rd2034, %rd2033, %rd2012;
	add.s64 	%rd2035, %rd2024, %rd2034;
	add.s64 	%rd2036, %rd2035, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2238,%dummy}, %rd2025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2239}, %rd2025;
	}
	shf.r.wrap.b32 	%r2240, %r2239, %r2238, 14;
	shf.r.wrap.b32 	%r2241, %r2238, %r2239, 14;
	mov.b64 	%rd2037, {%r2241, %r2240};
	shf.r.wrap.b32 	%r2242, %r2239, %r2238, 18;
	shf.r.wrap.b32 	%r2243, %r2238, %r2239, 18;
	mov.b64 	%rd2038, {%r2243, %r2242};
	xor.b64  	%rd2039, %rd2038, %rd2037;
	shf.l.wrap.b32 	%r2244, %r2238, %r2239, 23;
	shf.l.wrap.b32 	%r2245, %r2239, %r2238, 23;
	mov.b64 	%rd2040, {%r2245, %r2244};
	xor.b64  	%rd2041, %rd2039, %rd2040;
	xor.b64  	%rd2042, %rd2001, %rd1977;
	and.b64  	%rd2043, %rd2025, %rd2042;
	xor.b64  	%rd2044, %rd2043, %rd1977;
	add.s64 	%rd2045, %rd1953, %rd1742;
	add.s64 	%rd2046, %rd2045, %rd81;
	add.s64 	%rd2047, %rd2046, %rd2044;
	add.s64 	%rd2048, %rd2047, %rd2041;
	add.s64 	%rd2049, %rd2048, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2246,%dummy}, %rd2036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2247}, %rd2036;
	}
	shf.r.wrap.b32 	%r2248, %r2247, %r2246, 28;
	shf.r.wrap.b32 	%r2249, %r2246, %r2247, 28;
	mov.b64 	%rd2050, {%r2249, %r2248};
	shf.l.wrap.b32 	%r2250, %r2246, %r2247, 30;
	shf.l.wrap.b32 	%r2251, %r2247, %r2246, 30;
	mov.b64 	%rd2051, {%r2251, %r2250};
	xor.b64  	%rd2052, %rd2051, %rd2050;
	shf.l.wrap.b32 	%r2252, %r2246, %r2247, 25;
	shf.l.wrap.b32 	%r2253, %r2247, %r2246, 25;
	mov.b64 	%rd2053, {%r2253, %r2252};
	xor.b64  	%rd2054, %rd2052, %rd2053;
	xor.b64  	%rd2055, %rd2036, %rd1988;
	xor.b64  	%rd2056, %rd2036, %rd2012;
	and.b64  	%rd2057, %rd2056, %rd2055;
	xor.b64  	%rd2058, %rd2057, %rd2036;
	add.s64 	%rd2059, %rd2048, %rd2058;
	add.s64 	%rd2060, %rd2059, %rd2054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2254,%dummy}, %rd2049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2255}, %rd2049;
	}
	shf.r.wrap.b32 	%r2256, %r2255, %r2254, 14;
	shf.r.wrap.b32 	%r2257, %r2254, %r2255, 14;
	mov.b64 	%rd2061, {%r2257, %r2256};
	shf.r.wrap.b32 	%r2258, %r2255, %r2254, 18;
	shf.r.wrap.b32 	%r2259, %r2254, %r2255, 18;
	mov.b64 	%rd2062, {%r2259, %r2258};
	xor.b64  	%rd2063, %rd2062, %rd2061;
	shf.l.wrap.b32 	%r2260, %r2254, %r2255, 23;
	shf.l.wrap.b32 	%r2261, %r2255, %r2254, 23;
	mov.b64 	%rd2064, {%r2261, %r2260};
	xor.b64  	%rd2065, %rd2063, %rd2064;
	xor.b64  	%rd2066, %rd2025, %rd2001;
	and.b64  	%rd2067, %rd2049, %rd2066;
	xor.b64  	%rd2068, %rd2067, %rd2001;
	add.s64 	%rd2069, %rd1977, %rd1755;
	add.s64 	%rd2070, %rd2069, %rd82;
	add.s64 	%rd2071, %rd2070, %rd2068;
	add.s64 	%rd2072, %rd2071, %rd2065;
	add.s64 	%rd2073, %rd2072, %rd1988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2262,%dummy}, %rd2060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2263}, %rd2060;
	}
	shf.r.wrap.b32 	%r2264, %r2263, %r2262, 28;
	shf.r.wrap.b32 	%r2265, %r2262, %r2263, 28;
	mov.b64 	%rd2074, {%r2265, %r2264};
	shf.l.wrap.b32 	%r2266, %r2262, %r2263, 30;
	shf.l.wrap.b32 	%r2267, %r2263, %r2262, 30;
	mov.b64 	%rd2075, {%r2267, %r2266};
	xor.b64  	%rd2076, %rd2075, %rd2074;
	shf.l.wrap.b32 	%r2268, %r2262, %r2263, 25;
	shf.l.wrap.b32 	%r2269, %r2263, %r2262, 25;
	mov.b64 	%rd2077, {%r2269, %r2268};
	xor.b64  	%rd2078, %rd2076, %rd2077;
	xor.b64  	%rd2079, %rd2060, %rd2012;
	xor.b64  	%rd2080, %rd2060, %rd2036;
	and.b64  	%rd2081, %rd2080, %rd2079;
	xor.b64  	%rd2082, %rd2081, %rd2060;
	add.s64 	%rd2083, %rd2072, %rd2082;
	add.s64 	%rd2084, %rd2083, %rd2078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2270,%dummy}, %rd2073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2271}, %rd2073;
	}
	shf.r.wrap.b32 	%r2272, %r2271, %r2270, 14;
	shf.r.wrap.b32 	%r2273, %r2270, %r2271, 14;
	mov.b64 	%rd2085, {%r2273, %r2272};
	shf.r.wrap.b32 	%r2274, %r2271, %r2270, 18;
	shf.r.wrap.b32 	%r2275, %r2270, %r2271, 18;
	mov.b64 	%rd2086, {%r2275, %r2274};
	xor.b64  	%rd2087, %rd2086, %rd2085;
	shf.l.wrap.b32 	%r2276, %r2270, %r2271, 23;
	shf.l.wrap.b32 	%r2277, %r2271, %r2270, 23;
	mov.b64 	%rd2088, {%r2277, %r2276};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	xor.b64  	%rd2090, %rd2049, %rd2025;
	and.b64  	%rd2091, %rd2073, %rd2090;
	xor.b64  	%rd2092, %rd2091, %rd2025;
	add.s64 	%rd2093, %rd2001, %rd1768;
	add.s64 	%rd2094, %rd2093, %rd83;
	add.s64 	%rd2095, %rd2094, %rd2092;
	add.s64 	%rd2096, %rd2095, %rd2089;
	add.s64 	%rd2097, %rd2096, %rd2012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2278,%dummy}, %rd2084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2279}, %rd2084;
	}
	shf.r.wrap.b32 	%r2280, %r2279, %r2278, 28;
	shf.r.wrap.b32 	%r2281, %r2278, %r2279, 28;
	mov.b64 	%rd2098, {%r2281, %r2280};
	shf.l.wrap.b32 	%r2282, %r2278, %r2279, 30;
	shf.l.wrap.b32 	%r2283, %r2279, %r2278, 30;
	mov.b64 	%rd2099, {%r2283, %r2282};
	xor.b64  	%rd2100, %rd2099, %rd2098;
	shf.l.wrap.b32 	%r2284, %r2278, %r2279, 25;
	shf.l.wrap.b32 	%r2285, %r2279, %r2278, 25;
	mov.b64 	%rd2101, {%r2285, %r2284};
	xor.b64  	%rd2102, %rd2100, %rd2101;
	xor.b64  	%rd2103, %rd2084, %rd2036;
	xor.b64  	%rd2104, %rd2084, %rd2060;
	and.b64  	%rd2105, %rd2104, %rd2103;
	xor.b64  	%rd2106, %rd2105, %rd2084;
	add.s64 	%rd2107, %rd2096, %rd2106;
	add.s64 	%rd2108, %rd2107, %rd2102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2286,%dummy}, %rd2097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2287}, %rd2097;
	}
	shf.r.wrap.b32 	%r2288, %r2287, %r2286, 14;
	shf.r.wrap.b32 	%r2289, %r2286, %r2287, 14;
	mov.b64 	%rd2109, {%r2289, %r2288};
	shf.r.wrap.b32 	%r2290, %r2287, %r2286, 18;
	shf.r.wrap.b32 	%r2291, %r2286, %r2287, 18;
	mov.b64 	%rd2110, {%r2291, %r2290};
	xor.b64  	%rd2111, %rd2110, %rd2109;
	shf.l.wrap.b32 	%r2292, %r2286, %r2287, 23;
	shf.l.wrap.b32 	%r2293, %r2287, %r2286, 23;
	mov.b64 	%rd2112, {%r2293, %r2292};
	xor.b64  	%rd2113, %rd2111, %rd2112;
	xor.b64  	%rd2114, %rd2073, %rd2049;
	and.b64  	%rd2115, %rd2097, %rd2114;
	xor.b64  	%rd2116, %rd2115, %rd2049;
	add.s64 	%rd2117, %rd2025, %rd1781;
	add.s64 	%rd2118, %rd2117, %rd84;
	add.s64 	%rd2119, %rd2118, %rd2116;
	add.s64 	%rd2120, %rd2119, %rd2113;
	add.s64 	%rd2121, %rd2120, %rd2036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2294,%dummy}, %rd2108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2295}, %rd2108;
	}
	shf.r.wrap.b32 	%r2296, %r2295, %r2294, 28;
	shf.r.wrap.b32 	%r2297, %r2294, %r2295, 28;
	mov.b64 	%rd2122, {%r2297, %r2296};
	shf.l.wrap.b32 	%r2298, %r2294, %r2295, 30;
	shf.l.wrap.b32 	%r2299, %r2295, %r2294, 30;
	mov.b64 	%rd2123, {%r2299, %r2298};
	xor.b64  	%rd2124, %rd2123, %rd2122;
	shf.l.wrap.b32 	%r2300, %r2294, %r2295, 25;
	shf.l.wrap.b32 	%r2301, %r2295, %r2294, 25;
	mov.b64 	%rd2125, {%r2301, %r2300};
	xor.b64  	%rd2126, %rd2124, %rd2125;
	xor.b64  	%rd2127, %rd2108, %rd2060;
	xor.b64  	%rd2128, %rd2108, %rd2084;
	and.b64  	%rd2129, %rd2128, %rd2127;
	xor.b64  	%rd2130, %rd2129, %rd2108;
	add.s64 	%rd2131, %rd2120, %rd2130;
	add.s64 	%rd2132, %rd2131, %rd2126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2302,%dummy}, %rd2121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2303}, %rd2121;
	}
	shf.r.wrap.b32 	%r2304, %r2303, %r2302, 14;
	shf.r.wrap.b32 	%r2305, %r2302, %r2303, 14;
	mov.b64 	%rd2133, {%r2305, %r2304};
	shf.r.wrap.b32 	%r2306, %r2303, %r2302, 18;
	shf.r.wrap.b32 	%r2307, %r2302, %r2303, 18;
	mov.b64 	%rd2134, {%r2307, %r2306};
	xor.b64  	%rd2135, %rd2134, %rd2133;
	shf.l.wrap.b32 	%r2308, %r2302, %r2303, 23;
	shf.l.wrap.b32 	%r2309, %r2303, %r2302, 23;
	mov.b64 	%rd2136, {%r2309, %r2308};
	xor.b64  	%rd2137, %rd2135, %rd2136;
	xor.b64  	%rd2138, %rd2097, %rd2073;
	and.b64  	%rd2139, %rd2121, %rd2138;
	xor.b64  	%rd2140, %rd2139, %rd2073;
	add.s64 	%rd2141, %rd2049, %rd1794;
	add.s64 	%rd2142, %rd2141, %rd85;
	add.s64 	%rd2143, %rd2142, %rd2140;
	add.s64 	%rd2144, %rd2143, %rd2137;
	add.s64 	%rd2145, %rd2144, %rd2060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2310,%dummy}, %rd2132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2311}, %rd2132;
	}
	shf.r.wrap.b32 	%r2312, %r2311, %r2310, 28;
	shf.r.wrap.b32 	%r2313, %r2310, %r2311, 28;
	mov.b64 	%rd2146, {%r2313, %r2312};
	shf.l.wrap.b32 	%r2314, %r2310, %r2311, 30;
	shf.l.wrap.b32 	%r2315, %r2311, %r2310, 30;
	mov.b64 	%rd2147, {%r2315, %r2314};
	xor.b64  	%rd2148, %rd2147, %rd2146;
	shf.l.wrap.b32 	%r2316, %r2310, %r2311, 25;
	shf.l.wrap.b32 	%r2317, %r2311, %r2310, 25;
	mov.b64 	%rd2149, {%r2317, %r2316};
	xor.b64  	%rd2150, %rd2148, %rd2149;
	xor.b64  	%rd2151, %rd2132, %rd2084;
	xor.b64  	%rd2152, %rd2132, %rd2108;
	and.b64  	%rd2153, %rd2152, %rd2151;
	xor.b64  	%rd2154, %rd2153, %rd2132;
	add.s64 	%rd2155, %rd2144, %rd2154;
	add.s64 	%rd2156, %rd2155, %rd2150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2318,%dummy}, %rd2145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2319}, %rd2145;
	}
	shf.r.wrap.b32 	%r2320, %r2319, %r2318, 14;
	shf.r.wrap.b32 	%r2321, %r2318, %r2319, 14;
	mov.b64 	%rd2157, {%r2321, %r2320};
	shf.r.wrap.b32 	%r2322, %r2319, %r2318, 18;
	shf.r.wrap.b32 	%r2323, %r2318, %r2319, 18;
	mov.b64 	%rd2158, {%r2323, %r2322};
	xor.b64  	%rd2159, %rd2158, %rd2157;
	shf.l.wrap.b32 	%r2324, %r2318, %r2319, 23;
	shf.l.wrap.b32 	%r2325, %r2319, %r2318, 23;
	mov.b64 	%rd2160, {%r2325, %r2324};
	xor.b64  	%rd2161, %rd2159, %rd2160;
	xor.b64  	%rd2162, %rd2121, %rd2097;
	and.b64  	%rd2163, %rd2145, %rd2162;
	xor.b64  	%rd2164, %rd2163, %rd2097;
	add.s64 	%rd2165, %rd2073, %rd1807;
	add.s64 	%rd2166, %rd2165, %rd86;
	add.s64 	%rd2167, %rd2166, %rd2164;
	add.s64 	%rd2168, %rd2167, %rd2161;
	add.s64 	%rd2169, %rd2168, %rd2084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2326,%dummy}, %rd2156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2327}, %rd2156;
	}
	shf.r.wrap.b32 	%r2328, %r2327, %r2326, 28;
	shf.r.wrap.b32 	%r2329, %r2326, %r2327, 28;
	mov.b64 	%rd2170, {%r2329, %r2328};
	shf.l.wrap.b32 	%r2330, %r2326, %r2327, 30;
	shf.l.wrap.b32 	%r2331, %r2327, %r2326, 30;
	mov.b64 	%rd2171, {%r2331, %r2330};
	xor.b64  	%rd2172, %rd2171, %rd2170;
	shf.l.wrap.b32 	%r2332, %r2326, %r2327, 25;
	shf.l.wrap.b32 	%r2333, %r2327, %r2326, 25;
	mov.b64 	%rd2173, {%r2333, %r2332};
	xor.b64  	%rd2174, %rd2172, %rd2173;
	xor.b64  	%rd2175, %rd2156, %rd2108;
	xor.b64  	%rd2176, %rd2156, %rd2132;
	and.b64  	%rd2177, %rd2176, %rd2175;
	xor.b64  	%rd2178, %rd2177, %rd2156;
	add.s64 	%rd2179, %rd2168, %rd2178;
	add.s64 	%rd2180, %rd2179, %rd2174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2334,%dummy}, %rd2169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2335}, %rd2169;
	}
	shf.r.wrap.b32 	%r2336, %r2335, %r2334, 14;
	shf.r.wrap.b32 	%r2337, %r2334, %r2335, 14;
	mov.b64 	%rd2181, {%r2337, %r2336};
	shf.r.wrap.b32 	%r2338, %r2335, %r2334, 18;
	shf.r.wrap.b32 	%r2339, %r2334, %r2335, 18;
	mov.b64 	%rd2182, {%r2339, %r2338};
	xor.b64  	%rd2183, %rd2182, %rd2181;
	shf.l.wrap.b32 	%r2340, %r2334, %r2335, 23;
	shf.l.wrap.b32 	%r2341, %r2335, %r2334, 23;
	mov.b64 	%rd2184, {%r2341, %r2340};
	xor.b64  	%rd2185, %rd2183, %rd2184;
	xor.b64  	%rd2186, %rd2145, %rd2121;
	and.b64  	%rd2187, %rd2169, %rd2186;
	xor.b64  	%rd2188, %rd2187, %rd2121;
	add.s64 	%rd2189, %rd2097, %rd1820;
	add.s64 	%rd2190, %rd2189, %rd87;
	add.s64 	%rd2191, %rd2190, %rd2188;
	add.s64 	%rd2192, %rd2191, %rd2185;
	add.s64 	%rd2193, %rd2192, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2342,%dummy}, %rd2180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2343}, %rd2180;
	}
	shf.r.wrap.b32 	%r2344, %r2343, %r2342, 28;
	shf.r.wrap.b32 	%r2345, %r2342, %r2343, 28;
	mov.b64 	%rd2194, {%r2345, %r2344};
	shf.l.wrap.b32 	%r2346, %r2342, %r2343, 30;
	shf.l.wrap.b32 	%r2347, %r2343, %r2342, 30;
	mov.b64 	%rd2195, {%r2347, %r2346};
	xor.b64  	%rd2196, %rd2195, %rd2194;
	shf.l.wrap.b32 	%r2348, %r2342, %r2343, 25;
	shf.l.wrap.b32 	%r2349, %r2343, %r2342, 25;
	mov.b64 	%rd2197, {%r2349, %r2348};
	xor.b64  	%rd2198, %rd2196, %rd2197;
	xor.b64  	%rd2199, %rd2180, %rd2132;
	xor.b64  	%rd2200, %rd2180, %rd2156;
	and.b64  	%rd2201, %rd2200, %rd2199;
	xor.b64  	%rd2202, %rd2201, %rd2180;
	add.s64 	%rd2203, %rd2192, %rd2202;
	add.s64 	%rd2204, %rd2203, %rd2198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2350,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2351}, %rd1807;
	}
	shf.r.wrap.b32 	%r2352, %r2351, %r2350, 19;
	shf.r.wrap.b32 	%r2353, %r2350, %r2351, 19;
	mov.b64 	%rd2205, {%r2353, %r2352};
	shf.l.wrap.b32 	%r2354, %r2350, %r2351, 3;
	shf.l.wrap.b32 	%r2355, %r2351, %r2350, 3;
	mov.b64 	%rd2206, {%r2355, %r2354};
	shr.u64 	%rd2207, %rd1807, 6;
	xor.b64  	%rd2208, %rd2205, %rd2207;
	xor.b64  	%rd2209, %rd2208, %rd2206;
	shf.r.wrap.b32 	%r2356, %r1965, %r1964, 1;
	shf.r.wrap.b32 	%r2357, %r1964, %r1965, 1;
	mov.b64 	%rd2210, {%r2357, %r2356};
	shf.r.wrap.b32 	%r2358, %r1965, %r1964, 8;
	shf.r.wrap.b32 	%r2359, %r1964, %r1965, 8;
	mov.b64 	%rd2211, {%r2359, %r2358};
	shr.u64 	%rd2212, %rd1638, 7;
	xor.b64  	%rd2213, %rd2210, %rd2212;
	xor.b64  	%rd2214, %rd2213, %rd2211;
	add.s64 	%rd2215, %rd1625, %rd1742;
	add.s64 	%rd2216, %rd2215, %rd2209;
	add.s64 	%rd2217, %rd2216, %rd2214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2360,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2361}, %rd1820;
	}
	shf.r.wrap.b32 	%r2362, %r2361, %r2360, 19;
	shf.r.wrap.b32 	%r2363, %r2360, %r2361, 19;
	mov.b64 	%rd2218, {%r2363, %r2362};
	shf.l.wrap.b32 	%r2364, %r2360, %r2361, 3;
	shf.l.wrap.b32 	%r2365, %r2361, %r2360, 3;
	mov.b64 	%rd2219, {%r2365, %r2364};
	shr.u64 	%rd2220, %rd1820, 6;
	xor.b64  	%rd2221, %rd2218, %rd2220;
	xor.b64  	%rd2222, %rd2221, %rd2219;
	shf.r.wrap.b32 	%r2366, %r1975, %r1974, 1;
	shf.r.wrap.b32 	%r2367, %r1974, %r1975, 1;
	mov.b64 	%rd2223, {%r2367, %r2366};
	shf.r.wrap.b32 	%r2368, %r1975, %r1974, 8;
	shf.r.wrap.b32 	%r2369, %r1974, %r1975, 8;
	mov.b64 	%rd2224, {%r2369, %r2368};
	shr.u64 	%rd2225, %rd1651, 7;
	xor.b64  	%rd2226, %rd2223, %rd2225;
	xor.b64  	%rd2227, %rd2226, %rd2224;
	add.s64 	%rd2228, %rd1638, %rd1755;
	add.s64 	%rd2229, %rd2228, %rd2222;
	add.s64 	%rd2230, %rd2229, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2370,%dummy}, %rd2217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2371}, %rd2217;
	}
	shf.r.wrap.b32 	%r2372, %r2371, %r2370, 19;
	shf.r.wrap.b32 	%r2373, %r2370, %r2371, 19;
	mov.b64 	%rd2231, {%r2373, %r2372};
	shf.l.wrap.b32 	%r2374, %r2370, %r2371, 3;
	shf.l.wrap.b32 	%r2375, %r2371, %r2370, 3;
	mov.b64 	%rd2232, {%r2375, %r2374};
	shr.u64 	%rd2233, %rd2217, 6;
	xor.b64  	%rd2234, %rd2231, %rd2233;
	xor.b64  	%rd2235, %rd2234, %rd2232;
	shf.r.wrap.b32 	%r2376, %r1985, %r1984, 1;
	shf.r.wrap.b32 	%r2377, %r1984, %r1985, 1;
	mov.b64 	%rd2236, {%r2377, %r2376};
	shf.r.wrap.b32 	%r2378, %r1985, %r1984, 8;
	shf.r.wrap.b32 	%r2379, %r1984, %r1985, 8;
	mov.b64 	%rd2237, {%r2379, %r2378};
	shr.u64 	%rd2238, %rd1664, 7;
	xor.b64  	%rd2239, %rd2236, %rd2238;
	xor.b64  	%rd2240, %rd2239, %rd2237;
	add.s64 	%rd2241, %rd1651, %rd1768;
	add.s64 	%rd2242, %rd2241, %rd2235;
	add.s64 	%rd2243, %rd2242, %rd2240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2380,%dummy}, %rd2230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2381}, %rd2230;
	}
	shf.r.wrap.b32 	%r2382, %r2381, %r2380, 19;
	shf.r.wrap.b32 	%r2383, %r2380, %r2381, 19;
	mov.b64 	%rd2244, {%r2383, %r2382};
	shf.l.wrap.b32 	%r2384, %r2380, %r2381, 3;
	shf.l.wrap.b32 	%r2385, %r2381, %r2380, 3;
	mov.b64 	%rd2245, {%r2385, %r2384};
	shr.u64 	%rd2246, %rd2230, 6;
	xor.b64  	%rd2247, %rd2244, %rd2246;
	xor.b64  	%rd2248, %rd2247, %rd2245;
	shf.r.wrap.b32 	%r2386, %r1995, %r1994, 1;
	shf.r.wrap.b32 	%r2387, %r1994, %r1995, 1;
	mov.b64 	%rd2249, {%r2387, %r2386};
	shf.r.wrap.b32 	%r2388, %r1995, %r1994, 8;
	shf.r.wrap.b32 	%r2389, %r1994, %r1995, 8;
	mov.b64 	%rd2250, {%r2389, %r2388};
	shr.u64 	%rd2251, %rd1677, 7;
	xor.b64  	%rd2252, %rd2249, %rd2251;
	xor.b64  	%rd2253, %rd2252, %rd2250;
	add.s64 	%rd2254, %rd1664, %rd1781;
	add.s64 	%rd2255, %rd2254, %rd2248;
	add.s64 	%rd2256, %rd2255, %rd2253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2390,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2391}, %rd2243;
	}
	shf.r.wrap.b32 	%r2392, %r2391, %r2390, 19;
	shf.r.wrap.b32 	%r2393, %r2390, %r2391, 19;
	mov.b64 	%rd2257, {%r2393, %r2392};
	shf.l.wrap.b32 	%r2394, %r2390, %r2391, 3;
	shf.l.wrap.b32 	%r2395, %r2391, %r2390, 3;
	mov.b64 	%rd2258, {%r2395, %r2394};
	shr.u64 	%rd2259, %rd2243, 6;
	xor.b64  	%rd2260, %rd2257, %rd2259;
	xor.b64  	%rd2261, %rd2260, %rd2258;
	shf.r.wrap.b32 	%r2396, %r2005, %r2004, 1;
	shf.r.wrap.b32 	%r2397, %r2004, %r2005, 1;
	mov.b64 	%rd2262, {%r2397, %r2396};
	shf.r.wrap.b32 	%r2398, %r2005, %r2004, 8;
	shf.r.wrap.b32 	%r2399, %r2004, %r2005, 8;
	mov.b64 	%rd2263, {%r2399, %r2398};
	shr.u64 	%rd2264, %rd1690, 7;
	xor.b64  	%rd2265, %rd2262, %rd2264;
	xor.b64  	%rd2266, %rd2265, %rd2263;
	add.s64 	%rd2267, %rd1677, %rd1794;
	add.s64 	%rd2268, %rd2267, %rd2261;
	add.s64 	%rd2269, %rd2268, %rd2266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2400,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2401}, %rd2256;
	}
	shf.r.wrap.b32 	%r2402, %r2401, %r2400, 19;
	shf.r.wrap.b32 	%r2403, %r2400, %r2401, 19;
	mov.b64 	%rd2270, {%r2403, %r2402};
	shf.l.wrap.b32 	%r2404, %r2400, %r2401, 3;
	shf.l.wrap.b32 	%r2405, %r2401, %r2400, 3;
	mov.b64 	%rd2271, {%r2405, %r2404};
	shr.u64 	%rd2272, %rd2256, 6;
	xor.b64  	%rd2273, %rd2270, %rd2272;
	xor.b64  	%rd2274, %rd2273, %rd2271;
	shf.r.wrap.b32 	%r2406, %r2015, %r2014, 1;
	shf.r.wrap.b32 	%r2407, %r2014, %r2015, 1;
	mov.b64 	%rd2275, {%r2407, %r2406};
	shf.r.wrap.b32 	%r2408, %r2015, %r2014, 8;
	shf.r.wrap.b32 	%r2409, %r2014, %r2015, 8;
	mov.b64 	%rd2276, {%r2409, %r2408};
	shr.u64 	%rd2277, %rd1703, 7;
	xor.b64  	%rd2278, %rd2275, %rd2277;
	xor.b64  	%rd2279, %rd2278, %rd2276;
	add.s64 	%rd2280, %rd1690, %rd1807;
	add.s64 	%rd2281, %rd2280, %rd2274;
	add.s64 	%rd2282, %rd2281, %rd2279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2410,%dummy}, %rd2269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2411}, %rd2269;
	}
	shf.r.wrap.b32 	%r2412, %r2411, %r2410, 19;
	shf.r.wrap.b32 	%r2413, %r2410, %r2411, 19;
	mov.b64 	%rd2283, {%r2413, %r2412};
	shf.l.wrap.b32 	%r2414, %r2410, %r2411, 3;
	shf.l.wrap.b32 	%r2415, %r2411, %r2410, 3;
	mov.b64 	%rd2284, {%r2415, %r2414};
	shr.u64 	%rd2285, %rd2269, 6;
	xor.b64  	%rd2286, %rd2283, %rd2285;
	xor.b64  	%rd2287, %rd2286, %rd2284;
	shf.r.wrap.b32 	%r2416, %r2025, %r2024, 1;
	shf.r.wrap.b32 	%r2417, %r2024, %r2025, 1;
	mov.b64 	%rd2288, {%r2417, %r2416};
	shf.r.wrap.b32 	%r2418, %r2025, %r2024, 8;
	shf.r.wrap.b32 	%r2419, %r2024, %r2025, 8;
	mov.b64 	%rd2289, {%r2419, %r2418};
	shr.u64 	%rd2290, %rd1716, 7;
	xor.b64  	%rd2291, %rd2288, %rd2290;
	xor.b64  	%rd2292, %rd2291, %rd2289;
	add.s64 	%rd2293, %rd1703, %rd1820;
	add.s64 	%rd2294, %rd2293, %rd2287;
	add.s64 	%rd2295, %rd2294, %rd2292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2420,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2421}, %rd2282;
	}
	shf.r.wrap.b32 	%r2422, %r2421, %r2420, 19;
	shf.r.wrap.b32 	%r2423, %r2420, %r2421, 19;
	mov.b64 	%rd2296, {%r2423, %r2422};
	shf.l.wrap.b32 	%r2424, %r2420, %r2421, 3;
	shf.l.wrap.b32 	%r2425, %r2421, %r2420, 3;
	mov.b64 	%rd2297, {%r2425, %r2424};
	shr.u64 	%rd2298, %rd2282, 6;
	xor.b64  	%rd2299, %rd2296, %rd2298;
	xor.b64  	%rd2300, %rd2299, %rd2297;
	shf.r.wrap.b32 	%r2426, %r2035, %r2034, 1;
	shf.r.wrap.b32 	%r2427, %r2034, %r2035, 1;
	mov.b64 	%rd2301, {%r2427, %r2426};
	shf.r.wrap.b32 	%r2428, %r2035, %r2034, 8;
	shf.r.wrap.b32 	%r2429, %r2034, %r2035, 8;
	mov.b64 	%rd2302, {%r2429, %r2428};
	shr.u64 	%rd2303, %rd1729, 7;
	xor.b64  	%rd2304, %rd2301, %rd2303;
	xor.b64  	%rd2305, %rd2304, %rd2302;
	add.s64 	%rd2306, %rd2217, %rd1716;
	add.s64 	%rd2307, %rd2306, %rd2300;
	add.s64 	%rd2308, %rd2307, %rd2305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2430,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2431}, %rd2295;
	}
	shf.r.wrap.b32 	%r2432, %r2431, %r2430, 19;
	shf.r.wrap.b32 	%r2433, %r2430, %r2431, 19;
	mov.b64 	%rd2309, {%r2433, %r2432};
	shf.l.wrap.b32 	%r2434, %r2430, %r2431, 3;
	shf.l.wrap.b32 	%r2435, %r2431, %r2430, 3;
	mov.b64 	%rd2310, {%r2435, %r2434};
	shr.u64 	%rd2311, %rd2295, 6;
	xor.b64  	%rd2312, %rd2309, %rd2311;
	xor.b64  	%rd2313, %rd2312, %rd2310;
	shf.r.wrap.b32 	%r2436, %r2045, %r2044, 1;
	shf.r.wrap.b32 	%r2437, %r2044, %r2045, 1;
	mov.b64 	%rd2314, {%r2437, %r2436};
	shf.r.wrap.b32 	%r2438, %r2045, %r2044, 8;
	shf.r.wrap.b32 	%r2439, %r2044, %r2045, 8;
	mov.b64 	%rd2315, {%r2439, %r2438};
	shr.u64 	%rd2316, %rd1742, 7;
	xor.b64  	%rd2317, %rd2314, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2315;
	add.s64 	%rd2319, %rd2230, %rd1729;
	add.s64 	%rd2320, %rd2319, %rd2313;
	add.s64 	%rd2321, %rd2320, %rd2318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2440,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2441}, %rd2308;
	}
	shf.r.wrap.b32 	%r2442, %r2441, %r2440, 19;
	shf.r.wrap.b32 	%r2443, %r2440, %r2441, 19;
	mov.b64 	%rd2322, {%r2443, %r2442};
	shf.l.wrap.b32 	%r2444, %r2440, %r2441, 3;
	shf.l.wrap.b32 	%r2445, %r2441, %r2440, 3;
	mov.b64 	%rd2323, {%r2445, %r2444};
	shr.u64 	%rd2324, %rd2308, 6;
	xor.b64  	%rd2325, %rd2322, %rd2324;
	xor.b64  	%rd2326, %rd2325, %rd2323;
	shf.r.wrap.b32 	%r2446, %r2055, %r2054, 1;
	shf.r.wrap.b32 	%r2447, %r2054, %r2055, 1;
	mov.b64 	%rd2327, {%r2447, %r2446};
	shf.r.wrap.b32 	%r2448, %r2055, %r2054, 8;
	shf.r.wrap.b32 	%r2449, %r2054, %r2055, 8;
	mov.b64 	%rd2328, {%r2449, %r2448};
	shr.u64 	%rd2329, %rd1755, 7;
	xor.b64  	%rd2330, %rd2327, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd2328;
	add.s64 	%rd2332, %rd2243, %rd1742;
	add.s64 	%rd2333, %rd2332, %rd2326;
	add.s64 	%rd2334, %rd2333, %rd2331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2450,%dummy}, %rd2321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2451}, %rd2321;
	}
	shf.r.wrap.b32 	%r2452, %r2451, %r2450, 19;
	shf.r.wrap.b32 	%r2453, %r2450, %r2451, 19;
	mov.b64 	%rd2335, {%r2453, %r2452};
	shf.l.wrap.b32 	%r2454, %r2450, %r2451, 3;
	shf.l.wrap.b32 	%r2455, %r2451, %r2450, 3;
	mov.b64 	%rd2336, {%r2455, %r2454};
	shr.u64 	%rd2337, %rd2321, 6;
	xor.b64  	%rd2338, %rd2335, %rd2337;
	xor.b64  	%rd2339, %rd2338, %rd2336;
	shf.r.wrap.b32 	%r2456, %r2065, %r2064, 1;
	shf.r.wrap.b32 	%r2457, %r2064, %r2065, 1;
	mov.b64 	%rd2340, {%r2457, %r2456};
	shf.r.wrap.b32 	%r2458, %r2065, %r2064, 8;
	shf.r.wrap.b32 	%r2459, %r2064, %r2065, 8;
	mov.b64 	%rd2341, {%r2459, %r2458};
	shr.u64 	%rd2342, %rd1768, 7;
	xor.b64  	%rd2343, %rd2340, %rd2342;
	xor.b64  	%rd2344, %rd2343, %rd2341;
	add.s64 	%rd2345, %rd2256, %rd1755;
	add.s64 	%rd2346, %rd2345, %rd2339;
	add.s64 	%rd2347, %rd2346, %rd2344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2460,%dummy}, %rd2334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2461}, %rd2334;
	}
	shf.r.wrap.b32 	%r2462, %r2461, %r2460, 19;
	shf.r.wrap.b32 	%r2463, %r2460, %r2461, 19;
	mov.b64 	%rd2348, {%r2463, %r2462};
	shf.l.wrap.b32 	%r2464, %r2460, %r2461, 3;
	shf.l.wrap.b32 	%r2465, %r2461, %r2460, 3;
	mov.b64 	%rd2349, {%r2465, %r2464};
	shr.u64 	%rd2350, %rd2334, 6;
	xor.b64  	%rd2351, %rd2348, %rd2350;
	xor.b64  	%rd2352, %rd2351, %rd2349;
	shf.r.wrap.b32 	%r2466, %r2075, %r2074, 1;
	shf.r.wrap.b32 	%r2467, %r2074, %r2075, 1;
	mov.b64 	%rd2353, {%r2467, %r2466};
	shf.r.wrap.b32 	%r2468, %r2075, %r2074, 8;
	shf.r.wrap.b32 	%r2469, %r2074, %r2075, 8;
	mov.b64 	%rd2354, {%r2469, %r2468};
	shr.u64 	%rd2355, %rd1781, 7;
	xor.b64  	%rd2356, %rd2353, %rd2355;
	xor.b64  	%rd2357, %rd2356, %rd2354;
	add.s64 	%rd2358, %rd2269, %rd1768;
	add.s64 	%rd2359, %rd2358, %rd2352;
	add.s64 	%rd2360, %rd2359, %rd2357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2470,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2471}, %rd2347;
	}
	shf.r.wrap.b32 	%r2472, %r2471, %r2470, 19;
	shf.r.wrap.b32 	%r2473, %r2470, %r2471, 19;
	mov.b64 	%rd2361, {%r2473, %r2472};
	shf.l.wrap.b32 	%r2474, %r2470, %r2471, 3;
	shf.l.wrap.b32 	%r2475, %r2471, %r2470, 3;
	mov.b64 	%rd2362, {%r2475, %r2474};
	shr.u64 	%rd2363, %rd2347, 6;
	xor.b64  	%rd2364, %rd2361, %rd2363;
	xor.b64  	%rd2365, %rd2364, %rd2362;
	shf.r.wrap.b32 	%r2476, %r2085, %r2084, 1;
	shf.r.wrap.b32 	%r2477, %r2084, %r2085, 1;
	mov.b64 	%rd2366, {%r2477, %r2476};
	shf.r.wrap.b32 	%r2478, %r2085, %r2084, 8;
	shf.r.wrap.b32 	%r2479, %r2084, %r2085, 8;
	mov.b64 	%rd2367, {%r2479, %r2478};
	shr.u64 	%rd2368, %rd1794, 7;
	xor.b64  	%rd2369, %rd2366, %rd2368;
	xor.b64  	%rd2370, %rd2369, %rd2367;
	add.s64 	%rd2371, %rd2282, %rd1781;
	add.s64 	%rd2372, %rd2371, %rd2365;
	add.s64 	%rd2373, %rd2372, %rd2370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2480,%dummy}, %rd2193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2481}, %rd2193;
	}
	shf.r.wrap.b32 	%r2482, %r2481, %r2480, 14;
	shf.r.wrap.b32 	%r2483, %r2480, %r2481, 14;
	mov.b64 	%rd2374, {%r2483, %r2482};
	shf.r.wrap.b32 	%r2484, %r2481, %r2480, 18;
	shf.r.wrap.b32 	%r2485, %r2480, %r2481, 18;
	mov.b64 	%rd2375, {%r2485, %r2484};
	xor.b64  	%rd2376, %rd2375, %rd2374;
	shf.l.wrap.b32 	%r2486, %r2480, %r2481, 23;
	shf.l.wrap.b32 	%r2487, %r2481, %r2480, 23;
	mov.b64 	%rd2377, {%r2487, %r2486};
	xor.b64  	%rd2378, %rd2376, %rd2377;
	xor.b64  	%rd2379, %rd2145, %rd2169;
	and.b64  	%rd2380, %rd2379, %rd2193;
	xor.b64  	%rd2381, %rd2380, %rd2145;
	add.s64 	%rd2382, %rd2381, %rd2121;
	add.s64 	%rd2383, %rd2382, %rd2217;
	add.s64 	%rd2384, %rd2383, %rd88;
	add.s64 	%rd2385, %rd2384, %rd2378;
	add.s64 	%rd2386, %rd2385, %rd2132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2488,%dummy}, %rd2204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2489}, %rd2204;
	}
	shf.r.wrap.b32 	%r2490, %r2489, %r2488, 28;
	shf.r.wrap.b32 	%r2491, %r2488, %r2489, 28;
	mov.b64 	%rd2387, {%r2491, %r2490};
	shf.l.wrap.b32 	%r2492, %r2488, %r2489, 30;
	shf.l.wrap.b32 	%r2493, %r2489, %r2488, 30;
	mov.b64 	%rd2388, {%r2493, %r2492};
	xor.b64  	%rd2389, %rd2388, %rd2387;
	shf.l.wrap.b32 	%r2494, %r2488, %r2489, 25;
	shf.l.wrap.b32 	%r2495, %r2489, %r2488, 25;
	mov.b64 	%rd2390, {%r2495, %r2494};
	xor.b64  	%rd2391, %rd2389, %rd2390;
	xor.b64  	%rd2392, %rd2204, %rd2156;
	xor.b64  	%rd2393, %rd2204, %rd2180;
	and.b64  	%rd2394, %rd2393, %rd2392;
	xor.b64  	%rd2395, %rd2394, %rd2204;
	add.s64 	%rd2396, %rd2385, %rd2395;
	add.s64 	%rd2397, %rd2396, %rd2391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd2386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd2386;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 14;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 14;
	mov.b64 	%rd2398, {%r2499, %r2498};
	shf.r.wrap.b32 	%r2500, %r2497, %r2496, 18;
	shf.r.wrap.b32 	%r2501, %r2496, %r2497, 18;
	mov.b64 	%rd2399, {%r2501, %r2500};
	xor.b64  	%rd2400, %rd2399, %rd2398;
	shf.l.wrap.b32 	%r2502, %r2496, %r2497, 23;
	shf.l.wrap.b32 	%r2503, %r2497, %r2496, 23;
	mov.b64 	%rd2401, {%r2503, %r2502};
	xor.b64  	%rd2402, %rd2400, %rd2401;
	xor.b64  	%rd2403, %rd2169, %rd2193;
	and.b64  	%rd2404, %rd2386, %rd2403;
	xor.b64  	%rd2405, %rd2404, %rd2169;
	add.s64 	%rd2406, %rd2230, %rd2145;
	add.s64 	%rd2407, %rd2406, %rd89;
	add.s64 	%rd2408, %rd2407, %rd2405;
	add.s64 	%rd2409, %rd2408, %rd2402;
	add.s64 	%rd2410, %rd2409, %rd2156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2504,%dummy}, %rd2397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2505}, %rd2397;
	}
	shf.r.wrap.b32 	%r2506, %r2505, %r2504, 28;
	shf.r.wrap.b32 	%r2507, %r2504, %r2505, 28;
	mov.b64 	%rd2411, {%r2507, %r2506};
	shf.l.wrap.b32 	%r2508, %r2504, %r2505, 30;
	shf.l.wrap.b32 	%r2509, %r2505, %r2504, 30;
	mov.b64 	%rd2412, {%r2509, %r2508};
	xor.b64  	%rd2413, %rd2412, %rd2411;
	shf.l.wrap.b32 	%r2510, %r2504, %r2505, 25;
	shf.l.wrap.b32 	%r2511, %r2505, %r2504, 25;
	mov.b64 	%rd2414, {%r2511, %r2510};
	xor.b64  	%rd2415, %rd2413, %rd2414;
	xor.b64  	%rd2416, %rd2397, %rd2180;
	xor.b64  	%rd2417, %rd2397, %rd2204;
	and.b64  	%rd2418, %rd2417, %rd2416;
	xor.b64  	%rd2419, %rd2418, %rd2397;
	add.s64 	%rd2420, %rd2409, %rd2419;
	add.s64 	%rd2421, %rd2420, %rd2415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2512,%dummy}, %rd2410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2513}, %rd2410;
	}
	shf.r.wrap.b32 	%r2514, %r2513, %r2512, 14;
	shf.r.wrap.b32 	%r2515, %r2512, %r2513, 14;
	mov.b64 	%rd2422, {%r2515, %r2514};
	shf.r.wrap.b32 	%r2516, %r2513, %r2512, 18;
	shf.r.wrap.b32 	%r2517, %r2512, %r2513, 18;
	mov.b64 	%rd2423, {%r2517, %r2516};
	xor.b64  	%rd2424, %rd2423, %rd2422;
	shf.l.wrap.b32 	%r2518, %r2512, %r2513, 23;
	shf.l.wrap.b32 	%r2519, %r2513, %r2512, 23;
	mov.b64 	%rd2425, {%r2519, %r2518};
	xor.b64  	%rd2426, %rd2424, %rd2425;
	xor.b64  	%rd2427, %rd2386, %rd2193;
	and.b64  	%rd2428, %rd2410, %rd2427;
	xor.b64  	%rd2429, %rd2428, %rd2193;
	add.s64 	%rd2430, %rd2243, %rd2169;
	add.s64 	%rd2431, %rd2430, %rd90;
	add.s64 	%rd2432, %rd2431, %rd2429;
	add.s64 	%rd2433, %rd2432, %rd2426;
	add.s64 	%rd2434, %rd2433, %rd2180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2520,%dummy}, %rd2421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2521}, %rd2421;
	}
	shf.r.wrap.b32 	%r2522, %r2521, %r2520, 28;
	shf.r.wrap.b32 	%r2523, %r2520, %r2521, 28;
	mov.b64 	%rd2435, {%r2523, %r2522};
	shf.l.wrap.b32 	%r2524, %r2520, %r2521, 30;
	shf.l.wrap.b32 	%r2525, %r2521, %r2520, 30;
	mov.b64 	%rd2436, {%r2525, %r2524};
	xor.b64  	%rd2437, %rd2436, %rd2435;
	shf.l.wrap.b32 	%r2526, %r2520, %r2521, 25;
	shf.l.wrap.b32 	%r2527, %r2521, %r2520, 25;
	mov.b64 	%rd2438, {%r2527, %r2526};
	xor.b64  	%rd2439, %rd2437, %rd2438;
	xor.b64  	%rd2440, %rd2421, %rd2204;
	xor.b64  	%rd2441, %rd2421, %rd2397;
	and.b64  	%rd2442, %rd2441, %rd2440;
	xor.b64  	%rd2443, %rd2442, %rd2421;
	add.s64 	%rd2444, %rd2433, %rd2443;
	add.s64 	%rd2445, %rd2444, %rd2439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2528,%dummy}, %rd2434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2529}, %rd2434;
	}
	shf.r.wrap.b32 	%r2530, %r2529, %r2528, 14;
	shf.r.wrap.b32 	%r2531, %r2528, %r2529, 14;
	mov.b64 	%rd2446, {%r2531, %r2530};
	shf.r.wrap.b32 	%r2532, %r2529, %r2528, 18;
	shf.r.wrap.b32 	%r2533, %r2528, %r2529, 18;
	mov.b64 	%rd2447, {%r2533, %r2532};
	xor.b64  	%rd2448, %rd2447, %rd2446;
	shf.l.wrap.b32 	%r2534, %r2528, %r2529, 23;
	shf.l.wrap.b32 	%r2535, %r2529, %r2528, 23;
	mov.b64 	%rd2449, {%r2535, %r2534};
	xor.b64  	%rd2450, %rd2448, %rd2449;
	xor.b64  	%rd2451, %rd2410, %rd2386;
	and.b64  	%rd2452, %rd2434, %rd2451;
	xor.b64  	%rd2453, %rd2452, %rd2386;
	add.s64 	%rd2454, %rd2256, %rd2193;
	add.s64 	%rd2455, %rd2454, %rd91;
	add.s64 	%rd2456, %rd2455, %rd2453;
	add.s64 	%rd2457, %rd2456, %rd2450;
	add.s64 	%rd2458, %rd2457, %rd2204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2536,%dummy}, %rd2445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2537}, %rd2445;
	}
	shf.r.wrap.b32 	%r2538, %r2537, %r2536, 28;
	shf.r.wrap.b32 	%r2539, %r2536, %r2537, 28;
	mov.b64 	%rd2459, {%r2539, %r2538};
	shf.l.wrap.b32 	%r2540, %r2536, %r2537, 30;
	shf.l.wrap.b32 	%r2541, %r2537, %r2536, 30;
	mov.b64 	%rd2460, {%r2541, %r2540};
	xor.b64  	%rd2461, %rd2460, %rd2459;
	shf.l.wrap.b32 	%r2542, %r2536, %r2537, 25;
	shf.l.wrap.b32 	%r2543, %r2537, %r2536, 25;
	mov.b64 	%rd2462, {%r2543, %r2542};
	xor.b64  	%rd2463, %rd2461, %rd2462;
	xor.b64  	%rd2464, %rd2445, %rd2397;
	xor.b64  	%rd2465, %rd2445, %rd2421;
	and.b64  	%rd2466, %rd2465, %rd2464;
	xor.b64  	%rd2467, %rd2466, %rd2445;
	add.s64 	%rd2468, %rd2457, %rd2467;
	add.s64 	%rd2469, %rd2468, %rd2463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2544,%dummy}, %rd2458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2545}, %rd2458;
	}
	shf.r.wrap.b32 	%r2546, %r2545, %r2544, 14;
	shf.r.wrap.b32 	%r2547, %r2544, %r2545, 14;
	mov.b64 	%rd2470, {%r2547, %r2546};
	shf.r.wrap.b32 	%r2548, %r2545, %r2544, 18;
	shf.r.wrap.b32 	%r2549, %r2544, %r2545, 18;
	mov.b64 	%rd2471, {%r2549, %r2548};
	xor.b64  	%rd2472, %rd2471, %rd2470;
	shf.l.wrap.b32 	%r2550, %r2544, %r2545, 23;
	shf.l.wrap.b32 	%r2551, %r2545, %r2544, 23;
	mov.b64 	%rd2473, {%r2551, %r2550};
	xor.b64  	%rd2474, %rd2472, %rd2473;
	xor.b64  	%rd2475, %rd2434, %rd2410;
	and.b64  	%rd2476, %rd2458, %rd2475;
	xor.b64  	%rd2477, %rd2476, %rd2410;
	add.s64 	%rd2478, %rd2386, %rd2269;
	add.s64 	%rd2479, %rd2478, %rd92;
	add.s64 	%rd2480, %rd2479, %rd2477;
	add.s64 	%rd2481, %rd2480, %rd2474;
	add.s64 	%rd2482, %rd2481, %rd2397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2552,%dummy}, %rd2469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2553}, %rd2469;
	}
	shf.r.wrap.b32 	%r2554, %r2553, %r2552, 28;
	shf.r.wrap.b32 	%r2555, %r2552, %r2553, 28;
	mov.b64 	%rd2483, {%r2555, %r2554};
	shf.l.wrap.b32 	%r2556, %r2552, %r2553, 30;
	shf.l.wrap.b32 	%r2557, %r2553, %r2552, 30;
	mov.b64 	%rd2484, {%r2557, %r2556};
	xor.b64  	%rd2485, %rd2484, %rd2483;
	shf.l.wrap.b32 	%r2558, %r2552, %r2553, 25;
	shf.l.wrap.b32 	%r2559, %r2553, %r2552, 25;
	mov.b64 	%rd2486, {%r2559, %r2558};
	xor.b64  	%rd2487, %rd2485, %rd2486;
	xor.b64  	%rd2488, %rd2469, %rd2421;
	xor.b64  	%rd2489, %rd2469, %rd2445;
	and.b64  	%rd2490, %rd2489, %rd2488;
	xor.b64  	%rd2491, %rd2490, %rd2469;
	add.s64 	%rd2492, %rd2481, %rd2491;
	add.s64 	%rd2493, %rd2492, %rd2487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2560,%dummy}, %rd2482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2561}, %rd2482;
	}
	shf.r.wrap.b32 	%r2562, %r2561, %r2560, 14;
	shf.r.wrap.b32 	%r2563, %r2560, %r2561, 14;
	mov.b64 	%rd2494, {%r2563, %r2562};
	shf.r.wrap.b32 	%r2564, %r2561, %r2560, 18;
	shf.r.wrap.b32 	%r2565, %r2560, %r2561, 18;
	mov.b64 	%rd2495, {%r2565, %r2564};
	xor.b64  	%rd2496, %rd2495, %rd2494;
	shf.l.wrap.b32 	%r2566, %r2560, %r2561, 23;
	shf.l.wrap.b32 	%r2567, %r2561, %r2560, 23;
	mov.b64 	%rd2497, {%r2567, %r2566};
	xor.b64  	%rd2498, %rd2496, %rd2497;
	xor.b64  	%rd2499, %rd2458, %rd2434;
	and.b64  	%rd2500, %rd2482, %rd2499;
	xor.b64  	%rd2501, %rd2500, %rd2434;
	add.s64 	%rd2502, %rd2410, %rd2282;
	add.s64 	%rd2503, %rd2502, %rd93;
	add.s64 	%rd2504, %rd2503, %rd2501;
	add.s64 	%rd2505, %rd2504, %rd2498;
	add.s64 	%rd2506, %rd2505, %rd2421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2568,%dummy}, %rd2493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2569}, %rd2493;
	}
	shf.r.wrap.b32 	%r2570, %r2569, %r2568, 28;
	shf.r.wrap.b32 	%r2571, %r2568, %r2569, 28;
	mov.b64 	%rd2507, {%r2571, %r2570};
	shf.l.wrap.b32 	%r2572, %r2568, %r2569, 30;
	shf.l.wrap.b32 	%r2573, %r2569, %r2568, 30;
	mov.b64 	%rd2508, {%r2573, %r2572};
	xor.b64  	%rd2509, %rd2508, %rd2507;
	shf.l.wrap.b32 	%r2574, %r2568, %r2569, 25;
	shf.l.wrap.b32 	%r2575, %r2569, %r2568, 25;
	mov.b64 	%rd2510, {%r2575, %r2574};
	xor.b64  	%rd2511, %rd2509, %rd2510;
	xor.b64  	%rd2512, %rd2493, %rd2445;
	xor.b64  	%rd2513, %rd2493, %rd2469;
	and.b64  	%rd2514, %rd2513, %rd2512;
	xor.b64  	%rd2515, %rd2514, %rd2493;
	add.s64 	%rd2516, %rd2505, %rd2515;
	add.s64 	%rd2517, %rd2516, %rd2511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2576,%dummy}, %rd2506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2577}, %rd2506;
	}
	shf.r.wrap.b32 	%r2578, %r2577, %r2576, 14;
	shf.r.wrap.b32 	%r2579, %r2576, %r2577, 14;
	mov.b64 	%rd2518, {%r2579, %r2578};
	shf.r.wrap.b32 	%r2580, %r2577, %r2576, 18;
	shf.r.wrap.b32 	%r2581, %r2576, %r2577, 18;
	mov.b64 	%rd2519, {%r2581, %r2580};
	xor.b64  	%rd2520, %rd2519, %rd2518;
	shf.l.wrap.b32 	%r2582, %r2576, %r2577, 23;
	shf.l.wrap.b32 	%r2583, %r2577, %r2576, 23;
	mov.b64 	%rd2521, {%r2583, %r2582};
	xor.b64  	%rd2522, %rd2520, %rd2521;
	xor.b64  	%rd2523, %rd2482, %rd2458;
	and.b64  	%rd2524, %rd2506, %rd2523;
	xor.b64  	%rd2525, %rd2524, %rd2458;
	add.s64 	%rd2526, %rd2434, %rd2295;
	add.s64 	%rd2527, %rd2526, %rd94;
	add.s64 	%rd2528, %rd2527, %rd2525;
	add.s64 	%rd2529, %rd2528, %rd2522;
	add.s64 	%rd2530, %rd2529, %rd2445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2584,%dummy}, %rd2517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2585}, %rd2517;
	}
	shf.r.wrap.b32 	%r2586, %r2585, %r2584, 28;
	shf.r.wrap.b32 	%r2587, %r2584, %r2585, 28;
	mov.b64 	%rd2531, {%r2587, %r2586};
	shf.l.wrap.b32 	%r2588, %r2584, %r2585, 30;
	shf.l.wrap.b32 	%r2589, %r2585, %r2584, 30;
	mov.b64 	%rd2532, {%r2589, %r2588};
	xor.b64  	%rd2533, %rd2532, %rd2531;
	shf.l.wrap.b32 	%r2590, %r2584, %r2585, 25;
	shf.l.wrap.b32 	%r2591, %r2585, %r2584, 25;
	mov.b64 	%rd2534, {%r2591, %r2590};
	xor.b64  	%rd2535, %rd2533, %rd2534;
	xor.b64  	%rd2536, %rd2517, %rd2469;
	xor.b64  	%rd2537, %rd2517, %rd2493;
	and.b64  	%rd2538, %rd2537, %rd2536;
	xor.b64  	%rd2539, %rd2538, %rd2517;
	add.s64 	%rd2540, %rd2529, %rd2539;
	add.s64 	%rd2541, %rd2540, %rd2535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2592,%dummy}, %rd2530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2593}, %rd2530;
	}
	shf.r.wrap.b32 	%r2594, %r2593, %r2592, 14;
	shf.r.wrap.b32 	%r2595, %r2592, %r2593, 14;
	mov.b64 	%rd2542, {%r2595, %r2594};
	shf.r.wrap.b32 	%r2596, %r2593, %r2592, 18;
	shf.r.wrap.b32 	%r2597, %r2592, %r2593, 18;
	mov.b64 	%rd2543, {%r2597, %r2596};
	xor.b64  	%rd2544, %rd2543, %rd2542;
	shf.l.wrap.b32 	%r2598, %r2592, %r2593, 23;
	shf.l.wrap.b32 	%r2599, %r2593, %r2592, 23;
	mov.b64 	%rd2545, {%r2599, %r2598};
	xor.b64  	%rd2546, %rd2544, %rd2545;
	xor.b64  	%rd2547, %rd2506, %rd2482;
	and.b64  	%rd2548, %rd2530, %rd2547;
	xor.b64  	%rd2549, %rd2548, %rd2482;
	add.s64 	%rd2550, %rd2458, %rd2308;
	add.s64 	%rd2551, %rd2550, %rd95;
	add.s64 	%rd2552, %rd2551, %rd2549;
	add.s64 	%rd2553, %rd2552, %rd2546;
	add.s64 	%rd2554, %rd2553, %rd2469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2600,%dummy}, %rd2541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2601}, %rd2541;
	}
	shf.r.wrap.b32 	%r2602, %r2601, %r2600, 28;
	shf.r.wrap.b32 	%r2603, %r2600, %r2601, 28;
	mov.b64 	%rd2555, {%r2603, %r2602};
	shf.l.wrap.b32 	%r2604, %r2600, %r2601, 30;
	shf.l.wrap.b32 	%r2605, %r2601, %r2600, 30;
	mov.b64 	%rd2556, {%r2605, %r2604};
	xor.b64  	%rd2557, %rd2556, %rd2555;
	shf.l.wrap.b32 	%r2606, %r2600, %r2601, 25;
	shf.l.wrap.b32 	%r2607, %r2601, %r2600, 25;
	mov.b64 	%rd2558, {%r2607, %r2606};
	xor.b64  	%rd2559, %rd2557, %rd2558;
	xor.b64  	%rd2560, %rd2541, %rd2493;
	xor.b64  	%rd2561, %rd2541, %rd2517;
	and.b64  	%rd2562, %rd2561, %rd2560;
	xor.b64  	%rd2563, %rd2562, %rd2541;
	add.s64 	%rd2564, %rd2553, %rd2563;
	add.s64 	%rd2565, %rd2564, %rd2559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2608,%dummy}, %rd2554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2609}, %rd2554;
	}
	shf.r.wrap.b32 	%r2610, %r2609, %r2608, 14;
	shf.r.wrap.b32 	%r2611, %r2608, %r2609, 14;
	mov.b64 	%rd2566, {%r2611, %r2610};
	shf.r.wrap.b32 	%r2612, %r2609, %r2608, 18;
	shf.r.wrap.b32 	%r2613, %r2608, %r2609, 18;
	mov.b64 	%rd2567, {%r2613, %r2612};
	xor.b64  	%rd2568, %rd2567, %rd2566;
	shf.l.wrap.b32 	%r2614, %r2608, %r2609, 23;
	shf.l.wrap.b32 	%r2615, %r2609, %r2608, 23;
	mov.b64 	%rd2569, {%r2615, %r2614};
	xor.b64  	%rd2570, %rd2568, %rd2569;
	xor.b64  	%rd2571, %rd2530, %rd2506;
	and.b64  	%rd2572, %rd2554, %rd2571;
	xor.b64  	%rd2573, %rd2572, %rd2506;
	add.s64 	%rd2574, %rd2482, %rd2321;
	add.s64 	%rd2575, %rd2574, %rd96;
	add.s64 	%rd2576, %rd2575, %rd2573;
	add.s64 	%rd2577, %rd2576, %rd2570;
	add.s64 	%rd2578, %rd2577, %rd2493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2616,%dummy}, %rd2565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2617}, %rd2565;
	}
	shf.r.wrap.b32 	%r2618, %r2617, %r2616, 28;
	shf.r.wrap.b32 	%r2619, %r2616, %r2617, 28;
	mov.b64 	%rd2579, {%r2619, %r2618};
	shf.l.wrap.b32 	%r2620, %r2616, %r2617, 30;
	shf.l.wrap.b32 	%r2621, %r2617, %r2616, 30;
	mov.b64 	%rd2580, {%r2621, %r2620};
	xor.b64  	%rd2581, %rd2580, %rd2579;
	shf.l.wrap.b32 	%r2622, %r2616, %r2617, 25;
	shf.l.wrap.b32 	%r2623, %r2617, %r2616, 25;
	mov.b64 	%rd2582, {%r2623, %r2622};
	xor.b64  	%rd2583, %rd2581, %rd2582;
	xor.b64  	%rd2584, %rd2565, %rd2517;
	xor.b64  	%rd2585, %rd2565, %rd2541;
	and.b64  	%rd2586, %rd2585, %rd2584;
	xor.b64  	%rd2587, %rd2586, %rd2565;
	add.s64 	%rd2588, %rd2577, %rd2587;
	add.s64 	%rd2589, %rd2588, %rd2583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2624,%dummy}, %rd2578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2625}, %rd2578;
	}
	shf.r.wrap.b32 	%r2626, %r2625, %r2624, 14;
	shf.r.wrap.b32 	%r2627, %r2624, %r2625, 14;
	mov.b64 	%rd2590, {%r2627, %r2626};
	shf.r.wrap.b32 	%r2628, %r2625, %r2624, 18;
	shf.r.wrap.b32 	%r2629, %r2624, %r2625, 18;
	mov.b64 	%rd2591, {%r2629, %r2628};
	xor.b64  	%rd2592, %rd2591, %rd2590;
	shf.l.wrap.b32 	%r2630, %r2624, %r2625, 23;
	shf.l.wrap.b32 	%r2631, %r2625, %r2624, 23;
	mov.b64 	%rd2593, {%r2631, %r2630};
	xor.b64  	%rd2594, %rd2592, %rd2593;
	xor.b64  	%rd2595, %rd2554, %rd2530;
	and.b64  	%rd2596, %rd2578, %rd2595;
	xor.b64  	%rd2597, %rd2596, %rd2530;
	add.s64 	%rd2598, %rd2506, %rd2334;
	add.s64 	%rd2599, %rd2598, %rd97;
	add.s64 	%rd2600, %rd2599, %rd2597;
	add.s64 	%rd2601, %rd2600, %rd2594;
	add.s64 	%rd2602, %rd2601, %rd2517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2632,%dummy}, %rd2589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2633}, %rd2589;
	}
	shf.r.wrap.b32 	%r2634, %r2633, %r2632, 28;
	shf.r.wrap.b32 	%r2635, %r2632, %r2633, 28;
	mov.b64 	%rd2603, {%r2635, %r2634};
	shf.l.wrap.b32 	%r2636, %r2632, %r2633, 30;
	shf.l.wrap.b32 	%r2637, %r2633, %r2632, 30;
	mov.b64 	%rd2604, {%r2637, %r2636};
	xor.b64  	%rd2605, %rd2604, %rd2603;
	shf.l.wrap.b32 	%r2638, %r2632, %r2633, 25;
	shf.l.wrap.b32 	%r2639, %r2633, %r2632, 25;
	mov.b64 	%rd2606, {%r2639, %r2638};
	xor.b64  	%rd2607, %rd2605, %rd2606;
	xor.b64  	%rd2608, %rd2589, %rd2541;
	xor.b64  	%rd2609, %rd2589, %rd2565;
	and.b64  	%rd2610, %rd2609, %rd2608;
	xor.b64  	%rd2611, %rd2610, %rd2589;
	add.s64 	%rd2612, %rd2601, %rd2611;
	add.s64 	%rd2613, %rd2612, %rd2607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2640,%dummy}, %rd2602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2641}, %rd2602;
	}
	shf.r.wrap.b32 	%r2642, %r2641, %r2640, 14;
	shf.r.wrap.b32 	%r2643, %r2640, %r2641, 14;
	mov.b64 	%rd2614, {%r2643, %r2642};
	shf.r.wrap.b32 	%r2644, %r2641, %r2640, 18;
	shf.r.wrap.b32 	%r2645, %r2640, %r2641, 18;
	mov.b64 	%rd2615, {%r2645, %r2644};
	xor.b64  	%rd2616, %rd2615, %rd2614;
	shf.l.wrap.b32 	%r2646, %r2640, %r2641, 23;
	shf.l.wrap.b32 	%r2647, %r2641, %r2640, 23;
	mov.b64 	%rd2617, {%r2647, %r2646};
	xor.b64  	%rd2618, %rd2616, %rd2617;
	xor.b64  	%rd2619, %rd2578, %rd2554;
	and.b64  	%rd2620, %rd2602, %rd2619;
	xor.b64  	%rd2621, %rd2620, %rd2554;
	add.s64 	%rd2622, %rd2530, %rd2347;
	add.s64 	%rd2623, %rd2622, %rd98;
	add.s64 	%rd2624, %rd2623, %rd2621;
	add.s64 	%rd2625, %rd2624, %rd2618;
	add.s64 	%rd2626, %rd2625, %rd2541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2648,%dummy}, %rd2613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2649}, %rd2613;
	}
	shf.r.wrap.b32 	%r2650, %r2649, %r2648, 28;
	shf.r.wrap.b32 	%r2651, %r2648, %r2649, 28;
	mov.b64 	%rd2627, {%r2651, %r2650};
	shf.l.wrap.b32 	%r2652, %r2648, %r2649, 30;
	shf.l.wrap.b32 	%r2653, %r2649, %r2648, 30;
	mov.b64 	%rd2628, {%r2653, %r2652};
	xor.b64  	%rd2629, %rd2628, %rd2627;
	shf.l.wrap.b32 	%r2654, %r2648, %r2649, 25;
	shf.l.wrap.b32 	%r2655, %r2649, %r2648, 25;
	mov.b64 	%rd2630, {%r2655, %r2654};
	xor.b64  	%rd2631, %rd2629, %rd2630;
	xor.b64  	%rd2632, %rd2613, %rd2565;
	xor.b64  	%rd2633, %rd2613, %rd2589;
	and.b64  	%rd2634, %rd2633, %rd2632;
	xor.b64  	%rd2635, %rd2634, %rd2613;
	add.s64 	%rd2636, %rd2625, %rd2635;
	add.s64 	%rd2637, %rd2636, %rd2631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2656,%dummy}, %rd2626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2657}, %rd2626;
	}
	shf.r.wrap.b32 	%r2658, %r2657, %r2656, 14;
	shf.r.wrap.b32 	%r2659, %r2656, %r2657, 14;
	mov.b64 	%rd2638, {%r2659, %r2658};
	shf.r.wrap.b32 	%r2660, %r2657, %r2656, 18;
	shf.r.wrap.b32 	%r2661, %r2656, %r2657, 18;
	mov.b64 	%rd2639, {%r2661, %r2660};
	xor.b64  	%rd2640, %rd2639, %rd2638;
	shf.l.wrap.b32 	%r2662, %r2656, %r2657, 23;
	shf.l.wrap.b32 	%r2663, %r2657, %r2656, 23;
	mov.b64 	%rd2641, {%r2663, %r2662};
	xor.b64  	%rd2642, %rd2640, %rd2641;
	xor.b64  	%rd2643, %rd2602, %rd2578;
	and.b64  	%rd2644, %rd2626, %rd2643;
	xor.b64  	%rd2645, %rd2644, %rd2578;
	add.s64 	%rd2646, %rd2554, %rd2360;
	add.s64 	%rd2647, %rd2646, %rd99;
	add.s64 	%rd2648, %rd2647, %rd2645;
	add.s64 	%rd2649, %rd2648, %rd2642;
	add.s64 	%rd2650, %rd2649, %rd2565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2664,%dummy}, %rd2637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2665}, %rd2637;
	}
	shf.r.wrap.b32 	%r2666, %r2665, %r2664, 28;
	shf.r.wrap.b32 	%r2667, %r2664, %r2665, 28;
	mov.b64 	%rd2651, {%r2667, %r2666};
	shf.l.wrap.b32 	%r2668, %r2664, %r2665, 30;
	shf.l.wrap.b32 	%r2669, %r2665, %r2664, 30;
	mov.b64 	%rd2652, {%r2669, %r2668};
	xor.b64  	%rd2653, %rd2652, %rd2651;
	shf.l.wrap.b32 	%r2670, %r2664, %r2665, 25;
	shf.l.wrap.b32 	%r2671, %r2665, %r2664, 25;
	mov.b64 	%rd2654, {%r2671, %r2670};
	xor.b64  	%rd2655, %rd2653, %rd2654;
	xor.b64  	%rd2656, %rd2637, %rd2589;
	xor.b64  	%rd2657, %rd2637, %rd2613;
	and.b64  	%rd2658, %rd2657, %rd2656;
	xor.b64  	%rd2659, %rd2658, %rd2637;
	add.s64 	%rd2660, %rd2649, %rd2659;
	add.s64 	%rd2661, %rd2660, %rd2655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2672,%dummy}, %rd2650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2673}, %rd2650;
	}
	shf.r.wrap.b32 	%r2674, %r2673, %r2672, 14;
	shf.r.wrap.b32 	%r2675, %r2672, %r2673, 14;
	mov.b64 	%rd2662, {%r2675, %r2674};
	shf.r.wrap.b32 	%r2676, %r2673, %r2672, 18;
	shf.r.wrap.b32 	%r2677, %r2672, %r2673, 18;
	mov.b64 	%rd2663, {%r2677, %r2676};
	xor.b64  	%rd2664, %rd2663, %rd2662;
	shf.l.wrap.b32 	%r2678, %r2672, %r2673, 23;
	shf.l.wrap.b32 	%r2679, %r2673, %r2672, 23;
	mov.b64 	%rd2665, {%r2679, %r2678};
	xor.b64  	%rd2666, %rd2664, %rd2665;
	xor.b64  	%rd2667, %rd2626, %rd2602;
	and.b64  	%rd2668, %rd2650, %rd2667;
	xor.b64  	%rd2669, %rd2668, %rd2602;
	add.s64 	%rd2670, %rd2578, %rd2373;
	add.s64 	%rd2671, %rd2670, %rd100;
	add.s64 	%rd2672, %rd2671, %rd2669;
	add.s64 	%rd2673, %rd2672, %rd2666;
	add.s64 	%rd2674, %rd2673, %rd2589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2680,%dummy}, %rd2661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2681}, %rd2661;
	}
	shf.r.wrap.b32 	%r2682, %r2681, %r2680, 28;
	shf.r.wrap.b32 	%r2683, %r2680, %r2681, 28;
	mov.b64 	%rd2675, {%r2683, %r2682};
	shf.l.wrap.b32 	%r2684, %r2680, %r2681, 30;
	shf.l.wrap.b32 	%r2685, %r2681, %r2680, 30;
	mov.b64 	%rd2676, {%r2685, %r2684};
	xor.b64  	%rd2677, %rd2676, %rd2675;
	shf.l.wrap.b32 	%r2686, %r2680, %r2681, 25;
	shf.l.wrap.b32 	%r2687, %r2681, %r2680, 25;
	mov.b64 	%rd2678, {%r2687, %r2686};
	xor.b64  	%rd2679, %rd2677, %rd2678;
	xor.b64  	%rd2680, %rd2661, %rd2613;
	xor.b64  	%rd2681, %rd2661, %rd2637;
	and.b64  	%rd2682, %rd2681, %rd2680;
	xor.b64  	%rd2683, %rd2682, %rd2661;
	add.s64 	%rd2684, %rd2673, %rd2683;
	add.s64 	%rd2685, %rd2684, %rd2679;
	cvt.u32.u64	%r183, %rd2674;
	shr.u64 	%rd2686, %rd2674, 32;
	cvt.u32.u64	%r184, %rd2686;
	cvt.u32.u64	%r185, %rd2685;
	shr.u64 	%rd2687, %rd2685, 32;
	cvt.u32.u64	%r186, %rd2687;
	shr.u32 	%r2688, %r183, %r180;
	and.b32  	%r2689, %r2688, %r207;
	mul.wide.u32 	%rd2688, %r2689, 4;
	add.s64 	%rd2689, %rd2723, %rd2688;
	and.b32  	%r2690, %r183, 31;
	mov.u32 	%r2691, 1;
	shl.b32 	%r187, %r2691, %r2690;
	ld.global.u32 	%r2692, [%rd2689];
	and.b32  	%r2693, %r2692, %r187;
	setp.eq.s32	%p26, %r2693, 0;
	@%p26 bra 	BB2_72;

	mov.u32 	%r2750, 1;
	ld.param.u64 	%rd2717, [m01710_m08_param_7];
	shr.u32 	%r2694, %r184, %r180;
	and.b32  	%r2695, %r2694, %r207;
	mul.wide.u32 	%rd2690, %r2695, 4;
	add.s64 	%rd2691, %rd2717, %rd2690;
	and.b32  	%r2696, %r184, 31;
	shl.b32 	%r188, %r2750, %r2696;
	ld.global.u32 	%r2698, [%rd2691];
	and.b32  	%r2699, %r2698, %r188;
	setp.eq.s32	%p27, %r2699, 0;
	@%p27 bra 	BB2_72;

	mov.u32 	%r2751, 1;
	ld.param.u64 	%rd2718, [m01710_m08_param_8];
	shr.u32 	%r2700, %r185, %r180;
	and.b32  	%r2701, %r2700, %r207;
	mul.wide.u32 	%rd2692, %r2701, 4;
	add.s64 	%rd2693, %rd2718, %rd2692;
	and.b32  	%r2702, %r185, 31;
	shl.b32 	%r189, %r2751, %r2702;
	ld.global.u32 	%r2704, [%rd2693];
	and.b32  	%r2705, %r2704, %r189;
	setp.eq.s32	%p28, %r2705, 0;
	@%p28 bra 	BB2_72;

	mov.u32 	%r2752, 1;
	ld.param.u64 	%rd2719, [m01710_m08_param_9];
	shr.u32 	%r2706, %r186, %r180;
	and.b32  	%r2707, %r2706, %r207;
	mul.wide.u32 	%rd2694, %r2707, 4;
	add.s64 	%rd2695, %rd2719, %rd2694;
	and.b32  	%r2708, %r186, 31;
	shl.b32 	%r190, %r2752, %r2708;
	ld.global.u32 	%r2710, [%rd2695];
	and.b32  	%r2711, %r2710, %r190;
	setp.eq.s32	%p29, %r2711, 0;
	@%p29 bra 	BB2_72;

	and.b32  	%r2749, %r183, 31;
	mov.u32 	%r2748, 1;
	shl.b32 	%r2747, %r2748, %r2749;
	ld.param.u64 	%rd2720, [m01710_m08_param_10];
	shr.u32 	%r2712, %r183, %r181;
	and.b32  	%r2713, %r2712, %r207;
	mul.wide.u32 	%rd2696, %r2713, 4;
	add.s64 	%rd2697, %rd2720, %rd2696;
	ld.global.u32 	%r2714, [%rd2697];
	and.b32  	%r2715, %r2714, %r2747;
	setp.eq.s32	%p30, %r2715, 0;
	@%p30 bra 	BB2_72;

	ld.param.u64 	%rd2721, [m01710_m08_param_11];
	shr.u32 	%r2716, %r184, %r181;
	and.b32  	%r2717, %r2716, %r207;
	mul.wide.u32 	%rd2698, %r2717, 4;
	add.s64 	%rd2699, %rd2721, %rd2698;
	ld.global.u32 	%r2718, [%rd2699];
	and.b32  	%r2719, %r2718, %r188;
	setp.eq.s32	%p31, %r2719, 0;
	@%p31 bra 	BB2_72;

	ld.param.u64 	%rd2724, [m01710_m08_param_12];
	shr.u32 	%r2720, %r185, %r181;
	and.b32  	%r2721, %r2720, %r207;
	mul.wide.u32 	%rd2700, %r2721, 4;
	add.s64 	%rd2701, %rd2724, %rd2700;
	ld.global.u32 	%r2722, [%rd2701];
	and.b32  	%r2723, %r2722, %r189;
	setp.eq.s32	%p32, %r2723, 0;
	@%p32 bra 	BB2_72;

	ld.param.u64 	%rd2725, [m01710_m08_param_13];
	shr.u32 	%r2724, %r186, %r181;
	and.b32  	%r2725, %r2724, %r207;
	mul.wide.u32 	%rd2702, %r2725, 4;
	add.s64 	%rd2703, %rd2725, %rd2702;
	ld.global.u32 	%r2726, [%rd2703];
	and.b32  	%r2727, %r2726, %r190;
	setp.eq.s32	%p33, %r2727, 0;
	@%p33 bra 	BB2_72;

	setp.eq.s32	%p34, %r212, 0;
	mov.u32 	%r2774, 0;
	mov.u32 	%r2728, -1;
	mov.u32 	%r2773, %r212;
	@%p34 bra 	BB2_66;

BB2_54:
	mov.u32 	%r2775, 1;
	ld.param.u64 	%rd2726, [m01710_m08_param_15];
	shr.u32 	%r193, %r2773, 1;
	add.s32 	%r2776, %r193, %r2774;
	cvt.u64.u32	%rd2704, %r2776;
	add.s64 	%rd101, %rd2704, %rd25;
	shl.b64 	%rd2705, %rd101, 6;
	add.s64 	%rd2706, %rd2726, %rd2705;
	ld.global.u32 	%r195, [%rd2706+28];
	setp.gt.u32	%p35, %r186, %r195;
	@%p35 bra 	BB2_64;

	setp.lt.u32	%p36, %r186, %r195;
	mov.u32 	%r2731, -1;
	@%p36 bra 	BB2_56;
	bra.uni 	BB2_57;

BB2_56:
	mov.u32 	%r2775, %r2731;
	bra.uni 	BB2_64;

BB2_57:
	mov.u32 	%r2775, 1;
	ld.global.u32 	%r196, [%rd2706+24];
	setp.gt.u32	%p37, %r185, %r196;
	@%p37 bra 	BB2_64;

	setp.lt.u32	%p38, %r185, %r196;
	@%p38 bra 	BB2_59;
	bra.uni 	BB2_60;

BB2_59:
	mov.u32 	%r2775, %r2731;
	bra.uni 	BB2_64;

BB2_60:
	mov.u32 	%r2775, 1;
	ld.global.u32 	%r197, [%rd2706+60];
	setp.gt.u32	%p39, %r184, %r197;
	@%p39 bra 	BB2_64;

	setp.lt.u32	%p40, %r184, %r197;
	mov.u32 	%r2775, %r2731;
	@%p40 bra 	BB2_64;

	mov.u32 	%r2775, 1;
	ld.global.u32 	%r198, [%rd2706+56];
	setp.gt.u32	%p41, %r183, %r198;
	@%p41 bra 	BB2_64;

	setp.lt.u32	%p42, %r183, %r198;
	selp.b32	%r2775, -1, 0, %p42;

BB2_64:
	add.s32 	%r2737, %r193, 1;
	setp.gt.s32	%p43, %r2775, 0;
	selp.b32	%r2738, %r2737, 0, %p43;
	add.s32 	%r2774, %r2738, %r2774;
	selp.b32	%r2739, -1, 0, %p43;
	add.s32 	%r2740, %r2739, %r2773;
	shr.u32 	%r2773, %r2740, 1;
	setp.eq.s32	%p44, %r2775, 0;
	@%p44 bra 	BB2_67;

	setp.ne.s32	%p45, %r2773, 0;
	@%p45 bra 	BB2_54;

BB2_66:
	mov.u32 	%r2776, %r2728;

BB2_67:
	setp.eq.s32	%p46, %r2776, -1;
	@%p46 bra 	BB2_72;

	ld.param.u64 	%rd2727, [m01710_m08_param_16];
	ld.param.u32 	%r2744, [m01710_m08_param_32];
	add.s32 	%r204, %r2776, %r2744;
	mul.wide.u32 	%rd2713, %r204, 4;
	add.s64 	%rd2714, %rd2727, %rd2713;
	atom.global.add.u32 	%r2742, [%rd2714], 1;
	setp.ne.s32	%p47, %r2742, 0;
	@%p47 bra 	BB2_72;

	atom.global.add.u32 	%r205, [%rd116], 1;
	setp.lt.u32	%p48, %r205, %r212;
	@%p48 bra 	BB2_71;
	bra.uni 	BB2_70;

BB2_71:
	ld.param.u64 	%rd2728, [m01710_m08_param_14];
	ld.param.u32 	%r2745, [m01710_m08_param_27];
	mul.wide.u32 	%rd2715, %r205, 20;
	add.s64 	%rd2716, %rd2728, %rd2715;
	st.global.u32 	[%rd2716], %r2745;
	st.global.u32 	[%rd2716+4], %r2776;
	st.global.u32 	[%rd2716+8], %r204;
	st.global.u32 	[%rd2716+12], %r1;
	st.global.u32 	[%rd2716+16], %r2772;
	bra.uni 	BB2_72;

BB2_70:
	atom.global.add.u32 	%r2743, [%rd116], -1;

BB2_72:
	ld.param.u32 	%r2746, [m01710_m08_param_30];
	add.s32 	%r2772, %r2772, 1;
	setp.lt.u32	%p49, %r2772, %r2746;
	@%p49 bra 	BB2_45;

BB2_73:
	ret;
}

	// .globl	m01710_m16
.entry m01710_m16(
	.param .u64 .ptr .global .align 4 m01710_m16_param_0,
	.param .u64 .ptr .global .align 4 m01710_m16_param_1,
	.param .u64 .ptr .global .align 4 m01710_m16_param_2,
	.param .u64 .ptr .global .align 4 m01710_m16_param_3,
	.param .u64 .ptr .global .align 1 m01710_m16_param_4,
	.param .u64 .ptr .global .align 1 m01710_m16_param_5,
	.param .u64 .ptr .global .align 4 m01710_m16_param_6,
	.param .u64 .ptr .global .align 4 m01710_m16_param_7,
	.param .u64 .ptr .global .align 4 m01710_m16_param_8,
	.param .u64 .ptr .global .align 4 m01710_m16_param_9,
	.param .u64 .ptr .global .align 4 m01710_m16_param_10,
	.param .u64 .ptr .global .align 4 m01710_m16_param_11,
	.param .u64 .ptr .global .align 4 m01710_m16_param_12,
	.param .u64 .ptr .global .align 4 m01710_m16_param_13,
	.param .u64 .ptr .global .align 4 m01710_m16_param_14,
	.param .u64 .ptr .global .align 4 m01710_m16_param_15,
	.param .u64 .ptr .global .align 4 m01710_m16_param_16,
	.param .u64 .ptr .global .align 4 m01710_m16_param_17,
	.param .u64 .ptr .global .align 1 m01710_m16_param_18,
	.param .u64 .ptr .global .align 4 m01710_m16_param_19,
	.param .u64 .ptr .global .align 4 m01710_m16_param_20,
	.param .u64 .ptr .global .align 4 m01710_m16_param_21,
	.param .u64 .ptr .global .align 4 m01710_m16_param_22,
	.param .u64 .ptr .global .align 4 m01710_m16_param_23,
	.param .u32 m01710_m16_param_24,
	.param .u32 m01710_m16_param_25,
	.param .u32 m01710_m16_param_26,
	.param .u32 m01710_m16_param_27,
	.param .u32 m01710_m16_param_28,
	.param .u32 m01710_m16_param_29,
	.param .u32 m01710_m16_param_30,
	.param .u32 m01710_m16_param_31,
	.param .u32 m01710_m16_param_32,
	.param .u32 m01710_m16_param_33,
	.param .u32 m01710_m16_param_34
)
{
	.reg .pred 	%p<50>;
	.reg .b32 	%r<2784>;
	.reg .b64 	%rd<2729>;


	ld.param.u64 	%rd102, [m01710_m16_param_0];
	ld.param.u64 	%rd115, [m01710_m16_param_17];
	ld.param.u64 	%rd116, [m01710_m16_param_19];
	ld.param.u32 	%r214, [m01710_m16_param_24];
	ld.param.u32 	%r215, [m01710_m16_param_25];
	ld.param.u32 	%r216, [m01710_m16_param_26];
	ld.param.u32 	%r217, [m01710_m16_param_27];
	ld.param.u32 	%r218, [m01710_m16_param_30];
	ld.param.u32 	%r219, [m01710_m16_param_31];
	ld.param.u32 	%r220, [m01710_m16_param_32];
	ld.param.u32 	%r221, [m01710_m16_param_34];
	mov.b32	%r222, %envreg3;
	mov.u32 	%r223, %ctaid.x;
	mov.u32 	%r224, %ntid.x;
	mad.lo.s32 	%r225, %r223, %r224, %r222;
	mov.u32 	%r226, %tid.x;
	add.s32 	%r1, %r225, %r226;
	setp.ge.u32	%p1, %r1, %r221;
	@%p1 bra 	BB3_73;

	mul.wide.u32 	%rd117, %r1, 80;
	add.s64 	%rd118, %rd102, %rd117;
	ld.global.u32 	%r2, [%rd118];
	ld.global.u32 	%r3, [%rd118+4];
	ld.global.u32 	%r4, [%rd118+8];
	ld.global.u32 	%r5, [%rd118+12];
	ld.global.u32 	%r6, [%rd118+16];
	ld.global.u32 	%r7, [%rd118+20];
	ld.global.u32 	%r8, [%rd118+24];
	ld.global.u32 	%r9, [%rd118+28];
	ld.global.u32 	%r10, [%rd118+32];
	ld.global.u32 	%r11, [%rd118+36];
	ld.global.u32 	%r12, [%rd118+40];
	ld.global.u32 	%r13, [%rd118+44];
	ld.global.u32 	%r14, [%rd118+48];
	ld.global.u32 	%r15, [%rd118+52];
	ld.global.u32 	%r16, [%rd118+56];
	cvt.u64.u32	%rd1, %r217;
	mul.wide.u32 	%rd119, %r217, 180;
	add.s64 	%rd120, %rd115, %rd119;
	ld.global.u32 	%r2775, [%rd120];
	ld.global.u32 	%r2776, [%rd120+4];
	ld.global.u32 	%r2777, [%rd120+8];
	ld.global.u32 	%r2778, [%rd120+12];
	ld.global.u32 	%r2771, [%rd120+16];
	ld.global.u32 	%r2772, [%rd120+20];
	ld.global.u32 	%r2773, [%rd120+24];
	ld.global.u32 	%r2774, [%rd120+28];
	ld.global.u32 	%r2767, [%rd120+32];
	ld.global.u32 	%r2768, [%rd120+36];
	ld.global.u32 	%r2769, [%rd120+40];
	ld.global.u32 	%r2770, [%rd120+44];
	ld.global.u32 	%r2764, [%rd120+48];
	ld.global.u32 	%r2765, [%rd120+52];
	ld.global.u32 	%r2766, [%rd120+56];
	ld.global.u32 	%r32, [%rd118+64];
	and.b32  	%r228, %r32, 3;
	mov.u32 	%r229, 4;
	sub.s32 	%r230, %r229, %r228;
	shl.b32 	%r231, %r230, 2;
	mov.u32 	%r232, 1985229328;
	shr.u32 	%r233, %r232, %r231;
	and.b32  	%r33, %r233, 65535;
	shr.u32 	%r227, %r32, 2;
	setp.gt.s32	%p2, %r227, 7;
	@%p2 bra 	BB3_17;

	setp.gt.s32	%p14, %r227, 3;
	@%p14 bra 	BB3_10;

	setp.gt.s32	%p20, %r227, 1;
	@%p20 bra 	BB3_7;

	setp.eq.s32	%p23, %r227, 0;
	@%p23 bra 	BB3_42;
	bra.uni 	BB3_5;

BB3_42:
	// inline asm
	prmt.b32 %r2766, %r2765, %r2766, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2764, %r2765, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2770, %r2764, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2769, %r2770, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2768, %r2769, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2768, %r2767, %r2768, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2774, %r2767, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2774, %r2773, %r2774, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2773, %r2772, %r2773, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2772, %r2771, %r2772, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2771, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2778, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2777, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2776, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r831, 0;
	// inline asm
	prmt.b32 %r2775, %r831, %r2775, %r33;
	// inline asm
	bra.uni 	BB3_43;

BB3_17:
	setp.gt.s32	%p3, %r227, 11;
	@%p3 bra 	BB3_25;

	setp.gt.s32	%p9, %r227, 9;
	@%p9 bra 	BB3_22;

	setp.eq.s32	%p12, %r227, 8;
	@%p12 bra 	BB3_37;
	bra.uni 	BB3_20;

BB3_37:
	// inline asm
	prmt.b32 %r2766, %r2772, %r2773, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2771, %r2772, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2768, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2771, 0;
	// inline asm
	prmt.b32 %r2767, %r2771, %r2775, %r33;
	// inline asm
	mov.u32 	%r2772, %r2771;
	mov.u32 	%r2773, %r2771;
	mov.u32 	%r2774, %r2771;
	bra.uni 	BB3_38;

BB3_10:
	setp.gt.s32	%p15, %r227, 5;
	@%p15 bra 	BB3_14;

	setp.eq.s32	%p18, %r227, 4;
	@%p18 bra 	BB3_40;
	bra.uni 	BB3_12;

BB3_40:
	// inline asm
	prmt.b32 %r2766, %r2768, %r2769, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2767, %r2768, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2774, %r2767, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2773, %r2774, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2772, %r2773, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2768, %r2771, %r2772, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2774, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2773, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2772, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2776, 0;
	// inline asm
	prmt.b32 %r2771, %r2776, %r2775, %r33;
	// inline asm
	mov.u32 	%r2775, %r2776;
	mov.u32 	%r2777, %r2776;
	mov.u32 	%r2778, %r2776;
	bra.uni 	BB3_43;

BB3_25:
	setp.gt.s32	%p4, %r227, 13;
	@%p4 bra 	BB3_29;

	setp.eq.s32	%p7, %r227, 12;
	@%p7 bra 	BB3_34;
	bra.uni 	BB3_27;

BB3_34:
	// inline asm
	prmt.b32 %r2766, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2767, 0;
	// inline asm
	prmt.b32 %r2764, %r2767, %r2775, %r33;
	// inline asm
	mov.u32 	%r2768, %r2767;
	mov.u32 	%r2769, %r2767;
	mov.u32 	%r2770, %r2767;
	bra.uni 	BB3_35;

BB3_7:
	setp.eq.s32	%p21, %r227, 2;
	@%p21 bra 	BB3_41;
	bra.uni 	BB3_8;

BB3_41:
	// inline asm
	prmt.b32 %r2766, %r2770, %r2764, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2769, %r2770, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2768, %r2769, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2767, %r2768, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2774, %r2767, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2768, %r2773, %r2774, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2772, %r2773, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2774, %r2771, %r2772, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2773, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2772, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2771, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2778, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2776, 0;
	// inline asm
	prmt.b32 %r2777, %r2776, %r2775, %r33;
	// inline asm
	mov.u32 	%r2775, %r2776;
	bra.uni 	BB3_43;

BB3_22:
	setp.eq.s32	%p10, %r227, 10;
	@%p10 bra 	BB3_36;
	bra.uni 	BB3_23;

BB3_36:
	// inline asm
	prmt.b32 %r2766, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2767, 0;
	// inline asm
	prmt.b32 %r2769, %r2767, %r2775, %r33;
	// inline asm
	mov.u32 	%r2768, %r2767;
	bra.uni 	BB3_35;

BB3_14:
	setp.eq.s32	%p16, %r227, 6;
	@%p16 bra 	BB3_39;
	bra.uni 	BB3_15;

BB3_39:
	// inline asm
	prmt.b32 %r2766, %r2774, %r2767, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2773, %r2774, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2772, %r2773, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2771, %r2772, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2768, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2774, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2771, 0;
	// inline asm
	prmt.b32 %r2773, %r2771, %r2775, %r33;
	// inline asm
	mov.u32 	%r2772, %r2771;
	bra.uni 	BB3_38;

BB3_29:
	setp.eq.s32	%p5, %r227, 14;
	@%p5 bra 	BB3_33;
	bra.uni 	BB3_30;

BB3_33:
	mov.u32 	%r2764, 0;
	// inline asm
	prmt.b32 %r2766, %r2764, %r2775, %r33;
	// inline asm
	mov.u32 	%r2765, %r2764;
	bra.uni 	BB3_32;

BB3_5:
	setp.eq.s32	%p24, %r227, 1;
	@%p24 bra 	BB3_6;
	bra.uni 	BB3_43;

BB3_6:
	// inline asm
	prmt.b32 %r2766, %r2764, %r2765, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2770, %r2764, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2769, %r2770, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2768, %r2769, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2767, %r2768, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2768, %r2774, %r2767, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2773, %r2774, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2774, %r2772, %r2773, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2773, %r2771, %r2772, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2772, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2771, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2778, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2777, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r773, 0;
	// inline asm
	prmt.b32 %r2776, %r773, %r2775, %r33;
	// inline asm
	mov.u32 	%r2775, %r773;
	bra.uni 	BB3_43;

BB3_20:
	setp.eq.s32	%p13, %r227, 9;
	@%p13 bra 	BB3_21;
	bra.uni 	BB3_43;

BB3_21:
	// inline asm
	prmt.b32 %r2766, %r2771, %r2772, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2767, 0;
	// inline asm
	prmt.b32 %r2768, %r2767, %r2775, %r33;
	// inline asm
	bra.uni 	BB3_35;

BB3_12:
	setp.eq.s32	%p19, %r227, 5;
	@%p19 bra 	BB3_13;
	bra.uni 	BB3_43;

BB3_13:
	// inline asm
	prmt.b32 %r2766, %r2767, %r2768, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2774, %r2767, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2773, %r2774, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2772, %r2773, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2771, %r2772, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2768, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2774, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2773, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2771, 0;
	// inline asm
	prmt.b32 %r2772, %r2771, %r2775, %r33;
	// inline asm
	bra.uni 	BB3_38;

BB3_27:
	setp.eq.s32	%p8, %r227, 13;
	@%p8 bra 	BB3_28;
	bra.uni 	BB3_43;

BB3_28:
	// inline asm
	prmt.b32 %r2766, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2764, 0;
	// inline asm
	prmt.b32 %r2765, %r2764, %r2775, %r33;
	// inline asm
	bra.uni 	BB3_32;

BB3_8:
	setp.eq.s32	%p22, %r227, 3;
	@%p22 bra 	BB3_9;
	bra.uni 	BB3_43;

BB3_9:
	// inline asm
	prmt.b32 %r2766, %r2769, %r2770, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2768, %r2769, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2767, %r2768, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2774, %r2767, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2773, %r2774, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2768, %r2772, %r2773, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2771, %r2772, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2774, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2773, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2772, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2771, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2776, 0;
	// inline asm
	prmt.b32 %r2778, %r2776, %r2775, %r33;
	// inline asm
	mov.u32 	%r2775, %r2776;
	mov.u32 	%r2777, %r2776;
	bra.uni 	BB3_43;

BB3_23:
	setp.eq.s32	%p11, %r227, 11;
	@%p11 bra 	BB3_24;
	bra.uni 	BB3_43;

BB3_24:
	// inline asm
	prmt.b32 %r2766, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2767, 0;
	// inline asm
	prmt.b32 %r2770, %r2767, %r2775, %r33;
	// inline asm
	mov.u32 	%r2768, %r2767;
	mov.u32 	%r2769, %r2767;

BB3_35:
	mov.u32 	%r2771, %r2767;
	mov.u32 	%r2772, %r2767;
	mov.u32 	%r2773, %r2767;
	mov.u32 	%r2774, %r2767;
	mov.u32 	%r2775, %r2767;
	mov.u32 	%r2776, %r2767;
	mov.u32 	%r2777, %r2767;
	mov.u32 	%r2778, %r2767;
	bra.uni 	BB3_43;

BB3_15:
	setp.eq.s32	%p17, %r227, 7;
	@%p17 bra 	BB3_16;
	bra.uni 	BB3_43;

BB3_16:
	// inline asm
	prmt.b32 %r2766, %r2773, %r2774, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2765, %r2772, %r2773, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2764, %r2771, %r2772, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2770, %r2778, %r2771, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2769, %r2777, %r2778, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2768, %r2776, %r2777, %r33;
	// inline asm
	// inline asm
	prmt.b32 %r2767, %r2775, %r2776, %r33;
	// inline asm
	mov.u32 	%r2771, 0;
	// inline asm
	prmt.b32 %r2774, %r2771, %r2775, %r33;
	// inline asm
	mov.u32 	%r2772, %r2771;
	mov.u32 	%r2773, %r2771;

BB3_38:
	mov.u32 	%r2775, %r2771;
	mov.u32 	%r2776, %r2771;
	mov.u32 	%r2777, %r2771;
	mov.u32 	%r2778, %r2771;
	bra.uni 	BB3_43;

BB3_30:
	setp.ne.s32	%p6, %r227, 15;
	@%p6 bra 	BB3_43;

	mov.u32 	%r2764, 0;
	mov.u32 	%r2765, %r2764;
	mov.u32 	%r2766, %r2764;

BB3_32:
	mov.u32 	%r2767, %r2764;
	mov.u32 	%r2768, %r2764;
	mov.u32 	%r2769, %r2764;
	mov.u32 	%r2770, %r2764;
	mov.u32 	%r2771, %r2764;
	mov.u32 	%r2772, %r2764;
	mov.u32 	%r2773, %r2764;
	mov.u32 	%r2774, %r2764;
	mov.u32 	%r2775, %r2764;
	mov.u32 	%r2776, %r2764;
	mov.u32 	%r2777, %r2764;
	mov.u32 	%r2778, %r2764;

BB3_43:
	// inline asm
	prmt.b32 %r834, %r2775, 0, 0x0123;
	// inline asm
	or.b32  	%r169, %r834, %r2;
	// inline asm
	prmt.b32 %r836, %r2776, 0, 0x0123;
	// inline asm
	or.b32  	%r170, %r836, %r3;
	// inline asm
	prmt.b32 %r838, %r2777, 0, 0x0123;
	// inline asm
	or.b32  	%r171, %r838, %r4;
	// inline asm
	prmt.b32 %r840, %r2778, 0, 0x0123;
	// inline asm
	or.b32  	%r172, %r840, %r5;
	// inline asm
	prmt.b32 %r842, %r2771, 0, 0x0123;
	// inline asm
	or.b32  	%r173, %r842, %r6;
	// inline asm
	prmt.b32 %r844, %r2772, 0, 0x0123;
	// inline asm
	or.b32  	%r174, %r844, %r7;
	// inline asm
	prmt.b32 %r846, %r2773, 0, 0x0123;
	// inline asm
	or.b32  	%r175, %r846, %r8;
	// inline asm
	prmt.b32 %r848, %r2774, 0, 0x0123;
	// inline asm
	or.b32  	%r176, %r848, %r9;
	// inline asm
	prmt.b32 %r850, %r2767, 0, 0x0123;
	// inline asm
	or.b32  	%r177, %r850, %r10;
	// inline asm
	prmt.b32 %r852, %r2768, 0, 0x0123;
	// inline asm
	or.b32  	%r178, %r852, %r11;
	// inline asm
	prmt.b32 %r854, %r2769, 0, 0x0123;
	// inline asm
	or.b32  	%r179, %r854, %r12;
	// inline asm
	prmt.b32 %r856, %r2770, 0, 0x0123;
	// inline asm
	or.b32  	%r180, %r856, %r13;
	// inline asm
	prmt.b32 %r858, %r2764, 0, 0x0123;
	// inline asm
	or.b32  	%r181, %r858, %r14;
	// inline asm
	prmt.b32 %r860, %r2765, 0, 0x0123;
	// inline asm
	or.b32  	%r182, %r860, %r15;
	// inline asm
	prmt.b32 %r862, %r2766, 0, 0x0123;
	// inline asm
	or.b32  	%r183, %r862, %r16;
	mul.lo.s64 	%rd121, %rd1, 180;
	add.s64 	%rd122, %rd115, %rd121;
	ld.global.u32 	%r864, [%rd122+128];
	add.s32 	%r184, %r864, %r32;
	setp.eq.s32	%p25, %r218, 0;
	@%p25 bra 	BB3_73;

	mov.b64	%rd123, {%r172, %r171};
	mov.b64	%rd2, {%r174, %r173};
	mov.b64	%rd124, {%r176, %r175};
	mov.b64	%rd3, {%r178, %r177};
	mov.b64	%rd4, {%r180, %r179};
	mov.b64	%rd5, {%r182, %r181};
	shl.b32 	%r866, %r184, 3;
	mov.b64	%rd6, {%r866, %r183};
	ld.const.u64 	%rd125, [k_sha512];
	add.s64 	%rd7, %rd125, 6620516959819538809;
	mov.u64 	%rd126, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r867,%dummy}, %rd126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd126;
	}
	shf.r.wrap.b32 	%r869, %r868, %r867, 18;
	shf.r.wrap.b32 	%r870, %r867, %r868, 18;
	mov.b64 	%rd127, {%r870, %r869};
	shf.r.wrap.b32 	%r871, %r868, %r867, 14;
	shf.r.wrap.b32 	%r872, %r867, %r868, 14;
	mov.b64 	%rd128, {%r872, %r871};
	xor.b64  	%rd129, %rd127, %rd128;
	shf.l.wrap.b32 	%r873, %r867, %r868, 23;
	shf.l.wrap.b32 	%r874, %r868, %r867, 23;
	mov.b64 	%rd130, {%r874, %r873};
	xor.b64  	%rd8, %rd129, %rd130;
	mov.u64 	%rd131, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r875}, %rd131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r876,%dummy}, %rd131;
	}
	shf.l.wrap.b32 	%r877, %r876, %r875, 30;
	shf.l.wrap.b32 	%r878, %r875, %r876, 30;
	mov.b64 	%rd132, {%r878, %r877};
	shf.r.wrap.b32 	%r879, %r875, %r876, 28;
	shf.r.wrap.b32 	%r880, %r876, %r875, 28;
	mov.b64 	%rd133, {%r880, %r879};
	xor.b64  	%rd134, %rd132, %rd133;
	shf.l.wrap.b32 	%r881, %r876, %r875, 25;
	shf.l.wrap.b32 	%r882, %r875, %r876, 25;
	mov.b64 	%rd135, {%r882, %r881};
	xor.b64  	%rd9, %rd134, %rd135;
	ld.const.u64 	%rd136, [k_sha512+8];
	add.s64 	%rd137, %rd123, %rd136;
	add.s64 	%rd10, %rd137, 2270897969802886507;
	ld.const.u64 	%rd138, [k_sha512+16];
	add.s64 	%rd139, %rd2, %rd138;
	add.s64 	%rd11, %rd139, -7276294671716946913;
	ld.const.u64 	%rd140, [k_sha512+24];
	add.s64 	%rd141, %rd124, %rd140;
	add.s64 	%rd12, %rd141, 5840696475078001361;
	ld.const.u64 	%rd13, [k_sha512+32];
	ld.const.u64 	%rd14, [k_sha512+40];
	ld.const.u64 	%rd15, [k_sha512+48];
	ld.const.u64 	%rd16, [k_sha512+56];
	ld.const.u64 	%rd17, [k_sha512+64];
	ld.const.u64 	%rd18, [k_sha512+72];
	ld.const.u64 	%rd19, [k_sha512+80];
	ld.const.u64 	%rd20, [k_sha512+88];
	ld.const.u64 	%rd21, [k_sha512+96];
	ld.const.u64 	%rd22, [k_sha512+104];
	ld.const.u64 	%rd23, [k_sha512+112];
	ld.const.u64 	%rd24, [k_sha512+120];
	and.b32  	%r187, %r215, 31;
	and.b32  	%r188, %r216, 31;
	cvt.u64.u32	%rd25, %r220;
	mov.u64 	%rd142, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r883}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r884,%dummy}, %rd142;
	}
	shf.l.wrap.b32 	%r885, %r884, %r883, 3;
	shf.l.wrap.b32 	%r886, %r883, %r884, 3;
	mov.b64 	%rd143, {%r886, %r885};
	shf.r.wrap.b32 	%r887, %r883, %r884, 19;
	shf.r.wrap.b32 	%r888, %r884, %r883, 19;
	mov.b64 	%rd144, {%r888, %r887};
	xor.b64  	%rd26, %rd144, %rd143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r889,%dummy}, %rd123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r890}, %rd123;
	}
	shf.r.wrap.b32 	%r891, %r890, %r889, 1;
	shf.r.wrap.b32 	%r892, %r889, %r890, 1;
	mov.b64 	%rd145, {%r892, %r891};
	shf.r.wrap.b32 	%r893, %r890, %r889, 8;
	shf.r.wrap.b32 	%r894, %r889, %r890, 8;
	mov.b64 	%rd146, {%r894, %r893};
	shr.u64 	%rd147, %rd123, 7;
	xor.b64  	%rd148, %rd145, %rd147;
	xor.b64  	%rd27, %rd148, %rd146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd6;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd6;
	}
	shf.r.wrap.b32 	%r897, %r896, %r895, 19;
	shf.r.wrap.b32 	%r898, %r895, %r896, 19;
	mov.b64 	%rd149, {%r898, %r897};
	shf.l.wrap.b32 	%r899, %r895, %r896, 3;
	shf.l.wrap.b32 	%r900, %r896, %r895, 3;
	mov.b64 	%rd150, {%r900, %r899};
	shr.u64 	%rd151, %rd6, 6;
	xor.b64  	%rd152, %rd149, %rd151;
	xor.b64  	%rd153, %rd152, %rd150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r902}, %rd2;
	}
	shf.r.wrap.b32 	%r903, %r902, %r901, 1;
	shf.r.wrap.b32 	%r904, %r901, %r902, 1;
	mov.b64 	%rd154, {%r904, %r903};
	shf.r.wrap.b32 	%r905, %r902, %r901, 8;
	shf.r.wrap.b32 	%r906, %r901, %r902, 8;
	mov.b64 	%rd155, {%r906, %r905};
	shr.u64 	%rd156, %rd2, 7;
	xor.b64  	%rd157, %rd154, %rd156;
	xor.b64  	%rd158, %rd157, %rd155;
	add.s64 	%rd159, %rd123, %rd153;
	add.s64 	%rd28, %rd159, %rd158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r907,%dummy}, %rd124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r908}, %rd124;
	}
	shf.r.wrap.b32 	%r909, %r908, %r907, 1;
	shf.r.wrap.b32 	%r910, %r907, %r908, 1;
	mov.b64 	%rd160, {%r910, %r909};
	shf.r.wrap.b32 	%r911, %r908, %r907, 8;
	shf.r.wrap.b32 	%r912, %r907, %r908, 8;
	mov.b64 	%rd161, {%r912, %r911};
	shr.u64 	%rd162, %rd124, 7;
	xor.b64  	%rd163, %rd160, %rd162;
	xor.b64  	%rd29, %rd163, %rd161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd28;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd28;
	}
	shf.r.wrap.b32 	%r915, %r914, %r913, 19;
	shf.r.wrap.b32 	%r916, %r913, %r914, 19;
	mov.b64 	%rd164, {%r916, %r915};
	shf.l.wrap.b32 	%r917, %r913, %r914, 3;
	shf.l.wrap.b32 	%r918, %r914, %r913, 3;
	mov.b64 	%rd165, {%r918, %r917};
	shr.u64 	%rd166, %rd28, 6;
	xor.b64  	%rd167, %rd164, %rd166;
	xor.b64  	%rd168, %rd167, %rd165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd3;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd3;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 1;
	shf.r.wrap.b32 	%r922, %r919, %r920, 1;
	mov.b64 	%rd169, {%r922, %r921};
	shf.r.wrap.b32 	%r923, %r920, %r919, 8;
	shf.r.wrap.b32 	%r924, %r919, %r920, 8;
	mov.b64 	%rd170, {%r924, %r923};
	shr.u64 	%rd171, %rd3, 7;
	xor.b64  	%rd172, %rd169, %rd171;
	xor.b64  	%rd173, %rd172, %rd170;
	add.s64 	%rd174, %rd124, %rd168;
	add.s64 	%rd30, %rd174, %rd173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd4;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd4;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 1;
	shf.r.wrap.b32 	%r928, %r925, %r926, 1;
	mov.b64 	%rd175, {%r928, %r927};
	shf.r.wrap.b32 	%r929, %r926, %r925, 8;
	shf.r.wrap.b32 	%r930, %r925, %r926, 8;
	mov.b64 	%rd176, {%r930, %r929};
	shr.u64 	%rd177, %rd4, 7;
	xor.b64  	%rd178, %rd175, %rd177;
	xor.b64  	%rd31, %rd178, %rd176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r931,%dummy}, %rd30;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r932}, %rd30;
	}
	shf.r.wrap.b32 	%r933, %r932, %r931, 19;
	shf.r.wrap.b32 	%r934, %r931, %r932, 19;
	mov.b64 	%rd179, {%r934, %r933};
	shf.l.wrap.b32 	%r935, %r931, %r932, 3;
	shf.l.wrap.b32 	%r936, %r932, %r931, 3;
	mov.b64 	%rd180, {%r936, %r935};
	shr.u64 	%rd181, %rd30, 6;
	xor.b64  	%rd182, %rd179, %rd181;
	xor.b64  	%rd183, %rd182, %rd180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r937,%dummy}, %rd5;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r938}, %rd5;
	}
	shf.r.wrap.b32 	%r939, %r938, %r937, 1;
	shf.r.wrap.b32 	%r940, %r937, %r938, 1;
	mov.b64 	%rd184, {%r940, %r939};
	shf.r.wrap.b32 	%r941, %r938, %r937, 8;
	shf.r.wrap.b32 	%r942, %r937, %r938, 8;
	mov.b64 	%rd185, {%r942, %r941};
	shr.u64 	%rd186, %rd5, 7;
	xor.b64  	%rd187, %rd184, %rd186;
	xor.b64  	%rd188, %rd187, %rd185;
	add.s64 	%rd189, %rd4, %rd183;
	add.s64 	%rd32, %rd189, %rd188;
	shf.r.wrap.b32 	%r943, %r883, %r884, 8;
	shf.r.wrap.b32 	%r944, %r884, %r883, 8;
	mov.b64 	%rd190, {%r944, %r943};
	shf.r.wrap.b32 	%r945, %r883, %r884, 1;
	shf.r.wrap.b32 	%r946, %r884, %r883, 1;
	mov.b64 	%rd191, {%r946, %r945};
	xor.b64  	%rd33, %rd191, %rd190;
	add.s64 	%rd34, %rd5, %rd6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r947,%dummy}, %rd32;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd32;
	}
	shf.r.wrap.b32 	%r949, %r948, %r947, 19;
	shf.r.wrap.b32 	%r950, %r947, %r948, 19;
	mov.b64 	%rd192, {%r950, %r949};
	shf.l.wrap.b32 	%r951, %r947, %r948, 3;
	shf.l.wrap.b32 	%r952, %r948, %r947, 3;
	mov.b64 	%rd193, {%r952, %r951};
	shr.u64 	%rd194, %rd32, 6;
	xor.b64  	%rd195, %rd192, %rd194;
	xor.b64  	%rd35, %rd195, %rd193;
	shf.r.wrap.b32 	%r953, %r896, %r895, 1;
	shf.r.wrap.b32 	%r954, %r895, %r896, 1;
	mov.b64 	%rd196, {%r954, %r953};
	shf.r.wrap.b32 	%r955, %r896, %r895, 8;
	shf.r.wrap.b32 	%r956, %r895, %r896, 8;
	mov.b64 	%rd197, {%r956, %r955};
	shr.u64 	%rd198, %rd6, 7;
	xor.b64  	%rd199, %rd196, %rd198;
	xor.b64  	%rd36, %rd199, %rd197;
	ld.const.u64 	%rd37, [k_sha512+128];
	ld.const.u64 	%rd38, [k_sha512+136];
	ld.const.u64 	%rd39, [k_sha512+144];
	ld.const.u64 	%rd40, [k_sha512+152];
	ld.const.u64 	%rd41, [k_sha512+160];
	ld.const.u64 	%rd42, [k_sha512+168];
	ld.const.u64 	%rd43, [k_sha512+176];
	ld.const.u64 	%rd44, [k_sha512+184];
	ld.const.u64 	%rd45, [k_sha512+192];
	ld.const.u64 	%rd46, [k_sha512+200];
	ld.const.u64 	%rd47, [k_sha512+208];
	ld.const.u64 	%rd48, [k_sha512+216];
	ld.const.u64 	%rd49, [k_sha512+224];
	ld.const.u64 	%rd50, [k_sha512+232];
	ld.const.u64 	%rd51, [k_sha512+240];
	ld.const.u64 	%rd52, [k_sha512+248];
	shf.r.wrap.b32 	%r957, %r914, %r913, 1;
	shf.r.wrap.b32 	%r958, %r913, %r914, 1;
	mov.b64 	%rd200, {%r958, %r957};
	shf.r.wrap.b32 	%r959, %r914, %r913, 8;
	shf.r.wrap.b32 	%r960, %r913, %r914, 8;
	mov.b64 	%rd201, {%r960, %r959};
	shr.u64 	%rd202, %rd28, 7;
	xor.b64  	%rd203, %rd200, %rd202;
	xor.b64  	%rd53, %rd203, %rd201;
	shf.r.wrap.b32 	%r961, %r932, %r931, 1;
	shf.r.wrap.b32 	%r962, %r931, %r932, 1;
	mov.b64 	%rd204, {%r962, %r961};
	shf.r.wrap.b32 	%r963, %r932, %r931, 8;
	shf.r.wrap.b32 	%r964, %r931, %r932, 8;
	mov.b64 	%rd205, {%r964, %r963};
	shr.u64 	%rd206, %rd30, 7;
	xor.b64  	%rd207, %rd204, %rd206;
	xor.b64  	%rd54, %rd207, %rd205;
	shf.r.wrap.b32 	%r965, %r948, %r947, 1;
	shf.r.wrap.b32 	%r966, %r947, %r948, 1;
	mov.b64 	%rd208, {%r966, %r965};
	shf.r.wrap.b32 	%r967, %r948, %r947, 8;
	shf.r.wrap.b32 	%r968, %r947, %r948, 8;
	mov.b64 	%rd209, {%r968, %r967};
	shr.u64 	%rd210, %rd32, 7;
	xor.b64  	%rd211, %rd208, %rd210;
	xor.b64  	%rd55, %rd211, %rd209;
	ld.const.u64 	%rd56, [k_sha512+256];
	ld.const.u64 	%rd57, [k_sha512+264];
	ld.const.u64 	%rd58, [k_sha512+272];
	ld.const.u64 	%rd59, [k_sha512+280];
	ld.const.u64 	%rd60, [k_sha512+288];
	ld.const.u64 	%rd61, [k_sha512+296];
	ld.const.u64 	%rd62, [k_sha512+304];
	ld.const.u64 	%rd63, [k_sha512+312];
	ld.const.u64 	%rd64, [k_sha512+320];
	ld.const.u64 	%rd65, [k_sha512+328];
	ld.const.u64 	%rd66, [k_sha512+336];
	ld.const.u64 	%rd67, [k_sha512+344];
	ld.const.u64 	%rd68, [k_sha512+352];
	ld.const.u64 	%rd69, [k_sha512+360];
	ld.const.u64 	%rd70, [k_sha512+368];
	ld.const.u64 	%rd71, [k_sha512+376];
	ld.const.u64 	%rd72, [k_sha512+384];
	ld.const.u64 	%rd73, [k_sha512+392];
	ld.const.u64 	%rd74, [k_sha512+400];
	ld.const.u64 	%rd75, [k_sha512+408];
	ld.const.u64 	%rd76, [k_sha512+416];
	ld.const.u64 	%rd77, [k_sha512+424];
	ld.const.u64 	%rd78, [k_sha512+432];
	ld.const.u64 	%rd79, [k_sha512+440];
	ld.const.u64 	%rd80, [k_sha512+448];
	ld.const.u64 	%rd81, [k_sha512+456];
	ld.const.u64 	%rd82, [k_sha512+464];
	ld.const.u64 	%rd83, [k_sha512+472];
	ld.const.u64 	%rd84, [k_sha512+480];
	ld.const.u64 	%rd85, [k_sha512+488];
	ld.const.u64 	%rd86, [k_sha512+496];
	ld.const.u64 	%rd87, [k_sha512+504];
	ld.const.u64 	%rd88, [k_sha512+512];
	ld.const.u64 	%rd89, [k_sha512+520];
	ld.const.u64 	%rd90, [k_sha512+528];
	ld.const.u64 	%rd91, [k_sha512+536];
	ld.const.u64 	%rd92, [k_sha512+544];
	ld.const.u64 	%rd93, [k_sha512+552];
	ld.const.u64 	%rd94, [k_sha512+560];
	ld.const.u64 	%rd95, [k_sha512+568];
	ld.const.u64 	%rd96, [k_sha512+576];
	ld.const.u64 	%rd97, [k_sha512+584];
	ld.const.u64 	%rd98, [k_sha512+592];
	ld.const.u64 	%rd99, [k_sha512+600];
	mov.u32 	%r2779, 0;
	ld.const.u64 	%rd100, [k_sha512+608];

BB3_45:
	ld.param.u64 	%rd2723, [m01710_m16_param_6];
	ld.param.u64 	%rd2722, [m01710_m16_param_3];
	mul.wide.u32 	%rd212, %r2779, 4;
	add.s64 	%rd213, %rd2722, %rd212;
	ld.global.u32 	%r969, [%rd213];
	or.b32  	%r970, %r169, %r969;
	mov.b64	%rd214, {%r170, %r970};
	add.s64 	%rd215, %rd7, %rd214;
	add.s64 	%rd216, %rd215, %rd8;
	add.s64 	%rd217, %rd216, -4263291710961585108;
	add.s64 	%rd218, %rd216, %rd9;
	add.s64 	%rd219, %rd218, 6482280703085258342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r971,%dummy}, %rd217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r972}, %rd217;
	}
	shf.r.wrap.b32 	%r973, %r972, %r971, 14;
	shf.r.wrap.b32 	%r974, %r971, %r972, 14;
	mov.b64 	%rd220, {%r974, %r973};
	shf.r.wrap.b32 	%r975, %r972, %r971, 18;
	shf.r.wrap.b32 	%r976, %r971, %r972, 18;
	mov.b64 	%rd221, {%r976, %r975};
	xor.b64  	%rd222, %rd221, %rd220;
	shf.l.wrap.b32 	%r977, %r971, %r972, 23;
	shf.l.wrap.b32 	%r978, %r972, %r971, 23;
	mov.b64 	%rd223, {%r978, %r977};
	xor.b64  	%rd224, %rd222, %rd223;
	and.b64  	%rd225, %rd217, -3887949035690463538;
	xor.b64  	%rd226, %rd225, -7276294671716946913;
	add.s64 	%rd227, %rd10, %rd226;
	add.s64 	%rd228, %rd227, %rd224;
	add.s64 	%rd229, %rd228, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r979,%dummy}, %rd219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r980}, %rd219;
	}
	shf.r.wrap.b32 	%r981, %r980, %r979, 28;
	shf.r.wrap.b32 	%r982, %r979, %r980, 28;
	mov.b64 	%rd230, {%r982, %r981};
	shf.l.wrap.b32 	%r983, %r979, %r980, 30;
	shf.l.wrap.b32 	%r984, %r980, %r979, 30;
	mov.b64 	%rd231, {%r984, %r983};
	xor.b64  	%rd232, %rd231, %rd230;
	shf.l.wrap.b32 	%r985, %r979, %r980, 25;
	shf.l.wrap.b32 	%r986, %r980, %r979, 25;
	mov.b64 	%rd233, {%r986, %r985};
	xor.b64  	%rd234, %rd232, %rd233;
	xor.b64  	%rd235, %rd219, -4942790177534073029;
	xor.b64  	%rd236, %rd219, 7640891576956012808;
	and.b64  	%rd237, %rd236, %rd235;
	xor.b64  	%rd238, %rd237, %rd219;
	add.s64 	%rd239, %rd228, %rd238;
	add.s64 	%rd240, %rd239, %rd234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r987,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r988}, %rd229;
	}
	shf.r.wrap.b32 	%r989, %r988, %r987, 14;
	shf.r.wrap.b32 	%r990, %r987, %r988, 14;
	mov.b64 	%rd241, {%r990, %r989};
	shf.r.wrap.b32 	%r991, %r988, %r987, 18;
	shf.r.wrap.b32 	%r992, %r987, %r988, 18;
	mov.b64 	%rd242, {%r992, %r991};
	xor.b64  	%rd243, %rd242, %rd241;
	shf.l.wrap.b32 	%r993, %r987, %r988, 23;
	shf.l.wrap.b32 	%r994, %r988, %r987, 23;
	mov.b64 	%rd244, {%r994, %r993};
	xor.b64  	%rd245, %rd243, %rd244;
	xor.b64  	%rd246, %rd217, 5840696475078001361;
	and.b64  	%rd247, %rd229, %rd246;
	xor.b64  	%rd248, %rd247, 5840696475078001361;
	add.s64 	%rd249, %rd11, %rd248;
	add.s64 	%rd250, %rd249, %rd245;
	add.s64 	%rd251, %rd250, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r995,%dummy}, %rd240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r996}, %rd240;
	}
	shf.r.wrap.b32 	%r997, %r996, %r995, 28;
	shf.r.wrap.b32 	%r998, %r995, %r996, 28;
	mov.b64 	%rd252, {%r998, %r997};
	shf.l.wrap.b32 	%r999, %r995, %r996, 30;
	shf.l.wrap.b32 	%r1000, %r996, %r995, 30;
	mov.b64 	%rd253, {%r1000, %r999};
	xor.b64  	%rd254, %rd253, %rd252;
	shf.l.wrap.b32 	%r1001, %r995, %r996, 25;
	shf.l.wrap.b32 	%r1002, %r996, %r995, 25;
	mov.b64 	%rd255, {%r1002, %r1001};
	xor.b64  	%rd256, %rd254, %rd255;
	xor.b64  	%rd257, %rd240, 7640891576956012808;
	xor.b64  	%rd258, %rd240, %rd219;
	and.b64  	%rd259, %rd258, %rd257;
	xor.b64  	%rd260, %rd259, %rd240;
	add.s64 	%rd261, %rd250, %rd260;
	add.s64 	%rd262, %rd261, %rd256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1003,%dummy}, %rd251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1004}, %rd251;
	}
	shf.r.wrap.b32 	%r1005, %r1004, %r1003, 14;
	shf.r.wrap.b32 	%r1006, %r1003, %r1004, 14;
	mov.b64 	%rd263, {%r1006, %r1005};
	shf.r.wrap.b32 	%r1007, %r1004, %r1003, 18;
	shf.r.wrap.b32 	%r1008, %r1003, %r1004, 18;
	mov.b64 	%rd264, {%r1008, %r1007};
	xor.b64  	%rd265, %rd264, %rd263;
	shf.l.wrap.b32 	%r1009, %r1003, %r1004, 23;
	shf.l.wrap.b32 	%r1010, %r1004, %r1003, 23;
	mov.b64 	%rd266, {%r1010, %r1009};
	xor.b64  	%rd267, %rd265, %rd266;
	xor.b64  	%rd268, %rd229, %rd217;
	and.b64  	%rd269, %rd251, %rd268;
	xor.b64  	%rd270, %rd269, %rd217;
	add.s64 	%rd271, %rd12, %rd270;
	add.s64 	%rd272, %rd271, %rd267;
	add.s64 	%rd273, %rd272, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1011,%dummy}, %rd262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1012}, %rd262;
	}
	shf.r.wrap.b32 	%r1013, %r1012, %r1011, 28;
	shf.r.wrap.b32 	%r1014, %r1011, %r1012, 28;
	mov.b64 	%rd274, {%r1014, %r1013};
	shf.l.wrap.b32 	%r1015, %r1011, %r1012, 30;
	shf.l.wrap.b32 	%r1016, %r1012, %r1011, 30;
	mov.b64 	%rd275, {%r1016, %r1015};
	xor.b64  	%rd276, %rd275, %rd274;
	shf.l.wrap.b32 	%r1017, %r1011, %r1012, 25;
	shf.l.wrap.b32 	%r1018, %r1012, %r1011, 25;
	mov.b64 	%rd277, {%r1018, %r1017};
	xor.b64  	%rd278, %rd276, %rd277;
	xor.b64  	%rd279, %rd262, %rd219;
	xor.b64  	%rd280, %rd262, %rd240;
	and.b64  	%rd281, %rd280, %rd279;
	xor.b64  	%rd282, %rd281, %rd262;
	add.s64 	%rd283, %rd272, %rd282;
	add.s64 	%rd284, %rd283, %rd278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1019,%dummy}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1020}, %rd273;
	}
	shf.r.wrap.b32 	%r1021, %r1020, %r1019, 14;
	shf.r.wrap.b32 	%r1022, %r1019, %r1020, 14;
	mov.b64 	%rd285, {%r1022, %r1021};
	shf.r.wrap.b32 	%r1023, %r1020, %r1019, 18;
	shf.r.wrap.b32 	%r1024, %r1019, %r1020, 18;
	mov.b64 	%rd286, {%r1024, %r1023};
	xor.b64  	%rd287, %rd286, %rd285;
	shf.l.wrap.b32 	%r1025, %r1019, %r1020, 23;
	shf.l.wrap.b32 	%r1026, %r1020, %r1019, 23;
	mov.b64 	%rd288, {%r1026, %r1025};
	xor.b64  	%rd289, %rd287, %rd288;
	xor.b64  	%rd290, %rd251, %rd229;
	and.b64  	%rd291, %rd273, %rd290;
	xor.b64  	%rd292, %rd291, %rd229;
	add.s64 	%rd293, %rd217, %rd3;
	add.s64 	%rd294, %rd293, %rd13;
	add.s64 	%rd295, %rd294, %rd292;
	add.s64 	%rd296, %rd295, %rd289;
	add.s64 	%rd297, %rd296, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1027,%dummy}, %rd284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1028}, %rd284;
	}
	shf.r.wrap.b32 	%r1029, %r1028, %r1027, 28;
	shf.r.wrap.b32 	%r1030, %r1027, %r1028, 28;
	mov.b64 	%rd298, {%r1030, %r1029};
	shf.l.wrap.b32 	%r1031, %r1027, %r1028, 30;
	shf.l.wrap.b32 	%r1032, %r1028, %r1027, 30;
	mov.b64 	%rd299, {%r1032, %r1031};
	xor.b64  	%rd300, %rd299, %rd298;
	shf.l.wrap.b32 	%r1033, %r1027, %r1028, 25;
	shf.l.wrap.b32 	%r1034, %r1028, %r1027, 25;
	mov.b64 	%rd301, {%r1034, %r1033};
	xor.b64  	%rd302, %rd300, %rd301;
	xor.b64  	%rd303, %rd284, %rd240;
	xor.b64  	%rd304, %rd284, %rd262;
	and.b64  	%rd305, %rd304, %rd303;
	xor.b64  	%rd306, %rd305, %rd284;
	add.s64 	%rd307, %rd296, %rd306;
	add.s64 	%rd308, %rd307, %rd302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1035,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd297;
	}
	shf.r.wrap.b32 	%r1037, %r1036, %r1035, 14;
	shf.r.wrap.b32 	%r1038, %r1035, %r1036, 14;
	mov.b64 	%rd309, {%r1038, %r1037};
	shf.r.wrap.b32 	%r1039, %r1036, %r1035, 18;
	shf.r.wrap.b32 	%r1040, %r1035, %r1036, 18;
	mov.b64 	%rd310, {%r1040, %r1039};
	xor.b64  	%rd311, %rd310, %rd309;
	shf.l.wrap.b32 	%r1041, %r1035, %r1036, 23;
	shf.l.wrap.b32 	%r1042, %r1036, %r1035, 23;
	mov.b64 	%rd312, {%r1042, %r1041};
	xor.b64  	%rd313, %rd311, %rd312;
	xor.b64  	%rd314, %rd273, %rd251;
	and.b64  	%rd315, %rd297, %rd314;
	xor.b64  	%rd316, %rd315, %rd251;
	add.s64 	%rd317, %rd229, %rd4;
	add.s64 	%rd318, %rd317, %rd14;
	add.s64 	%rd319, %rd318, %rd316;
	add.s64 	%rd320, %rd319, %rd313;
	add.s64 	%rd321, %rd320, %rd240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1043,%dummy}, %rd308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd308;
	}
	shf.r.wrap.b32 	%r1045, %r1044, %r1043, 28;
	shf.r.wrap.b32 	%r1046, %r1043, %r1044, 28;
	mov.b64 	%rd322, {%r1046, %r1045};
	shf.l.wrap.b32 	%r1047, %r1043, %r1044, 30;
	shf.l.wrap.b32 	%r1048, %r1044, %r1043, 30;
	mov.b64 	%rd323, {%r1048, %r1047};
	xor.b64  	%rd324, %rd323, %rd322;
	shf.l.wrap.b32 	%r1049, %r1043, %r1044, 25;
	shf.l.wrap.b32 	%r1050, %r1044, %r1043, 25;
	mov.b64 	%rd325, {%r1050, %r1049};
	xor.b64  	%rd326, %rd324, %rd325;
	xor.b64  	%rd327, %rd308, %rd262;
	xor.b64  	%rd328, %rd308, %rd284;
	and.b64  	%rd329, %rd328, %rd327;
	xor.b64  	%rd330, %rd329, %rd308;
	add.s64 	%rd331, %rd320, %rd330;
	add.s64 	%rd332, %rd331, %rd326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1051,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1052}, %rd321;
	}
	shf.r.wrap.b32 	%r1053, %r1052, %r1051, 14;
	shf.r.wrap.b32 	%r1054, %r1051, %r1052, 14;
	mov.b64 	%rd333, {%r1054, %r1053};
	shf.r.wrap.b32 	%r1055, %r1052, %r1051, 18;
	shf.r.wrap.b32 	%r1056, %r1051, %r1052, 18;
	mov.b64 	%rd334, {%r1056, %r1055};
	xor.b64  	%rd335, %rd334, %rd333;
	shf.l.wrap.b32 	%r1057, %r1051, %r1052, 23;
	shf.l.wrap.b32 	%r1058, %r1052, %r1051, 23;
	mov.b64 	%rd336, {%r1058, %r1057};
	xor.b64  	%rd337, %rd335, %rd336;
	xor.b64  	%rd338, %rd297, %rd273;
	and.b64  	%rd339, %rd321, %rd338;
	xor.b64  	%rd340, %rd339, %rd273;
	add.s64 	%rd341, %rd251, %rd5;
	add.s64 	%rd342, %rd341, %rd15;
	add.s64 	%rd343, %rd342, %rd340;
	add.s64 	%rd344, %rd343, %rd337;
	add.s64 	%rd345, %rd344, %rd262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1059,%dummy}, %rd332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1060}, %rd332;
	}
	shf.r.wrap.b32 	%r1061, %r1060, %r1059, 28;
	shf.r.wrap.b32 	%r1062, %r1059, %r1060, 28;
	mov.b64 	%rd346, {%r1062, %r1061};
	shf.l.wrap.b32 	%r1063, %r1059, %r1060, 30;
	shf.l.wrap.b32 	%r1064, %r1060, %r1059, 30;
	mov.b64 	%rd347, {%r1064, %r1063};
	xor.b64  	%rd348, %rd347, %rd346;
	shf.l.wrap.b32 	%r1065, %r1059, %r1060, 25;
	shf.l.wrap.b32 	%r1066, %r1060, %r1059, 25;
	mov.b64 	%rd349, {%r1066, %r1065};
	xor.b64  	%rd350, %rd348, %rd349;
	xor.b64  	%rd351, %rd332, %rd284;
	xor.b64  	%rd352, %rd332, %rd308;
	and.b64  	%rd353, %rd352, %rd351;
	xor.b64  	%rd354, %rd353, %rd332;
	add.s64 	%rd355, %rd344, %rd354;
	add.s64 	%rd356, %rd355, %rd350;
	add.s64 	%rd357, %rd16, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1067,%dummy}, %rd345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1068}, %rd345;
	}
	shf.r.wrap.b32 	%r1069, %r1068, %r1067, 14;
	shf.r.wrap.b32 	%r1070, %r1067, %r1068, 14;
	mov.b64 	%rd358, {%r1070, %r1069};
	shf.r.wrap.b32 	%r1071, %r1068, %r1067, 18;
	shf.r.wrap.b32 	%r1072, %r1067, %r1068, 18;
	mov.b64 	%rd359, {%r1072, %r1071};
	xor.b64  	%rd360, %rd359, %rd358;
	shf.l.wrap.b32 	%r1073, %r1067, %r1068, 23;
	shf.l.wrap.b32 	%r1074, %r1068, %r1067, 23;
	mov.b64 	%rd361, {%r1074, %r1073};
	xor.b64  	%rd362, %rd360, %rd361;
	xor.b64  	%rd363, %rd321, %rd297;
	and.b64  	%rd364, %rd345, %rd363;
	xor.b64  	%rd365, %rd364, %rd297;
	add.s64 	%rd366, %rd357, %rd365;
	add.s64 	%rd367, %rd366, %rd362;
	add.s64 	%rd368, %rd367, %rd284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1075,%dummy}, %rd356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1076}, %rd356;
	}
	shf.r.wrap.b32 	%r1077, %r1076, %r1075, 28;
	shf.r.wrap.b32 	%r1078, %r1075, %r1076, 28;
	mov.b64 	%rd369, {%r1078, %r1077};
	shf.l.wrap.b32 	%r1079, %r1075, %r1076, 30;
	shf.l.wrap.b32 	%r1080, %r1076, %r1075, 30;
	mov.b64 	%rd370, {%r1080, %r1079};
	xor.b64  	%rd371, %rd370, %rd369;
	shf.l.wrap.b32 	%r1081, %r1075, %r1076, 25;
	shf.l.wrap.b32 	%r1082, %r1076, %r1075, 25;
	mov.b64 	%rd372, {%r1082, %r1081};
	xor.b64  	%rd373, %rd371, %rd372;
	xor.b64  	%rd374, %rd356, %rd308;
	xor.b64  	%rd375, %rd356, %rd332;
	and.b64  	%rd376, %rd375, %rd374;
	xor.b64  	%rd377, %rd376, %rd356;
	add.s64 	%rd378, %rd367, %rd377;
	add.s64 	%rd379, %rd378, %rd373;
	add.s64 	%rd380, %rd17, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1083,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1084}, %rd368;
	}
	shf.r.wrap.b32 	%r1085, %r1084, %r1083, 14;
	shf.r.wrap.b32 	%r1086, %r1083, %r1084, 14;
	mov.b64 	%rd381, {%r1086, %r1085};
	shf.r.wrap.b32 	%r1087, %r1084, %r1083, 18;
	shf.r.wrap.b32 	%r1088, %r1083, %r1084, 18;
	mov.b64 	%rd382, {%r1088, %r1087};
	xor.b64  	%rd383, %rd382, %rd381;
	shf.l.wrap.b32 	%r1089, %r1083, %r1084, 23;
	shf.l.wrap.b32 	%r1090, %r1084, %r1083, 23;
	mov.b64 	%rd384, {%r1090, %r1089};
	xor.b64  	%rd385, %rd383, %rd384;
	xor.b64  	%rd386, %rd345, %rd321;
	and.b64  	%rd387, %rd368, %rd386;
	xor.b64  	%rd388, %rd387, %rd321;
	add.s64 	%rd389, %rd380, %rd388;
	add.s64 	%rd390, %rd389, %rd385;
	add.s64 	%rd391, %rd390, %rd308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1091,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1092}, %rd379;
	}
	shf.r.wrap.b32 	%r1093, %r1092, %r1091, 28;
	shf.r.wrap.b32 	%r1094, %r1091, %r1092, 28;
	mov.b64 	%rd392, {%r1094, %r1093};
	shf.l.wrap.b32 	%r1095, %r1091, %r1092, 30;
	shf.l.wrap.b32 	%r1096, %r1092, %r1091, 30;
	mov.b64 	%rd393, {%r1096, %r1095};
	xor.b64  	%rd394, %rd393, %rd392;
	shf.l.wrap.b32 	%r1097, %r1091, %r1092, 25;
	shf.l.wrap.b32 	%r1098, %r1092, %r1091, 25;
	mov.b64 	%rd395, {%r1098, %r1097};
	xor.b64  	%rd396, %rd394, %rd395;
	xor.b64  	%rd397, %rd379, %rd332;
	xor.b64  	%rd398, %rd379, %rd356;
	and.b64  	%rd399, %rd398, %rd397;
	xor.b64  	%rd400, %rd399, %rd379;
	add.s64 	%rd401, %rd390, %rd400;
	add.s64 	%rd402, %rd401, %rd396;
	add.s64 	%rd403, %rd18, %rd321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1099,%dummy}, %rd391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1100}, %rd391;
	}
	shf.r.wrap.b32 	%r1101, %r1100, %r1099, 14;
	shf.r.wrap.b32 	%r1102, %r1099, %r1100, 14;
	mov.b64 	%rd404, {%r1102, %r1101};
	shf.r.wrap.b32 	%r1103, %r1100, %r1099, 18;
	shf.r.wrap.b32 	%r1104, %r1099, %r1100, 18;
	mov.b64 	%rd405, {%r1104, %r1103};
	xor.b64  	%rd406, %rd405, %rd404;
	shf.l.wrap.b32 	%r1105, %r1099, %r1100, 23;
	shf.l.wrap.b32 	%r1106, %r1100, %r1099, 23;
	mov.b64 	%rd407, {%r1106, %r1105};
	xor.b64  	%rd408, %rd406, %rd407;
	xor.b64  	%rd409, %rd368, %rd345;
	and.b64  	%rd410, %rd391, %rd409;
	xor.b64  	%rd411, %rd410, %rd345;
	add.s64 	%rd412, %rd403, %rd411;
	add.s64 	%rd413, %rd412, %rd408;
	add.s64 	%rd414, %rd413, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1107,%dummy}, %rd402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1108}, %rd402;
	}
	shf.r.wrap.b32 	%r1109, %r1108, %r1107, 28;
	shf.r.wrap.b32 	%r1110, %r1107, %r1108, 28;
	mov.b64 	%rd415, {%r1110, %r1109};
	shf.l.wrap.b32 	%r1111, %r1107, %r1108, 30;
	shf.l.wrap.b32 	%r1112, %r1108, %r1107, 30;
	mov.b64 	%rd416, {%r1112, %r1111};
	xor.b64  	%rd417, %rd416, %rd415;
	shf.l.wrap.b32 	%r1113, %r1107, %r1108, 25;
	shf.l.wrap.b32 	%r1114, %r1108, %r1107, 25;
	mov.b64 	%rd418, {%r1114, %r1113};
	xor.b64  	%rd419, %rd417, %rd418;
	xor.b64  	%rd420, %rd402, %rd356;
	xor.b64  	%rd421, %rd402, %rd379;
	and.b64  	%rd422, %rd421, %rd420;
	xor.b64  	%rd423, %rd422, %rd402;
	add.s64 	%rd424, %rd413, %rd423;
	add.s64 	%rd425, %rd424, %rd419;
	add.s64 	%rd426, %rd19, %rd345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1115,%dummy}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1116}, %rd414;
	}
	shf.r.wrap.b32 	%r1117, %r1116, %r1115, 14;
	shf.r.wrap.b32 	%r1118, %r1115, %r1116, 14;
	mov.b64 	%rd427, {%r1118, %r1117};
	shf.r.wrap.b32 	%r1119, %r1116, %r1115, 18;
	shf.r.wrap.b32 	%r1120, %r1115, %r1116, 18;
	mov.b64 	%rd428, {%r1120, %r1119};
	xor.b64  	%rd429, %rd428, %rd427;
	shf.l.wrap.b32 	%r1121, %r1115, %r1116, 23;
	shf.l.wrap.b32 	%r1122, %r1116, %r1115, 23;
	mov.b64 	%rd430, {%r1122, %r1121};
	xor.b64  	%rd431, %rd429, %rd430;
	xor.b64  	%rd432, %rd391, %rd368;
	and.b64  	%rd433, %rd414, %rd432;
	xor.b64  	%rd434, %rd433, %rd368;
	add.s64 	%rd435, %rd426, %rd434;
	add.s64 	%rd436, %rd435, %rd431;
	add.s64 	%rd437, %rd436, %rd356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1123,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1124}, %rd425;
	}
	shf.r.wrap.b32 	%r1125, %r1124, %r1123, 28;
	shf.r.wrap.b32 	%r1126, %r1123, %r1124, 28;
	mov.b64 	%rd438, {%r1126, %r1125};
	shf.l.wrap.b32 	%r1127, %r1123, %r1124, 30;
	shf.l.wrap.b32 	%r1128, %r1124, %r1123, 30;
	mov.b64 	%rd439, {%r1128, %r1127};
	xor.b64  	%rd440, %rd439, %rd438;
	shf.l.wrap.b32 	%r1129, %r1123, %r1124, 25;
	shf.l.wrap.b32 	%r1130, %r1124, %r1123, 25;
	mov.b64 	%rd441, {%r1130, %r1129};
	xor.b64  	%rd442, %rd440, %rd441;
	xor.b64  	%rd443, %rd425, %rd379;
	xor.b64  	%rd444, %rd425, %rd402;
	and.b64  	%rd445, %rd444, %rd443;
	xor.b64  	%rd446, %rd445, %rd425;
	add.s64 	%rd447, %rd436, %rd446;
	add.s64 	%rd448, %rd447, %rd442;
	add.s64 	%rd449, %rd20, %rd368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1131,%dummy}, %rd437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1132}, %rd437;
	}
	shf.r.wrap.b32 	%r1133, %r1132, %r1131, 14;
	shf.r.wrap.b32 	%r1134, %r1131, %r1132, 14;
	mov.b64 	%rd450, {%r1134, %r1133};
	shf.r.wrap.b32 	%r1135, %r1132, %r1131, 18;
	shf.r.wrap.b32 	%r1136, %r1131, %r1132, 18;
	mov.b64 	%rd451, {%r1136, %r1135};
	xor.b64  	%rd452, %rd451, %rd450;
	shf.l.wrap.b32 	%r1137, %r1131, %r1132, 23;
	shf.l.wrap.b32 	%r1138, %r1132, %r1131, 23;
	mov.b64 	%rd453, {%r1138, %r1137};
	xor.b64  	%rd454, %rd452, %rd453;
	xor.b64  	%rd455, %rd414, %rd391;
	and.b64  	%rd456, %rd437, %rd455;
	xor.b64  	%rd457, %rd456, %rd391;
	add.s64 	%rd458, %rd449, %rd457;
	add.s64 	%rd459, %rd458, %rd454;
	add.s64 	%rd460, %rd459, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1139,%dummy}, %rd448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1140}, %rd448;
	}
	shf.r.wrap.b32 	%r1141, %r1140, %r1139, 28;
	shf.r.wrap.b32 	%r1142, %r1139, %r1140, 28;
	mov.b64 	%rd461, {%r1142, %r1141};
	shf.l.wrap.b32 	%r1143, %r1139, %r1140, 30;
	shf.l.wrap.b32 	%r1144, %r1140, %r1139, 30;
	mov.b64 	%rd462, {%r1144, %r1143};
	xor.b64  	%rd463, %rd462, %rd461;
	shf.l.wrap.b32 	%r1145, %r1139, %r1140, 25;
	shf.l.wrap.b32 	%r1146, %r1140, %r1139, 25;
	mov.b64 	%rd464, {%r1146, %r1145};
	xor.b64  	%rd465, %rd463, %rd464;
	xor.b64  	%rd466, %rd448, %rd402;
	xor.b64  	%rd467, %rd448, %rd425;
	and.b64  	%rd468, %rd467, %rd466;
	xor.b64  	%rd469, %rd468, %rd448;
	add.s64 	%rd470, %rd459, %rd469;
	add.s64 	%rd471, %rd470, %rd465;
	add.s64 	%rd472, %rd21, %rd391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1147,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1148}, %rd460;
	}
	shf.r.wrap.b32 	%r1149, %r1148, %r1147, 14;
	shf.r.wrap.b32 	%r1150, %r1147, %r1148, 14;
	mov.b64 	%rd473, {%r1150, %r1149};
	shf.r.wrap.b32 	%r1151, %r1148, %r1147, 18;
	shf.r.wrap.b32 	%r1152, %r1147, %r1148, 18;
	mov.b64 	%rd474, {%r1152, %r1151};
	xor.b64  	%rd475, %rd474, %rd473;
	shf.l.wrap.b32 	%r1153, %r1147, %r1148, 23;
	shf.l.wrap.b32 	%r1154, %r1148, %r1147, 23;
	mov.b64 	%rd476, {%r1154, %r1153};
	xor.b64  	%rd477, %rd475, %rd476;
	xor.b64  	%rd478, %rd437, %rd414;
	and.b64  	%rd479, %rd460, %rd478;
	xor.b64  	%rd480, %rd479, %rd414;
	add.s64 	%rd481, %rd472, %rd480;
	add.s64 	%rd482, %rd481, %rd477;
	add.s64 	%rd483, %rd482, %rd402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1155,%dummy}, %rd471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd471;
	}
	shf.r.wrap.b32 	%r1157, %r1156, %r1155, 28;
	shf.r.wrap.b32 	%r1158, %r1155, %r1156, 28;
	mov.b64 	%rd484, {%r1158, %r1157};
	shf.l.wrap.b32 	%r1159, %r1155, %r1156, 30;
	shf.l.wrap.b32 	%r1160, %r1156, %r1155, 30;
	mov.b64 	%rd485, {%r1160, %r1159};
	xor.b64  	%rd486, %rd485, %rd484;
	shf.l.wrap.b32 	%r1161, %r1155, %r1156, 25;
	shf.l.wrap.b32 	%r1162, %r1156, %r1155, 25;
	mov.b64 	%rd487, {%r1162, %r1161};
	xor.b64  	%rd488, %rd486, %rd487;
	xor.b64  	%rd489, %rd471, %rd425;
	xor.b64  	%rd490, %rd471, %rd448;
	and.b64  	%rd491, %rd490, %rd489;
	xor.b64  	%rd492, %rd491, %rd471;
	add.s64 	%rd493, %rd482, %rd492;
	add.s64 	%rd494, %rd493, %rd488;
	add.s64 	%rd495, %rd22, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1163,%dummy}, %rd483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1164}, %rd483;
	}
	shf.r.wrap.b32 	%r1165, %r1164, %r1163, 14;
	shf.r.wrap.b32 	%r1166, %r1163, %r1164, 14;
	mov.b64 	%rd496, {%r1166, %r1165};
	shf.r.wrap.b32 	%r1167, %r1164, %r1163, 18;
	shf.r.wrap.b32 	%r1168, %r1163, %r1164, 18;
	mov.b64 	%rd497, {%r1168, %r1167};
	xor.b64  	%rd498, %rd497, %rd496;
	shf.l.wrap.b32 	%r1169, %r1163, %r1164, 23;
	shf.l.wrap.b32 	%r1170, %r1164, %r1163, 23;
	mov.b64 	%rd499, {%r1170, %r1169};
	xor.b64  	%rd500, %rd498, %rd499;
	xor.b64  	%rd501, %rd460, %rd437;
	and.b64  	%rd502, %rd483, %rd501;
	xor.b64  	%rd503, %rd502, %rd437;
	add.s64 	%rd504, %rd495, %rd503;
	add.s64 	%rd505, %rd504, %rd500;
	add.s64 	%rd506, %rd505, %rd425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1171,%dummy}, %rd494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1172}, %rd494;
	}
	shf.r.wrap.b32 	%r1173, %r1172, %r1171, 28;
	shf.r.wrap.b32 	%r1174, %r1171, %r1172, 28;
	mov.b64 	%rd507, {%r1174, %r1173};
	shf.l.wrap.b32 	%r1175, %r1171, %r1172, 30;
	shf.l.wrap.b32 	%r1176, %r1172, %r1171, 30;
	mov.b64 	%rd508, {%r1176, %r1175};
	xor.b64  	%rd509, %rd508, %rd507;
	shf.l.wrap.b32 	%r1177, %r1171, %r1172, 25;
	shf.l.wrap.b32 	%r1178, %r1172, %r1171, 25;
	mov.b64 	%rd510, {%r1178, %r1177};
	xor.b64  	%rd511, %rd509, %rd510;
	xor.b64  	%rd512, %rd494, %rd448;
	xor.b64  	%rd513, %rd494, %rd471;
	and.b64  	%rd514, %rd513, %rd512;
	xor.b64  	%rd515, %rd514, %rd494;
	add.s64 	%rd516, %rd505, %rd515;
	add.s64 	%rd517, %rd516, %rd511;
	add.s64 	%rd518, %rd23, %rd437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1179,%dummy}, %rd506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1180}, %rd506;
	}
	shf.r.wrap.b32 	%r1181, %r1180, %r1179, 14;
	shf.r.wrap.b32 	%r1182, %r1179, %r1180, 14;
	mov.b64 	%rd519, {%r1182, %r1181};
	shf.r.wrap.b32 	%r1183, %r1180, %r1179, 18;
	shf.r.wrap.b32 	%r1184, %r1179, %r1180, 18;
	mov.b64 	%rd520, {%r1184, %r1183};
	xor.b64  	%rd521, %rd520, %rd519;
	shf.l.wrap.b32 	%r1185, %r1179, %r1180, 23;
	shf.l.wrap.b32 	%r1186, %r1180, %r1179, 23;
	mov.b64 	%rd522, {%r1186, %r1185};
	xor.b64  	%rd523, %rd521, %rd522;
	xor.b64  	%rd524, %rd483, %rd460;
	and.b64  	%rd525, %rd506, %rd524;
	xor.b64  	%rd526, %rd525, %rd460;
	add.s64 	%rd527, %rd518, %rd526;
	add.s64 	%rd528, %rd527, %rd523;
	add.s64 	%rd529, %rd528, %rd448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1187,%dummy}, %rd517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1188}, %rd517;
	}
	shf.r.wrap.b32 	%r1189, %r1188, %r1187, 28;
	shf.r.wrap.b32 	%r1190, %r1187, %r1188, 28;
	mov.b64 	%rd530, {%r1190, %r1189};
	shf.l.wrap.b32 	%r1191, %r1187, %r1188, 30;
	shf.l.wrap.b32 	%r1192, %r1188, %r1187, 30;
	mov.b64 	%rd531, {%r1192, %r1191};
	xor.b64  	%rd532, %rd531, %rd530;
	shf.l.wrap.b32 	%r1193, %r1187, %r1188, 25;
	shf.l.wrap.b32 	%r1194, %r1188, %r1187, 25;
	mov.b64 	%rd533, {%r1194, %r1193};
	xor.b64  	%rd534, %rd532, %rd533;
	xor.b64  	%rd535, %rd517, %rd471;
	xor.b64  	%rd536, %rd517, %rd494;
	and.b64  	%rd537, %rd536, %rd535;
	xor.b64  	%rd538, %rd537, %rd517;
	add.s64 	%rd539, %rd528, %rd538;
	add.s64 	%rd540, %rd539, %rd534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1195,%dummy}, %rd529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1196}, %rd529;
	}
	shf.r.wrap.b32 	%r1197, %r1196, %r1195, 14;
	shf.r.wrap.b32 	%r1198, %r1195, %r1196, 14;
	mov.b64 	%rd541, {%r1198, %r1197};
	shf.r.wrap.b32 	%r1199, %r1196, %r1195, 18;
	shf.r.wrap.b32 	%r1200, %r1195, %r1196, 18;
	mov.b64 	%rd542, {%r1200, %r1199};
	xor.b64  	%rd543, %rd542, %rd541;
	shf.l.wrap.b32 	%r1201, %r1195, %r1196, 23;
	shf.l.wrap.b32 	%r1202, %r1196, %r1195, 23;
	mov.b64 	%rd544, {%r1202, %r1201};
	xor.b64  	%rd545, %rd543, %rd544;
	xor.b64  	%rd546, %rd506, %rd483;
	and.b64  	%rd547, %rd529, %rd546;
	xor.b64  	%rd548, %rd547, %rd483;
	add.s64 	%rd549, %rd460, %rd6;
	add.s64 	%rd550, %rd549, %rd24;
	add.s64 	%rd551, %rd550, %rd548;
	add.s64 	%rd552, %rd551, %rd545;
	add.s64 	%rd553, %rd552, %rd471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1203,%dummy}, %rd540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1204}, %rd540;
	}
	shf.r.wrap.b32 	%r1205, %r1204, %r1203, 28;
	shf.r.wrap.b32 	%r1206, %r1203, %r1204, 28;
	mov.b64 	%rd554, {%r1206, %r1205};
	shf.l.wrap.b32 	%r1207, %r1203, %r1204, 30;
	shf.l.wrap.b32 	%r1208, %r1204, %r1203, 30;
	mov.b64 	%rd555, {%r1208, %r1207};
	xor.b64  	%rd556, %rd555, %rd554;
	shf.l.wrap.b32 	%r1209, %r1203, %r1204, 25;
	shf.l.wrap.b32 	%r1210, %r1204, %r1203, 25;
	mov.b64 	%rd557, {%r1210, %r1209};
	xor.b64  	%rd558, %rd556, %rd557;
	xor.b64  	%rd559, %rd540, %rd494;
	xor.b64  	%rd560, %rd540, %rd517;
	and.b64  	%rd561, %rd560, %rd559;
	xor.b64  	%rd562, %rd561, %rd540;
	add.s64 	%rd563, %rd552, %rd562;
	add.s64 	%rd564, %rd563, %rd558;
	add.s64 	%rd565, %rd214, %rd26;
	add.s64 	%rd566, %rd565, %rd27;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1211,%dummy}, %rd566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1212}, %rd566;
	}
	shf.r.wrap.b32 	%r1213, %r1212, %r1211, 19;
	shf.r.wrap.b32 	%r1214, %r1211, %r1212, 19;
	mov.b64 	%rd567, {%r1214, %r1213};
	shf.l.wrap.b32 	%r1215, %r1211, %r1212, 3;
	shf.l.wrap.b32 	%r1216, %r1212, %r1211, 3;
	mov.b64 	%rd568, {%r1216, %r1215};
	shr.u64 	%rd569, %rd566, 6;
	xor.b64  	%rd570, %rd567, %rd569;
	xor.b64  	%rd571, %rd570, %rd568;
	add.s64 	%rd572, %rd2, %rd571;
	add.s64 	%rd573, %rd572, %rd29;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1218}, %rd573;
	}
	shf.r.wrap.b32 	%r1219, %r1218, %r1217, 19;
	shf.r.wrap.b32 	%r1220, %r1217, %r1218, 19;
	mov.b64 	%rd574, {%r1220, %r1219};
	shf.l.wrap.b32 	%r1221, %r1217, %r1218, 3;
	shf.l.wrap.b32 	%r1222, %r1218, %r1217, 3;
	mov.b64 	%rd575, {%r1222, %r1221};
	shr.u64 	%rd576, %rd573, 6;
	xor.b64  	%rd577, %rd574, %rd576;
	xor.b64  	%rd578, %rd577, %rd575;
	add.s64 	%rd579, %rd3, %rd578;
	add.s64 	%rd580, %rd579, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1223,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1224}, %rd580;
	}
	shf.r.wrap.b32 	%r1225, %r1224, %r1223, 19;
	shf.r.wrap.b32 	%r1226, %r1223, %r1224, 19;
	mov.b64 	%rd581, {%r1226, %r1225};
	shf.l.wrap.b32 	%r1227, %r1223, %r1224, 3;
	shf.l.wrap.b32 	%r1228, %r1224, %r1223, 3;
	mov.b64 	%rd582, {%r1228, %r1227};
	shr.u64 	%rd583, %rd580, 6;
	xor.b64  	%rd584, %rd581, %rd583;
	xor.b64  	%rd585, %rd584, %rd582;
	add.s64 	%rd586, %rd34, %rd585;
	add.s64 	%rd587, %rd586, %rd33;
	add.s64 	%rd588, %rd566, %rd35;
	add.s64 	%rd589, %rd588, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1230}, %rd587;
	}
	shf.r.wrap.b32 	%r1231, %r1230, %r1229, 19;
	shf.r.wrap.b32 	%r1232, %r1229, %r1230, 19;
	mov.b64 	%rd590, {%r1232, %r1231};
	shf.l.wrap.b32 	%r1233, %r1229, %r1230, 3;
	shf.l.wrap.b32 	%r1234, %r1230, %r1229, 3;
	mov.b64 	%rd591, {%r1234, %r1233};
	shr.u64 	%rd592, %rd587, 6;
	xor.b64  	%rd593, %rd590, %rd592;
	xor.b64  	%rd594, %rd593, %rd591;
	add.s64 	%rd595, %rd28, %rd594;
	add.s64 	%rd596, %rd595, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1235,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1236}, %rd589;
	}
	shf.r.wrap.b32 	%r1237, %r1236, %r1235, 19;
	shf.r.wrap.b32 	%r1238, %r1235, %r1236, 19;
	mov.b64 	%rd597, {%r1238, %r1237};
	shf.l.wrap.b32 	%r1239, %r1235, %r1236, 3;
	shf.l.wrap.b32 	%r1240, %r1236, %r1235, 3;
	mov.b64 	%rd598, {%r1240, %r1239};
	shr.u64 	%rd599, %rd589, 6;
	xor.b64  	%rd600, %rd597, %rd599;
	xor.b64  	%rd601, %rd600, %rd598;
	add.s64 	%rd602, %rd573, %rd601;
	add.s64 	%rd603, %rd602, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1241,%dummy}, %rd596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1242}, %rd596;
	}
	shf.r.wrap.b32 	%r1243, %r1242, %r1241, 19;
	shf.r.wrap.b32 	%r1244, %r1241, %r1242, 19;
	mov.b64 	%rd604, {%r1244, %r1243};
	shf.l.wrap.b32 	%r1245, %r1241, %r1242, 3;
	shf.l.wrap.b32 	%r1246, %r1242, %r1241, 3;
	mov.b64 	%rd605, {%r1246, %r1245};
	shr.u64 	%rd606, %rd596, 6;
	xor.b64  	%rd607, %rd604, %rd606;
	xor.b64  	%rd608, %rd607, %rd605;
	add.s64 	%rd609, %rd30, %rd608;
	add.s64 	%rd610, %rd609, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1247,%dummy}, %rd603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1248}, %rd603;
	}
	shf.r.wrap.b32 	%r1249, %r1248, %r1247, 19;
	shf.r.wrap.b32 	%r1250, %r1247, %r1248, 19;
	mov.b64 	%rd611, {%r1250, %r1249};
	shf.l.wrap.b32 	%r1251, %r1247, %r1248, 3;
	shf.l.wrap.b32 	%r1252, %r1248, %r1247, 3;
	mov.b64 	%rd612, {%r1252, %r1251};
	shr.u64 	%rd613, %rd603, 6;
	xor.b64  	%rd614, %rd611, %rd613;
	xor.b64  	%rd615, %rd614, %rd612;
	add.s64 	%rd616, %rd580, %rd615;
	add.s64 	%rd617, %rd616, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd610;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 19;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 19;
	mov.b64 	%rd618, {%r1256, %r1255};
	shf.l.wrap.b32 	%r1257, %r1253, %r1254, 3;
	shf.l.wrap.b32 	%r1258, %r1254, %r1253, 3;
	mov.b64 	%rd619, {%r1258, %r1257};
	shr.u64 	%rd620, %rd610, 6;
	xor.b64  	%rd621, %rd618, %rd620;
	xor.b64  	%rd622, %rd621, %rd619;
	add.s64 	%rd623, %rd32, %rd622;
	add.s64 	%rd624, %rd623, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1259,%dummy}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1260}, %rd617;
	}
	shf.r.wrap.b32 	%r1261, %r1260, %r1259, 19;
	shf.r.wrap.b32 	%r1262, %r1259, %r1260, 19;
	mov.b64 	%rd625, {%r1262, %r1261};
	shf.l.wrap.b32 	%r1263, %r1259, %r1260, 3;
	shf.l.wrap.b32 	%r1264, %r1260, %r1259, 3;
	mov.b64 	%rd626, {%r1264, %r1263};
	shr.u64 	%rd627, %rd617, 6;
	xor.b64  	%rd628, %rd625, %rd627;
	xor.b64  	%rd629, %rd628, %rd626;
	add.s64 	%rd630, %rd587, %rd629;
	add.s64 	%rd631, %rd630, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1265,%dummy}, %rd624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1266}, %rd624;
	}
	shf.r.wrap.b32 	%r1267, %r1266, %r1265, 19;
	shf.r.wrap.b32 	%r1268, %r1265, %r1266, 19;
	mov.b64 	%rd632, {%r1268, %r1267};
	shf.l.wrap.b32 	%r1269, %r1265, %r1266, 3;
	shf.l.wrap.b32 	%r1270, %r1266, %r1265, 3;
	mov.b64 	%rd633, {%r1270, %r1269};
	shr.u64 	%rd634, %rd624, 6;
	xor.b64  	%rd635, %rd632, %rd634;
	xor.b64  	%rd636, %rd635, %rd633;
	add.s64 	%rd637, %rd589, %rd636;
	add.s64 	%rd638, %rd637, %rd36;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1271,%dummy}, %rd631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1272}, %rd631;
	}
	shf.r.wrap.b32 	%r1273, %r1272, %r1271, 19;
	shf.r.wrap.b32 	%r1274, %r1271, %r1272, 19;
	mov.b64 	%rd639, {%r1274, %r1273};
	shf.l.wrap.b32 	%r1275, %r1271, %r1272, 3;
	shf.l.wrap.b32 	%r1276, %r1272, %r1271, 3;
	mov.b64 	%rd640, {%r1276, %r1275};
	shr.u64 	%rd641, %rd631, 6;
	xor.b64  	%rd642, %rd639, %rd641;
	xor.b64  	%rd643, %rd642, %rd640;
	shf.r.wrap.b32 	%r1277, %r1212, %r1211, 1;
	shf.r.wrap.b32 	%r1278, %r1211, %r1212, 1;
	mov.b64 	%rd644, {%r1278, %r1277};
	shf.r.wrap.b32 	%r1279, %r1212, %r1211, 8;
	shf.r.wrap.b32 	%r1280, %r1211, %r1212, 8;
	mov.b64 	%rd645, {%r1280, %r1279};
	shr.u64 	%rd646, %rd566, 7;
	xor.b64  	%rd647, %rd644, %rd646;
	xor.b64  	%rd648, %rd647, %rd645;
	add.s64 	%rd649, %rd596, %rd6;
	add.s64 	%rd650, %rd649, %rd643;
	add.s64 	%rd651, %rd650, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1281,%dummy}, %rd553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1282}, %rd553;
	}
	shf.r.wrap.b32 	%r1283, %r1282, %r1281, 14;
	shf.r.wrap.b32 	%r1284, %r1281, %r1282, 14;
	mov.b64 	%rd652, {%r1284, %r1283};
	shf.r.wrap.b32 	%r1285, %r1282, %r1281, 18;
	shf.r.wrap.b32 	%r1286, %r1281, %r1282, 18;
	mov.b64 	%rd653, {%r1286, %r1285};
	xor.b64  	%rd654, %rd653, %rd652;
	shf.l.wrap.b32 	%r1287, %r1281, %r1282, 23;
	shf.l.wrap.b32 	%r1288, %r1282, %r1281, 23;
	mov.b64 	%rd655, {%r1288, %r1287};
	xor.b64  	%rd656, %rd654, %rd655;
	xor.b64  	%rd657, %rd506, %rd529;
	and.b64  	%rd658, %rd657, %rd553;
	xor.b64  	%rd659, %rd658, %rd506;
	add.s64 	%rd660, %rd659, %rd483;
	add.s64 	%rd661, %rd660, %rd566;
	add.s64 	%rd662, %rd661, %rd37;
	add.s64 	%rd663, %rd662, %rd656;
	add.s64 	%rd664, %rd663, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1289,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1290}, %rd564;
	}
	shf.r.wrap.b32 	%r1291, %r1290, %r1289, 28;
	shf.r.wrap.b32 	%r1292, %r1289, %r1290, 28;
	mov.b64 	%rd665, {%r1292, %r1291};
	shf.l.wrap.b32 	%r1293, %r1289, %r1290, 30;
	shf.l.wrap.b32 	%r1294, %r1290, %r1289, 30;
	mov.b64 	%rd666, {%r1294, %r1293};
	xor.b64  	%rd667, %rd666, %rd665;
	shf.l.wrap.b32 	%r1295, %r1289, %r1290, 25;
	shf.l.wrap.b32 	%r1296, %r1290, %r1289, 25;
	mov.b64 	%rd668, {%r1296, %r1295};
	xor.b64  	%rd669, %rd667, %rd668;
	xor.b64  	%rd670, %rd564, %rd517;
	xor.b64  	%rd671, %rd564, %rd540;
	and.b64  	%rd672, %rd671, %rd670;
	xor.b64  	%rd673, %rd672, %rd564;
	add.s64 	%rd674, %rd663, %rd673;
	add.s64 	%rd675, %rd674, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1297,%dummy}, %rd664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1298}, %rd664;
	}
	shf.r.wrap.b32 	%r1299, %r1298, %r1297, 14;
	shf.r.wrap.b32 	%r1300, %r1297, %r1298, 14;
	mov.b64 	%rd676, {%r1300, %r1299};
	shf.r.wrap.b32 	%r1301, %r1298, %r1297, 18;
	shf.r.wrap.b32 	%r1302, %r1297, %r1298, 18;
	mov.b64 	%rd677, {%r1302, %r1301};
	xor.b64  	%rd678, %rd677, %rd676;
	shf.l.wrap.b32 	%r1303, %r1297, %r1298, 23;
	shf.l.wrap.b32 	%r1304, %r1298, %r1297, 23;
	mov.b64 	%rd679, {%r1304, %r1303};
	xor.b64  	%rd680, %rd678, %rd679;
	xor.b64  	%rd681, %rd529, %rd553;
	and.b64  	%rd682, %rd664, %rd681;
	xor.b64  	%rd683, %rd682, %rd529;
	add.s64 	%rd684, %rd28, %rd506;
	add.s64 	%rd685, %rd684, %rd38;
	add.s64 	%rd686, %rd685, %rd683;
	add.s64 	%rd687, %rd686, %rd680;
	add.s64 	%rd688, %rd687, %rd517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1305,%dummy}, %rd675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1306}, %rd675;
	}
	shf.r.wrap.b32 	%r1307, %r1306, %r1305, 28;
	shf.r.wrap.b32 	%r1308, %r1305, %r1306, 28;
	mov.b64 	%rd689, {%r1308, %r1307};
	shf.l.wrap.b32 	%r1309, %r1305, %r1306, 30;
	shf.l.wrap.b32 	%r1310, %r1306, %r1305, 30;
	mov.b64 	%rd690, {%r1310, %r1309};
	xor.b64  	%rd691, %rd690, %rd689;
	shf.l.wrap.b32 	%r1311, %r1305, %r1306, 25;
	shf.l.wrap.b32 	%r1312, %r1306, %r1305, 25;
	mov.b64 	%rd692, {%r1312, %r1311};
	xor.b64  	%rd693, %rd691, %rd692;
	xor.b64  	%rd694, %rd675, %rd540;
	xor.b64  	%rd695, %rd675, %rd564;
	and.b64  	%rd696, %rd695, %rd694;
	xor.b64  	%rd697, %rd696, %rd675;
	add.s64 	%rd698, %rd687, %rd697;
	add.s64 	%rd699, %rd698, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1313,%dummy}, %rd688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1314}, %rd688;
	}
	shf.r.wrap.b32 	%r1315, %r1314, %r1313, 14;
	shf.r.wrap.b32 	%r1316, %r1313, %r1314, 14;
	mov.b64 	%rd700, {%r1316, %r1315};
	shf.r.wrap.b32 	%r1317, %r1314, %r1313, 18;
	shf.r.wrap.b32 	%r1318, %r1313, %r1314, 18;
	mov.b64 	%rd701, {%r1318, %r1317};
	xor.b64  	%rd702, %rd701, %rd700;
	shf.l.wrap.b32 	%r1319, %r1313, %r1314, 23;
	shf.l.wrap.b32 	%r1320, %r1314, %r1313, 23;
	mov.b64 	%rd703, {%r1320, %r1319};
	xor.b64  	%rd704, %rd702, %rd703;
	xor.b64  	%rd705, %rd664, %rd553;
	and.b64  	%rd706, %rd688, %rd705;
	xor.b64  	%rd707, %rd706, %rd553;
	add.s64 	%rd708, %rd573, %rd529;
	add.s64 	%rd709, %rd708, %rd39;
	add.s64 	%rd710, %rd709, %rd707;
	add.s64 	%rd711, %rd710, %rd704;
	add.s64 	%rd712, %rd711, %rd540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1321,%dummy}, %rd699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1322}, %rd699;
	}
	shf.r.wrap.b32 	%r1323, %r1322, %r1321, 28;
	shf.r.wrap.b32 	%r1324, %r1321, %r1322, 28;
	mov.b64 	%rd713, {%r1324, %r1323};
	shf.l.wrap.b32 	%r1325, %r1321, %r1322, 30;
	shf.l.wrap.b32 	%r1326, %r1322, %r1321, 30;
	mov.b64 	%rd714, {%r1326, %r1325};
	xor.b64  	%rd715, %rd714, %rd713;
	shf.l.wrap.b32 	%r1327, %r1321, %r1322, 25;
	shf.l.wrap.b32 	%r1328, %r1322, %r1321, 25;
	mov.b64 	%rd716, {%r1328, %r1327};
	xor.b64  	%rd717, %rd715, %rd716;
	xor.b64  	%rd718, %rd699, %rd564;
	xor.b64  	%rd719, %rd699, %rd675;
	and.b64  	%rd720, %rd719, %rd718;
	xor.b64  	%rd721, %rd720, %rd699;
	add.s64 	%rd722, %rd711, %rd721;
	add.s64 	%rd723, %rd722, %rd717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd712;
	}
	shf.r.wrap.b32 	%r1331, %r1330, %r1329, 14;
	shf.r.wrap.b32 	%r1332, %r1329, %r1330, 14;
	mov.b64 	%rd724, {%r1332, %r1331};
	shf.r.wrap.b32 	%r1333, %r1330, %r1329, 18;
	shf.r.wrap.b32 	%r1334, %r1329, %r1330, 18;
	mov.b64 	%rd725, {%r1334, %r1333};
	xor.b64  	%rd726, %rd725, %rd724;
	shf.l.wrap.b32 	%r1335, %r1329, %r1330, 23;
	shf.l.wrap.b32 	%r1336, %r1330, %r1329, 23;
	mov.b64 	%rd727, {%r1336, %r1335};
	xor.b64  	%rd728, %rd726, %rd727;
	xor.b64  	%rd729, %rd688, %rd664;
	and.b64  	%rd730, %rd712, %rd729;
	xor.b64  	%rd731, %rd730, %rd664;
	add.s64 	%rd732, %rd30, %rd553;
	add.s64 	%rd733, %rd732, %rd40;
	add.s64 	%rd734, %rd733, %rd731;
	add.s64 	%rd735, %rd734, %rd728;
	add.s64 	%rd736, %rd735, %rd564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1337,%dummy}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1338}, %rd723;
	}
	shf.r.wrap.b32 	%r1339, %r1338, %r1337, 28;
	shf.r.wrap.b32 	%r1340, %r1337, %r1338, 28;
	mov.b64 	%rd737, {%r1340, %r1339};
	shf.l.wrap.b32 	%r1341, %r1337, %r1338, 30;
	shf.l.wrap.b32 	%r1342, %r1338, %r1337, 30;
	mov.b64 	%rd738, {%r1342, %r1341};
	xor.b64  	%rd739, %rd738, %rd737;
	shf.l.wrap.b32 	%r1343, %r1337, %r1338, 25;
	shf.l.wrap.b32 	%r1344, %r1338, %r1337, 25;
	mov.b64 	%rd740, {%r1344, %r1343};
	xor.b64  	%rd741, %rd739, %rd740;
	xor.b64  	%rd742, %rd723, %rd675;
	xor.b64  	%rd743, %rd723, %rd699;
	and.b64  	%rd744, %rd743, %rd742;
	xor.b64  	%rd745, %rd744, %rd723;
	add.s64 	%rd746, %rd735, %rd745;
	add.s64 	%rd747, %rd746, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1345,%dummy}, %rd736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1346}, %rd736;
	}
	shf.r.wrap.b32 	%r1347, %r1346, %r1345, 14;
	shf.r.wrap.b32 	%r1348, %r1345, %r1346, 14;
	mov.b64 	%rd748, {%r1348, %r1347};
	shf.r.wrap.b32 	%r1349, %r1346, %r1345, 18;
	shf.r.wrap.b32 	%r1350, %r1345, %r1346, 18;
	mov.b64 	%rd749, {%r1350, %r1349};
	xor.b64  	%rd750, %rd749, %rd748;
	shf.l.wrap.b32 	%r1351, %r1345, %r1346, 23;
	shf.l.wrap.b32 	%r1352, %r1346, %r1345, 23;
	mov.b64 	%rd751, {%r1352, %r1351};
	xor.b64  	%rd752, %rd750, %rd751;
	xor.b64  	%rd753, %rd712, %rd688;
	and.b64  	%rd754, %rd736, %rd753;
	xor.b64  	%rd755, %rd754, %rd688;
	add.s64 	%rd756, %rd664, %rd580;
	add.s64 	%rd757, %rd756, %rd41;
	add.s64 	%rd758, %rd757, %rd755;
	add.s64 	%rd759, %rd758, %rd752;
	add.s64 	%rd760, %rd759, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1353,%dummy}, %rd747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1354}, %rd747;
	}
	shf.r.wrap.b32 	%r1355, %r1354, %r1353, 28;
	shf.r.wrap.b32 	%r1356, %r1353, %r1354, 28;
	mov.b64 	%rd761, {%r1356, %r1355};
	shf.l.wrap.b32 	%r1357, %r1353, %r1354, 30;
	shf.l.wrap.b32 	%r1358, %r1354, %r1353, 30;
	mov.b64 	%rd762, {%r1358, %r1357};
	xor.b64  	%rd763, %rd762, %rd761;
	shf.l.wrap.b32 	%r1359, %r1353, %r1354, 25;
	shf.l.wrap.b32 	%r1360, %r1354, %r1353, 25;
	mov.b64 	%rd764, {%r1360, %r1359};
	xor.b64  	%rd765, %rd763, %rd764;
	xor.b64  	%rd766, %rd747, %rd699;
	xor.b64  	%rd767, %rd747, %rd723;
	and.b64  	%rd768, %rd767, %rd766;
	xor.b64  	%rd769, %rd768, %rd747;
	add.s64 	%rd770, %rd759, %rd769;
	add.s64 	%rd771, %rd770, %rd765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1361,%dummy}, %rd760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1362}, %rd760;
	}
	shf.r.wrap.b32 	%r1363, %r1362, %r1361, 14;
	shf.r.wrap.b32 	%r1364, %r1361, %r1362, 14;
	mov.b64 	%rd772, {%r1364, %r1363};
	shf.r.wrap.b32 	%r1365, %r1362, %r1361, 18;
	shf.r.wrap.b32 	%r1366, %r1361, %r1362, 18;
	mov.b64 	%rd773, {%r1366, %r1365};
	xor.b64  	%rd774, %rd773, %rd772;
	shf.l.wrap.b32 	%r1367, %r1361, %r1362, 23;
	shf.l.wrap.b32 	%r1368, %r1362, %r1361, 23;
	mov.b64 	%rd775, {%r1368, %r1367};
	xor.b64  	%rd776, %rd774, %rd775;
	xor.b64  	%rd777, %rd736, %rd712;
	and.b64  	%rd778, %rd760, %rd777;
	xor.b64  	%rd779, %rd778, %rd712;
	add.s64 	%rd780, %rd688, %rd32;
	add.s64 	%rd781, %rd780, %rd42;
	add.s64 	%rd782, %rd781, %rd779;
	add.s64 	%rd783, %rd782, %rd776;
	add.s64 	%rd784, %rd783, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1369,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1370}, %rd771;
	}
	shf.r.wrap.b32 	%r1371, %r1370, %r1369, 28;
	shf.r.wrap.b32 	%r1372, %r1369, %r1370, 28;
	mov.b64 	%rd785, {%r1372, %r1371};
	shf.l.wrap.b32 	%r1373, %r1369, %r1370, 30;
	shf.l.wrap.b32 	%r1374, %r1370, %r1369, 30;
	mov.b64 	%rd786, {%r1374, %r1373};
	xor.b64  	%rd787, %rd786, %rd785;
	shf.l.wrap.b32 	%r1375, %r1369, %r1370, 25;
	shf.l.wrap.b32 	%r1376, %r1370, %r1369, 25;
	mov.b64 	%rd788, {%r1376, %r1375};
	xor.b64  	%rd789, %rd787, %rd788;
	xor.b64  	%rd790, %rd771, %rd723;
	xor.b64  	%rd791, %rd771, %rd747;
	and.b64  	%rd792, %rd791, %rd790;
	xor.b64  	%rd793, %rd792, %rd771;
	add.s64 	%rd794, %rd783, %rd793;
	add.s64 	%rd795, %rd794, %rd789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1377,%dummy}, %rd784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1378}, %rd784;
	}
	shf.r.wrap.b32 	%r1379, %r1378, %r1377, 14;
	shf.r.wrap.b32 	%r1380, %r1377, %r1378, 14;
	mov.b64 	%rd796, {%r1380, %r1379};
	shf.r.wrap.b32 	%r1381, %r1378, %r1377, 18;
	shf.r.wrap.b32 	%r1382, %r1377, %r1378, 18;
	mov.b64 	%rd797, {%r1382, %r1381};
	xor.b64  	%rd798, %rd797, %rd796;
	shf.l.wrap.b32 	%r1383, %r1377, %r1378, 23;
	shf.l.wrap.b32 	%r1384, %r1378, %r1377, 23;
	mov.b64 	%rd799, {%r1384, %r1383};
	xor.b64  	%rd800, %rd798, %rd799;
	xor.b64  	%rd801, %rd760, %rd736;
	and.b64  	%rd802, %rd784, %rd801;
	xor.b64  	%rd803, %rd802, %rd736;
	add.s64 	%rd804, %rd712, %rd587;
	add.s64 	%rd805, %rd804, %rd43;
	add.s64 	%rd806, %rd805, %rd803;
	add.s64 	%rd807, %rd806, %rd800;
	add.s64 	%rd808, %rd807, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1385,%dummy}, %rd795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1386}, %rd795;
	}
	shf.r.wrap.b32 	%r1387, %r1386, %r1385, 28;
	shf.r.wrap.b32 	%r1388, %r1385, %r1386, 28;
	mov.b64 	%rd809, {%r1388, %r1387};
	shf.l.wrap.b32 	%r1389, %r1385, %r1386, 30;
	shf.l.wrap.b32 	%r1390, %r1386, %r1385, 30;
	mov.b64 	%rd810, {%r1390, %r1389};
	xor.b64  	%rd811, %rd810, %rd809;
	shf.l.wrap.b32 	%r1391, %r1385, %r1386, 25;
	shf.l.wrap.b32 	%r1392, %r1386, %r1385, 25;
	mov.b64 	%rd812, {%r1392, %r1391};
	xor.b64  	%rd813, %rd811, %rd812;
	xor.b64  	%rd814, %rd795, %rd747;
	xor.b64  	%rd815, %rd795, %rd771;
	and.b64  	%rd816, %rd815, %rd814;
	xor.b64  	%rd817, %rd816, %rd795;
	add.s64 	%rd818, %rd807, %rd817;
	add.s64 	%rd819, %rd818, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1393,%dummy}, %rd808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1394}, %rd808;
	}
	shf.r.wrap.b32 	%r1395, %r1394, %r1393, 14;
	shf.r.wrap.b32 	%r1396, %r1393, %r1394, 14;
	mov.b64 	%rd820, {%r1396, %r1395};
	shf.r.wrap.b32 	%r1397, %r1394, %r1393, 18;
	shf.r.wrap.b32 	%r1398, %r1393, %r1394, 18;
	mov.b64 	%rd821, {%r1398, %r1397};
	xor.b64  	%rd822, %rd821, %rd820;
	shf.l.wrap.b32 	%r1399, %r1393, %r1394, 23;
	shf.l.wrap.b32 	%r1400, %r1394, %r1393, 23;
	mov.b64 	%rd823, {%r1400, %r1399};
	xor.b64  	%rd824, %rd822, %rd823;
	xor.b64  	%rd825, %rd784, %rd760;
	and.b64  	%rd826, %rd808, %rd825;
	xor.b64  	%rd827, %rd826, %rd760;
	add.s64 	%rd828, %rd736, %rd589;
	add.s64 	%rd829, %rd828, %rd44;
	add.s64 	%rd830, %rd829, %rd827;
	add.s64 	%rd831, %rd830, %rd824;
	add.s64 	%rd832, %rd831, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1401,%dummy}, %rd819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1402}, %rd819;
	}
	shf.r.wrap.b32 	%r1403, %r1402, %r1401, 28;
	shf.r.wrap.b32 	%r1404, %r1401, %r1402, 28;
	mov.b64 	%rd833, {%r1404, %r1403};
	shf.l.wrap.b32 	%r1405, %r1401, %r1402, 30;
	shf.l.wrap.b32 	%r1406, %r1402, %r1401, 30;
	mov.b64 	%rd834, {%r1406, %r1405};
	xor.b64  	%rd835, %rd834, %rd833;
	shf.l.wrap.b32 	%r1407, %r1401, %r1402, 25;
	shf.l.wrap.b32 	%r1408, %r1402, %r1401, 25;
	mov.b64 	%rd836, {%r1408, %r1407};
	xor.b64  	%rd837, %rd835, %rd836;
	xor.b64  	%rd838, %rd819, %rd771;
	xor.b64  	%rd839, %rd819, %rd795;
	and.b64  	%rd840, %rd839, %rd838;
	xor.b64  	%rd841, %rd840, %rd819;
	add.s64 	%rd842, %rd831, %rd841;
	add.s64 	%rd843, %rd842, %rd837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1409,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1410}, %rd832;
	}
	shf.r.wrap.b32 	%r1411, %r1410, %r1409, 14;
	shf.r.wrap.b32 	%r1412, %r1409, %r1410, 14;
	mov.b64 	%rd844, {%r1412, %r1411};
	shf.r.wrap.b32 	%r1413, %r1410, %r1409, 18;
	shf.r.wrap.b32 	%r1414, %r1409, %r1410, 18;
	mov.b64 	%rd845, {%r1414, %r1413};
	xor.b64  	%rd846, %rd845, %rd844;
	shf.l.wrap.b32 	%r1415, %r1409, %r1410, 23;
	shf.l.wrap.b32 	%r1416, %r1410, %r1409, 23;
	mov.b64 	%rd847, {%r1416, %r1415};
	xor.b64  	%rd848, %rd846, %rd847;
	xor.b64  	%rd849, %rd808, %rd784;
	and.b64  	%rd850, %rd832, %rd849;
	xor.b64  	%rd851, %rd850, %rd784;
	add.s64 	%rd852, %rd760, %rd596;
	add.s64 	%rd853, %rd852, %rd45;
	add.s64 	%rd854, %rd853, %rd851;
	add.s64 	%rd855, %rd854, %rd848;
	add.s64 	%rd856, %rd855, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1417,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1418}, %rd843;
	}
	shf.r.wrap.b32 	%r1419, %r1418, %r1417, 28;
	shf.r.wrap.b32 	%r1420, %r1417, %r1418, 28;
	mov.b64 	%rd857, {%r1420, %r1419};
	shf.l.wrap.b32 	%r1421, %r1417, %r1418, 30;
	shf.l.wrap.b32 	%r1422, %r1418, %r1417, 30;
	mov.b64 	%rd858, {%r1422, %r1421};
	xor.b64  	%rd859, %rd858, %rd857;
	shf.l.wrap.b32 	%r1423, %r1417, %r1418, 25;
	shf.l.wrap.b32 	%r1424, %r1418, %r1417, 25;
	mov.b64 	%rd860, {%r1424, %r1423};
	xor.b64  	%rd861, %rd859, %rd860;
	xor.b64  	%rd862, %rd843, %rd795;
	xor.b64  	%rd863, %rd843, %rd819;
	and.b64  	%rd864, %rd863, %rd862;
	xor.b64  	%rd865, %rd864, %rd843;
	add.s64 	%rd866, %rd855, %rd865;
	add.s64 	%rd867, %rd866, %rd861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1425,%dummy}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1426}, %rd856;
	}
	shf.r.wrap.b32 	%r1427, %r1426, %r1425, 14;
	shf.r.wrap.b32 	%r1428, %r1425, %r1426, 14;
	mov.b64 	%rd868, {%r1428, %r1427};
	shf.r.wrap.b32 	%r1429, %r1426, %r1425, 18;
	shf.r.wrap.b32 	%r1430, %r1425, %r1426, 18;
	mov.b64 	%rd869, {%r1430, %r1429};
	xor.b64  	%rd870, %rd869, %rd868;
	shf.l.wrap.b32 	%r1431, %r1425, %r1426, 23;
	shf.l.wrap.b32 	%r1432, %r1426, %r1425, 23;
	mov.b64 	%rd871, {%r1432, %r1431};
	xor.b64  	%rd872, %rd870, %rd871;
	xor.b64  	%rd873, %rd832, %rd808;
	and.b64  	%rd874, %rd856, %rd873;
	xor.b64  	%rd875, %rd874, %rd808;
	add.s64 	%rd876, %rd784, %rd603;
	add.s64 	%rd877, %rd876, %rd46;
	add.s64 	%rd878, %rd877, %rd875;
	add.s64 	%rd879, %rd878, %rd872;
	add.s64 	%rd880, %rd879, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd867;
	}
	shf.r.wrap.b32 	%r1435, %r1434, %r1433, 28;
	shf.r.wrap.b32 	%r1436, %r1433, %r1434, 28;
	mov.b64 	%rd881, {%r1436, %r1435};
	shf.l.wrap.b32 	%r1437, %r1433, %r1434, 30;
	shf.l.wrap.b32 	%r1438, %r1434, %r1433, 30;
	mov.b64 	%rd882, {%r1438, %r1437};
	xor.b64  	%rd883, %rd882, %rd881;
	shf.l.wrap.b32 	%r1439, %r1433, %r1434, 25;
	shf.l.wrap.b32 	%r1440, %r1434, %r1433, 25;
	mov.b64 	%rd884, {%r1440, %r1439};
	xor.b64  	%rd885, %rd883, %rd884;
	xor.b64  	%rd886, %rd867, %rd819;
	xor.b64  	%rd887, %rd867, %rd843;
	and.b64  	%rd888, %rd887, %rd886;
	xor.b64  	%rd889, %rd888, %rd867;
	add.s64 	%rd890, %rd879, %rd889;
	add.s64 	%rd891, %rd890, %rd885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1441,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1442}, %rd880;
	}
	shf.r.wrap.b32 	%r1443, %r1442, %r1441, 14;
	shf.r.wrap.b32 	%r1444, %r1441, %r1442, 14;
	mov.b64 	%rd892, {%r1444, %r1443};
	shf.r.wrap.b32 	%r1445, %r1442, %r1441, 18;
	shf.r.wrap.b32 	%r1446, %r1441, %r1442, 18;
	mov.b64 	%rd893, {%r1446, %r1445};
	xor.b64  	%rd894, %rd893, %rd892;
	shf.l.wrap.b32 	%r1447, %r1441, %r1442, 23;
	shf.l.wrap.b32 	%r1448, %r1442, %r1441, 23;
	mov.b64 	%rd895, {%r1448, %r1447};
	xor.b64  	%rd896, %rd894, %rd895;
	xor.b64  	%rd897, %rd856, %rd832;
	and.b64  	%rd898, %rd880, %rd897;
	xor.b64  	%rd899, %rd898, %rd832;
	add.s64 	%rd900, %rd808, %rd610;
	add.s64 	%rd901, %rd900, %rd47;
	add.s64 	%rd902, %rd901, %rd899;
	add.s64 	%rd903, %rd902, %rd896;
	add.s64 	%rd904, %rd903, %rd819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1449,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1450}, %rd891;
	}
	shf.r.wrap.b32 	%r1451, %r1450, %r1449, 28;
	shf.r.wrap.b32 	%r1452, %r1449, %r1450, 28;
	mov.b64 	%rd905, {%r1452, %r1451};
	shf.l.wrap.b32 	%r1453, %r1449, %r1450, 30;
	shf.l.wrap.b32 	%r1454, %r1450, %r1449, 30;
	mov.b64 	%rd906, {%r1454, %r1453};
	xor.b64  	%rd907, %rd906, %rd905;
	shf.l.wrap.b32 	%r1455, %r1449, %r1450, 25;
	shf.l.wrap.b32 	%r1456, %r1450, %r1449, 25;
	mov.b64 	%rd908, {%r1456, %r1455};
	xor.b64  	%rd909, %rd907, %rd908;
	xor.b64  	%rd910, %rd891, %rd843;
	xor.b64  	%rd911, %rd891, %rd867;
	and.b64  	%rd912, %rd911, %rd910;
	xor.b64  	%rd913, %rd912, %rd891;
	add.s64 	%rd914, %rd903, %rd913;
	add.s64 	%rd915, %rd914, %rd909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1457,%dummy}, %rd904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1458}, %rd904;
	}
	shf.r.wrap.b32 	%r1459, %r1458, %r1457, 14;
	shf.r.wrap.b32 	%r1460, %r1457, %r1458, 14;
	mov.b64 	%rd916, {%r1460, %r1459};
	shf.r.wrap.b32 	%r1461, %r1458, %r1457, 18;
	shf.r.wrap.b32 	%r1462, %r1457, %r1458, 18;
	mov.b64 	%rd917, {%r1462, %r1461};
	xor.b64  	%rd918, %rd917, %rd916;
	shf.l.wrap.b32 	%r1463, %r1457, %r1458, 23;
	shf.l.wrap.b32 	%r1464, %r1458, %r1457, 23;
	mov.b64 	%rd919, {%r1464, %r1463};
	xor.b64  	%rd920, %rd918, %rd919;
	xor.b64  	%rd921, %rd880, %rd856;
	and.b64  	%rd922, %rd904, %rd921;
	xor.b64  	%rd923, %rd922, %rd856;
	add.s64 	%rd924, %rd832, %rd617;
	add.s64 	%rd925, %rd924, %rd48;
	add.s64 	%rd926, %rd925, %rd923;
	add.s64 	%rd927, %rd926, %rd920;
	add.s64 	%rd928, %rd927, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1465,%dummy}, %rd915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1466}, %rd915;
	}
	shf.r.wrap.b32 	%r1467, %r1466, %r1465, 28;
	shf.r.wrap.b32 	%r1468, %r1465, %r1466, 28;
	mov.b64 	%rd929, {%r1468, %r1467};
	shf.l.wrap.b32 	%r1469, %r1465, %r1466, 30;
	shf.l.wrap.b32 	%r1470, %r1466, %r1465, 30;
	mov.b64 	%rd930, {%r1470, %r1469};
	xor.b64  	%rd931, %rd930, %rd929;
	shf.l.wrap.b32 	%r1471, %r1465, %r1466, 25;
	shf.l.wrap.b32 	%r1472, %r1466, %r1465, 25;
	mov.b64 	%rd932, {%r1472, %r1471};
	xor.b64  	%rd933, %rd931, %rd932;
	xor.b64  	%rd934, %rd915, %rd867;
	xor.b64  	%rd935, %rd915, %rd891;
	and.b64  	%rd936, %rd935, %rd934;
	xor.b64  	%rd937, %rd936, %rd915;
	add.s64 	%rd938, %rd927, %rd937;
	add.s64 	%rd939, %rd938, %rd933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1473,%dummy}, %rd928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1474}, %rd928;
	}
	shf.r.wrap.b32 	%r1475, %r1474, %r1473, 14;
	shf.r.wrap.b32 	%r1476, %r1473, %r1474, 14;
	mov.b64 	%rd940, {%r1476, %r1475};
	shf.r.wrap.b32 	%r1477, %r1474, %r1473, 18;
	shf.r.wrap.b32 	%r1478, %r1473, %r1474, 18;
	mov.b64 	%rd941, {%r1478, %r1477};
	xor.b64  	%rd942, %rd941, %rd940;
	shf.l.wrap.b32 	%r1479, %r1473, %r1474, 23;
	shf.l.wrap.b32 	%r1480, %r1474, %r1473, 23;
	mov.b64 	%rd943, {%r1480, %r1479};
	xor.b64  	%rd944, %rd942, %rd943;
	xor.b64  	%rd945, %rd904, %rd880;
	and.b64  	%rd946, %rd928, %rd945;
	xor.b64  	%rd947, %rd946, %rd880;
	add.s64 	%rd948, %rd856, %rd624;
	add.s64 	%rd949, %rd948, %rd49;
	add.s64 	%rd950, %rd949, %rd947;
	add.s64 	%rd951, %rd950, %rd944;
	add.s64 	%rd952, %rd951, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1481,%dummy}, %rd939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1482}, %rd939;
	}
	shf.r.wrap.b32 	%r1483, %r1482, %r1481, 28;
	shf.r.wrap.b32 	%r1484, %r1481, %r1482, 28;
	mov.b64 	%rd953, {%r1484, %r1483};
	shf.l.wrap.b32 	%r1485, %r1481, %r1482, 30;
	shf.l.wrap.b32 	%r1486, %r1482, %r1481, 30;
	mov.b64 	%rd954, {%r1486, %r1485};
	xor.b64  	%rd955, %rd954, %rd953;
	shf.l.wrap.b32 	%r1487, %r1481, %r1482, 25;
	shf.l.wrap.b32 	%r1488, %r1482, %r1481, 25;
	mov.b64 	%rd956, {%r1488, %r1487};
	xor.b64  	%rd957, %rd955, %rd956;
	xor.b64  	%rd958, %rd939, %rd891;
	xor.b64  	%rd959, %rd939, %rd915;
	and.b64  	%rd960, %rd959, %rd958;
	xor.b64  	%rd961, %rd960, %rd939;
	add.s64 	%rd962, %rd951, %rd961;
	add.s64 	%rd963, %rd962, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1489,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1490}, %rd952;
	}
	shf.r.wrap.b32 	%r1491, %r1490, %r1489, 14;
	shf.r.wrap.b32 	%r1492, %r1489, %r1490, 14;
	mov.b64 	%rd964, {%r1492, %r1491};
	shf.r.wrap.b32 	%r1493, %r1490, %r1489, 18;
	shf.r.wrap.b32 	%r1494, %r1489, %r1490, 18;
	mov.b64 	%rd965, {%r1494, %r1493};
	xor.b64  	%rd966, %rd965, %rd964;
	shf.l.wrap.b32 	%r1495, %r1489, %r1490, 23;
	shf.l.wrap.b32 	%r1496, %r1490, %r1489, 23;
	mov.b64 	%rd967, {%r1496, %r1495};
	xor.b64  	%rd968, %rd966, %rd967;
	xor.b64  	%rd969, %rd928, %rd904;
	and.b64  	%rd970, %rd952, %rd969;
	xor.b64  	%rd971, %rd970, %rd904;
	add.s64 	%rd972, %rd880, %rd631;
	add.s64 	%rd973, %rd972, %rd50;
	add.s64 	%rd974, %rd973, %rd971;
	add.s64 	%rd975, %rd974, %rd968;
	add.s64 	%rd976, %rd975, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1497,%dummy}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1498}, %rd963;
	}
	shf.r.wrap.b32 	%r1499, %r1498, %r1497, 28;
	shf.r.wrap.b32 	%r1500, %r1497, %r1498, 28;
	mov.b64 	%rd977, {%r1500, %r1499};
	shf.l.wrap.b32 	%r1501, %r1497, %r1498, 30;
	shf.l.wrap.b32 	%r1502, %r1498, %r1497, 30;
	mov.b64 	%rd978, {%r1502, %r1501};
	xor.b64  	%rd979, %rd978, %rd977;
	shf.l.wrap.b32 	%r1503, %r1497, %r1498, 25;
	shf.l.wrap.b32 	%r1504, %r1498, %r1497, 25;
	mov.b64 	%rd980, {%r1504, %r1503};
	xor.b64  	%rd981, %rd979, %rd980;
	xor.b64  	%rd982, %rd963, %rd915;
	xor.b64  	%rd983, %rd963, %rd939;
	and.b64  	%rd984, %rd983, %rd982;
	xor.b64  	%rd985, %rd984, %rd963;
	add.s64 	%rd986, %rd975, %rd985;
	add.s64 	%rd987, %rd986, %rd981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1505,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1506}, %rd976;
	}
	shf.r.wrap.b32 	%r1507, %r1506, %r1505, 14;
	shf.r.wrap.b32 	%r1508, %r1505, %r1506, 14;
	mov.b64 	%rd988, {%r1508, %r1507};
	shf.r.wrap.b32 	%r1509, %r1506, %r1505, 18;
	shf.r.wrap.b32 	%r1510, %r1505, %r1506, 18;
	mov.b64 	%rd989, {%r1510, %r1509};
	xor.b64  	%rd990, %rd989, %rd988;
	shf.l.wrap.b32 	%r1511, %r1505, %r1506, 23;
	shf.l.wrap.b32 	%r1512, %r1506, %r1505, 23;
	mov.b64 	%rd991, {%r1512, %r1511};
	xor.b64  	%rd992, %rd990, %rd991;
	xor.b64  	%rd993, %rd952, %rd928;
	and.b64  	%rd994, %rd976, %rd993;
	xor.b64  	%rd995, %rd994, %rd928;
	add.s64 	%rd996, %rd904, %rd638;
	add.s64 	%rd997, %rd996, %rd51;
	add.s64 	%rd998, %rd997, %rd995;
	add.s64 	%rd999, %rd998, %rd992;
	add.s64 	%rd1000, %rd999, %rd915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1513,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1514}, %rd987;
	}
	shf.r.wrap.b32 	%r1515, %r1514, %r1513, 28;
	shf.r.wrap.b32 	%r1516, %r1513, %r1514, 28;
	mov.b64 	%rd1001, {%r1516, %r1515};
	shf.l.wrap.b32 	%r1517, %r1513, %r1514, 30;
	shf.l.wrap.b32 	%r1518, %r1514, %r1513, 30;
	mov.b64 	%rd1002, {%r1518, %r1517};
	xor.b64  	%rd1003, %rd1002, %rd1001;
	shf.l.wrap.b32 	%r1519, %r1513, %r1514, 25;
	shf.l.wrap.b32 	%r1520, %r1514, %r1513, 25;
	mov.b64 	%rd1004, {%r1520, %r1519};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	xor.b64  	%rd1006, %rd987, %rd939;
	xor.b64  	%rd1007, %rd987, %rd963;
	and.b64  	%rd1008, %rd1007, %rd1006;
	xor.b64  	%rd1009, %rd1008, %rd987;
	add.s64 	%rd1010, %rd999, %rd1009;
	add.s64 	%rd1011, %rd1010, %rd1005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1522}, %rd1000;
	}
	shf.r.wrap.b32 	%r1523, %r1522, %r1521, 14;
	shf.r.wrap.b32 	%r1524, %r1521, %r1522, 14;
	mov.b64 	%rd1012, {%r1524, %r1523};
	shf.r.wrap.b32 	%r1525, %r1522, %r1521, 18;
	shf.r.wrap.b32 	%r1526, %r1521, %r1522, 18;
	mov.b64 	%rd1013, {%r1526, %r1525};
	xor.b64  	%rd1014, %rd1013, %rd1012;
	shf.l.wrap.b32 	%r1527, %r1521, %r1522, 23;
	shf.l.wrap.b32 	%r1528, %r1522, %r1521, 23;
	mov.b64 	%rd1015, {%r1528, %r1527};
	xor.b64  	%rd1016, %rd1014, %rd1015;
	xor.b64  	%rd1017, %rd976, %rd952;
	and.b64  	%rd1018, %rd1000, %rd1017;
	xor.b64  	%rd1019, %rd1018, %rd952;
	add.s64 	%rd1020, %rd928, %rd651;
	add.s64 	%rd1021, %rd1020, %rd52;
	add.s64 	%rd1022, %rd1021, %rd1019;
	add.s64 	%rd1023, %rd1022, %rd1016;
	add.s64 	%rd1024, %rd1023, %rd939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1529,%dummy}, %rd1011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1530}, %rd1011;
	}
	shf.r.wrap.b32 	%r1531, %r1530, %r1529, 28;
	shf.r.wrap.b32 	%r1532, %r1529, %r1530, 28;
	mov.b64 	%rd1025, {%r1532, %r1531};
	shf.l.wrap.b32 	%r1533, %r1529, %r1530, 30;
	shf.l.wrap.b32 	%r1534, %r1530, %r1529, 30;
	mov.b64 	%rd1026, {%r1534, %r1533};
	xor.b64  	%rd1027, %rd1026, %rd1025;
	shf.l.wrap.b32 	%r1535, %r1529, %r1530, 25;
	shf.l.wrap.b32 	%r1536, %r1530, %r1529, 25;
	mov.b64 	%rd1028, {%r1536, %r1535};
	xor.b64  	%rd1029, %rd1027, %rd1028;
	xor.b64  	%rd1030, %rd1011, %rd963;
	xor.b64  	%rd1031, %rd1011, %rd987;
	and.b64  	%rd1032, %rd1031, %rd1030;
	xor.b64  	%rd1033, %rd1032, %rd1011;
	add.s64 	%rd1034, %rd1023, %rd1033;
	add.s64 	%rd1035, %rd1034, %rd1029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1537,%dummy}, %rd638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1538}, %rd638;
	}
	shf.r.wrap.b32 	%r1539, %r1538, %r1537, 19;
	shf.r.wrap.b32 	%r1540, %r1537, %r1538, 19;
	mov.b64 	%rd1036, {%r1540, %r1539};
	shf.l.wrap.b32 	%r1541, %r1537, %r1538, 3;
	shf.l.wrap.b32 	%r1542, %r1538, %r1537, 3;
	mov.b64 	%rd1037, {%r1542, %r1541};
	shr.u64 	%rd1038, %rd638, 6;
	xor.b64  	%rd1039, %rd1036, %rd1038;
	xor.b64  	%rd1040, %rd1039, %rd1037;
	add.s64 	%rd1041, %rd566, %rd603;
	add.s64 	%rd1042, %rd1041, %rd1040;
	add.s64 	%rd1043, %rd1042, %rd53;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1543,%dummy}, %rd651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1544}, %rd651;
	}
	shf.r.wrap.b32 	%r1545, %r1544, %r1543, 19;
	shf.r.wrap.b32 	%r1546, %r1543, %r1544, 19;
	mov.b64 	%rd1044, {%r1546, %r1545};
	shf.l.wrap.b32 	%r1547, %r1543, %r1544, 3;
	shf.l.wrap.b32 	%r1548, %r1544, %r1543, 3;
	mov.b64 	%rd1045, {%r1548, %r1547};
	shr.u64 	%rd1046, %rd651, 6;
	xor.b64  	%rd1047, %rd1044, %rd1046;
	xor.b64  	%rd1048, %rd1047, %rd1045;
	shf.r.wrap.b32 	%r1549, %r1218, %r1217, 1;
	shf.r.wrap.b32 	%r1550, %r1217, %r1218, 1;
	mov.b64 	%rd1049, {%r1550, %r1549};
	shf.r.wrap.b32 	%r1551, %r1218, %r1217, 8;
	shf.r.wrap.b32 	%r1552, %r1217, %r1218, 8;
	mov.b64 	%rd1050, {%r1552, %r1551};
	shr.u64 	%rd1051, %rd573, 7;
	xor.b64  	%rd1052, %rd1049, %rd1051;
	xor.b64  	%rd1053, %rd1052, %rd1050;
	add.s64 	%rd1054, %rd28, %rd610;
	add.s64 	%rd1055, %rd1054, %rd1048;
	add.s64 	%rd1056, %rd1055, %rd1053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1553,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1554}, %rd1043;
	}
	shf.r.wrap.b32 	%r1555, %r1554, %r1553, 19;
	shf.r.wrap.b32 	%r1556, %r1553, %r1554, 19;
	mov.b64 	%rd1057, {%r1556, %r1555};
	shf.l.wrap.b32 	%r1557, %r1553, %r1554, 3;
	shf.l.wrap.b32 	%r1558, %r1554, %r1553, 3;
	mov.b64 	%rd1058, {%r1558, %r1557};
	shr.u64 	%rd1059, %rd1043, 6;
	xor.b64  	%rd1060, %rd1057, %rd1059;
	xor.b64  	%rd1061, %rd1060, %rd1058;
	add.s64 	%rd1062, %rd573, %rd617;
	add.s64 	%rd1063, %rd1062, %rd1061;
	add.s64 	%rd1064, %rd1063, %rd54;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1559,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1560}, %rd1056;
	}
	shf.r.wrap.b32 	%r1561, %r1560, %r1559, 19;
	shf.r.wrap.b32 	%r1562, %r1559, %r1560, 19;
	mov.b64 	%rd1065, {%r1562, %r1561};
	shf.l.wrap.b32 	%r1563, %r1559, %r1560, 3;
	shf.l.wrap.b32 	%r1564, %r1560, %r1559, 3;
	mov.b64 	%rd1066, {%r1564, %r1563};
	shr.u64 	%rd1067, %rd1056, 6;
	xor.b64  	%rd1068, %rd1065, %rd1067;
	xor.b64  	%rd1069, %rd1068, %rd1066;
	shf.r.wrap.b32 	%r1565, %r1224, %r1223, 1;
	shf.r.wrap.b32 	%r1566, %r1223, %r1224, 1;
	mov.b64 	%rd1070, {%r1566, %r1565};
	shf.r.wrap.b32 	%r1567, %r1224, %r1223, 8;
	shf.r.wrap.b32 	%r1568, %r1223, %r1224, 8;
	mov.b64 	%rd1071, {%r1568, %r1567};
	shr.u64 	%rd1072, %rd580, 7;
	xor.b64  	%rd1073, %rd1070, %rd1072;
	xor.b64  	%rd1074, %rd1073, %rd1071;
	add.s64 	%rd1075, %rd30, %rd624;
	add.s64 	%rd1076, %rd1075, %rd1069;
	add.s64 	%rd1077, %rd1076, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1569,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1570}, %rd1064;
	}
	shf.r.wrap.b32 	%r1571, %r1570, %r1569, 19;
	shf.r.wrap.b32 	%r1572, %r1569, %r1570, 19;
	mov.b64 	%rd1078, {%r1572, %r1571};
	shf.l.wrap.b32 	%r1573, %r1569, %r1570, 3;
	shf.l.wrap.b32 	%r1574, %r1570, %r1569, 3;
	mov.b64 	%rd1079, {%r1574, %r1573};
	shr.u64 	%rd1080, %rd1064, 6;
	xor.b64  	%rd1081, %rd1078, %rd1080;
	xor.b64  	%rd1082, %rd1081, %rd1079;
	add.s64 	%rd1083, %rd580, %rd631;
	add.s64 	%rd1084, %rd1083, %rd1082;
	add.s64 	%rd1085, %rd1084, %rd55;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1575,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1576}, %rd1077;
	}
	shf.r.wrap.b32 	%r1577, %r1576, %r1575, 19;
	shf.r.wrap.b32 	%r1578, %r1575, %r1576, 19;
	mov.b64 	%rd1086, {%r1578, %r1577};
	shf.l.wrap.b32 	%r1579, %r1575, %r1576, 3;
	shf.l.wrap.b32 	%r1580, %r1576, %r1575, 3;
	mov.b64 	%rd1087, {%r1580, %r1579};
	shr.u64 	%rd1088, %rd1077, 6;
	xor.b64  	%rd1089, %rd1086, %rd1088;
	xor.b64  	%rd1090, %rd1089, %rd1087;
	shf.r.wrap.b32 	%r1581, %r1230, %r1229, 1;
	shf.r.wrap.b32 	%r1582, %r1229, %r1230, 1;
	mov.b64 	%rd1091, {%r1582, %r1581};
	shf.r.wrap.b32 	%r1583, %r1230, %r1229, 8;
	shf.r.wrap.b32 	%r1584, %r1229, %r1230, 8;
	mov.b64 	%rd1092, {%r1584, %r1583};
	shr.u64 	%rd1093, %rd587, 7;
	xor.b64  	%rd1094, %rd1091, %rd1093;
	xor.b64  	%rd1095, %rd1094, %rd1092;
	add.s64 	%rd1096, %rd32, %rd638;
	add.s64 	%rd1097, %rd1096, %rd1090;
	add.s64 	%rd1098, %rd1097, %rd1095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1585,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1586}, %rd1085;
	}
	shf.r.wrap.b32 	%r1587, %r1586, %r1585, 19;
	shf.r.wrap.b32 	%r1588, %r1585, %r1586, 19;
	mov.b64 	%rd1099, {%r1588, %r1587};
	shf.l.wrap.b32 	%r1589, %r1585, %r1586, 3;
	shf.l.wrap.b32 	%r1590, %r1586, %r1585, 3;
	mov.b64 	%rd1100, {%r1590, %r1589};
	shr.u64 	%rd1101, %rd1085, 6;
	xor.b64  	%rd1102, %rd1099, %rd1101;
	xor.b64  	%rd1103, %rd1102, %rd1100;
	shf.r.wrap.b32 	%r1591, %r1236, %r1235, 1;
	shf.r.wrap.b32 	%r1592, %r1235, %r1236, 1;
	mov.b64 	%rd1104, {%r1592, %r1591};
	shf.r.wrap.b32 	%r1593, %r1236, %r1235, 8;
	shf.r.wrap.b32 	%r1594, %r1235, %r1236, 8;
	mov.b64 	%rd1105, {%r1594, %r1593};
	shr.u64 	%rd1106, %rd589, 7;
	xor.b64  	%rd1107, %rd1104, %rd1106;
	xor.b64  	%rd1108, %rd1107, %rd1105;
	add.s64 	%rd1109, %rd587, %rd651;
	add.s64 	%rd1110, %rd1109, %rd1103;
	add.s64 	%rd1111, %rd1110, %rd1108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1595,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1596}, %rd1098;
	}
	shf.r.wrap.b32 	%r1597, %r1596, %r1595, 19;
	shf.r.wrap.b32 	%r1598, %r1595, %r1596, 19;
	mov.b64 	%rd1112, {%r1598, %r1597};
	shf.l.wrap.b32 	%r1599, %r1595, %r1596, 3;
	shf.l.wrap.b32 	%r1600, %r1596, %r1595, 3;
	mov.b64 	%rd1113, {%r1600, %r1599};
	shr.u64 	%rd1114, %rd1098, 6;
	xor.b64  	%rd1115, %rd1112, %rd1114;
	xor.b64  	%rd1116, %rd1115, %rd1113;
	shf.r.wrap.b32 	%r1601, %r1242, %r1241, 1;
	shf.r.wrap.b32 	%r1602, %r1241, %r1242, 1;
	mov.b64 	%rd1117, {%r1602, %r1601};
	shf.r.wrap.b32 	%r1603, %r1242, %r1241, 8;
	shf.r.wrap.b32 	%r1604, %r1241, %r1242, 8;
	mov.b64 	%rd1118, {%r1604, %r1603};
	shr.u64 	%rd1119, %rd596, 7;
	xor.b64  	%rd1120, %rd1117, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1118;
	add.s64 	%rd1122, %rd1043, %rd589;
	add.s64 	%rd1123, %rd1122, %rd1116;
	add.s64 	%rd1124, %rd1123, %rd1121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd1111;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 19;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 19;
	mov.b64 	%rd1125, {%r1608, %r1607};
	shf.l.wrap.b32 	%r1609, %r1605, %r1606, 3;
	shf.l.wrap.b32 	%r1610, %r1606, %r1605, 3;
	mov.b64 	%rd1126, {%r1610, %r1609};
	shr.u64 	%rd1127, %rd1111, 6;
	xor.b64  	%rd1128, %rd1125, %rd1127;
	xor.b64  	%rd1129, %rd1128, %rd1126;
	shf.r.wrap.b32 	%r1611, %r1248, %r1247, 1;
	shf.r.wrap.b32 	%r1612, %r1247, %r1248, 1;
	mov.b64 	%rd1130, {%r1612, %r1611};
	shf.r.wrap.b32 	%r1613, %r1248, %r1247, 8;
	shf.r.wrap.b32 	%r1614, %r1247, %r1248, 8;
	mov.b64 	%rd1131, {%r1614, %r1613};
	shr.u64 	%rd1132, %rd603, 7;
	xor.b64  	%rd1133, %rd1130, %rd1132;
	xor.b64  	%rd1134, %rd1133, %rd1131;
	add.s64 	%rd1135, %rd1056, %rd596;
	add.s64 	%rd1136, %rd1135, %rd1129;
	add.s64 	%rd1137, %rd1136, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1615,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd1124;
	}
	shf.r.wrap.b32 	%r1617, %r1616, %r1615, 19;
	shf.r.wrap.b32 	%r1618, %r1615, %r1616, 19;
	mov.b64 	%rd1138, {%r1618, %r1617};
	shf.l.wrap.b32 	%r1619, %r1615, %r1616, 3;
	shf.l.wrap.b32 	%r1620, %r1616, %r1615, 3;
	mov.b64 	%rd1139, {%r1620, %r1619};
	shr.u64 	%rd1140, %rd1124, 6;
	xor.b64  	%rd1141, %rd1138, %rd1140;
	xor.b64  	%rd1142, %rd1141, %rd1139;
	shf.r.wrap.b32 	%r1621, %r1254, %r1253, 1;
	shf.r.wrap.b32 	%r1622, %r1253, %r1254, 1;
	mov.b64 	%rd1143, {%r1622, %r1621};
	shf.r.wrap.b32 	%r1623, %r1254, %r1253, 8;
	shf.r.wrap.b32 	%r1624, %r1253, %r1254, 8;
	mov.b64 	%rd1144, {%r1624, %r1623};
	shr.u64 	%rd1145, %rd610, 7;
	xor.b64  	%rd1146, %rd1143, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1144;
	add.s64 	%rd1148, %rd1064, %rd603;
	add.s64 	%rd1149, %rd1148, %rd1142;
	add.s64 	%rd1150, %rd1149, %rd1147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1625,%dummy}, %rd1137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1626}, %rd1137;
	}
	shf.r.wrap.b32 	%r1627, %r1626, %r1625, 19;
	shf.r.wrap.b32 	%r1628, %r1625, %r1626, 19;
	mov.b64 	%rd1151, {%r1628, %r1627};
	shf.l.wrap.b32 	%r1629, %r1625, %r1626, 3;
	shf.l.wrap.b32 	%r1630, %r1626, %r1625, 3;
	mov.b64 	%rd1152, {%r1630, %r1629};
	shr.u64 	%rd1153, %rd1137, 6;
	xor.b64  	%rd1154, %rd1151, %rd1153;
	xor.b64  	%rd1155, %rd1154, %rd1152;
	shf.r.wrap.b32 	%r1631, %r1260, %r1259, 1;
	shf.r.wrap.b32 	%r1632, %r1259, %r1260, 1;
	mov.b64 	%rd1156, {%r1632, %r1631};
	shf.r.wrap.b32 	%r1633, %r1260, %r1259, 8;
	shf.r.wrap.b32 	%r1634, %r1259, %r1260, 8;
	mov.b64 	%rd1157, {%r1634, %r1633};
	shr.u64 	%rd1158, %rd617, 7;
	xor.b64  	%rd1159, %rd1156, %rd1158;
	xor.b64  	%rd1160, %rd1159, %rd1157;
	add.s64 	%rd1161, %rd1077, %rd610;
	add.s64 	%rd1162, %rd1161, %rd1155;
	add.s64 	%rd1163, %rd1162, %rd1160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1635,%dummy}, %rd1150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1636}, %rd1150;
	}
	shf.r.wrap.b32 	%r1637, %r1636, %r1635, 19;
	shf.r.wrap.b32 	%r1638, %r1635, %r1636, 19;
	mov.b64 	%rd1164, {%r1638, %r1637};
	shf.l.wrap.b32 	%r1639, %r1635, %r1636, 3;
	shf.l.wrap.b32 	%r1640, %r1636, %r1635, 3;
	mov.b64 	%rd1165, {%r1640, %r1639};
	shr.u64 	%rd1166, %rd1150, 6;
	xor.b64  	%rd1167, %rd1164, %rd1166;
	xor.b64  	%rd1168, %rd1167, %rd1165;
	shf.r.wrap.b32 	%r1641, %r1266, %r1265, 1;
	shf.r.wrap.b32 	%r1642, %r1265, %r1266, 1;
	mov.b64 	%rd1169, {%r1642, %r1641};
	shf.r.wrap.b32 	%r1643, %r1266, %r1265, 8;
	shf.r.wrap.b32 	%r1644, %r1265, %r1266, 8;
	mov.b64 	%rd1170, {%r1644, %r1643};
	shr.u64 	%rd1171, %rd624, 7;
	xor.b64  	%rd1172, %rd1169, %rd1171;
	xor.b64  	%rd1173, %rd1172, %rd1170;
	add.s64 	%rd1174, %rd1085, %rd617;
	add.s64 	%rd1175, %rd1174, %rd1168;
	add.s64 	%rd1176, %rd1175, %rd1173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1645,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1646}, %rd1163;
	}
	shf.r.wrap.b32 	%r1647, %r1646, %r1645, 19;
	shf.r.wrap.b32 	%r1648, %r1645, %r1646, 19;
	mov.b64 	%rd1177, {%r1648, %r1647};
	shf.l.wrap.b32 	%r1649, %r1645, %r1646, 3;
	shf.l.wrap.b32 	%r1650, %r1646, %r1645, 3;
	mov.b64 	%rd1178, {%r1650, %r1649};
	shr.u64 	%rd1179, %rd1163, 6;
	xor.b64  	%rd1180, %rd1177, %rd1179;
	xor.b64  	%rd1181, %rd1180, %rd1178;
	shf.r.wrap.b32 	%r1651, %r1272, %r1271, 1;
	shf.r.wrap.b32 	%r1652, %r1271, %r1272, 1;
	mov.b64 	%rd1182, {%r1652, %r1651};
	shf.r.wrap.b32 	%r1653, %r1272, %r1271, 8;
	shf.r.wrap.b32 	%r1654, %r1271, %r1272, 8;
	mov.b64 	%rd1183, {%r1654, %r1653};
	shr.u64 	%rd1184, %rd631, 7;
	xor.b64  	%rd1185, %rd1182, %rd1184;
	xor.b64  	%rd1186, %rd1185, %rd1183;
	add.s64 	%rd1187, %rd1098, %rd624;
	add.s64 	%rd1188, %rd1187, %rd1181;
	add.s64 	%rd1189, %rd1188, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1655,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1656}, %rd1176;
	}
	shf.r.wrap.b32 	%r1657, %r1656, %r1655, 19;
	shf.r.wrap.b32 	%r1658, %r1655, %r1656, 19;
	mov.b64 	%rd1190, {%r1658, %r1657};
	shf.l.wrap.b32 	%r1659, %r1655, %r1656, 3;
	shf.l.wrap.b32 	%r1660, %r1656, %r1655, 3;
	mov.b64 	%rd1191, {%r1660, %r1659};
	shr.u64 	%rd1192, %rd1176, 6;
	xor.b64  	%rd1193, %rd1190, %rd1192;
	xor.b64  	%rd1194, %rd1193, %rd1191;
	shf.r.wrap.b32 	%r1661, %r1538, %r1537, 1;
	shf.r.wrap.b32 	%r1662, %r1537, %r1538, 1;
	mov.b64 	%rd1195, {%r1662, %r1661};
	shf.r.wrap.b32 	%r1663, %r1538, %r1537, 8;
	shf.r.wrap.b32 	%r1664, %r1537, %r1538, 8;
	mov.b64 	%rd1196, {%r1664, %r1663};
	shr.u64 	%rd1197, %rd638, 7;
	xor.b64  	%rd1198, %rd1195, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1196;
	add.s64 	%rd1200, %rd1111, %rd631;
	add.s64 	%rd1201, %rd1200, %rd1194;
	add.s64 	%rd1202, %rd1201, %rd1199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1665,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1666}, %rd1189;
	}
	shf.r.wrap.b32 	%r1667, %r1666, %r1665, 19;
	shf.r.wrap.b32 	%r1668, %r1665, %r1666, 19;
	mov.b64 	%rd1203, {%r1668, %r1667};
	shf.l.wrap.b32 	%r1669, %r1665, %r1666, 3;
	shf.l.wrap.b32 	%r1670, %r1666, %r1665, 3;
	mov.b64 	%rd1204, {%r1670, %r1669};
	shr.u64 	%rd1205, %rd1189, 6;
	xor.b64  	%rd1206, %rd1203, %rd1205;
	xor.b64  	%rd1207, %rd1206, %rd1204;
	shf.r.wrap.b32 	%r1671, %r1544, %r1543, 1;
	shf.r.wrap.b32 	%r1672, %r1543, %r1544, 1;
	mov.b64 	%rd1208, {%r1672, %r1671};
	shf.r.wrap.b32 	%r1673, %r1544, %r1543, 8;
	shf.r.wrap.b32 	%r1674, %r1543, %r1544, 8;
	mov.b64 	%rd1209, {%r1674, %r1673};
	shr.u64 	%rd1210, %rd651, 7;
	xor.b64  	%rd1211, %rd1208, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd1209;
	add.s64 	%rd1213, %rd1124, %rd638;
	add.s64 	%rd1214, %rd1213, %rd1207;
	add.s64 	%rd1215, %rd1214, %rd1212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1675,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1676}, %rd1202;
	}
	shf.r.wrap.b32 	%r1677, %r1676, %r1675, 19;
	shf.r.wrap.b32 	%r1678, %r1675, %r1676, 19;
	mov.b64 	%rd1216, {%r1678, %r1677};
	shf.l.wrap.b32 	%r1679, %r1675, %r1676, 3;
	shf.l.wrap.b32 	%r1680, %r1676, %r1675, 3;
	mov.b64 	%rd1217, {%r1680, %r1679};
	shr.u64 	%rd1218, %rd1202, 6;
	xor.b64  	%rd1219, %rd1216, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd1217;
	shf.r.wrap.b32 	%r1681, %r1554, %r1553, 1;
	shf.r.wrap.b32 	%r1682, %r1553, %r1554, 1;
	mov.b64 	%rd1221, {%r1682, %r1681};
	shf.r.wrap.b32 	%r1683, %r1554, %r1553, 8;
	shf.r.wrap.b32 	%r1684, %r1553, %r1554, 8;
	mov.b64 	%rd1222, {%r1684, %r1683};
	shr.u64 	%rd1223, %rd1043, 7;
	xor.b64  	%rd1224, %rd1221, %rd1223;
	xor.b64  	%rd1225, %rd1224, %rd1222;
	add.s64 	%rd1226, %rd1137, %rd651;
	add.s64 	%rd1227, %rd1226, %rd1220;
	add.s64 	%rd1228, %rd1227, %rd1225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1685,%dummy}, %rd1024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1686}, %rd1024;
	}
	shf.r.wrap.b32 	%r1687, %r1686, %r1685, 14;
	shf.r.wrap.b32 	%r1688, %r1685, %r1686, 14;
	mov.b64 	%rd1229, {%r1688, %r1687};
	shf.r.wrap.b32 	%r1689, %r1686, %r1685, 18;
	shf.r.wrap.b32 	%r1690, %r1685, %r1686, 18;
	mov.b64 	%rd1230, {%r1690, %r1689};
	xor.b64  	%rd1231, %rd1230, %rd1229;
	shf.l.wrap.b32 	%r1691, %r1685, %r1686, 23;
	shf.l.wrap.b32 	%r1692, %r1686, %r1685, 23;
	mov.b64 	%rd1232, {%r1692, %r1691};
	xor.b64  	%rd1233, %rd1231, %rd1232;
	xor.b64  	%rd1234, %rd976, %rd1000;
	and.b64  	%rd1235, %rd1234, %rd1024;
	xor.b64  	%rd1236, %rd1235, %rd976;
	add.s64 	%rd1237, %rd1236, %rd952;
	add.s64 	%rd1238, %rd1237, %rd1043;
	add.s64 	%rd1239, %rd1238, %rd56;
	add.s64 	%rd1240, %rd1239, %rd1233;
	add.s64 	%rd1241, %rd1240, %rd963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1693,%dummy}, %rd1035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1694}, %rd1035;
	}
	shf.r.wrap.b32 	%r1695, %r1694, %r1693, 28;
	shf.r.wrap.b32 	%r1696, %r1693, %r1694, 28;
	mov.b64 	%rd1242, {%r1696, %r1695};
	shf.l.wrap.b32 	%r1697, %r1693, %r1694, 30;
	shf.l.wrap.b32 	%r1698, %r1694, %r1693, 30;
	mov.b64 	%rd1243, {%r1698, %r1697};
	xor.b64  	%rd1244, %rd1243, %rd1242;
	shf.l.wrap.b32 	%r1699, %r1693, %r1694, 25;
	shf.l.wrap.b32 	%r1700, %r1694, %r1693, 25;
	mov.b64 	%rd1245, {%r1700, %r1699};
	xor.b64  	%rd1246, %rd1244, %rd1245;
	xor.b64  	%rd1247, %rd1035, %rd987;
	xor.b64  	%rd1248, %rd1035, %rd1011;
	and.b64  	%rd1249, %rd1248, %rd1247;
	xor.b64  	%rd1250, %rd1249, %rd1035;
	add.s64 	%rd1251, %rd1240, %rd1250;
	add.s64 	%rd1252, %rd1251, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1701,%dummy}, %rd1241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1702}, %rd1241;
	}
	shf.r.wrap.b32 	%r1703, %r1702, %r1701, 14;
	shf.r.wrap.b32 	%r1704, %r1701, %r1702, 14;
	mov.b64 	%rd1253, {%r1704, %r1703};
	shf.r.wrap.b32 	%r1705, %r1702, %r1701, 18;
	shf.r.wrap.b32 	%r1706, %r1701, %r1702, 18;
	mov.b64 	%rd1254, {%r1706, %r1705};
	xor.b64  	%rd1255, %rd1254, %rd1253;
	shf.l.wrap.b32 	%r1707, %r1701, %r1702, 23;
	shf.l.wrap.b32 	%r1708, %r1702, %r1701, 23;
	mov.b64 	%rd1256, {%r1708, %r1707};
	xor.b64  	%rd1257, %rd1255, %rd1256;
	xor.b64  	%rd1258, %rd1000, %rd1024;
	and.b64  	%rd1259, %rd1241, %rd1258;
	xor.b64  	%rd1260, %rd1259, %rd1000;
	add.s64 	%rd1261, %rd1056, %rd976;
	add.s64 	%rd1262, %rd1261, %rd57;
	add.s64 	%rd1263, %rd1262, %rd1260;
	add.s64 	%rd1264, %rd1263, %rd1257;
	add.s64 	%rd1265, %rd1264, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1709,%dummy}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1710}, %rd1252;
	}
	shf.r.wrap.b32 	%r1711, %r1710, %r1709, 28;
	shf.r.wrap.b32 	%r1712, %r1709, %r1710, 28;
	mov.b64 	%rd1266, {%r1712, %r1711};
	shf.l.wrap.b32 	%r1713, %r1709, %r1710, 30;
	shf.l.wrap.b32 	%r1714, %r1710, %r1709, 30;
	mov.b64 	%rd1267, {%r1714, %r1713};
	xor.b64  	%rd1268, %rd1267, %rd1266;
	shf.l.wrap.b32 	%r1715, %r1709, %r1710, 25;
	shf.l.wrap.b32 	%r1716, %r1710, %r1709, 25;
	mov.b64 	%rd1269, {%r1716, %r1715};
	xor.b64  	%rd1270, %rd1268, %rd1269;
	xor.b64  	%rd1271, %rd1252, %rd1011;
	xor.b64  	%rd1272, %rd1252, %rd1035;
	and.b64  	%rd1273, %rd1272, %rd1271;
	xor.b64  	%rd1274, %rd1273, %rd1252;
	add.s64 	%rd1275, %rd1264, %rd1274;
	add.s64 	%rd1276, %rd1275, %rd1270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1717,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1718}, %rd1265;
	}
	shf.r.wrap.b32 	%r1719, %r1718, %r1717, 14;
	shf.r.wrap.b32 	%r1720, %r1717, %r1718, 14;
	mov.b64 	%rd1277, {%r1720, %r1719};
	shf.r.wrap.b32 	%r1721, %r1718, %r1717, 18;
	shf.r.wrap.b32 	%r1722, %r1717, %r1718, 18;
	mov.b64 	%rd1278, {%r1722, %r1721};
	xor.b64  	%rd1279, %rd1278, %rd1277;
	shf.l.wrap.b32 	%r1723, %r1717, %r1718, 23;
	shf.l.wrap.b32 	%r1724, %r1718, %r1717, 23;
	mov.b64 	%rd1280, {%r1724, %r1723};
	xor.b64  	%rd1281, %rd1279, %rd1280;
	xor.b64  	%rd1282, %rd1241, %rd1024;
	and.b64  	%rd1283, %rd1265, %rd1282;
	xor.b64  	%rd1284, %rd1283, %rd1024;
	add.s64 	%rd1285, %rd1064, %rd1000;
	add.s64 	%rd1286, %rd1285, %rd58;
	add.s64 	%rd1287, %rd1286, %rd1284;
	add.s64 	%rd1288, %rd1287, %rd1281;
	add.s64 	%rd1289, %rd1288, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1725,%dummy}, %rd1276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1726}, %rd1276;
	}
	shf.r.wrap.b32 	%r1727, %r1726, %r1725, 28;
	shf.r.wrap.b32 	%r1728, %r1725, %r1726, 28;
	mov.b64 	%rd1290, {%r1728, %r1727};
	shf.l.wrap.b32 	%r1729, %r1725, %r1726, 30;
	shf.l.wrap.b32 	%r1730, %r1726, %r1725, 30;
	mov.b64 	%rd1291, {%r1730, %r1729};
	xor.b64  	%rd1292, %rd1291, %rd1290;
	shf.l.wrap.b32 	%r1731, %r1725, %r1726, 25;
	shf.l.wrap.b32 	%r1732, %r1726, %r1725, 25;
	mov.b64 	%rd1293, {%r1732, %r1731};
	xor.b64  	%rd1294, %rd1292, %rd1293;
	xor.b64  	%rd1295, %rd1276, %rd1035;
	xor.b64  	%rd1296, %rd1276, %rd1252;
	and.b64  	%rd1297, %rd1296, %rd1295;
	xor.b64  	%rd1298, %rd1297, %rd1276;
	add.s64 	%rd1299, %rd1288, %rd1298;
	add.s64 	%rd1300, %rd1299, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1733,%dummy}, %rd1289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1734}, %rd1289;
	}
	shf.r.wrap.b32 	%r1735, %r1734, %r1733, 14;
	shf.r.wrap.b32 	%r1736, %r1733, %r1734, 14;
	mov.b64 	%rd1301, {%r1736, %r1735};
	shf.r.wrap.b32 	%r1737, %r1734, %r1733, 18;
	shf.r.wrap.b32 	%r1738, %r1733, %r1734, 18;
	mov.b64 	%rd1302, {%r1738, %r1737};
	xor.b64  	%rd1303, %rd1302, %rd1301;
	shf.l.wrap.b32 	%r1739, %r1733, %r1734, 23;
	shf.l.wrap.b32 	%r1740, %r1734, %r1733, 23;
	mov.b64 	%rd1304, {%r1740, %r1739};
	xor.b64  	%rd1305, %rd1303, %rd1304;
	xor.b64  	%rd1306, %rd1265, %rd1241;
	and.b64  	%rd1307, %rd1289, %rd1306;
	xor.b64  	%rd1308, %rd1307, %rd1241;
	add.s64 	%rd1309, %rd1077, %rd1024;
	add.s64 	%rd1310, %rd1309, %rd59;
	add.s64 	%rd1311, %rd1310, %rd1308;
	add.s64 	%rd1312, %rd1311, %rd1305;
	add.s64 	%rd1313, %rd1312, %rd1035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1741,%dummy}, %rd1300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1742}, %rd1300;
	}
	shf.r.wrap.b32 	%r1743, %r1742, %r1741, 28;
	shf.r.wrap.b32 	%r1744, %r1741, %r1742, 28;
	mov.b64 	%rd1314, {%r1744, %r1743};
	shf.l.wrap.b32 	%r1745, %r1741, %r1742, 30;
	shf.l.wrap.b32 	%r1746, %r1742, %r1741, 30;
	mov.b64 	%rd1315, {%r1746, %r1745};
	xor.b64  	%rd1316, %rd1315, %rd1314;
	shf.l.wrap.b32 	%r1747, %r1741, %r1742, 25;
	shf.l.wrap.b32 	%r1748, %r1742, %r1741, 25;
	mov.b64 	%rd1317, {%r1748, %r1747};
	xor.b64  	%rd1318, %rd1316, %rd1317;
	xor.b64  	%rd1319, %rd1300, %rd1252;
	xor.b64  	%rd1320, %rd1300, %rd1276;
	and.b64  	%rd1321, %rd1320, %rd1319;
	xor.b64  	%rd1322, %rd1321, %rd1300;
	add.s64 	%rd1323, %rd1312, %rd1322;
	add.s64 	%rd1324, %rd1323, %rd1318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1749,%dummy}, %rd1313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1750}, %rd1313;
	}
	shf.r.wrap.b32 	%r1751, %r1750, %r1749, 14;
	shf.r.wrap.b32 	%r1752, %r1749, %r1750, 14;
	mov.b64 	%rd1325, {%r1752, %r1751};
	shf.r.wrap.b32 	%r1753, %r1750, %r1749, 18;
	shf.r.wrap.b32 	%r1754, %r1749, %r1750, 18;
	mov.b64 	%rd1326, {%r1754, %r1753};
	xor.b64  	%rd1327, %rd1326, %rd1325;
	shf.l.wrap.b32 	%r1755, %r1749, %r1750, 23;
	shf.l.wrap.b32 	%r1756, %r1750, %r1749, 23;
	mov.b64 	%rd1328, {%r1756, %r1755};
	xor.b64  	%rd1329, %rd1327, %rd1328;
	xor.b64  	%rd1330, %rd1289, %rd1265;
	and.b64  	%rd1331, %rd1313, %rd1330;
	xor.b64  	%rd1332, %rd1331, %rd1265;
	add.s64 	%rd1333, %rd1241, %rd1085;
	add.s64 	%rd1334, %rd1333, %rd60;
	add.s64 	%rd1335, %rd1334, %rd1332;
	add.s64 	%rd1336, %rd1335, %rd1329;
	add.s64 	%rd1337, %rd1336, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1757,%dummy}, %rd1324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1758}, %rd1324;
	}
	shf.r.wrap.b32 	%r1759, %r1758, %r1757, 28;
	shf.r.wrap.b32 	%r1760, %r1757, %r1758, 28;
	mov.b64 	%rd1338, {%r1760, %r1759};
	shf.l.wrap.b32 	%r1761, %r1757, %r1758, 30;
	shf.l.wrap.b32 	%r1762, %r1758, %r1757, 30;
	mov.b64 	%rd1339, {%r1762, %r1761};
	xor.b64  	%rd1340, %rd1339, %rd1338;
	shf.l.wrap.b32 	%r1763, %r1757, %r1758, 25;
	shf.l.wrap.b32 	%r1764, %r1758, %r1757, 25;
	mov.b64 	%rd1341, {%r1764, %r1763};
	xor.b64  	%rd1342, %rd1340, %rd1341;
	xor.b64  	%rd1343, %rd1324, %rd1276;
	xor.b64  	%rd1344, %rd1324, %rd1300;
	and.b64  	%rd1345, %rd1344, %rd1343;
	xor.b64  	%rd1346, %rd1345, %rd1324;
	add.s64 	%rd1347, %rd1336, %rd1346;
	add.s64 	%rd1348, %rd1347, %rd1342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1765,%dummy}, %rd1337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1766}, %rd1337;
	}
	shf.r.wrap.b32 	%r1767, %r1766, %r1765, 14;
	shf.r.wrap.b32 	%r1768, %r1765, %r1766, 14;
	mov.b64 	%rd1349, {%r1768, %r1767};
	shf.r.wrap.b32 	%r1769, %r1766, %r1765, 18;
	shf.r.wrap.b32 	%r1770, %r1765, %r1766, 18;
	mov.b64 	%rd1350, {%r1770, %r1769};
	xor.b64  	%rd1351, %rd1350, %rd1349;
	shf.l.wrap.b32 	%r1771, %r1765, %r1766, 23;
	shf.l.wrap.b32 	%r1772, %r1766, %r1765, 23;
	mov.b64 	%rd1352, {%r1772, %r1771};
	xor.b64  	%rd1353, %rd1351, %rd1352;
	xor.b64  	%rd1354, %rd1313, %rd1289;
	and.b64  	%rd1355, %rd1337, %rd1354;
	xor.b64  	%rd1356, %rd1355, %rd1289;
	add.s64 	%rd1357, %rd1265, %rd1098;
	add.s64 	%rd1358, %rd1357, %rd61;
	add.s64 	%rd1359, %rd1358, %rd1356;
	add.s64 	%rd1360, %rd1359, %rd1353;
	add.s64 	%rd1361, %rd1360, %rd1276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1773,%dummy}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1774}, %rd1348;
	}
	shf.r.wrap.b32 	%r1775, %r1774, %r1773, 28;
	shf.r.wrap.b32 	%r1776, %r1773, %r1774, 28;
	mov.b64 	%rd1362, {%r1776, %r1775};
	shf.l.wrap.b32 	%r1777, %r1773, %r1774, 30;
	shf.l.wrap.b32 	%r1778, %r1774, %r1773, 30;
	mov.b64 	%rd1363, {%r1778, %r1777};
	xor.b64  	%rd1364, %rd1363, %rd1362;
	shf.l.wrap.b32 	%r1779, %r1773, %r1774, 25;
	shf.l.wrap.b32 	%r1780, %r1774, %r1773, 25;
	mov.b64 	%rd1365, {%r1780, %r1779};
	xor.b64  	%rd1366, %rd1364, %rd1365;
	xor.b64  	%rd1367, %rd1348, %rd1300;
	xor.b64  	%rd1368, %rd1348, %rd1324;
	and.b64  	%rd1369, %rd1368, %rd1367;
	xor.b64  	%rd1370, %rd1369, %rd1348;
	add.s64 	%rd1371, %rd1360, %rd1370;
	add.s64 	%rd1372, %rd1371, %rd1366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1781,%dummy}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1782}, %rd1361;
	}
	shf.r.wrap.b32 	%r1783, %r1782, %r1781, 14;
	shf.r.wrap.b32 	%r1784, %r1781, %r1782, 14;
	mov.b64 	%rd1373, {%r1784, %r1783};
	shf.r.wrap.b32 	%r1785, %r1782, %r1781, 18;
	shf.r.wrap.b32 	%r1786, %r1781, %r1782, 18;
	mov.b64 	%rd1374, {%r1786, %r1785};
	xor.b64  	%rd1375, %rd1374, %rd1373;
	shf.l.wrap.b32 	%r1787, %r1781, %r1782, 23;
	shf.l.wrap.b32 	%r1788, %r1782, %r1781, 23;
	mov.b64 	%rd1376, {%r1788, %r1787};
	xor.b64  	%rd1377, %rd1375, %rd1376;
	xor.b64  	%rd1378, %rd1337, %rd1313;
	and.b64  	%rd1379, %rd1361, %rd1378;
	xor.b64  	%rd1380, %rd1379, %rd1313;
	add.s64 	%rd1381, %rd1289, %rd1111;
	add.s64 	%rd1382, %rd1381, %rd62;
	add.s64 	%rd1383, %rd1382, %rd1380;
	add.s64 	%rd1384, %rd1383, %rd1377;
	add.s64 	%rd1385, %rd1384, %rd1300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1789,%dummy}, %rd1372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1790}, %rd1372;
	}
	shf.r.wrap.b32 	%r1791, %r1790, %r1789, 28;
	shf.r.wrap.b32 	%r1792, %r1789, %r1790, 28;
	mov.b64 	%rd1386, {%r1792, %r1791};
	shf.l.wrap.b32 	%r1793, %r1789, %r1790, 30;
	shf.l.wrap.b32 	%r1794, %r1790, %r1789, 30;
	mov.b64 	%rd1387, {%r1794, %r1793};
	xor.b64  	%rd1388, %rd1387, %rd1386;
	shf.l.wrap.b32 	%r1795, %r1789, %r1790, 25;
	shf.l.wrap.b32 	%r1796, %r1790, %r1789, 25;
	mov.b64 	%rd1389, {%r1796, %r1795};
	xor.b64  	%rd1390, %rd1388, %rd1389;
	xor.b64  	%rd1391, %rd1372, %rd1324;
	xor.b64  	%rd1392, %rd1372, %rd1348;
	and.b64  	%rd1393, %rd1392, %rd1391;
	xor.b64  	%rd1394, %rd1393, %rd1372;
	add.s64 	%rd1395, %rd1384, %rd1394;
	add.s64 	%rd1396, %rd1395, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd1385;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 14;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 14;
	mov.b64 	%rd1397, {%r1800, %r1799};
	shf.r.wrap.b32 	%r1801, %r1798, %r1797, 18;
	shf.r.wrap.b32 	%r1802, %r1797, %r1798, 18;
	mov.b64 	%rd1398, {%r1802, %r1801};
	xor.b64  	%rd1399, %rd1398, %rd1397;
	shf.l.wrap.b32 	%r1803, %r1797, %r1798, 23;
	shf.l.wrap.b32 	%r1804, %r1798, %r1797, 23;
	mov.b64 	%rd1400, {%r1804, %r1803};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	xor.b64  	%rd1402, %rd1361, %rd1337;
	and.b64  	%rd1403, %rd1385, %rd1402;
	xor.b64  	%rd1404, %rd1403, %rd1337;
	add.s64 	%rd1405, %rd1313, %rd1124;
	add.s64 	%rd1406, %rd1405, %rd63;
	add.s64 	%rd1407, %rd1406, %rd1404;
	add.s64 	%rd1408, %rd1407, %rd1401;
	add.s64 	%rd1409, %rd1408, %rd1324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd1396;
	}
	shf.r.wrap.b32 	%r1807, %r1806, %r1805, 28;
	shf.r.wrap.b32 	%r1808, %r1805, %r1806, 28;
	mov.b64 	%rd1410, {%r1808, %r1807};
	shf.l.wrap.b32 	%r1809, %r1805, %r1806, 30;
	shf.l.wrap.b32 	%r1810, %r1806, %r1805, 30;
	mov.b64 	%rd1411, {%r1810, %r1809};
	xor.b64  	%rd1412, %rd1411, %rd1410;
	shf.l.wrap.b32 	%r1811, %r1805, %r1806, 25;
	shf.l.wrap.b32 	%r1812, %r1806, %r1805, 25;
	mov.b64 	%rd1413, {%r1812, %r1811};
	xor.b64  	%rd1414, %rd1412, %rd1413;
	xor.b64  	%rd1415, %rd1396, %rd1348;
	xor.b64  	%rd1416, %rd1396, %rd1372;
	and.b64  	%rd1417, %rd1416, %rd1415;
	xor.b64  	%rd1418, %rd1417, %rd1396;
	add.s64 	%rd1419, %rd1408, %rd1418;
	add.s64 	%rd1420, %rd1419, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1813,%dummy}, %rd1409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1814}, %rd1409;
	}
	shf.r.wrap.b32 	%r1815, %r1814, %r1813, 14;
	shf.r.wrap.b32 	%r1816, %r1813, %r1814, 14;
	mov.b64 	%rd1421, {%r1816, %r1815};
	shf.r.wrap.b32 	%r1817, %r1814, %r1813, 18;
	shf.r.wrap.b32 	%r1818, %r1813, %r1814, 18;
	mov.b64 	%rd1422, {%r1818, %r1817};
	xor.b64  	%rd1423, %rd1422, %rd1421;
	shf.l.wrap.b32 	%r1819, %r1813, %r1814, 23;
	shf.l.wrap.b32 	%r1820, %r1814, %r1813, 23;
	mov.b64 	%rd1424, {%r1820, %r1819};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	xor.b64  	%rd1426, %rd1385, %rd1361;
	and.b64  	%rd1427, %rd1409, %rd1426;
	xor.b64  	%rd1428, %rd1427, %rd1361;
	add.s64 	%rd1429, %rd1337, %rd1137;
	add.s64 	%rd1430, %rd1429, %rd64;
	add.s64 	%rd1431, %rd1430, %rd1428;
	add.s64 	%rd1432, %rd1431, %rd1425;
	add.s64 	%rd1433, %rd1432, %rd1348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1821,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1822}, %rd1420;
	}
	shf.r.wrap.b32 	%r1823, %r1822, %r1821, 28;
	shf.r.wrap.b32 	%r1824, %r1821, %r1822, 28;
	mov.b64 	%rd1434, {%r1824, %r1823};
	shf.l.wrap.b32 	%r1825, %r1821, %r1822, 30;
	shf.l.wrap.b32 	%r1826, %r1822, %r1821, 30;
	mov.b64 	%rd1435, {%r1826, %r1825};
	xor.b64  	%rd1436, %rd1435, %rd1434;
	shf.l.wrap.b32 	%r1827, %r1821, %r1822, 25;
	shf.l.wrap.b32 	%r1828, %r1822, %r1821, 25;
	mov.b64 	%rd1437, {%r1828, %r1827};
	xor.b64  	%rd1438, %rd1436, %rd1437;
	xor.b64  	%rd1439, %rd1420, %rd1372;
	xor.b64  	%rd1440, %rd1420, %rd1396;
	and.b64  	%rd1441, %rd1440, %rd1439;
	xor.b64  	%rd1442, %rd1441, %rd1420;
	add.s64 	%rd1443, %rd1432, %rd1442;
	add.s64 	%rd1444, %rd1443, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1829,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1830}, %rd1433;
	}
	shf.r.wrap.b32 	%r1831, %r1830, %r1829, 14;
	shf.r.wrap.b32 	%r1832, %r1829, %r1830, 14;
	mov.b64 	%rd1445, {%r1832, %r1831};
	shf.r.wrap.b32 	%r1833, %r1830, %r1829, 18;
	shf.r.wrap.b32 	%r1834, %r1829, %r1830, 18;
	mov.b64 	%rd1446, {%r1834, %r1833};
	xor.b64  	%rd1447, %rd1446, %rd1445;
	shf.l.wrap.b32 	%r1835, %r1829, %r1830, 23;
	shf.l.wrap.b32 	%r1836, %r1830, %r1829, 23;
	mov.b64 	%rd1448, {%r1836, %r1835};
	xor.b64  	%rd1449, %rd1447, %rd1448;
	xor.b64  	%rd1450, %rd1409, %rd1385;
	and.b64  	%rd1451, %rd1433, %rd1450;
	xor.b64  	%rd1452, %rd1451, %rd1385;
	add.s64 	%rd1453, %rd1361, %rd1150;
	add.s64 	%rd1454, %rd1453, %rd65;
	add.s64 	%rd1455, %rd1454, %rd1452;
	add.s64 	%rd1456, %rd1455, %rd1449;
	add.s64 	%rd1457, %rd1456, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1837,%dummy}, %rd1444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1838}, %rd1444;
	}
	shf.r.wrap.b32 	%r1839, %r1838, %r1837, 28;
	shf.r.wrap.b32 	%r1840, %r1837, %r1838, 28;
	mov.b64 	%rd1458, {%r1840, %r1839};
	shf.l.wrap.b32 	%r1841, %r1837, %r1838, 30;
	shf.l.wrap.b32 	%r1842, %r1838, %r1837, 30;
	mov.b64 	%rd1459, {%r1842, %r1841};
	xor.b64  	%rd1460, %rd1459, %rd1458;
	shf.l.wrap.b32 	%r1843, %r1837, %r1838, 25;
	shf.l.wrap.b32 	%r1844, %r1838, %r1837, 25;
	mov.b64 	%rd1461, {%r1844, %r1843};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	xor.b64  	%rd1463, %rd1444, %rd1396;
	xor.b64  	%rd1464, %rd1444, %rd1420;
	and.b64  	%rd1465, %rd1464, %rd1463;
	xor.b64  	%rd1466, %rd1465, %rd1444;
	add.s64 	%rd1467, %rd1456, %rd1466;
	add.s64 	%rd1468, %rd1467, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1845,%dummy}, %rd1457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1846}, %rd1457;
	}
	shf.r.wrap.b32 	%r1847, %r1846, %r1845, 14;
	shf.r.wrap.b32 	%r1848, %r1845, %r1846, 14;
	mov.b64 	%rd1469, {%r1848, %r1847};
	shf.r.wrap.b32 	%r1849, %r1846, %r1845, 18;
	shf.r.wrap.b32 	%r1850, %r1845, %r1846, 18;
	mov.b64 	%rd1470, {%r1850, %r1849};
	xor.b64  	%rd1471, %rd1470, %rd1469;
	shf.l.wrap.b32 	%r1851, %r1845, %r1846, 23;
	shf.l.wrap.b32 	%r1852, %r1846, %r1845, 23;
	mov.b64 	%rd1472, {%r1852, %r1851};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	xor.b64  	%rd1474, %rd1433, %rd1409;
	and.b64  	%rd1475, %rd1457, %rd1474;
	xor.b64  	%rd1476, %rd1475, %rd1409;
	add.s64 	%rd1477, %rd1385, %rd1163;
	add.s64 	%rd1478, %rd1477, %rd66;
	add.s64 	%rd1479, %rd1478, %rd1476;
	add.s64 	%rd1480, %rd1479, %rd1473;
	add.s64 	%rd1481, %rd1480, %rd1396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1853,%dummy}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1854}, %rd1468;
	}
	shf.r.wrap.b32 	%r1855, %r1854, %r1853, 28;
	shf.r.wrap.b32 	%r1856, %r1853, %r1854, 28;
	mov.b64 	%rd1482, {%r1856, %r1855};
	shf.l.wrap.b32 	%r1857, %r1853, %r1854, 30;
	shf.l.wrap.b32 	%r1858, %r1854, %r1853, 30;
	mov.b64 	%rd1483, {%r1858, %r1857};
	xor.b64  	%rd1484, %rd1483, %rd1482;
	shf.l.wrap.b32 	%r1859, %r1853, %r1854, 25;
	shf.l.wrap.b32 	%r1860, %r1854, %r1853, 25;
	mov.b64 	%rd1485, {%r1860, %r1859};
	xor.b64  	%rd1486, %rd1484, %rd1485;
	xor.b64  	%rd1487, %rd1468, %rd1420;
	xor.b64  	%rd1488, %rd1468, %rd1444;
	and.b64  	%rd1489, %rd1488, %rd1487;
	xor.b64  	%rd1490, %rd1489, %rd1468;
	add.s64 	%rd1491, %rd1480, %rd1490;
	add.s64 	%rd1492, %rd1491, %rd1486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1861,%dummy}, %rd1481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1862}, %rd1481;
	}
	shf.r.wrap.b32 	%r1863, %r1862, %r1861, 14;
	shf.r.wrap.b32 	%r1864, %r1861, %r1862, 14;
	mov.b64 	%rd1493, {%r1864, %r1863};
	shf.r.wrap.b32 	%r1865, %r1862, %r1861, 18;
	shf.r.wrap.b32 	%r1866, %r1861, %r1862, 18;
	mov.b64 	%rd1494, {%r1866, %r1865};
	xor.b64  	%rd1495, %rd1494, %rd1493;
	shf.l.wrap.b32 	%r1867, %r1861, %r1862, 23;
	shf.l.wrap.b32 	%r1868, %r1862, %r1861, 23;
	mov.b64 	%rd1496, {%r1868, %r1867};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	xor.b64  	%rd1498, %rd1457, %rd1433;
	and.b64  	%rd1499, %rd1481, %rd1498;
	xor.b64  	%rd1500, %rd1499, %rd1433;
	add.s64 	%rd1501, %rd1409, %rd1176;
	add.s64 	%rd1502, %rd1501, %rd67;
	add.s64 	%rd1503, %rd1502, %rd1500;
	add.s64 	%rd1504, %rd1503, %rd1497;
	add.s64 	%rd1505, %rd1504, %rd1420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1869,%dummy}, %rd1492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1870}, %rd1492;
	}
	shf.r.wrap.b32 	%r1871, %r1870, %r1869, 28;
	shf.r.wrap.b32 	%r1872, %r1869, %r1870, 28;
	mov.b64 	%rd1506, {%r1872, %r1871};
	shf.l.wrap.b32 	%r1873, %r1869, %r1870, 30;
	shf.l.wrap.b32 	%r1874, %r1870, %r1869, 30;
	mov.b64 	%rd1507, {%r1874, %r1873};
	xor.b64  	%rd1508, %rd1507, %rd1506;
	shf.l.wrap.b32 	%r1875, %r1869, %r1870, 25;
	shf.l.wrap.b32 	%r1876, %r1870, %r1869, 25;
	mov.b64 	%rd1509, {%r1876, %r1875};
	xor.b64  	%rd1510, %rd1508, %rd1509;
	xor.b64  	%rd1511, %rd1492, %rd1444;
	xor.b64  	%rd1512, %rd1492, %rd1468;
	and.b64  	%rd1513, %rd1512, %rd1511;
	xor.b64  	%rd1514, %rd1513, %rd1492;
	add.s64 	%rd1515, %rd1504, %rd1514;
	add.s64 	%rd1516, %rd1515, %rd1510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1877,%dummy}, %rd1505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1878}, %rd1505;
	}
	shf.r.wrap.b32 	%r1879, %r1878, %r1877, 14;
	shf.r.wrap.b32 	%r1880, %r1877, %r1878, 14;
	mov.b64 	%rd1517, {%r1880, %r1879};
	shf.r.wrap.b32 	%r1881, %r1878, %r1877, 18;
	shf.r.wrap.b32 	%r1882, %r1877, %r1878, 18;
	mov.b64 	%rd1518, {%r1882, %r1881};
	xor.b64  	%rd1519, %rd1518, %rd1517;
	shf.l.wrap.b32 	%r1883, %r1877, %r1878, 23;
	shf.l.wrap.b32 	%r1884, %r1878, %r1877, 23;
	mov.b64 	%rd1520, {%r1884, %r1883};
	xor.b64  	%rd1521, %rd1519, %rd1520;
	xor.b64  	%rd1522, %rd1481, %rd1457;
	and.b64  	%rd1523, %rd1505, %rd1522;
	xor.b64  	%rd1524, %rd1523, %rd1457;
	add.s64 	%rd1525, %rd1433, %rd1189;
	add.s64 	%rd1526, %rd1525, %rd68;
	add.s64 	%rd1527, %rd1526, %rd1524;
	add.s64 	%rd1528, %rd1527, %rd1521;
	add.s64 	%rd1529, %rd1528, %rd1444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1885,%dummy}, %rd1516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1886}, %rd1516;
	}
	shf.r.wrap.b32 	%r1887, %r1886, %r1885, 28;
	shf.r.wrap.b32 	%r1888, %r1885, %r1886, 28;
	mov.b64 	%rd1530, {%r1888, %r1887};
	shf.l.wrap.b32 	%r1889, %r1885, %r1886, 30;
	shf.l.wrap.b32 	%r1890, %r1886, %r1885, 30;
	mov.b64 	%rd1531, {%r1890, %r1889};
	xor.b64  	%rd1532, %rd1531, %rd1530;
	shf.l.wrap.b32 	%r1891, %r1885, %r1886, 25;
	shf.l.wrap.b32 	%r1892, %r1886, %r1885, 25;
	mov.b64 	%rd1533, {%r1892, %r1891};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	xor.b64  	%rd1535, %rd1516, %rd1468;
	xor.b64  	%rd1536, %rd1516, %rd1492;
	and.b64  	%rd1537, %rd1536, %rd1535;
	xor.b64  	%rd1538, %rd1537, %rd1516;
	add.s64 	%rd1539, %rd1528, %rd1538;
	add.s64 	%rd1540, %rd1539, %rd1534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1893,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1894}, %rd1529;
	}
	shf.r.wrap.b32 	%r1895, %r1894, %r1893, 14;
	shf.r.wrap.b32 	%r1896, %r1893, %r1894, 14;
	mov.b64 	%rd1541, {%r1896, %r1895};
	shf.r.wrap.b32 	%r1897, %r1894, %r1893, 18;
	shf.r.wrap.b32 	%r1898, %r1893, %r1894, 18;
	mov.b64 	%rd1542, {%r1898, %r1897};
	xor.b64  	%rd1543, %rd1542, %rd1541;
	shf.l.wrap.b32 	%r1899, %r1893, %r1894, 23;
	shf.l.wrap.b32 	%r1900, %r1894, %r1893, 23;
	mov.b64 	%rd1544, {%r1900, %r1899};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	xor.b64  	%rd1546, %rd1505, %rd1481;
	and.b64  	%rd1547, %rd1529, %rd1546;
	xor.b64  	%rd1548, %rd1547, %rd1481;
	add.s64 	%rd1549, %rd1457, %rd1202;
	add.s64 	%rd1550, %rd1549, %rd69;
	add.s64 	%rd1551, %rd1550, %rd1548;
	add.s64 	%rd1552, %rd1551, %rd1545;
	add.s64 	%rd1553, %rd1552, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1901,%dummy}, %rd1540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1902}, %rd1540;
	}
	shf.r.wrap.b32 	%r1903, %r1902, %r1901, 28;
	shf.r.wrap.b32 	%r1904, %r1901, %r1902, 28;
	mov.b64 	%rd1554, {%r1904, %r1903};
	shf.l.wrap.b32 	%r1905, %r1901, %r1902, 30;
	shf.l.wrap.b32 	%r1906, %r1902, %r1901, 30;
	mov.b64 	%rd1555, {%r1906, %r1905};
	xor.b64  	%rd1556, %rd1555, %rd1554;
	shf.l.wrap.b32 	%r1907, %r1901, %r1902, 25;
	shf.l.wrap.b32 	%r1908, %r1902, %r1901, 25;
	mov.b64 	%rd1557, {%r1908, %r1907};
	xor.b64  	%rd1558, %rd1556, %rd1557;
	xor.b64  	%rd1559, %rd1540, %rd1492;
	xor.b64  	%rd1560, %rd1540, %rd1516;
	and.b64  	%rd1561, %rd1560, %rd1559;
	xor.b64  	%rd1562, %rd1561, %rd1540;
	add.s64 	%rd1563, %rd1552, %rd1562;
	add.s64 	%rd1564, %rd1563, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1909,%dummy}, %rd1553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd1553;
	}
	shf.r.wrap.b32 	%r1911, %r1910, %r1909, 14;
	shf.r.wrap.b32 	%r1912, %r1909, %r1910, 14;
	mov.b64 	%rd1565, {%r1912, %r1911};
	shf.r.wrap.b32 	%r1913, %r1910, %r1909, 18;
	shf.r.wrap.b32 	%r1914, %r1909, %r1910, 18;
	mov.b64 	%rd1566, {%r1914, %r1913};
	xor.b64  	%rd1567, %rd1566, %rd1565;
	shf.l.wrap.b32 	%r1915, %r1909, %r1910, 23;
	shf.l.wrap.b32 	%r1916, %r1910, %r1909, 23;
	mov.b64 	%rd1568, {%r1916, %r1915};
	xor.b64  	%rd1569, %rd1567, %rd1568;
	xor.b64  	%rd1570, %rd1529, %rd1505;
	and.b64  	%rd1571, %rd1553, %rd1570;
	xor.b64  	%rd1572, %rd1571, %rd1505;
	add.s64 	%rd1573, %rd1481, %rd1215;
	add.s64 	%rd1574, %rd1573, %rd70;
	add.s64 	%rd1575, %rd1574, %rd1572;
	add.s64 	%rd1576, %rd1575, %rd1569;
	add.s64 	%rd1577, %rd1576, %rd1492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1917,%dummy}, %rd1564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1918}, %rd1564;
	}
	shf.r.wrap.b32 	%r1919, %r1918, %r1917, 28;
	shf.r.wrap.b32 	%r1920, %r1917, %r1918, 28;
	mov.b64 	%rd1578, {%r1920, %r1919};
	shf.l.wrap.b32 	%r1921, %r1917, %r1918, 30;
	shf.l.wrap.b32 	%r1922, %r1918, %r1917, 30;
	mov.b64 	%rd1579, {%r1922, %r1921};
	xor.b64  	%rd1580, %rd1579, %rd1578;
	shf.l.wrap.b32 	%r1923, %r1917, %r1918, 25;
	shf.l.wrap.b32 	%r1924, %r1918, %r1917, 25;
	mov.b64 	%rd1581, {%r1924, %r1923};
	xor.b64  	%rd1582, %rd1580, %rd1581;
	xor.b64  	%rd1583, %rd1564, %rd1516;
	xor.b64  	%rd1584, %rd1564, %rd1540;
	and.b64  	%rd1585, %rd1584, %rd1583;
	xor.b64  	%rd1586, %rd1585, %rd1564;
	add.s64 	%rd1587, %rd1576, %rd1586;
	add.s64 	%rd1588, %rd1587, %rd1582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1925,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1926}, %rd1577;
	}
	shf.r.wrap.b32 	%r1927, %r1926, %r1925, 14;
	shf.r.wrap.b32 	%r1928, %r1925, %r1926, 14;
	mov.b64 	%rd1589, {%r1928, %r1927};
	shf.r.wrap.b32 	%r1929, %r1926, %r1925, 18;
	shf.r.wrap.b32 	%r1930, %r1925, %r1926, 18;
	mov.b64 	%rd1590, {%r1930, %r1929};
	xor.b64  	%rd1591, %rd1590, %rd1589;
	shf.l.wrap.b32 	%r1931, %r1925, %r1926, 23;
	shf.l.wrap.b32 	%r1932, %r1926, %r1925, 23;
	mov.b64 	%rd1592, {%r1932, %r1931};
	xor.b64  	%rd1593, %rd1591, %rd1592;
	xor.b64  	%rd1594, %rd1553, %rd1529;
	and.b64  	%rd1595, %rd1577, %rd1594;
	xor.b64  	%rd1596, %rd1595, %rd1529;
	add.s64 	%rd1597, %rd1505, %rd1228;
	add.s64 	%rd1598, %rd1597, %rd71;
	add.s64 	%rd1599, %rd1598, %rd1596;
	add.s64 	%rd1600, %rd1599, %rd1593;
	add.s64 	%rd1601, %rd1600, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1933,%dummy}, %rd1588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1934}, %rd1588;
	}
	shf.r.wrap.b32 	%r1935, %r1934, %r1933, 28;
	shf.r.wrap.b32 	%r1936, %r1933, %r1934, 28;
	mov.b64 	%rd1602, {%r1936, %r1935};
	shf.l.wrap.b32 	%r1937, %r1933, %r1934, 30;
	shf.l.wrap.b32 	%r1938, %r1934, %r1933, 30;
	mov.b64 	%rd1603, {%r1938, %r1937};
	xor.b64  	%rd1604, %rd1603, %rd1602;
	shf.l.wrap.b32 	%r1939, %r1933, %r1934, 25;
	shf.l.wrap.b32 	%r1940, %r1934, %r1933, 25;
	mov.b64 	%rd1605, {%r1940, %r1939};
	xor.b64  	%rd1606, %rd1604, %rd1605;
	xor.b64  	%rd1607, %rd1588, %rd1540;
	xor.b64  	%rd1608, %rd1588, %rd1564;
	and.b64  	%rd1609, %rd1608, %rd1607;
	xor.b64  	%rd1610, %rd1609, %rd1588;
	add.s64 	%rd1611, %rd1600, %rd1610;
	add.s64 	%rd1612, %rd1611, %rd1606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1941,%dummy}, %rd1215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1942}, %rd1215;
	}
	shf.r.wrap.b32 	%r1943, %r1942, %r1941, 19;
	shf.r.wrap.b32 	%r1944, %r1941, %r1942, 19;
	mov.b64 	%rd1613, {%r1944, %r1943};
	shf.l.wrap.b32 	%r1945, %r1941, %r1942, 3;
	shf.l.wrap.b32 	%r1946, %r1942, %r1941, 3;
	mov.b64 	%rd1614, {%r1946, %r1945};
	shr.u64 	%rd1615, %rd1215, 6;
	xor.b64  	%rd1616, %rd1613, %rd1615;
	xor.b64  	%rd1617, %rd1616, %rd1614;
	shf.r.wrap.b32 	%r1947, %r1560, %r1559, 1;
	shf.r.wrap.b32 	%r1948, %r1559, %r1560, 1;
	mov.b64 	%rd1618, {%r1948, %r1947};
	shf.r.wrap.b32 	%r1949, %r1560, %r1559, 8;
	shf.r.wrap.b32 	%r1950, %r1559, %r1560, 8;
	mov.b64 	%rd1619, {%r1950, %r1949};
	shr.u64 	%rd1620, %rd1056, 7;
	xor.b64  	%rd1621, %rd1618, %rd1620;
	xor.b64  	%rd1622, %rd1621, %rd1619;
	add.s64 	%rd1623, %rd1043, %rd1150;
	add.s64 	%rd1624, %rd1623, %rd1617;
	add.s64 	%rd1625, %rd1624, %rd1622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1951,%dummy}, %rd1228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1952}, %rd1228;
	}
	shf.r.wrap.b32 	%r1953, %r1952, %r1951, 19;
	shf.r.wrap.b32 	%r1954, %r1951, %r1952, 19;
	mov.b64 	%rd1626, {%r1954, %r1953};
	shf.l.wrap.b32 	%r1955, %r1951, %r1952, 3;
	shf.l.wrap.b32 	%r1956, %r1952, %r1951, 3;
	mov.b64 	%rd1627, {%r1956, %r1955};
	shr.u64 	%rd1628, %rd1228, 6;
	xor.b64  	%rd1629, %rd1626, %rd1628;
	xor.b64  	%rd1630, %rd1629, %rd1627;
	shf.r.wrap.b32 	%r1957, %r1570, %r1569, 1;
	shf.r.wrap.b32 	%r1958, %r1569, %r1570, 1;
	mov.b64 	%rd1631, {%r1958, %r1957};
	shf.r.wrap.b32 	%r1959, %r1570, %r1569, 8;
	shf.r.wrap.b32 	%r1960, %r1569, %r1570, 8;
	mov.b64 	%rd1632, {%r1960, %r1959};
	shr.u64 	%rd1633, %rd1064, 7;
	xor.b64  	%rd1634, %rd1631, %rd1633;
	xor.b64  	%rd1635, %rd1634, %rd1632;
	add.s64 	%rd1636, %rd1056, %rd1163;
	add.s64 	%rd1637, %rd1636, %rd1630;
	add.s64 	%rd1638, %rd1637, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1961,%dummy}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1962}, %rd1625;
	}
	shf.r.wrap.b32 	%r1963, %r1962, %r1961, 19;
	shf.r.wrap.b32 	%r1964, %r1961, %r1962, 19;
	mov.b64 	%rd1639, {%r1964, %r1963};
	shf.l.wrap.b32 	%r1965, %r1961, %r1962, 3;
	shf.l.wrap.b32 	%r1966, %r1962, %r1961, 3;
	mov.b64 	%rd1640, {%r1966, %r1965};
	shr.u64 	%rd1641, %rd1625, 6;
	xor.b64  	%rd1642, %rd1639, %rd1641;
	xor.b64  	%rd1643, %rd1642, %rd1640;
	shf.r.wrap.b32 	%r1967, %r1576, %r1575, 1;
	shf.r.wrap.b32 	%r1968, %r1575, %r1576, 1;
	mov.b64 	%rd1644, {%r1968, %r1967};
	shf.r.wrap.b32 	%r1969, %r1576, %r1575, 8;
	shf.r.wrap.b32 	%r1970, %r1575, %r1576, 8;
	mov.b64 	%rd1645, {%r1970, %r1969};
	shr.u64 	%rd1646, %rd1077, 7;
	xor.b64  	%rd1647, %rd1644, %rd1646;
	xor.b64  	%rd1648, %rd1647, %rd1645;
	add.s64 	%rd1649, %rd1064, %rd1176;
	add.s64 	%rd1650, %rd1649, %rd1643;
	add.s64 	%rd1651, %rd1650, %rd1648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1971,%dummy}, %rd1638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1972}, %rd1638;
	}
	shf.r.wrap.b32 	%r1973, %r1972, %r1971, 19;
	shf.r.wrap.b32 	%r1974, %r1971, %r1972, 19;
	mov.b64 	%rd1652, {%r1974, %r1973};
	shf.l.wrap.b32 	%r1975, %r1971, %r1972, 3;
	shf.l.wrap.b32 	%r1976, %r1972, %r1971, 3;
	mov.b64 	%rd1653, {%r1976, %r1975};
	shr.u64 	%rd1654, %rd1638, 6;
	xor.b64  	%rd1655, %rd1652, %rd1654;
	xor.b64  	%rd1656, %rd1655, %rd1653;
	shf.r.wrap.b32 	%r1977, %r1586, %r1585, 1;
	shf.r.wrap.b32 	%r1978, %r1585, %r1586, 1;
	mov.b64 	%rd1657, {%r1978, %r1977};
	shf.r.wrap.b32 	%r1979, %r1586, %r1585, 8;
	shf.r.wrap.b32 	%r1980, %r1585, %r1586, 8;
	mov.b64 	%rd1658, {%r1980, %r1979};
	shr.u64 	%rd1659, %rd1085, 7;
	xor.b64  	%rd1660, %rd1657, %rd1659;
	xor.b64  	%rd1661, %rd1660, %rd1658;
	add.s64 	%rd1662, %rd1077, %rd1189;
	add.s64 	%rd1663, %rd1662, %rd1656;
	add.s64 	%rd1664, %rd1663, %rd1661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1981,%dummy}, %rd1651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1982}, %rd1651;
	}
	shf.r.wrap.b32 	%r1983, %r1982, %r1981, 19;
	shf.r.wrap.b32 	%r1984, %r1981, %r1982, 19;
	mov.b64 	%rd1665, {%r1984, %r1983};
	shf.l.wrap.b32 	%r1985, %r1981, %r1982, 3;
	shf.l.wrap.b32 	%r1986, %r1982, %r1981, 3;
	mov.b64 	%rd1666, {%r1986, %r1985};
	shr.u64 	%rd1667, %rd1651, 6;
	xor.b64  	%rd1668, %rd1665, %rd1667;
	xor.b64  	%rd1669, %rd1668, %rd1666;
	shf.r.wrap.b32 	%r1987, %r1596, %r1595, 1;
	shf.r.wrap.b32 	%r1988, %r1595, %r1596, 1;
	mov.b64 	%rd1670, {%r1988, %r1987};
	shf.r.wrap.b32 	%r1989, %r1596, %r1595, 8;
	shf.r.wrap.b32 	%r1990, %r1595, %r1596, 8;
	mov.b64 	%rd1671, {%r1990, %r1989};
	shr.u64 	%rd1672, %rd1098, 7;
	xor.b64  	%rd1673, %rd1670, %rd1672;
	xor.b64  	%rd1674, %rd1673, %rd1671;
	add.s64 	%rd1675, %rd1085, %rd1202;
	add.s64 	%rd1676, %rd1675, %rd1669;
	add.s64 	%rd1677, %rd1676, %rd1674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1991,%dummy}, %rd1664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1992}, %rd1664;
	}
	shf.r.wrap.b32 	%r1993, %r1992, %r1991, 19;
	shf.r.wrap.b32 	%r1994, %r1991, %r1992, 19;
	mov.b64 	%rd1678, {%r1994, %r1993};
	shf.l.wrap.b32 	%r1995, %r1991, %r1992, 3;
	shf.l.wrap.b32 	%r1996, %r1992, %r1991, 3;
	mov.b64 	%rd1679, {%r1996, %r1995};
	shr.u64 	%rd1680, %rd1664, 6;
	xor.b64  	%rd1681, %rd1678, %rd1680;
	xor.b64  	%rd1682, %rd1681, %rd1679;
	shf.r.wrap.b32 	%r1997, %r1606, %r1605, 1;
	shf.r.wrap.b32 	%r1998, %r1605, %r1606, 1;
	mov.b64 	%rd1683, {%r1998, %r1997};
	shf.r.wrap.b32 	%r1999, %r1606, %r1605, 8;
	shf.r.wrap.b32 	%r2000, %r1605, %r1606, 8;
	mov.b64 	%rd1684, {%r2000, %r1999};
	shr.u64 	%rd1685, %rd1111, 7;
	xor.b64  	%rd1686, %rd1683, %rd1685;
	xor.b64  	%rd1687, %rd1686, %rd1684;
	add.s64 	%rd1688, %rd1098, %rd1215;
	add.s64 	%rd1689, %rd1688, %rd1682;
	add.s64 	%rd1690, %rd1689, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2001,%dummy}, %rd1677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2002}, %rd1677;
	}
	shf.r.wrap.b32 	%r2003, %r2002, %r2001, 19;
	shf.r.wrap.b32 	%r2004, %r2001, %r2002, 19;
	mov.b64 	%rd1691, {%r2004, %r2003};
	shf.l.wrap.b32 	%r2005, %r2001, %r2002, 3;
	shf.l.wrap.b32 	%r2006, %r2002, %r2001, 3;
	mov.b64 	%rd1692, {%r2006, %r2005};
	shr.u64 	%rd1693, %rd1677, 6;
	xor.b64  	%rd1694, %rd1691, %rd1693;
	xor.b64  	%rd1695, %rd1694, %rd1692;
	shf.r.wrap.b32 	%r2007, %r1616, %r1615, 1;
	shf.r.wrap.b32 	%r2008, %r1615, %r1616, 1;
	mov.b64 	%rd1696, {%r2008, %r2007};
	shf.r.wrap.b32 	%r2009, %r1616, %r1615, 8;
	shf.r.wrap.b32 	%r2010, %r1615, %r1616, 8;
	mov.b64 	%rd1697, {%r2010, %r2009};
	shr.u64 	%rd1698, %rd1124, 7;
	xor.b64  	%rd1699, %rd1696, %rd1698;
	xor.b64  	%rd1700, %rd1699, %rd1697;
	add.s64 	%rd1701, %rd1111, %rd1228;
	add.s64 	%rd1702, %rd1701, %rd1695;
	add.s64 	%rd1703, %rd1702, %rd1700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2011,%dummy}, %rd1690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2012}, %rd1690;
	}
	shf.r.wrap.b32 	%r2013, %r2012, %r2011, 19;
	shf.r.wrap.b32 	%r2014, %r2011, %r2012, 19;
	mov.b64 	%rd1704, {%r2014, %r2013};
	shf.l.wrap.b32 	%r2015, %r2011, %r2012, 3;
	shf.l.wrap.b32 	%r2016, %r2012, %r2011, 3;
	mov.b64 	%rd1705, {%r2016, %r2015};
	shr.u64 	%rd1706, %rd1690, 6;
	xor.b64  	%rd1707, %rd1704, %rd1706;
	xor.b64  	%rd1708, %rd1707, %rd1705;
	shf.r.wrap.b32 	%r2017, %r1626, %r1625, 1;
	shf.r.wrap.b32 	%r2018, %r1625, %r1626, 1;
	mov.b64 	%rd1709, {%r2018, %r2017};
	shf.r.wrap.b32 	%r2019, %r1626, %r1625, 8;
	shf.r.wrap.b32 	%r2020, %r1625, %r1626, 8;
	mov.b64 	%rd1710, {%r2020, %r2019};
	shr.u64 	%rd1711, %rd1137, 7;
	xor.b64  	%rd1712, %rd1709, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1710;
	add.s64 	%rd1714, %rd1625, %rd1124;
	add.s64 	%rd1715, %rd1714, %rd1708;
	add.s64 	%rd1716, %rd1715, %rd1713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2021,%dummy}, %rd1703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2022}, %rd1703;
	}
	shf.r.wrap.b32 	%r2023, %r2022, %r2021, 19;
	shf.r.wrap.b32 	%r2024, %r2021, %r2022, 19;
	mov.b64 	%rd1717, {%r2024, %r2023};
	shf.l.wrap.b32 	%r2025, %r2021, %r2022, 3;
	shf.l.wrap.b32 	%r2026, %r2022, %r2021, 3;
	mov.b64 	%rd1718, {%r2026, %r2025};
	shr.u64 	%rd1719, %rd1703, 6;
	xor.b64  	%rd1720, %rd1717, %rd1719;
	xor.b64  	%rd1721, %rd1720, %rd1718;
	shf.r.wrap.b32 	%r2027, %r1636, %r1635, 1;
	shf.r.wrap.b32 	%r2028, %r1635, %r1636, 1;
	mov.b64 	%rd1722, {%r2028, %r2027};
	shf.r.wrap.b32 	%r2029, %r1636, %r1635, 8;
	shf.r.wrap.b32 	%r2030, %r1635, %r1636, 8;
	mov.b64 	%rd1723, {%r2030, %r2029};
	shr.u64 	%rd1724, %rd1150, 7;
	xor.b64  	%rd1725, %rd1722, %rd1724;
	xor.b64  	%rd1726, %rd1725, %rd1723;
	add.s64 	%rd1727, %rd1638, %rd1137;
	add.s64 	%rd1728, %rd1727, %rd1721;
	add.s64 	%rd1729, %rd1728, %rd1726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2031,%dummy}, %rd1716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2032}, %rd1716;
	}
	shf.r.wrap.b32 	%r2033, %r2032, %r2031, 19;
	shf.r.wrap.b32 	%r2034, %r2031, %r2032, 19;
	mov.b64 	%rd1730, {%r2034, %r2033};
	shf.l.wrap.b32 	%r2035, %r2031, %r2032, 3;
	shf.l.wrap.b32 	%r2036, %r2032, %r2031, 3;
	mov.b64 	%rd1731, {%r2036, %r2035};
	shr.u64 	%rd1732, %rd1716, 6;
	xor.b64  	%rd1733, %rd1730, %rd1732;
	xor.b64  	%rd1734, %rd1733, %rd1731;
	shf.r.wrap.b32 	%r2037, %r1646, %r1645, 1;
	shf.r.wrap.b32 	%r2038, %r1645, %r1646, 1;
	mov.b64 	%rd1735, {%r2038, %r2037};
	shf.r.wrap.b32 	%r2039, %r1646, %r1645, 8;
	shf.r.wrap.b32 	%r2040, %r1645, %r1646, 8;
	mov.b64 	%rd1736, {%r2040, %r2039};
	shr.u64 	%rd1737, %rd1163, 7;
	xor.b64  	%rd1738, %rd1735, %rd1737;
	xor.b64  	%rd1739, %rd1738, %rd1736;
	add.s64 	%rd1740, %rd1651, %rd1150;
	add.s64 	%rd1741, %rd1740, %rd1734;
	add.s64 	%rd1742, %rd1741, %rd1739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2041,%dummy}, %rd1729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2042}, %rd1729;
	}
	shf.r.wrap.b32 	%r2043, %r2042, %r2041, 19;
	shf.r.wrap.b32 	%r2044, %r2041, %r2042, 19;
	mov.b64 	%rd1743, {%r2044, %r2043};
	shf.l.wrap.b32 	%r2045, %r2041, %r2042, 3;
	shf.l.wrap.b32 	%r2046, %r2042, %r2041, 3;
	mov.b64 	%rd1744, {%r2046, %r2045};
	shr.u64 	%rd1745, %rd1729, 6;
	xor.b64  	%rd1746, %rd1743, %rd1745;
	xor.b64  	%rd1747, %rd1746, %rd1744;
	shf.r.wrap.b32 	%r2047, %r1656, %r1655, 1;
	shf.r.wrap.b32 	%r2048, %r1655, %r1656, 1;
	mov.b64 	%rd1748, {%r2048, %r2047};
	shf.r.wrap.b32 	%r2049, %r1656, %r1655, 8;
	shf.r.wrap.b32 	%r2050, %r1655, %r1656, 8;
	mov.b64 	%rd1749, {%r2050, %r2049};
	shr.u64 	%rd1750, %rd1176, 7;
	xor.b64  	%rd1751, %rd1748, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1749;
	add.s64 	%rd1753, %rd1664, %rd1163;
	add.s64 	%rd1754, %rd1753, %rd1747;
	add.s64 	%rd1755, %rd1754, %rd1752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2051,%dummy}, %rd1742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2052}, %rd1742;
	}
	shf.r.wrap.b32 	%r2053, %r2052, %r2051, 19;
	shf.r.wrap.b32 	%r2054, %r2051, %r2052, 19;
	mov.b64 	%rd1756, {%r2054, %r2053};
	shf.l.wrap.b32 	%r2055, %r2051, %r2052, 3;
	shf.l.wrap.b32 	%r2056, %r2052, %r2051, 3;
	mov.b64 	%rd1757, {%r2056, %r2055};
	shr.u64 	%rd1758, %rd1742, 6;
	xor.b64  	%rd1759, %rd1756, %rd1758;
	xor.b64  	%rd1760, %rd1759, %rd1757;
	shf.r.wrap.b32 	%r2057, %r1666, %r1665, 1;
	shf.r.wrap.b32 	%r2058, %r1665, %r1666, 1;
	mov.b64 	%rd1761, {%r2058, %r2057};
	shf.r.wrap.b32 	%r2059, %r1666, %r1665, 8;
	shf.r.wrap.b32 	%r2060, %r1665, %r1666, 8;
	mov.b64 	%rd1762, {%r2060, %r2059};
	shr.u64 	%rd1763, %rd1189, 7;
	xor.b64  	%rd1764, %rd1761, %rd1763;
	xor.b64  	%rd1765, %rd1764, %rd1762;
	add.s64 	%rd1766, %rd1677, %rd1176;
	add.s64 	%rd1767, %rd1766, %rd1760;
	add.s64 	%rd1768, %rd1767, %rd1765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2061,%dummy}, %rd1755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2062}, %rd1755;
	}
	shf.r.wrap.b32 	%r2063, %r2062, %r2061, 19;
	shf.r.wrap.b32 	%r2064, %r2061, %r2062, 19;
	mov.b64 	%rd1769, {%r2064, %r2063};
	shf.l.wrap.b32 	%r2065, %r2061, %r2062, 3;
	shf.l.wrap.b32 	%r2066, %r2062, %r2061, 3;
	mov.b64 	%rd1770, {%r2066, %r2065};
	shr.u64 	%rd1771, %rd1755, 6;
	xor.b64  	%rd1772, %rd1769, %rd1771;
	xor.b64  	%rd1773, %rd1772, %rd1770;
	shf.r.wrap.b32 	%r2067, %r1676, %r1675, 1;
	shf.r.wrap.b32 	%r2068, %r1675, %r1676, 1;
	mov.b64 	%rd1774, {%r2068, %r2067};
	shf.r.wrap.b32 	%r2069, %r1676, %r1675, 8;
	shf.r.wrap.b32 	%r2070, %r1675, %r1676, 8;
	mov.b64 	%rd1775, {%r2070, %r2069};
	shr.u64 	%rd1776, %rd1202, 7;
	xor.b64  	%rd1777, %rd1774, %rd1776;
	xor.b64  	%rd1778, %rd1777, %rd1775;
	add.s64 	%rd1779, %rd1690, %rd1189;
	add.s64 	%rd1780, %rd1779, %rd1773;
	add.s64 	%rd1781, %rd1780, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2071,%dummy}, %rd1768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2072}, %rd1768;
	}
	shf.r.wrap.b32 	%r2073, %r2072, %r2071, 19;
	shf.r.wrap.b32 	%r2074, %r2071, %r2072, 19;
	mov.b64 	%rd1782, {%r2074, %r2073};
	shf.l.wrap.b32 	%r2075, %r2071, %r2072, 3;
	shf.l.wrap.b32 	%r2076, %r2072, %r2071, 3;
	mov.b64 	%rd1783, {%r2076, %r2075};
	shr.u64 	%rd1784, %rd1768, 6;
	xor.b64  	%rd1785, %rd1782, %rd1784;
	xor.b64  	%rd1786, %rd1785, %rd1783;
	shf.r.wrap.b32 	%r2077, %r1942, %r1941, 1;
	shf.r.wrap.b32 	%r2078, %r1941, %r1942, 1;
	mov.b64 	%rd1787, {%r2078, %r2077};
	shf.r.wrap.b32 	%r2079, %r1942, %r1941, 8;
	shf.r.wrap.b32 	%r2080, %r1941, %r1942, 8;
	mov.b64 	%rd1788, {%r2080, %r2079};
	shr.u64 	%rd1789, %rd1215, 7;
	xor.b64  	%rd1790, %rd1787, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1788;
	add.s64 	%rd1792, %rd1703, %rd1202;
	add.s64 	%rd1793, %rd1792, %rd1786;
	add.s64 	%rd1794, %rd1793, %rd1791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2081,%dummy}, %rd1781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2082}, %rd1781;
	}
	shf.r.wrap.b32 	%r2083, %r2082, %r2081, 19;
	shf.r.wrap.b32 	%r2084, %r2081, %r2082, 19;
	mov.b64 	%rd1795, {%r2084, %r2083};
	shf.l.wrap.b32 	%r2085, %r2081, %r2082, 3;
	shf.l.wrap.b32 	%r2086, %r2082, %r2081, 3;
	mov.b64 	%rd1796, {%r2086, %r2085};
	shr.u64 	%rd1797, %rd1781, 6;
	xor.b64  	%rd1798, %rd1795, %rd1797;
	xor.b64  	%rd1799, %rd1798, %rd1796;
	shf.r.wrap.b32 	%r2087, %r1952, %r1951, 1;
	shf.r.wrap.b32 	%r2088, %r1951, %r1952, 1;
	mov.b64 	%rd1800, {%r2088, %r2087};
	shf.r.wrap.b32 	%r2089, %r1952, %r1951, 8;
	shf.r.wrap.b32 	%r2090, %r1951, %r1952, 8;
	mov.b64 	%rd1801, {%r2090, %r2089};
	shr.u64 	%rd1802, %rd1228, 7;
	xor.b64  	%rd1803, %rd1800, %rd1802;
	xor.b64  	%rd1804, %rd1803, %rd1801;
	add.s64 	%rd1805, %rd1716, %rd1215;
	add.s64 	%rd1806, %rd1805, %rd1799;
	add.s64 	%rd1807, %rd1806, %rd1804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2091,%dummy}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2092}, %rd1794;
	}
	shf.r.wrap.b32 	%r2093, %r2092, %r2091, 19;
	shf.r.wrap.b32 	%r2094, %r2091, %r2092, 19;
	mov.b64 	%rd1808, {%r2094, %r2093};
	shf.l.wrap.b32 	%r2095, %r2091, %r2092, 3;
	shf.l.wrap.b32 	%r2096, %r2092, %r2091, 3;
	mov.b64 	%rd1809, {%r2096, %r2095};
	shr.u64 	%rd1810, %rd1794, 6;
	xor.b64  	%rd1811, %rd1808, %rd1810;
	xor.b64  	%rd1812, %rd1811, %rd1809;
	shf.r.wrap.b32 	%r2097, %r1962, %r1961, 1;
	shf.r.wrap.b32 	%r2098, %r1961, %r1962, 1;
	mov.b64 	%rd1813, {%r2098, %r2097};
	shf.r.wrap.b32 	%r2099, %r1962, %r1961, 8;
	shf.r.wrap.b32 	%r2100, %r1961, %r1962, 8;
	mov.b64 	%rd1814, {%r2100, %r2099};
	shr.u64 	%rd1815, %rd1625, 7;
	xor.b64  	%rd1816, %rd1813, %rd1815;
	xor.b64  	%rd1817, %rd1816, %rd1814;
	add.s64 	%rd1818, %rd1729, %rd1228;
	add.s64 	%rd1819, %rd1818, %rd1812;
	add.s64 	%rd1820, %rd1819, %rd1817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2101,%dummy}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2102}, %rd1601;
	}
	shf.r.wrap.b32 	%r2103, %r2102, %r2101, 14;
	shf.r.wrap.b32 	%r2104, %r2101, %r2102, 14;
	mov.b64 	%rd1821, {%r2104, %r2103};
	shf.r.wrap.b32 	%r2105, %r2102, %r2101, 18;
	shf.r.wrap.b32 	%r2106, %r2101, %r2102, 18;
	mov.b64 	%rd1822, {%r2106, %r2105};
	xor.b64  	%rd1823, %rd1822, %rd1821;
	shf.l.wrap.b32 	%r2107, %r2101, %r2102, 23;
	shf.l.wrap.b32 	%r2108, %r2102, %r2101, 23;
	mov.b64 	%rd1824, {%r2108, %r2107};
	xor.b64  	%rd1825, %rd1823, %rd1824;
	xor.b64  	%rd1826, %rd1553, %rd1577;
	and.b64  	%rd1827, %rd1826, %rd1601;
	xor.b64  	%rd1828, %rd1827, %rd1553;
	add.s64 	%rd1829, %rd1828, %rd1529;
	add.s64 	%rd1830, %rd1829, %rd1625;
	add.s64 	%rd1831, %rd1830, %rd72;
	add.s64 	%rd1832, %rd1831, %rd1825;
	add.s64 	%rd1833, %rd1832, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2109,%dummy}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2110}, %rd1612;
	}
	shf.r.wrap.b32 	%r2111, %r2110, %r2109, 28;
	shf.r.wrap.b32 	%r2112, %r2109, %r2110, 28;
	mov.b64 	%rd1834, {%r2112, %r2111};
	shf.l.wrap.b32 	%r2113, %r2109, %r2110, 30;
	shf.l.wrap.b32 	%r2114, %r2110, %r2109, 30;
	mov.b64 	%rd1835, {%r2114, %r2113};
	xor.b64  	%rd1836, %rd1835, %rd1834;
	shf.l.wrap.b32 	%r2115, %r2109, %r2110, 25;
	shf.l.wrap.b32 	%r2116, %r2110, %r2109, 25;
	mov.b64 	%rd1837, {%r2116, %r2115};
	xor.b64  	%rd1838, %rd1836, %rd1837;
	xor.b64  	%rd1839, %rd1612, %rd1564;
	xor.b64  	%rd1840, %rd1612, %rd1588;
	and.b64  	%rd1841, %rd1840, %rd1839;
	xor.b64  	%rd1842, %rd1841, %rd1612;
	add.s64 	%rd1843, %rd1832, %rd1842;
	add.s64 	%rd1844, %rd1843, %rd1838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2117,%dummy}, %rd1833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2118}, %rd1833;
	}
	shf.r.wrap.b32 	%r2119, %r2118, %r2117, 14;
	shf.r.wrap.b32 	%r2120, %r2117, %r2118, 14;
	mov.b64 	%rd1845, {%r2120, %r2119};
	shf.r.wrap.b32 	%r2121, %r2118, %r2117, 18;
	shf.r.wrap.b32 	%r2122, %r2117, %r2118, 18;
	mov.b64 	%rd1846, {%r2122, %r2121};
	xor.b64  	%rd1847, %rd1846, %rd1845;
	shf.l.wrap.b32 	%r2123, %r2117, %r2118, 23;
	shf.l.wrap.b32 	%r2124, %r2118, %r2117, 23;
	mov.b64 	%rd1848, {%r2124, %r2123};
	xor.b64  	%rd1849, %rd1847, %rd1848;
	xor.b64  	%rd1850, %rd1577, %rd1601;
	and.b64  	%rd1851, %rd1833, %rd1850;
	xor.b64  	%rd1852, %rd1851, %rd1577;
	add.s64 	%rd1853, %rd1638, %rd1553;
	add.s64 	%rd1854, %rd1853, %rd73;
	add.s64 	%rd1855, %rd1854, %rd1852;
	add.s64 	%rd1856, %rd1855, %rd1849;
	add.s64 	%rd1857, %rd1856, %rd1564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2125,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2126}, %rd1844;
	}
	shf.r.wrap.b32 	%r2127, %r2126, %r2125, 28;
	shf.r.wrap.b32 	%r2128, %r2125, %r2126, 28;
	mov.b64 	%rd1858, {%r2128, %r2127};
	shf.l.wrap.b32 	%r2129, %r2125, %r2126, 30;
	shf.l.wrap.b32 	%r2130, %r2126, %r2125, 30;
	mov.b64 	%rd1859, {%r2130, %r2129};
	xor.b64  	%rd1860, %rd1859, %rd1858;
	shf.l.wrap.b32 	%r2131, %r2125, %r2126, 25;
	shf.l.wrap.b32 	%r2132, %r2126, %r2125, 25;
	mov.b64 	%rd1861, {%r2132, %r2131};
	xor.b64  	%rd1862, %rd1860, %rd1861;
	xor.b64  	%rd1863, %rd1844, %rd1588;
	xor.b64  	%rd1864, %rd1844, %rd1612;
	and.b64  	%rd1865, %rd1864, %rd1863;
	xor.b64  	%rd1866, %rd1865, %rd1844;
	add.s64 	%rd1867, %rd1856, %rd1866;
	add.s64 	%rd1868, %rd1867, %rd1862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2133,%dummy}, %rd1857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2134}, %rd1857;
	}
	shf.r.wrap.b32 	%r2135, %r2134, %r2133, 14;
	shf.r.wrap.b32 	%r2136, %r2133, %r2134, 14;
	mov.b64 	%rd1869, {%r2136, %r2135};
	shf.r.wrap.b32 	%r2137, %r2134, %r2133, 18;
	shf.r.wrap.b32 	%r2138, %r2133, %r2134, 18;
	mov.b64 	%rd1870, {%r2138, %r2137};
	xor.b64  	%rd1871, %rd1870, %rd1869;
	shf.l.wrap.b32 	%r2139, %r2133, %r2134, 23;
	shf.l.wrap.b32 	%r2140, %r2134, %r2133, 23;
	mov.b64 	%rd1872, {%r2140, %r2139};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	xor.b64  	%rd1874, %rd1833, %rd1601;
	and.b64  	%rd1875, %rd1857, %rd1874;
	xor.b64  	%rd1876, %rd1875, %rd1601;
	add.s64 	%rd1877, %rd1651, %rd1577;
	add.s64 	%rd1878, %rd1877, %rd74;
	add.s64 	%rd1879, %rd1878, %rd1876;
	add.s64 	%rd1880, %rd1879, %rd1873;
	add.s64 	%rd1881, %rd1880, %rd1588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2141,%dummy}, %rd1868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2142}, %rd1868;
	}
	shf.r.wrap.b32 	%r2143, %r2142, %r2141, 28;
	shf.r.wrap.b32 	%r2144, %r2141, %r2142, 28;
	mov.b64 	%rd1882, {%r2144, %r2143};
	shf.l.wrap.b32 	%r2145, %r2141, %r2142, 30;
	shf.l.wrap.b32 	%r2146, %r2142, %r2141, 30;
	mov.b64 	%rd1883, {%r2146, %r2145};
	xor.b64  	%rd1884, %rd1883, %rd1882;
	shf.l.wrap.b32 	%r2147, %r2141, %r2142, 25;
	shf.l.wrap.b32 	%r2148, %r2142, %r2141, 25;
	mov.b64 	%rd1885, {%r2148, %r2147};
	xor.b64  	%rd1886, %rd1884, %rd1885;
	xor.b64  	%rd1887, %rd1868, %rd1612;
	xor.b64  	%rd1888, %rd1868, %rd1844;
	and.b64  	%rd1889, %rd1888, %rd1887;
	xor.b64  	%rd1890, %rd1889, %rd1868;
	add.s64 	%rd1891, %rd1880, %rd1890;
	add.s64 	%rd1892, %rd1891, %rd1886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2149,%dummy}, %rd1881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2150}, %rd1881;
	}
	shf.r.wrap.b32 	%r2151, %r2150, %r2149, 14;
	shf.r.wrap.b32 	%r2152, %r2149, %r2150, 14;
	mov.b64 	%rd1893, {%r2152, %r2151};
	shf.r.wrap.b32 	%r2153, %r2150, %r2149, 18;
	shf.r.wrap.b32 	%r2154, %r2149, %r2150, 18;
	mov.b64 	%rd1894, {%r2154, %r2153};
	xor.b64  	%rd1895, %rd1894, %rd1893;
	shf.l.wrap.b32 	%r2155, %r2149, %r2150, 23;
	shf.l.wrap.b32 	%r2156, %r2150, %r2149, 23;
	mov.b64 	%rd1896, {%r2156, %r2155};
	xor.b64  	%rd1897, %rd1895, %rd1896;
	xor.b64  	%rd1898, %rd1857, %rd1833;
	and.b64  	%rd1899, %rd1881, %rd1898;
	xor.b64  	%rd1900, %rd1899, %rd1833;
	add.s64 	%rd1901, %rd1664, %rd1601;
	add.s64 	%rd1902, %rd1901, %rd75;
	add.s64 	%rd1903, %rd1902, %rd1900;
	add.s64 	%rd1904, %rd1903, %rd1897;
	add.s64 	%rd1905, %rd1904, %rd1612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2157,%dummy}, %rd1892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2158}, %rd1892;
	}
	shf.r.wrap.b32 	%r2159, %r2158, %r2157, 28;
	shf.r.wrap.b32 	%r2160, %r2157, %r2158, 28;
	mov.b64 	%rd1906, {%r2160, %r2159};
	shf.l.wrap.b32 	%r2161, %r2157, %r2158, 30;
	shf.l.wrap.b32 	%r2162, %r2158, %r2157, 30;
	mov.b64 	%rd1907, {%r2162, %r2161};
	xor.b64  	%rd1908, %rd1907, %rd1906;
	shf.l.wrap.b32 	%r2163, %r2157, %r2158, 25;
	shf.l.wrap.b32 	%r2164, %r2158, %r2157, 25;
	mov.b64 	%rd1909, {%r2164, %r2163};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	xor.b64  	%rd1911, %rd1892, %rd1844;
	xor.b64  	%rd1912, %rd1892, %rd1868;
	and.b64  	%rd1913, %rd1912, %rd1911;
	xor.b64  	%rd1914, %rd1913, %rd1892;
	add.s64 	%rd1915, %rd1904, %rd1914;
	add.s64 	%rd1916, %rd1915, %rd1910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2165,%dummy}, %rd1905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2166}, %rd1905;
	}
	shf.r.wrap.b32 	%r2167, %r2166, %r2165, 14;
	shf.r.wrap.b32 	%r2168, %r2165, %r2166, 14;
	mov.b64 	%rd1917, {%r2168, %r2167};
	shf.r.wrap.b32 	%r2169, %r2166, %r2165, 18;
	shf.r.wrap.b32 	%r2170, %r2165, %r2166, 18;
	mov.b64 	%rd1918, {%r2170, %r2169};
	xor.b64  	%rd1919, %rd1918, %rd1917;
	shf.l.wrap.b32 	%r2171, %r2165, %r2166, 23;
	shf.l.wrap.b32 	%r2172, %r2166, %r2165, 23;
	mov.b64 	%rd1920, {%r2172, %r2171};
	xor.b64  	%rd1921, %rd1919, %rd1920;
	xor.b64  	%rd1922, %rd1881, %rd1857;
	and.b64  	%rd1923, %rd1905, %rd1922;
	xor.b64  	%rd1924, %rd1923, %rd1857;
	add.s64 	%rd1925, %rd1833, %rd1677;
	add.s64 	%rd1926, %rd1925, %rd76;
	add.s64 	%rd1927, %rd1926, %rd1924;
	add.s64 	%rd1928, %rd1927, %rd1921;
	add.s64 	%rd1929, %rd1928, %rd1844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2173,%dummy}, %rd1916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2174}, %rd1916;
	}
	shf.r.wrap.b32 	%r2175, %r2174, %r2173, 28;
	shf.r.wrap.b32 	%r2176, %r2173, %r2174, 28;
	mov.b64 	%rd1930, {%r2176, %r2175};
	shf.l.wrap.b32 	%r2177, %r2173, %r2174, 30;
	shf.l.wrap.b32 	%r2178, %r2174, %r2173, 30;
	mov.b64 	%rd1931, {%r2178, %r2177};
	xor.b64  	%rd1932, %rd1931, %rd1930;
	shf.l.wrap.b32 	%r2179, %r2173, %r2174, 25;
	shf.l.wrap.b32 	%r2180, %r2174, %r2173, 25;
	mov.b64 	%rd1933, {%r2180, %r2179};
	xor.b64  	%rd1934, %rd1932, %rd1933;
	xor.b64  	%rd1935, %rd1916, %rd1868;
	xor.b64  	%rd1936, %rd1916, %rd1892;
	and.b64  	%rd1937, %rd1936, %rd1935;
	xor.b64  	%rd1938, %rd1937, %rd1916;
	add.s64 	%rd1939, %rd1928, %rd1938;
	add.s64 	%rd1940, %rd1939, %rd1934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2181,%dummy}, %rd1929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2182}, %rd1929;
	}
	shf.r.wrap.b32 	%r2183, %r2182, %r2181, 14;
	shf.r.wrap.b32 	%r2184, %r2181, %r2182, 14;
	mov.b64 	%rd1941, {%r2184, %r2183};
	shf.r.wrap.b32 	%r2185, %r2182, %r2181, 18;
	shf.r.wrap.b32 	%r2186, %r2181, %r2182, 18;
	mov.b64 	%rd1942, {%r2186, %r2185};
	xor.b64  	%rd1943, %rd1942, %rd1941;
	shf.l.wrap.b32 	%r2187, %r2181, %r2182, 23;
	shf.l.wrap.b32 	%r2188, %r2182, %r2181, 23;
	mov.b64 	%rd1944, {%r2188, %r2187};
	xor.b64  	%rd1945, %rd1943, %rd1944;
	xor.b64  	%rd1946, %rd1905, %rd1881;
	and.b64  	%rd1947, %rd1929, %rd1946;
	xor.b64  	%rd1948, %rd1947, %rd1881;
	add.s64 	%rd1949, %rd1857, %rd1690;
	add.s64 	%rd1950, %rd1949, %rd77;
	add.s64 	%rd1951, %rd1950, %rd1948;
	add.s64 	%rd1952, %rd1951, %rd1945;
	add.s64 	%rd1953, %rd1952, %rd1868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2189,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2190}, %rd1940;
	}
	shf.r.wrap.b32 	%r2191, %r2190, %r2189, 28;
	shf.r.wrap.b32 	%r2192, %r2189, %r2190, 28;
	mov.b64 	%rd1954, {%r2192, %r2191};
	shf.l.wrap.b32 	%r2193, %r2189, %r2190, 30;
	shf.l.wrap.b32 	%r2194, %r2190, %r2189, 30;
	mov.b64 	%rd1955, {%r2194, %r2193};
	xor.b64  	%rd1956, %rd1955, %rd1954;
	shf.l.wrap.b32 	%r2195, %r2189, %r2190, 25;
	shf.l.wrap.b32 	%r2196, %r2190, %r2189, 25;
	mov.b64 	%rd1957, {%r2196, %r2195};
	xor.b64  	%rd1958, %rd1956, %rd1957;
	xor.b64  	%rd1959, %rd1940, %rd1892;
	xor.b64  	%rd1960, %rd1940, %rd1916;
	and.b64  	%rd1961, %rd1960, %rd1959;
	xor.b64  	%rd1962, %rd1961, %rd1940;
	add.s64 	%rd1963, %rd1952, %rd1962;
	add.s64 	%rd1964, %rd1963, %rd1958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2197,%dummy}, %rd1953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2198}, %rd1953;
	}
	shf.r.wrap.b32 	%r2199, %r2198, %r2197, 14;
	shf.r.wrap.b32 	%r2200, %r2197, %r2198, 14;
	mov.b64 	%rd1965, {%r2200, %r2199};
	shf.r.wrap.b32 	%r2201, %r2198, %r2197, 18;
	shf.r.wrap.b32 	%r2202, %r2197, %r2198, 18;
	mov.b64 	%rd1966, {%r2202, %r2201};
	xor.b64  	%rd1967, %rd1966, %rd1965;
	shf.l.wrap.b32 	%r2203, %r2197, %r2198, 23;
	shf.l.wrap.b32 	%r2204, %r2198, %r2197, 23;
	mov.b64 	%rd1968, {%r2204, %r2203};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	xor.b64  	%rd1970, %rd1929, %rd1905;
	and.b64  	%rd1971, %rd1953, %rd1970;
	xor.b64  	%rd1972, %rd1971, %rd1905;
	add.s64 	%rd1973, %rd1881, %rd1703;
	add.s64 	%rd1974, %rd1973, %rd78;
	add.s64 	%rd1975, %rd1974, %rd1972;
	add.s64 	%rd1976, %rd1975, %rd1969;
	add.s64 	%rd1977, %rd1976, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2205,%dummy}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2206}, %rd1964;
	}
	shf.r.wrap.b32 	%r2207, %r2206, %r2205, 28;
	shf.r.wrap.b32 	%r2208, %r2205, %r2206, 28;
	mov.b64 	%rd1978, {%r2208, %r2207};
	shf.l.wrap.b32 	%r2209, %r2205, %r2206, 30;
	shf.l.wrap.b32 	%r2210, %r2206, %r2205, 30;
	mov.b64 	%rd1979, {%r2210, %r2209};
	xor.b64  	%rd1980, %rd1979, %rd1978;
	shf.l.wrap.b32 	%r2211, %r2205, %r2206, 25;
	shf.l.wrap.b32 	%r2212, %r2206, %r2205, 25;
	mov.b64 	%rd1981, {%r2212, %r2211};
	xor.b64  	%rd1982, %rd1980, %rd1981;
	xor.b64  	%rd1983, %rd1964, %rd1916;
	xor.b64  	%rd1984, %rd1964, %rd1940;
	and.b64  	%rd1985, %rd1984, %rd1983;
	xor.b64  	%rd1986, %rd1985, %rd1964;
	add.s64 	%rd1987, %rd1976, %rd1986;
	add.s64 	%rd1988, %rd1987, %rd1982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2213,%dummy}, %rd1977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2214}, %rd1977;
	}
	shf.r.wrap.b32 	%r2215, %r2214, %r2213, 14;
	shf.r.wrap.b32 	%r2216, %r2213, %r2214, 14;
	mov.b64 	%rd1989, {%r2216, %r2215};
	shf.r.wrap.b32 	%r2217, %r2214, %r2213, 18;
	shf.r.wrap.b32 	%r2218, %r2213, %r2214, 18;
	mov.b64 	%rd1990, {%r2218, %r2217};
	xor.b64  	%rd1991, %rd1990, %rd1989;
	shf.l.wrap.b32 	%r2219, %r2213, %r2214, 23;
	shf.l.wrap.b32 	%r2220, %r2214, %r2213, 23;
	mov.b64 	%rd1992, {%r2220, %r2219};
	xor.b64  	%rd1993, %rd1991, %rd1992;
	xor.b64  	%rd1994, %rd1953, %rd1929;
	and.b64  	%rd1995, %rd1977, %rd1994;
	xor.b64  	%rd1996, %rd1995, %rd1929;
	add.s64 	%rd1997, %rd1905, %rd1716;
	add.s64 	%rd1998, %rd1997, %rd79;
	add.s64 	%rd1999, %rd1998, %rd1996;
	add.s64 	%rd2000, %rd1999, %rd1993;
	add.s64 	%rd2001, %rd2000, %rd1916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2221,%dummy}, %rd1988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2222}, %rd1988;
	}
	shf.r.wrap.b32 	%r2223, %r2222, %r2221, 28;
	shf.r.wrap.b32 	%r2224, %r2221, %r2222, 28;
	mov.b64 	%rd2002, {%r2224, %r2223};
	shf.l.wrap.b32 	%r2225, %r2221, %r2222, 30;
	shf.l.wrap.b32 	%r2226, %r2222, %r2221, 30;
	mov.b64 	%rd2003, {%r2226, %r2225};
	xor.b64  	%rd2004, %rd2003, %rd2002;
	shf.l.wrap.b32 	%r2227, %r2221, %r2222, 25;
	shf.l.wrap.b32 	%r2228, %r2222, %r2221, 25;
	mov.b64 	%rd2005, {%r2228, %r2227};
	xor.b64  	%rd2006, %rd2004, %rd2005;
	xor.b64  	%rd2007, %rd1988, %rd1940;
	xor.b64  	%rd2008, %rd1988, %rd1964;
	and.b64  	%rd2009, %rd2008, %rd2007;
	xor.b64  	%rd2010, %rd2009, %rd1988;
	add.s64 	%rd2011, %rd2000, %rd2010;
	add.s64 	%rd2012, %rd2011, %rd2006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2229,%dummy}, %rd2001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2230}, %rd2001;
	}
	shf.r.wrap.b32 	%r2231, %r2230, %r2229, 14;
	shf.r.wrap.b32 	%r2232, %r2229, %r2230, 14;
	mov.b64 	%rd2013, {%r2232, %r2231};
	shf.r.wrap.b32 	%r2233, %r2230, %r2229, 18;
	shf.r.wrap.b32 	%r2234, %r2229, %r2230, 18;
	mov.b64 	%rd2014, {%r2234, %r2233};
	xor.b64  	%rd2015, %rd2014, %rd2013;
	shf.l.wrap.b32 	%r2235, %r2229, %r2230, 23;
	shf.l.wrap.b32 	%r2236, %r2230, %r2229, 23;
	mov.b64 	%rd2016, {%r2236, %r2235};
	xor.b64  	%rd2017, %rd2015, %rd2016;
	xor.b64  	%rd2018, %rd1977, %rd1953;
	and.b64  	%rd2019, %rd2001, %rd2018;
	xor.b64  	%rd2020, %rd2019, %rd1953;
	add.s64 	%rd2021, %rd1929, %rd1729;
	add.s64 	%rd2022, %rd2021, %rd80;
	add.s64 	%rd2023, %rd2022, %rd2020;
	add.s64 	%rd2024, %rd2023, %rd2017;
	add.s64 	%rd2025, %rd2024, %rd1940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2237,%dummy}, %rd2012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2238}, %rd2012;
	}
	shf.r.wrap.b32 	%r2239, %r2238, %r2237, 28;
	shf.r.wrap.b32 	%r2240, %r2237, %r2238, 28;
	mov.b64 	%rd2026, {%r2240, %r2239};
	shf.l.wrap.b32 	%r2241, %r2237, %r2238, 30;
	shf.l.wrap.b32 	%r2242, %r2238, %r2237, 30;
	mov.b64 	%rd2027, {%r2242, %r2241};
	xor.b64  	%rd2028, %rd2027, %rd2026;
	shf.l.wrap.b32 	%r2243, %r2237, %r2238, 25;
	shf.l.wrap.b32 	%r2244, %r2238, %r2237, 25;
	mov.b64 	%rd2029, {%r2244, %r2243};
	xor.b64  	%rd2030, %rd2028, %rd2029;
	xor.b64  	%rd2031, %rd2012, %rd1964;
	xor.b64  	%rd2032, %rd2012, %rd1988;
	and.b64  	%rd2033, %rd2032, %rd2031;
	xor.b64  	%rd2034, %rd2033, %rd2012;
	add.s64 	%rd2035, %rd2024, %rd2034;
	add.s64 	%rd2036, %rd2035, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd2025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd2025;
	}
	shf.r.wrap.b32 	%r2247, %r2246, %r2245, 14;
	shf.r.wrap.b32 	%r2248, %r2245, %r2246, 14;
	mov.b64 	%rd2037, {%r2248, %r2247};
	shf.r.wrap.b32 	%r2249, %r2246, %r2245, 18;
	shf.r.wrap.b32 	%r2250, %r2245, %r2246, 18;
	mov.b64 	%rd2038, {%r2250, %r2249};
	xor.b64  	%rd2039, %rd2038, %rd2037;
	shf.l.wrap.b32 	%r2251, %r2245, %r2246, 23;
	shf.l.wrap.b32 	%r2252, %r2246, %r2245, 23;
	mov.b64 	%rd2040, {%r2252, %r2251};
	xor.b64  	%rd2041, %rd2039, %rd2040;
	xor.b64  	%rd2042, %rd2001, %rd1977;
	and.b64  	%rd2043, %rd2025, %rd2042;
	xor.b64  	%rd2044, %rd2043, %rd1977;
	add.s64 	%rd2045, %rd1953, %rd1742;
	add.s64 	%rd2046, %rd2045, %rd81;
	add.s64 	%rd2047, %rd2046, %rd2044;
	add.s64 	%rd2048, %rd2047, %rd2041;
	add.s64 	%rd2049, %rd2048, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2253,%dummy}, %rd2036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2254}, %rd2036;
	}
	shf.r.wrap.b32 	%r2255, %r2254, %r2253, 28;
	shf.r.wrap.b32 	%r2256, %r2253, %r2254, 28;
	mov.b64 	%rd2050, {%r2256, %r2255};
	shf.l.wrap.b32 	%r2257, %r2253, %r2254, 30;
	shf.l.wrap.b32 	%r2258, %r2254, %r2253, 30;
	mov.b64 	%rd2051, {%r2258, %r2257};
	xor.b64  	%rd2052, %rd2051, %rd2050;
	shf.l.wrap.b32 	%r2259, %r2253, %r2254, 25;
	shf.l.wrap.b32 	%r2260, %r2254, %r2253, 25;
	mov.b64 	%rd2053, {%r2260, %r2259};
	xor.b64  	%rd2054, %rd2052, %rd2053;
	xor.b64  	%rd2055, %rd2036, %rd1988;
	xor.b64  	%rd2056, %rd2036, %rd2012;
	and.b64  	%rd2057, %rd2056, %rd2055;
	xor.b64  	%rd2058, %rd2057, %rd2036;
	add.s64 	%rd2059, %rd2048, %rd2058;
	add.s64 	%rd2060, %rd2059, %rd2054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2261,%dummy}, %rd2049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2262}, %rd2049;
	}
	shf.r.wrap.b32 	%r2263, %r2262, %r2261, 14;
	shf.r.wrap.b32 	%r2264, %r2261, %r2262, 14;
	mov.b64 	%rd2061, {%r2264, %r2263};
	shf.r.wrap.b32 	%r2265, %r2262, %r2261, 18;
	shf.r.wrap.b32 	%r2266, %r2261, %r2262, 18;
	mov.b64 	%rd2062, {%r2266, %r2265};
	xor.b64  	%rd2063, %rd2062, %rd2061;
	shf.l.wrap.b32 	%r2267, %r2261, %r2262, 23;
	shf.l.wrap.b32 	%r2268, %r2262, %r2261, 23;
	mov.b64 	%rd2064, {%r2268, %r2267};
	xor.b64  	%rd2065, %rd2063, %rd2064;
	xor.b64  	%rd2066, %rd2025, %rd2001;
	and.b64  	%rd2067, %rd2049, %rd2066;
	xor.b64  	%rd2068, %rd2067, %rd2001;
	add.s64 	%rd2069, %rd1977, %rd1755;
	add.s64 	%rd2070, %rd2069, %rd82;
	add.s64 	%rd2071, %rd2070, %rd2068;
	add.s64 	%rd2072, %rd2071, %rd2065;
	add.s64 	%rd2073, %rd2072, %rd1988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2269,%dummy}, %rd2060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2270}, %rd2060;
	}
	shf.r.wrap.b32 	%r2271, %r2270, %r2269, 28;
	shf.r.wrap.b32 	%r2272, %r2269, %r2270, 28;
	mov.b64 	%rd2074, {%r2272, %r2271};
	shf.l.wrap.b32 	%r2273, %r2269, %r2270, 30;
	shf.l.wrap.b32 	%r2274, %r2270, %r2269, 30;
	mov.b64 	%rd2075, {%r2274, %r2273};
	xor.b64  	%rd2076, %rd2075, %rd2074;
	shf.l.wrap.b32 	%r2275, %r2269, %r2270, 25;
	shf.l.wrap.b32 	%r2276, %r2270, %r2269, 25;
	mov.b64 	%rd2077, {%r2276, %r2275};
	xor.b64  	%rd2078, %rd2076, %rd2077;
	xor.b64  	%rd2079, %rd2060, %rd2012;
	xor.b64  	%rd2080, %rd2060, %rd2036;
	and.b64  	%rd2081, %rd2080, %rd2079;
	xor.b64  	%rd2082, %rd2081, %rd2060;
	add.s64 	%rd2083, %rd2072, %rd2082;
	add.s64 	%rd2084, %rd2083, %rd2078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2277,%dummy}, %rd2073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2278}, %rd2073;
	}
	shf.r.wrap.b32 	%r2279, %r2278, %r2277, 14;
	shf.r.wrap.b32 	%r2280, %r2277, %r2278, 14;
	mov.b64 	%rd2085, {%r2280, %r2279};
	shf.r.wrap.b32 	%r2281, %r2278, %r2277, 18;
	shf.r.wrap.b32 	%r2282, %r2277, %r2278, 18;
	mov.b64 	%rd2086, {%r2282, %r2281};
	xor.b64  	%rd2087, %rd2086, %rd2085;
	shf.l.wrap.b32 	%r2283, %r2277, %r2278, 23;
	shf.l.wrap.b32 	%r2284, %r2278, %r2277, 23;
	mov.b64 	%rd2088, {%r2284, %r2283};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	xor.b64  	%rd2090, %rd2049, %rd2025;
	and.b64  	%rd2091, %rd2073, %rd2090;
	xor.b64  	%rd2092, %rd2091, %rd2025;
	add.s64 	%rd2093, %rd2001, %rd1768;
	add.s64 	%rd2094, %rd2093, %rd83;
	add.s64 	%rd2095, %rd2094, %rd2092;
	add.s64 	%rd2096, %rd2095, %rd2089;
	add.s64 	%rd2097, %rd2096, %rd2012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2285,%dummy}, %rd2084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2286}, %rd2084;
	}
	shf.r.wrap.b32 	%r2287, %r2286, %r2285, 28;
	shf.r.wrap.b32 	%r2288, %r2285, %r2286, 28;
	mov.b64 	%rd2098, {%r2288, %r2287};
	shf.l.wrap.b32 	%r2289, %r2285, %r2286, 30;
	shf.l.wrap.b32 	%r2290, %r2286, %r2285, 30;
	mov.b64 	%rd2099, {%r2290, %r2289};
	xor.b64  	%rd2100, %rd2099, %rd2098;
	shf.l.wrap.b32 	%r2291, %r2285, %r2286, 25;
	shf.l.wrap.b32 	%r2292, %r2286, %r2285, 25;
	mov.b64 	%rd2101, {%r2292, %r2291};
	xor.b64  	%rd2102, %rd2100, %rd2101;
	xor.b64  	%rd2103, %rd2084, %rd2036;
	xor.b64  	%rd2104, %rd2084, %rd2060;
	and.b64  	%rd2105, %rd2104, %rd2103;
	xor.b64  	%rd2106, %rd2105, %rd2084;
	add.s64 	%rd2107, %rd2096, %rd2106;
	add.s64 	%rd2108, %rd2107, %rd2102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2293,%dummy}, %rd2097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2294}, %rd2097;
	}
	shf.r.wrap.b32 	%r2295, %r2294, %r2293, 14;
	shf.r.wrap.b32 	%r2296, %r2293, %r2294, 14;
	mov.b64 	%rd2109, {%r2296, %r2295};
	shf.r.wrap.b32 	%r2297, %r2294, %r2293, 18;
	shf.r.wrap.b32 	%r2298, %r2293, %r2294, 18;
	mov.b64 	%rd2110, {%r2298, %r2297};
	xor.b64  	%rd2111, %rd2110, %rd2109;
	shf.l.wrap.b32 	%r2299, %r2293, %r2294, 23;
	shf.l.wrap.b32 	%r2300, %r2294, %r2293, 23;
	mov.b64 	%rd2112, {%r2300, %r2299};
	xor.b64  	%rd2113, %rd2111, %rd2112;
	xor.b64  	%rd2114, %rd2073, %rd2049;
	and.b64  	%rd2115, %rd2097, %rd2114;
	xor.b64  	%rd2116, %rd2115, %rd2049;
	add.s64 	%rd2117, %rd2025, %rd1781;
	add.s64 	%rd2118, %rd2117, %rd84;
	add.s64 	%rd2119, %rd2118, %rd2116;
	add.s64 	%rd2120, %rd2119, %rd2113;
	add.s64 	%rd2121, %rd2120, %rd2036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd2108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2302}, %rd2108;
	}
	shf.r.wrap.b32 	%r2303, %r2302, %r2301, 28;
	shf.r.wrap.b32 	%r2304, %r2301, %r2302, 28;
	mov.b64 	%rd2122, {%r2304, %r2303};
	shf.l.wrap.b32 	%r2305, %r2301, %r2302, 30;
	shf.l.wrap.b32 	%r2306, %r2302, %r2301, 30;
	mov.b64 	%rd2123, {%r2306, %r2305};
	xor.b64  	%rd2124, %rd2123, %rd2122;
	shf.l.wrap.b32 	%r2307, %r2301, %r2302, 25;
	shf.l.wrap.b32 	%r2308, %r2302, %r2301, 25;
	mov.b64 	%rd2125, {%r2308, %r2307};
	xor.b64  	%rd2126, %rd2124, %rd2125;
	xor.b64  	%rd2127, %rd2108, %rd2060;
	xor.b64  	%rd2128, %rd2108, %rd2084;
	and.b64  	%rd2129, %rd2128, %rd2127;
	xor.b64  	%rd2130, %rd2129, %rd2108;
	add.s64 	%rd2131, %rd2120, %rd2130;
	add.s64 	%rd2132, %rd2131, %rd2126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2309,%dummy}, %rd2121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2310}, %rd2121;
	}
	shf.r.wrap.b32 	%r2311, %r2310, %r2309, 14;
	shf.r.wrap.b32 	%r2312, %r2309, %r2310, 14;
	mov.b64 	%rd2133, {%r2312, %r2311};
	shf.r.wrap.b32 	%r2313, %r2310, %r2309, 18;
	shf.r.wrap.b32 	%r2314, %r2309, %r2310, 18;
	mov.b64 	%rd2134, {%r2314, %r2313};
	xor.b64  	%rd2135, %rd2134, %rd2133;
	shf.l.wrap.b32 	%r2315, %r2309, %r2310, 23;
	shf.l.wrap.b32 	%r2316, %r2310, %r2309, 23;
	mov.b64 	%rd2136, {%r2316, %r2315};
	xor.b64  	%rd2137, %rd2135, %rd2136;
	xor.b64  	%rd2138, %rd2097, %rd2073;
	and.b64  	%rd2139, %rd2121, %rd2138;
	xor.b64  	%rd2140, %rd2139, %rd2073;
	add.s64 	%rd2141, %rd2049, %rd1794;
	add.s64 	%rd2142, %rd2141, %rd85;
	add.s64 	%rd2143, %rd2142, %rd2140;
	add.s64 	%rd2144, %rd2143, %rd2137;
	add.s64 	%rd2145, %rd2144, %rd2060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2317,%dummy}, %rd2132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2318}, %rd2132;
	}
	shf.r.wrap.b32 	%r2319, %r2318, %r2317, 28;
	shf.r.wrap.b32 	%r2320, %r2317, %r2318, 28;
	mov.b64 	%rd2146, {%r2320, %r2319};
	shf.l.wrap.b32 	%r2321, %r2317, %r2318, 30;
	shf.l.wrap.b32 	%r2322, %r2318, %r2317, 30;
	mov.b64 	%rd2147, {%r2322, %r2321};
	xor.b64  	%rd2148, %rd2147, %rd2146;
	shf.l.wrap.b32 	%r2323, %r2317, %r2318, 25;
	shf.l.wrap.b32 	%r2324, %r2318, %r2317, 25;
	mov.b64 	%rd2149, {%r2324, %r2323};
	xor.b64  	%rd2150, %rd2148, %rd2149;
	xor.b64  	%rd2151, %rd2132, %rd2084;
	xor.b64  	%rd2152, %rd2132, %rd2108;
	and.b64  	%rd2153, %rd2152, %rd2151;
	xor.b64  	%rd2154, %rd2153, %rd2132;
	add.s64 	%rd2155, %rd2144, %rd2154;
	add.s64 	%rd2156, %rd2155, %rd2150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2325,%dummy}, %rd2145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2326}, %rd2145;
	}
	shf.r.wrap.b32 	%r2327, %r2326, %r2325, 14;
	shf.r.wrap.b32 	%r2328, %r2325, %r2326, 14;
	mov.b64 	%rd2157, {%r2328, %r2327};
	shf.r.wrap.b32 	%r2329, %r2326, %r2325, 18;
	shf.r.wrap.b32 	%r2330, %r2325, %r2326, 18;
	mov.b64 	%rd2158, {%r2330, %r2329};
	xor.b64  	%rd2159, %rd2158, %rd2157;
	shf.l.wrap.b32 	%r2331, %r2325, %r2326, 23;
	shf.l.wrap.b32 	%r2332, %r2326, %r2325, 23;
	mov.b64 	%rd2160, {%r2332, %r2331};
	xor.b64  	%rd2161, %rd2159, %rd2160;
	xor.b64  	%rd2162, %rd2121, %rd2097;
	and.b64  	%rd2163, %rd2145, %rd2162;
	xor.b64  	%rd2164, %rd2163, %rd2097;
	add.s64 	%rd2165, %rd2073, %rd1807;
	add.s64 	%rd2166, %rd2165, %rd86;
	add.s64 	%rd2167, %rd2166, %rd2164;
	add.s64 	%rd2168, %rd2167, %rd2161;
	add.s64 	%rd2169, %rd2168, %rd2084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2333,%dummy}, %rd2156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2334}, %rd2156;
	}
	shf.r.wrap.b32 	%r2335, %r2334, %r2333, 28;
	shf.r.wrap.b32 	%r2336, %r2333, %r2334, 28;
	mov.b64 	%rd2170, {%r2336, %r2335};
	shf.l.wrap.b32 	%r2337, %r2333, %r2334, 30;
	shf.l.wrap.b32 	%r2338, %r2334, %r2333, 30;
	mov.b64 	%rd2171, {%r2338, %r2337};
	xor.b64  	%rd2172, %rd2171, %rd2170;
	shf.l.wrap.b32 	%r2339, %r2333, %r2334, 25;
	shf.l.wrap.b32 	%r2340, %r2334, %r2333, 25;
	mov.b64 	%rd2173, {%r2340, %r2339};
	xor.b64  	%rd2174, %rd2172, %rd2173;
	xor.b64  	%rd2175, %rd2156, %rd2108;
	xor.b64  	%rd2176, %rd2156, %rd2132;
	and.b64  	%rd2177, %rd2176, %rd2175;
	xor.b64  	%rd2178, %rd2177, %rd2156;
	add.s64 	%rd2179, %rd2168, %rd2178;
	add.s64 	%rd2180, %rd2179, %rd2174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2341,%dummy}, %rd2169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2342}, %rd2169;
	}
	shf.r.wrap.b32 	%r2343, %r2342, %r2341, 14;
	shf.r.wrap.b32 	%r2344, %r2341, %r2342, 14;
	mov.b64 	%rd2181, {%r2344, %r2343};
	shf.r.wrap.b32 	%r2345, %r2342, %r2341, 18;
	shf.r.wrap.b32 	%r2346, %r2341, %r2342, 18;
	mov.b64 	%rd2182, {%r2346, %r2345};
	xor.b64  	%rd2183, %rd2182, %rd2181;
	shf.l.wrap.b32 	%r2347, %r2341, %r2342, 23;
	shf.l.wrap.b32 	%r2348, %r2342, %r2341, 23;
	mov.b64 	%rd2184, {%r2348, %r2347};
	xor.b64  	%rd2185, %rd2183, %rd2184;
	xor.b64  	%rd2186, %rd2145, %rd2121;
	and.b64  	%rd2187, %rd2169, %rd2186;
	xor.b64  	%rd2188, %rd2187, %rd2121;
	add.s64 	%rd2189, %rd2097, %rd1820;
	add.s64 	%rd2190, %rd2189, %rd87;
	add.s64 	%rd2191, %rd2190, %rd2188;
	add.s64 	%rd2192, %rd2191, %rd2185;
	add.s64 	%rd2193, %rd2192, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2349,%dummy}, %rd2180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2350}, %rd2180;
	}
	shf.r.wrap.b32 	%r2351, %r2350, %r2349, 28;
	shf.r.wrap.b32 	%r2352, %r2349, %r2350, 28;
	mov.b64 	%rd2194, {%r2352, %r2351};
	shf.l.wrap.b32 	%r2353, %r2349, %r2350, 30;
	shf.l.wrap.b32 	%r2354, %r2350, %r2349, 30;
	mov.b64 	%rd2195, {%r2354, %r2353};
	xor.b64  	%rd2196, %rd2195, %rd2194;
	shf.l.wrap.b32 	%r2355, %r2349, %r2350, 25;
	shf.l.wrap.b32 	%r2356, %r2350, %r2349, 25;
	mov.b64 	%rd2197, {%r2356, %r2355};
	xor.b64  	%rd2198, %rd2196, %rd2197;
	xor.b64  	%rd2199, %rd2180, %rd2132;
	xor.b64  	%rd2200, %rd2180, %rd2156;
	and.b64  	%rd2201, %rd2200, %rd2199;
	xor.b64  	%rd2202, %rd2201, %rd2180;
	add.s64 	%rd2203, %rd2192, %rd2202;
	add.s64 	%rd2204, %rd2203, %rd2198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2357,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2358}, %rd1807;
	}
	shf.r.wrap.b32 	%r2359, %r2358, %r2357, 19;
	shf.r.wrap.b32 	%r2360, %r2357, %r2358, 19;
	mov.b64 	%rd2205, {%r2360, %r2359};
	shf.l.wrap.b32 	%r2361, %r2357, %r2358, 3;
	shf.l.wrap.b32 	%r2362, %r2358, %r2357, 3;
	mov.b64 	%rd2206, {%r2362, %r2361};
	shr.u64 	%rd2207, %rd1807, 6;
	xor.b64  	%rd2208, %rd2205, %rd2207;
	xor.b64  	%rd2209, %rd2208, %rd2206;
	shf.r.wrap.b32 	%r2363, %r1972, %r1971, 1;
	shf.r.wrap.b32 	%r2364, %r1971, %r1972, 1;
	mov.b64 	%rd2210, {%r2364, %r2363};
	shf.r.wrap.b32 	%r2365, %r1972, %r1971, 8;
	shf.r.wrap.b32 	%r2366, %r1971, %r1972, 8;
	mov.b64 	%rd2211, {%r2366, %r2365};
	shr.u64 	%rd2212, %rd1638, 7;
	xor.b64  	%rd2213, %rd2210, %rd2212;
	xor.b64  	%rd2214, %rd2213, %rd2211;
	add.s64 	%rd2215, %rd1625, %rd1742;
	add.s64 	%rd2216, %rd2215, %rd2209;
	add.s64 	%rd2217, %rd2216, %rd2214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2367,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2368}, %rd1820;
	}
	shf.r.wrap.b32 	%r2369, %r2368, %r2367, 19;
	shf.r.wrap.b32 	%r2370, %r2367, %r2368, 19;
	mov.b64 	%rd2218, {%r2370, %r2369};
	shf.l.wrap.b32 	%r2371, %r2367, %r2368, 3;
	shf.l.wrap.b32 	%r2372, %r2368, %r2367, 3;
	mov.b64 	%rd2219, {%r2372, %r2371};
	shr.u64 	%rd2220, %rd1820, 6;
	xor.b64  	%rd2221, %rd2218, %rd2220;
	xor.b64  	%rd2222, %rd2221, %rd2219;
	shf.r.wrap.b32 	%r2373, %r1982, %r1981, 1;
	shf.r.wrap.b32 	%r2374, %r1981, %r1982, 1;
	mov.b64 	%rd2223, {%r2374, %r2373};
	shf.r.wrap.b32 	%r2375, %r1982, %r1981, 8;
	shf.r.wrap.b32 	%r2376, %r1981, %r1982, 8;
	mov.b64 	%rd2224, {%r2376, %r2375};
	shr.u64 	%rd2225, %rd1651, 7;
	xor.b64  	%rd2226, %rd2223, %rd2225;
	xor.b64  	%rd2227, %rd2226, %rd2224;
	add.s64 	%rd2228, %rd1638, %rd1755;
	add.s64 	%rd2229, %rd2228, %rd2222;
	add.s64 	%rd2230, %rd2229, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2377,%dummy}, %rd2217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2378}, %rd2217;
	}
	shf.r.wrap.b32 	%r2379, %r2378, %r2377, 19;
	shf.r.wrap.b32 	%r2380, %r2377, %r2378, 19;
	mov.b64 	%rd2231, {%r2380, %r2379};
	shf.l.wrap.b32 	%r2381, %r2377, %r2378, 3;
	shf.l.wrap.b32 	%r2382, %r2378, %r2377, 3;
	mov.b64 	%rd2232, {%r2382, %r2381};
	shr.u64 	%rd2233, %rd2217, 6;
	xor.b64  	%rd2234, %rd2231, %rd2233;
	xor.b64  	%rd2235, %rd2234, %rd2232;
	shf.r.wrap.b32 	%r2383, %r1992, %r1991, 1;
	shf.r.wrap.b32 	%r2384, %r1991, %r1992, 1;
	mov.b64 	%rd2236, {%r2384, %r2383};
	shf.r.wrap.b32 	%r2385, %r1992, %r1991, 8;
	shf.r.wrap.b32 	%r2386, %r1991, %r1992, 8;
	mov.b64 	%rd2237, {%r2386, %r2385};
	shr.u64 	%rd2238, %rd1664, 7;
	xor.b64  	%rd2239, %rd2236, %rd2238;
	xor.b64  	%rd2240, %rd2239, %rd2237;
	add.s64 	%rd2241, %rd1651, %rd1768;
	add.s64 	%rd2242, %rd2241, %rd2235;
	add.s64 	%rd2243, %rd2242, %rd2240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2387,%dummy}, %rd2230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2388}, %rd2230;
	}
	shf.r.wrap.b32 	%r2389, %r2388, %r2387, 19;
	shf.r.wrap.b32 	%r2390, %r2387, %r2388, 19;
	mov.b64 	%rd2244, {%r2390, %r2389};
	shf.l.wrap.b32 	%r2391, %r2387, %r2388, 3;
	shf.l.wrap.b32 	%r2392, %r2388, %r2387, 3;
	mov.b64 	%rd2245, {%r2392, %r2391};
	shr.u64 	%rd2246, %rd2230, 6;
	xor.b64  	%rd2247, %rd2244, %rd2246;
	xor.b64  	%rd2248, %rd2247, %rd2245;
	shf.r.wrap.b32 	%r2393, %r2002, %r2001, 1;
	shf.r.wrap.b32 	%r2394, %r2001, %r2002, 1;
	mov.b64 	%rd2249, {%r2394, %r2393};
	shf.r.wrap.b32 	%r2395, %r2002, %r2001, 8;
	shf.r.wrap.b32 	%r2396, %r2001, %r2002, 8;
	mov.b64 	%rd2250, {%r2396, %r2395};
	shr.u64 	%rd2251, %rd1677, 7;
	xor.b64  	%rd2252, %rd2249, %rd2251;
	xor.b64  	%rd2253, %rd2252, %rd2250;
	add.s64 	%rd2254, %rd1664, %rd1781;
	add.s64 	%rd2255, %rd2254, %rd2248;
	add.s64 	%rd2256, %rd2255, %rd2253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2397,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2398}, %rd2243;
	}
	shf.r.wrap.b32 	%r2399, %r2398, %r2397, 19;
	shf.r.wrap.b32 	%r2400, %r2397, %r2398, 19;
	mov.b64 	%rd2257, {%r2400, %r2399};
	shf.l.wrap.b32 	%r2401, %r2397, %r2398, 3;
	shf.l.wrap.b32 	%r2402, %r2398, %r2397, 3;
	mov.b64 	%rd2258, {%r2402, %r2401};
	shr.u64 	%rd2259, %rd2243, 6;
	xor.b64  	%rd2260, %rd2257, %rd2259;
	xor.b64  	%rd2261, %rd2260, %rd2258;
	shf.r.wrap.b32 	%r2403, %r2012, %r2011, 1;
	shf.r.wrap.b32 	%r2404, %r2011, %r2012, 1;
	mov.b64 	%rd2262, {%r2404, %r2403};
	shf.r.wrap.b32 	%r2405, %r2012, %r2011, 8;
	shf.r.wrap.b32 	%r2406, %r2011, %r2012, 8;
	mov.b64 	%rd2263, {%r2406, %r2405};
	shr.u64 	%rd2264, %rd1690, 7;
	xor.b64  	%rd2265, %rd2262, %rd2264;
	xor.b64  	%rd2266, %rd2265, %rd2263;
	add.s64 	%rd2267, %rd1677, %rd1794;
	add.s64 	%rd2268, %rd2267, %rd2261;
	add.s64 	%rd2269, %rd2268, %rd2266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2407,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2408}, %rd2256;
	}
	shf.r.wrap.b32 	%r2409, %r2408, %r2407, 19;
	shf.r.wrap.b32 	%r2410, %r2407, %r2408, 19;
	mov.b64 	%rd2270, {%r2410, %r2409};
	shf.l.wrap.b32 	%r2411, %r2407, %r2408, 3;
	shf.l.wrap.b32 	%r2412, %r2408, %r2407, 3;
	mov.b64 	%rd2271, {%r2412, %r2411};
	shr.u64 	%rd2272, %rd2256, 6;
	xor.b64  	%rd2273, %rd2270, %rd2272;
	xor.b64  	%rd2274, %rd2273, %rd2271;
	shf.r.wrap.b32 	%r2413, %r2022, %r2021, 1;
	shf.r.wrap.b32 	%r2414, %r2021, %r2022, 1;
	mov.b64 	%rd2275, {%r2414, %r2413};
	shf.r.wrap.b32 	%r2415, %r2022, %r2021, 8;
	shf.r.wrap.b32 	%r2416, %r2021, %r2022, 8;
	mov.b64 	%rd2276, {%r2416, %r2415};
	shr.u64 	%rd2277, %rd1703, 7;
	xor.b64  	%rd2278, %rd2275, %rd2277;
	xor.b64  	%rd2279, %rd2278, %rd2276;
	add.s64 	%rd2280, %rd1690, %rd1807;
	add.s64 	%rd2281, %rd2280, %rd2274;
	add.s64 	%rd2282, %rd2281, %rd2279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2417,%dummy}, %rd2269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2418}, %rd2269;
	}
	shf.r.wrap.b32 	%r2419, %r2418, %r2417, 19;
	shf.r.wrap.b32 	%r2420, %r2417, %r2418, 19;
	mov.b64 	%rd2283, {%r2420, %r2419};
	shf.l.wrap.b32 	%r2421, %r2417, %r2418, 3;
	shf.l.wrap.b32 	%r2422, %r2418, %r2417, 3;
	mov.b64 	%rd2284, {%r2422, %r2421};
	shr.u64 	%rd2285, %rd2269, 6;
	xor.b64  	%rd2286, %rd2283, %rd2285;
	xor.b64  	%rd2287, %rd2286, %rd2284;
	shf.r.wrap.b32 	%r2423, %r2032, %r2031, 1;
	shf.r.wrap.b32 	%r2424, %r2031, %r2032, 1;
	mov.b64 	%rd2288, {%r2424, %r2423};
	shf.r.wrap.b32 	%r2425, %r2032, %r2031, 8;
	shf.r.wrap.b32 	%r2426, %r2031, %r2032, 8;
	mov.b64 	%rd2289, {%r2426, %r2425};
	shr.u64 	%rd2290, %rd1716, 7;
	xor.b64  	%rd2291, %rd2288, %rd2290;
	xor.b64  	%rd2292, %rd2291, %rd2289;
	add.s64 	%rd2293, %rd1703, %rd1820;
	add.s64 	%rd2294, %rd2293, %rd2287;
	add.s64 	%rd2295, %rd2294, %rd2292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2427,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2428}, %rd2282;
	}
	shf.r.wrap.b32 	%r2429, %r2428, %r2427, 19;
	shf.r.wrap.b32 	%r2430, %r2427, %r2428, 19;
	mov.b64 	%rd2296, {%r2430, %r2429};
	shf.l.wrap.b32 	%r2431, %r2427, %r2428, 3;
	shf.l.wrap.b32 	%r2432, %r2428, %r2427, 3;
	mov.b64 	%rd2297, {%r2432, %r2431};
	shr.u64 	%rd2298, %rd2282, 6;
	xor.b64  	%rd2299, %rd2296, %rd2298;
	xor.b64  	%rd2300, %rd2299, %rd2297;
	shf.r.wrap.b32 	%r2433, %r2042, %r2041, 1;
	shf.r.wrap.b32 	%r2434, %r2041, %r2042, 1;
	mov.b64 	%rd2301, {%r2434, %r2433};
	shf.r.wrap.b32 	%r2435, %r2042, %r2041, 8;
	shf.r.wrap.b32 	%r2436, %r2041, %r2042, 8;
	mov.b64 	%rd2302, {%r2436, %r2435};
	shr.u64 	%rd2303, %rd1729, 7;
	xor.b64  	%rd2304, %rd2301, %rd2303;
	xor.b64  	%rd2305, %rd2304, %rd2302;
	add.s64 	%rd2306, %rd2217, %rd1716;
	add.s64 	%rd2307, %rd2306, %rd2300;
	add.s64 	%rd2308, %rd2307, %rd2305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2437,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2438}, %rd2295;
	}
	shf.r.wrap.b32 	%r2439, %r2438, %r2437, 19;
	shf.r.wrap.b32 	%r2440, %r2437, %r2438, 19;
	mov.b64 	%rd2309, {%r2440, %r2439};
	shf.l.wrap.b32 	%r2441, %r2437, %r2438, 3;
	shf.l.wrap.b32 	%r2442, %r2438, %r2437, 3;
	mov.b64 	%rd2310, {%r2442, %r2441};
	shr.u64 	%rd2311, %rd2295, 6;
	xor.b64  	%rd2312, %rd2309, %rd2311;
	xor.b64  	%rd2313, %rd2312, %rd2310;
	shf.r.wrap.b32 	%r2443, %r2052, %r2051, 1;
	shf.r.wrap.b32 	%r2444, %r2051, %r2052, 1;
	mov.b64 	%rd2314, {%r2444, %r2443};
	shf.r.wrap.b32 	%r2445, %r2052, %r2051, 8;
	shf.r.wrap.b32 	%r2446, %r2051, %r2052, 8;
	mov.b64 	%rd2315, {%r2446, %r2445};
	shr.u64 	%rd2316, %rd1742, 7;
	xor.b64  	%rd2317, %rd2314, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2315;
	add.s64 	%rd2319, %rd2230, %rd1729;
	add.s64 	%rd2320, %rd2319, %rd2313;
	add.s64 	%rd2321, %rd2320, %rd2318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2447,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2448}, %rd2308;
	}
	shf.r.wrap.b32 	%r2449, %r2448, %r2447, 19;
	shf.r.wrap.b32 	%r2450, %r2447, %r2448, 19;
	mov.b64 	%rd2322, {%r2450, %r2449};
	shf.l.wrap.b32 	%r2451, %r2447, %r2448, 3;
	shf.l.wrap.b32 	%r2452, %r2448, %r2447, 3;
	mov.b64 	%rd2323, {%r2452, %r2451};
	shr.u64 	%rd2324, %rd2308, 6;
	xor.b64  	%rd2325, %rd2322, %rd2324;
	xor.b64  	%rd2326, %rd2325, %rd2323;
	shf.r.wrap.b32 	%r2453, %r2062, %r2061, 1;
	shf.r.wrap.b32 	%r2454, %r2061, %r2062, 1;
	mov.b64 	%rd2327, {%r2454, %r2453};
	shf.r.wrap.b32 	%r2455, %r2062, %r2061, 8;
	shf.r.wrap.b32 	%r2456, %r2061, %r2062, 8;
	mov.b64 	%rd2328, {%r2456, %r2455};
	shr.u64 	%rd2329, %rd1755, 7;
	xor.b64  	%rd2330, %rd2327, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd2328;
	add.s64 	%rd2332, %rd2243, %rd1742;
	add.s64 	%rd2333, %rd2332, %rd2326;
	add.s64 	%rd2334, %rd2333, %rd2331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2457,%dummy}, %rd2321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2458}, %rd2321;
	}
	shf.r.wrap.b32 	%r2459, %r2458, %r2457, 19;
	shf.r.wrap.b32 	%r2460, %r2457, %r2458, 19;
	mov.b64 	%rd2335, {%r2460, %r2459};
	shf.l.wrap.b32 	%r2461, %r2457, %r2458, 3;
	shf.l.wrap.b32 	%r2462, %r2458, %r2457, 3;
	mov.b64 	%rd2336, {%r2462, %r2461};
	shr.u64 	%rd2337, %rd2321, 6;
	xor.b64  	%rd2338, %rd2335, %rd2337;
	xor.b64  	%rd2339, %rd2338, %rd2336;
	shf.r.wrap.b32 	%r2463, %r2072, %r2071, 1;
	shf.r.wrap.b32 	%r2464, %r2071, %r2072, 1;
	mov.b64 	%rd2340, {%r2464, %r2463};
	shf.r.wrap.b32 	%r2465, %r2072, %r2071, 8;
	shf.r.wrap.b32 	%r2466, %r2071, %r2072, 8;
	mov.b64 	%rd2341, {%r2466, %r2465};
	shr.u64 	%rd2342, %rd1768, 7;
	xor.b64  	%rd2343, %rd2340, %rd2342;
	xor.b64  	%rd2344, %rd2343, %rd2341;
	add.s64 	%rd2345, %rd2256, %rd1755;
	add.s64 	%rd2346, %rd2345, %rd2339;
	add.s64 	%rd2347, %rd2346, %rd2344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2467,%dummy}, %rd2334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2468}, %rd2334;
	}
	shf.r.wrap.b32 	%r2469, %r2468, %r2467, 19;
	shf.r.wrap.b32 	%r2470, %r2467, %r2468, 19;
	mov.b64 	%rd2348, {%r2470, %r2469};
	shf.l.wrap.b32 	%r2471, %r2467, %r2468, 3;
	shf.l.wrap.b32 	%r2472, %r2468, %r2467, 3;
	mov.b64 	%rd2349, {%r2472, %r2471};
	shr.u64 	%rd2350, %rd2334, 6;
	xor.b64  	%rd2351, %rd2348, %rd2350;
	xor.b64  	%rd2352, %rd2351, %rd2349;
	shf.r.wrap.b32 	%r2473, %r2082, %r2081, 1;
	shf.r.wrap.b32 	%r2474, %r2081, %r2082, 1;
	mov.b64 	%rd2353, {%r2474, %r2473};
	shf.r.wrap.b32 	%r2475, %r2082, %r2081, 8;
	shf.r.wrap.b32 	%r2476, %r2081, %r2082, 8;
	mov.b64 	%rd2354, {%r2476, %r2475};
	shr.u64 	%rd2355, %rd1781, 7;
	xor.b64  	%rd2356, %rd2353, %rd2355;
	xor.b64  	%rd2357, %rd2356, %rd2354;
	add.s64 	%rd2358, %rd2269, %rd1768;
	add.s64 	%rd2359, %rd2358, %rd2352;
	add.s64 	%rd2360, %rd2359, %rd2357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2477,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2478}, %rd2347;
	}
	shf.r.wrap.b32 	%r2479, %r2478, %r2477, 19;
	shf.r.wrap.b32 	%r2480, %r2477, %r2478, 19;
	mov.b64 	%rd2361, {%r2480, %r2479};
	shf.l.wrap.b32 	%r2481, %r2477, %r2478, 3;
	shf.l.wrap.b32 	%r2482, %r2478, %r2477, 3;
	mov.b64 	%rd2362, {%r2482, %r2481};
	shr.u64 	%rd2363, %rd2347, 6;
	xor.b64  	%rd2364, %rd2361, %rd2363;
	xor.b64  	%rd2365, %rd2364, %rd2362;
	shf.r.wrap.b32 	%r2483, %r2092, %r2091, 1;
	shf.r.wrap.b32 	%r2484, %r2091, %r2092, 1;
	mov.b64 	%rd2366, {%r2484, %r2483};
	shf.r.wrap.b32 	%r2485, %r2092, %r2091, 8;
	shf.r.wrap.b32 	%r2486, %r2091, %r2092, 8;
	mov.b64 	%rd2367, {%r2486, %r2485};
	shr.u64 	%rd2368, %rd1794, 7;
	xor.b64  	%rd2369, %rd2366, %rd2368;
	xor.b64  	%rd2370, %rd2369, %rd2367;
	add.s64 	%rd2371, %rd2282, %rd1781;
	add.s64 	%rd2372, %rd2371, %rd2365;
	add.s64 	%rd2373, %rd2372, %rd2370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2487,%dummy}, %rd2193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2488}, %rd2193;
	}
	shf.r.wrap.b32 	%r2489, %r2488, %r2487, 14;
	shf.r.wrap.b32 	%r2490, %r2487, %r2488, 14;
	mov.b64 	%rd2374, {%r2490, %r2489};
	shf.r.wrap.b32 	%r2491, %r2488, %r2487, 18;
	shf.r.wrap.b32 	%r2492, %r2487, %r2488, 18;
	mov.b64 	%rd2375, {%r2492, %r2491};
	xor.b64  	%rd2376, %rd2375, %rd2374;
	shf.l.wrap.b32 	%r2493, %r2487, %r2488, 23;
	shf.l.wrap.b32 	%r2494, %r2488, %r2487, 23;
	mov.b64 	%rd2377, {%r2494, %r2493};
	xor.b64  	%rd2378, %rd2376, %rd2377;
	xor.b64  	%rd2379, %rd2145, %rd2169;
	and.b64  	%rd2380, %rd2379, %rd2193;
	xor.b64  	%rd2381, %rd2380, %rd2145;
	add.s64 	%rd2382, %rd2381, %rd2121;
	add.s64 	%rd2383, %rd2382, %rd2217;
	add.s64 	%rd2384, %rd2383, %rd88;
	add.s64 	%rd2385, %rd2384, %rd2378;
	add.s64 	%rd2386, %rd2385, %rd2132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2495,%dummy}, %rd2204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2496}, %rd2204;
	}
	shf.r.wrap.b32 	%r2497, %r2496, %r2495, 28;
	shf.r.wrap.b32 	%r2498, %r2495, %r2496, 28;
	mov.b64 	%rd2387, {%r2498, %r2497};
	shf.l.wrap.b32 	%r2499, %r2495, %r2496, 30;
	shf.l.wrap.b32 	%r2500, %r2496, %r2495, 30;
	mov.b64 	%rd2388, {%r2500, %r2499};
	xor.b64  	%rd2389, %rd2388, %rd2387;
	shf.l.wrap.b32 	%r2501, %r2495, %r2496, 25;
	shf.l.wrap.b32 	%r2502, %r2496, %r2495, 25;
	mov.b64 	%rd2390, {%r2502, %r2501};
	xor.b64  	%rd2391, %rd2389, %rd2390;
	xor.b64  	%rd2392, %rd2204, %rd2156;
	xor.b64  	%rd2393, %rd2204, %rd2180;
	and.b64  	%rd2394, %rd2393, %rd2392;
	xor.b64  	%rd2395, %rd2394, %rd2204;
	add.s64 	%rd2396, %rd2385, %rd2395;
	add.s64 	%rd2397, %rd2396, %rd2391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2503,%dummy}, %rd2386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2504}, %rd2386;
	}
	shf.r.wrap.b32 	%r2505, %r2504, %r2503, 14;
	shf.r.wrap.b32 	%r2506, %r2503, %r2504, 14;
	mov.b64 	%rd2398, {%r2506, %r2505};
	shf.r.wrap.b32 	%r2507, %r2504, %r2503, 18;
	shf.r.wrap.b32 	%r2508, %r2503, %r2504, 18;
	mov.b64 	%rd2399, {%r2508, %r2507};
	xor.b64  	%rd2400, %rd2399, %rd2398;
	shf.l.wrap.b32 	%r2509, %r2503, %r2504, 23;
	shf.l.wrap.b32 	%r2510, %r2504, %r2503, 23;
	mov.b64 	%rd2401, {%r2510, %r2509};
	xor.b64  	%rd2402, %rd2400, %rd2401;
	xor.b64  	%rd2403, %rd2169, %rd2193;
	and.b64  	%rd2404, %rd2386, %rd2403;
	xor.b64  	%rd2405, %rd2404, %rd2169;
	add.s64 	%rd2406, %rd2230, %rd2145;
	add.s64 	%rd2407, %rd2406, %rd89;
	add.s64 	%rd2408, %rd2407, %rd2405;
	add.s64 	%rd2409, %rd2408, %rd2402;
	add.s64 	%rd2410, %rd2409, %rd2156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2511,%dummy}, %rd2397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2512}, %rd2397;
	}
	shf.r.wrap.b32 	%r2513, %r2512, %r2511, 28;
	shf.r.wrap.b32 	%r2514, %r2511, %r2512, 28;
	mov.b64 	%rd2411, {%r2514, %r2513};
	shf.l.wrap.b32 	%r2515, %r2511, %r2512, 30;
	shf.l.wrap.b32 	%r2516, %r2512, %r2511, 30;
	mov.b64 	%rd2412, {%r2516, %r2515};
	xor.b64  	%rd2413, %rd2412, %rd2411;
	shf.l.wrap.b32 	%r2517, %r2511, %r2512, 25;
	shf.l.wrap.b32 	%r2518, %r2512, %r2511, 25;
	mov.b64 	%rd2414, {%r2518, %r2517};
	xor.b64  	%rd2415, %rd2413, %rd2414;
	xor.b64  	%rd2416, %rd2397, %rd2180;
	xor.b64  	%rd2417, %rd2397, %rd2204;
	and.b64  	%rd2418, %rd2417, %rd2416;
	xor.b64  	%rd2419, %rd2418, %rd2397;
	add.s64 	%rd2420, %rd2409, %rd2419;
	add.s64 	%rd2421, %rd2420, %rd2415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2519,%dummy}, %rd2410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2520}, %rd2410;
	}
	shf.r.wrap.b32 	%r2521, %r2520, %r2519, 14;
	shf.r.wrap.b32 	%r2522, %r2519, %r2520, 14;
	mov.b64 	%rd2422, {%r2522, %r2521};
	shf.r.wrap.b32 	%r2523, %r2520, %r2519, 18;
	shf.r.wrap.b32 	%r2524, %r2519, %r2520, 18;
	mov.b64 	%rd2423, {%r2524, %r2523};
	xor.b64  	%rd2424, %rd2423, %rd2422;
	shf.l.wrap.b32 	%r2525, %r2519, %r2520, 23;
	shf.l.wrap.b32 	%r2526, %r2520, %r2519, 23;
	mov.b64 	%rd2425, {%r2526, %r2525};
	xor.b64  	%rd2426, %rd2424, %rd2425;
	xor.b64  	%rd2427, %rd2386, %rd2193;
	and.b64  	%rd2428, %rd2410, %rd2427;
	xor.b64  	%rd2429, %rd2428, %rd2193;
	add.s64 	%rd2430, %rd2243, %rd2169;
	add.s64 	%rd2431, %rd2430, %rd90;
	add.s64 	%rd2432, %rd2431, %rd2429;
	add.s64 	%rd2433, %rd2432, %rd2426;
	add.s64 	%rd2434, %rd2433, %rd2180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2527,%dummy}, %rd2421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2528}, %rd2421;
	}
	shf.r.wrap.b32 	%r2529, %r2528, %r2527, 28;
	shf.r.wrap.b32 	%r2530, %r2527, %r2528, 28;
	mov.b64 	%rd2435, {%r2530, %r2529};
	shf.l.wrap.b32 	%r2531, %r2527, %r2528, 30;
	shf.l.wrap.b32 	%r2532, %r2528, %r2527, 30;
	mov.b64 	%rd2436, {%r2532, %r2531};
	xor.b64  	%rd2437, %rd2436, %rd2435;
	shf.l.wrap.b32 	%r2533, %r2527, %r2528, 25;
	shf.l.wrap.b32 	%r2534, %r2528, %r2527, 25;
	mov.b64 	%rd2438, {%r2534, %r2533};
	xor.b64  	%rd2439, %rd2437, %rd2438;
	xor.b64  	%rd2440, %rd2421, %rd2204;
	xor.b64  	%rd2441, %rd2421, %rd2397;
	and.b64  	%rd2442, %rd2441, %rd2440;
	xor.b64  	%rd2443, %rd2442, %rd2421;
	add.s64 	%rd2444, %rd2433, %rd2443;
	add.s64 	%rd2445, %rd2444, %rd2439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2535,%dummy}, %rd2434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2536}, %rd2434;
	}
	shf.r.wrap.b32 	%r2537, %r2536, %r2535, 14;
	shf.r.wrap.b32 	%r2538, %r2535, %r2536, 14;
	mov.b64 	%rd2446, {%r2538, %r2537};
	shf.r.wrap.b32 	%r2539, %r2536, %r2535, 18;
	shf.r.wrap.b32 	%r2540, %r2535, %r2536, 18;
	mov.b64 	%rd2447, {%r2540, %r2539};
	xor.b64  	%rd2448, %rd2447, %rd2446;
	shf.l.wrap.b32 	%r2541, %r2535, %r2536, 23;
	shf.l.wrap.b32 	%r2542, %r2536, %r2535, 23;
	mov.b64 	%rd2449, {%r2542, %r2541};
	xor.b64  	%rd2450, %rd2448, %rd2449;
	xor.b64  	%rd2451, %rd2410, %rd2386;
	and.b64  	%rd2452, %rd2434, %rd2451;
	xor.b64  	%rd2453, %rd2452, %rd2386;
	add.s64 	%rd2454, %rd2256, %rd2193;
	add.s64 	%rd2455, %rd2454, %rd91;
	add.s64 	%rd2456, %rd2455, %rd2453;
	add.s64 	%rd2457, %rd2456, %rd2450;
	add.s64 	%rd2458, %rd2457, %rd2204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2543,%dummy}, %rd2445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2544}, %rd2445;
	}
	shf.r.wrap.b32 	%r2545, %r2544, %r2543, 28;
	shf.r.wrap.b32 	%r2546, %r2543, %r2544, 28;
	mov.b64 	%rd2459, {%r2546, %r2545};
	shf.l.wrap.b32 	%r2547, %r2543, %r2544, 30;
	shf.l.wrap.b32 	%r2548, %r2544, %r2543, 30;
	mov.b64 	%rd2460, {%r2548, %r2547};
	xor.b64  	%rd2461, %rd2460, %rd2459;
	shf.l.wrap.b32 	%r2549, %r2543, %r2544, 25;
	shf.l.wrap.b32 	%r2550, %r2544, %r2543, 25;
	mov.b64 	%rd2462, {%r2550, %r2549};
	xor.b64  	%rd2463, %rd2461, %rd2462;
	xor.b64  	%rd2464, %rd2445, %rd2397;
	xor.b64  	%rd2465, %rd2445, %rd2421;
	and.b64  	%rd2466, %rd2465, %rd2464;
	xor.b64  	%rd2467, %rd2466, %rd2445;
	add.s64 	%rd2468, %rd2457, %rd2467;
	add.s64 	%rd2469, %rd2468, %rd2463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2551,%dummy}, %rd2458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2552}, %rd2458;
	}
	shf.r.wrap.b32 	%r2553, %r2552, %r2551, 14;
	shf.r.wrap.b32 	%r2554, %r2551, %r2552, 14;
	mov.b64 	%rd2470, {%r2554, %r2553};
	shf.r.wrap.b32 	%r2555, %r2552, %r2551, 18;
	shf.r.wrap.b32 	%r2556, %r2551, %r2552, 18;
	mov.b64 	%rd2471, {%r2556, %r2555};
	xor.b64  	%rd2472, %rd2471, %rd2470;
	shf.l.wrap.b32 	%r2557, %r2551, %r2552, 23;
	shf.l.wrap.b32 	%r2558, %r2552, %r2551, 23;
	mov.b64 	%rd2473, {%r2558, %r2557};
	xor.b64  	%rd2474, %rd2472, %rd2473;
	xor.b64  	%rd2475, %rd2434, %rd2410;
	and.b64  	%rd2476, %rd2458, %rd2475;
	xor.b64  	%rd2477, %rd2476, %rd2410;
	add.s64 	%rd2478, %rd2386, %rd2269;
	add.s64 	%rd2479, %rd2478, %rd92;
	add.s64 	%rd2480, %rd2479, %rd2477;
	add.s64 	%rd2481, %rd2480, %rd2474;
	add.s64 	%rd2482, %rd2481, %rd2397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2559,%dummy}, %rd2469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2560}, %rd2469;
	}
	shf.r.wrap.b32 	%r2561, %r2560, %r2559, 28;
	shf.r.wrap.b32 	%r2562, %r2559, %r2560, 28;
	mov.b64 	%rd2483, {%r2562, %r2561};
	shf.l.wrap.b32 	%r2563, %r2559, %r2560, 30;
	shf.l.wrap.b32 	%r2564, %r2560, %r2559, 30;
	mov.b64 	%rd2484, {%r2564, %r2563};
	xor.b64  	%rd2485, %rd2484, %rd2483;
	shf.l.wrap.b32 	%r2565, %r2559, %r2560, 25;
	shf.l.wrap.b32 	%r2566, %r2560, %r2559, 25;
	mov.b64 	%rd2486, {%r2566, %r2565};
	xor.b64  	%rd2487, %rd2485, %rd2486;
	xor.b64  	%rd2488, %rd2469, %rd2421;
	xor.b64  	%rd2489, %rd2469, %rd2445;
	and.b64  	%rd2490, %rd2489, %rd2488;
	xor.b64  	%rd2491, %rd2490, %rd2469;
	add.s64 	%rd2492, %rd2481, %rd2491;
	add.s64 	%rd2493, %rd2492, %rd2487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2567,%dummy}, %rd2482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2568}, %rd2482;
	}
	shf.r.wrap.b32 	%r2569, %r2568, %r2567, 14;
	shf.r.wrap.b32 	%r2570, %r2567, %r2568, 14;
	mov.b64 	%rd2494, {%r2570, %r2569};
	shf.r.wrap.b32 	%r2571, %r2568, %r2567, 18;
	shf.r.wrap.b32 	%r2572, %r2567, %r2568, 18;
	mov.b64 	%rd2495, {%r2572, %r2571};
	xor.b64  	%rd2496, %rd2495, %rd2494;
	shf.l.wrap.b32 	%r2573, %r2567, %r2568, 23;
	shf.l.wrap.b32 	%r2574, %r2568, %r2567, 23;
	mov.b64 	%rd2497, {%r2574, %r2573};
	xor.b64  	%rd2498, %rd2496, %rd2497;
	xor.b64  	%rd2499, %rd2458, %rd2434;
	and.b64  	%rd2500, %rd2482, %rd2499;
	xor.b64  	%rd2501, %rd2500, %rd2434;
	add.s64 	%rd2502, %rd2410, %rd2282;
	add.s64 	%rd2503, %rd2502, %rd93;
	add.s64 	%rd2504, %rd2503, %rd2501;
	add.s64 	%rd2505, %rd2504, %rd2498;
	add.s64 	%rd2506, %rd2505, %rd2421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2575,%dummy}, %rd2493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2576}, %rd2493;
	}
	shf.r.wrap.b32 	%r2577, %r2576, %r2575, 28;
	shf.r.wrap.b32 	%r2578, %r2575, %r2576, 28;
	mov.b64 	%rd2507, {%r2578, %r2577};
	shf.l.wrap.b32 	%r2579, %r2575, %r2576, 30;
	shf.l.wrap.b32 	%r2580, %r2576, %r2575, 30;
	mov.b64 	%rd2508, {%r2580, %r2579};
	xor.b64  	%rd2509, %rd2508, %rd2507;
	shf.l.wrap.b32 	%r2581, %r2575, %r2576, 25;
	shf.l.wrap.b32 	%r2582, %r2576, %r2575, 25;
	mov.b64 	%rd2510, {%r2582, %r2581};
	xor.b64  	%rd2511, %rd2509, %rd2510;
	xor.b64  	%rd2512, %rd2493, %rd2445;
	xor.b64  	%rd2513, %rd2493, %rd2469;
	and.b64  	%rd2514, %rd2513, %rd2512;
	xor.b64  	%rd2515, %rd2514, %rd2493;
	add.s64 	%rd2516, %rd2505, %rd2515;
	add.s64 	%rd2517, %rd2516, %rd2511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2583,%dummy}, %rd2506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2584}, %rd2506;
	}
	shf.r.wrap.b32 	%r2585, %r2584, %r2583, 14;
	shf.r.wrap.b32 	%r2586, %r2583, %r2584, 14;
	mov.b64 	%rd2518, {%r2586, %r2585};
	shf.r.wrap.b32 	%r2587, %r2584, %r2583, 18;
	shf.r.wrap.b32 	%r2588, %r2583, %r2584, 18;
	mov.b64 	%rd2519, {%r2588, %r2587};
	xor.b64  	%rd2520, %rd2519, %rd2518;
	shf.l.wrap.b32 	%r2589, %r2583, %r2584, 23;
	shf.l.wrap.b32 	%r2590, %r2584, %r2583, 23;
	mov.b64 	%rd2521, {%r2590, %r2589};
	xor.b64  	%rd2522, %rd2520, %rd2521;
	xor.b64  	%rd2523, %rd2482, %rd2458;
	and.b64  	%rd2524, %rd2506, %rd2523;
	xor.b64  	%rd2525, %rd2524, %rd2458;
	add.s64 	%rd2526, %rd2434, %rd2295;
	add.s64 	%rd2527, %rd2526, %rd94;
	add.s64 	%rd2528, %rd2527, %rd2525;
	add.s64 	%rd2529, %rd2528, %rd2522;
	add.s64 	%rd2530, %rd2529, %rd2445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2591,%dummy}, %rd2517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2592}, %rd2517;
	}
	shf.r.wrap.b32 	%r2593, %r2592, %r2591, 28;
	shf.r.wrap.b32 	%r2594, %r2591, %r2592, 28;
	mov.b64 	%rd2531, {%r2594, %r2593};
	shf.l.wrap.b32 	%r2595, %r2591, %r2592, 30;
	shf.l.wrap.b32 	%r2596, %r2592, %r2591, 30;
	mov.b64 	%rd2532, {%r2596, %r2595};
	xor.b64  	%rd2533, %rd2532, %rd2531;
	shf.l.wrap.b32 	%r2597, %r2591, %r2592, 25;
	shf.l.wrap.b32 	%r2598, %r2592, %r2591, 25;
	mov.b64 	%rd2534, {%r2598, %r2597};
	xor.b64  	%rd2535, %rd2533, %rd2534;
	xor.b64  	%rd2536, %rd2517, %rd2469;
	xor.b64  	%rd2537, %rd2517, %rd2493;
	and.b64  	%rd2538, %rd2537, %rd2536;
	xor.b64  	%rd2539, %rd2538, %rd2517;
	add.s64 	%rd2540, %rd2529, %rd2539;
	add.s64 	%rd2541, %rd2540, %rd2535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2599,%dummy}, %rd2530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2600}, %rd2530;
	}
	shf.r.wrap.b32 	%r2601, %r2600, %r2599, 14;
	shf.r.wrap.b32 	%r2602, %r2599, %r2600, 14;
	mov.b64 	%rd2542, {%r2602, %r2601};
	shf.r.wrap.b32 	%r2603, %r2600, %r2599, 18;
	shf.r.wrap.b32 	%r2604, %r2599, %r2600, 18;
	mov.b64 	%rd2543, {%r2604, %r2603};
	xor.b64  	%rd2544, %rd2543, %rd2542;
	shf.l.wrap.b32 	%r2605, %r2599, %r2600, 23;
	shf.l.wrap.b32 	%r2606, %r2600, %r2599, 23;
	mov.b64 	%rd2545, {%r2606, %r2605};
	xor.b64  	%rd2546, %rd2544, %rd2545;
	xor.b64  	%rd2547, %rd2506, %rd2482;
	and.b64  	%rd2548, %rd2530, %rd2547;
	xor.b64  	%rd2549, %rd2548, %rd2482;
	add.s64 	%rd2550, %rd2458, %rd2308;
	add.s64 	%rd2551, %rd2550, %rd95;
	add.s64 	%rd2552, %rd2551, %rd2549;
	add.s64 	%rd2553, %rd2552, %rd2546;
	add.s64 	%rd2554, %rd2553, %rd2469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2607,%dummy}, %rd2541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2608}, %rd2541;
	}
	shf.r.wrap.b32 	%r2609, %r2608, %r2607, 28;
	shf.r.wrap.b32 	%r2610, %r2607, %r2608, 28;
	mov.b64 	%rd2555, {%r2610, %r2609};
	shf.l.wrap.b32 	%r2611, %r2607, %r2608, 30;
	shf.l.wrap.b32 	%r2612, %r2608, %r2607, 30;
	mov.b64 	%rd2556, {%r2612, %r2611};
	xor.b64  	%rd2557, %rd2556, %rd2555;
	shf.l.wrap.b32 	%r2613, %r2607, %r2608, 25;
	shf.l.wrap.b32 	%r2614, %r2608, %r2607, 25;
	mov.b64 	%rd2558, {%r2614, %r2613};
	xor.b64  	%rd2559, %rd2557, %rd2558;
	xor.b64  	%rd2560, %rd2541, %rd2493;
	xor.b64  	%rd2561, %rd2541, %rd2517;
	and.b64  	%rd2562, %rd2561, %rd2560;
	xor.b64  	%rd2563, %rd2562, %rd2541;
	add.s64 	%rd2564, %rd2553, %rd2563;
	add.s64 	%rd2565, %rd2564, %rd2559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2615,%dummy}, %rd2554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2616}, %rd2554;
	}
	shf.r.wrap.b32 	%r2617, %r2616, %r2615, 14;
	shf.r.wrap.b32 	%r2618, %r2615, %r2616, 14;
	mov.b64 	%rd2566, {%r2618, %r2617};
	shf.r.wrap.b32 	%r2619, %r2616, %r2615, 18;
	shf.r.wrap.b32 	%r2620, %r2615, %r2616, 18;
	mov.b64 	%rd2567, {%r2620, %r2619};
	xor.b64  	%rd2568, %rd2567, %rd2566;
	shf.l.wrap.b32 	%r2621, %r2615, %r2616, 23;
	shf.l.wrap.b32 	%r2622, %r2616, %r2615, 23;
	mov.b64 	%rd2569, {%r2622, %r2621};
	xor.b64  	%rd2570, %rd2568, %rd2569;
	xor.b64  	%rd2571, %rd2530, %rd2506;
	and.b64  	%rd2572, %rd2554, %rd2571;
	xor.b64  	%rd2573, %rd2572, %rd2506;
	add.s64 	%rd2574, %rd2482, %rd2321;
	add.s64 	%rd2575, %rd2574, %rd96;
	add.s64 	%rd2576, %rd2575, %rd2573;
	add.s64 	%rd2577, %rd2576, %rd2570;
	add.s64 	%rd2578, %rd2577, %rd2493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2623,%dummy}, %rd2565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2624}, %rd2565;
	}
	shf.r.wrap.b32 	%r2625, %r2624, %r2623, 28;
	shf.r.wrap.b32 	%r2626, %r2623, %r2624, 28;
	mov.b64 	%rd2579, {%r2626, %r2625};
	shf.l.wrap.b32 	%r2627, %r2623, %r2624, 30;
	shf.l.wrap.b32 	%r2628, %r2624, %r2623, 30;
	mov.b64 	%rd2580, {%r2628, %r2627};
	xor.b64  	%rd2581, %rd2580, %rd2579;
	shf.l.wrap.b32 	%r2629, %r2623, %r2624, 25;
	shf.l.wrap.b32 	%r2630, %r2624, %r2623, 25;
	mov.b64 	%rd2582, {%r2630, %r2629};
	xor.b64  	%rd2583, %rd2581, %rd2582;
	xor.b64  	%rd2584, %rd2565, %rd2517;
	xor.b64  	%rd2585, %rd2565, %rd2541;
	and.b64  	%rd2586, %rd2585, %rd2584;
	xor.b64  	%rd2587, %rd2586, %rd2565;
	add.s64 	%rd2588, %rd2577, %rd2587;
	add.s64 	%rd2589, %rd2588, %rd2583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2631,%dummy}, %rd2578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2632}, %rd2578;
	}
	shf.r.wrap.b32 	%r2633, %r2632, %r2631, 14;
	shf.r.wrap.b32 	%r2634, %r2631, %r2632, 14;
	mov.b64 	%rd2590, {%r2634, %r2633};
	shf.r.wrap.b32 	%r2635, %r2632, %r2631, 18;
	shf.r.wrap.b32 	%r2636, %r2631, %r2632, 18;
	mov.b64 	%rd2591, {%r2636, %r2635};
	xor.b64  	%rd2592, %rd2591, %rd2590;
	shf.l.wrap.b32 	%r2637, %r2631, %r2632, 23;
	shf.l.wrap.b32 	%r2638, %r2632, %r2631, 23;
	mov.b64 	%rd2593, {%r2638, %r2637};
	xor.b64  	%rd2594, %rd2592, %rd2593;
	xor.b64  	%rd2595, %rd2554, %rd2530;
	and.b64  	%rd2596, %rd2578, %rd2595;
	xor.b64  	%rd2597, %rd2596, %rd2530;
	add.s64 	%rd2598, %rd2506, %rd2334;
	add.s64 	%rd2599, %rd2598, %rd97;
	add.s64 	%rd2600, %rd2599, %rd2597;
	add.s64 	%rd2601, %rd2600, %rd2594;
	add.s64 	%rd2602, %rd2601, %rd2517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2639,%dummy}, %rd2589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2640}, %rd2589;
	}
	shf.r.wrap.b32 	%r2641, %r2640, %r2639, 28;
	shf.r.wrap.b32 	%r2642, %r2639, %r2640, 28;
	mov.b64 	%rd2603, {%r2642, %r2641};
	shf.l.wrap.b32 	%r2643, %r2639, %r2640, 30;
	shf.l.wrap.b32 	%r2644, %r2640, %r2639, 30;
	mov.b64 	%rd2604, {%r2644, %r2643};
	xor.b64  	%rd2605, %rd2604, %rd2603;
	shf.l.wrap.b32 	%r2645, %r2639, %r2640, 25;
	shf.l.wrap.b32 	%r2646, %r2640, %r2639, 25;
	mov.b64 	%rd2606, {%r2646, %r2645};
	xor.b64  	%rd2607, %rd2605, %rd2606;
	xor.b64  	%rd2608, %rd2589, %rd2541;
	xor.b64  	%rd2609, %rd2589, %rd2565;
	and.b64  	%rd2610, %rd2609, %rd2608;
	xor.b64  	%rd2611, %rd2610, %rd2589;
	add.s64 	%rd2612, %rd2601, %rd2611;
	add.s64 	%rd2613, %rd2612, %rd2607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2647,%dummy}, %rd2602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2648}, %rd2602;
	}
	shf.r.wrap.b32 	%r2649, %r2648, %r2647, 14;
	shf.r.wrap.b32 	%r2650, %r2647, %r2648, 14;
	mov.b64 	%rd2614, {%r2650, %r2649};
	shf.r.wrap.b32 	%r2651, %r2648, %r2647, 18;
	shf.r.wrap.b32 	%r2652, %r2647, %r2648, 18;
	mov.b64 	%rd2615, {%r2652, %r2651};
	xor.b64  	%rd2616, %rd2615, %rd2614;
	shf.l.wrap.b32 	%r2653, %r2647, %r2648, 23;
	shf.l.wrap.b32 	%r2654, %r2648, %r2647, 23;
	mov.b64 	%rd2617, {%r2654, %r2653};
	xor.b64  	%rd2618, %rd2616, %rd2617;
	xor.b64  	%rd2619, %rd2578, %rd2554;
	and.b64  	%rd2620, %rd2602, %rd2619;
	xor.b64  	%rd2621, %rd2620, %rd2554;
	add.s64 	%rd2622, %rd2530, %rd2347;
	add.s64 	%rd2623, %rd2622, %rd98;
	add.s64 	%rd2624, %rd2623, %rd2621;
	add.s64 	%rd2625, %rd2624, %rd2618;
	add.s64 	%rd2626, %rd2625, %rd2541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2655,%dummy}, %rd2613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2656}, %rd2613;
	}
	shf.r.wrap.b32 	%r2657, %r2656, %r2655, 28;
	shf.r.wrap.b32 	%r2658, %r2655, %r2656, 28;
	mov.b64 	%rd2627, {%r2658, %r2657};
	shf.l.wrap.b32 	%r2659, %r2655, %r2656, 30;
	shf.l.wrap.b32 	%r2660, %r2656, %r2655, 30;
	mov.b64 	%rd2628, {%r2660, %r2659};
	xor.b64  	%rd2629, %rd2628, %rd2627;
	shf.l.wrap.b32 	%r2661, %r2655, %r2656, 25;
	shf.l.wrap.b32 	%r2662, %r2656, %r2655, 25;
	mov.b64 	%rd2630, {%r2662, %r2661};
	xor.b64  	%rd2631, %rd2629, %rd2630;
	xor.b64  	%rd2632, %rd2613, %rd2565;
	xor.b64  	%rd2633, %rd2613, %rd2589;
	and.b64  	%rd2634, %rd2633, %rd2632;
	xor.b64  	%rd2635, %rd2634, %rd2613;
	add.s64 	%rd2636, %rd2625, %rd2635;
	add.s64 	%rd2637, %rd2636, %rd2631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2663,%dummy}, %rd2626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2664}, %rd2626;
	}
	shf.r.wrap.b32 	%r2665, %r2664, %r2663, 14;
	shf.r.wrap.b32 	%r2666, %r2663, %r2664, 14;
	mov.b64 	%rd2638, {%r2666, %r2665};
	shf.r.wrap.b32 	%r2667, %r2664, %r2663, 18;
	shf.r.wrap.b32 	%r2668, %r2663, %r2664, 18;
	mov.b64 	%rd2639, {%r2668, %r2667};
	xor.b64  	%rd2640, %rd2639, %rd2638;
	shf.l.wrap.b32 	%r2669, %r2663, %r2664, 23;
	shf.l.wrap.b32 	%r2670, %r2664, %r2663, 23;
	mov.b64 	%rd2641, {%r2670, %r2669};
	xor.b64  	%rd2642, %rd2640, %rd2641;
	xor.b64  	%rd2643, %rd2602, %rd2578;
	and.b64  	%rd2644, %rd2626, %rd2643;
	xor.b64  	%rd2645, %rd2644, %rd2578;
	add.s64 	%rd2646, %rd2554, %rd2360;
	add.s64 	%rd2647, %rd2646, %rd99;
	add.s64 	%rd2648, %rd2647, %rd2645;
	add.s64 	%rd2649, %rd2648, %rd2642;
	add.s64 	%rd2650, %rd2649, %rd2565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2671,%dummy}, %rd2637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2672}, %rd2637;
	}
	shf.r.wrap.b32 	%r2673, %r2672, %r2671, 28;
	shf.r.wrap.b32 	%r2674, %r2671, %r2672, 28;
	mov.b64 	%rd2651, {%r2674, %r2673};
	shf.l.wrap.b32 	%r2675, %r2671, %r2672, 30;
	shf.l.wrap.b32 	%r2676, %r2672, %r2671, 30;
	mov.b64 	%rd2652, {%r2676, %r2675};
	xor.b64  	%rd2653, %rd2652, %rd2651;
	shf.l.wrap.b32 	%r2677, %r2671, %r2672, 25;
	shf.l.wrap.b32 	%r2678, %r2672, %r2671, 25;
	mov.b64 	%rd2654, {%r2678, %r2677};
	xor.b64  	%rd2655, %rd2653, %rd2654;
	xor.b64  	%rd2656, %rd2637, %rd2589;
	xor.b64  	%rd2657, %rd2637, %rd2613;
	and.b64  	%rd2658, %rd2657, %rd2656;
	xor.b64  	%rd2659, %rd2658, %rd2637;
	add.s64 	%rd2660, %rd2649, %rd2659;
	add.s64 	%rd2661, %rd2660, %rd2655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2679,%dummy}, %rd2650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2680}, %rd2650;
	}
	shf.r.wrap.b32 	%r2681, %r2680, %r2679, 14;
	shf.r.wrap.b32 	%r2682, %r2679, %r2680, 14;
	mov.b64 	%rd2662, {%r2682, %r2681};
	shf.r.wrap.b32 	%r2683, %r2680, %r2679, 18;
	shf.r.wrap.b32 	%r2684, %r2679, %r2680, 18;
	mov.b64 	%rd2663, {%r2684, %r2683};
	xor.b64  	%rd2664, %rd2663, %rd2662;
	shf.l.wrap.b32 	%r2685, %r2679, %r2680, 23;
	shf.l.wrap.b32 	%r2686, %r2680, %r2679, 23;
	mov.b64 	%rd2665, {%r2686, %r2685};
	xor.b64  	%rd2666, %rd2664, %rd2665;
	xor.b64  	%rd2667, %rd2626, %rd2602;
	and.b64  	%rd2668, %rd2650, %rd2667;
	xor.b64  	%rd2669, %rd2668, %rd2602;
	add.s64 	%rd2670, %rd2578, %rd2373;
	add.s64 	%rd2671, %rd2670, %rd100;
	add.s64 	%rd2672, %rd2671, %rd2669;
	add.s64 	%rd2673, %rd2672, %rd2666;
	add.s64 	%rd2674, %rd2673, %rd2589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2687,%dummy}, %rd2661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2688}, %rd2661;
	}
	shf.r.wrap.b32 	%r2689, %r2688, %r2687, 28;
	shf.r.wrap.b32 	%r2690, %r2687, %r2688, 28;
	mov.b64 	%rd2675, {%r2690, %r2689};
	shf.l.wrap.b32 	%r2691, %r2687, %r2688, 30;
	shf.l.wrap.b32 	%r2692, %r2688, %r2687, 30;
	mov.b64 	%rd2676, {%r2692, %r2691};
	xor.b64  	%rd2677, %rd2676, %rd2675;
	shf.l.wrap.b32 	%r2693, %r2687, %r2688, 25;
	shf.l.wrap.b32 	%r2694, %r2688, %r2687, 25;
	mov.b64 	%rd2678, {%r2694, %r2693};
	xor.b64  	%rd2679, %rd2677, %rd2678;
	xor.b64  	%rd2680, %rd2661, %rd2613;
	xor.b64  	%rd2681, %rd2661, %rd2637;
	and.b64  	%rd2682, %rd2681, %rd2680;
	xor.b64  	%rd2683, %rd2682, %rd2661;
	add.s64 	%rd2684, %rd2673, %rd2683;
	add.s64 	%rd2685, %rd2684, %rd2679;
	cvt.u32.u64	%r190, %rd2674;
	shr.u64 	%rd2686, %rd2674, 32;
	cvt.u32.u64	%r191, %rd2686;
	cvt.u32.u64	%r192, %rd2685;
	shr.u64 	%rd2687, %rd2685, 32;
	cvt.u32.u64	%r193, %rd2687;
	shr.u32 	%r2695, %r190, %r187;
	and.b32  	%r2696, %r2695, %r214;
	mul.wide.u32 	%rd2688, %r2696, 4;
	add.s64 	%rd2689, %rd2723, %rd2688;
	and.b32  	%r2697, %r190, 31;
	mov.u32 	%r2698, 1;
	shl.b32 	%r194, %r2698, %r2697;
	ld.global.u32 	%r2699, [%rd2689];
	and.b32  	%r2700, %r2699, %r194;
	setp.eq.s32	%p26, %r2700, 0;
	@%p26 bra 	BB3_72;

	mov.u32 	%r2757, 1;
	ld.param.u64 	%rd2717, [m01710_m16_param_7];
	shr.u32 	%r2701, %r191, %r187;
	and.b32  	%r2702, %r2701, %r214;
	mul.wide.u32 	%rd2690, %r2702, 4;
	add.s64 	%rd2691, %rd2717, %rd2690;
	and.b32  	%r2703, %r191, 31;
	shl.b32 	%r195, %r2757, %r2703;
	ld.global.u32 	%r2705, [%rd2691];
	and.b32  	%r2706, %r2705, %r195;
	setp.eq.s32	%p27, %r2706, 0;
	@%p27 bra 	BB3_72;

	mov.u32 	%r2758, 1;
	ld.param.u64 	%rd2718, [m01710_m16_param_8];
	shr.u32 	%r2707, %r192, %r187;
	and.b32  	%r2708, %r2707, %r214;
	mul.wide.u32 	%rd2692, %r2708, 4;
	add.s64 	%rd2693, %rd2718, %rd2692;
	and.b32  	%r2709, %r192, 31;
	shl.b32 	%r196, %r2758, %r2709;
	ld.global.u32 	%r2711, [%rd2693];
	and.b32  	%r2712, %r2711, %r196;
	setp.eq.s32	%p28, %r2712, 0;
	@%p28 bra 	BB3_72;

	mov.u32 	%r2759, 1;
	ld.param.u64 	%rd2719, [m01710_m16_param_9];
	shr.u32 	%r2713, %r193, %r187;
	and.b32  	%r2714, %r2713, %r214;
	mul.wide.u32 	%rd2694, %r2714, 4;
	add.s64 	%rd2695, %rd2719, %rd2694;
	and.b32  	%r2715, %r193, 31;
	shl.b32 	%r197, %r2759, %r2715;
	ld.global.u32 	%r2717, [%rd2695];
	and.b32  	%r2718, %r2717, %r197;
	setp.eq.s32	%p29, %r2718, 0;
	@%p29 bra 	BB3_72;

	and.b32  	%r2756, %r190, 31;
	mov.u32 	%r2755, 1;
	shl.b32 	%r2754, %r2755, %r2756;
	ld.param.u64 	%rd2720, [m01710_m16_param_10];
	shr.u32 	%r2719, %r190, %r188;
	and.b32  	%r2720, %r2719, %r214;
	mul.wide.u32 	%rd2696, %r2720, 4;
	add.s64 	%rd2697, %rd2720, %rd2696;
	ld.global.u32 	%r2721, [%rd2697];
	and.b32  	%r2722, %r2721, %r2754;
	setp.eq.s32	%p30, %r2722, 0;
	@%p30 bra 	BB3_72;

	ld.param.u64 	%rd2721, [m01710_m16_param_11];
	shr.u32 	%r2723, %r191, %r188;
	and.b32  	%r2724, %r2723, %r214;
	mul.wide.u32 	%rd2698, %r2724, 4;
	add.s64 	%rd2699, %rd2721, %rd2698;
	ld.global.u32 	%r2725, [%rd2699];
	and.b32  	%r2726, %r2725, %r195;
	setp.eq.s32	%p31, %r2726, 0;
	@%p31 bra 	BB3_72;

	ld.param.u64 	%rd2724, [m01710_m16_param_12];
	shr.u32 	%r2727, %r192, %r188;
	and.b32  	%r2728, %r2727, %r214;
	mul.wide.u32 	%rd2700, %r2728, 4;
	add.s64 	%rd2701, %rd2724, %rd2700;
	ld.global.u32 	%r2729, [%rd2701];
	and.b32  	%r2730, %r2729, %r196;
	setp.eq.s32	%p32, %r2730, 0;
	@%p32 bra 	BB3_72;

	ld.param.u64 	%rd2725, [m01710_m16_param_13];
	shr.u32 	%r2731, %r193, %r188;
	and.b32  	%r2732, %r2731, %r214;
	mul.wide.u32 	%rd2702, %r2732, 4;
	add.s64 	%rd2703, %rd2725, %rd2702;
	ld.global.u32 	%r2733, [%rd2703];
	and.b32  	%r2734, %r2733, %r197;
	setp.eq.s32	%p33, %r2734, 0;
	@%p33 bra 	BB3_72;

	setp.eq.s32	%p34, %r219, 0;
	mov.u32 	%r2781, 0;
	mov.u32 	%r2735, -1;
	mov.u32 	%r2780, %r219;
	@%p34 bra 	BB3_66;

BB3_54:
	mov.u32 	%r2782, 1;
	ld.param.u64 	%rd2726, [m01710_m16_param_15];
	shr.u32 	%r200, %r2780, 1;
	add.s32 	%r2783, %r200, %r2781;
	cvt.u64.u32	%rd2704, %r2783;
	add.s64 	%rd101, %rd2704, %rd25;
	shl.b64 	%rd2705, %rd101, 6;
	add.s64 	%rd2706, %rd2726, %rd2705;
	ld.global.u32 	%r202, [%rd2706+28];
	setp.gt.u32	%p35, %r193, %r202;
	@%p35 bra 	BB3_64;

	setp.lt.u32	%p36, %r193, %r202;
	mov.u32 	%r2738, -1;
	@%p36 bra 	BB3_56;
	bra.uni 	BB3_57;

BB3_56:
	mov.u32 	%r2782, %r2738;
	bra.uni 	BB3_64;

BB3_57:
	mov.u32 	%r2782, 1;
	ld.global.u32 	%r203, [%rd2706+24];
	setp.gt.u32	%p37, %r192, %r203;
	@%p37 bra 	BB3_64;

	setp.lt.u32	%p38, %r192, %r203;
	@%p38 bra 	BB3_59;
	bra.uni 	BB3_60;

BB3_59:
	mov.u32 	%r2782, %r2738;
	bra.uni 	BB3_64;

BB3_60:
	mov.u32 	%r2782, 1;
	ld.global.u32 	%r204, [%rd2706+60];
	setp.gt.u32	%p39, %r191, %r204;
	@%p39 bra 	BB3_64;

	setp.lt.u32	%p40, %r191, %r204;
	mov.u32 	%r2782, %r2738;
	@%p40 bra 	BB3_64;

	mov.u32 	%r2782, 1;
	ld.global.u32 	%r205, [%rd2706+56];
	setp.gt.u32	%p41, %r190, %r205;
	@%p41 bra 	BB3_64;

	setp.lt.u32	%p42, %r190, %r205;
	selp.b32	%r2782, -1, 0, %p42;

BB3_64:
	add.s32 	%r2744, %r200, 1;
	setp.gt.s32	%p43, %r2782, 0;
	selp.b32	%r2745, %r2744, 0, %p43;
	add.s32 	%r2781, %r2745, %r2781;
	selp.b32	%r2746, -1, 0, %p43;
	add.s32 	%r2747, %r2746, %r2780;
	shr.u32 	%r2780, %r2747, 1;
	setp.eq.s32	%p44, %r2782, 0;
	@%p44 bra 	BB3_67;

	setp.ne.s32	%p45, %r2780, 0;
	@%p45 bra 	BB3_54;

BB3_66:
	mov.u32 	%r2783, %r2735;

BB3_67:
	setp.eq.s32	%p46, %r2783, -1;
	@%p46 bra 	BB3_72;

	ld.param.u64 	%rd2727, [m01710_m16_param_16];
	ld.param.u32 	%r2751, [m01710_m16_param_32];
	add.s32 	%r211, %r2783, %r2751;
	mul.wide.u32 	%rd2713, %r211, 4;
	add.s64 	%rd2714, %rd2727, %rd2713;
	atom.global.add.u32 	%r2749, [%rd2714], 1;
	setp.ne.s32	%p47, %r2749, 0;
	@%p47 bra 	BB3_72;

	atom.global.add.u32 	%r212, [%rd116], 1;
	setp.lt.u32	%p48, %r212, %r219;
	@%p48 bra 	BB3_71;
	bra.uni 	BB3_70;

BB3_71:
	ld.param.u64 	%rd2728, [m01710_m16_param_14];
	ld.param.u32 	%r2752, [m01710_m16_param_27];
	mul.wide.u32 	%rd2715, %r212, 20;
	add.s64 	%rd2716, %rd2728, %rd2715;
	st.global.u32 	[%rd2716], %r2752;
	st.global.u32 	[%rd2716+4], %r2783;
	st.global.u32 	[%rd2716+8], %r211;
	st.global.u32 	[%rd2716+12], %r1;
	st.global.u32 	[%rd2716+16], %r2779;
	bra.uni 	BB3_72;

BB3_70:
	atom.global.add.u32 	%r2750, [%rd116], -1;

BB3_72:
	ld.param.u32 	%r2753, [m01710_m16_param_30];
	add.s32 	%r2779, %r2779, 1;
	setp.lt.u32	%p49, %r2779, %r2753;
	@%p49 bra 	BB3_45;

BB3_73:
	ret;
}

	// .globl	m01710_s04
.entry m01710_s04(
	.param .u64 .ptr .global .align 4 m01710_s04_param_0,
	.param .u64 .ptr .global .align 4 m01710_s04_param_1,
	.param .u64 .ptr .global .align 4 m01710_s04_param_2,
	.param .u64 .ptr .global .align 4 m01710_s04_param_3,
	.param .u64 .ptr .global .align 1 m01710_s04_param_4,
	.param .u64 .ptr .global .align 1 m01710_s04_param_5,
	.param .u64 .ptr .global .align 4 m01710_s04_param_6,
	.param .u64 .ptr .global .align 4 m01710_s04_param_7,
	.param .u64 .ptr .global .align 4 m01710_s04_param_8,
	.param .u64 .ptr .global .align 4 m01710_s04_param_9,
	.param .u64 .ptr .global .align 4 m01710_s04_param_10,
	.param .u64 .ptr .global .align 4 m01710_s04_param_11,
	.param .u64 .ptr .global .align 4 m01710_s04_param_12,
	.param .u64 .ptr .global .align 4 m01710_s04_param_13,
	.param .u64 .ptr .global .align 4 m01710_s04_param_14,
	.param .u64 .ptr .global .align 4 m01710_s04_param_15,
	.param .u64 .ptr .global .align 4 m01710_s04_param_16,
	.param .u64 .ptr .global .align 4 m01710_s04_param_17,
	.param .u64 .ptr .global .align 1 m01710_s04_param_18,
	.param .u64 .ptr .global .align 4 m01710_s04_param_19,
	.param .u64 .ptr .global .align 4 m01710_s04_param_20,
	.param .u64 .ptr .global .align 4 m01710_s04_param_21,
	.param .u64 .ptr .global .align 4 m01710_s04_param_22,
	.param .u64 .ptr .global .align 4 m01710_s04_param_23,
	.param .u32 m01710_s04_param_24,
	.param .u32 m01710_s04_param_25,
	.param .u32 m01710_s04_param_26,
	.param .u32 m01710_s04_param_27,
	.param .u32 m01710_s04_param_28,
	.param .u32 m01710_s04_param_29,
	.param .u32 m01710_s04_param_30,
	.param .u32 m01710_s04_param_31,
	.param .u32 m01710_s04_param_32,
	.param .u32 m01710_s04_param_33,
	.param .u32 m01710_s04_param_34
)
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<1837>;
	.reg .b64 	%rd<2714>;


	ld.param.u64 	%rd95, [m01710_s04_param_0];
	ld.param.u64 	%rd98, [m01710_s04_param_15];
	ld.param.u64 	%rd99, [m01710_s04_param_16];
	ld.param.u64 	%rd100, [m01710_s04_param_19];
	ld.param.u32 	%r13, [m01710_s04_param_30];
	ld.param.u32 	%r15, [m01710_s04_param_32];
	ld.param.u32 	%r16, [m01710_s04_param_34];
	mov.b32	%r17, %envreg3;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %ntid.x;
	mad.lo.s32 	%r20, %r18, %r19, %r17;
	mov.u32 	%r21, %tid.x;
	add.s32 	%r1, %r20, %r21;
	setp.ge.u32	%p1, %r1, %r16;
	@%p1 bra 	BB4_10;

	setp.eq.s32	%p2, %r13, 0;
	@%p2 bra 	BB4_10;

	mul.wide.u32 	%rd101, %r1, 80;
	add.s64 	%rd102, %rd95, %rd101;
	ld.global.u32 	%r2, [%rd102];
	mul.wide.u32 	%rd103, %r15, 64;
	add.s64 	%rd104, %rd98, %rd103;
	ld.global.u32 	%r3, [%rd104+56];
	ld.global.u32 	%r4, [%rd104+60];
	ld.global.u32 	%r5, [%rd104+24];
	ld.global.u32 	%r6, [%rd104+28];
	ld.global.u32 	%r7, [%rd102+4];
	ld.global.u32 	%r23, [%rd102+8];
	ld.global.u32 	%r24, [%rd102+12];
	mov.b64	%rd105, {%r24, %r23};
	ld.global.u32 	%r25, [%rd102+60];
	mov.u32 	%r1836, 0;
	mov.b64	%rd1, {%r25, %r1836};
	ld.const.u64 	%rd106, [k_sha512];
	add.s64 	%rd2, %rd106, 6620516959819538809;
	mov.u64 	%rd107, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26,%dummy}, %rd107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27}, %rd107;
	}
	shf.r.wrap.b32 	%r28, %r27, %r26, 18;
	shf.r.wrap.b32 	%r29, %r26, %r27, 18;
	mov.b64 	%rd108, {%r29, %r28};
	shf.r.wrap.b32 	%r30, %r27, %r26, 14;
	shf.r.wrap.b32 	%r31, %r26, %r27, 14;
	mov.b64 	%rd109, {%r31, %r30};
	xor.b64  	%rd110, %rd108, %rd109;
	shf.l.wrap.b32 	%r32, %r26, %r27, 23;
	shf.l.wrap.b32 	%r33, %r27, %r26, 23;
	mov.b64 	%rd111, {%r33, %r32};
	xor.b64  	%rd3, %rd110, %rd111;
	mov.u64 	%rd112, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r34}, %rd112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35,%dummy}, %rd112;
	}
	shf.l.wrap.b32 	%r36, %r35, %r34, 30;
	shf.l.wrap.b32 	%r37, %r34, %r35, 30;
	mov.b64 	%rd113, {%r37, %r36};
	shf.r.wrap.b32 	%r38, %r34, %r35, 28;
	shf.r.wrap.b32 	%r39, %r35, %r34, 28;
	mov.b64 	%rd114, {%r39, %r38};
	xor.b64  	%rd115, %rd113, %rd114;
	shf.l.wrap.b32 	%r40, %r35, %r34, 25;
	shf.l.wrap.b32 	%r41, %r34, %r35, 25;
	mov.b64 	%rd116, {%r41, %r40};
	xor.b64  	%rd4, %rd115, %rd116;
	ld.const.u64 	%rd117, [k_sha512+8];
	add.s64 	%rd118, %rd105, %rd117;
	add.s64 	%rd5, %rd118, 2270897969802886507;
	ld.const.u64 	%rd119, [k_sha512+16];
	add.s64 	%rd6, %rd119, -7276294671716946913;
	ld.const.u64 	%rd120, [k_sha512+24];
	add.s64 	%rd7, %rd120, 5840696475078001361;
	mul.wide.u32 	%rd121, %r15, 4;
	add.s64 	%rd20, %rd99, %rd121;
	mov.u64 	%rd122, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r42}, %rd122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r43,%dummy}, %rd122;
	}
	shf.l.wrap.b32 	%r44, %r43, %r42, 3;
	shf.l.wrap.b32 	%r45, %r42, %r43, 3;
	mov.b64 	%rd123, {%r45, %r44};
	shf.r.wrap.b32 	%r46, %r42, %r43, 19;
	shf.r.wrap.b32 	%r47, %r43, %r42, 19;
	mov.b64 	%rd124, {%r47, %r46};
	xor.b64  	%rd21, %rd124, %rd123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r48,%dummy}, %rd105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r49}, %rd105;
	}
	shf.r.wrap.b32 	%r50, %r49, %r48, 1;
	shf.r.wrap.b32 	%r51, %r48, %r49, 1;
	mov.b64 	%rd125, {%r51, %r50};
	shf.r.wrap.b32 	%r52, %r49, %r48, 8;
	shf.r.wrap.b32 	%r53, %r48, %r49, 8;
	mov.b64 	%rd126, {%r53, %r52};
	shr.u64 	%rd127, %rd105, 7;
	xor.b64  	%rd128, %rd125, %rd127;
	xor.b64  	%rd22, %rd128, %rd126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r54,%dummy}, %rd1;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r55}, %rd1;
	}
	shf.r.wrap.b32 	%r56, %r55, %r54, 19;
	shf.r.wrap.b32 	%r57, %r54, %r55, 19;
	mov.b64 	%rd129, {%r57, %r56};
	shf.l.wrap.b32 	%r58, %r54, %r55, 3;
	shf.l.wrap.b32 	%r59, %r55, %r54, 3;
	mov.b64 	%rd130, {%r59, %r58};
	shr.u64 	%rd131, %rd1, 6;
	xor.b64  	%rd132, %rd129, %rd131;
	xor.b64  	%rd133, %rd132, %rd130;
	shf.r.wrap.b32 	%r60, %r42, %r43, 8;
	shf.r.wrap.b32 	%r61, %r43, %r42, 8;
	mov.b64 	%rd134, {%r61, %r60};
	shf.r.wrap.b32 	%r62, %r42, %r43, 1;
	shf.r.wrap.b32 	%r63, %r43, %r42, 1;
	mov.b64 	%rd135, {%r63, %r62};
	xor.b64  	%rd23, %rd135, %rd134;
	add.s64 	%rd136, %rd105, %rd133;
	add.s64 	%rd24, %rd136, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd24;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd24;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 19;
	shf.r.wrap.b32 	%r67, %r64, %r65, 19;
	mov.b64 	%rd137, {%r67, %r66};
	shf.l.wrap.b32 	%r68, %r64, %r65, 3;
	shf.l.wrap.b32 	%r69, %r65, %r64, 3;
	mov.b64 	%rd138, {%r69, %r68};
	shr.u64 	%rd139, %rd24, 6;
	xor.b64  	%rd140, %rd137, %rd139;
	xor.b64  	%rd141, %rd140, %rd138;
	add.s64 	%rd25, %rd141, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r70,%dummy}, %rd25;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r71}, %rd25;
	}
	shf.r.wrap.b32 	%r72, %r71, %r70, 19;
	shf.r.wrap.b32 	%r73, %r70, %r71, 19;
	mov.b64 	%rd142, {%r73, %r72};
	shf.l.wrap.b32 	%r74, %r70, %r71, 3;
	shf.l.wrap.b32 	%r75, %r71, %r70, 3;
	mov.b64 	%rd143, {%r75, %r74};
	shr.u64 	%rd144, %rd25, 6;
	xor.b64  	%rd145, %rd142, %rd144;
	xor.b64  	%rd146, %rd145, %rd143;
	add.s64 	%rd26, %rd146, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd26;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd26;
	}
	shf.r.wrap.b32 	%r78, %r77, %r76, 19;
	shf.r.wrap.b32 	%r79, %r76, %r77, 19;
	mov.b64 	%rd147, {%r79, %r78};
	shf.l.wrap.b32 	%r80, %r76, %r77, 3;
	shf.l.wrap.b32 	%r81, %r77, %r76, 3;
	mov.b64 	%rd148, {%r81, %r80};
	shr.u64 	%rd149, %rd26, 6;
	xor.b64  	%rd150, %rd147, %rd149;
	xor.b64  	%rd27, %rd150, %rd148;
	shf.r.wrap.b32 	%r82, %r55, %r54, 1;
	shf.r.wrap.b32 	%r83, %r54, %r55, 1;
	mov.b64 	%rd151, {%r83, %r82};
	shf.r.wrap.b32 	%r84, %r55, %r54, 8;
	shf.r.wrap.b32 	%r85, %r54, %r55, 8;
	mov.b64 	%rd152, {%r85, %r84};
	shr.u64 	%rd153, %rd1, 7;
	xor.b64  	%rd154, %rd151, %rd153;
	xor.b64  	%rd28, %rd154, %rd152;
	shf.r.wrap.b32 	%r86, %r65, %r64, 1;
	shf.r.wrap.b32 	%r87, %r64, %r65, 1;
	mov.b64 	%rd155, {%r87, %r86};
	shf.r.wrap.b32 	%r88, %r65, %r64, 8;
	shf.r.wrap.b32 	%r89, %r64, %r65, 8;
	mov.b64 	%rd156, {%r89, %r88};
	shr.u64 	%rd157, %rd24, 7;
	xor.b64  	%rd158, %rd155, %rd157;
	xor.b64  	%rd45, %rd158, %rd156;
	shf.r.wrap.b32 	%r90, %r71, %r70, 1;
	shf.r.wrap.b32 	%r91, %r70, %r71, 1;
	mov.b64 	%rd159, {%r91, %r90};
	shf.r.wrap.b32 	%r92, %r71, %r70, 8;
	shf.r.wrap.b32 	%r93, %r70, %r71, 8;
	mov.b64 	%rd160, {%r93, %r92};
	shr.u64 	%rd161, %rd25, 7;
	xor.b64  	%rd162, %rd159, %rd161;
	xor.b64  	%rd46, %rd162, %rd160;
	shf.r.wrap.b32 	%r94, %r77, %r76, 1;
	shf.r.wrap.b32 	%r95, %r76, %r77, 1;
	mov.b64 	%rd163, {%r95, %r94};
	shf.r.wrap.b32 	%r96, %r77, %r76, 8;
	shf.r.wrap.b32 	%r97, %r76, %r77, 8;
	mov.b64 	%rd164, {%r97, %r96};
	shr.u64 	%rd165, %rd26, 7;
	xor.b64  	%rd166, %rd163, %rd165;
	xor.b64  	%rd47, %rd166, %rd164;

BB4_3:
	mov.u32 	%r1833, 0;
	mov.b64	%rd2712, {%r25, %r1833};
	ld.const.u64 	%rd2711, [k_sha512+608];
	ld.const.u64 	%rd2710, [k_sha512+600];
	ld.const.u64 	%rd2709, [k_sha512+592];
	ld.const.u64 	%rd2708, [k_sha512+584];
	ld.const.u64 	%rd2707, [k_sha512+576];
	ld.const.u64 	%rd2706, [k_sha512+568];
	ld.const.u64 	%rd2705, [k_sha512+560];
	ld.const.u64 	%rd2704, [k_sha512+552];
	ld.const.u64 	%rd2703, [k_sha512+544];
	ld.const.u64 	%rd2702, [k_sha512+536];
	ld.const.u64 	%rd2701, [k_sha512+528];
	ld.const.u64 	%rd2700, [k_sha512+520];
	ld.const.u64 	%rd2699, [k_sha512+512];
	ld.const.u64 	%rd2698, [k_sha512+504];
	ld.const.u64 	%rd2697, [k_sha512+496];
	ld.const.u64 	%rd2696, [k_sha512+488];
	ld.const.u64 	%rd2695, [k_sha512+480];
	ld.const.u64 	%rd2694, [k_sha512+472];
	ld.const.u64 	%rd2693, [k_sha512+464];
	ld.const.u64 	%rd2692, [k_sha512+456];
	ld.const.u64 	%rd2691, [k_sha512+448];
	ld.const.u64 	%rd2690, [k_sha512+440];
	ld.const.u64 	%rd2689, [k_sha512+432];
	ld.const.u64 	%rd2688, [k_sha512+424];
	ld.const.u64 	%rd2687, [k_sha512+416];
	ld.const.u64 	%rd2686, [k_sha512+408];
	ld.const.u64 	%rd2685, [k_sha512+400];
	ld.const.u64 	%rd2684, [k_sha512+392];
	ld.const.u64 	%rd2683, [k_sha512+384];
	ld.const.u64 	%rd2682, [k_sha512+376];
	ld.const.u64 	%rd2681, [k_sha512+368];
	ld.const.u64 	%rd2680, [k_sha512+360];
	ld.const.u64 	%rd2679, [k_sha512+352];
	ld.const.u64 	%rd2678, [k_sha512+344];
	ld.const.u64 	%rd2677, [k_sha512+336];
	ld.const.u64 	%rd2676, [k_sha512+328];
	ld.const.u64 	%rd2675, [k_sha512+320];
	ld.const.u64 	%rd2674, [k_sha512+312];
	ld.const.u64 	%rd2673, [k_sha512+304];
	ld.const.u64 	%rd2672, [k_sha512+296];
	ld.const.u64 	%rd2671, [k_sha512+288];
	ld.const.u64 	%rd2670, [k_sha512+280];
	ld.const.u64 	%rd2669, [k_sha512+272];
	ld.const.u64 	%rd2668, [k_sha512+264];
	ld.const.u64 	%rd2667, [k_sha512+256];
	ld.const.u64 	%rd2666, [k_sha512+248];
	ld.const.u64 	%rd2665, [k_sha512+240];
	ld.const.u64 	%rd2664, [k_sha512+232];
	ld.const.u64 	%rd2663, [k_sha512+224];
	ld.const.u64 	%rd2662, [k_sha512+216];
	ld.const.u64 	%rd2661, [k_sha512+208];
	ld.const.u64 	%rd2660, [k_sha512+200];
	ld.const.u64 	%rd2659, [k_sha512+192];
	ld.const.u64 	%rd2658, [k_sha512+184];
	ld.const.u64 	%rd2657, [k_sha512+176];
	ld.const.u64 	%rd2656, [k_sha512+168];
	ld.const.u64 	%rd2655, [k_sha512+160];
	ld.const.u64 	%rd2654, [k_sha512+152];
	ld.const.u64 	%rd2653, [k_sha512+144];
	ld.const.u64 	%rd2652, [k_sha512+136];
	ld.const.u64 	%rd2651, [k_sha512+128];
	ld.const.u64 	%rd2650, [k_sha512+120];
	ld.const.u64 	%rd2649, [k_sha512+112];
	ld.const.u64 	%rd2648, [k_sha512+104];
	ld.const.u64 	%rd2647, [k_sha512+96];
	ld.const.u64 	%rd2646, [k_sha512+88];
	ld.const.u64 	%rd2645, [k_sha512+80];
	ld.const.u64 	%rd2644, [k_sha512+72];
	ld.const.u64 	%rd2643, [k_sha512+64];
	ld.const.u64 	%rd2642, [k_sha512+56];
	ld.const.u64 	%rd2641, [k_sha512+48];
	ld.const.u64 	%rd2640, [k_sha512+40];
	ld.const.u64 	%rd2639, [k_sha512+32];
	ld.param.u64 	%rd2638, [m01710_s04_param_3];
	mul.wide.u32 	%rd167, %r1836, 4;
	add.s64 	%rd168, %rd2638, %rd167;
	ld.global.u32 	%r98, [%rd168];
	or.b32  	%r99, %r98, %r2;
	mov.b64	%rd169, {%r7, %r99};
	add.s64 	%rd170, %rd2, %rd169;
	add.s64 	%rd171, %rd170, %rd3;
	add.s64 	%rd172, %rd171, -4263291710961585108;
	add.s64 	%rd173, %rd171, %rd4;
	add.s64 	%rd174, %rd173, 6482280703085258342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r100,%dummy}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r101}, %rd172;
	}
	shf.r.wrap.b32 	%r102, %r101, %r100, 14;
	shf.r.wrap.b32 	%r103, %r100, %r101, 14;
	mov.b64 	%rd175, {%r103, %r102};
	shf.r.wrap.b32 	%r104, %r101, %r100, 18;
	shf.r.wrap.b32 	%r105, %r100, %r101, 18;
	mov.b64 	%rd176, {%r105, %r104};
	xor.b64  	%rd177, %rd176, %rd175;
	shf.l.wrap.b32 	%r106, %r100, %r101, 23;
	shf.l.wrap.b32 	%r107, %r101, %r100, 23;
	mov.b64 	%rd178, {%r107, %r106};
	xor.b64  	%rd179, %rd177, %rd178;
	and.b64  	%rd180, %rd172, -3887949035690463538;
	xor.b64  	%rd181, %rd180, -7276294671716946913;
	add.s64 	%rd182, %rd5, %rd181;
	add.s64 	%rd183, %rd182, %rd179;
	add.s64 	%rd184, %rd183, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r108,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r109}, %rd174;
	}
	shf.r.wrap.b32 	%r110, %r109, %r108, 28;
	shf.r.wrap.b32 	%r111, %r108, %r109, 28;
	mov.b64 	%rd185, {%r111, %r110};
	shf.l.wrap.b32 	%r112, %r108, %r109, 30;
	shf.l.wrap.b32 	%r113, %r109, %r108, 30;
	mov.b64 	%rd186, {%r113, %r112};
	xor.b64  	%rd187, %rd186, %rd185;
	shf.l.wrap.b32 	%r114, %r108, %r109, 25;
	shf.l.wrap.b32 	%r115, %r109, %r108, 25;
	mov.b64 	%rd188, {%r115, %r114};
	xor.b64  	%rd189, %rd187, %rd188;
	xor.b64  	%rd190, %rd174, -4942790177534073029;
	xor.b64  	%rd191, %rd174, 7640891576956012808;
	and.b64  	%rd192, %rd191, %rd190;
	xor.b64  	%rd193, %rd192, %rd174;
	add.s64 	%rd194, %rd183, %rd193;
	add.s64 	%rd195, %rd194, %rd189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r116,%dummy}, %rd184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r117}, %rd184;
	}
	shf.r.wrap.b32 	%r118, %r117, %r116, 14;
	shf.r.wrap.b32 	%r119, %r116, %r117, 14;
	mov.b64 	%rd196, {%r119, %r118};
	shf.r.wrap.b32 	%r120, %r117, %r116, 18;
	shf.r.wrap.b32 	%r121, %r116, %r117, 18;
	mov.b64 	%rd197, {%r121, %r120};
	xor.b64  	%rd198, %rd197, %rd196;
	shf.l.wrap.b32 	%r122, %r116, %r117, 23;
	shf.l.wrap.b32 	%r123, %r117, %r116, 23;
	mov.b64 	%rd199, {%r123, %r122};
	xor.b64  	%rd200, %rd198, %rd199;
	xor.b64  	%rd201, %rd172, 5840696475078001361;
	and.b64  	%rd202, %rd184, %rd201;
	xor.b64  	%rd203, %rd202, 5840696475078001361;
	add.s64 	%rd204, %rd6, %rd203;
	add.s64 	%rd205, %rd204, %rd200;
	add.s64 	%rd206, %rd205, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r124,%dummy}, %rd195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r125}, %rd195;
	}
	shf.r.wrap.b32 	%r126, %r125, %r124, 28;
	shf.r.wrap.b32 	%r127, %r124, %r125, 28;
	mov.b64 	%rd207, {%r127, %r126};
	shf.l.wrap.b32 	%r128, %r124, %r125, 30;
	shf.l.wrap.b32 	%r129, %r125, %r124, 30;
	mov.b64 	%rd208, {%r129, %r128};
	xor.b64  	%rd209, %rd208, %rd207;
	shf.l.wrap.b32 	%r130, %r124, %r125, 25;
	shf.l.wrap.b32 	%r131, %r125, %r124, 25;
	mov.b64 	%rd210, {%r131, %r130};
	xor.b64  	%rd211, %rd209, %rd210;
	xor.b64  	%rd212, %rd195, 7640891576956012808;
	xor.b64  	%rd213, %rd195, %rd174;
	and.b64  	%rd214, %rd213, %rd212;
	xor.b64  	%rd215, %rd214, %rd195;
	add.s64 	%rd216, %rd205, %rd215;
	add.s64 	%rd217, %rd216, %rd211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r132,%dummy}, %rd206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r133}, %rd206;
	}
	shf.r.wrap.b32 	%r134, %r133, %r132, 14;
	shf.r.wrap.b32 	%r135, %r132, %r133, 14;
	mov.b64 	%rd218, {%r135, %r134};
	shf.r.wrap.b32 	%r136, %r133, %r132, 18;
	shf.r.wrap.b32 	%r137, %r132, %r133, 18;
	mov.b64 	%rd219, {%r137, %r136};
	xor.b64  	%rd220, %rd219, %rd218;
	shf.l.wrap.b32 	%r138, %r132, %r133, 23;
	shf.l.wrap.b32 	%r139, %r133, %r132, 23;
	mov.b64 	%rd221, {%r139, %r138};
	xor.b64  	%rd222, %rd220, %rd221;
	xor.b64  	%rd223, %rd184, %rd172;
	and.b64  	%rd224, %rd206, %rd223;
	xor.b64  	%rd225, %rd224, %rd172;
	add.s64 	%rd226, %rd7, %rd225;
	add.s64 	%rd227, %rd226, %rd222;
	add.s64 	%rd228, %rd227, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r140,%dummy}, %rd217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r141}, %rd217;
	}
	shf.r.wrap.b32 	%r142, %r141, %r140, 28;
	shf.r.wrap.b32 	%r143, %r140, %r141, 28;
	mov.b64 	%rd229, {%r143, %r142};
	shf.l.wrap.b32 	%r144, %r140, %r141, 30;
	shf.l.wrap.b32 	%r145, %r141, %r140, 30;
	mov.b64 	%rd230, {%r145, %r144};
	xor.b64  	%rd231, %rd230, %rd229;
	shf.l.wrap.b32 	%r146, %r140, %r141, 25;
	shf.l.wrap.b32 	%r147, %r141, %r140, 25;
	mov.b64 	%rd232, {%r147, %r146};
	xor.b64  	%rd233, %rd231, %rd232;
	xor.b64  	%rd234, %rd217, %rd174;
	xor.b64  	%rd235, %rd217, %rd195;
	and.b64  	%rd236, %rd235, %rd234;
	xor.b64  	%rd237, %rd236, %rd217;
	add.s64 	%rd238, %rd227, %rd237;
	add.s64 	%rd239, %rd238, %rd233;
	add.s64 	%rd240, %rd2639, %rd172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r148,%dummy}, %rd228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r149}, %rd228;
	}
	shf.r.wrap.b32 	%r150, %r149, %r148, 14;
	shf.r.wrap.b32 	%r151, %r148, %r149, 14;
	mov.b64 	%rd241, {%r151, %r150};
	shf.r.wrap.b32 	%r152, %r149, %r148, 18;
	shf.r.wrap.b32 	%r153, %r148, %r149, 18;
	mov.b64 	%rd242, {%r153, %r152};
	xor.b64  	%rd243, %rd242, %rd241;
	shf.l.wrap.b32 	%r154, %r148, %r149, 23;
	shf.l.wrap.b32 	%r155, %r149, %r148, 23;
	mov.b64 	%rd244, {%r155, %r154};
	xor.b64  	%rd245, %rd243, %rd244;
	xor.b64  	%rd246, %rd206, %rd184;
	and.b64  	%rd247, %rd228, %rd246;
	xor.b64  	%rd248, %rd247, %rd184;
	add.s64 	%rd249, %rd240, %rd248;
	add.s64 	%rd250, %rd249, %rd245;
	add.s64 	%rd251, %rd250, %rd174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r156,%dummy}, %rd239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r157}, %rd239;
	}
	shf.r.wrap.b32 	%r158, %r157, %r156, 28;
	shf.r.wrap.b32 	%r159, %r156, %r157, 28;
	mov.b64 	%rd252, {%r159, %r158};
	shf.l.wrap.b32 	%r160, %r156, %r157, 30;
	shf.l.wrap.b32 	%r161, %r157, %r156, 30;
	mov.b64 	%rd253, {%r161, %r160};
	xor.b64  	%rd254, %rd253, %rd252;
	shf.l.wrap.b32 	%r162, %r156, %r157, 25;
	shf.l.wrap.b32 	%r163, %r157, %r156, 25;
	mov.b64 	%rd255, {%r163, %r162};
	xor.b64  	%rd256, %rd254, %rd255;
	xor.b64  	%rd257, %rd239, %rd195;
	xor.b64  	%rd258, %rd239, %rd217;
	and.b64  	%rd259, %rd258, %rd257;
	xor.b64  	%rd260, %rd259, %rd239;
	add.s64 	%rd261, %rd250, %rd260;
	add.s64 	%rd262, %rd261, %rd256;
	add.s64 	%rd263, %rd2640, %rd184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r164,%dummy}, %rd251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r165}, %rd251;
	}
	shf.r.wrap.b32 	%r166, %r165, %r164, 14;
	shf.r.wrap.b32 	%r167, %r164, %r165, 14;
	mov.b64 	%rd264, {%r167, %r166};
	shf.r.wrap.b32 	%r168, %r165, %r164, 18;
	shf.r.wrap.b32 	%r169, %r164, %r165, 18;
	mov.b64 	%rd265, {%r169, %r168};
	xor.b64  	%rd266, %rd265, %rd264;
	shf.l.wrap.b32 	%r170, %r164, %r165, 23;
	shf.l.wrap.b32 	%r171, %r165, %r164, 23;
	mov.b64 	%rd267, {%r171, %r170};
	xor.b64  	%rd268, %rd266, %rd267;
	xor.b64  	%rd269, %rd228, %rd206;
	and.b64  	%rd270, %rd251, %rd269;
	xor.b64  	%rd271, %rd270, %rd206;
	add.s64 	%rd272, %rd263, %rd271;
	add.s64 	%rd273, %rd272, %rd268;
	add.s64 	%rd274, %rd273, %rd195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r172,%dummy}, %rd262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r173}, %rd262;
	}
	shf.r.wrap.b32 	%r174, %r173, %r172, 28;
	shf.r.wrap.b32 	%r175, %r172, %r173, 28;
	mov.b64 	%rd275, {%r175, %r174};
	shf.l.wrap.b32 	%r176, %r172, %r173, 30;
	shf.l.wrap.b32 	%r177, %r173, %r172, 30;
	mov.b64 	%rd276, {%r177, %r176};
	xor.b64  	%rd277, %rd276, %rd275;
	shf.l.wrap.b32 	%r178, %r172, %r173, 25;
	shf.l.wrap.b32 	%r179, %r173, %r172, 25;
	mov.b64 	%rd278, {%r179, %r178};
	xor.b64  	%rd279, %rd277, %rd278;
	xor.b64  	%rd280, %rd262, %rd217;
	xor.b64  	%rd281, %rd262, %rd239;
	and.b64  	%rd282, %rd281, %rd280;
	xor.b64  	%rd283, %rd282, %rd262;
	add.s64 	%rd284, %rd273, %rd283;
	add.s64 	%rd285, %rd284, %rd279;
	add.s64 	%rd286, %rd2641, %rd206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r180,%dummy}, %rd274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r181}, %rd274;
	}
	shf.r.wrap.b32 	%r182, %r181, %r180, 14;
	shf.r.wrap.b32 	%r183, %r180, %r181, 14;
	mov.b64 	%rd287, {%r183, %r182};
	shf.r.wrap.b32 	%r184, %r181, %r180, 18;
	shf.r.wrap.b32 	%r185, %r180, %r181, 18;
	mov.b64 	%rd288, {%r185, %r184};
	xor.b64  	%rd289, %rd288, %rd287;
	shf.l.wrap.b32 	%r186, %r180, %r181, 23;
	shf.l.wrap.b32 	%r187, %r181, %r180, 23;
	mov.b64 	%rd290, {%r187, %r186};
	xor.b64  	%rd291, %rd289, %rd290;
	xor.b64  	%rd292, %rd251, %rd228;
	and.b64  	%rd293, %rd274, %rd292;
	xor.b64  	%rd294, %rd293, %rd228;
	add.s64 	%rd295, %rd286, %rd294;
	add.s64 	%rd296, %rd295, %rd291;
	add.s64 	%rd297, %rd296, %rd217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r188,%dummy}, %rd285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r189}, %rd285;
	}
	shf.r.wrap.b32 	%r190, %r189, %r188, 28;
	shf.r.wrap.b32 	%r191, %r188, %r189, 28;
	mov.b64 	%rd298, {%r191, %r190};
	shf.l.wrap.b32 	%r192, %r188, %r189, 30;
	shf.l.wrap.b32 	%r193, %r189, %r188, 30;
	mov.b64 	%rd299, {%r193, %r192};
	xor.b64  	%rd300, %rd299, %rd298;
	shf.l.wrap.b32 	%r194, %r188, %r189, 25;
	shf.l.wrap.b32 	%r195, %r189, %r188, 25;
	mov.b64 	%rd301, {%r195, %r194};
	xor.b64  	%rd302, %rd300, %rd301;
	xor.b64  	%rd303, %rd285, %rd239;
	xor.b64  	%rd304, %rd285, %rd262;
	and.b64  	%rd305, %rd304, %rd303;
	xor.b64  	%rd306, %rd305, %rd285;
	add.s64 	%rd307, %rd296, %rd306;
	add.s64 	%rd308, %rd307, %rd302;
	add.s64 	%rd309, %rd2642, %rd228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r196,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r197}, %rd297;
	}
	shf.r.wrap.b32 	%r198, %r197, %r196, 14;
	shf.r.wrap.b32 	%r199, %r196, %r197, 14;
	mov.b64 	%rd310, {%r199, %r198};
	shf.r.wrap.b32 	%r200, %r197, %r196, 18;
	shf.r.wrap.b32 	%r201, %r196, %r197, 18;
	mov.b64 	%rd311, {%r201, %r200};
	xor.b64  	%rd312, %rd311, %rd310;
	shf.l.wrap.b32 	%r202, %r196, %r197, 23;
	shf.l.wrap.b32 	%r203, %r197, %r196, 23;
	mov.b64 	%rd313, {%r203, %r202};
	xor.b64  	%rd314, %rd312, %rd313;
	xor.b64  	%rd315, %rd274, %rd251;
	and.b64  	%rd316, %rd297, %rd315;
	xor.b64  	%rd317, %rd316, %rd251;
	add.s64 	%rd318, %rd309, %rd317;
	add.s64 	%rd319, %rd318, %rd314;
	add.s64 	%rd320, %rd319, %rd239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r204,%dummy}, %rd308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r205}, %rd308;
	}
	shf.r.wrap.b32 	%r206, %r205, %r204, 28;
	shf.r.wrap.b32 	%r207, %r204, %r205, 28;
	mov.b64 	%rd321, {%r207, %r206};
	shf.l.wrap.b32 	%r208, %r204, %r205, 30;
	shf.l.wrap.b32 	%r209, %r205, %r204, 30;
	mov.b64 	%rd322, {%r209, %r208};
	xor.b64  	%rd323, %rd322, %rd321;
	shf.l.wrap.b32 	%r210, %r204, %r205, 25;
	shf.l.wrap.b32 	%r211, %r205, %r204, 25;
	mov.b64 	%rd324, {%r211, %r210};
	xor.b64  	%rd325, %rd323, %rd324;
	xor.b64  	%rd326, %rd308, %rd262;
	xor.b64  	%rd327, %rd308, %rd285;
	and.b64  	%rd328, %rd327, %rd326;
	xor.b64  	%rd329, %rd328, %rd308;
	add.s64 	%rd330, %rd319, %rd329;
	add.s64 	%rd331, %rd330, %rd325;
	add.s64 	%rd332, %rd2643, %rd251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r212,%dummy}, %rd320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r213}, %rd320;
	}
	shf.r.wrap.b32 	%r214, %r213, %r212, 14;
	shf.r.wrap.b32 	%r215, %r212, %r213, 14;
	mov.b64 	%rd333, {%r215, %r214};
	shf.r.wrap.b32 	%r216, %r213, %r212, 18;
	shf.r.wrap.b32 	%r217, %r212, %r213, 18;
	mov.b64 	%rd334, {%r217, %r216};
	xor.b64  	%rd335, %rd334, %rd333;
	shf.l.wrap.b32 	%r218, %r212, %r213, 23;
	shf.l.wrap.b32 	%r219, %r213, %r212, 23;
	mov.b64 	%rd336, {%r219, %r218};
	xor.b64  	%rd337, %rd335, %rd336;
	xor.b64  	%rd338, %rd297, %rd274;
	and.b64  	%rd339, %rd320, %rd338;
	xor.b64  	%rd340, %rd339, %rd274;
	add.s64 	%rd341, %rd332, %rd340;
	add.s64 	%rd342, %rd341, %rd337;
	add.s64 	%rd343, %rd342, %rd262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r220,%dummy}, %rd331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r221}, %rd331;
	}
	shf.r.wrap.b32 	%r222, %r221, %r220, 28;
	shf.r.wrap.b32 	%r223, %r220, %r221, 28;
	mov.b64 	%rd344, {%r223, %r222};
	shf.l.wrap.b32 	%r224, %r220, %r221, 30;
	shf.l.wrap.b32 	%r225, %r221, %r220, 30;
	mov.b64 	%rd345, {%r225, %r224};
	xor.b64  	%rd346, %rd345, %rd344;
	shf.l.wrap.b32 	%r226, %r220, %r221, 25;
	shf.l.wrap.b32 	%r227, %r221, %r220, 25;
	mov.b64 	%rd347, {%r227, %r226};
	xor.b64  	%rd348, %rd346, %rd347;
	xor.b64  	%rd349, %rd331, %rd285;
	xor.b64  	%rd350, %rd331, %rd308;
	and.b64  	%rd351, %rd350, %rd349;
	xor.b64  	%rd352, %rd351, %rd331;
	add.s64 	%rd353, %rd342, %rd352;
	add.s64 	%rd354, %rd353, %rd348;
	add.s64 	%rd355, %rd2644, %rd274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r228,%dummy}, %rd343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r229}, %rd343;
	}
	shf.r.wrap.b32 	%r230, %r229, %r228, 14;
	shf.r.wrap.b32 	%r231, %r228, %r229, 14;
	mov.b64 	%rd356, {%r231, %r230};
	shf.r.wrap.b32 	%r232, %r229, %r228, 18;
	shf.r.wrap.b32 	%r233, %r228, %r229, 18;
	mov.b64 	%rd357, {%r233, %r232};
	xor.b64  	%rd358, %rd357, %rd356;
	shf.l.wrap.b32 	%r234, %r228, %r229, 23;
	shf.l.wrap.b32 	%r235, %r229, %r228, 23;
	mov.b64 	%rd359, {%r235, %r234};
	xor.b64  	%rd360, %rd358, %rd359;
	xor.b64  	%rd361, %rd320, %rd297;
	and.b64  	%rd362, %rd343, %rd361;
	xor.b64  	%rd363, %rd362, %rd297;
	add.s64 	%rd364, %rd355, %rd363;
	add.s64 	%rd365, %rd364, %rd360;
	add.s64 	%rd366, %rd365, %rd285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r236,%dummy}, %rd354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r237}, %rd354;
	}
	shf.r.wrap.b32 	%r238, %r237, %r236, 28;
	shf.r.wrap.b32 	%r239, %r236, %r237, 28;
	mov.b64 	%rd367, {%r239, %r238};
	shf.l.wrap.b32 	%r240, %r236, %r237, 30;
	shf.l.wrap.b32 	%r241, %r237, %r236, 30;
	mov.b64 	%rd368, {%r241, %r240};
	xor.b64  	%rd369, %rd368, %rd367;
	shf.l.wrap.b32 	%r242, %r236, %r237, 25;
	shf.l.wrap.b32 	%r243, %r237, %r236, 25;
	mov.b64 	%rd370, {%r243, %r242};
	xor.b64  	%rd371, %rd369, %rd370;
	xor.b64  	%rd372, %rd354, %rd308;
	xor.b64  	%rd373, %rd354, %rd331;
	and.b64  	%rd374, %rd373, %rd372;
	xor.b64  	%rd375, %rd374, %rd354;
	add.s64 	%rd376, %rd365, %rd375;
	add.s64 	%rd377, %rd376, %rd371;
	add.s64 	%rd378, %rd2645, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r244,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r245}, %rd366;
	}
	shf.r.wrap.b32 	%r246, %r245, %r244, 14;
	shf.r.wrap.b32 	%r247, %r244, %r245, 14;
	mov.b64 	%rd379, {%r247, %r246};
	shf.r.wrap.b32 	%r248, %r245, %r244, 18;
	shf.r.wrap.b32 	%r249, %r244, %r245, 18;
	mov.b64 	%rd380, {%r249, %r248};
	xor.b64  	%rd381, %rd380, %rd379;
	shf.l.wrap.b32 	%r250, %r244, %r245, 23;
	shf.l.wrap.b32 	%r251, %r245, %r244, 23;
	mov.b64 	%rd382, {%r251, %r250};
	xor.b64  	%rd383, %rd381, %rd382;
	xor.b64  	%rd384, %rd343, %rd320;
	and.b64  	%rd385, %rd366, %rd384;
	xor.b64  	%rd386, %rd385, %rd320;
	add.s64 	%rd387, %rd378, %rd386;
	add.s64 	%rd388, %rd387, %rd383;
	add.s64 	%rd389, %rd388, %rd308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r252,%dummy}, %rd377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r253}, %rd377;
	}
	shf.r.wrap.b32 	%r254, %r253, %r252, 28;
	shf.r.wrap.b32 	%r255, %r252, %r253, 28;
	mov.b64 	%rd390, {%r255, %r254};
	shf.l.wrap.b32 	%r256, %r252, %r253, 30;
	shf.l.wrap.b32 	%r257, %r253, %r252, 30;
	mov.b64 	%rd391, {%r257, %r256};
	xor.b64  	%rd392, %rd391, %rd390;
	shf.l.wrap.b32 	%r258, %r252, %r253, 25;
	shf.l.wrap.b32 	%r259, %r253, %r252, 25;
	mov.b64 	%rd393, {%r259, %r258};
	xor.b64  	%rd394, %rd392, %rd393;
	xor.b64  	%rd395, %rd377, %rd331;
	xor.b64  	%rd396, %rd377, %rd354;
	and.b64  	%rd397, %rd396, %rd395;
	xor.b64  	%rd398, %rd397, %rd377;
	add.s64 	%rd399, %rd388, %rd398;
	add.s64 	%rd400, %rd399, %rd394;
	add.s64 	%rd401, %rd2646, %rd320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r260,%dummy}, %rd389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r261}, %rd389;
	}
	shf.r.wrap.b32 	%r262, %r261, %r260, 14;
	shf.r.wrap.b32 	%r263, %r260, %r261, 14;
	mov.b64 	%rd402, {%r263, %r262};
	shf.r.wrap.b32 	%r264, %r261, %r260, 18;
	shf.r.wrap.b32 	%r265, %r260, %r261, 18;
	mov.b64 	%rd403, {%r265, %r264};
	xor.b64  	%rd404, %rd403, %rd402;
	shf.l.wrap.b32 	%r266, %r260, %r261, 23;
	shf.l.wrap.b32 	%r267, %r261, %r260, 23;
	mov.b64 	%rd405, {%r267, %r266};
	xor.b64  	%rd406, %rd404, %rd405;
	xor.b64  	%rd407, %rd366, %rd343;
	and.b64  	%rd408, %rd389, %rd407;
	xor.b64  	%rd409, %rd408, %rd343;
	add.s64 	%rd410, %rd401, %rd409;
	add.s64 	%rd411, %rd410, %rd406;
	add.s64 	%rd412, %rd411, %rd331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r268,%dummy}, %rd400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd400;
	}
	shf.r.wrap.b32 	%r270, %r269, %r268, 28;
	shf.r.wrap.b32 	%r271, %r268, %r269, 28;
	mov.b64 	%rd413, {%r271, %r270};
	shf.l.wrap.b32 	%r272, %r268, %r269, 30;
	shf.l.wrap.b32 	%r273, %r269, %r268, 30;
	mov.b64 	%rd414, {%r273, %r272};
	xor.b64  	%rd415, %rd414, %rd413;
	shf.l.wrap.b32 	%r274, %r268, %r269, 25;
	shf.l.wrap.b32 	%r275, %r269, %r268, 25;
	mov.b64 	%rd416, {%r275, %r274};
	xor.b64  	%rd417, %rd415, %rd416;
	xor.b64  	%rd418, %rd400, %rd354;
	xor.b64  	%rd419, %rd400, %rd377;
	and.b64  	%rd420, %rd419, %rd418;
	xor.b64  	%rd421, %rd420, %rd400;
	add.s64 	%rd422, %rd411, %rd421;
	add.s64 	%rd423, %rd422, %rd417;
	add.s64 	%rd424, %rd2647, %rd343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r276,%dummy}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r277}, %rd412;
	}
	shf.r.wrap.b32 	%r278, %r277, %r276, 14;
	shf.r.wrap.b32 	%r279, %r276, %r277, 14;
	mov.b64 	%rd425, {%r279, %r278};
	shf.r.wrap.b32 	%r280, %r277, %r276, 18;
	shf.r.wrap.b32 	%r281, %r276, %r277, 18;
	mov.b64 	%rd426, {%r281, %r280};
	xor.b64  	%rd427, %rd426, %rd425;
	shf.l.wrap.b32 	%r282, %r276, %r277, 23;
	shf.l.wrap.b32 	%r283, %r277, %r276, 23;
	mov.b64 	%rd428, {%r283, %r282};
	xor.b64  	%rd429, %rd427, %rd428;
	xor.b64  	%rd430, %rd389, %rd366;
	and.b64  	%rd431, %rd412, %rd430;
	xor.b64  	%rd432, %rd431, %rd366;
	add.s64 	%rd433, %rd424, %rd432;
	add.s64 	%rd434, %rd433, %rd429;
	add.s64 	%rd435, %rd434, %rd354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r284,%dummy}, %rd423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r285}, %rd423;
	}
	shf.r.wrap.b32 	%r286, %r285, %r284, 28;
	shf.r.wrap.b32 	%r287, %r284, %r285, 28;
	mov.b64 	%rd436, {%r287, %r286};
	shf.l.wrap.b32 	%r288, %r284, %r285, 30;
	shf.l.wrap.b32 	%r289, %r285, %r284, 30;
	mov.b64 	%rd437, {%r289, %r288};
	xor.b64  	%rd438, %rd437, %rd436;
	shf.l.wrap.b32 	%r290, %r284, %r285, 25;
	shf.l.wrap.b32 	%r291, %r285, %r284, 25;
	mov.b64 	%rd439, {%r291, %r290};
	xor.b64  	%rd440, %rd438, %rd439;
	xor.b64  	%rd441, %rd423, %rd377;
	xor.b64  	%rd442, %rd423, %rd400;
	and.b64  	%rd443, %rd442, %rd441;
	xor.b64  	%rd444, %rd443, %rd423;
	add.s64 	%rd445, %rd434, %rd444;
	add.s64 	%rd446, %rd445, %rd440;
	add.s64 	%rd447, %rd2648, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r292,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r293}, %rd435;
	}
	shf.r.wrap.b32 	%r294, %r293, %r292, 14;
	shf.r.wrap.b32 	%r295, %r292, %r293, 14;
	mov.b64 	%rd448, {%r295, %r294};
	shf.r.wrap.b32 	%r296, %r293, %r292, 18;
	shf.r.wrap.b32 	%r297, %r292, %r293, 18;
	mov.b64 	%rd449, {%r297, %r296};
	xor.b64  	%rd450, %rd449, %rd448;
	shf.l.wrap.b32 	%r298, %r292, %r293, 23;
	shf.l.wrap.b32 	%r299, %r293, %r292, 23;
	mov.b64 	%rd451, {%r299, %r298};
	xor.b64  	%rd452, %rd450, %rd451;
	xor.b64  	%rd453, %rd412, %rd389;
	and.b64  	%rd454, %rd435, %rd453;
	xor.b64  	%rd455, %rd454, %rd389;
	add.s64 	%rd456, %rd447, %rd455;
	add.s64 	%rd457, %rd456, %rd452;
	add.s64 	%rd458, %rd457, %rd377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd446;
	}
	shf.r.wrap.b32 	%r302, %r301, %r300, 28;
	shf.r.wrap.b32 	%r303, %r300, %r301, 28;
	mov.b64 	%rd459, {%r303, %r302};
	shf.l.wrap.b32 	%r304, %r300, %r301, 30;
	shf.l.wrap.b32 	%r305, %r301, %r300, 30;
	mov.b64 	%rd460, {%r305, %r304};
	xor.b64  	%rd461, %rd460, %rd459;
	shf.l.wrap.b32 	%r306, %r300, %r301, 25;
	shf.l.wrap.b32 	%r307, %r301, %r300, 25;
	mov.b64 	%rd462, {%r307, %r306};
	xor.b64  	%rd463, %rd461, %rd462;
	xor.b64  	%rd464, %rd446, %rd400;
	xor.b64  	%rd465, %rd446, %rd423;
	and.b64  	%rd466, %rd465, %rd464;
	xor.b64  	%rd467, %rd466, %rd446;
	add.s64 	%rd468, %rd457, %rd467;
	add.s64 	%rd469, %rd468, %rd463;
	add.s64 	%rd470, %rd2649, %rd389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r308,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r309}, %rd458;
	}
	shf.r.wrap.b32 	%r310, %r309, %r308, 14;
	shf.r.wrap.b32 	%r311, %r308, %r309, 14;
	mov.b64 	%rd471, {%r311, %r310};
	shf.r.wrap.b32 	%r312, %r309, %r308, 18;
	shf.r.wrap.b32 	%r313, %r308, %r309, 18;
	mov.b64 	%rd472, {%r313, %r312};
	xor.b64  	%rd473, %rd472, %rd471;
	shf.l.wrap.b32 	%r314, %r308, %r309, 23;
	shf.l.wrap.b32 	%r315, %r309, %r308, 23;
	mov.b64 	%rd474, {%r315, %r314};
	xor.b64  	%rd475, %rd473, %rd474;
	xor.b64  	%rd476, %rd435, %rd412;
	and.b64  	%rd477, %rd458, %rd476;
	xor.b64  	%rd478, %rd477, %rd412;
	add.s64 	%rd479, %rd470, %rd478;
	add.s64 	%rd480, %rd479, %rd475;
	add.s64 	%rd481, %rd480, %rd400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r316,%dummy}, %rd469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r317}, %rd469;
	}
	shf.r.wrap.b32 	%r318, %r317, %r316, 28;
	shf.r.wrap.b32 	%r319, %r316, %r317, 28;
	mov.b64 	%rd482, {%r319, %r318};
	shf.l.wrap.b32 	%r320, %r316, %r317, 30;
	shf.l.wrap.b32 	%r321, %r317, %r316, 30;
	mov.b64 	%rd483, {%r321, %r320};
	xor.b64  	%rd484, %rd483, %rd482;
	shf.l.wrap.b32 	%r322, %r316, %r317, 25;
	shf.l.wrap.b32 	%r323, %r317, %r316, 25;
	mov.b64 	%rd485, {%r323, %r322};
	xor.b64  	%rd486, %rd484, %rd485;
	xor.b64  	%rd487, %rd469, %rd423;
	xor.b64  	%rd488, %rd469, %rd446;
	and.b64  	%rd489, %rd488, %rd487;
	xor.b64  	%rd490, %rd489, %rd469;
	add.s64 	%rd491, %rd480, %rd490;
	add.s64 	%rd492, %rd491, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd481;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 14;
	shf.r.wrap.b32 	%r327, %r324, %r325, 14;
	mov.b64 	%rd493, {%r327, %r326};
	shf.r.wrap.b32 	%r328, %r325, %r324, 18;
	shf.r.wrap.b32 	%r329, %r324, %r325, 18;
	mov.b64 	%rd494, {%r329, %r328};
	xor.b64  	%rd495, %rd494, %rd493;
	shf.l.wrap.b32 	%r330, %r324, %r325, 23;
	shf.l.wrap.b32 	%r331, %r325, %r324, 23;
	mov.b64 	%rd496, {%r331, %r330};
	xor.b64  	%rd497, %rd495, %rd496;
	xor.b64  	%rd498, %rd458, %rd435;
	and.b64  	%rd499, %rd481, %rd498;
	xor.b64  	%rd500, %rd499, %rd435;
	add.s64 	%rd501, %rd412, %rd2712;
	add.s64 	%rd502, %rd501, %rd2650;
	add.s64 	%rd503, %rd502, %rd500;
	add.s64 	%rd504, %rd503, %rd497;
	add.s64 	%rd505, %rd504, %rd423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r332,%dummy}, %rd492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r333}, %rd492;
	}
	shf.r.wrap.b32 	%r334, %r333, %r332, 28;
	shf.r.wrap.b32 	%r335, %r332, %r333, 28;
	mov.b64 	%rd506, {%r335, %r334};
	shf.l.wrap.b32 	%r336, %r332, %r333, 30;
	shf.l.wrap.b32 	%r337, %r333, %r332, 30;
	mov.b64 	%rd507, {%r337, %r336};
	xor.b64  	%rd508, %rd507, %rd506;
	shf.l.wrap.b32 	%r338, %r332, %r333, 25;
	shf.l.wrap.b32 	%r339, %r333, %r332, 25;
	mov.b64 	%rd509, {%r339, %r338};
	xor.b64  	%rd510, %rd508, %rd509;
	xor.b64  	%rd511, %rd492, %rd446;
	xor.b64  	%rd512, %rd492, %rd469;
	and.b64  	%rd513, %rd512, %rd511;
	xor.b64  	%rd514, %rd513, %rd492;
	add.s64 	%rd515, %rd504, %rd514;
	add.s64 	%rd516, %rd515, %rd510;
	add.s64 	%rd517, %rd169, %rd21;
	add.s64 	%rd518, %rd517, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r340,%dummy}, %rd518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r341}, %rd518;
	}
	shf.r.wrap.b32 	%r342, %r341, %r340, 19;
	shf.r.wrap.b32 	%r343, %r340, %r341, 19;
	mov.b64 	%rd519, {%r343, %r342};
	shf.l.wrap.b32 	%r344, %r340, %r341, 3;
	shf.l.wrap.b32 	%r345, %r341, %r340, 3;
	mov.b64 	%rd520, {%r345, %r344};
	shr.u64 	%rd521, %rd518, 6;
	xor.b64  	%rd522, %rd519, %rd521;
	xor.b64  	%rd523, %rd522, %rd520;
	add.s64 	%rd524, %rd523, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r346,%dummy}, %rd524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r347}, %rd524;
	}
	shf.r.wrap.b32 	%r348, %r347, %r346, 19;
	shf.r.wrap.b32 	%r349, %r346, %r347, 19;
	mov.b64 	%rd525, {%r349, %r348};
	shf.l.wrap.b32 	%r350, %r346, %r347, 3;
	shf.l.wrap.b32 	%r351, %r347, %r346, 3;
	mov.b64 	%rd526, {%r351, %r350};
	shr.u64 	%rd527, %rd524, 6;
	xor.b64  	%rd528, %rd525, %rd527;
	xor.b64  	%rd529, %rd528, %rd526;
	add.s64 	%rd530, %rd529, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r352,%dummy}, %rd530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r353}, %rd530;
	}
	shf.r.wrap.b32 	%r354, %r353, %r352, 19;
	shf.r.wrap.b32 	%r355, %r352, %r353, 19;
	mov.b64 	%rd531, {%r355, %r354};
	shf.l.wrap.b32 	%r356, %r352, %r353, 3;
	shf.l.wrap.b32 	%r357, %r353, %r352, 3;
	mov.b64 	%rd532, {%r357, %r356};
	shr.u64 	%rd533, %rd530, 6;
	xor.b64  	%rd534, %rd531, %rd533;
	xor.b64  	%rd535, %rd534, %rd532;
	add.s64 	%rd536, %rd2712, %rd535;
	add.s64 	%rd537, %rd536, %rd23;
	add.s64 	%rd538, %rd518, %rd27;
	add.s64 	%rd539, %rd538, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r358,%dummy}, %rd537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r359}, %rd537;
	}
	shf.r.wrap.b32 	%r360, %r359, %r358, 19;
	shf.r.wrap.b32 	%r361, %r358, %r359, 19;
	mov.b64 	%rd540, {%r361, %r360};
	shf.l.wrap.b32 	%r362, %r358, %r359, 3;
	shf.l.wrap.b32 	%r363, %r359, %r358, 3;
	mov.b64 	%rd541, {%r363, %r362};
	shr.u64 	%rd542, %rd537, 6;
	xor.b64  	%rd543, %rd540, %rd542;
	xor.b64  	%rd544, %rd543, %rd541;
	add.s64 	%rd545, %rd24, %rd544;
	add.s64 	%rd546, %rd545, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r364,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r365}, %rd539;
	}
	shf.r.wrap.b32 	%r366, %r365, %r364, 19;
	shf.r.wrap.b32 	%r367, %r364, %r365, 19;
	mov.b64 	%rd547, {%r367, %r366};
	shf.l.wrap.b32 	%r368, %r364, %r365, 3;
	shf.l.wrap.b32 	%r369, %r365, %r364, 3;
	mov.b64 	%rd548, {%r369, %r368};
	shr.u64 	%rd549, %rd539, 6;
	xor.b64  	%rd550, %rd547, %rd549;
	xor.b64  	%rd551, %rd550, %rd548;
	add.s64 	%rd552, %rd524, %rd551;
	add.s64 	%rd553, %rd552, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r370,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r371}, %rd546;
	}
	shf.r.wrap.b32 	%r372, %r371, %r370, 19;
	shf.r.wrap.b32 	%r373, %r370, %r371, 19;
	mov.b64 	%rd554, {%r373, %r372};
	shf.l.wrap.b32 	%r374, %r370, %r371, 3;
	shf.l.wrap.b32 	%r375, %r371, %r370, 3;
	mov.b64 	%rd555, {%r375, %r374};
	shr.u64 	%rd556, %rd546, 6;
	xor.b64  	%rd557, %rd554, %rd556;
	xor.b64  	%rd558, %rd557, %rd555;
	add.s64 	%rd559, %rd25, %rd558;
	add.s64 	%rd560, %rd559, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r376,%dummy}, %rd553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r377}, %rd553;
	}
	shf.r.wrap.b32 	%r378, %r377, %r376, 19;
	shf.r.wrap.b32 	%r379, %r376, %r377, 19;
	mov.b64 	%rd561, {%r379, %r378};
	shf.l.wrap.b32 	%r380, %r376, %r377, 3;
	shf.l.wrap.b32 	%r381, %r377, %r376, 3;
	mov.b64 	%rd562, {%r381, %r380};
	shr.u64 	%rd563, %rd553, 6;
	xor.b64  	%rd564, %rd561, %rd563;
	xor.b64  	%rd565, %rd564, %rd562;
	add.s64 	%rd566, %rd530, %rd565;
	add.s64 	%rd567, %rd566, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r382,%dummy}, %rd560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r383}, %rd560;
	}
	shf.r.wrap.b32 	%r384, %r383, %r382, 19;
	shf.r.wrap.b32 	%r385, %r382, %r383, 19;
	mov.b64 	%rd568, {%r385, %r384};
	shf.l.wrap.b32 	%r386, %r382, %r383, 3;
	shf.l.wrap.b32 	%r387, %r383, %r382, 3;
	mov.b64 	%rd569, {%r387, %r386};
	shr.u64 	%rd570, %rd560, 6;
	xor.b64  	%rd571, %rd568, %rd570;
	xor.b64  	%rd572, %rd571, %rd569;
	add.s64 	%rd573, %rd26, %rd572;
	add.s64 	%rd574, %rd573, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r388,%dummy}, %rd567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r389}, %rd567;
	}
	shf.r.wrap.b32 	%r390, %r389, %r388, 19;
	shf.r.wrap.b32 	%r391, %r388, %r389, 19;
	mov.b64 	%rd575, {%r391, %r390};
	shf.l.wrap.b32 	%r392, %r388, %r389, 3;
	shf.l.wrap.b32 	%r393, %r389, %r388, 3;
	mov.b64 	%rd576, {%r393, %r392};
	shr.u64 	%rd577, %rd567, 6;
	xor.b64  	%rd578, %rd575, %rd577;
	xor.b64  	%rd579, %rd578, %rd576;
	add.s64 	%rd580, %rd537, %rd579;
	add.s64 	%rd581, %rd580, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r394,%dummy}, %rd574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r395}, %rd574;
	}
	shf.r.wrap.b32 	%r396, %r395, %r394, 19;
	shf.r.wrap.b32 	%r397, %r394, %r395, 19;
	mov.b64 	%rd582, {%r397, %r396};
	shf.l.wrap.b32 	%r398, %r394, %r395, 3;
	shf.l.wrap.b32 	%r399, %r395, %r394, 3;
	mov.b64 	%rd583, {%r399, %r398};
	shr.u64 	%rd584, %rd574, 6;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	add.s64 	%rd587, %rd539, %rd586;
	add.s64 	%rd588, %rd587, %rd28;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r400,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r401}, %rd581;
	}
	shf.r.wrap.b32 	%r402, %r401, %r400, 19;
	shf.r.wrap.b32 	%r403, %r400, %r401, 19;
	mov.b64 	%rd589, {%r403, %r402};
	shf.l.wrap.b32 	%r404, %r400, %r401, 3;
	shf.l.wrap.b32 	%r405, %r401, %r400, 3;
	mov.b64 	%rd590, {%r405, %r404};
	shr.u64 	%rd591, %rd581, 6;
	xor.b64  	%rd592, %rd589, %rd591;
	xor.b64  	%rd593, %rd592, %rd590;
	shf.r.wrap.b32 	%r406, %r341, %r340, 1;
	shf.r.wrap.b32 	%r407, %r340, %r341, 1;
	mov.b64 	%rd594, {%r407, %r406};
	shf.r.wrap.b32 	%r408, %r341, %r340, 8;
	shf.r.wrap.b32 	%r409, %r340, %r341, 8;
	mov.b64 	%rd595, {%r409, %r408};
	shr.u64 	%rd596, %rd518, 7;
	xor.b64  	%rd597, %rd594, %rd596;
	xor.b64  	%rd598, %rd597, %rd595;
	add.s64 	%rd599, %rd546, %rd2712;
	add.s64 	%rd600, %rd599, %rd593;
	add.s64 	%rd601, %rd600, %rd598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r410,%dummy}, %rd505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r411}, %rd505;
	}
	shf.r.wrap.b32 	%r412, %r411, %r410, 14;
	shf.r.wrap.b32 	%r413, %r410, %r411, 14;
	mov.b64 	%rd602, {%r413, %r412};
	shf.r.wrap.b32 	%r414, %r411, %r410, 18;
	shf.r.wrap.b32 	%r415, %r410, %r411, 18;
	mov.b64 	%rd603, {%r415, %r414};
	xor.b64  	%rd604, %rd603, %rd602;
	shf.l.wrap.b32 	%r416, %r410, %r411, 23;
	shf.l.wrap.b32 	%r417, %r411, %r410, 23;
	mov.b64 	%rd605, {%r417, %r416};
	xor.b64  	%rd606, %rd604, %rd605;
	xor.b64  	%rd607, %rd458, %rd481;
	and.b64  	%rd608, %rd607, %rd505;
	xor.b64  	%rd609, %rd608, %rd458;
	add.s64 	%rd610, %rd609, %rd435;
	add.s64 	%rd611, %rd610, %rd518;
	add.s64 	%rd612, %rd611, %rd2651;
	add.s64 	%rd613, %rd612, %rd606;
	add.s64 	%rd614, %rd613, %rd446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r418,%dummy}, %rd516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r419}, %rd516;
	}
	shf.r.wrap.b32 	%r420, %r419, %r418, 28;
	shf.r.wrap.b32 	%r421, %r418, %r419, 28;
	mov.b64 	%rd615, {%r421, %r420};
	shf.l.wrap.b32 	%r422, %r418, %r419, 30;
	shf.l.wrap.b32 	%r423, %r419, %r418, 30;
	mov.b64 	%rd616, {%r423, %r422};
	xor.b64  	%rd617, %rd616, %rd615;
	shf.l.wrap.b32 	%r424, %r418, %r419, 25;
	shf.l.wrap.b32 	%r425, %r419, %r418, 25;
	mov.b64 	%rd618, {%r425, %r424};
	xor.b64  	%rd619, %rd617, %rd618;
	xor.b64  	%rd620, %rd516, %rd469;
	xor.b64  	%rd621, %rd516, %rd492;
	and.b64  	%rd622, %rd621, %rd620;
	xor.b64  	%rd623, %rd622, %rd516;
	add.s64 	%rd624, %rd613, %rd623;
	add.s64 	%rd625, %rd624, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd614;
	}
	shf.r.wrap.b32 	%r428, %r427, %r426, 14;
	shf.r.wrap.b32 	%r429, %r426, %r427, 14;
	mov.b64 	%rd626, {%r429, %r428};
	shf.r.wrap.b32 	%r430, %r427, %r426, 18;
	shf.r.wrap.b32 	%r431, %r426, %r427, 18;
	mov.b64 	%rd627, {%r431, %r430};
	xor.b64  	%rd628, %rd627, %rd626;
	shf.l.wrap.b32 	%r432, %r426, %r427, 23;
	shf.l.wrap.b32 	%r433, %r427, %r426, 23;
	mov.b64 	%rd629, {%r433, %r432};
	xor.b64  	%rd630, %rd628, %rd629;
	xor.b64  	%rd631, %rd481, %rd505;
	and.b64  	%rd632, %rd614, %rd631;
	xor.b64  	%rd633, %rd632, %rd481;
	add.s64 	%rd634, %rd24, %rd458;
	add.s64 	%rd635, %rd634, %rd2652;
	add.s64 	%rd636, %rd635, %rd633;
	add.s64 	%rd637, %rd636, %rd630;
	add.s64 	%rd638, %rd637, %rd469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r434,%dummy}, %rd625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r435}, %rd625;
	}
	shf.r.wrap.b32 	%r436, %r435, %r434, 28;
	shf.r.wrap.b32 	%r437, %r434, %r435, 28;
	mov.b64 	%rd639, {%r437, %r436};
	shf.l.wrap.b32 	%r438, %r434, %r435, 30;
	shf.l.wrap.b32 	%r439, %r435, %r434, 30;
	mov.b64 	%rd640, {%r439, %r438};
	xor.b64  	%rd641, %rd640, %rd639;
	shf.l.wrap.b32 	%r440, %r434, %r435, 25;
	shf.l.wrap.b32 	%r441, %r435, %r434, 25;
	mov.b64 	%rd642, {%r441, %r440};
	xor.b64  	%rd643, %rd641, %rd642;
	xor.b64  	%rd644, %rd625, %rd492;
	xor.b64  	%rd645, %rd625, %rd516;
	and.b64  	%rd646, %rd645, %rd644;
	xor.b64  	%rd647, %rd646, %rd625;
	add.s64 	%rd648, %rd637, %rd647;
	add.s64 	%rd649, %rd648, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r442,%dummy}, %rd638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r443}, %rd638;
	}
	shf.r.wrap.b32 	%r444, %r443, %r442, 14;
	shf.r.wrap.b32 	%r445, %r442, %r443, 14;
	mov.b64 	%rd650, {%r445, %r444};
	shf.r.wrap.b32 	%r446, %r443, %r442, 18;
	shf.r.wrap.b32 	%r447, %r442, %r443, 18;
	mov.b64 	%rd651, {%r447, %r446};
	xor.b64  	%rd652, %rd651, %rd650;
	shf.l.wrap.b32 	%r448, %r442, %r443, 23;
	shf.l.wrap.b32 	%r449, %r443, %r442, 23;
	mov.b64 	%rd653, {%r449, %r448};
	xor.b64  	%rd654, %rd652, %rd653;
	xor.b64  	%rd655, %rd614, %rd505;
	and.b64  	%rd656, %rd638, %rd655;
	xor.b64  	%rd657, %rd656, %rd505;
	add.s64 	%rd658, %rd524, %rd481;
	add.s64 	%rd659, %rd658, %rd2653;
	add.s64 	%rd660, %rd659, %rd657;
	add.s64 	%rd661, %rd660, %rd654;
	add.s64 	%rd662, %rd661, %rd492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r450,%dummy}, %rd649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r451}, %rd649;
	}
	shf.r.wrap.b32 	%r452, %r451, %r450, 28;
	shf.r.wrap.b32 	%r453, %r450, %r451, 28;
	mov.b64 	%rd663, {%r453, %r452};
	shf.l.wrap.b32 	%r454, %r450, %r451, 30;
	shf.l.wrap.b32 	%r455, %r451, %r450, 30;
	mov.b64 	%rd664, {%r455, %r454};
	xor.b64  	%rd665, %rd664, %rd663;
	shf.l.wrap.b32 	%r456, %r450, %r451, 25;
	shf.l.wrap.b32 	%r457, %r451, %r450, 25;
	mov.b64 	%rd666, {%r457, %r456};
	xor.b64  	%rd667, %rd665, %rd666;
	xor.b64  	%rd668, %rd649, %rd516;
	xor.b64  	%rd669, %rd649, %rd625;
	and.b64  	%rd670, %rd669, %rd668;
	xor.b64  	%rd671, %rd670, %rd649;
	add.s64 	%rd672, %rd661, %rd671;
	add.s64 	%rd673, %rd672, %rd667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r459}, %rd662;
	}
	shf.r.wrap.b32 	%r460, %r459, %r458, 14;
	shf.r.wrap.b32 	%r461, %r458, %r459, 14;
	mov.b64 	%rd674, {%r461, %r460};
	shf.r.wrap.b32 	%r462, %r459, %r458, 18;
	shf.r.wrap.b32 	%r463, %r458, %r459, 18;
	mov.b64 	%rd675, {%r463, %r462};
	xor.b64  	%rd676, %rd675, %rd674;
	shf.l.wrap.b32 	%r464, %r458, %r459, 23;
	shf.l.wrap.b32 	%r465, %r459, %r458, 23;
	mov.b64 	%rd677, {%r465, %r464};
	xor.b64  	%rd678, %rd676, %rd677;
	xor.b64  	%rd679, %rd638, %rd614;
	and.b64  	%rd680, %rd662, %rd679;
	xor.b64  	%rd681, %rd680, %rd614;
	add.s64 	%rd682, %rd25, %rd505;
	add.s64 	%rd683, %rd682, %rd2654;
	add.s64 	%rd684, %rd683, %rd681;
	add.s64 	%rd685, %rd684, %rd678;
	add.s64 	%rd686, %rd685, %rd516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r466,%dummy}, %rd673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r467}, %rd673;
	}
	shf.r.wrap.b32 	%r468, %r467, %r466, 28;
	shf.r.wrap.b32 	%r469, %r466, %r467, 28;
	mov.b64 	%rd687, {%r469, %r468};
	shf.l.wrap.b32 	%r470, %r466, %r467, 30;
	shf.l.wrap.b32 	%r471, %r467, %r466, 30;
	mov.b64 	%rd688, {%r471, %r470};
	xor.b64  	%rd689, %rd688, %rd687;
	shf.l.wrap.b32 	%r472, %r466, %r467, 25;
	shf.l.wrap.b32 	%r473, %r467, %r466, 25;
	mov.b64 	%rd690, {%r473, %r472};
	xor.b64  	%rd691, %rd689, %rd690;
	xor.b64  	%rd692, %rd673, %rd625;
	xor.b64  	%rd693, %rd673, %rd649;
	and.b64  	%rd694, %rd693, %rd692;
	xor.b64  	%rd695, %rd694, %rd673;
	add.s64 	%rd696, %rd685, %rd695;
	add.s64 	%rd697, %rd696, %rd691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r474,%dummy}, %rd686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r475}, %rd686;
	}
	shf.r.wrap.b32 	%r476, %r475, %r474, 14;
	shf.r.wrap.b32 	%r477, %r474, %r475, 14;
	mov.b64 	%rd698, {%r477, %r476};
	shf.r.wrap.b32 	%r478, %r475, %r474, 18;
	shf.r.wrap.b32 	%r479, %r474, %r475, 18;
	mov.b64 	%rd699, {%r479, %r478};
	xor.b64  	%rd700, %rd699, %rd698;
	shf.l.wrap.b32 	%r480, %r474, %r475, 23;
	shf.l.wrap.b32 	%r481, %r475, %r474, 23;
	mov.b64 	%rd701, {%r481, %r480};
	xor.b64  	%rd702, %rd700, %rd701;
	xor.b64  	%rd703, %rd662, %rd638;
	and.b64  	%rd704, %rd686, %rd703;
	xor.b64  	%rd705, %rd704, %rd638;
	add.s64 	%rd706, %rd614, %rd530;
	add.s64 	%rd707, %rd706, %rd2655;
	add.s64 	%rd708, %rd707, %rd705;
	add.s64 	%rd709, %rd708, %rd702;
	add.s64 	%rd710, %rd709, %rd625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r482,%dummy}, %rd697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r483}, %rd697;
	}
	shf.r.wrap.b32 	%r484, %r483, %r482, 28;
	shf.r.wrap.b32 	%r485, %r482, %r483, 28;
	mov.b64 	%rd711, {%r485, %r484};
	shf.l.wrap.b32 	%r486, %r482, %r483, 30;
	shf.l.wrap.b32 	%r487, %r483, %r482, 30;
	mov.b64 	%rd712, {%r487, %r486};
	xor.b64  	%rd713, %rd712, %rd711;
	shf.l.wrap.b32 	%r488, %r482, %r483, 25;
	shf.l.wrap.b32 	%r489, %r483, %r482, 25;
	mov.b64 	%rd714, {%r489, %r488};
	xor.b64  	%rd715, %rd713, %rd714;
	xor.b64  	%rd716, %rd697, %rd649;
	xor.b64  	%rd717, %rd697, %rd673;
	and.b64  	%rd718, %rd717, %rd716;
	xor.b64  	%rd719, %rd718, %rd697;
	add.s64 	%rd720, %rd709, %rd719;
	add.s64 	%rd721, %rd720, %rd715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r490,%dummy}, %rd710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r491}, %rd710;
	}
	shf.r.wrap.b32 	%r492, %r491, %r490, 14;
	shf.r.wrap.b32 	%r493, %r490, %r491, 14;
	mov.b64 	%rd722, {%r493, %r492};
	shf.r.wrap.b32 	%r494, %r491, %r490, 18;
	shf.r.wrap.b32 	%r495, %r490, %r491, 18;
	mov.b64 	%rd723, {%r495, %r494};
	xor.b64  	%rd724, %rd723, %rd722;
	shf.l.wrap.b32 	%r496, %r490, %r491, 23;
	shf.l.wrap.b32 	%r497, %r491, %r490, 23;
	mov.b64 	%rd725, {%r497, %r496};
	xor.b64  	%rd726, %rd724, %rd725;
	xor.b64  	%rd727, %rd686, %rd662;
	and.b64  	%rd728, %rd710, %rd727;
	xor.b64  	%rd729, %rd728, %rd662;
	add.s64 	%rd730, %rd638, %rd26;
	add.s64 	%rd731, %rd730, %rd2656;
	add.s64 	%rd732, %rd731, %rd729;
	add.s64 	%rd733, %rd732, %rd726;
	add.s64 	%rd734, %rd733, %rd649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r498,%dummy}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r499}, %rd721;
	}
	shf.r.wrap.b32 	%r500, %r499, %r498, 28;
	shf.r.wrap.b32 	%r501, %r498, %r499, 28;
	mov.b64 	%rd735, {%r501, %r500};
	shf.l.wrap.b32 	%r502, %r498, %r499, 30;
	shf.l.wrap.b32 	%r503, %r499, %r498, 30;
	mov.b64 	%rd736, {%r503, %r502};
	xor.b64  	%rd737, %rd736, %rd735;
	shf.l.wrap.b32 	%r504, %r498, %r499, 25;
	shf.l.wrap.b32 	%r505, %r499, %r498, 25;
	mov.b64 	%rd738, {%r505, %r504};
	xor.b64  	%rd739, %rd737, %rd738;
	xor.b64  	%rd740, %rd721, %rd673;
	xor.b64  	%rd741, %rd721, %rd697;
	and.b64  	%rd742, %rd741, %rd740;
	xor.b64  	%rd743, %rd742, %rd721;
	add.s64 	%rd744, %rd733, %rd743;
	add.s64 	%rd745, %rd744, %rd739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd734;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 14;
	shf.r.wrap.b32 	%r509, %r506, %r507, 14;
	mov.b64 	%rd746, {%r509, %r508};
	shf.r.wrap.b32 	%r510, %r507, %r506, 18;
	shf.r.wrap.b32 	%r511, %r506, %r507, 18;
	mov.b64 	%rd747, {%r511, %r510};
	xor.b64  	%rd748, %rd747, %rd746;
	shf.l.wrap.b32 	%r512, %r506, %r507, 23;
	shf.l.wrap.b32 	%r513, %r507, %r506, 23;
	mov.b64 	%rd749, {%r513, %r512};
	xor.b64  	%rd750, %rd748, %rd749;
	xor.b64  	%rd751, %rd710, %rd686;
	and.b64  	%rd752, %rd734, %rd751;
	xor.b64  	%rd753, %rd752, %rd686;
	add.s64 	%rd754, %rd662, %rd537;
	add.s64 	%rd755, %rd754, %rd2657;
	add.s64 	%rd756, %rd755, %rd753;
	add.s64 	%rd757, %rd756, %rd750;
	add.s64 	%rd758, %rd757, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r514,%dummy}, %rd745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r515}, %rd745;
	}
	shf.r.wrap.b32 	%r516, %r515, %r514, 28;
	shf.r.wrap.b32 	%r517, %r514, %r515, 28;
	mov.b64 	%rd759, {%r517, %r516};
	shf.l.wrap.b32 	%r518, %r514, %r515, 30;
	shf.l.wrap.b32 	%r519, %r515, %r514, 30;
	mov.b64 	%rd760, {%r519, %r518};
	xor.b64  	%rd761, %rd760, %rd759;
	shf.l.wrap.b32 	%r520, %r514, %r515, 25;
	shf.l.wrap.b32 	%r521, %r515, %r514, 25;
	mov.b64 	%rd762, {%r521, %r520};
	xor.b64  	%rd763, %rd761, %rd762;
	xor.b64  	%rd764, %rd745, %rd697;
	xor.b64  	%rd765, %rd745, %rd721;
	and.b64  	%rd766, %rd765, %rd764;
	xor.b64  	%rd767, %rd766, %rd745;
	add.s64 	%rd768, %rd757, %rd767;
	add.s64 	%rd769, %rd768, %rd763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r522,%dummy}, %rd758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r523}, %rd758;
	}
	shf.r.wrap.b32 	%r524, %r523, %r522, 14;
	shf.r.wrap.b32 	%r525, %r522, %r523, 14;
	mov.b64 	%rd770, {%r525, %r524};
	shf.r.wrap.b32 	%r526, %r523, %r522, 18;
	shf.r.wrap.b32 	%r527, %r522, %r523, 18;
	mov.b64 	%rd771, {%r527, %r526};
	xor.b64  	%rd772, %rd771, %rd770;
	shf.l.wrap.b32 	%r528, %r522, %r523, 23;
	shf.l.wrap.b32 	%r529, %r523, %r522, 23;
	mov.b64 	%rd773, {%r529, %r528};
	xor.b64  	%rd774, %rd772, %rd773;
	xor.b64  	%rd775, %rd734, %rd710;
	and.b64  	%rd776, %rd758, %rd775;
	xor.b64  	%rd777, %rd776, %rd710;
	add.s64 	%rd778, %rd686, %rd539;
	add.s64 	%rd779, %rd778, %rd2658;
	add.s64 	%rd780, %rd779, %rd777;
	add.s64 	%rd781, %rd780, %rd774;
	add.s64 	%rd782, %rd781, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r530,%dummy}, %rd769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r531}, %rd769;
	}
	shf.r.wrap.b32 	%r532, %r531, %r530, 28;
	shf.r.wrap.b32 	%r533, %r530, %r531, 28;
	mov.b64 	%rd783, {%r533, %r532};
	shf.l.wrap.b32 	%r534, %r530, %r531, 30;
	shf.l.wrap.b32 	%r535, %r531, %r530, 30;
	mov.b64 	%rd784, {%r535, %r534};
	xor.b64  	%rd785, %rd784, %rd783;
	shf.l.wrap.b32 	%r536, %r530, %r531, 25;
	shf.l.wrap.b32 	%r537, %r531, %r530, 25;
	mov.b64 	%rd786, {%r537, %r536};
	xor.b64  	%rd787, %rd785, %rd786;
	xor.b64  	%rd788, %rd769, %rd721;
	xor.b64  	%rd789, %rd769, %rd745;
	and.b64  	%rd790, %rd789, %rd788;
	xor.b64  	%rd791, %rd790, %rd769;
	add.s64 	%rd792, %rd781, %rd791;
	add.s64 	%rd793, %rd792, %rd787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r539}, %rd782;
	}
	shf.r.wrap.b32 	%r540, %r539, %r538, 14;
	shf.r.wrap.b32 	%r541, %r538, %r539, 14;
	mov.b64 	%rd794, {%r541, %r540};
	shf.r.wrap.b32 	%r542, %r539, %r538, 18;
	shf.r.wrap.b32 	%r543, %r538, %r539, 18;
	mov.b64 	%rd795, {%r543, %r542};
	xor.b64  	%rd796, %rd795, %rd794;
	shf.l.wrap.b32 	%r544, %r538, %r539, 23;
	shf.l.wrap.b32 	%r545, %r539, %r538, 23;
	mov.b64 	%rd797, {%r545, %r544};
	xor.b64  	%rd798, %rd796, %rd797;
	xor.b64  	%rd799, %rd758, %rd734;
	and.b64  	%rd800, %rd782, %rd799;
	xor.b64  	%rd801, %rd800, %rd734;
	add.s64 	%rd802, %rd710, %rd546;
	add.s64 	%rd803, %rd802, %rd2659;
	add.s64 	%rd804, %rd803, %rd801;
	add.s64 	%rd805, %rd804, %rd798;
	add.s64 	%rd806, %rd805, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd793;
	}
	shf.r.wrap.b32 	%r548, %r547, %r546, 28;
	shf.r.wrap.b32 	%r549, %r546, %r547, 28;
	mov.b64 	%rd807, {%r549, %r548};
	shf.l.wrap.b32 	%r550, %r546, %r547, 30;
	shf.l.wrap.b32 	%r551, %r547, %r546, 30;
	mov.b64 	%rd808, {%r551, %r550};
	xor.b64  	%rd809, %rd808, %rd807;
	shf.l.wrap.b32 	%r552, %r546, %r547, 25;
	shf.l.wrap.b32 	%r553, %r547, %r546, 25;
	mov.b64 	%rd810, {%r553, %r552};
	xor.b64  	%rd811, %rd809, %rd810;
	xor.b64  	%rd812, %rd793, %rd745;
	xor.b64  	%rd813, %rd793, %rd769;
	and.b64  	%rd814, %rd813, %rd812;
	xor.b64  	%rd815, %rd814, %rd793;
	add.s64 	%rd816, %rd805, %rd815;
	add.s64 	%rd817, %rd816, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r555}, %rd806;
	}
	shf.r.wrap.b32 	%r556, %r555, %r554, 14;
	shf.r.wrap.b32 	%r557, %r554, %r555, 14;
	mov.b64 	%rd818, {%r557, %r556};
	shf.r.wrap.b32 	%r558, %r555, %r554, 18;
	shf.r.wrap.b32 	%r559, %r554, %r555, 18;
	mov.b64 	%rd819, {%r559, %r558};
	xor.b64  	%rd820, %rd819, %rd818;
	shf.l.wrap.b32 	%r560, %r554, %r555, 23;
	shf.l.wrap.b32 	%r561, %r555, %r554, 23;
	mov.b64 	%rd821, {%r561, %r560};
	xor.b64  	%rd822, %rd820, %rd821;
	xor.b64  	%rd823, %rd782, %rd758;
	and.b64  	%rd824, %rd806, %rd823;
	xor.b64  	%rd825, %rd824, %rd758;
	add.s64 	%rd826, %rd734, %rd553;
	add.s64 	%rd827, %rd826, %rd2660;
	add.s64 	%rd828, %rd827, %rd825;
	add.s64 	%rd829, %rd828, %rd822;
	add.s64 	%rd830, %rd829, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd817;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 28;
	shf.r.wrap.b32 	%r565, %r562, %r563, 28;
	mov.b64 	%rd831, {%r565, %r564};
	shf.l.wrap.b32 	%r566, %r562, %r563, 30;
	shf.l.wrap.b32 	%r567, %r563, %r562, 30;
	mov.b64 	%rd832, {%r567, %r566};
	xor.b64  	%rd833, %rd832, %rd831;
	shf.l.wrap.b32 	%r568, %r562, %r563, 25;
	shf.l.wrap.b32 	%r569, %r563, %r562, 25;
	mov.b64 	%rd834, {%r569, %r568};
	xor.b64  	%rd835, %rd833, %rd834;
	xor.b64  	%rd836, %rd817, %rd769;
	xor.b64  	%rd837, %rd817, %rd793;
	and.b64  	%rd838, %rd837, %rd836;
	xor.b64  	%rd839, %rd838, %rd817;
	add.s64 	%rd840, %rd829, %rd839;
	add.s64 	%rd841, %rd840, %rd835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd830;
	}
	shf.r.wrap.b32 	%r572, %r571, %r570, 14;
	shf.r.wrap.b32 	%r573, %r570, %r571, 14;
	mov.b64 	%rd842, {%r573, %r572};
	shf.r.wrap.b32 	%r574, %r571, %r570, 18;
	shf.r.wrap.b32 	%r575, %r570, %r571, 18;
	mov.b64 	%rd843, {%r575, %r574};
	xor.b64  	%rd844, %rd843, %rd842;
	shf.l.wrap.b32 	%r576, %r570, %r571, 23;
	shf.l.wrap.b32 	%r577, %r571, %r570, 23;
	mov.b64 	%rd845, {%r577, %r576};
	xor.b64  	%rd846, %rd844, %rd845;
	xor.b64  	%rd847, %rd806, %rd782;
	and.b64  	%rd848, %rd830, %rd847;
	xor.b64  	%rd849, %rd848, %rd782;
	add.s64 	%rd850, %rd758, %rd560;
	add.s64 	%rd851, %rd850, %rd2661;
	add.s64 	%rd852, %rd851, %rd849;
	add.s64 	%rd853, %rd852, %rd846;
	add.s64 	%rd854, %rd853, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r579}, %rd841;
	}
	shf.r.wrap.b32 	%r580, %r579, %r578, 28;
	shf.r.wrap.b32 	%r581, %r578, %r579, 28;
	mov.b64 	%rd855, {%r581, %r580};
	shf.l.wrap.b32 	%r582, %r578, %r579, 30;
	shf.l.wrap.b32 	%r583, %r579, %r578, 30;
	mov.b64 	%rd856, {%r583, %r582};
	xor.b64  	%rd857, %rd856, %rd855;
	shf.l.wrap.b32 	%r584, %r578, %r579, 25;
	shf.l.wrap.b32 	%r585, %r579, %r578, 25;
	mov.b64 	%rd858, {%r585, %r584};
	xor.b64  	%rd859, %rd857, %rd858;
	xor.b64  	%rd860, %rd841, %rd793;
	xor.b64  	%rd861, %rd841, %rd817;
	and.b64  	%rd862, %rd861, %rd860;
	xor.b64  	%rd863, %rd862, %rd841;
	add.s64 	%rd864, %rd853, %rd863;
	add.s64 	%rd865, %rd864, %rd859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r587}, %rd854;
	}
	shf.r.wrap.b32 	%r588, %r587, %r586, 14;
	shf.r.wrap.b32 	%r589, %r586, %r587, 14;
	mov.b64 	%rd866, {%r589, %r588};
	shf.r.wrap.b32 	%r590, %r587, %r586, 18;
	shf.r.wrap.b32 	%r591, %r586, %r587, 18;
	mov.b64 	%rd867, {%r591, %r590};
	xor.b64  	%rd868, %rd867, %rd866;
	shf.l.wrap.b32 	%r592, %r586, %r587, 23;
	shf.l.wrap.b32 	%r593, %r587, %r586, 23;
	mov.b64 	%rd869, {%r593, %r592};
	xor.b64  	%rd870, %rd868, %rd869;
	xor.b64  	%rd871, %rd830, %rd806;
	and.b64  	%rd872, %rd854, %rd871;
	xor.b64  	%rd873, %rd872, %rd806;
	add.s64 	%rd874, %rd782, %rd567;
	add.s64 	%rd875, %rd874, %rd2662;
	add.s64 	%rd876, %rd875, %rd873;
	add.s64 	%rd877, %rd876, %rd870;
	add.s64 	%rd878, %rd877, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r594,%dummy}, %rd865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r595}, %rd865;
	}
	shf.r.wrap.b32 	%r596, %r595, %r594, 28;
	shf.r.wrap.b32 	%r597, %r594, %r595, 28;
	mov.b64 	%rd879, {%r597, %r596};
	shf.l.wrap.b32 	%r598, %r594, %r595, 30;
	shf.l.wrap.b32 	%r599, %r595, %r594, 30;
	mov.b64 	%rd880, {%r599, %r598};
	xor.b64  	%rd881, %rd880, %rd879;
	shf.l.wrap.b32 	%r600, %r594, %r595, 25;
	shf.l.wrap.b32 	%r601, %r595, %r594, 25;
	mov.b64 	%rd882, {%r601, %r600};
	xor.b64  	%rd883, %rd881, %rd882;
	xor.b64  	%rd884, %rd865, %rd817;
	xor.b64  	%rd885, %rd865, %rd841;
	and.b64  	%rd886, %rd885, %rd884;
	xor.b64  	%rd887, %rd886, %rd865;
	add.s64 	%rd888, %rd877, %rd887;
	add.s64 	%rd889, %rd888, %rd883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r603}, %rd878;
	}
	shf.r.wrap.b32 	%r604, %r603, %r602, 14;
	shf.r.wrap.b32 	%r605, %r602, %r603, 14;
	mov.b64 	%rd890, {%r605, %r604};
	shf.r.wrap.b32 	%r606, %r603, %r602, 18;
	shf.r.wrap.b32 	%r607, %r602, %r603, 18;
	mov.b64 	%rd891, {%r607, %r606};
	xor.b64  	%rd892, %rd891, %rd890;
	shf.l.wrap.b32 	%r608, %r602, %r603, 23;
	shf.l.wrap.b32 	%r609, %r603, %r602, 23;
	mov.b64 	%rd893, {%r609, %r608};
	xor.b64  	%rd894, %rd892, %rd893;
	xor.b64  	%rd895, %rd854, %rd830;
	and.b64  	%rd896, %rd878, %rd895;
	xor.b64  	%rd897, %rd896, %rd830;
	add.s64 	%rd898, %rd806, %rd574;
	add.s64 	%rd899, %rd898, %rd2663;
	add.s64 	%rd900, %rd899, %rd897;
	add.s64 	%rd901, %rd900, %rd894;
	add.s64 	%rd902, %rd901, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r611}, %rd889;
	}
	shf.r.wrap.b32 	%r612, %r611, %r610, 28;
	shf.r.wrap.b32 	%r613, %r610, %r611, 28;
	mov.b64 	%rd903, {%r613, %r612};
	shf.l.wrap.b32 	%r614, %r610, %r611, 30;
	shf.l.wrap.b32 	%r615, %r611, %r610, 30;
	mov.b64 	%rd904, {%r615, %r614};
	xor.b64  	%rd905, %rd904, %rd903;
	shf.l.wrap.b32 	%r616, %r610, %r611, 25;
	shf.l.wrap.b32 	%r617, %r611, %r610, 25;
	mov.b64 	%rd906, {%r617, %r616};
	xor.b64  	%rd907, %rd905, %rd906;
	xor.b64  	%rd908, %rd889, %rd841;
	xor.b64  	%rd909, %rd889, %rd865;
	and.b64  	%rd910, %rd909, %rd908;
	xor.b64  	%rd911, %rd910, %rd889;
	add.s64 	%rd912, %rd901, %rd911;
	add.s64 	%rd913, %rd912, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd902;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 14;
	shf.r.wrap.b32 	%r621, %r618, %r619, 14;
	mov.b64 	%rd914, {%r621, %r620};
	shf.r.wrap.b32 	%r622, %r619, %r618, 18;
	shf.r.wrap.b32 	%r623, %r618, %r619, 18;
	mov.b64 	%rd915, {%r623, %r622};
	xor.b64  	%rd916, %rd915, %rd914;
	shf.l.wrap.b32 	%r624, %r618, %r619, 23;
	shf.l.wrap.b32 	%r625, %r619, %r618, 23;
	mov.b64 	%rd917, {%r625, %r624};
	xor.b64  	%rd918, %rd916, %rd917;
	xor.b64  	%rd919, %rd878, %rd854;
	and.b64  	%rd920, %rd902, %rd919;
	xor.b64  	%rd921, %rd920, %rd854;
	add.s64 	%rd922, %rd830, %rd581;
	add.s64 	%rd923, %rd922, %rd2664;
	add.s64 	%rd924, %rd923, %rd921;
	add.s64 	%rd925, %rd924, %rd918;
	add.s64 	%rd926, %rd925, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd913;
	}
	shf.r.wrap.b32 	%r628, %r627, %r626, 28;
	shf.r.wrap.b32 	%r629, %r626, %r627, 28;
	mov.b64 	%rd927, {%r629, %r628};
	shf.l.wrap.b32 	%r630, %r626, %r627, 30;
	shf.l.wrap.b32 	%r631, %r627, %r626, 30;
	mov.b64 	%rd928, {%r631, %r630};
	xor.b64  	%rd929, %rd928, %rd927;
	shf.l.wrap.b32 	%r632, %r626, %r627, 25;
	shf.l.wrap.b32 	%r633, %r627, %r626, 25;
	mov.b64 	%rd930, {%r633, %r632};
	xor.b64  	%rd931, %rd929, %rd930;
	xor.b64  	%rd932, %rd913, %rd865;
	xor.b64  	%rd933, %rd913, %rd889;
	and.b64  	%rd934, %rd933, %rd932;
	xor.b64  	%rd935, %rd934, %rd913;
	add.s64 	%rd936, %rd925, %rd935;
	add.s64 	%rd937, %rd936, %rd931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r635}, %rd926;
	}
	shf.r.wrap.b32 	%r636, %r635, %r634, 14;
	shf.r.wrap.b32 	%r637, %r634, %r635, 14;
	mov.b64 	%rd938, {%r637, %r636};
	shf.r.wrap.b32 	%r638, %r635, %r634, 18;
	shf.r.wrap.b32 	%r639, %r634, %r635, 18;
	mov.b64 	%rd939, {%r639, %r638};
	xor.b64  	%rd940, %rd939, %rd938;
	shf.l.wrap.b32 	%r640, %r634, %r635, 23;
	shf.l.wrap.b32 	%r641, %r635, %r634, 23;
	mov.b64 	%rd941, {%r641, %r640};
	xor.b64  	%rd942, %rd940, %rd941;
	xor.b64  	%rd943, %rd902, %rd878;
	and.b64  	%rd944, %rd926, %rd943;
	xor.b64  	%rd945, %rd944, %rd878;
	add.s64 	%rd946, %rd854, %rd588;
	add.s64 	%rd947, %rd946, %rd2665;
	add.s64 	%rd948, %rd947, %rd945;
	add.s64 	%rd949, %rd948, %rd942;
	add.s64 	%rd950, %rd949, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r642,%dummy}, %rd937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r643}, %rd937;
	}
	shf.r.wrap.b32 	%r644, %r643, %r642, 28;
	shf.r.wrap.b32 	%r645, %r642, %r643, 28;
	mov.b64 	%rd951, {%r645, %r644};
	shf.l.wrap.b32 	%r646, %r642, %r643, 30;
	shf.l.wrap.b32 	%r647, %r643, %r642, 30;
	mov.b64 	%rd952, {%r647, %r646};
	xor.b64  	%rd953, %rd952, %rd951;
	shf.l.wrap.b32 	%r648, %r642, %r643, 25;
	shf.l.wrap.b32 	%r649, %r643, %r642, 25;
	mov.b64 	%rd954, {%r649, %r648};
	xor.b64  	%rd955, %rd953, %rd954;
	xor.b64  	%rd956, %rd937, %rd889;
	xor.b64  	%rd957, %rd937, %rd913;
	and.b64  	%rd958, %rd957, %rd956;
	xor.b64  	%rd959, %rd958, %rd937;
	add.s64 	%rd960, %rd949, %rd959;
	add.s64 	%rd961, %rd960, %rd955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r650,%dummy}, %rd950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r651}, %rd950;
	}
	shf.r.wrap.b32 	%r652, %r651, %r650, 14;
	shf.r.wrap.b32 	%r653, %r650, %r651, 14;
	mov.b64 	%rd962, {%r653, %r652};
	shf.r.wrap.b32 	%r654, %r651, %r650, 18;
	shf.r.wrap.b32 	%r655, %r650, %r651, 18;
	mov.b64 	%rd963, {%r655, %r654};
	xor.b64  	%rd964, %rd963, %rd962;
	shf.l.wrap.b32 	%r656, %r650, %r651, 23;
	shf.l.wrap.b32 	%r657, %r651, %r650, 23;
	mov.b64 	%rd965, {%r657, %r656};
	xor.b64  	%rd966, %rd964, %rd965;
	xor.b64  	%rd967, %rd926, %rd902;
	and.b64  	%rd968, %rd950, %rd967;
	xor.b64  	%rd969, %rd968, %rd902;
	add.s64 	%rd970, %rd878, %rd601;
	add.s64 	%rd971, %rd970, %rd2666;
	add.s64 	%rd972, %rd971, %rd969;
	add.s64 	%rd973, %rd972, %rd966;
	add.s64 	%rd974, %rd973, %rd889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r658,%dummy}, %rd961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r659}, %rd961;
	}
	shf.r.wrap.b32 	%r660, %r659, %r658, 28;
	shf.r.wrap.b32 	%r661, %r658, %r659, 28;
	mov.b64 	%rd975, {%r661, %r660};
	shf.l.wrap.b32 	%r662, %r658, %r659, 30;
	shf.l.wrap.b32 	%r663, %r659, %r658, 30;
	mov.b64 	%rd976, {%r663, %r662};
	xor.b64  	%rd977, %rd976, %rd975;
	shf.l.wrap.b32 	%r664, %r658, %r659, 25;
	shf.l.wrap.b32 	%r665, %r659, %r658, 25;
	mov.b64 	%rd978, {%r665, %r664};
	xor.b64  	%rd979, %rd977, %rd978;
	xor.b64  	%rd980, %rd961, %rd913;
	xor.b64  	%rd981, %rd961, %rd937;
	and.b64  	%rd982, %rd981, %rd980;
	xor.b64  	%rd983, %rd982, %rd961;
	add.s64 	%rd984, %rd973, %rd983;
	add.s64 	%rd985, %rd984, %rd979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r667}, %rd588;
	}
	shf.r.wrap.b32 	%r668, %r667, %r666, 19;
	shf.r.wrap.b32 	%r669, %r666, %r667, 19;
	mov.b64 	%rd986, {%r669, %r668};
	shf.l.wrap.b32 	%r670, %r666, %r667, 3;
	shf.l.wrap.b32 	%r671, %r667, %r666, 3;
	mov.b64 	%rd987, {%r671, %r670};
	shr.u64 	%rd988, %rd588, 6;
	xor.b64  	%rd989, %rd986, %rd988;
	xor.b64  	%rd990, %rd989, %rd987;
	add.s64 	%rd991, %rd518, %rd553;
	add.s64 	%rd992, %rd991, %rd990;
	add.s64 	%rd993, %rd992, %rd45;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r672,%dummy}, %rd601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r673}, %rd601;
	}
	shf.r.wrap.b32 	%r674, %r673, %r672, 19;
	shf.r.wrap.b32 	%r675, %r672, %r673, 19;
	mov.b64 	%rd994, {%r675, %r674};
	shf.l.wrap.b32 	%r676, %r672, %r673, 3;
	shf.l.wrap.b32 	%r677, %r673, %r672, 3;
	mov.b64 	%rd995, {%r677, %r676};
	shr.u64 	%rd996, %rd601, 6;
	xor.b64  	%rd997, %rd994, %rd996;
	xor.b64  	%rd998, %rd997, %rd995;
	shf.r.wrap.b32 	%r678, %r347, %r346, 1;
	shf.r.wrap.b32 	%r679, %r346, %r347, 1;
	mov.b64 	%rd999, {%r679, %r678};
	shf.r.wrap.b32 	%r680, %r347, %r346, 8;
	shf.r.wrap.b32 	%r681, %r346, %r347, 8;
	mov.b64 	%rd1000, {%r681, %r680};
	shr.u64 	%rd1001, %rd524, 7;
	xor.b64  	%rd1002, %rd999, %rd1001;
	xor.b64  	%rd1003, %rd1002, %rd1000;
	add.s64 	%rd1004, %rd24, %rd560;
	add.s64 	%rd1005, %rd1004, %rd998;
	add.s64 	%rd1006, %rd1005, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd993;
	}
	shf.r.wrap.b32 	%r684, %r683, %r682, 19;
	shf.r.wrap.b32 	%r685, %r682, %r683, 19;
	mov.b64 	%rd1007, {%r685, %r684};
	shf.l.wrap.b32 	%r686, %r682, %r683, 3;
	shf.l.wrap.b32 	%r687, %r683, %r682, 3;
	mov.b64 	%rd1008, {%r687, %r686};
	shr.u64 	%rd1009, %rd993, 6;
	xor.b64  	%rd1010, %rd1007, %rd1009;
	xor.b64  	%rd1011, %rd1010, %rd1008;
	add.s64 	%rd1012, %rd524, %rd567;
	add.s64 	%rd1013, %rd1012, %rd1011;
	add.s64 	%rd1014, %rd1013, %rd46;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r688,%dummy}, %rd1006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd1006;
	}
	shf.r.wrap.b32 	%r690, %r689, %r688, 19;
	shf.r.wrap.b32 	%r691, %r688, %r689, 19;
	mov.b64 	%rd1015, {%r691, %r690};
	shf.l.wrap.b32 	%r692, %r688, %r689, 3;
	shf.l.wrap.b32 	%r693, %r689, %r688, 3;
	mov.b64 	%rd1016, {%r693, %r692};
	shr.u64 	%rd1017, %rd1006, 6;
	xor.b64  	%rd1018, %rd1015, %rd1017;
	xor.b64  	%rd1019, %rd1018, %rd1016;
	shf.r.wrap.b32 	%r694, %r353, %r352, 1;
	shf.r.wrap.b32 	%r695, %r352, %r353, 1;
	mov.b64 	%rd1020, {%r695, %r694};
	shf.r.wrap.b32 	%r696, %r353, %r352, 8;
	shf.r.wrap.b32 	%r697, %r352, %r353, 8;
	mov.b64 	%rd1021, {%r697, %r696};
	shr.u64 	%rd1022, %rd530, 7;
	xor.b64  	%rd1023, %rd1020, %rd1022;
	xor.b64  	%rd1024, %rd1023, %rd1021;
	add.s64 	%rd1025, %rd25, %rd574;
	add.s64 	%rd1026, %rd1025, %rd1019;
	add.s64 	%rd1027, %rd1026, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd1014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r699}, %rd1014;
	}
	shf.r.wrap.b32 	%r700, %r699, %r698, 19;
	shf.r.wrap.b32 	%r701, %r698, %r699, 19;
	mov.b64 	%rd1028, {%r701, %r700};
	shf.l.wrap.b32 	%r702, %r698, %r699, 3;
	shf.l.wrap.b32 	%r703, %r699, %r698, 3;
	mov.b64 	%rd1029, {%r703, %r702};
	shr.u64 	%rd1030, %rd1014, 6;
	xor.b64  	%rd1031, %rd1028, %rd1030;
	xor.b64  	%rd1032, %rd1031, %rd1029;
	add.s64 	%rd1033, %rd530, %rd581;
	add.s64 	%rd1034, %rd1033, %rd1032;
	add.s64 	%rd1035, %rd1034, %rd47;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r704,%dummy}, %rd1027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r705}, %rd1027;
	}
	shf.r.wrap.b32 	%r706, %r705, %r704, 19;
	shf.r.wrap.b32 	%r707, %r704, %r705, 19;
	mov.b64 	%rd1036, {%r707, %r706};
	shf.l.wrap.b32 	%r708, %r704, %r705, 3;
	shf.l.wrap.b32 	%r709, %r705, %r704, 3;
	mov.b64 	%rd1037, {%r709, %r708};
	shr.u64 	%rd1038, %rd1027, 6;
	xor.b64  	%rd1039, %rd1036, %rd1038;
	xor.b64  	%rd1040, %rd1039, %rd1037;
	shf.r.wrap.b32 	%r710, %r359, %r358, 1;
	shf.r.wrap.b32 	%r711, %r358, %r359, 1;
	mov.b64 	%rd1041, {%r711, %r710};
	shf.r.wrap.b32 	%r712, %r359, %r358, 8;
	shf.r.wrap.b32 	%r713, %r358, %r359, 8;
	mov.b64 	%rd1042, {%r713, %r712};
	shr.u64 	%rd1043, %rd537, 7;
	xor.b64  	%rd1044, %rd1041, %rd1043;
	xor.b64  	%rd1045, %rd1044, %rd1042;
	add.s64 	%rd1046, %rd26, %rd588;
	add.s64 	%rd1047, %rd1046, %rd1040;
	add.s64 	%rd1048, %rd1047, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r714,%dummy}, %rd1035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r715}, %rd1035;
	}
	shf.r.wrap.b32 	%r716, %r715, %r714, 19;
	shf.r.wrap.b32 	%r717, %r714, %r715, 19;
	mov.b64 	%rd1049, {%r717, %r716};
	shf.l.wrap.b32 	%r718, %r714, %r715, 3;
	shf.l.wrap.b32 	%r719, %r715, %r714, 3;
	mov.b64 	%rd1050, {%r719, %r718};
	shr.u64 	%rd1051, %rd1035, 6;
	xor.b64  	%rd1052, %rd1049, %rd1051;
	xor.b64  	%rd1053, %rd1052, %rd1050;
	shf.r.wrap.b32 	%r720, %r365, %r364, 1;
	shf.r.wrap.b32 	%r721, %r364, %r365, 1;
	mov.b64 	%rd1054, {%r721, %r720};
	shf.r.wrap.b32 	%r722, %r365, %r364, 8;
	shf.r.wrap.b32 	%r723, %r364, %r365, 8;
	mov.b64 	%rd1055, {%r723, %r722};
	shr.u64 	%rd1056, %rd539, 7;
	xor.b64  	%rd1057, %rd1054, %rd1056;
	xor.b64  	%rd1058, %rd1057, %rd1055;
	add.s64 	%rd1059, %rd537, %rd601;
	add.s64 	%rd1060, %rd1059, %rd1053;
	add.s64 	%rd1061, %rd1060, %rd1058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r724,%dummy}, %rd1048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd1048;
	}
	shf.r.wrap.b32 	%r726, %r725, %r724, 19;
	shf.r.wrap.b32 	%r727, %r724, %r725, 19;
	mov.b64 	%rd1062, {%r727, %r726};
	shf.l.wrap.b32 	%r728, %r724, %r725, 3;
	shf.l.wrap.b32 	%r729, %r725, %r724, 3;
	mov.b64 	%rd1063, {%r729, %r728};
	shr.u64 	%rd1064, %rd1048, 6;
	xor.b64  	%rd1065, %rd1062, %rd1064;
	xor.b64  	%rd1066, %rd1065, %rd1063;
	shf.r.wrap.b32 	%r730, %r371, %r370, 1;
	shf.r.wrap.b32 	%r731, %r370, %r371, 1;
	mov.b64 	%rd1067, {%r731, %r730};
	shf.r.wrap.b32 	%r732, %r371, %r370, 8;
	shf.r.wrap.b32 	%r733, %r370, %r371, 8;
	mov.b64 	%rd1068, {%r733, %r732};
	shr.u64 	%rd1069, %rd546, 7;
	xor.b64  	%rd1070, %rd1067, %rd1069;
	xor.b64  	%rd1071, %rd1070, %rd1068;
	add.s64 	%rd1072, %rd993, %rd539;
	add.s64 	%rd1073, %rd1072, %rd1066;
	add.s64 	%rd1074, %rd1073, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r734,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r735}, %rd1061;
	}
	shf.r.wrap.b32 	%r736, %r735, %r734, 19;
	shf.r.wrap.b32 	%r737, %r734, %r735, 19;
	mov.b64 	%rd1075, {%r737, %r736};
	shf.l.wrap.b32 	%r738, %r734, %r735, 3;
	shf.l.wrap.b32 	%r739, %r735, %r734, 3;
	mov.b64 	%rd1076, {%r739, %r738};
	shr.u64 	%rd1077, %rd1061, 6;
	xor.b64  	%rd1078, %rd1075, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd1076;
	shf.r.wrap.b32 	%r740, %r377, %r376, 1;
	shf.r.wrap.b32 	%r741, %r376, %r377, 1;
	mov.b64 	%rd1080, {%r741, %r740};
	shf.r.wrap.b32 	%r742, %r377, %r376, 8;
	shf.r.wrap.b32 	%r743, %r376, %r377, 8;
	mov.b64 	%rd1081, {%r743, %r742};
	shr.u64 	%rd1082, %rd553, 7;
	xor.b64  	%rd1083, %rd1080, %rd1082;
	xor.b64  	%rd1084, %rd1083, %rd1081;
	add.s64 	%rd1085, %rd1006, %rd546;
	add.s64 	%rd1086, %rd1085, %rd1079;
	add.s64 	%rd1087, %rd1086, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r744,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r745}, %rd1074;
	}
	shf.r.wrap.b32 	%r746, %r745, %r744, 19;
	shf.r.wrap.b32 	%r747, %r744, %r745, 19;
	mov.b64 	%rd1088, {%r747, %r746};
	shf.l.wrap.b32 	%r748, %r744, %r745, 3;
	shf.l.wrap.b32 	%r749, %r745, %r744, 3;
	mov.b64 	%rd1089, {%r749, %r748};
	shr.u64 	%rd1090, %rd1074, 6;
	xor.b64  	%rd1091, %rd1088, %rd1090;
	xor.b64  	%rd1092, %rd1091, %rd1089;
	shf.r.wrap.b32 	%r750, %r383, %r382, 1;
	shf.r.wrap.b32 	%r751, %r382, %r383, 1;
	mov.b64 	%rd1093, {%r751, %r750};
	shf.r.wrap.b32 	%r752, %r383, %r382, 8;
	shf.r.wrap.b32 	%r753, %r382, %r383, 8;
	mov.b64 	%rd1094, {%r753, %r752};
	shr.u64 	%rd1095, %rd560, 7;
	xor.b64  	%rd1096, %rd1093, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1094;
	add.s64 	%rd1098, %rd1014, %rd553;
	add.s64 	%rd1099, %rd1098, %rd1092;
	add.s64 	%rd1100, %rd1099, %rd1097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r754,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r755}, %rd1087;
	}
	shf.r.wrap.b32 	%r756, %r755, %r754, 19;
	shf.r.wrap.b32 	%r757, %r754, %r755, 19;
	mov.b64 	%rd1101, {%r757, %r756};
	shf.l.wrap.b32 	%r758, %r754, %r755, 3;
	shf.l.wrap.b32 	%r759, %r755, %r754, 3;
	mov.b64 	%rd1102, {%r759, %r758};
	shr.u64 	%rd1103, %rd1087, 6;
	xor.b64  	%rd1104, %rd1101, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1102;
	shf.r.wrap.b32 	%r760, %r389, %r388, 1;
	shf.r.wrap.b32 	%r761, %r388, %r389, 1;
	mov.b64 	%rd1106, {%r761, %r760};
	shf.r.wrap.b32 	%r762, %r389, %r388, 8;
	shf.r.wrap.b32 	%r763, %r388, %r389, 8;
	mov.b64 	%rd1107, {%r763, %r762};
	shr.u64 	%rd1108, %rd567, 7;
	xor.b64  	%rd1109, %rd1106, %rd1108;
	xor.b64  	%rd1110, %rd1109, %rd1107;
	add.s64 	%rd1111, %rd1027, %rd560;
	add.s64 	%rd1112, %rd1111, %rd1105;
	add.s64 	%rd1113, %rd1112, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r764,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r765}, %rd1100;
	}
	shf.r.wrap.b32 	%r766, %r765, %r764, 19;
	shf.r.wrap.b32 	%r767, %r764, %r765, 19;
	mov.b64 	%rd1114, {%r767, %r766};
	shf.l.wrap.b32 	%r768, %r764, %r765, 3;
	shf.l.wrap.b32 	%r769, %r765, %r764, 3;
	mov.b64 	%rd1115, {%r769, %r768};
	shr.u64 	%rd1116, %rd1100, 6;
	xor.b64  	%rd1117, %rd1114, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1115;
	shf.r.wrap.b32 	%r770, %r395, %r394, 1;
	shf.r.wrap.b32 	%r771, %r394, %r395, 1;
	mov.b64 	%rd1119, {%r771, %r770};
	shf.r.wrap.b32 	%r772, %r395, %r394, 8;
	shf.r.wrap.b32 	%r773, %r394, %r395, 8;
	mov.b64 	%rd1120, {%r773, %r772};
	shr.u64 	%rd1121, %rd574, 7;
	xor.b64  	%rd1122, %rd1119, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1120;
	add.s64 	%rd1124, %rd1035, %rd567;
	add.s64 	%rd1125, %rd1124, %rd1118;
	add.s64 	%rd1126, %rd1125, %rd1123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r774,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r775}, %rd1113;
	}
	shf.r.wrap.b32 	%r776, %r775, %r774, 19;
	shf.r.wrap.b32 	%r777, %r774, %r775, 19;
	mov.b64 	%rd1127, {%r777, %r776};
	shf.l.wrap.b32 	%r778, %r774, %r775, 3;
	shf.l.wrap.b32 	%r779, %r775, %r774, 3;
	mov.b64 	%rd1128, {%r779, %r778};
	shr.u64 	%rd1129, %rd1113, 6;
	xor.b64  	%rd1130, %rd1127, %rd1129;
	xor.b64  	%rd1131, %rd1130, %rd1128;
	shf.r.wrap.b32 	%r780, %r401, %r400, 1;
	shf.r.wrap.b32 	%r781, %r400, %r401, 1;
	mov.b64 	%rd1132, {%r781, %r780};
	shf.r.wrap.b32 	%r782, %r401, %r400, 8;
	shf.r.wrap.b32 	%r783, %r400, %r401, 8;
	mov.b64 	%rd1133, {%r783, %r782};
	shr.u64 	%rd1134, %rd581, 7;
	xor.b64  	%rd1135, %rd1132, %rd1134;
	xor.b64  	%rd1136, %rd1135, %rd1133;
	add.s64 	%rd1137, %rd1048, %rd574;
	add.s64 	%rd1138, %rd1137, %rd1131;
	add.s64 	%rd1139, %rd1138, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r784,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r785}, %rd1126;
	}
	shf.r.wrap.b32 	%r786, %r785, %r784, 19;
	shf.r.wrap.b32 	%r787, %r784, %r785, 19;
	mov.b64 	%rd1140, {%r787, %r786};
	shf.l.wrap.b32 	%r788, %r784, %r785, 3;
	shf.l.wrap.b32 	%r789, %r785, %r784, 3;
	mov.b64 	%rd1141, {%r789, %r788};
	shr.u64 	%rd1142, %rd1126, 6;
	xor.b64  	%rd1143, %rd1140, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1141;
	shf.r.wrap.b32 	%r790, %r667, %r666, 1;
	shf.r.wrap.b32 	%r791, %r666, %r667, 1;
	mov.b64 	%rd1145, {%r791, %r790};
	shf.r.wrap.b32 	%r792, %r667, %r666, 8;
	shf.r.wrap.b32 	%r793, %r666, %r667, 8;
	mov.b64 	%rd1146, {%r793, %r792};
	shr.u64 	%rd1147, %rd588, 7;
	xor.b64  	%rd1148, %rd1145, %rd1147;
	xor.b64  	%rd1149, %rd1148, %rd1146;
	add.s64 	%rd1150, %rd1061, %rd581;
	add.s64 	%rd1151, %rd1150, %rd1144;
	add.s64 	%rd1152, %rd1151, %rd1149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r794,%dummy}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r795}, %rd1139;
	}
	shf.r.wrap.b32 	%r796, %r795, %r794, 19;
	shf.r.wrap.b32 	%r797, %r794, %r795, 19;
	mov.b64 	%rd1153, {%r797, %r796};
	shf.l.wrap.b32 	%r798, %r794, %r795, 3;
	shf.l.wrap.b32 	%r799, %r795, %r794, 3;
	mov.b64 	%rd1154, {%r799, %r798};
	shr.u64 	%rd1155, %rd1139, 6;
	xor.b64  	%rd1156, %rd1153, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd1154;
	shf.r.wrap.b32 	%r800, %r673, %r672, 1;
	shf.r.wrap.b32 	%r801, %r672, %r673, 1;
	mov.b64 	%rd1158, {%r801, %r800};
	shf.r.wrap.b32 	%r802, %r673, %r672, 8;
	shf.r.wrap.b32 	%r803, %r672, %r673, 8;
	mov.b64 	%rd1159, {%r803, %r802};
	shr.u64 	%rd1160, %rd601, 7;
	xor.b64  	%rd1161, %rd1158, %rd1160;
	xor.b64  	%rd1162, %rd1161, %rd1159;
	add.s64 	%rd1163, %rd1074, %rd588;
	add.s64 	%rd1164, %rd1163, %rd1157;
	add.s64 	%rd1165, %rd1164, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r804,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r805}, %rd1152;
	}
	shf.r.wrap.b32 	%r806, %r805, %r804, 19;
	shf.r.wrap.b32 	%r807, %r804, %r805, 19;
	mov.b64 	%rd1166, {%r807, %r806};
	shf.l.wrap.b32 	%r808, %r804, %r805, 3;
	shf.l.wrap.b32 	%r809, %r805, %r804, 3;
	mov.b64 	%rd1167, {%r809, %r808};
	shr.u64 	%rd1168, %rd1152, 6;
	xor.b64  	%rd1169, %rd1166, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1167;
	shf.r.wrap.b32 	%r810, %r683, %r682, 1;
	shf.r.wrap.b32 	%r811, %r682, %r683, 1;
	mov.b64 	%rd1171, {%r811, %r810};
	shf.r.wrap.b32 	%r812, %r683, %r682, 8;
	shf.r.wrap.b32 	%r813, %r682, %r683, 8;
	mov.b64 	%rd1172, {%r813, %r812};
	shr.u64 	%rd1173, %rd993, 7;
	xor.b64  	%rd1174, %rd1171, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1172;
	add.s64 	%rd1176, %rd1087, %rd601;
	add.s64 	%rd1177, %rd1176, %rd1170;
	add.s64 	%rd1178, %rd1177, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r815}, %rd974;
	}
	shf.r.wrap.b32 	%r816, %r815, %r814, 14;
	shf.r.wrap.b32 	%r817, %r814, %r815, 14;
	mov.b64 	%rd1179, {%r817, %r816};
	shf.r.wrap.b32 	%r818, %r815, %r814, 18;
	shf.r.wrap.b32 	%r819, %r814, %r815, 18;
	mov.b64 	%rd1180, {%r819, %r818};
	xor.b64  	%rd1181, %rd1180, %rd1179;
	shf.l.wrap.b32 	%r820, %r814, %r815, 23;
	shf.l.wrap.b32 	%r821, %r815, %r814, 23;
	mov.b64 	%rd1182, {%r821, %r820};
	xor.b64  	%rd1183, %rd1181, %rd1182;
	xor.b64  	%rd1184, %rd926, %rd950;
	and.b64  	%rd1185, %rd1184, %rd974;
	xor.b64  	%rd1186, %rd1185, %rd926;
	add.s64 	%rd1187, %rd1186, %rd902;
	add.s64 	%rd1188, %rd1187, %rd993;
	add.s64 	%rd1189, %rd1188, %rd2667;
	add.s64 	%rd1190, %rd1189, %rd1183;
	add.s64 	%rd1191, %rd1190, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r822,%dummy}, %rd985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd985;
	}
	shf.r.wrap.b32 	%r824, %r823, %r822, 28;
	shf.r.wrap.b32 	%r825, %r822, %r823, 28;
	mov.b64 	%rd1192, {%r825, %r824};
	shf.l.wrap.b32 	%r826, %r822, %r823, 30;
	shf.l.wrap.b32 	%r827, %r823, %r822, 30;
	mov.b64 	%rd1193, {%r827, %r826};
	xor.b64  	%rd1194, %rd1193, %rd1192;
	shf.l.wrap.b32 	%r828, %r822, %r823, 25;
	shf.l.wrap.b32 	%r829, %r823, %r822, 25;
	mov.b64 	%rd1195, {%r829, %r828};
	xor.b64  	%rd1196, %rd1194, %rd1195;
	xor.b64  	%rd1197, %rd985, %rd937;
	xor.b64  	%rd1198, %rd985, %rd961;
	and.b64  	%rd1199, %rd1198, %rd1197;
	xor.b64  	%rd1200, %rd1199, %rd985;
	add.s64 	%rd1201, %rd1190, %rd1200;
	add.s64 	%rd1202, %rd1201, %rd1196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r831}, %rd1191;
	}
	shf.r.wrap.b32 	%r832, %r831, %r830, 14;
	shf.r.wrap.b32 	%r833, %r830, %r831, 14;
	mov.b64 	%rd1203, {%r833, %r832};
	shf.r.wrap.b32 	%r834, %r831, %r830, 18;
	shf.r.wrap.b32 	%r835, %r830, %r831, 18;
	mov.b64 	%rd1204, {%r835, %r834};
	xor.b64  	%rd1205, %rd1204, %rd1203;
	shf.l.wrap.b32 	%r836, %r830, %r831, 23;
	shf.l.wrap.b32 	%r837, %r831, %r830, 23;
	mov.b64 	%rd1206, {%r837, %r836};
	xor.b64  	%rd1207, %rd1205, %rd1206;
	xor.b64  	%rd1208, %rd950, %rd974;
	and.b64  	%rd1209, %rd1191, %rd1208;
	xor.b64  	%rd1210, %rd1209, %rd950;
	add.s64 	%rd1211, %rd1006, %rd926;
	add.s64 	%rd1212, %rd1211, %rd2668;
	add.s64 	%rd1213, %rd1212, %rd1210;
	add.s64 	%rd1214, %rd1213, %rd1207;
	add.s64 	%rd1215, %rd1214, %rd937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r839}, %rd1202;
	}
	shf.r.wrap.b32 	%r840, %r839, %r838, 28;
	shf.r.wrap.b32 	%r841, %r838, %r839, 28;
	mov.b64 	%rd1216, {%r841, %r840};
	shf.l.wrap.b32 	%r842, %r838, %r839, 30;
	shf.l.wrap.b32 	%r843, %r839, %r838, 30;
	mov.b64 	%rd1217, {%r843, %r842};
	xor.b64  	%rd1218, %rd1217, %rd1216;
	shf.l.wrap.b32 	%r844, %r838, %r839, 25;
	shf.l.wrap.b32 	%r845, %r839, %r838, 25;
	mov.b64 	%rd1219, {%r845, %r844};
	xor.b64  	%rd1220, %rd1218, %rd1219;
	xor.b64  	%rd1221, %rd1202, %rd961;
	xor.b64  	%rd1222, %rd1202, %rd985;
	and.b64  	%rd1223, %rd1222, %rd1221;
	xor.b64  	%rd1224, %rd1223, %rd1202;
	add.s64 	%rd1225, %rd1214, %rd1224;
	add.s64 	%rd1226, %rd1225, %rd1220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd1215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r847}, %rd1215;
	}
	shf.r.wrap.b32 	%r848, %r847, %r846, 14;
	shf.r.wrap.b32 	%r849, %r846, %r847, 14;
	mov.b64 	%rd1227, {%r849, %r848};
	shf.r.wrap.b32 	%r850, %r847, %r846, 18;
	shf.r.wrap.b32 	%r851, %r846, %r847, 18;
	mov.b64 	%rd1228, {%r851, %r850};
	xor.b64  	%rd1229, %rd1228, %rd1227;
	shf.l.wrap.b32 	%r852, %r846, %r847, 23;
	shf.l.wrap.b32 	%r853, %r847, %r846, 23;
	mov.b64 	%rd1230, {%r853, %r852};
	xor.b64  	%rd1231, %rd1229, %rd1230;
	xor.b64  	%rd1232, %rd1191, %rd974;
	and.b64  	%rd1233, %rd1215, %rd1232;
	xor.b64  	%rd1234, %rd1233, %rd974;
	add.s64 	%rd1235, %rd1014, %rd950;
	add.s64 	%rd1236, %rd1235, %rd2669;
	add.s64 	%rd1237, %rd1236, %rd1234;
	add.s64 	%rd1238, %rd1237, %rd1231;
	add.s64 	%rd1239, %rd1238, %rd961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r854,%dummy}, %rd1226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r855}, %rd1226;
	}
	shf.r.wrap.b32 	%r856, %r855, %r854, 28;
	shf.r.wrap.b32 	%r857, %r854, %r855, 28;
	mov.b64 	%rd1240, {%r857, %r856};
	shf.l.wrap.b32 	%r858, %r854, %r855, 30;
	shf.l.wrap.b32 	%r859, %r855, %r854, 30;
	mov.b64 	%rd1241, {%r859, %r858};
	xor.b64  	%rd1242, %rd1241, %rd1240;
	shf.l.wrap.b32 	%r860, %r854, %r855, 25;
	shf.l.wrap.b32 	%r861, %r855, %r854, 25;
	mov.b64 	%rd1243, {%r861, %r860};
	xor.b64  	%rd1244, %rd1242, %rd1243;
	xor.b64  	%rd1245, %rd1226, %rd985;
	xor.b64  	%rd1246, %rd1226, %rd1202;
	and.b64  	%rd1247, %rd1246, %rd1245;
	xor.b64  	%rd1248, %rd1247, %rd1226;
	add.s64 	%rd1249, %rd1238, %rd1248;
	add.s64 	%rd1250, %rd1249, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd1239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r863}, %rd1239;
	}
	shf.r.wrap.b32 	%r864, %r863, %r862, 14;
	shf.r.wrap.b32 	%r865, %r862, %r863, 14;
	mov.b64 	%rd1251, {%r865, %r864};
	shf.r.wrap.b32 	%r866, %r863, %r862, 18;
	shf.r.wrap.b32 	%r867, %r862, %r863, 18;
	mov.b64 	%rd1252, {%r867, %r866};
	xor.b64  	%rd1253, %rd1252, %rd1251;
	shf.l.wrap.b32 	%r868, %r862, %r863, 23;
	shf.l.wrap.b32 	%r869, %r863, %r862, 23;
	mov.b64 	%rd1254, {%r869, %r868};
	xor.b64  	%rd1255, %rd1253, %rd1254;
	xor.b64  	%rd1256, %rd1215, %rd1191;
	and.b64  	%rd1257, %rd1239, %rd1256;
	xor.b64  	%rd1258, %rd1257, %rd1191;
	add.s64 	%rd1259, %rd1027, %rd974;
	add.s64 	%rd1260, %rd1259, %rd2670;
	add.s64 	%rd1261, %rd1260, %rd1258;
	add.s64 	%rd1262, %rd1261, %rd1255;
	add.s64 	%rd1263, %rd1262, %rd985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r870,%dummy}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r871}, %rd1250;
	}
	shf.r.wrap.b32 	%r872, %r871, %r870, 28;
	shf.r.wrap.b32 	%r873, %r870, %r871, 28;
	mov.b64 	%rd1264, {%r873, %r872};
	shf.l.wrap.b32 	%r874, %r870, %r871, 30;
	shf.l.wrap.b32 	%r875, %r871, %r870, 30;
	mov.b64 	%rd1265, {%r875, %r874};
	xor.b64  	%rd1266, %rd1265, %rd1264;
	shf.l.wrap.b32 	%r876, %r870, %r871, 25;
	shf.l.wrap.b32 	%r877, %r871, %r870, 25;
	mov.b64 	%rd1267, {%r877, %r876};
	xor.b64  	%rd1268, %rd1266, %rd1267;
	xor.b64  	%rd1269, %rd1250, %rd1202;
	xor.b64  	%rd1270, %rd1250, %rd1226;
	and.b64  	%rd1271, %rd1270, %rd1269;
	xor.b64  	%rd1272, %rd1271, %rd1250;
	add.s64 	%rd1273, %rd1262, %rd1272;
	add.s64 	%rd1274, %rd1273, %rd1268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r878,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r879}, %rd1263;
	}
	shf.r.wrap.b32 	%r880, %r879, %r878, 14;
	shf.r.wrap.b32 	%r881, %r878, %r879, 14;
	mov.b64 	%rd1275, {%r881, %r880};
	shf.r.wrap.b32 	%r882, %r879, %r878, 18;
	shf.r.wrap.b32 	%r883, %r878, %r879, 18;
	mov.b64 	%rd1276, {%r883, %r882};
	xor.b64  	%rd1277, %rd1276, %rd1275;
	shf.l.wrap.b32 	%r884, %r878, %r879, 23;
	shf.l.wrap.b32 	%r885, %r879, %r878, 23;
	mov.b64 	%rd1278, {%r885, %r884};
	xor.b64  	%rd1279, %rd1277, %rd1278;
	xor.b64  	%rd1280, %rd1239, %rd1215;
	and.b64  	%rd1281, %rd1263, %rd1280;
	xor.b64  	%rd1282, %rd1281, %rd1215;
	add.s64 	%rd1283, %rd1191, %rd1035;
	add.s64 	%rd1284, %rd1283, %rd2671;
	add.s64 	%rd1285, %rd1284, %rd1282;
	add.s64 	%rd1286, %rd1285, %rd1279;
	add.s64 	%rd1287, %rd1286, %rd1202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r886,%dummy}, %rd1274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r887}, %rd1274;
	}
	shf.r.wrap.b32 	%r888, %r887, %r886, 28;
	shf.r.wrap.b32 	%r889, %r886, %r887, 28;
	mov.b64 	%rd1288, {%r889, %r888};
	shf.l.wrap.b32 	%r890, %r886, %r887, 30;
	shf.l.wrap.b32 	%r891, %r887, %r886, 30;
	mov.b64 	%rd1289, {%r891, %r890};
	xor.b64  	%rd1290, %rd1289, %rd1288;
	shf.l.wrap.b32 	%r892, %r886, %r887, 25;
	shf.l.wrap.b32 	%r893, %r887, %r886, 25;
	mov.b64 	%rd1291, {%r893, %r892};
	xor.b64  	%rd1292, %rd1290, %rd1291;
	xor.b64  	%rd1293, %rd1274, %rd1226;
	xor.b64  	%rd1294, %rd1274, %rd1250;
	and.b64  	%rd1295, %rd1294, %rd1293;
	xor.b64  	%rd1296, %rd1295, %rd1274;
	add.s64 	%rd1297, %rd1286, %rd1296;
	add.s64 	%rd1298, %rd1297, %rd1292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd1287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd1287;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 14;
	shf.r.wrap.b32 	%r897, %r894, %r895, 14;
	mov.b64 	%rd1299, {%r897, %r896};
	shf.r.wrap.b32 	%r898, %r895, %r894, 18;
	shf.r.wrap.b32 	%r899, %r894, %r895, 18;
	mov.b64 	%rd1300, {%r899, %r898};
	xor.b64  	%rd1301, %rd1300, %rd1299;
	shf.l.wrap.b32 	%r900, %r894, %r895, 23;
	shf.l.wrap.b32 	%r901, %r895, %r894, 23;
	mov.b64 	%rd1302, {%r901, %r900};
	xor.b64  	%rd1303, %rd1301, %rd1302;
	xor.b64  	%rd1304, %rd1263, %rd1239;
	and.b64  	%rd1305, %rd1287, %rd1304;
	xor.b64  	%rd1306, %rd1305, %rd1239;
	add.s64 	%rd1307, %rd1215, %rd1048;
	add.s64 	%rd1308, %rd1307, %rd2672;
	add.s64 	%rd1309, %rd1308, %rd1306;
	add.s64 	%rd1310, %rd1309, %rd1303;
	add.s64 	%rd1311, %rd1310, %rd1226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd1298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd1298;
	}
	shf.r.wrap.b32 	%r904, %r903, %r902, 28;
	shf.r.wrap.b32 	%r905, %r902, %r903, 28;
	mov.b64 	%rd1312, {%r905, %r904};
	shf.l.wrap.b32 	%r906, %r902, %r903, 30;
	shf.l.wrap.b32 	%r907, %r903, %r902, 30;
	mov.b64 	%rd1313, {%r907, %r906};
	xor.b64  	%rd1314, %rd1313, %rd1312;
	shf.l.wrap.b32 	%r908, %r902, %r903, 25;
	shf.l.wrap.b32 	%r909, %r903, %r902, 25;
	mov.b64 	%rd1315, {%r909, %r908};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	xor.b64  	%rd1317, %rd1298, %rd1250;
	xor.b64  	%rd1318, %rd1298, %rd1274;
	and.b64  	%rd1319, %rd1318, %rd1317;
	xor.b64  	%rd1320, %rd1319, %rd1298;
	add.s64 	%rd1321, %rd1310, %rd1320;
	add.s64 	%rd1322, %rd1321, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r910,%dummy}, %rd1311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r911}, %rd1311;
	}
	shf.r.wrap.b32 	%r912, %r911, %r910, 14;
	shf.r.wrap.b32 	%r913, %r910, %r911, 14;
	mov.b64 	%rd1323, {%r913, %r912};
	shf.r.wrap.b32 	%r914, %r911, %r910, 18;
	shf.r.wrap.b32 	%r915, %r910, %r911, 18;
	mov.b64 	%rd1324, {%r915, %r914};
	xor.b64  	%rd1325, %rd1324, %rd1323;
	shf.l.wrap.b32 	%r916, %r910, %r911, 23;
	shf.l.wrap.b32 	%r917, %r911, %r910, 23;
	mov.b64 	%rd1326, {%r917, %r916};
	xor.b64  	%rd1327, %rd1325, %rd1326;
	xor.b64  	%rd1328, %rd1287, %rd1263;
	and.b64  	%rd1329, %rd1311, %rd1328;
	xor.b64  	%rd1330, %rd1329, %rd1263;
	add.s64 	%rd1331, %rd1239, %rd1061;
	add.s64 	%rd1332, %rd1331, %rd2673;
	add.s64 	%rd1333, %rd1332, %rd1330;
	add.s64 	%rd1334, %rd1333, %rd1327;
	add.s64 	%rd1335, %rd1334, %rd1250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r919}, %rd1322;
	}
	shf.r.wrap.b32 	%r920, %r919, %r918, 28;
	shf.r.wrap.b32 	%r921, %r918, %r919, 28;
	mov.b64 	%rd1336, {%r921, %r920};
	shf.l.wrap.b32 	%r922, %r918, %r919, 30;
	shf.l.wrap.b32 	%r923, %r919, %r918, 30;
	mov.b64 	%rd1337, {%r923, %r922};
	xor.b64  	%rd1338, %rd1337, %rd1336;
	shf.l.wrap.b32 	%r924, %r918, %r919, 25;
	shf.l.wrap.b32 	%r925, %r919, %r918, 25;
	mov.b64 	%rd1339, {%r925, %r924};
	xor.b64  	%rd1340, %rd1338, %rd1339;
	xor.b64  	%rd1341, %rd1322, %rd1274;
	xor.b64  	%rd1342, %rd1322, %rd1298;
	and.b64  	%rd1343, %rd1342, %rd1341;
	xor.b64  	%rd1344, %rd1343, %rd1322;
	add.s64 	%rd1345, %rd1334, %rd1344;
	add.s64 	%rd1346, %rd1345, %rd1340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd1335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd1335;
	}
	shf.r.wrap.b32 	%r928, %r927, %r926, 14;
	shf.r.wrap.b32 	%r929, %r926, %r927, 14;
	mov.b64 	%rd1347, {%r929, %r928};
	shf.r.wrap.b32 	%r930, %r927, %r926, 18;
	shf.r.wrap.b32 	%r931, %r926, %r927, 18;
	mov.b64 	%rd1348, {%r931, %r930};
	xor.b64  	%rd1349, %rd1348, %rd1347;
	shf.l.wrap.b32 	%r932, %r926, %r927, 23;
	shf.l.wrap.b32 	%r933, %r927, %r926, 23;
	mov.b64 	%rd1350, {%r933, %r932};
	xor.b64  	%rd1351, %rd1349, %rd1350;
	xor.b64  	%rd1352, %rd1311, %rd1287;
	and.b64  	%rd1353, %rd1335, %rd1352;
	xor.b64  	%rd1354, %rd1353, %rd1287;
	add.s64 	%rd1355, %rd1263, %rd1074;
	add.s64 	%rd1356, %rd1355, %rd2674;
	add.s64 	%rd1357, %rd1356, %rd1354;
	add.s64 	%rd1358, %rd1357, %rd1351;
	add.s64 	%rd1359, %rd1358, %rd1274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd1346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r935}, %rd1346;
	}
	shf.r.wrap.b32 	%r936, %r935, %r934, 28;
	shf.r.wrap.b32 	%r937, %r934, %r935, 28;
	mov.b64 	%rd1360, {%r937, %r936};
	shf.l.wrap.b32 	%r938, %r934, %r935, 30;
	shf.l.wrap.b32 	%r939, %r935, %r934, 30;
	mov.b64 	%rd1361, {%r939, %r938};
	xor.b64  	%rd1362, %rd1361, %rd1360;
	shf.l.wrap.b32 	%r940, %r934, %r935, 25;
	shf.l.wrap.b32 	%r941, %r935, %r934, 25;
	mov.b64 	%rd1363, {%r941, %r940};
	xor.b64  	%rd1364, %rd1362, %rd1363;
	xor.b64  	%rd1365, %rd1346, %rd1298;
	xor.b64  	%rd1366, %rd1346, %rd1322;
	and.b64  	%rd1367, %rd1366, %rd1365;
	xor.b64  	%rd1368, %rd1367, %rd1346;
	add.s64 	%rd1369, %rd1358, %rd1368;
	add.s64 	%rd1370, %rd1369, %rd1364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r942,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r943}, %rd1359;
	}
	shf.r.wrap.b32 	%r944, %r943, %r942, 14;
	shf.r.wrap.b32 	%r945, %r942, %r943, 14;
	mov.b64 	%rd1371, {%r945, %r944};
	shf.r.wrap.b32 	%r946, %r943, %r942, 18;
	shf.r.wrap.b32 	%r947, %r942, %r943, 18;
	mov.b64 	%rd1372, {%r947, %r946};
	xor.b64  	%rd1373, %rd1372, %rd1371;
	shf.l.wrap.b32 	%r948, %r942, %r943, 23;
	shf.l.wrap.b32 	%r949, %r943, %r942, 23;
	mov.b64 	%rd1374, {%r949, %r948};
	xor.b64  	%rd1375, %rd1373, %rd1374;
	xor.b64  	%rd1376, %rd1335, %rd1311;
	and.b64  	%rd1377, %rd1359, %rd1376;
	xor.b64  	%rd1378, %rd1377, %rd1311;
	add.s64 	%rd1379, %rd1287, %rd1087;
	add.s64 	%rd1380, %rd1379, %rd2675;
	add.s64 	%rd1381, %rd1380, %rd1378;
	add.s64 	%rd1382, %rd1381, %rd1375;
	add.s64 	%rd1383, %rd1382, %rd1298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd1370;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 28;
	shf.r.wrap.b32 	%r953, %r950, %r951, 28;
	mov.b64 	%rd1384, {%r953, %r952};
	shf.l.wrap.b32 	%r954, %r950, %r951, 30;
	shf.l.wrap.b32 	%r955, %r951, %r950, 30;
	mov.b64 	%rd1385, {%r955, %r954};
	xor.b64  	%rd1386, %rd1385, %rd1384;
	shf.l.wrap.b32 	%r956, %r950, %r951, 25;
	shf.l.wrap.b32 	%r957, %r951, %r950, 25;
	mov.b64 	%rd1387, {%r957, %r956};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	xor.b64  	%rd1389, %rd1370, %rd1322;
	xor.b64  	%rd1390, %rd1370, %rd1346;
	and.b64  	%rd1391, %rd1390, %rd1389;
	xor.b64  	%rd1392, %rd1391, %rd1370;
	add.s64 	%rd1393, %rd1382, %rd1392;
	add.s64 	%rd1394, %rd1393, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd1383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r959}, %rd1383;
	}
	shf.r.wrap.b32 	%r960, %r959, %r958, 14;
	shf.r.wrap.b32 	%r961, %r958, %r959, 14;
	mov.b64 	%rd1395, {%r961, %r960};
	shf.r.wrap.b32 	%r962, %r959, %r958, 18;
	shf.r.wrap.b32 	%r963, %r958, %r959, 18;
	mov.b64 	%rd1396, {%r963, %r962};
	xor.b64  	%rd1397, %rd1396, %rd1395;
	shf.l.wrap.b32 	%r964, %r958, %r959, 23;
	shf.l.wrap.b32 	%r965, %r959, %r958, 23;
	mov.b64 	%rd1398, {%r965, %r964};
	xor.b64  	%rd1399, %rd1397, %rd1398;
	xor.b64  	%rd1400, %rd1359, %rd1335;
	and.b64  	%rd1401, %rd1383, %rd1400;
	xor.b64  	%rd1402, %rd1401, %rd1335;
	add.s64 	%rd1403, %rd1311, %rd1100;
	add.s64 	%rd1404, %rd1403, %rd2676;
	add.s64 	%rd1405, %rd1404, %rd1402;
	add.s64 	%rd1406, %rd1405, %rd1399;
	add.s64 	%rd1407, %rd1406, %rd1322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r966,%dummy}, %rd1394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r967}, %rd1394;
	}
	shf.r.wrap.b32 	%r968, %r967, %r966, 28;
	shf.r.wrap.b32 	%r969, %r966, %r967, 28;
	mov.b64 	%rd1408, {%r969, %r968};
	shf.l.wrap.b32 	%r970, %r966, %r967, 30;
	shf.l.wrap.b32 	%r971, %r967, %r966, 30;
	mov.b64 	%rd1409, {%r971, %r970};
	xor.b64  	%rd1410, %rd1409, %rd1408;
	shf.l.wrap.b32 	%r972, %r966, %r967, 25;
	shf.l.wrap.b32 	%r973, %r967, %r966, 25;
	mov.b64 	%rd1411, {%r973, %r972};
	xor.b64  	%rd1412, %rd1410, %rd1411;
	xor.b64  	%rd1413, %rd1394, %rd1346;
	xor.b64  	%rd1414, %rd1394, %rd1370;
	and.b64  	%rd1415, %rd1414, %rd1413;
	xor.b64  	%rd1416, %rd1415, %rd1394;
	add.s64 	%rd1417, %rd1406, %rd1416;
	add.s64 	%rd1418, %rd1417, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r974,%dummy}, %rd1407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r975}, %rd1407;
	}
	shf.r.wrap.b32 	%r976, %r975, %r974, 14;
	shf.r.wrap.b32 	%r977, %r974, %r975, 14;
	mov.b64 	%rd1419, {%r977, %r976};
	shf.r.wrap.b32 	%r978, %r975, %r974, 18;
	shf.r.wrap.b32 	%r979, %r974, %r975, 18;
	mov.b64 	%rd1420, {%r979, %r978};
	xor.b64  	%rd1421, %rd1420, %rd1419;
	shf.l.wrap.b32 	%r980, %r974, %r975, 23;
	shf.l.wrap.b32 	%r981, %r975, %r974, 23;
	mov.b64 	%rd1422, {%r981, %r980};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	xor.b64  	%rd1424, %rd1383, %rd1359;
	and.b64  	%rd1425, %rd1407, %rd1424;
	xor.b64  	%rd1426, %rd1425, %rd1359;
	add.s64 	%rd1427, %rd1335, %rd1113;
	add.s64 	%rd1428, %rd1427, %rd2677;
	add.s64 	%rd1429, %rd1428, %rd1426;
	add.s64 	%rd1430, %rd1429, %rd1423;
	add.s64 	%rd1431, %rd1430, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r982,%dummy}, %rd1418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r983}, %rd1418;
	}
	shf.r.wrap.b32 	%r984, %r983, %r982, 28;
	shf.r.wrap.b32 	%r985, %r982, %r983, 28;
	mov.b64 	%rd1432, {%r985, %r984};
	shf.l.wrap.b32 	%r986, %r982, %r983, 30;
	shf.l.wrap.b32 	%r987, %r983, %r982, 30;
	mov.b64 	%rd1433, {%r987, %r986};
	xor.b64  	%rd1434, %rd1433, %rd1432;
	shf.l.wrap.b32 	%r988, %r982, %r983, 25;
	shf.l.wrap.b32 	%r989, %r983, %r982, 25;
	mov.b64 	%rd1435, {%r989, %r988};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	xor.b64  	%rd1437, %rd1418, %rd1370;
	xor.b64  	%rd1438, %rd1418, %rd1394;
	and.b64  	%rd1439, %rd1438, %rd1437;
	xor.b64  	%rd1440, %rd1439, %rd1418;
	add.s64 	%rd1441, %rd1430, %rd1440;
	add.s64 	%rd1442, %rd1441, %rd1436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r990,%dummy}, %rd1431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r991}, %rd1431;
	}
	shf.r.wrap.b32 	%r992, %r991, %r990, 14;
	shf.r.wrap.b32 	%r993, %r990, %r991, 14;
	mov.b64 	%rd1443, {%r993, %r992};
	shf.r.wrap.b32 	%r994, %r991, %r990, 18;
	shf.r.wrap.b32 	%r995, %r990, %r991, 18;
	mov.b64 	%rd1444, {%r995, %r994};
	xor.b64  	%rd1445, %rd1444, %rd1443;
	shf.l.wrap.b32 	%r996, %r990, %r991, 23;
	shf.l.wrap.b32 	%r997, %r991, %r990, 23;
	mov.b64 	%rd1446, {%r997, %r996};
	xor.b64  	%rd1447, %rd1445, %rd1446;
	xor.b64  	%rd1448, %rd1407, %rd1383;
	and.b64  	%rd1449, %rd1431, %rd1448;
	xor.b64  	%rd1450, %rd1449, %rd1383;
	add.s64 	%rd1451, %rd1359, %rd1126;
	add.s64 	%rd1452, %rd1451, %rd2678;
	add.s64 	%rd1453, %rd1452, %rd1450;
	add.s64 	%rd1454, %rd1453, %rd1447;
	add.s64 	%rd1455, %rd1454, %rd1370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r998,%dummy}, %rd1442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r999}, %rd1442;
	}
	shf.r.wrap.b32 	%r1000, %r999, %r998, 28;
	shf.r.wrap.b32 	%r1001, %r998, %r999, 28;
	mov.b64 	%rd1456, {%r1001, %r1000};
	shf.l.wrap.b32 	%r1002, %r998, %r999, 30;
	shf.l.wrap.b32 	%r1003, %r999, %r998, 30;
	mov.b64 	%rd1457, {%r1003, %r1002};
	xor.b64  	%rd1458, %rd1457, %rd1456;
	shf.l.wrap.b32 	%r1004, %r998, %r999, 25;
	shf.l.wrap.b32 	%r1005, %r999, %r998, 25;
	mov.b64 	%rd1459, {%r1005, %r1004};
	xor.b64  	%rd1460, %rd1458, %rd1459;
	xor.b64  	%rd1461, %rd1442, %rd1394;
	xor.b64  	%rd1462, %rd1442, %rd1418;
	and.b64  	%rd1463, %rd1462, %rd1461;
	xor.b64  	%rd1464, %rd1463, %rd1442;
	add.s64 	%rd1465, %rd1454, %rd1464;
	add.s64 	%rd1466, %rd1465, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd1455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1007}, %rd1455;
	}
	shf.r.wrap.b32 	%r1008, %r1007, %r1006, 14;
	shf.r.wrap.b32 	%r1009, %r1006, %r1007, 14;
	mov.b64 	%rd1467, {%r1009, %r1008};
	shf.r.wrap.b32 	%r1010, %r1007, %r1006, 18;
	shf.r.wrap.b32 	%r1011, %r1006, %r1007, 18;
	mov.b64 	%rd1468, {%r1011, %r1010};
	xor.b64  	%rd1469, %rd1468, %rd1467;
	shf.l.wrap.b32 	%r1012, %r1006, %r1007, 23;
	shf.l.wrap.b32 	%r1013, %r1007, %r1006, 23;
	mov.b64 	%rd1470, {%r1013, %r1012};
	xor.b64  	%rd1471, %rd1469, %rd1470;
	xor.b64  	%rd1472, %rd1431, %rd1407;
	and.b64  	%rd1473, %rd1455, %rd1472;
	xor.b64  	%rd1474, %rd1473, %rd1407;
	add.s64 	%rd1475, %rd1383, %rd1139;
	add.s64 	%rd1476, %rd1475, %rd2679;
	add.s64 	%rd1477, %rd1476, %rd1474;
	add.s64 	%rd1478, %rd1477, %rd1471;
	add.s64 	%rd1479, %rd1478, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd1466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1015}, %rd1466;
	}
	shf.r.wrap.b32 	%r1016, %r1015, %r1014, 28;
	shf.r.wrap.b32 	%r1017, %r1014, %r1015, 28;
	mov.b64 	%rd1480, {%r1017, %r1016};
	shf.l.wrap.b32 	%r1018, %r1014, %r1015, 30;
	shf.l.wrap.b32 	%r1019, %r1015, %r1014, 30;
	mov.b64 	%rd1481, {%r1019, %r1018};
	xor.b64  	%rd1482, %rd1481, %rd1480;
	shf.l.wrap.b32 	%r1020, %r1014, %r1015, 25;
	shf.l.wrap.b32 	%r1021, %r1015, %r1014, 25;
	mov.b64 	%rd1483, {%r1021, %r1020};
	xor.b64  	%rd1484, %rd1482, %rd1483;
	xor.b64  	%rd1485, %rd1466, %rd1418;
	xor.b64  	%rd1486, %rd1466, %rd1442;
	and.b64  	%rd1487, %rd1486, %rd1485;
	xor.b64  	%rd1488, %rd1487, %rd1466;
	add.s64 	%rd1489, %rd1478, %rd1488;
	add.s64 	%rd1490, %rd1489, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1022,%dummy}, %rd1479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1023}, %rd1479;
	}
	shf.r.wrap.b32 	%r1024, %r1023, %r1022, 14;
	shf.r.wrap.b32 	%r1025, %r1022, %r1023, 14;
	mov.b64 	%rd1491, {%r1025, %r1024};
	shf.r.wrap.b32 	%r1026, %r1023, %r1022, 18;
	shf.r.wrap.b32 	%r1027, %r1022, %r1023, 18;
	mov.b64 	%rd1492, {%r1027, %r1026};
	xor.b64  	%rd1493, %rd1492, %rd1491;
	shf.l.wrap.b32 	%r1028, %r1022, %r1023, 23;
	shf.l.wrap.b32 	%r1029, %r1023, %r1022, 23;
	mov.b64 	%rd1494, {%r1029, %r1028};
	xor.b64  	%rd1495, %rd1493, %rd1494;
	xor.b64  	%rd1496, %rd1455, %rd1431;
	and.b64  	%rd1497, %rd1479, %rd1496;
	xor.b64  	%rd1498, %rd1497, %rd1431;
	add.s64 	%rd1499, %rd1407, %rd1152;
	add.s64 	%rd1500, %rd1499, %rd2680;
	add.s64 	%rd1501, %rd1500, %rd1498;
	add.s64 	%rd1502, %rd1501, %rd1495;
	add.s64 	%rd1503, %rd1502, %rd1418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1030,%dummy}, %rd1490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1031}, %rd1490;
	}
	shf.r.wrap.b32 	%r1032, %r1031, %r1030, 28;
	shf.r.wrap.b32 	%r1033, %r1030, %r1031, 28;
	mov.b64 	%rd1504, {%r1033, %r1032};
	shf.l.wrap.b32 	%r1034, %r1030, %r1031, 30;
	shf.l.wrap.b32 	%r1035, %r1031, %r1030, 30;
	mov.b64 	%rd1505, {%r1035, %r1034};
	xor.b64  	%rd1506, %rd1505, %rd1504;
	shf.l.wrap.b32 	%r1036, %r1030, %r1031, 25;
	shf.l.wrap.b32 	%r1037, %r1031, %r1030, 25;
	mov.b64 	%rd1507, {%r1037, %r1036};
	xor.b64  	%rd1508, %rd1506, %rd1507;
	xor.b64  	%rd1509, %rd1490, %rd1442;
	xor.b64  	%rd1510, %rd1490, %rd1466;
	and.b64  	%rd1511, %rd1510, %rd1509;
	xor.b64  	%rd1512, %rd1511, %rd1490;
	add.s64 	%rd1513, %rd1502, %rd1512;
	add.s64 	%rd1514, %rd1513, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd1503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1039}, %rd1503;
	}
	shf.r.wrap.b32 	%r1040, %r1039, %r1038, 14;
	shf.r.wrap.b32 	%r1041, %r1038, %r1039, 14;
	mov.b64 	%rd1515, {%r1041, %r1040};
	shf.r.wrap.b32 	%r1042, %r1039, %r1038, 18;
	shf.r.wrap.b32 	%r1043, %r1038, %r1039, 18;
	mov.b64 	%rd1516, {%r1043, %r1042};
	xor.b64  	%rd1517, %rd1516, %rd1515;
	shf.l.wrap.b32 	%r1044, %r1038, %r1039, 23;
	shf.l.wrap.b32 	%r1045, %r1039, %r1038, 23;
	mov.b64 	%rd1518, {%r1045, %r1044};
	xor.b64  	%rd1519, %rd1517, %rd1518;
	xor.b64  	%rd1520, %rd1479, %rd1455;
	and.b64  	%rd1521, %rd1503, %rd1520;
	xor.b64  	%rd1522, %rd1521, %rd1455;
	add.s64 	%rd1523, %rd1431, %rd1165;
	add.s64 	%rd1524, %rd1523, %rd2681;
	add.s64 	%rd1525, %rd1524, %rd1522;
	add.s64 	%rd1526, %rd1525, %rd1519;
	add.s64 	%rd1527, %rd1526, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd1514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd1514;
	}
	shf.r.wrap.b32 	%r1048, %r1047, %r1046, 28;
	shf.r.wrap.b32 	%r1049, %r1046, %r1047, 28;
	mov.b64 	%rd1528, {%r1049, %r1048};
	shf.l.wrap.b32 	%r1050, %r1046, %r1047, 30;
	shf.l.wrap.b32 	%r1051, %r1047, %r1046, 30;
	mov.b64 	%rd1529, {%r1051, %r1050};
	xor.b64  	%rd1530, %rd1529, %rd1528;
	shf.l.wrap.b32 	%r1052, %r1046, %r1047, 25;
	shf.l.wrap.b32 	%r1053, %r1047, %r1046, 25;
	mov.b64 	%rd1531, {%r1053, %r1052};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	xor.b64  	%rd1533, %rd1514, %rd1466;
	xor.b64  	%rd1534, %rd1514, %rd1490;
	and.b64  	%rd1535, %rd1534, %rd1533;
	xor.b64  	%rd1536, %rd1535, %rd1514;
	add.s64 	%rd1537, %rd1526, %rd1536;
	add.s64 	%rd1538, %rd1537, %rd1532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1054,%dummy}, %rd1527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1055}, %rd1527;
	}
	shf.r.wrap.b32 	%r1056, %r1055, %r1054, 14;
	shf.r.wrap.b32 	%r1057, %r1054, %r1055, 14;
	mov.b64 	%rd1539, {%r1057, %r1056};
	shf.r.wrap.b32 	%r1058, %r1055, %r1054, 18;
	shf.r.wrap.b32 	%r1059, %r1054, %r1055, 18;
	mov.b64 	%rd1540, {%r1059, %r1058};
	xor.b64  	%rd1541, %rd1540, %rd1539;
	shf.l.wrap.b32 	%r1060, %r1054, %r1055, 23;
	shf.l.wrap.b32 	%r1061, %r1055, %r1054, 23;
	mov.b64 	%rd1542, {%r1061, %r1060};
	xor.b64  	%rd1543, %rd1541, %rd1542;
	xor.b64  	%rd1544, %rd1503, %rd1479;
	and.b64  	%rd1545, %rd1527, %rd1544;
	xor.b64  	%rd1546, %rd1545, %rd1479;
	add.s64 	%rd1547, %rd1455, %rd1178;
	add.s64 	%rd1548, %rd1547, %rd2682;
	add.s64 	%rd1549, %rd1548, %rd1546;
	add.s64 	%rd1550, %rd1549, %rd1543;
	add.s64 	%rd1551, %rd1550, %rd1466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1062,%dummy}, %rd1538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1063}, %rd1538;
	}
	shf.r.wrap.b32 	%r1064, %r1063, %r1062, 28;
	shf.r.wrap.b32 	%r1065, %r1062, %r1063, 28;
	mov.b64 	%rd1552, {%r1065, %r1064};
	shf.l.wrap.b32 	%r1066, %r1062, %r1063, 30;
	shf.l.wrap.b32 	%r1067, %r1063, %r1062, 30;
	mov.b64 	%rd1553, {%r1067, %r1066};
	xor.b64  	%rd1554, %rd1553, %rd1552;
	shf.l.wrap.b32 	%r1068, %r1062, %r1063, 25;
	shf.l.wrap.b32 	%r1069, %r1063, %r1062, 25;
	mov.b64 	%rd1555, {%r1069, %r1068};
	xor.b64  	%rd1556, %rd1554, %rd1555;
	xor.b64  	%rd1557, %rd1538, %rd1490;
	xor.b64  	%rd1558, %rd1538, %rd1514;
	and.b64  	%rd1559, %rd1558, %rd1557;
	xor.b64  	%rd1560, %rd1559, %rd1538;
	add.s64 	%rd1561, %rd1550, %rd1560;
	add.s64 	%rd1562, %rd1561, %rd1556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1070,%dummy}, %rd1165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1071}, %rd1165;
	}
	shf.r.wrap.b32 	%r1072, %r1071, %r1070, 19;
	shf.r.wrap.b32 	%r1073, %r1070, %r1071, 19;
	mov.b64 	%rd1563, {%r1073, %r1072};
	shf.l.wrap.b32 	%r1074, %r1070, %r1071, 3;
	shf.l.wrap.b32 	%r1075, %r1071, %r1070, 3;
	mov.b64 	%rd1564, {%r1075, %r1074};
	shr.u64 	%rd1565, %rd1165, 6;
	xor.b64  	%rd1566, %rd1563, %rd1565;
	xor.b64  	%rd1567, %rd1566, %rd1564;
	shf.r.wrap.b32 	%r1076, %r689, %r688, 1;
	shf.r.wrap.b32 	%r1077, %r688, %r689, 1;
	mov.b64 	%rd1568, {%r1077, %r1076};
	shf.r.wrap.b32 	%r1078, %r689, %r688, 8;
	shf.r.wrap.b32 	%r1079, %r688, %r689, 8;
	mov.b64 	%rd1569, {%r1079, %r1078};
	shr.u64 	%rd1570, %rd1006, 7;
	xor.b64  	%rd1571, %rd1568, %rd1570;
	xor.b64  	%rd1572, %rd1571, %rd1569;
	add.s64 	%rd1573, %rd993, %rd1100;
	add.s64 	%rd1574, %rd1573, %rd1567;
	add.s64 	%rd1575, %rd1574, %rd1572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1080,%dummy}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd1178;
	}
	shf.r.wrap.b32 	%r1082, %r1081, %r1080, 19;
	shf.r.wrap.b32 	%r1083, %r1080, %r1081, 19;
	mov.b64 	%rd1576, {%r1083, %r1082};
	shf.l.wrap.b32 	%r1084, %r1080, %r1081, 3;
	shf.l.wrap.b32 	%r1085, %r1081, %r1080, 3;
	mov.b64 	%rd1577, {%r1085, %r1084};
	shr.u64 	%rd1578, %rd1178, 6;
	xor.b64  	%rd1579, %rd1576, %rd1578;
	xor.b64  	%rd1580, %rd1579, %rd1577;
	shf.r.wrap.b32 	%r1086, %r699, %r698, 1;
	shf.r.wrap.b32 	%r1087, %r698, %r699, 1;
	mov.b64 	%rd1581, {%r1087, %r1086};
	shf.r.wrap.b32 	%r1088, %r699, %r698, 8;
	shf.r.wrap.b32 	%r1089, %r698, %r699, 8;
	mov.b64 	%rd1582, {%r1089, %r1088};
	shr.u64 	%rd1583, %rd1014, 7;
	xor.b64  	%rd1584, %rd1581, %rd1583;
	xor.b64  	%rd1585, %rd1584, %rd1582;
	add.s64 	%rd1586, %rd1006, %rd1113;
	add.s64 	%rd1587, %rd1586, %rd1580;
	add.s64 	%rd1588, %rd1587, %rd1585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd1575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1091}, %rd1575;
	}
	shf.r.wrap.b32 	%r1092, %r1091, %r1090, 19;
	shf.r.wrap.b32 	%r1093, %r1090, %r1091, 19;
	mov.b64 	%rd1589, {%r1093, %r1092};
	shf.l.wrap.b32 	%r1094, %r1090, %r1091, 3;
	shf.l.wrap.b32 	%r1095, %r1091, %r1090, 3;
	mov.b64 	%rd1590, {%r1095, %r1094};
	shr.u64 	%rd1591, %rd1575, 6;
	xor.b64  	%rd1592, %rd1589, %rd1591;
	xor.b64  	%rd1593, %rd1592, %rd1590;
	shf.r.wrap.b32 	%r1096, %r705, %r704, 1;
	shf.r.wrap.b32 	%r1097, %r704, %r705, 1;
	mov.b64 	%rd1594, {%r1097, %r1096};
	shf.r.wrap.b32 	%r1098, %r705, %r704, 8;
	shf.r.wrap.b32 	%r1099, %r704, %r705, 8;
	mov.b64 	%rd1595, {%r1099, %r1098};
	shr.u64 	%rd1596, %rd1027, 7;
	xor.b64  	%rd1597, %rd1594, %rd1596;
	xor.b64  	%rd1598, %rd1597, %rd1595;
	add.s64 	%rd1599, %rd1014, %rd1126;
	add.s64 	%rd1600, %rd1599, %rd1593;
	add.s64 	%rd1601, %rd1600, %rd1598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1100,%dummy}, %rd1588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1101}, %rd1588;
	}
	shf.r.wrap.b32 	%r1102, %r1101, %r1100, 19;
	shf.r.wrap.b32 	%r1103, %r1100, %r1101, 19;
	mov.b64 	%rd1602, {%r1103, %r1102};
	shf.l.wrap.b32 	%r1104, %r1100, %r1101, 3;
	shf.l.wrap.b32 	%r1105, %r1101, %r1100, 3;
	mov.b64 	%rd1603, {%r1105, %r1104};
	shr.u64 	%rd1604, %rd1588, 6;
	xor.b64  	%rd1605, %rd1602, %rd1604;
	xor.b64  	%rd1606, %rd1605, %rd1603;
	shf.r.wrap.b32 	%r1106, %r715, %r714, 1;
	shf.r.wrap.b32 	%r1107, %r714, %r715, 1;
	mov.b64 	%rd1607, {%r1107, %r1106};
	shf.r.wrap.b32 	%r1108, %r715, %r714, 8;
	shf.r.wrap.b32 	%r1109, %r714, %r715, 8;
	mov.b64 	%rd1608, {%r1109, %r1108};
	shr.u64 	%rd1609, %rd1035, 7;
	xor.b64  	%rd1610, %rd1607, %rd1609;
	xor.b64  	%rd1611, %rd1610, %rd1608;
	add.s64 	%rd1612, %rd1027, %rd1139;
	add.s64 	%rd1613, %rd1612, %rd1606;
	add.s64 	%rd1614, %rd1613, %rd1611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1110,%dummy}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1111}, %rd1601;
	}
	shf.r.wrap.b32 	%r1112, %r1111, %r1110, 19;
	shf.r.wrap.b32 	%r1113, %r1110, %r1111, 19;
	mov.b64 	%rd1615, {%r1113, %r1112};
	shf.l.wrap.b32 	%r1114, %r1110, %r1111, 3;
	shf.l.wrap.b32 	%r1115, %r1111, %r1110, 3;
	mov.b64 	%rd1616, {%r1115, %r1114};
	shr.u64 	%rd1617, %rd1601, 6;
	xor.b64  	%rd1618, %rd1615, %rd1617;
	xor.b64  	%rd1619, %rd1618, %rd1616;
	shf.r.wrap.b32 	%r1116, %r725, %r724, 1;
	shf.r.wrap.b32 	%r1117, %r724, %r725, 1;
	mov.b64 	%rd1620, {%r1117, %r1116};
	shf.r.wrap.b32 	%r1118, %r725, %r724, 8;
	shf.r.wrap.b32 	%r1119, %r724, %r725, 8;
	mov.b64 	%rd1621, {%r1119, %r1118};
	shr.u64 	%rd1622, %rd1048, 7;
	xor.b64  	%rd1623, %rd1620, %rd1622;
	xor.b64  	%rd1624, %rd1623, %rd1621;
	add.s64 	%rd1625, %rd1035, %rd1152;
	add.s64 	%rd1626, %rd1625, %rd1619;
	add.s64 	%rd1627, %rd1626, %rd1624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1120,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1121}, %rd1614;
	}
	shf.r.wrap.b32 	%r1122, %r1121, %r1120, 19;
	shf.r.wrap.b32 	%r1123, %r1120, %r1121, 19;
	mov.b64 	%rd1628, {%r1123, %r1122};
	shf.l.wrap.b32 	%r1124, %r1120, %r1121, 3;
	shf.l.wrap.b32 	%r1125, %r1121, %r1120, 3;
	mov.b64 	%rd1629, {%r1125, %r1124};
	shr.u64 	%rd1630, %rd1614, 6;
	xor.b64  	%rd1631, %rd1628, %rd1630;
	xor.b64  	%rd1632, %rd1631, %rd1629;
	shf.r.wrap.b32 	%r1126, %r735, %r734, 1;
	shf.r.wrap.b32 	%r1127, %r734, %r735, 1;
	mov.b64 	%rd1633, {%r1127, %r1126};
	shf.r.wrap.b32 	%r1128, %r735, %r734, 8;
	shf.r.wrap.b32 	%r1129, %r734, %r735, 8;
	mov.b64 	%rd1634, {%r1129, %r1128};
	shr.u64 	%rd1635, %rd1061, 7;
	xor.b64  	%rd1636, %rd1633, %rd1635;
	xor.b64  	%rd1637, %rd1636, %rd1634;
	add.s64 	%rd1638, %rd1048, %rd1165;
	add.s64 	%rd1639, %rd1638, %rd1632;
	add.s64 	%rd1640, %rd1639, %rd1637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1131}, %rd1627;
	}
	shf.r.wrap.b32 	%r1132, %r1131, %r1130, 19;
	shf.r.wrap.b32 	%r1133, %r1130, %r1131, 19;
	mov.b64 	%rd1641, {%r1133, %r1132};
	shf.l.wrap.b32 	%r1134, %r1130, %r1131, 3;
	shf.l.wrap.b32 	%r1135, %r1131, %r1130, 3;
	mov.b64 	%rd1642, {%r1135, %r1134};
	shr.u64 	%rd1643, %rd1627, 6;
	xor.b64  	%rd1644, %rd1641, %rd1643;
	xor.b64  	%rd1645, %rd1644, %rd1642;
	shf.r.wrap.b32 	%r1136, %r745, %r744, 1;
	shf.r.wrap.b32 	%r1137, %r744, %r745, 1;
	mov.b64 	%rd1646, {%r1137, %r1136};
	shf.r.wrap.b32 	%r1138, %r745, %r744, 8;
	shf.r.wrap.b32 	%r1139, %r744, %r745, 8;
	mov.b64 	%rd1647, {%r1139, %r1138};
	shr.u64 	%rd1648, %rd1074, 7;
	xor.b64  	%rd1649, %rd1646, %rd1648;
	xor.b64  	%rd1650, %rd1649, %rd1647;
	add.s64 	%rd1651, %rd1061, %rd1178;
	add.s64 	%rd1652, %rd1651, %rd1645;
	add.s64 	%rd1653, %rd1652, %rd1650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1140,%dummy}, %rd1640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1141}, %rd1640;
	}
	shf.r.wrap.b32 	%r1142, %r1141, %r1140, 19;
	shf.r.wrap.b32 	%r1143, %r1140, %r1141, 19;
	mov.b64 	%rd1654, {%r1143, %r1142};
	shf.l.wrap.b32 	%r1144, %r1140, %r1141, 3;
	shf.l.wrap.b32 	%r1145, %r1141, %r1140, 3;
	mov.b64 	%rd1655, {%r1145, %r1144};
	shr.u64 	%rd1656, %rd1640, 6;
	xor.b64  	%rd1657, %rd1654, %rd1656;
	xor.b64  	%rd1658, %rd1657, %rd1655;
	shf.r.wrap.b32 	%r1146, %r755, %r754, 1;
	shf.r.wrap.b32 	%r1147, %r754, %r755, 1;
	mov.b64 	%rd1659, {%r1147, %r1146};
	shf.r.wrap.b32 	%r1148, %r755, %r754, 8;
	shf.r.wrap.b32 	%r1149, %r754, %r755, 8;
	mov.b64 	%rd1660, {%r1149, %r1148};
	shr.u64 	%rd1661, %rd1087, 7;
	xor.b64  	%rd1662, %rd1659, %rd1661;
	xor.b64  	%rd1663, %rd1662, %rd1660;
	add.s64 	%rd1664, %rd1575, %rd1074;
	add.s64 	%rd1665, %rd1664, %rd1658;
	add.s64 	%rd1666, %rd1665, %rd1663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1150,%dummy}, %rd1653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1151}, %rd1653;
	}
	shf.r.wrap.b32 	%r1152, %r1151, %r1150, 19;
	shf.r.wrap.b32 	%r1153, %r1150, %r1151, 19;
	mov.b64 	%rd1667, {%r1153, %r1152};
	shf.l.wrap.b32 	%r1154, %r1150, %r1151, 3;
	shf.l.wrap.b32 	%r1155, %r1151, %r1150, 3;
	mov.b64 	%rd1668, {%r1155, %r1154};
	shr.u64 	%rd1669, %rd1653, 6;
	xor.b64  	%rd1670, %rd1667, %rd1669;
	xor.b64  	%rd1671, %rd1670, %rd1668;
	shf.r.wrap.b32 	%r1156, %r765, %r764, 1;
	shf.r.wrap.b32 	%r1157, %r764, %r765, 1;
	mov.b64 	%rd1672, {%r1157, %r1156};
	shf.r.wrap.b32 	%r1158, %r765, %r764, 8;
	shf.r.wrap.b32 	%r1159, %r764, %r765, 8;
	mov.b64 	%rd1673, {%r1159, %r1158};
	shr.u64 	%rd1674, %rd1100, 7;
	xor.b64  	%rd1675, %rd1672, %rd1674;
	xor.b64  	%rd1676, %rd1675, %rd1673;
	add.s64 	%rd1677, %rd1588, %rd1087;
	add.s64 	%rd1678, %rd1677, %rd1671;
	add.s64 	%rd1679, %rd1678, %rd1676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1160,%dummy}, %rd1666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1161}, %rd1666;
	}
	shf.r.wrap.b32 	%r1162, %r1161, %r1160, 19;
	shf.r.wrap.b32 	%r1163, %r1160, %r1161, 19;
	mov.b64 	%rd1680, {%r1163, %r1162};
	shf.l.wrap.b32 	%r1164, %r1160, %r1161, 3;
	shf.l.wrap.b32 	%r1165, %r1161, %r1160, 3;
	mov.b64 	%rd1681, {%r1165, %r1164};
	shr.u64 	%rd1682, %rd1666, 6;
	xor.b64  	%rd1683, %rd1680, %rd1682;
	xor.b64  	%rd1684, %rd1683, %rd1681;
	shf.r.wrap.b32 	%r1166, %r775, %r774, 1;
	shf.r.wrap.b32 	%r1167, %r774, %r775, 1;
	mov.b64 	%rd1685, {%r1167, %r1166};
	shf.r.wrap.b32 	%r1168, %r775, %r774, 8;
	shf.r.wrap.b32 	%r1169, %r774, %r775, 8;
	mov.b64 	%rd1686, {%r1169, %r1168};
	shr.u64 	%rd1687, %rd1113, 7;
	xor.b64  	%rd1688, %rd1685, %rd1687;
	xor.b64  	%rd1689, %rd1688, %rd1686;
	add.s64 	%rd1690, %rd1601, %rd1100;
	add.s64 	%rd1691, %rd1690, %rd1684;
	add.s64 	%rd1692, %rd1691, %rd1689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1170,%dummy}, %rd1679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1171}, %rd1679;
	}
	shf.r.wrap.b32 	%r1172, %r1171, %r1170, 19;
	shf.r.wrap.b32 	%r1173, %r1170, %r1171, 19;
	mov.b64 	%rd1693, {%r1173, %r1172};
	shf.l.wrap.b32 	%r1174, %r1170, %r1171, 3;
	shf.l.wrap.b32 	%r1175, %r1171, %r1170, 3;
	mov.b64 	%rd1694, {%r1175, %r1174};
	shr.u64 	%rd1695, %rd1679, 6;
	xor.b64  	%rd1696, %rd1693, %rd1695;
	xor.b64  	%rd1697, %rd1696, %rd1694;
	shf.r.wrap.b32 	%r1176, %r785, %r784, 1;
	shf.r.wrap.b32 	%r1177, %r784, %r785, 1;
	mov.b64 	%rd1698, {%r1177, %r1176};
	shf.r.wrap.b32 	%r1178, %r785, %r784, 8;
	shf.r.wrap.b32 	%r1179, %r784, %r785, 8;
	mov.b64 	%rd1699, {%r1179, %r1178};
	shr.u64 	%rd1700, %rd1126, 7;
	xor.b64  	%rd1701, %rd1698, %rd1700;
	xor.b64  	%rd1702, %rd1701, %rd1699;
	add.s64 	%rd1703, %rd1614, %rd1113;
	add.s64 	%rd1704, %rd1703, %rd1697;
	add.s64 	%rd1705, %rd1704, %rd1702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1180,%dummy}, %rd1692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1181}, %rd1692;
	}
	shf.r.wrap.b32 	%r1182, %r1181, %r1180, 19;
	shf.r.wrap.b32 	%r1183, %r1180, %r1181, 19;
	mov.b64 	%rd1706, {%r1183, %r1182};
	shf.l.wrap.b32 	%r1184, %r1180, %r1181, 3;
	shf.l.wrap.b32 	%r1185, %r1181, %r1180, 3;
	mov.b64 	%rd1707, {%r1185, %r1184};
	shr.u64 	%rd1708, %rd1692, 6;
	xor.b64  	%rd1709, %rd1706, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1707;
	shf.r.wrap.b32 	%r1186, %r795, %r794, 1;
	shf.r.wrap.b32 	%r1187, %r794, %r795, 1;
	mov.b64 	%rd1711, {%r1187, %r1186};
	shf.r.wrap.b32 	%r1188, %r795, %r794, 8;
	shf.r.wrap.b32 	%r1189, %r794, %r795, 8;
	mov.b64 	%rd1712, {%r1189, %r1188};
	shr.u64 	%rd1713, %rd1139, 7;
	xor.b64  	%rd1714, %rd1711, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd1712;
	add.s64 	%rd1716, %rd1627, %rd1126;
	add.s64 	%rd1717, %rd1716, %rd1710;
	add.s64 	%rd1718, %rd1717, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1190,%dummy}, %rd1705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1191}, %rd1705;
	}
	shf.r.wrap.b32 	%r1192, %r1191, %r1190, 19;
	shf.r.wrap.b32 	%r1193, %r1190, %r1191, 19;
	mov.b64 	%rd1719, {%r1193, %r1192};
	shf.l.wrap.b32 	%r1194, %r1190, %r1191, 3;
	shf.l.wrap.b32 	%r1195, %r1191, %r1190, 3;
	mov.b64 	%rd1720, {%r1195, %r1194};
	shr.u64 	%rd1721, %rd1705, 6;
	xor.b64  	%rd1722, %rd1719, %rd1721;
	xor.b64  	%rd1723, %rd1722, %rd1720;
	shf.r.wrap.b32 	%r1196, %r805, %r804, 1;
	shf.r.wrap.b32 	%r1197, %r804, %r805, 1;
	mov.b64 	%rd1724, {%r1197, %r1196};
	shf.r.wrap.b32 	%r1198, %r805, %r804, 8;
	shf.r.wrap.b32 	%r1199, %r804, %r805, 8;
	mov.b64 	%rd1725, {%r1199, %r1198};
	shr.u64 	%rd1726, %rd1152, 7;
	xor.b64  	%rd1727, %rd1724, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1725;
	add.s64 	%rd1729, %rd1640, %rd1139;
	add.s64 	%rd1730, %rd1729, %rd1723;
	add.s64 	%rd1731, %rd1730, %rd1728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1200,%dummy}, %rd1718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1201}, %rd1718;
	}
	shf.r.wrap.b32 	%r1202, %r1201, %r1200, 19;
	shf.r.wrap.b32 	%r1203, %r1200, %r1201, 19;
	mov.b64 	%rd1732, {%r1203, %r1202};
	shf.l.wrap.b32 	%r1204, %r1200, %r1201, 3;
	shf.l.wrap.b32 	%r1205, %r1201, %r1200, 3;
	mov.b64 	%rd1733, {%r1205, %r1204};
	shr.u64 	%rd1734, %rd1718, 6;
	xor.b64  	%rd1735, %rd1732, %rd1734;
	xor.b64  	%rd1736, %rd1735, %rd1733;
	shf.r.wrap.b32 	%r1206, %r1071, %r1070, 1;
	shf.r.wrap.b32 	%r1207, %r1070, %r1071, 1;
	mov.b64 	%rd1737, {%r1207, %r1206};
	shf.r.wrap.b32 	%r1208, %r1071, %r1070, 8;
	shf.r.wrap.b32 	%r1209, %r1070, %r1071, 8;
	mov.b64 	%rd1738, {%r1209, %r1208};
	shr.u64 	%rd1739, %rd1165, 7;
	xor.b64  	%rd1740, %rd1737, %rd1739;
	xor.b64  	%rd1741, %rd1740, %rd1738;
	add.s64 	%rd1742, %rd1653, %rd1152;
	add.s64 	%rd1743, %rd1742, %rd1736;
	add.s64 	%rd1744, %rd1743, %rd1741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd1731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1211}, %rd1731;
	}
	shf.r.wrap.b32 	%r1212, %r1211, %r1210, 19;
	shf.r.wrap.b32 	%r1213, %r1210, %r1211, 19;
	mov.b64 	%rd1745, {%r1213, %r1212};
	shf.l.wrap.b32 	%r1214, %r1210, %r1211, 3;
	shf.l.wrap.b32 	%r1215, %r1211, %r1210, 3;
	mov.b64 	%rd1746, {%r1215, %r1214};
	shr.u64 	%rd1747, %rd1731, 6;
	xor.b64  	%rd1748, %rd1745, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1746;
	shf.r.wrap.b32 	%r1216, %r1081, %r1080, 1;
	shf.r.wrap.b32 	%r1217, %r1080, %r1081, 1;
	mov.b64 	%rd1750, {%r1217, %r1216};
	shf.r.wrap.b32 	%r1218, %r1081, %r1080, 8;
	shf.r.wrap.b32 	%r1219, %r1080, %r1081, 8;
	mov.b64 	%rd1751, {%r1219, %r1218};
	shr.u64 	%rd1752, %rd1178, 7;
	xor.b64  	%rd1753, %rd1750, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1751;
	add.s64 	%rd1755, %rd1666, %rd1165;
	add.s64 	%rd1756, %rd1755, %rd1749;
	add.s64 	%rd1757, %rd1756, %rd1754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1220,%dummy}, %rd1744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1221}, %rd1744;
	}
	shf.r.wrap.b32 	%r1222, %r1221, %r1220, 19;
	shf.r.wrap.b32 	%r1223, %r1220, %r1221, 19;
	mov.b64 	%rd1758, {%r1223, %r1222};
	shf.l.wrap.b32 	%r1224, %r1220, %r1221, 3;
	shf.l.wrap.b32 	%r1225, %r1221, %r1220, 3;
	mov.b64 	%rd1759, {%r1225, %r1224};
	shr.u64 	%rd1760, %rd1744, 6;
	xor.b64  	%rd1761, %rd1758, %rd1760;
	xor.b64  	%rd1762, %rd1761, %rd1759;
	shf.r.wrap.b32 	%r1226, %r1091, %r1090, 1;
	shf.r.wrap.b32 	%r1227, %r1090, %r1091, 1;
	mov.b64 	%rd1763, {%r1227, %r1226};
	shf.r.wrap.b32 	%r1228, %r1091, %r1090, 8;
	shf.r.wrap.b32 	%r1229, %r1090, %r1091, 8;
	mov.b64 	%rd1764, {%r1229, %r1228};
	shr.u64 	%rd1765, %rd1575, 7;
	xor.b64  	%rd1766, %rd1763, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1764;
	add.s64 	%rd1768, %rd1679, %rd1178;
	add.s64 	%rd1769, %rd1768, %rd1762;
	add.s64 	%rd1770, %rd1769, %rd1767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1230,%dummy}, %rd1551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1231}, %rd1551;
	}
	shf.r.wrap.b32 	%r1232, %r1231, %r1230, 14;
	shf.r.wrap.b32 	%r1233, %r1230, %r1231, 14;
	mov.b64 	%rd1771, {%r1233, %r1232};
	shf.r.wrap.b32 	%r1234, %r1231, %r1230, 18;
	shf.r.wrap.b32 	%r1235, %r1230, %r1231, 18;
	mov.b64 	%rd1772, {%r1235, %r1234};
	xor.b64  	%rd1773, %rd1772, %rd1771;
	shf.l.wrap.b32 	%r1236, %r1230, %r1231, 23;
	shf.l.wrap.b32 	%r1237, %r1231, %r1230, 23;
	mov.b64 	%rd1774, {%r1237, %r1236};
	xor.b64  	%rd1775, %rd1773, %rd1774;
	xor.b64  	%rd1776, %rd1503, %rd1527;
	and.b64  	%rd1777, %rd1776, %rd1551;
	xor.b64  	%rd1778, %rd1777, %rd1503;
	add.s64 	%rd1779, %rd1778, %rd1479;
	add.s64 	%rd1780, %rd1779, %rd1575;
	add.s64 	%rd1781, %rd1780, %rd2683;
	add.s64 	%rd1782, %rd1781, %rd1775;
	add.s64 	%rd1783, %rd1782, %rd1490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1238,%dummy}, %rd1562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1239}, %rd1562;
	}
	shf.r.wrap.b32 	%r1240, %r1239, %r1238, 28;
	shf.r.wrap.b32 	%r1241, %r1238, %r1239, 28;
	mov.b64 	%rd1784, {%r1241, %r1240};
	shf.l.wrap.b32 	%r1242, %r1238, %r1239, 30;
	shf.l.wrap.b32 	%r1243, %r1239, %r1238, 30;
	mov.b64 	%rd1785, {%r1243, %r1242};
	xor.b64  	%rd1786, %rd1785, %rd1784;
	shf.l.wrap.b32 	%r1244, %r1238, %r1239, 25;
	shf.l.wrap.b32 	%r1245, %r1239, %r1238, 25;
	mov.b64 	%rd1787, {%r1245, %r1244};
	xor.b64  	%rd1788, %rd1786, %rd1787;
	xor.b64  	%rd1789, %rd1562, %rd1514;
	xor.b64  	%rd1790, %rd1562, %rd1538;
	and.b64  	%rd1791, %rd1790, %rd1789;
	xor.b64  	%rd1792, %rd1791, %rd1562;
	add.s64 	%rd1793, %rd1782, %rd1792;
	add.s64 	%rd1794, %rd1793, %rd1788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd1783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1247}, %rd1783;
	}
	shf.r.wrap.b32 	%r1248, %r1247, %r1246, 14;
	shf.r.wrap.b32 	%r1249, %r1246, %r1247, 14;
	mov.b64 	%rd1795, {%r1249, %r1248};
	shf.r.wrap.b32 	%r1250, %r1247, %r1246, 18;
	shf.r.wrap.b32 	%r1251, %r1246, %r1247, 18;
	mov.b64 	%rd1796, {%r1251, %r1250};
	xor.b64  	%rd1797, %rd1796, %rd1795;
	shf.l.wrap.b32 	%r1252, %r1246, %r1247, 23;
	shf.l.wrap.b32 	%r1253, %r1247, %r1246, 23;
	mov.b64 	%rd1798, {%r1253, %r1252};
	xor.b64  	%rd1799, %rd1797, %rd1798;
	xor.b64  	%rd1800, %rd1527, %rd1551;
	and.b64  	%rd1801, %rd1783, %rd1800;
	xor.b64  	%rd1802, %rd1801, %rd1527;
	add.s64 	%rd1803, %rd1588, %rd1503;
	add.s64 	%rd1804, %rd1803, %rd2684;
	add.s64 	%rd1805, %rd1804, %rd1802;
	add.s64 	%rd1806, %rd1805, %rd1799;
	add.s64 	%rd1807, %rd1806, %rd1514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1254,%dummy}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1255}, %rd1794;
	}
	shf.r.wrap.b32 	%r1256, %r1255, %r1254, 28;
	shf.r.wrap.b32 	%r1257, %r1254, %r1255, 28;
	mov.b64 	%rd1808, {%r1257, %r1256};
	shf.l.wrap.b32 	%r1258, %r1254, %r1255, 30;
	shf.l.wrap.b32 	%r1259, %r1255, %r1254, 30;
	mov.b64 	%rd1809, {%r1259, %r1258};
	xor.b64  	%rd1810, %rd1809, %rd1808;
	shf.l.wrap.b32 	%r1260, %r1254, %r1255, 25;
	shf.l.wrap.b32 	%r1261, %r1255, %r1254, 25;
	mov.b64 	%rd1811, {%r1261, %r1260};
	xor.b64  	%rd1812, %rd1810, %rd1811;
	xor.b64  	%rd1813, %rd1794, %rd1538;
	xor.b64  	%rd1814, %rd1794, %rd1562;
	and.b64  	%rd1815, %rd1814, %rd1813;
	xor.b64  	%rd1816, %rd1815, %rd1794;
	add.s64 	%rd1817, %rd1806, %rd1816;
	add.s64 	%rd1818, %rd1817, %rd1812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1263}, %rd1807;
	}
	shf.r.wrap.b32 	%r1264, %r1263, %r1262, 14;
	shf.r.wrap.b32 	%r1265, %r1262, %r1263, 14;
	mov.b64 	%rd1819, {%r1265, %r1264};
	shf.r.wrap.b32 	%r1266, %r1263, %r1262, 18;
	shf.r.wrap.b32 	%r1267, %r1262, %r1263, 18;
	mov.b64 	%rd1820, {%r1267, %r1266};
	xor.b64  	%rd1821, %rd1820, %rd1819;
	shf.l.wrap.b32 	%r1268, %r1262, %r1263, 23;
	shf.l.wrap.b32 	%r1269, %r1263, %r1262, 23;
	mov.b64 	%rd1822, {%r1269, %r1268};
	xor.b64  	%rd1823, %rd1821, %rd1822;
	xor.b64  	%rd1824, %rd1783, %rd1551;
	and.b64  	%rd1825, %rd1807, %rd1824;
	xor.b64  	%rd1826, %rd1825, %rd1551;
	add.s64 	%rd1827, %rd1601, %rd1527;
	add.s64 	%rd1828, %rd1827, %rd2685;
	add.s64 	%rd1829, %rd1828, %rd1826;
	add.s64 	%rd1830, %rd1829, %rd1823;
	add.s64 	%rd1831, %rd1830, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1270,%dummy}, %rd1818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1271}, %rd1818;
	}
	shf.r.wrap.b32 	%r1272, %r1271, %r1270, 28;
	shf.r.wrap.b32 	%r1273, %r1270, %r1271, 28;
	mov.b64 	%rd1832, {%r1273, %r1272};
	shf.l.wrap.b32 	%r1274, %r1270, %r1271, 30;
	shf.l.wrap.b32 	%r1275, %r1271, %r1270, 30;
	mov.b64 	%rd1833, {%r1275, %r1274};
	xor.b64  	%rd1834, %rd1833, %rd1832;
	shf.l.wrap.b32 	%r1276, %r1270, %r1271, 25;
	shf.l.wrap.b32 	%r1277, %r1271, %r1270, 25;
	mov.b64 	%rd1835, {%r1277, %r1276};
	xor.b64  	%rd1836, %rd1834, %rd1835;
	xor.b64  	%rd1837, %rd1818, %rd1562;
	xor.b64  	%rd1838, %rd1818, %rd1794;
	and.b64  	%rd1839, %rd1838, %rd1837;
	xor.b64  	%rd1840, %rd1839, %rd1818;
	add.s64 	%rd1841, %rd1830, %rd1840;
	add.s64 	%rd1842, %rd1841, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd1831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1279}, %rd1831;
	}
	shf.r.wrap.b32 	%r1280, %r1279, %r1278, 14;
	shf.r.wrap.b32 	%r1281, %r1278, %r1279, 14;
	mov.b64 	%rd1843, {%r1281, %r1280};
	shf.r.wrap.b32 	%r1282, %r1279, %r1278, 18;
	shf.r.wrap.b32 	%r1283, %r1278, %r1279, 18;
	mov.b64 	%rd1844, {%r1283, %r1282};
	xor.b64  	%rd1845, %rd1844, %rd1843;
	shf.l.wrap.b32 	%r1284, %r1278, %r1279, 23;
	shf.l.wrap.b32 	%r1285, %r1279, %r1278, 23;
	mov.b64 	%rd1846, {%r1285, %r1284};
	xor.b64  	%rd1847, %rd1845, %rd1846;
	xor.b64  	%rd1848, %rd1807, %rd1783;
	and.b64  	%rd1849, %rd1831, %rd1848;
	xor.b64  	%rd1850, %rd1849, %rd1783;
	add.s64 	%rd1851, %rd1614, %rd1551;
	add.s64 	%rd1852, %rd1851, %rd2686;
	add.s64 	%rd1853, %rd1852, %rd1850;
	add.s64 	%rd1854, %rd1853, %rd1847;
	add.s64 	%rd1855, %rd1854, %rd1562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1286,%dummy}, %rd1842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1287}, %rd1842;
	}
	shf.r.wrap.b32 	%r1288, %r1287, %r1286, 28;
	shf.r.wrap.b32 	%r1289, %r1286, %r1287, 28;
	mov.b64 	%rd1856, {%r1289, %r1288};
	shf.l.wrap.b32 	%r1290, %r1286, %r1287, 30;
	shf.l.wrap.b32 	%r1291, %r1287, %r1286, 30;
	mov.b64 	%rd1857, {%r1291, %r1290};
	xor.b64  	%rd1858, %rd1857, %rd1856;
	shf.l.wrap.b32 	%r1292, %r1286, %r1287, 25;
	shf.l.wrap.b32 	%r1293, %r1287, %r1286, 25;
	mov.b64 	%rd1859, {%r1293, %r1292};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	xor.b64  	%rd1861, %rd1842, %rd1794;
	xor.b64  	%rd1862, %rd1842, %rd1818;
	and.b64  	%rd1863, %rd1862, %rd1861;
	xor.b64  	%rd1864, %rd1863, %rd1842;
	add.s64 	%rd1865, %rd1854, %rd1864;
	add.s64 	%rd1866, %rd1865, %rd1860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1294,%dummy}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1295}, %rd1855;
	}
	shf.r.wrap.b32 	%r1296, %r1295, %r1294, 14;
	shf.r.wrap.b32 	%r1297, %r1294, %r1295, 14;
	mov.b64 	%rd1867, {%r1297, %r1296};
	shf.r.wrap.b32 	%r1298, %r1295, %r1294, 18;
	shf.r.wrap.b32 	%r1299, %r1294, %r1295, 18;
	mov.b64 	%rd1868, {%r1299, %r1298};
	xor.b64  	%rd1869, %rd1868, %rd1867;
	shf.l.wrap.b32 	%r1300, %r1294, %r1295, 23;
	shf.l.wrap.b32 	%r1301, %r1295, %r1294, 23;
	mov.b64 	%rd1870, {%r1301, %r1300};
	xor.b64  	%rd1871, %rd1869, %rd1870;
	xor.b64  	%rd1872, %rd1831, %rd1807;
	and.b64  	%rd1873, %rd1855, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1807;
	add.s64 	%rd1875, %rd1783, %rd1627;
	add.s64 	%rd1876, %rd1875, %rd2687;
	add.s64 	%rd1877, %rd1876, %rd1874;
	add.s64 	%rd1878, %rd1877, %rd1871;
	add.s64 	%rd1879, %rd1878, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1302,%dummy}, %rd1866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1303}, %rd1866;
	}
	shf.r.wrap.b32 	%r1304, %r1303, %r1302, 28;
	shf.r.wrap.b32 	%r1305, %r1302, %r1303, 28;
	mov.b64 	%rd1880, {%r1305, %r1304};
	shf.l.wrap.b32 	%r1306, %r1302, %r1303, 30;
	shf.l.wrap.b32 	%r1307, %r1303, %r1302, 30;
	mov.b64 	%rd1881, {%r1307, %r1306};
	xor.b64  	%rd1882, %rd1881, %rd1880;
	shf.l.wrap.b32 	%r1308, %r1302, %r1303, 25;
	shf.l.wrap.b32 	%r1309, %r1303, %r1302, 25;
	mov.b64 	%rd1883, {%r1309, %r1308};
	xor.b64  	%rd1884, %rd1882, %rd1883;
	xor.b64  	%rd1885, %rd1866, %rd1818;
	xor.b64  	%rd1886, %rd1866, %rd1842;
	and.b64  	%rd1887, %rd1886, %rd1885;
	xor.b64  	%rd1888, %rd1887, %rd1866;
	add.s64 	%rd1889, %rd1878, %rd1888;
	add.s64 	%rd1890, %rd1889, %rd1884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd1879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1311}, %rd1879;
	}
	shf.r.wrap.b32 	%r1312, %r1311, %r1310, 14;
	shf.r.wrap.b32 	%r1313, %r1310, %r1311, 14;
	mov.b64 	%rd1891, {%r1313, %r1312};
	shf.r.wrap.b32 	%r1314, %r1311, %r1310, 18;
	shf.r.wrap.b32 	%r1315, %r1310, %r1311, 18;
	mov.b64 	%rd1892, {%r1315, %r1314};
	xor.b64  	%rd1893, %rd1892, %rd1891;
	shf.l.wrap.b32 	%r1316, %r1310, %r1311, 23;
	shf.l.wrap.b32 	%r1317, %r1311, %r1310, 23;
	mov.b64 	%rd1894, {%r1317, %r1316};
	xor.b64  	%rd1895, %rd1893, %rd1894;
	xor.b64  	%rd1896, %rd1855, %rd1831;
	and.b64  	%rd1897, %rd1879, %rd1896;
	xor.b64  	%rd1898, %rd1897, %rd1831;
	add.s64 	%rd1899, %rd1807, %rd1640;
	add.s64 	%rd1900, %rd1899, %rd2688;
	add.s64 	%rd1901, %rd1900, %rd1898;
	add.s64 	%rd1902, %rd1901, %rd1895;
	add.s64 	%rd1903, %rd1902, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd1890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd1890;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 28;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 28;
	mov.b64 	%rd1904, {%r1321, %r1320};
	shf.l.wrap.b32 	%r1322, %r1318, %r1319, 30;
	shf.l.wrap.b32 	%r1323, %r1319, %r1318, 30;
	mov.b64 	%rd1905, {%r1323, %r1322};
	xor.b64  	%rd1906, %rd1905, %rd1904;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 25;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 25;
	mov.b64 	%rd1907, {%r1325, %r1324};
	xor.b64  	%rd1908, %rd1906, %rd1907;
	xor.b64  	%rd1909, %rd1890, %rd1842;
	xor.b64  	%rd1910, %rd1890, %rd1866;
	and.b64  	%rd1911, %rd1910, %rd1909;
	xor.b64  	%rd1912, %rd1911, %rd1890;
	add.s64 	%rd1913, %rd1902, %rd1912;
	add.s64 	%rd1914, %rd1913, %rd1908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd1903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd1903;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 14;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 14;
	mov.b64 	%rd1915, {%r1329, %r1328};
	shf.r.wrap.b32 	%r1330, %r1327, %r1326, 18;
	shf.r.wrap.b32 	%r1331, %r1326, %r1327, 18;
	mov.b64 	%rd1916, {%r1331, %r1330};
	xor.b64  	%rd1917, %rd1916, %rd1915;
	shf.l.wrap.b32 	%r1332, %r1326, %r1327, 23;
	shf.l.wrap.b32 	%r1333, %r1327, %r1326, 23;
	mov.b64 	%rd1918, {%r1333, %r1332};
	xor.b64  	%rd1919, %rd1917, %rd1918;
	xor.b64  	%rd1920, %rd1879, %rd1855;
	and.b64  	%rd1921, %rd1903, %rd1920;
	xor.b64  	%rd1922, %rd1921, %rd1855;
	add.s64 	%rd1923, %rd1831, %rd1653;
	add.s64 	%rd1924, %rd1923, %rd2689;
	add.s64 	%rd1925, %rd1924, %rd1922;
	add.s64 	%rd1926, %rd1925, %rd1919;
	add.s64 	%rd1927, %rd1926, %rd1842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd1914;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 28;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 28;
	mov.b64 	%rd1928, {%r1337, %r1336};
	shf.l.wrap.b32 	%r1338, %r1334, %r1335, 30;
	shf.l.wrap.b32 	%r1339, %r1335, %r1334, 30;
	mov.b64 	%rd1929, {%r1339, %r1338};
	xor.b64  	%rd1930, %rd1929, %rd1928;
	shf.l.wrap.b32 	%r1340, %r1334, %r1335, 25;
	shf.l.wrap.b32 	%r1341, %r1335, %r1334, 25;
	mov.b64 	%rd1931, {%r1341, %r1340};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	xor.b64  	%rd1933, %rd1914, %rd1866;
	xor.b64  	%rd1934, %rd1914, %rd1890;
	and.b64  	%rd1935, %rd1934, %rd1933;
	xor.b64  	%rd1936, %rd1935, %rd1914;
	add.s64 	%rd1937, %rd1926, %rd1936;
	add.s64 	%rd1938, %rd1937, %rd1932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd1927;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 14;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 14;
	mov.b64 	%rd1939, {%r1345, %r1344};
	shf.r.wrap.b32 	%r1346, %r1343, %r1342, 18;
	shf.r.wrap.b32 	%r1347, %r1342, %r1343, 18;
	mov.b64 	%rd1940, {%r1347, %r1346};
	xor.b64  	%rd1941, %rd1940, %rd1939;
	shf.l.wrap.b32 	%r1348, %r1342, %r1343, 23;
	shf.l.wrap.b32 	%r1349, %r1343, %r1342, 23;
	mov.b64 	%rd1942, {%r1349, %r1348};
	xor.b64  	%rd1943, %rd1941, %rd1942;
	xor.b64  	%rd1944, %rd1903, %rd1879;
	and.b64  	%rd1945, %rd1927, %rd1944;
	xor.b64  	%rd1946, %rd1945, %rd1879;
	add.s64 	%rd1947, %rd1855, %rd1666;
	add.s64 	%rd1948, %rd1947, %rd2690;
	add.s64 	%rd1949, %rd1948, %rd1946;
	add.s64 	%rd1950, %rd1949, %rd1943;
	add.s64 	%rd1951, %rd1950, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd1938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1351}, %rd1938;
	}
	shf.r.wrap.b32 	%r1352, %r1351, %r1350, 28;
	shf.r.wrap.b32 	%r1353, %r1350, %r1351, 28;
	mov.b64 	%rd1952, {%r1353, %r1352};
	shf.l.wrap.b32 	%r1354, %r1350, %r1351, 30;
	shf.l.wrap.b32 	%r1355, %r1351, %r1350, 30;
	mov.b64 	%rd1953, {%r1355, %r1354};
	xor.b64  	%rd1954, %rd1953, %rd1952;
	shf.l.wrap.b32 	%r1356, %r1350, %r1351, 25;
	shf.l.wrap.b32 	%r1357, %r1351, %r1350, 25;
	mov.b64 	%rd1955, {%r1357, %r1356};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	xor.b64  	%rd1957, %rd1938, %rd1890;
	xor.b64  	%rd1958, %rd1938, %rd1914;
	and.b64  	%rd1959, %rd1958, %rd1957;
	xor.b64  	%rd1960, %rd1959, %rd1938;
	add.s64 	%rd1961, %rd1950, %rd1960;
	add.s64 	%rd1962, %rd1961, %rd1956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd1951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd1951;
	}
	shf.r.wrap.b32 	%r1360, %r1359, %r1358, 14;
	shf.r.wrap.b32 	%r1361, %r1358, %r1359, 14;
	mov.b64 	%rd1963, {%r1361, %r1360};
	shf.r.wrap.b32 	%r1362, %r1359, %r1358, 18;
	shf.r.wrap.b32 	%r1363, %r1358, %r1359, 18;
	mov.b64 	%rd1964, {%r1363, %r1362};
	xor.b64  	%rd1965, %rd1964, %rd1963;
	shf.l.wrap.b32 	%r1364, %r1358, %r1359, 23;
	shf.l.wrap.b32 	%r1365, %r1359, %r1358, 23;
	mov.b64 	%rd1966, {%r1365, %r1364};
	xor.b64  	%rd1967, %rd1965, %rd1966;
	xor.b64  	%rd1968, %rd1927, %rd1903;
	and.b64  	%rd1969, %rd1951, %rd1968;
	xor.b64  	%rd1970, %rd1969, %rd1903;
	add.s64 	%rd1971, %rd1879, %rd1679;
	add.s64 	%rd1972, %rd1971, %rd2691;
	add.s64 	%rd1973, %rd1972, %rd1970;
	add.s64 	%rd1974, %rd1973, %rd1967;
	add.s64 	%rd1975, %rd1974, %rd1890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd1962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1367}, %rd1962;
	}
	shf.r.wrap.b32 	%r1368, %r1367, %r1366, 28;
	shf.r.wrap.b32 	%r1369, %r1366, %r1367, 28;
	mov.b64 	%rd1976, {%r1369, %r1368};
	shf.l.wrap.b32 	%r1370, %r1366, %r1367, 30;
	shf.l.wrap.b32 	%r1371, %r1367, %r1366, 30;
	mov.b64 	%rd1977, {%r1371, %r1370};
	xor.b64  	%rd1978, %rd1977, %rd1976;
	shf.l.wrap.b32 	%r1372, %r1366, %r1367, 25;
	shf.l.wrap.b32 	%r1373, %r1367, %r1366, 25;
	mov.b64 	%rd1979, {%r1373, %r1372};
	xor.b64  	%rd1980, %rd1978, %rd1979;
	xor.b64  	%rd1981, %rd1962, %rd1914;
	xor.b64  	%rd1982, %rd1962, %rd1938;
	and.b64  	%rd1983, %rd1982, %rd1981;
	xor.b64  	%rd1984, %rd1983, %rd1962;
	add.s64 	%rd1985, %rd1974, %rd1984;
	add.s64 	%rd1986, %rd1985, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1374,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1375}, %rd1975;
	}
	shf.r.wrap.b32 	%r1376, %r1375, %r1374, 14;
	shf.r.wrap.b32 	%r1377, %r1374, %r1375, 14;
	mov.b64 	%rd1987, {%r1377, %r1376};
	shf.r.wrap.b32 	%r1378, %r1375, %r1374, 18;
	shf.r.wrap.b32 	%r1379, %r1374, %r1375, 18;
	mov.b64 	%rd1988, {%r1379, %r1378};
	xor.b64  	%rd1989, %rd1988, %rd1987;
	shf.l.wrap.b32 	%r1380, %r1374, %r1375, 23;
	shf.l.wrap.b32 	%r1381, %r1375, %r1374, 23;
	mov.b64 	%rd1990, {%r1381, %r1380};
	xor.b64  	%rd1991, %rd1989, %rd1990;
	xor.b64  	%rd1992, %rd1951, %rd1927;
	and.b64  	%rd1993, %rd1975, %rd1992;
	xor.b64  	%rd1994, %rd1993, %rd1927;
	add.s64 	%rd1995, %rd1903, %rd1692;
	add.s64 	%rd1996, %rd1995, %rd2692;
	add.s64 	%rd1997, %rd1996, %rd1994;
	add.s64 	%rd1998, %rd1997, %rd1991;
	add.s64 	%rd1999, %rd1998, %rd1914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd1986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1383}, %rd1986;
	}
	shf.r.wrap.b32 	%r1384, %r1383, %r1382, 28;
	shf.r.wrap.b32 	%r1385, %r1382, %r1383, 28;
	mov.b64 	%rd2000, {%r1385, %r1384};
	shf.l.wrap.b32 	%r1386, %r1382, %r1383, 30;
	shf.l.wrap.b32 	%r1387, %r1383, %r1382, 30;
	mov.b64 	%rd2001, {%r1387, %r1386};
	xor.b64  	%rd2002, %rd2001, %rd2000;
	shf.l.wrap.b32 	%r1388, %r1382, %r1383, 25;
	shf.l.wrap.b32 	%r1389, %r1383, %r1382, 25;
	mov.b64 	%rd2003, {%r1389, %r1388};
	xor.b64  	%rd2004, %rd2002, %rd2003;
	xor.b64  	%rd2005, %rd1986, %rd1938;
	xor.b64  	%rd2006, %rd1986, %rd1962;
	and.b64  	%rd2007, %rd2006, %rd2005;
	xor.b64  	%rd2008, %rd2007, %rd1986;
	add.s64 	%rd2009, %rd1998, %rd2008;
	add.s64 	%rd2010, %rd2009, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd1999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd1999;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 14;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 14;
	mov.b64 	%rd2011, {%r1393, %r1392};
	shf.r.wrap.b32 	%r1394, %r1391, %r1390, 18;
	shf.r.wrap.b32 	%r1395, %r1390, %r1391, 18;
	mov.b64 	%rd2012, {%r1395, %r1394};
	xor.b64  	%rd2013, %rd2012, %rd2011;
	shf.l.wrap.b32 	%r1396, %r1390, %r1391, 23;
	shf.l.wrap.b32 	%r1397, %r1391, %r1390, 23;
	mov.b64 	%rd2014, {%r1397, %r1396};
	xor.b64  	%rd2015, %rd2013, %rd2014;
	xor.b64  	%rd2016, %rd1975, %rd1951;
	and.b64  	%rd2017, %rd1999, %rd2016;
	xor.b64  	%rd2018, %rd2017, %rd1951;
	add.s64 	%rd2019, %rd1927, %rd1705;
	add.s64 	%rd2020, %rd2019, %rd2693;
	add.s64 	%rd2021, %rd2020, %rd2018;
	add.s64 	%rd2022, %rd2021, %rd2015;
	add.s64 	%rd2023, %rd2022, %rd1938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd2010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1399}, %rd2010;
	}
	shf.r.wrap.b32 	%r1400, %r1399, %r1398, 28;
	shf.r.wrap.b32 	%r1401, %r1398, %r1399, 28;
	mov.b64 	%rd2024, {%r1401, %r1400};
	shf.l.wrap.b32 	%r1402, %r1398, %r1399, 30;
	shf.l.wrap.b32 	%r1403, %r1399, %r1398, 30;
	mov.b64 	%rd2025, {%r1403, %r1402};
	xor.b64  	%rd2026, %rd2025, %rd2024;
	shf.l.wrap.b32 	%r1404, %r1398, %r1399, 25;
	shf.l.wrap.b32 	%r1405, %r1399, %r1398, 25;
	mov.b64 	%rd2027, {%r1405, %r1404};
	xor.b64  	%rd2028, %rd2026, %rd2027;
	xor.b64  	%rd2029, %rd2010, %rd1962;
	xor.b64  	%rd2030, %rd2010, %rd1986;
	and.b64  	%rd2031, %rd2030, %rd2029;
	xor.b64  	%rd2032, %rd2031, %rd2010;
	add.s64 	%rd2033, %rd2022, %rd2032;
	add.s64 	%rd2034, %rd2033, %rd2028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd2023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd2023;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 14;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 14;
	mov.b64 	%rd2035, {%r1409, %r1408};
	shf.r.wrap.b32 	%r1410, %r1407, %r1406, 18;
	shf.r.wrap.b32 	%r1411, %r1406, %r1407, 18;
	mov.b64 	%rd2036, {%r1411, %r1410};
	xor.b64  	%rd2037, %rd2036, %rd2035;
	shf.l.wrap.b32 	%r1412, %r1406, %r1407, 23;
	shf.l.wrap.b32 	%r1413, %r1407, %r1406, 23;
	mov.b64 	%rd2038, {%r1413, %r1412};
	xor.b64  	%rd2039, %rd2037, %rd2038;
	xor.b64  	%rd2040, %rd1999, %rd1975;
	and.b64  	%rd2041, %rd2023, %rd2040;
	xor.b64  	%rd2042, %rd2041, %rd1975;
	add.s64 	%rd2043, %rd1951, %rd1718;
	add.s64 	%rd2044, %rd2043, %rd2694;
	add.s64 	%rd2045, %rd2044, %rd2042;
	add.s64 	%rd2046, %rd2045, %rd2039;
	add.s64 	%rd2047, %rd2046, %rd1962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd2034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd2034;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 28;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 28;
	mov.b64 	%rd2048, {%r1417, %r1416};
	shf.l.wrap.b32 	%r1418, %r1414, %r1415, 30;
	shf.l.wrap.b32 	%r1419, %r1415, %r1414, 30;
	mov.b64 	%rd2049, {%r1419, %r1418};
	xor.b64  	%rd2050, %rd2049, %rd2048;
	shf.l.wrap.b32 	%r1420, %r1414, %r1415, 25;
	shf.l.wrap.b32 	%r1421, %r1415, %r1414, 25;
	mov.b64 	%rd2051, {%r1421, %r1420};
	xor.b64  	%rd2052, %rd2050, %rd2051;
	xor.b64  	%rd2053, %rd2034, %rd1986;
	xor.b64  	%rd2054, %rd2034, %rd2010;
	and.b64  	%rd2055, %rd2054, %rd2053;
	xor.b64  	%rd2056, %rd2055, %rd2034;
	add.s64 	%rd2057, %rd2046, %rd2056;
	add.s64 	%rd2058, %rd2057, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd2047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd2047;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 14;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 14;
	mov.b64 	%rd2059, {%r1425, %r1424};
	shf.r.wrap.b32 	%r1426, %r1423, %r1422, 18;
	shf.r.wrap.b32 	%r1427, %r1422, %r1423, 18;
	mov.b64 	%rd2060, {%r1427, %r1426};
	xor.b64  	%rd2061, %rd2060, %rd2059;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 23;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 23;
	mov.b64 	%rd2062, {%r1429, %r1428};
	xor.b64  	%rd2063, %rd2061, %rd2062;
	xor.b64  	%rd2064, %rd2023, %rd1999;
	and.b64  	%rd2065, %rd2047, %rd2064;
	xor.b64  	%rd2066, %rd2065, %rd1999;
	add.s64 	%rd2067, %rd1975, %rd1731;
	add.s64 	%rd2068, %rd2067, %rd2695;
	add.s64 	%rd2069, %rd2068, %rd2066;
	add.s64 	%rd2070, %rd2069, %rd2063;
	add.s64 	%rd2071, %rd2070, %rd1986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd2058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd2058;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 28;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 28;
	mov.b64 	%rd2072, {%r1433, %r1432};
	shf.l.wrap.b32 	%r1434, %r1430, %r1431, 30;
	shf.l.wrap.b32 	%r1435, %r1431, %r1430, 30;
	mov.b64 	%rd2073, {%r1435, %r1434};
	xor.b64  	%rd2074, %rd2073, %rd2072;
	shf.l.wrap.b32 	%r1436, %r1430, %r1431, 25;
	shf.l.wrap.b32 	%r1437, %r1431, %r1430, 25;
	mov.b64 	%rd2075, {%r1437, %r1436};
	xor.b64  	%rd2076, %rd2074, %rd2075;
	xor.b64  	%rd2077, %rd2058, %rd2010;
	xor.b64  	%rd2078, %rd2058, %rd2034;
	and.b64  	%rd2079, %rd2078, %rd2077;
	xor.b64  	%rd2080, %rd2079, %rd2058;
	add.s64 	%rd2081, %rd2070, %rd2080;
	add.s64 	%rd2082, %rd2081, %rd2076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd2071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd2071;
	}
	shf.r.wrap.b32 	%r1440, %r1439, %r1438, 14;
	shf.r.wrap.b32 	%r1441, %r1438, %r1439, 14;
	mov.b64 	%rd2083, {%r1441, %r1440};
	shf.r.wrap.b32 	%r1442, %r1439, %r1438, 18;
	shf.r.wrap.b32 	%r1443, %r1438, %r1439, 18;
	mov.b64 	%rd2084, {%r1443, %r1442};
	xor.b64  	%rd2085, %rd2084, %rd2083;
	shf.l.wrap.b32 	%r1444, %r1438, %r1439, 23;
	shf.l.wrap.b32 	%r1445, %r1439, %r1438, 23;
	mov.b64 	%rd2086, {%r1445, %r1444};
	xor.b64  	%rd2087, %rd2085, %rd2086;
	xor.b64  	%rd2088, %rd2047, %rd2023;
	and.b64  	%rd2089, %rd2071, %rd2088;
	xor.b64  	%rd2090, %rd2089, %rd2023;
	add.s64 	%rd2091, %rd1999, %rd1744;
	add.s64 	%rd2092, %rd2091, %rd2696;
	add.s64 	%rd2093, %rd2092, %rd2090;
	add.s64 	%rd2094, %rd2093, %rd2087;
	add.s64 	%rd2095, %rd2094, %rd2010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1446,%dummy}, %rd2082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1447}, %rd2082;
	}
	shf.r.wrap.b32 	%r1448, %r1447, %r1446, 28;
	shf.r.wrap.b32 	%r1449, %r1446, %r1447, 28;
	mov.b64 	%rd2096, {%r1449, %r1448};
	shf.l.wrap.b32 	%r1450, %r1446, %r1447, 30;
	shf.l.wrap.b32 	%r1451, %r1447, %r1446, 30;
	mov.b64 	%rd2097, {%r1451, %r1450};
	xor.b64  	%rd2098, %rd2097, %rd2096;
	shf.l.wrap.b32 	%r1452, %r1446, %r1447, 25;
	shf.l.wrap.b32 	%r1453, %r1447, %r1446, 25;
	mov.b64 	%rd2099, {%r1453, %r1452};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	xor.b64  	%rd2101, %rd2082, %rd2034;
	xor.b64  	%rd2102, %rd2082, %rd2058;
	and.b64  	%rd2103, %rd2102, %rd2101;
	xor.b64  	%rd2104, %rd2103, %rd2082;
	add.s64 	%rd2105, %rd2094, %rd2104;
	add.s64 	%rd2106, %rd2105, %rd2100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd2095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd2095;
	}
	shf.r.wrap.b32 	%r1456, %r1455, %r1454, 14;
	shf.r.wrap.b32 	%r1457, %r1454, %r1455, 14;
	mov.b64 	%rd2107, {%r1457, %r1456};
	shf.r.wrap.b32 	%r1458, %r1455, %r1454, 18;
	shf.r.wrap.b32 	%r1459, %r1454, %r1455, 18;
	mov.b64 	%rd2108, {%r1459, %r1458};
	xor.b64  	%rd2109, %rd2108, %rd2107;
	shf.l.wrap.b32 	%r1460, %r1454, %r1455, 23;
	shf.l.wrap.b32 	%r1461, %r1455, %r1454, 23;
	mov.b64 	%rd2110, {%r1461, %r1460};
	xor.b64  	%rd2111, %rd2109, %rd2110;
	xor.b64  	%rd2112, %rd2071, %rd2047;
	and.b64  	%rd2113, %rd2095, %rd2112;
	xor.b64  	%rd2114, %rd2113, %rd2047;
	add.s64 	%rd2115, %rd2023, %rd1757;
	add.s64 	%rd2116, %rd2115, %rd2697;
	add.s64 	%rd2117, %rd2116, %rd2114;
	add.s64 	%rd2118, %rd2117, %rd2111;
	add.s64 	%rd2119, %rd2118, %rd2034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd2106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd2106;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 28;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 28;
	mov.b64 	%rd2120, {%r1465, %r1464};
	shf.l.wrap.b32 	%r1466, %r1462, %r1463, 30;
	shf.l.wrap.b32 	%r1467, %r1463, %r1462, 30;
	mov.b64 	%rd2121, {%r1467, %r1466};
	xor.b64  	%rd2122, %rd2121, %rd2120;
	shf.l.wrap.b32 	%r1468, %r1462, %r1463, 25;
	shf.l.wrap.b32 	%r1469, %r1463, %r1462, 25;
	mov.b64 	%rd2123, {%r1469, %r1468};
	xor.b64  	%rd2124, %rd2122, %rd2123;
	xor.b64  	%rd2125, %rd2106, %rd2058;
	xor.b64  	%rd2126, %rd2106, %rd2082;
	and.b64  	%rd2127, %rd2126, %rd2125;
	xor.b64  	%rd2128, %rd2127, %rd2106;
	add.s64 	%rd2129, %rd2118, %rd2128;
	add.s64 	%rd2130, %rd2129, %rd2124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd2119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1471}, %rd2119;
	}
	shf.r.wrap.b32 	%r1472, %r1471, %r1470, 14;
	shf.r.wrap.b32 	%r1473, %r1470, %r1471, 14;
	mov.b64 	%rd2131, {%r1473, %r1472};
	shf.r.wrap.b32 	%r1474, %r1471, %r1470, 18;
	shf.r.wrap.b32 	%r1475, %r1470, %r1471, 18;
	mov.b64 	%rd2132, {%r1475, %r1474};
	xor.b64  	%rd2133, %rd2132, %rd2131;
	shf.l.wrap.b32 	%r1476, %r1470, %r1471, 23;
	shf.l.wrap.b32 	%r1477, %r1471, %r1470, 23;
	mov.b64 	%rd2134, {%r1477, %r1476};
	xor.b64  	%rd2135, %rd2133, %rd2134;
	xor.b64  	%rd2136, %rd2095, %rd2071;
	and.b64  	%rd2137, %rd2119, %rd2136;
	xor.b64  	%rd2138, %rd2137, %rd2071;
	add.s64 	%rd2139, %rd2047, %rd1770;
	add.s64 	%rd2140, %rd2139, %rd2698;
	add.s64 	%rd2141, %rd2140, %rd2138;
	add.s64 	%rd2142, %rd2141, %rd2135;
	add.s64 	%rd2143, %rd2142, %rd2058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1478,%dummy}, %rd2130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1479}, %rd2130;
	}
	shf.r.wrap.b32 	%r1480, %r1479, %r1478, 28;
	shf.r.wrap.b32 	%r1481, %r1478, %r1479, 28;
	mov.b64 	%rd2144, {%r1481, %r1480};
	shf.l.wrap.b32 	%r1482, %r1478, %r1479, 30;
	shf.l.wrap.b32 	%r1483, %r1479, %r1478, 30;
	mov.b64 	%rd2145, {%r1483, %r1482};
	xor.b64  	%rd2146, %rd2145, %rd2144;
	shf.l.wrap.b32 	%r1484, %r1478, %r1479, 25;
	shf.l.wrap.b32 	%r1485, %r1479, %r1478, 25;
	mov.b64 	%rd2147, {%r1485, %r1484};
	xor.b64  	%rd2148, %rd2146, %rd2147;
	xor.b64  	%rd2149, %rd2130, %rd2082;
	xor.b64  	%rd2150, %rd2130, %rd2106;
	and.b64  	%rd2151, %rd2150, %rd2149;
	xor.b64  	%rd2152, %rd2151, %rd2130;
	add.s64 	%rd2153, %rd2142, %rd2152;
	add.s64 	%rd2154, %rd2153, %rd2148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd1757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1487}, %rd1757;
	}
	shf.r.wrap.b32 	%r1488, %r1487, %r1486, 19;
	shf.r.wrap.b32 	%r1489, %r1486, %r1487, 19;
	mov.b64 	%rd2155, {%r1489, %r1488};
	shf.l.wrap.b32 	%r1490, %r1486, %r1487, 3;
	shf.l.wrap.b32 	%r1491, %r1487, %r1486, 3;
	mov.b64 	%rd2156, {%r1491, %r1490};
	shr.u64 	%rd2157, %rd1757, 6;
	xor.b64  	%rd2158, %rd2155, %rd2157;
	xor.b64  	%rd2159, %rd2158, %rd2156;
	shf.r.wrap.b32 	%r1492, %r1101, %r1100, 1;
	shf.r.wrap.b32 	%r1493, %r1100, %r1101, 1;
	mov.b64 	%rd2160, {%r1493, %r1492};
	shf.r.wrap.b32 	%r1494, %r1101, %r1100, 8;
	shf.r.wrap.b32 	%r1495, %r1100, %r1101, 8;
	mov.b64 	%rd2161, {%r1495, %r1494};
	shr.u64 	%rd2162, %rd1588, 7;
	xor.b64  	%rd2163, %rd2160, %rd2162;
	xor.b64  	%rd2164, %rd2163, %rd2161;
	add.s64 	%rd2165, %rd1575, %rd1692;
	add.s64 	%rd2166, %rd2165, %rd2159;
	add.s64 	%rd2167, %rd2166, %rd2164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1496,%dummy}, %rd1770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1497}, %rd1770;
	}
	shf.r.wrap.b32 	%r1498, %r1497, %r1496, 19;
	shf.r.wrap.b32 	%r1499, %r1496, %r1497, 19;
	mov.b64 	%rd2168, {%r1499, %r1498};
	shf.l.wrap.b32 	%r1500, %r1496, %r1497, 3;
	shf.l.wrap.b32 	%r1501, %r1497, %r1496, 3;
	mov.b64 	%rd2169, {%r1501, %r1500};
	shr.u64 	%rd2170, %rd1770, 6;
	xor.b64  	%rd2171, %rd2168, %rd2170;
	xor.b64  	%rd2172, %rd2171, %rd2169;
	shf.r.wrap.b32 	%r1502, %r1111, %r1110, 1;
	shf.r.wrap.b32 	%r1503, %r1110, %r1111, 1;
	mov.b64 	%rd2173, {%r1503, %r1502};
	shf.r.wrap.b32 	%r1504, %r1111, %r1110, 8;
	shf.r.wrap.b32 	%r1505, %r1110, %r1111, 8;
	mov.b64 	%rd2174, {%r1505, %r1504};
	shr.u64 	%rd2175, %rd1601, 7;
	xor.b64  	%rd2176, %rd2173, %rd2175;
	xor.b64  	%rd2177, %rd2176, %rd2174;
	add.s64 	%rd2178, %rd1588, %rd1705;
	add.s64 	%rd2179, %rd2178, %rd2172;
	add.s64 	%rd2180, %rd2179, %rd2177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1506,%dummy}, %rd2167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1507}, %rd2167;
	}
	shf.r.wrap.b32 	%r1508, %r1507, %r1506, 19;
	shf.r.wrap.b32 	%r1509, %r1506, %r1507, 19;
	mov.b64 	%rd2181, {%r1509, %r1508};
	shf.l.wrap.b32 	%r1510, %r1506, %r1507, 3;
	shf.l.wrap.b32 	%r1511, %r1507, %r1506, 3;
	mov.b64 	%rd2182, {%r1511, %r1510};
	shr.u64 	%rd2183, %rd2167, 6;
	xor.b64  	%rd2184, %rd2181, %rd2183;
	xor.b64  	%rd2185, %rd2184, %rd2182;
	shf.r.wrap.b32 	%r1512, %r1121, %r1120, 1;
	shf.r.wrap.b32 	%r1513, %r1120, %r1121, 1;
	mov.b64 	%rd2186, {%r1513, %r1512};
	shf.r.wrap.b32 	%r1514, %r1121, %r1120, 8;
	shf.r.wrap.b32 	%r1515, %r1120, %r1121, 8;
	mov.b64 	%rd2187, {%r1515, %r1514};
	shr.u64 	%rd2188, %rd1614, 7;
	xor.b64  	%rd2189, %rd2186, %rd2188;
	xor.b64  	%rd2190, %rd2189, %rd2187;
	add.s64 	%rd2191, %rd1601, %rd1718;
	add.s64 	%rd2192, %rd2191, %rd2185;
	add.s64 	%rd2193, %rd2192, %rd2190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1516,%dummy}, %rd2180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1517}, %rd2180;
	}
	shf.r.wrap.b32 	%r1518, %r1517, %r1516, 19;
	shf.r.wrap.b32 	%r1519, %r1516, %r1517, 19;
	mov.b64 	%rd2194, {%r1519, %r1518};
	shf.l.wrap.b32 	%r1520, %r1516, %r1517, 3;
	shf.l.wrap.b32 	%r1521, %r1517, %r1516, 3;
	mov.b64 	%rd2195, {%r1521, %r1520};
	shr.u64 	%rd2196, %rd2180, 6;
	xor.b64  	%rd2197, %rd2194, %rd2196;
	xor.b64  	%rd2198, %rd2197, %rd2195;
	shf.r.wrap.b32 	%r1522, %r1131, %r1130, 1;
	shf.r.wrap.b32 	%r1523, %r1130, %r1131, 1;
	mov.b64 	%rd2199, {%r1523, %r1522};
	shf.r.wrap.b32 	%r1524, %r1131, %r1130, 8;
	shf.r.wrap.b32 	%r1525, %r1130, %r1131, 8;
	mov.b64 	%rd2200, {%r1525, %r1524};
	shr.u64 	%rd2201, %rd1627, 7;
	xor.b64  	%rd2202, %rd2199, %rd2201;
	xor.b64  	%rd2203, %rd2202, %rd2200;
	add.s64 	%rd2204, %rd1614, %rd1731;
	add.s64 	%rd2205, %rd2204, %rd2198;
	add.s64 	%rd2206, %rd2205, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1526,%dummy}, %rd2193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1527}, %rd2193;
	}
	shf.r.wrap.b32 	%r1528, %r1527, %r1526, 19;
	shf.r.wrap.b32 	%r1529, %r1526, %r1527, 19;
	mov.b64 	%rd2207, {%r1529, %r1528};
	shf.l.wrap.b32 	%r1530, %r1526, %r1527, 3;
	shf.l.wrap.b32 	%r1531, %r1527, %r1526, 3;
	mov.b64 	%rd2208, {%r1531, %r1530};
	shr.u64 	%rd2209, %rd2193, 6;
	xor.b64  	%rd2210, %rd2207, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2208;
	shf.r.wrap.b32 	%r1532, %r1141, %r1140, 1;
	shf.r.wrap.b32 	%r1533, %r1140, %r1141, 1;
	mov.b64 	%rd2212, {%r1533, %r1532};
	shf.r.wrap.b32 	%r1534, %r1141, %r1140, 8;
	shf.r.wrap.b32 	%r1535, %r1140, %r1141, 8;
	mov.b64 	%rd2213, {%r1535, %r1534};
	shr.u64 	%rd2214, %rd1640, 7;
	xor.b64  	%rd2215, %rd2212, %rd2214;
	xor.b64  	%rd2216, %rd2215, %rd2213;
	add.s64 	%rd2217, %rd1627, %rd1744;
	add.s64 	%rd2218, %rd2217, %rd2211;
	add.s64 	%rd2219, %rd2218, %rd2216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1536,%dummy}, %rd2206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1537}, %rd2206;
	}
	shf.r.wrap.b32 	%r1538, %r1537, %r1536, 19;
	shf.r.wrap.b32 	%r1539, %r1536, %r1537, 19;
	mov.b64 	%rd2220, {%r1539, %r1538};
	shf.l.wrap.b32 	%r1540, %r1536, %r1537, 3;
	shf.l.wrap.b32 	%r1541, %r1537, %r1536, 3;
	mov.b64 	%rd2221, {%r1541, %r1540};
	shr.u64 	%rd2222, %rd2206, 6;
	xor.b64  	%rd2223, %rd2220, %rd2222;
	xor.b64  	%rd2224, %rd2223, %rd2221;
	shf.r.wrap.b32 	%r1542, %r1151, %r1150, 1;
	shf.r.wrap.b32 	%r1543, %r1150, %r1151, 1;
	mov.b64 	%rd2225, {%r1543, %r1542};
	shf.r.wrap.b32 	%r1544, %r1151, %r1150, 8;
	shf.r.wrap.b32 	%r1545, %r1150, %r1151, 8;
	mov.b64 	%rd2226, {%r1545, %r1544};
	shr.u64 	%rd2227, %rd1653, 7;
	xor.b64  	%rd2228, %rd2225, %rd2227;
	xor.b64  	%rd2229, %rd2228, %rd2226;
	add.s64 	%rd2230, %rd1640, %rd1757;
	add.s64 	%rd2231, %rd2230, %rd2224;
	add.s64 	%rd2232, %rd2231, %rd2229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd2219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1547}, %rd2219;
	}
	shf.r.wrap.b32 	%r1548, %r1547, %r1546, 19;
	shf.r.wrap.b32 	%r1549, %r1546, %r1547, 19;
	mov.b64 	%rd2233, {%r1549, %r1548};
	shf.l.wrap.b32 	%r1550, %r1546, %r1547, 3;
	shf.l.wrap.b32 	%r1551, %r1547, %r1546, 3;
	mov.b64 	%rd2234, {%r1551, %r1550};
	shr.u64 	%rd2235, %rd2219, 6;
	xor.b64  	%rd2236, %rd2233, %rd2235;
	xor.b64  	%rd2237, %rd2236, %rd2234;
	shf.r.wrap.b32 	%r1552, %r1161, %r1160, 1;
	shf.r.wrap.b32 	%r1553, %r1160, %r1161, 1;
	mov.b64 	%rd2238, {%r1553, %r1552};
	shf.r.wrap.b32 	%r1554, %r1161, %r1160, 8;
	shf.r.wrap.b32 	%r1555, %r1160, %r1161, 8;
	mov.b64 	%rd2239, {%r1555, %r1554};
	shr.u64 	%rd2240, %rd1666, 7;
	xor.b64  	%rd2241, %rd2238, %rd2240;
	xor.b64  	%rd2242, %rd2241, %rd2239;
	add.s64 	%rd2243, %rd1653, %rd1770;
	add.s64 	%rd2244, %rd2243, %rd2237;
	add.s64 	%rd2245, %rd2244, %rd2242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1556,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1557}, %rd2232;
	}
	shf.r.wrap.b32 	%r1558, %r1557, %r1556, 19;
	shf.r.wrap.b32 	%r1559, %r1556, %r1557, 19;
	mov.b64 	%rd2246, {%r1559, %r1558};
	shf.l.wrap.b32 	%r1560, %r1556, %r1557, 3;
	shf.l.wrap.b32 	%r1561, %r1557, %r1556, 3;
	mov.b64 	%rd2247, {%r1561, %r1560};
	shr.u64 	%rd2248, %rd2232, 6;
	xor.b64  	%rd2249, %rd2246, %rd2248;
	xor.b64  	%rd2250, %rd2249, %rd2247;
	shf.r.wrap.b32 	%r1562, %r1171, %r1170, 1;
	shf.r.wrap.b32 	%r1563, %r1170, %r1171, 1;
	mov.b64 	%rd2251, {%r1563, %r1562};
	shf.r.wrap.b32 	%r1564, %r1171, %r1170, 8;
	shf.r.wrap.b32 	%r1565, %r1170, %r1171, 8;
	mov.b64 	%rd2252, {%r1565, %r1564};
	shr.u64 	%rd2253, %rd1679, 7;
	xor.b64  	%rd2254, %rd2251, %rd2253;
	xor.b64  	%rd2255, %rd2254, %rd2252;
	add.s64 	%rd2256, %rd2167, %rd1666;
	add.s64 	%rd2257, %rd2256, %rd2250;
	add.s64 	%rd2258, %rd2257, %rd2255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1566,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1567}, %rd2245;
	}
	shf.r.wrap.b32 	%r1568, %r1567, %r1566, 19;
	shf.r.wrap.b32 	%r1569, %r1566, %r1567, 19;
	mov.b64 	%rd2259, {%r1569, %r1568};
	shf.l.wrap.b32 	%r1570, %r1566, %r1567, 3;
	shf.l.wrap.b32 	%r1571, %r1567, %r1566, 3;
	mov.b64 	%rd2260, {%r1571, %r1570};
	shr.u64 	%rd2261, %rd2245, 6;
	xor.b64  	%rd2262, %rd2259, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd2260;
	shf.r.wrap.b32 	%r1572, %r1181, %r1180, 1;
	shf.r.wrap.b32 	%r1573, %r1180, %r1181, 1;
	mov.b64 	%rd2264, {%r1573, %r1572};
	shf.r.wrap.b32 	%r1574, %r1181, %r1180, 8;
	shf.r.wrap.b32 	%r1575, %r1180, %r1181, 8;
	mov.b64 	%rd2265, {%r1575, %r1574};
	shr.u64 	%rd2266, %rd1692, 7;
	xor.b64  	%rd2267, %rd2264, %rd2266;
	xor.b64  	%rd2268, %rd2267, %rd2265;
	add.s64 	%rd2269, %rd2180, %rd1679;
	add.s64 	%rd2270, %rd2269, %rd2263;
	add.s64 	%rd2271, %rd2270, %rd2268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1576,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1577}, %rd2258;
	}
	shf.r.wrap.b32 	%r1578, %r1577, %r1576, 19;
	shf.r.wrap.b32 	%r1579, %r1576, %r1577, 19;
	mov.b64 	%rd2272, {%r1579, %r1578};
	shf.l.wrap.b32 	%r1580, %r1576, %r1577, 3;
	shf.l.wrap.b32 	%r1581, %r1577, %r1576, 3;
	mov.b64 	%rd2273, {%r1581, %r1580};
	shr.u64 	%rd2274, %rd2258, 6;
	xor.b64  	%rd2275, %rd2272, %rd2274;
	xor.b64  	%rd2276, %rd2275, %rd2273;
	shf.r.wrap.b32 	%r1582, %r1191, %r1190, 1;
	shf.r.wrap.b32 	%r1583, %r1190, %r1191, 1;
	mov.b64 	%rd2277, {%r1583, %r1582};
	shf.r.wrap.b32 	%r1584, %r1191, %r1190, 8;
	shf.r.wrap.b32 	%r1585, %r1190, %r1191, 8;
	mov.b64 	%rd2278, {%r1585, %r1584};
	shr.u64 	%rd2279, %rd1705, 7;
	xor.b64  	%rd2280, %rd2277, %rd2279;
	xor.b64  	%rd2281, %rd2280, %rd2278;
	add.s64 	%rd2282, %rd2193, %rd1692;
	add.s64 	%rd2283, %rd2282, %rd2276;
	add.s64 	%rd2284, %rd2283, %rd2281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd2271;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 19;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 19;
	mov.b64 	%rd2285, {%r1589, %r1588};
	shf.l.wrap.b32 	%r1590, %r1586, %r1587, 3;
	shf.l.wrap.b32 	%r1591, %r1587, %r1586, 3;
	mov.b64 	%rd2286, {%r1591, %r1590};
	shr.u64 	%rd2287, %rd2271, 6;
	xor.b64  	%rd2288, %rd2285, %rd2287;
	xor.b64  	%rd2289, %rd2288, %rd2286;
	shf.r.wrap.b32 	%r1592, %r1201, %r1200, 1;
	shf.r.wrap.b32 	%r1593, %r1200, %r1201, 1;
	mov.b64 	%rd2290, {%r1593, %r1592};
	shf.r.wrap.b32 	%r1594, %r1201, %r1200, 8;
	shf.r.wrap.b32 	%r1595, %r1200, %r1201, 8;
	mov.b64 	%rd2291, {%r1595, %r1594};
	shr.u64 	%rd2292, %rd1718, 7;
	xor.b64  	%rd2293, %rd2290, %rd2292;
	xor.b64  	%rd2294, %rd2293, %rd2291;
	add.s64 	%rd2295, %rd2206, %rd1705;
	add.s64 	%rd2296, %rd2295, %rd2289;
	add.s64 	%rd2297, %rd2296, %rd2294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1596,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd2284;
	}
	shf.r.wrap.b32 	%r1598, %r1597, %r1596, 19;
	shf.r.wrap.b32 	%r1599, %r1596, %r1597, 19;
	mov.b64 	%rd2298, {%r1599, %r1598};
	shf.l.wrap.b32 	%r1600, %r1596, %r1597, 3;
	shf.l.wrap.b32 	%r1601, %r1597, %r1596, 3;
	mov.b64 	%rd2299, {%r1601, %r1600};
	shr.u64 	%rd2300, %rd2284, 6;
	xor.b64  	%rd2301, %rd2298, %rd2300;
	xor.b64  	%rd2302, %rd2301, %rd2299;
	shf.r.wrap.b32 	%r1602, %r1211, %r1210, 1;
	shf.r.wrap.b32 	%r1603, %r1210, %r1211, 1;
	mov.b64 	%rd2303, {%r1603, %r1602};
	shf.r.wrap.b32 	%r1604, %r1211, %r1210, 8;
	shf.r.wrap.b32 	%r1605, %r1210, %r1211, 8;
	mov.b64 	%rd2304, {%r1605, %r1604};
	shr.u64 	%rd2305, %rd1731, 7;
	xor.b64  	%rd2306, %rd2303, %rd2305;
	xor.b64  	%rd2307, %rd2306, %rd2304;
	add.s64 	%rd2308, %rd2219, %rd1718;
	add.s64 	%rd2309, %rd2308, %rd2302;
	add.s64 	%rd2310, %rd2309, %rd2307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1606,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1607}, %rd2297;
	}
	shf.r.wrap.b32 	%r1608, %r1607, %r1606, 19;
	shf.r.wrap.b32 	%r1609, %r1606, %r1607, 19;
	mov.b64 	%rd2311, {%r1609, %r1608};
	shf.l.wrap.b32 	%r1610, %r1606, %r1607, 3;
	shf.l.wrap.b32 	%r1611, %r1607, %r1606, 3;
	mov.b64 	%rd2312, {%r1611, %r1610};
	shr.u64 	%rd2313, %rd2297, 6;
	xor.b64  	%rd2314, %rd2311, %rd2313;
	xor.b64  	%rd2315, %rd2314, %rd2312;
	shf.r.wrap.b32 	%r1612, %r1221, %r1220, 1;
	shf.r.wrap.b32 	%r1613, %r1220, %r1221, 1;
	mov.b64 	%rd2316, {%r1613, %r1612};
	shf.r.wrap.b32 	%r1614, %r1221, %r1220, 8;
	shf.r.wrap.b32 	%r1615, %r1220, %r1221, 8;
	mov.b64 	%rd2317, {%r1615, %r1614};
	shr.u64 	%rd2318, %rd1744, 7;
	xor.b64  	%rd2319, %rd2316, %rd2318;
	xor.b64  	%rd2320, %rd2319, %rd2317;
	add.s64 	%rd2321, %rd2232, %rd1731;
	add.s64 	%rd2322, %rd2321, %rd2315;
	add.s64 	%rd2323, %rd2322, %rd2320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1616,%dummy}, %rd2143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1617}, %rd2143;
	}
	shf.r.wrap.b32 	%r1618, %r1617, %r1616, 14;
	shf.r.wrap.b32 	%r1619, %r1616, %r1617, 14;
	mov.b64 	%rd2324, {%r1619, %r1618};
	shf.r.wrap.b32 	%r1620, %r1617, %r1616, 18;
	shf.r.wrap.b32 	%r1621, %r1616, %r1617, 18;
	mov.b64 	%rd2325, {%r1621, %r1620};
	xor.b64  	%rd2326, %rd2325, %rd2324;
	shf.l.wrap.b32 	%r1622, %r1616, %r1617, 23;
	shf.l.wrap.b32 	%r1623, %r1617, %r1616, 23;
	mov.b64 	%rd2327, {%r1623, %r1622};
	xor.b64  	%rd2328, %rd2326, %rd2327;
	xor.b64  	%rd2329, %rd2095, %rd2119;
	and.b64  	%rd2330, %rd2329, %rd2143;
	xor.b64  	%rd2331, %rd2330, %rd2095;
	add.s64 	%rd2332, %rd2331, %rd2071;
	add.s64 	%rd2333, %rd2332, %rd2167;
	add.s64 	%rd2334, %rd2333, %rd2699;
	add.s64 	%rd2335, %rd2334, %rd2328;
	add.s64 	%rd2336, %rd2335, %rd2082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1624,%dummy}, %rd2154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1625}, %rd2154;
	}
	shf.r.wrap.b32 	%r1626, %r1625, %r1624, 28;
	shf.r.wrap.b32 	%r1627, %r1624, %r1625, 28;
	mov.b64 	%rd2337, {%r1627, %r1626};
	shf.l.wrap.b32 	%r1628, %r1624, %r1625, 30;
	shf.l.wrap.b32 	%r1629, %r1625, %r1624, 30;
	mov.b64 	%rd2338, {%r1629, %r1628};
	xor.b64  	%rd2339, %rd2338, %rd2337;
	shf.l.wrap.b32 	%r1630, %r1624, %r1625, 25;
	shf.l.wrap.b32 	%r1631, %r1625, %r1624, 25;
	mov.b64 	%rd2340, {%r1631, %r1630};
	xor.b64  	%rd2341, %rd2339, %rd2340;
	xor.b64  	%rd2342, %rd2154, %rd2106;
	xor.b64  	%rd2343, %rd2154, %rd2130;
	and.b64  	%rd2344, %rd2343, %rd2342;
	xor.b64  	%rd2345, %rd2344, %rd2154;
	add.s64 	%rd2346, %rd2335, %rd2345;
	add.s64 	%rd2347, %rd2346, %rd2341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1632,%dummy}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1633}, %rd2336;
	}
	shf.r.wrap.b32 	%r1634, %r1633, %r1632, 14;
	shf.r.wrap.b32 	%r1635, %r1632, %r1633, 14;
	mov.b64 	%rd2348, {%r1635, %r1634};
	shf.r.wrap.b32 	%r1636, %r1633, %r1632, 18;
	shf.r.wrap.b32 	%r1637, %r1632, %r1633, 18;
	mov.b64 	%rd2349, {%r1637, %r1636};
	xor.b64  	%rd2350, %rd2349, %rd2348;
	shf.l.wrap.b32 	%r1638, %r1632, %r1633, 23;
	shf.l.wrap.b32 	%r1639, %r1633, %r1632, 23;
	mov.b64 	%rd2351, {%r1639, %r1638};
	xor.b64  	%rd2352, %rd2350, %rd2351;
	xor.b64  	%rd2353, %rd2119, %rd2143;
	and.b64  	%rd2354, %rd2336, %rd2353;
	xor.b64  	%rd2355, %rd2354, %rd2119;
	add.s64 	%rd2356, %rd2180, %rd2095;
	add.s64 	%rd2357, %rd2356, %rd2700;
	add.s64 	%rd2358, %rd2357, %rd2355;
	add.s64 	%rd2359, %rd2358, %rd2352;
	add.s64 	%rd2360, %rd2359, %rd2106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1640,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1641}, %rd2347;
	}
	shf.r.wrap.b32 	%r1642, %r1641, %r1640, 28;
	shf.r.wrap.b32 	%r1643, %r1640, %r1641, 28;
	mov.b64 	%rd2361, {%r1643, %r1642};
	shf.l.wrap.b32 	%r1644, %r1640, %r1641, 30;
	shf.l.wrap.b32 	%r1645, %r1641, %r1640, 30;
	mov.b64 	%rd2362, {%r1645, %r1644};
	xor.b64  	%rd2363, %rd2362, %rd2361;
	shf.l.wrap.b32 	%r1646, %r1640, %r1641, 25;
	shf.l.wrap.b32 	%r1647, %r1641, %r1640, 25;
	mov.b64 	%rd2364, {%r1647, %r1646};
	xor.b64  	%rd2365, %rd2363, %rd2364;
	xor.b64  	%rd2366, %rd2347, %rd2130;
	xor.b64  	%rd2367, %rd2347, %rd2154;
	and.b64  	%rd2368, %rd2367, %rd2366;
	xor.b64  	%rd2369, %rd2368, %rd2347;
	add.s64 	%rd2370, %rd2359, %rd2369;
	add.s64 	%rd2371, %rd2370, %rd2365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1648,%dummy}, %rd2360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd2360;
	}
	shf.r.wrap.b32 	%r1650, %r1649, %r1648, 14;
	shf.r.wrap.b32 	%r1651, %r1648, %r1649, 14;
	mov.b64 	%rd2372, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1649, %r1648, 18;
	shf.r.wrap.b32 	%r1653, %r1648, %r1649, 18;
	mov.b64 	%rd2373, {%r1653, %r1652};
	xor.b64  	%rd2374, %rd2373, %rd2372;
	shf.l.wrap.b32 	%r1654, %r1648, %r1649, 23;
	shf.l.wrap.b32 	%r1655, %r1649, %r1648, 23;
	mov.b64 	%rd2375, {%r1655, %r1654};
	xor.b64  	%rd2376, %rd2374, %rd2375;
	xor.b64  	%rd2377, %rd2336, %rd2143;
	and.b64  	%rd2378, %rd2360, %rd2377;
	xor.b64  	%rd2379, %rd2378, %rd2143;
	add.s64 	%rd2380, %rd2193, %rd2119;
	add.s64 	%rd2381, %rd2380, %rd2701;
	add.s64 	%rd2382, %rd2381, %rd2379;
	add.s64 	%rd2383, %rd2382, %rd2376;
	add.s64 	%rd2384, %rd2383, %rd2130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd2371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd2371;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 28;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 28;
	mov.b64 	%rd2385, {%r1659, %r1658};
	shf.l.wrap.b32 	%r1660, %r1656, %r1657, 30;
	shf.l.wrap.b32 	%r1661, %r1657, %r1656, 30;
	mov.b64 	%rd2386, {%r1661, %r1660};
	xor.b64  	%rd2387, %rd2386, %rd2385;
	shf.l.wrap.b32 	%r1662, %r1656, %r1657, 25;
	shf.l.wrap.b32 	%r1663, %r1657, %r1656, 25;
	mov.b64 	%rd2388, {%r1663, %r1662};
	xor.b64  	%rd2389, %rd2387, %rd2388;
	xor.b64  	%rd2390, %rd2371, %rd2154;
	xor.b64  	%rd2391, %rd2371, %rd2347;
	and.b64  	%rd2392, %rd2391, %rd2390;
	xor.b64  	%rd2393, %rd2392, %rd2371;
	add.s64 	%rd2394, %rd2383, %rd2393;
	add.s64 	%rd2395, %rd2394, %rd2389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd2384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd2384;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 14;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 14;
	mov.b64 	%rd2396, {%r1667, %r1666};
	shf.r.wrap.b32 	%r1668, %r1665, %r1664, 18;
	shf.r.wrap.b32 	%r1669, %r1664, %r1665, 18;
	mov.b64 	%rd2397, {%r1669, %r1668};
	xor.b64  	%rd2398, %rd2397, %rd2396;
	shf.l.wrap.b32 	%r1670, %r1664, %r1665, 23;
	shf.l.wrap.b32 	%r1671, %r1665, %r1664, 23;
	mov.b64 	%rd2399, {%r1671, %r1670};
	xor.b64  	%rd2400, %rd2398, %rd2399;
	xor.b64  	%rd2401, %rd2360, %rd2336;
	and.b64  	%rd2402, %rd2384, %rd2401;
	xor.b64  	%rd2403, %rd2402, %rd2336;
	add.s64 	%rd2404, %rd2206, %rd2143;
	add.s64 	%rd2405, %rd2404, %rd2702;
	add.s64 	%rd2406, %rd2405, %rd2403;
	add.s64 	%rd2407, %rd2406, %rd2400;
	add.s64 	%rd2408, %rd2407, %rd2154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1672,%dummy}, %rd2395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1673}, %rd2395;
	}
	shf.r.wrap.b32 	%r1674, %r1673, %r1672, 28;
	shf.r.wrap.b32 	%r1675, %r1672, %r1673, 28;
	mov.b64 	%rd2409, {%r1675, %r1674};
	shf.l.wrap.b32 	%r1676, %r1672, %r1673, 30;
	shf.l.wrap.b32 	%r1677, %r1673, %r1672, 30;
	mov.b64 	%rd2410, {%r1677, %r1676};
	xor.b64  	%rd2411, %rd2410, %rd2409;
	shf.l.wrap.b32 	%r1678, %r1672, %r1673, 25;
	shf.l.wrap.b32 	%r1679, %r1673, %r1672, 25;
	mov.b64 	%rd2412, {%r1679, %r1678};
	xor.b64  	%rd2413, %rd2411, %rd2412;
	xor.b64  	%rd2414, %rd2395, %rd2347;
	xor.b64  	%rd2415, %rd2395, %rd2371;
	and.b64  	%rd2416, %rd2415, %rd2414;
	xor.b64  	%rd2417, %rd2416, %rd2395;
	add.s64 	%rd2418, %rd2407, %rd2417;
	add.s64 	%rd2419, %rd2418, %rd2413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1680,%dummy}, %rd2408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1681}, %rd2408;
	}
	shf.r.wrap.b32 	%r1682, %r1681, %r1680, 14;
	shf.r.wrap.b32 	%r1683, %r1680, %r1681, 14;
	mov.b64 	%rd2420, {%r1683, %r1682};
	shf.r.wrap.b32 	%r1684, %r1681, %r1680, 18;
	shf.r.wrap.b32 	%r1685, %r1680, %r1681, 18;
	mov.b64 	%rd2421, {%r1685, %r1684};
	xor.b64  	%rd2422, %rd2421, %rd2420;
	shf.l.wrap.b32 	%r1686, %r1680, %r1681, 23;
	shf.l.wrap.b32 	%r1687, %r1681, %r1680, 23;
	mov.b64 	%rd2423, {%r1687, %r1686};
	xor.b64  	%rd2424, %rd2422, %rd2423;
	xor.b64  	%rd2425, %rd2384, %rd2360;
	and.b64  	%rd2426, %rd2408, %rd2425;
	xor.b64  	%rd2427, %rd2426, %rd2360;
	add.s64 	%rd2428, %rd2336, %rd2219;
	add.s64 	%rd2429, %rd2428, %rd2703;
	add.s64 	%rd2430, %rd2429, %rd2427;
	add.s64 	%rd2431, %rd2430, %rd2424;
	add.s64 	%rd2432, %rd2431, %rd2347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1688,%dummy}, %rd2419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1689}, %rd2419;
	}
	shf.r.wrap.b32 	%r1690, %r1689, %r1688, 28;
	shf.r.wrap.b32 	%r1691, %r1688, %r1689, 28;
	mov.b64 	%rd2433, {%r1691, %r1690};
	shf.l.wrap.b32 	%r1692, %r1688, %r1689, 30;
	shf.l.wrap.b32 	%r1693, %r1689, %r1688, 30;
	mov.b64 	%rd2434, {%r1693, %r1692};
	xor.b64  	%rd2435, %rd2434, %rd2433;
	shf.l.wrap.b32 	%r1694, %r1688, %r1689, 25;
	shf.l.wrap.b32 	%r1695, %r1689, %r1688, 25;
	mov.b64 	%rd2436, {%r1695, %r1694};
	xor.b64  	%rd2437, %rd2435, %rd2436;
	xor.b64  	%rd2438, %rd2419, %rd2371;
	xor.b64  	%rd2439, %rd2419, %rd2395;
	and.b64  	%rd2440, %rd2439, %rd2438;
	xor.b64  	%rd2441, %rd2440, %rd2419;
	add.s64 	%rd2442, %rd2431, %rd2441;
	add.s64 	%rd2443, %rd2442, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1696,%dummy}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1697}, %rd2432;
	}
	shf.r.wrap.b32 	%r1698, %r1697, %r1696, 14;
	shf.r.wrap.b32 	%r1699, %r1696, %r1697, 14;
	mov.b64 	%rd2444, {%r1699, %r1698};
	shf.r.wrap.b32 	%r1700, %r1697, %r1696, 18;
	shf.r.wrap.b32 	%r1701, %r1696, %r1697, 18;
	mov.b64 	%rd2445, {%r1701, %r1700};
	xor.b64  	%rd2446, %rd2445, %rd2444;
	shf.l.wrap.b32 	%r1702, %r1696, %r1697, 23;
	shf.l.wrap.b32 	%r1703, %r1697, %r1696, 23;
	mov.b64 	%rd2447, {%r1703, %r1702};
	xor.b64  	%rd2448, %rd2446, %rd2447;
	xor.b64  	%rd2449, %rd2408, %rd2384;
	and.b64  	%rd2450, %rd2432, %rd2449;
	xor.b64  	%rd2451, %rd2450, %rd2384;
	add.s64 	%rd2452, %rd2360, %rd2232;
	add.s64 	%rd2453, %rd2452, %rd2704;
	add.s64 	%rd2454, %rd2453, %rd2451;
	add.s64 	%rd2455, %rd2454, %rd2448;
	add.s64 	%rd2456, %rd2455, %rd2371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd2443;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 28;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 28;
	mov.b64 	%rd2457, {%r1707, %r1706};
	shf.l.wrap.b32 	%r1708, %r1704, %r1705, 30;
	shf.l.wrap.b32 	%r1709, %r1705, %r1704, 30;
	mov.b64 	%rd2458, {%r1709, %r1708};
	xor.b64  	%rd2459, %rd2458, %rd2457;
	shf.l.wrap.b32 	%r1710, %r1704, %r1705, 25;
	shf.l.wrap.b32 	%r1711, %r1705, %r1704, 25;
	mov.b64 	%rd2460, {%r1711, %r1710};
	xor.b64  	%rd2461, %rd2459, %rd2460;
	xor.b64  	%rd2462, %rd2443, %rd2395;
	xor.b64  	%rd2463, %rd2443, %rd2419;
	and.b64  	%rd2464, %rd2463, %rd2462;
	xor.b64  	%rd2465, %rd2464, %rd2443;
	add.s64 	%rd2466, %rd2455, %rd2465;
	add.s64 	%rd2467, %rd2466, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1712,%dummy}, %rd2456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1713}, %rd2456;
	}
	shf.r.wrap.b32 	%r1714, %r1713, %r1712, 14;
	shf.r.wrap.b32 	%r1715, %r1712, %r1713, 14;
	mov.b64 	%rd2468, {%r1715, %r1714};
	shf.r.wrap.b32 	%r1716, %r1713, %r1712, 18;
	shf.r.wrap.b32 	%r1717, %r1712, %r1713, 18;
	mov.b64 	%rd2469, {%r1717, %r1716};
	xor.b64  	%rd2470, %rd2469, %rd2468;
	shf.l.wrap.b32 	%r1718, %r1712, %r1713, 23;
	shf.l.wrap.b32 	%r1719, %r1713, %r1712, 23;
	mov.b64 	%rd2471, {%r1719, %r1718};
	xor.b64  	%rd2472, %rd2470, %rd2471;
	xor.b64  	%rd2473, %rd2432, %rd2408;
	and.b64  	%rd2474, %rd2456, %rd2473;
	xor.b64  	%rd2475, %rd2474, %rd2408;
	add.s64 	%rd2476, %rd2384, %rd2245;
	add.s64 	%rd2477, %rd2476, %rd2705;
	add.s64 	%rd2478, %rd2477, %rd2475;
	add.s64 	%rd2479, %rd2478, %rd2472;
	add.s64 	%rd2480, %rd2479, %rd2395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1720,%dummy}, %rd2467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1721}, %rd2467;
	}
	shf.r.wrap.b32 	%r1722, %r1721, %r1720, 28;
	shf.r.wrap.b32 	%r1723, %r1720, %r1721, 28;
	mov.b64 	%rd2481, {%r1723, %r1722};
	shf.l.wrap.b32 	%r1724, %r1720, %r1721, 30;
	shf.l.wrap.b32 	%r1725, %r1721, %r1720, 30;
	mov.b64 	%rd2482, {%r1725, %r1724};
	xor.b64  	%rd2483, %rd2482, %rd2481;
	shf.l.wrap.b32 	%r1726, %r1720, %r1721, 25;
	shf.l.wrap.b32 	%r1727, %r1721, %r1720, 25;
	mov.b64 	%rd2484, {%r1727, %r1726};
	xor.b64  	%rd2485, %rd2483, %rd2484;
	xor.b64  	%rd2486, %rd2467, %rd2419;
	xor.b64  	%rd2487, %rd2467, %rd2443;
	and.b64  	%rd2488, %rd2487, %rd2486;
	xor.b64  	%rd2489, %rd2488, %rd2467;
	add.s64 	%rd2490, %rd2479, %rd2489;
	add.s64 	%rd2491, %rd2490, %rd2485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1728,%dummy}, %rd2480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd2480;
	}
	shf.r.wrap.b32 	%r1730, %r1729, %r1728, 14;
	shf.r.wrap.b32 	%r1731, %r1728, %r1729, 14;
	mov.b64 	%rd2492, {%r1731, %r1730};
	shf.r.wrap.b32 	%r1732, %r1729, %r1728, 18;
	shf.r.wrap.b32 	%r1733, %r1728, %r1729, 18;
	mov.b64 	%rd2493, {%r1733, %r1732};
	xor.b64  	%rd2494, %rd2493, %rd2492;
	shf.l.wrap.b32 	%r1734, %r1728, %r1729, 23;
	shf.l.wrap.b32 	%r1735, %r1729, %r1728, 23;
	mov.b64 	%rd2495, {%r1735, %r1734};
	xor.b64  	%rd2496, %rd2494, %rd2495;
	xor.b64  	%rd2497, %rd2456, %rd2432;
	and.b64  	%rd2498, %rd2480, %rd2497;
	xor.b64  	%rd2499, %rd2498, %rd2432;
	add.s64 	%rd2500, %rd2408, %rd2258;
	add.s64 	%rd2501, %rd2500, %rd2706;
	add.s64 	%rd2502, %rd2501, %rd2499;
	add.s64 	%rd2503, %rd2502, %rd2496;
	add.s64 	%rd2504, %rd2503, %rd2419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1736,%dummy}, %rd2491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1737}, %rd2491;
	}
	shf.r.wrap.b32 	%r1738, %r1737, %r1736, 28;
	shf.r.wrap.b32 	%r1739, %r1736, %r1737, 28;
	mov.b64 	%rd2505, {%r1739, %r1738};
	shf.l.wrap.b32 	%r1740, %r1736, %r1737, 30;
	shf.l.wrap.b32 	%r1741, %r1737, %r1736, 30;
	mov.b64 	%rd2506, {%r1741, %r1740};
	xor.b64  	%rd2507, %rd2506, %rd2505;
	shf.l.wrap.b32 	%r1742, %r1736, %r1737, 25;
	shf.l.wrap.b32 	%r1743, %r1737, %r1736, 25;
	mov.b64 	%rd2508, {%r1743, %r1742};
	xor.b64  	%rd2509, %rd2507, %rd2508;
	xor.b64  	%rd2510, %rd2491, %rd2443;
	xor.b64  	%rd2511, %rd2491, %rd2467;
	and.b64  	%rd2512, %rd2511, %rd2510;
	xor.b64  	%rd2513, %rd2512, %rd2491;
	add.s64 	%rd2514, %rd2503, %rd2513;
	add.s64 	%rd2515, %rd2514, %rd2509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1744,%dummy}, %rd2504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1745}, %rd2504;
	}
	shf.r.wrap.b32 	%r1746, %r1745, %r1744, 14;
	shf.r.wrap.b32 	%r1747, %r1744, %r1745, 14;
	mov.b64 	%rd2516, {%r1747, %r1746};
	shf.r.wrap.b32 	%r1748, %r1745, %r1744, 18;
	shf.r.wrap.b32 	%r1749, %r1744, %r1745, 18;
	mov.b64 	%rd2517, {%r1749, %r1748};
	xor.b64  	%rd2518, %rd2517, %rd2516;
	shf.l.wrap.b32 	%r1750, %r1744, %r1745, 23;
	shf.l.wrap.b32 	%r1751, %r1745, %r1744, 23;
	mov.b64 	%rd2519, {%r1751, %r1750};
	xor.b64  	%rd2520, %rd2518, %rd2519;
	xor.b64  	%rd2521, %rd2480, %rd2456;
	and.b64  	%rd2522, %rd2504, %rd2521;
	xor.b64  	%rd2523, %rd2522, %rd2456;
	add.s64 	%rd2524, %rd2432, %rd2271;
	add.s64 	%rd2525, %rd2524, %rd2707;
	add.s64 	%rd2526, %rd2525, %rd2523;
	add.s64 	%rd2527, %rd2526, %rd2520;
	add.s64 	%rd2528, %rd2527, %rd2443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1752,%dummy}, %rd2515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd2515;
	}
	shf.r.wrap.b32 	%r1754, %r1753, %r1752, 28;
	shf.r.wrap.b32 	%r1755, %r1752, %r1753, 28;
	mov.b64 	%rd2529, {%r1755, %r1754};
	shf.l.wrap.b32 	%r1756, %r1752, %r1753, 30;
	shf.l.wrap.b32 	%r1757, %r1753, %r1752, 30;
	mov.b64 	%rd2530, {%r1757, %r1756};
	xor.b64  	%rd2531, %rd2530, %rd2529;
	shf.l.wrap.b32 	%r1758, %r1752, %r1753, 25;
	shf.l.wrap.b32 	%r1759, %r1753, %r1752, 25;
	mov.b64 	%rd2532, {%r1759, %r1758};
	xor.b64  	%rd2533, %rd2531, %rd2532;
	xor.b64  	%rd2534, %rd2515, %rd2467;
	xor.b64  	%rd2535, %rd2515, %rd2491;
	and.b64  	%rd2536, %rd2535, %rd2534;
	xor.b64  	%rd2537, %rd2536, %rd2515;
	add.s64 	%rd2538, %rd2527, %rd2537;
	add.s64 	%rd2539, %rd2538, %rd2533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1760,%dummy}, %rd2528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd2528;
	}
	shf.r.wrap.b32 	%r1762, %r1761, %r1760, 14;
	shf.r.wrap.b32 	%r1763, %r1760, %r1761, 14;
	mov.b64 	%rd2540, {%r1763, %r1762};
	shf.r.wrap.b32 	%r1764, %r1761, %r1760, 18;
	shf.r.wrap.b32 	%r1765, %r1760, %r1761, 18;
	mov.b64 	%rd2541, {%r1765, %r1764};
	xor.b64  	%rd2542, %rd2541, %rd2540;
	shf.l.wrap.b32 	%r1766, %r1760, %r1761, 23;
	shf.l.wrap.b32 	%r1767, %r1761, %r1760, 23;
	mov.b64 	%rd2543, {%r1767, %r1766};
	xor.b64  	%rd2544, %rd2542, %rd2543;
	xor.b64  	%rd2545, %rd2504, %rd2480;
	and.b64  	%rd2546, %rd2528, %rd2545;
	xor.b64  	%rd2547, %rd2546, %rd2480;
	add.s64 	%rd2548, %rd2456, %rd2284;
	add.s64 	%rd2549, %rd2548, %rd2708;
	add.s64 	%rd2550, %rd2549, %rd2547;
	add.s64 	%rd2551, %rd2550, %rd2544;
	add.s64 	%rd2552, %rd2551, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd2539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2539;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 28;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 28;
	mov.b64 	%rd2553, {%r1771, %r1770};
	shf.l.wrap.b32 	%r1772, %r1768, %r1769, 30;
	shf.l.wrap.b32 	%r1773, %r1769, %r1768, 30;
	mov.b64 	%rd2554, {%r1773, %r1772};
	xor.b64  	%rd2555, %rd2554, %rd2553;
	shf.l.wrap.b32 	%r1774, %r1768, %r1769, 25;
	shf.l.wrap.b32 	%r1775, %r1769, %r1768, 25;
	mov.b64 	%rd2556, {%r1775, %r1774};
	xor.b64  	%rd2557, %rd2555, %rd2556;
	xor.b64  	%rd2558, %rd2539, %rd2491;
	xor.b64  	%rd2559, %rd2539, %rd2515;
	and.b64  	%rd2560, %rd2559, %rd2558;
	xor.b64  	%rd2561, %rd2560, %rd2539;
	add.s64 	%rd2562, %rd2551, %rd2561;
	add.s64 	%rd2563, %rd2562, %rd2557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1776,%dummy}, %rd2552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd2552;
	}
	shf.r.wrap.b32 	%r1778, %r1777, %r1776, 14;
	shf.r.wrap.b32 	%r1779, %r1776, %r1777, 14;
	mov.b64 	%rd2564, {%r1779, %r1778};
	shf.r.wrap.b32 	%r1780, %r1777, %r1776, 18;
	shf.r.wrap.b32 	%r1781, %r1776, %r1777, 18;
	mov.b64 	%rd2565, {%r1781, %r1780};
	xor.b64  	%rd2566, %rd2565, %rd2564;
	shf.l.wrap.b32 	%r1782, %r1776, %r1777, 23;
	shf.l.wrap.b32 	%r1783, %r1777, %r1776, 23;
	mov.b64 	%rd2567, {%r1783, %r1782};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	xor.b64  	%rd2569, %rd2528, %rd2504;
	and.b64  	%rd2570, %rd2552, %rd2569;
	xor.b64  	%rd2571, %rd2570, %rd2504;
	add.s64 	%rd2572, %rd2480, %rd2297;
	add.s64 	%rd2573, %rd2572, %rd2709;
	add.s64 	%rd2574, %rd2573, %rd2571;
	add.s64 	%rd2575, %rd2574, %rd2568;
	add.s64 	%rd2576, %rd2575, %rd2491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1784,%dummy}, %rd2563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1785}, %rd2563;
	}
	shf.r.wrap.b32 	%r1786, %r1785, %r1784, 28;
	shf.r.wrap.b32 	%r1787, %r1784, %r1785, 28;
	mov.b64 	%rd2577, {%r1787, %r1786};
	shf.l.wrap.b32 	%r1788, %r1784, %r1785, 30;
	shf.l.wrap.b32 	%r1789, %r1785, %r1784, 30;
	mov.b64 	%rd2578, {%r1789, %r1788};
	xor.b64  	%rd2579, %rd2578, %rd2577;
	shf.l.wrap.b32 	%r1790, %r1784, %r1785, 25;
	shf.l.wrap.b32 	%r1791, %r1785, %r1784, 25;
	mov.b64 	%rd2580, {%r1791, %r1790};
	xor.b64  	%rd2581, %rd2579, %rd2580;
	xor.b64  	%rd2582, %rd2563, %rd2515;
	xor.b64  	%rd2583, %rd2563, %rd2539;
	and.b64  	%rd2584, %rd2583, %rd2582;
	xor.b64  	%rd2585, %rd2584, %rd2563;
	add.s64 	%rd2586, %rd2575, %rd2585;
	add.s64 	%rd2587, %rd2586, %rd2581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1792,%dummy}, %rd2576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1793}, %rd2576;
	}
	shf.r.wrap.b32 	%r1794, %r1793, %r1792, 14;
	shf.r.wrap.b32 	%r1795, %r1792, %r1793, 14;
	mov.b64 	%rd2588, {%r1795, %r1794};
	shf.r.wrap.b32 	%r1796, %r1793, %r1792, 18;
	shf.r.wrap.b32 	%r1797, %r1792, %r1793, 18;
	mov.b64 	%rd2589, {%r1797, %r1796};
	xor.b64  	%rd2590, %rd2589, %rd2588;
	shf.l.wrap.b32 	%r1798, %r1792, %r1793, 23;
	shf.l.wrap.b32 	%r1799, %r1793, %r1792, 23;
	mov.b64 	%rd2591, {%r1799, %r1798};
	xor.b64  	%rd2592, %rd2590, %rd2591;
	xor.b64  	%rd2593, %rd2552, %rd2528;
	and.b64  	%rd2594, %rd2576, %rd2593;
	xor.b64  	%rd2595, %rd2594, %rd2528;
	add.s64 	%rd2596, %rd2504, %rd2310;
	add.s64 	%rd2597, %rd2596, %rd2710;
	add.s64 	%rd2598, %rd2597, %rd2595;
	add.s64 	%rd2599, %rd2598, %rd2592;
	add.s64 	%rd2600, %rd2599, %rd2515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1800,%dummy}, %rd2587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1801}, %rd2587;
	}
	shf.r.wrap.b32 	%r1802, %r1801, %r1800, 28;
	shf.r.wrap.b32 	%r1803, %r1800, %r1801, 28;
	mov.b64 	%rd2601, {%r1803, %r1802};
	shf.l.wrap.b32 	%r1804, %r1800, %r1801, 30;
	shf.l.wrap.b32 	%r1805, %r1801, %r1800, 30;
	mov.b64 	%rd2602, {%r1805, %r1804};
	xor.b64  	%rd2603, %rd2602, %rd2601;
	shf.l.wrap.b32 	%r1806, %r1800, %r1801, 25;
	shf.l.wrap.b32 	%r1807, %r1801, %r1800, 25;
	mov.b64 	%rd2604, {%r1807, %r1806};
	xor.b64  	%rd2605, %rd2603, %rd2604;
	xor.b64  	%rd2606, %rd2587, %rd2539;
	xor.b64  	%rd2607, %rd2587, %rd2563;
	and.b64  	%rd2608, %rd2607, %rd2606;
	xor.b64  	%rd2609, %rd2608, %rd2587;
	add.s64 	%rd2610, %rd2599, %rd2609;
	add.s64 	%rd2611, %rd2610, %rd2605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1808,%dummy}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1809}, %rd2600;
	}
	shf.r.wrap.b32 	%r1810, %r1809, %r1808, 14;
	shf.r.wrap.b32 	%r1811, %r1808, %r1809, 14;
	mov.b64 	%rd2612, {%r1811, %r1810};
	shf.r.wrap.b32 	%r1812, %r1809, %r1808, 18;
	shf.r.wrap.b32 	%r1813, %r1808, %r1809, 18;
	mov.b64 	%rd2613, {%r1813, %r1812};
	xor.b64  	%rd2614, %rd2613, %rd2612;
	shf.l.wrap.b32 	%r1814, %r1808, %r1809, 23;
	shf.l.wrap.b32 	%r1815, %r1809, %r1808, 23;
	mov.b64 	%rd2615, {%r1815, %r1814};
	xor.b64  	%rd2616, %rd2614, %rd2615;
	xor.b64  	%rd2617, %rd2576, %rd2552;
	and.b64  	%rd2618, %rd2600, %rd2617;
	xor.b64  	%rd2619, %rd2618, %rd2552;
	add.s64 	%rd2620, %rd2528, %rd2323;
	add.s64 	%rd2621, %rd2620, %rd2711;
	add.s64 	%rd2622, %rd2621, %rd2619;
	add.s64 	%rd2623, %rd2622, %rd2616;
	add.s64 	%rd93, %rd2623, %rd2539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1816,%dummy}, %rd2611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1817}, %rd2611;
	}
	shf.r.wrap.b32 	%r1818, %r1817, %r1816, 28;
	shf.r.wrap.b32 	%r1819, %r1816, %r1817, 28;
	mov.b64 	%rd2624, {%r1819, %r1818};
	shf.l.wrap.b32 	%r1820, %r1816, %r1817, 30;
	shf.l.wrap.b32 	%r1821, %r1817, %r1816, 30;
	mov.b64 	%rd2625, {%r1821, %r1820};
	xor.b64  	%rd2626, %rd2625, %rd2624;
	shf.l.wrap.b32 	%r1822, %r1816, %r1817, 25;
	shf.l.wrap.b32 	%r1823, %r1817, %r1816, 25;
	mov.b64 	%rd2627, {%r1823, %r1822};
	xor.b64  	%rd2628, %rd2626, %rd2627;
	xor.b64  	%rd2629, %rd2611, %rd2563;
	xor.b64  	%rd2630, %rd2611, %rd2587;
	and.b64  	%rd2631, %rd2630, %rd2629;
	xor.b64  	%rd2632, %rd2631, %rd2611;
	add.s64 	%rd2633, %rd2623, %rd2632;
	add.s64 	%rd94, %rd2633, %rd2628;
	cvt.u32.u64	%r1824, %rd93;
	setp.ne.s32	%p3, %r1824, %r3;
	@%p3 bra 	BB4_9;

	shr.u64 	%rd2634, %rd94, 32;
	cvt.u32.u64	%r1825, %rd2634;
	shr.u64 	%rd2635, %rd93, 32;
	cvt.u32.u64	%r1826, %rd2635;
	setp.eq.s32	%p4, %r1826, %r4;
	cvt.u32.u64	%r1827, %rd94;
	setp.eq.s32	%p5, %r1827, %r5;
	and.pred  	%p6, %p4, %p5;
	setp.eq.s32	%p7, %r1825, %r6;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB4_9;
	bra.uni 	BB4_5;

BB4_5:
	atom.global.add.u32 	%r1828, [%rd20], 1;
	setp.ne.s32	%p9, %r1828, 0;
	@%p9 bra 	BB4_9;

	ld.param.u32 	%r1834, [m01710_s04_param_31];
	atom.global.add.u32 	%r10, [%rd100], 1;
	setp.lt.u32	%p10, %r10, %r1834;
	@%p10 bra 	BB4_8;
	bra.uni 	BB4_7;

BB4_8:
	ld.param.u32 	%r1835, [m01710_s04_param_27];
	ld.param.u64 	%rd2713, [m01710_s04_param_14];
	ld.param.u32 	%r1832, [m01710_s04_param_32];
	mul.wide.u32 	%rd2636, %r10, 20;
	add.s64 	%rd2637, %rd2713, %rd2636;
	st.global.u32 	[%rd2637], %r1835;
	mov.u32 	%r1830, 0;
	st.global.u32 	[%rd2637+4], %r1830;
	st.global.u32 	[%rd2637+8], %r1832;
	st.global.u32 	[%rd2637+12], %r1;
	st.global.u32 	[%rd2637+16], %r1836;
	bra.uni 	BB4_9;

BB4_7:
	atom.global.add.u32 	%r1829, [%rd100], -1;

BB4_9:
	ld.param.u32 	%r1831, [m01710_s04_param_30];
	add.s32 	%r1836, %r1836, 1;
	setp.lt.u32	%p11, %r1836, %r1831;
	@%p11 bra 	BB4_3;

BB4_10:
	ret;
}

	// .globl	m01710_s08
.entry m01710_s08(
	.param .u64 .ptr .global .align 4 m01710_s08_param_0,
	.param .u64 .ptr .global .align 4 m01710_s08_param_1,
	.param .u64 .ptr .global .align 4 m01710_s08_param_2,
	.param .u64 .ptr .global .align 4 m01710_s08_param_3,
	.param .u64 .ptr .global .align 1 m01710_s08_param_4,
	.param .u64 .ptr .global .align 1 m01710_s08_param_5,
	.param .u64 .ptr .global .align 4 m01710_s08_param_6,
	.param .u64 .ptr .global .align 4 m01710_s08_param_7,
	.param .u64 .ptr .global .align 4 m01710_s08_param_8,
	.param .u64 .ptr .global .align 4 m01710_s08_param_9,
	.param .u64 .ptr .global .align 4 m01710_s08_param_10,
	.param .u64 .ptr .global .align 4 m01710_s08_param_11,
	.param .u64 .ptr .global .align 4 m01710_s08_param_12,
	.param .u64 .ptr .global .align 4 m01710_s08_param_13,
	.param .u64 .ptr .global .align 4 m01710_s08_param_14,
	.param .u64 .ptr .global .align 4 m01710_s08_param_15,
	.param .u64 .ptr .global .align 4 m01710_s08_param_16,
	.param .u64 .ptr .global .align 4 m01710_s08_param_17,
	.param .u64 .ptr .global .align 1 m01710_s08_param_18,
	.param .u64 .ptr .global .align 4 m01710_s08_param_19,
	.param .u64 .ptr .global .align 4 m01710_s08_param_20,
	.param .u64 .ptr .global .align 4 m01710_s08_param_21,
	.param .u64 .ptr .global .align 4 m01710_s08_param_22,
	.param .u64 .ptr .global .align 4 m01710_s08_param_23,
	.param .u32 m01710_s08_param_24,
	.param .u32 m01710_s08_param_25,
	.param .u32 m01710_s08_param_26,
	.param .u32 m01710_s08_param_27,
	.param .u32 m01710_s08_param_28,
	.param .u32 m01710_s08_param_29,
	.param .u32 m01710_s08_param_30,
	.param .u32 m01710_s08_param_31,
	.param .u32 m01710_s08_param_32,
	.param .u32 m01710_s08_param_33,
	.param .u32 m01710_s08_param_34
)
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<1853>;
	.reg .b64 	%rd<2730>;


	ld.param.u64 	%rd97, [m01710_s08_param_0];
	ld.param.u64 	%rd100, [m01710_s08_param_15];
	ld.param.u64 	%rd101, [m01710_s08_param_16];
	ld.param.u64 	%rd102, [m01710_s08_param_19];
	ld.param.u32 	%r13, [m01710_s08_param_30];
	ld.param.u32 	%r15, [m01710_s08_param_32];
	ld.param.u32 	%r16, [m01710_s08_param_34];
	mov.b32	%r17, %envreg3;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %ntid.x;
	mad.lo.s32 	%r20, %r18, %r19, %r17;
	mov.u32 	%r21, %tid.x;
	add.s32 	%r1, %r20, %r21;
	setp.ge.u32	%p1, %r1, %r16;
	@%p1 bra 	BB5_10;

	setp.eq.s32	%p2, %r13, 0;
	@%p2 bra 	BB5_10;

	mul.wide.u32 	%rd103, %r1, 80;
	add.s64 	%rd104, %rd97, %rd103;
	ld.global.u32 	%r2, [%rd104];
	mul.wide.u32 	%rd105, %r15, 64;
	add.s64 	%rd106, %rd100, %rd105;
	ld.global.u32 	%r3, [%rd106+56];
	ld.global.u32 	%r4, [%rd106+60];
	ld.global.u32 	%r5, [%rd106+24];
	ld.global.u32 	%r6, [%rd106+28];
	ld.global.u32 	%r7, [%rd104+4];
	ld.global.u32 	%r23, [%rd104+8];
	ld.global.u32 	%r24, [%rd104+12];
	mov.b64	%rd107, {%r24, %r23};
	ld.global.u32 	%r25, [%rd104+16];
	ld.global.u32 	%r26, [%rd104+20];
	mov.b64	%rd1, {%r26, %r25};
	ld.global.u32 	%r27, [%rd104+24];
	ld.global.u32 	%r28, [%rd104+28];
	mov.b64	%rd108, {%r28, %r27};
	ld.global.u32 	%r29, [%rd104+60];
	mov.u32 	%r1852, 0;
	mov.b64	%rd2, {%r29, %r1852};
	ld.const.u64 	%rd109, [k_sha512];
	add.s64 	%rd3, %rd109, 6620516959819538809;
	mov.u64 	%rd110, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r30,%dummy}, %rd110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r31}, %rd110;
	}
	shf.r.wrap.b32 	%r32, %r31, %r30, 18;
	shf.r.wrap.b32 	%r33, %r30, %r31, 18;
	mov.b64 	%rd111, {%r33, %r32};
	shf.r.wrap.b32 	%r34, %r31, %r30, 14;
	shf.r.wrap.b32 	%r35, %r30, %r31, 14;
	mov.b64 	%rd112, {%r35, %r34};
	xor.b64  	%rd113, %rd111, %rd112;
	shf.l.wrap.b32 	%r36, %r30, %r31, 23;
	shf.l.wrap.b32 	%r37, %r31, %r30, 23;
	mov.b64 	%rd114, {%r37, %r36};
	xor.b64  	%rd4, %rd113, %rd114;
	mov.u64 	%rd115, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38}, %rd115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39,%dummy}, %rd115;
	}
	shf.l.wrap.b32 	%r40, %r39, %r38, 30;
	shf.l.wrap.b32 	%r41, %r38, %r39, 30;
	mov.b64 	%rd116, {%r41, %r40};
	shf.r.wrap.b32 	%r42, %r38, %r39, 28;
	shf.r.wrap.b32 	%r43, %r39, %r38, 28;
	mov.b64 	%rd117, {%r43, %r42};
	xor.b64  	%rd118, %rd116, %rd117;
	shf.l.wrap.b32 	%r44, %r39, %r38, 25;
	shf.l.wrap.b32 	%r45, %r38, %r39, 25;
	mov.b64 	%rd119, {%r45, %r44};
	xor.b64  	%rd5, %rd118, %rd119;
	ld.const.u64 	%rd120, [k_sha512+8];
	add.s64 	%rd121, %rd107, %rd120;
	add.s64 	%rd6, %rd121, 2270897969802886507;
	ld.const.u64 	%rd122, [k_sha512+16];
	add.s64 	%rd123, %rd1, %rd122;
	add.s64 	%rd7, %rd123, -7276294671716946913;
	ld.const.u64 	%rd124, [k_sha512+24];
	add.s64 	%rd125, %rd108, %rd124;
	add.s64 	%rd8, %rd125, 5840696475078001361;
	mul.wide.u32 	%rd126, %r15, 4;
	add.s64 	%rd21, %rd101, %rd126;
	mov.u64 	%rd127, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r46}, %rd127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r47,%dummy}, %rd127;
	}
	shf.l.wrap.b32 	%r48, %r47, %r46, 3;
	shf.l.wrap.b32 	%r49, %r46, %r47, 3;
	mov.b64 	%rd128, {%r49, %r48};
	shf.r.wrap.b32 	%r50, %r46, %r47, 19;
	shf.r.wrap.b32 	%r51, %r47, %r46, 19;
	mov.b64 	%rd129, {%r51, %r50};
	xor.b64  	%rd22, %rd129, %rd128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r52,%dummy}, %rd107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r53}, %rd107;
	}
	shf.r.wrap.b32 	%r54, %r53, %r52, 1;
	shf.r.wrap.b32 	%r55, %r52, %r53, 1;
	mov.b64 	%rd130, {%r55, %r54};
	shf.r.wrap.b32 	%r56, %r53, %r52, 8;
	shf.r.wrap.b32 	%r57, %r52, %r53, 8;
	mov.b64 	%rd131, {%r57, %r56};
	shr.u64 	%rd132, %rd107, 7;
	xor.b64  	%rd133, %rd130, %rd132;
	xor.b64  	%rd23, %rd133, %rd131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r58,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r59}, %rd2;
	}
	shf.r.wrap.b32 	%r60, %r59, %r58, 19;
	shf.r.wrap.b32 	%r61, %r58, %r59, 19;
	mov.b64 	%rd134, {%r61, %r60};
	shf.l.wrap.b32 	%r62, %r58, %r59, 3;
	shf.l.wrap.b32 	%r63, %r59, %r58, 3;
	mov.b64 	%rd135, {%r63, %r62};
	shr.u64 	%rd136, %rd2, 6;
	xor.b64  	%rd137, %rd134, %rd136;
	xor.b64  	%rd138, %rd137, %rd135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd1;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd1;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 1;
	shf.r.wrap.b32 	%r67, %r64, %r65, 1;
	mov.b64 	%rd139, {%r67, %r66};
	shf.r.wrap.b32 	%r68, %r65, %r64, 8;
	shf.r.wrap.b32 	%r69, %r64, %r65, 8;
	mov.b64 	%rd140, {%r69, %r68};
	shr.u64 	%rd141, %rd1, 7;
	xor.b64  	%rd142, %rd139, %rd141;
	xor.b64  	%rd143, %rd142, %rd140;
	add.s64 	%rd144, %rd107, %rd138;
	add.s64 	%rd24, %rd144, %rd143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r70,%dummy}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r71}, %rd108;
	}
	shf.r.wrap.b32 	%r72, %r71, %r70, 1;
	shf.r.wrap.b32 	%r73, %r70, %r71, 1;
	mov.b64 	%rd145, {%r73, %r72};
	shf.r.wrap.b32 	%r74, %r71, %r70, 8;
	shf.r.wrap.b32 	%r75, %r70, %r71, 8;
	mov.b64 	%rd146, {%r75, %r74};
	shr.u64 	%rd147, %rd108, 7;
	xor.b64  	%rd148, %rd145, %rd147;
	xor.b64  	%rd25, %rd148, %rd146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd24;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd24;
	}
	shf.r.wrap.b32 	%r78, %r77, %r76, 19;
	shf.r.wrap.b32 	%r79, %r76, %r77, 19;
	mov.b64 	%rd149, {%r79, %r78};
	shf.l.wrap.b32 	%r80, %r76, %r77, 3;
	shf.l.wrap.b32 	%r81, %r77, %r76, 3;
	mov.b64 	%rd150, {%r81, %r80};
	shr.u64 	%rd151, %rd24, 6;
	xor.b64  	%rd152, %rd149, %rd151;
	xor.b64  	%rd153, %rd152, %rd150;
	shf.r.wrap.b32 	%r82, %r46, %r47, 8;
	shf.r.wrap.b32 	%r83, %r47, %r46, 8;
	mov.b64 	%rd154, {%r83, %r82};
	shf.r.wrap.b32 	%r84, %r46, %r47, 1;
	shf.r.wrap.b32 	%r85, %r47, %r46, 1;
	mov.b64 	%rd155, {%r85, %r84};
	xor.b64  	%rd26, %rd155, %rd154;
	add.s64 	%rd156, %rd108, %rd153;
	add.s64 	%rd27, %rd156, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r86,%dummy}, %rd27;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r87}, %rd27;
	}
	shf.r.wrap.b32 	%r88, %r87, %r86, 19;
	shf.r.wrap.b32 	%r89, %r86, %r87, 19;
	mov.b64 	%rd157, {%r89, %r88};
	shf.l.wrap.b32 	%r90, %r86, %r87, 3;
	shf.l.wrap.b32 	%r91, %r87, %r86, 3;
	mov.b64 	%rd158, {%r91, %r90};
	shr.u64 	%rd159, %rd27, 6;
	xor.b64  	%rd160, %rd157, %rd159;
	xor.b64  	%rd161, %rd160, %rd158;
	add.s64 	%rd28, %rd161, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r92,%dummy}, %rd28;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r93}, %rd28;
	}
	shf.r.wrap.b32 	%r94, %r93, %r92, 19;
	shf.r.wrap.b32 	%r95, %r92, %r93, 19;
	mov.b64 	%rd162, {%r95, %r94};
	shf.l.wrap.b32 	%r96, %r92, %r93, 3;
	shf.l.wrap.b32 	%r97, %r93, %r92, 3;
	mov.b64 	%rd163, {%r97, %r96};
	shr.u64 	%rd164, %rd28, 6;
	xor.b64  	%rd165, %rd162, %rd164;
	xor.b64  	%rd29, %rd165, %rd163;
	shf.r.wrap.b32 	%r98, %r59, %r58, 1;
	shf.r.wrap.b32 	%r99, %r58, %r59, 1;
	mov.b64 	%rd166, {%r99, %r98};
	shf.r.wrap.b32 	%r100, %r59, %r58, 8;
	shf.r.wrap.b32 	%r101, %r58, %r59, 8;
	mov.b64 	%rd167, {%r101, %r100};
	shr.u64 	%rd168, %rd2, 7;
	xor.b64  	%rd169, %rd166, %rd168;
	xor.b64  	%rd30, %rd169, %rd167;
	shf.r.wrap.b32 	%r102, %r77, %r76, 1;
	shf.r.wrap.b32 	%r103, %r76, %r77, 1;
	mov.b64 	%rd170, {%r103, %r102};
	shf.r.wrap.b32 	%r104, %r77, %r76, 8;
	shf.r.wrap.b32 	%r105, %r76, %r77, 8;
	mov.b64 	%rd171, {%r105, %r104};
	shr.u64 	%rd172, %rd24, 7;
	xor.b64  	%rd173, %rd170, %rd172;
	xor.b64  	%rd47, %rd173, %rd171;
	shf.r.wrap.b32 	%r106, %r87, %r86, 1;
	shf.r.wrap.b32 	%r107, %r86, %r87, 1;
	mov.b64 	%rd174, {%r107, %r106};
	shf.r.wrap.b32 	%r108, %r87, %r86, 8;
	shf.r.wrap.b32 	%r109, %r86, %r87, 8;
	mov.b64 	%rd175, {%r109, %r108};
	shr.u64 	%rd176, %rd27, 7;
	xor.b64  	%rd177, %rd174, %rd176;
	xor.b64  	%rd48, %rd177, %rd175;
	shf.r.wrap.b32 	%r110, %r93, %r92, 1;
	shf.r.wrap.b32 	%r111, %r92, %r93, 1;
	mov.b64 	%rd178, {%r111, %r110};
	shf.r.wrap.b32 	%r112, %r93, %r92, 8;
	shf.r.wrap.b32 	%r113, %r92, %r93, 8;
	mov.b64 	%rd179, {%r113, %r112};
	shr.u64 	%rd180, %rd28, 7;
	xor.b64  	%rd181, %rd178, %rd180;
	xor.b64  	%rd49, %rd181, %rd179;

BB5_3:
	mov.u32 	%r1849, 0;
	mov.b64	%rd2728, {%r29, %r1849};
	ld.const.u64 	%rd2727, [k_sha512+608];
	ld.const.u64 	%rd2726, [k_sha512+600];
	ld.const.u64 	%rd2725, [k_sha512+592];
	ld.const.u64 	%rd2724, [k_sha512+584];
	ld.const.u64 	%rd2723, [k_sha512+576];
	ld.const.u64 	%rd2722, [k_sha512+568];
	ld.const.u64 	%rd2721, [k_sha512+560];
	ld.const.u64 	%rd2720, [k_sha512+552];
	ld.const.u64 	%rd2719, [k_sha512+544];
	ld.const.u64 	%rd2718, [k_sha512+536];
	ld.const.u64 	%rd2717, [k_sha512+528];
	ld.const.u64 	%rd2716, [k_sha512+520];
	ld.const.u64 	%rd2715, [k_sha512+512];
	ld.const.u64 	%rd2714, [k_sha512+504];
	ld.const.u64 	%rd2713, [k_sha512+496];
	ld.const.u64 	%rd2712, [k_sha512+488];
	ld.const.u64 	%rd2711, [k_sha512+480];
	ld.const.u64 	%rd2710, [k_sha512+472];
	ld.const.u64 	%rd2709, [k_sha512+464];
	ld.const.u64 	%rd2708, [k_sha512+456];
	ld.const.u64 	%rd2707, [k_sha512+448];
	ld.const.u64 	%rd2706, [k_sha512+440];
	ld.const.u64 	%rd2705, [k_sha512+432];
	ld.const.u64 	%rd2704, [k_sha512+424];
	ld.const.u64 	%rd2703, [k_sha512+416];
	ld.const.u64 	%rd2702, [k_sha512+408];
	ld.const.u64 	%rd2701, [k_sha512+400];
	ld.const.u64 	%rd2700, [k_sha512+392];
	ld.const.u64 	%rd2699, [k_sha512+384];
	ld.const.u64 	%rd2698, [k_sha512+376];
	ld.const.u64 	%rd2697, [k_sha512+368];
	ld.const.u64 	%rd2696, [k_sha512+360];
	ld.const.u64 	%rd2695, [k_sha512+352];
	ld.const.u64 	%rd2694, [k_sha512+344];
	ld.const.u64 	%rd2693, [k_sha512+336];
	ld.const.u64 	%rd2692, [k_sha512+328];
	ld.const.u64 	%rd2691, [k_sha512+320];
	ld.const.u64 	%rd2690, [k_sha512+312];
	ld.const.u64 	%rd2689, [k_sha512+304];
	ld.const.u64 	%rd2688, [k_sha512+296];
	ld.const.u64 	%rd2687, [k_sha512+288];
	ld.const.u64 	%rd2686, [k_sha512+280];
	ld.const.u64 	%rd2685, [k_sha512+272];
	ld.const.u64 	%rd2684, [k_sha512+264];
	ld.const.u64 	%rd2683, [k_sha512+256];
	ld.const.u64 	%rd2682, [k_sha512+248];
	ld.const.u64 	%rd2681, [k_sha512+240];
	ld.const.u64 	%rd2680, [k_sha512+232];
	ld.const.u64 	%rd2679, [k_sha512+224];
	ld.const.u64 	%rd2678, [k_sha512+216];
	ld.const.u64 	%rd2677, [k_sha512+208];
	ld.const.u64 	%rd2676, [k_sha512+200];
	ld.const.u64 	%rd2675, [k_sha512+192];
	ld.const.u64 	%rd2674, [k_sha512+184];
	ld.const.u64 	%rd2673, [k_sha512+176];
	ld.const.u64 	%rd2672, [k_sha512+168];
	ld.const.u64 	%rd2671, [k_sha512+160];
	ld.const.u64 	%rd2670, [k_sha512+152];
	ld.const.u64 	%rd2669, [k_sha512+144];
	ld.const.u64 	%rd2668, [k_sha512+136];
	ld.const.u64 	%rd2667, [k_sha512+128];
	ld.const.u64 	%rd2666, [k_sha512+120];
	ld.const.u64 	%rd2665, [k_sha512+112];
	ld.const.u64 	%rd2664, [k_sha512+104];
	ld.const.u64 	%rd2663, [k_sha512+96];
	ld.const.u64 	%rd2662, [k_sha512+88];
	ld.const.u64 	%rd2661, [k_sha512+80];
	ld.const.u64 	%rd2660, [k_sha512+72];
	ld.const.u64 	%rd2659, [k_sha512+64];
	ld.const.u64 	%rd2658, [k_sha512+56];
	ld.const.u64 	%rd2657, [k_sha512+48];
	ld.const.u64 	%rd2656, [k_sha512+40];
	ld.const.u64 	%rd2655, [k_sha512+32];
	ld.param.u64 	%rd2654, [m01710_s08_param_3];
	mul.wide.u32 	%rd182, %r1852, 4;
	add.s64 	%rd183, %rd2654, %rd182;
	ld.global.u32 	%r114, [%rd183];
	or.b32  	%r115, %r114, %r2;
	mov.b64	%rd184, {%r7, %r115};
	add.s64 	%rd185, %rd3, %rd184;
	add.s64 	%rd186, %rd185, %rd4;
	add.s64 	%rd187, %rd186, -4263291710961585108;
	add.s64 	%rd188, %rd186, %rd5;
	add.s64 	%rd189, %rd188, 6482280703085258342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r116,%dummy}, %rd187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r117}, %rd187;
	}
	shf.r.wrap.b32 	%r118, %r117, %r116, 14;
	shf.r.wrap.b32 	%r119, %r116, %r117, 14;
	mov.b64 	%rd190, {%r119, %r118};
	shf.r.wrap.b32 	%r120, %r117, %r116, 18;
	shf.r.wrap.b32 	%r121, %r116, %r117, 18;
	mov.b64 	%rd191, {%r121, %r120};
	xor.b64  	%rd192, %rd191, %rd190;
	shf.l.wrap.b32 	%r122, %r116, %r117, 23;
	shf.l.wrap.b32 	%r123, %r117, %r116, 23;
	mov.b64 	%rd193, {%r123, %r122};
	xor.b64  	%rd194, %rd192, %rd193;
	and.b64  	%rd195, %rd187, -3887949035690463538;
	xor.b64  	%rd196, %rd195, -7276294671716946913;
	add.s64 	%rd197, %rd6, %rd196;
	add.s64 	%rd198, %rd197, %rd194;
	add.s64 	%rd199, %rd198, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r124,%dummy}, %rd189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r125}, %rd189;
	}
	shf.r.wrap.b32 	%r126, %r125, %r124, 28;
	shf.r.wrap.b32 	%r127, %r124, %r125, 28;
	mov.b64 	%rd200, {%r127, %r126};
	shf.l.wrap.b32 	%r128, %r124, %r125, 30;
	shf.l.wrap.b32 	%r129, %r125, %r124, 30;
	mov.b64 	%rd201, {%r129, %r128};
	xor.b64  	%rd202, %rd201, %rd200;
	shf.l.wrap.b32 	%r130, %r124, %r125, 25;
	shf.l.wrap.b32 	%r131, %r125, %r124, 25;
	mov.b64 	%rd203, {%r131, %r130};
	xor.b64  	%rd204, %rd202, %rd203;
	xor.b64  	%rd205, %rd189, -4942790177534073029;
	xor.b64  	%rd206, %rd189, 7640891576956012808;
	and.b64  	%rd207, %rd206, %rd205;
	xor.b64  	%rd208, %rd207, %rd189;
	add.s64 	%rd209, %rd198, %rd208;
	add.s64 	%rd210, %rd209, %rd204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r132,%dummy}, %rd199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r133}, %rd199;
	}
	shf.r.wrap.b32 	%r134, %r133, %r132, 14;
	shf.r.wrap.b32 	%r135, %r132, %r133, 14;
	mov.b64 	%rd211, {%r135, %r134};
	shf.r.wrap.b32 	%r136, %r133, %r132, 18;
	shf.r.wrap.b32 	%r137, %r132, %r133, 18;
	mov.b64 	%rd212, {%r137, %r136};
	xor.b64  	%rd213, %rd212, %rd211;
	shf.l.wrap.b32 	%r138, %r132, %r133, 23;
	shf.l.wrap.b32 	%r139, %r133, %r132, 23;
	mov.b64 	%rd214, {%r139, %r138};
	xor.b64  	%rd215, %rd213, %rd214;
	xor.b64  	%rd216, %rd187, 5840696475078001361;
	and.b64  	%rd217, %rd199, %rd216;
	xor.b64  	%rd218, %rd217, 5840696475078001361;
	add.s64 	%rd219, %rd7, %rd218;
	add.s64 	%rd220, %rd219, %rd215;
	add.s64 	%rd221, %rd220, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r140,%dummy}, %rd210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r141}, %rd210;
	}
	shf.r.wrap.b32 	%r142, %r141, %r140, 28;
	shf.r.wrap.b32 	%r143, %r140, %r141, 28;
	mov.b64 	%rd222, {%r143, %r142};
	shf.l.wrap.b32 	%r144, %r140, %r141, 30;
	shf.l.wrap.b32 	%r145, %r141, %r140, 30;
	mov.b64 	%rd223, {%r145, %r144};
	xor.b64  	%rd224, %rd223, %rd222;
	shf.l.wrap.b32 	%r146, %r140, %r141, 25;
	shf.l.wrap.b32 	%r147, %r141, %r140, 25;
	mov.b64 	%rd225, {%r147, %r146};
	xor.b64  	%rd226, %rd224, %rd225;
	xor.b64  	%rd227, %rd210, 7640891576956012808;
	xor.b64  	%rd228, %rd210, %rd189;
	and.b64  	%rd229, %rd228, %rd227;
	xor.b64  	%rd230, %rd229, %rd210;
	add.s64 	%rd231, %rd220, %rd230;
	add.s64 	%rd232, %rd231, %rd226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r148,%dummy}, %rd221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r149}, %rd221;
	}
	shf.r.wrap.b32 	%r150, %r149, %r148, 14;
	shf.r.wrap.b32 	%r151, %r148, %r149, 14;
	mov.b64 	%rd233, {%r151, %r150};
	shf.r.wrap.b32 	%r152, %r149, %r148, 18;
	shf.r.wrap.b32 	%r153, %r148, %r149, 18;
	mov.b64 	%rd234, {%r153, %r152};
	xor.b64  	%rd235, %rd234, %rd233;
	shf.l.wrap.b32 	%r154, %r148, %r149, 23;
	shf.l.wrap.b32 	%r155, %r149, %r148, 23;
	mov.b64 	%rd236, {%r155, %r154};
	xor.b64  	%rd237, %rd235, %rd236;
	xor.b64  	%rd238, %rd199, %rd187;
	and.b64  	%rd239, %rd221, %rd238;
	xor.b64  	%rd240, %rd239, %rd187;
	add.s64 	%rd241, %rd8, %rd240;
	add.s64 	%rd242, %rd241, %rd237;
	add.s64 	%rd243, %rd242, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r156,%dummy}, %rd232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r157}, %rd232;
	}
	shf.r.wrap.b32 	%r158, %r157, %r156, 28;
	shf.r.wrap.b32 	%r159, %r156, %r157, 28;
	mov.b64 	%rd244, {%r159, %r158};
	shf.l.wrap.b32 	%r160, %r156, %r157, 30;
	shf.l.wrap.b32 	%r161, %r157, %r156, 30;
	mov.b64 	%rd245, {%r161, %r160};
	xor.b64  	%rd246, %rd245, %rd244;
	shf.l.wrap.b32 	%r162, %r156, %r157, 25;
	shf.l.wrap.b32 	%r163, %r157, %r156, 25;
	mov.b64 	%rd247, {%r163, %r162};
	xor.b64  	%rd248, %rd246, %rd247;
	xor.b64  	%rd249, %rd232, %rd189;
	xor.b64  	%rd250, %rd232, %rd210;
	and.b64  	%rd251, %rd250, %rd249;
	xor.b64  	%rd252, %rd251, %rd232;
	add.s64 	%rd253, %rd242, %rd252;
	add.s64 	%rd254, %rd253, %rd248;
	add.s64 	%rd255, %rd2655, %rd187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r164,%dummy}, %rd243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r165}, %rd243;
	}
	shf.r.wrap.b32 	%r166, %r165, %r164, 14;
	shf.r.wrap.b32 	%r167, %r164, %r165, 14;
	mov.b64 	%rd256, {%r167, %r166};
	shf.r.wrap.b32 	%r168, %r165, %r164, 18;
	shf.r.wrap.b32 	%r169, %r164, %r165, 18;
	mov.b64 	%rd257, {%r169, %r168};
	xor.b64  	%rd258, %rd257, %rd256;
	shf.l.wrap.b32 	%r170, %r164, %r165, 23;
	shf.l.wrap.b32 	%r171, %r165, %r164, 23;
	mov.b64 	%rd259, {%r171, %r170};
	xor.b64  	%rd260, %rd258, %rd259;
	xor.b64  	%rd261, %rd221, %rd199;
	and.b64  	%rd262, %rd243, %rd261;
	xor.b64  	%rd263, %rd262, %rd199;
	add.s64 	%rd264, %rd255, %rd263;
	add.s64 	%rd265, %rd264, %rd260;
	add.s64 	%rd266, %rd265, %rd189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r172,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r173}, %rd254;
	}
	shf.r.wrap.b32 	%r174, %r173, %r172, 28;
	shf.r.wrap.b32 	%r175, %r172, %r173, 28;
	mov.b64 	%rd267, {%r175, %r174};
	shf.l.wrap.b32 	%r176, %r172, %r173, 30;
	shf.l.wrap.b32 	%r177, %r173, %r172, 30;
	mov.b64 	%rd268, {%r177, %r176};
	xor.b64  	%rd269, %rd268, %rd267;
	shf.l.wrap.b32 	%r178, %r172, %r173, 25;
	shf.l.wrap.b32 	%r179, %r173, %r172, 25;
	mov.b64 	%rd270, {%r179, %r178};
	xor.b64  	%rd271, %rd269, %rd270;
	xor.b64  	%rd272, %rd254, %rd210;
	xor.b64  	%rd273, %rd254, %rd232;
	and.b64  	%rd274, %rd273, %rd272;
	xor.b64  	%rd275, %rd274, %rd254;
	add.s64 	%rd276, %rd265, %rd275;
	add.s64 	%rd277, %rd276, %rd271;
	add.s64 	%rd278, %rd2656, %rd199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r180,%dummy}, %rd266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r181}, %rd266;
	}
	shf.r.wrap.b32 	%r182, %r181, %r180, 14;
	shf.r.wrap.b32 	%r183, %r180, %r181, 14;
	mov.b64 	%rd279, {%r183, %r182};
	shf.r.wrap.b32 	%r184, %r181, %r180, 18;
	shf.r.wrap.b32 	%r185, %r180, %r181, 18;
	mov.b64 	%rd280, {%r185, %r184};
	xor.b64  	%rd281, %rd280, %rd279;
	shf.l.wrap.b32 	%r186, %r180, %r181, 23;
	shf.l.wrap.b32 	%r187, %r181, %r180, 23;
	mov.b64 	%rd282, {%r187, %r186};
	xor.b64  	%rd283, %rd281, %rd282;
	xor.b64  	%rd284, %rd243, %rd221;
	and.b64  	%rd285, %rd266, %rd284;
	xor.b64  	%rd286, %rd285, %rd221;
	add.s64 	%rd287, %rd278, %rd286;
	add.s64 	%rd288, %rd287, %rd283;
	add.s64 	%rd289, %rd288, %rd210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r188,%dummy}, %rd277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r189}, %rd277;
	}
	shf.r.wrap.b32 	%r190, %r189, %r188, 28;
	shf.r.wrap.b32 	%r191, %r188, %r189, 28;
	mov.b64 	%rd290, {%r191, %r190};
	shf.l.wrap.b32 	%r192, %r188, %r189, 30;
	shf.l.wrap.b32 	%r193, %r189, %r188, 30;
	mov.b64 	%rd291, {%r193, %r192};
	xor.b64  	%rd292, %rd291, %rd290;
	shf.l.wrap.b32 	%r194, %r188, %r189, 25;
	shf.l.wrap.b32 	%r195, %r189, %r188, 25;
	mov.b64 	%rd293, {%r195, %r194};
	xor.b64  	%rd294, %rd292, %rd293;
	xor.b64  	%rd295, %rd277, %rd232;
	xor.b64  	%rd296, %rd277, %rd254;
	and.b64  	%rd297, %rd296, %rd295;
	xor.b64  	%rd298, %rd297, %rd277;
	add.s64 	%rd299, %rd288, %rd298;
	add.s64 	%rd300, %rd299, %rd294;
	add.s64 	%rd301, %rd2657, %rd221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r196,%dummy}, %rd289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r197}, %rd289;
	}
	shf.r.wrap.b32 	%r198, %r197, %r196, 14;
	shf.r.wrap.b32 	%r199, %r196, %r197, 14;
	mov.b64 	%rd302, {%r199, %r198};
	shf.r.wrap.b32 	%r200, %r197, %r196, 18;
	shf.r.wrap.b32 	%r201, %r196, %r197, 18;
	mov.b64 	%rd303, {%r201, %r200};
	xor.b64  	%rd304, %rd303, %rd302;
	shf.l.wrap.b32 	%r202, %r196, %r197, 23;
	shf.l.wrap.b32 	%r203, %r197, %r196, 23;
	mov.b64 	%rd305, {%r203, %r202};
	xor.b64  	%rd306, %rd304, %rd305;
	xor.b64  	%rd307, %rd266, %rd243;
	and.b64  	%rd308, %rd289, %rd307;
	xor.b64  	%rd309, %rd308, %rd243;
	add.s64 	%rd310, %rd301, %rd309;
	add.s64 	%rd311, %rd310, %rd306;
	add.s64 	%rd312, %rd311, %rd232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r204,%dummy}, %rd300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r205}, %rd300;
	}
	shf.r.wrap.b32 	%r206, %r205, %r204, 28;
	shf.r.wrap.b32 	%r207, %r204, %r205, 28;
	mov.b64 	%rd313, {%r207, %r206};
	shf.l.wrap.b32 	%r208, %r204, %r205, 30;
	shf.l.wrap.b32 	%r209, %r205, %r204, 30;
	mov.b64 	%rd314, {%r209, %r208};
	xor.b64  	%rd315, %rd314, %rd313;
	shf.l.wrap.b32 	%r210, %r204, %r205, 25;
	shf.l.wrap.b32 	%r211, %r205, %r204, 25;
	mov.b64 	%rd316, {%r211, %r210};
	xor.b64  	%rd317, %rd315, %rd316;
	xor.b64  	%rd318, %rd300, %rd254;
	xor.b64  	%rd319, %rd300, %rd277;
	and.b64  	%rd320, %rd319, %rd318;
	xor.b64  	%rd321, %rd320, %rd300;
	add.s64 	%rd322, %rd311, %rd321;
	add.s64 	%rd323, %rd322, %rd317;
	add.s64 	%rd324, %rd2658, %rd243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r212,%dummy}, %rd312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r213}, %rd312;
	}
	shf.r.wrap.b32 	%r214, %r213, %r212, 14;
	shf.r.wrap.b32 	%r215, %r212, %r213, 14;
	mov.b64 	%rd325, {%r215, %r214};
	shf.r.wrap.b32 	%r216, %r213, %r212, 18;
	shf.r.wrap.b32 	%r217, %r212, %r213, 18;
	mov.b64 	%rd326, {%r217, %r216};
	xor.b64  	%rd327, %rd326, %rd325;
	shf.l.wrap.b32 	%r218, %r212, %r213, 23;
	shf.l.wrap.b32 	%r219, %r213, %r212, 23;
	mov.b64 	%rd328, {%r219, %r218};
	xor.b64  	%rd329, %rd327, %rd328;
	xor.b64  	%rd330, %rd289, %rd266;
	and.b64  	%rd331, %rd312, %rd330;
	xor.b64  	%rd332, %rd331, %rd266;
	add.s64 	%rd333, %rd324, %rd332;
	add.s64 	%rd334, %rd333, %rd329;
	add.s64 	%rd335, %rd334, %rd254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r220,%dummy}, %rd323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r221}, %rd323;
	}
	shf.r.wrap.b32 	%r222, %r221, %r220, 28;
	shf.r.wrap.b32 	%r223, %r220, %r221, 28;
	mov.b64 	%rd336, {%r223, %r222};
	shf.l.wrap.b32 	%r224, %r220, %r221, 30;
	shf.l.wrap.b32 	%r225, %r221, %r220, 30;
	mov.b64 	%rd337, {%r225, %r224};
	xor.b64  	%rd338, %rd337, %rd336;
	shf.l.wrap.b32 	%r226, %r220, %r221, 25;
	shf.l.wrap.b32 	%r227, %r221, %r220, 25;
	mov.b64 	%rd339, {%r227, %r226};
	xor.b64  	%rd340, %rd338, %rd339;
	xor.b64  	%rd341, %rd323, %rd277;
	xor.b64  	%rd342, %rd323, %rd300;
	and.b64  	%rd343, %rd342, %rd341;
	xor.b64  	%rd344, %rd343, %rd323;
	add.s64 	%rd345, %rd334, %rd344;
	add.s64 	%rd346, %rd345, %rd340;
	add.s64 	%rd347, %rd2659, %rd266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r228,%dummy}, %rd335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r229}, %rd335;
	}
	shf.r.wrap.b32 	%r230, %r229, %r228, 14;
	shf.r.wrap.b32 	%r231, %r228, %r229, 14;
	mov.b64 	%rd348, {%r231, %r230};
	shf.r.wrap.b32 	%r232, %r229, %r228, 18;
	shf.r.wrap.b32 	%r233, %r228, %r229, 18;
	mov.b64 	%rd349, {%r233, %r232};
	xor.b64  	%rd350, %rd349, %rd348;
	shf.l.wrap.b32 	%r234, %r228, %r229, 23;
	shf.l.wrap.b32 	%r235, %r229, %r228, 23;
	mov.b64 	%rd351, {%r235, %r234};
	xor.b64  	%rd352, %rd350, %rd351;
	xor.b64  	%rd353, %rd312, %rd289;
	and.b64  	%rd354, %rd335, %rd353;
	xor.b64  	%rd355, %rd354, %rd289;
	add.s64 	%rd356, %rd347, %rd355;
	add.s64 	%rd357, %rd356, %rd352;
	add.s64 	%rd358, %rd357, %rd277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r236,%dummy}, %rd346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r237}, %rd346;
	}
	shf.r.wrap.b32 	%r238, %r237, %r236, 28;
	shf.r.wrap.b32 	%r239, %r236, %r237, 28;
	mov.b64 	%rd359, {%r239, %r238};
	shf.l.wrap.b32 	%r240, %r236, %r237, 30;
	shf.l.wrap.b32 	%r241, %r237, %r236, 30;
	mov.b64 	%rd360, {%r241, %r240};
	xor.b64  	%rd361, %rd360, %rd359;
	shf.l.wrap.b32 	%r242, %r236, %r237, 25;
	shf.l.wrap.b32 	%r243, %r237, %r236, 25;
	mov.b64 	%rd362, {%r243, %r242};
	xor.b64  	%rd363, %rd361, %rd362;
	xor.b64  	%rd364, %rd346, %rd300;
	xor.b64  	%rd365, %rd346, %rd323;
	and.b64  	%rd366, %rd365, %rd364;
	xor.b64  	%rd367, %rd366, %rd346;
	add.s64 	%rd368, %rd357, %rd367;
	add.s64 	%rd369, %rd368, %rd363;
	add.s64 	%rd370, %rd2660, %rd289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r244,%dummy}, %rd358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r245}, %rd358;
	}
	shf.r.wrap.b32 	%r246, %r245, %r244, 14;
	shf.r.wrap.b32 	%r247, %r244, %r245, 14;
	mov.b64 	%rd371, {%r247, %r246};
	shf.r.wrap.b32 	%r248, %r245, %r244, 18;
	shf.r.wrap.b32 	%r249, %r244, %r245, 18;
	mov.b64 	%rd372, {%r249, %r248};
	xor.b64  	%rd373, %rd372, %rd371;
	shf.l.wrap.b32 	%r250, %r244, %r245, 23;
	shf.l.wrap.b32 	%r251, %r245, %r244, 23;
	mov.b64 	%rd374, {%r251, %r250};
	xor.b64  	%rd375, %rd373, %rd374;
	xor.b64  	%rd376, %rd335, %rd312;
	and.b64  	%rd377, %rd358, %rd376;
	xor.b64  	%rd378, %rd377, %rd312;
	add.s64 	%rd379, %rd370, %rd378;
	add.s64 	%rd380, %rd379, %rd375;
	add.s64 	%rd381, %rd380, %rd300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r252,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r253}, %rd369;
	}
	shf.r.wrap.b32 	%r254, %r253, %r252, 28;
	shf.r.wrap.b32 	%r255, %r252, %r253, 28;
	mov.b64 	%rd382, {%r255, %r254};
	shf.l.wrap.b32 	%r256, %r252, %r253, 30;
	shf.l.wrap.b32 	%r257, %r253, %r252, 30;
	mov.b64 	%rd383, {%r257, %r256};
	xor.b64  	%rd384, %rd383, %rd382;
	shf.l.wrap.b32 	%r258, %r252, %r253, 25;
	shf.l.wrap.b32 	%r259, %r253, %r252, 25;
	mov.b64 	%rd385, {%r259, %r258};
	xor.b64  	%rd386, %rd384, %rd385;
	xor.b64  	%rd387, %rd369, %rd323;
	xor.b64  	%rd388, %rd369, %rd346;
	and.b64  	%rd389, %rd388, %rd387;
	xor.b64  	%rd390, %rd389, %rd369;
	add.s64 	%rd391, %rd380, %rd390;
	add.s64 	%rd392, %rd391, %rd386;
	add.s64 	%rd393, %rd2661, %rd312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r260,%dummy}, %rd381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r261}, %rd381;
	}
	shf.r.wrap.b32 	%r262, %r261, %r260, 14;
	shf.r.wrap.b32 	%r263, %r260, %r261, 14;
	mov.b64 	%rd394, {%r263, %r262};
	shf.r.wrap.b32 	%r264, %r261, %r260, 18;
	shf.r.wrap.b32 	%r265, %r260, %r261, 18;
	mov.b64 	%rd395, {%r265, %r264};
	xor.b64  	%rd396, %rd395, %rd394;
	shf.l.wrap.b32 	%r266, %r260, %r261, 23;
	shf.l.wrap.b32 	%r267, %r261, %r260, 23;
	mov.b64 	%rd397, {%r267, %r266};
	xor.b64  	%rd398, %rd396, %rd397;
	xor.b64  	%rd399, %rd358, %rd335;
	and.b64  	%rd400, %rd381, %rd399;
	xor.b64  	%rd401, %rd400, %rd335;
	add.s64 	%rd402, %rd393, %rd401;
	add.s64 	%rd403, %rd402, %rd398;
	add.s64 	%rd404, %rd403, %rd323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r268,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd392;
	}
	shf.r.wrap.b32 	%r270, %r269, %r268, 28;
	shf.r.wrap.b32 	%r271, %r268, %r269, 28;
	mov.b64 	%rd405, {%r271, %r270};
	shf.l.wrap.b32 	%r272, %r268, %r269, 30;
	shf.l.wrap.b32 	%r273, %r269, %r268, 30;
	mov.b64 	%rd406, {%r273, %r272};
	xor.b64  	%rd407, %rd406, %rd405;
	shf.l.wrap.b32 	%r274, %r268, %r269, 25;
	shf.l.wrap.b32 	%r275, %r269, %r268, 25;
	mov.b64 	%rd408, {%r275, %r274};
	xor.b64  	%rd409, %rd407, %rd408;
	xor.b64  	%rd410, %rd392, %rd346;
	xor.b64  	%rd411, %rd392, %rd369;
	and.b64  	%rd412, %rd411, %rd410;
	xor.b64  	%rd413, %rd412, %rd392;
	add.s64 	%rd414, %rd403, %rd413;
	add.s64 	%rd415, %rd414, %rd409;
	add.s64 	%rd416, %rd2662, %rd335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r276,%dummy}, %rd404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r277}, %rd404;
	}
	shf.r.wrap.b32 	%r278, %r277, %r276, 14;
	shf.r.wrap.b32 	%r279, %r276, %r277, 14;
	mov.b64 	%rd417, {%r279, %r278};
	shf.r.wrap.b32 	%r280, %r277, %r276, 18;
	shf.r.wrap.b32 	%r281, %r276, %r277, 18;
	mov.b64 	%rd418, {%r281, %r280};
	xor.b64  	%rd419, %rd418, %rd417;
	shf.l.wrap.b32 	%r282, %r276, %r277, 23;
	shf.l.wrap.b32 	%r283, %r277, %r276, 23;
	mov.b64 	%rd420, {%r283, %r282};
	xor.b64  	%rd421, %rd419, %rd420;
	xor.b64  	%rd422, %rd381, %rd358;
	and.b64  	%rd423, %rd404, %rd422;
	xor.b64  	%rd424, %rd423, %rd358;
	add.s64 	%rd425, %rd416, %rd424;
	add.s64 	%rd426, %rd425, %rd421;
	add.s64 	%rd427, %rd426, %rd346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r284,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r285}, %rd415;
	}
	shf.r.wrap.b32 	%r286, %r285, %r284, 28;
	shf.r.wrap.b32 	%r287, %r284, %r285, 28;
	mov.b64 	%rd428, {%r287, %r286};
	shf.l.wrap.b32 	%r288, %r284, %r285, 30;
	shf.l.wrap.b32 	%r289, %r285, %r284, 30;
	mov.b64 	%rd429, {%r289, %r288};
	xor.b64  	%rd430, %rd429, %rd428;
	shf.l.wrap.b32 	%r290, %r284, %r285, 25;
	shf.l.wrap.b32 	%r291, %r285, %r284, 25;
	mov.b64 	%rd431, {%r291, %r290};
	xor.b64  	%rd432, %rd430, %rd431;
	xor.b64  	%rd433, %rd415, %rd369;
	xor.b64  	%rd434, %rd415, %rd392;
	and.b64  	%rd435, %rd434, %rd433;
	xor.b64  	%rd436, %rd435, %rd415;
	add.s64 	%rd437, %rd426, %rd436;
	add.s64 	%rd438, %rd437, %rd432;
	add.s64 	%rd439, %rd2663, %rd358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r292,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r293}, %rd427;
	}
	shf.r.wrap.b32 	%r294, %r293, %r292, 14;
	shf.r.wrap.b32 	%r295, %r292, %r293, 14;
	mov.b64 	%rd440, {%r295, %r294};
	shf.r.wrap.b32 	%r296, %r293, %r292, 18;
	shf.r.wrap.b32 	%r297, %r292, %r293, 18;
	mov.b64 	%rd441, {%r297, %r296};
	xor.b64  	%rd442, %rd441, %rd440;
	shf.l.wrap.b32 	%r298, %r292, %r293, 23;
	shf.l.wrap.b32 	%r299, %r293, %r292, 23;
	mov.b64 	%rd443, {%r299, %r298};
	xor.b64  	%rd444, %rd442, %rd443;
	xor.b64  	%rd445, %rd404, %rd381;
	and.b64  	%rd446, %rd427, %rd445;
	xor.b64  	%rd447, %rd446, %rd381;
	add.s64 	%rd448, %rd439, %rd447;
	add.s64 	%rd449, %rd448, %rd444;
	add.s64 	%rd450, %rd449, %rd369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd438;
	}
	shf.r.wrap.b32 	%r302, %r301, %r300, 28;
	shf.r.wrap.b32 	%r303, %r300, %r301, 28;
	mov.b64 	%rd451, {%r303, %r302};
	shf.l.wrap.b32 	%r304, %r300, %r301, 30;
	shf.l.wrap.b32 	%r305, %r301, %r300, 30;
	mov.b64 	%rd452, {%r305, %r304};
	xor.b64  	%rd453, %rd452, %rd451;
	shf.l.wrap.b32 	%r306, %r300, %r301, 25;
	shf.l.wrap.b32 	%r307, %r301, %r300, 25;
	mov.b64 	%rd454, {%r307, %r306};
	xor.b64  	%rd455, %rd453, %rd454;
	xor.b64  	%rd456, %rd438, %rd392;
	xor.b64  	%rd457, %rd438, %rd415;
	and.b64  	%rd458, %rd457, %rd456;
	xor.b64  	%rd459, %rd458, %rd438;
	add.s64 	%rd460, %rd449, %rd459;
	add.s64 	%rd461, %rd460, %rd455;
	add.s64 	%rd462, %rd2664, %rd381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r308,%dummy}, %rd450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r309}, %rd450;
	}
	shf.r.wrap.b32 	%r310, %r309, %r308, 14;
	shf.r.wrap.b32 	%r311, %r308, %r309, 14;
	mov.b64 	%rd463, {%r311, %r310};
	shf.r.wrap.b32 	%r312, %r309, %r308, 18;
	shf.r.wrap.b32 	%r313, %r308, %r309, 18;
	mov.b64 	%rd464, {%r313, %r312};
	xor.b64  	%rd465, %rd464, %rd463;
	shf.l.wrap.b32 	%r314, %r308, %r309, 23;
	shf.l.wrap.b32 	%r315, %r309, %r308, 23;
	mov.b64 	%rd466, {%r315, %r314};
	xor.b64  	%rd467, %rd465, %rd466;
	xor.b64  	%rd468, %rd427, %rd404;
	and.b64  	%rd469, %rd450, %rd468;
	xor.b64  	%rd470, %rd469, %rd404;
	add.s64 	%rd471, %rd462, %rd470;
	add.s64 	%rd472, %rd471, %rd467;
	add.s64 	%rd473, %rd472, %rd392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r316,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r317}, %rd461;
	}
	shf.r.wrap.b32 	%r318, %r317, %r316, 28;
	shf.r.wrap.b32 	%r319, %r316, %r317, 28;
	mov.b64 	%rd474, {%r319, %r318};
	shf.l.wrap.b32 	%r320, %r316, %r317, 30;
	shf.l.wrap.b32 	%r321, %r317, %r316, 30;
	mov.b64 	%rd475, {%r321, %r320};
	xor.b64  	%rd476, %rd475, %rd474;
	shf.l.wrap.b32 	%r322, %r316, %r317, 25;
	shf.l.wrap.b32 	%r323, %r317, %r316, 25;
	mov.b64 	%rd477, {%r323, %r322};
	xor.b64  	%rd478, %rd476, %rd477;
	xor.b64  	%rd479, %rd461, %rd415;
	xor.b64  	%rd480, %rd461, %rd438;
	and.b64  	%rd481, %rd480, %rd479;
	xor.b64  	%rd482, %rd481, %rd461;
	add.s64 	%rd483, %rd472, %rd482;
	add.s64 	%rd484, %rd483, %rd478;
	add.s64 	%rd485, %rd2665, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd473;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 14;
	shf.r.wrap.b32 	%r327, %r324, %r325, 14;
	mov.b64 	%rd486, {%r327, %r326};
	shf.r.wrap.b32 	%r328, %r325, %r324, 18;
	shf.r.wrap.b32 	%r329, %r324, %r325, 18;
	mov.b64 	%rd487, {%r329, %r328};
	xor.b64  	%rd488, %rd487, %rd486;
	shf.l.wrap.b32 	%r330, %r324, %r325, 23;
	shf.l.wrap.b32 	%r331, %r325, %r324, 23;
	mov.b64 	%rd489, {%r331, %r330};
	xor.b64  	%rd490, %rd488, %rd489;
	xor.b64  	%rd491, %rd450, %rd427;
	and.b64  	%rd492, %rd473, %rd491;
	xor.b64  	%rd493, %rd492, %rd427;
	add.s64 	%rd494, %rd485, %rd493;
	add.s64 	%rd495, %rd494, %rd490;
	add.s64 	%rd496, %rd495, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r332,%dummy}, %rd484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r333}, %rd484;
	}
	shf.r.wrap.b32 	%r334, %r333, %r332, 28;
	shf.r.wrap.b32 	%r335, %r332, %r333, 28;
	mov.b64 	%rd497, {%r335, %r334};
	shf.l.wrap.b32 	%r336, %r332, %r333, 30;
	shf.l.wrap.b32 	%r337, %r333, %r332, 30;
	mov.b64 	%rd498, {%r337, %r336};
	xor.b64  	%rd499, %rd498, %rd497;
	shf.l.wrap.b32 	%r338, %r332, %r333, 25;
	shf.l.wrap.b32 	%r339, %r333, %r332, 25;
	mov.b64 	%rd500, {%r339, %r338};
	xor.b64  	%rd501, %rd499, %rd500;
	xor.b64  	%rd502, %rd484, %rd438;
	xor.b64  	%rd503, %rd484, %rd461;
	and.b64  	%rd504, %rd503, %rd502;
	xor.b64  	%rd505, %rd504, %rd484;
	add.s64 	%rd506, %rd495, %rd505;
	add.s64 	%rd507, %rd506, %rd501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r340,%dummy}, %rd496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r341}, %rd496;
	}
	shf.r.wrap.b32 	%r342, %r341, %r340, 14;
	shf.r.wrap.b32 	%r343, %r340, %r341, 14;
	mov.b64 	%rd508, {%r343, %r342};
	shf.r.wrap.b32 	%r344, %r341, %r340, 18;
	shf.r.wrap.b32 	%r345, %r340, %r341, 18;
	mov.b64 	%rd509, {%r345, %r344};
	xor.b64  	%rd510, %rd509, %rd508;
	shf.l.wrap.b32 	%r346, %r340, %r341, 23;
	shf.l.wrap.b32 	%r347, %r341, %r340, 23;
	mov.b64 	%rd511, {%r347, %r346};
	xor.b64  	%rd512, %rd510, %rd511;
	xor.b64  	%rd513, %rd473, %rd450;
	and.b64  	%rd514, %rd496, %rd513;
	xor.b64  	%rd515, %rd514, %rd450;
	add.s64 	%rd516, %rd427, %rd2728;
	add.s64 	%rd517, %rd516, %rd2666;
	add.s64 	%rd518, %rd517, %rd515;
	add.s64 	%rd519, %rd518, %rd512;
	add.s64 	%rd520, %rd519, %rd438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r348,%dummy}, %rd507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd507;
	}
	shf.r.wrap.b32 	%r350, %r349, %r348, 28;
	shf.r.wrap.b32 	%r351, %r348, %r349, 28;
	mov.b64 	%rd521, {%r351, %r350};
	shf.l.wrap.b32 	%r352, %r348, %r349, 30;
	shf.l.wrap.b32 	%r353, %r349, %r348, 30;
	mov.b64 	%rd522, {%r353, %r352};
	xor.b64  	%rd523, %rd522, %rd521;
	shf.l.wrap.b32 	%r354, %r348, %r349, 25;
	shf.l.wrap.b32 	%r355, %r349, %r348, 25;
	mov.b64 	%rd524, {%r355, %r354};
	xor.b64  	%rd525, %rd523, %rd524;
	xor.b64  	%rd526, %rd507, %rd461;
	xor.b64  	%rd527, %rd507, %rd484;
	and.b64  	%rd528, %rd527, %rd526;
	xor.b64  	%rd529, %rd528, %rd507;
	add.s64 	%rd530, %rd519, %rd529;
	add.s64 	%rd531, %rd530, %rd525;
	add.s64 	%rd532, %rd184, %rd22;
	add.s64 	%rd533, %rd532, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r356,%dummy}, %rd533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r357}, %rd533;
	}
	shf.r.wrap.b32 	%r358, %r357, %r356, 19;
	shf.r.wrap.b32 	%r359, %r356, %r357, 19;
	mov.b64 	%rd534, {%r359, %r358};
	shf.l.wrap.b32 	%r360, %r356, %r357, 3;
	shf.l.wrap.b32 	%r361, %r357, %r356, 3;
	mov.b64 	%rd535, {%r361, %r360};
	shr.u64 	%rd536, %rd533, 6;
	xor.b64  	%rd537, %rd534, %rd536;
	xor.b64  	%rd538, %rd537, %rd535;
	add.s64 	%rd539, %rd1, %rd538;
	add.s64 	%rd540, %rd539, %rd25;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r362,%dummy}, %rd540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r363}, %rd540;
	}
	shf.r.wrap.b32 	%r364, %r363, %r362, 19;
	shf.r.wrap.b32 	%r365, %r362, %r363, 19;
	mov.b64 	%rd541, {%r365, %r364};
	shf.l.wrap.b32 	%r366, %r362, %r363, 3;
	shf.l.wrap.b32 	%r367, %r363, %r362, 3;
	mov.b64 	%rd542, {%r367, %r366};
	shr.u64 	%rd543, %rd540, 6;
	xor.b64  	%rd544, %rd541, %rd543;
	xor.b64  	%rd545, %rd544, %rd542;
	add.s64 	%rd546, %rd545, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r368,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r369}, %rd546;
	}
	shf.r.wrap.b32 	%r370, %r369, %r368, 19;
	shf.r.wrap.b32 	%r371, %r368, %r369, 19;
	mov.b64 	%rd547, {%r371, %r370};
	shf.l.wrap.b32 	%r372, %r368, %r369, 3;
	shf.l.wrap.b32 	%r373, %r369, %r368, 3;
	mov.b64 	%rd548, {%r373, %r372};
	shr.u64 	%rd549, %rd546, 6;
	xor.b64  	%rd550, %rd547, %rd549;
	xor.b64  	%rd551, %rd550, %rd548;
	add.s64 	%rd552, %rd2728, %rd551;
	add.s64 	%rd553, %rd552, %rd26;
	add.s64 	%rd554, %rd533, %rd29;
	add.s64 	%rd555, %rd554, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r374,%dummy}, %rd553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r375}, %rd553;
	}
	shf.r.wrap.b32 	%r376, %r375, %r374, 19;
	shf.r.wrap.b32 	%r377, %r374, %r375, 19;
	mov.b64 	%rd556, {%r377, %r376};
	shf.l.wrap.b32 	%r378, %r374, %r375, 3;
	shf.l.wrap.b32 	%r379, %r375, %r374, 3;
	mov.b64 	%rd557, {%r379, %r378};
	shr.u64 	%rd558, %rd553, 6;
	xor.b64  	%rd559, %rd556, %rd558;
	xor.b64  	%rd560, %rd559, %rd557;
	add.s64 	%rd561, %rd24, %rd560;
	add.s64 	%rd562, %rd561, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r380,%dummy}, %rd555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd555;
	}
	shf.r.wrap.b32 	%r382, %r381, %r380, 19;
	shf.r.wrap.b32 	%r383, %r380, %r381, 19;
	mov.b64 	%rd563, {%r383, %r382};
	shf.l.wrap.b32 	%r384, %r380, %r381, 3;
	shf.l.wrap.b32 	%r385, %r381, %r380, 3;
	mov.b64 	%rd564, {%r385, %r384};
	shr.u64 	%rd565, %rd555, 6;
	xor.b64  	%rd566, %rd563, %rd565;
	xor.b64  	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd540, %rd567;
	add.s64 	%rd569, %rd568, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r386,%dummy}, %rd562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r387}, %rd562;
	}
	shf.r.wrap.b32 	%r388, %r387, %r386, 19;
	shf.r.wrap.b32 	%r389, %r386, %r387, 19;
	mov.b64 	%rd570, {%r389, %r388};
	shf.l.wrap.b32 	%r390, %r386, %r387, 3;
	shf.l.wrap.b32 	%r391, %r387, %r386, 3;
	mov.b64 	%rd571, {%r391, %r390};
	shr.u64 	%rd572, %rd562, 6;
	xor.b64  	%rd573, %rd570, %rd572;
	xor.b64  	%rd574, %rd573, %rd571;
	add.s64 	%rd575, %rd27, %rd574;
	add.s64 	%rd576, %rd575, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r392,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd569;
	}
	shf.r.wrap.b32 	%r394, %r393, %r392, 19;
	shf.r.wrap.b32 	%r395, %r392, %r393, 19;
	mov.b64 	%rd577, {%r395, %r394};
	shf.l.wrap.b32 	%r396, %r392, %r393, 3;
	shf.l.wrap.b32 	%r397, %r393, %r392, 3;
	mov.b64 	%rd578, {%r397, %r396};
	shr.u64 	%rd579, %rd569, 6;
	xor.b64  	%rd580, %rd577, %rd579;
	xor.b64  	%rd581, %rd580, %rd578;
	add.s64 	%rd582, %rd546, %rd581;
	add.s64 	%rd583, %rd582, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r398,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r399}, %rd576;
	}
	shf.r.wrap.b32 	%r400, %r399, %r398, 19;
	shf.r.wrap.b32 	%r401, %r398, %r399, 19;
	mov.b64 	%rd584, {%r401, %r400};
	shf.l.wrap.b32 	%r402, %r398, %r399, 3;
	shf.l.wrap.b32 	%r403, %r399, %r398, 3;
	mov.b64 	%rd585, {%r403, %r402};
	shr.u64 	%rd586, %rd576, 6;
	xor.b64  	%rd587, %rd584, %rd586;
	xor.b64  	%rd588, %rd587, %rd585;
	add.s64 	%rd589, %rd28, %rd588;
	add.s64 	%rd590, %rd589, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r404,%dummy}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r405}, %rd583;
	}
	shf.r.wrap.b32 	%r406, %r405, %r404, 19;
	shf.r.wrap.b32 	%r407, %r404, %r405, 19;
	mov.b64 	%rd591, {%r407, %r406};
	shf.l.wrap.b32 	%r408, %r404, %r405, 3;
	shf.l.wrap.b32 	%r409, %r405, %r404, 3;
	mov.b64 	%rd592, {%r409, %r408};
	shr.u64 	%rd593, %rd583, 6;
	xor.b64  	%rd594, %rd591, %rd593;
	xor.b64  	%rd595, %rd594, %rd592;
	add.s64 	%rd596, %rd553, %rd595;
	add.s64 	%rd597, %rd596, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r410,%dummy}, %rd590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r411}, %rd590;
	}
	shf.r.wrap.b32 	%r412, %r411, %r410, 19;
	shf.r.wrap.b32 	%r413, %r410, %r411, 19;
	mov.b64 	%rd598, {%r413, %r412};
	shf.l.wrap.b32 	%r414, %r410, %r411, 3;
	shf.l.wrap.b32 	%r415, %r411, %r410, 3;
	mov.b64 	%rd599, {%r415, %r414};
	shr.u64 	%rd600, %rd590, 6;
	xor.b64  	%rd601, %rd598, %rd600;
	xor.b64  	%rd602, %rd601, %rd599;
	add.s64 	%rd603, %rd555, %rd602;
	add.s64 	%rd604, %rd603, %rd30;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd597;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 19;
	shf.r.wrap.b32 	%r419, %r416, %r417, 19;
	mov.b64 	%rd605, {%r419, %r418};
	shf.l.wrap.b32 	%r420, %r416, %r417, 3;
	shf.l.wrap.b32 	%r421, %r417, %r416, 3;
	mov.b64 	%rd606, {%r421, %r420};
	shr.u64 	%rd607, %rd597, 6;
	xor.b64  	%rd608, %rd605, %rd607;
	xor.b64  	%rd609, %rd608, %rd606;
	shf.r.wrap.b32 	%r422, %r357, %r356, 1;
	shf.r.wrap.b32 	%r423, %r356, %r357, 1;
	mov.b64 	%rd610, {%r423, %r422};
	shf.r.wrap.b32 	%r424, %r357, %r356, 8;
	shf.r.wrap.b32 	%r425, %r356, %r357, 8;
	mov.b64 	%rd611, {%r425, %r424};
	shr.u64 	%rd612, %rd533, 7;
	xor.b64  	%rd613, %rd610, %rd612;
	xor.b64  	%rd614, %rd613, %rd611;
	add.s64 	%rd615, %rd562, %rd2728;
	add.s64 	%rd616, %rd615, %rd609;
	add.s64 	%rd617, %rd616, %rd614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd520;
	}
	shf.r.wrap.b32 	%r428, %r427, %r426, 14;
	shf.r.wrap.b32 	%r429, %r426, %r427, 14;
	mov.b64 	%rd618, {%r429, %r428};
	shf.r.wrap.b32 	%r430, %r427, %r426, 18;
	shf.r.wrap.b32 	%r431, %r426, %r427, 18;
	mov.b64 	%rd619, {%r431, %r430};
	xor.b64  	%rd620, %rd619, %rd618;
	shf.l.wrap.b32 	%r432, %r426, %r427, 23;
	shf.l.wrap.b32 	%r433, %r427, %r426, 23;
	mov.b64 	%rd621, {%r433, %r432};
	xor.b64  	%rd622, %rd620, %rd621;
	xor.b64  	%rd623, %rd473, %rd496;
	and.b64  	%rd624, %rd623, %rd520;
	xor.b64  	%rd625, %rd624, %rd473;
	add.s64 	%rd626, %rd625, %rd450;
	add.s64 	%rd627, %rd626, %rd533;
	add.s64 	%rd628, %rd627, %rd2667;
	add.s64 	%rd629, %rd628, %rd622;
	add.s64 	%rd630, %rd629, %rd461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r434,%dummy}, %rd531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r435}, %rd531;
	}
	shf.r.wrap.b32 	%r436, %r435, %r434, 28;
	shf.r.wrap.b32 	%r437, %r434, %r435, 28;
	mov.b64 	%rd631, {%r437, %r436};
	shf.l.wrap.b32 	%r438, %r434, %r435, 30;
	shf.l.wrap.b32 	%r439, %r435, %r434, 30;
	mov.b64 	%rd632, {%r439, %r438};
	xor.b64  	%rd633, %rd632, %rd631;
	shf.l.wrap.b32 	%r440, %r434, %r435, 25;
	shf.l.wrap.b32 	%r441, %r435, %r434, 25;
	mov.b64 	%rd634, {%r441, %r440};
	xor.b64  	%rd635, %rd633, %rd634;
	xor.b64  	%rd636, %rd531, %rd484;
	xor.b64  	%rd637, %rd531, %rd507;
	and.b64  	%rd638, %rd637, %rd636;
	xor.b64  	%rd639, %rd638, %rd531;
	add.s64 	%rd640, %rd629, %rd639;
	add.s64 	%rd641, %rd640, %rd635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r442,%dummy}, %rd630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r443}, %rd630;
	}
	shf.r.wrap.b32 	%r444, %r443, %r442, 14;
	shf.r.wrap.b32 	%r445, %r442, %r443, 14;
	mov.b64 	%rd642, {%r445, %r444};
	shf.r.wrap.b32 	%r446, %r443, %r442, 18;
	shf.r.wrap.b32 	%r447, %r442, %r443, 18;
	mov.b64 	%rd643, {%r447, %r446};
	xor.b64  	%rd644, %rd643, %rd642;
	shf.l.wrap.b32 	%r448, %r442, %r443, 23;
	shf.l.wrap.b32 	%r449, %r443, %r442, 23;
	mov.b64 	%rd645, {%r449, %r448};
	xor.b64  	%rd646, %rd644, %rd645;
	xor.b64  	%rd647, %rd496, %rd520;
	and.b64  	%rd648, %rd630, %rd647;
	xor.b64  	%rd649, %rd648, %rd496;
	add.s64 	%rd650, %rd24, %rd473;
	add.s64 	%rd651, %rd650, %rd2668;
	add.s64 	%rd652, %rd651, %rd649;
	add.s64 	%rd653, %rd652, %rd646;
	add.s64 	%rd654, %rd653, %rd484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r450,%dummy}, %rd641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r451}, %rd641;
	}
	shf.r.wrap.b32 	%r452, %r451, %r450, 28;
	shf.r.wrap.b32 	%r453, %r450, %r451, 28;
	mov.b64 	%rd655, {%r453, %r452};
	shf.l.wrap.b32 	%r454, %r450, %r451, 30;
	shf.l.wrap.b32 	%r455, %r451, %r450, 30;
	mov.b64 	%rd656, {%r455, %r454};
	xor.b64  	%rd657, %rd656, %rd655;
	shf.l.wrap.b32 	%r456, %r450, %r451, 25;
	shf.l.wrap.b32 	%r457, %r451, %r450, 25;
	mov.b64 	%rd658, {%r457, %r456};
	xor.b64  	%rd659, %rd657, %rd658;
	xor.b64  	%rd660, %rd641, %rd507;
	xor.b64  	%rd661, %rd641, %rd531;
	and.b64  	%rd662, %rd661, %rd660;
	xor.b64  	%rd663, %rd662, %rd641;
	add.s64 	%rd664, %rd653, %rd663;
	add.s64 	%rd665, %rd664, %rd659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r459}, %rd654;
	}
	shf.r.wrap.b32 	%r460, %r459, %r458, 14;
	shf.r.wrap.b32 	%r461, %r458, %r459, 14;
	mov.b64 	%rd666, {%r461, %r460};
	shf.r.wrap.b32 	%r462, %r459, %r458, 18;
	shf.r.wrap.b32 	%r463, %r458, %r459, 18;
	mov.b64 	%rd667, {%r463, %r462};
	xor.b64  	%rd668, %rd667, %rd666;
	shf.l.wrap.b32 	%r464, %r458, %r459, 23;
	shf.l.wrap.b32 	%r465, %r459, %r458, 23;
	mov.b64 	%rd669, {%r465, %r464};
	xor.b64  	%rd670, %rd668, %rd669;
	xor.b64  	%rd671, %rd630, %rd520;
	and.b64  	%rd672, %rd654, %rd671;
	xor.b64  	%rd673, %rd672, %rd520;
	add.s64 	%rd674, %rd540, %rd496;
	add.s64 	%rd675, %rd674, %rd2669;
	add.s64 	%rd676, %rd675, %rd673;
	add.s64 	%rd677, %rd676, %rd670;
	add.s64 	%rd678, %rd677, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r466,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r467}, %rd665;
	}
	shf.r.wrap.b32 	%r468, %r467, %r466, 28;
	shf.r.wrap.b32 	%r469, %r466, %r467, 28;
	mov.b64 	%rd679, {%r469, %r468};
	shf.l.wrap.b32 	%r470, %r466, %r467, 30;
	shf.l.wrap.b32 	%r471, %r467, %r466, 30;
	mov.b64 	%rd680, {%r471, %r470};
	xor.b64  	%rd681, %rd680, %rd679;
	shf.l.wrap.b32 	%r472, %r466, %r467, 25;
	shf.l.wrap.b32 	%r473, %r467, %r466, 25;
	mov.b64 	%rd682, {%r473, %r472};
	xor.b64  	%rd683, %rd681, %rd682;
	xor.b64  	%rd684, %rd665, %rd531;
	xor.b64  	%rd685, %rd665, %rd641;
	and.b64  	%rd686, %rd685, %rd684;
	xor.b64  	%rd687, %rd686, %rd665;
	add.s64 	%rd688, %rd677, %rd687;
	add.s64 	%rd689, %rd688, %rd683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r474,%dummy}, %rd678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r475}, %rd678;
	}
	shf.r.wrap.b32 	%r476, %r475, %r474, 14;
	shf.r.wrap.b32 	%r477, %r474, %r475, 14;
	mov.b64 	%rd690, {%r477, %r476};
	shf.r.wrap.b32 	%r478, %r475, %r474, 18;
	shf.r.wrap.b32 	%r479, %r474, %r475, 18;
	mov.b64 	%rd691, {%r479, %r478};
	xor.b64  	%rd692, %rd691, %rd690;
	shf.l.wrap.b32 	%r480, %r474, %r475, 23;
	shf.l.wrap.b32 	%r481, %r475, %r474, 23;
	mov.b64 	%rd693, {%r481, %r480};
	xor.b64  	%rd694, %rd692, %rd693;
	xor.b64  	%rd695, %rd654, %rd630;
	and.b64  	%rd696, %rd678, %rd695;
	xor.b64  	%rd697, %rd696, %rd630;
	add.s64 	%rd698, %rd27, %rd520;
	add.s64 	%rd699, %rd698, %rd2670;
	add.s64 	%rd700, %rd699, %rd697;
	add.s64 	%rd701, %rd700, %rd694;
	add.s64 	%rd702, %rd701, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r482,%dummy}, %rd689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r483}, %rd689;
	}
	shf.r.wrap.b32 	%r484, %r483, %r482, 28;
	shf.r.wrap.b32 	%r485, %r482, %r483, 28;
	mov.b64 	%rd703, {%r485, %r484};
	shf.l.wrap.b32 	%r486, %r482, %r483, 30;
	shf.l.wrap.b32 	%r487, %r483, %r482, 30;
	mov.b64 	%rd704, {%r487, %r486};
	xor.b64  	%rd705, %rd704, %rd703;
	shf.l.wrap.b32 	%r488, %r482, %r483, 25;
	shf.l.wrap.b32 	%r489, %r483, %r482, 25;
	mov.b64 	%rd706, {%r489, %r488};
	xor.b64  	%rd707, %rd705, %rd706;
	xor.b64  	%rd708, %rd689, %rd641;
	xor.b64  	%rd709, %rd689, %rd665;
	and.b64  	%rd710, %rd709, %rd708;
	xor.b64  	%rd711, %rd710, %rd689;
	add.s64 	%rd712, %rd701, %rd711;
	add.s64 	%rd713, %rd712, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r490,%dummy}, %rd702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r491}, %rd702;
	}
	shf.r.wrap.b32 	%r492, %r491, %r490, 14;
	shf.r.wrap.b32 	%r493, %r490, %r491, 14;
	mov.b64 	%rd714, {%r493, %r492};
	shf.r.wrap.b32 	%r494, %r491, %r490, 18;
	shf.r.wrap.b32 	%r495, %r490, %r491, 18;
	mov.b64 	%rd715, {%r495, %r494};
	xor.b64  	%rd716, %rd715, %rd714;
	shf.l.wrap.b32 	%r496, %r490, %r491, 23;
	shf.l.wrap.b32 	%r497, %r491, %r490, 23;
	mov.b64 	%rd717, {%r497, %r496};
	xor.b64  	%rd718, %rd716, %rd717;
	xor.b64  	%rd719, %rd678, %rd654;
	and.b64  	%rd720, %rd702, %rd719;
	xor.b64  	%rd721, %rd720, %rd654;
	add.s64 	%rd722, %rd630, %rd546;
	add.s64 	%rd723, %rd722, %rd2671;
	add.s64 	%rd724, %rd723, %rd721;
	add.s64 	%rd725, %rd724, %rd718;
	add.s64 	%rd726, %rd725, %rd641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r498,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r499}, %rd713;
	}
	shf.r.wrap.b32 	%r500, %r499, %r498, 28;
	shf.r.wrap.b32 	%r501, %r498, %r499, 28;
	mov.b64 	%rd727, {%r501, %r500};
	shf.l.wrap.b32 	%r502, %r498, %r499, 30;
	shf.l.wrap.b32 	%r503, %r499, %r498, 30;
	mov.b64 	%rd728, {%r503, %r502};
	xor.b64  	%rd729, %rd728, %rd727;
	shf.l.wrap.b32 	%r504, %r498, %r499, 25;
	shf.l.wrap.b32 	%r505, %r499, %r498, 25;
	mov.b64 	%rd730, {%r505, %r504};
	xor.b64  	%rd731, %rd729, %rd730;
	xor.b64  	%rd732, %rd713, %rd665;
	xor.b64  	%rd733, %rd713, %rd689;
	and.b64  	%rd734, %rd733, %rd732;
	xor.b64  	%rd735, %rd734, %rd713;
	add.s64 	%rd736, %rd725, %rd735;
	add.s64 	%rd737, %rd736, %rd731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd726;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 14;
	shf.r.wrap.b32 	%r509, %r506, %r507, 14;
	mov.b64 	%rd738, {%r509, %r508};
	shf.r.wrap.b32 	%r510, %r507, %r506, 18;
	shf.r.wrap.b32 	%r511, %r506, %r507, 18;
	mov.b64 	%rd739, {%r511, %r510};
	xor.b64  	%rd740, %rd739, %rd738;
	shf.l.wrap.b32 	%r512, %r506, %r507, 23;
	shf.l.wrap.b32 	%r513, %r507, %r506, 23;
	mov.b64 	%rd741, {%r513, %r512};
	xor.b64  	%rd742, %rd740, %rd741;
	xor.b64  	%rd743, %rd702, %rd678;
	and.b64  	%rd744, %rd726, %rd743;
	xor.b64  	%rd745, %rd744, %rd678;
	add.s64 	%rd746, %rd654, %rd28;
	add.s64 	%rd747, %rd746, %rd2672;
	add.s64 	%rd748, %rd747, %rd745;
	add.s64 	%rd749, %rd748, %rd742;
	add.s64 	%rd750, %rd749, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r514,%dummy}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r515}, %rd737;
	}
	shf.r.wrap.b32 	%r516, %r515, %r514, 28;
	shf.r.wrap.b32 	%r517, %r514, %r515, 28;
	mov.b64 	%rd751, {%r517, %r516};
	shf.l.wrap.b32 	%r518, %r514, %r515, 30;
	shf.l.wrap.b32 	%r519, %r515, %r514, 30;
	mov.b64 	%rd752, {%r519, %r518};
	xor.b64  	%rd753, %rd752, %rd751;
	shf.l.wrap.b32 	%r520, %r514, %r515, 25;
	shf.l.wrap.b32 	%r521, %r515, %r514, 25;
	mov.b64 	%rd754, {%r521, %r520};
	xor.b64  	%rd755, %rd753, %rd754;
	xor.b64  	%rd756, %rd737, %rd689;
	xor.b64  	%rd757, %rd737, %rd713;
	and.b64  	%rd758, %rd757, %rd756;
	xor.b64  	%rd759, %rd758, %rd737;
	add.s64 	%rd760, %rd749, %rd759;
	add.s64 	%rd761, %rd760, %rd755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r522,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r523}, %rd750;
	}
	shf.r.wrap.b32 	%r524, %r523, %r522, 14;
	shf.r.wrap.b32 	%r525, %r522, %r523, 14;
	mov.b64 	%rd762, {%r525, %r524};
	shf.r.wrap.b32 	%r526, %r523, %r522, 18;
	shf.r.wrap.b32 	%r527, %r522, %r523, 18;
	mov.b64 	%rd763, {%r527, %r526};
	xor.b64  	%rd764, %rd763, %rd762;
	shf.l.wrap.b32 	%r528, %r522, %r523, 23;
	shf.l.wrap.b32 	%r529, %r523, %r522, 23;
	mov.b64 	%rd765, {%r529, %r528};
	xor.b64  	%rd766, %rd764, %rd765;
	xor.b64  	%rd767, %rd726, %rd702;
	and.b64  	%rd768, %rd750, %rd767;
	xor.b64  	%rd769, %rd768, %rd702;
	add.s64 	%rd770, %rd678, %rd553;
	add.s64 	%rd771, %rd770, %rd2673;
	add.s64 	%rd772, %rd771, %rd769;
	add.s64 	%rd773, %rd772, %rd766;
	add.s64 	%rd774, %rd773, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r530,%dummy}, %rd761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r531}, %rd761;
	}
	shf.r.wrap.b32 	%r532, %r531, %r530, 28;
	shf.r.wrap.b32 	%r533, %r530, %r531, 28;
	mov.b64 	%rd775, {%r533, %r532};
	shf.l.wrap.b32 	%r534, %r530, %r531, 30;
	shf.l.wrap.b32 	%r535, %r531, %r530, 30;
	mov.b64 	%rd776, {%r535, %r534};
	xor.b64  	%rd777, %rd776, %rd775;
	shf.l.wrap.b32 	%r536, %r530, %r531, 25;
	shf.l.wrap.b32 	%r537, %r531, %r530, 25;
	mov.b64 	%rd778, {%r537, %r536};
	xor.b64  	%rd779, %rd777, %rd778;
	xor.b64  	%rd780, %rd761, %rd713;
	xor.b64  	%rd781, %rd761, %rd737;
	and.b64  	%rd782, %rd781, %rd780;
	xor.b64  	%rd783, %rd782, %rd761;
	add.s64 	%rd784, %rd773, %rd783;
	add.s64 	%rd785, %rd784, %rd779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r539}, %rd774;
	}
	shf.r.wrap.b32 	%r540, %r539, %r538, 14;
	shf.r.wrap.b32 	%r541, %r538, %r539, 14;
	mov.b64 	%rd786, {%r541, %r540};
	shf.r.wrap.b32 	%r542, %r539, %r538, 18;
	shf.r.wrap.b32 	%r543, %r538, %r539, 18;
	mov.b64 	%rd787, {%r543, %r542};
	xor.b64  	%rd788, %rd787, %rd786;
	shf.l.wrap.b32 	%r544, %r538, %r539, 23;
	shf.l.wrap.b32 	%r545, %r539, %r538, 23;
	mov.b64 	%rd789, {%r545, %r544};
	xor.b64  	%rd790, %rd788, %rd789;
	xor.b64  	%rd791, %rd750, %rd726;
	and.b64  	%rd792, %rd774, %rd791;
	xor.b64  	%rd793, %rd792, %rd726;
	add.s64 	%rd794, %rd702, %rd555;
	add.s64 	%rd795, %rd794, %rd2674;
	add.s64 	%rd796, %rd795, %rd793;
	add.s64 	%rd797, %rd796, %rd790;
	add.s64 	%rd798, %rd797, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd785;
	}
	shf.r.wrap.b32 	%r548, %r547, %r546, 28;
	shf.r.wrap.b32 	%r549, %r546, %r547, 28;
	mov.b64 	%rd799, {%r549, %r548};
	shf.l.wrap.b32 	%r550, %r546, %r547, 30;
	shf.l.wrap.b32 	%r551, %r547, %r546, 30;
	mov.b64 	%rd800, {%r551, %r550};
	xor.b64  	%rd801, %rd800, %rd799;
	shf.l.wrap.b32 	%r552, %r546, %r547, 25;
	shf.l.wrap.b32 	%r553, %r547, %r546, 25;
	mov.b64 	%rd802, {%r553, %r552};
	xor.b64  	%rd803, %rd801, %rd802;
	xor.b64  	%rd804, %rd785, %rd737;
	xor.b64  	%rd805, %rd785, %rd761;
	and.b64  	%rd806, %rd805, %rd804;
	xor.b64  	%rd807, %rd806, %rd785;
	add.s64 	%rd808, %rd797, %rd807;
	add.s64 	%rd809, %rd808, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r555}, %rd798;
	}
	shf.r.wrap.b32 	%r556, %r555, %r554, 14;
	shf.r.wrap.b32 	%r557, %r554, %r555, 14;
	mov.b64 	%rd810, {%r557, %r556};
	shf.r.wrap.b32 	%r558, %r555, %r554, 18;
	shf.r.wrap.b32 	%r559, %r554, %r555, 18;
	mov.b64 	%rd811, {%r559, %r558};
	xor.b64  	%rd812, %rd811, %rd810;
	shf.l.wrap.b32 	%r560, %r554, %r555, 23;
	shf.l.wrap.b32 	%r561, %r555, %r554, 23;
	mov.b64 	%rd813, {%r561, %r560};
	xor.b64  	%rd814, %rd812, %rd813;
	xor.b64  	%rd815, %rd774, %rd750;
	and.b64  	%rd816, %rd798, %rd815;
	xor.b64  	%rd817, %rd816, %rd750;
	add.s64 	%rd818, %rd726, %rd562;
	add.s64 	%rd819, %rd818, %rd2675;
	add.s64 	%rd820, %rd819, %rd817;
	add.s64 	%rd821, %rd820, %rd814;
	add.s64 	%rd822, %rd821, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd809;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 28;
	shf.r.wrap.b32 	%r565, %r562, %r563, 28;
	mov.b64 	%rd823, {%r565, %r564};
	shf.l.wrap.b32 	%r566, %r562, %r563, 30;
	shf.l.wrap.b32 	%r567, %r563, %r562, 30;
	mov.b64 	%rd824, {%r567, %r566};
	xor.b64  	%rd825, %rd824, %rd823;
	shf.l.wrap.b32 	%r568, %r562, %r563, 25;
	shf.l.wrap.b32 	%r569, %r563, %r562, 25;
	mov.b64 	%rd826, {%r569, %r568};
	xor.b64  	%rd827, %rd825, %rd826;
	xor.b64  	%rd828, %rd809, %rd761;
	xor.b64  	%rd829, %rd809, %rd785;
	and.b64  	%rd830, %rd829, %rd828;
	xor.b64  	%rd831, %rd830, %rd809;
	add.s64 	%rd832, %rd821, %rd831;
	add.s64 	%rd833, %rd832, %rd827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd822;
	}
	shf.r.wrap.b32 	%r572, %r571, %r570, 14;
	shf.r.wrap.b32 	%r573, %r570, %r571, 14;
	mov.b64 	%rd834, {%r573, %r572};
	shf.r.wrap.b32 	%r574, %r571, %r570, 18;
	shf.r.wrap.b32 	%r575, %r570, %r571, 18;
	mov.b64 	%rd835, {%r575, %r574};
	xor.b64  	%rd836, %rd835, %rd834;
	shf.l.wrap.b32 	%r576, %r570, %r571, 23;
	shf.l.wrap.b32 	%r577, %r571, %r570, 23;
	mov.b64 	%rd837, {%r577, %r576};
	xor.b64  	%rd838, %rd836, %rd837;
	xor.b64  	%rd839, %rd798, %rd774;
	and.b64  	%rd840, %rd822, %rd839;
	xor.b64  	%rd841, %rd840, %rd774;
	add.s64 	%rd842, %rd750, %rd569;
	add.s64 	%rd843, %rd842, %rd2676;
	add.s64 	%rd844, %rd843, %rd841;
	add.s64 	%rd845, %rd844, %rd838;
	add.s64 	%rd846, %rd845, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r579}, %rd833;
	}
	shf.r.wrap.b32 	%r580, %r579, %r578, 28;
	shf.r.wrap.b32 	%r581, %r578, %r579, 28;
	mov.b64 	%rd847, {%r581, %r580};
	shf.l.wrap.b32 	%r582, %r578, %r579, 30;
	shf.l.wrap.b32 	%r583, %r579, %r578, 30;
	mov.b64 	%rd848, {%r583, %r582};
	xor.b64  	%rd849, %rd848, %rd847;
	shf.l.wrap.b32 	%r584, %r578, %r579, 25;
	shf.l.wrap.b32 	%r585, %r579, %r578, 25;
	mov.b64 	%rd850, {%r585, %r584};
	xor.b64  	%rd851, %rd849, %rd850;
	xor.b64  	%rd852, %rd833, %rd785;
	xor.b64  	%rd853, %rd833, %rd809;
	and.b64  	%rd854, %rd853, %rd852;
	xor.b64  	%rd855, %rd854, %rd833;
	add.s64 	%rd856, %rd845, %rd855;
	add.s64 	%rd857, %rd856, %rd851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r587}, %rd846;
	}
	shf.r.wrap.b32 	%r588, %r587, %r586, 14;
	shf.r.wrap.b32 	%r589, %r586, %r587, 14;
	mov.b64 	%rd858, {%r589, %r588};
	shf.r.wrap.b32 	%r590, %r587, %r586, 18;
	shf.r.wrap.b32 	%r591, %r586, %r587, 18;
	mov.b64 	%rd859, {%r591, %r590};
	xor.b64  	%rd860, %rd859, %rd858;
	shf.l.wrap.b32 	%r592, %r586, %r587, 23;
	shf.l.wrap.b32 	%r593, %r587, %r586, 23;
	mov.b64 	%rd861, {%r593, %r592};
	xor.b64  	%rd862, %rd860, %rd861;
	xor.b64  	%rd863, %rd822, %rd798;
	and.b64  	%rd864, %rd846, %rd863;
	xor.b64  	%rd865, %rd864, %rd798;
	add.s64 	%rd866, %rd774, %rd576;
	add.s64 	%rd867, %rd866, %rd2677;
	add.s64 	%rd868, %rd867, %rd865;
	add.s64 	%rd869, %rd868, %rd862;
	add.s64 	%rd870, %rd869, %rd785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r594,%dummy}, %rd857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r595}, %rd857;
	}
	shf.r.wrap.b32 	%r596, %r595, %r594, 28;
	shf.r.wrap.b32 	%r597, %r594, %r595, 28;
	mov.b64 	%rd871, {%r597, %r596};
	shf.l.wrap.b32 	%r598, %r594, %r595, 30;
	shf.l.wrap.b32 	%r599, %r595, %r594, 30;
	mov.b64 	%rd872, {%r599, %r598};
	xor.b64  	%rd873, %rd872, %rd871;
	shf.l.wrap.b32 	%r600, %r594, %r595, 25;
	shf.l.wrap.b32 	%r601, %r595, %r594, 25;
	mov.b64 	%rd874, {%r601, %r600};
	xor.b64  	%rd875, %rd873, %rd874;
	xor.b64  	%rd876, %rd857, %rd809;
	xor.b64  	%rd877, %rd857, %rd833;
	and.b64  	%rd878, %rd877, %rd876;
	xor.b64  	%rd879, %rd878, %rd857;
	add.s64 	%rd880, %rd869, %rd879;
	add.s64 	%rd881, %rd880, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r603}, %rd870;
	}
	shf.r.wrap.b32 	%r604, %r603, %r602, 14;
	shf.r.wrap.b32 	%r605, %r602, %r603, 14;
	mov.b64 	%rd882, {%r605, %r604};
	shf.r.wrap.b32 	%r606, %r603, %r602, 18;
	shf.r.wrap.b32 	%r607, %r602, %r603, 18;
	mov.b64 	%rd883, {%r607, %r606};
	xor.b64  	%rd884, %rd883, %rd882;
	shf.l.wrap.b32 	%r608, %r602, %r603, 23;
	shf.l.wrap.b32 	%r609, %r603, %r602, 23;
	mov.b64 	%rd885, {%r609, %r608};
	xor.b64  	%rd886, %rd884, %rd885;
	xor.b64  	%rd887, %rd846, %rd822;
	and.b64  	%rd888, %rd870, %rd887;
	xor.b64  	%rd889, %rd888, %rd822;
	add.s64 	%rd890, %rd798, %rd583;
	add.s64 	%rd891, %rd890, %rd2678;
	add.s64 	%rd892, %rd891, %rd889;
	add.s64 	%rd893, %rd892, %rd886;
	add.s64 	%rd894, %rd893, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r611}, %rd881;
	}
	shf.r.wrap.b32 	%r612, %r611, %r610, 28;
	shf.r.wrap.b32 	%r613, %r610, %r611, 28;
	mov.b64 	%rd895, {%r613, %r612};
	shf.l.wrap.b32 	%r614, %r610, %r611, 30;
	shf.l.wrap.b32 	%r615, %r611, %r610, 30;
	mov.b64 	%rd896, {%r615, %r614};
	xor.b64  	%rd897, %rd896, %rd895;
	shf.l.wrap.b32 	%r616, %r610, %r611, 25;
	shf.l.wrap.b32 	%r617, %r611, %r610, 25;
	mov.b64 	%rd898, {%r617, %r616};
	xor.b64  	%rd899, %rd897, %rd898;
	xor.b64  	%rd900, %rd881, %rd833;
	xor.b64  	%rd901, %rd881, %rd857;
	and.b64  	%rd902, %rd901, %rd900;
	xor.b64  	%rd903, %rd902, %rd881;
	add.s64 	%rd904, %rd893, %rd903;
	add.s64 	%rd905, %rd904, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd894;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 14;
	shf.r.wrap.b32 	%r621, %r618, %r619, 14;
	mov.b64 	%rd906, {%r621, %r620};
	shf.r.wrap.b32 	%r622, %r619, %r618, 18;
	shf.r.wrap.b32 	%r623, %r618, %r619, 18;
	mov.b64 	%rd907, {%r623, %r622};
	xor.b64  	%rd908, %rd907, %rd906;
	shf.l.wrap.b32 	%r624, %r618, %r619, 23;
	shf.l.wrap.b32 	%r625, %r619, %r618, 23;
	mov.b64 	%rd909, {%r625, %r624};
	xor.b64  	%rd910, %rd908, %rd909;
	xor.b64  	%rd911, %rd870, %rd846;
	and.b64  	%rd912, %rd894, %rd911;
	xor.b64  	%rd913, %rd912, %rd846;
	add.s64 	%rd914, %rd822, %rd590;
	add.s64 	%rd915, %rd914, %rd2679;
	add.s64 	%rd916, %rd915, %rd913;
	add.s64 	%rd917, %rd916, %rd910;
	add.s64 	%rd918, %rd917, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd905;
	}
	shf.r.wrap.b32 	%r628, %r627, %r626, 28;
	shf.r.wrap.b32 	%r629, %r626, %r627, 28;
	mov.b64 	%rd919, {%r629, %r628};
	shf.l.wrap.b32 	%r630, %r626, %r627, 30;
	shf.l.wrap.b32 	%r631, %r627, %r626, 30;
	mov.b64 	%rd920, {%r631, %r630};
	xor.b64  	%rd921, %rd920, %rd919;
	shf.l.wrap.b32 	%r632, %r626, %r627, 25;
	shf.l.wrap.b32 	%r633, %r627, %r626, 25;
	mov.b64 	%rd922, {%r633, %r632};
	xor.b64  	%rd923, %rd921, %rd922;
	xor.b64  	%rd924, %rd905, %rd857;
	xor.b64  	%rd925, %rd905, %rd881;
	and.b64  	%rd926, %rd925, %rd924;
	xor.b64  	%rd927, %rd926, %rd905;
	add.s64 	%rd928, %rd917, %rd927;
	add.s64 	%rd929, %rd928, %rd923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r635}, %rd918;
	}
	shf.r.wrap.b32 	%r636, %r635, %r634, 14;
	shf.r.wrap.b32 	%r637, %r634, %r635, 14;
	mov.b64 	%rd930, {%r637, %r636};
	shf.r.wrap.b32 	%r638, %r635, %r634, 18;
	shf.r.wrap.b32 	%r639, %r634, %r635, 18;
	mov.b64 	%rd931, {%r639, %r638};
	xor.b64  	%rd932, %rd931, %rd930;
	shf.l.wrap.b32 	%r640, %r634, %r635, 23;
	shf.l.wrap.b32 	%r641, %r635, %r634, 23;
	mov.b64 	%rd933, {%r641, %r640};
	xor.b64  	%rd934, %rd932, %rd933;
	xor.b64  	%rd935, %rd894, %rd870;
	and.b64  	%rd936, %rd918, %rd935;
	xor.b64  	%rd937, %rd936, %rd870;
	add.s64 	%rd938, %rd846, %rd597;
	add.s64 	%rd939, %rd938, %rd2680;
	add.s64 	%rd940, %rd939, %rd937;
	add.s64 	%rd941, %rd940, %rd934;
	add.s64 	%rd942, %rd941, %rd857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r642,%dummy}, %rd929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r643}, %rd929;
	}
	shf.r.wrap.b32 	%r644, %r643, %r642, 28;
	shf.r.wrap.b32 	%r645, %r642, %r643, 28;
	mov.b64 	%rd943, {%r645, %r644};
	shf.l.wrap.b32 	%r646, %r642, %r643, 30;
	shf.l.wrap.b32 	%r647, %r643, %r642, 30;
	mov.b64 	%rd944, {%r647, %r646};
	xor.b64  	%rd945, %rd944, %rd943;
	shf.l.wrap.b32 	%r648, %r642, %r643, 25;
	shf.l.wrap.b32 	%r649, %r643, %r642, 25;
	mov.b64 	%rd946, {%r649, %r648};
	xor.b64  	%rd947, %rd945, %rd946;
	xor.b64  	%rd948, %rd929, %rd881;
	xor.b64  	%rd949, %rd929, %rd905;
	and.b64  	%rd950, %rd949, %rd948;
	xor.b64  	%rd951, %rd950, %rd929;
	add.s64 	%rd952, %rd941, %rd951;
	add.s64 	%rd953, %rd952, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r650,%dummy}, %rd942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r651}, %rd942;
	}
	shf.r.wrap.b32 	%r652, %r651, %r650, 14;
	shf.r.wrap.b32 	%r653, %r650, %r651, 14;
	mov.b64 	%rd954, {%r653, %r652};
	shf.r.wrap.b32 	%r654, %r651, %r650, 18;
	shf.r.wrap.b32 	%r655, %r650, %r651, 18;
	mov.b64 	%rd955, {%r655, %r654};
	xor.b64  	%rd956, %rd955, %rd954;
	shf.l.wrap.b32 	%r656, %r650, %r651, 23;
	shf.l.wrap.b32 	%r657, %r651, %r650, 23;
	mov.b64 	%rd957, {%r657, %r656};
	xor.b64  	%rd958, %rd956, %rd957;
	xor.b64  	%rd959, %rd918, %rd894;
	and.b64  	%rd960, %rd942, %rd959;
	xor.b64  	%rd961, %rd960, %rd894;
	add.s64 	%rd962, %rd870, %rd604;
	add.s64 	%rd963, %rd962, %rd2681;
	add.s64 	%rd964, %rd963, %rd961;
	add.s64 	%rd965, %rd964, %rd958;
	add.s64 	%rd966, %rd965, %rd881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r658,%dummy}, %rd953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r659}, %rd953;
	}
	shf.r.wrap.b32 	%r660, %r659, %r658, 28;
	shf.r.wrap.b32 	%r661, %r658, %r659, 28;
	mov.b64 	%rd967, {%r661, %r660};
	shf.l.wrap.b32 	%r662, %r658, %r659, 30;
	shf.l.wrap.b32 	%r663, %r659, %r658, 30;
	mov.b64 	%rd968, {%r663, %r662};
	xor.b64  	%rd969, %rd968, %rd967;
	shf.l.wrap.b32 	%r664, %r658, %r659, 25;
	shf.l.wrap.b32 	%r665, %r659, %r658, 25;
	mov.b64 	%rd970, {%r665, %r664};
	xor.b64  	%rd971, %rd969, %rd970;
	xor.b64  	%rd972, %rd953, %rd905;
	xor.b64  	%rd973, %rd953, %rd929;
	and.b64  	%rd974, %rd973, %rd972;
	xor.b64  	%rd975, %rd974, %rd953;
	add.s64 	%rd976, %rd965, %rd975;
	add.s64 	%rd977, %rd976, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r667}, %rd966;
	}
	shf.r.wrap.b32 	%r668, %r667, %r666, 14;
	shf.r.wrap.b32 	%r669, %r666, %r667, 14;
	mov.b64 	%rd978, {%r669, %r668};
	shf.r.wrap.b32 	%r670, %r667, %r666, 18;
	shf.r.wrap.b32 	%r671, %r666, %r667, 18;
	mov.b64 	%rd979, {%r671, %r670};
	xor.b64  	%rd980, %rd979, %rd978;
	shf.l.wrap.b32 	%r672, %r666, %r667, 23;
	shf.l.wrap.b32 	%r673, %r667, %r666, 23;
	mov.b64 	%rd981, {%r673, %r672};
	xor.b64  	%rd982, %rd980, %rd981;
	xor.b64  	%rd983, %rd942, %rd918;
	and.b64  	%rd984, %rd966, %rd983;
	xor.b64  	%rd985, %rd984, %rd918;
	add.s64 	%rd986, %rd894, %rd617;
	add.s64 	%rd987, %rd986, %rd2682;
	add.s64 	%rd988, %rd987, %rd985;
	add.s64 	%rd989, %rd988, %rd982;
	add.s64 	%rd990, %rd989, %rd905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd977;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 28;
	shf.r.wrap.b32 	%r677, %r674, %r675, 28;
	mov.b64 	%rd991, {%r677, %r676};
	shf.l.wrap.b32 	%r678, %r674, %r675, 30;
	shf.l.wrap.b32 	%r679, %r675, %r674, 30;
	mov.b64 	%rd992, {%r679, %r678};
	xor.b64  	%rd993, %rd992, %rd991;
	shf.l.wrap.b32 	%r680, %r674, %r675, 25;
	shf.l.wrap.b32 	%r681, %r675, %r674, 25;
	mov.b64 	%rd994, {%r681, %r680};
	xor.b64  	%rd995, %rd993, %rd994;
	xor.b64  	%rd996, %rd977, %rd929;
	xor.b64  	%rd997, %rd977, %rd953;
	and.b64  	%rd998, %rd997, %rd996;
	xor.b64  	%rd999, %rd998, %rd977;
	add.s64 	%rd1000, %rd989, %rd999;
	add.s64 	%rd1001, %rd1000, %rd995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd604;
	}
	shf.r.wrap.b32 	%r684, %r683, %r682, 19;
	shf.r.wrap.b32 	%r685, %r682, %r683, 19;
	mov.b64 	%rd1002, {%r685, %r684};
	shf.l.wrap.b32 	%r686, %r682, %r683, 3;
	shf.l.wrap.b32 	%r687, %r683, %r682, 3;
	mov.b64 	%rd1003, {%r687, %r686};
	shr.u64 	%rd1004, %rd604, 6;
	xor.b64  	%rd1005, %rd1002, %rd1004;
	xor.b64  	%rd1006, %rd1005, %rd1003;
	add.s64 	%rd1007, %rd533, %rd569;
	add.s64 	%rd1008, %rd1007, %rd1006;
	add.s64 	%rd1009, %rd1008, %rd47;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r688,%dummy}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd617;
	}
	shf.r.wrap.b32 	%r690, %r689, %r688, 19;
	shf.r.wrap.b32 	%r691, %r688, %r689, 19;
	mov.b64 	%rd1010, {%r691, %r690};
	shf.l.wrap.b32 	%r692, %r688, %r689, 3;
	shf.l.wrap.b32 	%r693, %r689, %r688, 3;
	mov.b64 	%rd1011, {%r693, %r692};
	shr.u64 	%rd1012, %rd617, 6;
	xor.b64  	%rd1013, %rd1010, %rd1012;
	xor.b64  	%rd1014, %rd1013, %rd1011;
	shf.r.wrap.b32 	%r694, %r363, %r362, 1;
	shf.r.wrap.b32 	%r695, %r362, %r363, 1;
	mov.b64 	%rd1015, {%r695, %r694};
	shf.r.wrap.b32 	%r696, %r363, %r362, 8;
	shf.r.wrap.b32 	%r697, %r362, %r363, 8;
	mov.b64 	%rd1016, {%r697, %r696};
	shr.u64 	%rd1017, %rd540, 7;
	xor.b64  	%rd1018, %rd1015, %rd1017;
	xor.b64  	%rd1019, %rd1018, %rd1016;
	add.s64 	%rd1020, %rd24, %rd576;
	add.s64 	%rd1021, %rd1020, %rd1014;
	add.s64 	%rd1022, %rd1021, %rd1019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd1009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r699}, %rd1009;
	}
	shf.r.wrap.b32 	%r700, %r699, %r698, 19;
	shf.r.wrap.b32 	%r701, %r698, %r699, 19;
	mov.b64 	%rd1023, {%r701, %r700};
	shf.l.wrap.b32 	%r702, %r698, %r699, 3;
	shf.l.wrap.b32 	%r703, %r699, %r698, 3;
	mov.b64 	%rd1024, {%r703, %r702};
	shr.u64 	%rd1025, %rd1009, 6;
	xor.b64  	%rd1026, %rd1023, %rd1025;
	xor.b64  	%rd1027, %rd1026, %rd1024;
	add.s64 	%rd1028, %rd540, %rd583;
	add.s64 	%rd1029, %rd1028, %rd1027;
	add.s64 	%rd1030, %rd1029, %rd48;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r704,%dummy}, %rd1022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r705}, %rd1022;
	}
	shf.r.wrap.b32 	%r706, %r705, %r704, 19;
	shf.r.wrap.b32 	%r707, %r704, %r705, 19;
	mov.b64 	%rd1031, {%r707, %r706};
	shf.l.wrap.b32 	%r708, %r704, %r705, 3;
	shf.l.wrap.b32 	%r709, %r705, %r704, 3;
	mov.b64 	%rd1032, {%r709, %r708};
	shr.u64 	%rd1033, %rd1022, 6;
	xor.b64  	%rd1034, %rd1031, %rd1033;
	xor.b64  	%rd1035, %rd1034, %rd1032;
	shf.r.wrap.b32 	%r710, %r369, %r368, 1;
	shf.r.wrap.b32 	%r711, %r368, %r369, 1;
	mov.b64 	%rd1036, {%r711, %r710};
	shf.r.wrap.b32 	%r712, %r369, %r368, 8;
	shf.r.wrap.b32 	%r713, %r368, %r369, 8;
	mov.b64 	%rd1037, {%r713, %r712};
	shr.u64 	%rd1038, %rd546, 7;
	xor.b64  	%rd1039, %rd1036, %rd1038;
	xor.b64  	%rd1040, %rd1039, %rd1037;
	add.s64 	%rd1041, %rd27, %rd590;
	add.s64 	%rd1042, %rd1041, %rd1035;
	add.s64 	%rd1043, %rd1042, %rd1040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r714,%dummy}, %rd1030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r715}, %rd1030;
	}
	shf.r.wrap.b32 	%r716, %r715, %r714, 19;
	shf.r.wrap.b32 	%r717, %r714, %r715, 19;
	mov.b64 	%rd1044, {%r717, %r716};
	shf.l.wrap.b32 	%r718, %r714, %r715, 3;
	shf.l.wrap.b32 	%r719, %r715, %r714, 3;
	mov.b64 	%rd1045, {%r719, %r718};
	shr.u64 	%rd1046, %rd1030, 6;
	xor.b64  	%rd1047, %rd1044, %rd1046;
	xor.b64  	%rd1048, %rd1047, %rd1045;
	add.s64 	%rd1049, %rd546, %rd597;
	add.s64 	%rd1050, %rd1049, %rd1048;
	add.s64 	%rd1051, %rd1050, %rd49;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r720,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd1043;
	}
	shf.r.wrap.b32 	%r722, %r721, %r720, 19;
	shf.r.wrap.b32 	%r723, %r720, %r721, 19;
	mov.b64 	%rd1052, {%r723, %r722};
	shf.l.wrap.b32 	%r724, %r720, %r721, 3;
	shf.l.wrap.b32 	%r725, %r721, %r720, 3;
	mov.b64 	%rd1053, {%r725, %r724};
	shr.u64 	%rd1054, %rd1043, 6;
	xor.b64  	%rd1055, %rd1052, %rd1054;
	xor.b64  	%rd1056, %rd1055, %rd1053;
	shf.r.wrap.b32 	%r726, %r375, %r374, 1;
	shf.r.wrap.b32 	%r727, %r374, %r375, 1;
	mov.b64 	%rd1057, {%r727, %r726};
	shf.r.wrap.b32 	%r728, %r375, %r374, 8;
	shf.r.wrap.b32 	%r729, %r374, %r375, 8;
	mov.b64 	%rd1058, {%r729, %r728};
	shr.u64 	%rd1059, %rd553, 7;
	xor.b64  	%rd1060, %rd1057, %rd1059;
	xor.b64  	%rd1061, %rd1060, %rd1058;
	add.s64 	%rd1062, %rd28, %rd604;
	add.s64 	%rd1063, %rd1062, %rd1056;
	add.s64 	%rd1064, %rd1063, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd1051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd1051;
	}
	shf.r.wrap.b32 	%r732, %r731, %r730, 19;
	shf.r.wrap.b32 	%r733, %r730, %r731, 19;
	mov.b64 	%rd1065, {%r733, %r732};
	shf.l.wrap.b32 	%r734, %r730, %r731, 3;
	shf.l.wrap.b32 	%r735, %r731, %r730, 3;
	mov.b64 	%rd1066, {%r735, %r734};
	shr.u64 	%rd1067, %rd1051, 6;
	xor.b64  	%rd1068, %rd1065, %rd1067;
	xor.b64  	%rd1069, %rd1068, %rd1066;
	shf.r.wrap.b32 	%r736, %r381, %r380, 1;
	shf.r.wrap.b32 	%r737, %r380, %r381, 1;
	mov.b64 	%rd1070, {%r737, %r736};
	shf.r.wrap.b32 	%r738, %r381, %r380, 8;
	shf.r.wrap.b32 	%r739, %r380, %r381, 8;
	mov.b64 	%rd1071, {%r739, %r738};
	shr.u64 	%rd1072, %rd555, 7;
	xor.b64  	%rd1073, %rd1070, %rd1072;
	xor.b64  	%rd1074, %rd1073, %rd1071;
	add.s64 	%rd1075, %rd553, %rd617;
	add.s64 	%rd1076, %rd1075, %rd1069;
	add.s64 	%rd1077, %rd1076, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r740,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r741}, %rd1064;
	}
	shf.r.wrap.b32 	%r742, %r741, %r740, 19;
	shf.r.wrap.b32 	%r743, %r740, %r741, 19;
	mov.b64 	%rd1078, {%r743, %r742};
	shf.l.wrap.b32 	%r744, %r740, %r741, 3;
	shf.l.wrap.b32 	%r745, %r741, %r740, 3;
	mov.b64 	%rd1079, {%r745, %r744};
	shr.u64 	%rd1080, %rd1064, 6;
	xor.b64  	%rd1081, %rd1078, %rd1080;
	xor.b64  	%rd1082, %rd1081, %rd1079;
	shf.r.wrap.b32 	%r746, %r387, %r386, 1;
	shf.r.wrap.b32 	%r747, %r386, %r387, 1;
	mov.b64 	%rd1083, {%r747, %r746};
	shf.r.wrap.b32 	%r748, %r387, %r386, 8;
	shf.r.wrap.b32 	%r749, %r386, %r387, 8;
	mov.b64 	%rd1084, {%r749, %r748};
	shr.u64 	%rd1085, %rd562, 7;
	xor.b64  	%rd1086, %rd1083, %rd1085;
	xor.b64  	%rd1087, %rd1086, %rd1084;
	add.s64 	%rd1088, %rd1009, %rd555;
	add.s64 	%rd1089, %rd1088, %rd1082;
	add.s64 	%rd1090, %rd1089, %rd1087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r750,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r751}, %rd1077;
	}
	shf.r.wrap.b32 	%r752, %r751, %r750, 19;
	shf.r.wrap.b32 	%r753, %r750, %r751, 19;
	mov.b64 	%rd1091, {%r753, %r752};
	shf.l.wrap.b32 	%r754, %r750, %r751, 3;
	shf.l.wrap.b32 	%r755, %r751, %r750, 3;
	mov.b64 	%rd1092, {%r755, %r754};
	shr.u64 	%rd1093, %rd1077, 6;
	xor.b64  	%rd1094, %rd1091, %rd1093;
	xor.b64  	%rd1095, %rd1094, %rd1092;
	shf.r.wrap.b32 	%r756, %r393, %r392, 1;
	shf.r.wrap.b32 	%r757, %r392, %r393, 1;
	mov.b64 	%rd1096, {%r757, %r756};
	shf.r.wrap.b32 	%r758, %r393, %r392, 8;
	shf.r.wrap.b32 	%r759, %r392, %r393, 8;
	mov.b64 	%rd1097, {%r759, %r758};
	shr.u64 	%rd1098, %rd569, 7;
	xor.b64  	%rd1099, %rd1096, %rd1098;
	xor.b64  	%rd1100, %rd1099, %rd1097;
	add.s64 	%rd1101, %rd1022, %rd562;
	add.s64 	%rd1102, %rd1101, %rd1095;
	add.s64 	%rd1103, %rd1102, %rd1100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r760,%dummy}, %rd1090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r761}, %rd1090;
	}
	shf.r.wrap.b32 	%r762, %r761, %r760, 19;
	shf.r.wrap.b32 	%r763, %r760, %r761, 19;
	mov.b64 	%rd1104, {%r763, %r762};
	shf.l.wrap.b32 	%r764, %r760, %r761, 3;
	shf.l.wrap.b32 	%r765, %r761, %r760, 3;
	mov.b64 	%rd1105, {%r765, %r764};
	shr.u64 	%rd1106, %rd1090, 6;
	xor.b64  	%rd1107, %rd1104, %rd1106;
	xor.b64  	%rd1108, %rd1107, %rd1105;
	shf.r.wrap.b32 	%r766, %r399, %r398, 1;
	shf.r.wrap.b32 	%r767, %r398, %r399, 1;
	mov.b64 	%rd1109, {%r767, %r766};
	shf.r.wrap.b32 	%r768, %r399, %r398, 8;
	shf.r.wrap.b32 	%r769, %r398, %r399, 8;
	mov.b64 	%rd1110, {%r769, %r768};
	shr.u64 	%rd1111, %rd576, 7;
	xor.b64  	%rd1112, %rd1109, %rd1111;
	xor.b64  	%rd1113, %rd1112, %rd1110;
	add.s64 	%rd1114, %rd1030, %rd569;
	add.s64 	%rd1115, %rd1114, %rd1108;
	add.s64 	%rd1116, %rd1115, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r770,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r771}, %rd1103;
	}
	shf.r.wrap.b32 	%r772, %r771, %r770, 19;
	shf.r.wrap.b32 	%r773, %r770, %r771, 19;
	mov.b64 	%rd1117, {%r773, %r772};
	shf.l.wrap.b32 	%r774, %r770, %r771, 3;
	shf.l.wrap.b32 	%r775, %r771, %r770, 3;
	mov.b64 	%rd1118, {%r775, %r774};
	shr.u64 	%rd1119, %rd1103, 6;
	xor.b64  	%rd1120, %rd1117, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1118;
	shf.r.wrap.b32 	%r776, %r405, %r404, 1;
	shf.r.wrap.b32 	%r777, %r404, %r405, 1;
	mov.b64 	%rd1122, {%r777, %r776};
	shf.r.wrap.b32 	%r778, %r405, %r404, 8;
	shf.r.wrap.b32 	%r779, %r404, %r405, 8;
	mov.b64 	%rd1123, {%r779, %r778};
	shr.u64 	%rd1124, %rd583, 7;
	xor.b64  	%rd1125, %rd1122, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1123;
	add.s64 	%rd1127, %rd1043, %rd576;
	add.s64 	%rd1128, %rd1127, %rd1121;
	add.s64 	%rd1129, %rd1128, %rd1126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r780,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd1116;
	}
	shf.r.wrap.b32 	%r782, %r781, %r780, 19;
	shf.r.wrap.b32 	%r783, %r780, %r781, 19;
	mov.b64 	%rd1130, {%r783, %r782};
	shf.l.wrap.b32 	%r784, %r780, %r781, 3;
	shf.l.wrap.b32 	%r785, %r781, %r780, 3;
	mov.b64 	%rd1131, {%r785, %r784};
	shr.u64 	%rd1132, %rd1116, 6;
	xor.b64  	%rd1133, %rd1130, %rd1132;
	xor.b64  	%rd1134, %rd1133, %rd1131;
	shf.r.wrap.b32 	%r786, %r411, %r410, 1;
	shf.r.wrap.b32 	%r787, %r410, %r411, 1;
	mov.b64 	%rd1135, {%r787, %r786};
	shf.r.wrap.b32 	%r788, %r411, %r410, 8;
	shf.r.wrap.b32 	%r789, %r410, %r411, 8;
	mov.b64 	%rd1136, {%r789, %r788};
	shr.u64 	%rd1137, %rd590, 7;
	xor.b64  	%rd1138, %rd1135, %rd1137;
	xor.b64  	%rd1139, %rd1138, %rd1136;
	add.s64 	%rd1140, %rd1051, %rd583;
	add.s64 	%rd1141, %rd1140, %rd1134;
	add.s64 	%rd1142, %rd1141, %rd1139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r790,%dummy}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r791}, %rd1129;
	}
	shf.r.wrap.b32 	%r792, %r791, %r790, 19;
	shf.r.wrap.b32 	%r793, %r790, %r791, 19;
	mov.b64 	%rd1143, {%r793, %r792};
	shf.l.wrap.b32 	%r794, %r790, %r791, 3;
	shf.l.wrap.b32 	%r795, %r791, %r790, 3;
	mov.b64 	%rd1144, {%r795, %r794};
	shr.u64 	%rd1145, %rd1129, 6;
	xor.b64  	%rd1146, %rd1143, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1144;
	shf.r.wrap.b32 	%r796, %r417, %r416, 1;
	shf.r.wrap.b32 	%r797, %r416, %r417, 1;
	mov.b64 	%rd1148, {%r797, %r796};
	shf.r.wrap.b32 	%r798, %r417, %r416, 8;
	shf.r.wrap.b32 	%r799, %r416, %r417, 8;
	mov.b64 	%rd1149, {%r799, %r798};
	shr.u64 	%rd1150, %rd597, 7;
	xor.b64  	%rd1151, %rd1148, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1149;
	add.s64 	%rd1153, %rd1064, %rd590;
	add.s64 	%rd1154, %rd1153, %rd1147;
	add.s64 	%rd1155, %rd1154, %rd1152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r800,%dummy}, %rd1142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r801}, %rd1142;
	}
	shf.r.wrap.b32 	%r802, %r801, %r800, 19;
	shf.r.wrap.b32 	%r803, %r800, %r801, 19;
	mov.b64 	%rd1156, {%r803, %r802};
	shf.l.wrap.b32 	%r804, %r800, %r801, 3;
	shf.l.wrap.b32 	%r805, %r801, %r800, 3;
	mov.b64 	%rd1157, {%r805, %r804};
	shr.u64 	%rd1158, %rd1142, 6;
	xor.b64  	%rd1159, %rd1156, %rd1158;
	xor.b64  	%rd1160, %rd1159, %rd1157;
	shf.r.wrap.b32 	%r806, %r683, %r682, 1;
	shf.r.wrap.b32 	%r807, %r682, %r683, 1;
	mov.b64 	%rd1161, {%r807, %r806};
	shf.r.wrap.b32 	%r808, %r683, %r682, 8;
	shf.r.wrap.b32 	%r809, %r682, %r683, 8;
	mov.b64 	%rd1162, {%r809, %r808};
	shr.u64 	%rd1163, %rd604, 7;
	xor.b64  	%rd1164, %rd1161, %rd1163;
	xor.b64  	%rd1165, %rd1164, %rd1162;
	add.s64 	%rd1166, %rd1077, %rd597;
	add.s64 	%rd1167, %rd1166, %rd1160;
	add.s64 	%rd1168, %rd1167, %rd1165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r810,%dummy}, %rd1155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r811}, %rd1155;
	}
	shf.r.wrap.b32 	%r812, %r811, %r810, 19;
	shf.r.wrap.b32 	%r813, %r810, %r811, 19;
	mov.b64 	%rd1169, {%r813, %r812};
	shf.l.wrap.b32 	%r814, %r810, %r811, 3;
	shf.l.wrap.b32 	%r815, %r811, %r810, 3;
	mov.b64 	%rd1170, {%r815, %r814};
	shr.u64 	%rd1171, %rd1155, 6;
	xor.b64  	%rd1172, %rd1169, %rd1171;
	xor.b64  	%rd1173, %rd1172, %rd1170;
	shf.r.wrap.b32 	%r816, %r689, %r688, 1;
	shf.r.wrap.b32 	%r817, %r688, %r689, 1;
	mov.b64 	%rd1174, {%r817, %r816};
	shf.r.wrap.b32 	%r818, %r689, %r688, 8;
	shf.r.wrap.b32 	%r819, %r688, %r689, 8;
	mov.b64 	%rd1175, {%r819, %r818};
	shr.u64 	%rd1176, %rd617, 7;
	xor.b64  	%rd1177, %rd1174, %rd1176;
	xor.b64  	%rd1178, %rd1177, %rd1175;
	add.s64 	%rd1179, %rd1090, %rd604;
	add.s64 	%rd1180, %rd1179, %rd1173;
	add.s64 	%rd1181, %rd1180, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r820,%dummy}, %rd1168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r821}, %rd1168;
	}
	shf.r.wrap.b32 	%r822, %r821, %r820, 19;
	shf.r.wrap.b32 	%r823, %r820, %r821, 19;
	mov.b64 	%rd1182, {%r823, %r822};
	shf.l.wrap.b32 	%r824, %r820, %r821, 3;
	shf.l.wrap.b32 	%r825, %r821, %r820, 3;
	mov.b64 	%rd1183, {%r825, %r824};
	shr.u64 	%rd1184, %rd1168, 6;
	xor.b64  	%rd1185, %rd1182, %rd1184;
	xor.b64  	%rd1186, %rd1185, %rd1183;
	shf.r.wrap.b32 	%r826, %r699, %r698, 1;
	shf.r.wrap.b32 	%r827, %r698, %r699, 1;
	mov.b64 	%rd1187, {%r827, %r826};
	shf.r.wrap.b32 	%r828, %r699, %r698, 8;
	shf.r.wrap.b32 	%r829, %r698, %r699, 8;
	mov.b64 	%rd1188, {%r829, %r828};
	shr.u64 	%rd1189, %rd1009, 7;
	xor.b64  	%rd1190, %rd1187, %rd1189;
	xor.b64  	%rd1191, %rd1190, %rd1188;
	add.s64 	%rd1192, %rd1103, %rd617;
	add.s64 	%rd1193, %rd1192, %rd1186;
	add.s64 	%rd1194, %rd1193, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r831}, %rd990;
	}
	shf.r.wrap.b32 	%r832, %r831, %r830, 14;
	shf.r.wrap.b32 	%r833, %r830, %r831, 14;
	mov.b64 	%rd1195, {%r833, %r832};
	shf.r.wrap.b32 	%r834, %r831, %r830, 18;
	shf.r.wrap.b32 	%r835, %r830, %r831, 18;
	mov.b64 	%rd1196, {%r835, %r834};
	xor.b64  	%rd1197, %rd1196, %rd1195;
	shf.l.wrap.b32 	%r836, %r830, %r831, 23;
	shf.l.wrap.b32 	%r837, %r831, %r830, 23;
	mov.b64 	%rd1198, {%r837, %r836};
	xor.b64  	%rd1199, %rd1197, %rd1198;
	xor.b64  	%rd1200, %rd942, %rd966;
	and.b64  	%rd1201, %rd1200, %rd990;
	xor.b64  	%rd1202, %rd1201, %rd942;
	add.s64 	%rd1203, %rd1202, %rd918;
	add.s64 	%rd1204, %rd1203, %rd1009;
	add.s64 	%rd1205, %rd1204, %rd2683;
	add.s64 	%rd1206, %rd1205, %rd1199;
	add.s64 	%rd1207, %rd1206, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd1001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r839}, %rd1001;
	}
	shf.r.wrap.b32 	%r840, %r839, %r838, 28;
	shf.r.wrap.b32 	%r841, %r838, %r839, 28;
	mov.b64 	%rd1208, {%r841, %r840};
	shf.l.wrap.b32 	%r842, %r838, %r839, 30;
	shf.l.wrap.b32 	%r843, %r839, %r838, 30;
	mov.b64 	%rd1209, {%r843, %r842};
	xor.b64  	%rd1210, %rd1209, %rd1208;
	shf.l.wrap.b32 	%r844, %r838, %r839, 25;
	shf.l.wrap.b32 	%r845, %r839, %r838, 25;
	mov.b64 	%rd1211, {%r845, %r844};
	xor.b64  	%rd1212, %rd1210, %rd1211;
	xor.b64  	%rd1213, %rd1001, %rd953;
	xor.b64  	%rd1214, %rd1001, %rd977;
	and.b64  	%rd1215, %rd1214, %rd1213;
	xor.b64  	%rd1216, %rd1215, %rd1001;
	add.s64 	%rd1217, %rd1206, %rd1216;
	add.s64 	%rd1218, %rd1217, %rd1212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd1207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r847}, %rd1207;
	}
	shf.r.wrap.b32 	%r848, %r847, %r846, 14;
	shf.r.wrap.b32 	%r849, %r846, %r847, 14;
	mov.b64 	%rd1219, {%r849, %r848};
	shf.r.wrap.b32 	%r850, %r847, %r846, 18;
	shf.r.wrap.b32 	%r851, %r846, %r847, 18;
	mov.b64 	%rd1220, {%r851, %r850};
	xor.b64  	%rd1221, %rd1220, %rd1219;
	shf.l.wrap.b32 	%r852, %r846, %r847, 23;
	shf.l.wrap.b32 	%r853, %r847, %r846, 23;
	mov.b64 	%rd1222, {%r853, %r852};
	xor.b64  	%rd1223, %rd1221, %rd1222;
	xor.b64  	%rd1224, %rd966, %rd990;
	and.b64  	%rd1225, %rd1207, %rd1224;
	xor.b64  	%rd1226, %rd1225, %rd966;
	add.s64 	%rd1227, %rd1022, %rd942;
	add.s64 	%rd1228, %rd1227, %rd2684;
	add.s64 	%rd1229, %rd1228, %rd1226;
	add.s64 	%rd1230, %rd1229, %rd1223;
	add.s64 	%rd1231, %rd1230, %rd953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r854,%dummy}, %rd1218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r855}, %rd1218;
	}
	shf.r.wrap.b32 	%r856, %r855, %r854, 28;
	shf.r.wrap.b32 	%r857, %r854, %r855, 28;
	mov.b64 	%rd1232, {%r857, %r856};
	shf.l.wrap.b32 	%r858, %r854, %r855, 30;
	shf.l.wrap.b32 	%r859, %r855, %r854, 30;
	mov.b64 	%rd1233, {%r859, %r858};
	xor.b64  	%rd1234, %rd1233, %rd1232;
	shf.l.wrap.b32 	%r860, %r854, %r855, 25;
	shf.l.wrap.b32 	%r861, %r855, %r854, 25;
	mov.b64 	%rd1235, {%r861, %r860};
	xor.b64  	%rd1236, %rd1234, %rd1235;
	xor.b64  	%rd1237, %rd1218, %rd977;
	xor.b64  	%rd1238, %rd1218, %rd1001;
	and.b64  	%rd1239, %rd1238, %rd1237;
	xor.b64  	%rd1240, %rd1239, %rd1218;
	add.s64 	%rd1241, %rd1230, %rd1240;
	add.s64 	%rd1242, %rd1241, %rd1236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd1231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r863}, %rd1231;
	}
	shf.r.wrap.b32 	%r864, %r863, %r862, 14;
	shf.r.wrap.b32 	%r865, %r862, %r863, 14;
	mov.b64 	%rd1243, {%r865, %r864};
	shf.r.wrap.b32 	%r866, %r863, %r862, 18;
	shf.r.wrap.b32 	%r867, %r862, %r863, 18;
	mov.b64 	%rd1244, {%r867, %r866};
	xor.b64  	%rd1245, %rd1244, %rd1243;
	shf.l.wrap.b32 	%r868, %r862, %r863, 23;
	shf.l.wrap.b32 	%r869, %r863, %r862, 23;
	mov.b64 	%rd1246, {%r869, %r868};
	xor.b64  	%rd1247, %rd1245, %rd1246;
	xor.b64  	%rd1248, %rd1207, %rd990;
	and.b64  	%rd1249, %rd1231, %rd1248;
	xor.b64  	%rd1250, %rd1249, %rd990;
	add.s64 	%rd1251, %rd1030, %rd966;
	add.s64 	%rd1252, %rd1251, %rd2685;
	add.s64 	%rd1253, %rd1252, %rd1250;
	add.s64 	%rd1254, %rd1253, %rd1247;
	add.s64 	%rd1255, %rd1254, %rd977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r870,%dummy}, %rd1242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r871}, %rd1242;
	}
	shf.r.wrap.b32 	%r872, %r871, %r870, 28;
	shf.r.wrap.b32 	%r873, %r870, %r871, 28;
	mov.b64 	%rd1256, {%r873, %r872};
	shf.l.wrap.b32 	%r874, %r870, %r871, 30;
	shf.l.wrap.b32 	%r875, %r871, %r870, 30;
	mov.b64 	%rd1257, {%r875, %r874};
	xor.b64  	%rd1258, %rd1257, %rd1256;
	shf.l.wrap.b32 	%r876, %r870, %r871, 25;
	shf.l.wrap.b32 	%r877, %r871, %r870, 25;
	mov.b64 	%rd1259, {%r877, %r876};
	xor.b64  	%rd1260, %rd1258, %rd1259;
	xor.b64  	%rd1261, %rd1242, %rd1001;
	xor.b64  	%rd1262, %rd1242, %rd1218;
	and.b64  	%rd1263, %rd1262, %rd1261;
	xor.b64  	%rd1264, %rd1263, %rd1242;
	add.s64 	%rd1265, %rd1254, %rd1264;
	add.s64 	%rd1266, %rd1265, %rd1260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r878,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r879}, %rd1255;
	}
	shf.r.wrap.b32 	%r880, %r879, %r878, 14;
	shf.r.wrap.b32 	%r881, %r878, %r879, 14;
	mov.b64 	%rd1267, {%r881, %r880};
	shf.r.wrap.b32 	%r882, %r879, %r878, 18;
	shf.r.wrap.b32 	%r883, %r878, %r879, 18;
	mov.b64 	%rd1268, {%r883, %r882};
	xor.b64  	%rd1269, %rd1268, %rd1267;
	shf.l.wrap.b32 	%r884, %r878, %r879, 23;
	shf.l.wrap.b32 	%r885, %r879, %r878, 23;
	mov.b64 	%rd1270, {%r885, %r884};
	xor.b64  	%rd1271, %rd1269, %rd1270;
	xor.b64  	%rd1272, %rd1231, %rd1207;
	and.b64  	%rd1273, %rd1255, %rd1272;
	xor.b64  	%rd1274, %rd1273, %rd1207;
	add.s64 	%rd1275, %rd1043, %rd990;
	add.s64 	%rd1276, %rd1275, %rd2686;
	add.s64 	%rd1277, %rd1276, %rd1274;
	add.s64 	%rd1278, %rd1277, %rd1271;
	add.s64 	%rd1279, %rd1278, %rd1001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r886,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r887}, %rd1266;
	}
	shf.r.wrap.b32 	%r888, %r887, %r886, 28;
	shf.r.wrap.b32 	%r889, %r886, %r887, 28;
	mov.b64 	%rd1280, {%r889, %r888};
	shf.l.wrap.b32 	%r890, %r886, %r887, 30;
	shf.l.wrap.b32 	%r891, %r887, %r886, 30;
	mov.b64 	%rd1281, {%r891, %r890};
	xor.b64  	%rd1282, %rd1281, %rd1280;
	shf.l.wrap.b32 	%r892, %r886, %r887, 25;
	shf.l.wrap.b32 	%r893, %r887, %r886, 25;
	mov.b64 	%rd1283, {%r893, %r892};
	xor.b64  	%rd1284, %rd1282, %rd1283;
	xor.b64  	%rd1285, %rd1266, %rd1218;
	xor.b64  	%rd1286, %rd1266, %rd1242;
	and.b64  	%rd1287, %rd1286, %rd1285;
	xor.b64  	%rd1288, %rd1287, %rd1266;
	add.s64 	%rd1289, %rd1278, %rd1288;
	add.s64 	%rd1290, %rd1289, %rd1284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd1279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd1279;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 14;
	shf.r.wrap.b32 	%r897, %r894, %r895, 14;
	mov.b64 	%rd1291, {%r897, %r896};
	shf.r.wrap.b32 	%r898, %r895, %r894, 18;
	shf.r.wrap.b32 	%r899, %r894, %r895, 18;
	mov.b64 	%rd1292, {%r899, %r898};
	xor.b64  	%rd1293, %rd1292, %rd1291;
	shf.l.wrap.b32 	%r900, %r894, %r895, 23;
	shf.l.wrap.b32 	%r901, %r895, %r894, 23;
	mov.b64 	%rd1294, {%r901, %r900};
	xor.b64  	%rd1295, %rd1293, %rd1294;
	xor.b64  	%rd1296, %rd1255, %rd1231;
	and.b64  	%rd1297, %rd1279, %rd1296;
	xor.b64  	%rd1298, %rd1297, %rd1231;
	add.s64 	%rd1299, %rd1207, %rd1051;
	add.s64 	%rd1300, %rd1299, %rd2687;
	add.s64 	%rd1301, %rd1300, %rd1298;
	add.s64 	%rd1302, %rd1301, %rd1295;
	add.s64 	%rd1303, %rd1302, %rd1218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd1290;
	}
	shf.r.wrap.b32 	%r904, %r903, %r902, 28;
	shf.r.wrap.b32 	%r905, %r902, %r903, 28;
	mov.b64 	%rd1304, {%r905, %r904};
	shf.l.wrap.b32 	%r906, %r902, %r903, 30;
	shf.l.wrap.b32 	%r907, %r903, %r902, 30;
	mov.b64 	%rd1305, {%r907, %r906};
	xor.b64  	%rd1306, %rd1305, %rd1304;
	shf.l.wrap.b32 	%r908, %r902, %r903, 25;
	shf.l.wrap.b32 	%r909, %r903, %r902, 25;
	mov.b64 	%rd1307, {%r909, %r908};
	xor.b64  	%rd1308, %rd1306, %rd1307;
	xor.b64  	%rd1309, %rd1290, %rd1242;
	xor.b64  	%rd1310, %rd1290, %rd1266;
	and.b64  	%rd1311, %rd1310, %rd1309;
	xor.b64  	%rd1312, %rd1311, %rd1290;
	add.s64 	%rd1313, %rd1302, %rd1312;
	add.s64 	%rd1314, %rd1313, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r910,%dummy}, %rd1303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r911}, %rd1303;
	}
	shf.r.wrap.b32 	%r912, %r911, %r910, 14;
	shf.r.wrap.b32 	%r913, %r910, %r911, 14;
	mov.b64 	%rd1315, {%r913, %r912};
	shf.r.wrap.b32 	%r914, %r911, %r910, 18;
	shf.r.wrap.b32 	%r915, %r910, %r911, 18;
	mov.b64 	%rd1316, {%r915, %r914};
	xor.b64  	%rd1317, %rd1316, %rd1315;
	shf.l.wrap.b32 	%r916, %r910, %r911, 23;
	shf.l.wrap.b32 	%r917, %r911, %r910, 23;
	mov.b64 	%rd1318, {%r917, %r916};
	xor.b64  	%rd1319, %rd1317, %rd1318;
	xor.b64  	%rd1320, %rd1279, %rd1255;
	and.b64  	%rd1321, %rd1303, %rd1320;
	xor.b64  	%rd1322, %rd1321, %rd1255;
	add.s64 	%rd1323, %rd1231, %rd1064;
	add.s64 	%rd1324, %rd1323, %rd2688;
	add.s64 	%rd1325, %rd1324, %rd1322;
	add.s64 	%rd1326, %rd1325, %rd1319;
	add.s64 	%rd1327, %rd1326, %rd1242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd1314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r919}, %rd1314;
	}
	shf.r.wrap.b32 	%r920, %r919, %r918, 28;
	shf.r.wrap.b32 	%r921, %r918, %r919, 28;
	mov.b64 	%rd1328, {%r921, %r920};
	shf.l.wrap.b32 	%r922, %r918, %r919, 30;
	shf.l.wrap.b32 	%r923, %r919, %r918, 30;
	mov.b64 	%rd1329, {%r923, %r922};
	xor.b64  	%rd1330, %rd1329, %rd1328;
	shf.l.wrap.b32 	%r924, %r918, %r919, 25;
	shf.l.wrap.b32 	%r925, %r919, %r918, 25;
	mov.b64 	%rd1331, {%r925, %r924};
	xor.b64  	%rd1332, %rd1330, %rd1331;
	xor.b64  	%rd1333, %rd1314, %rd1266;
	xor.b64  	%rd1334, %rd1314, %rd1290;
	and.b64  	%rd1335, %rd1334, %rd1333;
	xor.b64  	%rd1336, %rd1335, %rd1314;
	add.s64 	%rd1337, %rd1326, %rd1336;
	add.s64 	%rd1338, %rd1337, %rd1332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd1327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd1327;
	}
	shf.r.wrap.b32 	%r928, %r927, %r926, 14;
	shf.r.wrap.b32 	%r929, %r926, %r927, 14;
	mov.b64 	%rd1339, {%r929, %r928};
	shf.r.wrap.b32 	%r930, %r927, %r926, 18;
	shf.r.wrap.b32 	%r931, %r926, %r927, 18;
	mov.b64 	%rd1340, {%r931, %r930};
	xor.b64  	%rd1341, %rd1340, %rd1339;
	shf.l.wrap.b32 	%r932, %r926, %r927, 23;
	shf.l.wrap.b32 	%r933, %r927, %r926, 23;
	mov.b64 	%rd1342, {%r933, %r932};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	xor.b64  	%rd1344, %rd1303, %rd1279;
	and.b64  	%rd1345, %rd1327, %rd1344;
	xor.b64  	%rd1346, %rd1345, %rd1279;
	add.s64 	%rd1347, %rd1255, %rd1077;
	add.s64 	%rd1348, %rd1347, %rd2689;
	add.s64 	%rd1349, %rd1348, %rd1346;
	add.s64 	%rd1350, %rd1349, %rd1343;
	add.s64 	%rd1351, %rd1350, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd1338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r935}, %rd1338;
	}
	shf.r.wrap.b32 	%r936, %r935, %r934, 28;
	shf.r.wrap.b32 	%r937, %r934, %r935, 28;
	mov.b64 	%rd1352, {%r937, %r936};
	shf.l.wrap.b32 	%r938, %r934, %r935, 30;
	shf.l.wrap.b32 	%r939, %r935, %r934, 30;
	mov.b64 	%rd1353, {%r939, %r938};
	xor.b64  	%rd1354, %rd1353, %rd1352;
	shf.l.wrap.b32 	%r940, %r934, %r935, 25;
	shf.l.wrap.b32 	%r941, %r935, %r934, 25;
	mov.b64 	%rd1355, {%r941, %r940};
	xor.b64  	%rd1356, %rd1354, %rd1355;
	xor.b64  	%rd1357, %rd1338, %rd1290;
	xor.b64  	%rd1358, %rd1338, %rd1314;
	and.b64  	%rd1359, %rd1358, %rd1357;
	xor.b64  	%rd1360, %rd1359, %rd1338;
	add.s64 	%rd1361, %rd1350, %rd1360;
	add.s64 	%rd1362, %rd1361, %rd1356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r942,%dummy}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r943}, %rd1351;
	}
	shf.r.wrap.b32 	%r944, %r943, %r942, 14;
	shf.r.wrap.b32 	%r945, %r942, %r943, 14;
	mov.b64 	%rd1363, {%r945, %r944};
	shf.r.wrap.b32 	%r946, %r943, %r942, 18;
	shf.r.wrap.b32 	%r947, %r942, %r943, 18;
	mov.b64 	%rd1364, {%r947, %r946};
	xor.b64  	%rd1365, %rd1364, %rd1363;
	shf.l.wrap.b32 	%r948, %r942, %r943, 23;
	shf.l.wrap.b32 	%r949, %r943, %r942, 23;
	mov.b64 	%rd1366, {%r949, %r948};
	xor.b64  	%rd1367, %rd1365, %rd1366;
	xor.b64  	%rd1368, %rd1327, %rd1303;
	and.b64  	%rd1369, %rd1351, %rd1368;
	xor.b64  	%rd1370, %rd1369, %rd1303;
	add.s64 	%rd1371, %rd1279, %rd1090;
	add.s64 	%rd1372, %rd1371, %rd2690;
	add.s64 	%rd1373, %rd1372, %rd1370;
	add.s64 	%rd1374, %rd1373, %rd1367;
	add.s64 	%rd1375, %rd1374, %rd1290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd1362;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 28;
	shf.r.wrap.b32 	%r953, %r950, %r951, 28;
	mov.b64 	%rd1376, {%r953, %r952};
	shf.l.wrap.b32 	%r954, %r950, %r951, 30;
	shf.l.wrap.b32 	%r955, %r951, %r950, 30;
	mov.b64 	%rd1377, {%r955, %r954};
	xor.b64  	%rd1378, %rd1377, %rd1376;
	shf.l.wrap.b32 	%r956, %r950, %r951, 25;
	shf.l.wrap.b32 	%r957, %r951, %r950, 25;
	mov.b64 	%rd1379, {%r957, %r956};
	xor.b64  	%rd1380, %rd1378, %rd1379;
	xor.b64  	%rd1381, %rd1362, %rd1314;
	xor.b64  	%rd1382, %rd1362, %rd1338;
	and.b64  	%rd1383, %rd1382, %rd1381;
	xor.b64  	%rd1384, %rd1383, %rd1362;
	add.s64 	%rd1385, %rd1374, %rd1384;
	add.s64 	%rd1386, %rd1385, %rd1380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd1375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r959}, %rd1375;
	}
	shf.r.wrap.b32 	%r960, %r959, %r958, 14;
	shf.r.wrap.b32 	%r961, %r958, %r959, 14;
	mov.b64 	%rd1387, {%r961, %r960};
	shf.r.wrap.b32 	%r962, %r959, %r958, 18;
	shf.r.wrap.b32 	%r963, %r958, %r959, 18;
	mov.b64 	%rd1388, {%r963, %r962};
	xor.b64  	%rd1389, %rd1388, %rd1387;
	shf.l.wrap.b32 	%r964, %r958, %r959, 23;
	shf.l.wrap.b32 	%r965, %r959, %r958, 23;
	mov.b64 	%rd1390, {%r965, %r964};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	xor.b64  	%rd1392, %rd1351, %rd1327;
	and.b64  	%rd1393, %rd1375, %rd1392;
	xor.b64  	%rd1394, %rd1393, %rd1327;
	add.s64 	%rd1395, %rd1303, %rd1103;
	add.s64 	%rd1396, %rd1395, %rd2691;
	add.s64 	%rd1397, %rd1396, %rd1394;
	add.s64 	%rd1398, %rd1397, %rd1391;
	add.s64 	%rd1399, %rd1398, %rd1314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r966,%dummy}, %rd1386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r967}, %rd1386;
	}
	shf.r.wrap.b32 	%r968, %r967, %r966, 28;
	shf.r.wrap.b32 	%r969, %r966, %r967, 28;
	mov.b64 	%rd1400, {%r969, %r968};
	shf.l.wrap.b32 	%r970, %r966, %r967, 30;
	shf.l.wrap.b32 	%r971, %r967, %r966, 30;
	mov.b64 	%rd1401, {%r971, %r970};
	xor.b64  	%rd1402, %rd1401, %rd1400;
	shf.l.wrap.b32 	%r972, %r966, %r967, 25;
	shf.l.wrap.b32 	%r973, %r967, %r966, 25;
	mov.b64 	%rd1403, {%r973, %r972};
	xor.b64  	%rd1404, %rd1402, %rd1403;
	xor.b64  	%rd1405, %rd1386, %rd1338;
	xor.b64  	%rd1406, %rd1386, %rd1362;
	and.b64  	%rd1407, %rd1406, %rd1405;
	xor.b64  	%rd1408, %rd1407, %rd1386;
	add.s64 	%rd1409, %rd1398, %rd1408;
	add.s64 	%rd1410, %rd1409, %rd1404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r974,%dummy}, %rd1399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r975}, %rd1399;
	}
	shf.r.wrap.b32 	%r976, %r975, %r974, 14;
	shf.r.wrap.b32 	%r977, %r974, %r975, 14;
	mov.b64 	%rd1411, {%r977, %r976};
	shf.r.wrap.b32 	%r978, %r975, %r974, 18;
	shf.r.wrap.b32 	%r979, %r974, %r975, 18;
	mov.b64 	%rd1412, {%r979, %r978};
	xor.b64  	%rd1413, %rd1412, %rd1411;
	shf.l.wrap.b32 	%r980, %r974, %r975, 23;
	shf.l.wrap.b32 	%r981, %r975, %r974, 23;
	mov.b64 	%rd1414, {%r981, %r980};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	xor.b64  	%rd1416, %rd1375, %rd1351;
	and.b64  	%rd1417, %rd1399, %rd1416;
	xor.b64  	%rd1418, %rd1417, %rd1351;
	add.s64 	%rd1419, %rd1327, %rd1116;
	add.s64 	%rd1420, %rd1419, %rd2692;
	add.s64 	%rd1421, %rd1420, %rd1418;
	add.s64 	%rd1422, %rd1421, %rd1415;
	add.s64 	%rd1423, %rd1422, %rd1338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r982,%dummy}, %rd1410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r983}, %rd1410;
	}
	shf.r.wrap.b32 	%r984, %r983, %r982, 28;
	shf.r.wrap.b32 	%r985, %r982, %r983, 28;
	mov.b64 	%rd1424, {%r985, %r984};
	shf.l.wrap.b32 	%r986, %r982, %r983, 30;
	shf.l.wrap.b32 	%r987, %r983, %r982, 30;
	mov.b64 	%rd1425, {%r987, %r986};
	xor.b64  	%rd1426, %rd1425, %rd1424;
	shf.l.wrap.b32 	%r988, %r982, %r983, 25;
	shf.l.wrap.b32 	%r989, %r983, %r982, 25;
	mov.b64 	%rd1427, {%r989, %r988};
	xor.b64  	%rd1428, %rd1426, %rd1427;
	xor.b64  	%rd1429, %rd1410, %rd1362;
	xor.b64  	%rd1430, %rd1410, %rd1386;
	and.b64  	%rd1431, %rd1430, %rd1429;
	xor.b64  	%rd1432, %rd1431, %rd1410;
	add.s64 	%rd1433, %rd1422, %rd1432;
	add.s64 	%rd1434, %rd1433, %rd1428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r990,%dummy}, %rd1423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r991}, %rd1423;
	}
	shf.r.wrap.b32 	%r992, %r991, %r990, 14;
	shf.r.wrap.b32 	%r993, %r990, %r991, 14;
	mov.b64 	%rd1435, {%r993, %r992};
	shf.r.wrap.b32 	%r994, %r991, %r990, 18;
	shf.r.wrap.b32 	%r995, %r990, %r991, 18;
	mov.b64 	%rd1436, {%r995, %r994};
	xor.b64  	%rd1437, %rd1436, %rd1435;
	shf.l.wrap.b32 	%r996, %r990, %r991, 23;
	shf.l.wrap.b32 	%r997, %r991, %r990, 23;
	mov.b64 	%rd1438, {%r997, %r996};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	xor.b64  	%rd1440, %rd1399, %rd1375;
	and.b64  	%rd1441, %rd1423, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd1375;
	add.s64 	%rd1443, %rd1351, %rd1129;
	add.s64 	%rd1444, %rd1443, %rd2693;
	add.s64 	%rd1445, %rd1444, %rd1442;
	add.s64 	%rd1446, %rd1445, %rd1439;
	add.s64 	%rd1447, %rd1446, %rd1362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r998,%dummy}, %rd1434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r999}, %rd1434;
	}
	shf.r.wrap.b32 	%r1000, %r999, %r998, 28;
	shf.r.wrap.b32 	%r1001, %r998, %r999, 28;
	mov.b64 	%rd1448, {%r1001, %r1000};
	shf.l.wrap.b32 	%r1002, %r998, %r999, 30;
	shf.l.wrap.b32 	%r1003, %r999, %r998, 30;
	mov.b64 	%rd1449, {%r1003, %r1002};
	xor.b64  	%rd1450, %rd1449, %rd1448;
	shf.l.wrap.b32 	%r1004, %r998, %r999, 25;
	shf.l.wrap.b32 	%r1005, %r999, %r998, 25;
	mov.b64 	%rd1451, {%r1005, %r1004};
	xor.b64  	%rd1452, %rd1450, %rd1451;
	xor.b64  	%rd1453, %rd1434, %rd1386;
	xor.b64  	%rd1454, %rd1434, %rd1410;
	and.b64  	%rd1455, %rd1454, %rd1453;
	xor.b64  	%rd1456, %rd1455, %rd1434;
	add.s64 	%rd1457, %rd1446, %rd1456;
	add.s64 	%rd1458, %rd1457, %rd1452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd1447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1007}, %rd1447;
	}
	shf.r.wrap.b32 	%r1008, %r1007, %r1006, 14;
	shf.r.wrap.b32 	%r1009, %r1006, %r1007, 14;
	mov.b64 	%rd1459, {%r1009, %r1008};
	shf.r.wrap.b32 	%r1010, %r1007, %r1006, 18;
	shf.r.wrap.b32 	%r1011, %r1006, %r1007, 18;
	mov.b64 	%rd1460, {%r1011, %r1010};
	xor.b64  	%rd1461, %rd1460, %rd1459;
	shf.l.wrap.b32 	%r1012, %r1006, %r1007, 23;
	shf.l.wrap.b32 	%r1013, %r1007, %r1006, 23;
	mov.b64 	%rd1462, {%r1013, %r1012};
	xor.b64  	%rd1463, %rd1461, %rd1462;
	xor.b64  	%rd1464, %rd1423, %rd1399;
	and.b64  	%rd1465, %rd1447, %rd1464;
	xor.b64  	%rd1466, %rd1465, %rd1399;
	add.s64 	%rd1467, %rd1375, %rd1142;
	add.s64 	%rd1468, %rd1467, %rd2694;
	add.s64 	%rd1469, %rd1468, %rd1466;
	add.s64 	%rd1470, %rd1469, %rd1463;
	add.s64 	%rd1471, %rd1470, %rd1386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd1458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1015}, %rd1458;
	}
	shf.r.wrap.b32 	%r1016, %r1015, %r1014, 28;
	shf.r.wrap.b32 	%r1017, %r1014, %r1015, 28;
	mov.b64 	%rd1472, {%r1017, %r1016};
	shf.l.wrap.b32 	%r1018, %r1014, %r1015, 30;
	shf.l.wrap.b32 	%r1019, %r1015, %r1014, 30;
	mov.b64 	%rd1473, {%r1019, %r1018};
	xor.b64  	%rd1474, %rd1473, %rd1472;
	shf.l.wrap.b32 	%r1020, %r1014, %r1015, 25;
	shf.l.wrap.b32 	%r1021, %r1015, %r1014, 25;
	mov.b64 	%rd1475, {%r1021, %r1020};
	xor.b64  	%rd1476, %rd1474, %rd1475;
	xor.b64  	%rd1477, %rd1458, %rd1410;
	xor.b64  	%rd1478, %rd1458, %rd1434;
	and.b64  	%rd1479, %rd1478, %rd1477;
	xor.b64  	%rd1480, %rd1479, %rd1458;
	add.s64 	%rd1481, %rd1470, %rd1480;
	add.s64 	%rd1482, %rd1481, %rd1476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1022,%dummy}, %rd1471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1023}, %rd1471;
	}
	shf.r.wrap.b32 	%r1024, %r1023, %r1022, 14;
	shf.r.wrap.b32 	%r1025, %r1022, %r1023, 14;
	mov.b64 	%rd1483, {%r1025, %r1024};
	shf.r.wrap.b32 	%r1026, %r1023, %r1022, 18;
	shf.r.wrap.b32 	%r1027, %r1022, %r1023, 18;
	mov.b64 	%rd1484, {%r1027, %r1026};
	xor.b64  	%rd1485, %rd1484, %rd1483;
	shf.l.wrap.b32 	%r1028, %r1022, %r1023, 23;
	shf.l.wrap.b32 	%r1029, %r1023, %r1022, 23;
	mov.b64 	%rd1486, {%r1029, %r1028};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	xor.b64  	%rd1488, %rd1447, %rd1423;
	and.b64  	%rd1489, %rd1471, %rd1488;
	xor.b64  	%rd1490, %rd1489, %rd1423;
	add.s64 	%rd1491, %rd1399, %rd1155;
	add.s64 	%rd1492, %rd1491, %rd2695;
	add.s64 	%rd1493, %rd1492, %rd1490;
	add.s64 	%rd1494, %rd1493, %rd1487;
	add.s64 	%rd1495, %rd1494, %rd1410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1030,%dummy}, %rd1482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1031}, %rd1482;
	}
	shf.r.wrap.b32 	%r1032, %r1031, %r1030, 28;
	shf.r.wrap.b32 	%r1033, %r1030, %r1031, 28;
	mov.b64 	%rd1496, {%r1033, %r1032};
	shf.l.wrap.b32 	%r1034, %r1030, %r1031, 30;
	shf.l.wrap.b32 	%r1035, %r1031, %r1030, 30;
	mov.b64 	%rd1497, {%r1035, %r1034};
	xor.b64  	%rd1498, %rd1497, %rd1496;
	shf.l.wrap.b32 	%r1036, %r1030, %r1031, 25;
	shf.l.wrap.b32 	%r1037, %r1031, %r1030, 25;
	mov.b64 	%rd1499, {%r1037, %r1036};
	xor.b64  	%rd1500, %rd1498, %rd1499;
	xor.b64  	%rd1501, %rd1482, %rd1434;
	xor.b64  	%rd1502, %rd1482, %rd1458;
	and.b64  	%rd1503, %rd1502, %rd1501;
	xor.b64  	%rd1504, %rd1503, %rd1482;
	add.s64 	%rd1505, %rd1494, %rd1504;
	add.s64 	%rd1506, %rd1505, %rd1500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd1495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1039}, %rd1495;
	}
	shf.r.wrap.b32 	%r1040, %r1039, %r1038, 14;
	shf.r.wrap.b32 	%r1041, %r1038, %r1039, 14;
	mov.b64 	%rd1507, {%r1041, %r1040};
	shf.r.wrap.b32 	%r1042, %r1039, %r1038, 18;
	shf.r.wrap.b32 	%r1043, %r1038, %r1039, 18;
	mov.b64 	%rd1508, {%r1043, %r1042};
	xor.b64  	%rd1509, %rd1508, %rd1507;
	shf.l.wrap.b32 	%r1044, %r1038, %r1039, 23;
	shf.l.wrap.b32 	%r1045, %r1039, %r1038, 23;
	mov.b64 	%rd1510, {%r1045, %r1044};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	xor.b64  	%rd1512, %rd1471, %rd1447;
	and.b64  	%rd1513, %rd1495, %rd1512;
	xor.b64  	%rd1514, %rd1513, %rd1447;
	add.s64 	%rd1515, %rd1423, %rd1168;
	add.s64 	%rd1516, %rd1515, %rd2696;
	add.s64 	%rd1517, %rd1516, %rd1514;
	add.s64 	%rd1518, %rd1517, %rd1511;
	add.s64 	%rd1519, %rd1518, %rd1434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd1506;
	}
	shf.r.wrap.b32 	%r1048, %r1047, %r1046, 28;
	shf.r.wrap.b32 	%r1049, %r1046, %r1047, 28;
	mov.b64 	%rd1520, {%r1049, %r1048};
	shf.l.wrap.b32 	%r1050, %r1046, %r1047, 30;
	shf.l.wrap.b32 	%r1051, %r1047, %r1046, 30;
	mov.b64 	%rd1521, {%r1051, %r1050};
	xor.b64  	%rd1522, %rd1521, %rd1520;
	shf.l.wrap.b32 	%r1052, %r1046, %r1047, 25;
	shf.l.wrap.b32 	%r1053, %r1047, %r1046, 25;
	mov.b64 	%rd1523, {%r1053, %r1052};
	xor.b64  	%rd1524, %rd1522, %rd1523;
	xor.b64  	%rd1525, %rd1506, %rd1458;
	xor.b64  	%rd1526, %rd1506, %rd1482;
	and.b64  	%rd1527, %rd1526, %rd1525;
	xor.b64  	%rd1528, %rd1527, %rd1506;
	add.s64 	%rd1529, %rd1518, %rd1528;
	add.s64 	%rd1530, %rd1529, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1054,%dummy}, %rd1519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1055}, %rd1519;
	}
	shf.r.wrap.b32 	%r1056, %r1055, %r1054, 14;
	shf.r.wrap.b32 	%r1057, %r1054, %r1055, 14;
	mov.b64 	%rd1531, {%r1057, %r1056};
	shf.r.wrap.b32 	%r1058, %r1055, %r1054, 18;
	shf.r.wrap.b32 	%r1059, %r1054, %r1055, 18;
	mov.b64 	%rd1532, {%r1059, %r1058};
	xor.b64  	%rd1533, %rd1532, %rd1531;
	shf.l.wrap.b32 	%r1060, %r1054, %r1055, 23;
	shf.l.wrap.b32 	%r1061, %r1055, %r1054, 23;
	mov.b64 	%rd1534, {%r1061, %r1060};
	xor.b64  	%rd1535, %rd1533, %rd1534;
	xor.b64  	%rd1536, %rd1495, %rd1471;
	and.b64  	%rd1537, %rd1519, %rd1536;
	xor.b64  	%rd1538, %rd1537, %rd1471;
	add.s64 	%rd1539, %rd1447, %rd1181;
	add.s64 	%rd1540, %rd1539, %rd2697;
	add.s64 	%rd1541, %rd1540, %rd1538;
	add.s64 	%rd1542, %rd1541, %rd1535;
	add.s64 	%rd1543, %rd1542, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1062,%dummy}, %rd1530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1063}, %rd1530;
	}
	shf.r.wrap.b32 	%r1064, %r1063, %r1062, 28;
	shf.r.wrap.b32 	%r1065, %r1062, %r1063, 28;
	mov.b64 	%rd1544, {%r1065, %r1064};
	shf.l.wrap.b32 	%r1066, %r1062, %r1063, 30;
	shf.l.wrap.b32 	%r1067, %r1063, %r1062, 30;
	mov.b64 	%rd1545, {%r1067, %r1066};
	xor.b64  	%rd1546, %rd1545, %rd1544;
	shf.l.wrap.b32 	%r1068, %r1062, %r1063, 25;
	shf.l.wrap.b32 	%r1069, %r1063, %r1062, 25;
	mov.b64 	%rd1547, {%r1069, %r1068};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	xor.b64  	%rd1549, %rd1530, %rd1482;
	xor.b64  	%rd1550, %rd1530, %rd1506;
	and.b64  	%rd1551, %rd1550, %rd1549;
	xor.b64  	%rd1552, %rd1551, %rd1530;
	add.s64 	%rd1553, %rd1542, %rd1552;
	add.s64 	%rd1554, %rd1553, %rd1548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1070,%dummy}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1071}, %rd1543;
	}
	shf.r.wrap.b32 	%r1072, %r1071, %r1070, 14;
	shf.r.wrap.b32 	%r1073, %r1070, %r1071, 14;
	mov.b64 	%rd1555, {%r1073, %r1072};
	shf.r.wrap.b32 	%r1074, %r1071, %r1070, 18;
	shf.r.wrap.b32 	%r1075, %r1070, %r1071, 18;
	mov.b64 	%rd1556, {%r1075, %r1074};
	xor.b64  	%rd1557, %rd1556, %rd1555;
	shf.l.wrap.b32 	%r1076, %r1070, %r1071, 23;
	shf.l.wrap.b32 	%r1077, %r1071, %r1070, 23;
	mov.b64 	%rd1558, {%r1077, %r1076};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	xor.b64  	%rd1560, %rd1519, %rd1495;
	and.b64  	%rd1561, %rd1543, %rd1560;
	xor.b64  	%rd1562, %rd1561, %rd1495;
	add.s64 	%rd1563, %rd1471, %rd1194;
	add.s64 	%rd1564, %rd1563, %rd2698;
	add.s64 	%rd1565, %rd1564, %rd1562;
	add.s64 	%rd1566, %rd1565, %rd1559;
	add.s64 	%rd1567, %rd1566, %rd1482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1078,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1079}, %rd1554;
	}
	shf.r.wrap.b32 	%r1080, %r1079, %r1078, 28;
	shf.r.wrap.b32 	%r1081, %r1078, %r1079, 28;
	mov.b64 	%rd1568, {%r1081, %r1080};
	shf.l.wrap.b32 	%r1082, %r1078, %r1079, 30;
	shf.l.wrap.b32 	%r1083, %r1079, %r1078, 30;
	mov.b64 	%rd1569, {%r1083, %r1082};
	xor.b64  	%rd1570, %rd1569, %rd1568;
	shf.l.wrap.b32 	%r1084, %r1078, %r1079, 25;
	shf.l.wrap.b32 	%r1085, %r1079, %r1078, 25;
	mov.b64 	%rd1571, {%r1085, %r1084};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	xor.b64  	%rd1573, %rd1554, %rd1506;
	xor.b64  	%rd1574, %rd1554, %rd1530;
	and.b64  	%rd1575, %rd1574, %rd1573;
	xor.b64  	%rd1576, %rd1575, %rd1554;
	add.s64 	%rd1577, %rd1566, %rd1576;
	add.s64 	%rd1578, %rd1577, %rd1572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1086,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1087}, %rd1181;
	}
	shf.r.wrap.b32 	%r1088, %r1087, %r1086, 19;
	shf.r.wrap.b32 	%r1089, %r1086, %r1087, 19;
	mov.b64 	%rd1579, {%r1089, %r1088};
	shf.l.wrap.b32 	%r1090, %r1086, %r1087, 3;
	shf.l.wrap.b32 	%r1091, %r1087, %r1086, 3;
	mov.b64 	%rd1580, {%r1091, %r1090};
	shr.u64 	%rd1581, %rd1181, 6;
	xor.b64  	%rd1582, %rd1579, %rd1581;
	xor.b64  	%rd1583, %rd1582, %rd1580;
	shf.r.wrap.b32 	%r1092, %r705, %r704, 1;
	shf.r.wrap.b32 	%r1093, %r704, %r705, 1;
	mov.b64 	%rd1584, {%r1093, %r1092};
	shf.r.wrap.b32 	%r1094, %r705, %r704, 8;
	shf.r.wrap.b32 	%r1095, %r704, %r705, 8;
	mov.b64 	%rd1585, {%r1095, %r1094};
	shr.u64 	%rd1586, %rd1022, 7;
	xor.b64  	%rd1587, %rd1584, %rd1586;
	xor.b64  	%rd1588, %rd1587, %rd1585;
	add.s64 	%rd1589, %rd1009, %rd1116;
	add.s64 	%rd1590, %rd1589, %rd1583;
	add.s64 	%rd1591, %rd1590, %rd1588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1096,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1097}, %rd1194;
	}
	shf.r.wrap.b32 	%r1098, %r1097, %r1096, 19;
	shf.r.wrap.b32 	%r1099, %r1096, %r1097, 19;
	mov.b64 	%rd1592, {%r1099, %r1098};
	shf.l.wrap.b32 	%r1100, %r1096, %r1097, 3;
	shf.l.wrap.b32 	%r1101, %r1097, %r1096, 3;
	mov.b64 	%rd1593, {%r1101, %r1100};
	shr.u64 	%rd1594, %rd1194, 6;
	xor.b64  	%rd1595, %rd1592, %rd1594;
	xor.b64  	%rd1596, %rd1595, %rd1593;
	shf.r.wrap.b32 	%r1102, %r715, %r714, 1;
	shf.r.wrap.b32 	%r1103, %r714, %r715, 1;
	mov.b64 	%rd1597, {%r1103, %r1102};
	shf.r.wrap.b32 	%r1104, %r715, %r714, 8;
	shf.r.wrap.b32 	%r1105, %r714, %r715, 8;
	mov.b64 	%rd1598, {%r1105, %r1104};
	shr.u64 	%rd1599, %rd1030, 7;
	xor.b64  	%rd1600, %rd1597, %rd1599;
	xor.b64  	%rd1601, %rd1600, %rd1598;
	add.s64 	%rd1602, %rd1022, %rd1129;
	add.s64 	%rd1603, %rd1602, %rd1596;
	add.s64 	%rd1604, %rd1603, %rd1601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd1591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd1591;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 19;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 19;
	mov.b64 	%rd1605, {%r1109, %r1108};
	shf.l.wrap.b32 	%r1110, %r1106, %r1107, 3;
	shf.l.wrap.b32 	%r1111, %r1107, %r1106, 3;
	mov.b64 	%rd1606, {%r1111, %r1110};
	shr.u64 	%rd1607, %rd1591, 6;
	xor.b64  	%rd1608, %rd1605, %rd1607;
	xor.b64  	%rd1609, %rd1608, %rd1606;
	shf.r.wrap.b32 	%r1112, %r721, %r720, 1;
	shf.r.wrap.b32 	%r1113, %r720, %r721, 1;
	mov.b64 	%rd1610, {%r1113, %r1112};
	shf.r.wrap.b32 	%r1114, %r721, %r720, 8;
	shf.r.wrap.b32 	%r1115, %r720, %r721, 8;
	mov.b64 	%rd1611, {%r1115, %r1114};
	shr.u64 	%rd1612, %rd1043, 7;
	xor.b64  	%rd1613, %rd1610, %rd1612;
	xor.b64  	%rd1614, %rd1613, %rd1611;
	add.s64 	%rd1615, %rd1030, %rd1142;
	add.s64 	%rd1616, %rd1615, %rd1609;
	add.s64 	%rd1617, %rd1616, %rd1614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1116,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1117}, %rd1604;
	}
	shf.r.wrap.b32 	%r1118, %r1117, %r1116, 19;
	shf.r.wrap.b32 	%r1119, %r1116, %r1117, 19;
	mov.b64 	%rd1618, {%r1119, %r1118};
	shf.l.wrap.b32 	%r1120, %r1116, %r1117, 3;
	shf.l.wrap.b32 	%r1121, %r1117, %r1116, 3;
	mov.b64 	%rd1619, {%r1121, %r1120};
	shr.u64 	%rd1620, %rd1604, 6;
	xor.b64  	%rd1621, %rd1618, %rd1620;
	xor.b64  	%rd1622, %rd1621, %rd1619;
	shf.r.wrap.b32 	%r1122, %r731, %r730, 1;
	shf.r.wrap.b32 	%r1123, %r730, %r731, 1;
	mov.b64 	%rd1623, {%r1123, %r1122};
	shf.r.wrap.b32 	%r1124, %r731, %r730, 8;
	shf.r.wrap.b32 	%r1125, %r730, %r731, 8;
	mov.b64 	%rd1624, {%r1125, %r1124};
	shr.u64 	%rd1625, %rd1051, 7;
	xor.b64  	%rd1626, %rd1623, %rd1625;
	xor.b64  	%rd1627, %rd1626, %rd1624;
	add.s64 	%rd1628, %rd1043, %rd1155;
	add.s64 	%rd1629, %rd1628, %rd1622;
	add.s64 	%rd1630, %rd1629, %rd1627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1126,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1127}, %rd1617;
	}
	shf.r.wrap.b32 	%r1128, %r1127, %r1126, 19;
	shf.r.wrap.b32 	%r1129, %r1126, %r1127, 19;
	mov.b64 	%rd1631, {%r1129, %r1128};
	shf.l.wrap.b32 	%r1130, %r1126, %r1127, 3;
	shf.l.wrap.b32 	%r1131, %r1127, %r1126, 3;
	mov.b64 	%rd1632, {%r1131, %r1130};
	shr.u64 	%rd1633, %rd1617, 6;
	xor.b64  	%rd1634, %rd1631, %rd1633;
	xor.b64  	%rd1635, %rd1634, %rd1632;
	shf.r.wrap.b32 	%r1132, %r741, %r740, 1;
	shf.r.wrap.b32 	%r1133, %r740, %r741, 1;
	mov.b64 	%rd1636, {%r1133, %r1132};
	shf.r.wrap.b32 	%r1134, %r741, %r740, 8;
	shf.r.wrap.b32 	%r1135, %r740, %r741, 8;
	mov.b64 	%rd1637, {%r1135, %r1134};
	shr.u64 	%rd1638, %rd1064, 7;
	xor.b64  	%rd1639, %rd1636, %rd1638;
	xor.b64  	%rd1640, %rd1639, %rd1637;
	add.s64 	%rd1641, %rd1051, %rd1168;
	add.s64 	%rd1642, %rd1641, %rd1635;
	add.s64 	%rd1643, %rd1642, %rd1640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1136,%dummy}, %rd1630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd1630;
	}
	shf.r.wrap.b32 	%r1138, %r1137, %r1136, 19;
	shf.r.wrap.b32 	%r1139, %r1136, %r1137, 19;
	mov.b64 	%rd1644, {%r1139, %r1138};
	shf.l.wrap.b32 	%r1140, %r1136, %r1137, 3;
	shf.l.wrap.b32 	%r1141, %r1137, %r1136, 3;
	mov.b64 	%rd1645, {%r1141, %r1140};
	shr.u64 	%rd1646, %rd1630, 6;
	xor.b64  	%rd1647, %rd1644, %rd1646;
	xor.b64  	%rd1648, %rd1647, %rd1645;
	shf.r.wrap.b32 	%r1142, %r751, %r750, 1;
	shf.r.wrap.b32 	%r1143, %r750, %r751, 1;
	mov.b64 	%rd1649, {%r1143, %r1142};
	shf.r.wrap.b32 	%r1144, %r751, %r750, 8;
	shf.r.wrap.b32 	%r1145, %r750, %r751, 8;
	mov.b64 	%rd1650, {%r1145, %r1144};
	shr.u64 	%rd1651, %rd1077, 7;
	xor.b64  	%rd1652, %rd1649, %rd1651;
	xor.b64  	%rd1653, %rd1652, %rd1650;
	add.s64 	%rd1654, %rd1064, %rd1181;
	add.s64 	%rd1655, %rd1654, %rd1648;
	add.s64 	%rd1656, %rd1655, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1146,%dummy}, %rd1643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1147}, %rd1643;
	}
	shf.r.wrap.b32 	%r1148, %r1147, %r1146, 19;
	shf.r.wrap.b32 	%r1149, %r1146, %r1147, 19;
	mov.b64 	%rd1657, {%r1149, %r1148};
	shf.l.wrap.b32 	%r1150, %r1146, %r1147, 3;
	shf.l.wrap.b32 	%r1151, %r1147, %r1146, 3;
	mov.b64 	%rd1658, {%r1151, %r1150};
	shr.u64 	%rd1659, %rd1643, 6;
	xor.b64  	%rd1660, %rd1657, %rd1659;
	xor.b64  	%rd1661, %rd1660, %rd1658;
	shf.r.wrap.b32 	%r1152, %r761, %r760, 1;
	shf.r.wrap.b32 	%r1153, %r760, %r761, 1;
	mov.b64 	%rd1662, {%r1153, %r1152};
	shf.r.wrap.b32 	%r1154, %r761, %r760, 8;
	shf.r.wrap.b32 	%r1155, %r760, %r761, 8;
	mov.b64 	%rd1663, {%r1155, %r1154};
	shr.u64 	%rd1664, %rd1090, 7;
	xor.b64  	%rd1665, %rd1662, %rd1664;
	xor.b64  	%rd1666, %rd1665, %rd1663;
	add.s64 	%rd1667, %rd1077, %rd1194;
	add.s64 	%rd1668, %rd1667, %rd1661;
	add.s64 	%rd1669, %rd1668, %rd1666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1156,%dummy}, %rd1656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1157}, %rd1656;
	}
	shf.r.wrap.b32 	%r1158, %r1157, %r1156, 19;
	shf.r.wrap.b32 	%r1159, %r1156, %r1157, 19;
	mov.b64 	%rd1670, {%r1159, %r1158};
	shf.l.wrap.b32 	%r1160, %r1156, %r1157, 3;
	shf.l.wrap.b32 	%r1161, %r1157, %r1156, 3;
	mov.b64 	%rd1671, {%r1161, %r1160};
	shr.u64 	%rd1672, %rd1656, 6;
	xor.b64  	%rd1673, %rd1670, %rd1672;
	xor.b64  	%rd1674, %rd1673, %rd1671;
	shf.r.wrap.b32 	%r1162, %r771, %r770, 1;
	shf.r.wrap.b32 	%r1163, %r770, %r771, 1;
	mov.b64 	%rd1675, {%r1163, %r1162};
	shf.r.wrap.b32 	%r1164, %r771, %r770, 8;
	shf.r.wrap.b32 	%r1165, %r770, %r771, 8;
	mov.b64 	%rd1676, {%r1165, %r1164};
	shr.u64 	%rd1677, %rd1103, 7;
	xor.b64  	%rd1678, %rd1675, %rd1677;
	xor.b64  	%rd1679, %rd1678, %rd1676;
	add.s64 	%rd1680, %rd1591, %rd1090;
	add.s64 	%rd1681, %rd1680, %rd1674;
	add.s64 	%rd1682, %rd1681, %rd1679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1166,%dummy}, %rd1669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1167}, %rd1669;
	}
	shf.r.wrap.b32 	%r1168, %r1167, %r1166, 19;
	shf.r.wrap.b32 	%r1169, %r1166, %r1167, 19;
	mov.b64 	%rd1683, {%r1169, %r1168};
	shf.l.wrap.b32 	%r1170, %r1166, %r1167, 3;
	shf.l.wrap.b32 	%r1171, %r1167, %r1166, 3;
	mov.b64 	%rd1684, {%r1171, %r1170};
	shr.u64 	%rd1685, %rd1669, 6;
	xor.b64  	%rd1686, %rd1683, %rd1685;
	xor.b64  	%rd1687, %rd1686, %rd1684;
	shf.r.wrap.b32 	%r1172, %r781, %r780, 1;
	shf.r.wrap.b32 	%r1173, %r780, %r781, 1;
	mov.b64 	%rd1688, {%r1173, %r1172};
	shf.r.wrap.b32 	%r1174, %r781, %r780, 8;
	shf.r.wrap.b32 	%r1175, %r780, %r781, 8;
	mov.b64 	%rd1689, {%r1175, %r1174};
	shr.u64 	%rd1690, %rd1116, 7;
	xor.b64  	%rd1691, %rd1688, %rd1690;
	xor.b64  	%rd1692, %rd1691, %rd1689;
	add.s64 	%rd1693, %rd1604, %rd1103;
	add.s64 	%rd1694, %rd1693, %rd1687;
	add.s64 	%rd1695, %rd1694, %rd1692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1176,%dummy}, %rd1682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd1682;
	}
	shf.r.wrap.b32 	%r1178, %r1177, %r1176, 19;
	shf.r.wrap.b32 	%r1179, %r1176, %r1177, 19;
	mov.b64 	%rd1696, {%r1179, %r1178};
	shf.l.wrap.b32 	%r1180, %r1176, %r1177, 3;
	shf.l.wrap.b32 	%r1181, %r1177, %r1176, 3;
	mov.b64 	%rd1697, {%r1181, %r1180};
	shr.u64 	%rd1698, %rd1682, 6;
	xor.b64  	%rd1699, %rd1696, %rd1698;
	xor.b64  	%rd1700, %rd1699, %rd1697;
	shf.r.wrap.b32 	%r1182, %r791, %r790, 1;
	shf.r.wrap.b32 	%r1183, %r790, %r791, 1;
	mov.b64 	%rd1701, {%r1183, %r1182};
	shf.r.wrap.b32 	%r1184, %r791, %r790, 8;
	shf.r.wrap.b32 	%r1185, %r790, %r791, 8;
	mov.b64 	%rd1702, {%r1185, %r1184};
	shr.u64 	%rd1703, %rd1129, 7;
	xor.b64  	%rd1704, %rd1701, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd1702;
	add.s64 	%rd1706, %rd1617, %rd1116;
	add.s64 	%rd1707, %rd1706, %rd1700;
	add.s64 	%rd1708, %rd1707, %rd1705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1186,%dummy}, %rd1695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1187}, %rd1695;
	}
	shf.r.wrap.b32 	%r1188, %r1187, %r1186, 19;
	shf.r.wrap.b32 	%r1189, %r1186, %r1187, 19;
	mov.b64 	%rd1709, {%r1189, %r1188};
	shf.l.wrap.b32 	%r1190, %r1186, %r1187, 3;
	shf.l.wrap.b32 	%r1191, %r1187, %r1186, 3;
	mov.b64 	%rd1710, {%r1191, %r1190};
	shr.u64 	%rd1711, %rd1695, 6;
	xor.b64  	%rd1712, %rd1709, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1710;
	shf.r.wrap.b32 	%r1192, %r801, %r800, 1;
	shf.r.wrap.b32 	%r1193, %r800, %r801, 1;
	mov.b64 	%rd1714, {%r1193, %r1192};
	shf.r.wrap.b32 	%r1194, %r801, %r800, 8;
	shf.r.wrap.b32 	%r1195, %r800, %r801, 8;
	mov.b64 	%rd1715, {%r1195, %r1194};
	shr.u64 	%rd1716, %rd1142, 7;
	xor.b64  	%rd1717, %rd1714, %rd1716;
	xor.b64  	%rd1718, %rd1717, %rd1715;
	add.s64 	%rd1719, %rd1630, %rd1129;
	add.s64 	%rd1720, %rd1719, %rd1713;
	add.s64 	%rd1721, %rd1720, %rd1718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1196,%dummy}, %rd1708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd1708;
	}
	shf.r.wrap.b32 	%r1198, %r1197, %r1196, 19;
	shf.r.wrap.b32 	%r1199, %r1196, %r1197, 19;
	mov.b64 	%rd1722, {%r1199, %r1198};
	shf.l.wrap.b32 	%r1200, %r1196, %r1197, 3;
	shf.l.wrap.b32 	%r1201, %r1197, %r1196, 3;
	mov.b64 	%rd1723, {%r1201, %r1200};
	shr.u64 	%rd1724, %rd1708, 6;
	xor.b64  	%rd1725, %rd1722, %rd1724;
	xor.b64  	%rd1726, %rd1725, %rd1723;
	shf.r.wrap.b32 	%r1202, %r811, %r810, 1;
	shf.r.wrap.b32 	%r1203, %r810, %r811, 1;
	mov.b64 	%rd1727, {%r1203, %r1202};
	shf.r.wrap.b32 	%r1204, %r811, %r810, 8;
	shf.r.wrap.b32 	%r1205, %r810, %r811, 8;
	mov.b64 	%rd1728, {%r1205, %r1204};
	shr.u64 	%rd1729, %rd1155, 7;
	xor.b64  	%rd1730, %rd1727, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1728;
	add.s64 	%rd1732, %rd1643, %rd1142;
	add.s64 	%rd1733, %rd1732, %rd1726;
	add.s64 	%rd1734, %rd1733, %rd1731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1207}, %rd1721;
	}
	shf.r.wrap.b32 	%r1208, %r1207, %r1206, 19;
	shf.r.wrap.b32 	%r1209, %r1206, %r1207, 19;
	mov.b64 	%rd1735, {%r1209, %r1208};
	shf.l.wrap.b32 	%r1210, %r1206, %r1207, 3;
	shf.l.wrap.b32 	%r1211, %r1207, %r1206, 3;
	mov.b64 	%rd1736, {%r1211, %r1210};
	shr.u64 	%rd1737, %rd1721, 6;
	xor.b64  	%rd1738, %rd1735, %rd1737;
	xor.b64  	%rd1739, %rd1738, %rd1736;
	shf.r.wrap.b32 	%r1212, %r821, %r820, 1;
	shf.r.wrap.b32 	%r1213, %r820, %r821, 1;
	mov.b64 	%rd1740, {%r1213, %r1212};
	shf.r.wrap.b32 	%r1214, %r821, %r820, 8;
	shf.r.wrap.b32 	%r1215, %r820, %r821, 8;
	mov.b64 	%rd1741, {%r1215, %r1214};
	shr.u64 	%rd1742, %rd1168, 7;
	xor.b64  	%rd1743, %rd1740, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1741;
	add.s64 	%rd1745, %rd1656, %rd1155;
	add.s64 	%rd1746, %rd1745, %rd1739;
	add.s64 	%rd1747, %rd1746, %rd1744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1216,%dummy}, %rd1734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1217}, %rd1734;
	}
	shf.r.wrap.b32 	%r1218, %r1217, %r1216, 19;
	shf.r.wrap.b32 	%r1219, %r1216, %r1217, 19;
	mov.b64 	%rd1748, {%r1219, %r1218};
	shf.l.wrap.b32 	%r1220, %r1216, %r1217, 3;
	shf.l.wrap.b32 	%r1221, %r1217, %r1216, 3;
	mov.b64 	%rd1749, {%r1221, %r1220};
	shr.u64 	%rd1750, %rd1734, 6;
	xor.b64  	%rd1751, %rd1748, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1749;
	shf.r.wrap.b32 	%r1222, %r1087, %r1086, 1;
	shf.r.wrap.b32 	%r1223, %r1086, %r1087, 1;
	mov.b64 	%rd1753, {%r1223, %r1222};
	shf.r.wrap.b32 	%r1224, %r1087, %r1086, 8;
	shf.r.wrap.b32 	%r1225, %r1086, %r1087, 8;
	mov.b64 	%rd1754, {%r1225, %r1224};
	shr.u64 	%rd1755, %rd1181, 7;
	xor.b64  	%rd1756, %rd1753, %rd1755;
	xor.b64  	%rd1757, %rd1756, %rd1754;
	add.s64 	%rd1758, %rd1669, %rd1168;
	add.s64 	%rd1759, %rd1758, %rd1752;
	add.s64 	%rd1760, %rd1759, %rd1757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1226,%dummy}, %rd1747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1227}, %rd1747;
	}
	shf.r.wrap.b32 	%r1228, %r1227, %r1226, 19;
	shf.r.wrap.b32 	%r1229, %r1226, %r1227, 19;
	mov.b64 	%rd1761, {%r1229, %r1228};
	shf.l.wrap.b32 	%r1230, %r1226, %r1227, 3;
	shf.l.wrap.b32 	%r1231, %r1227, %r1226, 3;
	mov.b64 	%rd1762, {%r1231, %r1230};
	shr.u64 	%rd1763, %rd1747, 6;
	xor.b64  	%rd1764, %rd1761, %rd1763;
	xor.b64  	%rd1765, %rd1764, %rd1762;
	shf.r.wrap.b32 	%r1232, %r1097, %r1096, 1;
	shf.r.wrap.b32 	%r1233, %r1096, %r1097, 1;
	mov.b64 	%rd1766, {%r1233, %r1232};
	shf.r.wrap.b32 	%r1234, %r1097, %r1096, 8;
	shf.r.wrap.b32 	%r1235, %r1096, %r1097, 8;
	mov.b64 	%rd1767, {%r1235, %r1234};
	shr.u64 	%rd1768, %rd1194, 7;
	xor.b64  	%rd1769, %rd1766, %rd1768;
	xor.b64  	%rd1770, %rd1769, %rd1767;
	add.s64 	%rd1771, %rd1682, %rd1181;
	add.s64 	%rd1772, %rd1771, %rd1765;
	add.s64 	%rd1773, %rd1772, %rd1770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1236,%dummy}, %rd1760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1237}, %rd1760;
	}
	shf.r.wrap.b32 	%r1238, %r1237, %r1236, 19;
	shf.r.wrap.b32 	%r1239, %r1236, %r1237, 19;
	mov.b64 	%rd1774, {%r1239, %r1238};
	shf.l.wrap.b32 	%r1240, %r1236, %r1237, 3;
	shf.l.wrap.b32 	%r1241, %r1237, %r1236, 3;
	mov.b64 	%rd1775, {%r1241, %r1240};
	shr.u64 	%rd1776, %rd1760, 6;
	xor.b64  	%rd1777, %rd1774, %rd1776;
	xor.b64  	%rd1778, %rd1777, %rd1775;
	shf.r.wrap.b32 	%r1242, %r1107, %r1106, 1;
	shf.r.wrap.b32 	%r1243, %r1106, %r1107, 1;
	mov.b64 	%rd1779, {%r1243, %r1242};
	shf.r.wrap.b32 	%r1244, %r1107, %r1106, 8;
	shf.r.wrap.b32 	%r1245, %r1106, %r1107, 8;
	mov.b64 	%rd1780, {%r1245, %r1244};
	shr.u64 	%rd1781, %rd1591, 7;
	xor.b64  	%rd1782, %rd1779, %rd1781;
	xor.b64  	%rd1783, %rd1782, %rd1780;
	add.s64 	%rd1784, %rd1695, %rd1194;
	add.s64 	%rd1785, %rd1784, %rd1778;
	add.s64 	%rd1786, %rd1785, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1247}, %rd1567;
	}
	shf.r.wrap.b32 	%r1248, %r1247, %r1246, 14;
	shf.r.wrap.b32 	%r1249, %r1246, %r1247, 14;
	mov.b64 	%rd1787, {%r1249, %r1248};
	shf.r.wrap.b32 	%r1250, %r1247, %r1246, 18;
	shf.r.wrap.b32 	%r1251, %r1246, %r1247, 18;
	mov.b64 	%rd1788, {%r1251, %r1250};
	xor.b64  	%rd1789, %rd1788, %rd1787;
	shf.l.wrap.b32 	%r1252, %r1246, %r1247, 23;
	shf.l.wrap.b32 	%r1253, %r1247, %r1246, 23;
	mov.b64 	%rd1790, {%r1253, %r1252};
	xor.b64  	%rd1791, %rd1789, %rd1790;
	xor.b64  	%rd1792, %rd1519, %rd1543;
	and.b64  	%rd1793, %rd1792, %rd1567;
	xor.b64  	%rd1794, %rd1793, %rd1519;
	add.s64 	%rd1795, %rd1794, %rd1495;
	add.s64 	%rd1796, %rd1795, %rd1591;
	add.s64 	%rd1797, %rd1796, %rd2699;
	add.s64 	%rd1798, %rd1797, %rd1791;
	add.s64 	%rd1799, %rd1798, %rd1506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1254,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1255}, %rd1578;
	}
	shf.r.wrap.b32 	%r1256, %r1255, %r1254, 28;
	shf.r.wrap.b32 	%r1257, %r1254, %r1255, 28;
	mov.b64 	%rd1800, {%r1257, %r1256};
	shf.l.wrap.b32 	%r1258, %r1254, %r1255, 30;
	shf.l.wrap.b32 	%r1259, %r1255, %r1254, 30;
	mov.b64 	%rd1801, {%r1259, %r1258};
	xor.b64  	%rd1802, %rd1801, %rd1800;
	shf.l.wrap.b32 	%r1260, %r1254, %r1255, 25;
	shf.l.wrap.b32 	%r1261, %r1255, %r1254, 25;
	mov.b64 	%rd1803, {%r1261, %r1260};
	xor.b64  	%rd1804, %rd1802, %rd1803;
	xor.b64  	%rd1805, %rd1578, %rd1530;
	xor.b64  	%rd1806, %rd1578, %rd1554;
	and.b64  	%rd1807, %rd1806, %rd1805;
	xor.b64  	%rd1808, %rd1807, %rd1578;
	add.s64 	%rd1809, %rd1798, %rd1808;
	add.s64 	%rd1810, %rd1809, %rd1804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd1799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1263}, %rd1799;
	}
	shf.r.wrap.b32 	%r1264, %r1263, %r1262, 14;
	shf.r.wrap.b32 	%r1265, %r1262, %r1263, 14;
	mov.b64 	%rd1811, {%r1265, %r1264};
	shf.r.wrap.b32 	%r1266, %r1263, %r1262, 18;
	shf.r.wrap.b32 	%r1267, %r1262, %r1263, 18;
	mov.b64 	%rd1812, {%r1267, %r1266};
	xor.b64  	%rd1813, %rd1812, %rd1811;
	shf.l.wrap.b32 	%r1268, %r1262, %r1263, 23;
	shf.l.wrap.b32 	%r1269, %r1263, %r1262, 23;
	mov.b64 	%rd1814, {%r1269, %r1268};
	xor.b64  	%rd1815, %rd1813, %rd1814;
	xor.b64  	%rd1816, %rd1543, %rd1567;
	and.b64  	%rd1817, %rd1799, %rd1816;
	xor.b64  	%rd1818, %rd1817, %rd1543;
	add.s64 	%rd1819, %rd1604, %rd1519;
	add.s64 	%rd1820, %rd1819, %rd2700;
	add.s64 	%rd1821, %rd1820, %rd1818;
	add.s64 	%rd1822, %rd1821, %rd1815;
	add.s64 	%rd1823, %rd1822, %rd1530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1270,%dummy}, %rd1810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1271}, %rd1810;
	}
	shf.r.wrap.b32 	%r1272, %r1271, %r1270, 28;
	shf.r.wrap.b32 	%r1273, %r1270, %r1271, 28;
	mov.b64 	%rd1824, {%r1273, %r1272};
	shf.l.wrap.b32 	%r1274, %r1270, %r1271, 30;
	shf.l.wrap.b32 	%r1275, %r1271, %r1270, 30;
	mov.b64 	%rd1825, {%r1275, %r1274};
	xor.b64  	%rd1826, %rd1825, %rd1824;
	shf.l.wrap.b32 	%r1276, %r1270, %r1271, 25;
	shf.l.wrap.b32 	%r1277, %r1271, %r1270, 25;
	mov.b64 	%rd1827, {%r1277, %r1276};
	xor.b64  	%rd1828, %rd1826, %rd1827;
	xor.b64  	%rd1829, %rd1810, %rd1554;
	xor.b64  	%rd1830, %rd1810, %rd1578;
	and.b64  	%rd1831, %rd1830, %rd1829;
	xor.b64  	%rd1832, %rd1831, %rd1810;
	add.s64 	%rd1833, %rd1822, %rd1832;
	add.s64 	%rd1834, %rd1833, %rd1828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1279}, %rd1823;
	}
	shf.r.wrap.b32 	%r1280, %r1279, %r1278, 14;
	shf.r.wrap.b32 	%r1281, %r1278, %r1279, 14;
	mov.b64 	%rd1835, {%r1281, %r1280};
	shf.r.wrap.b32 	%r1282, %r1279, %r1278, 18;
	shf.r.wrap.b32 	%r1283, %r1278, %r1279, 18;
	mov.b64 	%rd1836, {%r1283, %r1282};
	xor.b64  	%rd1837, %rd1836, %rd1835;
	shf.l.wrap.b32 	%r1284, %r1278, %r1279, 23;
	shf.l.wrap.b32 	%r1285, %r1279, %r1278, 23;
	mov.b64 	%rd1838, {%r1285, %r1284};
	xor.b64  	%rd1839, %rd1837, %rd1838;
	xor.b64  	%rd1840, %rd1799, %rd1567;
	and.b64  	%rd1841, %rd1823, %rd1840;
	xor.b64  	%rd1842, %rd1841, %rd1567;
	add.s64 	%rd1843, %rd1617, %rd1543;
	add.s64 	%rd1844, %rd1843, %rd2701;
	add.s64 	%rd1845, %rd1844, %rd1842;
	add.s64 	%rd1846, %rd1845, %rd1839;
	add.s64 	%rd1847, %rd1846, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1286,%dummy}, %rd1834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1287}, %rd1834;
	}
	shf.r.wrap.b32 	%r1288, %r1287, %r1286, 28;
	shf.r.wrap.b32 	%r1289, %r1286, %r1287, 28;
	mov.b64 	%rd1848, {%r1289, %r1288};
	shf.l.wrap.b32 	%r1290, %r1286, %r1287, 30;
	shf.l.wrap.b32 	%r1291, %r1287, %r1286, 30;
	mov.b64 	%rd1849, {%r1291, %r1290};
	xor.b64  	%rd1850, %rd1849, %rd1848;
	shf.l.wrap.b32 	%r1292, %r1286, %r1287, 25;
	shf.l.wrap.b32 	%r1293, %r1287, %r1286, 25;
	mov.b64 	%rd1851, {%r1293, %r1292};
	xor.b64  	%rd1852, %rd1850, %rd1851;
	xor.b64  	%rd1853, %rd1834, %rd1578;
	xor.b64  	%rd1854, %rd1834, %rd1810;
	and.b64  	%rd1855, %rd1854, %rd1853;
	xor.b64  	%rd1856, %rd1855, %rd1834;
	add.s64 	%rd1857, %rd1846, %rd1856;
	add.s64 	%rd1858, %rd1857, %rd1852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1294,%dummy}, %rd1847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1295}, %rd1847;
	}
	shf.r.wrap.b32 	%r1296, %r1295, %r1294, 14;
	shf.r.wrap.b32 	%r1297, %r1294, %r1295, 14;
	mov.b64 	%rd1859, {%r1297, %r1296};
	shf.r.wrap.b32 	%r1298, %r1295, %r1294, 18;
	shf.r.wrap.b32 	%r1299, %r1294, %r1295, 18;
	mov.b64 	%rd1860, {%r1299, %r1298};
	xor.b64  	%rd1861, %rd1860, %rd1859;
	shf.l.wrap.b32 	%r1300, %r1294, %r1295, 23;
	shf.l.wrap.b32 	%r1301, %r1295, %r1294, 23;
	mov.b64 	%rd1862, {%r1301, %r1300};
	xor.b64  	%rd1863, %rd1861, %rd1862;
	xor.b64  	%rd1864, %rd1823, %rd1799;
	and.b64  	%rd1865, %rd1847, %rd1864;
	xor.b64  	%rd1866, %rd1865, %rd1799;
	add.s64 	%rd1867, %rd1630, %rd1567;
	add.s64 	%rd1868, %rd1867, %rd2702;
	add.s64 	%rd1869, %rd1868, %rd1866;
	add.s64 	%rd1870, %rd1869, %rd1863;
	add.s64 	%rd1871, %rd1870, %rd1578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1302,%dummy}, %rd1858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1303}, %rd1858;
	}
	shf.r.wrap.b32 	%r1304, %r1303, %r1302, 28;
	shf.r.wrap.b32 	%r1305, %r1302, %r1303, 28;
	mov.b64 	%rd1872, {%r1305, %r1304};
	shf.l.wrap.b32 	%r1306, %r1302, %r1303, 30;
	shf.l.wrap.b32 	%r1307, %r1303, %r1302, 30;
	mov.b64 	%rd1873, {%r1307, %r1306};
	xor.b64  	%rd1874, %rd1873, %rd1872;
	shf.l.wrap.b32 	%r1308, %r1302, %r1303, 25;
	shf.l.wrap.b32 	%r1309, %r1303, %r1302, 25;
	mov.b64 	%rd1875, {%r1309, %r1308};
	xor.b64  	%rd1876, %rd1874, %rd1875;
	xor.b64  	%rd1877, %rd1858, %rd1810;
	xor.b64  	%rd1878, %rd1858, %rd1834;
	and.b64  	%rd1879, %rd1878, %rd1877;
	xor.b64  	%rd1880, %rd1879, %rd1858;
	add.s64 	%rd1881, %rd1870, %rd1880;
	add.s64 	%rd1882, %rd1881, %rd1876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd1871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1311}, %rd1871;
	}
	shf.r.wrap.b32 	%r1312, %r1311, %r1310, 14;
	shf.r.wrap.b32 	%r1313, %r1310, %r1311, 14;
	mov.b64 	%rd1883, {%r1313, %r1312};
	shf.r.wrap.b32 	%r1314, %r1311, %r1310, 18;
	shf.r.wrap.b32 	%r1315, %r1310, %r1311, 18;
	mov.b64 	%rd1884, {%r1315, %r1314};
	xor.b64  	%rd1885, %rd1884, %rd1883;
	shf.l.wrap.b32 	%r1316, %r1310, %r1311, 23;
	shf.l.wrap.b32 	%r1317, %r1311, %r1310, 23;
	mov.b64 	%rd1886, {%r1317, %r1316};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	xor.b64  	%rd1888, %rd1847, %rd1823;
	and.b64  	%rd1889, %rd1871, %rd1888;
	xor.b64  	%rd1890, %rd1889, %rd1823;
	add.s64 	%rd1891, %rd1799, %rd1643;
	add.s64 	%rd1892, %rd1891, %rd2703;
	add.s64 	%rd1893, %rd1892, %rd1890;
	add.s64 	%rd1894, %rd1893, %rd1887;
	add.s64 	%rd1895, %rd1894, %rd1810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd1882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd1882;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 28;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 28;
	mov.b64 	%rd1896, {%r1321, %r1320};
	shf.l.wrap.b32 	%r1322, %r1318, %r1319, 30;
	shf.l.wrap.b32 	%r1323, %r1319, %r1318, 30;
	mov.b64 	%rd1897, {%r1323, %r1322};
	xor.b64  	%rd1898, %rd1897, %rd1896;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 25;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 25;
	mov.b64 	%rd1899, {%r1325, %r1324};
	xor.b64  	%rd1900, %rd1898, %rd1899;
	xor.b64  	%rd1901, %rd1882, %rd1834;
	xor.b64  	%rd1902, %rd1882, %rd1858;
	and.b64  	%rd1903, %rd1902, %rd1901;
	xor.b64  	%rd1904, %rd1903, %rd1882;
	add.s64 	%rd1905, %rd1894, %rd1904;
	add.s64 	%rd1906, %rd1905, %rd1900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd1895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd1895;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 14;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 14;
	mov.b64 	%rd1907, {%r1329, %r1328};
	shf.r.wrap.b32 	%r1330, %r1327, %r1326, 18;
	shf.r.wrap.b32 	%r1331, %r1326, %r1327, 18;
	mov.b64 	%rd1908, {%r1331, %r1330};
	xor.b64  	%rd1909, %rd1908, %rd1907;
	shf.l.wrap.b32 	%r1332, %r1326, %r1327, 23;
	shf.l.wrap.b32 	%r1333, %r1327, %r1326, 23;
	mov.b64 	%rd1910, {%r1333, %r1332};
	xor.b64  	%rd1911, %rd1909, %rd1910;
	xor.b64  	%rd1912, %rd1871, %rd1847;
	and.b64  	%rd1913, %rd1895, %rd1912;
	xor.b64  	%rd1914, %rd1913, %rd1847;
	add.s64 	%rd1915, %rd1823, %rd1656;
	add.s64 	%rd1916, %rd1915, %rd2704;
	add.s64 	%rd1917, %rd1916, %rd1914;
	add.s64 	%rd1918, %rd1917, %rd1911;
	add.s64 	%rd1919, %rd1918, %rd1834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd1906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd1906;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 28;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 28;
	mov.b64 	%rd1920, {%r1337, %r1336};
	shf.l.wrap.b32 	%r1338, %r1334, %r1335, 30;
	shf.l.wrap.b32 	%r1339, %r1335, %r1334, 30;
	mov.b64 	%rd1921, {%r1339, %r1338};
	xor.b64  	%rd1922, %rd1921, %rd1920;
	shf.l.wrap.b32 	%r1340, %r1334, %r1335, 25;
	shf.l.wrap.b32 	%r1341, %r1335, %r1334, 25;
	mov.b64 	%rd1923, {%r1341, %r1340};
	xor.b64  	%rd1924, %rd1922, %rd1923;
	xor.b64  	%rd1925, %rd1906, %rd1858;
	xor.b64  	%rd1926, %rd1906, %rd1882;
	and.b64  	%rd1927, %rd1926, %rd1925;
	xor.b64  	%rd1928, %rd1927, %rd1906;
	add.s64 	%rd1929, %rd1918, %rd1928;
	add.s64 	%rd1930, %rd1929, %rd1924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd1919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd1919;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 14;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 14;
	mov.b64 	%rd1931, {%r1345, %r1344};
	shf.r.wrap.b32 	%r1346, %r1343, %r1342, 18;
	shf.r.wrap.b32 	%r1347, %r1342, %r1343, 18;
	mov.b64 	%rd1932, {%r1347, %r1346};
	xor.b64  	%rd1933, %rd1932, %rd1931;
	shf.l.wrap.b32 	%r1348, %r1342, %r1343, 23;
	shf.l.wrap.b32 	%r1349, %r1343, %r1342, 23;
	mov.b64 	%rd1934, {%r1349, %r1348};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	xor.b64  	%rd1936, %rd1895, %rd1871;
	and.b64  	%rd1937, %rd1919, %rd1936;
	xor.b64  	%rd1938, %rd1937, %rd1871;
	add.s64 	%rd1939, %rd1847, %rd1669;
	add.s64 	%rd1940, %rd1939, %rd2705;
	add.s64 	%rd1941, %rd1940, %rd1938;
	add.s64 	%rd1942, %rd1941, %rd1935;
	add.s64 	%rd1943, %rd1942, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd1930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1351}, %rd1930;
	}
	shf.r.wrap.b32 	%r1352, %r1351, %r1350, 28;
	shf.r.wrap.b32 	%r1353, %r1350, %r1351, 28;
	mov.b64 	%rd1944, {%r1353, %r1352};
	shf.l.wrap.b32 	%r1354, %r1350, %r1351, 30;
	shf.l.wrap.b32 	%r1355, %r1351, %r1350, 30;
	mov.b64 	%rd1945, {%r1355, %r1354};
	xor.b64  	%rd1946, %rd1945, %rd1944;
	shf.l.wrap.b32 	%r1356, %r1350, %r1351, 25;
	shf.l.wrap.b32 	%r1357, %r1351, %r1350, 25;
	mov.b64 	%rd1947, {%r1357, %r1356};
	xor.b64  	%rd1948, %rd1946, %rd1947;
	xor.b64  	%rd1949, %rd1930, %rd1882;
	xor.b64  	%rd1950, %rd1930, %rd1906;
	and.b64  	%rd1951, %rd1950, %rd1949;
	xor.b64  	%rd1952, %rd1951, %rd1930;
	add.s64 	%rd1953, %rd1942, %rd1952;
	add.s64 	%rd1954, %rd1953, %rd1948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd1943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd1943;
	}
	shf.r.wrap.b32 	%r1360, %r1359, %r1358, 14;
	shf.r.wrap.b32 	%r1361, %r1358, %r1359, 14;
	mov.b64 	%rd1955, {%r1361, %r1360};
	shf.r.wrap.b32 	%r1362, %r1359, %r1358, 18;
	shf.r.wrap.b32 	%r1363, %r1358, %r1359, 18;
	mov.b64 	%rd1956, {%r1363, %r1362};
	xor.b64  	%rd1957, %rd1956, %rd1955;
	shf.l.wrap.b32 	%r1364, %r1358, %r1359, 23;
	shf.l.wrap.b32 	%r1365, %r1359, %r1358, 23;
	mov.b64 	%rd1958, {%r1365, %r1364};
	xor.b64  	%rd1959, %rd1957, %rd1958;
	xor.b64  	%rd1960, %rd1919, %rd1895;
	and.b64  	%rd1961, %rd1943, %rd1960;
	xor.b64  	%rd1962, %rd1961, %rd1895;
	add.s64 	%rd1963, %rd1871, %rd1682;
	add.s64 	%rd1964, %rd1963, %rd2706;
	add.s64 	%rd1965, %rd1964, %rd1962;
	add.s64 	%rd1966, %rd1965, %rd1959;
	add.s64 	%rd1967, %rd1966, %rd1882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd1954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1367}, %rd1954;
	}
	shf.r.wrap.b32 	%r1368, %r1367, %r1366, 28;
	shf.r.wrap.b32 	%r1369, %r1366, %r1367, 28;
	mov.b64 	%rd1968, {%r1369, %r1368};
	shf.l.wrap.b32 	%r1370, %r1366, %r1367, 30;
	shf.l.wrap.b32 	%r1371, %r1367, %r1366, 30;
	mov.b64 	%rd1969, {%r1371, %r1370};
	xor.b64  	%rd1970, %rd1969, %rd1968;
	shf.l.wrap.b32 	%r1372, %r1366, %r1367, 25;
	shf.l.wrap.b32 	%r1373, %r1367, %r1366, 25;
	mov.b64 	%rd1971, {%r1373, %r1372};
	xor.b64  	%rd1972, %rd1970, %rd1971;
	xor.b64  	%rd1973, %rd1954, %rd1906;
	xor.b64  	%rd1974, %rd1954, %rd1930;
	and.b64  	%rd1975, %rd1974, %rd1973;
	xor.b64  	%rd1976, %rd1975, %rd1954;
	add.s64 	%rd1977, %rd1966, %rd1976;
	add.s64 	%rd1978, %rd1977, %rd1972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1374,%dummy}, %rd1967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1375}, %rd1967;
	}
	shf.r.wrap.b32 	%r1376, %r1375, %r1374, 14;
	shf.r.wrap.b32 	%r1377, %r1374, %r1375, 14;
	mov.b64 	%rd1979, {%r1377, %r1376};
	shf.r.wrap.b32 	%r1378, %r1375, %r1374, 18;
	shf.r.wrap.b32 	%r1379, %r1374, %r1375, 18;
	mov.b64 	%rd1980, {%r1379, %r1378};
	xor.b64  	%rd1981, %rd1980, %rd1979;
	shf.l.wrap.b32 	%r1380, %r1374, %r1375, 23;
	shf.l.wrap.b32 	%r1381, %r1375, %r1374, 23;
	mov.b64 	%rd1982, {%r1381, %r1380};
	xor.b64  	%rd1983, %rd1981, %rd1982;
	xor.b64  	%rd1984, %rd1943, %rd1919;
	and.b64  	%rd1985, %rd1967, %rd1984;
	xor.b64  	%rd1986, %rd1985, %rd1919;
	add.s64 	%rd1987, %rd1895, %rd1695;
	add.s64 	%rd1988, %rd1987, %rd2707;
	add.s64 	%rd1989, %rd1988, %rd1986;
	add.s64 	%rd1990, %rd1989, %rd1983;
	add.s64 	%rd1991, %rd1990, %rd1906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd1978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1383}, %rd1978;
	}
	shf.r.wrap.b32 	%r1384, %r1383, %r1382, 28;
	shf.r.wrap.b32 	%r1385, %r1382, %r1383, 28;
	mov.b64 	%rd1992, {%r1385, %r1384};
	shf.l.wrap.b32 	%r1386, %r1382, %r1383, 30;
	shf.l.wrap.b32 	%r1387, %r1383, %r1382, 30;
	mov.b64 	%rd1993, {%r1387, %r1386};
	xor.b64  	%rd1994, %rd1993, %rd1992;
	shf.l.wrap.b32 	%r1388, %r1382, %r1383, 25;
	shf.l.wrap.b32 	%r1389, %r1383, %r1382, 25;
	mov.b64 	%rd1995, {%r1389, %r1388};
	xor.b64  	%rd1996, %rd1994, %rd1995;
	xor.b64  	%rd1997, %rd1978, %rd1930;
	xor.b64  	%rd1998, %rd1978, %rd1954;
	and.b64  	%rd1999, %rd1998, %rd1997;
	xor.b64  	%rd2000, %rd1999, %rd1978;
	add.s64 	%rd2001, %rd1990, %rd2000;
	add.s64 	%rd2002, %rd2001, %rd1996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd1991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd1991;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 14;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 14;
	mov.b64 	%rd2003, {%r1393, %r1392};
	shf.r.wrap.b32 	%r1394, %r1391, %r1390, 18;
	shf.r.wrap.b32 	%r1395, %r1390, %r1391, 18;
	mov.b64 	%rd2004, {%r1395, %r1394};
	xor.b64  	%rd2005, %rd2004, %rd2003;
	shf.l.wrap.b32 	%r1396, %r1390, %r1391, 23;
	shf.l.wrap.b32 	%r1397, %r1391, %r1390, 23;
	mov.b64 	%rd2006, {%r1397, %r1396};
	xor.b64  	%rd2007, %rd2005, %rd2006;
	xor.b64  	%rd2008, %rd1967, %rd1943;
	and.b64  	%rd2009, %rd1991, %rd2008;
	xor.b64  	%rd2010, %rd2009, %rd1943;
	add.s64 	%rd2011, %rd1919, %rd1708;
	add.s64 	%rd2012, %rd2011, %rd2708;
	add.s64 	%rd2013, %rd2012, %rd2010;
	add.s64 	%rd2014, %rd2013, %rd2007;
	add.s64 	%rd2015, %rd2014, %rd1930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd2002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1399}, %rd2002;
	}
	shf.r.wrap.b32 	%r1400, %r1399, %r1398, 28;
	shf.r.wrap.b32 	%r1401, %r1398, %r1399, 28;
	mov.b64 	%rd2016, {%r1401, %r1400};
	shf.l.wrap.b32 	%r1402, %r1398, %r1399, 30;
	shf.l.wrap.b32 	%r1403, %r1399, %r1398, 30;
	mov.b64 	%rd2017, {%r1403, %r1402};
	xor.b64  	%rd2018, %rd2017, %rd2016;
	shf.l.wrap.b32 	%r1404, %r1398, %r1399, 25;
	shf.l.wrap.b32 	%r1405, %r1399, %r1398, 25;
	mov.b64 	%rd2019, {%r1405, %r1404};
	xor.b64  	%rd2020, %rd2018, %rd2019;
	xor.b64  	%rd2021, %rd2002, %rd1954;
	xor.b64  	%rd2022, %rd2002, %rd1978;
	and.b64  	%rd2023, %rd2022, %rd2021;
	xor.b64  	%rd2024, %rd2023, %rd2002;
	add.s64 	%rd2025, %rd2014, %rd2024;
	add.s64 	%rd2026, %rd2025, %rd2020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd2015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd2015;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 14;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 14;
	mov.b64 	%rd2027, {%r1409, %r1408};
	shf.r.wrap.b32 	%r1410, %r1407, %r1406, 18;
	shf.r.wrap.b32 	%r1411, %r1406, %r1407, 18;
	mov.b64 	%rd2028, {%r1411, %r1410};
	xor.b64  	%rd2029, %rd2028, %rd2027;
	shf.l.wrap.b32 	%r1412, %r1406, %r1407, 23;
	shf.l.wrap.b32 	%r1413, %r1407, %r1406, 23;
	mov.b64 	%rd2030, {%r1413, %r1412};
	xor.b64  	%rd2031, %rd2029, %rd2030;
	xor.b64  	%rd2032, %rd1991, %rd1967;
	and.b64  	%rd2033, %rd2015, %rd2032;
	xor.b64  	%rd2034, %rd2033, %rd1967;
	add.s64 	%rd2035, %rd1943, %rd1721;
	add.s64 	%rd2036, %rd2035, %rd2709;
	add.s64 	%rd2037, %rd2036, %rd2034;
	add.s64 	%rd2038, %rd2037, %rd2031;
	add.s64 	%rd2039, %rd2038, %rd1954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd2026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd2026;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 28;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 28;
	mov.b64 	%rd2040, {%r1417, %r1416};
	shf.l.wrap.b32 	%r1418, %r1414, %r1415, 30;
	shf.l.wrap.b32 	%r1419, %r1415, %r1414, 30;
	mov.b64 	%rd2041, {%r1419, %r1418};
	xor.b64  	%rd2042, %rd2041, %rd2040;
	shf.l.wrap.b32 	%r1420, %r1414, %r1415, 25;
	shf.l.wrap.b32 	%r1421, %r1415, %r1414, 25;
	mov.b64 	%rd2043, {%r1421, %r1420};
	xor.b64  	%rd2044, %rd2042, %rd2043;
	xor.b64  	%rd2045, %rd2026, %rd1978;
	xor.b64  	%rd2046, %rd2026, %rd2002;
	and.b64  	%rd2047, %rd2046, %rd2045;
	xor.b64  	%rd2048, %rd2047, %rd2026;
	add.s64 	%rd2049, %rd2038, %rd2048;
	add.s64 	%rd2050, %rd2049, %rd2044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd2039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd2039;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 14;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 14;
	mov.b64 	%rd2051, {%r1425, %r1424};
	shf.r.wrap.b32 	%r1426, %r1423, %r1422, 18;
	shf.r.wrap.b32 	%r1427, %r1422, %r1423, 18;
	mov.b64 	%rd2052, {%r1427, %r1426};
	xor.b64  	%rd2053, %rd2052, %rd2051;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 23;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 23;
	mov.b64 	%rd2054, {%r1429, %r1428};
	xor.b64  	%rd2055, %rd2053, %rd2054;
	xor.b64  	%rd2056, %rd2015, %rd1991;
	and.b64  	%rd2057, %rd2039, %rd2056;
	xor.b64  	%rd2058, %rd2057, %rd1991;
	add.s64 	%rd2059, %rd1967, %rd1734;
	add.s64 	%rd2060, %rd2059, %rd2710;
	add.s64 	%rd2061, %rd2060, %rd2058;
	add.s64 	%rd2062, %rd2061, %rd2055;
	add.s64 	%rd2063, %rd2062, %rd1978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd2050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd2050;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 28;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 28;
	mov.b64 	%rd2064, {%r1433, %r1432};
	shf.l.wrap.b32 	%r1434, %r1430, %r1431, 30;
	shf.l.wrap.b32 	%r1435, %r1431, %r1430, 30;
	mov.b64 	%rd2065, {%r1435, %r1434};
	xor.b64  	%rd2066, %rd2065, %rd2064;
	shf.l.wrap.b32 	%r1436, %r1430, %r1431, 25;
	shf.l.wrap.b32 	%r1437, %r1431, %r1430, 25;
	mov.b64 	%rd2067, {%r1437, %r1436};
	xor.b64  	%rd2068, %rd2066, %rd2067;
	xor.b64  	%rd2069, %rd2050, %rd2002;
	xor.b64  	%rd2070, %rd2050, %rd2026;
	and.b64  	%rd2071, %rd2070, %rd2069;
	xor.b64  	%rd2072, %rd2071, %rd2050;
	add.s64 	%rd2073, %rd2062, %rd2072;
	add.s64 	%rd2074, %rd2073, %rd2068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd2063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd2063;
	}
	shf.r.wrap.b32 	%r1440, %r1439, %r1438, 14;
	shf.r.wrap.b32 	%r1441, %r1438, %r1439, 14;
	mov.b64 	%rd2075, {%r1441, %r1440};
	shf.r.wrap.b32 	%r1442, %r1439, %r1438, 18;
	shf.r.wrap.b32 	%r1443, %r1438, %r1439, 18;
	mov.b64 	%rd2076, {%r1443, %r1442};
	xor.b64  	%rd2077, %rd2076, %rd2075;
	shf.l.wrap.b32 	%r1444, %r1438, %r1439, 23;
	shf.l.wrap.b32 	%r1445, %r1439, %r1438, 23;
	mov.b64 	%rd2078, {%r1445, %r1444};
	xor.b64  	%rd2079, %rd2077, %rd2078;
	xor.b64  	%rd2080, %rd2039, %rd2015;
	and.b64  	%rd2081, %rd2063, %rd2080;
	xor.b64  	%rd2082, %rd2081, %rd2015;
	add.s64 	%rd2083, %rd1991, %rd1747;
	add.s64 	%rd2084, %rd2083, %rd2711;
	add.s64 	%rd2085, %rd2084, %rd2082;
	add.s64 	%rd2086, %rd2085, %rd2079;
	add.s64 	%rd2087, %rd2086, %rd2002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1446,%dummy}, %rd2074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1447}, %rd2074;
	}
	shf.r.wrap.b32 	%r1448, %r1447, %r1446, 28;
	shf.r.wrap.b32 	%r1449, %r1446, %r1447, 28;
	mov.b64 	%rd2088, {%r1449, %r1448};
	shf.l.wrap.b32 	%r1450, %r1446, %r1447, 30;
	shf.l.wrap.b32 	%r1451, %r1447, %r1446, 30;
	mov.b64 	%rd2089, {%r1451, %r1450};
	xor.b64  	%rd2090, %rd2089, %rd2088;
	shf.l.wrap.b32 	%r1452, %r1446, %r1447, 25;
	shf.l.wrap.b32 	%r1453, %r1447, %r1446, 25;
	mov.b64 	%rd2091, {%r1453, %r1452};
	xor.b64  	%rd2092, %rd2090, %rd2091;
	xor.b64  	%rd2093, %rd2074, %rd2026;
	xor.b64  	%rd2094, %rd2074, %rd2050;
	and.b64  	%rd2095, %rd2094, %rd2093;
	xor.b64  	%rd2096, %rd2095, %rd2074;
	add.s64 	%rd2097, %rd2086, %rd2096;
	add.s64 	%rd2098, %rd2097, %rd2092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd2087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd2087;
	}
	shf.r.wrap.b32 	%r1456, %r1455, %r1454, 14;
	shf.r.wrap.b32 	%r1457, %r1454, %r1455, 14;
	mov.b64 	%rd2099, {%r1457, %r1456};
	shf.r.wrap.b32 	%r1458, %r1455, %r1454, 18;
	shf.r.wrap.b32 	%r1459, %r1454, %r1455, 18;
	mov.b64 	%rd2100, {%r1459, %r1458};
	xor.b64  	%rd2101, %rd2100, %rd2099;
	shf.l.wrap.b32 	%r1460, %r1454, %r1455, 23;
	shf.l.wrap.b32 	%r1461, %r1455, %r1454, 23;
	mov.b64 	%rd2102, {%r1461, %r1460};
	xor.b64  	%rd2103, %rd2101, %rd2102;
	xor.b64  	%rd2104, %rd2063, %rd2039;
	and.b64  	%rd2105, %rd2087, %rd2104;
	xor.b64  	%rd2106, %rd2105, %rd2039;
	add.s64 	%rd2107, %rd2015, %rd1760;
	add.s64 	%rd2108, %rd2107, %rd2712;
	add.s64 	%rd2109, %rd2108, %rd2106;
	add.s64 	%rd2110, %rd2109, %rd2103;
	add.s64 	%rd2111, %rd2110, %rd2026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd2098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd2098;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 28;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 28;
	mov.b64 	%rd2112, {%r1465, %r1464};
	shf.l.wrap.b32 	%r1466, %r1462, %r1463, 30;
	shf.l.wrap.b32 	%r1467, %r1463, %r1462, 30;
	mov.b64 	%rd2113, {%r1467, %r1466};
	xor.b64  	%rd2114, %rd2113, %rd2112;
	shf.l.wrap.b32 	%r1468, %r1462, %r1463, 25;
	shf.l.wrap.b32 	%r1469, %r1463, %r1462, 25;
	mov.b64 	%rd2115, {%r1469, %r1468};
	xor.b64  	%rd2116, %rd2114, %rd2115;
	xor.b64  	%rd2117, %rd2098, %rd2050;
	xor.b64  	%rd2118, %rd2098, %rd2074;
	and.b64  	%rd2119, %rd2118, %rd2117;
	xor.b64  	%rd2120, %rd2119, %rd2098;
	add.s64 	%rd2121, %rd2110, %rd2120;
	add.s64 	%rd2122, %rd2121, %rd2116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd2111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1471}, %rd2111;
	}
	shf.r.wrap.b32 	%r1472, %r1471, %r1470, 14;
	shf.r.wrap.b32 	%r1473, %r1470, %r1471, 14;
	mov.b64 	%rd2123, {%r1473, %r1472};
	shf.r.wrap.b32 	%r1474, %r1471, %r1470, 18;
	shf.r.wrap.b32 	%r1475, %r1470, %r1471, 18;
	mov.b64 	%rd2124, {%r1475, %r1474};
	xor.b64  	%rd2125, %rd2124, %rd2123;
	shf.l.wrap.b32 	%r1476, %r1470, %r1471, 23;
	shf.l.wrap.b32 	%r1477, %r1471, %r1470, 23;
	mov.b64 	%rd2126, {%r1477, %r1476};
	xor.b64  	%rd2127, %rd2125, %rd2126;
	xor.b64  	%rd2128, %rd2087, %rd2063;
	and.b64  	%rd2129, %rd2111, %rd2128;
	xor.b64  	%rd2130, %rd2129, %rd2063;
	add.s64 	%rd2131, %rd2039, %rd1773;
	add.s64 	%rd2132, %rd2131, %rd2713;
	add.s64 	%rd2133, %rd2132, %rd2130;
	add.s64 	%rd2134, %rd2133, %rd2127;
	add.s64 	%rd2135, %rd2134, %rd2050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1478,%dummy}, %rd2122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1479}, %rd2122;
	}
	shf.r.wrap.b32 	%r1480, %r1479, %r1478, 28;
	shf.r.wrap.b32 	%r1481, %r1478, %r1479, 28;
	mov.b64 	%rd2136, {%r1481, %r1480};
	shf.l.wrap.b32 	%r1482, %r1478, %r1479, 30;
	shf.l.wrap.b32 	%r1483, %r1479, %r1478, 30;
	mov.b64 	%rd2137, {%r1483, %r1482};
	xor.b64  	%rd2138, %rd2137, %rd2136;
	shf.l.wrap.b32 	%r1484, %r1478, %r1479, 25;
	shf.l.wrap.b32 	%r1485, %r1479, %r1478, 25;
	mov.b64 	%rd2139, {%r1485, %r1484};
	xor.b64  	%rd2140, %rd2138, %rd2139;
	xor.b64  	%rd2141, %rd2122, %rd2074;
	xor.b64  	%rd2142, %rd2122, %rd2098;
	and.b64  	%rd2143, %rd2142, %rd2141;
	xor.b64  	%rd2144, %rd2143, %rd2122;
	add.s64 	%rd2145, %rd2134, %rd2144;
	add.s64 	%rd2146, %rd2145, %rd2140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1487}, %rd2135;
	}
	shf.r.wrap.b32 	%r1488, %r1487, %r1486, 14;
	shf.r.wrap.b32 	%r1489, %r1486, %r1487, 14;
	mov.b64 	%rd2147, {%r1489, %r1488};
	shf.r.wrap.b32 	%r1490, %r1487, %r1486, 18;
	shf.r.wrap.b32 	%r1491, %r1486, %r1487, 18;
	mov.b64 	%rd2148, {%r1491, %r1490};
	xor.b64  	%rd2149, %rd2148, %rd2147;
	shf.l.wrap.b32 	%r1492, %r1486, %r1487, 23;
	shf.l.wrap.b32 	%r1493, %r1487, %r1486, 23;
	mov.b64 	%rd2150, {%r1493, %r1492};
	xor.b64  	%rd2151, %rd2149, %rd2150;
	xor.b64  	%rd2152, %rd2111, %rd2087;
	and.b64  	%rd2153, %rd2135, %rd2152;
	xor.b64  	%rd2154, %rd2153, %rd2087;
	add.s64 	%rd2155, %rd2063, %rd1786;
	add.s64 	%rd2156, %rd2155, %rd2714;
	add.s64 	%rd2157, %rd2156, %rd2154;
	add.s64 	%rd2158, %rd2157, %rd2151;
	add.s64 	%rd2159, %rd2158, %rd2074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1494,%dummy}, %rd2146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1495}, %rd2146;
	}
	shf.r.wrap.b32 	%r1496, %r1495, %r1494, 28;
	shf.r.wrap.b32 	%r1497, %r1494, %r1495, 28;
	mov.b64 	%rd2160, {%r1497, %r1496};
	shf.l.wrap.b32 	%r1498, %r1494, %r1495, 30;
	shf.l.wrap.b32 	%r1499, %r1495, %r1494, 30;
	mov.b64 	%rd2161, {%r1499, %r1498};
	xor.b64  	%rd2162, %rd2161, %rd2160;
	shf.l.wrap.b32 	%r1500, %r1494, %r1495, 25;
	shf.l.wrap.b32 	%r1501, %r1495, %r1494, 25;
	mov.b64 	%rd2163, {%r1501, %r1500};
	xor.b64  	%rd2164, %rd2162, %rd2163;
	xor.b64  	%rd2165, %rd2146, %rd2098;
	xor.b64  	%rd2166, %rd2146, %rd2122;
	and.b64  	%rd2167, %rd2166, %rd2165;
	xor.b64  	%rd2168, %rd2167, %rd2146;
	add.s64 	%rd2169, %rd2158, %rd2168;
	add.s64 	%rd2170, %rd2169, %rd2164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1502,%dummy}, %rd1773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1503}, %rd1773;
	}
	shf.r.wrap.b32 	%r1504, %r1503, %r1502, 19;
	shf.r.wrap.b32 	%r1505, %r1502, %r1503, 19;
	mov.b64 	%rd2171, {%r1505, %r1504};
	shf.l.wrap.b32 	%r1506, %r1502, %r1503, 3;
	shf.l.wrap.b32 	%r1507, %r1503, %r1502, 3;
	mov.b64 	%rd2172, {%r1507, %r1506};
	shr.u64 	%rd2173, %rd1773, 6;
	xor.b64  	%rd2174, %rd2171, %rd2173;
	xor.b64  	%rd2175, %rd2174, %rd2172;
	shf.r.wrap.b32 	%r1508, %r1117, %r1116, 1;
	shf.r.wrap.b32 	%r1509, %r1116, %r1117, 1;
	mov.b64 	%rd2176, {%r1509, %r1508};
	shf.r.wrap.b32 	%r1510, %r1117, %r1116, 8;
	shf.r.wrap.b32 	%r1511, %r1116, %r1117, 8;
	mov.b64 	%rd2177, {%r1511, %r1510};
	shr.u64 	%rd2178, %rd1604, 7;
	xor.b64  	%rd2179, %rd2176, %rd2178;
	xor.b64  	%rd2180, %rd2179, %rd2177;
	add.s64 	%rd2181, %rd1591, %rd1708;
	add.s64 	%rd2182, %rd2181, %rd2175;
	add.s64 	%rd2183, %rd2182, %rd2180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1512,%dummy}, %rd1786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1513}, %rd1786;
	}
	shf.r.wrap.b32 	%r1514, %r1513, %r1512, 19;
	shf.r.wrap.b32 	%r1515, %r1512, %r1513, 19;
	mov.b64 	%rd2184, {%r1515, %r1514};
	shf.l.wrap.b32 	%r1516, %r1512, %r1513, 3;
	shf.l.wrap.b32 	%r1517, %r1513, %r1512, 3;
	mov.b64 	%rd2185, {%r1517, %r1516};
	shr.u64 	%rd2186, %rd1786, 6;
	xor.b64  	%rd2187, %rd2184, %rd2186;
	xor.b64  	%rd2188, %rd2187, %rd2185;
	shf.r.wrap.b32 	%r1518, %r1127, %r1126, 1;
	shf.r.wrap.b32 	%r1519, %r1126, %r1127, 1;
	mov.b64 	%rd2189, {%r1519, %r1518};
	shf.r.wrap.b32 	%r1520, %r1127, %r1126, 8;
	shf.r.wrap.b32 	%r1521, %r1126, %r1127, 8;
	mov.b64 	%rd2190, {%r1521, %r1520};
	shr.u64 	%rd2191, %rd1617, 7;
	xor.b64  	%rd2192, %rd2189, %rd2191;
	xor.b64  	%rd2193, %rd2192, %rd2190;
	add.s64 	%rd2194, %rd1604, %rd1721;
	add.s64 	%rd2195, %rd2194, %rd2188;
	add.s64 	%rd2196, %rd2195, %rd2193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1522,%dummy}, %rd2183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1523}, %rd2183;
	}
	shf.r.wrap.b32 	%r1524, %r1523, %r1522, 19;
	shf.r.wrap.b32 	%r1525, %r1522, %r1523, 19;
	mov.b64 	%rd2197, {%r1525, %r1524};
	shf.l.wrap.b32 	%r1526, %r1522, %r1523, 3;
	shf.l.wrap.b32 	%r1527, %r1523, %r1522, 3;
	mov.b64 	%rd2198, {%r1527, %r1526};
	shr.u64 	%rd2199, %rd2183, 6;
	xor.b64  	%rd2200, %rd2197, %rd2199;
	xor.b64  	%rd2201, %rd2200, %rd2198;
	shf.r.wrap.b32 	%r1528, %r1137, %r1136, 1;
	shf.r.wrap.b32 	%r1529, %r1136, %r1137, 1;
	mov.b64 	%rd2202, {%r1529, %r1528};
	shf.r.wrap.b32 	%r1530, %r1137, %r1136, 8;
	shf.r.wrap.b32 	%r1531, %r1136, %r1137, 8;
	mov.b64 	%rd2203, {%r1531, %r1530};
	shr.u64 	%rd2204, %rd1630, 7;
	xor.b64  	%rd2205, %rd2202, %rd2204;
	xor.b64  	%rd2206, %rd2205, %rd2203;
	add.s64 	%rd2207, %rd1617, %rd1734;
	add.s64 	%rd2208, %rd2207, %rd2201;
	add.s64 	%rd2209, %rd2208, %rd2206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1532,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1533}, %rd2196;
	}
	shf.r.wrap.b32 	%r1534, %r1533, %r1532, 19;
	shf.r.wrap.b32 	%r1535, %r1532, %r1533, 19;
	mov.b64 	%rd2210, {%r1535, %r1534};
	shf.l.wrap.b32 	%r1536, %r1532, %r1533, 3;
	shf.l.wrap.b32 	%r1537, %r1533, %r1532, 3;
	mov.b64 	%rd2211, {%r1537, %r1536};
	shr.u64 	%rd2212, %rd2196, 6;
	xor.b64  	%rd2213, %rd2210, %rd2212;
	xor.b64  	%rd2214, %rd2213, %rd2211;
	shf.r.wrap.b32 	%r1538, %r1147, %r1146, 1;
	shf.r.wrap.b32 	%r1539, %r1146, %r1147, 1;
	mov.b64 	%rd2215, {%r1539, %r1538};
	shf.r.wrap.b32 	%r1540, %r1147, %r1146, 8;
	shf.r.wrap.b32 	%r1541, %r1146, %r1147, 8;
	mov.b64 	%rd2216, {%r1541, %r1540};
	shr.u64 	%rd2217, %rd1643, 7;
	xor.b64  	%rd2218, %rd2215, %rd2217;
	xor.b64  	%rd2219, %rd2218, %rd2216;
	add.s64 	%rd2220, %rd1630, %rd1747;
	add.s64 	%rd2221, %rd2220, %rd2214;
	add.s64 	%rd2222, %rd2221, %rd2219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd2209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1543}, %rd2209;
	}
	shf.r.wrap.b32 	%r1544, %r1543, %r1542, 19;
	shf.r.wrap.b32 	%r1545, %r1542, %r1543, 19;
	mov.b64 	%rd2223, {%r1545, %r1544};
	shf.l.wrap.b32 	%r1546, %r1542, %r1543, 3;
	shf.l.wrap.b32 	%r1547, %r1543, %r1542, 3;
	mov.b64 	%rd2224, {%r1547, %r1546};
	shr.u64 	%rd2225, %rd2209, 6;
	xor.b64  	%rd2226, %rd2223, %rd2225;
	xor.b64  	%rd2227, %rd2226, %rd2224;
	shf.r.wrap.b32 	%r1548, %r1157, %r1156, 1;
	shf.r.wrap.b32 	%r1549, %r1156, %r1157, 1;
	mov.b64 	%rd2228, {%r1549, %r1548};
	shf.r.wrap.b32 	%r1550, %r1157, %r1156, 8;
	shf.r.wrap.b32 	%r1551, %r1156, %r1157, 8;
	mov.b64 	%rd2229, {%r1551, %r1550};
	shr.u64 	%rd2230, %rd1656, 7;
	xor.b64  	%rd2231, %rd2228, %rd2230;
	xor.b64  	%rd2232, %rd2231, %rd2229;
	add.s64 	%rd2233, %rd1643, %rd1760;
	add.s64 	%rd2234, %rd2233, %rd2227;
	add.s64 	%rd2235, %rd2234, %rd2232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd2222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd2222;
	}
	shf.r.wrap.b32 	%r1554, %r1553, %r1552, 19;
	shf.r.wrap.b32 	%r1555, %r1552, %r1553, 19;
	mov.b64 	%rd2236, {%r1555, %r1554};
	shf.l.wrap.b32 	%r1556, %r1552, %r1553, 3;
	shf.l.wrap.b32 	%r1557, %r1553, %r1552, 3;
	mov.b64 	%rd2237, {%r1557, %r1556};
	shr.u64 	%rd2238, %rd2222, 6;
	xor.b64  	%rd2239, %rd2236, %rd2238;
	xor.b64  	%rd2240, %rd2239, %rd2237;
	shf.r.wrap.b32 	%r1558, %r1167, %r1166, 1;
	shf.r.wrap.b32 	%r1559, %r1166, %r1167, 1;
	mov.b64 	%rd2241, {%r1559, %r1558};
	shf.r.wrap.b32 	%r1560, %r1167, %r1166, 8;
	shf.r.wrap.b32 	%r1561, %r1166, %r1167, 8;
	mov.b64 	%rd2242, {%r1561, %r1560};
	shr.u64 	%rd2243, %rd1669, 7;
	xor.b64  	%rd2244, %rd2241, %rd2243;
	xor.b64  	%rd2245, %rd2244, %rd2242;
	add.s64 	%rd2246, %rd1656, %rd1773;
	add.s64 	%rd2247, %rd2246, %rd2240;
	add.s64 	%rd2248, %rd2247, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1562,%dummy}, %rd2235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1563}, %rd2235;
	}
	shf.r.wrap.b32 	%r1564, %r1563, %r1562, 19;
	shf.r.wrap.b32 	%r1565, %r1562, %r1563, 19;
	mov.b64 	%rd2249, {%r1565, %r1564};
	shf.l.wrap.b32 	%r1566, %r1562, %r1563, 3;
	shf.l.wrap.b32 	%r1567, %r1563, %r1562, 3;
	mov.b64 	%rd2250, {%r1567, %r1566};
	shr.u64 	%rd2251, %rd2235, 6;
	xor.b64  	%rd2252, %rd2249, %rd2251;
	xor.b64  	%rd2253, %rd2252, %rd2250;
	shf.r.wrap.b32 	%r1568, %r1177, %r1176, 1;
	shf.r.wrap.b32 	%r1569, %r1176, %r1177, 1;
	mov.b64 	%rd2254, {%r1569, %r1568};
	shf.r.wrap.b32 	%r1570, %r1177, %r1176, 8;
	shf.r.wrap.b32 	%r1571, %r1176, %r1177, 8;
	mov.b64 	%rd2255, {%r1571, %r1570};
	shr.u64 	%rd2256, %rd1682, 7;
	xor.b64  	%rd2257, %rd2254, %rd2256;
	xor.b64  	%rd2258, %rd2257, %rd2255;
	add.s64 	%rd2259, %rd1669, %rd1786;
	add.s64 	%rd2260, %rd2259, %rd2253;
	add.s64 	%rd2261, %rd2260, %rd2258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1572,%dummy}, %rd2248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1573}, %rd2248;
	}
	shf.r.wrap.b32 	%r1574, %r1573, %r1572, 19;
	shf.r.wrap.b32 	%r1575, %r1572, %r1573, 19;
	mov.b64 	%rd2262, {%r1575, %r1574};
	shf.l.wrap.b32 	%r1576, %r1572, %r1573, 3;
	shf.l.wrap.b32 	%r1577, %r1573, %r1572, 3;
	mov.b64 	%rd2263, {%r1577, %r1576};
	shr.u64 	%rd2264, %rd2248, 6;
	xor.b64  	%rd2265, %rd2262, %rd2264;
	xor.b64  	%rd2266, %rd2265, %rd2263;
	shf.r.wrap.b32 	%r1578, %r1187, %r1186, 1;
	shf.r.wrap.b32 	%r1579, %r1186, %r1187, 1;
	mov.b64 	%rd2267, {%r1579, %r1578};
	shf.r.wrap.b32 	%r1580, %r1187, %r1186, 8;
	shf.r.wrap.b32 	%r1581, %r1186, %r1187, 8;
	mov.b64 	%rd2268, {%r1581, %r1580};
	shr.u64 	%rd2269, %rd1695, 7;
	xor.b64  	%rd2270, %rd2267, %rd2269;
	xor.b64  	%rd2271, %rd2270, %rd2268;
	add.s64 	%rd2272, %rd2183, %rd1682;
	add.s64 	%rd2273, %rd2272, %rd2266;
	add.s64 	%rd2274, %rd2273, %rd2271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1582,%dummy}, %rd2261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1583}, %rd2261;
	}
	shf.r.wrap.b32 	%r1584, %r1583, %r1582, 19;
	shf.r.wrap.b32 	%r1585, %r1582, %r1583, 19;
	mov.b64 	%rd2275, {%r1585, %r1584};
	shf.l.wrap.b32 	%r1586, %r1582, %r1583, 3;
	shf.l.wrap.b32 	%r1587, %r1583, %r1582, 3;
	mov.b64 	%rd2276, {%r1587, %r1586};
	shr.u64 	%rd2277, %rd2261, 6;
	xor.b64  	%rd2278, %rd2275, %rd2277;
	xor.b64  	%rd2279, %rd2278, %rd2276;
	shf.r.wrap.b32 	%r1588, %r1197, %r1196, 1;
	shf.r.wrap.b32 	%r1589, %r1196, %r1197, 1;
	mov.b64 	%rd2280, {%r1589, %r1588};
	shf.r.wrap.b32 	%r1590, %r1197, %r1196, 8;
	shf.r.wrap.b32 	%r1591, %r1196, %r1197, 8;
	mov.b64 	%rd2281, {%r1591, %r1590};
	shr.u64 	%rd2282, %rd1708, 7;
	xor.b64  	%rd2283, %rd2280, %rd2282;
	xor.b64  	%rd2284, %rd2283, %rd2281;
	add.s64 	%rd2285, %rd2196, %rd1695;
	add.s64 	%rd2286, %rd2285, %rd2279;
	add.s64 	%rd2287, %rd2286, %rd2284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1592,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1593}, %rd2274;
	}
	shf.r.wrap.b32 	%r1594, %r1593, %r1592, 19;
	shf.r.wrap.b32 	%r1595, %r1592, %r1593, 19;
	mov.b64 	%rd2288, {%r1595, %r1594};
	shf.l.wrap.b32 	%r1596, %r1592, %r1593, 3;
	shf.l.wrap.b32 	%r1597, %r1593, %r1592, 3;
	mov.b64 	%rd2289, {%r1597, %r1596};
	shr.u64 	%rd2290, %rd2274, 6;
	xor.b64  	%rd2291, %rd2288, %rd2290;
	xor.b64  	%rd2292, %rd2291, %rd2289;
	shf.r.wrap.b32 	%r1598, %r1207, %r1206, 1;
	shf.r.wrap.b32 	%r1599, %r1206, %r1207, 1;
	mov.b64 	%rd2293, {%r1599, %r1598};
	shf.r.wrap.b32 	%r1600, %r1207, %r1206, 8;
	shf.r.wrap.b32 	%r1601, %r1206, %r1207, 8;
	mov.b64 	%rd2294, {%r1601, %r1600};
	shr.u64 	%rd2295, %rd1721, 7;
	xor.b64  	%rd2296, %rd2293, %rd2295;
	xor.b64  	%rd2297, %rd2296, %rd2294;
	add.s64 	%rd2298, %rd2209, %rd1708;
	add.s64 	%rd2299, %rd2298, %rd2292;
	add.s64 	%rd2300, %rd2299, %rd2297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1602,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1603}, %rd2287;
	}
	shf.r.wrap.b32 	%r1604, %r1603, %r1602, 19;
	shf.r.wrap.b32 	%r1605, %r1602, %r1603, 19;
	mov.b64 	%rd2301, {%r1605, %r1604};
	shf.l.wrap.b32 	%r1606, %r1602, %r1603, 3;
	shf.l.wrap.b32 	%r1607, %r1603, %r1602, 3;
	mov.b64 	%rd2302, {%r1607, %r1606};
	shr.u64 	%rd2303, %rd2287, 6;
	xor.b64  	%rd2304, %rd2301, %rd2303;
	xor.b64  	%rd2305, %rd2304, %rd2302;
	shf.r.wrap.b32 	%r1608, %r1217, %r1216, 1;
	shf.r.wrap.b32 	%r1609, %r1216, %r1217, 1;
	mov.b64 	%rd2306, {%r1609, %r1608};
	shf.r.wrap.b32 	%r1610, %r1217, %r1216, 8;
	shf.r.wrap.b32 	%r1611, %r1216, %r1217, 8;
	mov.b64 	%rd2307, {%r1611, %r1610};
	shr.u64 	%rd2308, %rd1734, 7;
	xor.b64  	%rd2309, %rd2306, %rd2308;
	xor.b64  	%rd2310, %rd2309, %rd2307;
	add.s64 	%rd2311, %rd2222, %rd1721;
	add.s64 	%rd2312, %rd2311, %rd2305;
	add.s64 	%rd2313, %rd2312, %rd2310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1612,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1613}, %rd2300;
	}
	shf.r.wrap.b32 	%r1614, %r1613, %r1612, 19;
	shf.r.wrap.b32 	%r1615, %r1612, %r1613, 19;
	mov.b64 	%rd2314, {%r1615, %r1614};
	shf.l.wrap.b32 	%r1616, %r1612, %r1613, 3;
	shf.l.wrap.b32 	%r1617, %r1613, %r1612, 3;
	mov.b64 	%rd2315, {%r1617, %r1616};
	shr.u64 	%rd2316, %rd2300, 6;
	xor.b64  	%rd2317, %rd2314, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2315;
	shf.r.wrap.b32 	%r1618, %r1227, %r1226, 1;
	shf.r.wrap.b32 	%r1619, %r1226, %r1227, 1;
	mov.b64 	%rd2319, {%r1619, %r1618};
	shf.r.wrap.b32 	%r1620, %r1227, %r1226, 8;
	shf.r.wrap.b32 	%r1621, %r1226, %r1227, 8;
	mov.b64 	%rd2320, {%r1621, %r1620};
	shr.u64 	%rd2321, %rd1747, 7;
	xor.b64  	%rd2322, %rd2319, %rd2321;
	xor.b64  	%rd2323, %rd2322, %rd2320;
	add.s64 	%rd2324, %rd2235, %rd1734;
	add.s64 	%rd2325, %rd2324, %rd2318;
	add.s64 	%rd2326, %rd2325, %rd2323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1622,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1623}, %rd2313;
	}
	shf.r.wrap.b32 	%r1624, %r1623, %r1622, 19;
	shf.r.wrap.b32 	%r1625, %r1622, %r1623, 19;
	mov.b64 	%rd2327, {%r1625, %r1624};
	shf.l.wrap.b32 	%r1626, %r1622, %r1623, 3;
	shf.l.wrap.b32 	%r1627, %r1623, %r1622, 3;
	mov.b64 	%rd2328, {%r1627, %r1626};
	shr.u64 	%rd2329, %rd2313, 6;
	xor.b64  	%rd2330, %rd2327, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd2328;
	shf.r.wrap.b32 	%r1628, %r1237, %r1236, 1;
	shf.r.wrap.b32 	%r1629, %r1236, %r1237, 1;
	mov.b64 	%rd2332, {%r1629, %r1628};
	shf.r.wrap.b32 	%r1630, %r1237, %r1236, 8;
	shf.r.wrap.b32 	%r1631, %r1236, %r1237, 8;
	mov.b64 	%rd2333, {%r1631, %r1630};
	shr.u64 	%rd2334, %rd1760, 7;
	xor.b64  	%rd2335, %rd2332, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2333;
	add.s64 	%rd2337, %rd2248, %rd1747;
	add.s64 	%rd2338, %rd2337, %rd2331;
	add.s64 	%rd2339, %rd2338, %rd2336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1632,%dummy}, %rd2159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1633}, %rd2159;
	}
	shf.r.wrap.b32 	%r1634, %r1633, %r1632, 14;
	shf.r.wrap.b32 	%r1635, %r1632, %r1633, 14;
	mov.b64 	%rd2340, {%r1635, %r1634};
	shf.r.wrap.b32 	%r1636, %r1633, %r1632, 18;
	shf.r.wrap.b32 	%r1637, %r1632, %r1633, 18;
	mov.b64 	%rd2341, {%r1637, %r1636};
	xor.b64  	%rd2342, %rd2341, %rd2340;
	shf.l.wrap.b32 	%r1638, %r1632, %r1633, 23;
	shf.l.wrap.b32 	%r1639, %r1633, %r1632, 23;
	mov.b64 	%rd2343, {%r1639, %r1638};
	xor.b64  	%rd2344, %rd2342, %rd2343;
	xor.b64  	%rd2345, %rd2111, %rd2135;
	and.b64  	%rd2346, %rd2345, %rd2159;
	xor.b64  	%rd2347, %rd2346, %rd2111;
	add.s64 	%rd2348, %rd2347, %rd2087;
	add.s64 	%rd2349, %rd2348, %rd2183;
	add.s64 	%rd2350, %rd2349, %rd2715;
	add.s64 	%rd2351, %rd2350, %rd2344;
	add.s64 	%rd2352, %rd2351, %rd2098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1640,%dummy}, %rd2170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1641}, %rd2170;
	}
	shf.r.wrap.b32 	%r1642, %r1641, %r1640, 28;
	shf.r.wrap.b32 	%r1643, %r1640, %r1641, 28;
	mov.b64 	%rd2353, {%r1643, %r1642};
	shf.l.wrap.b32 	%r1644, %r1640, %r1641, 30;
	shf.l.wrap.b32 	%r1645, %r1641, %r1640, 30;
	mov.b64 	%rd2354, {%r1645, %r1644};
	xor.b64  	%rd2355, %rd2354, %rd2353;
	shf.l.wrap.b32 	%r1646, %r1640, %r1641, 25;
	shf.l.wrap.b32 	%r1647, %r1641, %r1640, 25;
	mov.b64 	%rd2356, {%r1647, %r1646};
	xor.b64  	%rd2357, %rd2355, %rd2356;
	xor.b64  	%rd2358, %rd2170, %rd2122;
	xor.b64  	%rd2359, %rd2170, %rd2146;
	and.b64  	%rd2360, %rd2359, %rd2358;
	xor.b64  	%rd2361, %rd2360, %rd2170;
	add.s64 	%rd2362, %rd2351, %rd2361;
	add.s64 	%rd2363, %rd2362, %rd2357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1648,%dummy}, %rd2352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd2352;
	}
	shf.r.wrap.b32 	%r1650, %r1649, %r1648, 14;
	shf.r.wrap.b32 	%r1651, %r1648, %r1649, 14;
	mov.b64 	%rd2364, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1649, %r1648, 18;
	shf.r.wrap.b32 	%r1653, %r1648, %r1649, 18;
	mov.b64 	%rd2365, {%r1653, %r1652};
	xor.b64  	%rd2366, %rd2365, %rd2364;
	shf.l.wrap.b32 	%r1654, %r1648, %r1649, 23;
	shf.l.wrap.b32 	%r1655, %r1649, %r1648, 23;
	mov.b64 	%rd2367, {%r1655, %r1654};
	xor.b64  	%rd2368, %rd2366, %rd2367;
	xor.b64  	%rd2369, %rd2135, %rd2159;
	and.b64  	%rd2370, %rd2352, %rd2369;
	xor.b64  	%rd2371, %rd2370, %rd2135;
	add.s64 	%rd2372, %rd2196, %rd2111;
	add.s64 	%rd2373, %rd2372, %rd2716;
	add.s64 	%rd2374, %rd2373, %rd2371;
	add.s64 	%rd2375, %rd2374, %rd2368;
	add.s64 	%rd2376, %rd2375, %rd2122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd2363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd2363;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 28;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 28;
	mov.b64 	%rd2377, {%r1659, %r1658};
	shf.l.wrap.b32 	%r1660, %r1656, %r1657, 30;
	shf.l.wrap.b32 	%r1661, %r1657, %r1656, 30;
	mov.b64 	%rd2378, {%r1661, %r1660};
	xor.b64  	%rd2379, %rd2378, %rd2377;
	shf.l.wrap.b32 	%r1662, %r1656, %r1657, 25;
	shf.l.wrap.b32 	%r1663, %r1657, %r1656, 25;
	mov.b64 	%rd2380, {%r1663, %r1662};
	xor.b64  	%rd2381, %rd2379, %rd2380;
	xor.b64  	%rd2382, %rd2363, %rd2146;
	xor.b64  	%rd2383, %rd2363, %rd2170;
	and.b64  	%rd2384, %rd2383, %rd2382;
	xor.b64  	%rd2385, %rd2384, %rd2363;
	add.s64 	%rd2386, %rd2375, %rd2385;
	add.s64 	%rd2387, %rd2386, %rd2381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd2376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd2376;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 14;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 14;
	mov.b64 	%rd2388, {%r1667, %r1666};
	shf.r.wrap.b32 	%r1668, %r1665, %r1664, 18;
	shf.r.wrap.b32 	%r1669, %r1664, %r1665, 18;
	mov.b64 	%rd2389, {%r1669, %r1668};
	xor.b64  	%rd2390, %rd2389, %rd2388;
	shf.l.wrap.b32 	%r1670, %r1664, %r1665, 23;
	shf.l.wrap.b32 	%r1671, %r1665, %r1664, 23;
	mov.b64 	%rd2391, {%r1671, %r1670};
	xor.b64  	%rd2392, %rd2390, %rd2391;
	xor.b64  	%rd2393, %rd2352, %rd2159;
	and.b64  	%rd2394, %rd2376, %rd2393;
	xor.b64  	%rd2395, %rd2394, %rd2159;
	add.s64 	%rd2396, %rd2209, %rd2135;
	add.s64 	%rd2397, %rd2396, %rd2717;
	add.s64 	%rd2398, %rd2397, %rd2395;
	add.s64 	%rd2399, %rd2398, %rd2392;
	add.s64 	%rd2400, %rd2399, %rd2146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1672,%dummy}, %rd2387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1673}, %rd2387;
	}
	shf.r.wrap.b32 	%r1674, %r1673, %r1672, 28;
	shf.r.wrap.b32 	%r1675, %r1672, %r1673, 28;
	mov.b64 	%rd2401, {%r1675, %r1674};
	shf.l.wrap.b32 	%r1676, %r1672, %r1673, 30;
	shf.l.wrap.b32 	%r1677, %r1673, %r1672, 30;
	mov.b64 	%rd2402, {%r1677, %r1676};
	xor.b64  	%rd2403, %rd2402, %rd2401;
	shf.l.wrap.b32 	%r1678, %r1672, %r1673, 25;
	shf.l.wrap.b32 	%r1679, %r1673, %r1672, 25;
	mov.b64 	%rd2404, {%r1679, %r1678};
	xor.b64  	%rd2405, %rd2403, %rd2404;
	xor.b64  	%rd2406, %rd2387, %rd2170;
	xor.b64  	%rd2407, %rd2387, %rd2363;
	and.b64  	%rd2408, %rd2407, %rd2406;
	xor.b64  	%rd2409, %rd2408, %rd2387;
	add.s64 	%rd2410, %rd2399, %rd2409;
	add.s64 	%rd2411, %rd2410, %rd2405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1680,%dummy}, %rd2400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1681}, %rd2400;
	}
	shf.r.wrap.b32 	%r1682, %r1681, %r1680, 14;
	shf.r.wrap.b32 	%r1683, %r1680, %r1681, 14;
	mov.b64 	%rd2412, {%r1683, %r1682};
	shf.r.wrap.b32 	%r1684, %r1681, %r1680, 18;
	shf.r.wrap.b32 	%r1685, %r1680, %r1681, 18;
	mov.b64 	%rd2413, {%r1685, %r1684};
	xor.b64  	%rd2414, %rd2413, %rd2412;
	shf.l.wrap.b32 	%r1686, %r1680, %r1681, 23;
	shf.l.wrap.b32 	%r1687, %r1681, %r1680, 23;
	mov.b64 	%rd2415, {%r1687, %r1686};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	xor.b64  	%rd2417, %rd2376, %rd2352;
	and.b64  	%rd2418, %rd2400, %rd2417;
	xor.b64  	%rd2419, %rd2418, %rd2352;
	add.s64 	%rd2420, %rd2222, %rd2159;
	add.s64 	%rd2421, %rd2420, %rd2718;
	add.s64 	%rd2422, %rd2421, %rd2419;
	add.s64 	%rd2423, %rd2422, %rd2416;
	add.s64 	%rd2424, %rd2423, %rd2170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1688,%dummy}, %rd2411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1689}, %rd2411;
	}
	shf.r.wrap.b32 	%r1690, %r1689, %r1688, 28;
	shf.r.wrap.b32 	%r1691, %r1688, %r1689, 28;
	mov.b64 	%rd2425, {%r1691, %r1690};
	shf.l.wrap.b32 	%r1692, %r1688, %r1689, 30;
	shf.l.wrap.b32 	%r1693, %r1689, %r1688, 30;
	mov.b64 	%rd2426, {%r1693, %r1692};
	xor.b64  	%rd2427, %rd2426, %rd2425;
	shf.l.wrap.b32 	%r1694, %r1688, %r1689, 25;
	shf.l.wrap.b32 	%r1695, %r1689, %r1688, 25;
	mov.b64 	%rd2428, {%r1695, %r1694};
	xor.b64  	%rd2429, %rd2427, %rd2428;
	xor.b64  	%rd2430, %rd2411, %rd2363;
	xor.b64  	%rd2431, %rd2411, %rd2387;
	and.b64  	%rd2432, %rd2431, %rd2430;
	xor.b64  	%rd2433, %rd2432, %rd2411;
	add.s64 	%rd2434, %rd2423, %rd2433;
	add.s64 	%rd2435, %rd2434, %rd2429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1696,%dummy}, %rd2424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1697}, %rd2424;
	}
	shf.r.wrap.b32 	%r1698, %r1697, %r1696, 14;
	shf.r.wrap.b32 	%r1699, %r1696, %r1697, 14;
	mov.b64 	%rd2436, {%r1699, %r1698};
	shf.r.wrap.b32 	%r1700, %r1697, %r1696, 18;
	shf.r.wrap.b32 	%r1701, %r1696, %r1697, 18;
	mov.b64 	%rd2437, {%r1701, %r1700};
	xor.b64  	%rd2438, %rd2437, %rd2436;
	shf.l.wrap.b32 	%r1702, %r1696, %r1697, 23;
	shf.l.wrap.b32 	%r1703, %r1697, %r1696, 23;
	mov.b64 	%rd2439, {%r1703, %r1702};
	xor.b64  	%rd2440, %rd2438, %rd2439;
	xor.b64  	%rd2441, %rd2400, %rd2376;
	and.b64  	%rd2442, %rd2424, %rd2441;
	xor.b64  	%rd2443, %rd2442, %rd2376;
	add.s64 	%rd2444, %rd2352, %rd2235;
	add.s64 	%rd2445, %rd2444, %rd2719;
	add.s64 	%rd2446, %rd2445, %rd2443;
	add.s64 	%rd2447, %rd2446, %rd2440;
	add.s64 	%rd2448, %rd2447, %rd2363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd2435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd2435;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 28;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 28;
	mov.b64 	%rd2449, {%r1707, %r1706};
	shf.l.wrap.b32 	%r1708, %r1704, %r1705, 30;
	shf.l.wrap.b32 	%r1709, %r1705, %r1704, 30;
	mov.b64 	%rd2450, {%r1709, %r1708};
	xor.b64  	%rd2451, %rd2450, %rd2449;
	shf.l.wrap.b32 	%r1710, %r1704, %r1705, 25;
	shf.l.wrap.b32 	%r1711, %r1705, %r1704, 25;
	mov.b64 	%rd2452, {%r1711, %r1710};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	xor.b64  	%rd2454, %rd2435, %rd2387;
	xor.b64  	%rd2455, %rd2435, %rd2411;
	and.b64  	%rd2456, %rd2455, %rd2454;
	xor.b64  	%rd2457, %rd2456, %rd2435;
	add.s64 	%rd2458, %rd2447, %rd2457;
	add.s64 	%rd2459, %rd2458, %rd2453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1712,%dummy}, %rd2448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1713}, %rd2448;
	}
	shf.r.wrap.b32 	%r1714, %r1713, %r1712, 14;
	shf.r.wrap.b32 	%r1715, %r1712, %r1713, 14;
	mov.b64 	%rd2460, {%r1715, %r1714};
	shf.r.wrap.b32 	%r1716, %r1713, %r1712, 18;
	shf.r.wrap.b32 	%r1717, %r1712, %r1713, 18;
	mov.b64 	%rd2461, {%r1717, %r1716};
	xor.b64  	%rd2462, %rd2461, %rd2460;
	shf.l.wrap.b32 	%r1718, %r1712, %r1713, 23;
	shf.l.wrap.b32 	%r1719, %r1713, %r1712, 23;
	mov.b64 	%rd2463, {%r1719, %r1718};
	xor.b64  	%rd2464, %rd2462, %rd2463;
	xor.b64  	%rd2465, %rd2424, %rd2400;
	and.b64  	%rd2466, %rd2448, %rd2465;
	xor.b64  	%rd2467, %rd2466, %rd2400;
	add.s64 	%rd2468, %rd2376, %rd2248;
	add.s64 	%rd2469, %rd2468, %rd2720;
	add.s64 	%rd2470, %rd2469, %rd2467;
	add.s64 	%rd2471, %rd2470, %rd2464;
	add.s64 	%rd2472, %rd2471, %rd2387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1720,%dummy}, %rd2459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1721}, %rd2459;
	}
	shf.r.wrap.b32 	%r1722, %r1721, %r1720, 28;
	shf.r.wrap.b32 	%r1723, %r1720, %r1721, 28;
	mov.b64 	%rd2473, {%r1723, %r1722};
	shf.l.wrap.b32 	%r1724, %r1720, %r1721, 30;
	shf.l.wrap.b32 	%r1725, %r1721, %r1720, 30;
	mov.b64 	%rd2474, {%r1725, %r1724};
	xor.b64  	%rd2475, %rd2474, %rd2473;
	shf.l.wrap.b32 	%r1726, %r1720, %r1721, 25;
	shf.l.wrap.b32 	%r1727, %r1721, %r1720, 25;
	mov.b64 	%rd2476, {%r1727, %r1726};
	xor.b64  	%rd2477, %rd2475, %rd2476;
	xor.b64  	%rd2478, %rd2459, %rd2411;
	xor.b64  	%rd2479, %rd2459, %rd2435;
	and.b64  	%rd2480, %rd2479, %rd2478;
	xor.b64  	%rd2481, %rd2480, %rd2459;
	add.s64 	%rd2482, %rd2471, %rd2481;
	add.s64 	%rd2483, %rd2482, %rd2477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1728,%dummy}, %rd2472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd2472;
	}
	shf.r.wrap.b32 	%r1730, %r1729, %r1728, 14;
	shf.r.wrap.b32 	%r1731, %r1728, %r1729, 14;
	mov.b64 	%rd2484, {%r1731, %r1730};
	shf.r.wrap.b32 	%r1732, %r1729, %r1728, 18;
	shf.r.wrap.b32 	%r1733, %r1728, %r1729, 18;
	mov.b64 	%rd2485, {%r1733, %r1732};
	xor.b64  	%rd2486, %rd2485, %rd2484;
	shf.l.wrap.b32 	%r1734, %r1728, %r1729, 23;
	shf.l.wrap.b32 	%r1735, %r1729, %r1728, 23;
	mov.b64 	%rd2487, {%r1735, %r1734};
	xor.b64  	%rd2488, %rd2486, %rd2487;
	xor.b64  	%rd2489, %rd2448, %rd2424;
	and.b64  	%rd2490, %rd2472, %rd2489;
	xor.b64  	%rd2491, %rd2490, %rd2424;
	add.s64 	%rd2492, %rd2400, %rd2261;
	add.s64 	%rd2493, %rd2492, %rd2721;
	add.s64 	%rd2494, %rd2493, %rd2491;
	add.s64 	%rd2495, %rd2494, %rd2488;
	add.s64 	%rd2496, %rd2495, %rd2411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1736,%dummy}, %rd2483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1737}, %rd2483;
	}
	shf.r.wrap.b32 	%r1738, %r1737, %r1736, 28;
	shf.r.wrap.b32 	%r1739, %r1736, %r1737, 28;
	mov.b64 	%rd2497, {%r1739, %r1738};
	shf.l.wrap.b32 	%r1740, %r1736, %r1737, 30;
	shf.l.wrap.b32 	%r1741, %r1737, %r1736, 30;
	mov.b64 	%rd2498, {%r1741, %r1740};
	xor.b64  	%rd2499, %rd2498, %rd2497;
	shf.l.wrap.b32 	%r1742, %r1736, %r1737, 25;
	shf.l.wrap.b32 	%r1743, %r1737, %r1736, 25;
	mov.b64 	%rd2500, {%r1743, %r1742};
	xor.b64  	%rd2501, %rd2499, %rd2500;
	xor.b64  	%rd2502, %rd2483, %rd2435;
	xor.b64  	%rd2503, %rd2483, %rd2459;
	and.b64  	%rd2504, %rd2503, %rd2502;
	xor.b64  	%rd2505, %rd2504, %rd2483;
	add.s64 	%rd2506, %rd2495, %rd2505;
	add.s64 	%rd2507, %rd2506, %rd2501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1744,%dummy}, %rd2496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1745}, %rd2496;
	}
	shf.r.wrap.b32 	%r1746, %r1745, %r1744, 14;
	shf.r.wrap.b32 	%r1747, %r1744, %r1745, 14;
	mov.b64 	%rd2508, {%r1747, %r1746};
	shf.r.wrap.b32 	%r1748, %r1745, %r1744, 18;
	shf.r.wrap.b32 	%r1749, %r1744, %r1745, 18;
	mov.b64 	%rd2509, {%r1749, %r1748};
	xor.b64  	%rd2510, %rd2509, %rd2508;
	shf.l.wrap.b32 	%r1750, %r1744, %r1745, 23;
	shf.l.wrap.b32 	%r1751, %r1745, %r1744, 23;
	mov.b64 	%rd2511, {%r1751, %r1750};
	xor.b64  	%rd2512, %rd2510, %rd2511;
	xor.b64  	%rd2513, %rd2472, %rd2448;
	and.b64  	%rd2514, %rd2496, %rd2513;
	xor.b64  	%rd2515, %rd2514, %rd2448;
	add.s64 	%rd2516, %rd2424, %rd2274;
	add.s64 	%rd2517, %rd2516, %rd2722;
	add.s64 	%rd2518, %rd2517, %rd2515;
	add.s64 	%rd2519, %rd2518, %rd2512;
	add.s64 	%rd2520, %rd2519, %rd2435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1752,%dummy}, %rd2507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd2507;
	}
	shf.r.wrap.b32 	%r1754, %r1753, %r1752, 28;
	shf.r.wrap.b32 	%r1755, %r1752, %r1753, 28;
	mov.b64 	%rd2521, {%r1755, %r1754};
	shf.l.wrap.b32 	%r1756, %r1752, %r1753, 30;
	shf.l.wrap.b32 	%r1757, %r1753, %r1752, 30;
	mov.b64 	%rd2522, {%r1757, %r1756};
	xor.b64  	%rd2523, %rd2522, %rd2521;
	shf.l.wrap.b32 	%r1758, %r1752, %r1753, 25;
	shf.l.wrap.b32 	%r1759, %r1753, %r1752, 25;
	mov.b64 	%rd2524, {%r1759, %r1758};
	xor.b64  	%rd2525, %rd2523, %rd2524;
	xor.b64  	%rd2526, %rd2507, %rd2459;
	xor.b64  	%rd2527, %rd2507, %rd2483;
	and.b64  	%rd2528, %rd2527, %rd2526;
	xor.b64  	%rd2529, %rd2528, %rd2507;
	add.s64 	%rd2530, %rd2519, %rd2529;
	add.s64 	%rd2531, %rd2530, %rd2525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1760,%dummy}, %rd2520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd2520;
	}
	shf.r.wrap.b32 	%r1762, %r1761, %r1760, 14;
	shf.r.wrap.b32 	%r1763, %r1760, %r1761, 14;
	mov.b64 	%rd2532, {%r1763, %r1762};
	shf.r.wrap.b32 	%r1764, %r1761, %r1760, 18;
	shf.r.wrap.b32 	%r1765, %r1760, %r1761, 18;
	mov.b64 	%rd2533, {%r1765, %r1764};
	xor.b64  	%rd2534, %rd2533, %rd2532;
	shf.l.wrap.b32 	%r1766, %r1760, %r1761, 23;
	shf.l.wrap.b32 	%r1767, %r1761, %r1760, 23;
	mov.b64 	%rd2535, {%r1767, %r1766};
	xor.b64  	%rd2536, %rd2534, %rd2535;
	xor.b64  	%rd2537, %rd2496, %rd2472;
	and.b64  	%rd2538, %rd2520, %rd2537;
	xor.b64  	%rd2539, %rd2538, %rd2472;
	add.s64 	%rd2540, %rd2448, %rd2287;
	add.s64 	%rd2541, %rd2540, %rd2723;
	add.s64 	%rd2542, %rd2541, %rd2539;
	add.s64 	%rd2543, %rd2542, %rd2536;
	add.s64 	%rd2544, %rd2543, %rd2459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd2531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2531;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 28;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 28;
	mov.b64 	%rd2545, {%r1771, %r1770};
	shf.l.wrap.b32 	%r1772, %r1768, %r1769, 30;
	shf.l.wrap.b32 	%r1773, %r1769, %r1768, 30;
	mov.b64 	%rd2546, {%r1773, %r1772};
	xor.b64  	%rd2547, %rd2546, %rd2545;
	shf.l.wrap.b32 	%r1774, %r1768, %r1769, 25;
	shf.l.wrap.b32 	%r1775, %r1769, %r1768, 25;
	mov.b64 	%rd2548, {%r1775, %r1774};
	xor.b64  	%rd2549, %rd2547, %rd2548;
	xor.b64  	%rd2550, %rd2531, %rd2483;
	xor.b64  	%rd2551, %rd2531, %rd2507;
	and.b64  	%rd2552, %rd2551, %rd2550;
	xor.b64  	%rd2553, %rd2552, %rd2531;
	add.s64 	%rd2554, %rd2543, %rd2553;
	add.s64 	%rd2555, %rd2554, %rd2549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1776,%dummy}, %rd2544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd2544;
	}
	shf.r.wrap.b32 	%r1778, %r1777, %r1776, 14;
	shf.r.wrap.b32 	%r1779, %r1776, %r1777, 14;
	mov.b64 	%rd2556, {%r1779, %r1778};
	shf.r.wrap.b32 	%r1780, %r1777, %r1776, 18;
	shf.r.wrap.b32 	%r1781, %r1776, %r1777, 18;
	mov.b64 	%rd2557, {%r1781, %r1780};
	xor.b64  	%rd2558, %rd2557, %rd2556;
	shf.l.wrap.b32 	%r1782, %r1776, %r1777, 23;
	shf.l.wrap.b32 	%r1783, %r1777, %r1776, 23;
	mov.b64 	%rd2559, {%r1783, %r1782};
	xor.b64  	%rd2560, %rd2558, %rd2559;
	xor.b64  	%rd2561, %rd2520, %rd2496;
	and.b64  	%rd2562, %rd2544, %rd2561;
	xor.b64  	%rd2563, %rd2562, %rd2496;
	add.s64 	%rd2564, %rd2472, %rd2300;
	add.s64 	%rd2565, %rd2564, %rd2724;
	add.s64 	%rd2566, %rd2565, %rd2563;
	add.s64 	%rd2567, %rd2566, %rd2560;
	add.s64 	%rd2568, %rd2567, %rd2483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1784,%dummy}, %rd2555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1785}, %rd2555;
	}
	shf.r.wrap.b32 	%r1786, %r1785, %r1784, 28;
	shf.r.wrap.b32 	%r1787, %r1784, %r1785, 28;
	mov.b64 	%rd2569, {%r1787, %r1786};
	shf.l.wrap.b32 	%r1788, %r1784, %r1785, 30;
	shf.l.wrap.b32 	%r1789, %r1785, %r1784, 30;
	mov.b64 	%rd2570, {%r1789, %r1788};
	xor.b64  	%rd2571, %rd2570, %rd2569;
	shf.l.wrap.b32 	%r1790, %r1784, %r1785, 25;
	shf.l.wrap.b32 	%r1791, %r1785, %r1784, 25;
	mov.b64 	%rd2572, {%r1791, %r1790};
	xor.b64  	%rd2573, %rd2571, %rd2572;
	xor.b64  	%rd2574, %rd2555, %rd2507;
	xor.b64  	%rd2575, %rd2555, %rd2531;
	and.b64  	%rd2576, %rd2575, %rd2574;
	xor.b64  	%rd2577, %rd2576, %rd2555;
	add.s64 	%rd2578, %rd2567, %rd2577;
	add.s64 	%rd2579, %rd2578, %rd2573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1792,%dummy}, %rd2568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1793}, %rd2568;
	}
	shf.r.wrap.b32 	%r1794, %r1793, %r1792, 14;
	shf.r.wrap.b32 	%r1795, %r1792, %r1793, 14;
	mov.b64 	%rd2580, {%r1795, %r1794};
	shf.r.wrap.b32 	%r1796, %r1793, %r1792, 18;
	shf.r.wrap.b32 	%r1797, %r1792, %r1793, 18;
	mov.b64 	%rd2581, {%r1797, %r1796};
	xor.b64  	%rd2582, %rd2581, %rd2580;
	shf.l.wrap.b32 	%r1798, %r1792, %r1793, 23;
	shf.l.wrap.b32 	%r1799, %r1793, %r1792, 23;
	mov.b64 	%rd2583, {%r1799, %r1798};
	xor.b64  	%rd2584, %rd2582, %rd2583;
	xor.b64  	%rd2585, %rd2544, %rd2520;
	and.b64  	%rd2586, %rd2568, %rd2585;
	xor.b64  	%rd2587, %rd2586, %rd2520;
	add.s64 	%rd2588, %rd2496, %rd2313;
	add.s64 	%rd2589, %rd2588, %rd2725;
	add.s64 	%rd2590, %rd2589, %rd2587;
	add.s64 	%rd2591, %rd2590, %rd2584;
	add.s64 	%rd2592, %rd2591, %rd2507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1800,%dummy}, %rd2579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1801}, %rd2579;
	}
	shf.r.wrap.b32 	%r1802, %r1801, %r1800, 28;
	shf.r.wrap.b32 	%r1803, %r1800, %r1801, 28;
	mov.b64 	%rd2593, {%r1803, %r1802};
	shf.l.wrap.b32 	%r1804, %r1800, %r1801, 30;
	shf.l.wrap.b32 	%r1805, %r1801, %r1800, 30;
	mov.b64 	%rd2594, {%r1805, %r1804};
	xor.b64  	%rd2595, %rd2594, %rd2593;
	shf.l.wrap.b32 	%r1806, %r1800, %r1801, 25;
	shf.l.wrap.b32 	%r1807, %r1801, %r1800, 25;
	mov.b64 	%rd2596, {%r1807, %r1806};
	xor.b64  	%rd2597, %rd2595, %rd2596;
	xor.b64  	%rd2598, %rd2579, %rd2531;
	xor.b64  	%rd2599, %rd2579, %rd2555;
	and.b64  	%rd2600, %rd2599, %rd2598;
	xor.b64  	%rd2601, %rd2600, %rd2579;
	add.s64 	%rd2602, %rd2591, %rd2601;
	add.s64 	%rd2603, %rd2602, %rd2597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1808,%dummy}, %rd2592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1809}, %rd2592;
	}
	shf.r.wrap.b32 	%r1810, %r1809, %r1808, 14;
	shf.r.wrap.b32 	%r1811, %r1808, %r1809, 14;
	mov.b64 	%rd2604, {%r1811, %r1810};
	shf.r.wrap.b32 	%r1812, %r1809, %r1808, 18;
	shf.r.wrap.b32 	%r1813, %r1808, %r1809, 18;
	mov.b64 	%rd2605, {%r1813, %r1812};
	xor.b64  	%rd2606, %rd2605, %rd2604;
	shf.l.wrap.b32 	%r1814, %r1808, %r1809, 23;
	shf.l.wrap.b32 	%r1815, %r1809, %r1808, 23;
	mov.b64 	%rd2607, {%r1815, %r1814};
	xor.b64  	%rd2608, %rd2606, %rd2607;
	xor.b64  	%rd2609, %rd2568, %rd2544;
	and.b64  	%rd2610, %rd2592, %rd2609;
	xor.b64  	%rd2611, %rd2610, %rd2544;
	add.s64 	%rd2612, %rd2520, %rd2326;
	add.s64 	%rd2613, %rd2612, %rd2726;
	add.s64 	%rd2614, %rd2613, %rd2611;
	add.s64 	%rd2615, %rd2614, %rd2608;
	add.s64 	%rd2616, %rd2615, %rd2531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1816,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1817}, %rd2603;
	}
	shf.r.wrap.b32 	%r1818, %r1817, %r1816, 28;
	shf.r.wrap.b32 	%r1819, %r1816, %r1817, 28;
	mov.b64 	%rd2617, {%r1819, %r1818};
	shf.l.wrap.b32 	%r1820, %r1816, %r1817, 30;
	shf.l.wrap.b32 	%r1821, %r1817, %r1816, 30;
	mov.b64 	%rd2618, {%r1821, %r1820};
	xor.b64  	%rd2619, %rd2618, %rd2617;
	shf.l.wrap.b32 	%r1822, %r1816, %r1817, 25;
	shf.l.wrap.b32 	%r1823, %r1817, %r1816, 25;
	mov.b64 	%rd2620, {%r1823, %r1822};
	xor.b64  	%rd2621, %rd2619, %rd2620;
	xor.b64  	%rd2622, %rd2603, %rd2555;
	xor.b64  	%rd2623, %rd2603, %rd2579;
	and.b64  	%rd2624, %rd2623, %rd2622;
	xor.b64  	%rd2625, %rd2624, %rd2603;
	add.s64 	%rd2626, %rd2615, %rd2625;
	add.s64 	%rd2627, %rd2626, %rd2621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1824,%dummy}, %rd2616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1825}, %rd2616;
	}
	shf.r.wrap.b32 	%r1826, %r1825, %r1824, 14;
	shf.r.wrap.b32 	%r1827, %r1824, %r1825, 14;
	mov.b64 	%rd2628, {%r1827, %r1826};
	shf.r.wrap.b32 	%r1828, %r1825, %r1824, 18;
	shf.r.wrap.b32 	%r1829, %r1824, %r1825, 18;
	mov.b64 	%rd2629, {%r1829, %r1828};
	xor.b64  	%rd2630, %rd2629, %rd2628;
	shf.l.wrap.b32 	%r1830, %r1824, %r1825, 23;
	shf.l.wrap.b32 	%r1831, %r1825, %r1824, 23;
	mov.b64 	%rd2631, {%r1831, %r1830};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	xor.b64  	%rd2633, %rd2592, %rd2568;
	and.b64  	%rd2634, %rd2616, %rd2633;
	xor.b64  	%rd2635, %rd2634, %rd2568;
	add.s64 	%rd2636, %rd2544, %rd2339;
	add.s64 	%rd2637, %rd2636, %rd2727;
	add.s64 	%rd2638, %rd2637, %rd2635;
	add.s64 	%rd2639, %rd2638, %rd2632;
	add.s64 	%rd95, %rd2639, %rd2555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1832,%dummy}, %rd2627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1833}, %rd2627;
	}
	shf.r.wrap.b32 	%r1834, %r1833, %r1832, 28;
	shf.r.wrap.b32 	%r1835, %r1832, %r1833, 28;
	mov.b64 	%rd2640, {%r1835, %r1834};
	shf.l.wrap.b32 	%r1836, %r1832, %r1833, 30;
	shf.l.wrap.b32 	%r1837, %r1833, %r1832, 30;
	mov.b64 	%rd2641, {%r1837, %r1836};
	xor.b64  	%rd2642, %rd2641, %rd2640;
	shf.l.wrap.b32 	%r1838, %r1832, %r1833, 25;
	shf.l.wrap.b32 	%r1839, %r1833, %r1832, 25;
	mov.b64 	%rd2643, {%r1839, %r1838};
	xor.b64  	%rd2644, %rd2642, %rd2643;
	xor.b64  	%rd2645, %rd2627, %rd2579;
	xor.b64  	%rd2646, %rd2627, %rd2603;
	and.b64  	%rd2647, %rd2646, %rd2645;
	xor.b64  	%rd2648, %rd2647, %rd2627;
	add.s64 	%rd2649, %rd2639, %rd2648;
	add.s64 	%rd96, %rd2649, %rd2644;
	cvt.u32.u64	%r1840, %rd95;
	setp.ne.s32	%p3, %r1840, %r3;
	@%p3 bra 	BB5_9;

	shr.u64 	%rd2650, %rd96, 32;
	cvt.u32.u64	%r1841, %rd2650;
	shr.u64 	%rd2651, %rd95, 32;
	cvt.u32.u64	%r1842, %rd2651;
	setp.eq.s32	%p4, %r1842, %r4;
	cvt.u32.u64	%r1843, %rd96;
	setp.eq.s32	%p5, %r1843, %r5;
	and.pred  	%p6, %p4, %p5;
	setp.eq.s32	%p7, %r1841, %r6;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB5_9;
	bra.uni 	BB5_5;

BB5_5:
	atom.global.add.u32 	%r1844, [%rd21], 1;
	setp.ne.s32	%p9, %r1844, 0;
	@%p9 bra 	BB5_9;

	ld.param.u32 	%r1850, [m01710_s08_param_31];
	atom.global.add.u32 	%r10, [%rd102], 1;
	setp.lt.u32	%p10, %r10, %r1850;
	@%p10 bra 	BB5_8;
	bra.uni 	BB5_7;

BB5_8:
	ld.param.u32 	%r1851, [m01710_s08_param_27];
	ld.param.u64 	%rd2729, [m01710_s08_param_14];
	ld.param.u32 	%r1848, [m01710_s08_param_32];
	mul.wide.u32 	%rd2652, %r10, 20;
	add.s64 	%rd2653, %rd2729, %rd2652;
	st.global.u32 	[%rd2653], %r1851;
	mov.u32 	%r1846, 0;
	st.global.u32 	[%rd2653+4], %r1846;
	st.global.u32 	[%rd2653+8], %r1848;
	st.global.u32 	[%rd2653+12], %r1;
	st.global.u32 	[%rd2653+16], %r1852;
	bra.uni 	BB5_9;

BB5_7:
	atom.global.add.u32 	%r1845, [%rd102], -1;

BB5_9:
	ld.param.u32 	%r1847, [m01710_s08_param_30];
	add.s32 	%r1852, %r1852, 1;
	setp.lt.u32	%p11, %r1852, %r1847;
	@%p11 bra 	BB5_3;

BB5_10:
	ret;
}

	// .globl	m01710_s16
.entry m01710_s16(
	.param .u64 .ptr .global .align 4 m01710_s16_param_0,
	.param .u64 .ptr .global .align 4 m01710_s16_param_1,
	.param .u64 .ptr .global .align 4 m01710_s16_param_2,
	.param .u64 .ptr .global .align 4 m01710_s16_param_3,
	.param .u64 .ptr .global .align 1 m01710_s16_param_4,
	.param .u64 .ptr .global .align 1 m01710_s16_param_5,
	.param .u64 .ptr .global .align 4 m01710_s16_param_6,
	.param .u64 .ptr .global .align 4 m01710_s16_param_7,
	.param .u64 .ptr .global .align 4 m01710_s16_param_8,
	.param .u64 .ptr .global .align 4 m01710_s16_param_9,
	.param .u64 .ptr .global .align 4 m01710_s16_param_10,
	.param .u64 .ptr .global .align 4 m01710_s16_param_11,
	.param .u64 .ptr .global .align 4 m01710_s16_param_12,
	.param .u64 .ptr .global .align 4 m01710_s16_param_13,
	.param .u64 .ptr .global .align 4 m01710_s16_param_14,
	.param .u64 .ptr .global .align 4 m01710_s16_param_15,
	.param .u64 .ptr .global .align 4 m01710_s16_param_16,
	.param .u64 .ptr .global .align 4 m01710_s16_param_17,
	.param .u64 .ptr .global .align 1 m01710_s16_param_18,
	.param .u64 .ptr .global .align 4 m01710_s16_param_19,
	.param .u64 .ptr .global .align 4 m01710_s16_param_20,
	.param .u64 .ptr .global .align 4 m01710_s16_param_21,
	.param .u64 .ptr .global .align 4 m01710_s16_param_22,
	.param .u64 .ptr .global .align 4 m01710_s16_param_23,
	.param .u32 m01710_s16_param_24,
	.param .u32 m01710_s16_param_25,
	.param .u32 m01710_s16_param_26,
	.param .u32 m01710_s16_param_27,
	.param .u32 m01710_s16_param_28,
	.param .u32 m01710_s16_param_29,
	.param .u32 m01710_s16_param_30,
	.param .u32 m01710_s16_param_31,
	.param .u32 m01710_s16_param_32,
	.param .u32 m01710_s16_param_33,
	.param .u32 m01710_s16_param_34
)
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<1877>;
	.reg .b64 	%rd<2754>;


	ld.param.u64 	%rd102, [m01710_s16_param_0];
	ld.param.u64 	%rd105, [m01710_s16_param_15];
	ld.param.u64 	%rd106, [m01710_s16_param_16];
	ld.param.u64 	%rd107, [m01710_s16_param_19];
	ld.param.u32 	%r13, [m01710_s16_param_30];
	ld.param.u32 	%r15, [m01710_s16_param_32];
	ld.param.u32 	%r16, [m01710_s16_param_34];
	mov.b32	%r17, %envreg3;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %ntid.x;
	mad.lo.s32 	%r20, %r18, %r19, %r17;
	mov.u32 	%r21, %tid.x;
	add.s32 	%r1, %r20, %r21;
	setp.ge.u32	%p1, %r1, %r16;
	@%p1 bra 	BB6_10;

	setp.eq.s32	%p2, %r13, 0;
	@%p2 bra 	BB6_10;

	mul.wide.u32 	%rd108, %r1, 80;
	add.s64 	%rd109, %rd102, %rd108;
	ld.global.u32 	%r2, [%rd109];
	mul.wide.u32 	%rd110, %r15, 64;
	add.s64 	%rd111, %rd105, %rd110;
	ld.global.u32 	%r3, [%rd111+56];
	ld.global.u32 	%r4, [%rd111+60];
	ld.global.u32 	%r5, [%rd111+24];
	ld.global.u32 	%r6, [%rd111+28];
	ld.global.u32 	%r7, [%rd109+4];
	ld.global.u32 	%r23, [%rd109+8];
	ld.global.u32 	%r24, [%rd109+12];
	mov.b64	%rd112, {%r24, %r23};
	ld.global.u32 	%r25, [%rd109+16];
	ld.global.u32 	%r26, [%rd109+20];
	mov.b64	%rd1, {%r26, %r25};
	ld.global.u32 	%r27, [%rd109+24];
	ld.global.u32 	%r28, [%rd109+28];
	mov.b64	%rd113, {%r28, %r27};
	ld.global.u32 	%r29, [%rd109+32];
	ld.global.u32 	%r30, [%rd109+36];
	mov.b64	%rd2, {%r30, %r29};
	ld.global.u32 	%r31, [%rd109+40];
	ld.global.u32 	%r32, [%rd109+44];
	mov.b64	%rd3, {%r32, %r31};
	ld.global.u32 	%r33, [%rd109+48];
	ld.global.u32 	%r34, [%rd109+52];
	mov.b64	%rd4, {%r34, %r33};
	ld.global.u32 	%r35, [%rd109+56];
	ld.global.u32 	%r36, [%rd109+60];
	mov.b64	%rd5, {%r36, %r35};
	ld.const.u64 	%rd114, [k_sha512];
	add.s64 	%rd6, %rd114, 6620516959819538809;
	mov.u64 	%rd115, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37,%dummy}, %rd115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38}, %rd115;
	}
	shf.r.wrap.b32 	%r39, %r38, %r37, 18;
	shf.r.wrap.b32 	%r40, %r37, %r38, 18;
	mov.b64 	%rd116, {%r40, %r39};
	shf.r.wrap.b32 	%r41, %r38, %r37, 14;
	shf.r.wrap.b32 	%r42, %r37, %r38, 14;
	mov.b64 	%rd117, {%r42, %r41};
	xor.b64  	%rd118, %rd116, %rd117;
	shf.l.wrap.b32 	%r43, %r37, %r38, 23;
	shf.l.wrap.b32 	%r44, %r38, %r37, 23;
	mov.b64 	%rd119, {%r44, %r43};
	xor.b64  	%rd7, %rd118, %rd119;
	mov.u64 	%rd120, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r45}, %rd120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r46,%dummy}, %rd120;
	}
	shf.l.wrap.b32 	%r47, %r46, %r45, 30;
	shf.l.wrap.b32 	%r48, %r45, %r46, 30;
	mov.b64 	%rd121, {%r48, %r47};
	shf.r.wrap.b32 	%r49, %r45, %r46, 28;
	shf.r.wrap.b32 	%r50, %r46, %r45, 28;
	mov.b64 	%rd122, {%r50, %r49};
	xor.b64  	%rd123, %rd121, %rd122;
	shf.l.wrap.b32 	%r51, %r46, %r45, 25;
	shf.l.wrap.b32 	%r52, %r45, %r46, 25;
	mov.b64 	%rd124, {%r52, %r51};
	xor.b64  	%rd8, %rd123, %rd124;
	ld.const.u64 	%rd125, [k_sha512+8];
	add.s64 	%rd126, %rd112, %rd125;
	add.s64 	%rd9, %rd126, 2270897969802886507;
	ld.const.u64 	%rd127, [k_sha512+16];
	add.s64 	%rd128, %rd1, %rd127;
	add.s64 	%rd10, %rd128, -7276294671716946913;
	ld.const.u64 	%rd129, [k_sha512+24];
	add.s64 	%rd130, %rd113, %rd129;
	add.s64 	%rd11, %rd130, 5840696475078001361;
	mul.wide.u32 	%rd131, %r15, 4;
	add.s64 	%rd24, %rd106, %rd131;
	mov.u64 	%rd132, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r53}, %rd132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r54,%dummy}, %rd132;
	}
	shf.l.wrap.b32 	%r55, %r54, %r53, 3;
	shf.l.wrap.b32 	%r56, %r53, %r54, 3;
	mov.b64 	%rd133, {%r56, %r55};
	shf.r.wrap.b32 	%r57, %r53, %r54, 19;
	shf.r.wrap.b32 	%r58, %r54, %r53, 19;
	mov.b64 	%rd134, {%r58, %r57};
	xor.b64  	%rd25, %rd134, %rd133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r59,%dummy}, %rd112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r60}, %rd112;
	}
	shf.r.wrap.b32 	%r61, %r60, %r59, 1;
	shf.r.wrap.b32 	%r62, %r59, %r60, 1;
	mov.b64 	%rd135, {%r62, %r61};
	shf.r.wrap.b32 	%r63, %r60, %r59, 8;
	shf.r.wrap.b32 	%r64, %r59, %r60, 8;
	mov.b64 	%rd136, {%r64, %r63};
	shr.u64 	%rd137, %rd112, 7;
	xor.b64  	%rd138, %rd135, %rd137;
	xor.b64  	%rd26, %rd138, %rd136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r65,%dummy}, %rd5;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r66}, %rd5;
	}
	shf.r.wrap.b32 	%r67, %r66, %r65, 19;
	shf.r.wrap.b32 	%r68, %r65, %r66, 19;
	mov.b64 	%rd139, {%r68, %r67};
	shf.l.wrap.b32 	%r69, %r65, %r66, 3;
	shf.l.wrap.b32 	%r70, %r66, %r65, 3;
	mov.b64 	%rd140, {%r70, %r69};
	shr.u64 	%rd141, %rd5, 6;
	xor.b64  	%rd142, %rd139, %rd141;
	xor.b64  	%rd143, %rd142, %rd140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r71,%dummy}, %rd1;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r72}, %rd1;
	}
	shf.r.wrap.b32 	%r73, %r72, %r71, 1;
	shf.r.wrap.b32 	%r74, %r71, %r72, 1;
	mov.b64 	%rd144, {%r74, %r73};
	shf.r.wrap.b32 	%r75, %r72, %r71, 8;
	shf.r.wrap.b32 	%r76, %r71, %r72, 8;
	mov.b64 	%rd145, {%r76, %r75};
	shr.u64 	%rd146, %rd1, 7;
	xor.b64  	%rd147, %rd144, %rd146;
	xor.b64  	%rd148, %rd147, %rd145;
	add.s64 	%rd149, %rd112, %rd143;
	add.s64 	%rd27, %rd149, %rd148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r77,%dummy}, %rd113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r78}, %rd113;
	}
	shf.r.wrap.b32 	%r79, %r78, %r77, 1;
	shf.r.wrap.b32 	%r80, %r77, %r78, 1;
	mov.b64 	%rd150, {%r80, %r79};
	shf.r.wrap.b32 	%r81, %r78, %r77, 8;
	shf.r.wrap.b32 	%r82, %r77, %r78, 8;
	mov.b64 	%rd151, {%r82, %r81};
	shr.u64 	%rd152, %rd113, 7;
	xor.b64  	%rd153, %rd150, %rd152;
	xor.b64  	%rd28, %rd153, %rd151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r83,%dummy}, %rd27;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r84}, %rd27;
	}
	shf.r.wrap.b32 	%r85, %r84, %r83, 19;
	shf.r.wrap.b32 	%r86, %r83, %r84, 19;
	mov.b64 	%rd154, {%r86, %r85};
	shf.l.wrap.b32 	%r87, %r83, %r84, 3;
	shf.l.wrap.b32 	%r88, %r84, %r83, 3;
	mov.b64 	%rd155, {%r88, %r87};
	shr.u64 	%rd156, %rd27, 6;
	xor.b64  	%rd157, %rd154, %rd156;
	xor.b64  	%rd158, %rd157, %rd155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r89,%dummy}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r90}, %rd2;
	}
	shf.r.wrap.b32 	%r91, %r90, %r89, 1;
	shf.r.wrap.b32 	%r92, %r89, %r90, 1;
	mov.b64 	%rd159, {%r92, %r91};
	shf.r.wrap.b32 	%r93, %r90, %r89, 8;
	shf.r.wrap.b32 	%r94, %r89, %r90, 8;
	mov.b64 	%rd160, {%r94, %r93};
	shr.u64 	%rd161, %rd2, 7;
	xor.b64  	%rd162, %rd159, %rd161;
	xor.b64  	%rd163, %rd162, %rd160;
	add.s64 	%rd164, %rd113, %rd158;
	add.s64 	%rd29, %rd164, %rd163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r95,%dummy}, %rd3;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd3;
	}
	shf.r.wrap.b32 	%r97, %r96, %r95, 1;
	shf.r.wrap.b32 	%r98, %r95, %r96, 1;
	mov.b64 	%rd165, {%r98, %r97};
	shf.r.wrap.b32 	%r99, %r96, %r95, 8;
	shf.r.wrap.b32 	%r100, %r95, %r96, 8;
	mov.b64 	%rd166, {%r100, %r99};
	shr.u64 	%rd167, %rd3, 7;
	xor.b64  	%rd168, %rd165, %rd167;
	xor.b64  	%rd30, %rd168, %rd166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd29;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r102}, %rd29;
	}
	shf.r.wrap.b32 	%r103, %r102, %r101, 19;
	shf.r.wrap.b32 	%r104, %r101, %r102, 19;
	mov.b64 	%rd169, {%r104, %r103};
	shf.l.wrap.b32 	%r105, %r101, %r102, 3;
	shf.l.wrap.b32 	%r106, %r102, %r101, 3;
	mov.b64 	%rd170, {%r106, %r105};
	shr.u64 	%rd171, %rd29, 6;
	xor.b64  	%rd172, %rd169, %rd171;
	xor.b64  	%rd173, %rd172, %rd170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r107,%dummy}, %rd4;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r108}, %rd4;
	}
	shf.r.wrap.b32 	%r109, %r108, %r107, 1;
	shf.r.wrap.b32 	%r110, %r107, %r108, 1;
	mov.b64 	%rd174, {%r110, %r109};
	shf.r.wrap.b32 	%r111, %r108, %r107, 8;
	shf.r.wrap.b32 	%r112, %r107, %r108, 8;
	mov.b64 	%rd175, {%r112, %r111};
	shr.u64 	%rd176, %rd4, 7;
	xor.b64  	%rd177, %rd174, %rd176;
	xor.b64  	%rd178, %rd177, %rd175;
	add.s64 	%rd179, %rd3, %rd173;
	add.s64 	%rd31, %rd179, %rd178;
	shf.r.wrap.b32 	%r113, %r53, %r54, 8;
	shf.r.wrap.b32 	%r114, %r54, %r53, 8;
	mov.b64 	%rd180, {%r114, %r113};
	shf.r.wrap.b32 	%r115, %r53, %r54, 1;
	shf.r.wrap.b32 	%r116, %r54, %r53, 1;
	mov.b64 	%rd181, {%r116, %r115};
	xor.b64  	%rd32, %rd181, %rd180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r117,%dummy}, %rd31;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r118}, %rd31;
	}
	shf.r.wrap.b32 	%r119, %r118, %r117, 19;
	shf.r.wrap.b32 	%r120, %r117, %r118, 19;
	mov.b64 	%rd182, {%r120, %r119};
	shf.l.wrap.b32 	%r121, %r117, %r118, 3;
	shf.l.wrap.b32 	%r122, %r118, %r117, 3;
	mov.b64 	%rd183, {%r122, %r121};
	shr.u64 	%rd184, %rd31, 6;
	xor.b64  	%rd185, %rd182, %rd184;
	xor.b64  	%rd34, %rd185, %rd183;
	shf.r.wrap.b32 	%r123, %r66, %r65, 1;
	shf.r.wrap.b32 	%r124, %r65, %r66, 1;
	mov.b64 	%rd186, {%r124, %r123};
	shf.r.wrap.b32 	%r125, %r66, %r65, 8;
	shf.r.wrap.b32 	%r126, %r65, %r66, 8;
	mov.b64 	%rd187, {%r126, %r125};
	shr.u64 	%rd188, %rd5, 7;
	xor.b64  	%rd189, %rd186, %rd188;
	xor.b64  	%rd35, %rd189, %rd187;
	shf.r.wrap.b32 	%r127, %r84, %r83, 1;
	shf.r.wrap.b32 	%r128, %r83, %r84, 1;
	mov.b64 	%rd190, {%r128, %r127};
	shf.r.wrap.b32 	%r129, %r84, %r83, 8;
	shf.r.wrap.b32 	%r130, %r83, %r84, 8;
	mov.b64 	%rd191, {%r130, %r129};
	shr.u64 	%rd192, %rd27, 7;
	xor.b64  	%rd193, %rd190, %rd192;
	xor.b64  	%rd52, %rd193, %rd191;
	shf.r.wrap.b32 	%r131, %r102, %r101, 1;
	shf.r.wrap.b32 	%r132, %r101, %r102, 1;
	mov.b64 	%rd194, {%r132, %r131};
	shf.r.wrap.b32 	%r133, %r102, %r101, 8;
	shf.r.wrap.b32 	%r134, %r101, %r102, 8;
	mov.b64 	%rd195, {%r134, %r133};
	shr.u64 	%rd196, %rd29, 7;
	xor.b64  	%rd197, %rd194, %rd196;
	xor.b64  	%rd53, %rd197, %rd195;
	shf.r.wrap.b32 	%r135, %r118, %r117, 1;
	shf.r.wrap.b32 	%r136, %r117, %r118, 1;
	mov.b64 	%rd198, {%r136, %r135};
	shf.r.wrap.b32 	%r137, %r118, %r117, 8;
	shf.r.wrap.b32 	%r138, %r117, %r118, 8;
	mov.b64 	%rd199, {%r138, %r137};
	shr.u64 	%rd200, %rd31, 7;
	xor.b64  	%rd201, %rd198, %rd200;
	xor.b64  	%rd54, %rd201, %rd199;
	mov.u32 	%r1876, 0;

BB6_3:
	ld.const.u64 	%rd2752, [k_sha512+608];
	ld.const.u64 	%rd2751, [k_sha512+600];
	ld.const.u64 	%rd2750, [k_sha512+592];
	ld.const.u64 	%rd2749, [k_sha512+584];
	ld.const.u64 	%rd2748, [k_sha512+576];
	ld.const.u64 	%rd2747, [k_sha512+568];
	ld.const.u64 	%rd2746, [k_sha512+560];
	ld.const.u64 	%rd2745, [k_sha512+552];
	ld.const.u64 	%rd2744, [k_sha512+544];
	ld.const.u64 	%rd2743, [k_sha512+536];
	ld.const.u64 	%rd2742, [k_sha512+528];
	ld.const.u64 	%rd2741, [k_sha512+520];
	ld.const.u64 	%rd2740, [k_sha512+512];
	ld.const.u64 	%rd2739, [k_sha512+504];
	ld.const.u64 	%rd2738, [k_sha512+496];
	ld.const.u64 	%rd2737, [k_sha512+488];
	ld.const.u64 	%rd2736, [k_sha512+480];
	ld.const.u64 	%rd2735, [k_sha512+472];
	ld.const.u64 	%rd2734, [k_sha512+464];
	ld.const.u64 	%rd2733, [k_sha512+456];
	ld.const.u64 	%rd2732, [k_sha512+448];
	ld.const.u64 	%rd2731, [k_sha512+440];
	ld.const.u64 	%rd2730, [k_sha512+432];
	ld.const.u64 	%rd2729, [k_sha512+424];
	ld.const.u64 	%rd2728, [k_sha512+416];
	ld.const.u64 	%rd2727, [k_sha512+408];
	ld.const.u64 	%rd2726, [k_sha512+400];
	ld.const.u64 	%rd2725, [k_sha512+392];
	ld.const.u64 	%rd2724, [k_sha512+384];
	ld.const.u64 	%rd2723, [k_sha512+376];
	ld.const.u64 	%rd2722, [k_sha512+368];
	ld.const.u64 	%rd2721, [k_sha512+360];
	ld.const.u64 	%rd2720, [k_sha512+352];
	ld.const.u64 	%rd2719, [k_sha512+344];
	ld.const.u64 	%rd2718, [k_sha512+336];
	ld.const.u64 	%rd2717, [k_sha512+328];
	ld.const.u64 	%rd2716, [k_sha512+320];
	ld.const.u64 	%rd2715, [k_sha512+312];
	ld.const.u64 	%rd2714, [k_sha512+304];
	ld.const.u64 	%rd2713, [k_sha512+296];
	ld.const.u64 	%rd2712, [k_sha512+288];
	ld.const.u64 	%rd2711, [k_sha512+280];
	ld.const.u64 	%rd2710, [k_sha512+272];
	ld.const.u64 	%rd2709, [k_sha512+264];
	ld.const.u64 	%rd2708, [k_sha512+256];
	ld.const.u64 	%rd2707, [k_sha512+248];
	ld.const.u64 	%rd2706, [k_sha512+240];
	ld.const.u64 	%rd2705, [k_sha512+232];
	ld.const.u64 	%rd2704, [k_sha512+224];
	ld.const.u64 	%rd2703, [k_sha512+216];
	ld.const.u64 	%rd2702, [k_sha512+208];
	ld.const.u64 	%rd2701, [k_sha512+200];
	ld.const.u64 	%rd2700, [k_sha512+192];
	ld.const.u64 	%rd2699, [k_sha512+184];
	ld.const.u64 	%rd2698, [k_sha512+176];
	ld.const.u64 	%rd2697, [k_sha512+168];
	ld.const.u64 	%rd2696, [k_sha512+160];
	ld.const.u64 	%rd2695, [k_sha512+152];
	ld.const.u64 	%rd2694, [k_sha512+144];
	ld.const.u64 	%rd2693, [k_sha512+136];
	ld.const.u64 	%rd2692, [k_sha512+128];
	add.s64 	%rd2691, %rd4, %rd5;
	ld.const.u64 	%rd2690, [k_sha512+120];
	ld.const.u64 	%rd2689, [k_sha512+112];
	ld.const.u64 	%rd2688, [k_sha512+104];
	ld.const.u64 	%rd2687, [k_sha512+96];
	ld.const.u64 	%rd2686, [k_sha512+88];
	ld.const.u64 	%rd2685, [k_sha512+80];
	ld.const.u64 	%rd2684, [k_sha512+72];
	ld.const.u64 	%rd2683, [k_sha512+64];
	ld.const.u64 	%rd2682, [k_sha512+56];
	ld.const.u64 	%rd2681, [k_sha512+48];
	ld.const.u64 	%rd2680, [k_sha512+40];
	ld.const.u64 	%rd2679, [k_sha512+32];
	ld.param.u64 	%rd2678, [m01710_s16_param_3];
	mul.wide.u32 	%rd202, %r1876, 4;
	add.s64 	%rd203, %rd2678, %rd202;
	ld.global.u32 	%r139, [%rd203];
	or.b32  	%r140, %r139, %r2;
	mov.b64	%rd204, {%r7, %r140};
	add.s64 	%rd205, %rd6, %rd204;
	add.s64 	%rd206, %rd205, %rd7;
	add.s64 	%rd207, %rd206, -4263291710961585108;
	add.s64 	%rd208, %rd206, %rd8;
	add.s64 	%rd209, %rd208, 6482280703085258342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r141,%dummy}, %rd207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r142}, %rd207;
	}
	shf.r.wrap.b32 	%r143, %r142, %r141, 14;
	shf.r.wrap.b32 	%r144, %r141, %r142, 14;
	mov.b64 	%rd210, {%r144, %r143};
	shf.r.wrap.b32 	%r145, %r142, %r141, 18;
	shf.r.wrap.b32 	%r146, %r141, %r142, 18;
	mov.b64 	%rd211, {%r146, %r145};
	xor.b64  	%rd212, %rd211, %rd210;
	shf.l.wrap.b32 	%r147, %r141, %r142, 23;
	shf.l.wrap.b32 	%r148, %r142, %r141, 23;
	mov.b64 	%rd213, {%r148, %r147};
	xor.b64  	%rd214, %rd212, %rd213;
	and.b64  	%rd215, %rd207, -3887949035690463538;
	xor.b64  	%rd216, %rd215, -7276294671716946913;
	add.s64 	%rd217, %rd9, %rd216;
	add.s64 	%rd218, %rd217, %rd214;
	add.s64 	%rd219, %rd218, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r149,%dummy}, %rd209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r150}, %rd209;
	}
	shf.r.wrap.b32 	%r151, %r150, %r149, 28;
	shf.r.wrap.b32 	%r152, %r149, %r150, 28;
	mov.b64 	%rd220, {%r152, %r151};
	shf.l.wrap.b32 	%r153, %r149, %r150, 30;
	shf.l.wrap.b32 	%r154, %r150, %r149, 30;
	mov.b64 	%rd221, {%r154, %r153};
	xor.b64  	%rd222, %rd221, %rd220;
	shf.l.wrap.b32 	%r155, %r149, %r150, 25;
	shf.l.wrap.b32 	%r156, %r150, %r149, 25;
	mov.b64 	%rd223, {%r156, %r155};
	xor.b64  	%rd224, %rd222, %rd223;
	xor.b64  	%rd225, %rd209, -4942790177534073029;
	xor.b64  	%rd226, %rd209, 7640891576956012808;
	and.b64  	%rd227, %rd226, %rd225;
	xor.b64  	%rd228, %rd227, %rd209;
	add.s64 	%rd229, %rd218, %rd228;
	add.s64 	%rd230, %rd229, %rd224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r157,%dummy}, %rd219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r158}, %rd219;
	}
	shf.r.wrap.b32 	%r159, %r158, %r157, 14;
	shf.r.wrap.b32 	%r160, %r157, %r158, 14;
	mov.b64 	%rd231, {%r160, %r159};
	shf.r.wrap.b32 	%r161, %r158, %r157, 18;
	shf.r.wrap.b32 	%r162, %r157, %r158, 18;
	mov.b64 	%rd232, {%r162, %r161};
	xor.b64  	%rd233, %rd232, %rd231;
	shf.l.wrap.b32 	%r163, %r157, %r158, 23;
	shf.l.wrap.b32 	%r164, %r158, %r157, 23;
	mov.b64 	%rd234, {%r164, %r163};
	xor.b64  	%rd235, %rd233, %rd234;
	xor.b64  	%rd236, %rd207, 5840696475078001361;
	and.b64  	%rd237, %rd219, %rd236;
	xor.b64  	%rd238, %rd237, 5840696475078001361;
	add.s64 	%rd239, %rd10, %rd238;
	add.s64 	%rd240, %rd239, %rd235;
	add.s64 	%rd241, %rd240, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r165,%dummy}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r166}, %rd230;
	}
	shf.r.wrap.b32 	%r167, %r166, %r165, 28;
	shf.r.wrap.b32 	%r168, %r165, %r166, 28;
	mov.b64 	%rd242, {%r168, %r167};
	shf.l.wrap.b32 	%r169, %r165, %r166, 30;
	shf.l.wrap.b32 	%r170, %r166, %r165, 30;
	mov.b64 	%rd243, {%r170, %r169};
	xor.b64  	%rd244, %rd243, %rd242;
	shf.l.wrap.b32 	%r171, %r165, %r166, 25;
	shf.l.wrap.b32 	%r172, %r166, %r165, 25;
	mov.b64 	%rd245, {%r172, %r171};
	xor.b64  	%rd246, %rd244, %rd245;
	xor.b64  	%rd247, %rd230, 7640891576956012808;
	xor.b64  	%rd248, %rd230, %rd209;
	and.b64  	%rd249, %rd248, %rd247;
	xor.b64  	%rd250, %rd249, %rd230;
	add.s64 	%rd251, %rd240, %rd250;
	add.s64 	%rd252, %rd251, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r173,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r174}, %rd241;
	}
	shf.r.wrap.b32 	%r175, %r174, %r173, 14;
	shf.r.wrap.b32 	%r176, %r173, %r174, 14;
	mov.b64 	%rd253, {%r176, %r175};
	shf.r.wrap.b32 	%r177, %r174, %r173, 18;
	shf.r.wrap.b32 	%r178, %r173, %r174, 18;
	mov.b64 	%rd254, {%r178, %r177};
	xor.b64  	%rd255, %rd254, %rd253;
	shf.l.wrap.b32 	%r179, %r173, %r174, 23;
	shf.l.wrap.b32 	%r180, %r174, %r173, 23;
	mov.b64 	%rd256, {%r180, %r179};
	xor.b64  	%rd257, %rd255, %rd256;
	xor.b64  	%rd258, %rd219, %rd207;
	and.b64  	%rd259, %rd241, %rd258;
	xor.b64  	%rd260, %rd259, %rd207;
	add.s64 	%rd261, %rd11, %rd260;
	add.s64 	%rd262, %rd261, %rd257;
	add.s64 	%rd263, %rd262, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd252;
	}
	shf.r.wrap.b32 	%r183, %r182, %r181, 28;
	shf.r.wrap.b32 	%r184, %r181, %r182, 28;
	mov.b64 	%rd264, {%r184, %r183};
	shf.l.wrap.b32 	%r185, %r181, %r182, 30;
	shf.l.wrap.b32 	%r186, %r182, %r181, 30;
	mov.b64 	%rd265, {%r186, %r185};
	xor.b64  	%rd266, %rd265, %rd264;
	shf.l.wrap.b32 	%r187, %r181, %r182, 25;
	shf.l.wrap.b32 	%r188, %r182, %r181, 25;
	mov.b64 	%rd267, {%r188, %r187};
	xor.b64  	%rd268, %rd266, %rd267;
	xor.b64  	%rd269, %rd252, %rd209;
	xor.b64  	%rd270, %rd252, %rd230;
	and.b64  	%rd271, %rd270, %rd269;
	xor.b64  	%rd272, %rd271, %rd252;
	add.s64 	%rd273, %rd262, %rd272;
	add.s64 	%rd274, %rd273, %rd268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r189,%dummy}, %rd263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r190}, %rd263;
	}
	shf.r.wrap.b32 	%r191, %r190, %r189, 14;
	shf.r.wrap.b32 	%r192, %r189, %r190, 14;
	mov.b64 	%rd275, {%r192, %r191};
	shf.r.wrap.b32 	%r193, %r190, %r189, 18;
	shf.r.wrap.b32 	%r194, %r189, %r190, 18;
	mov.b64 	%rd276, {%r194, %r193};
	xor.b64  	%rd277, %rd276, %rd275;
	shf.l.wrap.b32 	%r195, %r189, %r190, 23;
	shf.l.wrap.b32 	%r196, %r190, %r189, 23;
	mov.b64 	%rd278, {%r196, %r195};
	xor.b64  	%rd279, %rd277, %rd278;
	xor.b64  	%rd280, %rd241, %rd219;
	and.b64  	%rd281, %rd263, %rd280;
	xor.b64  	%rd282, %rd281, %rd219;
	add.s64 	%rd283, %rd207, %rd2;
	add.s64 	%rd284, %rd283, %rd2679;
	add.s64 	%rd285, %rd284, %rd282;
	add.s64 	%rd286, %rd285, %rd279;
	add.s64 	%rd287, %rd286, %rd209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r197,%dummy}, %rd274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd274;
	}
	shf.r.wrap.b32 	%r199, %r198, %r197, 28;
	shf.r.wrap.b32 	%r200, %r197, %r198, 28;
	mov.b64 	%rd288, {%r200, %r199};
	shf.l.wrap.b32 	%r201, %r197, %r198, 30;
	shf.l.wrap.b32 	%r202, %r198, %r197, 30;
	mov.b64 	%rd289, {%r202, %r201};
	xor.b64  	%rd290, %rd289, %rd288;
	shf.l.wrap.b32 	%r203, %r197, %r198, 25;
	shf.l.wrap.b32 	%r204, %r198, %r197, 25;
	mov.b64 	%rd291, {%r204, %r203};
	xor.b64  	%rd292, %rd290, %rd291;
	xor.b64  	%rd293, %rd274, %rd230;
	xor.b64  	%rd294, %rd274, %rd252;
	and.b64  	%rd295, %rd294, %rd293;
	xor.b64  	%rd296, %rd295, %rd274;
	add.s64 	%rd297, %rd286, %rd296;
	add.s64 	%rd298, %rd297, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r205,%dummy}, %rd287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r206}, %rd287;
	}
	shf.r.wrap.b32 	%r207, %r206, %r205, 14;
	shf.r.wrap.b32 	%r208, %r205, %r206, 14;
	mov.b64 	%rd299, {%r208, %r207};
	shf.r.wrap.b32 	%r209, %r206, %r205, 18;
	shf.r.wrap.b32 	%r210, %r205, %r206, 18;
	mov.b64 	%rd300, {%r210, %r209};
	xor.b64  	%rd301, %rd300, %rd299;
	shf.l.wrap.b32 	%r211, %r205, %r206, 23;
	shf.l.wrap.b32 	%r212, %r206, %r205, 23;
	mov.b64 	%rd302, {%r212, %r211};
	xor.b64  	%rd303, %rd301, %rd302;
	xor.b64  	%rd304, %rd263, %rd241;
	and.b64  	%rd305, %rd287, %rd304;
	xor.b64  	%rd306, %rd305, %rd241;
	add.s64 	%rd307, %rd219, %rd3;
	add.s64 	%rd308, %rd307, %rd2680;
	add.s64 	%rd309, %rd308, %rd306;
	add.s64 	%rd310, %rd309, %rd303;
	add.s64 	%rd311, %rd310, %rd230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r213,%dummy}, %rd298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd298;
	}
	shf.r.wrap.b32 	%r215, %r214, %r213, 28;
	shf.r.wrap.b32 	%r216, %r213, %r214, 28;
	mov.b64 	%rd312, {%r216, %r215};
	shf.l.wrap.b32 	%r217, %r213, %r214, 30;
	shf.l.wrap.b32 	%r218, %r214, %r213, 30;
	mov.b64 	%rd313, {%r218, %r217};
	xor.b64  	%rd314, %rd313, %rd312;
	shf.l.wrap.b32 	%r219, %r213, %r214, 25;
	shf.l.wrap.b32 	%r220, %r214, %r213, 25;
	mov.b64 	%rd315, {%r220, %r219};
	xor.b64  	%rd316, %rd314, %rd315;
	xor.b64  	%rd317, %rd298, %rd252;
	xor.b64  	%rd318, %rd298, %rd274;
	and.b64  	%rd319, %rd318, %rd317;
	xor.b64  	%rd320, %rd319, %rd298;
	add.s64 	%rd321, %rd310, %rd320;
	add.s64 	%rd322, %rd321, %rd316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r221,%dummy}, %rd311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r222}, %rd311;
	}
	shf.r.wrap.b32 	%r223, %r222, %r221, 14;
	shf.r.wrap.b32 	%r224, %r221, %r222, 14;
	mov.b64 	%rd323, {%r224, %r223};
	shf.r.wrap.b32 	%r225, %r222, %r221, 18;
	shf.r.wrap.b32 	%r226, %r221, %r222, 18;
	mov.b64 	%rd324, {%r226, %r225};
	xor.b64  	%rd325, %rd324, %rd323;
	shf.l.wrap.b32 	%r227, %r221, %r222, 23;
	shf.l.wrap.b32 	%r228, %r222, %r221, 23;
	mov.b64 	%rd326, {%r228, %r227};
	xor.b64  	%rd327, %rd325, %rd326;
	xor.b64  	%rd328, %rd287, %rd263;
	and.b64  	%rd329, %rd311, %rd328;
	xor.b64  	%rd330, %rd329, %rd263;
	add.s64 	%rd331, %rd241, %rd4;
	add.s64 	%rd332, %rd331, %rd2681;
	add.s64 	%rd333, %rd332, %rd330;
	add.s64 	%rd334, %rd333, %rd327;
	add.s64 	%rd335, %rd334, %rd252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r229,%dummy}, %rd322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r230}, %rd322;
	}
	shf.r.wrap.b32 	%r231, %r230, %r229, 28;
	shf.r.wrap.b32 	%r232, %r229, %r230, 28;
	mov.b64 	%rd336, {%r232, %r231};
	shf.l.wrap.b32 	%r233, %r229, %r230, 30;
	shf.l.wrap.b32 	%r234, %r230, %r229, 30;
	mov.b64 	%rd337, {%r234, %r233};
	xor.b64  	%rd338, %rd337, %rd336;
	shf.l.wrap.b32 	%r235, %r229, %r230, 25;
	shf.l.wrap.b32 	%r236, %r230, %r229, 25;
	mov.b64 	%rd339, {%r236, %r235};
	xor.b64  	%rd340, %rd338, %rd339;
	xor.b64  	%rd341, %rd322, %rd274;
	xor.b64  	%rd342, %rd322, %rd298;
	and.b64  	%rd343, %rd342, %rd341;
	xor.b64  	%rd344, %rd343, %rd322;
	add.s64 	%rd345, %rd334, %rd344;
	add.s64 	%rd346, %rd345, %rd340;
	add.s64 	%rd347, %rd2682, %rd263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r237,%dummy}, %rd335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r238}, %rd335;
	}
	shf.r.wrap.b32 	%r239, %r238, %r237, 14;
	shf.r.wrap.b32 	%r240, %r237, %r238, 14;
	mov.b64 	%rd348, {%r240, %r239};
	shf.r.wrap.b32 	%r241, %r238, %r237, 18;
	shf.r.wrap.b32 	%r242, %r237, %r238, 18;
	mov.b64 	%rd349, {%r242, %r241};
	xor.b64  	%rd350, %rd349, %rd348;
	shf.l.wrap.b32 	%r243, %r237, %r238, 23;
	shf.l.wrap.b32 	%r244, %r238, %r237, 23;
	mov.b64 	%rd351, {%r244, %r243};
	xor.b64  	%rd352, %rd350, %rd351;
	xor.b64  	%rd353, %rd311, %rd287;
	and.b64  	%rd354, %rd335, %rd353;
	xor.b64  	%rd355, %rd354, %rd287;
	add.s64 	%rd356, %rd347, %rd355;
	add.s64 	%rd357, %rd356, %rd352;
	add.s64 	%rd358, %rd357, %rd274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd346;
	}
	shf.r.wrap.b32 	%r247, %r246, %r245, 28;
	shf.r.wrap.b32 	%r248, %r245, %r246, 28;
	mov.b64 	%rd359, {%r248, %r247};
	shf.l.wrap.b32 	%r249, %r245, %r246, 30;
	shf.l.wrap.b32 	%r250, %r246, %r245, 30;
	mov.b64 	%rd360, {%r250, %r249};
	xor.b64  	%rd361, %rd360, %rd359;
	shf.l.wrap.b32 	%r251, %r245, %r246, 25;
	shf.l.wrap.b32 	%r252, %r246, %r245, 25;
	mov.b64 	%rd362, {%r252, %r251};
	xor.b64  	%rd363, %rd361, %rd362;
	xor.b64  	%rd364, %rd346, %rd298;
	xor.b64  	%rd365, %rd346, %rd322;
	and.b64  	%rd366, %rd365, %rd364;
	xor.b64  	%rd367, %rd366, %rd346;
	add.s64 	%rd368, %rd357, %rd367;
	add.s64 	%rd369, %rd368, %rd363;
	add.s64 	%rd370, %rd2683, %rd287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r253,%dummy}, %rd358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r254}, %rd358;
	}
	shf.r.wrap.b32 	%r255, %r254, %r253, 14;
	shf.r.wrap.b32 	%r256, %r253, %r254, 14;
	mov.b64 	%rd371, {%r256, %r255};
	shf.r.wrap.b32 	%r257, %r254, %r253, 18;
	shf.r.wrap.b32 	%r258, %r253, %r254, 18;
	mov.b64 	%rd372, {%r258, %r257};
	xor.b64  	%rd373, %rd372, %rd371;
	shf.l.wrap.b32 	%r259, %r253, %r254, 23;
	shf.l.wrap.b32 	%r260, %r254, %r253, 23;
	mov.b64 	%rd374, {%r260, %r259};
	xor.b64  	%rd375, %rd373, %rd374;
	xor.b64  	%rd376, %rd335, %rd311;
	and.b64  	%rd377, %rd358, %rd376;
	xor.b64  	%rd378, %rd377, %rd311;
	add.s64 	%rd379, %rd370, %rd378;
	add.s64 	%rd380, %rd379, %rd375;
	add.s64 	%rd381, %rd380, %rd298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r261,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r262}, %rd369;
	}
	shf.r.wrap.b32 	%r263, %r262, %r261, 28;
	shf.r.wrap.b32 	%r264, %r261, %r262, 28;
	mov.b64 	%rd382, {%r264, %r263};
	shf.l.wrap.b32 	%r265, %r261, %r262, 30;
	shf.l.wrap.b32 	%r266, %r262, %r261, 30;
	mov.b64 	%rd383, {%r266, %r265};
	xor.b64  	%rd384, %rd383, %rd382;
	shf.l.wrap.b32 	%r267, %r261, %r262, 25;
	shf.l.wrap.b32 	%r268, %r262, %r261, 25;
	mov.b64 	%rd385, {%r268, %r267};
	xor.b64  	%rd386, %rd384, %rd385;
	xor.b64  	%rd387, %rd369, %rd322;
	xor.b64  	%rd388, %rd369, %rd346;
	and.b64  	%rd389, %rd388, %rd387;
	xor.b64  	%rd390, %rd389, %rd369;
	add.s64 	%rd391, %rd380, %rd390;
	add.s64 	%rd392, %rd391, %rd386;
	add.s64 	%rd393, %rd2684, %rd311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r269,%dummy}, %rd381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r270}, %rd381;
	}
	shf.r.wrap.b32 	%r271, %r270, %r269, 14;
	shf.r.wrap.b32 	%r272, %r269, %r270, 14;
	mov.b64 	%rd394, {%r272, %r271};
	shf.r.wrap.b32 	%r273, %r270, %r269, 18;
	shf.r.wrap.b32 	%r274, %r269, %r270, 18;
	mov.b64 	%rd395, {%r274, %r273};
	xor.b64  	%rd396, %rd395, %rd394;
	shf.l.wrap.b32 	%r275, %r269, %r270, 23;
	shf.l.wrap.b32 	%r276, %r270, %r269, 23;
	mov.b64 	%rd397, {%r276, %r275};
	xor.b64  	%rd398, %rd396, %rd397;
	xor.b64  	%rd399, %rd358, %rd335;
	and.b64  	%rd400, %rd381, %rd399;
	xor.b64  	%rd401, %rd400, %rd335;
	add.s64 	%rd402, %rd393, %rd401;
	add.s64 	%rd403, %rd402, %rd398;
	add.s64 	%rd404, %rd403, %rd322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r278}, %rd392;
	}
	shf.r.wrap.b32 	%r279, %r278, %r277, 28;
	shf.r.wrap.b32 	%r280, %r277, %r278, 28;
	mov.b64 	%rd405, {%r280, %r279};
	shf.l.wrap.b32 	%r281, %r277, %r278, 30;
	shf.l.wrap.b32 	%r282, %r278, %r277, 30;
	mov.b64 	%rd406, {%r282, %r281};
	xor.b64  	%rd407, %rd406, %rd405;
	shf.l.wrap.b32 	%r283, %r277, %r278, 25;
	shf.l.wrap.b32 	%r284, %r278, %r277, 25;
	mov.b64 	%rd408, {%r284, %r283};
	xor.b64  	%rd409, %rd407, %rd408;
	xor.b64  	%rd410, %rd392, %rd346;
	xor.b64  	%rd411, %rd392, %rd369;
	and.b64  	%rd412, %rd411, %rd410;
	xor.b64  	%rd413, %rd412, %rd392;
	add.s64 	%rd414, %rd403, %rd413;
	add.s64 	%rd415, %rd414, %rd409;
	add.s64 	%rd416, %rd2685, %rd335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r286}, %rd404;
	}
	shf.r.wrap.b32 	%r287, %r286, %r285, 14;
	shf.r.wrap.b32 	%r288, %r285, %r286, 14;
	mov.b64 	%rd417, {%r288, %r287};
	shf.r.wrap.b32 	%r289, %r286, %r285, 18;
	shf.r.wrap.b32 	%r290, %r285, %r286, 18;
	mov.b64 	%rd418, {%r290, %r289};
	xor.b64  	%rd419, %rd418, %rd417;
	shf.l.wrap.b32 	%r291, %r285, %r286, 23;
	shf.l.wrap.b32 	%r292, %r286, %r285, 23;
	mov.b64 	%rd420, {%r292, %r291};
	xor.b64  	%rd421, %rd419, %rd420;
	xor.b64  	%rd422, %rd381, %rd358;
	and.b64  	%rd423, %rd404, %rd422;
	xor.b64  	%rd424, %rd423, %rd358;
	add.s64 	%rd425, %rd416, %rd424;
	add.s64 	%rd426, %rd425, %rd421;
	add.s64 	%rd427, %rd426, %rd346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd415;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 28;
	shf.r.wrap.b32 	%r296, %r293, %r294, 28;
	mov.b64 	%rd428, {%r296, %r295};
	shf.l.wrap.b32 	%r297, %r293, %r294, 30;
	shf.l.wrap.b32 	%r298, %r294, %r293, 30;
	mov.b64 	%rd429, {%r298, %r297};
	xor.b64  	%rd430, %rd429, %rd428;
	shf.l.wrap.b32 	%r299, %r293, %r294, 25;
	shf.l.wrap.b32 	%r300, %r294, %r293, 25;
	mov.b64 	%rd431, {%r300, %r299};
	xor.b64  	%rd432, %rd430, %rd431;
	xor.b64  	%rd433, %rd415, %rd369;
	xor.b64  	%rd434, %rd415, %rd392;
	and.b64  	%rd435, %rd434, %rd433;
	xor.b64  	%rd436, %rd435, %rd415;
	add.s64 	%rd437, %rd426, %rd436;
	add.s64 	%rd438, %rd437, %rd432;
	add.s64 	%rd439, %rd2686, %rd358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd427;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 14;
	shf.r.wrap.b32 	%r304, %r301, %r302, 14;
	mov.b64 	%rd440, {%r304, %r303};
	shf.r.wrap.b32 	%r305, %r302, %r301, 18;
	shf.r.wrap.b32 	%r306, %r301, %r302, 18;
	mov.b64 	%rd441, {%r306, %r305};
	xor.b64  	%rd442, %rd441, %rd440;
	shf.l.wrap.b32 	%r307, %r301, %r302, 23;
	shf.l.wrap.b32 	%r308, %r302, %r301, 23;
	mov.b64 	%rd443, {%r308, %r307};
	xor.b64  	%rd444, %rd442, %rd443;
	xor.b64  	%rd445, %rd404, %rd381;
	and.b64  	%rd446, %rd427, %rd445;
	xor.b64  	%rd447, %rd446, %rd381;
	add.s64 	%rd448, %rd439, %rd447;
	add.s64 	%rd449, %rd448, %rd444;
	add.s64 	%rd450, %rd449, %rd369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r309,%dummy}, %rd438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r310}, %rd438;
	}
	shf.r.wrap.b32 	%r311, %r310, %r309, 28;
	shf.r.wrap.b32 	%r312, %r309, %r310, 28;
	mov.b64 	%rd451, {%r312, %r311};
	shf.l.wrap.b32 	%r313, %r309, %r310, 30;
	shf.l.wrap.b32 	%r314, %r310, %r309, 30;
	mov.b64 	%rd452, {%r314, %r313};
	xor.b64  	%rd453, %rd452, %rd451;
	shf.l.wrap.b32 	%r315, %r309, %r310, 25;
	shf.l.wrap.b32 	%r316, %r310, %r309, 25;
	mov.b64 	%rd454, {%r316, %r315};
	xor.b64  	%rd455, %rd453, %rd454;
	xor.b64  	%rd456, %rd438, %rd392;
	xor.b64  	%rd457, %rd438, %rd415;
	and.b64  	%rd458, %rd457, %rd456;
	xor.b64  	%rd459, %rd458, %rd438;
	add.s64 	%rd460, %rd449, %rd459;
	add.s64 	%rd461, %rd460, %rd455;
	add.s64 	%rd462, %rd2687, %rd381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r317,%dummy}, %rd450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r318}, %rd450;
	}
	shf.r.wrap.b32 	%r319, %r318, %r317, 14;
	shf.r.wrap.b32 	%r320, %r317, %r318, 14;
	mov.b64 	%rd463, {%r320, %r319};
	shf.r.wrap.b32 	%r321, %r318, %r317, 18;
	shf.r.wrap.b32 	%r322, %r317, %r318, 18;
	mov.b64 	%rd464, {%r322, %r321};
	xor.b64  	%rd465, %rd464, %rd463;
	shf.l.wrap.b32 	%r323, %r317, %r318, 23;
	shf.l.wrap.b32 	%r324, %r318, %r317, 23;
	mov.b64 	%rd466, {%r324, %r323};
	xor.b64  	%rd467, %rd465, %rd466;
	xor.b64  	%rd468, %rd427, %rd404;
	and.b64  	%rd469, %rd450, %rd468;
	xor.b64  	%rd470, %rd469, %rd404;
	add.s64 	%rd471, %rd462, %rd470;
	add.s64 	%rd472, %rd471, %rd467;
	add.s64 	%rd473, %rd472, %rd392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd461;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 28;
	shf.r.wrap.b32 	%r328, %r325, %r326, 28;
	mov.b64 	%rd474, {%r328, %r327};
	shf.l.wrap.b32 	%r329, %r325, %r326, 30;
	shf.l.wrap.b32 	%r330, %r326, %r325, 30;
	mov.b64 	%rd475, {%r330, %r329};
	xor.b64  	%rd476, %rd475, %rd474;
	shf.l.wrap.b32 	%r331, %r325, %r326, 25;
	shf.l.wrap.b32 	%r332, %r326, %r325, 25;
	mov.b64 	%rd477, {%r332, %r331};
	xor.b64  	%rd478, %rd476, %rd477;
	xor.b64  	%rd479, %rd461, %rd415;
	xor.b64  	%rd480, %rd461, %rd438;
	and.b64  	%rd481, %rd480, %rd479;
	xor.b64  	%rd482, %rd481, %rd461;
	add.s64 	%rd483, %rd472, %rd482;
	add.s64 	%rd484, %rd483, %rd478;
	add.s64 	%rd485, %rd2688, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r333,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r334}, %rd473;
	}
	shf.r.wrap.b32 	%r335, %r334, %r333, 14;
	shf.r.wrap.b32 	%r336, %r333, %r334, 14;
	mov.b64 	%rd486, {%r336, %r335};
	shf.r.wrap.b32 	%r337, %r334, %r333, 18;
	shf.r.wrap.b32 	%r338, %r333, %r334, 18;
	mov.b64 	%rd487, {%r338, %r337};
	xor.b64  	%rd488, %rd487, %rd486;
	shf.l.wrap.b32 	%r339, %r333, %r334, 23;
	shf.l.wrap.b32 	%r340, %r334, %r333, 23;
	mov.b64 	%rd489, {%r340, %r339};
	xor.b64  	%rd490, %rd488, %rd489;
	xor.b64  	%rd491, %rd450, %rd427;
	and.b64  	%rd492, %rd473, %rd491;
	xor.b64  	%rd493, %rd492, %rd427;
	add.s64 	%rd494, %rd485, %rd493;
	add.s64 	%rd495, %rd494, %rd490;
	add.s64 	%rd496, %rd495, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd484;
	}
	shf.r.wrap.b32 	%r343, %r342, %r341, 28;
	shf.r.wrap.b32 	%r344, %r341, %r342, 28;
	mov.b64 	%rd497, {%r344, %r343};
	shf.l.wrap.b32 	%r345, %r341, %r342, 30;
	shf.l.wrap.b32 	%r346, %r342, %r341, 30;
	mov.b64 	%rd498, {%r346, %r345};
	xor.b64  	%rd499, %rd498, %rd497;
	shf.l.wrap.b32 	%r347, %r341, %r342, 25;
	shf.l.wrap.b32 	%r348, %r342, %r341, 25;
	mov.b64 	%rd500, {%r348, %r347};
	xor.b64  	%rd501, %rd499, %rd500;
	xor.b64  	%rd502, %rd484, %rd438;
	xor.b64  	%rd503, %rd484, %rd461;
	and.b64  	%rd504, %rd503, %rd502;
	xor.b64  	%rd505, %rd504, %rd484;
	add.s64 	%rd506, %rd495, %rd505;
	add.s64 	%rd507, %rd506, %rd501;
	add.s64 	%rd508, %rd2689, %rd427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r350}, %rd496;
	}
	shf.r.wrap.b32 	%r351, %r350, %r349, 14;
	shf.r.wrap.b32 	%r352, %r349, %r350, 14;
	mov.b64 	%rd509, {%r352, %r351};
	shf.r.wrap.b32 	%r353, %r350, %r349, 18;
	shf.r.wrap.b32 	%r354, %r349, %r350, 18;
	mov.b64 	%rd510, {%r354, %r353};
	xor.b64  	%rd511, %rd510, %rd509;
	shf.l.wrap.b32 	%r355, %r349, %r350, 23;
	shf.l.wrap.b32 	%r356, %r350, %r349, 23;
	mov.b64 	%rd512, {%r356, %r355};
	xor.b64  	%rd513, %rd511, %rd512;
	xor.b64  	%rd514, %rd473, %rd450;
	and.b64  	%rd515, %rd496, %rd514;
	xor.b64  	%rd516, %rd515, %rd450;
	add.s64 	%rd517, %rd508, %rd516;
	add.s64 	%rd518, %rd517, %rd513;
	add.s64 	%rd519, %rd518, %rd438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r357,%dummy}, %rd507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r358}, %rd507;
	}
	shf.r.wrap.b32 	%r359, %r358, %r357, 28;
	shf.r.wrap.b32 	%r360, %r357, %r358, 28;
	mov.b64 	%rd520, {%r360, %r359};
	shf.l.wrap.b32 	%r361, %r357, %r358, 30;
	shf.l.wrap.b32 	%r362, %r358, %r357, 30;
	mov.b64 	%rd521, {%r362, %r361};
	xor.b64  	%rd522, %rd521, %rd520;
	shf.l.wrap.b32 	%r363, %r357, %r358, 25;
	shf.l.wrap.b32 	%r364, %r358, %r357, 25;
	mov.b64 	%rd523, {%r364, %r363};
	xor.b64  	%rd524, %rd522, %rd523;
	xor.b64  	%rd525, %rd507, %rd461;
	xor.b64  	%rd526, %rd507, %rd484;
	and.b64  	%rd527, %rd526, %rd525;
	xor.b64  	%rd528, %rd527, %rd507;
	add.s64 	%rd529, %rd518, %rd528;
	add.s64 	%rd530, %rd529, %rd524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r365,%dummy}, %rd519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r366}, %rd519;
	}
	shf.r.wrap.b32 	%r367, %r366, %r365, 14;
	shf.r.wrap.b32 	%r368, %r365, %r366, 14;
	mov.b64 	%rd531, {%r368, %r367};
	shf.r.wrap.b32 	%r369, %r366, %r365, 18;
	shf.r.wrap.b32 	%r370, %r365, %r366, 18;
	mov.b64 	%rd532, {%r370, %r369};
	xor.b64  	%rd533, %rd532, %rd531;
	shf.l.wrap.b32 	%r371, %r365, %r366, 23;
	shf.l.wrap.b32 	%r372, %r366, %r365, 23;
	mov.b64 	%rd534, {%r372, %r371};
	xor.b64  	%rd535, %rd533, %rd534;
	xor.b64  	%rd536, %rd496, %rd473;
	and.b64  	%rd537, %rd519, %rd536;
	xor.b64  	%rd538, %rd537, %rd473;
	add.s64 	%rd539, %rd450, %rd5;
	add.s64 	%rd540, %rd539, %rd2690;
	add.s64 	%rd541, %rd540, %rd538;
	add.s64 	%rd542, %rd541, %rd535;
	add.s64 	%rd543, %rd542, %rd461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd530;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 28;
	shf.r.wrap.b32 	%r376, %r373, %r374, 28;
	mov.b64 	%rd544, {%r376, %r375};
	shf.l.wrap.b32 	%r377, %r373, %r374, 30;
	shf.l.wrap.b32 	%r378, %r374, %r373, 30;
	mov.b64 	%rd545, {%r378, %r377};
	xor.b64  	%rd546, %rd545, %rd544;
	shf.l.wrap.b32 	%r379, %r373, %r374, 25;
	shf.l.wrap.b32 	%r380, %r374, %r373, 25;
	mov.b64 	%rd547, {%r380, %r379};
	xor.b64  	%rd548, %rd546, %rd547;
	xor.b64  	%rd549, %rd530, %rd484;
	xor.b64  	%rd550, %rd530, %rd507;
	and.b64  	%rd551, %rd550, %rd549;
	xor.b64  	%rd552, %rd551, %rd530;
	add.s64 	%rd553, %rd542, %rd552;
	add.s64 	%rd554, %rd553, %rd548;
	add.s64 	%rd555, %rd204, %rd25;
	add.s64 	%rd556, %rd555, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r381,%dummy}, %rd556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r382}, %rd556;
	}
	shf.r.wrap.b32 	%r383, %r382, %r381, 19;
	shf.r.wrap.b32 	%r384, %r381, %r382, 19;
	mov.b64 	%rd557, {%r384, %r383};
	shf.l.wrap.b32 	%r385, %r381, %r382, 3;
	shf.l.wrap.b32 	%r386, %r382, %r381, 3;
	mov.b64 	%rd558, {%r386, %r385};
	shr.u64 	%rd559, %rd556, 6;
	xor.b64  	%rd560, %rd557, %rd559;
	xor.b64  	%rd561, %rd560, %rd558;
	add.s64 	%rd562, %rd1, %rd561;
	add.s64 	%rd563, %rd562, %rd28;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd563;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 19;
	shf.r.wrap.b32 	%r390, %r387, %r388, 19;
	mov.b64 	%rd564, {%r390, %r389};
	shf.l.wrap.b32 	%r391, %r387, %r388, 3;
	shf.l.wrap.b32 	%r392, %r388, %r387, 3;
	mov.b64 	%rd565, {%r392, %r391};
	shr.u64 	%rd566, %rd563, 6;
	xor.b64  	%rd567, %rd564, %rd566;
	xor.b64  	%rd568, %rd567, %rd565;
	add.s64 	%rd569, %rd2, %rd568;
	add.s64 	%rd570, %rd569, %rd30;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r393,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r394}, %rd570;
	}
	shf.r.wrap.b32 	%r395, %r394, %r393, 19;
	shf.r.wrap.b32 	%r396, %r393, %r394, 19;
	mov.b64 	%rd571, {%r396, %r395};
	shf.l.wrap.b32 	%r397, %r393, %r394, 3;
	shf.l.wrap.b32 	%r398, %r394, %r393, 3;
	mov.b64 	%rd572, {%r398, %r397};
	shr.u64 	%rd573, %rd570, 6;
	xor.b64  	%rd574, %rd571, %rd573;
	xor.b64  	%rd575, %rd574, %rd572;
	add.s64 	%rd576, %rd2691, %rd575;
	add.s64 	%rd577, %rd576, %rd32;
	add.s64 	%rd578, %rd556, %rd34;
	add.s64 	%rd579, %rd578, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r399,%dummy}, %rd577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r400}, %rd577;
	}
	shf.r.wrap.b32 	%r401, %r400, %r399, 19;
	shf.r.wrap.b32 	%r402, %r399, %r400, 19;
	mov.b64 	%rd580, {%r402, %r401};
	shf.l.wrap.b32 	%r403, %r399, %r400, 3;
	shf.l.wrap.b32 	%r404, %r400, %r399, 3;
	mov.b64 	%rd581, {%r404, %r403};
	shr.u64 	%rd582, %rd577, 6;
	xor.b64  	%rd583, %rd580, %rd582;
	xor.b64  	%rd584, %rd583, %rd581;
	add.s64 	%rd585, %rd27, %rd584;
	add.s64 	%rd586, %rd585, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r405,%dummy}, %rd579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r406}, %rd579;
	}
	shf.r.wrap.b32 	%r407, %r406, %r405, 19;
	shf.r.wrap.b32 	%r408, %r405, %r406, 19;
	mov.b64 	%rd587, {%r408, %r407};
	shf.l.wrap.b32 	%r409, %r405, %r406, 3;
	shf.l.wrap.b32 	%r410, %r406, %r405, 3;
	mov.b64 	%rd588, {%r410, %r409};
	shr.u64 	%rd589, %rd579, 6;
	xor.b64  	%rd590, %rd587, %rd589;
	xor.b64  	%rd591, %rd590, %rd588;
	add.s64 	%rd592, %rd563, %rd591;
	add.s64 	%rd593, %rd592, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r411,%dummy}, %rd586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r412}, %rd586;
	}
	shf.r.wrap.b32 	%r413, %r412, %r411, 19;
	shf.r.wrap.b32 	%r414, %r411, %r412, 19;
	mov.b64 	%rd594, {%r414, %r413};
	shf.l.wrap.b32 	%r415, %r411, %r412, 3;
	shf.l.wrap.b32 	%r416, %r412, %r411, 3;
	mov.b64 	%rd595, {%r416, %r415};
	shr.u64 	%rd596, %rd586, 6;
	xor.b64  	%rd597, %rd594, %rd596;
	xor.b64  	%rd598, %rd597, %rd595;
	add.s64 	%rd599, %rd29, %rd598;
	add.s64 	%rd600, %rd599, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r417,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r418}, %rd593;
	}
	shf.r.wrap.b32 	%r419, %r418, %r417, 19;
	shf.r.wrap.b32 	%r420, %r417, %r418, 19;
	mov.b64 	%rd601, {%r420, %r419};
	shf.l.wrap.b32 	%r421, %r417, %r418, 3;
	shf.l.wrap.b32 	%r422, %r418, %r417, 3;
	mov.b64 	%rd602, {%r422, %r421};
	shr.u64 	%rd603, %rd593, 6;
	xor.b64  	%rd604, %rd601, %rd603;
	xor.b64  	%rd605, %rd604, %rd602;
	add.s64 	%rd606, %rd570, %rd605;
	add.s64 	%rd607, %rd606, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r423,%dummy}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r424}, %rd600;
	}
	shf.r.wrap.b32 	%r425, %r424, %r423, 19;
	shf.r.wrap.b32 	%r426, %r423, %r424, 19;
	mov.b64 	%rd608, {%r426, %r425};
	shf.l.wrap.b32 	%r427, %r423, %r424, 3;
	shf.l.wrap.b32 	%r428, %r424, %r423, 3;
	mov.b64 	%rd609, {%r428, %r427};
	shr.u64 	%rd610, %rd600, 6;
	xor.b64  	%rd611, %rd608, %rd610;
	xor.b64  	%rd612, %rd611, %rd609;
	add.s64 	%rd613, %rd31, %rd612;
	add.s64 	%rd614, %rd613, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r429,%dummy}, %rd607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r430}, %rd607;
	}
	shf.r.wrap.b32 	%r431, %r430, %r429, 19;
	shf.r.wrap.b32 	%r432, %r429, %r430, 19;
	mov.b64 	%rd615, {%r432, %r431};
	shf.l.wrap.b32 	%r433, %r429, %r430, 3;
	shf.l.wrap.b32 	%r434, %r430, %r429, 3;
	mov.b64 	%rd616, {%r434, %r433};
	shr.u64 	%rd617, %rd607, 6;
	xor.b64  	%rd618, %rd615, %rd617;
	xor.b64  	%rd619, %rd618, %rd616;
	add.s64 	%rd620, %rd577, %rd619;
	add.s64 	%rd621, %rd620, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd614;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 19;
	shf.r.wrap.b32 	%r438, %r435, %r436, 19;
	mov.b64 	%rd622, {%r438, %r437};
	shf.l.wrap.b32 	%r439, %r435, %r436, 3;
	shf.l.wrap.b32 	%r440, %r436, %r435, 3;
	mov.b64 	%rd623, {%r440, %r439};
	shr.u64 	%rd624, %rd614, 6;
	xor.b64  	%rd625, %rd622, %rd624;
	xor.b64  	%rd626, %rd625, %rd623;
	add.s64 	%rd627, %rd579, %rd626;
	add.s64 	%rd628, %rd627, %rd35;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd621;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 19;
	shf.r.wrap.b32 	%r444, %r441, %r442, 19;
	mov.b64 	%rd629, {%r444, %r443};
	shf.l.wrap.b32 	%r445, %r441, %r442, 3;
	shf.l.wrap.b32 	%r446, %r442, %r441, 3;
	mov.b64 	%rd630, {%r446, %r445};
	shr.u64 	%rd631, %rd621, 6;
	xor.b64  	%rd632, %rd629, %rd631;
	xor.b64  	%rd633, %rd632, %rd630;
	shf.r.wrap.b32 	%r447, %r382, %r381, 1;
	shf.r.wrap.b32 	%r448, %r381, %r382, 1;
	mov.b64 	%rd634, {%r448, %r447};
	shf.r.wrap.b32 	%r449, %r382, %r381, 8;
	shf.r.wrap.b32 	%r450, %r381, %r382, 8;
	mov.b64 	%rd635, {%r450, %r449};
	shr.u64 	%rd636, %rd556, 7;
	xor.b64  	%rd637, %rd634, %rd636;
	xor.b64  	%rd638, %rd637, %rd635;
	add.s64 	%rd639, %rd586, %rd5;
	add.s64 	%rd640, %rd639, %rd633;
	add.s64 	%rd641, %rd640, %rd638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd543;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 14;
	shf.r.wrap.b32 	%r454, %r451, %r452, 14;
	mov.b64 	%rd642, {%r454, %r453};
	shf.r.wrap.b32 	%r455, %r452, %r451, 18;
	shf.r.wrap.b32 	%r456, %r451, %r452, 18;
	mov.b64 	%rd643, {%r456, %r455};
	xor.b64  	%rd644, %rd643, %rd642;
	shf.l.wrap.b32 	%r457, %r451, %r452, 23;
	shf.l.wrap.b32 	%r458, %r452, %r451, 23;
	mov.b64 	%rd645, {%r458, %r457};
	xor.b64  	%rd646, %rd644, %rd645;
	xor.b64  	%rd647, %rd496, %rd519;
	and.b64  	%rd648, %rd647, %rd543;
	xor.b64  	%rd649, %rd648, %rd496;
	add.s64 	%rd650, %rd649, %rd473;
	add.s64 	%rd651, %rd650, %rd556;
	add.s64 	%rd652, %rd651, %rd2692;
	add.s64 	%rd653, %rd652, %rd646;
	add.s64 	%rd654, %rd653, %rd484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd554;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 28;
	shf.r.wrap.b32 	%r462, %r459, %r460, 28;
	mov.b64 	%rd655, {%r462, %r461};
	shf.l.wrap.b32 	%r463, %r459, %r460, 30;
	shf.l.wrap.b32 	%r464, %r460, %r459, 30;
	mov.b64 	%rd656, {%r464, %r463};
	xor.b64  	%rd657, %rd656, %rd655;
	shf.l.wrap.b32 	%r465, %r459, %r460, 25;
	shf.l.wrap.b32 	%r466, %r460, %r459, 25;
	mov.b64 	%rd658, {%r466, %r465};
	xor.b64  	%rd659, %rd657, %rd658;
	xor.b64  	%rd660, %rd554, %rd507;
	xor.b64  	%rd661, %rd554, %rd530;
	and.b64  	%rd662, %rd661, %rd660;
	xor.b64  	%rd663, %rd662, %rd554;
	add.s64 	%rd664, %rd653, %rd663;
	add.s64 	%rd665, %rd664, %rd659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r467,%dummy}, %rd654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r468}, %rd654;
	}
	shf.r.wrap.b32 	%r469, %r468, %r467, 14;
	shf.r.wrap.b32 	%r470, %r467, %r468, 14;
	mov.b64 	%rd666, {%r470, %r469};
	shf.r.wrap.b32 	%r471, %r468, %r467, 18;
	shf.r.wrap.b32 	%r472, %r467, %r468, 18;
	mov.b64 	%rd667, {%r472, %r471};
	xor.b64  	%rd668, %rd667, %rd666;
	shf.l.wrap.b32 	%r473, %r467, %r468, 23;
	shf.l.wrap.b32 	%r474, %r468, %r467, 23;
	mov.b64 	%rd669, {%r474, %r473};
	xor.b64  	%rd670, %rd668, %rd669;
	xor.b64  	%rd671, %rd519, %rd543;
	and.b64  	%rd672, %rd654, %rd671;
	xor.b64  	%rd673, %rd672, %rd519;
	add.s64 	%rd674, %rd27, %rd496;
	add.s64 	%rd675, %rd674, %rd2693;
	add.s64 	%rd676, %rd675, %rd673;
	add.s64 	%rd677, %rd676, %rd670;
	add.s64 	%rd678, %rd677, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd665;
	}
	shf.r.wrap.b32 	%r477, %r476, %r475, 28;
	shf.r.wrap.b32 	%r478, %r475, %r476, 28;
	mov.b64 	%rd679, {%r478, %r477};
	shf.l.wrap.b32 	%r479, %r475, %r476, 30;
	shf.l.wrap.b32 	%r480, %r476, %r475, 30;
	mov.b64 	%rd680, {%r480, %r479};
	xor.b64  	%rd681, %rd680, %rd679;
	shf.l.wrap.b32 	%r481, %r475, %r476, 25;
	shf.l.wrap.b32 	%r482, %r476, %r475, 25;
	mov.b64 	%rd682, {%r482, %r481};
	xor.b64  	%rd683, %rd681, %rd682;
	xor.b64  	%rd684, %rd665, %rd530;
	xor.b64  	%rd685, %rd665, %rd554;
	and.b64  	%rd686, %rd685, %rd684;
	xor.b64  	%rd687, %rd686, %rd665;
	add.s64 	%rd688, %rd677, %rd687;
	add.s64 	%rd689, %rd688, %rd683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd678;
	}
	shf.r.wrap.b32 	%r485, %r484, %r483, 14;
	shf.r.wrap.b32 	%r486, %r483, %r484, 14;
	mov.b64 	%rd690, {%r486, %r485};
	shf.r.wrap.b32 	%r487, %r484, %r483, 18;
	shf.r.wrap.b32 	%r488, %r483, %r484, 18;
	mov.b64 	%rd691, {%r488, %r487};
	xor.b64  	%rd692, %rd691, %rd690;
	shf.l.wrap.b32 	%r489, %r483, %r484, 23;
	shf.l.wrap.b32 	%r490, %r484, %r483, 23;
	mov.b64 	%rd693, {%r490, %r489};
	xor.b64  	%rd694, %rd692, %rd693;
	xor.b64  	%rd695, %rd654, %rd543;
	and.b64  	%rd696, %rd678, %rd695;
	xor.b64  	%rd697, %rd696, %rd543;
	add.s64 	%rd698, %rd563, %rd519;
	add.s64 	%rd699, %rd698, %rd2694;
	add.s64 	%rd700, %rd699, %rd697;
	add.s64 	%rd701, %rd700, %rd694;
	add.s64 	%rd702, %rd701, %rd530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd689;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 28;
	shf.r.wrap.b32 	%r494, %r491, %r492, 28;
	mov.b64 	%rd703, {%r494, %r493};
	shf.l.wrap.b32 	%r495, %r491, %r492, 30;
	shf.l.wrap.b32 	%r496, %r492, %r491, 30;
	mov.b64 	%rd704, {%r496, %r495};
	xor.b64  	%rd705, %rd704, %rd703;
	shf.l.wrap.b32 	%r497, %r491, %r492, 25;
	shf.l.wrap.b32 	%r498, %r492, %r491, 25;
	mov.b64 	%rd706, {%r498, %r497};
	xor.b64  	%rd707, %rd705, %rd706;
	xor.b64  	%rd708, %rd689, %rd554;
	xor.b64  	%rd709, %rd689, %rd665;
	and.b64  	%rd710, %rd709, %rd708;
	xor.b64  	%rd711, %rd710, %rd689;
	add.s64 	%rd712, %rd701, %rd711;
	add.s64 	%rd713, %rd712, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r499,%dummy}, %rd702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r500}, %rd702;
	}
	shf.r.wrap.b32 	%r501, %r500, %r499, 14;
	shf.r.wrap.b32 	%r502, %r499, %r500, 14;
	mov.b64 	%rd714, {%r502, %r501};
	shf.r.wrap.b32 	%r503, %r500, %r499, 18;
	shf.r.wrap.b32 	%r504, %r499, %r500, 18;
	mov.b64 	%rd715, {%r504, %r503};
	xor.b64  	%rd716, %rd715, %rd714;
	shf.l.wrap.b32 	%r505, %r499, %r500, 23;
	shf.l.wrap.b32 	%r506, %r500, %r499, 23;
	mov.b64 	%rd717, {%r506, %r505};
	xor.b64  	%rd718, %rd716, %rd717;
	xor.b64  	%rd719, %rd678, %rd654;
	and.b64  	%rd720, %rd702, %rd719;
	xor.b64  	%rd721, %rd720, %rd654;
	add.s64 	%rd722, %rd29, %rd543;
	add.s64 	%rd723, %rd722, %rd2695;
	add.s64 	%rd724, %rd723, %rd721;
	add.s64 	%rd725, %rd724, %rd718;
	add.s64 	%rd726, %rd725, %rd554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r507,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r508}, %rd713;
	}
	shf.r.wrap.b32 	%r509, %r508, %r507, 28;
	shf.r.wrap.b32 	%r510, %r507, %r508, 28;
	mov.b64 	%rd727, {%r510, %r509};
	shf.l.wrap.b32 	%r511, %r507, %r508, 30;
	shf.l.wrap.b32 	%r512, %r508, %r507, 30;
	mov.b64 	%rd728, {%r512, %r511};
	xor.b64  	%rd729, %rd728, %rd727;
	shf.l.wrap.b32 	%r513, %r507, %r508, 25;
	shf.l.wrap.b32 	%r514, %r508, %r507, 25;
	mov.b64 	%rd730, {%r514, %r513};
	xor.b64  	%rd731, %rd729, %rd730;
	xor.b64  	%rd732, %rd713, %rd665;
	xor.b64  	%rd733, %rd713, %rd689;
	and.b64  	%rd734, %rd733, %rd732;
	xor.b64  	%rd735, %rd734, %rd713;
	add.s64 	%rd736, %rd725, %rd735;
	add.s64 	%rd737, %rd736, %rd731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r515,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r516}, %rd726;
	}
	shf.r.wrap.b32 	%r517, %r516, %r515, 14;
	shf.r.wrap.b32 	%r518, %r515, %r516, 14;
	mov.b64 	%rd738, {%r518, %r517};
	shf.r.wrap.b32 	%r519, %r516, %r515, 18;
	shf.r.wrap.b32 	%r520, %r515, %r516, 18;
	mov.b64 	%rd739, {%r520, %r519};
	xor.b64  	%rd740, %rd739, %rd738;
	shf.l.wrap.b32 	%r521, %r515, %r516, 23;
	shf.l.wrap.b32 	%r522, %r516, %r515, 23;
	mov.b64 	%rd741, {%r522, %r521};
	xor.b64  	%rd742, %rd740, %rd741;
	xor.b64  	%rd743, %rd702, %rd678;
	and.b64  	%rd744, %rd726, %rd743;
	xor.b64  	%rd745, %rd744, %rd678;
	add.s64 	%rd746, %rd654, %rd570;
	add.s64 	%rd747, %rd746, %rd2696;
	add.s64 	%rd748, %rd747, %rd745;
	add.s64 	%rd749, %rd748, %rd742;
	add.s64 	%rd750, %rd749, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r523,%dummy}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd737;
	}
	shf.r.wrap.b32 	%r525, %r524, %r523, 28;
	shf.r.wrap.b32 	%r526, %r523, %r524, 28;
	mov.b64 	%rd751, {%r526, %r525};
	shf.l.wrap.b32 	%r527, %r523, %r524, 30;
	shf.l.wrap.b32 	%r528, %r524, %r523, 30;
	mov.b64 	%rd752, {%r528, %r527};
	xor.b64  	%rd753, %rd752, %rd751;
	shf.l.wrap.b32 	%r529, %r523, %r524, 25;
	shf.l.wrap.b32 	%r530, %r524, %r523, 25;
	mov.b64 	%rd754, {%r530, %r529};
	xor.b64  	%rd755, %rd753, %rd754;
	xor.b64  	%rd756, %rd737, %rd689;
	xor.b64  	%rd757, %rd737, %rd713;
	and.b64  	%rd758, %rd757, %rd756;
	xor.b64  	%rd759, %rd758, %rd737;
	add.s64 	%rd760, %rd749, %rd759;
	add.s64 	%rd761, %rd760, %rd755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd750;
	}
	shf.r.wrap.b32 	%r533, %r532, %r531, 14;
	shf.r.wrap.b32 	%r534, %r531, %r532, 14;
	mov.b64 	%rd762, {%r534, %r533};
	shf.r.wrap.b32 	%r535, %r532, %r531, 18;
	shf.r.wrap.b32 	%r536, %r531, %r532, 18;
	mov.b64 	%rd763, {%r536, %r535};
	xor.b64  	%rd764, %rd763, %rd762;
	shf.l.wrap.b32 	%r537, %r531, %r532, 23;
	shf.l.wrap.b32 	%r538, %r532, %r531, 23;
	mov.b64 	%rd765, {%r538, %r537};
	xor.b64  	%rd766, %rd764, %rd765;
	xor.b64  	%rd767, %rd726, %rd702;
	and.b64  	%rd768, %rd750, %rd767;
	xor.b64  	%rd769, %rd768, %rd702;
	add.s64 	%rd770, %rd678, %rd31;
	add.s64 	%rd771, %rd770, %rd2697;
	add.s64 	%rd772, %rd771, %rd769;
	add.s64 	%rd773, %rd772, %rd766;
	add.s64 	%rd774, %rd773, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd761;
	}
	shf.r.wrap.b32 	%r541, %r540, %r539, 28;
	shf.r.wrap.b32 	%r542, %r539, %r540, 28;
	mov.b64 	%rd775, {%r542, %r541};
	shf.l.wrap.b32 	%r543, %r539, %r540, 30;
	shf.l.wrap.b32 	%r544, %r540, %r539, 30;
	mov.b64 	%rd776, {%r544, %r543};
	xor.b64  	%rd777, %rd776, %rd775;
	shf.l.wrap.b32 	%r545, %r539, %r540, 25;
	shf.l.wrap.b32 	%r546, %r540, %r539, 25;
	mov.b64 	%rd778, {%r546, %r545};
	xor.b64  	%rd779, %rd777, %rd778;
	xor.b64  	%rd780, %rd761, %rd713;
	xor.b64  	%rd781, %rd761, %rd737;
	and.b64  	%rd782, %rd781, %rd780;
	xor.b64  	%rd783, %rd782, %rd761;
	add.s64 	%rd784, %rd773, %rd783;
	add.s64 	%rd785, %rd784, %rd779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd774;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 14;
	shf.r.wrap.b32 	%r550, %r547, %r548, 14;
	mov.b64 	%rd786, {%r550, %r549};
	shf.r.wrap.b32 	%r551, %r548, %r547, 18;
	shf.r.wrap.b32 	%r552, %r547, %r548, 18;
	mov.b64 	%rd787, {%r552, %r551};
	xor.b64  	%rd788, %rd787, %rd786;
	shf.l.wrap.b32 	%r553, %r547, %r548, 23;
	shf.l.wrap.b32 	%r554, %r548, %r547, 23;
	mov.b64 	%rd789, {%r554, %r553};
	xor.b64  	%rd790, %rd788, %rd789;
	xor.b64  	%rd791, %rd750, %rd726;
	and.b64  	%rd792, %rd774, %rd791;
	xor.b64  	%rd793, %rd792, %rd726;
	add.s64 	%rd794, %rd702, %rd577;
	add.s64 	%rd795, %rd794, %rd2698;
	add.s64 	%rd796, %rd795, %rd793;
	add.s64 	%rd797, %rd796, %rd790;
	add.s64 	%rd798, %rd797, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r555,%dummy}, %rd785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r556}, %rd785;
	}
	shf.r.wrap.b32 	%r557, %r556, %r555, 28;
	shf.r.wrap.b32 	%r558, %r555, %r556, 28;
	mov.b64 	%rd799, {%r558, %r557};
	shf.l.wrap.b32 	%r559, %r555, %r556, 30;
	shf.l.wrap.b32 	%r560, %r556, %r555, 30;
	mov.b64 	%rd800, {%r560, %r559};
	xor.b64  	%rd801, %rd800, %rd799;
	shf.l.wrap.b32 	%r561, %r555, %r556, 25;
	shf.l.wrap.b32 	%r562, %r556, %r555, 25;
	mov.b64 	%rd802, {%r562, %r561};
	xor.b64  	%rd803, %rd801, %rd802;
	xor.b64  	%rd804, %rd785, %rd737;
	xor.b64  	%rd805, %rd785, %rd761;
	and.b64  	%rd806, %rd805, %rd804;
	xor.b64  	%rd807, %rd806, %rd785;
	add.s64 	%rd808, %rd797, %rd807;
	add.s64 	%rd809, %rd808, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r563,%dummy}, %rd798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd798;
	}
	shf.r.wrap.b32 	%r565, %r564, %r563, 14;
	shf.r.wrap.b32 	%r566, %r563, %r564, 14;
	mov.b64 	%rd810, {%r566, %r565};
	shf.r.wrap.b32 	%r567, %r564, %r563, 18;
	shf.r.wrap.b32 	%r568, %r563, %r564, 18;
	mov.b64 	%rd811, {%r568, %r567};
	xor.b64  	%rd812, %rd811, %rd810;
	shf.l.wrap.b32 	%r569, %r563, %r564, 23;
	shf.l.wrap.b32 	%r570, %r564, %r563, 23;
	mov.b64 	%rd813, {%r570, %r569};
	xor.b64  	%rd814, %rd812, %rd813;
	xor.b64  	%rd815, %rd774, %rd750;
	and.b64  	%rd816, %rd798, %rd815;
	xor.b64  	%rd817, %rd816, %rd750;
	add.s64 	%rd818, %rd726, %rd579;
	add.s64 	%rd819, %rd818, %rd2699;
	add.s64 	%rd820, %rd819, %rd817;
	add.s64 	%rd821, %rd820, %rd814;
	add.s64 	%rd822, %rd821, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r571,%dummy}, %rd809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd809;
	}
	shf.r.wrap.b32 	%r573, %r572, %r571, 28;
	shf.r.wrap.b32 	%r574, %r571, %r572, 28;
	mov.b64 	%rd823, {%r574, %r573};
	shf.l.wrap.b32 	%r575, %r571, %r572, 30;
	shf.l.wrap.b32 	%r576, %r572, %r571, 30;
	mov.b64 	%rd824, {%r576, %r575};
	xor.b64  	%rd825, %rd824, %rd823;
	shf.l.wrap.b32 	%r577, %r571, %r572, 25;
	shf.l.wrap.b32 	%r578, %r572, %r571, 25;
	mov.b64 	%rd826, {%r578, %r577};
	xor.b64  	%rd827, %rd825, %rd826;
	xor.b64  	%rd828, %rd809, %rd761;
	xor.b64  	%rd829, %rd809, %rd785;
	and.b64  	%rd830, %rd829, %rd828;
	xor.b64  	%rd831, %rd830, %rd809;
	add.s64 	%rd832, %rd821, %rd831;
	add.s64 	%rd833, %rd832, %rd827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r579,%dummy}, %rd822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd822;
	}
	shf.r.wrap.b32 	%r581, %r580, %r579, 14;
	shf.r.wrap.b32 	%r582, %r579, %r580, 14;
	mov.b64 	%rd834, {%r582, %r581};
	shf.r.wrap.b32 	%r583, %r580, %r579, 18;
	shf.r.wrap.b32 	%r584, %r579, %r580, 18;
	mov.b64 	%rd835, {%r584, %r583};
	xor.b64  	%rd836, %rd835, %rd834;
	shf.l.wrap.b32 	%r585, %r579, %r580, 23;
	shf.l.wrap.b32 	%r586, %r580, %r579, 23;
	mov.b64 	%rd837, {%r586, %r585};
	xor.b64  	%rd838, %rd836, %rd837;
	xor.b64  	%rd839, %rd798, %rd774;
	and.b64  	%rd840, %rd822, %rd839;
	xor.b64  	%rd841, %rd840, %rd774;
	add.s64 	%rd842, %rd750, %rd586;
	add.s64 	%rd843, %rd842, %rd2700;
	add.s64 	%rd844, %rd843, %rd841;
	add.s64 	%rd845, %rd844, %rd838;
	add.s64 	%rd846, %rd845, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd833;
	}
	shf.r.wrap.b32 	%r589, %r588, %r587, 28;
	shf.r.wrap.b32 	%r590, %r587, %r588, 28;
	mov.b64 	%rd847, {%r590, %r589};
	shf.l.wrap.b32 	%r591, %r587, %r588, 30;
	shf.l.wrap.b32 	%r592, %r588, %r587, 30;
	mov.b64 	%rd848, {%r592, %r591};
	xor.b64  	%rd849, %rd848, %rd847;
	shf.l.wrap.b32 	%r593, %r587, %r588, 25;
	shf.l.wrap.b32 	%r594, %r588, %r587, 25;
	mov.b64 	%rd850, {%r594, %r593};
	xor.b64  	%rd851, %rd849, %rd850;
	xor.b64  	%rd852, %rd833, %rd785;
	xor.b64  	%rd853, %rd833, %rd809;
	and.b64  	%rd854, %rd853, %rd852;
	xor.b64  	%rd855, %rd854, %rd833;
	add.s64 	%rd856, %rd845, %rd855;
	add.s64 	%rd857, %rd856, %rd851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd846;
	}
	shf.r.wrap.b32 	%r597, %r596, %r595, 14;
	shf.r.wrap.b32 	%r598, %r595, %r596, 14;
	mov.b64 	%rd858, {%r598, %r597};
	shf.r.wrap.b32 	%r599, %r596, %r595, 18;
	shf.r.wrap.b32 	%r600, %r595, %r596, 18;
	mov.b64 	%rd859, {%r600, %r599};
	xor.b64  	%rd860, %rd859, %rd858;
	shf.l.wrap.b32 	%r601, %r595, %r596, 23;
	shf.l.wrap.b32 	%r602, %r596, %r595, 23;
	mov.b64 	%rd861, {%r602, %r601};
	xor.b64  	%rd862, %rd860, %rd861;
	xor.b64  	%rd863, %rd822, %rd798;
	and.b64  	%rd864, %rd846, %rd863;
	xor.b64  	%rd865, %rd864, %rd798;
	add.s64 	%rd866, %rd774, %rd593;
	add.s64 	%rd867, %rd866, %rd2701;
	add.s64 	%rd868, %rd867, %rd865;
	add.s64 	%rd869, %rd868, %rd862;
	add.s64 	%rd870, %rd869, %rd785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd857;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 28;
	shf.r.wrap.b32 	%r606, %r603, %r604, 28;
	mov.b64 	%rd871, {%r606, %r605};
	shf.l.wrap.b32 	%r607, %r603, %r604, 30;
	shf.l.wrap.b32 	%r608, %r604, %r603, 30;
	mov.b64 	%rd872, {%r608, %r607};
	xor.b64  	%rd873, %rd872, %rd871;
	shf.l.wrap.b32 	%r609, %r603, %r604, 25;
	shf.l.wrap.b32 	%r610, %r604, %r603, 25;
	mov.b64 	%rd874, {%r610, %r609};
	xor.b64  	%rd875, %rd873, %rd874;
	xor.b64  	%rd876, %rd857, %rd809;
	xor.b64  	%rd877, %rd857, %rd833;
	and.b64  	%rd878, %rd877, %rd876;
	xor.b64  	%rd879, %rd878, %rd857;
	add.s64 	%rd880, %rd869, %rd879;
	add.s64 	%rd881, %rd880, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd870;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 14;
	shf.r.wrap.b32 	%r614, %r611, %r612, 14;
	mov.b64 	%rd882, {%r614, %r613};
	shf.r.wrap.b32 	%r615, %r612, %r611, 18;
	shf.r.wrap.b32 	%r616, %r611, %r612, 18;
	mov.b64 	%rd883, {%r616, %r615};
	xor.b64  	%rd884, %rd883, %rd882;
	shf.l.wrap.b32 	%r617, %r611, %r612, 23;
	shf.l.wrap.b32 	%r618, %r612, %r611, 23;
	mov.b64 	%rd885, {%r618, %r617};
	xor.b64  	%rd886, %rd884, %rd885;
	xor.b64  	%rd887, %rd846, %rd822;
	and.b64  	%rd888, %rd870, %rd887;
	xor.b64  	%rd889, %rd888, %rd822;
	add.s64 	%rd890, %rd798, %rd600;
	add.s64 	%rd891, %rd890, %rd2702;
	add.s64 	%rd892, %rd891, %rd889;
	add.s64 	%rd893, %rd892, %rd886;
	add.s64 	%rd894, %rd893, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r619,%dummy}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r620}, %rd881;
	}
	shf.r.wrap.b32 	%r621, %r620, %r619, 28;
	shf.r.wrap.b32 	%r622, %r619, %r620, 28;
	mov.b64 	%rd895, {%r622, %r621};
	shf.l.wrap.b32 	%r623, %r619, %r620, 30;
	shf.l.wrap.b32 	%r624, %r620, %r619, 30;
	mov.b64 	%rd896, {%r624, %r623};
	xor.b64  	%rd897, %rd896, %rd895;
	shf.l.wrap.b32 	%r625, %r619, %r620, 25;
	shf.l.wrap.b32 	%r626, %r620, %r619, 25;
	mov.b64 	%rd898, {%r626, %r625};
	xor.b64  	%rd899, %rd897, %rd898;
	xor.b64  	%rd900, %rd881, %rd833;
	xor.b64  	%rd901, %rd881, %rd857;
	and.b64  	%rd902, %rd901, %rd900;
	xor.b64  	%rd903, %rd902, %rd881;
	add.s64 	%rd904, %rd893, %rd903;
	add.s64 	%rd905, %rd904, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r627,%dummy}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r628}, %rd894;
	}
	shf.r.wrap.b32 	%r629, %r628, %r627, 14;
	shf.r.wrap.b32 	%r630, %r627, %r628, 14;
	mov.b64 	%rd906, {%r630, %r629};
	shf.r.wrap.b32 	%r631, %r628, %r627, 18;
	shf.r.wrap.b32 	%r632, %r627, %r628, 18;
	mov.b64 	%rd907, {%r632, %r631};
	xor.b64  	%rd908, %rd907, %rd906;
	shf.l.wrap.b32 	%r633, %r627, %r628, 23;
	shf.l.wrap.b32 	%r634, %r628, %r627, 23;
	mov.b64 	%rd909, {%r634, %r633};
	xor.b64  	%rd910, %rd908, %rd909;
	xor.b64  	%rd911, %rd870, %rd846;
	and.b64  	%rd912, %rd894, %rd911;
	xor.b64  	%rd913, %rd912, %rd846;
	add.s64 	%rd914, %rd822, %rd607;
	add.s64 	%rd915, %rd914, %rd2703;
	add.s64 	%rd916, %rd915, %rd913;
	add.s64 	%rd917, %rd916, %rd910;
	add.s64 	%rd918, %rd917, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd905;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 28;
	shf.r.wrap.b32 	%r638, %r635, %r636, 28;
	mov.b64 	%rd919, {%r638, %r637};
	shf.l.wrap.b32 	%r639, %r635, %r636, 30;
	shf.l.wrap.b32 	%r640, %r636, %r635, 30;
	mov.b64 	%rd920, {%r640, %r639};
	xor.b64  	%rd921, %rd920, %rd919;
	shf.l.wrap.b32 	%r641, %r635, %r636, 25;
	shf.l.wrap.b32 	%r642, %r636, %r635, 25;
	mov.b64 	%rd922, {%r642, %r641};
	xor.b64  	%rd923, %rd921, %rd922;
	xor.b64  	%rd924, %rd905, %rd857;
	xor.b64  	%rd925, %rd905, %rd881;
	and.b64  	%rd926, %rd925, %rd924;
	xor.b64  	%rd927, %rd926, %rd905;
	add.s64 	%rd928, %rd917, %rd927;
	add.s64 	%rd929, %rd928, %rd923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r643,%dummy}, %rd918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r644}, %rd918;
	}
	shf.r.wrap.b32 	%r645, %r644, %r643, 14;
	shf.r.wrap.b32 	%r646, %r643, %r644, 14;
	mov.b64 	%rd930, {%r646, %r645};
	shf.r.wrap.b32 	%r647, %r644, %r643, 18;
	shf.r.wrap.b32 	%r648, %r643, %r644, 18;
	mov.b64 	%rd931, {%r648, %r647};
	xor.b64  	%rd932, %rd931, %rd930;
	shf.l.wrap.b32 	%r649, %r643, %r644, 23;
	shf.l.wrap.b32 	%r650, %r644, %r643, 23;
	mov.b64 	%rd933, {%r650, %r649};
	xor.b64  	%rd934, %rd932, %rd933;
	xor.b64  	%rd935, %rd894, %rd870;
	and.b64  	%rd936, %rd918, %rd935;
	xor.b64  	%rd937, %rd936, %rd870;
	add.s64 	%rd938, %rd846, %rd614;
	add.s64 	%rd939, %rd938, %rd2704;
	add.s64 	%rd940, %rd939, %rd937;
	add.s64 	%rd941, %rd940, %rd934;
	add.s64 	%rd942, %rd941, %rd857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r651,%dummy}, %rd929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r652}, %rd929;
	}
	shf.r.wrap.b32 	%r653, %r652, %r651, 28;
	shf.r.wrap.b32 	%r654, %r651, %r652, 28;
	mov.b64 	%rd943, {%r654, %r653};
	shf.l.wrap.b32 	%r655, %r651, %r652, 30;
	shf.l.wrap.b32 	%r656, %r652, %r651, 30;
	mov.b64 	%rd944, {%r656, %r655};
	xor.b64  	%rd945, %rd944, %rd943;
	shf.l.wrap.b32 	%r657, %r651, %r652, 25;
	shf.l.wrap.b32 	%r658, %r652, %r651, 25;
	mov.b64 	%rd946, {%r658, %r657};
	xor.b64  	%rd947, %rd945, %rd946;
	xor.b64  	%rd948, %rd929, %rd881;
	xor.b64  	%rd949, %rd929, %rd905;
	and.b64  	%rd950, %rd949, %rd948;
	xor.b64  	%rd951, %rd950, %rd929;
	add.s64 	%rd952, %rd941, %rd951;
	add.s64 	%rd953, %rd952, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd942;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 14;
	shf.r.wrap.b32 	%r662, %r659, %r660, 14;
	mov.b64 	%rd954, {%r662, %r661};
	shf.r.wrap.b32 	%r663, %r660, %r659, 18;
	shf.r.wrap.b32 	%r664, %r659, %r660, 18;
	mov.b64 	%rd955, {%r664, %r663};
	xor.b64  	%rd956, %rd955, %rd954;
	shf.l.wrap.b32 	%r665, %r659, %r660, 23;
	shf.l.wrap.b32 	%r666, %r660, %r659, 23;
	mov.b64 	%rd957, {%r666, %r665};
	xor.b64  	%rd958, %rd956, %rd957;
	xor.b64  	%rd959, %rd918, %rd894;
	and.b64  	%rd960, %rd942, %rd959;
	xor.b64  	%rd961, %rd960, %rd894;
	add.s64 	%rd962, %rd870, %rd621;
	add.s64 	%rd963, %rd962, %rd2705;
	add.s64 	%rd964, %rd963, %rd961;
	add.s64 	%rd965, %rd964, %rd958;
	add.s64 	%rd966, %rd965, %rd881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r667,%dummy}, %rd953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r668}, %rd953;
	}
	shf.r.wrap.b32 	%r669, %r668, %r667, 28;
	shf.r.wrap.b32 	%r670, %r667, %r668, 28;
	mov.b64 	%rd967, {%r670, %r669};
	shf.l.wrap.b32 	%r671, %r667, %r668, 30;
	shf.l.wrap.b32 	%r672, %r668, %r667, 30;
	mov.b64 	%rd968, {%r672, %r671};
	xor.b64  	%rd969, %rd968, %rd967;
	shf.l.wrap.b32 	%r673, %r667, %r668, 25;
	shf.l.wrap.b32 	%r674, %r668, %r667, 25;
	mov.b64 	%rd970, {%r674, %r673};
	xor.b64  	%rd971, %rd969, %rd970;
	xor.b64  	%rd972, %rd953, %rd905;
	xor.b64  	%rd973, %rd953, %rd929;
	and.b64  	%rd974, %rd973, %rd972;
	xor.b64  	%rd975, %rd974, %rd953;
	add.s64 	%rd976, %rd965, %rd975;
	add.s64 	%rd977, %rd976, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r675,%dummy}, %rd966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r676}, %rd966;
	}
	shf.r.wrap.b32 	%r677, %r676, %r675, 14;
	shf.r.wrap.b32 	%r678, %r675, %r676, 14;
	mov.b64 	%rd978, {%r678, %r677};
	shf.r.wrap.b32 	%r679, %r676, %r675, 18;
	shf.r.wrap.b32 	%r680, %r675, %r676, 18;
	mov.b64 	%rd979, {%r680, %r679};
	xor.b64  	%rd980, %rd979, %rd978;
	shf.l.wrap.b32 	%r681, %r675, %r676, 23;
	shf.l.wrap.b32 	%r682, %r676, %r675, 23;
	mov.b64 	%rd981, {%r682, %r681};
	xor.b64  	%rd982, %rd980, %rd981;
	xor.b64  	%rd983, %rd942, %rd918;
	and.b64  	%rd984, %rd966, %rd983;
	xor.b64  	%rd985, %rd984, %rd918;
	add.s64 	%rd986, %rd894, %rd628;
	add.s64 	%rd987, %rd986, %rd2706;
	add.s64 	%rd988, %rd987, %rd985;
	add.s64 	%rd989, %rd988, %rd982;
	add.s64 	%rd990, %rd989, %rd905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r683,%dummy}, %rd977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r684}, %rd977;
	}
	shf.r.wrap.b32 	%r685, %r684, %r683, 28;
	shf.r.wrap.b32 	%r686, %r683, %r684, 28;
	mov.b64 	%rd991, {%r686, %r685};
	shf.l.wrap.b32 	%r687, %r683, %r684, 30;
	shf.l.wrap.b32 	%r688, %r684, %r683, 30;
	mov.b64 	%rd992, {%r688, %r687};
	xor.b64  	%rd993, %rd992, %rd991;
	shf.l.wrap.b32 	%r689, %r683, %r684, 25;
	shf.l.wrap.b32 	%r690, %r684, %r683, 25;
	mov.b64 	%rd994, {%r690, %r689};
	xor.b64  	%rd995, %rd993, %rd994;
	xor.b64  	%rd996, %rd977, %rd929;
	xor.b64  	%rd997, %rd977, %rd953;
	and.b64  	%rd998, %rd997, %rd996;
	xor.b64  	%rd999, %rd998, %rd977;
	add.s64 	%rd1000, %rd989, %rd999;
	add.s64 	%rd1001, %rd1000, %rd995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r691,%dummy}, %rd990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r692}, %rd990;
	}
	shf.r.wrap.b32 	%r693, %r692, %r691, 14;
	shf.r.wrap.b32 	%r694, %r691, %r692, 14;
	mov.b64 	%rd1002, {%r694, %r693};
	shf.r.wrap.b32 	%r695, %r692, %r691, 18;
	shf.r.wrap.b32 	%r696, %r691, %r692, 18;
	mov.b64 	%rd1003, {%r696, %r695};
	xor.b64  	%rd1004, %rd1003, %rd1002;
	shf.l.wrap.b32 	%r697, %r691, %r692, 23;
	shf.l.wrap.b32 	%r698, %r692, %r691, 23;
	mov.b64 	%rd1005, {%r698, %r697};
	xor.b64  	%rd1006, %rd1004, %rd1005;
	xor.b64  	%rd1007, %rd966, %rd942;
	and.b64  	%rd1008, %rd990, %rd1007;
	xor.b64  	%rd1009, %rd1008, %rd942;
	add.s64 	%rd1010, %rd918, %rd641;
	add.s64 	%rd1011, %rd1010, %rd2707;
	add.s64 	%rd1012, %rd1011, %rd1009;
	add.s64 	%rd1013, %rd1012, %rd1006;
	add.s64 	%rd1014, %rd1013, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r699,%dummy}, %rd1001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd1001;
	}
	shf.r.wrap.b32 	%r701, %r700, %r699, 28;
	shf.r.wrap.b32 	%r702, %r699, %r700, 28;
	mov.b64 	%rd1015, {%r702, %r701};
	shf.l.wrap.b32 	%r703, %r699, %r700, 30;
	shf.l.wrap.b32 	%r704, %r700, %r699, 30;
	mov.b64 	%rd1016, {%r704, %r703};
	xor.b64  	%rd1017, %rd1016, %rd1015;
	shf.l.wrap.b32 	%r705, %r699, %r700, 25;
	shf.l.wrap.b32 	%r706, %r700, %r699, 25;
	mov.b64 	%rd1018, {%r706, %r705};
	xor.b64  	%rd1019, %rd1017, %rd1018;
	xor.b64  	%rd1020, %rd1001, %rd953;
	xor.b64  	%rd1021, %rd1001, %rd977;
	and.b64  	%rd1022, %rd1021, %rd1020;
	xor.b64  	%rd1023, %rd1022, %rd1001;
	add.s64 	%rd1024, %rd1013, %rd1023;
	add.s64 	%rd1025, %rd1024, %rd1019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r707,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r708}, %rd628;
	}
	shf.r.wrap.b32 	%r709, %r708, %r707, 19;
	shf.r.wrap.b32 	%r710, %r707, %r708, 19;
	mov.b64 	%rd1026, {%r710, %r709};
	shf.l.wrap.b32 	%r711, %r707, %r708, 3;
	shf.l.wrap.b32 	%r712, %r708, %r707, 3;
	mov.b64 	%rd1027, {%r712, %r711};
	shr.u64 	%rd1028, %rd628, 6;
	xor.b64  	%rd1029, %rd1026, %rd1028;
	xor.b64  	%rd1030, %rd1029, %rd1027;
	add.s64 	%rd1031, %rd556, %rd593;
	add.s64 	%rd1032, %rd1031, %rd1030;
	add.s64 	%rd1033, %rd1032, %rd52;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd641;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 19;
	shf.r.wrap.b32 	%r716, %r713, %r714, 19;
	mov.b64 	%rd1034, {%r716, %r715};
	shf.l.wrap.b32 	%r717, %r713, %r714, 3;
	shf.l.wrap.b32 	%r718, %r714, %r713, 3;
	mov.b64 	%rd1035, {%r718, %r717};
	shr.u64 	%rd1036, %rd641, 6;
	xor.b64  	%rd1037, %rd1034, %rd1036;
	xor.b64  	%rd1038, %rd1037, %rd1035;
	shf.r.wrap.b32 	%r719, %r388, %r387, 1;
	shf.r.wrap.b32 	%r720, %r387, %r388, 1;
	mov.b64 	%rd1039, {%r720, %r719};
	shf.r.wrap.b32 	%r721, %r388, %r387, 8;
	shf.r.wrap.b32 	%r722, %r387, %r388, 8;
	mov.b64 	%rd1040, {%r722, %r721};
	shr.u64 	%rd1041, %rd563, 7;
	xor.b64  	%rd1042, %rd1039, %rd1041;
	xor.b64  	%rd1043, %rd1042, %rd1040;
	add.s64 	%rd1044, %rd27, %rd600;
	add.s64 	%rd1045, %rd1044, %rd1038;
	add.s64 	%rd1046, %rd1045, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd1033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd1033;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 19;
	shf.r.wrap.b32 	%r726, %r723, %r724, 19;
	mov.b64 	%rd1047, {%r726, %r725};
	shf.l.wrap.b32 	%r727, %r723, %r724, 3;
	shf.l.wrap.b32 	%r728, %r724, %r723, 3;
	mov.b64 	%rd1048, {%r728, %r727};
	shr.u64 	%rd1049, %rd1033, 6;
	xor.b64  	%rd1050, %rd1047, %rd1049;
	xor.b64  	%rd1051, %rd1050, %rd1048;
	add.s64 	%rd1052, %rd563, %rd607;
	add.s64 	%rd1053, %rd1052, %rd1051;
	add.s64 	%rd1054, %rd1053, %rd53;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1046;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 19;
	shf.r.wrap.b32 	%r732, %r729, %r730, 19;
	mov.b64 	%rd1055, {%r732, %r731};
	shf.l.wrap.b32 	%r733, %r729, %r730, 3;
	shf.l.wrap.b32 	%r734, %r730, %r729, 3;
	mov.b64 	%rd1056, {%r734, %r733};
	shr.u64 	%rd1057, %rd1046, 6;
	xor.b64  	%rd1058, %rd1055, %rd1057;
	xor.b64  	%rd1059, %rd1058, %rd1056;
	shf.r.wrap.b32 	%r735, %r394, %r393, 1;
	shf.r.wrap.b32 	%r736, %r393, %r394, 1;
	mov.b64 	%rd1060, {%r736, %r735};
	shf.r.wrap.b32 	%r737, %r394, %r393, 8;
	shf.r.wrap.b32 	%r738, %r393, %r394, 8;
	mov.b64 	%rd1061, {%r738, %r737};
	shr.u64 	%rd1062, %rd570, 7;
	xor.b64  	%rd1063, %rd1060, %rd1062;
	xor.b64  	%rd1064, %rd1063, %rd1061;
	add.s64 	%rd1065, %rd29, %rd614;
	add.s64 	%rd1066, %rd1065, %rd1059;
	add.s64 	%rd1067, %rd1066, %rd1064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd1054;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 19;
	shf.r.wrap.b32 	%r742, %r739, %r740, 19;
	mov.b64 	%rd1068, {%r742, %r741};
	shf.l.wrap.b32 	%r743, %r739, %r740, 3;
	shf.l.wrap.b32 	%r744, %r740, %r739, 3;
	mov.b64 	%rd1069, {%r744, %r743};
	shr.u64 	%rd1070, %rd1054, 6;
	xor.b64  	%rd1071, %rd1068, %rd1070;
	xor.b64  	%rd1072, %rd1071, %rd1069;
	add.s64 	%rd1073, %rd570, %rd621;
	add.s64 	%rd1074, %rd1073, %rd1072;
	add.s64 	%rd1075, %rd1074, %rd54;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r745,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r746}, %rd1067;
	}
	shf.r.wrap.b32 	%r747, %r746, %r745, 19;
	shf.r.wrap.b32 	%r748, %r745, %r746, 19;
	mov.b64 	%rd1076, {%r748, %r747};
	shf.l.wrap.b32 	%r749, %r745, %r746, 3;
	shf.l.wrap.b32 	%r750, %r746, %r745, 3;
	mov.b64 	%rd1077, {%r750, %r749};
	shr.u64 	%rd1078, %rd1067, 6;
	xor.b64  	%rd1079, %rd1076, %rd1078;
	xor.b64  	%rd1080, %rd1079, %rd1077;
	shf.r.wrap.b32 	%r751, %r400, %r399, 1;
	shf.r.wrap.b32 	%r752, %r399, %r400, 1;
	mov.b64 	%rd1081, {%r752, %r751};
	shf.r.wrap.b32 	%r753, %r400, %r399, 8;
	shf.r.wrap.b32 	%r754, %r399, %r400, 8;
	mov.b64 	%rd1082, {%r754, %r753};
	shr.u64 	%rd1083, %rd577, 7;
	xor.b64  	%rd1084, %rd1081, %rd1083;
	xor.b64  	%rd1085, %rd1084, %rd1082;
	add.s64 	%rd1086, %rd31, %rd628;
	add.s64 	%rd1087, %rd1086, %rd1080;
	add.s64 	%rd1088, %rd1087, %rd1085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r755,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r756}, %rd1075;
	}
	shf.r.wrap.b32 	%r757, %r756, %r755, 19;
	shf.r.wrap.b32 	%r758, %r755, %r756, 19;
	mov.b64 	%rd1089, {%r758, %r757};
	shf.l.wrap.b32 	%r759, %r755, %r756, 3;
	shf.l.wrap.b32 	%r760, %r756, %r755, 3;
	mov.b64 	%rd1090, {%r760, %r759};
	shr.u64 	%rd1091, %rd1075, 6;
	xor.b64  	%rd1092, %rd1089, %rd1091;
	xor.b64  	%rd1093, %rd1092, %rd1090;
	shf.r.wrap.b32 	%r761, %r406, %r405, 1;
	shf.r.wrap.b32 	%r762, %r405, %r406, 1;
	mov.b64 	%rd1094, {%r762, %r761};
	shf.r.wrap.b32 	%r763, %r406, %r405, 8;
	shf.r.wrap.b32 	%r764, %r405, %r406, 8;
	mov.b64 	%rd1095, {%r764, %r763};
	shr.u64 	%rd1096, %rd579, 7;
	xor.b64  	%rd1097, %rd1094, %rd1096;
	xor.b64  	%rd1098, %rd1097, %rd1095;
	add.s64 	%rd1099, %rd577, %rd641;
	add.s64 	%rd1100, %rd1099, %rd1093;
	add.s64 	%rd1101, %rd1100, %rd1098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r765,%dummy}, %rd1088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r766}, %rd1088;
	}
	shf.r.wrap.b32 	%r767, %r766, %r765, 19;
	shf.r.wrap.b32 	%r768, %r765, %r766, 19;
	mov.b64 	%rd1102, {%r768, %r767};
	shf.l.wrap.b32 	%r769, %r765, %r766, 3;
	shf.l.wrap.b32 	%r770, %r766, %r765, 3;
	mov.b64 	%rd1103, {%r770, %r769};
	shr.u64 	%rd1104, %rd1088, 6;
	xor.b64  	%rd1105, %rd1102, %rd1104;
	xor.b64  	%rd1106, %rd1105, %rd1103;
	shf.r.wrap.b32 	%r771, %r412, %r411, 1;
	shf.r.wrap.b32 	%r772, %r411, %r412, 1;
	mov.b64 	%rd1107, {%r772, %r771};
	shf.r.wrap.b32 	%r773, %r412, %r411, 8;
	shf.r.wrap.b32 	%r774, %r411, %r412, 8;
	mov.b64 	%rd1108, {%r774, %r773};
	shr.u64 	%rd1109, %rd586, 7;
	xor.b64  	%rd1110, %rd1107, %rd1109;
	xor.b64  	%rd1111, %rd1110, %rd1108;
	add.s64 	%rd1112, %rd1033, %rd579;
	add.s64 	%rd1113, %rd1112, %rd1106;
	add.s64 	%rd1114, %rd1113, %rd1111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r775,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r776}, %rd1101;
	}
	shf.r.wrap.b32 	%r777, %r776, %r775, 19;
	shf.r.wrap.b32 	%r778, %r775, %r776, 19;
	mov.b64 	%rd1115, {%r778, %r777};
	shf.l.wrap.b32 	%r779, %r775, %r776, 3;
	shf.l.wrap.b32 	%r780, %r776, %r775, 3;
	mov.b64 	%rd1116, {%r780, %r779};
	shr.u64 	%rd1117, %rd1101, 6;
	xor.b64  	%rd1118, %rd1115, %rd1117;
	xor.b64  	%rd1119, %rd1118, %rd1116;
	shf.r.wrap.b32 	%r781, %r418, %r417, 1;
	shf.r.wrap.b32 	%r782, %r417, %r418, 1;
	mov.b64 	%rd1120, {%r782, %r781};
	shf.r.wrap.b32 	%r783, %r418, %r417, 8;
	shf.r.wrap.b32 	%r784, %r417, %r418, 8;
	mov.b64 	%rd1121, {%r784, %r783};
	shr.u64 	%rd1122, %rd593, 7;
	xor.b64  	%rd1123, %rd1120, %rd1122;
	xor.b64  	%rd1124, %rd1123, %rd1121;
	add.s64 	%rd1125, %rd1046, %rd586;
	add.s64 	%rd1126, %rd1125, %rd1119;
	add.s64 	%rd1127, %rd1126, %rd1124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r785,%dummy}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r786}, %rd1114;
	}
	shf.r.wrap.b32 	%r787, %r786, %r785, 19;
	shf.r.wrap.b32 	%r788, %r785, %r786, 19;
	mov.b64 	%rd1128, {%r788, %r787};
	shf.l.wrap.b32 	%r789, %r785, %r786, 3;
	shf.l.wrap.b32 	%r790, %r786, %r785, 3;
	mov.b64 	%rd1129, {%r790, %r789};
	shr.u64 	%rd1130, %rd1114, 6;
	xor.b64  	%rd1131, %rd1128, %rd1130;
	xor.b64  	%rd1132, %rd1131, %rd1129;
	shf.r.wrap.b32 	%r791, %r424, %r423, 1;
	shf.r.wrap.b32 	%r792, %r423, %r424, 1;
	mov.b64 	%rd1133, {%r792, %r791};
	shf.r.wrap.b32 	%r793, %r424, %r423, 8;
	shf.r.wrap.b32 	%r794, %r423, %r424, 8;
	mov.b64 	%rd1134, {%r794, %r793};
	shr.u64 	%rd1135, %rd600, 7;
	xor.b64  	%rd1136, %rd1133, %rd1135;
	xor.b64  	%rd1137, %rd1136, %rd1134;
	add.s64 	%rd1138, %rd1054, %rd593;
	add.s64 	%rd1139, %rd1138, %rd1132;
	add.s64 	%rd1140, %rd1139, %rd1137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r795,%dummy}, %rd1127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r796}, %rd1127;
	}
	shf.r.wrap.b32 	%r797, %r796, %r795, 19;
	shf.r.wrap.b32 	%r798, %r795, %r796, 19;
	mov.b64 	%rd1141, {%r798, %r797};
	shf.l.wrap.b32 	%r799, %r795, %r796, 3;
	shf.l.wrap.b32 	%r800, %r796, %r795, 3;
	mov.b64 	%rd1142, {%r800, %r799};
	shr.u64 	%rd1143, %rd1127, 6;
	xor.b64  	%rd1144, %rd1141, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1142;
	shf.r.wrap.b32 	%r801, %r430, %r429, 1;
	shf.r.wrap.b32 	%r802, %r429, %r430, 1;
	mov.b64 	%rd1146, {%r802, %r801};
	shf.r.wrap.b32 	%r803, %r430, %r429, 8;
	shf.r.wrap.b32 	%r804, %r429, %r430, 8;
	mov.b64 	%rd1147, {%r804, %r803};
	shr.u64 	%rd1148, %rd607, 7;
	xor.b64  	%rd1149, %rd1146, %rd1148;
	xor.b64  	%rd1150, %rd1149, %rd1147;
	add.s64 	%rd1151, %rd1067, %rd600;
	add.s64 	%rd1152, %rd1151, %rd1145;
	add.s64 	%rd1153, %rd1152, %rd1150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r805,%dummy}, %rd1140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r806}, %rd1140;
	}
	shf.r.wrap.b32 	%r807, %r806, %r805, 19;
	shf.r.wrap.b32 	%r808, %r805, %r806, 19;
	mov.b64 	%rd1154, {%r808, %r807};
	shf.l.wrap.b32 	%r809, %r805, %r806, 3;
	shf.l.wrap.b32 	%r810, %r806, %r805, 3;
	mov.b64 	%rd1155, {%r810, %r809};
	shr.u64 	%rd1156, %rd1140, 6;
	xor.b64  	%rd1157, %rd1154, %rd1156;
	xor.b64  	%rd1158, %rd1157, %rd1155;
	shf.r.wrap.b32 	%r811, %r436, %r435, 1;
	shf.r.wrap.b32 	%r812, %r435, %r436, 1;
	mov.b64 	%rd1159, {%r812, %r811};
	shf.r.wrap.b32 	%r813, %r436, %r435, 8;
	shf.r.wrap.b32 	%r814, %r435, %r436, 8;
	mov.b64 	%rd1160, {%r814, %r813};
	shr.u64 	%rd1161, %rd614, 7;
	xor.b64  	%rd1162, %rd1159, %rd1161;
	xor.b64  	%rd1163, %rd1162, %rd1160;
	add.s64 	%rd1164, %rd1075, %rd607;
	add.s64 	%rd1165, %rd1164, %rd1158;
	add.s64 	%rd1166, %rd1165, %rd1163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r815,%dummy}, %rd1153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r816}, %rd1153;
	}
	shf.r.wrap.b32 	%r817, %r816, %r815, 19;
	shf.r.wrap.b32 	%r818, %r815, %r816, 19;
	mov.b64 	%rd1167, {%r818, %r817};
	shf.l.wrap.b32 	%r819, %r815, %r816, 3;
	shf.l.wrap.b32 	%r820, %r816, %r815, 3;
	mov.b64 	%rd1168, {%r820, %r819};
	shr.u64 	%rd1169, %rd1153, 6;
	xor.b64  	%rd1170, %rd1167, %rd1169;
	xor.b64  	%rd1171, %rd1170, %rd1168;
	shf.r.wrap.b32 	%r821, %r442, %r441, 1;
	shf.r.wrap.b32 	%r822, %r441, %r442, 1;
	mov.b64 	%rd1172, {%r822, %r821};
	shf.r.wrap.b32 	%r823, %r442, %r441, 8;
	shf.r.wrap.b32 	%r824, %r441, %r442, 8;
	mov.b64 	%rd1173, {%r824, %r823};
	shr.u64 	%rd1174, %rd621, 7;
	xor.b64  	%rd1175, %rd1172, %rd1174;
	xor.b64  	%rd1176, %rd1175, %rd1173;
	add.s64 	%rd1177, %rd1088, %rd614;
	add.s64 	%rd1178, %rd1177, %rd1171;
	add.s64 	%rd1179, %rd1178, %rd1176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r825,%dummy}, %rd1166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r826}, %rd1166;
	}
	shf.r.wrap.b32 	%r827, %r826, %r825, 19;
	shf.r.wrap.b32 	%r828, %r825, %r826, 19;
	mov.b64 	%rd1180, {%r828, %r827};
	shf.l.wrap.b32 	%r829, %r825, %r826, 3;
	shf.l.wrap.b32 	%r830, %r826, %r825, 3;
	mov.b64 	%rd1181, {%r830, %r829};
	shr.u64 	%rd1182, %rd1166, 6;
	xor.b64  	%rd1183, %rd1180, %rd1182;
	xor.b64  	%rd1184, %rd1183, %rd1181;
	shf.r.wrap.b32 	%r831, %r708, %r707, 1;
	shf.r.wrap.b32 	%r832, %r707, %r708, 1;
	mov.b64 	%rd1185, {%r832, %r831};
	shf.r.wrap.b32 	%r833, %r708, %r707, 8;
	shf.r.wrap.b32 	%r834, %r707, %r708, 8;
	mov.b64 	%rd1186, {%r834, %r833};
	shr.u64 	%rd1187, %rd628, 7;
	xor.b64  	%rd1188, %rd1185, %rd1187;
	xor.b64  	%rd1189, %rd1188, %rd1186;
	add.s64 	%rd1190, %rd1101, %rd621;
	add.s64 	%rd1191, %rd1190, %rd1184;
	add.s64 	%rd1192, %rd1191, %rd1189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd1179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd1179;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 19;
	shf.r.wrap.b32 	%r838, %r835, %r836, 19;
	mov.b64 	%rd1193, {%r838, %r837};
	shf.l.wrap.b32 	%r839, %r835, %r836, 3;
	shf.l.wrap.b32 	%r840, %r836, %r835, 3;
	mov.b64 	%rd1194, {%r840, %r839};
	shr.u64 	%rd1195, %rd1179, 6;
	xor.b64  	%rd1196, %rd1193, %rd1195;
	xor.b64  	%rd1197, %rd1196, %rd1194;
	shf.r.wrap.b32 	%r841, %r714, %r713, 1;
	shf.r.wrap.b32 	%r842, %r713, %r714, 1;
	mov.b64 	%rd1198, {%r842, %r841};
	shf.r.wrap.b32 	%r843, %r714, %r713, 8;
	shf.r.wrap.b32 	%r844, %r713, %r714, 8;
	mov.b64 	%rd1199, {%r844, %r843};
	shr.u64 	%rd1200, %rd641, 7;
	xor.b64  	%rd1201, %rd1198, %rd1200;
	xor.b64  	%rd1202, %rd1201, %rd1199;
	add.s64 	%rd1203, %rd1114, %rd628;
	add.s64 	%rd1204, %rd1203, %rd1197;
	add.s64 	%rd1205, %rd1204, %rd1202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r846}, %rd1192;
	}
	shf.r.wrap.b32 	%r847, %r846, %r845, 19;
	shf.r.wrap.b32 	%r848, %r845, %r846, 19;
	mov.b64 	%rd1206, {%r848, %r847};
	shf.l.wrap.b32 	%r849, %r845, %r846, 3;
	shf.l.wrap.b32 	%r850, %r846, %r845, 3;
	mov.b64 	%rd1207, {%r850, %r849};
	shr.u64 	%rd1208, %rd1192, 6;
	xor.b64  	%rd1209, %rd1206, %rd1208;
	xor.b64  	%rd1210, %rd1209, %rd1207;
	shf.r.wrap.b32 	%r851, %r724, %r723, 1;
	shf.r.wrap.b32 	%r852, %r723, %r724, 1;
	mov.b64 	%rd1211, {%r852, %r851};
	shf.r.wrap.b32 	%r853, %r724, %r723, 8;
	shf.r.wrap.b32 	%r854, %r723, %r724, 8;
	mov.b64 	%rd1212, {%r854, %r853};
	shr.u64 	%rd1213, %rd1033, 7;
	xor.b64  	%rd1214, %rd1211, %rd1213;
	xor.b64  	%rd1215, %rd1214, %rd1212;
	add.s64 	%rd1216, %rd1127, %rd641;
	add.s64 	%rd1217, %rd1216, %rd1210;
	add.s64 	%rd1218, %rd1217, %rd1215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r855,%dummy}, %rd1014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r856}, %rd1014;
	}
	shf.r.wrap.b32 	%r857, %r856, %r855, 14;
	shf.r.wrap.b32 	%r858, %r855, %r856, 14;
	mov.b64 	%rd1219, {%r858, %r857};
	shf.r.wrap.b32 	%r859, %r856, %r855, 18;
	shf.r.wrap.b32 	%r860, %r855, %r856, 18;
	mov.b64 	%rd1220, {%r860, %r859};
	xor.b64  	%rd1221, %rd1220, %rd1219;
	shf.l.wrap.b32 	%r861, %r855, %r856, 23;
	shf.l.wrap.b32 	%r862, %r856, %r855, 23;
	mov.b64 	%rd1222, {%r862, %r861};
	xor.b64  	%rd1223, %rd1221, %rd1222;
	xor.b64  	%rd1224, %rd966, %rd990;
	and.b64  	%rd1225, %rd1224, %rd1014;
	xor.b64  	%rd1226, %rd1225, %rd966;
	add.s64 	%rd1227, %rd1226, %rd942;
	add.s64 	%rd1228, %rd1227, %rd1033;
	add.s64 	%rd1229, %rd1228, %rd2708;
	add.s64 	%rd1230, %rd1229, %rd1223;
	add.s64 	%rd1231, %rd1230, %rd953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r863,%dummy}, %rd1025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r864}, %rd1025;
	}
	shf.r.wrap.b32 	%r865, %r864, %r863, 28;
	shf.r.wrap.b32 	%r866, %r863, %r864, 28;
	mov.b64 	%rd1232, {%r866, %r865};
	shf.l.wrap.b32 	%r867, %r863, %r864, 30;
	shf.l.wrap.b32 	%r868, %r864, %r863, 30;
	mov.b64 	%rd1233, {%r868, %r867};
	xor.b64  	%rd1234, %rd1233, %rd1232;
	shf.l.wrap.b32 	%r869, %r863, %r864, 25;
	shf.l.wrap.b32 	%r870, %r864, %r863, 25;
	mov.b64 	%rd1235, {%r870, %r869};
	xor.b64  	%rd1236, %rd1234, %rd1235;
	xor.b64  	%rd1237, %rd1025, %rd977;
	xor.b64  	%rd1238, %rd1025, %rd1001;
	and.b64  	%rd1239, %rd1238, %rd1237;
	xor.b64  	%rd1240, %rd1239, %rd1025;
	add.s64 	%rd1241, %rd1230, %rd1240;
	add.s64 	%rd1242, %rd1241, %rd1236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r871,%dummy}, %rd1231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r872}, %rd1231;
	}
	shf.r.wrap.b32 	%r873, %r872, %r871, 14;
	shf.r.wrap.b32 	%r874, %r871, %r872, 14;
	mov.b64 	%rd1243, {%r874, %r873};
	shf.r.wrap.b32 	%r875, %r872, %r871, 18;
	shf.r.wrap.b32 	%r876, %r871, %r872, 18;
	mov.b64 	%rd1244, {%r876, %r875};
	xor.b64  	%rd1245, %rd1244, %rd1243;
	shf.l.wrap.b32 	%r877, %r871, %r872, 23;
	shf.l.wrap.b32 	%r878, %r872, %r871, 23;
	mov.b64 	%rd1246, {%r878, %r877};
	xor.b64  	%rd1247, %rd1245, %rd1246;
	xor.b64  	%rd1248, %rd990, %rd1014;
	and.b64  	%rd1249, %rd1231, %rd1248;
	xor.b64  	%rd1250, %rd1249, %rd990;
	add.s64 	%rd1251, %rd1046, %rd966;
	add.s64 	%rd1252, %rd1251, %rd2709;
	add.s64 	%rd1253, %rd1252, %rd1250;
	add.s64 	%rd1254, %rd1253, %rd1247;
	add.s64 	%rd1255, %rd1254, %rd977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd1242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd1242;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 28;
	shf.r.wrap.b32 	%r882, %r879, %r880, 28;
	mov.b64 	%rd1256, {%r882, %r881};
	shf.l.wrap.b32 	%r883, %r879, %r880, 30;
	shf.l.wrap.b32 	%r884, %r880, %r879, 30;
	mov.b64 	%rd1257, {%r884, %r883};
	xor.b64  	%rd1258, %rd1257, %rd1256;
	shf.l.wrap.b32 	%r885, %r879, %r880, 25;
	shf.l.wrap.b32 	%r886, %r880, %r879, 25;
	mov.b64 	%rd1259, {%r886, %r885};
	xor.b64  	%rd1260, %rd1258, %rd1259;
	xor.b64  	%rd1261, %rd1242, %rd1001;
	xor.b64  	%rd1262, %rd1242, %rd1025;
	and.b64  	%rd1263, %rd1262, %rd1261;
	xor.b64  	%rd1264, %rd1263, %rd1242;
	add.s64 	%rd1265, %rd1254, %rd1264;
	add.s64 	%rd1266, %rd1265, %rd1260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd1255;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 14;
	shf.r.wrap.b32 	%r890, %r887, %r888, 14;
	mov.b64 	%rd1267, {%r890, %r889};
	shf.r.wrap.b32 	%r891, %r888, %r887, 18;
	shf.r.wrap.b32 	%r892, %r887, %r888, 18;
	mov.b64 	%rd1268, {%r892, %r891};
	xor.b64  	%rd1269, %rd1268, %rd1267;
	shf.l.wrap.b32 	%r893, %r887, %r888, 23;
	shf.l.wrap.b32 	%r894, %r888, %r887, 23;
	mov.b64 	%rd1270, {%r894, %r893};
	xor.b64  	%rd1271, %rd1269, %rd1270;
	xor.b64  	%rd1272, %rd1231, %rd1014;
	and.b64  	%rd1273, %rd1255, %rd1272;
	xor.b64  	%rd1274, %rd1273, %rd1014;
	add.s64 	%rd1275, %rd1054, %rd990;
	add.s64 	%rd1276, %rd1275, %rd2710;
	add.s64 	%rd1277, %rd1276, %rd1274;
	add.s64 	%rd1278, %rd1277, %rd1271;
	add.s64 	%rd1279, %rd1278, %rd1001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd1266;
	}
	shf.r.wrap.b32 	%r897, %r896, %r895, 28;
	shf.r.wrap.b32 	%r898, %r895, %r896, 28;
	mov.b64 	%rd1280, {%r898, %r897};
	shf.l.wrap.b32 	%r899, %r895, %r896, 30;
	shf.l.wrap.b32 	%r900, %r896, %r895, 30;
	mov.b64 	%rd1281, {%r900, %r899};
	xor.b64  	%rd1282, %rd1281, %rd1280;
	shf.l.wrap.b32 	%r901, %r895, %r896, 25;
	shf.l.wrap.b32 	%r902, %r896, %r895, 25;
	mov.b64 	%rd1283, {%r902, %r901};
	xor.b64  	%rd1284, %rd1282, %rd1283;
	xor.b64  	%rd1285, %rd1266, %rd1025;
	xor.b64  	%rd1286, %rd1266, %rd1242;
	and.b64  	%rd1287, %rd1286, %rd1285;
	xor.b64  	%rd1288, %rd1287, %rd1266;
	add.s64 	%rd1289, %rd1278, %rd1288;
	add.s64 	%rd1290, %rd1289, %rd1284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r903,%dummy}, %rd1279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r904}, %rd1279;
	}
	shf.r.wrap.b32 	%r905, %r904, %r903, 14;
	shf.r.wrap.b32 	%r906, %r903, %r904, 14;
	mov.b64 	%rd1291, {%r906, %r905};
	shf.r.wrap.b32 	%r907, %r904, %r903, 18;
	shf.r.wrap.b32 	%r908, %r903, %r904, 18;
	mov.b64 	%rd1292, {%r908, %r907};
	xor.b64  	%rd1293, %rd1292, %rd1291;
	shf.l.wrap.b32 	%r909, %r903, %r904, 23;
	shf.l.wrap.b32 	%r910, %r904, %r903, 23;
	mov.b64 	%rd1294, {%r910, %r909};
	xor.b64  	%rd1295, %rd1293, %rd1294;
	xor.b64  	%rd1296, %rd1255, %rd1231;
	and.b64  	%rd1297, %rd1279, %rd1296;
	xor.b64  	%rd1298, %rd1297, %rd1231;
	add.s64 	%rd1299, %rd1067, %rd1014;
	add.s64 	%rd1300, %rd1299, %rd2711;
	add.s64 	%rd1301, %rd1300, %rd1298;
	add.s64 	%rd1302, %rd1301, %rd1295;
	add.s64 	%rd1303, %rd1302, %rd1025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r911,%dummy}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r912}, %rd1290;
	}
	shf.r.wrap.b32 	%r913, %r912, %r911, 28;
	shf.r.wrap.b32 	%r914, %r911, %r912, 28;
	mov.b64 	%rd1304, {%r914, %r913};
	shf.l.wrap.b32 	%r915, %r911, %r912, 30;
	shf.l.wrap.b32 	%r916, %r912, %r911, 30;
	mov.b64 	%rd1305, {%r916, %r915};
	xor.b64  	%rd1306, %rd1305, %rd1304;
	shf.l.wrap.b32 	%r917, %r911, %r912, 25;
	shf.l.wrap.b32 	%r918, %r912, %r911, 25;
	mov.b64 	%rd1307, {%r918, %r917};
	xor.b64  	%rd1308, %rd1306, %rd1307;
	xor.b64  	%rd1309, %rd1290, %rd1242;
	xor.b64  	%rd1310, %rd1290, %rd1266;
	and.b64  	%rd1311, %rd1310, %rd1309;
	xor.b64  	%rd1312, %rd1311, %rd1290;
	add.s64 	%rd1313, %rd1302, %rd1312;
	add.s64 	%rd1314, %rd1313, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd1303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd1303;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 14;
	shf.r.wrap.b32 	%r922, %r919, %r920, 14;
	mov.b64 	%rd1315, {%r922, %r921};
	shf.r.wrap.b32 	%r923, %r920, %r919, 18;
	shf.r.wrap.b32 	%r924, %r919, %r920, 18;
	mov.b64 	%rd1316, {%r924, %r923};
	xor.b64  	%rd1317, %rd1316, %rd1315;
	shf.l.wrap.b32 	%r925, %r919, %r920, 23;
	shf.l.wrap.b32 	%r926, %r920, %r919, 23;
	mov.b64 	%rd1318, {%r926, %r925};
	xor.b64  	%rd1319, %rd1317, %rd1318;
	xor.b64  	%rd1320, %rd1279, %rd1255;
	and.b64  	%rd1321, %rd1303, %rd1320;
	xor.b64  	%rd1322, %rd1321, %rd1255;
	add.s64 	%rd1323, %rd1231, %rd1075;
	add.s64 	%rd1324, %rd1323, %rd2712;
	add.s64 	%rd1325, %rd1324, %rd1322;
	add.s64 	%rd1326, %rd1325, %rd1319;
	add.s64 	%rd1327, %rd1326, %rd1242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r927,%dummy}, %rd1314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r928}, %rd1314;
	}
	shf.r.wrap.b32 	%r929, %r928, %r927, 28;
	shf.r.wrap.b32 	%r930, %r927, %r928, 28;
	mov.b64 	%rd1328, {%r930, %r929};
	shf.l.wrap.b32 	%r931, %r927, %r928, 30;
	shf.l.wrap.b32 	%r932, %r928, %r927, 30;
	mov.b64 	%rd1329, {%r932, %r931};
	xor.b64  	%rd1330, %rd1329, %rd1328;
	shf.l.wrap.b32 	%r933, %r927, %r928, 25;
	shf.l.wrap.b32 	%r934, %r928, %r927, 25;
	mov.b64 	%rd1331, {%r934, %r933};
	xor.b64  	%rd1332, %rd1330, %rd1331;
	xor.b64  	%rd1333, %rd1314, %rd1266;
	xor.b64  	%rd1334, %rd1314, %rd1290;
	and.b64  	%rd1335, %rd1334, %rd1333;
	xor.b64  	%rd1336, %rd1335, %rd1314;
	add.s64 	%rd1337, %rd1326, %rd1336;
	add.s64 	%rd1338, %rd1337, %rd1332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r935,%dummy}, %rd1327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r936}, %rd1327;
	}
	shf.r.wrap.b32 	%r937, %r936, %r935, 14;
	shf.r.wrap.b32 	%r938, %r935, %r936, 14;
	mov.b64 	%rd1339, {%r938, %r937};
	shf.r.wrap.b32 	%r939, %r936, %r935, 18;
	shf.r.wrap.b32 	%r940, %r935, %r936, 18;
	mov.b64 	%rd1340, {%r940, %r939};
	xor.b64  	%rd1341, %rd1340, %rd1339;
	shf.l.wrap.b32 	%r941, %r935, %r936, 23;
	shf.l.wrap.b32 	%r942, %r936, %r935, 23;
	mov.b64 	%rd1342, {%r942, %r941};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	xor.b64  	%rd1344, %rd1303, %rd1279;
	and.b64  	%rd1345, %rd1327, %rd1344;
	xor.b64  	%rd1346, %rd1345, %rd1279;
	add.s64 	%rd1347, %rd1255, %rd1088;
	add.s64 	%rd1348, %rd1347, %rd2713;
	add.s64 	%rd1349, %rd1348, %rd1346;
	add.s64 	%rd1350, %rd1349, %rd1343;
	add.s64 	%rd1351, %rd1350, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r943,%dummy}, %rd1338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r944}, %rd1338;
	}
	shf.r.wrap.b32 	%r945, %r944, %r943, 28;
	shf.r.wrap.b32 	%r946, %r943, %r944, 28;
	mov.b64 	%rd1352, {%r946, %r945};
	shf.l.wrap.b32 	%r947, %r943, %r944, 30;
	shf.l.wrap.b32 	%r948, %r944, %r943, 30;
	mov.b64 	%rd1353, {%r948, %r947};
	xor.b64  	%rd1354, %rd1353, %rd1352;
	shf.l.wrap.b32 	%r949, %r943, %r944, 25;
	shf.l.wrap.b32 	%r950, %r944, %r943, 25;
	mov.b64 	%rd1355, {%r950, %r949};
	xor.b64  	%rd1356, %rd1354, %rd1355;
	xor.b64  	%rd1357, %rd1338, %rd1290;
	xor.b64  	%rd1358, %rd1338, %rd1314;
	and.b64  	%rd1359, %rd1358, %rd1357;
	xor.b64  	%rd1360, %rd1359, %rd1338;
	add.s64 	%rd1361, %rd1350, %rd1360;
	add.s64 	%rd1362, %rd1361, %rd1356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r951,%dummy}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r952}, %rd1351;
	}
	shf.r.wrap.b32 	%r953, %r952, %r951, 14;
	shf.r.wrap.b32 	%r954, %r951, %r952, 14;
	mov.b64 	%rd1363, {%r954, %r953};
	shf.r.wrap.b32 	%r955, %r952, %r951, 18;
	shf.r.wrap.b32 	%r956, %r951, %r952, 18;
	mov.b64 	%rd1364, {%r956, %r955};
	xor.b64  	%rd1365, %rd1364, %rd1363;
	shf.l.wrap.b32 	%r957, %r951, %r952, 23;
	shf.l.wrap.b32 	%r958, %r952, %r951, 23;
	mov.b64 	%rd1366, {%r958, %r957};
	xor.b64  	%rd1367, %rd1365, %rd1366;
	xor.b64  	%rd1368, %rd1327, %rd1303;
	and.b64  	%rd1369, %rd1351, %rd1368;
	xor.b64  	%rd1370, %rd1369, %rd1303;
	add.s64 	%rd1371, %rd1279, %rd1101;
	add.s64 	%rd1372, %rd1371, %rd2714;
	add.s64 	%rd1373, %rd1372, %rd1370;
	add.s64 	%rd1374, %rd1373, %rd1367;
	add.s64 	%rd1375, %rd1374, %rd1290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r959,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r960}, %rd1362;
	}
	shf.r.wrap.b32 	%r961, %r960, %r959, 28;
	shf.r.wrap.b32 	%r962, %r959, %r960, 28;
	mov.b64 	%rd1376, {%r962, %r961};
	shf.l.wrap.b32 	%r963, %r959, %r960, 30;
	shf.l.wrap.b32 	%r964, %r960, %r959, 30;
	mov.b64 	%rd1377, {%r964, %r963};
	xor.b64  	%rd1378, %rd1377, %rd1376;
	shf.l.wrap.b32 	%r965, %r959, %r960, 25;
	shf.l.wrap.b32 	%r966, %r960, %r959, 25;
	mov.b64 	%rd1379, {%r966, %r965};
	xor.b64  	%rd1380, %rd1378, %rd1379;
	xor.b64  	%rd1381, %rd1362, %rd1314;
	xor.b64  	%rd1382, %rd1362, %rd1338;
	and.b64  	%rd1383, %rd1382, %rd1381;
	xor.b64  	%rd1384, %rd1383, %rd1362;
	add.s64 	%rd1385, %rd1374, %rd1384;
	add.s64 	%rd1386, %rd1385, %rd1380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd1375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd1375;
	}
	shf.r.wrap.b32 	%r969, %r968, %r967, 14;
	shf.r.wrap.b32 	%r970, %r967, %r968, 14;
	mov.b64 	%rd1387, {%r970, %r969};
	shf.r.wrap.b32 	%r971, %r968, %r967, 18;
	shf.r.wrap.b32 	%r972, %r967, %r968, 18;
	mov.b64 	%rd1388, {%r972, %r971};
	xor.b64  	%rd1389, %rd1388, %rd1387;
	shf.l.wrap.b32 	%r973, %r967, %r968, 23;
	shf.l.wrap.b32 	%r974, %r968, %r967, 23;
	mov.b64 	%rd1390, {%r974, %r973};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	xor.b64  	%rd1392, %rd1351, %rd1327;
	and.b64  	%rd1393, %rd1375, %rd1392;
	xor.b64  	%rd1394, %rd1393, %rd1327;
	add.s64 	%rd1395, %rd1303, %rd1114;
	add.s64 	%rd1396, %rd1395, %rd2715;
	add.s64 	%rd1397, %rd1396, %rd1394;
	add.s64 	%rd1398, %rd1397, %rd1391;
	add.s64 	%rd1399, %rd1398, %rd1314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd1386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd1386;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 28;
	shf.r.wrap.b32 	%r978, %r975, %r976, 28;
	mov.b64 	%rd1400, {%r978, %r977};
	shf.l.wrap.b32 	%r979, %r975, %r976, 30;
	shf.l.wrap.b32 	%r980, %r976, %r975, 30;
	mov.b64 	%rd1401, {%r980, %r979};
	xor.b64  	%rd1402, %rd1401, %rd1400;
	shf.l.wrap.b32 	%r981, %r975, %r976, 25;
	shf.l.wrap.b32 	%r982, %r976, %r975, 25;
	mov.b64 	%rd1403, {%r982, %r981};
	xor.b64  	%rd1404, %rd1402, %rd1403;
	xor.b64  	%rd1405, %rd1386, %rd1338;
	xor.b64  	%rd1406, %rd1386, %rd1362;
	and.b64  	%rd1407, %rd1406, %rd1405;
	xor.b64  	%rd1408, %rd1407, %rd1386;
	add.s64 	%rd1409, %rd1398, %rd1408;
	add.s64 	%rd1410, %rd1409, %rd1404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd1399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd1399;
	}
	shf.r.wrap.b32 	%r985, %r984, %r983, 14;
	shf.r.wrap.b32 	%r986, %r983, %r984, 14;
	mov.b64 	%rd1411, {%r986, %r985};
	shf.r.wrap.b32 	%r987, %r984, %r983, 18;
	shf.r.wrap.b32 	%r988, %r983, %r984, 18;
	mov.b64 	%rd1412, {%r988, %r987};
	xor.b64  	%rd1413, %rd1412, %rd1411;
	shf.l.wrap.b32 	%r989, %r983, %r984, 23;
	shf.l.wrap.b32 	%r990, %r984, %r983, 23;
	mov.b64 	%rd1414, {%r990, %r989};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	xor.b64  	%rd1416, %rd1375, %rd1351;
	and.b64  	%rd1417, %rd1399, %rd1416;
	xor.b64  	%rd1418, %rd1417, %rd1351;
	add.s64 	%rd1419, %rd1327, %rd1127;
	add.s64 	%rd1420, %rd1419, %rd2716;
	add.s64 	%rd1421, %rd1420, %rd1418;
	add.s64 	%rd1422, %rd1421, %rd1415;
	add.s64 	%rd1423, %rd1422, %rd1338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd1410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd1410;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 28;
	shf.r.wrap.b32 	%r994, %r991, %r992, 28;
	mov.b64 	%rd1424, {%r994, %r993};
	shf.l.wrap.b32 	%r995, %r991, %r992, 30;
	shf.l.wrap.b32 	%r996, %r992, %r991, 30;
	mov.b64 	%rd1425, {%r996, %r995};
	xor.b64  	%rd1426, %rd1425, %rd1424;
	shf.l.wrap.b32 	%r997, %r991, %r992, 25;
	shf.l.wrap.b32 	%r998, %r992, %r991, 25;
	mov.b64 	%rd1427, {%r998, %r997};
	xor.b64  	%rd1428, %rd1426, %rd1427;
	xor.b64  	%rd1429, %rd1410, %rd1362;
	xor.b64  	%rd1430, %rd1410, %rd1386;
	and.b64  	%rd1431, %rd1430, %rd1429;
	xor.b64  	%rd1432, %rd1431, %rd1410;
	add.s64 	%rd1433, %rd1422, %rd1432;
	add.s64 	%rd1434, %rd1433, %rd1428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd1423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd1423;
	}
	shf.r.wrap.b32 	%r1001, %r1000, %r999, 14;
	shf.r.wrap.b32 	%r1002, %r999, %r1000, 14;
	mov.b64 	%rd1435, {%r1002, %r1001};
	shf.r.wrap.b32 	%r1003, %r1000, %r999, 18;
	shf.r.wrap.b32 	%r1004, %r999, %r1000, 18;
	mov.b64 	%rd1436, {%r1004, %r1003};
	xor.b64  	%rd1437, %rd1436, %rd1435;
	shf.l.wrap.b32 	%r1005, %r999, %r1000, 23;
	shf.l.wrap.b32 	%r1006, %r1000, %r999, 23;
	mov.b64 	%rd1438, {%r1006, %r1005};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	xor.b64  	%rd1440, %rd1399, %rd1375;
	and.b64  	%rd1441, %rd1423, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd1375;
	add.s64 	%rd1443, %rd1351, %rd1140;
	add.s64 	%rd1444, %rd1443, %rd2717;
	add.s64 	%rd1445, %rd1444, %rd1442;
	add.s64 	%rd1446, %rd1445, %rd1439;
	add.s64 	%rd1447, %rd1446, %rd1362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd1434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd1434;
	}
	shf.r.wrap.b32 	%r1009, %r1008, %r1007, 28;
	shf.r.wrap.b32 	%r1010, %r1007, %r1008, 28;
	mov.b64 	%rd1448, {%r1010, %r1009};
	shf.l.wrap.b32 	%r1011, %r1007, %r1008, 30;
	shf.l.wrap.b32 	%r1012, %r1008, %r1007, 30;
	mov.b64 	%rd1449, {%r1012, %r1011};
	xor.b64  	%rd1450, %rd1449, %rd1448;
	shf.l.wrap.b32 	%r1013, %r1007, %r1008, 25;
	shf.l.wrap.b32 	%r1014, %r1008, %r1007, 25;
	mov.b64 	%rd1451, {%r1014, %r1013};
	xor.b64  	%rd1452, %rd1450, %rd1451;
	xor.b64  	%rd1453, %rd1434, %rd1386;
	xor.b64  	%rd1454, %rd1434, %rd1410;
	and.b64  	%rd1455, %rd1454, %rd1453;
	xor.b64  	%rd1456, %rd1455, %rd1434;
	add.s64 	%rd1457, %rd1446, %rd1456;
	add.s64 	%rd1458, %rd1457, %rd1452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1015,%dummy}, %rd1447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd1447;
	}
	shf.r.wrap.b32 	%r1017, %r1016, %r1015, 14;
	shf.r.wrap.b32 	%r1018, %r1015, %r1016, 14;
	mov.b64 	%rd1459, {%r1018, %r1017};
	shf.r.wrap.b32 	%r1019, %r1016, %r1015, 18;
	shf.r.wrap.b32 	%r1020, %r1015, %r1016, 18;
	mov.b64 	%rd1460, {%r1020, %r1019};
	xor.b64  	%rd1461, %rd1460, %rd1459;
	shf.l.wrap.b32 	%r1021, %r1015, %r1016, 23;
	shf.l.wrap.b32 	%r1022, %r1016, %r1015, 23;
	mov.b64 	%rd1462, {%r1022, %r1021};
	xor.b64  	%rd1463, %rd1461, %rd1462;
	xor.b64  	%rd1464, %rd1423, %rd1399;
	and.b64  	%rd1465, %rd1447, %rd1464;
	xor.b64  	%rd1466, %rd1465, %rd1399;
	add.s64 	%rd1467, %rd1375, %rd1153;
	add.s64 	%rd1468, %rd1467, %rd2718;
	add.s64 	%rd1469, %rd1468, %rd1466;
	add.s64 	%rd1470, %rd1469, %rd1463;
	add.s64 	%rd1471, %rd1470, %rd1386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1023,%dummy}, %rd1458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd1458;
	}
	shf.r.wrap.b32 	%r1025, %r1024, %r1023, 28;
	shf.r.wrap.b32 	%r1026, %r1023, %r1024, 28;
	mov.b64 	%rd1472, {%r1026, %r1025};
	shf.l.wrap.b32 	%r1027, %r1023, %r1024, 30;
	shf.l.wrap.b32 	%r1028, %r1024, %r1023, 30;
	mov.b64 	%rd1473, {%r1028, %r1027};
	xor.b64  	%rd1474, %rd1473, %rd1472;
	shf.l.wrap.b32 	%r1029, %r1023, %r1024, 25;
	shf.l.wrap.b32 	%r1030, %r1024, %r1023, 25;
	mov.b64 	%rd1475, {%r1030, %r1029};
	xor.b64  	%rd1476, %rd1474, %rd1475;
	xor.b64  	%rd1477, %rd1458, %rd1410;
	xor.b64  	%rd1478, %rd1458, %rd1434;
	and.b64  	%rd1479, %rd1478, %rd1477;
	xor.b64  	%rd1480, %rd1479, %rd1458;
	add.s64 	%rd1481, %rd1470, %rd1480;
	add.s64 	%rd1482, %rd1481, %rd1476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1031,%dummy}, %rd1471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd1471;
	}
	shf.r.wrap.b32 	%r1033, %r1032, %r1031, 14;
	shf.r.wrap.b32 	%r1034, %r1031, %r1032, 14;
	mov.b64 	%rd1483, {%r1034, %r1033};
	shf.r.wrap.b32 	%r1035, %r1032, %r1031, 18;
	shf.r.wrap.b32 	%r1036, %r1031, %r1032, 18;
	mov.b64 	%rd1484, {%r1036, %r1035};
	xor.b64  	%rd1485, %rd1484, %rd1483;
	shf.l.wrap.b32 	%r1037, %r1031, %r1032, 23;
	shf.l.wrap.b32 	%r1038, %r1032, %r1031, 23;
	mov.b64 	%rd1486, {%r1038, %r1037};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	xor.b64  	%rd1488, %rd1447, %rd1423;
	and.b64  	%rd1489, %rd1471, %rd1488;
	xor.b64  	%rd1490, %rd1489, %rd1423;
	add.s64 	%rd1491, %rd1399, %rd1166;
	add.s64 	%rd1492, %rd1491, %rd2719;
	add.s64 	%rd1493, %rd1492, %rd1490;
	add.s64 	%rd1494, %rd1493, %rd1487;
	add.s64 	%rd1495, %rd1494, %rd1410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1039,%dummy}, %rd1482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1040}, %rd1482;
	}
	shf.r.wrap.b32 	%r1041, %r1040, %r1039, 28;
	shf.r.wrap.b32 	%r1042, %r1039, %r1040, 28;
	mov.b64 	%rd1496, {%r1042, %r1041};
	shf.l.wrap.b32 	%r1043, %r1039, %r1040, 30;
	shf.l.wrap.b32 	%r1044, %r1040, %r1039, 30;
	mov.b64 	%rd1497, {%r1044, %r1043};
	xor.b64  	%rd1498, %rd1497, %rd1496;
	shf.l.wrap.b32 	%r1045, %r1039, %r1040, 25;
	shf.l.wrap.b32 	%r1046, %r1040, %r1039, 25;
	mov.b64 	%rd1499, {%r1046, %r1045};
	xor.b64  	%rd1500, %rd1498, %rd1499;
	xor.b64  	%rd1501, %rd1482, %rd1434;
	xor.b64  	%rd1502, %rd1482, %rd1458;
	and.b64  	%rd1503, %rd1502, %rd1501;
	xor.b64  	%rd1504, %rd1503, %rd1482;
	add.s64 	%rd1505, %rd1494, %rd1504;
	add.s64 	%rd1506, %rd1505, %rd1500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1047,%dummy}, %rd1495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1048}, %rd1495;
	}
	shf.r.wrap.b32 	%r1049, %r1048, %r1047, 14;
	shf.r.wrap.b32 	%r1050, %r1047, %r1048, 14;
	mov.b64 	%rd1507, {%r1050, %r1049};
	shf.r.wrap.b32 	%r1051, %r1048, %r1047, 18;
	shf.r.wrap.b32 	%r1052, %r1047, %r1048, 18;
	mov.b64 	%rd1508, {%r1052, %r1051};
	xor.b64  	%rd1509, %rd1508, %rd1507;
	shf.l.wrap.b32 	%r1053, %r1047, %r1048, 23;
	shf.l.wrap.b32 	%r1054, %r1048, %r1047, 23;
	mov.b64 	%rd1510, {%r1054, %r1053};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	xor.b64  	%rd1512, %rd1471, %rd1447;
	and.b64  	%rd1513, %rd1495, %rd1512;
	xor.b64  	%rd1514, %rd1513, %rd1447;
	add.s64 	%rd1515, %rd1423, %rd1179;
	add.s64 	%rd1516, %rd1515, %rd2720;
	add.s64 	%rd1517, %rd1516, %rd1514;
	add.s64 	%rd1518, %rd1517, %rd1511;
	add.s64 	%rd1519, %rd1518, %rd1434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1055,%dummy}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd1506;
	}
	shf.r.wrap.b32 	%r1057, %r1056, %r1055, 28;
	shf.r.wrap.b32 	%r1058, %r1055, %r1056, 28;
	mov.b64 	%rd1520, {%r1058, %r1057};
	shf.l.wrap.b32 	%r1059, %r1055, %r1056, 30;
	shf.l.wrap.b32 	%r1060, %r1056, %r1055, 30;
	mov.b64 	%rd1521, {%r1060, %r1059};
	xor.b64  	%rd1522, %rd1521, %rd1520;
	shf.l.wrap.b32 	%r1061, %r1055, %r1056, 25;
	shf.l.wrap.b32 	%r1062, %r1056, %r1055, 25;
	mov.b64 	%rd1523, {%r1062, %r1061};
	xor.b64  	%rd1524, %rd1522, %rd1523;
	xor.b64  	%rd1525, %rd1506, %rd1458;
	xor.b64  	%rd1526, %rd1506, %rd1482;
	and.b64  	%rd1527, %rd1526, %rd1525;
	xor.b64  	%rd1528, %rd1527, %rd1506;
	add.s64 	%rd1529, %rd1518, %rd1528;
	add.s64 	%rd1530, %rd1529, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd1519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd1519;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 14;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 14;
	mov.b64 	%rd1531, {%r1066, %r1065};
	shf.r.wrap.b32 	%r1067, %r1064, %r1063, 18;
	shf.r.wrap.b32 	%r1068, %r1063, %r1064, 18;
	mov.b64 	%rd1532, {%r1068, %r1067};
	xor.b64  	%rd1533, %rd1532, %rd1531;
	shf.l.wrap.b32 	%r1069, %r1063, %r1064, 23;
	shf.l.wrap.b32 	%r1070, %r1064, %r1063, 23;
	mov.b64 	%rd1534, {%r1070, %r1069};
	xor.b64  	%rd1535, %rd1533, %rd1534;
	xor.b64  	%rd1536, %rd1495, %rd1471;
	and.b64  	%rd1537, %rd1519, %rd1536;
	xor.b64  	%rd1538, %rd1537, %rd1471;
	add.s64 	%rd1539, %rd1447, %rd1192;
	add.s64 	%rd1540, %rd1539, %rd2721;
	add.s64 	%rd1541, %rd1540, %rd1538;
	add.s64 	%rd1542, %rd1541, %rd1535;
	add.s64 	%rd1543, %rd1542, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1071,%dummy}, %rd1530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1072}, %rd1530;
	}
	shf.r.wrap.b32 	%r1073, %r1072, %r1071, 28;
	shf.r.wrap.b32 	%r1074, %r1071, %r1072, 28;
	mov.b64 	%rd1544, {%r1074, %r1073};
	shf.l.wrap.b32 	%r1075, %r1071, %r1072, 30;
	shf.l.wrap.b32 	%r1076, %r1072, %r1071, 30;
	mov.b64 	%rd1545, {%r1076, %r1075};
	xor.b64  	%rd1546, %rd1545, %rd1544;
	shf.l.wrap.b32 	%r1077, %r1071, %r1072, 25;
	shf.l.wrap.b32 	%r1078, %r1072, %r1071, 25;
	mov.b64 	%rd1547, {%r1078, %r1077};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	xor.b64  	%rd1549, %rd1530, %rd1482;
	xor.b64  	%rd1550, %rd1530, %rd1506;
	and.b64  	%rd1551, %rd1550, %rd1549;
	xor.b64  	%rd1552, %rd1551, %rd1530;
	add.s64 	%rd1553, %rd1542, %rd1552;
	add.s64 	%rd1554, %rd1553, %rd1548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1079,%dummy}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd1543;
	}
	shf.r.wrap.b32 	%r1081, %r1080, %r1079, 14;
	shf.r.wrap.b32 	%r1082, %r1079, %r1080, 14;
	mov.b64 	%rd1555, {%r1082, %r1081};
	shf.r.wrap.b32 	%r1083, %r1080, %r1079, 18;
	shf.r.wrap.b32 	%r1084, %r1079, %r1080, 18;
	mov.b64 	%rd1556, {%r1084, %r1083};
	xor.b64  	%rd1557, %rd1556, %rd1555;
	shf.l.wrap.b32 	%r1085, %r1079, %r1080, 23;
	shf.l.wrap.b32 	%r1086, %r1080, %r1079, 23;
	mov.b64 	%rd1558, {%r1086, %r1085};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	xor.b64  	%rd1560, %rd1519, %rd1495;
	and.b64  	%rd1561, %rd1543, %rd1560;
	xor.b64  	%rd1562, %rd1561, %rd1495;
	add.s64 	%rd1563, %rd1471, %rd1205;
	add.s64 	%rd1564, %rd1563, %rd2722;
	add.s64 	%rd1565, %rd1564, %rd1562;
	add.s64 	%rd1566, %rd1565, %rd1559;
	add.s64 	%rd1567, %rd1566, %rd1482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd1554;
	}
	shf.r.wrap.b32 	%r1089, %r1088, %r1087, 28;
	shf.r.wrap.b32 	%r1090, %r1087, %r1088, 28;
	mov.b64 	%rd1568, {%r1090, %r1089};
	shf.l.wrap.b32 	%r1091, %r1087, %r1088, 30;
	shf.l.wrap.b32 	%r1092, %r1088, %r1087, 30;
	mov.b64 	%rd1569, {%r1092, %r1091};
	xor.b64  	%rd1570, %rd1569, %rd1568;
	shf.l.wrap.b32 	%r1093, %r1087, %r1088, 25;
	shf.l.wrap.b32 	%r1094, %r1088, %r1087, 25;
	mov.b64 	%rd1571, {%r1094, %r1093};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	xor.b64  	%rd1573, %rd1554, %rd1506;
	xor.b64  	%rd1574, %rd1554, %rd1530;
	and.b64  	%rd1575, %rd1574, %rd1573;
	xor.b64  	%rd1576, %rd1575, %rd1554;
	add.s64 	%rd1577, %rd1566, %rd1576;
	add.s64 	%rd1578, %rd1577, %rd1572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd1567;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 14;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 14;
	mov.b64 	%rd1579, {%r1098, %r1097};
	shf.r.wrap.b32 	%r1099, %r1096, %r1095, 18;
	shf.r.wrap.b32 	%r1100, %r1095, %r1096, 18;
	mov.b64 	%rd1580, {%r1100, %r1099};
	xor.b64  	%rd1581, %rd1580, %rd1579;
	shf.l.wrap.b32 	%r1101, %r1095, %r1096, 23;
	shf.l.wrap.b32 	%r1102, %r1096, %r1095, 23;
	mov.b64 	%rd1582, {%r1102, %r1101};
	xor.b64  	%rd1583, %rd1581, %rd1582;
	xor.b64  	%rd1584, %rd1543, %rd1519;
	and.b64  	%rd1585, %rd1567, %rd1584;
	xor.b64  	%rd1586, %rd1585, %rd1519;
	add.s64 	%rd1587, %rd1495, %rd1218;
	add.s64 	%rd1588, %rd1587, %rd2723;
	add.s64 	%rd1589, %rd1588, %rd1586;
	add.s64 	%rd1590, %rd1589, %rd1583;
	add.s64 	%rd1591, %rd1590, %rd1506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1103,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1104}, %rd1578;
	}
	shf.r.wrap.b32 	%r1105, %r1104, %r1103, 28;
	shf.r.wrap.b32 	%r1106, %r1103, %r1104, 28;
	mov.b64 	%rd1592, {%r1106, %r1105};
	shf.l.wrap.b32 	%r1107, %r1103, %r1104, 30;
	shf.l.wrap.b32 	%r1108, %r1104, %r1103, 30;
	mov.b64 	%rd1593, {%r1108, %r1107};
	xor.b64  	%rd1594, %rd1593, %rd1592;
	shf.l.wrap.b32 	%r1109, %r1103, %r1104, 25;
	shf.l.wrap.b32 	%r1110, %r1104, %r1103, 25;
	mov.b64 	%rd1595, {%r1110, %r1109};
	xor.b64  	%rd1596, %rd1594, %rd1595;
	xor.b64  	%rd1597, %rd1578, %rd1530;
	xor.b64  	%rd1598, %rd1578, %rd1554;
	and.b64  	%rd1599, %rd1598, %rd1597;
	xor.b64  	%rd1600, %rd1599, %rd1578;
	add.s64 	%rd1601, %rd1590, %rd1600;
	add.s64 	%rd1602, %rd1601, %rd1596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1111,%dummy}, %rd1205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1112}, %rd1205;
	}
	shf.r.wrap.b32 	%r1113, %r1112, %r1111, 19;
	shf.r.wrap.b32 	%r1114, %r1111, %r1112, 19;
	mov.b64 	%rd1603, {%r1114, %r1113};
	shf.l.wrap.b32 	%r1115, %r1111, %r1112, 3;
	shf.l.wrap.b32 	%r1116, %r1112, %r1111, 3;
	mov.b64 	%rd1604, {%r1116, %r1115};
	shr.u64 	%rd1605, %rd1205, 6;
	xor.b64  	%rd1606, %rd1603, %rd1605;
	xor.b64  	%rd1607, %rd1606, %rd1604;
	shf.r.wrap.b32 	%r1117, %r730, %r729, 1;
	shf.r.wrap.b32 	%r1118, %r729, %r730, 1;
	mov.b64 	%rd1608, {%r1118, %r1117};
	shf.r.wrap.b32 	%r1119, %r730, %r729, 8;
	shf.r.wrap.b32 	%r1120, %r729, %r730, 8;
	mov.b64 	%rd1609, {%r1120, %r1119};
	shr.u64 	%rd1610, %rd1046, 7;
	xor.b64  	%rd1611, %rd1608, %rd1610;
	xor.b64  	%rd1612, %rd1611, %rd1609;
	add.s64 	%rd1613, %rd1033, %rd1140;
	add.s64 	%rd1614, %rd1613, %rd1607;
	add.s64 	%rd1615, %rd1614, %rd1612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1121,%dummy}, %rd1218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1122}, %rd1218;
	}
	shf.r.wrap.b32 	%r1123, %r1122, %r1121, 19;
	shf.r.wrap.b32 	%r1124, %r1121, %r1122, 19;
	mov.b64 	%rd1616, {%r1124, %r1123};
	shf.l.wrap.b32 	%r1125, %r1121, %r1122, 3;
	shf.l.wrap.b32 	%r1126, %r1122, %r1121, 3;
	mov.b64 	%rd1617, {%r1126, %r1125};
	shr.u64 	%rd1618, %rd1218, 6;
	xor.b64  	%rd1619, %rd1616, %rd1618;
	xor.b64  	%rd1620, %rd1619, %rd1617;
	shf.r.wrap.b32 	%r1127, %r740, %r739, 1;
	shf.r.wrap.b32 	%r1128, %r739, %r740, 1;
	mov.b64 	%rd1621, {%r1128, %r1127};
	shf.r.wrap.b32 	%r1129, %r740, %r739, 8;
	shf.r.wrap.b32 	%r1130, %r739, %r740, 8;
	mov.b64 	%rd1622, {%r1130, %r1129};
	shr.u64 	%rd1623, %rd1054, 7;
	xor.b64  	%rd1624, %rd1621, %rd1623;
	xor.b64  	%rd1625, %rd1624, %rd1622;
	add.s64 	%rd1626, %rd1046, %rd1153;
	add.s64 	%rd1627, %rd1626, %rd1620;
	add.s64 	%rd1628, %rd1627, %rd1625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1131,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1132}, %rd1615;
	}
	shf.r.wrap.b32 	%r1133, %r1132, %r1131, 19;
	shf.r.wrap.b32 	%r1134, %r1131, %r1132, 19;
	mov.b64 	%rd1629, {%r1134, %r1133};
	shf.l.wrap.b32 	%r1135, %r1131, %r1132, 3;
	shf.l.wrap.b32 	%r1136, %r1132, %r1131, 3;
	mov.b64 	%rd1630, {%r1136, %r1135};
	shr.u64 	%rd1631, %rd1615, 6;
	xor.b64  	%rd1632, %rd1629, %rd1631;
	xor.b64  	%rd1633, %rd1632, %rd1630;
	shf.r.wrap.b32 	%r1137, %r746, %r745, 1;
	shf.r.wrap.b32 	%r1138, %r745, %r746, 1;
	mov.b64 	%rd1634, {%r1138, %r1137};
	shf.r.wrap.b32 	%r1139, %r746, %r745, 8;
	shf.r.wrap.b32 	%r1140, %r745, %r746, 8;
	mov.b64 	%rd1635, {%r1140, %r1139};
	shr.u64 	%rd1636, %rd1067, 7;
	xor.b64  	%rd1637, %rd1634, %rd1636;
	xor.b64  	%rd1638, %rd1637, %rd1635;
	add.s64 	%rd1639, %rd1054, %rd1166;
	add.s64 	%rd1640, %rd1639, %rd1633;
	add.s64 	%rd1641, %rd1640, %rd1638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1141,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1142}, %rd1628;
	}
	shf.r.wrap.b32 	%r1143, %r1142, %r1141, 19;
	shf.r.wrap.b32 	%r1144, %r1141, %r1142, 19;
	mov.b64 	%rd1642, {%r1144, %r1143};
	shf.l.wrap.b32 	%r1145, %r1141, %r1142, 3;
	shf.l.wrap.b32 	%r1146, %r1142, %r1141, 3;
	mov.b64 	%rd1643, {%r1146, %r1145};
	shr.u64 	%rd1644, %rd1628, 6;
	xor.b64  	%rd1645, %rd1642, %rd1644;
	xor.b64  	%rd1646, %rd1645, %rd1643;
	shf.r.wrap.b32 	%r1147, %r756, %r755, 1;
	shf.r.wrap.b32 	%r1148, %r755, %r756, 1;
	mov.b64 	%rd1647, {%r1148, %r1147};
	shf.r.wrap.b32 	%r1149, %r756, %r755, 8;
	shf.r.wrap.b32 	%r1150, %r755, %r756, 8;
	mov.b64 	%rd1648, {%r1150, %r1149};
	shr.u64 	%rd1649, %rd1075, 7;
	xor.b64  	%rd1650, %rd1647, %rd1649;
	xor.b64  	%rd1651, %rd1650, %rd1648;
	add.s64 	%rd1652, %rd1067, %rd1179;
	add.s64 	%rd1653, %rd1652, %rd1646;
	add.s64 	%rd1654, %rd1653, %rd1651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1151,%dummy}, %rd1641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1152}, %rd1641;
	}
	shf.r.wrap.b32 	%r1153, %r1152, %r1151, 19;
	shf.r.wrap.b32 	%r1154, %r1151, %r1152, 19;
	mov.b64 	%rd1655, {%r1154, %r1153};
	shf.l.wrap.b32 	%r1155, %r1151, %r1152, 3;
	shf.l.wrap.b32 	%r1156, %r1152, %r1151, 3;
	mov.b64 	%rd1656, {%r1156, %r1155};
	shr.u64 	%rd1657, %rd1641, 6;
	xor.b64  	%rd1658, %rd1655, %rd1657;
	xor.b64  	%rd1659, %rd1658, %rd1656;
	shf.r.wrap.b32 	%r1157, %r766, %r765, 1;
	shf.r.wrap.b32 	%r1158, %r765, %r766, 1;
	mov.b64 	%rd1660, {%r1158, %r1157};
	shf.r.wrap.b32 	%r1159, %r766, %r765, 8;
	shf.r.wrap.b32 	%r1160, %r765, %r766, 8;
	mov.b64 	%rd1661, {%r1160, %r1159};
	shr.u64 	%rd1662, %rd1088, 7;
	xor.b64  	%rd1663, %rd1660, %rd1662;
	xor.b64  	%rd1664, %rd1663, %rd1661;
	add.s64 	%rd1665, %rd1075, %rd1192;
	add.s64 	%rd1666, %rd1665, %rd1659;
	add.s64 	%rd1667, %rd1666, %rd1664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1161,%dummy}, %rd1654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1162}, %rd1654;
	}
	shf.r.wrap.b32 	%r1163, %r1162, %r1161, 19;
	shf.r.wrap.b32 	%r1164, %r1161, %r1162, 19;
	mov.b64 	%rd1668, {%r1164, %r1163};
	shf.l.wrap.b32 	%r1165, %r1161, %r1162, 3;
	shf.l.wrap.b32 	%r1166, %r1162, %r1161, 3;
	mov.b64 	%rd1669, {%r1166, %r1165};
	shr.u64 	%rd1670, %rd1654, 6;
	xor.b64  	%rd1671, %rd1668, %rd1670;
	xor.b64  	%rd1672, %rd1671, %rd1669;
	shf.r.wrap.b32 	%r1167, %r776, %r775, 1;
	shf.r.wrap.b32 	%r1168, %r775, %r776, 1;
	mov.b64 	%rd1673, {%r1168, %r1167};
	shf.r.wrap.b32 	%r1169, %r776, %r775, 8;
	shf.r.wrap.b32 	%r1170, %r775, %r776, 8;
	mov.b64 	%rd1674, {%r1170, %r1169};
	shr.u64 	%rd1675, %rd1101, 7;
	xor.b64  	%rd1676, %rd1673, %rd1675;
	xor.b64  	%rd1677, %rd1676, %rd1674;
	add.s64 	%rd1678, %rd1088, %rd1205;
	add.s64 	%rd1679, %rd1678, %rd1672;
	add.s64 	%rd1680, %rd1679, %rd1677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1171,%dummy}, %rd1667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1172}, %rd1667;
	}
	shf.r.wrap.b32 	%r1173, %r1172, %r1171, 19;
	shf.r.wrap.b32 	%r1174, %r1171, %r1172, 19;
	mov.b64 	%rd1681, {%r1174, %r1173};
	shf.l.wrap.b32 	%r1175, %r1171, %r1172, 3;
	shf.l.wrap.b32 	%r1176, %r1172, %r1171, 3;
	mov.b64 	%rd1682, {%r1176, %r1175};
	shr.u64 	%rd1683, %rd1667, 6;
	xor.b64  	%rd1684, %rd1681, %rd1683;
	xor.b64  	%rd1685, %rd1684, %rd1682;
	shf.r.wrap.b32 	%r1177, %r786, %r785, 1;
	shf.r.wrap.b32 	%r1178, %r785, %r786, 1;
	mov.b64 	%rd1686, {%r1178, %r1177};
	shf.r.wrap.b32 	%r1179, %r786, %r785, 8;
	shf.r.wrap.b32 	%r1180, %r785, %r786, 8;
	mov.b64 	%rd1687, {%r1180, %r1179};
	shr.u64 	%rd1688, %rd1114, 7;
	xor.b64  	%rd1689, %rd1686, %rd1688;
	xor.b64  	%rd1690, %rd1689, %rd1687;
	add.s64 	%rd1691, %rd1101, %rd1218;
	add.s64 	%rd1692, %rd1691, %rd1685;
	add.s64 	%rd1693, %rd1692, %rd1690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd1680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1182}, %rd1680;
	}
	shf.r.wrap.b32 	%r1183, %r1182, %r1181, 19;
	shf.r.wrap.b32 	%r1184, %r1181, %r1182, 19;
	mov.b64 	%rd1694, {%r1184, %r1183};
	shf.l.wrap.b32 	%r1185, %r1181, %r1182, 3;
	shf.l.wrap.b32 	%r1186, %r1182, %r1181, 3;
	mov.b64 	%rd1695, {%r1186, %r1185};
	shr.u64 	%rd1696, %rd1680, 6;
	xor.b64  	%rd1697, %rd1694, %rd1696;
	xor.b64  	%rd1698, %rd1697, %rd1695;
	shf.r.wrap.b32 	%r1187, %r796, %r795, 1;
	shf.r.wrap.b32 	%r1188, %r795, %r796, 1;
	mov.b64 	%rd1699, {%r1188, %r1187};
	shf.r.wrap.b32 	%r1189, %r796, %r795, 8;
	shf.r.wrap.b32 	%r1190, %r795, %r796, 8;
	mov.b64 	%rd1700, {%r1190, %r1189};
	shr.u64 	%rd1701, %rd1127, 7;
	xor.b64  	%rd1702, %rd1699, %rd1701;
	xor.b64  	%rd1703, %rd1702, %rd1700;
	add.s64 	%rd1704, %rd1615, %rd1114;
	add.s64 	%rd1705, %rd1704, %rd1698;
	add.s64 	%rd1706, %rd1705, %rd1703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1191,%dummy}, %rd1693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd1693;
	}
	shf.r.wrap.b32 	%r1193, %r1192, %r1191, 19;
	shf.r.wrap.b32 	%r1194, %r1191, %r1192, 19;
	mov.b64 	%rd1707, {%r1194, %r1193};
	shf.l.wrap.b32 	%r1195, %r1191, %r1192, 3;
	shf.l.wrap.b32 	%r1196, %r1192, %r1191, 3;
	mov.b64 	%rd1708, {%r1196, %r1195};
	shr.u64 	%rd1709, %rd1693, 6;
	xor.b64  	%rd1710, %rd1707, %rd1709;
	xor.b64  	%rd1711, %rd1710, %rd1708;
	shf.r.wrap.b32 	%r1197, %r806, %r805, 1;
	shf.r.wrap.b32 	%r1198, %r805, %r806, 1;
	mov.b64 	%rd1712, {%r1198, %r1197};
	shf.r.wrap.b32 	%r1199, %r806, %r805, 8;
	shf.r.wrap.b32 	%r1200, %r805, %r806, 8;
	mov.b64 	%rd1713, {%r1200, %r1199};
	shr.u64 	%rd1714, %rd1140, 7;
	xor.b64  	%rd1715, %rd1712, %rd1714;
	xor.b64  	%rd1716, %rd1715, %rd1713;
	add.s64 	%rd1717, %rd1628, %rd1127;
	add.s64 	%rd1718, %rd1717, %rd1711;
	add.s64 	%rd1719, %rd1718, %rd1716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1201,%dummy}, %rd1706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1202}, %rd1706;
	}
	shf.r.wrap.b32 	%r1203, %r1202, %r1201, 19;
	shf.r.wrap.b32 	%r1204, %r1201, %r1202, 19;
	mov.b64 	%rd1720, {%r1204, %r1203};
	shf.l.wrap.b32 	%r1205, %r1201, %r1202, 3;
	shf.l.wrap.b32 	%r1206, %r1202, %r1201, 3;
	mov.b64 	%rd1721, {%r1206, %r1205};
	shr.u64 	%rd1722, %rd1706, 6;
	xor.b64  	%rd1723, %rd1720, %rd1722;
	xor.b64  	%rd1724, %rd1723, %rd1721;
	shf.r.wrap.b32 	%r1207, %r816, %r815, 1;
	shf.r.wrap.b32 	%r1208, %r815, %r816, 1;
	mov.b64 	%rd1725, {%r1208, %r1207};
	shf.r.wrap.b32 	%r1209, %r816, %r815, 8;
	shf.r.wrap.b32 	%r1210, %r815, %r816, 8;
	mov.b64 	%rd1726, {%r1210, %r1209};
	shr.u64 	%rd1727, %rd1153, 7;
	xor.b64  	%rd1728, %rd1725, %rd1727;
	xor.b64  	%rd1729, %rd1728, %rd1726;
	add.s64 	%rd1730, %rd1641, %rd1140;
	add.s64 	%rd1731, %rd1730, %rd1724;
	add.s64 	%rd1732, %rd1731, %rd1729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1211,%dummy}, %rd1719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1212}, %rd1719;
	}
	shf.r.wrap.b32 	%r1213, %r1212, %r1211, 19;
	shf.r.wrap.b32 	%r1214, %r1211, %r1212, 19;
	mov.b64 	%rd1733, {%r1214, %r1213};
	shf.l.wrap.b32 	%r1215, %r1211, %r1212, 3;
	shf.l.wrap.b32 	%r1216, %r1212, %r1211, 3;
	mov.b64 	%rd1734, {%r1216, %r1215};
	shr.u64 	%rd1735, %rd1719, 6;
	xor.b64  	%rd1736, %rd1733, %rd1735;
	xor.b64  	%rd1737, %rd1736, %rd1734;
	shf.r.wrap.b32 	%r1217, %r826, %r825, 1;
	shf.r.wrap.b32 	%r1218, %r825, %r826, 1;
	mov.b64 	%rd1738, {%r1218, %r1217};
	shf.r.wrap.b32 	%r1219, %r826, %r825, 8;
	shf.r.wrap.b32 	%r1220, %r825, %r826, 8;
	mov.b64 	%rd1739, {%r1220, %r1219};
	shr.u64 	%rd1740, %rd1166, 7;
	xor.b64  	%rd1741, %rd1738, %rd1740;
	xor.b64  	%rd1742, %rd1741, %rd1739;
	add.s64 	%rd1743, %rd1654, %rd1153;
	add.s64 	%rd1744, %rd1743, %rd1737;
	add.s64 	%rd1745, %rd1744, %rd1742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd1732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd1732;
	}
	shf.r.wrap.b32 	%r1223, %r1222, %r1221, 19;
	shf.r.wrap.b32 	%r1224, %r1221, %r1222, 19;
	mov.b64 	%rd1746, {%r1224, %r1223};
	shf.l.wrap.b32 	%r1225, %r1221, %r1222, 3;
	shf.l.wrap.b32 	%r1226, %r1222, %r1221, 3;
	mov.b64 	%rd1747, {%r1226, %r1225};
	shr.u64 	%rd1748, %rd1732, 6;
	xor.b64  	%rd1749, %rd1746, %rd1748;
	xor.b64  	%rd1750, %rd1749, %rd1747;
	shf.r.wrap.b32 	%r1227, %r836, %r835, 1;
	shf.r.wrap.b32 	%r1228, %r835, %r836, 1;
	mov.b64 	%rd1751, {%r1228, %r1227};
	shf.r.wrap.b32 	%r1229, %r836, %r835, 8;
	shf.r.wrap.b32 	%r1230, %r835, %r836, 8;
	mov.b64 	%rd1752, {%r1230, %r1229};
	shr.u64 	%rd1753, %rd1179, 7;
	xor.b64  	%rd1754, %rd1751, %rd1753;
	xor.b64  	%rd1755, %rd1754, %rd1752;
	add.s64 	%rd1756, %rd1667, %rd1166;
	add.s64 	%rd1757, %rd1756, %rd1750;
	add.s64 	%rd1758, %rd1757, %rd1755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1231,%dummy}, %rd1745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1232}, %rd1745;
	}
	shf.r.wrap.b32 	%r1233, %r1232, %r1231, 19;
	shf.r.wrap.b32 	%r1234, %r1231, %r1232, 19;
	mov.b64 	%rd1759, {%r1234, %r1233};
	shf.l.wrap.b32 	%r1235, %r1231, %r1232, 3;
	shf.l.wrap.b32 	%r1236, %r1232, %r1231, 3;
	mov.b64 	%rd1760, {%r1236, %r1235};
	shr.u64 	%rd1761, %rd1745, 6;
	xor.b64  	%rd1762, %rd1759, %rd1761;
	xor.b64  	%rd1763, %rd1762, %rd1760;
	shf.r.wrap.b32 	%r1237, %r846, %r845, 1;
	shf.r.wrap.b32 	%r1238, %r845, %r846, 1;
	mov.b64 	%rd1764, {%r1238, %r1237};
	shf.r.wrap.b32 	%r1239, %r846, %r845, 8;
	shf.r.wrap.b32 	%r1240, %r845, %r846, 8;
	mov.b64 	%rd1765, {%r1240, %r1239};
	shr.u64 	%rd1766, %rd1192, 7;
	xor.b64  	%rd1767, %rd1764, %rd1766;
	xor.b64  	%rd1768, %rd1767, %rd1765;
	add.s64 	%rd1769, %rd1680, %rd1179;
	add.s64 	%rd1770, %rd1769, %rd1763;
	add.s64 	%rd1771, %rd1770, %rd1768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1241,%dummy}, %rd1758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1242}, %rd1758;
	}
	shf.r.wrap.b32 	%r1243, %r1242, %r1241, 19;
	shf.r.wrap.b32 	%r1244, %r1241, %r1242, 19;
	mov.b64 	%rd1772, {%r1244, %r1243};
	shf.l.wrap.b32 	%r1245, %r1241, %r1242, 3;
	shf.l.wrap.b32 	%r1246, %r1242, %r1241, 3;
	mov.b64 	%rd1773, {%r1246, %r1245};
	shr.u64 	%rd1774, %rd1758, 6;
	xor.b64  	%rd1775, %rd1772, %rd1774;
	xor.b64  	%rd1776, %rd1775, %rd1773;
	shf.r.wrap.b32 	%r1247, %r1112, %r1111, 1;
	shf.r.wrap.b32 	%r1248, %r1111, %r1112, 1;
	mov.b64 	%rd1777, {%r1248, %r1247};
	shf.r.wrap.b32 	%r1249, %r1112, %r1111, 8;
	shf.r.wrap.b32 	%r1250, %r1111, %r1112, 8;
	mov.b64 	%rd1778, {%r1250, %r1249};
	shr.u64 	%rd1779, %rd1205, 7;
	xor.b64  	%rd1780, %rd1777, %rd1779;
	xor.b64  	%rd1781, %rd1780, %rd1778;
	add.s64 	%rd1782, %rd1693, %rd1192;
	add.s64 	%rd1783, %rd1782, %rd1776;
	add.s64 	%rd1784, %rd1783, %rd1781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1251,%dummy}, %rd1771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1252}, %rd1771;
	}
	shf.r.wrap.b32 	%r1253, %r1252, %r1251, 19;
	shf.r.wrap.b32 	%r1254, %r1251, %r1252, 19;
	mov.b64 	%rd1785, {%r1254, %r1253};
	shf.l.wrap.b32 	%r1255, %r1251, %r1252, 3;
	shf.l.wrap.b32 	%r1256, %r1252, %r1251, 3;
	mov.b64 	%rd1786, {%r1256, %r1255};
	shr.u64 	%rd1787, %rd1771, 6;
	xor.b64  	%rd1788, %rd1785, %rd1787;
	xor.b64  	%rd1789, %rd1788, %rd1786;
	shf.r.wrap.b32 	%r1257, %r1122, %r1121, 1;
	shf.r.wrap.b32 	%r1258, %r1121, %r1122, 1;
	mov.b64 	%rd1790, {%r1258, %r1257};
	shf.r.wrap.b32 	%r1259, %r1122, %r1121, 8;
	shf.r.wrap.b32 	%r1260, %r1121, %r1122, 8;
	mov.b64 	%rd1791, {%r1260, %r1259};
	shr.u64 	%rd1792, %rd1218, 7;
	xor.b64  	%rd1793, %rd1790, %rd1792;
	xor.b64  	%rd1794, %rd1793, %rd1791;
	add.s64 	%rd1795, %rd1706, %rd1205;
	add.s64 	%rd1796, %rd1795, %rd1789;
	add.s64 	%rd1797, %rd1796, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1784;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 19;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 19;
	mov.b64 	%rd1798, {%r1264, %r1263};
	shf.l.wrap.b32 	%r1265, %r1261, %r1262, 3;
	shf.l.wrap.b32 	%r1266, %r1262, %r1261, 3;
	mov.b64 	%rd1799, {%r1266, %r1265};
	shr.u64 	%rd1800, %rd1784, 6;
	xor.b64  	%rd1801, %rd1798, %rd1800;
	xor.b64  	%rd1802, %rd1801, %rd1799;
	shf.r.wrap.b32 	%r1267, %r1132, %r1131, 1;
	shf.r.wrap.b32 	%r1268, %r1131, %r1132, 1;
	mov.b64 	%rd1803, {%r1268, %r1267};
	shf.r.wrap.b32 	%r1269, %r1132, %r1131, 8;
	shf.r.wrap.b32 	%r1270, %r1131, %r1132, 8;
	mov.b64 	%rd1804, {%r1270, %r1269};
	shr.u64 	%rd1805, %rd1615, 7;
	xor.b64  	%rd1806, %rd1803, %rd1805;
	xor.b64  	%rd1807, %rd1806, %rd1804;
	add.s64 	%rd1808, %rd1719, %rd1218;
	add.s64 	%rd1809, %rd1808, %rd1802;
	add.s64 	%rd1810, %rd1809, %rd1807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1271,%dummy}, %rd1591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1272}, %rd1591;
	}
	shf.r.wrap.b32 	%r1273, %r1272, %r1271, 14;
	shf.r.wrap.b32 	%r1274, %r1271, %r1272, 14;
	mov.b64 	%rd1811, {%r1274, %r1273};
	shf.r.wrap.b32 	%r1275, %r1272, %r1271, 18;
	shf.r.wrap.b32 	%r1276, %r1271, %r1272, 18;
	mov.b64 	%rd1812, {%r1276, %r1275};
	xor.b64  	%rd1813, %rd1812, %rd1811;
	shf.l.wrap.b32 	%r1277, %r1271, %r1272, 23;
	shf.l.wrap.b32 	%r1278, %r1272, %r1271, 23;
	mov.b64 	%rd1814, {%r1278, %r1277};
	xor.b64  	%rd1815, %rd1813, %rd1814;
	xor.b64  	%rd1816, %rd1543, %rd1567;
	and.b64  	%rd1817, %rd1816, %rd1591;
	xor.b64  	%rd1818, %rd1817, %rd1543;
	add.s64 	%rd1819, %rd1818, %rd1519;
	add.s64 	%rd1820, %rd1819, %rd1615;
	add.s64 	%rd1821, %rd1820, %rd2724;
	add.s64 	%rd1822, %rd1821, %rd1815;
	add.s64 	%rd1823, %rd1822, %rd1530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1279,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd1602;
	}
	shf.r.wrap.b32 	%r1281, %r1280, %r1279, 28;
	shf.r.wrap.b32 	%r1282, %r1279, %r1280, 28;
	mov.b64 	%rd1824, {%r1282, %r1281};
	shf.l.wrap.b32 	%r1283, %r1279, %r1280, 30;
	shf.l.wrap.b32 	%r1284, %r1280, %r1279, 30;
	mov.b64 	%rd1825, {%r1284, %r1283};
	xor.b64  	%rd1826, %rd1825, %rd1824;
	shf.l.wrap.b32 	%r1285, %r1279, %r1280, 25;
	shf.l.wrap.b32 	%r1286, %r1280, %r1279, 25;
	mov.b64 	%rd1827, {%r1286, %r1285};
	xor.b64  	%rd1828, %rd1826, %rd1827;
	xor.b64  	%rd1829, %rd1602, %rd1554;
	xor.b64  	%rd1830, %rd1602, %rd1578;
	and.b64  	%rd1831, %rd1830, %rd1829;
	xor.b64  	%rd1832, %rd1831, %rd1602;
	add.s64 	%rd1833, %rd1822, %rd1832;
	add.s64 	%rd1834, %rd1833, %rd1828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1287,%dummy}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd1823;
	}
	shf.r.wrap.b32 	%r1289, %r1288, %r1287, 14;
	shf.r.wrap.b32 	%r1290, %r1287, %r1288, 14;
	mov.b64 	%rd1835, {%r1290, %r1289};
	shf.r.wrap.b32 	%r1291, %r1288, %r1287, 18;
	shf.r.wrap.b32 	%r1292, %r1287, %r1288, 18;
	mov.b64 	%rd1836, {%r1292, %r1291};
	xor.b64  	%rd1837, %rd1836, %rd1835;
	shf.l.wrap.b32 	%r1293, %r1287, %r1288, 23;
	shf.l.wrap.b32 	%r1294, %r1288, %r1287, 23;
	mov.b64 	%rd1838, {%r1294, %r1293};
	xor.b64  	%rd1839, %rd1837, %rd1838;
	xor.b64  	%rd1840, %rd1567, %rd1591;
	and.b64  	%rd1841, %rd1823, %rd1840;
	xor.b64  	%rd1842, %rd1841, %rd1567;
	add.s64 	%rd1843, %rd1628, %rd1543;
	add.s64 	%rd1844, %rd1843, %rd2725;
	add.s64 	%rd1845, %rd1844, %rd1842;
	add.s64 	%rd1846, %rd1845, %rd1839;
	add.s64 	%rd1847, %rd1846, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd1834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd1834;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 28;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 28;
	mov.b64 	%rd1848, {%r1298, %r1297};
	shf.l.wrap.b32 	%r1299, %r1295, %r1296, 30;
	shf.l.wrap.b32 	%r1300, %r1296, %r1295, 30;
	mov.b64 	%rd1849, {%r1300, %r1299};
	xor.b64  	%rd1850, %rd1849, %rd1848;
	shf.l.wrap.b32 	%r1301, %r1295, %r1296, 25;
	shf.l.wrap.b32 	%r1302, %r1296, %r1295, 25;
	mov.b64 	%rd1851, {%r1302, %r1301};
	xor.b64  	%rd1852, %rd1850, %rd1851;
	xor.b64  	%rd1853, %rd1834, %rd1578;
	xor.b64  	%rd1854, %rd1834, %rd1602;
	and.b64  	%rd1855, %rd1854, %rd1853;
	xor.b64  	%rd1856, %rd1855, %rd1834;
	add.s64 	%rd1857, %rd1846, %rd1856;
	add.s64 	%rd1858, %rd1857, %rd1852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd1847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd1847;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 14;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 14;
	mov.b64 	%rd1859, {%r1306, %r1305};
	shf.r.wrap.b32 	%r1307, %r1304, %r1303, 18;
	shf.r.wrap.b32 	%r1308, %r1303, %r1304, 18;
	mov.b64 	%rd1860, {%r1308, %r1307};
	xor.b64  	%rd1861, %rd1860, %rd1859;
	shf.l.wrap.b32 	%r1309, %r1303, %r1304, 23;
	shf.l.wrap.b32 	%r1310, %r1304, %r1303, 23;
	mov.b64 	%rd1862, {%r1310, %r1309};
	xor.b64  	%rd1863, %rd1861, %rd1862;
	xor.b64  	%rd1864, %rd1823, %rd1591;
	and.b64  	%rd1865, %rd1847, %rd1864;
	xor.b64  	%rd1866, %rd1865, %rd1591;
	add.s64 	%rd1867, %rd1641, %rd1567;
	add.s64 	%rd1868, %rd1867, %rd2726;
	add.s64 	%rd1869, %rd1868, %rd1866;
	add.s64 	%rd1870, %rd1869, %rd1863;
	add.s64 	%rd1871, %rd1870, %rd1578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd1858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd1858;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 28;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 28;
	mov.b64 	%rd1872, {%r1314, %r1313};
	shf.l.wrap.b32 	%r1315, %r1311, %r1312, 30;
	shf.l.wrap.b32 	%r1316, %r1312, %r1311, 30;
	mov.b64 	%rd1873, {%r1316, %r1315};
	xor.b64  	%rd1874, %rd1873, %rd1872;
	shf.l.wrap.b32 	%r1317, %r1311, %r1312, 25;
	shf.l.wrap.b32 	%r1318, %r1312, %r1311, 25;
	mov.b64 	%rd1875, {%r1318, %r1317};
	xor.b64  	%rd1876, %rd1874, %rd1875;
	xor.b64  	%rd1877, %rd1858, %rd1602;
	xor.b64  	%rd1878, %rd1858, %rd1834;
	and.b64  	%rd1879, %rd1878, %rd1877;
	xor.b64  	%rd1880, %rd1879, %rd1858;
	add.s64 	%rd1881, %rd1870, %rd1880;
	add.s64 	%rd1882, %rd1881, %rd1876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1319,%dummy}, %rd1871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1320}, %rd1871;
	}
	shf.r.wrap.b32 	%r1321, %r1320, %r1319, 14;
	shf.r.wrap.b32 	%r1322, %r1319, %r1320, 14;
	mov.b64 	%rd1883, {%r1322, %r1321};
	shf.r.wrap.b32 	%r1323, %r1320, %r1319, 18;
	shf.r.wrap.b32 	%r1324, %r1319, %r1320, 18;
	mov.b64 	%rd1884, {%r1324, %r1323};
	xor.b64  	%rd1885, %rd1884, %rd1883;
	shf.l.wrap.b32 	%r1325, %r1319, %r1320, 23;
	shf.l.wrap.b32 	%r1326, %r1320, %r1319, 23;
	mov.b64 	%rd1886, {%r1326, %r1325};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	xor.b64  	%rd1888, %rd1847, %rd1823;
	and.b64  	%rd1889, %rd1871, %rd1888;
	xor.b64  	%rd1890, %rd1889, %rd1823;
	add.s64 	%rd1891, %rd1654, %rd1591;
	add.s64 	%rd1892, %rd1891, %rd2727;
	add.s64 	%rd1893, %rd1892, %rd1890;
	add.s64 	%rd1894, %rd1893, %rd1887;
	add.s64 	%rd1895, %rd1894, %rd1602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1327,%dummy}, %rd1882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1328}, %rd1882;
	}
	shf.r.wrap.b32 	%r1329, %r1328, %r1327, 28;
	shf.r.wrap.b32 	%r1330, %r1327, %r1328, 28;
	mov.b64 	%rd1896, {%r1330, %r1329};
	shf.l.wrap.b32 	%r1331, %r1327, %r1328, 30;
	shf.l.wrap.b32 	%r1332, %r1328, %r1327, 30;
	mov.b64 	%rd1897, {%r1332, %r1331};
	xor.b64  	%rd1898, %rd1897, %rd1896;
	shf.l.wrap.b32 	%r1333, %r1327, %r1328, 25;
	shf.l.wrap.b32 	%r1334, %r1328, %r1327, 25;
	mov.b64 	%rd1899, {%r1334, %r1333};
	xor.b64  	%rd1900, %rd1898, %rd1899;
	xor.b64  	%rd1901, %rd1882, %rd1834;
	xor.b64  	%rd1902, %rd1882, %rd1858;
	and.b64  	%rd1903, %rd1902, %rd1901;
	xor.b64  	%rd1904, %rd1903, %rd1882;
	add.s64 	%rd1905, %rd1894, %rd1904;
	add.s64 	%rd1906, %rd1905, %rd1900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1335,%dummy}, %rd1895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1336}, %rd1895;
	}
	shf.r.wrap.b32 	%r1337, %r1336, %r1335, 14;
	shf.r.wrap.b32 	%r1338, %r1335, %r1336, 14;
	mov.b64 	%rd1907, {%r1338, %r1337};
	shf.r.wrap.b32 	%r1339, %r1336, %r1335, 18;
	shf.r.wrap.b32 	%r1340, %r1335, %r1336, 18;
	mov.b64 	%rd1908, {%r1340, %r1339};
	xor.b64  	%rd1909, %rd1908, %rd1907;
	shf.l.wrap.b32 	%r1341, %r1335, %r1336, 23;
	shf.l.wrap.b32 	%r1342, %r1336, %r1335, 23;
	mov.b64 	%rd1910, {%r1342, %r1341};
	xor.b64  	%rd1911, %rd1909, %rd1910;
	xor.b64  	%rd1912, %rd1871, %rd1847;
	and.b64  	%rd1913, %rd1895, %rd1912;
	xor.b64  	%rd1914, %rd1913, %rd1847;
	add.s64 	%rd1915, %rd1823, %rd1667;
	add.s64 	%rd1916, %rd1915, %rd2728;
	add.s64 	%rd1917, %rd1916, %rd1914;
	add.s64 	%rd1918, %rd1917, %rd1911;
	add.s64 	%rd1919, %rd1918, %rd1834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd1906;
	}
	shf.r.wrap.b32 	%r1345, %r1344, %r1343, 28;
	shf.r.wrap.b32 	%r1346, %r1343, %r1344, 28;
	mov.b64 	%rd1920, {%r1346, %r1345};
	shf.l.wrap.b32 	%r1347, %r1343, %r1344, 30;
	shf.l.wrap.b32 	%r1348, %r1344, %r1343, 30;
	mov.b64 	%rd1921, {%r1348, %r1347};
	xor.b64  	%rd1922, %rd1921, %rd1920;
	shf.l.wrap.b32 	%r1349, %r1343, %r1344, 25;
	shf.l.wrap.b32 	%r1350, %r1344, %r1343, 25;
	mov.b64 	%rd1923, {%r1350, %r1349};
	xor.b64  	%rd1924, %rd1922, %rd1923;
	xor.b64  	%rd1925, %rd1906, %rd1858;
	xor.b64  	%rd1926, %rd1906, %rd1882;
	and.b64  	%rd1927, %rd1926, %rd1925;
	xor.b64  	%rd1928, %rd1927, %rd1906;
	add.s64 	%rd1929, %rd1918, %rd1928;
	add.s64 	%rd1930, %rd1929, %rd1924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd1919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd1919;
	}
	shf.r.wrap.b32 	%r1353, %r1352, %r1351, 14;
	shf.r.wrap.b32 	%r1354, %r1351, %r1352, 14;
	mov.b64 	%rd1931, {%r1354, %r1353};
	shf.r.wrap.b32 	%r1355, %r1352, %r1351, 18;
	shf.r.wrap.b32 	%r1356, %r1351, %r1352, 18;
	mov.b64 	%rd1932, {%r1356, %r1355};
	xor.b64  	%rd1933, %rd1932, %rd1931;
	shf.l.wrap.b32 	%r1357, %r1351, %r1352, 23;
	shf.l.wrap.b32 	%r1358, %r1352, %r1351, 23;
	mov.b64 	%rd1934, {%r1358, %r1357};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	xor.b64  	%rd1936, %rd1895, %rd1871;
	and.b64  	%rd1937, %rd1919, %rd1936;
	xor.b64  	%rd1938, %rd1937, %rd1871;
	add.s64 	%rd1939, %rd1847, %rd1680;
	add.s64 	%rd1940, %rd1939, %rd2729;
	add.s64 	%rd1941, %rd1940, %rd1938;
	add.s64 	%rd1942, %rd1941, %rd1935;
	add.s64 	%rd1943, %rd1942, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1359,%dummy}, %rd1930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1360}, %rd1930;
	}
	shf.r.wrap.b32 	%r1361, %r1360, %r1359, 28;
	shf.r.wrap.b32 	%r1362, %r1359, %r1360, 28;
	mov.b64 	%rd1944, {%r1362, %r1361};
	shf.l.wrap.b32 	%r1363, %r1359, %r1360, 30;
	shf.l.wrap.b32 	%r1364, %r1360, %r1359, 30;
	mov.b64 	%rd1945, {%r1364, %r1363};
	xor.b64  	%rd1946, %rd1945, %rd1944;
	shf.l.wrap.b32 	%r1365, %r1359, %r1360, 25;
	shf.l.wrap.b32 	%r1366, %r1360, %r1359, 25;
	mov.b64 	%rd1947, {%r1366, %r1365};
	xor.b64  	%rd1948, %rd1946, %rd1947;
	xor.b64  	%rd1949, %rd1930, %rd1882;
	xor.b64  	%rd1950, %rd1930, %rd1906;
	and.b64  	%rd1951, %rd1950, %rd1949;
	xor.b64  	%rd1952, %rd1951, %rd1930;
	add.s64 	%rd1953, %rd1942, %rd1952;
	add.s64 	%rd1954, %rd1953, %rd1948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd1943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1368}, %rd1943;
	}
	shf.r.wrap.b32 	%r1369, %r1368, %r1367, 14;
	shf.r.wrap.b32 	%r1370, %r1367, %r1368, 14;
	mov.b64 	%rd1955, {%r1370, %r1369};
	shf.r.wrap.b32 	%r1371, %r1368, %r1367, 18;
	shf.r.wrap.b32 	%r1372, %r1367, %r1368, 18;
	mov.b64 	%rd1956, {%r1372, %r1371};
	xor.b64  	%rd1957, %rd1956, %rd1955;
	shf.l.wrap.b32 	%r1373, %r1367, %r1368, 23;
	shf.l.wrap.b32 	%r1374, %r1368, %r1367, 23;
	mov.b64 	%rd1958, {%r1374, %r1373};
	xor.b64  	%rd1959, %rd1957, %rd1958;
	xor.b64  	%rd1960, %rd1919, %rd1895;
	and.b64  	%rd1961, %rd1943, %rd1960;
	xor.b64  	%rd1962, %rd1961, %rd1895;
	add.s64 	%rd1963, %rd1871, %rd1693;
	add.s64 	%rd1964, %rd1963, %rd2730;
	add.s64 	%rd1965, %rd1964, %rd1962;
	add.s64 	%rd1966, %rd1965, %rd1959;
	add.s64 	%rd1967, %rd1966, %rd1882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd1954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd1954;
	}
	shf.r.wrap.b32 	%r1377, %r1376, %r1375, 28;
	shf.r.wrap.b32 	%r1378, %r1375, %r1376, 28;
	mov.b64 	%rd1968, {%r1378, %r1377};
	shf.l.wrap.b32 	%r1379, %r1375, %r1376, 30;
	shf.l.wrap.b32 	%r1380, %r1376, %r1375, 30;
	mov.b64 	%rd1969, {%r1380, %r1379};
	xor.b64  	%rd1970, %rd1969, %rd1968;
	shf.l.wrap.b32 	%r1381, %r1375, %r1376, 25;
	shf.l.wrap.b32 	%r1382, %r1376, %r1375, 25;
	mov.b64 	%rd1971, {%r1382, %r1381};
	xor.b64  	%rd1972, %rd1970, %rd1971;
	xor.b64  	%rd1973, %rd1954, %rd1906;
	xor.b64  	%rd1974, %rd1954, %rd1930;
	and.b64  	%rd1975, %rd1974, %rd1973;
	xor.b64  	%rd1976, %rd1975, %rd1954;
	add.s64 	%rd1977, %rd1966, %rd1976;
	add.s64 	%rd1978, %rd1977, %rd1972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1383,%dummy}, %rd1967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1384}, %rd1967;
	}
	shf.r.wrap.b32 	%r1385, %r1384, %r1383, 14;
	shf.r.wrap.b32 	%r1386, %r1383, %r1384, 14;
	mov.b64 	%rd1979, {%r1386, %r1385};
	shf.r.wrap.b32 	%r1387, %r1384, %r1383, 18;
	shf.r.wrap.b32 	%r1388, %r1383, %r1384, 18;
	mov.b64 	%rd1980, {%r1388, %r1387};
	xor.b64  	%rd1981, %rd1980, %rd1979;
	shf.l.wrap.b32 	%r1389, %r1383, %r1384, 23;
	shf.l.wrap.b32 	%r1390, %r1384, %r1383, 23;
	mov.b64 	%rd1982, {%r1390, %r1389};
	xor.b64  	%rd1983, %rd1981, %rd1982;
	xor.b64  	%rd1984, %rd1943, %rd1919;
	and.b64  	%rd1985, %rd1967, %rd1984;
	xor.b64  	%rd1986, %rd1985, %rd1919;
	add.s64 	%rd1987, %rd1895, %rd1706;
	add.s64 	%rd1988, %rd1987, %rd2731;
	add.s64 	%rd1989, %rd1988, %rd1986;
	add.s64 	%rd1990, %rd1989, %rd1983;
	add.s64 	%rd1991, %rd1990, %rd1906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1391,%dummy}, %rd1978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd1978;
	}
	shf.r.wrap.b32 	%r1393, %r1392, %r1391, 28;
	shf.r.wrap.b32 	%r1394, %r1391, %r1392, 28;
	mov.b64 	%rd1992, {%r1394, %r1393};
	shf.l.wrap.b32 	%r1395, %r1391, %r1392, 30;
	shf.l.wrap.b32 	%r1396, %r1392, %r1391, 30;
	mov.b64 	%rd1993, {%r1396, %r1395};
	xor.b64  	%rd1994, %rd1993, %rd1992;
	shf.l.wrap.b32 	%r1397, %r1391, %r1392, 25;
	shf.l.wrap.b32 	%r1398, %r1392, %r1391, 25;
	mov.b64 	%rd1995, {%r1398, %r1397};
	xor.b64  	%rd1996, %rd1994, %rd1995;
	xor.b64  	%rd1997, %rd1978, %rd1930;
	xor.b64  	%rd1998, %rd1978, %rd1954;
	and.b64  	%rd1999, %rd1998, %rd1997;
	xor.b64  	%rd2000, %rd1999, %rd1978;
	add.s64 	%rd2001, %rd1990, %rd2000;
	add.s64 	%rd2002, %rd2001, %rd1996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd1991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd1991;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 14;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 14;
	mov.b64 	%rd2003, {%r1402, %r1401};
	shf.r.wrap.b32 	%r1403, %r1400, %r1399, 18;
	shf.r.wrap.b32 	%r1404, %r1399, %r1400, 18;
	mov.b64 	%rd2004, {%r1404, %r1403};
	xor.b64  	%rd2005, %rd2004, %rd2003;
	shf.l.wrap.b32 	%r1405, %r1399, %r1400, 23;
	shf.l.wrap.b32 	%r1406, %r1400, %r1399, 23;
	mov.b64 	%rd2006, {%r1406, %r1405};
	xor.b64  	%rd2007, %rd2005, %rd2006;
	xor.b64  	%rd2008, %rd1967, %rd1943;
	and.b64  	%rd2009, %rd1991, %rd2008;
	xor.b64  	%rd2010, %rd2009, %rd1943;
	add.s64 	%rd2011, %rd1919, %rd1719;
	add.s64 	%rd2012, %rd2011, %rd2732;
	add.s64 	%rd2013, %rd2012, %rd2010;
	add.s64 	%rd2014, %rd2013, %rd2007;
	add.s64 	%rd2015, %rd2014, %rd1930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd2002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd2002;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 28;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 28;
	mov.b64 	%rd2016, {%r1410, %r1409};
	shf.l.wrap.b32 	%r1411, %r1407, %r1408, 30;
	shf.l.wrap.b32 	%r1412, %r1408, %r1407, 30;
	mov.b64 	%rd2017, {%r1412, %r1411};
	xor.b64  	%rd2018, %rd2017, %rd2016;
	shf.l.wrap.b32 	%r1413, %r1407, %r1408, 25;
	shf.l.wrap.b32 	%r1414, %r1408, %r1407, 25;
	mov.b64 	%rd2019, {%r1414, %r1413};
	xor.b64  	%rd2020, %rd2018, %rd2019;
	xor.b64  	%rd2021, %rd2002, %rd1954;
	xor.b64  	%rd2022, %rd2002, %rd1978;
	and.b64  	%rd2023, %rd2022, %rd2021;
	xor.b64  	%rd2024, %rd2023, %rd2002;
	add.s64 	%rd2025, %rd2014, %rd2024;
	add.s64 	%rd2026, %rd2025, %rd2020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd2015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd2015;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 14;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 14;
	mov.b64 	%rd2027, {%r1418, %r1417};
	shf.r.wrap.b32 	%r1419, %r1416, %r1415, 18;
	shf.r.wrap.b32 	%r1420, %r1415, %r1416, 18;
	mov.b64 	%rd2028, {%r1420, %r1419};
	xor.b64  	%rd2029, %rd2028, %rd2027;
	shf.l.wrap.b32 	%r1421, %r1415, %r1416, 23;
	shf.l.wrap.b32 	%r1422, %r1416, %r1415, 23;
	mov.b64 	%rd2030, {%r1422, %r1421};
	xor.b64  	%rd2031, %rd2029, %rd2030;
	xor.b64  	%rd2032, %rd1991, %rd1967;
	and.b64  	%rd2033, %rd2015, %rd2032;
	xor.b64  	%rd2034, %rd2033, %rd1967;
	add.s64 	%rd2035, %rd1943, %rd1732;
	add.s64 	%rd2036, %rd2035, %rd2733;
	add.s64 	%rd2037, %rd2036, %rd2034;
	add.s64 	%rd2038, %rd2037, %rd2031;
	add.s64 	%rd2039, %rd2038, %rd1954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd2026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd2026;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 28;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 28;
	mov.b64 	%rd2040, {%r1426, %r1425};
	shf.l.wrap.b32 	%r1427, %r1423, %r1424, 30;
	shf.l.wrap.b32 	%r1428, %r1424, %r1423, 30;
	mov.b64 	%rd2041, {%r1428, %r1427};
	xor.b64  	%rd2042, %rd2041, %rd2040;
	shf.l.wrap.b32 	%r1429, %r1423, %r1424, 25;
	shf.l.wrap.b32 	%r1430, %r1424, %r1423, 25;
	mov.b64 	%rd2043, {%r1430, %r1429};
	xor.b64  	%rd2044, %rd2042, %rd2043;
	xor.b64  	%rd2045, %rd2026, %rd1978;
	xor.b64  	%rd2046, %rd2026, %rd2002;
	and.b64  	%rd2047, %rd2046, %rd2045;
	xor.b64  	%rd2048, %rd2047, %rd2026;
	add.s64 	%rd2049, %rd2038, %rd2048;
	add.s64 	%rd2050, %rd2049, %rd2044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1431,%dummy}, %rd2039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1432}, %rd2039;
	}
	shf.r.wrap.b32 	%r1433, %r1432, %r1431, 14;
	shf.r.wrap.b32 	%r1434, %r1431, %r1432, 14;
	mov.b64 	%rd2051, {%r1434, %r1433};
	shf.r.wrap.b32 	%r1435, %r1432, %r1431, 18;
	shf.r.wrap.b32 	%r1436, %r1431, %r1432, 18;
	mov.b64 	%rd2052, {%r1436, %r1435};
	xor.b64  	%rd2053, %rd2052, %rd2051;
	shf.l.wrap.b32 	%r1437, %r1431, %r1432, 23;
	shf.l.wrap.b32 	%r1438, %r1432, %r1431, 23;
	mov.b64 	%rd2054, {%r1438, %r1437};
	xor.b64  	%rd2055, %rd2053, %rd2054;
	xor.b64  	%rd2056, %rd2015, %rd1991;
	and.b64  	%rd2057, %rd2039, %rd2056;
	xor.b64  	%rd2058, %rd2057, %rd1991;
	add.s64 	%rd2059, %rd1967, %rd1745;
	add.s64 	%rd2060, %rd2059, %rd2734;
	add.s64 	%rd2061, %rd2060, %rd2058;
	add.s64 	%rd2062, %rd2061, %rd2055;
	add.s64 	%rd2063, %rd2062, %rd1978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1439,%dummy}, %rd2050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1440}, %rd2050;
	}
	shf.r.wrap.b32 	%r1441, %r1440, %r1439, 28;
	shf.r.wrap.b32 	%r1442, %r1439, %r1440, 28;
	mov.b64 	%rd2064, {%r1442, %r1441};
	shf.l.wrap.b32 	%r1443, %r1439, %r1440, 30;
	shf.l.wrap.b32 	%r1444, %r1440, %r1439, 30;
	mov.b64 	%rd2065, {%r1444, %r1443};
	xor.b64  	%rd2066, %rd2065, %rd2064;
	shf.l.wrap.b32 	%r1445, %r1439, %r1440, 25;
	shf.l.wrap.b32 	%r1446, %r1440, %r1439, 25;
	mov.b64 	%rd2067, {%r1446, %r1445};
	xor.b64  	%rd2068, %rd2066, %rd2067;
	xor.b64  	%rd2069, %rd2050, %rd2002;
	xor.b64  	%rd2070, %rd2050, %rd2026;
	and.b64  	%rd2071, %rd2070, %rd2069;
	xor.b64  	%rd2072, %rd2071, %rd2050;
	add.s64 	%rd2073, %rd2062, %rd2072;
	add.s64 	%rd2074, %rd2073, %rd2068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd2063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd2063;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 14;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 14;
	mov.b64 	%rd2075, {%r1450, %r1449};
	shf.r.wrap.b32 	%r1451, %r1448, %r1447, 18;
	shf.r.wrap.b32 	%r1452, %r1447, %r1448, 18;
	mov.b64 	%rd2076, {%r1452, %r1451};
	xor.b64  	%rd2077, %rd2076, %rd2075;
	shf.l.wrap.b32 	%r1453, %r1447, %r1448, 23;
	shf.l.wrap.b32 	%r1454, %r1448, %r1447, 23;
	mov.b64 	%rd2078, {%r1454, %r1453};
	xor.b64  	%rd2079, %rd2077, %rd2078;
	xor.b64  	%rd2080, %rd2039, %rd2015;
	and.b64  	%rd2081, %rd2063, %rd2080;
	xor.b64  	%rd2082, %rd2081, %rd2015;
	add.s64 	%rd2083, %rd1991, %rd1758;
	add.s64 	%rd2084, %rd2083, %rd2735;
	add.s64 	%rd2085, %rd2084, %rd2082;
	add.s64 	%rd2086, %rd2085, %rd2079;
	add.s64 	%rd2087, %rd2086, %rd2002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1455,%dummy}, %rd2074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1456}, %rd2074;
	}
	shf.r.wrap.b32 	%r1457, %r1456, %r1455, 28;
	shf.r.wrap.b32 	%r1458, %r1455, %r1456, 28;
	mov.b64 	%rd2088, {%r1458, %r1457};
	shf.l.wrap.b32 	%r1459, %r1455, %r1456, 30;
	shf.l.wrap.b32 	%r1460, %r1456, %r1455, 30;
	mov.b64 	%rd2089, {%r1460, %r1459};
	xor.b64  	%rd2090, %rd2089, %rd2088;
	shf.l.wrap.b32 	%r1461, %r1455, %r1456, 25;
	shf.l.wrap.b32 	%r1462, %r1456, %r1455, 25;
	mov.b64 	%rd2091, {%r1462, %r1461};
	xor.b64  	%rd2092, %rd2090, %rd2091;
	xor.b64  	%rd2093, %rd2074, %rd2026;
	xor.b64  	%rd2094, %rd2074, %rd2050;
	and.b64  	%rd2095, %rd2094, %rd2093;
	xor.b64  	%rd2096, %rd2095, %rd2074;
	add.s64 	%rd2097, %rd2086, %rd2096;
	add.s64 	%rd2098, %rd2097, %rd2092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1463,%dummy}, %rd2087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1464}, %rd2087;
	}
	shf.r.wrap.b32 	%r1465, %r1464, %r1463, 14;
	shf.r.wrap.b32 	%r1466, %r1463, %r1464, 14;
	mov.b64 	%rd2099, {%r1466, %r1465};
	shf.r.wrap.b32 	%r1467, %r1464, %r1463, 18;
	shf.r.wrap.b32 	%r1468, %r1463, %r1464, 18;
	mov.b64 	%rd2100, {%r1468, %r1467};
	xor.b64  	%rd2101, %rd2100, %rd2099;
	shf.l.wrap.b32 	%r1469, %r1463, %r1464, 23;
	shf.l.wrap.b32 	%r1470, %r1464, %r1463, 23;
	mov.b64 	%rd2102, {%r1470, %r1469};
	xor.b64  	%rd2103, %rd2101, %rd2102;
	xor.b64  	%rd2104, %rd2063, %rd2039;
	and.b64  	%rd2105, %rd2087, %rd2104;
	xor.b64  	%rd2106, %rd2105, %rd2039;
	add.s64 	%rd2107, %rd2015, %rd1771;
	add.s64 	%rd2108, %rd2107, %rd2736;
	add.s64 	%rd2109, %rd2108, %rd2106;
	add.s64 	%rd2110, %rd2109, %rd2103;
	add.s64 	%rd2111, %rd2110, %rd2026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd2098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd2098;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 28;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 28;
	mov.b64 	%rd2112, {%r1474, %r1473};
	shf.l.wrap.b32 	%r1475, %r1471, %r1472, 30;
	shf.l.wrap.b32 	%r1476, %r1472, %r1471, 30;
	mov.b64 	%rd2113, {%r1476, %r1475};
	xor.b64  	%rd2114, %rd2113, %rd2112;
	shf.l.wrap.b32 	%r1477, %r1471, %r1472, 25;
	shf.l.wrap.b32 	%r1478, %r1472, %r1471, 25;
	mov.b64 	%rd2115, {%r1478, %r1477};
	xor.b64  	%rd2116, %rd2114, %rd2115;
	xor.b64  	%rd2117, %rd2098, %rd2050;
	xor.b64  	%rd2118, %rd2098, %rd2074;
	and.b64  	%rd2119, %rd2118, %rd2117;
	xor.b64  	%rd2120, %rd2119, %rd2098;
	add.s64 	%rd2121, %rd2110, %rd2120;
	add.s64 	%rd2122, %rd2121, %rd2116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1479,%dummy}, %rd2111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1480}, %rd2111;
	}
	shf.r.wrap.b32 	%r1481, %r1480, %r1479, 14;
	shf.r.wrap.b32 	%r1482, %r1479, %r1480, 14;
	mov.b64 	%rd2123, {%r1482, %r1481};
	shf.r.wrap.b32 	%r1483, %r1480, %r1479, 18;
	shf.r.wrap.b32 	%r1484, %r1479, %r1480, 18;
	mov.b64 	%rd2124, {%r1484, %r1483};
	xor.b64  	%rd2125, %rd2124, %rd2123;
	shf.l.wrap.b32 	%r1485, %r1479, %r1480, 23;
	shf.l.wrap.b32 	%r1486, %r1480, %r1479, 23;
	mov.b64 	%rd2126, {%r1486, %r1485};
	xor.b64  	%rd2127, %rd2125, %rd2126;
	xor.b64  	%rd2128, %rd2087, %rd2063;
	and.b64  	%rd2129, %rd2111, %rd2128;
	xor.b64  	%rd2130, %rd2129, %rd2063;
	add.s64 	%rd2131, %rd2039, %rd1784;
	add.s64 	%rd2132, %rd2131, %rd2737;
	add.s64 	%rd2133, %rd2132, %rd2130;
	add.s64 	%rd2134, %rd2133, %rd2127;
	add.s64 	%rd2135, %rd2134, %rd2050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1487,%dummy}, %rd2122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1488}, %rd2122;
	}
	shf.r.wrap.b32 	%r1489, %r1488, %r1487, 28;
	shf.r.wrap.b32 	%r1490, %r1487, %r1488, 28;
	mov.b64 	%rd2136, {%r1490, %r1489};
	shf.l.wrap.b32 	%r1491, %r1487, %r1488, 30;
	shf.l.wrap.b32 	%r1492, %r1488, %r1487, 30;
	mov.b64 	%rd2137, {%r1492, %r1491};
	xor.b64  	%rd2138, %rd2137, %rd2136;
	shf.l.wrap.b32 	%r1493, %r1487, %r1488, 25;
	shf.l.wrap.b32 	%r1494, %r1488, %r1487, 25;
	mov.b64 	%rd2139, {%r1494, %r1493};
	xor.b64  	%rd2140, %rd2138, %rd2139;
	xor.b64  	%rd2141, %rd2122, %rd2074;
	xor.b64  	%rd2142, %rd2122, %rd2098;
	and.b64  	%rd2143, %rd2142, %rd2141;
	xor.b64  	%rd2144, %rd2143, %rd2122;
	add.s64 	%rd2145, %rd2134, %rd2144;
	add.s64 	%rd2146, %rd2145, %rd2140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd2135;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 14;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 14;
	mov.b64 	%rd2147, {%r1498, %r1497};
	shf.r.wrap.b32 	%r1499, %r1496, %r1495, 18;
	shf.r.wrap.b32 	%r1500, %r1495, %r1496, 18;
	mov.b64 	%rd2148, {%r1500, %r1499};
	xor.b64  	%rd2149, %rd2148, %rd2147;
	shf.l.wrap.b32 	%r1501, %r1495, %r1496, 23;
	shf.l.wrap.b32 	%r1502, %r1496, %r1495, 23;
	mov.b64 	%rd2150, {%r1502, %r1501};
	xor.b64  	%rd2151, %rd2149, %rd2150;
	xor.b64  	%rd2152, %rd2111, %rd2087;
	and.b64  	%rd2153, %rd2135, %rd2152;
	xor.b64  	%rd2154, %rd2153, %rd2087;
	add.s64 	%rd2155, %rd2063, %rd1797;
	add.s64 	%rd2156, %rd2155, %rd2738;
	add.s64 	%rd2157, %rd2156, %rd2154;
	add.s64 	%rd2158, %rd2157, %rd2151;
	add.s64 	%rd2159, %rd2158, %rd2074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd2146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd2146;
	}
	shf.r.wrap.b32 	%r1505, %r1504, %r1503, 28;
	shf.r.wrap.b32 	%r1506, %r1503, %r1504, 28;
	mov.b64 	%rd2160, {%r1506, %r1505};
	shf.l.wrap.b32 	%r1507, %r1503, %r1504, 30;
	shf.l.wrap.b32 	%r1508, %r1504, %r1503, 30;
	mov.b64 	%rd2161, {%r1508, %r1507};
	xor.b64  	%rd2162, %rd2161, %rd2160;
	shf.l.wrap.b32 	%r1509, %r1503, %r1504, 25;
	shf.l.wrap.b32 	%r1510, %r1504, %r1503, 25;
	mov.b64 	%rd2163, {%r1510, %r1509};
	xor.b64  	%rd2164, %rd2162, %rd2163;
	xor.b64  	%rd2165, %rd2146, %rd2098;
	xor.b64  	%rd2166, %rd2146, %rd2122;
	and.b64  	%rd2167, %rd2166, %rd2165;
	xor.b64  	%rd2168, %rd2167, %rd2146;
	add.s64 	%rd2169, %rd2158, %rd2168;
	add.s64 	%rd2170, %rd2169, %rd2164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd2159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd2159;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 14;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 14;
	mov.b64 	%rd2171, {%r1514, %r1513};
	shf.r.wrap.b32 	%r1515, %r1512, %r1511, 18;
	shf.r.wrap.b32 	%r1516, %r1511, %r1512, 18;
	mov.b64 	%rd2172, {%r1516, %r1515};
	xor.b64  	%rd2173, %rd2172, %rd2171;
	shf.l.wrap.b32 	%r1517, %r1511, %r1512, 23;
	shf.l.wrap.b32 	%r1518, %r1512, %r1511, 23;
	mov.b64 	%rd2174, {%r1518, %r1517};
	xor.b64  	%rd2175, %rd2173, %rd2174;
	xor.b64  	%rd2176, %rd2135, %rd2111;
	and.b64  	%rd2177, %rd2159, %rd2176;
	xor.b64  	%rd2178, %rd2177, %rd2111;
	add.s64 	%rd2179, %rd2087, %rd1810;
	add.s64 	%rd2180, %rd2179, %rd2739;
	add.s64 	%rd2181, %rd2180, %rd2178;
	add.s64 	%rd2182, %rd2181, %rd2175;
	add.s64 	%rd2183, %rd2182, %rd2098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1519,%dummy}, %rd2170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1520}, %rd2170;
	}
	shf.r.wrap.b32 	%r1521, %r1520, %r1519, 28;
	shf.r.wrap.b32 	%r1522, %r1519, %r1520, 28;
	mov.b64 	%rd2184, {%r1522, %r1521};
	shf.l.wrap.b32 	%r1523, %r1519, %r1520, 30;
	shf.l.wrap.b32 	%r1524, %r1520, %r1519, 30;
	mov.b64 	%rd2185, {%r1524, %r1523};
	xor.b64  	%rd2186, %rd2185, %rd2184;
	shf.l.wrap.b32 	%r1525, %r1519, %r1520, 25;
	shf.l.wrap.b32 	%r1526, %r1520, %r1519, 25;
	mov.b64 	%rd2187, {%r1526, %r1525};
	xor.b64  	%rd2188, %rd2186, %rd2187;
	xor.b64  	%rd2189, %rd2170, %rd2122;
	xor.b64  	%rd2190, %rd2170, %rd2146;
	and.b64  	%rd2191, %rd2190, %rd2189;
	xor.b64  	%rd2192, %rd2191, %rd2170;
	add.s64 	%rd2193, %rd2182, %rd2192;
	add.s64 	%rd2194, %rd2193, %rd2188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1527,%dummy}, %rd1797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1528}, %rd1797;
	}
	shf.r.wrap.b32 	%r1529, %r1528, %r1527, 19;
	shf.r.wrap.b32 	%r1530, %r1527, %r1528, 19;
	mov.b64 	%rd2195, {%r1530, %r1529};
	shf.l.wrap.b32 	%r1531, %r1527, %r1528, 3;
	shf.l.wrap.b32 	%r1532, %r1528, %r1527, 3;
	mov.b64 	%rd2196, {%r1532, %r1531};
	shr.u64 	%rd2197, %rd1797, 6;
	xor.b64  	%rd2198, %rd2195, %rd2197;
	xor.b64  	%rd2199, %rd2198, %rd2196;
	shf.r.wrap.b32 	%r1533, %r1142, %r1141, 1;
	shf.r.wrap.b32 	%r1534, %r1141, %r1142, 1;
	mov.b64 	%rd2200, {%r1534, %r1533};
	shf.r.wrap.b32 	%r1535, %r1142, %r1141, 8;
	shf.r.wrap.b32 	%r1536, %r1141, %r1142, 8;
	mov.b64 	%rd2201, {%r1536, %r1535};
	shr.u64 	%rd2202, %rd1628, 7;
	xor.b64  	%rd2203, %rd2200, %rd2202;
	xor.b64  	%rd2204, %rd2203, %rd2201;
	add.s64 	%rd2205, %rd1615, %rd1732;
	add.s64 	%rd2206, %rd2205, %rd2199;
	add.s64 	%rd2207, %rd2206, %rd2204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1537,%dummy}, %rd1810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1538}, %rd1810;
	}
	shf.r.wrap.b32 	%r1539, %r1538, %r1537, 19;
	shf.r.wrap.b32 	%r1540, %r1537, %r1538, 19;
	mov.b64 	%rd2208, {%r1540, %r1539};
	shf.l.wrap.b32 	%r1541, %r1537, %r1538, 3;
	shf.l.wrap.b32 	%r1542, %r1538, %r1537, 3;
	mov.b64 	%rd2209, {%r1542, %r1541};
	shr.u64 	%rd2210, %rd1810, 6;
	xor.b64  	%rd2211, %rd2208, %rd2210;
	xor.b64  	%rd2212, %rd2211, %rd2209;
	shf.r.wrap.b32 	%r1543, %r1152, %r1151, 1;
	shf.r.wrap.b32 	%r1544, %r1151, %r1152, 1;
	mov.b64 	%rd2213, {%r1544, %r1543};
	shf.r.wrap.b32 	%r1545, %r1152, %r1151, 8;
	shf.r.wrap.b32 	%r1546, %r1151, %r1152, 8;
	mov.b64 	%rd2214, {%r1546, %r1545};
	shr.u64 	%rd2215, %rd1641, 7;
	xor.b64  	%rd2216, %rd2213, %rd2215;
	xor.b64  	%rd2217, %rd2216, %rd2214;
	add.s64 	%rd2218, %rd1628, %rd1745;
	add.s64 	%rd2219, %rd2218, %rd2212;
	add.s64 	%rd2220, %rd2219, %rd2217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1547,%dummy}, %rd2207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1548}, %rd2207;
	}
	shf.r.wrap.b32 	%r1549, %r1548, %r1547, 19;
	shf.r.wrap.b32 	%r1550, %r1547, %r1548, 19;
	mov.b64 	%rd2221, {%r1550, %r1549};
	shf.l.wrap.b32 	%r1551, %r1547, %r1548, 3;
	shf.l.wrap.b32 	%r1552, %r1548, %r1547, 3;
	mov.b64 	%rd2222, {%r1552, %r1551};
	shr.u64 	%rd2223, %rd2207, 6;
	xor.b64  	%rd2224, %rd2221, %rd2223;
	xor.b64  	%rd2225, %rd2224, %rd2222;
	shf.r.wrap.b32 	%r1553, %r1162, %r1161, 1;
	shf.r.wrap.b32 	%r1554, %r1161, %r1162, 1;
	mov.b64 	%rd2226, {%r1554, %r1553};
	shf.r.wrap.b32 	%r1555, %r1162, %r1161, 8;
	shf.r.wrap.b32 	%r1556, %r1161, %r1162, 8;
	mov.b64 	%rd2227, {%r1556, %r1555};
	shr.u64 	%rd2228, %rd1654, 7;
	xor.b64  	%rd2229, %rd2226, %rd2228;
	xor.b64  	%rd2230, %rd2229, %rd2227;
	add.s64 	%rd2231, %rd1641, %rd1758;
	add.s64 	%rd2232, %rd2231, %rd2225;
	add.s64 	%rd2233, %rd2232, %rd2230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1557,%dummy}, %rd2220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1558}, %rd2220;
	}
	shf.r.wrap.b32 	%r1559, %r1558, %r1557, 19;
	shf.r.wrap.b32 	%r1560, %r1557, %r1558, 19;
	mov.b64 	%rd2234, {%r1560, %r1559};
	shf.l.wrap.b32 	%r1561, %r1557, %r1558, 3;
	shf.l.wrap.b32 	%r1562, %r1558, %r1557, 3;
	mov.b64 	%rd2235, {%r1562, %r1561};
	shr.u64 	%rd2236, %rd2220, 6;
	xor.b64  	%rd2237, %rd2234, %rd2236;
	xor.b64  	%rd2238, %rd2237, %rd2235;
	shf.r.wrap.b32 	%r1563, %r1172, %r1171, 1;
	shf.r.wrap.b32 	%r1564, %r1171, %r1172, 1;
	mov.b64 	%rd2239, {%r1564, %r1563};
	shf.r.wrap.b32 	%r1565, %r1172, %r1171, 8;
	shf.r.wrap.b32 	%r1566, %r1171, %r1172, 8;
	mov.b64 	%rd2240, {%r1566, %r1565};
	shr.u64 	%rd2241, %rd1667, 7;
	xor.b64  	%rd2242, %rd2239, %rd2241;
	xor.b64  	%rd2243, %rd2242, %rd2240;
	add.s64 	%rd2244, %rd1654, %rd1771;
	add.s64 	%rd2245, %rd2244, %rd2238;
	add.s64 	%rd2246, %rd2245, %rd2243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1567,%dummy}, %rd2233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1568}, %rd2233;
	}
	shf.r.wrap.b32 	%r1569, %r1568, %r1567, 19;
	shf.r.wrap.b32 	%r1570, %r1567, %r1568, 19;
	mov.b64 	%rd2247, {%r1570, %r1569};
	shf.l.wrap.b32 	%r1571, %r1567, %r1568, 3;
	shf.l.wrap.b32 	%r1572, %r1568, %r1567, 3;
	mov.b64 	%rd2248, {%r1572, %r1571};
	shr.u64 	%rd2249, %rd2233, 6;
	xor.b64  	%rd2250, %rd2247, %rd2249;
	xor.b64  	%rd2251, %rd2250, %rd2248;
	shf.r.wrap.b32 	%r1573, %r1182, %r1181, 1;
	shf.r.wrap.b32 	%r1574, %r1181, %r1182, 1;
	mov.b64 	%rd2252, {%r1574, %r1573};
	shf.r.wrap.b32 	%r1575, %r1182, %r1181, 8;
	shf.r.wrap.b32 	%r1576, %r1181, %r1182, 8;
	mov.b64 	%rd2253, {%r1576, %r1575};
	shr.u64 	%rd2254, %rd1680, 7;
	xor.b64  	%rd2255, %rd2252, %rd2254;
	xor.b64  	%rd2256, %rd2255, %rd2253;
	add.s64 	%rd2257, %rd1667, %rd1784;
	add.s64 	%rd2258, %rd2257, %rd2251;
	add.s64 	%rd2259, %rd2258, %rd2256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1577,%dummy}, %rd2246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1578}, %rd2246;
	}
	shf.r.wrap.b32 	%r1579, %r1578, %r1577, 19;
	shf.r.wrap.b32 	%r1580, %r1577, %r1578, 19;
	mov.b64 	%rd2260, {%r1580, %r1579};
	shf.l.wrap.b32 	%r1581, %r1577, %r1578, 3;
	shf.l.wrap.b32 	%r1582, %r1578, %r1577, 3;
	mov.b64 	%rd2261, {%r1582, %r1581};
	shr.u64 	%rd2262, %rd2246, 6;
	xor.b64  	%rd2263, %rd2260, %rd2262;
	xor.b64  	%rd2264, %rd2263, %rd2261;
	shf.r.wrap.b32 	%r1583, %r1192, %r1191, 1;
	shf.r.wrap.b32 	%r1584, %r1191, %r1192, 1;
	mov.b64 	%rd2265, {%r1584, %r1583};
	shf.r.wrap.b32 	%r1585, %r1192, %r1191, 8;
	shf.r.wrap.b32 	%r1586, %r1191, %r1192, 8;
	mov.b64 	%rd2266, {%r1586, %r1585};
	shr.u64 	%rd2267, %rd1693, 7;
	xor.b64  	%rd2268, %rd2265, %rd2267;
	xor.b64  	%rd2269, %rd2268, %rd2266;
	add.s64 	%rd2270, %rd1680, %rd1797;
	add.s64 	%rd2271, %rd2270, %rd2264;
	add.s64 	%rd2272, %rd2271, %rd2269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1587,%dummy}, %rd2259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1588}, %rd2259;
	}
	shf.r.wrap.b32 	%r1589, %r1588, %r1587, 19;
	shf.r.wrap.b32 	%r1590, %r1587, %r1588, 19;
	mov.b64 	%rd2273, {%r1590, %r1589};
	shf.l.wrap.b32 	%r1591, %r1587, %r1588, 3;
	shf.l.wrap.b32 	%r1592, %r1588, %r1587, 3;
	mov.b64 	%rd2274, {%r1592, %r1591};
	shr.u64 	%rd2275, %rd2259, 6;
	xor.b64  	%rd2276, %rd2273, %rd2275;
	xor.b64  	%rd2277, %rd2276, %rd2274;
	shf.r.wrap.b32 	%r1593, %r1202, %r1201, 1;
	shf.r.wrap.b32 	%r1594, %r1201, %r1202, 1;
	mov.b64 	%rd2278, {%r1594, %r1593};
	shf.r.wrap.b32 	%r1595, %r1202, %r1201, 8;
	shf.r.wrap.b32 	%r1596, %r1201, %r1202, 8;
	mov.b64 	%rd2279, {%r1596, %r1595};
	shr.u64 	%rd2280, %rd1706, 7;
	xor.b64  	%rd2281, %rd2278, %rd2280;
	xor.b64  	%rd2282, %rd2281, %rd2279;
	add.s64 	%rd2283, %rd1693, %rd1810;
	add.s64 	%rd2284, %rd2283, %rd2277;
	add.s64 	%rd2285, %rd2284, %rd2282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1597,%dummy}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1598}, %rd2272;
	}
	shf.r.wrap.b32 	%r1599, %r1598, %r1597, 19;
	shf.r.wrap.b32 	%r1600, %r1597, %r1598, 19;
	mov.b64 	%rd2286, {%r1600, %r1599};
	shf.l.wrap.b32 	%r1601, %r1597, %r1598, 3;
	shf.l.wrap.b32 	%r1602, %r1598, %r1597, 3;
	mov.b64 	%rd2287, {%r1602, %r1601};
	shr.u64 	%rd2288, %rd2272, 6;
	xor.b64  	%rd2289, %rd2286, %rd2288;
	xor.b64  	%rd2290, %rd2289, %rd2287;
	shf.r.wrap.b32 	%r1603, %r1212, %r1211, 1;
	shf.r.wrap.b32 	%r1604, %r1211, %r1212, 1;
	mov.b64 	%rd2291, {%r1604, %r1603};
	shf.r.wrap.b32 	%r1605, %r1212, %r1211, 8;
	shf.r.wrap.b32 	%r1606, %r1211, %r1212, 8;
	mov.b64 	%rd2292, {%r1606, %r1605};
	shr.u64 	%rd2293, %rd1719, 7;
	xor.b64  	%rd2294, %rd2291, %rd2293;
	xor.b64  	%rd2295, %rd2294, %rd2292;
	add.s64 	%rd2296, %rd2207, %rd1706;
	add.s64 	%rd2297, %rd2296, %rd2290;
	add.s64 	%rd2298, %rd2297, %rd2295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1607,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1608}, %rd2285;
	}
	shf.r.wrap.b32 	%r1609, %r1608, %r1607, 19;
	shf.r.wrap.b32 	%r1610, %r1607, %r1608, 19;
	mov.b64 	%rd2299, {%r1610, %r1609};
	shf.l.wrap.b32 	%r1611, %r1607, %r1608, 3;
	shf.l.wrap.b32 	%r1612, %r1608, %r1607, 3;
	mov.b64 	%rd2300, {%r1612, %r1611};
	shr.u64 	%rd2301, %rd2285, 6;
	xor.b64  	%rd2302, %rd2299, %rd2301;
	xor.b64  	%rd2303, %rd2302, %rd2300;
	shf.r.wrap.b32 	%r1613, %r1222, %r1221, 1;
	shf.r.wrap.b32 	%r1614, %r1221, %r1222, 1;
	mov.b64 	%rd2304, {%r1614, %r1613};
	shf.r.wrap.b32 	%r1615, %r1222, %r1221, 8;
	shf.r.wrap.b32 	%r1616, %r1221, %r1222, 8;
	mov.b64 	%rd2305, {%r1616, %r1615};
	shr.u64 	%rd2306, %rd1732, 7;
	xor.b64  	%rd2307, %rd2304, %rd2306;
	xor.b64  	%rd2308, %rd2307, %rd2305;
	add.s64 	%rd2309, %rd2220, %rd1719;
	add.s64 	%rd2310, %rd2309, %rd2303;
	add.s64 	%rd2311, %rd2310, %rd2308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1617,%dummy}, %rd2298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1618}, %rd2298;
	}
	shf.r.wrap.b32 	%r1619, %r1618, %r1617, 19;
	shf.r.wrap.b32 	%r1620, %r1617, %r1618, 19;
	mov.b64 	%rd2312, {%r1620, %r1619};
	shf.l.wrap.b32 	%r1621, %r1617, %r1618, 3;
	shf.l.wrap.b32 	%r1622, %r1618, %r1617, 3;
	mov.b64 	%rd2313, {%r1622, %r1621};
	shr.u64 	%rd2314, %rd2298, 6;
	xor.b64  	%rd2315, %rd2312, %rd2314;
	xor.b64  	%rd2316, %rd2315, %rd2313;
	shf.r.wrap.b32 	%r1623, %r1232, %r1231, 1;
	shf.r.wrap.b32 	%r1624, %r1231, %r1232, 1;
	mov.b64 	%rd2317, {%r1624, %r1623};
	shf.r.wrap.b32 	%r1625, %r1232, %r1231, 8;
	shf.r.wrap.b32 	%r1626, %r1231, %r1232, 8;
	mov.b64 	%rd2318, {%r1626, %r1625};
	shr.u64 	%rd2319, %rd1745, 7;
	xor.b64  	%rd2320, %rd2317, %rd2319;
	xor.b64  	%rd2321, %rd2320, %rd2318;
	add.s64 	%rd2322, %rd2233, %rd1732;
	add.s64 	%rd2323, %rd2322, %rd2316;
	add.s64 	%rd2324, %rd2323, %rd2321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1627,%dummy}, %rd2311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1628}, %rd2311;
	}
	shf.r.wrap.b32 	%r1629, %r1628, %r1627, 19;
	shf.r.wrap.b32 	%r1630, %r1627, %r1628, 19;
	mov.b64 	%rd2325, {%r1630, %r1629};
	shf.l.wrap.b32 	%r1631, %r1627, %r1628, 3;
	shf.l.wrap.b32 	%r1632, %r1628, %r1627, 3;
	mov.b64 	%rd2326, {%r1632, %r1631};
	shr.u64 	%rd2327, %rd2311, 6;
	xor.b64  	%rd2328, %rd2325, %rd2327;
	xor.b64  	%rd2329, %rd2328, %rd2326;
	shf.r.wrap.b32 	%r1633, %r1242, %r1241, 1;
	shf.r.wrap.b32 	%r1634, %r1241, %r1242, 1;
	mov.b64 	%rd2330, {%r1634, %r1633};
	shf.r.wrap.b32 	%r1635, %r1242, %r1241, 8;
	shf.r.wrap.b32 	%r1636, %r1241, %r1242, 8;
	mov.b64 	%rd2331, {%r1636, %r1635};
	shr.u64 	%rd2332, %rd1758, 7;
	xor.b64  	%rd2333, %rd2330, %rd2332;
	xor.b64  	%rd2334, %rd2333, %rd2331;
	add.s64 	%rd2335, %rd2246, %rd1745;
	add.s64 	%rd2336, %rd2335, %rd2329;
	add.s64 	%rd2337, %rd2336, %rd2334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1637,%dummy}, %rd2324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1638}, %rd2324;
	}
	shf.r.wrap.b32 	%r1639, %r1638, %r1637, 19;
	shf.r.wrap.b32 	%r1640, %r1637, %r1638, 19;
	mov.b64 	%rd2338, {%r1640, %r1639};
	shf.l.wrap.b32 	%r1641, %r1637, %r1638, 3;
	shf.l.wrap.b32 	%r1642, %r1638, %r1637, 3;
	mov.b64 	%rd2339, {%r1642, %r1641};
	shr.u64 	%rd2340, %rd2324, 6;
	xor.b64  	%rd2341, %rd2338, %rd2340;
	xor.b64  	%rd2342, %rd2341, %rd2339;
	shf.r.wrap.b32 	%r1643, %r1252, %r1251, 1;
	shf.r.wrap.b32 	%r1644, %r1251, %r1252, 1;
	mov.b64 	%rd2343, {%r1644, %r1643};
	shf.r.wrap.b32 	%r1645, %r1252, %r1251, 8;
	shf.r.wrap.b32 	%r1646, %r1251, %r1252, 8;
	mov.b64 	%rd2344, {%r1646, %r1645};
	shr.u64 	%rd2345, %rd1771, 7;
	xor.b64  	%rd2346, %rd2343, %rd2345;
	xor.b64  	%rd2347, %rd2346, %rd2344;
	add.s64 	%rd2348, %rd2259, %rd1758;
	add.s64 	%rd2349, %rd2348, %rd2342;
	add.s64 	%rd2350, %rd2349, %rd2347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1647,%dummy}, %rd2337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1648}, %rd2337;
	}
	shf.r.wrap.b32 	%r1649, %r1648, %r1647, 19;
	shf.r.wrap.b32 	%r1650, %r1647, %r1648, 19;
	mov.b64 	%rd2351, {%r1650, %r1649};
	shf.l.wrap.b32 	%r1651, %r1647, %r1648, 3;
	shf.l.wrap.b32 	%r1652, %r1648, %r1647, 3;
	mov.b64 	%rd2352, {%r1652, %r1651};
	shr.u64 	%rd2353, %rd2337, 6;
	xor.b64  	%rd2354, %rd2351, %rd2353;
	xor.b64  	%rd2355, %rd2354, %rd2352;
	shf.r.wrap.b32 	%r1653, %r1262, %r1261, 1;
	shf.r.wrap.b32 	%r1654, %r1261, %r1262, 1;
	mov.b64 	%rd2356, {%r1654, %r1653};
	shf.r.wrap.b32 	%r1655, %r1262, %r1261, 8;
	shf.r.wrap.b32 	%r1656, %r1261, %r1262, 8;
	mov.b64 	%rd2357, {%r1656, %r1655};
	shr.u64 	%rd2358, %rd1784, 7;
	xor.b64  	%rd2359, %rd2356, %rd2358;
	xor.b64  	%rd2360, %rd2359, %rd2357;
	add.s64 	%rd2361, %rd2272, %rd1771;
	add.s64 	%rd2362, %rd2361, %rd2355;
	add.s64 	%rd2363, %rd2362, %rd2360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1657,%dummy}, %rd2183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1658}, %rd2183;
	}
	shf.r.wrap.b32 	%r1659, %r1658, %r1657, 14;
	shf.r.wrap.b32 	%r1660, %r1657, %r1658, 14;
	mov.b64 	%rd2364, {%r1660, %r1659};
	shf.r.wrap.b32 	%r1661, %r1658, %r1657, 18;
	shf.r.wrap.b32 	%r1662, %r1657, %r1658, 18;
	mov.b64 	%rd2365, {%r1662, %r1661};
	xor.b64  	%rd2366, %rd2365, %rd2364;
	shf.l.wrap.b32 	%r1663, %r1657, %r1658, 23;
	shf.l.wrap.b32 	%r1664, %r1658, %r1657, 23;
	mov.b64 	%rd2367, {%r1664, %r1663};
	xor.b64  	%rd2368, %rd2366, %rd2367;
	xor.b64  	%rd2369, %rd2135, %rd2159;
	and.b64  	%rd2370, %rd2369, %rd2183;
	xor.b64  	%rd2371, %rd2370, %rd2135;
	add.s64 	%rd2372, %rd2371, %rd2111;
	add.s64 	%rd2373, %rd2372, %rd2207;
	add.s64 	%rd2374, %rd2373, %rd2740;
	add.s64 	%rd2375, %rd2374, %rd2368;
	add.s64 	%rd2376, %rd2375, %rd2122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1665,%dummy}, %rd2194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1666}, %rd2194;
	}
	shf.r.wrap.b32 	%r1667, %r1666, %r1665, 28;
	shf.r.wrap.b32 	%r1668, %r1665, %r1666, 28;
	mov.b64 	%rd2377, {%r1668, %r1667};
	shf.l.wrap.b32 	%r1669, %r1665, %r1666, 30;
	shf.l.wrap.b32 	%r1670, %r1666, %r1665, 30;
	mov.b64 	%rd2378, {%r1670, %r1669};
	xor.b64  	%rd2379, %rd2378, %rd2377;
	shf.l.wrap.b32 	%r1671, %r1665, %r1666, 25;
	shf.l.wrap.b32 	%r1672, %r1666, %r1665, 25;
	mov.b64 	%rd2380, {%r1672, %r1671};
	xor.b64  	%rd2381, %rd2379, %rd2380;
	xor.b64  	%rd2382, %rd2194, %rd2146;
	xor.b64  	%rd2383, %rd2194, %rd2170;
	and.b64  	%rd2384, %rd2383, %rd2382;
	xor.b64  	%rd2385, %rd2384, %rd2194;
	add.s64 	%rd2386, %rd2375, %rd2385;
	add.s64 	%rd2387, %rd2386, %rd2381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1673,%dummy}, %rd2376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1674}, %rd2376;
	}
	shf.r.wrap.b32 	%r1675, %r1674, %r1673, 14;
	shf.r.wrap.b32 	%r1676, %r1673, %r1674, 14;
	mov.b64 	%rd2388, {%r1676, %r1675};
	shf.r.wrap.b32 	%r1677, %r1674, %r1673, 18;
	shf.r.wrap.b32 	%r1678, %r1673, %r1674, 18;
	mov.b64 	%rd2389, {%r1678, %r1677};
	xor.b64  	%rd2390, %rd2389, %rd2388;
	shf.l.wrap.b32 	%r1679, %r1673, %r1674, 23;
	shf.l.wrap.b32 	%r1680, %r1674, %r1673, 23;
	mov.b64 	%rd2391, {%r1680, %r1679};
	xor.b64  	%rd2392, %rd2390, %rd2391;
	xor.b64  	%rd2393, %rd2159, %rd2183;
	and.b64  	%rd2394, %rd2376, %rd2393;
	xor.b64  	%rd2395, %rd2394, %rd2159;
	add.s64 	%rd2396, %rd2220, %rd2135;
	add.s64 	%rd2397, %rd2396, %rd2741;
	add.s64 	%rd2398, %rd2397, %rd2395;
	add.s64 	%rd2399, %rd2398, %rd2392;
	add.s64 	%rd2400, %rd2399, %rd2146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1681,%dummy}, %rd2387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1682}, %rd2387;
	}
	shf.r.wrap.b32 	%r1683, %r1682, %r1681, 28;
	shf.r.wrap.b32 	%r1684, %r1681, %r1682, 28;
	mov.b64 	%rd2401, {%r1684, %r1683};
	shf.l.wrap.b32 	%r1685, %r1681, %r1682, 30;
	shf.l.wrap.b32 	%r1686, %r1682, %r1681, 30;
	mov.b64 	%rd2402, {%r1686, %r1685};
	xor.b64  	%rd2403, %rd2402, %rd2401;
	shf.l.wrap.b32 	%r1687, %r1681, %r1682, 25;
	shf.l.wrap.b32 	%r1688, %r1682, %r1681, 25;
	mov.b64 	%rd2404, {%r1688, %r1687};
	xor.b64  	%rd2405, %rd2403, %rd2404;
	xor.b64  	%rd2406, %rd2387, %rd2170;
	xor.b64  	%rd2407, %rd2387, %rd2194;
	and.b64  	%rd2408, %rd2407, %rd2406;
	xor.b64  	%rd2409, %rd2408, %rd2387;
	add.s64 	%rd2410, %rd2399, %rd2409;
	add.s64 	%rd2411, %rd2410, %rd2405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1689,%dummy}, %rd2400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1690}, %rd2400;
	}
	shf.r.wrap.b32 	%r1691, %r1690, %r1689, 14;
	shf.r.wrap.b32 	%r1692, %r1689, %r1690, 14;
	mov.b64 	%rd2412, {%r1692, %r1691};
	shf.r.wrap.b32 	%r1693, %r1690, %r1689, 18;
	shf.r.wrap.b32 	%r1694, %r1689, %r1690, 18;
	mov.b64 	%rd2413, {%r1694, %r1693};
	xor.b64  	%rd2414, %rd2413, %rd2412;
	shf.l.wrap.b32 	%r1695, %r1689, %r1690, 23;
	shf.l.wrap.b32 	%r1696, %r1690, %r1689, 23;
	mov.b64 	%rd2415, {%r1696, %r1695};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	xor.b64  	%rd2417, %rd2376, %rd2183;
	and.b64  	%rd2418, %rd2400, %rd2417;
	xor.b64  	%rd2419, %rd2418, %rd2183;
	add.s64 	%rd2420, %rd2233, %rd2159;
	add.s64 	%rd2421, %rd2420, %rd2742;
	add.s64 	%rd2422, %rd2421, %rd2419;
	add.s64 	%rd2423, %rd2422, %rd2416;
	add.s64 	%rd2424, %rd2423, %rd2170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1697,%dummy}, %rd2411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1698}, %rd2411;
	}
	shf.r.wrap.b32 	%r1699, %r1698, %r1697, 28;
	shf.r.wrap.b32 	%r1700, %r1697, %r1698, 28;
	mov.b64 	%rd2425, {%r1700, %r1699};
	shf.l.wrap.b32 	%r1701, %r1697, %r1698, 30;
	shf.l.wrap.b32 	%r1702, %r1698, %r1697, 30;
	mov.b64 	%rd2426, {%r1702, %r1701};
	xor.b64  	%rd2427, %rd2426, %rd2425;
	shf.l.wrap.b32 	%r1703, %r1697, %r1698, 25;
	shf.l.wrap.b32 	%r1704, %r1698, %r1697, 25;
	mov.b64 	%rd2428, {%r1704, %r1703};
	xor.b64  	%rd2429, %rd2427, %rd2428;
	xor.b64  	%rd2430, %rd2411, %rd2194;
	xor.b64  	%rd2431, %rd2411, %rd2387;
	and.b64  	%rd2432, %rd2431, %rd2430;
	xor.b64  	%rd2433, %rd2432, %rd2411;
	add.s64 	%rd2434, %rd2423, %rd2433;
	add.s64 	%rd2435, %rd2434, %rd2429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1705,%dummy}, %rd2424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1706}, %rd2424;
	}
	shf.r.wrap.b32 	%r1707, %r1706, %r1705, 14;
	shf.r.wrap.b32 	%r1708, %r1705, %r1706, 14;
	mov.b64 	%rd2436, {%r1708, %r1707};
	shf.r.wrap.b32 	%r1709, %r1706, %r1705, 18;
	shf.r.wrap.b32 	%r1710, %r1705, %r1706, 18;
	mov.b64 	%rd2437, {%r1710, %r1709};
	xor.b64  	%rd2438, %rd2437, %rd2436;
	shf.l.wrap.b32 	%r1711, %r1705, %r1706, 23;
	shf.l.wrap.b32 	%r1712, %r1706, %r1705, 23;
	mov.b64 	%rd2439, {%r1712, %r1711};
	xor.b64  	%rd2440, %rd2438, %rd2439;
	xor.b64  	%rd2441, %rd2400, %rd2376;
	and.b64  	%rd2442, %rd2424, %rd2441;
	xor.b64  	%rd2443, %rd2442, %rd2376;
	add.s64 	%rd2444, %rd2246, %rd2183;
	add.s64 	%rd2445, %rd2444, %rd2743;
	add.s64 	%rd2446, %rd2445, %rd2443;
	add.s64 	%rd2447, %rd2446, %rd2440;
	add.s64 	%rd2448, %rd2447, %rd2194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1713,%dummy}, %rd2435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1714}, %rd2435;
	}
	shf.r.wrap.b32 	%r1715, %r1714, %r1713, 28;
	shf.r.wrap.b32 	%r1716, %r1713, %r1714, 28;
	mov.b64 	%rd2449, {%r1716, %r1715};
	shf.l.wrap.b32 	%r1717, %r1713, %r1714, 30;
	shf.l.wrap.b32 	%r1718, %r1714, %r1713, 30;
	mov.b64 	%rd2450, {%r1718, %r1717};
	xor.b64  	%rd2451, %rd2450, %rd2449;
	shf.l.wrap.b32 	%r1719, %r1713, %r1714, 25;
	shf.l.wrap.b32 	%r1720, %r1714, %r1713, 25;
	mov.b64 	%rd2452, {%r1720, %r1719};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	xor.b64  	%rd2454, %rd2435, %rd2387;
	xor.b64  	%rd2455, %rd2435, %rd2411;
	and.b64  	%rd2456, %rd2455, %rd2454;
	xor.b64  	%rd2457, %rd2456, %rd2435;
	add.s64 	%rd2458, %rd2447, %rd2457;
	add.s64 	%rd2459, %rd2458, %rd2453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1721,%dummy}, %rd2448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1722}, %rd2448;
	}
	shf.r.wrap.b32 	%r1723, %r1722, %r1721, 14;
	shf.r.wrap.b32 	%r1724, %r1721, %r1722, 14;
	mov.b64 	%rd2460, {%r1724, %r1723};
	shf.r.wrap.b32 	%r1725, %r1722, %r1721, 18;
	shf.r.wrap.b32 	%r1726, %r1721, %r1722, 18;
	mov.b64 	%rd2461, {%r1726, %r1725};
	xor.b64  	%rd2462, %rd2461, %rd2460;
	shf.l.wrap.b32 	%r1727, %r1721, %r1722, 23;
	shf.l.wrap.b32 	%r1728, %r1722, %r1721, 23;
	mov.b64 	%rd2463, {%r1728, %r1727};
	xor.b64  	%rd2464, %rd2462, %rd2463;
	xor.b64  	%rd2465, %rd2424, %rd2400;
	and.b64  	%rd2466, %rd2448, %rd2465;
	xor.b64  	%rd2467, %rd2466, %rd2400;
	add.s64 	%rd2468, %rd2376, %rd2259;
	add.s64 	%rd2469, %rd2468, %rd2744;
	add.s64 	%rd2470, %rd2469, %rd2467;
	add.s64 	%rd2471, %rd2470, %rd2464;
	add.s64 	%rd2472, %rd2471, %rd2387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1729,%dummy}, %rd2459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1730}, %rd2459;
	}
	shf.r.wrap.b32 	%r1731, %r1730, %r1729, 28;
	shf.r.wrap.b32 	%r1732, %r1729, %r1730, 28;
	mov.b64 	%rd2473, {%r1732, %r1731};
	shf.l.wrap.b32 	%r1733, %r1729, %r1730, 30;
	shf.l.wrap.b32 	%r1734, %r1730, %r1729, 30;
	mov.b64 	%rd2474, {%r1734, %r1733};
	xor.b64  	%rd2475, %rd2474, %rd2473;
	shf.l.wrap.b32 	%r1735, %r1729, %r1730, 25;
	shf.l.wrap.b32 	%r1736, %r1730, %r1729, 25;
	mov.b64 	%rd2476, {%r1736, %r1735};
	xor.b64  	%rd2477, %rd2475, %rd2476;
	xor.b64  	%rd2478, %rd2459, %rd2411;
	xor.b64  	%rd2479, %rd2459, %rd2435;
	and.b64  	%rd2480, %rd2479, %rd2478;
	xor.b64  	%rd2481, %rd2480, %rd2459;
	add.s64 	%rd2482, %rd2471, %rd2481;
	add.s64 	%rd2483, %rd2482, %rd2477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1737,%dummy}, %rd2472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1738}, %rd2472;
	}
	shf.r.wrap.b32 	%r1739, %r1738, %r1737, 14;
	shf.r.wrap.b32 	%r1740, %r1737, %r1738, 14;
	mov.b64 	%rd2484, {%r1740, %r1739};
	shf.r.wrap.b32 	%r1741, %r1738, %r1737, 18;
	shf.r.wrap.b32 	%r1742, %r1737, %r1738, 18;
	mov.b64 	%rd2485, {%r1742, %r1741};
	xor.b64  	%rd2486, %rd2485, %rd2484;
	shf.l.wrap.b32 	%r1743, %r1737, %r1738, 23;
	shf.l.wrap.b32 	%r1744, %r1738, %r1737, 23;
	mov.b64 	%rd2487, {%r1744, %r1743};
	xor.b64  	%rd2488, %rd2486, %rd2487;
	xor.b64  	%rd2489, %rd2448, %rd2424;
	and.b64  	%rd2490, %rd2472, %rd2489;
	xor.b64  	%rd2491, %rd2490, %rd2424;
	add.s64 	%rd2492, %rd2400, %rd2272;
	add.s64 	%rd2493, %rd2492, %rd2745;
	add.s64 	%rd2494, %rd2493, %rd2491;
	add.s64 	%rd2495, %rd2494, %rd2488;
	add.s64 	%rd2496, %rd2495, %rd2411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1745,%dummy}, %rd2483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1746}, %rd2483;
	}
	shf.r.wrap.b32 	%r1747, %r1746, %r1745, 28;
	shf.r.wrap.b32 	%r1748, %r1745, %r1746, 28;
	mov.b64 	%rd2497, {%r1748, %r1747};
	shf.l.wrap.b32 	%r1749, %r1745, %r1746, 30;
	shf.l.wrap.b32 	%r1750, %r1746, %r1745, 30;
	mov.b64 	%rd2498, {%r1750, %r1749};
	xor.b64  	%rd2499, %rd2498, %rd2497;
	shf.l.wrap.b32 	%r1751, %r1745, %r1746, 25;
	shf.l.wrap.b32 	%r1752, %r1746, %r1745, 25;
	mov.b64 	%rd2500, {%r1752, %r1751};
	xor.b64  	%rd2501, %rd2499, %rd2500;
	xor.b64  	%rd2502, %rd2483, %rd2435;
	xor.b64  	%rd2503, %rd2483, %rd2459;
	and.b64  	%rd2504, %rd2503, %rd2502;
	xor.b64  	%rd2505, %rd2504, %rd2483;
	add.s64 	%rd2506, %rd2495, %rd2505;
	add.s64 	%rd2507, %rd2506, %rd2501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1753,%dummy}, %rd2496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1754}, %rd2496;
	}
	shf.r.wrap.b32 	%r1755, %r1754, %r1753, 14;
	shf.r.wrap.b32 	%r1756, %r1753, %r1754, 14;
	mov.b64 	%rd2508, {%r1756, %r1755};
	shf.r.wrap.b32 	%r1757, %r1754, %r1753, 18;
	shf.r.wrap.b32 	%r1758, %r1753, %r1754, 18;
	mov.b64 	%rd2509, {%r1758, %r1757};
	xor.b64  	%rd2510, %rd2509, %rd2508;
	shf.l.wrap.b32 	%r1759, %r1753, %r1754, 23;
	shf.l.wrap.b32 	%r1760, %r1754, %r1753, 23;
	mov.b64 	%rd2511, {%r1760, %r1759};
	xor.b64  	%rd2512, %rd2510, %rd2511;
	xor.b64  	%rd2513, %rd2472, %rd2448;
	and.b64  	%rd2514, %rd2496, %rd2513;
	xor.b64  	%rd2515, %rd2514, %rd2448;
	add.s64 	%rd2516, %rd2424, %rd2285;
	add.s64 	%rd2517, %rd2516, %rd2746;
	add.s64 	%rd2518, %rd2517, %rd2515;
	add.s64 	%rd2519, %rd2518, %rd2512;
	add.s64 	%rd2520, %rd2519, %rd2435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1761,%dummy}, %rd2507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1762}, %rd2507;
	}
	shf.r.wrap.b32 	%r1763, %r1762, %r1761, 28;
	shf.r.wrap.b32 	%r1764, %r1761, %r1762, 28;
	mov.b64 	%rd2521, {%r1764, %r1763};
	shf.l.wrap.b32 	%r1765, %r1761, %r1762, 30;
	shf.l.wrap.b32 	%r1766, %r1762, %r1761, 30;
	mov.b64 	%rd2522, {%r1766, %r1765};
	xor.b64  	%rd2523, %rd2522, %rd2521;
	shf.l.wrap.b32 	%r1767, %r1761, %r1762, 25;
	shf.l.wrap.b32 	%r1768, %r1762, %r1761, 25;
	mov.b64 	%rd2524, {%r1768, %r1767};
	xor.b64  	%rd2525, %rd2523, %rd2524;
	xor.b64  	%rd2526, %rd2507, %rd2459;
	xor.b64  	%rd2527, %rd2507, %rd2483;
	and.b64  	%rd2528, %rd2527, %rd2526;
	xor.b64  	%rd2529, %rd2528, %rd2507;
	add.s64 	%rd2530, %rd2519, %rd2529;
	add.s64 	%rd2531, %rd2530, %rd2525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1769,%dummy}, %rd2520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1770}, %rd2520;
	}
	shf.r.wrap.b32 	%r1771, %r1770, %r1769, 14;
	shf.r.wrap.b32 	%r1772, %r1769, %r1770, 14;
	mov.b64 	%rd2532, {%r1772, %r1771};
	shf.r.wrap.b32 	%r1773, %r1770, %r1769, 18;
	shf.r.wrap.b32 	%r1774, %r1769, %r1770, 18;
	mov.b64 	%rd2533, {%r1774, %r1773};
	xor.b64  	%rd2534, %rd2533, %rd2532;
	shf.l.wrap.b32 	%r1775, %r1769, %r1770, 23;
	shf.l.wrap.b32 	%r1776, %r1770, %r1769, 23;
	mov.b64 	%rd2535, {%r1776, %r1775};
	xor.b64  	%rd2536, %rd2534, %rd2535;
	xor.b64  	%rd2537, %rd2496, %rd2472;
	and.b64  	%rd2538, %rd2520, %rd2537;
	xor.b64  	%rd2539, %rd2538, %rd2472;
	add.s64 	%rd2540, %rd2448, %rd2298;
	add.s64 	%rd2541, %rd2540, %rd2747;
	add.s64 	%rd2542, %rd2541, %rd2539;
	add.s64 	%rd2543, %rd2542, %rd2536;
	add.s64 	%rd2544, %rd2543, %rd2459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1777,%dummy}, %rd2531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1778}, %rd2531;
	}
	shf.r.wrap.b32 	%r1779, %r1778, %r1777, 28;
	shf.r.wrap.b32 	%r1780, %r1777, %r1778, 28;
	mov.b64 	%rd2545, {%r1780, %r1779};
	shf.l.wrap.b32 	%r1781, %r1777, %r1778, 30;
	shf.l.wrap.b32 	%r1782, %r1778, %r1777, 30;
	mov.b64 	%rd2546, {%r1782, %r1781};
	xor.b64  	%rd2547, %rd2546, %rd2545;
	shf.l.wrap.b32 	%r1783, %r1777, %r1778, 25;
	shf.l.wrap.b32 	%r1784, %r1778, %r1777, 25;
	mov.b64 	%rd2548, {%r1784, %r1783};
	xor.b64  	%rd2549, %rd2547, %rd2548;
	xor.b64  	%rd2550, %rd2531, %rd2483;
	xor.b64  	%rd2551, %rd2531, %rd2507;
	and.b64  	%rd2552, %rd2551, %rd2550;
	xor.b64  	%rd2553, %rd2552, %rd2531;
	add.s64 	%rd2554, %rd2543, %rd2553;
	add.s64 	%rd2555, %rd2554, %rd2549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1785,%dummy}, %rd2544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1786}, %rd2544;
	}
	shf.r.wrap.b32 	%r1787, %r1786, %r1785, 14;
	shf.r.wrap.b32 	%r1788, %r1785, %r1786, 14;
	mov.b64 	%rd2556, {%r1788, %r1787};
	shf.r.wrap.b32 	%r1789, %r1786, %r1785, 18;
	shf.r.wrap.b32 	%r1790, %r1785, %r1786, 18;
	mov.b64 	%rd2557, {%r1790, %r1789};
	xor.b64  	%rd2558, %rd2557, %rd2556;
	shf.l.wrap.b32 	%r1791, %r1785, %r1786, 23;
	shf.l.wrap.b32 	%r1792, %r1786, %r1785, 23;
	mov.b64 	%rd2559, {%r1792, %r1791};
	xor.b64  	%rd2560, %rd2558, %rd2559;
	xor.b64  	%rd2561, %rd2520, %rd2496;
	and.b64  	%rd2562, %rd2544, %rd2561;
	xor.b64  	%rd2563, %rd2562, %rd2496;
	add.s64 	%rd2564, %rd2472, %rd2311;
	add.s64 	%rd2565, %rd2564, %rd2748;
	add.s64 	%rd2566, %rd2565, %rd2563;
	add.s64 	%rd2567, %rd2566, %rd2560;
	add.s64 	%rd2568, %rd2567, %rd2483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1793,%dummy}, %rd2555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1794}, %rd2555;
	}
	shf.r.wrap.b32 	%r1795, %r1794, %r1793, 28;
	shf.r.wrap.b32 	%r1796, %r1793, %r1794, 28;
	mov.b64 	%rd2569, {%r1796, %r1795};
	shf.l.wrap.b32 	%r1797, %r1793, %r1794, 30;
	shf.l.wrap.b32 	%r1798, %r1794, %r1793, 30;
	mov.b64 	%rd2570, {%r1798, %r1797};
	xor.b64  	%rd2571, %rd2570, %rd2569;
	shf.l.wrap.b32 	%r1799, %r1793, %r1794, 25;
	shf.l.wrap.b32 	%r1800, %r1794, %r1793, 25;
	mov.b64 	%rd2572, {%r1800, %r1799};
	xor.b64  	%rd2573, %rd2571, %rd2572;
	xor.b64  	%rd2574, %rd2555, %rd2507;
	xor.b64  	%rd2575, %rd2555, %rd2531;
	and.b64  	%rd2576, %rd2575, %rd2574;
	xor.b64  	%rd2577, %rd2576, %rd2555;
	add.s64 	%rd2578, %rd2567, %rd2577;
	add.s64 	%rd2579, %rd2578, %rd2573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1801,%dummy}, %rd2568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1802}, %rd2568;
	}
	shf.r.wrap.b32 	%r1803, %r1802, %r1801, 14;
	shf.r.wrap.b32 	%r1804, %r1801, %r1802, 14;
	mov.b64 	%rd2580, {%r1804, %r1803};
	shf.r.wrap.b32 	%r1805, %r1802, %r1801, 18;
	shf.r.wrap.b32 	%r1806, %r1801, %r1802, 18;
	mov.b64 	%rd2581, {%r1806, %r1805};
	xor.b64  	%rd2582, %rd2581, %rd2580;
	shf.l.wrap.b32 	%r1807, %r1801, %r1802, 23;
	shf.l.wrap.b32 	%r1808, %r1802, %r1801, 23;
	mov.b64 	%rd2583, {%r1808, %r1807};
	xor.b64  	%rd2584, %rd2582, %rd2583;
	xor.b64  	%rd2585, %rd2544, %rd2520;
	and.b64  	%rd2586, %rd2568, %rd2585;
	xor.b64  	%rd2587, %rd2586, %rd2520;
	add.s64 	%rd2588, %rd2496, %rd2324;
	add.s64 	%rd2589, %rd2588, %rd2749;
	add.s64 	%rd2590, %rd2589, %rd2587;
	add.s64 	%rd2591, %rd2590, %rd2584;
	add.s64 	%rd2592, %rd2591, %rd2507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1809,%dummy}, %rd2579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1810}, %rd2579;
	}
	shf.r.wrap.b32 	%r1811, %r1810, %r1809, 28;
	shf.r.wrap.b32 	%r1812, %r1809, %r1810, 28;
	mov.b64 	%rd2593, {%r1812, %r1811};
	shf.l.wrap.b32 	%r1813, %r1809, %r1810, 30;
	shf.l.wrap.b32 	%r1814, %r1810, %r1809, 30;
	mov.b64 	%rd2594, {%r1814, %r1813};
	xor.b64  	%rd2595, %rd2594, %rd2593;
	shf.l.wrap.b32 	%r1815, %r1809, %r1810, 25;
	shf.l.wrap.b32 	%r1816, %r1810, %r1809, 25;
	mov.b64 	%rd2596, {%r1816, %r1815};
	xor.b64  	%rd2597, %rd2595, %rd2596;
	xor.b64  	%rd2598, %rd2579, %rd2531;
	xor.b64  	%rd2599, %rd2579, %rd2555;
	and.b64  	%rd2600, %rd2599, %rd2598;
	xor.b64  	%rd2601, %rd2600, %rd2579;
	add.s64 	%rd2602, %rd2591, %rd2601;
	add.s64 	%rd2603, %rd2602, %rd2597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1817,%dummy}, %rd2592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1818}, %rd2592;
	}
	shf.r.wrap.b32 	%r1819, %r1818, %r1817, 14;
	shf.r.wrap.b32 	%r1820, %r1817, %r1818, 14;
	mov.b64 	%rd2604, {%r1820, %r1819};
	shf.r.wrap.b32 	%r1821, %r1818, %r1817, 18;
	shf.r.wrap.b32 	%r1822, %r1817, %r1818, 18;
	mov.b64 	%rd2605, {%r1822, %r1821};
	xor.b64  	%rd2606, %rd2605, %rd2604;
	shf.l.wrap.b32 	%r1823, %r1817, %r1818, 23;
	shf.l.wrap.b32 	%r1824, %r1818, %r1817, 23;
	mov.b64 	%rd2607, {%r1824, %r1823};
	xor.b64  	%rd2608, %rd2606, %rd2607;
	xor.b64  	%rd2609, %rd2568, %rd2544;
	and.b64  	%rd2610, %rd2592, %rd2609;
	xor.b64  	%rd2611, %rd2610, %rd2544;
	add.s64 	%rd2612, %rd2520, %rd2337;
	add.s64 	%rd2613, %rd2612, %rd2750;
	add.s64 	%rd2614, %rd2613, %rd2611;
	add.s64 	%rd2615, %rd2614, %rd2608;
	add.s64 	%rd2616, %rd2615, %rd2531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1825,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1826}, %rd2603;
	}
	shf.r.wrap.b32 	%r1827, %r1826, %r1825, 28;
	shf.r.wrap.b32 	%r1828, %r1825, %r1826, 28;
	mov.b64 	%rd2617, {%r1828, %r1827};
	shf.l.wrap.b32 	%r1829, %r1825, %r1826, 30;
	shf.l.wrap.b32 	%r1830, %r1826, %r1825, 30;
	mov.b64 	%rd2618, {%r1830, %r1829};
	xor.b64  	%rd2619, %rd2618, %rd2617;
	shf.l.wrap.b32 	%r1831, %r1825, %r1826, 25;
	shf.l.wrap.b32 	%r1832, %r1826, %r1825, 25;
	mov.b64 	%rd2620, {%r1832, %r1831};
	xor.b64  	%rd2621, %rd2619, %rd2620;
	xor.b64  	%rd2622, %rd2603, %rd2555;
	xor.b64  	%rd2623, %rd2603, %rd2579;
	and.b64  	%rd2624, %rd2623, %rd2622;
	xor.b64  	%rd2625, %rd2624, %rd2603;
	add.s64 	%rd2626, %rd2615, %rd2625;
	add.s64 	%rd2627, %rd2626, %rd2621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1833,%dummy}, %rd2616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1834}, %rd2616;
	}
	shf.r.wrap.b32 	%r1835, %r1834, %r1833, 14;
	shf.r.wrap.b32 	%r1836, %r1833, %r1834, 14;
	mov.b64 	%rd2628, {%r1836, %r1835};
	shf.r.wrap.b32 	%r1837, %r1834, %r1833, 18;
	shf.r.wrap.b32 	%r1838, %r1833, %r1834, 18;
	mov.b64 	%rd2629, {%r1838, %r1837};
	xor.b64  	%rd2630, %rd2629, %rd2628;
	shf.l.wrap.b32 	%r1839, %r1833, %r1834, 23;
	shf.l.wrap.b32 	%r1840, %r1834, %r1833, 23;
	mov.b64 	%rd2631, {%r1840, %r1839};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	xor.b64  	%rd2633, %rd2592, %rd2568;
	and.b64  	%rd2634, %rd2616, %rd2633;
	xor.b64  	%rd2635, %rd2634, %rd2568;
	add.s64 	%rd2636, %rd2544, %rd2350;
	add.s64 	%rd2637, %rd2636, %rd2751;
	add.s64 	%rd2638, %rd2637, %rd2635;
	add.s64 	%rd2639, %rd2638, %rd2632;
	add.s64 	%rd2640, %rd2639, %rd2555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1841,%dummy}, %rd2627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1842}, %rd2627;
	}
	shf.r.wrap.b32 	%r1843, %r1842, %r1841, 28;
	shf.r.wrap.b32 	%r1844, %r1841, %r1842, 28;
	mov.b64 	%rd2641, {%r1844, %r1843};
	shf.l.wrap.b32 	%r1845, %r1841, %r1842, 30;
	shf.l.wrap.b32 	%r1846, %r1842, %r1841, 30;
	mov.b64 	%rd2642, {%r1846, %r1845};
	xor.b64  	%rd2643, %rd2642, %rd2641;
	shf.l.wrap.b32 	%r1847, %r1841, %r1842, 25;
	shf.l.wrap.b32 	%r1848, %r1842, %r1841, 25;
	mov.b64 	%rd2644, {%r1848, %r1847};
	xor.b64  	%rd2645, %rd2643, %rd2644;
	xor.b64  	%rd2646, %rd2627, %rd2579;
	xor.b64  	%rd2647, %rd2627, %rd2603;
	and.b64  	%rd2648, %rd2647, %rd2646;
	xor.b64  	%rd2649, %rd2648, %rd2627;
	add.s64 	%rd2650, %rd2639, %rd2649;
	add.s64 	%rd2651, %rd2650, %rd2645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1849,%dummy}, %rd2640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1850}, %rd2640;
	}
	shf.r.wrap.b32 	%r1851, %r1850, %r1849, 14;
	shf.r.wrap.b32 	%r1852, %r1849, %r1850, 14;
	mov.b64 	%rd2652, {%r1852, %r1851};
	shf.r.wrap.b32 	%r1853, %r1850, %r1849, 18;
	shf.r.wrap.b32 	%r1854, %r1849, %r1850, 18;
	mov.b64 	%rd2653, {%r1854, %r1853};
	xor.b64  	%rd2654, %rd2653, %rd2652;
	shf.l.wrap.b32 	%r1855, %r1849, %r1850, 23;
	shf.l.wrap.b32 	%r1856, %r1850, %r1849, 23;
	mov.b64 	%rd2655, {%r1856, %r1855};
	xor.b64  	%rd2656, %rd2654, %rd2655;
	xor.b64  	%rd2657, %rd2616, %rd2592;
	and.b64  	%rd2658, %rd2640, %rd2657;
	xor.b64  	%rd2659, %rd2658, %rd2592;
	add.s64 	%rd2660, %rd2568, %rd2363;
	add.s64 	%rd2661, %rd2660, %rd2752;
	add.s64 	%rd2662, %rd2661, %rd2659;
	add.s64 	%rd2663, %rd2662, %rd2656;
	add.s64 	%rd100, %rd2663, %rd2579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1857,%dummy}, %rd2651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1858}, %rd2651;
	}
	shf.r.wrap.b32 	%r1859, %r1858, %r1857, 28;
	shf.r.wrap.b32 	%r1860, %r1857, %r1858, 28;
	mov.b64 	%rd2664, {%r1860, %r1859};
	shf.l.wrap.b32 	%r1861, %r1857, %r1858, 30;
	shf.l.wrap.b32 	%r1862, %r1858, %r1857, 30;
	mov.b64 	%rd2665, {%r1862, %r1861};
	xor.b64  	%rd2666, %rd2665, %rd2664;
	shf.l.wrap.b32 	%r1863, %r1857, %r1858, 25;
	shf.l.wrap.b32 	%r1864, %r1858, %r1857, 25;
	mov.b64 	%rd2667, {%r1864, %r1863};
	xor.b64  	%rd2668, %rd2666, %rd2667;
	xor.b64  	%rd2669, %rd2651, %rd2603;
	xor.b64  	%rd2670, %rd2651, %rd2627;
	and.b64  	%rd2671, %rd2670, %rd2669;
	xor.b64  	%rd2672, %rd2671, %rd2651;
	add.s64 	%rd2673, %rd2663, %rd2672;
	add.s64 	%rd101, %rd2673, %rd2668;
	cvt.u32.u64	%r1865, %rd100;
	setp.ne.s32	%p3, %r1865, %r3;
	@%p3 bra 	BB6_9;

	shr.u64 	%rd2674, %rd101, 32;
	cvt.u32.u64	%r1866, %rd2674;
	shr.u64 	%rd2675, %rd100, 32;
	cvt.u32.u64	%r1867, %rd2675;
	setp.eq.s32	%p4, %r1867, %r4;
	cvt.u32.u64	%r1868, %rd101;
	setp.eq.s32	%p5, %r1868, %r5;
	and.pred  	%p6, %p4, %p5;
	setp.eq.s32	%p7, %r1866, %r6;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB6_9;
	bra.uni 	BB6_5;

BB6_5:
	atom.global.add.u32 	%r1869, [%rd24], 1;
	setp.ne.s32	%p9, %r1869, 0;
	@%p9 bra 	BB6_9;

	ld.param.u32 	%r1874, [m01710_s16_param_31];
	atom.global.add.u32 	%r10, [%rd107], 1;
	setp.lt.u32	%p10, %r10, %r1874;
	@%p10 bra 	BB6_8;
	bra.uni 	BB6_7;

BB6_8:
	ld.param.u32 	%r1875, [m01710_s16_param_27];
	ld.param.u64 	%rd2753, [m01710_s16_param_14];
	ld.param.u32 	%r1873, [m01710_s16_param_32];
	mul.wide.u32 	%rd2676, %r10, 20;
	add.s64 	%rd2677, %rd2753, %rd2676;
	st.global.u32 	[%rd2677], %r1875;
	mov.u32 	%r1871, 0;
	st.global.u32 	[%rd2677+4], %r1871;
	st.global.u32 	[%rd2677+8], %r1873;
	st.global.u32 	[%rd2677+12], %r1;
	st.global.u32 	[%rd2677+16], %r1876;
	bra.uni 	BB6_9;

BB6_7:
	atom.global.add.u32 	%r1870, [%rd107], -1;

BB6_9:
	ld.param.u32 	%r1872, [m01710_s16_param_30];
	add.s32 	%r1876, %r1876, 1;
	setp.lt.u32	%p11, %r1876, %r1872;
	@%p11 bra 	BB6_3;

BB6_10:
	ret;
}


  