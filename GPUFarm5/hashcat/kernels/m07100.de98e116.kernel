//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u32 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [gpu_memset_param_0];
	ld.param.u32 	%r2, [gpu_memset_param_1];
	ld.param.u32 	%r3, [gpu_memset_param_2];
	mov.b32	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
	setp.ge.u32	%p1, %r1, %r3;
	@%p1 bra 	BB0_2;

	mul.wide.u32 	%rd2, %r1, 16;
	add.s64 	%rd3, %rd1, %rd2;
	st.global.v4.u32 	[%rd3], {%r2, %r2, %r2, %r2};

BB0_2:
	ret;
}

	// .globl	m07100_init
.entry m07100_init(
	.param .u64 .ptr .global .align 4 m07100_init_param_0,
	.param .u64 .ptr .global .align 4 m07100_init_param_1,
	.param .u64 .ptr .global .align 4 m07100_init_param_2,
	.param .u64 .ptr .global .align 4 m07100_init_param_3,
	.param .u64 .ptr .global .align 8 m07100_init_param_4,
	.param .u64 .ptr .global .align 1 m07100_init_param_5,
	.param .u64 .ptr .global .align 4 m07100_init_param_6,
	.param .u64 .ptr .global .align 4 m07100_init_param_7,
	.param .u64 .ptr .global .align 4 m07100_init_param_8,
	.param .u64 .ptr .global .align 4 m07100_init_param_9,
	.param .u64 .ptr .global .align 4 m07100_init_param_10,
	.param .u64 .ptr .global .align 4 m07100_init_param_11,
	.param .u64 .ptr .global .align 4 m07100_init_param_12,
	.param .u64 .ptr .global .align 4 m07100_init_param_13,
	.param .u64 .ptr .global .align 4 m07100_init_param_14,
	.param .u64 .ptr .global .align 4 m07100_init_param_15,
	.param .u64 .ptr .global .align 4 m07100_init_param_16,
	.param .u64 .ptr .global .align 4 m07100_init_param_17,
	.param .u64 .ptr .global .align 4 m07100_init_param_18,
	.param .u64 .ptr .global .align 4 m07100_init_param_19,
	.param .u64 .ptr .global .align 4 m07100_init_param_20,
	.param .u64 .ptr .global .align 4 m07100_init_param_21,
	.param .u64 .ptr .global .align 4 m07100_init_param_22,
	.param .u64 .ptr .global .align 4 m07100_init_param_23,
	.param .u32 m07100_init_param_24,
	.param .u32 m07100_init_param_25,
	.param .u32 m07100_init_param_26,
	.param .u32 m07100_init_param_27,
	.param .u32 m07100_init_param_28,
	.param .u32 m07100_init_param_29,
	.param .u32 m07100_init_param_30,
	.param .u32 m07100_init_param_31,
	.param .u32 m07100_init_param_32,
	.param .u32 m07100_init_param_33,
	.param .u32 m07100_init_param_34
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<2921>;
	.reg .b64 	%rd<4318>;


	ld.param.u64 	%rd320, [m07100_init_param_0];
	ld.param.u64 	%rd322, [m07100_init_param_17];
	ld.param.u64 	%rd323, [m07100_init_param_18];
	ld.param.u32 	%r39, [m07100_init_param_27];
	ld.param.u32 	%r40, [m07100_init_param_32];
	ld.param.u32 	%r41, [m07100_init_param_34];
	mov.b32	%r42, %envreg3;
	mov.u32 	%r43, %ctaid.x;
	mov.u32 	%r44, %ntid.x;
	mad.lo.s32 	%r45, %r43, %r44, %r42;
	mov.u32 	%r46, %tid.x;
	add.s32 	%r1, %r45, %r46;
	setp.ge.u32	%p1, %r1, %r41;
	@%p1 bra 	BB1_10;

	cvt.u64.u32	%rd1, %r1;
	mul.wide.u32 	%rd333, %r1, 80;
	add.s64 	%rd334, %rd320, %rd333;
	ld.global.u32 	%r48, [%rd334];
	ld.global.u32 	%r50, [%rd334+4];
	ld.global.u32 	%r52, [%rd334+8];
	ld.global.u32 	%r54, [%rd334+12];
	ld.global.u32 	%r56, [%rd334+16];
	ld.global.u32 	%r58, [%rd334+20];
	ld.global.u32 	%r60, [%rd334+24];
	ld.global.u32 	%r62, [%rd334+28];
	ld.global.u32 	%r64, [%rd334+32];
	ld.global.u32 	%r66, [%rd334+36];
	ld.global.u32 	%r68, [%rd334+40];
	ld.global.u32 	%r70, [%rd334+44];
	ld.global.u32 	%r72, [%rd334+48];
	ld.global.u32 	%r74, [%rd334+52];
	ld.global.u32 	%r76, [%rd334+56];
	ld.global.u32 	%r78, [%rd334+60];
	mul.wide.u32 	%rd335, %r39, 180;
	add.s64 	%rd336, %rd322, %rd335;
	ld.global.u32 	%r136, [%rd336+128];
	mul.wide.u32 	%rd337, %r40, 128;
	add.s64 	%rd338, %rd323, %rd337;
	ld.global.u32 	%r80, [%rd338];
	// inline asm
	prmt.b32 %r79, %r80, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r82, [%rd338+4];
	// inline asm
	prmt.b32 %r81, %r82, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r84, [%rd338+8];
	// inline asm
	prmt.b32 %r83, %r84, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r86, [%rd338+12];
	// inline asm
	prmt.b32 %r85, %r86, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r88, [%rd338+16];
	// inline asm
	prmt.b32 %r87, %r88, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r90, [%rd338+20];
	// inline asm
	prmt.b32 %r89, %r90, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r92, [%rd338+24];
	// inline asm
	prmt.b32 %r91, %r92, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r94, [%rd338+28];
	// inline asm
	prmt.b32 %r93, %r94, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r96, [%rd338+32];
	// inline asm
	prmt.b32 %r95, %r96, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r98, [%rd338+36];
	// inline asm
	prmt.b32 %r97, %r98, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r100, [%rd338+40];
	// inline asm
	prmt.b32 %r99, %r100, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r102, [%rd338+44];
	// inline asm
	prmt.b32 %r101, %r102, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r104, [%rd338+48];
	// inline asm
	prmt.b32 %r103, %r104, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r106, [%rd338+52];
	// inline asm
	prmt.b32 %r105, %r106, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r108, [%rd338+56];
	// inline asm
	prmt.b32 %r107, %r108, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r110, [%rd338+60];
	// inline asm
	prmt.b32 %r109, %r110, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r112, [%rd338+64];
	// inline asm
	prmt.b32 %r111, %r112, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r114, [%rd338+68];
	// inline asm
	prmt.b32 %r113, %r114, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r116, [%rd338+72];
	// inline asm
	prmt.b32 %r115, %r116, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r118, [%rd338+76];
	// inline asm
	prmt.b32 %r117, %r118, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r120, [%rd338+80];
	// inline asm
	prmt.b32 %r119, %r120, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r122, [%rd338+84];
	// inline asm
	prmt.b32 %r121, %r122, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r124, [%rd338+88];
	// inline asm
	prmt.b32 %r123, %r124, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r126, [%rd338+92];
	// inline asm
	prmt.b32 %r125, %r126, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r128, [%rd338+96];
	// inline asm
	prmt.b32 %r127, %r128, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r130, [%rd338+100];
	// inline asm
	prmt.b32 %r129, %r130, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r132, [%rd338+104];
	// inline asm
	prmt.b32 %r131, %r132, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r134, [%rd338+108];
	// inline asm
	prmt.b32 %r133, %r134, 0, 0x0123;
	// inline asm
	add.s32 	%r137, %r136, 132;
	shl.b32 	%r30, %r137, 3;
	// inline asm
	prmt.b32 %r47, %r48, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r49, %r50, 0, 0x0123;
	// inline asm
	mov.b64	%rd2, {%r49, %r47};
	// inline asm
	prmt.b32 %r51, %r52, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r53, %r54, 0, 0x0123;
	// inline asm
	mov.b64	%rd3, {%r53, %r51};
	// inline asm
	prmt.b32 %r55, %r56, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r57, %r58, 0, 0x0123;
	// inline asm
	mov.b64	%rd4, {%r57, %r55};
	// inline asm
	prmt.b32 %r59, %r60, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r61, %r62, 0, 0x0123;
	// inline asm
	mov.b64	%rd5, {%r61, %r59};
	// inline asm
	prmt.b32 %r63, %r64, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r65, %r66, 0, 0x0123;
	// inline asm
	mov.b64	%rd6, {%r65, %r63};
	// inline asm
	prmt.b32 %r67, %r68, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r69, %r70, 0, 0x0123;
	// inline asm
	mov.b64	%rd7, {%r69, %r67};
	// inline asm
	prmt.b32 %r71, %r72, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r73, %r74, 0, 0x0123;
	// inline asm
	mov.b64	%rd8, {%r73, %r71};
	// inline asm
	prmt.b32 %r75, %r76, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r77, %r78, 0, 0x0123;
	// inline asm
	mov.b64	%rd9, {%r77, %r75};
	xor.b64  	%rd4228, %rd2, 3906369333256140342;
	xor.b64  	%rd4229, %rd3, 3906369333256140342;
	xor.b64  	%rd4230, %rd4, 3906369333256140342;
	xor.b64  	%rd4231, %rd5, 3906369333256140342;
	xor.b64  	%rd4232, %rd6, 3906369333256140342;
	xor.b64  	%rd4233, %rd7, 3906369333256140342;
	xor.b64  	%rd4234, %rd8, 3906369333256140342;
	xor.b64  	%rd4235, %rd9, 3906369333256140342;
	mov.u64 	%rd339, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r138,%dummy}, %rd339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r139}, %rd339;
	}
	shf.r.wrap.b32 	%r140, %r139, %r138, 18;
	shf.r.wrap.b32 	%r141, %r138, %r139, 18;
	mov.b64 	%rd340, {%r141, %r140};
	shf.r.wrap.b32 	%r142, %r139, %r138, 14;
	shf.r.wrap.b32 	%r143, %r138, %r139, 14;
	mov.b64 	%rd341, {%r143, %r142};
	xor.b64  	%rd342, %rd340, %rd341;
	shf.l.wrap.b32 	%r144, %r138, %r139, 23;
	shf.l.wrap.b32 	%r145, %r139, %r138, 23;
	mov.b64 	%rd343, {%r145, %r144};
	xor.b64  	%rd18, %rd342, %rd343;
	ld.const.u64 	%rd19, [k_sha512];
	add.s64 	%rd344, %rd4228, %rd19;
	mov.u64 	%rd4218, k_sha512;
	add.s64 	%rd345, %rd344, %rd18;
	mov.u64 	%rd346, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r147,%dummy}, %rd346;
	}
	shf.l.wrap.b32 	%r148, %r147, %r146, 30;
	shf.l.wrap.b32 	%r149, %r146, %r147, 30;
	mov.b64 	%rd347, {%r149, %r148};
	shf.r.wrap.b32 	%r150, %r146, %r147, 28;
	shf.r.wrap.b32 	%r151, %r147, %r146, 28;
	mov.b64 	%rd348, {%r151, %r150};
	xor.b64  	%rd349, %rd347, %rd348;
	shf.l.wrap.b32 	%r152, %r147, %r146, 25;
	shf.l.wrap.b32 	%r153, %r146, %r147, 25;
	mov.b64 	%rd350, {%r153, %r152};
	xor.b64  	%rd20, %rd349, %rd350;
	add.s64 	%rd351, %rd345, %rd20;
	add.s64 	%rd352, %rd345, 2357225248857953701;
	add.s64 	%rd353, %rd351, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r154,%dummy}, %rd352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r155}, %rd352;
	}
	shf.r.wrap.b32 	%r156, %r155, %r154, 14;
	shf.r.wrap.b32 	%r157, %r154, %r155, 14;
	mov.b64 	%rd354, {%r157, %r156};
	shf.r.wrap.b32 	%r158, %r155, %r154, 18;
	shf.r.wrap.b32 	%r159, %r154, %r155, 18;
	mov.b64 	%rd355, {%r159, %r158};
	xor.b64  	%rd356, %rd355, %rd354;
	shf.l.wrap.b32 	%r160, %r154, %r155, 23;
	shf.l.wrap.b32 	%r161, %r155, %r154, 23;
	mov.b64 	%rd357, {%r161, %r160};
	xor.b64  	%rd358, %rd356, %rd357;
	and.b64  	%rd359, %rd352, -3887949035690463538;
	xor.b64  	%rd360, %rd359, -7276294671716946913;
	ld.const.u64 	%rd21, [k_sha512+8];
	add.s64 	%rd361, %rd4229, %rd21;
	add.s64 	%rd362, %rd361, %rd360;
	add.s64 	%rd363, %rd362, %rd358;
	xor.b64  	%rd364, %rd353, -4942790177534073029;
	xor.b64  	%rd365, %rd353, 7640891576956012808;
	and.b64  	%rd366, %rd365, %rd364;
	xor.b64  	%rd367, %rd366, %rd353;
	add.s64 	%rd368, %rd363, %rd367;
	add.s64 	%rd369, %rd363, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r162,%dummy}, %rd353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r163}, %rd353;
	}
	shf.r.wrap.b32 	%r164, %r163, %r162, 28;
	shf.r.wrap.b32 	%r165, %r162, %r163, 28;
	mov.b64 	%rd370, {%r165, %r164};
	shf.l.wrap.b32 	%r166, %r162, %r163, 30;
	shf.l.wrap.b32 	%r167, %r163, %r162, 30;
	mov.b64 	%rd371, {%r167, %r166};
	xor.b64  	%rd372, %rd371, %rd370;
	shf.l.wrap.b32 	%r168, %r162, %r163, 25;
	shf.l.wrap.b32 	%r169, %r163, %r162, 25;
	mov.b64 	%rd373, {%r169, %r168};
	xor.b64  	%rd374, %rd372, %rd373;
	add.s64 	%rd375, %rd368, %rd374;
	add.s64 	%rd376, %rd375, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r170,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r171}, %rd369;
	}
	shf.r.wrap.b32 	%r172, %r171, %r170, 14;
	shf.r.wrap.b32 	%r173, %r170, %r171, 14;
	mov.b64 	%rd377, {%r173, %r172};
	shf.r.wrap.b32 	%r174, %r171, %r170, 18;
	shf.r.wrap.b32 	%r175, %r170, %r171, 18;
	mov.b64 	%rd378, {%r175, %r174};
	xor.b64  	%rd379, %rd378, %rd377;
	shf.l.wrap.b32 	%r176, %r170, %r171, 23;
	shf.l.wrap.b32 	%r177, %r171, %r170, 23;
	mov.b64 	%rd380, {%r177, %r176};
	xor.b64  	%rd381, %rd379, %rd380;
	xor.b64  	%rd382, %rd352, 5840696475078001361;
	and.b64  	%rd383, %rd369, %rd382;
	xor.b64  	%rd384, %rd383, 5840696475078001361;
	ld.const.u64 	%rd22, [k_sha512+16];
	add.s64 	%rd385, %rd4230, %rd22;
	add.s64 	%rd386, %rd385, %rd384;
	add.s64 	%rd387, %rd386, %rd381;
	xor.b64  	%rd388, %rd376, 7640891576956012808;
	xor.b64  	%rd389, %rd376, %rd353;
	and.b64  	%rd390, %rd389, %rd388;
	xor.b64  	%rd391, %rd390, %rd376;
	add.s64 	%rd392, %rd387, %rd391;
	add.s64 	%rd393, %rd387, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r178,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r179}, %rd376;
	}
	shf.r.wrap.b32 	%r180, %r179, %r178, 28;
	shf.r.wrap.b32 	%r181, %r178, %r179, 28;
	mov.b64 	%rd394, {%r181, %r180};
	shf.l.wrap.b32 	%r182, %r178, %r179, 30;
	shf.l.wrap.b32 	%r183, %r179, %r178, 30;
	mov.b64 	%rd395, {%r183, %r182};
	xor.b64  	%rd396, %rd395, %rd394;
	shf.l.wrap.b32 	%r184, %r178, %r179, 25;
	shf.l.wrap.b32 	%r185, %r179, %r178, 25;
	mov.b64 	%rd397, {%r185, %r184};
	xor.b64  	%rd398, %rd396, %rd397;
	add.s64 	%rd399, %rd392, %rd398;
	add.s64 	%rd400, %rd399, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r186,%dummy}, %rd393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r187}, %rd393;
	}
	shf.r.wrap.b32 	%r188, %r187, %r186, 14;
	shf.r.wrap.b32 	%r189, %r186, %r187, 14;
	mov.b64 	%rd401, {%r189, %r188};
	shf.r.wrap.b32 	%r190, %r187, %r186, 18;
	shf.r.wrap.b32 	%r191, %r186, %r187, 18;
	mov.b64 	%rd402, {%r191, %r190};
	xor.b64  	%rd403, %rd402, %rd401;
	shf.l.wrap.b32 	%r192, %r186, %r187, 23;
	shf.l.wrap.b32 	%r193, %r187, %r186, 23;
	mov.b64 	%rd404, {%r193, %r192};
	xor.b64  	%rd405, %rd403, %rd404;
	xor.b64  	%rd406, %rd369, %rd352;
	and.b64  	%rd407, %rd393, %rd406;
	xor.b64  	%rd408, %rd407, %rd352;
	ld.const.u64 	%rd23, [k_sha512+24];
	add.s64 	%rd409, %rd4231, %rd23;
	add.s64 	%rd410, %rd409, %rd408;
	add.s64 	%rd411, %rd410, %rd405;
	xor.b64  	%rd412, %rd400, %rd353;
	xor.b64  	%rd413, %rd400, %rd376;
	and.b64  	%rd414, %rd413, %rd412;
	xor.b64  	%rd415, %rd414, %rd400;
	add.s64 	%rd416, %rd411, %rd415;
	add.s64 	%rd417, %rd411, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r194,%dummy}, %rd400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r195}, %rd400;
	}
	shf.r.wrap.b32 	%r196, %r195, %r194, 28;
	shf.r.wrap.b32 	%r197, %r194, %r195, 28;
	mov.b64 	%rd418, {%r197, %r196};
	shf.l.wrap.b32 	%r198, %r194, %r195, 30;
	shf.l.wrap.b32 	%r199, %r195, %r194, 30;
	mov.b64 	%rd419, {%r199, %r198};
	xor.b64  	%rd420, %rd419, %rd418;
	shf.l.wrap.b32 	%r200, %r194, %r195, 25;
	shf.l.wrap.b32 	%r201, %r195, %r194, 25;
	mov.b64 	%rd421, {%r201, %r200};
	xor.b64  	%rd422, %rd420, %rd421;
	add.s64 	%rd423, %rd416, %rd422;
	add.s64 	%rd424, %rd423, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r202,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r203}, %rd417;
	}
	shf.r.wrap.b32 	%r204, %r203, %r202, 14;
	shf.r.wrap.b32 	%r205, %r202, %r203, 14;
	mov.b64 	%rd425, {%r205, %r204};
	shf.r.wrap.b32 	%r206, %r203, %r202, 18;
	shf.r.wrap.b32 	%r207, %r202, %r203, 18;
	mov.b64 	%rd426, {%r207, %r206};
	xor.b64  	%rd427, %rd426, %rd425;
	shf.l.wrap.b32 	%r208, %r202, %r203, 23;
	shf.l.wrap.b32 	%r209, %r203, %r202, 23;
	mov.b64 	%rd428, {%r209, %r208};
	xor.b64  	%rd429, %rd427, %rd428;
	xor.b64  	%rd430, %rd393, %rd369;
	and.b64  	%rd431, %rd417, %rd430;
	xor.b64  	%rd432, %rd431, %rd369;
	add.s64 	%rd433, %rd352, %rd4232;
	ld.const.u64 	%rd24, [k_sha512+32];
	add.s64 	%rd434, %rd433, %rd24;
	add.s64 	%rd435, %rd434, %rd432;
	add.s64 	%rd436, %rd435, %rd429;
	add.s64 	%rd437, %rd436, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r210,%dummy}, %rd424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r211}, %rd424;
	}
	shf.r.wrap.b32 	%r212, %r211, %r210, 28;
	shf.r.wrap.b32 	%r213, %r210, %r211, 28;
	mov.b64 	%rd438, {%r213, %r212};
	shf.l.wrap.b32 	%r214, %r210, %r211, 30;
	shf.l.wrap.b32 	%r215, %r211, %r210, 30;
	mov.b64 	%rd439, {%r215, %r214};
	xor.b64  	%rd440, %rd439, %rd438;
	shf.l.wrap.b32 	%r216, %r210, %r211, 25;
	shf.l.wrap.b32 	%r217, %r211, %r210, 25;
	mov.b64 	%rd441, {%r217, %r216};
	xor.b64  	%rd442, %rd440, %rd441;
	xor.b64  	%rd443, %rd424, %rd376;
	xor.b64  	%rd444, %rd424, %rd400;
	and.b64  	%rd445, %rd444, %rd443;
	xor.b64  	%rd446, %rd445, %rd424;
	add.s64 	%rd447, %rd436, %rd446;
	add.s64 	%rd448, %rd447, %rd442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r218,%dummy}, %rd437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r219}, %rd437;
	}
	shf.r.wrap.b32 	%r220, %r219, %r218, 14;
	shf.r.wrap.b32 	%r221, %r218, %r219, 14;
	mov.b64 	%rd449, {%r221, %r220};
	shf.r.wrap.b32 	%r222, %r219, %r218, 18;
	shf.r.wrap.b32 	%r223, %r218, %r219, 18;
	mov.b64 	%rd450, {%r223, %r222};
	xor.b64  	%rd451, %rd450, %rd449;
	shf.l.wrap.b32 	%r224, %r218, %r219, 23;
	shf.l.wrap.b32 	%r225, %r219, %r218, 23;
	mov.b64 	%rd452, {%r225, %r224};
	xor.b64  	%rd453, %rd451, %rd452;
	xor.b64  	%rd454, %rd417, %rd393;
	and.b64  	%rd455, %rd437, %rd454;
	xor.b64  	%rd456, %rd455, %rd393;
	add.s64 	%rd457, %rd369, %rd4233;
	ld.const.u64 	%rd25, [k_sha512+40];
	add.s64 	%rd458, %rd457, %rd25;
	add.s64 	%rd459, %rd458, %rd456;
	add.s64 	%rd460, %rd459, %rd453;
	add.s64 	%rd461, %rd460, %rd376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r226,%dummy}, %rd448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r227}, %rd448;
	}
	shf.r.wrap.b32 	%r228, %r227, %r226, 28;
	shf.r.wrap.b32 	%r229, %r226, %r227, 28;
	mov.b64 	%rd462, {%r229, %r228};
	shf.l.wrap.b32 	%r230, %r226, %r227, 30;
	shf.l.wrap.b32 	%r231, %r227, %r226, 30;
	mov.b64 	%rd463, {%r231, %r230};
	xor.b64  	%rd464, %rd463, %rd462;
	shf.l.wrap.b32 	%r232, %r226, %r227, 25;
	shf.l.wrap.b32 	%r233, %r227, %r226, 25;
	mov.b64 	%rd465, {%r233, %r232};
	xor.b64  	%rd466, %rd464, %rd465;
	xor.b64  	%rd467, %rd448, %rd400;
	xor.b64  	%rd468, %rd448, %rd424;
	and.b64  	%rd469, %rd468, %rd467;
	xor.b64  	%rd470, %rd469, %rd448;
	add.s64 	%rd471, %rd460, %rd470;
	add.s64 	%rd472, %rd471, %rd466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r234,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r235}, %rd461;
	}
	shf.r.wrap.b32 	%r236, %r235, %r234, 14;
	shf.r.wrap.b32 	%r237, %r234, %r235, 14;
	mov.b64 	%rd473, {%r237, %r236};
	shf.r.wrap.b32 	%r238, %r235, %r234, 18;
	shf.r.wrap.b32 	%r239, %r234, %r235, 18;
	mov.b64 	%rd474, {%r239, %r238};
	xor.b64  	%rd475, %rd474, %rd473;
	shf.l.wrap.b32 	%r240, %r234, %r235, 23;
	shf.l.wrap.b32 	%r241, %r235, %r234, 23;
	mov.b64 	%rd476, {%r241, %r240};
	xor.b64  	%rd477, %rd475, %rd476;
	xor.b64  	%rd478, %rd437, %rd417;
	and.b64  	%rd479, %rd461, %rd478;
	xor.b64  	%rd480, %rd479, %rd417;
	add.s64 	%rd481, %rd393, %rd4234;
	ld.const.u64 	%rd26, [k_sha512+48];
	add.s64 	%rd482, %rd481, %rd26;
	add.s64 	%rd483, %rd482, %rd480;
	add.s64 	%rd484, %rd483, %rd477;
	add.s64 	%rd485, %rd484, %rd400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r242,%dummy}, %rd472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r243}, %rd472;
	}
	shf.r.wrap.b32 	%r244, %r243, %r242, 28;
	shf.r.wrap.b32 	%r245, %r242, %r243, 28;
	mov.b64 	%rd486, {%r245, %r244};
	shf.l.wrap.b32 	%r246, %r242, %r243, 30;
	shf.l.wrap.b32 	%r247, %r243, %r242, 30;
	mov.b64 	%rd487, {%r247, %r246};
	xor.b64  	%rd488, %rd487, %rd486;
	shf.l.wrap.b32 	%r248, %r242, %r243, 25;
	shf.l.wrap.b32 	%r249, %r243, %r242, 25;
	mov.b64 	%rd489, {%r249, %r248};
	xor.b64  	%rd490, %rd488, %rd489;
	xor.b64  	%rd491, %rd472, %rd424;
	xor.b64  	%rd492, %rd472, %rd448;
	and.b64  	%rd493, %rd492, %rd491;
	xor.b64  	%rd494, %rd493, %rd472;
	add.s64 	%rd495, %rd484, %rd494;
	add.s64 	%rd496, %rd495, %rd490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r250,%dummy}, %rd485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r251}, %rd485;
	}
	shf.r.wrap.b32 	%r252, %r251, %r250, 14;
	shf.r.wrap.b32 	%r253, %r250, %r251, 14;
	mov.b64 	%rd497, {%r253, %r252};
	shf.r.wrap.b32 	%r254, %r251, %r250, 18;
	shf.r.wrap.b32 	%r255, %r250, %r251, 18;
	mov.b64 	%rd498, {%r255, %r254};
	xor.b64  	%rd499, %rd498, %rd497;
	shf.l.wrap.b32 	%r256, %r250, %r251, 23;
	shf.l.wrap.b32 	%r257, %r251, %r250, 23;
	mov.b64 	%rd500, {%r257, %r256};
	xor.b64  	%rd501, %rd499, %rd500;
	xor.b64  	%rd502, %rd461, %rd437;
	and.b64  	%rd503, %rd485, %rd502;
	xor.b64  	%rd504, %rd503, %rd437;
	add.s64 	%rd505, %rd417, %rd4235;
	ld.const.u64 	%rd27, [k_sha512+56];
	add.s64 	%rd506, %rd505, %rd27;
	add.s64 	%rd507, %rd506, %rd504;
	add.s64 	%rd508, %rd507, %rd501;
	add.s64 	%rd509, %rd508, %rd424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r258,%dummy}, %rd496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r259}, %rd496;
	}
	shf.r.wrap.b32 	%r260, %r259, %r258, 28;
	shf.r.wrap.b32 	%r261, %r258, %r259, 28;
	mov.b64 	%rd510, {%r261, %r260};
	shf.l.wrap.b32 	%r262, %r258, %r259, 30;
	shf.l.wrap.b32 	%r263, %r259, %r258, 30;
	mov.b64 	%rd511, {%r263, %r262};
	xor.b64  	%rd512, %rd511, %rd510;
	shf.l.wrap.b32 	%r264, %r258, %r259, 25;
	shf.l.wrap.b32 	%r265, %r259, %r258, 25;
	mov.b64 	%rd513, {%r265, %r264};
	xor.b64  	%rd514, %rd512, %rd513;
	xor.b64  	%rd515, %rd496, %rd448;
	xor.b64  	%rd516, %rd496, %rd472;
	and.b64  	%rd517, %rd516, %rd515;
	xor.b64  	%rd518, %rd517, %rd496;
	add.s64 	%rd519, %rd508, %rd518;
	add.s64 	%rd520, %rd519, %rd514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r266,%dummy}, %rd509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r267}, %rd509;
	}
	shf.r.wrap.b32 	%r268, %r267, %r266, 14;
	shf.r.wrap.b32 	%r269, %r266, %r267, 14;
	mov.b64 	%rd521, {%r269, %r268};
	shf.r.wrap.b32 	%r270, %r267, %r266, 18;
	shf.r.wrap.b32 	%r271, %r266, %r267, 18;
	mov.b64 	%rd522, {%r271, %r270};
	xor.b64  	%rd523, %rd522, %rd521;
	shf.l.wrap.b32 	%r272, %r266, %r267, 23;
	shf.l.wrap.b32 	%r273, %r267, %r266, 23;
	mov.b64 	%rd524, {%r273, %r272};
	xor.b64  	%rd525, %rd523, %rd524;
	xor.b64  	%rd526, %rd485, %rd461;
	and.b64  	%rd527, %rd509, %rd526;
	xor.b64  	%rd528, %rd527, %rd461;
	ld.const.u64 	%rd28, [k_sha512+64];
	add.s64 	%rd529, %rd437, %rd28;
	add.s64 	%rd530, %rd529, %rd528;
	add.s64 	%rd531, %rd530, %rd525;
	add.s64 	%rd532, %rd531, 3906369333256140342;
	add.s64 	%rd533, %rd532, %rd448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r274,%dummy}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r275}, %rd520;
	}
	shf.r.wrap.b32 	%r276, %r275, %r274, 28;
	shf.r.wrap.b32 	%r277, %r274, %r275, 28;
	mov.b64 	%rd534, {%r277, %r276};
	shf.l.wrap.b32 	%r278, %r274, %r275, 30;
	shf.l.wrap.b32 	%r279, %r275, %r274, 30;
	mov.b64 	%rd535, {%r279, %r278};
	xor.b64  	%rd536, %rd535, %rd534;
	shf.l.wrap.b32 	%r280, %r274, %r275, 25;
	shf.l.wrap.b32 	%r281, %r275, %r274, 25;
	mov.b64 	%rd537, {%r281, %r280};
	xor.b64  	%rd538, %rd536, %rd537;
	xor.b64  	%rd539, %rd520, %rd472;
	xor.b64  	%rd540, %rd520, %rd496;
	and.b64  	%rd541, %rd540, %rd539;
	xor.b64  	%rd542, %rd541, %rd520;
	add.s64 	%rd543, %rd532, %rd542;
	add.s64 	%rd544, %rd543, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r282,%dummy}, %rd533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r283}, %rd533;
	}
	shf.r.wrap.b32 	%r284, %r283, %r282, 14;
	shf.r.wrap.b32 	%r285, %r282, %r283, 14;
	mov.b64 	%rd545, {%r285, %r284};
	shf.r.wrap.b32 	%r286, %r283, %r282, 18;
	shf.r.wrap.b32 	%r287, %r282, %r283, 18;
	mov.b64 	%rd546, {%r287, %r286};
	xor.b64  	%rd547, %rd546, %rd545;
	shf.l.wrap.b32 	%r288, %r282, %r283, 23;
	shf.l.wrap.b32 	%r289, %r283, %r282, 23;
	mov.b64 	%rd548, {%r289, %r288};
	xor.b64  	%rd549, %rd547, %rd548;
	xor.b64  	%rd550, %rd509, %rd485;
	and.b64  	%rd551, %rd533, %rd550;
	xor.b64  	%rd552, %rd551, %rd485;
	ld.const.u64 	%rd29, [k_sha512+72];
	add.s64 	%rd553, %rd461, %rd29;
	add.s64 	%rd554, %rd553, %rd552;
	add.s64 	%rd555, %rd554, %rd549;
	add.s64 	%rd556, %rd555, 3906369333256140342;
	add.s64 	%rd557, %rd556, %rd472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r290,%dummy}, %rd544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r291}, %rd544;
	}
	shf.r.wrap.b32 	%r292, %r291, %r290, 28;
	shf.r.wrap.b32 	%r293, %r290, %r291, 28;
	mov.b64 	%rd558, {%r293, %r292};
	shf.l.wrap.b32 	%r294, %r290, %r291, 30;
	shf.l.wrap.b32 	%r295, %r291, %r290, 30;
	mov.b64 	%rd559, {%r295, %r294};
	xor.b64  	%rd560, %rd559, %rd558;
	shf.l.wrap.b32 	%r296, %r290, %r291, 25;
	shf.l.wrap.b32 	%r297, %r291, %r290, 25;
	mov.b64 	%rd561, {%r297, %r296};
	xor.b64  	%rd562, %rd560, %rd561;
	xor.b64  	%rd563, %rd544, %rd496;
	xor.b64  	%rd564, %rd544, %rd520;
	and.b64  	%rd565, %rd564, %rd563;
	xor.b64  	%rd566, %rd565, %rd544;
	add.s64 	%rd567, %rd556, %rd566;
	add.s64 	%rd568, %rd567, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r298,%dummy}, %rd557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r299}, %rd557;
	}
	shf.r.wrap.b32 	%r300, %r299, %r298, 14;
	shf.r.wrap.b32 	%r301, %r298, %r299, 14;
	mov.b64 	%rd569, {%r301, %r300};
	shf.r.wrap.b32 	%r302, %r299, %r298, 18;
	shf.r.wrap.b32 	%r303, %r298, %r299, 18;
	mov.b64 	%rd570, {%r303, %r302};
	xor.b64  	%rd571, %rd570, %rd569;
	shf.l.wrap.b32 	%r304, %r298, %r299, 23;
	shf.l.wrap.b32 	%r305, %r299, %r298, 23;
	mov.b64 	%rd572, {%r305, %r304};
	xor.b64  	%rd573, %rd571, %rd572;
	xor.b64  	%rd574, %rd533, %rd509;
	and.b64  	%rd575, %rd557, %rd574;
	xor.b64  	%rd576, %rd575, %rd509;
	ld.const.u64 	%rd30, [k_sha512+80];
	add.s64 	%rd577, %rd485, %rd30;
	add.s64 	%rd578, %rd577, %rd576;
	add.s64 	%rd579, %rd578, %rd573;
	add.s64 	%rd580, %rd579, 3906369333256140342;
	add.s64 	%rd581, %rd580, %rd496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd568;
	}
	shf.r.wrap.b32 	%r308, %r307, %r306, 28;
	shf.r.wrap.b32 	%r309, %r306, %r307, 28;
	mov.b64 	%rd582, {%r309, %r308};
	shf.l.wrap.b32 	%r310, %r306, %r307, 30;
	shf.l.wrap.b32 	%r311, %r307, %r306, 30;
	mov.b64 	%rd583, {%r311, %r310};
	xor.b64  	%rd584, %rd583, %rd582;
	shf.l.wrap.b32 	%r312, %r306, %r307, 25;
	shf.l.wrap.b32 	%r313, %r307, %r306, 25;
	mov.b64 	%rd585, {%r313, %r312};
	xor.b64  	%rd586, %rd584, %rd585;
	xor.b64  	%rd587, %rd568, %rd520;
	xor.b64  	%rd588, %rd568, %rd544;
	and.b64  	%rd589, %rd588, %rd587;
	xor.b64  	%rd590, %rd589, %rd568;
	add.s64 	%rd591, %rd580, %rd590;
	add.s64 	%rd592, %rd591, %rd586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r314,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r315}, %rd581;
	}
	shf.r.wrap.b32 	%r316, %r315, %r314, 14;
	shf.r.wrap.b32 	%r317, %r314, %r315, 14;
	mov.b64 	%rd593, {%r317, %r316};
	shf.r.wrap.b32 	%r318, %r315, %r314, 18;
	shf.r.wrap.b32 	%r319, %r314, %r315, 18;
	mov.b64 	%rd594, {%r319, %r318};
	xor.b64  	%rd595, %rd594, %rd593;
	shf.l.wrap.b32 	%r320, %r314, %r315, 23;
	shf.l.wrap.b32 	%r321, %r315, %r314, 23;
	mov.b64 	%rd596, {%r321, %r320};
	xor.b64  	%rd597, %rd595, %rd596;
	xor.b64  	%rd598, %rd557, %rd533;
	and.b64  	%rd599, %rd581, %rd598;
	xor.b64  	%rd600, %rd599, %rd533;
	ld.const.u64 	%rd31, [k_sha512+88];
	add.s64 	%rd601, %rd509, %rd31;
	add.s64 	%rd602, %rd601, %rd600;
	add.s64 	%rd603, %rd602, %rd597;
	add.s64 	%rd604, %rd603, 3906369333256140342;
	add.s64 	%rd605, %rd604, %rd520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r322,%dummy}, %rd592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r323}, %rd592;
	}
	shf.r.wrap.b32 	%r324, %r323, %r322, 28;
	shf.r.wrap.b32 	%r325, %r322, %r323, 28;
	mov.b64 	%rd606, {%r325, %r324};
	shf.l.wrap.b32 	%r326, %r322, %r323, 30;
	shf.l.wrap.b32 	%r327, %r323, %r322, 30;
	mov.b64 	%rd607, {%r327, %r326};
	xor.b64  	%rd608, %rd607, %rd606;
	shf.l.wrap.b32 	%r328, %r322, %r323, 25;
	shf.l.wrap.b32 	%r329, %r323, %r322, 25;
	mov.b64 	%rd609, {%r329, %r328};
	xor.b64  	%rd610, %rd608, %rd609;
	xor.b64  	%rd611, %rd592, %rd544;
	xor.b64  	%rd612, %rd592, %rd568;
	and.b64  	%rd613, %rd612, %rd611;
	xor.b64  	%rd614, %rd613, %rd592;
	add.s64 	%rd615, %rd604, %rd614;
	add.s64 	%rd616, %rd615, %rd610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r330,%dummy}, %rd605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r331}, %rd605;
	}
	shf.r.wrap.b32 	%r332, %r331, %r330, 14;
	shf.r.wrap.b32 	%r333, %r330, %r331, 14;
	mov.b64 	%rd617, {%r333, %r332};
	shf.r.wrap.b32 	%r334, %r331, %r330, 18;
	shf.r.wrap.b32 	%r335, %r330, %r331, 18;
	mov.b64 	%rd618, {%r335, %r334};
	xor.b64  	%rd619, %rd618, %rd617;
	shf.l.wrap.b32 	%r336, %r330, %r331, 23;
	shf.l.wrap.b32 	%r337, %r331, %r330, 23;
	mov.b64 	%rd620, {%r337, %r336};
	xor.b64  	%rd621, %rd619, %rd620;
	xor.b64  	%rd622, %rd581, %rd557;
	and.b64  	%rd623, %rd605, %rd622;
	xor.b64  	%rd624, %rd623, %rd557;
	ld.const.u64 	%rd32, [k_sha512+96];
	add.s64 	%rd625, %rd533, %rd32;
	add.s64 	%rd626, %rd625, %rd624;
	add.s64 	%rd627, %rd626, %rd621;
	add.s64 	%rd628, %rd627, 3906369333256140342;
	add.s64 	%rd4227, %rd628, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r338,%dummy}, %rd616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r339}, %rd616;
	}
	shf.r.wrap.b32 	%r340, %r339, %r338, 28;
	shf.r.wrap.b32 	%r341, %r338, %r339, 28;
	mov.b64 	%rd629, {%r341, %r340};
	shf.l.wrap.b32 	%r342, %r338, %r339, 30;
	shf.l.wrap.b32 	%r343, %r339, %r338, 30;
	mov.b64 	%rd630, {%r343, %r342};
	xor.b64  	%rd631, %rd630, %rd629;
	shf.l.wrap.b32 	%r344, %r338, %r339, 25;
	shf.l.wrap.b32 	%r345, %r339, %r338, 25;
	mov.b64 	%rd632, {%r345, %r344};
	xor.b64  	%rd633, %rd631, %rd632;
	xor.b64  	%rd634, %rd616, %rd568;
	xor.b64  	%rd635, %rd616, %rd592;
	and.b64  	%rd636, %rd635, %rd634;
	xor.b64  	%rd637, %rd636, %rd616;
	add.s64 	%rd638, %rd628, %rd637;
	add.s64 	%rd4223, %rd638, %rd633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r346,%dummy}, %rd4227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r347}, %rd4227;
	}
	shf.r.wrap.b32 	%r348, %r347, %r346, 14;
	shf.r.wrap.b32 	%r349, %r346, %r347, 14;
	mov.b64 	%rd639, {%r349, %r348};
	shf.r.wrap.b32 	%r350, %r347, %r346, 18;
	shf.r.wrap.b32 	%r351, %r346, %r347, 18;
	mov.b64 	%rd640, {%r351, %r350};
	xor.b64  	%rd641, %rd640, %rd639;
	shf.l.wrap.b32 	%r352, %r346, %r347, 23;
	shf.l.wrap.b32 	%r353, %r347, %r346, 23;
	mov.b64 	%rd642, {%r353, %r352};
	xor.b64  	%rd643, %rd641, %rd642;
	xor.b64  	%rd644, %rd605, %rd581;
	and.b64  	%rd645, %rd4227, %rd644;
	xor.b64  	%rd646, %rd645, %rd581;
	ld.const.u64 	%rd35, [k_sha512+104];
	add.s64 	%rd647, %rd557, %rd35;
	add.s64 	%rd648, %rd647, %rd646;
	add.s64 	%rd649, %rd648, %rd643;
	add.s64 	%rd650, %rd649, 3906369333256140342;
	add.s64 	%rd4226, %rd650, %rd568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd4223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd4223;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 28;
	shf.r.wrap.b32 	%r357, %r354, %r355, 28;
	mov.b64 	%rd651, {%r357, %r356};
	shf.l.wrap.b32 	%r358, %r354, %r355, 30;
	shf.l.wrap.b32 	%r359, %r355, %r354, 30;
	mov.b64 	%rd652, {%r359, %r358};
	xor.b64  	%rd653, %rd652, %rd651;
	shf.l.wrap.b32 	%r360, %r354, %r355, 25;
	shf.l.wrap.b32 	%r361, %r355, %r354, 25;
	mov.b64 	%rd654, {%r361, %r360};
	xor.b64  	%rd655, %rd653, %rd654;
	xor.b64  	%rd656, %rd4223, %rd592;
	xor.b64  	%rd657, %rd4223, %rd616;
	and.b64  	%rd658, %rd657, %rd656;
	xor.b64  	%rd659, %rd658, %rd4223;
	add.s64 	%rd660, %rd650, %rd659;
	add.s64 	%rd4222, %rd660, %rd655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r362,%dummy}, %rd4226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r363}, %rd4226;
	}
	shf.r.wrap.b32 	%r364, %r363, %r362, 14;
	shf.r.wrap.b32 	%r365, %r362, %r363, 14;
	mov.b64 	%rd661, {%r365, %r364};
	shf.r.wrap.b32 	%r366, %r363, %r362, 18;
	shf.r.wrap.b32 	%r367, %r362, %r363, 18;
	mov.b64 	%rd662, {%r367, %r366};
	xor.b64  	%rd663, %rd662, %rd661;
	shf.l.wrap.b32 	%r368, %r362, %r363, 23;
	shf.l.wrap.b32 	%r369, %r363, %r362, 23;
	mov.b64 	%rd664, {%r369, %r368};
	xor.b64  	%rd665, %rd663, %rd664;
	xor.b64  	%rd666, %rd4227, %rd605;
	and.b64  	%rd667, %rd4226, %rd666;
	xor.b64  	%rd668, %rd667, %rd605;
	ld.const.u64 	%rd38, [k_sha512+112];
	add.s64 	%rd669, %rd581, %rd38;
	add.s64 	%rd670, %rd669, %rd668;
	add.s64 	%rd671, %rd670, %rd665;
	add.s64 	%rd672, %rd671, 3906369333256140342;
	add.s64 	%rd4225, %rd672, %rd592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r370,%dummy}, %rd4222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r371}, %rd4222;
	}
	shf.r.wrap.b32 	%r372, %r371, %r370, 28;
	shf.r.wrap.b32 	%r373, %r370, %r371, 28;
	mov.b64 	%rd673, {%r373, %r372};
	shf.l.wrap.b32 	%r374, %r370, %r371, 30;
	shf.l.wrap.b32 	%r375, %r371, %r370, 30;
	mov.b64 	%rd674, {%r375, %r374};
	xor.b64  	%rd675, %rd674, %rd673;
	shf.l.wrap.b32 	%r376, %r370, %r371, 25;
	shf.l.wrap.b32 	%r377, %r371, %r370, 25;
	mov.b64 	%rd676, {%r377, %r376};
	xor.b64  	%rd677, %rd675, %rd676;
	xor.b64  	%rd678, %rd4222, %rd616;
	xor.b64  	%rd679, %rd4222, %rd4223;
	and.b64  	%rd680, %rd679, %rd678;
	xor.b64  	%rd681, %rd680, %rd4222;
	add.s64 	%rd682, %rd672, %rd681;
	add.s64 	%rd4221, %rd682, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd4225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r379}, %rd4225;
	}
	shf.r.wrap.b32 	%r380, %r379, %r378, 14;
	shf.r.wrap.b32 	%r381, %r378, %r379, 14;
	mov.b64 	%rd683, {%r381, %r380};
	shf.r.wrap.b32 	%r382, %r379, %r378, 18;
	shf.r.wrap.b32 	%r383, %r378, %r379, 18;
	mov.b64 	%rd684, {%r383, %r382};
	xor.b64  	%rd685, %rd684, %rd683;
	shf.l.wrap.b32 	%r384, %r378, %r379, 23;
	shf.l.wrap.b32 	%r385, %r379, %r378, 23;
	mov.b64 	%rd686, {%r385, %r384};
	xor.b64  	%rd687, %rd685, %rd686;
	xor.b64  	%rd688, %rd4226, %rd4227;
	and.b64  	%rd689, %rd4225, %rd688;
	xor.b64  	%rd690, %rd689, %rd4227;
	ld.const.u64 	%rd41, [k_sha512+120];
	add.s64 	%rd691, %rd605, %rd41;
	add.s64 	%rd692, %rd691, %rd690;
	add.s64 	%rd693, %rd692, %rd687;
	add.s64 	%rd694, %rd693, 3906369333256140342;
	add.s64 	%rd4224, %rd694, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r386,%dummy}, %rd4221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r387}, %rd4221;
	}
	shf.r.wrap.b32 	%r388, %r387, %r386, 28;
	shf.r.wrap.b32 	%r389, %r386, %r387, 28;
	mov.b64 	%rd695, {%r389, %r388};
	shf.l.wrap.b32 	%r390, %r386, %r387, 30;
	shf.l.wrap.b32 	%r391, %r387, %r386, 30;
	mov.b64 	%rd696, {%r391, %r390};
	xor.b64  	%rd697, %rd696, %rd695;
	shf.l.wrap.b32 	%r392, %r386, %r387, 25;
	shf.l.wrap.b32 	%r393, %r387, %r386, 25;
	mov.b64 	%rd698, {%r393, %r392};
	xor.b64  	%rd699, %rd697, %rd698;
	xor.b64  	%rd700, %rd4221, %rd4223;
	xor.b64  	%rd701, %rd4221, %rd4222;
	and.b64  	%rd702, %rd701, %rd700;
	xor.b64  	%rd703, %rd702, %rd4221;
	add.s64 	%rd704, %rd694, %rd703;
	add.s64 	%rd4220, %rd704, %rd699;
	mov.u64 	%rd4219, 3906369333256140342;
	mov.u32 	%r2917, 16;
	mov.u64 	%rd4236, %rd4219;
	mov.u64 	%rd4237, %rd4219;
	mov.u64 	%rd4238, %rd4219;
	mov.u64 	%rd4239, %rd4219;
	mov.u64 	%rd4240, %rd4219;
	mov.u64 	%rd4241, %rd4219;
	mov.u64 	%rd4242, %rd4219;

BB1_2:
	shr.u64 	%rd705, %rd4242, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r394,%dummy}, %rd4242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r395}, %rd4242;
	}
	shf.r.wrap.b32 	%r396, %r395, %r394, 19;
	shf.r.wrap.b32 	%r397, %r394, %r395, 19;
	mov.b64 	%rd706, {%r397, %r396};
	xor.b64  	%rd707, %rd706, %rd705;
	shf.l.wrap.b32 	%r398, %r394, %r395, 3;
	shf.l.wrap.b32 	%r399, %r395, %r394, 3;
	mov.b64 	%rd708, {%r399, %r398};
	xor.b64  	%rd709, %rd707, %rd708;
	shr.u64 	%rd710, %rd4229, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r400,%dummy}, %rd4229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r401}, %rd4229;
	}
	shf.r.wrap.b32 	%r402, %r401, %r400, 1;
	shf.r.wrap.b32 	%r403, %r400, %r401, 1;
	mov.b64 	%rd711, {%r403, %r402};
	xor.b64  	%rd712, %rd711, %rd710;
	shf.r.wrap.b32 	%r404, %r401, %r400, 8;
	shf.r.wrap.b32 	%r405, %r400, %r401, 8;
	mov.b64 	%rd713, {%r405, %r404};
	xor.b64  	%rd714, %rd712, %rd713;
	add.s64 	%rd715, %rd4228, %rd4237;
	add.s64 	%rd716, %rd715, %rd709;
	add.s64 	%rd4228, %rd716, %rd714;
	shr.u64 	%rd717, %rd4219, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r406,%dummy}, %rd4219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r407}, %rd4219;
	}
	shf.r.wrap.b32 	%r408, %r407, %r406, 19;
	shf.r.wrap.b32 	%r409, %r406, %r407, 19;
	mov.b64 	%rd718, {%r409, %r408};
	xor.b64  	%rd719, %rd718, %rd717;
	shf.l.wrap.b32 	%r410, %r406, %r407, 3;
	shf.l.wrap.b32 	%r411, %r407, %r406, 3;
	mov.b64 	%rd720, {%r411, %r410};
	xor.b64  	%rd721, %rd719, %rd720;
	shr.u64 	%rd722, %rd4230, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r412,%dummy}, %rd4230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r413}, %rd4230;
	}
	shf.r.wrap.b32 	%r414, %r413, %r412, 1;
	shf.r.wrap.b32 	%r415, %r412, %r413, 1;
	mov.b64 	%rd723, {%r415, %r414};
	xor.b64  	%rd724, %rd723, %rd722;
	shf.r.wrap.b32 	%r416, %r413, %r412, 8;
	shf.r.wrap.b32 	%r417, %r412, %r413, 8;
	mov.b64 	%rd725, {%r417, %r416};
	xor.b64  	%rd726, %rd724, %rd725;
	add.s64 	%rd727, %rd4229, %rd4238;
	add.s64 	%rd728, %rd727, %rd721;
	add.s64 	%rd4229, %rd728, %rd726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r418,%dummy}, %rd4228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r419}, %rd4228;
	}
	shf.r.wrap.b32 	%r420, %r419, %r418, 19;
	shf.r.wrap.b32 	%r421, %r418, %r419, 19;
	mov.b64 	%rd729, {%r421, %r420};
	shf.l.wrap.b32 	%r422, %r418, %r419, 3;
	shf.l.wrap.b32 	%r423, %r419, %r418, 3;
	mov.b64 	%rd730, {%r423, %r422};
	shr.u64 	%rd731, %rd4228, 6;
	xor.b64  	%rd732, %rd729, %rd731;
	xor.b64  	%rd733, %rd732, %rd730;
	shr.u64 	%rd734, %rd4231, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r424,%dummy}, %rd4231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r425}, %rd4231;
	}
	shf.r.wrap.b32 	%r426, %r425, %r424, 1;
	shf.r.wrap.b32 	%r427, %r424, %r425, 1;
	mov.b64 	%rd735, {%r427, %r426};
	xor.b64  	%rd736, %rd735, %rd734;
	shf.r.wrap.b32 	%r428, %r425, %r424, 8;
	shf.r.wrap.b32 	%r429, %r424, %r425, 8;
	mov.b64 	%rd737, {%r429, %r428};
	xor.b64  	%rd738, %rd736, %rd737;
	add.s64 	%rd739, %rd4230, %rd4239;
	add.s64 	%rd740, %rd739, %rd733;
	add.s64 	%rd4230, %rd740, %rd738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r430,%dummy}, %rd4229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r431}, %rd4229;
	}
	shf.r.wrap.b32 	%r432, %r431, %r430, 19;
	shf.r.wrap.b32 	%r433, %r430, %r431, 19;
	mov.b64 	%rd741, {%r433, %r432};
	shf.l.wrap.b32 	%r434, %r430, %r431, 3;
	shf.l.wrap.b32 	%r435, %r431, %r430, 3;
	mov.b64 	%rd742, {%r435, %r434};
	shr.u64 	%rd743, %rd4229, 6;
	xor.b64  	%rd744, %rd741, %rd743;
	xor.b64  	%rd745, %rd744, %rd742;
	shr.u64 	%rd746, %rd4232, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r436,%dummy}, %rd4232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r437}, %rd4232;
	}
	shf.r.wrap.b32 	%r438, %r437, %r436, 1;
	shf.r.wrap.b32 	%r439, %r436, %r437, 1;
	mov.b64 	%rd747, {%r439, %r438};
	xor.b64  	%rd748, %rd747, %rd746;
	shf.r.wrap.b32 	%r440, %r437, %r436, 8;
	shf.r.wrap.b32 	%r441, %r436, %r437, 8;
	mov.b64 	%rd749, {%r441, %r440};
	xor.b64  	%rd750, %rd748, %rd749;
	add.s64 	%rd751, %rd4231, %rd4240;
	add.s64 	%rd752, %rd751, %rd745;
	add.s64 	%rd4231, %rd752, %rd750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r442,%dummy}, %rd4230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r443}, %rd4230;
	}
	shf.r.wrap.b32 	%r444, %r443, %r442, 19;
	shf.r.wrap.b32 	%r445, %r442, %r443, 19;
	mov.b64 	%rd753, {%r445, %r444};
	shf.l.wrap.b32 	%r446, %r442, %r443, 3;
	shf.l.wrap.b32 	%r447, %r443, %r442, 3;
	mov.b64 	%rd754, {%r447, %r446};
	shr.u64 	%rd755, %rd4230, 6;
	xor.b64  	%rd756, %rd753, %rd755;
	xor.b64  	%rd757, %rd756, %rd754;
	shr.u64 	%rd758, %rd4233, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r448,%dummy}, %rd4233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r449}, %rd4233;
	}
	shf.r.wrap.b32 	%r450, %r449, %r448, 1;
	shf.r.wrap.b32 	%r451, %r448, %r449, 1;
	mov.b64 	%rd759, {%r451, %r450};
	xor.b64  	%rd760, %rd759, %rd758;
	shf.r.wrap.b32 	%r452, %r449, %r448, 8;
	shf.r.wrap.b32 	%r453, %r448, %r449, 8;
	mov.b64 	%rd761, {%r453, %r452};
	xor.b64  	%rd762, %rd760, %rd761;
	add.s64 	%rd763, %rd4232, %rd4241;
	add.s64 	%rd764, %rd763, %rd757;
	add.s64 	%rd4232, %rd764, %rd762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r454,%dummy}, %rd4231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r455}, %rd4231;
	}
	shf.r.wrap.b32 	%r456, %r455, %r454, 19;
	shf.r.wrap.b32 	%r457, %r454, %r455, 19;
	mov.b64 	%rd765, {%r457, %r456};
	shf.l.wrap.b32 	%r458, %r454, %r455, 3;
	shf.l.wrap.b32 	%r459, %r455, %r454, 3;
	mov.b64 	%rd766, {%r459, %r458};
	shr.u64 	%rd767, %rd4231, 6;
	xor.b64  	%rd768, %rd765, %rd767;
	xor.b64  	%rd769, %rd768, %rd766;
	shr.u64 	%rd770, %rd4234, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r460,%dummy}, %rd4234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r461}, %rd4234;
	}
	shf.r.wrap.b32 	%r462, %r461, %r460, 1;
	shf.r.wrap.b32 	%r463, %r460, %r461, 1;
	mov.b64 	%rd771, {%r463, %r462};
	xor.b64  	%rd772, %rd771, %rd770;
	shf.r.wrap.b32 	%r464, %r461, %r460, 8;
	shf.r.wrap.b32 	%r465, %r460, %r461, 8;
	mov.b64 	%rd773, {%r465, %r464};
	xor.b64  	%rd774, %rd772, %rd773;
	add.s64 	%rd775, %rd4233, %rd4242;
	add.s64 	%rd776, %rd775, %rd769;
	add.s64 	%rd4233, %rd776, %rd774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r466,%dummy}, %rd4232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r467}, %rd4232;
	}
	shf.r.wrap.b32 	%r468, %r467, %r466, 19;
	shf.r.wrap.b32 	%r469, %r466, %r467, 19;
	mov.b64 	%rd777, {%r469, %r468};
	shf.l.wrap.b32 	%r470, %r466, %r467, 3;
	shf.l.wrap.b32 	%r471, %r467, %r466, 3;
	mov.b64 	%rd778, {%r471, %r470};
	shr.u64 	%rd779, %rd4232, 6;
	xor.b64  	%rd780, %rd777, %rd779;
	xor.b64  	%rd781, %rd780, %rd778;
	shr.u64 	%rd782, %rd4235, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd4235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd4235;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 1;
	shf.r.wrap.b32 	%r475, %r472, %r473, 1;
	mov.b64 	%rd783, {%r475, %r474};
	xor.b64  	%rd784, %rd783, %rd782;
	shf.r.wrap.b32 	%r476, %r473, %r472, 8;
	shf.r.wrap.b32 	%r477, %r472, %r473, 8;
	mov.b64 	%rd785, {%r477, %r476};
	xor.b64  	%rd786, %rd784, %rd785;
	add.s64 	%rd787, %rd4219, %rd4234;
	add.s64 	%rd788, %rd787, %rd781;
	add.s64 	%rd4234, %rd788, %rd786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r478,%dummy}, %rd4233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r479}, %rd4233;
	}
	shf.r.wrap.b32 	%r480, %r479, %r478, 19;
	shf.r.wrap.b32 	%r481, %r478, %r479, 19;
	mov.b64 	%rd789, {%r481, %r480};
	shf.l.wrap.b32 	%r482, %r478, %r479, 3;
	shf.l.wrap.b32 	%r483, %r479, %r478, 3;
	mov.b64 	%rd790, {%r483, %r482};
	shr.u64 	%rd791, %rd4233, 6;
	xor.b64  	%rd792, %rd789, %rd791;
	xor.b64  	%rd793, %rd792, %rd790;
	shr.u64 	%rd794, %rd4236, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd4236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd4236;
	}
	shf.r.wrap.b32 	%r486, %r485, %r484, 1;
	shf.r.wrap.b32 	%r487, %r484, %r485, 1;
	mov.b64 	%rd795, {%r487, %r486};
	xor.b64  	%rd796, %rd795, %rd794;
	shf.r.wrap.b32 	%r488, %r485, %r484, 8;
	shf.r.wrap.b32 	%r489, %r484, %r485, 8;
	mov.b64 	%rd797, {%r489, %r488};
	xor.b64  	%rd798, %rd796, %rd797;
	add.s64 	%rd799, %rd4228, %rd4235;
	add.s64 	%rd800, %rd799, %rd793;
	add.s64 	%rd4235, %rd800, %rd798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r490,%dummy}, %rd4234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r491}, %rd4234;
	}
	shf.r.wrap.b32 	%r492, %r491, %r490, 19;
	shf.r.wrap.b32 	%r493, %r490, %r491, 19;
	mov.b64 	%rd801, {%r493, %r492};
	shf.l.wrap.b32 	%r494, %r490, %r491, 3;
	shf.l.wrap.b32 	%r495, %r491, %r490, 3;
	mov.b64 	%rd802, {%r495, %r494};
	shr.u64 	%rd803, %rd4234, 6;
	xor.b64  	%rd804, %rd801, %rd803;
	xor.b64  	%rd805, %rd804, %rd802;
	shr.u64 	%rd806, %rd4237, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r496,%dummy}, %rd4237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r497}, %rd4237;
	}
	shf.r.wrap.b32 	%r498, %r497, %r496, 1;
	shf.r.wrap.b32 	%r499, %r496, %r497, 1;
	mov.b64 	%rd807, {%r499, %r498};
	xor.b64  	%rd808, %rd807, %rd806;
	shf.r.wrap.b32 	%r500, %r497, %r496, 8;
	shf.r.wrap.b32 	%r501, %r496, %r497, 8;
	mov.b64 	%rd809, {%r501, %r500};
	xor.b64  	%rd810, %rd808, %rd809;
	add.s64 	%rd811, %rd4229, %rd4236;
	add.s64 	%rd812, %rd811, %rd805;
	add.s64 	%rd4236, %rd812, %rd810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r502,%dummy}, %rd4235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r503}, %rd4235;
	}
	shf.r.wrap.b32 	%r504, %r503, %r502, 19;
	shf.r.wrap.b32 	%r505, %r502, %r503, 19;
	mov.b64 	%rd813, {%r505, %r504};
	shf.l.wrap.b32 	%r506, %r502, %r503, 3;
	shf.l.wrap.b32 	%r507, %r503, %r502, 3;
	mov.b64 	%rd814, {%r507, %r506};
	shr.u64 	%rd815, %rd4235, 6;
	xor.b64  	%rd816, %rd813, %rd815;
	xor.b64  	%rd817, %rd816, %rd814;
	shr.u64 	%rd818, %rd4238, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r508,%dummy}, %rd4238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd4238;
	}
	shf.r.wrap.b32 	%r510, %r509, %r508, 1;
	shf.r.wrap.b32 	%r511, %r508, %r509, 1;
	mov.b64 	%rd819, {%r511, %r510};
	xor.b64  	%rd820, %rd819, %rd818;
	shf.r.wrap.b32 	%r512, %r509, %r508, 8;
	shf.r.wrap.b32 	%r513, %r508, %r509, 8;
	mov.b64 	%rd821, {%r513, %r512};
	xor.b64  	%rd822, %rd820, %rd821;
	add.s64 	%rd823, %rd4230, %rd4237;
	add.s64 	%rd824, %rd823, %rd817;
	add.s64 	%rd4237, %rd824, %rd822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r514,%dummy}, %rd4236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r515}, %rd4236;
	}
	shf.r.wrap.b32 	%r516, %r515, %r514, 19;
	shf.r.wrap.b32 	%r517, %r514, %r515, 19;
	mov.b64 	%rd825, {%r517, %r516};
	shf.l.wrap.b32 	%r518, %r514, %r515, 3;
	shf.l.wrap.b32 	%r519, %r515, %r514, 3;
	mov.b64 	%rd826, {%r519, %r518};
	shr.u64 	%rd827, %rd4236, 6;
	xor.b64  	%rd828, %rd825, %rd827;
	xor.b64  	%rd829, %rd828, %rd826;
	shr.u64 	%rd830, %rd4239, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd4239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r521}, %rd4239;
	}
	shf.r.wrap.b32 	%r522, %r521, %r520, 1;
	shf.r.wrap.b32 	%r523, %r520, %r521, 1;
	mov.b64 	%rd831, {%r523, %r522};
	xor.b64  	%rd832, %rd831, %rd830;
	shf.r.wrap.b32 	%r524, %r521, %r520, 8;
	shf.r.wrap.b32 	%r525, %r520, %r521, 8;
	mov.b64 	%rd833, {%r525, %r524};
	xor.b64  	%rd834, %rd832, %rd833;
	add.s64 	%rd835, %rd4231, %rd4238;
	add.s64 	%rd836, %rd835, %rd829;
	add.s64 	%rd4238, %rd836, %rd834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r526,%dummy}, %rd4237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r527}, %rd4237;
	}
	shf.r.wrap.b32 	%r528, %r527, %r526, 19;
	shf.r.wrap.b32 	%r529, %r526, %r527, 19;
	mov.b64 	%rd837, {%r529, %r528};
	shf.l.wrap.b32 	%r530, %r526, %r527, 3;
	shf.l.wrap.b32 	%r531, %r527, %r526, 3;
	mov.b64 	%rd838, {%r531, %r530};
	shr.u64 	%rd839, %rd4237, 6;
	xor.b64  	%rd840, %rd837, %rd839;
	xor.b64  	%rd841, %rd840, %rd838;
	shr.u64 	%rd842, %rd4240, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r532,%dummy}, %rd4240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r533}, %rd4240;
	}
	shf.r.wrap.b32 	%r534, %r533, %r532, 1;
	shf.r.wrap.b32 	%r535, %r532, %r533, 1;
	mov.b64 	%rd843, {%r535, %r534};
	xor.b64  	%rd844, %rd843, %rd842;
	shf.r.wrap.b32 	%r536, %r533, %r532, 8;
	shf.r.wrap.b32 	%r537, %r532, %r533, 8;
	mov.b64 	%rd845, {%r537, %r536};
	xor.b64  	%rd846, %rd844, %rd845;
	add.s64 	%rd847, %rd4232, %rd4239;
	add.s64 	%rd848, %rd847, %rd841;
	add.s64 	%rd4239, %rd848, %rd846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd4238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r539}, %rd4238;
	}
	shf.r.wrap.b32 	%r540, %r539, %r538, 19;
	shf.r.wrap.b32 	%r541, %r538, %r539, 19;
	mov.b64 	%rd849, {%r541, %r540};
	shf.l.wrap.b32 	%r542, %r538, %r539, 3;
	shf.l.wrap.b32 	%r543, %r539, %r538, 3;
	mov.b64 	%rd850, {%r543, %r542};
	shr.u64 	%rd851, %rd4238, 6;
	xor.b64  	%rd852, %rd849, %rd851;
	xor.b64  	%rd853, %rd852, %rd850;
	shr.u64 	%rd854, %rd4241, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r544,%dummy}, %rd4241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r545}, %rd4241;
	}
	shf.r.wrap.b32 	%r546, %r545, %r544, 1;
	shf.r.wrap.b32 	%r547, %r544, %r545, 1;
	mov.b64 	%rd855, {%r547, %r546};
	xor.b64  	%rd856, %rd855, %rd854;
	shf.r.wrap.b32 	%r548, %r545, %r544, 8;
	shf.r.wrap.b32 	%r549, %r544, %r545, 8;
	mov.b64 	%rd857, {%r549, %r548};
	xor.b64  	%rd858, %rd856, %rd857;
	add.s64 	%rd859, %rd4233, %rd4240;
	add.s64 	%rd860, %rd859, %rd853;
	add.s64 	%rd4240, %rd860, %rd858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r550,%dummy}, %rd4239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r551}, %rd4239;
	}
	shf.r.wrap.b32 	%r552, %r551, %r550, 19;
	shf.r.wrap.b32 	%r553, %r550, %r551, 19;
	mov.b64 	%rd861, {%r553, %r552};
	shf.l.wrap.b32 	%r554, %r550, %r551, 3;
	shf.l.wrap.b32 	%r555, %r551, %r550, 3;
	mov.b64 	%rd862, {%r555, %r554};
	shr.u64 	%rd863, %rd4239, 6;
	xor.b64  	%rd864, %rd861, %rd863;
	xor.b64  	%rd865, %rd864, %rd862;
	shr.u64 	%rd866, %rd4242, 7;
	shf.r.wrap.b32 	%r556, %r395, %r394, 1;
	shf.r.wrap.b32 	%r557, %r394, %r395, 1;
	mov.b64 	%rd867, {%r557, %r556};
	xor.b64  	%rd868, %rd867, %rd866;
	shf.r.wrap.b32 	%r558, %r395, %r394, 8;
	shf.r.wrap.b32 	%r559, %r394, %r395, 8;
	mov.b64 	%rd869, {%r559, %r558};
	xor.b64  	%rd870, %rd868, %rd869;
	add.s64 	%rd871, %rd4234, %rd4241;
	add.s64 	%rd872, %rd871, %rd865;
	add.s64 	%rd4241, %rd872, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r560,%dummy}, %rd4240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r561}, %rd4240;
	}
	shf.r.wrap.b32 	%r562, %r561, %r560, 19;
	shf.r.wrap.b32 	%r563, %r560, %r561, 19;
	mov.b64 	%rd873, {%r563, %r562};
	shf.l.wrap.b32 	%r564, %r560, %r561, 3;
	shf.l.wrap.b32 	%r565, %r561, %r560, 3;
	mov.b64 	%rd874, {%r565, %r564};
	shr.u64 	%rd875, %rd4240, 6;
	xor.b64  	%rd876, %rd873, %rd875;
	xor.b64  	%rd877, %rd876, %rd874;
	shr.u64 	%rd878, %rd4219, 7;
	shf.r.wrap.b32 	%r566, %r407, %r406, 1;
	shf.r.wrap.b32 	%r567, %r406, %r407, 1;
	mov.b64 	%rd879, {%r567, %r566};
	xor.b64  	%rd880, %rd879, %rd878;
	shf.r.wrap.b32 	%r568, %r407, %r406, 8;
	shf.r.wrap.b32 	%r569, %r406, %r407, 8;
	mov.b64 	%rd881, {%r569, %r568};
	xor.b64  	%rd882, %rd880, %rd881;
	add.s64 	%rd883, %rd4235, %rd4242;
	add.s64 	%rd884, %rd883, %rd877;
	add.s64 	%rd4242, %rd884, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd4241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd4241;
	}
	shf.r.wrap.b32 	%r572, %r571, %r570, 19;
	shf.r.wrap.b32 	%r573, %r570, %r571, 19;
	mov.b64 	%rd885, {%r573, %r572};
	shf.l.wrap.b32 	%r574, %r570, %r571, 3;
	shf.l.wrap.b32 	%r575, %r571, %r570, 3;
	mov.b64 	%rd886, {%r575, %r574};
	shr.u64 	%rd887, %rd4241, 6;
	xor.b64  	%rd888, %rd885, %rd887;
	xor.b64  	%rd889, %rd888, %rd886;
	shf.r.wrap.b32 	%r576, %r419, %r418, 1;
	shf.r.wrap.b32 	%r577, %r418, %r419, 1;
	mov.b64 	%rd890, {%r577, %r576};
	shf.r.wrap.b32 	%r578, %r419, %r418, 8;
	shf.r.wrap.b32 	%r579, %r418, %r419, 8;
	mov.b64 	%rd891, {%r579, %r578};
	shr.u64 	%rd892, %rd4228, 7;
	xor.b64  	%rd893, %rd890, %rd892;
	xor.b64  	%rd894, %rd893, %rd891;
	add.s64 	%rd895, %rd4236, %rd4219;
	add.s64 	%rd896, %rd895, %rd889;
	add.s64 	%rd4219, %rd896, %rd894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r580,%dummy}, %rd4224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r581}, %rd4224;
	}
	shf.r.wrap.b32 	%r582, %r581, %r580, 18;
	shf.r.wrap.b32 	%r583, %r580, %r581, 18;
	mov.b64 	%rd897, {%r583, %r582};
	shf.r.wrap.b32 	%r584, %r581, %r580, 14;
	shf.r.wrap.b32 	%r585, %r580, %r581, 14;
	mov.b64 	%rd898, {%r585, %r584};
	xor.b64  	%rd899, %rd897, %rd898;
	shf.l.wrap.b32 	%r586, %r580, %r581, 23;
	shf.l.wrap.b32 	%r587, %r581, %r580, 23;
	mov.b64 	%rd900, {%r587, %r586};
	xor.b64  	%rd901, %rd899, %rd900;
	xor.b64  	%rd902, %rd4225, %rd4226;
	and.b64  	%rd903, %rd902, %rd4224;
	xor.b64  	%rd904, %rd903, %rd4226;
	add.s64 	%rd905, %rd904, %rd4227;
	add.s64 	%rd906, %rd905, %rd4228;
	add.s64 	%rd93, %rd4218, 128;
	ld.const.u64 	%rd907, [%rd4218+128];
	add.s64 	%rd908, %rd906, %rd907;
	add.s64 	%rd909, %rd908, %rd901;
	add.s64 	%rd910, %rd909, %rd4223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd4220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd4220;
	}
	shf.l.wrap.b32 	%r590, %r589, %r588, 30;
	shf.l.wrap.b32 	%r591, %r588, %r589, 30;
	mov.b64 	%rd911, {%r591, %r590};
	shf.r.wrap.b32 	%r592, %r588, %r589, 28;
	shf.r.wrap.b32 	%r593, %r589, %r588, 28;
	mov.b64 	%rd912, {%r593, %r592};
	xor.b64  	%rd913, %rd911, %rd912;
	shf.l.wrap.b32 	%r594, %r589, %r588, 25;
	shf.l.wrap.b32 	%r595, %r588, %r589, 25;
	mov.b64 	%rd914, {%r595, %r594};
	xor.b64  	%rd915, %rd913, %rd914;
	xor.b64  	%rd916, %rd4220, %rd4221;
	xor.b64  	%rd917, %rd4220, %rd4222;
	and.b64  	%rd918, %rd916, %rd917;
	xor.b64  	%rd919, %rd918, %rd4220;
	add.s64 	%rd920, %rd909, %rd919;
	add.s64 	%rd921, %rd920, %rd915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd910;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 14;
	shf.r.wrap.b32 	%r599, %r596, %r597, 14;
	mov.b64 	%rd922, {%r599, %r598};
	shf.r.wrap.b32 	%r600, %r597, %r596, 18;
	shf.r.wrap.b32 	%r601, %r596, %r597, 18;
	mov.b64 	%rd923, {%r601, %r600};
	xor.b64  	%rd924, %rd923, %rd922;
	shf.l.wrap.b32 	%r602, %r596, %r597, 23;
	shf.l.wrap.b32 	%r603, %r597, %r596, 23;
	mov.b64 	%rd925, {%r603, %r602};
	xor.b64  	%rd926, %rd924, %rd925;
	xor.b64  	%rd927, %rd4224, %rd4225;
	and.b64  	%rd928, %rd910, %rd927;
	xor.b64  	%rd929, %rd928, %rd4225;
	add.s64 	%rd930, %rd4229, %rd4226;
	ld.const.u64 	%rd931, [%rd4218+136];
	add.s64 	%rd932, %rd930, %rd931;
	add.s64 	%rd933, %rd932, %rd929;
	add.s64 	%rd934, %rd933, %rd926;
	add.s64 	%rd935, %rd934, %rd4222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r604,%dummy}, %rd921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd921;
	}
	shf.r.wrap.b32 	%r606, %r605, %r604, 28;
	shf.r.wrap.b32 	%r607, %r604, %r605, 28;
	mov.b64 	%rd936, {%r607, %r606};
	shf.l.wrap.b32 	%r608, %r604, %r605, 30;
	shf.l.wrap.b32 	%r609, %r605, %r604, 30;
	mov.b64 	%rd937, {%r609, %r608};
	xor.b64  	%rd938, %rd937, %rd936;
	shf.l.wrap.b32 	%r610, %r604, %r605, 25;
	shf.l.wrap.b32 	%r611, %r605, %r604, 25;
	mov.b64 	%rd939, {%r611, %r610};
	xor.b64  	%rd940, %rd938, %rd939;
	xor.b64  	%rd941, %rd921, %rd4221;
	xor.b64  	%rd942, %rd921, %rd4220;
	and.b64  	%rd943, %rd942, %rd941;
	xor.b64  	%rd944, %rd943, %rd921;
	add.s64 	%rd945, %rd934, %rd944;
	add.s64 	%rd946, %rd945, %rd940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd935;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 14;
	shf.r.wrap.b32 	%r615, %r612, %r613, 14;
	mov.b64 	%rd947, {%r615, %r614};
	shf.r.wrap.b32 	%r616, %r613, %r612, 18;
	shf.r.wrap.b32 	%r617, %r612, %r613, 18;
	mov.b64 	%rd948, {%r617, %r616};
	xor.b64  	%rd949, %rd948, %rd947;
	shf.l.wrap.b32 	%r618, %r612, %r613, 23;
	shf.l.wrap.b32 	%r619, %r613, %r612, 23;
	mov.b64 	%rd950, {%r619, %r618};
	xor.b64  	%rd951, %rd949, %rd950;
	xor.b64  	%rd952, %rd910, %rd4224;
	and.b64  	%rd953, %rd935, %rd952;
	xor.b64  	%rd954, %rd953, %rd4224;
	add.s64 	%rd955, %rd4230, %rd4225;
	ld.const.u64 	%rd956, [%rd4218+144];
	add.s64 	%rd957, %rd955, %rd956;
	add.s64 	%rd958, %rd957, %rd954;
	add.s64 	%rd959, %rd958, %rd951;
	add.s64 	%rd960, %rd959, %rd4221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r620,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r621}, %rd946;
	}
	shf.r.wrap.b32 	%r622, %r621, %r620, 28;
	shf.r.wrap.b32 	%r623, %r620, %r621, 28;
	mov.b64 	%rd961, {%r623, %r622};
	shf.l.wrap.b32 	%r624, %r620, %r621, 30;
	shf.l.wrap.b32 	%r625, %r621, %r620, 30;
	mov.b64 	%rd962, {%r625, %r624};
	xor.b64  	%rd963, %rd962, %rd961;
	shf.l.wrap.b32 	%r626, %r620, %r621, 25;
	shf.l.wrap.b32 	%r627, %r621, %r620, 25;
	mov.b64 	%rd964, {%r627, %r626};
	xor.b64  	%rd965, %rd963, %rd964;
	xor.b64  	%rd966, %rd946, %rd4220;
	xor.b64  	%rd967, %rd946, %rd921;
	and.b64  	%rd968, %rd967, %rd966;
	xor.b64  	%rd969, %rd968, %rd946;
	add.s64 	%rd970, %rd959, %rd969;
	add.s64 	%rd971, %rd970, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r628,%dummy}, %rd960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r629}, %rd960;
	}
	shf.r.wrap.b32 	%r630, %r629, %r628, 14;
	shf.r.wrap.b32 	%r631, %r628, %r629, 14;
	mov.b64 	%rd972, {%r631, %r630};
	shf.r.wrap.b32 	%r632, %r629, %r628, 18;
	shf.r.wrap.b32 	%r633, %r628, %r629, 18;
	mov.b64 	%rd973, {%r633, %r632};
	xor.b64  	%rd974, %rd973, %rd972;
	shf.l.wrap.b32 	%r634, %r628, %r629, 23;
	shf.l.wrap.b32 	%r635, %r629, %r628, 23;
	mov.b64 	%rd975, {%r635, %r634};
	xor.b64  	%rd976, %rd974, %rd975;
	xor.b64  	%rd977, %rd935, %rd910;
	and.b64  	%rd978, %rd960, %rd977;
	xor.b64  	%rd979, %rd978, %rd910;
	add.s64 	%rd980, %rd4231, %rd4224;
	ld.const.u64 	%rd981, [%rd4218+152];
	add.s64 	%rd982, %rd980, %rd981;
	add.s64 	%rd983, %rd982, %rd979;
	add.s64 	%rd984, %rd983, %rd976;
	add.s64 	%rd985, %rd984, %rd4220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r636,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r637}, %rd971;
	}
	shf.r.wrap.b32 	%r638, %r637, %r636, 28;
	shf.r.wrap.b32 	%r639, %r636, %r637, 28;
	mov.b64 	%rd986, {%r639, %r638};
	shf.l.wrap.b32 	%r640, %r636, %r637, 30;
	shf.l.wrap.b32 	%r641, %r637, %r636, 30;
	mov.b64 	%rd987, {%r641, %r640};
	xor.b64  	%rd988, %rd987, %rd986;
	shf.l.wrap.b32 	%r642, %r636, %r637, 25;
	shf.l.wrap.b32 	%r643, %r637, %r636, 25;
	mov.b64 	%rd989, {%r643, %r642};
	xor.b64  	%rd990, %rd988, %rd989;
	xor.b64  	%rd991, %rd971, %rd921;
	xor.b64  	%rd992, %rd971, %rd946;
	and.b64  	%rd993, %rd992, %rd991;
	xor.b64  	%rd994, %rd993, %rd971;
	add.s64 	%rd995, %rd984, %rd994;
	add.s64 	%rd996, %rd995, %rd990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r644,%dummy}, %rd985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r645}, %rd985;
	}
	shf.r.wrap.b32 	%r646, %r645, %r644, 14;
	shf.r.wrap.b32 	%r647, %r644, %r645, 14;
	mov.b64 	%rd997, {%r647, %r646};
	shf.r.wrap.b32 	%r648, %r645, %r644, 18;
	shf.r.wrap.b32 	%r649, %r644, %r645, 18;
	mov.b64 	%rd998, {%r649, %r648};
	xor.b64  	%rd999, %rd998, %rd997;
	shf.l.wrap.b32 	%r650, %r644, %r645, 23;
	shf.l.wrap.b32 	%r651, %r645, %r644, 23;
	mov.b64 	%rd1000, {%r651, %r650};
	xor.b64  	%rd1001, %rd999, %rd1000;
	xor.b64  	%rd1002, %rd960, %rd935;
	and.b64  	%rd1003, %rd985, %rd1002;
	xor.b64  	%rd1004, %rd1003, %rd935;
	add.s64 	%rd1005, %rd910, %rd4232;
	ld.const.u64 	%rd1006, [%rd4218+160];
	add.s64 	%rd1007, %rd1005, %rd1006;
	add.s64 	%rd1008, %rd1007, %rd1004;
	add.s64 	%rd1009, %rd1008, %rd1001;
	add.s64 	%rd1010, %rd1009, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r652,%dummy}, %rd996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd996;
	}
	shf.r.wrap.b32 	%r654, %r653, %r652, 28;
	shf.r.wrap.b32 	%r655, %r652, %r653, 28;
	mov.b64 	%rd1011, {%r655, %r654};
	shf.l.wrap.b32 	%r656, %r652, %r653, 30;
	shf.l.wrap.b32 	%r657, %r653, %r652, 30;
	mov.b64 	%rd1012, {%r657, %r656};
	xor.b64  	%rd1013, %rd1012, %rd1011;
	shf.l.wrap.b32 	%r658, %r652, %r653, 25;
	shf.l.wrap.b32 	%r659, %r653, %r652, 25;
	mov.b64 	%rd1014, {%r659, %r658};
	xor.b64  	%rd1015, %rd1013, %rd1014;
	xor.b64  	%rd1016, %rd996, %rd946;
	xor.b64  	%rd1017, %rd996, %rd971;
	and.b64  	%rd1018, %rd1017, %rd1016;
	xor.b64  	%rd1019, %rd1018, %rd996;
	add.s64 	%rd1020, %rd1009, %rd1019;
	add.s64 	%rd1021, %rd1020, %rd1015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r660,%dummy}, %rd1010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd1010;
	}
	shf.r.wrap.b32 	%r662, %r661, %r660, 14;
	shf.r.wrap.b32 	%r663, %r660, %r661, 14;
	mov.b64 	%rd1022, {%r663, %r662};
	shf.r.wrap.b32 	%r664, %r661, %r660, 18;
	shf.r.wrap.b32 	%r665, %r660, %r661, 18;
	mov.b64 	%rd1023, {%r665, %r664};
	xor.b64  	%rd1024, %rd1023, %rd1022;
	shf.l.wrap.b32 	%r666, %r660, %r661, 23;
	shf.l.wrap.b32 	%r667, %r661, %r660, 23;
	mov.b64 	%rd1025, {%r667, %r666};
	xor.b64  	%rd1026, %rd1024, %rd1025;
	xor.b64  	%rd1027, %rd985, %rd960;
	and.b64  	%rd1028, %rd1010, %rd1027;
	xor.b64  	%rd1029, %rd1028, %rd960;
	add.s64 	%rd1030, %rd935, %rd4233;
	ld.const.u64 	%rd1031, [%rd4218+168];
	add.s64 	%rd1032, %rd1030, %rd1031;
	add.s64 	%rd1033, %rd1032, %rd1029;
	add.s64 	%rd1034, %rd1033, %rd1026;
	add.s64 	%rd1035, %rd1034, %rd946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r668,%dummy}, %rd1021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd1021;
	}
	shf.r.wrap.b32 	%r670, %r669, %r668, 28;
	shf.r.wrap.b32 	%r671, %r668, %r669, 28;
	mov.b64 	%rd1036, {%r671, %r670};
	shf.l.wrap.b32 	%r672, %r668, %r669, 30;
	shf.l.wrap.b32 	%r673, %r669, %r668, 30;
	mov.b64 	%rd1037, {%r673, %r672};
	xor.b64  	%rd1038, %rd1037, %rd1036;
	shf.l.wrap.b32 	%r674, %r668, %r669, 25;
	shf.l.wrap.b32 	%r675, %r669, %r668, 25;
	mov.b64 	%rd1039, {%r675, %r674};
	xor.b64  	%rd1040, %rd1038, %rd1039;
	xor.b64  	%rd1041, %rd1021, %rd971;
	xor.b64  	%rd1042, %rd1021, %rd996;
	and.b64  	%rd1043, %rd1042, %rd1041;
	xor.b64  	%rd1044, %rd1043, %rd1021;
	add.s64 	%rd1045, %rd1034, %rd1044;
	add.s64 	%rd1046, %rd1045, %rd1040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r676,%dummy}, %rd1035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r677}, %rd1035;
	}
	shf.r.wrap.b32 	%r678, %r677, %r676, 14;
	shf.r.wrap.b32 	%r679, %r676, %r677, 14;
	mov.b64 	%rd1047, {%r679, %r678};
	shf.r.wrap.b32 	%r680, %r677, %r676, 18;
	shf.r.wrap.b32 	%r681, %r676, %r677, 18;
	mov.b64 	%rd1048, {%r681, %r680};
	xor.b64  	%rd1049, %rd1048, %rd1047;
	shf.l.wrap.b32 	%r682, %r676, %r677, 23;
	shf.l.wrap.b32 	%r683, %r677, %r676, 23;
	mov.b64 	%rd1050, {%r683, %r682};
	xor.b64  	%rd1051, %rd1049, %rd1050;
	xor.b64  	%rd1052, %rd1010, %rd985;
	and.b64  	%rd1053, %rd1035, %rd1052;
	xor.b64  	%rd1054, %rd1053, %rd985;
	add.s64 	%rd1055, %rd960, %rd4234;
	ld.const.u64 	%rd1056, [%rd4218+176];
	add.s64 	%rd1057, %rd1055, %rd1056;
	add.s64 	%rd1058, %rd1057, %rd1054;
	add.s64 	%rd1059, %rd1058, %rd1051;
	add.s64 	%rd1060, %rd1059, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r684,%dummy}, %rd1046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r685}, %rd1046;
	}
	shf.r.wrap.b32 	%r686, %r685, %r684, 28;
	shf.r.wrap.b32 	%r687, %r684, %r685, 28;
	mov.b64 	%rd1061, {%r687, %r686};
	shf.l.wrap.b32 	%r688, %r684, %r685, 30;
	shf.l.wrap.b32 	%r689, %r685, %r684, 30;
	mov.b64 	%rd1062, {%r689, %r688};
	xor.b64  	%rd1063, %rd1062, %rd1061;
	shf.l.wrap.b32 	%r690, %r684, %r685, 25;
	shf.l.wrap.b32 	%r691, %r685, %r684, 25;
	mov.b64 	%rd1064, {%r691, %r690};
	xor.b64  	%rd1065, %rd1063, %rd1064;
	xor.b64  	%rd1066, %rd1046, %rd996;
	xor.b64  	%rd1067, %rd1046, %rd1021;
	and.b64  	%rd1068, %rd1067, %rd1066;
	xor.b64  	%rd1069, %rd1068, %rd1046;
	add.s64 	%rd1070, %rd1059, %rd1069;
	add.s64 	%rd1071, %rd1070, %rd1065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r692,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r693}, %rd1060;
	}
	shf.r.wrap.b32 	%r694, %r693, %r692, 14;
	shf.r.wrap.b32 	%r695, %r692, %r693, 14;
	mov.b64 	%rd1072, {%r695, %r694};
	shf.r.wrap.b32 	%r696, %r693, %r692, 18;
	shf.r.wrap.b32 	%r697, %r692, %r693, 18;
	mov.b64 	%rd1073, {%r697, %r696};
	xor.b64  	%rd1074, %rd1073, %rd1072;
	shf.l.wrap.b32 	%r698, %r692, %r693, 23;
	shf.l.wrap.b32 	%r699, %r693, %r692, 23;
	mov.b64 	%rd1075, {%r699, %r698};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	xor.b64  	%rd1077, %rd1035, %rd1010;
	and.b64  	%rd1078, %rd1060, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd1010;
	add.s64 	%rd1080, %rd985, %rd4235;
	ld.const.u64 	%rd1081, [%rd4218+184];
	add.s64 	%rd1082, %rd1080, %rd1081;
	add.s64 	%rd1083, %rd1082, %rd1079;
	add.s64 	%rd1084, %rd1083, %rd1076;
	add.s64 	%rd1085, %rd1084, %rd996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r700,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r701}, %rd1071;
	}
	shf.r.wrap.b32 	%r702, %r701, %r700, 28;
	shf.r.wrap.b32 	%r703, %r700, %r701, 28;
	mov.b64 	%rd1086, {%r703, %r702};
	shf.l.wrap.b32 	%r704, %r700, %r701, 30;
	shf.l.wrap.b32 	%r705, %r701, %r700, 30;
	mov.b64 	%rd1087, {%r705, %r704};
	xor.b64  	%rd1088, %rd1087, %rd1086;
	shf.l.wrap.b32 	%r706, %r700, %r701, 25;
	shf.l.wrap.b32 	%r707, %r701, %r700, 25;
	mov.b64 	%rd1089, {%r707, %r706};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	xor.b64  	%rd1091, %rd1071, %rd1021;
	xor.b64  	%rd1092, %rd1071, %rd1046;
	and.b64  	%rd1093, %rd1092, %rd1091;
	xor.b64  	%rd1094, %rd1093, %rd1071;
	add.s64 	%rd1095, %rd1084, %rd1094;
	add.s64 	%rd1096, %rd1095, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r708,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r709}, %rd1085;
	}
	shf.r.wrap.b32 	%r710, %r709, %r708, 14;
	shf.r.wrap.b32 	%r711, %r708, %r709, 14;
	mov.b64 	%rd1097, {%r711, %r710};
	shf.r.wrap.b32 	%r712, %r709, %r708, 18;
	shf.r.wrap.b32 	%r713, %r708, %r709, 18;
	mov.b64 	%rd1098, {%r713, %r712};
	xor.b64  	%rd1099, %rd1098, %rd1097;
	shf.l.wrap.b32 	%r714, %r708, %r709, 23;
	shf.l.wrap.b32 	%r715, %r709, %r708, 23;
	mov.b64 	%rd1100, {%r715, %r714};
	xor.b64  	%rd1101, %rd1099, %rd1100;
	xor.b64  	%rd1102, %rd1060, %rd1035;
	and.b64  	%rd1103, %rd1085, %rd1102;
	xor.b64  	%rd1104, %rd1103, %rd1035;
	add.s64 	%rd1105, %rd1010, %rd4236;
	ld.const.u64 	%rd1106, [%rd4218+192];
	add.s64 	%rd1107, %rd1105, %rd1106;
	add.s64 	%rd1108, %rd1107, %rd1104;
	add.s64 	%rd1109, %rd1108, %rd1101;
	add.s64 	%rd1110, %rd1109, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r716,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1096;
	}
	shf.r.wrap.b32 	%r718, %r717, %r716, 28;
	shf.r.wrap.b32 	%r719, %r716, %r717, 28;
	mov.b64 	%rd1111, {%r719, %r718};
	shf.l.wrap.b32 	%r720, %r716, %r717, 30;
	shf.l.wrap.b32 	%r721, %r717, %r716, 30;
	mov.b64 	%rd1112, {%r721, %r720};
	xor.b64  	%rd1113, %rd1112, %rd1111;
	shf.l.wrap.b32 	%r722, %r716, %r717, 25;
	shf.l.wrap.b32 	%r723, %r717, %r716, 25;
	mov.b64 	%rd1114, {%r723, %r722};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	xor.b64  	%rd1116, %rd1096, %rd1046;
	xor.b64  	%rd1117, %rd1096, %rd1071;
	and.b64  	%rd1118, %rd1117, %rd1116;
	xor.b64  	%rd1119, %rd1118, %rd1096;
	add.s64 	%rd1120, %rd1109, %rd1119;
	add.s64 	%rd1121, %rd1120, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r724,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd1110;
	}
	shf.r.wrap.b32 	%r726, %r725, %r724, 14;
	shf.r.wrap.b32 	%r727, %r724, %r725, 14;
	mov.b64 	%rd1122, {%r727, %r726};
	shf.r.wrap.b32 	%r728, %r725, %r724, 18;
	shf.r.wrap.b32 	%r729, %r724, %r725, 18;
	mov.b64 	%rd1123, {%r729, %r728};
	xor.b64  	%rd1124, %rd1123, %rd1122;
	shf.l.wrap.b32 	%r730, %r724, %r725, 23;
	shf.l.wrap.b32 	%r731, %r725, %r724, 23;
	mov.b64 	%rd1125, {%r731, %r730};
	xor.b64  	%rd1126, %rd1124, %rd1125;
	xor.b64  	%rd1127, %rd1085, %rd1060;
	and.b64  	%rd1128, %rd1110, %rd1127;
	xor.b64  	%rd1129, %rd1128, %rd1060;
	add.s64 	%rd1130, %rd1035, %rd4237;
	ld.const.u64 	%rd1131, [%rd4218+200];
	add.s64 	%rd1132, %rd1130, %rd1131;
	add.s64 	%rd1133, %rd1132, %rd1129;
	add.s64 	%rd1134, %rd1133, %rd1126;
	add.s64 	%rd1135, %rd1134, %rd1046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r732,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r733}, %rd1121;
	}
	shf.r.wrap.b32 	%r734, %r733, %r732, 28;
	shf.r.wrap.b32 	%r735, %r732, %r733, 28;
	mov.b64 	%rd1136, {%r735, %r734};
	shf.l.wrap.b32 	%r736, %r732, %r733, 30;
	shf.l.wrap.b32 	%r737, %r733, %r732, 30;
	mov.b64 	%rd1137, {%r737, %r736};
	xor.b64  	%rd1138, %rd1137, %rd1136;
	shf.l.wrap.b32 	%r738, %r732, %r733, 25;
	shf.l.wrap.b32 	%r739, %r733, %r732, 25;
	mov.b64 	%rd1139, {%r739, %r738};
	xor.b64  	%rd1140, %rd1138, %rd1139;
	xor.b64  	%rd1141, %rd1121, %rd1071;
	xor.b64  	%rd1142, %rd1121, %rd1096;
	and.b64  	%rd1143, %rd1142, %rd1141;
	xor.b64  	%rd1144, %rd1143, %rd1121;
	add.s64 	%rd1145, %rd1134, %rd1144;
	add.s64 	%rd1146, %rd1145, %rd1140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r740,%dummy}, %rd1135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r741}, %rd1135;
	}
	shf.r.wrap.b32 	%r742, %r741, %r740, 14;
	shf.r.wrap.b32 	%r743, %r740, %r741, 14;
	mov.b64 	%rd1147, {%r743, %r742};
	shf.r.wrap.b32 	%r744, %r741, %r740, 18;
	shf.r.wrap.b32 	%r745, %r740, %r741, 18;
	mov.b64 	%rd1148, {%r745, %r744};
	xor.b64  	%rd1149, %rd1148, %rd1147;
	shf.l.wrap.b32 	%r746, %r740, %r741, 23;
	shf.l.wrap.b32 	%r747, %r741, %r740, 23;
	mov.b64 	%rd1150, {%r747, %r746};
	xor.b64  	%rd1151, %rd1149, %rd1150;
	xor.b64  	%rd1152, %rd1110, %rd1085;
	and.b64  	%rd1153, %rd1135, %rd1152;
	xor.b64  	%rd1154, %rd1153, %rd1085;
	add.s64 	%rd1155, %rd1060, %rd4238;
	ld.const.u64 	%rd1156, [%rd4218+208];
	add.s64 	%rd1157, %rd1155, %rd1156;
	add.s64 	%rd1158, %rd1157, %rd1154;
	add.s64 	%rd1159, %rd1158, %rd1151;
	add.s64 	%rd1160, %rd1159, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r748,%dummy}, %rd1146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r749}, %rd1146;
	}
	shf.r.wrap.b32 	%r750, %r749, %r748, 28;
	shf.r.wrap.b32 	%r751, %r748, %r749, 28;
	mov.b64 	%rd1161, {%r751, %r750};
	shf.l.wrap.b32 	%r752, %r748, %r749, 30;
	shf.l.wrap.b32 	%r753, %r749, %r748, 30;
	mov.b64 	%rd1162, {%r753, %r752};
	xor.b64  	%rd1163, %rd1162, %rd1161;
	shf.l.wrap.b32 	%r754, %r748, %r749, 25;
	shf.l.wrap.b32 	%r755, %r749, %r748, 25;
	mov.b64 	%rd1164, {%r755, %r754};
	xor.b64  	%rd1165, %rd1163, %rd1164;
	xor.b64  	%rd1166, %rd1146, %rd1096;
	xor.b64  	%rd1167, %rd1146, %rd1121;
	and.b64  	%rd1168, %rd1167, %rd1166;
	xor.b64  	%rd1169, %rd1168, %rd1146;
	add.s64 	%rd1170, %rd1159, %rd1169;
	add.s64 	%rd1171, %rd1170, %rd1165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r756,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r757}, %rd1160;
	}
	shf.r.wrap.b32 	%r758, %r757, %r756, 14;
	shf.r.wrap.b32 	%r759, %r756, %r757, 14;
	mov.b64 	%rd1172, {%r759, %r758};
	shf.r.wrap.b32 	%r760, %r757, %r756, 18;
	shf.r.wrap.b32 	%r761, %r756, %r757, 18;
	mov.b64 	%rd1173, {%r761, %r760};
	xor.b64  	%rd1174, %rd1173, %rd1172;
	shf.l.wrap.b32 	%r762, %r756, %r757, 23;
	shf.l.wrap.b32 	%r763, %r757, %r756, 23;
	mov.b64 	%rd1175, {%r763, %r762};
	xor.b64  	%rd1176, %rd1174, %rd1175;
	xor.b64  	%rd1177, %rd1135, %rd1110;
	and.b64  	%rd1178, %rd1160, %rd1177;
	xor.b64  	%rd1179, %rd1178, %rd1110;
	add.s64 	%rd1180, %rd1085, %rd4239;
	ld.const.u64 	%rd1181, [%rd4218+216];
	add.s64 	%rd1182, %rd1180, %rd1181;
	add.s64 	%rd1183, %rd1182, %rd1179;
	add.s64 	%rd1184, %rd1183, %rd1176;
	add.s64 	%rd1185, %rd1184, %rd1096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r764,%dummy}, %rd1171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r765}, %rd1171;
	}
	shf.r.wrap.b32 	%r766, %r765, %r764, 28;
	shf.r.wrap.b32 	%r767, %r764, %r765, 28;
	mov.b64 	%rd1186, {%r767, %r766};
	shf.l.wrap.b32 	%r768, %r764, %r765, 30;
	shf.l.wrap.b32 	%r769, %r765, %r764, 30;
	mov.b64 	%rd1187, {%r769, %r768};
	xor.b64  	%rd1188, %rd1187, %rd1186;
	shf.l.wrap.b32 	%r770, %r764, %r765, 25;
	shf.l.wrap.b32 	%r771, %r765, %r764, 25;
	mov.b64 	%rd1189, {%r771, %r770};
	xor.b64  	%rd1190, %rd1188, %rd1189;
	xor.b64  	%rd1191, %rd1171, %rd1121;
	xor.b64  	%rd1192, %rd1171, %rd1146;
	and.b64  	%rd1193, %rd1192, %rd1191;
	xor.b64  	%rd1194, %rd1193, %rd1171;
	add.s64 	%rd1195, %rd1184, %rd1194;
	add.s64 	%rd1196, %rd1195, %rd1190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r772,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1185;
	}
	shf.r.wrap.b32 	%r774, %r773, %r772, 14;
	shf.r.wrap.b32 	%r775, %r772, %r773, 14;
	mov.b64 	%rd1197, {%r775, %r774};
	shf.r.wrap.b32 	%r776, %r773, %r772, 18;
	shf.r.wrap.b32 	%r777, %r772, %r773, 18;
	mov.b64 	%rd1198, {%r777, %r776};
	xor.b64  	%rd1199, %rd1198, %rd1197;
	shf.l.wrap.b32 	%r778, %r772, %r773, 23;
	shf.l.wrap.b32 	%r779, %r773, %r772, 23;
	mov.b64 	%rd1200, {%r779, %r778};
	xor.b64  	%rd1201, %rd1199, %rd1200;
	xor.b64  	%rd1202, %rd1160, %rd1135;
	and.b64  	%rd1203, %rd1185, %rd1202;
	xor.b64  	%rd1204, %rd1203, %rd1135;
	add.s64 	%rd1205, %rd1110, %rd4240;
	ld.const.u64 	%rd1206, [%rd4218+224];
	add.s64 	%rd1207, %rd1205, %rd1206;
	add.s64 	%rd1208, %rd1207, %rd1204;
	add.s64 	%rd1209, %rd1208, %rd1201;
	add.s64 	%rd4227, %rd1209, %rd1121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r780,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd1196;
	}
	shf.r.wrap.b32 	%r782, %r781, %r780, 28;
	shf.r.wrap.b32 	%r783, %r780, %r781, 28;
	mov.b64 	%rd1210, {%r783, %r782};
	shf.l.wrap.b32 	%r784, %r780, %r781, 30;
	shf.l.wrap.b32 	%r785, %r781, %r780, 30;
	mov.b64 	%rd1211, {%r785, %r784};
	xor.b64  	%rd1212, %rd1211, %rd1210;
	shf.l.wrap.b32 	%r786, %r780, %r781, 25;
	shf.l.wrap.b32 	%r787, %r781, %r780, 25;
	mov.b64 	%rd1213, {%r787, %r786};
	xor.b64  	%rd1214, %rd1212, %rd1213;
	xor.b64  	%rd1215, %rd1196, %rd1146;
	xor.b64  	%rd1216, %rd1196, %rd1171;
	and.b64  	%rd1217, %rd1216, %rd1215;
	xor.b64  	%rd1218, %rd1217, %rd1196;
	add.s64 	%rd1219, %rd1209, %rd1218;
	add.s64 	%rd4223, %rd1219, %rd1214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r788,%dummy}, %rd4227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r789}, %rd4227;
	}
	shf.r.wrap.b32 	%r790, %r789, %r788, 14;
	shf.r.wrap.b32 	%r791, %r788, %r789, 14;
	mov.b64 	%rd1220, {%r791, %r790};
	shf.r.wrap.b32 	%r792, %r789, %r788, 18;
	shf.r.wrap.b32 	%r793, %r788, %r789, 18;
	mov.b64 	%rd1221, {%r793, %r792};
	xor.b64  	%rd1222, %rd1221, %rd1220;
	shf.l.wrap.b32 	%r794, %r788, %r789, 23;
	shf.l.wrap.b32 	%r795, %r789, %r788, 23;
	mov.b64 	%rd1223, {%r795, %r794};
	xor.b64  	%rd1224, %rd1222, %rd1223;
	xor.b64  	%rd1225, %rd1185, %rd1160;
	and.b64  	%rd1226, %rd4227, %rd1225;
	xor.b64  	%rd1227, %rd1226, %rd1160;
	add.s64 	%rd1228, %rd1135, %rd4241;
	ld.const.u64 	%rd1229, [%rd4218+232];
	add.s64 	%rd1230, %rd1228, %rd1229;
	add.s64 	%rd1231, %rd1230, %rd1227;
	add.s64 	%rd1232, %rd1231, %rd1224;
	add.s64 	%rd4226, %rd1232, %rd1146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r796,%dummy}, %rd4223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r797}, %rd4223;
	}
	shf.r.wrap.b32 	%r798, %r797, %r796, 28;
	shf.r.wrap.b32 	%r799, %r796, %r797, 28;
	mov.b64 	%rd1233, {%r799, %r798};
	shf.l.wrap.b32 	%r800, %r796, %r797, 30;
	shf.l.wrap.b32 	%r801, %r797, %r796, 30;
	mov.b64 	%rd1234, {%r801, %r800};
	xor.b64  	%rd1235, %rd1234, %rd1233;
	shf.l.wrap.b32 	%r802, %r796, %r797, 25;
	shf.l.wrap.b32 	%r803, %r797, %r796, 25;
	mov.b64 	%rd1236, {%r803, %r802};
	xor.b64  	%rd1237, %rd1235, %rd1236;
	xor.b64  	%rd1238, %rd4223, %rd1171;
	xor.b64  	%rd1239, %rd4223, %rd1196;
	and.b64  	%rd1240, %rd1239, %rd1238;
	xor.b64  	%rd1241, %rd1240, %rd4223;
	add.s64 	%rd1242, %rd1232, %rd1241;
	add.s64 	%rd4222, %rd1242, %rd1237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r804,%dummy}, %rd4226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r805}, %rd4226;
	}
	shf.r.wrap.b32 	%r806, %r805, %r804, 14;
	shf.r.wrap.b32 	%r807, %r804, %r805, 14;
	mov.b64 	%rd1243, {%r807, %r806};
	shf.r.wrap.b32 	%r808, %r805, %r804, 18;
	shf.r.wrap.b32 	%r809, %r804, %r805, 18;
	mov.b64 	%rd1244, {%r809, %r808};
	xor.b64  	%rd1245, %rd1244, %rd1243;
	shf.l.wrap.b32 	%r810, %r804, %r805, 23;
	shf.l.wrap.b32 	%r811, %r805, %r804, 23;
	mov.b64 	%rd1246, {%r811, %r810};
	xor.b64  	%rd1247, %rd1245, %rd1246;
	xor.b64  	%rd1248, %rd4227, %rd1185;
	and.b64  	%rd1249, %rd4226, %rd1248;
	xor.b64  	%rd1250, %rd1249, %rd1185;
	add.s64 	%rd1251, %rd1160, %rd4242;
	ld.const.u64 	%rd1252, [%rd4218+240];
	add.s64 	%rd1253, %rd1251, %rd1252;
	add.s64 	%rd1254, %rd1253, %rd1250;
	add.s64 	%rd1255, %rd1254, %rd1247;
	add.s64 	%rd4225, %rd1255, %rd1171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r812,%dummy}, %rd4222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd4222;
	}
	shf.r.wrap.b32 	%r814, %r813, %r812, 28;
	shf.r.wrap.b32 	%r815, %r812, %r813, 28;
	mov.b64 	%rd1256, {%r815, %r814};
	shf.l.wrap.b32 	%r816, %r812, %r813, 30;
	shf.l.wrap.b32 	%r817, %r813, %r812, 30;
	mov.b64 	%rd1257, {%r817, %r816};
	xor.b64  	%rd1258, %rd1257, %rd1256;
	shf.l.wrap.b32 	%r818, %r812, %r813, 25;
	shf.l.wrap.b32 	%r819, %r813, %r812, 25;
	mov.b64 	%rd1259, {%r819, %r818};
	xor.b64  	%rd1260, %rd1258, %rd1259;
	xor.b64  	%rd1261, %rd4222, %rd1196;
	xor.b64  	%rd1262, %rd4222, %rd4223;
	and.b64  	%rd1263, %rd1262, %rd1261;
	xor.b64  	%rd1264, %rd1263, %rd4222;
	add.s64 	%rd1265, %rd1255, %rd1264;
	add.s64 	%rd4221, %rd1265, %rd1260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r820,%dummy}, %rd4225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r821}, %rd4225;
	}
	shf.r.wrap.b32 	%r822, %r821, %r820, 14;
	shf.r.wrap.b32 	%r823, %r820, %r821, 14;
	mov.b64 	%rd1266, {%r823, %r822};
	shf.r.wrap.b32 	%r824, %r821, %r820, 18;
	shf.r.wrap.b32 	%r825, %r820, %r821, 18;
	mov.b64 	%rd1267, {%r825, %r824};
	xor.b64  	%rd1268, %rd1267, %rd1266;
	shf.l.wrap.b32 	%r826, %r820, %r821, 23;
	shf.l.wrap.b32 	%r827, %r821, %r820, 23;
	mov.b64 	%rd1269, {%r827, %r826};
	xor.b64  	%rd1270, %rd1268, %rd1269;
	xor.b64  	%rd1271, %rd4226, %rd4227;
	and.b64  	%rd1272, %rd4225, %rd1271;
	xor.b64  	%rd1273, %rd1272, %rd4227;
	add.s64 	%rd1274, %rd1185, %rd4219;
	ld.const.u64 	%rd1275, [%rd4218+248];
	add.s64 	%rd1276, %rd1274, %rd1275;
	add.s64 	%rd1277, %rd1276, %rd1273;
	add.s64 	%rd1278, %rd1277, %rd1270;
	add.s64 	%rd4224, %rd1278, %rd1196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r828,%dummy}, %rd4221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r829}, %rd4221;
	}
	shf.r.wrap.b32 	%r830, %r829, %r828, 28;
	shf.r.wrap.b32 	%r831, %r828, %r829, 28;
	mov.b64 	%rd1279, {%r831, %r830};
	shf.l.wrap.b32 	%r832, %r828, %r829, 30;
	shf.l.wrap.b32 	%r833, %r829, %r828, 30;
	mov.b64 	%rd1280, {%r833, %r832};
	xor.b64  	%rd1281, %rd1280, %rd1279;
	shf.l.wrap.b32 	%r834, %r828, %r829, 25;
	shf.l.wrap.b32 	%r835, %r829, %r828, 25;
	mov.b64 	%rd1282, {%r835, %r834};
	xor.b64  	%rd1283, %rd1281, %rd1282;
	xor.b64  	%rd1284, %rd4221, %rd4223;
	xor.b64  	%rd1285, %rd4221, %rd4222;
	and.b64  	%rd1286, %rd1285, %rd1284;
	xor.b64  	%rd1287, %rd1286, %rd4221;
	add.s64 	%rd1288, %rd1278, %rd1287;
	add.s64 	%rd4220, %rd1288, %rd1283;
	add.s32 	%r2917, %r2917, 16;
	setp.lt.s32	%p2, %r2917, 80;
	mov.u64 	%rd4218, %rd93;
	@%p2 bra 	BB1_2;

	ld.const.u64 	%rd4217, [k_sha512+120];
	ld.const.u64 	%rd4215, [k_sha512+112];
	ld.const.u64 	%rd4211, [k_sha512+104];
	ld.const.u64 	%rd4210, [k_sha512+96];
	ld.const.u64 	%rd4207, [k_sha512+88];
	ld.const.u64 	%rd4206, [k_sha512+80];
	ld.const.u64 	%rd4205, [k_sha512+72];
	ld.const.u64 	%rd4204, [k_sha512];
	ld.const.u64 	%rd4176, [k_sha512+64];
	ld.const.u64 	%rd4175, [k_sha512+56];
	ld.const.u64 	%rd4174, [k_sha512+48];
	ld.const.u64 	%rd4173, [k_sha512+40];
	ld.const.u64 	%rd4172, [k_sha512+32];
	ld.const.u64 	%rd4171, [k_sha512+24];
	ld.const.u64 	%rd4170, [k_sha512+16];
	ld.const.u64 	%rd4169, [k_sha512+8];
	mov.b64	%rd4278, {%r81, %r79};
	mov.b64	%rd4279, {%r85, %r83};
	mov.b64	%rd4280, {%r89, %r87};
	mov.b64	%rd4281, {%r93, %r91};
	mov.b64	%rd4282, {%r97, %r95};
	mov.b64	%rd4283, {%r101, %r99};
	mov.b64	%rd4284, {%r105, %r103};
	mov.b64	%rd4285, {%r109, %r107};
	mov.b64	%rd4286, {%r113, %r111};
	mov.b64	%rd4287, {%r117, %r115};
	mov.b64	%rd4288, {%r121, %r119};
	mov.b64	%rd4289, {%r125, %r123};
	mov.b64	%rd4290, {%r129, %r127};
	mov.b64	%rd4291, {%r133, %r131};
	cvt.u64.u32	%rd4269, %r30;
	add.s64 	%rd109, %rd4220, 7640891576956012808;
	add.s64 	%rd110, %rd4222, 4354685564936845355;
	add.s64 	%rd111, %rd4224, 5840696475078001361;
	add.s64 	%rd112, %rd4226, 2270897969802886507;
	xor.b64  	%rd4253, %rd2, 6655295901103053916;
	add.s64 	%rd1298, %rd4253, %rd18;
	add.s64 	%rd1299, %rd1298, %rd4204;
	add.s64 	%rd1300, %rd1299, %rd20;
	add.s64 	%rd1301, %rd1299, 2357225248857953701;
	add.s64 	%rd1302, %rd1300, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd1301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd1301;
	}
	shf.r.wrap.b32 	%r839, %r838, %r837, 14;
	shf.r.wrap.b32 	%r840, %r837, %r838, 14;
	mov.b64 	%rd1303, {%r840, %r839};
	shf.r.wrap.b32 	%r841, %r838, %r837, 18;
	shf.r.wrap.b32 	%r842, %r837, %r838, 18;
	mov.b64 	%rd1304, {%r842, %r841};
	xor.b64  	%rd1305, %rd1304, %rd1303;
	shf.l.wrap.b32 	%r843, %r837, %r838, 23;
	shf.l.wrap.b32 	%r844, %r838, %r837, 23;
	mov.b64 	%rd1306, {%r844, %r843};
	xor.b64  	%rd1307, %rd1305, %rd1306;
	and.b64  	%rd1308, %rd1301, -3887949035690463538;
	xor.b64  	%rd1309, %rd1308, -7276294671716946913;
	xor.b64  	%rd4254, %rd3, 6655295901103053916;
	add.s64 	%rd1310, %rd4254, %rd4169;
	add.s64 	%rd1311, %rd1310, %rd1309;
	add.s64 	%rd1312, %rd1311, %rd1307;
	xor.b64  	%rd1313, %rd1302, -4942790177534073029;
	xor.b64  	%rd1314, %rd1302, 7640891576956012808;
	and.b64  	%rd1315, %rd1314, %rd1313;
	xor.b64  	%rd1316, %rd1315, %rd1302;
	add.s64 	%rd1317, %rd1312, %rd1316;
	add.s64 	%rd1318, %rd1312, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd1302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r846}, %rd1302;
	}
	shf.r.wrap.b32 	%r847, %r846, %r845, 28;
	shf.r.wrap.b32 	%r848, %r845, %r846, 28;
	mov.b64 	%rd1319, {%r848, %r847};
	shf.l.wrap.b32 	%r849, %r845, %r846, 30;
	shf.l.wrap.b32 	%r850, %r846, %r845, 30;
	mov.b64 	%rd1320, {%r850, %r849};
	xor.b64  	%rd1321, %rd1320, %rd1319;
	shf.l.wrap.b32 	%r851, %r845, %r846, 25;
	shf.l.wrap.b32 	%r852, %r846, %r845, 25;
	mov.b64 	%rd1322, {%r852, %r851};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	add.s64 	%rd1324, %rd1317, %rd1323;
	add.s64 	%rd1325, %rd1324, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd1318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd1318;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 14;
	shf.r.wrap.b32 	%r856, %r853, %r854, 14;
	mov.b64 	%rd1326, {%r856, %r855};
	shf.r.wrap.b32 	%r857, %r854, %r853, 18;
	shf.r.wrap.b32 	%r858, %r853, %r854, 18;
	mov.b64 	%rd1327, {%r858, %r857};
	xor.b64  	%rd1328, %rd1327, %rd1326;
	shf.l.wrap.b32 	%r859, %r853, %r854, 23;
	shf.l.wrap.b32 	%r860, %r854, %r853, 23;
	mov.b64 	%rd1329, {%r860, %r859};
	xor.b64  	%rd1330, %rd1328, %rd1329;
	xor.b64  	%rd1331, %rd1301, 5840696475078001361;
	and.b64  	%rd1332, %rd1318, %rd1331;
	xor.b64  	%rd1333, %rd1332, 5840696475078001361;
	xor.b64  	%rd4255, %rd4, 6655295901103053916;
	add.s64 	%rd1334, %rd4255, %rd4170;
	add.s64 	%rd1335, %rd1334, %rd1333;
	add.s64 	%rd1336, %rd1335, %rd1330;
	xor.b64  	%rd1337, %rd1325, 7640891576956012808;
	xor.b64  	%rd1338, %rd1325, %rd1302;
	and.b64  	%rd1339, %rd1338, %rd1337;
	xor.b64  	%rd1340, %rd1339, %rd1325;
	add.s64 	%rd1341, %rd1336, %rd1340;
	add.s64 	%rd1342, %rd1336, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd1325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd1325;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 28;
	shf.r.wrap.b32 	%r864, %r861, %r862, 28;
	mov.b64 	%rd1343, {%r864, %r863};
	shf.l.wrap.b32 	%r865, %r861, %r862, 30;
	shf.l.wrap.b32 	%r866, %r862, %r861, 30;
	mov.b64 	%rd1344, {%r866, %r865};
	xor.b64  	%rd1345, %rd1344, %rd1343;
	shf.l.wrap.b32 	%r867, %r861, %r862, 25;
	shf.l.wrap.b32 	%r868, %r862, %r861, 25;
	mov.b64 	%rd1346, {%r868, %r867};
	xor.b64  	%rd1347, %rd1345, %rd1346;
	add.s64 	%rd1348, %rd1341, %rd1347;
	add.s64 	%rd1349, %rd1348, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd1342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd1342;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 14;
	shf.r.wrap.b32 	%r872, %r869, %r870, 14;
	mov.b64 	%rd1350, {%r872, %r871};
	shf.r.wrap.b32 	%r873, %r870, %r869, 18;
	shf.r.wrap.b32 	%r874, %r869, %r870, 18;
	mov.b64 	%rd1351, {%r874, %r873};
	xor.b64  	%rd1352, %rd1351, %rd1350;
	shf.l.wrap.b32 	%r875, %r869, %r870, 23;
	shf.l.wrap.b32 	%r876, %r870, %r869, 23;
	mov.b64 	%rd1353, {%r876, %r875};
	xor.b64  	%rd1354, %rd1352, %rd1353;
	xor.b64  	%rd1355, %rd1318, %rd1301;
	and.b64  	%rd1356, %rd1342, %rd1355;
	xor.b64  	%rd1357, %rd1356, %rd1301;
	xor.b64  	%rd4256, %rd5, 6655295901103053916;
	add.s64 	%rd1358, %rd4256, %rd4171;
	add.s64 	%rd1359, %rd1358, %rd1357;
	add.s64 	%rd1360, %rd1359, %rd1354;
	xor.b64  	%rd1361, %rd1349, %rd1302;
	xor.b64  	%rd1362, %rd1349, %rd1325;
	and.b64  	%rd1363, %rd1362, %rd1361;
	xor.b64  	%rd1364, %rd1363, %rd1349;
	add.s64 	%rd1365, %rd1360, %rd1364;
	add.s64 	%rd1366, %rd1360, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd1349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd1349;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 28;
	shf.r.wrap.b32 	%r880, %r877, %r878, 28;
	mov.b64 	%rd1367, {%r880, %r879};
	shf.l.wrap.b32 	%r881, %r877, %r878, 30;
	shf.l.wrap.b32 	%r882, %r878, %r877, 30;
	mov.b64 	%rd1368, {%r882, %r881};
	xor.b64  	%rd1369, %rd1368, %rd1367;
	shf.l.wrap.b32 	%r883, %r877, %r878, 25;
	shf.l.wrap.b32 	%r884, %r878, %r877, 25;
	mov.b64 	%rd1370, {%r884, %r883};
	xor.b64  	%rd1371, %rd1369, %rd1370;
	add.s64 	%rd1372, %rd1365, %rd1371;
	add.s64 	%rd1373, %rd1372, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd1366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd1366;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 14;
	shf.r.wrap.b32 	%r888, %r885, %r886, 14;
	mov.b64 	%rd1374, {%r888, %r887};
	shf.r.wrap.b32 	%r889, %r886, %r885, 18;
	shf.r.wrap.b32 	%r890, %r885, %r886, 18;
	mov.b64 	%rd1375, {%r890, %r889};
	xor.b64  	%rd1376, %rd1375, %rd1374;
	shf.l.wrap.b32 	%r891, %r885, %r886, 23;
	shf.l.wrap.b32 	%r892, %r886, %r885, 23;
	mov.b64 	%rd1377, {%r892, %r891};
	xor.b64  	%rd1378, %rd1376, %rd1377;
	xor.b64  	%rd1379, %rd1342, %rd1318;
	and.b64  	%rd1380, %rd1366, %rd1379;
	xor.b64  	%rd1381, %rd1380, %rd1318;
	xor.b64  	%rd4257, %rd6, 6655295901103053916;
	add.s64 	%rd1382, %rd1301, %rd4257;
	add.s64 	%rd1383, %rd1382, %rd4172;
	add.s64 	%rd1384, %rd1383, %rd1381;
	add.s64 	%rd1385, %rd1384, %rd1378;
	add.s64 	%rd1386, %rd1385, %rd1302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r893,%dummy}, %rd1373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r894}, %rd1373;
	}
	shf.r.wrap.b32 	%r895, %r894, %r893, 28;
	shf.r.wrap.b32 	%r896, %r893, %r894, 28;
	mov.b64 	%rd1387, {%r896, %r895};
	shf.l.wrap.b32 	%r897, %r893, %r894, 30;
	shf.l.wrap.b32 	%r898, %r894, %r893, 30;
	mov.b64 	%rd1388, {%r898, %r897};
	xor.b64  	%rd1389, %rd1388, %rd1387;
	shf.l.wrap.b32 	%r899, %r893, %r894, 25;
	shf.l.wrap.b32 	%r900, %r894, %r893, 25;
	mov.b64 	%rd1390, {%r900, %r899};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	xor.b64  	%rd1392, %rd1373, %rd1325;
	xor.b64  	%rd1393, %rd1373, %rd1349;
	and.b64  	%rd1394, %rd1393, %rd1392;
	xor.b64  	%rd1395, %rd1394, %rd1373;
	add.s64 	%rd1396, %rd1385, %rd1395;
	add.s64 	%rd1397, %rd1396, %rd1391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd1386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r902}, %rd1386;
	}
	shf.r.wrap.b32 	%r903, %r902, %r901, 14;
	shf.r.wrap.b32 	%r904, %r901, %r902, 14;
	mov.b64 	%rd1398, {%r904, %r903};
	shf.r.wrap.b32 	%r905, %r902, %r901, 18;
	shf.r.wrap.b32 	%r906, %r901, %r902, 18;
	mov.b64 	%rd1399, {%r906, %r905};
	xor.b64  	%rd1400, %rd1399, %rd1398;
	shf.l.wrap.b32 	%r907, %r901, %r902, 23;
	shf.l.wrap.b32 	%r908, %r902, %r901, 23;
	mov.b64 	%rd1401, {%r908, %r907};
	xor.b64  	%rd1402, %rd1400, %rd1401;
	xor.b64  	%rd1403, %rd1366, %rd1342;
	and.b64  	%rd1404, %rd1386, %rd1403;
	xor.b64  	%rd1405, %rd1404, %rd1342;
	xor.b64  	%rd4258, %rd7, 6655295901103053916;
	add.s64 	%rd1406, %rd1318, %rd4258;
	add.s64 	%rd1407, %rd1406, %rd4173;
	add.s64 	%rd1408, %rd1407, %rd1405;
	add.s64 	%rd1409, %rd1408, %rd1402;
	add.s64 	%rd1410, %rd1409, %rd1325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd1397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd1397;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 28;
	shf.r.wrap.b32 	%r912, %r909, %r910, 28;
	mov.b64 	%rd1411, {%r912, %r911};
	shf.l.wrap.b32 	%r913, %r909, %r910, 30;
	shf.l.wrap.b32 	%r914, %r910, %r909, 30;
	mov.b64 	%rd1412, {%r914, %r913};
	xor.b64  	%rd1413, %rd1412, %rd1411;
	shf.l.wrap.b32 	%r915, %r909, %r910, 25;
	shf.l.wrap.b32 	%r916, %r910, %r909, 25;
	mov.b64 	%rd1414, {%r916, %r915};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	xor.b64  	%rd1416, %rd1397, %rd1349;
	xor.b64  	%rd1417, %rd1397, %rd1373;
	and.b64  	%rd1418, %rd1417, %rd1416;
	xor.b64  	%rd1419, %rd1418, %rd1397;
	add.s64 	%rd1420, %rd1409, %rd1419;
	add.s64 	%rd1421, %rd1420, %rd1415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd1410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r918}, %rd1410;
	}
	shf.r.wrap.b32 	%r919, %r918, %r917, 14;
	shf.r.wrap.b32 	%r920, %r917, %r918, 14;
	mov.b64 	%rd1422, {%r920, %r919};
	shf.r.wrap.b32 	%r921, %r918, %r917, 18;
	shf.r.wrap.b32 	%r922, %r917, %r918, 18;
	mov.b64 	%rd1423, {%r922, %r921};
	xor.b64  	%rd1424, %rd1423, %rd1422;
	shf.l.wrap.b32 	%r923, %r917, %r918, 23;
	shf.l.wrap.b32 	%r924, %r918, %r917, 23;
	mov.b64 	%rd1425, {%r924, %r923};
	xor.b64  	%rd1426, %rd1424, %rd1425;
	xor.b64  	%rd1427, %rd1386, %rd1366;
	and.b64  	%rd1428, %rd1410, %rd1427;
	xor.b64  	%rd1429, %rd1428, %rd1366;
	xor.b64  	%rd4259, %rd8, 6655295901103053916;
	add.s64 	%rd1430, %rd1342, %rd4259;
	add.s64 	%rd1431, %rd1430, %rd4174;
	add.s64 	%rd1432, %rd1431, %rd1429;
	add.s64 	%rd1433, %rd1432, %rd1426;
	add.s64 	%rd1434, %rd1433, %rd1349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd1421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd1421;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 28;
	shf.r.wrap.b32 	%r928, %r925, %r926, 28;
	mov.b64 	%rd1435, {%r928, %r927};
	shf.l.wrap.b32 	%r929, %r925, %r926, 30;
	shf.l.wrap.b32 	%r930, %r926, %r925, 30;
	mov.b64 	%rd1436, {%r930, %r929};
	xor.b64  	%rd1437, %rd1436, %rd1435;
	shf.l.wrap.b32 	%r931, %r925, %r926, 25;
	shf.l.wrap.b32 	%r932, %r926, %r925, 25;
	mov.b64 	%rd1438, {%r932, %r931};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	xor.b64  	%rd1440, %rd1421, %rd1373;
	xor.b64  	%rd1441, %rd1421, %rd1397;
	and.b64  	%rd1442, %rd1441, %rd1440;
	xor.b64  	%rd1443, %rd1442, %rd1421;
	add.s64 	%rd1444, %rd1433, %rd1443;
	add.s64 	%rd1445, %rd1444, %rd1439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd1434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd1434;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 14;
	shf.r.wrap.b32 	%r936, %r933, %r934, 14;
	mov.b64 	%rd1446, {%r936, %r935};
	shf.r.wrap.b32 	%r937, %r934, %r933, 18;
	shf.r.wrap.b32 	%r938, %r933, %r934, 18;
	mov.b64 	%rd1447, {%r938, %r937};
	xor.b64  	%rd1448, %rd1447, %rd1446;
	shf.l.wrap.b32 	%r939, %r933, %r934, 23;
	shf.l.wrap.b32 	%r940, %r934, %r933, 23;
	mov.b64 	%rd1449, {%r940, %r939};
	xor.b64  	%rd1450, %rd1448, %rd1449;
	xor.b64  	%rd1451, %rd1410, %rd1386;
	and.b64  	%rd1452, %rd1434, %rd1451;
	xor.b64  	%rd1453, %rd1452, %rd1386;
	xor.b64  	%rd4260, %rd9, 6655295901103053916;
	add.s64 	%rd1454, %rd1366, %rd4260;
	add.s64 	%rd1455, %rd1454, %rd4175;
	add.s64 	%rd1456, %rd1455, %rd1453;
	add.s64 	%rd1457, %rd1456, %rd1450;
	add.s64 	%rd1458, %rd1457, %rd1373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd1445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd1445;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 28;
	shf.r.wrap.b32 	%r944, %r941, %r942, 28;
	mov.b64 	%rd1459, {%r944, %r943};
	shf.l.wrap.b32 	%r945, %r941, %r942, 30;
	shf.l.wrap.b32 	%r946, %r942, %r941, 30;
	mov.b64 	%rd1460, {%r946, %r945};
	xor.b64  	%rd1461, %rd1460, %rd1459;
	shf.l.wrap.b32 	%r947, %r941, %r942, 25;
	shf.l.wrap.b32 	%r948, %r942, %r941, 25;
	mov.b64 	%rd1462, {%r948, %r947};
	xor.b64  	%rd1463, %rd1461, %rd1462;
	xor.b64  	%rd1464, %rd1445, %rd1397;
	xor.b64  	%rd1465, %rd1445, %rd1421;
	and.b64  	%rd1466, %rd1465, %rd1464;
	xor.b64  	%rd1467, %rd1466, %rd1445;
	add.s64 	%rd1468, %rd1457, %rd1467;
	add.s64 	%rd1469, %rd1468, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r949,%dummy}, %rd1458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r950}, %rd1458;
	}
	shf.r.wrap.b32 	%r951, %r950, %r949, 14;
	shf.r.wrap.b32 	%r952, %r949, %r950, 14;
	mov.b64 	%rd1470, {%r952, %r951};
	shf.r.wrap.b32 	%r953, %r950, %r949, 18;
	shf.r.wrap.b32 	%r954, %r949, %r950, 18;
	mov.b64 	%rd1471, {%r954, %r953};
	xor.b64  	%rd1472, %rd1471, %rd1470;
	shf.l.wrap.b32 	%r955, %r949, %r950, 23;
	shf.l.wrap.b32 	%r956, %r950, %r949, 23;
	mov.b64 	%rd1473, {%r956, %r955};
	xor.b64  	%rd1474, %rd1472, %rd1473;
	xor.b64  	%rd1475, %rd1434, %rd1410;
	and.b64  	%rd1476, %rd1458, %rd1475;
	xor.b64  	%rd1477, %rd1476, %rd1410;
	add.s64 	%rd1478, %rd1386, %rd4176;
	add.s64 	%rd1479, %rd1478, %rd1477;
	add.s64 	%rd1480, %rd1479, %rd1474;
	add.s64 	%rd1481, %rd1480, 6655295901103053916;
	add.s64 	%rd1482, %rd1481, %rd1397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd1469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd1469;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 28;
	shf.r.wrap.b32 	%r960, %r957, %r958, 28;
	mov.b64 	%rd1483, {%r960, %r959};
	shf.l.wrap.b32 	%r961, %r957, %r958, 30;
	shf.l.wrap.b32 	%r962, %r958, %r957, 30;
	mov.b64 	%rd1484, {%r962, %r961};
	xor.b64  	%rd1485, %rd1484, %rd1483;
	shf.l.wrap.b32 	%r963, %r957, %r958, 25;
	shf.l.wrap.b32 	%r964, %r958, %r957, 25;
	mov.b64 	%rd1486, {%r964, %r963};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	xor.b64  	%rd1488, %rd1469, %rd1421;
	xor.b64  	%rd1489, %rd1469, %rd1445;
	and.b64  	%rd1490, %rd1489, %rd1488;
	xor.b64  	%rd1491, %rd1490, %rd1469;
	add.s64 	%rd1492, %rd1481, %rd1491;
	add.s64 	%rd1493, %rd1492, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd1482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd1482;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 14;
	shf.r.wrap.b32 	%r968, %r965, %r966, 14;
	mov.b64 	%rd1494, {%r968, %r967};
	shf.r.wrap.b32 	%r969, %r966, %r965, 18;
	shf.r.wrap.b32 	%r970, %r965, %r966, 18;
	mov.b64 	%rd1495, {%r970, %r969};
	xor.b64  	%rd1496, %rd1495, %rd1494;
	shf.l.wrap.b32 	%r971, %r965, %r966, 23;
	shf.l.wrap.b32 	%r972, %r966, %r965, 23;
	mov.b64 	%rd1497, {%r972, %r971};
	xor.b64  	%rd1498, %rd1496, %rd1497;
	xor.b64  	%rd1499, %rd1458, %rd1434;
	and.b64  	%rd1500, %rd1482, %rd1499;
	xor.b64  	%rd1501, %rd1500, %rd1434;
	add.s64 	%rd1502, %rd1410, %rd4205;
	add.s64 	%rd1503, %rd1502, %rd1501;
	add.s64 	%rd1504, %rd1503, %rd1498;
	add.s64 	%rd1505, %rd1504, 6655295901103053916;
	add.s64 	%rd1506, %rd1505, %rd1421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd1493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r974}, %rd1493;
	}
	shf.r.wrap.b32 	%r975, %r974, %r973, 28;
	shf.r.wrap.b32 	%r976, %r973, %r974, 28;
	mov.b64 	%rd1507, {%r976, %r975};
	shf.l.wrap.b32 	%r977, %r973, %r974, 30;
	shf.l.wrap.b32 	%r978, %r974, %r973, 30;
	mov.b64 	%rd1508, {%r978, %r977};
	xor.b64  	%rd1509, %rd1508, %rd1507;
	shf.l.wrap.b32 	%r979, %r973, %r974, 25;
	shf.l.wrap.b32 	%r980, %r974, %r973, 25;
	mov.b64 	%rd1510, {%r980, %r979};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	xor.b64  	%rd1512, %rd1493, %rd1445;
	xor.b64  	%rd1513, %rd1493, %rd1469;
	and.b64  	%rd1514, %rd1513, %rd1512;
	xor.b64  	%rd1515, %rd1514, %rd1493;
	add.s64 	%rd1516, %rd1505, %rd1515;
	add.s64 	%rd1517, %rd1516, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd1506;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 14;
	shf.r.wrap.b32 	%r984, %r981, %r982, 14;
	mov.b64 	%rd1518, {%r984, %r983};
	shf.r.wrap.b32 	%r985, %r982, %r981, 18;
	shf.r.wrap.b32 	%r986, %r981, %r982, 18;
	mov.b64 	%rd1519, {%r986, %r985};
	xor.b64  	%rd1520, %rd1519, %rd1518;
	shf.l.wrap.b32 	%r987, %r981, %r982, 23;
	shf.l.wrap.b32 	%r988, %r982, %r981, 23;
	mov.b64 	%rd1521, {%r988, %r987};
	xor.b64  	%rd1522, %rd1520, %rd1521;
	xor.b64  	%rd1523, %rd1482, %rd1458;
	and.b64  	%rd1524, %rd1506, %rd1523;
	xor.b64  	%rd1525, %rd1524, %rd1458;
	add.s64 	%rd1526, %rd1434, %rd4206;
	add.s64 	%rd1527, %rd1526, %rd1525;
	add.s64 	%rd1528, %rd1527, %rd1522;
	add.s64 	%rd1529, %rd1528, 6655295901103053916;
	add.s64 	%rd1530, %rd1529, %rd1445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd1517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd1517;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 28;
	shf.r.wrap.b32 	%r992, %r989, %r990, 28;
	mov.b64 	%rd1531, {%r992, %r991};
	shf.l.wrap.b32 	%r993, %r989, %r990, 30;
	shf.l.wrap.b32 	%r994, %r990, %r989, 30;
	mov.b64 	%rd1532, {%r994, %r993};
	xor.b64  	%rd1533, %rd1532, %rd1531;
	shf.l.wrap.b32 	%r995, %r989, %r990, 25;
	shf.l.wrap.b32 	%r996, %r990, %r989, 25;
	mov.b64 	%rd1534, {%r996, %r995};
	xor.b64  	%rd1535, %rd1533, %rd1534;
	xor.b64  	%rd1536, %rd1517, %rd1469;
	xor.b64  	%rd1537, %rd1517, %rd1493;
	and.b64  	%rd1538, %rd1537, %rd1536;
	xor.b64  	%rd1539, %rd1538, %rd1517;
	add.s64 	%rd1540, %rd1529, %rd1539;
	add.s64 	%rd1541, %rd1540, %rd1535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1530;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 14;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 14;
	mov.b64 	%rd1542, {%r1000, %r999};
	shf.r.wrap.b32 	%r1001, %r998, %r997, 18;
	shf.r.wrap.b32 	%r1002, %r997, %r998, 18;
	mov.b64 	%rd1543, {%r1002, %r1001};
	xor.b64  	%rd1544, %rd1543, %rd1542;
	shf.l.wrap.b32 	%r1003, %r997, %r998, 23;
	shf.l.wrap.b32 	%r1004, %r998, %r997, 23;
	mov.b64 	%rd1545, {%r1004, %r1003};
	xor.b64  	%rd1546, %rd1544, %rd1545;
	xor.b64  	%rd1547, %rd1506, %rd1482;
	and.b64  	%rd1548, %rd1530, %rd1547;
	xor.b64  	%rd1549, %rd1548, %rd1482;
	add.s64 	%rd1550, %rd1458, %rd4207;
	add.s64 	%rd1551, %rd1550, %rd1549;
	add.s64 	%rd1552, %rd1551, %rd1546;
	add.s64 	%rd1553, %rd1552, 6655295901103053916;
	add.s64 	%rd1554, %rd1553, %rd1469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1005,%dummy}, %rd1541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1006}, %rd1541;
	}
	shf.r.wrap.b32 	%r1007, %r1006, %r1005, 28;
	shf.r.wrap.b32 	%r1008, %r1005, %r1006, 28;
	mov.b64 	%rd1555, {%r1008, %r1007};
	shf.l.wrap.b32 	%r1009, %r1005, %r1006, 30;
	shf.l.wrap.b32 	%r1010, %r1006, %r1005, 30;
	mov.b64 	%rd1556, {%r1010, %r1009};
	xor.b64  	%rd1557, %rd1556, %rd1555;
	shf.l.wrap.b32 	%r1011, %r1005, %r1006, 25;
	shf.l.wrap.b32 	%r1012, %r1006, %r1005, 25;
	mov.b64 	%rd1558, {%r1012, %r1011};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	xor.b64  	%rd1560, %rd1541, %rd1493;
	xor.b64  	%rd1561, %rd1541, %rd1517;
	and.b64  	%rd1562, %rd1561, %rd1560;
	xor.b64  	%rd1563, %rd1562, %rd1541;
	add.s64 	%rd1564, %rd1553, %rd1563;
	add.s64 	%rd1565, %rd1564, %rd1559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1013,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1014}, %rd1554;
	}
	shf.r.wrap.b32 	%r1015, %r1014, %r1013, 14;
	shf.r.wrap.b32 	%r1016, %r1013, %r1014, 14;
	mov.b64 	%rd1566, {%r1016, %r1015};
	shf.r.wrap.b32 	%r1017, %r1014, %r1013, 18;
	shf.r.wrap.b32 	%r1018, %r1013, %r1014, 18;
	mov.b64 	%rd1567, {%r1018, %r1017};
	xor.b64  	%rd1568, %rd1567, %rd1566;
	shf.l.wrap.b32 	%r1019, %r1013, %r1014, 23;
	shf.l.wrap.b32 	%r1020, %r1014, %r1013, 23;
	mov.b64 	%rd1569, {%r1020, %r1019};
	xor.b64  	%rd1570, %rd1568, %rd1569;
	xor.b64  	%rd1571, %rd1530, %rd1506;
	and.b64  	%rd1572, %rd1554, %rd1571;
	xor.b64  	%rd1573, %rd1572, %rd1506;
	add.s64 	%rd1574, %rd1482, %rd4210;
	add.s64 	%rd1575, %rd1574, %rd1573;
	add.s64 	%rd1576, %rd1575, %rd1570;
	add.s64 	%rd1577, %rd1576, 6655295901103053916;
	add.s64 	%rd4252, %rd1577, %rd1493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd1565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1022}, %rd1565;
	}
	shf.r.wrap.b32 	%r1023, %r1022, %r1021, 28;
	shf.r.wrap.b32 	%r1024, %r1021, %r1022, 28;
	mov.b64 	%rd1578, {%r1024, %r1023};
	shf.l.wrap.b32 	%r1025, %r1021, %r1022, 30;
	shf.l.wrap.b32 	%r1026, %r1022, %r1021, 30;
	mov.b64 	%rd1579, {%r1026, %r1025};
	xor.b64  	%rd1580, %rd1579, %rd1578;
	shf.l.wrap.b32 	%r1027, %r1021, %r1022, 25;
	shf.l.wrap.b32 	%r1028, %r1022, %r1021, 25;
	mov.b64 	%rd1581, {%r1028, %r1027};
	xor.b64  	%rd1582, %rd1580, %rd1581;
	xor.b64  	%rd1583, %rd1565, %rd1517;
	xor.b64  	%rd1584, %rd1565, %rd1541;
	and.b64  	%rd1585, %rd1584, %rd1583;
	xor.b64  	%rd1586, %rd1585, %rd1565;
	add.s64 	%rd1587, %rd1577, %rd1586;
	add.s64 	%rd4248, %rd1587, %rd1582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd4252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd4252;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 14;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 14;
	mov.b64 	%rd1588, {%r1032, %r1031};
	shf.r.wrap.b32 	%r1033, %r1030, %r1029, 18;
	shf.r.wrap.b32 	%r1034, %r1029, %r1030, 18;
	mov.b64 	%rd1589, {%r1034, %r1033};
	xor.b64  	%rd1590, %rd1589, %rd1588;
	shf.l.wrap.b32 	%r1035, %r1029, %r1030, 23;
	shf.l.wrap.b32 	%r1036, %r1030, %r1029, 23;
	mov.b64 	%rd1591, {%r1036, %r1035};
	xor.b64  	%rd1592, %rd1590, %rd1591;
	xor.b64  	%rd1593, %rd1554, %rd1530;
	and.b64  	%rd1594, %rd4252, %rd1593;
	xor.b64  	%rd1595, %rd1594, %rd1530;
	add.s64 	%rd1596, %rd1506, %rd4211;
	add.s64 	%rd1597, %rd1596, %rd1595;
	add.s64 	%rd1598, %rd1597, %rd1592;
	add.s64 	%rd1599, %rd1598, 6655295901103053916;
	add.s64 	%rd4251, %rd1599, %rd1517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd4248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd4248;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 28;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 28;
	mov.b64 	%rd1600, {%r1040, %r1039};
	shf.l.wrap.b32 	%r1041, %r1037, %r1038, 30;
	shf.l.wrap.b32 	%r1042, %r1038, %r1037, 30;
	mov.b64 	%rd1601, {%r1042, %r1041};
	xor.b64  	%rd1602, %rd1601, %rd1600;
	shf.l.wrap.b32 	%r1043, %r1037, %r1038, 25;
	shf.l.wrap.b32 	%r1044, %r1038, %r1037, 25;
	mov.b64 	%rd1603, {%r1044, %r1043};
	xor.b64  	%rd1604, %rd1602, %rd1603;
	xor.b64  	%rd1605, %rd4248, %rd1541;
	xor.b64  	%rd1606, %rd4248, %rd1565;
	and.b64  	%rd1607, %rd1606, %rd1605;
	xor.b64  	%rd1608, %rd1607, %rd4248;
	add.s64 	%rd1609, %rd1599, %rd1608;
	add.s64 	%rd4247, %rd1609, %rd1604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd4251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd4251;
	}
	shf.r.wrap.b32 	%r1047, %r1046, %r1045, 14;
	shf.r.wrap.b32 	%r1048, %r1045, %r1046, 14;
	mov.b64 	%rd1610, {%r1048, %r1047};
	shf.r.wrap.b32 	%r1049, %r1046, %r1045, 18;
	shf.r.wrap.b32 	%r1050, %r1045, %r1046, 18;
	mov.b64 	%rd1611, {%r1050, %r1049};
	xor.b64  	%rd1612, %rd1611, %rd1610;
	shf.l.wrap.b32 	%r1051, %r1045, %r1046, 23;
	shf.l.wrap.b32 	%r1052, %r1046, %r1045, 23;
	mov.b64 	%rd1613, {%r1052, %r1051};
	xor.b64  	%rd1614, %rd1612, %rd1613;
	xor.b64  	%rd1615, %rd4252, %rd1554;
	and.b64  	%rd1616, %rd4251, %rd1615;
	xor.b64  	%rd1617, %rd1616, %rd1554;
	add.s64 	%rd1618, %rd1530, %rd4215;
	add.s64 	%rd1619, %rd1618, %rd1617;
	add.s64 	%rd1620, %rd1619, %rd1614;
	add.s64 	%rd1621, %rd1620, 6655295901103053916;
	add.s64 	%rd4250, %rd1621, %rd1541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd4247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd4247;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 28;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 28;
	mov.b64 	%rd1622, {%r1056, %r1055};
	shf.l.wrap.b32 	%r1057, %r1053, %r1054, 30;
	shf.l.wrap.b32 	%r1058, %r1054, %r1053, 30;
	mov.b64 	%rd1623, {%r1058, %r1057};
	xor.b64  	%rd1624, %rd1623, %rd1622;
	shf.l.wrap.b32 	%r1059, %r1053, %r1054, 25;
	shf.l.wrap.b32 	%r1060, %r1054, %r1053, 25;
	mov.b64 	%rd1625, {%r1060, %r1059};
	xor.b64  	%rd1626, %rd1624, %rd1625;
	xor.b64  	%rd1627, %rd4247, %rd1565;
	xor.b64  	%rd1628, %rd4247, %rd4248;
	and.b64  	%rd1629, %rd1628, %rd1627;
	xor.b64  	%rd1630, %rd1629, %rd4247;
	add.s64 	%rd1631, %rd1621, %rd1630;
	add.s64 	%rd4246, %rd1631, %rd1626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd4250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1062}, %rd4250;
	}
	shf.r.wrap.b32 	%r1063, %r1062, %r1061, 14;
	shf.r.wrap.b32 	%r1064, %r1061, %r1062, 14;
	mov.b64 	%rd1632, {%r1064, %r1063};
	shf.r.wrap.b32 	%r1065, %r1062, %r1061, 18;
	shf.r.wrap.b32 	%r1066, %r1061, %r1062, 18;
	mov.b64 	%rd1633, {%r1066, %r1065};
	xor.b64  	%rd1634, %rd1633, %rd1632;
	shf.l.wrap.b32 	%r1067, %r1061, %r1062, 23;
	shf.l.wrap.b32 	%r1068, %r1062, %r1061, 23;
	mov.b64 	%rd1635, {%r1068, %r1067};
	xor.b64  	%rd1636, %rd1634, %rd1635;
	xor.b64  	%rd1637, %rd4251, %rd4252;
	and.b64  	%rd1638, %rd4250, %rd1637;
	xor.b64  	%rd1639, %rd1638, %rd4252;
	add.s64 	%rd1640, %rd1554, %rd4217;
	add.s64 	%rd1641, %rd1640, %rd1639;
	add.s64 	%rd1642, %rd1641, %rd1636;
	add.s64 	%rd1643, %rd1642, 6655295901103053916;
	add.s64 	%rd4249, %rd1643, %rd1565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd4246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd4246;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 28;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 28;
	mov.b64 	%rd1644, {%r1072, %r1071};
	shf.l.wrap.b32 	%r1073, %r1069, %r1070, 30;
	shf.l.wrap.b32 	%r1074, %r1070, %r1069, 30;
	mov.b64 	%rd1645, {%r1074, %r1073};
	xor.b64  	%rd1646, %rd1645, %rd1644;
	shf.l.wrap.b32 	%r1075, %r1069, %r1070, 25;
	shf.l.wrap.b32 	%r1076, %r1070, %r1069, 25;
	mov.b64 	%rd1647, {%r1076, %r1075};
	xor.b64  	%rd1648, %rd1646, %rd1647;
	xor.b64  	%rd1649, %rd4246, %rd4248;
	xor.b64  	%rd1650, %rd4246, %rd4247;
	and.b64  	%rd1651, %rd1650, %rd1649;
	xor.b64  	%rd1652, %rd1651, %rd4246;
	add.s64 	%rd1653, %rd1643, %rd1652;
	add.s64 	%rd4245, %rd1653, %rd1648;
	mov.u64 	%rd4244, 6655295901103053916;
	mov.u32 	%r2918, 16;
	mov.u64 	%rd4243, k_sha512;
	mov.u64 	%rd4261, %rd4244;
	mov.u64 	%rd4262, %rd4244;
	mov.u64 	%rd4263, %rd4244;
	mov.u64 	%rd4264, %rd4244;
	mov.u64 	%rd4265, %rd4244;
	mov.u64 	%rd4266, %rd4244;
	mov.u64 	%rd4267, %rd4244;

BB1_4:
	shr.u64 	%rd1654, %rd4267, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd4267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd4267;
	}
	shf.r.wrap.b32 	%r1079, %r1078, %r1077, 19;
	shf.r.wrap.b32 	%r1080, %r1077, %r1078, 19;
	mov.b64 	%rd1655, {%r1080, %r1079};
	xor.b64  	%rd1656, %rd1655, %rd1654;
	shf.l.wrap.b32 	%r1081, %r1077, %r1078, 3;
	shf.l.wrap.b32 	%r1082, %r1078, %r1077, 3;
	mov.b64 	%rd1657, {%r1082, %r1081};
	xor.b64  	%rd1658, %rd1656, %rd1657;
	shr.u64 	%rd1659, %rd4254, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1083,%dummy}, %rd4254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1084}, %rd4254;
	}
	shf.r.wrap.b32 	%r1085, %r1084, %r1083, 1;
	shf.r.wrap.b32 	%r1086, %r1083, %r1084, 1;
	mov.b64 	%rd1660, {%r1086, %r1085};
	xor.b64  	%rd1661, %rd1660, %rd1659;
	shf.r.wrap.b32 	%r1087, %r1084, %r1083, 8;
	shf.r.wrap.b32 	%r1088, %r1083, %r1084, 8;
	mov.b64 	%rd1662, {%r1088, %r1087};
	xor.b64  	%rd1663, %rd1661, %rd1662;
	add.s64 	%rd1664, %rd4253, %rd4262;
	add.s64 	%rd1665, %rd1664, %rd1658;
	add.s64 	%rd4253, %rd1665, %rd1663;
	shr.u64 	%rd1666, %rd4244, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1089,%dummy}, %rd4244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1090}, %rd4244;
	}
	shf.r.wrap.b32 	%r1091, %r1090, %r1089, 19;
	shf.r.wrap.b32 	%r1092, %r1089, %r1090, 19;
	mov.b64 	%rd1667, {%r1092, %r1091};
	xor.b64  	%rd1668, %rd1667, %rd1666;
	shf.l.wrap.b32 	%r1093, %r1089, %r1090, 3;
	shf.l.wrap.b32 	%r1094, %r1090, %r1089, 3;
	mov.b64 	%rd1669, {%r1094, %r1093};
	xor.b64  	%rd1670, %rd1668, %rd1669;
	shr.u64 	%rd1671, %rd4255, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd4255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd4255;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 1;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 1;
	mov.b64 	%rd1672, {%r1098, %r1097};
	xor.b64  	%rd1673, %rd1672, %rd1671;
	shf.r.wrap.b32 	%r1099, %r1096, %r1095, 8;
	shf.r.wrap.b32 	%r1100, %r1095, %r1096, 8;
	mov.b64 	%rd1674, {%r1100, %r1099};
	xor.b64  	%rd1675, %rd1673, %rd1674;
	add.s64 	%rd1676, %rd4254, %rd4263;
	add.s64 	%rd1677, %rd1676, %rd1670;
	add.s64 	%rd4254, %rd1677, %rd1675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd4253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd4253;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 19;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 19;
	mov.b64 	%rd1678, {%r1104, %r1103};
	shf.l.wrap.b32 	%r1105, %r1101, %r1102, 3;
	shf.l.wrap.b32 	%r1106, %r1102, %r1101, 3;
	mov.b64 	%rd1679, {%r1106, %r1105};
	shr.u64 	%rd1680, %rd4253, 6;
	xor.b64  	%rd1681, %rd1678, %rd1680;
	xor.b64  	%rd1682, %rd1681, %rd1679;
	shr.u64 	%rd1683, %rd4256, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1107,%dummy}, %rd4256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1108}, %rd4256;
	}
	shf.r.wrap.b32 	%r1109, %r1108, %r1107, 1;
	shf.r.wrap.b32 	%r1110, %r1107, %r1108, 1;
	mov.b64 	%rd1684, {%r1110, %r1109};
	xor.b64  	%rd1685, %rd1684, %rd1683;
	shf.r.wrap.b32 	%r1111, %r1108, %r1107, 8;
	shf.r.wrap.b32 	%r1112, %r1107, %r1108, 8;
	mov.b64 	%rd1686, {%r1112, %r1111};
	xor.b64  	%rd1687, %rd1685, %rd1686;
	add.s64 	%rd1688, %rd4255, %rd4264;
	add.s64 	%rd1689, %rd1688, %rd1682;
	add.s64 	%rd4255, %rd1689, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd4254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd4254;
	}
	shf.r.wrap.b32 	%r1115, %r1114, %r1113, 19;
	shf.r.wrap.b32 	%r1116, %r1113, %r1114, 19;
	mov.b64 	%rd1690, {%r1116, %r1115};
	shf.l.wrap.b32 	%r1117, %r1113, %r1114, 3;
	shf.l.wrap.b32 	%r1118, %r1114, %r1113, 3;
	mov.b64 	%rd1691, {%r1118, %r1117};
	shr.u64 	%rd1692, %rd4254, 6;
	xor.b64  	%rd1693, %rd1690, %rd1692;
	xor.b64  	%rd1694, %rd1693, %rd1691;
	shr.u64 	%rd1695, %rd4257, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1119,%dummy}, %rd4257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1120}, %rd4257;
	}
	shf.r.wrap.b32 	%r1121, %r1120, %r1119, 1;
	shf.r.wrap.b32 	%r1122, %r1119, %r1120, 1;
	mov.b64 	%rd1696, {%r1122, %r1121};
	xor.b64  	%rd1697, %rd1696, %rd1695;
	shf.r.wrap.b32 	%r1123, %r1120, %r1119, 8;
	shf.r.wrap.b32 	%r1124, %r1119, %r1120, 8;
	mov.b64 	%rd1698, {%r1124, %r1123};
	xor.b64  	%rd1699, %rd1697, %rd1698;
	add.s64 	%rd1700, %rd4256, %rd4265;
	add.s64 	%rd1701, %rd1700, %rd1694;
	add.s64 	%rd4256, %rd1701, %rd1699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd4255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd4255;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 19;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 19;
	mov.b64 	%rd1702, {%r1128, %r1127};
	shf.l.wrap.b32 	%r1129, %r1125, %r1126, 3;
	shf.l.wrap.b32 	%r1130, %r1126, %r1125, 3;
	mov.b64 	%rd1703, {%r1130, %r1129};
	shr.u64 	%rd1704, %rd4255, 6;
	xor.b64  	%rd1705, %rd1702, %rd1704;
	xor.b64  	%rd1706, %rd1705, %rd1703;
	shr.u64 	%rd1707, %rd4258, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1131,%dummy}, %rd4258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1132}, %rd4258;
	}
	shf.r.wrap.b32 	%r1133, %r1132, %r1131, 1;
	shf.r.wrap.b32 	%r1134, %r1131, %r1132, 1;
	mov.b64 	%rd1708, {%r1134, %r1133};
	xor.b64  	%rd1709, %rd1708, %rd1707;
	shf.r.wrap.b32 	%r1135, %r1132, %r1131, 8;
	shf.r.wrap.b32 	%r1136, %r1131, %r1132, 8;
	mov.b64 	%rd1710, {%r1136, %r1135};
	xor.b64  	%rd1711, %rd1709, %rd1710;
	add.s64 	%rd1712, %rd4257, %rd4266;
	add.s64 	%rd1713, %rd1712, %rd1706;
	add.s64 	%rd4257, %rd1713, %rd1711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1137,%dummy}, %rd4256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1138}, %rd4256;
	}
	shf.r.wrap.b32 	%r1139, %r1138, %r1137, 19;
	shf.r.wrap.b32 	%r1140, %r1137, %r1138, 19;
	mov.b64 	%rd1714, {%r1140, %r1139};
	shf.l.wrap.b32 	%r1141, %r1137, %r1138, 3;
	shf.l.wrap.b32 	%r1142, %r1138, %r1137, 3;
	mov.b64 	%rd1715, {%r1142, %r1141};
	shr.u64 	%rd1716, %rd4256, 6;
	xor.b64  	%rd1717, %rd1714, %rd1716;
	xor.b64  	%rd1718, %rd1717, %rd1715;
	shr.u64 	%rd1719, %rd4259, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1143,%dummy}, %rd4259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1144}, %rd4259;
	}
	shf.r.wrap.b32 	%r1145, %r1144, %r1143, 1;
	shf.r.wrap.b32 	%r1146, %r1143, %r1144, 1;
	mov.b64 	%rd1720, {%r1146, %r1145};
	xor.b64  	%rd1721, %rd1720, %rd1719;
	shf.r.wrap.b32 	%r1147, %r1144, %r1143, 8;
	shf.r.wrap.b32 	%r1148, %r1143, %r1144, 8;
	mov.b64 	%rd1722, {%r1148, %r1147};
	xor.b64  	%rd1723, %rd1721, %rd1722;
	add.s64 	%rd1724, %rd4258, %rd4267;
	add.s64 	%rd1725, %rd1724, %rd1718;
	add.s64 	%rd4258, %rd1725, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1149,%dummy}, %rd4257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1150}, %rd4257;
	}
	shf.r.wrap.b32 	%r1151, %r1150, %r1149, 19;
	shf.r.wrap.b32 	%r1152, %r1149, %r1150, 19;
	mov.b64 	%rd1726, {%r1152, %r1151};
	shf.l.wrap.b32 	%r1153, %r1149, %r1150, 3;
	shf.l.wrap.b32 	%r1154, %r1150, %r1149, 3;
	mov.b64 	%rd1727, {%r1154, %r1153};
	shr.u64 	%rd1728, %rd4257, 6;
	xor.b64  	%rd1729, %rd1726, %rd1728;
	xor.b64  	%rd1730, %rd1729, %rd1727;
	shr.u64 	%rd1731, %rd4260, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1155,%dummy}, %rd4260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd4260;
	}
	shf.r.wrap.b32 	%r1157, %r1156, %r1155, 1;
	shf.r.wrap.b32 	%r1158, %r1155, %r1156, 1;
	mov.b64 	%rd1732, {%r1158, %r1157};
	xor.b64  	%rd1733, %rd1732, %rd1731;
	shf.r.wrap.b32 	%r1159, %r1156, %r1155, 8;
	shf.r.wrap.b32 	%r1160, %r1155, %r1156, 8;
	mov.b64 	%rd1734, {%r1160, %r1159};
	xor.b64  	%rd1735, %rd1733, %rd1734;
	add.s64 	%rd1736, %rd4244, %rd4259;
	add.s64 	%rd1737, %rd1736, %rd1730;
	add.s64 	%rd4259, %rd1737, %rd1735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1161,%dummy}, %rd4258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1162}, %rd4258;
	}
	shf.r.wrap.b32 	%r1163, %r1162, %r1161, 19;
	shf.r.wrap.b32 	%r1164, %r1161, %r1162, 19;
	mov.b64 	%rd1738, {%r1164, %r1163};
	shf.l.wrap.b32 	%r1165, %r1161, %r1162, 3;
	shf.l.wrap.b32 	%r1166, %r1162, %r1161, 3;
	mov.b64 	%rd1739, {%r1166, %r1165};
	shr.u64 	%rd1740, %rd4258, 6;
	xor.b64  	%rd1741, %rd1738, %rd1740;
	xor.b64  	%rd1742, %rd1741, %rd1739;
	shr.u64 	%rd1743, %rd4261, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1167,%dummy}, %rd4261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1168}, %rd4261;
	}
	shf.r.wrap.b32 	%r1169, %r1168, %r1167, 1;
	shf.r.wrap.b32 	%r1170, %r1167, %r1168, 1;
	mov.b64 	%rd1744, {%r1170, %r1169};
	xor.b64  	%rd1745, %rd1744, %rd1743;
	shf.r.wrap.b32 	%r1171, %r1168, %r1167, 8;
	shf.r.wrap.b32 	%r1172, %r1167, %r1168, 8;
	mov.b64 	%rd1746, {%r1172, %r1171};
	xor.b64  	%rd1747, %rd1745, %rd1746;
	add.s64 	%rd1748, %rd4253, %rd4260;
	add.s64 	%rd1749, %rd1748, %rd1742;
	add.s64 	%rd4260, %rd1749, %rd1747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd4259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd4259;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 19;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 19;
	mov.b64 	%rd1750, {%r1176, %r1175};
	shf.l.wrap.b32 	%r1177, %r1173, %r1174, 3;
	shf.l.wrap.b32 	%r1178, %r1174, %r1173, 3;
	mov.b64 	%rd1751, {%r1178, %r1177};
	shr.u64 	%rd1752, %rd4259, 6;
	xor.b64  	%rd1753, %rd1750, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1751;
	shr.u64 	%rd1755, %rd4262, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1179,%dummy}, %rd4262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1180}, %rd4262;
	}
	shf.r.wrap.b32 	%r1181, %r1180, %r1179, 1;
	shf.r.wrap.b32 	%r1182, %r1179, %r1180, 1;
	mov.b64 	%rd1756, {%r1182, %r1181};
	xor.b64  	%rd1757, %rd1756, %rd1755;
	shf.r.wrap.b32 	%r1183, %r1180, %r1179, 8;
	shf.r.wrap.b32 	%r1184, %r1179, %r1180, 8;
	mov.b64 	%rd1758, {%r1184, %r1183};
	xor.b64  	%rd1759, %rd1757, %rd1758;
	add.s64 	%rd1760, %rd4254, %rd4261;
	add.s64 	%rd1761, %rd1760, %rd1754;
	add.s64 	%rd4261, %rd1761, %rd1759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd4260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1186}, %rd4260;
	}
	shf.r.wrap.b32 	%r1187, %r1186, %r1185, 19;
	shf.r.wrap.b32 	%r1188, %r1185, %r1186, 19;
	mov.b64 	%rd1762, {%r1188, %r1187};
	shf.l.wrap.b32 	%r1189, %r1185, %r1186, 3;
	shf.l.wrap.b32 	%r1190, %r1186, %r1185, 3;
	mov.b64 	%rd1763, {%r1190, %r1189};
	shr.u64 	%rd1764, %rd4260, 6;
	xor.b64  	%rd1765, %rd1762, %rd1764;
	xor.b64  	%rd1766, %rd1765, %rd1763;
	shr.u64 	%rd1767, %rd4263, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1191,%dummy}, %rd4263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd4263;
	}
	shf.r.wrap.b32 	%r1193, %r1192, %r1191, 1;
	shf.r.wrap.b32 	%r1194, %r1191, %r1192, 1;
	mov.b64 	%rd1768, {%r1194, %r1193};
	xor.b64  	%rd1769, %rd1768, %rd1767;
	shf.r.wrap.b32 	%r1195, %r1192, %r1191, 8;
	shf.r.wrap.b32 	%r1196, %r1191, %r1192, 8;
	mov.b64 	%rd1770, {%r1196, %r1195};
	xor.b64  	%rd1771, %rd1769, %rd1770;
	add.s64 	%rd1772, %rd4255, %rd4262;
	add.s64 	%rd1773, %rd1772, %rd1766;
	add.s64 	%rd4262, %rd1773, %rd1771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1197,%dummy}, %rd4261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1198}, %rd4261;
	}
	shf.r.wrap.b32 	%r1199, %r1198, %r1197, 19;
	shf.r.wrap.b32 	%r1200, %r1197, %r1198, 19;
	mov.b64 	%rd1774, {%r1200, %r1199};
	shf.l.wrap.b32 	%r1201, %r1197, %r1198, 3;
	shf.l.wrap.b32 	%r1202, %r1198, %r1197, 3;
	mov.b64 	%rd1775, {%r1202, %r1201};
	shr.u64 	%rd1776, %rd4261, 6;
	xor.b64  	%rd1777, %rd1774, %rd1776;
	xor.b64  	%rd1778, %rd1777, %rd1775;
	shr.u64 	%rd1779, %rd4264, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1203,%dummy}, %rd4264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1204}, %rd4264;
	}
	shf.r.wrap.b32 	%r1205, %r1204, %r1203, 1;
	shf.r.wrap.b32 	%r1206, %r1203, %r1204, 1;
	mov.b64 	%rd1780, {%r1206, %r1205};
	xor.b64  	%rd1781, %rd1780, %rd1779;
	shf.r.wrap.b32 	%r1207, %r1204, %r1203, 8;
	shf.r.wrap.b32 	%r1208, %r1203, %r1204, 8;
	mov.b64 	%rd1782, {%r1208, %r1207};
	xor.b64  	%rd1783, %rd1781, %rd1782;
	add.s64 	%rd1784, %rd4256, %rd4263;
	add.s64 	%rd1785, %rd1784, %rd1778;
	add.s64 	%rd4263, %rd1785, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1209,%dummy}, %rd4262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1210}, %rd4262;
	}
	shf.r.wrap.b32 	%r1211, %r1210, %r1209, 19;
	shf.r.wrap.b32 	%r1212, %r1209, %r1210, 19;
	mov.b64 	%rd1786, {%r1212, %r1211};
	shf.l.wrap.b32 	%r1213, %r1209, %r1210, 3;
	shf.l.wrap.b32 	%r1214, %r1210, %r1209, 3;
	mov.b64 	%rd1787, {%r1214, %r1213};
	shr.u64 	%rd1788, %rd4262, 6;
	xor.b64  	%rd1789, %rd1786, %rd1788;
	xor.b64  	%rd1790, %rd1789, %rd1787;
	shr.u64 	%rd1791, %rd4265, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1215,%dummy}, %rd4265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1216}, %rd4265;
	}
	shf.r.wrap.b32 	%r1217, %r1216, %r1215, 1;
	shf.r.wrap.b32 	%r1218, %r1215, %r1216, 1;
	mov.b64 	%rd1792, {%r1218, %r1217};
	xor.b64  	%rd1793, %rd1792, %rd1791;
	shf.r.wrap.b32 	%r1219, %r1216, %r1215, 8;
	shf.r.wrap.b32 	%r1220, %r1215, %r1216, 8;
	mov.b64 	%rd1794, {%r1220, %r1219};
	xor.b64  	%rd1795, %rd1793, %rd1794;
	add.s64 	%rd1796, %rd4257, %rd4264;
	add.s64 	%rd1797, %rd1796, %rd1790;
	add.s64 	%rd4264, %rd1797, %rd1795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd4263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd4263;
	}
	shf.r.wrap.b32 	%r1223, %r1222, %r1221, 19;
	shf.r.wrap.b32 	%r1224, %r1221, %r1222, 19;
	mov.b64 	%rd1798, {%r1224, %r1223};
	shf.l.wrap.b32 	%r1225, %r1221, %r1222, 3;
	shf.l.wrap.b32 	%r1226, %r1222, %r1221, 3;
	mov.b64 	%rd1799, {%r1226, %r1225};
	shr.u64 	%rd1800, %rd4263, 6;
	xor.b64  	%rd1801, %rd1798, %rd1800;
	xor.b64  	%rd1802, %rd1801, %rd1799;
	shr.u64 	%rd1803, %rd4266, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1227,%dummy}, %rd4266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1228}, %rd4266;
	}
	shf.r.wrap.b32 	%r1229, %r1228, %r1227, 1;
	shf.r.wrap.b32 	%r1230, %r1227, %r1228, 1;
	mov.b64 	%rd1804, {%r1230, %r1229};
	xor.b64  	%rd1805, %rd1804, %rd1803;
	shf.r.wrap.b32 	%r1231, %r1228, %r1227, 8;
	shf.r.wrap.b32 	%r1232, %r1227, %r1228, 8;
	mov.b64 	%rd1806, {%r1232, %r1231};
	xor.b64  	%rd1807, %rd1805, %rd1806;
	add.s64 	%rd1808, %rd4258, %rd4265;
	add.s64 	%rd1809, %rd1808, %rd1802;
	add.s64 	%rd4265, %rd1809, %rd1807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd4264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd4264;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 19;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 19;
	mov.b64 	%rd1810, {%r1236, %r1235};
	shf.l.wrap.b32 	%r1237, %r1233, %r1234, 3;
	shf.l.wrap.b32 	%r1238, %r1234, %r1233, 3;
	mov.b64 	%rd1811, {%r1238, %r1237};
	shr.u64 	%rd1812, %rd4264, 6;
	xor.b64  	%rd1813, %rd1810, %rd1812;
	xor.b64  	%rd1814, %rd1813, %rd1811;
	shr.u64 	%rd1815, %rd4267, 7;
	shf.r.wrap.b32 	%r1239, %r1078, %r1077, 1;
	shf.r.wrap.b32 	%r1240, %r1077, %r1078, 1;
	mov.b64 	%rd1816, {%r1240, %r1239};
	xor.b64  	%rd1817, %rd1816, %rd1815;
	shf.r.wrap.b32 	%r1241, %r1078, %r1077, 8;
	shf.r.wrap.b32 	%r1242, %r1077, %r1078, 8;
	mov.b64 	%rd1818, {%r1242, %r1241};
	xor.b64  	%rd1819, %rd1817, %rd1818;
	add.s64 	%rd1820, %rd4259, %rd4266;
	add.s64 	%rd1821, %rd1820, %rd1814;
	add.s64 	%rd4266, %rd1821, %rd1819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1243,%dummy}, %rd4265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1244}, %rd4265;
	}
	shf.r.wrap.b32 	%r1245, %r1244, %r1243, 19;
	shf.r.wrap.b32 	%r1246, %r1243, %r1244, 19;
	mov.b64 	%rd1822, {%r1246, %r1245};
	shf.l.wrap.b32 	%r1247, %r1243, %r1244, 3;
	shf.l.wrap.b32 	%r1248, %r1244, %r1243, 3;
	mov.b64 	%rd1823, {%r1248, %r1247};
	shr.u64 	%rd1824, %rd4265, 6;
	xor.b64  	%rd1825, %rd1822, %rd1824;
	xor.b64  	%rd1826, %rd1825, %rd1823;
	shr.u64 	%rd1827, %rd4244, 7;
	shf.r.wrap.b32 	%r1249, %r1090, %r1089, 1;
	shf.r.wrap.b32 	%r1250, %r1089, %r1090, 1;
	mov.b64 	%rd1828, {%r1250, %r1249};
	xor.b64  	%rd1829, %rd1828, %rd1827;
	shf.r.wrap.b32 	%r1251, %r1090, %r1089, 8;
	shf.r.wrap.b32 	%r1252, %r1089, %r1090, 8;
	mov.b64 	%rd1830, {%r1252, %r1251};
	xor.b64  	%rd1831, %rd1829, %rd1830;
	add.s64 	%rd1832, %rd4260, %rd4267;
	add.s64 	%rd1833, %rd1832, %rd1826;
	add.s64 	%rd4267, %rd1833, %rd1831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd4266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd4266;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 19;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 19;
	mov.b64 	%rd1834, {%r1256, %r1255};
	shf.l.wrap.b32 	%r1257, %r1253, %r1254, 3;
	shf.l.wrap.b32 	%r1258, %r1254, %r1253, 3;
	mov.b64 	%rd1835, {%r1258, %r1257};
	shr.u64 	%rd1836, %rd4266, 6;
	xor.b64  	%rd1837, %rd1834, %rd1836;
	xor.b64  	%rd1838, %rd1837, %rd1835;
	shf.r.wrap.b32 	%r1259, %r1102, %r1101, 1;
	shf.r.wrap.b32 	%r1260, %r1101, %r1102, 1;
	mov.b64 	%rd1839, {%r1260, %r1259};
	shf.r.wrap.b32 	%r1261, %r1102, %r1101, 8;
	shf.r.wrap.b32 	%r1262, %r1101, %r1102, 8;
	mov.b64 	%rd1840, {%r1262, %r1261};
	shr.u64 	%rd1841, %rd4253, 7;
	xor.b64  	%rd1842, %rd1839, %rd1841;
	xor.b64  	%rd1843, %rd1842, %rd1840;
	add.s64 	%rd1844, %rd4261, %rd4244;
	add.s64 	%rd1845, %rd1844, %rd1838;
	add.s64 	%rd4244, %rd1845, %rd1843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1263,%dummy}, %rd4249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1264}, %rd4249;
	}
	shf.r.wrap.b32 	%r1265, %r1264, %r1263, 18;
	shf.r.wrap.b32 	%r1266, %r1263, %r1264, 18;
	mov.b64 	%rd1846, {%r1266, %r1265};
	shf.r.wrap.b32 	%r1267, %r1264, %r1263, 14;
	shf.r.wrap.b32 	%r1268, %r1263, %r1264, 14;
	mov.b64 	%rd1847, {%r1268, %r1267};
	xor.b64  	%rd1848, %rd1846, %rd1847;
	shf.l.wrap.b32 	%r1269, %r1263, %r1264, 23;
	shf.l.wrap.b32 	%r1270, %r1264, %r1263, 23;
	mov.b64 	%rd1849, {%r1270, %r1269};
	xor.b64  	%rd1850, %rd1848, %rd1849;
	xor.b64  	%rd1851, %rd4250, %rd4251;
	and.b64  	%rd1852, %rd1851, %rd4249;
	xor.b64  	%rd1853, %rd1852, %rd4251;
	add.s64 	%rd1854, %rd1853, %rd4252;
	add.s64 	%rd1855, %rd1854, %rd4253;
	add.s64 	%rd178, %rd4243, 128;
	ld.const.u64 	%rd1856, [%rd4243+128];
	add.s64 	%rd1857, %rd1855, %rd1856;
	add.s64 	%rd1858, %rd1857, %rd1850;
	add.s64 	%rd1859, %rd1858, %rd4248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1271}, %rd4245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1272,%dummy}, %rd4245;
	}
	shf.l.wrap.b32 	%r1273, %r1272, %r1271, 30;
	shf.l.wrap.b32 	%r1274, %r1271, %r1272, 30;
	mov.b64 	%rd1860, {%r1274, %r1273};
	shf.r.wrap.b32 	%r1275, %r1271, %r1272, 28;
	shf.r.wrap.b32 	%r1276, %r1272, %r1271, 28;
	mov.b64 	%rd1861, {%r1276, %r1275};
	xor.b64  	%rd1862, %rd1860, %rd1861;
	shf.l.wrap.b32 	%r1277, %r1272, %r1271, 25;
	shf.l.wrap.b32 	%r1278, %r1271, %r1272, 25;
	mov.b64 	%rd1863, {%r1278, %r1277};
	xor.b64  	%rd1864, %rd1862, %rd1863;
	xor.b64  	%rd1865, %rd4245, %rd4246;
	xor.b64  	%rd1866, %rd4245, %rd4247;
	and.b64  	%rd1867, %rd1865, %rd1866;
	xor.b64  	%rd1868, %rd1867, %rd4245;
	add.s64 	%rd1869, %rd1858, %rd1868;
	add.s64 	%rd1870, %rd1869, %rd1864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1279,%dummy}, %rd1859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd1859;
	}
	shf.r.wrap.b32 	%r1281, %r1280, %r1279, 14;
	shf.r.wrap.b32 	%r1282, %r1279, %r1280, 14;
	mov.b64 	%rd1871, {%r1282, %r1281};
	shf.r.wrap.b32 	%r1283, %r1280, %r1279, 18;
	shf.r.wrap.b32 	%r1284, %r1279, %r1280, 18;
	mov.b64 	%rd1872, {%r1284, %r1283};
	xor.b64  	%rd1873, %rd1872, %rd1871;
	shf.l.wrap.b32 	%r1285, %r1279, %r1280, 23;
	shf.l.wrap.b32 	%r1286, %r1280, %r1279, 23;
	mov.b64 	%rd1874, {%r1286, %r1285};
	xor.b64  	%rd1875, %rd1873, %rd1874;
	xor.b64  	%rd1876, %rd4249, %rd4250;
	and.b64  	%rd1877, %rd1859, %rd1876;
	xor.b64  	%rd1878, %rd1877, %rd4250;
	add.s64 	%rd1879, %rd4254, %rd4251;
	ld.const.u64 	%rd1880, [%rd4243+136];
	add.s64 	%rd1881, %rd1879, %rd1880;
	add.s64 	%rd1882, %rd1881, %rd1878;
	add.s64 	%rd1883, %rd1882, %rd1875;
	add.s64 	%rd1884, %rd1883, %rd4247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1287,%dummy}, %rd1870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd1870;
	}
	shf.r.wrap.b32 	%r1289, %r1288, %r1287, 28;
	shf.r.wrap.b32 	%r1290, %r1287, %r1288, 28;
	mov.b64 	%rd1885, {%r1290, %r1289};
	shf.l.wrap.b32 	%r1291, %r1287, %r1288, 30;
	shf.l.wrap.b32 	%r1292, %r1288, %r1287, 30;
	mov.b64 	%rd1886, {%r1292, %r1291};
	xor.b64  	%rd1887, %rd1886, %rd1885;
	shf.l.wrap.b32 	%r1293, %r1287, %r1288, 25;
	shf.l.wrap.b32 	%r1294, %r1288, %r1287, 25;
	mov.b64 	%rd1888, {%r1294, %r1293};
	xor.b64  	%rd1889, %rd1887, %rd1888;
	xor.b64  	%rd1890, %rd1870, %rd4246;
	xor.b64  	%rd1891, %rd1870, %rd4245;
	and.b64  	%rd1892, %rd1891, %rd1890;
	xor.b64  	%rd1893, %rd1892, %rd1870;
	add.s64 	%rd1894, %rd1883, %rd1893;
	add.s64 	%rd1895, %rd1894, %rd1889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd1884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd1884;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 14;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 14;
	mov.b64 	%rd1896, {%r1298, %r1297};
	shf.r.wrap.b32 	%r1299, %r1296, %r1295, 18;
	shf.r.wrap.b32 	%r1300, %r1295, %r1296, 18;
	mov.b64 	%rd1897, {%r1300, %r1299};
	xor.b64  	%rd1898, %rd1897, %rd1896;
	shf.l.wrap.b32 	%r1301, %r1295, %r1296, 23;
	shf.l.wrap.b32 	%r1302, %r1296, %r1295, 23;
	mov.b64 	%rd1899, {%r1302, %r1301};
	xor.b64  	%rd1900, %rd1898, %rd1899;
	xor.b64  	%rd1901, %rd1859, %rd4249;
	and.b64  	%rd1902, %rd1884, %rd1901;
	xor.b64  	%rd1903, %rd1902, %rd4249;
	add.s64 	%rd1904, %rd4255, %rd4250;
	ld.const.u64 	%rd1905, [%rd4243+144];
	add.s64 	%rd1906, %rd1904, %rd1905;
	add.s64 	%rd1907, %rd1906, %rd1903;
	add.s64 	%rd1908, %rd1907, %rd1900;
	add.s64 	%rd1909, %rd1908, %rd4246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd1895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd1895;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 28;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 28;
	mov.b64 	%rd1910, {%r1306, %r1305};
	shf.l.wrap.b32 	%r1307, %r1303, %r1304, 30;
	shf.l.wrap.b32 	%r1308, %r1304, %r1303, 30;
	mov.b64 	%rd1911, {%r1308, %r1307};
	xor.b64  	%rd1912, %rd1911, %rd1910;
	shf.l.wrap.b32 	%r1309, %r1303, %r1304, 25;
	shf.l.wrap.b32 	%r1310, %r1304, %r1303, 25;
	mov.b64 	%rd1913, {%r1310, %r1309};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	xor.b64  	%rd1915, %rd1895, %rd4245;
	xor.b64  	%rd1916, %rd1895, %rd1870;
	and.b64  	%rd1917, %rd1916, %rd1915;
	xor.b64  	%rd1918, %rd1917, %rd1895;
	add.s64 	%rd1919, %rd1908, %rd1918;
	add.s64 	%rd1920, %rd1919, %rd1914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd1909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd1909;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 14;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 14;
	mov.b64 	%rd1921, {%r1314, %r1313};
	shf.r.wrap.b32 	%r1315, %r1312, %r1311, 18;
	shf.r.wrap.b32 	%r1316, %r1311, %r1312, 18;
	mov.b64 	%rd1922, {%r1316, %r1315};
	xor.b64  	%rd1923, %rd1922, %rd1921;
	shf.l.wrap.b32 	%r1317, %r1311, %r1312, 23;
	shf.l.wrap.b32 	%r1318, %r1312, %r1311, 23;
	mov.b64 	%rd1924, {%r1318, %r1317};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	xor.b64  	%rd1926, %rd1884, %rd1859;
	and.b64  	%rd1927, %rd1909, %rd1926;
	xor.b64  	%rd1928, %rd1927, %rd1859;
	add.s64 	%rd1929, %rd4256, %rd4249;
	ld.const.u64 	%rd1930, [%rd4243+152];
	add.s64 	%rd1931, %rd1929, %rd1930;
	add.s64 	%rd1932, %rd1931, %rd1928;
	add.s64 	%rd1933, %rd1932, %rd1925;
	add.s64 	%rd1934, %rd1933, %rd4245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1319,%dummy}, %rd1920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1320}, %rd1920;
	}
	shf.r.wrap.b32 	%r1321, %r1320, %r1319, 28;
	shf.r.wrap.b32 	%r1322, %r1319, %r1320, 28;
	mov.b64 	%rd1935, {%r1322, %r1321};
	shf.l.wrap.b32 	%r1323, %r1319, %r1320, 30;
	shf.l.wrap.b32 	%r1324, %r1320, %r1319, 30;
	mov.b64 	%rd1936, {%r1324, %r1323};
	xor.b64  	%rd1937, %rd1936, %rd1935;
	shf.l.wrap.b32 	%r1325, %r1319, %r1320, 25;
	shf.l.wrap.b32 	%r1326, %r1320, %r1319, 25;
	mov.b64 	%rd1938, {%r1326, %r1325};
	xor.b64  	%rd1939, %rd1937, %rd1938;
	xor.b64  	%rd1940, %rd1920, %rd1870;
	xor.b64  	%rd1941, %rd1920, %rd1895;
	and.b64  	%rd1942, %rd1941, %rd1940;
	xor.b64  	%rd1943, %rd1942, %rd1920;
	add.s64 	%rd1944, %rd1933, %rd1943;
	add.s64 	%rd1945, %rd1944, %rd1939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1327,%dummy}, %rd1934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1328}, %rd1934;
	}
	shf.r.wrap.b32 	%r1329, %r1328, %r1327, 14;
	shf.r.wrap.b32 	%r1330, %r1327, %r1328, 14;
	mov.b64 	%rd1946, {%r1330, %r1329};
	shf.r.wrap.b32 	%r1331, %r1328, %r1327, 18;
	shf.r.wrap.b32 	%r1332, %r1327, %r1328, 18;
	mov.b64 	%rd1947, {%r1332, %r1331};
	xor.b64  	%rd1948, %rd1947, %rd1946;
	shf.l.wrap.b32 	%r1333, %r1327, %r1328, 23;
	shf.l.wrap.b32 	%r1334, %r1328, %r1327, 23;
	mov.b64 	%rd1949, {%r1334, %r1333};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	xor.b64  	%rd1951, %rd1909, %rd1884;
	and.b64  	%rd1952, %rd1934, %rd1951;
	xor.b64  	%rd1953, %rd1952, %rd1884;
	add.s64 	%rd1954, %rd1859, %rd4257;
	ld.const.u64 	%rd1955, [%rd4243+160];
	add.s64 	%rd1956, %rd1954, %rd1955;
	add.s64 	%rd1957, %rd1956, %rd1953;
	add.s64 	%rd1958, %rd1957, %rd1950;
	add.s64 	%rd1959, %rd1958, %rd1870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1335,%dummy}, %rd1945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1336}, %rd1945;
	}
	shf.r.wrap.b32 	%r1337, %r1336, %r1335, 28;
	shf.r.wrap.b32 	%r1338, %r1335, %r1336, 28;
	mov.b64 	%rd1960, {%r1338, %r1337};
	shf.l.wrap.b32 	%r1339, %r1335, %r1336, 30;
	shf.l.wrap.b32 	%r1340, %r1336, %r1335, 30;
	mov.b64 	%rd1961, {%r1340, %r1339};
	xor.b64  	%rd1962, %rd1961, %rd1960;
	shf.l.wrap.b32 	%r1341, %r1335, %r1336, 25;
	shf.l.wrap.b32 	%r1342, %r1336, %r1335, 25;
	mov.b64 	%rd1963, {%r1342, %r1341};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	xor.b64  	%rd1965, %rd1945, %rd1895;
	xor.b64  	%rd1966, %rd1945, %rd1920;
	and.b64  	%rd1967, %rd1966, %rd1965;
	xor.b64  	%rd1968, %rd1967, %rd1945;
	add.s64 	%rd1969, %rd1958, %rd1968;
	add.s64 	%rd1970, %rd1969, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd1959;
	}
	shf.r.wrap.b32 	%r1345, %r1344, %r1343, 14;
	shf.r.wrap.b32 	%r1346, %r1343, %r1344, 14;
	mov.b64 	%rd1971, {%r1346, %r1345};
	shf.r.wrap.b32 	%r1347, %r1344, %r1343, 18;
	shf.r.wrap.b32 	%r1348, %r1343, %r1344, 18;
	mov.b64 	%rd1972, {%r1348, %r1347};
	xor.b64  	%rd1973, %rd1972, %rd1971;
	shf.l.wrap.b32 	%r1349, %r1343, %r1344, 23;
	shf.l.wrap.b32 	%r1350, %r1344, %r1343, 23;
	mov.b64 	%rd1974, {%r1350, %r1349};
	xor.b64  	%rd1975, %rd1973, %rd1974;
	xor.b64  	%rd1976, %rd1934, %rd1909;
	and.b64  	%rd1977, %rd1959, %rd1976;
	xor.b64  	%rd1978, %rd1977, %rd1909;
	add.s64 	%rd1979, %rd1884, %rd4258;
	ld.const.u64 	%rd1980, [%rd4243+168];
	add.s64 	%rd1981, %rd1979, %rd1980;
	add.s64 	%rd1982, %rd1981, %rd1978;
	add.s64 	%rd1983, %rd1982, %rd1975;
	add.s64 	%rd1984, %rd1983, %rd1895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd1970;
	}
	shf.r.wrap.b32 	%r1353, %r1352, %r1351, 28;
	shf.r.wrap.b32 	%r1354, %r1351, %r1352, 28;
	mov.b64 	%rd1985, {%r1354, %r1353};
	shf.l.wrap.b32 	%r1355, %r1351, %r1352, 30;
	shf.l.wrap.b32 	%r1356, %r1352, %r1351, 30;
	mov.b64 	%rd1986, {%r1356, %r1355};
	xor.b64  	%rd1987, %rd1986, %rd1985;
	shf.l.wrap.b32 	%r1357, %r1351, %r1352, 25;
	shf.l.wrap.b32 	%r1358, %r1352, %r1351, 25;
	mov.b64 	%rd1988, {%r1358, %r1357};
	xor.b64  	%rd1989, %rd1987, %rd1988;
	xor.b64  	%rd1990, %rd1970, %rd1920;
	xor.b64  	%rd1991, %rd1970, %rd1945;
	and.b64  	%rd1992, %rd1991, %rd1990;
	xor.b64  	%rd1993, %rd1992, %rd1970;
	add.s64 	%rd1994, %rd1983, %rd1993;
	add.s64 	%rd1995, %rd1994, %rd1989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1359,%dummy}, %rd1984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1360}, %rd1984;
	}
	shf.r.wrap.b32 	%r1361, %r1360, %r1359, 14;
	shf.r.wrap.b32 	%r1362, %r1359, %r1360, 14;
	mov.b64 	%rd1996, {%r1362, %r1361};
	shf.r.wrap.b32 	%r1363, %r1360, %r1359, 18;
	shf.r.wrap.b32 	%r1364, %r1359, %r1360, 18;
	mov.b64 	%rd1997, {%r1364, %r1363};
	xor.b64  	%rd1998, %rd1997, %rd1996;
	shf.l.wrap.b32 	%r1365, %r1359, %r1360, 23;
	shf.l.wrap.b32 	%r1366, %r1360, %r1359, 23;
	mov.b64 	%rd1999, {%r1366, %r1365};
	xor.b64  	%rd2000, %rd1998, %rd1999;
	xor.b64  	%rd2001, %rd1959, %rd1934;
	and.b64  	%rd2002, %rd1984, %rd2001;
	xor.b64  	%rd2003, %rd2002, %rd1934;
	add.s64 	%rd2004, %rd1909, %rd4259;
	ld.const.u64 	%rd2005, [%rd4243+176];
	add.s64 	%rd2006, %rd2004, %rd2005;
	add.s64 	%rd2007, %rd2006, %rd2003;
	add.s64 	%rd2008, %rd2007, %rd2000;
	add.s64 	%rd2009, %rd2008, %rd1920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd1995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1368}, %rd1995;
	}
	shf.r.wrap.b32 	%r1369, %r1368, %r1367, 28;
	shf.r.wrap.b32 	%r1370, %r1367, %r1368, 28;
	mov.b64 	%rd2010, {%r1370, %r1369};
	shf.l.wrap.b32 	%r1371, %r1367, %r1368, 30;
	shf.l.wrap.b32 	%r1372, %r1368, %r1367, 30;
	mov.b64 	%rd2011, {%r1372, %r1371};
	xor.b64  	%rd2012, %rd2011, %rd2010;
	shf.l.wrap.b32 	%r1373, %r1367, %r1368, 25;
	shf.l.wrap.b32 	%r1374, %r1368, %r1367, 25;
	mov.b64 	%rd2013, {%r1374, %r1373};
	xor.b64  	%rd2014, %rd2012, %rd2013;
	xor.b64  	%rd2015, %rd1995, %rd1945;
	xor.b64  	%rd2016, %rd1995, %rd1970;
	and.b64  	%rd2017, %rd2016, %rd2015;
	xor.b64  	%rd2018, %rd2017, %rd1995;
	add.s64 	%rd2019, %rd2008, %rd2018;
	add.s64 	%rd2020, %rd2019, %rd2014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd2009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd2009;
	}
	shf.r.wrap.b32 	%r1377, %r1376, %r1375, 14;
	shf.r.wrap.b32 	%r1378, %r1375, %r1376, 14;
	mov.b64 	%rd2021, {%r1378, %r1377};
	shf.r.wrap.b32 	%r1379, %r1376, %r1375, 18;
	shf.r.wrap.b32 	%r1380, %r1375, %r1376, 18;
	mov.b64 	%rd2022, {%r1380, %r1379};
	xor.b64  	%rd2023, %rd2022, %rd2021;
	shf.l.wrap.b32 	%r1381, %r1375, %r1376, 23;
	shf.l.wrap.b32 	%r1382, %r1376, %r1375, 23;
	mov.b64 	%rd2024, {%r1382, %r1381};
	xor.b64  	%rd2025, %rd2023, %rd2024;
	xor.b64  	%rd2026, %rd1984, %rd1959;
	and.b64  	%rd2027, %rd2009, %rd2026;
	xor.b64  	%rd2028, %rd2027, %rd1959;
	add.s64 	%rd2029, %rd1934, %rd4260;
	ld.const.u64 	%rd2030, [%rd4243+184];
	add.s64 	%rd2031, %rd2029, %rd2030;
	add.s64 	%rd2032, %rd2031, %rd2028;
	add.s64 	%rd2033, %rd2032, %rd2025;
	add.s64 	%rd2034, %rd2033, %rd1945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1383,%dummy}, %rd2020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1384}, %rd2020;
	}
	shf.r.wrap.b32 	%r1385, %r1384, %r1383, 28;
	shf.r.wrap.b32 	%r1386, %r1383, %r1384, 28;
	mov.b64 	%rd2035, {%r1386, %r1385};
	shf.l.wrap.b32 	%r1387, %r1383, %r1384, 30;
	shf.l.wrap.b32 	%r1388, %r1384, %r1383, 30;
	mov.b64 	%rd2036, {%r1388, %r1387};
	xor.b64  	%rd2037, %rd2036, %rd2035;
	shf.l.wrap.b32 	%r1389, %r1383, %r1384, 25;
	shf.l.wrap.b32 	%r1390, %r1384, %r1383, 25;
	mov.b64 	%rd2038, {%r1390, %r1389};
	xor.b64  	%rd2039, %rd2037, %rd2038;
	xor.b64  	%rd2040, %rd2020, %rd1970;
	xor.b64  	%rd2041, %rd2020, %rd1995;
	and.b64  	%rd2042, %rd2041, %rd2040;
	xor.b64  	%rd2043, %rd2042, %rd2020;
	add.s64 	%rd2044, %rd2033, %rd2043;
	add.s64 	%rd2045, %rd2044, %rd2039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1391,%dummy}, %rd2034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd2034;
	}
	shf.r.wrap.b32 	%r1393, %r1392, %r1391, 14;
	shf.r.wrap.b32 	%r1394, %r1391, %r1392, 14;
	mov.b64 	%rd2046, {%r1394, %r1393};
	shf.r.wrap.b32 	%r1395, %r1392, %r1391, 18;
	shf.r.wrap.b32 	%r1396, %r1391, %r1392, 18;
	mov.b64 	%rd2047, {%r1396, %r1395};
	xor.b64  	%rd2048, %rd2047, %rd2046;
	shf.l.wrap.b32 	%r1397, %r1391, %r1392, 23;
	shf.l.wrap.b32 	%r1398, %r1392, %r1391, 23;
	mov.b64 	%rd2049, {%r1398, %r1397};
	xor.b64  	%rd2050, %rd2048, %rd2049;
	xor.b64  	%rd2051, %rd2009, %rd1984;
	and.b64  	%rd2052, %rd2034, %rd2051;
	xor.b64  	%rd2053, %rd2052, %rd1984;
	add.s64 	%rd2054, %rd1959, %rd4261;
	ld.const.u64 	%rd2055, [%rd4243+192];
	add.s64 	%rd2056, %rd2054, %rd2055;
	add.s64 	%rd2057, %rd2056, %rd2053;
	add.s64 	%rd2058, %rd2057, %rd2050;
	add.s64 	%rd2059, %rd2058, %rd1970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd2045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd2045;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 28;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 28;
	mov.b64 	%rd2060, {%r1402, %r1401};
	shf.l.wrap.b32 	%r1403, %r1399, %r1400, 30;
	shf.l.wrap.b32 	%r1404, %r1400, %r1399, 30;
	mov.b64 	%rd2061, {%r1404, %r1403};
	xor.b64  	%rd2062, %rd2061, %rd2060;
	shf.l.wrap.b32 	%r1405, %r1399, %r1400, 25;
	shf.l.wrap.b32 	%r1406, %r1400, %r1399, 25;
	mov.b64 	%rd2063, {%r1406, %r1405};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	xor.b64  	%rd2065, %rd2045, %rd1995;
	xor.b64  	%rd2066, %rd2045, %rd2020;
	and.b64  	%rd2067, %rd2066, %rd2065;
	xor.b64  	%rd2068, %rd2067, %rd2045;
	add.s64 	%rd2069, %rd2058, %rd2068;
	add.s64 	%rd2070, %rd2069, %rd2064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd2059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd2059;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 14;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 14;
	mov.b64 	%rd2071, {%r1410, %r1409};
	shf.r.wrap.b32 	%r1411, %r1408, %r1407, 18;
	shf.r.wrap.b32 	%r1412, %r1407, %r1408, 18;
	mov.b64 	%rd2072, {%r1412, %r1411};
	xor.b64  	%rd2073, %rd2072, %rd2071;
	shf.l.wrap.b32 	%r1413, %r1407, %r1408, 23;
	shf.l.wrap.b32 	%r1414, %r1408, %r1407, 23;
	mov.b64 	%rd2074, {%r1414, %r1413};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	xor.b64  	%rd2076, %rd2034, %rd2009;
	and.b64  	%rd2077, %rd2059, %rd2076;
	xor.b64  	%rd2078, %rd2077, %rd2009;
	add.s64 	%rd2079, %rd1984, %rd4262;
	ld.const.u64 	%rd2080, [%rd4243+200];
	add.s64 	%rd2081, %rd2079, %rd2080;
	add.s64 	%rd2082, %rd2081, %rd2078;
	add.s64 	%rd2083, %rd2082, %rd2075;
	add.s64 	%rd2084, %rd2083, %rd1995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd2070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd2070;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 28;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 28;
	mov.b64 	%rd2085, {%r1418, %r1417};
	shf.l.wrap.b32 	%r1419, %r1415, %r1416, 30;
	shf.l.wrap.b32 	%r1420, %r1416, %r1415, 30;
	mov.b64 	%rd2086, {%r1420, %r1419};
	xor.b64  	%rd2087, %rd2086, %rd2085;
	shf.l.wrap.b32 	%r1421, %r1415, %r1416, 25;
	shf.l.wrap.b32 	%r1422, %r1416, %r1415, 25;
	mov.b64 	%rd2088, {%r1422, %r1421};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	xor.b64  	%rd2090, %rd2070, %rd2020;
	xor.b64  	%rd2091, %rd2070, %rd2045;
	and.b64  	%rd2092, %rd2091, %rd2090;
	xor.b64  	%rd2093, %rd2092, %rd2070;
	add.s64 	%rd2094, %rd2083, %rd2093;
	add.s64 	%rd2095, %rd2094, %rd2089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd2084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd2084;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 14;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 14;
	mov.b64 	%rd2096, {%r1426, %r1425};
	shf.r.wrap.b32 	%r1427, %r1424, %r1423, 18;
	shf.r.wrap.b32 	%r1428, %r1423, %r1424, 18;
	mov.b64 	%rd2097, {%r1428, %r1427};
	xor.b64  	%rd2098, %rd2097, %rd2096;
	shf.l.wrap.b32 	%r1429, %r1423, %r1424, 23;
	shf.l.wrap.b32 	%r1430, %r1424, %r1423, 23;
	mov.b64 	%rd2099, {%r1430, %r1429};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	xor.b64  	%rd2101, %rd2059, %rd2034;
	and.b64  	%rd2102, %rd2084, %rd2101;
	xor.b64  	%rd2103, %rd2102, %rd2034;
	add.s64 	%rd2104, %rd2009, %rd4263;
	ld.const.u64 	%rd2105, [%rd4243+208];
	add.s64 	%rd2106, %rd2104, %rd2105;
	add.s64 	%rd2107, %rd2106, %rd2103;
	add.s64 	%rd2108, %rd2107, %rd2100;
	add.s64 	%rd2109, %rd2108, %rd2020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1431,%dummy}, %rd2095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1432}, %rd2095;
	}
	shf.r.wrap.b32 	%r1433, %r1432, %r1431, 28;
	shf.r.wrap.b32 	%r1434, %r1431, %r1432, 28;
	mov.b64 	%rd2110, {%r1434, %r1433};
	shf.l.wrap.b32 	%r1435, %r1431, %r1432, 30;
	shf.l.wrap.b32 	%r1436, %r1432, %r1431, 30;
	mov.b64 	%rd2111, {%r1436, %r1435};
	xor.b64  	%rd2112, %rd2111, %rd2110;
	shf.l.wrap.b32 	%r1437, %r1431, %r1432, 25;
	shf.l.wrap.b32 	%r1438, %r1432, %r1431, 25;
	mov.b64 	%rd2113, {%r1438, %r1437};
	xor.b64  	%rd2114, %rd2112, %rd2113;
	xor.b64  	%rd2115, %rd2095, %rd2045;
	xor.b64  	%rd2116, %rd2095, %rd2070;
	and.b64  	%rd2117, %rd2116, %rd2115;
	xor.b64  	%rd2118, %rd2117, %rd2095;
	add.s64 	%rd2119, %rd2108, %rd2118;
	add.s64 	%rd2120, %rd2119, %rd2114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1439,%dummy}, %rd2109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1440}, %rd2109;
	}
	shf.r.wrap.b32 	%r1441, %r1440, %r1439, 14;
	shf.r.wrap.b32 	%r1442, %r1439, %r1440, 14;
	mov.b64 	%rd2121, {%r1442, %r1441};
	shf.r.wrap.b32 	%r1443, %r1440, %r1439, 18;
	shf.r.wrap.b32 	%r1444, %r1439, %r1440, 18;
	mov.b64 	%rd2122, {%r1444, %r1443};
	xor.b64  	%rd2123, %rd2122, %rd2121;
	shf.l.wrap.b32 	%r1445, %r1439, %r1440, 23;
	shf.l.wrap.b32 	%r1446, %r1440, %r1439, 23;
	mov.b64 	%rd2124, {%r1446, %r1445};
	xor.b64  	%rd2125, %rd2123, %rd2124;
	xor.b64  	%rd2126, %rd2084, %rd2059;
	and.b64  	%rd2127, %rd2109, %rd2126;
	xor.b64  	%rd2128, %rd2127, %rd2059;
	add.s64 	%rd2129, %rd2034, %rd4264;
	ld.const.u64 	%rd2130, [%rd4243+216];
	add.s64 	%rd2131, %rd2129, %rd2130;
	add.s64 	%rd2132, %rd2131, %rd2128;
	add.s64 	%rd2133, %rd2132, %rd2125;
	add.s64 	%rd2134, %rd2133, %rd2045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd2120;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 28;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 28;
	mov.b64 	%rd2135, {%r1450, %r1449};
	shf.l.wrap.b32 	%r1451, %r1447, %r1448, 30;
	shf.l.wrap.b32 	%r1452, %r1448, %r1447, 30;
	mov.b64 	%rd2136, {%r1452, %r1451};
	xor.b64  	%rd2137, %rd2136, %rd2135;
	shf.l.wrap.b32 	%r1453, %r1447, %r1448, 25;
	shf.l.wrap.b32 	%r1454, %r1448, %r1447, 25;
	mov.b64 	%rd2138, {%r1454, %r1453};
	xor.b64  	%rd2139, %rd2137, %rd2138;
	xor.b64  	%rd2140, %rd2120, %rd2070;
	xor.b64  	%rd2141, %rd2120, %rd2095;
	and.b64  	%rd2142, %rd2141, %rd2140;
	xor.b64  	%rd2143, %rd2142, %rd2120;
	add.s64 	%rd2144, %rd2133, %rd2143;
	add.s64 	%rd2145, %rd2144, %rd2139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1455,%dummy}, %rd2134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1456}, %rd2134;
	}
	shf.r.wrap.b32 	%r1457, %r1456, %r1455, 14;
	shf.r.wrap.b32 	%r1458, %r1455, %r1456, 14;
	mov.b64 	%rd2146, {%r1458, %r1457};
	shf.r.wrap.b32 	%r1459, %r1456, %r1455, 18;
	shf.r.wrap.b32 	%r1460, %r1455, %r1456, 18;
	mov.b64 	%rd2147, {%r1460, %r1459};
	xor.b64  	%rd2148, %rd2147, %rd2146;
	shf.l.wrap.b32 	%r1461, %r1455, %r1456, 23;
	shf.l.wrap.b32 	%r1462, %r1456, %r1455, 23;
	mov.b64 	%rd2149, {%r1462, %r1461};
	xor.b64  	%rd2150, %rd2148, %rd2149;
	xor.b64  	%rd2151, %rd2109, %rd2084;
	and.b64  	%rd2152, %rd2134, %rd2151;
	xor.b64  	%rd2153, %rd2152, %rd2084;
	add.s64 	%rd2154, %rd2059, %rd4265;
	ld.const.u64 	%rd2155, [%rd4243+224];
	add.s64 	%rd2156, %rd2154, %rd2155;
	add.s64 	%rd2157, %rd2156, %rd2153;
	add.s64 	%rd2158, %rd2157, %rd2150;
	add.s64 	%rd4252, %rd2158, %rd2070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1463,%dummy}, %rd2145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1464}, %rd2145;
	}
	shf.r.wrap.b32 	%r1465, %r1464, %r1463, 28;
	shf.r.wrap.b32 	%r1466, %r1463, %r1464, 28;
	mov.b64 	%rd2159, {%r1466, %r1465};
	shf.l.wrap.b32 	%r1467, %r1463, %r1464, 30;
	shf.l.wrap.b32 	%r1468, %r1464, %r1463, 30;
	mov.b64 	%rd2160, {%r1468, %r1467};
	xor.b64  	%rd2161, %rd2160, %rd2159;
	shf.l.wrap.b32 	%r1469, %r1463, %r1464, 25;
	shf.l.wrap.b32 	%r1470, %r1464, %r1463, 25;
	mov.b64 	%rd2162, {%r1470, %r1469};
	xor.b64  	%rd2163, %rd2161, %rd2162;
	xor.b64  	%rd2164, %rd2145, %rd2095;
	xor.b64  	%rd2165, %rd2145, %rd2120;
	and.b64  	%rd2166, %rd2165, %rd2164;
	xor.b64  	%rd2167, %rd2166, %rd2145;
	add.s64 	%rd2168, %rd2158, %rd2167;
	add.s64 	%rd4248, %rd2168, %rd2163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd4252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd4252;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 14;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 14;
	mov.b64 	%rd2169, {%r1474, %r1473};
	shf.r.wrap.b32 	%r1475, %r1472, %r1471, 18;
	shf.r.wrap.b32 	%r1476, %r1471, %r1472, 18;
	mov.b64 	%rd2170, {%r1476, %r1475};
	xor.b64  	%rd2171, %rd2170, %rd2169;
	shf.l.wrap.b32 	%r1477, %r1471, %r1472, 23;
	shf.l.wrap.b32 	%r1478, %r1472, %r1471, 23;
	mov.b64 	%rd2172, {%r1478, %r1477};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	xor.b64  	%rd2174, %rd2134, %rd2109;
	and.b64  	%rd2175, %rd4252, %rd2174;
	xor.b64  	%rd2176, %rd2175, %rd2109;
	add.s64 	%rd2177, %rd2084, %rd4266;
	ld.const.u64 	%rd2178, [%rd4243+232];
	add.s64 	%rd2179, %rd2177, %rd2178;
	add.s64 	%rd2180, %rd2179, %rd2176;
	add.s64 	%rd2181, %rd2180, %rd2173;
	add.s64 	%rd4251, %rd2181, %rd2095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1479,%dummy}, %rd4248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1480}, %rd4248;
	}
	shf.r.wrap.b32 	%r1481, %r1480, %r1479, 28;
	shf.r.wrap.b32 	%r1482, %r1479, %r1480, 28;
	mov.b64 	%rd2182, {%r1482, %r1481};
	shf.l.wrap.b32 	%r1483, %r1479, %r1480, 30;
	shf.l.wrap.b32 	%r1484, %r1480, %r1479, 30;
	mov.b64 	%rd2183, {%r1484, %r1483};
	xor.b64  	%rd2184, %rd2183, %rd2182;
	shf.l.wrap.b32 	%r1485, %r1479, %r1480, 25;
	shf.l.wrap.b32 	%r1486, %r1480, %r1479, 25;
	mov.b64 	%rd2185, {%r1486, %r1485};
	xor.b64  	%rd2186, %rd2184, %rd2185;
	xor.b64  	%rd2187, %rd4248, %rd2120;
	xor.b64  	%rd2188, %rd4248, %rd2145;
	and.b64  	%rd2189, %rd2188, %rd2187;
	xor.b64  	%rd2190, %rd2189, %rd4248;
	add.s64 	%rd2191, %rd2181, %rd2190;
	add.s64 	%rd4247, %rd2191, %rd2186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1487,%dummy}, %rd4251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1488}, %rd4251;
	}
	shf.r.wrap.b32 	%r1489, %r1488, %r1487, 14;
	shf.r.wrap.b32 	%r1490, %r1487, %r1488, 14;
	mov.b64 	%rd2192, {%r1490, %r1489};
	shf.r.wrap.b32 	%r1491, %r1488, %r1487, 18;
	shf.r.wrap.b32 	%r1492, %r1487, %r1488, 18;
	mov.b64 	%rd2193, {%r1492, %r1491};
	xor.b64  	%rd2194, %rd2193, %rd2192;
	shf.l.wrap.b32 	%r1493, %r1487, %r1488, 23;
	shf.l.wrap.b32 	%r1494, %r1488, %r1487, 23;
	mov.b64 	%rd2195, {%r1494, %r1493};
	xor.b64  	%rd2196, %rd2194, %rd2195;
	xor.b64  	%rd2197, %rd4252, %rd2134;
	and.b64  	%rd2198, %rd4251, %rd2197;
	xor.b64  	%rd2199, %rd2198, %rd2134;
	add.s64 	%rd2200, %rd2109, %rd4267;
	ld.const.u64 	%rd2201, [%rd4243+240];
	add.s64 	%rd2202, %rd2200, %rd2201;
	add.s64 	%rd2203, %rd2202, %rd2199;
	add.s64 	%rd2204, %rd2203, %rd2196;
	add.s64 	%rd4250, %rd2204, %rd2120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd4247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd4247;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 28;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 28;
	mov.b64 	%rd2205, {%r1498, %r1497};
	shf.l.wrap.b32 	%r1499, %r1495, %r1496, 30;
	shf.l.wrap.b32 	%r1500, %r1496, %r1495, 30;
	mov.b64 	%rd2206, {%r1500, %r1499};
	xor.b64  	%rd2207, %rd2206, %rd2205;
	shf.l.wrap.b32 	%r1501, %r1495, %r1496, 25;
	shf.l.wrap.b32 	%r1502, %r1496, %r1495, 25;
	mov.b64 	%rd2208, {%r1502, %r1501};
	xor.b64  	%rd2209, %rd2207, %rd2208;
	xor.b64  	%rd2210, %rd4247, %rd2145;
	xor.b64  	%rd2211, %rd4247, %rd4248;
	and.b64  	%rd2212, %rd2211, %rd2210;
	xor.b64  	%rd2213, %rd2212, %rd4247;
	add.s64 	%rd2214, %rd2204, %rd2213;
	add.s64 	%rd4246, %rd2214, %rd2209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd4250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd4250;
	}
	shf.r.wrap.b32 	%r1505, %r1504, %r1503, 14;
	shf.r.wrap.b32 	%r1506, %r1503, %r1504, 14;
	mov.b64 	%rd2215, {%r1506, %r1505};
	shf.r.wrap.b32 	%r1507, %r1504, %r1503, 18;
	shf.r.wrap.b32 	%r1508, %r1503, %r1504, 18;
	mov.b64 	%rd2216, {%r1508, %r1507};
	xor.b64  	%rd2217, %rd2216, %rd2215;
	shf.l.wrap.b32 	%r1509, %r1503, %r1504, 23;
	shf.l.wrap.b32 	%r1510, %r1504, %r1503, 23;
	mov.b64 	%rd2218, {%r1510, %r1509};
	xor.b64  	%rd2219, %rd2217, %rd2218;
	xor.b64  	%rd2220, %rd4251, %rd4252;
	and.b64  	%rd2221, %rd4250, %rd2220;
	xor.b64  	%rd2222, %rd2221, %rd4252;
	add.s64 	%rd2223, %rd2134, %rd4244;
	ld.const.u64 	%rd2224, [%rd4243+248];
	add.s64 	%rd2225, %rd2223, %rd2224;
	add.s64 	%rd2226, %rd2225, %rd2222;
	add.s64 	%rd2227, %rd2226, %rd2219;
	add.s64 	%rd4249, %rd2227, %rd2145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd4246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd4246;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 28;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 28;
	mov.b64 	%rd2228, {%r1514, %r1513};
	shf.l.wrap.b32 	%r1515, %r1511, %r1512, 30;
	shf.l.wrap.b32 	%r1516, %r1512, %r1511, 30;
	mov.b64 	%rd2229, {%r1516, %r1515};
	xor.b64  	%rd2230, %rd2229, %rd2228;
	shf.l.wrap.b32 	%r1517, %r1511, %r1512, 25;
	shf.l.wrap.b32 	%r1518, %r1512, %r1511, 25;
	mov.b64 	%rd2231, {%r1518, %r1517};
	xor.b64  	%rd2232, %rd2230, %rd2231;
	xor.b64  	%rd2233, %rd4246, %rd4248;
	xor.b64  	%rd2234, %rd4246, %rd4247;
	and.b64  	%rd2235, %rd2234, %rd2233;
	xor.b64  	%rd2236, %rd2235, %rd4246;
	add.s64 	%rd2237, %rd2227, %rd2236;
	add.s64 	%rd4245, %rd2237, %rd2232;
	add.s32 	%r2918, %r2918, 16;
	setp.lt.s32	%p3, %r2918, 80;
	mov.u64 	%rd4243, %rd178;
	@%p3 bra 	BB1_4;

	ld.const.u64 	%rd4216, [k_sha512+120];
	ld.const.u64 	%rd4212, [k_sha512+112];
	ld.const.u64 	%rd4209, [k_sha512+104];
	ld.const.u64 	%rd4208, [k_sha512+96];
	ld.const.u64 	%rd4197, [k_sha512+88];
	ld.const.u64 	%rd4196, [k_sha512+80];
	ld.const.u64 	%rd4195, [k_sha512+72];
	ld.const.u64 	%rd4194, [k_sha512];
	ld.param.u64 	%rd4185, [m07100_init_param_4];
	ld.const.u64 	%rd4184, [k_sha512+64];
	ld.const.u64 	%rd4183, [k_sha512+56];
	ld.const.u64 	%rd4182, [k_sha512+48];
	ld.const.u64 	%rd4181, [k_sha512+40];
	ld.const.u64 	%rd4180, [k_sha512+32];
	ld.const.u64 	%rd4179, [k_sha512+24];
	ld.const.u64 	%rd4178, [k_sha512+16];
	ld.const.u64 	%rd4177, [k_sha512+8];
	add.s64 	%rd179, %rd4221, -4942790177534073029;
	mul.lo.s64 	%rd2240, %rd1, 384;
	add.s64 	%rd2241, %rd4185, %rd2240;
	st.global.u64 	[%rd2241], %rd109;
	st.global.u64 	[%rd2241+8], %rd179;
	st.global.u64 	[%rd2241+16], %rd110;
	add.s64 	%rd180, %rd4223, -6534734903238641935;
	st.global.u64 	[%rd2241+24], %rd180;
	st.global.u64 	[%rd2241+32], %rd111;
	add.s64 	%rd181, %rd4225, -7276294671716946913;
	st.global.u64 	[%rd2241+40], %rd181;
	st.global.u64 	[%rd2241+48], %rd112;
	add.s64 	%rd182, %rd4227, 6620516959819538809;
	st.global.u64 	[%rd2241+56], %rd182;
	add.s64 	%rd183, %rd4245, 7640891576956012808;
	st.global.u64 	[%rd2241+64], %rd183;
	add.s64 	%rd184, %rd4246, -4942790177534073029;
	st.global.u64 	[%rd2241+72], %rd184;
	add.s64 	%rd185, %rd4247, 4354685564936845355;
	st.global.u64 	[%rd2241+80], %rd185;
	add.s64 	%rd186, %rd4248, -6534734903238641935;
	st.global.u64 	[%rd2241+88], %rd186;
	add.s64 	%rd187, %rd4249, 5840696475078001361;
	st.global.u64 	[%rd2241+96], %rd187;
	add.s64 	%rd188, %rd4250, -7276294671716946913;
	st.global.u64 	[%rd2241+104], %rd188;
	add.s64 	%rd189, %rd4251, 2270897969802886507;
	st.global.u64 	[%rd2241+112], %rd189;
	add.s64 	%rd190, %rd4252, 6620516959819538809;
	st.global.u64 	[%rd2241+120], %rd190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1520,%dummy}, %rd111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1521}, %rd111;
	}
	shf.r.wrap.b32 	%r1522, %r1521, %r1520, 18;
	shf.r.wrap.b32 	%r1523, %r1520, %r1521, 18;
	mov.b64 	%rd2242, {%r1523, %r1522};
	shf.r.wrap.b32 	%r1524, %r1521, %r1520, 14;
	shf.r.wrap.b32 	%r1525, %r1520, %r1521, 14;
	mov.b64 	%rd2243, {%r1525, %r1524};
	xor.b64  	%rd2244, %rd2242, %rd2243;
	shf.l.wrap.b32 	%r1526, %r1520, %r1521, 23;
	shf.l.wrap.b32 	%r1527, %r1521, %r1520, 23;
	mov.b64 	%rd2245, {%r1527, %r1526};
	xor.b64  	%rd2246, %rd2244, %rd2245;
	xor.b64  	%rd2247, %rd181, %rd112;
	and.b64  	%rd2248, %rd2247, %rd111;
	xor.b64  	%rd2249, %rd2248, %rd112;
	add.s64 	%rd2250, %rd182, %rd4278;
	add.s64 	%rd2251, %rd2250, %rd2249;
	add.s64 	%rd2252, %rd2251, %rd4194;
	add.s64 	%rd2253, %rd2252, %rd2246;
	add.s64 	%rd2254, %rd2253, %rd180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1528}, %rd109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1529,%dummy}, %rd109;
	}
	shf.l.wrap.b32 	%r1530, %r1529, %r1528, 30;
	shf.l.wrap.b32 	%r1531, %r1528, %r1529, 30;
	mov.b64 	%rd2255, {%r1531, %r1530};
	shf.r.wrap.b32 	%r1532, %r1528, %r1529, 28;
	shf.r.wrap.b32 	%r1533, %r1529, %r1528, 28;
	mov.b64 	%rd2256, {%r1533, %r1532};
	xor.b64  	%rd2257, %rd2255, %rd2256;
	shf.l.wrap.b32 	%r1534, %r1529, %r1528, 25;
	shf.l.wrap.b32 	%r1535, %r1528, %r1529, 25;
	mov.b64 	%rd2258, {%r1535, %r1534};
	xor.b64  	%rd2259, %rd2257, %rd2258;
	xor.b64  	%rd2260, %rd109, %rd179;
	xor.b64  	%rd2261, %rd109, %rd110;
	and.b64  	%rd2262, %rd2260, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd109;
	add.s64 	%rd2264, %rd2253, %rd2263;
	add.s64 	%rd2265, %rd2264, %rd2259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1536,%dummy}, %rd2254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1537}, %rd2254;
	}
	shf.r.wrap.b32 	%r1538, %r1537, %r1536, 14;
	shf.r.wrap.b32 	%r1539, %r1536, %r1537, 14;
	mov.b64 	%rd2266, {%r1539, %r1538};
	shf.r.wrap.b32 	%r1540, %r1537, %r1536, 18;
	shf.r.wrap.b32 	%r1541, %r1536, %r1537, 18;
	mov.b64 	%rd2267, {%r1541, %r1540};
	xor.b64  	%rd2268, %rd2267, %rd2266;
	shf.l.wrap.b32 	%r1542, %r1536, %r1537, 23;
	shf.l.wrap.b32 	%r1543, %r1537, %r1536, 23;
	mov.b64 	%rd2269, {%r1543, %r1542};
	xor.b64  	%rd2270, %rd2268, %rd2269;
	xor.b64  	%rd2271, %rd111, %rd181;
	and.b64  	%rd2272, %rd2254, %rd2271;
	xor.b64  	%rd2273, %rd2272, %rd181;
	add.s64 	%rd2274, %rd112, %rd4279;
	add.s64 	%rd2275, %rd2274, %rd4177;
	add.s64 	%rd2276, %rd2275, %rd2273;
	add.s64 	%rd2277, %rd2276, %rd2270;
	add.s64 	%rd2278, %rd2277, %rd110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1544,%dummy}, %rd2265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1545}, %rd2265;
	}
	shf.r.wrap.b32 	%r1546, %r1545, %r1544, 28;
	shf.r.wrap.b32 	%r1547, %r1544, %r1545, 28;
	mov.b64 	%rd2279, {%r1547, %r1546};
	shf.l.wrap.b32 	%r1548, %r1544, %r1545, 30;
	shf.l.wrap.b32 	%r1549, %r1545, %r1544, 30;
	mov.b64 	%rd2280, {%r1549, %r1548};
	xor.b64  	%rd2281, %rd2280, %rd2279;
	shf.l.wrap.b32 	%r1550, %r1544, %r1545, 25;
	shf.l.wrap.b32 	%r1551, %r1545, %r1544, 25;
	mov.b64 	%rd2282, {%r1551, %r1550};
	xor.b64  	%rd2283, %rd2281, %rd2282;
	xor.b64  	%rd2284, %rd2265, %rd179;
	xor.b64  	%rd2285, %rd2265, %rd109;
	and.b64  	%rd2286, %rd2285, %rd2284;
	xor.b64  	%rd2287, %rd2286, %rd2265;
	add.s64 	%rd2288, %rd2277, %rd2287;
	add.s64 	%rd2289, %rd2288, %rd2283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd2278;
	}
	shf.r.wrap.b32 	%r1554, %r1553, %r1552, 14;
	shf.r.wrap.b32 	%r1555, %r1552, %r1553, 14;
	mov.b64 	%rd2290, {%r1555, %r1554};
	shf.r.wrap.b32 	%r1556, %r1553, %r1552, 18;
	shf.r.wrap.b32 	%r1557, %r1552, %r1553, 18;
	mov.b64 	%rd2291, {%r1557, %r1556};
	xor.b64  	%rd2292, %rd2291, %rd2290;
	shf.l.wrap.b32 	%r1558, %r1552, %r1553, 23;
	shf.l.wrap.b32 	%r1559, %r1553, %r1552, 23;
	mov.b64 	%rd2293, {%r1559, %r1558};
	xor.b64  	%rd2294, %rd2292, %rd2293;
	xor.b64  	%rd2295, %rd2254, %rd111;
	and.b64  	%rd2296, %rd2278, %rd2295;
	xor.b64  	%rd2297, %rd2296, %rd111;
	add.s64 	%rd2298, %rd181, %rd4280;
	add.s64 	%rd2299, %rd2298, %rd4178;
	add.s64 	%rd2300, %rd2299, %rd2297;
	add.s64 	%rd2301, %rd2300, %rd2294;
	add.s64 	%rd2302, %rd2301, %rd179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1560,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1561}, %rd2289;
	}
	shf.r.wrap.b32 	%r1562, %r1561, %r1560, 28;
	shf.r.wrap.b32 	%r1563, %r1560, %r1561, 28;
	mov.b64 	%rd2303, {%r1563, %r1562};
	shf.l.wrap.b32 	%r1564, %r1560, %r1561, 30;
	shf.l.wrap.b32 	%r1565, %r1561, %r1560, 30;
	mov.b64 	%rd2304, {%r1565, %r1564};
	xor.b64  	%rd2305, %rd2304, %rd2303;
	shf.l.wrap.b32 	%r1566, %r1560, %r1561, 25;
	shf.l.wrap.b32 	%r1567, %r1561, %r1560, 25;
	mov.b64 	%rd2306, {%r1567, %r1566};
	xor.b64  	%rd2307, %rd2305, %rd2306;
	xor.b64  	%rd2308, %rd2289, %rd109;
	xor.b64  	%rd2309, %rd2289, %rd2265;
	and.b64  	%rd2310, %rd2309, %rd2308;
	xor.b64  	%rd2311, %rd2310, %rd2289;
	add.s64 	%rd2312, %rd2301, %rd2311;
	add.s64 	%rd2313, %rd2312, %rd2307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1568,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1569}, %rd2302;
	}
	shf.r.wrap.b32 	%r1570, %r1569, %r1568, 14;
	shf.r.wrap.b32 	%r1571, %r1568, %r1569, 14;
	mov.b64 	%rd2314, {%r1571, %r1570};
	shf.r.wrap.b32 	%r1572, %r1569, %r1568, 18;
	shf.r.wrap.b32 	%r1573, %r1568, %r1569, 18;
	mov.b64 	%rd2315, {%r1573, %r1572};
	xor.b64  	%rd2316, %rd2315, %rd2314;
	shf.l.wrap.b32 	%r1574, %r1568, %r1569, 23;
	shf.l.wrap.b32 	%r1575, %r1569, %r1568, 23;
	mov.b64 	%rd2317, {%r1575, %r1574};
	xor.b64  	%rd2318, %rd2316, %rd2317;
	xor.b64  	%rd2319, %rd2278, %rd2254;
	and.b64  	%rd2320, %rd2302, %rd2319;
	xor.b64  	%rd2321, %rd2320, %rd2254;
	add.s64 	%rd2322, %rd111, %rd4281;
	add.s64 	%rd2323, %rd2322, %rd4179;
	add.s64 	%rd2324, %rd2323, %rd2321;
	add.s64 	%rd2325, %rd2324, %rd2318;
	add.s64 	%rd2326, %rd2325, %rd109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1576,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1577}, %rd2313;
	}
	shf.r.wrap.b32 	%r1578, %r1577, %r1576, 28;
	shf.r.wrap.b32 	%r1579, %r1576, %r1577, 28;
	mov.b64 	%rd2327, {%r1579, %r1578};
	shf.l.wrap.b32 	%r1580, %r1576, %r1577, 30;
	shf.l.wrap.b32 	%r1581, %r1577, %r1576, 30;
	mov.b64 	%rd2328, {%r1581, %r1580};
	xor.b64  	%rd2329, %rd2328, %rd2327;
	shf.l.wrap.b32 	%r1582, %r1576, %r1577, 25;
	shf.l.wrap.b32 	%r1583, %r1577, %r1576, 25;
	mov.b64 	%rd2330, {%r1583, %r1582};
	xor.b64  	%rd2331, %rd2329, %rd2330;
	xor.b64  	%rd2332, %rd2313, %rd2265;
	xor.b64  	%rd2333, %rd2313, %rd2289;
	and.b64  	%rd2334, %rd2333, %rd2332;
	xor.b64  	%rd2335, %rd2334, %rd2313;
	add.s64 	%rd2336, %rd2325, %rd2335;
	add.s64 	%rd2337, %rd2336, %rd2331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd2326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd2326;
	}
	shf.r.wrap.b32 	%r1586, %r1585, %r1584, 14;
	shf.r.wrap.b32 	%r1587, %r1584, %r1585, 14;
	mov.b64 	%rd2338, {%r1587, %r1586};
	shf.r.wrap.b32 	%r1588, %r1585, %r1584, 18;
	shf.r.wrap.b32 	%r1589, %r1584, %r1585, 18;
	mov.b64 	%rd2339, {%r1589, %r1588};
	xor.b64  	%rd2340, %rd2339, %rd2338;
	shf.l.wrap.b32 	%r1590, %r1584, %r1585, 23;
	shf.l.wrap.b32 	%r1591, %r1585, %r1584, 23;
	mov.b64 	%rd2341, {%r1591, %r1590};
	xor.b64  	%rd2342, %rd2340, %rd2341;
	xor.b64  	%rd2343, %rd2302, %rd2278;
	and.b64  	%rd2344, %rd2326, %rd2343;
	xor.b64  	%rd2345, %rd2344, %rd2278;
	add.s64 	%rd2346, %rd2254, %rd4282;
	add.s64 	%rd2347, %rd2346, %rd4180;
	add.s64 	%rd2348, %rd2347, %rd2345;
	add.s64 	%rd2349, %rd2348, %rd2342;
	add.s64 	%rd2350, %rd2349, %rd2265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1592,%dummy}, %rd2337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1593}, %rd2337;
	}
	shf.r.wrap.b32 	%r1594, %r1593, %r1592, 28;
	shf.r.wrap.b32 	%r1595, %r1592, %r1593, 28;
	mov.b64 	%rd2351, {%r1595, %r1594};
	shf.l.wrap.b32 	%r1596, %r1592, %r1593, 30;
	shf.l.wrap.b32 	%r1597, %r1593, %r1592, 30;
	mov.b64 	%rd2352, {%r1597, %r1596};
	xor.b64  	%rd2353, %rd2352, %rd2351;
	shf.l.wrap.b32 	%r1598, %r1592, %r1593, 25;
	shf.l.wrap.b32 	%r1599, %r1593, %r1592, 25;
	mov.b64 	%rd2354, {%r1599, %r1598};
	xor.b64  	%rd2355, %rd2353, %rd2354;
	xor.b64  	%rd2356, %rd2337, %rd2289;
	xor.b64  	%rd2357, %rd2337, %rd2313;
	and.b64  	%rd2358, %rd2357, %rd2356;
	xor.b64  	%rd2359, %rd2358, %rd2337;
	add.s64 	%rd2360, %rd2349, %rd2359;
	add.s64 	%rd2361, %rd2360, %rd2355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1600,%dummy}, %rd2350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1601}, %rd2350;
	}
	shf.r.wrap.b32 	%r1602, %r1601, %r1600, 14;
	shf.r.wrap.b32 	%r1603, %r1600, %r1601, 14;
	mov.b64 	%rd2362, {%r1603, %r1602};
	shf.r.wrap.b32 	%r1604, %r1601, %r1600, 18;
	shf.r.wrap.b32 	%r1605, %r1600, %r1601, 18;
	mov.b64 	%rd2363, {%r1605, %r1604};
	xor.b64  	%rd2364, %rd2363, %rd2362;
	shf.l.wrap.b32 	%r1606, %r1600, %r1601, 23;
	shf.l.wrap.b32 	%r1607, %r1601, %r1600, 23;
	mov.b64 	%rd2365, {%r1607, %r1606};
	xor.b64  	%rd2366, %rd2364, %rd2365;
	xor.b64  	%rd2367, %rd2326, %rd2302;
	and.b64  	%rd2368, %rd2350, %rd2367;
	xor.b64  	%rd2369, %rd2368, %rd2302;
	add.s64 	%rd2370, %rd2278, %rd4283;
	add.s64 	%rd2371, %rd2370, %rd4181;
	add.s64 	%rd2372, %rd2371, %rd2369;
	add.s64 	%rd2373, %rd2372, %rd2366;
	add.s64 	%rd2374, %rd2373, %rd2289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1608,%dummy}, %rd2361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1609}, %rd2361;
	}
	shf.r.wrap.b32 	%r1610, %r1609, %r1608, 28;
	shf.r.wrap.b32 	%r1611, %r1608, %r1609, 28;
	mov.b64 	%rd2375, {%r1611, %r1610};
	shf.l.wrap.b32 	%r1612, %r1608, %r1609, 30;
	shf.l.wrap.b32 	%r1613, %r1609, %r1608, 30;
	mov.b64 	%rd2376, {%r1613, %r1612};
	xor.b64  	%rd2377, %rd2376, %rd2375;
	shf.l.wrap.b32 	%r1614, %r1608, %r1609, 25;
	shf.l.wrap.b32 	%r1615, %r1609, %r1608, 25;
	mov.b64 	%rd2378, {%r1615, %r1614};
	xor.b64  	%rd2379, %rd2377, %rd2378;
	xor.b64  	%rd2380, %rd2361, %rd2313;
	xor.b64  	%rd2381, %rd2361, %rd2337;
	and.b64  	%rd2382, %rd2381, %rd2380;
	xor.b64  	%rd2383, %rd2382, %rd2361;
	add.s64 	%rd2384, %rd2373, %rd2383;
	add.s64 	%rd2385, %rd2384, %rd2379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1616,%dummy}, %rd2374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1617}, %rd2374;
	}
	shf.r.wrap.b32 	%r1618, %r1617, %r1616, 14;
	shf.r.wrap.b32 	%r1619, %r1616, %r1617, 14;
	mov.b64 	%rd2386, {%r1619, %r1618};
	shf.r.wrap.b32 	%r1620, %r1617, %r1616, 18;
	shf.r.wrap.b32 	%r1621, %r1616, %r1617, 18;
	mov.b64 	%rd2387, {%r1621, %r1620};
	xor.b64  	%rd2388, %rd2387, %rd2386;
	shf.l.wrap.b32 	%r1622, %r1616, %r1617, 23;
	shf.l.wrap.b32 	%r1623, %r1617, %r1616, 23;
	mov.b64 	%rd2389, {%r1623, %r1622};
	xor.b64  	%rd2390, %rd2388, %rd2389;
	xor.b64  	%rd2391, %rd2350, %rd2326;
	and.b64  	%rd2392, %rd2374, %rd2391;
	xor.b64  	%rd2393, %rd2392, %rd2326;
	add.s64 	%rd2394, %rd2302, %rd4284;
	add.s64 	%rd2395, %rd2394, %rd4182;
	add.s64 	%rd2396, %rd2395, %rd2393;
	add.s64 	%rd2397, %rd2396, %rd2390;
	add.s64 	%rd2398, %rd2397, %rd2313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1624,%dummy}, %rd2385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1625}, %rd2385;
	}
	shf.r.wrap.b32 	%r1626, %r1625, %r1624, 28;
	shf.r.wrap.b32 	%r1627, %r1624, %r1625, 28;
	mov.b64 	%rd2399, {%r1627, %r1626};
	shf.l.wrap.b32 	%r1628, %r1624, %r1625, 30;
	shf.l.wrap.b32 	%r1629, %r1625, %r1624, 30;
	mov.b64 	%rd2400, {%r1629, %r1628};
	xor.b64  	%rd2401, %rd2400, %rd2399;
	shf.l.wrap.b32 	%r1630, %r1624, %r1625, 25;
	shf.l.wrap.b32 	%r1631, %r1625, %r1624, 25;
	mov.b64 	%rd2402, {%r1631, %r1630};
	xor.b64  	%rd2403, %rd2401, %rd2402;
	xor.b64  	%rd2404, %rd2385, %rd2337;
	xor.b64  	%rd2405, %rd2385, %rd2361;
	and.b64  	%rd2406, %rd2405, %rd2404;
	xor.b64  	%rd2407, %rd2406, %rd2385;
	add.s64 	%rd2408, %rd2397, %rd2407;
	add.s64 	%rd2409, %rd2408, %rd2403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1632,%dummy}, %rd2398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1633}, %rd2398;
	}
	shf.r.wrap.b32 	%r1634, %r1633, %r1632, 14;
	shf.r.wrap.b32 	%r1635, %r1632, %r1633, 14;
	mov.b64 	%rd2410, {%r1635, %r1634};
	shf.r.wrap.b32 	%r1636, %r1633, %r1632, 18;
	shf.r.wrap.b32 	%r1637, %r1632, %r1633, 18;
	mov.b64 	%rd2411, {%r1637, %r1636};
	xor.b64  	%rd2412, %rd2411, %rd2410;
	shf.l.wrap.b32 	%r1638, %r1632, %r1633, 23;
	shf.l.wrap.b32 	%r1639, %r1633, %r1632, 23;
	mov.b64 	%rd2413, {%r1639, %r1638};
	xor.b64  	%rd2414, %rd2412, %rd2413;
	xor.b64  	%rd2415, %rd2374, %rd2350;
	and.b64  	%rd2416, %rd2398, %rd2415;
	xor.b64  	%rd2417, %rd2416, %rd2350;
	add.s64 	%rd2418, %rd2326, %rd4285;
	add.s64 	%rd2419, %rd2418, %rd4183;
	add.s64 	%rd2420, %rd2419, %rd2417;
	add.s64 	%rd2421, %rd2420, %rd2414;
	add.s64 	%rd2422, %rd2421, %rd2337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1640,%dummy}, %rd2409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1641}, %rd2409;
	}
	shf.r.wrap.b32 	%r1642, %r1641, %r1640, 28;
	shf.r.wrap.b32 	%r1643, %r1640, %r1641, 28;
	mov.b64 	%rd2423, {%r1643, %r1642};
	shf.l.wrap.b32 	%r1644, %r1640, %r1641, 30;
	shf.l.wrap.b32 	%r1645, %r1641, %r1640, 30;
	mov.b64 	%rd2424, {%r1645, %r1644};
	xor.b64  	%rd2425, %rd2424, %rd2423;
	shf.l.wrap.b32 	%r1646, %r1640, %r1641, 25;
	shf.l.wrap.b32 	%r1647, %r1641, %r1640, 25;
	mov.b64 	%rd2426, {%r1647, %r1646};
	xor.b64  	%rd2427, %rd2425, %rd2426;
	xor.b64  	%rd2428, %rd2409, %rd2361;
	xor.b64  	%rd2429, %rd2409, %rd2385;
	and.b64  	%rd2430, %rd2429, %rd2428;
	xor.b64  	%rd2431, %rd2430, %rd2409;
	add.s64 	%rd2432, %rd2421, %rd2431;
	add.s64 	%rd2433, %rd2432, %rd2427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1648,%dummy}, %rd2422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd2422;
	}
	shf.r.wrap.b32 	%r1650, %r1649, %r1648, 14;
	shf.r.wrap.b32 	%r1651, %r1648, %r1649, 14;
	mov.b64 	%rd2434, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1649, %r1648, 18;
	shf.r.wrap.b32 	%r1653, %r1648, %r1649, 18;
	mov.b64 	%rd2435, {%r1653, %r1652};
	xor.b64  	%rd2436, %rd2435, %rd2434;
	shf.l.wrap.b32 	%r1654, %r1648, %r1649, 23;
	shf.l.wrap.b32 	%r1655, %r1649, %r1648, 23;
	mov.b64 	%rd2437, {%r1655, %r1654};
	xor.b64  	%rd2438, %rd2436, %rd2437;
	xor.b64  	%rd2439, %rd2398, %rd2374;
	and.b64  	%rd2440, %rd2422, %rd2439;
	xor.b64  	%rd2441, %rd2440, %rd2374;
	add.s64 	%rd2442, %rd2350, %rd4286;
	add.s64 	%rd2443, %rd2442, %rd4184;
	add.s64 	%rd2444, %rd2443, %rd2441;
	add.s64 	%rd2445, %rd2444, %rd2438;
	add.s64 	%rd2446, %rd2445, %rd2361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd2433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd2433;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 28;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 28;
	mov.b64 	%rd2447, {%r1659, %r1658};
	shf.l.wrap.b32 	%r1660, %r1656, %r1657, 30;
	shf.l.wrap.b32 	%r1661, %r1657, %r1656, 30;
	mov.b64 	%rd2448, {%r1661, %r1660};
	xor.b64  	%rd2449, %rd2448, %rd2447;
	shf.l.wrap.b32 	%r1662, %r1656, %r1657, 25;
	shf.l.wrap.b32 	%r1663, %r1657, %r1656, 25;
	mov.b64 	%rd2450, {%r1663, %r1662};
	xor.b64  	%rd2451, %rd2449, %rd2450;
	xor.b64  	%rd2452, %rd2433, %rd2385;
	xor.b64  	%rd2453, %rd2433, %rd2409;
	and.b64  	%rd2454, %rd2453, %rd2452;
	xor.b64  	%rd2455, %rd2454, %rd2433;
	add.s64 	%rd2456, %rd2445, %rd2455;
	add.s64 	%rd2457, %rd2456, %rd2451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd2446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd2446;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 14;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 14;
	mov.b64 	%rd2458, {%r1667, %r1666};
	shf.r.wrap.b32 	%r1668, %r1665, %r1664, 18;
	shf.r.wrap.b32 	%r1669, %r1664, %r1665, 18;
	mov.b64 	%rd2459, {%r1669, %r1668};
	xor.b64  	%rd2460, %rd2459, %rd2458;
	shf.l.wrap.b32 	%r1670, %r1664, %r1665, 23;
	shf.l.wrap.b32 	%r1671, %r1665, %r1664, 23;
	mov.b64 	%rd2461, {%r1671, %r1670};
	xor.b64  	%rd2462, %rd2460, %rd2461;
	xor.b64  	%rd2463, %rd2422, %rd2398;
	and.b64  	%rd2464, %rd2446, %rd2463;
	xor.b64  	%rd2465, %rd2464, %rd2398;
	add.s64 	%rd2466, %rd2374, %rd4287;
	add.s64 	%rd2467, %rd2466, %rd4195;
	add.s64 	%rd2468, %rd2467, %rd2465;
	add.s64 	%rd2469, %rd2468, %rd2462;
	add.s64 	%rd2470, %rd2469, %rd2385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1672,%dummy}, %rd2457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1673}, %rd2457;
	}
	shf.r.wrap.b32 	%r1674, %r1673, %r1672, 28;
	shf.r.wrap.b32 	%r1675, %r1672, %r1673, 28;
	mov.b64 	%rd2471, {%r1675, %r1674};
	shf.l.wrap.b32 	%r1676, %r1672, %r1673, 30;
	shf.l.wrap.b32 	%r1677, %r1673, %r1672, 30;
	mov.b64 	%rd2472, {%r1677, %r1676};
	xor.b64  	%rd2473, %rd2472, %rd2471;
	shf.l.wrap.b32 	%r1678, %r1672, %r1673, 25;
	shf.l.wrap.b32 	%r1679, %r1673, %r1672, 25;
	mov.b64 	%rd2474, {%r1679, %r1678};
	xor.b64  	%rd2475, %rd2473, %rd2474;
	xor.b64  	%rd2476, %rd2457, %rd2409;
	xor.b64  	%rd2477, %rd2457, %rd2433;
	and.b64  	%rd2478, %rd2477, %rd2476;
	xor.b64  	%rd2479, %rd2478, %rd2457;
	add.s64 	%rd2480, %rd2469, %rd2479;
	add.s64 	%rd2481, %rd2480, %rd2475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1680,%dummy}, %rd2470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1681}, %rd2470;
	}
	shf.r.wrap.b32 	%r1682, %r1681, %r1680, 14;
	shf.r.wrap.b32 	%r1683, %r1680, %r1681, 14;
	mov.b64 	%rd2482, {%r1683, %r1682};
	shf.r.wrap.b32 	%r1684, %r1681, %r1680, 18;
	shf.r.wrap.b32 	%r1685, %r1680, %r1681, 18;
	mov.b64 	%rd2483, {%r1685, %r1684};
	xor.b64  	%rd2484, %rd2483, %rd2482;
	shf.l.wrap.b32 	%r1686, %r1680, %r1681, 23;
	shf.l.wrap.b32 	%r1687, %r1681, %r1680, 23;
	mov.b64 	%rd2485, {%r1687, %r1686};
	xor.b64  	%rd2486, %rd2484, %rd2485;
	xor.b64  	%rd2487, %rd2446, %rd2422;
	and.b64  	%rd2488, %rd2470, %rd2487;
	xor.b64  	%rd2489, %rd2488, %rd2422;
	add.s64 	%rd2490, %rd2398, %rd4288;
	add.s64 	%rd2491, %rd2490, %rd4196;
	add.s64 	%rd2492, %rd2491, %rd2489;
	add.s64 	%rd2493, %rd2492, %rd2486;
	add.s64 	%rd2494, %rd2493, %rd2409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1688,%dummy}, %rd2481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1689}, %rd2481;
	}
	shf.r.wrap.b32 	%r1690, %r1689, %r1688, 28;
	shf.r.wrap.b32 	%r1691, %r1688, %r1689, 28;
	mov.b64 	%rd2495, {%r1691, %r1690};
	shf.l.wrap.b32 	%r1692, %r1688, %r1689, 30;
	shf.l.wrap.b32 	%r1693, %r1689, %r1688, 30;
	mov.b64 	%rd2496, {%r1693, %r1692};
	xor.b64  	%rd2497, %rd2496, %rd2495;
	shf.l.wrap.b32 	%r1694, %r1688, %r1689, 25;
	shf.l.wrap.b32 	%r1695, %r1689, %r1688, 25;
	mov.b64 	%rd2498, {%r1695, %r1694};
	xor.b64  	%rd2499, %rd2497, %rd2498;
	xor.b64  	%rd2500, %rd2481, %rd2433;
	xor.b64  	%rd2501, %rd2481, %rd2457;
	and.b64  	%rd2502, %rd2501, %rd2500;
	xor.b64  	%rd2503, %rd2502, %rd2481;
	add.s64 	%rd2504, %rd2493, %rd2503;
	add.s64 	%rd2505, %rd2504, %rd2499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1696,%dummy}, %rd2494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1697}, %rd2494;
	}
	shf.r.wrap.b32 	%r1698, %r1697, %r1696, 14;
	shf.r.wrap.b32 	%r1699, %r1696, %r1697, 14;
	mov.b64 	%rd2506, {%r1699, %r1698};
	shf.r.wrap.b32 	%r1700, %r1697, %r1696, 18;
	shf.r.wrap.b32 	%r1701, %r1696, %r1697, 18;
	mov.b64 	%rd2507, {%r1701, %r1700};
	xor.b64  	%rd2508, %rd2507, %rd2506;
	shf.l.wrap.b32 	%r1702, %r1696, %r1697, 23;
	shf.l.wrap.b32 	%r1703, %r1697, %r1696, 23;
	mov.b64 	%rd2509, {%r1703, %r1702};
	xor.b64  	%rd2510, %rd2508, %rd2509;
	xor.b64  	%rd2511, %rd2470, %rd2446;
	and.b64  	%rd2512, %rd2494, %rd2511;
	xor.b64  	%rd2513, %rd2512, %rd2446;
	add.s64 	%rd2514, %rd2422, %rd4289;
	add.s64 	%rd2515, %rd2514, %rd4197;
	add.s64 	%rd2516, %rd2515, %rd2513;
	add.s64 	%rd2517, %rd2516, %rd2510;
	add.s64 	%rd2518, %rd2517, %rd2433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd2505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd2505;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 28;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 28;
	mov.b64 	%rd2519, {%r1707, %r1706};
	shf.l.wrap.b32 	%r1708, %r1704, %r1705, 30;
	shf.l.wrap.b32 	%r1709, %r1705, %r1704, 30;
	mov.b64 	%rd2520, {%r1709, %r1708};
	xor.b64  	%rd2521, %rd2520, %rd2519;
	shf.l.wrap.b32 	%r1710, %r1704, %r1705, 25;
	shf.l.wrap.b32 	%r1711, %r1705, %r1704, 25;
	mov.b64 	%rd2522, {%r1711, %r1710};
	xor.b64  	%rd2523, %rd2521, %rd2522;
	xor.b64  	%rd2524, %rd2505, %rd2457;
	xor.b64  	%rd2525, %rd2505, %rd2481;
	and.b64  	%rd2526, %rd2525, %rd2524;
	xor.b64  	%rd2527, %rd2526, %rd2505;
	add.s64 	%rd2528, %rd2517, %rd2527;
	add.s64 	%rd2529, %rd2528, %rd2523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1712,%dummy}, %rd2518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1713}, %rd2518;
	}
	shf.r.wrap.b32 	%r1714, %r1713, %r1712, 14;
	shf.r.wrap.b32 	%r1715, %r1712, %r1713, 14;
	mov.b64 	%rd2530, {%r1715, %r1714};
	shf.r.wrap.b32 	%r1716, %r1713, %r1712, 18;
	shf.r.wrap.b32 	%r1717, %r1712, %r1713, 18;
	mov.b64 	%rd2531, {%r1717, %r1716};
	xor.b64  	%rd2532, %rd2531, %rd2530;
	shf.l.wrap.b32 	%r1718, %r1712, %r1713, 23;
	shf.l.wrap.b32 	%r1719, %r1713, %r1712, 23;
	mov.b64 	%rd2533, {%r1719, %r1718};
	xor.b64  	%rd2534, %rd2532, %rd2533;
	xor.b64  	%rd2535, %rd2494, %rd2470;
	and.b64  	%rd2536, %rd2518, %rd2535;
	xor.b64  	%rd2537, %rd2536, %rd2470;
	add.s64 	%rd2538, %rd2446, %rd4290;
	add.s64 	%rd2539, %rd2538, %rd4208;
	add.s64 	%rd2540, %rd2539, %rd2537;
	add.s64 	%rd2541, %rd2540, %rd2534;
	add.s64 	%rd4277, %rd2541, %rd2457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1720,%dummy}, %rd2529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1721}, %rd2529;
	}
	shf.r.wrap.b32 	%r1722, %r1721, %r1720, 28;
	shf.r.wrap.b32 	%r1723, %r1720, %r1721, 28;
	mov.b64 	%rd2542, {%r1723, %r1722};
	shf.l.wrap.b32 	%r1724, %r1720, %r1721, 30;
	shf.l.wrap.b32 	%r1725, %r1721, %r1720, 30;
	mov.b64 	%rd2543, {%r1725, %r1724};
	xor.b64  	%rd2544, %rd2543, %rd2542;
	shf.l.wrap.b32 	%r1726, %r1720, %r1721, 25;
	shf.l.wrap.b32 	%r1727, %r1721, %r1720, 25;
	mov.b64 	%rd2545, {%r1727, %r1726};
	xor.b64  	%rd2546, %rd2544, %rd2545;
	xor.b64  	%rd2547, %rd2529, %rd2481;
	xor.b64  	%rd2548, %rd2529, %rd2505;
	and.b64  	%rd2549, %rd2548, %rd2547;
	xor.b64  	%rd2550, %rd2549, %rd2529;
	add.s64 	%rd2551, %rd2541, %rd2550;
	add.s64 	%rd4273, %rd2551, %rd2546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1728,%dummy}, %rd4277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd4277;
	}
	shf.r.wrap.b32 	%r1730, %r1729, %r1728, 14;
	shf.r.wrap.b32 	%r1731, %r1728, %r1729, 14;
	mov.b64 	%rd2552, {%r1731, %r1730};
	shf.r.wrap.b32 	%r1732, %r1729, %r1728, 18;
	shf.r.wrap.b32 	%r1733, %r1728, %r1729, 18;
	mov.b64 	%rd2553, {%r1733, %r1732};
	xor.b64  	%rd2554, %rd2553, %rd2552;
	shf.l.wrap.b32 	%r1734, %r1728, %r1729, 23;
	shf.l.wrap.b32 	%r1735, %r1729, %r1728, 23;
	mov.b64 	%rd2555, {%r1735, %r1734};
	xor.b64  	%rd2556, %rd2554, %rd2555;
	xor.b64  	%rd2557, %rd2518, %rd2494;
	and.b64  	%rd2558, %rd4277, %rd2557;
	xor.b64  	%rd2559, %rd2558, %rd2494;
	add.s64 	%rd2560, %rd2470, %rd4291;
	add.s64 	%rd2561, %rd2560, %rd4209;
	add.s64 	%rd2562, %rd2561, %rd2559;
	add.s64 	%rd2563, %rd2562, %rd2556;
	add.s64 	%rd4276, %rd2563, %rd2481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1736,%dummy}, %rd4273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1737}, %rd4273;
	}
	shf.r.wrap.b32 	%r1738, %r1737, %r1736, 28;
	shf.r.wrap.b32 	%r1739, %r1736, %r1737, 28;
	mov.b64 	%rd2564, {%r1739, %r1738};
	shf.l.wrap.b32 	%r1740, %r1736, %r1737, 30;
	shf.l.wrap.b32 	%r1741, %r1737, %r1736, 30;
	mov.b64 	%rd2565, {%r1741, %r1740};
	xor.b64  	%rd2566, %rd2565, %rd2564;
	shf.l.wrap.b32 	%r1742, %r1736, %r1737, 25;
	shf.l.wrap.b32 	%r1743, %r1737, %r1736, 25;
	mov.b64 	%rd2567, {%r1743, %r1742};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	xor.b64  	%rd2569, %rd4273, %rd2505;
	xor.b64  	%rd2570, %rd4273, %rd2529;
	and.b64  	%rd2571, %rd2570, %rd2569;
	xor.b64  	%rd2572, %rd2571, %rd4273;
	add.s64 	%rd2573, %rd2563, %rd2572;
	add.s64 	%rd4272, %rd2573, %rd2568;
	add.s64 	%rd2574, %rd4212, %rd2494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1744,%dummy}, %rd4276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1745}, %rd4276;
	}
	shf.r.wrap.b32 	%r1746, %r1745, %r1744, 14;
	shf.r.wrap.b32 	%r1747, %r1744, %r1745, 14;
	mov.b64 	%rd2575, {%r1747, %r1746};
	shf.r.wrap.b32 	%r1748, %r1745, %r1744, 18;
	shf.r.wrap.b32 	%r1749, %r1744, %r1745, 18;
	mov.b64 	%rd2576, {%r1749, %r1748};
	xor.b64  	%rd2577, %rd2576, %rd2575;
	shf.l.wrap.b32 	%r1750, %r1744, %r1745, 23;
	shf.l.wrap.b32 	%r1751, %r1745, %r1744, 23;
	mov.b64 	%rd2578, {%r1751, %r1750};
	xor.b64  	%rd2579, %rd2577, %rd2578;
	xor.b64  	%rd2580, %rd4277, %rd2518;
	and.b64  	%rd2581, %rd4276, %rd2580;
	xor.b64  	%rd2582, %rd2581, %rd2518;
	add.s64 	%rd2583, %rd2574, %rd2582;
	add.s64 	%rd2584, %rd2583, %rd2579;
	add.s64 	%rd4275, %rd2584, %rd2505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1752,%dummy}, %rd4272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd4272;
	}
	shf.r.wrap.b32 	%r1754, %r1753, %r1752, 28;
	shf.r.wrap.b32 	%r1755, %r1752, %r1753, 28;
	mov.b64 	%rd2585, {%r1755, %r1754};
	shf.l.wrap.b32 	%r1756, %r1752, %r1753, 30;
	shf.l.wrap.b32 	%r1757, %r1753, %r1752, 30;
	mov.b64 	%rd2586, {%r1757, %r1756};
	xor.b64  	%rd2587, %rd2586, %rd2585;
	shf.l.wrap.b32 	%r1758, %r1752, %r1753, 25;
	shf.l.wrap.b32 	%r1759, %r1753, %r1752, 25;
	mov.b64 	%rd2588, {%r1759, %r1758};
	xor.b64  	%rd2589, %rd2587, %rd2588;
	xor.b64  	%rd2590, %rd4272, %rd2529;
	xor.b64  	%rd2591, %rd4272, %rd4273;
	and.b64  	%rd2592, %rd2591, %rd2590;
	xor.b64  	%rd2593, %rd2592, %rd4272;
	add.s64 	%rd2594, %rd2584, %rd2593;
	add.s64 	%rd4271, %rd2594, %rd2589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1760,%dummy}, %rd4275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd4275;
	}
	shf.r.wrap.b32 	%r1762, %r1761, %r1760, 14;
	shf.r.wrap.b32 	%r1763, %r1760, %r1761, 14;
	mov.b64 	%rd2595, {%r1763, %r1762};
	shf.r.wrap.b32 	%r1764, %r1761, %r1760, 18;
	shf.r.wrap.b32 	%r1765, %r1760, %r1761, 18;
	mov.b64 	%rd2596, {%r1765, %r1764};
	xor.b64  	%rd2597, %rd2596, %rd2595;
	shf.l.wrap.b32 	%r1766, %r1760, %r1761, 23;
	shf.l.wrap.b32 	%r1767, %r1761, %r1760, 23;
	mov.b64 	%rd2598, {%r1767, %r1766};
	xor.b64  	%rd2599, %rd2597, %rd2598;
	xor.b64  	%rd2600, %rd4276, %rd4277;
	and.b64  	%rd2601, %rd4275, %rd2600;
	xor.b64  	%rd2602, %rd2601, %rd4277;
	add.s64 	%rd2603, %rd2518, %rd4269;
	add.s64 	%rd2604, %rd2603, %rd4216;
	add.s64 	%rd2605, %rd2604, %rd2602;
	add.s64 	%rd2606, %rd2605, %rd2599;
	add.s64 	%rd4274, %rd2606, %rd2529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd4271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd4271;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 28;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 28;
	mov.b64 	%rd2607, {%r1771, %r1770};
	shf.l.wrap.b32 	%r1772, %r1768, %r1769, 30;
	shf.l.wrap.b32 	%r1773, %r1769, %r1768, 30;
	mov.b64 	%rd2608, {%r1773, %r1772};
	xor.b64  	%rd2609, %rd2608, %rd2607;
	shf.l.wrap.b32 	%r1774, %r1768, %r1769, 25;
	shf.l.wrap.b32 	%r1775, %r1769, %r1768, 25;
	mov.b64 	%rd2610, {%r1775, %r1774};
	xor.b64  	%rd2611, %rd2609, %rd2610;
	xor.b64  	%rd2612, %rd4271, %rd4273;
	xor.b64  	%rd2613, %rd4271, %rd4272;
	and.b64  	%rd2614, %rd2613, %rd2612;
	xor.b64  	%rd2615, %rd2614, %rd4271;
	add.s64 	%rd2616, %rd2606, %rd2615;
	add.s64 	%rd4270, %rd2616, %rd2611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1776,%dummy}, %rd187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd187;
	}
	shf.r.wrap.b32 	%r1778, %r1777, %r1776, 14;
	shf.r.wrap.b32 	%r1779, %r1776, %r1777, 14;
	mov.b64 	%rd2617, {%r1779, %r1778};
	shf.r.wrap.b32 	%r1780, %r1777, %r1776, 18;
	shf.r.wrap.b32 	%r1781, %r1776, %r1777, 18;
	mov.b64 	%rd2618, {%r1781, %r1780};
	xor.b64  	%rd2619, %rd2618, %rd2617;
	shf.l.wrap.b32 	%r1782, %r1776, %r1777, 23;
	shf.l.wrap.b32 	%r1783, %r1777, %r1776, 23;
	mov.b64 	%rd2620, {%r1783, %r1782};
	xor.b64  	%rd199, %rd2619, %rd2620;
	xor.b64  	%rd2621, %rd188, %rd189;
	and.b64  	%rd2622, %rd2621, %rd187;
	xor.b64  	%rd2623, %rd2622, %rd189;
	add.s64 	%rd200, %rd2623, %rd190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1784,%dummy}, %rd183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1785}, %rd183;
	}
	shf.r.wrap.b32 	%r1786, %r1785, %r1784, 28;
	shf.r.wrap.b32 	%r1787, %r1784, %r1785, 28;
	mov.b64 	%rd2624, {%r1787, %r1786};
	shf.l.wrap.b32 	%r1788, %r1784, %r1785, 30;
	shf.l.wrap.b32 	%r1789, %r1785, %r1784, 30;
	mov.b64 	%rd2625, {%r1789, %r1788};
	xor.b64  	%rd2626, %rd2625, %rd2624;
	shf.l.wrap.b32 	%r1790, %r1784, %r1785, 25;
	shf.l.wrap.b32 	%r1791, %r1785, %r1784, 25;
	mov.b64 	%rd2627, {%r1791, %r1790};
	xor.b64  	%rd201, %rd2626, %rd2627;
	xor.b64  	%rd2628, %rd183, %rd185;
	xor.b64  	%rd2629, %rd183, %rd184;
	and.b64  	%rd2630, %rd2629, %rd2628;
	xor.b64  	%rd202, %rd2630, %rd183;
	xor.b64  	%rd203, %rd187, %rd188;
	mov.u64 	%rd4292, 0;
	mov.u32 	%r2919, 16;
	mov.u64 	%rd4268, k_sha512;

BB1_6:
	shr.u64 	%rd2631, %rd4292, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1792,%dummy}, %rd4292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1793}, %rd4292;
	}
	shf.r.wrap.b32 	%r1794, %r1793, %r1792, 19;
	shf.r.wrap.b32 	%r1795, %r1792, %r1793, 19;
	mov.b64 	%rd2632, {%r1795, %r1794};
	xor.b64  	%rd2633, %rd2632, %rd2631;
	shf.l.wrap.b32 	%r1796, %r1792, %r1793, 3;
	shf.l.wrap.b32 	%r1797, %r1793, %r1792, 3;
	mov.b64 	%rd2634, {%r1797, %r1796};
	xor.b64  	%rd2635, %rd2633, %rd2634;
	shr.u64 	%rd2636, %rd4279, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1798,%dummy}, %rd4279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1799}, %rd4279;
	}
	shf.r.wrap.b32 	%r1800, %r1799, %r1798, 1;
	shf.r.wrap.b32 	%r1801, %r1798, %r1799, 1;
	mov.b64 	%rd2637, {%r1801, %r1800};
	xor.b64  	%rd2638, %rd2637, %rd2636;
	shf.r.wrap.b32 	%r1802, %r1799, %r1798, 8;
	shf.r.wrap.b32 	%r1803, %r1798, %r1799, 8;
	mov.b64 	%rd2639, {%r1803, %r1802};
	xor.b64  	%rd2640, %rd2638, %rd2639;
	add.s64 	%rd2641, %rd4278, %rd4287;
	add.s64 	%rd2642, %rd2641, %rd2635;
	add.s64 	%rd4278, %rd2642, %rd2640;
	shr.u64 	%rd2643, %rd4269, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1804,%dummy}, %rd4269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1805}, %rd4269;
	}
	shf.r.wrap.b32 	%r1806, %r1805, %r1804, 19;
	shf.r.wrap.b32 	%r1807, %r1804, %r1805, 19;
	mov.b64 	%rd2644, {%r1807, %r1806};
	xor.b64  	%rd2645, %rd2644, %rd2643;
	shf.l.wrap.b32 	%r1808, %r1804, %r1805, 3;
	shf.l.wrap.b32 	%r1809, %r1805, %r1804, 3;
	mov.b64 	%rd2646, {%r1809, %r1808};
	xor.b64  	%rd2647, %rd2645, %rd2646;
	shr.u64 	%rd2648, %rd4280, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1810,%dummy}, %rd4280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1811}, %rd4280;
	}
	shf.r.wrap.b32 	%r1812, %r1811, %r1810, 1;
	shf.r.wrap.b32 	%r1813, %r1810, %r1811, 1;
	mov.b64 	%rd2649, {%r1813, %r1812};
	xor.b64  	%rd2650, %rd2649, %rd2648;
	shf.r.wrap.b32 	%r1814, %r1811, %r1810, 8;
	shf.r.wrap.b32 	%r1815, %r1810, %r1811, 8;
	mov.b64 	%rd2651, {%r1815, %r1814};
	xor.b64  	%rd2652, %rd2650, %rd2651;
	add.s64 	%rd2653, %rd4279, %rd4288;
	add.s64 	%rd2654, %rd2653, %rd2647;
	add.s64 	%rd4279, %rd2654, %rd2652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1816,%dummy}, %rd4278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1817}, %rd4278;
	}
	shf.r.wrap.b32 	%r1818, %r1817, %r1816, 19;
	shf.r.wrap.b32 	%r1819, %r1816, %r1817, 19;
	mov.b64 	%rd2655, {%r1819, %r1818};
	shf.l.wrap.b32 	%r1820, %r1816, %r1817, 3;
	shf.l.wrap.b32 	%r1821, %r1817, %r1816, 3;
	mov.b64 	%rd2656, {%r1821, %r1820};
	shr.u64 	%rd2657, %rd4278, 6;
	xor.b64  	%rd2658, %rd2655, %rd2657;
	xor.b64  	%rd2659, %rd2658, %rd2656;
	shr.u64 	%rd2660, %rd4281, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd4281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1823}, %rd4281;
	}
	shf.r.wrap.b32 	%r1824, %r1823, %r1822, 1;
	shf.r.wrap.b32 	%r1825, %r1822, %r1823, 1;
	mov.b64 	%rd2661, {%r1825, %r1824};
	xor.b64  	%rd2662, %rd2661, %rd2660;
	shf.r.wrap.b32 	%r1826, %r1823, %r1822, 8;
	shf.r.wrap.b32 	%r1827, %r1822, %r1823, 8;
	mov.b64 	%rd2663, {%r1827, %r1826};
	xor.b64  	%rd2664, %rd2662, %rd2663;
	add.s64 	%rd2665, %rd4280, %rd4289;
	add.s64 	%rd2666, %rd2665, %rd2659;
	add.s64 	%rd4280, %rd2666, %rd2664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1828,%dummy}, %rd4279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1829}, %rd4279;
	}
	shf.r.wrap.b32 	%r1830, %r1829, %r1828, 19;
	shf.r.wrap.b32 	%r1831, %r1828, %r1829, 19;
	mov.b64 	%rd2667, {%r1831, %r1830};
	shf.l.wrap.b32 	%r1832, %r1828, %r1829, 3;
	shf.l.wrap.b32 	%r1833, %r1829, %r1828, 3;
	mov.b64 	%rd2668, {%r1833, %r1832};
	shr.u64 	%rd2669, %rd4279, 6;
	xor.b64  	%rd2670, %rd2667, %rd2669;
	xor.b64  	%rd2671, %rd2670, %rd2668;
	shr.u64 	%rd2672, %rd4282, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1834,%dummy}, %rd4282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1835}, %rd4282;
	}
	shf.r.wrap.b32 	%r1836, %r1835, %r1834, 1;
	shf.r.wrap.b32 	%r1837, %r1834, %r1835, 1;
	mov.b64 	%rd2673, {%r1837, %r1836};
	xor.b64  	%rd2674, %rd2673, %rd2672;
	shf.r.wrap.b32 	%r1838, %r1835, %r1834, 8;
	shf.r.wrap.b32 	%r1839, %r1834, %r1835, 8;
	mov.b64 	%rd2675, {%r1839, %r1838};
	xor.b64  	%rd2676, %rd2674, %rd2675;
	add.s64 	%rd2677, %rd4281, %rd4290;
	add.s64 	%rd2678, %rd2677, %rd2671;
	add.s64 	%rd4281, %rd2678, %rd2676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1840,%dummy}, %rd4280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1841}, %rd4280;
	}
	shf.r.wrap.b32 	%r1842, %r1841, %r1840, 19;
	shf.r.wrap.b32 	%r1843, %r1840, %r1841, 19;
	mov.b64 	%rd2679, {%r1843, %r1842};
	shf.l.wrap.b32 	%r1844, %r1840, %r1841, 3;
	shf.l.wrap.b32 	%r1845, %r1841, %r1840, 3;
	mov.b64 	%rd2680, {%r1845, %r1844};
	shr.u64 	%rd2681, %rd4280, 6;
	xor.b64  	%rd2682, %rd2679, %rd2681;
	xor.b64  	%rd2683, %rd2682, %rd2680;
	shr.u64 	%rd2684, %rd4283, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd4283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd4283;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 1;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 1;
	mov.b64 	%rd2685, {%r1849, %r1848};
	xor.b64  	%rd2686, %rd2685, %rd2684;
	shf.r.wrap.b32 	%r1850, %r1847, %r1846, 8;
	shf.r.wrap.b32 	%r1851, %r1846, %r1847, 8;
	mov.b64 	%rd2687, {%r1851, %r1850};
	xor.b64  	%rd2688, %rd2686, %rd2687;
	add.s64 	%rd2689, %rd4282, %rd4291;
	add.s64 	%rd2690, %rd2689, %rd2683;
	add.s64 	%rd4282, %rd2690, %rd2688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1852,%dummy}, %rd4281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1853}, %rd4281;
	}
	shf.r.wrap.b32 	%r1854, %r1853, %r1852, 19;
	shf.r.wrap.b32 	%r1855, %r1852, %r1853, 19;
	mov.b64 	%rd2691, {%r1855, %r1854};
	shf.l.wrap.b32 	%r1856, %r1852, %r1853, 3;
	shf.l.wrap.b32 	%r1857, %r1853, %r1852, 3;
	mov.b64 	%rd2692, {%r1857, %r1856};
	shr.u64 	%rd2693, %rd4281, 6;
	xor.b64  	%rd2694, %rd2691, %rd2693;
	xor.b64  	%rd2695, %rd2694, %rd2692;
	shr.u64 	%rd2696, %rd4284, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1858,%dummy}, %rd4284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1859}, %rd4284;
	}
	shf.r.wrap.b32 	%r1860, %r1859, %r1858, 1;
	shf.r.wrap.b32 	%r1861, %r1858, %r1859, 1;
	mov.b64 	%rd2697, {%r1861, %r1860};
	xor.b64  	%rd2698, %rd2697, %rd2696;
	shf.r.wrap.b32 	%r1862, %r1859, %r1858, 8;
	shf.r.wrap.b32 	%r1863, %r1858, %r1859, 8;
	mov.b64 	%rd2699, {%r1863, %r1862};
	xor.b64  	%rd2700, %rd2698, %rd2699;
	add.s64 	%rd2701, %rd4283, %rd4292;
	add.s64 	%rd2702, %rd2701, %rd2695;
	add.s64 	%rd4283, %rd2702, %rd2700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1864,%dummy}, %rd4282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1865}, %rd4282;
	}
	shf.r.wrap.b32 	%r1866, %r1865, %r1864, 19;
	shf.r.wrap.b32 	%r1867, %r1864, %r1865, 19;
	mov.b64 	%rd2703, {%r1867, %r1866};
	shf.l.wrap.b32 	%r1868, %r1864, %r1865, 3;
	shf.l.wrap.b32 	%r1869, %r1865, %r1864, 3;
	mov.b64 	%rd2704, {%r1869, %r1868};
	shr.u64 	%rd2705, %rd4282, 6;
	xor.b64  	%rd2706, %rd2703, %rd2705;
	xor.b64  	%rd2707, %rd2706, %rd2704;
	shr.u64 	%rd2708, %rd4285, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1870,%dummy}, %rd4285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1871}, %rd4285;
	}
	shf.r.wrap.b32 	%r1872, %r1871, %r1870, 1;
	shf.r.wrap.b32 	%r1873, %r1870, %r1871, 1;
	mov.b64 	%rd2709, {%r1873, %r1872};
	xor.b64  	%rd2710, %rd2709, %rd2708;
	shf.r.wrap.b32 	%r1874, %r1871, %r1870, 8;
	shf.r.wrap.b32 	%r1875, %r1870, %r1871, 8;
	mov.b64 	%rd2711, {%r1875, %r1874};
	xor.b64  	%rd2712, %rd2710, %rd2711;
	add.s64 	%rd2713, %rd4269, %rd4284;
	add.s64 	%rd2714, %rd2713, %rd2707;
	add.s64 	%rd4284, %rd2714, %rd2712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1876,%dummy}, %rd4283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1877}, %rd4283;
	}
	shf.r.wrap.b32 	%r1878, %r1877, %r1876, 19;
	shf.r.wrap.b32 	%r1879, %r1876, %r1877, 19;
	mov.b64 	%rd2715, {%r1879, %r1878};
	shf.l.wrap.b32 	%r1880, %r1876, %r1877, 3;
	shf.l.wrap.b32 	%r1881, %r1877, %r1876, 3;
	mov.b64 	%rd2716, {%r1881, %r1880};
	shr.u64 	%rd2717, %rd4283, 6;
	xor.b64  	%rd2718, %rd2715, %rd2717;
	xor.b64  	%rd2719, %rd2718, %rd2716;
	shr.u64 	%rd2720, %rd4286, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1882,%dummy}, %rd4286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1883}, %rd4286;
	}
	shf.r.wrap.b32 	%r1884, %r1883, %r1882, 1;
	shf.r.wrap.b32 	%r1885, %r1882, %r1883, 1;
	mov.b64 	%rd2721, {%r1885, %r1884};
	xor.b64  	%rd2722, %rd2721, %rd2720;
	shf.r.wrap.b32 	%r1886, %r1883, %r1882, 8;
	shf.r.wrap.b32 	%r1887, %r1882, %r1883, 8;
	mov.b64 	%rd2723, {%r1887, %r1886};
	xor.b64  	%rd2724, %rd2722, %rd2723;
	add.s64 	%rd2725, %rd4278, %rd4285;
	add.s64 	%rd2726, %rd2725, %rd2719;
	add.s64 	%rd4285, %rd2726, %rd2724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1888,%dummy}, %rd4284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1889}, %rd4284;
	}
	shf.r.wrap.b32 	%r1890, %r1889, %r1888, 19;
	shf.r.wrap.b32 	%r1891, %r1888, %r1889, 19;
	mov.b64 	%rd2727, {%r1891, %r1890};
	shf.l.wrap.b32 	%r1892, %r1888, %r1889, 3;
	shf.l.wrap.b32 	%r1893, %r1889, %r1888, 3;
	mov.b64 	%rd2728, {%r1893, %r1892};
	shr.u64 	%rd2729, %rd4284, 6;
	xor.b64  	%rd2730, %rd2727, %rd2729;
	xor.b64  	%rd2731, %rd2730, %rd2728;
	shr.u64 	%rd2732, %rd4287, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1894,%dummy}, %rd4287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1895}, %rd4287;
	}
	shf.r.wrap.b32 	%r1896, %r1895, %r1894, 1;
	shf.r.wrap.b32 	%r1897, %r1894, %r1895, 1;
	mov.b64 	%rd2733, {%r1897, %r1896};
	xor.b64  	%rd2734, %rd2733, %rd2732;
	shf.r.wrap.b32 	%r1898, %r1895, %r1894, 8;
	shf.r.wrap.b32 	%r1899, %r1894, %r1895, 8;
	mov.b64 	%rd2735, {%r1899, %r1898};
	xor.b64  	%rd2736, %rd2734, %rd2735;
	add.s64 	%rd2737, %rd4279, %rd4286;
	add.s64 	%rd2738, %rd2737, %rd2731;
	add.s64 	%rd4286, %rd2738, %rd2736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1900,%dummy}, %rd4285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd4285;
	}
	shf.r.wrap.b32 	%r1902, %r1901, %r1900, 19;
	shf.r.wrap.b32 	%r1903, %r1900, %r1901, 19;
	mov.b64 	%rd2739, {%r1903, %r1902};
	shf.l.wrap.b32 	%r1904, %r1900, %r1901, 3;
	shf.l.wrap.b32 	%r1905, %r1901, %r1900, 3;
	mov.b64 	%rd2740, {%r1905, %r1904};
	shr.u64 	%rd2741, %rd4285, 6;
	xor.b64  	%rd2742, %rd2739, %rd2741;
	xor.b64  	%rd2743, %rd2742, %rd2740;
	shr.u64 	%rd2744, %rd4288, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1906,%dummy}, %rd4288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1907}, %rd4288;
	}
	shf.r.wrap.b32 	%r1908, %r1907, %r1906, 1;
	shf.r.wrap.b32 	%r1909, %r1906, %r1907, 1;
	mov.b64 	%rd2745, {%r1909, %r1908};
	xor.b64  	%rd2746, %rd2745, %rd2744;
	shf.r.wrap.b32 	%r1910, %r1907, %r1906, 8;
	shf.r.wrap.b32 	%r1911, %r1906, %r1907, 8;
	mov.b64 	%rd2747, {%r1911, %r1910};
	xor.b64  	%rd2748, %rd2746, %rd2747;
	add.s64 	%rd2749, %rd4280, %rd4287;
	add.s64 	%rd2750, %rd2749, %rd2743;
	add.s64 	%rd4287, %rd2750, %rd2748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1912,%dummy}, %rd4286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1913}, %rd4286;
	}
	shf.r.wrap.b32 	%r1914, %r1913, %r1912, 19;
	shf.r.wrap.b32 	%r1915, %r1912, %r1913, 19;
	mov.b64 	%rd2751, {%r1915, %r1914};
	shf.l.wrap.b32 	%r1916, %r1912, %r1913, 3;
	shf.l.wrap.b32 	%r1917, %r1913, %r1912, 3;
	mov.b64 	%rd2752, {%r1917, %r1916};
	shr.u64 	%rd2753, %rd4286, 6;
	xor.b64  	%rd2754, %rd2751, %rd2753;
	xor.b64  	%rd2755, %rd2754, %rd2752;
	shr.u64 	%rd2756, %rd4289, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1918,%dummy}, %rd4289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1919}, %rd4289;
	}
	shf.r.wrap.b32 	%r1920, %r1919, %r1918, 1;
	shf.r.wrap.b32 	%r1921, %r1918, %r1919, 1;
	mov.b64 	%rd2757, {%r1921, %r1920};
	xor.b64  	%rd2758, %rd2757, %rd2756;
	shf.r.wrap.b32 	%r1922, %r1919, %r1918, 8;
	shf.r.wrap.b32 	%r1923, %r1918, %r1919, 8;
	mov.b64 	%rd2759, {%r1923, %r1922};
	xor.b64  	%rd2760, %rd2758, %rd2759;
	add.s64 	%rd2761, %rd4281, %rd4288;
	add.s64 	%rd2762, %rd2761, %rd2755;
	add.s64 	%rd4288, %rd2762, %rd2760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd4287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd4287;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 19;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 19;
	mov.b64 	%rd2763, {%r1927, %r1926};
	shf.l.wrap.b32 	%r1928, %r1924, %r1925, 3;
	shf.l.wrap.b32 	%r1929, %r1925, %r1924, 3;
	mov.b64 	%rd2764, {%r1929, %r1928};
	shr.u64 	%rd2765, %rd4287, 6;
	xor.b64  	%rd2766, %rd2763, %rd2765;
	xor.b64  	%rd2767, %rd2766, %rd2764;
	shr.u64 	%rd2768, %rd4290, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd4290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1931}, %rd4290;
	}
	shf.r.wrap.b32 	%r1932, %r1931, %r1930, 1;
	shf.r.wrap.b32 	%r1933, %r1930, %r1931, 1;
	mov.b64 	%rd2769, {%r1933, %r1932};
	xor.b64  	%rd2770, %rd2769, %rd2768;
	shf.r.wrap.b32 	%r1934, %r1931, %r1930, 8;
	shf.r.wrap.b32 	%r1935, %r1930, %r1931, 8;
	mov.b64 	%rd2771, {%r1935, %r1934};
	xor.b64  	%rd2772, %rd2770, %rd2771;
	add.s64 	%rd2773, %rd4282, %rd4289;
	add.s64 	%rd2774, %rd2773, %rd2767;
	add.s64 	%rd4289, %rd2774, %rd2772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1936,%dummy}, %rd4288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1937}, %rd4288;
	}
	shf.r.wrap.b32 	%r1938, %r1937, %r1936, 19;
	shf.r.wrap.b32 	%r1939, %r1936, %r1937, 19;
	mov.b64 	%rd2775, {%r1939, %r1938};
	shf.l.wrap.b32 	%r1940, %r1936, %r1937, 3;
	shf.l.wrap.b32 	%r1941, %r1937, %r1936, 3;
	mov.b64 	%rd2776, {%r1941, %r1940};
	shr.u64 	%rd2777, %rd4288, 6;
	xor.b64  	%rd2778, %rd2775, %rd2777;
	xor.b64  	%rd2779, %rd2778, %rd2776;
	shr.u64 	%rd2780, %rd4291, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1942,%dummy}, %rd4291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1943}, %rd4291;
	}
	shf.r.wrap.b32 	%r1944, %r1943, %r1942, 1;
	shf.r.wrap.b32 	%r1945, %r1942, %r1943, 1;
	mov.b64 	%rd2781, {%r1945, %r1944};
	xor.b64  	%rd2782, %rd2781, %rd2780;
	shf.r.wrap.b32 	%r1946, %r1943, %r1942, 8;
	shf.r.wrap.b32 	%r1947, %r1942, %r1943, 8;
	mov.b64 	%rd2783, {%r1947, %r1946};
	xor.b64  	%rd2784, %rd2782, %rd2783;
	add.s64 	%rd2785, %rd4283, %rd4290;
	add.s64 	%rd2786, %rd2785, %rd2779;
	add.s64 	%rd4290, %rd2786, %rd2784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1948,%dummy}, %rd4289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd4289;
	}
	shf.r.wrap.b32 	%r1950, %r1949, %r1948, 19;
	shf.r.wrap.b32 	%r1951, %r1948, %r1949, 19;
	mov.b64 	%rd2787, {%r1951, %r1950};
	shf.l.wrap.b32 	%r1952, %r1948, %r1949, 3;
	shf.l.wrap.b32 	%r1953, %r1949, %r1948, 3;
	mov.b64 	%rd2788, {%r1953, %r1952};
	shr.u64 	%rd2789, %rd4289, 6;
	xor.b64  	%rd2790, %rd2787, %rd2789;
	xor.b64  	%rd2791, %rd2790, %rd2788;
	shr.u64 	%rd2792, %rd4292, 7;
	shf.r.wrap.b32 	%r1954, %r1793, %r1792, 1;
	shf.r.wrap.b32 	%r1955, %r1792, %r1793, 1;
	mov.b64 	%rd2793, {%r1955, %r1954};
	xor.b64  	%rd2794, %rd2793, %rd2792;
	shf.r.wrap.b32 	%r1956, %r1793, %r1792, 8;
	shf.r.wrap.b32 	%r1957, %r1792, %r1793, 8;
	mov.b64 	%rd2795, {%r1957, %r1956};
	xor.b64  	%rd2796, %rd2794, %rd2795;
	add.s64 	%rd2797, %rd4284, %rd4291;
	add.s64 	%rd2798, %rd2797, %rd2791;
	add.s64 	%rd4291, %rd2798, %rd2796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1958,%dummy}, %rd4290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1959}, %rd4290;
	}
	shf.r.wrap.b32 	%r1960, %r1959, %r1958, 19;
	shf.r.wrap.b32 	%r1961, %r1958, %r1959, 19;
	mov.b64 	%rd2799, {%r1961, %r1960};
	shf.l.wrap.b32 	%r1962, %r1958, %r1959, 3;
	shf.l.wrap.b32 	%r1963, %r1959, %r1958, 3;
	mov.b64 	%rd2800, {%r1963, %r1962};
	shr.u64 	%rd2801, %rd4290, 6;
	xor.b64  	%rd2802, %rd2799, %rd2801;
	xor.b64  	%rd2803, %rd2802, %rd2800;
	shr.u64 	%rd2804, %rd4269, 7;
	shf.r.wrap.b32 	%r1964, %r1805, %r1804, 1;
	shf.r.wrap.b32 	%r1965, %r1804, %r1805, 1;
	mov.b64 	%rd2805, {%r1965, %r1964};
	xor.b64  	%rd2806, %rd2805, %rd2804;
	shf.r.wrap.b32 	%r1966, %r1805, %r1804, 8;
	shf.r.wrap.b32 	%r1967, %r1804, %r1805, 8;
	mov.b64 	%rd2807, {%r1967, %r1966};
	xor.b64  	%rd2808, %rd2806, %rd2807;
	add.s64 	%rd2809, %rd4285, %rd4292;
	add.s64 	%rd2810, %rd2809, %rd2803;
	add.s64 	%rd4292, %rd2810, %rd2808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1968,%dummy}, %rd4291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1969}, %rd4291;
	}
	shf.r.wrap.b32 	%r1970, %r1969, %r1968, 19;
	shf.r.wrap.b32 	%r1971, %r1968, %r1969, 19;
	mov.b64 	%rd2811, {%r1971, %r1970};
	shf.l.wrap.b32 	%r1972, %r1968, %r1969, 3;
	shf.l.wrap.b32 	%r1973, %r1969, %r1968, 3;
	mov.b64 	%rd2812, {%r1973, %r1972};
	shr.u64 	%rd2813, %rd4291, 6;
	xor.b64  	%rd2814, %rd2811, %rd2813;
	xor.b64  	%rd2815, %rd2814, %rd2812;
	shf.r.wrap.b32 	%r1974, %r1817, %r1816, 1;
	shf.r.wrap.b32 	%r1975, %r1816, %r1817, 1;
	mov.b64 	%rd2816, {%r1975, %r1974};
	shf.r.wrap.b32 	%r1976, %r1817, %r1816, 8;
	shf.r.wrap.b32 	%r1977, %r1816, %r1817, 8;
	mov.b64 	%rd2817, {%r1977, %r1976};
	shr.u64 	%rd2818, %rd4278, 7;
	xor.b64  	%rd2819, %rd2816, %rd2818;
	xor.b64  	%rd2820, %rd2819, %rd2817;
	add.s64 	%rd2821, %rd4286, %rd4269;
	add.s64 	%rd2822, %rd2821, %rd2815;
	add.s64 	%rd4269, %rd2822, %rd2820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1978,%dummy}, %rd4274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1979}, %rd4274;
	}
	shf.r.wrap.b32 	%r1980, %r1979, %r1978, 18;
	shf.r.wrap.b32 	%r1981, %r1978, %r1979, 18;
	mov.b64 	%rd2823, {%r1981, %r1980};
	shf.r.wrap.b32 	%r1982, %r1979, %r1978, 14;
	shf.r.wrap.b32 	%r1983, %r1978, %r1979, 14;
	mov.b64 	%rd2824, {%r1983, %r1982};
	xor.b64  	%rd2825, %rd2823, %rd2824;
	shf.l.wrap.b32 	%r1984, %r1978, %r1979, 23;
	shf.l.wrap.b32 	%r1985, %r1979, %r1978, 23;
	mov.b64 	%rd2826, {%r1985, %r1984};
	xor.b64  	%rd2827, %rd2825, %rd2826;
	xor.b64  	%rd2828, %rd4275, %rd4276;
	and.b64  	%rd2829, %rd2828, %rd4274;
	xor.b64  	%rd2830, %rd2829, %rd4276;
	add.s64 	%rd2831, %rd2830, %rd4277;
	add.s64 	%rd2832, %rd2831, %rd4278;
	add.s64 	%rd253, %rd4268, 128;
	ld.const.u64 	%rd2833, [%rd4268+128];
	add.s64 	%rd2834, %rd2832, %rd2833;
	add.s64 	%rd2835, %rd2834, %rd2827;
	add.s64 	%rd2836, %rd2835, %rd4273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1986}, %rd4270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1987,%dummy}, %rd4270;
	}
	shf.l.wrap.b32 	%r1988, %r1987, %r1986, 30;
	shf.l.wrap.b32 	%r1989, %r1986, %r1987, 30;
	mov.b64 	%rd2837, {%r1989, %r1988};
	shf.r.wrap.b32 	%r1990, %r1986, %r1987, 28;
	shf.r.wrap.b32 	%r1991, %r1987, %r1986, 28;
	mov.b64 	%rd2838, {%r1991, %r1990};
	xor.b64  	%rd2839, %rd2837, %rd2838;
	shf.l.wrap.b32 	%r1992, %r1987, %r1986, 25;
	shf.l.wrap.b32 	%r1993, %r1986, %r1987, 25;
	mov.b64 	%rd2840, {%r1993, %r1992};
	xor.b64  	%rd2841, %rd2839, %rd2840;
	xor.b64  	%rd2842, %rd4270, %rd4271;
	xor.b64  	%rd2843, %rd4270, %rd4272;
	and.b64  	%rd2844, %rd2842, %rd2843;
	xor.b64  	%rd2845, %rd2844, %rd4270;
	add.s64 	%rd2846, %rd2835, %rd2845;
	add.s64 	%rd2847, %rd2846, %rd2841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd2836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1995}, %rd2836;
	}
	shf.r.wrap.b32 	%r1996, %r1995, %r1994, 14;
	shf.r.wrap.b32 	%r1997, %r1994, %r1995, 14;
	mov.b64 	%rd2848, {%r1997, %r1996};
	shf.r.wrap.b32 	%r1998, %r1995, %r1994, 18;
	shf.r.wrap.b32 	%r1999, %r1994, %r1995, 18;
	mov.b64 	%rd2849, {%r1999, %r1998};
	xor.b64  	%rd2850, %rd2849, %rd2848;
	shf.l.wrap.b32 	%r2000, %r1994, %r1995, 23;
	shf.l.wrap.b32 	%r2001, %r1995, %r1994, 23;
	mov.b64 	%rd2851, {%r2001, %r2000};
	xor.b64  	%rd2852, %rd2850, %rd2851;
	xor.b64  	%rd2853, %rd4274, %rd4275;
	and.b64  	%rd2854, %rd2836, %rd2853;
	xor.b64  	%rd2855, %rd2854, %rd4275;
	add.s64 	%rd2856, %rd4279, %rd4276;
	ld.const.u64 	%rd2857, [%rd4268+136];
	add.s64 	%rd2858, %rd2856, %rd2857;
	add.s64 	%rd2859, %rd2858, %rd2855;
	add.s64 	%rd2860, %rd2859, %rd2852;
	add.s64 	%rd2861, %rd2860, %rd4272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd2847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2003}, %rd2847;
	}
	shf.r.wrap.b32 	%r2004, %r2003, %r2002, 28;
	shf.r.wrap.b32 	%r2005, %r2002, %r2003, 28;
	mov.b64 	%rd2862, {%r2005, %r2004};
	shf.l.wrap.b32 	%r2006, %r2002, %r2003, 30;
	shf.l.wrap.b32 	%r2007, %r2003, %r2002, 30;
	mov.b64 	%rd2863, {%r2007, %r2006};
	xor.b64  	%rd2864, %rd2863, %rd2862;
	shf.l.wrap.b32 	%r2008, %r2002, %r2003, 25;
	shf.l.wrap.b32 	%r2009, %r2003, %r2002, 25;
	mov.b64 	%rd2865, {%r2009, %r2008};
	xor.b64  	%rd2866, %rd2864, %rd2865;
	xor.b64  	%rd2867, %rd2847, %rd4271;
	xor.b64  	%rd2868, %rd2847, %rd4270;
	and.b64  	%rd2869, %rd2868, %rd2867;
	xor.b64  	%rd2870, %rd2869, %rd2847;
	add.s64 	%rd2871, %rd2860, %rd2870;
	add.s64 	%rd2872, %rd2871, %rd2866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd2861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2011}, %rd2861;
	}
	shf.r.wrap.b32 	%r2012, %r2011, %r2010, 14;
	shf.r.wrap.b32 	%r2013, %r2010, %r2011, 14;
	mov.b64 	%rd2873, {%r2013, %r2012};
	shf.r.wrap.b32 	%r2014, %r2011, %r2010, 18;
	shf.r.wrap.b32 	%r2015, %r2010, %r2011, 18;
	mov.b64 	%rd2874, {%r2015, %r2014};
	xor.b64  	%rd2875, %rd2874, %rd2873;
	shf.l.wrap.b32 	%r2016, %r2010, %r2011, 23;
	shf.l.wrap.b32 	%r2017, %r2011, %r2010, 23;
	mov.b64 	%rd2876, {%r2017, %r2016};
	xor.b64  	%rd2877, %rd2875, %rd2876;
	xor.b64  	%rd2878, %rd2836, %rd4274;
	and.b64  	%rd2879, %rd2861, %rd2878;
	xor.b64  	%rd2880, %rd2879, %rd4274;
	add.s64 	%rd2881, %rd4280, %rd4275;
	ld.const.u64 	%rd2882, [%rd4268+144];
	add.s64 	%rd2883, %rd2881, %rd2882;
	add.s64 	%rd2884, %rd2883, %rd2880;
	add.s64 	%rd2885, %rd2884, %rd2877;
	add.s64 	%rd2886, %rd2885, %rd4271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2018,%dummy}, %rd2872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2019}, %rd2872;
	}
	shf.r.wrap.b32 	%r2020, %r2019, %r2018, 28;
	shf.r.wrap.b32 	%r2021, %r2018, %r2019, 28;
	mov.b64 	%rd2887, {%r2021, %r2020};
	shf.l.wrap.b32 	%r2022, %r2018, %r2019, 30;
	shf.l.wrap.b32 	%r2023, %r2019, %r2018, 30;
	mov.b64 	%rd2888, {%r2023, %r2022};
	xor.b64  	%rd2889, %rd2888, %rd2887;
	shf.l.wrap.b32 	%r2024, %r2018, %r2019, 25;
	shf.l.wrap.b32 	%r2025, %r2019, %r2018, 25;
	mov.b64 	%rd2890, {%r2025, %r2024};
	xor.b64  	%rd2891, %rd2889, %rd2890;
	xor.b64  	%rd2892, %rd2872, %rd4270;
	xor.b64  	%rd2893, %rd2872, %rd2847;
	and.b64  	%rd2894, %rd2893, %rd2892;
	xor.b64  	%rd2895, %rd2894, %rd2872;
	add.s64 	%rd2896, %rd2885, %rd2895;
	add.s64 	%rd2897, %rd2896, %rd2891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2026,%dummy}, %rd2886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2027}, %rd2886;
	}
	shf.r.wrap.b32 	%r2028, %r2027, %r2026, 14;
	shf.r.wrap.b32 	%r2029, %r2026, %r2027, 14;
	mov.b64 	%rd2898, {%r2029, %r2028};
	shf.r.wrap.b32 	%r2030, %r2027, %r2026, 18;
	shf.r.wrap.b32 	%r2031, %r2026, %r2027, 18;
	mov.b64 	%rd2899, {%r2031, %r2030};
	xor.b64  	%rd2900, %rd2899, %rd2898;
	shf.l.wrap.b32 	%r2032, %r2026, %r2027, 23;
	shf.l.wrap.b32 	%r2033, %r2027, %r2026, 23;
	mov.b64 	%rd2901, {%r2033, %r2032};
	xor.b64  	%rd2902, %rd2900, %rd2901;
	xor.b64  	%rd2903, %rd2861, %rd2836;
	and.b64  	%rd2904, %rd2886, %rd2903;
	xor.b64  	%rd2905, %rd2904, %rd2836;
	add.s64 	%rd2906, %rd4281, %rd4274;
	ld.const.u64 	%rd2907, [%rd4268+152];
	add.s64 	%rd2908, %rd2906, %rd2907;
	add.s64 	%rd2909, %rd2908, %rd2905;
	add.s64 	%rd2910, %rd2909, %rd2902;
	add.s64 	%rd2911, %rd2910, %rd4270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2034,%dummy}, %rd2897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2035}, %rd2897;
	}
	shf.r.wrap.b32 	%r2036, %r2035, %r2034, 28;
	shf.r.wrap.b32 	%r2037, %r2034, %r2035, 28;
	mov.b64 	%rd2912, {%r2037, %r2036};
	shf.l.wrap.b32 	%r2038, %r2034, %r2035, 30;
	shf.l.wrap.b32 	%r2039, %r2035, %r2034, 30;
	mov.b64 	%rd2913, {%r2039, %r2038};
	xor.b64  	%rd2914, %rd2913, %rd2912;
	shf.l.wrap.b32 	%r2040, %r2034, %r2035, 25;
	shf.l.wrap.b32 	%r2041, %r2035, %r2034, 25;
	mov.b64 	%rd2915, {%r2041, %r2040};
	xor.b64  	%rd2916, %rd2914, %rd2915;
	xor.b64  	%rd2917, %rd2897, %rd2847;
	xor.b64  	%rd2918, %rd2897, %rd2872;
	and.b64  	%rd2919, %rd2918, %rd2917;
	xor.b64  	%rd2920, %rd2919, %rd2897;
	add.s64 	%rd2921, %rd2910, %rd2920;
	add.s64 	%rd2922, %rd2921, %rd2916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2042,%dummy}, %rd2911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2043}, %rd2911;
	}
	shf.r.wrap.b32 	%r2044, %r2043, %r2042, 14;
	shf.r.wrap.b32 	%r2045, %r2042, %r2043, 14;
	mov.b64 	%rd2923, {%r2045, %r2044};
	shf.r.wrap.b32 	%r2046, %r2043, %r2042, 18;
	shf.r.wrap.b32 	%r2047, %r2042, %r2043, 18;
	mov.b64 	%rd2924, {%r2047, %r2046};
	xor.b64  	%rd2925, %rd2924, %rd2923;
	shf.l.wrap.b32 	%r2048, %r2042, %r2043, 23;
	shf.l.wrap.b32 	%r2049, %r2043, %r2042, 23;
	mov.b64 	%rd2926, {%r2049, %r2048};
	xor.b64  	%rd2927, %rd2925, %rd2926;
	xor.b64  	%rd2928, %rd2886, %rd2861;
	and.b64  	%rd2929, %rd2911, %rd2928;
	xor.b64  	%rd2930, %rd2929, %rd2861;
	add.s64 	%rd2931, %rd2836, %rd4282;
	ld.const.u64 	%rd2932, [%rd4268+160];
	add.s64 	%rd2933, %rd2931, %rd2932;
	add.s64 	%rd2934, %rd2933, %rd2930;
	add.s64 	%rd2935, %rd2934, %rd2927;
	add.s64 	%rd2936, %rd2935, %rd2847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2050,%dummy}, %rd2922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2051}, %rd2922;
	}
	shf.r.wrap.b32 	%r2052, %r2051, %r2050, 28;
	shf.r.wrap.b32 	%r2053, %r2050, %r2051, 28;
	mov.b64 	%rd2937, {%r2053, %r2052};
	shf.l.wrap.b32 	%r2054, %r2050, %r2051, 30;
	shf.l.wrap.b32 	%r2055, %r2051, %r2050, 30;
	mov.b64 	%rd2938, {%r2055, %r2054};
	xor.b64  	%rd2939, %rd2938, %rd2937;
	shf.l.wrap.b32 	%r2056, %r2050, %r2051, 25;
	shf.l.wrap.b32 	%r2057, %r2051, %r2050, 25;
	mov.b64 	%rd2940, {%r2057, %r2056};
	xor.b64  	%rd2941, %rd2939, %rd2940;
	xor.b64  	%rd2942, %rd2922, %rd2872;
	xor.b64  	%rd2943, %rd2922, %rd2897;
	and.b64  	%rd2944, %rd2943, %rd2942;
	xor.b64  	%rd2945, %rd2944, %rd2922;
	add.s64 	%rd2946, %rd2935, %rd2945;
	add.s64 	%rd2947, %rd2946, %rd2941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2058,%dummy}, %rd2936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2059}, %rd2936;
	}
	shf.r.wrap.b32 	%r2060, %r2059, %r2058, 14;
	shf.r.wrap.b32 	%r2061, %r2058, %r2059, 14;
	mov.b64 	%rd2948, {%r2061, %r2060};
	shf.r.wrap.b32 	%r2062, %r2059, %r2058, 18;
	shf.r.wrap.b32 	%r2063, %r2058, %r2059, 18;
	mov.b64 	%rd2949, {%r2063, %r2062};
	xor.b64  	%rd2950, %rd2949, %rd2948;
	shf.l.wrap.b32 	%r2064, %r2058, %r2059, 23;
	shf.l.wrap.b32 	%r2065, %r2059, %r2058, 23;
	mov.b64 	%rd2951, {%r2065, %r2064};
	xor.b64  	%rd2952, %rd2950, %rd2951;
	xor.b64  	%rd2953, %rd2911, %rd2886;
	and.b64  	%rd2954, %rd2936, %rd2953;
	xor.b64  	%rd2955, %rd2954, %rd2886;
	add.s64 	%rd2956, %rd2861, %rd4283;
	ld.const.u64 	%rd2957, [%rd4268+168];
	add.s64 	%rd2958, %rd2956, %rd2957;
	add.s64 	%rd2959, %rd2958, %rd2955;
	add.s64 	%rd2960, %rd2959, %rd2952;
	add.s64 	%rd2961, %rd2960, %rd2872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2066,%dummy}, %rd2947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2067}, %rd2947;
	}
	shf.r.wrap.b32 	%r2068, %r2067, %r2066, 28;
	shf.r.wrap.b32 	%r2069, %r2066, %r2067, 28;
	mov.b64 	%rd2962, {%r2069, %r2068};
	shf.l.wrap.b32 	%r2070, %r2066, %r2067, 30;
	shf.l.wrap.b32 	%r2071, %r2067, %r2066, 30;
	mov.b64 	%rd2963, {%r2071, %r2070};
	xor.b64  	%rd2964, %rd2963, %rd2962;
	shf.l.wrap.b32 	%r2072, %r2066, %r2067, 25;
	shf.l.wrap.b32 	%r2073, %r2067, %r2066, 25;
	mov.b64 	%rd2965, {%r2073, %r2072};
	xor.b64  	%rd2966, %rd2964, %rd2965;
	xor.b64  	%rd2967, %rd2947, %rd2897;
	xor.b64  	%rd2968, %rd2947, %rd2922;
	and.b64  	%rd2969, %rd2968, %rd2967;
	xor.b64  	%rd2970, %rd2969, %rd2947;
	add.s64 	%rd2971, %rd2960, %rd2970;
	add.s64 	%rd2972, %rd2971, %rd2966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2074,%dummy}, %rd2961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2075}, %rd2961;
	}
	shf.r.wrap.b32 	%r2076, %r2075, %r2074, 14;
	shf.r.wrap.b32 	%r2077, %r2074, %r2075, 14;
	mov.b64 	%rd2973, {%r2077, %r2076};
	shf.r.wrap.b32 	%r2078, %r2075, %r2074, 18;
	shf.r.wrap.b32 	%r2079, %r2074, %r2075, 18;
	mov.b64 	%rd2974, {%r2079, %r2078};
	xor.b64  	%rd2975, %rd2974, %rd2973;
	shf.l.wrap.b32 	%r2080, %r2074, %r2075, 23;
	shf.l.wrap.b32 	%r2081, %r2075, %r2074, 23;
	mov.b64 	%rd2976, {%r2081, %r2080};
	xor.b64  	%rd2977, %rd2975, %rd2976;
	xor.b64  	%rd2978, %rd2936, %rd2911;
	and.b64  	%rd2979, %rd2961, %rd2978;
	xor.b64  	%rd2980, %rd2979, %rd2911;
	add.s64 	%rd2981, %rd2886, %rd4284;
	ld.const.u64 	%rd2982, [%rd4268+176];
	add.s64 	%rd2983, %rd2981, %rd2982;
	add.s64 	%rd2984, %rd2983, %rd2980;
	add.s64 	%rd2985, %rd2984, %rd2977;
	add.s64 	%rd2986, %rd2985, %rd2897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2082,%dummy}, %rd2972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2083}, %rd2972;
	}
	shf.r.wrap.b32 	%r2084, %r2083, %r2082, 28;
	shf.r.wrap.b32 	%r2085, %r2082, %r2083, 28;
	mov.b64 	%rd2987, {%r2085, %r2084};
	shf.l.wrap.b32 	%r2086, %r2082, %r2083, 30;
	shf.l.wrap.b32 	%r2087, %r2083, %r2082, 30;
	mov.b64 	%rd2988, {%r2087, %r2086};
	xor.b64  	%rd2989, %rd2988, %rd2987;
	shf.l.wrap.b32 	%r2088, %r2082, %r2083, 25;
	shf.l.wrap.b32 	%r2089, %r2083, %r2082, 25;
	mov.b64 	%rd2990, {%r2089, %r2088};
	xor.b64  	%rd2991, %rd2989, %rd2990;
	xor.b64  	%rd2992, %rd2972, %rd2922;
	xor.b64  	%rd2993, %rd2972, %rd2947;
	and.b64  	%rd2994, %rd2993, %rd2992;
	xor.b64  	%rd2995, %rd2994, %rd2972;
	add.s64 	%rd2996, %rd2985, %rd2995;
	add.s64 	%rd2997, %rd2996, %rd2991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd2986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2091}, %rd2986;
	}
	shf.r.wrap.b32 	%r2092, %r2091, %r2090, 14;
	shf.r.wrap.b32 	%r2093, %r2090, %r2091, 14;
	mov.b64 	%rd2998, {%r2093, %r2092};
	shf.r.wrap.b32 	%r2094, %r2091, %r2090, 18;
	shf.r.wrap.b32 	%r2095, %r2090, %r2091, 18;
	mov.b64 	%rd2999, {%r2095, %r2094};
	xor.b64  	%rd3000, %rd2999, %rd2998;
	shf.l.wrap.b32 	%r2096, %r2090, %r2091, 23;
	shf.l.wrap.b32 	%r2097, %r2091, %r2090, 23;
	mov.b64 	%rd3001, {%r2097, %r2096};
	xor.b64  	%rd3002, %rd3000, %rd3001;
	xor.b64  	%rd3003, %rd2961, %rd2936;
	and.b64  	%rd3004, %rd2986, %rd3003;
	xor.b64  	%rd3005, %rd3004, %rd2936;
	add.s64 	%rd3006, %rd2911, %rd4285;
	ld.const.u64 	%rd3007, [%rd4268+184];
	add.s64 	%rd3008, %rd3006, %rd3007;
	add.s64 	%rd3009, %rd3008, %rd3005;
	add.s64 	%rd3010, %rd3009, %rd3002;
	add.s64 	%rd3011, %rd3010, %rd2922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2098,%dummy}, %rd2997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd2997;
	}
	shf.r.wrap.b32 	%r2100, %r2099, %r2098, 28;
	shf.r.wrap.b32 	%r2101, %r2098, %r2099, 28;
	mov.b64 	%rd3012, {%r2101, %r2100};
	shf.l.wrap.b32 	%r2102, %r2098, %r2099, 30;
	shf.l.wrap.b32 	%r2103, %r2099, %r2098, 30;
	mov.b64 	%rd3013, {%r2103, %r2102};
	xor.b64  	%rd3014, %rd3013, %rd3012;
	shf.l.wrap.b32 	%r2104, %r2098, %r2099, 25;
	shf.l.wrap.b32 	%r2105, %r2099, %r2098, 25;
	mov.b64 	%rd3015, {%r2105, %r2104};
	xor.b64  	%rd3016, %rd3014, %rd3015;
	xor.b64  	%rd3017, %rd2997, %rd2947;
	xor.b64  	%rd3018, %rd2997, %rd2972;
	and.b64  	%rd3019, %rd3018, %rd3017;
	xor.b64  	%rd3020, %rd3019, %rd2997;
	add.s64 	%rd3021, %rd3010, %rd3020;
	add.s64 	%rd3022, %rd3021, %rd3016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2106,%dummy}, %rd3011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2107}, %rd3011;
	}
	shf.r.wrap.b32 	%r2108, %r2107, %r2106, 14;
	shf.r.wrap.b32 	%r2109, %r2106, %r2107, 14;
	mov.b64 	%rd3023, {%r2109, %r2108};
	shf.r.wrap.b32 	%r2110, %r2107, %r2106, 18;
	shf.r.wrap.b32 	%r2111, %r2106, %r2107, 18;
	mov.b64 	%rd3024, {%r2111, %r2110};
	xor.b64  	%rd3025, %rd3024, %rd3023;
	shf.l.wrap.b32 	%r2112, %r2106, %r2107, 23;
	shf.l.wrap.b32 	%r2113, %r2107, %r2106, 23;
	mov.b64 	%rd3026, {%r2113, %r2112};
	xor.b64  	%rd3027, %rd3025, %rd3026;
	xor.b64  	%rd3028, %rd2986, %rd2961;
	and.b64  	%rd3029, %rd3011, %rd3028;
	xor.b64  	%rd3030, %rd3029, %rd2961;
	add.s64 	%rd3031, %rd2936, %rd4286;
	ld.const.u64 	%rd3032, [%rd4268+192];
	add.s64 	%rd3033, %rd3031, %rd3032;
	add.s64 	%rd3034, %rd3033, %rd3030;
	add.s64 	%rd3035, %rd3034, %rd3027;
	add.s64 	%rd3036, %rd3035, %rd2947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2114,%dummy}, %rd3022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2115}, %rd3022;
	}
	shf.r.wrap.b32 	%r2116, %r2115, %r2114, 28;
	shf.r.wrap.b32 	%r2117, %r2114, %r2115, 28;
	mov.b64 	%rd3037, {%r2117, %r2116};
	shf.l.wrap.b32 	%r2118, %r2114, %r2115, 30;
	shf.l.wrap.b32 	%r2119, %r2115, %r2114, 30;
	mov.b64 	%rd3038, {%r2119, %r2118};
	xor.b64  	%rd3039, %rd3038, %rd3037;
	shf.l.wrap.b32 	%r2120, %r2114, %r2115, 25;
	shf.l.wrap.b32 	%r2121, %r2115, %r2114, 25;
	mov.b64 	%rd3040, {%r2121, %r2120};
	xor.b64  	%rd3041, %rd3039, %rd3040;
	xor.b64  	%rd3042, %rd3022, %rd2972;
	xor.b64  	%rd3043, %rd3022, %rd2997;
	and.b64  	%rd3044, %rd3043, %rd3042;
	xor.b64  	%rd3045, %rd3044, %rd3022;
	add.s64 	%rd3046, %rd3035, %rd3045;
	add.s64 	%rd3047, %rd3046, %rd3041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2122,%dummy}, %rd3036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2123}, %rd3036;
	}
	shf.r.wrap.b32 	%r2124, %r2123, %r2122, 14;
	shf.r.wrap.b32 	%r2125, %r2122, %r2123, 14;
	mov.b64 	%rd3048, {%r2125, %r2124};
	shf.r.wrap.b32 	%r2126, %r2123, %r2122, 18;
	shf.r.wrap.b32 	%r2127, %r2122, %r2123, 18;
	mov.b64 	%rd3049, {%r2127, %r2126};
	xor.b64  	%rd3050, %rd3049, %rd3048;
	shf.l.wrap.b32 	%r2128, %r2122, %r2123, 23;
	shf.l.wrap.b32 	%r2129, %r2123, %r2122, 23;
	mov.b64 	%rd3051, {%r2129, %r2128};
	xor.b64  	%rd3052, %rd3050, %rd3051;
	xor.b64  	%rd3053, %rd3011, %rd2986;
	and.b64  	%rd3054, %rd3036, %rd3053;
	xor.b64  	%rd3055, %rd3054, %rd2986;
	add.s64 	%rd3056, %rd2961, %rd4287;
	ld.const.u64 	%rd3057, [%rd4268+200];
	add.s64 	%rd3058, %rd3056, %rd3057;
	add.s64 	%rd3059, %rd3058, %rd3055;
	add.s64 	%rd3060, %rd3059, %rd3052;
	add.s64 	%rd3061, %rd3060, %rd2972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2130,%dummy}, %rd3047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2131}, %rd3047;
	}
	shf.r.wrap.b32 	%r2132, %r2131, %r2130, 28;
	shf.r.wrap.b32 	%r2133, %r2130, %r2131, 28;
	mov.b64 	%rd3062, {%r2133, %r2132};
	shf.l.wrap.b32 	%r2134, %r2130, %r2131, 30;
	shf.l.wrap.b32 	%r2135, %r2131, %r2130, 30;
	mov.b64 	%rd3063, {%r2135, %r2134};
	xor.b64  	%rd3064, %rd3063, %rd3062;
	shf.l.wrap.b32 	%r2136, %r2130, %r2131, 25;
	shf.l.wrap.b32 	%r2137, %r2131, %r2130, 25;
	mov.b64 	%rd3065, {%r2137, %r2136};
	xor.b64  	%rd3066, %rd3064, %rd3065;
	xor.b64  	%rd3067, %rd3047, %rd2997;
	xor.b64  	%rd3068, %rd3047, %rd3022;
	and.b64  	%rd3069, %rd3068, %rd3067;
	xor.b64  	%rd3070, %rd3069, %rd3047;
	add.s64 	%rd3071, %rd3060, %rd3070;
	add.s64 	%rd3072, %rd3071, %rd3066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2138,%dummy}, %rd3061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2139}, %rd3061;
	}
	shf.r.wrap.b32 	%r2140, %r2139, %r2138, 14;
	shf.r.wrap.b32 	%r2141, %r2138, %r2139, 14;
	mov.b64 	%rd3073, {%r2141, %r2140};
	shf.r.wrap.b32 	%r2142, %r2139, %r2138, 18;
	shf.r.wrap.b32 	%r2143, %r2138, %r2139, 18;
	mov.b64 	%rd3074, {%r2143, %r2142};
	xor.b64  	%rd3075, %rd3074, %rd3073;
	shf.l.wrap.b32 	%r2144, %r2138, %r2139, 23;
	shf.l.wrap.b32 	%r2145, %r2139, %r2138, 23;
	mov.b64 	%rd3076, {%r2145, %r2144};
	xor.b64  	%rd3077, %rd3075, %rd3076;
	xor.b64  	%rd3078, %rd3036, %rd3011;
	and.b64  	%rd3079, %rd3061, %rd3078;
	xor.b64  	%rd3080, %rd3079, %rd3011;
	add.s64 	%rd3081, %rd2986, %rd4288;
	ld.const.u64 	%rd3082, [%rd4268+208];
	add.s64 	%rd3083, %rd3081, %rd3082;
	add.s64 	%rd3084, %rd3083, %rd3080;
	add.s64 	%rd3085, %rd3084, %rd3077;
	add.s64 	%rd3086, %rd3085, %rd2997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2146,%dummy}, %rd3072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2147}, %rd3072;
	}
	shf.r.wrap.b32 	%r2148, %r2147, %r2146, 28;
	shf.r.wrap.b32 	%r2149, %r2146, %r2147, 28;
	mov.b64 	%rd3087, {%r2149, %r2148};
	shf.l.wrap.b32 	%r2150, %r2146, %r2147, 30;
	shf.l.wrap.b32 	%r2151, %r2147, %r2146, 30;
	mov.b64 	%rd3088, {%r2151, %r2150};
	xor.b64  	%rd3089, %rd3088, %rd3087;
	shf.l.wrap.b32 	%r2152, %r2146, %r2147, 25;
	shf.l.wrap.b32 	%r2153, %r2147, %r2146, 25;
	mov.b64 	%rd3090, {%r2153, %r2152};
	xor.b64  	%rd3091, %rd3089, %rd3090;
	xor.b64  	%rd3092, %rd3072, %rd3022;
	xor.b64  	%rd3093, %rd3072, %rd3047;
	and.b64  	%rd3094, %rd3093, %rd3092;
	xor.b64  	%rd3095, %rd3094, %rd3072;
	add.s64 	%rd3096, %rd3085, %rd3095;
	add.s64 	%rd3097, %rd3096, %rd3091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2154,%dummy}, %rd3086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2155}, %rd3086;
	}
	shf.r.wrap.b32 	%r2156, %r2155, %r2154, 14;
	shf.r.wrap.b32 	%r2157, %r2154, %r2155, 14;
	mov.b64 	%rd3098, {%r2157, %r2156};
	shf.r.wrap.b32 	%r2158, %r2155, %r2154, 18;
	shf.r.wrap.b32 	%r2159, %r2154, %r2155, 18;
	mov.b64 	%rd3099, {%r2159, %r2158};
	xor.b64  	%rd3100, %rd3099, %rd3098;
	shf.l.wrap.b32 	%r2160, %r2154, %r2155, 23;
	shf.l.wrap.b32 	%r2161, %r2155, %r2154, 23;
	mov.b64 	%rd3101, {%r2161, %r2160};
	xor.b64  	%rd3102, %rd3100, %rd3101;
	xor.b64  	%rd3103, %rd3061, %rd3036;
	and.b64  	%rd3104, %rd3086, %rd3103;
	xor.b64  	%rd3105, %rd3104, %rd3036;
	add.s64 	%rd3106, %rd3011, %rd4289;
	ld.const.u64 	%rd3107, [%rd4268+216];
	add.s64 	%rd3108, %rd3106, %rd3107;
	add.s64 	%rd3109, %rd3108, %rd3105;
	add.s64 	%rd3110, %rd3109, %rd3102;
	add.s64 	%rd3111, %rd3110, %rd3022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2162,%dummy}, %rd3097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2163}, %rd3097;
	}
	shf.r.wrap.b32 	%r2164, %r2163, %r2162, 28;
	shf.r.wrap.b32 	%r2165, %r2162, %r2163, 28;
	mov.b64 	%rd3112, {%r2165, %r2164};
	shf.l.wrap.b32 	%r2166, %r2162, %r2163, 30;
	shf.l.wrap.b32 	%r2167, %r2163, %r2162, 30;
	mov.b64 	%rd3113, {%r2167, %r2166};
	xor.b64  	%rd3114, %rd3113, %rd3112;
	shf.l.wrap.b32 	%r2168, %r2162, %r2163, 25;
	shf.l.wrap.b32 	%r2169, %r2163, %r2162, 25;
	mov.b64 	%rd3115, {%r2169, %r2168};
	xor.b64  	%rd3116, %rd3114, %rd3115;
	xor.b64  	%rd3117, %rd3097, %rd3047;
	xor.b64  	%rd3118, %rd3097, %rd3072;
	and.b64  	%rd3119, %rd3118, %rd3117;
	xor.b64  	%rd3120, %rd3119, %rd3097;
	add.s64 	%rd3121, %rd3110, %rd3120;
	add.s64 	%rd3122, %rd3121, %rd3116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2170,%dummy}, %rd3111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2171}, %rd3111;
	}
	shf.r.wrap.b32 	%r2172, %r2171, %r2170, 14;
	shf.r.wrap.b32 	%r2173, %r2170, %r2171, 14;
	mov.b64 	%rd3123, {%r2173, %r2172};
	shf.r.wrap.b32 	%r2174, %r2171, %r2170, 18;
	shf.r.wrap.b32 	%r2175, %r2170, %r2171, 18;
	mov.b64 	%rd3124, {%r2175, %r2174};
	xor.b64  	%rd3125, %rd3124, %rd3123;
	shf.l.wrap.b32 	%r2176, %r2170, %r2171, 23;
	shf.l.wrap.b32 	%r2177, %r2171, %r2170, 23;
	mov.b64 	%rd3126, {%r2177, %r2176};
	xor.b64  	%rd3127, %rd3125, %rd3126;
	xor.b64  	%rd3128, %rd3086, %rd3061;
	and.b64  	%rd3129, %rd3111, %rd3128;
	xor.b64  	%rd3130, %rd3129, %rd3061;
	add.s64 	%rd3131, %rd3036, %rd4290;
	ld.const.u64 	%rd3132, [%rd4268+224];
	add.s64 	%rd3133, %rd3131, %rd3132;
	add.s64 	%rd3134, %rd3133, %rd3130;
	add.s64 	%rd3135, %rd3134, %rd3127;
	add.s64 	%rd4277, %rd3135, %rd3047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2178,%dummy}, %rd3122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2179}, %rd3122;
	}
	shf.r.wrap.b32 	%r2180, %r2179, %r2178, 28;
	shf.r.wrap.b32 	%r2181, %r2178, %r2179, 28;
	mov.b64 	%rd3136, {%r2181, %r2180};
	shf.l.wrap.b32 	%r2182, %r2178, %r2179, 30;
	shf.l.wrap.b32 	%r2183, %r2179, %r2178, 30;
	mov.b64 	%rd3137, {%r2183, %r2182};
	xor.b64  	%rd3138, %rd3137, %rd3136;
	shf.l.wrap.b32 	%r2184, %r2178, %r2179, 25;
	shf.l.wrap.b32 	%r2185, %r2179, %r2178, 25;
	mov.b64 	%rd3139, {%r2185, %r2184};
	xor.b64  	%rd3140, %rd3138, %rd3139;
	xor.b64  	%rd3141, %rd3122, %rd3072;
	xor.b64  	%rd3142, %rd3122, %rd3097;
	and.b64  	%rd3143, %rd3142, %rd3141;
	xor.b64  	%rd3144, %rd3143, %rd3122;
	add.s64 	%rd3145, %rd3135, %rd3144;
	add.s64 	%rd4273, %rd3145, %rd3140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2186,%dummy}, %rd4277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2187}, %rd4277;
	}
	shf.r.wrap.b32 	%r2188, %r2187, %r2186, 14;
	shf.r.wrap.b32 	%r2189, %r2186, %r2187, 14;
	mov.b64 	%rd3146, {%r2189, %r2188};
	shf.r.wrap.b32 	%r2190, %r2187, %r2186, 18;
	shf.r.wrap.b32 	%r2191, %r2186, %r2187, 18;
	mov.b64 	%rd3147, {%r2191, %r2190};
	xor.b64  	%rd3148, %rd3147, %rd3146;
	shf.l.wrap.b32 	%r2192, %r2186, %r2187, 23;
	shf.l.wrap.b32 	%r2193, %r2187, %r2186, 23;
	mov.b64 	%rd3149, {%r2193, %r2192};
	xor.b64  	%rd3150, %rd3148, %rd3149;
	xor.b64  	%rd3151, %rd3111, %rd3086;
	and.b64  	%rd3152, %rd4277, %rd3151;
	xor.b64  	%rd3153, %rd3152, %rd3086;
	add.s64 	%rd3154, %rd3061, %rd4291;
	ld.const.u64 	%rd3155, [%rd4268+232];
	add.s64 	%rd3156, %rd3154, %rd3155;
	add.s64 	%rd3157, %rd3156, %rd3153;
	add.s64 	%rd3158, %rd3157, %rd3150;
	add.s64 	%rd4276, %rd3158, %rd3072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2194,%dummy}, %rd4273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2195}, %rd4273;
	}
	shf.r.wrap.b32 	%r2196, %r2195, %r2194, 28;
	shf.r.wrap.b32 	%r2197, %r2194, %r2195, 28;
	mov.b64 	%rd3159, {%r2197, %r2196};
	shf.l.wrap.b32 	%r2198, %r2194, %r2195, 30;
	shf.l.wrap.b32 	%r2199, %r2195, %r2194, 30;
	mov.b64 	%rd3160, {%r2199, %r2198};
	xor.b64  	%rd3161, %rd3160, %rd3159;
	shf.l.wrap.b32 	%r2200, %r2194, %r2195, 25;
	shf.l.wrap.b32 	%r2201, %r2195, %r2194, 25;
	mov.b64 	%rd3162, {%r2201, %r2200};
	xor.b64  	%rd3163, %rd3161, %rd3162;
	xor.b64  	%rd3164, %rd4273, %rd3097;
	xor.b64  	%rd3165, %rd4273, %rd3122;
	and.b64  	%rd3166, %rd3165, %rd3164;
	xor.b64  	%rd3167, %rd3166, %rd4273;
	add.s64 	%rd3168, %rd3158, %rd3167;
	add.s64 	%rd4272, %rd3168, %rd3163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2202,%dummy}, %rd4276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2203}, %rd4276;
	}
	shf.r.wrap.b32 	%r2204, %r2203, %r2202, 14;
	shf.r.wrap.b32 	%r2205, %r2202, %r2203, 14;
	mov.b64 	%rd3169, {%r2205, %r2204};
	shf.r.wrap.b32 	%r2206, %r2203, %r2202, 18;
	shf.r.wrap.b32 	%r2207, %r2202, %r2203, 18;
	mov.b64 	%rd3170, {%r2207, %r2206};
	xor.b64  	%rd3171, %rd3170, %rd3169;
	shf.l.wrap.b32 	%r2208, %r2202, %r2203, 23;
	shf.l.wrap.b32 	%r2209, %r2203, %r2202, 23;
	mov.b64 	%rd3172, {%r2209, %r2208};
	xor.b64  	%rd3173, %rd3171, %rd3172;
	xor.b64  	%rd3174, %rd4277, %rd3111;
	and.b64  	%rd3175, %rd4276, %rd3174;
	xor.b64  	%rd3176, %rd3175, %rd3111;
	add.s64 	%rd3177, %rd3086, %rd4292;
	ld.const.u64 	%rd3178, [%rd4268+240];
	add.s64 	%rd3179, %rd3177, %rd3178;
	add.s64 	%rd3180, %rd3179, %rd3176;
	add.s64 	%rd3181, %rd3180, %rd3173;
	add.s64 	%rd4275, %rd3181, %rd3097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2210,%dummy}, %rd4272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2211}, %rd4272;
	}
	shf.r.wrap.b32 	%r2212, %r2211, %r2210, 28;
	shf.r.wrap.b32 	%r2213, %r2210, %r2211, 28;
	mov.b64 	%rd3182, {%r2213, %r2212};
	shf.l.wrap.b32 	%r2214, %r2210, %r2211, 30;
	shf.l.wrap.b32 	%r2215, %r2211, %r2210, 30;
	mov.b64 	%rd3183, {%r2215, %r2214};
	xor.b64  	%rd3184, %rd3183, %rd3182;
	shf.l.wrap.b32 	%r2216, %r2210, %r2211, 25;
	shf.l.wrap.b32 	%r2217, %r2211, %r2210, 25;
	mov.b64 	%rd3185, {%r2217, %r2216};
	xor.b64  	%rd3186, %rd3184, %rd3185;
	xor.b64  	%rd3187, %rd4272, %rd3122;
	xor.b64  	%rd3188, %rd4272, %rd4273;
	and.b64  	%rd3189, %rd3188, %rd3187;
	xor.b64  	%rd3190, %rd3189, %rd4272;
	add.s64 	%rd3191, %rd3181, %rd3190;
	add.s64 	%rd4271, %rd3191, %rd3186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2218,%dummy}, %rd4275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2219}, %rd4275;
	}
	shf.r.wrap.b32 	%r2220, %r2219, %r2218, 14;
	shf.r.wrap.b32 	%r2221, %r2218, %r2219, 14;
	mov.b64 	%rd3192, {%r2221, %r2220};
	shf.r.wrap.b32 	%r2222, %r2219, %r2218, 18;
	shf.r.wrap.b32 	%r2223, %r2218, %r2219, 18;
	mov.b64 	%rd3193, {%r2223, %r2222};
	xor.b64  	%rd3194, %rd3193, %rd3192;
	shf.l.wrap.b32 	%r2224, %r2218, %r2219, 23;
	shf.l.wrap.b32 	%r2225, %r2219, %r2218, 23;
	mov.b64 	%rd3195, {%r2225, %r2224};
	xor.b64  	%rd3196, %rd3194, %rd3195;
	xor.b64  	%rd3197, %rd4276, %rd4277;
	and.b64  	%rd3198, %rd4275, %rd3197;
	xor.b64  	%rd3199, %rd3198, %rd4277;
	add.s64 	%rd3200, %rd3111, %rd4269;
	ld.const.u64 	%rd3201, [%rd4268+248];
	add.s64 	%rd3202, %rd3200, %rd3201;
	add.s64 	%rd3203, %rd3202, %rd3199;
	add.s64 	%rd3204, %rd3203, %rd3196;
	add.s64 	%rd4274, %rd3204, %rd3122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2226,%dummy}, %rd4271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2227}, %rd4271;
	}
	shf.r.wrap.b32 	%r2228, %r2227, %r2226, 28;
	shf.r.wrap.b32 	%r2229, %r2226, %r2227, 28;
	mov.b64 	%rd3205, {%r2229, %r2228};
	shf.l.wrap.b32 	%r2230, %r2226, %r2227, 30;
	shf.l.wrap.b32 	%r2231, %r2227, %r2226, 30;
	mov.b64 	%rd3206, {%r2231, %r2230};
	xor.b64  	%rd3207, %rd3206, %rd3205;
	shf.l.wrap.b32 	%r2232, %r2226, %r2227, 25;
	shf.l.wrap.b32 	%r2233, %r2227, %r2226, 25;
	mov.b64 	%rd3208, {%r2233, %r2232};
	xor.b64  	%rd3209, %rd3207, %rd3208;
	xor.b64  	%rd3210, %rd4271, %rd4273;
	xor.b64  	%rd3211, %rd4271, %rd4272;
	and.b64  	%rd3212, %rd3211, %rd3210;
	xor.b64  	%rd3213, %rd3212, %rd4271;
	add.s64 	%rd3214, %rd3204, %rd3213;
	add.s64 	%rd4270, %rd3214, %rd3209;
	add.s32 	%r2919, %r2919, 16;
	setp.lt.s32	%p4, %r2919, 80;
	mov.u64 	%rd4268, %rd253;
	@%p4 bra 	BB1_6;

	ld.const.u64 	%rd4214, [k_sha512+120];
	ld.const.u64 	%rd4213, [k_sha512+112];
	ld.const.u64 	%rd4203, [k_sha512+104];
	ld.const.u64 	%rd4202, [k_sha512+96];
	ld.const.u64 	%rd4201, [k_sha512+88];
	ld.const.u64 	%rd4200, [k_sha512+80];
	ld.const.u64 	%rd4199, [k_sha512+72];
	ld.const.u64 	%rd4198, [k_sha512];
	ld.const.u64 	%rd4193, [k_sha512+64];
	ld.const.u64 	%rd4192, [k_sha512+56];
	ld.const.u64 	%rd4191, [k_sha512+48];
	ld.const.u64 	%rd4190, [k_sha512+40];
	ld.const.u64 	%rd4189, [k_sha512+32];
	ld.const.u64 	%rd4188, [k_sha512+24];
	ld.const.u64 	%rd4187, [k_sha512+16];
	ld.const.u64 	%rd4186, [k_sha512+8];
	add.s64 	%rd4303, %rd4270, %rd109;
	add.s64 	%rd3224, %rd200, %rd4303;
	add.s64 	%rd3225, %rd3224, %rd4198;
	add.s64 	%rd3226, %rd3225, %rd199;
	add.s64 	%rd3227, %rd3226, %rd186;
	add.s64 	%rd3228, %rd3226, %rd202;
	add.s64 	%rd3229, %rd3228, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2235,%dummy}, %rd3227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2236}, %rd3227;
	}
	shf.r.wrap.b32 	%r2237, %r2236, %r2235, 14;
	shf.r.wrap.b32 	%r2238, %r2235, %r2236, 14;
	mov.b64 	%rd3230, {%r2238, %r2237};
	shf.r.wrap.b32 	%r2239, %r2236, %r2235, 18;
	shf.r.wrap.b32 	%r2240, %r2235, %r2236, 18;
	mov.b64 	%rd3231, {%r2240, %r2239};
	xor.b64  	%rd3232, %rd3231, %rd3230;
	shf.l.wrap.b32 	%r2241, %r2235, %r2236, 23;
	shf.l.wrap.b32 	%r2242, %r2236, %r2235, 23;
	mov.b64 	%rd3233, {%r2242, %r2241};
	xor.b64  	%rd3234, %rd3232, %rd3233;
	and.b64  	%rd3235, %rd3227, %rd203;
	xor.b64  	%rd3236, %rd3235, %rd188;
	add.s64 	%rd4304, %rd4271, %rd179;
	add.s64 	%rd3237, %rd4304, %rd189;
	add.s64 	%rd3238, %rd3237, %rd4186;
	add.s64 	%rd3239, %rd3238, %rd3236;
	add.s64 	%rd3240, %rd3239, %rd3234;
	add.s64 	%rd3241, %rd3240, %rd185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2243,%dummy}, %rd3229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2244}, %rd3229;
	}
	shf.r.wrap.b32 	%r2245, %r2244, %r2243, 28;
	shf.r.wrap.b32 	%r2246, %r2243, %r2244, 28;
	mov.b64 	%rd3242, {%r2246, %r2245};
	shf.l.wrap.b32 	%r2247, %r2243, %r2244, 30;
	shf.l.wrap.b32 	%r2248, %r2244, %r2243, 30;
	mov.b64 	%rd3243, {%r2248, %r2247};
	xor.b64  	%rd3244, %rd3243, %rd3242;
	shf.l.wrap.b32 	%r2249, %r2243, %r2244, 25;
	shf.l.wrap.b32 	%r2250, %r2244, %r2243, 25;
	mov.b64 	%rd3245, {%r2250, %r2249};
	xor.b64  	%rd3246, %rd3244, %rd3245;
	xor.b64  	%rd3247, %rd3229, %rd184;
	xor.b64  	%rd3248, %rd3229, %rd183;
	and.b64  	%rd3249, %rd3248, %rd3247;
	xor.b64  	%rd3250, %rd3249, %rd3229;
	add.s64 	%rd3251, %rd3240, %rd3250;
	add.s64 	%rd3252, %rd3251, %rd3246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2251,%dummy}, %rd3241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2252}, %rd3241;
	}
	shf.r.wrap.b32 	%r2253, %r2252, %r2251, 14;
	shf.r.wrap.b32 	%r2254, %r2251, %r2252, 14;
	mov.b64 	%rd3253, {%r2254, %r2253};
	shf.r.wrap.b32 	%r2255, %r2252, %r2251, 18;
	shf.r.wrap.b32 	%r2256, %r2251, %r2252, 18;
	mov.b64 	%rd3254, {%r2256, %r2255};
	xor.b64  	%rd3255, %rd3254, %rd3253;
	shf.l.wrap.b32 	%r2257, %r2251, %r2252, 23;
	shf.l.wrap.b32 	%r2258, %r2252, %r2251, 23;
	mov.b64 	%rd3256, {%r2258, %r2257};
	xor.b64  	%rd3257, %rd3255, %rd3256;
	xor.b64  	%rd3258, %rd3227, %rd187;
	and.b64  	%rd3259, %rd3241, %rd3258;
	xor.b64  	%rd3260, %rd3259, %rd187;
	add.s64 	%rd4305, %rd4272, %rd110;
	add.s64 	%rd3261, %rd4305, %rd188;
	add.s64 	%rd3262, %rd3261, %rd4187;
	add.s64 	%rd3263, %rd3262, %rd3260;
	add.s64 	%rd3264, %rd3263, %rd3257;
	add.s64 	%rd3265, %rd3264, %rd184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2259,%dummy}, %rd3252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2260}, %rd3252;
	}
	shf.r.wrap.b32 	%r2261, %r2260, %r2259, 28;
	shf.r.wrap.b32 	%r2262, %r2259, %r2260, 28;
	mov.b64 	%rd3266, {%r2262, %r2261};
	shf.l.wrap.b32 	%r2263, %r2259, %r2260, 30;
	shf.l.wrap.b32 	%r2264, %r2260, %r2259, 30;
	mov.b64 	%rd3267, {%r2264, %r2263};
	xor.b64  	%rd3268, %rd3267, %rd3266;
	shf.l.wrap.b32 	%r2265, %r2259, %r2260, 25;
	shf.l.wrap.b32 	%r2266, %r2260, %r2259, 25;
	mov.b64 	%rd3269, {%r2266, %r2265};
	xor.b64  	%rd3270, %rd3268, %rd3269;
	xor.b64  	%rd3271, %rd3252, %rd183;
	xor.b64  	%rd3272, %rd3252, %rd3229;
	and.b64  	%rd3273, %rd3272, %rd3271;
	xor.b64  	%rd3274, %rd3273, %rd3252;
	add.s64 	%rd3275, %rd3264, %rd3274;
	add.s64 	%rd3276, %rd3275, %rd3270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2267,%dummy}, %rd3265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2268}, %rd3265;
	}
	shf.r.wrap.b32 	%r2269, %r2268, %r2267, 14;
	shf.r.wrap.b32 	%r2270, %r2267, %r2268, 14;
	mov.b64 	%rd3277, {%r2270, %r2269};
	shf.r.wrap.b32 	%r2271, %r2268, %r2267, 18;
	shf.r.wrap.b32 	%r2272, %r2267, %r2268, 18;
	mov.b64 	%rd3278, {%r2272, %r2271};
	xor.b64  	%rd3279, %rd3278, %rd3277;
	shf.l.wrap.b32 	%r2273, %r2267, %r2268, 23;
	shf.l.wrap.b32 	%r2274, %r2268, %r2267, 23;
	mov.b64 	%rd3280, {%r2274, %r2273};
	xor.b64  	%rd3281, %rd3279, %rd3280;
	xor.b64  	%rd3282, %rd3241, %rd3227;
	and.b64  	%rd3283, %rd3265, %rd3282;
	xor.b64  	%rd3284, %rd3283, %rd3227;
	add.s64 	%rd4306, %rd4273, %rd180;
	add.s64 	%rd3285, %rd4306, %rd187;
	add.s64 	%rd3286, %rd3285, %rd4188;
	add.s64 	%rd3287, %rd3286, %rd3284;
	add.s64 	%rd3288, %rd3287, %rd3281;
	add.s64 	%rd3289, %rd3288, %rd183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2275,%dummy}, %rd3276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2276}, %rd3276;
	}
	shf.r.wrap.b32 	%r2277, %r2276, %r2275, 28;
	shf.r.wrap.b32 	%r2278, %r2275, %r2276, 28;
	mov.b64 	%rd3290, {%r2278, %r2277};
	shf.l.wrap.b32 	%r2279, %r2275, %r2276, 30;
	shf.l.wrap.b32 	%r2280, %r2276, %r2275, 30;
	mov.b64 	%rd3291, {%r2280, %r2279};
	xor.b64  	%rd3292, %rd3291, %rd3290;
	shf.l.wrap.b32 	%r2281, %r2275, %r2276, 25;
	shf.l.wrap.b32 	%r2282, %r2276, %r2275, 25;
	mov.b64 	%rd3293, {%r2282, %r2281};
	xor.b64  	%rd3294, %rd3292, %rd3293;
	xor.b64  	%rd3295, %rd3276, %rd3229;
	xor.b64  	%rd3296, %rd3276, %rd3252;
	and.b64  	%rd3297, %rd3296, %rd3295;
	xor.b64  	%rd3298, %rd3297, %rd3276;
	add.s64 	%rd3299, %rd3288, %rd3298;
	add.s64 	%rd3300, %rd3299, %rd3294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2283,%dummy}, %rd3289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2284}, %rd3289;
	}
	shf.r.wrap.b32 	%r2285, %r2284, %r2283, 14;
	shf.r.wrap.b32 	%r2286, %r2283, %r2284, 14;
	mov.b64 	%rd3301, {%r2286, %r2285};
	shf.r.wrap.b32 	%r2287, %r2284, %r2283, 18;
	shf.r.wrap.b32 	%r2288, %r2283, %r2284, 18;
	mov.b64 	%rd3302, {%r2288, %r2287};
	xor.b64  	%rd3303, %rd3302, %rd3301;
	shf.l.wrap.b32 	%r2289, %r2283, %r2284, 23;
	shf.l.wrap.b32 	%r2290, %r2284, %r2283, 23;
	mov.b64 	%rd3304, {%r2290, %r2289};
	xor.b64  	%rd3305, %rd3303, %rd3304;
	xor.b64  	%rd3306, %rd3265, %rd3241;
	and.b64  	%rd3307, %rd3289, %rd3306;
	xor.b64  	%rd3308, %rd3307, %rd3241;
	add.s64 	%rd4307, %rd4274, %rd111;
	add.s64 	%rd3309, %rd3227, %rd4307;
	add.s64 	%rd3310, %rd3309, %rd4189;
	add.s64 	%rd3311, %rd3310, %rd3308;
	add.s64 	%rd3312, %rd3311, %rd3305;
	add.s64 	%rd3313, %rd3312, %rd3229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2291,%dummy}, %rd3300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2292}, %rd3300;
	}
	shf.r.wrap.b32 	%r2293, %r2292, %r2291, 28;
	shf.r.wrap.b32 	%r2294, %r2291, %r2292, 28;
	mov.b64 	%rd3314, {%r2294, %r2293};
	shf.l.wrap.b32 	%r2295, %r2291, %r2292, 30;
	shf.l.wrap.b32 	%r2296, %r2292, %r2291, 30;
	mov.b64 	%rd3315, {%r2296, %r2295};
	xor.b64  	%rd3316, %rd3315, %rd3314;
	shf.l.wrap.b32 	%r2297, %r2291, %r2292, 25;
	shf.l.wrap.b32 	%r2298, %r2292, %r2291, 25;
	mov.b64 	%rd3317, {%r2298, %r2297};
	xor.b64  	%rd3318, %rd3316, %rd3317;
	xor.b64  	%rd3319, %rd3300, %rd3252;
	xor.b64  	%rd3320, %rd3300, %rd3276;
	and.b64  	%rd3321, %rd3320, %rd3319;
	xor.b64  	%rd3322, %rd3321, %rd3300;
	add.s64 	%rd3323, %rd3312, %rd3322;
	add.s64 	%rd3324, %rd3323, %rd3318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2299,%dummy}, %rd3313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2300}, %rd3313;
	}
	shf.r.wrap.b32 	%r2301, %r2300, %r2299, 14;
	shf.r.wrap.b32 	%r2302, %r2299, %r2300, 14;
	mov.b64 	%rd3325, {%r2302, %r2301};
	shf.r.wrap.b32 	%r2303, %r2300, %r2299, 18;
	shf.r.wrap.b32 	%r2304, %r2299, %r2300, 18;
	mov.b64 	%rd3326, {%r2304, %r2303};
	xor.b64  	%rd3327, %rd3326, %rd3325;
	shf.l.wrap.b32 	%r2305, %r2299, %r2300, 23;
	shf.l.wrap.b32 	%r2306, %r2300, %r2299, 23;
	mov.b64 	%rd3328, {%r2306, %r2305};
	xor.b64  	%rd3329, %rd3327, %rd3328;
	xor.b64  	%rd3330, %rd3289, %rd3265;
	and.b64  	%rd3331, %rd3313, %rd3330;
	xor.b64  	%rd3332, %rd3331, %rd3265;
	add.s64 	%rd4308, %rd4275, %rd181;
	add.s64 	%rd3333, %rd3241, %rd4308;
	add.s64 	%rd3334, %rd3333, %rd4190;
	add.s64 	%rd3335, %rd3334, %rd3332;
	add.s64 	%rd3336, %rd3335, %rd3329;
	add.s64 	%rd3337, %rd3336, %rd3252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2307,%dummy}, %rd3324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2308}, %rd3324;
	}
	shf.r.wrap.b32 	%r2309, %r2308, %r2307, 28;
	shf.r.wrap.b32 	%r2310, %r2307, %r2308, 28;
	mov.b64 	%rd3338, {%r2310, %r2309};
	shf.l.wrap.b32 	%r2311, %r2307, %r2308, 30;
	shf.l.wrap.b32 	%r2312, %r2308, %r2307, 30;
	mov.b64 	%rd3339, {%r2312, %r2311};
	xor.b64  	%rd3340, %rd3339, %rd3338;
	shf.l.wrap.b32 	%r2313, %r2307, %r2308, 25;
	shf.l.wrap.b32 	%r2314, %r2308, %r2307, 25;
	mov.b64 	%rd3341, {%r2314, %r2313};
	xor.b64  	%rd3342, %rd3340, %rd3341;
	xor.b64  	%rd3343, %rd3324, %rd3276;
	xor.b64  	%rd3344, %rd3324, %rd3300;
	and.b64  	%rd3345, %rd3344, %rd3343;
	xor.b64  	%rd3346, %rd3345, %rd3324;
	add.s64 	%rd3347, %rd3336, %rd3346;
	add.s64 	%rd3348, %rd3347, %rd3342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2315,%dummy}, %rd3337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2316}, %rd3337;
	}
	shf.r.wrap.b32 	%r2317, %r2316, %r2315, 14;
	shf.r.wrap.b32 	%r2318, %r2315, %r2316, 14;
	mov.b64 	%rd3349, {%r2318, %r2317};
	shf.r.wrap.b32 	%r2319, %r2316, %r2315, 18;
	shf.r.wrap.b32 	%r2320, %r2315, %r2316, 18;
	mov.b64 	%rd3350, {%r2320, %r2319};
	xor.b64  	%rd3351, %rd3350, %rd3349;
	shf.l.wrap.b32 	%r2321, %r2315, %r2316, 23;
	shf.l.wrap.b32 	%r2322, %r2316, %r2315, 23;
	mov.b64 	%rd3352, {%r2322, %r2321};
	xor.b64  	%rd3353, %rd3351, %rd3352;
	xor.b64  	%rd3354, %rd3313, %rd3289;
	and.b64  	%rd3355, %rd3337, %rd3354;
	xor.b64  	%rd3356, %rd3355, %rd3289;
	add.s64 	%rd4309, %rd4276, %rd112;
	add.s64 	%rd3357, %rd3265, %rd4309;
	add.s64 	%rd3358, %rd3357, %rd4191;
	add.s64 	%rd3359, %rd3358, %rd3356;
	add.s64 	%rd3360, %rd3359, %rd3353;
	add.s64 	%rd3361, %rd3360, %rd3276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2323,%dummy}, %rd3348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2324}, %rd3348;
	}
	shf.r.wrap.b32 	%r2325, %r2324, %r2323, 28;
	shf.r.wrap.b32 	%r2326, %r2323, %r2324, 28;
	mov.b64 	%rd3362, {%r2326, %r2325};
	shf.l.wrap.b32 	%r2327, %r2323, %r2324, 30;
	shf.l.wrap.b32 	%r2328, %r2324, %r2323, 30;
	mov.b64 	%rd3363, {%r2328, %r2327};
	xor.b64  	%rd3364, %rd3363, %rd3362;
	shf.l.wrap.b32 	%r2329, %r2323, %r2324, 25;
	shf.l.wrap.b32 	%r2330, %r2324, %r2323, 25;
	mov.b64 	%rd3365, {%r2330, %r2329};
	xor.b64  	%rd3366, %rd3364, %rd3365;
	xor.b64  	%rd3367, %rd3348, %rd3300;
	xor.b64  	%rd3368, %rd3348, %rd3324;
	and.b64  	%rd3369, %rd3368, %rd3367;
	xor.b64  	%rd3370, %rd3369, %rd3348;
	add.s64 	%rd3371, %rd3360, %rd3370;
	add.s64 	%rd3372, %rd3371, %rd3366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2331,%dummy}, %rd3361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2332}, %rd3361;
	}
	shf.r.wrap.b32 	%r2333, %r2332, %r2331, 14;
	shf.r.wrap.b32 	%r2334, %r2331, %r2332, 14;
	mov.b64 	%rd3373, {%r2334, %r2333};
	shf.r.wrap.b32 	%r2335, %r2332, %r2331, 18;
	shf.r.wrap.b32 	%r2336, %r2331, %r2332, 18;
	mov.b64 	%rd3374, {%r2336, %r2335};
	xor.b64  	%rd3375, %rd3374, %rd3373;
	shf.l.wrap.b32 	%r2337, %r2331, %r2332, 23;
	shf.l.wrap.b32 	%r2338, %r2332, %r2331, 23;
	mov.b64 	%rd3376, {%r2338, %r2337};
	xor.b64  	%rd3377, %rd3375, %rd3376;
	xor.b64  	%rd3378, %rd3337, %rd3313;
	and.b64  	%rd3379, %rd3361, %rd3378;
	xor.b64  	%rd3380, %rd3379, %rd3313;
	add.s64 	%rd4310, %rd4277, %rd182;
	add.s64 	%rd3381, %rd3289, %rd4310;
	add.s64 	%rd3382, %rd3381, %rd4192;
	add.s64 	%rd3383, %rd3382, %rd3380;
	add.s64 	%rd3384, %rd3383, %rd3377;
	add.s64 	%rd3385, %rd3384, %rd3300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2339,%dummy}, %rd3372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2340}, %rd3372;
	}
	shf.r.wrap.b32 	%r2341, %r2340, %r2339, 28;
	shf.r.wrap.b32 	%r2342, %r2339, %r2340, 28;
	mov.b64 	%rd3386, {%r2342, %r2341};
	shf.l.wrap.b32 	%r2343, %r2339, %r2340, 30;
	shf.l.wrap.b32 	%r2344, %r2340, %r2339, 30;
	mov.b64 	%rd3387, {%r2344, %r2343};
	xor.b64  	%rd3388, %rd3387, %rd3386;
	shf.l.wrap.b32 	%r2345, %r2339, %r2340, 25;
	shf.l.wrap.b32 	%r2346, %r2340, %r2339, 25;
	mov.b64 	%rd3389, {%r2346, %r2345};
	xor.b64  	%rd3390, %rd3388, %rd3389;
	xor.b64  	%rd3391, %rd3372, %rd3324;
	xor.b64  	%rd3392, %rd3372, %rd3348;
	and.b64  	%rd3393, %rd3392, %rd3391;
	xor.b64  	%rd3394, %rd3393, %rd3372;
	add.s64 	%rd3395, %rd3384, %rd3394;
	add.s64 	%rd3396, %rd3395, %rd3390;
	add.s64 	%rd3397, %rd4193, %rd3313;
	xor.b64  	%rd3398, %rd3397, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2347,%dummy}, %rd3385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2348}, %rd3385;
	}
	shf.r.wrap.b32 	%r2349, %r2348, %r2347, 14;
	shf.r.wrap.b32 	%r2350, %r2347, %r2348, 14;
	mov.b64 	%rd3399, {%r2350, %r2349};
	shf.r.wrap.b32 	%r2351, %r2348, %r2347, 18;
	shf.r.wrap.b32 	%r2352, %r2347, %r2348, 18;
	mov.b64 	%rd3400, {%r2352, %r2351};
	xor.b64  	%rd3401, %rd3400, %rd3399;
	shf.l.wrap.b32 	%r2353, %r2347, %r2348, 23;
	shf.l.wrap.b32 	%r2354, %r2348, %r2347, 23;
	mov.b64 	%rd3402, {%r2354, %r2353};
	xor.b64  	%rd3403, %rd3401, %rd3402;
	xor.b64  	%rd3404, %rd3361, %rd3337;
	and.b64  	%rd3405, %rd3385, %rd3404;
	xor.b64  	%rd3406, %rd3405, %rd3337;
	add.s64 	%rd3407, %rd3398, %rd3406;
	add.s64 	%rd3408, %rd3407, %rd3403;
	add.s64 	%rd3409, %rd3408, %rd3324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2355,%dummy}, %rd3396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2356}, %rd3396;
	}
	shf.r.wrap.b32 	%r2357, %r2356, %r2355, 28;
	shf.r.wrap.b32 	%r2358, %r2355, %r2356, 28;
	mov.b64 	%rd3410, {%r2358, %r2357};
	shf.l.wrap.b32 	%r2359, %r2355, %r2356, 30;
	shf.l.wrap.b32 	%r2360, %r2356, %r2355, 30;
	mov.b64 	%rd3411, {%r2360, %r2359};
	xor.b64  	%rd3412, %rd3411, %rd3410;
	shf.l.wrap.b32 	%r2361, %r2355, %r2356, 25;
	shf.l.wrap.b32 	%r2362, %r2356, %r2355, 25;
	mov.b64 	%rd3413, {%r2362, %r2361};
	xor.b64  	%rd3414, %rd3412, %rd3413;
	xor.b64  	%rd3415, %rd3396, %rd3348;
	xor.b64  	%rd3416, %rd3396, %rd3372;
	and.b64  	%rd3417, %rd3416, %rd3415;
	xor.b64  	%rd3418, %rd3417, %rd3396;
	add.s64 	%rd3419, %rd3408, %rd3418;
	add.s64 	%rd3420, %rd3419, %rd3414;
	add.s64 	%rd3421, %rd4199, %rd3337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2363,%dummy}, %rd3409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2364}, %rd3409;
	}
	shf.r.wrap.b32 	%r2365, %r2364, %r2363, 14;
	shf.r.wrap.b32 	%r2366, %r2363, %r2364, 14;
	mov.b64 	%rd3422, {%r2366, %r2365};
	shf.r.wrap.b32 	%r2367, %r2364, %r2363, 18;
	shf.r.wrap.b32 	%r2368, %r2363, %r2364, 18;
	mov.b64 	%rd3423, {%r2368, %r2367};
	xor.b64  	%rd3424, %rd3423, %rd3422;
	shf.l.wrap.b32 	%r2369, %r2363, %r2364, 23;
	shf.l.wrap.b32 	%r2370, %r2364, %r2363, 23;
	mov.b64 	%rd3425, {%r2370, %r2369};
	xor.b64  	%rd3426, %rd3424, %rd3425;
	xor.b64  	%rd3427, %rd3385, %rd3361;
	and.b64  	%rd3428, %rd3409, %rd3427;
	xor.b64  	%rd3429, %rd3428, %rd3361;
	add.s64 	%rd3430, %rd3421, %rd3429;
	add.s64 	%rd3431, %rd3430, %rd3426;
	add.s64 	%rd3432, %rd3431, %rd3348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2371,%dummy}, %rd3420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2372}, %rd3420;
	}
	shf.r.wrap.b32 	%r2373, %r2372, %r2371, 28;
	shf.r.wrap.b32 	%r2374, %r2371, %r2372, 28;
	mov.b64 	%rd3433, {%r2374, %r2373};
	shf.l.wrap.b32 	%r2375, %r2371, %r2372, 30;
	shf.l.wrap.b32 	%r2376, %r2372, %r2371, 30;
	mov.b64 	%rd3434, {%r2376, %r2375};
	xor.b64  	%rd3435, %rd3434, %rd3433;
	shf.l.wrap.b32 	%r2377, %r2371, %r2372, 25;
	shf.l.wrap.b32 	%r2378, %r2372, %r2371, 25;
	mov.b64 	%rd3436, {%r2378, %r2377};
	xor.b64  	%rd3437, %rd3435, %rd3436;
	xor.b64  	%rd3438, %rd3420, %rd3372;
	xor.b64  	%rd3439, %rd3420, %rd3396;
	and.b64  	%rd3440, %rd3439, %rd3438;
	xor.b64  	%rd3441, %rd3440, %rd3420;
	add.s64 	%rd3442, %rd3431, %rd3441;
	add.s64 	%rd3443, %rd3442, %rd3437;
	add.s64 	%rd3444, %rd4200, %rd3361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2379,%dummy}, %rd3432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2380}, %rd3432;
	}
	shf.r.wrap.b32 	%r2381, %r2380, %r2379, 14;
	shf.r.wrap.b32 	%r2382, %r2379, %r2380, 14;
	mov.b64 	%rd3445, {%r2382, %r2381};
	shf.r.wrap.b32 	%r2383, %r2380, %r2379, 18;
	shf.r.wrap.b32 	%r2384, %r2379, %r2380, 18;
	mov.b64 	%rd3446, {%r2384, %r2383};
	xor.b64  	%rd3447, %rd3446, %rd3445;
	shf.l.wrap.b32 	%r2385, %r2379, %r2380, 23;
	shf.l.wrap.b32 	%r2386, %r2380, %r2379, 23;
	mov.b64 	%rd3448, {%r2386, %r2385};
	xor.b64  	%rd3449, %rd3447, %rd3448;
	xor.b64  	%rd3450, %rd3409, %rd3385;
	and.b64  	%rd3451, %rd3432, %rd3450;
	xor.b64  	%rd3452, %rd3451, %rd3385;
	add.s64 	%rd3453, %rd3444, %rd3452;
	add.s64 	%rd3454, %rd3453, %rd3449;
	add.s64 	%rd3455, %rd3454, %rd3372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2387,%dummy}, %rd3443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2388}, %rd3443;
	}
	shf.r.wrap.b32 	%r2389, %r2388, %r2387, 28;
	shf.r.wrap.b32 	%r2390, %r2387, %r2388, 28;
	mov.b64 	%rd3456, {%r2390, %r2389};
	shf.l.wrap.b32 	%r2391, %r2387, %r2388, 30;
	shf.l.wrap.b32 	%r2392, %r2388, %r2387, 30;
	mov.b64 	%rd3457, {%r2392, %r2391};
	xor.b64  	%rd3458, %rd3457, %rd3456;
	shf.l.wrap.b32 	%r2393, %r2387, %r2388, 25;
	shf.l.wrap.b32 	%r2394, %r2388, %r2387, 25;
	mov.b64 	%rd3459, {%r2394, %r2393};
	xor.b64  	%rd3460, %rd3458, %rd3459;
	xor.b64  	%rd3461, %rd3443, %rd3396;
	xor.b64  	%rd3462, %rd3443, %rd3420;
	and.b64  	%rd3463, %rd3462, %rd3461;
	xor.b64  	%rd3464, %rd3463, %rd3443;
	add.s64 	%rd3465, %rd3454, %rd3464;
	add.s64 	%rd3466, %rd3465, %rd3460;
	add.s64 	%rd3467, %rd4201, %rd3385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2395,%dummy}, %rd3455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2396}, %rd3455;
	}
	shf.r.wrap.b32 	%r2397, %r2396, %r2395, 14;
	shf.r.wrap.b32 	%r2398, %r2395, %r2396, 14;
	mov.b64 	%rd3468, {%r2398, %r2397};
	shf.r.wrap.b32 	%r2399, %r2396, %r2395, 18;
	shf.r.wrap.b32 	%r2400, %r2395, %r2396, 18;
	mov.b64 	%rd3469, {%r2400, %r2399};
	xor.b64  	%rd3470, %rd3469, %rd3468;
	shf.l.wrap.b32 	%r2401, %r2395, %r2396, 23;
	shf.l.wrap.b32 	%r2402, %r2396, %r2395, 23;
	mov.b64 	%rd3471, {%r2402, %r2401};
	xor.b64  	%rd3472, %rd3470, %rd3471;
	xor.b64  	%rd3473, %rd3432, %rd3409;
	and.b64  	%rd3474, %rd3455, %rd3473;
	xor.b64  	%rd3475, %rd3474, %rd3409;
	add.s64 	%rd3476, %rd3467, %rd3475;
	add.s64 	%rd3477, %rd3476, %rd3472;
	add.s64 	%rd3478, %rd3477, %rd3396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2403,%dummy}, %rd3466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2404}, %rd3466;
	}
	shf.r.wrap.b32 	%r2405, %r2404, %r2403, 28;
	shf.r.wrap.b32 	%r2406, %r2403, %r2404, 28;
	mov.b64 	%rd3479, {%r2406, %r2405};
	shf.l.wrap.b32 	%r2407, %r2403, %r2404, 30;
	shf.l.wrap.b32 	%r2408, %r2404, %r2403, 30;
	mov.b64 	%rd3480, {%r2408, %r2407};
	xor.b64  	%rd3481, %rd3480, %rd3479;
	shf.l.wrap.b32 	%r2409, %r2403, %r2404, 25;
	shf.l.wrap.b32 	%r2410, %r2404, %r2403, 25;
	mov.b64 	%rd3482, {%r2410, %r2409};
	xor.b64  	%rd3483, %rd3481, %rd3482;
	xor.b64  	%rd3484, %rd3466, %rd3420;
	xor.b64  	%rd3485, %rd3466, %rd3443;
	and.b64  	%rd3486, %rd3485, %rd3484;
	xor.b64  	%rd3487, %rd3486, %rd3466;
	add.s64 	%rd3488, %rd3477, %rd3487;
	add.s64 	%rd3489, %rd3488, %rd3483;
	add.s64 	%rd3490, %rd4202, %rd3409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2411,%dummy}, %rd3478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2412}, %rd3478;
	}
	shf.r.wrap.b32 	%r2413, %r2412, %r2411, 14;
	shf.r.wrap.b32 	%r2414, %r2411, %r2412, 14;
	mov.b64 	%rd3491, {%r2414, %r2413};
	shf.r.wrap.b32 	%r2415, %r2412, %r2411, 18;
	shf.r.wrap.b32 	%r2416, %r2411, %r2412, 18;
	mov.b64 	%rd3492, {%r2416, %r2415};
	xor.b64  	%rd3493, %rd3492, %rd3491;
	shf.l.wrap.b32 	%r2417, %r2411, %r2412, 23;
	shf.l.wrap.b32 	%r2418, %r2412, %r2411, 23;
	mov.b64 	%rd3494, {%r2418, %r2417};
	xor.b64  	%rd3495, %rd3493, %rd3494;
	xor.b64  	%rd3496, %rd3455, %rd3432;
	and.b64  	%rd3497, %rd3478, %rd3496;
	xor.b64  	%rd3498, %rd3497, %rd3432;
	add.s64 	%rd3499, %rd3490, %rd3498;
	add.s64 	%rd3500, %rd3499, %rd3495;
	add.s64 	%rd4302, %rd3500, %rd3420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2419,%dummy}, %rd3489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2420}, %rd3489;
	}
	shf.r.wrap.b32 	%r2421, %r2420, %r2419, 28;
	shf.r.wrap.b32 	%r2422, %r2419, %r2420, 28;
	mov.b64 	%rd3501, {%r2422, %r2421};
	shf.l.wrap.b32 	%r2423, %r2419, %r2420, 30;
	shf.l.wrap.b32 	%r2424, %r2420, %r2419, 30;
	mov.b64 	%rd3502, {%r2424, %r2423};
	xor.b64  	%rd3503, %rd3502, %rd3501;
	shf.l.wrap.b32 	%r2425, %r2419, %r2420, 25;
	shf.l.wrap.b32 	%r2426, %r2420, %r2419, 25;
	mov.b64 	%rd3504, {%r2426, %r2425};
	xor.b64  	%rd3505, %rd3503, %rd3504;
	xor.b64  	%rd3506, %rd3489, %rd3443;
	xor.b64  	%rd3507, %rd3489, %rd3466;
	and.b64  	%rd3508, %rd3507, %rd3506;
	xor.b64  	%rd3509, %rd3508, %rd3489;
	add.s64 	%rd3510, %rd3500, %rd3509;
	add.s64 	%rd4298, %rd3510, %rd3505;
	add.s64 	%rd3511, %rd4203, %rd3432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2427,%dummy}, %rd4302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2428}, %rd4302;
	}
	shf.r.wrap.b32 	%r2429, %r2428, %r2427, 14;
	shf.r.wrap.b32 	%r2430, %r2427, %r2428, 14;
	mov.b64 	%rd3512, {%r2430, %r2429};
	shf.r.wrap.b32 	%r2431, %r2428, %r2427, 18;
	shf.r.wrap.b32 	%r2432, %r2427, %r2428, 18;
	mov.b64 	%rd3513, {%r2432, %r2431};
	xor.b64  	%rd3514, %rd3513, %rd3512;
	shf.l.wrap.b32 	%r2433, %r2427, %r2428, 23;
	shf.l.wrap.b32 	%r2434, %r2428, %r2427, 23;
	mov.b64 	%rd3515, {%r2434, %r2433};
	xor.b64  	%rd3516, %rd3514, %rd3515;
	xor.b64  	%rd3517, %rd3478, %rd3455;
	and.b64  	%rd3518, %rd4302, %rd3517;
	xor.b64  	%rd3519, %rd3518, %rd3455;
	add.s64 	%rd3520, %rd3511, %rd3519;
	add.s64 	%rd3521, %rd3520, %rd3516;
	add.s64 	%rd4301, %rd3521, %rd3443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2435,%dummy}, %rd4298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2436}, %rd4298;
	}
	shf.r.wrap.b32 	%r2437, %r2436, %r2435, 28;
	shf.r.wrap.b32 	%r2438, %r2435, %r2436, 28;
	mov.b64 	%rd3522, {%r2438, %r2437};
	shf.l.wrap.b32 	%r2439, %r2435, %r2436, 30;
	shf.l.wrap.b32 	%r2440, %r2436, %r2435, 30;
	mov.b64 	%rd3523, {%r2440, %r2439};
	xor.b64  	%rd3524, %rd3523, %rd3522;
	shf.l.wrap.b32 	%r2441, %r2435, %r2436, 25;
	shf.l.wrap.b32 	%r2442, %r2436, %r2435, 25;
	mov.b64 	%rd3525, {%r2442, %r2441};
	xor.b64  	%rd3526, %rd3524, %rd3525;
	xor.b64  	%rd3527, %rd4298, %rd3466;
	xor.b64  	%rd3528, %rd4298, %rd3489;
	and.b64  	%rd3529, %rd3528, %rd3527;
	xor.b64  	%rd3530, %rd3529, %rd4298;
	add.s64 	%rd3531, %rd3521, %rd3530;
	add.s64 	%rd4297, %rd3531, %rd3526;
	add.s64 	%rd3532, %rd4213, %rd3455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2443,%dummy}, %rd4301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2444}, %rd4301;
	}
	shf.r.wrap.b32 	%r2445, %r2444, %r2443, 14;
	shf.r.wrap.b32 	%r2446, %r2443, %r2444, 14;
	mov.b64 	%rd3533, {%r2446, %r2445};
	shf.r.wrap.b32 	%r2447, %r2444, %r2443, 18;
	shf.r.wrap.b32 	%r2448, %r2443, %r2444, 18;
	mov.b64 	%rd3534, {%r2448, %r2447};
	xor.b64  	%rd3535, %rd3534, %rd3533;
	shf.l.wrap.b32 	%r2449, %r2443, %r2444, 23;
	shf.l.wrap.b32 	%r2450, %r2444, %r2443, 23;
	mov.b64 	%rd3536, {%r2450, %r2449};
	xor.b64  	%rd3537, %rd3535, %rd3536;
	xor.b64  	%rd3538, %rd4302, %rd3478;
	and.b64  	%rd3539, %rd4301, %rd3538;
	xor.b64  	%rd3540, %rd3539, %rd3478;
	add.s64 	%rd3541, %rd3532, %rd3540;
	add.s64 	%rd3542, %rd3541, %rd3537;
	add.s64 	%rd4300, %rd3542, %rd3466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2451,%dummy}, %rd4297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2452}, %rd4297;
	}
	shf.r.wrap.b32 	%r2453, %r2452, %r2451, 28;
	shf.r.wrap.b32 	%r2454, %r2451, %r2452, 28;
	mov.b64 	%rd3543, {%r2454, %r2453};
	shf.l.wrap.b32 	%r2455, %r2451, %r2452, 30;
	shf.l.wrap.b32 	%r2456, %r2452, %r2451, 30;
	mov.b64 	%rd3544, {%r2456, %r2455};
	xor.b64  	%rd3545, %rd3544, %rd3543;
	shf.l.wrap.b32 	%r2457, %r2451, %r2452, 25;
	shf.l.wrap.b32 	%r2458, %r2452, %r2451, 25;
	mov.b64 	%rd3546, {%r2458, %r2457};
	xor.b64  	%rd3547, %rd3545, %rd3546;
	xor.b64  	%rd3548, %rd4297, %rd3489;
	xor.b64  	%rd3549, %rd4297, %rd4298;
	and.b64  	%rd3550, %rd3549, %rd3548;
	xor.b64  	%rd3551, %rd3550, %rd4297;
	add.s64 	%rd3552, %rd3542, %rd3551;
	add.s64 	%rd4296, %rd3552, %rd3547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2459,%dummy}, %rd4300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2460}, %rd4300;
	}
	shf.r.wrap.b32 	%r2461, %r2460, %r2459, 14;
	shf.r.wrap.b32 	%r2462, %r2459, %r2460, 14;
	mov.b64 	%rd3553, {%r2462, %r2461};
	shf.r.wrap.b32 	%r2463, %r2460, %r2459, 18;
	shf.r.wrap.b32 	%r2464, %r2459, %r2460, 18;
	mov.b64 	%rd3554, {%r2464, %r2463};
	xor.b64  	%rd3555, %rd3554, %rd3553;
	shf.l.wrap.b32 	%r2465, %r2459, %r2460, 23;
	shf.l.wrap.b32 	%r2466, %r2460, %r2459, 23;
	mov.b64 	%rd3556, {%r2466, %r2465};
	xor.b64  	%rd3557, %rd3555, %rd3556;
	xor.b64  	%rd3558, %rd4301, %rd4302;
	and.b64  	%rd3559, %rd4300, %rd3558;
	xor.b64  	%rd3560, %rd3559, %rd4302;
	add.s64 	%rd3561, %rd3478, %rd4214;
	add.s64 	%rd3562, %rd3561, %rd3560;
	add.s64 	%rd3563, %rd3562, %rd3557;
	add.s64 	%rd3564, %rd3563, 1536;
	add.s64 	%rd4299, %rd3564, %rd3489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2467,%dummy}, %rd4296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2468}, %rd4296;
	}
	shf.r.wrap.b32 	%r2469, %r2468, %r2467, 28;
	shf.r.wrap.b32 	%r2470, %r2467, %r2468, 28;
	mov.b64 	%rd3565, {%r2470, %r2469};
	shf.l.wrap.b32 	%r2471, %r2467, %r2468, 30;
	shf.l.wrap.b32 	%r2472, %r2468, %r2467, 30;
	mov.b64 	%rd3566, {%r2472, %r2471};
	xor.b64  	%rd3567, %rd3566, %rd3565;
	shf.l.wrap.b32 	%r2473, %r2467, %r2468, 25;
	shf.l.wrap.b32 	%r2474, %r2468, %r2467, 25;
	mov.b64 	%rd3568, {%r2474, %r2473};
	xor.b64  	%rd3569, %rd3567, %rd3568;
	xor.b64  	%rd3570, %rd4296, %rd4298;
	xor.b64  	%rd3571, %rd4296, %rd4297;
	and.b64  	%rd3572, %rd3571, %rd3570;
	xor.b64  	%rd3573, %rd3572, %rd4296;
	add.s64 	%rd3574, %rd3564, %rd3573;
	add.s64 	%rd4295, %rd3574, %rd3569;
	mov.u64 	%rd4312, 0;
	mov.u64 	%rd4311, -9223372036854775808;
	mov.u64 	%rd4294, 1536;
	mov.u32 	%r2920, 16;
	mov.u64 	%rd4293, k_sha512;
	mov.u64 	%rd4313, %rd4312;
	mov.u64 	%rd4314, %rd4312;
	mov.u64 	%rd4315, %rd4312;
	mov.u64 	%rd4316, %rd4312;
	mov.u64 	%rd4317, %rd4312;

BB1_8:
	shr.u64 	%rd3575, %rd4317, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2475,%dummy}, %rd4317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2476}, %rd4317;
	}
	shf.r.wrap.b32 	%r2477, %r2476, %r2475, 19;
	shf.r.wrap.b32 	%r2478, %r2475, %r2476, 19;
	mov.b64 	%rd3576, {%r2478, %r2477};
	xor.b64  	%rd3577, %rd3576, %rd3575;
	shf.l.wrap.b32 	%r2479, %r2475, %r2476, 3;
	shf.l.wrap.b32 	%r2480, %r2476, %r2475, 3;
	mov.b64 	%rd3578, {%r2480, %r2479};
	xor.b64  	%rd3579, %rd3577, %rd3578;
	shr.u64 	%rd3580, %rd4304, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2481,%dummy}, %rd4304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2482}, %rd4304;
	}
	shf.r.wrap.b32 	%r2483, %r2482, %r2481, 1;
	shf.r.wrap.b32 	%r2484, %r2481, %r2482, 1;
	mov.b64 	%rd3581, {%r2484, %r2483};
	xor.b64  	%rd3582, %rd3581, %rd3580;
	shf.r.wrap.b32 	%r2485, %r2482, %r2481, 8;
	shf.r.wrap.b32 	%r2486, %r2481, %r2482, 8;
	mov.b64 	%rd3583, {%r2486, %r2485};
	xor.b64  	%rd3584, %rd3582, %rd3583;
	add.s64 	%rd3585, %rd4303, %rd4312;
	add.s64 	%rd3586, %rd3585, %rd3579;
	add.s64 	%rd4303, %rd3586, %rd3584;
	shr.u64 	%rd3587, %rd4294, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2487,%dummy}, %rd4294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2488}, %rd4294;
	}
	shf.r.wrap.b32 	%r2489, %r2488, %r2487, 19;
	shf.r.wrap.b32 	%r2490, %r2487, %r2488, 19;
	mov.b64 	%rd3588, {%r2490, %r2489};
	xor.b64  	%rd3589, %rd3588, %rd3587;
	shf.l.wrap.b32 	%r2491, %r2487, %r2488, 3;
	shf.l.wrap.b32 	%r2492, %r2488, %r2487, 3;
	mov.b64 	%rd3590, {%r2492, %r2491};
	xor.b64  	%rd3591, %rd3589, %rd3590;
	shr.u64 	%rd3592, %rd4305, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2493,%dummy}, %rd4305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2494}, %rd4305;
	}
	shf.r.wrap.b32 	%r2495, %r2494, %r2493, 1;
	shf.r.wrap.b32 	%r2496, %r2493, %r2494, 1;
	mov.b64 	%rd3593, {%r2496, %r2495};
	xor.b64  	%rd3594, %rd3593, %rd3592;
	shf.r.wrap.b32 	%r2497, %r2494, %r2493, 8;
	shf.r.wrap.b32 	%r2498, %r2493, %r2494, 8;
	mov.b64 	%rd3595, {%r2498, %r2497};
	xor.b64  	%rd3596, %rd3594, %rd3595;
	add.s64 	%rd3597, %rd4304, %rd4313;
	add.s64 	%rd3598, %rd3597, %rd3591;
	add.s64 	%rd4304, %rd3598, %rd3596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2499,%dummy}, %rd4303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2500}, %rd4303;
	}
	shf.r.wrap.b32 	%r2501, %r2500, %r2499, 19;
	shf.r.wrap.b32 	%r2502, %r2499, %r2500, 19;
	mov.b64 	%rd3599, {%r2502, %r2501};
	shf.l.wrap.b32 	%r2503, %r2499, %r2500, 3;
	shf.l.wrap.b32 	%r2504, %r2500, %r2499, 3;
	mov.b64 	%rd3600, {%r2504, %r2503};
	shr.u64 	%rd3601, %rd4303, 6;
	xor.b64  	%rd3602, %rd3599, %rd3601;
	xor.b64  	%rd3603, %rd3602, %rd3600;
	shr.u64 	%rd3604, %rd4306, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2505,%dummy}, %rd4306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2506}, %rd4306;
	}
	shf.r.wrap.b32 	%r2507, %r2506, %r2505, 1;
	shf.r.wrap.b32 	%r2508, %r2505, %r2506, 1;
	mov.b64 	%rd3605, {%r2508, %r2507};
	xor.b64  	%rd3606, %rd3605, %rd3604;
	shf.r.wrap.b32 	%r2509, %r2506, %r2505, 8;
	shf.r.wrap.b32 	%r2510, %r2505, %r2506, 8;
	mov.b64 	%rd3607, {%r2510, %r2509};
	xor.b64  	%rd3608, %rd3606, %rd3607;
	add.s64 	%rd3609, %rd4305, %rd4314;
	add.s64 	%rd3610, %rd3609, %rd3603;
	add.s64 	%rd4305, %rd3610, %rd3608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2511,%dummy}, %rd4304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2512}, %rd4304;
	}
	shf.r.wrap.b32 	%r2513, %r2512, %r2511, 19;
	shf.r.wrap.b32 	%r2514, %r2511, %r2512, 19;
	mov.b64 	%rd3611, {%r2514, %r2513};
	shf.l.wrap.b32 	%r2515, %r2511, %r2512, 3;
	shf.l.wrap.b32 	%r2516, %r2512, %r2511, 3;
	mov.b64 	%rd3612, {%r2516, %r2515};
	shr.u64 	%rd3613, %rd4304, 6;
	xor.b64  	%rd3614, %rd3611, %rd3613;
	xor.b64  	%rd3615, %rd3614, %rd3612;
	shr.u64 	%rd3616, %rd4307, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2517,%dummy}, %rd4307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2518}, %rd4307;
	}
	shf.r.wrap.b32 	%r2519, %r2518, %r2517, 1;
	shf.r.wrap.b32 	%r2520, %r2517, %r2518, 1;
	mov.b64 	%rd3617, {%r2520, %r2519};
	xor.b64  	%rd3618, %rd3617, %rd3616;
	shf.r.wrap.b32 	%r2521, %r2518, %r2517, 8;
	shf.r.wrap.b32 	%r2522, %r2517, %r2518, 8;
	mov.b64 	%rd3619, {%r2522, %r2521};
	xor.b64  	%rd3620, %rd3618, %rd3619;
	add.s64 	%rd3621, %rd4306, %rd4315;
	add.s64 	%rd3622, %rd3621, %rd3615;
	add.s64 	%rd4306, %rd3622, %rd3620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2523,%dummy}, %rd4305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2524}, %rd4305;
	}
	shf.r.wrap.b32 	%r2525, %r2524, %r2523, 19;
	shf.r.wrap.b32 	%r2526, %r2523, %r2524, 19;
	mov.b64 	%rd3623, {%r2526, %r2525};
	shf.l.wrap.b32 	%r2527, %r2523, %r2524, 3;
	shf.l.wrap.b32 	%r2528, %r2524, %r2523, 3;
	mov.b64 	%rd3624, {%r2528, %r2527};
	shr.u64 	%rd3625, %rd4305, 6;
	xor.b64  	%rd3626, %rd3623, %rd3625;
	xor.b64  	%rd3627, %rd3626, %rd3624;
	shr.u64 	%rd3628, %rd4308, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2529,%dummy}, %rd4308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2530}, %rd4308;
	}
	shf.r.wrap.b32 	%r2531, %r2530, %r2529, 1;
	shf.r.wrap.b32 	%r2532, %r2529, %r2530, 1;
	mov.b64 	%rd3629, {%r2532, %r2531};
	xor.b64  	%rd3630, %rd3629, %rd3628;
	shf.r.wrap.b32 	%r2533, %r2530, %r2529, 8;
	shf.r.wrap.b32 	%r2534, %r2529, %r2530, 8;
	mov.b64 	%rd3631, {%r2534, %r2533};
	xor.b64  	%rd3632, %rd3630, %rd3631;
	add.s64 	%rd3633, %rd4307, %rd4316;
	add.s64 	%rd3634, %rd3633, %rd3627;
	add.s64 	%rd4307, %rd3634, %rd3632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2535,%dummy}, %rd4306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2536}, %rd4306;
	}
	shf.r.wrap.b32 	%r2537, %r2536, %r2535, 19;
	shf.r.wrap.b32 	%r2538, %r2535, %r2536, 19;
	mov.b64 	%rd3635, {%r2538, %r2537};
	shf.l.wrap.b32 	%r2539, %r2535, %r2536, 3;
	shf.l.wrap.b32 	%r2540, %r2536, %r2535, 3;
	mov.b64 	%rd3636, {%r2540, %r2539};
	shr.u64 	%rd3637, %rd4306, 6;
	xor.b64  	%rd3638, %rd3635, %rd3637;
	xor.b64  	%rd3639, %rd3638, %rd3636;
	shr.u64 	%rd3640, %rd4309, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2541,%dummy}, %rd4309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2542}, %rd4309;
	}
	shf.r.wrap.b32 	%r2543, %r2542, %r2541, 1;
	shf.r.wrap.b32 	%r2544, %r2541, %r2542, 1;
	mov.b64 	%rd3641, {%r2544, %r2543};
	xor.b64  	%rd3642, %rd3641, %rd3640;
	shf.r.wrap.b32 	%r2545, %r2542, %r2541, 8;
	shf.r.wrap.b32 	%r2546, %r2541, %r2542, 8;
	mov.b64 	%rd3643, {%r2546, %r2545};
	xor.b64  	%rd3644, %rd3642, %rd3643;
	add.s64 	%rd3645, %rd4308, %rd4317;
	add.s64 	%rd3646, %rd3645, %rd3639;
	add.s64 	%rd4308, %rd3646, %rd3644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2547,%dummy}, %rd4307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2548}, %rd4307;
	}
	shf.r.wrap.b32 	%r2549, %r2548, %r2547, 19;
	shf.r.wrap.b32 	%r2550, %r2547, %r2548, 19;
	mov.b64 	%rd3647, {%r2550, %r2549};
	shf.l.wrap.b32 	%r2551, %r2547, %r2548, 3;
	shf.l.wrap.b32 	%r2552, %r2548, %r2547, 3;
	mov.b64 	%rd3648, {%r2552, %r2551};
	shr.u64 	%rd3649, %rd4307, 6;
	xor.b64  	%rd3650, %rd3647, %rd3649;
	xor.b64  	%rd3651, %rd3650, %rd3648;
	shr.u64 	%rd3652, %rd4310, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2553,%dummy}, %rd4310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2554}, %rd4310;
	}
	shf.r.wrap.b32 	%r2555, %r2554, %r2553, 1;
	shf.r.wrap.b32 	%r2556, %r2553, %r2554, 1;
	mov.b64 	%rd3653, {%r2556, %r2555};
	xor.b64  	%rd3654, %rd3653, %rd3652;
	shf.r.wrap.b32 	%r2557, %r2554, %r2553, 8;
	shf.r.wrap.b32 	%r2558, %r2553, %r2554, 8;
	mov.b64 	%rd3655, {%r2558, %r2557};
	xor.b64  	%rd3656, %rd3654, %rd3655;
	add.s64 	%rd3657, %rd4294, %rd4309;
	add.s64 	%rd3658, %rd3657, %rd3651;
	add.s64 	%rd4309, %rd3658, %rd3656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2559,%dummy}, %rd4308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2560}, %rd4308;
	}
	shf.r.wrap.b32 	%r2561, %r2560, %r2559, 19;
	shf.r.wrap.b32 	%r2562, %r2559, %r2560, 19;
	mov.b64 	%rd3659, {%r2562, %r2561};
	shf.l.wrap.b32 	%r2563, %r2559, %r2560, 3;
	shf.l.wrap.b32 	%r2564, %r2560, %r2559, 3;
	mov.b64 	%rd3660, {%r2564, %r2563};
	shr.u64 	%rd3661, %rd4308, 6;
	xor.b64  	%rd3662, %rd3659, %rd3661;
	xor.b64  	%rd3663, %rd3662, %rd3660;
	shr.u64 	%rd3664, %rd4311, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2565,%dummy}, %rd4311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2566}, %rd4311;
	}
	shf.r.wrap.b32 	%r2567, %r2566, %r2565, 1;
	shf.r.wrap.b32 	%r2568, %r2565, %r2566, 1;
	mov.b64 	%rd3665, {%r2568, %r2567};
	xor.b64  	%rd3666, %rd3665, %rd3664;
	shf.r.wrap.b32 	%r2569, %r2566, %r2565, 8;
	shf.r.wrap.b32 	%r2570, %r2565, %r2566, 8;
	mov.b64 	%rd3667, {%r2570, %r2569};
	xor.b64  	%rd3668, %rd3666, %rd3667;
	add.s64 	%rd3669, %rd4303, %rd4310;
	add.s64 	%rd3670, %rd3669, %rd3663;
	add.s64 	%rd4310, %rd3670, %rd3668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2571,%dummy}, %rd4309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2572}, %rd4309;
	}
	shf.r.wrap.b32 	%r2573, %r2572, %r2571, 19;
	shf.r.wrap.b32 	%r2574, %r2571, %r2572, 19;
	mov.b64 	%rd3671, {%r2574, %r2573};
	shf.l.wrap.b32 	%r2575, %r2571, %r2572, 3;
	shf.l.wrap.b32 	%r2576, %r2572, %r2571, 3;
	mov.b64 	%rd3672, {%r2576, %r2575};
	shr.u64 	%rd3673, %rd4309, 6;
	xor.b64  	%rd3674, %rd3671, %rd3673;
	xor.b64  	%rd3675, %rd3674, %rd3672;
	shr.u64 	%rd3676, %rd4312, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2577,%dummy}, %rd4312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2578}, %rd4312;
	}
	shf.r.wrap.b32 	%r2579, %r2578, %r2577, 1;
	shf.r.wrap.b32 	%r2580, %r2577, %r2578, 1;
	mov.b64 	%rd3677, {%r2580, %r2579};
	xor.b64  	%rd3678, %rd3677, %rd3676;
	shf.r.wrap.b32 	%r2581, %r2578, %r2577, 8;
	shf.r.wrap.b32 	%r2582, %r2577, %r2578, 8;
	mov.b64 	%rd3679, {%r2582, %r2581};
	xor.b64  	%rd3680, %rd3678, %rd3679;
	add.s64 	%rd3681, %rd4304, %rd4311;
	add.s64 	%rd3682, %rd3681, %rd3675;
	add.s64 	%rd4311, %rd3682, %rd3680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2583,%dummy}, %rd4310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2584}, %rd4310;
	}
	shf.r.wrap.b32 	%r2585, %r2584, %r2583, 19;
	shf.r.wrap.b32 	%r2586, %r2583, %r2584, 19;
	mov.b64 	%rd3683, {%r2586, %r2585};
	shf.l.wrap.b32 	%r2587, %r2583, %r2584, 3;
	shf.l.wrap.b32 	%r2588, %r2584, %r2583, 3;
	mov.b64 	%rd3684, {%r2588, %r2587};
	shr.u64 	%rd3685, %rd4310, 6;
	xor.b64  	%rd3686, %rd3683, %rd3685;
	xor.b64  	%rd3687, %rd3686, %rd3684;
	shr.u64 	%rd3688, %rd4313, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2589,%dummy}, %rd4313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2590}, %rd4313;
	}
	shf.r.wrap.b32 	%r2591, %r2590, %r2589, 1;
	shf.r.wrap.b32 	%r2592, %r2589, %r2590, 1;
	mov.b64 	%rd3689, {%r2592, %r2591};
	xor.b64  	%rd3690, %rd3689, %rd3688;
	shf.r.wrap.b32 	%r2593, %r2590, %r2589, 8;
	shf.r.wrap.b32 	%r2594, %r2589, %r2590, 8;
	mov.b64 	%rd3691, {%r2594, %r2593};
	xor.b64  	%rd3692, %rd3690, %rd3691;
	add.s64 	%rd3693, %rd4305, %rd4312;
	add.s64 	%rd3694, %rd3693, %rd3687;
	add.s64 	%rd4312, %rd3694, %rd3692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2595,%dummy}, %rd4311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2596}, %rd4311;
	}
	shf.r.wrap.b32 	%r2597, %r2596, %r2595, 19;
	shf.r.wrap.b32 	%r2598, %r2595, %r2596, 19;
	mov.b64 	%rd3695, {%r2598, %r2597};
	shf.l.wrap.b32 	%r2599, %r2595, %r2596, 3;
	shf.l.wrap.b32 	%r2600, %r2596, %r2595, 3;
	mov.b64 	%rd3696, {%r2600, %r2599};
	shr.u64 	%rd3697, %rd4311, 6;
	xor.b64  	%rd3698, %rd3695, %rd3697;
	xor.b64  	%rd3699, %rd3698, %rd3696;
	shr.u64 	%rd3700, %rd4314, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2601,%dummy}, %rd4314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2602}, %rd4314;
	}
	shf.r.wrap.b32 	%r2603, %r2602, %r2601, 1;
	shf.r.wrap.b32 	%r2604, %r2601, %r2602, 1;
	mov.b64 	%rd3701, {%r2604, %r2603};
	xor.b64  	%rd3702, %rd3701, %rd3700;
	shf.r.wrap.b32 	%r2605, %r2602, %r2601, 8;
	shf.r.wrap.b32 	%r2606, %r2601, %r2602, 8;
	mov.b64 	%rd3703, {%r2606, %r2605};
	xor.b64  	%rd3704, %rd3702, %rd3703;
	add.s64 	%rd3705, %rd4306, %rd4313;
	add.s64 	%rd3706, %rd3705, %rd3699;
	add.s64 	%rd4313, %rd3706, %rd3704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2607,%dummy}, %rd4312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2608}, %rd4312;
	}
	shf.r.wrap.b32 	%r2609, %r2608, %r2607, 19;
	shf.r.wrap.b32 	%r2610, %r2607, %r2608, 19;
	mov.b64 	%rd3707, {%r2610, %r2609};
	shf.l.wrap.b32 	%r2611, %r2607, %r2608, 3;
	shf.l.wrap.b32 	%r2612, %r2608, %r2607, 3;
	mov.b64 	%rd3708, {%r2612, %r2611};
	shr.u64 	%rd3709, %rd4312, 6;
	xor.b64  	%rd3710, %rd3707, %rd3709;
	xor.b64  	%rd3711, %rd3710, %rd3708;
	shr.u64 	%rd3712, %rd4315, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2613,%dummy}, %rd4315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2614}, %rd4315;
	}
	shf.r.wrap.b32 	%r2615, %r2614, %r2613, 1;
	shf.r.wrap.b32 	%r2616, %r2613, %r2614, 1;
	mov.b64 	%rd3713, {%r2616, %r2615};
	xor.b64  	%rd3714, %rd3713, %rd3712;
	shf.r.wrap.b32 	%r2617, %r2614, %r2613, 8;
	shf.r.wrap.b32 	%r2618, %r2613, %r2614, 8;
	mov.b64 	%rd3715, {%r2618, %r2617};
	xor.b64  	%rd3716, %rd3714, %rd3715;
	add.s64 	%rd3717, %rd4307, %rd4314;
	add.s64 	%rd3718, %rd3717, %rd3711;
	add.s64 	%rd4314, %rd3718, %rd3716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2619,%dummy}, %rd4313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2620}, %rd4313;
	}
	shf.r.wrap.b32 	%r2621, %r2620, %r2619, 19;
	shf.r.wrap.b32 	%r2622, %r2619, %r2620, 19;
	mov.b64 	%rd3719, {%r2622, %r2621};
	shf.l.wrap.b32 	%r2623, %r2619, %r2620, 3;
	shf.l.wrap.b32 	%r2624, %r2620, %r2619, 3;
	mov.b64 	%rd3720, {%r2624, %r2623};
	shr.u64 	%rd3721, %rd4313, 6;
	xor.b64  	%rd3722, %rd3719, %rd3721;
	xor.b64  	%rd3723, %rd3722, %rd3720;
	shr.u64 	%rd3724, %rd4316, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2625,%dummy}, %rd4316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2626}, %rd4316;
	}
	shf.r.wrap.b32 	%r2627, %r2626, %r2625, 1;
	shf.r.wrap.b32 	%r2628, %r2625, %r2626, 1;
	mov.b64 	%rd3725, {%r2628, %r2627};
	xor.b64  	%rd3726, %rd3725, %rd3724;
	shf.r.wrap.b32 	%r2629, %r2626, %r2625, 8;
	shf.r.wrap.b32 	%r2630, %r2625, %r2626, 8;
	mov.b64 	%rd3727, {%r2630, %r2629};
	xor.b64  	%rd3728, %rd3726, %rd3727;
	add.s64 	%rd3729, %rd4308, %rd4315;
	add.s64 	%rd3730, %rd3729, %rd3723;
	add.s64 	%rd4315, %rd3730, %rd3728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2631,%dummy}, %rd4314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2632}, %rd4314;
	}
	shf.r.wrap.b32 	%r2633, %r2632, %r2631, 19;
	shf.r.wrap.b32 	%r2634, %r2631, %r2632, 19;
	mov.b64 	%rd3731, {%r2634, %r2633};
	shf.l.wrap.b32 	%r2635, %r2631, %r2632, 3;
	shf.l.wrap.b32 	%r2636, %r2632, %r2631, 3;
	mov.b64 	%rd3732, {%r2636, %r2635};
	shr.u64 	%rd3733, %rd4314, 6;
	xor.b64  	%rd3734, %rd3731, %rd3733;
	xor.b64  	%rd3735, %rd3734, %rd3732;
	shr.u64 	%rd3736, %rd4317, 7;
	shf.r.wrap.b32 	%r2637, %r2476, %r2475, 1;
	shf.r.wrap.b32 	%r2638, %r2475, %r2476, 1;
	mov.b64 	%rd3737, {%r2638, %r2637};
	xor.b64  	%rd3738, %rd3737, %rd3736;
	shf.r.wrap.b32 	%r2639, %r2476, %r2475, 8;
	shf.r.wrap.b32 	%r2640, %r2475, %r2476, 8;
	mov.b64 	%rd3739, {%r2640, %r2639};
	xor.b64  	%rd3740, %rd3738, %rd3739;
	add.s64 	%rd3741, %rd4309, %rd4316;
	add.s64 	%rd3742, %rd3741, %rd3735;
	add.s64 	%rd4316, %rd3742, %rd3740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2641,%dummy}, %rd4315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2642}, %rd4315;
	}
	shf.r.wrap.b32 	%r2643, %r2642, %r2641, 19;
	shf.r.wrap.b32 	%r2644, %r2641, %r2642, 19;
	mov.b64 	%rd3743, {%r2644, %r2643};
	shf.l.wrap.b32 	%r2645, %r2641, %r2642, 3;
	shf.l.wrap.b32 	%r2646, %r2642, %r2641, 3;
	mov.b64 	%rd3744, {%r2646, %r2645};
	shr.u64 	%rd3745, %rd4315, 6;
	xor.b64  	%rd3746, %rd3743, %rd3745;
	xor.b64  	%rd3747, %rd3746, %rd3744;
	shr.u64 	%rd3748, %rd4294, 7;
	shf.r.wrap.b32 	%r2647, %r2488, %r2487, 1;
	shf.r.wrap.b32 	%r2648, %r2487, %r2488, 1;
	mov.b64 	%rd3749, {%r2648, %r2647};
	xor.b64  	%rd3750, %rd3749, %rd3748;
	shf.r.wrap.b32 	%r2649, %r2488, %r2487, 8;
	shf.r.wrap.b32 	%r2650, %r2487, %r2488, 8;
	mov.b64 	%rd3751, {%r2650, %r2649};
	xor.b64  	%rd3752, %rd3750, %rd3751;
	add.s64 	%rd3753, %rd4310, %rd4317;
	add.s64 	%rd3754, %rd3753, %rd3747;
	add.s64 	%rd4317, %rd3754, %rd3752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2651,%dummy}, %rd4316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2652}, %rd4316;
	}
	shf.r.wrap.b32 	%r2653, %r2652, %r2651, 19;
	shf.r.wrap.b32 	%r2654, %r2651, %r2652, 19;
	mov.b64 	%rd3755, {%r2654, %r2653};
	shf.l.wrap.b32 	%r2655, %r2651, %r2652, 3;
	shf.l.wrap.b32 	%r2656, %r2652, %r2651, 3;
	mov.b64 	%rd3756, {%r2656, %r2655};
	shr.u64 	%rd3757, %rd4316, 6;
	xor.b64  	%rd3758, %rd3755, %rd3757;
	xor.b64  	%rd3759, %rd3758, %rd3756;
	shf.r.wrap.b32 	%r2657, %r2500, %r2499, 1;
	shf.r.wrap.b32 	%r2658, %r2499, %r2500, 1;
	mov.b64 	%rd3760, {%r2658, %r2657};
	shf.r.wrap.b32 	%r2659, %r2500, %r2499, 8;
	shf.r.wrap.b32 	%r2660, %r2499, %r2500, 8;
	mov.b64 	%rd3761, {%r2660, %r2659};
	shr.u64 	%rd3762, %rd4303, 7;
	xor.b64  	%rd3763, %rd3760, %rd3762;
	xor.b64  	%rd3764, %rd3763, %rd3761;
	add.s64 	%rd3765, %rd4311, %rd4294;
	add.s64 	%rd3766, %rd3765, %rd3759;
	add.s64 	%rd4294, %rd3766, %rd3764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2661,%dummy}, %rd4299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2662}, %rd4299;
	}
	shf.r.wrap.b32 	%r2663, %r2662, %r2661, 18;
	shf.r.wrap.b32 	%r2664, %r2661, %r2662, 18;
	mov.b64 	%rd3767, {%r2664, %r2663};
	shf.r.wrap.b32 	%r2665, %r2662, %r2661, 14;
	shf.r.wrap.b32 	%r2666, %r2661, %r2662, 14;
	mov.b64 	%rd3768, {%r2666, %r2665};
	xor.b64  	%rd3769, %rd3767, %rd3768;
	shf.l.wrap.b32 	%r2667, %r2661, %r2662, 23;
	shf.l.wrap.b32 	%r2668, %r2662, %r2661, 23;
	mov.b64 	%rd3770, {%r2668, %r2667};
	xor.b64  	%rd3771, %rd3769, %rd3770;
	xor.b64  	%rd3772, %rd4300, %rd4301;
	and.b64  	%rd3773, %rd3772, %rd4299;
	xor.b64  	%rd3774, %rd3773, %rd4301;
	add.s64 	%rd3775, %rd3774, %rd4302;
	add.s64 	%rd3776, %rd3775, %rd4303;
	add.s64 	%rd319, %rd4293, 128;
	ld.const.u64 	%rd3777, [%rd4293+128];
	add.s64 	%rd3778, %rd3776, %rd3777;
	add.s64 	%rd3779, %rd3778, %rd3771;
	add.s64 	%rd3780, %rd3779, %rd4298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2669}, %rd4295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2670,%dummy}, %rd4295;
	}
	shf.l.wrap.b32 	%r2671, %r2670, %r2669, 30;
	shf.l.wrap.b32 	%r2672, %r2669, %r2670, 30;
	mov.b64 	%rd3781, {%r2672, %r2671};
	shf.r.wrap.b32 	%r2673, %r2669, %r2670, 28;
	shf.r.wrap.b32 	%r2674, %r2670, %r2669, 28;
	mov.b64 	%rd3782, {%r2674, %r2673};
	xor.b64  	%rd3783, %rd3781, %rd3782;
	shf.l.wrap.b32 	%r2675, %r2670, %r2669, 25;
	shf.l.wrap.b32 	%r2676, %r2669, %r2670, 25;
	mov.b64 	%rd3784, {%r2676, %r2675};
	xor.b64  	%rd3785, %rd3783, %rd3784;
	xor.b64  	%rd3786, %rd4295, %rd4296;
	xor.b64  	%rd3787, %rd4295, %rd4297;
	and.b64  	%rd3788, %rd3786, %rd3787;
	xor.b64  	%rd3789, %rd3788, %rd4295;
	add.s64 	%rd3790, %rd3779, %rd3789;
	add.s64 	%rd3791, %rd3790, %rd3785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2677,%dummy}, %rd3780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2678}, %rd3780;
	}
	shf.r.wrap.b32 	%r2679, %r2678, %r2677, 14;
	shf.r.wrap.b32 	%r2680, %r2677, %r2678, 14;
	mov.b64 	%rd3792, {%r2680, %r2679};
	shf.r.wrap.b32 	%r2681, %r2678, %r2677, 18;
	shf.r.wrap.b32 	%r2682, %r2677, %r2678, 18;
	mov.b64 	%rd3793, {%r2682, %r2681};
	xor.b64  	%rd3794, %rd3793, %rd3792;
	shf.l.wrap.b32 	%r2683, %r2677, %r2678, 23;
	shf.l.wrap.b32 	%r2684, %r2678, %r2677, 23;
	mov.b64 	%rd3795, {%r2684, %r2683};
	xor.b64  	%rd3796, %rd3794, %rd3795;
	xor.b64  	%rd3797, %rd4299, %rd4300;
	and.b64  	%rd3798, %rd3780, %rd3797;
	xor.b64  	%rd3799, %rd3798, %rd4300;
	add.s64 	%rd3800, %rd4304, %rd4301;
	ld.const.u64 	%rd3801, [%rd4293+136];
	add.s64 	%rd3802, %rd3800, %rd3801;
	add.s64 	%rd3803, %rd3802, %rd3799;
	add.s64 	%rd3804, %rd3803, %rd3796;
	add.s64 	%rd3805, %rd3804, %rd4297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2685,%dummy}, %rd3791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2686}, %rd3791;
	}
	shf.r.wrap.b32 	%r2687, %r2686, %r2685, 28;
	shf.r.wrap.b32 	%r2688, %r2685, %r2686, 28;
	mov.b64 	%rd3806, {%r2688, %r2687};
	shf.l.wrap.b32 	%r2689, %r2685, %r2686, 30;
	shf.l.wrap.b32 	%r2690, %r2686, %r2685, 30;
	mov.b64 	%rd3807, {%r2690, %r2689};
	xor.b64  	%rd3808, %rd3807, %rd3806;
	shf.l.wrap.b32 	%r2691, %r2685, %r2686, 25;
	shf.l.wrap.b32 	%r2692, %r2686, %r2685, 25;
	mov.b64 	%rd3809, {%r2692, %r2691};
	xor.b64  	%rd3810, %rd3808, %rd3809;
	xor.b64  	%rd3811, %rd3791, %rd4296;
	xor.b64  	%rd3812, %rd3791, %rd4295;
	and.b64  	%rd3813, %rd3812, %rd3811;
	xor.b64  	%rd3814, %rd3813, %rd3791;
	add.s64 	%rd3815, %rd3804, %rd3814;
	add.s64 	%rd3816, %rd3815, %rd3810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2693,%dummy}, %rd3805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2694}, %rd3805;
	}
	shf.r.wrap.b32 	%r2695, %r2694, %r2693, 14;
	shf.r.wrap.b32 	%r2696, %r2693, %r2694, 14;
	mov.b64 	%rd3817, {%r2696, %r2695};
	shf.r.wrap.b32 	%r2697, %r2694, %r2693, 18;
	shf.r.wrap.b32 	%r2698, %r2693, %r2694, 18;
	mov.b64 	%rd3818, {%r2698, %r2697};
	xor.b64  	%rd3819, %rd3818, %rd3817;
	shf.l.wrap.b32 	%r2699, %r2693, %r2694, 23;
	shf.l.wrap.b32 	%r2700, %r2694, %r2693, 23;
	mov.b64 	%rd3820, {%r2700, %r2699};
	xor.b64  	%rd3821, %rd3819, %rd3820;
	xor.b64  	%rd3822, %rd3780, %rd4299;
	and.b64  	%rd3823, %rd3805, %rd3822;
	xor.b64  	%rd3824, %rd3823, %rd4299;
	add.s64 	%rd3825, %rd4305, %rd4300;
	ld.const.u64 	%rd3826, [%rd4293+144];
	add.s64 	%rd3827, %rd3825, %rd3826;
	add.s64 	%rd3828, %rd3827, %rd3824;
	add.s64 	%rd3829, %rd3828, %rd3821;
	add.s64 	%rd3830, %rd3829, %rd4296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2701,%dummy}, %rd3816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2702}, %rd3816;
	}
	shf.r.wrap.b32 	%r2703, %r2702, %r2701, 28;
	shf.r.wrap.b32 	%r2704, %r2701, %r2702, 28;
	mov.b64 	%rd3831, {%r2704, %r2703};
	shf.l.wrap.b32 	%r2705, %r2701, %r2702, 30;
	shf.l.wrap.b32 	%r2706, %r2702, %r2701, 30;
	mov.b64 	%rd3832, {%r2706, %r2705};
	xor.b64  	%rd3833, %rd3832, %rd3831;
	shf.l.wrap.b32 	%r2707, %r2701, %r2702, 25;
	shf.l.wrap.b32 	%r2708, %r2702, %r2701, 25;
	mov.b64 	%rd3834, {%r2708, %r2707};
	xor.b64  	%rd3835, %rd3833, %rd3834;
	xor.b64  	%rd3836, %rd3816, %rd4295;
	xor.b64  	%rd3837, %rd3816, %rd3791;
	and.b64  	%rd3838, %rd3837, %rd3836;
	xor.b64  	%rd3839, %rd3838, %rd3816;
	add.s64 	%rd3840, %rd3829, %rd3839;
	add.s64 	%rd3841, %rd3840, %rd3835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2709,%dummy}, %rd3830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2710}, %rd3830;
	}
	shf.r.wrap.b32 	%r2711, %r2710, %r2709, 14;
	shf.r.wrap.b32 	%r2712, %r2709, %r2710, 14;
	mov.b64 	%rd3842, {%r2712, %r2711};
	shf.r.wrap.b32 	%r2713, %r2710, %r2709, 18;
	shf.r.wrap.b32 	%r2714, %r2709, %r2710, 18;
	mov.b64 	%rd3843, {%r2714, %r2713};
	xor.b64  	%rd3844, %rd3843, %rd3842;
	shf.l.wrap.b32 	%r2715, %r2709, %r2710, 23;
	shf.l.wrap.b32 	%r2716, %r2710, %r2709, 23;
	mov.b64 	%rd3845, {%r2716, %r2715};
	xor.b64  	%rd3846, %rd3844, %rd3845;
	xor.b64  	%rd3847, %rd3805, %rd3780;
	and.b64  	%rd3848, %rd3830, %rd3847;
	xor.b64  	%rd3849, %rd3848, %rd3780;
	add.s64 	%rd3850, %rd4306, %rd4299;
	ld.const.u64 	%rd3851, [%rd4293+152];
	add.s64 	%rd3852, %rd3850, %rd3851;
	add.s64 	%rd3853, %rd3852, %rd3849;
	add.s64 	%rd3854, %rd3853, %rd3846;
	add.s64 	%rd3855, %rd3854, %rd4295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2717,%dummy}, %rd3841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2718}, %rd3841;
	}
	shf.r.wrap.b32 	%r2719, %r2718, %r2717, 28;
	shf.r.wrap.b32 	%r2720, %r2717, %r2718, 28;
	mov.b64 	%rd3856, {%r2720, %r2719};
	shf.l.wrap.b32 	%r2721, %r2717, %r2718, 30;
	shf.l.wrap.b32 	%r2722, %r2718, %r2717, 30;
	mov.b64 	%rd3857, {%r2722, %r2721};
	xor.b64  	%rd3858, %rd3857, %rd3856;
	shf.l.wrap.b32 	%r2723, %r2717, %r2718, 25;
	shf.l.wrap.b32 	%r2724, %r2718, %r2717, 25;
	mov.b64 	%rd3859, {%r2724, %r2723};
	xor.b64  	%rd3860, %rd3858, %rd3859;
	xor.b64  	%rd3861, %rd3841, %rd3791;
	xor.b64  	%rd3862, %rd3841, %rd3816;
	and.b64  	%rd3863, %rd3862, %rd3861;
	xor.b64  	%rd3864, %rd3863, %rd3841;
	add.s64 	%rd3865, %rd3854, %rd3864;
	add.s64 	%rd3866, %rd3865, %rd3860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2725,%dummy}, %rd3855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2726}, %rd3855;
	}
	shf.r.wrap.b32 	%r2727, %r2726, %r2725, 14;
	shf.r.wrap.b32 	%r2728, %r2725, %r2726, 14;
	mov.b64 	%rd3867, {%r2728, %r2727};
	shf.r.wrap.b32 	%r2729, %r2726, %r2725, 18;
	shf.r.wrap.b32 	%r2730, %r2725, %r2726, 18;
	mov.b64 	%rd3868, {%r2730, %r2729};
	xor.b64  	%rd3869, %rd3868, %rd3867;
	shf.l.wrap.b32 	%r2731, %r2725, %r2726, 23;
	shf.l.wrap.b32 	%r2732, %r2726, %r2725, 23;
	mov.b64 	%rd3870, {%r2732, %r2731};
	xor.b64  	%rd3871, %rd3869, %rd3870;
	xor.b64  	%rd3872, %rd3830, %rd3805;
	and.b64  	%rd3873, %rd3855, %rd3872;
	xor.b64  	%rd3874, %rd3873, %rd3805;
	add.s64 	%rd3875, %rd3780, %rd4307;
	ld.const.u64 	%rd3876, [%rd4293+160];
	add.s64 	%rd3877, %rd3875, %rd3876;
	add.s64 	%rd3878, %rd3877, %rd3874;
	add.s64 	%rd3879, %rd3878, %rd3871;
	add.s64 	%rd3880, %rd3879, %rd3791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2733,%dummy}, %rd3866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2734}, %rd3866;
	}
	shf.r.wrap.b32 	%r2735, %r2734, %r2733, 28;
	shf.r.wrap.b32 	%r2736, %r2733, %r2734, 28;
	mov.b64 	%rd3881, {%r2736, %r2735};
	shf.l.wrap.b32 	%r2737, %r2733, %r2734, 30;
	shf.l.wrap.b32 	%r2738, %r2734, %r2733, 30;
	mov.b64 	%rd3882, {%r2738, %r2737};
	xor.b64  	%rd3883, %rd3882, %rd3881;
	shf.l.wrap.b32 	%r2739, %r2733, %r2734, 25;
	shf.l.wrap.b32 	%r2740, %r2734, %r2733, 25;
	mov.b64 	%rd3884, {%r2740, %r2739};
	xor.b64  	%rd3885, %rd3883, %rd3884;
	xor.b64  	%rd3886, %rd3866, %rd3816;
	xor.b64  	%rd3887, %rd3866, %rd3841;
	and.b64  	%rd3888, %rd3887, %rd3886;
	xor.b64  	%rd3889, %rd3888, %rd3866;
	add.s64 	%rd3890, %rd3879, %rd3889;
	add.s64 	%rd3891, %rd3890, %rd3885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2741,%dummy}, %rd3880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2742}, %rd3880;
	}
	shf.r.wrap.b32 	%r2743, %r2742, %r2741, 14;
	shf.r.wrap.b32 	%r2744, %r2741, %r2742, 14;
	mov.b64 	%rd3892, {%r2744, %r2743};
	shf.r.wrap.b32 	%r2745, %r2742, %r2741, 18;
	shf.r.wrap.b32 	%r2746, %r2741, %r2742, 18;
	mov.b64 	%rd3893, {%r2746, %r2745};
	xor.b64  	%rd3894, %rd3893, %rd3892;
	shf.l.wrap.b32 	%r2747, %r2741, %r2742, 23;
	shf.l.wrap.b32 	%r2748, %r2742, %r2741, 23;
	mov.b64 	%rd3895, {%r2748, %r2747};
	xor.b64  	%rd3896, %rd3894, %rd3895;
	xor.b64  	%rd3897, %rd3855, %rd3830;
	and.b64  	%rd3898, %rd3880, %rd3897;
	xor.b64  	%rd3899, %rd3898, %rd3830;
	add.s64 	%rd3900, %rd3805, %rd4308;
	ld.const.u64 	%rd3901, [%rd4293+168];
	add.s64 	%rd3902, %rd3900, %rd3901;
	add.s64 	%rd3903, %rd3902, %rd3899;
	add.s64 	%rd3904, %rd3903, %rd3896;
	add.s64 	%rd3905, %rd3904, %rd3816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2749,%dummy}, %rd3891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2750}, %rd3891;
	}
	shf.r.wrap.b32 	%r2751, %r2750, %r2749, 28;
	shf.r.wrap.b32 	%r2752, %r2749, %r2750, 28;
	mov.b64 	%rd3906, {%r2752, %r2751};
	shf.l.wrap.b32 	%r2753, %r2749, %r2750, 30;
	shf.l.wrap.b32 	%r2754, %r2750, %r2749, 30;
	mov.b64 	%rd3907, {%r2754, %r2753};
	xor.b64  	%rd3908, %rd3907, %rd3906;
	shf.l.wrap.b32 	%r2755, %r2749, %r2750, 25;
	shf.l.wrap.b32 	%r2756, %r2750, %r2749, 25;
	mov.b64 	%rd3909, {%r2756, %r2755};
	xor.b64  	%rd3910, %rd3908, %rd3909;
	xor.b64  	%rd3911, %rd3891, %rd3841;
	xor.b64  	%rd3912, %rd3891, %rd3866;
	and.b64  	%rd3913, %rd3912, %rd3911;
	xor.b64  	%rd3914, %rd3913, %rd3891;
	add.s64 	%rd3915, %rd3904, %rd3914;
	add.s64 	%rd3916, %rd3915, %rd3910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2757,%dummy}, %rd3905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2758}, %rd3905;
	}
	shf.r.wrap.b32 	%r2759, %r2758, %r2757, 14;
	shf.r.wrap.b32 	%r2760, %r2757, %r2758, 14;
	mov.b64 	%rd3917, {%r2760, %r2759};
	shf.r.wrap.b32 	%r2761, %r2758, %r2757, 18;
	shf.r.wrap.b32 	%r2762, %r2757, %r2758, 18;
	mov.b64 	%rd3918, {%r2762, %r2761};
	xor.b64  	%rd3919, %rd3918, %rd3917;
	shf.l.wrap.b32 	%r2763, %r2757, %r2758, 23;
	shf.l.wrap.b32 	%r2764, %r2758, %r2757, 23;
	mov.b64 	%rd3920, {%r2764, %r2763};
	xor.b64  	%rd3921, %rd3919, %rd3920;
	xor.b64  	%rd3922, %rd3880, %rd3855;
	and.b64  	%rd3923, %rd3905, %rd3922;
	xor.b64  	%rd3924, %rd3923, %rd3855;
	add.s64 	%rd3925, %rd3830, %rd4309;
	ld.const.u64 	%rd3926, [%rd4293+176];
	add.s64 	%rd3927, %rd3925, %rd3926;
	add.s64 	%rd3928, %rd3927, %rd3924;
	add.s64 	%rd3929, %rd3928, %rd3921;
	add.s64 	%rd3930, %rd3929, %rd3841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2765,%dummy}, %rd3916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2766}, %rd3916;
	}
	shf.r.wrap.b32 	%r2767, %r2766, %r2765, 28;
	shf.r.wrap.b32 	%r2768, %r2765, %r2766, 28;
	mov.b64 	%rd3931, {%r2768, %r2767};
	shf.l.wrap.b32 	%r2769, %r2765, %r2766, 30;
	shf.l.wrap.b32 	%r2770, %r2766, %r2765, 30;
	mov.b64 	%rd3932, {%r2770, %r2769};
	xor.b64  	%rd3933, %rd3932, %rd3931;
	shf.l.wrap.b32 	%r2771, %r2765, %r2766, 25;
	shf.l.wrap.b32 	%r2772, %r2766, %r2765, 25;
	mov.b64 	%rd3934, {%r2772, %r2771};
	xor.b64  	%rd3935, %rd3933, %rd3934;
	xor.b64  	%rd3936, %rd3916, %rd3866;
	xor.b64  	%rd3937, %rd3916, %rd3891;
	and.b64  	%rd3938, %rd3937, %rd3936;
	xor.b64  	%rd3939, %rd3938, %rd3916;
	add.s64 	%rd3940, %rd3929, %rd3939;
	add.s64 	%rd3941, %rd3940, %rd3935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2773,%dummy}, %rd3930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2774}, %rd3930;
	}
	shf.r.wrap.b32 	%r2775, %r2774, %r2773, 14;
	shf.r.wrap.b32 	%r2776, %r2773, %r2774, 14;
	mov.b64 	%rd3942, {%r2776, %r2775};
	shf.r.wrap.b32 	%r2777, %r2774, %r2773, 18;
	shf.r.wrap.b32 	%r2778, %r2773, %r2774, 18;
	mov.b64 	%rd3943, {%r2778, %r2777};
	xor.b64  	%rd3944, %rd3943, %rd3942;
	shf.l.wrap.b32 	%r2779, %r2773, %r2774, 23;
	shf.l.wrap.b32 	%r2780, %r2774, %r2773, 23;
	mov.b64 	%rd3945, {%r2780, %r2779};
	xor.b64  	%rd3946, %rd3944, %rd3945;
	xor.b64  	%rd3947, %rd3905, %rd3880;
	and.b64  	%rd3948, %rd3930, %rd3947;
	xor.b64  	%rd3949, %rd3948, %rd3880;
	add.s64 	%rd3950, %rd3855, %rd4310;
	ld.const.u64 	%rd3951, [%rd4293+184];
	add.s64 	%rd3952, %rd3950, %rd3951;
	add.s64 	%rd3953, %rd3952, %rd3949;
	add.s64 	%rd3954, %rd3953, %rd3946;
	add.s64 	%rd3955, %rd3954, %rd3866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2781,%dummy}, %rd3941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2782}, %rd3941;
	}
	shf.r.wrap.b32 	%r2783, %r2782, %r2781, 28;
	shf.r.wrap.b32 	%r2784, %r2781, %r2782, 28;
	mov.b64 	%rd3956, {%r2784, %r2783};
	shf.l.wrap.b32 	%r2785, %r2781, %r2782, 30;
	shf.l.wrap.b32 	%r2786, %r2782, %r2781, 30;
	mov.b64 	%rd3957, {%r2786, %r2785};
	xor.b64  	%rd3958, %rd3957, %rd3956;
	shf.l.wrap.b32 	%r2787, %r2781, %r2782, 25;
	shf.l.wrap.b32 	%r2788, %r2782, %r2781, 25;
	mov.b64 	%rd3959, {%r2788, %r2787};
	xor.b64  	%rd3960, %rd3958, %rd3959;
	xor.b64  	%rd3961, %rd3941, %rd3891;
	xor.b64  	%rd3962, %rd3941, %rd3916;
	and.b64  	%rd3963, %rd3962, %rd3961;
	xor.b64  	%rd3964, %rd3963, %rd3941;
	add.s64 	%rd3965, %rd3954, %rd3964;
	add.s64 	%rd3966, %rd3965, %rd3960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2789,%dummy}, %rd3955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2790}, %rd3955;
	}
	shf.r.wrap.b32 	%r2791, %r2790, %r2789, 14;
	shf.r.wrap.b32 	%r2792, %r2789, %r2790, 14;
	mov.b64 	%rd3967, {%r2792, %r2791};
	shf.r.wrap.b32 	%r2793, %r2790, %r2789, 18;
	shf.r.wrap.b32 	%r2794, %r2789, %r2790, 18;
	mov.b64 	%rd3968, {%r2794, %r2793};
	xor.b64  	%rd3969, %rd3968, %rd3967;
	shf.l.wrap.b32 	%r2795, %r2789, %r2790, 23;
	shf.l.wrap.b32 	%r2796, %r2790, %r2789, 23;
	mov.b64 	%rd3970, {%r2796, %r2795};
	xor.b64  	%rd3971, %rd3969, %rd3970;
	xor.b64  	%rd3972, %rd3930, %rd3905;
	and.b64  	%rd3973, %rd3955, %rd3972;
	xor.b64  	%rd3974, %rd3973, %rd3905;
	add.s64 	%rd3975, %rd3880, %rd4311;
	ld.const.u64 	%rd3976, [%rd4293+192];
	add.s64 	%rd3977, %rd3975, %rd3976;
	add.s64 	%rd3978, %rd3977, %rd3974;
	add.s64 	%rd3979, %rd3978, %rd3971;
	add.s64 	%rd3980, %rd3979, %rd3891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2797,%dummy}, %rd3966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2798}, %rd3966;
	}
	shf.r.wrap.b32 	%r2799, %r2798, %r2797, 28;
	shf.r.wrap.b32 	%r2800, %r2797, %r2798, 28;
	mov.b64 	%rd3981, {%r2800, %r2799};
	shf.l.wrap.b32 	%r2801, %r2797, %r2798, 30;
	shf.l.wrap.b32 	%r2802, %r2798, %r2797, 30;
	mov.b64 	%rd3982, {%r2802, %r2801};
	xor.b64  	%rd3983, %rd3982, %rd3981;
	shf.l.wrap.b32 	%r2803, %r2797, %r2798, 25;
	shf.l.wrap.b32 	%r2804, %r2798, %r2797, 25;
	mov.b64 	%rd3984, {%r2804, %r2803};
	xor.b64  	%rd3985, %rd3983, %rd3984;
	xor.b64  	%rd3986, %rd3966, %rd3916;
	xor.b64  	%rd3987, %rd3966, %rd3941;
	and.b64  	%rd3988, %rd3987, %rd3986;
	xor.b64  	%rd3989, %rd3988, %rd3966;
	add.s64 	%rd3990, %rd3979, %rd3989;
	add.s64 	%rd3991, %rd3990, %rd3985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2805,%dummy}, %rd3980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2806}, %rd3980;
	}
	shf.r.wrap.b32 	%r2807, %r2806, %r2805, 14;
	shf.r.wrap.b32 	%r2808, %r2805, %r2806, 14;
	mov.b64 	%rd3992, {%r2808, %r2807};
	shf.r.wrap.b32 	%r2809, %r2806, %r2805, 18;
	shf.r.wrap.b32 	%r2810, %r2805, %r2806, 18;
	mov.b64 	%rd3993, {%r2810, %r2809};
	xor.b64  	%rd3994, %rd3993, %rd3992;
	shf.l.wrap.b32 	%r2811, %r2805, %r2806, 23;
	shf.l.wrap.b32 	%r2812, %r2806, %r2805, 23;
	mov.b64 	%rd3995, {%r2812, %r2811};
	xor.b64  	%rd3996, %rd3994, %rd3995;
	xor.b64  	%rd3997, %rd3955, %rd3930;
	and.b64  	%rd3998, %rd3980, %rd3997;
	xor.b64  	%rd3999, %rd3998, %rd3930;
	add.s64 	%rd4000, %rd3905, %rd4312;
	ld.const.u64 	%rd4001, [%rd4293+200];
	add.s64 	%rd4002, %rd4000, %rd4001;
	add.s64 	%rd4003, %rd4002, %rd3999;
	add.s64 	%rd4004, %rd4003, %rd3996;
	add.s64 	%rd4005, %rd4004, %rd3916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2813,%dummy}, %rd3991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2814}, %rd3991;
	}
	shf.r.wrap.b32 	%r2815, %r2814, %r2813, 28;
	shf.r.wrap.b32 	%r2816, %r2813, %r2814, 28;
	mov.b64 	%rd4006, {%r2816, %r2815};
	shf.l.wrap.b32 	%r2817, %r2813, %r2814, 30;
	shf.l.wrap.b32 	%r2818, %r2814, %r2813, 30;
	mov.b64 	%rd4007, {%r2818, %r2817};
	xor.b64  	%rd4008, %rd4007, %rd4006;
	shf.l.wrap.b32 	%r2819, %r2813, %r2814, 25;
	shf.l.wrap.b32 	%r2820, %r2814, %r2813, 25;
	mov.b64 	%rd4009, {%r2820, %r2819};
	xor.b64  	%rd4010, %rd4008, %rd4009;
	xor.b64  	%rd4011, %rd3991, %rd3941;
	xor.b64  	%rd4012, %rd3991, %rd3966;
	and.b64  	%rd4013, %rd4012, %rd4011;
	xor.b64  	%rd4014, %rd4013, %rd3991;
	add.s64 	%rd4015, %rd4004, %rd4014;
	add.s64 	%rd4016, %rd4015, %rd4010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2821,%dummy}, %rd4005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2822}, %rd4005;
	}
	shf.r.wrap.b32 	%r2823, %r2822, %r2821, 14;
	shf.r.wrap.b32 	%r2824, %r2821, %r2822, 14;
	mov.b64 	%rd4017, {%r2824, %r2823};
	shf.r.wrap.b32 	%r2825, %r2822, %r2821, 18;
	shf.r.wrap.b32 	%r2826, %r2821, %r2822, 18;
	mov.b64 	%rd4018, {%r2826, %r2825};
	xor.b64  	%rd4019, %rd4018, %rd4017;
	shf.l.wrap.b32 	%r2827, %r2821, %r2822, 23;
	shf.l.wrap.b32 	%r2828, %r2822, %r2821, 23;
	mov.b64 	%rd4020, {%r2828, %r2827};
	xor.b64  	%rd4021, %rd4019, %rd4020;
	xor.b64  	%rd4022, %rd3980, %rd3955;
	and.b64  	%rd4023, %rd4005, %rd4022;
	xor.b64  	%rd4024, %rd4023, %rd3955;
	add.s64 	%rd4025, %rd3930, %rd4313;
	ld.const.u64 	%rd4026, [%rd4293+208];
	add.s64 	%rd4027, %rd4025, %rd4026;
	add.s64 	%rd4028, %rd4027, %rd4024;
	add.s64 	%rd4029, %rd4028, %rd4021;
	add.s64 	%rd4030, %rd4029, %rd3941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2829,%dummy}, %rd4016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2830}, %rd4016;
	}
	shf.r.wrap.b32 	%r2831, %r2830, %r2829, 28;
	shf.r.wrap.b32 	%r2832, %r2829, %r2830, 28;
	mov.b64 	%rd4031, {%r2832, %r2831};
	shf.l.wrap.b32 	%r2833, %r2829, %r2830, 30;
	shf.l.wrap.b32 	%r2834, %r2830, %r2829, 30;
	mov.b64 	%rd4032, {%r2834, %r2833};
	xor.b64  	%rd4033, %rd4032, %rd4031;
	shf.l.wrap.b32 	%r2835, %r2829, %r2830, 25;
	shf.l.wrap.b32 	%r2836, %r2830, %r2829, 25;
	mov.b64 	%rd4034, {%r2836, %r2835};
	xor.b64  	%rd4035, %rd4033, %rd4034;
	xor.b64  	%rd4036, %rd4016, %rd3966;
	xor.b64  	%rd4037, %rd4016, %rd3991;
	and.b64  	%rd4038, %rd4037, %rd4036;
	xor.b64  	%rd4039, %rd4038, %rd4016;
	add.s64 	%rd4040, %rd4029, %rd4039;
	add.s64 	%rd4041, %rd4040, %rd4035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2837,%dummy}, %rd4030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2838}, %rd4030;
	}
	shf.r.wrap.b32 	%r2839, %r2838, %r2837, 14;
	shf.r.wrap.b32 	%r2840, %r2837, %r2838, 14;
	mov.b64 	%rd4042, {%r2840, %r2839};
	shf.r.wrap.b32 	%r2841, %r2838, %r2837, 18;
	shf.r.wrap.b32 	%r2842, %r2837, %r2838, 18;
	mov.b64 	%rd4043, {%r2842, %r2841};
	xor.b64  	%rd4044, %rd4043, %rd4042;
	shf.l.wrap.b32 	%r2843, %r2837, %r2838, 23;
	shf.l.wrap.b32 	%r2844, %r2838, %r2837, 23;
	mov.b64 	%rd4045, {%r2844, %r2843};
	xor.b64  	%rd4046, %rd4044, %rd4045;
	xor.b64  	%rd4047, %rd4005, %rd3980;
	and.b64  	%rd4048, %rd4030, %rd4047;
	xor.b64  	%rd4049, %rd4048, %rd3980;
	add.s64 	%rd4050, %rd3955, %rd4314;
	ld.const.u64 	%rd4051, [%rd4293+216];
	add.s64 	%rd4052, %rd4050, %rd4051;
	add.s64 	%rd4053, %rd4052, %rd4049;
	add.s64 	%rd4054, %rd4053, %rd4046;
	add.s64 	%rd4055, %rd4054, %rd3966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2845,%dummy}, %rd4041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2846}, %rd4041;
	}
	shf.r.wrap.b32 	%r2847, %r2846, %r2845, 28;
	shf.r.wrap.b32 	%r2848, %r2845, %r2846, 28;
	mov.b64 	%rd4056, {%r2848, %r2847};
	shf.l.wrap.b32 	%r2849, %r2845, %r2846, 30;
	shf.l.wrap.b32 	%r2850, %r2846, %r2845, 30;
	mov.b64 	%rd4057, {%r2850, %r2849};
	xor.b64  	%rd4058, %rd4057, %rd4056;
	shf.l.wrap.b32 	%r2851, %r2845, %r2846, 25;
	shf.l.wrap.b32 	%r2852, %r2846, %r2845, 25;
	mov.b64 	%rd4059, {%r2852, %r2851};
	xor.b64  	%rd4060, %rd4058, %rd4059;
	xor.b64  	%rd4061, %rd4041, %rd3991;
	xor.b64  	%rd4062, %rd4041, %rd4016;
	and.b64  	%rd4063, %rd4062, %rd4061;
	xor.b64  	%rd4064, %rd4063, %rd4041;
	add.s64 	%rd4065, %rd4054, %rd4064;
	add.s64 	%rd4066, %rd4065, %rd4060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2853,%dummy}, %rd4055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2854}, %rd4055;
	}
	shf.r.wrap.b32 	%r2855, %r2854, %r2853, 14;
	shf.r.wrap.b32 	%r2856, %r2853, %r2854, 14;
	mov.b64 	%rd4067, {%r2856, %r2855};
	shf.r.wrap.b32 	%r2857, %r2854, %r2853, 18;
	shf.r.wrap.b32 	%r2858, %r2853, %r2854, 18;
	mov.b64 	%rd4068, {%r2858, %r2857};
	xor.b64  	%rd4069, %rd4068, %rd4067;
	shf.l.wrap.b32 	%r2859, %r2853, %r2854, 23;
	shf.l.wrap.b32 	%r2860, %r2854, %r2853, 23;
	mov.b64 	%rd4070, {%r2860, %r2859};
	xor.b64  	%rd4071, %rd4069, %rd4070;
	xor.b64  	%rd4072, %rd4030, %rd4005;
	and.b64  	%rd4073, %rd4055, %rd4072;
	xor.b64  	%rd4074, %rd4073, %rd4005;
	add.s64 	%rd4075, %rd3980, %rd4315;
	ld.const.u64 	%rd4076, [%rd4293+224];
	add.s64 	%rd4077, %rd4075, %rd4076;
	add.s64 	%rd4078, %rd4077, %rd4074;
	add.s64 	%rd4079, %rd4078, %rd4071;
	add.s64 	%rd4302, %rd4079, %rd3991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2861,%dummy}, %rd4066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2862}, %rd4066;
	}
	shf.r.wrap.b32 	%r2863, %r2862, %r2861, 28;
	shf.r.wrap.b32 	%r2864, %r2861, %r2862, 28;
	mov.b64 	%rd4080, {%r2864, %r2863};
	shf.l.wrap.b32 	%r2865, %r2861, %r2862, 30;
	shf.l.wrap.b32 	%r2866, %r2862, %r2861, 30;
	mov.b64 	%rd4081, {%r2866, %r2865};
	xor.b64  	%rd4082, %rd4081, %rd4080;
	shf.l.wrap.b32 	%r2867, %r2861, %r2862, 25;
	shf.l.wrap.b32 	%r2868, %r2862, %r2861, 25;
	mov.b64 	%rd4083, {%r2868, %r2867};
	xor.b64  	%rd4084, %rd4082, %rd4083;
	xor.b64  	%rd4085, %rd4066, %rd4016;
	xor.b64  	%rd4086, %rd4066, %rd4041;
	and.b64  	%rd4087, %rd4086, %rd4085;
	xor.b64  	%rd4088, %rd4087, %rd4066;
	add.s64 	%rd4089, %rd4079, %rd4088;
	add.s64 	%rd4298, %rd4089, %rd4084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2869,%dummy}, %rd4302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2870}, %rd4302;
	}
	shf.r.wrap.b32 	%r2871, %r2870, %r2869, 14;
	shf.r.wrap.b32 	%r2872, %r2869, %r2870, 14;
	mov.b64 	%rd4090, {%r2872, %r2871};
	shf.r.wrap.b32 	%r2873, %r2870, %r2869, 18;
	shf.r.wrap.b32 	%r2874, %r2869, %r2870, 18;
	mov.b64 	%rd4091, {%r2874, %r2873};
	xor.b64  	%rd4092, %rd4091, %rd4090;
	shf.l.wrap.b32 	%r2875, %r2869, %r2870, 23;
	shf.l.wrap.b32 	%r2876, %r2870, %r2869, 23;
	mov.b64 	%rd4093, {%r2876, %r2875};
	xor.b64  	%rd4094, %rd4092, %rd4093;
	xor.b64  	%rd4095, %rd4055, %rd4030;
	and.b64  	%rd4096, %rd4302, %rd4095;
	xor.b64  	%rd4097, %rd4096, %rd4030;
	add.s64 	%rd4098, %rd4005, %rd4316;
	ld.const.u64 	%rd4099, [%rd4293+232];
	add.s64 	%rd4100, %rd4098, %rd4099;
	add.s64 	%rd4101, %rd4100, %rd4097;
	add.s64 	%rd4102, %rd4101, %rd4094;
	add.s64 	%rd4301, %rd4102, %rd4016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2877,%dummy}, %rd4298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2878}, %rd4298;
	}
	shf.r.wrap.b32 	%r2879, %r2878, %r2877, 28;
	shf.r.wrap.b32 	%r2880, %r2877, %r2878, 28;
	mov.b64 	%rd4103, {%r2880, %r2879};
	shf.l.wrap.b32 	%r2881, %r2877, %r2878, 30;
	shf.l.wrap.b32 	%r2882, %r2878, %r2877, 30;
	mov.b64 	%rd4104, {%r2882, %r2881};
	xor.b64  	%rd4105, %rd4104, %rd4103;
	shf.l.wrap.b32 	%r2883, %r2877, %r2878, 25;
	shf.l.wrap.b32 	%r2884, %r2878, %r2877, 25;
	mov.b64 	%rd4106, {%r2884, %r2883};
	xor.b64  	%rd4107, %rd4105, %rd4106;
	xor.b64  	%rd4108, %rd4298, %rd4041;
	xor.b64  	%rd4109, %rd4298, %rd4066;
	and.b64  	%rd4110, %rd4109, %rd4108;
	xor.b64  	%rd4111, %rd4110, %rd4298;
	add.s64 	%rd4112, %rd4102, %rd4111;
	add.s64 	%rd4297, %rd4112, %rd4107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2885,%dummy}, %rd4301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2886}, %rd4301;
	}
	shf.r.wrap.b32 	%r2887, %r2886, %r2885, 14;
	shf.r.wrap.b32 	%r2888, %r2885, %r2886, 14;
	mov.b64 	%rd4113, {%r2888, %r2887};
	shf.r.wrap.b32 	%r2889, %r2886, %r2885, 18;
	shf.r.wrap.b32 	%r2890, %r2885, %r2886, 18;
	mov.b64 	%rd4114, {%r2890, %r2889};
	xor.b64  	%rd4115, %rd4114, %rd4113;
	shf.l.wrap.b32 	%r2891, %r2885, %r2886, 23;
	shf.l.wrap.b32 	%r2892, %r2886, %r2885, 23;
	mov.b64 	%rd4116, {%r2892, %r2891};
	xor.b64  	%rd4117, %rd4115, %rd4116;
	xor.b64  	%rd4118, %rd4302, %rd4055;
	and.b64  	%rd4119, %rd4301, %rd4118;
	xor.b64  	%rd4120, %rd4119, %rd4055;
	add.s64 	%rd4121, %rd4030, %rd4317;
	ld.const.u64 	%rd4122, [%rd4293+240];
	add.s64 	%rd4123, %rd4121, %rd4122;
	add.s64 	%rd4124, %rd4123, %rd4120;
	add.s64 	%rd4125, %rd4124, %rd4117;
	add.s64 	%rd4300, %rd4125, %rd4041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2893,%dummy}, %rd4297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2894}, %rd4297;
	}
	shf.r.wrap.b32 	%r2895, %r2894, %r2893, 28;
	shf.r.wrap.b32 	%r2896, %r2893, %r2894, 28;
	mov.b64 	%rd4126, {%r2896, %r2895};
	shf.l.wrap.b32 	%r2897, %r2893, %r2894, 30;
	shf.l.wrap.b32 	%r2898, %r2894, %r2893, 30;
	mov.b64 	%rd4127, {%r2898, %r2897};
	xor.b64  	%rd4128, %rd4127, %rd4126;
	shf.l.wrap.b32 	%r2899, %r2893, %r2894, 25;
	shf.l.wrap.b32 	%r2900, %r2894, %r2893, 25;
	mov.b64 	%rd4129, {%r2900, %r2899};
	xor.b64  	%rd4130, %rd4128, %rd4129;
	xor.b64  	%rd4131, %rd4297, %rd4066;
	xor.b64  	%rd4132, %rd4297, %rd4298;
	and.b64  	%rd4133, %rd4132, %rd4131;
	xor.b64  	%rd4134, %rd4133, %rd4297;
	add.s64 	%rd4135, %rd4125, %rd4134;
	add.s64 	%rd4296, %rd4135, %rd4130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2901,%dummy}, %rd4300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2902}, %rd4300;
	}
	shf.r.wrap.b32 	%r2903, %r2902, %r2901, 14;
	shf.r.wrap.b32 	%r2904, %r2901, %r2902, 14;
	mov.b64 	%rd4136, {%r2904, %r2903};
	shf.r.wrap.b32 	%r2905, %r2902, %r2901, 18;
	shf.r.wrap.b32 	%r2906, %r2901, %r2902, 18;
	mov.b64 	%rd4137, {%r2906, %r2905};
	xor.b64  	%rd4138, %rd4137, %rd4136;
	shf.l.wrap.b32 	%r2907, %r2901, %r2902, 23;
	shf.l.wrap.b32 	%r2908, %r2902, %r2901, 23;
	mov.b64 	%rd4139, {%r2908, %r2907};
	xor.b64  	%rd4140, %rd4138, %rd4139;
	xor.b64  	%rd4141, %rd4301, %rd4302;
	and.b64  	%rd4142, %rd4300, %rd4141;
	xor.b64  	%rd4143, %rd4142, %rd4302;
	add.s64 	%rd4144, %rd4055, %rd4294;
	ld.const.u64 	%rd4145, [%rd4293+248];
	add.s64 	%rd4146, %rd4144, %rd4145;
	add.s64 	%rd4147, %rd4146, %rd4143;
	add.s64 	%rd4148, %rd4147, %rd4140;
	add.s64 	%rd4299, %rd4148, %rd4066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2909,%dummy}, %rd4296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2910}, %rd4296;
	}
	shf.r.wrap.b32 	%r2911, %r2910, %r2909, 28;
	shf.r.wrap.b32 	%r2912, %r2909, %r2910, 28;
	mov.b64 	%rd4149, {%r2912, %r2911};
	shf.l.wrap.b32 	%r2913, %r2909, %r2910, 30;
	shf.l.wrap.b32 	%r2914, %r2910, %r2909, 30;
	mov.b64 	%rd4150, {%r2914, %r2913};
	xor.b64  	%rd4151, %rd4150, %rd4149;
	shf.l.wrap.b32 	%r2915, %r2909, %r2910, 25;
	shf.l.wrap.b32 	%r2916, %r2910, %r2909, 25;
	mov.b64 	%rd4152, {%r2916, %r2915};
	xor.b64  	%rd4153, %rd4151, %rd4152;
	xor.b64  	%rd4154, %rd4296, %rd4298;
	xor.b64  	%rd4155, %rd4296, %rd4297;
	and.b64  	%rd4156, %rd4155, %rd4154;
	xor.b64  	%rd4157, %rd4156, %rd4296;
	add.s64 	%rd4158, %rd4148, %rd4157;
	add.s64 	%rd4295, %rd4158, %rd4153;
	add.s32 	%r2920, %r2920, 16;
	setp.lt.s32	%p5, %r2920, 80;
	mov.u64 	%rd4293, %rd319;
	@%p5 bra 	BB1_8;

	add.s64 	%rd4159, %rd4295, %rd183;
	st.global.u64 	[%rd2241+128], %rd4159;
	add.s64 	%rd4162, %rd4296, %rd184;
	st.global.u64 	[%rd2241+136], %rd4162;
	add.s64 	%rd4163, %rd4297, %rd185;
	st.global.u64 	[%rd2241+144], %rd4163;
	add.s64 	%rd4164, %rd4298, %rd186;
	st.global.u64 	[%rd2241+152], %rd4164;
	add.s64 	%rd4165, %rd4299, %rd187;
	st.global.u64 	[%rd2241+160], %rd4165;
	add.s64 	%rd4166, %rd4300, %rd188;
	st.global.u64 	[%rd2241+168], %rd4166;
	add.s64 	%rd4167, %rd4301, %rd189;
	st.global.u64 	[%rd2241+176], %rd4167;
	add.s64 	%rd4168, %rd4302, %rd190;
	st.global.u64 	[%rd2241+184], %rd4168;
	st.global.u64 	[%rd2241+256], %rd4159;
	st.global.u64 	[%rd2241+264], %rd4162;
	st.global.u64 	[%rd2241+272], %rd4163;
	st.global.u64 	[%rd2241+280], %rd4164;
	st.global.u64 	[%rd2241+288], %rd4165;
	st.global.u64 	[%rd2241+296], %rd4166;
	st.global.u64 	[%rd2241+304], %rd4167;
	st.global.u64 	[%rd2241+312], %rd4168;

BB1_10:
	ret;
}

	// .globl	m07100_loop
.entry m07100_loop(
	.param .u64 .ptr .global .align 4 m07100_loop_param_0,
	.param .u64 .ptr .global .align 4 m07100_loop_param_1,
	.param .u64 .ptr .global .align 4 m07100_loop_param_2,
	.param .u64 .ptr .global .align 4 m07100_loop_param_3,
	.param .u64 .ptr .global .align 8 m07100_loop_param_4,
	.param .u64 .ptr .global .align 1 m07100_loop_param_5,
	.param .u64 .ptr .global .align 4 m07100_loop_param_6,
	.param .u64 .ptr .global .align 4 m07100_loop_param_7,
	.param .u64 .ptr .global .align 4 m07100_loop_param_8,
	.param .u64 .ptr .global .align 4 m07100_loop_param_9,
	.param .u64 .ptr .global .align 4 m07100_loop_param_10,
	.param .u64 .ptr .global .align 4 m07100_loop_param_11,
	.param .u64 .ptr .global .align 4 m07100_loop_param_12,
	.param .u64 .ptr .global .align 4 m07100_loop_param_13,
	.param .u64 .ptr .global .align 4 m07100_loop_param_14,
	.param .u64 .ptr .global .align 4 m07100_loop_param_15,
	.param .u64 .ptr .global .align 4 m07100_loop_param_16,
	.param .u64 .ptr .global .align 4 m07100_loop_param_17,
	.param .u64 .ptr .global .align 4 m07100_loop_param_18,
	.param .u64 .ptr .global .align 4 m07100_loop_param_19,
	.param .u64 .ptr .global .align 4 m07100_loop_param_20,
	.param .u64 .ptr .global .align 4 m07100_loop_param_21,
	.param .u64 .ptr .global .align 4 m07100_loop_param_22,
	.param .u64 .ptr .global .align 4 m07100_loop_param_23,
	.param .u32 m07100_loop_param_24,
	.param .u32 m07100_loop_param_25,
	.param .u32 m07100_loop_param_26,
	.param .u32 m07100_loop_param_27,
	.param .u32 m07100_loop_param_28,
	.param .u32 m07100_loop_param_29,
	.param .u32 m07100_loop_param_30,
	.param .u32 m07100_loop_param_31,
	.param .u32 m07100_loop_param_32,
	.param .u32 m07100_loop_param_33,
	.param .u32 m07100_loop_param_34
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<1472>;
	.reg .b64 	%rd<2314>;


	ld.param.u64 	%rd230, [m07100_loop_param_4];
	ld.param.u32 	%r8, [m07100_loop_param_29];
	ld.param.u32 	%r9, [m07100_loop_param_34];
	mov.b32	%r10, %envreg3;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %ntid.x;
	mad.lo.s32 	%r13, %r11, %r12, %r10;
	mov.u32 	%r14, %tid.x;
	add.s32 	%r1, %r13, %r14;
	setp.ge.u32	%p1, %r1, %r9;
	@%p1 bra 	BB2_10;

	cvt.u64.u32	%rd1, %r1;
	mul.wide.u32 	%rd231, %r1, 384;
	add.s64 	%rd232, %rd230, %rd231;
	ld.global.u64 	%rd2, [%rd232+24];
	ld.global.u64 	%rd3, [%rd232+56];
	ld.global.u64 	%rd4, [%rd232+64];
	ld.global.u64 	%rd5, [%rd232+72];
	ld.global.u64 	%rd6, [%rd232+80];
	ld.global.u64 	%rd7, [%rd232+88];
	ld.global.u64 	%rd8, [%rd232+96];
	ld.global.u64 	%rd9, [%rd232+120];
	ld.const.u64 	%rd18, [k_sha512];
	ld.global.u64 	%rd19, [%rd232+48];
	ld.global.u64 	%rd20, [%rd232+40];
	ld.global.u64 	%rd21, [%rd232+32];
	ld.global.u64 	%rd22, [%rd232+16];
	ld.global.u64 	%rd23, [%rd232];
	ld.global.u64 	%rd24, [%rd232+8];
	ld.const.u64 	%rd25, [k_sha512+8];
	ld.const.u64 	%rd26, [k_sha512+16];
	ld.const.u64 	%rd27, [k_sha512+24];
	ld.const.u64 	%rd28, [k_sha512+32];
	ld.const.u64 	%rd29, [k_sha512+40];
	ld.const.u64 	%rd30, [k_sha512+48];
	ld.const.u64 	%rd31, [k_sha512+56];
	ld.const.u64 	%rd32, [k_sha512+64];
	ld.const.u64 	%rd33, [k_sha512+72];
	ld.const.u64 	%rd34, [k_sha512+80];
	ld.const.u64 	%rd35, [k_sha512+88];
	ld.const.u64 	%rd36, [k_sha512+96];
	ld.const.u64 	%rd37, [k_sha512+104];
	ld.const.u64 	%rd38, [k_sha512+112];
	ld.const.u64 	%rd39, [k_sha512+120];
	ld.global.u64 	%rd40, [%rd232+112];
	ld.global.u64 	%rd41, [%rd232+104];
	ld.global.u64 	%rd2267, [%rd232+128];
	ld.global.u64 	%rd2268, [%rd232+136];
	ld.global.u64 	%rd2269, [%rd232+144];
	ld.global.u64 	%rd2270, [%rd232+152];
	ld.global.u64 	%rd2271, [%rd232+160];
	ld.global.u64 	%rd2272, [%rd232+168];
	ld.global.u64 	%rd2273, [%rd232+176];
	ld.global.u64 	%rd2274, [%rd232+184];
	setp.eq.s32	%p2, %r8, 0;
	@%p2 bra 	BB2_9;

	mul.lo.s64 	%rd233, %rd1, 384;
	add.s64 	%rd234, %rd230, %rd233;
	add.s64 	%rd50, %rd234, 256;
	add.s64 	%rd51, %rd234, 264;
	add.s64 	%rd52, %rd234, 272;
	add.s64 	%rd53, %rd234, 280;
	add.s64 	%rd54, %rd234, 288;
	add.s64 	%rd55, %rd234, 296;
	add.s64 	%rd56, %rd234, 304;
	add.s64 	%rd57, %rd234, 312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16,%dummy}, %rd21;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17}, %rd21;
	}
	shf.r.wrap.b32 	%r18, %r17, %r16, 14;
	shf.r.wrap.b32 	%r19, %r16, %r17, 14;
	mov.b64 	%rd235, {%r19, %r18};
	shf.r.wrap.b32 	%r20, %r17, %r16, 18;
	shf.r.wrap.b32 	%r21, %r16, %r17, 18;
	mov.b64 	%rd236, {%r21, %r20};
	xor.b64  	%rd237, %rd236, %rd235;
	shf.l.wrap.b32 	%r22, %r16, %r17, 23;
	shf.l.wrap.b32 	%r23, %r17, %r16, 23;
	mov.b64 	%rd238, {%r23, %r22};
	xor.b64  	%rd58, %rd237, %rd238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r24}, %rd23;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25,%dummy}, %rd23;
	}
	shf.l.wrap.b32 	%r26, %r25, %r24, 30;
	shf.l.wrap.b32 	%r27, %r24, %r25, 30;
	mov.b64 	%rd239, {%r27, %r26};
	shf.r.wrap.b32 	%r28, %r24, %r25, 28;
	shf.r.wrap.b32 	%r29, %r25, %r24, 28;
	mov.b64 	%rd240, {%r29, %r28};
	xor.b64  	%rd241, %rd239, %rd240;
	shf.l.wrap.b32 	%r30, %r25, %r24, 25;
	shf.l.wrap.b32 	%r31, %r24, %r25, 25;
	mov.b64 	%rd242, {%r31, %r30};
	xor.b64  	%rd59, %rd241, %rd242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r32,%dummy}, %rd8;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r33}, %rd8;
	}
	shf.r.wrap.b32 	%r34, %r33, %r32, 18;
	shf.r.wrap.b32 	%r35, %r32, %r33, 18;
	mov.b64 	%rd243, {%r35, %r34};
	shf.r.wrap.b32 	%r36, %r33, %r32, 14;
	shf.r.wrap.b32 	%r37, %r32, %r33, 14;
	mov.b64 	%rd244, {%r37, %r36};
	xor.b64  	%rd245, %rd243, %rd244;
	shf.l.wrap.b32 	%r38, %r32, %r33, 23;
	shf.l.wrap.b32 	%r39, %r33, %r32, 23;
	mov.b64 	%rd246, {%r39, %r38};
	xor.b64  	%rd60, %rd245, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r40}, %rd4;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r41,%dummy}, %rd4;
	}
	shf.l.wrap.b32 	%r42, %r41, %r40, 30;
	shf.l.wrap.b32 	%r43, %r40, %r41, 30;
	mov.b64 	%rd247, {%r43, %r42};
	shf.r.wrap.b32 	%r44, %r40, %r41, 28;
	shf.r.wrap.b32 	%r45, %r41, %r40, 28;
	mov.b64 	%rd248, {%r45, %r44};
	xor.b64  	%rd249, %rd247, %rd248;
	shf.l.wrap.b32 	%r46, %r41, %r40, 25;
	shf.l.wrap.b32 	%r47, %r40, %r41, 25;
	mov.b64 	%rd250, {%r47, %r46};
	xor.b64  	%rd61, %rd249, %rd250;
	ld.global.u64 	%rd2249, [%rd234+256];
	ld.global.u64 	%rd2248, [%rd234+264];
	ld.global.u64 	%rd2247, [%rd234+272];
	ld.global.u64 	%rd2246, [%rd234+280];
	ld.global.u64 	%rd2245, [%rd234+288];
	ld.global.u64 	%rd2244, [%rd234+296];
	ld.global.u64 	%rd2243, [%rd234+304];
	ld.global.u64 	%rd2242, [%rd234+312];
	mov.u32 	%r1469, 0;

BB2_3:
	xor.b64  	%rd259, %rd19, %rd20;
	and.b64  	%rd260, %rd259, %rd21;
	xor.b64  	%rd261, %rd260, %rd19;
	add.s64 	%rd262, %rd261, %rd3;
	add.s64 	%rd263, %rd262, %rd2267;
	add.s64 	%rd264, %rd263, %rd18;
	add.s64 	%rd265, %rd264, %rd58;
	add.s64 	%rd266, %rd265, %rd2;
	xor.b64  	%rd267, %rd24, %rd23;
	xor.b64  	%rd268, %rd22, %rd23;
	and.b64  	%rd269, %rd268, %rd267;
	xor.b64  	%rd270, %rd269, %rd23;
	add.s64 	%rd271, %rd265, %rd270;
	add.s64 	%rd272, %rd271, %rd59;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r49,%dummy}, %rd266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r50}, %rd266;
	}
	shf.r.wrap.b32 	%r51, %r50, %r49, 14;
	shf.r.wrap.b32 	%r52, %r49, %r50, 14;
	mov.b64 	%rd273, {%r52, %r51};
	shf.r.wrap.b32 	%r53, %r50, %r49, 18;
	shf.r.wrap.b32 	%r54, %r49, %r50, 18;
	mov.b64 	%rd274, {%r54, %r53};
	xor.b64  	%rd275, %rd274, %rd273;
	shf.l.wrap.b32 	%r55, %r49, %r50, 23;
	shf.l.wrap.b32 	%r56, %r50, %r49, 23;
	mov.b64 	%rd276, {%r56, %r55};
	xor.b64  	%rd277, %rd275, %rd276;
	xor.b64  	%rd278, %rd20, %rd21;
	and.b64  	%rd279, %rd266, %rd278;
	xor.b64  	%rd280, %rd279, %rd20;
	add.s64 	%rd281, %rd2268, %rd19;
	add.s64 	%rd282, %rd281, %rd25;
	add.s64 	%rd283, %rd282, %rd280;
	add.s64 	%rd284, %rd283, %rd277;
	add.s64 	%rd285, %rd284, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r57,%dummy}, %rd272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r58}, %rd272;
	}
	shf.r.wrap.b32 	%r59, %r58, %r57, 28;
	shf.r.wrap.b32 	%r60, %r57, %r58, 28;
	mov.b64 	%rd286, {%r60, %r59};
	shf.l.wrap.b32 	%r61, %r57, %r58, 30;
	shf.l.wrap.b32 	%r62, %r58, %r57, 30;
	mov.b64 	%rd287, {%r62, %r61};
	xor.b64  	%rd288, %rd287, %rd286;
	shf.l.wrap.b32 	%r63, %r57, %r58, 25;
	shf.l.wrap.b32 	%r64, %r58, %r57, 25;
	mov.b64 	%rd289, {%r64, %r63};
	xor.b64  	%rd290, %rd288, %rd289;
	xor.b64  	%rd291, %rd272, %rd24;
	xor.b64  	%rd292, %rd272, %rd23;
	and.b64  	%rd293, %rd292, %rd291;
	xor.b64  	%rd294, %rd293, %rd272;
	add.s64 	%rd295, %rd284, %rd294;
	add.s64 	%rd296, %rd295, %rd290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r65,%dummy}, %rd285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r66}, %rd285;
	}
	shf.r.wrap.b32 	%r67, %r66, %r65, 14;
	shf.r.wrap.b32 	%r68, %r65, %r66, 14;
	mov.b64 	%rd297, {%r68, %r67};
	shf.r.wrap.b32 	%r69, %r66, %r65, 18;
	shf.r.wrap.b32 	%r70, %r65, %r66, 18;
	mov.b64 	%rd298, {%r70, %r69};
	xor.b64  	%rd299, %rd298, %rd297;
	shf.l.wrap.b32 	%r71, %r65, %r66, 23;
	shf.l.wrap.b32 	%r72, %r66, %r65, 23;
	mov.b64 	%rd300, {%r72, %r71};
	xor.b64  	%rd301, %rd299, %rd300;
	xor.b64  	%rd302, %rd266, %rd21;
	and.b64  	%rd303, %rd285, %rd302;
	xor.b64  	%rd304, %rd303, %rd21;
	add.s64 	%rd305, %rd2269, %rd20;
	add.s64 	%rd306, %rd305, %rd26;
	add.s64 	%rd307, %rd306, %rd304;
	add.s64 	%rd308, %rd307, %rd301;
	add.s64 	%rd309, %rd308, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r73,%dummy}, %rd296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r74}, %rd296;
	}
	shf.r.wrap.b32 	%r75, %r74, %r73, 28;
	shf.r.wrap.b32 	%r76, %r73, %r74, 28;
	mov.b64 	%rd310, {%r76, %r75};
	shf.l.wrap.b32 	%r77, %r73, %r74, 30;
	shf.l.wrap.b32 	%r78, %r74, %r73, 30;
	mov.b64 	%rd311, {%r78, %r77};
	xor.b64  	%rd312, %rd311, %rd310;
	shf.l.wrap.b32 	%r79, %r73, %r74, 25;
	shf.l.wrap.b32 	%r80, %r74, %r73, 25;
	mov.b64 	%rd313, {%r80, %r79};
	xor.b64  	%rd314, %rd312, %rd313;
	xor.b64  	%rd315, %rd296, %rd23;
	xor.b64  	%rd316, %rd296, %rd272;
	and.b64  	%rd317, %rd316, %rd315;
	xor.b64  	%rd318, %rd317, %rd296;
	add.s64 	%rd319, %rd308, %rd318;
	add.s64 	%rd320, %rd319, %rd314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r81,%dummy}, %rd309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r82}, %rd309;
	}
	shf.r.wrap.b32 	%r83, %r82, %r81, 14;
	shf.r.wrap.b32 	%r84, %r81, %r82, 14;
	mov.b64 	%rd321, {%r84, %r83};
	shf.r.wrap.b32 	%r85, %r82, %r81, 18;
	shf.r.wrap.b32 	%r86, %r81, %r82, 18;
	mov.b64 	%rd322, {%r86, %r85};
	xor.b64  	%rd323, %rd322, %rd321;
	shf.l.wrap.b32 	%r87, %r81, %r82, 23;
	shf.l.wrap.b32 	%r88, %r82, %r81, 23;
	mov.b64 	%rd324, {%r88, %r87};
	xor.b64  	%rd325, %rd323, %rd324;
	xor.b64  	%rd326, %rd285, %rd266;
	and.b64  	%rd327, %rd309, %rd326;
	xor.b64  	%rd328, %rd327, %rd266;
	add.s64 	%rd329, %rd2270, %rd21;
	add.s64 	%rd330, %rd329, %rd27;
	add.s64 	%rd331, %rd330, %rd328;
	add.s64 	%rd332, %rd331, %rd325;
	add.s64 	%rd333, %rd332, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r89,%dummy}, %rd320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r90}, %rd320;
	}
	shf.r.wrap.b32 	%r91, %r90, %r89, 28;
	shf.r.wrap.b32 	%r92, %r89, %r90, 28;
	mov.b64 	%rd334, {%r92, %r91};
	shf.l.wrap.b32 	%r93, %r89, %r90, 30;
	shf.l.wrap.b32 	%r94, %r90, %r89, 30;
	mov.b64 	%rd335, {%r94, %r93};
	xor.b64  	%rd336, %rd335, %rd334;
	shf.l.wrap.b32 	%r95, %r89, %r90, 25;
	shf.l.wrap.b32 	%r96, %r90, %r89, 25;
	mov.b64 	%rd337, {%r96, %r95};
	xor.b64  	%rd338, %rd336, %rd337;
	xor.b64  	%rd339, %rd320, %rd272;
	xor.b64  	%rd340, %rd320, %rd296;
	and.b64  	%rd341, %rd340, %rd339;
	xor.b64  	%rd342, %rd341, %rd320;
	add.s64 	%rd343, %rd332, %rd342;
	add.s64 	%rd344, %rd343, %rd338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r98}, %rd333;
	}
	shf.r.wrap.b32 	%r99, %r98, %r97, 14;
	shf.r.wrap.b32 	%r100, %r97, %r98, 14;
	mov.b64 	%rd345, {%r100, %r99};
	shf.r.wrap.b32 	%r101, %r98, %r97, 18;
	shf.r.wrap.b32 	%r102, %r97, %r98, 18;
	mov.b64 	%rd346, {%r102, %r101};
	xor.b64  	%rd347, %rd346, %rd345;
	shf.l.wrap.b32 	%r103, %r97, %r98, 23;
	shf.l.wrap.b32 	%r104, %r98, %r97, 23;
	mov.b64 	%rd348, {%r104, %r103};
	xor.b64  	%rd349, %rd347, %rd348;
	xor.b64  	%rd350, %rd309, %rd285;
	and.b64  	%rd351, %rd333, %rd350;
	xor.b64  	%rd352, %rd351, %rd285;
	add.s64 	%rd353, %rd266, %rd2271;
	add.s64 	%rd354, %rd353, %rd28;
	add.s64 	%rd355, %rd354, %rd352;
	add.s64 	%rd356, %rd355, %rd349;
	add.s64 	%rd357, %rd356, %rd272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r105,%dummy}, %rd344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r106}, %rd344;
	}
	shf.r.wrap.b32 	%r107, %r106, %r105, 28;
	shf.r.wrap.b32 	%r108, %r105, %r106, 28;
	mov.b64 	%rd358, {%r108, %r107};
	shf.l.wrap.b32 	%r109, %r105, %r106, 30;
	shf.l.wrap.b32 	%r110, %r106, %r105, 30;
	mov.b64 	%rd359, {%r110, %r109};
	xor.b64  	%rd360, %rd359, %rd358;
	shf.l.wrap.b32 	%r111, %r105, %r106, 25;
	shf.l.wrap.b32 	%r112, %r106, %r105, 25;
	mov.b64 	%rd361, {%r112, %r111};
	xor.b64  	%rd362, %rd360, %rd361;
	xor.b64  	%rd363, %rd344, %rd296;
	xor.b64  	%rd364, %rd344, %rd320;
	and.b64  	%rd365, %rd364, %rd363;
	xor.b64  	%rd366, %rd365, %rd344;
	add.s64 	%rd367, %rd356, %rd366;
	add.s64 	%rd368, %rd367, %rd362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r113,%dummy}, %rd357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r114}, %rd357;
	}
	shf.r.wrap.b32 	%r115, %r114, %r113, 14;
	shf.r.wrap.b32 	%r116, %r113, %r114, 14;
	mov.b64 	%rd369, {%r116, %r115};
	shf.r.wrap.b32 	%r117, %r114, %r113, 18;
	shf.r.wrap.b32 	%r118, %r113, %r114, 18;
	mov.b64 	%rd370, {%r118, %r117};
	xor.b64  	%rd371, %rd370, %rd369;
	shf.l.wrap.b32 	%r119, %r113, %r114, 23;
	shf.l.wrap.b32 	%r120, %r114, %r113, 23;
	mov.b64 	%rd372, {%r120, %r119};
	xor.b64  	%rd373, %rd371, %rd372;
	xor.b64  	%rd374, %rd333, %rd309;
	and.b64  	%rd375, %rd357, %rd374;
	xor.b64  	%rd376, %rd375, %rd309;
	add.s64 	%rd377, %rd285, %rd2272;
	add.s64 	%rd378, %rd377, %rd29;
	add.s64 	%rd379, %rd378, %rd376;
	add.s64 	%rd380, %rd379, %rd373;
	add.s64 	%rd381, %rd380, %rd296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r121,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r122}, %rd368;
	}
	shf.r.wrap.b32 	%r123, %r122, %r121, 28;
	shf.r.wrap.b32 	%r124, %r121, %r122, 28;
	mov.b64 	%rd382, {%r124, %r123};
	shf.l.wrap.b32 	%r125, %r121, %r122, 30;
	shf.l.wrap.b32 	%r126, %r122, %r121, 30;
	mov.b64 	%rd383, {%r126, %r125};
	xor.b64  	%rd384, %rd383, %rd382;
	shf.l.wrap.b32 	%r127, %r121, %r122, 25;
	shf.l.wrap.b32 	%r128, %r122, %r121, 25;
	mov.b64 	%rd385, {%r128, %r127};
	xor.b64  	%rd386, %rd384, %rd385;
	xor.b64  	%rd387, %rd368, %rd320;
	xor.b64  	%rd388, %rd368, %rd344;
	and.b64  	%rd389, %rd388, %rd387;
	xor.b64  	%rd390, %rd389, %rd368;
	add.s64 	%rd391, %rd380, %rd390;
	add.s64 	%rd392, %rd391, %rd386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r129,%dummy}, %rd381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd381;
	}
	shf.r.wrap.b32 	%r131, %r130, %r129, 14;
	shf.r.wrap.b32 	%r132, %r129, %r130, 14;
	mov.b64 	%rd393, {%r132, %r131};
	shf.r.wrap.b32 	%r133, %r130, %r129, 18;
	shf.r.wrap.b32 	%r134, %r129, %r130, 18;
	mov.b64 	%rd394, {%r134, %r133};
	xor.b64  	%rd395, %rd394, %rd393;
	shf.l.wrap.b32 	%r135, %r129, %r130, 23;
	shf.l.wrap.b32 	%r136, %r130, %r129, 23;
	mov.b64 	%rd396, {%r136, %r135};
	xor.b64  	%rd397, %rd395, %rd396;
	xor.b64  	%rd398, %rd357, %rd333;
	and.b64  	%rd399, %rd381, %rd398;
	xor.b64  	%rd400, %rd399, %rd333;
	add.s64 	%rd401, %rd309, %rd2273;
	add.s64 	%rd402, %rd401, %rd30;
	add.s64 	%rd403, %rd402, %rd400;
	add.s64 	%rd404, %rd403, %rd397;
	add.s64 	%rd405, %rd404, %rd320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r137,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r138}, %rd392;
	}
	shf.r.wrap.b32 	%r139, %r138, %r137, 28;
	shf.r.wrap.b32 	%r140, %r137, %r138, 28;
	mov.b64 	%rd406, {%r140, %r139};
	shf.l.wrap.b32 	%r141, %r137, %r138, 30;
	shf.l.wrap.b32 	%r142, %r138, %r137, 30;
	mov.b64 	%rd407, {%r142, %r141};
	xor.b64  	%rd408, %rd407, %rd406;
	shf.l.wrap.b32 	%r143, %r137, %r138, 25;
	shf.l.wrap.b32 	%r144, %r138, %r137, 25;
	mov.b64 	%rd409, {%r144, %r143};
	xor.b64  	%rd410, %rd408, %rd409;
	xor.b64  	%rd411, %rd392, %rd344;
	xor.b64  	%rd412, %rd392, %rd368;
	and.b64  	%rd413, %rd412, %rd411;
	xor.b64  	%rd414, %rd413, %rd392;
	add.s64 	%rd415, %rd404, %rd414;
	add.s64 	%rd416, %rd415, %rd410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r145,%dummy}, %rd405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd405;
	}
	shf.r.wrap.b32 	%r147, %r146, %r145, 14;
	shf.r.wrap.b32 	%r148, %r145, %r146, 14;
	mov.b64 	%rd417, {%r148, %r147};
	shf.r.wrap.b32 	%r149, %r146, %r145, 18;
	shf.r.wrap.b32 	%r150, %r145, %r146, 18;
	mov.b64 	%rd418, {%r150, %r149};
	xor.b64  	%rd419, %rd418, %rd417;
	shf.l.wrap.b32 	%r151, %r145, %r146, 23;
	shf.l.wrap.b32 	%r152, %r146, %r145, 23;
	mov.b64 	%rd420, {%r152, %r151};
	xor.b64  	%rd421, %rd419, %rd420;
	xor.b64  	%rd422, %rd381, %rd357;
	and.b64  	%rd423, %rd405, %rd422;
	xor.b64  	%rd424, %rd423, %rd357;
	add.s64 	%rd425, %rd333, %rd2274;
	add.s64 	%rd426, %rd425, %rd31;
	add.s64 	%rd427, %rd426, %rd424;
	add.s64 	%rd428, %rd427, %rd421;
	add.s64 	%rd429, %rd428, %rd344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r154}, %rd416;
	}
	shf.r.wrap.b32 	%r155, %r154, %r153, 28;
	shf.r.wrap.b32 	%r156, %r153, %r154, 28;
	mov.b64 	%rd430, {%r156, %r155};
	shf.l.wrap.b32 	%r157, %r153, %r154, 30;
	shf.l.wrap.b32 	%r158, %r154, %r153, 30;
	mov.b64 	%rd431, {%r158, %r157};
	xor.b64  	%rd432, %rd431, %rd430;
	shf.l.wrap.b32 	%r159, %r153, %r154, 25;
	shf.l.wrap.b32 	%r160, %r154, %r153, 25;
	mov.b64 	%rd433, {%r160, %r159};
	xor.b64  	%rd434, %rd432, %rd433;
	xor.b64  	%rd435, %rd416, %rd368;
	xor.b64  	%rd436, %rd416, %rd392;
	and.b64  	%rd437, %rd436, %rd435;
	xor.b64  	%rd438, %rd437, %rd416;
	add.s64 	%rd439, %rd428, %rd438;
	add.s64 	%rd440, %rd439, %rd434;
	add.s64 	%rd441, %rd32, %rd357;
	xor.b64  	%rd442, %rd441, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r162}, %rd429;
	}
	shf.r.wrap.b32 	%r163, %r162, %r161, 14;
	shf.r.wrap.b32 	%r164, %r161, %r162, 14;
	mov.b64 	%rd443, {%r164, %r163};
	shf.r.wrap.b32 	%r165, %r162, %r161, 18;
	shf.r.wrap.b32 	%r166, %r161, %r162, 18;
	mov.b64 	%rd444, {%r166, %r165};
	xor.b64  	%rd445, %rd444, %rd443;
	shf.l.wrap.b32 	%r167, %r161, %r162, 23;
	shf.l.wrap.b32 	%r168, %r162, %r161, 23;
	mov.b64 	%rd446, {%r168, %r167};
	xor.b64  	%rd447, %rd445, %rd446;
	xor.b64  	%rd448, %rd405, %rd381;
	and.b64  	%rd449, %rd429, %rd448;
	xor.b64  	%rd450, %rd449, %rd381;
	add.s64 	%rd451, %rd442, %rd450;
	add.s64 	%rd452, %rd451, %rd447;
	add.s64 	%rd453, %rd452, %rd368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd440;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 28;
	shf.r.wrap.b32 	%r172, %r169, %r170, 28;
	mov.b64 	%rd454, {%r172, %r171};
	shf.l.wrap.b32 	%r173, %r169, %r170, 30;
	shf.l.wrap.b32 	%r174, %r170, %r169, 30;
	mov.b64 	%rd455, {%r174, %r173};
	xor.b64  	%rd456, %rd455, %rd454;
	shf.l.wrap.b32 	%r175, %r169, %r170, 25;
	shf.l.wrap.b32 	%r176, %r170, %r169, 25;
	mov.b64 	%rd457, {%r176, %r175};
	xor.b64  	%rd458, %rd456, %rd457;
	xor.b64  	%rd459, %rd440, %rd392;
	xor.b64  	%rd460, %rd440, %rd416;
	and.b64  	%rd461, %rd460, %rd459;
	xor.b64  	%rd462, %rd461, %rd440;
	add.s64 	%rd463, %rd452, %rd462;
	add.s64 	%rd464, %rd463, %rd458;
	add.s64 	%rd465, %rd33, %rd381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd453;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 14;
	shf.r.wrap.b32 	%r180, %r177, %r178, 14;
	mov.b64 	%rd466, {%r180, %r179};
	shf.r.wrap.b32 	%r181, %r178, %r177, 18;
	shf.r.wrap.b32 	%r182, %r177, %r178, 18;
	mov.b64 	%rd467, {%r182, %r181};
	xor.b64  	%rd468, %rd467, %rd466;
	shf.l.wrap.b32 	%r183, %r177, %r178, 23;
	shf.l.wrap.b32 	%r184, %r178, %r177, 23;
	mov.b64 	%rd469, {%r184, %r183};
	xor.b64  	%rd470, %rd468, %rd469;
	xor.b64  	%rd471, %rd429, %rd405;
	and.b64  	%rd472, %rd453, %rd471;
	xor.b64  	%rd473, %rd472, %rd405;
	add.s64 	%rd474, %rd465, %rd473;
	add.s64 	%rd475, %rd474, %rd470;
	add.s64 	%rd476, %rd475, %rd392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r185,%dummy}, %rd464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r186}, %rd464;
	}
	shf.r.wrap.b32 	%r187, %r186, %r185, 28;
	shf.r.wrap.b32 	%r188, %r185, %r186, 28;
	mov.b64 	%rd477, {%r188, %r187};
	shf.l.wrap.b32 	%r189, %r185, %r186, 30;
	shf.l.wrap.b32 	%r190, %r186, %r185, 30;
	mov.b64 	%rd478, {%r190, %r189};
	xor.b64  	%rd479, %rd478, %rd477;
	shf.l.wrap.b32 	%r191, %r185, %r186, 25;
	shf.l.wrap.b32 	%r192, %r186, %r185, 25;
	mov.b64 	%rd480, {%r192, %r191};
	xor.b64  	%rd481, %rd479, %rd480;
	xor.b64  	%rd482, %rd464, %rd416;
	xor.b64  	%rd483, %rd464, %rd440;
	and.b64  	%rd484, %rd483, %rd482;
	xor.b64  	%rd485, %rd484, %rd464;
	add.s64 	%rd486, %rd475, %rd485;
	add.s64 	%rd487, %rd486, %rd481;
	add.s64 	%rd488, %rd34, %rd405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r193,%dummy}, %rd476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r194}, %rd476;
	}
	shf.r.wrap.b32 	%r195, %r194, %r193, 14;
	shf.r.wrap.b32 	%r196, %r193, %r194, 14;
	mov.b64 	%rd489, {%r196, %r195};
	shf.r.wrap.b32 	%r197, %r194, %r193, 18;
	shf.r.wrap.b32 	%r198, %r193, %r194, 18;
	mov.b64 	%rd490, {%r198, %r197};
	xor.b64  	%rd491, %rd490, %rd489;
	shf.l.wrap.b32 	%r199, %r193, %r194, 23;
	shf.l.wrap.b32 	%r200, %r194, %r193, 23;
	mov.b64 	%rd492, {%r200, %r199};
	xor.b64  	%rd493, %rd491, %rd492;
	xor.b64  	%rd494, %rd453, %rd429;
	and.b64  	%rd495, %rd476, %rd494;
	xor.b64  	%rd496, %rd495, %rd429;
	add.s64 	%rd497, %rd488, %rd496;
	add.s64 	%rd498, %rd497, %rd493;
	add.s64 	%rd499, %rd498, %rd416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r201,%dummy}, %rd487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd487;
	}
	shf.r.wrap.b32 	%r203, %r202, %r201, 28;
	shf.r.wrap.b32 	%r204, %r201, %r202, 28;
	mov.b64 	%rd500, {%r204, %r203};
	shf.l.wrap.b32 	%r205, %r201, %r202, 30;
	shf.l.wrap.b32 	%r206, %r202, %r201, 30;
	mov.b64 	%rd501, {%r206, %r205};
	xor.b64  	%rd502, %rd501, %rd500;
	shf.l.wrap.b32 	%r207, %r201, %r202, 25;
	shf.l.wrap.b32 	%r208, %r202, %r201, 25;
	mov.b64 	%rd503, {%r208, %r207};
	xor.b64  	%rd504, %rd502, %rd503;
	xor.b64  	%rd505, %rd487, %rd440;
	xor.b64  	%rd506, %rd487, %rd464;
	and.b64  	%rd507, %rd506, %rd505;
	xor.b64  	%rd508, %rd507, %rd487;
	add.s64 	%rd509, %rd498, %rd508;
	add.s64 	%rd510, %rd509, %rd504;
	add.s64 	%rd511, %rd35, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r209,%dummy}, %rd499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd499;
	}
	shf.r.wrap.b32 	%r211, %r210, %r209, 14;
	shf.r.wrap.b32 	%r212, %r209, %r210, 14;
	mov.b64 	%rd512, {%r212, %r211};
	shf.r.wrap.b32 	%r213, %r210, %r209, 18;
	shf.r.wrap.b32 	%r214, %r209, %r210, 18;
	mov.b64 	%rd513, {%r214, %r213};
	xor.b64  	%rd514, %rd513, %rd512;
	shf.l.wrap.b32 	%r215, %r209, %r210, 23;
	shf.l.wrap.b32 	%r216, %r210, %r209, 23;
	mov.b64 	%rd515, {%r216, %r215};
	xor.b64  	%rd516, %rd514, %rd515;
	xor.b64  	%rd517, %rd476, %rd453;
	and.b64  	%rd518, %rd499, %rd517;
	xor.b64  	%rd519, %rd518, %rd453;
	add.s64 	%rd520, %rd511, %rd519;
	add.s64 	%rd521, %rd520, %rd516;
	add.s64 	%rd522, %rd521, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd510;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 28;
	shf.r.wrap.b32 	%r220, %r217, %r218, 28;
	mov.b64 	%rd523, {%r220, %r219};
	shf.l.wrap.b32 	%r221, %r217, %r218, 30;
	shf.l.wrap.b32 	%r222, %r218, %r217, 30;
	mov.b64 	%rd524, {%r222, %r221};
	xor.b64  	%rd525, %rd524, %rd523;
	shf.l.wrap.b32 	%r223, %r217, %r218, 25;
	shf.l.wrap.b32 	%r224, %r218, %r217, 25;
	mov.b64 	%rd526, {%r224, %r223};
	xor.b64  	%rd527, %rd525, %rd526;
	xor.b64  	%rd528, %rd510, %rd464;
	xor.b64  	%rd529, %rd510, %rd487;
	and.b64  	%rd530, %rd529, %rd528;
	xor.b64  	%rd531, %rd530, %rd510;
	add.s64 	%rd532, %rd521, %rd531;
	add.s64 	%rd533, %rd532, %rd527;
	add.s64 	%rd534, %rd36, %rd453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r226}, %rd522;
	}
	shf.r.wrap.b32 	%r227, %r226, %r225, 14;
	shf.r.wrap.b32 	%r228, %r225, %r226, 14;
	mov.b64 	%rd535, {%r228, %r227};
	shf.r.wrap.b32 	%r229, %r226, %r225, 18;
	shf.r.wrap.b32 	%r230, %r225, %r226, 18;
	mov.b64 	%rd536, {%r230, %r229};
	xor.b64  	%rd537, %rd536, %rd535;
	shf.l.wrap.b32 	%r231, %r225, %r226, 23;
	shf.l.wrap.b32 	%r232, %r226, %r225, 23;
	mov.b64 	%rd538, {%r232, %r231};
	xor.b64  	%rd539, %rd537, %rd538;
	xor.b64  	%rd540, %rd499, %rd476;
	and.b64  	%rd541, %rd522, %rd540;
	xor.b64  	%rd542, %rd541, %rd476;
	add.s64 	%rd543, %rd534, %rd542;
	add.s64 	%rd544, %rd543, %rd539;
	add.s64 	%rd2266, %rd544, %rd464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r233,%dummy}, %rd533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r234}, %rd533;
	}
	shf.r.wrap.b32 	%r235, %r234, %r233, 28;
	shf.r.wrap.b32 	%r236, %r233, %r234, 28;
	mov.b64 	%rd545, {%r236, %r235};
	shf.l.wrap.b32 	%r237, %r233, %r234, 30;
	shf.l.wrap.b32 	%r238, %r234, %r233, 30;
	mov.b64 	%rd546, {%r238, %r237};
	xor.b64  	%rd547, %rd546, %rd545;
	shf.l.wrap.b32 	%r239, %r233, %r234, 25;
	shf.l.wrap.b32 	%r240, %r234, %r233, 25;
	mov.b64 	%rd548, {%r240, %r239};
	xor.b64  	%rd549, %rd547, %rd548;
	xor.b64  	%rd550, %rd533, %rd487;
	xor.b64  	%rd551, %rd533, %rd510;
	and.b64  	%rd552, %rd551, %rd550;
	xor.b64  	%rd553, %rd552, %rd533;
	add.s64 	%rd554, %rd544, %rd553;
	add.s64 	%rd2262, %rd554, %rd549;
	add.s64 	%rd555, %rd37, %rd476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd2266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd2266;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 14;
	shf.r.wrap.b32 	%r244, %r241, %r242, 14;
	mov.b64 	%rd556, {%r244, %r243};
	shf.r.wrap.b32 	%r245, %r242, %r241, 18;
	shf.r.wrap.b32 	%r246, %r241, %r242, 18;
	mov.b64 	%rd557, {%r246, %r245};
	xor.b64  	%rd558, %rd557, %rd556;
	shf.l.wrap.b32 	%r247, %r241, %r242, 23;
	shf.l.wrap.b32 	%r248, %r242, %r241, 23;
	mov.b64 	%rd559, {%r248, %r247};
	xor.b64  	%rd560, %rd558, %rd559;
	xor.b64  	%rd561, %rd522, %rd499;
	and.b64  	%rd562, %rd2266, %rd561;
	xor.b64  	%rd563, %rd562, %rd499;
	add.s64 	%rd564, %rd555, %rd563;
	add.s64 	%rd565, %rd564, %rd560;
	add.s64 	%rd2265, %rd565, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r249,%dummy}, %rd2262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r250}, %rd2262;
	}
	shf.r.wrap.b32 	%r251, %r250, %r249, 28;
	shf.r.wrap.b32 	%r252, %r249, %r250, 28;
	mov.b64 	%rd566, {%r252, %r251};
	shf.l.wrap.b32 	%r253, %r249, %r250, 30;
	shf.l.wrap.b32 	%r254, %r250, %r249, 30;
	mov.b64 	%rd567, {%r254, %r253};
	xor.b64  	%rd568, %rd567, %rd566;
	shf.l.wrap.b32 	%r255, %r249, %r250, 25;
	shf.l.wrap.b32 	%r256, %r250, %r249, 25;
	mov.b64 	%rd569, {%r256, %r255};
	xor.b64  	%rd570, %rd568, %rd569;
	xor.b64  	%rd571, %rd2262, %rd510;
	xor.b64  	%rd572, %rd2262, %rd533;
	and.b64  	%rd573, %rd572, %rd571;
	xor.b64  	%rd574, %rd573, %rd2262;
	add.s64 	%rd575, %rd565, %rd574;
	add.s64 	%rd2261, %rd575, %rd570;
	add.s64 	%rd576, %rd38, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd2265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd2265;
	}
	shf.r.wrap.b32 	%r259, %r258, %r257, 14;
	shf.r.wrap.b32 	%r260, %r257, %r258, 14;
	mov.b64 	%rd577, {%r260, %r259};
	shf.r.wrap.b32 	%r261, %r258, %r257, 18;
	shf.r.wrap.b32 	%r262, %r257, %r258, 18;
	mov.b64 	%rd578, {%r262, %r261};
	xor.b64  	%rd579, %rd578, %rd577;
	shf.l.wrap.b32 	%r263, %r257, %r258, 23;
	shf.l.wrap.b32 	%r264, %r258, %r257, 23;
	mov.b64 	%rd580, {%r264, %r263};
	xor.b64  	%rd581, %rd579, %rd580;
	xor.b64  	%rd582, %rd2266, %rd522;
	and.b64  	%rd583, %rd2265, %rd582;
	xor.b64  	%rd584, %rd583, %rd522;
	add.s64 	%rd585, %rd576, %rd584;
	add.s64 	%rd586, %rd585, %rd581;
	add.s64 	%rd2264, %rd586, %rd510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r265,%dummy}, %rd2261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r266}, %rd2261;
	}
	shf.r.wrap.b32 	%r267, %r266, %r265, 28;
	shf.r.wrap.b32 	%r268, %r265, %r266, 28;
	mov.b64 	%rd587, {%r268, %r267};
	shf.l.wrap.b32 	%r269, %r265, %r266, 30;
	shf.l.wrap.b32 	%r270, %r266, %r265, 30;
	mov.b64 	%rd588, {%r270, %r269};
	xor.b64  	%rd589, %rd588, %rd587;
	shf.l.wrap.b32 	%r271, %r265, %r266, 25;
	shf.l.wrap.b32 	%r272, %r266, %r265, 25;
	mov.b64 	%rd590, {%r272, %r271};
	xor.b64  	%rd591, %rd589, %rd590;
	xor.b64  	%rd592, %rd2261, %rd533;
	xor.b64  	%rd593, %rd2261, %rd2262;
	and.b64  	%rd594, %rd593, %rd592;
	xor.b64  	%rd595, %rd594, %rd2261;
	add.s64 	%rd596, %rd586, %rd595;
	add.s64 	%rd2260, %rd596, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd2264;
	}
	shf.r.wrap.b32 	%r275, %r274, %r273, 14;
	shf.r.wrap.b32 	%r276, %r273, %r274, 14;
	mov.b64 	%rd597, {%r276, %r275};
	shf.r.wrap.b32 	%r277, %r274, %r273, 18;
	shf.r.wrap.b32 	%r278, %r273, %r274, 18;
	mov.b64 	%rd598, {%r278, %r277};
	xor.b64  	%rd599, %rd598, %rd597;
	shf.l.wrap.b32 	%r279, %r273, %r274, 23;
	shf.l.wrap.b32 	%r280, %r274, %r273, 23;
	mov.b64 	%rd600, {%r280, %r279};
	xor.b64  	%rd601, %rd599, %rd600;
	xor.b64  	%rd602, %rd2265, %rd2266;
	and.b64  	%rd603, %rd2264, %rd602;
	xor.b64  	%rd604, %rd603, %rd2266;
	add.s64 	%rd605, %rd522, %rd39;
	add.s64 	%rd606, %rd605, %rd604;
	add.s64 	%rd607, %rd606, %rd601;
	add.s64 	%rd608, %rd607, 1536;
	add.s64 	%rd2263, %rd608, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd2260;
	}
	shf.r.wrap.b32 	%r283, %r282, %r281, 28;
	shf.r.wrap.b32 	%r284, %r281, %r282, 28;
	mov.b64 	%rd609, {%r284, %r283};
	shf.l.wrap.b32 	%r285, %r281, %r282, 30;
	shf.l.wrap.b32 	%r286, %r282, %r281, 30;
	mov.b64 	%rd610, {%r286, %r285};
	xor.b64  	%rd611, %rd610, %rd609;
	shf.l.wrap.b32 	%r287, %r281, %r282, 25;
	shf.l.wrap.b32 	%r288, %r282, %r281, 25;
	mov.b64 	%rd612, {%r288, %r287};
	xor.b64  	%rd613, %rd611, %rd612;
	xor.b64  	%rd614, %rd2260, %rd2262;
	xor.b64  	%rd615, %rd2260, %rd2261;
	and.b64  	%rd616, %rd615, %rd614;
	xor.b64  	%rd617, %rd616, %rd2260;
	add.s64 	%rd618, %rd608, %rd617;
	add.s64 	%rd2259, %rd618, %rd613;
	mov.u64 	%rd2276, 0;
	mov.u64 	%rd2275, -9223372036854775808;
	mov.u64 	%rd2258, 1536;
	mov.u32 	%r1470, 16;
	mov.u64 	%rd2277, %rd2276;
	mov.u64 	%rd2278, %rd2276;
	mov.u64 	%rd2279, %rd2276;
	mov.u64 	%rd2280, %rd2276;
	mov.u64 	%rd2281, %rd2276;

BB2_4:
	shr.u64 	%rd619, %rd2281, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd2281;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 19;
	shf.r.wrap.b32 	%r292, %r289, %r290, 19;
	mov.b64 	%rd620, {%r292, %r291};
	xor.b64  	%rd621, %rd620, %rd619;
	shf.l.wrap.b32 	%r293, %r289, %r290, 3;
	shf.l.wrap.b32 	%r294, %r290, %r289, 3;
	mov.b64 	%rd622, {%r294, %r293};
	xor.b64  	%rd623, %rd621, %rd622;
	shr.u64 	%rd624, %rd2268, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd2268;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 1;
	shf.r.wrap.b32 	%r298, %r295, %r296, 1;
	mov.b64 	%rd625, {%r298, %r297};
	xor.b64  	%rd626, %rd625, %rd624;
	shf.r.wrap.b32 	%r299, %r296, %r295, 8;
	shf.r.wrap.b32 	%r300, %r295, %r296, 8;
	mov.b64 	%rd627, {%r300, %r299};
	xor.b64  	%rd628, %rd626, %rd627;
	add.s64 	%rd629, %rd2267, %rd2276;
	add.s64 	%rd630, %rd629, %rd623;
	add.s64 	%rd2267, %rd630, %rd628;
	shr.u64 	%rd631, %rd2258, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd2258;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 19;
	shf.r.wrap.b32 	%r304, %r301, %r302, 19;
	mov.b64 	%rd632, {%r304, %r303};
	xor.b64  	%rd633, %rd632, %rd631;
	shf.l.wrap.b32 	%r305, %r301, %r302, 3;
	shf.l.wrap.b32 	%r306, %r302, %r301, 3;
	mov.b64 	%rd634, {%r306, %r305};
	xor.b64  	%rd635, %rd633, %rd634;
	shr.u64 	%rd636, %rd2269, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd2269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd2269;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 1;
	shf.r.wrap.b32 	%r310, %r307, %r308, 1;
	mov.b64 	%rd637, {%r310, %r309};
	xor.b64  	%rd638, %rd637, %rd636;
	shf.r.wrap.b32 	%r311, %r308, %r307, 8;
	shf.r.wrap.b32 	%r312, %r307, %r308, 8;
	mov.b64 	%rd639, {%r312, %r311};
	xor.b64  	%rd640, %rd638, %rd639;
	add.s64 	%rd641, %rd2268, %rd2277;
	add.s64 	%rd642, %rd641, %rd635;
	add.s64 	%rd2268, %rd642, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r313,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r314}, %rd2267;
	}
	shf.r.wrap.b32 	%r315, %r314, %r313, 19;
	shf.r.wrap.b32 	%r316, %r313, %r314, 19;
	mov.b64 	%rd643, {%r316, %r315};
	shf.l.wrap.b32 	%r317, %r313, %r314, 3;
	shf.l.wrap.b32 	%r318, %r314, %r313, 3;
	mov.b64 	%rd644, {%r318, %r317};
	shr.u64 	%rd645, %rd2267, 6;
	xor.b64  	%rd646, %rd643, %rd645;
	xor.b64  	%rd647, %rd646, %rd644;
	shr.u64 	%rd648, %rd2270, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd2270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd2270;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 1;
	shf.r.wrap.b32 	%r322, %r319, %r320, 1;
	mov.b64 	%rd649, {%r322, %r321};
	xor.b64  	%rd650, %rd649, %rd648;
	shf.r.wrap.b32 	%r323, %r320, %r319, 8;
	shf.r.wrap.b32 	%r324, %r319, %r320, 8;
	mov.b64 	%rd651, {%r324, %r323};
	xor.b64  	%rd652, %rd650, %rd651;
	add.s64 	%rd653, %rd2269, %rd2278;
	add.s64 	%rd654, %rd653, %rd647;
	add.s64 	%rd2269, %rd654, %rd652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd2268;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 19;
	shf.r.wrap.b32 	%r328, %r325, %r326, 19;
	mov.b64 	%rd655, {%r328, %r327};
	shf.l.wrap.b32 	%r329, %r325, %r326, 3;
	shf.l.wrap.b32 	%r330, %r326, %r325, 3;
	mov.b64 	%rd656, {%r330, %r329};
	shr.u64 	%rd657, %rd2268, 6;
	xor.b64  	%rd658, %rd655, %rd657;
	xor.b64  	%rd659, %rd658, %rd656;
	shr.u64 	%rd660, %rd2271, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd2271;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 1;
	shf.r.wrap.b32 	%r334, %r331, %r332, 1;
	mov.b64 	%rd661, {%r334, %r333};
	xor.b64  	%rd662, %rd661, %rd660;
	shf.r.wrap.b32 	%r335, %r332, %r331, 8;
	shf.r.wrap.b32 	%r336, %r331, %r332, 8;
	mov.b64 	%rd663, {%r336, %r335};
	xor.b64  	%rd664, %rd662, %rd663;
	add.s64 	%rd665, %rd2270, %rd2279;
	add.s64 	%rd666, %rd665, %rd659;
	add.s64 	%rd2270, %rd666, %rd664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd2269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd2269;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 19;
	shf.r.wrap.b32 	%r340, %r337, %r338, 19;
	mov.b64 	%rd667, {%r340, %r339};
	shf.l.wrap.b32 	%r341, %r337, %r338, 3;
	shf.l.wrap.b32 	%r342, %r338, %r337, 3;
	mov.b64 	%rd668, {%r342, %r341};
	shr.u64 	%rd669, %rd2269, 6;
	xor.b64  	%rd670, %rd667, %rd669;
	xor.b64  	%rd671, %rd670, %rd668;
	shr.u64 	%rd672, %rd2272, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd2272;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 1;
	shf.r.wrap.b32 	%r346, %r343, %r344, 1;
	mov.b64 	%rd673, {%r346, %r345};
	xor.b64  	%rd674, %rd673, %rd672;
	shf.r.wrap.b32 	%r347, %r344, %r343, 8;
	shf.r.wrap.b32 	%r348, %r343, %r344, 8;
	mov.b64 	%rd675, {%r348, %r347};
	xor.b64  	%rd676, %rd674, %rd675;
	add.s64 	%rd677, %rd2271, %rd2280;
	add.s64 	%rd678, %rd677, %rd671;
	add.s64 	%rd2271, %rd678, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd2270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r350}, %rd2270;
	}
	shf.r.wrap.b32 	%r351, %r350, %r349, 19;
	shf.r.wrap.b32 	%r352, %r349, %r350, 19;
	mov.b64 	%rd679, {%r352, %r351};
	shf.l.wrap.b32 	%r353, %r349, %r350, 3;
	shf.l.wrap.b32 	%r354, %r350, %r349, 3;
	mov.b64 	%rd680, {%r354, %r353};
	shr.u64 	%rd681, %rd2270, 6;
	xor.b64  	%rd682, %rd679, %rd681;
	xor.b64  	%rd683, %rd682, %rd680;
	shr.u64 	%rd684, %rd2273, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd2273;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 1;
	shf.r.wrap.b32 	%r358, %r355, %r356, 1;
	mov.b64 	%rd685, {%r358, %r357};
	xor.b64  	%rd686, %rd685, %rd684;
	shf.r.wrap.b32 	%r359, %r356, %r355, 8;
	shf.r.wrap.b32 	%r360, %r355, %r356, 8;
	mov.b64 	%rd687, {%r360, %r359};
	xor.b64  	%rd688, %rd686, %rd687;
	add.s64 	%rd689, %rd2272, %rd2281;
	add.s64 	%rd690, %rd689, %rd683;
	add.s64 	%rd2272, %rd690, %rd688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd2271;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 19;
	shf.r.wrap.b32 	%r364, %r361, %r362, 19;
	mov.b64 	%rd691, {%r364, %r363};
	shf.l.wrap.b32 	%r365, %r361, %r362, 3;
	shf.l.wrap.b32 	%r366, %r362, %r361, 3;
	mov.b64 	%rd692, {%r366, %r365};
	shr.u64 	%rd693, %rd2271, 6;
	xor.b64  	%rd694, %rd691, %rd693;
	xor.b64  	%rd695, %rd694, %rd692;
	shr.u64 	%rd696, %rd2274, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd2274;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 1;
	shf.r.wrap.b32 	%r370, %r367, %r368, 1;
	mov.b64 	%rd697, {%r370, %r369};
	xor.b64  	%rd698, %rd697, %rd696;
	shf.r.wrap.b32 	%r371, %r368, %r367, 8;
	shf.r.wrap.b32 	%r372, %r367, %r368, 8;
	mov.b64 	%rd699, {%r372, %r371};
	xor.b64  	%rd700, %rd698, %rd699;
	add.s64 	%rd701, %rd2258, %rd2273;
	add.s64 	%rd702, %rd701, %rd695;
	add.s64 	%rd2273, %rd702, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd2272;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 19;
	shf.r.wrap.b32 	%r376, %r373, %r374, 19;
	mov.b64 	%rd703, {%r376, %r375};
	shf.l.wrap.b32 	%r377, %r373, %r374, 3;
	shf.l.wrap.b32 	%r378, %r374, %r373, 3;
	mov.b64 	%rd704, {%r378, %r377};
	shr.u64 	%rd705, %rd2272, 6;
	xor.b64  	%rd706, %rd703, %rd705;
	xor.b64  	%rd707, %rd706, %rd704;
	shr.u64 	%rd708, %rd2275, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd2275;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 1;
	shf.r.wrap.b32 	%r382, %r379, %r380, 1;
	mov.b64 	%rd709, {%r382, %r381};
	xor.b64  	%rd710, %rd709, %rd708;
	shf.r.wrap.b32 	%r383, %r380, %r379, 8;
	shf.r.wrap.b32 	%r384, %r379, %r380, 8;
	mov.b64 	%rd711, {%r384, %r383};
	xor.b64  	%rd712, %rd710, %rd711;
	add.s64 	%rd713, %rd2267, %rd2274;
	add.s64 	%rd714, %rd713, %rd707;
	add.s64 	%rd2274, %rd714, %rd712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd2273;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 19;
	shf.r.wrap.b32 	%r388, %r385, %r386, 19;
	mov.b64 	%rd715, {%r388, %r387};
	shf.l.wrap.b32 	%r389, %r385, %r386, 3;
	shf.l.wrap.b32 	%r390, %r386, %r385, 3;
	mov.b64 	%rd716, {%r390, %r389};
	shr.u64 	%rd717, %rd2273, 6;
	xor.b64  	%rd718, %rd715, %rd717;
	xor.b64  	%rd719, %rd718, %rd716;
	shr.u64 	%rd720, %rd2276, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd2276;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 1;
	shf.r.wrap.b32 	%r394, %r391, %r392, 1;
	mov.b64 	%rd721, {%r394, %r393};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.r.wrap.b32 	%r395, %r392, %r391, 8;
	shf.r.wrap.b32 	%r396, %r391, %r392, 8;
	mov.b64 	%rd723, {%r396, %r395};
	xor.b64  	%rd724, %rd722, %rd723;
	add.s64 	%rd725, %rd2268, %rd2275;
	add.s64 	%rd726, %rd725, %rd719;
	add.s64 	%rd2275, %rd726, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd2274;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 19;
	shf.r.wrap.b32 	%r400, %r397, %r398, 19;
	mov.b64 	%rd727, {%r400, %r399};
	shf.l.wrap.b32 	%r401, %r397, %r398, 3;
	shf.l.wrap.b32 	%r402, %r398, %r397, 3;
	mov.b64 	%rd728, {%r402, %r401};
	shr.u64 	%rd729, %rd2274, 6;
	xor.b64  	%rd730, %rd727, %rd729;
	xor.b64  	%rd731, %rd730, %rd728;
	shr.u64 	%rd732, %rd2277, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd2277;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 1;
	shf.r.wrap.b32 	%r406, %r403, %r404, 1;
	mov.b64 	%rd733, {%r406, %r405};
	xor.b64  	%rd734, %rd733, %rd732;
	shf.r.wrap.b32 	%r407, %r404, %r403, 8;
	shf.r.wrap.b32 	%r408, %r403, %r404, 8;
	mov.b64 	%rd735, {%r408, %r407};
	xor.b64  	%rd736, %rd734, %rd735;
	add.s64 	%rd737, %rd2269, %rd2276;
	add.s64 	%rd738, %rd737, %rd731;
	add.s64 	%rd2276, %rd738, %rd736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd2275;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 19;
	shf.r.wrap.b32 	%r412, %r409, %r410, 19;
	mov.b64 	%rd739, {%r412, %r411};
	shf.l.wrap.b32 	%r413, %r409, %r410, 3;
	shf.l.wrap.b32 	%r414, %r410, %r409, 3;
	mov.b64 	%rd740, {%r414, %r413};
	shr.u64 	%rd741, %rd2275, 6;
	xor.b64  	%rd742, %rd739, %rd741;
	xor.b64  	%rd743, %rd742, %rd740;
	shr.u64 	%rd744, %rd2278, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd2278;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 1;
	shf.r.wrap.b32 	%r418, %r415, %r416, 1;
	mov.b64 	%rd745, {%r418, %r417};
	xor.b64  	%rd746, %rd745, %rd744;
	shf.r.wrap.b32 	%r419, %r416, %r415, 8;
	shf.r.wrap.b32 	%r420, %r415, %r416, 8;
	mov.b64 	%rd747, {%r420, %r419};
	xor.b64  	%rd748, %rd746, %rd747;
	add.s64 	%rd749, %rd2270, %rd2277;
	add.s64 	%rd750, %rd749, %rd743;
	add.s64 	%rd2277, %rd750, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd2276;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 19;
	shf.r.wrap.b32 	%r424, %r421, %r422, 19;
	mov.b64 	%rd751, {%r424, %r423};
	shf.l.wrap.b32 	%r425, %r421, %r422, 3;
	shf.l.wrap.b32 	%r426, %r422, %r421, 3;
	mov.b64 	%rd752, {%r426, %r425};
	shr.u64 	%rd753, %rd2276, 6;
	xor.b64  	%rd754, %rd751, %rd753;
	xor.b64  	%rd755, %rd754, %rd752;
	shr.u64 	%rd756, %rd2279, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd2279;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 1;
	shf.r.wrap.b32 	%r430, %r427, %r428, 1;
	mov.b64 	%rd757, {%r430, %r429};
	xor.b64  	%rd758, %rd757, %rd756;
	shf.r.wrap.b32 	%r431, %r428, %r427, 8;
	shf.r.wrap.b32 	%r432, %r427, %r428, 8;
	mov.b64 	%rd759, {%r432, %r431};
	xor.b64  	%rd760, %rd758, %rd759;
	add.s64 	%rd761, %rd2271, %rd2278;
	add.s64 	%rd762, %rd761, %rd755;
	add.s64 	%rd2278, %rd762, %rd760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r433,%dummy}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r434}, %rd2277;
	}
	shf.r.wrap.b32 	%r435, %r434, %r433, 19;
	shf.r.wrap.b32 	%r436, %r433, %r434, 19;
	mov.b64 	%rd763, {%r436, %r435};
	shf.l.wrap.b32 	%r437, %r433, %r434, 3;
	shf.l.wrap.b32 	%r438, %r434, %r433, 3;
	mov.b64 	%rd764, {%r438, %r437};
	shr.u64 	%rd765, %rd2277, 6;
	xor.b64  	%rd766, %rd763, %rd765;
	xor.b64  	%rd767, %rd766, %rd764;
	shr.u64 	%rd768, %rd2280, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r439,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd2280;
	}
	shf.r.wrap.b32 	%r441, %r440, %r439, 1;
	shf.r.wrap.b32 	%r442, %r439, %r440, 1;
	mov.b64 	%rd769, {%r442, %r441};
	xor.b64  	%rd770, %rd769, %rd768;
	shf.r.wrap.b32 	%r443, %r440, %r439, 8;
	shf.r.wrap.b32 	%r444, %r439, %r440, 8;
	mov.b64 	%rd771, {%r444, %r443};
	xor.b64  	%rd772, %rd770, %rd771;
	add.s64 	%rd773, %rd2272, %rd2279;
	add.s64 	%rd774, %rd773, %rd767;
	add.s64 	%rd2279, %rd774, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r446}, %rd2278;
	}
	shf.r.wrap.b32 	%r447, %r446, %r445, 19;
	shf.r.wrap.b32 	%r448, %r445, %r446, 19;
	mov.b64 	%rd775, {%r448, %r447};
	shf.l.wrap.b32 	%r449, %r445, %r446, 3;
	shf.l.wrap.b32 	%r450, %r446, %r445, 3;
	mov.b64 	%rd776, {%r450, %r449};
	shr.u64 	%rd777, %rd2278, 6;
	xor.b64  	%rd778, %rd775, %rd777;
	xor.b64  	%rd779, %rd778, %rd776;
	shr.u64 	%rd780, %rd2281, 7;
	shf.r.wrap.b32 	%r451, %r290, %r289, 1;
	shf.r.wrap.b32 	%r452, %r289, %r290, 1;
	mov.b64 	%rd781, {%r452, %r451};
	xor.b64  	%rd782, %rd781, %rd780;
	shf.r.wrap.b32 	%r453, %r290, %r289, 8;
	shf.r.wrap.b32 	%r454, %r289, %r290, 8;
	mov.b64 	%rd783, {%r454, %r453};
	xor.b64  	%rd784, %rd782, %rd783;
	add.s64 	%rd785, %rd2273, %rd2280;
	add.s64 	%rd786, %rd785, %rd779;
	add.s64 	%rd2280, %rd786, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd2279;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 19;
	shf.r.wrap.b32 	%r458, %r455, %r456, 19;
	mov.b64 	%rd787, {%r458, %r457};
	shf.l.wrap.b32 	%r459, %r455, %r456, 3;
	shf.l.wrap.b32 	%r460, %r456, %r455, 3;
	mov.b64 	%rd788, {%r460, %r459};
	shr.u64 	%rd789, %rd2279, 6;
	xor.b64  	%rd790, %rd787, %rd789;
	xor.b64  	%rd791, %rd790, %rd788;
	shr.u64 	%rd792, %rd2258, 7;
	shf.r.wrap.b32 	%r461, %r302, %r301, 1;
	shf.r.wrap.b32 	%r462, %r301, %r302, 1;
	mov.b64 	%rd793, {%r462, %r461};
	xor.b64  	%rd794, %rd793, %rd792;
	shf.r.wrap.b32 	%r463, %r302, %r301, 8;
	shf.r.wrap.b32 	%r464, %r301, %r302, 8;
	mov.b64 	%rd795, {%r464, %r463};
	xor.b64  	%rd796, %rd794, %rd795;
	add.s64 	%rd797, %rd2274, %rd2281;
	add.s64 	%rd798, %rd797, %rd791;
	add.s64 	%rd2281, %rd798, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r465,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r466}, %rd2280;
	}
	shf.r.wrap.b32 	%r467, %r466, %r465, 19;
	shf.r.wrap.b32 	%r468, %r465, %r466, 19;
	mov.b64 	%rd799, {%r468, %r467};
	shf.l.wrap.b32 	%r469, %r465, %r466, 3;
	shf.l.wrap.b32 	%r470, %r466, %r465, 3;
	mov.b64 	%rd800, {%r470, %r469};
	shr.u64 	%rd801, %rd2280, 6;
	xor.b64  	%rd802, %rd799, %rd801;
	xor.b64  	%rd803, %rd802, %rd800;
	shf.r.wrap.b32 	%r471, %r314, %r313, 1;
	shf.r.wrap.b32 	%r472, %r313, %r314, 1;
	mov.b64 	%rd804, {%r472, %r471};
	shf.r.wrap.b32 	%r473, %r314, %r313, 8;
	shf.r.wrap.b32 	%r474, %r313, %r314, 8;
	mov.b64 	%rd805, {%r474, %r473};
	shr.u64 	%rd806, %rd2267, 7;
	xor.b64  	%rd807, %rd804, %rd806;
	xor.b64  	%rd808, %rd807, %rd805;
	add.s64 	%rd809, %rd2275, %rd2258;
	add.s64 	%rd810, %rd809, %rd803;
	add.s64 	%rd2258, %rd810, %rd808;
	mul.wide.s32 	%rd811, %r1470, 8;
	mov.u64 	%rd812, k_sha512;
	add.s64 	%rd813, %rd812, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd2263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd2263;
	}
	shf.r.wrap.b32 	%r477, %r476, %r475, 18;
	shf.r.wrap.b32 	%r478, %r475, %r476, 18;
	mov.b64 	%rd814, {%r478, %r477};
	shf.r.wrap.b32 	%r479, %r476, %r475, 14;
	shf.r.wrap.b32 	%r480, %r475, %r476, 14;
	mov.b64 	%rd815, {%r480, %r479};
	xor.b64  	%rd816, %rd814, %rd815;
	shf.l.wrap.b32 	%r481, %r475, %r476, 23;
	shf.l.wrap.b32 	%r482, %r476, %r475, 23;
	mov.b64 	%rd817, {%r482, %r481};
	xor.b64  	%rd818, %rd816, %rd817;
	xor.b64  	%rd819, %rd2264, %rd2265;
	and.b64  	%rd820, %rd819, %rd2263;
	xor.b64  	%rd821, %rd820, %rd2265;
	add.s64 	%rd822, %rd821, %rd2266;
	add.s64 	%rd823, %rd822, %rd2267;
	ld.const.u64 	%rd824, [%rd813];
	add.s64 	%rd825, %rd823, %rd824;
	add.s64 	%rd826, %rd825, %rd818;
	add.s64 	%rd827, %rd826, %rd2262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r483}, %rd2259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd2259;
	}
	shf.l.wrap.b32 	%r485, %r484, %r483, 30;
	shf.l.wrap.b32 	%r486, %r483, %r484, 30;
	mov.b64 	%rd828, {%r486, %r485};
	shf.r.wrap.b32 	%r487, %r483, %r484, 28;
	shf.r.wrap.b32 	%r488, %r484, %r483, 28;
	mov.b64 	%rd829, {%r488, %r487};
	xor.b64  	%rd830, %rd828, %rd829;
	shf.l.wrap.b32 	%r489, %r484, %r483, 25;
	shf.l.wrap.b32 	%r490, %r483, %r484, 25;
	mov.b64 	%rd831, {%r490, %r489};
	xor.b64  	%rd832, %rd830, %rd831;
	xor.b64  	%rd833, %rd2259, %rd2260;
	xor.b64  	%rd834, %rd2259, %rd2261;
	and.b64  	%rd835, %rd833, %rd834;
	xor.b64  	%rd836, %rd835, %rd2259;
	add.s64 	%rd837, %rd826, %rd836;
	add.s64 	%rd838, %rd837, %rd832;
	add.s32 	%r491, %r1470, 1;
	mul.wide.s32 	%rd839, %r491, 8;
	add.s64 	%rd840, %rd812, %rd839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd827;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 14;
	shf.r.wrap.b32 	%r495, %r492, %r493, 14;
	mov.b64 	%rd841, {%r495, %r494};
	shf.r.wrap.b32 	%r496, %r493, %r492, 18;
	shf.r.wrap.b32 	%r497, %r492, %r493, 18;
	mov.b64 	%rd842, {%r497, %r496};
	xor.b64  	%rd843, %rd842, %rd841;
	shf.l.wrap.b32 	%r498, %r492, %r493, 23;
	shf.l.wrap.b32 	%r499, %r493, %r492, 23;
	mov.b64 	%rd844, {%r499, %r498};
	xor.b64  	%rd845, %rd843, %rd844;
	xor.b64  	%rd846, %rd2263, %rd2264;
	and.b64  	%rd847, %rd827, %rd846;
	xor.b64  	%rd848, %rd847, %rd2264;
	add.s64 	%rd849, %rd2268, %rd2265;
	ld.const.u64 	%rd850, [%rd840];
	add.s64 	%rd851, %rd849, %rd850;
	add.s64 	%rd852, %rd851, %rd848;
	add.s64 	%rd853, %rd852, %rd845;
	add.s64 	%rd854, %rd853, %rd2261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd838;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 28;
	shf.r.wrap.b32 	%r503, %r500, %r501, 28;
	mov.b64 	%rd855, {%r503, %r502};
	shf.l.wrap.b32 	%r504, %r500, %r501, 30;
	shf.l.wrap.b32 	%r505, %r501, %r500, 30;
	mov.b64 	%rd856, {%r505, %r504};
	xor.b64  	%rd857, %rd856, %rd855;
	shf.l.wrap.b32 	%r506, %r500, %r501, 25;
	shf.l.wrap.b32 	%r507, %r501, %r500, 25;
	mov.b64 	%rd858, {%r507, %r506};
	xor.b64  	%rd859, %rd857, %rd858;
	xor.b64  	%rd860, %rd838, %rd2260;
	xor.b64  	%rd861, %rd838, %rd2259;
	and.b64  	%rd862, %rd861, %rd860;
	xor.b64  	%rd863, %rd862, %rd838;
	add.s64 	%rd864, %rd853, %rd863;
	add.s64 	%rd865, %rd864, %rd859;
	add.s32 	%r508, %r1470, 2;
	mul.wide.s32 	%rd866, %r508, 8;
	add.s64 	%rd867, %rd812, %rd866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r509,%dummy}, %rd854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r510}, %rd854;
	}
	shf.r.wrap.b32 	%r511, %r510, %r509, 14;
	shf.r.wrap.b32 	%r512, %r509, %r510, 14;
	mov.b64 	%rd868, {%r512, %r511};
	shf.r.wrap.b32 	%r513, %r510, %r509, 18;
	shf.r.wrap.b32 	%r514, %r509, %r510, 18;
	mov.b64 	%rd869, {%r514, %r513};
	xor.b64  	%rd870, %rd869, %rd868;
	shf.l.wrap.b32 	%r515, %r509, %r510, 23;
	shf.l.wrap.b32 	%r516, %r510, %r509, 23;
	mov.b64 	%rd871, {%r516, %r515};
	xor.b64  	%rd872, %rd870, %rd871;
	xor.b64  	%rd873, %rd827, %rd2263;
	and.b64  	%rd874, %rd854, %rd873;
	xor.b64  	%rd875, %rd874, %rd2263;
	add.s64 	%rd876, %rd2269, %rd2264;
	ld.const.u64 	%rd877, [%rd867];
	add.s64 	%rd878, %rd876, %rd877;
	add.s64 	%rd879, %rd878, %rd875;
	add.s64 	%rd880, %rd879, %rd872;
	add.s64 	%rd881, %rd880, %rd2260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd865;
	}
	shf.r.wrap.b32 	%r519, %r518, %r517, 28;
	shf.r.wrap.b32 	%r520, %r517, %r518, 28;
	mov.b64 	%rd882, {%r520, %r519};
	shf.l.wrap.b32 	%r521, %r517, %r518, 30;
	shf.l.wrap.b32 	%r522, %r518, %r517, 30;
	mov.b64 	%rd883, {%r522, %r521};
	xor.b64  	%rd884, %rd883, %rd882;
	shf.l.wrap.b32 	%r523, %r517, %r518, 25;
	shf.l.wrap.b32 	%r524, %r518, %r517, 25;
	mov.b64 	%rd885, {%r524, %r523};
	xor.b64  	%rd886, %rd884, %rd885;
	xor.b64  	%rd887, %rd865, %rd2259;
	xor.b64  	%rd888, %rd865, %rd838;
	and.b64  	%rd889, %rd888, %rd887;
	xor.b64  	%rd890, %rd889, %rd865;
	add.s64 	%rd891, %rd880, %rd890;
	add.s64 	%rd892, %rd891, %rd886;
	add.s32 	%r525, %r1470, 3;
	mul.wide.s32 	%rd893, %r525, 8;
	add.s64 	%rd894, %rd812, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r526,%dummy}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r527}, %rd881;
	}
	shf.r.wrap.b32 	%r528, %r527, %r526, 14;
	shf.r.wrap.b32 	%r529, %r526, %r527, 14;
	mov.b64 	%rd895, {%r529, %r528};
	shf.r.wrap.b32 	%r530, %r527, %r526, 18;
	shf.r.wrap.b32 	%r531, %r526, %r527, 18;
	mov.b64 	%rd896, {%r531, %r530};
	xor.b64  	%rd897, %rd896, %rd895;
	shf.l.wrap.b32 	%r532, %r526, %r527, 23;
	shf.l.wrap.b32 	%r533, %r527, %r526, 23;
	mov.b64 	%rd898, {%r533, %r532};
	xor.b64  	%rd899, %rd897, %rd898;
	xor.b64  	%rd900, %rd854, %rd827;
	and.b64  	%rd901, %rd881, %rd900;
	xor.b64  	%rd902, %rd901, %rd827;
	add.s64 	%rd903, %rd2270, %rd2263;
	ld.const.u64 	%rd904, [%rd894];
	add.s64 	%rd905, %rd903, %rd904;
	add.s64 	%rd906, %rd905, %rd902;
	add.s64 	%rd907, %rd906, %rd899;
	add.s64 	%rd908, %rd907, %rd2259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r534,%dummy}, %rd892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r535}, %rd892;
	}
	shf.r.wrap.b32 	%r536, %r535, %r534, 28;
	shf.r.wrap.b32 	%r537, %r534, %r535, 28;
	mov.b64 	%rd909, {%r537, %r536};
	shf.l.wrap.b32 	%r538, %r534, %r535, 30;
	shf.l.wrap.b32 	%r539, %r535, %r534, 30;
	mov.b64 	%rd910, {%r539, %r538};
	xor.b64  	%rd911, %rd910, %rd909;
	shf.l.wrap.b32 	%r540, %r534, %r535, 25;
	shf.l.wrap.b32 	%r541, %r535, %r534, 25;
	mov.b64 	%rd912, {%r541, %r540};
	xor.b64  	%rd913, %rd911, %rd912;
	xor.b64  	%rd914, %rd892, %rd838;
	xor.b64  	%rd915, %rd892, %rd865;
	and.b64  	%rd916, %rd915, %rd914;
	xor.b64  	%rd917, %rd916, %rd892;
	add.s64 	%rd918, %rd907, %rd917;
	add.s64 	%rd919, %rd918, %rd913;
	add.s32 	%r542, %r1470, 4;
	mul.wide.s32 	%rd920, %r542, 8;
	add.s64 	%rd921, %rd812, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r543,%dummy}, %rd908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd908;
	}
	shf.r.wrap.b32 	%r545, %r544, %r543, 14;
	shf.r.wrap.b32 	%r546, %r543, %r544, 14;
	mov.b64 	%rd922, {%r546, %r545};
	shf.r.wrap.b32 	%r547, %r544, %r543, 18;
	shf.r.wrap.b32 	%r548, %r543, %r544, 18;
	mov.b64 	%rd923, {%r548, %r547};
	xor.b64  	%rd924, %rd923, %rd922;
	shf.l.wrap.b32 	%r549, %r543, %r544, 23;
	shf.l.wrap.b32 	%r550, %r544, %r543, 23;
	mov.b64 	%rd925, {%r550, %r549};
	xor.b64  	%rd926, %rd924, %rd925;
	xor.b64  	%rd927, %rd881, %rd854;
	and.b64  	%rd928, %rd908, %rd927;
	xor.b64  	%rd929, %rd928, %rd854;
	add.s64 	%rd930, %rd827, %rd2271;
	ld.const.u64 	%rd931, [%rd921];
	add.s64 	%rd932, %rd930, %rd931;
	add.s64 	%rd933, %rd932, %rd929;
	add.s64 	%rd934, %rd933, %rd926;
	add.s64 	%rd935, %rd934, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd919;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 28;
	shf.r.wrap.b32 	%r554, %r551, %r552, 28;
	mov.b64 	%rd936, {%r554, %r553};
	shf.l.wrap.b32 	%r555, %r551, %r552, 30;
	shf.l.wrap.b32 	%r556, %r552, %r551, 30;
	mov.b64 	%rd937, {%r556, %r555};
	xor.b64  	%rd938, %rd937, %rd936;
	shf.l.wrap.b32 	%r557, %r551, %r552, 25;
	shf.l.wrap.b32 	%r558, %r552, %r551, 25;
	mov.b64 	%rd939, {%r558, %r557};
	xor.b64  	%rd940, %rd938, %rd939;
	xor.b64  	%rd941, %rd919, %rd865;
	xor.b64  	%rd942, %rd919, %rd892;
	and.b64  	%rd943, %rd942, %rd941;
	xor.b64  	%rd944, %rd943, %rd919;
	add.s64 	%rd945, %rd934, %rd944;
	add.s64 	%rd946, %rd945, %rd940;
	add.s32 	%r559, %r1470, 5;
	mul.wide.s32 	%rd947, %r559, 8;
	add.s64 	%rd948, %rd812, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r560,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r561}, %rd935;
	}
	shf.r.wrap.b32 	%r562, %r561, %r560, 14;
	shf.r.wrap.b32 	%r563, %r560, %r561, 14;
	mov.b64 	%rd949, {%r563, %r562};
	shf.r.wrap.b32 	%r564, %r561, %r560, 18;
	shf.r.wrap.b32 	%r565, %r560, %r561, 18;
	mov.b64 	%rd950, {%r565, %r564};
	xor.b64  	%rd951, %rd950, %rd949;
	shf.l.wrap.b32 	%r566, %r560, %r561, 23;
	shf.l.wrap.b32 	%r567, %r561, %r560, 23;
	mov.b64 	%rd952, {%r567, %r566};
	xor.b64  	%rd953, %rd951, %rd952;
	xor.b64  	%rd954, %rd908, %rd881;
	and.b64  	%rd955, %rd935, %rd954;
	xor.b64  	%rd956, %rd955, %rd881;
	add.s64 	%rd957, %rd854, %rd2272;
	ld.const.u64 	%rd958, [%rd948];
	add.s64 	%rd959, %rd957, %rd958;
	add.s64 	%rd960, %rd959, %rd956;
	add.s64 	%rd961, %rd960, %rd953;
	add.s64 	%rd962, %rd961, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r568,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd946;
	}
	shf.r.wrap.b32 	%r570, %r569, %r568, 28;
	shf.r.wrap.b32 	%r571, %r568, %r569, 28;
	mov.b64 	%rd963, {%r571, %r570};
	shf.l.wrap.b32 	%r572, %r568, %r569, 30;
	shf.l.wrap.b32 	%r573, %r569, %r568, 30;
	mov.b64 	%rd964, {%r573, %r572};
	xor.b64  	%rd965, %rd964, %rd963;
	shf.l.wrap.b32 	%r574, %r568, %r569, 25;
	shf.l.wrap.b32 	%r575, %r569, %r568, 25;
	mov.b64 	%rd966, {%r575, %r574};
	xor.b64  	%rd967, %rd965, %rd966;
	xor.b64  	%rd968, %rd946, %rd892;
	xor.b64  	%rd969, %rd946, %rd919;
	and.b64  	%rd970, %rd969, %rd968;
	xor.b64  	%rd971, %rd970, %rd946;
	add.s64 	%rd972, %rd961, %rd971;
	add.s64 	%rd973, %rd972, %rd967;
	add.s32 	%r576, %r1470, 6;
	mul.wide.s32 	%rd974, %r576, 8;
	add.s64 	%rd975, %rd812, %rd974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd962;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 14;
	shf.r.wrap.b32 	%r580, %r577, %r578, 14;
	mov.b64 	%rd976, {%r580, %r579};
	shf.r.wrap.b32 	%r581, %r578, %r577, 18;
	shf.r.wrap.b32 	%r582, %r577, %r578, 18;
	mov.b64 	%rd977, {%r582, %r581};
	xor.b64  	%rd978, %rd977, %rd976;
	shf.l.wrap.b32 	%r583, %r577, %r578, 23;
	shf.l.wrap.b32 	%r584, %r578, %r577, 23;
	mov.b64 	%rd979, {%r584, %r583};
	xor.b64  	%rd980, %rd978, %rd979;
	xor.b64  	%rd981, %rd935, %rd908;
	and.b64  	%rd982, %rd962, %rd981;
	xor.b64  	%rd983, %rd982, %rd908;
	add.s64 	%rd984, %rd881, %rd2273;
	ld.const.u64 	%rd985, [%rd975];
	add.s64 	%rd986, %rd984, %rd985;
	add.s64 	%rd987, %rd986, %rd983;
	add.s64 	%rd988, %rd987, %rd980;
	add.s64 	%rd989, %rd988, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r585,%dummy}, %rd973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r586}, %rd973;
	}
	shf.r.wrap.b32 	%r587, %r586, %r585, 28;
	shf.r.wrap.b32 	%r588, %r585, %r586, 28;
	mov.b64 	%rd990, {%r588, %r587};
	shf.l.wrap.b32 	%r589, %r585, %r586, 30;
	shf.l.wrap.b32 	%r590, %r586, %r585, 30;
	mov.b64 	%rd991, {%r590, %r589};
	xor.b64  	%rd992, %rd991, %rd990;
	shf.l.wrap.b32 	%r591, %r585, %r586, 25;
	shf.l.wrap.b32 	%r592, %r586, %r585, 25;
	mov.b64 	%rd993, {%r592, %r591};
	xor.b64  	%rd994, %rd992, %rd993;
	xor.b64  	%rd995, %rd973, %rd919;
	xor.b64  	%rd996, %rd973, %rd946;
	and.b64  	%rd997, %rd996, %rd995;
	xor.b64  	%rd998, %rd997, %rd973;
	add.s64 	%rd999, %rd988, %rd998;
	add.s64 	%rd1000, %rd999, %rd994;
	add.s32 	%r593, %r1470, 7;
	mul.wide.s32 	%rd1001, %r593, 8;
	add.s64 	%rd1002, %rd812, %rd1001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r594,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r595}, %rd989;
	}
	shf.r.wrap.b32 	%r596, %r595, %r594, 14;
	shf.r.wrap.b32 	%r597, %r594, %r595, 14;
	mov.b64 	%rd1003, {%r597, %r596};
	shf.r.wrap.b32 	%r598, %r595, %r594, 18;
	shf.r.wrap.b32 	%r599, %r594, %r595, 18;
	mov.b64 	%rd1004, {%r599, %r598};
	xor.b64  	%rd1005, %rd1004, %rd1003;
	shf.l.wrap.b32 	%r600, %r594, %r595, 23;
	shf.l.wrap.b32 	%r601, %r595, %r594, 23;
	mov.b64 	%rd1006, {%r601, %r600};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	xor.b64  	%rd1008, %rd962, %rd935;
	and.b64  	%rd1009, %rd989, %rd1008;
	xor.b64  	%rd1010, %rd1009, %rd935;
	add.s64 	%rd1011, %rd908, %rd2274;
	ld.const.u64 	%rd1012, [%rd1002];
	add.s64 	%rd1013, %rd1011, %rd1012;
	add.s64 	%rd1014, %rd1013, %rd1010;
	add.s64 	%rd1015, %rd1014, %rd1007;
	add.s64 	%rd1016, %rd1015, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r603}, %rd1000;
	}
	shf.r.wrap.b32 	%r604, %r603, %r602, 28;
	shf.r.wrap.b32 	%r605, %r602, %r603, 28;
	mov.b64 	%rd1017, {%r605, %r604};
	shf.l.wrap.b32 	%r606, %r602, %r603, 30;
	shf.l.wrap.b32 	%r607, %r603, %r602, 30;
	mov.b64 	%rd1018, {%r607, %r606};
	xor.b64  	%rd1019, %rd1018, %rd1017;
	shf.l.wrap.b32 	%r608, %r602, %r603, 25;
	shf.l.wrap.b32 	%r609, %r603, %r602, 25;
	mov.b64 	%rd1020, {%r609, %r608};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	xor.b64  	%rd1022, %rd1000, %rd946;
	xor.b64  	%rd1023, %rd1000, %rd973;
	and.b64  	%rd1024, %rd1023, %rd1022;
	xor.b64  	%rd1025, %rd1024, %rd1000;
	add.s64 	%rd1026, %rd1015, %rd1025;
	add.s64 	%rd1027, %rd1026, %rd1021;
	add.s32 	%r610, %r1470, 8;
	mul.wide.s32 	%rd1028, %r610, 8;
	add.s64 	%rd1029, %rd812, %rd1028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd1016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd1016;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 14;
	shf.r.wrap.b32 	%r614, %r611, %r612, 14;
	mov.b64 	%rd1030, {%r614, %r613};
	shf.r.wrap.b32 	%r615, %r612, %r611, 18;
	shf.r.wrap.b32 	%r616, %r611, %r612, 18;
	mov.b64 	%rd1031, {%r616, %r615};
	xor.b64  	%rd1032, %rd1031, %rd1030;
	shf.l.wrap.b32 	%r617, %r611, %r612, 23;
	shf.l.wrap.b32 	%r618, %r612, %r611, 23;
	mov.b64 	%rd1033, {%r618, %r617};
	xor.b64  	%rd1034, %rd1032, %rd1033;
	xor.b64  	%rd1035, %rd989, %rd962;
	and.b64  	%rd1036, %rd1016, %rd1035;
	xor.b64  	%rd1037, %rd1036, %rd962;
	add.s64 	%rd1038, %rd935, %rd2275;
	ld.const.u64 	%rd1039, [%rd1029];
	add.s64 	%rd1040, %rd1038, %rd1039;
	add.s64 	%rd1041, %rd1040, %rd1037;
	add.s64 	%rd1042, %rd1041, %rd1034;
	add.s64 	%rd1043, %rd1042, %rd946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r619,%dummy}, %rd1027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r620}, %rd1027;
	}
	shf.r.wrap.b32 	%r621, %r620, %r619, 28;
	shf.r.wrap.b32 	%r622, %r619, %r620, 28;
	mov.b64 	%rd1044, {%r622, %r621};
	shf.l.wrap.b32 	%r623, %r619, %r620, 30;
	shf.l.wrap.b32 	%r624, %r620, %r619, 30;
	mov.b64 	%rd1045, {%r624, %r623};
	xor.b64  	%rd1046, %rd1045, %rd1044;
	shf.l.wrap.b32 	%r625, %r619, %r620, 25;
	shf.l.wrap.b32 	%r626, %r620, %r619, 25;
	mov.b64 	%rd1047, {%r626, %r625};
	xor.b64  	%rd1048, %rd1046, %rd1047;
	xor.b64  	%rd1049, %rd1027, %rd973;
	xor.b64  	%rd1050, %rd1027, %rd1000;
	and.b64  	%rd1051, %rd1050, %rd1049;
	xor.b64  	%rd1052, %rd1051, %rd1027;
	add.s64 	%rd1053, %rd1042, %rd1052;
	add.s64 	%rd1054, %rd1053, %rd1048;
	add.s32 	%r627, %r1470, 9;
	mul.wide.s32 	%rd1055, %r627, 8;
	add.s64 	%rd1056, %rd812, %rd1055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r628,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r629}, %rd1043;
	}
	shf.r.wrap.b32 	%r630, %r629, %r628, 14;
	shf.r.wrap.b32 	%r631, %r628, %r629, 14;
	mov.b64 	%rd1057, {%r631, %r630};
	shf.r.wrap.b32 	%r632, %r629, %r628, 18;
	shf.r.wrap.b32 	%r633, %r628, %r629, 18;
	mov.b64 	%rd1058, {%r633, %r632};
	xor.b64  	%rd1059, %rd1058, %rd1057;
	shf.l.wrap.b32 	%r634, %r628, %r629, 23;
	shf.l.wrap.b32 	%r635, %r629, %r628, 23;
	mov.b64 	%rd1060, {%r635, %r634};
	xor.b64  	%rd1061, %rd1059, %rd1060;
	xor.b64  	%rd1062, %rd1016, %rd989;
	and.b64  	%rd1063, %rd1043, %rd1062;
	xor.b64  	%rd1064, %rd1063, %rd989;
	add.s64 	%rd1065, %rd962, %rd2276;
	ld.const.u64 	%rd1066, [%rd1056];
	add.s64 	%rd1067, %rd1065, %rd1066;
	add.s64 	%rd1068, %rd1067, %rd1064;
	add.s64 	%rd1069, %rd1068, %rd1061;
	add.s64 	%rd1070, %rd1069, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r636,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r637}, %rd1054;
	}
	shf.r.wrap.b32 	%r638, %r637, %r636, 28;
	shf.r.wrap.b32 	%r639, %r636, %r637, 28;
	mov.b64 	%rd1071, {%r639, %r638};
	shf.l.wrap.b32 	%r640, %r636, %r637, 30;
	shf.l.wrap.b32 	%r641, %r637, %r636, 30;
	mov.b64 	%rd1072, {%r641, %r640};
	xor.b64  	%rd1073, %rd1072, %rd1071;
	shf.l.wrap.b32 	%r642, %r636, %r637, 25;
	shf.l.wrap.b32 	%r643, %r637, %r636, 25;
	mov.b64 	%rd1074, {%r643, %r642};
	xor.b64  	%rd1075, %rd1073, %rd1074;
	xor.b64  	%rd1076, %rd1054, %rd1000;
	xor.b64  	%rd1077, %rd1054, %rd1027;
	and.b64  	%rd1078, %rd1077, %rd1076;
	xor.b64  	%rd1079, %rd1078, %rd1054;
	add.s64 	%rd1080, %rd1069, %rd1079;
	add.s64 	%rd1081, %rd1080, %rd1075;
	add.s32 	%r644, %r1470, 10;
	mul.wide.s32 	%rd1082, %r644, 8;
	add.s64 	%rd1083, %rd812, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd1070;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 14;
	shf.r.wrap.b32 	%r648, %r645, %r646, 14;
	mov.b64 	%rd1084, {%r648, %r647};
	shf.r.wrap.b32 	%r649, %r646, %r645, 18;
	shf.r.wrap.b32 	%r650, %r645, %r646, 18;
	mov.b64 	%rd1085, {%r650, %r649};
	xor.b64  	%rd1086, %rd1085, %rd1084;
	shf.l.wrap.b32 	%r651, %r645, %r646, 23;
	shf.l.wrap.b32 	%r652, %r646, %r645, 23;
	mov.b64 	%rd1087, {%r652, %r651};
	xor.b64  	%rd1088, %rd1086, %rd1087;
	xor.b64  	%rd1089, %rd1043, %rd1016;
	and.b64  	%rd1090, %rd1070, %rd1089;
	xor.b64  	%rd1091, %rd1090, %rd1016;
	add.s64 	%rd1092, %rd989, %rd2277;
	ld.const.u64 	%rd1093, [%rd1083];
	add.s64 	%rd1094, %rd1092, %rd1093;
	add.s64 	%rd1095, %rd1094, %rd1091;
	add.s64 	%rd1096, %rd1095, %rd1088;
	add.s64 	%rd1097, %rd1096, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd1081;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 28;
	shf.r.wrap.b32 	%r656, %r653, %r654, 28;
	mov.b64 	%rd1098, {%r656, %r655};
	shf.l.wrap.b32 	%r657, %r653, %r654, 30;
	shf.l.wrap.b32 	%r658, %r654, %r653, 30;
	mov.b64 	%rd1099, {%r658, %r657};
	xor.b64  	%rd1100, %rd1099, %rd1098;
	shf.l.wrap.b32 	%r659, %r653, %r654, 25;
	shf.l.wrap.b32 	%r660, %r654, %r653, 25;
	mov.b64 	%rd1101, {%r660, %r659};
	xor.b64  	%rd1102, %rd1100, %rd1101;
	xor.b64  	%rd1103, %rd1081, %rd1027;
	xor.b64  	%rd1104, %rd1081, %rd1054;
	and.b64  	%rd1105, %rd1104, %rd1103;
	xor.b64  	%rd1106, %rd1105, %rd1081;
	add.s64 	%rd1107, %rd1096, %rd1106;
	add.s64 	%rd1108, %rd1107, %rd1102;
	add.s32 	%r661, %r1470, 11;
	mul.wide.s32 	%rd1109, %r661, 8;
	add.s64 	%rd1110, %rd812, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r662,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r663}, %rd1097;
	}
	shf.r.wrap.b32 	%r664, %r663, %r662, 14;
	shf.r.wrap.b32 	%r665, %r662, %r663, 14;
	mov.b64 	%rd1111, {%r665, %r664};
	shf.r.wrap.b32 	%r666, %r663, %r662, 18;
	shf.r.wrap.b32 	%r667, %r662, %r663, 18;
	mov.b64 	%rd1112, {%r667, %r666};
	xor.b64  	%rd1113, %rd1112, %rd1111;
	shf.l.wrap.b32 	%r668, %r662, %r663, 23;
	shf.l.wrap.b32 	%r669, %r663, %r662, 23;
	mov.b64 	%rd1114, {%r669, %r668};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	xor.b64  	%rd1116, %rd1070, %rd1043;
	and.b64  	%rd1117, %rd1097, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1043;
	add.s64 	%rd1119, %rd1016, %rd2278;
	ld.const.u64 	%rd1120, [%rd1110];
	add.s64 	%rd1121, %rd1119, %rd1120;
	add.s64 	%rd1122, %rd1121, %rd1118;
	add.s64 	%rd1123, %rd1122, %rd1115;
	add.s64 	%rd1124, %rd1123, %rd1027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r670,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r671}, %rd1108;
	}
	shf.r.wrap.b32 	%r672, %r671, %r670, 28;
	shf.r.wrap.b32 	%r673, %r670, %r671, 28;
	mov.b64 	%rd1125, {%r673, %r672};
	shf.l.wrap.b32 	%r674, %r670, %r671, 30;
	shf.l.wrap.b32 	%r675, %r671, %r670, 30;
	mov.b64 	%rd1126, {%r675, %r674};
	xor.b64  	%rd1127, %rd1126, %rd1125;
	shf.l.wrap.b32 	%r676, %r670, %r671, 25;
	shf.l.wrap.b32 	%r677, %r671, %r670, 25;
	mov.b64 	%rd1128, {%r677, %r676};
	xor.b64  	%rd1129, %rd1127, %rd1128;
	xor.b64  	%rd1130, %rd1108, %rd1054;
	xor.b64  	%rd1131, %rd1108, %rd1081;
	and.b64  	%rd1132, %rd1131, %rd1130;
	xor.b64  	%rd1133, %rd1132, %rd1108;
	add.s64 	%rd1134, %rd1123, %rd1133;
	add.s64 	%rd1135, %rd1134, %rd1129;
	add.s32 	%r678, %r1470, 12;
	mul.wide.s32 	%rd1136, %r678, 8;
	add.s64 	%rd1137, %rd812, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r679,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r680}, %rd1124;
	}
	shf.r.wrap.b32 	%r681, %r680, %r679, 14;
	shf.r.wrap.b32 	%r682, %r679, %r680, 14;
	mov.b64 	%rd1138, {%r682, %r681};
	shf.r.wrap.b32 	%r683, %r680, %r679, 18;
	shf.r.wrap.b32 	%r684, %r679, %r680, 18;
	mov.b64 	%rd1139, {%r684, %r683};
	xor.b64  	%rd1140, %rd1139, %rd1138;
	shf.l.wrap.b32 	%r685, %r679, %r680, 23;
	shf.l.wrap.b32 	%r686, %r680, %r679, 23;
	mov.b64 	%rd1141, {%r686, %r685};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	xor.b64  	%rd1143, %rd1097, %rd1070;
	and.b64  	%rd1144, %rd1124, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1070;
	add.s64 	%rd1146, %rd1043, %rd2279;
	ld.const.u64 	%rd1147, [%rd1137];
	add.s64 	%rd1148, %rd1146, %rd1147;
	add.s64 	%rd1149, %rd1148, %rd1145;
	add.s64 	%rd1150, %rd1149, %rd1142;
	add.s64 	%rd2266, %rd1150, %rd1054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd1135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd1135;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 28;
	shf.r.wrap.b32 	%r690, %r687, %r688, 28;
	mov.b64 	%rd1151, {%r690, %r689};
	shf.l.wrap.b32 	%r691, %r687, %r688, 30;
	shf.l.wrap.b32 	%r692, %r688, %r687, 30;
	mov.b64 	%rd1152, {%r692, %r691};
	xor.b64  	%rd1153, %rd1152, %rd1151;
	shf.l.wrap.b32 	%r693, %r687, %r688, 25;
	shf.l.wrap.b32 	%r694, %r688, %r687, 25;
	mov.b64 	%rd1154, {%r694, %r693};
	xor.b64  	%rd1155, %rd1153, %rd1154;
	xor.b64  	%rd1156, %rd1135, %rd1081;
	xor.b64  	%rd1157, %rd1135, %rd1108;
	and.b64  	%rd1158, %rd1157, %rd1156;
	xor.b64  	%rd1159, %rd1158, %rd1135;
	add.s64 	%rd1160, %rd1150, %rd1159;
	add.s64 	%rd2262, %rd1160, %rd1155;
	add.s32 	%r695, %r1470, 13;
	mul.wide.s32 	%rd1161, %r695, 8;
	add.s64 	%rd1162, %rd812, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r696,%dummy}, %rd2266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r697}, %rd2266;
	}
	shf.r.wrap.b32 	%r698, %r697, %r696, 14;
	shf.r.wrap.b32 	%r699, %r696, %r697, 14;
	mov.b64 	%rd1163, {%r699, %r698};
	shf.r.wrap.b32 	%r700, %r697, %r696, 18;
	shf.r.wrap.b32 	%r701, %r696, %r697, 18;
	mov.b64 	%rd1164, {%r701, %r700};
	xor.b64  	%rd1165, %rd1164, %rd1163;
	shf.l.wrap.b32 	%r702, %r696, %r697, 23;
	shf.l.wrap.b32 	%r703, %r697, %r696, 23;
	mov.b64 	%rd1166, {%r703, %r702};
	xor.b64  	%rd1167, %rd1165, %rd1166;
	xor.b64  	%rd1168, %rd1124, %rd1097;
	and.b64  	%rd1169, %rd2266, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1097;
	add.s64 	%rd1171, %rd1070, %rd2280;
	ld.const.u64 	%rd1172, [%rd1162];
	add.s64 	%rd1173, %rd1171, %rd1172;
	add.s64 	%rd1174, %rd1173, %rd1170;
	add.s64 	%rd1175, %rd1174, %rd1167;
	add.s64 	%rd2265, %rd1175, %rd1081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r704,%dummy}, %rd2262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r705}, %rd2262;
	}
	shf.r.wrap.b32 	%r706, %r705, %r704, 28;
	shf.r.wrap.b32 	%r707, %r704, %r705, 28;
	mov.b64 	%rd1176, {%r707, %r706};
	shf.l.wrap.b32 	%r708, %r704, %r705, 30;
	shf.l.wrap.b32 	%r709, %r705, %r704, 30;
	mov.b64 	%rd1177, {%r709, %r708};
	xor.b64  	%rd1178, %rd1177, %rd1176;
	shf.l.wrap.b32 	%r710, %r704, %r705, 25;
	shf.l.wrap.b32 	%r711, %r705, %r704, 25;
	mov.b64 	%rd1179, {%r711, %r710};
	xor.b64  	%rd1180, %rd1178, %rd1179;
	xor.b64  	%rd1181, %rd2262, %rd1108;
	xor.b64  	%rd1182, %rd2262, %rd1135;
	and.b64  	%rd1183, %rd1182, %rd1181;
	xor.b64  	%rd1184, %rd1183, %rd2262;
	add.s64 	%rd1185, %rd1175, %rd1184;
	add.s64 	%rd2261, %rd1185, %rd1180;
	add.s32 	%r712, %r1470, 14;
	mul.wide.s32 	%rd1186, %r712, 8;
	add.s64 	%rd1187, %rd812, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd2265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd2265;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 14;
	shf.r.wrap.b32 	%r716, %r713, %r714, 14;
	mov.b64 	%rd1188, {%r716, %r715};
	shf.r.wrap.b32 	%r717, %r714, %r713, 18;
	shf.r.wrap.b32 	%r718, %r713, %r714, 18;
	mov.b64 	%rd1189, {%r718, %r717};
	xor.b64  	%rd1190, %rd1189, %rd1188;
	shf.l.wrap.b32 	%r719, %r713, %r714, 23;
	shf.l.wrap.b32 	%r720, %r714, %r713, 23;
	mov.b64 	%rd1191, {%r720, %r719};
	xor.b64  	%rd1192, %rd1190, %rd1191;
	xor.b64  	%rd1193, %rd2266, %rd1124;
	and.b64  	%rd1194, %rd2265, %rd1193;
	xor.b64  	%rd1195, %rd1194, %rd1124;
	add.s64 	%rd1196, %rd1097, %rd2281;
	ld.const.u64 	%rd1197, [%rd1187];
	add.s64 	%rd1198, %rd1196, %rd1197;
	add.s64 	%rd1199, %rd1198, %rd1195;
	add.s64 	%rd1200, %rd1199, %rd1192;
	add.s64 	%rd2264, %rd1200, %rd1108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r721,%dummy}, %rd2261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r722}, %rd2261;
	}
	shf.r.wrap.b32 	%r723, %r722, %r721, 28;
	shf.r.wrap.b32 	%r724, %r721, %r722, 28;
	mov.b64 	%rd1201, {%r724, %r723};
	shf.l.wrap.b32 	%r725, %r721, %r722, 30;
	shf.l.wrap.b32 	%r726, %r722, %r721, 30;
	mov.b64 	%rd1202, {%r726, %r725};
	xor.b64  	%rd1203, %rd1202, %rd1201;
	shf.l.wrap.b32 	%r727, %r721, %r722, 25;
	shf.l.wrap.b32 	%r728, %r722, %r721, 25;
	mov.b64 	%rd1204, {%r728, %r727};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	xor.b64  	%rd1206, %rd2261, %rd1135;
	xor.b64  	%rd1207, %rd2261, %rd2262;
	and.b64  	%rd1208, %rd1207, %rd1206;
	xor.b64  	%rd1209, %rd1208, %rd2261;
	add.s64 	%rd1210, %rd1200, %rd1209;
	add.s64 	%rd2260, %rd1210, %rd1205;
	add.s32 	%r729, %r1470, 15;
	mul.wide.s32 	%rd1211, %r729, 8;
	add.s64 	%rd1212, %rd812, %rd1211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd2264;
	}
	shf.r.wrap.b32 	%r732, %r731, %r730, 14;
	shf.r.wrap.b32 	%r733, %r730, %r731, 14;
	mov.b64 	%rd1213, {%r733, %r732};
	shf.r.wrap.b32 	%r734, %r731, %r730, 18;
	shf.r.wrap.b32 	%r735, %r730, %r731, 18;
	mov.b64 	%rd1214, {%r735, %r734};
	xor.b64  	%rd1215, %rd1214, %rd1213;
	shf.l.wrap.b32 	%r736, %r730, %r731, 23;
	shf.l.wrap.b32 	%r737, %r731, %r730, 23;
	mov.b64 	%rd1216, {%r737, %r736};
	xor.b64  	%rd1217, %rd1215, %rd1216;
	xor.b64  	%rd1218, %rd2265, %rd2266;
	and.b64  	%rd1219, %rd2264, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd2266;
	add.s64 	%rd1221, %rd1124, %rd2258;
	ld.const.u64 	%rd1222, [%rd1212];
	add.s64 	%rd1223, %rd1221, %rd1222;
	add.s64 	%rd1224, %rd1223, %rd1220;
	add.s64 	%rd1225, %rd1224, %rd1217;
	add.s64 	%rd2263, %rd1225, %rd1135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r738,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r739}, %rd2260;
	}
	shf.r.wrap.b32 	%r740, %r739, %r738, 28;
	shf.r.wrap.b32 	%r741, %r738, %r739, 28;
	mov.b64 	%rd1226, {%r741, %r740};
	shf.l.wrap.b32 	%r742, %r738, %r739, 30;
	shf.l.wrap.b32 	%r743, %r739, %r738, 30;
	mov.b64 	%rd1227, {%r743, %r742};
	xor.b64  	%rd1228, %rd1227, %rd1226;
	shf.l.wrap.b32 	%r744, %r738, %r739, 25;
	shf.l.wrap.b32 	%r745, %r739, %r738, 25;
	mov.b64 	%rd1229, {%r745, %r744};
	xor.b64  	%rd1230, %rd1228, %rd1229;
	xor.b64  	%rd1231, %rd2260, %rd2262;
	xor.b64  	%rd1232, %rd2260, %rd2261;
	and.b64  	%rd1233, %rd1232, %rd1231;
	xor.b64  	%rd1234, %rd1233, %rd2260;
	add.s64 	%rd1235, %rd1225, %rd1234;
	add.s64 	%rd2259, %rd1235, %rd1230;
	add.s32 	%r1470, %r1470, 16;
	setp.lt.s32	%p3, %r1470, 80;
	@%p3 bra 	BB2_4;

	add.s64 	%rd2291, %rd2259, %rd23;
	xor.b64  	%rd1244, %rd40, %rd41;
	and.b64  	%rd1245, %rd1244, %rd8;
	xor.b64  	%rd1246, %rd1245, %rd40;
	add.s64 	%rd1247, %rd1246, %rd9;
	add.s64 	%rd1248, %rd1247, %rd2291;
	add.s64 	%rd1249, %rd1248, %rd18;
	add.s64 	%rd1250, %rd1249, %rd60;
	add.s64 	%rd1251, %rd1250, %rd7;
	xor.b64  	%rd1252, %rd5, %rd4;
	xor.b64  	%rd1253, %rd6, %rd4;
	and.b64  	%rd1254, %rd1253, %rd1252;
	xor.b64  	%rd1255, %rd1254, %rd4;
	add.s64 	%rd1256, %rd1250, %rd1255;
	add.s64 	%rd1257, %rd1256, %rd61;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r747,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r748}, %rd1251;
	}
	shf.r.wrap.b32 	%r749, %r748, %r747, 14;
	shf.r.wrap.b32 	%r750, %r747, %r748, 14;
	mov.b64 	%rd1258, {%r750, %r749};
	shf.r.wrap.b32 	%r751, %r748, %r747, 18;
	shf.r.wrap.b32 	%r752, %r747, %r748, 18;
	mov.b64 	%rd1259, {%r752, %r751};
	xor.b64  	%rd1260, %rd1259, %rd1258;
	shf.l.wrap.b32 	%r753, %r747, %r748, 23;
	shf.l.wrap.b32 	%r754, %r748, %r747, 23;
	mov.b64 	%rd1261, {%r754, %r753};
	xor.b64  	%rd1262, %rd1260, %rd1261;
	xor.b64  	%rd1263, %rd41, %rd8;
	and.b64  	%rd1264, %rd1251, %rd1263;
	xor.b64  	%rd1265, %rd1264, %rd41;
	add.s64 	%rd2292, %rd2260, %rd24;
	add.s64 	%rd1266, %rd2292, %rd40;
	add.s64 	%rd1267, %rd1266, %rd25;
	add.s64 	%rd1268, %rd1267, %rd1265;
	add.s64 	%rd1269, %rd1268, %rd1262;
	add.s64 	%rd1270, %rd1269, %rd6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r755,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r756}, %rd1257;
	}
	shf.r.wrap.b32 	%r757, %r756, %r755, 28;
	shf.r.wrap.b32 	%r758, %r755, %r756, 28;
	mov.b64 	%rd1271, {%r758, %r757};
	shf.l.wrap.b32 	%r759, %r755, %r756, 30;
	shf.l.wrap.b32 	%r760, %r756, %r755, 30;
	mov.b64 	%rd1272, {%r760, %r759};
	xor.b64  	%rd1273, %rd1272, %rd1271;
	shf.l.wrap.b32 	%r761, %r755, %r756, 25;
	shf.l.wrap.b32 	%r762, %r756, %r755, 25;
	mov.b64 	%rd1274, {%r762, %r761};
	xor.b64  	%rd1275, %rd1273, %rd1274;
	xor.b64  	%rd1276, %rd1257, %rd5;
	xor.b64  	%rd1277, %rd1257, %rd4;
	and.b64  	%rd1278, %rd1277, %rd1276;
	xor.b64  	%rd1279, %rd1278, %rd1257;
	add.s64 	%rd1280, %rd1269, %rd1279;
	add.s64 	%rd1281, %rd1280, %rd1275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r763,%dummy}, %rd1270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r764}, %rd1270;
	}
	shf.r.wrap.b32 	%r765, %r764, %r763, 14;
	shf.r.wrap.b32 	%r766, %r763, %r764, 14;
	mov.b64 	%rd1282, {%r766, %r765};
	shf.r.wrap.b32 	%r767, %r764, %r763, 18;
	shf.r.wrap.b32 	%r768, %r763, %r764, 18;
	mov.b64 	%rd1283, {%r768, %r767};
	xor.b64  	%rd1284, %rd1283, %rd1282;
	shf.l.wrap.b32 	%r769, %r763, %r764, 23;
	shf.l.wrap.b32 	%r770, %r764, %r763, 23;
	mov.b64 	%rd1285, {%r770, %r769};
	xor.b64  	%rd1286, %rd1284, %rd1285;
	xor.b64  	%rd1287, %rd1251, %rd8;
	and.b64  	%rd1288, %rd1270, %rd1287;
	xor.b64  	%rd1289, %rd1288, %rd8;
	add.s64 	%rd2293, %rd2261, %rd22;
	add.s64 	%rd1290, %rd2293, %rd41;
	add.s64 	%rd1291, %rd1290, %rd26;
	add.s64 	%rd1292, %rd1291, %rd1289;
	add.s64 	%rd1293, %rd1292, %rd1286;
	add.s64 	%rd1294, %rd1293, %rd5;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r771,%dummy}, %rd1281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r772}, %rd1281;
	}
	shf.r.wrap.b32 	%r773, %r772, %r771, 28;
	shf.r.wrap.b32 	%r774, %r771, %r772, 28;
	mov.b64 	%rd1295, {%r774, %r773};
	shf.l.wrap.b32 	%r775, %r771, %r772, 30;
	shf.l.wrap.b32 	%r776, %r772, %r771, 30;
	mov.b64 	%rd1296, {%r776, %r775};
	xor.b64  	%rd1297, %rd1296, %rd1295;
	shf.l.wrap.b32 	%r777, %r771, %r772, 25;
	shf.l.wrap.b32 	%r778, %r772, %r771, 25;
	mov.b64 	%rd1298, {%r778, %r777};
	xor.b64  	%rd1299, %rd1297, %rd1298;
	xor.b64  	%rd1300, %rd1281, %rd4;
	xor.b64  	%rd1301, %rd1281, %rd1257;
	and.b64  	%rd1302, %rd1301, %rd1300;
	xor.b64  	%rd1303, %rd1302, %rd1281;
	add.s64 	%rd1304, %rd1293, %rd1303;
	add.s64 	%rd1305, %rd1304, %rd1299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd1294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd1294;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 14;
	shf.r.wrap.b32 	%r782, %r779, %r780, 14;
	mov.b64 	%rd1306, {%r782, %r781};
	shf.r.wrap.b32 	%r783, %r780, %r779, 18;
	shf.r.wrap.b32 	%r784, %r779, %r780, 18;
	mov.b64 	%rd1307, {%r784, %r783};
	xor.b64  	%rd1308, %rd1307, %rd1306;
	shf.l.wrap.b32 	%r785, %r779, %r780, 23;
	shf.l.wrap.b32 	%r786, %r780, %r779, 23;
	mov.b64 	%rd1309, {%r786, %r785};
	xor.b64  	%rd1310, %rd1308, %rd1309;
	xor.b64  	%rd1311, %rd1270, %rd1251;
	and.b64  	%rd1312, %rd1294, %rd1311;
	xor.b64  	%rd1313, %rd1312, %rd1251;
	add.s64 	%rd2294, %rd2262, %rd2;
	add.s64 	%rd1314, %rd2294, %rd8;
	add.s64 	%rd1315, %rd1314, %rd27;
	add.s64 	%rd1316, %rd1315, %rd1313;
	add.s64 	%rd1317, %rd1316, %rd1310;
	add.s64 	%rd1318, %rd1317, %rd4;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd1305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd1305;
	}
	shf.r.wrap.b32 	%r789, %r788, %r787, 28;
	shf.r.wrap.b32 	%r790, %r787, %r788, 28;
	mov.b64 	%rd1319, {%r790, %r789};
	shf.l.wrap.b32 	%r791, %r787, %r788, 30;
	shf.l.wrap.b32 	%r792, %r788, %r787, 30;
	mov.b64 	%rd1320, {%r792, %r791};
	xor.b64  	%rd1321, %rd1320, %rd1319;
	shf.l.wrap.b32 	%r793, %r787, %r788, 25;
	shf.l.wrap.b32 	%r794, %r788, %r787, 25;
	mov.b64 	%rd1322, {%r794, %r793};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	xor.b64  	%rd1324, %rd1305, %rd1257;
	xor.b64  	%rd1325, %rd1305, %rd1281;
	and.b64  	%rd1326, %rd1325, %rd1324;
	xor.b64  	%rd1327, %rd1326, %rd1305;
	add.s64 	%rd1328, %rd1317, %rd1327;
	add.s64 	%rd1329, %rd1328, %rd1323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r795,%dummy}, %rd1318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r796}, %rd1318;
	}
	shf.r.wrap.b32 	%r797, %r796, %r795, 14;
	shf.r.wrap.b32 	%r798, %r795, %r796, 14;
	mov.b64 	%rd1330, {%r798, %r797};
	shf.r.wrap.b32 	%r799, %r796, %r795, 18;
	shf.r.wrap.b32 	%r800, %r795, %r796, 18;
	mov.b64 	%rd1331, {%r800, %r799};
	xor.b64  	%rd1332, %rd1331, %rd1330;
	shf.l.wrap.b32 	%r801, %r795, %r796, 23;
	shf.l.wrap.b32 	%r802, %r796, %r795, 23;
	mov.b64 	%rd1333, {%r802, %r801};
	xor.b64  	%rd1334, %rd1332, %rd1333;
	xor.b64  	%rd1335, %rd1294, %rd1270;
	and.b64  	%rd1336, %rd1318, %rd1335;
	xor.b64  	%rd1337, %rd1336, %rd1270;
	add.s64 	%rd2295, %rd2263, %rd21;
	add.s64 	%rd1338, %rd1251, %rd2295;
	add.s64 	%rd1339, %rd1338, %rd28;
	add.s64 	%rd1340, %rd1339, %rd1337;
	add.s64 	%rd1341, %rd1340, %rd1334;
	add.s64 	%rd1342, %rd1341, %rd1257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r803,%dummy}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r804}, %rd1329;
	}
	shf.r.wrap.b32 	%r805, %r804, %r803, 28;
	shf.r.wrap.b32 	%r806, %r803, %r804, 28;
	mov.b64 	%rd1343, {%r806, %r805};
	shf.l.wrap.b32 	%r807, %r803, %r804, 30;
	shf.l.wrap.b32 	%r808, %r804, %r803, 30;
	mov.b64 	%rd1344, {%r808, %r807};
	xor.b64  	%rd1345, %rd1344, %rd1343;
	shf.l.wrap.b32 	%r809, %r803, %r804, 25;
	shf.l.wrap.b32 	%r810, %r804, %r803, 25;
	mov.b64 	%rd1346, {%r810, %r809};
	xor.b64  	%rd1347, %rd1345, %rd1346;
	xor.b64  	%rd1348, %rd1329, %rd1281;
	xor.b64  	%rd1349, %rd1329, %rd1305;
	and.b64  	%rd1350, %rd1349, %rd1348;
	xor.b64  	%rd1351, %rd1350, %rd1329;
	add.s64 	%rd1352, %rd1341, %rd1351;
	add.s64 	%rd1353, %rd1352, %rd1347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r811,%dummy}, %rd1342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r812}, %rd1342;
	}
	shf.r.wrap.b32 	%r813, %r812, %r811, 14;
	shf.r.wrap.b32 	%r814, %r811, %r812, 14;
	mov.b64 	%rd1354, {%r814, %r813};
	shf.r.wrap.b32 	%r815, %r812, %r811, 18;
	shf.r.wrap.b32 	%r816, %r811, %r812, 18;
	mov.b64 	%rd1355, {%r816, %r815};
	xor.b64  	%rd1356, %rd1355, %rd1354;
	shf.l.wrap.b32 	%r817, %r811, %r812, 23;
	shf.l.wrap.b32 	%r818, %r812, %r811, 23;
	mov.b64 	%rd1357, {%r818, %r817};
	xor.b64  	%rd1358, %rd1356, %rd1357;
	xor.b64  	%rd1359, %rd1318, %rd1294;
	and.b64  	%rd1360, %rd1342, %rd1359;
	xor.b64  	%rd1361, %rd1360, %rd1294;
	add.s64 	%rd2296, %rd2264, %rd20;
	add.s64 	%rd1362, %rd1270, %rd2296;
	add.s64 	%rd1363, %rd1362, %rd29;
	add.s64 	%rd1364, %rd1363, %rd1361;
	add.s64 	%rd1365, %rd1364, %rd1358;
	add.s64 	%rd1366, %rd1365, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r819,%dummy}, %rd1353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r820}, %rd1353;
	}
	shf.r.wrap.b32 	%r821, %r820, %r819, 28;
	shf.r.wrap.b32 	%r822, %r819, %r820, 28;
	mov.b64 	%rd1367, {%r822, %r821};
	shf.l.wrap.b32 	%r823, %r819, %r820, 30;
	shf.l.wrap.b32 	%r824, %r820, %r819, 30;
	mov.b64 	%rd1368, {%r824, %r823};
	xor.b64  	%rd1369, %rd1368, %rd1367;
	shf.l.wrap.b32 	%r825, %r819, %r820, 25;
	shf.l.wrap.b32 	%r826, %r820, %r819, 25;
	mov.b64 	%rd1370, {%r826, %r825};
	xor.b64  	%rd1371, %rd1369, %rd1370;
	xor.b64  	%rd1372, %rd1353, %rd1305;
	xor.b64  	%rd1373, %rd1353, %rd1329;
	and.b64  	%rd1374, %rd1373, %rd1372;
	xor.b64  	%rd1375, %rd1374, %rd1353;
	add.s64 	%rd1376, %rd1365, %rd1375;
	add.s64 	%rd1377, %rd1376, %rd1371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r827,%dummy}, %rd1366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r828}, %rd1366;
	}
	shf.r.wrap.b32 	%r829, %r828, %r827, 14;
	shf.r.wrap.b32 	%r830, %r827, %r828, 14;
	mov.b64 	%rd1378, {%r830, %r829};
	shf.r.wrap.b32 	%r831, %r828, %r827, 18;
	shf.r.wrap.b32 	%r832, %r827, %r828, 18;
	mov.b64 	%rd1379, {%r832, %r831};
	xor.b64  	%rd1380, %rd1379, %rd1378;
	shf.l.wrap.b32 	%r833, %r827, %r828, 23;
	shf.l.wrap.b32 	%r834, %r828, %r827, 23;
	mov.b64 	%rd1381, {%r834, %r833};
	xor.b64  	%rd1382, %rd1380, %rd1381;
	xor.b64  	%rd1383, %rd1342, %rd1318;
	and.b64  	%rd1384, %rd1366, %rd1383;
	xor.b64  	%rd1385, %rd1384, %rd1318;
	add.s64 	%rd2297, %rd2265, %rd19;
	add.s64 	%rd1386, %rd1294, %rd2297;
	add.s64 	%rd1387, %rd1386, %rd30;
	add.s64 	%rd1388, %rd1387, %rd1385;
	add.s64 	%rd1389, %rd1388, %rd1382;
	add.s64 	%rd1390, %rd1389, %rd1305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd1377;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 28;
	shf.r.wrap.b32 	%r838, %r835, %r836, 28;
	mov.b64 	%rd1391, {%r838, %r837};
	shf.l.wrap.b32 	%r839, %r835, %r836, 30;
	shf.l.wrap.b32 	%r840, %r836, %r835, 30;
	mov.b64 	%rd1392, {%r840, %r839};
	xor.b64  	%rd1393, %rd1392, %rd1391;
	shf.l.wrap.b32 	%r841, %r835, %r836, 25;
	shf.l.wrap.b32 	%r842, %r836, %r835, 25;
	mov.b64 	%rd1394, {%r842, %r841};
	xor.b64  	%rd1395, %rd1393, %rd1394;
	xor.b64  	%rd1396, %rd1377, %rd1329;
	xor.b64  	%rd1397, %rd1377, %rd1353;
	and.b64  	%rd1398, %rd1397, %rd1396;
	xor.b64  	%rd1399, %rd1398, %rd1377;
	add.s64 	%rd1400, %rd1389, %rd1399;
	add.s64 	%rd1401, %rd1400, %rd1395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r843,%dummy}, %rd1390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r844}, %rd1390;
	}
	shf.r.wrap.b32 	%r845, %r844, %r843, 14;
	shf.r.wrap.b32 	%r846, %r843, %r844, 14;
	mov.b64 	%rd1402, {%r846, %r845};
	shf.r.wrap.b32 	%r847, %r844, %r843, 18;
	shf.r.wrap.b32 	%r848, %r843, %r844, 18;
	mov.b64 	%rd1403, {%r848, %r847};
	xor.b64  	%rd1404, %rd1403, %rd1402;
	shf.l.wrap.b32 	%r849, %r843, %r844, 23;
	shf.l.wrap.b32 	%r850, %r844, %r843, 23;
	mov.b64 	%rd1405, {%r850, %r849};
	xor.b64  	%rd1406, %rd1404, %rd1405;
	xor.b64  	%rd1407, %rd1366, %rd1342;
	and.b64  	%rd1408, %rd1390, %rd1407;
	xor.b64  	%rd1409, %rd1408, %rd1342;
	add.s64 	%rd2298, %rd2266, %rd3;
	add.s64 	%rd1410, %rd1318, %rd2298;
	add.s64 	%rd1411, %rd1410, %rd31;
	add.s64 	%rd1412, %rd1411, %rd1409;
	add.s64 	%rd1413, %rd1412, %rd1406;
	add.s64 	%rd1414, %rd1413, %rd1329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r851,%dummy}, %rd1401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r852}, %rd1401;
	}
	shf.r.wrap.b32 	%r853, %r852, %r851, 28;
	shf.r.wrap.b32 	%r854, %r851, %r852, 28;
	mov.b64 	%rd1415, {%r854, %r853};
	shf.l.wrap.b32 	%r855, %r851, %r852, 30;
	shf.l.wrap.b32 	%r856, %r852, %r851, 30;
	mov.b64 	%rd1416, {%r856, %r855};
	xor.b64  	%rd1417, %rd1416, %rd1415;
	shf.l.wrap.b32 	%r857, %r851, %r852, 25;
	shf.l.wrap.b32 	%r858, %r852, %r851, 25;
	mov.b64 	%rd1418, {%r858, %r857};
	xor.b64  	%rd1419, %rd1417, %rd1418;
	xor.b64  	%rd1420, %rd1401, %rd1353;
	xor.b64  	%rd1421, %rd1401, %rd1377;
	and.b64  	%rd1422, %rd1421, %rd1420;
	xor.b64  	%rd1423, %rd1422, %rd1401;
	add.s64 	%rd1424, %rd1413, %rd1423;
	add.s64 	%rd1425, %rd1424, %rd1419;
	add.s64 	%rd1426, %rd32, %rd1342;
	xor.b64  	%rd1427, %rd1426, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r859,%dummy}, %rd1414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r860}, %rd1414;
	}
	shf.r.wrap.b32 	%r861, %r860, %r859, 14;
	shf.r.wrap.b32 	%r862, %r859, %r860, 14;
	mov.b64 	%rd1428, {%r862, %r861};
	shf.r.wrap.b32 	%r863, %r860, %r859, 18;
	shf.r.wrap.b32 	%r864, %r859, %r860, 18;
	mov.b64 	%rd1429, {%r864, %r863};
	xor.b64  	%rd1430, %rd1429, %rd1428;
	shf.l.wrap.b32 	%r865, %r859, %r860, 23;
	shf.l.wrap.b32 	%r866, %r860, %r859, 23;
	mov.b64 	%rd1431, {%r866, %r865};
	xor.b64  	%rd1432, %rd1430, %rd1431;
	xor.b64  	%rd1433, %rd1390, %rd1366;
	and.b64  	%rd1434, %rd1414, %rd1433;
	xor.b64  	%rd1435, %rd1434, %rd1366;
	add.s64 	%rd1436, %rd1427, %rd1435;
	add.s64 	%rd1437, %rd1436, %rd1432;
	add.s64 	%rd1438, %rd1437, %rd1353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r867,%dummy}, %rd1425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd1425;
	}
	shf.r.wrap.b32 	%r869, %r868, %r867, 28;
	shf.r.wrap.b32 	%r870, %r867, %r868, 28;
	mov.b64 	%rd1439, {%r870, %r869};
	shf.l.wrap.b32 	%r871, %r867, %r868, 30;
	shf.l.wrap.b32 	%r872, %r868, %r867, 30;
	mov.b64 	%rd1440, {%r872, %r871};
	xor.b64  	%rd1441, %rd1440, %rd1439;
	shf.l.wrap.b32 	%r873, %r867, %r868, 25;
	shf.l.wrap.b32 	%r874, %r868, %r867, 25;
	mov.b64 	%rd1442, {%r874, %r873};
	xor.b64  	%rd1443, %rd1441, %rd1442;
	xor.b64  	%rd1444, %rd1425, %rd1377;
	xor.b64  	%rd1445, %rd1425, %rd1401;
	and.b64  	%rd1446, %rd1445, %rd1444;
	xor.b64  	%rd1447, %rd1446, %rd1425;
	add.s64 	%rd1448, %rd1437, %rd1447;
	add.s64 	%rd1449, %rd1448, %rd1443;
	add.s64 	%rd1450, %rd33, %rd1366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r875,%dummy}, %rd1438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r876}, %rd1438;
	}
	shf.r.wrap.b32 	%r877, %r876, %r875, 14;
	shf.r.wrap.b32 	%r878, %r875, %r876, 14;
	mov.b64 	%rd1451, {%r878, %r877};
	shf.r.wrap.b32 	%r879, %r876, %r875, 18;
	shf.r.wrap.b32 	%r880, %r875, %r876, 18;
	mov.b64 	%rd1452, {%r880, %r879};
	xor.b64  	%rd1453, %rd1452, %rd1451;
	shf.l.wrap.b32 	%r881, %r875, %r876, 23;
	shf.l.wrap.b32 	%r882, %r876, %r875, 23;
	mov.b64 	%rd1454, {%r882, %r881};
	xor.b64  	%rd1455, %rd1453, %rd1454;
	xor.b64  	%rd1456, %rd1414, %rd1390;
	and.b64  	%rd1457, %rd1438, %rd1456;
	xor.b64  	%rd1458, %rd1457, %rd1390;
	add.s64 	%rd1459, %rd1450, %rd1458;
	add.s64 	%rd1460, %rd1459, %rd1455;
	add.s64 	%rd1461, %rd1460, %rd1377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r883,%dummy}, %rd1449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r884}, %rd1449;
	}
	shf.r.wrap.b32 	%r885, %r884, %r883, 28;
	shf.r.wrap.b32 	%r886, %r883, %r884, 28;
	mov.b64 	%rd1462, {%r886, %r885};
	shf.l.wrap.b32 	%r887, %r883, %r884, 30;
	shf.l.wrap.b32 	%r888, %r884, %r883, 30;
	mov.b64 	%rd1463, {%r888, %r887};
	xor.b64  	%rd1464, %rd1463, %rd1462;
	shf.l.wrap.b32 	%r889, %r883, %r884, 25;
	shf.l.wrap.b32 	%r890, %r884, %r883, 25;
	mov.b64 	%rd1465, {%r890, %r889};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	xor.b64  	%rd1467, %rd1449, %rd1401;
	xor.b64  	%rd1468, %rd1449, %rd1425;
	and.b64  	%rd1469, %rd1468, %rd1467;
	xor.b64  	%rd1470, %rd1469, %rd1449;
	add.s64 	%rd1471, %rd1460, %rd1470;
	add.s64 	%rd1472, %rd1471, %rd1466;
	add.s64 	%rd1473, %rd34, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r891,%dummy}, %rd1461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r892}, %rd1461;
	}
	shf.r.wrap.b32 	%r893, %r892, %r891, 14;
	shf.r.wrap.b32 	%r894, %r891, %r892, 14;
	mov.b64 	%rd1474, {%r894, %r893};
	shf.r.wrap.b32 	%r895, %r892, %r891, 18;
	shf.r.wrap.b32 	%r896, %r891, %r892, 18;
	mov.b64 	%rd1475, {%r896, %r895};
	xor.b64  	%rd1476, %rd1475, %rd1474;
	shf.l.wrap.b32 	%r897, %r891, %r892, 23;
	shf.l.wrap.b32 	%r898, %r892, %r891, 23;
	mov.b64 	%rd1477, {%r898, %r897};
	xor.b64  	%rd1478, %rd1476, %rd1477;
	xor.b64  	%rd1479, %rd1438, %rd1414;
	and.b64  	%rd1480, %rd1461, %rd1479;
	xor.b64  	%rd1481, %rd1480, %rd1414;
	add.s64 	%rd1482, %rd1473, %rd1481;
	add.s64 	%rd1483, %rd1482, %rd1478;
	add.s64 	%rd1484, %rd1483, %rd1401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r899,%dummy}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r900}, %rd1472;
	}
	shf.r.wrap.b32 	%r901, %r900, %r899, 28;
	shf.r.wrap.b32 	%r902, %r899, %r900, 28;
	mov.b64 	%rd1485, {%r902, %r901};
	shf.l.wrap.b32 	%r903, %r899, %r900, 30;
	shf.l.wrap.b32 	%r904, %r900, %r899, 30;
	mov.b64 	%rd1486, {%r904, %r903};
	xor.b64  	%rd1487, %rd1486, %rd1485;
	shf.l.wrap.b32 	%r905, %r899, %r900, 25;
	shf.l.wrap.b32 	%r906, %r900, %r899, 25;
	mov.b64 	%rd1488, {%r906, %r905};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	xor.b64  	%rd1490, %rd1472, %rd1425;
	xor.b64  	%rd1491, %rd1472, %rd1449;
	and.b64  	%rd1492, %rd1491, %rd1490;
	xor.b64  	%rd1493, %rd1492, %rd1472;
	add.s64 	%rd1494, %rd1483, %rd1493;
	add.s64 	%rd1495, %rd1494, %rd1489;
	add.s64 	%rd1496, %rd35, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r907,%dummy}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r908}, %rd1484;
	}
	shf.r.wrap.b32 	%r909, %r908, %r907, 14;
	shf.r.wrap.b32 	%r910, %r907, %r908, 14;
	mov.b64 	%rd1497, {%r910, %r909};
	shf.r.wrap.b32 	%r911, %r908, %r907, 18;
	shf.r.wrap.b32 	%r912, %r907, %r908, 18;
	mov.b64 	%rd1498, {%r912, %r911};
	xor.b64  	%rd1499, %rd1498, %rd1497;
	shf.l.wrap.b32 	%r913, %r907, %r908, 23;
	shf.l.wrap.b32 	%r914, %r908, %r907, 23;
	mov.b64 	%rd1500, {%r914, %r913};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	xor.b64  	%rd1502, %rd1461, %rd1438;
	and.b64  	%rd1503, %rd1484, %rd1502;
	xor.b64  	%rd1504, %rd1503, %rd1438;
	add.s64 	%rd1505, %rd1496, %rd1504;
	add.s64 	%rd1506, %rd1505, %rd1501;
	add.s64 	%rd1507, %rd1506, %rd1425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r915,%dummy}, %rd1495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r916}, %rd1495;
	}
	shf.r.wrap.b32 	%r917, %r916, %r915, 28;
	shf.r.wrap.b32 	%r918, %r915, %r916, 28;
	mov.b64 	%rd1508, {%r918, %r917};
	shf.l.wrap.b32 	%r919, %r915, %r916, 30;
	shf.l.wrap.b32 	%r920, %r916, %r915, 30;
	mov.b64 	%rd1509, {%r920, %r919};
	xor.b64  	%rd1510, %rd1509, %rd1508;
	shf.l.wrap.b32 	%r921, %r915, %r916, 25;
	shf.l.wrap.b32 	%r922, %r916, %r915, 25;
	mov.b64 	%rd1511, {%r922, %r921};
	xor.b64  	%rd1512, %rd1510, %rd1511;
	xor.b64  	%rd1513, %rd1495, %rd1449;
	xor.b64  	%rd1514, %rd1495, %rd1472;
	and.b64  	%rd1515, %rd1514, %rd1513;
	xor.b64  	%rd1516, %rd1515, %rd1495;
	add.s64 	%rd1517, %rd1506, %rd1516;
	add.s64 	%rd1518, %rd1517, %rd1512;
	add.s64 	%rd1519, %rd36, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r923,%dummy}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r924}, %rd1507;
	}
	shf.r.wrap.b32 	%r925, %r924, %r923, 14;
	shf.r.wrap.b32 	%r926, %r923, %r924, 14;
	mov.b64 	%rd1520, {%r926, %r925};
	shf.r.wrap.b32 	%r927, %r924, %r923, 18;
	shf.r.wrap.b32 	%r928, %r923, %r924, 18;
	mov.b64 	%rd1521, {%r928, %r927};
	xor.b64  	%rd1522, %rd1521, %rd1520;
	shf.l.wrap.b32 	%r929, %r923, %r924, 23;
	shf.l.wrap.b32 	%r930, %r924, %r923, 23;
	mov.b64 	%rd1523, {%r930, %r929};
	xor.b64  	%rd1524, %rd1522, %rd1523;
	xor.b64  	%rd1525, %rd1484, %rd1461;
	and.b64  	%rd1526, %rd1507, %rd1525;
	xor.b64  	%rd1527, %rd1526, %rd1461;
	add.s64 	%rd1528, %rd1519, %rd1527;
	add.s64 	%rd1529, %rd1528, %rd1524;
	add.s64 	%rd2290, %rd1529, %rd1449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r931,%dummy}, %rd1518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r932}, %rd1518;
	}
	shf.r.wrap.b32 	%r933, %r932, %r931, 28;
	shf.r.wrap.b32 	%r934, %r931, %r932, 28;
	mov.b64 	%rd1530, {%r934, %r933};
	shf.l.wrap.b32 	%r935, %r931, %r932, 30;
	shf.l.wrap.b32 	%r936, %r932, %r931, 30;
	mov.b64 	%rd1531, {%r936, %r935};
	xor.b64  	%rd1532, %rd1531, %rd1530;
	shf.l.wrap.b32 	%r937, %r931, %r932, 25;
	shf.l.wrap.b32 	%r938, %r932, %r931, 25;
	mov.b64 	%rd1533, {%r938, %r937};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	xor.b64  	%rd1535, %rd1518, %rd1472;
	xor.b64  	%rd1536, %rd1518, %rd1495;
	and.b64  	%rd1537, %rd1536, %rd1535;
	xor.b64  	%rd1538, %rd1537, %rd1518;
	add.s64 	%rd1539, %rd1529, %rd1538;
	add.s64 	%rd2286, %rd1539, %rd1534;
	add.s64 	%rd1540, %rd37, %rd1461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r939,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r940}, %rd2290;
	}
	shf.r.wrap.b32 	%r941, %r940, %r939, 14;
	shf.r.wrap.b32 	%r942, %r939, %r940, 14;
	mov.b64 	%rd1541, {%r942, %r941};
	shf.r.wrap.b32 	%r943, %r940, %r939, 18;
	shf.r.wrap.b32 	%r944, %r939, %r940, 18;
	mov.b64 	%rd1542, {%r944, %r943};
	xor.b64  	%rd1543, %rd1542, %rd1541;
	shf.l.wrap.b32 	%r945, %r939, %r940, 23;
	shf.l.wrap.b32 	%r946, %r940, %r939, 23;
	mov.b64 	%rd1544, {%r946, %r945};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	xor.b64  	%rd1546, %rd1507, %rd1484;
	and.b64  	%rd1547, %rd2290, %rd1546;
	xor.b64  	%rd1548, %rd1547, %rd1484;
	add.s64 	%rd1549, %rd1540, %rd1548;
	add.s64 	%rd1550, %rd1549, %rd1545;
	add.s64 	%rd2289, %rd1550, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r947,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd2286;
	}
	shf.r.wrap.b32 	%r949, %r948, %r947, 28;
	shf.r.wrap.b32 	%r950, %r947, %r948, 28;
	mov.b64 	%rd1551, {%r950, %r949};
	shf.l.wrap.b32 	%r951, %r947, %r948, 30;
	shf.l.wrap.b32 	%r952, %r948, %r947, 30;
	mov.b64 	%rd1552, {%r952, %r951};
	xor.b64  	%rd1553, %rd1552, %rd1551;
	shf.l.wrap.b32 	%r953, %r947, %r948, 25;
	shf.l.wrap.b32 	%r954, %r948, %r947, 25;
	mov.b64 	%rd1554, {%r954, %r953};
	xor.b64  	%rd1555, %rd1553, %rd1554;
	xor.b64  	%rd1556, %rd2286, %rd1495;
	xor.b64  	%rd1557, %rd2286, %rd1518;
	and.b64  	%rd1558, %rd1557, %rd1556;
	xor.b64  	%rd1559, %rd1558, %rd2286;
	add.s64 	%rd1560, %rd1550, %rd1559;
	add.s64 	%rd2285, %rd1560, %rd1555;
	add.s64 	%rd1561, %rd38, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r955,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r956}, %rd2289;
	}
	shf.r.wrap.b32 	%r957, %r956, %r955, 14;
	shf.r.wrap.b32 	%r958, %r955, %r956, 14;
	mov.b64 	%rd1562, {%r958, %r957};
	shf.r.wrap.b32 	%r959, %r956, %r955, 18;
	shf.r.wrap.b32 	%r960, %r955, %r956, 18;
	mov.b64 	%rd1563, {%r960, %r959};
	xor.b64  	%rd1564, %rd1563, %rd1562;
	shf.l.wrap.b32 	%r961, %r955, %r956, 23;
	shf.l.wrap.b32 	%r962, %r956, %r955, 23;
	mov.b64 	%rd1565, {%r962, %r961};
	xor.b64  	%rd1566, %rd1564, %rd1565;
	xor.b64  	%rd1567, %rd2290, %rd1507;
	and.b64  	%rd1568, %rd2289, %rd1567;
	xor.b64  	%rd1569, %rd1568, %rd1507;
	add.s64 	%rd1570, %rd1561, %rd1569;
	add.s64 	%rd1571, %rd1570, %rd1566;
	add.s64 	%rd2288, %rd1571, %rd1495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r963,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r964}, %rd2285;
	}
	shf.r.wrap.b32 	%r965, %r964, %r963, 28;
	shf.r.wrap.b32 	%r966, %r963, %r964, 28;
	mov.b64 	%rd1572, {%r966, %r965};
	shf.l.wrap.b32 	%r967, %r963, %r964, 30;
	shf.l.wrap.b32 	%r968, %r964, %r963, 30;
	mov.b64 	%rd1573, {%r968, %r967};
	xor.b64  	%rd1574, %rd1573, %rd1572;
	shf.l.wrap.b32 	%r969, %r963, %r964, 25;
	shf.l.wrap.b32 	%r970, %r964, %r963, 25;
	mov.b64 	%rd1575, {%r970, %r969};
	xor.b64  	%rd1576, %rd1574, %rd1575;
	xor.b64  	%rd1577, %rd2285, %rd1518;
	xor.b64  	%rd1578, %rd2285, %rd2286;
	and.b64  	%rd1579, %rd1578, %rd1577;
	xor.b64  	%rd1580, %rd1579, %rd2285;
	add.s64 	%rd1581, %rd1571, %rd1580;
	add.s64 	%rd2284, %rd1581, %rd1576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r971,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r972}, %rd2288;
	}
	shf.r.wrap.b32 	%r973, %r972, %r971, 14;
	shf.r.wrap.b32 	%r974, %r971, %r972, 14;
	mov.b64 	%rd1582, {%r974, %r973};
	shf.r.wrap.b32 	%r975, %r972, %r971, 18;
	shf.r.wrap.b32 	%r976, %r971, %r972, 18;
	mov.b64 	%rd1583, {%r976, %r975};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	shf.l.wrap.b32 	%r977, %r971, %r972, 23;
	shf.l.wrap.b32 	%r978, %r972, %r971, 23;
	mov.b64 	%rd1585, {%r978, %r977};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	xor.b64  	%rd1587, %rd2289, %rd2290;
	and.b64  	%rd1588, %rd2288, %rd1587;
	xor.b64  	%rd1589, %rd1588, %rd2290;
	add.s64 	%rd1590, %rd1507, %rd39;
	add.s64 	%rd1591, %rd1590, %rd1589;
	add.s64 	%rd1592, %rd1591, %rd1586;
	add.s64 	%rd1593, %rd1592, 1536;
	add.s64 	%rd2287, %rd1593, %rd1518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r979,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r980}, %rd2284;
	}
	shf.r.wrap.b32 	%r981, %r980, %r979, 28;
	shf.r.wrap.b32 	%r982, %r979, %r980, 28;
	mov.b64 	%rd1594, {%r982, %r981};
	shf.l.wrap.b32 	%r983, %r979, %r980, 30;
	shf.l.wrap.b32 	%r984, %r980, %r979, 30;
	mov.b64 	%rd1595, {%r984, %r983};
	xor.b64  	%rd1596, %rd1595, %rd1594;
	shf.l.wrap.b32 	%r985, %r979, %r980, 25;
	shf.l.wrap.b32 	%r986, %r980, %r979, 25;
	mov.b64 	%rd1597, {%r986, %r985};
	xor.b64  	%rd1598, %rd1596, %rd1597;
	xor.b64  	%rd1599, %rd2284, %rd2286;
	xor.b64  	%rd1600, %rd2284, %rd2285;
	and.b64  	%rd1601, %rd1600, %rd1599;
	xor.b64  	%rd1602, %rd1601, %rd2284;
	add.s64 	%rd1603, %rd1593, %rd1602;
	add.s64 	%rd2283, %rd1603, %rd1598;
	mov.u64 	%rd2300, 0;
	mov.u64 	%rd2299, -9223372036854775808;
	mov.u64 	%rd2282, 1536;
	mov.u32 	%r1471, 16;
	mov.u64 	%rd2301, %rd2300;
	mov.u64 	%rd2302, %rd2300;
	mov.u64 	%rd2303, %rd2300;
	mov.u64 	%rd2304, %rd2300;
	mov.u64 	%rd2305, %rd2300;

BB2_6:
	mov.u64 	%rd2221, k_sha512;
	shr.u64 	%rd1604, %rd2305, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r987,%dummy}, %rd2305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r988}, %rd2305;
	}
	shf.r.wrap.b32 	%r989, %r988, %r987, 19;
	shf.r.wrap.b32 	%r990, %r987, %r988, 19;
	mov.b64 	%rd1605, {%r990, %r989};
	xor.b64  	%rd1606, %rd1605, %rd1604;
	shf.l.wrap.b32 	%r991, %r987, %r988, 3;
	shf.l.wrap.b32 	%r992, %r988, %r987, 3;
	mov.b64 	%rd1607, {%r992, %r991};
	xor.b64  	%rd1608, %rd1606, %rd1607;
	shr.u64 	%rd1609, %rd2292, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r993,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r994}, %rd2292;
	}
	shf.r.wrap.b32 	%r995, %r994, %r993, 1;
	shf.r.wrap.b32 	%r996, %r993, %r994, 1;
	mov.b64 	%rd1610, {%r996, %r995};
	xor.b64  	%rd1611, %rd1610, %rd1609;
	shf.r.wrap.b32 	%r997, %r994, %r993, 8;
	shf.r.wrap.b32 	%r998, %r993, %r994, 8;
	mov.b64 	%rd1612, {%r998, %r997};
	xor.b64  	%rd1613, %rd1611, %rd1612;
	add.s64 	%rd1614, %rd2291, %rd2300;
	add.s64 	%rd1615, %rd1614, %rd1608;
	add.s64 	%rd2291, %rd1615, %rd1613;
	shr.u64 	%rd1616, %rd2282, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd2282;
	}
	shf.r.wrap.b32 	%r1001, %r1000, %r999, 19;
	shf.r.wrap.b32 	%r1002, %r999, %r1000, 19;
	mov.b64 	%rd1617, {%r1002, %r1001};
	xor.b64  	%rd1618, %rd1617, %rd1616;
	shf.l.wrap.b32 	%r1003, %r999, %r1000, 3;
	shf.l.wrap.b32 	%r1004, %r1000, %r999, 3;
	mov.b64 	%rd1619, {%r1004, %r1003};
	xor.b64  	%rd1620, %rd1618, %rd1619;
	shr.u64 	%rd1621, %rd2293, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1005,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1006}, %rd2293;
	}
	shf.r.wrap.b32 	%r1007, %r1006, %r1005, 1;
	shf.r.wrap.b32 	%r1008, %r1005, %r1006, 1;
	mov.b64 	%rd1622, {%r1008, %r1007};
	xor.b64  	%rd1623, %rd1622, %rd1621;
	shf.r.wrap.b32 	%r1009, %r1006, %r1005, 8;
	shf.r.wrap.b32 	%r1010, %r1005, %r1006, 8;
	mov.b64 	%rd1624, {%r1010, %r1009};
	xor.b64  	%rd1625, %rd1623, %rd1624;
	add.s64 	%rd1626, %rd2292, %rd2301;
	add.s64 	%rd1627, %rd1626, %rd1620;
	add.s64 	%rd2292, %rd1627, %rd1625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1011,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1012}, %rd2291;
	}
	shf.r.wrap.b32 	%r1013, %r1012, %r1011, 19;
	shf.r.wrap.b32 	%r1014, %r1011, %r1012, 19;
	mov.b64 	%rd1628, {%r1014, %r1013};
	shf.l.wrap.b32 	%r1015, %r1011, %r1012, 3;
	shf.l.wrap.b32 	%r1016, %r1012, %r1011, 3;
	mov.b64 	%rd1629, {%r1016, %r1015};
	shr.u64 	%rd1630, %rd2291, 6;
	xor.b64  	%rd1631, %rd1628, %rd1630;
	xor.b64  	%rd1632, %rd1631, %rd1629;
	shr.u64 	%rd1633, %rd2294, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1018}, %rd2294;
	}
	shf.r.wrap.b32 	%r1019, %r1018, %r1017, 1;
	shf.r.wrap.b32 	%r1020, %r1017, %r1018, 1;
	mov.b64 	%rd1634, {%r1020, %r1019};
	xor.b64  	%rd1635, %rd1634, %rd1633;
	shf.r.wrap.b32 	%r1021, %r1018, %r1017, 8;
	shf.r.wrap.b32 	%r1022, %r1017, %r1018, 8;
	mov.b64 	%rd1636, {%r1022, %r1021};
	xor.b64  	%rd1637, %rd1635, %rd1636;
	add.s64 	%rd1638, %rd2293, %rd2302;
	add.s64 	%rd1639, %rd1638, %rd1632;
	add.s64 	%rd2293, %rd1639, %rd1637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1023,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd2292;
	}
	shf.r.wrap.b32 	%r1025, %r1024, %r1023, 19;
	shf.r.wrap.b32 	%r1026, %r1023, %r1024, 19;
	mov.b64 	%rd1640, {%r1026, %r1025};
	shf.l.wrap.b32 	%r1027, %r1023, %r1024, 3;
	shf.l.wrap.b32 	%r1028, %r1024, %r1023, 3;
	mov.b64 	%rd1641, {%r1028, %r1027};
	shr.u64 	%rd1642, %rd2292, 6;
	xor.b64  	%rd1643, %rd1640, %rd1642;
	xor.b64  	%rd1644, %rd1643, %rd1641;
	shr.u64 	%rd1645, %rd2295, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd2295;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 1;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 1;
	mov.b64 	%rd1646, {%r1032, %r1031};
	xor.b64  	%rd1647, %rd1646, %rd1645;
	shf.r.wrap.b32 	%r1033, %r1030, %r1029, 8;
	shf.r.wrap.b32 	%r1034, %r1029, %r1030, 8;
	mov.b64 	%rd1648, {%r1034, %r1033};
	xor.b64  	%rd1649, %rd1647, %rd1648;
	add.s64 	%rd1650, %rd2294, %rd2303;
	add.s64 	%rd1651, %rd1650, %rd1644;
	add.s64 	%rd2294, %rd1651, %rd1649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1035,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd2293;
	}
	shf.r.wrap.b32 	%r1037, %r1036, %r1035, 19;
	shf.r.wrap.b32 	%r1038, %r1035, %r1036, 19;
	mov.b64 	%rd1652, {%r1038, %r1037};
	shf.l.wrap.b32 	%r1039, %r1035, %r1036, 3;
	shf.l.wrap.b32 	%r1040, %r1036, %r1035, 3;
	mov.b64 	%rd1653, {%r1040, %r1039};
	shr.u64 	%rd1654, %rd2293, 6;
	xor.b64  	%rd1655, %rd1652, %rd1654;
	xor.b64  	%rd1656, %rd1655, %rd1653;
	shr.u64 	%rd1657, %rd2296, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1041,%dummy}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1042}, %rd2296;
	}
	shf.r.wrap.b32 	%r1043, %r1042, %r1041, 1;
	shf.r.wrap.b32 	%r1044, %r1041, %r1042, 1;
	mov.b64 	%rd1658, {%r1044, %r1043};
	xor.b64  	%rd1659, %rd1658, %rd1657;
	shf.r.wrap.b32 	%r1045, %r1042, %r1041, 8;
	shf.r.wrap.b32 	%r1046, %r1041, %r1042, 8;
	mov.b64 	%rd1660, {%r1046, %r1045};
	xor.b64  	%rd1661, %rd1659, %rd1660;
	add.s64 	%rd1662, %rd2295, %rd2304;
	add.s64 	%rd1663, %rd1662, %rd1656;
	add.s64 	%rd2295, %rd1663, %rd1661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1047,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1048}, %rd2294;
	}
	shf.r.wrap.b32 	%r1049, %r1048, %r1047, 19;
	shf.r.wrap.b32 	%r1050, %r1047, %r1048, 19;
	mov.b64 	%rd1664, {%r1050, %r1049};
	shf.l.wrap.b32 	%r1051, %r1047, %r1048, 3;
	shf.l.wrap.b32 	%r1052, %r1048, %r1047, 3;
	mov.b64 	%rd1665, {%r1052, %r1051};
	shr.u64 	%rd1666, %rd2294, 6;
	xor.b64  	%rd1667, %rd1664, %rd1666;
	xor.b64  	%rd1668, %rd1667, %rd1665;
	shr.u64 	%rd1669, %rd2297, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd2297;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 1;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 1;
	mov.b64 	%rd1670, {%r1056, %r1055};
	xor.b64  	%rd1671, %rd1670, %rd1669;
	shf.r.wrap.b32 	%r1057, %r1054, %r1053, 8;
	shf.r.wrap.b32 	%r1058, %r1053, %r1054, 8;
	mov.b64 	%rd1672, {%r1058, %r1057};
	xor.b64  	%rd1673, %rd1671, %rd1672;
	add.s64 	%rd1674, %rd2296, %rd2305;
	add.s64 	%rd1675, %rd1674, %rd1668;
	add.s64 	%rd2296, %rd1675, %rd1673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1059,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1060}, %rd2295;
	}
	shf.r.wrap.b32 	%r1061, %r1060, %r1059, 19;
	shf.r.wrap.b32 	%r1062, %r1059, %r1060, 19;
	mov.b64 	%rd1676, {%r1062, %r1061};
	shf.l.wrap.b32 	%r1063, %r1059, %r1060, 3;
	shf.l.wrap.b32 	%r1064, %r1060, %r1059, 3;
	mov.b64 	%rd1677, {%r1064, %r1063};
	shr.u64 	%rd1678, %rd2295, 6;
	xor.b64  	%rd1679, %rd1676, %rd1678;
	xor.b64  	%rd1680, %rd1679, %rd1677;
	shr.u64 	%rd1681, %rd2298, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1065,%dummy}, %rd2298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1066}, %rd2298;
	}
	shf.r.wrap.b32 	%r1067, %r1066, %r1065, 1;
	shf.r.wrap.b32 	%r1068, %r1065, %r1066, 1;
	mov.b64 	%rd1682, {%r1068, %r1067};
	xor.b64  	%rd1683, %rd1682, %rd1681;
	shf.r.wrap.b32 	%r1069, %r1066, %r1065, 8;
	shf.r.wrap.b32 	%r1070, %r1065, %r1066, 8;
	mov.b64 	%rd1684, {%r1070, %r1069};
	xor.b64  	%rd1685, %rd1683, %rd1684;
	add.s64 	%rd1686, %rd2282, %rd2297;
	add.s64 	%rd1687, %rd1686, %rd1680;
	add.s64 	%rd2297, %rd1687, %rd1685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1071,%dummy}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1072}, %rd2296;
	}
	shf.r.wrap.b32 	%r1073, %r1072, %r1071, 19;
	shf.r.wrap.b32 	%r1074, %r1071, %r1072, 19;
	mov.b64 	%rd1688, {%r1074, %r1073};
	shf.l.wrap.b32 	%r1075, %r1071, %r1072, 3;
	shf.l.wrap.b32 	%r1076, %r1072, %r1071, 3;
	mov.b64 	%rd1689, {%r1076, %r1075};
	shr.u64 	%rd1690, %rd2296, 6;
	xor.b64  	%rd1691, %rd1688, %rd1690;
	xor.b64  	%rd1692, %rd1691, %rd1689;
	shr.u64 	%rd1693, %rd2299, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd2299;
	}
	shf.r.wrap.b32 	%r1079, %r1078, %r1077, 1;
	shf.r.wrap.b32 	%r1080, %r1077, %r1078, 1;
	mov.b64 	%rd1694, {%r1080, %r1079};
	xor.b64  	%rd1695, %rd1694, %rd1693;
	shf.r.wrap.b32 	%r1081, %r1078, %r1077, 8;
	shf.r.wrap.b32 	%r1082, %r1077, %r1078, 8;
	mov.b64 	%rd1696, {%r1082, %r1081};
	xor.b64  	%rd1697, %rd1695, %rd1696;
	add.s64 	%rd1698, %rd2291, %rd2298;
	add.s64 	%rd1699, %rd1698, %rd1692;
	add.s64 	%rd2298, %rd1699, %rd1697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1083,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1084}, %rd2297;
	}
	shf.r.wrap.b32 	%r1085, %r1084, %r1083, 19;
	shf.r.wrap.b32 	%r1086, %r1083, %r1084, 19;
	mov.b64 	%rd1700, {%r1086, %r1085};
	shf.l.wrap.b32 	%r1087, %r1083, %r1084, 3;
	shf.l.wrap.b32 	%r1088, %r1084, %r1083, 3;
	mov.b64 	%rd1701, {%r1088, %r1087};
	shr.u64 	%rd1702, %rd2297, 6;
	xor.b64  	%rd1703, %rd1700, %rd1702;
	xor.b64  	%rd1704, %rd1703, %rd1701;
	shr.u64 	%rd1705, %rd2300, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1089,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1090}, %rd2300;
	}
	shf.r.wrap.b32 	%r1091, %r1090, %r1089, 1;
	shf.r.wrap.b32 	%r1092, %r1089, %r1090, 1;
	mov.b64 	%rd1706, {%r1092, %r1091};
	xor.b64  	%rd1707, %rd1706, %rd1705;
	shf.r.wrap.b32 	%r1093, %r1090, %r1089, 8;
	shf.r.wrap.b32 	%r1094, %r1089, %r1090, 8;
	mov.b64 	%rd1708, {%r1094, %r1093};
	xor.b64  	%rd1709, %rd1707, %rd1708;
	add.s64 	%rd1710, %rd2292, %rd2299;
	add.s64 	%rd1711, %rd1710, %rd1704;
	add.s64 	%rd2299, %rd1711, %rd1709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd2298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd2298;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 19;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 19;
	mov.b64 	%rd1712, {%r1098, %r1097};
	shf.l.wrap.b32 	%r1099, %r1095, %r1096, 3;
	shf.l.wrap.b32 	%r1100, %r1096, %r1095, 3;
	mov.b64 	%rd1713, {%r1100, %r1099};
	shr.u64 	%rd1714, %rd2298, 6;
	xor.b64  	%rd1715, %rd1712, %rd1714;
	xor.b64  	%rd1716, %rd1715, %rd1713;
	shr.u64 	%rd1717, %rd2301, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd2301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd2301;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 1;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 1;
	mov.b64 	%rd1718, {%r1104, %r1103};
	xor.b64  	%rd1719, %rd1718, %rd1717;
	shf.r.wrap.b32 	%r1105, %r1102, %r1101, 8;
	shf.r.wrap.b32 	%r1106, %r1101, %r1102, 8;
	mov.b64 	%rd1720, {%r1106, %r1105};
	xor.b64  	%rd1721, %rd1719, %rd1720;
	add.s64 	%rd1722, %rd2293, %rd2300;
	add.s64 	%rd1723, %rd1722, %rd1716;
	add.s64 	%rd2300, %rd1723, %rd1721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1107,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1108}, %rd2299;
	}
	shf.r.wrap.b32 	%r1109, %r1108, %r1107, 19;
	shf.r.wrap.b32 	%r1110, %r1107, %r1108, 19;
	mov.b64 	%rd1724, {%r1110, %r1109};
	shf.l.wrap.b32 	%r1111, %r1107, %r1108, 3;
	shf.l.wrap.b32 	%r1112, %r1108, %r1107, 3;
	mov.b64 	%rd1725, {%r1112, %r1111};
	shr.u64 	%rd1726, %rd2299, 6;
	xor.b64  	%rd1727, %rd1724, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1725;
	shr.u64 	%rd1729, %rd2302, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd2302;
	}
	shf.r.wrap.b32 	%r1115, %r1114, %r1113, 1;
	shf.r.wrap.b32 	%r1116, %r1113, %r1114, 1;
	mov.b64 	%rd1730, {%r1116, %r1115};
	xor.b64  	%rd1731, %rd1730, %rd1729;
	shf.r.wrap.b32 	%r1117, %r1114, %r1113, 8;
	shf.r.wrap.b32 	%r1118, %r1113, %r1114, 8;
	mov.b64 	%rd1732, {%r1118, %r1117};
	xor.b64  	%rd1733, %rd1731, %rd1732;
	add.s64 	%rd1734, %rd2294, %rd2301;
	add.s64 	%rd1735, %rd1734, %rd1728;
	add.s64 	%rd2301, %rd1735, %rd1733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1119,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1120}, %rd2300;
	}
	shf.r.wrap.b32 	%r1121, %r1120, %r1119, 19;
	shf.r.wrap.b32 	%r1122, %r1119, %r1120, 19;
	mov.b64 	%rd1736, {%r1122, %r1121};
	shf.l.wrap.b32 	%r1123, %r1119, %r1120, 3;
	shf.l.wrap.b32 	%r1124, %r1120, %r1119, 3;
	mov.b64 	%rd1737, {%r1124, %r1123};
	shr.u64 	%rd1738, %rd2300, 6;
	xor.b64  	%rd1739, %rd1736, %rd1738;
	xor.b64  	%rd1740, %rd1739, %rd1737;
	shr.u64 	%rd1741, %rd2303, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd2303;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 1;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 1;
	mov.b64 	%rd1742, {%r1128, %r1127};
	xor.b64  	%rd1743, %rd1742, %rd1741;
	shf.r.wrap.b32 	%r1129, %r1126, %r1125, 8;
	shf.r.wrap.b32 	%r1130, %r1125, %r1126, 8;
	mov.b64 	%rd1744, {%r1130, %r1129};
	xor.b64  	%rd1745, %rd1743, %rd1744;
	add.s64 	%rd1746, %rd2295, %rd2302;
	add.s64 	%rd1747, %rd1746, %rd1740;
	add.s64 	%rd2302, %rd1747, %rd1745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1131,%dummy}, %rd2301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1132}, %rd2301;
	}
	shf.r.wrap.b32 	%r1133, %r1132, %r1131, 19;
	shf.r.wrap.b32 	%r1134, %r1131, %r1132, 19;
	mov.b64 	%rd1748, {%r1134, %r1133};
	shf.l.wrap.b32 	%r1135, %r1131, %r1132, 3;
	shf.l.wrap.b32 	%r1136, %r1132, %r1131, 3;
	mov.b64 	%rd1749, {%r1136, %r1135};
	shr.u64 	%rd1750, %rd2301, 6;
	xor.b64  	%rd1751, %rd1748, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1749;
	shr.u64 	%rd1753, %rd2304, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1137,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1138}, %rd2304;
	}
	shf.r.wrap.b32 	%r1139, %r1138, %r1137, 1;
	shf.r.wrap.b32 	%r1140, %r1137, %r1138, 1;
	mov.b64 	%rd1754, {%r1140, %r1139};
	xor.b64  	%rd1755, %rd1754, %rd1753;
	shf.r.wrap.b32 	%r1141, %r1138, %r1137, 8;
	shf.r.wrap.b32 	%r1142, %r1137, %r1138, 8;
	mov.b64 	%rd1756, {%r1142, %r1141};
	xor.b64  	%rd1757, %rd1755, %rd1756;
	add.s64 	%rd1758, %rd2296, %rd2303;
	add.s64 	%rd1759, %rd1758, %rd1752;
	add.s64 	%rd2303, %rd1759, %rd1757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1143,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1144}, %rd2302;
	}
	shf.r.wrap.b32 	%r1145, %r1144, %r1143, 19;
	shf.r.wrap.b32 	%r1146, %r1143, %r1144, 19;
	mov.b64 	%rd1760, {%r1146, %r1145};
	shf.l.wrap.b32 	%r1147, %r1143, %r1144, 3;
	shf.l.wrap.b32 	%r1148, %r1144, %r1143, 3;
	mov.b64 	%rd1761, {%r1148, %r1147};
	shr.u64 	%rd1762, %rd2302, 6;
	xor.b64  	%rd1763, %rd1760, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1761;
	shr.u64 	%rd1765, %rd2305, 7;
	shf.r.wrap.b32 	%r1149, %r988, %r987, 1;
	shf.r.wrap.b32 	%r1150, %r987, %r988, 1;
	mov.b64 	%rd1766, {%r1150, %r1149};
	xor.b64  	%rd1767, %rd1766, %rd1765;
	shf.r.wrap.b32 	%r1151, %r988, %r987, 8;
	shf.r.wrap.b32 	%r1152, %r987, %r988, 8;
	mov.b64 	%rd1768, {%r1152, %r1151};
	xor.b64  	%rd1769, %rd1767, %rd1768;
	add.s64 	%rd1770, %rd2297, %rd2304;
	add.s64 	%rd1771, %rd1770, %rd1764;
	add.s64 	%rd2304, %rd1771, %rd1769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1153,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1154}, %rd2303;
	}
	shf.r.wrap.b32 	%r1155, %r1154, %r1153, 19;
	shf.r.wrap.b32 	%r1156, %r1153, %r1154, 19;
	mov.b64 	%rd1772, {%r1156, %r1155};
	shf.l.wrap.b32 	%r1157, %r1153, %r1154, 3;
	shf.l.wrap.b32 	%r1158, %r1154, %r1153, 3;
	mov.b64 	%rd1773, {%r1158, %r1157};
	shr.u64 	%rd1774, %rd2303, 6;
	xor.b64  	%rd1775, %rd1772, %rd1774;
	xor.b64  	%rd1776, %rd1775, %rd1773;
	shr.u64 	%rd1777, %rd2282, 7;
	shf.r.wrap.b32 	%r1159, %r1000, %r999, 1;
	shf.r.wrap.b32 	%r1160, %r999, %r1000, 1;
	mov.b64 	%rd1778, {%r1160, %r1159};
	xor.b64  	%rd1779, %rd1778, %rd1777;
	shf.r.wrap.b32 	%r1161, %r1000, %r999, 8;
	shf.r.wrap.b32 	%r1162, %r999, %r1000, 8;
	mov.b64 	%rd1780, {%r1162, %r1161};
	xor.b64  	%rd1781, %rd1779, %rd1780;
	add.s64 	%rd1782, %rd2298, %rd2305;
	add.s64 	%rd1783, %rd1782, %rd1776;
	add.s64 	%rd2305, %rd1783, %rd1781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1163,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1164}, %rd2304;
	}
	shf.r.wrap.b32 	%r1165, %r1164, %r1163, 19;
	shf.r.wrap.b32 	%r1166, %r1163, %r1164, 19;
	mov.b64 	%rd1784, {%r1166, %r1165};
	shf.l.wrap.b32 	%r1167, %r1163, %r1164, 3;
	shf.l.wrap.b32 	%r1168, %r1164, %r1163, 3;
	mov.b64 	%rd1785, {%r1168, %r1167};
	shr.u64 	%rd1786, %rd2304, 6;
	xor.b64  	%rd1787, %rd1784, %rd1786;
	xor.b64  	%rd1788, %rd1787, %rd1785;
	shf.r.wrap.b32 	%r1169, %r1012, %r1011, 1;
	shf.r.wrap.b32 	%r1170, %r1011, %r1012, 1;
	mov.b64 	%rd1789, {%r1170, %r1169};
	shf.r.wrap.b32 	%r1171, %r1012, %r1011, 8;
	shf.r.wrap.b32 	%r1172, %r1011, %r1012, 8;
	mov.b64 	%rd1790, {%r1172, %r1171};
	shr.u64 	%rd1791, %rd2291, 7;
	xor.b64  	%rd1792, %rd1789, %rd1791;
	xor.b64  	%rd1793, %rd1792, %rd1790;
	add.s64 	%rd1794, %rd2299, %rd2282;
	add.s64 	%rd1795, %rd1794, %rd1788;
	add.s64 	%rd2282, %rd1795, %rd1793;
	mul.wide.s32 	%rd1796, %r1471, 8;
	add.s64 	%rd1798, %rd2221, %rd1796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd2287;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 18;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 18;
	mov.b64 	%rd1799, {%r1176, %r1175};
	shf.r.wrap.b32 	%r1177, %r1174, %r1173, 14;
	shf.r.wrap.b32 	%r1178, %r1173, %r1174, 14;
	mov.b64 	%rd1800, {%r1178, %r1177};
	xor.b64  	%rd1801, %rd1799, %rd1800;
	shf.l.wrap.b32 	%r1179, %r1173, %r1174, 23;
	shf.l.wrap.b32 	%r1180, %r1174, %r1173, 23;
	mov.b64 	%rd1802, {%r1180, %r1179};
	xor.b64  	%rd1803, %rd1801, %rd1802;
	xor.b64  	%rd1804, %rd2288, %rd2289;
	and.b64  	%rd1805, %rd1804, %rd2287;
	xor.b64  	%rd1806, %rd1805, %rd2289;
	add.s64 	%rd1807, %rd1806, %rd2290;
	add.s64 	%rd1808, %rd1807, %rd2291;
	ld.const.u64 	%rd1809, [%rd1798];
	add.s64 	%rd1810, %rd1808, %rd1809;
	add.s64 	%rd1811, %rd1810, %rd1803;
	add.s64 	%rd1812, %rd1811, %rd2286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1181}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1182,%dummy}, %rd2283;
	}
	shf.l.wrap.b32 	%r1183, %r1182, %r1181, 30;
	shf.l.wrap.b32 	%r1184, %r1181, %r1182, 30;
	mov.b64 	%rd1813, {%r1184, %r1183};
	shf.r.wrap.b32 	%r1185, %r1181, %r1182, 28;
	shf.r.wrap.b32 	%r1186, %r1182, %r1181, 28;
	mov.b64 	%rd1814, {%r1186, %r1185};
	xor.b64  	%rd1815, %rd1813, %rd1814;
	shf.l.wrap.b32 	%r1187, %r1182, %r1181, 25;
	shf.l.wrap.b32 	%r1188, %r1181, %r1182, 25;
	mov.b64 	%rd1816, {%r1188, %r1187};
	xor.b64  	%rd1817, %rd1815, %rd1816;
	xor.b64  	%rd1818, %rd2283, %rd2284;
	xor.b64  	%rd1819, %rd2283, %rd2285;
	and.b64  	%rd1820, %rd1818, %rd1819;
	xor.b64  	%rd1821, %rd1820, %rd2283;
	add.s64 	%rd1822, %rd1811, %rd1821;
	add.s64 	%rd1823, %rd1822, %rd1817;
	add.s32 	%r1189, %r1471, 1;
	mul.wide.s32 	%rd1824, %r1189, 8;
	add.s64 	%rd1825, %rd2221, %rd1824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1190,%dummy}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1191}, %rd1812;
	}
	shf.r.wrap.b32 	%r1192, %r1191, %r1190, 14;
	shf.r.wrap.b32 	%r1193, %r1190, %r1191, 14;
	mov.b64 	%rd1826, {%r1193, %r1192};
	shf.r.wrap.b32 	%r1194, %r1191, %r1190, 18;
	shf.r.wrap.b32 	%r1195, %r1190, %r1191, 18;
	mov.b64 	%rd1827, {%r1195, %r1194};
	xor.b64  	%rd1828, %rd1827, %rd1826;
	shf.l.wrap.b32 	%r1196, %r1190, %r1191, 23;
	shf.l.wrap.b32 	%r1197, %r1191, %r1190, 23;
	mov.b64 	%rd1829, {%r1197, %r1196};
	xor.b64  	%rd1830, %rd1828, %rd1829;
	xor.b64  	%rd1831, %rd2287, %rd2288;
	and.b64  	%rd1832, %rd1812, %rd1831;
	xor.b64  	%rd1833, %rd1832, %rd2288;
	add.s64 	%rd1834, %rd2292, %rd2289;
	ld.const.u64 	%rd1835, [%rd1825];
	add.s64 	%rd1836, %rd1834, %rd1835;
	add.s64 	%rd1837, %rd1836, %rd1833;
	add.s64 	%rd1838, %rd1837, %rd1830;
	add.s64 	%rd1839, %rd1838, %rd2285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1198,%dummy}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1199}, %rd1823;
	}
	shf.r.wrap.b32 	%r1200, %r1199, %r1198, 28;
	shf.r.wrap.b32 	%r1201, %r1198, %r1199, 28;
	mov.b64 	%rd1840, {%r1201, %r1200};
	shf.l.wrap.b32 	%r1202, %r1198, %r1199, 30;
	shf.l.wrap.b32 	%r1203, %r1199, %r1198, 30;
	mov.b64 	%rd1841, {%r1203, %r1202};
	xor.b64  	%rd1842, %rd1841, %rd1840;
	shf.l.wrap.b32 	%r1204, %r1198, %r1199, 25;
	shf.l.wrap.b32 	%r1205, %r1199, %r1198, 25;
	mov.b64 	%rd1843, {%r1205, %r1204};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	xor.b64  	%rd1845, %rd1823, %rd2284;
	xor.b64  	%rd1846, %rd1823, %rd2283;
	and.b64  	%rd1847, %rd1846, %rd1845;
	xor.b64  	%rd1848, %rd1847, %rd1823;
	add.s64 	%rd1849, %rd1838, %rd1848;
	add.s64 	%rd1850, %rd1849, %rd1844;
	add.s32 	%r1206, %r1471, 2;
	mul.wide.s32 	%rd1851, %r1206, 8;
	add.s64 	%rd1852, %rd2221, %rd1851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1207,%dummy}, %rd1839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1208}, %rd1839;
	}
	shf.r.wrap.b32 	%r1209, %r1208, %r1207, 14;
	shf.r.wrap.b32 	%r1210, %r1207, %r1208, 14;
	mov.b64 	%rd1853, {%r1210, %r1209};
	shf.r.wrap.b32 	%r1211, %r1208, %r1207, 18;
	shf.r.wrap.b32 	%r1212, %r1207, %r1208, 18;
	mov.b64 	%rd1854, {%r1212, %r1211};
	xor.b64  	%rd1855, %rd1854, %rd1853;
	shf.l.wrap.b32 	%r1213, %r1207, %r1208, 23;
	shf.l.wrap.b32 	%r1214, %r1208, %r1207, 23;
	mov.b64 	%rd1856, {%r1214, %r1213};
	xor.b64  	%rd1857, %rd1855, %rd1856;
	xor.b64  	%rd1858, %rd1812, %rd2287;
	and.b64  	%rd1859, %rd1839, %rd1858;
	xor.b64  	%rd1860, %rd1859, %rd2287;
	add.s64 	%rd1861, %rd2293, %rd2288;
	ld.const.u64 	%rd1862, [%rd1852];
	add.s64 	%rd1863, %rd1861, %rd1862;
	add.s64 	%rd1864, %rd1863, %rd1860;
	add.s64 	%rd1865, %rd1864, %rd1857;
	add.s64 	%rd1866, %rd1865, %rd2284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1215,%dummy}, %rd1850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1216}, %rd1850;
	}
	shf.r.wrap.b32 	%r1217, %r1216, %r1215, 28;
	shf.r.wrap.b32 	%r1218, %r1215, %r1216, 28;
	mov.b64 	%rd1867, {%r1218, %r1217};
	shf.l.wrap.b32 	%r1219, %r1215, %r1216, 30;
	shf.l.wrap.b32 	%r1220, %r1216, %r1215, 30;
	mov.b64 	%rd1868, {%r1220, %r1219};
	xor.b64  	%rd1869, %rd1868, %rd1867;
	shf.l.wrap.b32 	%r1221, %r1215, %r1216, 25;
	shf.l.wrap.b32 	%r1222, %r1216, %r1215, 25;
	mov.b64 	%rd1870, {%r1222, %r1221};
	xor.b64  	%rd1871, %rd1869, %rd1870;
	xor.b64  	%rd1872, %rd1850, %rd2283;
	xor.b64  	%rd1873, %rd1850, %rd1823;
	and.b64  	%rd1874, %rd1873, %rd1872;
	xor.b64  	%rd1875, %rd1874, %rd1850;
	add.s64 	%rd1876, %rd1865, %rd1875;
	add.s64 	%rd1877, %rd1876, %rd1871;
	add.s32 	%r1223, %r1471, 3;
	mul.wide.s32 	%rd1878, %r1223, 8;
	add.s64 	%rd1879, %rd2221, %rd1878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1224,%dummy}, %rd1866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1225}, %rd1866;
	}
	shf.r.wrap.b32 	%r1226, %r1225, %r1224, 14;
	shf.r.wrap.b32 	%r1227, %r1224, %r1225, 14;
	mov.b64 	%rd1880, {%r1227, %r1226};
	shf.r.wrap.b32 	%r1228, %r1225, %r1224, 18;
	shf.r.wrap.b32 	%r1229, %r1224, %r1225, 18;
	mov.b64 	%rd1881, {%r1229, %r1228};
	xor.b64  	%rd1882, %rd1881, %rd1880;
	shf.l.wrap.b32 	%r1230, %r1224, %r1225, 23;
	shf.l.wrap.b32 	%r1231, %r1225, %r1224, 23;
	mov.b64 	%rd1883, {%r1231, %r1230};
	xor.b64  	%rd1884, %rd1882, %rd1883;
	xor.b64  	%rd1885, %rd1839, %rd1812;
	and.b64  	%rd1886, %rd1866, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1812;
	add.s64 	%rd1888, %rd2294, %rd2287;
	ld.const.u64 	%rd1889, [%rd1879];
	add.s64 	%rd1890, %rd1888, %rd1889;
	add.s64 	%rd1891, %rd1890, %rd1887;
	add.s64 	%rd1892, %rd1891, %rd1884;
	add.s64 	%rd1893, %rd1892, %rd2283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1232,%dummy}, %rd1877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1233}, %rd1877;
	}
	shf.r.wrap.b32 	%r1234, %r1233, %r1232, 28;
	shf.r.wrap.b32 	%r1235, %r1232, %r1233, 28;
	mov.b64 	%rd1894, {%r1235, %r1234};
	shf.l.wrap.b32 	%r1236, %r1232, %r1233, 30;
	shf.l.wrap.b32 	%r1237, %r1233, %r1232, 30;
	mov.b64 	%rd1895, {%r1237, %r1236};
	xor.b64  	%rd1896, %rd1895, %rd1894;
	shf.l.wrap.b32 	%r1238, %r1232, %r1233, 25;
	shf.l.wrap.b32 	%r1239, %r1233, %r1232, 25;
	mov.b64 	%rd1897, {%r1239, %r1238};
	xor.b64  	%rd1898, %rd1896, %rd1897;
	xor.b64  	%rd1899, %rd1877, %rd1823;
	xor.b64  	%rd1900, %rd1877, %rd1850;
	and.b64  	%rd1901, %rd1900, %rd1899;
	xor.b64  	%rd1902, %rd1901, %rd1877;
	add.s64 	%rd1903, %rd1892, %rd1902;
	add.s64 	%rd1904, %rd1903, %rd1898;
	add.s32 	%r1240, %r1471, 4;
	mul.wide.s32 	%rd1905, %r1240, 8;
	add.s64 	%rd1906, %rd2221, %rd1905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1241,%dummy}, %rd1893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1242}, %rd1893;
	}
	shf.r.wrap.b32 	%r1243, %r1242, %r1241, 14;
	shf.r.wrap.b32 	%r1244, %r1241, %r1242, 14;
	mov.b64 	%rd1907, {%r1244, %r1243};
	shf.r.wrap.b32 	%r1245, %r1242, %r1241, 18;
	shf.r.wrap.b32 	%r1246, %r1241, %r1242, 18;
	mov.b64 	%rd1908, {%r1246, %r1245};
	xor.b64  	%rd1909, %rd1908, %rd1907;
	shf.l.wrap.b32 	%r1247, %r1241, %r1242, 23;
	shf.l.wrap.b32 	%r1248, %r1242, %r1241, 23;
	mov.b64 	%rd1910, {%r1248, %r1247};
	xor.b64  	%rd1911, %rd1909, %rd1910;
	xor.b64  	%rd1912, %rd1866, %rd1839;
	and.b64  	%rd1913, %rd1893, %rd1912;
	xor.b64  	%rd1914, %rd1913, %rd1839;
	add.s64 	%rd1915, %rd1812, %rd2295;
	ld.const.u64 	%rd1916, [%rd1906];
	add.s64 	%rd1917, %rd1915, %rd1916;
	add.s64 	%rd1918, %rd1917, %rd1914;
	add.s64 	%rd1919, %rd1918, %rd1911;
	add.s64 	%rd1920, %rd1919, %rd1823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1249,%dummy}, %rd1904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1250}, %rd1904;
	}
	shf.r.wrap.b32 	%r1251, %r1250, %r1249, 28;
	shf.r.wrap.b32 	%r1252, %r1249, %r1250, 28;
	mov.b64 	%rd1921, {%r1252, %r1251};
	shf.l.wrap.b32 	%r1253, %r1249, %r1250, 30;
	shf.l.wrap.b32 	%r1254, %r1250, %r1249, 30;
	mov.b64 	%rd1922, {%r1254, %r1253};
	xor.b64  	%rd1923, %rd1922, %rd1921;
	shf.l.wrap.b32 	%r1255, %r1249, %r1250, 25;
	shf.l.wrap.b32 	%r1256, %r1250, %r1249, 25;
	mov.b64 	%rd1924, {%r1256, %r1255};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	xor.b64  	%rd1926, %rd1904, %rd1850;
	xor.b64  	%rd1927, %rd1904, %rd1877;
	and.b64  	%rd1928, %rd1927, %rd1926;
	xor.b64  	%rd1929, %rd1928, %rd1904;
	add.s64 	%rd1930, %rd1919, %rd1929;
	add.s64 	%rd1931, %rd1930, %rd1925;
	add.s32 	%r1257, %r1471, 5;
	mul.wide.s32 	%rd1932, %r1257, 8;
	add.s64 	%rd1933, %rd2221, %rd1932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1258,%dummy}, %rd1920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1259}, %rd1920;
	}
	shf.r.wrap.b32 	%r1260, %r1259, %r1258, 14;
	shf.r.wrap.b32 	%r1261, %r1258, %r1259, 14;
	mov.b64 	%rd1934, {%r1261, %r1260};
	shf.r.wrap.b32 	%r1262, %r1259, %r1258, 18;
	shf.r.wrap.b32 	%r1263, %r1258, %r1259, 18;
	mov.b64 	%rd1935, {%r1263, %r1262};
	xor.b64  	%rd1936, %rd1935, %rd1934;
	shf.l.wrap.b32 	%r1264, %r1258, %r1259, 23;
	shf.l.wrap.b32 	%r1265, %r1259, %r1258, 23;
	mov.b64 	%rd1937, {%r1265, %r1264};
	xor.b64  	%rd1938, %rd1936, %rd1937;
	xor.b64  	%rd1939, %rd1893, %rd1866;
	and.b64  	%rd1940, %rd1920, %rd1939;
	xor.b64  	%rd1941, %rd1940, %rd1866;
	add.s64 	%rd1942, %rd1839, %rd2296;
	ld.const.u64 	%rd1943, [%rd1933];
	add.s64 	%rd1944, %rd1942, %rd1943;
	add.s64 	%rd1945, %rd1944, %rd1941;
	add.s64 	%rd1946, %rd1945, %rd1938;
	add.s64 	%rd1947, %rd1946, %rd1850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1266,%dummy}, %rd1931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1267}, %rd1931;
	}
	shf.r.wrap.b32 	%r1268, %r1267, %r1266, 28;
	shf.r.wrap.b32 	%r1269, %r1266, %r1267, 28;
	mov.b64 	%rd1948, {%r1269, %r1268};
	shf.l.wrap.b32 	%r1270, %r1266, %r1267, 30;
	shf.l.wrap.b32 	%r1271, %r1267, %r1266, 30;
	mov.b64 	%rd1949, {%r1271, %r1270};
	xor.b64  	%rd1950, %rd1949, %rd1948;
	shf.l.wrap.b32 	%r1272, %r1266, %r1267, 25;
	shf.l.wrap.b32 	%r1273, %r1267, %r1266, 25;
	mov.b64 	%rd1951, {%r1273, %r1272};
	xor.b64  	%rd1952, %rd1950, %rd1951;
	xor.b64  	%rd1953, %rd1931, %rd1877;
	xor.b64  	%rd1954, %rd1931, %rd1904;
	and.b64  	%rd1955, %rd1954, %rd1953;
	xor.b64  	%rd1956, %rd1955, %rd1931;
	add.s64 	%rd1957, %rd1946, %rd1956;
	add.s64 	%rd1958, %rd1957, %rd1952;
	add.s32 	%r1274, %r1471, 6;
	mul.wide.s32 	%rd1959, %r1274, 8;
	add.s64 	%rd1960, %rd2221, %rd1959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1275,%dummy}, %rd1947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1276}, %rd1947;
	}
	shf.r.wrap.b32 	%r1277, %r1276, %r1275, 14;
	shf.r.wrap.b32 	%r1278, %r1275, %r1276, 14;
	mov.b64 	%rd1961, {%r1278, %r1277};
	shf.r.wrap.b32 	%r1279, %r1276, %r1275, 18;
	shf.r.wrap.b32 	%r1280, %r1275, %r1276, 18;
	mov.b64 	%rd1962, {%r1280, %r1279};
	xor.b64  	%rd1963, %rd1962, %rd1961;
	shf.l.wrap.b32 	%r1281, %r1275, %r1276, 23;
	shf.l.wrap.b32 	%r1282, %r1276, %r1275, 23;
	mov.b64 	%rd1964, {%r1282, %r1281};
	xor.b64  	%rd1965, %rd1963, %rd1964;
	xor.b64  	%rd1966, %rd1920, %rd1893;
	and.b64  	%rd1967, %rd1947, %rd1966;
	xor.b64  	%rd1968, %rd1967, %rd1893;
	add.s64 	%rd1969, %rd1866, %rd2297;
	ld.const.u64 	%rd1970, [%rd1960];
	add.s64 	%rd1971, %rd1969, %rd1970;
	add.s64 	%rd1972, %rd1971, %rd1968;
	add.s64 	%rd1973, %rd1972, %rd1965;
	add.s64 	%rd1974, %rd1973, %rd1877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1283,%dummy}, %rd1958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1284}, %rd1958;
	}
	shf.r.wrap.b32 	%r1285, %r1284, %r1283, 28;
	shf.r.wrap.b32 	%r1286, %r1283, %r1284, 28;
	mov.b64 	%rd1975, {%r1286, %r1285};
	shf.l.wrap.b32 	%r1287, %r1283, %r1284, 30;
	shf.l.wrap.b32 	%r1288, %r1284, %r1283, 30;
	mov.b64 	%rd1976, {%r1288, %r1287};
	xor.b64  	%rd1977, %rd1976, %rd1975;
	shf.l.wrap.b32 	%r1289, %r1283, %r1284, 25;
	shf.l.wrap.b32 	%r1290, %r1284, %r1283, 25;
	mov.b64 	%rd1978, {%r1290, %r1289};
	xor.b64  	%rd1979, %rd1977, %rd1978;
	xor.b64  	%rd1980, %rd1958, %rd1904;
	xor.b64  	%rd1981, %rd1958, %rd1931;
	and.b64  	%rd1982, %rd1981, %rd1980;
	xor.b64  	%rd1983, %rd1982, %rd1958;
	add.s64 	%rd1984, %rd1973, %rd1983;
	add.s64 	%rd1985, %rd1984, %rd1979;
	add.s32 	%r1291, %r1471, 7;
	mul.wide.s32 	%rd1986, %r1291, 8;
	add.s64 	%rd1987, %rd2221, %rd1986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd1974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1974;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 14;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 14;
	mov.b64 	%rd1988, {%r1295, %r1294};
	shf.r.wrap.b32 	%r1296, %r1293, %r1292, 18;
	shf.r.wrap.b32 	%r1297, %r1292, %r1293, 18;
	mov.b64 	%rd1989, {%r1297, %r1296};
	xor.b64  	%rd1990, %rd1989, %rd1988;
	shf.l.wrap.b32 	%r1298, %r1292, %r1293, 23;
	shf.l.wrap.b32 	%r1299, %r1293, %r1292, 23;
	mov.b64 	%rd1991, {%r1299, %r1298};
	xor.b64  	%rd1992, %rd1990, %rd1991;
	xor.b64  	%rd1993, %rd1947, %rd1920;
	and.b64  	%rd1994, %rd1974, %rd1993;
	xor.b64  	%rd1995, %rd1994, %rd1920;
	add.s64 	%rd1996, %rd1893, %rd2298;
	ld.const.u64 	%rd1997, [%rd1987];
	add.s64 	%rd1998, %rd1996, %rd1997;
	add.s64 	%rd1999, %rd1998, %rd1995;
	add.s64 	%rd2000, %rd1999, %rd1992;
	add.s64 	%rd2001, %rd2000, %rd1904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd1985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd1985;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 28;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 28;
	mov.b64 	%rd2002, {%r1303, %r1302};
	shf.l.wrap.b32 	%r1304, %r1300, %r1301, 30;
	shf.l.wrap.b32 	%r1305, %r1301, %r1300, 30;
	mov.b64 	%rd2003, {%r1305, %r1304};
	xor.b64  	%rd2004, %rd2003, %rd2002;
	shf.l.wrap.b32 	%r1306, %r1300, %r1301, 25;
	shf.l.wrap.b32 	%r1307, %r1301, %r1300, 25;
	mov.b64 	%rd2005, {%r1307, %r1306};
	xor.b64  	%rd2006, %rd2004, %rd2005;
	xor.b64  	%rd2007, %rd1985, %rd1931;
	xor.b64  	%rd2008, %rd1985, %rd1958;
	and.b64  	%rd2009, %rd2008, %rd2007;
	xor.b64  	%rd2010, %rd2009, %rd1985;
	add.s64 	%rd2011, %rd2000, %rd2010;
	add.s64 	%rd2012, %rd2011, %rd2006;
	add.s32 	%r1308, %r1471, 8;
	mul.wide.s32 	%rd2013, %r1308, 8;
	add.s64 	%rd2014, %rd2221, %rd2013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd2001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1310}, %rd2001;
	}
	shf.r.wrap.b32 	%r1311, %r1310, %r1309, 14;
	shf.r.wrap.b32 	%r1312, %r1309, %r1310, 14;
	mov.b64 	%rd2015, {%r1312, %r1311};
	shf.r.wrap.b32 	%r1313, %r1310, %r1309, 18;
	shf.r.wrap.b32 	%r1314, %r1309, %r1310, 18;
	mov.b64 	%rd2016, {%r1314, %r1313};
	xor.b64  	%rd2017, %rd2016, %rd2015;
	shf.l.wrap.b32 	%r1315, %r1309, %r1310, 23;
	shf.l.wrap.b32 	%r1316, %r1310, %r1309, 23;
	mov.b64 	%rd2018, {%r1316, %r1315};
	xor.b64  	%rd2019, %rd2017, %rd2018;
	xor.b64  	%rd2020, %rd1974, %rd1947;
	and.b64  	%rd2021, %rd2001, %rd2020;
	xor.b64  	%rd2022, %rd2021, %rd1947;
	add.s64 	%rd2023, %rd1920, %rd2299;
	ld.const.u64 	%rd2024, [%rd2014];
	add.s64 	%rd2025, %rd2023, %rd2024;
	add.s64 	%rd2026, %rd2025, %rd2022;
	add.s64 	%rd2027, %rd2026, %rd2019;
	add.s64 	%rd2028, %rd2027, %rd1931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd2012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd2012;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 28;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 28;
	mov.b64 	%rd2029, {%r1320, %r1319};
	shf.l.wrap.b32 	%r1321, %r1317, %r1318, 30;
	shf.l.wrap.b32 	%r1322, %r1318, %r1317, 30;
	mov.b64 	%rd2030, {%r1322, %r1321};
	xor.b64  	%rd2031, %rd2030, %rd2029;
	shf.l.wrap.b32 	%r1323, %r1317, %r1318, 25;
	shf.l.wrap.b32 	%r1324, %r1318, %r1317, 25;
	mov.b64 	%rd2032, {%r1324, %r1323};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	xor.b64  	%rd2034, %rd2012, %rd1958;
	xor.b64  	%rd2035, %rd2012, %rd1985;
	and.b64  	%rd2036, %rd2035, %rd2034;
	xor.b64  	%rd2037, %rd2036, %rd2012;
	add.s64 	%rd2038, %rd2027, %rd2037;
	add.s64 	%rd2039, %rd2038, %rd2033;
	add.s32 	%r1325, %r1471, 9;
	mul.wide.s32 	%rd2040, %r1325, 8;
	add.s64 	%rd2041, %rd2221, %rd2040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd2028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd2028;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 14;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 14;
	mov.b64 	%rd2042, {%r1329, %r1328};
	shf.r.wrap.b32 	%r1330, %r1327, %r1326, 18;
	shf.r.wrap.b32 	%r1331, %r1326, %r1327, 18;
	mov.b64 	%rd2043, {%r1331, %r1330};
	xor.b64  	%rd2044, %rd2043, %rd2042;
	shf.l.wrap.b32 	%r1332, %r1326, %r1327, 23;
	shf.l.wrap.b32 	%r1333, %r1327, %r1326, 23;
	mov.b64 	%rd2045, {%r1333, %r1332};
	xor.b64  	%rd2046, %rd2044, %rd2045;
	xor.b64  	%rd2047, %rd2001, %rd1974;
	and.b64  	%rd2048, %rd2028, %rd2047;
	xor.b64  	%rd2049, %rd2048, %rd1974;
	add.s64 	%rd2050, %rd1947, %rd2300;
	ld.const.u64 	%rd2051, [%rd2041];
	add.s64 	%rd2052, %rd2050, %rd2051;
	add.s64 	%rd2053, %rd2052, %rd2049;
	add.s64 	%rd2054, %rd2053, %rd2046;
	add.s64 	%rd2055, %rd2054, %rd1958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd2039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd2039;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 28;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 28;
	mov.b64 	%rd2056, {%r1337, %r1336};
	shf.l.wrap.b32 	%r1338, %r1334, %r1335, 30;
	shf.l.wrap.b32 	%r1339, %r1335, %r1334, 30;
	mov.b64 	%rd2057, {%r1339, %r1338};
	xor.b64  	%rd2058, %rd2057, %rd2056;
	shf.l.wrap.b32 	%r1340, %r1334, %r1335, 25;
	shf.l.wrap.b32 	%r1341, %r1335, %r1334, 25;
	mov.b64 	%rd2059, {%r1341, %r1340};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	xor.b64  	%rd2061, %rd2039, %rd1985;
	xor.b64  	%rd2062, %rd2039, %rd2012;
	and.b64  	%rd2063, %rd2062, %rd2061;
	xor.b64  	%rd2064, %rd2063, %rd2039;
	add.s64 	%rd2065, %rd2054, %rd2064;
	add.s64 	%rd2066, %rd2065, %rd2060;
	add.s32 	%r1342, %r1471, 10;
	mul.wide.s32 	%rd2067, %r1342, 8;
	add.s64 	%rd2068, %rd2221, %rd2067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd2055;
	}
	shf.r.wrap.b32 	%r1345, %r1344, %r1343, 14;
	shf.r.wrap.b32 	%r1346, %r1343, %r1344, 14;
	mov.b64 	%rd2069, {%r1346, %r1345};
	shf.r.wrap.b32 	%r1347, %r1344, %r1343, 18;
	shf.r.wrap.b32 	%r1348, %r1343, %r1344, 18;
	mov.b64 	%rd2070, {%r1348, %r1347};
	xor.b64  	%rd2071, %rd2070, %rd2069;
	shf.l.wrap.b32 	%r1349, %r1343, %r1344, 23;
	shf.l.wrap.b32 	%r1350, %r1344, %r1343, 23;
	mov.b64 	%rd2072, {%r1350, %r1349};
	xor.b64  	%rd2073, %rd2071, %rd2072;
	xor.b64  	%rd2074, %rd2028, %rd2001;
	and.b64  	%rd2075, %rd2055, %rd2074;
	xor.b64  	%rd2076, %rd2075, %rd2001;
	add.s64 	%rd2077, %rd1974, %rd2301;
	ld.const.u64 	%rd2078, [%rd2068];
	add.s64 	%rd2079, %rd2077, %rd2078;
	add.s64 	%rd2080, %rd2079, %rd2076;
	add.s64 	%rd2081, %rd2080, %rd2073;
	add.s64 	%rd2082, %rd2081, %rd1985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd2066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd2066;
	}
	shf.r.wrap.b32 	%r1353, %r1352, %r1351, 28;
	shf.r.wrap.b32 	%r1354, %r1351, %r1352, 28;
	mov.b64 	%rd2083, {%r1354, %r1353};
	shf.l.wrap.b32 	%r1355, %r1351, %r1352, 30;
	shf.l.wrap.b32 	%r1356, %r1352, %r1351, 30;
	mov.b64 	%rd2084, {%r1356, %r1355};
	xor.b64  	%rd2085, %rd2084, %rd2083;
	shf.l.wrap.b32 	%r1357, %r1351, %r1352, 25;
	shf.l.wrap.b32 	%r1358, %r1352, %r1351, 25;
	mov.b64 	%rd2086, {%r1358, %r1357};
	xor.b64  	%rd2087, %rd2085, %rd2086;
	xor.b64  	%rd2088, %rd2066, %rd2012;
	xor.b64  	%rd2089, %rd2066, %rd2039;
	and.b64  	%rd2090, %rd2089, %rd2088;
	xor.b64  	%rd2091, %rd2090, %rd2066;
	add.s64 	%rd2092, %rd2081, %rd2091;
	add.s64 	%rd2093, %rd2092, %rd2087;
	add.s32 	%r1359, %r1471, 11;
	mul.wide.s32 	%rd2094, %r1359, 8;
	add.s64 	%rd2095, %rd2221, %rd2094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1360,%dummy}, %rd2082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1361}, %rd2082;
	}
	shf.r.wrap.b32 	%r1362, %r1361, %r1360, 14;
	shf.r.wrap.b32 	%r1363, %r1360, %r1361, 14;
	mov.b64 	%rd2096, {%r1363, %r1362};
	shf.r.wrap.b32 	%r1364, %r1361, %r1360, 18;
	shf.r.wrap.b32 	%r1365, %r1360, %r1361, 18;
	mov.b64 	%rd2097, {%r1365, %r1364};
	xor.b64  	%rd2098, %rd2097, %rd2096;
	shf.l.wrap.b32 	%r1366, %r1360, %r1361, 23;
	shf.l.wrap.b32 	%r1367, %r1361, %r1360, 23;
	mov.b64 	%rd2099, {%r1367, %r1366};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	xor.b64  	%rd2101, %rd2055, %rd2028;
	and.b64  	%rd2102, %rd2082, %rd2101;
	xor.b64  	%rd2103, %rd2102, %rd2028;
	add.s64 	%rd2104, %rd2001, %rd2302;
	ld.const.u64 	%rd2105, [%rd2095];
	add.s64 	%rd2106, %rd2104, %rd2105;
	add.s64 	%rd2107, %rd2106, %rd2103;
	add.s64 	%rd2108, %rd2107, %rd2100;
	add.s64 	%rd2109, %rd2108, %rd2012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1368,%dummy}, %rd2093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1369}, %rd2093;
	}
	shf.r.wrap.b32 	%r1370, %r1369, %r1368, 28;
	shf.r.wrap.b32 	%r1371, %r1368, %r1369, 28;
	mov.b64 	%rd2110, {%r1371, %r1370};
	shf.l.wrap.b32 	%r1372, %r1368, %r1369, 30;
	shf.l.wrap.b32 	%r1373, %r1369, %r1368, 30;
	mov.b64 	%rd2111, {%r1373, %r1372};
	xor.b64  	%rd2112, %rd2111, %rd2110;
	shf.l.wrap.b32 	%r1374, %r1368, %r1369, 25;
	shf.l.wrap.b32 	%r1375, %r1369, %r1368, 25;
	mov.b64 	%rd2113, {%r1375, %r1374};
	xor.b64  	%rd2114, %rd2112, %rd2113;
	xor.b64  	%rd2115, %rd2093, %rd2039;
	xor.b64  	%rd2116, %rd2093, %rd2066;
	and.b64  	%rd2117, %rd2116, %rd2115;
	xor.b64  	%rd2118, %rd2117, %rd2093;
	add.s64 	%rd2119, %rd2108, %rd2118;
	add.s64 	%rd2120, %rd2119, %rd2114;
	add.s32 	%r1376, %r1471, 12;
	mul.wide.s32 	%rd2121, %r1376, 8;
	add.s64 	%rd2122, %rd2221, %rd2121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1377,%dummy}, %rd2109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1378}, %rd2109;
	}
	shf.r.wrap.b32 	%r1379, %r1378, %r1377, 14;
	shf.r.wrap.b32 	%r1380, %r1377, %r1378, 14;
	mov.b64 	%rd2123, {%r1380, %r1379};
	shf.r.wrap.b32 	%r1381, %r1378, %r1377, 18;
	shf.r.wrap.b32 	%r1382, %r1377, %r1378, 18;
	mov.b64 	%rd2124, {%r1382, %r1381};
	xor.b64  	%rd2125, %rd2124, %rd2123;
	shf.l.wrap.b32 	%r1383, %r1377, %r1378, 23;
	shf.l.wrap.b32 	%r1384, %r1378, %r1377, 23;
	mov.b64 	%rd2126, {%r1384, %r1383};
	xor.b64  	%rd2127, %rd2125, %rd2126;
	xor.b64  	%rd2128, %rd2082, %rd2055;
	and.b64  	%rd2129, %rd2109, %rd2128;
	xor.b64  	%rd2130, %rd2129, %rd2055;
	add.s64 	%rd2131, %rd2028, %rd2303;
	ld.const.u64 	%rd2132, [%rd2122];
	add.s64 	%rd2133, %rd2131, %rd2132;
	add.s64 	%rd2134, %rd2133, %rd2130;
	add.s64 	%rd2135, %rd2134, %rd2127;
	add.s64 	%rd2290, %rd2135, %rd2039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1385,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1386}, %rd2120;
	}
	shf.r.wrap.b32 	%r1387, %r1386, %r1385, 28;
	shf.r.wrap.b32 	%r1388, %r1385, %r1386, 28;
	mov.b64 	%rd2136, {%r1388, %r1387};
	shf.l.wrap.b32 	%r1389, %r1385, %r1386, 30;
	shf.l.wrap.b32 	%r1390, %r1386, %r1385, 30;
	mov.b64 	%rd2137, {%r1390, %r1389};
	xor.b64  	%rd2138, %rd2137, %rd2136;
	shf.l.wrap.b32 	%r1391, %r1385, %r1386, 25;
	shf.l.wrap.b32 	%r1392, %r1386, %r1385, 25;
	mov.b64 	%rd2139, {%r1392, %r1391};
	xor.b64  	%rd2140, %rd2138, %rd2139;
	xor.b64  	%rd2141, %rd2120, %rd2066;
	xor.b64  	%rd2142, %rd2120, %rd2093;
	and.b64  	%rd2143, %rd2142, %rd2141;
	xor.b64  	%rd2144, %rd2143, %rd2120;
	add.s64 	%rd2145, %rd2135, %rd2144;
	add.s64 	%rd2286, %rd2145, %rd2140;
	add.s32 	%r1393, %r1471, 13;
	mul.wide.s32 	%rd2146, %r1393, 8;
	add.s64 	%rd2147, %rd2221, %rd2146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1394,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1395}, %rd2290;
	}
	shf.r.wrap.b32 	%r1396, %r1395, %r1394, 14;
	shf.r.wrap.b32 	%r1397, %r1394, %r1395, 14;
	mov.b64 	%rd2148, {%r1397, %r1396};
	shf.r.wrap.b32 	%r1398, %r1395, %r1394, 18;
	shf.r.wrap.b32 	%r1399, %r1394, %r1395, 18;
	mov.b64 	%rd2149, {%r1399, %r1398};
	xor.b64  	%rd2150, %rd2149, %rd2148;
	shf.l.wrap.b32 	%r1400, %r1394, %r1395, 23;
	shf.l.wrap.b32 	%r1401, %r1395, %r1394, 23;
	mov.b64 	%rd2151, {%r1401, %r1400};
	xor.b64  	%rd2152, %rd2150, %rd2151;
	xor.b64  	%rd2153, %rd2109, %rd2082;
	and.b64  	%rd2154, %rd2290, %rd2153;
	xor.b64  	%rd2155, %rd2154, %rd2082;
	add.s64 	%rd2156, %rd2055, %rd2304;
	ld.const.u64 	%rd2157, [%rd2147];
	add.s64 	%rd2158, %rd2156, %rd2157;
	add.s64 	%rd2159, %rd2158, %rd2155;
	add.s64 	%rd2160, %rd2159, %rd2152;
	add.s64 	%rd2289, %rd2160, %rd2066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1402,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1403}, %rd2286;
	}
	shf.r.wrap.b32 	%r1404, %r1403, %r1402, 28;
	shf.r.wrap.b32 	%r1405, %r1402, %r1403, 28;
	mov.b64 	%rd2161, {%r1405, %r1404};
	shf.l.wrap.b32 	%r1406, %r1402, %r1403, 30;
	shf.l.wrap.b32 	%r1407, %r1403, %r1402, 30;
	mov.b64 	%rd2162, {%r1407, %r1406};
	xor.b64  	%rd2163, %rd2162, %rd2161;
	shf.l.wrap.b32 	%r1408, %r1402, %r1403, 25;
	shf.l.wrap.b32 	%r1409, %r1403, %r1402, 25;
	mov.b64 	%rd2164, {%r1409, %r1408};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	xor.b64  	%rd2166, %rd2286, %rd2093;
	xor.b64  	%rd2167, %rd2286, %rd2120;
	and.b64  	%rd2168, %rd2167, %rd2166;
	xor.b64  	%rd2169, %rd2168, %rd2286;
	add.s64 	%rd2170, %rd2160, %rd2169;
	add.s64 	%rd2285, %rd2170, %rd2165;
	add.s32 	%r1410, %r1471, 14;
	mul.wide.s32 	%rd2171, %r1410, 8;
	add.s64 	%rd2172, %rd2221, %rd2171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1411,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1412}, %rd2289;
	}
	shf.r.wrap.b32 	%r1413, %r1412, %r1411, 14;
	shf.r.wrap.b32 	%r1414, %r1411, %r1412, 14;
	mov.b64 	%rd2173, {%r1414, %r1413};
	shf.r.wrap.b32 	%r1415, %r1412, %r1411, 18;
	shf.r.wrap.b32 	%r1416, %r1411, %r1412, 18;
	mov.b64 	%rd2174, {%r1416, %r1415};
	xor.b64  	%rd2175, %rd2174, %rd2173;
	shf.l.wrap.b32 	%r1417, %r1411, %r1412, 23;
	shf.l.wrap.b32 	%r1418, %r1412, %r1411, 23;
	mov.b64 	%rd2176, {%r1418, %r1417};
	xor.b64  	%rd2177, %rd2175, %rd2176;
	xor.b64  	%rd2178, %rd2290, %rd2109;
	and.b64  	%rd2179, %rd2289, %rd2178;
	xor.b64  	%rd2180, %rd2179, %rd2109;
	add.s64 	%rd2181, %rd2082, %rd2305;
	ld.const.u64 	%rd2182, [%rd2172];
	add.s64 	%rd2183, %rd2181, %rd2182;
	add.s64 	%rd2184, %rd2183, %rd2180;
	add.s64 	%rd2185, %rd2184, %rd2177;
	add.s64 	%rd2288, %rd2185, %rd2093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1419,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1420}, %rd2285;
	}
	shf.r.wrap.b32 	%r1421, %r1420, %r1419, 28;
	shf.r.wrap.b32 	%r1422, %r1419, %r1420, 28;
	mov.b64 	%rd2186, {%r1422, %r1421};
	shf.l.wrap.b32 	%r1423, %r1419, %r1420, 30;
	shf.l.wrap.b32 	%r1424, %r1420, %r1419, 30;
	mov.b64 	%rd2187, {%r1424, %r1423};
	xor.b64  	%rd2188, %rd2187, %rd2186;
	shf.l.wrap.b32 	%r1425, %r1419, %r1420, 25;
	shf.l.wrap.b32 	%r1426, %r1420, %r1419, 25;
	mov.b64 	%rd2189, {%r1426, %r1425};
	xor.b64  	%rd2190, %rd2188, %rd2189;
	xor.b64  	%rd2191, %rd2285, %rd2120;
	xor.b64  	%rd2192, %rd2285, %rd2286;
	and.b64  	%rd2193, %rd2192, %rd2191;
	xor.b64  	%rd2194, %rd2193, %rd2285;
	add.s64 	%rd2195, %rd2185, %rd2194;
	add.s64 	%rd2284, %rd2195, %rd2190;
	add.s32 	%r1427, %r1471, 15;
	mul.wide.s32 	%rd2196, %r1427, 8;
	add.s64 	%rd2197, %rd2221, %rd2196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1428,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1429}, %rd2288;
	}
	shf.r.wrap.b32 	%r1430, %r1429, %r1428, 14;
	shf.r.wrap.b32 	%r1431, %r1428, %r1429, 14;
	mov.b64 	%rd2198, {%r1431, %r1430};
	shf.r.wrap.b32 	%r1432, %r1429, %r1428, 18;
	shf.r.wrap.b32 	%r1433, %r1428, %r1429, 18;
	mov.b64 	%rd2199, {%r1433, %r1432};
	xor.b64  	%rd2200, %rd2199, %rd2198;
	shf.l.wrap.b32 	%r1434, %r1428, %r1429, 23;
	shf.l.wrap.b32 	%r1435, %r1429, %r1428, 23;
	mov.b64 	%rd2201, {%r1435, %r1434};
	xor.b64  	%rd2202, %rd2200, %rd2201;
	xor.b64  	%rd2203, %rd2289, %rd2290;
	and.b64  	%rd2204, %rd2288, %rd2203;
	xor.b64  	%rd2205, %rd2204, %rd2290;
	add.s64 	%rd2206, %rd2109, %rd2282;
	ld.const.u64 	%rd2207, [%rd2197];
	add.s64 	%rd2208, %rd2206, %rd2207;
	add.s64 	%rd2209, %rd2208, %rd2205;
	add.s64 	%rd2210, %rd2209, %rd2202;
	add.s64 	%rd2287, %rd2210, %rd2120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1436,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd2284;
	}
	shf.r.wrap.b32 	%r1438, %r1437, %r1436, 28;
	shf.r.wrap.b32 	%r1439, %r1436, %r1437, 28;
	mov.b64 	%rd2211, {%r1439, %r1438};
	shf.l.wrap.b32 	%r1440, %r1436, %r1437, 30;
	shf.l.wrap.b32 	%r1441, %r1437, %r1436, 30;
	mov.b64 	%rd2212, {%r1441, %r1440};
	xor.b64  	%rd2213, %rd2212, %rd2211;
	shf.l.wrap.b32 	%r1442, %r1436, %r1437, 25;
	shf.l.wrap.b32 	%r1443, %r1437, %r1436, 25;
	mov.b64 	%rd2214, {%r1443, %r1442};
	xor.b64  	%rd2215, %rd2213, %rd2214;
	xor.b64  	%rd2216, %rd2284, %rd2286;
	xor.b64  	%rd2217, %rd2284, %rd2285;
	and.b64  	%rd2218, %rd2217, %rd2216;
	xor.b64  	%rd2219, %rd2218, %rd2284;
	add.s64 	%rd2220, %rd2210, %rd2219;
	add.s64 	%rd2283, %rd2220, %rd2215;
	add.s32 	%r1471, %r1471, 16;
	setp.lt.s32	%p4, %r1471, 80;
	@%p4 bra 	BB2_6;

	ld.param.u32 	%r1444, [m07100_loop_param_29];
	add.s64 	%rd2267, %rd2283, %rd4;
	xor.b64  	%rd2249, %rd2249, %rd2267;
	add.s64 	%rd2268, %rd2284, %rd5;
	xor.b64  	%rd2248, %rd2248, %rd2268;
	add.s64 	%rd2269, %rd2285, %rd6;
	xor.b64  	%rd2247, %rd2247, %rd2269;
	add.s64 	%rd2270, %rd2286, %rd7;
	xor.b64  	%rd2246, %rd2246, %rd2270;
	add.s64 	%rd2271, %rd2287, %rd8;
	xor.b64  	%rd2245, %rd2245, %rd2271;
	add.s64 	%rd2272, %rd2288, %rd41;
	xor.b64  	%rd2244, %rd2244, %rd2272;
	add.s64 	%rd2273, %rd2289, %rd40;
	xor.b64  	%rd2243, %rd2243, %rd2273;
	add.s64 	%rd2274, %rd2290, %rd9;
	xor.b64  	%rd2242, %rd2242, %rd2274;
	add.s32 	%r1469, %r1469, 1;
	setp.lt.u32	%p5, %r1469, %r1444;
	@%p5 bra 	BB2_3;

	st.global.u64 	[%rd50], %rd2249;
	st.global.u64 	[%rd51], %rd2248;
	st.global.u64 	[%rd52], %rd2247;
	st.global.u64 	[%rd53], %rd2246;
	st.global.u64 	[%rd54], %rd2245;
	st.global.u64 	[%rd55], %rd2244;
	st.global.u64 	[%rd56], %rd2243;
	st.global.u64 	[%rd57], %rd2242;

BB2_9:
	mov.b32	%r1468, %envreg3;
	mov.u32 	%r1467, %ntid.x;
	mov.u32 	%r1466, %ctaid.x;
	mov.u32 	%r1465, %tid.x;
	mad.lo.s32 	%r1464, %r1466, %r1467, %r1468;
	add.s32 	%r1463, %r1464, %r1465;
	mul.wide.u32 	%rd2241, %r1463, 384;
	ld.param.u64 	%rd2240, [m07100_loop_param_4];
	add.s64 	%rd2239, %rd2240, %rd2241;
	add.s64 	%rd2238, %rd2239, 184;
	mov.b32	%r1462, %envreg3;
	mov.u32 	%r1461, %ntid.x;
	mov.u32 	%r1460, %ctaid.x;
	mov.u32 	%r1459, %tid.x;
	mad.lo.s32 	%r1458, %r1460, %r1461, %r1462;
	add.s32 	%r1457, %r1458, %r1459;
	mul.wide.u32 	%rd2237, %r1457, 384;
	ld.param.u64 	%rd2236, [m07100_loop_param_4];
	add.s64 	%rd2235, %rd2236, %rd2237;
	add.s64 	%rd2234, %rd2235, 176;
	ld.param.u64 	%rd2233, [m07100_loop_param_4];
	mov.b32	%r1456, %envreg3;
	mov.u32 	%r1455, %ntid.x;
	mov.u32 	%r1454, %ctaid.x;
	mov.u32 	%r1453, %tid.x;
	mad.lo.s32 	%r1452, %r1454, %r1455, %r1456;
	add.s32 	%r1451, %r1452, %r1453;
	mul.wide.u32 	%rd2232, %r1451, 384;
	add.s64 	%rd2231, %rd2233, %rd2232;
	add.s64 	%rd2230, %rd2231, 168;
	add.s64 	%rd2229, %rd2231, 160;
	mov.b32	%r1450, %envreg3;
	mov.u32 	%r1449, %ntid.x;
	mov.u32 	%r1448, %ctaid.x;
	mov.u32 	%r1447, %tid.x;
	mad.lo.s32 	%r1446, %r1448, %r1449, %r1450;
	add.s32 	%r1445, %r1446, %r1447;
	mul.wide.u32 	%rd2228, %r1445, 384;
	ld.param.u64 	%rd2227, [m07100_loop_param_4];
	add.s64 	%rd2226, %rd2227, %rd2228;
	add.s64 	%rd2225, %rd2226, 152;
	add.s64 	%rd2224, %rd2226, 144;
	add.s64 	%rd2223, %rd2226, 136;
	add.s64 	%rd2222, %rd2226, 128;
	st.global.u64 	[%rd2222], %rd2267;
	st.global.u64 	[%rd2223], %rd2268;
	st.global.u64 	[%rd2224], %rd2269;
	st.global.u64 	[%rd2225], %rd2270;
	st.global.u64 	[%rd2229], %rd2271;
	st.global.u64 	[%rd2230], %rd2272;
	st.global.u64 	[%rd2234], %rd2273;
	st.global.u64 	[%rd2238], %rd2274;

BB2_10:
	ret;
}

	// .globl	m07100_comp
.entry m07100_comp(
	.param .u64 .ptr .global .align 4 m07100_comp_param_0,
	.param .u64 .ptr .global .align 4 m07100_comp_param_1,
	.param .u64 .ptr .global .align 4 m07100_comp_param_2,
	.param .u64 .ptr .global .align 4 m07100_comp_param_3,
	.param .u64 .ptr .global .align 8 m07100_comp_param_4,
	.param .u64 .ptr .global .align 1 m07100_comp_param_5,
	.param .u64 .ptr .global .align 4 m07100_comp_param_6,
	.param .u64 .ptr .global .align 4 m07100_comp_param_7,
	.param .u64 .ptr .global .align 4 m07100_comp_param_8,
	.param .u64 .ptr .global .align 4 m07100_comp_param_9,
	.param .u64 .ptr .global .align 4 m07100_comp_param_10,
	.param .u64 .ptr .global .align 4 m07100_comp_param_11,
	.param .u64 .ptr .global .align 4 m07100_comp_param_12,
	.param .u64 .ptr .global .align 4 m07100_comp_param_13,
	.param .u64 .ptr .global .align 4 m07100_comp_param_14,
	.param .u64 .ptr .global .align 4 m07100_comp_param_15,
	.param .u64 .ptr .global .align 4 m07100_comp_param_16,
	.param .u64 .ptr .global .align 4 m07100_comp_param_17,
	.param .u64 .ptr .global .align 4 m07100_comp_param_18,
	.param .u64 .ptr .global .align 4 m07100_comp_param_19,
	.param .u64 .ptr .global .align 4 m07100_comp_param_20,
	.param .u64 .ptr .global .align 4 m07100_comp_param_21,
	.param .u64 .ptr .global .align 4 m07100_comp_param_22,
	.param .u64 .ptr .global .align 4 m07100_comp_param_23,
	.param .u32 m07100_comp_param_24,
	.param .u32 m07100_comp_param_25,
	.param .u32 m07100_comp_param_26,
	.param .u32 m07100_comp_param_27,
	.param .u32 m07100_comp_param_28,
	.param .u32 m07100_comp_param_29,
	.param .u32 m07100_comp_param_30,
	.param .u32 m07100_comp_param_31,
	.param .u32 m07100_comp_param_32,
	.param .u32 m07100_comp_param_33,
	.param .u32 m07100_comp_param_34
)
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<117>;
	.reg .b64 	%rd<56>;


	ld.param.u64 	%rd4, [m07100_comp_param_4];
	ld.param.u64 	%rd5, [m07100_comp_param_6];
	ld.param.u64 	%rd6, [m07100_comp_param_7];
	ld.param.u64 	%rd7, [m07100_comp_param_8];
	ld.param.u64 	%rd8, [m07100_comp_param_9];
	ld.param.u64 	%rd9, [m07100_comp_param_10];
	ld.param.u64 	%rd10, [m07100_comp_param_11];
	ld.param.u64 	%rd11, [m07100_comp_param_12];
	ld.param.u64 	%rd12, [m07100_comp_param_13];
	ld.param.u64 	%rd13, [m07100_comp_param_14];
	ld.param.u64 	%rd14, [m07100_comp_param_15];
	ld.param.u64 	%rd15, [m07100_comp_param_16];
	ld.param.u64 	%rd16, [m07100_comp_param_19];
	ld.param.u32 	%r22, [m07100_comp_param_24];
	ld.param.u32 	%r23, [m07100_comp_param_25];
	ld.param.u32 	%r24, [m07100_comp_param_26];
	ld.param.u32 	%r25, [m07100_comp_param_27];
	ld.param.u32 	%r26, [m07100_comp_param_31];
	ld.param.u32 	%r27, [m07100_comp_param_32];
	ld.param.u32 	%r28, [m07100_comp_param_34];
	mov.b32	%r29, %envreg3;
	mov.u32 	%r30, %ctaid.x;
	mov.u32 	%r31, %ntid.x;
	mad.lo.s32 	%r32, %r30, %r31, %r29;
	mov.u32 	%r33, %tid.x;
	add.s32 	%r1, %r32, %r33;
	setp.ge.u32	%p1, %r1, %r28;
	@%p1 bra 	BB3_29;

	mul.wide.u32 	%rd17, %r1, 384;
	add.s64 	%rd18, %rd4, %rd17;
	ld.global.u64 	%rd1, [%rd18+256];
	cvt.u32.u64	%r34, %rd1;
	ld.global.u64 	%rd2, [%rd18+264];
	shr.u64 	%rd19, %rd2, 32;
	cvt.u32.u64	%r2, %rd19;
	and.b32  	%r3, %r23, 31;
	shr.u32 	%r35, %r34, %r3;
	and.b32  	%r36, %r35, %r22;
	mul.wide.u32 	%rd20, %r36, 4;
	add.s64 	%rd21, %rd5, %rd20;
	and.b32  	%r37, %r34, 31;
	mov.u32 	%r38, 1;
	shl.b32 	%r4, %r38, %r37;
	ld.global.u32 	%r39, [%rd21];
	and.b32  	%r40, %r4, %r39;
	setp.eq.s32	%p2, %r40, 0;
	@%p2 bra 	BB3_29;

	shr.u64 	%rd22, %rd1, 32;
	cvt.u32.u64	%r41, %rd22;
	shr.u32 	%r42, %r41, %r3;
	and.b32  	%r43, %r42, %r22;
	mul.wide.u32 	%rd23, %r43, 4;
	add.s64 	%rd24, %rd6, %rd23;
	and.b32  	%r44, %r41, 31;
	shl.b32 	%r46, %r38, %r44;
	ld.global.u32 	%r47, [%rd24];
	and.b32  	%r48, %r47, %r46;
	setp.eq.s32	%p3, %r48, 0;
	@%p3 bra 	BB3_29;

	cvt.u32.u64	%r49, %rd2;
	shr.u32 	%r50, %r49, %r3;
	and.b32  	%r51, %r50, %r22;
	mul.wide.u32 	%rd25, %r51, 4;
	add.s64 	%rd26, %rd7, %rd25;
	and.b32  	%r52, %r49, 31;
	shl.b32 	%r54, %r38, %r52;
	ld.global.u32 	%r55, [%rd26];
	and.b32  	%r56, %r55, %r54;
	setp.eq.s32	%p4, %r56, 0;
	@%p4 bra 	BB3_29;

	shr.u32 	%r57, %r2, %r3;
	and.b32  	%r58, %r57, %r22;
	mul.wide.u32 	%rd27, %r58, 4;
	add.s64 	%rd28, %rd8, %rd27;
	and.b32  	%r59, %r2, 31;
	shl.b32 	%r5, %r38, %r59;
	ld.global.u32 	%r61, [%rd28];
	and.b32  	%r62, %r61, %r5;
	setp.eq.s32	%p5, %r62, 0;
	@%p5 bra 	BB3_29;

	and.b32  	%r6, %r24, 31;
	shr.u32 	%r64, %r34, %r6;
	and.b32  	%r65, %r64, %r22;
	mul.wide.u32 	%rd29, %r65, 4;
	add.s64 	%rd30, %rd9, %rd29;
	ld.global.u32 	%r66, [%rd30];
	and.b32  	%r67, %r66, %r4;
	setp.eq.s32	%p6, %r67, 0;
	@%p6 bra 	BB3_29;

	shr.u32 	%r69, %r41, %r6;
	and.b32  	%r70, %r69, %r22;
	mul.wide.u32 	%rd32, %r70, 4;
	add.s64 	%rd33, %rd10, %rd32;
	ld.global.u32 	%r74, [%rd33];
	and.b32  	%r75, %r74, %r46;
	setp.eq.s32	%p7, %r75, 0;
	@%p7 bra 	BB3_29;

	shr.u32 	%r77, %r49, %r6;
	and.b32  	%r78, %r77, %r22;
	mul.wide.u32 	%rd34, %r78, 4;
	add.s64 	%rd35, %rd11, %rd34;
	ld.global.u32 	%r82, [%rd35];
	and.b32  	%r83, %r82, %r54;
	setp.eq.s32	%p8, %r83, 0;
	@%p8 bra 	BB3_29;

	shr.u32 	%r84, %r2, %r6;
	and.b32  	%r85, %r84, %r22;
	mul.wide.u32 	%rd36, %r85, 4;
	add.s64 	%rd37, %rd12, %rd36;
	ld.global.u32 	%r86, [%rd37];
	and.b32  	%r87, %r86, %r5;
	setp.eq.s32	%p9, %r87, 0;
	@%p9 bra 	BB3_29;

	setp.eq.s32	%p10, %r26, 0;
	mov.u32 	%r114, 0;
	mov.u32 	%r88, -1;
	@%p10 bra 	BB3_23;

	mov.u32 	%r113, %r26;

BB3_11:
	shr.u32 	%r9, %r113, 1;
	add.s32 	%r116, %r9, %r114;
	cvt.u64.u32	%rd38, %r116;
	cvt.u64.u32	%rd39, %r27;
	add.s64 	%rd3, %rd38, %rd39;
	shl.b64 	%rd40, %rd3, 7;
	add.s64 	%rd41, %rd14, %rd40;
	ld.global.u32 	%r11, [%rd41+12];
	setp.gt.u32	%p11, %r2, %r11;
	mov.u32 	%r115, %r38;
	@%p11 bra 	BB3_21;

	setp.lt.u32	%p12, %r2, %r11;
	mov.u32 	%r92, -1;
	@%p12 bra 	BB3_13;
	bra.uni 	BB3_14;

BB3_13:
	mov.u32 	%r115, %r92;
	bra.uni 	BB3_21;

BB3_14:
	ld.global.u32 	%r12, [%rd41+8];
	setp.gt.u32	%p13, %r49, %r12;
	mov.u32 	%r115, %r38;
	@%p13 bra 	BB3_21;

	setp.lt.u32	%p14, %r49, %r12;
	@%p14 bra 	BB3_16;
	bra.uni 	BB3_17;

BB3_16:
	mov.u32 	%r115, %r92;
	bra.uni 	BB3_21;

BB3_17:
	ld.global.u32 	%r13, [%rd41+4];
	setp.gt.u32	%p15, %r41, %r13;
	mov.u32 	%r115, %r38;
	@%p15 bra 	BB3_21;

	setp.lt.u32	%p16, %r41, %r13;
	mov.u32 	%r115, %r92;
	@%p16 bra 	BB3_21;

	ld.global.u32 	%r14, [%rd41];
	setp.gt.u32	%p17, %r34, %r14;
	mov.u32 	%r115, %r38;
	@%p17 bra 	BB3_21;

	setp.lt.u32	%p18, %r34, %r14;
	selp.b32	%r115, -1, 0, %p18;

BB3_21:
	add.s32 	%r105, %r9, 1;
	setp.gt.s32	%p19, %r115, 0;
	selp.b32	%r106, %r105, 0, %p19;
	add.s32 	%r114, %r106, %r114;
	selp.b32	%r107, -1, 0, %p19;
	add.s32 	%r108, %r107, %r113;
	shr.u32 	%r113, %r108, 1;
	setp.eq.s32	%p20, %r115, 0;
	@%p20 bra 	BB3_24;

	setp.ne.s32	%p21, %r113, 0;
	@%p21 bra 	BB3_11;

BB3_23:
	mov.u32 	%r116, %r88;

BB3_24:
	setp.eq.s32	%p22, %r116, -1;
	@%p22 bra 	BB3_29;

	add.s32 	%r20, %r116, %r27;
	mul.wide.u32 	%rd52, %r20, 4;
	add.s64 	%rd53, %rd15, %rd52;
	atom.global.add.u32 	%r110, [%rd53], 1;
	setp.ne.s32	%p23, %r110, 0;
	@%p23 bra 	BB3_29;

	atom.global.add.u32 	%r21, [%rd16], 1;
	setp.lt.u32	%p24, %r21, %r26;
	@%p24 bra 	BB3_28;
	bra.uni 	BB3_27;

BB3_28:
	mul.wide.u32 	%rd54, %r21, 20;
	add.s64 	%rd55, %rd13, %rd54;
	st.global.u32 	[%rd55], %r25;
	st.global.u32 	[%rd55+4], %r116;
	st.global.u32 	[%rd55+8], %r20;
	st.global.u32 	[%rd55+12], %r1;
	mov.u32 	%r112, 0;
	st.global.u32 	[%rd55+16], %r112;
	bra.uni 	BB3_29;

BB3_27:
	atom.global.add.u32 	%r111, [%rd16], -1;

BB3_29:
	ret;
}


  